
002ce0d28ec990aadbbc89df457189de37d8adaadc9c084b78eb7be9a9820c81.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	ret    0x0
   140001003:	int3   
   140001004:	mov    QWORD PTR [rsp+0x8],rbx
   140001009:	xor    ebx,ebx
   14000100b:	lea    rax,[rdx-0x1]
   14000100f:	mov    r10d,0x7ffffffe
   140001015:	cmp    rax,r10
   140001018:	mov    r9d,ebx
   14000101b:	mov    r11d,0x80070057
   140001021:	cmova  r9d,r11d
   140001025:	test   r9d,r9d
   140001028:	js     0x140001068
   14000102a:	mov    r9d,ebx
   14000102d:	test   rdx,rdx
   140001030:	je     0x14000105c
   140001032:	sub    r10,rdx
   140001035:	sub    r8,rcx
   140001038:	lea    rax,[r10+rdx*1]
   14000103c:	test   rax,rax
   14000103f:	je     0x140001057
   140001041:	movzx  eax,WORD PTR [r8+rcx*1]
   140001046:	test   ax,ax
   140001049:	je     0x140001057
   14000104b:	mov    WORD PTR [rcx],ax
   14000104e:	add    rcx,0x2
   140001052:	dec    rdx
   140001055:	jne    0x140001038
   140001057:	test   rdx,rdx
   14000105a:	jne    0x14000106d
   14000105c:	sub    rcx,0x2
   140001060:	mov    r9d,0x8007007a
   140001066:	jmp    0x14000106d
   140001068:	test   rdx,rdx
   14000106b:	je     0x140001070
   14000106d:	mov    WORD PTR [rcx],bx
   140001070:	mov    rbx,QWORD PTR [rsp+0x8]
   140001075:	mov    eax,r9d
   140001078:	ret    
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	lea    rax,[rip+0x43ff5]        # 0x140045078
   140001083:	mov    QWORD PTR [rcx],rax
   140001086:	ret    
   140001087:	int3   
   140001088:	rex push rbx
   14000108a:	sub    rsp,0x20
   14000108e:	lea    rax,[rip+0x43fe3]        # 0x140045078
   140001095:	mov    rbx,rcx
   140001098:	mov    QWORD PTR [rcx],rax
   14000109b:	test   dl,0x1
   14000109e:	je     0x1400010a5
   1400010a0:	call   0x14002657c
   1400010a5:	mov    rax,rbx
   1400010a8:	add    rsp,0x20
   1400010ac:	pop    rbx
   1400010ad:	ret    
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    DWORD PTR [rdx],r8d
   1400010b3:	mov    QWORD PTR [rdx+0x8],rcx
   1400010b7:	mov    rax,rdx
   1400010ba:	ret    
   1400010bb:	int3   
   1400010bc:	rex push rbx
   1400010be:	sub    rsp,0x30
   1400010c2:	mov    rax,QWORD PTR [rcx]
   1400010c5:	mov    rbx,r8
   1400010c8:	mov    r8d,edx
   1400010cb:	lea    rdx,[rsp+0x20]
   1400010d0:	call   QWORD PTR [rax+0x18]
   1400010d3:	mov    rcx,QWORD PTR [rbx+0x8]
   1400010d7:	cmp    QWORD PTR [rax+0x8],rcx
   1400010db:	jne    0x1400010ea
   1400010dd:	mov    ecx,DWORD PTR [rbx]
   1400010df:	cmp    DWORD PTR [rax],ecx
   1400010e1:	jne    0x1400010ea
   1400010e3:	mov    eax,0x1
   1400010e8:	jmp    0x1400010ec
   1400010ea:	xor    eax,eax
   1400010ec:	add    rsp,0x30
   1400010f0:	pop    rbx
   1400010f1:	ret    
   1400010f2:	int3   
   1400010f3:	int3   
   1400010f4:	cmp    rcx,QWORD PTR [rdx+0x8]
   1400010f8:	jne    0x140001105
   1400010fa:	cmp    DWORD PTR [rdx],r8d
   1400010fd:	jne    0x140001105
   1400010ff:	mov    eax,0x1
   140001104:	ret    
   140001105:	xor    eax,eax
   140001107:	ret    
   140001108:	lea    rax,[rip+0x44429]        # 0x140045538
   14000110f:	ret    
   140001110:	mov    rax,rsp
   140001113:	mov    QWORD PTR [rax+0x10],rdx
   140001117:	push   rdi
   140001118:	sub    rsp,0x30
   14000111c:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140001124:	mov    QWORD PTR [rax+0x8],rbx
   140001128:	mov    rdi,rdx
   14000112b:	xor    ebx,ebx
   14000112d:	mov    DWORD PTR [rax-0x18],ebx
   140001130:	mov    ecx,r8d
   140001133:	call   0x140031e04
   140001138:	lea    rdx,[rip+0x44401]        # 0x140045540
   14000113f:	test   rax,rax
   140001142:	cmovne rdx,rax
   140001146:	mov    QWORD PTR [rdi+0x18],0xf
   14000114e:	mov    QWORD PTR [rdi+0x10],rbx
   140001152:	mov    BYTE PTR [rdi],bl
   140001154:	cmp    BYTE PTR [rdx],bl
   140001156:	je     0x140001167
   140001158:	or     rax,0xffffffffffffffff
   14000115c:	inc    rax
   14000115f:	cmp    BYTE PTR [rdx+rax*1],bl
   140001162:	jne    0x14000115c
   140001164:	mov    rbx,rax
   140001167:	mov    r8,rbx
   14000116a:	mov    rcx,rdi
   14000116d:	call   0x1400035c4
   140001172:	nop
   140001173:	mov    DWORD PTR [rsp+0x20],0x1
   14000117b:	mov    rax,rdi
   14000117e:	mov    rbx,QWORD PTR [rsp+0x40]
   140001183:	add    rsp,0x30
   140001187:	pop    rdi
   140001188:	ret    
   140001189:	int3   
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	mov    QWORD PTR [rsp+0x8],rcx
   140001191:	push   rbx
   140001192:	sub    rsp,0x30
   140001196:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000119f:	mov    rbx,rcx
   1400011a2:	lea    rax,[rip+0x43ecf]        # 0x140045078
   1400011a9:	mov    QWORD PTR [rcx],rax
   1400011ac:	test   dl,0x1
   1400011af:	je     0x1400011b6
   1400011b1:	call   0x14002657c
   1400011b6:	mov    rax,rbx
   1400011b9:	add    rsp,0x30
   1400011bd:	pop    rbx
   1400011be:	ret    
   1400011bf:	int3   
   1400011c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400011c5:	sub    rsp,0x18
   1400011c9:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   1400011d1:	lea    rax,[rip+0x43ea0]        # 0x140045078
   1400011d8:	mov    QWORD PTR [rcx],rax
   1400011db:	add    rsp,0x18
   1400011df:	ret    
   1400011e0:	lea    rax,[rip+0x44369]        # 0x140045550
   1400011e7:	ret    
   1400011e8:	mov    QWORD PTR [rsp+0x10],rdx
   1400011ed:	push   rbx
   1400011ee:	sub    rsp,0x30
   1400011f2:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400011fb:	mov    rbx,rdx
   1400011fe:	xor    eax,eax
   140001200:	mov    DWORD PTR [rsp+0x20],eax
   140001204:	cmp    r8d,0x1
   140001208:	jne    0x14000122d
   14000120a:	mov    QWORD PTR [rdx+0x18],0xf
   140001212:	mov    QWORD PTR [rdx+0x10],rax
   140001216:	mov    BYTE PTR [rdx],al
   140001218:	lea    r8d,[rax+0x15]
   14000121c:	lea    rdx,[rip+0x4433d]        # 0x140045560
   140001223:	mov    rcx,rbx
   140001226:	call   0x1400035c4
   14000122b:	jmp    0x140001233
   14000122d:	call   0x140001110
   140001232:	nop
   140001233:	mov    DWORD PTR [rsp+0x20],0x1
   14000123b:	mov    rax,rbx
   14000123e:	add    rsp,0x30
   140001242:	pop    rbx
   140001243:	ret    
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	mov    QWORD PTR [rsp+0x8],rcx
   14000124d:	push   rbx
   14000124e:	sub    rsp,0x30
   140001252:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000125b:	mov    rbx,rcx
   14000125e:	lea    rax,[rip+0x43e13]        # 0x140045078
   140001265:	mov    QWORD PTR [rcx],rax
   140001268:	test   dl,0x1
   14000126b:	je     0x140001272
   14000126d:	call   0x14002657c
   140001272:	mov    rax,rbx
   140001275:	add    rsp,0x30
   140001279:	pop    rbx
   14000127a:	ret    
   14000127b:	int3   
   14000127c:	lea    rax,[rip+0x442f5]        # 0x140045578
   140001283:	ret    
   140001284:	mov    rax,rsp
   140001287:	mov    QWORD PTR [rax+0x10],rdx
   14000128b:	push   rdi
   14000128c:	sub    rsp,0x30
   140001290:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140001298:	mov    QWORD PTR [rax+0x8],rbx
   14000129c:	mov    rdi,rdx
   14000129f:	xor    ebx,ebx
   1400012a1:	mov    DWORD PTR [rax-0x18],ebx
   1400012a4:	mov    ecx,r8d
   1400012a7:	call   0x140031e2c
   1400012ac:	lea    rdx,[rip+0x4428d]        # 0x140045540
   1400012b3:	test   rax,rax
   1400012b6:	cmovne rdx,rax
   1400012ba:	mov    QWORD PTR [rdi+0x18],0xf
   1400012c2:	mov    QWORD PTR [rdi+0x10],rbx
   1400012c6:	mov    BYTE PTR [rdi],bl
   1400012c8:	cmp    BYTE PTR [rdx],bl
   1400012ca:	je     0x1400012db
   1400012cc:	or     rax,0xffffffffffffffff
   1400012d0:	inc    rax
   1400012d3:	cmp    BYTE PTR [rdx+rax*1],bl
   1400012d6:	jne    0x1400012d0
   1400012d8:	mov    rbx,rax
   1400012db:	mov    r8,rbx
   1400012de:	mov    rcx,rdi
   1400012e1:	call   0x1400035c4
   1400012e6:	nop
   1400012e7:	mov    DWORD PTR [rsp+0x20],0x1
   1400012ef:	mov    rax,rdi
   1400012f2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400012f7:	add    rsp,0x30
   1400012fb:	pop    rdi
   1400012fc:	ret    
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	mov    QWORD PTR [rsp+0x8],rbx
   140001305:	push   rdi
   140001306:	sub    rsp,0x20
   14000130a:	mov    ecx,r8d
   14000130d:	mov    edi,r8d
   140001310:	mov    rbx,rdx
   140001313:	call   0x140031e04
   140001318:	mov    DWORD PTR [rbx],edi
   14000131a:	test   rax,rax
   14000131d:	lea    rax,[rip+0x5a12c]        # 0x14005b450
   140001324:	jne    0x14000132d
   140001326:	lea    rax,[rip+0x5a113]        # 0x14005b440
   14000132d:	mov    QWORD PTR [rbx+0x8],rax
   140001331:	mov    rax,rbx
   140001334:	mov    rbx,QWORD PTR [rsp+0x30]
   140001339:	add    rsp,0x20
   14000133d:	pop    rdi
   14000133e:	ret    
   14000133f:	int3   
   140001340:	mov    r11,rsp
   140001343:	mov    DWORD PTR [r11+0x18],r8d
   140001347:	mov    QWORD PTR [r11+0x8],rcx
   14000134b:	mov    QWORD PTR [r11+0x20],r9
   14000134f:	push   rbx
   140001350:	sub    rsp,0x30
   140001354:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   14000135c:	mov    rbx,rcx
   14000135f:	mov    DWORD PTR [rcx],0x1
   140001365:	mov    DWORD PTR [rcx+0x4],edx
   140001368:	xor    eax,eax
   14000136a:	mov    QWORD PTR [rcx+0x8],rax
   14000136e:	mov    QWORD PTR [rcx+0x10],rax
   140001372:	mov    QWORD PTR [rcx+0x18],rax
   140001376:	mov    QWORD PTR [rcx+0x20],rax
   14000137a:	mov    QWORD PTR [rcx+0x28],rax
   14000137e:	mov    QWORD PTR [rcx+0x30],rax
   140001382:	mov    edx,DWORD PTR [rsp+0x50]
   140001386:	test   edx,edx
   140001388:	je     0x140001394
   14000138a:	lea    r8,[r11+0x20]
   14000138e:	call   0x1400109f0
   140001393:	nop
   140001394:	mov    rax,rbx
   140001397:	add    rsp,0x30
   14000139b:	pop    rbx
   14000139c:	ret    
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	mov    rax,rsp
   1400013a3:	push   rbp
   1400013a4:	push   r12
   1400013a6:	push   r15
   1400013a8:	lea    rbp,[rax-0x108]
   1400013af:	sub    rsp,0x1f0
   1400013b6:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   1400013bf:	mov    QWORD PTR [rax+0x10],rbx
   1400013c3:	mov    QWORD PTR [rax+0x18],rsi
   1400013c7:	mov    QWORD PTR [rax+0x20],rdi
   1400013cb:	mov    rax,QWORD PTR [rip+0x57cb6]        # 0x140059088
   1400013d2:	xor    rax,rsp
   1400013d5:	mov    QWORD PTR [rbp+0xe0],rax
   1400013dc:	mov    rbx,rcx
   1400013df:	xor    r15d,r15d
   1400013e2:	mov    edi,r15d
   1400013e5:	mov    DWORD PTR [rsp+0x40],r15d
   1400013ea:	mov    esi,r15d
   1400013ed:	mov    DWORD PTR [rsp+0x38],r15d
   1400013f2:	lea    r12d,[r15+0x1]
   1400013f6:	mov    r8d,r12d
   1400013f9:	lea    rdx,[rip+0x44dc8]        # 0x1400461c8
   140001400:	xor    ecx,ecx
   140001402:	call   QWORD PTR [rip+0x3fd90]        # 0x140041198
   140001408:	test   rax,rax
   14000140b:	je     0x140001427
   14000140d:	mov    r8,rax
   140001410:	lea    rdx,[rsp+0x38]
   140001415:	lea    rcx,[rsp+0x40]
   14000141a:	call   0x140024b00
   14000141f:	mov    esi,DWORD PTR [rsp+0x38]
   140001423:	mov    edi,DWORD PTR [rsp+0x40]
   140001427:	mov    rax,QWORD PTR [rbx]
   14000142a:	xor    r9d,r9d
   14000142d:	xor    r8d,r8d
   140001430:	mov    edx,0x61230d4c
   140001435:	mov    rcx,rbx
   140001438:	call   QWORD PTR [rax]
   14000143a:	lea    rax,[rip+0x4413f]        # 0x140045580
   140001441:	test   esi,esi
   140001443:	je     0x140001456
   140001445:	mov    QWORD PTR [rsp+0x40],rax
   14000144a:	lea    r9,[rsp+0x40]
   14000144f:	mov    edx,0x61230d3c
   140001454:	jmp    0x14000147a
   140001456:	test   edi,edi
   140001458:	je     0x14000146b
   14000145a:	mov    QWORD PTR [rsp+0x38],rax
   14000145f:	lea    r9,[rsp+0x38]
   140001464:	mov    edx,0x61230d3d
   140001469:	jmp    0x14000147a
   14000146b:	mov    QWORD PTR [rsp+0x30],rax
   140001470:	lea    r9,[rsp+0x30]
   140001475:	mov    edx,0x61230d3e
   14000147a:	mov    rax,QWORD PTR [rbx]
   14000147d:	mov    r8d,r12d
   140001480:	mov    rcx,rbx
   140001483:	call   QWORD PTR [rax]
   140001485:	mov    r8,QWORD PTR [rip+0x59674]        # 0x14005ab00
   14000148c:	mov    rdx,QWORD PTR [rip+0x59675]        # 0x14005ab08
   140001493:	lea    rcx,[rbp-0x18]
   140001497:	call   0x14000fca0
   14000149c:	nop
   14000149d:	lea    rax,[rip+0x44304]        # 0x1400457a8
   1400014a4:	mov    QWORD PTR [rbp-0x20],rax
   1400014a8:	lea    rax,[rip+0x442e1]        # 0x140045790
   1400014af:	mov    QWORD PTR [rbp-0x20],rax
   1400014b3:	mov    edi,r15d
   1400014b6:	mov    DWORD PTR [rsp+0x40],r15d
   1400014bb:	mov    esi,r15d
   1400014be:	mov    DWORD PTR [rsp+0x38],r15d
   1400014c3:	mov    r8d,r12d
   1400014c6:	lea    rdx,[rip+0x44cfb]        # 0x1400461c8
   1400014cd:	xor    ecx,ecx
   1400014cf:	call   QWORD PTR [rip+0x3fcc3]        # 0x140041198
   1400014d5:	test   rax,rax
   1400014d8:	je     0x1400014f8
   1400014da:	mov    r9,rax
   1400014dd:	lea    r8,[rsp+0x38]
   1400014e2:	lea    rdx,[rsp+0x40]
   1400014e7:	lea    rcx,[rbp-0x18]
   1400014eb:	call   0x14000f5d4
   1400014f0:	mov    esi,DWORD PTR [rsp+0x38]
   1400014f4:	mov    edi,DWORD PTR [rsp+0x40]
   1400014f8:	mov    rax,QWORD PTR [rbx]
   1400014fb:	xor    r9d,r9d
   1400014fe:	xor    r8d,r8d
   140001501:	mov    edx,0x61230d4b
   140001506:	mov    rcx,rbx
   140001509:	call   QWORD PTR [rax]
   14000150b:	test   esi,esi
   14000150d:	je     0x140001516
   14000150f:	mov    edx,0x61230d3c
   140001514:	jmp    0x140001524
   140001516:	test   edi,edi
   140001518:	mov    edx,0x61230d3d
   14000151d:	jne    0x140001524
   14000151f:	mov    edx,0x61230d3e
   140001524:	mov    rax,QWORD PTR [rip+0x595dd]        # 0x14005ab08
   14000152b:	mov    QWORD PTR [rsp+0x30],rax
   140001530:	mov    rax,QWORD PTR [rbx]
   140001533:	lea    r9,[rsp+0x30]
   140001538:	mov    r8d,r12d
   14000153b:	mov    rcx,rbx
   14000153e:	call   QWORD PTR [rax]
   140001540:	mov    rax,QWORD PTR [rbx]
   140001543:	xor    r9d,r9d
   140001546:	xor    r8d,r8d
   140001549:	mov    edx,0x61230d4d
   14000154e:	mov    rcx,rbx
   140001551:	call   QWORD PTR [rax]
   140001553:	lea    rcx,[rsp+0x30]
   140001558:	call   0x1400242a0
   14000155d:	test   eax,eax
   14000155f:	jns    0x1400015cb
   140001561:	mov    QWORD PTR [rbp-0x40],r15
   140001565:	mov    QWORD PTR [rbp-0x38],r15
   140001569:	mov    QWORD PTR [rbp-0x38],0x7
   140001571:	mov    QWORD PTR [rbp-0x40],r15
   140001575:	mov    WORD PTR [rbp-0x50],r15w
   14000157a:	mov    ecx,eax
   14000157c:	call   0x140011e70
   140001581:	mov    rbx,rax
   140001584:	mov    rdx,rax
   140001587:	lea    rcx,[rbp-0x50]
   14000158b:	call   0x14000324c
   140001590:	mov    rcx,rbx
   140001593:	call   QWORD PTR [rip+0x3fe2f]        # 0x1400413c8
   140001599:	lea    r9,[rbp-0x50]
   14000159d:	cmp    QWORD PTR [rbp-0x38],0x8
   1400015a2:	cmovae r9,QWORD PTR [rbp-0x50]
   1400015a7:	mov    r8d,r12d
   1400015aa:	mov    edx,0xe12305bb
   1400015af:	lea    rcx,[rsp+0x78]
   1400015b4:	call   0x140010a9c
   1400015b9:	lea    rdx,[rip+0x54a30]        # 0x140055ff0
   1400015c0:	lea    rcx,[rsp+0x78]
   1400015c5:	call   0x140029fe8
   1400015ca:	nop
   1400015cb:	mov    rdi,QWORD PTR [rsp+0x30]
   1400015d0:	mov    rax,QWORD PTR [rdi]
   1400015d3:	xor    r9d,r9d
   1400015d6:	lea    r8,[rsp+0x60]
   1400015db:	lea    edx,[r9+0x4]
   1400015df:	mov    rcx,rdi
   1400015e2:	call   QWORD PTR [rax+0x20]
   1400015e5:	mov    esi,eax
   1400015e7:	test   eax,eax
   1400015e9:	jns    0x14000165e
   1400015eb:	mov    rdx,QWORD PTR [rdi]
   1400015ee:	mov    rcx,rdi
   1400015f1:	call   QWORD PTR [rdx+0x10]
   1400015f4:	mov    QWORD PTR [rbp-0x40],r15
   1400015f8:	mov    QWORD PTR [rbp-0x38],r15
   1400015fc:	mov    QWORD PTR [rbp-0x38],0x7
   140001604:	mov    QWORD PTR [rbp-0x40],r15
   140001608:	mov    WORD PTR [rbp-0x50],r15w
   14000160d:	mov    ecx,esi
   14000160f:	call   0x140011e70
   140001614:	mov    rbx,rax
   140001617:	mov    rdx,rax
   14000161a:	lea    rcx,[rbp-0x50]
   14000161e:	call   0x14000324c
   140001623:	mov    rcx,rbx
   140001626:	call   QWORD PTR [rip+0x3fd9c]        # 0x1400413c8
   14000162c:	lea    r9,[rbp-0x50]
   140001630:	cmp    QWORD PTR [rbp-0x38],0x8
   140001635:	cmovae r9,QWORD PTR [rbp-0x50]
   14000163a:	mov    r8d,r12d
   14000163d:	mov    edx,0xe12305bb
   140001642:	lea    rcx,[rsp+0x78]
   140001647:	call   0x140010a9c
   14000164c:	lea    rdx,[rip+0x5499d]        # 0x140055ff0
   140001653:	lea    rcx,[rsp+0x78]
   140001658:	call   0x140029fe8
   14000165d:	nop
   14000165e:	lea    r9,[rsp+0x68]
   140001663:	lea    r8,[rsp+0x58]
   140001668:	lea    rdx,[rsp+0x50]
   14000166d:	mov    rcx,QWORD PTR [rsp+0x60]
   140001672:	call   QWORD PTR [rip+0x3f998]        # 0x140041010
   140001678:	test   eax,eax
   14000167a:	je     0x1400017eb
   140001680:	cmp    DWORD PTR [rsp+0x50],r15d
   140001685:	je     0x1400017eb
   14000168b:	mov    r9d,0x2
   140001691:	lea    r8d,[r9+0xa]
   140001695:	lea    rdx,[rbp-0x30]
   140001699:	mov    rcx,QWORD PTR [rsp+0x58]
   14000169e:	call   QWORD PTR [rip+0x3f95c]        # 0x140041000
   1400016a4:	mov    esi,r15d
   1400016a7:	cmp    DWORD PTR [rbp-0x30],r15d
   1400016ab:	jbe    0x1400017dd
   1400016b1:	lea    r8,[rsp+0x30]
   1400016b6:	mov    edx,esi
   1400016b8:	mov    rcx,QWORD PTR [rsp+0x58]
   1400016bd:	call   QWORD PTR [rip+0x3f945]        # 0x140041008
   1400016c3:	mov    rdi,QWORD PTR [rsp+0x30]
   1400016c8:	cmp    BYTE PTR [rdi],r12b
   1400016cb:	ja     0x1400017d1
   1400016d1:	mov    QWORD PTR [rbp-0x40],r15
   1400016d5:	mov    QWORD PTR [rbp-0x38],r15
   1400016d9:	mov    QWORD PTR [rbp-0x38],0x7
   1400016e1:	mov    QWORD PTR [rbp-0x40],r15
   1400016e5:	mov    WORD PTR [rbp-0x50],r15w
   1400016ea:	cmp    DWORD PTR [rdi+0x4],0xf
   1400016ee:	je     0x140001737
   1400016f0:	test   DWORD PTR [rdi+0x4],0x10000000
   1400016f7:	jne    0x140001737
   1400016f9:	lea    rdx,[rip+0x43e30]        # 0x140045530
   140001700:	lea    rcx,[rbp-0x50]
   140001704:	call   0x14000324c
   140001709:	test   BYTE PTR [rdi+0x4],r12b
   14000170d:	je     0x14000171f
   14000170f:	lea    rdx,[rip+0x43e9a]        # 0x1400455b0
   140001716:	lea    rcx,[rbp-0x50]
   14000171a:	call   0x1400030a8
   14000171f:	test   BYTE PTR [rdi+0x4],0x4
   140001723:	je     0x140001747
   140001725:	lea    rdx,[rip+0x43ea4]        # 0x1400455d0
   14000172c:	lea    rcx,[rbp-0x50]
   140001730:	call   0x1400030a8
   140001735:	jmp    0x140001747
   140001737:	lea    rdx,[rip+0x43e5a]        # 0x140045598
   14000173e:	lea    rcx,[rbp-0x50]
   140001742:	call   0x14000324c
   140001747:	lea    rdx,[rdi+0x8]
   14000174b:	lea    rcx,[rbp+0x60]
   14000174f:	call   0x14001016c
   140001754:	nop
   140001755:	lea    r8,[rbp-0x50]
   140001759:	cmp    QWORD PTR [rbp-0x38],0x8
   14000175e:	cmovae r8,QWORD PTR [rbp-0x50]
   140001763:	lea    rcx,[rbp+0x90]
   14000176a:	cmp    QWORD PTR [rbp+0xa8],0x8
   140001772:	cmovae rcx,QWORD PTR [rbp+0x90]
   14000177a:	mov    al,BYTE PTR [rdi]
   14000177c:	neg    al
   14000177e:	sbb    edx,edx
   140001780:	neg    edx
   140001782:	add    edx,0x61230d4e
   140001788:	mov    QWORD PTR [rsp+0x40],rcx
   14000178d:	mov    QWORD PTR [rsp+0x48],r8
   140001792:	mov    rax,QWORD PTR [rbx]
   140001795:	lea    r9,[rsp+0x40]
   14000179a:	mov    r8d,0x2
   1400017a0:	mov    rcx,rbx
   1400017a3:	call   QWORD PTR [rax]
   1400017a5:	nop
   1400017a6:	lea    rcx,[rbp+0x60]
   1400017aa:	call   0x140010294
   1400017af:	nop
   1400017b0:	cmp    QWORD PTR [rbp-0x38],0x8
   1400017b5:	jb     0x1400017c0
   1400017b7:	mov    rcx,QWORD PTR [rbp-0x50]
   1400017bb:	call   0x14002657c
   1400017c0:	mov    QWORD PTR [rbp-0x38],0x7
   1400017c8:	mov    QWORD PTR [rbp-0x40],r15
   1400017cc:	mov    WORD PTR [rbp-0x50],r15w
   1400017d1:	add    esi,r12d
   1400017d4:	cmp    esi,DWORD PTR [rbp-0x30]
   1400017d7:	jb     0x1400016b1
   1400017dd:	mov    rcx,QWORD PTR [rsp+0x60]
   1400017e2:	call   QWORD PTR [rip+0x3fbe0]        # 0x1400413c8
   1400017e8:	nop
   1400017e9:	jmp    0x1400017eb
   1400017eb:	lea    rcx,[rbp-0x18]
   1400017ef:	call   0x14000fd20
   1400017f4:	mov    rcx,QWORD PTR [rbp+0xe0]
   1400017fb:	xor    rcx,rsp
   1400017fe:	call   0x1400265a0
   140001803:	lea    r11,[rsp+0x1f0]
   14000180b:	mov    rbx,QWORD PTR [r11+0x28]
   14000180f:	mov    rsi,QWORD PTR [r11+0x30]
   140001813:	mov    rdi,QWORD PTR [r11+0x38]
   140001817:	mov    rsp,r11
   14000181a:	pop    r15
   14000181c:	pop    r12
   14000181e:	pop    rbp
   14000181f:	ret    
   140001820:	mov    QWORD PTR [rsp+0x8],rcx
   140001825:	sub    rsp,0x38
   140001829:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001832:	add    rcx,0x8
   140001836:	add    rsp,0x38
   14000183a:	jmp    0x14000fd20
   14000183f:	int3   
   140001840:	mov    rax,rsp
   140001843:	push   rbp
   140001844:	push   rsi
   140001845:	push   rdi
   140001846:	push   r12
   140001848:	push   r13
   14000184a:	push   r14
   14000184c:	push   r15
   14000184e:	lea    rbp,[rax-0x1b8]
   140001855:	sub    rsp,0x280
   14000185c:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140001865:	mov    QWORD PTR [rax+0x18],rbx
   140001869:	mov    rax,QWORD PTR [rip+0x57818]        # 0x140059088
   140001870:	xor    rax,rsp
   140001873:	mov    QWORD PTR [rbp+0x170],rax
   14000187a:	mov    rbx,rdx
   14000187d:	mov    rsi,rcx
   140001880:	mov    r14,QWORD PTR [rcx]
   140001883:	mov    rax,QWORD PTR [rcx+0x8]
   140001887:	sub    rax,r14
   14000188a:	sar    rax,0x3
   14000188e:	mov    r12d,0x2
   140001894:	lea    edi,[r12-0x1]
   140001899:	cmp    rax,r12
   14000189c:	jae    0x1400018d3
   14000189e:	mov    DWORD PTR [rbp+0x18],edi
   1400018a1:	mov    DWORD PTR [rbp+0x1c],0xe12305b6
   1400018a8:	xor    ebx,ebx
   1400018aa:	mov    QWORD PTR [rbp+0x20],rbx
   1400018ae:	mov    QWORD PTR [rbp+0x28],rbx
   1400018b2:	mov    QWORD PTR [rbp+0x30],rbx
   1400018b6:	mov    QWORD PTR [rbp+0x38],rbx
   1400018ba:	mov    QWORD PTR [rbp+0x40],rbx
   1400018be:	mov    QWORD PTR [rbp+0x48],rbx
   1400018c2:	lea    rdx,[rip+0x54727]        # 0x140055ff0
   1400018c9:	lea    rcx,[rbp+0x18]
   1400018cd:	call   0x140029fe8
   1400018d2:	int3   
   1400018d3:	mov    r14,QWORD PTR [r14+0x8]
   1400018d7:	or     r15d,0xffffffff
   1400018db:	mov    DWORD PTR [rsp+0x28],r15d
   1400018e0:	lea    rax,[rip+0x43d11]        # 0x1400455f8
   1400018e7:	mov    QWORD PTR [rsp+0x20],rax
   1400018ec:	mov    r9d,r15d
   1400018ef:	mov    r8,r14
   1400018f2:	mov    edx,edi
   1400018f4:	mov    r13d,0x409
   1400018fa:	mov    ecx,r13d
   1400018fd:	call   QWORD PTR [rip+0x3fadd]        # 0x1400413e0
   140001903:	cmp    eax,r12d
   140001906:	je     0x14000201f
   14000190c:	mov    DWORD PTR [rsp+0x28],r15d
   140001911:	lea    rax,[rip+0x43cec]        # 0x140045604
   140001918:	mov    QWORD PTR [rsp+0x20],rax
   14000191d:	mov    r9d,r15d
   140001920:	mov    r8,r14
   140001923:	mov    edx,edi
   140001925:	mov    ecx,r13d
   140001928:	call   QWORD PTR [rip+0x3fab2]        # 0x1400413e0
   14000192e:	cmp    eax,r12d
   140001931:	je     0x14000201f
   140001937:	mov    DWORD PTR [rsp+0x28],r15d
   14000193c:	lea    rax,[rip+0x43cc5]        # 0x140045608
   140001943:	mov    QWORD PTR [rsp+0x20],rax
   140001948:	mov    r9d,r15d
   14000194b:	mov    r8,r14
   14000194e:	mov    edx,edi
   140001950:	mov    ecx,r13d
   140001953:	call   QWORD PTR [rip+0x3fa87]        # 0x1400413e0
   140001959:	xor    ebx,ebx
   14000195b:	cmp    eax,r12d
   14000195e:	je     0x140001a03
   140001964:	mov    DWORD PTR [rsp+0x28],r15d
   140001969:	lea    rax,[rip+0x43ca4]        # 0x140045614
   140001970:	mov    QWORD PTR [rsp+0x20],rax
   140001975:	mov    r9d,r15d
   140001978:	mov    r8,r14
   14000197b:	mov    edx,edi
   14000197d:	mov    ecx,r13d
   140001980:	call   QWORD PTR [rip+0x3fa5a]        # 0x1400413e0
   140001986:	cmp    eax,r12d
   140001989:	je     0x140001a03
   14000198b:	mov    DWORD PTR [rsp+0x28],r15d
   140001990:	lea    rax,[rip+0x43c81]        # 0x140045618
   140001997:	mov    QWORD PTR [rsp+0x20],rax
   14000199c:	mov    r9d,r15d
   14000199f:	mov    r8,r14
   1400019a2:	mov    edx,edi
   1400019a4:	mov    ecx,r13d
   1400019a7:	call   QWORD PTR [rip+0x3fa33]        # 0x1400413e0
   1400019ad:	cmp    eax,r12d
   1400019b0:	je     0x1400019fe
   1400019b2:	mov    DWORD PTR [rsp+0x28],r15d
   1400019b7:	lea    rax,[rip+0x43c66]        # 0x140045624
   1400019be:	mov    QWORD PTR [rsp+0x20],rax
   1400019c3:	mov    r9d,r15d
   1400019c6:	mov    r8,r14
   1400019c9:	mov    edx,edi
   1400019cb:	mov    ecx,r13d
   1400019ce:	call   QWORD PTR [rip+0x3fa0c]        # 0x1400413e0
   1400019d4:	cmp    eax,r12d
   1400019d7:	je     0x1400019fe
   1400019d9:	mov    r9,r14
   1400019dc:	mov    r8d,edi
   1400019df:	mov    edx,0xe12305b7
   1400019e4:	lea    rcx,[rbp+0x18]
   1400019e8:	call   0x140010a9c
   1400019ed:	lea    rdx,[rip+0x545fc]        # 0x140055ff0
   1400019f4:	lea    rcx,[rbp+0x18]
   1400019f8:	call   0x140029fe8
   1400019fd:	int3   
   1400019fe:	mov    r13d,edi
   140001a01:	jmp    0x140001a06
   140001a03:	mov    r13d,ebx
   140001a06:	mov    rdx,QWORD PTR [rsi]
   140001a09:	mov    rax,QWORD PTR [rsi+0x8]
   140001a0d:	sub    rax,rdx
   140001a10:	sar    rax,0x3
   140001a14:	cmp    rax,0x4
   140001a18:	jae    0x140001a4d
   140001a1a:	mov    DWORD PTR [rbp+0x18],edi
   140001a1d:	mov    DWORD PTR [rbp+0x1c],0xe12305b8
   140001a24:	mov    QWORD PTR [rbp+0x20],rbx
   140001a28:	mov    QWORD PTR [rbp+0x28],rbx
   140001a2c:	mov    QWORD PTR [rbp+0x30],rbx
   140001a30:	mov    QWORD PTR [rbp+0x38],rbx
   140001a34:	mov    QWORD PTR [rbp+0x40],rbx
   140001a38:	mov    QWORD PTR [rbp+0x48],rbx
   140001a3c:	lea    rdx,[rip+0x545ad]        # 0x140055ff0
   140001a43:	lea    rcx,[rbp+0x18]
   140001a47:	call   0x140029fe8
   140001a4c:	int3   
   140001a4d:	mov    r15d,ebx
   140001a50:	dec    rax
   140001a53:	cmp    rax,r12
   140001a56:	jbe    0x140001be4
   140001a5c:	mov    r14d,0x10
   140001a62:	or     ecx,0xffffffff
   140001a65:	mov    DWORD PTR [rsp+0x28],ecx
   140001a69:	lea    rax,[rip+0x43bb8]        # 0x140045628
   140001a70:	mov    QWORD PTR [rsp+0x20],rax
   140001a75:	mov    r9d,ecx
   140001a78:	mov    r8,QWORD PTR [r14+rdx*1]
   140001a7c:	mov    edx,edi
   140001a7e:	mov    ecx,0x409
   140001a83:	call   QWORD PTR [rip+0x3f957]        # 0x1400413e0
   140001a89:	cmp    eax,0x2
   140001a8c:	je     0x140001b90
   140001a92:	mov    rax,QWORD PTR [rsi]
   140001a95:	or     r9d,0xffffffff
   140001a99:	mov    DWORD PTR [rsp+0x28],r9d
   140001a9e:	lea    rcx,[rip+0x43b9f]        # 0x140045644
   140001aa5:	mov    QWORD PTR [rsp+0x20],rcx
   140001aaa:	mov    r8,QWORD PTR [r14+rax*1]
   140001aae:	mov    edx,edi
   140001ab0:	mov    ecx,0x409
   140001ab5:	call   QWORD PTR [rip+0x3f925]        # 0x1400413e0
   140001abb:	cmp    eax,0x2
   140001abe:	je     0x140001b90
   140001ac4:	mov    rax,QWORD PTR [rsi]
   140001ac7:	or     edx,0xffffffff
   140001aca:	mov    DWORD PTR [rsp+0x28],edx
   140001ace:	lea    rcx,[rip+0x43b7b]        # 0x140045650
   140001ad5:	mov    QWORD PTR [rsp+0x20],rcx
   140001ada:	mov    r9d,edx
   140001add:	mov    r8,QWORD PTR [r14+rax*1]
   140001ae1:	mov    edx,edi
   140001ae3:	mov    ecx,0x409
   140001ae8:	call   QWORD PTR [rip+0x3f8f2]        # 0x1400413e0
   140001aee:	cmp    eax,0x2
   140001af1:	je     0x140001b8a
   140001af7:	mov    rax,QWORD PTR [rsi]
   140001afa:	or     edx,0xffffffff
   140001afd:	mov    DWORD PTR [rsp+0x28],edx
   140001b01:	lea    rcx,[rip+0x43b68]        # 0x140045670
   140001b08:	mov    QWORD PTR [rsp+0x20],rcx
   140001b0d:	mov    r9d,edx
   140001b10:	mov    r8,QWORD PTR [r14+rax*1]
   140001b14:	mov    edx,edi
   140001b16:	mov    ecx,0x409
   140001b1b:	call   QWORD PTR [rip+0x3f8bf]        # 0x1400413e0
   140001b21:	cmp    eax,0x2
   140001b24:	je     0x140001b8a
   140001b26:	mov    rax,QWORD PTR [rsi]
   140001b29:	or     edx,0xffffffff
   140001b2c:	mov    DWORD PTR [rsp+0x28],edx
   140001b30:	lea    rcx,[rip+0x43a61]        # 0x140045598
   140001b37:	mov    QWORD PTR [rsp+0x20],rcx
   140001b3c:	mov    r9d,edx
   140001b3f:	mov    r8,QWORD PTR [r14+rax*1]
   140001b43:	mov    edx,edi
   140001b45:	mov    ecx,0x409
   140001b4a:	call   QWORD PTR [rip+0x3f890]        # 0x1400413e0
   140001b50:	cmp    eax,0x2
   140001b53:	je     0x140001b84
   140001b55:	mov    rax,QWORD PTR [rsi]
   140001b58:	or     edx,0xffffffff
   140001b5b:	mov    DWORD PTR [rsp+0x28],edx
   140001b5f:	lea    rcx,[rip+0x43b12]        # 0x140045678
   140001b66:	mov    QWORD PTR [rsp+0x20],rcx
   140001b6b:	mov    r9d,edx
   140001b6e:	mov    r8,QWORD PTR [r14+rax*1]
   140001b72:	mov    edx,edi
   140001b74:	mov    ecx,0x409
   140001b79:	call   QWORD PTR [rip+0x3f861]        # 0x1400413e0
   140001b7f:	cmp    eax,0x2
   140001b82:	jne    0x140001bb8
   140001b84:	or     r15d,0xf
   140001b88:	jmp    0x140001b93
   140001b8a:	or     r15d,0x4
   140001b8e:	jmp    0x140001b93
   140001b90:	or     r15d,edi
   140001b93:	add    r12d,edi
   140001b96:	add    r14,0x8
   140001b9a:	mov    rdx,QWORD PTR [rsi]
   140001b9d:	mov    rcx,QWORD PTR [rsi+0x8]
   140001ba1:	sub    rcx,rdx
   140001ba4:	sar    rcx,0x3
   140001ba8:	sub    rcx,rdi
   140001bab:	movsxd rax,r12d
   140001bae:	cmp    rax,rcx
   140001bb1:	jae    0x140001be4
   140001bb3:	jmp    0x140001a62
   140001bb8:	movsxd rax,r12d
   140001bbb:	mov    r9,QWORD PTR [rsi]
   140001bbe:	mov    r9,QWORD PTR [r9+rax*8]
   140001bc2:	mov    r8d,edi
   140001bc5:	mov    edx,0xe12305b9
   140001bca:	lea    rcx,[rbp+0x18]
   140001bce:	call   0x140010a9c
   140001bd3:	lea    rdx,[rip+0x54416]        # 0x140055ff0
   140001bda:	lea    rcx,[rbp+0x18]
   140001bde:	call   0x140029fe8
   140001be3:	int3   
   140001be4:	mov    rax,QWORD PTR [rsi]
   140001be7:	mov    rdx,QWORD PTR [rsi+0x8]
   140001beb:	sub    rdx,rax
   140001bee:	sar    rdx,0x3
   140001bf2:	mov    rdx,QWORD PTR [rax+rdx*8-0x8]
   140001bf7:	lea    rcx,[rbp+0xf0]
   140001bfe:	call   0x1400101cc
   140001c03:	nop
   140001c04:	lea    rcx,[rsp+0x30]
   140001c09:	call   0x1400242a0
   140001c0e:	test   eax,eax
   140001c10:	jns    0x140001c79
   140001c12:	mov    QWORD PTR [rbp+0x8],rbx
   140001c16:	mov    QWORD PTR [rbp+0x10],rbx
   140001c1a:	mov    QWORD PTR [rbp+0x10],0x7
   140001c22:	mov    QWORD PTR [rbp+0x8],rbx
   140001c26:	mov    WORD PTR [rbp-0x8],bx
   140001c2a:	mov    ecx,eax
   140001c2c:	call   0x140011e70
   140001c31:	mov    rbx,rax
   140001c34:	mov    rdx,rax
   140001c37:	lea    rcx,[rbp-0x8]
   140001c3b:	call   0x14000324c
   140001c40:	mov    rcx,rbx
   140001c43:	call   QWORD PTR [rip+0x3f77f]        # 0x1400413c8
   140001c49:	lea    r9,[rbp-0x8]
   140001c4d:	cmp    QWORD PTR [rbp+0x10],0x8
   140001c52:	cmovae r9,QWORD PTR [rbp-0x8]
   140001c57:	mov    r8d,edi
   140001c5a:	mov    edx,0xe12305bb
   140001c5f:	lea    rcx,[rbp+0x18]
   140001c63:	call   0x140010a9c
   140001c68:	lea    rdx,[rip+0x54381]        # 0x140055ff0
   140001c6f:	lea    rcx,[rbp+0x18]
   140001c73:	call   0x140029fe8
   140001c78:	nop
   140001c79:	mov    r14,QWORD PTR [rsp+0x30]
   140001c7e:	mov    rax,QWORD PTR [r14]
   140001c81:	xor    r9d,r9d
   140001c84:	lea    r8,[rsp+0x38]
   140001c89:	lea    edx,[r9+0x4]
   140001c8d:	mov    rcx,r14
   140001c90:	call   QWORD PTR [rax+0x20]
   140001c93:	mov    esi,eax
   140001c95:	test   eax,eax
   140001c97:	jns    0x140001d09
   140001c99:	mov    rdx,QWORD PTR [r14]
   140001c9c:	mov    rcx,r14
   140001c9f:	call   QWORD PTR [rdx+0x10]
   140001ca2:	mov    QWORD PTR [rbp+0x8],rbx
   140001ca6:	mov    QWORD PTR [rbp+0x10],rbx
   140001caa:	mov    QWORD PTR [rbp+0x10],0x7
   140001cb2:	mov    QWORD PTR [rbp+0x8],rbx
   140001cb6:	mov    WORD PTR [rbp-0x8],bx
   140001cba:	mov    ecx,esi
   140001cbc:	call   0x140011e70
   140001cc1:	mov    rbx,rax
   140001cc4:	mov    rdx,rax
   140001cc7:	lea    rcx,[rbp-0x8]
   140001ccb:	call   0x14000324c
   140001cd0:	mov    rcx,rbx
   140001cd3:	call   QWORD PTR [rip+0x3f6ef]        # 0x1400413c8
   140001cd9:	lea    r9,[rbp-0x8]
   140001cdd:	cmp    QWORD PTR [rbp+0x10],0x8
   140001ce2:	cmovae r9,QWORD PTR [rbp-0x8]
   140001ce7:	mov    r8d,edi
   140001cea:	mov    edx,0xe12305bb
   140001cef:	lea    rcx,[rbp+0x18]
   140001cf3:	call   0x140010a9c
   140001cf8:	lea    rdx,[rip+0x542f1]        # 0x140055ff0
   140001cff:	lea    rcx,[rbp+0x18]
   140001d03:	call   0x140029fe8
   140001d08:	nop
   140001d09:	mov    rdx,QWORD PTR [rsp+0x38]
   140001d0e:	lea    rcx,[rbp-0x80]
   140001d12:	call   0x14000fe68
   140001d17:	nop
   140001d18:	mov    rcx,QWORD PTR [rsp+0x38]
   140001d1d:	call   QWORD PTR [rip+0x3f6a5]        # 0x1400413c8
   140001d23:	mov    DWORD PTR [rsp+0x40],r15d
   140001d28:	neg    r13d
   140001d2b:	sbb    eax,eax
   140001d2d:	neg    eax
   140001d2f:	add    eax,0x2
   140001d32:	mov    DWORD PTR [rsp+0x44],eax
   140001d36:	mov    DWORD PTR [rsp+0x48],ebx
   140001d3a:	mov    QWORD PTR [rsp+0x50],rbx
   140001d3f:	mov    QWORD PTR [rsp+0x58],rbx
   140001d44:	mov    DWORD PTR [rsp+0x60],edi
   140001d48:	mov    rax,QWORD PTR [rbp+0xf0]
   140001d4f:	mov    QWORD PTR [rsp+0x68],rax
   140001d54:	mov    DWORD PTR [rbp+0x50],0x9c
   140001d5b:	lea    rcx,[rbp+0x50]
   140001d5f:	call   QWORD PTR [rip+0x3f66b]        # 0x1400413d0
   140001d65:	cmp    DWORD PTR [rbp-0x80],ebx
   140001d68:	je     0x140001dde
   140001d6a:	mov    r8,QWORD PTR [rbp-0x60]
   140001d6e:	test   r8,r8
   140001d71:	je     0x140001dde
   140001d73:	mov    QWORD PTR [rsp+0x30],rbx
   140001d78:	lea    r9,[rsp+0x30]
   140001d7d:	lea    rdx,[rsp+0x40]
   140001d82:	mov    ecx,edi
   140001d84:	call   QWORD PTR [rip+0x3f3de]        # 0x140041168
   140001d8a:	test   eax,eax
   140001d8c:	jne    0x140001deb
   140001d8e:	mov    rcx,QWORD PTR [rsp+0x30]
   140001d93:	call   QWORD PTR [rip+0x3f3df]        # 0x140041178
   140001d99:	test   eax,eax
   140001d9b:	jne    0x140001db0
   140001d9d:	mov    rcx,QWORD PTR [rsp+0x30]
   140001da2:	call   QWORD PTR [rip+0x3f620]        # 0x1400413c8
   140001da8:	call   QWORD PTR [rip+0x3f62a]        # 0x1400413d8
   140001dae:	jmp    0x140001de3
   140001db0:	mov    r15,QWORD PTR [rsp+0x30]
   140001db5:	mov    rcx,r15
   140001db8:	call   QWORD PTR [rip+0x3f3ba]        # 0x140041178
   140001dbe:	test   eax,eax
   140001dc0:	je     0x140001dce
   140001dc2:	mov    rdx,r15
   140001dc5:	lea    rcx,[rbp-0x80]
   140001dc9:	call   0x1400100d0
   140001dce:	mov    rcx,QWORD PTR [rsp+0x30]
   140001dd3:	call   QWORD PTR [rip+0x3f5ef]        # 0x1400413c8
   140001dd9:	jmp    0x140001e6c
   140001dde:	mov    eax,0x53a
   140001de3:	test   eax,eax
   140001de5:	je     0x140001e6c
   140001deb:	cmp    esi,0x5
   140001dee:	jne    0x140001dfc
   140001df0:	mov    eax,0x2e4
   140001df5:	cmp    DWORD PTR [rbp+0x54],0x6
   140001df9:	cmovae esi,eax
   140001dfc:	mov    rax,QWORD PTR [r14]
   140001dff:	mov    rcx,r14
   140001e02:	call   QWORD PTR [rax+0x10]
   140001e05:	mov    QWORD PTR [rbp+0x8],rbx
   140001e09:	mov    QWORD PTR [rbp+0x10],rbx
   140001e0d:	mov    QWORD PTR [rbp+0x10],0x7
   140001e15:	mov    QWORD PTR [rbp+0x8],rbx
   140001e19:	mov    WORD PTR [rbp-0x8],bx
   140001e1d:	mov    ecx,esi
   140001e1f:	call   0x140011e70
   140001e24:	mov    rbx,rax
   140001e27:	mov    rdx,rax
   140001e2a:	lea    rcx,[rbp-0x8]
   140001e2e:	call   0x14000324c
   140001e33:	mov    rcx,rbx
   140001e36:	call   QWORD PTR [rip+0x3f58c]        # 0x1400413c8
   140001e3c:	lea    r9,[rbp-0x8]
   140001e40:	cmp    QWORD PTR [rbp+0x10],0x8
   140001e45:	cmovae r9,QWORD PTR [rbp-0x8]
   140001e4a:	mov    r8d,edi
   140001e4d:	mov    edx,0xe12305bc
   140001e52:	lea    rcx,[rbp+0x18]
   140001e56:	call   0x140001340
   140001e5b:	lea    rdx,[rip+0x541c6]        # 0x140056028
   140001e62:	lea    rcx,[rbp+0x18]
   140001e66:	call   0x140029fe8
   140001e6b:	nop
   140001e6c:	mov    rcx,QWORD PTR [rbp-0x68]
   140001e70:	call   QWORD PTR [rip+0x3f2c2]        # 0x140041138
   140001e76:	mov    QWORD PTR [rbp-0x8],rbx
   140001e7a:	mov    QWORD PTR [rbp+0x0],rbx
   140001e7e:	mov    QWORD PTR [rbp+0x8],rbx
   140001e82:	mov    edx,eax
   140001e84:	lea    rcx,[rbp-0x8]
   140001e88:	call   0x1400034c4
   140001e8d:	nop
   140001e8e:	mov    rax,QWORD PTR [rbp+0x0]
   140001e92:	mov    r15,QWORD PTR [rbp-0x8]
   140001e96:	sub    rax,r15
   140001e99:	mov    DWORD PTR [rsp+0x30],eax
   140001e9d:	lea    r8,[rsp+0x30]
   140001ea2:	mov    rdx,r15
   140001ea5:	mov    rcx,QWORD PTR [rbp-0x68]
   140001ea9:	call   QWORD PTR [rip+0x3f261]        # 0x140041110
   140001eaf:	test   eax,eax
   140001eb1:	jne    0x140001ebb
   140001eb3:	call   QWORD PTR [rip+0x3f51f]        # 0x1400413d8
   140001eb9:	jmp    0x140001ebd
   140001ebb:	mov    eax,ebx
   140001ebd:	test   eax,eax
   140001ebf:	je     0x140001f46
   140001ec5:	cmp    eax,0x5
   140001ec8:	jne    0x140001ed6
   140001eca:	mov    eax,0x2e4
   140001ecf:	cmp    DWORD PTR [rbp+0x54],0x6
   140001ed3:	cmovae esi,eax
   140001ed6:	mov    rax,QWORD PTR [r14]
   140001ed9:	mov    rcx,r14
   140001edc:	call   QWORD PTR [rax+0x10]
   140001edf:	mov    QWORD PTR [rbp+0x28],rbx
   140001ee3:	mov    QWORD PTR [rbp+0x30],rbx
   140001ee7:	mov    QWORD PTR [rbp+0x30],0x7
   140001eef:	mov    QWORD PTR [rbp+0x28],rbx
   140001ef3:	mov    WORD PTR [rbp+0x18],bx
   140001ef7:	mov    ecx,esi
   140001ef9:	call   0x140011e70
   140001efe:	mov    rbx,rax
   140001f01:	mov    rdx,rax
   140001f04:	lea    rcx,[rbp+0x18]
   140001f08:	call   0x14000324c
   140001f0d:	mov    rcx,rbx
   140001f10:	call   QWORD PTR [rip+0x3f4b2]        # 0x1400413c8
   140001f16:	lea    r9,[rbp+0x18]
   140001f1a:	cmp    QWORD PTR [rbp+0x30],0x8
   140001f1f:	cmovae r9,QWORD PTR [rbp+0x18]
   140001f24:	mov    r8d,edi
   140001f27:	mov    edx,0xe12305bc
   140001f2c:	lea    rcx,[rbp-0x40]
   140001f30:	call   0x140001340
   140001f35:	lea    rdx,[rip+0x540ec]        # 0x140056028
   140001f3c:	lea    rcx,[rbp-0x40]
   140001f40:	call   0x140029fe8
   140001f45:	nop
   140001f46:	mov    rax,QWORD PTR [r14]
   140001f49:	mov    r8,r15
   140001f4c:	mov    edx,0x4
   140001f51:	mov    rcx,r14
   140001f54:	call   QWORD PTR [rax+0x28]
   140001f57:	mov    esi,eax
   140001f59:	test   eax,eax
   140001f5b:	jns    0x140001fe4
   140001f61:	cmp    eax,0x80070005
   140001f66:	jne    0x140001f74
   140001f68:	mov    eax,0x2e4
   140001f6d:	cmp    DWORD PTR [rbp+0x54],0x6
   140001f71:	cmovae esi,eax
   140001f74:	mov    rax,QWORD PTR [r14]
   140001f77:	mov    rcx,r14
   140001f7a:	call   QWORD PTR [rax+0x10]
   140001f7d:	mov    QWORD PTR [rbp+0x28],rbx
   140001f81:	mov    QWORD PTR [rbp+0x30],rbx
   140001f85:	mov    QWORD PTR [rbp+0x30],0x7
   140001f8d:	mov    QWORD PTR [rbp+0x28],rbx
   140001f91:	mov    WORD PTR [rbp+0x18],bx
   140001f95:	mov    ecx,esi
   140001f97:	call   0x140011e70
   140001f9c:	mov    rbx,rax
   140001f9f:	mov    rdx,rax
   140001fa2:	lea    rcx,[rbp+0x18]
   140001fa6:	call   0x14000324c
   140001fab:	mov    rcx,rbx
   140001fae:	call   QWORD PTR [rip+0x3f414]        # 0x1400413c8
   140001fb4:	lea    r9,[rbp+0x18]
   140001fb8:	cmp    QWORD PTR [rbp+0x30],0x8
   140001fbd:	cmovae r9,QWORD PTR [rbp+0x18]
   140001fc2:	mov    r8d,edi
   140001fc5:	mov    edx,0xe12305bc
   140001fca:	lea    rcx,[rbp-0x40]
   140001fce:	call   0x140001340
   140001fd3:	lea    rdx,[rip+0x5404e]        # 0x140056028
   140001fda:	lea    rcx,[rbp-0x40]
   140001fde:	call   0x140029fe8
   140001fe3:	nop
   140001fe4:	mov    rax,QWORD PTR [r14]
   140001fe7:	mov    rcx,r14
   140001fea:	call   QWORD PTR [rax+0x10]
   140001fed:	nop
   140001fee:	test   r15,r15
   140001ff1:	je     0x140002007
   140001ff3:	mov    rcx,r15
   140001ff6:	call   0x14002657c
   140001ffb:	mov    QWORD PTR [rbp-0x8],rbx
   140001fff:	mov    QWORD PTR [rbp+0x0],rbx
   140002003:	mov    QWORD PTR [rbp+0x8],rbx
   140002007:	lea    rcx,[rbp-0x80]
   14000200b:	call   0x14000fed0
   140002010:	nop
   140002011:	lea    rcx,[rbp+0xf0]
   140002018:	call   0x140010294
   14000201d:	jmp    0x140002027
   14000201f:	mov    rcx,rbx
   140002022:	call   0x1400013a0
   140002027:	xor    eax,eax
   140002029:	mov    rcx,QWORD PTR [rbp+0x170]
   140002030:	xor    rcx,rsp
   140002033:	call   0x1400265a0
   140002038:	mov    rbx,QWORD PTR [rsp+0x2d0]
   140002040:	add    rsp,0x280
   140002047:	pop    r15
   140002049:	pop    r14
   14000204b:	pop    r13
   14000204d:	pop    r12
   14000204f:	pop    rdi
   140002050:	pop    rsi
   140002051:	pop    rbp
   140002052:	ret    
   140002053:	int3   
   140002054:	mov    QWORD PTR [rsp+0x8],rcx
   140002059:	sub    rsp,0x38
   14000205d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002066:	add    rsp,0x38
   14000206a:	jmp    0x140010c00
   14000206f:	int3   
   140002070:	mov    QWORD PTR [rsp+0x8],rcx
   140002075:	push   rbx
   140002076:	sub    rsp,0x30
   14000207a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002083:	mov    rbx,rcx
   140002086:	call   0x140010afc
   14000208b:	nop
   14000208c:	mov    rax,rbx
   14000208f:	add    rsp,0x30
   140002093:	pop    rbx
   140002094:	ret    
   140002095:	int3   
   140002096:	int3   
   140002097:	int3   
   140002098:	mov    rax,rsp
   14000209b:	push   rbp
   14000209c:	push   rsi
   14000209d:	push   rdi
   14000209e:	push   r12
   1400020a0:	push   r13
   1400020a2:	push   r14
   1400020a4:	push   r15
   1400020a6:	lea    rbp,[rax-0x5f]
   1400020aa:	sub    rsp,0xc0
   1400020b1:	mov    QWORD PTR [rbp-0x21],0xfffffffffffffffe
   1400020b9:	mov    QWORD PTR [rax+0x18],rbx
   1400020bd:	mov    rax,QWORD PTR [rip+0x56fc4]        # 0x140059088
   1400020c4:	xor    rax,rsp
   1400020c7:	mov    QWORD PTR [rbp+0x1f],rax
   1400020cb:	mov    r14,rdx
   1400020ce:	mov    rbx,rcx
   1400020d1:	mov    rsi,QWORD PTR [rcx]
   1400020d4:	mov    rax,QWORD PTR [rcx+0x8]
   1400020d8:	sub    rax,rsi
   1400020db:	sar    rax,0x3
   1400020df:	mov    r15d,0x2
   1400020e5:	lea    edi,[r15-0x1]
   1400020e9:	cmp    rax,r15
   1400020ec:	jae    0x140002123
   1400020ee:	mov    DWORD PTR [rbp-0x19],edi
   1400020f1:	mov    DWORD PTR [rbp-0x15],0xe12305bd
   1400020f8:	xor    ebx,ebx
   1400020fa:	mov    QWORD PTR [rbp-0x11],rbx
   1400020fe:	mov    QWORD PTR [rbp-0x9],rbx
   140002102:	mov    QWORD PTR [rbp-0x1],rbx
   140002106:	mov    QWORD PTR [rbp+0x7],rbx
   14000210a:	mov    QWORD PTR [rbp+0xf],rbx
   14000210e:	mov    QWORD PTR [rbp+0x17],rbx
   140002112:	lea    rdx,[rip+0x53ed7]        # 0x140055ff0
   140002119:	lea    rcx,[rbp-0x19]
   14000211d:	call   0x140029fe8
   140002122:	int3   
   140002123:	mov    rsi,QWORD PTR [rsi+0x8]
   140002127:	or     r13d,0xffffffff
   14000212b:	mov    DWORD PTR [rsp+0x28],r13d
   140002130:	lea    rax,[rip+0x43549]        # 0x140045680
   140002137:	mov    QWORD PTR [rsp+0x20],rax
   14000213c:	mov    r9d,r13d
   14000213f:	mov    r8,rsi
   140002142:	mov    edx,edi
   140002144:	mov    r12d,0x409
   14000214a:	mov    ecx,r12d
   14000214d:	call   QWORD PTR [rip+0x3f28d]        # 0x1400413e0
   140002153:	cmp    eax,r15d
   140002156:	jne    0x1400022e4
   14000215c:	mov    r8,QWORD PTR [rbx]
   14000215f:	mov    rax,QWORD PTR [rbx+0x8]
   140002163:	sub    rax,r8
   140002166:	sar    rax,0x3
   14000216a:	cmp    rax,0x3
   14000216e:	jae    0x1400021a5
   140002170:	mov    DWORD PTR [rbp-0x19],edi
   140002173:	mov    DWORD PTR [rbp-0x15],0xe12305be
   14000217a:	xor    ebx,ebx
   14000217c:	mov    QWORD PTR [rbp-0x11],rbx
   140002180:	mov    QWORD PTR [rbp-0x9],rbx
   140002184:	mov    QWORD PTR [rbp-0x1],rbx
   140002188:	mov    QWORD PTR [rbp+0x7],rbx
   14000218c:	mov    QWORD PTR [rbp+0xf],rbx
   140002190:	mov    QWORD PTR [rbp+0x17],rbx
   140002194:	lea    rdx,[rip+0x53e55]        # 0x140055ff0
   14000219b:	lea    rcx,[rbp-0x19]
   14000219f:	call   0x140029fe8
   1400021a4:	int3   
   1400021a5:	mov    DWORD PTR [rsp+0x28],r13d
   1400021aa:	lea    rax,[rip+0x43eaf]        # 0x140046060
   1400021b1:	mov    QWORD PTR [rsp+0x20],rax
   1400021b6:	mov    r9d,r13d
   1400021b9:	mov    r8,QWORD PTR [r8+0x10]
   1400021bd:	mov    edx,edi
   1400021bf:	mov    ecx,r12d
   1400021c2:	call   QWORD PTR [rip+0x3f218]        # 0x1400413e0
   1400021c8:	cmp    eax,r15d
   1400021cb:	jne    0x1400021ed
   1400021cd:	mov    ecx,r15d
   1400021d0:	call   0x140025418
   1400021d5:	mov    edi,eax
   1400021d7:	mov    r10,QWORD PTR [r14]
   1400021da:	xor    r9d,r9d
   1400021dd:	xor    r8d,r8d
   1400021e0:	mov    edx,0x61230d44
   1400021e5:	mov    rcx,r14
   1400021e8:	call   QWORD PTR [r10]
   1400021eb:	jmp    0x14000223b
   1400021ed:	mov    rax,QWORD PTR [rbx]
   1400021f0:	mov    DWORD PTR [rsp+0x28],r13d
   1400021f5:	lea    rdx,[rip+0x4349c]        # 0x140045698
   1400021fc:	mov    QWORD PTR [rsp+0x20],rdx
   140002201:	mov    r9d,r13d
   140002204:	mov    r8,QWORD PTR [rax+0x10]
   140002208:	mov    edx,edi
   14000220a:	mov    ecx,r12d
   14000220d:	call   QWORD PTR [rip+0x3f1cd]        # 0x1400413e0
   140002213:	cmp    eax,r15d
   140002216:	jne    0x1400022bb
   14000221c:	mov    ecx,0x3
   140002221:	call   0x140025418
   140002226:	mov    edi,eax
   140002228:	mov    rax,QWORD PTR [r14]
   14000222b:	xor    r9d,r9d
   14000222e:	xor    r8d,r8d
   140002231:	mov    edx,0x61230d45
   140002236:	mov    rcx,r14
   140002239:	call   QWORD PTR [rax]
   14000223b:	xor    ebx,ebx
   14000223d:	test   edi,edi
   14000223f:	jns    0x1400022b4
   140002241:	mov    QWORD PTR [rbp-0x9],rbx
   140002245:	mov    QWORD PTR [rbp-0x1],rbx
   140002249:	mov    QWORD PTR [rbp-0x1],0x7
   140002251:	mov    QWORD PTR [rbp-0x9],rbx
   140002255:	mov    WORD PTR [rbp-0x19],bx
   140002259:	mov    ecx,edi
   14000225b:	call   0x140011e70
   140002260:	mov    rbx,rax
   140002263:	mov    rdx,rax
   140002266:	lea    rcx,[rbp-0x19]
   14000226a:	call   0x14000324c
   14000226f:	mov    rcx,rbx
   140002272:	call   QWORD PTR [rip+0x3f150]        # 0x1400413c8
   140002278:	lea    rax,[rbp-0x19]
   14000227c:	cmp    QWORD PTR [rbp-0x1],0x8
   140002281:	cmovae rax,QWORD PTR [rbp-0x19]
   140002286:	mov    QWORD PTR [rsp+0x20],rax
   14000228b:	lea    r9,[rip+0x432ee]        # 0x140045580
   140002292:	mov    r8d,r15d
   140002295:	mov    edx,0xe123054d
   14000229a:	lea    rcx,[rbp-0x59]
   14000229e:	call   0x140010a9c
   1400022a3:	lea    rdx,[rip+0x53d46]        # 0x140055ff0
   1400022aa:	lea    rcx,[rbp-0x59]
   1400022ae:	call   0x140029fe8
   1400022b3:	nop
   1400022b4:	xor    eax,eax
   1400022b6:	jmp    0x1400028bf
   1400022bb:	mov    r9,QWORD PTR [rbx]
   1400022be:	mov    r9,QWORD PTR [r9+0x10]
   1400022c2:	mov    r8d,edi
   1400022c5:	mov    edx,0xe12305bf
   1400022ca:	lea    rcx,[rbp-0x59]
   1400022ce:	call   0x140010a9c
   1400022d3:	lea    rdx,[rip+0x53d16]        # 0x140055ff0
   1400022da:	lea    rcx,[rbp-0x59]
   1400022de:	call   0x140029fe8
   1400022e3:	int3   
   1400022e4:	xor    ebx,ebx
   1400022e6:	mov    r12d,ebx
   1400022e9:	mov    DWORD PTR [rbp-0x69],ebx
   1400022ec:	mov    r15d,ebx
   1400022ef:	mov    DWORD PTR [rbp-0x61],ebx
   1400022f2:	mov    r8d,edi
   1400022f5:	lea    rdx,[rip+0x43ecc]        # 0x1400461c8
   1400022fc:	xor    ecx,ecx
   1400022fe:	call   QWORD PTR [rip+0x3ee94]        # 0x140041198
   140002304:	test   rax,rax
   140002307:	je     0x140002321
   140002309:	mov    r8,rax
   14000230c:	lea    rdx,[rbp-0x61]
   140002310:	lea    rcx,[rbp-0x69]
   140002314:	call   0x140024b00
   140002319:	mov    r15d,DWORD PTR [rbp-0x61]
   14000231d:	mov    r12d,DWORD PTR [rbp-0x69]
   140002321:	mov    DWORD PTR [rsp+0x28],r13d
   140002326:	lea    rax,[rip+0x43373]        # 0x1400456a0
   14000232d:	mov    QWORD PTR [rsp+0x20],rax
   140002332:	mov    r9d,r13d
   140002335:	mov    r8,rsi
   140002338:	mov    edx,edi
   14000233a:	mov    ecx,0x409
   14000233f:	call   QWORD PTR [rip+0x3f09b]        # 0x1400413e0
   140002345:	cmp    eax,0x2
   140002348:	jne    0x1400024d7
   14000234e:	mov    r8d,edi
   140002351:	test   r15d,r15d
   140002354:	je     0x14000237c
   140002356:	lea    r9,[rip+0x43223]        # 0x140045580
   14000235d:	mov    edx,0xe12305a8
   140002362:	lea    rcx,[rbp-0x59]
   140002366:	call   0x140010a9c
   14000236b:	lea    rdx,[rip+0x53c7e]        # 0x140055ff0
   140002372:	lea    rcx,[rbp-0x59]
   140002376:	call   0x140029fe8
   14000237b:	int3   
   14000237c:	lea    rsi,[rip+0x431fd]        # 0x140045580
   140002383:	mov    QWORD PTR [rbp-0x69],rsi
   140002387:	mov    rax,QWORD PTR [r14]
   14000238a:	lea    r9,[rbp-0x69]
   14000238e:	mov    edx,0x61230d30
   140002393:	mov    rcx,r14
   140002396:	call   QWORD PTR [rax]
   140002398:	test   r12d,r12d
   14000239b:	jne    0x140002421
   1400023a1:	call   0x140024c48
   1400023a6:	test   eax,eax
   1400023a8:	jne    0x140002421
   1400023aa:	mov    QWORD PTR [rbp-0x9],rbx
   1400023ae:	mov    QWORD PTR [rbp-0x1],rbx
   1400023b2:	mov    QWORD PTR [rbp-0x1],0x7
   1400023ba:	mov    QWORD PTR [rbp-0x9],rbx
   1400023be:	mov    WORD PTR [rbp-0x19],bx
   1400023c2:	call   QWORD PTR [rip+0x3f010]        # 0x1400413d8
   1400023c8:	mov    ecx,eax
   1400023ca:	call   0x140011e70
   1400023cf:	mov    rbx,rax
   1400023d2:	mov    rdx,rax
   1400023d5:	lea    rcx,[rbp-0x19]
   1400023d9:	call   0x14000324c
   1400023de:	mov    rcx,rbx
   1400023e1:	call   QWORD PTR [rip+0x3efe1]        # 0x1400413c8
   1400023e7:	lea    rax,[rbp-0x19]
   1400023eb:	cmp    QWORD PTR [rbp-0x1],0x8
   1400023f0:	cmovae rax,QWORD PTR [rbp-0x19]
   1400023f5:	mov    QWORD PTR [rsp+0x20],rax
   1400023fa:	mov    r9,rsi
   1400023fd:	mov    edx,0xe12305a5
   140002402:	lea    r8d,[r12+0x2]
   140002407:	lea    rcx,[rbp-0x59]
   14000240b:	call   0x140010a9c
   140002410:	lea    rdx,[rip+0x53bd9]        # 0x140055ff0
   140002417:	lea    rcx,[rbp-0x59]
   14000241b:	call   0x140029fe8
   140002420:	nop
   140002421:	mov    QWORD PTR [rbp-0x69],rsi
   140002425:	mov    rax,QWORD PTR [r14]
   140002428:	lea    r9,[rbp-0x69]
   14000242c:	mov    r8d,edi
   14000242f:	mov    edx,0x61230d32
   140002434:	mov    rcx,r14
   140002437:	call   QWORD PTR [rax]
   140002439:	call   0x140024efc
   14000243e:	test   eax,eax
   140002440:	jne    0x1400024ba
   140002442:	mov    QWORD PTR [rbp-0x9],rbx
   140002446:	mov    QWORD PTR [rbp-0x1],rbx
   14000244a:	mov    QWORD PTR [rbp-0x1],0x7
   140002452:	mov    QWORD PTR [rbp-0x9],rbx
   140002456:	mov    WORD PTR [rbp-0x19],bx
   14000245a:	call   QWORD PTR [rip+0x3ef78]        # 0x1400413d8
   140002460:	mov    ecx,eax
   140002462:	call   0x140011e70
   140002467:	mov    rbx,rax
   14000246a:	mov    rdx,rax
   14000246d:	lea    rcx,[rbp-0x19]
   140002471:	call   0x14000324c
   140002476:	mov    rcx,rbx
   140002479:	call   QWORD PTR [rip+0x3ef49]        # 0x1400413c8
   14000247f:	lea    rax,[rbp-0x19]
   140002483:	cmp    QWORD PTR [rbp-0x1],0x8
   140002488:	cmovae rax,QWORD PTR [rbp-0x19]
   14000248d:	mov    QWORD PTR [rsp+0x20],rax
   140002492:	mov    r9,rsi
   140002495:	mov    edx,0xe12305a9
   14000249a:	mov    r8d,0x2
   1400024a0:	lea    rcx,[rbp-0x59]
   1400024a4:	call   0x140010a9c
   1400024a9:	lea    rdx,[rip+0x53b40]        # 0x140055ff0
   1400024b0:	lea    rcx,[rbp-0x59]
   1400024b4:	call   0x140029fe8
   1400024b9:	nop
   1400024ba:	mov    edx,0x61230d33
   1400024bf:	mov    r8d,edi
   1400024c2:	lea    r9,[rbp-0x69]
   1400024c6:	mov    rax,QWORD PTR [r14]
   1400024c9:	mov    QWORD PTR [rbp-0x69],rsi
   1400024cd:	mov    rcx,r14
   1400024d0:	call   QWORD PTR [rax]
   1400024d2:	jmp    0x1400022b4
   1400024d7:	mov    DWORD PTR [rsp+0x28],r13d
   1400024dc:	lea    rax,[rip+0x431cd]        # 0x1400456b0
   1400024e3:	mov    QWORD PTR [rsp+0x20],rax
   1400024e8:	mov    r9d,r13d
   1400024eb:	mov    r8,rsi
   1400024ee:	mov    edx,edi
   1400024f0:	mov    ecx,0x409
   1400024f5:	call   QWORD PTR [rip+0x3eee5]        # 0x1400413e0
   1400024fb:	cmp    eax,0x2
   1400024fe:	jne    0x1400025d9
   140002504:	mov    r8d,edi
   140002507:	test   r15d,r15d
   14000250a:	jne    0x140002532
   14000250c:	lea    r9,[rip+0x4306d]        # 0x140045580
   140002513:	mov    edx,0xe12305aa
   140002518:	lea    rcx,[rbp-0x59]
   14000251c:	call   0x140010a9c
   140002521:	lea    rdx,[rip+0x53ac8]        # 0x140055ff0
   140002528:	lea    rcx,[rbp-0x59]
   14000252c:	call   0x140029fe8
   140002531:	int3   
   140002532:	lea    rsi,[rip+0x43047]        # 0x140045580
   140002539:	mov    QWORD PTR [rbp-0x69],rsi
   14000253d:	mov    rax,QWORD PTR [r14]
   140002540:	lea    r9,[rbp-0x69]
   140002544:	mov    edx,0x61230d34
   140002549:	mov    rcx,r14
   14000254c:	call   QWORD PTR [rax]
   14000254e:	call   0x1400251ac
   140002553:	test   eax,eax
   140002555:	jne    0x1400025cf
   140002557:	call   QWORD PTR [rip+0x3ee7b]        # 0x1400413d8
   14000255d:	mov    QWORD PTR [rbp-0x9],rbx
   140002561:	mov    QWORD PTR [rbp-0x1],rbx
   140002565:	mov    QWORD PTR [rbp-0x1],0x7
   14000256d:	mov    QWORD PTR [rbp-0x9],rbx
   140002571:	mov    WORD PTR [rbp-0x19],bx
   140002575:	mov    ecx,eax
   140002577:	call   0x140011e70
   14000257c:	mov    rbx,rax
   14000257f:	mov    rdx,rax
   140002582:	lea    rcx,[rbp-0x19]
   140002586:	call   0x14000324c
   14000258b:	mov    rcx,rbx
   14000258e:	call   QWORD PTR [rip+0x3ee34]        # 0x1400413c8
   140002594:	lea    rax,[rbp-0x19]
   140002598:	cmp    QWORD PTR [rbp-0x1],0x8
   14000259d:	cmovae rax,QWORD PTR [rbp-0x19]
   1400025a2:	mov    QWORD PTR [rsp+0x20],rax
   1400025a7:	mov    r9,rsi
   1400025aa:	mov    edx,0xe12305ab
   1400025af:	mov    r8d,0x2
   1400025b5:	lea    rcx,[rbp-0x59]
   1400025b9:	call   0x140010a9c
   1400025be:	lea    rdx,[rip+0x53a2b]        # 0x140055ff0
   1400025c5:	lea    rcx,[rbp-0x59]
   1400025c9:	call   0x140029fe8
   1400025ce:	nop
   1400025cf:	mov    edx,0x61230d35
   1400025d4:	jmp    0x1400024bf
   1400025d9:	mov    DWORD PTR [rsp+0x28],r13d
   1400025de:	lea    rax,[rip+0x430db]        # 0x1400456c0
   1400025e5:	mov    QWORD PTR [rsp+0x20],rax
   1400025ea:	mov    r9d,r13d
   1400025ed:	mov    r8,rsi
   1400025f0:	mov    edx,edi
   1400025f2:	mov    ecx,0x409
   1400025f7:	call   QWORD PTR [rip+0x3ede3]        # 0x1400413e0
   1400025fd:	cmp    eax,0x2
   140002600:	jne    0x1400026db
   140002606:	mov    r8d,edi
   140002609:	test   r12d,r12d
   14000260c:	je     0x140002634
   14000260e:	lea    r9,[rip+0x42f6b]        # 0x140045580
   140002615:	mov    edx,0xe12305a4
   14000261a:	lea    rcx,[rbp-0x59]
   14000261e:	call   0x140010a9c
   140002623:	lea    rdx,[rip+0x539c6]        # 0x140055ff0
   14000262a:	lea    rcx,[rbp-0x59]
   14000262e:	call   0x140029fe8
   140002633:	int3   
   140002634:	lea    rsi,[rip+0x42f45]        # 0x140045580
   14000263b:	mov    QWORD PTR [rbp-0x69],rsi
   14000263f:	mov    rax,QWORD PTR [r14]
   140002642:	lea    r9,[rbp-0x69]
   140002646:	mov    edx,0x61230d30
   14000264b:	mov    rcx,r14
   14000264e:	call   QWORD PTR [rax]
   140002650:	call   0x140024c48
   140002655:	test   eax,eax
   140002657:	jne    0x1400026d1
   140002659:	mov    QWORD PTR [rbp-0x9],rbx
   14000265d:	mov    QWORD PTR [rbp-0x1],rbx
   140002661:	mov    QWORD PTR [rbp-0x1],0x7
   140002669:	mov    QWORD PTR [rbp-0x9],rbx
   14000266d:	mov    WORD PTR [rbp-0x19],bx
   140002671:	call   QWORD PTR [rip+0x3ed61]        # 0x1400413d8
   140002677:	mov    ecx,eax
   140002679:	call   0x140011e70
   14000267e:	mov    rbx,rax
   140002681:	mov    rdx,rax
   140002684:	lea    rcx,[rbp-0x19]
   140002688:	call   0x14000324c
   14000268d:	mov    rcx,rbx
   140002690:	call   QWORD PTR [rip+0x3ed32]        # 0x1400413c8
   140002696:	lea    rax,[rbp-0x19]
   14000269a:	cmp    QWORD PTR [rbp-0x1],0x8
   14000269f:	cmovae rax,QWORD PTR [rbp-0x19]
   1400026a4:	mov    QWORD PTR [rsp+0x20],rax
   1400026a9:	mov    r9,rsi
   1400026ac:	mov    edx,0xe12305a5
   1400026b1:	mov    r8d,0x2
   1400026b7:	lea    rcx,[rbp-0x59]
   1400026bb:	call   0x140010a9c
   1400026c0:	lea    rdx,[rip+0x53929]        # 0x140055ff0
   1400026c7:	lea    rcx,[rbp-0x59]
   1400026cb:	call   0x140029fe8
   1400026d0:	nop
   1400026d1:	mov    edx,0x61230d31
   1400026d6:	jmp    0x1400024bf
   1400026db:	mov    DWORD PTR [rsp+0x28],r13d
   1400026e0:	lea    rax,[rip+0x42fe9]        # 0x1400456d0
   1400026e7:	mov    QWORD PTR [rsp+0x20],rax
   1400026ec:	mov    r9d,r13d
   1400026ef:	mov    r8,rsi
   1400026f2:	mov    edx,edi
   1400026f4:	mov    ecx,0x409
   1400026f9:	call   QWORD PTR [rip+0x3ece1]        # 0x1400413e0
   1400026ff:	cmp    eax,0x2
   140002702:	jne    0x14000289a
   140002708:	test   r12d,r12d
   14000270b:	jne    0x140002736
   14000270d:	lea    r9,[rip+0x42e6c]        # 0x140045580
   140002714:	mov    r8d,edi
   140002717:	mov    edx,0xe12305a6
   14000271c:	lea    rcx,[rbp-0x59]
   140002720:	call   0x140010a9c
   140002725:	lea    rdx,[rip+0x538c4]        # 0x140055ff0
   14000272c:	lea    rcx,[rbp-0x59]
   140002730:	call   0x140029fe8
   140002735:	int3   
   140002736:	lea    rsi,[rip+0x42e43]        # 0x140045580
   14000273d:	test   r15d,r15d
   140002740:	je     0x1400027f7
   140002746:	mov    QWORD PTR [rbp-0x69],rsi
   14000274a:	mov    rax,QWORD PTR [r14]
   14000274d:	lea    r9,[rbp-0x69]
   140002751:	mov    r8d,edi
   140002754:	mov    edx,0x61230d34
   140002759:	mov    rcx,r14
   14000275c:	call   QWORD PTR [rax]
   14000275e:	call   0x1400251ac
   140002763:	test   eax,eax
   140002765:	jne    0x1400027df
   140002767:	call   QWORD PTR [rip+0x3ec6b]        # 0x1400413d8
   14000276d:	mov    QWORD PTR [rbp-0x9],rbx
   140002771:	mov    QWORD PTR [rbp-0x1],rbx
   140002775:	mov    QWORD PTR [rbp-0x1],0x7
   14000277d:	mov    QWORD PTR [rbp-0x9],rbx
   140002781:	mov    WORD PTR [rbp-0x19],bx
   140002785:	mov    ecx,eax
   140002787:	call   0x140011e70
   14000278c:	mov    rbx,rax
   14000278f:	mov    rdx,rax
   140002792:	lea    rcx,[rbp-0x19]
   140002796:	call   0x14000324c
   14000279b:	mov    rcx,rbx
   14000279e:	call   QWORD PTR [rip+0x3ec24]        # 0x1400413c8
   1400027a4:	lea    rax,[rbp-0x19]
   1400027a8:	cmp    QWORD PTR [rbp-0x1],0x8
   1400027ad:	cmovae rax,QWORD PTR [rbp-0x19]
   1400027b2:	mov    QWORD PTR [rsp+0x20],rax
   1400027b7:	mov    r9,rsi
   1400027ba:	mov    edx,0xe12305ab
   1400027bf:	mov    r8d,0x2
   1400027c5:	lea    rcx,[rbp-0x59]
   1400027c9:	call   0x140010a9c
   1400027ce:	lea    rdx,[rip+0x5381b]        # 0x140055ff0
   1400027d5:	lea    rcx,[rbp-0x59]
   1400027d9:	call   0x140029fe8
   1400027de:	nop
   1400027df:	mov    QWORD PTR [rbp-0x69],rsi
   1400027e3:	mov    rax,QWORD PTR [r14]
   1400027e6:	lea    r9,[rbp-0x69]
   1400027ea:	mov    r8d,edi
   1400027ed:	mov    edx,0x61230d35
   1400027f2:	mov    rcx,r14
   1400027f5:	call   QWORD PTR [rax]
   1400027f7:	mov    QWORD PTR [rbp-0x69],rsi
   1400027fb:	mov    rax,QWORD PTR [r14]
   1400027fe:	lea    r9,[rbp-0x69]
   140002802:	mov    r8d,edi
   140002805:	mov    edx,0x61230d36
   14000280a:	mov    rcx,r14
   14000280d:	call   QWORD PTR [rax]
   14000280f:	call   0x1400252fc
   140002814:	test   eax,eax
   140002816:	jne    0x140002890
   140002818:	call   QWORD PTR [rip+0x3ebba]        # 0x1400413d8
   14000281e:	mov    QWORD PTR [rbp-0x9],rbx
   140002822:	mov    QWORD PTR [rbp-0x1],rbx
   140002826:	mov    QWORD PTR [rbp-0x1],0x7
   14000282e:	mov    QWORD PTR [rbp-0x9],rbx
   140002832:	mov    WORD PTR [rbp-0x19],bx
   140002836:	mov    ecx,eax
   140002838:	call   0x140011e70
   14000283d:	mov    rbx,rax
   140002840:	mov    rdx,rax
   140002843:	lea    rcx,[rbp-0x19]
   140002847:	call   0x14000324c
   14000284c:	mov    rcx,rbx
   14000284f:	call   QWORD PTR [rip+0x3eb73]        # 0x1400413c8
   140002855:	lea    rax,[rbp-0x19]
   140002859:	cmp    QWORD PTR [rbp-0x1],0x8
   14000285e:	cmovae rax,QWORD PTR [rbp-0x19]
   140002863:	mov    QWORD PTR [rsp+0x20],rax
   140002868:	mov    r9,rsi
   14000286b:	mov    edx,0xe12305a7
   140002870:	mov    r8d,0x2
   140002876:	lea    rcx,[rbp-0x59]
   14000287a:	call   0x140010a9c
   14000287f:	lea    rdx,[rip+0x5376a]        # 0x140055ff0
   140002886:	lea    rcx,[rbp-0x59]
   14000288a:	call   0x140029fe8
   14000288f:	nop
   140002890:	mov    edx,0x61230d37
   140002895:	jmp    0x1400024bf
   14000289a:	mov    r9,rsi
   14000289d:	mov    r8d,edi
   1400028a0:	mov    edx,0xe12305c0
   1400028a5:	lea    rcx,[rbp-0x59]
   1400028a9:	call   0x140010a9c
   1400028ae:	lea    rdx,[rip+0x5373b]        # 0x140055ff0
   1400028b5:	lea    rcx,[rbp-0x59]
   1400028b9:	call   0x140029fe8
   1400028be:	int3   
   1400028bf:	mov    rcx,QWORD PTR [rbp+0x1f]
   1400028c3:	xor    rcx,rsp
   1400028c6:	call   0x1400265a0
   1400028cb:	mov    rbx,QWORD PTR [rsp+0x110]
   1400028d3:	add    rsp,0xc0
   1400028da:	pop    r15
   1400028dc:	pop    r14
   1400028de:	pop    r13
   1400028e0:	pop    r12
   1400028e2:	pop    rdi
   1400028e3:	pop    rsi
   1400028e4:	pop    rbp
   1400028e5:	ret    
   1400028e6:	int3   
   1400028e7:	int3   
   1400028e8:	mov    rax,rsp
   1400028eb:	push   rbp
   1400028ec:	push   rsi
   1400028ed:	push   rdi
   1400028ee:	push   r12
   1400028f0:	push   r13
   1400028f2:	push   r14
   1400028f4:	push   r15
   1400028f6:	lea    rbp,[rax-0x78]
   1400028fa:	sub    rsp,0x140
   140002901:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000290a:	mov    QWORD PTR [rax+0x18],rbx
   14000290e:	mov    rax,QWORD PTR [rip+0x56773]        # 0x140059088
   140002915:	xor    rax,rsp
   140002918:	mov    QWORD PTR [rbp+0x30],rax
   14000291c:	mov    r14,rdx
   14000291f:	mov    rsi,rcx
   140002922:	mov    rax,QWORD PTR [rcx+0x8]
   140002926:	sub    rax,QWORD PTR [rcx]
   140002929:	sar    rax,0x3
   14000292d:	cmp    rax,0x2
   140002931:	jae    0x140002970
   140002933:	mov    edi,0x1
   140002938:	mov    DWORD PTR [rsp+0x78],edi
   14000293c:	mov    DWORD PTR [rsp+0x7c],0xe12305bd
   140002944:	xor    ebx,ebx
   140002946:	mov    QWORD PTR [rbp-0x80],rbx
   14000294a:	mov    QWORD PTR [rbp-0x78],rbx
   14000294e:	mov    QWORD PTR [rbp-0x70],rbx
   140002952:	mov    QWORD PTR [rbp-0x68],rbx
   140002956:	mov    QWORD PTR [rbp-0x60],rbx
   14000295a:	mov    QWORD PTR [rbp-0x58],rbx
   14000295e:	lea    rdx,[rip+0x5368b]        # 0x140055ff0
   140002965:	lea    rcx,[rsp+0x78]
   14000296a:	call   0x140029fe8
   14000296f:	int3   
   140002970:	mov    r8,QWORD PTR [rip+0x58189]        # 0x14005ab00
   140002977:	mov    rdx,QWORD PTR [rip+0x5818a]        # 0x14005ab08
   14000297e:	lea    rcx,[rbp-0x48]
   140002982:	call   0x14000fca0
   140002987:	nop
   140002988:	lea    rax,[rip+0x42e19]        # 0x1400457a8
   14000298f:	mov    QWORD PTR [rbp-0x50],rax
   140002993:	lea    rax,[rip+0x42df6]        # 0x140045790
   14000299a:	mov    QWORD PTR [rbp-0x50],rax
   14000299e:	xor    ebx,ebx
   1400029a0:	mov    r15d,ebx
   1400029a3:	mov    DWORD PTR [rsp+0x34],ebx
   1400029a7:	mov    r12d,ebx
   1400029aa:	mov    DWORD PTR [rsp+0x30],ebx
   1400029ae:	lea    edi,[rbx+0x1]
   1400029b1:	mov    r8d,edi
   1400029b4:	lea    rdx,[rip+0x4380d]        # 0x1400461c8
   1400029bb:	xor    ecx,ecx
   1400029bd:	call   QWORD PTR [rip+0x3e7d5]        # 0x140041198
   1400029c3:	test   rax,rax
   1400029c6:	je     0x1400029e8
   1400029c8:	mov    r9,rax
   1400029cb:	lea    r8,[rsp+0x30]
   1400029d0:	lea    rdx,[rsp+0x34]
   1400029d5:	lea    rcx,[rbp-0x48]
   1400029d9:	call   0x14000f5d4
   1400029de:	mov    r12d,DWORD PTR [rsp+0x30]
   1400029e3:	mov    r15d,DWORD PTR [rsp+0x34]
   1400029e8:	mov    rax,QWORD PTR [rsi]
   1400029eb:	mov    r13,QWORD PTR [rax+0x8]
   1400029ef:	or     ecx,0xffffffff
   1400029f2:	mov    DWORD PTR [rsp+0x28],ecx
   1400029f6:	lea    rax,[rip+0x42c83]        # 0x140045680
   1400029fd:	mov    QWORD PTR [rsp+0x20],rax
   140002a02:	mov    r9d,ecx
   140002a05:	mov    r8,r13
   140002a08:	mov    edx,edi
   140002a0a:	mov    ecx,0x409
   140002a0f:	call   QWORD PTR [rip+0x3e9cb]        # 0x1400413e0
   140002a15:	cmp    eax,0x2
   140002a18:	jne    0x140002b9f
   140002a1e:	mov    rax,QWORD PTR [rsi+0x8]
   140002a22:	sub    rax,QWORD PTR [rsi]
   140002a25:	sar    rax,0x3
   140002a29:	cmp    rax,0x3
   140002a2d:	jae    0x140002a65
   140002a2f:	mov    DWORD PTR [rsp+0x78],edi
   140002a33:	mov    DWORD PTR [rsp+0x7c],0xe12305be
   140002a3b:	mov    QWORD PTR [rbp-0x80],rbx
   140002a3f:	mov    QWORD PTR [rbp-0x78],rbx
   140002a43:	mov    QWORD PTR [rbp-0x70],rbx
   140002a47:	mov    QWORD PTR [rbp-0x68],rbx
   140002a4b:	mov    QWORD PTR [rbp-0x60],rbx
   140002a4f:	mov    QWORD PTR [rbp-0x58],rbx
   140002a53:	lea    rdx,[rip+0x53596]        # 0x140055ff0
   140002a5a:	lea    rcx,[rsp+0x78]
   140002a5f:	call   0x140029fe8
   140002a64:	int3   
   140002a65:	test   r15d,r15d
   140002a68:	jne    0x140002a79
   140002a6a:	xor    r8d,r8d
   140002a6d:	lea    rdx,[rbp-0x50]
   140002a71:	mov    rcx,r14
   140002a74:	call   0x14000dedc
   140002a79:	mov    rax,QWORD PTR [rsi]
   140002a7c:	or     r14d,0xffffffff
   140002a80:	mov    DWORD PTR [rsp+0x28],r14d
   140002a85:	lea    rcx,[rip+0x435d4]        # 0x140046060
   140002a8c:	mov    QWORD PTR [rsp+0x20],rcx
   140002a91:	mov    r9d,r14d
   140002a94:	mov    r8,QWORD PTR [rax+0x10]
   140002a98:	mov    edx,edi
   140002a9a:	mov    r15d,0x409
   140002aa0:	mov    ecx,r15d
   140002aa3:	call   QWORD PTR [rip+0x3e937]        # 0x1400413e0
   140002aa9:	cmp    eax,0x2
   140002aac:	jne    0x140002ab2
   140002aae:	mov    edx,eax
   140002ab0:	jmp    0x140002ae4
   140002ab2:	mov    rax,QWORD PTR [rsi]
   140002ab5:	mov    DWORD PTR [rsp+0x28],r14d
   140002aba:	lea    r8,[rip+0x42bd7]        # 0x140045698
   140002ac1:	mov    QWORD PTR [rsp+0x20],r8
   140002ac6:	mov    r9d,r14d
   140002ac9:	mov    r8,QWORD PTR [rax+0x10]
   140002acd:	mov    edx,edi
   140002acf:	mov    ecx,r15d
   140002ad2:	call   QWORD PTR [rip+0x3e908]        # 0x1400413e0
   140002ad8:	cmp    eax,0x2
   140002adb:	jne    0x140002b74
   140002ae1:	lea    edx,[rax+0x1]
   140002ae4:	lea    rcx,[rbp-0x48]
   140002ae8:	call   0x14000fb24
   140002aed:	test   eax,eax
   140002aef:	jne    0x140002b64
   140002af1:	mov    QWORD PTR [rbp-0x78],rbx
   140002af5:	mov    QWORD PTR [rbp-0x70],rbx
   140002af9:	mov    QWORD PTR [rbp-0x70],0x7
   140002b01:	mov    QWORD PTR [rbp-0x78],rbx
   140002b05:	mov    WORD PTR [rsp+0x78],bx
   140002b0a:	call   QWORD PTR [rip+0x3e8c8]        # 0x1400413d8
   140002b10:	mov    ecx,eax
   140002b12:	call   0x140011e70
   140002b17:	mov    rbx,rax
   140002b1a:	mov    rdx,rax
   140002b1d:	lea    rcx,[rsp+0x78]
   140002b22:	call   0x14000324c
   140002b27:	mov    rcx,rbx
   140002b2a:	call   QWORD PTR [rip+0x3e898]        # 0x1400413c8
   140002b30:	lea    r9,[rsp+0x78]
   140002b35:	cmp    QWORD PTR [rbp-0x70],0x8
   140002b3a:	cmovae r9,QWORD PTR [rsp+0x78]
   140002b40:	mov    r8d,edi
   140002b43:	mov    edx,0xe123054d
   140002b48:	lea    rcx,[rsp+0x40]
   140002b4d:	call   0x140010a9c
   140002b52:	lea    rdx,[rip+0x53497]        # 0x140055ff0
   140002b59:	lea    rcx,[rsp+0x40]
   140002b5e:	call   0x140029fe8
   140002b63:	nop
   140002b64:	lea    rcx,[rbp-0x48]
   140002b68:	call   0x14000fd20
   140002b6d:	xor    eax,eax
   140002b6f:	jmp    0x140002cb9
   140002b74:	mov    r9,QWORD PTR [rsi]
   140002b77:	mov    r9,QWORD PTR [r9+0x10]
   140002b7b:	mov    r8d,edi
   140002b7e:	mov    edx,0xe12305bf
   140002b83:	lea    rcx,[rsp+0x40]
   140002b88:	call   0x140010a9c
   140002b8d:	lea    rdx,[rip+0x5345c]        # 0x140055ff0
   140002b94:	lea    rcx,[rsp+0x40]
   140002b99:	call   0x140029fe8
   140002b9e:	int3   
   140002b9f:	or     ebx,0xffffffff
   140002ba2:	mov    DWORD PTR [rsp+0x28],ebx
   140002ba6:	lea    rax,[rip+0x42af3]        # 0x1400456a0
   140002bad:	mov    QWORD PTR [rsp+0x20],rax
   140002bb2:	mov    r9d,ebx
   140002bb5:	mov    r8,r13
   140002bb8:	mov    edx,edi
   140002bba:	mov    esi,0x409
   140002bbf:	mov    ecx,esi
   140002bc1:	call   QWORD PTR [rip+0x3e819]        # 0x1400413e0
   140002bc7:	cmp    eax,0x2
   140002bca:	jne    0x140002be1
   140002bcc:	mov    r9d,r12d
   140002bcf:	mov    r8d,r15d
   140002bd2:	lea    rdx,[rbp-0x50]
   140002bd6:	mov    rcx,r14
   140002bd9:	call   0x14000e020
   140002bde:	nop
   140002bdf:	jmp    0x140002b64
   140002be1:	mov    DWORD PTR [rsp+0x28],ebx
   140002be5:	lea    rax,[rip+0x42ac4]        # 0x1400456b0
   140002bec:	mov    QWORD PTR [rsp+0x20],rax
   140002bf1:	mov    r9d,ebx
   140002bf4:	mov    r8,r13
   140002bf7:	mov    edx,edi
   140002bf9:	mov    ecx,esi
   140002bfb:	call   QWORD PTR [rip+0x3e7df]        # 0x1400413e0
   140002c01:	cmp    eax,0x2
   140002c04:	jne    0x140002c1b
   140002c06:	mov    r9d,r12d
   140002c09:	lea    rdx,[rbp-0x50]
   140002c0d:	mov    rcx,r14
   140002c10:	call   0x14000e228
   140002c15:	nop
   140002c16:	jmp    0x140002b64
   140002c1b:	mov    DWORD PTR [rsp+0x28],ebx
   140002c1f:	lea    rax,[rip+0x42a9a]        # 0x1400456c0
   140002c26:	mov    QWORD PTR [rsp+0x20],rax
   140002c2b:	mov    r9d,ebx
   140002c2e:	mov    r8,r13
   140002c31:	mov    edx,edi
   140002c33:	mov    ecx,esi
   140002c35:	call   QWORD PTR [rip+0x3e7a5]        # 0x1400413e0
   140002c3b:	cmp    eax,0x2
   140002c3e:	jne    0x140002c55
   140002c40:	mov    r8d,r15d
   140002c43:	lea    rdx,[rbp-0x50]
   140002c47:	mov    rcx,r14
   140002c4a:	call   0x14000dedc
   140002c4f:	nop
   140002c50:	jmp    0x140002b64
   140002c55:	mov    DWORD PTR [rsp+0x28],ebx
   140002c59:	lea    rax,[rip+0x42a70]        # 0x1400456d0
   140002c60:	mov    QWORD PTR [rsp+0x20],rax
   140002c65:	mov    r9d,ebx
   140002c68:	mov    r8,r13
   140002c6b:	mov    edx,edi
   140002c6d:	mov    ecx,esi
   140002c6f:	call   QWORD PTR [rip+0x3e76b]        # 0x1400413e0
   140002c75:	cmp    eax,0x2
   140002c78:	jne    0x140002c92
   140002c7a:	mov    r9d,r12d
   140002c7d:	mov    r8d,r15d
   140002c80:	lea    rdx,[rbp-0x50]
   140002c84:	mov    rcx,r14
   140002c87:	call   0x14000e490
   140002c8c:	nop
   140002c8d:	jmp    0x140002b64
   140002c92:	mov    r9,r13
   140002c95:	mov    r8d,edi
   140002c98:	mov    edx,0xe12305c0
   140002c9d:	lea    rcx,[rsp+0x40]
   140002ca2:	call   0x140010a9c
   140002ca7:	lea    rdx,[rip+0x53342]        # 0x140055ff0
   140002cae:	lea    rcx,[rsp+0x40]
   140002cb3:	call   0x140029fe8
   140002cb8:	nop
   140002cb9:	mov    rcx,QWORD PTR [rbp+0x30]
   140002cbd:	xor    rcx,rsp
   140002cc0:	call   0x1400265a0
   140002cc5:	mov    rbx,QWORD PTR [rsp+0x190]
   140002ccd:	add    rsp,0x140
   140002cd4:	pop    r15
   140002cd6:	pop    r14
   140002cd8:	pop    r13
   140002cda:	pop    r12
   140002cdc:	pop    rdi
   140002cdd:	pop    rsi
   140002cde:	pop    rbp
   140002cdf:	ret    
   140002ce0:	mov    rax,rsp
   140002ce3:	push   rbp
   140002ce4:	push   rsi
   140002ce5:	push   rdi
   140002ce6:	push   r12
   140002ce8:	push   r13
   140002cea:	push   r14
   140002cec:	push   r15
   140002cee:	lea    rbp,[rax-0x5f]
   140002cf2:	sub    rsp,0xb0
   140002cf9:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   140002d01:	mov    QWORD PTR [rax+0x8],rbx
   140002d05:	mov    r12,rdx
   140002d08:	mov    rdi,rcx
   140002d0b:	or     rbx,0xffffffffffffffff
   140002d0f:	xor    r13d,r13d
   140002d12:	inc    rbx
   140002d15:	cmp    WORD PTR [rcx+rbx*2],r13w
   140002d1a:	jne    0x140002d12
   140002d1c:	mov    QWORD PTR [rbp-0x41],r13
   140002d20:	mov    QWORD PTR [rbp-0x39],r13
   140002d24:	mov    QWORD PTR [rbp-0x31],r13
   140002d28:	lea    rdx,[rbx+0x1]
   140002d2c:	lea    rcx,[rbp-0x41]
   140002d30:	call   0x14000337c
   140002d35:	nop
   140002d36:	mov    r8,rdi
   140002d39:	lea    rdx,[rbx+0x1]
   140002d3d:	mov    r14,QWORD PTR [rbp-0x41]
   140002d41:	mov    rcx,r14
   140002d44:	call   0x140001004
   140002d49:	mov    QWORD PTR [rbp+0x7f],r13
   140002d4d:	mov    rsi,r13
   140002d50:	mov    QWORD PTR [rbp-0x59],r13
   140002d54:	mov    rbx,r13
   140002d57:	mov    QWORD PTR [rbp-0x51],rbx
   140002d5b:	mov    rdi,r13
   140002d5e:	mov    QWORD PTR [rbp-0x49],r13
   140002d62:	mov    rcx,r14
   140002d65:	lea    r8,[rbp+0x7f]
   140002d69:	lea    rdx,[rip+0x42974]        # 0x1400456e4
   140002d70:	call   0x140026c58
   140002d75:	test   rax,rax
   140002d78:	mov    QWORD PTR [rbp+0x77],rax
   140002d7c:	mov    r15,rax
   140002d7f:	je     0x140002ed3
   140002d85:	movabs rdx,0x1fffffffffffffff
   140002d8f:	lea    rax,[rbp+0x77]
   140002d93:	cmp    rax,rbx
   140002d96:	jae    0x140002e38
   140002d9c:	lea    rax,[rbp+0x77]
   140002da0:	cmp    rsi,rax
   140002da3:	ja     0x140002e38
   140002da9:	lea    r15,[rbp+0x77]
   140002dad:	sub    r15,rsi
   140002db0:	sar    r15,0x3
   140002db4:	cmp    rbx,rdi
   140002db7:	jne    0x140002e22
   140002db9:	mov    rax,rdi
   140002dbc:	sub    rax,rbx
   140002dbf:	sar    rax,0x3
   140002dc3:	cmp    rax,0x1
   140002dc7:	jae    0x140002e22
   140002dc9:	sub    rbx,rsi
   140002dcc:	sar    rbx,0x3
   140002dd0:	mov    rax,rdx
   140002dd3:	sub    rax,rbx
   140002dd6:	cmp    rax,0x1
   140002dda:	jb     0x140002eb9
   140002de0:	inc    rbx
   140002de3:	sub    rdi,rsi
   140002de6:	sar    rdi,0x3
   140002dea:	mov    rcx,rdi
   140002ded:	shr    rcx,1
   140002df0:	mov    rax,rdx
   140002df3:	sub    rax,rcx
   140002df6:	cmp    rax,rdi
   140002df9:	jae    0x140002e00
   140002dfb:	mov    rdi,r13
   140002dfe:	jmp    0x140002e03
   140002e00:	add    rdi,rcx
   140002e03:	cmp    rdi,rbx
   140002e06:	cmovb  rdi,rbx
   140002e0a:	mov    rdx,rdi
   140002e0d:	lea    rcx,[rbp-0x59]
   140002e11:	call   0x1400037f8
   140002e16:	mov    rdi,QWORD PTR [rbp-0x49]
   140002e1a:	mov    rbx,QWORD PTR [rbp-0x51]
   140002e1e:	mov    rsi,QWORD PTR [rbp-0x59]
   140002e22:	mov    QWORD PTR [rbp+0x1f],rbx
   140002e26:	mov    QWORD PTR [rbp+0xf],rbx
   140002e2a:	test   rbx,rbx
   140002e2d:	je     0x140002e36
   140002e2f:	mov    rax,QWORD PTR [rsi+r15*8]
   140002e33:	mov    QWORD PTR [rbx],rax
   140002e36:	jmp    0x140002eaa
   140002e38:	cmp    rbx,rdi
   140002e3b:	jne    0x140002ea2
   140002e3d:	mov    rax,rdi
   140002e40:	sub    rax,rbx
   140002e43:	sar    rax,0x3
   140002e47:	cmp    rax,0x1
   140002e4b:	jae    0x140002ea2
   140002e4d:	sub    rbx,rsi
   140002e50:	sar    rbx,0x3
   140002e54:	mov    rax,rdx
   140002e57:	sub    rax,rbx
   140002e5a:	cmp    rax,0x1
   140002e5e:	jb     0x140002ec6
   140002e60:	inc    rbx
   140002e63:	sub    rdi,rsi
   140002e66:	sar    rdi,0x3
   140002e6a:	mov    rcx,rdi
   140002e6d:	shr    rcx,1
   140002e70:	mov    rax,rdx
   140002e73:	sub    rax,rcx
   140002e76:	cmp    rax,rdi
   140002e79:	jae    0x140002e80
   140002e7b:	mov    rdi,r13
   140002e7e:	jmp    0x140002e83
   140002e80:	add    rdi,rcx
   140002e83:	cmp    rdi,rbx
   140002e86:	cmovb  rdi,rbx
   140002e8a:	mov    rdx,rdi
   140002e8d:	lea    rcx,[rbp-0x59]
   140002e91:	call   0x1400037f8
   140002e96:	mov    rdi,QWORD PTR [rbp-0x49]
   140002e9a:	mov    rbx,QWORD PTR [rbp-0x51]
   140002e9e:	mov    rsi,QWORD PTR [rbp-0x59]
   140002ea2:	test   rbx,rbx
   140002ea5:	je     0x140002eaa
   140002ea7:	mov    QWORD PTR [rbx],r15
   140002eaa:	add    rbx,0x8
   140002eae:	mov    QWORD PTR [rbp-0x51],rbx
   140002eb2:	xor    ecx,ecx
   140002eb4:	jmp    0x140002d65
   140002eb9:	lea    rcx,[rip+0x42890]        # 0x140045750
   140002ec0:	call   0x140031f18
   140002ec5:	int3   
   140002ec6:	lea    rcx,[rip+0x42883]        # 0x140045750
   140002ecd:	call   0x140031f18
   140002ed2:	int3   
   140002ed3:	sub    rbx,rsi
   140002ed6:	sar    rbx,0x3
   140002eda:	mov    edi,0x1
   140002edf:	cmp    rbx,rdi
   140002ee2:	jae    0x140002f17
   140002ee4:	mov    DWORD PTR [rbp-0x29],edi
   140002ee7:	mov    DWORD PTR [rbp-0x25],0xe12305b5
   140002eee:	mov    QWORD PTR [rbp-0x21],r13
   140002ef2:	mov    QWORD PTR [rbp-0x19],r13
   140002ef6:	mov    QWORD PTR [rbp-0x11],r13
   140002efa:	mov    QWORD PTR [rbp-0x9],r13
   140002efe:	mov    QWORD PTR [rbp-0x1],r13
   140002f02:	mov    QWORD PTR [rbp+0x7],r13
   140002f06:	lea    rdx,[rip+0x530e3]        # 0x140055ff0
   140002f0d:	lea    rcx,[rbp-0x29]
   140002f11:	call   0x140029fe8
   140002f16:	int3   
   140002f17:	or     rbx,0xffffffffffffffff
   140002f1b:	mov    DWORD PTR [rsp+0x28],ebx
   140002f1f:	lea    rax,[rip+0x427ca]        # 0x1400456f0
   140002f26:	mov    QWORD PTR [rsp+0x20],rax
   140002f2b:	mov    r9d,ebx
   140002f2e:	mov    r8,QWORD PTR [rsi]
   140002f31:	mov    edx,edi
   140002f33:	mov    r15d,0x409
   140002f39:	mov    ecx,r15d
   140002f3c:	call   QWORD PTR [rip+0x3e49e]        # 0x1400413e0
   140002f42:	cmp    eax,0x2
   140002f45:	jne    0x140002f8f
   140002f47:	mov    rdx,r12
   140002f4a:	lea    rcx,[rbp-0x59]
   140002f4e:	call   0x140001840
   140002f53:	mov    ebx,eax
   140002f55:	mov    rcx,QWORD PTR [rbp-0x59]
   140002f59:	test   rcx,rcx
   140002f5c:	je     0x140002f6f
   140002f5e:	call   0x14002657c
   140002f63:	mov    QWORD PTR [rbp-0x59],r13
   140002f67:	mov    QWORD PTR [rbp-0x51],r13
   140002f6b:	mov    QWORD PTR [rbp-0x49],r13
   140002f6f:	test   r14,r14
   140002f72:	je     0x140002f88
   140002f74:	mov    rcx,r14
   140002f77:	call   0x14002657c
   140002f7c:	mov    QWORD PTR [rbp-0x41],r13
   140002f80:	mov    QWORD PTR [rbp-0x39],r13
   140002f84:	mov    QWORD PTR [rbp-0x31],r13
   140002f88:	mov    eax,ebx
   140002f8a:	jmp    0x14000302d
   140002f8f:	mov    DWORD PTR [rsp+0x28],ebx
   140002f93:	lea    rax,[rip+0x4276e]        # 0x140045708
   140002f9a:	mov    QWORD PTR [rsp+0x20],rax
   140002f9f:	mov    r9d,ebx
   140002fa2:	mov    r8,QWORD PTR [rsi]
   140002fa5:	mov    edx,edi
   140002fa7:	mov    ecx,r15d
   140002faa:	call   QWORD PTR [rip+0x3e430]        # 0x1400413e0
   140002fb0:	cmp    eax,0x2
   140002fb3:	jne    0x140002fc3
   140002fb5:	mov    rdx,r12
   140002fb8:	lea    rcx,[rbp-0x59]
   140002fbc:	call   0x140002098
   140002fc1:	jmp    0x140002f53
   140002fc3:	mov    DWORD PTR [rsp+0x28],ebx
   140002fc7:	lea    rax,[rip+0x4274a]        # 0x140045718
   140002fce:	mov    QWORD PTR [rsp+0x20],rax
   140002fd3:	mov    r9d,ebx
   140002fd6:	mov    r8,QWORD PTR [rsi]
   140002fd9:	mov    edx,edi
   140002fdb:	mov    ecx,r15d
   140002fde:	call   QWORD PTR [rip+0x3e3fc]        # 0x1400413e0
   140002fe4:	cmp    eax,0x2
   140002fe7:	jne    0x140002ffa
   140002fe9:	mov    rdx,r12
   140002fec:	lea    rcx,[rbp-0x59]
   140002ff0:	call   0x1400028e8
   140002ff5:	jmp    0x140002f53
   140002ffa:	mov    DWORD PTR [rbp-0x29],edi
   140002ffd:	mov    DWORD PTR [rbp-0x25],0xe12305b5
   140003004:	mov    QWORD PTR [rbp-0x21],r13
   140003008:	mov    QWORD PTR [rbp-0x19],r13
   14000300c:	mov    QWORD PTR [rbp-0x11],r13
   140003010:	mov    QWORD PTR [rbp-0x9],r13
   140003014:	mov    QWORD PTR [rbp-0x1],r13
   140003018:	mov    QWORD PTR [rbp+0x7],r13
   14000301c:	lea    rdx,[rip+0x52fcd]        # 0x140055ff0
   140003023:	lea    rcx,[rbp-0x29]
   140003027:	call   0x140029fe8
   14000302c:	nop
   14000302d:	mov    rbx,QWORD PTR [rsp+0xf0]
   140003035:	add    rsp,0xb0
   14000303c:	pop    r15
   14000303e:	pop    r14
   140003040:	pop    r13
   140003042:	pop    r12
   140003044:	pop    rdi
   140003045:	pop    rsi
   140003046:	pop    rbp
   140003047:	ret    
   140003048:	rex push rbx
   14000304a:	sub    rsp,0x20
   14000304e:	cmp    QWORD PTR [rcx+0x18],0x10
   140003053:	mov    rbx,rcx
   140003056:	jb     0x140003060
   140003058:	mov    rcx,QWORD PTR [rcx]
   14000305b:	call   0x14002657c
   140003060:	and    QWORD PTR [rbx+0x10],0x0
   140003065:	mov    QWORD PTR [rbx+0x18],0xf
   14000306d:	mov    BYTE PTR [rbx],0x0
   140003070:	add    rsp,0x20
   140003074:	pop    rbx
   140003075:	ret    
   140003076:	int3   
   140003077:	int3   
   140003078:	rex push rbx
   14000307a:	sub    rsp,0x20
   14000307e:	cmp    QWORD PTR [rcx+0x18],0x8
   140003083:	mov    rbx,rcx
   140003086:	jb     0x140003090
   140003088:	mov    rcx,QWORD PTR [rcx]
   14000308b:	call   0x14002657c
   140003090:	xor    eax,eax
   140003092:	mov    QWORD PTR [rbx+0x18],0x7
   14000309a:	mov    QWORD PTR [rbx+0x10],rax
   14000309e:	mov    WORD PTR [rbx],ax
   1400030a1:	add    rsp,0x20
   1400030a5:	pop    rbx
   1400030a6:	ret    
   1400030a7:	int3   
   1400030a8:	mov    rax,rsp
   1400030ab:	mov    QWORD PTR [rax+0x8],rbx
   1400030af:	mov    QWORD PTR [rax+0x10],rbp
   1400030b3:	mov    QWORD PTR [rax+0x18],rsi
   1400030b7:	mov    QWORD PTR [rax+0x20],rdi
   1400030bb:	push   r14
   1400030bd:	sub    rsp,0x20
   1400030c1:	xor    r14d,r14d
   1400030c4:	or     r8,0xffffffffffffffff
   1400030c8:	mov    rbp,rdx
   1400030cb:	mov    rbx,rcx
   1400030ce:	cmp    WORD PTR [rdx],r14w
   1400030d2:	jne    0x1400030d9
   1400030d4:	mov    edi,r14d
   1400030d7:	jmp    0x1400030e6
   1400030d9:	mov    rdi,r8
   1400030dc:	inc    rdi
   1400030df:	cmp    WORD PTR [rdx+rdi*2],r14w
   1400030e4:	jne    0x1400030dc
   1400030e6:	mov    rdx,QWORD PTR [rcx+0x18]
   1400030ea:	cmp    rdx,0x8
   1400030ee:	jb     0x1400030f5
   1400030f0:	mov    rax,QWORD PTR [rcx]
   1400030f3:	jmp    0x1400030f8
   1400030f5:	mov    rax,rcx
   1400030f8:	cmp    rbp,rax
   1400030fb:	jb     0x140003140
   1400030fd:	cmp    rdx,0x8
   140003101:	jb     0x140003106
   140003103:	mov    rcx,QWORD PTR [rcx]
   140003106:	mov    rax,QWORD PTR [rbx+0x10]
   14000310a:	lea    rcx,[rcx+rax*2]
   14000310e:	cmp    rcx,rbp
   140003111:	jbe    0x140003140
   140003113:	cmp    rdx,0x8
   140003117:	jb     0x14000311e
   140003119:	mov    rax,QWORD PTR [rbx]
   14000311c:	jmp    0x140003121
   14000311e:	mov    rax,rbx
   140003121:	sub    rbp,rax
   140003124:	mov    r9,rdi
   140003127:	mov    rdx,rbx
   14000312a:	sar    rbp,1
   14000312d:	mov    rcx,rbx
   140003130:	mov    r8,rbp
   140003133:	call   0x1400036c4
   140003138:	mov    rbx,rax
   14000313b:	jmp    0x1400031e5
   140003140:	mov    rax,QWORD PTR [rbx+0x10]
   140003144:	sub    r8,rax
   140003147:	cmp    r8,rdi
   14000314a:	jbe    0x140003203
   140003150:	test   rdi,rdi
   140003153:	je     0x1400031e5
   140003159:	lea    rsi,[rax+rdi*1]
   14000315d:	movabs rcx,0x7ffffffffffffffe
   140003167:	cmp    rsi,rcx
   14000316a:	ja     0x140003210
   140003170:	cmp    rdx,rsi
   140003173:	jae    0x140003185
   140003175:	mov    r8,rax
   140003178:	mov    rdx,rsi
   14000317b:	mov    rcx,rbx
   14000317e:	call   0x140003b14
   140003183:	jmp    0x1400031a0
   140003185:	test   rsi,rsi
   140003188:	jne    0x1400031a5
   14000318a:	mov    QWORD PTR [rbx+0x10],r14
   14000318e:	cmp    rdx,0x8
   140003192:	jb     0x140003199
   140003194:	mov    rax,QWORD PTR [rbx]
   140003197:	jmp    0x14000319c
   140003199:	mov    rax,rbx
   14000319c:	mov    WORD PTR [rax],r14w
   1400031a0:	test   rsi,rsi
   1400031a3:	je     0x1400031e5
   1400031a5:	cmp    QWORD PTR [rbx+0x18],0x8
   1400031aa:	jb     0x1400031b1
   1400031ac:	mov    rcx,QWORD PTR [rbx]
   1400031af:	jmp    0x1400031b4
   1400031b1:	mov    rcx,rbx
   1400031b4:	test   rdi,rdi
   1400031b7:	je     0x1400031cd
   1400031b9:	mov    rax,QWORD PTR [rbx+0x10]
   1400031bd:	lea    r8,[rdi+rdi*1]
   1400031c1:	mov    rdx,rbp
   1400031c4:	lea    rcx,[rcx+rax*2]
   1400031c8:	call   0x1400265d0
   1400031cd:	cmp    QWORD PTR [rbx+0x18],0x8
   1400031d2:	mov    QWORD PTR [rbx+0x10],rsi
   1400031d6:	jb     0x1400031dd
   1400031d8:	mov    rax,QWORD PTR [rbx]
   1400031db:	jmp    0x1400031e0
   1400031dd:	mov    rax,rbx
   1400031e0:	mov    WORD PTR [rax+rsi*2],r14w
   1400031e5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400031ea:	mov    rsi,QWORD PTR [rsp+0x40]
   1400031ef:	mov    rdi,QWORD PTR [rsp+0x48]
   1400031f4:	mov    rax,rbx
   1400031f7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400031fc:	add    rsp,0x20
   140003200:	pop    r14
   140003202:	ret    
   140003203:	lea    rcx,[rip+0x42536]        # 0x140045740
   14000320a:	call   0x140031f18
   14000320f:	int3   
   140003210:	lea    rcx,[rip+0x42529]        # 0x140045740
   140003217:	call   0x140031f18
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	rex push rbx
   140003222:	sub    rsp,0x20
   140003226:	mov    rbx,rcx
   140003229:	mov    rcx,QWORD PTR [rcx]
   14000322c:	test   rcx,rcx
   14000322f:	je     0x140003244
   140003231:	call   0x14002657c
   140003236:	and    QWORD PTR [rbx],0x0
   14000323a:	and    QWORD PTR [rbx+0x8],0x0
   14000323f:	and    QWORD PTR [rbx+0x10],0x0
   140003244:	add    rsp,0x20
   140003248:	pop    rbx
   140003249:	ret    
   14000324a:	int3   
   14000324b:	int3   
   14000324c:	mov    QWORD PTR [rsp+0x8],rbx
   140003251:	mov    QWORD PTR [rsp+0x10],rbp
   140003256:	mov    QWORD PTR [rsp+0x18],rsi
   14000325b:	push   rdi
   14000325c:	sub    rsp,0x20
   140003260:	xor    ebp,ebp
   140003262:	mov    rsi,rdx
   140003265:	mov    rbx,rcx
   140003268:	cmp    WORD PTR [rdx],bp
   14000326b:	jne    0x140003271
   14000326d:	mov    edi,ebp
   14000326f:	jmp    0x14000327e
   140003271:	or     rdi,0xffffffffffffffff
   140003275:	inc    rdi
   140003278:	cmp    WORD PTR [rdx+rdi*2],bp
   14000327c:	jne    0x140003275
   14000327e:	mov    rdx,QWORD PTR [rcx+0x18]
   140003282:	cmp    rdx,0x8
   140003286:	jb     0x14000328d
   140003288:	mov    rax,QWORD PTR [rcx]
   14000328b:	jmp    0x140003290
   14000328d:	mov    rax,rcx
   140003290:	cmp    rsi,rax
   140003293:	jb     0x1400032d5
   140003295:	cmp    rdx,0x8
   140003299:	jb     0x14000329e
   14000329b:	mov    rcx,QWORD PTR [rcx]
   14000329e:	mov    rax,QWORD PTR [rbx+0x10]
   1400032a2:	lea    rcx,[rcx+rax*2]
   1400032a6:	cmp    rcx,rsi
   1400032a9:	jbe    0x1400032d5
   1400032ab:	cmp    rdx,0x8
   1400032af:	jb     0x1400032b6
   1400032b1:	mov    rax,QWORD PTR [rbx]
   1400032b4:	jmp    0x1400032b9
   1400032b6:	mov    rax,rbx
   1400032b9:	sub    rsi,rax
   1400032bc:	mov    r9,rdi
   1400032bf:	mov    rdx,rbx
   1400032c2:	sar    rsi,1
   1400032c5:	mov    rcx,rbx
   1400032c8:	mov    r8,rsi
   1400032cb:	call   0x1400039d4
   1400032d0:	mov    rbx,rax
   1400032d3:	jmp    0x140003354
   1400032d5:	movabs rax,0x7ffffffffffffffe
   1400032df:	cmp    rdi,rax
   1400032e2:	ja     0x14000336c
   1400032e8:	cmp    rdx,rdi
   1400032eb:	jae    0x1400032fe
   1400032ed:	mov    r8,QWORD PTR [rbx+0x10]
   1400032f1:	mov    rdx,rdi
   1400032f4:	mov    rcx,rbx
   1400032f7:	call   0x140003b14
   1400032fc:	jmp    0x140003318
   1400032fe:	test   rdi,rdi
   140003301:	jne    0x14000331d
   140003303:	mov    QWORD PTR [rbx+0x10],rbp
   140003307:	cmp    rdx,0x8
   14000330b:	jb     0x140003312
   14000330d:	mov    rax,QWORD PTR [rbx]
   140003310:	jmp    0x140003315
   140003312:	mov    rax,rbx
   140003315:	mov    WORD PTR [rax],bp
   140003318:	test   rdi,rdi
   14000331b:	je     0x140003354
   14000331d:	cmp    QWORD PTR [rbx+0x18],0x8
   140003322:	jb     0x140003329
   140003324:	mov    rcx,QWORD PTR [rbx]
   140003327:	jmp    0x14000332c
   140003329:	mov    rcx,rbx
   14000332c:	test   rdi,rdi
   14000332f:	je     0x14000333d
   140003331:	lea    r8,[rdi+rdi*1]
   140003335:	mov    rdx,rsi
   140003338:	call   0x1400265d0
   14000333d:	cmp    QWORD PTR [rbx+0x18],0x8
   140003342:	mov    QWORD PTR [rbx+0x10],rdi
   140003346:	jb     0x14000334d
   140003348:	mov    rax,QWORD PTR [rbx]
   14000334b:	jmp    0x140003350
   14000334d:	mov    rax,rbx
   140003350:	mov    WORD PTR [rax+rdi*2],bp
   140003354:	mov    rbp,QWORD PTR [rsp+0x38]
   140003359:	mov    rsi,QWORD PTR [rsp+0x40]
   14000335e:	mov    rax,rbx
   140003361:	mov    rbx,QWORD PTR [rsp+0x30]
   140003366:	add    rsp,0x20
   14000336a:	pop    rdi
   14000336b:	ret    
   14000336c:	lea    rcx,[rip+0x423cd]        # 0x140045740
   140003373:	call   0x140031f18
   140003378:	int3   
   140003379:	int3   
   14000337a:	int3   
   14000337b:	int3   
   14000337c:	mov    rax,rsp
   14000337f:	mov    QWORD PTR [rax+0x8],rcx
   140003383:	push   rdi
   140003384:	sub    rsp,0x40
   140003388:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140003390:	mov    QWORD PTR [rax+0x10],rbx
   140003394:	mov    QWORD PTR [rax+0x18],rsi
   140003398:	mov    rbx,rdx
   14000339b:	mov    rsi,rcx
   14000339e:	mov    rax,QWORD PTR [rcx+0x8]
   1400033a2:	mov    r9,QWORD PTR [rcx]
   1400033a5:	mov    r8,rax
   1400033a8:	sub    r8,r9
   1400033ab:	sar    r8,1
   1400033ae:	cmp    r8,rdx
   1400033b1:	jbe    0x1400033f6
   1400033b3:	lea    rbx,[r9+rdx*2]
   1400033b7:	cmp    rbx,r9
   1400033ba:	jne    0x1400033c5
   1400033bc:	mov    QWORD PTR [rcx+0x8],r9
   1400033c0:	jmp    0x1400034b3
   1400033c5:	cmp    rbx,rax
   1400033c8:	je     0x1400034b3
   1400033ce:	mov    rcx,rax
   1400033d1:	sub    rcx,rax
   1400033d4:	sar    rcx,1
   1400033d7:	lea    rdi,[rcx+rcx*1]
   1400033db:	mov    r8,rdi
   1400033de:	mov    rdx,rax
   1400033e1:	mov    rcx,rbx
   1400033e4:	call   0x1400265d0
   1400033e9:	lea    rax,[rdi+rbx*1]
   1400033ed:	mov    QWORD PTR [rsi+0x8],rax
   1400033f1:	jmp    0x1400034b3
   1400033f6:	jae    0x1400034b3
   1400033fc:	mov    r10,rdx
   1400033ff:	sub    r10,r8
   140003402:	mov    rdx,QWORD PTR [rcx+0x10]
   140003406:	mov    rcx,rdx
   140003409:	sub    rcx,rax
   14000340c:	sar    rcx,1
   14000340f:	cmp    rcx,r10
   140003412:	jae    0x14000346a
   140003414:	movabs rcx,0x7fffffffffffffff
   14000341e:	mov    rax,rcx
   140003421:	sub    rax,r8
   140003424:	cmp    rax,r10
   140003427:	jae    0x140003436
   140003429:	lea    rcx,[rip+0x42320]        # 0x140045750
   140003430:	call   0x140031f18
   140003435:	int3   
   140003436:	lea    r11,[r8+r10*1]
   14000343a:	sub    rdx,r9
   14000343d:	sar    rdx,1
   140003440:	mov    rax,rdx
   140003443:	shr    rax,1
   140003446:	sub    rcx,rax
   140003449:	cmp    rcx,rdx
   14000344c:	jae    0x140003454
   14000344e:	xor    edi,edi
   140003450:	mov    edx,edi
   140003452:	jmp    0x140003459
   140003454:	add    rdx,rax
   140003457:	xor    edi,edi
   140003459:	cmp    rdx,r11
   14000345c:	cmovb  rdx,r11
   140003460:	mov    rcx,rsi
   140003463:	call   0x140003c4c
   140003468:	jmp    0x14000346c
   14000346a:	xor    edi,edi
   14000346c:	mov    rdx,QWORD PTR [rsi+0x8]
   140003470:	mov    rax,rdx
   140003473:	sub    rax,QWORD PTR [rsi]
   140003476:	sar    rax,1
   140003479:	mov    rcx,rbx
   14000347c:	sub    rcx,rax
   14000347f:	mov    QWORD PTR [rsp+0x20],rcx
   140003484:	mov    QWORD PTR [rsp+0x28],rdx
   140003489:	test   rcx,rcx
   14000348c:	je     0x14000349a
   14000348e:	mov    WORD PTR [rdx],di
   140003491:	dec    rcx
   140003494:	add    rdx,0x2
   140003498:	jmp    0x14000347f
   14000349a:	mov    rcx,QWORD PTR [rsi+0x8]
   14000349e:	mov    rax,rcx
   1400034a1:	sub    rax,QWORD PTR [rsi]
   1400034a4:	sar    rax,1
   1400034a7:	sub    rbx,rax
   1400034aa:	lea    rax,[rcx+rbx*2]
   1400034ae:	jmp    0x1400033ed
   1400034b3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400034b8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400034bd:	add    rsp,0x40
   1400034c1:	pop    rdi
   1400034c2:	ret    
   1400034c3:	int3   
   1400034c4:	mov    rax,rsp
   1400034c7:	mov    QWORD PTR [rax+0x8],rcx
   1400034cb:	push   rdi
   1400034cc:	sub    rsp,0x30
   1400034d0:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400034d8:	mov    QWORD PTR [rax+0x10],rbx
   1400034dc:	mov    QWORD PTR [rax+0x18],rsi
   1400034e0:	mov    rbx,rdx
   1400034e3:	mov    rsi,rcx
   1400034e6:	mov    rax,QWORD PTR [rcx+0x8]
   1400034ea:	mov    r8,QWORD PTR [rcx]
   1400034ed:	mov    r9,rax
   1400034f0:	sub    r9,r8
   1400034f3:	cmp    r9,rdx
   1400034f6:	jbe    0x140003533
   1400034f8:	add    rbx,r8
   1400034fb:	cmp    rbx,r8
   1400034fe:	jne    0x140003509
   140003500:	mov    QWORD PTR [rcx+0x8],r8
   140003504:	jmp    0x1400035b3
   140003509:	cmp    rbx,rax
   14000350c:	je     0x1400035b3
   140003512:	mov    rdi,rax
   140003515:	sub    rdi,rax
   140003518:	mov    r8,rdi
   14000351b:	mov    rdx,rax
   14000351e:	mov    rcx,rbx
   140003521:	call   0x1400265d0
   140003526:	lea    rax,[rdi+rbx*1]
   14000352a:	mov    QWORD PTR [rsi+0x8],rax
   14000352e:	jmp    0x1400035b3
   140003533:	jae    0x1400035b3
   140003535:	mov    r10,r8
   140003538:	sub    r10,rax
   14000353b:	lea    r11,[r10+rdx*1]
   14000353f:	mov    rdx,QWORD PTR [rcx+0x10]
   140003543:	mov    rcx,rdx
   140003546:	sub    rcx,rax
   140003549:	cmp    rcx,r11
   14000354c:	jae    0x140003594
   14000354e:	lea    rax,[r10-0x1]
   140003552:	cmp    rax,r11
   140003555:	jae    0x140003564
   140003557:	lea    rcx,[rip+0x421f2]        # 0x140045750
   14000355e:	call   0x140031f18
   140003563:	int3   
   140003564:	lea    r10,[r9+r11*1]
   140003568:	sub    rdx,r8
   14000356b:	mov    rcx,rdx
   14000356e:	shr    rcx,1
   140003571:	or     rax,0xffffffffffffffff
   140003575:	sub    rax,rcx
   140003578:	cmp    rax,rdx
   14000357b:	jae    0x140003581
   14000357d:	xor    edx,edx
   14000357f:	jmp    0x140003584
   140003581:	add    rdx,rcx
   140003584:	cmp    rdx,r10
   140003587:	cmovb  rdx,r10
   14000358b:	mov    rcx,rsi
   14000358e:	call   0x140003d00
   140003593:	nop
   140003594:	mov    rcx,QWORD PTR [rsi+0x8]
   140003598:	mov    r8,QWORD PTR [rsi]
   14000359b:	sub    r8,rcx
   14000359e:	add    r8,rbx
   1400035a1:	xor    edx,edx
   1400035a3:	call   0x14002bb90
   1400035a8:	nop
   1400035a9:	mov    rcx,QWORD PTR [rsi]
   1400035ac:	add    rcx,rbx
   1400035af:	mov    QWORD PTR [rsi+0x8],rcx
   1400035b3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400035b8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400035bd:	add    rsp,0x30
   1400035c1:	pop    rdi
   1400035c2:	ret    
   1400035c3:	int3   
   1400035c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400035c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400035ce:	push   rdi
   1400035cf:	sub    rsp,0x20
   1400035d3:	mov    rdi,r8
   1400035d6:	mov    rsi,rdx
   1400035d9:	mov    rbx,rcx
   1400035dc:	test   rdx,rdx
   1400035df:	je     0x14000362d
   1400035e1:	cmp    QWORD PTR [rcx+0x18],0x10
   1400035e6:	jb     0x1400035ed
   1400035e8:	mov    rax,QWORD PTR [rcx]
   1400035eb:	jmp    0x1400035f0
   1400035ed:	mov    rax,rcx
   1400035f0:	cmp    rdx,rax
   1400035f3:	jb     0x14000362d
   1400035f5:	cmp    QWORD PTR [rcx+0x18],0x10
   1400035fa:	jb     0x1400035ff
   1400035fc:	mov    rcx,QWORD PTR [rcx]
   1400035ff:	add    rcx,QWORD PTR [rbx+0x10]
   140003603:	cmp    rcx,rdx
   140003606:	jbe    0x14000362d
   140003608:	cmp    QWORD PTR [rbx+0x18],0x10
   14000360d:	jb     0x140003614
   14000360f:	mov    rax,QWORD PTR [rbx]
   140003612:	jmp    0x140003617
   140003614:	mov    rax,rbx
   140003617:	sub    rsi,rax
   14000361a:	mov    r9,r8
   14000361d:	mov    rdx,rbx
   140003620:	mov    r8,rsi
   140003623:	mov    rcx,rbx
   140003626:	call   0x1400038b0
   14000362b:	jmp    0x1400036a7
   14000362d:	cmp    r8,0xfffffffffffffffe
   140003631:	ja     0x1400036b7
   140003637:	cmp    QWORD PTR [rbx+0x18],r8
   14000363b:	jae    0x14000364e
   14000363d:	mov    r8,QWORD PTR [rbx+0x10]
   140003641:	mov    rdx,rdi
   140003644:	mov    rcx,rbx
   140003647:	call   0x140003e3c
   14000364c:	jmp    0x140003669
   14000364e:	test   r8,r8
   140003651:	jne    0x140003669
   140003653:	and    QWORD PTR [rbx+0x10],r8
   140003657:	cmp    QWORD PTR [rbx+0x18],0x10
   14000365c:	jb     0x140003663
   14000365e:	mov    rax,QWORD PTR [rbx]
   140003661:	jmp    0x140003666
   140003663:	mov    rax,rbx
   140003666:	mov    BYTE PTR [rax],0x0
   140003669:	test   rdi,rdi
   14000366c:	je     0x1400036a4
   14000366e:	cmp    QWORD PTR [rbx+0x18],0x10
   140003673:	jb     0x14000367a
   140003675:	mov    rcx,QWORD PTR [rbx]
   140003678:	jmp    0x14000367d
   14000367a:	mov    rcx,rbx
   14000367d:	test   rdi,rdi
   140003680:	je     0x14000368d
   140003682:	mov    r8,rdi
   140003685:	mov    rdx,rsi
   140003688:	call   0x1400265d0
   14000368d:	cmp    QWORD PTR [rbx+0x18],0x10
   140003692:	mov    QWORD PTR [rbx+0x10],rdi
   140003696:	jb     0x14000369d
   140003698:	mov    rax,QWORD PTR [rbx]
   14000369b:	jmp    0x1400036a0
   14000369d:	mov    rax,rbx
   1400036a0:	mov    BYTE PTR [rax+rdi*1],0x0
   1400036a4:	mov    rax,rbx
   1400036a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036ac:	mov    rsi,QWORD PTR [rsp+0x38]
   1400036b1:	add    rsp,0x20
   1400036b5:	pop    rdi
   1400036b6:	ret    
   1400036b7:	lea    rcx,[rip+0x42082]        # 0x140045740
   1400036be:	call   0x140031f18
   1400036c3:	int3   
   1400036c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400036c9:	mov    QWORD PTR [rsp+0x10],rbp
   1400036ce:	mov    QWORD PTR [rsp+0x18],rsi
   1400036d3:	push   rdi
   1400036d4:	push   r14
   1400036d6:	push   r15
   1400036d8:	sub    rsp,0x20
   1400036dc:	mov    rax,QWORD PTR [rdx+0x10]
   1400036e0:	mov    rsi,r9
   1400036e3:	mov    rbp,r8
   1400036e6:	mov    r14,rdx
   1400036e9:	mov    rbx,rcx
   1400036ec:	cmp    rax,r8
   1400036ef:	jb     0x1400037ce
   1400036f5:	sub    rax,r8
   1400036f8:	mov    r8,QWORD PTR [rcx+0x10]
   1400036fc:	cmp    rax,r9
   1400036ff:	cmovb  rsi,rax
   140003703:	or     rax,0xffffffffffffffff
   140003707:	sub    rax,r8
   14000370a:	cmp    rax,rsi
   14000370d:	jbe    0x1400037db
   140003713:	xor    r15d,r15d
   140003716:	test   rsi,rsi
   140003719:	je     0x1400037b2
   14000371f:	lea    rdi,[r8+rsi*1]
   140003723:	movabs rax,0x7ffffffffffffffe
   14000372d:	cmp    rdi,rax
   140003730:	ja     0x1400037e8
   140003736:	cmp    QWORD PTR [rcx+0x18],rdi
   14000373a:	jae    0x140003746
   14000373c:	mov    rdx,rdi
   14000373f:	call   0x140003b14
   140003744:	jmp    0x140003762
   140003746:	test   rdi,rdi
   140003749:	jne    0x140003767
   14000374b:	cmp    QWORD PTR [rcx+0x18],0x8
   140003750:	mov    QWORD PTR [rcx+0x10],r15
   140003754:	jb     0x14000375b
   140003756:	mov    rax,QWORD PTR [rcx]
   140003759:	jmp    0x14000375e
   14000375b:	mov    rax,rcx
   14000375e:	mov    WORD PTR [rax],r15w
   140003762:	test   rdi,rdi
   140003765:	je     0x1400037b2
   140003767:	cmp    QWORD PTR [r14+0x18],0x8
   14000376c:	jb     0x140003771
   14000376e:	mov    r14,QWORD PTR [r14]
   140003771:	cmp    QWORD PTR [rbx+0x18],0x8
   140003776:	jb     0x14000377d
   140003778:	mov    rcx,QWORD PTR [rbx]
   14000377b:	jmp    0x140003780
   14000377d:	mov    rcx,rbx
   140003780:	test   rsi,rsi
   140003783:	je     0x14000379a
   140003785:	mov    rax,QWORD PTR [rbx+0x10]
   140003789:	lea    r8,[rsi+rsi*1]
   14000378d:	lea    rdx,[r14+rbp*2]
   140003791:	lea    rcx,[rcx+rax*2]
   140003795:	call   0x1400265d0
   14000379a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000379f:	mov    QWORD PTR [rbx+0x10],rdi
   1400037a3:	jb     0x1400037aa
   1400037a5:	mov    rax,QWORD PTR [rbx]
   1400037a8:	jmp    0x1400037ad
   1400037aa:	mov    rax,rbx
   1400037ad:	mov    WORD PTR [rax+rdi*2],r15w
   1400037b2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400037b7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400037bc:	mov    rax,rbx
   1400037bf:	mov    rbx,QWORD PTR [rsp+0x40]
   1400037c4:	add    rsp,0x20
   1400037c8:	pop    r15
   1400037ca:	pop    r14
   1400037cc:	pop    rdi
   1400037cd:	ret    
   1400037ce:	lea    rcx,[rip+0x41f53]        # 0x140045728
   1400037d5:	call   0x140031f50
   1400037da:	int3   
   1400037db:	lea    rcx,[rip+0x41f5e]        # 0x140045740
   1400037e2:	call   0x140031f18
   1400037e7:	int3   
   1400037e8:	lea    rcx,[rip+0x41f51]        # 0x140045740
   1400037ef:	call   0x140031f18
   1400037f4:	int3   
   1400037f5:	int3   
   1400037f6:	int3   
   1400037f7:	int3   
   1400037f8:	mov    rax,rsp
   1400037fb:	push   r14
   1400037fd:	sub    rsp,0x30
   140003801:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140003809:	mov    QWORD PTR [rax+0x8],rbx
   14000380d:	mov    QWORD PTR [rax+0x18],rsi
   140003811:	mov    QWORD PTR [rax+0x20],rdi
   140003815:	mov    rsi,rdx
   140003818:	mov    rdi,rcx
   14000381b:	xor    ebx,ebx
   14000381d:	mov    QWORD PTR [rsp+0x48],rbx
   140003822:	test   rdx,rdx
   140003825:	je     0x140003855
   140003827:	movabs rax,0x1fffffffffffffff
   140003831:	cmp    rdx,rax
   140003834:	ja     0x14000384f
   140003836:	mov    rcx,rdx
   140003839:	shl    rcx,0x3
   14000383d:	call   0x140026da8
   140003842:	mov    rbx,rax
   140003845:	mov    QWORD PTR [rsp+0x48],rax
   14000384a:	test   rax,rax
   14000384d:	jne    0x140003855
   14000384f:	call   0x140031ed4
   140003854:	nop
   140003855:	mov    r8,QWORD PTR [rdi+0x8]
   140003859:	sub    r8,QWORD PTR [rdi]
   14000385c:	and    r8,0xfffffffffffffff8
   140003860:	mov    rdx,QWORD PTR [rdi]
   140003863:	mov    rcx,rbx
   140003866:	call   0x1400265d0
   14000386b:	nop
   14000386c:	mov    rcx,QWORD PTR [rdi]
   14000386f:	mov    r14,QWORD PTR [rdi+0x8]
   140003873:	sub    r14,rcx
   140003876:	sar    r14,0x3
   14000387a:	test   rcx,rcx
   14000387d:	je     0x140003884
   14000387f:	call   0x14002657c
   140003884:	lea    rax,[rbx+rsi*8]
   140003888:	mov    QWORD PTR [rdi+0x10],rax
   14000388c:	lea    rax,[rbx+r14*8]
   140003890:	mov    QWORD PTR [rdi+0x8],rax
   140003894:	mov    QWORD PTR [rdi],rbx
   140003897:	mov    rbx,QWORD PTR [rsp+0x40]
   14000389c:	mov    rsi,QWORD PTR [rsp+0x50]
   1400038a1:	mov    rdi,QWORD PTR [rsp+0x58]
   1400038a6:	add    rsp,0x30
   1400038aa:	pop    r14
   1400038ac:	ret    
   1400038ad:	int3   
   1400038ae:	int3   
   1400038af:	int3   
   1400038b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400038b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400038ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400038bf:	push   rdi
   1400038c0:	sub    rsp,0x20
   1400038c4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400038c8:	mov    rbp,r8
   1400038cb:	mov    rsi,rdx
   1400038ce:	mov    rbx,rcx
   1400038d1:	cmp    rdi,r8
   1400038d4:	jb     0x1400039ac
   1400038da:	sub    rdi,r8
   1400038dd:	cmp    r9,rdi
   1400038e0:	cmovb  rdi,r9
   1400038e4:	cmp    rcx,rdx
   1400038e7:	jne    0x140003915
   1400038e9:	lea    rax,[rdi+r8*1]
   1400038ed:	cmp    QWORD PTR [rcx+0x10],rax
   1400038f1:	jb     0x1400039b9
   1400038f7:	cmp    QWORD PTR [rcx+0x18],0x10
   1400038fc:	mov    QWORD PTR [rcx+0x10],rax
   140003900:	jb     0x140003905
   140003902:	mov    rcx,QWORD PTR [rcx]
   140003905:	mov    BYTE PTR [rax+rcx*1],0x0
   140003909:	xor    edx,edx
   14000390b:	mov    rcx,rbx
   14000390e:	call   0x140003da0
   140003913:	jmp    0x140003994
   140003915:	cmp    rdi,0xfffffffffffffffe
   140003919:	ja     0x1400039c6
   14000391f:	cmp    QWORD PTR [rcx+0x18],rdi
   140003923:	jae    0x140003933
   140003925:	mov    r8,QWORD PTR [rcx+0x10]
   140003929:	mov    rdx,rdi
   14000392c:	call   0x140003e3c
   140003931:	jmp    0x14000394e
   140003933:	test   rdi,rdi
   140003936:	jne    0x140003953
   140003938:	and    QWORD PTR [rcx+0x10],rdi
   14000393c:	cmp    QWORD PTR [rcx+0x18],0x10
   140003941:	jb     0x140003948
   140003943:	mov    rax,QWORD PTR [rcx]
   140003946:	jmp    0x14000394b
   140003948:	mov    rax,rcx
   14000394b:	mov    BYTE PTR [rax],0x0
   14000394e:	test   rdi,rdi
   140003951:	je     0x140003994
   140003953:	cmp    QWORD PTR [rsi+0x18],0x10
   140003958:	jb     0x14000395d
   14000395a:	mov    rsi,QWORD PTR [rsi]
   14000395d:	cmp    QWORD PTR [rbx+0x18],0x10
   140003962:	jb     0x140003969
   140003964:	mov    rcx,QWORD PTR [rbx]
   140003967:	jmp    0x14000396c
   140003969:	mov    rcx,rbx
   14000396c:	test   rdi,rdi
   14000396f:	je     0x14000397d
   140003971:	lea    rdx,[rsi+rbp*1]
   140003975:	mov    r8,rdi
   140003978:	call   0x1400265d0
   14000397d:	cmp    QWORD PTR [rbx+0x18],0x10
   140003982:	mov    QWORD PTR [rbx+0x10],rdi
   140003986:	jb     0x14000398d
   140003988:	mov    rax,QWORD PTR [rbx]
   14000398b:	jmp    0x140003990
   14000398d:	mov    rax,rbx
   140003990:	mov    BYTE PTR [rax+rdi*1],0x0
   140003994:	mov    rbp,QWORD PTR [rsp+0x38]
   140003999:	mov    rsi,QWORD PTR [rsp+0x40]
   14000399e:	mov    rax,rbx
   1400039a1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039a6:	add    rsp,0x20
   1400039aa:	pop    rdi
   1400039ab:	ret    
   1400039ac:	lea    rcx,[rip+0x41d75]        # 0x140045728
   1400039b3:	call   0x140031f50
   1400039b8:	int3   
   1400039b9:	lea    rcx,[rip+0x41d68]        # 0x140045728
   1400039c0:	call   0x140031f50
   1400039c5:	int3   
   1400039c6:	lea    rcx,[rip+0x41d73]        # 0x140045740
   1400039cd:	call   0x140031f18
   1400039d2:	int3   
   1400039d3:	int3   
   1400039d4:	mov    rax,rsp
   1400039d7:	mov    QWORD PTR [rax+0x8],rbx
   1400039db:	mov    QWORD PTR [rax+0x10],rbp
   1400039df:	mov    QWORD PTR [rax+0x18],rsi
   1400039e3:	mov    QWORD PTR [rax+0x20],rdi
   1400039e7:	push   r14
   1400039e9:	sub    rsp,0x20
   1400039ed:	mov    rdi,QWORD PTR [rdx+0x10]
   1400039f1:	mov    rbp,r8
   1400039f4:	mov    r14,rdx
   1400039f7:	mov    rbx,rcx
   1400039fa:	cmp    rdi,r8
   1400039fd:	jb     0x140003aec
   140003a03:	sub    rdi,r8
   140003a06:	cmp    r9,rdi
   140003a09:	cmovb  rdi,r9
   140003a0d:	cmp    rcx,rdx
   140003a10:	jne    0x140003a43
   140003a12:	lea    rax,[rdi+r8*1]
   140003a16:	cmp    QWORD PTR [rcx+0x10],rax
   140003a1a:	jb     0x140003af9
   140003a20:	cmp    QWORD PTR [rcx+0x18],0x8
   140003a25:	mov    QWORD PTR [rcx+0x10],rax
   140003a29:	jb     0x140003a2e
   140003a2b:	mov    rcx,QWORD PTR [rcx]
   140003a2e:	xor    esi,esi
   140003a30:	xor    edx,edx
   140003a32:	mov    WORD PTR [rcx+rax*2],si
   140003a36:	mov    rcx,rbx
   140003a39:	call   0x140003f5c
   140003a3e:	jmp    0x140003ace
   140003a43:	movabs rax,0x7ffffffffffffffe
   140003a4d:	cmp    rdi,rax
   140003a50:	ja     0x140003b06
   140003a56:	xor    esi,esi
   140003a58:	cmp    QWORD PTR [rcx+0x18],rdi
   140003a5c:	jae    0x140003a6c
   140003a5e:	mov    r8,QWORD PTR [rcx+0x10]
   140003a62:	mov    rdx,rdi
   140003a65:	call   0x140003b14
   140003a6a:	jmp    0x140003a87
   140003a6c:	test   rdi,rdi
   140003a6f:	jne    0x140003a8c
   140003a71:	cmp    QWORD PTR [rcx+0x18],0x8
   140003a76:	mov    QWORD PTR [rcx+0x10],rsi
   140003a7a:	jb     0x140003a81
   140003a7c:	mov    rax,QWORD PTR [rcx]
   140003a7f:	jmp    0x140003a84
   140003a81:	mov    rax,rcx
   140003a84:	mov    WORD PTR [rax],si
   140003a87:	test   rdi,rdi
   140003a8a:	je     0x140003ace
   140003a8c:	cmp    QWORD PTR [r14+0x18],0x8
   140003a91:	jb     0x140003a96
   140003a93:	mov    r14,QWORD PTR [r14]
   140003a96:	cmp    QWORD PTR [rbx+0x18],0x8
   140003a9b:	jb     0x140003aa2
   140003a9d:	mov    rcx,QWORD PTR [rbx]
   140003aa0:	jmp    0x140003aa5
   140003aa2:	mov    rcx,rbx
   140003aa5:	test   rdi,rdi
   140003aa8:	je     0x140003ab7
   140003aaa:	lea    r8,[rdi+rdi*1]
   140003aae:	lea    rdx,[r14+rbp*2]
   140003ab2:	call   0x1400265d0
   140003ab7:	cmp    QWORD PTR [rbx+0x18],0x8
   140003abc:	mov    QWORD PTR [rbx+0x10],rdi
   140003ac0:	jb     0x140003ac7
   140003ac2:	mov    rax,QWORD PTR [rbx]
   140003ac5:	jmp    0x140003aca
   140003ac7:	mov    rax,rbx
   140003aca:	mov    WORD PTR [rax+rdi*2],si
   140003ace:	mov    rbp,QWORD PTR [rsp+0x38]
   140003ad3:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ad8:	mov    rdi,QWORD PTR [rsp+0x48]
   140003add:	mov    rax,rbx
   140003ae0:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ae5:	add    rsp,0x20
   140003ae9:	pop    r14
   140003aeb:	ret    
   140003aec:	lea    rcx,[rip+0x41c35]        # 0x140045728
   140003af3:	call   0x140031f50
   140003af8:	int3   
   140003af9:	lea    rcx,[rip+0x41c28]        # 0x140045728
   140003b00:	call   0x140031f50
   140003b05:	int3   
   140003b06:	lea    rcx,[rip+0x41c33]        # 0x140045740
   140003b0d:	call   0x140031f18
   140003b12:	int3   
   140003b13:	int3   
   140003b14:	mov    rax,rsp
   140003b17:	mov    QWORD PTR [rax+0x18],r8
   140003b1b:	mov    QWORD PTR [rax+0x10],rdx
   140003b1f:	mov    QWORD PTR [rax+0x8],rcx
   140003b23:	push   rbx
   140003b24:	push   rsi
   140003b25:	push   rdi
   140003b26:	push   r14
   140003b28:	push   r15
   140003b2a:	sub    rsp,0x30
   140003b2e:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   140003b36:	mov    r15,r8
   140003b39:	mov    rbx,rcx
   140003b3c:	mov    rsi,rdx
   140003b3f:	or     rsi,0x7
   140003b43:	movabs r9,0x7ffffffffffffffe
   140003b4d:	cmp    rsi,r9
   140003b50:	jbe    0x140003b57
   140003b52:	mov    rsi,rdx
   140003b55:	jmp    0x140003b88
   140003b57:	mov    r8,QWORD PTR [rcx+0x18]
   140003b5b:	mov    rcx,r8
   140003b5e:	shr    rcx,1
   140003b61:	movabs rax,0xaaaaaaaaaaaaaaab
   140003b6b:	mul    rsi
   140003b6e:	shr    rdx,1
   140003b71:	cmp    rcx,rdx
   140003b74:	jbe    0x140003b88
   140003b76:	mov    rax,r9
   140003b79:	sub    rax,rcx
   140003b7c:	cmp    r8,rax
   140003b7f:	lea    rsi,[rcx+r8*1]
   140003b83:	jbe    0x140003b88
   140003b85:	mov    rsi,r9
   140003b88:	lea    rcx,[rsi+0x1]
   140003b8c:	xor    edi,edi
   140003b8e:	mov    r14d,edi
   140003b91:	test   rcx,rcx
   140003b94:	je     0x140003bba
   140003b96:	movabs rax,0x7fffffffffffffff
   140003ba0:	cmp    rcx,rax
   140003ba3:	ja     0x140003bb5
   140003ba5:	add    rcx,rcx
   140003ba8:	call   0x140026da8
   140003bad:	mov    r14,rax
   140003bb0:	test   rax,rax
   140003bb3:	jne    0x140003bba
   140003bb5:	call   0x140031ed4
   140003bba:	mov    QWORD PTR [rsp+0x20],r14
   140003bbf:	jmp    0x140003bd7
   140003bc1:	xor    edi,edi
   140003bc3:	mov    rbx,QWORD PTR [rsp+0x60]
   140003bc8:	mov    r15,QWORD PTR [rsp+0x70]
   140003bcd:	mov    rsi,QWORD PTR [rsp+0x68]
   140003bd2:	mov    r14,QWORD PTR [rsp+0x20]
   140003bd7:	test   r15,r15
   140003bda:	je     0x140003bfc
   140003bdc:	cmp    QWORD PTR [rbx+0x18],0x8
   140003be1:	jb     0x140003be8
   140003be3:	mov    rdx,QWORD PTR [rbx]
   140003be6:	jmp    0x140003beb
   140003be8:	mov    rdx,rbx
   140003beb:	test   r15,r15
   140003bee:	je     0x140003bfc
   140003bf0:	lea    r8,[r15+r15*1]
   140003bf4:	mov    rcx,r14
   140003bf7:	call   0x1400265d0
   140003bfc:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c01:	jb     0x140003c0b
   140003c03:	mov    rcx,QWORD PTR [rbx]
   140003c06:	call   0x14002657c
   140003c0b:	mov    QWORD PTR [rbx+0x18],0x7
   140003c13:	mov    QWORD PTR [rbx+0x10],rdi
   140003c17:	mov    WORD PTR [rbx],di
   140003c1a:	mov    QWORD PTR [rsp+0x68],rbx
   140003c1f:	mov    QWORD PTR [rsp+0x78],rbx
   140003c24:	mov    QWORD PTR [rbx],r14
   140003c27:	mov    QWORD PTR [rbx+0x18],rsi
   140003c2b:	mov    QWORD PTR [rbx+0x10],r15
   140003c2f:	cmp    rsi,0x8
   140003c33:	jb     0x140003c38
   140003c35:	mov    rbx,QWORD PTR [rbx]
   140003c38:	mov    WORD PTR [rbx+r15*2],di
   140003c3d:	add    rsp,0x30
   140003c41:	pop    r15
   140003c43:	pop    r14
   140003c45:	pop    rdi
   140003c46:	pop    rsi
   140003c47:	pop    rbx
   140003c48:	ret    
   140003c49:	int3   
   140003c4a:	int3   
   140003c4b:	int3   
   140003c4c:	mov    rax,rsp
   140003c4f:	push   r14
   140003c51:	sub    rsp,0x30
   140003c55:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140003c5d:	mov    QWORD PTR [rax+0x8],rbx
   140003c61:	mov    QWORD PTR [rax+0x18],rsi
   140003c65:	mov    QWORD PTR [rax+0x20],rdi
   140003c69:	mov    rsi,rdx
   140003c6c:	mov    rdi,rcx
   140003c6f:	xor    ebx,ebx
   140003c71:	mov    QWORD PTR [rsp+0x48],rbx
   140003c76:	test   rdx,rdx
   140003c79:	je     0x140003ca6
   140003c7b:	movabs rax,0x7fffffffffffffff
   140003c85:	cmp    rdx,rax
   140003c88:	ja     0x140003ca0
   140003c8a:	lea    rcx,[rdx+rdx*1]
   140003c8e:	call   0x140026da8
   140003c93:	mov    rbx,rax
   140003c96:	mov    QWORD PTR [rsp+0x48],rax
   140003c9b:	test   rax,rax
   140003c9e:	jne    0x140003ca6
   140003ca0:	call   0x140031ed4
   140003ca5:	nop
   140003ca6:	mov    r8,QWORD PTR [rdi+0x8]
   140003caa:	sub    r8,QWORD PTR [rdi]
   140003cad:	sar    r8,1
   140003cb0:	add    r8,r8
   140003cb3:	mov    rdx,QWORD PTR [rdi]
   140003cb6:	mov    rcx,rbx
   140003cb9:	call   0x1400265d0
   140003cbe:	nop
   140003cbf:	mov    rcx,QWORD PTR [rdi]
   140003cc2:	mov    r14,QWORD PTR [rdi+0x8]
   140003cc6:	sub    r14,rcx
   140003cc9:	sar    r14,1
   140003ccc:	test   rcx,rcx
   140003ccf:	je     0x140003cd6
   140003cd1:	call   0x14002657c
   140003cd6:	lea    rax,[rbx+rsi*2]
   140003cda:	mov    QWORD PTR [rdi+0x10],rax
   140003cde:	lea    rax,[rbx+r14*2]
   140003ce2:	mov    QWORD PTR [rdi+0x8],rax
   140003ce6:	mov    QWORD PTR [rdi],rbx
   140003ce9:	mov    rbx,QWORD PTR [rsp+0x40]
   140003cee:	mov    rsi,QWORD PTR [rsp+0x50]
   140003cf3:	mov    rdi,QWORD PTR [rsp+0x58]
   140003cf8:	add    rsp,0x30
   140003cfc:	pop    r14
   140003cfe:	ret    
   140003cff:	int3   
   140003d00:	mov    rax,rsp
   140003d03:	push   r14
   140003d05:	sub    rsp,0x30
   140003d09:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140003d11:	mov    QWORD PTR [rax+0x8],rbx
   140003d15:	mov    QWORD PTR [rax+0x18],rsi
   140003d19:	mov    QWORD PTR [rax+0x20],rdi
   140003d1d:	mov    rsi,rdx
   140003d20:	mov    rdi,rcx
   140003d23:	xor    ebx,ebx
   140003d25:	mov    QWORD PTR [rsp+0x48],rbx
   140003d2a:	test   rdx,rdx
   140003d2d:	je     0x140003d50
   140003d2f:	cmp    rdx,0xffffffffffffffff
   140003d33:	ja     0x140003d4a
   140003d35:	mov    rcx,rdx
   140003d38:	call   0x140026da8
   140003d3d:	mov    rbx,rax
   140003d40:	mov    QWORD PTR [rsp+0x48],rax
   140003d45:	test   rax,rax
   140003d48:	jne    0x140003d50
   140003d4a:	call   0x140031ed4
   140003d4f:	nop
   140003d50:	mov    r8,QWORD PTR [rdi+0x8]
   140003d54:	sub    r8,QWORD PTR [rdi]
   140003d57:	mov    rdx,QWORD PTR [rdi]
   140003d5a:	mov    rcx,rbx
   140003d5d:	call   0x1400265d0
   140003d62:	nop
   140003d63:	mov    rcx,QWORD PTR [rdi]
   140003d66:	mov    r14,QWORD PTR [rdi+0x8]
   140003d6a:	sub    r14,rcx
   140003d6d:	test   rcx,rcx
   140003d70:	je     0x140003d77
   140003d72:	call   0x14002657c
   140003d77:	lea    rax,[rbx+rsi*1]
   140003d7b:	mov    QWORD PTR [rdi+0x10],rax
   140003d7f:	lea    rax,[rbx+r14*1]
   140003d83:	mov    QWORD PTR [rdi+0x8],rax
   140003d87:	mov    QWORD PTR [rdi],rbx
   140003d8a:	mov    rbx,QWORD PTR [rsp+0x40]
   140003d8f:	mov    rsi,QWORD PTR [rsp+0x50]
   140003d94:	mov    rdi,QWORD PTR [rsp+0x58]
   140003d99:	add    rsp,0x30
   140003d9d:	pop    r14
   140003d9f:	ret    
   140003da0:	mov    QWORD PTR [rsp+0x8],rbx
   140003da5:	push   rdi
   140003da6:	sub    rsp,0x20
   140003daa:	mov    rdi,QWORD PTR [rcx+0x10]
   140003dae:	mov    rbx,rcx
   140003db1:	cmp    rdi,rdx
   140003db4:	jb     0x140003e2e
   140003db6:	mov    rax,rdi
   140003db9:	sub    rax,rdx
   140003dbc:	cmp    rax,r8
   140003dbf:	ja     0x140003dda
   140003dc1:	cmp    QWORD PTR [rcx+0x18],0x10
   140003dc6:	mov    QWORD PTR [rcx+0x10],rdx
   140003dca:	jb     0x140003dd1
   140003dcc:	mov    rax,QWORD PTR [rcx]
   140003dcf:	jmp    0x140003dd4
   140003dd1:	mov    rax,rcx
   140003dd4:	mov    BYTE PTR [rax+rdx*1],0x0
   140003dd8:	jmp    0x140003e20
   140003dda:	test   r8,r8
   140003ddd:	je     0x140003e20
   140003ddf:	cmp    QWORD PTR [rcx+0x18],0x10
   140003de4:	jb     0x140003deb
   140003de6:	mov    rax,QWORD PTR [rcx]
   140003de9:	jmp    0x140003dee
   140003deb:	mov    rax,rcx
   140003dee:	sub    rdi,r8
   140003df1:	lea    rcx,[rax+rdx*1]
   140003df5:	mov    rax,rdi
   140003df8:	sub    rax,rdx
   140003dfb:	je     0x140003e09
   140003dfd:	lea    rdx,[rcx+r8*1]
   140003e01:	mov    r8,rax
   140003e04:	call   0x1400265d0
   140003e09:	cmp    QWORD PTR [rbx+0x18],0x10
   140003e0e:	mov    QWORD PTR [rbx+0x10],rdi
   140003e12:	jb     0x140003e19
   140003e14:	mov    rax,QWORD PTR [rbx]
   140003e17:	jmp    0x140003e1c
   140003e19:	mov    rax,rbx
   140003e1c:	mov    BYTE PTR [rax+rdi*1],0x0
   140003e20:	mov    rax,rbx
   140003e23:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e28:	add    rsp,0x20
   140003e2c:	pop    rdi
   140003e2d:	ret    
   140003e2e:	lea    rcx,[rip+0x418f3]        # 0x140045728
   140003e35:	call   0x140031f50
   140003e3a:	int3   
   140003e3b:	int3   
   140003e3c:	mov    rax,rsp
   140003e3f:	mov    QWORD PTR [rax+0x18],r8
   140003e43:	mov    QWORD PTR [rax+0x10],rdx
   140003e47:	mov    QWORD PTR [rax+0x8],rcx
   140003e4b:	push   rbx
   140003e4c:	push   rsi
   140003e4d:	push   rdi
   140003e4e:	push   r14
   140003e50:	sub    rsp,0x38
   140003e54:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   140003e5c:	mov    rsi,r8
   140003e5f:	mov    rbx,rcx
   140003e62:	mov    rdi,rdx
   140003e65:	or     rdi,0xf
   140003e69:	mov    r9,0xfffffffffffffffe
   140003e70:	cmp    rdi,r9
   140003e73:	jbe    0x140003e7a
   140003e75:	mov    rdi,rdx
   140003e78:	jmp    0x140003eab
   140003e7a:	mov    r8,QWORD PTR [rcx+0x18]
   140003e7e:	mov    rcx,r8
   140003e81:	shr    rcx,1
   140003e84:	movabs rax,0xaaaaaaaaaaaaaaab
   140003e8e:	mul    rdi
   140003e91:	shr    rdx,1
   140003e94:	cmp    rcx,rdx
   140003e97:	jbe    0x140003eab
   140003e99:	mov    rax,r9
   140003e9c:	sub    rax,rcx
   140003e9f:	cmp    r8,rax
   140003ea2:	lea    rdi,[rcx+r8*1]
   140003ea6:	jbe    0x140003eab
   140003ea8:	mov    rdi,r9
   140003eab:	lea    rcx,[rdi+0x1]
   140003eaf:	xor    r14d,r14d
   140003eb2:	test   rcx,rcx
   140003eb5:	je     0x140003ecf
   140003eb7:	cmp    rcx,0xffffffffffffffff
   140003ebb:	ja     0x140003eca
   140003ebd:	call   0x140026da8
   140003ec2:	mov    r14,rax
   140003ec5:	test   rax,rax
   140003ec8:	jne    0x140003ecf
   140003eca:	call   0x140031ed4
   140003ecf:	mov    QWORD PTR [rsp+0x20],r14
   140003ed4:	jmp    0x140003eea
   140003ed6:	mov    rbx,QWORD PTR [rsp+0x60]
   140003edb:	mov    rsi,QWORD PTR [rsp+0x70]
   140003ee0:	mov    rdi,QWORD PTR [rsp+0x68]
   140003ee5:	mov    r14,QWORD PTR [rsp+0x20]
   140003eea:	test   rsi,rsi
   140003eed:	je     0x140003f0e
   140003eef:	cmp    QWORD PTR [rbx+0x18],0x10
   140003ef4:	jb     0x140003efb
   140003ef6:	mov    rdx,QWORD PTR [rbx]
   140003ef9:	jmp    0x140003efe
   140003efb:	mov    rdx,rbx
   140003efe:	test   rsi,rsi
   140003f01:	je     0x140003f0e
   140003f03:	mov    r8,rsi
   140003f06:	mov    rcx,r14
   140003f09:	call   0x1400265d0
   140003f0e:	cmp    QWORD PTR [rbx+0x18],0x10
   140003f13:	jb     0x140003f1d
   140003f15:	mov    rcx,QWORD PTR [rbx]
   140003f18:	call   0x14002657c
   140003f1d:	mov    QWORD PTR [rbx+0x18],0xf
   140003f25:	and    QWORD PTR [rbx+0x10],0x0
   140003f2a:	mov    BYTE PTR [rbx],0x0
   140003f2d:	mov    QWORD PTR [rsp+0x68],rbx
   140003f32:	mov    QWORD PTR [rsp+0x78],rbx
   140003f37:	mov    QWORD PTR [rbx],r14
   140003f3a:	mov    QWORD PTR [rbx+0x18],rdi
   140003f3e:	mov    QWORD PTR [rbx+0x10],rsi
   140003f42:	cmp    rdi,0x10
   140003f46:	jb     0x140003f4b
   140003f48:	mov    rbx,QWORD PTR [rbx]
   140003f4b:	mov    BYTE PTR [rbx+rsi*1],0x0
   140003f4f:	add    rsp,0x38
   140003f53:	pop    r14
   140003f55:	pop    rdi
   140003f56:	pop    rsi
   140003f57:	pop    rbx
   140003f58:	ret    
   140003f59:	int3   
   140003f5a:	int3   
   140003f5b:	int3   
   140003f5c:	mov    QWORD PTR [rsp+0x8],rbx
   140003f61:	mov    QWORD PTR [rsp+0x10],rsi
   140003f66:	push   rdi
   140003f67:	sub    rsp,0x20
   140003f6b:	mov    rdi,QWORD PTR [rcx+0x10]
   140003f6f:	mov    r9,r8
   140003f72:	mov    rbx,rcx
   140003f75:	cmp    rdi,rdx
   140003f78:	jb     0x140003fff
   140003f7e:	mov    rax,rdi
   140003f81:	sub    rax,rdx
   140003f84:	cmp    rax,r8
   140003f87:	ja     0x140003fa4
   140003f89:	cmp    QWORD PTR [rcx+0x18],0x8
   140003f8e:	mov    QWORD PTR [rcx+0x10],rdx
   140003f92:	jb     0x140003f99
   140003f94:	mov    rax,QWORD PTR [rcx]
   140003f97:	jmp    0x140003f9c
   140003f99:	mov    rax,rcx
   140003f9c:	xor    esi,esi
   140003f9e:	mov    WORD PTR [rax+rdx*2],si
   140003fa2:	jmp    0x140003fec
   140003fa4:	xor    esi,esi
   140003fa6:	test   r8,r8
   140003fa9:	je     0x140003fec
   140003fab:	cmp    QWORD PTR [rcx+0x18],0x8
   140003fb0:	jb     0x140003fb7
   140003fb2:	mov    rax,QWORD PTR [rcx]
   140003fb5:	jmp    0x140003fba
   140003fb7:	mov    rax,rcx
   140003fba:	sub    rdi,r8
   140003fbd:	lea    rcx,[rax+rdx*2]
   140003fc1:	mov    r8,rdi
   140003fc4:	sub    r8,rdx
   140003fc7:	je     0x140003fd5
   140003fc9:	lea    rdx,[rcx+r9*2]
   140003fcd:	add    r8,r8
   140003fd0:	call   0x1400265d0
   140003fd5:	cmp    QWORD PTR [rbx+0x18],0x8
   140003fda:	mov    QWORD PTR [rbx+0x10],rdi
   140003fde:	jb     0x140003fe5
   140003fe0:	mov    rax,QWORD PTR [rbx]
   140003fe3:	jmp    0x140003fe8
   140003fe5:	mov    rax,rbx
   140003fe8:	mov    WORD PTR [rax+rdi*2],si
   140003fec:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ff1:	mov    rax,rbx
   140003ff4:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ff9:	add    rsp,0x20
   140003ffd:	pop    rdi
   140003ffe:	ret    
   140003fff:	lea    rcx,[rip+0x41722]        # 0x140045728
   140004006:	call   0x140031f50
   14000400b:	int3   
   14000400c:	sub    rsp,0x28
   140004010:	mov    DWORD PTR [rsp+0x30],ecx
   140004014:	lea    rdx,[rip+0x520d5]        # 0x1400560f0
   14000401b:	lea    rcx,[rsp+0x30]
   140004020:	call   0x140029fe8
   140004025:	int3   
   140004026:	int3   
   140004027:	int3   
   140004028:	mov    QWORD PTR [rsp+0x8],rbx
   14000402d:	mov    QWORD PTR [rsp+0x10],rbp
   140004032:	mov    QWORD PTR [rsp+0x18],rsi
   140004037:	push   rdi
   140004038:	sub    rsp,0x20
   14000403c:	mov    edi,r8d
   14000403f:	mov    rsi,rdx
   140004042:	mov    rbp,rcx
   140004045:	call   QWORD PTR [rip+0x3d365]        # 0x1400413b0
   14000404b:	test   rax,rax
   14000404e:	jne    0x140004054
   140004050:	xor    eax,eax
   140004052:	jmp    0x1400040a0
   140004054:	mov    rcx,rax
   140004057:	call   QWORD PTR [rip+0x3d33b]        # 0x140041398
   14000405d:	mov    rbx,rax
   140004060:	test   rax,rax
   140004063:	je     0x140004050
   140004065:	mov    rdx,rsi
   140004068:	mov    rcx,rbp
   14000406b:	call   QWORD PTR [rip+0x3d337]        # 0x1400413a8
   140004071:	mov    ecx,eax
   140004073:	add    rcx,rbx
   140004076:	and    edi,0xf
   140004079:	jbe    0x14000408f
   14000407b:	cmp    rbx,rcx
   14000407e:	jae    0x140004050
   140004080:	movzx  eax,WORD PTR [rbx]
   140004083:	lea    rbx,[rbx+rax*2]
   140004087:	add    rbx,0x2
   14000408b:	dec    edi
   14000408d:	jne    0x14000407b
   14000408f:	cmp    rbx,rcx
   140004092:	jae    0x140004050
   140004094:	movzx  eax,WORD PTR [rbx]
   140004097:	neg    ax
   14000409a:	sbb    rax,rax
   14000409d:	and    rax,rbx
   1400040a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040a5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400040aa:	mov    rsi,QWORD PTR [rsp+0x40]
   1400040af:	add    rsp,0x20
   1400040b3:	pop    rdi
   1400040b4:	ret    
   1400040b5:	int3   
   1400040b6:	int3   
   1400040b7:	int3   
   1400040b8:	mov    rax,rsp
   1400040bb:	mov    QWORD PTR [rax+0x8],rbx
   1400040bf:	mov    QWORD PTR [rax+0x10],rbp
   1400040c3:	mov    QWORD PTR [rax+0x18],rsi
   1400040c7:	mov    QWORD PTR [rax+0x20],rdi
   1400040cb:	push   r14
   1400040cd:	sub    rsp,0x20
   1400040d1:	mov    ebp,ecx
   1400040d3:	lea    rcx,[rip+0x58876]        # 0x14005c950
   1400040da:	xor    edx,edx
   1400040dc:	call   0x140032058
   1400040e1:	mov    r14d,0x1
   1400040e7:	mov    rbx,rax
   1400040ea:	mov    esi,r14d
   1400040ed:	test   rax,rax
   1400040f0:	je     0x140004140
   1400040f2:	mov    edi,ebp
   1400040f4:	shr    edi,0x4
   1400040f7:	xor    r9d,r9d
   1400040fa:	lea    ecx,[r14+rdi*1]
   1400040fe:	movzx  r8d,cx
   140004102:	lea    edx,[r9+0x6]
   140004106:	mov    rcx,rbx
   140004109:	call   QWORD PTR [rip+0x3d2b1]        # 0x1400413c0
   14000410f:	test   rax,rax
   140004112:	je     0x140004127
   140004114:	mov    r8d,ebp
   140004117:	mov    rdx,rax
   14000411a:	mov    rcx,rbx
   14000411d:	call   0x140004028
   140004122:	test   rax,rax
   140004125:	jne    0x14000415d
   140004127:	lea    rcx,[rip+0x58822]        # 0x14005c950
   14000412e:	mov    edx,esi
   140004130:	call   0x140032058
   140004135:	add    esi,r14d
   140004138:	mov    rbx,rax
   14000413b:	test   rax,rax
   14000413e:	jne    0x1400040f7
   140004140:	xor    eax,eax
   140004142:	mov    rbx,QWORD PTR [rsp+0x30]
   140004147:	mov    rbp,QWORD PTR [rsp+0x38]
   14000414c:	mov    rsi,QWORD PTR [rsp+0x40]
   140004151:	mov    rdi,QWORD PTR [rsp+0x48]
   140004156:	add    rsp,0x20
   14000415a:	pop    r14
   14000415c:	ret    
   14000415d:	mov    rax,rbx
   140004160:	jmp    0x140004142
   140004162:	int3   
   140004163:	int3   
   140004164:	mov    QWORD PTR [rsp+0x18],r8
   140004169:	mov    QWORD PTR [rsp+0x20],r9
   14000416e:	push   rbx
   14000416f:	push   rbp
   140004170:	push   rsi
   140004171:	push   rdi
   140004172:	sub    rsp,0x28
   140004176:	shr    rdx,1
   140004179:	xor    ebp,ebp
   14000417b:	mov    rdi,rcx
   14000417e:	lea    rax,[rdx-0x1]
   140004182:	mov    esi,ebp
   140004184:	mov    ecx,0x80070057
   140004189:	cmp    rax,0x7ffffffe
   14000418f:	cmova  esi,ecx
   140004192:	test   esi,esi
   140004194:	js     0x1400041ca
   140004196:	lea    rbx,[rdx-0x1]
   14000419a:	lea    r9,[rsp+0x68]
   14000419f:	mov    rcx,rdi
   1400041a2:	mov    rdx,rbx
   1400041a5:	mov    esi,ebp
   1400041a7:	call   0x140027674
   1400041ac:	test   eax,eax
   1400041ae:	js     0x1400041bf
   1400041b0:	cdqe   
   1400041b2:	cmp    rax,rbx
   1400041b5:	ja     0x1400041bf
   1400041b7:	jne    0x1400041d2
   1400041b9:	mov    WORD PTR [rdi+rbx*2],bp
   1400041bd:	jmp    0x1400041d2
   1400041bf:	mov    WORD PTR [rdi+rbx*2],bp
   1400041c3:	mov    esi,0x8007007a
   1400041c8:	jmp    0x1400041d2
   1400041ca:	test   rdx,rdx
   1400041cd:	je     0x1400041d2
   1400041cf:	mov    WORD PTR [rdi],bp
   1400041d2:	mov    eax,esi
   1400041d4:	add    rsp,0x28
   1400041d8:	pop    rdi
   1400041d9:	pop    rsi
   1400041da:	pop    rbp
   1400041db:	pop    rbx
   1400041dc:	ret    
   1400041dd:	int3   
   1400041de:	int3   
   1400041df:	int3   
   1400041e0:	mov    r11,rsp
   1400041e3:	mov    QWORD PTR [r11+0x20],rbx
   1400041e7:	push   rdi
   1400041e8:	sub    rsp,0x70
   1400041ec:	mov    rax,QWORD PTR [rip+0x54e95]        # 0x140059088
   1400041f3:	xor    rax,rsp
   1400041f6:	mov    QWORD PTR [rsp+0x68],rax
   1400041fb:	mov    rbx,rcx
   1400041fe:	lea    rax,[r11-0x50]
   140004202:	mov    r9d,r8d
   140004205:	mov    edi,edx
   140004207:	lea    r8,[rip+0x41732]        # 0x140045940
   14000420e:	lea    rcx,[r11-0x50]
   140004212:	mov    edx,0x3c
   140004217:	mov    QWORD PTR [r11-0x58],rax
   14000421b:	call   0x140004164
   140004220:	mov    rax,QWORD PTR [rbx]
   140004223:	lea    r9,[rsp+0x20]
   140004228:	mov    r8d,0x1
   14000422e:	mov    edx,edi
   140004230:	mov    rcx,rbx
   140004233:	call   QWORD PTR [rax]
   140004235:	mov    rcx,QWORD PTR [rsp+0x68]
   14000423a:	xor    rcx,rsp
   14000423d:	call   0x1400265a0
   140004242:	mov    rbx,QWORD PTR [rsp+0x98]
   14000424a:	add    rsp,0x70
   14000424e:	pop    rdi
   14000424f:	ret    
   140004250:	mov    QWORD PTR [rsp+0x8],rbx
   140004255:	push   rdi
   140004256:	sub    rsp,0x20
   14000425a:	xor    ebx,ebx
   14000425c:	mov    edi,0x1
   140004261:	cmp    DWORD PTR [rip+0x58865],ebx        # 0x14005cacc
   140004267:	jne    0x140004274
   140004269:	call   0x140012b10
   14000426e:	mov    DWORD PTR [rip+0x58858],edi        # 0x14005cacc
   140004274:	cmp    DWORD PTR [rip+0x5883e],ebx        # 0x14005cab8
   14000427a:	jne    0x14000429d
   14000427c:	mov    eax,DWORD PTR [rip+0x58926]        # 0x14005cba8
   140004282:	mov    DWORD PTR [rip+0x58834],eax        # 0x14005cabc
   140004288:	test   eax,eax
   14000428a:	jne    0x140004297
   14000428c:	call   0x140012e80
   140004291:	mov    DWORD PTR [rip+0x5882d],eax        # 0x14005cac4
   140004297:	mov    DWORD PTR [rip+0x5881b],edi        # 0x14005cab8
   14000429d:	cmp    DWORD PTR [rip+0x58819],ebx        # 0x14005cabc
   1400042a3:	jne    0x140004344
   1400042a9:	cmp    DWORD PTR [rip+0x5881d],ebx        # 0x14005cacc
   1400042af:	jne    0x1400042bc
   1400042b1:	call   0x140012b10
   1400042b6:	mov    DWORD PTR [rip+0x58810],edi        # 0x14005cacc
   1400042bc:	cmp    DWORD PTR [rip+0x587f6],ebx        # 0x14005cab8
   1400042c2:	jne    0x1400042e5
   1400042c4:	mov    eax,DWORD PTR [rip+0x588de]        # 0x14005cba8
   1400042ca:	mov    DWORD PTR [rip+0x587ec],eax        # 0x14005cabc
   1400042d0:	test   eax,eax
   1400042d2:	jne    0x1400042df
   1400042d4:	call   0x140012e80
   1400042d9:	mov    DWORD PTR [rip+0x587e5],eax        # 0x14005cac4
   1400042df:	mov    DWORD PTR [rip+0x587d3],edi        # 0x14005cab8
   1400042e5:	cmp    DWORD PTR [rip+0x587dd],ebx        # 0x14005cac8
   1400042eb:	jne    0x1400042f8
   1400042ed:	call   0x140012d58
   1400042f2:	mov    DWORD PTR [rip+0x587d0],edi        # 0x14005cac8
   1400042f8:	cmp    DWORD PTR [rip+0x587c2],ebx        # 0x14005cac0
   1400042fe:	jne    0x140004344
   140004300:	cmp    DWORD PTR [rip+0x587c6],ebx        # 0x14005cacc
   140004306:	jne    0x140004313
   140004308:	call   0x140012b10
   14000430d:	mov    DWORD PTR [rip+0x587b9],edi        # 0x14005cacc
   140004313:	cmp    DWORD PTR [rip+0x5879f],ebx        # 0x14005cab8
   140004319:	jne    0x14000433c
   14000431b:	mov    eax,DWORD PTR [rip+0x58887]        # 0x14005cba8
   140004321:	mov    DWORD PTR [rip+0x58795],eax        # 0x14005cabc
   140004327:	test   eax,eax
   140004329:	jne    0x140004336
   14000432b:	call   0x140012e80
   140004330:	mov    DWORD PTR [rip+0x5878e],eax        # 0x14005cac4
   140004336:	mov    DWORD PTR [rip+0x5877c],edi        # 0x14005cab8
   14000433c:	cmp    DWORD PTR [rip+0x58782],ebx        # 0x14005cac4
   140004342:	je     0x140004346
   140004344:	mov    ebx,edi
   140004346:	mov    eax,ebx
   140004348:	mov    rbx,QWORD PTR [rsp+0x30]
   14000434d:	add    rsp,0x20
   140004351:	pop    rdi
   140004352:	ret    
   140004353:	int3   
   140004354:	mov    r11,rsp
   140004357:	mov    QWORD PTR [r11+0x8],rcx
   14000435b:	push   rbp
   14000435c:	push   rsi
   14000435d:	push   rdi
   14000435e:	sub    rsp,0x30
   140004362:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   14000436a:	mov    QWORD PTR [r11+0x10],rbx
   14000436e:	mov    rdi,rdx
   140004371:	mov    rsi,rcx
   140004374:	lea    rax,[rip+0x4210d]        # 0x140046488
   14000437b:	mov    QWORD PTR [rcx],rax
   14000437e:	lea    rbx,[rcx+0x8]
   140004382:	mov    QWORD PTR [r11+0x18],rbx
   140004386:	lea    rbp,[rip+0x55f9b]        # 0x14005a328
   14000438d:	mov    rcx,rbp
   140004390:	mov    rax,QWORD PTR [rip+0x55f91]        # 0x14005a328
   140004397:	call   QWORD PTR [rax+0x18]
   14000439a:	add    rax,0x18
   14000439e:	mov    QWORD PTR [rbx],rax
   1400043a1:	lea    rax,[rip+0x41550]        # 0x1400458f8
   1400043a8:	mov    QWORD PTR [rsi],rax
   1400043ab:	mov    QWORD PTR [rsi+0x10],rdi
   1400043af:	lea    rbx,[rsi+0x670]
   1400043b6:	mov    QWORD PTR [rsp+0x60],rbx
   1400043bb:	mov    rcx,rbp
   1400043be:	mov    rax,QWORD PTR [rip+0x55f63]        # 0x14005a328
   1400043c5:	call   QWORD PTR [rax+0x18]
   1400043c8:	add    rax,0x18
   1400043cc:	mov    QWORD PTR [rbx],rax
   1400043cf:	xor    edi,edi
   1400043d1:	mov    QWORD PTR [rsi+0x678],rdi
   1400043d8:	mov    QWORD PTR [rsi+0x680],rdi
   1400043df:	mov    QWORD PTR [rsi+0x688],rdi
   1400043e6:	mov    QWORD PTR [rsi+0x690],rdi
   1400043ed:	mov    QWORD PTR [rsi+0x698],rdi
   1400043f4:	mov    QWORD PTR [rsi+0x6a0],rdi
   1400043fb:	mov    QWORD PTR [rsi+0x6a8],rdi
   140004402:	mov    QWORD PTR [rsi+0x6b0],rdi
   140004409:	mov    QWORD PTR [rsi+0x908],rdi
   140004410:	mov    QWORD PTR [rsi+0x910],rdi
   140004417:	mov    QWORD PTR [rsi+0x918],rdi
   14000441e:	mov    QWORD PTR [rsi+0x920],rdi
   140004425:	mov    QWORD PTR [rsi+0x930],rdi
   14000442c:	mov    QWORD PTR [rsi+0x938],rdi
   140004433:	mov    QWORD PTR [rsi+0x940],rdi
   14000443a:	mov    QWORD PTR [rsi+0x948],rdi
   140004441:	lea    rbx,[rsi+0x950]
   140004448:	mov    QWORD PTR [rsp+0x60],rbx
   14000444d:	mov    rcx,rbp
   140004450:	mov    rax,QWORD PTR [rip+0x55ed1]        # 0x14005a328
   140004457:	call   QWORD PTR [rax+0x18]
   14000445a:	add    rax,0x18
   14000445e:	mov    QWORD PTR [rbx],rax
   140004461:	mov    QWORD PTR [rsi+0x958],rdi
   140004468:	mov    QWORD PTR [rsi+0x960],rdi
   14000446f:	lea    rbx,[rsi+0x968]
   140004476:	mov    QWORD PTR [rsp+0x60],rbx
   14000447b:	mov    rcx,rbp
   14000447e:	mov    rax,QWORD PTR [rip+0x55ea3]        # 0x14005a328
   140004485:	call   QWORD PTR [rax+0x18]
   140004488:	add    rax,0x18
   14000448c:	mov    QWORD PTR [rbx],rax
   14000448f:	lea    rbx,[rsi+0x970]
   140004496:	mov    QWORD PTR [rsp+0x60],rbx
   14000449b:	mov    rcx,rbp
   14000449e:	mov    rax,QWORD PTR [rip+0x55e83]        # 0x14005a328
   1400044a5:	call   QWORD PTR [rax+0x18]
   1400044a8:	add    rax,0x18
   1400044ac:	mov    QWORD PTR [rbx],rax
   1400044af:	lea    rbx,[rsi+0x978]
   1400044b6:	mov    QWORD PTR [rsp+0x60],rbx
   1400044bb:	mov    rcx,rbp
   1400044be:	mov    rax,QWORD PTR [rip+0x55e63]        # 0x14005a328
   1400044c5:	call   QWORD PTR [rax+0x18]
   1400044c8:	add    rax,0x18
   1400044cc:	mov    QWORD PTR [rbx],rax
   1400044cf:	mov    QWORD PTR [rsi+0x18],rdi
   1400044d3:	mov    eax,0x99999999
   1400044d8:	mov    DWORD PTR [rsi+0x20],eax
   1400044db:	mov    DWORD PTR [rsi+0x24],eax
   1400044de:	mov    DWORD PTR [rsi+0x28],eax
   1400044e1:	mov    DWORD PTR [rsi+0x2c],eax
   1400044e4:	mov    DWORD PTR [rsi+0x30],eax
   1400044e7:	mov    DWORD PTR [rsi+0x34],edi
   1400044ea:	mov    DWORD PTR [rsi+0x38],0xfffffffe
   1400044f1:	mov    BYTE PTR [rsi+0x3c],dil
   1400044f5:	mov    QWORD PTR [rsi+0x40],rdi
   1400044f9:	mov    DWORD PTR [rsi+0x48],edi
   1400044fc:	lea    rcx,[rsi+0x254]
   140004503:	xor    edx,edx
   140004505:	mov    r8d,0x200
   14000450b:	call   0x14002bb90
   140004510:	or     DWORD PTR [rsi+0x454],0xffffffff
   140004517:	mov    QWORD PTR [rsi+0x458],rdi
   14000451e:	mov    BYTE PTR [rsi+0x460],dil
   140004525:	mov    WORD PTR [rsi+0x462],di
   14000452c:	mov    QWORD PTR [rsi+0x6b8],rdi
   140004533:	mov    QWORD PTR [rsi+0x6c0],rdi
   14000453a:	mov    WORD PTR [rsi+0x6ce],di
   140004541:	mov    WORD PTR [rsi+0x8d6],di
   140004548:	mov    DWORD PTR [rsi+0x6c8],edi
   14000454e:	mov    BYTE PTR [rsi+0x6cc],dil
   140004555:	lea    rcx,[rsi+0x4c]
   140004559:	xor    edx,edx
   14000455b:	mov    r8d,0x208
   140004561:	call   0x14002bb90
   140004566:	mov    DWORD PTR [rsi+0x928],edi
   14000456c:	mov    rax,rsi
   14000456f:	mov    rbx,QWORD PTR [rsp+0x58]
   140004574:	add    rsp,0x30
   140004578:	pop    rdi
   140004579:	pop    rsi
   14000457a:	pop    rbp
   14000457b:	ret    
   14000457c:	mov    QWORD PTR [rsp+0x8],rbx
   140004581:	push   rdi
   140004582:	sub    rsp,0x20
   140004586:	mov    ebx,edx
   140004588:	mov    rdi,rcx
   14000458b:	call   0x1400045ac
   140004590:	test   bl,0x1
   140004593:	je     0x14000459d
   140004595:	mov    rcx,rdi
   140004598:	call   0x14002657c
   14000459d:	mov    rax,rdi
   1400045a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045a5:	add    rsp,0x20
   1400045a9:	pop    rdi
   1400045aa:	ret    
   1400045ab:	int3   
   1400045ac:	mov    r11,rsp
   1400045af:	mov    QWORD PTR [r11+0x8],rcx
   1400045b3:	push   rsi
   1400045b4:	sub    rsp,0x30
   1400045b8:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   1400045c0:	mov    QWORD PTR [r11+0x18],rbx
   1400045c4:	mov    rbx,rcx
   1400045c7:	lea    rax,[rip+0x4132a]        # 0x1400458f8
   1400045ce:	mov    QWORD PTR [rcx],rax
   1400045d1:	lea    rax,[rcx+0x978]
   1400045d8:	mov    QWORD PTR [r11+0x10],rax
   1400045dc:	mov    rdx,QWORD PTR [rax]
   1400045df:	sub    rdx,0x18
   1400045e3:	or     esi,0xffffffff
   1400045e6:	mov    eax,esi
   1400045e8:	lock xadd DWORD PTR [rdx+0x10],eax
   1400045ed:	add    eax,esi
   1400045ef:	test   eax,eax
   1400045f1:	jg     0x1400045fd
   1400045f3:	mov    rcx,QWORD PTR [rdx]
   1400045f6:	mov    rax,QWORD PTR [rcx]
   1400045f9:	call   QWORD PTR [rax+0x8]
   1400045fc:	nop
   1400045fd:	lea    rax,[rbx+0x970]
   140004604:	mov    QWORD PTR [rsp+0x48],rax
   140004609:	mov    rdx,QWORD PTR [rax]
   14000460c:	sub    rdx,0x18
   140004610:	mov    eax,esi
   140004612:	lock xadd DWORD PTR [rdx+0x10],eax
   140004617:	add    eax,esi
   140004619:	test   eax,eax
   14000461b:	jg     0x140004627
   14000461d:	mov    rcx,QWORD PTR [rdx]
   140004620:	mov    rax,QWORD PTR [rcx]
   140004623:	call   QWORD PTR [rax+0x8]
   140004626:	nop
   140004627:	lea    rax,[rbx+0x968]
   14000462e:	mov    QWORD PTR [rsp+0x48],rax
   140004633:	mov    rdx,QWORD PTR [rax]
   140004636:	sub    rdx,0x18
   14000463a:	mov    eax,esi
   14000463c:	lock xadd DWORD PTR [rdx+0x10],eax
   140004641:	add    eax,esi
   140004643:	test   eax,eax
   140004645:	jg     0x140004651
   140004647:	mov    rcx,QWORD PTR [rdx]
   14000464a:	mov    rax,QWORD PTR [rcx]
   14000464d:	call   QWORD PTR [rax+0x8]
   140004650:	nop
   140004651:	lea    rcx,[rbx+0x958]
   140004658:	call   0x1400072ec
   14000465d:	nop
   14000465e:	lea    rax,[rbx+0x950]
   140004665:	mov    QWORD PTR [rsp+0x48],rax
   14000466a:	mov    rdx,QWORD PTR [rax]
   14000466d:	sub    rdx,0x18
   140004671:	mov    eax,esi
   140004673:	lock xadd DWORD PTR [rdx+0x10],eax
   140004678:	add    eax,esi
   14000467a:	test   eax,eax
   14000467c:	jg     0x140004688
   14000467e:	mov    rcx,QWORD PTR [rdx]
   140004681:	mov    rax,QWORD PTR [rcx]
   140004684:	call   QWORD PTR [rax+0x8]
   140004687:	nop
   140004688:	lea    rcx,[rbx+0x940]
   14000468f:	call   0x1400072ec
   140004694:	nop
   140004695:	lea    rcx,[rbx+0x930]
   14000469c:	call   0x1400072ec
   1400046a1:	nop
   1400046a2:	lea    rcx,[rbx+0x918]
   1400046a9:	call   0x1400072ec
   1400046ae:	nop
   1400046af:	lea    rcx,[rbx+0x908]
   1400046b6:	call   0x1400072ec
   1400046bb:	nop
   1400046bc:	lea    rcx,[rbx+0x6a8]
   1400046c3:	call   0x1400072ec
   1400046c8:	nop
   1400046c9:	mov    rcx,QWORD PTR [rbx+0x698]
   1400046d0:	test   rcx,rcx
   1400046d3:	je     0x1400046e2
   1400046d5:	call   0x1400273dc
   1400046da:	and    QWORD PTR [rbx+0x698],0x0
   1400046e2:	and    DWORD PTR [rbx+0x6a0],0x0
   1400046e9:	and    DWORD PTR [rbx+0x6a4],0x0
   1400046f0:	lea    rcx,[rbx+0x688]
   1400046f7:	call   0x1400072ec
   1400046fc:	nop
   1400046fd:	mov    rcx,QWORD PTR [rbx+0x678]
   140004704:	test   rcx,rcx
   140004707:	je     0x140004716
   140004709:	call   0x1400273dc
   14000470e:	and    QWORD PTR [rbx+0x678],0x0
   140004716:	and    DWORD PTR [rbx+0x680],0x0
   14000471d:	and    DWORD PTR [rbx+0x684],0x0
   140004724:	lea    rax,[rbx+0x670]
   14000472b:	mov    QWORD PTR [rsp+0x48],rax
   140004730:	mov    rdx,QWORD PTR [rax]
   140004733:	sub    rdx,0x18
   140004737:	mov    eax,esi
   140004739:	lock xadd DWORD PTR [rdx+0x10],eax
   14000473e:	add    eax,esi
   140004740:	test   eax,eax
   140004742:	jg     0x14000474e
   140004744:	mov    rcx,QWORD PTR [rdx]
   140004747:	mov    rax,QWORD PTR [rcx]
   14000474a:	call   QWORD PTR [rax+0x8]
   14000474d:	nop
   14000474e:	mov    rcx,rbx
   140004751:	mov    rbx,QWORD PTR [rsp+0x50]
   140004756:	add    rsp,0x30
   14000475a:	pop    rsi
   14000475b:	jmp    0x140014068
   140004760:	mov    QWORD PTR [rsp+0x8],rbx
   140004765:	push   rdi
   140004766:	sub    rsp,0x20
   14000476a:	mov    rdi,rcx
   14000476d:	call   0x1400140ac
   140004772:	mov    ebx,eax
   140004774:	test   eax,eax
   140004776:	je     0x140004786
   140004778:	mov    rcx,rdi
   14000477b:	call   0x140005be8
   140004780:	neg    eax
   140004782:	sbb    ecx,ecx
   140004784:	and    ebx,ecx
   140004786:	mov    eax,ebx
   140004788:	mov    rbx,QWORD PTR [rsp+0x30]
   14000478d:	add    rsp,0x20
   140004791:	pop    rdi
   140004792:	ret    
   140004793:	int3   
   140004794:	mov    rax,rsp
   140004797:	push   rbp
   140004798:	push   rsi
   140004799:	push   rdi
   14000479a:	push   r12
   14000479c:	push   r13
   14000479e:	push   r14
   1400047a0:	push   r15
   1400047a2:	lea    rbp,[rax-0x188]
   1400047a9:	sub    rsp,0x250
   1400047b0:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400047b8:	mov    QWORD PTR [rax+0x20],rbx
   1400047bc:	mov    rax,QWORD PTR [rip+0x548c5]        # 0x140059088
   1400047c3:	xor    rax,rsp
   1400047c6:	mov    QWORD PTR [rbp+0x140],rax
   1400047cd:	mov    r14,r8
   1400047d0:	mov    r15,rdx
   1400047d3:	mov    rdi,rcx
   1400047d6:	mov    rsi,QWORD PTR [rbp+0x1b0]
   1400047dd:	lea    rcx,[rip+0x55b44]        # 0x14005a328
   1400047e4:	mov    rax,QWORD PTR [rip+0x55b3d]        # 0x14005a328
   1400047eb:	call   QWORD PTR [rax+0x18]
   1400047ee:	add    rax,0x18
   1400047f2:	mov    QWORD PTR [rbp-0x68],rax
   1400047f6:	or     r12,0xffffffffffffffff
   1400047fa:	mov    DWORD PTR [rsp+0x28],r12d
   1400047ff:	mov    QWORD PTR [rsp+0x20],r14
   140004804:	mov    r9d,r12d
   140004807:	lea    r8,[rip+0x41496]        # 0x140045ca4
   14000480e:	lea    ebx,[r12+0x2]
   140004813:	mov    edx,ebx
   140004815:	mov    ecx,0x409
   14000481a:	call   QWORD PTR [rip+0x3cbc0]        # 0x1400413e0
   140004820:	xor    r13d,r13d
   140004823:	cmp    eax,0x2
   140004826:	je     0x140005665
   14000482c:	mov    DWORD PTR [rsp+0x28],r12d
   140004831:	mov    QWORD PTR [rsp+0x20],r14
   140004836:	mov    r9d,r12d
   140004839:	lea    r8,[rip+0x41468]        # 0x140045ca8
   140004840:	mov    edx,ebx
   140004842:	mov    ecx,0x409
   140004847:	call   QWORD PTR [rip+0x3cb93]        # 0x1400413e0
   14000484d:	cmp    eax,0x2
   140004850:	je     0x140005665
   140004856:	mov    DWORD PTR [rsp+0x28],r12d
   14000485b:	mov    QWORD PTR [rsp+0x20],r14
   140004860:	mov    r9d,r12d
   140004863:	lea    r8,[rip+0x411ee]        # 0x140045a58
   14000486a:	mov    edx,ebx
   14000486c:	mov    ecx,0x409
   140004871:	call   QWORD PTR [rip+0x3cb69]        # 0x1400413e0
   140004877:	cmp    eax,0x2
   14000487a:	jne    0x140004884
   14000487c:	mov    DWORD PTR [rdi+0x48],ebx
   14000487f:	jmp    0x14000566f
   140004884:	mov    DWORD PTR [rsp+0x28],r12d
   140004889:	mov    QWORD PTR [rsp+0x20],r14
   14000488e:	mov    r9d,r12d
   140004891:	lea    r8,[rip+0x4130c]        # 0x140045ba4
   140004898:	mov    edx,ebx
   14000489a:	mov    ecx,0x409
   14000489f:	call   QWORD PTR [rip+0x3cb3b]        # 0x1400413e0
   1400048a5:	cmp    eax,0x2
   1400048a8:	jne    0x14000490a
   1400048aa:	test   rsi,rsi
   1400048ad:	je     0x1400048fd
   1400048af:	cmp    WORD PTR [rsi],r13w
   1400048b3:	je     0x1400048fd
   1400048b5:	lea    rcx,[rdi+0x4c]
   1400048b9:	mov    r8,rsi
   1400048bc:	mov    esi,0x104
   1400048c1:	mov    edx,esi
   1400048c3:	call   0x140001004
   1400048c8:	test   eax,eax
   1400048ca:	jns    0x14000566f
   1400048d0:	mov    r9d,esi
   1400048d3:	lea    r8,[rip+0x41066]        # 0x140045940
   1400048da:	mov    edx,0x40
   1400048df:	lea    rcx,[rbp+0x0]
   1400048e3:	call   0x140004164
   1400048e8:	mov    QWORD PTR [rbp-0x60],r14
   1400048ec:	lea    rax,[rbp+0x0]
   1400048f0:	mov    QWORD PTR [rbp-0x58],rax
   1400048f4:	lea    r8,[rbp-0x60]
   1400048f8:	jmp    0x1400051fe
   1400048fd:	mov    QWORD PTR [rbp-0x78],r14
   140004901:	lea    r8,[rbp-0x78]
   140004905:	jmp    0x140005212
   14000490a:	mov    DWORD PTR [rsp+0x28],r12d
   14000490f:	mov    QWORD PTR [rsp+0x20],r14
   140004914:	mov    r9d,r12d
   140004917:	lea    r8,[rip+0x41332]        # 0x140045c50
   14000491e:	mov    edx,ebx
   140004920:	mov    ecx,0x409
   140004925:	call   QWORD PTR [rip+0x3cab5]        # 0x1400413e0
   14000492b:	cmp    eax,0x2
   14000492e:	jne    0x140004965
   140004930:	test   rsi,rsi
   140004933:	je     0x140004959
   140004935:	mov    rax,r12
   140004938:	inc    rax
   14000493b:	cmp    WORD PTR [rsi+rax*2],r13w
   140004940:	jne    0x140004938
   140004942:	test   rax,rax
   140004945:	je     0x140004959
   140004947:	lea    rcx,[rdi+0x968]
   14000494e:	mov    r8d,eax
   140004951:	mov    rdx,rsi
   140004954:	jmp    0x140005537
   140004959:	lea    rcx,[rdi+0x968]
   140004960:	jmp    0x14000552d
   140004965:	mov    DWORD PTR [rsp+0x28],r12d
   14000496a:	mov    QWORD PTR [rsp+0x20],r14
   14000496f:	mov    r9d,r12d
   140004972:	lea    r8,[rip+0x412ef]        # 0x140045c68
   140004979:	mov    edx,ebx
   14000497b:	mov    ecx,0x409
   140004980:	call   QWORD PTR [rip+0x3ca5a]        # 0x1400413e0
   140004986:	cmp    eax,0x2
   140004989:	jne    0x1400049b7
   14000498b:	test   rsi,rsi
   14000498e:	je     0x1400049ab
   140004990:	mov    rax,r12
   140004993:	inc    rax
   140004996:	cmp    WORD PTR [rsi+rax*2],r13w
   14000499b:	jne    0x140004993
   14000499d:	test   rax,rax
   1400049a0:	je     0x1400049ab
   1400049a2:	lea    rcx,[rdi+0x970]
   1400049a9:	jmp    0x14000494e
   1400049ab:	lea    rcx,[rdi+0x970]
   1400049b2:	jmp    0x14000552d
   1400049b7:	mov    DWORD PTR [rsp+0x28],r12d
   1400049bc:	mov    QWORD PTR [rsp+0x20],r14
   1400049c1:	mov    r9d,r12d
   1400049c4:	lea    r8,[rip+0x412ad]        # 0x140045c78
   1400049cb:	mov    edx,ebx
   1400049cd:	mov    ecx,0x409
   1400049d2:	call   QWORD PTR [rip+0x3ca08]        # 0x1400413e0
   1400049d8:	cmp    eax,0x2
   1400049db:	jne    0x140004a0c
   1400049dd:	test   rsi,rsi
   1400049e0:	je     0x140004a00
   1400049e2:	mov    rax,r12
   1400049e5:	inc    rax
   1400049e8:	cmp    WORD PTR [rsi+rax*2],r13w
   1400049ed:	jne    0x1400049e5
   1400049ef:	test   rax,rax
   1400049f2:	je     0x140004a00
   1400049f4:	lea    rcx,[rdi+0x978]
   1400049fb:	jmp    0x14000494e
   140004a00:	lea    rcx,[rdi+0x978]
   140004a07:	jmp    0x14000552d
   140004a0c:	mov    DWORD PTR [rsp+0x28],r12d
   140004a11:	mov    QWORD PTR [rsp+0x20],r14
   140004a16:	mov    r9d,r12d
   140004a19:	lea    r8,[rip+0x40f28]        # 0x140045948
   140004a20:	mov    edx,ebx
   140004a22:	mov    ecx,0x409
   140004a27:	call   QWORD PTR [rip+0x3c9b3]        # 0x1400413e0
   140004a2d:	cmp    eax,0x2
   140004a30:	jne    0x140004a3a
   140004a32:	mov    DWORD PTR [rdi+0x18],ebx
   140004a35:	jmp    0x14000566f
   140004a3a:	mov    DWORD PTR [rsp+0x28],r12d
   140004a3f:	mov    QWORD PTR [rsp+0x20],r14
   140004a44:	mov    r9d,r12d
   140004a47:	lea    r8,[rip+0x40f12]        # 0x140045960
   140004a4e:	mov    edx,ebx
   140004a50:	mov    ecx,0x409
   140004a55:	call   QWORD PTR [rip+0x3c985]        # 0x1400413e0
   140004a5b:	cmp    eax,0x2
   140004a5e:	jne    0x140004a68
   140004a60:	mov    DWORD PTR [rdi+0x1c],ebx
   140004a63:	jmp    0x14000566f
   140004a68:	mov    DWORD PTR [rsp+0x28],r12d
   140004a6d:	mov    QWORD PTR [rsp+0x20],r14
   140004a72:	mov    r9d,r12d
   140004a75:	lea    r8,[rip+0x40f5c]        # 0x1400459d8
   140004a7c:	mov    edx,ebx
   140004a7e:	mov    ecx,0x409
   140004a83:	call   QWORD PTR [rip+0x3c957]        # 0x1400413e0
   140004a89:	cmp    eax,0x2
   140004a8c:	jne    0x140004aa3
   140004a8e:	lea    r9,[rdi+0x38]
   140004a92:	or     DWORD PTR [rsp+0x20],0xffffffff
   140004a97:	lea    rdx,[rip+0x40f3a]        # 0x1400459d8
   140004a9e:	jmp    0x1400054cb
   140004aa3:	mov    DWORD PTR [rsp+0x28],r12d
   140004aa8:	mov    QWORD PTR [rsp+0x20],r14
   140004aad:	mov    r9d,r12d
   140004ab0:	lea    r8,[rip+0x40f59]        # 0x140045a10
   140004ab7:	mov    edx,ebx
   140004ab9:	mov    ecx,0x409
   140004abe:	call   QWORD PTR [rip+0x3c91c]        # 0x1400413e0
   140004ac4:	cmp    eax,0x2
   140004ac7:	jne    0x140004ade
   140004ac9:	lea    r9,[rdi+0x34]
   140004acd:	or     DWORD PTR [rsp+0x20],0xffffffff
   140004ad2:	lea    rdx,[rip+0x40f37]        # 0x140045a10
   140004ad9:	jmp    0x1400054cb
   140004ade:	mov    DWORD PTR [rsp+0x28],r12d
   140004ae3:	mov    QWORD PTR [rsp+0x20],r14
   140004ae8:	mov    r9d,r12d
   140004aeb:	lea    r8,[rip+0x40f56]        # 0x140045a48
   140004af2:	mov    edx,ebx
   140004af4:	mov    ecx,0x409
   140004af9:	call   QWORD PTR [rip+0x3c8e1]        # 0x1400413e0
   140004aff:	cmp    eax,0x2
   140004b02:	jne    0x140004b0c
   140004b04:	mov    DWORD PTR [rdi+0x40],ebx
   140004b07:	jmp    0x14000566f
   140004b0c:	mov    DWORD PTR [rsp+0x28],r12d
   140004b11:	mov    QWORD PTR [rsp+0x20],r14
   140004b16:	mov    r9d,r12d
   140004b19:	lea    r8,[rip+0x41080]        # 0x140045ba0
   140004b20:	mov    edx,ebx
   140004b22:	mov    ecx,0x409
   140004b27:	call   QWORD PTR [rip+0x3c8b3]        # 0x1400413e0
   140004b2d:	cmp    eax,0x2
   140004b30:	jne    0x140004b3a
   140004b32:	mov    DWORD PTR [rdi+0x44],ebx
   140004b35:	jmp    0x14000566f
   140004b3a:	mov    DWORD PTR [rsp+0x28],r12d
   140004b3f:	mov    QWORD PTR [rsp+0x20],r14
   140004b44:	mov    r9d,r12d
   140004b47:	lea    r8,[rip+0x40e2a]        # 0x140045978
   140004b4e:	mov    edx,ebx
   140004b50:	mov    ecx,0x409
   140004b55:	call   QWORD PTR [rip+0x3c885]        # 0x1400413e0
   140004b5b:	cmp    eax,0x2
   140004b5e:	jne    0x140004b70
   140004b60:	lea    r9,[rdi+0x20]
   140004b64:	lea    rdx,[rip+0x40e0d]        # 0x140045978
   140004b6b:	jmp    0x140004c3d
   140004b70:	mov    DWORD PTR [rsp+0x28],r12d
   140004b75:	mov    QWORD PTR [rsp+0x20],r14
   140004b7a:	mov    r9d,r12d
   140004b7d:	lea    r8,[rip+0x40e0c]        # 0x140045990
   140004b84:	mov    edx,ebx
   140004b86:	mov    ecx,0x409
   140004b8b:	call   QWORD PTR [rip+0x3c84f]        # 0x1400413e0
   140004b91:	cmp    eax,0x2
   140004b94:	jne    0x140004ba6
   140004b96:	lea    r9,[rdi+0x24]
   140004b9a:	lea    rdx,[rip+0x40def]        # 0x140045990
   140004ba1:	jmp    0x140004c3d
   140004ba6:	mov    DWORD PTR [rsp+0x28],r12d
   140004bab:	mov    QWORD PTR [rsp+0x20],r14
   140004bb0:	mov    r9d,r12d
   140004bb3:	lea    r8,[rip+0x40dee]        # 0x1400459a8
   140004bba:	mov    edx,ebx
   140004bbc:	mov    ecx,0x409
   140004bc1:	call   QWORD PTR [rip+0x3c819]        # 0x1400413e0
   140004bc7:	cmp    eax,0x2
   140004bca:	jne    0x140004bd9
   140004bcc:	lea    r9,[rdi+0x28]
   140004bd0:	lea    rdx,[rip+0x40dd1]        # 0x1400459a8
   140004bd7:	jmp    0x140004c3d
   140004bd9:	mov    DWORD PTR [rsp+0x28],r12d
   140004bde:	mov    QWORD PTR [rsp+0x20],r14
   140004be3:	mov    r9d,r12d
   140004be6:	lea    r8,[rip+0x40dd3]        # 0x1400459c0
   140004bed:	mov    edx,ebx
   140004bef:	mov    ecx,0x409
   140004bf4:	call   QWORD PTR [rip+0x3c7e6]        # 0x1400413e0
   140004bfa:	cmp    eax,0x2
   140004bfd:	jne    0x140004c0c
   140004bff:	lea    r9,[rdi+0x2c]
   140004c03:	lea    rdx,[rip+0x40db6]        # 0x1400459c0
   140004c0a:	jmp    0x140004c3d
   140004c0c:	mov    DWORD PTR [rsp+0x28],r12d
   140004c11:	mov    QWORD PTR [rsp+0x20],r14
   140004c16:	mov    r9d,r12d
   140004c19:	lea    r8,[rip+0x41070]        # 0x140045c90
   140004c20:	mov    edx,ebx
   140004c22:	mov    ecx,0x409
   140004c27:	call   QWORD PTR [rip+0x3c7b3]        # 0x1400413e0
   140004c2d:	cmp    eax,0x2
   140004c30:	jne    0x140004c4d
   140004c32:	lea    r9,[rdi+0x30]
   140004c36:	lea    rdx,[rip+0x41053]        # 0x140045c90
   140004c3d:	mov    r8,rsi
   140004c40:	mov    rcx,rdi
   140004c43:	call   0x140014930
   140004c48:	jmp    0x1400054d6
   140004c4d:	mov    DWORD PTR [rsp+0x28],r12d
   140004c52:	mov    QWORD PTR [rsp+0x20],r14
   140004c57:	mov    r9d,r12d
   140004c5a:	lea    r8,[rip+0x40dd7]        # 0x140045a38
   140004c61:	mov    edx,ebx
   140004c63:	mov    ecx,0x409
   140004c68:	call   QWORD PTR [rip+0x3c772]        # 0x1400413e0
   140004c6e:	cmp    eax,0x2
   140004c71:	jne    0x140004c9c
   140004c73:	mov    BYTE PTR [rdi+0x458],bl
   140004c79:	lea    rax,[rdi+0x254]
   140004c80:	lea    r9,[rdi+0x454]
   140004c87:	mov    QWORD PTR [rsp+0x28],rax
   140004c8c:	mov    r8,rsi
   140004c8f:	mov    rcx,rdi
   140004c92:	call   0x140014c28
   140004c97:	jmp    0x1400054d6
   140004c9c:	mov    DWORD PTR [rsp+0x28],r12d
   140004ca1:	mov    QWORD PTR [rsp+0x20],r14
   140004ca6:	mov    r9d,r12d
   140004ca9:	lea    r8,[rip+0x40d88]        # 0x140045a38
   140004cb0:	mov    edx,ebx
   140004cb2:	mov    ecx,0x409
   140004cb7:	call   QWORD PTR [rip+0x3c723]        # 0x1400413e0
   140004cbd:	cmp    eax,0x2
   140004cc0:	jne    0x140004d2b
   140004cc2:	test   rsi,rsi
   140004cc5:	je     0x140004d1e
   140004cc7:	cmp    WORD PTR [rsi],r13w
   140004ccb:	je     0x140004d1e
   140004ccd:	lea    rcx,[rdi+0x254]
   140004cd4:	mov    r8,rsi
   140004cd7:	mov    esi,0x100
   140004cdc:	mov    edx,esi
   140004cde:	call   0x140001004
   140004ce3:	test   eax,eax
   140004ce5:	jns    0x14000566f
   140004ceb:	mov    r9d,esi
   140004cee:	lea    r8,[rip+0x40c4b]        # 0x140045940
   140004cf5:	mov    edx,0x40
   140004cfa:	lea    rcx,[rbp+0xc0]
   140004d01:	call   0x140004164
   140004d06:	mov    QWORD PTR [rbp-0x20],r14
   140004d0a:	lea    rax,[rbp+0xc0]
   140004d11:	mov    QWORD PTR [rbp-0x18],rax
   140004d15:	lea    r8,[rbp-0x20]
   140004d19:	jmp    0x1400051fe
   140004d1e:	mov    QWORD PTR [rbp-0x80],r14
   140004d22:	lea    r8,[rbp-0x80]
   140004d26:	jmp    0x140005212
   140004d2b:	mov    DWORD PTR [rsp+0x28],r12d
   140004d30:	mov    QWORD PTR [rsp+0x20],r14
   140004d35:	mov    r9d,r12d
   140004d38:	lea    r8,[rip+0x40d29]        # 0x140045a68
   140004d3f:	mov    edx,ebx
   140004d41:	mov    ecx,0x409
   140004d46:	call   QWORD PTR [rip+0x3c694]        # 0x1400413e0
   140004d4c:	cmp    eax,0x2
   140004d4f:	jne    0x140004db6
   140004d51:	test   rsi,rsi
   140004d54:	je     0x140004da7
   140004d56:	cmp    WORD PTR [rsi],r13w
   140004d5a:	je     0x140004da7
   140004d5c:	lea    rcx,[rdi+0x462]
   140004d63:	mov    r8,rsi
   140004d66:	mov    esi,0x104
   140004d6b:	mov    edx,esi
   140004d6d:	call   0x140001004
   140004d72:	test   eax,eax
   140004d74:	jns    0x14000566f
   140004d7a:	mov    r9d,esi
   140004d7d:	lea    r8,[rip+0x40bbc]        # 0x140045940
   140004d84:	mov    edx,0x40
   140004d89:	lea    rcx,[rbp+0x40]
   140004d8d:	call   0x140004164
   140004d92:	mov    QWORD PTR [rbp-0x40],r14
   140004d96:	lea    rax,[rbp+0x40]
   140004d9a:	mov    QWORD PTR [rbp-0x38],rax
   140004d9e:	lea    r8,[rbp-0x40]
   140004da2:	jmp    0x1400051fe
   140004da7:	mov    QWORD PTR [rsp+0x70],r14
   140004dac:	lea    r8,[rsp+0x70]
   140004db1:	jmp    0x140005212
   140004db6:	mov    DWORD PTR [rsp+0x28],r12d
   140004dbb:	mov    QWORD PTR [rsp+0x20],r14
   140004dc0:	mov    r9d,r12d
   140004dc3:	lea    r8,[rip+0x40cae]        # 0x140045a78
   140004dca:	mov    edx,ebx
   140004dcc:	mov    ecx,0x409
   140004dd1:	call   QWORD PTR [rip+0x3c609]        # 0x1400413e0
   140004dd7:	cmp    eax,0x2
   140004dda:	jne    0x140004e0b
   140004ddc:	test   rsi,rsi
   140004ddf:	je     0x140004dff
   140004de1:	mov    rax,r12
   140004de4:	inc    rax
   140004de7:	cmp    WORD PTR [rsi+rax*2],r13w
   140004dec:	jne    0x140004de4
   140004dee:	test   rax,rax
   140004df1:	je     0x140004dff
   140004df3:	lea    rcx,[rdi+0x670]
   140004dfa:	jmp    0x14000494e
   140004dff:	lea    rcx,[rdi+0x670]
   140004e06:	jmp    0x14000552d
   140004e0b:	mov    DWORD PTR [rsp+0x28],r12d
   140004e10:	mov    QWORD PTR [rsp+0x20],r14
   140004e15:	mov    r9d,r12d
   140004e18:	lea    r8,[rip+0x40c79]        # 0x140045a98
   140004e1f:	mov    edx,ebx
   140004e21:	mov    ecx,0x409
   140004e26:	call   QWORD PTR [rip+0x3c5b4]        # 0x1400413e0
   140004e2c:	cmp    eax,0x2
   140004e2f:	jne    0x140004e3c
   140004e31:	mov    BYTE PTR [rdi+0x459],bl
   140004e37:	jmp    0x14000566f
   140004e3c:	mov    DWORD PTR [rsp+0x28],r12d
   140004e41:	mov    QWORD PTR [rsp+0x20],r14
   140004e46:	mov    r9d,r12d
   140004e49:	lea    r8,[rip+0x40c38]        # 0x140045a88
   140004e50:	mov    edx,ebx
   140004e52:	mov    ecx,0x409
   140004e57:	call   QWORD PTR [rip+0x3c583]        # 0x1400413e0
   140004e5d:	cmp    eax,0x2
   140004e60:	jne    0x140004e6d
   140004e62:	mov    BYTE PTR [rdi+0x45a],bl
   140004e68:	jmp    0x14000566f
   140004e6d:	mov    DWORD PTR [rsp+0x28],r12d
   140004e72:	mov    QWORD PTR [rsp+0x20],r14
   140004e77:	mov    r9d,r12d
   140004e7a:	lea    r8,[rip+0x40c27]        # 0x140045aa8
   140004e81:	mov    edx,ebx
   140004e83:	mov    ecx,0x409
   140004e88:	call   QWORD PTR [rip+0x3c552]        # 0x1400413e0
   140004e8e:	cmp    eax,0x2
   140004e91:	je     0x140004eb9
   140004e93:	mov    DWORD PTR [rsp+0x28],r12d
   140004e98:	mov    QWORD PTR [rsp+0x20],r14
   140004e9d:	mov    r9d,r12d
   140004ea0:	lea    r8,[rip+0x4079d]        # 0x140045644
   140004ea7:	mov    edx,ebx
   140004ea9:	mov    ecx,0x409
   140004eae:	call   QWORD PTR [rip+0x3c52c]        # 0x1400413e0
   140004eb4:	cmp    eax,0x2
   140004eb7:	jne    0x140004ec4
   140004eb9:	mov    BYTE PTR [rdi+0x45b],bl
   140004ebf:	jmp    0x14000566f
   140004ec4:	mov    DWORD PTR [rsp+0x28],r12d
   140004ec9:	mov    QWORD PTR [rsp+0x20],r14
   140004ece:	mov    r9d,r12d
   140004ed1:	lea    r8,[rip+0x40bf0]        # 0x140045ac8
   140004ed8:	mov    edx,ebx
   140004eda:	mov    ecx,0x409
   140004edf:	call   QWORD PTR [rip+0x3c4fb]        # 0x1400413e0
   140004ee5:	cmp    eax,0x2
   140004ee8:	jne    0x140004f11
   140004eea:	mov    BYTE PTR [rdi+0x45c],bl
   140004ef0:	lea    r8,[rdi+0x688]
   140004ef7:	mov    rcx,rsi
   140004efa:	call   0x140007368
   140004eff:	test   al,al
   140004f01:	jne    0x14000566f
   140004f07:	mov    QWORD PTR [rbp-0x70],r14
   140004f0b:	lea    r8,[rbp-0x70]
   140004f0f:	jmp    0x140004f5e
   140004f11:	mov    DWORD PTR [rsp+0x28],r12d
   140004f16:	mov    QWORD PTR [rsp+0x20],r14
   140004f1b:	mov    r9d,r12d
   140004f1e:	lea    r8,[rip+0x40bb3]        # 0x140045ad8
   140004f25:	mov    edx,ebx
   140004f27:	mov    ecx,0x409
   140004f2c:	call   QWORD PTR [rip+0x3c4ae]        # 0x1400413e0
   140004f32:	cmp    eax,0x2
   140004f35:	jne    0x140004f68
   140004f37:	mov    BYTE PTR [rdi+0x45d],bl
   140004f3d:	lea    r8,[rdi+0x6a8]
   140004f44:	mov    rcx,rsi
   140004f47:	call   0x140007368
   140004f4c:	test   al,al
   140004f4e:	jne    0x14000566f
   140004f54:	mov    QWORD PTR [rsp+0x60],r14
   140004f59:	lea    r8,[rsp+0x60]
   140004f5e:	mov    ecx,0xe1230fa7
   140004f63:	jmp    0x140005642
   140004f68:	mov    DWORD PTR [rsp+0x28],r12d
   140004f6d:	mov    QWORD PTR [rsp+0x20],r14
   140004f72:	mov    r9d,r12d
   140004f75:	lea    r8,[rip+0x40b7c]        # 0x140045af8
   140004f7c:	mov    edx,ebx
   140004f7e:	mov    ecx,0x409
   140004f83:	call   QWORD PTR [rip+0x3c457]        # 0x1400413e0
   140004f89:	cmp    eax,0x2
   140004f8c:	jne    0x140004faf
   140004f8e:	mov    BYTE PTR [rdi+0x45e],bl
   140004f94:	lea    r9,[rdi+0x6b8]
   140004f9b:	mov    DWORD PTR [rsp+0x20],0x989680
   140004fa3:	lea    rdx,[rip+0x40b4e]        # 0x140045af8
   140004faa:	jmp    0x1400054cb
   140004faf:	mov    DWORD PTR [rsp+0x28],r12d
   140004fb4:	mov    QWORD PTR [rsp+0x20],r14
   140004fb9:	mov    r9d,r12d
   140004fbc:	lea    r8,[rip+0x40b25]        # 0x140045ae8
   140004fc3:	mov    edx,ebx
   140004fc5:	mov    ecx,0x409
   140004fca:	call   QWORD PTR [rip+0x3c410]        # 0x1400413e0
   140004fd0:	cmp    eax,0x2
   140004fd3:	jne    0x140004ff6
   140004fd5:	mov    BYTE PTR [rdi+0x45f],bl
   140004fdb:	lea    r9,[rdi+0x6bc]
   140004fe2:	mov    DWORD PTR [rsp+0x20],0xa
   140004fea:	lea    rdx,[rip+0x40af7]        # 0x140045ae8
   140004ff1:	jmp    0x1400054cb
   140004ff6:	mov    DWORD PTR [rsp+0x28],r12d
   140004ffb:	mov    QWORD PTR [rsp+0x20],r14
   140005000:	mov    r9d,r12d
   140005003:	lea    r8,[rip+0x40ae6]        # 0x140045af0
   14000500a:	mov    edx,ebx
   14000500c:	mov    ecx,0x409
   140005011:	call   QWORD PTR [rip+0x3c3c9]        # 0x1400413e0
   140005017:	cmp    eax,0x2
   14000501a:	jne    0x14000503d
   14000501c:	mov    BYTE PTR [rdi+0x460],bl
   140005022:	lea    r9,[rdi+0x6c0]
   140005029:	mov    DWORD PTR [rsp+0x20],0xa
   140005031:	lea    rdx,[rip+0x40ab8]        # 0x140045af0
   140005038:	jmp    0x1400054cb
   14000503d:	mov    DWORD PTR [rsp+0x28],r12d
   140005042:	mov    QWORD PTR [rsp+0x20],r14
   140005047:	mov    r9d,r12d
   14000504a:	lea    r8,[rip+0x40ac7]        # 0x140045b18
   140005051:	mov    edx,ebx
   140005053:	mov    ecx,0x409
   140005058:	call   QWORD PTR [rip+0x3c382]        # 0x1400413e0
   14000505e:	cmp    eax,0x2
   140005061:	jne    0x1400050f4
   140005067:	test   rsi,rsi
   14000506a:	je     0x1400050e9
   14000506c:	mov    rax,r12
   14000506f:	inc    rax
   140005072:	cmp    WORD PTR [rsi+rax*2],r13w
   140005077:	jne    0x14000506f
   140005079:	test   rax,rax
   14000507c:	je     0x1400050e9
   14000507e:	mov    DWORD PTR [rsp+0x28],r12d
   140005083:	lea    rax,[rip+0x40a96]        # 0x140045b20
   14000508a:	mov    QWORD PTR [rsp+0x20],rax
   14000508f:	mov    r9d,r12d
   140005092:	mov    r8,rsi
   140005095:	mov    edx,ebx
   140005097:	mov    r14d,0x409
   14000509d:	mov    ecx,r14d
   1400050a0:	call   QWORD PTR [rip+0x3c33a]        # 0x1400413e0
   1400050a6:	cmp    eax,0x2
   1400050a9:	je     0x1400050e9
   1400050ab:	mov    DWORD PTR [rsp+0x28],r12d
   1400050b0:	lea    rax,[rip+0x40a81]        # 0x140045b38
   1400050b7:	mov    QWORD PTR [rsp+0x20],rax
   1400050bc:	mov    r9d,r12d
   1400050bf:	mov    r8,rsi
   1400050c2:	mov    edx,ebx
   1400050c4:	mov    ecx,r14d
   1400050c7:	call   QWORD PTR [rip+0x3c313]        # 0x1400413e0
   1400050cd:	cmp    eax,0x2
   1400050d0:	jne    0x1400050dd
   1400050d2:	mov    DWORD PTR [rdi+0x6c4],eax
   1400050d8:	jmp    0x14000566f
   1400050dd:	or     DWORD PTR [rdi+0x6c4],0xffffffff
   1400050e4:	jmp    0x14000566f
   1400050e9:	mov    DWORD PTR [rdi+0x6c4],ebx
   1400050ef:	jmp    0x14000566f
   1400050f4:	mov    DWORD PTR [rsp+0x28],r12d
   1400050f9:	mov    QWORD PTR [rsp+0x20],r14
   1400050fe:	mov    r9d,r12d
   140005101:	lea    r8,[rip+0x40a00]        # 0x140045b08
   140005108:	mov    edx,ebx
   14000510a:	mov    ecx,0x409
   14000510f:	call   QWORD PTR [rip+0x3c2cb]        # 0x1400413e0
   140005115:	cmp    eax,0x2
   140005118:	jne    0x140005185
   14000511a:	test   rsi,rsi
   14000511d:	je     0x140005176
   14000511f:	cmp    WORD PTR [rsi],r13w
   140005123:	je     0x140005176
   140005125:	lea    rcx,[rdi+0x6ce]
   14000512c:	mov    r8,rsi
   14000512f:	mov    esi,0x104
   140005134:	mov    edx,esi
   140005136:	call   0x140001004
   14000513b:	test   eax,eax
   14000513d:	jns    0x14000566f
   140005143:	mov    r9d,esi
   140005146:	lea    r8,[rip+0x407f3]        # 0x140045940
   14000514d:	mov    edx,0x40
   140005152:	lea    rcx,[rbp+0x80]
   140005159:	call   0x140004164
   14000515e:	mov    QWORD PTR [rbp-0x30],r14
   140005162:	lea    rax,[rbp+0x80]
   140005169:	mov    QWORD PTR [rbp-0x28],rax
   14000516d:	lea    r8,[rbp-0x30]
   140005171:	jmp    0x1400051fe
   140005176:	mov    QWORD PTR [rsp+0x68],r14
   14000517b:	lea    r8,[rsp+0x68]
   140005180:	jmp    0x140005212
   140005185:	mov    DWORD PTR [rsp+0x28],r12d
   14000518a:	mov    QWORD PTR [rsp+0x20],r14
   14000518f:	mov    r9d,r12d
   140005192:	lea    r8,[rip+0x4088f]        # 0x140045a28
   140005199:	mov    edx,ebx
   14000519b:	mov    ecx,0x409
   1400051a0:	call   QWORD PTR [rip+0x3c23a]        # 0x1400413e0
   1400051a6:	cmp    eax,0x2
   1400051a9:	jne    0x14000521c
   1400051ab:	test   rsi,rsi
   1400051ae:	je     0x140005208
   1400051b0:	cmp    WORD PTR [rsi],r13w
   1400051b4:	je     0x140005208
   1400051b6:	lea    rcx,[rdi+0x8d6]
   1400051bd:	mov    r8,rsi
   1400051c0:	lea    esi,[rax+0x16]
   1400051c3:	mov    edx,esi
   1400051c5:	call   0x140001004
   1400051ca:	test   eax,eax
   1400051cc:	jns    0x14000566f
   1400051d2:	mov    r9d,esi
   1400051d5:	lea    r8,[rip+0x40764]        # 0x140045940
   1400051dc:	lea    edx,[rsi+0x28]
   1400051df:	lea    rcx,[rbp+0x100]
   1400051e6:	call   0x140004164
   1400051eb:	mov    QWORD PTR [rbp-0x50],r14
   1400051ef:	lea    rax,[rbp+0x100]
   1400051f6:	mov    QWORD PTR [rbp-0x48],rax
   1400051fa:	lea    r8,[rbp-0x50]
   1400051fe:	mov    ecx,0xe1230fac
   140005203:	jmp    0x140005642
   140005208:	mov    QWORD PTR [rsp+0x78],r14
   14000520d:	lea    r8,[rsp+0x78]
   140005212:	mov    ecx,0xe1230faa
   140005217:	jmp    0x140005642
   14000521c:	mov    DWORD PTR [rsp+0x28],r12d
   140005221:	mov    QWORD PTR [rsp+0x20],r14
   140005226:	mov    r9d,r12d
   140005229:	lea    r8,[rip+0x40980]        # 0x140045bb0
   140005230:	mov    edx,ebx
   140005232:	mov    ecx,0x409
   140005237:	call   QWORD PTR [rip+0x3c1a3]        # 0x1400413e0
   14000523d:	cmp    eax,0x2
   140005240:	jne    0x1400052ab
   140005242:	lea    rcx,[rip+0x550df]        # 0x14005a328
   140005249:	mov    rax,QWORD PTR [rip+0x550d8]        # 0x14005a328
   140005250:	call   QWORD PTR [rax+0x18]
   140005253:	add    rax,0x18
   140005257:	mov    QWORD PTR [rsp+0x38],rax
   14000525c:	test   rsi,rsi
   14000525f:	je     0x14000527b
   140005261:	mov    rax,r12
   140005264:	inc    rax
   140005267:	cmp    WORD PTR [rsi+rax*2],r13w
   14000526c:	jne    0x140005264
   14000526e:	test   rax,rax
   140005271:	je     0x14000527b
   140005273:	mov    r8d,eax
   140005276:	mov    rdx,rsi
   140005279:	jmp    0x140005285
   14000527b:	xor    r8d,r8d
   14000527e:	lea    rdx,[rip+0x402ab]        # 0x140045530
   140005285:	lea    rcx,[rsp+0x38]
   14000528a:	call   0x140006f54
   14000528f:	lea    rcx,[rdi+0x908]
   140005296:	lea    rdx,[rsp+0x38]
   14000529b:	call   0x140006c28
   1400052a0:	nop
   1400052a1:	mov    rdx,QWORD PTR [rsp+0x38]
   1400052a6:	jmp    0x1400055cf
   1400052ab:	mov    DWORD PTR [rsp+0x28],r12d
   1400052b0:	mov    QWORD PTR [rsp+0x20],r14
   1400052b5:	mov    r9d,r12d
   1400052b8:	lea    r8,[rip+0x40901]        # 0x140045bc0
   1400052bf:	mov    edx,ebx
   1400052c1:	mov    ecx,0x409
   1400052c6:	call   QWORD PTR [rip+0x3c114]        # 0x1400413e0
   1400052cc:	cmp    eax,0x2
   1400052cf:	jne    0x14000533a
   1400052d1:	lea    rcx,[rip+0x55050]        # 0x14005a328
   1400052d8:	mov    rax,QWORD PTR [rip+0x55049]        # 0x14005a328
   1400052df:	call   QWORD PTR [rax+0x18]
   1400052e2:	add    rax,0x18
   1400052e6:	mov    QWORD PTR [rsp+0x48],rax
   1400052eb:	test   rsi,rsi
   1400052ee:	je     0x14000530a
   1400052f0:	mov    rax,r12
   1400052f3:	inc    rax
   1400052f6:	cmp    WORD PTR [rsi+rax*2],r13w
   1400052fb:	jne    0x1400052f3
   1400052fd:	test   rax,rax
   140005300:	je     0x14000530a
   140005302:	mov    r8d,eax
   140005305:	mov    rdx,rsi
   140005308:	jmp    0x140005314
   14000530a:	xor    r8d,r8d
   14000530d:	lea    rdx,[rip+0x4021c]        # 0x140045530
   140005314:	lea    rcx,[rsp+0x48]
   140005319:	call   0x140006f54
   14000531e:	lea    rcx,[rdi+0x918]
   140005325:	lea    rdx,[rsp+0x48]
   14000532a:	call   0x140006c28
   14000532f:	nop
   140005330:	mov    rdx,QWORD PTR [rsp+0x48]
   140005335:	jmp    0x1400055cf
   14000533a:	mov    DWORD PTR [rsp+0x28],r12d
   14000533f:	mov    QWORD PTR [rsp+0x20],r14
   140005344:	mov    r9d,r12d
   140005347:	lea    r8,[rip+0x40882]        # 0x140045bd0
   14000534e:	mov    edx,ebx
   140005350:	mov    ecx,0x409
   140005355:	call   QWORD PTR [rip+0x3c085]        # 0x1400413e0
   14000535b:	cmp    eax,0x2
   14000535e:	jne    0x14000536b
   140005360:	mov    DWORD PTR [rdi+0x928],ebx
   140005366:	jmp    0x14000566f
   14000536b:	mov    DWORD PTR [rsp+0x28],r12d
   140005370:	mov    QWORD PTR [rsp+0x20],r14
   140005375:	mov    r9d,r12d
   140005378:	lea    r8,[rip+0x408a1]        # 0x140045c20
   14000537f:	mov    edx,ebx
   140005381:	mov    ecx,0x409
   140005386:	call   QWORD PTR [rip+0x3c054]        # 0x1400413e0
   14000538c:	cmp    eax,0x2
   14000538f:	jne    0x1400053fa
   140005391:	lea    rcx,[rip+0x54f90]        # 0x14005a328
   140005398:	mov    rax,QWORD PTR [rip+0x54f89]        # 0x14005a328
   14000539f:	call   QWORD PTR [rax+0x18]
   1400053a2:	add    rax,0x18
   1400053a6:	mov    QWORD PTR [rsp+0x30],rax
   1400053ab:	test   rsi,rsi
   1400053ae:	je     0x1400053ca
   1400053b0:	mov    rax,r12
   1400053b3:	inc    rax
   1400053b6:	cmp    WORD PTR [rsi+rax*2],r13w
   1400053bb:	jne    0x1400053b3
   1400053bd:	test   rax,rax
   1400053c0:	je     0x1400053ca
   1400053c2:	mov    r8d,eax
   1400053c5:	mov    rdx,rsi
   1400053c8:	jmp    0x1400053d4
   1400053ca:	xor    r8d,r8d
   1400053cd:	lea    rdx,[rip+0x4015c]        # 0x140045530
   1400053d4:	lea    rcx,[rsp+0x30]
   1400053d9:	call   0x140006f54
   1400053de:	lea    rcx,[rdi+0x940]
   1400053e5:	lea    rdx,[rsp+0x30]
   1400053ea:	call   0x140006c28
   1400053ef:	nop
   1400053f0:	mov    rdx,QWORD PTR [rsp+0x30]
   1400053f5:	jmp    0x1400055cf
   1400053fa:	mov    DWORD PTR [rsp+0x28],r12d
   1400053ff:	mov    QWORD PTR [rsp+0x20],r14
   140005404:	mov    r9d,r12d
   140005407:	lea    r8,[rip+0x407e2]        # 0x140045bf0
   14000540e:	mov    edx,ebx
   140005410:	mov    ecx,0x409
   140005415:	call   QWORD PTR [rip+0x3bfc5]        # 0x1400413e0
   14000541b:	cmp    eax,0x2
   14000541e:	jne    0x140005489
   140005420:	lea    rcx,[rip+0x54f01]        # 0x14005a328
   140005427:	mov    rax,QWORD PTR [rip+0x54efa]        # 0x14005a328
   14000542e:	call   QWORD PTR [rax+0x18]
   140005431:	add    rax,0x18
   140005435:	mov    QWORD PTR [rsp+0x40],rax
   14000543a:	test   rsi,rsi
   14000543d:	je     0x140005459
   14000543f:	mov    rax,r12
   140005442:	inc    rax
   140005445:	cmp    WORD PTR [rsi+rax*2],r13w
   14000544a:	jne    0x140005442
   14000544c:	test   rax,rax
   14000544f:	je     0x140005459
   140005451:	mov    r8d,eax
   140005454:	mov    rdx,rsi
   140005457:	jmp    0x140005463
   140005459:	xor    r8d,r8d
   14000545c:	lea    rdx,[rip+0x400cd]        # 0x140045530
   140005463:	lea    rcx,[rsp+0x40]
   140005468:	call   0x140006f54
   14000546d:	lea    rcx,[rdi+0x930]
   140005474:	lea    rdx,[rsp+0x40]
   140005479:	call   0x140006c28
   14000547e:	nop
   14000547f:	mov    rdx,QWORD PTR [rsp+0x40]
   140005484:	jmp    0x1400055cf
   140005489:	mov    DWORD PTR [rsp+0x28],r12d
   14000548e:	mov    QWORD PTR [rsp+0x20],r14
   140005493:	mov    r9d,r12d
   140005496:	lea    r8,[rip+0x4076b]        # 0x140045c08
   14000549d:	mov    edx,ebx
   14000549f:	mov    ecx,0x409
   1400054a4:	call   QWORD PTR [rip+0x3bf36]        # 0x1400413e0
   1400054aa:	cmp    eax,0x2
   1400054ad:	jne    0x1400054dd
   1400054af:	mov    BYTE PTR [rdi+0x6cc],bl
   1400054b5:	lea    r9,[rdi+0x6c8]
   1400054bc:	mov    DWORD PTR [rsp+0x20],0x1f4
   1400054c4:	lea    rdx,[rip+0x4073d]        # 0x140045c08
   1400054cb:	mov    r8,rsi
   1400054ce:	mov    rcx,rdi
   1400054d1:	call   0x140014a28
   1400054d6:	mov    ebx,eax
   1400054d8:	jmp    0x14000566f
   1400054dd:	mov    DWORD PTR [rsp+0x28],r12d
   1400054e2:	mov    QWORD PTR [rsp+0x20],r14
   1400054e7:	mov    r9d,r12d
   1400054ea:	lea    r8,[rip+0x4073f]        # 0x140045c30
   1400054f1:	mov    edx,ebx
   1400054f3:	mov    ecx,0x409
   1400054f8:	call   QWORD PTR [rip+0x3bee2]        # 0x1400413e0
   1400054fe:	cmp    eax,0x2
   140005501:	jne    0x140005541
   140005503:	test   rsi,rsi
   140005506:	je     0x140005526
   140005508:	mov    rax,r12
   14000550b:	inc    rax
   14000550e:	cmp    WORD PTR [rsi+rax*2],r13w
   140005513:	jne    0x14000550b
   140005515:	test   rax,rax
   140005518:	je     0x140005526
   14000551a:	lea    rcx,[rdi+0x950]
   140005521:	jmp    0x14000494e
   140005526:	lea    rcx,[rdi+0x950]
   14000552d:	xor    r8d,r8d
   140005530:	lea    rdx,[rip+0x3fff9]        # 0x140045530
   140005537:	call   0x140006f54
   14000553c:	jmp    0x14000566f
   140005541:	mov    DWORD PTR [rsp+0x28],r12d
   140005546:	mov    QWORD PTR [rsp+0x20],r14
   14000554b:	mov    r9d,r12d
   14000554e:	lea    r8,[rip+0x406eb]        # 0x140045c40
   140005555:	mov    edx,ebx
   140005557:	mov    ecx,0x409
   14000555c:	call   QWORD PTR [rip+0x3be7e]        # 0x1400413e0
   140005562:	cmp    eax,0x2
   140005565:	jne    0x1400055f1
   14000556b:	lea    rcx,[rip+0x54db6]        # 0x14005a328
   140005572:	mov    rax,QWORD PTR [rip+0x54daf]        # 0x14005a328
   140005579:	call   QWORD PTR [rax+0x18]
   14000557c:	add    rax,0x18
   140005580:	mov    QWORD PTR [rsp+0x50],rax
   140005585:	test   rsi,rsi
   140005588:	je     0x1400055a4
   14000558a:	mov    rax,r12
   14000558d:	inc    rax
   140005590:	cmp    WORD PTR [rsi+rax*2],r13w
   140005595:	jne    0x14000558d
   140005597:	test   rax,rax
   14000559a:	je     0x1400055a4
   14000559c:	mov    r8d,eax
   14000559f:	mov    rdx,rsi
   1400055a2:	jmp    0x1400055ae
   1400055a4:	xor    r8d,r8d
   1400055a7:	lea    rdx,[rip+0x3ff82]        # 0x140045530
   1400055ae:	lea    rcx,[rsp+0x50]
   1400055b3:	call   0x140006f54
   1400055b8:	lea    rcx,[rdi+0x958]
   1400055bf:	lea    rdx,[rsp+0x50]
   1400055c4:	call   0x140006c28
   1400055c9:	nop
   1400055ca:	mov    rdx,QWORD PTR [rsp+0x50]
   1400055cf:	add    rdx,0xffffffffffffffe8
   1400055d3:	mov    eax,r12d
   1400055d6:	lock xadd DWORD PTR [rdx+0x10],eax
   1400055db:	add    eax,r12d
   1400055de:	test   eax,eax
   1400055e0:	jg     0x14000566f
   1400055e6:	mov    rcx,QWORD PTR [rdx]
   1400055e9:	mov    rax,QWORD PTR [rcx]
   1400055ec:	call   QWORD PTR [rax+0x8]
   1400055ef:	jmp    0x14000566f
   1400055f1:	mov    rdx,r14
   1400055f4:	lea    rcx,[rip+0x40029]        # 0x140045624
   1400055fb:	call   0x140026fd8
   140005600:	test   eax,eax
   140005602:	jne    0x140005633
   140005604:	test   rsi,rsi
   140005607:	je     0x14000566f
   140005609:	mov    rax,r12
   14000560c:	inc    rax
   14000560f:	cmp    WORD PTR [rsi+rax*2],r13w
   140005614:	jne    0x14000560c
   140005616:	test   rax,rax
   140005619:	je     0x14000566f
   14000561b:	mov    rdx,rsi
   14000561e:	lea    rcx,[rip+0x403cb]        # 0x1400459f0
   140005625:	call   0x140026fd8
   14000562a:	test   eax,eax
   14000562c:	jne    0x14000566f
   14000562e:	mov    BYTE PTR [rdi+0x3c],bl
   140005631:	jmp    0x14000566f
   140005633:	mov    QWORD PTR [rsp+0x58],r15
   140005638:	lea    r8,[rsp+0x58]
   14000563d:	mov    ecx,0xe1230fad
   140005642:	call   0x140011d9c
   140005647:	mov    rbx,rax
   14000564a:	mov    r8,QWORD PTR [rdi]
   14000564d:	mov    rdx,rax
   140005650:	mov    rcx,rdi
   140005653:	call   QWORD PTR [r8+0x20]
   140005657:	mov    rcx,rbx
   14000565a:	call   QWORD PTR [rip+0x3bd68]        # 0x1400413c8
   140005660:	mov    ebx,r13d
   140005663:	jmp    0x14000566f
   140005665:	mov    rax,QWORD PTR [rdi]
   140005668:	mov    rcx,rdi
   14000566b:	call   QWORD PTR [rax+0x30]
   14000566e:	nop
   14000566f:	mov    rdx,QWORD PTR [rbp-0x68]
   140005673:	add    rdx,0xffffffffffffffe8
   140005677:	mov    ecx,r12d
   14000567a:	lock xadd DWORD PTR [rdx+0x10],ecx
   14000567f:	add    ecx,r12d
   140005682:	test   ecx,ecx
   140005684:	jg     0x140005690
   140005686:	mov    rcx,QWORD PTR [rdx]
   140005689:	mov    r8,QWORD PTR [rcx]
   14000568c:	call   QWORD PTR [r8+0x8]
   140005690:	mov    eax,ebx
   140005692:	mov    rcx,QWORD PTR [rbp+0x140]
   140005699:	xor    rcx,rsp
   14000569c:	call   0x1400265a0
   1400056a1:	mov    rbx,QWORD PTR [rsp+0x2a8]
   1400056a9:	add    rsp,0x250
   1400056b0:	pop    r15
   1400056b2:	pop    r14
   1400056b4:	pop    r13
   1400056b6:	pop    r12
   1400056b8:	pop    rdi
   1400056b9:	pop    rsi
   1400056ba:	pop    rbp
   1400056bb:	ret    
   1400056bc:	sub    rsp,0x28
   1400056c0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400056c4:	mov    QWORD PTR [rsp+0x30],rdx
   1400056c9:	lea    r9,[rsp+0x30]
   1400056ce:	mov    rax,QWORD PTR [rcx]
   1400056d1:	mov    edx,0xe1230517
   1400056d6:	mov    r8d,0x1
   1400056dc:	call   QWORD PTR [rax]
   1400056de:	xor    eax,eax
   1400056e0:	add    rsp,0x28
   1400056e4:	ret    
   1400056e5:	int3   
   1400056e6:	int3   
   1400056e7:	int3   
   1400056e8:	sub    rsp,0x28
   1400056ec:	mov    rcx,QWORD PTR [rcx+0x10]
   1400056f0:	mov    QWORD PTR [rsp+0x30],rdx
   1400056f5:	lea    r9,[rsp+0x30]
   1400056fa:	mov    rax,QWORD PTR [rcx]
   1400056fd:	mov    edx,0xe12303ed
   140005702:	mov    r8d,0x1
   140005708:	call   QWORD PTR [rax]
   14000570a:	xor    eax,eax
   14000570c:	add    rsp,0x28
   140005710:	ret    
   140005711:	int3   
   140005712:	int3   
   140005713:	int3   
   140005714:	sub    rsp,0x28
   140005718:	mov    rcx,QWORD PTR [rcx+0x10]
   14000571c:	mov    QWORD PTR [rsp+0x30],rdx
   140005721:	lea    r9,[rsp+0x30]
   140005726:	mov    r10,QWORD PTR [rcx]
   140005729:	mov    edx,0xa12308fc
   14000572e:	mov    r8d,0x1
   140005734:	call   QWORD PTR [r10]
   140005737:	mov    eax,0x1
   14000573c:	add    rsp,0x28
   140005740:	ret    
   140005741:	int3   
   140005742:	int3   
   140005743:	int3   
   140005744:	rex push rbx
   140005746:	sub    rsp,0x20
   14000574a:	mov    rbx,rcx
   14000574d:	mov    rcx,QWORD PTR [rcx+0x10]
   140005751:	xor    r9d,r9d
   140005754:	mov    rax,QWORD PTR [rcx]
   140005757:	xor    r8d,r8d
   14000575a:	mov    edx,0x61230ce4
   14000575f:	call   QWORD PTR [rax]
   140005761:	mov    rcx,QWORD PTR [rbx+0x10]
   140005765:	xor    r9d,r9d
   140005768:	mov    rax,QWORD PTR [rcx]
   14000576b:	xor    r8d,r8d
   14000576e:	mov    edx,0x61230d60
   140005773:	call   QWORD PTR [rax]
   140005775:	mov    rcx,QWORD PTR [rbx+0x10]
   140005779:	xor    r9d,r9d
   14000577c:	mov    rax,QWORD PTR [rcx]
   14000577f:	xor    r8d,r8d
   140005782:	mov    edx,0x61230d61
   140005787:	call   QWORD PTR [rax]
   140005789:	mov    rcx,QWORD PTR [rbx+0x10]
   14000578d:	xor    r9d,r9d
   140005790:	mov    rax,QWORD PTR [rcx]
   140005793:	xor    r8d,r8d
   140005796:	mov    edx,0x61230d62
   14000579b:	call   QWORD PTR [rax]
   14000579d:	mov    rcx,QWORD PTR [rbx+0x10]
   1400057a1:	xor    r9d,r9d
   1400057a4:	mov    rax,QWORD PTR [rcx]
   1400057a7:	xor    r8d,r8d
   1400057aa:	mov    edx,0x61230d63
   1400057af:	call   QWORD PTR [rax]
   1400057b1:	mov    rcx,QWORD PTR [rbx+0x10]
   1400057b5:	xor    r9d,r9d
   1400057b8:	mov    rax,QWORD PTR [rcx]
   1400057bb:	xor    r8d,r8d
   1400057be:	mov    edx,0x61230d64
   1400057c3:	call   QWORD PTR [rax]
   1400057c5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400057c9:	xor    r9d,r9d
   1400057cc:	mov    rax,QWORD PTR [rcx]
   1400057cf:	xor    r8d,r8d
   1400057d2:	mov    edx,0x61230d65
   1400057d7:	call   QWORD PTR [rax]
   1400057d9:	mov    rcx,QWORD PTR [rbx+0x10]
   1400057dd:	xor    r9d,r9d
   1400057e0:	mov    rax,QWORD PTR [rcx]
   1400057e3:	xor    r8d,r8d
   1400057e6:	mov    edx,0x61230d66
   1400057eb:	call   QWORD PTR [rax]
   1400057ed:	mov    rcx,QWORD PTR [rbx+0x10]
   1400057f1:	xor    r9d,r9d
   1400057f4:	mov    rax,QWORD PTR [rcx]
   1400057f7:	xor    r8d,r8d
   1400057fa:	mov    edx,0x61230d67
   1400057ff:	call   QWORD PTR [rax]
   140005801:	mov    rcx,QWORD PTR [rbx+0x10]
   140005805:	xor    r9d,r9d
   140005808:	mov    rax,QWORD PTR [rcx]
   14000580b:	xor    r8d,r8d
   14000580e:	mov    edx,0x61230d68
   140005813:	call   QWORD PTR [rax]
   140005815:	mov    rcx,QWORD PTR [rbx+0x10]
   140005819:	xor    r9d,r9d
   14000581c:	mov    rax,QWORD PTR [rcx]
   14000581f:	xor    r8d,r8d
   140005822:	mov    edx,0x61230d69
   140005827:	call   QWORD PTR [rax]
   140005829:	mov    rcx,QWORD PTR [rbx+0x10]
   14000582d:	xor    r9d,r9d
   140005830:	mov    rax,QWORD PTR [rcx]
   140005833:	xor    r8d,r8d
   140005836:	mov    edx,0x61230d6a
   14000583b:	call   QWORD PTR [rax]
   14000583d:	mov    rcx,QWORD PTR [rbx+0x10]
   140005841:	xor    r9d,r9d
   140005844:	mov    rax,QWORD PTR [rcx]
   140005847:	xor    r8d,r8d
   14000584a:	mov    edx,0x61230d6b
   14000584f:	call   QWORD PTR [rax]
   140005851:	mov    rcx,QWORD PTR [rbx+0x10]
   140005855:	mov    rax,QWORD PTR [rcx]
   140005858:	xor    r9d,r9d
   14000585b:	xor    r8d,r8d
   14000585e:	mov    edx,0x61230d6c
   140005863:	call   QWORD PTR [rax]
   140005865:	mov    rcx,QWORD PTR [rbx+0x10]
   140005869:	xor    r9d,r9d
   14000586c:	mov    rax,QWORD PTR [rcx]
   14000586f:	xor    r8d,r8d
   140005872:	mov    edx,0x61230d6d
   140005877:	call   QWORD PTR [rax]
   140005879:	mov    rcx,QWORD PTR [rbx+0x10]
   14000587d:	xor    r9d,r9d
   140005880:	mov    rax,QWORD PTR [rcx]
   140005883:	xor    r8d,r8d
   140005886:	mov    edx,0x61230d6e
   14000588b:	call   QWORD PTR [rax]
   14000588d:	mov    rcx,QWORD PTR [rbx+0x10]
   140005891:	xor    r9d,r9d
   140005894:	mov    rax,QWORD PTR [rcx]
   140005897:	xor    r8d,r8d
   14000589a:	mov    edx,0x61230d6f
   14000589f:	call   QWORD PTR [rax]
   1400058a1:	mov    rcx,QWORD PTR [rbx+0x10]
   1400058a5:	xor    r9d,r9d
   1400058a8:	mov    rax,QWORD PTR [rcx]
   1400058ab:	xor    r8d,r8d
   1400058ae:	mov    edx,0x61230d70
   1400058b3:	call   QWORD PTR [rax]
   1400058b5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400058b9:	xor    r9d,r9d
   1400058bc:	mov    rax,QWORD PTR [rcx]
   1400058bf:	xor    r8d,r8d
   1400058c2:	mov    edx,0x61230d71
   1400058c7:	call   QWORD PTR [rax]
   1400058c9:	mov    rcx,QWORD PTR [rbx+0x10]
   1400058cd:	xor    r9d,r9d
   1400058d0:	mov    rax,QWORD PTR [rcx]
   1400058d3:	xor    r8d,r8d
   1400058d6:	mov    edx,0x61230d72
   1400058db:	call   QWORD PTR [rax]
   1400058dd:	mov    rcx,QWORD PTR [rbx+0x10]
   1400058e1:	xor    r9d,r9d
   1400058e4:	mov    rax,QWORD PTR [rcx]
   1400058e7:	xor    r8d,r8d
   1400058ea:	mov    edx,0x61230d73
   1400058ef:	call   QWORD PTR [rax]
   1400058f1:	mov    rcx,QWORD PTR [rbx+0x10]
   1400058f5:	xor    r9d,r9d
   1400058f8:	mov    rax,QWORD PTR [rcx]
   1400058fb:	xor    r8d,r8d
   1400058fe:	mov    edx,0x61230d74
   140005903:	call   QWORD PTR [rax]
   140005905:	mov    rcx,QWORD PTR [rbx+0x10]
   140005909:	xor    r9d,r9d
   14000590c:	mov    rax,QWORD PTR [rcx]
   14000590f:	xor    r8d,r8d
   140005912:	mov    edx,0x61230d75
   140005917:	call   QWORD PTR [rax]
   140005919:	mov    rcx,QWORD PTR [rbx+0x10]
   14000591d:	xor    r9d,r9d
   140005920:	mov    rax,QWORD PTR [rcx]
   140005923:	xor    r8d,r8d
   140005926:	mov    edx,0x61230d76
   14000592b:	call   QWORD PTR [rax]
   14000592d:	mov    rcx,QWORD PTR [rbx+0x10]
   140005931:	xor    r9d,r9d
   140005934:	mov    rax,QWORD PTR [rcx]
   140005937:	xor    r8d,r8d
   14000593a:	mov    edx,0x61230d77
   14000593f:	call   QWORD PTR [rax]
   140005941:	mov    rcx,QWORD PTR [rbx+0x10]
   140005945:	xor    r9d,r9d
   140005948:	mov    rax,QWORD PTR [rcx]
   14000594b:	xor    r8d,r8d
   14000594e:	mov    edx,0x61230d78
   140005953:	call   QWORD PTR [rax]
   140005955:	mov    rcx,QWORD PTR [rbx+0x10]
   140005959:	xor    r9d,r9d
   14000595c:	mov    rax,QWORD PTR [rcx]
   14000595f:	xor    r8d,r8d
   140005962:	mov    edx,0x61230d79
   140005967:	call   QWORD PTR [rax]
   140005969:	mov    rcx,QWORD PTR [rbx+0x10]
   14000596d:	xor    r9d,r9d
   140005970:	mov    rax,QWORD PTR [rcx]
   140005973:	xor    r8d,r8d
   140005976:	mov    edx,0x61230d7a
   14000597b:	call   QWORD PTR [rax]
   14000597d:	mov    rcx,QWORD PTR [rbx+0x10]
   140005981:	xor    r9d,r9d
   140005984:	mov    rax,QWORD PTR [rcx]
   140005987:	xor    r8d,r8d
   14000598a:	mov    edx,0x61230d7b
   14000598f:	call   QWORD PTR [rax]
   140005991:	mov    rcx,QWORD PTR [rbx+0x10]
   140005995:	xor    r9d,r9d
   140005998:	mov    rax,QWORD PTR [rcx]
   14000599b:	xor    r8d,r8d
   14000599e:	mov    edx,0x61230d7c
   1400059a3:	call   QWORD PTR [rax]
   1400059a5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400059a9:	xor    r9d,r9d
   1400059ac:	mov    rax,QWORD PTR [rcx]
   1400059af:	xor    r8d,r8d
   1400059b2:	mov    edx,0x61230d7d
   1400059b7:	call   QWORD PTR [rax]
   1400059b9:	mov    rcx,QWORD PTR [rbx+0x10]
   1400059bd:	xor    r9d,r9d
   1400059c0:	mov    rax,QWORD PTR [rcx]
   1400059c3:	xor    r8d,r8d
   1400059c6:	mov    edx,0x61230d7e
   1400059cb:	call   QWORD PTR [rax]
   1400059cd:	mov    rcx,QWORD PTR [rbx+0x10]
   1400059d1:	xor    r9d,r9d
   1400059d4:	mov    rax,QWORD PTR [rcx]
   1400059d7:	xor    r8d,r8d
   1400059da:	mov    edx,0x61230d7f
   1400059df:	call   QWORD PTR [rax]
   1400059e1:	mov    rcx,QWORD PTR [rbx+0x10]
   1400059e5:	xor    r9d,r9d
   1400059e8:	mov    rax,QWORD PTR [rcx]
   1400059eb:	xor    r8d,r8d
   1400059ee:	mov    edx,0x61230d80
   1400059f3:	call   QWORD PTR [rax]
   1400059f5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400059f9:	xor    r9d,r9d
   1400059fc:	mov    rax,QWORD PTR [rcx]
   1400059ff:	xor    r8d,r8d
   140005a02:	mov    edx,0x61230d54
   140005a07:	call   QWORD PTR [rax]
   140005a09:	mov    rcx,QWORD PTR [rbx+0x10]
   140005a0d:	xor    r9d,r9d
   140005a10:	mov    rax,QWORD PTR [rcx]
   140005a13:	xor    r8d,r8d
   140005a16:	mov    edx,0x61230d55
   140005a1b:	call   QWORD PTR [rax]
   140005a1d:	mov    rcx,QWORD PTR [rbx+0x10]
   140005a21:	xor    r9d,r9d
   140005a24:	mov    rax,QWORD PTR [rcx]
   140005a27:	xor    r8d,r8d
   140005a2a:	mov    edx,0x61230d56
   140005a2f:	call   QWORD PTR [rax]
   140005a31:	mov    rcx,QWORD PTR [rbx+0x10]
   140005a35:	xor    r9d,r9d
   140005a38:	mov    rax,QWORD PTR [rcx]
   140005a3b:	xor    r8d,r8d
   140005a3e:	mov    edx,0x61230d57
   140005a43:	call   QWORD PTR [rax]
   140005a45:	mov    rcx,QWORD PTR [rbx+0x10]
   140005a49:	xor    r9d,r9d
   140005a4c:	mov    rax,QWORD PTR [rcx]
   140005a4f:	xor    r8d,r8d
   140005a52:	mov    edx,0x61230d58
   140005a57:	call   QWORD PTR [rax]
   140005a59:	mov    rcx,QWORD PTR [rbx+0x10]
   140005a5d:	xor    r9d,r9d
   140005a60:	mov    rax,QWORD PTR [rcx]
   140005a63:	xor    r8d,r8d
   140005a66:	mov    edx,0x61230d59
   140005a6b:	call   QWORD PTR [rax]
   140005a6d:	mov    rcx,QWORD PTR [rbx+0x10]
   140005a71:	mov    rax,QWORD PTR [rcx]
   140005a74:	xor    r9d,r9d
   140005a77:	xor    r8d,r8d
   140005a7a:	mov    edx,0x61230d5a
   140005a7f:	call   QWORD PTR [rax]
   140005a81:	mov    rcx,QWORD PTR [rbx+0x10]
   140005a85:	xor    r9d,r9d
   140005a88:	mov    rax,QWORD PTR [rcx]
   140005a8b:	xor    r8d,r8d
   140005a8e:	mov    edx,0x61230d5b
   140005a93:	call   QWORD PTR [rax]
   140005a95:	mov    rcx,QWORD PTR [rbx+0x10]
   140005a99:	xor    r9d,r9d
   140005a9c:	mov    rax,QWORD PTR [rcx]
   140005a9f:	xor    r8d,r8d
   140005aa2:	mov    edx,0x61230d5c
   140005aa7:	call   QWORD PTR [rax]
   140005aa9:	mov    rcx,QWORD PTR [rbx+0x10]
   140005aad:	xor    r9d,r9d
   140005ab0:	mov    rax,QWORD PTR [rcx]
   140005ab3:	xor    r8d,r8d
   140005ab6:	mov    edx,0x61230d5d
   140005abb:	call   QWORD PTR [rax]
   140005abd:	mov    rcx,QWORD PTR [rbx+0x10]
   140005ac1:	xor    r9d,r9d
   140005ac4:	mov    rax,QWORD PTR [rcx]
   140005ac7:	xor    r8d,r8d
   140005aca:	mov    edx,0x61230d5e
   140005acf:	call   QWORD PTR [rax]
   140005ad1:	mov    rcx,QWORD PTR [rbx+0x10]
   140005ad5:	xor    r9d,r9d
   140005ad8:	mov    rax,QWORD PTR [rcx]
   140005adb:	xor    r8d,r8d
   140005ade:	mov    edx,0x61230d5f
   140005ae3:	add    rsp,0x20
   140005ae7:	pop    rbx
   140005ae8:	rex.W jmp QWORD PTR [rax]
   140005aeb:	int3   
   140005aec:	sub    rsp,0x28
   140005af0:	mov    rcx,QWORD PTR [rcx+0x10]
   140005af4:	xor    r9d,r9d
   140005af7:	xor    r8d,r8d
   140005afa:	mov    rax,QWORD PTR [rcx]
   140005afd:	mov    edx,0x61230ce4
   140005b02:	call   QWORD PTR [rax]
   140005b04:	xor    eax,eax
   140005b06:	add    rsp,0x28
   140005b0a:	ret    
   140005b0b:	int3   
   140005b0c:	mov    r11,rsp
   140005b0f:	mov    QWORD PTR [r11+0x8],rbx
   140005b13:	mov    QWORD PTR [r11+0x10],rsi
   140005b17:	push   rdi
   140005b18:	sub    rsp,0x30
   140005b1c:	or     r9d,0xffffffff
   140005b20:	lea    rax,[rip+0x40051]        # 0x140045b78
   140005b27:	lea    r8,[rcx+0x8d6]
   140005b2e:	lea    esi,[r9+0x2]
   140005b32:	mov    rbx,rcx
   140005b35:	mov    DWORD PTR [r11-0x10],r9d
   140005b39:	mov    ecx,0x409
   140005b3e:	mov    edx,esi
   140005b40:	mov    QWORD PTR [r11-0x18],rax
   140005b44:	call   QWORD PTR [rip+0x3b896]        # 0x1400413e0
   140005b4a:	cmp    eax,0x2
   140005b4d:	jne    0x140005bd4
   140005b53:	mov    eax,DWORD PTR [rip+0x56f73]        # 0x14005cacc
   140005b59:	xor    edi,edi
   140005b5b:	test   eax,eax
   140005b5d:	jne    0x140005b6c
   140005b5f:	call   0x140012b10
   140005b64:	mov    eax,esi
   140005b66:	mov    DWORD PTR [rip+0x56f60],eax        # 0x14005cacc
   140005b6c:	mov    ecx,DWORD PTR [rip+0x56f62]        # 0x14005cad4
   140005b72:	cmp    ecx,0x6
   140005b75:	ja     0x140005bab
   140005b77:	test   eax,eax
   140005b79:	jne    0x140005b8e
   140005b7b:	call   0x140012b10
   140005b80:	mov    ecx,DWORD PTR [rip+0x56f4e]        # 0x14005cad4
   140005b86:	mov    eax,esi
   140005b88:	mov    DWORD PTR [rip+0x56f3e],eax        # 0x14005cacc
   140005b8e:	cmp    ecx,0x6
   140005b91:	jne    0x140005bd4
   140005b93:	test   eax,eax
   140005b95:	jne    0x140005ba2
   140005b97:	call   0x140012b10
   140005b9c:	mov    DWORD PTR [rip+0x56f2a],esi        # 0x14005cacc
   140005ba2:	cmp    DWORD PTR [rip+0x56f2f],0x2        # 0x14005cad8
   140005ba9:	jb     0x140005bd4
   140005bab:	cmp    WORD PTR [rbx+0x462],di
   140005bb2:	je     0x140005bd4
   140005bb4:	cmp    DWORD PTR [rbx+0x6c4],edi
   140005bba:	jne    0x140005bd4
   140005bbc:	mov    rcx,QWORD PTR [rbx+0x10]
   140005bc0:	xor    r9d,r9d
   140005bc3:	xor    r8d,r8d
   140005bc6:	mov    rax,QWORD PTR [rcx]
   140005bc9:	mov    edx,0xe12305ff
   140005bce:	call   QWORD PTR [rax]
   140005bd0:	xor    eax,eax
   140005bd2:	jmp    0x140005bd6
   140005bd4:	mov    eax,esi
   140005bd6:	mov    rbx,QWORD PTR [rsp+0x40]
   140005bdb:	mov    rsi,QWORD PTR [rsp+0x48]
   140005be0:	add    rsp,0x30
   140005be4:	pop    rdi
   140005be5:	ret    
   140005be6:	int3   
   140005be7:	int3   
   140005be8:	rex push rbp
   140005bea:	push   rbx
   140005beb:	push   rsi
   140005bec:	push   rdi
   140005bed:	push   r12
   140005bef:	push   r13
   140005bf1:	push   r14
   140005bf3:	push   r15
   140005bf5:	lea    rbp,[rsp-0x78]
   140005bfa:	sub    rsp,0x178
   140005c01:	mov    QWORD PTR [rbp+0x68],0xfffffffffffffffe
   140005c09:	mov    rbx,rcx
   140005c0c:	mov    r12d,0x1
   140005c12:	cmp    DWORD PTR [rcx+0x44],r12d
   140005c16:	jne    0x140005c2c
   140005c18:	mov    rcx,QWORD PTR [rcx+0x10]
   140005c1c:	xor    r9d,r9d
   140005c1f:	xor    r8d,r8d
   140005c22:	mov    edx,0xe12305b1
   140005c27:	jmp    0x1400064ca
   140005c2c:	lea    r14,[rcx+0x8d6]
   140005c33:	movzx  r9d,WORD PTR [r14]
   140005c37:	xor    edi,edi
   140005c39:	cmp    WORD PTR [rcx+0x6ce],di
   140005c40:	setne  cl
   140005c43:	test   r9w,r9w
   140005c47:	setne  al
   140005c4a:	cmp    al,cl
   140005c4c:	je     0x140005c87
   140005c4e:	lea    rdx,[rip+0x3feb3]        # 0x140045b08
   140005c55:	lea    r8,[rip+0x3fdcc]        # 0x140045a28
   140005c5c:	mov    rax,r8
   140005c5f:	test   r9w,r9w
   140005c63:	cmovne rax,rdx
   140005c67:	mov    QWORD PTR [rbp+0x10],rax
   140005c6b:	cmovne rdx,r8
   140005c6f:	mov    QWORD PTR [rbp+0x18],rdx
   140005c73:	lea    r9,[rbp+0x10]
   140005c77:	mov    edx,0xe123051f
   140005c7c:	mov    r8d,0x2
   140005c82:	jmp    0x1400064c6
   140005c87:	mov    r8b,BYTE PTR [rbx+0x45c]
   140005c8e:	lea    rax,[rip+0x3fe33]        # 0x140045ac8
   140005c95:	lea    r15,[rip+0x3fdcc]        # 0x140045a68
   140005c9c:	lea    rsi,[rip+0x3fca5]        # 0x140045948
   140005ca3:	lea    r13,[rip+0x3fcb6]        # 0x140045960
   140005caa:	mov    r11d,0x99999999
   140005cb0:	test   r8b,r8b
   140005cb3:	jne    0x140005ccb
   140005cb5:	cmp    BYTE PTR [rbx+0x45d],dil
   140005cbc:	jne    0x140005ccb
   140005cbe:	cmp    WORD PTR [rbx+0x462],di
   140005cc5:	je     0x140005e96
   140005ccb:	mov    rcx,rdi
   140005cce:	mov    rdx,rax
   140005cd1:	test   r8b,r8b
   140005cd4:	cmove  rdx,rdi
   140005cd8:	cmp    BYTE PTR [rbx+0x45d],dil
   140005cdf:	je     0x140005cf6
   140005ce1:	test   rdx,rdx
   140005ce4:	jne    0x140005cef
   140005ce6:	lea    rdx,[rip+0x3fdeb]        # 0x140045ad8
   140005ced:	jmp    0x140005cf6
   140005cef:	lea    rcx,[rip+0x3fde2]        # 0x140045ad8
   140005cf6:	movzx  r10d,WORD PTR [rbx+0x462]
   140005cfe:	test   r10w,r10w
   140005d02:	je     0x140005d11
   140005d04:	test   rdx,rdx
   140005d07:	jne    0x140005d0e
   140005d09:	mov    rdx,r15
   140005d0c:	jmp    0x140005d11
   140005d0e:	mov    rcx,r15
   140005d11:	test   r9w,r9w
   140005d15:	jne    0x140005d2b
   140005d17:	mov    rax,rsi
   140005d1a:	cmp    DWORD PTR [rbx+0x18],edi
   140005d1d:	cmove  rax,rcx
   140005d21:	mov    rcx,r13
   140005d24:	cmp    DWORD PTR [rbx+0x1c],edi
   140005d27:	cmove  rcx,rax
   140005d2b:	lea    rax,[rip+0x3fc46]        # 0x140045978
   140005d32:	cmp    DWORD PTR [rbx+0x20],r11d
   140005d36:	cmove  rax,rcx
   140005d3a:	lea    rcx,[rip+0x3fc4f]        # 0x140045990
   140005d41:	cmp    DWORD PTR [rbx+0x24],r11d
   140005d45:	cmove  rcx,rax
   140005d49:	lea    rax,[rip+0x3fc58]        # 0x1400459a8
   140005d50:	cmp    DWORD PTR [rbx+0x28],r11d
   140005d54:	cmove  rax,rcx
   140005d58:	lea    rcx,[rip+0x3fc61]        # 0x1400459c0
   140005d5f:	cmp    DWORD PTR [rbx+0x2c],r11d
   140005d63:	cmove  rcx,rax
   140005d67:	lea    rax,[rip+0x3fcca]        # 0x140045a38
   140005d6e:	cmp    BYTE PTR [rbx+0x458],dil
   140005d75:	cmove  rax,rcx
   140005d79:	lea    r9,[rip+0x3fcc8]        # 0x140045a48
   140005d80:	cmp    DWORD PTR [rbx+0x40],edi
   140005d83:	cmove  r9,rax
   140005d87:	test   r9,r9
   140005d8a:	je     0x140005da2
   140005d8c:	mov    QWORD PTR [rbp-0x60],rdx
   140005d90:	mov    QWORD PTR [rbp-0x58],r9
   140005d94:	lea    r9,[rbp-0x60]
   140005d98:	mov    edx,0xe1230518
   140005d9d:	jmp    0x140005c7c
   140005da2:	test   r10w,r10w
   140005da6:	jne    0x140005db1
   140005da8:	test   r8b,r8b
   140005dab:	je     0x140005e3a
   140005db1:	lea    rcx,[rip+0x3ff00]        # 0x140045cb8
   140005db8:	call   QWORD PTR [rip+0x3b5d2]        # 0x140041390
   140005dbe:	test   rax,rax
   140005dc1:	je     0x140005dd3
   140005dc3:	xor    r9d,r9d
   140005dc6:	xor    r8d,r8d
   140005dc9:	mov    edx,0xe12305af
   140005dce:	jmp    0x1400064c6
   140005dd3:	cmp    BYTE PTR [rbx+0x45e],dil
   140005dda:	je     0x140005df8
   140005ddc:	cmp    DWORD PTR [rbx+0x6b8],0xc350
   140005de6:	jae    0x140005df8
   140005de8:	xor    r9d,r9d
   140005deb:	xor    r8d,r8d
   140005dee:	mov    edx,0xe1230519
   140005df3:	jmp    0x1400064c6
   140005df8:	cmp    BYTE PTR [rbx+0x45f],dil
   140005dff:	je     0x140005e19
   140005e01:	cmp    DWORD PTR [rbx+0x6bc],edi
   140005e07:	ja     0x140005e19
   140005e09:	xor    r9d,r9d
   140005e0c:	xor    r8d,r8d
   140005e0f:	mov    edx,0xe123051b
   140005e14:	jmp    0x1400064c6
   140005e19:	cmp    BYTE PTR [rbx+0x460],dil
   140005e20:	je     0x140005e3a
   140005e22:	cmp    DWORD PTR [rbx+0x6c0],edi
   140005e28:	ja     0x140005e3a
   140005e2a:	xor    r9d,r9d
   140005e2d:	xor    r8d,r8d
   140005e30:	mov    edx,0xe123051c
   140005e35:	jmp    0x1400064c6
   140005e3a:	cmp    DWORD PTR [rip+0x56c8c],edi        # 0x14005cacc
   140005e40:	jne    0x140005e4e
   140005e42:	call   0x140012b10
   140005e47:	mov    DWORD PTR [rip+0x56c7e],r12d        # 0x14005cacc
   140005e4e:	cmp    BYTE PTR [rbx+0x460],dil
   140005e55:	je     0x140005e76
   140005e57:	lea    rax,[rip+0x3fc92]        # 0x140045af0
   140005e5e:	mov    QWORD PTR [rbp+0xc8],rax
   140005e65:	lea    r9,[rbp+0xc8]
   140005e6c:	mov    edx,0xe12305c2
   140005e71:	jmp    0x1400064c3
   140005e76:	cmp    BYTE PTR [rbx+0x45f],dil
   140005e7d:	je     0x140005e96
   140005e7f:	lea    rax,[rip+0x3fc62]        # 0x140045ae8
   140005e86:	mov    QWORD PTR [rbp+0xd0],rax
   140005e8d:	lea    r9,[rbp+0xd0]
   140005e94:	jmp    0x140005e6c
   140005e96:	movzx  eax,WORD PTR [rbx+0x462]
   140005e9d:	test   ax,ax
   140005ea0:	jne    0x140005eea
   140005ea2:	cmp    DWORD PTR [rbx+0x6c4],edi
   140005ea8:	je     0x140005ec9
   140005eaa:	lea    rax,[rip+0x3fc67]        # 0x140045b18
   140005eb1:	mov    QWORD PTR [rbp+0xd8],rax
   140005eb8:	lea    r9,[rbp+0xd8]
   140005ebf:	mov    edx,0xe1230524
   140005ec4:	jmp    0x1400064c3
   140005ec9:	test   ax,ax
   140005ecc:	jne    0x140005eea
   140005ece:	cmp    BYTE PTR [rbx+0x459],dil
   140005ed5:	je     0x140005eea
   140005ed7:	lea    rax,[rip+0x3fbba]        # 0x140045a98
   140005ede:	mov    QWORD PTR [rsp+0x50],rax
   140005ee3:	lea    r9,[rsp+0x50]
   140005ee8:	jmp    0x140005ebf
   140005eea:	cmp    BYTE PTR [rbx+0x45c],dil
   140005ef1:	jne    0x140005f54
   140005ef3:	test   ax,ax
   140005ef6:	jne    0x140005f54
   140005ef8:	cmp    BYTE PTR [rbx+0x45e],dil
   140005eff:	je     0x140005f1c
   140005f01:	lea    rax,[rip+0x3fbf0]        # 0x140045af8
   140005f08:	mov    QWORD PTR [rsp+0x40],rax
   140005f0d:	lea    r9,[rsp+0x40]
   140005f12:	mov    edx,0xe123051e
   140005f17:	jmp    0x1400064c3
   140005f1c:	cmp    BYTE PTR [rbx+0x460],dil
   140005f23:	je     0x140005f38
   140005f25:	lea    rax,[rip+0x3fbc4]        # 0x140045af0
   140005f2c:	mov    QWORD PTR [rsp+0x60],rax
   140005f31:	lea    r9,[rsp+0x60]
   140005f36:	jmp    0x140005f12
   140005f38:	cmp    BYTE PTR [rbx+0x45f],dil
   140005f3f:	je     0x140005f54
   140005f41:	lea    rax,[rip+0x3fba0]        # 0x140045ae8
   140005f48:	mov    QWORD PTR [rsp+0x30],rax
   140005f4d:	lea    r9,[rsp+0x30]
   140005f52:	jmp    0x140005f12
   140005f54:	mov    esi,0x2
   140005f59:	or     r13d,0xffffffff
   140005f5d:	lea    rax,[rip+0x3fbec]        # 0x140045b50
   140005f64:	cmp    WORD PTR [r14],di
   140005f68:	je     0x1400060d0
   140005f6e:	mov    DWORD PTR [rsp+0x28],r13d
   140005f73:	mov    QWORD PTR [rsp+0x20],rax
   140005f78:	mov    r9d,r13d
   140005f7b:	mov    r8,r14
   140005f7e:	mov    edx,r12d
   140005f81:	mov    ecx,0x409
   140005f86:	call   QWORD PTR [rip+0x3b454]        # 0x1400413e0
   140005f8c:	lea    rcx,[rip+0x3fbcd]        # 0x140045b60
   140005f93:	cmp    eax,esi
   140005f95:	je     0x14000602a
   140005f9b:	mov    DWORD PTR [rsp+0x28],r13d
   140005fa0:	mov    QWORD PTR [rsp+0x20],rcx
   140005fa5:	mov    r9d,r13d
   140005fa8:	mov    r8,r14
   140005fab:	mov    edx,r12d
   140005fae:	mov    ecx,0x409
   140005fb3:	call   QWORD PTR [rip+0x3b427]        # 0x1400413e0
   140005fb9:	cmp    eax,esi
   140005fbb:	je     0x140006023
   140005fbd:	mov    DWORD PTR [rsp+0x28],r13d
   140005fc2:	lea    rax,[rip+0x3fbaf]        # 0x140045b78
   140005fc9:	mov    QWORD PTR [rsp+0x20],rax
   140005fce:	mov    r9d,r13d
   140005fd1:	mov    r8,r14
   140005fd4:	mov    edx,r12d
   140005fd7:	mov    ecx,0x409
   140005fdc:	call   QWORD PTR [rip+0x3b3fe]        # 0x1400413e0
   140005fe2:	cmp    eax,esi
   140005fe4:	je     0x140006023
   140005fe6:	mov    DWORD PTR [rsp+0x28],r13d
   140005feb:	lea    rax,[rip+0x3fb96]        # 0x140045b88
   140005ff2:	mov    QWORD PTR [rsp+0x20],rax
   140005ff7:	mov    r9d,r13d
   140005ffa:	mov    r8,r14
   140005ffd:	mov    edx,r12d
   140006000:	mov    ecx,0x409
   140006005:	call   QWORD PTR [rip+0x3b3d5]        # 0x1400413e0
   14000600b:	cmp    eax,esi
   14000600d:	je     0x140006023
   14000600f:	mov    QWORD PTR [rsp+0x38],r14
   140006014:	lea    r9,[rsp+0x38]
   140006019:	mov    edx,0xe1230571
   14000601e:	jmp    0x1400064c3
   140006023:	lea    rcx,[rip+0x3fb36]        # 0x140045b60
   14000602a:	cmp    WORD PTR [rbx+0x4c],di
   14000602e:	je     0x14000606d
   140006030:	mov    DWORD PTR [rsp+0x28],r13d
   140006035:	mov    QWORD PTR [rsp+0x20],rcx
   14000603a:	mov    r9d,r13d
   14000603d:	mov    r8,r14
   140006040:	mov    edx,r12d
   140006043:	mov    ecx,0x409
   140006048:	call   QWORD PTR [rip+0x3b392]        # 0x1400413e0
   14000604e:	cmp    eax,esi
   140006050:	je     0x14000606d
   140006052:	lea    rax,[rip+0x3fb4b]        # 0x140045ba4
   140006059:	mov    QWORD PTR [rsp+0x48],rax
   14000605e:	lea    r9,[rsp+0x48]
   140006063:	mov    edx,0xe12306a8
   140006068:	jmp    0x1400064c3
   14000606d:	cmp    BYTE PTR [rbx+0x6cc],dil
   140006074:	je     0x1400060d0
   140006076:	cmp    DWORD PTR [rbx+0x938],edi
   14000607c:	jne    0x1400060a8
   14000607e:	lea    rax,[rip+0x3fb6b]        # 0x140045bf0
   140006085:	mov    QWORD PTR [rsp+0x70],rax
   14000608a:	lea    rax,[rip+0x3fb77]        # 0x140045c08
   140006091:	mov    QWORD PTR [rsp+0x78],rax
   140006096:	lea    r9,[rsp+0x70]
   14000609b:	mov    r8d,esi
   14000609e:	mov    edx,0xe123051f
   1400060a3:	jmp    0x1400064c6
   1400060a8:	mov    eax,DWORD PTR [rbx+0x6c8]
   1400060ae:	test   eax,eax
   1400060b0:	je     0x1400060d0
   1400060b2:	mov    r8d,0x1f4
   1400060b8:	cmp    eax,r8d
   1400060bb:	jae    0x1400060d0
   1400060bd:	mov    edx,0xe12305e5
   1400060c2:	mov    rcx,QWORD PTR [rbx+0x10]
   1400060c6:	call   0x1400041e0
   1400060cb:	jmp    0x1400064cf
   1400060d0:	call   0x140004250
   1400060d5:	test   eax,eax
   1400060d7:	je     0x1400060fd
   1400060d9:	cmp    DWORD PTR [rbx+0x928],edi
   1400060df:	jne    0x1400060ed
   1400060e1:	cmp    DWORD PTR [rbx+0x920],edi
   1400060e7:	jle    0x14000623d
   1400060ed:	xor    r9d,r9d
   1400060f0:	xor    r8d,r8d
   1400060f3:	mov    edx,0xe12305c6
   1400060f8:	jmp    0x1400064c6
   1400060fd:	cmp    DWORD PTR [rbx+0x920],edi
   140006103:	jle    0x14000623d
   140006109:	cmp    WORD PTR [r14],di
   14000610d:	je     0x14000613c
   14000610f:	mov    DWORD PTR [rsp+0x28],r13d
   140006114:	lea    rax,[rip+0x3fa35]        # 0x140045b50
   14000611b:	mov    QWORD PTR [rsp+0x20],rax
   140006120:	mov    r9d,r13d
   140006123:	mov    r8,r14
   140006126:	mov    edx,r12d
   140006129:	mov    ecx,0x409
   14000612e:	call   QWORD PTR [rip+0x3b2ac]        # 0x1400413e0
   140006134:	cmp    eax,esi
   140006136:	je     0x14000623d
   14000613c:	mov    r8b,BYTE PTR [rbx+0x45c]
   140006143:	test   r8b,r8b
   140006146:	jne    0x140006206
   14000614c:	cmp    WORD PTR [rbx+0x462],di
   140006153:	jne    0x140006206
   140006159:	lea    rdx,[rip+0x3f8c8]        # 0x140045a28
   140006160:	lea    rcx,[rbp+0xc0]
   140006167:	call   0x140006b8c
   14000616c:	nop
   14000616d:	mov    r8d,r12d
   140006170:	lea    rdx,[rip+0x3fb51]        # 0x140045cc8
   140006177:	lea    rcx,[rbp+0xc0]
   14000617e:	call   0x140006cfc
   140006183:	mov    r8d,0x5
   140006189:	lea    rdx,[rip+0x3f9c0]        # 0x140045b50
   140006190:	lea    rcx,[rbp+0xc0]
   140006197:	call   0x140006cfc
   14000619c:	lea    rax,[rip+0x3fa1d]        # 0x140045bc0
   1400061a3:	mov    QWORD PTR [rbp+0x48],rax
   1400061a7:	lea    rax,[rip+0x3f91a]        # 0x140045ac8
   1400061ae:	mov    QWORD PTR [rbp+0x50],rax
   1400061b2:	mov    QWORD PTR [rbp+0x58],r15
   1400061b6:	mov    rax,QWORD PTR [rbp+0xc0]
   1400061bd:	mov    QWORD PTR [rbp+0x60],rax
   1400061c1:	mov    rcx,QWORD PTR [rbx+0x10]
   1400061c5:	mov    rax,QWORD PTR [rcx]
   1400061c8:	lea    r9,[rbp+0x48]
   1400061cc:	mov    edx,0xe1230593
   1400061d1:	mov    r8d,0x4
   1400061d7:	call   QWORD PTR [rax]
   1400061d9:	nop
   1400061da:	mov    rdx,QWORD PTR [rbp+0xc0]
   1400061e1:	add    rdx,0xffffffffffffffe8
   1400061e5:	mov    eax,r13d
   1400061e8:	lock xadd DWORD PTR [rdx+0x10],eax
   1400061ed:	add    eax,r13d
   1400061f0:	test   eax,eax
   1400061f2:	jg     0x1400064cf
   1400061f8:	mov    rcx,QWORD PTR [rdx]
   1400061fb:	mov    rax,QWORD PTR [rcx]
   1400061fe:	call   QWORD PTR [rax+0x8]
   140006201:	jmp    0x1400064cf
   140006206:	cmp    DWORD PTR [rbx+0x920],r12d
   14000620d:	jle    0x14000623d
   14000620f:	lea    rax,[rip+0x3f9aa]        # 0x140045bc0
   140006216:	mov    QWORD PTR [rbp-0x40],rax
   14000621a:	test   r8b,r8b
   14000621d:	lea    rax,[rip+0x3f8a4]        # 0x140045ac8
   140006224:	cmovne r15,rax
   140006228:	mov    QWORD PTR [rbp-0x38],r15
   14000622c:	lea    r9,[rbp-0x40]
   140006230:	mov    r8d,esi
   140006233:	mov    edx,0xe1230594
   140006238:	jmp    0x1400064c6
   14000623d:	cmp    DWORD PTR [rbx+0x948],edi
   140006243:	jle    0x14000626a
   140006245:	cmp    WORD PTR [r14],di
   140006249:	jne    0x14000626a
   14000624b:	lea    r8,[rip+0x3f7d6]        # 0x140045a28
   140006252:	mov    QWORD PTR [rbp+0x0],r8
   140006256:	lea    rax,[rip+0x3f9c3]        # 0x140045c20
   14000625d:	mov    QWORD PTR [rbp+0x8],rax
   140006261:	lea    r9,[rbp+0x0]
   140006265:	jmp    0x14000609b
   14000626a:	cmp    DWORD PTR [rbx+0x938],edi
   140006270:	jle    0x140006297
   140006272:	cmp    WORD PTR [r14],di
   140006276:	jne    0x140006297
   140006278:	lea    r8,[rip+0x3f7a9]        # 0x140045a28
   14000627f:	mov    QWORD PTR [rbp-0x20],r8
   140006283:	lea    rax,[rip+0x3f966]        # 0x140045bf0
   14000628a:	mov    QWORD PTR [rbp-0x18],rax
   14000628e:	lea    r9,[rbp-0x20]
   140006292:	jmp    0x14000609b
   140006297:	cmp    DWORD PTR [rbx+0x18],edi
   14000629a:	je     0x1400062c8
   14000629c:	cmp    DWORD PTR [rbx+0x1c],edi
   14000629f:	je     0x1400062c8
   1400062a1:	lea    rax,[rip+0x3f6a0]        # 0x140045948
   1400062a8:	mov    QWORD PTR [rbp-0x80],rax
   1400062ac:	lea    rax,[rip+0x3f6ad]        # 0x140045960
   1400062b3:	mov    QWORD PTR [rbp-0x78],rax
   1400062b7:	lea    r9,[rbp-0x80]
   1400062bb:	mov    r8d,esi
   1400062be:	mov    edx,0xe1230518
   1400062c3:	jmp    0x1400064c6
   1400062c8:	mov    eax,0x99999999
   1400062cd:	cmp    DWORD PTR [rbx+0x20],eax
   1400062d0:	je     0x1400062f3
   1400062d2:	cmp    DWORD PTR [rbx+0x24],eax
   1400062d5:	je     0x1400062f3
   1400062d7:	lea    rax,[rip+0x3f69a]        # 0x140045978
   1400062de:	mov    QWORD PTR [rbp-0x70],rax
   1400062e2:	lea    rax,[rip+0x3f6a7]        # 0x140045990
   1400062e9:	mov    QWORD PTR [rbp-0x68],rax
   1400062ed:	lea    r9,[rbp-0x70]
   1400062f1:	jmp    0x1400062bb
   1400062f3:	cmp    DWORD PTR [rbx+0x28],eax
   1400062f6:	je     0x140006319
   1400062f8:	cmp    DWORD PTR [rbx+0x2c],eax
   1400062fb:	je     0x140006319
   1400062fd:	lea    rax,[rip+0x3f6a4]        # 0x1400459a8
   140006304:	mov    QWORD PTR [rbp-0x50],rax
   140006308:	lea    rax,[rip+0x3f6b1]        # 0x1400459c0
   14000630f:	mov    QWORD PTR [rbp-0x48],rax
   140006313:	lea    r9,[rbp-0x50]
   140006317:	jmp    0x1400062bb
   140006319:	cmp    DWORD PTR [rbx+0x38],0xfffffffe
   14000631d:	jne    0x140006387
   14000631f:	cmp    BYTE PTR [rbx+0x3c],dil
   140006323:	jne    0x140006387
   140006325:	cmp    WORD PTR [rbx+0x4c],di
   140006329:	je     0x1400063d3
   14000632f:	cmp    WORD PTR [r14],di
   140006333:	jne    0x1400063d3
   140006339:	mov    rax,QWORD PTR [rbx+0x968]
   140006340:	cmp    DWORD PTR [rax-0x10],edi
   140006343:	jge    0x140006350
   140006345:	mov    ecx,0x80070057
   14000634a:	call   0x14000400c
   14000634f:	int3   
   140006350:	cmp    WORD PTR [rax],di
   140006353:	jne    0x1400063d3
   140006355:	mov    rax,QWORD PTR [rbx+0x970]
   14000635c:	cmp    DWORD PTR [rax-0x10],edi
   14000635f:	jge    0x14000636c
   140006361:	mov    ecx,0x80070057
   140006366:	call   0x14000400c
   14000636b:	int3   
   14000636c:	cmp    WORD PTR [rax],di
   14000636f:	jne    0x1400063d3
   140006371:	lea    rax,[rip+0x3f82c]        # 0x140045ba4
   140006378:	mov    QWORD PTR [rsp+0x58],rax
   14000637d:	lea    r9,[rsp+0x58]
   140006382:	jmp    0x140006063
   140006387:	cmp    DWORD PTR [rbx+0x18],edi
   14000638a:	jne    0x1400064ad
   140006390:	cmp    DWORD PTR [rbx+0x1c],edi
   140006393:	jne    0x1400064ad
   140006399:	cmp    DWORD PTR [rbx+0x20],eax
   14000639c:	jne    0x1400064ad
   1400063a2:	cmp    DWORD PTR [rbx+0x24],eax
   1400063a5:	jne    0x1400064ad
   1400063ab:	cmp    DWORD PTR [rbx+0x28],eax
   1400063ae:	jne    0x1400064ad
   1400063b4:	cmp    DWORD PTR [rbx+0x2c],eax
   1400063b7:	jne    0x1400064ad
   1400063bd:	cmp    BYTE PTR [rbx+0x458],dil
   1400063c4:	jne    0x1400064ad
   1400063ca:	cmp    DWORD PTR [rbx+0x40],edi
   1400063cd:	jne    0x1400064ad
   1400063d3:	mov    rax,QWORD PTR [rbx+0x670]
   1400063da:	cmp    DWORD PTR [rax-0x10],edi
   1400063dd:	jle    0x140006400
   1400063df:	cmp    WORD PTR [rbx+0x462],di
   1400063e6:	jne    0x140006400
   1400063e8:	mov    QWORD PTR [rbp-0x30],r15
   1400063ec:	lea    rax,[rip+0x3f685]        # 0x140045a78
   1400063f3:	mov    QWORD PTR [rbp-0x28],rax
   1400063f7:	lea    r9,[rbp-0x30]
   1400063fb:	jmp    0x14000609b
   140006400:	cmp    BYTE PTR [rbx+0x45a],dil
   140006407:	je     0x14000642a
   140006409:	cmp    WORD PTR [rbx+0x462],di
   140006410:	jne    0x14000642a
   140006412:	mov    QWORD PTR [rbp-0x10],r15
   140006416:	lea    rax,[rip+0x3f66b]        # 0x140045a88
   14000641d:	mov    QWORD PTR [rbp-0x8],rax
   140006421:	lea    r9,[rbp-0x10]
   140006425:	jmp    0x14000609b
   14000642a:	cmp    BYTE PTR [rbx+0x45b],dil
   140006431:	je     0x140006458
   140006433:	cmp    WORD PTR [r14],di
   140006437:	jne    0x140006458
   140006439:	lea    r8,[rip+0x3f5e8]        # 0x140045a28
   140006440:	mov    QWORD PTR [rbp+0x20],r8
   140006444:	lea    rax,[rip+0x3f65d]        # 0x140045aa8
   14000644b:	mov    QWORD PTR [rbp+0x28],rax
   14000644f:	lea    r9,[rbp+0x20]
   140006453:	jmp    0x14000609b
   140006458:	mov    eax,DWORD PTR [rbx+0x6c4]
   14000645e:	test   eax,eax
   140006460:	je     0x14000649b
   140006462:	dec    eax
   140006464:	cmp    eax,r12d
   140006467:	jbe    0x14000649b
   140006469:	lea    rax,[rip+0x3f6a8]        # 0x140045b18
   140006470:	mov    QWORD PTR [rbp+0x30],rax
   140006474:	lea    rax,[rip+0x3f6a5]        # 0x140045b20
   14000647b:	mov    QWORD PTR [rbp+0x38],rax
   14000647f:	lea    rax,[rip+0x3f6b2]        # 0x140045b38
   140006486:	mov    QWORD PTR [rbp+0x40],rax
   14000648a:	lea    r9,[rbp+0x30]
   14000648e:	mov    edx,0xe12305a1
   140006493:	mov    r8d,0x3
   140006499:	jmp    0x1400064c6
   14000649b:	mov    rcx,rbx
   14000649e:	call   0x140005b0c
   1400064a3:	test   eax,eax
   1400064a5:	setne  dil
   1400064a9:	mov    eax,edi
   1400064ab:	jmp    0x1400064d1
   1400064ad:	lea    rax,[rip+0x3f524]        # 0x1400459d8
   1400064b4:	mov    QWORD PTR [rsp+0x68],rax
   1400064b9:	lea    r9,[rsp+0x68]
   1400064be:	mov    edx,0xe123051d
   1400064c3:	mov    r8d,r12d
   1400064c6:	mov    rcx,QWORD PTR [rbx+0x10]
   1400064ca:	mov    rax,QWORD PTR [rcx]
   1400064cd:	call   QWORD PTR [rax]
   1400064cf:	xor    eax,eax
   1400064d1:	add    rsp,0x178
   1400064d8:	pop    r15
   1400064da:	pop    r14
   1400064dc:	pop    r13
   1400064de:	pop    r12
   1400064e0:	pop    rdi
   1400064e1:	pop    rsi
   1400064e2:	pop    rbx
   1400064e3:	pop    rbp
   1400064e4:	ret    
   1400064e5:	int3   
   1400064e6:	int3   
   1400064e7:	int3   
   1400064e8:	mov    rax,rsp
   1400064eb:	push   rbp
   1400064ec:	push   rsi
   1400064ed:	push   rdi
   1400064ee:	push   r12
   1400064f0:	push   r13
   1400064f2:	push   r14
   1400064f4:	push   r15
   1400064f6:	lea    rbp,[rax-0x228]
   1400064fd:	sub    rsp,0x2f0
   140006504:	mov    QWORD PTR [rbp-0x80],0xfffffffffffffffe
   14000650c:	mov    QWORD PTR [rax+0x20],rbx
   140006510:	mov    rax,QWORD PTR [rip+0x52b71]        # 0x140059088
   140006517:	xor    rax,rsp
   14000651a:	mov    QWORD PTR [rbp+0x1e0],rax
   140006521:	mov    rdi,r8
   140006524:	mov    QWORD PTR [rsp+0x50],r8
   140006529:	mov    rsi,rdx
   14000652c:	mov    rbx,rcx
   14000652f:	mov    QWORD PTR [rsp+0x48],rcx
   140006534:	mov    QWORD PTR [rbp-0x78],rdx
   140006538:	mov    r12d,DWORD PTR [r8+0x8]
   14000653c:	mov    DWORD PTR [rsp+0x30],r12d
   140006541:	xor    r14d,r14d
   140006544:	test   r12d,r12d
   140006547:	jne    0x140006553
   140006549:	lea    eax,[r12+0x1]
   14000654e:	jmp    0x1400068b4
   140006553:	call   0x1400122e0
   140006558:	test   eax,eax
   14000655a:	jne    0x140006577
   14000655c:	mov    rcx,QWORD PTR [rbx+0x10]
   140006560:	mov    rax,QWORD PTR [rcx]
   140006563:	xor    r9d,r9d
   140006566:	xor    r8d,r8d
   140006569:	mov    edx,0xe1230597
   14000656e:	call   QWORD PTR [rax]
   140006570:	xor    al,al
   140006572:	jmp    0x1400068b4
   140006577:	xor    edx,edx
   140006579:	lea    ecx,[rdx+0x2]
   14000657c:	call   QWORD PTR [rip+0x564ee]        # 0x14005ca70
   140006582:	mov    r15,rax
   140006585:	cmp    rax,0xffffffffffffffff
   140006589:	je     0x14000655c
   14000658b:	mov    DWORD PTR [rbp-0x60],0x238
   140006592:	mov    ebx,0x1
   140006597:	mov    r13b,bl
   14000659a:	mov    BYTE PTR [rsp+0x20],bl
   14000659e:	test   r12d,r12d
   1400065a1:	jle    0x1400068a8
   1400065a7:	xor    r12d,r12d
   1400065aa:	test   r14d,r14d
   1400065ad:	js     0x140006894
   1400065b3:	cmp    r14d,DWORD PTR [rdi+0x8]
   1400065b7:	jge    0x140006894
   1400065bd:	movsxd r13,r14d
   1400065c0:	mov    rax,QWORD PTR [rdi]
   1400065c3:	lea    rdx,[rax+r13*8]
   1400065c7:	lea    rcx,[rsp+0x28]
   1400065cc:	call   0x140006af0
   1400065d1:	nop
   1400065d2:	lea    rdx,[rip+0x3f6f3]        # 0x140045ccc
   1400065d9:	lea    rcx,[rsp+0x40]
   1400065de:	call   0x140006b8c
   1400065e3:	nop
   1400065e4:	mov    edi,r12d
   1400065e7:	xor    r8d,r8d
   1400065ea:	lea    rdx,[rsp+0x58]
   1400065ef:	mov    rcx,QWORD PTR [rsp+0x28]
   1400065f4:	call   0x140027354
   1400065f9:	mov    r12d,eax
   1400065fc:	mov    DWORD PTR [rsp+0x24],eax
   140006600:	xor    eax,eax
   140006602:	test   r12d,r12d
   140006605:	je     0x14000667c
   140006607:	mov    rcx,QWORD PTR [rsp+0x58]
   14000660c:	test   rcx,rcx
   14000660f:	je     0x14000667c
   140006611:	cmp    WORD PTR [rcx],ax
   140006614:	jne    0x14000667c
   140006616:	lea    rdx,[rbp-0x60]
   14000661a:	mov    rcx,r15
   14000661d:	call   QWORD PTR [rip+0x56445]        # 0x14005ca68
   140006623:	test   eax,eax
   140006625:	je     0x1400067f4
   14000662b:	cmp    DWORD PTR [rbp-0x58],r12d
   14000662f:	je     0x140006640
   140006631:	lea    rdx,[rbp-0x60]
   140006635:	mov    rcx,r15
   140006638:	call   QWORD PTR [rip+0x5644a]        # 0x14005ca88
   14000663e:	jmp    0x140006623
   140006640:	mov    rax,QWORD PTR [rsp+0x50]
   140006645:	cmp    r14d,DWORD PTR [rax+0x8]
   140006649:	jge    0x140006875
   14000664f:	mov    rax,QWORD PTR [rax]
   140006652:	lea    rcx,[rax+r13*8]
   140006656:	lea    rdx,[rbp-0x34]
   14000665a:	or     rax,0xffffffffffffffff
   14000665e:	xor    r13d,r13d
   140006661:	inc    rax
   140006664:	cmp    WORD PTR [rdx+rax*2],r13w
   140006669:	jne    0x140006661
   14000666b:	mov    r8d,eax
   14000666e:	lea    rdx,[rbp-0x34]
   140006672:	call   0x140006f54
   140006677:	jmp    0x140006776
   14000667c:	lea    rdx,[rbp-0x60]
   140006680:	mov    rcx,r15
   140006683:	call   QWORD PTR [rip+0x563df]        # 0x14005ca68
   140006689:	xor    r13d,r13d
   14000668c:	test   eax,eax
   14000668e:	je     0x1400067f7
   140006694:	lea    rdx,[rsp+0x28]
   140006699:	lea    rcx,[rsp+0x38]
   14000669e:	call   0x140006af0
   1400066a3:	nop
   1400066a4:	lea    r8d,[r13+0x4]
   1400066a8:	lea    rdx,[rip+0x3f621]        # 0x140045cd0
   1400066af:	lea    rcx,[rsp+0x38]
   1400066b4:	call   0x140006cfc
   1400066b9:	lea    rdx,[rbp-0x34]
   1400066bd:	mov    rcx,QWORD PTR [rsp+0x28]
   1400066c2:	call   0x140026fd8
   1400066c7:	test   eax,eax
   1400066c9:	je     0x1400066dd
   1400066cb:	lea    rdx,[rbp-0x34]
   1400066cf:	mov    rcx,QWORD PTR [rsp+0x38]
   1400066d4:	call   0x140026fd8
   1400066d9:	test   eax,eax
   1400066db:	jne    0x1400066ff
   1400066dd:	lea    r9,[rbp-0x34]
   1400066e1:	mov    r8d,DWORD PTR [rbp-0x58]
   1400066e5:	lea    rdx,[rip+0x3f5f4]        # 0x140045ce0
   1400066ec:	lea    rcx,[rsp+0x40]
   1400066f1:	call   0x1400071ec
   1400066f6:	add    edi,ebx
   1400066f8:	mov    eax,DWORD PTR [rbp-0x58]
   1400066fb:	mov    DWORD PTR [rsp+0x24],eax
   1400066ff:	lea    rdx,[rbp-0x60]
   140006703:	mov    rcx,r15
   140006706:	call   QWORD PTR [rip+0x5637c]        # 0x14005ca88
   14000670c:	test   eax,eax
   14000670e:	jne    0x1400066b9
   140006710:	mov    rdx,QWORD PTR [rsp+0x38]
   140006715:	add    rdx,0xffffffffffffffe8
   140006719:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000671e:	jg     0x140006729
   140006720:	mov    rcx,QWORD PTR [rdx]
   140006723:	mov    rax,QWORD PTR [rcx]
   140006726:	call   QWORD PTR [rax+0x8]
   140006729:	test   edi,edi
   14000672b:	je     0x1400067f7
   140006731:	cmp    edi,ebx
   140006733:	jbe    0x140006771
   140006735:	mov    rax,QWORD PTR [rsp+0x48]
   14000673a:	mov    rcx,QWORD PTR [rax+0x10]
   14000673e:	mov    rax,QWORD PTR [rsp+0x28]
   140006743:	mov    QWORD PTR [rsp+0x70],rax
   140006748:	mov    rax,QWORD PTR [rsp+0x40]
   14000674d:	mov    QWORD PTR [rsp+0x78],rax
   140006752:	lea    r9,[rsp+0x70]
   140006757:	mov    edx,0xe1230596
   14000675c:	mov    r8d,0x2
   140006762:	mov    rax,QWORD PTR [rcx]
   140006765:	call   QWORD PTR [rax]
   140006767:	mov    BYTE PTR [rsp+0x20],r13b
   14000676c:	jmp    0x140006821
   140006771:	mov    r12d,DWORD PTR [rsp+0x24]
   140006776:	mov    edi,DWORD PTR [rsi+0x8]
   140006779:	movsxd rdx,DWORD PTR [rsi+0xc]
   14000677d:	cmp    edi,edx
   14000677f:	jne    0x1400067d1
   140006781:	mov    r9,QWORD PTR [rsi]
   140006784:	lea    rax,[rsp+0x24]
   140006789:	cmp    rax,r9
   14000678c:	jb     0x1400067a0
   14000678e:	lea    rcx,[r9+rdx*4]
   140006792:	lea    rax,[rsp+0x24]
   140006797:	cmp    rax,rcx
   14000679a:	jb     0x140006889
   1400067a0:	test   edx,edx
   1400067a2:	jne    0x1400067a8
   1400067a4:	mov    edi,ebx
   1400067a6:	jmp    0x1400067ac
   1400067a8:	add    edi,edi
   1400067aa:	js     0x14000681c
   1400067ac:	movsxd rdx,edi
   1400067af:	cmp    rdx,0x1fffffff
   1400067b6:	ja     0x14000681c
   1400067b8:	mov    r8d,0x4
   1400067be:	mov    rcx,r9
   1400067c1:	call   0x1400275ec
   1400067c6:	test   rax,rax
   1400067c9:	je     0x14000681c
   1400067cb:	mov    DWORD PTR [rsi+0xc],edi
   1400067ce:	mov    QWORD PTR [rsi],rax
   1400067d1:	movsxd rax,DWORD PTR [rsi+0x8]
   1400067d5:	mov    DWORD PTR [rsp+0x68],eax
   1400067d9:	mov    rcx,rax
   1400067dc:	mov    rax,QWORD PTR [rsi]
   1400067df:	lea    rdx,[rax+rcx*4]
   1400067e3:	mov    QWORD PTR [rbp-0x70],rdx
   1400067e7:	test   rdx,rdx
   1400067ea:	je     0x1400067ef
   1400067ec:	mov    DWORD PTR [rdx],r12d
   1400067ef:	add    DWORD PTR [rsi+0x8],ebx
   1400067f2:	jmp    0x14000681c
   1400067f4:	xor    r13d,r13d
   1400067f7:	mov    rax,QWORD PTR [rsp+0x48]
   1400067fc:	mov    rcx,QWORD PTR [rax+0x10]
   140006800:	mov    rax,QWORD PTR [rsp+0x28]
   140006805:	mov    QWORD PTR [rsp+0x60],rax
   14000680a:	lea    r9,[rsp+0x60]
   14000680f:	mov    r8d,ebx
   140006812:	mov    edx,0xe1230595
   140006817:	jmp    0x140006762
   14000681c:	mov    r13b,BYTE PTR [rsp+0x20]
   140006821:	mov    rdx,QWORD PTR [rsp+0x40]
   140006826:	add    rdx,0xffffffffffffffe8
   14000682a:	or     eax,0xffffffff
   14000682d:	lock xadd DWORD PTR [rdx+0x10],eax
   140006832:	xor    r12d,r12d
   140006835:	dec    eax
   140006837:	jg     0x140006843
   140006839:	mov    rcx,QWORD PTR [rdx]
   14000683c:	mov    rax,QWORD PTR [rcx]
   14000683f:	call   QWORD PTR [rax+0x8]
   140006842:	nop
   140006843:	mov    rdx,QWORD PTR [rsp+0x28]
   140006848:	add    rdx,0xffffffffffffffe8
   14000684c:	or     eax,0xffffffff
   14000684f:	lock xadd DWORD PTR [rdx+0x10],eax
   140006854:	dec    eax
   140006856:	jg     0x140006861
   140006858:	mov    rcx,QWORD PTR [rdx]
   14000685b:	mov    rax,QWORD PTR [rcx]
   14000685e:	call   QWORD PTR [rax+0x8]
   140006861:	add    r14d,ebx
   140006864:	cmp    r14d,DWORD PTR [rsp+0x30]
   140006869:	jge    0x1400068a8
   14000686b:	mov    rdi,QWORD PTR [rsp+0x50]
   140006870:	jmp    0x1400065aa
   140006875:	xor    r9d,r9d
   140006878:	xor    r8d,r8d
   14000687b:	mov    edx,ebx
   14000687d:	mov    ecx,0xc000008c
   140006882:	call   QWORD PTR [rip+0x3ab18]        # 0x1400413a0
   140006888:	int3   
   140006889:	mov    ecx,0x80004005
   14000688e:	call   0x14000400c
   140006893:	nop
   140006894:	xor    r9d,r9d
   140006897:	xor    r8d,r8d
   14000689a:	mov    edx,ebx
   14000689c:	mov    ecx,0xc000008c
   1400068a1:	call   QWORD PTR [rip+0x3aaf9]        # 0x1400413a0
   1400068a7:	int3   
   1400068a8:	mov    rcx,r15
   1400068ab:	call   QWORD PTR [rip+0x3aad7]        # 0x140041388
   1400068b1:	mov    al,r13b
   1400068b4:	mov    rcx,QWORD PTR [rbp+0x1e0]
   1400068bb:	xor    rcx,rsp
   1400068be:	call   0x1400265a0
   1400068c3:	mov    rbx,QWORD PTR [rsp+0x348]
   1400068cb:	add    rsp,0x2f0
   1400068d2:	pop    r15
   1400068d4:	pop    r14
   1400068d6:	pop    r13
   1400068d8:	pop    r12
   1400068da:	pop    rdi
   1400068db:	pop    rsi
   1400068dc:	pop    rbp
   1400068dd:	ret    
   1400068de:	int3   
   1400068df:	int3   
   1400068e0:	mov    rax,rsp
   1400068e3:	push   rbp
   1400068e4:	push   rdi
   1400068e5:	push   r14
   1400068e7:	mov    rbp,rsp
   1400068ea:	sub    rsp,0x70
   1400068ee:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   1400068f6:	mov    QWORD PTR [rax+0x8],rbx
   1400068fa:	mov    QWORD PTR [rax+0x20],rsi
   1400068fe:	mov    rsi,rdx
   140006901:	mov    r14,rcx
   140006904:	mov    r9,QWORD PTR [rdx]
   140006907:	mov    r8d,DWORD PTR [r9-0x10]
   14000690b:	xor    edi,edi
   14000690d:	test   r8d,r8d
   140006910:	jle    0x1400069ef
   140006916:	cmp    r8d,0x1
   14000691a:	jle    0x1400069d3
   140006920:	jge    0x14000692d
   140006922:	mov    ecx,0x80070057
   140006927:	call   0x14000400c
   14000692c:	int3   
   14000692d:	movzx  eax,WORD PTR [r9+0x2]
   140006932:	cmp    eax,0x30
   140006935:	js     0x1400069d3
   14000693b:	cmp    r8d,0x1
   14000693f:	jge    0x14000694c
   140006941:	mov    ecx,0x80070057
   140006946:	call   0x14000400c
   14000694b:	int3   
   14000694c:	movzx  eax,WORD PTR [r9+0x2]
   140006951:	sub    eax,0x30
   140006954:	cmp    eax,0xa
   140006957:	jg     0x1400069d3
   140006959:	mov    QWORD PTR [rbp-0x48],rdi
   14000695d:	mov    QWORD PTR [rbp-0x40],rdi
   140006961:	mov    QWORD PTR [rbp-0x38],rdi
   140006965:	xor    edx,edx
   140006967:	lea    rcx,[rbp-0x48]
   14000696b:	call   0x140012570
   140006970:	lea    rax,[rbp-0x30]
   140006974:	mov    QWORD PTR [rbp+0x28],rax
   140006978:	mov    r8,rsi
   14000697b:	lea    rcx,[rbp-0x30]
   14000697f:	call   0x14000747c
   140006984:	nop
   140006985:	mov    r9,rax
   140006988:	mov    rbx,QWORD PTR [rbp-0x40]
   14000698c:	mov    r8,rbx
   14000698f:	mov    rdx,QWORD PTR [rbp-0x48]
   140006993:	lea    rcx,[rbp+0x30]
   140006997:	call   0x140007538
   14000699c:	cmp    QWORD PTR [rax],rbx
   14000699f:	jne    0x1400069c2
   1400069a1:	mov    rax,QWORD PTR [rsi]
   1400069a4:	mov    rcx,QWORD PTR [r14+0x10]
   1400069a8:	mov    QWORD PTR [rbp+0x28],rax
   1400069ac:	mov    rax,QWORD PTR [rcx]
   1400069af:	lea    r9,[rbp+0x28]
   1400069b3:	mov    edx,0xa1230931
   1400069b8:	mov    r8d,0x1
   1400069be:	call   QWORD PTR [rax]
   1400069c0:	jmp    0x1400069c5
   1400069c2:	mov    dil,0x1
   1400069c5:	lea    rcx,[rbp-0x48]
   1400069c9:	call   0x140006a48
   1400069ce:	mov    al,dil
   1400069d1:	jmp    0x1400069f1
   1400069d3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400069d7:	mov    QWORD PTR [rbp+0x28],r9
   1400069db:	mov    rax,QWORD PTR [rcx]
   1400069de:	lea    r9,[rbp+0x28]
   1400069e2:	mov    edx,0xa1230932
   1400069e7:	mov    r8d,0x1
   1400069ed:	call   QWORD PTR [rax]
   1400069ef:	xor    al,al
   1400069f1:	lea    r11,[rsp+0x70]
   1400069f6:	mov    rbx,QWORD PTR [r11+0x20]
   1400069fa:	mov    rsi,QWORD PTR [r11+0x38]
   1400069fe:	mov    rsp,r11
   140006a01:	pop    r14
   140006a03:	pop    rdi
   140006a04:	pop    rbp
   140006a05:	ret    
   140006a06:	int3   
   140006a07:	int3   
   140006a08:	mov    QWORD PTR [rsp+0x8],rcx
   140006a0d:	push   rbx
   140006a0e:	sub    rsp,0x30
   140006a12:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006a1b:	mov    rbx,rcx
   140006a1e:	cmp    QWORD PTR [rcx+0x20],0x8
   140006a23:	jb     0x140006a2e
   140006a25:	mov    rcx,QWORD PTR [rcx+0x8]
   140006a29:	call   0x14002657c
   140006a2e:	mov    QWORD PTR [rbx+0x20],0x7
   140006a36:	xor    eax,eax
   140006a38:	mov    QWORD PTR [rbx+0x18],rax
   140006a3c:	mov    WORD PTR [rbx+0x8],ax
   140006a40:	add    rsp,0x30
   140006a44:	pop    rbx
   140006a45:	ret    
   140006a46:	int3   
   140006a47:	int3   
   140006a48:	mov    QWORD PTR [rsp+0x8],rbx
   140006a4d:	mov    QWORD PTR [rsp+0x10],rbp
   140006a52:	mov    QWORD PTR [rsp+0x18],rsi
   140006a57:	push   rdi
   140006a58:	sub    rsp,0x20
   140006a5c:	mov    rbx,QWORD PTR [rcx]
   140006a5f:	xor    ebp,ebp
   140006a61:	mov    rdi,rcx
   140006a64:	test   rbx,rbx
   140006a67:	je     0x140006aa9
   140006a69:	mov    rsi,QWORD PTR [rcx+0x8]
   140006a6d:	jmp    0x140006a91
   140006a6f:	cmp    QWORD PTR [rbx+0x18],0x8
   140006a74:	jb     0x140006a7e
   140006a76:	mov    rcx,QWORD PTR [rbx]
   140006a79:	call   0x14002657c
   140006a7e:	mov    QWORD PTR [rbx+0x18],0x7
   140006a86:	mov    QWORD PTR [rbx+0x10],rbp
   140006a8a:	mov    WORD PTR [rbx],bp
   140006a8d:	add    rbx,0x20
   140006a91:	cmp    rbx,rsi
   140006a94:	jne    0x140006a6f
   140006a96:	mov    rcx,QWORD PTR [rdi]
   140006a99:	call   0x14002657c
   140006a9e:	mov    QWORD PTR [rdi],rbp
   140006aa1:	mov    QWORD PTR [rdi+0x8],rbp
   140006aa5:	mov    QWORD PTR [rdi+0x10],rbp
   140006aa9:	mov    rbx,QWORD PTR [rsp+0x30]
   140006aae:	mov    rbp,QWORD PTR [rsp+0x38]
   140006ab3:	mov    rsi,QWORD PTR [rsp+0x40]
   140006ab8:	add    rsp,0x20
   140006abc:	pop    rdi
   140006abd:	ret    
   140006abe:	int3   
   140006abf:	int3   
   140006ac0:	mov    QWORD PTR [rsp+0x8],rcx
   140006ac5:	sub    rsp,0x38
   140006ac9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006ad2:	mov    rdx,QWORD PTR [rcx]
   140006ad5:	sub    rdx,0x18
   140006ad9:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140006ade:	jg     0x140006ae9
   140006ae0:	mov    rcx,QWORD PTR [rdx]
   140006ae3:	mov    rax,QWORD PTR [rcx]
   140006ae6:	call   QWORD PTR [rax+0x8]
   140006ae9:	add    rsp,0x38
   140006aed:	ret    
   140006aee:	int3   
   140006aef:	int3   
   140006af0:	mov    rax,rsp
   140006af3:	mov    QWORD PTR [rax+0x8],rcx
   140006af7:	push   rdi
   140006af8:	sub    rsp,0x30
   140006afc:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140006b04:	mov    QWORD PTR [rax+0x10],rbx
   140006b08:	mov    QWORD PTR [rax+0x18],rsi
   140006b0c:	mov    rsi,rcx
   140006b0f:	mov    rbx,QWORD PTR [rdx]
   140006b12:	mov    rcx,QWORD PTR [rbx-0x18]
   140006b16:	mov    rax,QWORD PTR [rcx]
   140006b19:	call   QWORD PTR [rax+0x20]
   140006b1c:	mov    rcx,rax
   140006b1f:	cmp    DWORD PTR [rbx-0x8],0x0
   140006b23:	jl     0x140006b35
   140006b25:	cmp    rax,QWORD PTR [rbx-0x18]
   140006b29:	jne    0x140006b35
   140006b2b:	lea    rdi,[rbx-0x18]
   140006b2f:	lock inc DWORD PTR [rbx-0x8]
   140006b33:	jmp    0x140006b72
   140006b35:	mov    rax,QWORD PTR [rax]
   140006b38:	mov    r8d,0x2
   140006b3e:	mov    edx,DWORD PTR [rbx-0x10]
   140006b41:	call   QWORD PTR [rax]
   140006b43:	mov    rdi,rax
   140006b46:	test   rax,rax
   140006b49:	jne    0x140006b51
   140006b4b:	call   0x140007088
   140006b50:	int3   
   140006b51:	mov    eax,DWORD PTR [rbx-0x10]
   140006b54:	mov    DWORD PTR [rdi+0x8],eax
   140006b57:	mov    eax,DWORD PTR [rbx-0x10]
   140006b5a:	inc    eax
   140006b5c:	movsxd rdx,eax
   140006b5f:	lea    r9,[rdx+rdx*1]
   140006b63:	mov    r8,rbx
   140006b66:	add    rdx,rdx
   140006b69:	lea    rcx,[rdi+0x18]
   140006b6d:	call   0x140027788
   140006b72:	lea    rax,[rdi+0x18]
   140006b76:	mov    QWORD PTR [rsi],rax
   140006b79:	mov    rax,rsi
   140006b7c:	mov    rbx,QWORD PTR [rsp+0x48]
   140006b81:	mov    rsi,QWORD PTR [rsp+0x50]
   140006b86:	add    rsp,0x30
   140006b8a:	pop    rdi
   140006b8b:	ret    
   140006b8c:	mov    rax,rsp
   140006b8f:	mov    QWORD PTR [rax+0x8],rcx
   140006b93:	push   rdi
   140006b94:	sub    rsp,0x30
   140006b98:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140006ba0:	mov    QWORD PTR [rax+0x10],rbx
   140006ba4:	mov    QWORD PTR [rax+0x18],rsi
   140006ba8:	mov    rbx,rdx
   140006bab:	mov    rdi,rcx
   140006bae:	lea    rcx,[rip+0x53773]        # 0x14005a328
   140006bb5:	mov    rax,QWORD PTR [rip+0x5376c]        # 0x14005a328
   140006bbc:	call   QWORD PTR [rax+0x18]
   140006bbf:	add    rax,0x18
   140006bc3:	mov    QWORD PTR [rdi],rax
   140006bc6:	xor    esi,esi
   140006bc8:	test   rbx,rbx
   140006bcb:	je     0x140006c04
   140006bcd:	test   rbx,0xffffffffffff0000
   140006bd4:	jne    0x140006bf5
   140006bd6:	movzx  ebx,bx
   140006bd9:	mov    ecx,ebx
   140006bdb:	call   0x1400040b8
   140006be0:	test   rax,rax
   140006be3:	je     0x140006c15
   140006be5:	mov    r8d,ebx
   140006be8:	mov    rdx,rax
   140006beb:	mov    rcx,rdi
   140006bee:	call   0x140006e10
   140006bf3:	jmp    0x140006c15
   140006bf5:	or     rax,0xffffffffffffffff
   140006bf9:	inc    rax
   140006bfc:	cmp    WORD PTR [rbx+rax*2],si
   140006c00:	jne    0x140006bf9
   140006c02:	jmp    0x140006c06
   140006c04:	mov    eax,esi
   140006c06:	mov    r8d,eax
   140006c09:	mov    rdx,rbx
   140006c0c:	mov    rcx,rdi
   140006c0f:	call   0x140006f54
   140006c14:	nop
   140006c15:	mov    rax,rdi
   140006c18:	mov    rbx,QWORD PTR [rsp+0x48]
   140006c1d:	mov    rsi,QWORD PTR [rsp+0x50]
   140006c22:	add    rsp,0x30
   140006c26:	pop    rdi
   140006c27:	ret    
   140006c28:	mov    QWORD PTR [rsp+0x8],rcx
   140006c2d:	push   rbx
   140006c2e:	push   rsi
   140006c2f:	push   rdi
   140006c30:	sub    rsp,0x30
   140006c34:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006c3d:	mov    rsi,rdx
   140006c40:	mov    rbx,rcx
   140006c43:	mov    edi,DWORD PTR [rcx+0x8]
   140006c46:	movsxd r8,DWORD PTR [rcx+0xc]
   140006c4a:	cmp    edi,r8d
   140006c4d:	jne    0x140006ca5
   140006c4f:	mov    r9,QWORD PTR [rcx]
   140006c52:	cmp    rdx,r9
   140006c55:	jb     0x140006c6b
   140006c57:	lea    rcx,[r9+r8*8]
   140006c5b:	cmp    rdx,rcx
   140006c5e:	jae    0x140006c6b
   140006c60:	mov    ecx,0x80004005
   140006c65:	call   0x14000400c
   140006c6a:	int3   
   140006c6b:	test   r8d,r8d
   140006c6e:	jne    0x140006c76
   140006c70:	lea    edi,[r8+0x1]
   140006c74:	jmp    0x140006c7a
   140006c76:	add    edi,edi
   140006c78:	js     0x140006ca1
   140006c7a:	movsxd rdx,edi
   140006c7d:	cmp    rdx,0xfffffff
   140006c84:	ja     0x140006ca1
   140006c86:	mov    r8d,0x8
   140006c8c:	mov    rcx,r9
   140006c8f:	call   0x1400275ec
   140006c94:	test   rax,rax
   140006c97:	je     0x140006ca1
   140006c99:	mov    DWORD PTR [rbx+0xc],edi
   140006c9c:	mov    QWORD PTR [rbx],rax
   140006c9f:	jmp    0x140006ca5
   140006ca1:	xor    eax,eax
   140006ca3:	jmp    0x140006cd2
   140006ca5:	movsxd rax,DWORD PTR [rbx+0x8]
   140006ca9:	mov    DWORD PTR [rsp+0x60],eax
   140006cad:	mov    rcx,rax
   140006cb0:	mov    rax,QWORD PTR [rbx]
   140006cb3:	lea    rcx,[rax+rcx*8]
   140006cb7:	mov    QWORD PTR [rsp+0x68],rcx
   140006cbc:	test   rcx,rcx
   140006cbf:	je     0x140006cca
   140006cc1:	mov    rdx,rsi
   140006cc4:	call   0x140006af0
   140006cc9:	nop
   140006cca:	inc    DWORD PTR [rbx+0x8]
   140006ccd:	mov    eax,0x1
   140006cd2:	add    rsp,0x30
   140006cd6:	pop    rdi
   140006cd7:	pop    rsi
   140006cd8:	pop    rbx
   140006cd9:	ret    
   140006cda:	int3   
   140006cdb:	int3   
   140006cdc:	sub    rsp,0x28
   140006ce0:	mov    rdx,QWORD PTR [rcx]
   140006ce3:	sub    rdx,0x18
   140006ce7:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140006cec:	jg     0x140006cf7
   140006cee:	mov    rcx,QWORD PTR [rdx]
   140006cf1:	mov    rax,QWORD PTR [rcx]
   140006cf4:	call   QWORD PTR [rax+0x8]
   140006cf7:	add    rsp,0x28
   140006cfb:	ret    
   140006cfc:	mov    rax,rsp
   140006cff:	mov    QWORD PTR [rax+0x8],rbx
   140006d03:	mov    QWORD PTR [rax+0x10],rbp
   140006d07:	mov    QWORD PTR [rax+0x18],rsi
   140006d0b:	mov    QWORD PTR [rax+0x20],rdi
   140006d0f:	push   r12
   140006d11:	push   r14
   140006d13:	push   r15
   140006d15:	sub    rsp,0x20
   140006d19:	mov    rax,QWORD PTR [rcx]
   140006d1c:	mov    rsi,rdx
   140006d1f:	xor    r12d,r12d
   140006d22:	mov    r15d,DWORD PTR [rax-0x10]
   140006d26:	sub    rsi,rax
   140006d29:	mov    r14,rdx
   140006d2c:	sar    rsi,1
   140006d2f:	mov    rdi,rcx
   140006d32:	test   r8d,r8d
   140006d35:	js     0x140006de3
   140006d3b:	test   rdx,rdx
   140006d3e:	jne    0x140006d45
   140006d40:	mov    ebp,r12d
   140006d43:	jmp    0x140006d53
   140006d45:	movsxd rdx,r8d
   140006d48:	mov    rcx,r14
   140006d4b:	call   0x14002741c
   140006d50:	mov    rbp,rax
   140006d53:	mov    ecx,0x7fffffff
   140006d58:	sub    ecx,ebp
   140006d5a:	cmp    ecx,r15d
   140006d5d:	jl     0x140006dee
   140006d63:	lea    ebx,[r15+rbp*1]
   140006d67:	test   ebx,ebx
   140006d69:	js     0x140006df9
   140006d6f:	mov    rax,QWORD PTR [rdi]
   140006d72:	mov    ecx,0x1
   140006d77:	sub    ecx,DWORD PTR [rax-0x8]
   140006d7a:	mov    eax,DWORD PTR [rax-0xc]
   140006d7d:	sub    eax,ebx
   140006d7f:	or     ecx,eax
   140006d81:	jge    0x140006d8d
   140006d83:	mov    edx,ebx
   140006d85:	mov    rcx,rdi
   140006d88:	call   0x140007098
   140006d8d:	mov    rax,QWORD PTR [rdi]
   140006d90:	cmp    rsi,r15
   140006d93:	ja     0x140006d99
   140006d95:	lea    r14,[rax+rsi*2]
   140006d99:	movsxd rdx,ebp
   140006d9c:	lea    rcx,[rax+r15*2]
   140006da0:	mov    r8,r14
   140006da3:	add    rdx,rdx
   140006da6:	mov    r9,rdx
   140006da9:	call   0x140027788
   140006dae:	mov    rax,QWORD PTR [rdi]
   140006db1:	cmp    ebx,DWORD PTR [rax-0xc]
   140006db4:	jg     0x140006e04
   140006db6:	mov    rbp,QWORD PTR [rsp+0x48]
   140006dbb:	mov    rsi,QWORD PTR [rsp+0x50]
   140006dc0:	mov    DWORD PTR [rax-0x10],ebx
   140006dc3:	mov    rax,QWORD PTR [rdi]
   140006dc6:	mov    rdi,QWORD PTR [rsp+0x58]
   140006dcb:	movsxd rcx,ebx
   140006dce:	mov    rbx,QWORD PTR [rsp+0x40]
   140006dd3:	mov    WORD PTR [rax+rcx*2],r12w
   140006dd8:	add    rsp,0x20
   140006ddc:	pop    r15
   140006dde:	pop    r14
   140006de0:	pop    r12
   140006de2:	ret    
   140006de3:	mov    ecx,0x80070057
   140006de8:	call   0x14000400c
   140006ded:	int3   
   140006dee:	mov    ecx,0x80070057
   140006df3:	call   0x14000400c
   140006df8:	int3   
   140006df9:	mov    ecx,0x80070057
   140006dfe:	call   0x14000400c
   140006e03:	int3   
   140006e04:	mov    ecx,0x80070057
   140006e09:	call   0x14000400c
   140006e0e:	int3   
   140006e0f:	int3   
   140006e10:	mov    rax,rsp
   140006e13:	mov    QWORD PTR [rax+0x8],rbx
   140006e17:	mov    QWORD PTR [rax+0x10],rbp
   140006e1b:	mov    QWORD PTR [rax+0x18],rsi
   140006e1f:	mov    QWORD PTR [rax+0x20],rdi
   140006e23:	push   r14
   140006e25:	sub    rsp,0x20
   140006e29:	mov    eax,r8d
   140006e2c:	mov    rdi,rdx
   140006e2f:	mov    r14d,0x1
   140006e35:	shr    eax,0x4
   140006e38:	mov    ebx,r8d
   140006e3b:	mov    rsi,rcx
   140006e3e:	add    ax,r14w
   140006e42:	lea    r8d,[r14+0x5]
   140006e46:	mov    rcx,rdi
   140006e49:	movzx  edx,ax
   140006e4c:	call   QWORD PTR [rip+0x3a566]        # 0x1400413b8
   140006e52:	xor    ebp,ebp
   140006e54:	test   rax,rax
   140006e57:	je     0x140006f00
   140006e5d:	mov    r8d,ebx
   140006e60:	mov    rdx,rax
   140006e63:	mov    rcx,rdi
   140006e66:	call   0x140004028
   140006e6b:	mov    rdi,rax
   140006e6e:	test   rax,rax
   140006e71:	je     0x140006f00
   140006e77:	movzx  ebx,WORD PTR [rax]
   140006e7a:	test   ebx,ebx
   140006e7c:	js     0x140006f1d
   140006e82:	mov    rax,QWORD PTR [rsi]
   140006e85:	mov    ecx,r14d
   140006e88:	sub    ecx,DWORD PTR [rax-0x8]
   140006e8b:	mov    eax,DWORD PTR [rax-0xc]
   140006e8e:	sub    eax,ebx
   140006e90:	or     ecx,eax
   140006e92:	jge    0x140006e9e
   140006e94:	mov    edx,ebx
   140006e96:	mov    rcx,rsi
   140006e99:	call   0x140007098
   140006e9e:	movzx  ecx,WORD PTR [rdi]
   140006ea1:	or     rax,0xffffffffffffffff
   140006ea5:	lea    r8,[rdi+0x2]
   140006ea9:	cmp    ecx,eax
   140006eab:	jne    0x140006ec3
   140006ead:	test   r8,r8
   140006eb0:	jne    0x140006eb6
   140006eb2:	mov    eax,ebp
   140006eb4:	jmp    0x140006ec0
   140006eb6:	inc    rax
   140006eb9:	cmp    WORD PTR [r8+rax*2],bp
   140006ebe:	jne    0x140006eb6
   140006ec0:	lea    ecx,[rax+0x1]
   140006ec3:	movsxd r9,ecx
   140006ec6:	mov    rcx,QWORD PTR [rsi]
   140006ec9:	mov    rdx,rbx
   140006ecc:	call   0x140027360
   140006ed1:	test   eax,eax
   140006ed3:	je     0x140006ee9
   140006ed5:	cmp    eax,0xc
   140006ed8:	je     0x140006f3e
   140006eda:	cmp    eax,0x16
   140006edd:	je     0x140006f33
   140006edf:	cmp    eax,0x22
   140006ee2:	je     0x140006f33
   140006ee4:	cmp    eax,0x50
   140006ee7:	jne    0x140006f28
   140006ee9:	mov    rcx,QWORD PTR [rsi]
   140006eec:	cmp    ebx,DWORD PTR [rcx-0xc]
   140006eef:	jg     0x140006f49
   140006ef1:	mov    DWORD PTR [rcx-0x10],ebx
   140006ef4:	mov    rcx,QWORD PTR [rsi]
   140006ef7:	mov    eax,r14d
   140006efa:	mov    WORD PTR [rcx+rbx*2],bp
   140006efe:	jmp    0x140006f02
   140006f00:	xor    eax,eax
   140006f02:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f07:	mov    rbp,QWORD PTR [rsp+0x38]
   140006f0c:	mov    rsi,QWORD PTR [rsp+0x40]
   140006f11:	mov    rdi,QWORD PTR [rsp+0x48]
   140006f16:	add    rsp,0x20
   140006f1a:	pop    r14
   140006f1c:	ret    
   140006f1d:	mov    ecx,0x80070057
   140006f22:	call   0x14000400c
   140006f27:	int3   
   140006f28:	mov    ecx,0x80004005
   140006f2d:	call   0x14000400c
   140006f32:	int3   
   140006f33:	mov    ecx,0x80070057
   140006f38:	call   0x14000400c
   140006f3d:	int3   
   140006f3e:	mov    ecx,0x8007000e
   140006f43:	call   0x14000400c
   140006f48:	int3   
   140006f49:	mov    ecx,0x80070057
   140006f4e:	call   0x14000400c
   140006f53:	int3   
   140006f54:	mov    QWORD PTR [rsp+0x8],rbx
   140006f59:	mov    QWORD PTR [rsp+0x10],rbp
   140006f5e:	mov    QWORD PTR [rsp+0x18],rsi
   140006f63:	push   rdi
   140006f64:	push   r14
   140006f66:	push   r15
   140006f68:	sub    rsp,0x20
   140006f6c:	xor    r15d,r15d
   140006f6f:	movsxd rdi,r8d
   140006f72:	mov    rbp,rdx
   140006f75:	mov    rbx,rcx
   140006f78:	test   r8d,r8d
   140006f7b:	jne    0x140006fe3
   140006f7d:	mov    rax,QWORD PTR [rcx]
   140006f80:	lea    rdx,[rax-0x18]
   140006f84:	mov    rdi,QWORD PTR [rdx]
   140006f87:	cmp    DWORD PTR [rdx+0x8],r15d
   140006f8b:	je     0x140006fa8
   140006f8d:	cmp    DWORD PTR [rdx+0x10],r15d
   140006f91:	jge    0x140006fc1
   140006f93:	cmp    DWORD PTR [rax-0xc],r15d
   140006f97:	jl     0x140007059
   140006f9d:	mov    DWORD PTR [rax-0x10],r15d
   140006fa1:	mov    rax,QWORD PTR [rcx]
   140006fa4:	mov    WORD PTR [rax],r15w
   140006fa8:	mov    rbx,QWORD PTR [rsp+0x40]
   140006fad:	mov    rbp,QWORD PTR [rsp+0x48]
   140006fb2:	mov    rsi,QWORD PTR [rsp+0x50]
   140006fb7:	add    rsp,0x20
   140006fbb:	pop    r15
   140006fbd:	pop    r14
   140006fbf:	pop    rdi
   140006fc0:	ret    
   140006fc1:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140006fc6:	jg     0x140006fd1
   140006fc8:	mov    rcx,QWORD PTR [rdx]
   140006fcb:	mov    rax,QWORD PTR [rcx]
   140006fce:	call   QWORD PTR [rax+0x8]
   140006fd1:	mov    rax,QWORD PTR [rdi]
   140006fd4:	mov    rcx,rdi
   140006fd7:	call   QWORD PTR [rax+0x18]
   140006fda:	add    rax,0x18
   140006fde:	mov    QWORD PTR [rbx],rax
   140006fe1:	jmp    0x140006fa8
   140006fe3:	test   rdx,rdx
   140006fe6:	je     0x140007064
   140006fe8:	mov    rax,QWORD PTR [rcx]
   140006feb:	mov    rsi,rdx
   140006fee:	mov    r14d,DWORD PTR [rax-0x10]
   140006ff2:	sub    rsi,rax
   140006ff5:	sar    rsi,1
   140006ff8:	test   r8d,r8d
   140006ffb:	js     0x14000706f
   140006ffd:	mov    ecx,0x1
   140007002:	sub    ecx,DWORD PTR [rax-0x8]
   140007005:	mov    eax,DWORD PTR [rax-0xc]
   140007008:	sub    eax,edi
   14000700a:	or     ecx,eax
   14000700c:	jge    0x140007018
   14000700e:	mov    edx,edi
   140007010:	mov    rcx,rbx
   140007013:	call   0x140007098
   140007018:	mov    rcx,QWORD PTR [rbx]
   14000701b:	movsxd rdx,DWORD PTR [rcx-0xc]
   14000701f:	add    rdx,rdx
   140007022:	cmp    rsi,r14
   140007025:	lea    r14,[rdi+rdi*1]
   140007029:	mov    r9,r14
   14000702c:	ja     0x140007039
   14000702e:	lea    r8,[rcx+rsi*2]
   140007032:	call   0x140026edc
   140007037:	jmp    0x140007041
   140007039:	mov    r8,rbp
   14000703c:	call   0x140027788
   140007041:	mov    rax,QWORD PTR [rbx]
   140007044:	cmp    edi,DWORD PTR [rax-0xc]
   140007047:	jg     0x14000707a
   140007049:	mov    DWORD PTR [rax-0x10],edi
   14000704c:	mov    rax,QWORD PTR [rbx]
   14000704f:	mov    WORD PTR [r14+rax*1],r15w
   140007054:	jmp    0x140006fa8
   140007059:	mov    ecx,0x80070057
   14000705e:	call   0x14000400c
   140007063:	int3   
   140007064:	mov    ecx,0x80070057
   140007069:	call   0x14000400c
   14000706e:	int3   
   14000706f:	mov    ecx,0x80070057
   140007074:	call   0x14000400c
   140007079:	int3   
   14000707a:	mov    ecx,0x80070057
   14000707f:	call   0x14000400c
   140007084:	int3   
   140007085:	int3   
   140007086:	int3   
   140007087:	int3   
   140007088:	sub    rsp,0x28
   14000708c:	mov    ecx,0x8007000e
   140007091:	call   0x14000400c
   140007096:	int3   
   140007097:	int3   
   140007098:	sub    rsp,0x28
   14000709c:	mov    rax,QWORD PTR [rcx]
   14000709f:	mov    r8d,edx
   1400070a2:	mov    r9,rcx
   1400070a5:	cmp    DWORD PTR [rax-0x10],edx
   1400070a8:	cmovg  r8d,DWORD PTR [rax-0x10]
   1400070ad:	cmp    DWORD PTR [rax-0x8],0x1
   1400070b1:	jle    0x1400070bf
   1400070b3:	mov    edx,r8d
   1400070b6:	add    rsp,0x28
   1400070ba:	jmp    0x1400070f8
   1400070bf:	mov    ecx,DWORD PTR [rax-0xc]
   1400070c2:	cmp    ecx,r8d
   1400070c5:	jge    0x1400070f1
   1400070c7:	cmp    ecx,0x40000000
   1400070cd:	jle    0x1400070d7
   1400070cf:	add    ecx,0x100000
   1400070d5:	jmp    0x1400070e0
   1400070d7:	mov    eax,ecx
   1400070d9:	cdq    
   1400070da:	sub    eax,edx
   1400070dc:	sar    eax,1
   1400070de:	add    ecx,eax
   1400070e0:	cmp    ecx,r8d
   1400070e3:	cmovl  ecx,r8d
   1400070e7:	mov    edx,ecx
   1400070e9:	mov    rcx,r9
   1400070ec:	call   0x1400071a0
   1400070f1:	add    rsp,0x28
   1400070f5:	ret    
   1400070f6:	int3   
   1400070f7:	int3   
   1400070f8:	mov    rax,rsp
   1400070fb:	mov    QWORD PTR [rax+0x8],rbx
   1400070ff:	mov    QWORD PTR [rax+0x10],rbp
   140007103:	mov    QWORD PTR [rax+0x18],rsi
   140007107:	mov    QWORD PTR [rax+0x20],rdi
   14000710b:	push   r14
   14000710d:	sub    rsp,0x20
   140007111:	mov    rbx,QWORD PTR [rcx]
   140007114:	mov    rsi,rcx
   140007117:	mov    edi,edx
   140007119:	mov    rcx,QWORD PTR [rbx-0x18]
   14000711d:	mov    r14d,DWORD PTR [rbx-0x10]
   140007121:	mov    rax,QWORD PTR [rcx]
   140007124:	call   QWORD PTR [rax+0x20]
   140007127:	mov    r8d,0x2
   14000712d:	mov    edx,edi
   14000712f:	mov    r9,QWORD PTR [rax]
   140007132:	mov    rcx,rax
   140007135:	call   QWORD PTR [r9]
   140007138:	mov    rbp,rax
   14000713b:	test   rax,rax
   14000713e:	je     0x140007198
   140007140:	cmp    r14d,edi
   140007143:	mov    r8,rbx
   140007146:	cmovl  edi,r14d
   14000714a:	inc    edi
   14000714c:	movsxd rdx,edi
   14000714f:	lea    rdi,[rax+0x18]
   140007153:	add    rdx,rdx
   140007156:	mov    rcx,rdi
   140007159:	mov    r9,rdx
   14000715c:	call   0x140027788
   140007161:	mov    DWORD PTR [rbp+0x8],r14d
   140007165:	lock add DWORD PTR [rbx-0x8],0xffffffff
   14000716a:	jg     0x14000717a
   14000716c:	mov    rcx,QWORD PTR [rbx-0x18]
   140007170:	lea    rdx,[rbx-0x18]
   140007174:	mov    rax,QWORD PTR [rcx]
   140007177:	call   QWORD PTR [rax+0x8]
   14000717a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000717f:	mov    rbp,QWORD PTR [rsp+0x38]
   140007184:	mov    QWORD PTR [rsi],rdi
   140007187:	mov    rsi,QWORD PTR [rsp+0x40]
   14000718c:	mov    rdi,QWORD PTR [rsp+0x48]
   140007191:	add    rsp,0x20
   140007195:	pop    r14
   140007197:	ret    
   140007198:	call   0x140007088
   14000719d:	int3   
   14000719e:	int3   
   14000719f:	int3   
   1400071a0:	rex push rbx
   1400071a2:	sub    rsp,0x20
   1400071a6:	mov    r8d,edx
   1400071a9:	mov    rdx,QWORD PTR [rcx]
   1400071ac:	mov    rbx,rcx
   1400071af:	sub    rdx,0x18
   1400071b3:	mov    rcx,QWORD PTR [rdx]
   1400071b6:	cmp    DWORD PTR [rdx+0xc],r8d
   1400071ba:	jge    0x1400071e5
   1400071bc:	test   r8d,r8d
   1400071bf:	jle    0x1400071e5
   1400071c1:	mov    rax,QWORD PTR [rcx]
   1400071c4:	mov    r9d,0x2
   1400071ca:	call   QWORD PTR [rax+0x10]
   1400071cd:	test   rax,rax
   1400071d0:	je     0x1400071df
   1400071d2:	add    rax,0x18
   1400071d6:	mov    QWORD PTR [rbx],rax
   1400071d9:	add    rsp,0x20
   1400071dd:	pop    rbx
   1400071de:	ret    
   1400071df:	call   0x140007088
   1400071e4:	int3   
   1400071e5:	call   0x140007088
   1400071ea:	int3   
   1400071eb:	int3   
   1400071ec:	mov    rax,rsp
   1400071ef:	mov    QWORD PTR [rax+0x10],rdx
   1400071f3:	mov    QWORD PTR [rax+0x18],r8
   1400071f7:	mov    QWORD PTR [rax+0x20],r9
   1400071fb:	push   rbx
   1400071fc:	push   rbp
   1400071fd:	push   rsi
   1400071fe:	push   rdi
   1400071ff:	push   r12
   140007201:	push   r14
   140007203:	push   r15
   140007205:	sub    rsp,0x20
   140007209:	xor    r15d,r15d
   14000720c:	mov    rsi,rdx
   14000720f:	mov    rdi,rcx
   140007212:	lea    r12,[rax+0x18]
   140007216:	test   rdx,rdx
   140007219:	je     0x140007296
   14000721b:	mov    rax,QWORD PTR [rcx]
   14000721e:	mov    rdx,r12
   140007221:	mov    rcx,rsi
   140007224:	movsxd rbp,DWORD PTR [rax-0x10]
   140007228:	call   0x14002714c
   14000722d:	mov    r14d,eax
   140007230:	test   eax,eax
   140007232:	js     0x1400072a1
   140007234:	lea    ebx,[rax+rbp*1]
   140007237:	test   ebx,ebx
   140007239:	js     0x1400072ac
   14000723b:	mov    rax,QWORD PTR [rdi]
   14000723e:	lea    ecx,[r15+0x1]
   140007242:	sub    ecx,DWORD PTR [rax-0x8]
   140007245:	mov    eax,DWORD PTR [rax-0xc]
   140007248:	sub    eax,ebx
   14000724a:	or     ecx,eax
   14000724c:	jge    0x140007258
   14000724e:	mov    edx,ebx
   140007250:	mov    rcx,rdi
   140007253:	call   0x140007098
   140007258:	lea    eax,[r14+0x1]
   14000725c:	mov    r9,r12
   14000725f:	mov    r8,rsi
   140007262:	movsxd rdx,eax
   140007265:	mov    rax,QWORD PTR [rdi]
   140007268:	lea    rcx,[rax+rbp*2]
   14000726c:	call   0x1400275d4
   140007271:	mov    rax,QWORD PTR [rdi]
   140007274:	cmp    ebx,DWORD PTR [rax-0xc]
   140007277:	jg     0x1400072b7
   140007279:	mov    DWORD PTR [rax-0x10],ebx
   14000727c:	mov    rax,QWORD PTR [rdi]
   14000727f:	movsxd rcx,ebx
   140007282:	mov    WORD PTR [rax+rcx*2],r15w
   140007287:	add    rsp,0x20
   14000728b:	pop    r15
   14000728d:	pop    r14
   14000728f:	pop    r12
   140007291:	pop    rdi
   140007292:	pop    rsi
   140007293:	pop    rbp
   140007294:	pop    rbx
   140007295:	ret    
   140007296:	mov    ecx,0x80070057
   14000729b:	call   0x14000400c
   1400072a0:	int3   
   1400072a1:	mov    ecx,0x80004005
   1400072a6:	call   0x14000400c
   1400072ab:	int3   
   1400072ac:	mov    ecx,0x80070057
   1400072b1:	call   0x14000400c
   1400072b6:	int3   
   1400072b7:	mov    ecx,0x80070057
   1400072bc:	call   0x14000400c
   1400072c1:	int3   
   1400072c2:	int3   
   1400072c3:	int3   
   1400072c4:	rex push rbx
   1400072c6:	sub    rsp,0x20
   1400072ca:	mov    rbx,rcx
   1400072cd:	mov    rcx,QWORD PTR [rcx]
   1400072d0:	test   rcx,rcx
   1400072d3:	je     0x1400072de
   1400072d5:	call   0x1400273dc
   1400072da:	and    QWORD PTR [rbx],0x0
   1400072de:	and    DWORD PTR [rbx+0x8],0x0
   1400072e2:	and    DWORD PTR [rbx+0xc],0x0
   1400072e6:	add    rsp,0x20
   1400072ea:	pop    rbx
   1400072eb:	ret    
   1400072ec:	rex push rdi
   1400072ee:	sub    rsp,0x30
   1400072f2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400072fb:	mov    QWORD PTR [rsp+0x48],rbx
   140007300:	mov    QWORD PTR [rsp+0x50],rsi
   140007305:	mov    rbx,rcx
   140007308:	cmp    QWORD PTR [rcx],0x0
   14000730c:	je     0x140007350
   14000730e:	xor    edi,edi
   140007310:	cmp    DWORD PTR [rcx+0x8],edi
   140007313:	jle    0x140007344
   140007315:	xor    esi,esi
   140007317:	mov    rcx,QWORD PTR [rbx]
   14000731a:	add    rcx,rsi
   14000731d:	mov    QWORD PTR [rsp+0x40],rcx
   140007322:	mov    rdx,QWORD PTR [rcx]
   140007325:	sub    rdx,0x18
   140007329:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000732e:	jg     0x140007339
   140007330:	mov    rcx,QWORD PTR [rdx]
   140007333:	mov    rax,QWORD PTR [rcx]
   140007336:	call   QWORD PTR [rax+0x8]
   140007339:	inc    edi
   14000733b:	add    rsi,0x8
   14000733f:	cmp    edi,DWORD PTR [rbx+0x8]
   140007342:	jl     0x140007317
   140007344:	mov    rcx,QWORD PTR [rbx]
   140007347:	call   0x1400273dc
   14000734c:	and    QWORD PTR [rbx],0x0
   140007350:	and    DWORD PTR [rbx+0x8],0x0
   140007354:	and    DWORD PTR [rbx+0xc],0x0
   140007358:	mov    rbx,QWORD PTR [rsp+0x48]
   14000735d:	mov    rsi,QWORD PTR [rsp+0x50]
   140007362:	add    rsp,0x30
   140007366:	pop    rdi
   140007367:	ret    
   140007368:	mov    rax,rsp
   14000736b:	push   rdi
   14000736c:	push   r14
   14000736e:	push   r15
   140007370:	sub    rsp,0x30
   140007374:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14000737c:	mov    QWORD PTR [rax+0x10],rbx
   140007380:	mov    QWORD PTR [rax+0x18],rbp
   140007384:	mov    QWORD PTR [rax+0x20],rsi
   140007388:	mov    r14,r8
   14000738b:	xor    r15d,r15d
   14000738e:	test   rcx,rcx
   140007391:	jne    0x14000739a
   140007393:	xor    al,al
   140007395:	jmp    0x140007461
   14000739a:	cmp    WORD PTR [rcx],r15w
   14000739e:	je     0x14000745f
   1400073a4:	call   0x140027810
   1400073a9:	mov    rdi,rax
   1400073ac:	test   rax,rax
   1400073af:	je     0x140007393
   1400073b1:	mov    bpl,r15b
   1400073b4:	mov    rsi,rax
   1400073b7:	mov    edx,0x2c
   1400073bc:	mov    rcx,rsi
   1400073bf:	call   0x140026e50
   1400073c4:	mov    rbx,rax
   1400073c7:	test   rax,rax
   1400073ca:	je     0x1400073d0
   1400073cc:	mov    WORD PTR [rax],r15w
   1400073d0:	lea    rcx,[rip+0x52f51]        # 0x14005a328
   1400073d7:	mov    rdx,QWORD PTR [rip+0x52f4a]        # 0x14005a328
   1400073de:	call   QWORD PTR [rdx+0x18]
   1400073e1:	add    rax,0x18
   1400073e5:	mov    QWORD PTR [rsp+0x50],rax
   1400073ea:	test   rsi,rsi
   1400073ed:	jne    0x1400073f4
   1400073ef:	mov    eax,r15d
   1400073f2:	jmp    0x140007402
   1400073f4:	or     rax,0xffffffffffffffff
   1400073f8:	inc    rax
   1400073fb:	cmp    WORD PTR [rsi+rax*2],r15w
   140007400:	jne    0x1400073f8
   140007402:	mov    r8d,eax
   140007405:	mov    rdx,rsi
   140007408:	lea    rcx,[rsp+0x50]
   14000740d:	call   0x140006f54
   140007412:	lea    rdx,[rsp+0x50]
   140007417:	mov    rcx,r14
   14000741a:	call   0x140006c28
   14000741f:	test   rbx,rbx
   140007422:	je     0x14000742a
   140007424:	add    rbx,0x2
   140007428:	jmp    0x14000742d
   14000742a:	mov    bpl,0x1
   14000742d:	mov    rsi,rbx
   140007430:	mov    rdx,QWORD PTR [rsp+0x50]
   140007435:	add    rdx,0xffffffffffffffe8
   140007439:	or     eax,0xffffffff
   14000743c:	lock xadd DWORD PTR [rdx+0x10],eax
   140007441:	dec    eax
   140007443:	jg     0x14000744e
   140007445:	mov    rcx,QWORD PTR [rdx]
   140007448:	mov    rax,QWORD PTR [rcx]
   14000744b:	call   QWORD PTR [rax+0x8]
   14000744e:	test   bpl,bpl
   140007451:	je     0x1400073b7
   140007457:	mov    rcx,rdi
   14000745a:	call   0x1400273dc
   14000745f:	mov    al,0x1
   140007461:	mov    rbx,QWORD PTR [rsp+0x58]
   140007466:	mov    rbp,QWORD PTR [rsp+0x60]
   14000746b:	mov    rsi,QWORD PTR [rsp+0x68]
   140007470:	add    rsp,0x30
   140007474:	pop    r15
   140007476:	pop    r14
   140007478:	pop    rdi
   140007479:	ret    
   14000747a:	int3   
   14000747b:	int3   
   14000747c:	mov    rax,rsp
   14000747f:	push   rbp
   140007480:	push   rsi
   140007481:	push   rdi
   140007482:	mov    rbp,rsp
   140007485:	sub    rsp,0x60
   140007489:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140007491:	mov    QWORD PTR [rax+0x10],rbx
   140007495:	mov    rax,QWORD PTR [rip+0x51bec]        # 0x140059088
   14000749c:	xor    rax,rsp
   14000749f:	mov    QWORD PTR [rbp-0x8],rax
   1400074a3:	mov    rbx,rcx
   1400074a6:	mov    QWORD PTR [rbp-0x30],rcx
   1400074aa:	xor    edi,edi
   1400074ac:	mov    DWORD PTR [rbp-0x40],edi
   1400074af:	mov    QWORD PTR [rbp-0x18],rdi
   1400074b3:	mov    QWORD PTR [rbp-0x10],rdi
   1400074b7:	lea    esi,[rdi+0x7]
   1400074ba:	mov    QWORD PTR [rbp-0x10],rsi
   1400074be:	mov    QWORD PTR [rbp-0x18],rdi
   1400074c2:	mov    WORD PTR [rbp-0x28],di
   1400074c6:	mov    rdx,QWORD PTR [r8]
   1400074c9:	lea    rcx,[rbp-0x28]
   1400074cd:	call   0x14000324c
   1400074d2:	nop
   1400074d3:	lea    rcx,[rbx+0x8]
   1400074d7:	mov    QWORD PTR [rcx+0x18],rsi
   1400074db:	mov    QWORD PTR [rcx+0x10],rdi
   1400074df:	mov    WORD PTR [rcx],di
   1400074e2:	or     r9,0xffffffffffffffff
   1400074e6:	xor    r8d,r8d
   1400074e9:	lea    rdx,[rbp-0x28]
   1400074ed:	call   0x1400039d4
   1400074f2:	nop
   1400074f3:	mov    DWORD PTR [rbp-0x40],0x1
   1400074fa:	cmp    QWORD PTR [rbp-0x10],0x8
   1400074ff:	jb     0x14000750a
   140007501:	mov    rcx,QWORD PTR [rbp-0x28]
   140007505:	call   0x14002657c
   14000750a:	mov    QWORD PTR [rbp-0x10],rsi
   14000750e:	mov    QWORD PTR [rbp-0x18],rdi
   140007512:	mov    WORD PTR [rbp-0x28],di
   140007516:	mov    rax,rbx
   140007519:	mov    rcx,QWORD PTR [rbp-0x8]
   14000751d:	xor    rcx,rsp
   140007520:	call   0x1400265a0
   140007525:	mov    rbx,QWORD PTR [rsp+0x88]
   14000752d:	add    rsp,0x60
   140007531:	pop    rdi
   140007532:	pop    rsi
   140007533:	pop    rbp
   140007534:	ret    
   140007535:	int3   
   140007536:	int3   
   140007537:	int3   
   140007538:	mov    QWORD PTR [rsp+0x18],r8
   14000753d:	mov    QWORD PTR [rsp+0x10],rdx
   140007542:	push   rbp
   140007543:	push   rbx
   140007544:	push   rsi
   140007545:	push   rdi
   140007546:	push   r12
   140007548:	push   r14
   14000754a:	push   r15
   14000754c:	mov    rbp,rsp
   14000754f:	sub    rsp,0x70
   140007553:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   14000755b:	mov    rax,QWORD PTR [rip+0x51b26]        # 0x140059088
   140007562:	xor    rax,rsp
   140007565:	mov    QWORD PTR [rbp-0x8],rax
   140007569:	mov    rsi,rcx
   14000756c:	mov    QWORD PTR [rbp-0x10],r9
   140007570:	lea    rax,[rbp-0x50]
   140007574:	mov    QWORD PTR [rbp-0x28],rax
   140007578:	mov    r15d,0x7
   14000757e:	mov    QWORD PTR [rbp-0x30],r15
   140007582:	xor    r14d,r14d
   140007585:	mov    QWORD PTR [rbp-0x38],r14
   140007589:	mov    WORD PTR [rbp-0x48],r14w
   14000758e:	lea    rdi,[r9+0x8]
   140007592:	or     r12,0xffffffffffffffff
   140007596:	mov    r9,r12
   140007599:	xor    r8d,r8d
   14000759c:	mov    rdx,rdi
   14000759f:	lea    rcx,[rbp-0x48]
   1400075a3:	call   0x1400039d4
   1400075a8:	nop
   1400075a9:	lea    rax,[rbp-0x50]
   1400075ad:	mov    QWORD PTR [rbp-0x20],rax
   1400075b1:	mov    r11,QWORD PTR [rbp+0x50]
   1400075b5:	mov    rbx,QWORD PTR [rbp+0x48]
   1400075b9:	cmp    rbx,r11
   1400075bc:	je     0x14000763c
   1400075be:	mov    r10,QWORD PTR [rbp-0x38]
   1400075c2:	lea    rdx,[rbp-0x48]
   1400075c6:	cmp    QWORD PTR [rbp-0x30],0x8
   1400075cb:	cmovae rdx,QWORD PTR [rbp-0x48]
   1400075d0:	mov    r9,QWORD PTR [rbx+0x10]
   1400075d4:	cmp    QWORD PTR [rbx+0x18],0x8
   1400075d9:	jb     0x1400075e0
   1400075db:	mov    r8,QWORD PTR [rbx]
   1400075de:	jmp    0x1400075e3
   1400075e0:	mov    r8,rbx
   1400075e3:	mov    rcx,r10
   1400075e6:	cmp    r9,r10
   1400075e9:	cmovb  rcx,r9
   1400075ed:	test   rcx,rcx
   1400075f0:	jmp    0x140007606
   1400075f2:	movzx  eax,WORD PTR [rdx]
   1400075f5:	cmp    WORD PTR [r8],ax
   1400075f9:	jne    0x14000760a
   1400075fb:	add    r8,0x2
   1400075ff:	add    rdx,0x2
   140007603:	dec    rcx
   140007606:	jne    0x1400075f2
   140007608:	jmp    0x140007613
   14000760a:	sbb    eax,eax
   14000760c:	and    eax,0xfffffffe
   14000760f:	inc    eax
   140007611:	jmp    0x140007616
   140007613:	mov    eax,r14d
   140007616:	movsxd rcx,eax
   140007619:	mov    eax,r14d
   14000761c:	cmp    r9,r10
   14000761f:	setne  al
   140007622:	cmp    r9,r10
   140007625:	cmovb  eax,r12d
   140007629:	test   rcx,rcx
   14000762c:	cmovne eax,ecx
   14000762f:	test   eax,eax
   140007631:	je     0x14000763c
   140007633:	add    rbx,0x20
   140007637:	cmp    rbx,r11
   14000763a:	jne    0x1400075c2
   14000763c:	cmp    QWORD PTR [rbp-0x30],0x8
   140007641:	jb     0x14000764c
   140007643:	mov    rcx,QWORD PTR [rbp-0x48]
   140007647:	call   0x14002657c
   14000764c:	mov    QWORD PTR [rbp-0x30],r15
   140007650:	mov    QWORD PTR [rbp-0x38],r14
   140007654:	mov    WORD PTR [rbp-0x48],r14w
   140007659:	mov    QWORD PTR [rbp+0x48],rbx
   14000765d:	mov    QWORD PTR [rsi],rbx
   140007660:	cmp    QWORD PTR [rdi+0x18],0x8
   140007665:	jb     0x14000766f
   140007667:	mov    rcx,QWORD PTR [rdi]
   14000766a:	call   0x14002657c
   14000766f:	mov    QWORD PTR [rdi+0x18],r15
   140007673:	mov    QWORD PTR [rdi+0x10],r14
   140007677:	mov    WORD PTR [rdi],r14w
   14000767b:	mov    rax,rsi
   14000767e:	mov    rcx,QWORD PTR [rbp-0x8]
   140007682:	xor    rcx,rsp
   140007685:	call   0x1400265a0
   14000768a:	add    rsp,0x70
   14000768e:	pop    r15
   140007690:	pop    r14
   140007692:	pop    r12
   140007694:	pop    rdi
   140007695:	pop    rsi
   140007696:	pop    rbx
   140007697:	pop    rbp
   140007698:	ret    
   140007699:	int3   
   14000769a:	int3   
   14000769b:	int3   
   14000769c:	mov    r11,rsp
   14000769f:	push   rbx
   1400076a0:	push   rdi
   1400076a1:	sub    rsp,0x88
   1400076a8:	mov    rax,QWORD PTR [rip+0x519d9]        # 0x140059088
   1400076af:	xor    rax,rsp
   1400076b2:	mov    QWORD PTR [rsp+0x70],rax
   1400076b7:	mov    QWORD PTR [r11-0x70],r9
   1400076bb:	mov    rbx,rcx
   1400076be:	lea    rax,[r11-0x68]
   1400076c2:	mov    r9d,r8d
   1400076c5:	mov    edi,edx
   1400076c7:	lea    rcx,[r11-0x68]
   1400076cb:	lea    r8,[rip+0x3e26e]        # 0x140045940
   1400076d2:	mov    edx,0x3c
   1400076d7:	mov    QWORD PTR [r11-0x78],rax
   1400076db:	call   0x140004164
   1400076e0:	mov    rax,QWORD PTR [rbx]
   1400076e3:	lea    r9,[rsp+0x20]
   1400076e8:	mov    r8d,0x2
   1400076ee:	mov    edx,edi
   1400076f0:	mov    rcx,rbx
   1400076f3:	call   QWORD PTR [rax]
   1400076f5:	mov    rcx,QWORD PTR [rsp+0x70]
   1400076fa:	xor    rcx,rsp
   1400076fd:	call   0x1400265a0
   140007702:	add    rsp,0x88
   140007709:	pop    rdi
   14000770a:	pop    rbx
   14000770b:	ret    
   14000770c:	mov    QWORD PTR [rsp+0x10],rdx
   140007711:	push   rbx
   140007712:	sub    rsp,0x30
   140007716:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000771f:	mov    rbx,rdx
   140007722:	and    DWORD PTR [rsp+0x20],0x0
   140007727:	lea    rdx,[rcx+0x908]
   14000772e:	mov    rcx,rbx
   140007731:	call   0x14000d780
   140007736:	nop
   140007737:	mov    DWORD PTR [rsp+0x20],0x1
   14000773f:	mov    rax,rbx
   140007742:	add    rsp,0x30
   140007746:	pop    rbx
   140007747:	ret    
   140007748:	int3   
   140007749:	int3   
   14000774a:	int3   
   14000774b:	int3   
   14000774c:	mov    QWORD PTR [rsp+0x10],rdx
   140007751:	push   rbx
   140007752:	sub    rsp,0x30
   140007756:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000775f:	mov    rbx,rdx
   140007762:	and    DWORD PTR [rsp+0x20],0x0
   140007767:	lea    rdx,[rcx+0x918]
   14000776e:	mov    rcx,rbx
   140007771:	call   0x14000d780
   140007776:	nop
   140007777:	mov    DWORD PTR [rsp+0x20],0x1
   14000777f:	mov    rax,rbx
   140007782:	add    rsp,0x30
   140007786:	pop    rbx
   140007787:	ret    
   140007788:	int3   
   140007789:	int3   
   14000778a:	int3   
   14000778b:	int3   
   14000778c:	mov    QWORD PTR [rsp+0x10],rdx
   140007791:	push   rbx
   140007792:	sub    rsp,0x30
   140007796:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000779f:	mov    rbx,rdx
   1400077a2:	and    DWORD PTR [rsp+0x20],0x0
   1400077a7:	lea    rdx,[rcx+0x940]
   1400077ae:	mov    rcx,rbx
   1400077b1:	call   0x14000d780
   1400077b6:	nop
   1400077b7:	mov    DWORD PTR [rsp+0x20],0x1
   1400077bf:	mov    rax,rbx
   1400077c2:	add    rsp,0x30
   1400077c6:	pop    rbx
   1400077c7:	ret    
   1400077c8:	int3   
   1400077c9:	int3   
   1400077ca:	int3   
   1400077cb:	int3   
   1400077cc:	mov    QWORD PTR [rsp+0x10],rdx
   1400077d1:	push   rbx
   1400077d2:	sub    rsp,0x30
   1400077d6:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400077df:	mov    rbx,rdx
   1400077e2:	and    DWORD PTR [rsp+0x20],0x0
   1400077e7:	lea    rdx,[rcx+0x930]
   1400077ee:	mov    rcx,rbx
   1400077f1:	call   0x14000d780
   1400077f6:	nop
   1400077f7:	mov    DWORD PTR [rsp+0x20],0x1
   1400077ff:	mov    rax,rbx
   140007802:	add    rsp,0x30
   140007806:	pop    rbx
   140007807:	ret    
   140007808:	int3   
   140007809:	int3   
   14000780a:	int3   
   14000780b:	int3   
   14000780c:	mov    QWORD PTR [rsp+0x10],rdx
   140007811:	push   rbx
   140007812:	sub    rsp,0x30
   140007816:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000781f:	mov    rbx,rdx
   140007822:	and    DWORD PTR [rsp+0x20],0x0
   140007827:	lea    rdx,[rcx+0x950]
   14000782e:	mov    rcx,rbx
   140007831:	call   0x140006af0
   140007836:	nop
   140007837:	mov    DWORD PTR [rsp+0x20],0x1
   14000783f:	mov    rax,rbx
   140007842:	add    rsp,0x30
   140007846:	pop    rbx
   140007847:	ret    
   140007848:	int3   
   140007849:	int3   
   14000784a:	int3   
   14000784b:	int3   
   14000784c:	mov    rax,rsp
   14000784f:	push   rsi
   140007850:	push   rdi
   140007851:	push   r12
   140007853:	push   r14
   140007855:	push   r15
   140007857:	sub    rsp,0x50
   14000785b:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   140007863:	mov    QWORD PTR [rax+0x8],rbx
   140007867:	mov    QWORD PTR [rax+0x20],rbp
   14000786b:	mov    rdi,rdx
   14000786e:	mov    rsi,rcx
   140007871:	mov    ebp,0x99999999
   140007876:	cmp    DWORD PTR [rdx+0x30],ebp
   140007879:	je     0x140007885
   14000787b:	call   0x14000ac74
   140007880:	jmp    0x140007b87
   140007885:	xor    r15d,r15d
   140007888:	cmp    BYTE PTR [rdx+0x45d],r15b
   14000788f:	je     0x140007896
   140007891:	call   0x14000ad50
   140007896:	cmp    WORD PTR [rdi+0x8d6],r15w
   14000789e:	je     0x1400078d0
   1400078a0:	mov    rdx,rdi
   1400078a3:	mov    rcx,rsi
   1400078a6:	call   0x1400083ec
   1400078ab:	cmp    DWORD PTR [rsi],r15d
   1400078ae:	je     0x1400078d0
   1400078b0:	cmp    DWORD PTR [rsi+0x10],r15d
   1400078b4:	je     0x140007b87
   1400078ba:	xor    r9d,r9d
   1400078bd:	xor    r8d,r8d
   1400078c0:	or     edx,0xffffffff
   1400078c3:	mov    rcx,rsi
   1400078c6:	call   0x140007bec
   1400078cb:	jmp    0x140007b87
   1400078d0:	cmp    BYTE PTR [rdi+0x45c],r15b
   1400078d7:	jne    0x1400078e3
   1400078d9:	cmp    WORD PTR [rdi+0x462],r15w
   1400078e1:	je     0x14000790a
   1400078e3:	mov    rdx,rdi
   1400078e6:	mov    rcx,rsi
   1400078e9:	call   0x14000b02c
   1400078ee:	cmp    DWORD PTR [rsi],r15d
   1400078f1:	je     0x14000790a
   1400078f3:	cmp    DWORD PTR [rsi+0x10],r15d
   1400078f7:	je     0x14000790a
   1400078f9:	xor    r9d,r9d
   1400078fc:	xor    r8d,r8d
   1400078ff:	or     edx,0xffffffff
   140007902:	mov    rcx,rsi
   140007905:	call   0x140007bec
   14000790a:	mov    edx,DWORD PTR [rdi+0x34]
   14000790d:	test   edx,edx
   14000790f:	je     0x140007929
   140007911:	lea    rcx,[rdi+0x4c]
   140007915:	movzx  eax,WORD PTR [rcx]
   140007918:	neg    ax
   14000791b:	sbb    r8,r8
   14000791e:	and    r8,rcx
   140007921:	mov    rcx,rsi
   140007924:	call   0x140009070
   140007929:	mov    r12d,0x1
   14000792f:	cmp    DWORD PTR [rdi+0x1c],r15d
   140007933:	je     0x140007940
   140007935:	mov    edx,r12d
   140007938:	mov    rcx,rsi
   14000793b:	call   0x140009d78
   140007940:	mov    r8d,DWORD PTR [rdi+0x24]
   140007944:	cmp    r8d,ebp
   140007947:	je     0x140007954
   140007949:	mov    edx,r12d
   14000794c:	mov    rcx,rsi
   14000794f:	call   0x14000a1ec
   140007954:	mov    r8d,DWORD PTR [rdi+0x2c]
   140007958:	cmp    r8d,ebp
   14000795b:	je     0x140007968
   14000795d:	mov    edx,r12d
   140007960:	mov    rcx,rsi
   140007963:	call   0x14000a5bc
   140007968:	cmp    BYTE PTR [rdi+0x458],r15b
   14000796f:	je     0x140007986
   140007971:	lea    r8,[rdi+0x254]
   140007978:	mov    edx,DWORD PTR [rdi+0x454]
   14000797e:	mov    rcx,rsi
   140007981:	call   0x14000a8b0
   140007986:	lea    rdx,[rsp+0x28]
   14000798b:	mov    rcx,rdi
   14000798e:	call   0x14000770c
   140007993:	nop
   140007994:	mov    ebx,DWORD PTR [rax+0x8]
   140007997:	lea    rcx,[rsp+0x28]
   14000799c:	call   0x1400072ec
   1400079a1:	test   ebx,ebx
   1400079a3:	je     0x1400079e5
   1400079a5:	lea    rdx,[rsp+0x38]
   1400079aa:	mov    rcx,rdi
   1400079ad:	call   0x14000770c
   1400079b2:	nop
   1400079b3:	mov    rdx,rax
   1400079b6:	mov    rcx,rsi
   1400079b9:	call   0x14000bbf0
   1400079be:	nop
   1400079bf:	lea    rcx,[rsp+0x38]
   1400079c4:	call   0x1400072ec
   1400079c9:	cmp    DWORD PTR [rsi],r15d
   1400079cc:	je     0x1400079e5
   1400079ce:	cmp    DWORD PTR [rsi+0x10],r15d
   1400079d2:	je     0x1400079e5
   1400079d4:	xor    r9d,r9d
   1400079d7:	xor    r8d,r8d
   1400079da:	or     edx,0xffffffff
   1400079dd:	mov    rcx,rsi
   1400079e0:	call   0x140007bec
   1400079e5:	cmp    DWORD PTR [rdi+0x18],r15d
   1400079e9:	je     0x1400079f5
   1400079eb:	xor    edx,edx
   1400079ed:	mov    rcx,rsi
   1400079f0:	call   0x140009d78
   1400079f5:	mov    r8d,DWORD PTR [rdi+0x20]
   1400079f9:	cmp    r8d,ebp
   1400079fc:	je     0x140007a08
   1400079fe:	xor    edx,edx
   140007a00:	mov    rcx,rsi
   140007a03:	call   0x14000a1ec
   140007a08:	mov    r8d,DWORD PTR [rdi+0x28]
   140007a0c:	cmp    r8d,ebp
   140007a0f:	je     0x140007a1b
   140007a11:	xor    edx,edx
   140007a13:	mov    rcx,rsi
   140007a16:	call   0x14000a5bc
   140007a1b:	cmp    DWORD PTR [rdi+0x40],r15d
   140007a1f:	je     0x140007a2c
   140007a21:	mov    edx,DWORD PTR [rdi+0x48]
   140007a24:	mov    rcx,rsi
   140007a27:	call   0x140009508
   140007a2c:	mov    edx,DWORD PTR [rdi+0x38]
   140007a2f:	cmp    edx,0xfffffffe
   140007a32:	jne    0x140007a3a
   140007a34:	cmp    BYTE PTR [rdi+0x3c],r15b
   140007a38:	je     0x140007a56
   140007a3a:	lea    rcx,[rdi+0x4c]
   140007a3e:	movzx  eax,WORD PTR [rcx]
   140007a41:	neg    ax
   140007a44:	sbb    r8,r8
   140007a47:	and    r8,rcx
   140007a4a:	mov    r9b,BYTE PTR [rdi+0x3c]
   140007a4e:	mov    rcx,rsi
   140007a51:	call   0x140007bec
   140007a56:	mov    rax,QWORD PTR [rdi+0x950]
   140007a5d:	cmp    DWORD PTR [rax-0x10],r15d
   140007a61:	je     0x140007a9e
   140007a63:	lea    rdx,[rsp+0x88]
   140007a6b:	mov    rcx,rdi
   140007a6e:	call   0x14000780c
   140007a73:	nop
   140007a74:	mov    rdx,QWORD PTR [rsi+0x8]
   140007a78:	mov    rcx,QWORD PTR [rax]
   140007a7b:	call   0x14000f0ac
   140007a80:	mov    DWORD PTR [rsi],eax
   140007a82:	mov    rdx,QWORD PTR [rsp+0x88]
   140007a8a:	add    rdx,0xffffffffffffffe8
   140007a8e:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140007a93:	jg     0x140007a9e
   140007a95:	mov    rcx,QWORD PTR [rdx]
   140007a98:	mov    rax,QWORD PTR [rcx]
   140007a9b:	call   QWORD PTR [rax+0x8]
   140007a9e:	movsxd rax,DWORD PTR [rdi+0x960]
   140007aa5:	test   eax,eax
   140007aa7:	jle    0x140007b76
   140007aad:	mov    ebp,r15d
   140007ab0:	mov    rbx,r15
   140007ab3:	mov    r14,rax
   140007ab6:	mov    rcx,QWORD PTR [rsi+0x8]
   140007aba:	mov    rax,QWORD PTR [rcx]
   140007abd:	xor    r9d,r9d
   140007ac0:	xor    r8d,r8d
   140007ac3:	mov    edx,0x61230bbb
   140007ac8:	call   QWORD PTR [rax]
   140007aca:	test   rbx,rbx
   140007acd:	js     0x140007b61
   140007ad3:	cmp    ebp,DWORD PTR [rdi+0x960]
   140007ad9:	jge    0x140007b61
   140007adf:	mov    rcx,QWORD PTR [rsi+0x8]
   140007ae3:	mov    rax,QWORD PTR [rdi+0x958]
   140007aea:	mov    rdx,QWORD PTR [rax+rbx*8]
   140007aee:	mov    QWORD PTR [rsp+0x90],rdx
   140007af6:	mov    rax,QWORD PTR [rcx]
   140007af9:	lea    r9,[rsp+0x90]
   140007b01:	mov    r8d,r12d
   140007b04:	mov    edx,0x61230bc1
   140007b09:	call   QWORD PTR [rax]
   140007b0b:	mov    rcx,QWORD PTR [rsi+0x8]
   140007b0f:	mov    rax,QWORD PTR [rcx]
   140007b12:	xor    r9d,r9d
   140007b15:	xor    r8d,r8d
   140007b18:	mov    edx,0x61230bbb
   140007b1d:	call   QWORD PTR [rax]
   140007b1f:	cmp    ebp,DWORD PTR [rdi+0x960]
   140007b25:	jge    0x140007b4c
   140007b27:	mov    rcx,QWORD PTR [rdi+0x958]
   140007b2e:	mov    rdx,QWORD PTR [rsi+0x8]
   140007b32:	mov    rcx,QWORD PTR [rcx+rbx*8]
   140007b36:	call   0x140002ce0
   140007b3b:	add    ebp,r12d
   140007b3e:	add    rbx,r12
   140007b41:	cmp    rbx,r14
   140007b44:	jl     0x140007ab6
   140007b4a:	jmp    0x140007b76
   140007b4c:	xor    r9d,r9d
   140007b4f:	xor    r8d,r8d
   140007b52:	mov    edx,r12d
   140007b55:	mov    ecx,0xc000008c
   140007b5a:	call   QWORD PTR [rip+0x39840]        # 0x1400413a0
   140007b60:	int3   
   140007b61:	xor    r9d,r9d
   140007b64:	xor    r8d,r8d
   140007b67:	mov    edx,r12d
   140007b6a:	mov    ecx,0xc000008c
   140007b6f:	call   QWORD PTR [rip+0x3982b]        # 0x1400413a0
   140007b75:	int3   
   140007b76:	cmp    DWORD PTR [rdi+0x928],r15d
   140007b7d:	je     0x140007b87
   140007b7f:	mov    rcx,rsi
   140007b82:	call   0x14000c404
   140007b87:	mov    eax,DWORD PTR [rsi]
   140007b89:	lea    r11,[rsp+0x50]
   140007b8e:	mov    rbx,QWORD PTR [r11+0x30]
   140007b92:	mov    rbp,QWORD PTR [r11+0x48]
   140007b96:	mov    rsp,r11
   140007b99:	pop    r15
   140007b9b:	pop    r14
   140007b9d:	pop    r12
   140007b9f:	pop    rdi
   140007ba0:	pop    rsi
   140007ba1:	ret    
   140007ba2:	int3   
   140007ba3:	int3   
   140007ba4:	mov    rax,rsp
   140007ba7:	mov    QWORD PTR [rax+0x8],rcx
   140007bab:	sub    rsp,0x58
   140007baf:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140007bb7:	mov    r10,rdx
   140007bba:	mov    DWORD PTR [rax-0x30],0x1
   140007bc1:	and    DWORD PTR [rax-0x38],0x0
   140007bc5:	xor    r9d,r9d
   140007bc8:	mov    r8d,0x4b8
   140007bce:	mov    rdx,QWORD PTR [rip+0x5504b]        # 0x14005cc20
   140007bd5:	mov    rcx,r10
   140007bd8:	call   0x1400150ac
   140007bdd:	nop
   140007bde:	mov    al,0x1
   140007be0:	jmp    0x140007be4
   140007be2:	xor    al,al
   140007be4:	add    rsp,0x58
   140007be8:	ret    
   140007be9:	int3   
   140007bea:	int3   
   140007beb:	int3   
   140007bec:	rex push rbx
   140007bee:	push   rsi
   140007bef:	push   rdi
   140007bf0:	push   r12
   140007bf2:	push   r13
   140007bf4:	push   r14
   140007bf6:	push   r15
   140007bf8:	sub    rsp,0x7a0
   140007bff:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   140007c0b:	mov    rax,QWORD PTR [rip+0x51476]        # 0x140059088
   140007c12:	xor    rax,rsp
   140007c15:	mov    QWORD PTR [rsp+0x790],rax
   140007c1d:	mov    BYTE PTR [rsp+0x40],r9b
   140007c22:	mov    rsi,r8
   140007c25:	mov    r14d,edx
   140007c28:	mov    rdi,rcx
   140007c2b:	mov    QWORD PTR [rsp+0x78],rcx
   140007c30:	mov    r9d,edx
   140007c33:	xor    r8d,r8d
   140007c36:	mov    dl,0x8
   140007c38:	call   0x140015618
   140007c3d:	xor    r15d,r15d
   140007c40:	cmp    BYTE PTR [rip+0x54e0b],r15b        # 0x14005ca52
   140007c47:	jne    0x140007ce4
   140007c4d:	lea    rax,[rsp+0x50]
   140007c52:	mov    QWORD PTR [rsp+0x20],rax
   140007c57:	mov    r9d,0x20019
   140007c5d:	xor    r8d,r8d
   140007c60:	lea    rdx,[rip+0x3e129]        # 0x140045d90
   140007c67:	mov    rcx,0xffffffff80000002
   140007c6e:	call   QWORD PTR [rip+0x393ac]        # 0x140041020
   140007c74:	test   eax,eax
   140007c76:	jne    0x140007cdd
   140007c78:	mov    DWORD PTR [rsp+0x48],r15d
   140007c7d:	mov    DWORD PTR [rsp+0x60],0x4
   140007c85:	mov    DWORD PTR [rsp+0x44],0x4
   140007c8d:	lea    rax,[rsp+0x60]
   140007c92:	mov    QWORD PTR [rsp+0x28],rax
   140007c97:	lea    rax,[rsp+0x48]
   140007c9c:	mov    QWORD PTR [rsp+0x20],rax
   140007ca1:	lea    r9,[rsp+0x44]
   140007ca6:	xor    r8d,r8d
   140007ca9:	lea    rdx,[rip+0x3e128]        # 0x140045dd8
   140007cb0:	mov    rcx,QWORD PTR [rsp+0x50]
   140007cb5:	call   QWORD PTR [rip+0x3935d]        # 0x140041018
   140007cbb:	mov    ebx,eax
   140007cbd:	mov    rcx,QWORD PTR [rsp+0x50]
   140007cc2:	call   QWORD PTR [rip+0x39370]        # 0x140041038
   140007cc8:	test   ebx,ebx
   140007cca:	jne    0x140007cdd
   140007ccc:	cmp    DWORD PTR [rsp+0x44],0x4
   140007cd1:	jne    0x140007cdd
   140007cd3:	cmp    DWORD PTR [rsp+0x48],0x1
   140007cd8:	jne    0x140007cdd
   140007cda:	mov    BYTE PTR [r15],r15b
   140007cdd:	mov    BYTE PTR [rip+0x54d6e],0x1        # 0x14005ca52
   140007ce4:	xor    edx,edx
   140007ce6:	mov    rcx,rsi
   140007ce9:	call   0x140018b6c
   140007cee:	test   eax,eax
   140007cf0:	je     0x140007d3a
   140007cf2:	mov    rcx,QWORD PTR [rdi+0x8]
   140007cf6:	mov    rax,QWORD PTR [rcx]
   140007cf9:	xor    r9d,r9d
   140007cfc:	xor    r8d,r8d
   140007cff:	mov    edx,0xe123051a
   140007d04:	call   QWORD PTR [rax]
   140007d06:	mov    DWORD PTR [rdi],0x1
   140007d0c:	mov    DWORD PTR [rsp+0x350],0x4
   140007d17:	lea    rax,[rsp+0x350]
   140007d1f:	test   rax,rax
   140007d22:	je     0x1400083c8
   140007d28:	lea    rcx,[rsp+0x350]
   140007d30:	call   0x1400256cc
   140007d35:	jmp    0x1400083c8
   140007d3a:	lea    rax,[rip+0x3e72f]        # 0x140046470
   140007d41:	mov    QWORD PTR [rsp+0x90],rax
   140007d49:	lea    rax,[rip+0x3da58]        # 0x1400457a8
   140007d50:	mov    QWORD PTR [rsp+0x98],rax
   140007d58:	lea    rax,[rip+0x3e4d1]        # 0x140046230
   140007d5f:	mov    QWORD PTR [rsp+0x98],rax
   140007d67:	mov    QWORD PTR [rsp+0xa0],r15
   140007d6f:	lea    rax,[rip+0x3e77a]        # 0x1400464f0
   140007d76:	mov    QWORD PTR [rsp+0x90],rax
   140007d7e:	lea    rax,[rip+0x3e783]        # 0x140046508
   140007d85:	mov    QWORD PTR [rsp+0x98],rax
   140007d8d:	mov    QWORD PTR [rsp+0xa8],r15
   140007d95:	mov    QWORD PTR [rsp+0xb0],r15
   140007d9d:	mov    DWORD PTR [rsp+0xb8],r15d
   140007da5:	mov    QWORD PTR [rsp+0xc0],r15
   140007dad:	mov    BYTE PTR [rsp+0xc8],r15b
   140007db5:	call   QWORD PTR [rip+0x395a5]        # 0x140041360
   140007dbb:	mov    r13d,eax
   140007dbe:	mov    DWORD PTR [rsp+0x44],eax
   140007dc2:	mov    esi,r14d
   140007dc5:	imul   esi,esi,0x3e8
   140007dcb:	or     eax,0xffffffff
   140007dce:	cmp    r14d,eax
   140007dd1:	cmove  esi,r14d
   140007dd5:	lea    rdx,[rsp+0x90]
   140007ddd:	mov    rcx,rdi
   140007de0:	call   0x140007ba4
   140007de5:	test   al,al
   140007de7:	jne    0x140007dfb
   140007de9:	lea    rcx,[rsp+0x90]
   140007df1:	call   0x140014ffc
   140007df6:	jmp    0x1400083c8
   140007dfb:	mov    r12,QWORD PTR [rsp+0xa8]
   140007e03:	mov    QWORD PTR [rsp+0x50],r12
   140007e08:	mov    r8d,DWORD PTR [r12+0x4a8]
   140007e10:	xor    edx,edx
   140007e12:	mov    ecx,0x100400
   140007e17:	call   QWORD PTR [rip+0x3953b]        # 0x140041358
   140007e1d:	mov    rbx,rax
   140007e20:	call   QWORD PTR [rip+0x395b2]        # 0x1400413d8
   140007e26:	test   rbx,rbx
   140007e29:	jne    0x140007e56
   140007e2b:	mov    edx,0xe123051a
   140007e30:	mov    ecx,0xe123052a
   140007e35:	cmp    eax,0x5
   140007e38:	cmove  edx,ecx
   140007e3b:	mov    rcx,rdi
   140007e3e:	call   0x14000abc8
   140007e43:	nop
   140007e44:	lea    rcx,[rsp+0x90]
   140007e4c:	call   0x140014ffc
   140007e51:	jmp    0x1400083c8
   140007e56:	mov    rcx,rbx
   140007e59:	call   0x140012ed8
   140007e5e:	mov    r14d,eax
   140007e61:	test   eax,eax
   140007e63:	je     0x140007e8c
   140007e65:	mov    rcx,rbx
   140007e68:	call   QWORD PTR [rip+0x3951a]        # 0x140041388
   140007e6e:	mov    edx,r14d
   140007e71:	mov    rcx,rdi
   140007e74:	call   0x14000abc8
   140007e79:	nop
   140007e7a:	lea    rcx,[rsp+0x90]
   140007e82:	call   0x140014ffc
   140007e87:	jmp    0x1400083c8
   140007e8c:	lea    rcx,[rsp+0x1d0]
   140007e94:	call   0x14001a598
   140007e99:	nop
   140007e9a:	mov    BYTE PTR [rsp+0x20],r15b
   140007e9f:	xor    r9d,r9d
   140007ea2:	mov    r8d,DWORD PTR [r12]
   140007ea6:	mov    edx,DWORD PTR [r12+0x4]
   140007eab:	lea    rcx,[rsp+0x1d0]
   140007eb3:	call   0x14001a6b0
   140007eb8:	mov    DWORD PTR [rsp+0x68],r15d
   140007ebd:	xor    r14d,r14d
   140007ec0:	mov    DWORD PTR [rsp+0x58],r14d
   140007ec5:	cmp    BYTE PTR [rsp+0x40],r14b
   140007eca:	jne    0x140008162
   140007ed0:	mov    r14d,DWORD PTR [rsp+0x70]
   140007ed5:	xor    r12d,r12d
   140007ed8:	mov    r13,r12
   140007edb:	mov    rcx,QWORD PTR [rsp+0x340]
   140007ee3:	call   0x140019fec
   140007ee8:	lea    rcx,[rsp+0x1e0]
   140007ef0:	mov    rax,QWORD PTR [rsp+0x1e0]
   140007ef8:	call   QWORD PTR [rax+0x8]
   140007efb:	mov    edx,DWORD PTR [rax+0x8]
   140007efe:	cmp    edx,0xffffffff
   140007f01:	je     0x140007f47
   140007f03:	lea    rcx,[rsp+0x1d0]
   140007f0b:	call   0x14001a860
   140007f10:	mov    r13,rax
   140007f13:	test   rax,rax
   140007f16:	jne    0x140007f2b
   140007f18:	xor    r9d,r9d
   140007f1b:	xor    r8d,r8d
   140007f1e:	xor    edx,edx
   140007f20:	mov    ecx,0xc0000025
   140007f25:	call   QWORD PTR [rip+0x39475]        # 0x1400413a0
   140007f2b:	mov    r14d,DWORD PTR [r13+0x4]
   140007f2f:	mov    DWORD PTR [rsp+0x70],r14d
   140007f34:	mov    r8d,r14d
   140007f37:	xor    edx,edx
   140007f39:	mov    ecx,0x100000
   140007f3e:	call   QWORD PTR [rip+0x39414]        # 0x140041358
   140007f44:	mov    r12,rax
   140007f47:	mov    rcx,QWORD PTR [rsp+0x340]
   140007f4f:	mov    rcx,QWORD PTR [rcx+0x10]
   140007f53:	call   QWORD PTR [rip+0x39327]        # 0x140041280
   140007f59:	test   r12,r12
   140007f5c:	je     0x1400080e3
   140007f62:	cmp    r14d,r15d
   140007f65:	je     0x1400080da
   140007f6b:	cmp    r14d,DWORD PTR [rsp+0x58]
   140007f70:	je     0x140007f8d
   140007f72:	lea    r9,[r13+0x20]
   140007f76:	mov    r8d,DWORD PTR [r13+0x4]
   140007f7a:	mov    edx,0x61230d2e
   140007f7f:	mov    rcx,QWORD PTR [rdi+0x8]
   140007f83:	call   0x14000769c
   140007f88:	mov    DWORD PTR [rsp+0x58],r14d
   140007f8d:	call   QWORD PTR [rip+0x393cd]        # 0x140041360
   140007f93:	mov    ecx,eax
   140007f95:	mov    r15d,DWORD PTR [rsp+0x44]
   140007f9a:	sub    ecx,r15d
   140007f9d:	mov    edx,esi
   140007f9f:	sub    edx,eax
   140007fa1:	add    edx,r15d
   140007fa4:	cmp    ecx,esi
   140007fa6:	mov    eax,0x0
   140007fab:	cmova  edx,eax
   140007fae:	or     eax,0xffffffff
   140007fb1:	cmp    esi,eax
   140007fb3:	cmove  edx,eax
   140007fb6:	mov    eax,0xfa
   140007fbb:	cmp    edx,eax
   140007fbd:	cmova  edx,eax
   140007fc0:	mov    rcx,r12
   140007fc3:	call   QWORD PTR [rip+0x393af]        # 0x140041378
   140007fc9:	mov    DWORD PTR [rsp+0x60],eax
   140007fcd:	mov    rcx,r12
   140007fd0:	call   QWORD PTR [rip+0x393b2]        # 0x140041388
   140007fd6:	mov    eax,DWORD PTR [rsp+0x60]
   140007fda:	xor    r12d,r12d
   140007fdd:	test   eax,eax
   140007fdf:	je     0x140008088
   140007fe5:	cmp    eax,0x102
   140007fea:	jne    0x140008051
   140007fec:	call   QWORD PTR [rip+0x3936e]        # 0x140041360
   140007ff2:	mov    ecx,eax
   140007ff4:	sub    ecx,r15d
   140007ff7:	mov    edx,esi
   140007ff9:	sub    edx,eax
   140007ffb:	add    edx,r15d
   140007ffe:	cmp    ecx,esi
   140008000:	cmova  edx,r12d
   140008004:	or     eax,0xffffffff
   140008007:	cmp    esi,eax
   140008009:	cmove  edx,eax
   14000800c:	test   edx,edx
   14000800e:	jne    0x140008047
   140008010:	mov    edx,0xe1230523
   140008015:	mov    rcx,rdi
   140008018:	call   0x14000abc8
   14000801d:	mov    rcx,rbx
   140008020:	call   QWORD PTR [rip+0x39362]        # 0x140041388
   140008026:	nop
   140008027:	lea    rcx,[rsp+0x1d0]
   14000802f:	call   0x14001a634
   140008034:	nop
   140008035:	lea    rcx,[rsp+0x90]
   14000803d:	call   0x140014ffc
   140008042:	jmp    0x1400083c8
   140008047:	mov    r15d,r12d
   14000804a:	mov    DWORD PTR [rsp+0x68],r12d
   14000804f:	jmp    0x140008090
   140008051:	mov    edx,0xe1230526
   140008056:	mov    rcx,rdi
   140008059:	call   0x14000abc8
   14000805e:	mov    rcx,rbx
   140008061:	call   QWORD PTR [rip+0x39321]        # 0x140041388
   140008067:	nop
   140008068:	lea    rcx,[rsp+0x1d0]
   140008070:	call   0x14001a634
   140008075:	nop
   140008076:	lea    rcx,[rsp+0x90]
   14000807e:	call   0x140014ffc
   140008083:	jmp    0x1400083c8
   140008088:	mov    r15d,r14d
   14000808b:	mov    DWORD PTR [rsp+0x68],r14d
   140008090:	xor    edx,edx
   140008092:	mov    rcx,rbx
   140008095:	call   QWORD PTR [rip+0x392dd]        # 0x140041378
   14000809b:	test   eax,eax
   14000809d:	jne    0x14000814c
   1400080a3:	mov    edx,0xa1230927
   1400080a8:	mov    rcx,rdi
   1400080ab:	call   0x14000abc8
   1400080b0:	mov    rcx,rbx
   1400080b3:	call   QWORD PTR [rip+0x392cf]        # 0x140041388
   1400080b9:	nop
   1400080ba:	lea    rcx,[rsp+0x1d0]
   1400080c2:	call   0x14001a634
   1400080c7:	nop
   1400080c8:	lea    rcx,[rsp+0x90]
   1400080d0:	call   0x140014ffc
   1400080d5:	jmp    0x1400083c8
   1400080da:	mov    rcx,r12
   1400080dd:	call   QWORD PTR [rip+0x392a5]        # 0x140041388
   1400080e3:	call   QWORD PTR [rip+0x39277]        # 0x140041360
   1400080e9:	mov    ecx,eax
   1400080eb:	sub    ecx,DWORD PTR [rsp+0x44]
   1400080ef:	mov    edx,esi
   1400080f1:	sub    edx,eax
   1400080f3:	add    edx,DWORD PTR [rsp+0x44]
   1400080f7:	cmp    ecx,esi
   1400080f9:	mov    r12d,0x0
   1400080ff:	cmova  edx,r12d
   140008103:	or     eax,0xffffffff
   140008106:	cmp    esi,eax
   140008108:	cmove  edx,eax
   14000810b:	test   edx,edx
   14000810d:	jne    0x140008146
   14000810f:	mov    edx,0xe1230523
   140008114:	mov    rcx,rdi
   140008117:	call   0x14000abc8
   14000811c:	mov    rcx,rbx
   14000811f:	call   QWORD PTR [rip+0x39263]        # 0x140041388
   140008125:	nop
   140008126:	lea    rcx,[rsp+0x1d0]
   14000812e:	call   0x14001a634
   140008133:	nop
   140008134:	lea    rcx,[rsp+0x90]
   14000813c:	call   0x140014ffc
   140008141:	jmp    0x1400083c8
   140008146:	call   QWORD PTR [rip+0x391a4]        # 0x1400412f0
   14000814c:	test   r13,r13
   14000814f:	jne    0x140007ed8
   140008155:	mov    r12,QWORD PTR [rsp+0x50]
   14000815a:	mov    r13d,DWORD PTR [rsp+0x44]
   14000815f:	xor    r14d,r14d
   140008162:	lea    rcx,[rsp+0x350]
   14000816a:	call   0x140014f70
   14000816f:	nop
   140008170:	mov    DWORD PTR [rsp+0x28],0x1
   140008178:	mov    DWORD PTR [rsp+0x20],r14d
   14000817d:	xor    r9d,r9d
   140008180:	mov    r8d,0x4d28
   140008186:	mov    rdx,QWORD PTR [rip+0x54a9b]        # 0x14005cc28
   14000818d:	lea    rcx,[rsp+0x350]
   140008195:	call   0x1400150ac
   14000819a:	mov    r15,r14
   14000819d:	cmp    DWORD PTR [rsp+0x370],r14d
   1400081a5:	cmovne r15,QWORD PTR [rsp+0x368]
   1400081ae:	mov    rcx,QWORD PTR [rdi+0x8]
   1400081b2:	mov    rax,QWORD PTR [rcx]
   1400081b5:	xor    r9d,r9d
   1400081b8:	xor    r8d,r8d
   1400081bb:	mov    edx,0x61230d0f
   1400081c0:	call   QWORD PTR [rax]
   1400081c2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400081c6:	mov    rax,QWORD PTR [rcx]
   1400081c9:	xor    r9d,r9d
   1400081cc:	xor    r8d,r8d
   1400081cf:	mov    edx,0x61230cea
   1400081d4:	call   QWORD PTR [rax]
   1400081d6:	lea    rcx,[rsp+0x490]
   1400081de:	call   0x140019830
   1400081e3:	nop
   1400081e4:	lea    rcx,[rsp+0x490]
   1400081ec:	call   0x1400199c4
   1400081f1:	cmp    DWORD PTR [rsp+0x784],r14d
   1400081f9:	je     0x14000825e
   1400081fb:	mov    DWORD PTR [rsp+0x48],r14d
   140008200:	lea    rdx,[rsp+0x48]
   140008205:	lea    rcx,[rsp+0x490]
   14000820d:	call   0x140019ba4
   140008212:	test   eax,eax
   140008214:	jne    0x140008218
   140008216:	jmp    0x140008200
   140008218:	lea    rcx,[rsp+0x5f0]
   140008220:	mov    rax,QWORD PTR [rsp+0x5f0]
   140008228:	call   QWORD PTR [rax+0x8]
   14000822b:	mov    edx,DWORD PTR [rsp+0x48]
   14000822f:	mov    ecx,edx
   140008231:	imul   rcx,rcx,0x258
   140008238:	add    rcx,rax
   14000823b:	mov    DWORD PTR [rcx+0x10],0x6
   140008242:	or     eax,0xffffffff
   140008245:	mov    DWORD PTR [rcx+0x14],eax
   140008248:	mov    DWORD PTR [rcx+0x18],eax
   14000824b:	mov    DWORD PTR [rcx+0x1c],eax
   14000824e:	mov    DWORD PTR [rcx+0x20],eax
   140008251:	lea    rcx,[rsp+0x490]
   140008259:	call   0x140019bec
   14000825e:	call   QWORD PTR [rip+0x390fc]        # 0x140041360
   140008264:	mov    ecx,eax
   140008266:	sub    ecx,r13d
   140008269:	mov    edx,esi
   14000826b:	sub    edx,eax
   14000826d:	add    edx,r13d
   140008270:	cmp    ecx,esi
   140008272:	cmova  edx,r14d
   140008276:	or     eax,0xffffffff
   140008279:	cmp    esi,eax
   14000827b:	cmove  edx,eax
   14000827e:	mov    rcx,rbx
   140008281:	call   QWORD PTR [rip+0x390f1]        # 0x140041378
   140008287:	mov    esi,eax
   140008289:	mov    rcx,rbx
   14000828c:	call   QWORD PTR [rip+0x390f6]        # 0x140041388
   140008292:	test   esi,esi
   140008294:	je     0x1400082b0
   140008296:	mov    rcx,rdi
   140008299:	cmp    esi,0x102
   14000829f:	mov    edx,0xe1230523
   1400082a4:	je     0x1400082ab
   1400082a6:	mov    edx,0xe1230526
   1400082ab:	call   0x14000abc8
   1400082b0:	mov    esi,r14d
   1400082b3:	mov    DWORD PTR [rsp+0x6c],r14d
   1400082b8:	mov    r13d,0xc0000000
   1400082be:	cmp    esi,DWORD PTR [r15+0x9f4]
   1400082c5:	jae    0x14000836a
   1400082cb:	mov    eax,esi
   1400082cd:	lea    r14,[rax+rax*2]
   1400082d1:	shl    r14,0x7
   1400082d5:	mov    eax,DWORD PTR [r14+r15*1+0x9f8]
   1400082dd:	and    eax,r13d
   1400082e0:	cmp    eax,r13d
   1400082e3:	je     0x1400082e7
   1400082e5:	jmp    0x14000835f
   1400082e7:	mov    ecx,DWORD PTR [r14+r15*1+0x9f8]
   1400082ef:	call   0x140011df0
   1400082f4:	mov    rbx,rax
   1400082f7:	mov    rcx,QWORD PTR [rdi+0x8]
   1400082fb:	mov    QWORD PTR [rsp+0x50],rax
   140008300:	mov    r10,QWORD PTR [rcx]
   140008303:	lea    r9,[rsp+0x50]
   140008308:	mov    edx,0xa1230917
   14000830d:	mov    r8d,0x1
   140008313:	call   QWORD PTR [r10]
   140008316:	mov    rcx,rbx
   140008319:	call   QWORD PTR [rip+0x390a9]        # 0x1400413c8
   14000831f:	lea    rcx,[r15+0x9f8]
   140008326:	add    rcx,r14
   140008329:	call   0x1400091e4
   14000832e:	mov    rbx,rax
   140008331:	mov    rcx,QWORD PTR [rdi+0x8]
   140008335:	mov    QWORD PTR [rsp+0x60],rax
   14000833a:	mov    r10,QWORD PTR [rcx]
   14000833d:	lea    r9,[rsp+0x60]
   140008342:	mov    edx,0xa1230917
   140008347:	mov    r8d,0x1
   14000834d:	call   QWORD PTR [r10]
   140008350:	mov    rcx,rbx
   140008353:	call   QWORD PTR [rip+0x3906f]        # 0x1400413c8
   140008359:	mov    DWORD PTR [rdi],0x1
   14000835f:	inc    esi
   140008361:	mov    DWORD PTR [rsp+0x6c],esi
   140008365:	jmp    0x1400082be
   14000836a:	xor    r14d,r14d
   14000836d:	cmp    DWORD PTR [rdi],r14d
   140008370:	jne    0x140008391
   140008372:	cmp    DWORD PTR [r12+0x4ac],r14d
   14000837a:	je     0x140008391
   14000837c:	mov    rcx,QWORD PTR [rdi+0x8]
   140008380:	mov    rax,QWORD PTR [rcx]
   140008383:	xor    r9d,r9d
   140008386:	xor    r8d,r8d
   140008389:	mov    edx,0xa1230919
   14000838e:	call   QWORD PTR [rax]
   140008390:	nop
   140008391:	lea    rcx,[rsp+0x490]
   140008399:	call   0x14001995c
   14000839e:	nop
   14000839f:	lea    rcx,[rsp+0x350]
   1400083a7:	call   0x140014ffc
   1400083ac:	nop
   1400083ad:	lea    rcx,[rsp+0x1d0]
   1400083b5:	call   0x14001a634
   1400083ba:	nop
   1400083bb:	lea    rcx,[rsp+0x90]
   1400083c3:	call   0x140014ffc
   1400083c8:	mov    rcx,QWORD PTR [rsp+0x790]
   1400083d0:	xor    rcx,rsp
   1400083d3:	call   0x1400265a0
   1400083d8:	add    rsp,0x7a0
   1400083df:	pop    r15
   1400083e1:	pop    r14
   1400083e3:	pop    r13
   1400083e5:	pop    r12
   1400083e7:	pop    rdi
   1400083e8:	pop    rsi
   1400083e9:	pop    rbx
   1400083ea:	ret    
   1400083eb:	int3   
   1400083ec:	mov    rax,rsp
   1400083ef:	push   rbp
   1400083f0:	push   rsi
   1400083f1:	push   rdi
   1400083f2:	push   r12
   1400083f4:	push   r13
   1400083f6:	push   r14
   1400083f8:	push   r15
   1400083fa:	lea    rbp,[rax-0x398]
   140008401:	sub    rsp,0x460
   140008408:	mov    QWORD PTR [rbp+0xc0],0xfffffffffffffffe
   140008413:	mov    QWORD PTR [rax+0x18],rbx
   140008417:	mov    rax,QWORD PTR [rip+0x50c6a]        # 0x140059088
   14000841e:	xor    rax,rsp
   140008421:	mov    QWORD PTR [rbp+0x350],rax
   140008428:	mov    rdi,rdx
   14000842b:	mov    r14,rcx
   14000842e:	xor    r9d,r9d
   140008431:	xor    r8d,r8d
   140008434:	mov    dl,0x9
   140008436:	call   0x140015618
   14000843b:	lea    rcx,[rip+0x51ee6]        # 0x14005a328
   140008442:	mov    rax,QWORD PTR [rip+0x51edf]        # 0x14005a328
   140008449:	call   QWORD PTR [rax+0x18]
   14000844c:	lea    rbx,[rax+0x18]
   140008450:	mov    QWORD PTR [rsp+0x40],rbx
   140008455:	lea    r12,[rdi+0x4c]
   140008459:	mov    QWORD PTR [rbp-0x30],r12
   14000845d:	movzx  eax,WORD PTR [r12]
   140008462:	neg    ax
   140008465:	sbb    rdx,rdx
   140008468:	and    rdx,r12
   14000846b:	mov    cl,0x1
   14000846d:	call   0x140018aa4
   140008472:	mov    r8,QWORD PTR [rip+0x54757]        # 0x14005cbd0
   140008479:	xor    edx,edx
   14000847b:	mov    esi,0x100000
   140008480:	mov    ecx,esi
   140008482:	call   QWORD PTR [rip+0x38e90]        # 0x140041318
   140008488:	xor    r13d,r13d
   14000848b:	test   rax,rax
   14000848e:	je     0x1400084a0
   140008490:	mov    rcx,rax
   140008493:	call   QWORD PTR [rip+0x38eef]        # 0x140041388
   140008499:	mov    edx,0xe123053e
   14000849e:	jmp    0x140008510
   1400084a0:	movzx  eax,WORD PTR [r12]
   1400084a5:	neg    ax
   1400084a8:	sbb    rdx,rdx
   1400084ab:	and    rdx,r12
   1400084ae:	xor    ecx,ecx
   1400084b0:	call   0x140018aa4
   1400084b5:	mov    r8,QWORD PTR [rip+0x54714]        # 0x14005cbd0
   1400084bc:	xor    edx,edx
   1400084be:	mov    ecx,esi
   1400084c0:	call   QWORD PTR [rip+0x38e52]        # 0x140041318
   1400084c6:	test   rax,rax
   1400084c9:	je     0x1400084db
   1400084cb:	mov    rcx,rax
   1400084ce:	call   QWORD PTR [rip+0x38eb4]        # 0x140041388
   1400084d4:	mov    edx,0xe123055e
   1400084d9:	jmp    0x140008510
   1400084db:	cmp    BYTE PTR [rdi+0x45b],r13b
   1400084e2:	sete   cl
   1400084e5:	movzx  eax,WORD PTR [r12]
   1400084ea:	neg    ax
   1400084ed:	sbb    rdx,rdx
   1400084f0:	and    rdx,r12
   1400084f3:	call   0x140018aa4
   1400084f8:	lea    rsi,[rdi+0x6ce]
   1400084ff:	mov    rcx,rsi
   140008502:	call   0x1400123fc
   140008507:	test   eax,eax
   140008509:	je     0x14000852b
   14000850b:	mov    edx,0xe123057c
   140008510:	mov    rcx,QWORD PTR [r14+0x8]
   140008514:	xor    r9d,r9d
   140008517:	mov    rax,QWORD PTR [rcx]
   14000851a:	xor    r8d,r8d
   14000851d:	call   QWORD PTR [rax]
   14000851f:	mov    DWORD PTR [r14],0x1
   140008526:	jmp    0x14000902f
   14000852b:	lea    r13,[rdi+0x8d6]
   140008532:	mov    QWORD PTR [rsp+0x20],rsi
   140008537:	lea    r9,[rip+0x3d5ca]        # 0x140045b08
   14000853e:	mov    r8,r13
   140008541:	lea    rdx,[rip+0x3d8a0]        # 0x140045de8
   140008548:	lea    rcx,[rsp+0x40]
   14000854d:	call   0x14000de30
   140008552:	or     ebx,0xffffffff
   140008555:	mov    DWORD PTR [rsp+0x28],ebx
   140008559:	lea    rax,[rip+0x3d5f0]        # 0x140045b50
   140008560:	mov    QWORD PTR [rsp+0x20],rax
   140008565:	mov    r9d,ebx
   140008568:	mov    r8,r13
   14000856b:	lea    edx,[rbx+0x2]
   14000856e:	mov    ecx,0x409
   140008573:	call   QWORD PTR [rip+0x38e67]        # 0x1400413e0
   140008579:	cmp    eax,0x2
   14000857c:	jne    0x14000863d
   140008582:	lea    rdx,[rbp-0x40]
   140008586:	mov    rcx,rdi
   140008589:	call   0x14000774c
   14000858e:	nop
   14000858f:	xor    esi,esi
   140008591:	xor    r15d,r15d
   140008594:	cmp    DWORD PTR [rbp-0x38],esi
   140008597:	jle    0x140008634
   14000859d:	lea    rcx,[rip+0x51d84]        # 0x14005a328
   1400085a4:	mov    rax,QWORD PTR [rip+0x51d7d]        # 0x14005a328
   1400085ab:	call   QWORD PTR [rax+0x18]
   1400085ae:	add    rax,0x18
   1400085b2:	mov    QWORD PTR [rbp-0x78],rax
   1400085b6:	test   r15,r15
   1400085b9:	js     0x14000861e
   1400085bb:	cmp    esi,DWORD PTR [rbp-0x38]
   1400085be:	jge    0x14000861e
   1400085c0:	mov    r9,QWORD PTR [rbp-0x40]
   1400085c4:	mov    r9,QWORD PTR [r9+r15*8]
   1400085c8:	lea    r8,[rip+0x3d5f1]        # 0x140045bc0
   1400085cf:	lea    rdx,[rip+0x3d842]        # 0x140045e18
   1400085d6:	lea    rcx,[rbp-0x78]
   1400085da:	call   0x14000de30
   1400085df:	mov    rbx,QWORD PTR [rbp-0x78]
   1400085e3:	mov    r8d,DWORD PTR [rbx-0x10]
   1400085e7:	mov    rdx,rbx
   1400085ea:	lea    rcx,[rsp+0x40]
   1400085ef:	call   0x140006cfc
   1400085f4:	nop
   1400085f5:	lea    rdx,[rbx-0x18]
   1400085f9:	or     ebx,0xffffffff
   1400085fc:	mov    eax,ebx
   1400085fe:	lock xadd DWORD PTR [rdx+0x10],eax
   140008603:	add    eax,ebx
   140008605:	test   eax,eax
   140008607:	jg     0x140008612
   140008609:	mov    rcx,QWORD PTR [rdx]
   14000860c:	mov    rax,QWORD PTR [rcx]
   14000860f:	call   QWORD PTR [rax+0x8]
   140008612:	inc    esi
   140008614:	inc    r15
   140008617:	cmp    esi,DWORD PTR [rbp-0x38]
   14000861a:	jl     0x14000859d
   14000861c:	jmp    0x140008634
   14000861e:	xor    r9d,r9d
   140008621:	xor    r8d,r8d
   140008624:	lea    edx,[r9+0x1]
   140008628:	mov    ecx,0xc000008c
   14000862d:	call   QWORD PTR [rip+0x38d6d]        # 0x1400413a0
   140008633:	nop
   140008634:	lea    rcx,[rbp-0x40]
   140008638:	call   0x1400072ec
   14000863d:	lea    rdx,[rbp-0x58]
   140008641:	mov    rcx,rdi
   140008644:	call   0x14000778c
   140008649:	nop
   14000864a:	xor    esi,esi
   14000864c:	xor    r15d,r15d
   14000864f:	cmp    DWORD PTR [rbp-0x50],esi
   140008652:	jle    0x1400086ef
   140008658:	lea    rcx,[rip+0x51cc9]        # 0x14005a328
   14000865f:	mov    rax,QWORD PTR [rip+0x51cc2]        # 0x14005a328
   140008666:	call   QWORD PTR [rax+0x18]
   140008669:	add    rax,0x18
   14000866d:	mov    QWORD PTR [rbp-0x68],rax
   140008671:	test   r15,r15
   140008674:	js     0x1400086d9
   140008676:	cmp    esi,DWORD PTR [rbp-0x50]
   140008679:	jge    0x1400086d9
   14000867b:	mov    r9,QWORD PTR [rbp-0x58]
   14000867f:	mov    r9,QWORD PTR [r9+r15*8]
   140008683:	lea    r8,[rip+0x3d596]        # 0x140045c20
   14000868a:	lea    rdx,[rip+0x3d787]        # 0x140045e18
   140008691:	lea    rcx,[rbp-0x68]
   140008695:	call   0x14000de30
   14000869a:	mov    rbx,QWORD PTR [rbp-0x68]
   14000869e:	mov    r8d,DWORD PTR [rbx-0x10]
   1400086a2:	mov    rdx,rbx
   1400086a5:	lea    rcx,[rsp+0x40]
   1400086aa:	call   0x140006cfc
   1400086af:	nop
   1400086b0:	lea    rdx,[rbx-0x18]
   1400086b4:	or     ebx,0xffffffff
   1400086b7:	mov    eax,ebx
   1400086b9:	lock xadd DWORD PTR [rdx+0x10],eax
   1400086be:	add    eax,ebx
   1400086c0:	test   eax,eax
   1400086c2:	jg     0x1400086cd
   1400086c4:	mov    rcx,QWORD PTR [rdx]
   1400086c7:	mov    rax,QWORD PTR [rcx]
   1400086ca:	call   QWORD PTR [rax+0x8]
   1400086cd:	inc    esi
   1400086cf:	inc    r15
   1400086d2:	cmp    esi,DWORD PTR [rbp-0x50]
   1400086d5:	jl     0x140008658
   1400086d7:	jmp    0x1400086ef
   1400086d9:	xor    r9d,r9d
   1400086dc:	xor    r8d,r8d
   1400086df:	lea    edx,[r9+0x1]
   1400086e3:	mov    ecx,0xc000008c
   1400086e8:	call   QWORD PTR [rip+0x38cb2]        # 0x1400413a0
   1400086ee:	nop
   1400086ef:	mov    DWORD PTR [rsp+0x28],ebx
   1400086f3:	lea    rax,[rip+0x3d466]        # 0x140045b60
   1400086fa:	mov    QWORD PTR [rsp+0x20],rax
   1400086ff:	mov    r9d,ebx
   140008702:	mov    r8,r13
   140008705:	mov    edx,0x1
   14000870a:	mov    ecx,0x409
   14000870f:	call   QWORD PTR [rip+0x38ccb]        # 0x1400413e0
   140008715:	cmp    eax,0x2
   140008718:	je     0x140008b17
   14000871e:	lea    rdx,[rsp+0x48]
   140008723:	mov    rcx,rdi
   140008726:	call   0x1400077cc
   14000872b:	nop
   14000872c:	lea    rdx,[rsp+0x48]
   140008731:	mov    rcx,r14
   140008734:	call   0x14000ca68
   140008739:	xor    r15d,r15d
   14000873c:	test   al,al
   14000873e:	jne    0x140008777
   140008740:	lea    rdx,[rbp-0x80]
   140008744:	call   0x14000c64c
   140008749:	nop
   14000874a:	lea    rdx,[rbp-0x80]
   14000874e:	lea    rcx,[rsp+0x48]
   140008753:	call   0x140006c28
   140008758:	nop
   140008759:	mov    rdx,QWORD PTR [rbp-0x80]
   14000875d:	add    rdx,0xffffffffffffffe8
   140008761:	mov    eax,ebx
   140008763:	lock xadd DWORD PTR [rdx+0x10],eax
   140008768:	add    eax,ebx
   14000876a:	test   eax,eax
   14000876c:	jg     0x140008777
   14000876e:	mov    rcx,QWORD PTR [rdx]
   140008771:	mov    rax,QWORD PTR [rcx]
   140008774:	call   QWORD PTR [rax+0x8]
   140008777:	lea    rdx,[rip+0x3d6b2]        # 0x140045e30
   14000877e:	lea    rcx,[rsp+0x68]
   140008783:	call   0x14000cd2c
   140008788:	nop
   140008789:	mov    QWORD PTR [rsp+0x58],r15
   14000878e:	mov    QWORD PTR [rsp+0x60],r15
   140008793:	mov    esi,r15d
   140008796:	mov    edx,DWORD PTR [rsp+0x50]
   14000879a:	test   edx,edx
   14000879c:	jle    0x140008a65
   1400087a2:	mov    r12,r15
   1400087a5:	test   esi,esi
   1400087a7:	js     0x140008a4f
   1400087ad:	cmp    esi,edx
   1400087af:	jge    0x140008a4f
   1400087b5:	mov    rax,QWORD PTR [rsp+0x48]
   1400087ba:	mov    ecx,r15d
   1400087bd:	cmp    DWORD PTR [rsp+0x60],r15d
   1400087c2:	jle    0x140008822
   1400087c4:	mov    rbx,QWORD PTR [rax+r12*1]
   1400087c8:	mov    r11d,r15d
   1400087cb:	test   rbx,rbx
   1400087ce:	setne  r11b
   1400087d2:	mov    r10,QWORD PTR [rsp+0x58]
   1400087d7:	test   r11d,r11d
   1400087da:	je     0x1400089ba
   1400087e0:	mov    rax,QWORD PTR [r10]
   1400087e3:	mov    r9,rbx
   1400087e6:	sub    r9,rax
   1400087e9:	movzx  r8d,WORD PTR [rax]
   1400087ed:	cmp    r8w,WORD PTR [rax+r9*1]
   1400087f2:	jne    0x140008803
   1400087f4:	add    rax,0x2
   1400087f8:	test   r8w,r8w
   1400087fc:	jne    0x1400087e9
   1400087fe:	mov    eax,r15d
   140008801:	jmp    0x140008808
   140008803:	sbb    eax,eax
   140008805:	or     eax,0x1
   140008808:	test   eax,eax
   14000880a:	je     0x14000881d
   14000880c:	inc    ecx
   14000880e:	add    r10,0x8
   140008812:	cmp    ecx,DWORD PTR [rsp+0x60]
   140008816:	jl     0x1400087d7
   140008818:	or     ebx,0xffffffff
   14000881b:	jmp    0x140008822
   14000881d:	or     ebx,0xffffffff
   140008820:	jmp    0x140008824
   140008822:	mov    ecx,ebx
   140008824:	cmp    ecx,ebx
   140008826:	jne    0x1400089a7
   14000882c:	movsxd rbx,esi
   14000882f:	mov    rax,QWORD PTR [rsp+0x48]
   140008834:	lea    rdx,[rax+rbx*8]
   140008838:	lea    rcx,[rsp+0x58]
   14000883d:	call   0x140006c28
   140008842:	cmp    esi,DWORD PTR [rsp+0x50]
   140008846:	jge    0x140008a33
   14000884c:	mov    r15,QWORD PTR [rsp+0x48]
   140008851:	mov    rdx,QWORD PTR [rsp+0x68]
   140008856:	test   rdx,rdx
   140008859:	je     0x14000892a
   14000885f:	mov    rcx,QWORD PTR [r15+r12*1]
   140008863:	cmp    DWORD PTR [rcx-0x10],0x0
   140008867:	jl     0x14000892a
   14000886d:	call   0x140027984
   140008872:	test   rax,rax
   140008875:	je     0x14000892a
   14000887b:	sub    rax,QWORD PTR [r15+r12*1]
   14000887f:	sar    rax,1
   140008882:	xor    r15d,r15d
   140008885:	test   eax,eax
   140008887:	js     0x14000892d
   14000888d:	cmp    esi,DWORD PTR [rsp+0x50]
   140008891:	jge    0x140008a07
   140008897:	mov    rax,QWORD PTR [rsp+0x48]
   14000889c:	lea    rcx,[rax+rbx*8]
   1400088a0:	lea    r8,[rip+0x3d595]        # 0x140045e3c
   1400088a7:	lea    rdx,[rip+0x3d596]        # 0x140045e44
   1400088ae:	call   0x14000d114
   1400088b3:	cmp    esi,DWORD PTR [rsp+0x50]
   1400088b7:	jge    0x1400089f1
   1400088bd:	mov    rax,QWORD PTR [rsp+0x48]
   1400088c2:	lea    rcx,[rax+rbx*8]
   1400088c6:	lea    r8,[rip+0x3d57b]        # 0x140045e48
   1400088cd:	mov    rdx,QWORD PTR [rsp+0x68]
   1400088d2:	call   0x14000d114
   1400088d7:	cmp    esi,DWORD PTR [rsp+0x50]
   1400088db:	jge    0x1400089db
   1400088e1:	mov    rax,QWORD PTR [rsp+0x48]
   1400088e6:	lea    r8,[rax+rbx*8]
   1400088ea:	lea    rcx,[rbp-0x10]
   1400088ee:	call   0x14000d6c4
   1400088f3:	nop
   1400088f4:	cmp    esi,DWORD PTR [rsp+0x50]
   1400088f8:	jge    0x1400089c5
   1400088fe:	mov    rcx,QWORD PTR [rsp+0x48]
   140008903:	lea    rcx,[rcx+rbx*8]
   140008907:	mov    rdx,rax
   14000890a:	call   0x14000cdac
   14000890f:	nop
   140008910:	mov    rdx,QWORD PTR [rbp-0x10]
   140008914:	add    rdx,0xffffffffffffffe8
   140008918:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000891d:	jg     0x14000892d
   14000891f:	mov    rcx,QWORD PTR [rdx]
   140008922:	mov    rax,QWORD PTR [rcx]
   140008925:	call   QWORD PTR [rax+0x8]
   140008928:	jmp    0x14000892d
   14000892a:	xor    r15d,r15d
   14000892d:	lea    rcx,[rip+0x519f4]        # 0x14005a328
   140008934:	mov    rax,QWORD PTR [rip+0x519ed]        # 0x14005a328
   14000893b:	call   QWORD PTR [rax+0x18]
   14000893e:	add    rax,0x18
   140008942:	mov    QWORD PTR [rbp-0x70],rax
   140008946:	cmp    esi,DWORD PTR [rsp+0x50]
   14000894a:	jge    0x140008a1d
   140008950:	mov    r9,QWORD PTR [rsp+0x48]
   140008955:	mov    r9,QWORD PTR [r9+r12*1]
   140008959:	lea    r8,[rip+0x3d290]        # 0x140045bf0
   140008960:	lea    rdx,[rip+0x3d4b1]        # 0x140045e18
   140008967:	lea    rcx,[rbp-0x70]
   14000896b:	call   0x14000de30
   140008970:	mov    rbx,QWORD PTR [rbp-0x70]
   140008974:	mov    r8d,DWORD PTR [rbx-0x10]
   140008978:	mov    rdx,rbx
   14000897b:	lea    rcx,[rsp+0x40]
   140008980:	call   0x140006cfc
   140008985:	nop
   140008986:	lea    rdx,[rbx-0x18]
   14000898a:	or     ebx,0xffffffff
   14000898d:	mov    eax,ebx
   14000898f:	lock xadd DWORD PTR [rdx+0x10],eax
   140008994:	add    eax,ebx
   140008996:	test   eax,eax
   140008998:	jg     0x1400089a3
   14000899a:	mov    rcx,QWORD PTR [rdx]
   14000899d:	mov    rax,QWORD PTR [rcx]
   1400089a0:	call   QWORD PTR [rax+0x8]
   1400089a3:	mov    edx,DWORD PTR [rsp+0x50]
   1400089a7:	inc    esi
   1400089a9:	add    r12,0x8
   1400089ad:	cmp    esi,edx
   1400089af:	jge    0x140008a49
   1400089b5:	jmp    0x1400087a5
   1400089ba:	mov    ecx,0x80004005
   1400089bf:	call   0x14000400c
   1400089c4:	nop
   1400089c5:	xor    r9d,r9d
   1400089c8:	xor    r8d,r8d
   1400089cb:	lea    edx,[r9+0x1]
   1400089cf:	mov    ecx,0xc000008c
   1400089d4:	call   QWORD PTR [rip+0x389c6]        # 0x1400413a0
   1400089da:	nop
   1400089db:	xor    r9d,r9d
   1400089de:	xor    r8d,r8d
   1400089e1:	lea    edx,[r9+0x1]
   1400089e5:	mov    ecx,0xc000008c
   1400089ea:	call   QWORD PTR [rip+0x389b0]        # 0x1400413a0
   1400089f0:	int3   
   1400089f1:	xor    r9d,r9d
   1400089f4:	xor    r8d,r8d
   1400089f7:	lea    edx,[r9+0x1]
   1400089fb:	mov    ecx,0xc000008c
   140008a00:	call   QWORD PTR [rip+0x3899a]        # 0x1400413a0
   140008a06:	int3   
   140008a07:	xor    r9d,r9d
   140008a0a:	xor    r8d,r8d
   140008a0d:	lea    edx,[r9+0x1]
   140008a11:	mov    ecx,0xc000008c
   140008a16:	call   QWORD PTR [rip+0x38984]        # 0x1400413a0
   140008a1c:	nop
   140008a1d:	xor    r9d,r9d
   140008a20:	xor    r8d,r8d
   140008a23:	lea    edx,[r9+0x1]
   140008a27:	mov    ecx,0xc000008c
   140008a2c:	call   QWORD PTR [rip+0x3896e]        # 0x1400413a0
   140008a32:	nop
   140008a33:	xor    r9d,r9d
   140008a36:	xor    r8d,r8d
   140008a39:	lea    edx,[r9+0x1]
   140008a3d:	mov    ecx,0xc000008c
   140008a42:	call   QWORD PTR [rip+0x38958]        # 0x1400413a0
   140008a48:	int3   
   140008a49:	lea    r12,[rdi+0x4c]
   140008a4d:	jmp    0x140008a65
   140008a4f:	xor    r9d,r9d
   140008a52:	xor    r8d,r8d
   140008a55:	lea    edx,[r9+0x1]
   140008a59:	mov    ecx,0xc000008c
   140008a5e:	call   QWORD PTR [rip+0x3893c]        # 0x1400413a0
   140008a64:	int3   
   140008a65:	mov    ebx,0x1f4
   140008a6a:	cmp    BYTE PTR [rdi+0x6cc],r15b
   140008a71:	je     0x140008a79
   140008a73:	mov    ebx,DWORD PTR [rdi+0x6c8]
   140008a79:	lea    rcx,[rip+0x518a8]        # 0x14005a328
   140008a80:	mov    rax,QWORD PTR [rip+0x518a1]        # 0x14005a328
   140008a87:	call   QWORD PTR [rax+0x18]
   140008a8a:	add    rax,0x18
   140008a8e:	mov    QWORD PTR [rbp-0x48],rax
   140008a92:	mov    r9d,ebx
   140008a95:	lea    r8,[rip+0x3d16c]        # 0x140045c08
   140008a9c:	lea    rdx,[rip+0x3d3ad]        # 0x140045e50
   140008aa3:	lea    rcx,[rbp-0x48]
   140008aa7:	call   0x14000de30
   140008aac:	mov    rbx,QWORD PTR [rbp-0x48]
   140008ab0:	mov    r8d,DWORD PTR [rbx-0x10]
   140008ab4:	mov    rdx,rbx
   140008ab7:	lea    rcx,[rsp+0x40]
   140008abc:	call   0x140006cfc
   140008ac1:	nop
   140008ac2:	lea    rdx,[rbx-0x18]
   140008ac6:	or     ebx,0xffffffff
   140008ac9:	mov    eax,ebx
   140008acb:	lock xadd DWORD PTR [rdx+0x10],eax
   140008ad0:	add    eax,ebx
   140008ad2:	test   eax,eax
   140008ad4:	jg     0x140008ae0
   140008ad6:	mov    rcx,QWORD PTR [rdx]
   140008ad9:	mov    rax,QWORD PTR [rcx]
   140008adc:	call   QWORD PTR [rax+0x8]
   140008adf:	nop
   140008ae0:	lea    rcx,[rsp+0x58]
   140008ae5:	call   0x1400072ec
   140008aea:	nop
   140008aeb:	mov    rdx,QWORD PTR [rsp+0x68]
   140008af0:	add    rdx,0xffffffffffffffe8
   140008af4:	mov    eax,ebx
   140008af6:	lock xadd DWORD PTR [rdx+0x10],eax
   140008afb:	add    eax,ebx
   140008afd:	test   eax,eax
   140008aff:	jg     0x140008b0b
   140008b01:	mov    rcx,QWORD PTR [rdx]
   140008b04:	mov    rax,QWORD PTR [rcx]
   140008b07:	call   QWORD PTR [rax+0x8]
   140008b0a:	nop
   140008b0b:	lea    rcx,[rsp+0x48]
   140008b10:	call   0x1400072ec
   140008b15:	jmp    0x140008b1a
   140008b17:	xor    r15d,r15d
   140008b1a:	cmp    WORD PTR [r12],r15w
   140008b1f:	je     0x140008b89
   140008b21:	lea    rcx,[rip+0x51800]        # 0x14005a328
   140008b28:	mov    rax,QWORD PTR [rip+0x517f9]        # 0x14005a328
   140008b2f:	call   QWORD PTR [rax+0x18]
   140008b32:	add    rax,0x18
   140008b36:	mov    QWORD PTR [rbp-0x60],rax
   140008b3a:	movzx  eax,WORD PTR [r12]
   140008b3f:	neg    ax
   140008b42:	sbb    r9,r9
   140008b45:	and    r9,r12
   140008b48:	lea    r8,[rip+0x3d055]        # 0x140045ba4
   140008b4f:	lea    rdx,[rip+0x3d2c2]        # 0x140045e18
   140008b56:	lea    rcx,[rbp-0x60]
   140008b5a:	call   0x14000de30
   140008b5f:	mov    rbx,QWORD PTR [rbp-0x60]
   140008b63:	mov    r8d,DWORD PTR [rbx-0x10]
   140008b67:	mov    rdx,rbx
   140008b6a:	lea    rcx,[rsp+0x40]
   140008b6f:	call   0x140006cfc
   140008b74:	nop
   140008b75:	lea    rdx,[rbx-0x18]
   140008b79:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140008b7e:	jg     0x140008b89
   140008b80:	mov    rcx,QWORD PTR [rdx]
   140008b83:	mov    rax,QWORD PTR [rcx]
   140008b86:	call   QWORD PTR [rax+0x8]
   140008b89:	mov    r12b,r15b
   140008b8c:	cmp    WORD PTR [r13+0x0],r15w
   140008b91:	je     0x140008c84
   140008b97:	xor    r13d,r13d
   140008b9a:	cmp    BYTE PTR [rdi+0x45b],r13b
   140008ba1:	jne    0x140008c68
   140008ba7:	cmp    BYTE PTR [rdi+0x45c],r13b
   140008bae:	je     0x140008c87
   140008bb4:	call   QWORD PTR [rip+0x3873e]        # 0x1400412f8
   140008bba:	mov    ecx,eax
   140008bbc:	lea    rdx,[rsp+0x74]
   140008bc1:	call   QWORD PTR [rip+0x38749]        # 0x140041310
   140008bc7:	test   eax,eax
   140008bc9:	je     0x140008c87
   140008bcf:	cmp    BYTE PTR [rip+0x53e7b],r13b        # 0x14005ca51
   140008bd6:	jne    0x140008c04
   140008bd8:	lea    rdx,[rdi+0x678]
   140008bdf:	lea    r8,[rdi+0x688]
   140008be6:	mov    rcx,rdi
   140008be9:	call   0x1400064e8
   140008bee:	mov    BYTE PTR [rip+0x53e5d],al        # 0x14005ca51
   140008bf4:	test   al,al
   140008bf6:	jne    0x140008c04
   140008bf8:	mov    DWORD PTR [r14],0x1
   140008bff:	jmp    0x140008c87
   140008c04:	mov    esi,r13d
   140008c07:	mov    rbx,r13
   140008c0a:	movsxd r15,DWORD PTR [rdi+0x680]
   140008c11:	test   r15,r15
   140008c14:	jle    0x140008c87
   140008c16:	test   rbx,rbx
   140008c19:	js     0x140008c52
   140008c1b:	cmp    esi,DWORD PTR [rdi+0x680]
   140008c21:	jge    0x140008c52
   140008c23:	mov    rax,QWORD PTR [rdi+0x678]
   140008c2a:	lea    rdx,[rsp+0x70]
   140008c2f:	mov    ecx,DWORD PTR [rax+rbx*4]
   140008c32:	call   QWORD PTR [rip+0x386d8]        # 0x140041310
   140008c38:	test   eax,eax
   140008c3a:	je     0x140008c46
   140008c3c:	mov    eax,DWORD PTR [rsp+0x70]
   140008c40:	cmp    DWORD PTR [rsp+0x74],eax
   140008c44:	jne    0x140008c68
   140008c46:	inc    esi
   140008c48:	inc    rbx
   140008c4b:	cmp    rbx,r15
   140008c4e:	jl     0x140008c16
   140008c50:	jmp    0x140008c87
   140008c52:	xor    r9d,r9d
   140008c55:	xor    r8d,r8d
   140008c58:	lea    edx,[r9+0x1]
   140008c5c:	mov    ecx,0xc000008c
   140008c61:	call   QWORD PTR [rip+0x38739]        # 0x1400413a0
   140008c67:	int3   
   140008c68:	mov    r12b,0x1
   140008c6b:	mov    r8d,0x4
   140008c71:	lea    rdx,[rip+0x3d1e8]        # 0x140045e60
   140008c78:	lea    rcx,[rsp+0x40]
   140008c7d:	call   0x140006cfc
   140008c82:	jmp    0x140008c87
   140008c84:	xor    r13d,r13d
   140008c87:	mov    ebx,0x68
   140008c8c:	mov    r8d,ebx
   140008c8f:	xor    edx,edx
   140008c91:	lea    rcx,[rbp+0x20]
   140008c95:	call   0x14002bb90
   140008c9a:	mov    DWORD PTR [rbp+0x20],ebx
   140008c9d:	xor    eax,eax
   140008c9f:	mov    QWORD PTR [rbp+0x88],rax
   140008ca6:	mov    QWORD PTR [rbp+0x90],rax
   140008cad:	mov    QWORD PTR [rbp+0x98],rax
   140008cb4:	mov    QWORD PTR [rbp+0xa0],rax
   140008cbb:	mov    QWORD PTR [rbp+0xa8],rax
   140008cc2:	mov    QWORD PTR [rbp+0xb0],rax
   140008cc9:	mov    QWORD PTR [rbp-0x28],rax
   140008ccd:	mov    QWORD PTR [rbp-0x20],rax
   140008cd1:	mov    QWORD PTR [rbp-0x18],rax
   140008cd5:	cmp    QWORD PTR [rbp+0x98],r13
   140008cdc:	jne    0x140008d33
   140008cde:	cmp    QWORD PTR [rbp+0xb0],r13
   140008ce5:	jne    0x140008d33
   140008ce7:	mov    DWORD PTR [rbp+0x0],0x18
   140008cee:	mov    QWORD PTR [rbp+0x8],r13
   140008cf2:	mov    DWORD PTR [rbp+0x10],0x1
   140008cf9:	xor    r9d,r9d
   140008cfc:	lea    r8,[rbp+0x0]
   140008d00:	lea    rdx,[rbp+0xb0]
   140008d07:	lea    rcx,[rbp+0x98]
   140008d0e:	call   QWORD PTR [rip+0x38954]        # 0x140041668
   140008d14:	test   eax,eax
   140008d16:	jne    0x140008d20
   140008d18:	call   QWORD PTR [rip+0x386ba]        # 0x1400413d8
   140008d1e:	jmp    0x140008d33
   140008d20:	mov    rax,QWORD PTR [rbp+0xb0]
   140008d27:	mov    QWORD PTR [rbp+0x80],rax
   140008d2e:	bts    DWORD PTR [rbp+0x5c],0x8
   140008d33:	mov    rbx,QWORD PTR [rsp+0x40]
   140008d38:	mov    edx,DWORD PTR [rbx-0x10]
   140008d3b:	inc    edx
   140008d3d:	jns    0x140008d4a
   140008d3f:	mov    ecx,0x80070057
   140008d44:	call   0x14000400c
   140008d49:	int3   
   140008d4a:	mov    ecx,0x1
   140008d4f:	sub    ecx,DWORD PTR [rbx-0x8]
   140008d52:	mov    eax,DWORD PTR [rbx-0xc]
   140008d55:	sub    eax,edx
   140008d57:	or     eax,ecx
   140008d59:	jge    0x140008d6a
   140008d5b:	lea    rcx,[rsp+0x40]
   140008d60:	call   0x140007098
   140008d65:	mov    rbx,QWORD PTR [rsp+0x40]
   140008d6a:	mov    edi,0x104
   140008d6f:	mov    r8d,edi
   140008d72:	lea    rdx,[rbp+0x140]
   140008d79:	xor    ecx,ecx
   140008d7b:	call   QWORD PTR [rip+0x385b7]        # 0x140041338
   140008d81:	test   eax,eax
   140008d83:	jne    0x140008d92
   140008d85:	call   QWORD PTR [rip+0x3864d]        # 0x1400413d8
   140008d8b:	mov    ecx,eax
   140008d8d:	jmp    0x140008fd2
   140008d92:	cmp    eax,edi
   140008d94:	ja     0x140008fcd
   140008d9a:	mov    edx,0x5c
   140008d9f:	lea    rcx,[rbp+0x140]
   140008da6:	call   0x1400278d4
   140008dab:	test   rax,rax
   140008dae:	jne    0x140008db8
   140008db0:	lea    ecx,[rax+0x7b]
   140008db3:	jmp    0x140008fd2
   140008db8:	mov    WORD PTR [rax+0x2],r13w
   140008dbd:	mov    rax,rdi
   140008dc0:	lea    rcx,[rbp+0x140]
   140008dc7:	cmp    WORD PTR [rcx],r13w
   140008dcb:	je     0x140008dd6
   140008dcd:	add    rcx,0x2
   140008dd1:	dec    rax
   140008dd4:	jne    0x140008dc7
   140008dd6:	test   rax,rax
   140008dd9:	je     0x140008fcd
   140008ddf:	mov    rcx,rdi
   140008de2:	sub    rcx,rax
   140008de5:	mov    QWORD PTR [rbp+0xc8],rcx
   140008dec:	sub    rdi,rcx
   140008def:	lea    rax,[rbp+0x140]
   140008df6:	lea    rax,[rax+rcx*2]
   140008dfa:	mov    r9d,r13d
   140008dfd:	je     0x140008e38
   140008dff:	lea    rdx,[rcx+0x7ffffefa]
   140008e06:	add    rdx,rdi
   140008e09:	lea    rcx,[rip+0x3d060]        # 0x140045e70
   140008e10:	sub    rcx,rax
   140008e13:	test   rdx,rdx
   140008e16:	je     0x140008e33
   140008e18:	movzx  r8d,WORD PTR [rax+rcx*1]
   140008e1d:	test   r8w,r8w
   140008e21:	je     0x140008e33
   140008e23:	mov    WORD PTR [rax],r8w
   140008e27:	add    rax,0x2
   140008e2b:	dec    rdx
   140008e2e:	dec    rdi
   140008e31:	jne    0x140008e13
   140008e33:	test   rdi,rdi
   140008e36:	jne    0x140008e42
   140008e38:	sub    rax,0x2
   140008e3c:	mov    r9d,0x8007007a
   140008e42:	mov    WORD PTR [rax],r13w
   140008e46:	test   r9d,r9d
   140008e49:	js     0x140008fcd
   140008e4f:	xor    r9d,r9d
   140008e52:	mov    r8,rbx
   140008e55:	mov    dl,0x13
   140008e57:	call   0x140015618
   140008e5c:	mov    rdx,QWORD PTR [rbp-0x30]
   140008e60:	movzx  eax,WORD PTR [rdx]
   140008e63:	neg    ax
   140008e66:	sbb    rcx,rcx
   140008e69:	and    rcx,rdx
   140008e6c:	test   r12b,r12b
   140008e6f:	sete   al
   140008e72:	mov    QWORD PTR [rsp+0x30],rcx
   140008e77:	mov    BYTE PTR [rsp+0x28],al
   140008e7b:	lea    r9,[rbp-0x28]
   140008e7f:	lea    r8,[rbp+0x20]
   140008e83:	mov    rdx,rbx
   140008e86:	lea    rcx,[rbp+0x140]
   140008e8d:	call   0x140018e14
   140008e92:	mov    edi,eax
   140008e94:	xor    r9d,r9d
   140008e97:	mov    r8,rbx
   140008e9a:	mov    dl,0x14
   140008e9c:	call   0x140015618
   140008ea1:	movsxd rdx,DWORD PTR [rbx-0xc]
   140008ea5:	mov    rcx,rbx
   140008ea8:	call   0x14002741c
   140008ead:	test   eax,eax
   140008eaf:	js     0x140008fc2
   140008eb5:	cmp    eax,DWORD PTR [rbx-0xc]
   140008eb8:	jg     0x140008fc2
   140008ebe:	mov    DWORD PTR [rbx-0x10],eax
   140008ec1:	cdqe   
   140008ec3:	mov    WORD PTR [rbx+rax*2],r13w
   140008ec8:	mov    rcx,QWORD PTR [rbp-0x28]
   140008ecc:	test   rcx,rcx
   140008ecf:	je     0x140008ed7
   140008ed1:	call   QWORD PTR [rip+0x384b1]        # 0x140041388
   140008ed7:	mov    rcx,QWORD PTR [rbp-0x20]
   140008edb:	test   rcx,rcx
   140008ede:	je     0x140008f7c
   140008ee4:	call   QWORD PTR [rip+0x3849e]        # 0x140041388
   140008eea:	jmp    0x140008f7c
   140008eef:	cmp    eax,0x1
   140008ef2:	je     0x140008f95
   140008ef8:	mov    rcx,QWORD PTR [rbp+0x98]
   140008eff:	test   rcx,rcx
   140008f02:	je     0x140008f95
   140008f08:	mov    QWORD PTR [rsp+0x20],r13
   140008f0d:	lea    r9,[rsp+0x78]
   140008f12:	mov    r8d,0x63
   140008f18:	lea    rdx,[rbp+0xd0]
   140008f1f:	call   QWORD PTR [rip+0x386fb]        # 0x140041620
   140008f25:	test   eax,eax
   140008f27:	jne    0x140008f3f
   140008f29:	call   QWORD PTR [rip+0x384a9]        # 0x1400413d8
   140008f2f:	movzx  ecx,ax
   140008f32:	or     ecx,0x80070000
   140008f38:	test   eax,eax
   140008f3a:	cmovle ecx,eax
   140008f3d:	jmp    0x140008f42
   140008f3f:	mov    ecx,r13d
   140008f42:	test   ecx,ecx
   140008f44:	js     0x140008f95
   140008f46:	mov    eax,DWORD PTR [rsp+0x78]
   140008f4a:	cmp    rax,0x64
   140008f4e:	jae    0x140008f8f
   140008f50:	mov    BYTE PTR [rbp+rax*1+0xd0],r13b
   140008f58:	mov    rcx,QWORD PTR [r14+0x8]
   140008f5c:	lea    rax,[rbp+0xd0]
   140008f63:	mov    QWORD PTR [rbp-0x8],rax
   140008f67:	mov    rax,QWORD PTR [rcx]
   140008f6a:	lea    r9,[rbp-0x8]
   140008f6e:	mov    edx,0xa1230917
   140008f73:	mov    r8d,0x1
   140008f79:	call   QWORD PTR [rax+0x8]
   140008f7c:	lea    rcx,[rbp+0x20]
   140008f80:	call   0x1400155b4
   140008f85:	test   eax,eax
   140008f87:	jns    0x140008eef
   140008f8d:	jmp    0x140008f95
   140008f8f:	call   0x140027cb8
   140008f94:	int3   
   140008f95:	test   edi,edi
   140008f97:	je     0x140008fb8
   140008f99:	mov    eax,edi
   140008f9b:	and    eax,0x1fff0000
   140008fa0:	mov    rcx,QWORD PTR [r14+0x8]
   140008fa4:	xor    r9d,r9d
   140008fa7:	xor    r8d,r8d
   140008faa:	cmp    eax,0x1230000
   140008faf:	mov    rax,QWORD PTR [rcx]
   140008fb2:	jne    0x140008fe5
   140008fb4:	mov    edx,edi
   140008fb6:	jmp    0x140008fea
   140008fb8:	mov    DWORD PTR [r14+0x10],0x1
   140008fc0:	jmp    0x140008ff3
   140008fc2:	mov    ecx,0x80070057
   140008fc7:	call   0x14000400c
   140008fcc:	int3   
   140008fcd:	mov    ecx,0x6f
   140008fd2:	call   QWORD PTR [rip+0x38348]        # 0x140041320
   140008fd8:	mov    rcx,QWORD PTR [r14+0x8]
   140008fdc:	mov    rax,QWORD PTR [rcx]
   140008fdf:	xor    r9d,r9d
   140008fe2:	xor    r8d,r8d
   140008fe5:	mov    edx,0xe1230572
   140008fea:	call   QWORD PTR [rax]
   140008fec:	mov    DWORD PTR [r14],0x1
   140008ff3:	lea    rdi,[rbp+0xa0]
   140008ffa:	mov    esi,0x3
   140008fff:	mov    rcx,QWORD PTR [rdi-0x18]
   140009003:	test   rcx,rcx
   140009006:	je     0x14000900e
   140009008:	call   QWORD PTR [rip+0x3837a]        # 0x140041388
   14000900e:	mov    rcx,QWORD PTR [rdi]
   140009011:	test   rcx,rcx
   140009014:	je     0x14000901c
   140009016:	call   QWORD PTR [rip+0x3836c]        # 0x140041388
   14000901c:	add    rdi,0x8
   140009020:	dec    rsi
   140009023:	jne    0x140008fff
   140009025:	lea    rcx,[rbp-0x58]
   140009029:	call   0x1400072ec
   14000902e:	nop
   14000902f:	lea    rdx,[rbx-0x18]
   140009033:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140009038:	jg     0x140009043
   14000903a:	mov    rcx,QWORD PTR [rdx]
   14000903d:	mov    rax,QWORD PTR [rcx]
   140009040:	call   QWORD PTR [rax+0x8]
   140009043:	mov    rcx,QWORD PTR [rbp+0x350]
   14000904a:	xor    rcx,rsp
   14000904d:	call   0x1400265a0
   140009052:	mov    rbx,QWORD PTR [rsp+0x4b0]
   14000905a:	add    rsp,0x460
   140009061:	pop    r15
   140009063:	pop    r14
   140009065:	pop    r13
   140009067:	pop    r12
   140009069:	pop    rdi
   14000906a:	pop    rsi
   14000906b:	pop    rbp
   14000906c:	ret    
   14000906d:	int3   
   14000906e:	int3   
   14000906f:	int3   
   140009070:	mov    rax,rsp
   140009073:	push   rsi
   140009074:	push   rdi
   140009075:	push   r14
   140009077:	sub    rsp,0x50
   14000907b:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140009083:	mov    QWORD PTR [rax+0x8],rbx
   140009087:	mov    QWORD PTR [rax+0x18],rbp
   14000908b:	mov    r14,r8
   14000908e:	mov    ebx,edx
   140009090:	mov    rsi,rcx
   140009093:	mov    r9d,edx
   140009096:	xor    r8d,r8d
   140009099:	mov    dl,0xa
   14000909b:	call   0x140015618
   1400090a0:	mov    edi,ebx
   1400090a2:	imul   edi,edi,0x3e8
   1400090a8:	cmp    ebx,0xffffffff
   1400090ab:	cmove  edi,ebx
   1400090ae:	mov    rcx,QWORD PTR [rsi+0x8]
   1400090b2:	mov    rax,QWORD PTR [rcx]
   1400090b5:	xor    r9d,r9d
   1400090b8:	xor    r8d,r8d
   1400090bb:	mov    edx,0x61230ce7
   1400090c0:	call   QWORD PTR [rax]
   1400090c2:	mov    ebx,0xe1230527
   1400090c7:	call   QWORD PTR [rip+0x38293]        # 0x140041360
   1400090cd:	mov    ebp,eax
   1400090cf:	cmp    edi,0xffffffff
   1400090d2:	je     0x1400090e0
   1400090d4:	call   QWORD PTR [rip+0x38286]        # 0x140041360
   1400090da:	sub    eax,ebp
   1400090dc:	cmp    eax,edi
   1400090de:	jae    0x1400090fd
   1400090e0:	xor    edx,edx
   1400090e2:	mov    rcx,r14
   1400090e5:	call   0x140018b6c
   1400090ea:	mov    ebx,eax
   1400090ec:	test   eax,eax
   1400090ee:	je     0x14000911d
   1400090f0:	mov    ecx,0xc8
   1400090f5:	call   QWORD PTR [rip+0x38245]        # 0x140041340
   1400090fb:	jmp    0x1400090cf
   1400090fd:	test   ebx,ebx
   1400090ff:	je     0x14000911d
   140009101:	mov    rcx,QWORD PTR [rsi+0x8]
   140009105:	mov    rax,QWORD PTR [rcx]
   140009108:	xor    r9d,r9d
   14000910b:	xor    r8d,r8d
   14000910e:	mov    edx,ebx
   140009110:	call   QWORD PTR [rax]
   140009112:	mov    DWORD PTR [rsi],0x1
   140009118:	jmp    0x1400091ce
   14000911d:	cmp    edi,0xffffffff
   140009120:	je     0x140009134
   140009122:	call   QWORD PTR [rip+0x38238]        # 0x140041360
   140009128:	sub    eax,ebp
   14000912a:	cmp    edi,eax
   14000912c:	jae    0x140009132
   14000912e:	xor    edi,edi
   140009130:	jmp    0x140009134
   140009132:	sub    edi,eax
   140009134:	lea    rax,[rip+0x3c66d]        # 0x1400457a8
   14000913b:	mov    QWORD PTR [rsp+0x38],rax
   140009140:	lea    rax,[rip+0x3d0e9]        # 0x140046230
   140009147:	mov    QWORD PTR [rsp+0x38],rax
   14000914c:	and    QWORD PTR [rsp+0x40],0x0
   140009152:	lea    rax,[rip+0x3d3cf]        # 0x140046528
   140009159:	mov    QWORD PTR [rsp+0x38],rax
   14000915e:	and    DWORD PTR [rsp+0x48],0x0
   140009163:	mov    r9d,0x100000
   140009169:	mov    rdx,QWORD PTR [rip+0x53a90]        # 0x14005cc00
   140009170:	lea    rcx,[rsp+0x38]
   140009175:	call   0x140015830
   14000917a:	test   eax,eax
   14000917c:	jne    0x140009185
   14000917e:	mov    edx,0xe1230529
   140009183:	jmp    0x1400091af
   140009185:	lea    r8,[rsp+0x78]
   14000918a:	mov    edx,edi
   14000918c:	lea    rcx,[rsp+0x38]
   140009191:	call   0x14001585c
   140009196:	mov    eax,DWORD PTR [rsp+0x78]
   14000919a:	test   eax,eax
   14000919c:	je     0x1400091c4
   14000919e:	cmp    eax,0x102
   1400091a3:	mov    edx,0xe1230527
   1400091a8:	je     0x1400091af
   1400091aa:	mov    edx,0xe1230528
   1400091af:	mov    rcx,QWORD PTR [rsi+0x8]
   1400091b3:	mov    rax,QWORD PTR [rcx]
   1400091b6:	xor    r9d,r9d
   1400091b9:	xor    r8d,r8d
   1400091bc:	call   QWORD PTR [rax]
   1400091be:	mov    DWORD PTR [rsi],0x1
   1400091c4:	lea    rcx,[rsp+0x38]
   1400091c9:	call   0x140015774
   1400091ce:	lea    r11,[rsp+0x50]
   1400091d3:	mov    rbx,QWORD PTR [r11+0x20]
   1400091d7:	mov    rbp,QWORD PTR [r11+0x30]
   1400091db:	mov    rsp,r11
   1400091de:	pop    r14
   1400091e0:	pop    rdi
   1400091e1:	pop    rsi
   1400091e2:	ret    
   1400091e3:	int3   
   1400091e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400091e9:	mov    QWORD PTR [rsp+0x10],rbp
   1400091ee:	mov    QWORD PTR [rsp+0x18],rsi
   1400091f3:	push   rdi
   1400091f4:	sub    rsp,0x20
   1400091f8:	xor    esi,esi
   1400091fa:	or     rbp,0xffffffffffffffff
   1400091fe:	mov    rbx,rcx
   140009201:	mov    edi,esi
   140009203:	cmp    DWORD PTR [rcx+0x4],esi
   140009206:	je     0x140009220
   140009208:	mov    edx,DWORD PTR [rcx+0x4]
   14000920b:	lea    eax,[rsi+0x8]
   14000920e:	mul    rdx
   140009211:	cmovo  rax,rbp
   140009215:	mov    rcx,rax
   140009218:	call   0x140027888
   14000921d:	mov    rdi,rax
   140009220:	lea    rax,[rbx+0x8]
   140009224:	mov    edx,esi
   140009226:	cmp    DWORD PTR [rbx+0x4],esi
   140009229:	jbe    0x14000924c
   14000922b:	mov    ecx,edx
   14000922d:	mov    QWORD PTR [rdi+rcx*8],rax
   140009231:	mov    rcx,rbp
   140009234:	inc    rcx
   140009237:	cmp    WORD PTR [rax+rcx*2],si
   14000923b:	jne    0x140009234
   14000923d:	lea    rax,[rax+rcx*2]
   140009241:	inc    edx
   140009243:	add    rax,0x2
   140009247:	cmp    edx,DWORD PTR [rbx+0x4]
   14000924a:	jb     0x14000922b
   14000924c:	mov    ecx,DWORD PTR [rbx]
   14000924e:	mov    r8,rdi
   140009251:	call   0x140011d9c
   140009256:	mov    rcx,rdi
   140009259:	mov    rbx,rax
   14000925c:	call   0x140026c1c
   140009261:	mov    rbp,QWORD PTR [rsp+0x38]
   140009266:	mov    rsi,QWORD PTR [rsp+0x40]
   14000926b:	mov    rax,rbx
   14000926e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009273:	add    rsp,0x20
   140009277:	pop    rdi
   140009278:	ret    
   140009279:	int3   
   14000927a:	int3   
   14000927b:	int3   
   14000927c:	mov    rax,rsp
   14000927f:	push   r15
   140009281:	sub    rsp,0x130
   140009288:	mov    QWORD PTR [rax-0xb0],0xfffffffffffffffe
   140009293:	mov    QWORD PTR [rax+0x10],rbx
   140009297:	mov    QWORD PTR [rax+0x18],rsi
   14000929b:	mov    QWORD PTR [rax+0x20],r14
   14000929f:	mov    rax,QWORD PTR [rip+0x4fde2]        # 0x140059088
   1400092a6:	xor    rax,rsp
   1400092a9:	mov    QWORD PTR [rsp+0x120],rax
   1400092b1:	mov    r14,rcx
   1400092b4:	mov    QWORD PTR [rsp+0x58],rcx
   1400092b9:	mov    r8,QWORD PTR [rip+0x53940]        # 0x14005cc00
   1400092c0:	xor    edx,edx
   1400092c2:	mov    ecx,0x20000
   1400092c7:	call   QWORD PTR [rip+0x3803b]        # 0x140041308
   1400092cd:	mov    rsi,rax
   1400092d0:	test   rax,rax
   1400092d3:	je     0x1400094db
   1400092d9:	and    QWORD PTR [rsp+0x50],0x0
   1400092df:	lea    rax,[rsp+0x50]
   1400092e4:	mov    QWORD PTR [rsp+0x38],rax
   1400092e9:	and    QWORD PTR [rsp+0x30],0x0
   1400092ef:	lea    rax,[rsp+0x60]
   1400092f4:	mov    QWORD PTR [rsp+0x28],rax
   1400092f9:	and    QWORD PTR [rsp+0x20],0x0
   1400092ff:	xor    r9d,r9d
   140009302:	lea    edx,[r9+0x6]
   140009306:	lea    r8d,[r9+0x4]
   14000930a:	mov    rcx,rsi
   14000930d:	call   QWORD PTR [rip+0x37d15]        # 0x140041028
   140009313:	mov    ebx,eax
   140009315:	mov    rcx,rsi
   140009318:	call   QWORD PTR [rip+0x3806a]        # 0x140041388
   14000931e:	test   ebx,ebx
   140009320:	jne    0x1400094db
   140009326:	and    QWORD PTR [rsp+0x48],0x0
   14000932c:	lea    r8,[rsp+0x48]
   140009331:	lea    rdx,[rsp+0x44]
   140009336:	mov    rcx,QWORD PTR [rsp+0x60]
   14000933b:	call   QWORD PTR [rip+0x37cff]        # 0x140041040
   140009341:	test   eax,eax
   140009343:	jne    0x1400094c0
   140009349:	cmp    DWORD PTR [rsp+0x44],eax
   14000934d:	jbe    0x1400094c0
   140009353:	mov    rcx,QWORD PTR [r14+0x8]
   140009357:	mov    rax,QWORD PTR [rcx]
   14000935a:	xor    r9d,r9d
   14000935d:	xor    r8d,r8d
   140009360:	mov    edx,0x61230d41
   140009365:	call   QWORD PTR [rax]
   140009367:	mov    DWORD PTR [rsp+0x40],ebx
   14000936b:	cmp    ebx,DWORD PTR [rsp+0x44]
   14000936f:	jae    0x1400094c0
   140009375:	lea    rsi,[rbx+rbx*2]
   140009379:	shl    rsi,0x4
   14000937d:	add    rsi,QWORD PTR [rsp+0x48]
   140009382:	cmp    DWORD PTR [rsi+0x1c],0x0
   140009386:	jne    0x140009488
   14000938c:	mov    rcx,QWORD PTR [rsi+0x28]
   140009390:	call   QWORD PTR [rip+0x37c9a]        # 0x140041030
   140009396:	test   eax,eax
   140009398:	je     0x1400094b9
   14000939e:	mov    r15,QWORD PTR [rsi+0x28]
   1400093a2:	mov    DWORD PTR [rsp+0x98],0x0
   1400093ad:	mov    WORD PTR [rsp+0x9c],0x500
   1400093b7:	mov    rcx,r15
   1400093ba:	call   QWORD PTR [rip+0x37dc0]        # 0x140041180
   1400093c0:	test   rax,rax
   1400093c3:	je     0x140009400
   1400093c5:	mov    edx,DWORD PTR [rax]
   1400093c7:	cmp    edx,DWORD PTR [rsp+0x98]
   1400093ce:	jne    0x140009400
   1400093d0:	movzx  eax,WORD PTR [rax+0x4]
   1400093d4:	cmp    ax,WORD PTR [rsp+0x9c]
   1400093dc:	jne    0x140009400
   1400093de:	mov    rcx,r15
   1400093e1:	call   QWORD PTR [rip+0x37d79]        # 0x140041160
   1400093e7:	cmp    BYTE PTR [rax],0x3
   1400093ea:	jne    0x140009400
   1400093ec:	xor    edx,edx
   1400093ee:	mov    rcx,r15
   1400093f1:	call   QWORD PTR [rip+0x37d79]        # 0x140041170
   1400093f7:	cmp    DWORD PTR [rax],0x5
   1400093fa:	je     0x1400094b9
   140009400:	mov    rdx,QWORD PTR [rsi+0x28]
   140009404:	lea    rcx,[rsp+0xa0]
   14000940c:	call   0x14001016c
   140009411:	nop
   140009412:	lea    rax,[rsp+0xd0]
   14000941a:	cmp    QWORD PTR [rsp+0xe8],0x8
   140009423:	cmovae rax,QWORD PTR [rsp+0xd0]
   14000942c:	mov    QWORD PTR [rsp+0x78],rax
   140009431:	lea    rax,[rsp+0xf0]
   140009439:	cmp    QWORD PTR [rsp+0x108],0x8
   140009442:	cmovae rax,QWORD PTR [rsp+0xf0]
   14000944b:	mov    QWORD PTR [rsp+0x80],rax
   140009453:	mov    rcx,QWORD PTR [r14+0x8]
   140009457:	mov    rax,QWORD PTR [rcx]
   14000945a:	lea    r9,[rsp+0x78]
   14000945f:	mov    edx,0x61230d42
   140009464:	mov    r8d,0x2
   14000946a:	call   QWORD PTR [rax]
   14000946c:	nop
   14000946d:	lea    rcx,[rsp+0xa0]
   140009475:	call   0x140010294
   14000947a:	nop
   14000947b:	jmp    0x1400094b9
   14000947d:	mov    ebx,DWORD PTR [rsp+0x40]
   140009481:	mov    r14,QWORD PTR [rsp+0x58]
   140009486:	jmp    0x1400094b9
   140009488:	lea    rax,[rip+0x3ca01]        # 0x140045e90
   14000948f:	mov    QWORD PTR [rsp+0x68],rax
   140009494:	lea    rax,[rip+0x3ca0d]        # 0x140045ea8
   14000949b:	mov    QWORD PTR [rsp+0x70],rax
   1400094a0:	mov    rcx,QWORD PTR [r14+0x8]
   1400094a4:	mov    rax,QWORD PTR [rcx]
   1400094a7:	lea    r9,[rsp+0x68]
   1400094ac:	mov    edx,0x61230d42
   1400094b1:	mov    r8d,0x2
   1400094b7:	call   QWORD PTR [rax]
   1400094b9:	inc    ebx
   1400094bb:	jmp    0x140009367
   1400094c0:	mov    rcx,QWORD PTR [rsp+0x48]
   1400094c5:	test   rcx,rcx
   1400094c8:	je     0x1400094d0
   1400094ca:	call   QWORD PTR [rip+0x37ef8]        # 0x1400413c8
   1400094d0:	mov    rcx,QWORD PTR [rsp+0x50]
   1400094d5:	call   QWORD PTR [rip+0x37eed]        # 0x1400413c8
   1400094db:	mov    rcx,QWORD PTR [rsp+0x120]
   1400094e3:	xor    rcx,rsp
   1400094e6:	call   0x1400265a0
   1400094eb:	lea    r11,[rsp+0x130]
   1400094f3:	mov    rbx,QWORD PTR [r11+0x18]
   1400094f7:	mov    rsi,QWORD PTR [r11+0x20]
   1400094fb:	mov    r14,QWORD PTR [r11+0x28]
   1400094ff:	mov    rsp,r11
   140009502:	pop    r15
   140009504:	ret    
   140009505:	int3   
   140009506:	int3   
   140009507:	int3   
   140009508:	mov    rax,rsp
   14000950b:	push   rdi
   14000950c:	push   r12
   14000950e:	push   r13
   140009510:	push   r14
   140009512:	push   r15
   140009514:	sub    rsp,0x4a0
   14000951b:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140009524:	mov    QWORD PTR [rax+0x10],rbx
   140009528:	mov    QWORD PTR [rax+0x18],rsi
   14000952c:	mov    rax,QWORD PTR [rip+0x4fb55]        # 0x140059088
   140009533:	xor    rax,rsp
   140009536:	mov    QWORD PTR [rsp+0x490],rax
   14000953e:	mov    ebx,edx
   140009540:	mov    rdi,rcx
   140009543:	mov    QWORD PTR [rsp+0x58],rcx
   140009548:	xor    r9d,r9d
   14000954b:	xor    r8d,r8d
   14000954e:	mov    dl,0xb
   140009550:	call   0x140015618
   140009555:	mov    rcx,QWORD PTR [rdi+0x8]
   140009559:	mov    rax,QWORD PTR [rcx]
   14000955c:	xor    r9d,r9d
   14000955f:	xor    r8d,r8d
   140009562:	mov    edx,0x61230ce8
   140009567:	call   QWORD PTR [rax]
   140009569:	xor    edx,edx
   14000956b:	xor    ecx,ecx
   14000956d:	call   0x140018b6c
   140009572:	xor    r12d,r12d
   140009575:	test   eax,eax
   140009577:	je     0x14000959a
   140009579:	mov    rcx,QWORD PTR [rdi+0x8]
   14000957d:	mov    rax,QWORD PTR [rcx]
   140009580:	xor    r9d,r9d
   140009583:	xor    r8d,r8d
   140009586:	mov    edx,0xe123051a
   14000958b:	call   QWORD PTR [rax]
   14000958d:	lea    r14d,[r12+0x1]
   140009592:	mov    DWORD PTR [rdi],r14d
   140009595:	jmp    0x140009d49
   14000959a:	lea    rsi,[rip+0x3cecf]        # 0x140046470
   1400095a1:	mov    QWORD PTR [rsp+0x350],rsi
   1400095a9:	lea    r14,[rip+0x3c1f8]        # 0x1400457a8
   1400095b0:	mov    QWORD PTR [rsp+0x358],r14
   1400095b8:	lea    r13,[rip+0x3cc71]        # 0x140046230
   1400095bf:	mov    QWORD PTR [rsp+0x358],r13
   1400095c7:	mov    QWORD PTR [rsp+0x360],r12
   1400095cf:	lea    rax,[rip+0x3cf1a]        # 0x1400464f0
   1400095d6:	mov    QWORD PTR [rsp+0x350],rax
   1400095de:	lea    rax,[rip+0x3cf23]        # 0x140046508
   1400095e5:	mov    QWORD PTR [rsp+0x358],rax
   1400095ed:	mov    QWORD PTR [rsp+0x368],r12
   1400095f5:	mov    QWORD PTR [rsp+0x370],r12
   1400095fd:	mov    DWORD PTR [rsp+0x378],r12d
   140009605:	mov    QWORD PTR [rsp+0x380],r12
   14000960d:	mov    BYTE PTR [rsp+0x388],r12b
   140009615:	lea    rdx,[rsp+0x350]
   14000961d:	mov    rcx,rdi
   140009620:	call   0x140007ba4
   140009625:	test   al,al
   140009627:	je     0x140009d3c
   14000962d:	mov    r15d,r12d
   140009630:	mov    QWORD PTR [rsp+0x210],rsi
   140009638:	mov    QWORD PTR [rsp+0x218],r14
   140009640:	mov    QWORD PTR [rsp+0x218],r13
   140009648:	mov    QWORD PTR [rsp+0x220],r12
   140009650:	lea    rax,[rip+0x3ce99]        # 0x1400464f0
   140009657:	mov    QWORD PTR [rsp+0x210],rax
   14000965f:	lea    rax,[rip+0x3cea2]        # 0x140046508
   140009666:	mov    QWORD PTR [rsp+0x218],rax
   14000966e:	mov    QWORD PTR [rsp+0x228],r12
   140009676:	mov    QWORD PTR [rsp+0x230],r12
   14000967e:	mov    DWORD PTR [rsp+0x238],r12d
   140009686:	mov    QWORD PTR [rsp+0x240],r12
   14000968e:	mov    BYTE PTR [rsp+0x248],r12b
   140009696:	mov    r14d,0x1
   14000969c:	mov    DWORD PTR [rsp+0x28],r14d
   1400096a1:	mov    DWORD PTR [rsp+0x20],r12d
   1400096a6:	xor    r9d,r9d
   1400096a9:	mov    r8d,0x4d28
   1400096af:	mov    rdx,QWORD PTR [rip+0x53572]        # 0x14005cc28
   1400096b6:	lea    rcx,[rsp+0x210]
   1400096be:	call   0x1400150ac
   1400096c3:	cmp    DWORD PTR [rsp+0x230],r12d
   1400096cb:	je     0x1400097cc
   1400096d1:	mov    rsi,QWORD PTR [rsp+0x228]
   1400096d9:	mov    r15d,DWORD PTR [rsi+0xa4]
   1400096e0:	test   ebx,ebx
   1400096e2:	je     0x1400097cc
   1400096e8:	mov    rcx,QWORD PTR [rdi+0x8]
   1400096ec:	mov    rax,QWORD PTR [rcx]
   1400096ef:	xor    r9d,r9d
   1400096f2:	xor    r8d,r8d
   1400096f5:	mov    r13d,0x61230ce9
   1400096fb:	mov    edx,r13d
   1400096fe:	call   QWORD PTR [rax]
   140009700:	mov    r8d,DWORD PTR [rsi+0x68]
   140009704:	lea    edx,[r13+0x4]
   140009708:	mov    rcx,QWORD PTR [rdi+0x8]
   14000970c:	call   0x1400041e0
   140009711:	mov    r8d,DWORD PTR [rsi+0x6c]
   140009715:	lea    edx,[r13+0x3]
   140009719:	mov    rcx,QWORD PTR [rdi+0x8]
   14000971d:	call   0x1400041e0
   140009722:	cmp    r15d,0x2
   140009726:	jne    0x14000974a
   140009728:	mov    r8d,DWORD PTR [rsi+0x74]
   14000972c:	lea    edx,[r13+0x5]
   140009730:	mov    rcx,QWORD PTR [rdi+0x8]
   140009734:	call   0x1400041e0
   140009739:	mov    r8d,DWORD PTR [rsi+0x78]
   14000973d:	lea    edx,[r13+0x6]
   140009741:	mov    rcx,QWORD PTR [rdi+0x8]
   140009745:	call   0x1400041e0
   14000974a:	mov    rcx,QWORD PTR [rdi+0x8]
   14000974e:	mov    rax,QWORD PTR [rcx]
   140009751:	xor    r9d,r9d
   140009754:	xor    r8d,r8d
   140009757:	mov    edx,0x61230cf0
   14000975c:	call   QWORD PTR [rax]
   14000975e:	cmp    DWORD PTR [rsi+0x9f4],0x0
   140009765:	jbe    0x1400097b5
   140009767:	mov    eax,r12d
   14000976a:	lea    rcx,[rax+rax*2]
   14000976e:	shl    rcx,0x7
   140009772:	add    rcx,0x9f8
   140009779:	add    rcx,rsi
   14000977c:	call   0x1400091e4
   140009781:	mov    rbx,rax
   140009784:	mov    rcx,QWORD PTR [rdi+0x8]
   140009788:	mov    QWORD PTR [rsp+0x40],rax
   14000978d:	mov    r10,QWORD PTR [rcx]
   140009790:	lea    r9,[rsp+0x40]
   140009795:	mov    r8d,r14d
   140009798:	mov    edx,0x61230cf1
   14000979d:	call   QWORD PTR [r10]
   1400097a0:	mov    rcx,rbx
   1400097a3:	call   QWORD PTR [rip+0x37c1f]        # 0x1400413c8
   1400097a9:	add    r12d,r14d
   1400097ac:	cmp    r12d,DWORD PTR [rsi+0x9f4]
   1400097b3:	jb     0x140009767
   1400097b5:	mov    rcx,QWORD PTR [rdi+0x8]
   1400097b9:	mov    rax,QWORD PTR [rcx]
   1400097bc:	xor    r9d,r9d
   1400097bf:	xor    r8d,r8d
   1400097c2:	mov    edx,r13d
   1400097c5:	call   QWORD PTR [rax]
   1400097c7:	xor    r12d,r12d
   1400097ca:	jmp    0x1400097d2
   1400097cc:	mov    r13d,0x61230ce9
   1400097d2:	mov    rbx,QWORD PTR [rsp+0x368]
   1400097da:	mov    rcx,QWORD PTR [rdi+0x8]
   1400097de:	mov    rax,QWORD PTR [rcx]
   1400097e1:	xor    r9d,r9d
   1400097e4:	xor    r8d,r8d
   1400097e7:	mov    edx,r13d
   1400097ea:	call   QWORD PTR [rax]
   1400097ec:	mov    rcx,QWORD PTR [rdi+0x8]
   1400097f0:	lea    rax,[rbx+0x14]
   1400097f4:	mov    QWORD PTR [rsp+0x40],rax
   1400097f9:	mov    rax,QWORD PTR [rcx]
   1400097fc:	lea    r9,[rsp+0x40]
   140009801:	mov    r8d,r14d
   140009804:	mov    edx,0x61230d2f
   140009809:	call   QWORD PTR [rax]
   14000980b:	mov    rcx,QWORD PTR [rdi+0x8]
   14000980f:	lea    rdx,[rip+0x3c372]        # 0x140045b88
   140009816:	lea    rax,[rip+0x3c673]        # 0x140045e90
   14000981d:	cmp    r15d,r14d
   140009820:	cmove  rax,rdx
   140009824:	lea    rdx,[rip+0x3c335]        # 0x140045b60
   14000982b:	cmp    r15d,0x8
   14000982f:	cmove  rax,rdx
   140009833:	lea    rdx,[rip+0x3c33e]        # 0x140045b78
   14000983a:	cmp    r15d,0x4
   14000983e:	cmove  rax,rdx
   140009842:	lea    rdx,[rip+0x3c307]        # 0x140045b50
   140009849:	cmp    r15d,0x2
   14000984d:	cmove  rax,rdx
   140009851:	mov    QWORD PTR [rsp+0x40],rax
   140009856:	mov    rax,QWORD PTR [rcx]
   140009859:	lea    r9,[rsp+0x40]
   14000985e:	mov    r8d,r14d
   140009861:	mov    edx,0x61230d47
   140009866:	call   QWORD PTR [rax]
   140009868:	mov    r8d,DWORD PTR [rbx]
   14000986b:	mov    edx,0x61230cf2
   140009870:	mov    rcx,QWORD PTR [rdi+0x8]
   140009874:	call   0x1400041e0
   140009879:	mov    r8d,DWORD PTR [rbx+0x4]
   14000987d:	mov    edx,0x61230cf3
   140009882:	mov    rcx,QWORD PTR [rdi+0x8]
   140009886:	call   0x1400041e0
   14000988b:	mov    r8d,DWORD PTR [rbx+0x8]
   14000988f:	mov    edx,0x61230cf4
   140009894:	mov    rcx,QWORD PTR [rdi+0x8]
   140009898:	call   0x1400041e0
   14000989d:	mov    r8d,DWORD PTR [rbx+0xc]
   1400098a1:	mov    edx,0x61230cf5
   1400098a6:	mov    rcx,QWORD PTR [rdi+0x8]
   1400098aa:	call   0x1400041e0
   1400098af:	mov    rcx,QWORD PTR [rdi+0x8]
   1400098b3:	mov    rax,QWORD PTR [rcx]
   1400098b6:	xor    r9d,r9d
   1400098b9:	xor    r8d,r8d
   1400098bc:	mov    edx,r13d
   1400098bf:	call   QWORD PTR [rax]
   1400098c1:	or     rsi,0xffffffffffffffff
   1400098c5:	mov    r13d,0x10012
   1400098cb:	cmp    r15d,0x10
   1400098cf:	ja     0x14000991d
   1400098d1:	bt     r13d,r15d
   1400098d5:	jae    0x14000991d
   1400098d7:	mov    QWORD PTR [rsp+0x30],r12
   1400098dc:	mov    DWORD PTR [rsp+0x28],r12d
   1400098e1:	lea    r8d,[rsi+0x4]
   1400098e5:	mov    DWORD PTR [rsp+0x20],r8d
   1400098ea:	xor    r9d,r9d
   1400098ed:	mov    edx,0x80000000
   1400098f2:	lea    rcx,[rip+0x3c407]        # 0x140045d00
   1400098f9:	call   QWORD PTR [rip+0x37a31]        # 0x140041330
   1400098ff:	mov    rsi,rax
   140009902:	cmp    rax,0xffffffffffffffff
   140009906:	jne    0x14000991d
   140009908:	mov    rcx,QWORD PTR [rdi+0x8]
   14000990c:	mov    r10,QWORD PTR [rcx]
   14000990f:	xor    r9d,r9d
   140009912:	xor    r8d,r8d
   140009915:	mov    edx,0xa1230918
   14000991a:	call   QWORD PTR [r10]
   14000991d:	lea    rcx,[rsp+0x90]
   140009925:	call   0x14001a598
   14000992a:	nop
   14000992b:	mov    BYTE PTR [rsp+0x20],r14b
   140009930:	xor    r9d,r9d
   140009933:	mov    r8d,DWORD PTR [rbx]
   140009936:	mov    edx,DWORD PTR [rbx+0x4]
   140009939:	lea    rcx,[rsp+0x90]
   140009941:	call   0x14001a6b0
   140009946:	nop
   140009947:	mov    rcx,QWORD PTR [rsp+0x200]
   14000994f:	call   0x140019fec
   140009954:	lea    rcx,[rsp+0xa0]
   14000995c:	mov    rax,QWORD PTR [rsp+0xa0]
   140009964:	call   QWORD PTR [rax+0x8]
   140009967:	mov    r8d,DWORD PTR [rax]
   14000996a:	mov    edx,0x61230cf6
   14000996f:	mov    rcx,QWORD PTR [rdi+0x8]
   140009973:	call   0x1400041e0
   140009978:	lea    rcx,[rsp+0xa0]
   140009980:	mov    rax,QWORD PTR [rsp+0xa0]
   140009988:	call   QWORD PTR [rax+0x8]
   14000998b:	mov    r8d,DWORD PTR [rax+0x4]
   14000998f:	mov    edx,0x61230cf7
   140009994:	mov    rcx,QWORD PTR [rdi+0x8]
   140009998:	call   0x1400041e0
   14000999d:	cmp    r15d,0x10
   1400099a1:	ja     0x140009a17
   1400099a3:	bt     r13d,r15d
   1400099a7:	jae    0x140009a17
   1400099a9:	cmp    rsi,0xffffffffffffffff
   1400099ad:	je     0x140009a61
   1400099b3:	mov    DWORD PTR [rsp+0x78],r12d
   1400099b8:	mov    QWORD PTR [rsp+0x38],r12
   1400099bd:	lea    rax,[rsp+0x48]
   1400099c2:	mov    QWORD PTR [rsp+0x30],rax
   1400099c7:	mov    DWORD PTR [rsp+0x28],0x10
   1400099cf:	lea    rax,[rsp+0x58]
   1400099d4:	mov    QWORD PTR [rsp+0x20],rax
   1400099d9:	mov    r9d,0x10
   1400099df:	lea    r8,[rsp+0x78]
   1400099e4:	mov    edx,0x80006490
   1400099e9:	mov    rcx,rsi
   1400099ec:	call   QWORD PTR [rip+0x3790e]        # 0x140041300
   1400099f2:	test   eax,eax
   1400099f4:	je     0x140009a61
   1400099f6:	mov    r8d,r12d
   1400099f9:	cmp    DWORD PTR [rsp+0x60],r12d
   1400099fe:	sete   r8b
   140009a02:	mov    edx,0x61230cf8
   140009a07:	mov    rcx,QWORD PTR [rdi+0x8]
   140009a0b:	call   0x1400041e0
   140009a10:	mov    r8d,DWORD PTR [rsp+0x5c]
   140009a15:	jmp    0x140009a53
   140009a17:	lea    rcx,[rsp+0xa0]
   140009a1f:	mov    rax,QWORD PTR [rsp+0xa0]
   140009a27:	call   QWORD PTR [rax+0x8]
   140009a2a:	mov    r8d,DWORD PTR [rax+0xc]
   140009a2e:	mov    edx,0x61230cf8
   140009a33:	mov    rcx,QWORD PTR [rdi+0x8]
   140009a37:	call   0x1400041e0
   140009a3c:	lea    rcx,[rsp+0xa0]
   140009a44:	mov    rax,QWORD PTR [rsp+0xa0]
   140009a4c:	call   QWORD PTR [rax+0x8]
   140009a4f:	mov    r8d,DWORD PTR [rax+0x10]
   140009a53:	mov    edx,0x61230cf9
   140009a58:	mov    rcx,QWORD PTR [rdi+0x8]
   140009a5c:	call   0x1400041e0
   140009a61:	lea    rcx,[rsp+0xa0]
   140009a69:	mov    rax,QWORD PTR [rsp+0xa0]
   140009a71:	call   QWORD PTR [rax+0x8]
   140009a74:	mov    r12d,DWORD PTR [rax+0x8]
   140009a78:	movsxd r15,r15d
   140009a7b:	mov    QWORD PTR [rsp+0x40],r15
   140009a80:	jmp    0x140009ceb
   140009a85:	mov    edx,r12d
   140009a88:	lea    rcx,[rsp+0x90]
   140009a90:	call   0x14001a860
   140009a95:	mov    rbx,rax
   140009a98:	test   rax,rax
   140009a9b:	jne    0x140009ab0
   140009a9d:	xor    r9d,r9d
   140009aa0:	xor    r8d,r8d
   140009aa3:	xor    edx,edx
   140009aa5:	mov    ecx,0xc0000025
   140009aaa:	call   QWORD PTR [rip+0x378f0]        # 0x1400413a0
   140009ab0:	mov    rcx,QWORD PTR [rdi+0x8]
   140009ab4:	mov    r10,QWORD PTR [rcx]
   140009ab7:	xor    r9d,r9d
   140009aba:	xor    r8d,r8d
   140009abd:	mov    edx,0x61230cea
   140009ac2:	call   QWORD PTR [r10]
   140009ac5:	mov    rcx,QWORD PTR [rdi+0x8]
   140009ac9:	lea    rax,[rbx+0x20]
   140009acd:	mov    QWORD PTR [rsp+0x58],rax
   140009ad2:	mov    rax,QWORD PTR [rcx]
   140009ad5:	lea    r9,[rsp+0x58]
   140009ada:	mov    r8d,r14d
   140009add:	mov    edx,0x61230cfa
   140009ae2:	call   QWORD PTR [rax]
   140009ae4:	mov    r8d,DWORD PTR [rbx+0x4]
   140009ae8:	mov    edx,0x61230cfb
   140009aed:	mov    rcx,QWORD PTR [rdi+0x8]
   140009af1:	call   0x1400041e0
   140009af6:	cmp    r15,0x10
   140009afa:	ja     0x140009bac
   140009b00:	bt     r13,r15
   140009b04:	jae    0x140009bac
   140009b0a:	cmp    rsi,0xffffffffffffffff
   140009b0e:	je     0x140009cd2
   140009b14:	mov    DWORD PTR [rsp+0x78],r14d
   140009b19:	mov    eax,DWORD PTR [rbx+0x4]
   140009b1c:	mov    QWORD PTR [rsp+0x80],rax
   140009b24:	and    QWORD PTR [rsp+0x38],0x0
   140009b2a:	lea    rax,[rsp+0x48]
   140009b2f:	mov    QWORD PTR [rsp+0x30],rax
   140009b34:	mov    DWORD PTR [rsp+0x28],0x20
   140009b3c:	lea    rax,[rsp+0x58]
   140009b41:	mov    QWORD PTR [rsp+0x20],rax
   140009b46:	mov    r9d,0x10
   140009b4c:	lea    r8,[rsp+0x78]
   140009b51:	mov    edx,0x80006490
   140009b56:	mov    rcx,rsi
   140009b59:	call   QWORD PTR [rip+0x377a1]        # 0x140041300
   140009b5f:	test   eax,eax
   140009b61:	je     0x140009cd2
   140009b67:	mov    r8d,DWORD PTR [rsp+0x60]
   140009b6c:	mov    edx,0x61230cfc
   140009b71:	mov    rcx,QWORD PTR [rdi+0x8]
   140009b75:	call   0x1400041e0
   140009b7a:	xor    r8d,r8d
   140009b7d:	cmp    DWORD PTR [rsp+0x68],r8d
   140009b82:	sete   r8b
   140009b86:	mov    edx,0x61230cfd
   140009b8b:	mov    rcx,QWORD PTR [rdi+0x8]
   140009b8f:	call   0x1400041e0
   140009b94:	mov    r8d,DWORD PTR [rsp+0x64]
   140009b99:	mov    edx,0x61230cfe
   140009b9e:	mov    rcx,QWORD PTR [rdi+0x8]
   140009ba2:	call   0x1400041e0
   140009ba7:	jmp    0x140009cd2
   140009bac:	mov    r8d,DWORD PTR [rbx+0xc]
   140009bb0:	mov    edx,0x61230cfc
   140009bb5:	mov    rcx,QWORD PTR [rdi+0x8]
   140009bb9:	call   0x1400041e0
   140009bbe:	mov    r8d,DWORD PTR [rbx+0x18]
   140009bc2:	mov    edx,0x61230cfd
   140009bc7:	mov    rcx,QWORD PTR [rdi+0x8]
   140009bcb:	call   0x1400041e0
   140009bd0:	mov    r8d,DWORD PTR [rbx+0x1c]
   140009bd4:	mov    edx,0x61230cfe
   140009bd9:	mov    rcx,QWORD PTR [rdi+0x8]
   140009bdd:	call   0x1400041e0
   140009be2:	mov    edx,r12d
   140009be5:	lea    rcx,[rsp+0x90]
   140009bed:	call   0x14001a860
   140009bf2:	test   rax,rax
   140009bf5:	je     0x140009cd2
   140009bfb:	mov    ebx,DWORD PTR [rax+0x14]
   140009bfe:	cmp    ebx,0xffffffff
   140009c01:	je     0x140009cd2
   140009c07:	cmp    ebx,DWORD PTR [rsp+0x1e4]
   140009c0e:	jb     0x140009c15
   140009c10:	xor    r15d,r15d
   140009c13:	jmp    0x140009c27
   140009c15:	mov    edx,ebx
   140009c17:	lea    rcx,[rsp+0x90]
   140009c1f:	call   0x14001a828
   140009c24:	mov    r15,rax
   140009c27:	mov    rcx,QWORD PTR [rdi+0x8]
   140009c2b:	mov    r10,QWORD PTR [rcx]
   140009c2e:	xor    r9d,r9d
   140009c31:	xor    r8d,r8d
   140009c34:	mov    edx,0x61230ceb
   140009c39:	call   QWORD PTR [r10]
   140009c3c:	mov    r11,QWORD PTR [rdi+0x8]
   140009c40:	lea    rcx,[r15+0x1a0]
   140009c47:	mov    QWORD PTR [rsp+0x58],rcx
   140009c4c:	mov    r10,QWORD PTR [r11]
   140009c4f:	lea    r9,[rsp+0x58]
   140009c54:	mov    r8d,r14d
   140009c57:	mov    edx,0x61230cff
   140009c5c:	mov    rcx,r11
   140009c5f:	call   QWORD PTR [r10]
   140009c62:	mov    r8d,DWORD PTR [r15+0xe0]
   140009c69:	mov    edx,0x61230d00
   140009c6e:	mov    rcx,QWORD PTR [rdi+0x8]
   140009c72:	call   0x1400041e0
   140009c77:	mov    r8d,DWORD PTR [r15+0x198]
   140009c7e:	mov    edx,0x61230d01
   140009c83:	mov    rcx,QWORD PTR [rdi+0x8]
   140009c87:	call   0x1400041e0
   140009c8c:	mov    r8d,DWORD PTR [r15+0x19c]
   140009c93:	mov    edx,0x61230d02
   140009c98:	mov    rcx,QWORD PTR [rdi+0x8]
   140009c9c:	call   0x1400041e0
   140009ca1:	cmp    ebx,DWORD PTR [rsp+0x1e4]
   140009ca8:	jae    0x140009ccd
   140009caa:	mov    edx,ebx
   140009cac:	lea    rcx,[rsp+0x90]
   140009cb4:	call   0x14001a828
   140009cb9:	test   rax,rax
   140009cbc:	je     0x140009ccd
   140009cbe:	mov    ebx,DWORD PTR [rax+0xf8]
   140009cc4:	cmp    ebx,0xffffffff
   140009cc7:	jne    0x140009c07
   140009ccd:	mov    r15,QWORD PTR [rsp+0x40]
   140009cd2:	mov    edx,r12d
   140009cd5:	lea    rcx,[rsp+0x90]
   140009cdd:	call   0x14001a860
   140009ce2:	test   rax,rax
   140009ce5:	je     0x140009cf5
   140009ce7:	mov    r12d,DWORD PTR [rax+0x10]
   140009ceb:	cmp    r12d,0xffffffff
   140009cef:	jne    0x140009a85
   140009cf5:	mov    rcx,QWORD PTR [rsp+0x200]
   140009cfd:	mov    rcx,QWORD PTR [rcx+0x10]
   140009d01:	call   QWORD PTR [rip+0x37579]        # 0x140041280
   140009d07:	mov    rcx,rdi
   140009d0a:	call   0x14000927c
   140009d0f:	cmp    rsi,0xffffffffffffffff
   140009d13:	je     0x140009d20
   140009d15:	mov    rcx,rsi
   140009d18:	call   QWORD PTR [rip+0x3766a]        # 0x140041388
   140009d1e:	jmp    0x140009d20
   140009d20:	lea    rcx,[rsp+0x90]
   140009d28:	call   0x14001a634
   140009d2d:	nop
   140009d2e:	lea    rcx,[rsp+0x210]
   140009d36:	call   0x140014ffc
   140009d3b:	nop
   140009d3c:	lea    rcx,[rsp+0x350]
   140009d44:	call   0x140014ffc
   140009d49:	mov    rcx,QWORD PTR [rsp+0x490]
   140009d51:	xor    rcx,rsp
   140009d54:	call   0x1400265a0
   140009d59:	lea    r11,[rsp+0x4a0]
   140009d61:	mov    rbx,QWORD PTR [r11+0x38]
   140009d65:	mov    rsi,QWORD PTR [r11+0x40]
   140009d69:	mov    rsp,r11
   140009d6c:	pop    r15
   140009d6e:	pop    r14
   140009d70:	pop    r13
   140009d72:	pop    r12
   140009d74:	pop    rdi
   140009d75:	ret    
   140009d76:	int3   
   140009d77:	int3   
   140009d78:	mov    QWORD PTR [rsp+0x8],rbx
   140009d7d:	push   rdi
   140009d7e:	sub    rsp,0x30
   140009d82:	movsxd rbx,edx
   140009d85:	xor    r8d,r8d
   140009d88:	mov    dl,0xc
   140009d8a:	mov    r9,rbx
   140009d8d:	mov    rdi,rcx
   140009d90:	call   0x140015618
   140009d95:	mov    rcx,QWORD PTR [rdi+0x8]
   140009d99:	xor    r9d,r9d
   140009d9c:	mov    rax,QWORD PTR [rcx]
   140009d9f:	xor    r8d,r8d
   140009da2:	mov    edx,0x61230d03
   140009da7:	call   QWORD PTR [rax]
   140009da9:	mov    rcx,QWORD PTR [rdi+0x8]
   140009dad:	xor    r9d,r9d
   140009db0:	mov    rax,QWORD PTR [rcx]
   140009db3:	xor    r8d,r8d
   140009db6:	mov    edx,0x61230cea
   140009dbb:	call   QWORD PTR [rax]
   140009dbd:	mov    edx,ebx
   140009dbf:	mov    rcx,rdi
   140009dc2:	call   0x140009eb0
   140009dc7:	test   eax,eax
   140009dc9:	je     0x140009dee
   140009dcb:	test   ebx,ebx
   140009dcd:	je     0x140009dda
   140009dcf:	dec    ebx
   140009dd1:	jne    0x140009dee
   140009dd3:	mov    edx,0x61230d05
   140009dd8:	jmp    0x140009ddf
   140009dda:	mov    edx,0x61230d04
   140009ddf:	mov    rcx,QWORD PTR [rdi+0x8]
   140009de3:	xor    r9d,r9d
   140009de6:	xor    r8d,r8d
   140009de9:	mov    rax,QWORD PTR [rcx]
   140009dec:	call   QWORD PTR [rax]
   140009dee:	mov    rbx,QWORD PTR [rsp+0x40]
   140009df3:	add    rsp,0x30
   140009df7:	pop    rdi
   140009df8:	ret    
   140009df9:	int3   
   140009dfa:	int3   
   140009dfb:	int3   
   140009dfc:	mov    QWORD PTR [rsp+0x8],rbx
   140009e01:	push   rdi
   140009e02:	sub    rsp,0x50
   140009e06:	xor    ebx,ebx
   140009e08:	test   edx,edx
   140009e0a:	je     0x140009e21
   140009e0c:	dec    edx
   140009e0e:	je     0x140009e17
   140009e10:	xor    eax,eax
   140009e12:	jmp    0x140009ea5
   140009e17:	mov    DWORD PTR [rsp+0x40],0x1
   140009e1f:	jmp    0x140009e25
   140009e21:	mov    DWORD PTR [rsp+0x40],ebx
   140009e25:	mov    DWORD PTR [rsp+0x44],r8d
   140009e2a:	mov    DWORD PTR [rsp+0x48],r9d
   140009e2f:	mov    r8d,0x3
   140009e35:	mov    QWORD PTR [rsp+0x30],rbx
   140009e3a:	lea    rcx,[rip+0x3bebf]        # 0x140045d00
   140009e41:	xor    r9d,r9d
   140009e44:	mov    edx,0xc0000000
   140009e49:	mov    DWORD PTR [rsp+0x28],ebx
   140009e4d:	mov    DWORD PTR [rsp+0x20],r8d
   140009e52:	call   QWORD PTR [rip+0x374d8]        # 0x140041330
   140009e58:	mov    rdi,rax
   140009e5b:	cmp    rax,0xffffffffffffffff
   140009e5f:	je     0x140009e10
   140009e61:	mov    QWORD PTR [rsp+0x38],rbx
   140009e66:	lea    rax,[rsp+0x68]
   140009e6b:	mov    r9d,0xc
   140009e71:	mov    QWORD PTR [rsp+0x30],rax
   140009e76:	lea    rax,[rsp+0x40]
   140009e7b:	mov    DWORD PTR [rsp+0x28],r9d
   140009e80:	lea    r8,[rsp+0x40]
   140009e85:	mov    edx,0x8000a500
   140009e8a:	mov    rcx,rdi
   140009e8d:	mov    QWORD PTR [rsp+0x20],rax
   140009e92:	call   QWORD PTR [rip+0x37468]        # 0x140041300
   140009e98:	mov    rcx,rdi
   140009e9b:	mov    ebx,eax
   140009e9d:	call   QWORD PTR [rip+0x374e5]        # 0x140041388
   140009ea3:	mov    eax,ebx
   140009ea5:	mov    rbx,QWORD PTR [rsp+0x60]
   140009eaa:	add    rsp,0x50
   140009eae:	pop    rdi
   140009eaf:	ret    
   140009eb0:	mov    rax,rsp
   140009eb3:	push   rbp
   140009eb4:	push   r12
   140009eb6:	push   r13
   140009eb8:	push   r14
   140009eba:	push   r15
   140009ebc:	lea    rbp,[rax-0x388]
   140009ec3:	sub    rsp,0x460
   140009eca:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140009ed3:	mov    QWORD PTR [rax+0x10],rbx
   140009ed7:	mov    QWORD PTR [rax+0x18],rsi
   140009edb:	mov    QWORD PTR [rax+0x20],rdi
   140009edf:	mov    rax,QWORD PTR [rip+0x4f1a2]        # 0x140059088
   140009ee6:	xor    rax,rsp
   140009ee9:	mov    QWORD PTR [rbp+0x350],rax
   140009ef0:	mov    r14d,edx
   140009ef3:	mov    rsi,rcx
   140009ef6:	lea    rdi,[rip+0x3c573]        # 0x140046470
   140009efd:	mov    QWORD PTR [rbp+0x90],rdi
   140009f04:	lea    r15,[rip+0x3b89d]        # 0x1400457a8
   140009f0b:	mov    QWORD PTR [rbp+0x98],r15
   140009f12:	lea    r12,[rip+0x3c317]        # 0x140046230
   140009f19:	mov    QWORD PTR [rbp+0x98],r12
   140009f20:	xor    ebx,ebx
   140009f22:	mov    QWORD PTR [rbp+0xa0],rbx
   140009f29:	lea    r13,[rip+0x3c5c0]        # 0x1400464f0
   140009f30:	mov    QWORD PTR [rbp+0x90],r13
   140009f37:	lea    rax,[rip+0x3c5ca]        # 0x140046508
   140009f3e:	mov    QWORD PTR [rbp+0x98],rax
   140009f45:	mov    QWORD PTR [rbp+0xa8],rbx
   140009f4c:	mov    QWORD PTR [rbp+0xb0],rbx
   140009f53:	mov    DWORD PTR [rbp+0xb8],ebx
   140009f59:	mov    QWORD PTR [rbp+0xc0],rbx
   140009f60:	mov    BYTE PTR [rbp+0xc8],bl
   140009f66:	xor    edx,edx
   140009f68:	xor    ecx,ecx
   140009f6a:	call   0x140018b6c
   140009f6f:	test   eax,eax
   140009f71:	je     0x140009f91
   140009f73:	mov    rcx,QWORD PTR [rsi+0x8]
   140009f77:	mov    rax,QWORD PTR [rcx]
   140009f7a:	xor    r9d,r9d
   140009f7d:	xor    r8d,r8d
   140009f80:	mov    edx,0xe123051a
   140009f85:	call   QWORD PTR [rax]
   140009f87:	lea    edi,[rbx+0x1]
   140009f8a:	mov    DWORD PTR [rsi],edi
   140009f8c:	jmp    0x14000a1ad
   140009f91:	lea    rdx,[rbp+0x90]
   140009f98:	mov    rcx,rsi
   140009f9b:	call   0x140007ba4
   140009fa0:	test   al,al
   140009fa2:	je     0x14000a1ad
   140009fa8:	mov    r10,QWORD PTR [rbp+0xa8]
   140009faf:	lea    rcx,[rbp+0x1d0]
   140009fb6:	call   0x14001a598
   140009fbb:	nop
   140009fbc:	mov    BYTE PTR [rsp+0x20],bl
   140009fc0:	xor    r9d,r9d
   140009fc3:	mov    r8d,DWORD PTR [r10]
   140009fc6:	mov    edx,DWORD PTR [r10+0x4]
   140009fca:	lea    rcx,[rbp+0x1d0]
   140009fd1:	call   0x14001a6b0
   140009fd6:	lea    rcx,[rbp+0x1e0]
   140009fdd:	mov    rax,QWORD PTR [rbp+0x1e0]
   140009fe4:	call   QWORD PTR [rax+0x8]
   140009fe7:	cmp    DWORD PTR [rax+0xc],0x80000000
   140009fee:	jne    0x140009ff7
   140009ff0:	mov    edx,0xe1230532
   140009ff5:	jmp    0x14000a001
   140009ff7:	cmp    DWORD PTR [rax+0x14],ebx
   140009ffa:	jle    0x14000a01c
   140009ffc:	mov    edx,0xe1230533
   14000a001:	xor    r9d,r9d
   14000a004:	mov    rcx,QWORD PTR [rsi+0x8]
   14000a008:	xor    r8d,r8d
   14000a00b:	mov    rax,QWORD PTR [rcx]
   14000a00e:	call   QWORD PTR [rax]
   14000a010:	mov    edi,0x1
   14000a015:	mov    DWORD PTR [rsi],edi
   14000a017:	jmp    0x14000a1a0
   14000a01c:	mov    QWORD PTR [rsp+0x50],rdi
   14000a021:	mov    QWORD PTR [rsp+0x58],r15
   14000a026:	mov    QWORD PTR [rsp+0x58],r12
   14000a02b:	mov    QWORD PTR [rsp+0x60],rbx
   14000a030:	mov    QWORD PTR [rsp+0x50],r13
   14000a035:	lea    rax,[rip+0x3c4cc]        # 0x140046508
   14000a03c:	mov    QWORD PTR [rsp+0x58],rax
   14000a041:	mov    QWORD PTR [rsp+0x68],rbx
   14000a046:	mov    QWORD PTR [rsp+0x70],rbx
   14000a04b:	mov    DWORD PTR [rsp+0x78],ebx
   14000a04f:	mov    QWORD PTR [rbp-0x80],rbx
   14000a053:	mov    BYTE PTR [rbp-0x78],bl
   14000a056:	mov    edi,0x1
   14000a05b:	mov    DWORD PTR [rsp+0x28],edi
   14000a05f:	mov    DWORD PTR [rsp+0x20],ebx
   14000a063:	xor    r9d,r9d
   14000a066:	mov    r8d,0x4d28
   14000a06c:	mov    rdx,QWORD PTR [rip+0x52bb5]        # 0x14005cc28
   14000a073:	lea    rcx,[rsp+0x50]
   14000a078:	call   0x1400150ac
   14000a07d:	mov    rax,QWORD PTR [rsp+0x68]
   14000a082:	mov    ecx,DWORD PTR [rax+0xa4]
   14000a088:	or     r15d,0xffffffff
   14000a08c:	cmp    ecx,0x10
   14000a08f:	ja     0x14000a0b1
   14000a091:	mov    eax,0x10012
   14000a096:	bt     eax,ecx
   14000a099:	jae    0x14000a0b1
   14000a09b:	mov    r9d,r15d
   14000a09e:	mov    r8d,edi
   14000a0a1:	mov    edx,r14d
   14000a0a4:	call   0x140009dfc
   14000a0a9:	test   eax,eax
   14000a0ab:	je     0x14000a195
   14000a0b1:	mov    rcx,QWORD PTR [rbp+0x340]
   14000a0b8:	call   0x140019fec
   14000a0bd:	test   r14d,r14d
   14000a0c0:	je     0x14000a0dd
   14000a0c2:	dec    r14d
   14000a0c5:	jne    0x14000a0f1
   14000a0c7:	lea    rcx,[rbp+0x1e0]
   14000a0ce:	mov    rax,QWORD PTR [rbp+0x1e0]
   14000a0d5:	call   QWORD PTR [rax+0x8]
   14000a0d8:	mov    DWORD PTR [rax+0xc],ebx
   14000a0db:	jmp    0x14000a0f1
   14000a0dd:	lea    rcx,[rbp+0x1e0]
   14000a0e4:	mov    rax,QWORD PTR [rbp+0x1e0]
   14000a0eb:	call   QWORD PTR [rax+0x8]
   14000a0ee:	mov    DWORD PTR [rax+0xc],edi
   14000a0f1:	lea    rcx,[rbp+0x1e0]
   14000a0f8:	mov    rax,QWORD PTR [rbp+0x1e0]
   14000a0ff:	call   QWORD PTR [rax+0x8]
   14000a102:	mov    r14d,DWORD PTR [rax+0x8]
   14000a106:	jmp    0x14000a17d
   14000a108:	mov    edx,r14d
   14000a10b:	lea    rcx,[rbp+0x1d0]
   14000a112:	call   0x14001a860
   14000a117:	test   rax,rax
   14000a11a:	je     0x14000a165
   14000a11c:	mov    esi,DWORD PTR [rax+0x14]
   14000a11f:	jmp    0x14000a160
   14000a121:	cmp    esi,DWORD PTR [rbp+0x324]
   14000a127:	jae    0x14000a165
   14000a129:	mov    edx,esi
   14000a12b:	lea    rcx,[rbp+0x1d0]
   14000a132:	call   0x14001a828
   14000a137:	test   rax,rax
   14000a13a:	je     0x14000a13f
   14000a13c:	mov    DWORD PTR [rax+0x40],edi
   14000a13f:	cmp    esi,DWORD PTR [rbp+0x324]
   14000a145:	jae    0x14000a165
   14000a147:	mov    edx,esi
   14000a149:	lea    rcx,[rbp+0x1d0]
   14000a150:	call   0x14001a828
   14000a155:	test   rax,rax
   14000a158:	je     0x14000a165
   14000a15a:	mov    esi,DWORD PTR [rax+0xf8]
   14000a160:	cmp    esi,r15d
   14000a163:	jne    0x14000a121
   14000a165:	mov    edx,r14d
   14000a168:	lea    rcx,[rbp+0x1d0]
   14000a16f:	call   0x14001a860
   14000a174:	test   rax,rax
   14000a177:	je     0x14000a182
   14000a179:	mov    r14d,DWORD PTR [rax+0x10]
   14000a17d:	cmp    r14d,r15d
   14000a180:	jne    0x14000a108
   14000a182:	mov    rcx,QWORD PTR [rbp+0x340]
   14000a189:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a18d:	call   QWORD PTR [rip+0x370ed]        # 0x140041280
   14000a193:	mov    ebx,edi
   14000a195:	lea    rcx,[rsp+0x50]
   14000a19a:	call   0x140014ffc
   14000a19f:	nop
   14000a1a0:	lea    rcx,[rbp+0x1d0]
   14000a1a7:	call   0x14001a634
   14000a1ac:	nop
   14000a1ad:	lea    rcx,[rbp+0x90]
   14000a1b4:	call   0x140014ffc
   14000a1b9:	mov    eax,ebx
   14000a1bb:	mov    rcx,QWORD PTR [rbp+0x350]
   14000a1c2:	xor    rcx,rsp
   14000a1c5:	call   0x1400265a0
   14000a1ca:	lea    r11,[rsp+0x460]
   14000a1d2:	mov    rbx,QWORD PTR [r11+0x38]
   14000a1d6:	mov    rsi,QWORD PTR [r11+0x40]
   14000a1da:	mov    rdi,QWORD PTR [r11+0x48]
   14000a1de:	mov    rsp,r11
   14000a1e1:	pop    r15
   14000a1e3:	pop    r14
   14000a1e5:	pop    r13
   14000a1e7:	pop    r12
   14000a1e9:	pop    rbp
   14000a1ea:	ret    
   14000a1eb:	int3   
   14000a1ec:	mov    rax,rsp
   14000a1ef:	push   rbp
   14000a1f0:	push   rsi
   14000a1f1:	push   rdi
   14000a1f2:	push   r12
   14000a1f4:	push   r13
   14000a1f6:	push   r14
   14000a1f8:	push   r15
   14000a1fa:	lea    rbp,[rax-0x398]
   14000a201:	sub    rsp,0x460
   14000a208:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000a211:	mov    QWORD PTR [rax+0x20],rbx
   14000a215:	mov    rax,QWORD PTR [rip+0x4ee6c]        # 0x140059088
   14000a21c:	xor    rax,rsp
   14000a21f:	mov    QWORD PTR [rbp+0x350],rax
   14000a226:	mov    r12d,r8d
   14000a229:	movsxd r14,edx
   14000a22c:	mov    rbx,rcx
   14000a22f:	mov    r9,r14
   14000a232:	shl    r9,0x20
   14000a236:	add    r9,r12
   14000a239:	xor    r8d,r8d
   14000a23c:	mov    dl,0xd
   14000a23e:	call   0x140015618
   14000a243:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a247:	mov    rax,QWORD PTR [rcx]
   14000a24a:	xor    r9d,r9d
   14000a24d:	xor    r8d,r8d
   14000a250:	mov    edx,0x61230d07
   14000a255:	call   QWORD PTR [rax]
   14000a257:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a25b:	mov    rax,QWORD PTR [rcx]
   14000a25e:	xor    r9d,r9d
   14000a261:	xor    r8d,r8d
   14000a264:	mov    edx,0x61230cea
   14000a269:	call   QWORD PTR [rax]
   14000a26b:	lea    rdi,[rip+0x3c1fe]        # 0x140046470
   14000a272:	mov    QWORD PTR [rbp+0x90],rdi
   14000a279:	lea    r15,[rip+0x3b528]        # 0x1400457a8
   14000a280:	mov    QWORD PTR [rbp+0x98],r15
   14000a287:	lea    r13,[rip+0x3bfa2]        # 0x140046230
   14000a28e:	mov    QWORD PTR [rbp+0x98],r13
   14000a295:	xor    esi,esi
   14000a297:	mov    QWORD PTR [rbp+0xa0],rsi
   14000a29e:	lea    rax,[rip+0x3c24b]        # 0x1400464f0
   14000a2a5:	mov    QWORD PTR [rbp+0x90],rax
   14000a2ac:	lea    rax,[rip+0x3c255]        # 0x140046508
   14000a2b3:	mov    QWORD PTR [rbp+0x98],rax
   14000a2ba:	mov    QWORD PTR [rbp+0xa8],rsi
   14000a2c1:	mov    QWORD PTR [rbp+0xb0],rsi
   14000a2c8:	mov    DWORD PTR [rbp+0xb8],esi
   14000a2ce:	mov    QWORD PTR [rbp+0xc0],rsi
   14000a2d5:	mov    BYTE PTR [rbp+0xc8],sil
   14000a2dc:	xor    edx,edx
   14000a2de:	xor    ecx,ecx
   14000a2e0:	call   0x140018b6c
   14000a2e5:	test   eax,eax
   14000a2e7:	jne    0x14000a308
   14000a2e9:	lea    rdx,[rbp+0x90]
   14000a2f0:	mov    rcx,rbx
   14000a2f3:	call   0x140007ba4
   14000a2f8:	test   al,al
   14000a2fa:	je     0x14000a583
   14000a300:	cmp    DWORD PTR [rbp+0xb0],esi
   14000a306:	jne    0x14000a328
   14000a308:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a30c:	mov    rax,QWORD PTR [rcx]
   14000a30f:	xor    r9d,r9d
   14000a312:	xor    r8d,r8d
   14000a315:	mov    edx,0xe123051a
   14000a31a:	call   QWORD PTR [rax]
   14000a31c:	mov    edi,0x1
   14000a321:	mov    DWORD PTR [rbx],edi
   14000a323:	jmp    0x14000a583
   14000a328:	mov    QWORD PTR [rsp+0x50],rdi
   14000a32d:	mov    QWORD PTR [rsp+0x58],r15
   14000a332:	mov    QWORD PTR [rsp+0x58],r13
   14000a337:	mov    QWORD PTR [rsp+0x60],rsi
   14000a33c:	lea    rax,[rip+0x3c1ad]        # 0x1400464f0
   14000a343:	mov    QWORD PTR [rsp+0x50],rax
   14000a348:	lea    rax,[rip+0x3c1b9]        # 0x140046508
   14000a34f:	mov    QWORD PTR [rsp+0x58],rax
   14000a354:	mov    QWORD PTR [rsp+0x68],rsi
   14000a359:	mov    QWORD PTR [rsp+0x70],rsi
   14000a35e:	mov    DWORD PTR [rsp+0x78],esi
   14000a362:	mov    QWORD PTR [rbp-0x80],rsi
   14000a366:	mov    BYTE PTR [rbp-0x78],sil
   14000a36a:	mov    edi,0x1
   14000a36f:	mov    DWORD PTR [rsp+0x28],edi
   14000a373:	mov    DWORD PTR [rsp+0x20],esi
   14000a377:	xor    r9d,r9d
   14000a37a:	mov    r8d,0x4d28
   14000a380:	mov    rdx,QWORD PTR [rip+0x528a1]        # 0x14005cc28
   14000a387:	lea    rcx,[rsp+0x50]
   14000a38c:	call   0x1400150ac
   14000a391:	mov    rax,QWORD PTR [rsp+0x68]
   14000a396:	mov    ecx,DWORD PTR [rax+0xa4]
   14000a39c:	cmp    ecx,0x10
   14000a39f:	ja     0x14000a3c2
   14000a3a1:	mov    eax,0x10012
   14000a3a6:	bt     eax,ecx
   14000a3a9:	jae    0x14000a3c2
   14000a3ab:	mov    r9d,r12d
   14000a3ae:	lea    r8d,[rdi+0x1]
   14000a3b2:	mov    edx,r14d
   14000a3b5:	call   0x140009dfc
   14000a3ba:	test   eax,eax
   14000a3bc:	je     0x14000a578
   14000a3c2:	mov    r13d,esi
   14000a3c5:	mov    r10,QWORD PTR [rbp+0xa8]
   14000a3cc:	lea    rcx,[rbp+0x1d0]
   14000a3d3:	call   0x14001a598
   14000a3d8:	nop
   14000a3d9:	mov    BYTE PTR [rsp+0x20],sil
   14000a3de:	xor    r9d,r9d
   14000a3e1:	mov    r8d,DWORD PTR [r10]
   14000a3e4:	mov    edx,DWORD PTR [r10+0x4]
   14000a3e8:	lea    rcx,[rbp+0x1d0]
   14000a3ef:	call   0x14001a6b0
   14000a3f4:	lea    rcx,[rbp+0x1e0]
   14000a3fb:	mov    rax,QWORD PTR [rbp+0x1e0]
   14000a402:	call   QWORD PTR [rax+0x8]
   14000a405:	cmp    DWORD PTR [rax+0xc],0x80000000
   14000a40c:	jne    0x14000a415
   14000a40e:	mov    edx,0xe1230532
   14000a413:	jmp    0x14000a41f
   14000a415:	cmp    DWORD PTR [rax+0x14],esi
   14000a418:	jle    0x14000a433
   14000a41a:	mov    edx,0xe1230533
   14000a41f:	xor    r9d,r9d
   14000a422:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a426:	xor    r8d,r8d
   14000a429:	mov    rax,QWORD PTR [rcx]
   14000a42c:	call   QWORD PTR [rax]
   14000a42e:	jmp    0x14000a544
   14000a433:	mov    rcx,QWORD PTR [rbp+0x340]
   14000a43a:	call   0x140019fec
   14000a43f:	lea    rcx,[rbp+0x1e0]
   14000a446:	mov    rax,QWORD PTR [rbp+0x1e0]
   14000a44d:	call   QWORD PTR [rax+0x8]
   14000a450:	mov    esi,DWORD PTR [rax+0x8]
   14000a453:	jmp    0x14000a49e
   14000a455:	mov    edx,esi
   14000a457:	lea    rcx,[rbp+0x1d0]
   14000a45e:	call   0x14001a860
   14000a463:	mov    r15,rax
   14000a466:	test   rax,rax
   14000a469:	jne    0x14000a47e
   14000a46b:	xor    r9d,r9d
   14000a46e:	xor    r8d,r8d
   14000a471:	xor    edx,edx
   14000a473:	mov    ecx,0xc0000025
   14000a478:	call   QWORD PTR [rip+0x36f22]        # 0x1400413a0
   14000a47e:	cmp    r12d,DWORD PTR [r15+0x4]
   14000a482:	je     0x14000a4a5
   14000a484:	mov    edx,esi
   14000a486:	lea    rcx,[rbp+0x1d0]
   14000a48d:	call   0x14001a860
   14000a492:	test   rax,rax
   14000a495:	je     0x14000a51d
   14000a49b:	mov    esi,DWORD PTR [rax+0x10]
   14000a49e:	cmp    esi,0xffffffff
   14000a4a1:	jne    0x14000a455
   14000a4a3:	jmp    0x14000a51d
   14000a4a5:	mov    ecx,r14d
   14000a4a8:	test   r14d,r14d
   14000a4ab:	je     0x14000a4b7
   14000a4ad:	dec    ecx
   14000a4af:	jne    0x14000a4bb
   14000a4b1:	and    DWORD PTR [r15+0x18],ecx
   14000a4b5:	jmp    0x14000a4bb
   14000a4b7:	mov    DWORD PTR [r15+0x18],edi
   14000a4bb:	mov    r13d,edi
   14000a4be:	mov    edx,esi
   14000a4c0:	lea    rcx,[rbp+0x1d0]
   14000a4c7:	call   0x14001a860
   14000a4cc:	test   rax,rax
   14000a4cf:	je     0x14000a51d
   14000a4d1:	mov    esi,DWORD PTR [rax+0x14]
   14000a4d4:	or     r15d,0xffffffff
   14000a4d8:	jmp    0x14000a518
   14000a4da:	cmp    esi,DWORD PTR [rbp+0x324]
   14000a4e0:	jb     0x14000a4e6
   14000a4e2:	xor    eax,eax
   14000a4e4:	jmp    0x14000a4f4
   14000a4e6:	mov    edx,esi
   14000a4e8:	lea    rcx,[rbp+0x1d0]
   14000a4ef:	call   0x14001a828
   14000a4f4:	mov    DWORD PTR [rax+0x40],edi
   14000a4f7:	cmp    esi,DWORD PTR [rbp+0x324]
   14000a4fd:	jae    0x14000a51d
   14000a4ff:	mov    edx,esi
   14000a501:	lea    rcx,[rbp+0x1d0]
   14000a508:	call   0x14001a828
   14000a50d:	test   rax,rax
   14000a510:	je     0x14000a51d
   14000a512:	mov    esi,DWORD PTR [rax+0xf8]
   14000a518:	cmp    esi,r15d
   14000a51b:	jne    0x14000a4da
   14000a51d:	mov    rcx,QWORD PTR [rbp+0x340]
   14000a524:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a528:	call   QWORD PTR [rip+0x36d52]        # 0x140041280
   14000a52e:	test   r13d,r13d
   14000a531:	jne    0x14000a548
   14000a533:	mov    r8d,r12d
   14000a536:	mov    edx,0xe1230520
   14000a53b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a53f:	call   0x1400041e0
   14000a544:	mov    DWORD PTR [rbx],edi
   14000a546:	jmp    0x14000a56b
   14000a548:	test   r14d,r14d
   14000a54b:	je     0x14000a559
   14000a54d:	dec    r14d
   14000a550:	jne    0x14000a56b
   14000a552:	mov    edx,0x61230d09
   14000a557:	jmp    0x14000a55e
   14000a559:	mov    edx,0x61230d08
   14000a55e:	mov    r8d,r12d
   14000a561:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a565:	call   0x1400041e0
   14000a56a:	nop
   14000a56b:	lea    rcx,[rbp+0x1d0]
   14000a572:	call   0x14001a634
   14000a577:	nop
   14000a578:	lea    rcx,[rsp+0x50]
   14000a57d:	call   0x140014ffc
   14000a582:	nop
   14000a583:	lea    rcx,[rbp+0x90]
   14000a58a:	call   0x140014ffc
   14000a58f:	mov    rcx,QWORD PTR [rbp+0x350]
   14000a596:	xor    rcx,rsp
   14000a599:	call   0x1400265a0
   14000a59e:	mov    rbx,QWORD PTR [rsp+0x4b8]
   14000a5a6:	add    rsp,0x460
   14000a5ad:	pop    r15
   14000a5af:	pop    r14
   14000a5b1:	pop    r13
   14000a5b3:	pop    r12
   14000a5b5:	pop    rdi
   14000a5b6:	pop    rsi
   14000a5b7:	pop    rbp
   14000a5b8:	ret    
   14000a5b9:	int3   
   14000a5ba:	int3   
   14000a5bb:	int3   
   14000a5bc:	mov    rax,rsp
   14000a5bf:	push   rbp
   14000a5c0:	push   rsi
   14000a5c1:	push   rdi
   14000a5c2:	push   r12
   14000a5c4:	push   r13
   14000a5c6:	push   r14
   14000a5c8:	push   r15
   14000a5ca:	lea    rbp,[rax-0x248]
   14000a5d1:	sub    rsp,0x310
   14000a5d8:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000a5e1:	mov    QWORD PTR [rax+0x20],rbx
   14000a5e5:	mov    rax,QWORD PTR [rip+0x4ea9c]        # 0x140059088
   14000a5ec:	xor    rax,rsp
   14000a5ef:	mov    QWORD PTR [rbp+0x200],rax
   14000a5f6:	mov    r12d,r8d
   14000a5f9:	movsxd r14,edx
   14000a5fc:	mov    rdi,rcx
   14000a5ff:	mov    r9,r14
   14000a602:	shl    r9,0x20
   14000a606:	add    r9,r12
   14000a609:	xor    r8d,r8d
   14000a60c:	mov    dl,0xe
   14000a60e:	call   0x140015618
   14000a613:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a617:	mov    rax,QWORD PTR [rcx]
   14000a61a:	xor    r9d,r9d
   14000a61d:	xor    r8d,r8d
   14000a620:	mov    edx,0x61230d0a
   14000a625:	call   QWORD PTR [rax]
   14000a627:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a62b:	mov    rax,QWORD PTR [rcx]
   14000a62e:	xor    r9d,r9d
   14000a631:	xor    r8d,r8d
   14000a634:	mov    edx,0x61230cea
   14000a639:	call   QWORD PTR [rax]
   14000a63b:	lea    rax,[rip+0x3be2e]        # 0x140046470
   14000a642:	mov    QWORD PTR [rsp+0x40],rax
   14000a647:	lea    rax,[rip+0x3b15a]        # 0x1400457a8
   14000a64e:	mov    QWORD PTR [rsp+0x48],rax
   14000a653:	lea    rax,[rip+0x3bbd6]        # 0x140046230
   14000a65a:	mov    QWORD PTR [rsp+0x48],rax
   14000a65f:	xor    ebx,ebx
   14000a661:	mov    QWORD PTR [rsp+0x50],rbx
   14000a666:	lea    rax,[rip+0x3be83]        # 0x1400464f0
   14000a66d:	mov    QWORD PTR [rsp+0x40],rax
   14000a672:	lea    rax,[rip+0x3be8f]        # 0x140046508
   14000a679:	mov    QWORD PTR [rsp+0x48],rax
   14000a67e:	mov    QWORD PTR [rsp+0x58],rbx
   14000a683:	mov    QWORD PTR [rsp+0x60],rbx
   14000a688:	mov    DWORD PTR [rsp+0x68],ebx
   14000a68c:	mov    QWORD PTR [rsp+0x70],rbx
   14000a691:	mov    BYTE PTR [rsp+0x78],bl
   14000a695:	xor    edx,edx
   14000a697:	xor    ecx,ecx
   14000a699:	call   0x140018b6c
   14000a69e:	test   eax,eax
   14000a6a0:	jne    0x14000a6bd
   14000a6a2:	lea    rdx,[rsp+0x40]
   14000a6a7:	mov    rcx,rdi
   14000a6aa:	call   0x140007ba4
   14000a6af:	test   al,al
   14000a6b1:	je     0x14000a87c
   14000a6b7:	cmp    DWORD PTR [rsp+0x60],ebx
   14000a6bb:	jne    0x14000a6dd
   14000a6bd:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a6c1:	mov    rax,QWORD PTR [rcx]
   14000a6c4:	xor    r9d,r9d
   14000a6c7:	xor    r8d,r8d
   14000a6ca:	mov    edx,0xe123051a
   14000a6cf:	call   QWORD PTR [rax]
   14000a6d1:	mov    ebx,0x1
   14000a6d6:	mov    DWORD PTR [rdi],ebx
   14000a6d8:	jmp    0x14000a87c
   14000a6dd:	mov    r13d,ebx
   14000a6e0:	mov    r10,QWORD PTR [rsp+0x58]
   14000a6e5:	lea    rcx,[rbp+0x80]
   14000a6ec:	call   0x14001a598
   14000a6f1:	nop
   14000a6f2:	mov    BYTE PTR [rsp+0x20],bl
   14000a6f6:	xor    r9d,r9d
   14000a6f9:	mov    r8d,DWORD PTR [r10]
   14000a6fc:	mov    edx,DWORD PTR [r10+0x4]
   14000a700:	lea    rcx,[rbp+0x80]
   14000a707:	call   0x14001a6b0
   14000a70c:	lea    rcx,[rbp+0x90]
   14000a713:	mov    rax,QWORD PTR [rbp+0x90]
   14000a71a:	call   QWORD PTR [rax+0x8]
   14000a71d:	cmp    DWORD PTR [rax+0xc],0x80000000
   14000a724:	jne    0x14000a744
   14000a726:	mov    edx,0xe1230532
   14000a72b:	xor    r9d,r9d
   14000a72e:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a732:	xor    r8d,r8d
   14000a735:	mov    rax,QWORD PTR [rcx]
   14000a738:	call   QWORD PTR [rax]
   14000a73a:	mov    ebx,0x1
   14000a73f:	jmp    0x14000a86d
   14000a744:	cmp    DWORD PTR [rax+0x14],ebx
   14000a747:	jle    0x14000a750
   14000a749:	mov    edx,0xe1230533
   14000a74e:	jmp    0x14000a72b
   14000a750:	mov    rcx,QWORD PTR [rbp+0x1f0]
   14000a757:	call   0x140019fec
   14000a75c:	lea    rcx,[rbp+0x90]
   14000a763:	mov    rax,QWORD PTR [rbp+0x90]
   14000a76a:	call   QWORD PTR [rax+0x8]
   14000a76d:	mov    r15d,DWORD PTR [rax+0x8]
   14000a771:	mov    ebx,0x1
   14000a776:	cmp    r15d,0xffffffff
   14000a77a:	je     0x14000a824
   14000a780:	mov    edx,r15d
   14000a783:	lea    rcx,[rbp+0x80]
   14000a78a:	call   0x14001a860
   14000a78f:	test   rax,rax
   14000a792:	je     0x14000a7e7
   14000a794:	mov    esi,DWORD PTR [rax+0x14]
   14000a797:	jmp    0x14000a7e2
   14000a799:	mov    eax,DWORD PTR [rbp+0x1d4]
   14000a79f:	cmp    esi,eax
   14000a7a1:	jae    0x14000a7e7
   14000a7a3:	mov    edx,esi
   14000a7a5:	lea    rcx,[rbp+0x80]
   14000a7ac:	call   0x14001a828
   14000a7b1:	test   rax,rax
   14000a7b4:	je     0x14000a7bf
   14000a7b6:	cmp    r12d,DWORD PTR [rax+0xe0]
   14000a7bd:	je     0x14000a804
   14000a7bf:	mov    eax,DWORD PTR [rbp+0x1d4]
   14000a7c5:	cmp    esi,eax
   14000a7c7:	jae    0x14000a7e7
   14000a7c9:	mov    edx,esi
   14000a7cb:	lea    rcx,[rbp+0x80]
   14000a7d2:	call   0x14001a828
   14000a7d7:	test   rax,rax
   14000a7da:	je     0x14000a7e7
   14000a7dc:	mov    esi,DWORD PTR [rax+0xf8]
   14000a7e2:	cmp    esi,0xffffffff
   14000a7e5:	jne    0x14000a799
   14000a7e7:	mov    edx,r15d
   14000a7ea:	lea    rcx,[rbp+0x80]
   14000a7f1:	call   0x14001a860
   14000a7f6:	test   rax,rax
   14000a7f9:	je     0x14000a824
   14000a7fb:	mov    r15d,DWORD PTR [rax+0x10]
   14000a7ff:	jmp    0x14000a776
   14000a804:	mov    edx,r14d
   14000a807:	test   r14d,r14d
   14000a80a:	je     0x14000a818
   14000a80c:	dec    edx
   14000a80e:	jne    0x14000a821
   14000a810:	and    DWORD PTR [rax+0x198],edx
   14000a816:	jmp    0x14000a81e
   14000a818:	mov    DWORD PTR [rax+0x198],ebx
   14000a81e:	mov    DWORD PTR [rax+0x40],ebx
   14000a821:	mov    r13d,ebx
   14000a824:	mov    rcx,QWORD PTR [rbp+0x1f0]
   14000a82b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a82f:	call   QWORD PTR [rip+0x36a4b]        # 0x140041280
   14000a835:	test   r14d,r14d
   14000a838:	je     0x14000a846
   14000a83a:	dec    r14d
   14000a83d:	jne    0x14000a857
   14000a83f:	mov    edx,0x61230d0c
   14000a844:	jmp    0x14000a84b
   14000a846:	mov    edx,0x61230d0b
   14000a84b:	mov    r8d,r12d
   14000a84e:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a852:	call   0x1400041e0
   14000a857:	test   r13d,r13d
   14000a85a:	jne    0x14000a86f
   14000a85c:	mov    r8d,r12d
   14000a85f:	mov    edx,0xe1230521
   14000a864:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a868:	call   0x1400041e0
   14000a86d:	mov    DWORD PTR [rdi],ebx
   14000a86f:	lea    rcx,[rbp+0x80]
   14000a876:	call   0x14001a634
   14000a87b:	nop
   14000a87c:	lea    rcx,[rsp+0x40]
   14000a881:	call   0x140014ffc
   14000a886:	mov    rcx,QWORD PTR [rbp+0x200]
   14000a88d:	xor    rcx,rsp
   14000a890:	call   0x1400265a0
   14000a895:	mov    rbx,QWORD PTR [rsp+0x368]
   14000a89d:	add    rsp,0x310
   14000a8a4:	pop    r15
   14000a8a6:	pop    r14
   14000a8a8:	pop    r13
   14000a8aa:	pop    r12
   14000a8ac:	pop    rdi
   14000a8ad:	pop    rsi
   14000a8ae:	pop    rbp
   14000a8af:	ret    
   14000a8b0:	rex push rbx
   14000a8b2:	push   rsi
   14000a8b3:	push   rdi
   14000a8b4:	sub    rsp,0x3a0
   14000a8bb:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14000a8c4:	mov    rax,QWORD PTR [rip+0x4e7bd]        # 0x140059088
   14000a8cb:	xor    rax,rsp
   14000a8ce:	mov    QWORD PTR [rsp+0x390],rax
   14000a8d6:	mov    rsi,r8
   14000a8d9:	movsxd rdi,edx
   14000a8dc:	mov    rbx,rcx
   14000a8df:	mov    r9,rdi
   14000a8e2:	mov    dl,0xf
   14000a8e4:	call   0x140015618
   14000a8e9:	lea    rcx,[rsp+0x50]
   14000a8ee:	call   0x140019830
   14000a8f3:	nop
   14000a8f4:	test   edi,edi
   14000a8f6:	js     0x14000a990
   14000a8fc:	cmp    edi,0x80000000
   14000a902:	ja     0x14000a990
   14000a908:	xor    edx,edx
   14000a90a:	xor    ecx,ecx
   14000a90c:	call   0x140018b6c
   14000a911:	test   eax,eax
   14000a913:	jne    0x14000a989
   14000a915:	mov    rbx,QWORD PTR [rbx+0x8]
   14000a919:	lea    rax,[rsp+0x350]
   14000a921:	mov    QWORD PTR [rsp+0x38],rax
   14000a926:	mov    QWORD PTR [rsp+0x40],rsi
   14000a92b:	mov    r9d,edi
   14000a92e:	lea    r8,[rip+0x3b00b]        # 0x140045940
   14000a935:	mov    edx,0x3c
   14000a93a:	lea    rcx,[rsp+0x350]
   14000a942:	call   0x140004164
   14000a947:	mov    rax,QWORD PTR [rbx]
   14000a94a:	lea    r9,[rsp+0x38]
   14000a94f:	mov    edx,0x61230d0d
   14000a954:	mov    r8d,0x2
   14000a95a:	mov    rcx,rbx
   14000a95d:	call   QWORD PTR [rax]
   14000a95f:	lea    rcx,[rsp+0x50]
   14000a964:	call   0x1400199c4
   14000a969:	cmp    DWORD PTR [rsp+0x344],0x0
   14000a971:	je     0x14000a9aa
   14000a973:	lea    r9,[rsp+0x30]
   14000a978:	mov    r8,rsi
   14000a97b:	mov    edx,edi
   14000a97d:	lea    rcx,[rsp+0x50]
   14000a982:	call   0x140019c54
   14000a987:	jmp    0x14000a9aa
   14000a989:	mov    edx,0xe123051a
   14000a98e:	jmp    0x14000a995
   14000a990:	mov    edx,0xe123052b
   14000a995:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a999:	mov    rax,QWORD PTR [rcx]
   14000a99c:	xor    r9d,r9d
   14000a99f:	xor    r8d,r8d
   14000a9a2:	call   QWORD PTR [rax]
   14000a9a4:	mov    DWORD PTR [rbx],0x1
   14000a9aa:	lea    rcx,[rsp+0x50]
   14000a9af:	call   0x14001995c
   14000a9b4:	mov    rcx,QWORD PTR [rsp+0x390]
   14000a9bc:	xor    rcx,rsp
   14000a9bf:	call   0x1400265a0
   14000a9c4:	add    rsp,0x3a0
   14000a9cb:	pop    rdi
   14000a9cc:	pop    rsi
   14000a9cd:	pop    rbx
   14000a9ce:	ret    
   14000a9cf:	int3   
   14000a9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a9d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000a9da:	push   rdi
   14000a9db:	sub    rsp,0x40
   14000a9df:	mov    esi,edx
   14000a9e1:	mov    rdi,rcx
   14000a9e4:	lea    rdx,[rsp+0x20]
   14000a9e9:	mov    ecx,r8d
   14000a9ec:	mov    rbx,r9
   14000a9ef:	call   0x14000ab4c
   14000a9f4:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a9f8:	lea    r8,[rip+0x3ab31]        # 0x140045530
   14000a9ff:	mov    edx,esi
   14000aa01:	test   eax,eax
   14000aa03:	jns    0x14000aa31
   14000aa05:	mov    rax,r8
   14000aa08:	test   rbx,rbx
   14000aa0b:	mov    QWORD PTR [rsp+0x28],r8
   14000aa10:	cmovne rax,rbx
   14000aa14:	lea    r9,[rsp+0x20]
   14000aa19:	mov    r8d,0x2
   14000aa1f:	mov    QWORD PTR [rsp+0x20],rax
   14000aa24:	mov    rax,QWORD PTR [rcx]
   14000aa27:	call   QWORD PTR [rax]
   14000aa29:	mov    DWORD PTR [rdi],0x1
   14000aa2f:	jmp    0x14000aa66
   14000aa31:	mov    rax,QWORD PTR [rcx]
   14000aa34:	test   rbx,rbx
   14000aa37:	lea    r9,[rsp+0x30]
   14000aa3c:	cmovne r8,rbx
   14000aa40:	mov    rbx,QWORD PTR [rsp+0x20]
   14000aa45:	mov    QWORD PTR [rsp+0x30],r8
   14000aa4a:	mov    r8d,0x2
   14000aa50:	mov    QWORD PTR [rsp+0x38],rbx
   14000aa55:	call   QWORD PTR [rax]
   14000aa57:	mov    rcx,rbx
   14000aa5a:	mov    DWORD PTR [rdi],0x1
   14000aa60:	call   QWORD PTR [rip+0x36962]        # 0x1400413c8
   14000aa66:	mov    rbx,QWORD PTR [rsp+0x50]
   14000aa6b:	mov    rsi,QWORD PTR [rsp+0x58]
   14000aa70:	add    rsp,0x40
   14000aa74:	pop    rdi
   14000aa75:	ret    
   14000aa76:	int3   
   14000aa77:	int3   
   14000aa78:	rex push rbp
   14000aa7a:	push   rbx
   14000aa7b:	push   rsi
   14000aa7c:	push   rdi
   14000aa7d:	lea    rbp,[rsp-0x37]
   14000aa82:	sub    rsp,0x98
   14000aa89:	mov    rax,QWORD PTR [rip+0x4e5f8]        # 0x140059088
   14000aa90:	xor    rax,rsp
   14000aa93:	mov    QWORD PTR [rbp+0x1f],rax
   14000aa97:	mov    rbx,r9
   14000aa9a:	mov    rdi,rcx
   14000aa9d:	mov    r9d,r8d
   14000aaa0:	mov    esi,edx
   14000aaa2:	lea    r8,[rip+0x3b24f]        # 0x140045cf8
   14000aaa9:	lea    rcx,[rbp-0x21]
   14000aaad:	mov    edx,0x40
   14000aab2:	call   0x140004164
   14000aab7:	mov    ecx,DWORD PTR [rbp+0x7f]
   14000aaba:	lea    rdx,[rbp-0x29]
   14000aabe:	call   0x14000ab4c
   14000aac3:	mov    rcx,QWORD PTR [rdi+0x8]
   14000aac7:	lea    r8,[rip+0x3aa62]        # 0x140045530
   14000aace:	test   eax,eax
   14000aad0:	lea    rax,[rbp-0x21]
   14000aad4:	lea    r9,[rbp-0x41]
   14000aad8:	mov    QWORD PTR [rbp-0x41],rax
   14000aadc:	mov    edx,esi
   14000aade:	jns    0x14000ab05
   14000aae0:	mov    rax,r8
   14000aae3:	test   rbx,rbx
   14000aae6:	mov    QWORD PTR [rbp-0x31],r8
   14000aaea:	cmovne rax,rbx
   14000aaee:	mov    r8d,0x3
   14000aaf4:	mov    QWORD PTR [rbp-0x39],rax
   14000aaf8:	mov    rax,QWORD PTR [rcx]
   14000aafb:	call   QWORD PTR [rax]
   14000aafd:	mov    DWORD PTR [rdi],0x1
   14000ab03:	jmp    0x14000ab32
   14000ab05:	mov    rax,QWORD PTR [rcx]
   14000ab08:	test   rbx,rbx
   14000ab0b:	cmovne r8,rbx
   14000ab0f:	mov    rbx,QWORD PTR [rbp-0x29]
   14000ab13:	mov    QWORD PTR [rbp-0x39],r8
   14000ab17:	mov    r8d,0x3
   14000ab1d:	mov    QWORD PTR [rbp-0x31],rbx
   14000ab21:	call   QWORD PTR [rax]
   14000ab23:	mov    rcx,rbx
   14000ab26:	mov    DWORD PTR [rdi],0x1
   14000ab2c:	call   QWORD PTR [rip+0x36896]        # 0x1400413c8
   14000ab32:	mov    rcx,QWORD PTR [rbp+0x1f]
   14000ab36:	xor    rcx,rsp
   14000ab39:	call   0x1400265a0
   14000ab3e:	add    rsp,0x98
   14000ab45:	pop    rdi
   14000ab46:	pop    rsi
   14000ab47:	pop    rbx
   14000ab48:	pop    rbp
   14000ab49:	ret    
   14000ab4a:	int3   
   14000ab4b:	int3   
   14000ab4c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ab51:	push   rdi
   14000ab52:	sub    rsp,0x40
   14000ab56:	mov    eax,ecx
   14000ab58:	mov    rdi,rdx
   14000ab5b:	mov    ebx,ecx
   14000ab5d:	and    eax,0x1fff0000
   14000ab62:	cmp    eax,0x1230000
   14000ab67:	jne    0x14000abb1
   14000ab69:	xor    r8d,r8d
   14000ab6c:	call   0x140011d9c
   14000ab71:	test   rax,rax
   14000ab74:	jne    0x14000abb6
   14000ab76:	and    QWORD PTR [rsp+0x58],rax
   14000ab7b:	call   QWORD PTR [rip+0x36bc7]        # 0x140041748
   14000ab81:	and    QWORD PTR [rsp+0x30],0x0
   14000ab87:	and    DWORD PTR [rsp+0x28],0x0
   14000ab8c:	mov    rdx,rax
   14000ab8f:	lea    rax,[rsp+0x58]
   14000ab94:	xor    r9d,r9d
   14000ab97:	mov    r8d,ebx
   14000ab9a:	mov    ecx,0x2b00
   14000ab9f:	mov    QWORD PTR [rsp+0x20],rax
   14000aba4:	call   QWORD PTR [rip+0x36a2e]        # 0x1400415d8
   14000abaa:	mov    rax,QWORD PTR [rsp+0x58]
   14000abaf:	jmp    0x14000abb6
   14000abb1:	call   0x140011e70
   14000abb6:	mov    rbx,QWORD PTR [rsp+0x50]
   14000abbb:	mov    QWORD PTR [rdi],rax
   14000abbe:	xor    eax,eax
   14000abc0:	add    rsp,0x40
   14000abc4:	pop    rdi
   14000abc5:	ret    
   14000abc6:	int3   
   14000abc7:	int3   
   14000abc8:	rex push rbx
   14000abca:	sub    rsp,0x20
   14000abce:	mov    rbx,rcx
   14000abd1:	mov    rcx,QWORD PTR [rcx+0x8]
   14000abd5:	xor    r9d,r9d
   14000abd8:	mov    rax,QWORD PTR [rcx]
   14000abdb:	xor    r8d,r8d
   14000abde:	call   QWORD PTR [rax]
   14000abe0:	mov    DWORD PTR [rbx],0x1
   14000abe6:	add    rsp,0x20
   14000abea:	pop    rbx
   14000abeb:	ret    
   14000abec:	rex push rbx
   14000abee:	sub    rsp,0x80
   14000abf5:	mov    rax,QWORD PTR [rip+0x4e48c]        # 0x140059088
   14000abfc:	xor    rax,rsp
   14000abff:	mov    QWORD PTR [rsp+0x70],rax
   14000ac04:	cmp    DWORD PTR [rdx],0x1
   14000ac07:	mov    rbx,rcx
   14000ac0a:	jne    0x14000ac1b
   14000ac0c:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ac10:	mov    edx,DWORD PTR [rdx+0x4]
   14000ac13:	xor    r9d,r9d
   14000ac16:	xor    r8d,r8d
   14000ac19:	jmp    0x14000ac53
   14000ac1b:	mov    r9d,DWORD PTR [rdx+0x4]
   14000ac1f:	lea    r8,[rip+0x3b0ca]        # 0x140045cf0
   14000ac26:	lea    rcx,[rsp+0x30]
   14000ac2b:	mov    edx,0x40
   14000ac30:	call   0x140004164
   14000ac35:	mov    rcx,QWORD PTR [rbx+0x8]
   14000ac39:	lea    rax,[rsp+0x30]
   14000ac3e:	mov    QWORD PTR [rsp+0x20],rax
   14000ac43:	lea    r9,[rsp+0x20]
   14000ac48:	mov    edx,0xe12303e9
   14000ac4d:	mov    r8d,0x1
   14000ac53:	mov    rax,QWORD PTR [rcx]
   14000ac56:	call   QWORD PTR [rax]
   14000ac58:	mov    DWORD PTR [rbx],0x1
   14000ac5e:	mov    rcx,QWORD PTR [rsp+0x70]
   14000ac63:	xor    rcx,rsp
   14000ac66:	call   0x1400265a0
   14000ac6b:	add    rsp,0x80
   14000ac72:	pop    rbx
   14000ac73:	ret    
   14000ac74:	mov    rax,rsp
   14000ac77:	push   rdi
   14000ac78:	sub    rsp,0x40
   14000ac7c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14000ac84:	mov    QWORD PTR [rax+0x8],rbx
   14000ac88:	mov    QWORD PTR [rax+0x18],rbp
   14000ac8c:	mov    QWORD PTR [rax+0x20],rsi
   14000ac90:	mov    rsi,rcx
   14000ac93:	mov    r8d,DWORD PTR [rdx+0x30]
   14000ac97:	cmp    r8d,0x99999999
   14000ac9e:	jne    0x14000acab
   14000aca0:	mov    DWORD PTR [rcx],0x1
   14000aca6:	jmp    0x14000ad38
   14000acab:	xor    edx,edx
   14000acad:	mov    ecx,0x400
   14000acb2:	call   QWORD PTR [rip+0x366a0]        # 0x140041358
   14000acb8:	mov    rdi,rax
   14000acbb:	mov    QWORD PTR [rsp+0x58],rax
   14000acc0:	lea    rcx,[rax-0x1]
   14000acc4:	cmp    rcx,0xfffffffffffffffd
   14000acc8:	ja     0x14000ad18
   14000acca:	xor    ebx,ebx
   14000accc:	mov    QWORD PTR [rsp+0x28],rbx
   14000acd1:	mov    QWORD PTR [rsp+0x30],rbx
   14000acd6:	mov    QWORD PTR [rsp+0x38],rbx
   14000acdb:	mov    rdx,rax
   14000acde:	lea    rcx,[rsp+0x28]
   14000ace3:	call   0x140012570
   14000ace8:	mov    rax,QWORD PTR [rsp+0x30]
   14000aced:	sub    rax,QWORD PTR [rsp+0x28]
   14000acf2:	sar    rax,0x5
   14000acf6:	test   rax,rax
   14000acf9:	setne  bpl
   14000acfd:	lea    rcx,[rsp+0x28]
   14000ad02:	call   0x140006a48
   14000ad07:	nop
   14000ad08:	mov    rcx,rdi
   14000ad0b:	call   QWORD PTR [rip+0x36677]        # 0x140041388
   14000ad11:	mov    QWORD PTR [rsp+0x58],rbx
   14000ad16:	jmp    0x14000ad30
   14000ad18:	xor    ebx,ebx
   14000ad1a:	test   rax,rax
   14000ad1d:	je     0x14000ad2d
   14000ad1f:	mov    rcx,rax
   14000ad22:	call   QWORD PTR [rip+0x36660]        # 0x140041388
   14000ad28:	mov    QWORD PTR [rsp+0x58],rbx
   14000ad2d:	mov    bpl,bl
   14000ad30:	test   bpl,bpl
   14000ad33:	sete   bl
   14000ad36:	mov    DWORD PTR [rsi],ebx
   14000ad38:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ad3d:	mov    rbp,QWORD PTR [rsp+0x60]
   14000ad42:	mov    rsi,QWORD PTR [rsp+0x68]
   14000ad47:	add    rsp,0x40
   14000ad4b:	pop    rdi
   14000ad4c:	ret    
   14000ad4d:	int3   
   14000ad4e:	int3   
   14000ad4f:	int3   
   14000ad50:	mov    rax,rsp
   14000ad53:	push   rbp
   14000ad54:	push   rsi
   14000ad55:	push   rdi
   14000ad56:	push   r12
   14000ad58:	push   r13
   14000ad5a:	push   r14
   14000ad5c:	push   r15
   14000ad5e:	lea    rbp,[rax-0x1f8]
   14000ad65:	sub    rsp,0x2c0
   14000ad6c:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14000ad75:	mov    QWORD PTR [rax+0x18],rbx
   14000ad79:	mov    rax,QWORD PTR [rip+0x4e308]        # 0x140059088
   14000ad80:	xor    rax,rsp
   14000ad83:	mov    QWORD PTR [rbp+0x1b0],rax
   14000ad8a:	mov    rbx,rdx
   14000ad8d:	mov    rsi,rcx
   14000ad90:	xor    r9d,r9d
   14000ad93:	xor    r8d,r8d
   14000ad96:	mov    dl,0x10
   14000ad98:	call   0x140015618
   14000ad9d:	xor    edx,edx
   14000ad9f:	xor    ecx,ecx
   14000ada1:	call   0x140018b6c
   14000ada6:	test   eax,eax
   14000ada8:	je     0x14000adc9
   14000adaa:	mov    rcx,QWORD PTR [rsi+0x8]
   14000adae:	mov    rax,QWORD PTR [rcx]
   14000adb1:	xor    r9d,r9d
   14000adb4:	xor    r8d,r8d
   14000adb7:	mov    edx,0xe123051a
   14000adbc:	call   QWORD PTR [rax]
   14000adbe:	mov    DWORD PTR [rsi],0x1
   14000adc4:	jmp    0x14000afd8
   14000adc9:	lea    r13,[rbx+0x6a8]
   14000add0:	lea    r12,[rbx+0x698]
   14000add7:	mov    r8,r13
   14000adda:	mov    rdx,r12
   14000addd:	mov    rcx,rbx
   14000ade0:	call   0x1400064e8
   14000ade5:	test   al,al
   14000ade7:	je     0x14000adbe
   14000ade9:	and    DWORD PTR [rsi],0x0
   14000adec:	movsxd rax,DWORD PTR [rbx+0x6a0]
   14000adf3:	test   eax,eax
   14000adf5:	jne    0x14000ae6f
   14000adf7:	and    QWORD PTR [rsp+0x30],0x0
   14000adfd:	mov    rdx,QWORD PTR [rsi+0x8]
   14000ae01:	lea    rcx,[rsp+0x30]
   14000ae06:	call   0x14000babc
   14000ae0b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ae10:	test   eax,eax
   14000ae12:	jns    0x14000ae1b
   14000ae14:	mov    edx,0xe1230535
   14000ae19:	jmp    0x14000ae30
   14000ae1b:	mov    rax,QWORD PTR [rbx]
   14000ae1e:	mov    rcx,rbx
   14000ae21:	call   QWORD PTR [rax+0x88]
   14000ae27:	test   eax,eax
   14000ae29:	jns    0x14000ae58
   14000ae2b:	mov    edx,0xe123053b
   14000ae30:	xor    r9d,r9d
   14000ae33:	mov    r8d,eax
   14000ae36:	mov    rcx,rsi
   14000ae39:	call   0x14000a9d0
   14000ae3e:	mov    DWORD PTR [rsi],0x1
   14000ae44:	test   rbx,rbx
   14000ae47:	je     0x14000afd8
   14000ae4d:	mov    rax,QWORD PTR [rbx]
   14000ae50:	mov    rcx,rbx
   14000ae53:	jmp    0x14000afd5
   14000ae58:	mov    rcx,QWORD PTR [rsi+0x8]
   14000ae5c:	mov    rax,QWORD PTR [rcx]
   14000ae5f:	xor    r9d,r9d
   14000ae62:	xor    r8d,r8d
   14000ae65:	mov    edx,0x61230d11
   14000ae6a:	call   QWORD PTR [rax]
   14000ae6c:	nop
   14000ae6d:	jmp    0x14000ae4d
   14000ae6f:	xor    r15d,r15d
   14000ae72:	xor    r14d,r14d
   14000ae75:	mov    QWORD PTR [rsp+0x40],rax
   14000ae7a:	test   rax,rax
   14000ae7d:	jle    0x14000afd8
   14000ae83:	and    QWORD PTR [rsp+0x30],0x0
   14000ae89:	mov    rdx,QWORD PTR [rsi+0x8]
   14000ae8d:	lea    rcx,[rsp+0x30]
   14000ae92:	call   0x14000babc
   14000ae97:	test   eax,eax
   14000ae99:	js     0x14000afaf
   14000ae9f:	test   r14,r14
   14000aea2:	js     0x14000af99
   14000aea8:	cmp    r15d,DWORD PTR [r12+0x8]
   14000aead:	jge    0x14000af99
   14000aeb3:	mov    rax,QWORD PTR [r12]
   14000aeb7:	mov    edi,DWORD PTR [rax+r14*4]
   14000aebb:	mov    DWORD PTR [rsp+0x38],edi
   14000aebf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aec4:	mov    rax,QWORD PTR [rbx]
   14000aec7:	mov    edx,edi
   14000aec9:	mov    rcx,rbx
   14000aecc:	call   QWORD PTR [rax+0x80]
   14000aed2:	test   eax,eax
   14000aed4:	jns    0x14000af04
   14000aed6:	cmp    r15d,DWORD PTR [r13+0x8]
   14000aeda:	jge    0x14000af83
   14000aee0:	mov    rcx,QWORD PTR [r13+0x0]
   14000aee4:	mov    DWORD PTR [rsp+0x20],eax
   14000aee8:	mov    r9,QWORD PTR [rcx+r14*8]
   14000aeec:	mov    r8d,edi
   14000aeef:	mov    edx,0xe1230536
   14000aef4:	mov    rcx,rsi
   14000aef7:	call   0x14000aa78
   14000aefc:	mov    DWORD PTR [rsi],0x1
   14000af02:	jmp    0x14000af68
   14000af04:	lea    rdx,[rbp-0x60]
   14000af08:	mov    ecx,edi
   14000af0a:	call   0x14000bb68
   14000af0f:	mov    rdi,QWORD PTR [rsi+0x8]
   14000af13:	lea    rcx,[rsp+0x60]
   14000af18:	mov    QWORD PTR [rsp+0x48],rcx
   14000af1d:	lea    rcx,[rip+0x3a60c]        # 0x140045530
   14000af24:	lea    rdx,[rbp-0x60]
   14000af28:	cmp    eax,0x1
   14000af2b:	cmovne rdx,rcx
   14000af2f:	mov    QWORD PTR [rsp+0x50],rdx
   14000af34:	mov    r9d,DWORD PTR [rsp+0x38]
   14000af39:	lea    r8,[rip+0x3aa00]        # 0x140045940
   14000af40:	mov    edx,0x3c
   14000af45:	lea    rcx,[rsp+0x60]
   14000af4a:	call   0x140004164
   14000af4f:	mov    rax,QWORD PTR [rdi]
   14000af52:	lea    r9,[rsp+0x48]
   14000af57:	mov    edx,0x61230d12
   14000af5c:	mov    r8d,0x2
   14000af62:	mov    rcx,rdi
   14000af65:	call   QWORD PTR [rax]
   14000af67:	nop
   14000af68:	mov    rax,QWORD PTR [rbx]
   14000af6b:	mov    rcx,rbx
   14000af6e:	call   QWORD PTR [rax+0x10]
   14000af71:	inc    r15d
   14000af74:	inc    r14
   14000af77:	cmp    r14,QWORD PTR [rsp+0x40]
   14000af7c:	jge    0x14000afd8
   14000af7e:	jmp    0x14000ae83
   14000af83:	xor    r9d,r9d
   14000af86:	xor    r8d,r8d
   14000af89:	lea    edx,[r9+0x1]
   14000af8d:	mov    ecx,0xc000008c
   14000af92:	call   QWORD PTR [rip+0x36408]        # 0x1400413a0
   14000af98:	int3   
   14000af99:	xor    r9d,r9d
   14000af9c:	xor    r8d,r8d
   14000af9f:	lea    edx,[r9+0x1]
   14000afa3:	mov    ecx,0xc000008c
   14000afa8:	call   QWORD PTR [rip+0x363f2]        # 0x1400413a0
   14000afae:	int3   
   14000afaf:	xor    r9d,r9d
   14000afb2:	mov    r8d,eax
   14000afb5:	mov    edx,0xe1230535
   14000afba:	mov    rcx,rsi
   14000afbd:	call   0x14000a9d0
   14000afc2:	mov    DWORD PTR [rsi],0x1
   14000afc8:	mov    rcx,QWORD PTR [rsp+0x30]
   14000afcd:	test   rcx,rcx
   14000afd0:	je     0x14000afd8
   14000afd2:	mov    rax,QWORD PTR [rcx]
   14000afd5:	call   QWORD PTR [rax+0x10]
   14000afd8:	mov    rcx,QWORD PTR [rbp+0x1b0]
   14000afdf:	xor    rcx,rsp
   14000afe2:	call   0x1400265a0
   14000afe7:	mov    rbx,QWORD PTR [rsp+0x310]
   14000afef:	add    rsp,0x2c0
   14000aff6:	pop    r15
   14000aff8:	pop    r14
   14000affa:	pop    r13
   14000affc:	pop    r12
   14000affe:	pop    rdi
   14000afff:	pop    rsi
   14000b000:	pop    rbp
   14000b001:	ret    
   14000b002:	int3   
   14000b003:	int3   
   14000b004:	mov    QWORD PTR [rsp+0x8],rcx
   14000b009:	sub    rsp,0x38
   14000b00d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b016:	mov    rcx,QWORD PTR [rcx]
   14000b019:	test   rcx,rcx
   14000b01c:	je     0x14000b024
   14000b01e:	mov    rax,QWORD PTR [rcx]
   14000b021:	call   QWORD PTR [rax+0x10]
   14000b024:	add    rsp,0x38
   14000b028:	ret    
   14000b029:	int3   
   14000b02a:	int3   
   14000b02b:	int3   
   14000b02c:	mov    rax,rsp
   14000b02f:	push   rdi
   14000b030:	push   r12
   14000b032:	push   r13
   14000b034:	push   r14
   14000b036:	push   r15
   14000b038:	sub    rsp,0x8f0
   14000b03f:	mov    QWORD PTR [rax-0x7f8],0xfffffffffffffffe
   14000b04a:	mov    QWORD PTR [rax+0x18],rbx
   14000b04e:	mov    QWORD PTR [rax+0x20],rsi
   14000b052:	mov    rax,QWORD PTR [rip+0x4e02f]        # 0x140059088
   14000b059:	xor    rax,rsp
   14000b05c:	mov    QWORD PTR [rsp+0x8e0],rax
   14000b064:	mov    r15,rdx
   14000b067:	mov    rdi,rcx
   14000b06a:	mov    QWORD PTR [rsp+0x70],rcx
   14000b06f:	mov    QWORD PTR [rsp+0xb0],rcx
   14000b077:	xor    esi,esi
   14000b079:	mov    r14d,esi
   14000b07c:	mov    DWORD PTR [rsp+0x40],esi
   14000b080:	lea    r8,[rdx+0x462]
   14000b087:	xor    r9d,r9d
   14000b08a:	mov    dl,0x11
   14000b08c:	call   0x140015618
   14000b091:	cmp    BYTE PTR [r15+0x45c],sil
   14000b098:	je     0x14000b0cf
   14000b09a:	cmp    BYTE PTR [rip+0x519b0],sil        # 0x14005ca51
   14000b0a1:	jne    0x14000b0cf
   14000b0a3:	lea    r8,[r15+0x688]
   14000b0aa:	lea    rdx,[r15+0x678]
   14000b0b1:	mov    rcx,r15
   14000b0b4:	call   0x1400064e8
   14000b0b9:	mov    BYTE PTR [rip+0x51992],al        # 0x14005ca51
   14000b0bf:	test   al,al
   14000b0c1:	jne    0x14000b0cf
   14000b0c3:	lea    r12d,[rsi+0x1]
   14000b0c7:	mov    DWORD PTR [rdi],r12d
   14000b0ca:	jmp    0x14000ba8d
   14000b0cf:	mov    dl,BYTE PTR [r15+0x45c]
   14000b0d6:	mov    r12d,0x1
   14000b0dc:	test   dl,dl
   14000b0de:	je     0x14000b0e9
   14000b0e0:	mov    ebx,DWORD PTR [r15+0x680]
   14000b0e7:	jmp    0x14000b0ec
   14000b0e9:	mov    ebx,r12d
   14000b0ec:	mov    DWORD PTR [rsp+0x58],ebx
   14000b0f0:	test   ebx,ebx
   14000b0f2:	jne    0x14000b111
   14000b0f4:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b0f8:	mov    rax,QWORD PTR [rcx]
   14000b0fb:	neg    dl
   14000b0fd:	sbb    edx,edx
   14000b0ff:	neg    edx
   14000b101:	add    edx,0xe1230539
   14000b107:	xor    r9d,r9d
   14000b10a:	xor    r8d,r8d
   14000b10d:	call   QWORD PTR [rax]
   14000b10f:	jmp    0x14000b0c7
   14000b111:	xor    edx,edx
   14000b113:	xor    ecx,ecx
   14000b115:	call   0x140018b6c
   14000b11a:	test   eax,eax
   14000b11c:	jne    0x14000b1fb
   14000b122:	lea    rcx,[rsp+0x160]
   14000b12a:	call   0x14001a040
   14000b12f:	nop
   14000b130:	lea    rcx,[rsp+0x160]
   14000b138:	call   0x14001a2ec
   14000b13d:	mov    rax,QWORD PTR [rsp+0x170]
   14000b145:	mov    ecx,DWORD PTR [rax+0xa4]
   14000b14b:	cmp    ecx,r12d
   14000b14e:	je     0x14000b155
   14000b150:	cmp    ecx,0x10
   14000b153:	jne    0x14000b197
   14000b155:	cmp    BYTE PTR [r15+0x45f],sil
   14000b15c:	jne    0x14000b19c
   14000b15e:	cmp    BYTE PTR [r15+0x460],sil
   14000b165:	jne    0x14000b19c
   14000b167:	cmp    BYTE PTR [r15+0x45e],sil
   14000b16e:	jne    0x14000b19c
   14000b170:	lea    rdx,[rsp+0x110]
   14000b178:	mov    rcx,r15
   14000b17b:	call   0x14000774c
   14000b180:	nop
   14000b181:	mov    r14d,r12d
   14000b184:	mov    DWORD PTR [rsp+0x40],r12d
   14000b189:	cmp    DWORD PTR [rax+0x8],esi
   14000b18c:	jg     0x14000b19c
   14000b18e:	cmp    DWORD PTR [r15+0x6c4],esi
   14000b195:	jne    0x14000b19c
   14000b197:	mov    bl,sil
   14000b19a:	jmp    0x14000b19f
   14000b19c:	mov    bl,r12b
   14000b19f:	test   r12b,r14b
   14000b1a2:	je     0x14000b1ba
   14000b1a4:	and    r14d,0xfffffffe
   14000b1a8:	mov    DWORD PTR [rsp+0x40],r14d
   14000b1ad:	lea    rcx,[rsp+0x110]
   14000b1b5:	call   0x1400072ec
   14000b1ba:	test   bl,bl
   14000b1bc:	je     0x14000b1ea
   14000b1be:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b1c2:	mov    rax,QWORD PTR [rcx]
   14000b1c5:	xor    r9d,r9d
   14000b1c8:	xor    r8d,r8d
   14000b1cb:	mov    edx,0xe123052d
   14000b1d0:	call   QWORD PTR [rax]
   14000b1d2:	mov    DWORD PTR [rdi],0xe123052d
   14000b1d8:	lea    rcx,[rsp+0x160]
   14000b1e0:	call   0x14001a144
   14000b1e5:	jmp    0x14000ba8d
   14000b1ea:	lea    rcx,[rsp+0x160]
   14000b1f2:	call   0x14001a144
   14000b1f7:	mov    ebx,DWORD PTR [rsp+0x58]
   14000b1fb:	mov    DWORD PTR [rdi],esi
   14000b1fd:	mov    eax,esi
   14000b1ff:	or     r13,0xffffffffffffffff
   14000b203:	mov    DWORD PTR [rsp+0x50],eax
   14000b207:	cmp    eax,ebx
   14000b209:	jge    0x14000ba8d
   14000b20f:	mov    QWORD PTR [rsp+0x48],rsi
   14000b214:	mov    rdx,QWORD PTR [rdi+0x8]
   14000b218:	lea    rcx,[rsp+0x48]
   14000b21d:	call   0x14000babc
   14000b222:	test   eax,eax
   14000b224:	jns    0x14000b255
   14000b226:	xor    r9d,r9d
   14000b229:	mov    r8d,eax
   14000b22c:	mov    edx,0xe1230535
   14000b231:	mov    rcx,rdi
   14000b234:	call   0x14000a9d0
   14000b239:	mov    DWORD PTR [rdi],r12d
   14000b23c:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b241:	test   rcx,rcx
   14000b244:	je     0x14000ba8d
   14000b24a:	mov    rax,QWORD PTR [rcx]
   14000b24d:	call   QWORD PTR [rax+0x10]
   14000b250:	jmp    0x14000ba8d
   14000b255:	cmp    BYTE PTR [r15+0x45f],sil
   14000b25c:	je     0x14000b27d
   14000b25e:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b263:	mov    rax,QWORD PTR [rbx]
   14000b266:	mov    edx,0x3
   14000b26b:	mov    rcx,rbx
   14000b26e:	call   QWORD PTR [rax+0x20]
   14000b271:	mov    edx,DWORD PTR [r15+0x6bc]
   14000b278:	jmp    0x14000b4bd
   14000b27d:	cmp    BYTE PTR [r15+0x460],sil
   14000b284:	je     0x14000b2a5
   14000b286:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b28b:	mov    rax,QWORD PTR [rbx]
   14000b28e:	mov    edx,0x4
   14000b293:	mov    rcx,rbx
   14000b296:	call   QWORD PTR [rax+0x20]
   14000b299:	mov    edx,DWORD PTR [r15+0x6c0]
   14000b2a0:	jmp    0x14000b4bd
   14000b2a5:	lea    rdx,[rsp+0x138]
   14000b2ad:	mov    rcx,r15
   14000b2b0:	call   0x14000774c
   14000b2b5:	nop
   14000b2b6:	cmp    DWORD PTR [rax+0x8],r12d
   14000b2ba:	sete   bl
   14000b2bd:	lea    rcx,[rsp+0x138]
   14000b2c5:	call   0x1400072ec
   14000b2ca:	test   bl,bl
   14000b2cc:	je     0x14000b49c
   14000b2d2:	lea    rdx,[rsp+0x128]
   14000b2da:	mov    rcx,r15
   14000b2dd:	call   0x14000774c
   14000b2e2:	nop
   14000b2e3:	cmp    DWORD PTR [rax+0x8],esi
   14000b2e6:	jg     0x14000b2fd
   14000b2e8:	xor    r9d,r9d
   14000b2eb:	xor    r8d,r8d
   14000b2ee:	mov    edx,r12d
   14000b2f1:	mov    ecx,0xc000008c
   14000b2f6:	call   QWORD PTR [rip+0x360a4]        # 0x1400413a0
   14000b2fc:	int3   
   14000b2fd:	mov    rax,QWORD PTR [rax]
   14000b300:	mov    rbx,QWORD PTR [rax]
   14000b303:	lea    rcx,[rip+0x4f01e]        # 0x14005a328
   14000b30a:	mov    rax,QWORD PTR [rip+0x4f017]        # 0x14005a328
   14000b311:	call   QWORD PTR [rax+0x18]
   14000b314:	lea    rdi,[rax+0x18]
   14000b318:	mov    QWORD PTR [rsp+0x78],rdi
   14000b31d:	test   rbx,rbx
   14000b320:	je     0x14000b34c
   14000b322:	test   rbx,0xffffffffffff0000
   14000b329:	jne    0x14000b34c
   14000b32b:	movzx  ebx,bx
   14000b32e:	mov    ecx,ebx
   14000b330:	call   0x1400040b8
   14000b335:	test   rax,rax
   14000b338:	je     0x14000b35e
   14000b33a:	mov    r8d,ebx
   14000b33d:	mov    rdx,rax
   14000b340:	lea    rcx,[rsp+0x78]
   14000b345:	call   0x14000dbbc
   14000b34a:	jmp    0x14000b359
   14000b34c:	mov    rdx,rbx
   14000b34f:	lea    rcx,[rsp+0x78]
   14000b354:	call   0x14000d830
   14000b359:	mov    rdi,QWORD PTR [rsp+0x78]
   14000b35e:	lea    rcx,[rsp+0x128]
   14000b366:	call   0x1400072ec
   14000b36b:	nop
   14000b36c:	mov    ebx,DWORD PTR [rdi-0x10]
   14000b36f:	mov    DWORD PTR [rsp+0xb8],ebx
   14000b376:	mov    DWORD PTR [rsp+0x28],esi
   14000b37a:	mov    QWORD PTR [rsp+0x20],rsi
   14000b37f:	mov    r9d,ebx
   14000b382:	mov    r8,rdi
   14000b385:	xor    edx,edx
   14000b387:	lea    ecx,[rdx+0x3]
   14000b38a:	call   QWORD PTR [rip+0x35f98]        # 0x140041328
   14000b390:	mov    DWORD PTR [rsp+0x80],eax
   14000b397:	mov    edx,eax
   14000b399:	xor    ecx,ecx
   14000b39b:	call   QWORD PTR [rip+0x36337]        # 0x1400416d8
   14000b3a1:	mov    r14,rax
   14000b3a4:	mov    QWORD PTR [rsp+0x150],rax
   14000b3ac:	test   rax,rax
   14000b3af:	je     0x14000b46b
   14000b3b5:	mov    eax,DWORD PTR [rsp+0x80]
   14000b3bc:	mov    DWORD PTR [rsp+0x28],eax
   14000b3c0:	mov    QWORD PTR [rsp+0x20],r14
   14000b3c5:	mov    r9d,ebx
   14000b3c8:	mov    r8,rdi
   14000b3cb:	xor    edx,edx
   14000b3cd:	lea    ecx,[rdx+0x3]
   14000b3d0:	call   QWORD PTR [rip+0x35f52]        # 0x140041328
   14000b3d6:	mov    QWORD PTR [rsp+0x148],r14
   14000b3de:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b3e3:	mov    rax,QWORD PTR [rbx]
   14000b3e6:	mov    edx,0x5
   14000b3eb:	mov    rcx,rbx
   14000b3ee:	call   QWORD PTR [rax+0x20]
   14000b3f1:	mov    rax,QWORD PTR [rbx]
   14000b3f4:	xor    r8d,r8d
   14000b3f7:	mov    rdx,r14
   14000b3fa:	mov    rcx,rbx
   14000b3fd:	call   QWORD PTR [rax+0x68]
   14000b400:	mov    ebx,eax
   14000b402:	mov    rcx,r14
   14000b405:	call   QWORD PTR [rip+0x362c5]        # 0x1400416d0
   14000b40b:	test   ebx,ebx
   14000b40d:	jns    0x14000b43e
   14000b40f:	mov    rax,QWORD PTR [rsp+0x70]
   14000b414:	mov    DWORD PTR [rax],r12d
   14000b417:	lea    rdx,[rdi-0x18]
   14000b41b:	mov    eax,r13d
   14000b41e:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b423:	add    eax,r13d
   14000b426:	test   eax,eax
   14000b428:	jg     0x14000b434
   14000b42a:	mov    rcx,QWORD PTR [rdx]
   14000b42d:	mov    rax,QWORD PTR [rcx]
   14000b430:	call   QWORD PTR [rax+0x8]
   14000b433:	nop
   14000b434:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b439:	jmp    0x14000b24a
   14000b43e:	lea    rdx,[rdi-0x18]
   14000b442:	mov    eax,r13d
   14000b445:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b44a:	add    eax,r13d
   14000b44d:	test   eax,eax
   14000b44f:	jg     0x14000b45a
   14000b451:	mov    rcx,QWORD PTR [rdx]
   14000b454:	mov    rax,QWORD PTR [rcx]
   14000b457:	call   QWORD PTR [rax+0x8]
   14000b45a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b45f:	mov    r14d,DWORD PTR [rsp+0x40]
   14000b464:	mov    rdi,QWORD PTR [rsp+0x70]
   14000b469:	jmp    0x14000b4c6
   14000b46b:	call   0x140007088
   14000b470:	nop
   14000b471:	mov    rdx,QWORD PTR [rsp+0x78]
   14000b476:	add    rdx,0xffffffffffffffe8
   14000b47a:	or     r13,0xffffffffffffffff
   14000b47e:	mov    eax,r13d
   14000b481:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b486:	add    eax,r13d
   14000b489:	test   eax,eax
   14000b48b:	jg     0x14000b497
   14000b48d:	mov    rcx,QWORD PTR [rdx]
   14000b490:	mov    rax,QWORD PTR [rcx]
   14000b493:	call   QWORD PTR [rax+0x8]
   14000b496:	nop
   14000b497:	jmp    0x14000b23c
   14000b49c:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b4a1:	mov    rax,QWORD PTR [rbx]
   14000b4a4:	mov    edx,r12d
   14000b4a7:	mov    rcx,rbx
   14000b4aa:	call   QWORD PTR [rax+0x20]
   14000b4ad:	mov    edx,DWORD PTR [r15+0x6b8]
   14000b4b4:	test   edx,edx
   14000b4b6:	jne    0x14000b4bd
   14000b4b8:	mov    edx,0x989680
   14000b4bd:	mov    rax,QWORD PTR [rbx]
   14000b4c0:	mov    rcx,rbx
   14000b4c3:	call   QWORD PTR [rax+0x30]
   14000b4c6:	mov    rax,QWORD PTR [rbx]
   14000b4c9:	mov    edx,DWORD PTR [r15+0x6c4]
   14000b4d0:	mov    rcx,rbx
   14000b4d3:	call   QWORD PTR [rax+0x40]
   14000b4d6:	mov    rax,QWORD PTR [rbx]
   14000b4d9:	mov    edx,esi
   14000b4db:	cmp    BYTE PTR [r15+0x459],sil
   14000b4e2:	sete   dl
   14000b4e5:	mov    rcx,rbx
   14000b4e8:	call   QWORD PTR [rax+0x60]
   14000b4eb:	lea    rax,[r15+0x6ce]
   14000b4f2:	cmp    WORD PTR [rax],si
   14000b4f5:	je     0x14000b5b6
   14000b4fb:	xor    r9d,r9d
   14000b4fe:	lea    r8,[rsp+0x4c0]
   14000b506:	mov    edx,0x104
   14000b50b:	mov    rcx,rax
   14000b50e:	call   QWORD PTR [rip+0x35e6c]        # 0x140041380
   14000b514:	mov    ebx,eax
   14000b516:	lea    rcx,[rip+0x4ee0b]        # 0x14005a328
   14000b51d:	mov    rdx,QWORD PTR [rip+0x4ee04]        # 0x14005a328
   14000b524:	call   QWORD PTR [rdx+0x18]
   14000b527:	add    rax,0x18
   14000b52b:	mov    QWORD PTR [rsp+0x90],rax
   14000b533:	lea    eax,[rbx-0x1]
   14000b536:	cmp    eax,0x103
   14000b53b:	ja     0x14000b55b
   14000b53d:	lea    rcx,[rsp+0x4c0]
   14000b545:	mov    rax,r13
   14000b548:	inc    rax
   14000b54b:	cmp    WORD PTR [rcx+rax*2],si
   14000b54f:	jne    0x14000b548
   14000b551:	lea    rdx,[rsp+0x4c0]
   14000b559:	jmp    0x14000b577
   14000b55b:	lea    rdx,[r15+0x6ce]
   14000b562:	test   rdx,rdx
   14000b565:	jne    0x14000b56b
   14000b567:	mov    eax,esi
   14000b569:	jmp    0x14000b577
   14000b56b:	mov    rax,r13
   14000b56e:	inc    rax
   14000b571:	cmp    WORD PTR [rdx+rax*2],si
   14000b575:	jne    0x14000b56e
   14000b577:	mov    r8d,eax
   14000b57a:	lea    rcx,[rsp+0x90]
   14000b582:	call   0x140006f54
   14000b587:	nop
   14000b588:	mov    rdx,QWORD PTR [rsp+0x90]
   14000b590:	add    rdx,0xffffffffffffffe8
   14000b594:	mov    eax,r13d
   14000b597:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b59c:	add    eax,r13d
   14000b59f:	test   eax,eax
   14000b5a1:	jg     0x14000b5ac
   14000b5a3:	mov    rcx,QWORD PTR [rdx]
   14000b5a6:	mov    rax,QWORD PTR [rcx]
   14000b5a9:	call   QWORD PTR [rax+0x8]
   14000b5ac:	mov    r14d,DWORD PTR [rsp+0x40]
   14000b5b1:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b5b6:	cmp    BYTE PTR [r15+0x45c],sil
   14000b5bd:	je     0x14000b82d
   14000b5c3:	movsxd rax,DWORD PTR [rsp+0x50]
   14000b5c8:	test   eax,eax
   14000b5ca:	js     0x14000b818
   14000b5d0:	cmp    eax,DWORD PTR [r15+0x680]
   14000b5d7:	jge    0x14000b818
   14000b5dd:	mov    rcx,rax
   14000b5e0:	mov    rax,QWORD PTR [r15+0x678]
   14000b5e7:	mov    eax,DWORD PTR [rax+rcx*4]
   14000b5ea:	mov    DWORD PTR [rsp+0x54],eax
   14000b5ee:	lea    rdx,[r15+0x978]
   14000b5f5:	mov    rcx,r15
   14000b5f8:	call   0x1400068e0
   14000b5fd:	test   al,al
   14000b5ff:	je     0x14000b621
   14000b601:	lea    rdx,[r15+0x978]
   14000b608:	lea    rcx,[rsp+0xa0]
   14000b610:	call   0x140006af0
   14000b615:	mov    r8,rax
   14000b618:	or     r14d,0x2
   14000b61c:	jmp    0x14000b6b1
   14000b621:	lea    rcx,[rip+0x4ed00]        # 0x14005a328
   14000b628:	mov    rax,QWORD PTR [rip+0x4ecf9]        # 0x14005a328
   14000b62f:	call   QWORD PTR [rax+0x18]
   14000b632:	add    rax,0x18
   14000b636:	mov    QWORD PTR [rsp+0x88],rax
   14000b63e:	lea    rdx,[rax-0x18]
   14000b642:	mov    rcx,QWORD PTR [rdx]
   14000b645:	mov    QWORD PTR [rsp+0x60],rcx
   14000b64a:	cmp    DWORD PTR [rdx+0x8],esi
   14000b64d:	je     0x14000b6a5
   14000b64f:	cmp    DWORD PTR [rdx+0x10],esi
   14000b652:	jge    0x14000b66c
   14000b654:	cmp    DWORD PTR [rax-0xc],esi
   14000b657:	jge    0x14000b664
   14000b659:	mov    ecx,0x80070057
   14000b65e:	call   0x14000400c
   14000b663:	int3   
   14000b664:	mov    DWORD PTR [rax-0x10],esi
   14000b667:	mov    WORD PTR [rax],si
   14000b66a:	jmp    0x14000b6a5
   14000b66c:	mov    eax,r13d
   14000b66f:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b674:	add    eax,r13d
   14000b677:	test   eax,eax
   14000b679:	jg     0x14000b689
   14000b67b:	mov    rcx,QWORD PTR [rdx]
   14000b67e:	mov    rax,QWORD PTR [rcx]
   14000b681:	call   QWORD PTR [rax+0x8]
   14000b684:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b689:	mov    rax,QWORD PTR [rcx]
   14000b68c:	call   QWORD PTR [rax+0x18]
   14000b68f:	add    rax,0x18
   14000b693:	mov    QWORD PTR [rsp+0x88],rax
   14000b69b:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b6a0:	mov    r14d,DWORD PTR [rsp+0x40]
   14000b6a5:	lea    r8,[rsp+0x88]
   14000b6ad:	or     r14d,0x4
   14000b6b1:	mov    DWORD PTR [rsp+0x40],r14d
   14000b6b6:	mov    rax,QWORD PTR [rbx]
   14000b6b9:	mov    r8,QWORD PTR [r8]
   14000b6bc:	mov    edx,DWORD PTR [rsp+0x54]
   14000b6c0:	mov    rcx,rbx
   14000b6c3:	call   QWORD PTR [rax+0x78]
   14000b6c6:	mov    DWORD PTR [rsp+0x60],eax
   14000b6ca:	test   r14b,0x4
   14000b6ce:	je     0x14000b707
   14000b6d0:	and    r14d,0xfffffffb
   14000b6d4:	mov    DWORD PTR [rsp+0x40],r14d
   14000b6d9:	mov    rdx,QWORD PTR [rsp+0x88]
   14000b6e1:	add    rdx,0xffffffffffffffe8
   14000b6e5:	mov    ecx,r13d
   14000b6e8:	lock xadd DWORD PTR [rdx+0x10],ecx
   14000b6ed:	add    ecx,r13d
   14000b6f0:	test   ecx,ecx
   14000b6f2:	jg     0x14000b6fd
   14000b6f4:	mov    rcx,QWORD PTR [rdx]
   14000b6f7:	mov    rax,QWORD PTR [rcx]
   14000b6fa:	call   QWORD PTR [rax+0x8]
   14000b6fd:	mov    r14d,DWORD PTR [rsp+0x40]
   14000b702:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b707:	test   r14b,0x2
   14000b70b:	je     0x14000b744
   14000b70d:	and    r14d,0xfffffffd
   14000b711:	mov    DWORD PTR [rsp+0x40],r14d
   14000b716:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000b71e:	add    rdx,0xffffffffffffffe8
   14000b722:	mov    eax,r13d
   14000b725:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b72a:	add    eax,r13d
   14000b72d:	test   eax,eax
   14000b72f:	jg     0x14000b73a
   14000b731:	mov    rcx,QWORD PTR [rdx]
   14000b734:	mov    rax,QWORD PTR [rcx]
   14000b737:	call   QWORD PTR [rax+0x8]
   14000b73a:	mov    r14d,DWORD PTR [rsp+0x40]
   14000b73f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b744:	mov    ecx,DWORD PTR [rsp+0x60]
   14000b748:	test   ecx,ecx
   14000b74a:	jns    0x14000b7a5
   14000b74c:	cmp    ecx,0xe123058e
   14000b752:	je     0x14000b79e
   14000b754:	movsxd rdx,DWORD PTR [rsp+0x50]
   14000b759:	cmp    edx,DWORD PTR [r15+0x690]
   14000b760:	jge    0x14000b789
   14000b762:	mov    rax,QWORD PTR [r15+0x688]
   14000b769:	mov    DWORD PTR [rsp+0x20],ecx
   14000b76d:	mov    r9,QWORD PTR [rax+rdx*8]
   14000b771:	mov    r8d,DWORD PTR [rsp+0x54]
   14000b776:	mov    edx,0xe1230538
   14000b77b:	mov    rcx,rdi
   14000b77e:	call   0x14000aa78
   14000b783:	mov    ecx,DWORD PTR [rsp+0x60]
   14000b787:	jmp    0x14000b79e
   14000b789:	xor    r9d,r9d
   14000b78c:	xor    r8d,r8d
   14000b78f:	mov    edx,r12d
   14000b792:	mov    ecx,0xc000008c
   14000b797:	call   QWORD PTR [rip+0x35c03]        # 0x1400413a0
   14000b79d:	int3   
   14000b79e:	mov    DWORD PTR [rdi],ecx
   14000b7a0:	jmp    0x14000ba74
   14000b7a5:	lea    rdx,[rsp+0x6d0]
   14000b7ad:	mov    ecx,DWORD PTR [rsp+0x54]
   14000b7b1:	call   0x14000bb68
   14000b7b6:	mov    rdi,QWORD PTR [rdi+0x8]
   14000b7ba:	lea    rcx,[rsp+0x440]
   14000b7c2:	mov    QWORD PTR [rsp+0xc0],rcx
   14000b7ca:	lea    rcx,[rip+0x39d5f]        # 0x140045530
   14000b7d1:	lea    rdx,[rsp+0x6d0]
   14000b7d9:	cmp    eax,r12d
   14000b7dc:	cmovne rdx,rcx
   14000b7e0:	mov    QWORD PTR [rsp+0xc8],rdx
   14000b7e8:	mov    r9d,DWORD PTR [rsp+0x54]
   14000b7ed:	lea    r8,[rip+0x3a14c]        # 0x140045940
   14000b7f4:	mov    edx,0x3c
   14000b7f9:	lea    rcx,[rsp+0x440]
   14000b801:	call   0x140004164
   14000b806:	lea    r9,[rsp+0xc0]
   14000b80e:	mov    edx,0x61230d13
   14000b813:	jmp    0x14000ba61
   14000b818:	xor    r9d,r9d
   14000b81b:	xor    r8d,r8d
   14000b81e:	mov    edx,r12d
   14000b821:	mov    ecx,0xc000008c
   14000b826:	call   QWORD PTR [rip+0x35b74]        # 0x1400413a0
   14000b82c:	int3   
   14000b82d:	lea    rdx,[r15+0x462]
   14000b834:	mov    rax,QWORD PTR [r15+0x670]
   14000b83b:	mov    rcx,rsi
   14000b83e:	cmp    DWORD PTR [rax-0x10],esi
   14000b841:	cmovg  rcx,rax
   14000b845:	mov    DWORD PTR [rsp+0x68],esi
   14000b849:	mov    QWORD PTR [rsp+0x100],rsi
   14000b851:	mov    DWORD PTR [rsp+0x108],esi
   14000b858:	mov    QWORD PTR [rsp+0xe0],rdx
   14000b860:	mov    QWORD PTR [rsp+0xe8],rcx
   14000b868:	mov    QWORD PTR [rsp+0xf0],rsi
   14000b870:	mov    QWORD PTR [rsp+0xf8],rsi
   14000b878:	lea    rdx,[r15+0x978]
   14000b87f:	mov    rcx,r15
   14000b882:	call   0x1400068e0
   14000b887:	test   al,al
   14000b889:	je     0x14000b8a9
   14000b88b:	lea    rdx,[r15+0x978]
   14000b892:	lea    rcx,[rsp+0xa8]
   14000b89a:	call   0x140006af0
   14000b89f:	nop
   14000b8a0:	or     r14d,0x8
   14000b8a4:	jmp    0x14000b939
   14000b8a9:	lea    rcx,[rip+0x4ea78]        # 0x14005a328
   14000b8b0:	mov    rax,QWORD PTR [rip+0x4ea71]        # 0x14005a328
   14000b8b7:	call   QWORD PTR [rax+0x18]
   14000b8ba:	add    rax,0x18
   14000b8be:	mov    QWORD PTR [rsp+0x98],rax
   14000b8c6:	lea    rdx,[rax-0x18]
   14000b8ca:	mov    rcx,QWORD PTR [rdx]
   14000b8cd:	mov    QWORD PTR [rsp+0x60],rcx
   14000b8d2:	cmp    DWORD PTR [rdx+0x8],esi
   14000b8d5:	je     0x14000b92d
   14000b8d7:	cmp    DWORD PTR [rdx+0x10],esi
   14000b8da:	jge    0x14000b8f4
   14000b8dc:	cmp    DWORD PTR [rax-0xc],esi
   14000b8df:	jge    0x14000b8ec
   14000b8e1:	mov    ecx,0x80070057
   14000b8e6:	call   0x14000400c
   14000b8eb:	int3   
   14000b8ec:	mov    DWORD PTR [rax-0x10],esi
   14000b8ef:	mov    WORD PTR [rax],si
   14000b8f2:	jmp    0x14000b92d
   14000b8f4:	mov    eax,r13d
   14000b8f7:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b8fc:	add    eax,r13d
   14000b8ff:	test   eax,eax
   14000b901:	jg     0x14000b911
   14000b903:	mov    rcx,QWORD PTR [rdx]
   14000b906:	mov    rax,QWORD PTR [rcx]
   14000b909:	call   QWORD PTR [rax+0x8]
   14000b90c:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b911:	mov    rax,QWORD PTR [rcx]
   14000b914:	call   QWORD PTR [rax+0x18]
   14000b917:	add    rax,0x18
   14000b91b:	mov    QWORD PTR [rsp+0x98],rax
   14000b923:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b928:	mov    r14d,DWORD PTR [rsp+0x40]
   14000b92d:	lea    rax,[rsp+0x98]
   14000b935:	or     r14d,0x10
   14000b939:	mov    DWORD PTR [rsp+0x40],r14d
   14000b93e:	mov    rax,QWORD PTR [rax]
   14000b941:	mov    QWORD PTR [rsp+0x100],rax
   14000b949:	test   r14b,0x10
   14000b94d:	je     0x14000b986
   14000b94f:	and    r14d,0xffffffef
   14000b953:	mov    DWORD PTR [rsp+0x40],r14d
   14000b958:	mov    rdx,QWORD PTR [rsp+0x98]
   14000b960:	add    rdx,0xffffffffffffffe8
   14000b964:	mov    eax,r13d
   14000b967:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b96c:	add    eax,r13d
   14000b96f:	test   eax,eax
   14000b971:	jg     0x14000b97c
   14000b973:	mov    rcx,QWORD PTR [rdx]
   14000b976:	mov    rax,QWORD PTR [rcx]
   14000b979:	call   QWORD PTR [rax+0x8]
   14000b97c:	mov    r14d,DWORD PTR [rsp+0x40]
   14000b981:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b986:	test   r14b,0x8
   14000b98a:	je     0x14000b9c3
   14000b98c:	and    r14d,0xfffffff7
   14000b990:	mov    DWORD PTR [rsp+0x40],r14d
   14000b995:	mov    rdx,QWORD PTR [rsp+0xa8]
   14000b99d:	add    rdx,0xffffffffffffffe8
   14000b9a1:	mov    eax,r13d
   14000b9a4:	lock xadd DWORD PTR [rdx+0x10],eax
   14000b9a9:	add    eax,r13d
   14000b9ac:	test   eax,eax
   14000b9ae:	jg     0x14000b9b9
   14000b9b0:	mov    rcx,QWORD PTR [rdx]
   14000b9b3:	mov    rax,QWORD PTR [rcx]
   14000b9b6:	call   QWORD PTR [rax+0x8]
   14000b9b9:	mov    r14d,DWORD PTR [rsp+0x40]
   14000b9be:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b9c3:	mov    eax,esi
   14000b9c5:	cmp    BYTE PTR [r15+0x45a],sil
   14000b9cc:	setne  al
   14000b9cf:	mov    DWORD PTR [rsp+0x108],eax
   14000b9d6:	mov    rax,QWORD PTR [rbx]
   14000b9d9:	lea    r8,[rsp+0x68]
   14000b9de:	lea    rdx,[rsp+0xe0]
   14000b9e6:	mov    rcx,rbx
   14000b9e9:	call   QWORD PTR [rax+0x70]
   14000b9ec:	test   eax,eax
   14000b9ee:	jns    0x14000ba13
   14000b9f0:	cmp    eax,0xe123058e
   14000b9f5:	je     0x14000ba0e
   14000b9f7:	lea    r9,[r15+0x462]
   14000b9fe:	mov    r8d,eax
   14000ba01:	mov    edx,0xe1230537
   14000ba06:	mov    rcx,rdi
   14000ba09:	call   0x14000a9d0
   14000ba0e:	mov    DWORD PTR [rdi],r12d
   14000ba11:	jmp    0x14000ba74
   14000ba13:	mov    rdi,QWORD PTR [rdi+0x8]
   14000ba17:	lea    rax,[rsp+0x480]
   14000ba1f:	mov    QWORD PTR [rsp+0xd0],rax
   14000ba27:	lea    rcx,[r15+0x462]
   14000ba2e:	mov    QWORD PTR [rsp+0xd8],rcx
   14000ba36:	mov    r9d,DWORD PTR [rsp+0x68]
   14000ba3b:	lea    r8,[rip+0x39efe]        # 0x140045940
   14000ba42:	mov    edx,0x3c
   14000ba47:	lea    rcx,[rsp+0x480]
   14000ba4f:	call   0x140004164
   14000ba54:	lea    r9,[rsp+0xd0]
   14000ba5c:	mov    edx,0x61230d14
   14000ba61:	mov    rax,QWORD PTR [rdi]
   14000ba64:	mov    r8d,0x2
   14000ba6a:	mov    rcx,rdi
   14000ba6d:	call   QWORD PTR [rax]
   14000ba6f:	mov    rdi,QWORD PTR [rsp+0x70]
   14000ba74:	mov    rax,QWORD PTR [rbx]
   14000ba77:	mov    rcx,rbx
   14000ba7a:	call   QWORD PTR [rax+0x10]
   14000ba7d:	mov    eax,DWORD PTR [rsp+0x50]
   14000ba81:	add    eax,r12d
   14000ba84:	mov    ebx,DWORD PTR [rsp+0x58]
   14000ba88:	jmp    0x14000b203
   14000ba8d:	mov    rcx,QWORD PTR [rsp+0x8e0]
   14000ba95:	xor    rcx,rsp
   14000ba98:	call   0x1400265a0
   14000ba9d:	lea    r11,[rsp+0x8f0]
   14000baa5:	mov    rbx,QWORD PTR [r11+0x40]
   14000baa9:	mov    rsi,QWORD PTR [r11+0x48]
   14000baad:	mov    rsp,r11
   14000bab0:	pop    r15
   14000bab2:	pop    r14
   14000bab4:	pop    r13
   14000bab6:	pop    r12
   14000bab8:	pop    rdi
   14000bab9:	ret    
   14000baba:	int3   
   14000babb:	int3   
   14000babc:	rex push rbx
   14000babe:	sub    rsp,0x30
   14000bac2:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000bacb:	mov    rbx,QWORD PTR [rip+0x50f66]        # 0x14005ca38
   14000bad2:	mov    QWORD PTR [rsp+0x50],rbx
   14000bad7:	lea    rax,[rip+0x26]        # 0x14000bb04
   14000bade:	mov    QWORD PTR [rip+0x50f53],rax        # 0x14005ca38
   14000bae5:	call   0x140021730
   14000baea:	mov    DWORD PTR [rsp+0x20],eax
   14000baee:	mov    QWORD PTR [rip+0x50f43],rbx        # 0x14005ca38
   14000baf5:	jmp    0x14000bafb
   14000baf7:	mov    eax,DWORD PTR [rsp+0x20]
   14000bafb:	add    rsp,0x30
   14000baff:	pop    rbx
   14000bb00:	ret    
   14000bb01:	int3   
   14000bb02:	int3   
   14000bb03:	int3   
   14000bb04:	mov    QWORD PTR [rsp+0x8],rbx
   14000bb09:	push   rdi
   14000bb0a:	sub    rsp,0x20
   14000bb0e:	mov    rdi,rdx
   14000bb11:	call   0x140011c6c
   14000bb16:	mov    rbx,rax
   14000bb19:	test   rax,rax
   14000bb1c:	je     0x14000bb4f
   14000bb1e:	mov    rcx,QWORD PTR [rdi+0x18]
   14000bb22:	mov    r10,QWORD PTR [rax]
   14000bb25:	mov    edi,0x1
   14000bb2a:	mov    QWORD PTR [rsp+0x40],rcx
   14000bb2f:	lea    r9,[rsp+0x40]
   14000bb34:	mov    r8d,edi
   14000bb37:	mov    rcx,rax
   14000bb3a:	mov    edx,0xe1230522
   14000bb3f:	call   QWORD PTR [r10+0x8]
   14000bb43:	mov    r8,QWORD PTR [rbx]
   14000bb46:	mov    edx,edi
   14000bb48:	mov    rcx,rbx
   14000bb4b:	call   QWORD PTR [r8+0x10]
   14000bb4f:	and    DWORD PTR [rsp+0x40],0x0
   14000bb54:	lea    rdx,[rip+0x4a605]        # 0x140056160
   14000bb5b:	lea    rcx,[rsp+0x40]
   14000bb60:	call   0x140029fe8
   14000bb65:	int3   
   14000bb66:	int3   
   14000bb67:	int3   
   14000bb68:	mov    QWORD PTR [rsp+0x8],rbx
   14000bb6d:	mov    QWORD PTR [rsp+0x10],rbp
   14000bb72:	mov    QWORD PTR [rsp+0x18],rsi
   14000bb77:	push   rdi
   14000bb78:	sub    rsp,0x20
   14000bb7c:	mov    ebx,ecx
   14000bb7e:	lea    rcx,[rip+0x3a333]        # 0x140045eb8
   14000bb85:	mov    rsi,rdx
   14000bb88:	call   0x140032350
   14000bb8d:	xor    ebp,ebp
   14000bb8f:	test   eax,eax
   14000bb91:	jns    0x14000bb97
   14000bb93:	xor    eax,eax
   14000bb95:	jmp    0x14000bbd8
   14000bb97:	mov    r8d,ebx
   14000bb9a:	xor    edx,edx
   14000bb9c:	mov    ecx,0x410
   14000bba1:	call   QWORD PTR [rip+0x357b1]        # 0x140041358
   14000bba7:	mov    rdi,rax
   14000bbaa:	test   rax,rax
   14000bbad:	je     0x14000bb93
   14000bbaf:	mov    r9d,0x104
   14000bbb5:	mov    r8,rsi
   14000bbb8:	xor    edx,edx
   14000bbba:	mov    rcx,rax
   14000bbbd:	mov    ebx,0x1
   14000bbc2:	call   QWORD PTR [rip+0x35b28]        # 0x1400416f0
   14000bbc8:	mov    rcx,rdi
   14000bbcb:	test   eax,eax
   14000bbcd:	cmove  ebx,ebp
   14000bbd0:	call   QWORD PTR [rip+0x357b2]        # 0x140041388
   14000bbd6:	mov    eax,ebx
   14000bbd8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bbdd:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bbe2:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bbe7:	add    rsp,0x20
   14000bbeb:	pop    rdi
   14000bbec:	ret    
   14000bbed:	int3   
   14000bbee:	int3   
   14000bbef:	int3   
   14000bbf0:	mov    rax,rsp
   14000bbf3:	push   rdi
   14000bbf4:	push   r12
   14000bbf6:	push   r13
   14000bbf8:	push   r14
   14000bbfa:	push   r15
   14000bbfc:	sub    rsp,0xf0
   14000bc03:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   14000bc0b:	mov    QWORD PTR [rax+0x18],rbx
   14000bc0f:	mov    QWORD PTR [rax+0x20],rsi
   14000bc13:	mov    rax,QWORD PTR [rip+0x4d46e]        # 0x140059088
   14000bc1a:	xor    rax,rsp
   14000bc1d:	mov    QWORD PTR [rsp+0xe8],rax
   14000bc25:	mov    r12,rdx
   14000bc28:	mov    QWORD PTR [rsp+0x78],rdx
   14000bc2d:	mov    r15,rcx
   14000bc30:	mov    QWORD PTR [rsp+0x80],rcx
   14000bc38:	xor    edx,edx
   14000bc3a:	xor    ecx,ecx
   14000bc3c:	call   0x140018b6c
   14000bc41:	xor    edi,edi
   14000bc43:	test   eax,eax
   14000bc45:	je     0x14000bc66
   14000bc47:	mov    rcx,QWORD PTR [r15+0x8]
   14000bc4b:	mov    rax,QWORD PTR [rcx]
   14000bc4e:	xor    r9d,r9d
   14000bc51:	xor    r8d,r8d
   14000bc54:	mov    edx,0xe123051a
   14000bc59:	call   QWORD PTR [rax]
   14000bc5b:	lea    esi,[rdi+0x1]
   14000bc5e:	mov    DWORD PTR [r15],esi
   14000bc61:	jmp    0x14000c3d4
   14000bc66:	cmp    DWORD PTR [rip+0x50e60],edi        # 0x14005cacc
   14000bc6c:	jne    0x14000bc80
   14000bc6e:	call   0x140012b10
   14000bc73:	mov    esi,0x1
   14000bc78:	mov    DWORD PTR [rip+0x50e4e],esi        # 0x14005cacc
   14000bc7e:	jmp    0x14000bc85
   14000bc80:	mov    esi,0x1
   14000bc85:	cmp    DWORD PTR [rip+0x50f2d],edi        # 0x14005cbb8
   14000bc8b:	jne    0x14000bca1
   14000bc8d:	mov    rcx,QWORD PTR [r15+0x8]
   14000bc91:	mov    rax,QWORD PTR [rcx]
   14000bc94:	xor    r9d,r9d
   14000bc97:	xor    r8d,r8d
   14000bc9a:	mov    edx,0xa123091f
   14000bc9f:	call   QWORD PTR [rax]
   14000bca1:	mov    rbx,rdi
   14000bca4:	mov    QWORD PTR [rsp+0x30],rbx
   14000bca9:	mov    r14d,edi
   14000bcac:	mov    QWORD PTR [rsp+0x38],rdi
   14000bcb1:	mov    r13d,edi
   14000bcb4:	mov    eax,DWORD PTR [r12+0x8]
   14000bcb9:	test   eax,eax
   14000bcbb:	jle    0x14000c26f
   14000bcc1:	test   r13d,r13d
   14000bcc4:	js     0x14000c25b
   14000bcca:	cmp    r13d,eax
   14000bccd:	jge    0x14000c25b
   14000bcd3:	movsxd rcx,r13d
   14000bcd6:	mov    rax,QWORD PTR [r12]
   14000bcda:	lea    rdx,[rax+rcx*8]
   14000bcde:	lea    rcx,[rsp+0x40]
   14000bce3:	call   0x140006af0
   14000bce8:	nop
   14000bce9:	xor    r9d,r9d
   14000bcec:	mov    r8,QWORD PTR [rsp+0x40]
   14000bcf1:	mov    dl,0x12
   14000bcf3:	call   0x140015618
   14000bcf8:	lea    rdx,[rsp+0xb0]
   14000bd00:	lea    rcx,[rsp+0x40]
   14000bd05:	call   0x140017ed0
   14000bd0a:	mov    edx,eax
   14000bd0c:	test   eax,eax
   14000bd0e:	js     0x14000c13a
   14000bd14:	mov    rax,QWORD PTR [rsp+0xb0]
   14000bd1c:	cmp    rax,QWORD PTR [rip+0x4eae5]        # 0x14005a808
   14000bd23:	jne    0x14000bd66
   14000bd25:	mov    rax,QWORD PTR [rsp+0xb8]
   14000bd2d:	cmp    rax,QWORD PTR [rip+0x4eadc]        # 0x14005a810
   14000bd34:	jne    0x14000bd66
   14000bd36:	cmp    DWORD PTR [rip+0x50d90],edi        # 0x14005cacc
   14000bd3c:	jne    0x14000bd49
   14000bd3e:	call   0x140012b10
   14000bd43:	mov    DWORD PTR [rip+0x50d83],esi        # 0x14005cacc
   14000bd49:	cmp    DWORD PTR [rip+0x50d84],0x6        # 0x14005cad4
   14000bd50:	jae    0x14000bd66
   14000bd52:	mov    rcx,QWORD PTR [r15+0x8]
   14000bd56:	mov    rax,QWORD PTR [rcx]
   14000bd59:	xor    r9d,r9d
   14000bd5c:	xor    r8d,r8d
   14000bd5f:	mov    edx,0xa123092d
   14000bd64:	call   QWORD PTR [rax]
   14000bd66:	cmp    DWORD PTR [rsp+0xc0],edi
   14000bd6d:	je     0x14000be6e
   14000bd73:	cmp    DWORD PTR [rsp+0xc4],edi
   14000bd7a:	jne    0x14000be6e
   14000bd80:	mov    rax,QWORD PTR [rsp+0xb0]
   14000bd88:	cmp    rax,QWORD PTR [rip+0x39a49]        # 0x1400457d8
   14000bd8f:	jne    0x14000bdc6
   14000bd91:	mov    rax,QWORD PTR [rsp+0xb8]
   14000bd99:	cmp    rax,QWORD PTR [rip+0x39a40]        # 0x1400457e0
   14000bda0:	jne    0x14000bdc6
   14000bda2:	mov    rcx,QWORD PTR [r15+0x8]
   14000bda6:	mov    rax,QWORD PTR [rcx]
   14000bda9:	xor    r9d,r9d
   14000bdac:	xor    r8d,r8d
   14000bdaf:	mov    edx,0xa1230926
   14000bdb4:	call   QWORD PTR [rax]
   14000bdb6:	mov    DWORD PTR [rsp+0xc4],0x1fffffff
   14000bdc1:	jmp    0x14000be6e
   14000bdc6:	lea    rcx,[rip+0x4e55b]        # 0x14005a328
   14000bdcd:	mov    rax,QWORD PTR [rip+0x4e554]        # 0x14005a328
   14000bdd4:	call   QWORD PTR [rax+0x18]
   14000bdd7:	add    rax,0x18
   14000bddb:	mov    QWORD PTR [rsp+0x50],rax
   14000bde0:	lea    rdx,[rsp+0x50]
   14000bde5:	lea    rcx,[rsp+0x40]
   14000bdea:	call   0x1400183e4
   14000bdef:	lea    rcx,[rsp+0x50]
   14000bdf4:	test   eax,eax
   14000bdf6:	js     0x14000be1d
   14000bdf8:	lea    r8,[rip+0x3a0c5]        # 0x140045ec4
   14000bdff:	call   0x14000cfa0
   14000be04:	mov    r8d,0x2
   14000be0a:	lea    rdx,[rip+0x3a0b7]        # 0x140045ec8
   14000be11:	lea    rcx,[rsp+0x50]
   14000be16:	call   0x140006cfc
   14000be1b:	jmp    0x14000be29
   14000be1d:	lea    rdx,[rip+0x39eca]        # 0x140045cee
   14000be24:	call   0x14000ce84
   14000be29:	mov    rcx,QWORD PTR [r15+0x8]
   14000be2d:	mov    rbx,QWORD PTR [rsp+0x50]
   14000be32:	mov    QWORD PTR [rsp+0x88],rbx
   14000be3a:	mov    rax,QWORD PTR [rcx]
   14000be3d:	lea    r9,[rsp+0x88]
   14000be45:	mov    r8d,esi
   14000be48:	mov    edx,0xa123091a
   14000be4d:	call   QWORD PTR [rax]
   14000be4f:	nop
   14000be50:	lea    rdx,[rbx-0x18]
   14000be54:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000be59:	jg     0x14000be64
   14000be5b:	mov    rcx,QWORD PTR [rdx]
   14000be5e:	mov    rax,QWORD PTR [rcx]
   14000be61:	call   QWORD PTR [rax+0x8]
   14000be64:	mov    rbx,QWORD PTR [rsp+0x30]
   14000be69:	mov    r14d,DWORD PTR [rsp+0x38]
   14000be6e:	mov    rax,QWORD PTR [rip+0x50e63]        # 0x14005ccd8
   14000be75:	test   rax,rax
   14000be78:	jne    0x14000be9d
   14000be7a:	xor    ecx,ecx
   14000be7c:	call   QWORD PTR [rip+0x358fe]        # 0x140041780
   14000be82:	call   0x140018688
   14000be87:	call   QWORD PTR [rip+0x358fb]        # 0x140041788
   14000be8d:	mov    rax,QWORD PTR [rip+0x50e44]        # 0x14005ccd8
   14000be94:	test   rax,rax
   14000be97:	je     0x14000c019
   14000be9d:	movsxd r14,DWORD PTR [rax+0x8]
   14000bea1:	test   r14d,r14d
   14000bea4:	je     0x14000bfab
   14000beaa:	lea    r12,[r14-0x1]
   14000beae:	lea    edx,[r14-0x1]
   14000beb2:	mov    DWORD PTR [rsp+0x48],edx
   14000beb6:	lea    rcx,[r14+r14*2]
   14000beba:	lea    r8,[rcx*8-0x18]
   14000bec2:	mov    QWORD PTR [rsp+0x60],r8
   14000bec7:	test   r12,r12
   14000beca:	js     0x14000bf97
   14000bed0:	cmp    edx,DWORD PTR [rax+0x8]
   14000bed3:	jge    0x14000bf97
   14000bed9:	mov    rbx,QWORD PTR [rax]
   14000bedc:	add    rbx,r8
   14000bedf:	mov    rdx,rbx
   14000bee2:	lea    rcx,[rsp+0xd0]
   14000beea:	call   0x140006af0
   14000beef:	nop
   14000bef0:	movups xmm0,XMMWORD PTR [rbx+0x8]
   14000bef4:	movdqu XMMWORD PTR [rsp+0xd8],xmm0
   14000befd:	mov    rax,QWORD PTR [rsp+0xb0]
   14000bf05:	cmp    rax,QWORD PTR [rsp+0xd8]
   14000bf0d:	jne    0x14000bf3f
   14000bf0f:	mov    rax,QWORD PTR [rsp+0xb8]
   14000bf17:	cmp    rax,QWORD PTR [rsp+0xe0]
   14000bf1f:	jne    0x14000bf3f
   14000bf21:	lea    rax,[rsp+0xd0]
   14000bf29:	mov    QWORD PTR [rsp+0x60],rax
   14000bf2e:	mov    rdx,QWORD PTR [rsp+0xd0]
   14000bf36:	add    rdx,0xffffffffffffffe8
   14000bf3a:	jmp    0x14000bfff
   14000bf3f:	lea    rax,[rsp+0xd0]
   14000bf47:	mov    QWORD PTR [rsp+0x70],rax
   14000bf4c:	mov    rdx,QWORD PTR [rsp+0xd0]
   14000bf54:	add    rdx,0xffffffffffffffe8
   14000bf58:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000bf5d:	jg     0x14000bf68
   14000bf5f:	mov    rcx,QWORD PTR [rdx]
   14000bf62:	mov    rax,QWORD PTR [rcx]
   14000bf65:	call   QWORD PTR [rax+0x8]
   14000bf68:	or     eax,0xffffffff
   14000bf6b:	mov    edx,DWORD PTR [rsp+0x48]
   14000bf6f:	add    edx,eax
   14000bf71:	mov    DWORD PTR [rsp+0x48],edx
   14000bf75:	mov    r8,QWORD PTR [rsp+0x60]
   14000bf7a:	sub    r8,0x18
   14000bf7e:	mov    QWORD PTR [rsp+0x60],r8
   14000bf83:	sub    r12,rsi
   14000bf86:	add    r14d,eax
   14000bf89:	je     0x14000bfab
   14000bf8b:	mov    rax,QWORD PTR [rip+0x50d46]        # 0x14005ccd8
   14000bf92:	jmp    0x14000bec7
   14000bf97:	xor    r9d,r9d
   14000bf9a:	xor    r8d,r8d
   14000bf9d:	mov    edx,esi
   14000bf9f:	mov    ecx,0xc000008c
   14000bfa4:	call   QWORD PTR [rip+0x353f6]        # 0x1400413a0
   14000bfaa:	int3   
   14000bfab:	lea    rcx,[rip+0x4e376]        # 0x14005a328
   14000bfb2:	mov    rax,QWORD PTR [rip+0x4e36f]        # 0x14005a328
   14000bfb9:	call   QWORD PTR [rax+0x18]
   14000bfbc:	add    rax,0x18
   14000bfc0:	mov    QWORD PTR [rsp+0x68],rax
   14000bfc5:	lea    rdx,[rsp+0x68]
   14000bfca:	lea    rcx,[rsp+0x40]
   14000bfcf:	call   0x1400183e4
   14000bfd4:	mov    rcx,QWORD PTR [r15+0x8]
   14000bfd8:	mov    rbx,QWORD PTR [rsp+0x68]
   14000bfdd:	mov    QWORD PTR [rsp+0xa0],rbx
   14000bfe5:	mov    rax,QWORD PTR [rcx]
   14000bfe8:	lea    r9,[rsp+0xa0]
   14000bff0:	mov    r8d,esi
   14000bff3:	mov    edx,0xa1230928
   14000bff8:	call   QWORD PTR [rax]
   14000bffa:	nop
   14000bffb:	lea    rdx,[rbx-0x18]
   14000bfff:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000c004:	jg     0x14000c00f
   14000c006:	mov    rcx,QWORD PTR [rdx]
   14000c009:	mov    rax,QWORD PTR [rcx]
   14000c00c:	call   QWORD PTR [rax+0x8]
   14000c00f:	mov    r14d,DWORD PTR [rsp+0x38]
   14000c014:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c019:	cmp    r14d,DWORD PTR [rsp+0x3c]
   14000c01e:	jne    0x14000c099
   14000c020:	lea    rax,[rsp+0xb0]
   14000c028:	cmp    rax,rbx
   14000c02b:	jb     0x14000c051
   14000c02d:	movsxd rax,DWORD PTR [rsp+0x3c]
   14000c032:	imul   rax,rax,0x1c
   14000c036:	add    rax,rbx
   14000c039:	lea    rcx,[rsp+0xb0]
   14000c041:	cmp    rcx,rax
   14000c044:	jae    0x14000c051
   14000c046:	mov    ecx,0x80004005
   14000c04b:	call   0x14000400c
   14000c050:	int3   
   14000c051:	cmp    DWORD PTR [rsp+0x3c],edi
   14000c055:	jne    0x14000c05c
   14000c057:	mov    r12d,esi
   14000c05a:	jmp    0x14000c069
   14000c05c:	lea    r12d,[r14+r14*1]
   14000c060:	test   r12d,r12d
   14000c063:	js     0x14000c0fc
   14000c069:	movsxd rdx,r12d
   14000c06c:	cmp    rdx,0x4924924
   14000c073:	ja     0x14000c0fc
   14000c079:	mov    r8d,0x1c
   14000c07f:	mov    rcx,rbx
   14000c082:	call   0x1400275ec
   14000c087:	mov    rbx,rax
   14000c08a:	test   rax,rax
   14000c08d:	je     0x14000c0fc
   14000c08f:	mov    DWORD PTR [rsp+0x3c],r12d
   14000c094:	mov    QWORD PTR [rsp+0x30],rax
   14000c099:	mov    DWORD PTR [rsp+0x48],r14d
   14000c09e:	movsxd rcx,r14d
   14000c0a1:	imul   rcx,rcx,0x1c
   14000c0a5:	add    rcx,rbx
   14000c0a8:	mov    QWORD PTR [rsp+0x70],rcx
   14000c0ad:	je     0x14000c0f4
   14000c0af:	mov    eax,DWORD PTR [rsp+0xb0]
   14000c0b6:	mov    DWORD PTR [rcx],eax
   14000c0b8:	mov    eax,DWORD PTR [rsp+0xb4]
   14000c0bf:	mov    DWORD PTR [rcx+0x4],eax
   14000c0c2:	mov    eax,DWORD PTR [rsp+0xb8]
   14000c0c9:	mov    DWORD PTR [rcx+0x8],eax
   14000c0cc:	mov    eax,DWORD PTR [rsp+0xbc]
   14000c0d3:	mov    DWORD PTR [rcx+0xc],eax
   14000c0d6:	mov    eax,DWORD PTR [rsp+0xc0]
   14000c0dd:	mov    DWORD PTR [rcx+0x10],eax
   14000c0e0:	mov    eax,DWORD PTR [rsp+0xc4]
   14000c0e7:	mov    DWORD PTR [rcx+0x14],eax
   14000c0ea:	mov    eax,DWORD PTR [rsp+0xc8]
   14000c0f1:	mov    DWORD PTR [rcx+0x18],eax
   14000c0f4:	add    r14d,esi
   14000c0f7:	mov    DWORD PTR [rsp+0x38],r14d
   14000c0fc:	mov    rdx,QWORD PTR [rsp+0x40]
   14000c101:	add    rdx,0xffffffffffffffe8
   14000c105:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000c10a:	jg     0x14000c115
   14000c10c:	mov    rcx,QWORD PTR [rdx]
   14000c10f:	mov    rax,QWORD PTR [rcx]
   14000c112:	call   QWORD PTR [rax+0x8]
   14000c115:	add    r13d,esi
   14000c118:	mov    r12,QWORD PTR [rsp+0x78]
   14000c11d:	mov    eax,DWORD PTR [r12+0x8]
   14000c122:	mov    r14d,DWORD PTR [rsp+0x38]
   14000c127:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c12c:	cmp    r13d,eax
   14000c12f:	jl     0x14000bcc1
   14000c135:	jmp    0x14000c26f
   14000c13a:	mov    r14d,0xe123059f
   14000c140:	cmp    eax,r14d
   14000c143:	jne    0x14000c1ad
   14000c145:	lea    rcx,[rip+0x4e1dc]        # 0x14005a328
   14000c14c:	mov    rax,QWORD PTR [rip+0x4e1d5]        # 0x14005a328
   14000c153:	call   QWORD PTR [rax+0x18]
   14000c156:	add    rax,0x18
   14000c15a:	mov    QWORD PTR [rsp+0x58],rax
   14000c15f:	lea    rdx,[rsp+0x58]
   14000c164:	lea    rcx,[rsp+0x40]
   14000c169:	call   0x1400183e4
   14000c16e:	mov    rcx,QWORD PTR [r15+0x8]
   14000c172:	mov    rbx,QWORD PTR [rsp+0x58]
   14000c177:	mov    QWORD PTR [rsp+0x90],rbx
   14000c17f:	mov    rax,QWORD PTR [rcx]
   14000c182:	lea    r9,[rsp+0x90]
   14000c18a:	mov    r8d,esi
   14000c18d:	mov    edx,r14d
   14000c190:	call   QWORD PTR [rax]
   14000c192:	nop
   14000c193:	lea    rdx,[rbx-0x18]
   14000c197:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000c19c:	jg     0x14000c225
   14000c1a2:	mov    rcx,QWORD PTR [rdx]
   14000c1a5:	mov    rax,QWORD PTR [rcx]
   14000c1a8:	call   QWORD PTR [rax+0x8]
   14000c1ab:	jmp    0x14000c225
   14000c1ad:	and    eax,0x1fff0000
   14000c1b2:	cmp    eax,0x1230000
   14000c1b7:	jne    0x14000c1cd
   14000c1b9:	mov    rcx,QWORD PTR [r15+0x8]
   14000c1bd:	mov    rax,QWORD PTR [rcx]
   14000c1c0:	xor    r9d,r9d
   14000c1c3:	xor    r8d,r8d
   14000c1c6:	call   QWORD PTR [rax]
   14000c1c8:	mov    DWORD PTR [r15],esi
   14000c1cb:	jmp    0x14000c225
   14000c1cd:	lea    r8,[rip+0x39cf0]        # 0x140045ec4
   14000c1d4:	lea    rcx,[rsp+0x40]
   14000c1d9:	call   0x14000cfa0
   14000c1de:	mov    r8d,esi
   14000c1e1:	lea    rdx,[rip+0x39cdc]        # 0x140045ec4
   14000c1e8:	lea    rcx,[rsp+0x40]
   14000c1ed:	call   0x140006cfc
   14000c1f2:	cmp    r13d,DWORD PTR [r12+0x8]
   14000c1f7:	jge    0x14000c247
   14000c1f9:	movsxd rdx,r13d
   14000c1fc:	mov    rax,QWORD PTR [r12]
   14000c200:	mov    rdx,QWORD PTR [rax+rdx*8]
   14000c204:	mov    rcx,QWORD PTR [r15+0x8]
   14000c208:	mov    QWORD PTR [rsp+0x98],rdx
   14000c210:	mov    rax,QWORD PTR [rcx]
   14000c213:	lea    r9,[rsp+0x98]
   14000c21b:	mov    r8d,esi
   14000c21e:	mov    edx,0xe1230598
   14000c223:	call   QWORD PTR [rax]
   14000c225:	mov    DWORD PTR [r15],esi
   14000c228:	mov    rdx,QWORD PTR [rsp+0x40]
   14000c22d:	add    rdx,0xffffffffffffffe8
   14000c231:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000c236:	jg     0x14000c242
   14000c238:	mov    rcx,QWORD PTR [rdx]
   14000c23b:	mov    rax,QWORD PTR [rcx]
   14000c23e:	call   QWORD PTR [rax+0x8]
   14000c241:	nop
   14000c242:	jmp    0x14000c3bb
   14000c247:	xor    r9d,r9d
   14000c24a:	xor    r8d,r8d
   14000c24d:	mov    edx,esi
   14000c24f:	mov    ecx,0xc000008c
   14000c254:	call   QWORD PTR [rip+0x35146]        # 0x1400413a0
   14000c25a:	nop
   14000c25b:	xor    r9d,r9d
   14000c25e:	xor    r8d,r8d
   14000c261:	mov    edx,esi
   14000c263:	mov    ecx,0xc000008c
   14000c268:	call   QWORD PTR [rip+0x35132]        # 0x1400413a0
   14000c26e:	int3   
   14000c26f:	mov    ecx,0x1098
   14000c274:	call   0x140026da8
   14000c279:	mov    QWORD PTR [rsp+0x70],rax
   14000c27e:	test   rax,rax
   14000c281:	je     0x14000c290
   14000c283:	mov    rcx,rax
   14000c286:	call   0x14001a94c
   14000c28b:	mov    r12,rax
   14000c28e:	jmp    0x14000c293
   14000c290:	mov    r12,rdi
   14000c293:	mov    QWORD PTR [rsp+0x58],r12
   14000c298:	test   r12,r12
   14000c29b:	jne    0x14000c2c5
   14000c29d:	mov    rcx,QWORD PTR [r15+0x8]
   14000c2a1:	mov    rax,QWORD PTR [rcx]
   14000c2a4:	xor    r9d,r9d
   14000c2a7:	xor    r8d,r8d
   14000c2aa:	mov    edx,0xe1230591
   14000c2af:	call   QWORD PTR [rax]
   14000c2b1:	mov    DWORD PTR [r15],esi
   14000c2b4:	test   rbx,rbx
   14000c2b7:	je     0x14000c3cf
   14000c2bd:	mov    rcx,rbx
   14000c2c0:	jmp    0x14000c3c5
   14000c2c5:	lea    rcx,[r12+0xf08]
   14000c2cd:	xor    r8d,r8d
   14000c2d0:	mov    rdx,QWORD PTR [r15+0x8]
   14000c2d4:	call   0x14001933c
   14000c2d9:	nop
   14000c2da:	mov    rdx,QWORD PTR [r15+0x8]
   14000c2de:	mov    rcx,r12
   14000c2e1:	call   0x14001ad38
   14000c2e6:	test   eax,eax
   14000c2e8:	js     0x14000c3a9
   14000c2ee:	mov    r13d,edi
   14000c2f1:	test   r14d,r14d
   14000c2f4:	jle    0x14000c3a9
   14000c2fa:	test   r13d,r13d
   14000c2fd:	js     0x14000c395
   14000c303:	cmp    r13d,r14d
   14000c306:	jge    0x14000c395
   14000c30c:	movsxd rdx,r13d
   14000c30f:	imul   rdx,rdx,0x1c
   14000c313:	add    rdx,rbx
   14000c316:	mov    rcx,r12
   14000c319:	call   0x14001b744
   14000c31e:	test   eax,eax
   14000c320:	jns    0x14000c387
   14000c322:	mov    DWORD PTR [r15],esi
   14000c325:	mov    ecx,eax
   14000c327:	and    ecx,0x1fff0000
   14000c32d:	cmp    ecx,0x1230000
   14000c333:	jne    0x14000c374
   14000c335:	cmp    eax,0xe123054b
   14000c33a:	je     0x14000c350
   14000c33c:	mov    rcx,QWORD PTR [r15+0x8]
   14000c340:	mov    r10,QWORD PTR [rcx]
   14000c343:	xor    r9d,r9d
   14000c346:	xor    r8d,r8d
   14000c349:	mov    edx,eax
   14000c34b:	call   QWORD PTR [r10]
   14000c34e:	jmp    0x14000c387
   14000c350:	cmp    DWORD PTR [rip+0x506fe],edi        # 0x14005ca54
   14000c356:	jne    0x14000c387
   14000c358:	mov    rcx,QWORD PTR [r15+0x8]
   14000c35c:	mov    rax,QWORD PTR [rcx]
   14000c35f:	xor    r9d,r9d
   14000c362:	xor    r8d,r8d
   14000c365:	mov    edx,0xe123054b
   14000c36a:	call   QWORD PTR [rax]
   14000c36c:	mov    DWORD PTR [rip+0x506e2],esi        # 0x14005ca54
   14000c372:	jmp    0x14000c387
   14000c374:	xor    r9d,r9d
   14000c377:	mov    r8d,eax
   14000c37a:	mov    edx,0xe123054c
   14000c37f:	mov    rcx,r15
   14000c382:	call   0x14000a9d0
   14000c387:	add    r13d,esi
   14000c38a:	cmp    r13d,r14d
   14000c38d:	jl     0x14000c2fa
   14000c393:	jmp    0x14000c3a9
   14000c395:	xor    r9d,r9d
   14000c398:	xor    r8d,r8d
   14000c39b:	mov    edx,esi
   14000c39d:	mov    ecx,0xc000008c
   14000c3a2:	call   QWORD PTR [rip+0x34ff8]        # 0x1400413a0
   14000c3a8:	int3   
   14000c3a9:	mov    rax,QWORD PTR [r12]
   14000c3ad:	mov    edx,esi
   14000c3af:	mov    rcx,r12
   14000c3b2:	call   QWORD PTR [rax]
   14000c3b4:	jmp    0x14000c2b4
   14000c3b9:	xor    edi,edi
   14000c3bb:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c3c0:	test   rcx,rcx
   14000c3c3:	je     0x14000c3cf
   14000c3c5:	call   0x1400273dc
   14000c3ca:	mov    QWORD PTR [rsp+0x30],rdi
   14000c3cf:	mov    QWORD PTR [rsp+0x38],rdi
   14000c3d4:	mov    rcx,QWORD PTR [rsp+0xe8]
   14000c3dc:	xor    rcx,rsp
   14000c3df:	call   0x1400265a0
   14000c3e4:	lea    r11,[rsp+0xf0]
   14000c3ec:	mov    rbx,QWORD PTR [r11+0x40]
   14000c3f0:	mov    rsi,QWORD PTR [r11+0x48]
   14000c3f4:	mov    rsp,r11
   14000c3f7:	pop    r15
   14000c3f9:	pop    r14
   14000c3fb:	pop    r13
   14000c3fd:	pop    r12
   14000c3ff:	pop    rdi
   14000c400:	ret    
   14000c401:	int3   
   14000c402:	int3   
   14000c403:	int3   
   14000c404:	rex push rbp
   14000c406:	push   rbx
   14000c407:	push   rsi
   14000c408:	push   rdi
   14000c409:	push   r14
   14000c40b:	push   r15
   14000c40d:	mov    rbp,rsp
   14000c410:	sub    rsp,0x58
   14000c414:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   14000c41c:	mov    r15,rcx
   14000c41f:	xor    edx,edx
   14000c421:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c425:	call   0x140015eac
   14000c42a:	mov    rdi,rax
   14000c42d:	test   rax,rax
   14000c430:	je     0x14000c63d
   14000c436:	and    QWORD PTR [rbp-0x18],0x0
   14000c43b:	and    DWORD PTR [rbp-0x10],0x0
   14000c43f:	and    DWORD PTR [rbp-0xc],0x0
   14000c443:	and    QWORD PTR [rbp-0x28],0x0
   14000c448:	and    DWORD PTR [rbp-0x20],0x0
   14000c44c:	and    DWORD PTR [rbp-0x1c],0x0
   14000c450:	mov    rax,QWORD PTR [rax]
   14000c453:	mov    rcx,rdi
   14000c456:	call   QWORD PTR [rax]
   14000c458:	mov    r14d,eax
   14000c45b:	xor    esi,esi
   14000c45d:	test   eax,eax
   14000c45f:	jle    0x14000c53d
   14000c465:	mov    r8,QWORD PTR [rdi]
   14000c468:	mov    edx,esi
   14000c46a:	mov    rcx,rdi
   14000c46d:	call   QWORD PTR [r8+0x10]
   14000c471:	mov    rbx,rax
   14000c474:	test   rax,rax
   14000c477:	je     0x14000c532
   14000c47d:	mov    rdx,QWORD PTR [rax]
   14000c480:	lea    rcx,[rbp+0x38]
   14000c484:	call   0x140006b8c
   14000c489:	nop
   14000c48a:	cmp    DWORD PTR [rbx+0x24],0x0
   14000c48e:	je     0x14000c50c
   14000c490:	cmp    DWORD PTR [rbx+0x28],0x0
   14000c494:	jne    0x14000c506
   14000c496:	lea    rdx,[rip+0x39a33]        # 0x140045ed0
   14000c49d:	lea    rcx,[rbp+0x40]
   14000c4a1:	call   0x14000cd2c
   14000c4a6:	nop
   14000c4a7:	lea    r8,[rbp+0x40]
   14000c4ab:	lea    rdx,[rbp+0x38]
   14000c4af:	lea    rcx,[rbp+0x48]
   14000c4b3:	call   0x14000d60c
   14000c4b8:	nop
   14000c4b9:	mov    rdx,rax
   14000c4bc:	lea    rcx,[rbp+0x38]
   14000c4c0:	call   0x14000cdac
   14000c4c5:	nop
   14000c4c6:	mov    rdx,QWORD PTR [rbp+0x48]
   14000c4ca:	add    rdx,0xffffffffffffffe8
   14000c4ce:	or     ebx,0xffffffff
   14000c4d1:	mov    eax,ebx
   14000c4d3:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c4d8:	add    eax,ebx
   14000c4da:	test   eax,eax
   14000c4dc:	jg     0x14000c4e8
   14000c4de:	mov    rcx,QWORD PTR [rdx]
   14000c4e1:	mov    rax,QWORD PTR [rcx]
   14000c4e4:	call   QWORD PTR [rax+0x8]
   14000c4e7:	nop
   14000c4e8:	mov    rdx,QWORD PTR [rbp+0x40]
   14000c4ec:	add    rdx,0xffffffffffffffe8
   14000c4f0:	mov    eax,ebx
   14000c4f2:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c4f7:	add    eax,ebx
   14000c4f9:	test   eax,eax
   14000c4fb:	jg     0x14000c506
   14000c4fd:	mov    rcx,QWORD PTR [rdx]
   14000c500:	mov    rax,QWORD PTR [rcx]
   14000c503:	call   QWORD PTR [rax+0x8]
   14000c506:	lea    rcx,[rbp-0x18]
   14000c50a:	jmp    0x14000c510
   14000c50c:	lea    rcx,[rbp-0x28]
   14000c510:	lea    rdx,[rbp+0x38]
   14000c514:	call   0x140006c28
   14000c519:	nop
   14000c51a:	mov    rdx,QWORD PTR [rbp+0x38]
   14000c51e:	add    rdx,0xffffffffffffffe8
   14000c522:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000c527:	jg     0x14000c532
   14000c529:	mov    rcx,QWORD PTR [rdx]
   14000c52c:	mov    rax,QWORD PTR [rcx]
   14000c52f:	call   QWORD PTR [rax+0x8]
   14000c532:	inc    esi
   14000c534:	cmp    esi,r14d
   14000c537:	jl     0x14000c465
   14000c53d:	movsxd rdi,DWORD PTR [rbp-0x10]
   14000c541:	movsxd rsi,DWORD PTR [rbp-0x20]
   14000c545:	test   edi,edi
   14000c547:	jle    0x14000c5b9
   14000c549:	mov    rcx,QWORD PTR [r15+0x8]
   14000c54d:	mov    rax,QWORD PTR [rcx]
   14000c550:	xor    r9d,r9d
   14000c553:	xor    r8d,r8d
   14000c556:	mov    edx,0x61230d50
   14000c55b:	call   QWORD PTR [rax]
   14000c55d:	xor    r14d,r14d
   14000c560:	xor    ebx,ebx
   14000c562:	test   rdi,rdi
   14000c565:	jle    0x14000c5b9
   14000c567:	test   rbx,rbx
   14000c56a:	js     0x14000c5a3
   14000c56c:	cmp    r14d,DWORD PTR [rbp-0x10]
   14000c570:	jge    0x14000c5a3
   14000c572:	mov    rax,QWORD PTR [rbp-0x18]
   14000c576:	mov    rdx,QWORD PTR [rax+rbx*8]
   14000c57a:	mov    rcx,QWORD PTR [r15+0x8]
   14000c57e:	mov    QWORD PTR [rbp+0x50],rdx
   14000c582:	mov    rax,QWORD PTR [rcx]
   14000c585:	lea    r9,[rbp+0x50]
   14000c589:	mov    edx,0x61230d53
   14000c58e:	mov    r8d,0x1
   14000c594:	call   QWORD PTR [rax]
   14000c596:	inc    r14d
   14000c599:	inc    rbx
   14000c59c:	cmp    rbx,rdi
   14000c59f:	jl     0x14000c567
   14000c5a1:	jmp    0x14000c5b9
   14000c5a3:	xor    r9d,r9d
   14000c5a6:	xor    r8d,r8d
   14000c5a9:	lea    edx,[r9+0x1]
   14000c5ad:	mov    ecx,0xc000008c
   14000c5b2:	call   QWORD PTR [rip+0x34de8]        # 0x1400413a0
   14000c5b8:	int3   
   14000c5b9:	test   esi,esi
   14000c5bb:	jle    0x14000c62a
   14000c5bd:	mov    rcx,QWORD PTR [r15+0x8]
   14000c5c1:	mov    rax,QWORD PTR [rcx]
   14000c5c4:	xor    r9d,r9d
   14000c5c7:	xor    r8d,r8d
   14000c5ca:	mov    edx,0x61230d51
   14000c5cf:	call   QWORD PTR [rax]
   14000c5d1:	xor    edi,edi
   14000c5d3:	xor    ebx,ebx
   14000c5d5:	test   rsi,rsi
   14000c5d8:	jle    0x14000c62a
   14000c5da:	test   rbx,rbx
   14000c5dd:	js     0x14000c614
   14000c5df:	cmp    edi,DWORD PTR [rbp-0x20]
   14000c5e2:	jge    0x14000c614
   14000c5e4:	mov    rax,QWORD PTR [rbp-0x28]
   14000c5e8:	mov    rdx,QWORD PTR [rax+rbx*8]
   14000c5ec:	mov    rcx,QWORD PTR [r15+0x8]
   14000c5f0:	mov    QWORD PTR [rbp-0x38],rdx
   14000c5f4:	mov    rax,QWORD PTR [rcx]
   14000c5f7:	lea    r9,[rbp-0x38]
   14000c5fb:	mov    edx,0x61230d53
   14000c600:	mov    r8d,0x1
   14000c606:	call   QWORD PTR [rax]
   14000c608:	inc    edi
   14000c60a:	inc    rbx
   14000c60d:	cmp    rbx,rsi
   14000c610:	jl     0x14000c5da
   14000c612:	jmp    0x14000c62a
   14000c614:	xor    r9d,r9d
   14000c617:	xor    r8d,r8d
   14000c61a:	lea    edx,[r9+0x1]
   14000c61e:	mov    ecx,0xc000008c
   14000c623:	call   QWORD PTR [rip+0x34d77]        # 0x1400413a0
   14000c629:	nop
   14000c62a:	lea    rcx,[rbp-0x28]
   14000c62e:	call   0x1400072ec
   14000c633:	nop
   14000c634:	lea    rcx,[rbp-0x18]
   14000c638:	call   0x1400072ec
   14000c63d:	add    rsp,0x58
   14000c641:	pop    r15
   14000c643:	pop    r14
   14000c645:	pop    rdi
   14000c646:	pop    rsi
   14000c647:	pop    rbx
   14000c648:	pop    rbp
   14000c649:	ret    
   14000c64a:	int3   
   14000c64b:	int3   
   14000c64c:	rex push rbx
   14000c64e:	mov    eax,0x1050
   14000c653:	call   0x1400311e0
   14000c658:	sub    rsp,rax
   14000c65b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000c664:	mov    rax,QWORD PTR [rip+0x4ca1d]        # 0x140059088
   14000c66b:	xor    rax,rsp
   14000c66e:	mov    QWORD PTR [rsp+0x1040],rax
   14000c676:	mov    rbx,rdx
   14000c679:	mov    QWORD PTR [rsp+0x30],rdx
   14000c67e:	and    DWORD PTR [rsp+0x24],0x0
   14000c683:	lea    rdx,[rip+0x38ea6]        # 0x140045530
   14000c68a:	mov    rcx,rbx
   14000c68d:	call   0x140006b8c
   14000c692:	mov    DWORD PTR [rsp+0x24],0x1
   14000c69a:	mov    DWORD PTR [rsp+0x20],0x400
   14000c6a2:	lea    r9,[rsp+0x20]
   14000c6a7:	lea    r8,[rsp+0x840]
   14000c6af:	mov    edx,0xee
   14000c6b4:	xor    ecx,ecx
   14000c6b6:	call   QWORD PTR [rip+0x350dc]        # 0x140041798
   14000c6bc:	test   eax,eax
   14000c6be:	jne    0x14000c6fd
   14000c6c0:	mov    DWORD PTR [rsp+0x20],0x400
   14000c6c8:	lea    r9,[rsp+0x20]
   14000c6cd:	lea    r8,[rsp+0x40]
   14000c6d2:	lea    edx,[rax+0x6]
   14000c6d5:	xor    ecx,ecx
   14000c6d7:	call   QWORD PTR [rip+0x350bb]        # 0x140041798
   14000c6dd:	test   eax,eax
   14000c6df:	jne    0x14000c6fd
   14000c6e1:	lea    r9,[rsp+0x40]
   14000c6e6:	lea    r8,[rsp+0x840]
   14000c6ee:	lea    rdx,[rip+0x397f3]        # 0x140045ee8
   14000c6f5:	mov    rcx,rbx
   14000c6f8:	call   0x1400071ec
   14000c6fd:	mov    rax,rbx
   14000c700:	mov    rcx,QWORD PTR [rsp+0x1040]
   14000c708:	xor    rcx,rsp
   14000c70b:	call   0x1400265a0
   14000c710:	add    rsp,0x1050
   14000c717:	pop    rbx
   14000c718:	ret    
   14000c719:	int3   
   14000c71a:	int3   
   14000c71b:	int3   
   14000c71c:	mov    rax,rsp
   14000c71f:	push   rbp
   14000c720:	push   rdi
   14000c721:	push   r12
   14000c723:	push   r14
   14000c725:	push   r15
   14000c727:	lea    rbp,[rax-0x258]
   14000c72e:	sub    rsp,0x330
   14000c735:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000c73e:	mov    QWORD PTR [rax+0x8],rbx
   14000c742:	mov    QWORD PTR [rax+0x20],rsi
   14000c746:	mov    rax,QWORD PTR [rip+0x4c93b]        # 0x140059088
   14000c74d:	xor    rax,rsp
   14000c750:	mov    QWORD PTR [rbp+0x220],rax
   14000c757:	mov    rdi,r8
   14000c75a:	mov    rsi,rdx
   14000c75d:	lea    rdx,[rip+0x397a4]        # 0x140045f08
   14000c764:	lea    rcx,[rsp+0x30]
   14000c769:	call   0x14000cd2c
   14000c76e:	nop
   14000c76f:	lea    rcx,[rip+0x4dbb2]        # 0x14005a328
   14000c776:	mov    rax,QWORD PTR [rip+0x4dbab]        # 0x14005a328
   14000c77d:	call   QWORD PTR [rax+0x18]
   14000c780:	add    rax,0x18
   14000c784:	mov    QWORD PTR [rsp+0x20],rax
   14000c789:	lea    rcx,[rip+0x4db98]        # 0x14005a328
   14000c790:	mov    rax,QWORD PTR [rip+0x4db91]        # 0x14005a328
   14000c797:	call   QWORD PTR [rax+0x18]
   14000c79a:	lea    rbx,[rax+0x18]
   14000c79e:	mov    QWORD PTR [rsp+0x28],rbx
   14000c7a3:	xor    ecx,ecx
   14000c7a5:	call   QWORD PTR [rip+0x34bbd]        # 0x140041368
   14000c7ab:	mov    r8d,0x104
   14000c7b1:	lea    rdx,[rbp+0x10]
   14000c7b5:	mov    rcx,rax
   14000c7b8:	call   QWORD PTR [rip+0x34b7a]        # 0x140041338
   14000c7be:	or     r14d,0xffffffff
   14000c7c2:	xor    r15d,r15d
   14000c7c5:	test   eax,eax
   14000c7c7:	je     0x14000c9c4
   14000c7cd:	lea    rdx,[rbp+0x10]
   14000c7d1:	lea    rcx,[rsp+0x40]
   14000c7d6:	call   0x140006b8c
   14000c7db:	nop
   14000c7dc:	mov    rdx,rax
   14000c7df:	lea    rcx,[rsp+0x28]
   14000c7e4:	call   0x14000cdac
   14000c7e9:	nop
   14000c7ea:	mov    rdx,QWORD PTR [rsp+0x40]
   14000c7ef:	add    rdx,0xffffffffffffffe8
   14000c7f3:	mov    eax,r14d
   14000c7f6:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c7fb:	add    eax,r14d
   14000c7fe:	test   eax,eax
   14000c800:	jg     0x14000c80b
   14000c802:	mov    rcx,QWORD PTR [rdx]
   14000c805:	mov    rax,QWORD PTR [rcx]
   14000c808:	call   QWORD PTR [rax+0x8]
   14000c80b:	mov    r12d,0x5c
   14000c811:	mov    edx,r12d
   14000c814:	mov    rbx,QWORD PTR [rsp+0x28]
   14000c819:	mov    rcx,rbx
   14000c81c:	call   0x1400278d4
   14000c821:	test   rax,rax
   14000c824:	je     0x14000c88d
   14000c826:	sub    rax,rbx
   14000c829:	sar    rax,1
   14000c82c:	cmp    eax,r14d
   14000c82f:	je     0x14000c88d
   14000c831:	lea    r8d,[rax+0x1]
   14000c835:	lea    rdx,[rsp+0x38]
   14000c83a:	lea    rcx,[rsp+0x28]
   14000c83f:	call   0x14000d564
   14000c844:	nop
   14000c845:	mov    rdx,rax
   14000c848:	lea    rcx,[rsp+0x20]
   14000c84d:	call   0x14000cdac
   14000c852:	nop
   14000c853:	mov    rdx,QWORD PTR [rsp+0x38]
   14000c858:	add    rdx,0xffffffffffffffe8
   14000c85c:	mov    eax,r14d
   14000c85f:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c864:	add    eax,r14d
   14000c867:	test   eax,eax
   14000c869:	jg     0x14000c874
   14000c86b:	mov    rcx,QWORD PTR [rdx]
   14000c86e:	mov    rax,QWORD PTR [rcx]
   14000c871:	call   QWORD PTR [rax+0x8]
   14000c874:	mov    r8d,r12d
   14000c877:	lea    rdx,[rip+0x396aa]        # 0x140045f28
   14000c87e:	lea    rcx,[rsp+0x20]
   14000c883:	call   0x1400071ec
   14000c888:	mov    rbx,QWORD PTR [rsp+0x28]
   14000c88d:	lea    rdx,[rsp+0x20]
   14000c892:	mov    rcx,rdi
   14000c895:	call   0x14000cdac
   14000c89a:	mov    rdx,QWORD PTR [rsp+0x30]
   14000c89f:	mov    r8d,DWORD PTR [rdx-0x10]
   14000c8a3:	mov    rcx,rdi
   14000c8a6:	call   0x140006cfc
   14000c8ab:	call   QWORD PTR [rip+0x34abf]        # 0x140041370
   14000c8b1:	mov    r9d,0x55
   14000c8b7:	lea    r8,[rsp+0x60]
   14000c8bc:	lea    edx,[r9+0x4]
   14000c8c0:	mov    ecx,eax
   14000c8c2:	call   QWORD PTR [rip+0x34a80]        # 0x140041348
   14000c8c8:	mov    edi,eax
   14000c8ca:	lea    rdx,[rsp+0x20]
   14000c8cf:	mov    rcx,rsi
   14000c8d2:	call   0x14000cdac
   14000c8d7:	test   edi,edi
   14000c8d9:	je     0x14000c9b1
   14000c8df:	movzx  eax,WORD PTR [rip+0x3964e]        # 0x140045f34
   14000c8e6:	cmp    ax,WORD PTR [rsp+0x60]
   14000c8eb:	jne    0x14000c90d
   14000c8ed:	movzx  eax,WORD PTR [rip+0x39642]        # 0x140045f36
   14000c8f4:	cmp    ax,WORD PTR [rsp+0x62]
   14000c8f9:	jne    0x14000c90d
   14000c8fb:	movzx  eax,WORD PTR [rip+0x39636]        # 0x140045f38
   14000c902:	cmp    ax,WORD PTR [rsp+0x64]
   14000c907:	je     0x14000c9b1
   14000c90d:	lea    rdx,[rsp+0x60]
   14000c912:	lea    rcx,[rsp+0x48]
   14000c917:	call   0x140006b8c
   14000c91c:	nop
   14000c91d:	mov    rdx,QWORD PTR [rax]
   14000c920:	mov    r8d,DWORD PTR [rdx-0x10]
   14000c924:	mov    rcx,rsi
   14000c927:	call   0x140006cfc
   14000c92c:	nop
   14000c92d:	mov    rdx,QWORD PTR [rsp+0x48]
   14000c932:	add    rdx,0xffffffffffffffe8
   14000c936:	mov    eax,r14d
   14000c939:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c93e:	add    eax,r14d
   14000c941:	test   eax,eax
   14000c943:	jg     0x14000c94e
   14000c945:	mov    rcx,QWORD PTR [rdx]
   14000c948:	mov    rax,QWORD PTR [rcx]
   14000c94b:	call   QWORD PTR [rax+0x8]
   14000c94e:	mov    rax,QWORD PTR [rsi]
   14000c951:	mov    edi,DWORD PTR [rax-0x10]
   14000c954:	lea    ebx,[rdi+0x1]
   14000c957:	test   ebx,ebx
   14000c959:	jns    0x14000c966
   14000c95b:	mov    ecx,0x80070057
   14000c960:	call   0x14000400c
   14000c965:	int3   
   14000c966:	mov    ecx,0x1
   14000c96b:	sub    ecx,DWORD PTR [rax-0x8]
   14000c96e:	mov    eax,DWORD PTR [rax-0xc]
   14000c971:	sub    eax,ebx
   14000c973:	or     eax,ecx
   14000c975:	jge    0x14000c981
   14000c977:	mov    edx,ebx
   14000c979:	mov    rcx,rsi
   14000c97c:	call   0x140007098
   14000c981:	mov    rcx,QWORD PTR [rsi]
   14000c984:	mov    WORD PTR [rcx+rdi*2],r12w
   14000c989:	mov    rax,QWORD PTR [rsi]
   14000c98c:	cmp    ebx,DWORD PTR [rax-0xc]
   14000c98f:	jg     0x14000c9a6
   14000c991:	mov    DWORD PTR [rax-0x10],ebx
   14000c994:	movsxd rcx,ebx
   14000c997:	mov    rax,QWORD PTR [rsi]
   14000c99a:	mov    WORD PTR [rax+rcx*2],r15w
   14000c99f:	mov    rbx,QWORD PTR [rsp+0x28]
   14000c9a4:	jmp    0x14000c9b1
   14000c9a6:	mov    ecx,0x80070057
   14000c9ab:	call   0x14000400c
   14000c9b0:	int3   
   14000c9b1:	mov    rdx,QWORD PTR [rsp+0x30]
   14000c9b6:	mov    r8d,DWORD PTR [rdx-0x10]
   14000c9ba:	mov    rcx,rsi
   14000c9bd:	call   0x140006cfc
   14000c9c2:	jmp    0x14000c9dd
   14000c9c4:	lea    rdx,[rsp+0x30]
   14000c9c9:	mov    rcx,rdi
   14000c9cc:	call   0x14000cdac
   14000c9d1:	mov    rdx,rax
   14000c9d4:	mov    rcx,rsi
   14000c9d7:	call   0x14000cdac
   14000c9dc:	nop
   14000c9dd:	lea    rdx,[rbx-0x18]
   14000c9e1:	mov    eax,r14d
   14000c9e4:	lock xadd DWORD PTR [rdx+0x10],eax
   14000c9e9:	add    eax,r14d
   14000c9ec:	test   eax,eax
   14000c9ee:	jg     0x14000c9fa
   14000c9f0:	mov    rcx,QWORD PTR [rdx]
   14000c9f3:	mov    rax,QWORD PTR [rcx]
   14000c9f6:	call   QWORD PTR [rax+0x8]
   14000c9f9:	nop
   14000c9fa:	mov    rdx,QWORD PTR [rsp+0x20]
   14000c9ff:	add    rdx,0xffffffffffffffe8
   14000ca03:	mov    eax,r14d
   14000ca06:	lock xadd DWORD PTR [rdx+0x10],eax
   14000ca0b:	add    eax,r14d
   14000ca0e:	test   eax,eax
   14000ca10:	jg     0x14000ca1c
   14000ca12:	mov    rcx,QWORD PTR [rdx]
   14000ca15:	mov    rax,QWORD PTR [rcx]
   14000ca18:	call   QWORD PTR [rax+0x8]
   14000ca1b:	nop
   14000ca1c:	mov    rdx,QWORD PTR [rsp+0x30]
   14000ca21:	add    rdx,0xffffffffffffffe8
   14000ca25:	mov    eax,r14d
   14000ca28:	lock xadd DWORD PTR [rdx+0x10],eax
   14000ca2d:	add    eax,r14d
   14000ca30:	test   eax,eax
   14000ca32:	jg     0x14000ca3d
   14000ca34:	mov    rcx,QWORD PTR [rdx]
   14000ca37:	mov    rax,QWORD PTR [rcx]
   14000ca3a:	call   QWORD PTR [rax+0x8]
   14000ca3d:	mov    rcx,QWORD PTR [rbp+0x220]
   14000ca44:	xor    rcx,rsp
   14000ca47:	call   0x1400265a0
   14000ca4c:	lea    r11,[rsp+0x330]
   14000ca54:	mov    rbx,QWORD PTR [r11+0x30]
   14000ca58:	mov    rsi,QWORD PTR [r11+0x48]
   14000ca5c:	mov    rsp,r11
   14000ca5f:	pop    r15
   14000ca61:	pop    r14
   14000ca63:	pop    r12
   14000ca65:	pop    rdi
   14000ca66:	pop    rbp
   14000ca67:	ret    
   14000ca68:	rex push rbp
   14000ca6a:	push   rdi
   14000ca6b:	push   r14
   14000ca6d:	mov    rbp,rsp
   14000ca70:	sub    rsp,0x50
   14000ca74:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   14000ca7c:	mov    QWORD PTR [rsp+0x70],rbx
   14000ca81:	mov    QWORD PTR [rsp+0x78],rsi
   14000ca86:	mov    r14,rdx
   14000ca89:	mov    rsi,rcx
   14000ca8c:	lea    rcx,[rip+0x4d895]        # 0x14005a328
   14000ca93:	mov    rax,QWORD PTR [rip+0x4d88e]        # 0x14005a328
   14000ca9a:	call   QWORD PTR [rax+0x18]
   14000ca9d:	add    rax,0x18
   14000caa1:	mov    QWORD PTR [rbp-0x18],rax
   14000caa5:	lea    rcx,[rip+0x4d87c]        # 0x14005a328
   14000caac:	mov    rax,QWORD PTR [rip+0x4d875]        # 0x14005a328
   14000cab3:	call   QWORD PTR [rax+0x18]
   14000cab6:	add    rax,0x18
   14000caba:	mov    QWORD PTR [rbp-0x20],rax
   14000cabe:	lea    r8,[rbp-0x20]
   14000cac2:	lea    rdx,[rbp-0x18]
   14000cac6:	call   0x14000c71c
   14000cacb:	and    QWORD PTR [rbp-0x28],0x0
   14000cad0:	lea    r8,[rbp-0x28]
   14000cad4:	xor    edx,edx
   14000cad6:	mov    rbx,QWORD PTR [rbp-0x18]
   14000cada:	mov    rcx,rbx
   14000cadd:	call   QWORD PTR [rip+0x34c45]        # 0x140041728
   14000cae3:	mov    edi,0x1
   14000cae8:	test   eax,eax
   14000caea:	je     0x14000cb73
   14000caf0:	xor    eax,eax
   14000caf2:	mov    rcx,QWORD PTR [rbp-0x20]
   14000caf6:	test   rcx,rcx
   14000caf9:	setne  al
   14000cafc:	test   eax,eax
   14000cafe:	jne    0x14000cb0b
   14000cb00:	mov    ecx,0x80004005
   14000cb05:	call   0x14000400c
   14000cb0a:	int3   
   14000cb0b:	mov    rdx,rcx
   14000cb0e:	sub    rdx,rbx
   14000cb11:	movzx  eax,WORD PTR [rbx]
   14000cb14:	cmp    ax,WORD PTR [rbx+rdx*1]
   14000cb18:	jne    0x14000cb27
   14000cb1a:	add    rbx,0x2
   14000cb1e:	test   ax,ax
   14000cb21:	jne    0x14000cb11
   14000cb23:	xor    eax,eax
   14000cb25:	jmp    0x14000cb2b
   14000cb27:	sbb    eax,eax
   14000cb29:	or     eax,edi
   14000cb2b:	test   eax,eax
   14000cb2d:	je     0x14000cb47
   14000cb2f:	mov    rcx,QWORD PTR [rsi+0x8]
   14000cb33:	mov    rax,QWORD PTR [rcx]
   14000cb36:	xor    r9d,r9d
   14000cb39:	xor    r8d,r8d
   14000cb3c:	mov    edx,0xa1230938
   14000cb41:	call   QWORD PTR [rax]
   14000cb43:	mov    rcx,QWORD PTR [rbp-0x20]
   14000cb47:	lea    r8,[rbp-0x28]
   14000cb4b:	xor    edx,edx
   14000cb4d:	call   QWORD PTR [rip+0x34bd5]        # 0x140041728
   14000cb53:	test   eax,eax
   14000cb55:	je     0x14000cb73
   14000cb57:	mov    rcx,QWORD PTR [rsi+0x8]
   14000cb5b:	mov    rax,QWORD PTR [rcx]
   14000cb5e:	xor    r9d,r9d
   14000cb61:	xor    r8d,r8d
   14000cb64:	mov    edx,0xa1230939
   14000cb69:	call   QWORD PTR [rax]
   14000cb6b:	xor    dil,dil
   14000cb6e:	jmp    0x14000ccd1
   14000cb73:	and    QWORD PTR [rbp+0x38],0x0
   14000cb78:	xor    r8d,r8d
   14000cb7b:	lea    rdx,[rbp+0x38]
   14000cb7f:	lea    rcx,[rip+0x394ba]        # 0x140046040
   14000cb86:	call   QWORD PTR [rip+0x34bcc]        # 0x140041758
   14000cb8c:	test   eax,eax
   14000cb8e:	jne    0x14000ccaa
   14000cb94:	mov    rcx,QWORD PTR [rbp+0x38]
   14000cb98:	mov    rax,QWORD PTR [rcx]
   14000cb9b:	mov    rdx,QWORD PTR [rbp-0x28]
   14000cb9f:	call   QWORD PTR [rax+0x18]
   14000cba2:	test   eax,eax
   14000cba4:	jne    0x14000ccaa
   14000cbaa:	jmp    0x14000cc52
   14000cbaf:	mov    ecx,DWORD PTR [rbp+0x30]
   14000cbb2:	dec    ecx
   14000cbb4:	je     0x14000cc56
   14000cbba:	sub    ecx,0x2
   14000cbbd:	je     0x14000cc07
   14000cbbf:	cmp    ecx,0xc
   14000cbc2:	jne    0x14000cc92
   14000cbc8:	mov    rcx,QWORD PTR [rbp+0x38]
   14000cbcc:	mov    rax,QWORD PTR [rcx]
   14000cbcf:	xor    r8d,r8d
   14000cbd2:	lea    rdx,[rbp-0x30]
   14000cbd6:	call   QWORD PTR [rax+0x70]
   14000cbd9:	mov    rdx,QWORD PTR [rbp-0x30]
   14000cbdd:	lea    rcx,[rip+0x3935c]        # 0x140045f40
   14000cbe4:	call   0x14002f378
   14000cbe9:	test   eax,eax
   14000cbeb:	je     0x14000cc52
   14000cbed:	mov    rdx,QWORD PTR [rbp-0x30]
   14000cbf1:	lea    rcx,[rip+0x39368]        # 0x140045f60
   14000cbf8:	call   0x14002f378
   14000cbfd:	test   eax,eax
   14000cbff:	jne    0x14000cc92
   14000cc05:	jmp    0x14000cc52
   14000cc07:	mov    rcx,QWORD PTR [rbp+0x38]
   14000cc0b:	mov    rax,QWORD PTR [rcx]
   14000cc0e:	xor    r8d,r8d
   14000cc11:	lea    rdx,[rbp-0x30]
   14000cc15:	call   QWORD PTR [rax+0x80]
   14000cc1b:	test   bl,bl
   14000cc1d:	je     0x14000cc92
   14000cc1f:	mov    rdx,QWORD PTR [rbp-0x30]
   14000cc23:	lea    rcx,[rbp-0x10]
   14000cc27:	call   0x140006b8c
   14000cc2c:	nop
   14000cc2d:	lea    rdx,[rbp-0x10]
   14000cc31:	mov    rcx,r14
   14000cc34:	call   0x140006c28
   14000cc39:	nop
   14000cc3a:	mov    rdx,QWORD PTR [rbp-0x10]
   14000cc3e:	add    rdx,0xffffffffffffffe8
   14000cc42:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000cc47:	jg     0x14000cc52
   14000cc49:	mov    rcx,QWORD PTR [rdx]
   14000cc4c:	mov    rax,QWORD PTR [rcx]
   14000cc4f:	call   QWORD PTR [rax+0x8]
   14000cc52:	xor    bl,bl
   14000cc54:	jmp    0x14000cc92
   14000cc56:	mov    rcx,QWORD PTR [rbp+0x38]
   14000cc5a:	mov    rax,QWORD PTR [rcx]
   14000cc5d:	xor    r8d,r8d
   14000cc60:	lea    rdx,[rbp-0x30]
   14000cc64:	call   QWORD PTR [rax+0x70]
   14000cc67:	mov    rdx,QWORD PTR [rbp-0x30]
   14000cc6b:	lea    rcx,[rip+0x392ce]        # 0x140045f40
   14000cc72:	call   0x14002f378
   14000cc77:	test   eax,eax
   14000cc79:	je     0x14000cc8f
   14000cc7b:	mov    rdx,QWORD PTR [rbp-0x30]
   14000cc7f:	lea    rcx,[rip+0x392da]        # 0x140045f60
   14000cc86:	call   0x14002f378
   14000cc8b:	test   eax,eax
   14000cc8d:	jne    0x14000cc92
   14000cc8f:	mov    bl,dil
   14000cc92:	mov    rcx,QWORD PTR [rbp+0x38]
   14000cc96:	mov    rax,QWORD PTR [rcx]
   14000cc99:	lea    rdx,[rbp+0x30]
   14000cc9d:	call   QWORD PTR [rax+0x30]
   14000cca0:	test   eax,eax
   14000cca2:	je     0x14000cbaf
   14000cca8:	jmp    0x14000ccc1
   14000ccaa:	mov    rcx,QWORD PTR [rsi+0x8]
   14000ccae:	mov    rax,QWORD PTR [rcx]
   14000ccb1:	xor    r9d,r9d
   14000ccb4:	xor    r8d,r8d
   14000ccb7:	mov    edx,0xa123093a
   14000ccbc:	call   QWORD PTR [rax]
   14000ccbe:	xor    dil,dil
   14000ccc1:	mov    rcx,QWORD PTR [rbp+0x38]
   14000ccc5:	test   rcx,rcx
   14000ccc8:	je     0x14000ccd1
   14000ccca:	mov    rax,QWORD PTR [rcx]
   14000cccd:	call   QWORD PTR [rax+0x10]
   14000ccd0:	nop
   14000ccd1:	mov    rcx,QWORD PTR [rbp-0x28]
   14000ccd5:	test   rcx,rcx
   14000ccd8:	je     0x14000cce1
   14000ccda:	mov    rax,QWORD PTR [rcx]
   14000ccdd:	call   QWORD PTR [rax+0x10]
   14000cce0:	nop
   14000cce1:	mov    rdx,QWORD PTR [rbp-0x20]
   14000cce5:	add    rdx,0xffffffffffffffe8
   14000cce9:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000ccee:	jg     0x14000ccfa
   14000ccf0:	mov    rcx,QWORD PTR [rdx]
   14000ccf3:	mov    rax,QWORD PTR [rcx]
   14000ccf6:	call   QWORD PTR [rax+0x8]
   14000ccf9:	nop
   14000ccfa:	mov    rdx,QWORD PTR [rbp-0x18]
   14000ccfe:	add    rdx,0xffffffffffffffe8
   14000cd02:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000cd07:	jg     0x14000cd13
   14000cd09:	mov    rcx,QWORD PTR [rdx]
   14000cd0c:	mov    r8,QWORD PTR [rcx]
   14000cd0f:	call   QWORD PTR [r8+0x8]
   14000cd13:	mov    al,dil
   14000cd16:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cd1b:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cd20:	add    rsp,0x50
   14000cd24:	pop    r14
   14000cd26:	pop    rdi
   14000cd27:	pop    rbp
   14000cd28:	ret    
   14000cd29:	int3   
   14000cd2a:	int3   
   14000cd2b:	int3   
   14000cd2c:	mov    QWORD PTR [rsp+0x8],rcx
   14000cd31:	push   rdi
   14000cd32:	sub    rsp,0x30
   14000cd36:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cd3f:	mov    QWORD PTR [rsp+0x48],rbx
   14000cd44:	mov    rdi,rdx
   14000cd47:	mov    rbx,rcx
   14000cd4a:	lea    rcx,[rip+0x4d5d7]        # 0x14005a328
   14000cd51:	mov    rax,QWORD PTR [rip+0x4d5d0]        # 0x14005a328
   14000cd58:	call   QWORD PTR [rax+0x18]
   14000cd5b:	add    rax,0x18
   14000cd5f:	mov    QWORD PTR [rbx],rax
   14000cd62:	test   rdi,rdi
   14000cd65:	je     0x14000cd8f
   14000cd67:	test   rdi,0xffffffffffff0000
   14000cd6e:	jne    0x14000cd8f
   14000cd70:	movzx  edi,di
   14000cd73:	mov    ecx,edi
   14000cd75:	call   0x1400040b8
   14000cd7a:	test   rax,rax
   14000cd7d:	je     0x14000cd9b
   14000cd7f:	mov    r8d,edi
   14000cd82:	mov    rdx,rax
   14000cd85:	mov    rcx,rbx
   14000cd88:	call   0x140006e10
   14000cd8d:	jmp    0x14000cd9b
   14000cd8f:	mov    rdx,rdi
   14000cd92:	mov    rcx,rbx
   14000cd95:	call   0x14000ce84
   14000cd9a:	nop
   14000cd9b:	mov    rax,rbx
   14000cd9e:	mov    rbx,QWORD PTR [rsp+0x48]
   14000cda3:	add    rsp,0x30
   14000cda7:	pop    rdi
   14000cda8:	ret    
   14000cda9:	int3   
   14000cdaa:	int3   
   14000cdab:	int3   
   14000cdac:	mov    QWORD PTR [rsp+0x8],rbx
   14000cdb1:	mov    QWORD PTR [rsp+0x10],rbp
   14000cdb6:	mov    QWORD PTR [rsp+0x18],rsi
   14000cdbb:	push   rdi
   14000cdbc:	sub    rsp,0x20
   14000cdc0:	mov    rdx,QWORD PTR [rdx]
   14000cdc3:	mov    rbx,QWORD PTR [rcx]
   14000cdc6:	mov    rsi,rcx
   14000cdc9:	lea    rdi,[rdx-0x18]
   14000cdcd:	sub    rbx,0x18
   14000cdd1:	cmp    rdi,rbx
   14000cdd4:	je     0x14000ce64
   14000cdda:	cmp    DWORD PTR [rbx+0x10],0x0
   14000cdde:	jl     0x14000ce58
   14000cde0:	mov    rcx,QWORD PTR [rdi]
   14000cde3:	cmp    rcx,QWORD PTR [rbx]
   14000cde6:	jne    0x14000ce58
   14000cde8:	mov    rax,QWORD PTR [rcx]
   14000cdeb:	call   QWORD PTR [rax+0x20]
   14000cdee:	cmp    DWORD PTR [rdi+0x10],0x0
   14000cdf2:	mov    rcx,rax
   14000cdf5:	jl     0x14000ce05
   14000cdf7:	cmp    rax,QWORD PTR [rdi]
   14000cdfa:	jne    0x14000ce05
   14000cdfc:	mov    rbp,rdi
   14000cdff:	lock inc DWORD PTR [rdi+0x10]
   14000ce03:	jmp    0x14000ce3c
   14000ce05:	mov    rax,QWORD PTR [rax]
   14000ce08:	mov    edx,DWORD PTR [rdi+0x8]
   14000ce0b:	mov    r8d,0x2
   14000ce11:	call   QWORD PTR [rax]
   14000ce13:	mov    rbp,rax
   14000ce16:	test   rax,rax
   14000ce19:	je     0x14000ce7c
   14000ce1b:	mov    eax,DWORD PTR [rdi+0x8]
   14000ce1e:	lea    r8,[rdi+0x18]
   14000ce22:	lea    rcx,[rbp+0x18]
   14000ce26:	mov    DWORD PTR [rbp+0x8],eax
   14000ce29:	mov    eax,DWORD PTR [rdi+0x8]
   14000ce2c:	inc    eax
   14000ce2e:	movsxd rdx,eax
   14000ce31:	add    rdx,rdx
   14000ce34:	mov    r9,rdx
   14000ce37:	call   0x140027788
   14000ce3c:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000ce41:	jg     0x14000ce4f
   14000ce43:	mov    rcx,QWORD PTR [rbx]
   14000ce46:	mov    rdx,rbx
   14000ce49:	mov    rax,QWORD PTR [rcx]
   14000ce4c:	call   QWORD PTR [rax+0x8]
   14000ce4f:	lea    rax,[rbp+0x18]
   14000ce53:	mov    QWORD PTR [rsi],rax
   14000ce56:	jmp    0x14000ce64
   14000ce58:	mov    r8d,DWORD PTR [rdx-0x10]
   14000ce5c:	mov    rcx,rsi
   14000ce5f:	call   0x140006f54
   14000ce64:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ce69:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ce6e:	mov    rax,rsi
   14000ce71:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ce76:	add    rsp,0x20
   14000ce7a:	pop    rdi
   14000ce7b:	ret    
   14000ce7c:	call   0x140007088
   14000ce81:	int3   
   14000ce82:	int3   
   14000ce83:	int3   
   14000ce84:	mov    rax,rsp
   14000ce87:	mov    QWORD PTR [rax+0x8],rbx
   14000ce8b:	mov    QWORD PTR [rax+0x10],rbp
   14000ce8f:	mov    QWORD PTR [rax+0x18],rsi
   14000ce93:	mov    QWORD PTR [rax+0x20],rdi
   14000ce97:	push   r14
   14000ce99:	sub    rsp,0x30
   14000ce9d:	xor    r14d,r14d
   14000cea0:	mov    rbp,rdx
   14000cea3:	mov    rbx,rcx
   14000cea6:	mov    esi,0x1
   14000ceab:	test   rdx,rdx
   14000ceae:	je     0x14000ced0
   14000ceb0:	mov    r8,rdx
   14000ceb3:	mov    DWORD PTR [rax-0x10],r14d
   14000ceb7:	lea    ecx,[rsi+0x2]
   14000ceba:	or     r9d,0xffffffff
   14000cebe:	xor    edx,edx
   14000cec0:	mov    QWORD PTR [rax-0x18],r14
   14000cec4:	call   QWORD PTR [rip+0x3445e]        # 0x140041328
   14000ceca:	mov    edi,eax
   14000cecc:	sub    edi,esi
   14000cece:	jmp    0x14000ced3
   14000ced0:	mov    edi,r14d
   14000ced3:	mov    rax,QWORD PTR [rbx]
   14000ced6:	test   edi,edi
   14000ced8:	jle    0x14000cf26
   14000ceda:	sub    esi,DWORD PTR [rax-0x8]
   14000cedd:	mov    eax,DWORD PTR [rax-0xc]
   14000cee0:	sub    eax,edi
   14000cee2:	or     esi,eax
   14000cee4:	jge    0x14000cef0
   14000cee6:	mov    edx,edi
   14000cee8:	mov    rcx,rbx
   14000ceeb:	call   0x140007098
   14000cef0:	mov    rax,QWORD PTR [rbx]
   14000cef3:	xor    edx,edx
   14000cef5:	or     r9d,0xffffffff
   14000cef9:	lea    ecx,[rdx+0x3]
   14000cefc:	mov    r8,rbp
   14000ceff:	mov    DWORD PTR [rsp+0x28],edi
   14000cf03:	mov    QWORD PTR [rsp+0x20],rax
   14000cf08:	call   QWORD PTR [rip+0x3441a]        # 0x140041328
   14000cf0e:	mov    rax,QWORD PTR [rbx]
   14000cf11:	cmp    edi,DWORD PTR [rax-0xc]
   14000cf14:	jg     0x14000cf8a
   14000cf16:	mov    DWORD PTR [rax-0x10],edi
   14000cf19:	mov    rax,QWORD PTR [rbx]
   14000cf1c:	movsxd rcx,edi
   14000cf1f:	mov    WORD PTR [rax+rcx*2],r14w
   14000cf24:	jmp    0x14000cf6c
   14000cf26:	lea    rdx,[rax-0x18]
   14000cf2a:	mov    rdi,QWORD PTR [rdx]
   14000cf2d:	cmp    DWORD PTR [rdx+0x8],r14d
   14000cf31:	je     0x14000cf6c
   14000cf33:	cmp    DWORD PTR [rdx+0x10],r14d
   14000cf37:	jge    0x14000cf4c
   14000cf39:	cmp    DWORD PTR [rax-0xc],r14d
   14000cf3d:	jl     0x14000cf95
   14000cf3f:	mov    DWORD PTR [rax-0x10],r14d
   14000cf43:	mov    rax,QWORD PTR [rbx]
   14000cf46:	mov    WORD PTR [rax],r14w
   14000cf4a:	jmp    0x14000cf6c
   14000cf4c:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000cf51:	jg     0x14000cf5c
   14000cf53:	mov    rcx,QWORD PTR [rdx]
   14000cf56:	mov    rax,QWORD PTR [rcx]
   14000cf59:	call   QWORD PTR [rax+0x8]
   14000cf5c:	mov    rax,QWORD PTR [rdi]
   14000cf5f:	mov    rcx,rdi
   14000cf62:	call   QWORD PTR [rax+0x18]
   14000cf65:	add    rax,0x18
   14000cf69:	mov    QWORD PTR [rbx],rax
   14000cf6c:	mov    rbp,QWORD PTR [rsp+0x48]
   14000cf71:	mov    rsi,QWORD PTR [rsp+0x50]
   14000cf76:	mov    rdi,QWORD PTR [rsp+0x58]
   14000cf7b:	mov    rax,rbx
   14000cf7e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cf83:	add    rsp,0x30
   14000cf87:	pop    r14
   14000cf89:	ret    
   14000cf8a:	mov    ecx,0x80070057
   14000cf8f:	call   0x14000400c
   14000cf94:	int3   
   14000cf95:	mov    ecx,0x80070057
   14000cf9a:	call   0x14000400c
   14000cf9f:	int3   
   14000cfa0:	mov    QWORD PTR [rsp+0x8],rbx
   14000cfa5:	mov    QWORD PTR [rsp+0x10],rbp
   14000cfaa:	mov    QWORD PTR [rsp+0x18],rsi
   14000cfaf:	push   rdi
   14000cfb0:	push   r14
   14000cfb2:	push   r15
   14000cfb4:	sub    rsp,0x20
   14000cfb8:	mov    rax,QWORD PTR [rcx]
   14000cfbb:	xor    r15d,r15d
   14000cfbe:	mov    rbp,r8
   14000cfc1:	mov    ebx,DWORD PTR [rax-0x10]
   14000cfc4:	mov    r14d,r15d
   14000cfc7:	mov    rsi,rcx
   14000cfca:	test   ebx,ebx
   14000cfcc:	cmovs  r14d,ebx
   14000cfd0:	test   r8,r8
   14000cfd3:	je     0x14000cfe5
   14000cfd5:	or     rdi,0xffffffffffffffff
   14000cfd9:	inc    rdi
   14000cfdc:	cmp    WORD PTR [r8+rdi*2],r15w
   14000cfe1:	jne    0x14000cfd9
   14000cfe3:	jmp    0x14000cfe8
   14000cfe5:	mov    edi,r15d
   14000cfe8:	test   edi,edi
   14000cfea:	jle    0x14000d0a1
   14000cff0:	add    ebx,edi
   14000cff2:	js     0x14000d0bc
   14000cff8:	mov    ecx,0x1
   14000cffd:	sub    ecx,DWORD PTR [rax-0x8]
   14000d000:	mov    eax,DWORD PTR [rax-0xc]
   14000d003:	sub    eax,ebx
   14000d005:	or     ecx,eax
   14000d007:	jge    0x14000d013
   14000d009:	mov    edx,ebx
   14000d00b:	mov    rcx,rsi
   14000d00e:	call   0x140007098
   14000d013:	mov    rcx,QWORD PTR [rsi]
   14000d016:	mov    eax,ebx
   14000d018:	sub    eax,edi
   14000d01a:	movsxd rdi,edi
   14000d01d:	sub    eax,r14d
   14000d020:	inc    eax
   14000d022:	movsxd rdx,eax
   14000d025:	movsxd rax,r14d
   14000d028:	lea    r14,[rcx+rax*2]
   14000d02c:	add    rax,rdi
   14000d02f:	add    rdx,rdx
   14000d032:	lea    rcx,[rcx+rax*2]
   14000d036:	mov    r9,rdx
   14000d039:	mov    r8,r14
   14000d03c:	call   0x140026edc
   14000d041:	test   eax,eax
   14000d043:	je     0x14000d05d
   14000d045:	cmp    eax,0xc
   14000d048:	je     0x14000d0dd
   14000d04e:	cmp    eax,0x16
   14000d051:	je     0x14000d0d2
   14000d053:	cmp    eax,0x22
   14000d056:	je     0x14000d0d2
   14000d058:	cmp    eax,0x50
   14000d05b:	jne    0x14000d0c7
   14000d05d:	lea    rdx,[rdi+rdi*1]
   14000d061:	mov    r8,rbp
   14000d064:	mov    rcx,r14
   14000d067:	mov    r9,rdx
   14000d06a:	call   0x140027788
   14000d06f:	test   eax,eax
   14000d071:	je     0x14000d08b
   14000d073:	cmp    eax,0xc
   14000d076:	je     0x14000d0fe
   14000d07c:	cmp    eax,0x16
   14000d07f:	je     0x14000d0f3
   14000d081:	cmp    eax,0x22
   14000d084:	je     0x14000d0f3
   14000d086:	cmp    eax,0x50
   14000d089:	jne    0x14000d0e8
   14000d08b:	mov    rax,QWORD PTR [rsi]
   14000d08e:	cmp    ebx,DWORD PTR [rax-0xc]
   14000d091:	jg     0x14000d109
   14000d093:	mov    DWORD PTR [rax-0x10],ebx
   14000d096:	mov    rax,QWORD PTR [rsi]
   14000d099:	movsxd rcx,ebx
   14000d09c:	mov    WORD PTR [rax+rcx*2],r15w
   14000d0a1:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d0a6:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d0ab:	mov    eax,ebx
   14000d0ad:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d0b2:	add    rsp,0x20
   14000d0b6:	pop    r15
   14000d0b8:	pop    r14
   14000d0ba:	pop    rdi
   14000d0bb:	ret    
   14000d0bc:	mov    ecx,0x80070057
   14000d0c1:	call   0x14000400c
   14000d0c6:	int3   
   14000d0c7:	mov    ecx,0x80004005
   14000d0cc:	call   0x14000400c
   14000d0d1:	int3   
   14000d0d2:	mov    ecx,0x80070057
   14000d0d7:	call   0x14000400c
   14000d0dc:	int3   
   14000d0dd:	mov    ecx,0x8007000e
   14000d0e2:	call   0x14000400c
   14000d0e7:	int3   
   14000d0e8:	mov    ecx,0x80004005
   14000d0ed:	call   0x14000400c
   14000d0f2:	int3   
   14000d0f3:	mov    ecx,0x80070057
   14000d0f8:	call   0x14000400c
   14000d0fd:	int3   
   14000d0fe:	mov    ecx,0x8007000e
   14000d103:	call   0x14000400c
   14000d108:	int3   
   14000d109:	mov    ecx,0x80070057
   14000d10e:	call   0x14000400c
   14000d113:	int3   
   14000d114:	mov    QWORD PTR [rsp+0x18],r8
   14000d119:	mov    QWORD PTR [rsp+0x8],rcx
   14000d11e:	push   rbx
   14000d11f:	push   rbp
   14000d120:	push   rsi
   14000d121:	push   rdi
   14000d122:	push   r12
   14000d124:	push   r13
   14000d126:	push   r14
   14000d128:	push   r15
   14000d12a:	sub    rsp,0x58
   14000d12e:	mov    r13,rdx
   14000d131:	mov    r14,rcx
   14000d134:	or     rdx,0xffffffffffffffff
   14000d138:	xor    ecx,ecx
   14000d13a:	mov    rax,r8
   14000d13d:	test   r13,r13
   14000d140:	je     0x14000d152
   14000d142:	mov    rdi,rdx
   14000d145:	inc    rdi
   14000d148:	cmp    WORD PTR [r13+rdi*2+0x0],cx
   14000d14e:	jne    0x14000d145
   14000d150:	jmp    0x14000d154
   14000d152:	mov    edi,ecx
   14000d154:	test   edi,edi
   14000d156:	jne    0x14000d15f
   14000d158:	xor    eax,eax
   14000d15a:	jmp    0x14000d3d6
   14000d15f:	test   rax,rax
   14000d162:	je     0x14000d173
   14000d164:	mov    rbp,rdx
   14000d167:	inc    rbp
   14000d16a:	cmp    WORD PTR [r8+rbp*2],cx
   14000d16f:	jne    0x14000d167
   14000d171:	jmp    0x14000d175
   14000d173:	mov    ebp,ecx
   14000d175:	mov    rbx,QWORD PTR [r14]
   14000d178:	mov    r12d,ecx
   14000d17b:	movsxd rax,DWORD PTR [rbx-0x10]
   14000d17f:	lea    r15,[rbx+rax*2]
   14000d183:	mov    QWORD PTR [rsp+0xa8],r15
   14000d18b:	cmp    rbx,r15
   14000d18e:	jae    0x14000d3d3
   14000d194:	mov    esi,0x1
   14000d199:	mov    rdx,r13
   14000d19c:	mov    rcx,rbx
   14000d19f:	call   0x140027984
   14000d1a4:	xor    r8d,r8d
   14000d1a7:	test   rax,rax
   14000d1aa:	je     0x14000d1d1
   14000d1ac:	movsxd r14,edi
   14000d1af:	lea    rbx,[rax+r14*2]
   14000d1b3:	mov    rdx,r13
   14000d1b6:	add    r12d,esi
   14000d1b9:	mov    rcx,rbx
   14000d1bc:	call   0x140027984
   14000d1c1:	test   rax,rax
   14000d1c4:	jne    0x14000d1af
   14000d1c6:	mov    r15,QWORD PTR [rsp+0xa8]
   14000d1ce:	xor    r8d,r8d
   14000d1d1:	test   rbx,rbx
   14000d1d4:	je     0x14000d1e6
   14000d1d6:	or     rax,0xffffffffffffffff
   14000d1da:	inc    rax
   14000d1dd:	cmp    WORD PTR [rbx+rax*2],r8w
   14000d1e2:	jne    0x14000d1da
   14000d1e4:	jmp    0x14000d1e9
   14000d1e6:	mov    eax,r8d
   14000d1e9:	inc    eax
   14000d1eb:	movsxd rcx,eax
   14000d1ee:	lea    rbx,[rbx+rcx*2]
   14000d1f2:	cmp    rbx,r15
   14000d1f5:	jb     0x14000d199
   14000d1f7:	mov    r14,QWORD PTR [rsp+0xa0]
   14000d1ff:	test   r12d,r12d
   14000d202:	jle    0x14000d3d3
   14000d208:	mov    rax,QWORD PTR [r14]
   14000d20b:	mov    ebx,ebp
   14000d20d:	movsxd r15,DWORD PTR [rax-0x10]
   14000d211:	sub    ebx,edi
   14000d213:	mov    edx,r15d
   14000d216:	imul   ebx,r12d
   14000d21a:	add    ebx,r15d
   14000d21d:	cmp    ebx,r15d
   14000d220:	cmovg  edx,ebx
   14000d223:	test   edx,edx
   14000d225:	js     0x14000d3e7
   14000d22b:	sub    esi,DWORD PTR [rax-0x8]
   14000d22e:	mov    eax,DWORD PTR [rax-0xc]
   14000d231:	sub    eax,edx
   14000d233:	or     esi,eax
   14000d235:	jge    0x14000d242
   14000d237:	mov    rcx,r14
   14000d23a:	call   0x140007098
   14000d23f:	xor    r8d,r8d
   14000d242:	mov    rcx,QWORD PTR [r14]
   14000d245:	movsxd rdx,ebp
   14000d248:	lea    rax,[rcx+r15*2]
   14000d24c:	mov    QWORD PTR [rsp+0x28],rcx
   14000d251:	mov    rsi,rcx
   14000d254:	mov    QWORD PTR [rsp+0x40],rax
   14000d259:	cmp    rcx,rax
   14000d25c:	mov    QWORD PTR [rsp+0xb8],rdx
   14000d264:	jae    0x14000d3b9
   14000d26a:	mov    rdx,r13
   14000d26d:	mov    rcx,rsi
   14000d270:	call   0x140027984
   14000d275:	mov    r8,rax
   14000d278:	mov    QWORD PTR [rsp+0xa8],rax
   14000d280:	test   rax,rax
   14000d283:	je     0x14000d38b
   14000d289:	mov    rax,QWORD PTR [rsp+0xb8]
   14000d291:	movsxd r10,edi
   14000d294:	lea    r9,[rax+rax*1]
   14000d298:	mov    QWORD PTR [rsp+0x38],r10
   14000d29d:	mov    QWORD PTR [rsp+0x20],r9
   14000d2a2:	lea    rsi,[r9+r8*1]
   14000d2a6:	mov    rax,r8
   14000d2a9:	mov    ecx,r15d
   14000d2ac:	sub    rax,QWORD PTR [rsp+0x28]
   14000d2b1:	lea    r8,[r8+r10*2]
   14000d2b5:	sar    rax,1
   14000d2b8:	sub    ecx,eax
   14000d2ba:	sub    ecx,edi
   14000d2bc:	movsxd rax,ecx
   14000d2bf:	mov    rcx,rsi
   14000d2c2:	lea    rdx,[rax+rax*1]
   14000d2c6:	mov    QWORD PTR [rsp+0x30],rax
   14000d2cb:	mov    r9,rdx
   14000d2ce:	call   0x140026edc
   14000d2d3:	test   eax,eax
   14000d2d5:	je     0x14000d2fb
   14000d2d7:	cmp    eax,0xc
   14000d2da:	je     0x14000d408
   14000d2e0:	cmp    eax,0x16
   14000d2e3:	je     0x14000d3fd
   14000d2e9:	cmp    eax,0x22
   14000d2ec:	je     0x14000d3fd
   14000d2f2:	cmp    eax,0x50
   14000d2f5:	jne    0x14000d3f2
   14000d2fb:	mov    rdx,QWORD PTR [rsp+0x20]
   14000d300:	mov    r8,QWORD PTR [rsp+0xb0]
   14000d308:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000d310:	mov    r9,rdx
   14000d313:	call   0x140027788
   14000d318:	xor    edx,edx
   14000d31a:	test   eax,eax
   14000d31c:	je     0x14000d342
   14000d31e:	cmp    eax,0xc
   14000d321:	je     0x14000d429
   14000d327:	cmp    eax,0x16
   14000d32a:	je     0x14000d41e
   14000d330:	cmp    eax,0x22
   14000d333:	je     0x14000d41e
   14000d339:	cmp    eax,0x50
   14000d33c:	jne    0x14000d413
   14000d342:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000d34a:	mov    rax,QWORD PTR [rsp+0x30]
   14000d34f:	add    rax,QWORD PTR [rsp+0xb8]
   14000d357:	mov    WORD PTR [rcx+rax*2],dx
   14000d35b:	mov    eax,ebp
   14000d35d:	mov    rdx,r13
   14000d360:	sub    eax,edi
   14000d362:	mov    rcx,rsi
   14000d365:	add    r15d,eax
   14000d368:	call   0x140027984
   14000d36d:	mov    r9,QWORD PTR [rsp+0x20]
   14000d372:	mov    r10,QWORD PTR [rsp+0x38]
   14000d377:	mov    r8,rax
   14000d37a:	mov    QWORD PTR [rsp+0xa8],rax
   14000d382:	test   rax,rax
   14000d385:	jne    0x14000d2a2
   14000d38b:	xor    r8d,r8d
   14000d38e:	test   rsi,rsi
   14000d391:	je     0x14000d3a3
   14000d393:	or     rax,0xffffffffffffffff
   14000d397:	inc    rax
   14000d39a:	cmp    WORD PTR [rsi+rax*2],r8w
   14000d39f:	jne    0x14000d397
   14000d3a1:	jmp    0x14000d3a6
   14000d3a3:	mov    eax,r8d
   14000d3a6:	inc    eax
   14000d3a8:	movsxd rcx,eax
   14000d3ab:	lea    rsi,[rsi+rcx*2]
   14000d3af:	cmp    rsi,QWORD PTR [rsp+0x40]
   14000d3b4:	jmp    0x14000d264
   14000d3b9:	test   ebx,ebx
   14000d3bb:	js     0x14000d434
   14000d3bd:	mov    rax,QWORD PTR [r14]
   14000d3c0:	cmp    ebx,DWORD PTR [rax-0xc]
   14000d3c3:	jg     0x14000d434
   14000d3c5:	mov    DWORD PTR [rax-0x10],ebx
   14000d3c8:	mov    rax,QWORD PTR [r14]
   14000d3cb:	movsxd rcx,ebx
   14000d3ce:	mov    WORD PTR [rax+rcx*2],r8w
   14000d3d3:	mov    eax,r12d
   14000d3d6:	add    rsp,0x58
   14000d3da:	pop    r15
   14000d3dc:	pop    r14
   14000d3de:	pop    r13
   14000d3e0:	pop    r12
   14000d3e2:	pop    rdi
   14000d3e3:	pop    rsi
   14000d3e4:	pop    rbp
   14000d3e5:	pop    rbx
   14000d3e6:	ret    
   14000d3e7:	mov    ecx,0x80070057
   14000d3ec:	call   0x14000400c
   14000d3f1:	int3   
   14000d3f2:	mov    ecx,0x80004005
   14000d3f7:	call   0x14000400c
   14000d3fc:	int3   
   14000d3fd:	mov    ecx,0x80070057
   14000d402:	call   0x14000400c
   14000d407:	int3   
   14000d408:	mov    ecx,0x8007000e
   14000d40d:	call   0x14000400c
   14000d412:	int3   
   14000d413:	mov    ecx,0x80004005
   14000d418:	call   0x14000400c
   14000d41d:	int3   
   14000d41e:	mov    ecx,0x80070057
   14000d423:	call   0x14000400c
   14000d428:	int3   
   14000d429:	mov    ecx,0x8007000e
   14000d42e:	call   0x14000400c
   14000d433:	int3   
   14000d434:	mov    ecx,0x80070057
   14000d439:	call   0x14000400c
   14000d43e:	int3   
   14000d43f:	int3   
   14000d440:	mov    rax,rsp
   14000d443:	mov    QWORD PTR [rax+0x10],rdx
   14000d447:	push   rdi
   14000d448:	push   r14
   14000d44a:	push   r15
   14000d44c:	sub    rsp,0x30
   14000d450:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   14000d458:	mov    QWORD PTR [rax+0x8],rbx
   14000d45c:	mov    QWORD PTR [rax+0x18],rbp
   14000d460:	mov    QWORD PTR [rax+0x20],rsi
   14000d464:	mov    rdi,r9
   14000d467:	mov    rbx,rdx
   14000d46a:	mov    rsi,rcx
   14000d46d:	and    DWORD PTR [rax-0x28],0x0
   14000d471:	cmp    DWORD PTR [r9],0x0
   14000d475:	jge    0x14000d482
   14000d477:	mov    ecx,0x80070057
   14000d47c:	call   0x14000400c
   14000d481:	int3   
   14000d482:	mov    rcx,QWORD PTR [rcx]
   14000d485:	movsxd rax,DWORD PTR [r9]
   14000d488:	lea    r14,[rcx+rax*2]
   14000d48c:	movsxd rax,DWORD PTR [rcx-0x10]
   14000d490:	lea    rbp,[rcx+rax*2]
   14000d494:	cmp    r14,rbp
   14000d497:	jae    0x14000d4e1
   14000d499:	lea    rdx,[rip+0x38a44]        # 0x140045ee4
   14000d4a0:	mov    rcx,r14
   14000d4a3:	call   0x140027d68
   14000d4a8:	mov    r15,rax
   14000d4ab:	movsxd rcx,eax
   14000d4ae:	lea    rcx,[r14+rcx*2]
   14000d4b2:	cmp    rcx,rbp
   14000d4b5:	jae    0x14000d4e1
   14000d4b7:	lea    rdx,[rip+0x38a26]        # 0x140045ee4
   14000d4be:	call   0x140027dbc
   14000d4c3:	mov    r8d,DWORD PTR [rdi]
   14000d4c6:	add    r8d,r15d
   14000d4c9:	lea    ecx,[rax+0x1]
   14000d4cc:	add    ecx,r8d
   14000d4cf:	mov    DWORD PTR [rdi],ecx
   14000d4d1:	mov    r9d,eax
   14000d4d4:	mov    rdx,rbx
   14000d4d7:	mov    rcx,rsi
   14000d4da:	call   0x14000d95c
   14000d4df:	jmp    0x14000d53d
   14000d4e1:	or     DWORD PTR [rdi],0xffffffff
   14000d4e4:	mov    rax,QWORD PTR [rsi]
   14000d4e7:	mov    rcx,QWORD PTR [rax-0x18]
   14000d4eb:	test   rcx,rcx
   14000d4ee:	je     0x14000d4fb
   14000d4f0:	mov    rax,QWORD PTR [rcx]
   14000d4f3:	call   QWORD PTR [rax+0x20]
   14000d4f6:	mov    rdx,rax
   14000d4f9:	jmp    0x14000d4fd
   14000d4fb:	xor    edx,edx
   14000d4fd:	test   rdx,rdx
   14000d500:	jne    0x14000d516
   14000d502:	lea    rcx,[rip+0x4ce1f]        # 0x14005a328
   14000d509:	mov    rax,QWORD PTR [rip+0x4ce18]        # 0x14005a328
   14000d510:	call   QWORD PTR [rax+0x20]
   14000d513:	mov    rdx,rax
   14000d516:	xor    ecx,ecx
   14000d518:	test   rdx,rdx
   14000d51b:	setne  cl
   14000d51e:	test   ecx,ecx
   14000d520:	jne    0x14000d52d
   14000d522:	mov    ecx,0x80004005
   14000d527:	call   0x14000400c
   14000d52c:	int3   
   14000d52d:	mov    rax,QWORD PTR [rdx]
   14000d530:	mov    rcx,rdx
   14000d533:	call   QWORD PTR [rax+0x18]
   14000d536:	add    rax,0x18
   14000d53a:	mov    QWORD PTR [rbx],rax
   14000d53d:	mov    DWORD PTR [rsp+0x20],0x1
   14000d545:	mov    rax,rbx
   14000d548:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d54d:	mov    rbp,QWORD PTR [rsp+0x60]
   14000d552:	mov    rsi,QWORD PTR [rsp+0x68]
   14000d557:	add    rsp,0x30
   14000d55b:	pop    r15
   14000d55d:	pop    r14
   14000d55f:	pop    rdi
   14000d560:	ret    
   14000d561:	int3   
   14000d562:	int3   
   14000d563:	int3   
   14000d564:	mov    rax,rsp
   14000d567:	mov    QWORD PTR [rax+0x10],rdx
   14000d56b:	push   rdi
   14000d56c:	sub    rsp,0x30
   14000d570:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   14000d578:	mov    QWORD PTR [rax+0x8],rbx
   14000d57c:	mov    QWORD PTR [rax+0x18],rbp
   14000d580:	mov    QWORD PTR [rax+0x20],rsi
   14000d584:	mov    edi,r8d
   14000d587:	mov    rbx,rdx
   14000d58a:	mov    rsi,rcx
   14000d58d:	xor    ebp,ebp
   14000d58f:	mov    DWORD PTR [rax-0x18],ebp
   14000d592:	test   r8d,r8d
   14000d595:	cmovs  edi,ebp
   14000d598:	mov    rcx,QWORD PTR [rcx]
   14000d59b:	cmp    edi,DWORD PTR [rcx-0x10]
   14000d59e:	jl     0x14000d5ad
   14000d5a0:	mov    rdx,rsi
   14000d5a3:	mov    rcx,rbx
   14000d5a6:	call   0x140006af0
   14000d5ab:	jmp    0x14000d5e9
   14000d5ad:	mov    rcx,QWORD PTR [rcx-0x18]
   14000d5b1:	test   rcx,rcx
   14000d5b4:	je     0x14000d5be
   14000d5b6:	mov    rax,QWORD PTR [rcx]
   14000d5b9:	call   QWORD PTR [rax+0x20]
   14000d5bc:	jmp    0x14000d5c1
   14000d5be:	mov    rax,rbp
   14000d5c1:	test   rax,rax
   14000d5c4:	jne    0x14000d5d7
   14000d5c6:	lea    rcx,[rip+0x4cd5b]        # 0x14005a328
   14000d5cd:	mov    rax,QWORD PTR [rip+0x4cd54]        # 0x14005a328
   14000d5d4:	call   QWORD PTR [rax+0x20]
   14000d5d7:	mov    r9,rax
   14000d5da:	mov    r8d,edi
   14000d5dd:	mov    rdx,QWORD PTR [rsi]
   14000d5e0:	mov    rcx,rbx
   14000d5e3:	call   0x14000db0c
   14000d5e8:	nop
   14000d5e9:	mov    DWORD PTR [rsp+0x20],0x1
   14000d5f1:	mov    rax,rbx
   14000d5f4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d5f9:	mov    rbp,QWORD PTR [rsp+0x50]
   14000d5fe:	mov    rsi,QWORD PTR [rsp+0x58]
   14000d603:	add    rsp,0x30
   14000d607:	pop    rdi
   14000d608:	ret    
   14000d609:	int3   
   14000d60a:	int3   
   14000d60b:	int3   
   14000d60c:	mov    rax,rsp
   14000d60f:	mov    QWORD PTR [rax+0x8],rcx
   14000d613:	push   rdi
   14000d614:	sub    rsp,0x40
   14000d618:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   14000d620:	mov    QWORD PTR [rax+0x10],rbx
   14000d624:	mov    QWORD PTR [rax+0x18],rsi
   14000d628:	mov    rsi,r8
   14000d62b:	mov    rdi,rdx
   14000d62e:	mov    rbx,rcx
   14000d631:	and    DWORD PTR [rax-0x18],0x0
   14000d635:	mov    rax,QWORD PTR [rdx]
   14000d638:	mov    rcx,QWORD PTR [rax-0x18]
   14000d63c:	test   rcx,rcx
   14000d63f:	je     0x14000d64c
   14000d641:	mov    rax,QWORD PTR [rcx]
   14000d644:	call   QWORD PTR [rax+0x20]
   14000d647:	mov    rdx,rax
   14000d64a:	jmp    0x14000d64e
   14000d64c:	xor    edx,edx
   14000d64e:	test   rdx,rdx
   14000d651:	jne    0x14000d667
   14000d653:	lea    rcx,[rip+0x4ccce]        # 0x14005a328
   14000d65a:	mov    rax,QWORD PTR [rip+0x4ccc7]        # 0x14005a328
   14000d661:	call   QWORD PTR [rax+0x20]
   14000d664:	mov    rdx,rax
   14000d667:	xor    ecx,ecx
   14000d669:	test   rdx,rdx
   14000d66c:	setne  cl
   14000d66f:	test   ecx,ecx
   14000d671:	jne    0x14000d67e
   14000d673:	mov    ecx,0x80004005
   14000d678:	call   0x14000400c
   14000d67d:	int3   
   14000d67e:	mov    rax,QWORD PTR [rdx]
   14000d681:	mov    rcx,rdx
   14000d684:	call   QWORD PTR [rax+0x18]
   14000d687:	add    rax,0x18
   14000d68b:	mov    QWORD PTR [rbx],rax
   14000d68e:	mov    DWORD PTR [rsp+0x30],0x1
   14000d696:	mov    r9,QWORD PTR [rsi]
   14000d699:	mov    rdx,QWORD PTR [rdi]
   14000d69c:	mov    eax,DWORD PTR [r9-0x10]
   14000d6a0:	mov    DWORD PTR [rsp+0x20],eax
   14000d6a4:	mov    r8d,DWORD PTR [rdx-0x10]
   14000d6a8:	mov    rcx,rbx
   14000d6ab:	call   0x14000da40
   14000d6b0:	mov    rax,rbx
   14000d6b3:	mov    rbx,QWORD PTR [rsp+0x58]
   14000d6b8:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d6bd:	add    rsp,0x40
   14000d6c1:	pop    rdi
   14000d6c2:	ret    
   14000d6c3:	int3   
   14000d6c4:	mov    rax,rsp
   14000d6c7:	mov    BYTE PTR [rax+0x10],dl
   14000d6ca:	mov    QWORD PTR [rax+0x8],rcx
   14000d6ce:	push   rdi
   14000d6cf:	sub    rsp,0x40
   14000d6d3:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   14000d6db:	mov    QWORD PTR [rax+0x18],rbx
   14000d6df:	mov    rdi,r8
   14000d6e2:	mov    rbx,rcx
   14000d6e5:	and    DWORD PTR [rax-0x18],0x0
   14000d6e9:	mov    rax,QWORD PTR [r8]
   14000d6ec:	mov    rcx,QWORD PTR [rax-0x18]
   14000d6f0:	test   rcx,rcx
   14000d6f3:	je     0x14000d700
   14000d6f5:	mov    rax,QWORD PTR [rcx]
   14000d6f8:	call   QWORD PTR [rax+0x20]
   14000d6fb:	mov    rdx,rax
   14000d6fe:	jmp    0x14000d702
   14000d700:	xor    edx,edx
   14000d702:	test   rdx,rdx
   14000d705:	jne    0x14000d71b
   14000d707:	lea    rcx,[rip+0x4cc1a]        # 0x14005a328
   14000d70e:	mov    rax,QWORD PTR [rip+0x4cc13]        # 0x14005a328
   14000d715:	call   QWORD PTR [rax+0x20]
   14000d718:	mov    rdx,rax
   14000d71b:	xor    ecx,ecx
   14000d71d:	test   rdx,rdx
   14000d720:	setne  cl
   14000d723:	test   ecx,ecx
   14000d725:	jne    0x14000d732
   14000d727:	mov    ecx,0x80004005
   14000d72c:	call   0x14000400c
   14000d731:	int3   
   14000d732:	mov    rax,QWORD PTR [rdx]
   14000d735:	mov    rcx,rdx
   14000d738:	call   QWORD PTR [rax+0x18]
   14000d73b:	add    rax,0x18
   14000d73f:	mov    QWORD PTR [rbx],rax
   14000d742:	mov    r8d,0x1
   14000d748:	mov    DWORD PTR [rsp+0x30],r8d
   14000d74d:	lea    eax,[r8+0x20]
   14000d751:	mov    WORD PTR [rsp+0x58],ax
   14000d756:	mov    r9,QWORD PTR [rdi]
   14000d759:	mov    eax,DWORD PTR [r9-0x10]
   14000d75d:	mov    DWORD PTR [rsp+0x20],eax
   14000d761:	lea    rdx,[rsp+0x58]
   14000d766:	mov    rcx,rbx
   14000d769:	call   0x14000da40
   14000d76e:	mov    rax,rbx
   14000d771:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d776:	add    rsp,0x40
   14000d77a:	pop    rdi
   14000d77b:	ret    
   14000d77c:	int3   
   14000d77d:	int3   
   14000d77e:	int3   
   14000d77f:	int3   
   14000d780:	mov    QWORD PTR [rsp+0x8],rbx
   14000d785:	mov    QWORD PTR [rsp+0x10],rsi
   14000d78a:	push   rdi
   14000d78b:	sub    rsp,0x20
   14000d78f:	and    QWORD PTR [rcx],0x0
   14000d793:	and    DWORD PTR [rcx+0x8],0x0
   14000d797:	and    DWORD PTR [rcx+0xc],0x0
   14000d79b:	cmp    DWORD PTR [rdx+0x8],0x0
   14000d79f:	mov    rsi,rdx
   14000d7a2:	mov    rbx,rcx
   14000d7a5:	je     0x14000d7ef
   14000d7a7:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000d7ab:	mov    edx,0x8
   14000d7b0:	call   0x140027890
   14000d7b5:	mov    QWORD PTR [rbx],rax
   14000d7b8:	test   rax,rax
   14000d7bb:	je     0x14000d7ef
   14000d7bd:	mov    eax,DWORD PTR [rsi+0x8]
   14000d7c0:	xor    edi,edi
   14000d7c2:	mov    DWORD PTR [rbx+0xc],eax
   14000d7c5:	mov    eax,DWORD PTR [rsi+0x8]
   14000d7c8:	test   eax,eax
   14000d7ca:	jle    0x14000d7ef
   14000d7cc:	test   edi,edi
   14000d7ce:	js     0x14000d802
   14000d7d0:	cmp    edi,eax
   14000d7d2:	jge    0x14000d802
   14000d7d4:	mov    rax,QWORD PTR [rsi]
   14000d7d7:	movsxd rcx,edi
   14000d7da:	lea    rdx,[rax+rcx*8]
   14000d7de:	mov    rcx,rbx
   14000d7e1:	call   0x140006c28
   14000d7e6:	mov    eax,DWORD PTR [rsi+0x8]
   14000d7e9:	inc    edi
   14000d7eb:	cmp    edi,eax
   14000d7ed:	jl     0x14000d7cc
   14000d7ef:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d7f4:	mov    rax,rbx
   14000d7f7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d7fc:	add    rsp,0x20
   14000d800:	pop    rdi
   14000d801:	ret    
   14000d802:	xor    r9d,r9d
   14000d805:	xor    r8d,r8d
   14000d808:	mov    ecx,0xc000008c
   14000d80d:	lea    edx,[r9+0x1]
   14000d811:	call   QWORD PTR [rip+0x33b89]        # 0x1400413a0
   14000d817:	int3   
   14000d818:	sub    rsp,0x28
   14000d81c:	mov    rcx,QWORD PTR [rcx]
   14000d81f:	test   rcx,rcx
   14000d822:	je     0x14000d82a
   14000d824:	mov    rax,QWORD PTR [rcx]
   14000d827:	call   QWORD PTR [rax+0x10]
   14000d82a:	add    rsp,0x28
   14000d82e:	ret    
   14000d82f:	int3   
   14000d830:	mov    rax,rsp
   14000d833:	mov    QWORD PTR [rax+0x8],rbx
   14000d837:	mov    QWORD PTR [rax+0x10],rbp
   14000d83b:	mov    QWORD PTR [rax+0x18],rsi
   14000d83f:	mov    QWORD PTR [rax+0x20],rdi
   14000d843:	push   r14
   14000d845:	sub    rsp,0x40
   14000d849:	xor    r14d,r14d
   14000d84c:	mov    rbp,rdx
   14000d84f:	mov    rbx,rcx
   14000d852:	mov    esi,0x1
   14000d857:	test   rdx,rdx
   14000d85a:	je     0x14000d884
   14000d85c:	mov    QWORD PTR [rax-0x10],r14
   14000d860:	mov    QWORD PTR [rax-0x18],r14
   14000d864:	mov    r8,rdx
   14000d867:	mov    DWORD PTR [rax-0x20],r14d
   14000d86b:	lea    ecx,[rsi+0x2]
   14000d86e:	or     r9d,0xffffffff
   14000d872:	xor    edx,edx
   14000d874:	mov    QWORD PTR [rax-0x28],r14
   14000d878:	call   QWORD PTR [rip+0x33ad2]        # 0x140041350
   14000d87e:	mov    edi,eax
   14000d880:	sub    edi,esi
   14000d882:	jmp    0x14000d887
   14000d884:	mov    edi,r14d
   14000d887:	mov    rax,QWORD PTR [rbx]
   14000d88a:	test   edi,edi
   14000d88c:	jle    0x14000d8e3
   14000d88e:	sub    esi,DWORD PTR [rax-0x8]
   14000d891:	mov    eax,DWORD PTR [rax-0xc]
   14000d894:	sub    eax,edi
   14000d896:	or     esi,eax
   14000d898:	jge    0x14000d8a4
   14000d89a:	mov    edx,edi
   14000d89c:	mov    rcx,rbx
   14000d89f:	call   0x14000dce4
   14000d8a4:	mov    rax,QWORD PTR [rbx]
   14000d8a7:	mov    QWORD PTR [rsp+0x38],r14
   14000d8ac:	xor    edx,edx
   14000d8ae:	mov    QWORD PTR [rsp+0x30],r14
   14000d8b3:	lea    ecx,[rdx+0x3]
   14000d8b6:	or     r9d,0xffffffff
   14000d8ba:	mov    r8,rbp
   14000d8bd:	mov    DWORD PTR [rsp+0x28],edi
   14000d8c1:	mov    QWORD PTR [rsp+0x20],rax
   14000d8c6:	call   QWORD PTR [rip+0x33a84]        # 0x140041350
   14000d8cc:	mov    rax,QWORD PTR [rbx]
   14000d8cf:	cmp    edi,DWORD PTR [rax-0xc]
   14000d8d2:	jg     0x14000d946
   14000d8d4:	mov    DWORD PTR [rax-0x10],edi
   14000d8d7:	mov    rax,QWORD PTR [rbx]
   14000d8da:	movsxd rcx,edi
   14000d8dd:	mov    BYTE PTR [rcx+rax*1],r14b
   14000d8e1:	jmp    0x14000d928
   14000d8e3:	lea    rdx,[rax-0x18]
   14000d8e7:	mov    rdi,QWORD PTR [rdx]
   14000d8ea:	cmp    DWORD PTR [rdx+0x8],r14d
   14000d8ee:	je     0x14000d928
   14000d8f0:	cmp    DWORD PTR [rdx+0x10],r14d
   14000d8f4:	jge    0x14000d908
   14000d8f6:	cmp    DWORD PTR [rax-0xc],r14d
   14000d8fa:	jl     0x14000d951
   14000d8fc:	mov    DWORD PTR [rax-0x10],r14d
   14000d900:	mov    rax,QWORD PTR [rbx]
   14000d903:	mov    BYTE PTR [rax],r14b
   14000d906:	jmp    0x14000d928
   14000d908:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000d90d:	jg     0x14000d918
   14000d90f:	mov    rcx,QWORD PTR [rdx]
   14000d912:	mov    rax,QWORD PTR [rcx]
   14000d915:	call   QWORD PTR [rax+0x8]
   14000d918:	mov    rax,QWORD PTR [rdi]
   14000d91b:	mov    rcx,rdi
   14000d91e:	call   QWORD PTR [rax+0x18]
   14000d921:	add    rax,0x18
   14000d925:	mov    QWORD PTR [rbx],rax
   14000d928:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d92d:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d932:	mov    rdi,QWORD PTR [rsp+0x68]
   14000d937:	mov    rax,rbx
   14000d93a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d93f:	add    rsp,0x40
   14000d943:	pop    r14
   14000d945:	ret    
   14000d946:	mov    ecx,0x80070057
   14000d94b:	call   0x14000400c
   14000d950:	int3   
   14000d951:	mov    ecx,0x80070057
   14000d956:	call   0x14000400c
   14000d95b:	int3   
   14000d95c:	mov    rax,rsp
   14000d95f:	mov    QWORD PTR [rax+0x10],rdx
   14000d963:	push   rsi
   14000d964:	push   rdi
   14000d965:	push   r14
   14000d967:	sub    rsp,0x30
   14000d96b:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   14000d973:	mov    QWORD PTR [rax+0x8],rbx
   14000d977:	mov    QWORD PTR [rax+0x18],rbp
   14000d97b:	mov    ebx,r9d
   14000d97e:	mov    edi,r8d
   14000d981:	mov    rsi,rdx
   14000d984:	mov    r14,rcx
   14000d987:	xor    ebp,ebp
   14000d989:	mov    DWORD PTR [rax-0x28],ebp
   14000d98c:	test   r8d,r8d
   14000d98f:	cmovs  edi,ebp
   14000d992:	test   r9d,r9d
   14000d995:	cmovs  ebx,ebp
   14000d998:	mov    eax,0x7fffffff
   14000d99d:	sub    eax,edi
   14000d99f:	cmp    eax,ebx
   14000d9a1:	jl     0x14000da1f
   14000d9a3:	lea    eax,[rdi+rbx*1]
   14000d9a6:	mov    rdx,QWORD PTR [rcx]
   14000d9a9:	mov    ecx,DWORD PTR [rdx-0x10]
   14000d9ac:	cmp    eax,ecx
   14000d9ae:	jle    0x14000d9b4
   14000d9b0:	mov    ebx,ecx
   14000d9b2:	sub    ebx,edi
   14000d9b4:	cmp    edi,ecx
   14000d9b6:	cmovg  ebx,ebp
   14000d9b9:	test   edi,edi
   14000d9bb:	jne    0x14000d9da
   14000d9bd:	cmp    ebx,ecx
   14000d9bf:	jne    0x14000d9da
   14000d9c1:	mov    rdx,r14
   14000d9c4:	mov    rcx,rsi
   14000d9c7:	call   0x140006af0
   14000d9cc:	nop
   14000d9cd:	mov    DWORD PTR [rsp+0x20],0x1
   14000d9d5:	mov    rax,rsi
   14000d9d8:	jmp    0x14000da2a
   14000d9da:	mov    rcx,QWORD PTR [rdx-0x18]
   14000d9de:	test   rcx,rcx
   14000d9e1:	je     0x14000d9eb
   14000d9e3:	mov    rax,QWORD PTR [rcx]
   14000d9e6:	call   QWORD PTR [rax+0x20]
   14000d9e9:	jmp    0x14000d9ee
   14000d9eb:	mov    rax,rbp
   14000d9ee:	test   rax,rax
   14000d9f1:	jne    0x14000da04
   14000d9f3:	lea    rcx,[rip+0x4c92e]        # 0x14005a328
   14000d9fa:	mov    rax,QWORD PTR [rip+0x4c927]        # 0x14005a328
   14000da01:	call   QWORD PTR [rax+0x20]
   14000da04:	mov    rdx,QWORD PTR [r14]
   14000da07:	movsxd rcx,edi
   14000da0a:	lea    rdx,[rdx+rcx*2]
   14000da0e:	mov    r9,rax
   14000da11:	mov    r8d,ebx
   14000da14:	mov    rcx,rsi
   14000da17:	call   0x14000db0c
   14000da1c:	nop
   14000da1d:	jmp    0x14000d9cd
   14000da1f:	mov    ecx,0x80070216
   14000da24:	call   0x14000400c
   14000da29:	nop
   14000da2a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000da2f:	mov    rbp,QWORD PTR [rsp+0x60]
   14000da34:	add    rsp,0x30
   14000da38:	pop    r14
   14000da3a:	pop    rdi
   14000da3b:	pop    rsi
   14000da3c:	ret    
   14000da3d:	int3   
   14000da3e:	int3   
   14000da3f:	int3   
   14000da40:	mov    QWORD PTR [rsp+0x8],rbx
   14000da45:	mov    QWORD PTR [rsp+0x10],rbp
   14000da4a:	mov    QWORD PTR [rsp+0x18],rsi
   14000da4f:	push   rdi
   14000da50:	push   r12
   14000da52:	push   r13
   14000da54:	push   r14
   14000da56:	push   r15
   14000da58:	sub    rsp,0x20
   14000da5c:	movsxd rbp,DWORD PTR [rsp+0x70]
   14000da61:	movsxd rbx,r8d
   14000da64:	xor    r13d,r13d
   14000da67:	lea    esi,[rbx+rbp*1]
   14000da6a:	mov    r15,r9
   14000da6d:	mov    r12,rdx
   14000da70:	mov    r14,rcx
   14000da73:	test   esi,esi
   14000da75:	js     0x14000daf3
   14000da77:	mov    rax,QWORD PTR [rcx]
   14000da7a:	lea    ecx,[r13+0x1]
   14000da7e:	sub    ecx,DWORD PTR [rax-0x8]
   14000da81:	mov    eax,DWORD PTR [rax-0xc]
   14000da84:	sub    eax,esi
   14000da86:	or     ecx,eax
   14000da88:	jge    0x14000da94
   14000da8a:	mov    edx,esi
   14000da8c:	mov    rcx,r14
   14000da8f:	call   0x140007098
   14000da94:	mov    rdi,QWORD PTR [r14]
   14000da97:	add    rbx,rbx
   14000da9a:	mov    r8,r12
   14000da9d:	mov    rcx,rdi
   14000daa0:	mov    r9,rbx
   14000daa3:	mov    rdx,rbx
   14000daa6:	call   0x140027788
   14000daab:	mov    rdx,rbp
   14000daae:	lea    rcx,[rbx+rdi*1]
   14000dab2:	add    rdx,rdx
   14000dab5:	mov    r8,r15
   14000dab8:	mov    r9,rdx
   14000dabb:	call   0x140027788
   14000dac0:	mov    rax,QWORD PTR [r14]
   14000dac3:	cmp    esi,DWORD PTR [rax-0xc]
   14000dac6:	jg     0x14000dafe
   14000dac8:	mov    rbx,QWORD PTR [rsp+0x50]
   14000dacd:	mov    rbp,QWORD PTR [rsp+0x58]
   14000dad2:	mov    DWORD PTR [rax-0x10],esi
   14000dad5:	mov    rax,QWORD PTR [r14]
   14000dad8:	movsxd rcx,esi
   14000dadb:	mov    rsi,QWORD PTR [rsp+0x60]
   14000dae0:	mov    WORD PTR [rax+rcx*2],r13w
   14000dae5:	add    rsp,0x20
   14000dae9:	pop    r15
   14000daeb:	pop    r14
   14000daed:	pop    r13
   14000daef:	pop    r12
   14000daf1:	pop    rdi
   14000daf2:	ret    
   14000daf3:	mov    ecx,0x80070057
   14000daf8:	call   0x14000400c
   14000dafd:	int3   
   14000dafe:	mov    ecx,0x80070057
   14000db03:	call   0x14000400c
   14000db08:	int3   
   14000db09:	int3   
   14000db0a:	int3   
   14000db0b:	int3   
   14000db0c:	mov    QWORD PTR [rsp+0x8],rbx
   14000db11:	mov    QWORD PTR [rsp+0x10],rbp
   14000db16:	mov    QWORD PTR [rsp+0x18],rsi
   14000db1b:	push   rdi
   14000db1c:	sub    rsp,0x20
   14000db20:	xor    ebp,ebp
   14000db22:	movsxd rbx,r8d
   14000db25:	mov    rsi,rdx
   14000db28:	mov    rdi,rcx
   14000db2b:	test   r9,r9
   14000db2e:	je     0x14000db93
   14000db30:	test   rdx,rdx
   14000db33:	jne    0x14000db3a
   14000db35:	test   r8d,r8d
   14000db38:	jne    0x14000db9e
   14000db3a:	mov    rax,QWORD PTR [r9]
   14000db3d:	mov    r8d,0x2
   14000db43:	mov    edx,ebx
   14000db45:	mov    rcx,r9
   14000db48:	call   QWORD PTR [rax]
   14000db4a:	test   rax,rax
   14000db4d:	je     0x14000dba9
   14000db4f:	add    rax,0x18
   14000db53:	mov    QWORD PTR [rdi],rax
   14000db56:	test   ebx,ebx
   14000db58:	js     0x14000dbaf
   14000db5a:	cmp    ebx,DWORD PTR [rax-0xc]
   14000db5d:	jg     0x14000dbaf
   14000db5f:	mov    DWORD PTR [rax-0x10],ebx
   14000db62:	mov    rax,QWORD PTR [rdi]
   14000db65:	lea    rdx,[rbx+rbx*1]
   14000db69:	mov    WORD PTR [rdx+rax*1],bp
   14000db6d:	mov    rcx,QWORD PTR [rdi]
   14000db70:	mov    r9,rdx
   14000db73:	mov    r8,rsi
   14000db76:	call   0x140027788
   14000db7b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000db80:	mov    rbp,QWORD PTR [rsp+0x38]
   14000db85:	mov    rsi,QWORD PTR [rsp+0x40]
   14000db8a:	mov    rax,rdi
   14000db8d:	add    rsp,0x20
   14000db91:	pop    rdi
   14000db92:	ret    
   14000db93:	mov    ecx,0x80004005
   14000db98:	call   0x14000400c
   14000db9d:	int3   
   14000db9e:	mov    ecx,0x80070057
   14000dba3:	call   0x14000400c
   14000dba8:	int3   
   14000dba9:	call   0x140007088
   14000dbae:	int3   
   14000dbaf:	mov    ecx,0x80070057
   14000dbb4:	call   0x14000400c
   14000dbb9:	int3   
   14000dbba:	int3   
   14000dbbb:	int3   
   14000dbbc:	mov    rax,rsp
   14000dbbf:	mov    QWORD PTR [rax+0x8],rbx
   14000dbc3:	mov    QWORD PTR [rax+0x10],rbp
   14000dbc7:	mov    QWORD PTR [rax+0x18],rsi
   14000dbcb:	mov    QWORD PTR [rax+0x20],rdi
   14000dbcf:	push   r15
   14000dbd1:	sub    rsp,0x40
   14000dbd5:	mov    eax,r8d
   14000dbd8:	mov    rsi,rdx
   14000dbdb:	mov    r15d,0x1
   14000dbe1:	shr    eax,0x4
   14000dbe4:	mov    ebx,r8d
   14000dbe7:	mov    rdi,rcx
   14000dbea:	add    ax,r15w
   14000dbee:	lea    r8d,[r15+0x5]
   14000dbf2:	mov    rcx,rsi
   14000dbf5:	movzx  edx,ax
   14000dbf8:	call   QWORD PTR [rip+0x337ba]        # 0x1400413b8
   14000dbfe:	test   rax,rax
   14000dc01:	je     0x14000dcb0
   14000dc07:	mov    r8d,ebx
   14000dc0a:	mov    rdx,rax
   14000dc0d:	mov    rcx,rsi
   14000dc10:	call   0x140004028
   14000dc15:	mov    rsi,rax
   14000dc18:	test   rax,rax
   14000dc1b:	je     0x14000dcb0
   14000dc21:	and    QWORD PTR [rsp+0x38],0x0
   14000dc27:	and    QWORD PTR [rsp+0x30],0x0
   14000dc2d:	movzx  r9d,WORD PTR [rax]
   14000dc31:	and    DWORD PTR [rsp+0x28],0x0
   14000dc36:	and    QWORD PTR [rsp+0x20],0x0
   14000dc3c:	xor    edx,edx
   14000dc3e:	lea    ecx,[rdx+0x3]
   14000dc41:	lea    r8,[rax+0x2]
   14000dc45:	call   QWORD PTR [rip+0x33705]        # 0x140041350
   14000dc4b:	movsxd rbx,eax
   14000dc4e:	test   eax,eax
   14000dc50:	js     0x14000dccd
   14000dc52:	mov    rax,QWORD PTR [rdi]
   14000dc55:	mov    ecx,r15d
   14000dc58:	sub    ecx,DWORD PTR [rax-0x8]
   14000dc5b:	mov    eax,DWORD PTR [rax-0xc]
   14000dc5e:	sub    eax,ebx
   14000dc60:	or     ecx,eax
   14000dc62:	jge    0x14000dc6e
   14000dc64:	mov    edx,ebx
   14000dc66:	mov    rcx,rdi
   14000dc69:	call   0x14000dce4
   14000dc6e:	mov    rdx,QWORD PTR [rdi]
   14000dc71:	and    QWORD PTR [rsp+0x38],0x0
   14000dc77:	and    QWORD PTR [rsp+0x30],0x0
   14000dc7d:	movzx  r9d,WORD PTR [rsi]
   14000dc81:	mov    DWORD PTR [rsp+0x28],ebx
   14000dc85:	mov    QWORD PTR [rsp+0x20],rdx
   14000dc8a:	xor    edx,edx
   14000dc8c:	lea    r8,[rsi+0x2]
   14000dc90:	lea    ecx,[rdx+0x3]
   14000dc93:	call   QWORD PTR [rip+0x336b7]        # 0x140041350
   14000dc99:	mov    rcx,QWORD PTR [rdi]
   14000dc9c:	cmp    ebx,DWORD PTR [rcx-0xc]
   14000dc9f:	jg     0x14000dcd8
   14000dca1:	mov    DWORD PTR [rcx-0x10],ebx
   14000dca4:	mov    rcx,QWORD PTR [rdi]
   14000dca7:	mov    eax,r15d
   14000dcaa:	mov    BYTE PTR [rbx+rcx*1],0x0
   14000dcae:	jmp    0x14000dcb2
   14000dcb0:	xor    eax,eax
   14000dcb2:	mov    rbx,QWORD PTR [rsp+0x50]
   14000dcb7:	mov    rbp,QWORD PTR [rsp+0x58]
   14000dcbc:	mov    rsi,QWORD PTR [rsp+0x60]
   14000dcc1:	mov    rdi,QWORD PTR [rsp+0x68]
   14000dcc6:	add    rsp,0x40
   14000dcca:	pop    r15
   14000dccc:	ret    
   14000dccd:	mov    ecx,0x80070057
   14000dcd2:	call   0x14000400c
   14000dcd7:	int3   
   14000dcd8:	mov    ecx,0x80070057
   14000dcdd:	call   0x14000400c
   14000dce2:	int3   
   14000dce3:	int3   
   14000dce4:	sub    rsp,0x28
   14000dce8:	mov    rax,QWORD PTR [rcx]
   14000dceb:	mov    r8d,edx
   14000dcee:	mov    r9,rcx
   14000dcf1:	cmp    DWORD PTR [rax-0x10],edx
   14000dcf4:	cmovg  r8d,DWORD PTR [rax-0x10]
   14000dcf9:	cmp    DWORD PTR [rax-0x8],0x1
   14000dcfd:	jle    0x14000dd0b
   14000dcff:	mov    edx,r8d
   14000dd02:	add    rsp,0x28
   14000dd06:	jmp    0x14000dd44
   14000dd0b:	mov    ecx,DWORD PTR [rax-0xc]
   14000dd0e:	cmp    ecx,r8d
   14000dd11:	jge    0x14000dd3d
   14000dd13:	cmp    ecx,0x40000000
   14000dd19:	jle    0x14000dd23
   14000dd1b:	add    ecx,0x100000
   14000dd21:	jmp    0x14000dd2c
   14000dd23:	mov    eax,ecx
   14000dd25:	cdq    
   14000dd26:	sub    eax,edx
   14000dd28:	sar    eax,1
   14000dd2a:	add    ecx,eax
   14000dd2c:	cmp    ecx,r8d
   14000dd2f:	cmovl  ecx,r8d
   14000dd33:	mov    edx,ecx
   14000dd35:	mov    rcx,r9
   14000dd38:	call   0x14000dde4
   14000dd3d:	add    rsp,0x28
   14000dd41:	ret    
   14000dd42:	int3   
   14000dd43:	int3   
   14000dd44:	mov    rax,rsp
   14000dd47:	mov    QWORD PTR [rax+0x8],rbx
   14000dd4b:	mov    QWORD PTR [rax+0x10],rbp
   14000dd4f:	mov    QWORD PTR [rax+0x18],rsi
   14000dd53:	mov    QWORD PTR [rax+0x20],rdi
   14000dd57:	push   r14
   14000dd59:	sub    rsp,0x20
   14000dd5d:	mov    rbx,QWORD PTR [rcx]
   14000dd60:	mov    rsi,rcx
   14000dd63:	mov    edi,edx
   14000dd65:	mov    rcx,QWORD PTR [rbx-0x18]
   14000dd69:	mov    ebp,DWORD PTR [rbx-0x10]
   14000dd6c:	mov    rax,QWORD PTR [rcx]
   14000dd6f:	call   QWORD PTR [rax+0x20]
   14000dd72:	mov    r8d,0x1
   14000dd78:	mov    edx,edi
   14000dd7a:	mov    r9,QWORD PTR [rax]
   14000dd7d:	mov    rcx,rax
   14000dd80:	call   QWORD PTR [r9]
   14000dd83:	mov    r14,rax
   14000dd86:	test   rax,rax
   14000dd89:	je     0x14000ddde
   14000dd8b:	cmp    ebp,edi
   14000dd8d:	mov    r8,rbx
   14000dd90:	cmovl  edi,ebp
   14000dd93:	inc    edi
   14000dd95:	movsxd rdx,edi
   14000dd98:	lea    rdi,[rax+0x18]
   14000dd9c:	mov    rcx,rdi
   14000dd9f:	mov    r9,rdx
   14000dda2:	call   0x140027788
   14000dda7:	mov    DWORD PTR [r14+0x8],ebp
   14000ddab:	lock add DWORD PTR [rbx-0x8],0xffffffff
   14000ddb0:	jg     0x14000ddc0
   14000ddb2:	mov    rcx,QWORD PTR [rbx-0x18]
   14000ddb6:	lea    rdx,[rbx-0x18]
   14000ddba:	mov    rax,QWORD PTR [rcx]
   14000ddbd:	call   QWORD PTR [rax+0x8]
   14000ddc0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ddc5:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ddca:	mov    QWORD PTR [rsi],rdi
   14000ddcd:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ddd2:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ddd7:	add    rsp,0x20
   14000dddb:	pop    r14
   14000dddd:	ret    
   14000ddde:	call   0x140007088
   14000dde3:	int3   
   14000dde4:	rex push rbx
   14000dde6:	sub    rsp,0x20
   14000ddea:	mov    r8d,edx
   14000dded:	mov    rdx,QWORD PTR [rcx]
   14000ddf0:	mov    rbx,rcx
   14000ddf3:	sub    rdx,0x18
   14000ddf7:	mov    rcx,QWORD PTR [rdx]
   14000ddfa:	cmp    DWORD PTR [rdx+0xc],r8d
   14000ddfe:	jge    0x14000de29
   14000de00:	test   r8d,r8d
   14000de03:	jle    0x14000de29
   14000de05:	mov    rax,QWORD PTR [rcx]
   14000de08:	mov    r9d,0x1
   14000de0e:	call   QWORD PTR [rax+0x10]
   14000de11:	test   rax,rax
   14000de14:	je     0x14000de23
   14000de16:	add    rax,0x18
   14000de1a:	mov    QWORD PTR [rbx],rax
   14000de1d:	add    rsp,0x20
   14000de21:	pop    rbx
   14000de22:	ret    
   14000de23:	call   0x140007088
   14000de28:	int3   
   14000de29:	call   0x140007088
   14000de2e:	int3   
   14000de2f:	int3   
   14000de30:	mov    rax,rsp
   14000de33:	mov    QWORD PTR [rax+0x10],rdx
   14000de37:	mov    QWORD PTR [rax+0x18],r8
   14000de3b:	mov    QWORD PTR [rax+0x20],r9
   14000de3f:	push   rbx
   14000de40:	push   rbp
   14000de41:	push   rsi
   14000de42:	push   rdi
   14000de43:	push   r14
   14000de45:	sub    rsp,0x20
   14000de49:	xor    ebp,ebp
   14000de4b:	mov    rsi,rdx
   14000de4e:	mov    rdi,rcx
   14000de51:	lea    r14,[rax+0x18]
   14000de55:	test   rdx,rdx
   14000de58:	je     0x14000deb9
   14000de5a:	mov    rdx,r14
   14000de5d:	mov    rcx,rsi
   14000de60:	call   0x14002714c
   14000de65:	movsxd rbx,eax
   14000de68:	test   eax,eax
   14000de6a:	js     0x14000dec4
   14000de6c:	mov    rax,QWORD PTR [rdi]
   14000de6f:	lea    ecx,[rbp+0x1]
   14000de72:	sub    ecx,DWORD PTR [rax-0x8]
   14000de75:	mov    eax,DWORD PTR [rax-0xc]
   14000de78:	sub    eax,ebx
   14000de7a:	or     ecx,eax
   14000de7c:	jge    0x14000de88
   14000de7e:	mov    edx,ebx
   14000de80:	mov    rcx,rdi
   14000de83:	call   0x140007098
   14000de88:	mov    rcx,QWORD PTR [rdi]
   14000de8b:	lea    eax,[rbx+0x1]
   14000de8e:	mov    r9,r14
   14000de91:	movsxd rdx,eax
   14000de94:	mov    r8,rsi
   14000de97:	call   0x1400275d4
   14000de9c:	mov    rax,QWORD PTR [rdi]
   14000de9f:	cmp    ebx,DWORD PTR [rax-0xc]
   14000dea2:	jg     0x14000decf
   14000dea4:	mov    DWORD PTR [rax-0x10],ebx
   14000dea7:	mov    rax,QWORD PTR [rdi]
   14000deaa:	mov    WORD PTR [rax+rbx*2],bp
   14000deae:	add    rsp,0x20
   14000deb2:	pop    r14
   14000deb4:	pop    rdi
   14000deb5:	pop    rsi
   14000deb6:	pop    rbp
   14000deb7:	pop    rbx
   14000deb8:	ret    
   14000deb9:	mov    ecx,0x80070057
   14000debe:	call   0x14000400c
   14000dec3:	int3   
   14000dec4:	mov    ecx,0x80004005
   14000dec9:	call   0x14000400c
   14000dece:	int3   
   14000decf:	mov    ecx,0x80070057
   14000ded4:	call   0x14000400c
   14000ded9:	int3   
   14000deda:	int3   
   14000dedb:	int3   
   14000dedc:	mov    rax,rsp
   14000dedf:	push   rbp
   14000dee0:	push   rsi
   14000dee1:	push   rdi
   14000dee2:	lea    rbp,[rax-0x5f]
   14000dee6:	sub    rsp,0xc0
   14000deed:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   14000def5:	mov    QWORD PTR [rax+0x18],rbx
   14000def9:	mov    rax,QWORD PTR [rip+0x4b188]        # 0x140059088
   14000df00:	xor    rax,rsp
   14000df03:	mov    QWORD PTR [rbp+0x37],rax
   14000df07:	mov    rdi,rdx
   14000df0a:	mov    rbx,rcx
   14000df0d:	xor    esi,esi
   14000df0f:	test   r8d,r8d
   14000df12:	lea    r8d,[rsi+0x1]
   14000df16:	je     0x14000df3e
   14000df18:	mov    r9,QWORD PTR [rip+0x4cbe9]        # 0x14005ab08
   14000df1f:	mov    edx,0xe12305a4
   14000df24:	lea    rcx,[rbp-0x1]
   14000df28:	call   0x140010a9c
   14000df2d:	lea    rdx,[rip+0x480bc]        # 0x140055ff0
   14000df34:	lea    rcx,[rbp-0x1]
   14000df38:	call   0x140029fe8
   14000df3d:	int3   
   14000df3e:	mov    rax,QWORD PTR [rip+0x4cbc3]        # 0x14005ab08
   14000df45:	mov    QWORD PTR [rbp-0x49],rax
   14000df49:	mov    rax,QWORD PTR [rcx]
   14000df4c:	lea    r9,[rbp-0x49]
   14000df50:	mov    edx,0x61230d30
   14000df55:	call   QWORD PTR [rax]
   14000df57:	mov    rcx,rdi
   14000df5a:	call   0x14001ce6c
   14000df5f:	test   eax,eax
   14000df61:	jne    0x14000dfdf
   14000df63:	call   QWORD PTR [rip+0x3346f]        # 0x1400413d8
   14000df69:	mov    QWORD PTR [rbp+0xf],rsi
   14000df6d:	mov    QWORD PTR [rbp+0x17],rsi
   14000df71:	mov    QWORD PTR [rbp+0x17],0x7
   14000df79:	mov    QWORD PTR [rbp+0xf],rsi
   14000df7d:	mov    WORD PTR [rbp-0x1],si
   14000df81:	mov    ecx,eax
   14000df83:	call   0x140011e70
   14000df88:	mov    rbx,rax
   14000df8b:	mov    rdx,rax
   14000df8e:	lea    rcx,[rbp-0x1]
   14000df92:	call   0x14000324c
   14000df97:	mov    rcx,rbx
   14000df9a:	call   QWORD PTR [rip+0x33428]        # 0x1400413c8
   14000dfa0:	lea    rax,[rbp-0x1]
   14000dfa4:	cmp    QWORD PTR [rbp+0x17],0x8
   14000dfa9:	cmovae rax,QWORD PTR [rbp-0x1]
   14000dfae:	mov    QWORD PTR [rsp+0x20],rax
   14000dfb3:	mov    r9,QWORD PTR [rip+0x4cb4e]        # 0x14005ab08
   14000dfba:	mov    edx,0xe12305a5
   14000dfbf:	mov    r8d,0x2
   14000dfc5:	lea    rcx,[rbp-0x39]
   14000dfc9:	call   0x140010a9c
   14000dfce:	lea    rdx,[rip+0x4801b]        # 0x140055ff0
   14000dfd5:	lea    rcx,[rbp-0x39]
   14000dfd9:	call   0x140029fe8
   14000dfde:	nop
   14000dfdf:	mov    rax,QWORD PTR [rip+0x4cb22]        # 0x14005ab08
   14000dfe6:	mov    QWORD PTR [rbp-0x49],rax
   14000dfea:	mov    rax,QWORD PTR [rbx]
   14000dfed:	lea    r9,[rbp-0x49]
   14000dff1:	mov    edx,0x61230d31
   14000dff6:	mov    r8d,0x1
   14000dffc:	mov    rcx,rbx
   14000dfff:	call   QWORD PTR [rax]
   14000e001:	mov    rcx,QWORD PTR [rbp+0x37]
   14000e005:	xor    rcx,rsp
   14000e008:	call   0x1400265a0
   14000e00d:	mov    rbx,QWORD PTR [rsp+0xf0]
   14000e015:	add    rsp,0xc0
   14000e01c:	pop    rdi
   14000e01d:	pop    rsi
   14000e01e:	pop    rbp
   14000e01f:	ret    
   14000e020:	mov    rax,rsp
   14000e023:	push   rbp
   14000e024:	push   r12
   14000e026:	push   r13
   14000e028:	push   r14
   14000e02a:	push   r15
   14000e02c:	lea    rbp,[rax-0x5f]
   14000e030:	sub    rsp,0xb0
   14000e037:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   14000e03f:	mov    QWORD PTR [rax+0x8],rbx
   14000e043:	mov    QWORD PTR [rax+0x10],rsi
   14000e047:	mov    QWORD PTR [rax+0x18],rdi
   14000e04b:	mov    r12d,r9d
   14000e04e:	mov    r15d,r8d
   14000e051:	mov    rsi,rdx
   14000e054:	mov    rdi,rcx
   14000e057:	lea    rcx,[rip+0x38062]        # 0x1400460c0
   14000e05e:	call   QWORD PTR [rip+0x3332c]        # 0x140041390
   14000e064:	mov    rbx,rax
   14000e067:	lea    rdx,[rip+0x38062]        # 0x1400460d0
   14000e06e:	mov    rcx,rax
   14000e071:	call   QWORD PTR [rip+0x33271]        # 0x1400412e8
   14000e077:	mov    r14,rax
   14000e07a:	lea    rdx,[rip+0x3806f]        # 0x1400460f0
   14000e081:	mov    rcx,rbx
   14000e084:	call   QWORD PTR [rip+0x3325e]        # 0x1400412e8
   14000e08a:	mov    rbx,rax
   14000e08d:	mov    r13d,0x1
   14000e093:	test   r14,r14
   14000e096:	je     0x14000e0f4
   14000e098:	test   rax,rax
   14000e09b:	je     0x14000e0f4
   14000e09d:	mov    ecx,0xffff
   14000e0a2:	call   r14
   14000e0a5:	mov    r14d,eax
   14000e0a8:	call   rbx
   14000e0aa:	cmp    ax,r13w
   14000e0ae:	jbe    0x14000e0f4
   14000e0b0:	movzx  ecx,ax
   14000e0b3:	mov    DWORD PTR [rsp+0x28],r14d
   14000e0b8:	mov    DWORD PTR [rsp+0x20],ecx
   14000e0bc:	mov    r9,QWORD PTR [rip+0x4ca45]        # 0x14005ab08
   14000e0c3:	mov    edx,0xe12305ca
   14000e0c8:	lea    r8d,[r13+0x2]
   14000e0cc:	lea    rcx,[rbp-0x1]
   14000e0d0:	call   0x140010a9c
   14000e0d5:	nop
   14000e0d6:	lea    rdx,[rbp-0x1]
   14000e0da:	lea    rcx,[rbp-0x39]
   14000e0de:	call   0x140010afc
   14000e0e3:	lea    rdx,[rip+0x47f06]        # 0x140055ff0
   14000e0ea:	lea    rcx,[rbp-0x39]
   14000e0ee:	call   0x140029fe8
   14000e0f3:	nop
   14000e0f4:	test   r12d,r12d
   14000e0f7:	je     0x14000e122
   14000e0f9:	mov    r9,QWORD PTR [rip+0x4ca08]        # 0x14005ab08
   14000e100:	mov    r8d,r13d
   14000e103:	mov    edx,0xe12305a8
   14000e108:	lea    rcx,[rbp-0x39]
   14000e10c:	call   0x140010a9c
   14000e111:	lea    rdx,[rip+0x47ed8]        # 0x140055ff0
   14000e118:	lea    rcx,[rbp-0x39]
   14000e11c:	call   0x140029fe8
   14000e121:	int3   
   14000e122:	test   r15d,r15d
   14000e125:	jne    0x14000e135
   14000e127:	xor    r8d,r8d
   14000e12a:	mov    rdx,rsi
   14000e12d:	mov    rcx,rdi
   14000e130:	call   0x14000dedc
   14000e135:	mov    rax,QWORD PTR [rip+0x4c9cc]        # 0x14005ab08
   14000e13c:	mov    QWORD PTR [rbp-0x49],rax
   14000e140:	mov    rax,QWORD PTR [rdi]
   14000e143:	lea    r9,[rbp-0x49]
   14000e147:	mov    r8d,r13d
   14000e14a:	mov    edx,0x61230d32
   14000e14f:	mov    rcx,rdi
   14000e152:	call   QWORD PTR [rax]
   14000e154:	and    DWORD PTR [rbp-0x49],0x0
   14000e158:	lea    rdx,[rbp-0x49]
   14000e15c:	mov    rcx,rsi
   14000e15f:	call   0x14001d0a0
   14000e164:	test   eax,eax
   14000e166:	jne    0x14000e1ce
   14000e168:	call   QWORD PTR [rip+0x3326a]        # 0x1400413d8
   14000e16e:	mov    ecx,eax
   14000e170:	call   0x140011e70
   14000e175:	mov    rbx,rax
   14000e178:	lea    rcx,[rip+0x373b1]        # 0x140045530
   14000e17f:	test   rax,rax
   14000e182:	cmovne rcx,rax
   14000e186:	mov    QWORD PTR [rsp+0x20],rcx
   14000e18b:	mov    r9,QWORD PTR [rip+0x4c976]        # 0x14005ab08
   14000e192:	mov    edx,0xe12305a9
   14000e197:	mov    r8d,0x2
   14000e19d:	lea    rcx,[rbp-0x39]
   14000e1a1:	call   0x140010a9c
   14000e1a6:	nop
   14000e1a7:	mov    rcx,rbx
   14000e1aa:	call   QWORD PTR [rip+0x33218]        # 0x1400413c8
   14000e1b0:	lea    rdx,[rbp-0x39]
   14000e1b4:	lea    rcx,[rbp-0x1]
   14000e1b8:	call   0x140010afc
   14000e1bd:	lea    rdx,[rip+0x47e2c]        # 0x140055ff0
   14000e1c4:	lea    rcx,[rbp-0x1]
   14000e1c8:	call   0x140029fe8
   14000e1cd:	nop
   14000e1ce:	cmp    DWORD PTR [rbp-0x49],0x0
   14000e1d2:	je     0x14000e1e7
   14000e1d4:	mov    rax,QWORD PTR [rdi]
   14000e1d7:	xor    r9d,r9d
   14000e1da:	xor    r8d,r8d
   14000e1dd:	mov    edx,0xa1230905
   14000e1e2:	mov    rcx,rdi
   14000e1e5:	call   QWORD PTR [rax]
   14000e1e7:	mov    rax,QWORD PTR [rip+0x4c91a]        # 0x14005ab08
   14000e1ee:	mov    QWORD PTR [rbp-0x49],rax
   14000e1f2:	mov    rax,QWORD PTR [rdi]
   14000e1f5:	lea    r9,[rbp-0x49]
   14000e1f9:	mov    r8d,r13d
   14000e1fc:	mov    edx,0x61230d33
   14000e201:	mov    rcx,rdi
   14000e204:	call   QWORD PTR [rax]
   14000e206:	lea    r11,[rsp+0xb0]
   14000e20e:	mov    rbx,QWORD PTR [r11+0x30]
   14000e212:	mov    rsi,QWORD PTR [r11+0x38]
   14000e216:	mov    rdi,QWORD PTR [r11+0x40]
   14000e21a:	mov    rsp,r11
   14000e21d:	pop    r15
   14000e21f:	pop    r14
   14000e221:	pop    r13
   14000e223:	pop    r12
   14000e225:	pop    rbp
   14000e226:	ret    
   14000e227:	int3   
   14000e228:	mov    rax,rsp
   14000e22b:	push   rbp
   14000e22c:	push   rsi
   14000e22d:	push   rdi
   14000e22e:	lea    rbp,[rax-0x5f]
   14000e232:	sub    rsp,0xc0
   14000e239:	mov    QWORD PTR [rbp-0x49],0xfffffffffffffffe
   14000e241:	mov    QWORD PTR [rax+0x18],rbx
   14000e245:	mov    rax,QWORD PTR [rip+0x4ae3c]        # 0x140059088
   14000e24c:	xor    rax,rsp
   14000e24f:	mov    QWORD PTR [rbp+0x3f],rax
   14000e253:	mov    rdi,rcx
   14000e256:	xor    esi,esi
   14000e258:	test   r9d,r9d
   14000e25b:	jne    0x14000e287
   14000e25d:	mov    r9,QWORD PTR [rip+0x4c8a4]        # 0x14005ab08
   14000e264:	mov    edx,0xe12305aa
   14000e269:	lea    r8d,[rsi+0x1]
   14000e26d:	lea    rcx,[rbp-0x9]
   14000e271:	call   0x140010a9c
   14000e276:	lea    rdx,[rip+0x47d73]        # 0x140055ff0
   14000e27d:	lea    rcx,[rbp-0x9]
   14000e281:	call   0x140029fe8
   14000e286:	int3   
   14000e287:	lea    rbx,[rdx+0x8]
   14000e28b:	mov    r8d,0x80000000
   14000e291:	mov    rdx,QWORD PTR [rip+0x4c790]        # 0x14005aa28
   14000e298:	mov    rcx,rbx
   14000e29b:	call   0x14000f98c
   14000e2a0:	test   eax,eax
   14000e2a2:	jne    0x14000e2db
   14000e2a4:	mov    DWORD PTR [rbp-0x9],0x1
   14000e2ab:	mov    DWORD PTR [rbp-0x5],0xe12305b2
   14000e2b2:	mov    QWORD PTR [rbp-0x1],rsi
   14000e2b6:	mov    QWORD PTR [rbp+0x7],rsi
   14000e2ba:	mov    QWORD PTR [rbp+0xf],rsi
   14000e2be:	mov    QWORD PTR [rbp+0x17],rsi
   14000e2c2:	mov    QWORD PTR [rbp+0x1f],rsi
   14000e2c6:	mov    QWORD PTR [rbp+0x27],rsi
   14000e2ca:	lea    rdx,[rip+0x47d1f]        # 0x140055ff0
   14000e2d1:	lea    rcx,[rbp-0x9]
   14000e2d5:	call   0x140029fe8
   14000e2da:	int3   
   14000e2db:	xor    edx,edx
   14000e2dd:	lea    r8d,[rdx+0x10]
   14000e2e1:	lea    rcx,[rbp+0x2f]
   14000e2e5:	call   0x14002bb90
   14000e2ea:	mov    DWORD PTR [rbp-0x9],esi
   14000e2ed:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14000e2f1:	je     0x14000e31d
   14000e2f3:	mov    DWORD PTR [rsp+0x28],0x10
   14000e2fb:	lea    rax,[rbp+0x2f]
   14000e2ff:	mov    QWORD PTR [rsp+0x20],rax
   14000e304:	mov    r9d,0x10
   14000e30a:	lea    r8,[rbp-0x9]
   14000e30e:	mov    edx,0x80006490
   14000e313:	mov    rcx,rbx
   14000e316:	call   0x14000fc30
   14000e31b:	jmp    0x14000e31f
   14000e31d:	mov    eax,esi
   14000e31f:	mov    rcx,rbx
   14000e322:	test   eax,eax
   14000e324:	jne    0x14000e362
   14000e326:	call   0x14000fa1c
   14000e32b:	mov    DWORD PTR [rbp-0x9],0x1
   14000e332:	mov    DWORD PTR [rbp-0x5],0xe12305b2
   14000e339:	mov    QWORD PTR [rbp-0x1],rsi
   14000e33d:	mov    QWORD PTR [rbp+0x7],rsi
   14000e341:	mov    QWORD PTR [rbp+0xf],rsi
   14000e345:	mov    QWORD PTR [rbp+0x17],rsi
   14000e349:	mov    QWORD PTR [rbp+0x1f],rsi
   14000e34d:	mov    QWORD PTR [rbp+0x27],rsi
   14000e351:	lea    rdx,[rip+0x47c98]        # 0x140055ff0
   14000e358:	lea    rcx,[rbp-0x9]
   14000e35c:	call   0x140029fe8
   14000e361:	int3   
   14000e362:	call   0x14000fa1c
   14000e367:	cmp    DWORD PTR [rbp+0x3b],0x1
   14000e36b:	jbe    0x14000e3a4
   14000e36d:	mov    DWORD PTR [rbp-0x9],0x1
   14000e374:	mov    DWORD PTR [rbp-0x5],0xe12305b3
   14000e37b:	mov    QWORD PTR [rbp-0x1],rsi
   14000e37f:	mov    QWORD PTR [rbp+0x7],rsi
   14000e383:	mov    QWORD PTR [rbp+0xf],rsi
   14000e387:	mov    QWORD PTR [rbp+0x17],rsi
   14000e38b:	mov    QWORD PTR [rbp+0x1f],rsi
   14000e38f:	mov    QWORD PTR [rbp+0x27],rsi
   14000e393:	lea    rdx,[rip+0x47c56]        # 0x140055ff0
   14000e39a:	lea    rcx,[rbp-0x9]
   14000e39e:	call   0x140029fe8
   14000e3a3:	int3   
   14000e3a4:	mov    rax,QWORD PTR [rip+0x4c75d]        # 0x14005ab08
   14000e3ab:	mov    QWORD PTR [rbp-0x9],rax
   14000e3af:	mov    rax,QWORD PTR [rdi]
   14000e3b2:	lea    r9,[rbp-0x9]
   14000e3b6:	mov    edx,0x61230d34
   14000e3bb:	mov    r8d,0x1
   14000e3c1:	mov    rcx,rdi
   14000e3c4:	call   QWORD PTR [rax]
   14000e3c6:	mov    rcx,rbx
   14000e3c9:	call   0x14000f8a4
   14000e3ce:	test   eax,eax
   14000e3d0:	jne    0x14000e44e
   14000e3d2:	call   QWORD PTR [rip+0x33000]        # 0x1400413d8
   14000e3d8:	mov    QWORD PTR [rbp+0x7],rsi
   14000e3dc:	mov    QWORD PTR [rbp+0xf],rsi
   14000e3e0:	mov    QWORD PTR [rbp+0xf],0x7
   14000e3e8:	mov    QWORD PTR [rbp+0x7],rsi
   14000e3ec:	mov    WORD PTR [rbp-0x9],si
   14000e3f0:	mov    ecx,eax
   14000e3f2:	call   0x140011e70
   14000e3f7:	mov    rbx,rax
   14000e3fa:	mov    rdx,rax
   14000e3fd:	lea    rcx,[rbp-0x9]
   14000e401:	call   0x14000324c
   14000e406:	mov    rcx,rbx
   14000e409:	call   QWORD PTR [rip+0x32fb9]        # 0x1400413c8
   14000e40f:	lea    rax,[rbp-0x9]
   14000e413:	cmp    QWORD PTR [rbp+0xf],0x8
   14000e418:	cmovae rax,QWORD PTR [rbp-0x9]
   14000e41d:	mov    QWORD PTR [rsp+0x20],rax
   14000e422:	mov    r9,QWORD PTR [rip+0x4c6df]        # 0x14005ab08
   14000e429:	mov    edx,0xe12305ab
   14000e42e:	mov    r8d,0x2
   14000e434:	lea    rcx,[rbp-0x41]
   14000e438:	call   0x140010a9c
   14000e43d:	lea    rdx,[rip+0x47bac]        # 0x140055ff0
   14000e444:	lea    rcx,[rbp-0x41]
   14000e448:	call   0x140029fe8
   14000e44d:	nop
   14000e44e:	mov    rax,QWORD PTR [rip+0x4c6b3]        # 0x14005ab08
   14000e455:	mov    QWORD PTR [rbp-0x9],rax
   14000e459:	mov    rax,QWORD PTR [rdi]
   14000e45c:	lea    r9,[rbp-0x9]
   14000e460:	mov    edx,0x61230d35
   14000e465:	mov    r8d,0x1
   14000e46b:	mov    rcx,rdi
   14000e46e:	call   QWORD PTR [rax]
   14000e470:	mov    rcx,QWORD PTR [rbp+0x3f]
   14000e474:	xor    rcx,rsp
   14000e477:	call   0x1400265a0
   14000e47c:	mov    rbx,QWORD PTR [rsp+0xf0]
   14000e484:	add    rsp,0xc0
   14000e48b:	pop    rdi
   14000e48c:	pop    rsi
   14000e48d:	pop    rbp
   14000e48e:	ret    
   14000e48f:	int3   
   14000e490:	mov    rax,rsp
   14000e493:	push   rbp
   14000e494:	push   rsi
   14000e495:	push   rdi
   14000e496:	lea    rbp,[rax-0x5f]
   14000e49a:	sub    rsp,0xc0
   14000e4a1:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   14000e4a9:	mov    QWORD PTR [rax+0x18],rbx
   14000e4ad:	mov    rax,QWORD PTR [rip+0x4abd4]        # 0x140059088
   14000e4b4:	xor    rax,rsp
   14000e4b7:	mov    QWORD PTR [rbp+0x37],rax
   14000e4bb:	mov    rdi,rdx
   14000e4be:	mov    rbx,rcx
   14000e4c1:	xor    esi,esi
   14000e4c3:	test   r8d,r8d
   14000e4c6:	jne    0x14000e4f2
   14000e4c8:	mov    r9,QWORD PTR [rip+0x4c639]        # 0x14005ab08
   14000e4cf:	mov    edx,0xe12305a6
   14000e4d4:	lea    r8d,[rsi+0x1]
   14000e4d8:	lea    rcx,[rbp-0x1]
   14000e4dc:	call   0x140010a9c
   14000e4e1:	lea    rdx,[rip+0x47b08]        # 0x140055ff0
   14000e4e8:	lea    rcx,[rbp-0x1]
   14000e4ec:	call   0x140029fe8
   14000e4f1:	int3   
   14000e4f2:	test   r9d,r9d
   14000e4f5:	je     0x14000e4fc
   14000e4f7:	call   0x14000e228
   14000e4fc:	mov    rax,QWORD PTR [rip+0x4c605]        # 0x14005ab08
   14000e503:	mov    QWORD PTR [rbp-0x49],rax
   14000e507:	mov    rax,QWORD PTR [rbx]
   14000e50a:	lea    r9,[rbp-0x49]
   14000e50e:	mov    edx,0x61230d36
   14000e513:	mov    r8d,0x1
   14000e519:	mov    rcx,rbx
   14000e51c:	call   QWORD PTR [rax]
   14000e51e:	lea    rcx,[rdi+0x8]
   14000e522:	call   0x14000f79c
   14000e527:	test   eax,eax
   14000e529:	jne    0x14000e5a7
   14000e52b:	call   QWORD PTR [rip+0x32ea7]        # 0x1400413d8
   14000e531:	mov    QWORD PTR [rbp+0xf],rsi
   14000e535:	mov    QWORD PTR [rbp+0x17],rsi
   14000e539:	mov    QWORD PTR [rbp+0x17],0x7
   14000e541:	mov    QWORD PTR [rbp+0xf],rsi
   14000e545:	mov    WORD PTR [rbp-0x1],si
   14000e549:	mov    ecx,eax
   14000e54b:	call   0x140011e70
   14000e550:	mov    rbx,rax
   14000e553:	mov    rdx,rax
   14000e556:	lea    rcx,[rbp-0x1]
   14000e55a:	call   0x14000324c
   14000e55f:	mov    rcx,rbx
   14000e562:	call   QWORD PTR [rip+0x32e60]        # 0x1400413c8
   14000e568:	lea    rax,[rbp-0x1]
   14000e56c:	cmp    QWORD PTR [rbp+0x17],0x8
   14000e571:	cmovae rax,QWORD PTR [rbp-0x1]
   14000e576:	mov    QWORD PTR [rsp+0x20],rax
   14000e57b:	mov    r9,QWORD PTR [rip+0x4c586]        # 0x14005ab08
   14000e582:	mov    edx,0xe12305a7
   14000e587:	mov    r8d,0x2
   14000e58d:	lea    rcx,[rbp-0x39]
   14000e591:	call   0x140010a9c
   14000e596:	lea    rdx,[rip+0x47a53]        # 0x140055ff0
   14000e59d:	lea    rcx,[rbp-0x39]
   14000e5a1:	call   0x140029fe8
   14000e5a6:	nop
   14000e5a7:	call   0x14000e91c
   14000e5ac:	mov    rax,QWORD PTR [rip+0x4c555]        # 0x14005ab08
   14000e5b3:	mov    QWORD PTR [rbp-0x49],rax
   14000e5b7:	mov    rax,QWORD PTR [rbx]
   14000e5ba:	lea    r9,[rbp-0x49]
   14000e5be:	mov    edx,0x61230d37
   14000e5c3:	mov    r8d,0x1
   14000e5c9:	mov    rcx,rbx
   14000e5cc:	call   QWORD PTR [rax]
   14000e5ce:	mov    rcx,QWORD PTR [rbp+0x37]
   14000e5d2:	xor    rcx,rsp
   14000e5d5:	call   0x1400265a0
   14000e5da:	mov    rbx,QWORD PTR [rsp+0xf0]
   14000e5e2:	add    rsp,0xc0
   14000e5e9:	pop    rdi
   14000e5ea:	pop    rsi
   14000e5eb:	pop    rbp
   14000e5ec:	ret    
   14000e5ed:	int3   
   14000e5ee:	int3   
   14000e5ef:	int3   
   14000e5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e5f5:	mov    QWORD PTR [rsp+0x10],rbp
   14000e5fa:	mov    QWORD PTR [rsp+0x18],rsi
   14000e5ff:	push   rdi
   14000e600:	push   r14
   14000e602:	push   r15
   14000e604:	sub    rsp,0x70
   14000e608:	xor    r15d,r15d
   14000e60b:	mov    rdi,rdx
   14000e60e:	mov    rsi,rcx
   14000e611:	test   rdx,rdx
   14000e614:	je     0x14000e619
   14000e616:	mov    QWORD PTR [rdx],r15
   14000e619:	or     rbp,0xffffffffffffffff
   14000e61d:	inc    rbp
   14000e620:	cmp    WORD PTR [rcx+rbp*2],r15w
   14000e625:	jne    0x14000e61d
   14000e627:	cmp    QWORD PTR [rip+0x4c21a],r15        # 0x14005a848
   14000e62e:	mov    rbx,r15
   14000e631:	lea    r14,[rip+0x4c208]        # 0x14005a840
   14000e638:	je     0x14000e67c
   14000e63a:	mov    r8,QWORD PTR [r14+0x8]
   14000e63e:	or     rbx,0xffffffffffffffff
   14000e642:	inc    rbx
   14000e645:	cmp    WORD PTR [r8+rbx*2],r15w
   14000e64a:	jne    0x14000e642
   14000e64c:	cmp    rbp,rbx
   14000e64f:	jb     0x14000e672
   14000e651:	mov    r9d,ebx
   14000e654:	mov    edx,0x1
   14000e659:	mov    ecx,0x409
   14000e65e:	mov    DWORD PTR [rsp+0x28],ebx
   14000e662:	mov    QWORD PTR [rsp+0x20],rsi
   14000e667:	call   QWORD PTR [rip+0x32d73]        # 0x1400413e0
   14000e66d:	cmp    eax,0x2
   14000e670:	je     0x14000e67c
   14000e672:	add    r14,0x10
   14000e676:	cmp    QWORD PTR [r14+0x8],r15
   14000e67a:	jne    0x14000e63a
   14000e67c:	mov    ecx,DWORD PTR [r14]
   14000e67f:	test   ecx,ecx
   14000e681:	je     0x14000e716
   14000e687:	lea    eax,[rcx-0x5]
   14000e68a:	cmp    eax,0x1
   14000e68d:	jbe    0x14000e6d1
   14000e68f:	cmp    ecx,0x8
   14000e692:	jne    0x14000e6f9
   14000e694:	cmp    rbp,rbx
   14000e697:	jne    0x14000e6a7
   14000e699:	test   rdi,rdi
   14000e69c:	je     0x14000e6a7
   14000e69e:	lea    rax,[rip+0x379bb]        # 0x140046060
   14000e6a5:	jmp    0x14000e6cc
   14000e6a7:	lea    rax,[rbx+0x1]
   14000e6ab:	cmp    rbp,rax
   14000e6ae:	jbe    0x14000e740
   14000e6b4:	cmp    WORD PTR [rsi+rbx*2],0x2c
   14000e6b9:	jne    0x14000e740
   14000e6bf:	test   rdi,rdi
   14000e6c2:	je     0x14000e6f9
   14000e6c4:	lea    rax,[rsi+0x2]
   14000e6c8:	lea    rax,[rax+rbx*2]
   14000e6cc:	mov    QWORD PTR [rdi],rax
   14000e6cf:	jmp    0x14000e6f9
   14000e6d1:	lea    rax,[rbx+0x1]
   14000e6d5:	cmp    rbp,rax
   14000e6d8:	jbe    0x14000e76a
   14000e6de:	cmp    WORD PTR [rsi+rbx*2],0x2c
   14000e6e3:	jne    0x14000e76a
   14000e6e9:	test   rdi,rdi
   14000e6ec:	je     0x14000e6f9
   14000e6ee:	lea    rcx,[rsi+0x2]
   14000e6f2:	lea    rcx,[rcx+rbx*2]
   14000e6f6:	mov    QWORD PTR [rdi],rcx
   14000e6f9:	mov    eax,DWORD PTR [r14]
   14000e6fc:	lea    r11,[rsp+0x70]
   14000e701:	mov    rbx,QWORD PTR [r11+0x20]
   14000e705:	mov    rbp,QWORD PTR [r11+0x28]
   14000e709:	mov    rsi,QWORD PTR [r11+0x30]
   14000e70d:	mov    rsp,r11
   14000e710:	pop    r15
   14000e712:	pop    r14
   14000e714:	pop    rdi
   14000e715:	ret    
   14000e716:	lea    rcx,[rsp+0x30]
   14000e71b:	mov    r9,rsi
   14000e71e:	mov    edx,0xe12305a3
   14000e723:	mov    r8d,0x1
   14000e729:	call   0x140010a9c
   14000e72e:	lea    rdx,[rip+0x478bb]        # 0x140055ff0
   14000e735:	lea    rcx,[rsp+0x30]
   14000e73a:	call   0x140029fe8
   14000e73f:	int3   
   14000e740:	lea    rcx,[rsp+0x30]
   14000e745:	mov    r9,rsi
   14000e748:	mov    edx,0xe12305a3
   14000e74d:	mov    r8d,0x1
   14000e753:	call   0x140010a9c
   14000e758:	lea    rdx,[rip+0x47891]        # 0x140055ff0
   14000e75f:	lea    rcx,[rsp+0x30]
   14000e764:	call   0x140029fe8
   14000e769:	int3   
   14000e76a:	lea    rcx,[rsp+0x30]
   14000e76f:	mov    r9,rsi
   14000e772:	mov    edx,0xe12305a3
   14000e777:	mov    r8d,0x1
   14000e77d:	call   0x140010a9c
   14000e782:	lea    rdx,[rip+0x47867]        # 0x140055ff0
   14000e789:	lea    rcx,[rsp+0x30]
   14000e78e:	call   0x140029fe8
   14000e793:	int3   
   14000e794:	mov    r11,rsp
   14000e797:	mov    QWORD PTR [r11+0x8],rbx
   14000e79b:	push   rdi
   14000e79c:	sub    rsp,0x40
   14000e7a0:	and    QWORD PTR [r11-0x10],0x0
   14000e7a5:	and    QWORD PTR [r11-0x18],0x0
   14000e7aa:	xor    r9d,r9d
   14000e7ad:	lea    rax,[r11+0x10]
   14000e7b1:	mov    rbx,rcx
   14000e7b4:	lea    edx,[r9+0x17]
   14000e7b8:	mov    QWORD PTR [r11-0x20],rax
   14000e7bc:	and    DWORD PTR [rsp+0x20],0x0
   14000e7c1:	lea    rcx,[rip+0x4c238]        # 0x14005aa00
   14000e7c8:	xor    r8d,r8d
   14000e7cb:	call   QWORD PTR [rip+0x32f2f]        # 0x140041700
   14000e7d1:	call   QWORD PTR [rip+0x32c01]        # 0x1400413d8
   14000e7d7:	cmp    eax,0x7a
   14000e7da:	je     0x14000e7e4
   14000e7dc:	call   QWORD PTR [rip+0x32bf6]        # 0x1400413d8
   14000e7e2:	jmp    0x14000e85d
   14000e7e4:	mov    edx,DWORD PTR [rsp+0x58]
   14000e7e8:	xor    ecx,ecx
   14000e7ea:	call   QWORD PTR [rip+0x32af0]        # 0x1400412e0
   14000e7f0:	mov    rdi,rax
   14000e7f3:	test   rax,rax
   14000e7f6:	jne    0x14000e7fd
   14000e7f8:	lea    eax,[rdi+0x8]
   14000e7fb:	jmp    0x14000e85d
   14000e7fd:	and    QWORD PTR [rsp+0x38],0x0
   14000e803:	and    QWORD PTR [rsp+0x30],0x0
   14000e809:	lea    rax,[rsp+0x58]
   14000e80e:	mov    QWORD PTR [rsp+0x28],rax
   14000e813:	mov    eax,DWORD PTR [rsp+0x58]
   14000e817:	xor    r8d,r8d
   14000e81a:	lea    rcx,[rip+0x4c1df]        # 0x14005aa00
   14000e821:	lea    edx,[r8+0x17]
   14000e825:	mov    r9,rdi
   14000e828:	mov    DWORD PTR [rsp+0x20],eax
   14000e82c:	call   QWORD PTR [rip+0x32ece]        # 0x140041700
   14000e832:	test   eax,eax
   14000e834:	je     0x14000e84a
   14000e836:	mov    rcx,rdi
   14000e839:	call   QWORD PTR [rip+0x32819]        # 0x140041058
   14000e83f:	test   eax,eax
   14000e841:	je     0x14000e84a
   14000e843:	mov    QWORD PTR [rbx],rdi
   14000e846:	xor    eax,eax
   14000e848:	jmp    0x14000e85d
   14000e84a:	call   QWORD PTR [rip+0x32b88]        # 0x1400413d8
   14000e850:	mov    rcx,rdi
   14000e853:	mov    ebx,eax
   14000e855:	call   QWORD PTR [rip+0x32b6d]        # 0x1400413c8
   14000e85b:	mov    eax,ebx
   14000e85d:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e862:	add    rsp,0x40
   14000e866:	pop    rdi
   14000e867:	ret    
   14000e868:	mov    QWORD PTR [rsp+0x10],rbx
   14000e86d:	mov    QWORD PTR [rsp+0x18],rbp
   14000e872:	mov    QWORD PTR [rsp+0x20],rsi
   14000e877:	push   rdi
   14000e878:	sub    rsp,0x30
   14000e87c:	mov    rbx,rcx
   14000e87f:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e883:	call   QWORD PTR [rip+0x328af]        # 0x140041138
   14000e889:	mov    ecx,eax
   14000e88b:	mov    ebp,eax
   14000e88d:	call   0x140027888
   14000e892:	mov    rcx,QWORD PTR [rbx+0x18]
   14000e896:	lea    r8,[rsp+0x40]
   14000e89b:	mov    rdx,rax
   14000e89e:	mov    rsi,rax
   14000e8a1:	mov    DWORD PTR [rsp+0x40],ebp
   14000e8a5:	call   QWORD PTR [rip+0x32865]        # 0x140041110
   14000e8ab:	xor    edi,edi
   14000e8ad:	test   eax,eax
   14000e8af:	jne    0x14000e8bb
   14000e8b1:	call   QWORD PTR [rip+0x32b21]        # 0x1400413d8
   14000e8b7:	mov    ebx,eax
   14000e8b9:	jmp    0x14000e8bd
   14000e8bb:	mov    ebx,edi
   14000e8bd:	test   ebx,ebx
   14000e8bf:	je     0x14000e8cd
   14000e8c1:	mov    rcx,rsi
   14000e8c4:	call   0x140026c1c
   14000e8c9:	mov    eax,ebx
   14000e8cb:	jmp    0x14000e907
   14000e8cd:	lea    rcx,[rip+0x4c12c]        # 0x14005aa00
   14000e8d4:	mov    r9d,ebp
   14000e8d7:	mov    r8,rsi
   14000e8da:	mov    edx,0x17
   14000e8df:	mov    QWORD PTR [rsp+0x28],rdi
   14000e8e4:	mov    QWORD PTR [rsp+0x20],rdi
   14000e8e9:	call   QWORD PTR [rip+0x32e19]        # 0x140041708
   14000e8ef:	mov    rcx,rsi
   14000e8f2:	mov    ebx,eax
   14000e8f4:	call   0x140026c1c
   14000e8f9:	test   ebx,ebx
   14000e8fb:	jne    0x14000e905
   14000e8fd:	call   QWORD PTR [rip+0x32ad5]        # 0x1400413d8
   14000e903:	mov    edi,eax
   14000e905:	mov    eax,edi
   14000e907:	mov    rbx,QWORD PTR [rsp+0x48]
   14000e90c:	mov    rbp,QWORD PTR [rsp+0x50]
   14000e911:	mov    rsi,QWORD PTR [rsp+0x58]
   14000e916:	add    rsp,0x30
   14000e91a:	pop    rdi
   14000e91b:	ret    
   14000e91c:	rex push rbp
   14000e91e:	push   rbx
   14000e91f:	mov    rbp,rsp
   14000e922:	sub    rsp,0x78
   14000e926:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   14000e92e:	lea    rcx,[rbp+0x30]
   14000e932:	call   0x14000e794
   14000e937:	test   eax,eax
   14000e939:	jne    0x14000e9e5
   14000e93f:	mov    rdx,QWORD PTR [rbp+0x30]
   14000e943:	lea    rcx,[rbp-0x48]
   14000e947:	call   0x14000fe68
   14000e94c:	nop
   14000e94d:	mov    rcx,QWORD PTR [rbp+0x30]
   14000e951:	call   QWORD PTR [rip+0x32a71]        # 0x1400413c8
   14000e957:	xor    r9d,r9d
   14000e95a:	lea    r8,[rbp+0x28]
   14000e95e:	lea    edx,[r9+0x1]
   14000e962:	lea    rcx,[rip+0x377a7]        # 0x140046110
   14000e969:	call   QWORD PTR [rip+0x326e1]        # 0x140041050
   14000e96f:	lea    r9,[rbp+0x18]
   14000e973:	lea    r8,[rbp-0x58]
   14000e977:	lea    rdx,[rbp+0x20]
   14000e97b:	mov    rcx,QWORD PTR [rbp+0x28]
   14000e97f:	call   QWORD PTR [rip+0x3268b]        # 0x140041010
   14000e985:	test   eax,eax
   14000e987:	jne    0x14000e99b
   14000e989:	mov    rcx,QWORD PTR [rbp+0x28]
   14000e98d:	call   QWORD PTR [rip+0x32a35]        # 0x1400413c8
   14000e993:	call   QWORD PTR [rip+0x32a3f]        # 0x1400413d8
   14000e999:	jmp    0x14000e9d8
   14000e99b:	mov    rbx,QWORD PTR [rbp-0x58]
   14000e99f:	mov    rcx,rbx
   14000e9a2:	call   QWORD PTR [rip+0x327d0]        # 0x140041178
   14000e9a8:	test   eax,eax
   14000e9aa:	je     0x14000e9b8
   14000e9ac:	mov    rdx,rbx
   14000e9af:	lea    rcx,[rbp-0x48]
   14000e9b3:	call   0x1400100d0
   14000e9b8:	mov    rcx,QWORD PTR [rbp+0x28]
   14000e9bc:	call   QWORD PTR [rip+0x32a06]        # 0x1400413c8
   14000e9c2:	cmp    DWORD PTR [rbp-0x48],0x0
   14000e9c6:	jne    0x14000e9cf
   14000e9c8:	mov    ebx,0x53a
   14000e9cd:	jmp    0x14000e9da
   14000e9cf:	lea    rcx,[rbp-0x48]
   14000e9d3:	call   0x14000e868
   14000e9d8:	mov    ebx,eax
   14000e9da:	lea    rcx,[rbp-0x48]
   14000e9de:	call   0x14000fed0
   14000e9e3:	mov    eax,ebx
   14000e9e5:	add    rsp,0x78
   14000e9e9:	pop    rbx
   14000e9ea:	pop    rbp
   14000e9eb:	ret    
   14000e9ec:	mov    rax,rsp
   14000e9ef:	push   rbp
   14000e9f0:	push   rdi
   14000e9f1:	push   r14
   14000e9f3:	lea    rbp,[rax-0x38]
   14000e9f7:	sub    rsp,0x120
   14000e9fe:	mov    QWORD PTR [rbp-0x78],0xfffffffffffffffe
   14000ea06:	mov    QWORD PTR [rax+0x18],rbx
   14000ea0a:	mov    QWORD PTR [rax+0x20],rsi
   14000ea0e:	mov    rax,QWORD PTR [rip+0x4a673]        # 0x140059088
   14000ea15:	xor    rax,rsp
   14000ea18:	mov    QWORD PTR [rbp+0x10],rax
   14000ea1c:	mov    rsi,rdx
   14000ea1f:	mov    rbx,rcx
   14000ea22:	xor    r14d,r14d
   14000ea25:	mov    QWORD PTR [rsp+0x40],r14
   14000ea2a:	mov    QWORD PTR [rsp+0x58],r14
   14000ea2f:	mov    DWORD PTR [rsp+0x48],r14d
   14000ea34:	mov    DWORD PTR [rsp+0x4c],r14d
   14000ea39:	lea    r8d,[r14+0x1]
   14000ea3d:	lea    rdx,[rip+0x37784]        # 0x1400461c8
   14000ea44:	xor    ecx,ecx
   14000ea46:	call   QWORD PTR [rip+0x3274c]        # 0x140041198
   14000ea4c:	test   rax,rax
   14000ea4f:	je     0x14000ec25
   14000ea55:	lea    rcx,[rbx+0x8]
   14000ea59:	mov    r9,rax
   14000ea5c:	lea    r8,[rsp+0x4c]
   14000ea61:	lea    rdx,[rsp+0x48]
   14000ea66:	call   0x14000f5d4
   14000ea6b:	cmp    DWORD PTR [rsp+0x48],r14d
   14000ea70:	je     0x14000ec25
   14000ea76:	cmp    DWORD PTR [rsp+0x4c],r14d
   14000ea7b:	je     0x14000eab7
   14000ea7d:	lea    rax,[rsp+0x40]
   14000ea82:	mov    QWORD PTR [rsp+0x38],rax
   14000ea87:	mov    QWORD PTR [rsp+0x30],r14
   14000ea8c:	lea    rax,[rsp+0x58]
   14000ea91:	mov    QWORD PTR [rsp+0x28],rax
   14000ea96:	mov    QWORD PTR [rsp+0x20],r14
   14000ea9b:	xor    r9d,r9d
   14000ea9e:	lea    edx,[r14+0x1]
   14000eaa2:	lea    r8d,[r14+0x4]
   14000eaa6:	mov    rcx,QWORD PTR [rip+0x4bf7b]        # 0x14005aa28
   14000eaad:	call   QWORD PTR [rip+0x32595]        # 0x140041048
   14000eab3:	mov    ebx,eax
   14000eab5:	jmp    0x14000eb04
   14000eab7:	lea    rcx,[rsp+0x40]
   14000eabc:	call   0x14000e794
   14000eac1:	mov    ebx,eax
   14000eac3:	mov    rcx,QWORD PTR [rsp+0x40]
   14000eac8:	test   eax,eax
   14000eaca:	je     0x14000ead3
   14000eacc:	test   rcx,rcx
   14000eacf:	je     0x14000eb04
   14000ead1:	jmp    0x14000eaf9
   14000ead3:	lea    r9,[rsp+0x4c]
   14000ead8:	lea    r8,[rsp+0x58]
   14000eadd:	lea    rdx,[rsp+0x48]
   14000eae2:	call   QWORD PTR [rip+0x32528]        # 0x140041010
   14000eae8:	test   eax,eax
   14000eaea:	jne    0x14000eb0c
   14000eaec:	call   QWORD PTR [rip+0x328e6]        # 0x1400413d8
   14000eaf2:	mov    ebx,eax
   14000eaf4:	mov    rcx,QWORD PTR [rsp+0x40]
   14000eaf9:	call   QWORD PTR [rip+0x328c9]        # 0x1400413c8
   14000eaff:	mov    QWORD PTR [rsp+0x40],r14
   14000eb04:	test   ebx,ebx
   14000eb06:	jne    0x14000ec25
   14000eb0c:	lea    r8,[rsp+0x60]
   14000eb11:	lea    rdx,[rsp+0x50]
   14000eb16:	mov    rcx,QWORD PTR [rsp+0x58]
   14000eb1b:	call   QWORD PTR [rip+0x3251f]        # 0x140041040
   14000eb21:	test   eax,eax
   14000eb23:	jne    0x14000ec1a
   14000eb29:	cmp    DWORD PTR [rsp+0x50],r14d
   14000eb2e:	jbe    0x14000ec1a
   14000eb34:	mov    rax,QWORD PTR [rsi]
   14000eb37:	xor    r9d,r9d
   14000eb3a:	xor    r8d,r8d
   14000eb3d:	mov    edx,0x61230d3f
   14000eb42:	mov    rcx,rsi
   14000eb45:	call   QWORD PTR [rax]
   14000eb47:	mov    edi,r14d
   14000eb4a:	cmp    DWORD PTR [rsp+0x50],r14d
   14000eb4f:	jbe    0x14000ec0f
   14000eb55:	mov    eax,edi
   14000eb57:	lea    rbx,[rax+rax*2]
   14000eb5b:	shl    rbx,0x4
   14000eb5f:	add    rbx,QWORD PTR [rsp+0x60]
   14000eb64:	cmp    DWORD PTR [rbx+0x1c],r14d
   14000eb68:	jne    0x14000ebd4
   14000eb6a:	mov    rcx,QWORD PTR [rbx+0x28]
   14000eb6e:	call   QWORD PTR [rip+0x324bc]        # 0x140041030
   14000eb74:	test   eax,eax
   14000eb76:	je     0x14000ec03
   14000eb7c:	mov    rdx,QWORD PTR [rbx+0x28]
   14000eb80:	lea    rcx,[rbp-0x70]
   14000eb84:	call   0x14001016c
   14000eb89:	nop
   14000eb8a:	lea    rax,[rbp-0x40]
   14000eb8e:	cmp    QWORD PTR [rbp-0x28],0x8
   14000eb93:	cmovae rax,QWORD PTR [rbp-0x40]
   14000eb98:	mov    QWORD PTR [rsp+0x68],rax
   14000eb9d:	lea    rax,[rbp-0x20]
   14000eba1:	cmp    QWORD PTR [rbp-0x8],0x8
   14000eba6:	cmovae rax,QWORD PTR [rbp-0x20]
   14000ebab:	mov    QWORD PTR [rsp+0x70],rax
   14000ebb0:	mov    rax,QWORD PTR [rsi]
   14000ebb3:	lea    r9,[rsp+0x68]
   14000ebb8:	mov    edx,0x61230d40
   14000ebbd:	mov    r8d,0x2
   14000ebc3:	mov    rcx,rsi
   14000ebc6:	call   QWORD PTR [rax]
   14000ebc8:	nop
   14000ebc9:	lea    rcx,[rbp-0x70]
   14000ebcd:	call   0x140010294
   14000ebd2:	jmp    0x14000ec03
   14000ebd4:	lea    rax,[rip+0x372b5]        # 0x140045e90
   14000ebdb:	mov    QWORD PTR [rsp+0x78],rax
   14000ebe0:	lea    rax,[rip+0x372c1]        # 0x140045ea8
   14000ebe7:	mov    QWORD PTR [rbp-0x80],rax
   14000ebeb:	mov    rax,QWORD PTR [rsi]
   14000ebee:	lea    r9,[rsp+0x78]
   14000ebf3:	mov    edx,0x61230d40
   14000ebf8:	mov    r8d,0x2
   14000ebfe:	mov    rcx,rsi
   14000ec01:	call   QWORD PTR [rax]
   14000ec03:	inc    edi
   14000ec05:	cmp    edi,DWORD PTR [rsp+0x50]
   14000ec09:	jb     0x14000eb55
   14000ec0f:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ec14:	call   QWORD PTR [rip+0x327ae]        # 0x1400413c8
   14000ec1a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ec1f:	call   QWORD PTR [rip+0x327a3]        # 0x1400413c8
   14000ec25:	mov    rcx,QWORD PTR [rbp+0x10]
   14000ec29:	xor    rcx,rsp
   14000ec2c:	call   0x1400265a0
   14000ec31:	lea    r11,[rsp+0x120]
   14000ec39:	mov    rbx,QWORD PTR [r11+0x30]
   14000ec3d:	mov    rsi,QWORD PTR [r11+0x38]
   14000ec41:	mov    rsp,r11
   14000ec44:	pop    r14
   14000ec46:	pop    rdi
   14000ec47:	pop    rbp
   14000ec48:	ret    
   14000ec49:	int3   
   14000ec4a:	int3   
   14000ec4b:	int3   
   14000ec4c:	rex push rbx
   14000ec4e:	sub    rsp,0x140
   14000ec55:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000ec5e:	mov    rax,QWORD PTR [rip+0x4a423]        # 0x140059088
   14000ec65:	xor    rax,rsp
   14000ec68:	mov    QWORD PTR [rsp+0x130],rax
   14000ec70:	mov    ebx,ecx
   14000ec72:	mov    r8,QWORD PTR [rip+0x4be87]        # 0x14005ab00
   14000ec79:	mov    rdx,QWORD PTR [rip+0x4be88]        # 0x14005ab08
   14000ec80:	lea    rcx,[rsp+0xb8]
   14000ec88:	call   0x14000fca0
   14000ec8d:	nop
   14000ec8e:	lea    rax,[rip+0x36b13]        # 0x1400457a8
   14000ec95:	mov    QWORD PTR [rsp+0xb0],rax
   14000ec9d:	lea    rax,[rip+0x36aec]        # 0x140045790
   14000eca4:	mov    QWORD PTR [rsp+0xb0],rax
   14000ecac:	neg    ebx
   14000ecae:	sbb    edx,edx
   14000ecb0:	add    edx,0x3
   14000ecb3:	lea    rcx,[rsp+0xb8]
   14000ecbb:	call   0x14000fb24
   14000ecc0:	test   eax,eax
   14000ecc2:	jne    0x14000ed2e
   14000ecc4:	call   QWORD PTR [rip+0x3270e]        # 0x1400413d8
   14000ecca:	mov    ecx,eax
   14000eccc:	call   0x140011e70
   14000ecd1:	mov    rbx,rax
   14000ecd4:	lea    rcx,[rip+0x36855]        # 0x140045530
   14000ecdb:	test   rax,rax
   14000ecde:	cmovne rcx,rax
   14000ece2:	mov    QWORD PTR [rsp+0x20],rcx
   14000ece7:	mov    r9,QWORD PTR [rip+0x4be1a]        # 0x14005ab08
   14000ecee:	mov    edx,0xe123054d
   14000ecf3:	mov    r8d,0x2
   14000ecf9:	lea    rcx,[rsp+0x38]
   14000ecfe:	call   0x140010a9c
   14000ed03:	nop
   14000ed04:	mov    rcx,rbx
   14000ed07:	call   QWORD PTR [rip+0x326bb]        # 0x1400413c8
   14000ed0d:	lea    rdx,[rsp+0x38]
   14000ed12:	lea    rcx,[rsp+0x70]
   14000ed17:	call   0x140010afc
   14000ed1c:	lea    rdx,[rip+0x472cd]        # 0x140055ff0
   14000ed23:	lea    rcx,[rsp+0x70]
   14000ed28:	call   0x140029fe8
   14000ed2d:	nop
   14000ed2e:	lea    rcx,[rsp+0xb8]
   14000ed36:	call   0x14000fd20
   14000ed3b:	mov    rcx,QWORD PTR [rsp+0x130]
   14000ed43:	xor    rcx,rsp
   14000ed46:	call   0x1400265a0
   14000ed4b:	add    rsp,0x140
   14000ed52:	pop    rbx
   14000ed53:	ret    
   14000ed54:	mov    rax,rsp
   14000ed57:	push   rbp
   14000ed58:	push   rdi
   14000ed59:	push   r12
   14000ed5b:	push   r14
   14000ed5d:	push   r15
   14000ed5f:	lea    rbp,[rax-0x78]
   14000ed63:	sub    rsp,0x150
   14000ed6a:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000ed73:	mov    QWORD PTR [rax+0x8],rbx
   14000ed77:	mov    QWORD PTR [rax+0x20],rsi
   14000ed7b:	mov    rax,QWORD PTR [rip+0x4a306]        # 0x140059088
   14000ed82:	xor    rax,rsp
   14000ed85:	mov    QWORD PTR [rbp+0x40],rax
   14000ed89:	mov    rbx,r8
   14000ed8c:	mov    r12,rdx
   14000ed8f:	mov    esi,ecx
   14000ed91:	lea    eax,[rcx-0x1]
   14000ed94:	cmp    eax,0x7
   14000ed97:	ja     0x14000f053
   14000ed9d:	mov    r8,QWORD PTR [rip+0x4bd5c]        # 0x14005ab00
   14000eda4:	mov    rdx,QWORD PTR [rip+0x4bd5d]        # 0x14005ab08
   14000edab:	lea    rcx,[rbp-0x38]
   14000edaf:	call   0x14000fca0
   14000edb4:	nop
   14000edb5:	lea    rax,[rip+0x369ec]        # 0x1400457a8
   14000edbc:	mov    QWORD PTR [rbp-0x40],rax
   14000edc0:	lea    rax,[rip+0x369c9]        # 0x140045790
   14000edc7:	mov    QWORD PTR [rbp-0x40],rax
   14000edcb:	xor    r14d,r14d
   14000edce:	mov    DWORD PTR [rsp+0x38],r14d
   14000edd3:	xor    r15d,r15d
   14000edd6:	mov    DWORD PTR [rsp+0x30],r15d
   14000eddb:	lea    edi,[r14+0x1]
   14000eddf:	mov    r8d,edi
   14000ede2:	lea    rdx,[rip+0x373df]        # 0x1400461c8
   14000ede9:	xor    ecx,ecx
   14000edeb:	call   QWORD PTR [rip+0x323a7]        # 0x140041198
   14000edf1:	test   rax,rax
   14000edf4:	je     0x14000ee16
   14000edf6:	mov    r9,rax
   14000edf9:	lea    r8,[rsp+0x30]
   14000edfe:	lea    rdx,[rsp+0x38]
   14000ee03:	lea    rcx,[rbp-0x38]
   14000ee07:	call   0x14000f5d4
   14000ee0c:	mov    r15d,DWORD PTR [rsp+0x30]
   14000ee11:	mov    r14d,DWORD PTR [rsp+0x38]
   14000ee16:	cmp    esi,edi
   14000ee18:	je     0x14000f038
   14000ee1e:	cmp    esi,0x2
   14000ee21:	je     0x14000f023
   14000ee27:	cmp    esi,0x3
   14000ee2a:	je     0x14000f00e
   14000ee30:	cmp    esi,0x4
   14000ee33:	je     0x14000effc
   14000ee39:	jbe    0x14000efd1
   14000ee3f:	cmp    esi,0x6
   14000ee42:	jbe    0x14000efbb
   14000ee48:	cmp    esi,0x7
   14000ee4b:	je     0x14000ef16
   14000ee51:	cmp    esi,0x8
   14000ee54:	jne    0x14000efd1
   14000ee5a:	test   r14d,r14d
   14000ee5d:	jne    0x14000ee6e
   14000ee5f:	xor    r8d,r8d
   14000ee62:	lea    rdx,[rbp-0x40]
   14000ee66:	mov    rcx,rbx
   14000ee69:	call   0x14000dedc
   14000ee6e:	or     esi,0xffffffff
   14000ee71:	mov    DWORD PTR [rsp+0x28],esi
   14000ee75:	lea    rax,[rip+0x371e4]        # 0x140046060
   14000ee7c:	mov    QWORD PTR [rsp+0x20],rax
   14000ee81:	mov    r9d,esi
   14000ee84:	mov    r8,r12
   14000ee87:	mov    edx,edi
   14000ee89:	mov    r14d,0x409
   14000ee8f:	mov    ecx,r14d
   14000ee92:	call   QWORD PTR [rip+0x32548]        # 0x1400413e0
   14000ee98:	cmp    eax,0x2
   14000ee9b:	jne    0x14000eeab
   14000ee9d:	mov    ecx,edi
   14000ee9f:	call   0x14000ec4c
   14000eea4:	mov    edx,0x61230d44
   14000eea9:	jmp    0x14000eedd
   14000eeab:	mov    DWORD PTR [rsp+0x28],esi
   14000eeaf:	lea    rax,[rip+0x367e2]        # 0x140045698
   14000eeb6:	mov    QWORD PTR [rsp+0x20],rax
   14000eebb:	mov    r9d,esi
   14000eebe:	mov    r8,r12
   14000eec1:	mov    edx,edi
   14000eec3:	mov    ecx,r14d
   14000eec6:	call   QWORD PTR [rip+0x32514]        # 0x1400413e0
   14000eecc:	cmp    eax,0x2
   14000eecf:	jne    0x14000eef1
   14000eed1:	xor    ecx,ecx
   14000eed3:	call   0x14000ec4c
   14000eed8:	mov    edx,0x61230d45
   14000eedd:	mov    rax,QWORD PTR [rbx]
   14000eee0:	xor    r9d,r9d
   14000eee3:	xor    r8d,r8d
   14000eee6:	mov    rcx,rbx
   14000eee9:	call   QWORD PTR [rax]
   14000eeeb:	nop
   14000eeec:	jmp    0x14000f048
   14000eef1:	mov    r9,r12
   14000eef4:	mov    r8d,edi
   14000eef7:	mov    edx,0xe12305a3
   14000eefc:	lea    rcx,[rbp-0x80]
   14000ef00:	call   0x140010a9c
   14000ef05:	lea    rdx,[rip+0x470e4]        # 0x140055ff0
   14000ef0c:	lea    rcx,[rbp-0x80]
   14000ef10:	call   0x140029fe8
   14000ef15:	int3   
   14000ef16:	test   r15d,r15d
   14000ef19:	je     0x14000ef22
   14000ef1b:	mov    edx,0x61230d3c
   14000ef20:	jmp    0x14000ef31
   14000ef22:	test   r14d,r14d
   14000ef25:	mov    edx,0x61230d3d
   14000ef2a:	jne    0x14000ef31
   14000ef2c:	mov    edx,0x61230d3e
   14000ef31:	mov    rax,QWORD PTR [rip+0x4bbd0]        # 0x14005ab08
   14000ef38:	mov    QWORD PTR [rsp+0x38],rax
   14000ef3d:	mov    rax,QWORD PTR [rbx]
   14000ef40:	lea    r9,[rsp+0x38]
   14000ef45:	mov    r8d,edi
   14000ef48:	mov    rcx,rbx
   14000ef4b:	call   QWORD PTR [rax]
   14000ef4d:	mov    DWORD PTR [rsp+0x30],0x4
   14000ef55:	mov    r8d,edi
   14000ef58:	lea    rdx,[rip+0x37269]        # 0x1400461c8
   14000ef5f:	xor    ecx,ecx
   14000ef61:	call   QWORD PTR [rip+0x32231]        # 0x140041198
   14000ef67:	test   rax,rax
   14000ef6a:	je     0x14000efa9
   14000ef6c:	mov    r8,rax
   14000ef6f:	lea    rdx,[rsp+0x30]
   14000ef74:	lea    rcx,[rbp-0x38]
   14000ef78:	call   0x14000fa60
   14000ef7d:	test   eax,eax
   14000ef7f:	je     0x14000efa9
   14000ef81:	cmp    DWORD PTR [rsp+0x30],0x2
   14000ef86:	jne    0x14000ef8f
   14000ef88:	mov    edx,0x61230d44
   14000ef8d:	jmp    0x14000ef9b
   14000ef8f:	cmp    DWORD PTR [rsp+0x30],0x3
   14000ef94:	jne    0x14000efa9
   14000ef96:	mov    edx,0x61230d45
   14000ef9b:	mov    rax,QWORD PTR [rbx]
   14000ef9e:	xor    r9d,r9d
   14000efa1:	xor    r8d,r8d
   14000efa4:	mov    rcx,rbx
   14000efa7:	call   QWORD PTR [rax]
   14000efa9:	mov    rdx,rbx
   14000efac:	lea    rcx,[rbp-0x40]
   14000efb0:	call   0x14000e9ec
   14000efb5:	nop
   14000efb6:	jmp    0x14000f048
   14000efbb:	mov    rax,QWORD PTR [rbx]
   14000efbe:	xor    r9d,r9d
   14000efc1:	xor    r8d,r8d
   14000efc4:	mov    edx,0x61230d38
   14000efc9:	mov    rcx,rbx
   14000efcc:	call   QWORD PTR [rax]
   14000efce:	nop
   14000efcf:	jmp    0x14000f048
   14000efd1:	lea    r9,[rip+0x36558]        # 0x140045530
   14000efd8:	mov    r8d,edi
   14000efdb:	mov    edx,0xe12305a3
   14000efe0:	lea    rcx,[rsp+0x48]
   14000efe5:	call   0x140010a9c
   14000efea:	lea    rdx,[rip+0x46fff]        # 0x140055ff0
   14000eff1:	lea    rcx,[rsp+0x48]
   14000eff6:	call   0x140029fe8
   14000effb:	int3   
   14000effc:	mov    r9d,r15d
   14000efff:	lea    rdx,[rbp-0x40]
   14000f003:	mov    rcx,rbx
   14000f006:	call   0x14000e228
   14000f00b:	nop
   14000f00c:	jmp    0x14000f048
   14000f00e:	mov    r9d,r15d
   14000f011:	mov    r8d,r14d
   14000f014:	lea    rdx,[rbp-0x40]
   14000f018:	mov    rcx,rbx
   14000f01b:	call   0x14000e020
   14000f020:	nop
   14000f021:	jmp    0x14000f048
   14000f023:	mov    r9d,r15d
   14000f026:	mov    r8d,r14d
   14000f029:	lea    rdx,[rbp-0x40]
   14000f02d:	mov    rcx,rbx
   14000f030:	call   0x14000e490
   14000f035:	nop
   14000f036:	jmp    0x14000f048
   14000f038:	mov    r8d,r14d
   14000f03b:	lea    rdx,[rbp-0x40]
   14000f03f:	mov    rcx,rbx
   14000f042:	call   0x14000dedc
   14000f047:	nop
   14000f048:	lea    rcx,[rbp-0x38]
   14000f04c:	call   0x14000fd20
   14000f051:	jmp    0x14000f081
   14000f053:	lea    r9,[rip+0x364d6]        # 0x140045530
   14000f05a:	mov    edx,0xe12305a3
   14000f05f:	mov    r8d,0x1
   14000f065:	lea    rcx,[rsp+0x48]
   14000f06a:	call   0x140010a9c
   14000f06f:	lea    rdx,[rip+0x46f7a]        # 0x140055ff0
   14000f076:	lea    rcx,[rsp+0x48]
   14000f07b:	call   0x140029fe8
   14000f080:	int3   
   14000f081:	mov    rcx,QWORD PTR [rbp+0x40]
   14000f085:	xor    rcx,rsp
   14000f088:	call   0x1400265a0
   14000f08d:	lea    r11,[rsp+0x150]
   14000f095:	mov    rbx,QWORD PTR [r11+0x30]
   14000f099:	mov    rsi,QWORD PTR [r11+0x48]
   14000f09d:	mov    rsp,r11
   14000f0a0:	pop    r15
   14000f0a2:	pop    r14
   14000f0a4:	pop    r12
   14000f0a6:	pop    rdi
   14000f0a7:	pop    rbp
   14000f0a8:	ret    
   14000f0a9:	int3   
   14000f0aa:	int3   
   14000f0ab:	int3   
   14000f0ac:	mov    rax,rsp
   14000f0af:	mov    QWORD PTR [rax+0x10],rdx
   14000f0b3:	push   rdi
   14000f0b4:	sub    rsp,0x60
   14000f0b8:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14000f0c0:	mov    QWORD PTR [rax+0x8],rbx
   14000f0c4:	mov    rdi,rdx
   14000f0c7:	xor    ebx,ebx
   14000f0c9:	lea    rdx,[rax+0x18]
   14000f0cd:	call   0x14000e5f0
   14000f0d2:	mov    r8,rdi
   14000f0d5:	mov    rdx,QWORD PTR [rsp+0x80]
   14000f0dd:	mov    ecx,eax
   14000f0df:	call   0x14000ed54
   14000f0e4:	nop
   14000f0e5:	jmp    0x14000f0ee
   14000f0e7:	mov    ebx,DWORD PTR [rsp+0x80]
   14000f0ee:	mov    eax,ebx
   14000f0f0:	mov    rbx,QWORD PTR [rsp+0x70]
   14000f0f5:	add    rsp,0x60
   14000f0f9:	pop    rdi
   14000f0fa:	ret    
   14000f0fb:	int3   
   14000f0fc:	mov    rax,rsp
   14000f0ff:	push   r13
   14000f101:	push   r14
   14000f103:	push   r15
   14000f105:	sub    rsp,0xb60
   14000f10c:	mov    QWORD PTR [rax-0xac0],0xfffffffffffffffe
   14000f117:	mov    QWORD PTR [rax+0x8],rbx
   14000f11b:	mov    QWORD PTR [rax+0x18],rsi
   14000f11f:	mov    QWORD PTR [rax+0x20],rdi
   14000f123:	mov    rax,QWORD PTR [rip+0x49f5e]        # 0x140059088
   14000f12a:	xor    rax,rsp
   14000f12d:	mov    QWORD PTR [rsp+0xb50],rax
   14000f135:	mov    r13,rdx
   14000f138:	mov    r15d,ecx
   14000f13b:	xor    edi,edi
   14000f13d:	mov    QWORD PTR [rsp+0x60],rdi
   14000f142:	mov    DWORD PTR [rsp+0x68],edi
   14000f146:	mov    QWORD PTR [rsp+0x58],rdi
   14000f14b:	xor    ecx,ecx
   14000f14d:	call   QWORD PTR [rip+0x325ed]        # 0x140041740
   14000f153:	call   QWORD PTR [rip+0x325ef]        # 0x140041748
   14000f159:	mov    rbx,rax
   14000f15c:	call   QWORD PTR [rip+0x3253e]        # 0x1400416a0
   14000f162:	movzx  esi,ax
   14000f165:	lea    rcx,[rsp+0x58]
   14000f16a:	call   0x1400158b4
   14000f16f:	mov    r8d,0x104
   14000f175:	lea    rdx,[rsp+0xa40]
   14000f17d:	mov    rcx,rbx
   14000f180:	call   QWORD PTR [rip+0x32512]        # 0x140041698
   14000f186:	test   eax,eax
   14000f188:	je     0x14000f1a6
   14000f18a:	mov    r8d,esi
   14000f18d:	lea    rdx,[rsp+0xa40]
   14000f195:	lea    rcx,[rsp+0x58]
   14000f19a:	call   0x1400158f4
   14000f19f:	mov    rcx,QWORD PTR [rsp+0x60]
   14000f1a4:	jmp    0x14000f1ae
   14000f1a6:	mov    rcx,rdi
   14000f1a9:	mov    QWORD PTR [rsp+0x60],rcx
   14000f1ae:	call   QWORD PTR [rip+0x3258c]        # 0x140041740
   14000f1b4:	mov    esi,0x1
   14000f1b9:	cmp    r15d,esi
   14000f1bc:	jle    0x14000f1fd
   14000f1be:	mov    rcx,QWORD PTR [r13+0x8]
   14000f1c2:	movzx  eax,WORD PTR [rcx]
   14000f1c5:	sub    ax,0x2d
   14000f1c9:	mov    r8d,0xfffd
   14000f1cf:	test   r8w,ax
   14000f1d3:	jne    0x14000f1fd
   14000f1d5:	movzx  eax,WORD PTR [rcx+0x2]
   14000f1d9:	sub    ax,0x55
   14000f1dd:	mov    r8d,0xffdf
   14000f1e3:	test   r8w,ax
   14000f1e7:	jne    0x14000f1fd
   14000f1e9:	cmp    WORD PTR [rcx+0x4],di
   14000f1ed:	jne    0x14000f1fd
   14000f1ef:	mov    BYTE PTR [rip+0x4d86e],sil        # 0x14005ca64
   14000f1f6:	sub    r15d,esi
   14000f1f9:	add    r13,0x8
   14000f1fd:	call   0x140011c6c
   14000f202:	mov    r14,rax
   14000f205:	mov    QWORD PTR [rsp+0x38],rax
   14000f20a:	mov    rdx,rax
   14000f20d:	lea    rcx,[rsp+0xc0]
   14000f215:	call   0x140004354
   14000f21a:	nop
   14000f21b:	mov    r8,r13
   14000f21e:	mov    edx,r15d
   14000f221:	lea    rcx,[rsp+0xc0]
   14000f229:	call   0x140004760
   14000f22e:	test   eax,eax
   14000f230:	je     0x14000f438
   14000f236:	cmp    DWORD PTR [rsp+0xf0],0x99999999
   14000f241:	jne    0x14000f286
   14000f243:	xor    r8d,r8d
   14000f246:	mov    ecx,0x21230003
   14000f24b:	call   0x140011d9c
   14000f250:	mov    rbx,rax
   14000f253:	lea    rax,[rip+0x36eee]        # 0x140046148
   14000f25a:	mov    QWORD PTR [rsp+0x40],rax
   14000f25f:	mov    QWORD PTR [rsp+0x48],rbx
   14000f264:	mov    r10,QWORD PTR [r14]
   14000f267:	lea    r9,[rsp+0x40]
   14000f26c:	mov    edx,0x61230d46
   14000f271:	mov    r8d,0x2
   14000f277:	mov    rcx,r14
   14000f27a:	call   QWORD PTR [r10]
   14000f27d:	mov    rcx,rbx
   14000f280:	call   QWORD PTR [rip+0x32142]        # 0x1400413c8
   14000f286:	xor    edx,edx
   14000f288:	xor    ecx,ecx
   14000f28a:	call   QWORD PTR [rip+0x324d8]        # 0x140041768
   14000f290:	cmp    DWORD PTR [rip+0x4d836],edi        # 0x14005cacc
   14000f296:	jne    0x14000f2a3
   14000f298:	call   0x140012b10
   14000f29d:	mov    DWORD PTR [rip+0x4d829],esi        # 0x14005cacc
   14000f2a3:	cmp    DWORD PTR [rip+0x4d913],edi        # 0x14005cbbc
   14000f2a9:	jne    0x14000f2d4
   14000f2ab:	mov    rax,QWORD PTR [r14]
   14000f2ae:	xor    r9d,r9d
   14000f2b1:	xor    r8d,r8d
   14000f2b4:	mov    edx,0xe1230514
   14000f2b9:	mov    rcx,r14
   14000f2bc:	call   QWORD PTR [rax]
   14000f2be:	call   QWORD PTR [rip+0x324c4]        # 0x140041788
   14000f2c4:	mov    rax,QWORD PTR [r14]
   14000f2c7:	mov    edx,esi
   14000f2c9:	mov    rcx,r14
   14000f2cc:	call   QWORD PTR [rax+0x10]
   14000f2cf:	jmp    0x14000f438
   14000f2d4:	mov    QWORD PTR [rsp+0x78],rdi
   14000f2d9:	mov    QWORD PTR [rsp+0x88],rdi
   14000f2e1:	mov    QWORD PTR [rsp+0x98],rdi
   14000f2e9:	call   QWORD PTR [rip+0x32251]        # 0x140041540
   14000f2ef:	lea    r8,[rsp+0x70]
   14000f2f4:	mov    edx,0x28
   14000f2f9:	mov    rcx,rax
   14000f2fc:	call   QWORD PTR [rip+0x31dd6]        # 0x1400410d8
   14000f302:	neg    eax
   14000f304:	sbb    rcx,rcx
   14000f307:	and    rcx,QWORD PTR [rsp+0x70]
   14000f30c:	mov    QWORD PTR [rsp+0x70],rcx
   14000f311:	cmp    QWORD PTR [rsp+0x70],rdi
   14000f316:	jne    0x14000f31f
   14000f318:	mov    ecx,0x6
   14000f31d:	jmp    0x14000f39c
   14000f31f:	cmp    QWORD PTR [rsp+0x78],rdi
   14000f324:	jne    0x14000f339
   14000f326:	lea    rcx,[rsp+0x70]
   14000f32b:	call   0x140015b70
   14000f330:	test   eax,eax
   14000f332:	jne    0x14000f339
   14000f334:	lea    ecx,[rax+0xd]
   14000f337:	jmp    0x14000f39c
   14000f339:	lea    r8,[rsp+0x40]
   14000f33e:	lea    rdx,[rip+0x36e23]        # 0x140046168
   14000f345:	xor    ecx,ecx
   14000f347:	call   QWORD PTR [rip+0x31d7b]        # 0x1400410c8
   14000f34d:	test   eax,eax
   14000f34f:	je     0x14000f3a2
   14000f351:	mov    edx,edi
   14000f353:	mov    r8,QWORD PTR [rsp+0x78]
   14000f358:	cmp    DWORD PTR [r8],edi
   14000f35b:	jbe    0x14000f397
   14000f35d:	mov    rax,QWORD PTR [rsp+0x40]
   14000f362:	mov    r10d,DWORD PTR [rsp+0x44]
   14000f367:	mov    ecx,edx
   14000f369:	lea    r9,[rcx+rcx*2]
   14000f36d:	cmp    DWORD PTR [r8+r9*4+0x4],eax
   14000f372:	jne    0x14000f37b
   14000f374:	cmp    DWORD PTR [r8+r9*4+0x8],r10d
   14000f379:	je     0x14000f384
   14000f37b:	add    edx,esi
   14000f37d:	cmp    edx,DWORD PTR [r8]
   14000f380:	jae    0x14000f397
   14000f382:	jmp    0x14000f367
   14000f384:	mov    eax,edx
   14000f386:	add    rax,rsi
   14000f389:	lea    rax,[rax+rax*2]
   14000f38d:	mov    DWORD PTR [r8+rax*4],0x2
   14000f395:	jmp    0x14000f3a2
   14000f397:	mov    ecx,0x490
   14000f39c:	call   QWORD PTR [rip+0x31f7e]        # 0x140041320
   14000f3a2:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f3a7:	test   rcx,rcx
   14000f3aa:	jne    0x14000f3b9
   14000f3ac:	mov    ecx,0x6
   14000f3b1:	call   QWORD PTR [rip+0x31f69]        # 0x140041320
   14000f3b7:	jmp    0x14000f3e4
   14000f3b9:	mov    r8,QWORD PTR [rsp+0x78]
   14000f3be:	test   r8,r8
   14000f3c1:	jne    0x14000f3c9
   14000f3c3:	lea    ecx,[r8+0xd]
   14000f3c7:	jmp    0x14000f3b1
   14000f3c9:	mov    QWORD PTR [rsp+0x28],rdi
   14000f3ce:	mov    QWORD PTR [rsp+0x20],rdi
   14000f3d3:	mov    r9d,DWORD PTR [rsp+0x80]
   14000f3db:	xor    edx,edx
   14000f3dd:	call   QWORD PTR [rip+0x31cdd]        # 0x1400410c0
   14000f3e3:	nop
   14000f3e4:	mov    DWORD PTR [rsp+0x40],edi
   14000f3e8:	mov    QWORD PTR [rsp+0x48],r14
   14000f3ed:	mov    DWORD PTR [rsp+0x50],edi
   14000f3f1:	lea    rdx,[rsp+0xc0]
   14000f3f9:	lea    rcx,[rsp+0x40]
   14000f3fe:	call   0x14000784c
   14000f403:	mov    DWORD PTR [rsp+0x30],eax
   14000f407:	jmp    0x14000f413
   14000f409:	mov    r14,QWORD PTR [rsp+0x38]
   14000f40e:	mov    esi,0x1
   14000f413:	call   QWORD PTR [rip+0x3236f]        # 0x140041788
   14000f419:	test   r14,r14
   14000f41c:	je     0x14000f42a
   14000f41e:	mov    rax,QWORD PTR [r14]
   14000f421:	mov    edx,esi
   14000f423:	mov    rcx,r14
   14000f426:	call   QWORD PTR [rax+0x10]
   14000f429:	nop
   14000f42a:	lea    rcx,[rsp+0x70]
   14000f42f:	call   0x140015ccc
   14000f434:	mov    esi,DWORD PTR [rsp+0x30]
   14000f438:	lea    rcx,[rsp+0xc0]
   14000f440:	call   0x1400045ac
   14000f445:	nop
   14000f446:	lea    rcx,[rsp+0x58]
   14000f44b:	call   0x1400158b4
   14000f450:	mov    eax,esi
   14000f452:	mov    rcx,QWORD PTR [rsp+0xb50]
   14000f45a:	xor    rcx,rsp
   14000f45d:	call   0x1400265a0
   14000f462:	lea    r11,[rsp+0xb60]
   14000f46a:	mov    rbx,QWORD PTR [r11+0x20]
   14000f46e:	mov    rsi,QWORD PTR [r11+0x30]
   14000f472:	mov    rdi,QWORD PTR [r11+0x38]
   14000f476:	mov    rsp,r11
   14000f479:	pop    r15
   14000f47b:	pop    r14
   14000f47d:	pop    r13
   14000f47f:	ret    
   14000f480:	mov    rax,QWORD PTR [rcx]
   14000f483:	cmp    DWORD PTR [rax],0x80000003
   14000f489:	jne    0x14000f48e
   14000f48b:	xor    eax,eax
   14000f48d:	ret    
   14000f48e:	jmp    0x140022d3c
   14000f493:	int3   
   14000f494:	mov    QWORD PTR [rsp+0x8],rsi
   14000f499:	mov    QWORD PTR [rsp+0x10],rdi
   14000f49e:	mov    QWORD PTR [rsp+0x18],r14
   14000f4a3:	push   r15
   14000f4a5:	sub    rsp,0x30
   14000f4a9:	mov    rsi,rdx
   14000f4ac:	movsxd r15,ecx
   14000f4af:	xor    r9d,r9d
   14000f4b2:	xor    r8d,r8d
   14000f4b5:	lea    edx,[r9+0x1]
   14000f4b9:	xor    ecx,ecx
   14000f4bb:	call   QWORD PTR [rip+0x31e0f]        # 0x1400412d0
   14000f4c1:	mov    DWORD PTR [rip+0x4df35],0x18        # 0x14005d400
   14000f4cb:	and    QWORD PTR [rip+0x4df35],0x0        # 0x14005d408
   14000f4d3:	mov    DWORD PTR [rip+0x4df33],0x1        # 0x14005d410
   14000f4dd:	call   0x140022cbc
   14000f4e2:	lea    rax,[rip+0x36c97]        # 0x140046180
   14000f4e9:	mov    QWORD PTR [rip+0x4b528],rax        # 0x14005aa18
   14000f4f0:	lea    rax,[rip+0x36aa9]        # 0x140045fa0
   14000f4f7:	mov    QWORD PTR [rip+0x4b512],rax        # 0x14005aa10
   14000f4fe:	lea    rcx,[rip+0xffffffffffffff7b]        # 0x14000f480
   14000f505:	call   QWORD PTR [rip+0x31dcd]        # 0x1400412d8
   14000f50b:	mov    DWORD PTR [rip+0x4d777],0x1        # 0x14005cc8c
   14000f515:	mov    edi,0x1
   14000f51a:	cmp    rdi,r15
   14000f51d:	jge    0x14000f589
   14000f51f:	mov    r8,QWORD PTR [rsi+rdi*8]
   14000f523:	movzx  eax,WORD PTR [r8]
   14000f527:	sub    ax,0x2d
   14000f52b:	mov    ecx,0xfffd
   14000f530:	test   cx,ax
   14000f533:	jne    0x14000f57d
   14000f535:	movzx  eax,WORD PTR [r8+0x2]
   14000f53a:	sub    ax,0x44
   14000f53e:	mov    ecx,0xffdf
   14000f543:	test   cx,ax
   14000f546:	jne    0x14000f57d
   14000f548:	cmp    WORD PTR [r8+0x4],0x3a
   14000f54e:	jne    0x14000f57d
   14000f550:	add    r8,0x6
   14000f554:	or     DWORD PTR [rsp+0x28],0xffffffff
   14000f559:	lea    rax,[rip+0x36c48]        # 0x1400461a8
   14000f560:	mov    QWORD PTR [rsp+0x20],rax
   14000f565:	or     r9d,0xffffffff
   14000f569:	lea    edx,[r9+0x2]
   14000f56d:	mov    ecx,0x409
   14000f572:	call   QWORD PTR [rip+0x31e68]        # 0x1400413e0
   14000f578:	cmp    eax,0x2
   14000f57b:	je     0x14000f582
   14000f57d:	inc    rdi
   14000f580:	jmp    0x14000f51a
   14000f582:	and    DWORD PTR [rip+0x4d703],0x0        # 0x14005cc8c
   14000f589:	mov    DWORD PTR [rip+0x4de6d],0x18        # 0x14005d400
   14000f593:	and    QWORD PTR [rip+0x4de6d],0x0        # 0x14005d408
   14000f59b:	mov    DWORD PTR [rip+0x4de6b],0x1        # 0x14005d410
   14000f5a5:	call   0x140022cbc
   14000f5aa:	nop
   14000f5ab:	mov    rdx,rsi
   14000f5ae:	mov    ecx,r15d
   14000f5b1:	call   0x14000f0fc
   14000f5b6:	jmp    0x14000f5bd
   14000f5b8:	mov    eax,0x1
   14000f5bd:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f5c2:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f5c7:	mov    r14,QWORD PTR [rsp+0x50]
   14000f5cc:	add    rsp,0x30
   14000f5d0:	pop    r15
   14000f5d2:	ret    
   14000f5d3:	int3   
   14000f5d4:	rex push rbx
   14000f5d6:	push   rsi
   14000f5d7:	push   rdi
   14000f5d8:	push   r14
   14000f5da:	sub    rsp,0x58
   14000f5de:	mov    rax,QWORD PTR [rip+0x49aa3]        # 0x140059088
   14000f5e5:	xor    rax,rsp
   14000f5e8:	mov    QWORD PTR [rsp+0x40],rax
   14000f5ed:	mov    r14,rdx
   14000f5f0:	lea    rdx,[rcx+0x38]
   14000f5f4:	mov    rdi,r9
   14000f5f7:	cmp    QWORD PTR [rdx+0x18],0x8
   14000f5fc:	mov    rsi,r8
   14000f5ff:	jb     0x14000f604
   14000f601:	mov    rdx,QWORD PTR [rdx]
   14000f604:	mov    r8d,0x84
   14000f60a:	mov    rcx,r9
   14000f60d:	call   QWORD PTR [rip+0x31ba5]        # 0x1400411b8
   14000f613:	mov    rbx,rax
   14000f616:	test   rax,rax
   14000f619:	je     0x14000f64a
   14000f61b:	lea    rdx,[rsp+0x20]
   14000f620:	mov    rcx,rax
   14000f623:	mov    DWORD PTR [r14],0x1
   14000f62a:	call   QWORD PTR [rip+0x31b70]        # 0x1400411a0
   14000f630:	test   eax,eax
   14000f632:	je     0x14000f641
   14000f634:	cmp    DWORD PTR [rsp+0x24],0x4
   14000f639:	jne    0x14000f641
   14000f63b:	mov    DWORD PTR [rsi],0x1
   14000f641:	mov    rcx,rbx
   14000f644:	call   QWORD PTR [rip+0x31b7e]        # 0x1400411c8
   14000f64a:	mov    rcx,rdi
   14000f64d:	call   QWORD PTR [rip+0x31b75]        # 0x1400411c8
   14000f653:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f658:	xor    rcx,rsp
   14000f65b:	call   0x1400265a0
   14000f660:	add    rsp,0x58
   14000f664:	pop    r14
   14000f666:	pop    rdi
   14000f667:	pop    rsi
   14000f668:	pop    rbx
   14000f669:	ret    
   14000f66a:	int3   
   14000f66b:	int3   
   14000f66c:	mov    QWORD PTR [rsp+0x18],rbx
   14000f671:	mov    QWORD PTR [rsp+0x20],rbp
   14000f676:	push   rsi
   14000f677:	push   rdi
   14000f678:	push   r14
   14000f67a:	sub    rsp,0x2d0
   14000f681:	mov    rax,QWORD PTR [rip+0x49a00]        # 0x140059088
   14000f688:	xor    rax,rsp
   14000f68b:	mov    QWORD PTR [rsp+0x2c0],rax
   14000f693:	xor    ebx,ebx
   14000f695:	mov    r14,rdx
   14000f698:	mov    rsi,rcx
   14000f69b:	lea    rdx,[rip+0x36b26]        # 0x1400461c8
   14000f6a2:	lea    r8d,[rbx+0x3]
   14000f6a6:	xor    ecx,ecx
   14000f6a8:	mov    edi,ebx
   14000f6aa:	call   QWORD PTR [rip+0x31ae8]        # 0x140041198
   14000f6b0:	mov    rbp,rax
   14000f6b3:	test   rax,rax
   14000f6b6:	je     0x14000f771
   14000f6bc:	lea    rdx,[rsp+0x70]
   14000f6c1:	mov    rcx,r14
   14000f6c4:	call   QWORD PTR [rip+0x31eee]        # 0x1400415b8
   14000f6ca:	cmp    rax,0xffffffffffffffff
   14000f6ce:	je     0x14000f754
   14000f6d4:	mov    rcx,rax
   14000f6d7:	call   QWORD PTR [rip+0x31eeb]        # 0x1400415c8
   14000f6dd:	lea    r8,[rsi+0x58]
   14000f6e1:	cmp    QWORD PTR [r8+0x18],0x8
   14000f6e6:	jb     0x14000f6eb
   14000f6e8:	mov    r8,QWORD PTR [r8]
   14000f6eb:	lea    rdx,[rsi+0x38]
   14000f6ef:	cmp    QWORD PTR [rdx+0x18],0x8
   14000f6f4:	jb     0x14000f6f9
   14000f6f6:	mov    rdx,QWORD PTR [rdx]
   14000f6f9:	mov    QWORD PTR [rsp+0x60],rbx
   14000f6fe:	mov    QWORD PTR [rsp+0x58],rbx
   14000f703:	mov    QWORD PTR [rsp+0x50],rbx
   14000f708:	mov    QWORD PTR [rsp+0x48],rbx
   14000f70d:	mov    QWORD PTR [rsp+0x40],rbx
   14000f712:	mov    QWORD PTR [rsp+0x38],r14
   14000f717:	mov    DWORD PTR [rsp+0x30],ebx
   14000f71b:	mov    r9d,0xe0000000
   14000f721:	mov    rcx,rbp
   14000f724:	mov    DWORD PTR [rsp+0x28],0x3
   14000f72c:	mov    DWORD PTR [rsp+0x20],0x1
   14000f734:	call   QWORD PTR [rip+0x31a96]        # 0x1400411d0
   14000f73a:	test   rax,rax
   14000f73d:	jne    0x14000f749
   14000f73f:	call   QWORD PTR [rip+0x31c93]        # 0x1400413d8
   14000f745:	mov    edi,eax
   14000f747:	jmp    0x14000f759
   14000f749:	mov    rcx,rax
   14000f74c:	call   QWORD PTR [rip+0x31a76]        # 0x1400411c8
   14000f752:	jmp    0x14000f759
   14000f754:	mov    edi,0x2
   14000f759:	mov    rcx,rbp
   14000f75c:	call   QWORD PTR [rip+0x31a66]        # 0x1400411c8
   14000f762:	mov    ecx,edi
   14000f764:	call   QWORD PTR [rip+0x31bb6]        # 0x140041320
   14000f76a:	test   edi,edi
   14000f76c:	sete   bl
   14000f76f:	mov    eax,ebx
   14000f771:	mov    rcx,QWORD PTR [rsp+0x2c0]
   14000f779:	xor    rcx,rsp
   14000f77c:	call   0x1400265a0
   14000f781:	lea    r11,[rsp+0x2d0]
   14000f789:	mov    rbx,QWORD PTR [r11+0x30]
   14000f78d:	mov    rbp,QWORD PTR [r11+0x38]
   14000f791:	mov    rsp,r11
   14000f794:	pop    r14
   14000f796:	pop    rdi
   14000f797:	pop    rsi
   14000f798:	ret    
   14000f799:	int3   
   14000f79a:	int3   
   14000f79b:	int3   
   14000f79c:	mov    QWORD PTR [rsp+0x10],rbx
   14000f7a1:	mov    QWORD PTR [rsp+0x18],rbp
   14000f7a6:	mov    QWORD PTR [rsp+0x20],rsi
   14000f7ab:	push   rdi
   14000f7ac:	sub    rsp,0x50
   14000f7b0:	mov    rax,QWORD PTR [rip+0x498d1]        # 0x140059088
   14000f7b7:	xor    rax,rsp
   14000f7ba:	mov    QWORD PTR [rsp+0x40],rax
   14000f7bf:	xor    ebx,ebx
   14000f7c1:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000f7c5:	mov    rdi,rcx
   14000f7c8:	mov    esi,ebx
   14000f7ca:	je     0x14000f7d9
   14000f7cc:	mov    rcx,QWORD PTR [rcx]
   14000f7cf:	call   QWORD PTR [rip+0x31bb3]        # 0x140041388
   14000f7d5:	or     QWORD PTR [rdi],0xffffffffffffffff
   14000f7d9:	lea    rdx,[rip+0x369e8]        # 0x1400461c8
   14000f7e0:	mov    r8d,0x3
   14000f7e6:	xor    ecx,ecx
   14000f7e8:	call   QWORD PTR [rip+0x319aa]        # 0x140041198
   14000f7ee:	mov    rbp,rax
   14000f7f1:	test   rax,rax
   14000f7f4:	je     0x14000f880
   14000f7fa:	lea    rdx,[rdi+0x38]
   14000f7fe:	cmp    QWORD PTR [rdx+0x18],0x8
   14000f803:	jb     0x14000f808
   14000f805:	mov    rdx,QWORD PTR [rdx]
   14000f808:	mov    r8d,0x20010084
   14000f80e:	mov    rcx,rax
   14000f811:	call   QWORD PTR [rip+0x319a1]        # 0x1400411b8
   14000f817:	mov    rdi,rax
   14000f81a:	test   rax,rax
   14000f81d:	je     0x14000f867
   14000f81f:	lea    rdx,[rsp+0x20]
   14000f824:	mov    rcx,rax
   14000f827:	call   QWORD PTR [rip+0x31973]        # 0x1400411a0
   14000f82d:	test   eax,eax
   14000f82f:	je     0x14000f854
   14000f831:	mov    eax,DWORD PTR [rsp+0x24]
   14000f835:	dec    eax
   14000f837:	test   eax,0xfffffffd
   14000f83c:	je     0x14000f845
   14000f83e:	mov    ebx,0x420
   14000f843:	jmp    0x14000f85c
   14000f845:	mov    rcx,rdi
   14000f848:	call   QWORD PTR [rip+0x31972]        # 0x1400411c0
   14000f84e:	mov    esi,eax
   14000f850:	test   eax,eax
   14000f852:	jne    0x14000f85c
   14000f854:	call   QWORD PTR [rip+0x31b7e]        # 0x1400413d8
   14000f85a:	mov    ebx,eax
   14000f85c:	mov    rcx,rdi
   14000f85f:	call   QWORD PTR [rip+0x31963]        # 0x1400411c8
   14000f865:	jmp    0x14000f86f
   14000f867:	call   QWORD PTR [rip+0x31b6b]        # 0x1400413d8
   14000f86d:	mov    ebx,eax
   14000f86f:	mov    rcx,rbp
   14000f872:	call   QWORD PTR [rip+0x31950]        # 0x1400411c8
   14000f878:	mov    ecx,ebx
   14000f87a:	call   QWORD PTR [rip+0x31aa0]        # 0x140041320
   14000f880:	mov    eax,esi
   14000f882:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f887:	xor    rcx,rsp
   14000f88a:	call   0x1400265a0
   14000f88f:	mov    rbx,QWORD PTR [rsp+0x68]
   14000f894:	mov    rbp,QWORD PTR [rsp+0x70]
   14000f899:	mov    rsi,QWORD PTR [rsp+0x78]
   14000f89e:	add    rsp,0x50
   14000f8a2:	pop    rdi
   14000f8a3:	ret    
   14000f8a4:	mov    QWORD PTR [rsp+0x10],rbx
   14000f8a9:	mov    QWORD PTR [rsp+0x18],rbp
   14000f8ae:	mov    QWORD PTR [rsp+0x20],rsi
   14000f8b3:	push   rdi
   14000f8b4:	sub    rsp,0x50
   14000f8b8:	mov    rax,QWORD PTR [rip+0x497c9]        # 0x140059088
   14000f8bf:	xor    rax,rsp
   14000f8c2:	mov    QWORD PTR [rsp+0x40],rax
   14000f8c7:	xor    ebx,ebx
   14000f8c9:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000f8cd:	mov    rdi,rcx
   14000f8d0:	mov    esi,ebx
   14000f8d2:	je     0x14000f8e1
   14000f8d4:	mov    rcx,QWORD PTR [rcx]
   14000f8d7:	call   QWORD PTR [rip+0x31aab]        # 0x140041388
   14000f8dd:	or     QWORD PTR [rdi],0xffffffffffffffff
   14000f8e1:	lea    rdx,[rip+0x368e0]        # 0x1400461c8
   14000f8e8:	mov    r8d,0x1
   14000f8ee:	xor    ecx,ecx
   14000f8f0:	call   QWORD PTR [rip+0x318a2]        # 0x140041198
   14000f8f6:	mov    rbp,rax
   14000f8f9:	test   rax,rax
   14000f8fc:	je     0x14000f968
   14000f8fe:	lea    rdx,[rdi+0x38]
   14000f902:	cmp    QWORD PTR [rdx+0x18],0x8
   14000f907:	jb     0x14000f90c
   14000f909:	mov    rdx,QWORD PTR [rdx]
   14000f90c:	mov    r8d,0x200000a4
   14000f912:	mov    rcx,rax
   14000f915:	call   QWORD PTR [rip+0x3189d]        # 0x1400411b8
   14000f91b:	mov    rdi,rax
   14000f91e:	test   rax,rax
   14000f921:	je     0x14000f94f
   14000f923:	lea    r8,[rsp+0x20]
   14000f928:	mov    edx,0x1
   14000f92d:	mov    rcx,rax
   14000f930:	call   QWORD PTR [rip+0x31852]        # 0x140041188
   14000f936:	mov    esi,eax
   14000f938:	test   eax,eax
   14000f93a:	jne    0x14000f944
   14000f93c:	call   QWORD PTR [rip+0x31a96]        # 0x1400413d8
   14000f942:	mov    ebx,eax
   14000f944:	mov    rcx,rdi
   14000f947:	call   QWORD PTR [rip+0x3187b]        # 0x1400411c8
   14000f94d:	jmp    0x14000f957
   14000f94f:	call   QWORD PTR [rip+0x31a83]        # 0x1400413d8
   14000f955:	mov    ebx,eax
   14000f957:	mov    rcx,rbp
   14000f95a:	call   QWORD PTR [rip+0x31868]        # 0x1400411c8
   14000f960:	mov    ecx,ebx
   14000f962:	call   QWORD PTR [rip+0x319b8]        # 0x140041320
   14000f968:	mov    eax,esi
   14000f96a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f96f:	xor    rcx,rsp
   14000f972:	call   0x1400265a0
   14000f977:	mov    rbx,QWORD PTR [rsp+0x68]
   14000f97c:	mov    rbp,QWORD PTR [rsp+0x70]
   14000f981:	mov    rsi,QWORD PTR [rsp+0x78]
   14000f986:	add    rsp,0x50
   14000f98a:	pop    rdi
   14000f98b:	ret    
   14000f98c:	mov    rax,rsp
   14000f98f:	mov    QWORD PTR [rax+0x8],rbx
   14000f993:	mov    QWORD PTR [rax+0x10],rbp
   14000f997:	mov    QWORD PTR [rax+0x18],rsi
   14000f99b:	mov    QWORD PTR [rax+0x20],rdi
   14000f99f:	push   r14
   14000f9a1:	sub    rsp,0x40
   14000f9a5:	mov    rbx,rcx
   14000f9a8:	add    rcx,0x10
   14000f9ac:	mov    ebp,r8d
   14000f9af:	mov    r14,rdx
   14000f9b2:	call   QWORD PTR [rip+0x31b38]        # 0x1400414f0
   14000f9b8:	xor    edi,edi
   14000f9ba:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14000f9be:	jne    0x14000f9e9
   14000f9c0:	lea    r8d,[rdi+0x3]
   14000f9c4:	mov    QWORD PTR [rsp+0x30],rdi
   14000f9c9:	xor    r9d,r9d
   14000f9cc:	mov    edx,ebp
   14000f9ce:	mov    rcx,r14
   14000f9d1:	mov    DWORD PTR [rsp+0x28],edi
   14000f9d5:	mov    DWORD PTR [rsp+0x20],r8d
   14000f9da:	call   QWORD PTR [rip+0x31950]        # 0x140041330
   14000f9e0:	mov    QWORD PTR [rbx],rax
   14000f9e3:	cmp    rax,0xffffffffffffffff
   14000f9e7:	je     0x14000f9ec
   14000f9e9:	inc    DWORD PTR [rbx+0x8]
   14000f9ec:	lea    rcx,[rbx+0x10]
   14000f9f0:	call   QWORD PTR [rip+0x31b02]        # 0x1400414f8
   14000f9f6:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14000f9fa:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f9ff:	mov    rbp,QWORD PTR [rsp+0x58]
   14000fa04:	mov    rsi,QWORD PTR [rsp+0x60]
   14000fa09:	setne  dil
   14000fa0d:	mov    eax,edi
   14000fa0f:	mov    rdi,QWORD PTR [rsp+0x68]
   14000fa14:	add    rsp,0x40
   14000fa18:	pop    r14
   14000fa1a:	ret    
   14000fa1b:	int3   
   14000fa1c:	mov    QWORD PTR [rsp+0x8],rbx
   14000fa21:	push   rdi
   14000fa22:	sub    rsp,0x20
   14000fa26:	mov    rbx,rcx
   14000fa29:	add    rcx,0x10
   14000fa2d:	call   QWORD PTR [rip+0x31abd]        # 0x1400414f0
   14000fa33:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14000fa37:	je     0x14000fa4b
   14000fa39:	dec    DWORD PTR [rbx+0x8]
   14000fa3c:	jne    0x14000fa4b
   14000fa3e:	mov    rcx,QWORD PTR [rbx]
   14000fa41:	call   QWORD PTR [rip+0x31941]        # 0x140041388
   14000fa47:	or     QWORD PTR [rbx],0xffffffffffffffff
   14000fa4b:	lea    rcx,[rbx+0x10]
   14000fa4f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fa54:	add    rsp,0x20
   14000fa58:	pop    rdi
   14000fa59:	rex.W jmp QWORD PTR [rip+0x31a98]        # 0x1400414f8
   14000fa60:	mov    QWORD PTR [rsp+0x10],rbx
   14000fa65:	mov    QWORD PTR [rsp+0x18],rbp
   14000fa6a:	push   rsi
   14000fa6b:	push   rdi
   14000fa6c:	push   r14
   14000fa6e:	sub    rsp,0x20
   14000fa72:	mov    r14,rdx
   14000fa75:	lea    rdx,[rcx+0x38]
   14000fa79:	xor    ebx,ebx
   14000fa7b:	cmp    QWORD PTR [rdx+0x18],0x8
   14000fa80:	mov    rbp,r8
   14000fa83:	jb     0x14000fa88
   14000fa85:	mov    rdx,QWORD PTR [rdx]
   14000fa88:	mov    r8d,0x1
   14000fa8e:	mov    rcx,rbp
   14000fa91:	call   QWORD PTR [rip+0x31721]        # 0x1400411b8
   14000fa97:	mov    rdi,rax
   14000fa9a:	test   rax,rax
   14000fa9d:	je     0x14000fb03
   14000fa9f:	lea    r9,[rsp+0x40]
   14000faa4:	xor    r8d,r8d
   14000faa7:	xor    edx,edx
   14000faa9:	mov    rcx,rax
   14000faac:	call   QWORD PTR [rip+0x316de]        # 0x140041190
   14000fab2:	test   eax,eax
   14000fab4:	jne    0x14000fafa
   14000fab6:	call   QWORD PTR [rip+0x3191c]        # 0x1400413d8
   14000fabc:	cmp    eax,0x7a
   14000fabf:	jne    0x14000fafa
   14000fac1:	mov    ecx,DWORD PTR [rsp+0x40]
   14000fac5:	call   0x140027888
   14000faca:	mov    r8d,DWORD PTR [rsp+0x40]
   14000facf:	lea    r9,[rsp+0x40]
   14000fad4:	mov    rdx,rax
   14000fad7:	mov    rcx,rdi
   14000fada:	mov    rsi,rax
   14000fadd:	call   QWORD PTR [rip+0x316ad]        # 0x140041190
   14000fae3:	test   eax,eax
   14000fae5:	je     0x14000faf2
   14000fae7:	mov    eax,DWORD PTR [rsi+0x4]
   14000faea:	mov    ebx,0x1
   14000faef:	mov    DWORD PTR [r14],eax
   14000faf2:	mov    rcx,rsi
   14000faf5:	call   0x140026c1c
   14000fafa:	mov    rcx,rdi
   14000fafd:	call   QWORD PTR [rip+0x316c5]        # 0x1400411c8
   14000fb03:	mov    rcx,rbp
   14000fb06:	call   QWORD PTR [rip+0x316bc]        # 0x1400411c8
   14000fb0c:	mov    rbp,QWORD PTR [rsp+0x50]
   14000fb11:	mov    eax,ebx
   14000fb13:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fb18:	add    rsp,0x20
   14000fb1c:	pop    r14
   14000fb1e:	pop    rdi
   14000fb1f:	pop    rsi
   14000fb20:	ret    
   14000fb21:	int3   
   14000fb22:	int3   
   14000fb23:	int3   
   14000fb24:	mov    rax,rsp
   14000fb27:	mov    QWORD PTR [rax+0x8],rbx
   14000fb2b:	mov    QWORD PTR [rax+0x10],rbp
   14000fb2f:	mov    QWORD PTR [rax+0x18],rsi
   14000fb33:	mov    QWORD PTR [rax+0x20],rdi
   14000fb37:	push   r14
   14000fb39:	sub    rsp,0x60
   14000fb3d:	mov    r14d,edx
   14000fb40:	mov    rbp,rcx
   14000fb43:	cmp    edx,0x5
   14000fb46:	jb     0x14000fb52
   14000fb48:	mov    eax,0x57
   14000fb4d:	jmp    0x14000fc13
   14000fb52:	xor    ebx,ebx
   14000fb54:	lea    rdx,[rip+0x3666d]        # 0x1400461c8
   14000fb5b:	xor    ecx,ecx
   14000fb5d:	lea    r8d,[rbx+0x1]
   14000fb61:	mov    edi,ebx
   14000fb63:	call   QWORD PTR [rip+0x3162f]        # 0x140041198
   14000fb69:	mov    rsi,rax
   14000fb6c:	test   rax,rax
   14000fb6f:	jne    0x14000fb7e
   14000fb71:	call   QWORD PTR [rip+0x31861]        # 0x1400413d8
   14000fb77:	mov    edi,eax
   14000fb79:	jmp    0x14000fc00
   14000fb7e:	lea    rdx,[rbp+0x38]
   14000fb82:	cmp    QWORD PTR [rdx+0x18],0x8
   14000fb87:	jb     0x14000fb8c
   14000fb89:	mov    rdx,QWORD PTR [rdx]
   14000fb8c:	mov    r8d,0x2
   14000fb92:	mov    rcx,rax
   14000fb95:	call   QWORD PTR [rip+0x3161d]        # 0x1400411b8
   14000fb9b:	mov    rbp,rax
   14000fb9e:	test   rax,rax
   14000fba1:	jne    0x14000fbad
   14000fba3:	call   QWORD PTR [rip+0x3182f]        # 0x1400413d8
   14000fba9:	mov    edi,eax
   14000fbab:	jmp    0x14000fbf7
   14000fbad:	mov    QWORD PTR [rsp+0x50],rbx
   14000fbb2:	mov    QWORD PTR [rsp+0x48],rbx
   14000fbb7:	mov    QWORD PTR [rsp+0x40],rbx
   14000fbbc:	mov    QWORD PTR [rsp+0x38],rbx
   14000fbc1:	or     edx,0xffffffff
   14000fbc4:	mov    QWORD PTR [rsp+0x30],rbx
   14000fbc9:	mov    r8d,r14d
   14000fbcc:	mov    rcx,rax
   14000fbcf:	mov    r9d,edx
   14000fbd2:	mov    QWORD PTR [rsp+0x28],rbx
   14000fbd7:	mov    QWORD PTR [rsp+0x20],rbx
   14000fbdc:	call   QWORD PTR [rip+0x315c6]        # 0x1400411a8
   14000fbe2:	test   eax,eax
   14000fbe4:	jne    0x14000fbee
   14000fbe6:	call   QWORD PTR [rip+0x317ec]        # 0x1400413d8
   14000fbec:	mov    edi,eax
   14000fbee:	mov    rcx,rbp
   14000fbf1:	call   QWORD PTR [rip+0x315d1]        # 0x1400411c8
   14000fbf7:	mov    rcx,rsi
   14000fbfa:	call   QWORD PTR [rip+0x315c8]        # 0x1400411c8
   14000fc00:	test   edi,edi
   14000fc02:	je     0x14000fc0e
   14000fc04:	mov    ecx,edi
   14000fc06:	call   QWORD PTR [rip+0x31714]        # 0x140041320
   14000fc0c:	test   edi,edi
   14000fc0e:	sete   bl
   14000fc11:	mov    eax,ebx
   14000fc13:	lea    r11,[rsp+0x60]
   14000fc18:	mov    rbx,QWORD PTR [r11+0x10]
   14000fc1c:	mov    rbp,QWORD PTR [r11+0x18]
   14000fc20:	mov    rsi,QWORD PTR [r11+0x20]
   14000fc24:	mov    rdi,QWORD PTR [r11+0x28]
   14000fc28:	mov    rsp,r11
   14000fc2b:	pop    r14
   14000fc2d:	ret    
   14000fc2e:	int3   
   14000fc2f:	int3   
   14000fc30:	mov    r11,rsp
   14000fc33:	push   rbx
   14000fc34:	sub    rsp,0x60
   14000fc38:	and    QWORD PTR [r11-0x28],0x0
   14000fc3d:	and    QWORD PTR [r11-0x20],0x0
   14000fc42:	and    DWORD PTR [rsp+0x50],0x0
   14000fc47:	and    DWORD PTR [rsp+0x54],0x0
   14000fc4c:	mov    rcx,QWORD PTR [rcx]
   14000fc4f:	and    QWORD PTR [r11-0x10],0x0
   14000fc54:	lea    rax,[r11-0x28]
   14000fc58:	mov    QWORD PTR [r11-0x30],rax
   14000fc5c:	lea    rax,[r11+0x8]
   14000fc60:	mov    QWORD PTR [r11-0x38],rax
   14000fc64:	mov    eax,DWORD PTR [rsp+0x98]
   14000fc6b:	mov    DWORD PTR [rsp+0x28],eax
   14000fc6f:	mov    rax,QWORD PTR [rsp+0x90]
   14000fc77:	mov    QWORD PTR [r11-0x48],rax
   14000fc7b:	call   QWORD PTR [rip+0x3167f]        # 0x140041300
   14000fc81:	mov    ebx,eax
   14000fc83:	test   eax,eax
   14000fc85:	jne    0x14000fc98
   14000fc87:	call   QWORD PTR [rip+0x3174b]        # 0x1400413d8
   14000fc8d:	cmp    eax,0x3e5
   14000fc92:	jne    0x14000fc98
   14000fc94:	xor    eax,eax
   14000fc96:	jmp    0x14000fc9a
   14000fc98:	mov    eax,ebx
   14000fc9a:	add    rsp,0x60
   14000fc9e:	pop    rbx
   14000fc9f:	ret    
   14000fca0:	mov    rax,rsp
   14000fca3:	mov    QWORD PTR [rax+0x8],rcx
   14000fca7:	push   rdi
   14000fca8:	sub    rsp,0x30
   14000fcac:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000fcb4:	mov    QWORD PTR [rax+0x10],rbx
   14000fcb8:	mov    QWORD PTR [rax+0x18],rbp
   14000fcbc:	mov    rbx,r8
   14000fcbf:	mov    rdi,rcx
   14000fcc2:	or     QWORD PTR [rcx],0xffffffffffffffff
   14000fcc6:	xor    ebp,ebp
   14000fcc8:	mov    DWORD PTR [rcx+0x8],ebp
   14000fccb:	add    rcx,0x38
   14000fccf:	mov    QWORD PTR [rcx+0x18],0x7
   14000fcd7:	mov    QWORD PTR [rcx+0x10],rbp
   14000fcdb:	mov    WORD PTR [rcx],bp
   14000fcde:	call   0x14000324c
   14000fce3:	nop
   14000fce4:	lea    rcx,[rdi+0x58]
   14000fce8:	mov    QWORD PTR [rcx+0x18],0x7
   14000fcf0:	mov    QWORD PTR [rcx+0x10],rbp
   14000fcf4:	mov    WORD PTR [rcx],bp
   14000fcf7:	mov    rdx,rbx
   14000fcfa:	call   0x14000324c
   14000fcff:	nop
   14000fd00:	lea    rcx,[rdi+0x10]
   14000fd04:	call   QWORD PTR [rip+0x318b6]        # 0x1400415c0
   14000fd0a:	nop
   14000fd0b:	mov    rax,rdi
   14000fd0e:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fd13:	mov    rbp,QWORD PTR [rsp+0x50]
   14000fd18:	add    rsp,0x30
   14000fd1c:	pop    rdi
   14000fd1d:	ret    
   14000fd1e:	int3   
   14000fd1f:	int3   
   14000fd20:	mov    QWORD PTR [rsp+0x8],rcx
   14000fd25:	push   rdi
   14000fd26:	sub    rsp,0x30
   14000fd2a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000fd33:	mov    QWORD PTR [rsp+0x48],rbx
   14000fd38:	mov    rbx,rcx
   14000fd3b:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000fd3f:	je     0x14000fd4e
   14000fd41:	mov    rcx,QWORD PTR [rcx]
   14000fd44:	call   QWORD PTR [rip+0x3163e]        # 0x140041388
   14000fd4a:	or     QWORD PTR [rbx],0xffffffffffffffff
   14000fd4e:	lea    rcx,[rbx+0x10]
   14000fd52:	call   QWORD PTR [rip+0x31708]        # 0x140041460
   14000fd58:	nop
   14000fd59:	cmp    QWORD PTR [rbx+0x70],0x8
   14000fd5e:	jb     0x14000fd69
   14000fd60:	mov    rcx,QWORD PTR [rbx+0x58]
   14000fd64:	call   0x14002657c
   14000fd69:	mov    QWORD PTR [rbx+0x70],0x7
   14000fd71:	xor    edi,edi
   14000fd73:	mov    QWORD PTR [rbx+0x68],rdi
   14000fd77:	mov    WORD PTR [rbx+0x58],di
   14000fd7b:	cmp    QWORD PTR [rbx+0x50],0x8
   14000fd80:	jb     0x14000fd8b
   14000fd82:	mov    rcx,QWORD PTR [rbx+0x38]
   14000fd86:	call   0x14002657c
   14000fd8b:	mov    QWORD PTR [rbx+0x50],0x7
   14000fd93:	mov    QWORD PTR [rbx+0x48],rdi
   14000fd97:	mov    WORD PTR [rbx+0x38],di
   14000fd9b:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fda0:	add    rsp,0x30
   14000fda4:	pop    rdi
   14000fda5:	ret    
   14000fda6:	int3   
   14000fda7:	int3   
   14000fda8:	lea    rax,[rip+0x36481]        # 0x140046230
   14000fdaf:	mov    QWORD PTR [rcx],rax
   14000fdb2:	ret    
   14000fdb3:	int3   
   14000fdb4:	rex push rbx
   14000fdb6:	sub    rsp,0x20
   14000fdba:	lea    rax,[rip+0x3646f]        # 0x140046230
   14000fdc1:	mov    rbx,rcx
   14000fdc4:	mov    QWORD PTR [rcx],rax
   14000fdc7:	test   dl,0x1
   14000fdca:	je     0x14000fdd1
   14000fdcc:	call   0x14002657c
   14000fdd1:	mov    rax,rbx
   14000fdd4:	add    rsp,0x20
   14000fdd8:	pop    rbx
   14000fdd9:	ret    
   14000fdda:	int3   
   14000fddb:	int3   
   14000fddc:	rex push rbx
   14000fdde:	sub    rsp,0x20
   14000fde2:	mov    eax,DWORD PTR [rip+0x4cc78]        # 0x14005ca60
   14000fde8:	test   eax,eax
   14000fdea:	jne    0x14000fe60
   14000fdec:	lea    rcx,[rip+0x3656d]        # 0x140046360
   14000fdf3:	call   QWORD PTR [rip+0x31597]        # 0x140041390
   14000fdf9:	mov    rbx,rax
   14000fdfc:	test   rax,rax
   14000fdff:	je     0x14000fe5a
   14000fe01:	cmp    QWORD PTR [rip+0x4cc77],0x0        # 0x14005ca80
   14000fe09:	jne    0x14000fe27
   14000fe0b:	lea    rdx,[rip+0x3655e]        # 0x140046370
   14000fe12:	mov    rcx,rax
   14000fe15:	call   QWORD PTR [rip+0x314cd]        # 0x1400412e8
   14000fe1b:	mov    QWORD PTR [rip+0x4cc5e],rax        # 0x14005ca80
   14000fe22:	test   rax,rax
   14000fe25:	je     0x14000fe5a
   14000fe27:	cmp    QWORD PTR [rip+0x4cc49],0x0        # 0x14005ca78
   14000fe2f:	jne    0x14000fe4d
   14000fe31:	lea    rdx,[rip+0x36550]        # 0x140046388
   14000fe38:	mov    rcx,rbx
   14000fe3b:	call   QWORD PTR [rip+0x314a7]        # 0x1400412e8
   14000fe41:	mov    QWORD PTR [rip+0x4cc30],rax        # 0x14005ca78
   14000fe48:	test   rax,rax
   14000fe4b:	je     0x14000fe5a
   14000fe4d:	mov    eax,0x1
   14000fe52:	mov    DWORD PTR [rip+0x4cc08],eax        # 0x14005ca60
   14000fe58:	jmp    0x14000fe60
   14000fe5a:	mov    eax,DWORD PTR [rip+0x4cc00]        # 0x14005ca60
   14000fe60:	add    rsp,0x20
   14000fe64:	pop    rbx
   14000fe65:	ret    
   14000fe66:	int3   
   14000fe67:	int3   
   14000fe68:	mov    QWORD PTR [rsp+0x8],rbx
   14000fe6d:	push   rdi
   14000fe6e:	sub    rsp,0x20
   14000fe72:	and    DWORD PTR [rcx],0x0
   14000fe75:	and    DWORD PTR [rcx+0x4],0x0
   14000fe79:	and    DWORD PTR [rcx+0x8],0x0
   14000fe7d:	and    DWORD PTR [rcx+0xc],0x0
   14000fe81:	and    DWORD PTR [rcx+0x10],0x0
   14000fe85:	and    DWORD PTR [rcx+0x14],0x0
   14000fe89:	and    QWORD PTR [rcx+0x18],0x0
   14000fe8e:	and    QWORD PTR [rcx+0x20],0x0
   14000fe93:	and    QWORD PTR [rcx+0x28],0x0
   14000fe98:	and    QWORD PTR [rcx+0x30],0x0
   14000fe9d:	and    QWORD PTR [rcx+0x38],0x0
   14000fea2:	mov    rbx,rcx
   14000fea5:	mov    rcx,rdx
   14000fea8:	mov    rdi,rdx
   14000feab:	call   QWORD PTR [rip+0x311a7]        # 0x140041058
   14000feb1:	test   eax,eax
   14000feb3:	je     0x14000fec0
   14000feb5:	mov    rdx,rdi
   14000feb8:	mov    rcx,rbx
   14000febb:	call   0x14000ff24
   14000fec0:	mov    rax,rbx
   14000fec3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fec8:	add    rsp,0x20
   14000fecc:	pop    rdi
   14000fecd:	ret    
   14000fece:	int3   
   14000fecf:	int3   
   14000fed0:	rex push rbx
   14000fed2:	sub    rsp,0x20
   14000fed6:	mov    rbx,rcx
   14000fed9:	mov    rcx,QWORD PTR [rcx+0x18]
   14000fedd:	call   0x140026c1c
   14000fee2:	mov    rcx,QWORD PTR [rbx+0x20]
   14000fee6:	call   0x140026c1c
   14000feeb:	mov    rcx,QWORD PTR [rbx+0x28]
   14000feef:	call   0x140026c1c
   14000fef4:	mov    rcx,QWORD PTR [rbx+0x30]
   14000fef8:	call   0x140026c1c
   14000fefd:	mov    rcx,QWORD PTR [rbx+0x38]
   14000ff01:	call   0x140026c1c
   14000ff06:	xor    eax,eax
   14000ff08:	mov    QWORD PTR [rbx+0x18],rax
   14000ff0c:	mov    QWORD PTR [rbx+0x20],rax
   14000ff10:	mov    QWORD PTR [rbx+0x28],rax
   14000ff14:	mov    QWORD PTR [rbx+0x30],rax
   14000ff18:	mov    QWORD PTR [rbx+0x38],rax
   14000ff1c:	add    rsp,0x20
   14000ff20:	pop    rbx
   14000ff21:	ret    
   14000ff22:	int3   
   14000ff23:	int3   
   14000ff24:	mov    QWORD PTR [rsp+0x8],rbx
   14000ff29:	mov    QWORD PTR [rsp+0x10],rbp
   14000ff2e:	push   rsi
   14000ff2f:	push   rdi
   14000ff30:	push   r12
   14000ff32:	push   r14
   14000ff34:	push   r15
   14000ff36:	sub    rsp,0x60
   14000ff3a:	mov    r15,rcx
   14000ff3d:	mov    rcx,rdx
   14000ff40:	mov    r12,rdx
   14000ff43:	call   QWORD PTR [rip+0x311ef]        # 0x140041138
   14000ff49:	test   eax,eax
   14000ff4b:	je     0x1400100b6
   14000ff51:	lea    r8,[rsp+0xa8]
   14000ff59:	lea    rdx,[rsp+0xa0]
   14000ff61:	mov    rcx,r12
   14000ff64:	call   QWORD PTR [rip+0x311ee]        # 0x140041158
   14000ff6a:	test   eax,eax
   14000ff6c:	je     0x1400100b6
   14000ff72:	mov    eax,0x8000
   14000ff77:	test   WORD PTR [rsp+0xa0],ax
   14000ff7f:	je     0x1400100ab
   14000ff85:	lea    rbx,[r15+0x14]
   14000ff89:	lea    rdi,[r15+0x10]
   14000ff8d:	lea    rsi,[r15+0xc]
   14000ff91:	mov    QWORD PTR [rsp+0x50],rbx
   14000ff96:	and    QWORD PTR [rsp+0x48],0x0
   14000ff9c:	mov    QWORD PTR [rsp+0x40],rdi
   14000ffa1:	and    QWORD PTR [rsp+0x38],0x0
   14000ffa7:	mov    QWORD PTR [rsp+0x30],rsi
   14000ffac:	and    QWORD PTR [rsp+0x28],0x0
   14000ffb2:	lea    r14,[r15+0x4]
   14000ffb6:	lea    rbp,[r15+0x8]
   14000ffba:	xor    r9d,r9d
   14000ffbd:	xor    edx,edx
   14000ffbf:	mov    rcx,r12
   14000ffc2:	mov    r8,r14
   14000ffc5:	mov    QWORD PTR [rsp+0x20],rbp
   14000ffca:	call   QWORD PTR [rip+0x31158]        # 0x140041128
   14000ffd0:	mov    ecx,DWORD PTR [r14]
   14000ffd3:	call   0x140027888
   14000ffd8:	mov    ecx,DWORD PTR [rbp+0x0]
   14000ffdb:	mov    QWORD PTR [r15+0x18],rax
   14000ffdf:	call   0x140027888
   14000ffe4:	mov    ecx,DWORD PTR [rsi]
   14000ffe6:	mov    QWORD PTR [r15+0x20],rax
   14000ffea:	call   0x140027888
   14000ffef:	mov    ecx,DWORD PTR [rdi]
   14000fff1:	mov    QWORD PTR [r15+0x28],rax
   14000fff5:	call   0x140027888
   14000fffa:	mov    ecx,DWORD PTR [rbx]
   14000fffc:	mov    QWORD PTR [r15+0x30],rax
   140010000:	call   0x140027888
   140010005:	mov    r9,QWORD PTR [r15+0x20]
   140010009:	mov    rdx,QWORD PTR [r15+0x18]
   14001000d:	mov    QWORD PTR [rsp+0x50],rbx
   140010012:	mov    QWORD PTR [rsp+0x48],rax
   140010017:	mov    QWORD PTR [rsp+0x40],rdi
   14001001c:	mov    QWORD PTR [r15+0x38],rax
   140010020:	mov    rax,QWORD PTR [r15+0x30]
   140010024:	mov    QWORD PTR [rsp+0x38],rax
   140010029:	mov    rax,QWORD PTR [r15+0x28]
   14001002d:	mov    QWORD PTR [rsp+0x30],rsi
   140010032:	mov    QWORD PTR [rsp+0x28],rax
   140010037:	mov    r8,r14
   14001003a:	mov    rcx,r12
   14001003d:	mov    QWORD PTR [rsp+0x20],rbp
   140010042:	call   QWORD PTR [rip+0x310e0]        # 0x140041128
   140010048:	test   eax,eax
   14001004a:	je     0x140010063
   14001004c:	mov    rcx,QWORD PTR [r15+0x18]
   140010050:	call   QWORD PTR [rip+0x31002]        # 0x140041058
   140010056:	test   eax,eax
   140010058:	je     0x140010063
   14001005a:	mov    DWORD PTR [r15],0x1
   140010061:	jmp    0x1400100b6
   140010063:	mov    rcx,QWORD PTR [r15+0x18]
   140010067:	call   0x140026c1c
   14001006c:	mov    rcx,QWORD PTR [r15+0x20]
   140010070:	call   0x140026c1c
   140010075:	mov    rcx,QWORD PTR [r15+0x28]
   140010079:	call   0x140026c1c
   14001007e:	mov    rcx,QWORD PTR [r15+0x30]
   140010082:	call   0x140026c1c
   140010087:	mov    rcx,QWORD PTR [r15+0x38]
   14001008b:	call   0x140026c1c
   140010090:	and    QWORD PTR [r15+0x18],0x0
   140010095:	and    QWORD PTR [r15+0x20],0x0
   14001009a:	and    QWORD PTR [r15+0x28],0x0
   14001009f:	and    QWORD PTR [r15+0x30],0x0
   1400100a4:	and    QWORD PTR [r15+0x38],0x0
   1400100a9:	jmp    0x1400100b6
   1400100ab:	mov    ecx,0x53a
   1400100b0:	call   QWORD PTR [rip+0x3126a]        # 0x140041320
   1400100b6:	lea    r11,[rsp+0x60]
   1400100bb:	mov    rbx,QWORD PTR [r11+0x30]
   1400100bf:	mov    rbp,QWORD PTR [r11+0x38]
   1400100c3:	mov    rsp,r11
   1400100c6:	pop    r15
   1400100c8:	pop    r14
   1400100ca:	pop    r12
   1400100cc:	pop    rdi
   1400100cd:	pop    rsi
   1400100ce:	ret    
   1400100cf:	int3   
   1400100d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400100d5:	push   rdi
   1400100d6:	sub    rsp,0x40
   1400100da:	mov    rax,QWORD PTR [rip+0x48fa7]        # 0x140059088
   1400100e1:	xor    rax,rsp
   1400100e4:	mov    QWORD PTR [rsp+0x30],rax
   1400100e9:	mov    rdi,rdx
   1400100ec:	mov    r9d,0x2
   1400100f2:	mov    rbx,rcx
   1400100f5:	lea    r8d,[r9+0xa]
   1400100f9:	lea    rdx,[rsp+0x20]
   1400100fe:	mov    rcx,rdi
   140010101:	call   QWORD PTR [rip+0x30ef9]        # 0x140041000
   140010107:	mov    eax,DWORD PTR [rbx+0x8]
   14001010a:	cmp    DWORD PTR [rsp+0x24],eax
   14001010e:	jbe    0x14001012d
   140010110:	mov    rcx,QWORD PTR [rbx+0x20]
   140010114:	call   0x140026c1c
   140010119:	mov    ecx,DWORD PTR [rsp+0x24]
   14001011d:	call   0x140027888
   140010122:	mov    QWORD PTR [rbx+0x20],rax
   140010126:	mov    eax,DWORD PTR [rsp+0x24]
   14001012a:	mov    DWORD PTR [rbx+0x8],eax
   14001012d:	mov    r8d,DWORD PTR [rbx+0x8]
   140010131:	mov    rcx,QWORD PTR [rbx+0x20]
   140010135:	mov    rdx,rdi
   140010138:	call   0x1400265d0
   14001013d:	mov    r8,QWORD PTR [rbx+0x20]
   140010141:	mov    rcx,QWORD PTR [rbx+0x18]
   140010145:	xor    r9d,r9d
   140010148:	lea    edx,[r9+0x1]
   14001014c:	call   QWORD PTR [rip+0x30ff6]        # 0x140041148
   140010152:	mov    rcx,QWORD PTR [rsp+0x30]
   140010157:	xor    rcx,rsp
   14001015a:	call   0x1400265a0
   14001015f:	mov    rbx,QWORD PTR [rsp+0x60]
   140010164:	add    rsp,0x40
   140010168:	pop    rdi
   140010169:	ret    
   14001016a:	int3   
   14001016b:	int3   
   14001016c:	mov    QWORD PTR [rsp+0x8],rcx
   140010171:	push   rbx
   140010172:	sub    rsp,0x30
   140010176:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001017f:	mov    rbx,rcx
   140010182:	xor    ecx,ecx
   140010184:	mov    QWORD PTR [rbx],rcx
   140010187:	mov    QWORD PTR [rbx+0x8],rcx
   14001018b:	mov    QWORD PTR [rbx+0x10],rcx
   14001018f:	mov    QWORD PTR [rbx+0x18],rcx
   140010193:	mov    QWORD PTR [rbx+0x20],rcx
   140010197:	mov    QWORD PTR [rbx+0x28],rcx
   14001019b:	lea    eax,[rcx+0x7]
   14001019e:	mov    QWORD PTR [rbx+0x48],rax
   1400101a2:	mov    QWORD PTR [rbx+0x40],rcx
   1400101a6:	mov    WORD PTR [rbx+0x30],cx
   1400101aa:	mov    QWORD PTR [rbx+0x68],rax
   1400101ae:	mov    QWORD PTR [rbx+0x60],rcx
   1400101b2:	mov    WORD PTR [rbx+0x50],cx
   1400101b6:	mov    DWORD PTR [rbx+0x70],eax
   1400101b9:	mov    rcx,rbx
   1400101bc:	call   0x140010330
   1400101c1:	nop
   1400101c2:	mov    rax,rbx
   1400101c5:	add    rsp,0x30
   1400101c9:	pop    rbx
   1400101ca:	ret    
   1400101cb:	int3   
   1400101cc:	mov    QWORD PTR [rsp+0x8],rcx
   1400101d1:	push   rbx
   1400101d2:	push   rsi
   1400101d3:	push   rdi
   1400101d4:	sub    rsp,0x30
   1400101d8:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400101e1:	mov    rdi,rdx
   1400101e4:	mov    rbx,rcx
   1400101e7:	xor    esi,esi
   1400101e9:	mov    QWORD PTR [rcx],rsi
   1400101ec:	mov    QWORD PTR [rcx+0x8],rsi
   1400101f0:	mov    QWORD PTR [rcx+0x10],rsi
   1400101f4:	mov    QWORD PTR [rcx+0x18],rsi
   1400101f8:	mov    QWORD PTR [rcx+0x20],rsi
   1400101fc:	mov    QWORD PTR [rcx+0x28],rsi
   140010200:	lea    eax,[rsi+0x7]
   140010203:	mov    QWORD PTR [rcx+0x48],rax
   140010207:	mov    QWORD PTR [rcx+0x40],rsi
   14001020b:	mov    WORD PTR [rcx+0x30],si
   14001020f:	mov    QWORD PTR [rcx+0x68],rax
   140010213:	mov    QWORD PTR [rcx+0x60],rsi
   140010217:	mov    WORD PTR [rcx+0x50],si
   14001021b:	mov    DWORD PTR [rcx+0x70],eax
   14001021e:	call   0x14000fddc
   140010223:	test   eax,eax
   140010225:	jne    0x14001024f
   140010227:	mov    DWORD PTR [rsp+0x68],esi
   14001022b:	mov    DWORD PTR [rsp+0x6c],0xe1232723
   140010233:	mov    rax,QWORD PTR [rsp+0x68]
   140010238:	mov    QWORD PTR [rsp+0x20],rax
   14001023d:	lea    rdx,[rip+0x45f4c]        # 0x140056190
   140010244:	lea    rcx,[rsp+0x20]
   140010249:	call   0x140029fe8
   14001024e:	int3   
   14001024f:	lea    rdx,[rsp+0x60]
   140010254:	mov    rcx,rdi
   140010257:	call   QWORD PTR [rip+0x4c81b]        # 0x14005ca78
   14001025d:	test   eax,eax
   14001025f:	je     0x14001027c
   140010261:	mov    rdx,QWORD PTR [rsp+0x60]
   140010266:	mov    rcx,rbx
   140010269:	call   0x140010330
   14001026e:	mov    rcx,QWORD PTR [rsp+0x60]
   140010273:	call   QWORD PTR [rip+0x3114f]        # 0x1400413c8
   140010279:	nop
   14001027a:	jmp    0x140010288
   14001027c:	mov    rdx,rdi
   14001027f:	mov    rcx,rbx
   140010282:	call   0x140010590
   140010287:	nop
   140010288:	mov    rax,rbx
   14001028b:	add    rsp,0x30
   14001028f:	pop    rdi
   140010290:	pop    rsi
   140010291:	pop    rbx
   140010292:	ret    
   140010293:	int3   
   140010294:	mov    QWORD PTR [rsp+0x8],rcx
   140010299:	push   rdi
   14001029a:	sub    rsp,0x30
   14001029e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400102a7:	mov    QWORD PTR [rsp+0x48],rbx
   1400102ac:	mov    rbx,rcx
   1400102af:	cmp    QWORD PTR [rcx+0x68],0x8
   1400102b4:	jb     0x1400102bf
   1400102b6:	mov    rcx,QWORD PTR [rcx+0x50]
   1400102ba:	call   0x14002657c
   1400102bf:	mov    QWORD PTR [rbx+0x68],0x7
   1400102c7:	xor    edi,edi
   1400102c9:	mov    QWORD PTR [rbx+0x60],rdi
   1400102cd:	mov    WORD PTR [rbx+0x50],di
   1400102d1:	cmp    QWORD PTR [rbx+0x48],0x8
   1400102d6:	jb     0x1400102e1
   1400102d8:	mov    rcx,QWORD PTR [rbx+0x30]
   1400102dc:	call   0x14002657c
   1400102e1:	mov    QWORD PTR [rbx+0x48],0x7
   1400102e9:	mov    QWORD PTR [rbx+0x40],rdi
   1400102ed:	mov    WORD PTR [rbx+0x30],di
   1400102f1:	mov    rcx,QWORD PTR [rbx+0x18]
   1400102f5:	test   rcx,rcx
   1400102f8:	je     0x14001030b
   1400102fa:	call   0x14002657c
   1400102ff:	mov    QWORD PTR [rbx+0x18],rdi
   140010303:	mov    QWORD PTR [rbx+0x20],rdi
   140010307:	mov    QWORD PTR [rbx+0x28],rdi
   14001030b:	mov    rcx,QWORD PTR [rbx]
   14001030e:	test   rcx,rcx
   140010311:	je     0x140010323
   140010313:	call   0x14002657c
   140010318:	mov    QWORD PTR [rbx],rdi
   14001031b:	mov    QWORD PTR [rbx+0x8],rdi
   14001031f:	mov    QWORD PTR [rbx+0x10],rdi
   140010323:	mov    rbx,QWORD PTR [rsp+0x48]
   140010328:	add    rsp,0x30
   14001032c:	pop    rdi
   14001032d:	ret    
   14001032e:	int3   
   14001032f:	int3   
   140010330:	mov    rax,rsp
   140010333:	push   rbp
   140010334:	push   rdi
   140010335:	push   r12
   140010337:	push   r14
   140010339:	push   r15
   14001033b:	lea    rbp,[rax-0x5f]
   14001033f:	sub    rsp,0xb0
   140010346:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   14001034e:	mov    QWORD PTR [rax+0x8],rbx
   140010352:	mov    QWORD PTR [rax+0x10],rsi
   140010356:	mov    rdi,rdx
   140010359:	mov    rsi,rcx
   14001035c:	mov    rcx,rdx
   14001035f:	call   QWORD PTR [rip+0x30ccb]        # 0x140041030
   140010365:	xor    r12d,r12d
   140010368:	test   eax,eax
   14001036a:	jne    0x140010390
   14001036c:	mov    DWORD PTR [rbp-0x39],r12d
   140010370:	mov    DWORD PTR [rbp-0x35],0xe1232723
   140010377:	mov    rax,QWORD PTR [rbp-0x39]
   14001037b:	mov    QWORD PTR [rbp-0x39],rax
   14001037f:	lea    rdx,[rip+0x45e0a]        # 0x140056190
   140010386:	lea    rcx,[rbp-0x39]
   14001038a:	call   0x140029fe8
   14001038f:	int3   
   140010390:	mov    rcx,rdi
   140010393:	call   QWORD PTR [rip+0x30dc7]        # 0x140041160
   140010399:	mov    cl,BYTE PTR [rax]
   14001039b:	call   QWORD PTR [rip+0x30d77]        # 0x140041118
   1400103a1:	mov    ebx,eax
   1400103a3:	mov    edx,eax
   1400103a5:	mov    rcx,rsi
   1400103a8:	call   0x1400034c4
   1400103ad:	mov    r8d,ebx
   1400103b0:	mov    rdx,rdi
   1400103b3:	mov    rcx,QWORD PTR [rsi]
   1400103b6:	call   0x1400265d0
   1400103bb:	call   0x14000fddc
   1400103c0:	test   eax,eax
   1400103c2:	jne    0x1400103e8
   1400103c4:	mov    DWORD PTR [rbp-0x39],r12d
   1400103c8:	mov    DWORD PTR [rbp-0x35],0xe1232723
   1400103cf:	mov    rax,QWORD PTR [rbp-0x39]
   1400103d3:	mov    QWORD PTR [rbp-0x39],rax
   1400103d7:	lea    rdx,[rip+0x45db2]        # 0x140056190
   1400103de:	lea    rcx,[rbp-0x39]
   1400103e2:	call   0x140029fe8
   1400103e7:	int3   
   1400103e8:	lea    rdx,[rbp-0x31]
   1400103ec:	mov    rcx,rdi
   1400103ef:	call   QWORD PTR [rip+0x4c68b]        # 0x14005ca80
   1400103f5:	test   eax,eax
   1400103f7:	jne    0x14001041d
   1400103f9:	mov    DWORD PTR [rbp-0x39],r12d
   1400103fd:	mov    DWORD PTR [rbp-0x35],0xe1232723
   140010404:	mov    rax,QWORD PTR [rbp-0x39]
   140010408:	mov    QWORD PTR [rbp-0x39],rax
   14001040c:	lea    rdx,[rip+0x45d7d]        # 0x140056190
   140010413:	lea    rcx,[rbp-0x39]
   140010417:	call   0x140029fe8
   14001041c:	int3   
   14001041d:	lea    rbx,[rsi+0x50]
   140010421:	mov    rdx,QWORD PTR [rbp-0x31]
   140010425:	mov    rcx,rbx
   140010428:	call   0x14000324c
   14001042d:	mov    rcx,QWORD PTR [rbp-0x31]
   140010431:	call   QWORD PTR [rip+0x30f91]        # 0x1400413c8
   140010437:	mov    DWORD PTR [rbp+0x77],r12d
   14001043b:	mov    DWORD PTR [rbp+0x7f],r12d
   14001043f:	lea    r14,[rsi+0x70]
   140010443:	mov    QWORD PTR [rsp+0x30],r14
   140010448:	lea    rax,[rbp+0x77]
   14001044c:	mov    QWORD PTR [rsp+0x28],rax
   140010451:	mov    QWORD PTR [rsp+0x20],r12
   140010456:	lea    r9,[rbp+0x7f]
   14001045a:	xor    r8d,r8d
   14001045d:	mov    rdx,rdi
   140010460:	xor    ecx,ecx
   140010462:	call   QWORD PTR [rip+0x30cc8]        # 0x140041130
   140010468:	call   QWORD PTR [rip+0x30f6a]        # 0x1400413d8
   14001046e:	cmp    eax,0x7a
   140010471:	je     0x1400104a5
   140010473:	cmp    QWORD PTR [rbx+0x18],0x8
   140010478:	jb     0x14001047d
   14001047a:	mov    rbx,QWORD PTR [rbx]
   14001047d:	mov    r9,rbx
   140010480:	mov    edx,0xe123059d
   140010485:	mov    r8d,0x1
   14001048b:	lea    rcx,[rbp-0x9]
   14001048f:	call   0x140010a9c
   140010494:	lea    rdx,[rip+0x45b55]        # 0x140055ff0
   14001049b:	lea    rcx,[rbp-0x9]
   14001049f:	call   0x140029fe8
   1400104a4:	int3   
   1400104a5:	lea    r15,[rsi+0x18]
   1400104a9:	mov    edx,DWORD PTR [rbp+0x77]
   1400104ac:	mov    rcx,r15
   1400104af:	call   0x14000337c
   1400104b4:	mov    edx,DWORD PTR [rbp+0x7f]
   1400104b7:	mov    QWORD PTR [rbp-0x29],r12
   1400104bb:	mov    QWORD PTR [rbp-0x21],r12
   1400104bf:	mov    QWORD PTR [rbp-0x19],r12
   1400104c3:	lea    rcx,[rbp-0x29]
   1400104c7:	call   0x14000337c
   1400104cc:	nop
   1400104cd:	mov    rax,QWORD PTR [r15]
   1400104d0:	mov    QWORD PTR [rsp+0x30],r14
   1400104d5:	lea    rcx,[rbp+0x77]
   1400104d9:	mov    QWORD PTR [rsp+0x28],rcx
   1400104de:	mov    QWORD PTR [rsp+0x20],rax
   1400104e3:	lea    r9,[rbp+0x7f]
   1400104e7:	mov    r14,QWORD PTR [rbp-0x29]
   1400104eb:	mov    r8,r14
   1400104ee:	mov    rdx,rdi
   1400104f1:	xor    ecx,ecx
   1400104f3:	call   QWORD PTR [rip+0x30c37]        # 0x140041130
   1400104f9:	test   eax,eax
   1400104fb:	jne    0x14001052f
   1400104fd:	cmp    QWORD PTR [rbx+0x18],0x8
   140010502:	jb     0x140010507
   140010504:	mov    rbx,QWORD PTR [rbx]
   140010507:	mov    r9,rbx
   14001050a:	mov    edx,0xe123059d
   14001050f:	mov    r8d,0x1
   140010515:	lea    rcx,[rbp-0x9]
   140010519:	call   0x140010a9c
   14001051e:	lea    rdx,[rip+0x45acb]        # 0x140055ff0
   140010525:	lea    rcx,[rbp-0x9]
   140010529:	call   0x140029fe8
   14001052e:	int3   
   14001052f:	lea    rbx,[rsi+0x30]
   140010533:	mov    rdx,QWORD PTR [r15]
   140010536:	mov    rcx,rbx
   140010539:	call   0x14000324c
   14001053e:	lea    rdx,[rip+0x35d03]        # 0x140046248
   140010545:	mov    rcx,rbx
   140010548:	call   0x1400030a8
   14001054d:	mov    rdx,r14
   140010550:	mov    rcx,rbx
   140010553:	call   0x1400030a8
   140010558:	nop
   140010559:	test   r14,r14
   14001055c:	je     0x140010572
   14001055e:	mov    rcx,r14
   140010561:	call   0x14002657c
   140010566:	mov    QWORD PTR [rbp-0x29],r12
   14001056a:	mov    QWORD PTR [rbp-0x21],r12
   14001056e:	mov    QWORD PTR [rbp-0x19],r12
   140010572:	lea    r11,[rsp+0xb0]
   14001057a:	mov    rbx,QWORD PTR [r11+0x30]
   14001057e:	mov    rsi,QWORD PTR [r11+0x38]
   140010582:	mov    rsp,r11
   140010585:	pop    r15
   140010587:	pop    r14
   140010589:	pop    r12
   14001058b:	pop    rdi
   14001058c:	pop    rbp
   14001058d:	ret    
   14001058e:	int3   
   14001058f:	int3   
   140010590:	mov    QWORD PTR [rsp+0x10],rbx
   140010595:	push   rbp
   140010596:	push   rsi
   140010597:	push   rdi
   140010598:	push   r14
   14001059a:	push   r15
   14001059c:	mov    rbp,rsp
   14001059f:	sub    rsp,0x80
   1400105a6:	lea    rdi,[rcx+0x70]
   1400105aa:	xor    r15d,r15d
   1400105ad:	lea    rax,[rbp+0x30]
   1400105b1:	mov    rbx,rcx
   1400105b4:	mov    QWORD PTR [rsp+0x30],rdi
   1400105b9:	mov    QWORD PTR [rsp+0x28],rax
   1400105be:	lea    r9,[rbp+0x40]
   1400105c2:	xor    r8d,r8d
   1400105c5:	xor    ecx,ecx
   1400105c7:	mov    QWORD PTR [rsp+0x20],r15
   1400105cc:	mov    r14,rdx
   1400105cf:	mov    DWORD PTR [rbp+0x40],r15d
   1400105d3:	mov    DWORD PTR [rbp+0x30],r15d
   1400105d7:	call   QWORD PTR [rip+0x30b73]        # 0x140041150
   1400105dd:	call   QWORD PTR [rip+0x30df5]        # 0x1400413d8
   1400105e3:	cmp    eax,0x7a
   1400105e6:	jne    0x1400106b7
   1400105ec:	mov    edx,DWORD PTR [rbp+0x30]
   1400105ef:	lea    rsi,[rbx+0x18]
   1400105f3:	mov    rcx,rsi
   1400105f6:	call   0x14000337c
   1400105fb:	mov    edx,DWORD PTR [rbp+0x40]
   1400105fe:	mov    rcx,rbx
   140010601:	call   0x1400034c4
   140010606:	mov    rax,QWORD PTR [rsi]
   140010609:	mov    r8,QWORD PTR [rbx]
   14001060c:	lea    rcx,[rbp+0x30]
   140010610:	mov    QWORD PTR [rsp+0x30],rdi
   140010615:	lea    r9,[rbp+0x40]
   140010619:	mov    QWORD PTR [rsp+0x28],rcx
   14001061e:	xor    ecx,ecx
   140010620:	mov    rdx,r14
   140010623:	mov    QWORD PTR [rsp+0x20],rax
   140010628:	call   QWORD PTR [rip+0x30b22]        # 0x140041150
   14001062e:	test   eax,eax
   140010630:	je     0x1400106df
   140010636:	lea    rdi,[rbx+0x30]
   14001063a:	mov    rdx,r14
   14001063d:	mov    rcx,rdi
   140010640:	call   0x14000324c
   140010645:	call   0x14000fddc
   14001064a:	test   eax,eax
   14001064c:	je     0x140010715
   140010652:	mov    rcx,QWORD PTR [rbx]
   140010655:	lea    rdx,[rbp+0x48]
   140010659:	mov    QWORD PTR [rbp+0x48],r15
   14001065d:	call   QWORD PTR [rip+0x4c41d]        # 0x14005ca80
   140010663:	test   eax,eax
   140010665:	jne    0x140010689
   140010667:	mov    rax,QWORD PTR [rsi]
   14001066a:	mov    QWORD PTR [rsi+0x8],rax
   14001066e:	mov    rax,QWORD PTR [rbx]
   140010671:	mov    QWORD PTR [rbx+0x8],rax
   140010675:	cmp    QWORD PTR [rdi+0x18],0x8
   14001067a:	mov    QWORD PTR [rdi+0x10],r15
   14001067e:	jb     0x14001073c
   140010684:	jmp    0x140010739
   140010689:	mov    rdx,QWORD PTR [rbp+0x48]
   14001068d:	lea    rcx,[rbx+0x50]
   140010691:	call   0x14000324c
   140010696:	mov    rcx,QWORD PTR [rbp+0x48]
   14001069a:	call   QWORD PTR [rip+0x30d28]        # 0x1400413c8
   1400106a0:	mov    rbx,QWORD PTR [rsp+0xb8]
   1400106a8:	add    rsp,0x80
   1400106af:	pop    r15
   1400106b1:	pop    r14
   1400106b3:	pop    rdi
   1400106b4:	pop    rsi
   1400106b5:	pop    rbp
   1400106b6:	ret    
   1400106b7:	lea    rcx,[rbp-0x38]
   1400106bb:	mov    r9,r14
   1400106be:	mov    edx,0xe123059d
   1400106c3:	mov    r8d,0x1
   1400106c9:	call   0x140010a9c
   1400106ce:	lea    rdx,[rip+0x4591b]        # 0x140055ff0
   1400106d5:	lea    rcx,[rbp-0x38]
   1400106d9:	call   0x140029fe8
   1400106de:	int3   
   1400106df:	mov    rax,QWORD PTR [rsi]
   1400106e2:	lea    rcx,[rbp-0x38]
   1400106e6:	mov    r9,r14
   1400106e9:	mov    QWORD PTR [rsi+0x8],rax
   1400106ed:	mov    rax,QWORD PTR [rbx]
   1400106f0:	mov    edx,0xe123059d
   1400106f5:	mov    r8d,0x1
   1400106fb:	mov    QWORD PTR [rbx+0x8],rax
   1400106ff:	call   0x140010a9c
   140010704:	lea    rdx,[rip+0x458e5]        # 0x140055ff0
   14001070b:	lea    rcx,[rbp-0x38]
   14001070f:	call   0x140029fe8
   140010714:	int3   
   140010715:	mov    DWORD PTR [rbp-0x40],r15d
   140010719:	mov    DWORD PTR [rbp-0x3c],0xe1232723
   140010720:	mov    rax,QWORD PTR [rbp-0x40]
   140010724:	lea    rdx,[rip+0x45a65]        # 0x140056190
   14001072b:	lea    rcx,[rbp-0x40]
   14001072f:	mov    QWORD PTR [rbp-0x40],rax
   140010733:	call   0x140029fe8
   140010738:	int3   
   140010739:	mov    rdi,QWORD PTR [rdi]
   14001073c:	mov    DWORD PTR [rbp-0x40],r15d
   140010740:	mov    DWORD PTR [rbp-0x3c],0xe1232723
   140010747:	mov    rax,QWORD PTR [rbp-0x40]
   14001074b:	lea    rdx,[rip+0x45a3e]        # 0x140056190
   140010752:	lea    rcx,[rbp-0x40]
   140010756:	mov    WORD PTR [rdi],r15w
   14001075a:	mov    QWORD PTR [rbp-0x40],rax
   14001075e:	call   0x140029fe8
   140010763:	int3   
   140010764:	sub    rsp,0x38
   140010768:	mov    r9d,r8d
   14001076b:	mov    BYTE PTR [rsp+0x20],0x1
   140010770:	call   0x140010794
   140010775:	add    rsp,0x38
   140010779:	ret    
   14001077a:	int3   
   14001077b:	int3   
   14001077c:	sub    rsp,0x38
   140010780:	xor    r9d,r9d
   140010783:	mov    BYTE PTR [rsp+0x20],0x0
   140010788:	call   0x140010794
   14001078d:	add    rsp,0x38
   140010791:	ret    
   140010792:	int3   
   140010793:	int3   
   140010794:	mov    QWORD PTR [rsp+0x10],rbx
   140010799:	mov    QWORD PTR [rsp+0x18],rsi
   14001079e:	push   rbp
   14001079f:	push   rdi
   1400107a0:	push   r14
   1400107a2:	mov    rbp,rsp
   1400107a5:	sub    rsp,0x80
   1400107ac:	mov    rsi,rcx
   1400107af:	mov    rcx,QWORD PTR [rcx+0x8]
   1400107b3:	mov    r14d,r9d
   1400107b6:	mov    rdi,rdx
   1400107b9:	test   rcx,rcx
   1400107bc:	jne    0x1400107c6
   1400107be:	lea    eax,[rcx+0x6]
   1400107c1:	jmp    0x14001089e
   1400107c6:	test   rdx,rdx
   1400107c9:	jne    0x1400107d3
   1400107cb:	lea    eax,[rdx+0x57]
   1400107ce:	jmp    0x14001089e
   1400107d3:	and    QWORD PTR [rbp-0x40],0x0
   1400107d8:	xor    r9d,r9d
   1400107db:	lea    rax,[rbp-0x40]
   1400107df:	mov    QWORD PTR [rsp+0x38],rax
   1400107e4:	and    QWORD PTR [rsp+0x30],0x0
   1400107ea:	lea    rax,[rbp-0x38]
   1400107ee:	mov    QWORD PTR [rsp+0x28],rax
   1400107f3:	and    QWORD PTR [rsp+0x20],0x0
   1400107f9:	lea    edx,[r9+0x6]
   1400107fd:	lea    r8d,[r9+0x4]
   140010801:	call   QWORD PTR [rip+0x30821]        # 0x140041028
   140010807:	mov    ebx,eax
   140010809:	test   eax,eax
   14001080b:	jne    0x14001089c
   140010811:	mov    dl,BYTE PTR [rbp+0x40]
   140010814:	mov    r8,QWORD PTR [rbp-0x38]
   140010818:	lea    r9,[rbp+0x20]
   14001081c:	mov    al,dl
   14001081e:	mov    QWORD PTR [rbp-0x8],rdi
   140010822:	neg    al
   140010824:	sbb    ecx,ecx
   140010826:	and    ecx,r14d
   140010829:	neg    dl
   14001082b:	lea    rdx,[rbp-0x30]
   14001082f:	sbb    eax,eax
   140010831:	and    DWORD PTR [rbp-0x28],ebx
   140010834:	and    QWORD PTR [rbp-0x20],0x0
   140010839:	and    DWORD PTR [rbp-0x18],ebx
   14001083c:	and    DWORD PTR [rbp-0x14],ebx
   14001083f:	and    eax,0xfffffffd
   140010842:	mov    DWORD PTR [rbp-0x30],ecx
   140010845:	lea    ecx,[rbx+0x1]
   140010848:	add    eax,0x4
   14001084b:	mov    DWORD PTR [rbp-0x2c],eax
   14001084e:	mov    DWORD PTR [rbp-0x10],ecx
   140010851:	call   QWORD PTR [rip+0x30911]        # 0x140041168
   140010857:	mov    ebx,eax
   140010859:	test   eax,eax
   14001085b:	jne    0x140010892
   14001085d:	mov    rax,QWORD PTR [rbp+0x20]
   140010861:	and    QWORD PTR [rsp+0x30],0x0
   140010867:	mov    rcx,QWORD PTR [rsi+0x8]
   14001086b:	mov    QWORD PTR [rsp+0x28],rax
   140010870:	and    QWORD PTR [rsp+0x20],0x0
   140010876:	lea    edx,[rbx+0x6]
   140010879:	lea    r8d,[rbx+0x4]
   14001087d:	xor    r9d,r9d
   140010880:	call   QWORD PTR [rip+0x3089a]        # 0x140041120
   140010886:	mov    rcx,QWORD PTR [rbp+0x20]
   14001088a:	mov    ebx,eax
   14001088c:	call   QWORD PTR [rip+0x30b36]        # 0x1400413c8
   140010892:	mov    rcx,QWORD PTR [rbp-0x40]
   140010896:	call   QWORD PTR [rip+0x30b2c]        # 0x1400413c8
   14001089c:	mov    eax,ebx
   14001089e:	lea    r11,[rsp+0x80]
   1400108a6:	mov    rbx,QWORD PTR [r11+0x28]
   1400108aa:	mov    rsi,QWORD PTR [r11+0x30]
   1400108ae:	mov    rsp,r11
   1400108b1:	pop    r14
   1400108b3:	pop    rdi
   1400108b4:	pop    rbp
   1400108b5:	ret    
   1400108b6:	int3   
   1400108b7:	int3   
   1400108b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400108bd:	shr    rdx,1
   1400108c0:	xor    ebx,ebx
   1400108c2:	mov    r10d,0x7ffffffe
   1400108c8:	lea    rax,[rdx-0x1]
   1400108cc:	mov    r9d,ebx
   1400108cf:	mov    r11d,0x80070057
   1400108d5:	cmp    rax,r10
   1400108d8:	cmova  r9d,r11d
   1400108dc:	test   r9d,r9d
   1400108df:	js     0x14001091f
   1400108e1:	mov    r9d,ebx
   1400108e4:	test   rdx,rdx
   1400108e7:	je     0x140010913
   1400108e9:	sub    r10,rdx
   1400108ec:	sub    r8,rcx
   1400108ef:	lea    rax,[r10+rdx*1]
   1400108f3:	test   rax,rax
   1400108f6:	je     0x14001090e
   1400108f8:	movzx  eax,WORD PTR [r8+rcx*1]
   1400108fd:	test   ax,ax
   140010900:	je     0x14001090e
   140010902:	mov    WORD PTR [rcx],ax
   140010905:	add    rcx,0x2
   140010909:	dec    rdx
   14001090c:	jne    0x1400108ef
   14001090e:	test   rdx,rdx
   140010911:	jne    0x140010924
   140010913:	sub    rcx,0x2
   140010917:	mov    r9d,0x8007007a
   14001091d:	jmp    0x140010924
   14001091f:	test   rdx,rdx
   140010922:	je     0x140010927
   140010924:	mov    WORD PTR [rcx],bx
   140010927:	mov    rbx,QWORD PTR [rsp+0x8]
   14001092c:	mov    eax,r9d
   14001092f:	ret    
   140010930:	rex push rbx
   140010932:	sub    rsp,0x30
   140010936:	mov    eax,edx
   140010938:	mov    rbx,rcx
   14001093b:	sub    eax,0x5
   14001093e:	je     0x140010960
   140010940:	dec    eax
   140010942:	je     0x140010959
   140010944:	cmp    eax,0xb1
   140010949:	je     0x140010952
   14001094b:	mov    eax,0xe123054a
   140010950:	jmp    0x140010965
   140010952:	mov    eax,0xe1230547
   140010957:	jmp    0x140010965
   140010959:	mov    eax,0xe1230548
   14001095e:	jmp    0x140010965
   140010960:	mov    eax,0xe1230549
   140010965:	mov    DWORD PTR [rcx+0x8],edx
   140010968:	lea    rdx,[rcx+0xc]
   14001096c:	mov    DWORD PTR [rcx],0x1
   140010972:	mov    DWORD PTR [rcx+0x4],eax
   140010975:	xor    ecx,ecx
   140010977:	mov    WORD PTR [rdx],cx
   14001097a:	test   r8,r8
   14001097d:	je     0x1400109ad
   14001097f:	or     rax,0xffffffffffffffff
   140010983:	inc    rax
   140010986:	cmp    BYTE PTR [r8+rax*1],cl
   14001098a:	jne    0x140010983
   14001098c:	test   rax,rax
   14001098f:	je     0x1400109ad
   140010991:	mov    r9,r8
   140010994:	lea    rcx,[rsp+0x40]
   140010999:	mov    r8d,0x104
   14001099f:	mov    QWORD PTR [rsp+0x20],0x103
   1400109a8:	call   0x140033038
   1400109ad:	mov    rax,rbx
   1400109b0:	add    rsp,0x30
   1400109b4:	pop    rbx
   1400109b5:	ret    
   1400109b6:	int3   
   1400109b7:	int3   
   1400109b8:	rex push rbx
   1400109ba:	sub    rsp,0x20
   1400109be:	mov    r8d,DWORD PTR [rdx+0x4]
   1400109c2:	mov    eax,DWORD PTR [rdx]
   1400109c4:	mov    rbx,rcx
   1400109c7:	mov    DWORD PTR [rcx+0x4],r8d
   1400109cb:	mov    DWORD PTR [rcx],eax
   1400109cd:	mov    eax,DWORD PTR [rdx+0x8]
   1400109d0:	lea    r8,[rdx+0xc]
   1400109d4:	mov    DWORD PTR [rcx+0x8],eax
   1400109d7:	add    rcx,0xc
   1400109db:	mov    edx,0x208
   1400109e0:	call   0x1400108b8
   1400109e5:	mov    rax,rbx
   1400109e8:	add    rsp,0x20
   1400109ec:	pop    rbx
   1400109ed:	ret    
   1400109ee:	int3   
   1400109ef:	int3   
   1400109f0:	mov    rax,rsp
   1400109f3:	mov    QWORD PTR [rax+0x8],rbx
   1400109f7:	mov    QWORD PTR [rax+0x10],rbp
   1400109fb:	mov    QWORD PTR [rax+0x18],rsi
   1400109ff:	mov    QWORD PTR [rax+0x20],rdi
   140010a03:	push   r12
   140010a05:	push   r14
   140010a07:	push   r15
   140010a09:	sub    rsp,0x20
   140010a0d:	lea    r12,[rcx+0x8]
   140010a11:	mov    edi,edx
   140010a13:	mov    r15,rcx
   140010a16:	mov    ebp,edx
   140010a18:	mov    rcx,r12
   140010a1b:	mov    edx,edx
   140010a1d:	mov    r14,r8
   140010a20:	call   0x140010cd8
   140010a25:	lea    rcx,[r15+0x20]
   140010a29:	mov    edx,edi
   140010a2b:	call   0x140010e1c
   140010a30:	xor    ebx,ebx
   140010a32:	test   edi,edi
   140010a34:	je     0x140010a7b
   140010a36:	mov    edi,ebx
   140010a38:	add    r14,0xfffffffffffffff8
   140010a3c:	mov    esi,ebx
   140010a3e:	mov    rcx,QWORD PTR [r15+0x20]
   140010a42:	lea    r14,[r14+0x8]
   140010a46:	mov    rdx,QWORD PTR [r14]
   140010a49:	add    rcx,rsi
   140010a4c:	call   0x14000324c
   140010a51:	mov    rcx,QWORD PTR [r15+0x20]
   140010a55:	add    rcx,rdi
   140010a58:	cmp    QWORD PTR [rcx+0x18],0x8
   140010a5d:	jb     0x140010a62
   140010a5f:	mov    rcx,QWORD PTR [rcx]
   140010a62:	mov    rax,QWORD PTR [r12]
   140010a66:	add    rsi,0x20
   140010a6a:	add    rdi,0x20
   140010a6e:	mov    QWORD PTR [rbx+rax*1],rcx
   140010a72:	add    rbx,0x8
   140010a76:	dec    rbp
   140010a79:	jne    0x140010a3e
   140010a7b:	mov    rbx,QWORD PTR [rsp+0x40]
   140010a80:	mov    rbp,QWORD PTR [rsp+0x48]
   140010a85:	mov    rsi,QWORD PTR [rsp+0x50]
   140010a8a:	mov    rdi,QWORD PTR [rsp+0x58]
   140010a8f:	add    rsp,0x20
   140010a93:	pop    r15
   140010a95:	pop    r14
   140010a97:	pop    r12
   140010a99:	ret    
   140010a9a:	int3   
   140010a9b:	int3   
   140010a9c:	mov    r11,rsp
   140010a9f:	mov    DWORD PTR [r11+0x18],r8d
   140010aa3:	mov    QWORD PTR [r11+0x8],rcx
   140010aa7:	mov    QWORD PTR [r11+0x20],r9
   140010aab:	push   rbx
   140010aac:	sub    rsp,0x30
   140010ab0:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   140010ab8:	mov    rbx,rcx
   140010abb:	mov    DWORD PTR [rcx],0x1
   140010ac1:	mov    DWORD PTR [rcx+0x4],edx
   140010ac4:	xor    eax,eax
   140010ac6:	mov    QWORD PTR [rcx+0x8],rax
   140010aca:	mov    QWORD PTR [rcx+0x10],rax
   140010ace:	mov    QWORD PTR [rcx+0x18],rax
   140010ad2:	mov    QWORD PTR [rcx+0x20],rax
   140010ad6:	mov    QWORD PTR [rcx+0x28],rax
   140010ada:	mov    QWORD PTR [rcx+0x30],rax
   140010ade:	mov    edx,DWORD PTR [rsp+0x50]
   140010ae2:	test   edx,edx
   140010ae4:	je     0x140010af0
   140010ae6:	lea    r8,[r11+0x20]
   140010aea:	call   0x1400109f0
   140010aef:	nop
   140010af0:	mov    rax,rbx
   140010af3:	add    rsp,0x30
   140010af7:	pop    rbx
   140010af8:	ret    
   140010af9:	int3   
   140010afa:	int3   
   140010afb:	int3   
   140010afc:	mov    rax,rsp
   140010aff:	mov    QWORD PTR [rax+0x8],rcx
   140010b03:	push   rsi
   140010b04:	push   rdi
   140010b05:	push   r12
   140010b07:	push   r14
   140010b09:	push   r15
   140010b0b:	sub    rsp,0x30
   140010b0f:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140010b17:	mov    QWORD PTR [rax+0x10],rbx
   140010b1b:	mov    QWORD PTR [rax+0x18],rbp
   140010b1f:	mov    r15,rdx
   140010b22:	mov    r14,rcx
   140010b25:	mov    r8d,DWORD PTR [rdx+0x4]
   140010b29:	mov    eax,DWORD PTR [rdx]
   140010b2b:	mov    DWORD PTR [rcx],eax
   140010b2d:	mov    DWORD PTR [rcx+0x4],r8d
   140010b31:	lea    r12,[rcx+0x8]
   140010b35:	xor    ebx,ebx
   140010b37:	mov    QWORD PTR [r12],rbx
   140010b3b:	mov    QWORD PTR [r12+0x8],rbx
   140010b40:	mov    QWORD PTR [r12+0x10],rbx
   140010b45:	lea    rdi,[rcx+0x20]
   140010b49:	mov    QWORD PTR [rdi],rbx
   140010b4c:	mov    QWORD PTR [rdi+0x8],rbx
   140010b50:	mov    QWORD PTR [rdi+0x10],rbx
   140010b54:	mov    rdx,QWORD PTR [rdx+0x28]
   140010b58:	sub    rdx,QWORD PTR [r15+0x20]
   140010b5c:	sar    rdx,0x5
   140010b60:	test   rdx,rdx
   140010b63:	je     0x140010be4
   140010b65:	mov    rcx,rdi
   140010b68:	call   0x140010e1c
   140010b6d:	mov    rdx,QWORD PTR [r15+0x28]
   140010b71:	sub    rdx,QWORD PTR [r15+0x20]
   140010b75:	sar    rdx,0x5
   140010b79:	mov    rcx,r12
   140010b7c:	call   0x140010cd8
   140010b81:	mov    rax,QWORD PTR [rdi+0x8]
   140010b85:	sub    rax,QWORD PTR [rdi]
   140010b88:	sar    rax,0x5
   140010b8c:	test   rax,rax
   140010b8f:	je     0x140010be4
   140010b91:	mov    ebp,ebx
   140010b93:	mov    rsi,rbp
   140010b96:	shl    rsi,0x5
   140010b9a:	mov    rdx,QWORD PTR [r15+0x20]
   140010b9e:	add    rdx,rsi
   140010ba1:	mov    rcx,QWORD PTR [rdi]
   140010ba4:	add    rcx,rsi
   140010ba7:	cmp    rcx,rdx
   140010baa:	je     0x140010bb8
   140010bac:	or     r9,0xffffffffffffffff
   140010bb0:	xor    r8d,r8d
   140010bb3:	call   0x1400039d4
   140010bb8:	mov    rcx,QWORD PTR [rdi]
   140010bbb:	add    rcx,rsi
   140010bbe:	cmp    QWORD PTR [rcx+0x18],0x8
   140010bc3:	jb     0x140010bc8
   140010bc5:	mov    rcx,QWORD PTR [rcx]
   140010bc8:	mov    rax,QWORD PTR [r12]
   140010bcc:	mov    QWORD PTR [rax+rbp*8],rcx
   140010bd0:	inc    ebx
   140010bd2:	mov    ebp,ebx
   140010bd4:	mov    rax,QWORD PTR [rdi+0x8]
   140010bd8:	sub    rax,QWORD PTR [rdi]
   140010bdb:	sar    rax,0x5
   140010bdf:	cmp    rbp,rax
   140010be2:	jb     0x140010b93
   140010be4:	mov    rax,r14
   140010be7:	mov    rbx,QWORD PTR [rsp+0x68]
   140010bec:	mov    rbp,QWORD PTR [rsp+0x70]
   140010bf1:	add    rsp,0x30
   140010bf5:	pop    r15
   140010bf7:	pop    r14
   140010bf9:	pop    r12
   140010bfb:	pop    rdi
   140010bfc:	pop    rsi
   140010bfd:	ret    
   140010bfe:	int3   
   140010bff:	int3   
   140010c00:	mov    QWORD PTR [rsp+0x8],rcx
   140010c05:	push   rbx
   140010c06:	sub    rsp,0x30
   140010c0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010c13:	mov    rbx,rcx
   140010c16:	add    rcx,0x20
   140010c1a:	call   0x140006a48
   140010c1f:	nop
   140010c20:	mov    rcx,QWORD PTR [rbx+0x8]
   140010c24:	test   rcx,rcx
   140010c27:	je     0x140010c3d
   140010c29:	call   0x14002657c
   140010c2e:	and    QWORD PTR [rbx+0x8],0x0
   140010c33:	and    QWORD PTR [rbx+0x10],0x0
   140010c38:	and    QWORD PTR [rbx+0x18],0x0
   140010c3d:	add    rsp,0x30
   140010c41:	pop    rbx
   140010c42:	ret    
   140010c43:	int3   
   140010c44:	rex push rbx
   140010c46:	sub    rsp,0x80
   140010c4d:	mov    rax,QWORD PTR [rip+0x48434]        # 0x140059088
   140010c54:	xor    rax,rsp
   140010c57:	mov    QWORD PTR [rsp+0x70],rax
   140010c5c:	cmp    DWORD PTR [rcx],0x1
   140010c5f:	mov    rbx,rdx
   140010c62:	jne    0x140010c85
   140010c64:	mov    r8,QWORD PTR [rcx+0x10]
   140010c68:	sub    r8,QWORD PTR [rcx+0x8]
   140010c6c:	sar    r8,0x3
   140010c70:	mov    rax,r8
   140010c73:	neg    rax
   140010c76:	mov    rax,QWORD PTR [rdx]
   140010c79:	mov    edx,DWORD PTR [rcx+0x4]
   140010c7c:	sbb    r9,r9
   140010c7f:	and    r9,QWORD PTR [rcx+0x8]
   140010c83:	jmp    0x140010cbc
   140010c85:	mov    r9d,DWORD PTR [rcx+0x4]
   140010c89:	lea    r8,[rip+0x35060]        # 0x140045cf0
   140010c90:	lea    rcx,[rsp+0x30]
   140010c95:	mov    edx,0x40
   140010c9a:	call   0x140004164
   140010c9f:	lea    rax,[rsp+0x30]
   140010ca4:	lea    r9,[rsp+0x20]
   140010ca9:	mov    QWORD PTR [rsp+0x20],rax
   140010cae:	mov    rax,QWORD PTR [rbx]
   140010cb1:	mov    edx,0xe123055d
   140010cb6:	mov    r8d,0x1
   140010cbc:	mov    rcx,rbx
   140010cbf:	call   QWORD PTR [rax]
   140010cc1:	mov    rcx,QWORD PTR [rsp+0x70]
   140010cc6:	xor    rcx,rsp
   140010cc9:	call   0x1400265a0
   140010cce:	add    rsp,0x80
   140010cd5:	pop    rbx
   140010cd6:	ret    
   140010cd7:	int3   
   140010cd8:	mov    rax,rsp
   140010cdb:	mov    QWORD PTR [rax+0x8],rcx
   140010cdf:	push   rdi
   140010ce0:	sub    rsp,0x40
   140010ce4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140010cec:	mov    QWORD PTR [rax+0x10],rbx
   140010cf0:	mov    QWORD PTR [rax+0x18],rsi
   140010cf4:	mov    rbx,rdx
   140010cf7:	mov    rsi,rcx
   140010cfa:	mov    rax,QWORD PTR [rcx+0x8]
   140010cfe:	mov    r9,QWORD PTR [rcx]
   140010d01:	mov    r8,rax
   140010d04:	sub    r8,r9
   140010d07:	sar    r8,0x3
   140010d0b:	cmp    r8,rdx
   140010d0e:	jbe    0x140010d50
   140010d10:	lea    rbx,[r9+rdx*8]
   140010d14:	cmp    rbx,r9
   140010d17:	jne    0x140010d22
   140010d19:	mov    QWORD PTR [rcx+0x8],r9
   140010d1d:	jmp    0x140010e0b
   140010d22:	cmp    rbx,rax
   140010d25:	je     0x140010e0b
   140010d2b:	mov    rdi,rax
   140010d2e:	sub    rdi,rax
   140010d31:	and    rdi,0xfffffffffffffff8
   140010d35:	mov    r8,rdi
   140010d38:	mov    rdx,rax
   140010d3b:	mov    rcx,rbx
   140010d3e:	call   0x1400265d0
   140010d43:	lea    rax,[rdi+rbx*1]
   140010d47:	mov    QWORD PTR [rsi+0x8],rax
   140010d4b:	jmp    0x140010e0b
   140010d50:	jae    0x140010e0b
   140010d56:	mov    r10,rdx
   140010d59:	sub    r10,r8
   140010d5c:	mov    rdx,QWORD PTR [rcx+0x10]
   140010d60:	mov    rcx,rdx
   140010d63:	sub    rcx,rax
   140010d66:	sar    rcx,0x3
   140010d6a:	cmp    rcx,r10
   140010d6d:	jae    0x140010dc1
   140010d6f:	movabs rcx,0x1fffffffffffffff
   140010d79:	mov    rax,rcx
   140010d7c:	sub    rax,r8
   140010d7f:	cmp    rax,r10
   140010d82:	jae    0x140010d91
   140010d84:	lea    rcx,[rip+0x349c5]        # 0x140045750
   140010d8b:	call   0x140031f18
   140010d90:	int3   
   140010d91:	lea    r11,[r8+r10*1]
   140010d95:	sub    rdx,r9
   140010d98:	sar    rdx,0x3
   140010d9c:	mov    rax,rdx
   140010d9f:	shr    rax,1
   140010da2:	sub    rcx,rax
   140010da5:	cmp    rcx,rdx
   140010da8:	jae    0x140010dae
   140010daa:	xor    edx,edx
   140010dac:	jmp    0x140010db1
   140010dae:	add    rdx,rax
   140010db1:	cmp    rdx,r11
   140010db4:	cmovb  rdx,r11
   140010db8:	mov    rcx,rsi
   140010dbb:	call   0x1400037f8
   140010dc0:	nop
   140010dc1:	mov    rdx,QWORD PTR [rsi+0x8]
   140010dc5:	mov    rax,rdx
   140010dc8:	sub    rax,QWORD PTR [rsi]
   140010dcb:	sar    rax,0x3
   140010dcf:	mov    rcx,rbx
   140010dd2:	sub    rcx,rax
   140010dd5:	mov    QWORD PTR [rsp+0x20],rcx
   140010dda:	mov    QWORD PTR [rsp+0x28],rdx
   140010ddf:	test   rcx,rcx
   140010de2:	je     0x140010df1
   140010de4:	and    QWORD PTR [rdx],0x0
   140010de8:	dec    rcx
   140010deb:	add    rdx,0x8
   140010def:	jmp    0x140010dd5
   140010df1:	mov    rcx,QWORD PTR [rsi+0x8]
   140010df5:	mov    rax,rcx
   140010df8:	sub    rax,QWORD PTR [rsi]
   140010dfb:	sar    rax,0x3
   140010dff:	sub    rbx,rax
   140010e02:	lea    rax,[rcx+rbx*8]
   140010e06:	jmp    0x140010d47
   140010e0b:	mov    rbx,QWORD PTR [rsp+0x58]
   140010e10:	mov    rsi,QWORD PTR [rsp+0x60]
   140010e15:	add    rsp,0x40
   140010e19:	pop    rdi
   140010e1a:	ret    
   140010e1b:	int3   
   140010e1c:	mov    rax,rsp
   140010e1f:	mov    QWORD PTR [rax+0x8],rcx
   140010e23:	push   rdi
   140010e24:	sub    rsp,0x40
   140010e28:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140010e30:	mov    QWORD PTR [rax+0x10],rbx
   140010e34:	mov    rbx,rdx
   140010e37:	mov    rdi,rcx
   140010e3a:	mov    rcx,QWORD PTR [rcx+0x8]
   140010e3e:	sub    rcx,QWORD PTR [rdi]
   140010e41:	sar    rcx,0x5
   140010e45:	cmp    rcx,rdx
   140010e48:	jbe    0x140010e69
   140010e4a:	shl    rbx,0x5
   140010e4e:	add    rbx,QWORD PTR [rdi]
   140010e51:	mov    r9,QWORD PTR [rdi+0x8]
   140010e55:	mov    r8,rbx
   140010e58:	lea    rdx,[rax+0x8]
   140010e5c:	mov    rcx,rdi
   140010e5f:	call   0x140010f18
   140010e64:	jmp    0x140010f0b
   140010e69:	jae    0x140010f0b
   140010e6f:	mov    r8,rdx
   140010e72:	sub    r8,rcx
   140010e75:	mov    rdx,QWORD PTR [rdi+0x10]
   140010e79:	mov    rax,rdx
   140010e7c:	sub    rax,QWORD PTR [rdi+0x8]
   140010e80:	sar    rax,0x5
   140010e84:	cmp    rax,r8
   140010e87:	jae    0x140010edb
   140010e89:	movabs r9,0x7ffffffffffffff
   140010e93:	mov    rax,r9
   140010e96:	sub    rax,rcx
   140010e99:	cmp    rax,r8
   140010e9c:	jae    0x140010eab
   140010e9e:	lea    rcx,[rip+0x348ab]        # 0x140045750
   140010ea5:	call   0x140031f18
   140010eaa:	int3   
   140010eab:	lea    r10,[rcx+r8*1]
   140010eaf:	sub    rdx,QWORD PTR [rdi]
   140010eb2:	sar    rdx,0x5
   140010eb6:	mov    rax,rdx
   140010eb9:	shr    rax,1
   140010ebc:	sub    r9,rax
   140010ebf:	cmp    r9,rdx
   140010ec2:	jae    0x140010ec8
   140010ec4:	xor    edx,edx
   140010ec6:	jmp    0x140010ecb
   140010ec8:	add    rdx,rax
   140010ecb:	cmp    rdx,r10
   140010ece:	cmovb  rdx,r10
   140010ed2:	mov    rcx,rdi
   140010ed5:	call   0x14001101c
   140010eda:	nop
   140010edb:	mov    rcx,QWORD PTR [rdi+0x8]
   140010edf:	mov    rax,rcx
   140010ee2:	sub    rax,QWORD PTR [rdi]
   140010ee5:	sar    rax,0x5
   140010ee9:	mov    rdx,rbx
   140010eec:	sub    rdx,rax
   140010eef:	call   0x140011108
   140010ef4:	nop
   140010ef5:	mov    rax,QWORD PTR [rdi+0x8]
   140010ef9:	sub    rax,QWORD PTR [rdi]
   140010efc:	sar    rax,0x5
   140010f00:	sub    rbx,rax
   140010f03:	shl    rbx,0x5
   140010f07:	add    QWORD PTR [rdi+0x8],rbx
   140010f0b:	mov    rbx,QWORD PTR [rsp+0x58]
   140010f10:	add    rsp,0x40
   140010f14:	pop    rdi
   140010f15:	ret    
   140010f16:	int3   
   140010f17:	int3   
   140010f18:	mov    rax,rsp
   140010f1b:	mov    QWORD PTR [rax+0x8],rbx
   140010f1f:	mov    QWORD PTR [rax+0x10],rbp
   140010f23:	mov    QWORD PTR [rax+0x20],rsi
   140010f27:	mov    QWORD PTR [rax+0x18],r8
   140010f2b:	push   rdi
   140010f2c:	push   r14
   140010f2e:	push   r15
   140010f30:	sub    rsp,0x20
   140010f34:	mov    rdi,QWORD PTR [rcx]
   140010f37:	mov    rbx,r9
   140010f3a:	mov    r15,rdx
   140010f3d:	mov    rsi,rcx
   140010f40:	cmp    r8,rdi
   140010f43:	jne    0x140010f8c
   140010f45:	mov    rbp,QWORD PTR [rcx+0x8]
   140010f49:	cmp    rbx,rbp
   140010f4c:	jne    0x140010f8c
   140010f4e:	cmp    rdi,rbp
   140010f51:	je     0x140010f83
   140010f53:	xor    r14d,r14d
   140010f56:	cmp    QWORD PTR [rdi+0x18],0x8
   140010f5b:	jb     0x140010f65
   140010f5d:	mov    rcx,QWORD PTR [rdi]
   140010f60:	call   0x14002657c
   140010f65:	mov    QWORD PTR [rdi+0x18],0x7
   140010f6d:	mov    QWORD PTR [rdi+0x10],r14
   140010f71:	mov    WORD PTR [rdi],r14w
   140010f75:	add    rdi,0x20
   140010f79:	cmp    rdi,rbp
   140010f7c:	jne    0x140010f56
   140010f7e:	mov    r8,QWORD PTR [rsp+0x50]
   140010f83:	mov    rax,QWORD PTR [rsi]
   140010f86:	mov    QWORD PTR [rsi+0x8],rax
   140010f8a:	jmp    0x140010ffa
   140010f8c:	cmp    r8,rbx
   140010f8f:	je     0x140010ffa
   140010f91:	mov    rbp,QWORD PTR [rcx+0x8]
   140010f95:	mov    rdi,r8
   140010f98:	cmp    rbx,rbp
   140010f9b:	je     0x140010fba
   140010f9d:	mov    rdx,rbx
   140010fa0:	mov    rcx,rdi
   140010fa3:	call   0x14001117c
   140010fa8:	add    rbx,0x20
   140010fac:	add    rdi,0x20
   140010fb0:	cmp    rbx,rbp
   140010fb3:	jne    0x140010f9d
   140010fb5:	mov    r8,QWORD PTR [rsp+0x50]
   140010fba:	mov    rbp,QWORD PTR [rsi+0x8]
   140010fbe:	mov    rbx,rdi
   140010fc1:	cmp    rdi,rbp
   140010fc4:	je     0x140010ff6
   140010fc6:	xor    r14d,r14d
   140010fc9:	cmp    QWORD PTR [rbx+0x18],0x8
   140010fce:	jb     0x140010fd8
   140010fd0:	mov    rcx,QWORD PTR [rbx]
   140010fd3:	call   0x14002657c
   140010fd8:	mov    QWORD PTR [rbx+0x18],0x7
   140010fe0:	mov    QWORD PTR [rbx+0x10],r14
   140010fe4:	mov    WORD PTR [rbx],r14w
   140010fe8:	add    rbx,0x20
   140010fec:	cmp    rbx,rbp
   140010fef:	jne    0x140010fc9
   140010ff1:	mov    r8,QWORD PTR [rsp+0x50]
   140010ff6:	mov    QWORD PTR [rsi+0x8],rdi
   140010ffa:	mov    rbx,QWORD PTR [rsp+0x40]
   140010fff:	mov    rbp,QWORD PTR [rsp+0x48]
   140011004:	mov    rsi,QWORD PTR [rsp+0x58]
   140011009:	mov    QWORD PTR [r15],r8
   14001100c:	mov    rax,r15
   14001100f:	add    rsp,0x20
   140011013:	pop    r15
   140011015:	pop    r14
   140011017:	pop    rdi
   140011018:	ret    
   140011019:	int3   
   14001101a:	int3   
   14001101b:	int3   
   14001101c:	mov    rax,rsp
   14001101f:	push   rdi
   140011020:	push   r12
   140011022:	push   r13
   140011024:	push   r14
   140011026:	push   r15
   140011028:	sub    rsp,0x40
   14001102c:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140011034:	mov    QWORD PTR [rax+0x8],rbx
   140011038:	mov    QWORD PTR [rax+0x18],rsi
   14001103c:	mov    rdi,rdx
   14001103f:	mov    r15,rcx
   140011042:	xor    r13d,r13d
   140011045:	mov    esi,r13d
   140011048:	mov    QWORD PTR [rsp+0x78],r13
   14001104d:	test   rdx,rdx
   140011050:	je     0x140011080
   140011052:	movabs rax,0x7ffffffffffffff
   14001105c:	cmp    rdx,rax
   14001105f:	ja     0x14001107a
   140011061:	mov    rcx,rdx
   140011064:	shl    rcx,0x5
   140011068:	call   0x140026da8
   14001106d:	mov    rsi,rax
   140011070:	mov    QWORD PTR [rsp+0x78],rax
   140011075:	test   rax,rax
   140011078:	jne    0x140011080
   14001107a:	call   0x140031ed4
   14001107f:	nop
   140011080:	mov    r8,rsi
   140011083:	mov    rdx,QWORD PTR [r15+0x8]
   140011087:	mov    rcx,QWORD PTR [r15]
   14001108a:	call   0x140011228
   14001108f:	nop
   140011090:	mov    r12,QWORD PTR [r15+0x8]
   140011094:	mov    rbx,QWORD PTR [r15]
   140011097:	mov    r14,r12
   14001109a:	sub    r14,rbx
   14001109d:	test   rbx,rbx
   1400110a0:	je     0x1400110d4
   1400110a2:	jmp    0x1400110c7
   1400110a4:	cmp    QWORD PTR [rbx+0x18],0x8
   1400110a9:	jb     0x1400110b3
   1400110ab:	mov    rcx,QWORD PTR [rbx]
   1400110ae:	call   0x14002657c
   1400110b3:	mov    QWORD PTR [rbx+0x18],0x7
   1400110bb:	mov    QWORD PTR [rbx+0x10],r13
   1400110bf:	mov    WORD PTR [rbx],r13w
   1400110c3:	add    rbx,0x20
   1400110c7:	cmp    rbx,r12
   1400110ca:	jne    0x1400110a4
   1400110cc:	mov    rcx,QWORD PTR [r15]
   1400110cf:	call   0x14002657c
   1400110d4:	shl    rdi,0x5
   1400110d8:	add    rdi,rsi
   1400110db:	mov    QWORD PTR [r15+0x10],rdi
   1400110df:	and    r14,0xffffffffffffffe0
   1400110e3:	add    r14,rsi
   1400110e6:	mov    QWORD PTR [r15+0x8],r14
   1400110ea:	mov    QWORD PTR [r15],rsi
   1400110ed:	lea    r11,[rsp+0x40]
   1400110f2:	mov    rbx,QWORD PTR [r11+0x30]
   1400110f6:	mov    rsi,QWORD PTR [r11+0x40]
   1400110fa:	mov    rsp,r11
   1400110fd:	pop    r15
   1400110ff:	pop    r14
   140011101:	pop    r13
   140011103:	pop    r12
   140011105:	pop    rdi
   140011106:	ret    
   140011107:	int3   
   140011108:	mov    rax,rsp
   14001110b:	mov    QWORD PTR [rax+0x20],r9
   14001110f:	mov    QWORD PTR [rax+0x18],r8
   140011113:	mov    QWORD PTR [rax+0x8],rcx
   140011117:	sub    rsp,0x38
   14001111b:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140011123:	mov    QWORD PTR [rsp+0x58],rcx
   140011128:	xor    r8d,r8d
   14001112b:	test   rdx,rdx
   14001112e:	je     0x140011174
   140011130:	mov    QWORD PTR [rsp+0x50],rcx
   140011135:	test   rcx,rcx
   140011138:	je     0x140011161
   14001113a:	mov    QWORD PTR [rcx+0x10],r8
   14001113e:	mov    QWORD PTR [rcx+0x18],r8
   140011142:	mov    QWORD PTR [rcx+0x18],0x7
   14001114a:	mov    QWORD PTR [rcx+0x10],r8
   14001114e:	cmp    QWORD PTR [rcx+0x18],0x8
   140011153:	jb     0x14001115a
   140011155:	mov    rax,QWORD PTR [rcx]
   140011158:	jmp    0x14001115d
   14001115a:	mov    rax,rcx
   14001115d:	mov    WORD PTR [rax],r8w
   140011161:	dec    rdx
   140011164:	mov    QWORD PTR [rsp+0x48],rdx
   140011169:	add    rcx,0x20
   14001116d:	mov    QWORD PTR [rsp+0x40],rcx
   140011172:	jmp    0x14001112b
   140011174:	add    rsp,0x38
   140011178:	ret    
   140011179:	int3   
   14001117a:	int3   
   14001117b:	int3   
   14001117c:	rex push rdi
   14001117e:	sub    rsp,0x30
   140011182:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001118b:	mov    QWORD PTR [rsp+0x50],rbx
   140011190:	mov    QWORD PTR [rsp+0x58],rsi
   140011195:	mov    rdi,rdx
   140011198:	mov    rbx,rcx
   14001119b:	cmp    rcx,rdx
   14001119e:	je     0x140011212
   1400111a0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400111a5:	jb     0x1400111af
   1400111a7:	mov    rcx,QWORD PTR [rcx]
   1400111aa:	call   0x14002657c
   1400111af:	mov    QWORD PTR [rbx+0x18],0x7
   1400111b7:	xor    esi,esi
   1400111b9:	mov    QWORD PTR [rbx+0x10],rsi
   1400111bd:	mov    WORD PTR [rbx],si
   1400111c0:	cmp    QWORD PTR [rdi+0x18],0x8
   1400111c5:	jae    0x1400111e0
   1400111c7:	mov    r8,QWORD PTR [rdi+0x10]
   1400111cb:	inc    r8
   1400111ce:	je     0x1400111f3
   1400111d0:	add    r8,r8
   1400111d3:	mov    rdx,rdi
   1400111d6:	mov    rcx,rbx
   1400111d9:	call   0x1400265d0
   1400111de:	jmp    0x1400111f3
   1400111e0:	mov    QWORD PTR [rsp+0x40],rbx
   1400111e5:	mov    QWORD PTR [rsp+0x48],rbx
   1400111ea:	mov    rax,QWORD PTR [rdi]
   1400111ed:	mov    QWORD PTR [rbx],rax
   1400111f0:	mov    QWORD PTR [rdi],rsi
   1400111f3:	mov    rax,QWORD PTR [rdi+0x10]
   1400111f7:	mov    QWORD PTR [rbx+0x10],rax
   1400111fb:	mov    rax,QWORD PTR [rdi+0x18]
   1400111ff:	mov    QWORD PTR [rbx+0x18],rax
   140011203:	mov    QWORD PTR [rdi+0x18],0x7
   14001120b:	mov    QWORD PTR [rdi+0x10],rsi
   14001120f:	mov    WORD PTR [rdi],si
   140011212:	mov    rax,rbx
   140011215:	mov    rbx,QWORD PTR [rsp+0x50]
   14001121a:	mov    rsi,QWORD PTR [rsp+0x58]
   14001121f:	add    rsp,0x30
   140011223:	pop    rdi
   140011224:	ret    
   140011225:	int3   
   140011226:	int3   
   140011227:	int3   
   140011228:	mov    QWORD PTR [rsp+0x20],r9
   14001122d:	mov    QWORD PTR [rsp+0x18],r8
   140011232:	push   rbx
   140011233:	push   rsi
   140011234:	push   rdi
   140011235:	sub    rsp,0x30
   140011239:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011242:	mov    rbx,r8
   140011245:	mov    rsi,rdx
   140011248:	mov    rdi,rcx
   14001124b:	mov    QWORD PTR [rsp+0x68],rbx
   140011250:	cmp    rdi,rsi
   140011253:	je     0x140011274
   140011255:	mov    r8,rdi
   140011258:	mov    rdx,rbx
   14001125b:	call   0x140011280
   140011260:	add    rbx,0x20
   140011264:	mov    QWORD PTR [rsp+0x60],rbx
   140011269:	add    rdi,0x20
   14001126d:	mov    QWORD PTR [rsp+0x50],rdi
   140011272:	jmp    0x140011250
   140011274:	mov    rax,rbx
   140011277:	add    rsp,0x30
   14001127b:	pop    rdi
   14001127c:	pop    rsi
   14001127d:	pop    rbx
   14001127e:	ret    
   14001127f:	int3   
   140011280:	mov    rax,rsp
   140011283:	mov    QWORD PTR [rax+0x10],rdx
   140011287:	mov    QWORD PTR [rax+0x8],rcx
   14001128b:	push   rbx
   14001128c:	push   rsi
   14001128d:	push   rdi
   14001128e:	sub    rsp,0x30
   140011292:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001129a:	mov    rdi,r8
   14001129d:	mov    rbx,rdx
   1400112a0:	mov    QWORD PTR [rax+0x8],rdx
   1400112a4:	xor    esi,esi
   1400112a6:	test   rdx,rdx
   1400112a9:	je     0x14001130c
   1400112ab:	mov    QWORD PTR [rdx+0x18],0x7
   1400112b3:	mov    QWORD PTR [rdx+0x10],rsi
   1400112b7:	mov    WORD PTR [rdx],si
   1400112ba:	cmp    QWORD PTR [r8+0x18],0x8
   1400112bf:	jae    0x1400112da
   1400112c1:	mov    r8,QWORD PTR [r8+0x10]
   1400112c5:	inc    r8
   1400112c8:	je     0x1400112ed
   1400112ca:	add    r8,r8
   1400112cd:	mov    rdx,rdi
   1400112d0:	mov    rcx,rbx
   1400112d3:	call   0x1400265d0
   1400112d8:	jmp    0x1400112ed
   1400112da:	mov    QWORD PTR [rsp+0x68],rdx
   1400112df:	mov    QWORD PTR [rsp+0x28],rdx
   1400112e4:	mov    rax,QWORD PTR [r8]
   1400112e7:	mov    QWORD PTR [rdx],rax
   1400112ea:	mov    QWORD PTR [r8],rsi
   1400112ed:	mov    rax,QWORD PTR [rdi+0x10]
   1400112f1:	mov    QWORD PTR [rbx+0x10],rax
   1400112f5:	mov    rax,QWORD PTR [rdi+0x18]
   1400112f9:	mov    QWORD PTR [rbx+0x18],rax
   1400112fd:	mov    QWORD PTR [rdi+0x18],0x7
   140011305:	mov    QWORD PTR [rdi+0x10],rsi
   140011309:	mov    WORD PTR [rdi],si
   14001130c:	add    rsp,0x30
   140011310:	pop    rdi
   140011311:	pop    rsi
   140011312:	pop    rbx
   140011313:	ret    
   140011314:	mov    QWORD PTR [rsp+0x18],r8
   140011319:	mov    QWORD PTR [rsp+0x20],r9
   14001131e:	push   rbx
   14001131f:	push   rsi
   140011320:	push   rdi
   140011321:	sub    rsp,0x20
   140011325:	xor    edi,edi
   140011327:	lea    rax,[rdx-0x1]
   14001132b:	mov    rsi,rcx
   14001132e:	cmp    rax,0x7ffffffe
   140011334:	mov    ecx,0x80070057
   140011339:	cmova  edi,ecx
   14001133c:	test   edi,edi
   14001133e:	js     0x140011374
   140011340:	lea    rbx,[rdx-0x1]
   140011344:	lea    r9,[rsp+0x58]
   140011349:	mov    rcx,rsi
   14001134c:	mov    rdx,rbx
   14001134f:	xor    edi,edi
   140011351:	call   0x14003318c
   140011356:	test   eax,eax
   140011358:	js     0x140011369
   14001135a:	cdqe   
   14001135c:	cmp    rax,rbx
   14001135f:	ja     0x140011369
   140011361:	jne    0x14001137c
   140011363:	mov    BYTE PTR [rbx+rsi*1],dil
   140011367:	jmp    0x14001137c
   140011369:	mov    BYTE PTR [rbx+rsi*1],dil
   14001136d:	mov    edi,0x8007007a
   140011372:	jmp    0x14001137c
   140011374:	test   rdx,rdx
   140011377:	je     0x14001137c
   140011379:	mov    BYTE PTR [rsi],0x0
   14001137c:	mov    eax,edi
   14001137e:	add    rsp,0x20
   140011382:	pop    rdi
   140011383:	pop    rsi
   140011384:	pop    rbx
   140011385:	ret    
   140011386:	int3   
   140011387:	int3   
   140011388:	lea    rax,[rip+0x34f19]        # 0x1400462a8
   14001138f:	mov    QWORD PTR [rcx],rax
   140011392:	ret    
   140011393:	int3   
   140011394:	xor    al,al
   140011396:	ret    
   140011397:	int3   
   140011398:	rex push rbx
   14001139a:	sub    rsp,0x20
   14001139e:	lea    rax,[rip+0x34f03]        # 0x1400462a8
   1400113a5:	mov    rbx,rcx
   1400113a8:	mov    QWORD PTR [rcx],rax
   1400113ab:	test   dl,0x1
   1400113ae:	je     0x1400113b5
   1400113b0:	call   0x14002657c
   1400113b5:	mov    rax,rbx
   1400113b8:	add    rsp,0x20
   1400113bc:	pop    rbx
   1400113bd:	ret    
   1400113be:	int3   
   1400113bf:	int3   
   1400113c0:	sub    rsp,0x28
   1400113c4:	call   QWORD PTR [rip+0x3000e]        # 0x1400413d8
   1400113ca:	movzx  ecx,ax
   1400113cd:	or     ecx,0x80070000
   1400113d3:	test   eax,eax
   1400113d5:	cmovle ecx,eax
   1400113d8:	call   0x14000400c
   1400113dd:	int3   
   1400113de:	int3   
   1400113df:	int3   
   1400113e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400113e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400113ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400113ef:	push   rdi
   1400113f0:	push   r14
   1400113f2:	push   r15
   1400113f4:	sub    rsp,0x20
   1400113f8:	mov    r14,r9
   1400113fb:	mov    ebx,edx
   1400113fd:	mov    rdi,rcx
   140011400:	mov    r15d,0xc0000000
   140011406:	test   edx,edx
   140011408:	jns    0x14001141a
   14001140a:	mov    eax,edx
   14001140c:	and    eax,r15d
   14001140f:	cmp    eax,r15d
   140011412:	jne    0x14001141a
   140011414:	mov    rsi,QWORD PTR [rcx+0x10]
   140011418:	jmp    0x14001141e
   14001141a:	mov    rsi,QWORD PTR [rcx+0x8]
   14001141e:	mov    ecx,edx
   140011420:	call   0x140011df0
   140011425:	mov    rbp,rax
   140011428:	test   rax,rax
   14001142b:	je     0x140011444
   14001142d:	mov    r8,rsi
   140011430:	mov    rdx,rax
   140011433:	mov    rcx,rdi
   140011436:	call   0x1400119a8
   14001143b:	mov    rcx,rbp
   14001143e:	call   QWORD PTR [rip+0x2ff84]        # 0x1400413c8
   140011444:	mov    r8,r14
   140011447:	mov    ecx,ebx
   140011449:	call   0x140011d9c
   14001144e:	mov    rbp,rax
   140011451:	test   rax,rax
   140011454:	je     0x14001146d
   140011456:	mov    r8,rsi
   140011459:	mov    rdx,rax
   14001145c:	mov    rcx,rdi
   14001145f:	call   0x1400119a8
   140011464:	mov    rcx,rbp
   140011467:	call   QWORD PTR [rip+0x2ff5b]        # 0x1400413c8
   14001146d:	and    ebx,r15d
   140011470:	cmp    ebx,r15d
   140011473:	jne    0x140011479
   140011475:	mov    BYTE PTR [rdi+0x18],0x1
   140011479:	mov    rbx,QWORD PTR [rsp+0x40]
   14001147e:	mov    rbp,QWORD PTR [rsp+0x48]
   140011483:	mov    rsi,QWORD PTR [rsp+0x50]
   140011488:	add    rsp,0x20
   14001148c:	pop    r15
   14001148e:	pop    r14
   140011490:	pop    rdi
   140011491:	ret    
   140011492:	int3   
   140011493:	int3   
   140011494:	mov    QWORD PTR [rsp+0x18],rbx
   140011499:	push   rbp
   14001149a:	push   rsi
   14001149b:	push   rdi
   14001149c:	push   r14
   14001149e:	push   r15
   1400114a0:	sub    rsp,0x40
   1400114a4:	mov    rax,QWORD PTR [rip+0x47bdd]        # 0x140059088
   1400114ab:	xor    rax,rsp
   1400114ae:	mov    QWORD PTR [rsp+0x38],rax
   1400114b3:	mov    r14,r9
   1400114b6:	mov    ebx,edx
   1400114b8:	mov    rdi,rcx
   1400114bb:	mov    r15d,0xc0000000
   1400114c1:	test   edx,edx
   1400114c3:	jns    0x1400114d5
   1400114c5:	mov    eax,edx
   1400114c7:	and    eax,r15d
   1400114ca:	cmp    eax,r15d
   1400114cd:	jne    0x1400114d5
   1400114cf:	mov    rbp,QWORD PTR [rcx+0x10]
   1400114d3:	jmp    0x1400114d9
   1400114d5:	mov    rbp,QWORD PTR [rcx+0x8]
   1400114d9:	cmp    edx,0xa1230917
   1400114df:	je     0x140011549
   1400114e1:	mov    esi,edx
   1400114e3:	shr    esi,0x1e
   1400114e6:	lea    eax,[rsi-0x2]
   1400114e9:	cmp    eax,0x1
   1400114ec:	ja     0x140011549
   1400114ee:	movzx  r9d,dx
   1400114f2:	lea    r8,[rip+0x34d9f]        # 0x140046298
   1400114f9:	lea    rcx,[rsp+0x28]
   1400114fe:	mov    edx,0xa
   140011503:	call   0x140011314
   140011508:	xor    ecx,ecx
   14001150a:	lea    rax,[rsp+0x28]
   14001150f:	cmp    esi,0x3
   140011512:	lea    r8,[rsp+0x20]
   140011517:	mov    QWORD PTR [rsp+0x20],rax
   14001151c:	setne  cl
   14001151f:	add    ecx,0x21230001
   140011525:	call   0x140011d48
   14001152a:	mov    rsi,rax
   14001152d:	test   rax,rax
   140011530:	je     0x140011549
   140011532:	mov    r8,rbp
   140011535:	mov    rdx,rax
   140011538:	mov    rcx,rdi
   14001153b:	call   0x1400116d4
   140011540:	mov    rcx,rsi
   140011543:	call   QWORD PTR [rip+0x2fe7f]        # 0x1400413c8
   140011549:	mov    r8,r14
   14001154c:	mov    ecx,ebx
   14001154e:	call   0x140011d48
   140011553:	mov    rsi,rax
   140011556:	test   rax,rax
   140011559:	je     0x140011572
   14001155b:	mov    r8,rbp
   14001155e:	mov    rdx,rax
   140011561:	mov    rcx,rdi
   140011564:	call   0x1400116d4
   140011569:	mov    rcx,rsi
   14001156c:	call   QWORD PTR [rip+0x2fe56]        # 0x1400413c8
   140011572:	and    ebx,r15d
   140011575:	cmp    ebx,r15d
   140011578:	jne    0x14001157e
   14001157a:	mov    BYTE PTR [rdi+0x18],0x1
   14001157e:	mov    rcx,QWORD PTR [rsp+0x38]
   140011583:	xor    rcx,rsp
   140011586:	call   0x1400265a0
   14001158b:	mov    rbx,QWORD PTR [rsp+0x80]
   140011593:	add    rsp,0x40
   140011597:	pop    r15
   140011599:	pop    r14
   14001159b:	pop    rdi
   14001159c:	pop    rsi
   14001159d:	pop    rbp
   14001159e:	ret    
   14001159f:	int3   
   1400115a0:	mov    al,BYTE PTR [rcx+0x18]
   1400115a3:	ret    
   1400115a4:	mov    QWORD PTR [rsp+0x18],rbx
   1400115a9:	mov    QWORD PTR [rsp+0x20],rsi
   1400115ae:	push   rdi
   1400115af:	sub    rsp,0x50
   1400115b3:	mov    rax,QWORD PTR [rip+0x47ace]        # 0x140059088
   1400115ba:	xor    rax,rsp
   1400115bd:	mov    QWORD PTR [rsp+0x40],rax
   1400115c2:	mov    rbx,rcx
   1400115c5:	mov    rcx,rdx
   1400115c8:	call   0x14002f3b4
   1400115cd:	mov    ecx,eax
   1400115cf:	mov    edi,eax
   1400115d1:	call   0x14003167c
   1400115d6:	mov    rcx,rax
   1400115d9:	mov    rsi,rax
   1400115dc:	call   QWORD PTR [rip+0x2fe6e]        # 0x140041450
   1400115e2:	cmp    eax,0x2
   1400115e5:	je     0x1400115ee
   1400115e7:	xor    al,al
   1400115e9:	jmp    0x140011681
   1400115ee:	test   edi,edi
   1400115f0:	je     0x140011608
   1400115f2:	dec    edi
   1400115f4:	je     0x140011601
   1400115f6:	dec    edi
   1400115f8:	jne    0x140011616
   1400115fa:	mov    ecx,0xfffffff4
   1400115ff:	jmp    0x14001160d
   140011601:	mov    ecx,0xfffffff5
   140011606:	jmp    0x14001160d
   140011608:	mov    ecx,0xfffffff6
   14001160d:	call   QWORD PTR [rip+0x2fe25]        # 0x140041438
   140011613:	mov    rsi,rax
   140011616:	lea    rdx,[rsp+0x20]
   14001161b:	mov    rcx,rsi
   14001161e:	call   QWORD PTR [rip+0x2ff5c]        # 0x140041580
   140011624:	test   eax,eax
   140011626:	je     0x1400115e7
   140011628:	lea    rdx,[rsp+0x28]
   14001162d:	mov    rcx,rsi
   140011630:	call   QWORD PTR [rip+0x2ffb2]        # 0x1400415e8
   140011636:	mov    edx,0x1
   14001163b:	test   eax,eax
   14001163d:	je     0x140011664
   14001163f:	movsx  eax,WORD PTR [rsp+0x34]
   140011644:	movsx  ecx,WORD PTR [rsp+0x38]
   140011649:	sub    ecx,eax
   14001164b:	cmp    QWORD PTR [rbx+0x28],0x7fffffff
   140011653:	lea    eax,[rdx+rcx*1]
   140011656:	cdqe   
   140011658:	mov    QWORD PTR [rbx+0x20],rax
   14001165c:	jne    0x140011671
   14001165e:	mov    QWORD PTR [rbx+0x28],rax
   140011662:	jmp    0x140011671
   140011664:	mov    ecx,0x19
   140011669:	mov    QWORD PTR [rbx+0x20],rcx
   14001166d:	mov    QWORD PTR [rbx+0x28],rcx
   140011671:	cmp    QWORD PTR [rbx+0x20],rdx
   140011675:	jae    0x14001167f
   140011677:	mov    QWORD PTR [rbx+0x20],rdx
   14001167b:	mov    QWORD PTR [rbx+0x28],rdx
   14001167f:	mov    al,dl
   140011681:	mov    rcx,QWORD PTR [rsp+0x40]
   140011686:	xor    rcx,rsp
   140011689:	call   0x1400265a0
   14001168e:	mov    rbx,QWORD PTR [rsp+0x70]
   140011693:	mov    rsi,QWORD PTR [rsp+0x78]
   140011698:	add    rsp,0x50
   14001169c:	pop    rdi
   14001169d:	ret    
   14001169e:	int3   
   14001169f:	int3   
   1400116a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400116a5:	push   rbx
   1400116a6:	sub    rsp,0x30
   1400116aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400116b3:	mov    rbx,rcx
   1400116b6:	lea    rax,[rip+0x34beb]        # 0x1400462a8
   1400116bd:	mov    QWORD PTR [rcx],rax
   1400116c0:	test   dl,0x1
   1400116c3:	je     0x1400116ca
   1400116c5:	call   0x14002657c
   1400116ca:	mov    rax,rbx
   1400116cd:	add    rsp,0x30
   1400116d1:	pop    rbx
   1400116d2:	ret    
   1400116d3:	int3   
   1400116d4:	rex push rbx
   1400116d6:	push   rsi
   1400116d7:	push   rdi
   1400116d8:	sub    rsp,0x190
   1400116df:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   1400116e8:	mov    rax,QWORD PTR [rip+0x47999]        # 0x140059088
   1400116ef:	xor    rax,rsp
   1400116f2:	mov    QWORD PTR [rsp+0x180],rax
   1400116fa:	mov    rbx,r8
   1400116fd:	mov    QWORD PTR [rsp+0x48],rbx
   140011702:	mov    rsi,rdx
   140011705:	mov    rdi,rcx
   140011708:	mov    QWORD PTR [rsp+0x50],rcx
   14001170d:	mov    QWORD PTR [rsp+0x40],rdx
   140011712:	mov    QWORD PTR [rsp+0x30],rbx
   140011717:	mov    rdx,r8
   14001171a:	call   0x1400115a4
   14001171f:	xor    r8d,r8d
   140011722:	test   al,al
   140011724:	je     0x140011945
   14001172a:	cmp    BYTE PTR [rdi+0x30],r8b
   14001172e:	jne    0x14001198c
   140011734:	or     rax,0xffffffffffffffff
   140011738:	inc    rax
   14001173b:	cmp    BYTE PTR [rsi+rax*1],r8b
   14001173f:	jne    0x140011738
   140011741:	mov    QWORD PTR [rsp+0x40],rax
   140011746:	mov    QWORD PTR [rsp+0x30],r8
   14001174b:	mov    rcx,QWORD PTR [rdi+0x28]
   14001174f:	cmp    rcx,0x2
   140011753:	jbe    0x14001179a
   140011755:	lea    rdx,[rcx-0x2]
   140011759:	test   rdx,rdx
   14001175c:	jne    0x140011763
   14001175e:	mov    rbx,r8
   140011761:	jmp    0x14001179d
   140011763:	mov    rbx,rsi
   140011766:	mov    rax,r8
   140011769:	mov    cl,BYTE PTR [rsi]
   14001176b:	test   cl,cl
   14001176d:	je     0x140011790
   14001176f:	cmp    cl,0xa
   140011772:	jne    0x140011781
   140011774:	inc    rax
   140011777:	mov    QWORD PTR [rsp+0x30],rax
   14001177c:	cmp    rax,rdx
   14001177f:	jae    0x140011788
   140011781:	inc    rbx
   140011784:	mov    cl,BYTE PTR [rbx]
   140011786:	jmp    0x14001176b
   140011788:	sub    rbx,rsi
   14001178b:	inc    rbx
   14001178e:	jmp    0x14001179d
   140011790:	mov    QWORD PTR [rsp+0x30],rax
   140011795:	sub    rbx,rsi
   140011798:	jmp    0x14001179d
   14001179a:	mov    rbx,rax
   14001179d:	mov    rcx,QWORD PTR [rsp+0x48]
   1400117a2:	call   0x14002f3b4
   1400117a7:	mov    ecx,eax
   1400117a9:	call   0x14003167c
   1400117ae:	mov    rcx,rax
   1400117b1:	xor    edx,edx
   1400117b3:	mov    QWORD PTR [rsp+0x20],rdx
   1400117b8:	jmp    0x14001191a
   1400117bd:	mov    rax,QWORD PTR [rsp+0x40]
   1400117c2:	cmp    rbx,rax
   1400117c5:	je     0x14001198c
   1400117cb:	add    rsi,rbx
   1400117ce:	sub    rax,rbx
   1400117d1:	mov    QWORD PTR [rsp+0x40],rax
   1400117d6:	xor    ebx,ebx
   1400117d8:	cmp    QWORD PTR [rdi+0x38],rbx
   1400117dc:	jne    0x1400117ff
   1400117de:	xor    r8d,r8d
   1400117e1:	mov    ecx,0x21230006
   1400117e6:	call   0x140011d9c
   1400117eb:	mov    QWORD PTR [rdi+0x38],rax
   1400117ef:	test   rax,rax
   1400117f2:	jne    0x1400117ff
   1400117f4:	lea    rax,[rip+0x34a55]        # 0x140046250
   1400117fb:	mov    QWORD PTR [rdi+0x38],rax
   1400117ff:	mov    rax,QWORD PTR [rdi+0x38]
   140011803:	mov    QWORD PTR [rsp+0x30],rax
   140011808:	test   rax,rax
   14001180b:	jne    0x140011833
   14001180d:	xor    r8d,r8d
   140011810:	mov    ecx,0x21230006
   140011815:	call   0x140011d9c
   14001181a:	mov    QWORD PTR [rdi+0x38],rax
   14001181e:	test   rax,rax
   140011821:	jne    0x14001182e
   140011823:	lea    rax,[rip+0x34a26]        # 0x140046250
   14001182a:	mov    QWORD PTR [rdi+0x38],rax
   14001182e:	mov    rax,QWORD PTR [rsp+0x30]
   140011833:	mov    rcx,QWORD PTR [rdi+0x38]
   140011837:	mov    QWORD PTR [rsp+0x30],rcx
   14001183c:	or     rbx,0xffffffffffffffff
   140011840:	xor    edx,edx
   140011842:	inc    rbx
   140011845:	cmp    WORD PTR [rax+rbx*2],dx
   140011849:	jne    0x140011842
   14001184b:	mov    rcx,QWORD PTR [rsp+0x48]
   140011850:	call   0x14002f3b4
   140011855:	mov    ecx,eax
   140011857:	call   0x14003167c
   14001185c:	mov    rcx,rax
   14001185f:	xor    eax,eax
   140011861:	mov    QWORD PTR [rsp+0x20],rax
   140011866:	lea    r9,[rsp+0x38]
   14001186b:	mov    r8d,ebx
   14001186e:	mov    rdx,QWORD PTR [rsp+0x30]
   140011873:	call   QWORD PTR [rip+0x2fd1f]        # 0x140041598
   140011879:	mov    ebx,0xffff
   14001187e:	call   0x14002ccb4
   140011883:	mov    rcx,rax
   140011886:	call   0x14003347c
   14001188b:	cmp    ax,0xa
   14001188f:	je     0x140011896
   140011891:	cmp    ax,bx
   140011894:	jne    0x14001187e
   140011896:	cmp    ax,bx
   140011899:	je     0x14001193f
   14001189f:	mov    rax,QWORD PTR [rdi+0x20]
   1400118a3:	mov    QWORD PTR [rdi+0x28],rax
   1400118a7:	xor    r8d,r8d
   1400118aa:	mov    QWORD PTR [rsp+0x30],r8
   1400118af:	cmp    rax,0x2
   1400118b3:	jbe    0x1400118fa
   1400118b5:	lea    rdx,[rax-0x2]
   1400118b9:	test   rdx,rdx
   1400118bc:	jne    0x1400118c3
   1400118be:	mov    ebx,r8d
   1400118c1:	jmp    0x1400118ff
   1400118c3:	mov    rbx,rsi
   1400118c6:	mov    rax,r8
   1400118c9:	mov    cl,BYTE PTR [rsi]
   1400118cb:	test   cl,cl
   1400118cd:	je     0x1400118f0
   1400118cf:	cmp    cl,0xa
   1400118d2:	jne    0x1400118e1
   1400118d4:	inc    rax
   1400118d7:	mov    QWORD PTR [rsp+0x30],rax
   1400118dc:	cmp    rax,rdx
   1400118df:	jae    0x1400118e8
   1400118e1:	inc    rbx
   1400118e4:	mov    cl,BYTE PTR [rbx]
   1400118e6:	jmp    0x1400118cb
   1400118e8:	sub    rbx,rsi
   1400118eb:	inc    rbx
   1400118ee:	jmp    0x1400118ff
   1400118f0:	mov    QWORD PTR [rsp+0x30],rax
   1400118f5:	sub    rbx,rsi
   1400118f8:	jmp    0x1400118ff
   1400118fa:	mov    rbx,QWORD PTR [rsp+0x40]
   1400118ff:	mov    rcx,QWORD PTR [rsp+0x48]
   140011904:	call   0x14002f3b4
   140011909:	mov    ecx,eax
   14001190b:	call   0x14003167c
   140011910:	mov    rcx,rax
   140011913:	xor    eax,eax
   140011915:	mov    QWORD PTR [rsp+0x20],rax
   14001191a:	lea    r9,[rsp+0x38]
   14001191f:	mov    r8d,ebx
   140011922:	mov    rdx,rsi
   140011925:	call   QWORD PTR [rip+0x2fcb5]        # 0x1400415e0
   14001192b:	mov    rax,QWORD PTR [rsp+0x30]
   140011930:	sub    QWORD PTR [rdi+0x28],rax
   140011934:	test   rbx,rbx
   140011937:	jne    0x1400117bd
   14001193d:	jmp    0x14001198c
   14001193f:	mov    BYTE PTR [rdi+0x30],0x1
   140011943:	jmp    0x14001198c
   140011945:	cmp    BYTE PTR [rip+0x4b118],r8b        # 0x14005ca64
   14001194c:	jne    0x14001195b
   14001194e:	mov    rdx,rbx
   140011951:	mov    rcx,rsi
   140011954:	call   0x140033058
   140011959:	jmp    0x14001198c
   14001195b:	mov    rdx,rsi
   14001195e:	lea    rcx,[rsp+0x70]
   140011963:	call   0x140011f50
   140011968:	nop
   140011969:	mov    rdx,rbx
   14001196c:	mov    rcx,QWORD PTR [rsp+0x70]
   140011971:	call   0x1400334d8
   140011976:	nop
   140011977:	lea    rax,[rsp+0x78]
   14001197c:	mov    rcx,QWORD PTR [rsp+0x70]
   140011981:	cmp    rcx,rax
   140011984:	je     0x14001198c
   140011986:	call   0x1400273dc
   14001198b:	nop
   14001198c:	mov    rcx,QWORD PTR [rsp+0x180]
   140011994:	xor    rcx,rsp
   140011997:	call   0x1400265a0
   14001199c:	add    rsp,0x190
   1400119a3:	pop    rdi
   1400119a4:	pop    rsi
   1400119a5:	pop    rbx
   1400119a6:	ret    
   1400119a7:	int3   
   1400119a8:	rex push rbx
   1400119aa:	push   rsi
   1400119ab:	push   rdi
   1400119ac:	push   r12
   1400119ae:	push   r13
   1400119b0:	push   r14
   1400119b2:	push   r15
   1400119b4:	sub    rsp,0xf0
   1400119bb:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400119c4:	mov    rax,QWORD PTR [rip+0x476bd]        # 0x140059088
   1400119cb:	xor    rax,rsp
   1400119ce:	mov    QWORD PTR [rsp+0xe0],rax
   1400119d6:	mov    r12,r8
   1400119d9:	mov    rsi,rdx
   1400119dc:	mov    rdi,rcx
   1400119df:	mov    QWORD PTR [rsp+0x38],rdx
   1400119e4:	mov    QWORD PTR [rsp+0x30],r8
   1400119e9:	mov    rdx,r8
   1400119ec:	call   0x1400115a4
   1400119f1:	xor    r13d,r13d
   1400119f4:	test   al,al
   1400119f6:	je     0x140011bff
   1400119fc:	cmp    BYTE PTR [rdi+0x30],r13b
   140011a00:	jne    0x140011c46
   140011a06:	or     r15,0xffffffffffffffff
   140011a0a:	inc    r15
   140011a0d:	cmp    WORD PTR [rsi+r15*2],r13w
   140011a12:	jne    0x140011a0a
   140011a14:	mov    r14,r13
   140011a17:	mov    rax,QWORD PTR [rdi+0x28]
   140011a1b:	cmp    rax,0x2
   140011a1f:	jbe    0x140011a64
   140011a21:	lea    rcx,[rax-0x2]
   140011a25:	test   rcx,rcx
   140011a28:	jne    0x140011a2f
   140011a2a:	mov    rbx,r13
   140011a2d:	jmp    0x140011a67
   140011a2f:	mov    rbx,rsi
   140011a32:	movzx  eax,WORD PTR [rsi]
   140011a35:	test   ax,ax
   140011a38:	je     0x140011a5c
   140011a3a:	cmp    ax,0xa
   140011a3e:	jne    0x140011a48
   140011a40:	inc    r14
   140011a43:	cmp    r14,rcx
   140011a46:	jae    0x140011a51
   140011a48:	add    rbx,0x2
   140011a4c:	movzx  eax,WORD PTR [rbx]
   140011a4f:	jmp    0x140011a35
   140011a51:	sub    rbx,rsi
   140011a54:	sar    rbx,1
   140011a57:	inc    rbx
   140011a5a:	jmp    0x140011a67
   140011a5c:	sub    rbx,rsi
   140011a5f:	sar    rbx,1
   140011a62:	jmp    0x140011a67
   140011a64:	mov    rbx,r15
   140011a67:	mov    rcx,r12
   140011a6a:	call   0x14002f3b4
   140011a6f:	mov    ecx,eax
   140011a71:	call   0x14003167c
   140011a76:	mov    rcx,rax
   140011a79:	mov    QWORD PTR [rsp+0x20],r13
   140011a7e:	lea    r9,[rsp+0x30]
   140011a83:	mov    r8d,ebx
   140011a86:	mov    rdx,rsi
   140011a89:	call   QWORD PTR [rip+0x2fb09]        # 0x140041598
   140011a8f:	sub    QWORD PTR [rdi+0x28],r14
   140011a93:	test   rbx,rbx
   140011a96:	je     0x140011c46
   140011a9c:	lea    r14,[rip+0x347ad]        # 0x140046250
   140011aa3:	cmp    rbx,r15
   140011aa6:	je     0x140011c46
   140011aac:	lea    rsi,[rsi+rbx*2]
   140011ab0:	sub    r15,rbx
   140011ab3:	cmp    QWORD PTR [rdi+0x38],r13
   140011ab7:	jne    0x140011ad3
   140011ab9:	xor    r8d,r8d
   140011abc:	mov    ecx,0x21230006
   140011ac1:	call   0x140011d9c
   140011ac6:	mov    QWORD PTR [rdi+0x38],rax
   140011aca:	test   rax,rax
   140011acd:	jne    0x140011ad3
   140011acf:	mov    QWORD PTR [rdi+0x38],r14
   140011ad3:	mov    r14,QWORD PTR [rdi+0x38]
   140011ad7:	test   r14,r14
   140011ada:	jne    0x140011afd
   140011adc:	xor    r8d,r8d
   140011adf:	mov    ecx,0x21230006
   140011ae4:	call   0x140011d9c
   140011ae9:	mov    QWORD PTR [rdi+0x38],rax
   140011aed:	test   rax,rax
   140011af0:	jne    0x140011afd
   140011af2:	lea    rax,[rip+0x34757]        # 0x140046250
   140011af9:	mov    QWORD PTR [rdi+0x38],rax
   140011afd:	mov    r13,QWORD PTR [rdi+0x38]
   140011b01:	or     rbx,0xffffffffffffffff
   140011b05:	xor    eax,eax
   140011b07:	inc    rbx
   140011b0a:	cmp    WORD PTR [r14+rbx*2],ax
   140011b0f:	jne    0x140011b07
   140011b11:	mov    rcx,r12
   140011b14:	call   0x14002f3b4
   140011b19:	mov    ecx,eax
   140011b1b:	call   0x14003167c
   140011b20:	mov    rcx,rax
   140011b23:	xor    eax,eax
   140011b25:	mov    QWORD PTR [rsp+0x20],rax
   140011b2a:	lea    r9,[rsp+0x30]
   140011b2f:	mov    r8d,ebx
   140011b32:	mov    rdx,r13
   140011b35:	call   QWORD PTR [rip+0x2fa5d]        # 0x140041598
   140011b3b:	mov    ebx,0xffff
   140011b40:	call   0x14002ccb4
   140011b45:	mov    rcx,rax
   140011b48:	call   0x14003347c
   140011b4d:	cmp    ax,0xa
   140011b51:	je     0x140011b58
   140011b53:	cmp    ax,bx
   140011b56:	jne    0x140011b40
   140011b58:	cmp    ax,bx
   140011b5b:	je     0x140011bf9
   140011b61:	mov    rax,QWORD PTR [rdi+0x20]
   140011b65:	mov    QWORD PTR [rdi+0x28],rax
   140011b69:	xor    r13d,r13d
   140011b6c:	mov    r14d,r13d
   140011b6f:	cmp    rax,0x2
   140011b73:	jbe    0x140011bb8
   140011b75:	lea    rcx,[rax-0x2]
   140011b79:	test   rcx,rcx
   140011b7c:	jne    0x140011b83
   140011b7e:	mov    ebx,r13d
   140011b81:	jmp    0x140011bbb
   140011b83:	mov    rbx,rsi
   140011b86:	movzx  eax,WORD PTR [rsi]
   140011b89:	test   ax,ax
   140011b8c:	je     0x140011bb0
   140011b8e:	cmp    ax,0xa
   140011b92:	jne    0x140011b9c
   140011b94:	inc    r14
   140011b97:	cmp    r14,rcx
   140011b9a:	jae    0x140011ba5
   140011b9c:	add    rbx,0x2
   140011ba0:	movzx  eax,WORD PTR [rbx]
   140011ba3:	jmp    0x140011b89
   140011ba5:	sub    rbx,rsi
   140011ba8:	sar    rbx,1
   140011bab:	inc    rbx
   140011bae:	jmp    0x140011bbb
   140011bb0:	sub    rbx,rsi
   140011bb3:	sar    rbx,1
   140011bb6:	jmp    0x140011bbb
   140011bb8:	mov    rbx,r15
   140011bbb:	mov    rcx,r12
   140011bbe:	call   0x14002f3b4
   140011bc3:	mov    ecx,eax
   140011bc5:	call   0x14003167c
   140011bca:	mov    rcx,rax
   140011bcd:	mov    QWORD PTR [rsp+0x20],r13
   140011bd2:	lea    r9,[rsp+0x30]
   140011bd7:	mov    r8d,ebx
   140011bda:	mov    rdx,rsi
   140011bdd:	call   QWORD PTR [rip+0x2f9b5]        # 0x140041598
   140011be3:	sub    QWORD PTR [rdi+0x28],r14
   140011be7:	test   rbx,rbx
   140011bea:	lea    r14,[rip+0x3465f]        # 0x140046250
   140011bf1:	jne    0x140011aa3
   140011bf7:	jmp    0x140011c46
   140011bf9:	mov    BYTE PTR [rdi+0x30],0x1
   140011bfd:	jmp    0x140011c46
   140011bff:	cmp    BYTE PTR [rip+0x4ae5e],r13b        # 0x14005ca64
   140011c06:	je     0x140011c15
   140011c08:	mov    rdx,r12
   140011c0b:	mov    rcx,rsi
   140011c0e:	call   0x1400334d8
   140011c13:	jmp    0x140011c46
   140011c15:	mov    rdx,rsi
   140011c18:	lea    rcx,[rsp+0x50]
   140011c1d:	call   0x140012060
   140011c22:	nop
   140011c23:	mov    rdx,r12
   140011c26:	mov    rcx,QWORD PTR [rsp+0x50]
   140011c2b:	call   0x140033058
   140011c30:	nop
   140011c31:	lea    rax,[rsp+0x58]
   140011c36:	mov    rcx,QWORD PTR [rsp+0x50]
   140011c3b:	cmp    rcx,rax
   140011c3e:	je     0x140011c46
   140011c40:	call   0x1400273dc
   140011c45:	nop
   140011c46:	mov    rcx,QWORD PTR [rsp+0xe0]
   140011c4e:	xor    rcx,rsp
   140011c51:	call   0x1400265a0
   140011c56:	add    rsp,0xf0
   140011c5d:	pop    r15
   140011c5f:	pop    r14
   140011c61:	pop    r13
   140011c63:	pop    r12
   140011c65:	pop    rdi
   140011c66:	pop    rsi
   140011c67:	pop    rbx
   140011c68:	ret    
   140011c69:	int3   
   140011c6a:	int3   
   140011c6b:	int3   
   140011c6c:	rex push rdi
   140011c6e:	sub    rsp,0x30
   140011c72:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011c7b:	mov    QWORD PTR [rsp+0x48],rbx
   140011c80:	mov    QWORD PTR [rsp+0x50],rsi
   140011c85:	mov    ecx,0x40
   140011c8a:	call   0x140026da8
   140011c8f:	mov    rbx,rax
   140011c92:	mov    QWORD PTR [rsp+0x40],rax
   140011c97:	test   rax,rax
   140011c9a:	je     0x140011d31
   140011ca0:	call   0x14002ccb4
   140011ca5:	lea    rdi,[rax+0x60]
   140011ca9:	call   0x14002ccb4
   140011cae:	lea    rsi,[rax+0x30]
   140011cb2:	lea    rax,[rip+0x345ef]        # 0x1400462a8
   140011cb9:	mov    QWORD PTR [rbx],rax
   140011cbc:	lea    rax,[rip+0x34615]        # 0x1400462d8
   140011cc3:	mov    QWORD PTR [rbx],rax
   140011cc6:	mov    QWORD PTR [rbx+0x8],rsi
   140011cca:	mov    QWORD PTR [rbx+0x10],rdi
   140011cce:	mov    BYTE PTR [rbx+0x18],0x0
   140011cd2:	mov    eax,0x7fffffff
   140011cd7:	mov    QWORD PTR [rbx+0x20],rax
   140011cdb:	mov    QWORD PTR [rbx+0x28],rax
   140011cdf:	mov    BYTE PTR [rbx+0x30],0x0
   140011ce3:	and    QWORD PTR [rbx+0x38],0x0
   140011ce8:	mov    rdx,rsi
   140011ceb:	mov    rcx,rbx
   140011cee:	call   0x1400115a4
   140011cf3:	test   al,al
   140011cf5:	jne    0x140011d0b
   140011cf7:	mov    rcx,rsi
   140011cfa:	call   0x14002f3b4
   140011cff:	mov    ecx,eax
   140011d01:	mov    edx,0x8000
   140011d06:	call   0x14003358c
   140011d0b:	mov    rdx,rdi
   140011d0e:	mov    rcx,rbx
   140011d11:	call   0x1400115a4
   140011d16:	test   al,al
   140011d18:	jne    0x140011d2f
   140011d1a:	mov    rcx,rdi
   140011d1d:	call   0x14002f3b4
   140011d22:	mov    ecx,eax
   140011d24:	mov    edx,0x8000
   140011d29:	call   0x14003358c
   140011d2e:	nop
   140011d2f:	jmp    0x140011d33
   140011d31:	xor    ebx,ebx
   140011d33:	mov    rax,rbx
   140011d36:	mov    rbx,QWORD PTR [rsp+0x48]
   140011d3b:	mov    rsi,QWORD PTR [rsp+0x50]
   140011d40:	add    rsp,0x30
   140011d44:	pop    rdi
   140011d45:	ret    
   140011d46:	int3   
   140011d47:	int3   
   140011d48:	mov    QWORD PTR [rsp+0x8],rbx
   140011d4d:	push   rdi
   140011d4e:	sub    rsp,0x40
   140011d52:	and    QWORD PTR [rsp+0x68],0x0
   140011d58:	mov    rbx,r8
   140011d5b:	mov    edi,ecx
   140011d5d:	call   QWORD PTR [rip+0x2f9e5]        # 0x140041748
   140011d63:	mov    QWORD PTR [rsp+0x30],rbx
   140011d68:	and    DWORD PTR [rsp+0x28],0x0
   140011d6d:	mov    rdx,rax
   140011d70:	lea    rax,[rsp+0x68]
   140011d75:	xor    r9d,r9d
   140011d78:	mov    r8d,edi
   140011d7b:	mov    ecx,0x2900
   140011d80:	mov    QWORD PTR [rsp+0x20],rax
   140011d85:	call   QWORD PTR [rip+0x2f845]        # 0x1400415d0
   140011d8b:	mov    rax,QWORD PTR [rsp+0x68]
   140011d90:	mov    rbx,QWORD PTR [rsp+0x50]
   140011d95:	add    rsp,0x40
   140011d99:	pop    rdi
   140011d9a:	ret    
   140011d9b:	int3   
   140011d9c:	mov    QWORD PTR [rsp+0x8],rbx
   140011da1:	push   rdi
   140011da2:	sub    rsp,0x40
   140011da6:	and    QWORD PTR [rsp+0x68],0x0
   140011dac:	mov    rbx,r8
   140011daf:	mov    edi,ecx
   140011db1:	call   QWORD PTR [rip+0x2f991]        # 0x140041748
   140011db7:	mov    QWORD PTR [rsp+0x30],rbx
   140011dbc:	and    DWORD PTR [rsp+0x28],0x0
   140011dc1:	mov    rdx,rax
   140011dc4:	lea    rax,[rsp+0x68]
   140011dc9:	xor    r9d,r9d
   140011dcc:	mov    r8d,edi
   140011dcf:	mov    ecx,0x2900
   140011dd4:	mov    QWORD PTR [rsp+0x20],rax
   140011dd9:	call   QWORD PTR [rip+0x2f7f9]        # 0x1400415d8
   140011ddf:	mov    rax,QWORD PTR [rsp+0x68]
   140011de4:	mov    rbx,QWORD PTR [rsp+0x50]
   140011de9:	add    rsp,0x40
   140011ded:	pop    rdi
   140011dee:	ret    
   140011def:	int3   
   140011df0:	rex push rbx
   140011df2:	sub    rsp,0x50
   140011df6:	mov    rax,QWORD PTR [rip+0x4728b]        # 0x140059088
   140011dfd:	xor    rax,rsp
   140011e00:	mov    QWORD PTR [rsp+0x40],rax
   140011e05:	cmp    ecx,0xa1230917
   140011e0b:	jne    0x140011e11
   140011e0d:	xor    eax,eax
   140011e0f:	jmp    0x140011e5a
   140011e11:	mov    ebx,ecx
   140011e13:	shr    ebx,0x1e
   140011e16:	lea    eax,[rbx-0x2]
   140011e19:	cmp    eax,0x1
   140011e1c:	ja     0x140011e0d
   140011e1e:	movzx  r9d,cx
   140011e22:	lea    r8,[rip+0x34467]        # 0x140046290
   140011e29:	lea    rcx,[rsp+0x28]
   140011e2e:	mov    edx,0x14
   140011e33:	call   0x140004164
   140011e38:	xor    ecx,ecx
   140011e3a:	cmp    ebx,0x3
   140011e3d:	lea    rax,[rsp+0x28]
   140011e42:	setne  cl
   140011e45:	lea    r8,[rsp+0x20]
   140011e4a:	add    ecx,0x21230001
   140011e50:	mov    QWORD PTR [rsp+0x20],rax
   140011e55:	call   0x140011d9c
   140011e5a:	mov    rcx,QWORD PTR [rsp+0x40]
   140011e5f:	xor    rcx,rsp
   140011e62:	call   0x1400265a0
   140011e67:	add    rsp,0x50
   140011e6b:	pop    rbx
   140011e6c:	ret    
   140011e6d:	int3   
   140011e6e:	int3   
   140011e6f:	int3   
   140011e70:	mov    QWORD PTR [rsp+0x10],rbx
   140011e75:	push   rdi
   140011e76:	sub    rsp,0xe0
   140011e7d:	mov    rax,QWORD PTR [rip+0x47204]        # 0x140059088
   140011e84:	xor    rax,rsp
   140011e87:	mov    QWORD PTR [rsp+0xd0],rax
   140011e8f:	and    QWORD PTR [rsp+0x30],0x0
   140011e95:	and    DWORD PTR [rsp+0x28],0x0
   140011e9a:	lea    rax,[rsp+0x48]
   140011e9f:	mov    edi,ecx
   140011ea1:	mov    r8d,ecx
   140011ea4:	xor    r9d,r9d
   140011ea7:	xor    edx,edx
   140011ea9:	mov    ecx,0x1300
   140011eae:	mov    QWORD PTR [rsp+0x20],rax
   140011eb3:	call   QWORD PTR [rip+0x2f71f]        # 0x1400415d8
   140011eb9:	test   eax,eax
   140011ebb:	je     0x140011ec4
   140011ebd:	mov    rax,QWORD PTR [rsp+0x48]
   140011ec2:	jmp    0x140011f2c
   140011ec4:	lea    r8,[rip+0x33e25]        # 0x140045cf0
   140011ecb:	lea    rcx,[rsp+0x90]
   140011ed3:	mov    r9,rdi
   140011ed6:	mov    edx,0x40
   140011edb:	call   0x140004164
   140011ee0:	lea    r8,[rip+0x33a59]        # 0x140045940
   140011ee7:	lea    rcx,[rsp+0x50]
   140011eec:	mov    r9,rdi
   140011eef:	mov    edx,0x40
   140011ef4:	call   0x140004164
   140011ef9:	lea    rax,[rsp+0x50]
   140011efe:	mov    ecx,0x21230004
   140011f03:	mov    QWORD PTR [rsp+0x40],rax
   140011f08:	cmp    edi,0xffff
   140011f0e:	jbe    0x140011f22
   140011f10:	lea    rax,[rsp+0x90]
   140011f18:	mov    ecx,0x21230005
   140011f1d:	mov    QWORD PTR [rsp+0x40],rax
   140011f22:	lea    r8,[rsp+0x40]
   140011f27:	call   0x140011d9c
   140011f2c:	mov    rcx,QWORD PTR [rsp+0xd0]
   140011f34:	xor    rcx,rsp
   140011f37:	call   0x1400265a0
   140011f3c:	mov    rbx,QWORD PTR [rsp+0xf8]
   140011f44:	add    rsp,0xe0
   140011f4b:	pop    rdi
   140011f4c:	ret    
   140011f4d:	int3   
   140011f4e:	int3   
   140011f4f:	int3   
   140011f50:	mov    rax,rsp
   140011f53:	mov    QWORD PTR [rax+0x8],rbx
   140011f57:	mov    QWORD PTR [rax+0x10],rbp
   140011f5b:	mov    QWORD PTR [rax+0x18],rsi
   140011f5f:	mov    QWORD PTR [rax+0x20],rdi
   140011f63:	push   r14
   140011f65:	sub    rsp,0x30
   140011f69:	lea    r14,[rcx+0x8]
   140011f6d:	mov    rbp,rdx
   140011f70:	mov    rdi,rcx
   140011f73:	mov    QWORD PTR [rcx],r14
   140011f76:	test   rdx,rdx
   140011f79:	jne    0x140011f9c
   140011f7b:	and    QWORD PTR [rcx],rdx
   140011f7e:	mov    rbx,QWORD PTR [rsp+0x40]
   140011f83:	mov    rbp,QWORD PTR [rsp+0x48]
   140011f88:	mov    rsi,QWORD PTR [rsp+0x50]
   140011f8d:	mov    rax,rdi
   140011f90:	mov    rdi,QWORD PTR [rsp+0x58]
   140011f95:	add    rsp,0x30
   140011f99:	pop    r14
   140011f9b:	ret    
   140011f9c:	or     rsi,0xffffffffffffffff
   140011fa0:	inc    rsi
   140011fa3:	cmp    BYTE PTR [rsi+rdx*1],0x0
   140011fa7:	jne    0x140011fa0
   140011fa9:	inc    esi
   140011fab:	mov    r8,r14
   140011fae:	mov    edx,esi
   140011fb0:	call   0x140012178
   140011fb5:	mov    rax,QWORD PTR [rdi]
   140011fb8:	mov    r9d,esi
   140011fbb:	mov    r8,rbp
   140011fbe:	xor    edx,edx
   140011fc0:	xor    ecx,ecx
   140011fc2:	mov    DWORD PTR [rsp+0x28],esi
   140011fc6:	mov    QWORD PTR [rsp+0x20],rax
   140011fcb:	call   QWORD PTR [rip+0x2f357]        # 0x140041328
   140011fd1:	xor    ebx,ebx
   140011fd3:	test   eax,eax
   140011fd5:	sete   bl
   140011fd8:	test   ebx,ebx
   140011fda:	je     0x140011f7e
   140011fdc:	call   QWORD PTR [rip+0x2f3f6]        # 0x1400413d8
   140011fe2:	cmp    eax,0x7a
   140011fe5:	jne    0x140012034
   140011fe7:	and    DWORD PTR [rsp+0x28],0x0
   140011fec:	and    QWORD PTR [rsp+0x20],0x0
   140011ff2:	mov    r9d,esi
   140011ff5:	mov    r8,rbp
   140011ff8:	xor    edx,edx
   140011ffa:	xor    ecx,ecx
   140011ffc:	call   QWORD PTR [rip+0x2f326]        # 0x140041328
   140012002:	mov    r8,r14
   140012005:	mov    rcx,rdi
   140012008:	mov    edx,eax
   14001200a:	mov    ebx,eax
   14001200c:	call   0x140012178
   140012011:	mov    rax,QWORD PTR [rdi]
   140012014:	mov    r9d,esi
   140012017:	mov    r8,rbp
   14001201a:	xor    edx,edx
   14001201c:	xor    ecx,ecx
   14001201e:	mov    DWORD PTR [rsp+0x28],ebx
   140012022:	mov    QWORD PTR [rsp+0x20],rax
   140012027:	call   QWORD PTR [rip+0x2f2fb]        # 0x140041328
   14001202d:	xor    ebx,ebx
   14001202f:	test   eax,eax
   140012031:	sete   bl
   140012034:	test   ebx,ebx
   140012036:	je     0x140011f7e
   14001203c:	call   0x1400113c0
   140012041:	int3   
   140012042:	int3   
   140012043:	int3   
   140012044:	sub    rsp,0x28
   140012048:	lea    rax,[rcx+0x8]
   14001204c:	cmp    QWORD PTR [rcx],rax
   14001204f:	je     0x140012059
   140012051:	mov    rcx,QWORD PTR [rcx]
   140012054:	call   0x1400273dc
   140012059:	add    rsp,0x28
   14001205d:	ret    
   14001205e:	int3   
   14001205f:	int3   
   140012060:	mov    QWORD PTR [rsp+0x8],rbx
   140012065:	mov    QWORD PTR [rsp+0x10],rbp
   14001206a:	mov    QWORD PTR [rsp+0x18],rsi
   14001206f:	push   rdi
   140012070:	push   r14
   140012072:	push   r15
   140012074:	sub    rsp,0x40
   140012078:	lea    r14,[rcx+0x8]
   14001207c:	xor    r15d,r15d
   14001207f:	mov    rbp,rdx
   140012082:	mov    rdi,rcx
   140012085:	mov    QWORD PTR [rcx],r14
   140012088:	test   rdx,rdx
   14001208b:	jne    0x1400120ac
   14001208d:	mov    QWORD PTR [rcx],r15
   140012090:	mov    rbx,QWORD PTR [rsp+0x60]
   140012095:	mov    rbp,QWORD PTR [rsp+0x68]
   14001209a:	mov    rsi,QWORD PTR [rsp+0x70]
   14001209f:	mov    rax,rdi
   1400120a2:	add    rsp,0x40
   1400120a6:	pop    r15
   1400120a8:	pop    r14
   1400120aa:	pop    rdi
   1400120ab:	ret    
   1400120ac:	or     rsi,0xffffffffffffffff
   1400120b0:	inc    rsi
   1400120b3:	cmp    WORD PTR [rdx+rsi*2],r15w
   1400120b8:	jne    0x1400120b0
   1400120ba:	inc    esi
   1400120bc:	mov    r8,r14
   1400120bf:	mov    ebx,esi
   1400120c1:	shl    ebx,0x2
   1400120c4:	mov    edx,ebx
   1400120c6:	call   0x14001222c
   1400120cb:	mov    rax,QWORD PTR [rdi]
   1400120ce:	mov    QWORD PTR [rsp+0x38],r15
   1400120d3:	mov    QWORD PTR [rsp+0x30],r15
   1400120d8:	mov    r9d,esi
   1400120db:	mov    r8,rbp
   1400120de:	xor    edx,edx
   1400120e0:	xor    ecx,ecx
   1400120e2:	mov    DWORD PTR [rsp+0x28],ebx
   1400120e6:	mov    QWORD PTR [rsp+0x20],rax
   1400120eb:	call   QWORD PTR [rip+0x2f25f]        # 0x140041350
   1400120f1:	mov    ebx,r15d
   1400120f4:	test   eax,eax
   1400120f6:	sete   bl
   1400120f9:	test   ebx,ebx
   1400120fb:	je     0x140012090
   1400120fd:	call   QWORD PTR [rip+0x2f2d5]        # 0x1400413d8
   140012103:	cmp    eax,0x7a
   140012106:	jne    0x140012169
   140012108:	mov    QWORD PTR [rsp+0x38],r15
   14001210d:	mov    QWORD PTR [rsp+0x30],r15
   140012112:	mov    r9d,esi
   140012115:	mov    r8,rbp
   140012118:	xor    edx,edx
   14001211a:	xor    ecx,ecx
   14001211c:	mov    DWORD PTR [rsp+0x28],r15d
   140012121:	mov    QWORD PTR [rsp+0x20],r15
   140012126:	call   QWORD PTR [rip+0x2f224]        # 0x140041350
   14001212c:	mov    r8,r14
   14001212f:	mov    rcx,rdi
   140012132:	mov    edx,eax
   140012134:	mov    ebx,eax
   140012136:	call   0x14001222c
   14001213b:	mov    rax,QWORD PTR [rdi]
   14001213e:	mov    QWORD PTR [rsp+0x38],r15
   140012143:	mov    QWORD PTR [rsp+0x30],r15
   140012148:	mov    r9d,esi
   14001214b:	mov    r8,rbp
   14001214e:	xor    edx,edx
   140012150:	xor    ecx,ecx
   140012152:	mov    DWORD PTR [rsp+0x28],ebx
   140012156:	mov    QWORD PTR [rsp+0x20],rax
   14001215b:	call   QWORD PTR [rip+0x2f1ef]        # 0x140041350
   140012161:	test   eax,eax
   140012163:	mov    ebx,r15d
   140012166:	sete   bl
   140012169:	test   ebx,ebx
   14001216b:	je     0x140012090
   140012171:	call   0x1400113c0
   140012176:	int3   
   140012177:	int3   
   140012178:	mov    QWORD PTR [rsp+0x8],rbx
   14001217d:	push   rdi
   14001217e:	sub    rsp,0x20
   140012182:	mov    rdi,r8
   140012185:	mov    rbx,rcx
   140012188:	test   rcx,rcx
   14001218b:	je     0x1400121f3
   14001218d:	test   edx,edx
   14001218f:	js     0x1400121fe
   140012191:	test   r8,r8
   140012194:	je     0x140012209
   140012196:	cmp    QWORD PTR [rcx],r8
   140012199:	je     0x1400121c5
   14001219b:	mov    rcx,QWORD PTR [rcx]
   14001219e:	cmp    edx,0x80
   1400121a4:	jle    0x1400121bb
   1400121a6:	movsxd rdx,edx
   1400121a9:	mov    r8d,0x2
   1400121af:	call   0x1400275ec
   1400121b4:	test   rax,rax
   1400121b7:	jne    0x1400121da
   1400121b9:	jmp    0x140012214
   1400121bb:	call   0x1400273dc
   1400121c0:	mov    QWORD PTR [rbx],rdi
   1400121c3:	jmp    0x1400121e2
   1400121c5:	cmp    edx,0x80
   1400121cb:	jle    0x1400121df
   1400121cd:	movsxd rcx,edx
   1400121d0:	mov    edx,0x2
   1400121d5:	call   0x140027890
   1400121da:	mov    QWORD PTR [rbx],rax
   1400121dd:	jmp    0x1400121e2
   1400121df:	mov    QWORD PTR [rcx],r8
   1400121e2:	cmp    QWORD PTR [rbx],0x0
   1400121e6:	je     0x14001221f
   1400121e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400121ed:	add    rsp,0x20
   1400121f1:	pop    rdi
   1400121f2:	ret    
   1400121f3:	mov    ecx,0x80070057
   1400121f8:	call   0x14000400c
   1400121fd:	int3   
   1400121fe:	mov    ecx,0x80070057
   140012203:	call   0x14000400c
   140012208:	int3   
   140012209:	mov    ecx,0x80070057
   14001220e:	call   0x14000400c
   140012213:	int3   
   140012214:	mov    ecx,0x8007000e
   140012219:	call   0x14000400c
   14001221e:	int3   
   14001221f:	mov    ecx,0x8007000e
   140012224:	call   0x14000400c
   140012229:	int3   
   14001222a:	int3   
   14001222b:	int3   
   14001222c:	mov    QWORD PTR [rsp+0x8],rbx
   140012231:	push   rdi
   140012232:	sub    rsp,0x20
   140012236:	mov    rdi,r8
   140012239:	mov    rbx,rcx
   14001223c:	test   rcx,rcx
   14001223f:	je     0x1400122a7
   140012241:	test   edx,edx
   140012243:	js     0x1400122b2
   140012245:	test   r8,r8
   140012248:	je     0x1400122bd
   14001224a:	cmp    QWORD PTR [rcx],r8
   14001224d:	je     0x140012279
   14001224f:	mov    rcx,QWORD PTR [rcx]
   140012252:	cmp    edx,0x80
   140012258:	jle    0x14001226f
   14001225a:	movsxd rdx,edx
   14001225d:	mov    r8d,0x1
   140012263:	call   0x1400275ec
   140012268:	test   rax,rax
   14001226b:	jne    0x14001228e
   14001226d:	jmp    0x1400122c8
   14001226f:	call   0x1400273dc
   140012274:	mov    QWORD PTR [rbx],rdi
   140012277:	jmp    0x140012296
   140012279:	cmp    edx,0x80
   14001227f:	jle    0x140012293
   140012281:	movsxd rcx,edx
   140012284:	mov    edx,0x1
   140012289:	call   0x140027890
   14001228e:	mov    QWORD PTR [rbx],rax
   140012291:	jmp    0x140012296
   140012293:	mov    QWORD PTR [rcx],r8
   140012296:	cmp    QWORD PTR [rbx],0x0
   14001229a:	je     0x1400122d3
   14001229c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400122a1:	add    rsp,0x20
   1400122a5:	pop    rdi
   1400122a6:	ret    
   1400122a7:	mov    ecx,0x80070057
   1400122ac:	call   0x14000400c
   1400122b1:	int3   
   1400122b2:	mov    ecx,0x80070057
   1400122b7:	call   0x14000400c
   1400122bc:	int3   
   1400122bd:	mov    ecx,0x80070057
   1400122c2:	call   0x14000400c
   1400122c7:	int3   
   1400122c8:	mov    ecx,0x8007000e
   1400122cd:	call   0x14000400c
   1400122d2:	int3   
   1400122d3:	mov    ecx,0x8007000e
   1400122d8:	call   0x14000400c
   1400122dd:	int3   
   1400122de:	int3   
   1400122df:	int3   
   1400122e0:	rex push rbx
   1400122e2:	sub    rsp,0x20
   1400122e6:	lea    rcx,[rip+0x33dd3]        # 0x1400460c0
   1400122ed:	call   QWORD PTR [rip+0x2f09d]        # 0x140041390
   1400122f3:	mov    rbx,rax
   1400122f6:	test   rax,rax
   1400122f9:	jne    0x140012302
   1400122fb:	xor    eax,eax
   1400122fd:	jmp    0x1400123cd
   140012302:	cmp    QWORD PTR [rip+0x4a78e],0x0        # 0x14005ca98
   14001230a:	jne    0x140012328
   14001230c:	lea    rdx,[rip+0x33fed]        # 0x140046300
   140012313:	mov    rcx,rax
   140012316:	call   QWORD PTR [rip+0x2efcc]        # 0x1400412e8
   14001231c:	mov    QWORD PTR [rip+0x4a775],rax        # 0x14005ca98
   140012323:	test   rax,rax
   140012326:	je     0x1400122fb
   140012328:	cmp    QWORD PTR [rip+0x4a760],0x0        # 0x14005ca90
   140012330:	jne    0x14001234e
   140012332:	lea    rdx,[rip+0x33fd7]        # 0x140046310
   140012339:	mov    rcx,rbx
   14001233c:	call   QWORD PTR [rip+0x2efa6]        # 0x1400412e8
   140012342:	mov    QWORD PTR [rip+0x4a747],rax        # 0x14005ca90
   140012349:	test   rax,rax
   14001234c:	je     0x1400122fb
   14001234e:	cmp    QWORD PTR [rip+0x4a71a],0x0        # 0x14005ca70
   140012356:	jne    0x140012374
   140012358:	lea    rdx,[rip+0x33fc1]        # 0x140046320
   14001235f:	mov    rcx,rbx
   140012362:	call   QWORD PTR [rip+0x2ef80]        # 0x1400412e8
   140012368:	mov    QWORD PTR [rip+0x4a701],rax        # 0x14005ca70
   14001236f:	test   rax,rax
   140012372:	je     0x1400122fb
   140012374:	cmp    QWORD PTR [rip+0x4a6ec],0x0        # 0x14005ca68
   14001237c:	jne    0x14001239e
   14001237e:	lea    rdx,[rip+0x33fbb]        # 0x140046340
   140012385:	mov    rcx,rbx
   140012388:	call   QWORD PTR [rip+0x2ef5a]        # 0x1400412e8
   14001238e:	mov    QWORD PTR [rip+0x4a6d3],rax        # 0x14005ca68
   140012395:	test   rax,rax
   140012398:	je     0x1400122fb
   14001239e:	cmp    QWORD PTR [rip+0x4a6e2],0x0        # 0x14005ca88
   1400123a6:	jne    0x1400123c8
   1400123a8:	lea    rdx,[rip+0x33fa1]        # 0x140046350
   1400123af:	mov    rcx,rbx
   1400123b2:	call   QWORD PTR [rip+0x2ef30]        # 0x1400412e8
   1400123b8:	mov    QWORD PTR [rip+0x4a6c9],rax        # 0x14005ca88
   1400123bf:	test   rax,rax
   1400123c2:	je     0x1400122fb
   1400123c8:	mov    eax,0x1
   1400123cd:	add    rsp,0x20
   1400123d1:	pop    rbx
   1400123d2:	ret    
   1400123d3:	int3   
   1400123d4:	rex push rbx
   1400123d6:	sub    rsp,0x20
   1400123da:	lea    rax,[rip+0x33fc7]        # 0x1400463a8
   1400123e1:	mov    rbx,rcx
   1400123e4:	mov    QWORD PTR [rcx],rax
   1400123e7:	test   dl,0x1
   1400123ea:	je     0x1400123f1
   1400123ec:	call   0x14002657c
   1400123f1:	mov    rax,rbx
   1400123f4:	add    rsp,0x20
   1400123f8:	pop    rbx
   1400123f9:	ret    
   1400123fa:	int3   
   1400123fb:	int3   
   1400123fc:	mov    QWORD PTR [rsp+0x10],rbx
   140012401:	mov    QWORD PTR [rsp+0x18],rsi
   140012406:	push   rdi
   140012407:	sub    rsp,0x870
   14001240e:	mov    rax,QWORD PTR [rip+0x46c73]        # 0x140059088
   140012415:	xor    rax,rsp
   140012418:	mov    QWORD PTR [rsp+0x860],rax
   140012420:	cmp    WORD PTR [rcx],0x5c
   140012424:	jne    0x140012437
   140012426:	cmp    WORD PTR [rcx+0x2],0x5c
   14001242b:	jne    0x140012437
   14001242d:	mov    eax,0x1
   140012432:	jmp    0x1400124ea
   140012437:	or     rdi,0xffffffffffffffff
   14001243b:	xor    ebx,ebx
   14001243d:	mov    rax,rdi
   140012440:	inc    rax
   140012443:	cmp    WORD PTR [rcx+rax*2],bx
   140012447:	jne    0x140012440
   140012449:	mov    esi,0x104
   14001244e:	cmp    rax,rsi
   140012451:	jae    0x14001242d
   140012453:	lea    edx,[rsi-0x4]
   140012456:	lea    rax,[rsp+0x460]
   14001245e:	lea    r9,[rsp+0x260]
   140012466:	mov    QWORD PTR [rsp+0x40],rdx
   14001246b:	mov    QWORD PTR [rsp+0x38],rax
   140012470:	mov    QWORD PTR [rsp+0x30],rdx
   140012475:	lea    rax,[rsp+0x660]
   14001247d:	mov    r8d,esi
   140012480:	mov    QWORD PTR [rsp+0x28],rax
   140012485:	mov    QWORD PTR [rsp+0x20],rdx
   14001248a:	lea    rdx,[rsp+0x50]
   14001248f:	call   0x140033770
   140012494:	lea    rcx,[rsp+0x260]
   14001249c:	mov    rax,rdi
   14001249f:	inc    rax
   1400124a2:	cmp    WORD PTR [rcx+rax*2],bx
   1400124a6:	jne    0x14001249f
   1400124a8:	test   rax,rax
   1400124ab:	je     0x1400124c3
   1400124ad:	lea    rax,[rsp+0x50]
   1400124b2:	inc    rdi
   1400124b5:	cmp    WORD PTR [rax+rdi*2],bx
   1400124b9:	jne    0x1400124b2
   1400124bb:	cmp    WORD PTR [rsp+rdi*2+0x4e],0x5c
   1400124c1:	je     0x1400124d7
   1400124c3:	lea    r8,[rip+0x33d7e]        # 0x140046248
   1400124ca:	lea    rcx,[rsp+0x50]
   1400124cf:	mov    rdx,rsi
   1400124d2:	call   0x14002e178
   1400124d7:	lea    rcx,[rsp+0x50]
   1400124dc:	call   QWORD PTR [rip+0x2f10e]        # 0x1400415f0
   1400124e2:	cmp    eax,0x4
   1400124e5:	sete   bl
   1400124e8:	mov    eax,ebx
   1400124ea:	mov    rcx,QWORD PTR [rsp+0x860]
   1400124f2:	xor    rcx,rsp
   1400124f5:	call   0x1400265a0
   1400124fa:	lea    r11,[rsp+0x870]
   140012502:	mov    rbx,QWORD PTR [r11+0x18]
   140012506:	mov    rsi,QWORD PTR [r11+0x20]
   14001250a:	mov    rsp,r11
   14001250d:	pop    rdi
   14001250e:	ret    
   14001250f:	int3   
   140012510:	mov    QWORD PTR [rsp+0x8],rbx
   140012515:	push   rdi
   140012516:	sub    rsp,0x20
   14001251a:	mov    rax,QWORD PTR [rip+0x4a57f]        # 0x14005caa0
   140012521:	mov    edi,edx
   140012523:	mov    rbx,rcx
   140012526:	test   rax,rax
   140012529:	jne    0x140012559
   14001252b:	lea    rcx,[rip+0x33e7e]        # 0x1400463b0
   140012532:	call   QWORD PTR [rip+0x2ee58]        # 0x140041390
   140012538:	lea    rdx,[rip+0x33e99]        # 0x1400463d8
   14001253f:	mov    rcx,rax
   140012542:	call   QWORD PTR [rip+0x2eda0]        # 0x1400412e8
   140012548:	mov    QWORD PTR [rip+0x4a551],rax        # 0x14005caa0
   14001254f:	test   rax,rax
   140012552:	jne    0x140012559
   140012554:	mov    rax,rbx
   140012557:	jmp    0x140012563
   140012559:	mov    r8b,0x3
   14001255c:	mov    edx,edi
   14001255e:	mov    rcx,rbx
   140012561:	call   rax
   140012563:	mov    rbx,QWORD PTR [rsp+0x30]
   140012568:	add    rsp,0x20
   14001256c:	pop    rdi
   14001256d:	ret    
   14001256e:	int3   
   14001256f:	int3   
   140012570:	mov    rax,rsp
   140012573:	push   rbp
   140012574:	push   rdi
   140012575:	push   r12
   140012577:	push   r14
   140012579:	push   r15
   14001257b:	lea    rbp,[rax-0x5f]
   14001257f:	sub    rsp,0xc0
   140012586:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   14001258e:	mov    QWORD PTR [rax+0x18],rbx
   140012592:	mov    QWORD PTR [rax+0x20],rsi
   140012596:	mov    rax,QWORD PTR [rip+0x46aeb]        # 0x140059088
   14001259d:	xor    rax,rsp
   1400125a0:	mov    QWORD PTR [rbp+0x2f],rax
   1400125a4:	mov    rsi,rdx
   1400125a7:	mov    r14,rcx
   1400125aa:	mov    rdi,QWORD PTR [rcx+0x8]
   1400125ae:	mov    rbx,QWORD PTR [rcx]
   1400125b1:	mov    r12d,0x7
   1400125b7:	xor    r15d,r15d
   1400125ba:	jmp    0x1400125db
   1400125bc:	cmp    QWORD PTR [rbx+0x18],0x8
   1400125c1:	jb     0x1400125cb
   1400125c3:	mov    rcx,QWORD PTR [rbx]
   1400125c6:	call   0x14002657c
   1400125cb:	mov    QWORD PTR [rbx+0x18],r12
   1400125cf:	mov    QWORD PTR [rbx+0x10],r15
   1400125d3:	mov    WORD PTR [rbx],r15w
   1400125d7:	add    rbx,0x20
   1400125db:	cmp    rbx,rdi
   1400125de:	jne    0x1400125bc
   1400125e0:	mov    rax,QWORD PTR [r14]
   1400125e3:	mov    QWORD PTR [r14+0x8],rax
   1400125e7:	lea    rcx,[rip+0x33e02]        # 0x1400463f0
   1400125ee:	call   QWORD PTR [rip+0x2ef74]        # 0x140041568
   1400125f4:	mov    rbx,rax
   1400125f7:	mov    QWORD PTR [rbp-0x41],rax
   1400125fb:	test   rax,rax
   1400125fe:	je     0x14001277b
   140012604:	lea    rdx,[rip+0x33dfd]        # 0x140046408
   14001260b:	mov    rcx,rax
   14001260e:	call   QWORD PTR [rip+0x2ecd4]        # 0x1400412e8
   140012614:	test   rax,rax
   140012617:	je     0x14001277b
   14001261d:	mov    QWORD PTR [rbp-0x51],r15
   140012621:	lea    r8,[rbp-0x51]
   140012625:	lea    rdx,[rip+0x33bec]        # 0x140046218
   14001262c:	lea    rcx,[rip+0x33bb5]        # 0x1400461e8
   140012633:	call   rax
   140012635:	test   eax,eax
   140012637:	js     0x140012768
   14001263d:	mov    QWORD PTR [rbp-0x61],r15
   140012641:	lea    rax,[rsi-0x1]
   140012645:	mov    rcx,QWORD PTR [rbp-0x51]
   140012649:	cmp    rax,0xfffffffffffffffd
   14001264d:	mov    rax,QWORD PTR [rcx]
   140012650:	ja     0x14001265e
   140012652:	lea    r8,[rbp-0x61]
   140012656:	mov    rdx,rsi
   140012659:	call   QWORD PTR [rax+0x30]
   14001265c:	jmp    0x140012665
   14001265e:	lea    rdx,[rbp-0x61]
   140012662:	call   QWORD PTR [rax+0x28]
   140012665:	test   eax,eax
   140012667:	js     0x140012755
   14001266d:	mov    QWORD PTR [rbp-0x69],r15
   140012671:	mov    edi,0x1
   140012676:	jmp    0x140012727
   14001267b:	mov    QWORD PTR [rbp-0x59],r15
   14001267f:	mov    rcx,QWORD PTR [rbp-0x69]
   140012683:	mov    rax,QWORD PTR [rcx]
   140012686:	lea    r8,[rbp-0x59]
   14001268a:	lea    rdx,[rip+0x33b77]        # 0x140046208
   140012691:	call   QWORD PTR [rax]
   140012693:	test   eax,eax
   140012695:	js     0x140012701
   140012697:	mov    DWORD PTR [rbp-0x49],0x1e
   14001269e:	mov    rcx,QWORD PTR [rbp-0x59]
   1400126a2:	mov    rax,QWORD PTR [rcx]
   1400126a5:	lea    r8,[rbp-0x49]
   1400126a9:	lea    rdx,[rbp-0x11]
   1400126ad:	call   QWORD PTR [rax+0x18]
   1400126b0:	test   eax,eax
   1400126b2:	js     0x140012701
   1400126b4:	mov    QWORD PTR [rbp-0x21],r15
   1400126b8:	mov    QWORD PTR [rbp-0x19],r15
   1400126bc:	mov    QWORD PTR [rbp-0x19],r12
   1400126c0:	mov    QWORD PTR [rbp-0x21],r15
   1400126c4:	mov    WORD PTR [rbp-0x31],r15w
   1400126c9:	lea    rdx,[rbp-0x11]
   1400126cd:	lea    rcx,[rbp-0x31]
   1400126d1:	call   0x14000324c
   1400126d6:	nop
   1400126d7:	lea    rdx,[rbp-0x31]
   1400126db:	mov    rcx,r14
   1400126de:	call   0x1400127b8
   1400126e3:	nop
   1400126e4:	cmp    QWORD PTR [rbp-0x19],0x8
   1400126e9:	jb     0x1400126f4
   1400126eb:	mov    rcx,QWORD PTR [rbp-0x31]
   1400126ef:	call   0x14002657c
   1400126f4:	mov    QWORD PTR [rbp-0x19],r12
   1400126f8:	mov    QWORD PTR [rbp-0x21],r15
   1400126fc:	mov    WORD PTR [rbp-0x31],r15w
   140012701:	mov    rcx,QWORD PTR [rbp-0x69]
   140012705:	test   rcx,rcx
   140012708:	je     0x140012714
   14001270a:	mov    rax,QWORD PTR [rcx]
   14001270d:	call   QWORD PTR [rax+0x10]
   140012710:	mov    QWORD PTR [rbp-0x69],r15
   140012714:	mov    rcx,QWORD PTR [rbp-0x59]
   140012718:	test   rcx,rcx
   14001271b:	je     0x140012727
   14001271d:	mov    rax,QWORD PTR [rcx]
   140012720:	call   QWORD PTR [rax+0x10]
   140012723:	mov    QWORD PTR [rbp-0x59],r15
   140012727:	mov    rcx,QWORD PTR [rbp-0x61]
   14001272b:	mov    rax,QWORD PTR [rcx]
   14001272e:	xor    r9d,r9d
   140012731:	lea    r8,[rbp-0x69]
   140012735:	mov    edx,edi
   140012737:	call   QWORD PTR [rax+0x18]
   14001273a:	test   eax,eax
   14001273c:	je     0x14001267b
   140012742:	mov    rcx,QWORD PTR [rbp-0x69]
   140012746:	test   rcx,rcx
   140012749:	je     0x140012755
   14001274b:	mov    rax,QWORD PTR [rcx]
   14001274e:	call   QWORD PTR [rax+0x10]
   140012751:	mov    QWORD PTR [rbp-0x69],r15
   140012755:	mov    rcx,QWORD PTR [rbp-0x61]
   140012759:	test   rcx,rcx
   14001275c:	je     0x140012768
   14001275e:	mov    rax,QWORD PTR [rcx]
   140012761:	call   QWORD PTR [rax+0x10]
   140012764:	mov    QWORD PTR [rbp-0x61],r15
   140012768:	mov    rcx,QWORD PTR [rbp-0x51]
   14001276c:	test   rcx,rcx
   14001276f:	je     0x14001277b
   140012771:	mov    rax,QWORD PTR [rcx]
   140012774:	call   QWORD PTR [rax+0x10]
   140012777:	mov    QWORD PTR [rbp-0x51],r15
   14001277b:	test   rbx,rbx
   14001277e:	je     0x14001278d
   140012780:	mov    rcx,rbx
   140012783:	call   QWORD PTR [rip+0x2edc7]        # 0x140041550
   140012789:	mov    QWORD PTR [rbp-0x41],r15
   14001278d:	mov    rcx,QWORD PTR [rbp+0x2f]
   140012791:	xor    rcx,rsp
   140012794:	call   0x1400265a0
   140012799:	lea    r11,[rsp+0xc0]
   1400127a1:	mov    rbx,QWORD PTR [r11+0x40]
   1400127a5:	mov    rsi,QWORD PTR [r11+0x48]
   1400127a9:	mov    rsp,r11
   1400127ac:	pop    r15
   1400127ae:	pop    r14
   1400127b0:	pop    r12
   1400127b2:	pop    rdi
   1400127b3:	pop    rbp
   1400127b4:	ret    
   1400127b5:	int3   
   1400127b6:	int3   
   1400127b7:	int3   
   1400127b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400127bd:	push   rdi
   1400127be:	sub    rsp,0x20
   1400127c2:	mov    rbx,rcx
   1400127c5:	mov    rcx,QWORD PTR [rcx+0x8]
   1400127c9:	mov    rdi,rdx
   1400127cc:	cmp    rdx,rcx
   1400127cf:	jae    0x14001284a
   1400127d1:	cmp    QWORD PTR [rbx],rdx
   1400127d4:	ja     0x14001284a
   1400127d6:	mov    rdx,QWORD PTR [rbx+0x10]
   1400127da:	sub    rdi,QWORD PTR [rbx]
   1400127dd:	cmp    rcx,rdx
   1400127e0:	jne    0x140012841
   1400127e2:	mov    rax,rdx
   1400127e5:	sub    rax,rcx
   1400127e8:	sar    rax,0x5
   1400127ec:	cmp    rax,0x1
   1400127f0:	jae    0x140012841
   1400127f2:	sub    rcx,QWORD PTR [rbx]
   1400127f5:	movabs r8,0x7ffffffffffffff
   1400127ff:	sar    rcx,0x5
   140012803:	mov    rax,r8
   140012806:	sub    rax,rcx
   140012809:	cmp    rax,0x1
   14001280d:	jb     0x1400128ca
   140012813:	sub    rdx,QWORD PTR [rbx]
   140012816:	inc    rcx
   140012819:	sar    rdx,0x5
   14001281d:	mov    rax,rdx
   140012820:	shr    rax,1
   140012823:	sub    r8,rax
   140012826:	cmp    r8,rdx
   140012829:	jae    0x14001282f
   14001282b:	xor    edx,edx
   14001282d:	jmp    0x140012832
   14001282f:	add    rdx,rax
   140012832:	cmp    rdx,rcx
   140012835:	cmovb  rdx,rcx
   140012839:	mov    rcx,rbx
   14001283c:	call   0x14001101c
   140012841:	and    rdi,0xffffffffffffffe0
   140012845:	add    rdi,QWORD PTR [rbx]
   140012848:	jmp    0x1400128ae
   14001284a:	mov    rdx,QWORD PTR [rbx+0x10]
   14001284e:	cmp    rcx,rdx
   140012851:	jne    0x1400128ae
   140012853:	mov    rax,rdx
   140012856:	sub    rax,rcx
   140012859:	sar    rax,0x5
   14001285d:	cmp    rax,0x1
   140012861:	jae    0x1400128ae
   140012863:	sub    rcx,QWORD PTR [rbx]
   140012866:	movabs r8,0x7ffffffffffffff
   140012870:	sar    rcx,0x5
   140012874:	mov    rax,r8
   140012877:	sub    rax,rcx
   14001287a:	cmp    rax,0x1
   14001287e:	jb     0x1400128d7
   140012880:	sub    rdx,QWORD PTR [rbx]
   140012883:	inc    rcx
   140012886:	sar    rdx,0x5
   14001288a:	mov    rax,rdx
   14001288d:	shr    rax,1
   140012890:	sub    r8,rax
   140012893:	cmp    r8,rdx
   140012896:	jae    0x14001289c
   140012898:	xor    edx,edx
   14001289a:	jmp    0x14001289f
   14001289c:	add    rdx,rax
   14001289f:	cmp    rdx,rcx
   1400128a2:	cmovb  rdx,rcx
   1400128a6:	mov    rcx,rbx
   1400128a9:	call   0x14001101c
   1400128ae:	mov    rdx,QWORD PTR [rbx+0x8]
   1400128b2:	mov    r8,rdi
   1400128b5:	call   0x140011280
   1400128ba:	add    QWORD PTR [rbx+0x8],0x20
   1400128bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400128c4:	add    rsp,0x20
   1400128c8:	pop    rdi
   1400128c9:	ret    
   1400128ca:	lea    rcx,[rip+0x32e7f]        # 0x140045750
   1400128d1:	call   0x140031f18
   1400128d6:	int3   
   1400128d7:	lea    rcx,[rip+0x32e72]        # 0x140045750
   1400128de:	call   0x140031f18
   1400128e3:	int3   
   1400128e4:	rex push rbx
   1400128e6:	sub    rsp,0x20
   1400128ea:	mov    rbx,rcx
   1400128ed:	mov    rcx,QWORD PTR [rcx]
   1400128f0:	test   rcx,rcx
   1400128f3:	je     0x1400128ff
   1400128f5:	call   QWORD PTR [rip+0x2ec55]        # 0x140041550
   1400128fb:	and    QWORD PTR [rbx],0x0
   1400128ff:	add    rsp,0x20
   140012903:	pop    rbx
   140012904:	ret    
   140012905:	int3   
   140012906:	int3   
   140012907:	int3   
   140012908:	rex push rbx
   14001290a:	sub    rsp,0x20
   14001290e:	mov    rbx,rcx
   140012911:	mov    rcx,QWORD PTR [rcx]
   140012914:	test   rcx,rcx
   140012917:	je     0x140012923
   140012919:	mov    rax,QWORD PTR [rcx]
   14001291c:	call   QWORD PTR [rax+0x10]
   14001291f:	and    QWORD PTR [rbx],0x0
   140012923:	add    rsp,0x20
   140012927:	pop    rbx
   140012928:	ret    
   140012929:	int3   
   14001292a:	int3   
   14001292b:	int3   
   14001292c:	rex push rbx
   14001292e:	sub    rsp,0x20
   140012932:	mov    rbx,rcx
   140012935:	mov    rcx,QWORD PTR [rcx]
   140012938:	test   rcx,rcx
   14001293b:	je     0x140012947
   14001293d:	call   QWORD PTR [rip+0x2ea45]        # 0x140041388
   140012943:	and    QWORD PTR [rbx],0x0
   140012947:	add    rsp,0x20
   14001294b:	pop    rbx
   14001294c:	ret    
   14001294d:	int3   
   14001294e:	int3   
   14001294f:	int3   
   140012950:	mov    QWORD PTR [rsp+0x10],rbx
   140012955:	mov    QWORD PTR [rsp+0x18],rsi
   14001295a:	mov    QWORD PTR [rsp+0x20],rdi
   14001295f:	push   rbp
   140012960:	mov    rbp,rsp
   140012963:	sub    rsp,0x50
   140012967:	mov    rax,QWORD PTR [rip+0x4671a]        # 0x140059088
   14001296e:	xor    rax,rsp
   140012971:	mov    QWORD PTR [rbp-0x10],rax
   140012975:	mov    rbx,rcx
   140012978:	lea    rdx,[rbp-0x20]
   14001297c:	xor    ecx,ecx
   14001297e:	call   0x14003bec0
   140012983:	mov    eax,DWORD PTR [rbp-0x1c]
   140012986:	mov    edi,DWORD PTR [rbp-0x20]
   140012989:	mov    DWORD PTR [rbx],eax
   14001298b:	mov    eax,DWORD PTR [rbp-0x14]
   14001298e:	mov    esi,0x1
   140012993:	mov    DWORD PTR [rbx+0x4],eax
   140012996:	mov    eax,DWORD PTR [rbp-0x18]
   140012999:	lea    rdx,[rbp-0x20]
   14001299d:	mov    ecx,esi
   14001299f:	mov    DWORD PTR [rbx+0x8],eax
   1400129a2:	call   0x14003bec0
   1400129a7:	mov    eax,DWORD PTR [rbp-0x20]
   1400129aa:	mov    DWORD PTR [rbx+0xc],eax
   1400129ad:	mov    eax,DWORD PTR [rbp-0x1c]
   1400129b0:	mov    DWORD PTR [rbx+0x10],eax
   1400129b3:	mov    eax,DWORD PTR [rbp-0x14]
   1400129b6:	mov    DWORD PTR [rbx+0x14],eax
   1400129b9:	mov    eax,DWORD PTR [rbp-0x18]
   1400129bc:	mov    DWORD PTR [rbx+0x18],eax
   1400129bf:	test   eax,eax
   1400129c1:	jns    0x140012a36
   1400129c3:	lea    rdx,[rbp-0x30]
   1400129c7:	mov    ecx,0x40000000
   1400129cc:	call   0x14003bec0
   1400129d1:	cmp    DWORD PTR [rbp-0x30],0x40000005
   1400129d8:	jb     0x140012a36
   1400129da:	cmp    DWORD PTR [rbp-0x2c],0x7263694d
   1400129e1:	jne    0x140012a36
   1400129e3:	cmp    DWORD PTR [rbp-0x28],0x666f736f
   1400129ea:	jne    0x140012a36
   1400129ec:	cmp    DWORD PTR [rbp-0x24],0x76482074
   1400129f3:	jne    0x140012a36
   1400129f5:	lea    rdx,[rbp-0x30]
   1400129f9:	mov    ecx,0x40000001
   1400129fe:	call   0x14003bec0
   140012a03:	cmp    DWORD PTR [rbp-0x30],0x31237648
   140012a0a:	jne    0x140012a36
   140012a0c:	lea    rdx,[rbp-0x30]
   140012a10:	mov    ecx,0x40000002
   140012a15:	call   0x14003bec0
   140012a1a:	cmp    DWORD PTR [rbp-0x30],0x0
   140012a1e:	jne    0x140012a32
   140012a20:	cmp    DWORD PTR [rbp-0x2c],0x0
   140012a24:	jne    0x140012a32
   140012a26:	cmp    DWORD PTR [rbp-0x28],0x0
   140012a2a:	jne    0x140012a32
   140012a2c:	cmp    DWORD PTR [rbp-0x24],0x0
   140012a30:	je     0x140012a36
   140012a32:	mov    eax,esi
   140012a34:	jmp    0x140012a38
   140012a36:	xor    eax,eax
   140012a38:	and    DWORD PTR [rbx+0x1c],0x0
   140012a3c:	cmp    DWORD PTR [rbx],0x756e6547
   140012a42:	mov    DWORD PTR [rbx+0x20],eax
   140012a45:	mov    r8d,0x2
   140012a4b:	jne    0x140012a84
   140012a4d:	cmp    DWORD PTR [rbx+0x4],0x49656e69
   140012a54:	jne    0x140012a84
   140012a56:	cmp    DWORD PTR [rbx+0x8],0x6c65746e
   140012a5d:	jne    0x140012a84
   140012a5f:	mov    edx,DWORD PTR [rbx+0xc]
   140012a62:	lea    ecx,[r8+0x4]
   140012a66:	shr    edx,0x8
   140012a69:	and    edx,0xf
   140012a6c:	cmp    edx,ecx
   140012a6e:	je     0x140012a7e
   140012a70:	lea    eax,[rcx-0x3]
   140012a73:	cmp    edx,0xf
   140012a76:	cmovne eax,esi
   140012a79:	mov    DWORD PTR [rbx+0x1c],eax
   140012a7c:	jmp    0x140012ac5
   140012a7e:	mov    DWORD PTR [rbx+0x1c],r8d
   140012a82:	jmp    0x140012ac5
   140012a84:	cmp    DWORD PTR [rbx],0x68747541
   140012a8a:	jne    0x140012ac5
   140012a8c:	cmp    DWORD PTR [rbx+0x4],0x69746e65
   140012a93:	jne    0x140012ac5
   140012a95:	cmp    DWORD PTR [rbx+0x8],0x444d4163
   140012a9c:	jne    0x140012ac5
   140012a9e:	mov    eax,DWORD PTR [rbx+0xc]
   140012aa1:	mov    ecx,0x6
   140012aa6:	shr    eax,0x8
   140012aa9:	and    eax,0xf
   140012aac:	cmp    eax,ecx
   140012aae:	je     0x140012abe
   140012ab0:	lea    edx,[rcx-0x2]
   140012ab3:	cmp    eax,0xf
   140012ab6:	cmovne ecx,edx
   140012ab9:	mov    DWORD PTR [rbx+0x1c],ecx
   140012abc:	jmp    0x140012ac5
   140012abe:	mov    DWORD PTR [rbx+0x1c],0x5
   140012ac5:	and    DWORD PTR [rbx+0x24],0x0
   140012ac9:	cmp    DWORD PTR [rbx+0x1c],r8d
   140012acd:	jne    0x140012aec
   140012acf:	mov    ecx,0xa
   140012ad4:	mov    DWORD PTR [rbx+0x24],r8d
   140012ad8:	cmp    edi,ecx
   140012ada:	jb     0x140012aec
   140012adc:	lea    rdx,[rbp-0x20]
   140012ae0:	call   0x14003bec0
   140012ae5:	movzx  eax,BYTE PTR [rbp-0x1f]
   140012ae9:	mov    DWORD PTR [rbx+0x24],eax
   140012aec:	mov    rcx,QWORD PTR [rbp-0x10]
   140012af0:	xor    rcx,rsp
   140012af3:	call   0x1400265a0
   140012af8:	mov    rbx,QWORD PTR [rsp+0x68]
   140012afd:	mov    rsi,QWORD PTR [rsp+0x70]
   140012b02:	mov    rdi,QWORD PTR [rsp+0x78]
   140012b07:	add    rsp,0x50
   140012b0b:	pop    rbp
   140012b0c:	ret    
   140012b0d:	int3   
   140012b0e:	int3   
   140012b0f:	int3   
   140012b10:	mov    rax,rsp
   140012b13:	mov    QWORD PTR [rax+0x8],rbx
   140012b17:	mov    QWORD PTR [rax+0x10],rsi
   140012b1b:	mov    QWORD PTR [rax+0x18],rdi
   140012b1f:	mov    QWORD PTR [rax+0x20],r14
   140012b23:	push   rbp
   140012b24:	lea    rbp,[rax-0x38]
   140012b28:	sub    rsp,0x130
   140012b2f:	mov    rax,QWORD PTR [rip+0x46552]        # 0x140059088
   140012b36:	xor    rax,rsp
   140012b39:	mov    QWORD PTR [rbp+0x20],rax
   140012b3d:	lea    rcx,[rsp+0x20]
   140012b42:	call   QWORD PTR [rip+0x2eac0]        # 0x140041608
   140012b48:	mov    eax,DWORD PTR [rsp+0x48]
   140012b4c:	xor    edx,edx
   140012b4e:	mov    DWORD PTR [rip+0x4a024],eax        # 0x14005cb78
   140012b54:	movzx  eax,WORD PTR [rsp+0x40]
   140012b59:	lea    r8d,[rdx+0x28]
   140012b5d:	mov    WORD PTR [rip+0x49f4c],ax        # 0x14005cab0
   140012b64:	mov    eax,DWORD PTR [rsp+0x24]
   140012b68:	lea    rcx,[rip+0x4a019]        # 0x14005cb88
   140012b6f:	mov    DWORD PTR [rip+0x49ffb],eax        # 0x14005cb70
   140012b75:	movzx  eax,WORD PTR [rsp+0x20]
   140012b7a:	mov    WORD PTR [rip+0x49fff],ax        # 0x14005cb80
   140012b81:	call   0x14002bb90
   140012b86:	lea    rcx,[rip+0x49ffb]        # 0x14005cb88
   140012b8d:	call   0x140012950
   140012b92:	lea    rcx,[rip+0x49f37]        # 0x14005cad0
   140012b99:	mov    DWORD PTR [rip+0x49f2d],0x9c        # 0x14005cad0
   140012ba3:	call   QWORD PTR [rip+0x2e827]        # 0x1400413d0
   140012ba9:	xor    ebx,ebx
   140012bab:	lea    rcx,[rip+0x3387e]        # 0x140046430
   140012bb2:	mov    eax,ebx
   140012bb4:	lea    esi,[rbx+0x2]
   140012bb7:	lea    r14d,[rbx+0x1]
   140012bbb:	cmp    DWORD PTR [rip+0x49f1f],esi        # 0x14005cae0
   140012bc1:	sete   al
   140012bc4:	cmp    DWORD PTR [rip+0x49f15],r14d        # 0x14005cae0
   140012bcb:	mov    DWORD PTR [rip+0x49fa3],eax        # 0x14005cb74
   140012bd1:	mov    eax,ebx
   140012bd3:	sete   al
   140012bd6:	mov    DWORD PTR [rip+0x49fd4],eax        # 0x14005cbb0
   140012bdc:	call   QWORD PTR [rip+0x2e7ae]        # 0x140041390
   140012be2:	lea    rdx,[rip+0x33837]        # 0x140046420
   140012be9:	mov    rcx,rax
   140012bec:	call   QWORD PTR [rip+0x2e6f6]        # 0x1400412e8
   140012bf2:	mov    rdi,rax
   140012bf5:	test   rax,rax
   140012bf8:	je     0x140012c0c
   140012bfa:	call   QWORD PTR [rip+0x2e940]        # 0x140041540
   140012c00:	lea    rdx,[rip+0x49ead]        # 0x14005cab4
   140012c07:	mov    rcx,rax
   140012c0a:	call   rdi
   140012c0c:	cmp    DWORD PTR [rip+0x49ea2],ebx        # 0x14005cab4
   140012c12:	je     0x140012c53
   140012c14:	lea    rcx,[rip+0x33815]        # 0x140046430
   140012c1b:	call   QWORD PTR [rip+0x2e76f]        # 0x140041390
   140012c21:	lea    rdx,[rip+0x33818]        # 0x140046440
   140012c28:	mov    rcx,rax
   140012c2b:	call   QWORD PTR [rip+0x2e6b7]        # 0x1400412e8
   140012c31:	test   rax,rax
   140012c34:	je     0x140012c53
   140012c36:	lea    rcx,[rsp+0x50]
   140012c3b:	call   rax
   140012c3d:	mov    eax,DWORD PTR [rip+0x49f41]        # 0x14005cb84
   140012c43:	cmp    WORD PTR [rsp+0x50],0x6
   140012c49:	cmove  eax,r14d
   140012c4d:	mov    DWORD PTR [rip+0x49f31],eax        # 0x14005cb84
   140012c53:	lea    rcx,[rbp-0x80]
   140012c57:	xor    edx,edx
   140012c59:	mov    r8d,0x9c
   140012c5f:	mov    DWORD PTR [rip+0x49f57],ebx        # 0x14005cbbc
   140012c65:	call   0x14002bb90
   140012c6a:	mov    eax,0x3
   140012c6f:	mov    edx,esi
   140012c71:	xor    ecx,ecx
   140012c73:	mov    WORD PTR [rbp+0x14],ax
   140012c77:	mov    DWORD PTR [rbp-0x80],0x9c
   140012c7e:	mov    QWORD PTR [rbp-0x7c],0x5
   140012c86:	call   0x140012510
   140012c8b:	mov    rcx,rax
   140012c8e:	mov    edx,r14d
   140012c91:	call   0x140012510
   140012c96:	mov    edx,0x20
   140012c9b:	mov    rcx,rax
   140012c9e:	call   0x140012510
   140012ca3:	mov    rdi,rax
   140012ca6:	mov    rax,QWORD PTR [rip+0x49dfb]        # 0x14005caa8
   140012cad:	test   rax,rax
   140012cb0:	jne    0x140012cdf
   140012cb2:	lea    rcx,[rip+0x336f7]        # 0x1400463b0
   140012cb9:	call   QWORD PTR [rip+0x2e6d1]        # 0x140041390
   140012cbf:	lea    rdx,[rip+0x336fa]        # 0x1400463c0
   140012cc6:	mov    rcx,rax
   140012cc9:	call   QWORD PTR [rip+0x2e619]        # 0x1400412e8
   140012ccf:	mov    QWORD PTR [rip+0x49dd2],rax        # 0x14005caa8
   140012cd6:	test   rax,rax
   140012cd9:	jne    0x140012cdf
   140012cdb:	mov    eax,ebx
   140012cdd:	jmp    0x140012ced
   140012cdf:	lea    rcx,[rbp-0x80]
   140012ce3:	mov    r8,rdi
   140012ce6:	mov    edx,0x23
   140012ceb:	call   rax
   140012ced:	mov    DWORD PTR [rip+0x49ec9],eax        # 0x14005cbbc
   140012cf3:	mov    eax,DWORD PTR [rip+0x49ddb]        # 0x14005cad4
   140012cf9:	cmp    eax,0x5
   140012cfc:	jne    0x140012d23
   140012cfe:	mov    eax,DWORD PTR [rip+0x49dd4]        # 0x14005cad8
   140012d04:	cmp    eax,r14d
   140012d07:	jne    0x140012d15
   140012d09:	cmp    WORD PTR [rip+0x49e54],si        # 0x14005cb64
   140012d10:	setae  bl
   140012d13:	jmp    0x140012d26
   140012d15:	cmp    eax,esi
   140012d17:	jne    0x140012d23
   140012d19:	cmp    WORD PTR [rip+0x49e43],r14w        # 0x14005cb64
   140012d21:	jmp    0x140012d10
   140012d23:	seta   bl
   140012d26:	mov    DWORD PTR [rip+0x49e8c],ebx        # 0x14005cbb8
   140012d2c:	mov    rcx,QWORD PTR [rbp+0x20]
   140012d30:	xor    rcx,rsp
   140012d33:	call   0x1400265a0
   140012d38:	lea    r11,[rsp+0x130]
   140012d40:	mov    rbx,QWORD PTR [r11+0x10]
   140012d44:	mov    rsi,QWORD PTR [r11+0x18]
   140012d48:	mov    rdi,QWORD PTR [r11+0x20]
   140012d4c:	mov    r14,QWORD PTR [r11+0x28]
   140012d50:	mov    rsp,r11
   140012d53:	pop    rbp
   140012d54:	ret    
   140012d55:	int3   
   140012d56:	int3   
   140012d57:	int3   
   140012d58:	mov    QWORD PTR [rsp+0x8],rbx
   140012d5d:	push   rdi
   140012d5e:	sub    rsp,0x40
   140012d62:	mov    rax,QWORD PTR [rip+0x4631f]        # 0x140059088
   140012d69:	xor    rax,rsp
   140012d6c:	mov    QWORD PTR [rsp+0x30],rax
   140012d71:	xor    ebx,ebx
   140012d73:	cmp    DWORD PTR [rip+0x49d43],ebx        # 0x14005cabc
   140012d79:	jne    0x140012e56
   140012d7f:	cmp    DWORD PTR [rip+0x49d3f],ebx        # 0x14005cac4
   140012d85:	jne    0x140012e56
   140012d8b:	mov    ecx,DWORD PTR [rip+0x49e13]        # 0x14005cba4
   140012d91:	lea    edi,[rbx+0x1]
   140012d94:	mov    DWORD PTR [rip+0x49d26],ebx        # 0x14005cac0
   140012d9a:	cmp    ecx,edi
   140012d9c:	jbe    0x140012e56
   140012da2:	cmp    ecx,0x2
   140012da5:	je     0x140012dd3
   140012da7:	cmp    ecx,0x3
   140012daa:	je     0x140012dc2
   140012dac:	lea    eax,[rcx-0x5]
   140012daf:	cmp    eax,edi
   140012db1:	ja     0x140012e56
   140012db7:	mov    DWORD PTR [rip+0x49df7],edi        # 0x14005cbb4
   140012dbd:	jmp    0x140012e5c
   140012dc2:	mov    DWORD PTR [rip+0x49dec],ebx        # 0x14005cbb4
   140012dc8:	mov    DWORD PTR [rip+0x49dae],edi        # 0x14005cb7c
   140012dce:	jmp    0x140012e62
   140012dd3:	mov    eax,DWORD PTR [rip+0x49dbb]        # 0x14005cb94
   140012dd9:	mov    DWORD PTR [rip+0x49d9d],ebx        # 0x14005cb7c
   140012ddf:	mov    edx,eax
   140012de1:	shr    edx,0x4
   140012de4:	and    edx,0xf
   140012de7:	cmp    edx,edi
   140012de9:	jne    0x140012dfa
   140012deb:	and    eax,0xf
   140012dee:	cmp    al,0x9
   140012df0:	jb     0x140012dfa
   140012df2:	mov    DWORD PTR [rip+0x49dbc],edi        # 0x14005cbb4
   140012df8:	jmp    0x140012e07
   140012dfa:	mov    eax,ebx
   140012dfc:	cmp    edx,edi
   140012dfe:	seta   al
   140012e01:	mov    DWORD PTR [rip+0x49dad],eax        # 0x14005cbb4
   140012e07:	lea    eax,[rcx-0x1]
   140012e0a:	cmp    eax,0x2
   140012e0d:	ja     0x140012e62
   140012e0f:	lea    rdx,[rsp+0x20]
   140012e14:	xor    ecx,ecx
   140012e16:	call   0x14003bec0
   140012e1b:	mov    ecx,0xa
   140012e20:	cmp    DWORD PTR [rsp+0x20],ecx
   140012e24:	jb     0x140012e62
   140012e26:	lea    rdx,[rsp+0x20]
   140012e2b:	call   0x14003bec0
   140012e30:	movzx  eax,BYTE PTR [rsp+0x20]
   140012e35:	cmp    eax,edi
   140012e37:	jb     0x140012e62
   140012e39:	movzx  ecx,BYTE PTR [rsp+0x23]
   140012e3e:	cmp    ecx,0x20
   140012e41:	ja     0x140012e62
   140012e43:	mov    eax,DWORD PTR [rsp+0x24]
   140012e47:	mov    edx,edi
   140012e49:	shl    edx,cl
   140012e4b:	not    eax
   140012e4d:	sub    edx,edi
   140012e4f:	test   eax,edx
   140012e51:	setne  bl
   140012e54:	jmp    0x140012e62
   140012e56:	mov    DWORD PTR [rip+0x49d58],ebx        # 0x14005cbb4
   140012e5c:	mov    DWORD PTR [rip+0x49d1a],ebx        # 0x14005cb7c
   140012e62:	mov    DWORD PTR [rip+0x49d04],ebx        # 0x14005cb6c
   140012e68:	mov    rcx,QWORD PTR [rsp+0x30]
   140012e6d:	xor    rcx,rsp
   140012e70:	call   0x1400265a0
   140012e75:	mov    rbx,QWORD PTR [rsp+0x50]
   140012e7a:	add    rsp,0x40
   140012e7e:	pop    rdi
   140012e7f:	ret    
   140012e80:	sub    rsp,0x38
   140012e84:	call   0x14003bf10
   140012e89:	mov    rcx,rax
   140012e8c:	jmp    0x140012e95
   140012e8e:	xor    ecx,ecx
   140012e90:	mov    QWORD PTR [rsp+0x20],rcx
   140012e95:	xor    eax,eax
   140012e97:	test   rcx,rcx
   140012e9a:	setne  al
   140012e9d:	add    rsp,0x38
   140012ea1:	ret    
   140012ea2:	int3   
   140012ea3:	int3   
   140012ea4:	rex push rbx
   140012ea6:	sub    rsp,0x20
   140012eaa:	lea    rax,[rip+0x335bf]        # 0x140046470
   140012eb1:	mov    rbx,rcx
   140012eb4:	mov    QWORD PTR [rcx],rax
   140012eb7:	test   dl,0x1
   140012eba:	je     0x140012ec1
   140012ebc:	call   0x14002657c
   140012ec1:	mov    rax,rbx
   140012ec4:	add    rsp,0x20
   140012ec8:	pop    rbx
   140012ec9:	ret    
   140012eca:	int3   
   140012ecb:	int3   
   140012ecc:	lea    rax,[rip+0x3359d]        # 0x140046470
   140012ed3:	mov    QWORD PTR [rcx],rax
   140012ed6:	ret    
   140012ed7:	int3   
   140012ed8:	rex push rbx
   140012eda:	sub    rsp,0x20
   140012ede:	and    DWORD PTR [rsp+0x38],0x0
   140012ee3:	mov    rbx,rcx
   140012ee6:	lea    rcx,[rip+0x33543]        # 0x140046430
   140012eed:	call   QWORD PTR [rip+0x2e49d]        # 0x140041390
   140012ef3:	lea    rdx,[rip+0x33526]        # 0x140046420
   140012efa:	mov    rcx,rax
   140012efd:	call   QWORD PTR [rip+0x2e3e5]        # 0x1400412e8
   140012f03:	test   rax,rax
   140012f06:	je     0x140012f24
   140012f08:	lea    rdx,[rsp+0x38]
   140012f0d:	mov    rcx,rbx
   140012f10:	call   rax
   140012f12:	test   eax,eax
   140012f14:	je     0x140012f24
   140012f16:	cmp    DWORD PTR [rsp+0x38],0x0
   140012f1b:	je     0x140012f24
   140012f1d:	mov    eax,0xe12305b4
   140012f22:	jmp    0x140012f26
   140012f24:	xor    eax,eax
   140012f26:	add    rsp,0x20
   140012f2a:	pop    rbx
   140012f2b:	ret    
   140012f2c:	mov    QWORD PTR [rsp+0x8],rcx
   140012f31:	push   rbp
   140012f32:	push   rbx
   140012f33:	push   rsi
   140012f34:	push   rdi
   140012f35:	push   r12
   140012f37:	push   r13
   140012f39:	push   r14
   140012f3b:	push   r15
   140012f3d:	mov    rbp,rsp
   140012f40:	sub    rsp,0x48
   140012f44:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   140012f4c:	mov    r12,rdx
   140012f4f:	mov    r14,rcx
   140012f52:	xor    r13d,r13d
   140012f55:	mov    QWORD PTR [rcx],r13
   140012f58:	mov    QWORD PTR [rcx+0x8],r13
   140012f5c:	mov    QWORD PTR [rcx+0x10],r13
   140012f60:	mov    BYTE PTR [rcx+0x18],0x1
   140012f64:	lea    rdi,[rcx+0x20]
   140012f68:	mov    QWORD PTR [rdi],r13
   140012f6b:	mov    QWORD PTR [rdi+0x8],r13
   140012f6f:	mov    DWORD PTR [rdi+0x10],0x11
   140012f76:	mov    eax,0xffffffff
   140012f7b:	mov    QWORD PTR [rdi+0x20],rax
   140012f7f:	mov    QWORD PTR [rdi+0x28],r13
   140012f83:	mov    DWORD PTR [rdi+0x30],r13d
   140012f87:	mov    DWORD PTR [rdi+0x34],0xa
   140012f8e:	mov    QWORD PTR [rdi+0x38],r13
   140012f92:	mov    QWORD PTR [rdi+0x40],r13
   140012f96:	mov    DWORD PTR [rdi+0x14],0x3f400000
   140012f9d:	mov    DWORD PTR [rdi+0x18],0x3e800000
   140012fa4:	mov    DWORD PTR [rdi+0x1c],0x40100000
   140012fab:	mov    rcx,rdi
   140012fae:	call   0x140013f60
   140012fb3:	nop
   140012fb4:	test   r12,r12
   140012fb7:	je     0x140013254
   140012fbd:	cmp    WORD PTR [r12],r13w
   140012fc2:	je     0x140013254
   140012fc8:	or     rsi,0xffffffffffffffff
   140012fcc:	lea    rcx,[rip+0x47355]        # 0x14005a328
   140012fd3:	mov    rax,QWORD PTR [rip+0x4734e]        # 0x14005a328
   140012fda:	call   QWORD PTR [rax+0x18]
   140012fdd:	add    rax,0x18
   140012fe1:	mov    QWORD PTR [rbp+0x58],rax
   140012fe5:	lea    rcx,[rip+0x4733c]        # 0x14005a328
   140012fec:	mov    rax,QWORD PTR [rip+0x47335]        # 0x14005a328
   140012ff3:	call   QWORD PTR [rax+0x18]
   140012ff6:	add    rax,0x18
   140012ffa:	mov    QWORD PTR [rbp+0x50],rax
   140012ffe:	lea    rcx,[rip+0x47323]        # 0x14005a328
   140013005:	mov    rax,QWORD PTR [rip+0x4731c]        # 0x14005a328
   14001300c:	call   QWORD PTR [rax+0x18]
   14001300f:	add    rax,0x18
   140013013:	mov    QWORD PTR [rbp+0x60],rax
   140013017:	mov    rax,rsi
   14001301a:	inc    rax
   14001301d:	cmp    WORD PTR [r12+rax*2],r13w
   140013022:	jne    0x14001301a
   140013024:	mov    r8d,eax
   140013027:	mov    rdx,r12
   14001302a:	lea    rcx,[rbp+0x60]
   14001302e:	call   0x140006f54
   140013033:	mov    rbx,QWORD PTR [rbp+0x60]
   140013037:	mov    r15d,DWORD PTR [rbx-0x10]
   14001303b:	test   r15d,r15d
   14001303e:	je     0x1400131fb
   140013044:	lea    eax,[r15+0x1]
   140013048:	movsxd rcx,eax
   14001304b:	lea    r12,[r12+rcx*2]
   14001304f:	jle    0x140013196
   140013055:	mov    edx,0x3d
   14001305a:	mov    rcx,rbx
   14001305d:	call   0x140026e50
   140013062:	mov    rsi,rax
   140013065:	test   rax,rax
   140013068:	je     0x140013192
   14001306e:	sub    rsi,rbx
   140013071:	sar    rsi,1
   140013074:	test   esi,esi
   140013076:	jle    0x140013192
   14001307c:	lea    ecx,[r15-0x1]
   140013080:	cmp    esi,ecx
   140013082:	jne    0x1400130c7
   140013084:	lea    rdx,[rbx-0x18]
   140013088:	or     rsi,0xffffffffffffffff
   14001308c:	mov    eax,esi
   14001308e:	lock xadd DWORD PTR [rdx+0x10],eax
   140013093:	add    eax,esi
   140013095:	test   eax,eax
   140013097:	jg     0x1400130a3
   140013099:	mov    rcx,QWORD PTR [rdx]
   14001309c:	mov    rax,QWORD PTR [rcx]
   14001309f:	call   QWORD PTR [rax+0x8]
   1400130a2:	nop
   1400130a3:	mov    rdx,QWORD PTR [rbp+0x50]
   1400130a7:	add    rdx,0xffffffffffffffe8
   1400130ab:	mov    eax,esi
   1400130ad:	lock xadd DWORD PTR [rdx+0x10],eax
   1400130b2:	add    eax,esi
   1400130b4:	test   eax,eax
   1400130b6:	jg     0x1400130c2
   1400130b8:	mov    rcx,QWORD PTR [rdx]
   1400130bb:	mov    rax,QWORD PTR [rcx]
   1400130be:	call   QWORD PTR [rax+0x8]
   1400130c1:	nop
   1400130c2:	jmp    0x1400131d0
   1400130c7:	mov    r8d,esi
   1400130ca:	lea    rdx,[rbp-0x28]
   1400130ce:	lea    rcx,[rbp+0x60]
   1400130d2:	call   0x14000d564
   1400130d7:	nop
   1400130d8:	mov    rdx,rax
   1400130db:	lea    rcx,[rbp+0x58]
   1400130df:	call   0x14000cdac
   1400130e4:	nop
   1400130e5:	mov    rdx,QWORD PTR [rbp-0x28]
   1400130e9:	add    rdx,0xffffffffffffffe8
   1400130ed:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400130f2:	jg     0x1400130fd
   1400130f4:	mov    rcx,QWORD PTR [rdx]
   1400130f7:	mov    rax,QWORD PTR [rcx]
   1400130fa:	call   QWORD PTR [rax+0x8]
   1400130fd:	sub    r15d,esi
   140013100:	lea    r8d,[r15-0x1]
   140013104:	lea    rdx,[rbp-0x20]
   140013108:	lea    rcx,[rbp+0x60]
   14001310c:	call   0x140013760
   140013111:	nop
   140013112:	mov    rdx,rax
   140013115:	lea    rcx,[rbp+0x50]
   140013119:	call   0x14000cdac
   14001311e:	nop
   14001311f:	mov    rdx,QWORD PTR [rbp-0x20]
   140013123:	add    rdx,0xffffffffffffffe8
   140013127:	or     rsi,0xffffffffffffffff
   14001312b:	mov    eax,esi
   14001312d:	lock xadd DWORD PTR [rdx+0x10],eax
   140013132:	add    eax,esi
   140013134:	test   eax,eax
   140013136:	jg     0x140013141
   140013138:	mov    rcx,QWORD PTR [rdx]
   14001313b:	mov    rax,QWORD PTR [rcx]
   14001313e:	call   QWORD PTR [rax+0x8]
   140013141:	mov    r8,QWORD PTR [rbp+0x50]
   140013145:	mov    rdx,QWORD PTR [rbp+0x58]
   140013149:	mov    rcx,rdi
   14001314c:	call   0x140013818
   140013151:	nop
   140013152:	mov    rdx,QWORD PTR [rbp+0x60]
   140013156:	add    rdx,0xffffffffffffffe8
   14001315a:	mov    eax,esi
   14001315c:	lock xadd DWORD PTR [rdx+0x10],eax
   140013161:	add    eax,esi
   140013163:	test   eax,eax
   140013165:	jg     0x140013171
   140013167:	mov    rcx,QWORD PTR [rdx]
   14001316a:	mov    rax,QWORD PTR [rcx]
   14001316d:	call   QWORD PTR [rax+0x8]
   140013170:	nop
   140013171:	mov    rdx,QWORD PTR [rbp+0x50]
   140013175:	add    rdx,0xffffffffffffffe8
   140013179:	mov    eax,esi
   14001317b:	lock xadd DWORD PTR [rdx+0x10],eax
   140013180:	add    eax,esi
   140013182:	test   eax,eax
   140013184:	jg     0x140013190
   140013186:	mov    rcx,QWORD PTR [rdx]
   140013189:	mov    rax,QWORD PTR [rcx]
   14001318c:	call   QWORD PTR [rax+0x8]
   14001318f:	nop
   140013190:	jmp    0x1400131d0
   140013192:	or     rsi,0xffffffffffffffff
   140013196:	lea    rdx,[rbx-0x18]
   14001319a:	mov    eax,esi
   14001319c:	lock xadd DWORD PTR [rdx+0x10],eax
   1400131a1:	add    eax,esi
   1400131a3:	test   eax,eax
   1400131a5:	jg     0x1400131b1
   1400131a7:	mov    rcx,QWORD PTR [rdx]
   1400131aa:	mov    rax,QWORD PTR [rcx]
   1400131ad:	call   QWORD PTR [rax+0x8]
   1400131b0:	nop
   1400131b1:	mov    rdx,QWORD PTR [rbp+0x50]
   1400131b5:	add    rdx,0xffffffffffffffe8
   1400131b9:	mov    eax,esi
   1400131bb:	lock xadd DWORD PTR [rdx+0x10],eax
   1400131c0:	add    eax,esi
   1400131c2:	test   eax,eax
   1400131c4:	jg     0x1400131d0
   1400131c6:	mov    rcx,QWORD PTR [rdx]
   1400131c9:	mov    rax,QWORD PTR [rcx]
   1400131cc:	call   QWORD PTR [rax+0x8]
   1400131cf:	nop
   1400131d0:	mov    rdx,QWORD PTR [rbp+0x58]
   1400131d4:	add    rdx,0xffffffffffffffe8
   1400131d8:	mov    eax,esi
   1400131da:	lock xadd DWORD PTR [rdx+0x10],eax
   1400131df:	add    eax,esi
   1400131e1:	test   eax,eax
   1400131e3:	jg     0x1400131ee
   1400131e5:	mov    rcx,QWORD PTR [rdx]
   1400131e8:	mov    rax,QWORD PTR [rcx]
   1400131eb:	call   QWORD PTR [rax+0x8]
   1400131ee:	cmp    WORD PTR [r12],r13w
   1400131f3:	jne    0x140012fcc
   1400131f9:	jmp    0x140013254
   1400131fb:	lea    rdx,[rbx-0x18]
   1400131ff:	mov    eax,esi
   140013201:	lock xadd DWORD PTR [rdx+0x10],eax
   140013206:	add    eax,esi
   140013208:	test   eax,eax
   14001320a:	jg     0x140013216
   14001320c:	mov    rcx,QWORD PTR [rdx]
   14001320f:	mov    rax,QWORD PTR [rcx]
   140013212:	call   QWORD PTR [rax+0x8]
   140013215:	nop
   140013216:	mov    rdx,QWORD PTR [rbp+0x50]
   14001321a:	add    rdx,0xffffffffffffffe8
   14001321e:	mov    eax,esi
   140013220:	lock xadd DWORD PTR [rdx+0x10],eax
   140013225:	add    eax,esi
   140013227:	test   eax,eax
   140013229:	jg     0x140013235
   14001322b:	mov    rcx,QWORD PTR [rdx]
   14001322e:	mov    rax,QWORD PTR [rcx]
   140013231:	call   QWORD PTR [rax+0x8]
   140013234:	nop
   140013235:	mov    rdx,QWORD PTR [rbp+0x58]
   140013239:	add    rdx,0xffffffffffffffe8
   14001323d:	mov    eax,esi
   14001323f:	lock xadd DWORD PTR [rdx+0x10],eax
   140013244:	add    eax,esi
   140013246:	test   eax,eax
   140013248:	jg     0x140013254
   14001324a:	mov    rcx,QWORD PTR [rdx]
   14001324d:	mov    rax,QWORD PTR [rcx]
   140013250:	call   QWORD PTR [rax+0x8]
   140013253:	nop
   140013254:	mov    rax,r14
   140013257:	add    rsp,0x48
   14001325b:	pop    r15
   14001325d:	pop    r14
   14001325f:	pop    r13
   140013261:	pop    r12
   140013263:	pop    rdi
   140013264:	pop    rsi
   140013265:	pop    rbx
   140013266:	pop    rbp
   140013267:	ret    
   140013268:	mov    rax,rsp
   14001326b:	push   rdi
   14001326c:	sub    rsp,0x30
   140013270:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140013278:	mov    QWORD PTR [rax+0x10],rbx
   14001327c:	mov    QWORD PTR [rax+0x18],rsi
   140013280:	mov    rdi,rdx
   140013283:	mov    rsi,rcx
   140013286:	mov    BYTE PTR [rcx+0x18],0x1
   14001328a:	mov    rdx,r8
   14001328d:	lea    rcx,[rax+0x20]
   140013291:	call   0x140006b8c
   140013296:	mov    rbx,rax
   140013299:	mov    rdx,rdi
   14001329c:	lea    rcx,[rsp+0x40]
   1400132a1:	call   0x140006b8c
   1400132a6:	nop
   1400132a7:	lea    rcx,[rsi+0x20]
   1400132ab:	mov    r8,QWORD PTR [rbx]
   1400132ae:	mov    rdx,QWORD PTR [rax]
   1400132b1:	call   0x140013818
   1400132b6:	nop
   1400132b7:	mov    rdx,QWORD PTR [rsp+0x40]
   1400132bc:	add    rdx,0xffffffffffffffe8
   1400132c0:	or     ebx,0xffffffff
   1400132c3:	mov    eax,ebx
   1400132c5:	lock xadd DWORD PTR [rdx+0x10],eax
   1400132ca:	add    eax,ebx
   1400132cc:	test   eax,eax
   1400132ce:	jg     0x1400132da
   1400132d0:	mov    rcx,QWORD PTR [rdx]
   1400132d3:	mov    rax,QWORD PTR [rcx]
   1400132d6:	call   QWORD PTR [rax+0x8]
   1400132d9:	nop
   1400132da:	mov    rdx,QWORD PTR [rsp+0x58]
   1400132df:	add    rdx,0xffffffffffffffe8
   1400132e3:	mov    eax,ebx
   1400132e5:	lock xadd DWORD PTR [rdx+0x10],eax
   1400132ea:	add    eax,ebx
   1400132ec:	test   eax,eax
   1400132ee:	jg     0x1400132f9
   1400132f0:	mov    rcx,QWORD PTR [rdx]
   1400132f3:	mov    rax,QWORD PTR [rcx]
   1400132f6:	call   QWORD PTR [rax+0x8]
   1400132f9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400132fe:	mov    rsi,QWORD PTR [rsp+0x50]
   140013303:	add    rsp,0x30
   140013307:	pop    rdi
   140013308:	ret    
   140013309:	int3   
   14001330a:	int3   
   14001330b:	int3   
   14001330c:	rex push rsi
   14001330e:	push   rdi
   14001330f:	push   r14
   140013311:	sub    rsp,0x30
   140013315:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001331e:	mov    QWORD PTR [rsp+0x68],rbx
   140013323:	mov    rsi,rcx
   140013326:	mov    BYTE PTR [rcx+0x18],0x1
   14001332a:	lea    rdi,[rdx+0x20]
   14001332e:	cmp    QWORD PTR [rdi+0x8],0x0
   140013333:	je     0x140013355
   140013335:	xor    ecx,ecx
   140013337:	cmp    DWORD PTR [rdi+0x10],ecx
   14001333a:	jbe    0x140013355
   14001333c:	mov    rdx,QWORD PTR [rdi]
   14001333f:	cmp    QWORD PTR [rdx+rcx*8],0x0
   140013344:	jne    0x14001334f
   140013346:	inc    ecx
   140013348:	cmp    ecx,DWORD PTR [rdi+0x10]
   14001334b:	jb     0x14001333f
   14001334d:	jmp    0x140013355
   14001334f:	mov    rax,QWORD PTR [rdx+rcx*8]
   140013353:	jmp    0x140013357
   140013355:	xor    eax,eax
   140013357:	mov    QWORD PTR [rsp+0x60],rax
   14001335c:	test   rax,rax
   14001335f:	je     0x14001343f
   140013365:	or     r14d,0xffffffff
   140013369:	lea    rcx,[rip+0x46fb8]        # 0x14005a328
   140013370:	mov    rax,QWORD PTR [rip+0x46fb1]        # 0x14005a328
   140013377:	call   QWORD PTR [rax+0x18]
   14001337a:	add    rax,0x18
   14001337e:	mov    QWORD PTR [rsp+0x50],rax
   140013383:	lea    rcx,[rip+0x46f9e]        # 0x14005a328
   14001338a:	mov    rax,QWORD PTR [rip+0x46f97]        # 0x14005a328
   140013391:	call   QWORD PTR [rax+0x18]
   140013394:	add    rax,0x18
   140013398:	mov    QWORD PTR [rsp+0x58],rax
   14001339d:	lea    r9,[rsp+0x58]
   1400133a2:	lea    r8,[rsp+0x50]
   1400133a7:	lea    rdx,[rsp+0x60]
   1400133ac:	mov    rcx,rdi
   1400133af:	call   0x140013908
   1400133b4:	mov    rdx,QWORD PTR [rsp+0x50]
   1400133b9:	mov    rbx,QWORD PTR [rsp+0x58]
   1400133be:	cmp    DWORD PTR [rdx-0x10],0x0
   1400133c2:	je     0x1400133f5
   1400133c4:	cmp    DWORD PTR [rbx-0x10],0x0
   1400133c8:	je     0x1400133f5
   1400133ca:	mov    r8,rbx
   1400133cd:	mov    rcx,rsi
   1400133d0:	call   0x140013268
   1400133d5:	nop
   1400133d6:	lea    rdx,[rbx-0x18]
   1400133da:	mov    eax,r14d
   1400133dd:	lock xadd DWORD PTR [rdx+0x10],eax
   1400133e2:	add    eax,r14d
   1400133e5:	test   eax,eax
   1400133e7:	jg     0x1400133f3
   1400133e9:	mov    rcx,QWORD PTR [rdx]
   1400133ec:	mov    rax,QWORD PTR [rcx]
   1400133ef:	call   QWORD PTR [rax+0x8]
   1400133f2:	nop
   1400133f3:	jmp    0x140013412
   1400133f5:	lea    rdx,[rbx-0x18]
   1400133f9:	mov    eax,r14d
   1400133fc:	lock xadd DWORD PTR [rdx+0x10],eax
   140013401:	add    eax,r14d
   140013404:	test   eax,eax
   140013406:	jg     0x140013412
   140013408:	mov    rcx,QWORD PTR [rdx]
   14001340b:	mov    rax,QWORD PTR [rcx]
   14001340e:	call   QWORD PTR [rax+0x8]
   140013411:	nop
   140013412:	mov    rdx,QWORD PTR [rsp+0x50]
   140013417:	add    rdx,0xffffffffffffffe8
   14001341b:	mov    eax,r14d
   14001341e:	lock xadd DWORD PTR [rdx+0x10],eax
   140013423:	add    eax,r14d
   140013426:	test   eax,eax
   140013428:	jg     0x140013433
   14001342a:	mov    rcx,QWORD PTR [rdx]
   14001342d:	mov    rax,QWORD PTR [rcx]
   140013430:	call   QWORD PTR [rax+0x8]
   140013433:	cmp    QWORD PTR [rsp+0x60],0x0
   140013439:	jne    0x140013369
   14001343f:	mov    rbx,QWORD PTR [rsp+0x68]
   140013444:	add    rsp,0x30
   140013448:	pop    r14
   14001344a:	pop    rdi
   14001344b:	pop    rsi
   14001344c:	ret    
   14001344d:	int3   
   14001344e:	int3   
   14001344f:	int3   
   140013450:	rex push rbp
   140013452:	push   rbx
   140013453:	push   rsi
   140013454:	push   rdi
   140013455:	push   r12
   140013457:	push   r13
   140013459:	push   r14
   14001345b:	push   r15
   14001345d:	mov    rbp,rsp
   140013460:	sub    rsp,0x48
   140013464:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   14001346c:	mov    rsi,rcx
   14001346f:	xor    r12d,r12d
   140013472:	mov    rax,QWORD PTR [rcx]
   140013475:	cmp    BYTE PTR [rcx+0x18],r12b
   140013479:	je     0x14001374c
   14001347f:	mov    QWORD PTR [rcx+0x8],rax
   140013483:	lea    r14,[rcx+0x20]
   140013487:	cmp    QWORD PTR [r14+0x8],r12
   14001348b:	je     0x1400134b3
   14001348d:	mov    ecx,r12d
   140013490:	cmp    DWORD PTR [r14+0x10],r12d
   140013494:	jbe    0x1400134b3
   140013496:	mov    rdx,QWORD PTR [r14]
   140013499:	mov    eax,ecx
   14001349b:	cmp    QWORD PTR [rdx+rax*8],r12
   14001349f:	jne    0x1400134ab
   1400134a1:	inc    ecx
   1400134a3:	cmp    ecx,DWORD PTR [r14+0x10]
   1400134a7:	jb     0x140013499
   1400134a9:	jmp    0x1400134b3
   1400134ab:	mov    eax,ecx
   1400134ad:	mov    rax,QWORD PTR [rdx+rax*8]
   1400134b1:	jmp    0x1400134b6
   1400134b3:	mov    rax,r12
   1400134b6:	mov    QWORD PTR [rbp+0x48],rax
   1400134ba:	mov    rbx,r12
   1400134bd:	test   rax,rax
   1400134c0:	je     0x14001374a
   1400134c6:	or     r13d,0xffffffff
   1400134ca:	lea    rcx,[rip+0x46e57]        # 0x14005a328
   1400134d1:	mov    rax,QWORD PTR [rip+0x46e50]        # 0x14005a328
   1400134d8:	call   QWORD PTR [rax+0x18]
   1400134db:	add    rax,0x18
   1400134df:	mov    QWORD PTR [rbp+0x50],rax
   1400134e3:	lea    rcx,[rip+0x46e3e]        # 0x14005a328
   1400134ea:	mov    rax,QWORD PTR [rip+0x46e37]        # 0x14005a328
   1400134f1:	call   QWORD PTR [rax+0x18]
   1400134f4:	add    rax,0x18
   1400134f8:	mov    QWORD PTR [rbp-0x28],rax
   1400134fc:	lea    r9,[rbp-0x28]
   140013500:	lea    r8,[rbp+0x50]
   140013504:	lea    rdx,[rbp+0x48]
   140013508:	mov    rcx,r14
   14001350b:	call   0x140013908
   140013510:	mov    rax,QWORD PTR [rbp+0x50]
   140013514:	mov    edx,DWORD PTR [rax-0x10]
   140013517:	mov    rax,QWORD PTR [rbp-0x28]
   14001351b:	test   edx,edx
   14001351d:	je     0x140013550
   14001351f:	mov    ecx,DWORD PTR [rax-0x10]
   140013522:	test   ecx,ecx
   140013524:	je     0x140013550
   140013526:	add    edx,0x2
   140013529:	add    ecx,edx
   14001352b:	movsxd rdx,ecx
   14001352e:	add    rbx,rdx
   140013531:	lea    rdx,[rax-0x18]
   140013535:	mov    eax,r13d
   140013538:	lock xadd DWORD PTR [rdx+0x10],eax
   14001353d:	add    eax,r13d
   140013540:	test   eax,eax
   140013542:	jg     0x14001354e
   140013544:	mov    rcx,QWORD PTR [rdx]
   140013547:	mov    rax,QWORD PTR [rcx]
   14001354a:	call   QWORD PTR [rax+0x8]
   14001354d:	nop
   14001354e:	jmp    0x14001356d
   140013550:	lea    rdx,[rax-0x18]
   140013554:	mov    eax,r13d
   140013557:	lock xadd DWORD PTR [rdx+0x10],eax
   14001355c:	add    eax,r13d
   14001355f:	test   eax,eax
   140013561:	jg     0x14001356d
   140013563:	mov    rcx,QWORD PTR [rdx]
   140013566:	mov    rax,QWORD PTR [rcx]
   140013569:	call   QWORD PTR [rax+0x8]
   14001356c:	nop
   14001356d:	mov    rdx,QWORD PTR [rbp+0x50]
   140013571:	add    rdx,0xffffffffffffffe8
   140013575:	mov    eax,r13d
   140013578:	lock xadd DWORD PTR [rdx+0x10],eax
   14001357d:	add    eax,r13d
   140013580:	test   eax,eax
   140013582:	jg     0x14001358d
   140013584:	mov    rcx,QWORD PTR [rdx]
   140013587:	mov    rax,QWORD PTR [rcx]
   14001358a:	call   QWORD PTR [rax+0x8]
   14001358d:	cmp    QWORD PTR [rbp+0x48],r12
   140013591:	jne    0x1400134ca
   140013597:	test   rbx,rbx
   14001359a:	je     0x14001374a
   1400135a0:	inc    rbx
   1400135a3:	mov    rdx,rbx
   1400135a6:	mov    rcx,rsi
   1400135a9:	call   0x14000337c
   1400135ae:	lea    r8,[rbx+rbx*1]
   1400135b2:	xor    edx,edx
   1400135b4:	mov    rcx,QWORD PTR [rsi]
   1400135b7:	call   0x14002bb90
   1400135bc:	cmp    QWORD PTR [r14+0x8],r12
   1400135c0:	je     0x1400135e8
   1400135c2:	mov    ecx,r12d
   1400135c5:	cmp    DWORD PTR [r14+0x10],r12d
   1400135c9:	jbe    0x1400135e8
   1400135cb:	mov    rdx,QWORD PTR [r14]
   1400135ce:	mov    eax,ecx
   1400135d0:	cmp    QWORD PTR [rdx+rax*8],r12
   1400135d4:	jne    0x1400135e0
   1400135d6:	inc    ecx
   1400135d8:	cmp    ecx,DWORD PTR [r14+0x10]
   1400135dc:	jb     0x1400135ce
   1400135de:	jmp    0x1400135e8
   1400135e0:	mov    eax,ecx
   1400135e2:	mov    rax,QWORD PTR [rdx+rax*8]
   1400135e6:	jmp    0x1400135eb
   1400135e8:	mov    rax,r12
   1400135eb:	mov    QWORD PTR [rbp+0x48],rax
   1400135ef:	mov    r15,r12
   1400135f2:	test   rax,rax
   1400135f5:	je     0x140013739
   1400135fb:	lea    rcx,[rip+0x46d26]        # 0x14005a328
   140013602:	mov    rax,QWORD PTR [rip+0x46d1f]        # 0x14005a328
   140013609:	call   QWORD PTR [rax+0x18]
   14001360c:	add    rax,0x18
   140013610:	mov    QWORD PTR [rbp+0x58],rax
   140013614:	lea    rcx,[rip+0x46d0d]        # 0x14005a328
   14001361b:	mov    rax,QWORD PTR [rip+0x46d06]        # 0x14005a328
   140013622:	call   QWORD PTR [rax+0x18]
   140013625:	add    rax,0x18
   140013629:	mov    QWORD PTR [rbp+0x60],rax
   14001362d:	lea    r9,[rbp+0x60]
   140013631:	lea    r8,[rbp+0x58]
   140013635:	lea    rdx,[rbp+0x48]
   140013639:	mov    rcx,r14
   14001363c:	call   0x140013908
   140013641:	mov    rdi,QWORD PTR [rbp+0x58]
   140013645:	mov    rbx,QWORD PTR [rbp+0x60]
   140013649:	cmp    DWORD PTR [rdi-0x10],r12d
   14001364d:	je     0x1400136f2
   140013653:	cmp    DWORD PTR [rbx-0x10],r12d
   140013657:	je     0x1400136f2
   14001365d:	lea    rcx,[rip+0x46cc4]        # 0x14005a328
   140013664:	mov    rax,QWORD PTR [rip+0x46cbd]        # 0x14005a328
   14001366b:	call   QWORD PTR [rax+0x18]
   14001366e:	add    rax,0x18
   140013672:	mov    QWORD PTR [rbp-0x20],rax
   140013676:	mov    r9,rbx
   140013679:	mov    r8,rdi
   14001367c:	lea    rdx,[rip+0x32dd5]        # 0x140046458
   140013683:	lea    rcx,[rbp-0x20]
   140013687:	call   0x14000de30
   14001368c:	mov    rbx,QWORD PTR [rbp-0x20]
   140013690:	movsxd rdi,DWORD PTR [rbx-0x10]
   140013694:	mov    r8,rdi
   140013697:	add    r8,r8
   14001369a:	mov    rax,QWORD PTR [rsi]
   14001369d:	lea    rcx,[rax+r15*2]
   1400136a1:	mov    rdx,rbx
   1400136a4:	call   0x1400265d0
   1400136a9:	lea    eax,[rdi+0x1]
   1400136ac:	movsxd rcx,eax
   1400136af:	add    r15,rcx
   1400136b2:	lea    rdx,[rbx-0x18]
   1400136b6:	mov    eax,r13d
   1400136b9:	lock xadd DWORD PTR [rdx+0x10],eax
   1400136be:	add    eax,r13d
   1400136c1:	test   eax,eax
   1400136c3:	jg     0x1400136cf
   1400136c5:	mov    rcx,QWORD PTR [rdx]
   1400136c8:	mov    rax,QWORD PTR [rcx]
   1400136cb:	call   QWORD PTR [rax+0x8]
   1400136ce:	nop
   1400136cf:	mov    rdx,QWORD PTR [rbp+0x60]
   1400136d3:	add    rdx,0xffffffffffffffe8
   1400136d7:	mov    eax,r13d
   1400136da:	lock xadd DWORD PTR [rdx+0x10],eax
   1400136df:	add    eax,r13d
   1400136e2:	test   eax,eax
   1400136e4:	jg     0x1400136f0
   1400136e6:	mov    rcx,QWORD PTR [rdx]
   1400136e9:	mov    rax,QWORD PTR [rcx]
   1400136ec:	call   QWORD PTR [rax+0x8]
   1400136ef:	nop
   1400136f0:	jmp    0x14001370f
   1400136f2:	lea    rdx,[rbx-0x18]
   1400136f6:	mov    eax,r13d
   1400136f9:	lock xadd DWORD PTR [rdx+0x10],eax
   1400136fe:	add    eax,r13d
   140013701:	test   eax,eax
   140013703:	jg     0x14001370f
   140013705:	mov    rcx,QWORD PTR [rdx]
   140013708:	mov    rax,QWORD PTR [rcx]
   14001370b:	call   QWORD PTR [rax+0x8]
   14001370e:	nop
   14001370f:	mov    rdx,QWORD PTR [rbp+0x58]
   140013713:	add    rdx,0xffffffffffffffe8
   140013717:	mov    eax,r13d
   14001371a:	lock xadd DWORD PTR [rdx+0x10],eax
   14001371f:	add    eax,r13d
   140013722:	test   eax,eax
   140013724:	jg     0x14001372f
   140013726:	mov    rcx,QWORD PTR [rdx]
   140013729:	mov    rax,QWORD PTR [rcx]
   14001372c:	call   QWORD PTR [rax+0x8]
   14001372f:	cmp    QWORD PTR [rbp+0x48],r12
   140013733:	jne    0x1400135fb
   140013739:	mov    rax,QWORD PTR [rsi]
   14001373c:	mov    WORD PTR [rax+r15*2],r12w
   140013741:	mov    BYTE PTR [rsi+0x18],r12b
   140013745:	mov    rax,QWORD PTR [rsi]
   140013748:	jmp    0x14001374c
   14001374a:	xor    eax,eax
   14001374c:	add    rsp,0x48
   140013750:	pop    r15
   140013752:	pop    r14
   140013754:	pop    r13
   140013756:	pop    r12
   140013758:	pop    rdi
   140013759:	pop    rsi
   14001375a:	pop    rbx
   14001375b:	pop    rbp
   14001375c:	ret    
   14001375d:	int3   
   14001375e:	int3   
   14001375f:	int3   
   140013760:	mov    rax,rsp
   140013763:	mov    QWORD PTR [rax+0x10],rdx
   140013767:	push   rsi
   140013768:	push   rdi
   140013769:	push   r14
   14001376b:	sub    rsp,0x30
   14001376f:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   140013777:	mov    QWORD PTR [rax+0x8],rbx
   14001377b:	mov    QWORD PTR [rax+0x18],rbp
   14001377f:	mov    edi,r8d
   140013782:	mov    rbx,rdx
   140013785:	mov    rsi,rcx
   140013788:	xor    r14d,r14d
   14001378b:	mov    DWORD PTR [rax-0x28],r14d
   14001378f:	test   r8d,r8d
   140013792:	cmovs  edi,r14d
   140013796:	mov    rcx,QWORD PTR [rcx]
   140013799:	movsxd rbp,DWORD PTR [rcx-0x10]
   14001379d:	cmp    edi,ebp
   14001379f:	jl     0x1400137ae
   1400137a1:	mov    rdx,rsi
   1400137a4:	mov    rcx,rbx
   1400137a7:	call   0x140006af0
   1400137ac:	jmp    0x1400137f7
   1400137ae:	mov    rcx,QWORD PTR [rcx-0x18]
   1400137b2:	test   rcx,rcx
   1400137b5:	je     0x1400137bf
   1400137b7:	mov    rax,QWORD PTR [rcx]
   1400137ba:	call   QWORD PTR [rax+0x20]
   1400137bd:	jmp    0x1400137c2
   1400137bf:	mov    rax,r14
   1400137c2:	test   rax,rax
   1400137c5:	jne    0x1400137d8
   1400137c7:	lea    rcx,[rip+0x46b5a]        # 0x14005a328
   1400137ce:	mov    rax,QWORD PTR [rip+0x46b53]        # 0x14005a328
   1400137d5:	call   QWORD PTR [rax+0x20]
   1400137d8:	mov    r9,QWORD PTR [rsi]
   1400137db:	mov    rdx,rbp
   1400137de:	movsxd rcx,edi
   1400137e1:	sub    rdx,rcx
   1400137e4:	lea    rdx,[r9+rdx*2]
   1400137e8:	mov    r9,rax
   1400137eb:	mov    r8d,edi
   1400137ee:	mov    rcx,rbx
   1400137f1:	call   0x14000db0c
   1400137f6:	nop
   1400137f7:	mov    DWORD PTR [rsp+0x20],0x1
   1400137ff:	mov    rax,rbx
   140013802:	mov    rbx,QWORD PTR [rsp+0x50]
   140013807:	mov    rbp,QWORD PTR [rsp+0x60]
   14001380c:	add    rsp,0x30
   140013810:	pop    r14
   140013812:	pop    rdi
   140013813:	pop    rsi
   140013814:	ret    
   140013815:	int3   
   140013816:	int3   
   140013817:	int3   
   140013818:	mov    r11,rsp
   14001381b:	mov    QWORD PTR [r11+0x8],rcx
   14001381f:	push   rdi
   140013820:	push   r14
   140013822:	push   r15
   140013824:	sub    rsp,0x50
   140013828:	mov    QWORD PTR [r11-0x30],0xfffffffffffffffe
   140013830:	mov    QWORD PTR [r11+0x10],rbx
   140013834:	mov    QWORD PTR [r11+0x18],rsi
   140013838:	mov    rdi,r8
   14001383b:	mov    r15,rdx
   14001383e:	mov    r14,rcx
   140013841:	lea    rax,[r11-0x28]
   140013845:	mov    QWORD PTR [r11-0x48],rax
   140013849:	lea    r9,[r11+0x20]
   14001384d:	lea    r8,[r11-0x38]
   140013851:	call   0x140013a38
   140013856:	mov    rsi,rax
   140013859:	xor    ebx,ebx
   14001385b:	test   rax,rax
   14001385e:	jne    0x1400138cc
   140013860:	cmp    QWORD PTR [r14],rbx
   140013863:	jne    0x140013883
   140013865:	mov    r8b,0x1
   140013868:	mov    edx,DWORD PTR [r14+0x10]
   14001386c:	mov    rcx,r14
   14001386f:	call   0x140013af8
   140013874:	test   al,al
   140013876:	jne    0x140013883
   140013878:	mov    ecx,0x8007000e
   14001387d:	call   0x14000400c
   140013882:	int3   
   140013883:	mov    r9d,DWORD PTR [rsp+0x88]
   14001388b:	mov    r8d,DWORD PTR [rsp+0x30]
   140013890:	mov    rdx,r15
   140013893:	mov    rcx,r14
   140013896:	call   0x140013d18
   14001389b:	mov    rsi,rax
   14001389e:	mov    QWORD PTR [rsp+0x88],rax
   1400138a6:	lea    rcx,[rax+0x8]
   1400138aa:	test   rdi,rdi
   1400138ad:	je     0x1400138be
   1400138af:	or     rax,0xffffffffffffffff
   1400138b3:	inc    rax
   1400138b6:	cmp    WORD PTR [rdi+rax*2],bx
   1400138ba:	jne    0x1400138b3
   1400138bc:	mov    ebx,eax
   1400138be:	mov    r8d,ebx
   1400138c1:	mov    rdx,rdi
   1400138c4:	call   0x140006f54
   1400138c9:	nop
   1400138ca:	jmp    0x1400138ef
   1400138cc:	lea    rcx,[rax+0x8]
   1400138d0:	test   rdi,rdi
   1400138d3:	je     0x1400138e4
   1400138d5:	or     rax,0xffffffffffffffff
   1400138d9:	inc    rax
   1400138dc:	cmp    WORD PTR [rdi+rax*2],bx
   1400138e0:	jne    0x1400138d9
   1400138e2:	mov    ebx,eax
   1400138e4:	mov    r8d,ebx
   1400138e7:	mov    rdx,rdi
   1400138ea:	call   0x140006f54
   1400138ef:	mov    rax,rsi
   1400138f2:	lea    r11,[rsp+0x50]
   1400138f7:	mov    rbx,QWORD PTR [r11+0x28]
   1400138fb:	mov    rsi,QWORD PTR [r11+0x30]
   1400138ff:	mov    rsp,r11
   140013902:	pop    r15
   140013904:	pop    r14
   140013906:	pop    rdi
   140013907:	ret    
   140013908:	mov    QWORD PTR [rsp+0x8],rbx
   14001390d:	push   rdi
   14001390e:	sub    rsp,0x20
   140013912:	mov    rbx,QWORD PTR [rdx]
   140013915:	mov    rdi,r9
   140013918:	mov    r10,rdx
   14001391b:	mov    r9,r8
   14001391e:	test   rbx,rbx
   140013921:	je     0x140013973
   140013923:	mov    r8,QWORD PTR [rbx+0x10]
   140013927:	test   r8,r8
   14001392a:	jne    0x14001394f
   14001392c:	mov    eax,DWORD PTR [rbx+0x18]
   14001392f:	xor    edx,edx
   140013931:	div    DWORD PTR [rcx+0x10]
   140013934:	inc    edx
   140013936:	cmp    edx,DWORD PTR [rcx+0x10]
   140013939:	jae    0x14001394f
   14001393b:	mov    rax,QWORD PTR [rcx]
   14001393e:	cmp    QWORD PTR [rax+rdx*8],0x0
   140013943:	cmovne r8,QWORD PTR [rax+rdx*8]
   140013948:	inc    edx
   14001394a:	test   r8,r8
   14001394d:	je     0x140013936
   14001394f:	mov    rdx,rbx
   140013952:	mov    rcx,r9
   140013955:	mov    QWORD PTR [r10],r8
   140013958:	call   0x14000cdac
   14001395d:	lea    rdx,[rbx+0x8]
   140013961:	mov    rcx,rdi
   140013964:	mov    rbx,QWORD PTR [rsp+0x30]
   140013969:	add    rsp,0x20
   14001396d:	pop    rdi
   14001396e:	jmp    0x14000cdac
   140013973:	mov    ecx,0x80004005
   140013978:	call   0x14000400c
   14001397d:	int3   
   14001397e:	int3   
   14001397f:	int3   
   140013980:	rex push rdi
   140013982:	sub    rsp,0x30
   140013986:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001398f:	mov    QWORD PTR [rsp+0x40],rbx
   140013994:	mov    QWORD PTR [rsp+0x48],rsi
   140013999:	mov    rdi,rcx
   14001399c:	inc    DWORD PTR [rcx+0x30]
   14001399f:	cmp    QWORD PTR [rcx],0x0
   1400139a3:	je     0x1400139d1
   1400139a5:	xor    ebx,ebx
   1400139a7:	mov    DWORD PTR [rsp+0x20],ebx
   1400139ab:	cmp    ebx,DWORD PTR [rdi+0x10]
   1400139ae:	jae    0x1400139d1
   1400139b0:	mov    rax,QWORD PTR [rdi]
   1400139b3:	mov    rsi,QWORD PTR [rax+rbx*8]
   1400139b7:	test   rsi,rsi
   1400139ba:	je     0x1400139cd
   1400139bc:	mov    rdx,rsi
   1400139bf:	mov    rsi,QWORD PTR [rsi+0x10]
   1400139c3:	mov    rcx,rdi
   1400139c6:	call   0x140013e88
   1400139cb:	jmp    0x1400139b7
   1400139cd:	inc    ebx
   1400139cf:	jmp    0x1400139a7
   1400139d1:	mov    rcx,QWORD PTR [rdi]
   1400139d4:	call   0x140026c1c
   1400139d9:	and    QWORD PTR [rdi],0x0
   1400139dd:	and    QWORD PTR [rdi+0x8],0x0
   1400139e2:	cmp    DWORD PTR [rdi+0x30],0x0
   1400139e6:	jne    0x1400139fd
   1400139e8:	xor    edx,edx
   1400139ea:	mov    rcx,rdi
   1400139ed:	call   0x140013c98
   1400139f2:	mov    DWORD PTR [rdi+0x10],eax
   1400139f5:	mov    rcx,rdi
   1400139f8:	call   0x140013f60
   1400139fd:	and    QWORD PTR [rdi+0x40],0x0
   140013a02:	mov    rcx,QWORD PTR [rdi+0x38]
   140013a06:	test   rcx,rcx
   140013a09:	je     0x140013a22
   140013a0b:	test   rcx,rcx
   140013a0e:	je     0x140013a1d
   140013a10:	mov    rbx,QWORD PTR [rcx]
   140013a13:	call   0x1400273dc
   140013a18:	mov    rcx,rbx
   140013a1b:	jmp    0x140013a0b
   140013a1d:	and    QWORD PTR [rdi+0x38],0x0
   140013a22:	dec    DWORD PTR [rdi+0x30]
   140013a25:	mov    rbx,QWORD PTR [rsp+0x40]
   140013a2a:	mov    rsi,QWORD PTR [rsp+0x48]
   140013a2f:	add    rsp,0x30
   140013a33:	pop    rdi
   140013a34:	ret    
   140013a35:	int3   
   140013a36:	int3   
   140013a37:	int3   
   140013a38:	mov    QWORD PTR [rsp+0x8],rbx
   140013a3d:	mov    QWORD PTR [rsp+0x10],rsi
   140013a42:	push   rdi
   140013a43:	sub    rsp,0x20
   140013a47:	xor    esi,esi
   140013a49:	mov    r10,rdx
   140013a4c:	mov    r11,rcx
   140013a4f:	test   rdx,rdx
   140013a52:	je     0x140013aea
   140013a58:	mov    eax,esi
   140013a5a:	jmp    0x140013a68
   140013a5c:	imul   eax,eax,0x21
   140013a5f:	movzx  ecx,cx
   140013a62:	lea    rdx,[rdx+0x2]
   140013a66:	add    eax,ecx
   140013a68:	movzx  ecx,WORD PTR [rdx]
   140013a6b:	test   cx,cx
   140013a6e:	jne    0x140013a5c
   140013a70:	mov    DWORD PTR [r9],eax
   140013a73:	xor    edx,edx
   140013a75:	div    DWORD PTR [r11+0x10]
   140013a79:	mov    DWORD PTR [r8],edx
   140013a7c:	cmp    QWORD PTR [r11],rsi
   140013a7f:	je     0x140013ad3
   140013a81:	mov    rdi,QWORD PTR [rsp+0x50]
   140013a86:	mov    rbx,rsi
   140013a89:	mov    QWORD PTR [rdi],rsi
   140013a8c:	mov    ecx,DWORD PTR [r8]
   140013a8f:	mov    rax,QWORD PTR [r11]
   140013a92:	mov    rax,QWORD PTR [rax+rcx*8]
   140013a96:	test   rax,rax
   140013a99:	je     0x140013ad3
   140013a9b:	mov    r11d,DWORD PTR [r9]
   140013a9e:	cmp    DWORD PTR [rax+0x18],r11d
   140013aa2:	jne    0x140013ac7
   140013aa4:	mov    rcx,QWORD PTR [rax]
   140013aa7:	mov    r8,r10
   140013aaa:	sub    r8,rcx
   140013aad:	movzx  edx,WORD PTR [rcx]
   140013ab0:	movzx  r9d,WORD PTR [rcx+r8*1]
   140013ab5:	sub    edx,r9d
   140013ab8:	jne    0x140013ac3
   140013aba:	add    rcx,0x2
   140013abe:	test   r9d,r9d
   140013ac1:	jne    0x140013aad
   140013ac3:	test   edx,edx
   140013ac5:	je     0x140013ae5
   140013ac7:	mov    rbx,rax
   140013aca:	mov    rax,QWORD PTR [rax+0x10]
   140013ace:	test   rax,rax
   140013ad1:	jne    0x140013a9e
   140013ad3:	xor    eax,eax
   140013ad5:	mov    rbx,QWORD PTR [rsp+0x30]
   140013ada:	mov    rsi,QWORD PTR [rsp+0x38]
   140013adf:	add    rsp,0x20
   140013ae3:	pop    rdi
   140013ae4:	ret    
   140013ae5:	mov    QWORD PTR [rdi],rbx
   140013ae8:	jmp    0x140013ad5
   140013aea:	mov    ecx,0x80004005
   140013aef:	call   0x14000400c
   140013af4:	int3   
   140013af5:	int3   
   140013af6:	int3   
   140013af7:	int3   
   140013af8:	mov    QWORD PTR [rsp+0x8],rbx
   140013afd:	mov    QWORD PTR [rsp+0x10],rsi
   140013b02:	push   rdi
   140013b03:	sub    rsp,0x20
   140013b07:	mov    rbx,rcx
   140013b0a:	mov    rcx,QWORD PTR [rcx]
   140013b0d:	mov    sil,r8b
   140013b10:	mov    edi,edx
   140013b12:	test   rcx,rcx
   140013b15:	je     0x140013b20
   140013b17:	call   0x140026c1c
   140013b1c:	and    QWORD PTR [rbx],0x0
   140013b20:	test   sil,sil
   140013b23:	je     0x140013b68
   140013b25:	mov    rcx,0xffffffffffffffff
   140013b2c:	mov    eax,0x8
   140013b31:	mul    rdi
   140013b34:	lea    rdx,[rip+0x48f0d]        # 0x14005ca48
   140013b3b:	cmovo  rax,rcx
   140013b3f:	mov    rcx,rax
   140013b42:	call   0x140033cc0
   140013b47:	mov    QWORD PTR [rbx],rax
   140013b4a:	test   rax,rax
   140013b4d:	je     0x140013b75
   140013b4f:	cmp    edi,0x1fffffff
   140013b55:	ja     0x140013b85
   140013b57:	mov    r8,rdi
   140013b5a:	xor    edx,edx
   140013b5c:	mov    rcx,rax
   140013b5f:	shl    r8,0x3
   140013b63:	call   0x14002bb90
   140013b68:	mov    rcx,rbx
   140013b6b:	mov    DWORD PTR [rbx+0x10],edi
   140013b6e:	call   0x140013f60
   140013b73:	mov    al,0x1
   140013b75:	mov    rbx,QWORD PTR [rsp+0x30]
   140013b7a:	mov    rsi,QWORD PTR [rsp+0x38]
   140013b7f:	add    rsp,0x20
   140013b83:	pop    rdi
   140013b84:	ret    
   140013b85:	mov    ecx,0x80004005
   140013b8a:	call   0x14000400c
   140013b8f:	int3   
   140013b90:	mov    QWORD PTR [rsp+0x8],rbx
   140013b95:	mov    QWORD PTR [rsp+0x10],rbp
   140013b9a:	mov    QWORD PTR [rsp+0x18],rsi
   140013b9f:	push   rdi
   140013ba0:	sub    rsp,0x20
   140013ba4:	mov    edi,edx
   140013ba6:	mov    rbx,rcx
   140013ba9:	test   edx,edx
   140013bab:	jne    0x140013bb8
   140013bad:	mov    rdx,QWORD PTR [rcx+0x8]
   140013bb1:	call   0x140013c98
   140013bb6:	mov    edi,eax
   140013bb8:	cmp    edi,DWORD PTR [rbx+0x10]
   140013bbb:	je     0x140013c6c
   140013bc1:	cmp    QWORD PTR [rbx],0x0
   140013bc5:	je     0x140013c61
   140013bcb:	mov    rcx,0xffffffffffffffff
   140013bd2:	mov    ebp,edi
   140013bd4:	mov    eax,0x8
   140013bd9:	mul    rbp
   140013bdc:	lea    rdx,[rip+0x48e65]        # 0x14005ca48
   140013be3:	cmovo  rax,rcx
   140013be7:	mov    rcx,rax
   140013bea:	call   0x140033cc0
   140013bef:	mov    rsi,rax
   140013bf2:	test   rax,rax
   140013bf5:	je     0x140013c81
   140013bfb:	cmp    edi,0x1fffffff
   140013c01:	ja     0x140013c8c
   140013c07:	mov    r8d,ebp
   140013c0a:	xor    edx,edx
   140013c0c:	mov    rcx,rax
   140013c0f:	shl    r8,0x3
   140013c13:	call   0x14002bb90
   140013c18:	xor    r9d,r9d
   140013c1b:	cmp    DWORD PTR [rbx+0x10],r9d
   140013c1f:	jbe    0x140013c56
   140013c21:	mov    rax,QWORD PTR [rbx]
   140013c24:	mov    r10,QWORD PTR [rax+r9*8]
   140013c28:	test   r10,r10
   140013c2b:	je     0x140013c4d
   140013c2d:	mov    eax,DWORD PTR [r10+0x18]
   140013c31:	mov    r8,QWORD PTR [r10+0x10]
   140013c35:	xor    edx,edx
   140013c37:	div    edi
   140013c39:	mov    rax,QWORD PTR [rsi+rdx*8]
   140013c3d:	mov    QWORD PTR [r10+0x10],rax
   140013c41:	mov    QWORD PTR [rsi+rdx*8],r10
   140013c45:	mov    r10,r8
   140013c48:	test   r8,r8
   140013c4b:	jne    0x140013c2d
   140013c4d:	inc    r9d
   140013c50:	cmp    r9d,DWORD PTR [rbx+0x10]
   140013c54:	jb     0x140013c21
   140013c56:	mov    rcx,QWORD PTR [rbx]
   140013c59:	call   0x140026c1c
   140013c5e:	mov    QWORD PTR [rbx],rsi
   140013c61:	mov    rcx,rbx
   140013c64:	mov    DWORD PTR [rbx+0x10],edi
   140013c67:	call   0x140013f60
   140013c6c:	mov    rbx,QWORD PTR [rsp+0x30]
   140013c71:	mov    rbp,QWORD PTR [rsp+0x38]
   140013c76:	mov    rsi,QWORD PTR [rsp+0x40]
   140013c7b:	add    rsp,0x20
   140013c7f:	pop    rdi
   140013c80:	ret    
   140013c81:	mov    ecx,0x8007000e
   140013c86:	call   0x14000400c
   140013c8b:	int3   
   140013c8c:	mov    ecx,0x80004005
   140013c91:	call   0x14000400c
   140013c96:	int3   
   140013c97:	int3   
   140013c98:	xorps  xmm0,xmm0
   140013c9b:	cvtsi2ss xmm0,rdx
   140013ca0:	test   rdx,rdx
   140013ca3:	jns    0x140013cad
   140013ca5:	addss  xmm0,DWORD PTR [rip+0x345b7]        # 0x140048264
   140013cad:	divss  xmm0,DWORD PTR [rcx+0x14]
   140013cb2:	movss  xmm1,DWORD PTR [rip+0x345a6]        # 0x140048260
   140013cba:	xor    eax,eax
   140013cbc:	comiss xmm0,xmm1
   140013cbf:	jb     0x140013cd7
   140013cc1:	subss  xmm0,xmm1
   140013cc5:	comiss xmm0,xmm1
   140013cc8:	jae    0x140013cd7
   140013cca:	movabs rcx,0x8000000000000000
   140013cd4:	mov    rax,rcx
   140013cd7:	mov    r9d,0xffffffff
   140013cdd:	cvttss2si rcx,xmm0
   140013ce2:	lea    r8,[rip+0x31b07]        # 0x1400457f0
   140013ce9:	add    rcx,rax
   140013cec:	cmp    rcx,r9
   140013cef:	cmova  ecx,r9d
   140013cf3:	xor    edx,edx
   140013cf5:	cmp    ecx,0x11
   140013cf8:	jbe    0x140013d07
   140013cfa:	mov    rax,r8
   140013cfd:	lea    rax,[rax+0x4]
   140013d01:	inc    edx
   140013d03:	cmp    ecx,DWORD PTR [rax]
   140013d05:	ja     0x140013cfd
   140013d07:	movsxd rax,edx
   140013d0a:	mov    eax,DWORD PTR [r8+rax*4]
   140013d0e:	cmp    eax,r9d
   140013d11:	cmove  eax,ecx
   140013d14:	ret    
   140013d15:	int3   
   140013d16:	int3   
   140013d17:	int3   
   140013d18:	mov    rax,rsp
   140013d1b:	mov    QWORD PTR [rax+0x8],rcx
   140013d1f:	push   rdi
   140013d20:	push   r14
   140013d22:	push   r15
   140013d24:	sub    rsp,0x40
   140013d28:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   140013d30:	mov    QWORD PTR [rax+0x10],rbx
   140013d34:	mov    QWORD PTR [rax+0x18],rsi
   140013d38:	mov    r14d,r9d
   140013d3b:	mov    r15d,r8d
   140013d3e:	mov    rbx,rdx
   140013d41:	mov    rdi,rcx
   140013d44:	cmp    QWORD PTR [rcx+0x40],0x0
   140013d49:	jne    0x140013ddb
   140013d4f:	mov    ecx,DWORD PTR [rcx+0x34]
   140013d52:	test   rcx,rcx
   140013d55:	jne    0x140013d5d
   140013d57:	or     r8,0xffffffffffffffff
   140013d5b:	jmp    0x140013d73
   140013d5d:	xor    edx,edx
   140013d5f:	or     r8,0xffffffffffffffff
   140013d63:	mov    rax,r8
   140013d66:	div    rcx
   140013d69:	cmp    rax,0x20
   140013d6d:	jb     0x140013d9a
   140013d6f:	shl    rcx,0x5
   140013d73:	sub    r8,rcx
   140013d76:	cmp    r8,0x10
   140013d7a:	jb     0x140013d9a
   140013d7c:	add    rcx,0x10
   140013d80:	call   0x140029d54
   140013d85:	mov    rdx,rax
   140013d88:	test   rax,rax
   140013d8b:	je     0x140013da1
   140013d8d:	mov    rcx,QWORD PTR [rdi+0x38]
   140013d91:	mov    QWORD PTR [rax],rcx
   140013d94:	mov    QWORD PTR [rdi+0x38],rax
   140013d98:	jmp    0x140013d9c
   140013d9a:	xor    edx,edx
   140013d9c:	test   rdx,rdx
   140013d9f:	jne    0x140013dac
   140013da1:	mov    ecx,0x8007000e
   140013da6:	call   0x14000400c
   140013dab:	int3   
   140013dac:	mov    r8d,DWORD PTR [rdi+0x34]
   140013db0:	dec    r8d
   140013db3:	mov    ecx,r8d
   140013db6:	shl    rcx,0x5
   140013dba:	add    rcx,0x10
   140013dbe:	add    rcx,rdx
   140013dc1:	test   r8d,r8d
   140013dc4:	js     0x140013ddb
   140013dc6:	mov    rax,QWORD PTR [rdi+0x40]
   140013dca:	mov    QWORD PTR [rcx+0x10],rax
   140013dce:	mov    QWORD PTR [rdi+0x40],rcx
   140013dd2:	sub    rcx,0x20
   140013dd6:	dec    r8d
   140013dd9:	jns    0x140013dc6
   140013ddb:	mov    rsi,QWORD PTR [rdi+0x40]
   140013ddf:	xor    eax,eax
   140013de1:	test   rsi,rsi
   140013de4:	setne  al
   140013de7:	test   eax,eax
   140013de9:	jne    0x140013df6
   140013deb:	mov    ecx,0x80004005
   140013df0:	call   0x14000400c
   140013df5:	int3   
   140013df6:	mov    QWORD PTR [rsp+0x20],rsi
   140013dfb:	mov    rax,QWORD PTR [rsi+0x10]
   140013dff:	mov    QWORD PTR [rdi+0x40],rax
   140013e03:	mov    QWORD PTR [rsp+0x30],rsi
   140013e08:	mov    rdx,rbx
   140013e0b:	mov    rcx,rsi
   140013e0e:	call   0x140006b8c
   140013e13:	nop
   140013e14:	lea    rbx,[rsi+0x8]
   140013e18:	mov    QWORD PTR [rsp+0x38],rbx
   140013e1d:	lea    rcx,[rip+0x46504]        # 0x14005a328
   140013e24:	mov    rax,QWORD PTR [rip+0x464fd]        # 0x14005a328
   140013e2b:	call   QWORD PTR [rax+0x18]
   140013e2e:	add    rax,0x18
   140013e32:	mov    QWORD PTR [rbx],rax
   140013e35:	mov    DWORD PTR [rsi+0x18],r14d
   140013e39:	inc    QWORD PTR [rdi+0x8]
   140013e3d:	mov    rax,QWORD PTR [rdi]
   140013e40:	mov    rcx,QWORD PTR [rax+r15*8]
   140013e44:	mov    QWORD PTR [rsi+0x10],rcx
   140013e48:	mov    rax,QWORD PTR [rdi]
   140013e4b:	mov    QWORD PTR [rax+r15*8],rsi
   140013e4f:	mov    rdx,QWORD PTR [rdi+0x8]
   140013e53:	cmp    rdx,QWORD PTR [rdi+0x20]
   140013e57:	jbe    0x140013e71
   140013e59:	cmp    DWORD PTR [rdi+0x30],0x0
   140013e5d:	jne    0x140013e71
   140013e5f:	mov    rcx,rdi
   140013e62:	call   0x140013c98
   140013e67:	mov    edx,eax
   140013e69:	mov    rcx,rdi
   140013e6c:	call   0x140013b90
   140013e71:	mov    rax,rsi
   140013e74:	mov    rbx,QWORD PTR [rsp+0x68]
   140013e79:	mov    rsi,QWORD PTR [rsp+0x70]
   140013e7e:	add    rsp,0x40
   140013e82:	pop    r15
   140013e84:	pop    r14
   140013e86:	pop    rdi
   140013e87:	ret    
   140013e88:	mov    QWORD PTR [rsp+0x10],rdx
   140013e8d:	push   rdi
   140013e8e:	sub    rsp,0x30
   140013e92:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013e9b:	mov    QWORD PTR [rsp+0x40],rbx
   140013ea0:	mov    rbx,rdx
   140013ea3:	mov    rdi,rcx
   140013ea6:	xor    eax,eax
   140013ea8:	test   rdx,rdx
   140013eab:	setne  al
   140013eae:	test   eax,eax
   140013eb0:	jne    0x140013ebd
   140013eb2:	mov    ecx,0x80004005
   140013eb7:	call   0x14000400c
   140013ebc:	nop
   140013ebd:	lea    rax,[rdx+0x8]
   140013ec1:	mov    QWORD PTR [rsp+0x50],rax
   140013ec6:	mov    rdx,QWORD PTR [rax]
   140013ec9:	sub    rdx,0x18
   140013ecd:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140013ed2:	jg     0x140013ede
   140013ed4:	mov    rcx,QWORD PTR [rdx]
   140013ed7:	mov    rax,QWORD PTR [rcx]
   140013eda:	call   QWORD PTR [rax+0x8]
   140013edd:	nop
   140013ede:	mov    QWORD PTR [rsp+0x48],rbx
   140013ee3:	mov    rdx,QWORD PTR [rbx]
   140013ee6:	sub    rdx,0x18
   140013eea:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140013eef:	jg     0x140013efa
   140013ef1:	mov    rcx,QWORD PTR [rdx]
   140013ef4:	mov    rax,QWORD PTR [rcx]
   140013ef7:	call   QWORD PTR [rax+0x8]
   140013efa:	mov    rax,QWORD PTR [rdi+0x40]
   140013efe:	mov    QWORD PTR [rbx+0x10],rax
   140013f02:	mov    QWORD PTR [rdi+0x40],rbx
   140013f06:	dec    QWORD PTR [rdi+0x8]
   140013f0a:	mov    rdx,QWORD PTR [rdi+0x8]
   140013f0e:	cmp    rdx,QWORD PTR [rdi+0x28]
   140013f12:	jae    0x140013f2c
   140013f14:	cmp    DWORD PTR [rdi+0x30],0x0
   140013f18:	jne    0x140013f2c
   140013f1a:	mov    rcx,rdi
   140013f1d:	call   0x140013c98
   140013f22:	mov    edx,eax
   140013f24:	mov    rcx,rdi
   140013f27:	call   0x140013b90
   140013f2c:	cmp    QWORD PTR [rdi+0x8],0x0
   140013f31:	jne    0x140013f55
   140013f33:	and    QWORD PTR [rdi+0x40],0x0
   140013f38:	mov    rcx,QWORD PTR [rdi+0x38]
   140013f3c:	test   rcx,rcx
   140013f3f:	je     0x140013f55
   140013f41:	mov    rbx,QWORD PTR [rcx]
   140013f44:	call   0x1400273dc
   140013f49:	mov    rcx,rbx
   140013f4c:	test   rbx,rbx
   140013f4f:	jne    0x140013f41
   140013f51:	and    QWORD PTR [rdi+0x38],rbx
   140013f55:	mov    rbx,QWORD PTR [rsp+0x40]
   140013f5a:	add    rsp,0x30
   140013f5e:	pop    rdi
   140013f5f:	ret    
   140013f60:	mov    eax,DWORD PTR [rcx+0x10]
   140013f63:	movss  xmm2,DWORD PTR [rip+0x342f5]        # 0x140048260
   140013f6b:	xorps  xmm0,xmm0
   140013f6e:	xor    edx,edx
   140013f70:	movabs r8,0x8000000000000000
   140013f7a:	cvtsi2ss xmm0,rax
   140013f7f:	movaps xmm1,xmm0
   140013f82:	mulss  xmm1,DWORD PTR [rcx+0x1c]
   140013f87:	comiss xmm1,xmm2
   140013f8a:	jb     0x140013f98
   140013f8c:	subss  xmm1,xmm2
   140013f90:	comiss xmm1,xmm2
   140013f93:	jae    0x140013f98
   140013f95:	mov    rdx,r8
   140013f98:	mulss  xmm0,DWORD PTR [rcx+0x18]
   140013f9d:	cvttss2si rax,xmm1
   140013fa2:	add    rax,rdx
   140013fa5:	xor    edx,edx
   140013fa7:	comiss xmm0,xmm2
   140013faa:	mov    QWORD PTR [rcx+0x20],rax
   140013fae:	jb     0x140013fbc
   140013fb0:	subss  xmm0,xmm2
   140013fb4:	comiss xmm0,xmm2
   140013fb7:	jae    0x140013fbc
   140013fb9:	mov    rdx,r8
   140013fbc:	cvttss2si rax,xmm0
   140013fc1:	add    rax,rdx
   140013fc4:	xor    edx,edx
   140013fc6:	cmp    rax,0x11
   140013fca:	cmovb  rax,rdx
   140013fce:	mov    QWORD PTR [rcx+0x28],rax
   140013fd2:	ret    
   140013fd3:	int3   
   140013fd4:	mov    QWORD PTR [rsp+0x8],rcx
   140013fd9:	push   rbx
   140013fda:	sub    rsp,0x30
   140013fde:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013fe7:	mov    rbx,rcx
   140013fea:	lea    rax,[rcx+0x8]
   140013fee:	mov    QWORD PTR [rsp+0x48],rax
   140013ff3:	mov    rdx,QWORD PTR [rax]
   140013ff6:	sub    rdx,0x18
   140013ffa:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140013fff:	jg     0x14001400b
   140014001:	mov    rcx,QWORD PTR [rdx]
   140014004:	mov    rax,QWORD PTR [rcx]
   140014007:	call   QWORD PTR [rax+0x8]
   14001400a:	nop
   14001400b:	mov    QWORD PTR [rsp+0x40],rbx
   140014010:	mov    rdx,QWORD PTR [rbx]
   140014013:	sub    rdx,0x18
   140014017:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001401c:	jg     0x140014027
   14001401e:	mov    rcx,QWORD PTR [rdx]
   140014021:	mov    rax,QWORD PTR [rcx]
   140014024:	call   QWORD PTR [rax+0x8]
   140014027:	add    rsp,0x30
   14001402b:	pop    rbx
   14001402c:	ret    
   14001402d:	int3   
   14001402e:	int3   
   14001402f:	int3   
   140014030:	mov    eax,0x1
   140014035:	ret    
   140014036:	int3   
   140014037:	int3   
   140014038:	mov    QWORD PTR [rsp+0x8],rbx
   14001403d:	push   rdi
   14001403e:	sub    rsp,0x20
   140014042:	mov    ebx,edx
   140014044:	mov    rdi,rcx
   140014047:	call   0x140014068
   14001404c:	test   bl,0x1
   14001404f:	je     0x140014059
   140014051:	mov    rcx,rdi
   140014054:	call   0x14002657c
   140014059:	mov    rax,rdi
   14001405c:	mov    rbx,QWORD PTR [rsp+0x30]
   140014061:	add    rsp,0x20
   140014065:	pop    rdi
   140014066:	ret    
   140014067:	int3   
   140014068:	mov    QWORD PTR [rsp+0x8],rcx
   14001406d:	sub    rsp,0x38
   140014071:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001407a:	lea    rax,[rip+0x32407]        # 0x140046488
   140014081:	mov    QWORD PTR [rcx],rax
   140014084:	lea    rax,[rcx+0x8]
   140014088:	mov    QWORD PTR [rsp+0x40],rax
   14001408d:	mov    rdx,QWORD PTR [rax]
   140014090:	sub    rdx,0x18
   140014094:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140014099:	jg     0x1400140a4
   14001409b:	mov    rcx,QWORD PTR [rdx]
   14001409e:	mov    rax,QWORD PTR [rcx]
   1400140a1:	call   QWORD PTR [rax+0x8]
   1400140a4:	add    rsp,0x38
   1400140a8:	ret    
   1400140a9:	int3   
   1400140aa:	int3   
   1400140ab:	int3   
   1400140ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400140b1:	mov    QWORD PTR [rsp+0x10],rbp
   1400140b6:	mov    QWORD PTR [rsp+0x18],rsi
   1400140bb:	push   rdi
   1400140bc:	push   r14
   1400140be:	push   r15
   1400140c0:	sub    rsp,0x20
   1400140c4:	mov    esi,edx
   1400140c6:	mov    rbx,rcx
   1400140c9:	cmp    edx,0x2
   1400140cc:	jge    0x1400140d9
   1400140ce:	mov    rax,QWORD PTR [rcx]
   1400140d1:	call   QWORD PTR [rax+0x38]
   1400140d4:	jmp    0x14001415a
   1400140d9:	xor    r15d,r15d
   1400140dc:	test   r8,r8
   1400140df:	jne    0x1400140e5
   1400140e1:	xor    eax,eax
   1400140e3:	jmp    0x14001415a
   1400140e5:	mov    edi,0x1
   1400140ea:	mov    ebp,edi
   1400140ec:	cmp    edx,edi
   1400140ee:	jle    0x140014158
   1400140f0:	lea    r14,[r8+0x8]
   1400140f4:	mov    rdx,QWORD PTR [r14]
   1400140f7:	mov    ecx,0xfffd
   1400140fc:	movzx  eax,WORD PTR [rdx]
   1400140ff:	sub    ax,0x2d
   140014103:	test   cx,ax
   140014106:	jne    0x14001410f
   140014108:	cmp    WORD PTR [rdx+0x2],r15w
   14001410d:	jne    0x14001411c
   14001410f:	cmp    WORD PTR [rdx],0x40
   140014113:	jne    0x14001413f
   140014115:	cmp    WORD PTR [rdx+0x2],r15w
   14001411a:	je     0x14001413f
   14001411c:	cmp    WORD PTR [rdx],0x40
   140014120:	mov    rcx,rbx
   140014123:	jne    0x140014138
   140014125:	mov    rax,QWORD PTR [rbx]
   140014128:	call   QWORD PTR [rax+0x40]
   14001412b:	mov    rdx,QWORD PTR [r14]
   14001412e:	mov    rcx,rbx
   140014131:	call   0x140014174
   140014136:	jmp    0x140014148
   140014138:	call   0x1400145cc
   14001413d:	jmp    0x14001414a
   14001413f:	mov    rax,QWORD PTR [rbx]
   140014142:	mov    rcx,rbx
   140014145:	call   QWORD PTR [rax+0x18]
   140014148:	mov    edi,eax
   14001414a:	test   eax,eax
   14001414c:	je     0x1400140e1
   14001414e:	inc    ebp
   140014150:	add    r14,0x8
   140014154:	cmp    ebp,esi
   140014156:	jl     0x1400140f4
   140014158:	mov    eax,edi
   14001415a:	mov    rbx,QWORD PTR [rsp+0x40]
   14001415f:	mov    rbp,QWORD PTR [rsp+0x48]
   140014164:	mov    rsi,QWORD PTR [rsp+0x50]
   140014169:	add    rsp,0x20
   14001416d:	pop    r15
   14001416f:	pop    r14
   140014171:	pop    rdi
   140014172:	ret    
   140014173:	int3   
   140014174:	mov    rax,rsp
   140014177:	push   rbp
   140014178:	push   rsi
   140014179:	push   rdi
   14001417a:	push   r12
   14001417c:	push   r13
   14001417e:	push   r14
   140014180:	push   r15
   140014182:	mov    rbp,rsp
   140014185:	sub    rsp,0x70
   140014189:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140014191:	mov    QWORD PTR [rax+0x8],rbx
   140014195:	mov    r14,rcx
   140014198:	xor    esi,esi
   14001419a:	test   rdx,rdx
   14001419d:	jne    0x1400141a6
   14001419f:	xor    eax,eax
   1400141a1:	jmp    0x1400145b2
   1400141a6:	or     r13,0xffffffffffffffff
   1400141aa:	mov    rax,r13
   1400141ad:	inc    rax
   1400141b0:	cmp    WORD PTR [rdx+rax*2],si
   1400141b4:	jne    0x1400141ad
   1400141b6:	cmp    rax,0x1
   1400141ba:	ja     0x1400141e3
   1400141bc:	mov    ecx,0xe1230fae
   1400141c1:	xor    r8d,r8d
   1400141c4:	call   0x140011d9c
   1400141c9:	mov    rbx,rax
   1400141cc:	mov    rax,QWORD PTR [r14]
   1400141cf:	mov    rdx,rbx
   1400141d2:	mov    rcx,r14
   1400141d5:	call   QWORD PTR [rax+0x20]
   1400141d8:	mov    rcx,rbx
   1400141db:	call   QWORD PTR [rip+0x2d1e7]        # 0x1400413c8
   1400141e1:	jmp    0x14001419f
   1400141e3:	lea    rbx,[rdx+0x2]
   1400141e7:	mov    rcx,rbx
   1400141ea:	call   QWORD PTR [rip+0x2d408]        # 0x1400415f8
   1400141f0:	or     r15d,0xffffffff
   1400141f4:	cmp    eax,r15d
   1400141f7:	jne    0x140014200
   1400141f9:	mov    ecx,0xe1230faf
   1400141fe:	jmp    0x1400141c1
   140014200:	mov    QWORD PTR [rbp-0x28],r13
   140014204:	mov    QWORD PTR [rsp+0x30],rsi
   140014209:	mov    DWORD PTR [rsp+0x28],0x80
   140014211:	mov    DWORD PTR [rsp+0x20],0x3
   140014219:	xor    r9d,r9d
   14001421c:	mov    edx,0x80000000
   140014221:	lea    r8d,[r9+0x1]
   140014225:	mov    rcx,rbx
   140014228:	call   QWORD PTR [rip+0x2d102]        # 0x140041330
   14001422e:	mov    rbx,rax
   140014231:	mov    QWORD PTR [rbp-0x28],rax
   140014235:	cmp    rax,r13
   140014238:	jne    0x140014241
   14001423a:	mov    ecx,0xe1230fb0
   14001423f:	jmp    0x140014263
   140014241:	xor    edx,edx
   140014243:	mov    rcx,rax
   140014246:	call   QWORD PTR [rip+0x2d3cc]        # 0x140041618
   14001424c:	mov    edi,eax
   14001424e:	cmp    eax,r15d
   140014251:	jne    0x14001425a
   140014253:	mov    ecx,0xe1230fb1
   140014258:	jmp    0x140014263
   14001425a:	test   eax,eax
   14001425c:	jne    0x140014288
   14001425e:	mov    ecx,0xe1230fb3
   140014263:	xor    r8d,r8d
   140014266:	call   0x140011d9c
   14001426b:	mov    rbx,rax
   14001426e:	mov    rax,QWORD PTR [r14]
   140014271:	mov    rdx,rbx
   140014274:	mov    rcx,r14
   140014277:	call   QWORD PTR [rax+0x20]
   14001427a:	mov    rcx,rbx
   14001427d:	call   QWORD PTR [rip+0x2d145]        # 0x1400413c8
   140014283:	jmp    0x14001459d
   140014288:	lea    eax,[rdi+0x2]
   14001428b:	mov    r12d,eax
   14001428e:	mov    ecx,eax
   140014290:	call   0x140029d54
   140014295:	mov    r15,rax
   140014298:	mov    QWORD PTR [rbp-0x20],rax
   14001429c:	test   rax,rax
   14001429f:	jne    0x1400142ab
   1400142a1:	mov    ecx,0xe1230fb2
   1400142a6:	jmp    0x140014572
   1400142ab:	mov    r8,r12
   1400142ae:	xor    edx,edx
   1400142b0:	mov    rcx,rax
   1400142b3:	call   0x14002bb90
   1400142b8:	mov    QWORD PTR [rsp+0x20],rsi
   1400142bd:	lea    r9,[rbp+0x48]
   1400142c1:	mov    r8d,edi
   1400142c4:	mov    rdx,r15
   1400142c7:	mov    rcx,rbx
   1400142ca:	call   QWORD PTR [rip+0x2d350]        # 0x140041620
   1400142d0:	test   eax,eax
   1400142d2:	je     0x14001456d
   1400142d8:	cmp    edi,DWORD PTR [rbp+0x48]
   1400142db:	jne    0x14001456d
   1400142e1:	mov    rcx,rbx
   1400142e4:	call   QWORD PTR [rip+0x2d09e]        # 0x140041388
   1400142ea:	mov    QWORD PTR [rbp-0x28],r13
   1400142ee:	mov    r12,r15
   1400142f1:	mov    rax,rdi
   1400142f4:	shr    rax,1
   1400142f7:	lea    rax,[r15+rax*2]
   1400142fb:	mov    QWORD PTR [rbp-0x30],rax
   1400142ff:	mov    rbx,r15
   140014302:	mov    r13d,0x1
   140014308:	mov    DWORD PTR [rbp+0x50],0x1005
   14001430f:	mov    ecx,0xfeff
   140014314:	cmp    WORD PTR [r15],cx
   140014318:	jne    0x140014326
   14001431a:	lea    r12,[r15+0x2]
   14001431e:	mov    rbx,r12
   140014321:	jmp    0x1400143eb
   140014326:	mov    ecx,0xfffe
   14001432b:	cmp    WORD PTR [r15],cx
   14001432f:	jne    0x14001436f
   140014331:	lea    r12,[r15+0x2]
   140014335:	mov    rbx,r12
   140014338:	shr    edi,1
   14001433a:	dec    edi
   14001433c:	mov    r9d,edi
   14001433f:	mov    r8d,esi
   140014342:	je     0x1400143eb
   140014348:	mov    rdx,rsi
   14001434b:	movzx  ecx,BYTE PTR [r12+rdx*2+0x1]
   140014351:	movzx  eax,WORD PTR [r12+rdx*2]
   140014356:	shl    ax,0x8
   14001435a:	or     cx,ax
   14001435d:	mov    WORD PTR [r12+rdx*2],cx
   140014362:	inc    r8d
   140014365:	mov    edx,r8d
   140014368:	cmp    rdx,r9
   14001436b:	jb     0x14001434b
   14001436d:	jmp    0x1400143e7
   14001436f:	lea    r8,[rbp+0x50]
   140014373:	mov    edx,edi
   140014375:	mov    rcx,r15
   140014378:	call   QWORD PTR [rip+0x2cd8a]        # 0x140041108
   14001437e:	test   eax,eax
   140014380:	jne    0x1400143e7
   140014382:	mov    DWORD PTR [rsp+0x28],esi
   140014386:	mov    QWORD PTR [rsp+0x20],rsi
   14001438b:	or     r9d,0xffffffff
   14001438f:	mov    r8,r15
   140014392:	xor    edx,edx
   140014394:	xor    ecx,ecx
   140014396:	call   QWORD PTR [rip+0x2cf8c]        # 0x140041328
   14001439c:	movsxd rbx,eax
   14001439f:	lea    rdi,[rbx+rbx*1]
   1400143a3:	mov    rcx,rdi
   1400143a6:	call   0x140029d54
   1400143ab:	mov    r12,rax
   1400143ae:	mov    QWORD PTR [rbp-0x18],rax
   1400143b2:	mov    DWORD PTR [rsp+0x28],ebx
   1400143b6:	mov    QWORD PTR [rsp+0x20],rax
   1400143bb:	or     r9d,0xffffffff
   1400143bf:	mov    r8,r15
   1400143c2:	xor    edx,edx
   1400143c4:	xor    ecx,ecx
   1400143c6:	call   QWORD PTR [rip+0x2cf5c]        # 0x140041328
   1400143cc:	mov    QWORD PTR [rbp-0x20],r12
   1400143d0:	mov    QWORD PTR [rbp-0x18],r15
   1400143d4:	lea    rax,[rdi+r12*1]
   1400143d8:	mov    QWORD PTR [rbp-0x30],rax
   1400143dc:	mov    rbx,r12
   1400143df:	mov    rcx,r15
   1400143e2:	call   0x1400273dc
   1400143e7:	mov    rax,QWORD PTR [rbp-0x30]
   1400143eb:	cmp    WORD PTR [rbx],si
   1400143ee:	je     0x140014564
   1400143f4:	cmp    rbx,rax
   1400143f7:	jae    0x140014564
   1400143fd:	jmp    0x14001440e
   1400143ff:	cmp    WORD PTR [rbx],0xd
   140014403:	je     0x140014414
   140014405:	cmp    WORD PTR [rbx],si
   140014408:	je     0x140014414
   14001440a:	add    rbx,0x2
   14001440e:	cmp    WORD PTR [rbx],0xa
   140014412:	jne    0x1400143ff
   140014414:	mov    WORD PTR [rbx],si
   140014417:	add    rbx,0x2
   14001441b:	mov    rdx,r12
   14001441e:	lea    rcx,[rbp+0x58]
   140014422:	call   0x140006b8c
   140014427:	nop
   140014428:	lea    rcx,[rbp+0x58]
   14001442c:	call   0x140014e30
   140014431:	mov    r15,QWORD PTR [rbp+0x58]
   140014435:	mov    rdi,rsi
   140014438:	cmp    WORD PTR [r15],si
   14001443c:	je     0x1400144b4
   14001443e:	movzx  ecx,WORD PTR [r15]
   140014442:	call   0x14002ff14
   140014447:	test   eax,eax
   140014449:	je     0x140014455
   14001444b:	test   rdi,rdi
   14001444e:	jne    0x140014458
   140014450:	mov    rdi,r15
   140014453:	jmp    0x140014458
   140014455:	mov    rdi,rsi
   140014458:	add    r15,0x2
   14001445c:	cmp    WORD PTR [r15],si
   140014460:	jne    0x14001443e
   140014462:	test   rdi,rdi
   140014465:	je     0x1400144b0
   140014467:	mov    rax,QWORD PTR [rbp+0x58]
   14001446b:	sub    rdi,rax
   14001446e:	sar    rdi,1
   140014471:	test   edi,edi
   140014473:	js     0x140014533
   140014479:	mov    edx,0x1
   14001447e:	sub    edx,DWORD PTR [rax-0x8]
   140014481:	mov    ecx,DWORD PTR [rax-0xc]
   140014484:	sub    ecx,edi
   140014486:	or     ecx,edx
   140014488:	jge    0x140014499
   14001448a:	mov    edx,edi
   14001448c:	lea    rcx,[rbp+0x58]
   140014490:	call   0x140007098
   140014495:	mov    rax,QWORD PTR [rbp+0x58]
   140014499:	cmp    edi,DWORD PTR [rax-0xc]
   14001449c:	jg     0x140014528
   1400144a2:	mov    DWORD PTR [rax-0x10],edi
   1400144a5:	movsxd rcx,edi
   1400144a8:	mov    rax,QWORD PTR [rbp+0x58]
   1400144ac:	mov    WORD PTR [rax+rcx*2],si
   1400144b0:	mov    r15,QWORD PTR [rbp+0x58]
   1400144b4:	movzx  eax,WORD PTR [r15]
   1400144b8:	sub    ax,0x2d
   1400144bc:	mov    ecx,0xfffd
   1400144c1:	test   cx,ax
   1400144c4:	jne    0x1400144da
   1400144c6:	cmp    WORD PTR [r15+0x2],si
   1400144cb:	je     0x1400144da
   1400144cd:	mov    rdx,r15
   1400144d0:	mov    rcx,r14
   1400144d3:	call   0x1400145cc
   1400144d8:	jmp    0x1400144e6
   1400144da:	mov    rax,QWORD PTR [r14]
   1400144dd:	mov    rdx,r15
   1400144e0:	mov    rcx,r14
   1400144e3:	call   QWORD PTR [rax+0x18]
   1400144e6:	test   eax,eax
   1400144e8:	mov    r13d,eax
   1400144eb:	je     0x14001453e
   1400144ed:	cmp    WORD PTR [rbx],0xa
   1400144f1:	je     0x1400144f9
   1400144f3:	cmp    WORD PTR [rbx],0xd
   1400144f7:	jne    0x1400144ff
   1400144f9:	add    rbx,0x2
   1400144fd:	jmp    0x1400144ed
   1400144ff:	mov    r12,rbx
   140014502:	mov    rdx,QWORD PTR [rbp+0x58]
   140014506:	add    rdx,0xffffffffffffffe8
   14001450a:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001450f:	jg     0x14001451a
   140014511:	mov    rcx,QWORD PTR [rdx]
   140014514:	mov    rax,QWORD PTR [rcx]
   140014517:	call   QWORD PTR [rax+0x8]
   14001451a:	cmp    WORD PTR [rbx],si
   14001451d:	je     0x140014564
   14001451f:	mov    rax,QWORD PTR [rbp-0x30]
   140014523:	jmp    0x1400143f4
   140014528:	mov    ecx,0x80070057
   14001452d:	call   0x14000400c
   140014532:	int3   
   140014533:	mov    ecx,0x80070057
   140014538:	call   0x14000400c
   14001453d:	nop
   14001453e:	mov    rdx,QWORD PTR [rbp+0x58]
   140014542:	add    rdx,0xffffffffffffffe8
   140014546:	or     r13,0xffffffffffffffff
   14001454a:	mov    eax,r13d
   14001454d:	lock xadd DWORD PTR [rdx+0x10],eax
   140014552:	add    eax,r13d
   140014555:	test   eax,eax
   140014557:	jg     0x140014593
   140014559:	mov    rcx,QWORD PTR [rdx]
   14001455c:	mov    rax,QWORD PTR [rcx]
   14001455f:	call   QWORD PTR [rax+0x8]
   140014562:	jmp    0x140014593
   140014564:	mov    esi,r13d
   140014567:	or     r13,0xffffffffffffffff
   14001456b:	jmp    0x140014593
   14001456d:	mov    ecx,0xe1230fb3
   140014572:	xor    r8d,r8d
   140014575:	call   0x140011d9c
   14001457a:	mov    rbx,rax
   14001457d:	mov    rax,QWORD PTR [r14]
   140014580:	mov    rdx,rbx
   140014583:	mov    rcx,r14
   140014586:	call   QWORD PTR [rax+0x20]
   140014589:	mov    rcx,rbx
   14001458c:	call   QWORD PTR [rip+0x2ce36]        # 0x1400413c8
   140014592:	nop
   140014593:	mov    rcx,QWORD PTR [rbp-0x20]
   140014597:	call   0x1400273dc
   14001459c:	nop
   14001459d:	mov    rcx,QWORD PTR [rbp-0x28]
   1400145a1:	cmp    rcx,r13
   1400145a4:	je     0x1400145b0
   1400145a6:	call   QWORD PTR [rip+0x2cddc]        # 0x140041388
   1400145ac:	mov    QWORD PTR [rbp-0x28],r13
   1400145b0:	mov    eax,esi
   1400145b2:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400145ba:	add    rsp,0x70
   1400145be:	pop    r15
   1400145c0:	pop    r14
   1400145c2:	pop    r13
   1400145c4:	pop    r12
   1400145c6:	pop    rdi
   1400145c7:	pop    rsi
   1400145c8:	pop    rbp
   1400145c9:	ret    
   1400145ca:	int3   
   1400145cb:	int3   
   1400145cc:	mov    rax,rsp
   1400145cf:	push   rbp
   1400145d0:	push   rsi
   1400145d1:	push   rdi
   1400145d2:	push   r12
   1400145d4:	push   r13
   1400145d6:	push   r14
   1400145d8:	push   r15
   1400145da:	mov    rbp,rsp
   1400145dd:	sub    rsp,0x40
   1400145e1:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400145e9:	mov    QWORD PTR [rax+0x8],rbx
   1400145ed:	mov    rdi,rdx
   1400145f0:	mov    r15,rcx
   1400145f3:	xor    r13d,r13d
   1400145f6:	mov    r12d,r13d
   1400145f9:	test   rdx,rdx
   1400145fc:	je     0x140014781
   140014602:	lea    rcx,[rbp+0x58]
   140014606:	call   0x140006b8c
   14001460b:	nop
   14001460c:	mov    rax,QWORD PTR [rbp+0x58]
   140014610:	mov    r14d,DWORD PTR [rax-0x10]
   140014614:	mov    r8d,r14d
   140014617:	lea    rcx,[rbp+0x50]
   14001461b:	call   0x140014d84
   140014620:	nop
   140014621:	mov    r8d,r14d
   140014624:	lea    rcx,[rbp+0x48]
   140014628:	call   0x140014d84
   14001462d:	nop
   14001462e:	mov    rsi,QWORD PTR [rbp+0x48]
   140014632:	cmp    DWORD PTR [rsi-0x8],0x1
   140014636:	jle    0x140014648
   140014638:	mov    edx,DWORD PTR [rsi-0x10]
   14001463b:	lea    rcx,[rbp+0x48]
   14001463f:	call   0x1400070f8
   140014644:	mov    rsi,QWORD PTR [rbp+0x48]
   140014648:	mov    rbx,QWORD PTR [rbp+0x50]
   14001464c:	cmp    DWORD PTR [rbx-0x8],0x1
   140014650:	jle    0x140014662
   140014652:	mov    edx,DWORD PTR [rbx-0x10]
   140014655:	lea    rcx,[rbp+0x50]
   140014659:	call   0x1400070f8
   14001465e:	mov    rbx,QWORD PTR [rbp+0x50]
   140014662:	mov    rdx,QWORD PTR [rbp+0x58]
   140014666:	cmp    DWORD PTR [rdx-0x8],0x1
   14001466a:	jle    0x14001467c
   14001466c:	mov    edx,DWORD PTR [rdx-0x10]
   14001466f:	lea    rcx,[rbp+0x58]
   140014673:	call   0x1400070f8
   140014678:	mov    rdx,QWORD PTR [rbp+0x58]
   14001467c:	mov    DWORD PTR [rsp+0x28],r14d
   140014681:	mov    QWORD PTR [rsp+0x20],rsi
   140014686:	mov    r9d,r14d
   140014689:	mov    r8,rbx
   14001468c:	mov    rcx,r15
   14001468f:	call   0x14001479c
   140014694:	or     rsi,0xffffffffffffffff
   140014698:	test   eax,eax
   14001469a:	je     0x140014725
   1400146a0:	mov    rax,rsi
   1400146a3:	inc    rax
   1400146a6:	cmp    WORD PTR [rdi+rax*2],r13w
   1400146ab:	jne    0x1400146a3
   1400146ad:	mov    r8d,eax
   1400146b0:	mov    rdx,rdi
   1400146b3:	lea    rcx,[r15+0x8]
   1400146b7:	call   0x140006cfc
   1400146bc:	mov    r8d,0x1
   1400146c2:	lea    rdx,[rip+0x31e07]        # 0x1400464d0
   1400146c9:	lea    rcx,[r15+0x8]
   1400146cd:	call   0x140006cfc
   1400146d2:	mov    rbx,QWORD PTR [rbp+0x48]
   1400146d6:	cmp    DWORD PTR [rbx-0x8],0x1
   1400146da:	jle    0x1400146ec
   1400146dc:	mov    edx,DWORD PTR [rbx-0x10]
   1400146df:	lea    rcx,[rbp+0x48]
   1400146e3:	call   0x1400070f8
   1400146e8:	mov    rbx,QWORD PTR [rbp+0x48]
   1400146ec:	mov    r8,QWORD PTR [rbp+0x50]
   1400146f0:	cmp    DWORD PTR [r8-0x8],0x1
   1400146f5:	jle    0x140014708
   1400146f7:	mov    edx,DWORD PTR [r8-0x10]
   1400146fb:	lea    rcx,[rbp+0x50]
   1400146ff:	call   0x1400070f8
   140014704:	mov    r8,QWORD PTR [rbp+0x50]
   140014708:	mov    rax,QWORD PTR [r15]
   14001470b:	mov    DWORD PTR [rsp+0x28],r14d
   140014710:	mov    QWORD PTR [rsp+0x20],rbx
   140014715:	mov    r9d,r14d
   140014718:	mov    rdx,QWORD PTR [rbp+0x58]
   14001471c:	mov    rcx,r15
   14001471f:	call   QWORD PTR [rax+0x10]
   140014722:	mov    r12d,eax
   140014725:	mov    rdx,QWORD PTR [rbp+0x48]
   140014729:	add    rdx,0xffffffffffffffe8
   14001472d:	mov    ecx,esi
   14001472f:	lock xadd DWORD PTR [rdx+0x10],ecx
   140014734:	add    ecx,esi
   140014736:	test   ecx,ecx
   140014738:	jg     0x140014744
   14001473a:	mov    rcx,QWORD PTR [rdx]
   14001473d:	mov    rax,QWORD PTR [rcx]
   140014740:	call   QWORD PTR [rax+0x8]
   140014743:	nop
   140014744:	mov    rdx,QWORD PTR [rbp+0x50]
   140014748:	add    rdx,0xffffffffffffffe8
   14001474c:	mov    eax,esi
   14001474e:	lock xadd DWORD PTR [rdx+0x10],eax
   140014753:	add    eax,esi
   140014755:	test   eax,eax
   140014757:	jg     0x140014763
   140014759:	mov    rcx,QWORD PTR [rdx]
   14001475c:	mov    rax,QWORD PTR [rcx]
   14001475f:	call   QWORD PTR [rax+0x8]
   140014762:	nop
   140014763:	mov    rdx,QWORD PTR [rbp+0x58]
   140014767:	add    rdx,0xffffffffffffffe8
   14001476b:	mov    eax,esi
   14001476d:	lock xadd DWORD PTR [rdx+0x10],eax
   140014772:	add    eax,esi
   140014774:	test   eax,eax
   140014776:	jg     0x140014781
   140014778:	mov    rcx,QWORD PTR [rdx]
   14001477b:	mov    rax,QWORD PTR [rcx]
   14001477e:	call   QWORD PTR [rax+0x8]
   140014781:	mov    eax,r12d
   140014784:	mov    rbx,QWORD PTR [rsp+0x80]
   14001478c:	add    rsp,0x40
   140014790:	pop    r15
   140014792:	pop    r14
   140014794:	pop    r13
   140014796:	pop    r12
   140014798:	pop    rdi
   140014799:	pop    rsi
   14001479a:	pop    rbp
   14001479b:	ret    
   14001479c:	mov    QWORD PTR [rsp+0x8],rbx
   1400147a1:	mov    QWORD PTR [rsp+0x18],rbp
   1400147a6:	push   rsi
   1400147a7:	push   rdi
   1400147a8:	push   r13
   1400147aa:	push   r14
   1400147ac:	push   r15
   1400147ae:	sub    rsp,0x20
   1400147b2:	xor    r13d,r13d
   1400147b5:	mov    ebp,r9d
   1400147b8:	mov    rbx,r8
   1400147bb:	mov    rdi,rdx
   1400147be:	mov    rsi,rcx
   1400147c1:	test   rdx,rdx
   1400147c4:	je     0x1400148de
   1400147ca:	test   rbx,rbx
   1400147cd:	je     0x1400148de
   1400147d3:	mov    r15,QWORD PTR [rsp+0x70]
   1400147d8:	test   r15,r15
   1400147db:	je     0x1400148de
   1400147e1:	test   r9d,r9d
   1400147e4:	je     0x1400148de
   1400147ea:	cmp    DWORD PTR [rsp+0x78],r13d
   1400147ef:	je     0x1400148de
   1400147f5:	movzx  eax,WORD PTR [rdx]
   1400147f8:	mov    ecx,0xfffd
   1400147fd:	sub    ax,0x2d
   140014801:	test   cx,ax
   140014804:	jne    0x1400148de
   14001480a:	lea    r14,[rdx+0x2]
   14001480e:	cmp    WORD PTR [r14],r13w
   140014812:	je     0x1400148de
   140014818:	lea    edx,[r13+0x3a]
   14001481c:	mov    rcx,rdi
   14001481f:	call   0x140026e50
   140014824:	mov    edx,ebp
   140014826:	mov    r10,rax
   140014829:	test   rax,rax
   14001482c:	je     0x14001490d
   140014832:	mov    r8,rax
   140014835:	lea    rcx,[rbp-0x1]
   140014839:	mov    r11d,0x7ffffffe
   14001483f:	sub    r8,rdi
   140014842:	mov    r9d,r13d
   140014845:	mov    eax,0x80070057
   14001484a:	sar    r8,1
   14001484d:	dec    r8
   140014850:	cmp    rcx,r11
   140014853:	cmova  r9d,eax
   140014857:	test   r9d,r9d
   14001485a:	js     0x1400148a4
   14001485c:	cmp    r8,r11
   14001485f:	jbe    0x140014867
   140014861:	mov    WORD PTR [rbx],r13w
   140014865:	jmp    0x1400148b1
   140014867:	mov    r9d,r13d
   14001486a:	test   ebp,ebp
   14001486c:	je     0x140014898
   14001486e:	sub    r8,rdx
   140014871:	sub    r14,rbx
   140014874:	lea    rax,[r8+rdx*1]
   140014878:	test   rax,rax
   14001487b:	je     0x140014893
   14001487d:	movzx  eax,WORD PTR [r14+rbx*1]
   140014882:	test   ax,ax
   140014885:	je     0x140014893
   140014887:	mov    WORD PTR [rbx],ax
   14001488a:	add    rbx,0x2
   14001488e:	dec    rdx
   140014891:	jne    0x140014874
   140014893:	test   rdx,rdx
   140014896:	jne    0x1400148a8
   140014898:	sub    rbx,0x2
   14001489c:	mov    r9d,0x8007007a
   1400148a2:	jmp    0x1400148a8
   1400148a4:	test   ebp,ebp
   1400148a6:	je     0x1400148ac
   1400148a8:	mov    WORD PTR [rbx],r13w
   1400148ac:	test   r9d,r9d
   1400148af:	jns    0x1400148f7
   1400148b1:	mov    ecx,0xe1230fba
   1400148b6:	lea    r8,[rsp+0x58]
   1400148bb:	mov    QWORD PTR [rsp+0x58],rdi
   1400148c0:	call   0x140011d9c
   1400148c5:	mov    r8,QWORD PTR [rsi]
   1400148c8:	mov    rcx,rsi
   1400148cb:	mov    rdx,rax
   1400148ce:	mov    rbx,rax
   1400148d1:	call   QWORD PTR [r8+0x20]
   1400148d5:	mov    rcx,rbx
   1400148d8:	call   QWORD PTR [rip+0x2caea]        # 0x1400413c8
   1400148de:	xor    eax,eax
   1400148e0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400148e5:	mov    rbp,QWORD PTR [rsp+0x60]
   1400148ea:	add    rsp,0x20
   1400148ee:	pop    r15
   1400148f0:	pop    r14
   1400148f2:	pop    r13
   1400148f4:	pop    rdi
   1400148f5:	pop    rsi
   1400148f6:	ret    
   1400148f7:	mov    edx,DWORD PTR [rsp+0x78]
   1400148fb:	lea    r8,[r10+0x2]
   1400148ff:	mov    rcx,r15
   140014902:	call   0x140001004
   140014907:	test   eax,eax
   140014909:	jns    0x140014927
   14001490b:	jmp    0x1400148b1
   14001490d:	mov    r8,r14
   140014910:	mov    rcx,rbx
   140014913:	call   0x140001004
   140014918:	test   eax,eax
   14001491a:	jns    0x140014923
   14001491c:	mov    ecx,0xe1230fa7
   140014921:	jmp    0x1400148b6
   140014923:	mov    WORD PTR [r15],r13w
   140014927:	mov    eax,0x1
   14001492c:	jmp    0x1400148e0
   14001492e:	int3   
   14001492f:	int3   
   140014930:	mov    QWORD PTR [rsp+0x8],rbx
   140014935:	mov    QWORD PTR [rsp+0x18],rbp
   14001493a:	push   rsi
   14001493b:	push   rdi
   14001493c:	push   r14
   14001493e:	sub    rsp,0x30
   140014942:	xor    ebp,ebp
   140014944:	mov    r14,r9
   140014947:	mov    rbx,r8
   14001494a:	mov    rsi,rdx
   14001494d:	mov    rdi,rcx
   140014950:	test   rdx,rdx
   140014953:	je     0x140014a10
   140014959:	test   rbx,rbx
   14001495c:	jne    0x140014968
   14001495e:	mov    QWORD PTR [rsp+0x58],rdx
   140014963:	jmp    0x1400149e8
   140014968:	or     rdx,0xffffffffffffffff
   14001496c:	inc    rdx
   14001496f:	cmp    WORD PTR [r8+rdx*2],bp
   140014974:	jne    0x14001496c
   140014976:	inc    rdx
   140014979:	mov    rcx,rbx
   14001497c:	call   0x140033ebc
   140014981:	movzx  eax,WORD PTR [rbx]
   140014984:	cmp    ax,0x30
   140014988:	jne    0x1400149ae
   14001498a:	cmp    WORD PTR [rbx+0x2],0x58
   14001498f:	jne    0x1400149ae
   140014991:	cmp    WORD PTR [rbx+0x4],bp
   140014995:	je     0x1400149ae
   140014997:	mov    r9,r14
   14001499a:	mov    r8,rbx
   14001499d:	mov    rdx,rsi
   1400149a0:	mov    rcx,rdi
   1400149a3:	mov    DWORD PTR [rsp+0x20],ebp
   1400149a7:	call   0x140014b10
   1400149ac:	jmp    0x140014a12
   1400149ae:	test   ax,ax
   1400149b1:	je     0x1400149e3
   1400149b3:	mov    rcx,rbx
   1400149b6:	sub    ax,0x30
   1400149ba:	cmp    ax,0x9
   1400149be:	ja     0x1400149e3
   1400149c0:	add    rcx,0x2
   1400149c4:	movzx  eax,WORD PTR [rcx]
   1400149c7:	test   ax,ax
   1400149ca:	jne    0x1400149b6
   1400149cc:	xor    r8d,r8d
   1400149cf:	xor    edx,edx
   1400149d1:	mov    rcx,rbx
   1400149d4:	call   0x140027354
   1400149d9:	mov    DWORD PTR [r14],eax
   1400149dc:	mov    eax,0x1
   1400149e1:	jmp    0x140014a12
   1400149e3:	mov    QWORD PTR [rsp+0x58],rsi
   1400149e8:	lea    r8,[rsp+0x58]
   1400149ed:	mov    ecx,0xe1230fb4
   1400149f2:	call   0x140011d9c
   1400149f7:	mov    r8,QWORD PTR [rdi]
   1400149fa:	mov    rcx,rdi
   1400149fd:	mov    rdx,rax
   140014a00:	mov    rbx,rax
   140014a03:	call   QWORD PTR [r8+0x20]
   140014a07:	mov    rcx,rbx
   140014a0a:	call   QWORD PTR [rip+0x2c9b8]        # 0x1400413c8
   140014a10:	xor    eax,eax
   140014a12:	mov    rbx,QWORD PTR [rsp+0x50]
   140014a17:	mov    rbp,QWORD PTR [rsp+0x60]
   140014a1c:	add    rsp,0x30
   140014a20:	pop    r14
   140014a22:	pop    rdi
   140014a23:	pop    rsi
   140014a24:	ret    
   140014a25:	int3   
   140014a26:	int3   
   140014a27:	int3   
   140014a28:	mov    QWORD PTR [rsp+0x8],rbx
   140014a2d:	push   rdi
   140014a2e:	sub    rsp,0x30
   140014a32:	mov    r10,r8
   140014a35:	xor    r8d,r8d
   140014a38:	mov    rbx,r9
   140014a3b:	mov    rdi,rcx
   140014a3e:	test   rdx,rdx
   140014a41:	je     0x140014af6
   140014a47:	test   rbx,rbx
   140014a4a:	je     0x140014af6
   140014a50:	test   r10,r10
   140014a53:	je     0x140014b03
   140014a59:	movzx  r9d,WORD PTR [r10]
   140014a5d:	test   r9w,r9w
   140014a61:	je     0x140014b03
   140014a67:	cmp    r9w,0x30
   140014a6c:	jne    0x140014aa0
   140014a6e:	movzx  eax,WORD PTR [r10+0x2]
   140014a73:	mov    ecx,0xffdf
   140014a78:	sub    ax,0x58
   140014a7c:	test   cx,ax
   140014a7f:	jne    0x140014aa0
   140014a81:	cmp    WORD PTR [r10+0x4],r8w
   140014a86:	jne    0x140014aa0
   140014a88:	mov    eax,DWORD PTR [rsp+0x60]
   140014a8c:	mov    r9,rbx
   140014a8f:	mov    r8,r10
   140014a92:	mov    rcx,rdi
   140014a95:	mov    DWORD PTR [rsp+0x20],eax
   140014a99:	call   0x140014b10
   140014a9e:	jmp    0x140014af8
   140014aa0:	mov    rax,r10
   140014aa3:	sub    r9w,0x30
   140014aa8:	cmp    r9w,0x9
   140014aad:	ja     0x140014ac9
   140014aaf:	add    rax,0x2
   140014ab3:	movzx  r9d,WORD PTR [rax]
   140014ab7:	test   r9w,r9w
   140014abb:	jne    0x140014aa3
   140014abd:	xor    edx,edx
   140014abf:	mov    rcx,r10
   140014ac2:	call   0x140027354
   140014ac7:	jmp    0x140014b07
   140014ac9:	lea    r8,[rsp+0x48]
   140014ace:	mov    ecx,0xe1230fb4
   140014ad3:	mov    QWORD PTR [rsp+0x48],rdx
   140014ad8:	call   0x140011d9c
   140014add:	mov    r8,QWORD PTR [rdi]
   140014ae0:	mov    rcx,rdi
   140014ae3:	mov    rdx,rax
   140014ae6:	mov    rbx,rax
   140014ae9:	call   QWORD PTR [r8+0x20]
   140014aed:	mov    rcx,rbx
   140014af0:	call   QWORD PTR [rip+0x2c8d2]        # 0x1400413c8
   140014af6:	xor    eax,eax
   140014af8:	mov    rbx,QWORD PTR [rsp+0x40]
   140014afd:	add    rsp,0x30
   140014b01:	pop    rdi
   140014b02:	ret    
   140014b03:	mov    eax,DWORD PTR [rsp+0x60]
   140014b07:	mov    DWORD PTR [rbx],eax
   140014b09:	mov    eax,0x1
   140014b0e:	jmp    0x140014af8
   140014b10:	mov    QWORD PTR [rsp+0x8],rbx
   140014b15:	mov    QWORD PTR [rsp+0x10],rbp
   140014b1a:	mov    QWORD PTR [rsp+0x20],rsi
   140014b1f:	push   rdi
   140014b20:	push   r14
   140014b22:	push   r15
   140014b24:	sub    rsp,0x20
   140014b28:	xor    ebx,ebx
   140014b2a:	mov    r14,r9
   140014b2d:	mov    rdi,r8
   140014b30:	mov    rbp,rdx
   140014b33:	mov    r15,rcx
   140014b36:	test   r8,r8
   140014b39:	je     0x140014c00
   140014b3f:	cmp    WORD PTR [r8],bx
   140014b43:	je     0x140014c00
   140014b49:	or     rdx,0xffffffffffffffff
   140014b4d:	inc    rdx
   140014b50:	cmp    WORD PTR [r8+rdx*2],bx
   140014b55:	jne    0x140014b4d
   140014b57:	mov    esi,0x1
   140014b5c:	mov    rcx,r8
   140014b5f:	add    rdx,rsi
   140014b62:	call   0x140033ebc
   140014b67:	cmp    WORD PTR [rdi],0x30
   140014b6b:	mov    eax,ebx
   140014b6d:	jne    0x140014b7d
   140014b6f:	cmp    WORD PTR [rdi+0x2],0x58
   140014b74:	jne    0x140014b7d
   140014b76:	cmp    WORD PTR [rdi+0x4],bx
   140014b7a:	cmovne eax,esi
   140014b7d:	mov    rdx,rdi
   140014b80:	test   eax,eax
   140014b82:	je     0x140014b88
   140014b84:	lea    rdx,[rdi+0x4]
   140014b88:	test   rdx,rdx
   140014b8b:	je     0x140014bcf
   140014b8d:	movzx  ecx,WORD PTR [rdx]
   140014b90:	test   cx,cx
   140014b93:	je     0x140014bcf
   140014b95:	lea    eax,[rcx-0x30]
   140014b98:	cmp    ax,0x9
   140014b9c:	jbe    0x140014ba8
   140014b9e:	sub    cx,0x41
   140014ba2:	cmp    cx,0x5
   140014ba6:	ja     0x140014bcf
   140014ba8:	add    rdx,0x2
   140014bac:	movzx  ecx,WORD PTR [rdx]
   140014baf:	test   cx,cx
   140014bb2:	jne    0x140014b95
   140014bb4:	lea    rdx,[rip+0x31919]        # 0x1400464d4
   140014bbb:	mov    r8,r14
   140014bbe:	mov    rcx,rdi
   140014bc1:	call   0x140033f10
   140014bc6:	cmp    eax,esi
   140014bc8:	sete   bl
   140014bcb:	mov    eax,ebx
   140014bcd:	jmp    0x140014c0c
   140014bcf:	lea    r8,[rsp+0x50]
   140014bd4:	mov    ecx,0xe1230fb5
   140014bd9:	mov    QWORD PTR [rsp+0x50],rbp
   140014bde:	call   0x140011d9c
   140014be3:	mov    r8,QWORD PTR [r15]
   140014be6:	mov    rcx,r15
   140014be9:	mov    rdx,rax
   140014bec:	mov    rbx,rax
   140014bef:	call   QWORD PTR [r8+0x20]
   140014bf3:	mov    rcx,rbx
   140014bf6:	call   QWORD PTR [rip+0x2c7cc]        # 0x1400413c8
   140014bfc:	xor    eax,eax
   140014bfe:	jmp    0x140014c0c
   140014c00:	mov    eax,DWORD PTR [rsp+0x60]
   140014c04:	mov    DWORD PTR [r9],eax
   140014c07:	mov    eax,0x1
   140014c0c:	mov    rbx,QWORD PTR [rsp+0x40]
   140014c11:	mov    rbp,QWORD PTR [rsp+0x48]
   140014c16:	mov    rsi,QWORD PTR [rsp+0x58]
   140014c1b:	add    rsp,0x20
   140014c1f:	pop    r15
   140014c21:	pop    r14
   140014c23:	pop    rdi
   140014c24:	ret    
   140014c25:	int3   
   140014c26:	int3   
   140014c27:	int3   
   140014c28:	mov    QWORD PTR [rsp+0x10],rbx
   140014c2d:	push   rbp
   140014c2e:	push   rsi
   140014c2f:	push   rdi
   140014c30:	push   r14
   140014c32:	push   r15
   140014c34:	sub    rsp,0x90
   140014c3b:	mov    rax,QWORD PTR [rip+0x44446]        # 0x140059088
   140014c42:	xor    rax,rsp
   140014c45:	mov    QWORD PTR [rsp+0x80],rax
   140014c4d:	mov    rdi,QWORD PTR [rsp+0xe8]
   140014c55:	xor    r15d,r15d
   140014c58:	mov    rsi,r9
   140014c5b:	mov    rbp,r8
   140014c5e:	mov    r14,rcx
   140014c61:	mov    QWORD PTR [rsp+0x20],r15
   140014c66:	test   r8,r8
   140014c69:	je     0x140014d59
   140014c6f:	test   r9,r9
   140014c72:	je     0x140014d59
   140014c78:	test   rdi,rdi
   140014c7b:	je     0x140014d59
   140014c81:	lea    r8,[rsp+0x20]
   140014c86:	lea    rdx,[rip+0x31257]        # 0x140045ee4
   140014c8d:	mov    rcx,rbp
   140014c90:	call   0x140026c58
   140014c95:	lea    r8,[rsp+0x20]
   140014c9a:	lea    rdx,[rip+0x3088f]        # 0x140045530
   140014ca1:	xor    ecx,ecx
   140014ca3:	call   0x140026c58
   140014ca8:	mov    r9,rsi
   140014cab:	lea    rsi,[rip+0x30d86]        # 0x140045a38
   140014cb2:	mov    r8,rbp
   140014cb5:	mov    rcx,r14
   140014cb8:	mov    rdx,rsi
   140014cbb:	mov    rbx,rax
   140014cbe:	call   0x140014930
   140014cc3:	test   eax,eax
   140014cc5:	je     0x140014d4b
   140014ccb:	test   rbx,rbx
   140014cce:	je     0x140014d40
   140014cd0:	lea    eax,[r15+0x2c]
   140014cd4:	mov    r8,rbx
   140014cd7:	mov    edx,0x100
   140014cdc:	mov    rcx,rdi
   140014cdf:	mov    WORD PTR [rbx-0x2],ax
   140014ce3:	call   0x140001004
   140014ce8:	test   eax,eax
   140014cea:	jns    0x140014d44
   140014cec:	lea    r8,[rip+0x30c4d]        # 0x140045940
   140014cf3:	lea    edx,[r15+0x40]
   140014cf7:	lea    rcx,[rsp+0x40]
   140014cfc:	mov    r9d,0xff
   140014d02:	call   0x140004164
   140014d07:	lea    rax,[rsp+0x40]
   140014d0c:	lea    r8,[rsp+0x28]
   140014d11:	mov    ecx,0xe1230fb7
   140014d16:	mov    QWORD PTR [rsp+0x28],rax
   140014d1b:	mov    QWORD PTR [rsp+0x30],rsi
   140014d20:	call   0x140011d9c
   140014d25:	mov    r8,QWORD PTR [r14]
   140014d28:	mov    rcx,r14
   140014d2b:	mov    rdx,rax
   140014d2e:	mov    rbx,rax
   140014d31:	call   QWORD PTR [r8+0x28]
   140014d35:	mov    rcx,rbx
   140014d38:	call   QWORD PTR [rip+0x2c68a]        # 0x1400413c8
   140014d3e:	jmp    0x140014d44
   140014d40:	mov    WORD PTR [rdi],r15w
   140014d44:	mov    eax,0x1
   140014d49:	jmp    0x140014d5b
   140014d4b:	test   rbx,rbx
   140014d4e:	je     0x140014d59
   140014d50:	mov    eax,0x2c
   140014d55:	mov    WORD PTR [rbx-0x2],ax
   140014d59:	xor    eax,eax
   140014d5b:	mov    rcx,QWORD PTR [rsp+0x80]
   140014d63:	xor    rcx,rsp
   140014d66:	call   0x1400265a0
   140014d6b:	mov    rbx,QWORD PTR [rsp+0xc8]
   140014d73:	add    rsp,0x90
   140014d7a:	pop    r15
   140014d7c:	pop    r14
   140014d7e:	pop    rdi
   140014d7f:	pop    rsi
   140014d80:	pop    rbp
   140014d81:	ret    
   140014d82:	int3   
   140014d83:	int3   
   140014d84:	mov    rax,rsp
   140014d87:	mov    QWORD PTR [rax+0x8],rcx
   140014d8b:	push   rdi
   140014d8c:	sub    rsp,0x30
   140014d90:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140014d98:	mov    QWORD PTR [rax+0x10],rbx
   140014d9c:	mov    QWORD PTR [rax+0x18],rbp
   140014da0:	mov    QWORD PTR [rax+0x20],rsi
   140014da4:	movsxd rsi,r8d
   140014da7:	mov    rbx,rcx
   140014daa:	lea    rcx,[rip+0x45577]        # 0x14005a328
   140014db1:	mov    rax,QWORD PTR [rip+0x45570]        # 0x14005a328
   140014db8:	call   QWORD PTR [rax+0x18]
   140014dbb:	add    rax,0x18
   140014dbf:	mov    QWORD PTR [rbx],rax
   140014dc2:	xor    ebp,ebp
   140014dc4:	test   esi,esi
   140014dc6:	jle    0x140014e18
   140014dc8:	mov    rax,QWORD PTR [rbx]
   140014dcb:	lea    ecx,[rbp+0x1]
   140014dce:	sub    ecx,DWORD PTR [rax-0x8]
   140014dd1:	mov    eax,DWORD PTR [rax-0xc]
   140014dd4:	sub    eax,esi
   140014dd6:	or     eax,ecx
   140014dd8:	jge    0x140014de4
   140014dda:	mov    edx,esi
   140014ddc:	mov    rcx,rbx
   140014ddf:	call   0x140007098
   140014de4:	test   esi,esi
   140014de6:	jle    0x140014df9
   140014de8:	mov    eax,0x64
   140014ded:	movzx  eax,ax
   140014df0:	mov    rdi,QWORD PTR [rbx]
   140014df3:	mov    rcx,rsi
   140014df6:	rep stos WORD PTR es:[rdi],ax
   140014df9:	mov    rax,QWORD PTR [rbx]
   140014dfc:	cmp    esi,DWORD PTR [rax-0xc]
   140014dff:	jg     0x140014e0d
   140014e01:	mov    DWORD PTR [rax-0x10],esi
   140014e04:	mov    rax,QWORD PTR [rbx]
   140014e07:	mov    WORD PTR [rax+rsi*2],bp
   140014e0b:	jmp    0x140014e18
   140014e0d:	mov    ecx,0x80070057
   140014e12:	call   0x14000400c
   140014e17:	nop
   140014e18:	mov    rax,rbx
   140014e1b:	mov    rbx,QWORD PTR [rsp+0x48]
   140014e20:	mov    rbp,QWORD PTR [rsp+0x50]
   140014e25:	mov    rsi,QWORD PTR [rsp+0x58]
   140014e2a:	add    rsp,0x30
   140014e2e:	pop    rdi
   140014e2f:	ret    
   140014e30:	mov    QWORD PTR [rsp+0x8],rbx
   140014e35:	mov    QWORD PTR [rsp+0x10],rbp
   140014e3a:	mov    QWORD PTR [rsp+0x18],rsi
   140014e3f:	push   rdi
   140014e40:	sub    rsp,0x20
   140014e44:	mov    rbx,QWORD PTR [rcx]
   140014e47:	mov    rdi,rcx
   140014e4a:	movzx  ecx,WORD PTR [rbx]
   140014e4d:	call   0x14002ff14
   140014e52:	xor    ebp,ebp
   140014e54:	jmp    0x140014e62
   140014e56:	add    rbx,0x2
   140014e5a:	movzx  ecx,WORD PTR [rbx]
   140014e5d:	call   0x14002ff14
   140014e62:	test   eax,eax
   140014e64:	jne    0x140014e56
   140014e66:	mov    rax,QWORD PTR [rdi]
   140014e69:	cmp    rbx,rax
   140014e6c:	je     0x140014ef5
   140014e72:	mov    edx,DWORD PTR [rax-0x10]
   140014e75:	sub    rbx,rax
   140014e78:	sar    rbx,1
   140014e7b:	test   edx,edx
   140014e7d:	js     0x140014f0d
   140014e83:	mov    ecx,0x1
   140014e88:	sub    ecx,DWORD PTR [rax-0x8]
   140014e8b:	mov    eax,DWORD PTR [rax-0xc]
   140014e8e:	sub    eax,edx
   140014e90:	or     ecx,eax
   140014e92:	jge    0x140014e9c
   140014e94:	mov    rcx,rdi
   140014e97:	call   0x140007098
   140014e9c:	mov    rcx,QWORD PTR [rdi]
   140014e9f:	mov    edx,DWORD PTR [rcx-0x10]
   140014ea2:	mov    esi,edx
   140014ea4:	sub    esi,ebx
   140014ea6:	lea    eax,[rsi+0x1]
   140014ea9:	movsxd r9,eax
   140014eac:	movsxd rax,ebx
   140014eaf:	lea    r8,[rcx+rax*2]
   140014eb3:	lea    eax,[rdx+0x1]
   140014eb6:	add    r9,r9
   140014eb9:	movsxd rdx,eax
   140014ebc:	add    rdx,rdx
   140014ebf:	call   0x140026edc
   140014ec4:	test   eax,eax
   140014ec6:	je     0x140014edc
   140014ec8:	cmp    eax,0xc
   140014ecb:	je     0x140014f2e
   140014ecd:	cmp    eax,0x16
   140014ed0:	je     0x140014f23
   140014ed2:	cmp    eax,0x22
   140014ed5:	je     0x140014f23
   140014ed7:	cmp    eax,0x50
   140014eda:	jne    0x140014f18
   140014edc:	test   esi,esi
   140014ede:	js     0x140014f39
   140014ee0:	mov    rax,QWORD PTR [rdi]
   140014ee3:	cmp    esi,DWORD PTR [rax-0xc]
   140014ee6:	jg     0x140014f39
   140014ee8:	mov    DWORD PTR [rax-0x10],esi
   140014eeb:	mov    rax,QWORD PTR [rdi]
   140014eee:	movsxd rcx,esi
   140014ef1:	mov    WORD PTR [rax+rcx*2],bp
   140014ef5:	mov    rbx,QWORD PTR [rsp+0x30]
   140014efa:	mov    rbp,QWORD PTR [rsp+0x38]
   140014eff:	mov    rsi,QWORD PTR [rsp+0x40]
   140014f04:	mov    rax,rdi
   140014f07:	add    rsp,0x20
   140014f0b:	pop    rdi
   140014f0c:	ret    
   140014f0d:	mov    ecx,0x80070057
   140014f12:	call   0x14000400c
   140014f17:	int3   
   140014f18:	mov    ecx,0x80004005
   140014f1d:	call   0x14000400c
   140014f22:	int3   
   140014f23:	mov    ecx,0x80070057
   140014f28:	call   0x14000400c
   140014f2d:	int3   
   140014f2e:	mov    ecx,0x8007000e
   140014f33:	call   0x14000400c
   140014f38:	int3   
   140014f39:	mov    ecx,0x80070057
   140014f3e:	call   0x14000400c
   140014f43:	int3   
   140014f44:	mov    rcx,QWORD PTR [rcx]
   140014f47:	jmp    0x1400273dc
   140014f4c:	rex push rbx
   140014f4e:	sub    rsp,0x20
   140014f52:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   140014f56:	mov    rbx,rcx
   140014f59:	je     0x140014f68
   140014f5b:	mov    rcx,QWORD PTR [rcx]
   140014f5e:	call   QWORD PTR [rip+0x2c424]        # 0x140041388
   140014f64:	or     QWORD PTR [rbx],0xffffffffffffffff
   140014f68:	add    rsp,0x20
   140014f6c:	pop    rbx
   140014f6d:	ret    
   140014f6e:	int3   
   140014f6f:	int3   
   140014f70:	mov    QWORD PTR [rsp+0x8],rcx
   140014f75:	sub    rsp,0x18
   140014f79:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140014f81:	lea    rax,[rip+0x314e8]        # 0x140046470
   140014f88:	mov    QWORD PTR [rcx],rax
   140014f8b:	lea    rax,[rip+0x3129e]        # 0x140046230
   140014f92:	mov    QWORD PTR [rcx+0x8],rax
   140014f96:	xor    edx,edx
   140014f98:	mov    QWORD PTR [rcx+0x10],rdx
   140014f9c:	lea    rax,[rip+0x3154d]        # 0x1400464f0
   140014fa3:	mov    QWORD PTR [rcx],rax
   140014fa6:	lea    rax,[rip+0x3155b]        # 0x140046508
   140014fad:	mov    QWORD PTR [rcx+0x8],rax
   140014fb1:	mov    QWORD PTR [rcx+0x18],rdx
   140014fb5:	mov    QWORD PTR [rcx+0x20],rdx
   140014fb9:	mov    DWORD PTR [rcx+0x28],edx
   140014fbc:	mov    QWORD PTR [rcx+0x30],rdx
   140014fc0:	mov    BYTE PTR [rcx+0x38],dl
   140014fc3:	mov    rax,rcx
   140014fc6:	add    rsp,0x18
   140014fca:	ret    
   140014fcb:	int3   
   140014fcc:	mov    QWORD PTR [rsp+0x8],rbx
   140014fd1:	push   rdi
   140014fd2:	sub    rsp,0x20
   140014fd6:	mov    ebx,edx
   140014fd8:	mov    rdi,rcx
   140014fdb:	call   0x140014ffc
   140014fe0:	test   bl,0x1
   140014fe3:	je     0x140014fed
   140014fe5:	mov    rcx,rdi
   140014fe8:	call   0x14002657c
   140014fed:	mov    rax,rdi
   140014ff0:	mov    rbx,QWORD PTR [rsp+0x30]
   140014ff5:	add    rsp,0x20
   140014ff9:	pop    rdi
   140014ffa:	ret    
   140014ffb:	int3   
   140014ffc:	mov    QWORD PTR [rsp+0x8],rcx
   140015001:	push   rbx
   140015002:	sub    rsp,0x30
   140015006:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001500f:	mov    rbx,rcx
   140015012:	lea    rax,[rip+0x314d7]        # 0x1400464f0
   140015019:	mov    QWORD PTR [rcx],rax
   14001501c:	lea    rax,[rip+0x314e5]        # 0x140046508
   140015023:	mov    QWORD PTR [rcx+0x8],rax
   140015027:	cmp    QWORD PTR [rcx+0x18],0x0
   14001502c:	je     0x140015078
   14001502e:	cmp    DWORD PTR [rcx+0x24],0x0
   140015032:	jne    0x140015078
   140015034:	cmp    DWORD PTR [rcx+0x30],0x0
   140015038:	je     0x14001506e
   14001503a:	cmp    DWORD PTR [rcx+0x20],0x0
   14001503e:	jne    0x14001506e
   140015040:	cmp    DWORD PTR [rip+0x47a85],0x0        # 0x14005cacc
   140015047:	jne    0x140015058
   140015049:	call   0x140012b10
   14001504e:	mov    DWORD PTR [rip+0x47a74],0x1        # 0x14005cacc
   140015058:	cmp    DWORD PTR [rip+0x47b15],0x0        # 0x14005cb74
   14001505f:	je     0x14001506e
   140015061:	mov    edx,DWORD PTR [rbx+0x34]
   140015064:	mov    rcx,QWORD PTR [rbx+0x18]
   140015068:	call   QWORD PTR [rip+0x2c5ca]        # 0x140041638
   14001506e:	mov    rcx,QWORD PTR [rbx+0x18]
   140015072:	call   QWORD PTR [rip+0x2c5b8]        # 0x140041630
   140015078:	mov    rcx,QWORD PTR [rbx+0x10]
   14001507c:	test   rcx,rcx
   14001507f:	je     0x140015087
   140015081:	call   QWORD PTR [rip+0x2c301]        # 0x140041388
   140015087:	and    QWORD PTR [rbx+0x10],0x0
   14001508c:	and    QWORD PTR [rbx+0x18],0x0
   140015091:	lea    rax,[rip+0x31198]        # 0x140046230
   140015098:	mov    QWORD PTR [rbx+0x8],rax
   14001509c:	lea    rax,[rip+0x313cd]        # 0x140046470
   1400150a3:	mov    QWORD PTR [rbx],rax
   1400150a6:	add    rsp,0x30
   1400150aa:	pop    rbx
   1400150ab:	ret    
   1400150ac:	mov    QWORD PTR [rsp+0x10],rbx
   1400150b1:	mov    QWORD PTR [rsp+0x18],rbp
   1400150b6:	mov    QWORD PTR [rsp+0x20],rsi
   1400150bb:	push   rdi
   1400150bc:	sub    rsp,0x20
   1400150c0:	mov    ebp,DWORD PTR [rsp+0x50]
   1400150c4:	xor    eax,eax
   1400150c6:	mov    DWORD PTR [rcx+0x34],r8d
   1400150ca:	cmp    DWORD PTR [rsp+0x58],eax
   1400150ce:	lea    r8,[rcx+0x38]
   1400150d2:	mov    ebx,0x104
   1400150d7:	setne  al
   1400150da:	mov    rsi,rdx
   1400150dd:	mov    rdi,rcx
   1400150e0:	mov    DWORD PTR [rcx+0x2c],ebp
   1400150e3:	mov    DWORD PTR [rcx+0x28],r9d
   1400150e7:	mov    DWORD PTR [rcx+0x30],eax
   1400150ea:	mov    ecx,ebx
   1400150ec:	sub    rdx,r8
   1400150ef:	lea    rax,[rcx+0x7ffffefa]
   1400150f6:	test   rax,rax
   1400150f9:	je     0x14001510e
   1400150fb:	mov    al,BYTE PTR [rdx+r8*1]
   1400150ff:	test   al,al
   140015101:	je     0x14001510e
   140015103:	mov    BYTE PTR [r8],al
   140015106:	inc    r8
   140015109:	dec    rcx
   14001510c:	jne    0x1400150ef
   14001510e:	test   rcx,rcx
   140015111:	jne    0x140015116
   140015113:	dec    r8
   140015116:	mov    BYTE PTR [r8],0x0
   14001511a:	and    QWORD PTR [rdi+0x18],0x0
   14001511f:	mov    rcx,rdi
   140015122:	call   0x1400151ac
   140015127:	test   eax,eax
   140015129:	jne    0x140015195
   14001512b:	cmp    ebp,0x1
   14001512e:	jne    0x140015195
   140015130:	test   rsi,rsi
   140015133:	je     0x140015155
   140015135:	mov    rcx,rbx
   140015138:	mov    rdx,rsi
   14001513b:	cmp    BYTE PTR [rdx],al
   14001513d:	je     0x140015147
   14001513f:	inc    rdx
   140015142:	dec    rcx
   140015145:	jne    0x14001513b
   140015147:	test   rcx,rcx
   14001514a:	jne    0x140015150
   14001514c:	xor    ebx,ebx
   14001514e:	jmp    0x14001515a
   140015150:	sub    rbx,rcx
   140015153:	jmp    0x14001515f
   140015155:	mov    rbx,QWORD PTR [rsp+0x30]
   14001515a:	mov    eax,0x80070057
   14001515f:	test   eax,eax
   140015161:	js     0x140015195
   140015163:	mov    r8d,0x7
   140015169:	cmp    rbx,r8
   14001516c:	jbe    0x140015195
   14001516e:	lea    rdx,[rip+0x3136b]        # 0x1400464e0
   140015175:	mov    rcx,rsi
   140015178:	call   0x140034010
   14001517d:	test   eax,eax
   14001517f:	jne    0x140015195
   140015181:	mov    rcx,rdi
   140015184:	call   0x140015438
   140015189:	and    DWORD PTR [rdi+0x2c],0x0
   14001518d:	mov    rcx,rdi
   140015190:	call   0x1400151ac
   140015195:	mov    rbx,QWORD PTR [rsp+0x38]
   14001519a:	mov    rbp,QWORD PTR [rsp+0x40]
   14001519f:	mov    rsi,QWORD PTR [rsp+0x48]
   1400151a4:	add    rsp,0x20
   1400151a8:	pop    rdi
   1400151a9:	ret    
   1400151aa:	int3   
   1400151ab:	int3   
   1400151ac:	mov    rax,rsp
   1400151af:	mov    QWORD PTR [rax+0x10],rbx
   1400151b3:	mov    QWORD PTR [rax+0x18],rsi
   1400151b7:	mov    QWORD PTR [rax+0x20],rdi
   1400151bb:	push   rbp
   1400151bc:	push   r12
   1400151be:	push   r13
   1400151c0:	push   r14
   1400151c2:	push   r15
   1400151c4:	lea    rbp,[rax-0x198]
   1400151cb:	sub    rsp,0x270
   1400151d2:	mov    rax,QWORD PTR [rip+0x43eaf]        # 0x140059088
   1400151d9:	xor    rax,rsp
   1400151dc:	mov    QWORD PTR [rbp+0x160],rax
   1400151e3:	xor    r12d,r12d
   1400151e6:	mov    rbx,rcx
   1400151e9:	mov    ecx,DWORD PTR [rcx+0x28]
   1400151ec:	mov    r8d,r12d
   1400151ef:	mov    esi,r12d
   1400151f2:	mov    edi,r12d
   1400151f5:	test   ecx,ecx
   1400151f7:	je     0x14001520b
   1400151f9:	dec    ecx
   1400151fb:	jne    0x140015219
   1400151fd:	lea    esi,[rcx+0x4]
   140015200:	lea    edi,[rcx+0x6]
   140015203:	mov    r8d,0x4000004
   140015209:	jmp    0x140015219
   14001520b:	mov    esi,0x2
   140015210:	mov    r8d,0x4000002
   140015216:	lea    edi,[rsi+0x2]
   140015219:	mov    r13d,0x1
   14001521f:	cmp    DWORD PTR [rbx+0x2c],r13d
   140015223:	jne    0x14001527d
   140015225:	mov    eax,DWORD PTR [rbx+0x34]
   140015228:	lea    r15,[rbx+0x38]
   14001522c:	xor    r9d,r9d
   14001522f:	xor    edx,edx
   140015231:	or     rcx,0xffffffffffffffff
   140015235:	mov    QWORD PTR [rsp+0x28],r15
   14001523a:	mov    DWORD PTR [rsp+0x20],eax
   14001523e:	call   QWORD PTR [rip+0x2c404]        # 0x140041648
   140015244:	mov    QWORD PTR [rbx+0x10],rax
   140015248:	call   QWORD PTR [rip+0x2c18a]        # 0x1400413d8
   14001524e:	mov    r14d,eax
   140015251:	cmp    eax,0xb7
   140015256:	jne    0x140015271
   140015258:	mov    rcx,QWORD PTR [rbx+0x10]
   14001525c:	call   QWORD PTR [rip+0x2c126]        # 0x140041388
   140015262:	mov    QWORD PTR [rbx+0x10],r12
   140015266:	cmp    QWORD PTR [rbx+0x10],r12
   14001526a:	jne    0x1400152a5
   14001526c:	jmp    0x140015390
   140015271:	cmp    eax,0x5
   140015274:	jne    0x140015266
   140015276:	xor    eax,eax
   140015278:	jmp    0x140015360
   14001527d:	cmp    DWORD PTR [rbx+0x2c],r12d
   140015281:	jne    0x1400152a5
   140015283:	lea    r8,[rbx+0x38]
   140015287:	xor    edx,edx
   140015289:	mov    ecx,edi
   14001528b:	call   QWORD PTR [rip+0x2c3c7]        # 0x140041658
   140015291:	mov    QWORD PTR [rbx+0x10],rax
   140015295:	call   QWORD PTR [rip+0x2c13d]        # 0x1400413d8
   14001529b:	cmp    QWORD PTR [rbx+0x10],r12
   14001529f:	je     0x1400152b4
   1400152a1:	mov    DWORD PTR [rbx+0x20],r13d
   1400152a5:	cmp    QWORD PTR [rbx+0x18],r12
   1400152a9:	je     0x1400152dc
   1400152ab:	mov    DWORD PTR [rbx+0x24],r13d
   1400152af:	jmp    0x14001535d
   1400152b4:	lea    rdx,[rip+0x40f8d]        # 0x140056248
   1400152bb:	lea    rcx,[rsp+0x30]
   1400152c0:	cmp    eax,0x5
   1400152c3:	je     0x1400153b2
   1400152c9:	mov    DWORD PTR [rsp+0x30],r12d
   1400152ce:	cmp    eax,0x2
   1400152d1:	je     0x1400153cf
   1400152d7:	jmp    0x1400153e7
   1400152dc:	mov    eax,DWORD PTR [rbx+0x34]
   1400152df:	mov    rcx,QWORD PTR [rbx+0x10]
   1400152e3:	xor    r9d,r9d
   1400152e6:	xor    r8d,r8d
   1400152e9:	mov    edx,edi
   1400152eb:	mov    QWORD PTR [rsp+0x20],rax
   1400152f0:	call   QWORD PTR [rip+0x2c332]        # 0x140041628
   1400152f6:	mov    QWORD PTR [rbx+0x18],rax
   1400152fa:	test   rax,rax
   1400152fd:	je     0x1400153ff
   140015303:	cmp    DWORD PTR [rbx+0x20],r12d
   140015307:	jne    0x14001531e
   140015309:	mov    edx,DWORD PTR [rbx+0x34]
   14001530c:	mov    r9d,esi
   14001530f:	mov    r8d,0x1000
   140015315:	mov    rcx,rax
   140015318:	call   QWORD PTR [rip+0x2c322]        # 0x140041640
   14001531e:	cmp    DWORD PTR [rbx+0x30],r12d
   140015322:	je     0x14001535d
   140015324:	cmp    DWORD PTR [rbx+0x20],r12d
   140015328:	jne    0x14001535d
   14001532a:	cmp    DWORD PTR [rip+0x4779b],r12d        # 0x14005cacc
   140015331:	jne    0x14001533f
   140015333:	call   0x140012b10
   140015338:	mov    DWORD PTR [rip+0x4778d],r13d        # 0x14005cacc
   14001533f:	cmp    DWORD PTR [rip+0x4782e],r12d        # 0x14005cb74
   140015346:	je     0x14001535d
   140015348:	mov    edx,DWORD PTR [rbx+0x34]
   14001534b:	mov    rcx,QWORD PTR [rbx+0x18]
   14001534f:	call   QWORD PTR [rip+0x2c2fb]        # 0x140041650
   140015355:	test   eax,eax
   140015357:	jne    0x14001535d
   140015359:	mov    DWORD PTR [rbx+0x30],r12d
   14001535d:	mov    eax,r13d
   140015360:	mov    rcx,QWORD PTR [rbp+0x160]
   140015367:	xor    rcx,rsp
   14001536a:	call   0x1400265a0
   14001536f:	lea    r11,[rsp+0x270]
   140015377:	mov    rbx,QWORD PTR [r11+0x38]
   14001537b:	mov    rsi,QWORD PTR [r11+0x40]
   14001537f:	mov    rdi,QWORD PTR [r11+0x48]
   140015383:	mov    rsp,r11
   140015386:	pop    r15
   140015388:	pop    r14
   14001538a:	pop    r13
   14001538c:	pop    r12
   14001538e:	pop    rbp
   14001538f:	ret    
   140015390:	lea    rcx,[rsp+0x40]
   140015395:	mov    r8,r15
   140015398:	mov    edx,r14d
   14001539b:	call   0x140010930
   1400153a0:	lea    rdx,[rip+0x40e31]        # 0x1400561d8
   1400153a7:	lea    rcx,[rsp+0x40]
   1400153ac:	call   0x140029fe8
   1400153b1:	int3   
   1400153b2:	mov    DWORD PTR [rsp+0x30],r13d
   1400153b7:	mov    DWORD PTR [rsp+0x34],0xe1230fb6
   1400153bf:	mov    rax,QWORD PTR [rsp+0x30]
   1400153c4:	mov    QWORD PTR [rsp+0x30],rax
   1400153c9:	call   0x140029fe8
   1400153ce:	int3   
   1400153cf:	mov    DWORD PTR [rsp+0x34],0xe1232742
   1400153d7:	mov    rax,QWORD PTR [rsp+0x30]
   1400153dc:	mov    QWORD PTR [rsp+0x30],rax
   1400153e1:	call   0x140029fe8
   1400153e6:	int3   
   1400153e7:	mov    DWORD PTR [rsp+0x34],0xe1232738
   1400153ef:	mov    rax,QWORD PTR [rsp+0x30]
   1400153f4:	mov    QWORD PTR [rsp+0x30],rax
   1400153f9:	call   0x140029fe8
   1400153fe:	int3   
   1400153ff:	mov    rcx,QWORD PTR [rbx+0x10]
   140015403:	call   QWORD PTR [rip+0x2bf7f]        # 0x140041388
   140015409:	mov    DWORD PTR [rsp+0x30],r12d
   14001540e:	mov    DWORD PTR [rsp+0x34],0xe1232739
   140015416:	mov    rax,QWORD PTR [rsp+0x30]
   14001541b:	lea    rdx,[rip+0x40e26]        # 0x140056248
   140015422:	lea    rcx,[rsp+0x30]
   140015427:	mov    QWORD PTR [rsp+0x30],rax
   14001542c:	mov    QWORD PTR [rbx+0x10],r12
   140015430:	call   0x140029fe8
   140015435:	int3   
   140015436:	int3   
   140015437:	int3   
   140015438:	rex push rbp
   14001543a:	lea    rbp,[rsp-0x90]
   140015442:	sub    rsp,0x190
   140015449:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140015452:	mov    DWORD PTR [rsp+0x60],0x3
   14001545a:	mov    eax,DWORD PTR [rcx+0x34]
   14001545d:	mov    DWORD PTR [rsp+0x64],eax
   140015461:	mov    eax,DWORD PTR [rcx+0x28]
   140015464:	mov    DWORD PTR [rbp+0x6c],eax
   140015467:	mov    eax,DWORD PTR [rcx+0x30]
   14001546a:	mov    DWORD PTR [rbp+0x70],eax
   14001546d:	lea    r9,[rcx+0x38]
   140015471:	mov    edx,0x104
   140015476:	lea    rcx,[rsp+0x68]
   14001547b:	xor    r8d,r8d
   14001547e:	lea    rax,[rsp+0x68]
   140015483:	sub    r9,rax
   140015486:	lea    rax,[rdx+0x7ffffefa]
   14001548d:	test   rax,rax
   140015490:	je     0x1400154a4
   140015492:	mov    al,BYTE PTR [r9+rcx*1]
   140015496:	test   al,al
   140015498:	je     0x1400154a4
   14001549a:	mov    BYTE PTR [rcx],al
   14001549c:	inc    rcx
   14001549f:	dec    rdx
   1400154a2:	jne    0x140015486
   1400154a4:	test   rdx,rdx
   1400154a7:	jne    0x1400154b2
   1400154a9:	dec    rcx
   1400154ac:	mov    r8d,0x8007007a
   1400154b2:	mov    BYTE PTR [rcx],0x0
   1400154b5:	test   r8d,r8d
   1400154b8:	jns    0x1400154ed
   1400154ba:	and    DWORD PTR [rbp+0xa0],0x0
   1400154c1:	mov    DWORD PTR [rbp+0xa4],0xe1232738
   1400154cb:	mov    rax,QWORD PTR [rbp+0xa0]
   1400154d2:	mov    QWORD PTR [rbp+0xa0],rax
   1400154d9:	lea    rdx,[rip+0x40d68]        # 0x140056248
   1400154e0:	lea    rcx,[rbp+0xa0]
   1400154e7:	call   0x140029fe8
   1400154ec:	int3   
   1400154ed:	lea    rax,[rsp+0x60]
   1400154f2:	test   rax,rax
   1400154f5:	je     0x140015503
   1400154f7:	lea    rcx,[rsp+0x60]
   1400154fc:	call   0x1400256cc
   140015501:	jmp    0x140015508
   140015503:	mov    eax,0xe1230554
   140015508:	test   eax,eax
   14001550a:	je     0x14001554e
   14001550c:	mov    DWORD PTR [rsp+0x20],0x1
   140015514:	mov    DWORD PTR [rsp+0x24],eax
   140015518:	and    QWORD PTR [rsp+0x28],0x0
   14001551e:	and    QWORD PTR [rsp+0x30],0x0
   140015524:	and    QWORD PTR [rsp+0x38],0x0
   14001552a:	and    QWORD PTR [rsp+0x40],0x0
   140015530:	and    QWORD PTR [rsp+0x48],0x0
   140015536:	and    QWORD PTR [rsp+0x50],0x0
   14001553c:	lea    rdx,[rip+0x40aad]        # 0x140055ff0
   140015543:	lea    rcx,[rsp+0x20]
   140015548:	call   0x140029fe8
   14001554d:	int3   
   14001554e:	add    rsp,0x190
   140015555:	pop    rbp
   140015556:	ret    
   140015557:	int3   
   140015558:	mov    rax,QWORD PTR [rcx+0x18]
   14001555c:	ret    
   14001555d:	int3   
   14001555e:	int3   
   14001555f:	int3   
   140015560:	sub    rcx,0x8
   140015564:	jmp    0x140014fcc
   140015569:	int3   
   14001556a:	int3   
   14001556b:	int3   
   14001556c:	mov    QWORD PTR [rsp+0x8],rbx
   140015571:	push   rdi
   140015572:	sub    rsp,0x20
   140015576:	lea    rbx,[rcx+0x80]
   14001557d:	mov    edi,0x3
   140015582:	mov    rcx,QWORD PTR [rbx-0x18]
   140015586:	test   rcx,rcx
   140015589:	je     0x140015591
   14001558b:	call   QWORD PTR [rip+0x2bdf7]        # 0x140041388
   140015591:	mov    rcx,QWORD PTR [rbx]
   140015594:	test   rcx,rcx
   140015597:	je     0x14001559f
   140015599:	call   QWORD PTR [rip+0x2bde9]        # 0x140041388
   14001559f:	add    rbx,0x8
   1400155a3:	dec    rdi
   1400155a6:	jne    0x140015582
   1400155a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400155ad:	add    rsp,0x20
   1400155b1:	pop    rdi
   1400155b2:	ret    
   1400155b3:	int3   
   1400155b4:	mov    DWORD PTR [rsp+0x10],edx
   1400155b8:	push   rbx
   1400155b9:	sub    rsp,0x30
   1400155bd:	mov    rcx,QWORD PTR [rcx+0x78]
   1400155c1:	xor    ebx,ebx
   1400155c3:	test   rcx,rcx
   1400155c6:	jne    0x1400155cf
   1400155c8:	mov    eax,0x80070057
   1400155cd:	jmp    0x140015610
   1400155cf:	lea    rax,[rsp+0x48]
   1400155d4:	xor    r9d,r9d
   1400155d7:	xor    r8d,r8d
   1400155da:	xor    edx,edx
   1400155dc:	mov    QWORD PTR [rsp+0x28],rbx
   1400155e1:	mov    QWORD PTR [rsp+0x20],rax
   1400155e6:	call   QWORD PTR [rip+0x2c074]        # 0x140041660
   1400155ec:	test   eax,eax
   1400155ee:	jne    0x140015607
   1400155f0:	call   QWORD PTR [rip+0x2bde2]        # 0x1400413d8
   1400155f6:	mov    ecx,eax
   1400155f8:	movzx  eax,ax
   1400155fb:	or     eax,0x80070000
   140015600:	test   ecx,ecx
   140015602:	cmovle eax,ecx
   140015605:	jmp    0x140015610
   140015607:	cmp    DWORD PTR [rsp+0x48],ebx
   14001560b:	sete   bl
   14001560e:	mov    eax,ebx
   140015610:	add    rsp,0x30
   140015614:	pop    rbx
   140015615:	ret    
   140015616:	int3   
   140015617:	int3   
   140015618:	mov    QWORD PTR [rsp+0x20],r9
   14001561d:	push   rbx
   14001561e:	push   rsi
   14001561f:	push   rdi
   140015620:	sub    rsp,0x90
   140015627:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015630:	mov    rax,QWORD PTR [rip+0x43a51]        # 0x140059088
   140015637:	xor    rax,rsp
   14001563a:	mov    QWORD PTR [rsp+0x80],rax
   140015642:	mov    rbx,r8
   140015645:	mov    dil,dl
   140015648:	cmp    DWORD PTR [rip+0x45501],0x0        # 0x14005ab50
   14001564f:	je     0x1400156d8
   140015655:	mov    esi,0x50
   14001565a:	mov    r8d,esi
   14001565d:	xor    edx,edx
   14001565f:	lea    rcx,[rsp+0x30]
   140015664:	call   0x14002bb90
   140015669:	mov    WORD PTR [rsp+0x30],si
   14001566e:	movaps xmm0,XMMWORD PTR [rip+0x454ab]        # 0x14005ab20
   140015675:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   14001567b:	mov    DWORD PTR [rsp+0x5c],0x120000
   140015683:	mov    BYTE PTR [rsp+0x34],dil
   140015688:	lea    rax,[rsp+0xc8]
   140015690:	mov    QWORD PTR [rsp+0x60],rax
   140015695:	mov    DWORD PTR [rsp+0x68],0x8
   14001569d:	test   rbx,rbx
   1400156a0:	je     0x1400156bb
   1400156a2:	mov    QWORD PTR [rsp+0x70],rbx
   1400156a7:	mov    rcx,rbx
   1400156aa:	call   QWORD PTR [rip+0x2bfc0]        # 0x140041670
   1400156b0:	inc    eax
   1400156b2:	add    rax,rax
   1400156b5:	mov    DWORD PTR [rsp+0x78],eax
   1400156b9:	jmp    0x1400156c5
   1400156bb:	mov    eax,0x40
   1400156c0:	mov    WORD PTR [rsp+0x30],ax
   1400156c5:	lea    rdx,[rsp+0x30]
   1400156ca:	mov    rcx,QWORD PTR [rip+0x45467]        # 0x14005ab38
   1400156d1:	call   QWORD PTR [rip+0x2ba19]        # 0x1400410f0
   1400156d7:	nop
   1400156d8:	mov    rcx,QWORD PTR [rsp+0x80]
   1400156e0:	xor    rcx,rsp
   1400156e3:	call   0x1400265a0
   1400156e8:	add    rsp,0x90
   1400156ef:	pop    rdi
   1400156f0:	pop    rsi
   1400156f1:	pop    rbx
   1400156f2:	ret    
   1400156f3:	int3   
   1400156f4:	rex push rbx
   1400156f6:	sub    rsp,0x20
   1400156fa:	mov    rbx,rdx
   1400156fd:	sub    ecx,0x4
   140015700:	je     0x14001570b
   140015702:	dec    ecx
   140015704:	jne    0x140015738
   140015706:	and    DWORD PTR [rdx+0x40],ecx
   140015709:	jmp    0x140015738
   14001570b:	mov    rcx,r9
   14001570e:	mov    DWORD PTR [rdx+0x40],0x1
   140015715:	call   QWORD PTR [rip+0x2b9dd]        # 0x1400410f8
   14001571b:	mov    rcx,rax
   14001571e:	mov    QWORD PTR [rbx+0x28],rax
   140015722:	call   QWORD PTR [rip+0x2b9b8]        # 0x1400410e0
   140015728:	mov    rcx,QWORD PTR [rbx+0x28]
   14001572c:	mov    BYTE PTR [rbx+0x3c],al
   14001572f:	call   QWORD PTR [rip+0x2b9cb]        # 0x140041100
   140015735:	mov    DWORD PTR [rbx+0x38],eax
   140015738:	mov    eax,0x57
   14001573d:	add    rsp,0x20
   140015741:	pop    rbx
   140015742:	ret    
   140015743:	int3   
   140015744:	mov    QWORD PTR [rsp+0x8],rbx
   140015749:	push   rdi
   14001574a:	sub    rsp,0x20
   14001574e:	mov    ebx,edx
   140015750:	mov    rdi,rcx
   140015753:	call   0x140015774
   140015758:	test   bl,0x1
   14001575b:	je     0x140015765
   14001575d:	mov    rcx,rdi
   140015760:	call   0x14002657c
   140015765:	mov    rax,rdi
   140015768:	mov    rbx,QWORD PTR [rsp+0x30]
   14001576d:	add    rsp,0x20
   140015771:	pop    rdi
   140015772:	ret    
   140015773:	int3   
   140015774:	mov    QWORD PTR [rsp+0x8],rcx
   140015779:	push   rbx
   14001577a:	sub    rsp,0x30
   14001577e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015787:	mov    rbx,rcx
   14001578a:	lea    rax,[rip+0x30d97]        # 0x140046528
   140015791:	mov    QWORD PTR [rcx],rax
   140015794:	cmp    DWORD PTR [rcx+0x10],0x0
   140015798:	je     0x1400157a4
   14001579a:	mov    rcx,QWORD PTR [rcx+0x8]
   14001579e:	call   QWORD PTR [rip+0x2bed4]        # 0x140041678
   1400157a4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400157a8:	call   QWORD PTR [rip+0x2bbda]        # 0x140041388
   1400157ae:	and    QWORD PTR [rbx+0x8],0x0
   1400157b3:	lea    rax,[rip+0x30a76]        # 0x140046230
   1400157ba:	mov    QWORD PTR [rbx],rax
   1400157bd:	add    rsp,0x30
   1400157c1:	pop    rbx
   1400157c2:	ret    
   1400157c3:	int3   
   1400157c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400157c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400157ce:	push   rdi
   1400157cf:	sub    rsp,0x20
   1400157d3:	mov    rdi,rcx
   1400157d6:	mov    r9,rdx
   1400157d9:	xor    r8d,r8d
   1400157dc:	xor    edx,edx
   1400157de:	xor    ecx,ecx
   1400157e0:	call   QWORD PTR [rip+0x2be9a]        # 0x140041680
   1400157e6:	mov    QWORD PTR [rdi+0x8],rax
   1400157ea:	call   QWORD PTR [rip+0x2bbe8]        # 0x1400413d8
   1400157f0:	mov    esi,eax
   1400157f2:	call   QWORD PTR [rip+0x2bbe0]        # 0x1400413d8
   1400157f8:	xor    ebx,ebx
   1400157fa:	cmp    eax,0xb7
   1400157ff:	jne    0x14001580f
   140015801:	mov    rcx,QWORD PTR [rdi+0x8]
   140015805:	call   QWORD PTR [rip+0x2bb7d]        # 0x140041388
   14001580b:	mov    QWORD PTR [rdi+0x8],rbx
   14001580f:	mov    ecx,esi
   140015811:	call   QWORD PTR [rip+0x2bb09]        # 0x140041320
   140015817:	cmp    QWORD PTR [rdi+0x8],rbx
   14001581b:	mov    rsi,QWORD PTR [rsp+0x38]
   140015820:	setne  bl
   140015823:	mov    eax,ebx
   140015825:	mov    rbx,QWORD PTR [rsp+0x30]
   14001582a:	add    rsp,0x20
   14001582e:	pop    rdi
   14001582f:	ret    
   140015830:	rex push rbx
   140015832:	sub    rsp,0x20
   140015836:	mov    rbx,rcx
   140015839:	mov    r8,rdx
   14001583c:	xor    edx,edx
   14001583e:	mov    ecx,r9d
   140015841:	call   QWORD PTR [rip+0x2bac1]        # 0x140041308
   140015847:	xor    ecx,ecx
   140015849:	test   rax,rax
   14001584c:	mov    QWORD PTR [rbx+0x8],rax
   140015850:	setne  cl
   140015853:	mov    eax,ecx
   140015855:	add    rsp,0x20
   140015859:	pop    rbx
   14001585a:	ret    
   14001585b:	int3   
   14001585c:	rex push rbx
   14001585e:	sub    rsp,0x20
   140015862:	mov    rcx,QWORD PTR [rcx+0x8]
   140015866:	mov    rbx,r8
   140015869:	call   QWORD PTR [rip+0x2bb09]        # 0x140041378
   14001586f:	mov    ecx,eax
   140015871:	xor    eax,eax
   140015873:	test   rbx,rbx
   140015876:	je     0x14001589b
   140015878:	test   ecx,ecx
   14001587a:	je     0x140015892
   14001587c:	mov    edx,0x80
   140015881:	cmp    ecx,edx
   140015883:	je     0x14001588e
   140015885:	mov    edx,0x102
   14001588a:	cmp    ecx,edx
   14001588c:	jne    0x1400158a5
   14001588e:	mov    DWORD PTR [rbx],edx
   140015890:	jmp    0x1400158a5
   140015892:	mov    DWORD PTR [rbx],eax
   140015894:	mov    eax,0x1
   140015899:	jmp    0x1400158a5
   14001589b:	mov    edx,0x1
   1400158a0:	test   ecx,ecx
   1400158a2:	cmove  eax,edx
   1400158a5:	add    rsp,0x20
   1400158a9:	pop    rbx
   1400158aa:	ret    
   1400158ab:	int3   
   1400158ac:	jmp    0x1400158b4
   1400158b1:	int3   
   1400158b2:	int3   
   1400158b3:	int3   
   1400158b4:	rex push rbx
   1400158b6:	sub    rsp,0x20
   1400158ba:	mov    rbx,rcx
   1400158bd:	mov    rcx,QWORD PTR [rcx]
   1400158c0:	test   rcx,rcx
   1400158c3:	je     0x1400158ce
   1400158c5:	call   0x140026c1c
   1400158ca:	and    QWORD PTR [rbx],0x0
   1400158ce:	mov    rcx,QWORD PTR [rbx+0x8]
   1400158d2:	test   rcx,rcx
   1400158d5:	je     0x1400158e8
   1400158d7:	cmp    DWORD PTR [rbx+0x10],0x0
   1400158db:	jne    0x1400158e3
   1400158dd:	call   QWORD PTR [rip+0x2bc6d]        # 0x140041550
   1400158e3:	and    QWORD PTR [rbx+0x8],0x0
   1400158e8:	and    DWORD PTR [rbx+0x10],0x0
   1400158ec:	add    rsp,0x20
   1400158f0:	pop    rbx
   1400158f1:	ret    
   1400158f2:	int3   
   1400158f3:	int3   
   1400158f4:	mov    QWORD PTR [rsp+0x20],rbx
   1400158f9:	push   rbp
   1400158fa:	push   rsi
   1400158fb:	push   rdi
   1400158fc:	push   r14
   1400158fe:	push   r15
   140015900:	lea    rbp,[rsp-0x3e0]
   140015908:	sub    rsp,0x4e0
   14001590f:	mov    rax,QWORD PTR [rip+0x43772]        # 0x140059088
   140015916:	xor    rax,rsp
   140015919:	mov    QWORD PTR [rbp+0x3d0],rax
   140015920:	mov    r15d,r8d
   140015923:	mov    rbx,rdx
   140015926:	mov    r14,rcx
   140015929:	call   0x1400158b4
   14001592e:	xor    edi,edi
   140015930:	lea    rax,[rbp+0xa0]
   140015937:	mov    QWORD PTR [rsp+0x40],rdi
   14001593c:	mov    QWORD PTR [rsp+0x38],rdi
   140015941:	mov    esi,0x102
   140015946:	mov    QWORD PTR [rsp+0x30],rsi
   14001594b:	mov    QWORD PTR [rsp+0x28],rax
   140015950:	lea    r8d,[rdi+0x3]
   140015954:	lea    r9,[rbp+0x1b0]
   14001595b:	lea    rdx,[rsp+0x50]
   140015960:	mov    rcx,rbx
   140015963:	mov    QWORD PTR [rsp+0x20],0x104
   14001596c:	call   0x140033a20
   140015971:	mov    eax,esi
   140015973:	lea    rcx,[rbp+0xa0]
   14001597a:	cmp    BYTE PTR [rcx],dil
   14001597d:	je     0x140015987
   14001597f:	inc    rcx
   140015982:	dec    rax
   140015985:	jne    0x14001597a
   140015987:	test   rax,rax
   14001598a:	je     0x1400159dd
   14001598c:	mov    rcx,rsi
   14001598f:	sub    rcx,rax
   140015992:	lea    rax,[rbp+0xa0]
   140015999:	lea    rax,[rax+rcx*1]
   14001599d:	sub    rsi,rcx
   1400159a0:	je     0x1400159d7
   1400159a2:	lea    rdx,[rcx+0x7ffffefc]
   1400159a9:	lea    rcx,[rip+0x30b90]        # 0x140046540
   1400159b0:	add    rdx,rsi
   1400159b3:	sub    rcx,rax
   1400159b6:	test   rdx,rdx
   1400159b9:	je     0x1400159d2
   1400159bb:	mov    r8b,BYTE PTR [rcx+rax*1]
   1400159bf:	test   r8b,r8b
   1400159c2:	je     0x1400159d2
   1400159c4:	mov    BYTE PTR [rax],r8b
   1400159c7:	dec    rdx
   1400159ca:	inc    rax
   1400159cd:	dec    rsi
   1400159d0:	jne    0x1400159b6
   1400159d2:	test   rsi,rsi
   1400159d5:	jne    0x1400159da
   1400159d7:	dec    rax
   1400159da:	mov    BYTE PTR [rax],dil
   1400159dd:	movzx  eax,r15w
   1400159e1:	lea    r9,[rbp+0x1b0]
   1400159e8:	lea    r8,[rip+0x30b59]        # 0x140046548
   1400159ef:	lea    rcx,[rbp+0x2c0]
   1400159f6:	mov    edx,0x104
   1400159fb:	mov    DWORD PTR [rsp+0x20],eax
   1400159ff:	call   0x140011314
   140015a04:	cmp    QWORD PTR [r14],rdi
   140015a07:	je     0x140015a11
   140015a09:	mov    rcx,QWORD PTR [r14]
   140015a0c:	call   0x140026c1c
   140015a11:	or     rsi,0xffffffffffffffff
   140015a15:	lea    rax,[rbp+0x2c0]
   140015a1c:	mov    rcx,rsi
   140015a1f:	inc    rcx
   140015a22:	cmp    BYTE PTR [rax+rcx*1],dil
   140015a26:	jne    0x140015a1f
   140015a28:	lea    rdx,[rbp+0x1b0]
   140015a2f:	mov    rax,rsi
   140015a32:	inc    rax
   140015a35:	cmp    BYTE PTR [rdx+rax*1],dil
   140015a39:	jne    0x140015a32
   140015a3b:	cmp    rcx,rax
   140015a3e:	mov    rdx,rsi
   140015a41:	cmova  rax,rcx
   140015a45:	lea    rcx,[rsp+0x50]
   140015a4a:	inc    rdx
   140015a4d:	cmp    BYTE PTR [rcx+rdx*1],dil
   140015a51:	jne    0x140015a4a
   140015a53:	lea    r8,[rbp+0xa0]
   140015a5a:	mov    rcx,rsi
   140015a5d:	inc    rcx
   140015a60:	cmp    BYTE PTR [r8+rcx*1],dil
   140015a64:	jne    0x140015a5d
   140015a66:	add    rcx,0x7
   140015a6a:	lea    rbx,[rdx+rax*1]
   140015a6e:	add    rbx,rcx
   140015a71:	mov    rcx,rbx
   140015a74:	call   0x140027888
   140015a79:	mov    QWORD PTR [r14],rax
   140015a7c:	test   rax,rax
   140015a7f:	je     0x140015b47
   140015a85:	lea    rcx,[rbp+0xa0]
   140015a8c:	lea    r15,[rip+0x30abd]        # 0x140046550
   140015a93:	lea    r9,[rbp+0x2c0]
   140015a9a:	lea    r8,[rsp+0x50]
   140015a9f:	mov    QWORD PTR [rsp+0x28],r15
   140015aa4:	mov    QWORD PTR [rsp+0x20],rcx
   140015aa9:	mov    rcx,rax
   140015aac:	mov    rdx,rbx
   140015aaf:	call   0x140034090
   140015ab4:	mov    rcx,QWORD PTR [r14]
   140015ab7:	lea    rdx,[rsp+0x60]
   140015abc:	call   QWORD PTR [rip+0x2bbce]        # 0x140041690
   140015ac2:	cmp    rax,rsi
   140015ac5:	je     0x140015ae6
   140015ac7:	mov    rcx,rax
   140015aca:	call   QWORD PTR [rip+0x2baf8]        # 0x1400415c8
   140015ad0:	mov    rcx,QWORD PTR [r14]
   140015ad3:	call   QWORD PTR [rip+0x2bb27]        # 0x140041600
   140015ad9:	mov    QWORD PTR [r14+0x8],rax
   140015add:	test   rax,rax
   140015ae0:	je     0x140015ae6
   140015ae2:	mov    al,0x1
   140015ae4:	jmp    0x140015b49
   140015ae6:	mov    rcx,QWORD PTR [r14]
   140015ae9:	lea    rax,[rbp+0xa0]
   140015af0:	lea    r9,[rbp+0x1b0]
   140015af7:	lea    r8,[rsp+0x50]
   140015afc:	mov    rdx,rbx
   140015aff:	mov    QWORD PTR [rsp+0x28],r15
   140015b04:	mov    QWORD PTR [rsp+0x20],rax
   140015b09:	call   0x140034090
   140015b0e:	mov    rcx,QWORD PTR [r14]
   140015b11:	lea    rdx,[rsp+0x60]
   140015b16:	call   QWORD PTR [rip+0x2bb74]        # 0x140041690
   140015b1c:	cmp    rax,rsi
   140015b1f:	je     0x140015b3f
   140015b21:	mov    rcx,rax
   140015b24:	call   QWORD PTR [rip+0x2ba9e]        # 0x1400415c8
   140015b2a:	mov    rcx,QWORD PTR [r14]
   140015b2d:	call   QWORD PTR [rip+0x2bacd]        # 0x140041600
   140015b33:	test   rax,rax
   140015b36:	mov    QWORD PTR [r14+0x8],rax
   140015b3a:	setne  al
   140015b3d:	jmp    0x140015b49
   140015b3f:	mov    rcx,r14
   140015b42:	call   0x1400158b4
   140015b47:	xor    al,al
   140015b49:	mov    rcx,QWORD PTR [rbp+0x3d0]
   140015b50:	xor    rcx,rsp
   140015b53:	call   0x1400265a0
   140015b58:	mov    rbx,QWORD PTR [rsp+0x528]
   140015b60:	add    rsp,0x4e0
   140015b67:	pop    r15
   140015b69:	pop    r14
   140015b6b:	pop    rdi
   140015b6c:	pop    rsi
   140015b6d:	pop    rbp
   140015b6e:	ret    
   140015b6f:	int3   
   140015b70:	mov    QWORD PTR [rsp+0x8],rbx
   140015b75:	mov    QWORD PTR [rsp+0x10],rsi
   140015b7a:	push   rdi
   140015b7b:	sub    rsp,0x30
   140015b7f:	cmp    QWORD PTR [rcx],0x0
   140015b83:	mov    rbx,rcx
   140015b86:	jne    0x140015b9a
   140015b88:	mov    ecx,0x6
   140015b8d:	call   QWORD PTR [rip+0x2b78d]        # 0x140041320
   140015b93:	xor    eax,eax
   140015b95:	jmp    0x140015c1c
   140015b9a:	mov    rcx,QWORD PTR [rcx+0x8]
   140015b9e:	test   rcx,rcx
   140015ba1:	je     0x140015bad
   140015ba3:	call   0x140026c1c
   140015ba8:	and    QWORD PTR [rbx+0x8],0x0
   140015bad:	mov    rcx,QWORD PTR [rbx]
   140015bb0:	xor    r9d,r9d
   140015bb3:	lea    rsi,[rbx+0x10]
   140015bb7:	lea    edx,[r9+0x3]
   140015bbb:	xor    r8d,r8d
   140015bbe:	mov    QWORD PTR [rsp+0x20],rsi
   140015bc3:	call   QWORD PTR [rip+0x2b507]        # 0x1400410d0
   140015bc9:	test   eax,eax
   140015bcb:	jne    0x140015bd8
   140015bcd:	call   QWORD PTR [rip+0x2b805]        # 0x1400413d8
   140015bd3:	cmp    eax,0x7a
   140015bd6:	jne    0x140015b93
   140015bd8:	mov    ecx,DWORD PTR [rsi]
   140015bda:	call   0x140027888
   140015bdf:	mov    rdi,rax
   140015be2:	test   rax,rax
   140015be5:	jne    0x140015bec
   140015be7:	lea    ecx,[rax+0x8]
   140015bea:	jmp    0x140015b8d
   140015bec:	mov    r9d,DWORD PTR [rsi]
   140015bef:	mov    rcx,QWORD PTR [rbx]
   140015bf2:	mov    r8,rax
   140015bf5:	mov    edx,0x3
   140015bfa:	mov    QWORD PTR [rsp+0x20],rsi
   140015bff:	call   QWORD PTR [rip+0x2b4cb]        # 0x1400410d0
   140015c05:	test   eax,eax
   140015c07:	jne    0x140015c13
   140015c09:	mov    rcx,rdi
   140015c0c:	call   0x140026c1c
   140015c11:	jmp    0x140015b93
   140015c13:	mov    QWORD PTR [rbx+0x8],rdi
   140015c17:	mov    eax,0x1
   140015c1c:	mov    rbx,QWORD PTR [rsp+0x40]
   140015c21:	mov    rsi,QWORD PTR [rsp+0x48]
   140015c26:	add    rsp,0x30
   140015c2a:	pop    rdi
   140015c2b:	ret    
   140015c2c:	mov    QWORD PTR [rsp+0x8],rbx
   140015c31:	push   rdi
   140015c32:	sub    rsp,0x30
   140015c36:	cmp    QWORD PTR [rcx],0x0
   140015c3a:	mov    rbx,rcx
   140015c3d:	jne    0x140015c4e
   140015c3f:	mov    ecx,0x6
   140015c44:	call   QWORD PTR [rip+0x2b6d6]        # 0x140041320
   140015c4a:	xor    eax,eax
   140015c4c:	jmp    0x140015cbf
   140015c4e:	mov    rcx,QWORD PTR [rcx+0x28]
   140015c52:	test   rcx,rcx
   140015c55:	je     0x140015c5c
   140015c57:	call   0x140026c1c
   140015c5c:	mov    rcx,QWORD PTR [rbx]
   140015c5f:	xor    r9d,r9d
   140015c62:	lea    rdi,[rbx+0x30]
   140015c66:	lea    edx,[r9+0x1]
   140015c6a:	xor    r8d,r8d
   140015c6d:	mov    QWORD PTR [rsp+0x20],rdi
   140015c72:	call   QWORD PTR [rip+0x2b458]        # 0x1400410d0
   140015c78:	test   eax,eax
   140015c7a:	jne    0x140015c87
   140015c7c:	call   QWORD PTR [rip+0x2b756]        # 0x1400413d8
   140015c82:	cmp    eax,0x7a
   140015c85:	jne    0x140015c4a
   140015c87:	mov    ecx,DWORD PTR [rdi]
   140015c89:	call   0x140027888
   140015c8e:	mov    r9d,DWORD PTR [rdi]
   140015c91:	mov    rcx,QWORD PTR [rbx]
   140015c94:	mov    r8,rax
   140015c97:	mov    edx,0x1
   140015c9c:	mov    QWORD PTR [rbx+0x28],rax
   140015ca0:	mov    QWORD PTR [rsp+0x20],rdi
   140015ca5:	call   QWORD PTR [rip+0x2b425]        # 0x1400410d0
   140015cab:	test   eax,eax
   140015cad:	jne    0x140015cba
   140015caf:	mov    rcx,QWORD PTR [rbx+0x28]
   140015cb3:	call   0x140026c1c
   140015cb8:	jmp    0x140015c4a
   140015cba:	mov    eax,0x1
   140015cbf:	mov    rbx,QWORD PTR [rsp+0x40]
   140015cc4:	add    rsp,0x30
   140015cc8:	pop    rdi
   140015cc9:	ret    
   140015cca:	int3   
   140015ccb:	int3   
   140015ccc:	rex push rbx
   140015cce:	sub    rsp,0x20
   140015cd2:	mov    rbx,rcx
   140015cd5:	mov    rcx,QWORD PTR [rcx+0x8]
   140015cd9:	test   rcx,rcx
   140015cdc:	je     0x140015ce3
   140015cde:	call   0x140026c1c
   140015ce3:	mov    rcx,QWORD PTR [rbx+0x18]
   140015ce7:	test   rcx,rcx
   140015cea:	je     0x140015cf1
   140015cec:	call   0x140026c1c
   140015cf1:	mov    rcx,QWORD PTR [rbx+0x28]
   140015cf5:	test   rcx,rcx
   140015cf8:	je     0x140015cff
   140015cfa:	call   0x140026c1c
   140015cff:	mov    rcx,QWORD PTR [rbx]
   140015d02:	test   rcx,rcx
   140015d05:	je     0x140015d0d
   140015d07:	call   QWORD PTR [rip+0x2b67b]        # 0x140041388
   140015d0d:	add    rsp,0x20
   140015d11:	pop    rbx
   140015d12:	ret    
   140015d13:	int3   
   140015d14:	rex push rbp
   140015d16:	push   rbx
   140015d17:	push   rdi
   140015d18:	mov    rbp,rsp
   140015d1b:	sub    rsp,0x30
   140015d1f:	lea    rax,[rbp+0x30]
   140015d23:	lea    rdx,[rip+0x3082e]        # 0x140046558
   140015d2a:	mov    r9d,0x20019
   140015d30:	xor    r8d,r8d
   140015d33:	mov    rcx,0xffffffff80000002
   140015d3a:	mov    QWORD PTR [rsp+0x20],rax
   140015d3f:	call   QWORD PTR [rip+0x2b2db]        # 0x140041020
   140015d45:	xor    edi,edi
   140015d47:	test   eax,eax
   140015d49:	jne    0x140015df9
   140015d4f:	mov    rcx,QWORD PTR [rbp+0x30]
   140015d53:	lea    rax,[rbp+0x20]
   140015d57:	lea    rdx,[rip+0x3082a]        # 0x140046588
   140015d5e:	mov    QWORD PTR [rsp+0x28],rax
   140015d63:	lea    rax,[rbp+0x28]
   140015d67:	xor    r9d,r9d
   140015d6a:	xor    r8d,r8d
   140015d6d:	mov    QWORD PTR [rbp+0x28],rdi
   140015d71:	mov    DWORD PTR [rbp+0x20],0x8
   140015d78:	mov    QWORD PTR [rsp+0x20],rax
   140015d7d:	call   QWORD PTR [rip+0x2b295]        # 0x140041018
   140015d83:	mov    ebx,eax
   140015d85:	test   eax,eax
   140015d87:	je     0x140015de3
   140015d89:	mov    rcx,QWORD PTR [rbp+0x30]
   140015d8d:	lea    rax,[rbp+0x20]
   140015d91:	lea    rdx,[rip+0x307f8]        # 0x140046590
   140015d98:	mov    QWORD PTR [rsp+0x28],rax
   140015d9d:	lea    rax,[rbp+0x28]
   140015da1:	xor    r9d,r9d
   140015da4:	xor    r8d,r8d
   140015da7:	mov    QWORD PTR [rsp+0x20],rax
   140015dac:	call   QWORD PTR [rip+0x2b266]        # 0x140041018
   140015db2:	mov    ebx,eax
   140015db4:	test   eax,eax
   140015db6:	je     0x140015de3
   140015db8:	mov    rcx,QWORD PTR [rbp+0x30]
   140015dbc:	lea    rax,[rbp+0x20]
   140015dc0:	lea    rdx,[rip+0x307d1]        # 0x140046598
   140015dc7:	mov    QWORD PTR [rsp+0x28],rax
   140015dcc:	lea    rax,[rbp+0x28]
   140015dd0:	xor    r9d,r9d
   140015dd3:	xor    r8d,r8d
   140015dd6:	mov    QWORD PTR [rsp+0x20],rax
   140015ddb:	call   QWORD PTR [rip+0x2b237]        # 0x140041018
   140015de1:	mov    ebx,eax
   140015de3:	mov    rcx,QWORD PTR [rbp+0x30]
   140015de7:	call   QWORD PTR [rip+0x2b24b]        # 0x140041038
   140015ded:	mov    rax,QWORD PTR [rbp+0x28]
   140015df1:	test   ebx,ebx
   140015df3:	cmovne rax,rdi
   140015df7:	jmp    0x140015dfd
   140015df9:	mov    rax,QWORD PTR [rbp+0x28]
   140015dfd:	add    rsp,0x30
   140015e01:	pop    rdi
   140015e02:	pop    rbx
   140015e03:	pop    rbp
   140015e04:	ret    
   140015e05:	int3   
   140015e06:	int3   
   140015e07:	int3   
   140015e08:	lea    rax,[rip+0x30881]        # 0x140046690
   140015e0f:	mov    QWORD PTR [rcx],rax
   140015e12:	ret    
   140015e13:	int3   
   140015e14:	rex push rbx
   140015e16:	sub    rsp,0x20
   140015e1a:	lea    rax,[rip+0x3086f]        # 0x140046690
   140015e21:	mov    rbx,rcx
   140015e24:	mov    QWORD PTR [rcx],rax
   140015e27:	test   dl,0x1
   140015e2a:	je     0x140015e31
   140015e2c:	call   0x14002657c
   140015e31:	mov    rax,rbx
   140015e34:	add    rsp,0x20
   140015e38:	pop    rbx
   140015e39:	ret    
   140015e3a:	int3   
   140015e3b:	int3   
   140015e3c:	mov    QWORD PTR [rsp+0x8],rbx
   140015e41:	push   rdi
   140015e42:	sub    rsp,0x20
   140015e46:	mov    ebx,edx
   140015e48:	mov    rdi,rcx
   140015e4b:	call   0x140015e6c
   140015e50:	test   bl,0x1
   140015e53:	je     0x140015e5d
   140015e55:	mov    rcx,rdi
   140015e58:	call   0x14002657c
   140015e5d:	mov    rax,rdi
   140015e60:	mov    rbx,QWORD PTR [rsp+0x30]
   140015e65:	add    rsp,0x20
   140015e69:	pop    rdi
   140015e6a:	ret    
   140015e6b:	int3   
   140015e6c:	mov    QWORD PTR [rsp+0x8],rcx
   140015e71:	push   rbx
   140015e72:	sub    rsp,0x30
   140015e76:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015e7f:	mov    rbx,rcx
   140015e82:	lea    rax,[rip+0x307bf]        # 0x140046648
   140015e89:	mov    QWORD PTR [rcx],rax
   140015e8c:	call   0x140016130
   140015e91:	nop
   140015e92:	lea    rcx,[rbx+0x10]
   140015e96:	call   0x140017088
   140015e9b:	nop
   140015e9c:	lea    rax,[rip+0x307ed]        # 0x140046690
   140015ea3:	mov    QWORD PTR [rbx],rax
   140015ea6:	add    rsp,0x30
   140015eaa:	pop    rbx
   140015eab:	ret    
   140015eac:	sub    rsp,0x38
   140015eb0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015eb9:	test   rcx,rcx
   140015ebc:	jne    0x140015ec2
   140015ebe:	xor    eax,eax
   140015ec0:	jmp    0x140015efe
   140015ec2:	cmp    DWORD PTR [rip+0x44c2f],0x0        # 0x14005aaf8
   140015ec9:	jne    0x140015ef0
   140015ecb:	mov    r8,rdx
   140015ece:	mov    rdx,rcx
   140015ed1:	lea    rcx,[rip+0x44bf8]        # 0x14005aad0
   140015ed8:	call   0x140015f04
   140015edd:	test   eax,eax
   140015edf:	je     0x140015eec
   140015ee1:	and    DWORD PTR [rip+0x44c10],0x0        # 0x14005aaf8
   140015ee8:	xor    eax,eax
   140015eea:	jmp    0x140015efe
   140015eec:	jmp    0x140015ef7
   140015eee:	jmp    0x140015ebe
   140015ef0:	mov    QWORD PTR [rip+0x44be1],rcx        # 0x14005aad8
   140015ef7:	lea    rax,[rip+0x44bd2]        # 0x14005aad0
   140015efe:	add    rsp,0x38
   140015f02:	ret    
   140015f03:	int3   
   140015f04:	rex push rbp
   140015f06:	push   rbx
   140015f07:	push   rsi
   140015f08:	push   rdi
   140015f09:	push   r14
   140015f0b:	mov    rbp,rsp
   140015f0e:	sub    rsp,0x40
   140015f12:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140015f1a:	mov    rbx,r8
   140015f1d:	mov    rsi,rdx
   140015f20:	mov    r14,rcx
   140015f23:	mov    QWORD PTR [rcx+0x8],rdx
   140015f27:	lea    rcx,[rip+0x443fa]        # 0x14005a328
   140015f2e:	mov    rax,QWORD PTR [rip+0x443f3]        # 0x14005a328
   140015f35:	call   QWORD PTR [rax+0x18]
   140015f38:	add    rax,0x18
   140015f3c:	mov    QWORD PTR [rbp+0x48],rax
   140015f40:	lea    rcx,[rip+0x443e1]        # 0x14005a328
   140015f47:	mov    rax,QWORD PTR [rip+0x443da]        # 0x14005a328
   140015f4e:	call   QWORD PTR [rax+0x18]
   140015f51:	add    rax,0x18
   140015f55:	mov    QWORD PTR [rbp+0x38],rax
   140015f59:	lea    r9,[rbp+0x38]
   140015f5d:	lea    r8,[rbp+0x48]
   140015f61:	mov    rdx,rbx
   140015f64:	mov    rcx,r14
   140015f67:	call   0x14001623c
   140015f6c:	mov    edi,eax
   140015f6e:	test   eax,eax
   140015f70:	js     0x1400160e1
   140015f76:	and    QWORD PTR [rbp+0x30],0x0
   140015f7b:	lea    rax,[rbp+0x30]
   140015f7f:	mov    QWORD PTR [rsp+0x20],rax
   140015f84:	lea    r9,[rip+0x306ed]        # 0x140046678
   140015f8b:	xor    edx,edx
   140015f8d:	lea    r8d,[rdx+0x17]
   140015f91:	lea    rcx,[rip+0x306d0]        # 0x140046668
   140015f98:	call   QWORD PTR [rip+0x2b7d2]        # 0x140041770
   140015f9e:	mov    edi,eax
   140015fa0:	test   eax,eax
   140015fa2:	jns    0x140015fbd
   140015fa4:	mov    rcx,QWORD PTR [r14+0x8]
   140015fa8:	mov    rax,QWORD PTR [rcx]
   140015fab:	xor    r9d,r9d
   140015fae:	xor    r8d,r8d
   140015fb1:	mov    edx,0xe12305ee
   140015fb6:	call   QWORD PTR [rax]
   140015fb8:	jmp    0x1400160e1
   140015fbd:	mov    ecx,0x70
   140015fc2:	call   0x140026da8
   140015fc7:	mov    QWORD PTR [rbp-0x8],rax
   140015fcb:	test   rax,rax
   140015fce:	je     0x140015fe3
   140015fd0:	mov    r8,rsi
   140015fd3:	mov    rdx,r14
   140015fd6:	mov    rcx,rax
   140015fd9:	call   0x140017280
   140015fde:	mov    rsi,rax
   140015fe1:	jmp    0x140015fe5
   140015fe3:	xor    esi,esi
   140015fe5:	mov    rcx,QWORD PTR [rbp+0x30]
   140015fe9:	mov    rax,QWORD PTR [rcx]
   140015fec:	mov    rdx,rsi
   140015fef:	call   QWORD PTR [rax+0x50]
   140015ff2:	mov    edi,eax
   140015ff4:	test   eax,eax
   140015ff6:	js     0x1400160d6
   140015ffc:	mov    ecx,0x18
   140016001:	call   0x140026da8
   140016006:	mov    rbx,rax
   140016009:	mov    QWORD PTR [rbp-0x8],rax
   14001600d:	test   rax,rax
   140016010:	je     0x140016037
   140016012:	mov    rax,QWORD PTR [r14+0x8]
   140016016:	lea    rcx,[rip+0x3069b]        # 0x1400466b8
   14001601d:	mov    QWORD PTR [rbx],rcx
   140016020:	mov    QWORD PTR [rbx+0x8],rax
   140016024:	lea    rcx,[rbx+0x10]
   140016028:	lea    rdx,[rip+0x2fcbf]        # 0x140045cee
   14001602f:	call   0x14000cd2c
   140016034:	nop
   140016035:	jmp    0x140016039
   140016037:	xor    ebx,ebx
   140016039:	mov    rcx,QWORD PTR [rbp+0x30]
   14001603d:	mov    rax,QWORD PTR [rcx]
   140016040:	mov    rdx,rbx
   140016043:	call   QWORD PTR [rax+0x70]
   140016046:	mov    edi,eax
   140016048:	test   eax,eax
   14001604a:	js     0x1400160d6
   140016050:	mov    rax,QWORD PTR [rsi]
   140016053:	xor    edx,edx
   140016055:	mov    rcx,rsi
   140016058:	call   QWORD PTR [rax+0x80]
   14001605e:	mov    rax,QWORD PTR [rsi]
   140016061:	lea    rdx,[rbp+0x38]
   140016065:	mov    rcx,rsi
   140016068:	call   QWORD PTR [rax+0x78]
   14001606b:	mov    rax,QWORD PTR [rbx]
   14001606e:	lea    rdx,[rbp+0x38]
   140016072:	mov    rcx,rbx
   140016075:	call   QWORD PTR [rax+0x38]
   140016078:	mov    rcx,QWORD PTR [rbp+0x30]
   14001607c:	mov    rax,QWORD PTR [rcx]
   14001607f:	mov    rdx,QWORD PTR [rbp+0x38]
   140016083:	call   QWORD PTR [rax+0xa0]
   140016089:	mov    edi,eax
   14001608b:	test   eax,eax
   14001608d:	js     0x1400160d6
   14001608f:	mov    rax,QWORD PTR [rsi]
   140016092:	mov    dl,0x1
   140016094:	mov    rcx,rsi
   140016097:	call   QWORD PTR [rax+0x80]
   14001609d:	mov    rax,QWORD PTR [rsi]
   1400160a0:	lea    rdx,[rbp+0x48]
   1400160a4:	mov    rcx,rsi
   1400160a7:	call   QWORD PTR [rax+0x78]
   1400160aa:	mov    rax,QWORD PTR [rbx]
   1400160ad:	lea    rdx,[rbp+0x48]
   1400160b1:	mov    rcx,rbx
   1400160b4:	call   QWORD PTR [rax+0x38]
   1400160b7:	mov    rcx,QWORD PTR [rbp+0x30]
   1400160bb:	mov    rax,QWORD PTR [rcx]
   1400160be:	mov    rdx,QWORD PTR [rbp+0x48]
   1400160c2:	call   QWORD PTR [rax+0xa0]
   1400160c8:	mov    edi,eax
   1400160ca:	test   eax,eax
   1400160cc:	js     0x1400160d6
   1400160ce:	mov    DWORD PTR [r14+0x28],0x1
   1400160d6:	mov    rcx,QWORD PTR [rbp+0x30]
   1400160da:	mov    rax,QWORD PTR [rcx]
   1400160dd:	call   QWORD PTR [rax+0x10]
   1400160e0:	nop
   1400160e1:	mov    rdx,QWORD PTR [rbp+0x38]
   1400160e5:	add    rdx,0xffffffffffffffe8
   1400160e9:	or     ebx,0xffffffff
   1400160ec:	mov    eax,ebx
   1400160ee:	lock xadd DWORD PTR [rdx+0x10],eax
   1400160f3:	add    eax,ebx
   1400160f5:	test   eax,eax
   1400160f7:	jg     0x140016103
   1400160f9:	mov    rcx,QWORD PTR [rdx]
   1400160fc:	mov    rax,QWORD PTR [rcx]
   1400160ff:	call   QWORD PTR [rax+0x8]
   140016102:	nop
   140016103:	mov    rdx,QWORD PTR [rbp+0x48]
   140016107:	add    rdx,0xffffffffffffffe8
   14001610b:	mov    eax,ebx
   14001610d:	lock xadd DWORD PTR [rdx+0x10],eax
   140016112:	add    eax,ebx
   140016114:	test   eax,eax
   140016116:	jg     0x140016121
   140016118:	mov    rcx,QWORD PTR [rdx]
   14001611b:	mov    rax,QWORD PTR [rcx]
   14001611e:	call   QWORD PTR [rax+0x8]
   140016121:	mov    eax,edi
   140016123:	add    rsp,0x40
   140016127:	pop    r14
   140016129:	pop    rdi
   14001612a:	pop    rsi
   14001612b:	pop    rbx
   14001612c:	pop    rbp
   14001612d:	ret    
   14001612e:	int3   
   14001612f:	int3   
   140016130:	mov    rax,rsp
   140016133:	push   r15
   140016135:	sub    rsp,0x30
   140016139:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140016141:	mov    QWORD PTR [rax+0x8],rbx
   140016145:	mov    QWORD PTR [rax+0x10],rsi
   140016149:	mov    QWORD PTR [rax+0x18],rdi
   14001614d:	mov    QWORD PTR [rax+0x20],r14
   140016151:	mov    r14,rcx
   140016154:	mov    r15d,DWORD PTR [rcx+0x20]
   140016158:	xor    esi,esi
   14001615a:	mov    DWORD PTR [rsp+0x20],esi
   14001615e:	cmp    esi,r15d
   140016161:	jae    0x1400161b8
   140016163:	test   esi,esi
   140016165:	js     0x1400161a3
   140016167:	cmp    esi,DWORD PTR [r14+0x20]
   14001616b:	jge    0x1400161a3
   14001616d:	movsxd rax,esi
   140016170:	lea    rdi,[rax+rax*8]
   140016174:	mov    rbx,QWORD PTR [r14+0x18]
   140016178:	mov    rcx,QWORD PTR [rbx+rdi*8]
   14001617c:	call   0x1400273dc
   140016181:	mov    rcx,QWORD PTR [rbx+rdi*8+0x8]
   140016186:	call   0x1400273dc
   14001618b:	mov    rcx,QWORD PTR [rbx+rdi*8+0x10]
   140016190:	call   0x1400273dc
   140016195:	mov    rcx,QWORD PTR [rbx+rdi*8+0x18]
   14001619a:	call   0x1400273dc
   14001619f:	inc    esi
   1400161a1:	jmp    0x14001615a
   1400161a3:	xor    r9d,r9d
   1400161a6:	xor    r8d,r8d
   1400161a9:	lea    edx,[r9+0x1]
   1400161ad:	mov    ecx,0xc000008c
   1400161b2:	call   QWORD PTR [rip+0x2b1e8]        # 0x1400413a0
   1400161b8:	lea    rcx,[r14+0x10]
   1400161bc:	call   0x140017088
   1400161c1:	nop
   1400161c2:	xor    eax,eax
   1400161c4:	jmp    0x1400161cb
   1400161c6:	mov    eax,0x80004005
   1400161cb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400161d0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400161d5:	mov    rdi,QWORD PTR [rsp+0x50]
   1400161da:	mov    r14,QWORD PTR [rsp+0x58]
   1400161df:	add    rsp,0x30
   1400161e3:	pop    r15
   1400161e5:	ret    
   1400161e6:	int3   
   1400161e7:	int3   
   1400161e8:	sub    rsp,0x288
   1400161ef:	mov    rax,QWORD PTR [rip+0x42e92]        # 0x140059088
   1400161f6:	xor    rax,rsp
   1400161f9:	mov    QWORD PTR [rsp+0x270],rax
   140016201:	lea    rdx,[rsp+0x20]
   140016206:	call   QWORD PTR [rip+0x2b3ac]        # 0x1400415b8
   14001620c:	cmp    rax,0xffffffffffffffff
   140016210:	jne    0x140016216
   140016212:	xor    eax,eax
   140016214:	jmp    0x140016224
   140016216:	mov    rcx,rax
   140016219:	call   QWORD PTR [rip+0x2b3a9]        # 0x1400415c8
   14001621f:	mov    eax,0x1
   140016224:	mov    rcx,QWORD PTR [rsp+0x270]
   14001622c:	xor    rcx,rsp
   14001622f:	call   0x1400265a0
   140016234:	add    rsp,0x288
   14001623b:	ret    
   14001623c:	rex push rbp
   14001623e:	push   rbx
   14001623f:	push   rsi
   140016240:	push   rdi
   140016241:	push   r12
   140016243:	push   r13
   140016245:	push   r14
   140016247:	push   r15
   140016249:	lea    rbp,[rsp-0x538]
   140016251:	sub    rsp,0x638
   140016258:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   140016260:	mov    rax,QWORD PTR [rip+0x42e21]        # 0x140059088
   140016267:	xor    rax,rsp
   14001626a:	mov    QWORD PTR [rbp+0x520],rax
   140016271:	mov    rsi,r9
   140016274:	mov    r15,r8
   140016277:	mov    r12,rdx
   14001627a:	mov    r14,rcx
   14001627d:	lea    rdx,[rip+0x3031c]        # 0x1400465a0
   140016284:	lea    rcx,[rsp+0x20]
   140016289:	call   0x140006b8c
   14001628e:	nop
   14001628f:	xor    eax,eax
   140016291:	cmp    DWORD PTR [rip+0x46835],eax        # 0x14005cacc
   140016297:	jne    0x1400162a8
   140016299:	call   0x140012b10
   14001629e:	mov    DWORD PTR [rip+0x46824],0x1        # 0x14005cacc
   1400162a8:	mov    edi,DWORD PTR [rip+0x468f6]        # 0x14005cba4
   1400162ae:	or     r13,0xffffffffffffffff
   1400162b2:	lea    ebx,[r13+0x3]
   1400162b6:	cmp    edi,0x3
   1400162b9:	jne    0x1400162c4
   1400162bb:	lea    rdx,[rip+0x302ee]        # 0x1400465b0
   1400162c2:	jmp    0x1400162ef
   1400162c4:	cmp    edi,ebx
   1400162c6:	jne    0x1400162d1
   1400162c8:	lea    rdx,[rip+0x302e9]        # 0x1400465b8
   1400162cf:	jmp    0x1400162ef
   1400162d1:	cmp    edi,0x5
   1400162d4:	jne    0x1400162df
   1400162d6:	lea    rdx,[rip+0x302e3]        # 0x1400465c0
   1400162dd:	jmp    0x1400162ef
   1400162df:	cmp    edi,0x6
   1400162e2:	jne    0x140016a17
   1400162e8:	lea    rdx,[rip+0x302d9]        # 0x1400465c8
   1400162ef:	mov    r8d,ebx
   1400162f2:	lea    rcx,[rsp+0x20]
   1400162f7:	call   0x140006f54
   1400162fc:	xor    eax,eax
   1400162fe:	mov    WORD PTR [rbp+0x100],ax
   140016305:	xor    edx,edx
   140016307:	mov    r8d,0x206
   14001630d:	lea    rcx,[rbp+0x102]
   140016314:	call   0x14002bb90
   140016319:	mov    r8d,0x104
   14001631f:	lea    rdx,[rbp+0x100]
   140016326:	mov    rcx,r12
   140016329:	call   QWORD PTR [rip+0x2b009]        # 0x140041338
   14001632f:	xor    r12d,r12d
   140016332:	cmp    r12w,WORD PTR [rbp+0x100]
   14001633a:	jne    0x140016355
   14001633c:	mov    edx,0xe1232723
   140016341:	mov    r8d,0xee
   140016347:	mov    rcx,QWORD PTR [r14+0x8]
   14001634b:	call   0x1400041e0
   140016350:	jmp    0x140016a2b
   140016355:	mov    QWORD PTR [rsp+0x38],r12
   14001635a:	lea    r9,[rsp+0x38]
   14001635f:	lea    r8,[rbp+0x310]
   140016366:	mov    edx,0x104
   14001636b:	lea    rcx,[rbp+0x100]
   140016372:	call   QWORD PTR [rip+0x2b008]        # 0x140041380
   140016378:	mov    rax,QWORD PTR [rsp+0x38]
   14001637d:	test   rax,rax
   140016380:	je     0x1400163a8
   140016382:	mov    rcx,r13
   140016385:	inc    rcx
   140016388:	cmp    WORD PTR [rax+rcx*2],r12w
   14001638d:	jne    0x140016385
   14001638f:	lea    rdx,[rbp+0x310]
   140016396:	mov    rax,r13
   140016399:	inc    rax
   14001639c:	cmp    WORD PTR [rdx+rax*2],r12w
   1400163a1:	jne    0x140016399
   1400163a3:	sub    rax,rcx
   1400163a6:	jmp    0x1400163bc
   1400163a8:	lea    rcx,[rbp+0x310]
   1400163af:	mov    rax,r13
   1400163b2:	inc    rax
   1400163b5:	cmp    WORD PTR [rcx+rax*2],r12w
   1400163ba:	jne    0x1400163b2
   1400163bc:	lea    r9,[rip+0x43f65]        # 0x14005a328
   1400163c3:	mov    r8d,eax
   1400163c6:	lea    rdx,[rbp+0x310]
   1400163cd:	lea    rcx,[rsp+0x30]
   1400163d2:	call   0x14000db0c
   1400163d7:	nop
   1400163d8:	lea    r8,[rip+0x301f1]        # 0x1400465d0
   1400163df:	lea    rdx,[rsp+0x30]
   1400163e4:	lea    rcx,[rbp-0x60]
   1400163e8:	call   0x140016df4
   1400163ed:	nop
   1400163ee:	mov    rdx,rax
   1400163f1:	mov    rcx,r15
   1400163f4:	call   0x14000cdac
   1400163f9:	nop
   1400163fa:	mov    rdx,QWORD PTR [rbp-0x60]
   1400163fe:	add    rdx,0xffffffffffffffe8
   140016402:	mov    eax,r13d
   140016405:	lock xadd DWORD PTR [rdx+0x10],eax
   14001640a:	add    eax,r13d
   14001640d:	test   eax,eax
   14001640f:	jg     0x14001641a
   140016411:	mov    rcx,QWORD PTR [rdx]
   140016414:	mov    rax,QWORD PTR [rcx]
   140016417:	call   QWORD PTR [rax+0x8]
   14001641a:	mov    rcx,QWORD PTR [r15]
   14001641d:	call   0x1400161e8
   140016422:	test   eax,eax
   140016424:	jne    0x140016455
   140016426:	mov    rcx,QWORD PTR [r14+0x8]
   14001642a:	lea    rax,[rip+0x3019f]        # 0x1400465d0
   140016431:	mov    QWORD PTR [rsp+0x70],rax
   140016436:	mov    rax,QWORD PTR [rcx]
   140016439:	lea    r9,[rsp+0x70]
   14001643e:	mov    edx,0xe12305e0
   140016443:	mov    r8d,0x1
   140016449:	call   QWORD PTR [rax]
   14001644b:	mov    ebx,0x80004005
   140016450:	jmp    0x1400169f4
   140016455:	cmp    DWORD PTR [rip+0x46670],r12d        # 0x14005cacc
   14001645c:	jne    0x140016472
   14001645e:	call   0x140012b10
   140016463:	mov    r15d,0x1
   140016469:	mov    DWORD PTR [rip+0x4665c],r15d        # 0x14005cacc
   140016470:	jmp    0x140016478
   140016472:	mov    r15d,0x1
   140016478:	mov    ecx,DWORD PTR [rip+0x46716]        # 0x14005cb94
   14001647e:	shr    ecx,0x4
   140016481:	and    ecx,0xf
   140016484:	mov    r9d,0xa
   14001648a:	lea    r8d,[r9+0x36]
   14001648e:	lea    rdx,[rbp+0x0]
   140016492:	call   0x140031230
   140016497:	cmp    DWORD PTR [rip+0x4662e],r12d        # 0x14005cacc
   14001649e:	jne    0x1400164ac
   1400164a0:	call   0x140012b10
   1400164a5:	mov    DWORD PTR [rip+0x46620],r15d        # 0x14005cacc
   1400164ac:	mov    ecx,DWORD PTR [rip+0x466e2]        # 0x14005cb94
   1400164b2:	and    ecx,0xf
   1400164b5:	mov    r9d,0xa
   1400164bb:	lea    r8d,[r9+0x36]
   1400164bf:	lea    rdx,[rbp+0x80]
   1400164c6:	call   0x140031230
   1400164cb:	lea    rdx,[rip+0x30126]        # 0x1400465f8
   1400164d2:	lea    rcx,[rsp+0x50]
   1400164d7:	call   0x14000cd2c
   1400164dc:	nop
   1400164dd:	lea    r8,[rsp+0x20]
   1400164e2:	lea    rcx,[rbp-0x10]
   1400164e6:	call   0x140016ecc
   1400164eb:	nop
   1400164ec:	lea    r8,[rip+0x3010d]        # 0x140046600
   1400164f3:	mov    rdx,rax
   1400164f6:	lea    rcx,[rbp-0x70]
   1400164fa:	call   0x140016df4
   1400164ff:	nop
   140016500:	lea    r8,[rbp+0x0]
   140016504:	mov    rdx,rax
   140016507:	lea    rcx,[rbp-0x30]
   14001650b:	call   0x140016df4
   140016510:	nop
   140016511:	lea    r8,[rip+0x300e8]        # 0x140046600
   140016518:	mov    rdx,rax
   14001651b:	lea    rcx,[rbp-0x80]
   14001651f:	call   0x140016df4
   140016524:	nop
   140016525:	lea    r8,[rbp+0x80]
   14001652c:	mov    rdx,rax
   14001652f:	lea    rcx,[rbp-0x20]
   140016533:	call   0x140016df4
   140016538:	nop
   140016539:	lea    r8,[rsp+0x50]
   14001653e:	mov    rdx,rax
   140016541:	lea    rcx,[rsp+0x28]
   140016546:	call   0x14000d60c
   14001654b:	nop
   14001654c:	mov    rdx,QWORD PTR [rbp-0x20]
   140016550:	add    rdx,0xffffffffffffffe8
   140016554:	mov    eax,r13d
   140016557:	lock xadd DWORD PTR [rdx+0x10],eax
   14001655c:	add    eax,r13d
   14001655f:	test   eax,eax
   140016561:	jg     0x14001656d
   140016563:	mov    rcx,QWORD PTR [rdx]
   140016566:	mov    rax,QWORD PTR [rcx]
   140016569:	call   QWORD PTR [rax+0x8]
   14001656c:	nop
   14001656d:	mov    rdx,QWORD PTR [rbp-0x80]
   140016571:	add    rdx,0xffffffffffffffe8
   140016575:	mov    eax,r13d
   140016578:	lock xadd DWORD PTR [rdx+0x10],eax
   14001657d:	add    eax,r13d
   140016580:	test   eax,eax
   140016582:	jg     0x14001658e
   140016584:	mov    rcx,QWORD PTR [rdx]
   140016587:	mov    rax,QWORD PTR [rcx]
   14001658a:	call   QWORD PTR [rax+0x8]
   14001658d:	nop
   14001658e:	mov    rdx,QWORD PTR [rbp-0x30]
   140016592:	add    rdx,0xffffffffffffffe8
   140016596:	mov    eax,r13d
   140016599:	lock xadd DWORD PTR [rdx+0x10],eax
   14001659e:	add    eax,r13d
   1400165a1:	test   eax,eax
   1400165a3:	jg     0x1400165af
   1400165a5:	mov    rcx,QWORD PTR [rdx]
   1400165a8:	mov    rax,QWORD PTR [rcx]
   1400165ab:	call   QWORD PTR [rax+0x8]
   1400165ae:	nop
   1400165af:	mov    rdx,QWORD PTR [rbp-0x70]
   1400165b3:	add    rdx,0xffffffffffffffe8
   1400165b7:	mov    eax,r13d
   1400165ba:	lock xadd DWORD PTR [rdx+0x10],eax
   1400165bf:	add    eax,r13d
   1400165c2:	test   eax,eax
   1400165c4:	jg     0x1400165d0
   1400165c6:	mov    rcx,QWORD PTR [rdx]
   1400165c9:	mov    rax,QWORD PTR [rcx]
   1400165cc:	call   QWORD PTR [rax+0x8]
   1400165cf:	nop
   1400165d0:	mov    rdx,QWORD PTR [rbp-0x10]
   1400165d4:	add    rdx,0xffffffffffffffe8
   1400165d8:	mov    eax,r13d
   1400165db:	lock xadd DWORD PTR [rdx+0x10],eax
   1400165e0:	add    eax,r13d
   1400165e3:	test   eax,eax
   1400165e5:	jg     0x1400165f1
   1400165e7:	mov    rcx,QWORD PTR [rdx]
   1400165ea:	mov    rax,QWORD PTR [rcx]
   1400165ed:	call   QWORD PTR [rax+0x8]
   1400165f0:	nop
   1400165f1:	mov    rdx,QWORD PTR [rsp+0x50]
   1400165f6:	add    rdx,0xffffffffffffffe8
   1400165fa:	mov    eax,r13d
   1400165fd:	lock xadd DWORD PTR [rdx+0x10],eax
   140016602:	add    eax,r13d
   140016605:	test   eax,eax
   140016607:	jg     0x140016612
   140016609:	mov    rcx,QWORD PTR [rdx]
   14001660c:	mov    rax,QWORD PTR [rcx]
   14001660f:	call   QWORD PTR [rax+0x8]
   140016612:	lea    r8,[rsp+0x28]
   140016617:	lea    rdx,[rsp+0x30]
   14001661c:	lea    rcx,[rsp+0x60]
   140016621:	call   0x14000d60c
   140016626:	nop
   140016627:	mov    rdx,rax
   14001662a:	mov    rcx,rsi
   14001662d:	call   0x14000cdac
   140016632:	nop
   140016633:	mov    rdx,QWORD PTR [rsp+0x60]
   140016638:	add    rdx,0xffffffffffffffe8
   14001663c:	mov    eax,r13d
   14001663f:	lock xadd DWORD PTR [rdx+0x10],eax
   140016644:	add    eax,r13d
   140016647:	test   eax,eax
   140016649:	jg     0x140016654
   14001664b:	mov    rcx,QWORD PTR [rdx]
   14001664e:	mov    rax,QWORD PTR [rcx]
   140016651:	call   QWORD PTR [rax+0x8]
   140016654:	mov    rcx,QWORD PTR [rsi]
   140016657:	call   0x1400161e8
   14001665c:	test   eax,eax
   14001665e:	jne    0x1400169cf
   140016664:	lea    rdx,[rip+0x2ff8d]        # 0x1400465f8
   14001666b:	lea    rcx,[rsp+0x40]
   140016670:	call   0x14000cd2c
   140016675:	nop
   140016676:	lea    r8,[rsp+0x20]
   14001667b:	lea    rcx,[rbp-0x40]
   14001667f:	call   0x140016ecc
   140016684:	nop
   140016685:	lea    r8,[rip+0x2ff74]        # 0x140046600
   14001668c:	mov    rdx,rax
   14001668f:	lea    rcx,[rbp-0x28]
   140016693:	call   0x140016df4
   140016698:	nop
   140016699:	lea    r8,[rbp+0x0]
   14001669d:	mov    rdx,rax
   1400166a0:	lea    rcx,[rbp-0x50]
   1400166a4:	call   0x140016df4
   1400166a9:	nop
   1400166aa:	lea    r8,[rsp+0x40]
   1400166af:	mov    rdx,rax
   1400166b2:	lea    rcx,[rbp-0x18]
   1400166b6:	call   0x14000d60c
   1400166bb:	nop
   1400166bc:	mov    rdx,rax
   1400166bf:	lea    rcx,[rsp+0x28]
   1400166c4:	call   0x14000cdac
   1400166c9:	nop
   1400166ca:	mov    rdx,QWORD PTR [rbp-0x18]
   1400166ce:	add    rdx,0xffffffffffffffe8
   1400166d2:	mov    eax,r13d
   1400166d5:	lock xadd DWORD PTR [rdx+0x10],eax
   1400166da:	add    eax,r13d
   1400166dd:	test   eax,eax
   1400166df:	jg     0x1400166eb
   1400166e1:	mov    rcx,QWORD PTR [rdx]
   1400166e4:	mov    rax,QWORD PTR [rcx]
   1400166e7:	call   QWORD PTR [rax+0x8]
   1400166ea:	nop
   1400166eb:	mov    rdx,QWORD PTR [rbp-0x50]
   1400166ef:	add    rdx,0xffffffffffffffe8
   1400166f3:	mov    eax,r13d
   1400166f6:	lock xadd DWORD PTR [rdx+0x10],eax
   1400166fb:	add    eax,r13d
   1400166fe:	test   eax,eax
   140016700:	jg     0x14001670c
   140016702:	mov    rcx,QWORD PTR [rdx]
   140016705:	mov    rax,QWORD PTR [rcx]
   140016708:	call   QWORD PTR [rax+0x8]
   14001670b:	nop
   14001670c:	mov    rdx,QWORD PTR [rbp-0x28]
   140016710:	add    rdx,0xffffffffffffffe8
   140016714:	mov    eax,r13d
   140016717:	lock xadd DWORD PTR [rdx+0x10],eax
   14001671c:	add    eax,r13d
   14001671f:	test   eax,eax
   140016721:	jg     0x14001672d
   140016723:	mov    rcx,QWORD PTR [rdx]
   140016726:	mov    rax,QWORD PTR [rcx]
   140016729:	call   QWORD PTR [rax+0x8]
   14001672c:	nop
   14001672d:	mov    rdx,QWORD PTR [rbp-0x40]
   140016731:	add    rdx,0xffffffffffffffe8
   140016735:	mov    eax,r13d
   140016738:	lock xadd DWORD PTR [rdx+0x10],eax
   14001673d:	add    eax,r13d
   140016740:	test   eax,eax
   140016742:	jg     0x14001674e
   140016744:	mov    rcx,QWORD PTR [rdx]
   140016747:	mov    rax,QWORD PTR [rcx]
   14001674a:	call   QWORD PTR [rax+0x8]
   14001674d:	nop
   14001674e:	mov    rdx,QWORD PTR [rsp+0x40]
   140016753:	add    rdx,0xffffffffffffffe8
   140016757:	mov    eax,r13d
   14001675a:	lock xadd DWORD PTR [rdx+0x10],eax
   14001675f:	add    eax,r13d
   140016762:	test   eax,eax
   140016764:	jg     0x14001676f
   140016766:	mov    rcx,QWORD PTR [rdx]
   140016769:	mov    rax,QWORD PTR [rcx]
   14001676c:	call   QWORD PTR [rax+0x8]
   14001676f:	lea    r8,[rsp+0x28]
   140016774:	lea    rdx,[rsp+0x30]
   140016779:	lea    rcx,[rsp+0x68]
   14001677e:	call   0x14000d60c
   140016783:	nop
   140016784:	mov    rdx,rax
   140016787:	mov    rcx,rsi
   14001678a:	call   0x14000cdac
   14001678f:	nop
   140016790:	mov    rdx,QWORD PTR [rsp+0x68]
   140016795:	add    rdx,0xffffffffffffffe8
   140016799:	mov    eax,r13d
   14001679c:	lock xadd DWORD PTR [rdx+0x10],eax
   1400167a1:	add    eax,r13d
   1400167a4:	test   eax,eax
   1400167a6:	jg     0x1400167b1
   1400167a8:	mov    rcx,QWORD PTR [rdx]
   1400167ab:	mov    rax,QWORD PTR [rcx]
   1400167ae:	call   QWORD PTR [rax+0x8]
   1400167b1:	mov    rcx,QWORD PTR [rsi]
   1400167b4:	call   0x1400161e8
   1400167b9:	test   eax,eax
   1400167bb:	jne    0x1400169cf
   1400167c1:	cmp    edi,ebx
   1400167c3:	jne    0x1400168ba
   1400167c9:	cmp    DWORD PTR [rip+0x462fc],r12d        # 0x14005cacc
   1400167d0:	jne    0x1400167de
   1400167d2:	call   0x140012b10
   1400167d7:	mov    DWORD PTR [rip+0x462ee],r15d        # 0x14005cacc
   1400167de:	cmp    DWORD PTR [rip+0x462d3],r12d        # 0x14005cab8
   1400167e5:	jne    0x140016809
   1400167e7:	mov    eax,DWORD PTR [rip+0x463bb]        # 0x14005cba8
   1400167ed:	mov    DWORD PTR [rip+0x462c9],eax        # 0x14005cabc
   1400167f3:	test   eax,eax
   1400167f5:	jne    0x140016802
   1400167f7:	call   0x140012e80
   1400167fc:	mov    DWORD PTR [rip+0x462c2],eax        # 0x14005cac4
   140016802:	mov    DWORD PTR [rip+0x462af],r15d        # 0x14005cab8
   140016809:	cmp    DWORD PTR [rip+0x462b8],r12d        # 0x14005cac8
   140016810:	jne    0x14001681e
   140016812:	call   0x140012d58
   140016817:	mov    DWORD PTR [rip+0x462aa],r15d        # 0x14005cac8
   14001681e:	cmp    DWORD PTR [rip+0x46347],r12d        # 0x14005cb6c
   140016825:	je     0x1400168ba
   14001682b:	lea    rdx,[rip+0x2fdfe]        # 0x140046630
   140016832:	lea    rcx,[rsp+0x48]
   140016837:	call   0x14000cd2c
   14001683c:	nop
   14001683d:	lea    r8,[rsp+0x20]
   140016842:	lea    rcx,[rbp-0x78]
   140016846:	call   0x140016ecc
   14001684b:	nop
   14001684c:	lea    r8,[rsp+0x48]
   140016851:	mov    rdx,rax
   140016854:	lea    rcx,[rsp+0x78]
   140016859:	call   0x14000d60c
   14001685e:	nop
   14001685f:	mov    rdx,rax
   140016862:	lea    rcx,[rsp+0x28]
   140016867:	call   0x14000cdac
   14001686c:	nop
   14001686d:	mov    rdx,QWORD PTR [rsp+0x78]
   140016872:	add    rdx,0xffffffffffffffe8
   140016876:	mov    eax,r13d
   140016879:	lock xadd DWORD PTR [rdx+0x10],eax
   14001687e:	add    eax,r13d
   140016881:	test   eax,eax
   140016883:	jg     0x14001688f
   140016885:	mov    rcx,QWORD PTR [rdx]
   140016888:	mov    rax,QWORD PTR [rcx]
   14001688b:	call   QWORD PTR [rax+0x8]
   14001688e:	nop
   14001688f:	mov    rdx,QWORD PTR [rbp-0x78]
   140016893:	add    rdx,0xffffffffffffffe8
   140016897:	mov    eax,r13d
   14001689a:	lock xadd DWORD PTR [rdx+0x10],eax
   14001689f:	add    eax,r13d
   1400168a2:	test   eax,eax
   1400168a4:	jg     0x1400168b0
   1400168a6:	mov    rcx,QWORD PTR [rdx]
   1400168a9:	mov    rax,QWORD PTR [rcx]
   1400168ac:	call   QWORD PTR [rax+0x8]
   1400168af:	nop
   1400168b0:	mov    rdx,QWORD PTR [rsp+0x48]
   1400168b5:	jmp    0x140016942
   1400168ba:	lea    rdx,[rip+0x2fd37]        # 0x1400465f8
   1400168c1:	lea    rcx,[rsp+0x58]
   1400168c6:	call   0x14000cd2c
   1400168cb:	nop
   1400168cc:	lea    r8,[rsp+0x20]
   1400168d1:	lea    rcx,[rbp-0x58]
   1400168d5:	call   0x140016ecc
   1400168da:	nop
   1400168db:	lea    r8,[rsp+0x58]
   1400168e0:	mov    rdx,rax
   1400168e3:	lea    rcx,[rbp-0x68]
   1400168e7:	call   0x14000d60c
   1400168ec:	nop
   1400168ed:	mov    rdx,rax
   1400168f0:	lea    rcx,[rsp+0x28]
   1400168f5:	call   0x14000cdac
   1400168fa:	nop
   1400168fb:	mov    rdx,QWORD PTR [rbp-0x68]
   1400168ff:	add    rdx,0xffffffffffffffe8
   140016903:	mov    eax,r13d
   140016906:	lock xadd DWORD PTR [rdx+0x10],eax
   14001690b:	add    eax,r13d
   14001690e:	test   eax,eax
   140016910:	jg     0x14001691c
   140016912:	mov    rcx,QWORD PTR [rdx]
   140016915:	mov    rax,QWORD PTR [rcx]
   140016918:	call   QWORD PTR [rax+0x8]
   14001691b:	nop
   14001691c:	mov    rdx,QWORD PTR [rbp-0x58]
   140016920:	add    rdx,0xffffffffffffffe8
   140016924:	mov    eax,r13d
   140016927:	lock xadd DWORD PTR [rdx+0x10],eax
   14001692c:	add    eax,r13d
   14001692f:	test   eax,eax
   140016931:	jg     0x14001693d
   140016933:	mov    rcx,QWORD PTR [rdx]
   140016936:	mov    rax,QWORD PTR [rcx]
   140016939:	call   QWORD PTR [rax+0x8]
   14001693c:	nop
   14001693d:	mov    rdx,QWORD PTR [rsp+0x58]
   140016942:	add    rdx,0xffffffffffffffe8
   140016946:	mov    eax,r13d
   140016949:	lock xadd DWORD PTR [rdx+0x10],eax
   14001694e:	add    eax,r13d
   140016951:	test   eax,eax
   140016953:	jg     0x14001695e
   140016955:	mov    rcx,QWORD PTR [rdx]
   140016958:	mov    rax,QWORD PTR [rcx]
   14001695b:	call   QWORD PTR [rax+0x8]
   14001695e:	lea    r8,[rsp+0x28]
   140016963:	lea    rdx,[rsp+0x30]
   140016968:	lea    rcx,[rbp-0x48]
   14001696c:	call   0x14000d60c
   140016971:	nop
   140016972:	mov    rdx,rax
   140016975:	mov    rcx,rsi
   140016978:	call   0x14000cdac
   14001697d:	nop
   14001697e:	mov    rdx,QWORD PTR [rbp-0x48]
   140016982:	add    rdx,0xffffffffffffffe8
   140016986:	mov    eax,r13d
   140016989:	lock xadd DWORD PTR [rdx+0x10],eax
   14001698e:	add    eax,r13d
   140016991:	test   eax,eax
   140016993:	jg     0x14001699e
   140016995:	mov    rcx,QWORD PTR [rdx]
   140016998:	mov    rax,QWORD PTR [rcx]
   14001699b:	call   QWORD PTR [rax+0x8]
   14001699e:	mov    rcx,QWORD PTR [rsi]
   1400169a1:	call   0x1400161e8
   1400169a6:	test   eax,eax
   1400169a8:	jne    0x1400169cf
   1400169aa:	mov    rcx,QWORD PTR [r14+0x8]
   1400169ae:	mov    rax,QWORD PTR [rsp+0x28]
   1400169b3:	mov    QWORD PTR [rbp-0x38],rax
   1400169b7:	mov    rax,QWORD PTR [rcx]
   1400169ba:	lea    r9,[rbp-0x38]
   1400169be:	mov    r8d,r15d
   1400169c1:	mov    edx,0xe12305e0
   1400169c6:	call   QWORD PTR [rax]
   1400169c8:	mov    ebx,0x80004005
   1400169cd:	jmp    0x1400169d2
   1400169cf:	mov    ebx,r12d
   1400169d2:	mov    rdx,QWORD PTR [rsp+0x28]
   1400169d7:	add    rdx,0xffffffffffffffe8
   1400169db:	mov    eax,r13d
   1400169de:	lock xadd DWORD PTR [rdx+0x10],eax
   1400169e3:	add    eax,r13d
   1400169e6:	test   eax,eax
   1400169e8:	jg     0x1400169f4
   1400169ea:	mov    rcx,QWORD PTR [rdx]
   1400169ed:	mov    rax,QWORD PTR [rcx]
   1400169f0:	call   QWORD PTR [rax+0x8]
   1400169f3:	nop
   1400169f4:	mov    rdx,QWORD PTR [rsp+0x30]
   1400169f9:	add    rdx,0xffffffffffffffe8
   1400169fd:	mov    eax,r13d
   140016a00:	lock xadd DWORD PTR [rdx+0x10],eax
   140016a05:	add    eax,r13d
   140016a08:	test   eax,eax
   140016a0a:	jg     0x140016a30
   140016a0c:	mov    rcx,QWORD PTR [rdx]
   140016a0f:	mov    rax,QWORD PTR [rcx]
   140016a12:	call   QWORD PTR [rax+0x8]
   140016a15:	jmp    0x140016a30
   140016a17:	mov    rcx,QWORD PTR [r14+0x8]
   140016a1b:	mov    rax,QWORD PTR [rcx]
   140016a1e:	xor    r9d,r9d
   140016a21:	xor    r8d,r8d
   140016a24:	mov    edx,0xe12305e7
   140016a29:	call   QWORD PTR [rax]
   140016a2b:	mov    ebx,0x80004005
   140016a30:	mov    rdx,QWORD PTR [rsp+0x20]
   140016a35:	add    rdx,0xffffffffffffffe8
   140016a39:	mov    ecx,r13d
   140016a3c:	lock xadd DWORD PTR [rdx+0x10],ecx
   140016a41:	add    ecx,r13d
   140016a44:	test   ecx,ecx
   140016a46:	jg     0x140016a52
   140016a48:	mov    rcx,QWORD PTR [rdx]
   140016a4b:	mov    r8,QWORD PTR [rcx]
   140016a4e:	call   QWORD PTR [r8+0x8]
   140016a52:	mov    eax,ebx
   140016a54:	mov    rcx,QWORD PTR [rbp+0x520]
   140016a5b:	xor    rcx,rsp
   140016a5e:	call   0x1400265a0
   140016a63:	add    rsp,0x638
   140016a6a:	pop    r15
   140016a6c:	pop    r14
   140016a6e:	pop    r13
   140016a70:	pop    r12
   140016a72:	pop    rdi
   140016a73:	pop    rsi
   140016a74:	pop    rbx
   140016a75:	pop    rbp
   140016a76:	ret    
   140016a77:	int3   
   140016a78:	mov    rax,rsp
   140016a7b:	push   rdi
   140016a7c:	push   r14
   140016a7e:	push   r15
   140016a80:	sub    rsp,0x40
   140016a84:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140016a8c:	mov    QWORD PTR [rax+0x8],rbx
   140016a90:	mov    QWORD PTR [rax+0x18],rbp
   140016a94:	mov    r15,r8
   140016a97:	mov    rdi,rdx
   140016a9a:	mov    r14,rcx
   140016a9d:	cmp    DWORD PTR [rdx+0x24],0x0
   140016aa1:	je     0x140016c13
   140016aa7:	cmp    DWORD PTR [rdx+0x28],0x0
   140016aab:	jne    0x140016c13
   140016ab1:	mov    rdx,QWORD PTR [rdx]
   140016ab4:	lea    rcx,[rax+0x10]
   140016ab8:	call   0x140006b8c
   140016abd:	nop
   140016abe:	lea    rcx,[rsp+0x68]
   140016ac3:	call   0x140016d70
   140016ac8:	xor    ecx,ecx
   140016aca:	lea    ebx,[rcx+0x1]
   140016acd:	cmp    DWORD PTR [r14+0x20],ecx
   140016ad1:	jle    0x140016b2c
   140016ad3:	xor    ebp,ebp
   140016ad5:	mov    rax,QWORD PTR [rsp+0x68]
   140016ada:	test   rax,rax
   140016add:	setne  bpl
   140016ae1:	mov    r11,QWORD PTR [r14+0x10]
   140016ae5:	test   ebp,ebp
   140016ae7:	je     0x140016b21
   140016ae9:	mov    rdx,QWORD PTR [r11]
   140016aec:	mov    r10,rax
   140016aef:	sub    r10,rdx
   140016af2:	movzx  r8d,WORD PTR [rdx]
   140016af6:	cmp    r8w,WORD PTR [rdx+r10*1]
   140016afb:	jne    0x140016b0b
   140016afd:	add    rdx,0x2
   140016b01:	test   r8w,r8w
   140016b05:	jne    0x140016af2
   140016b07:	xor    edx,edx
   140016b09:	jmp    0x140016b0f
   140016b0b:	sbb    edx,edx
   140016b0d:	or     edx,ebx
   140016b0f:	test   edx,edx
   140016b11:	je     0x140016b2f
   140016b13:	add    ecx,ebx
   140016b15:	add    r11,0x8
   140016b19:	cmp    ecx,DWORD PTR [r14+0x20]
   140016b1d:	jl     0x140016ae5
   140016b1f:	jmp    0x140016b2c
   140016b21:	mov    ecx,0x80004005
   140016b26:	call   0x14000400c
   140016b2b:	int3   
   140016b2c:	or     ecx,0xffffffff
   140016b2f:	cmp    ecx,0xffffffff
   140016b32:	jne    0x140016b4a
   140016b34:	mov    r8,rdi
   140016b37:	lea    rdx,[rsp+0x68]
   140016b3c:	lea    rcx,[r14+0x10]
   140016b40:	call   0x140016f88
   140016b45:	jmp    0x140016be1
   140016b4a:	test   ecx,ecx
   140016b4c:	js     0x140016bff
   140016b52:	cmp    ecx,DWORD PTR [r14+0x20]
   140016b56:	jge    0x140016bff
   140016b5c:	movsxd rax,ecx
   140016b5f:	lea    rcx,[rax+rax*8]
   140016b63:	mov    rdx,QWORD PTR [r14+0x18]
   140016b67:	cmp    DWORD PTR [rdx+rcx*8+0x24],0x0
   140016b6c:	je     0x140016b9b
   140016b6e:	mov    rdx,QWORD PTR [r15]
   140016b71:	mov    rax,QWORD PTR [rdi]
   140016b74:	mov    rcx,QWORD PTR [r14+0x8]
   140016b78:	mov    QWORD PTR [rsp+0x28],rax
   140016b7d:	mov    QWORD PTR [rsp+0x30],rdx
   140016b82:	mov    rax,QWORD PTR [rcx]
   140016b85:	lea    r9,[rsp+0x28]
   140016b8a:	mov    edx,0xa1230930
   140016b8f:	mov    r8d,0x2
   140016b95:	call   QWORD PTR [rax]
   140016b97:	xor    ebx,ebx
   140016b99:	jmp    0x140016be1
   140016b9b:	cmp    DWORD PTR [rdx+rcx*8+0x20],0x0
   140016ba0:	jne    0x140016ba9
   140016ba2:	mov    eax,DWORD PTR [rdi+0x20]
   140016ba5:	mov    DWORD PTR [rdx+rcx*8+0x20],eax
   140016ba9:	cmp    QWORD PTR [rdx+rcx*8+0x10],0x0
   140016baf:	jne    0x140016bc8
   140016bb1:	mov    rax,QWORD PTR [rdi+0x10]
   140016bb5:	mov    QWORD PTR [rdx+rcx*8+0x10],rax
   140016bba:	test   rax,rax
   140016bbd:	jne    0x140016bc8
   140016bbf:	mov    rax,QWORD PTR [rdx+rcx*8]
   140016bc3:	mov    QWORD PTR [rdx+rcx*8+0x10],rax
   140016bc8:	cmp    QWORD PTR [rdx+rcx*8+0x18],0x0
   140016bce:	jne    0x140016bd9
   140016bd0:	mov    rax,QWORD PTR [rdi+0x18]
   140016bd4:	mov    QWORD PTR [rdx+rcx*8+0x18],rax
   140016bd9:	mov    DWORD PTR [rdx+rcx*8+0x24],ebx
   140016bdd:	mov    DWORD PTR [rdx+rcx*8+0x28],ebx
   140016be1:	mov    rdx,QWORD PTR [rsp+0x68]
   140016be6:	add    rdx,0xffffffffffffffe8
   140016bea:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140016bef:	jg     0x140016bfb
   140016bf1:	mov    rcx,QWORD PTR [rdx]
   140016bf4:	mov    r8,QWORD PTR [rcx]
   140016bf7:	call   QWORD PTR [r8+0x8]
   140016bfb:	mov    eax,ebx
   140016bfd:	jmp    0x140016c15
   140016bff:	xor    r9d,r9d
   140016c02:	xor    r8d,r8d
   140016c05:	mov    edx,ebx
   140016c07:	mov    ecx,0xc000008c
   140016c0c:	call   QWORD PTR [rip+0x2a78e]        # 0x1400413a0
   140016c12:	nop
   140016c13:	xor    eax,eax
   140016c15:	mov    rbx,QWORD PTR [rsp+0x60]
   140016c1a:	mov    rbp,QWORD PTR [rsp+0x70]
   140016c1f:	add    rsp,0x40
   140016c23:	pop    r15
   140016c25:	pop    r14
   140016c27:	pop    rdi
   140016c28:	ret    
   140016c29:	int3   
   140016c2a:	int3   
   140016c2b:	int3   
   140016c2c:	mov    eax,DWORD PTR [rcx+0x20]
   140016c2f:	ret    
   140016c30:	sub    rsp,0x28
   140016c34:	mov    r8,rcx
   140016c37:	cmp    edx,DWORD PTR [rcx+0x20]
   140016c3a:	jb     0x140016c43
   140016c3c:	xor    eax,eax
   140016c3e:	add    rsp,0x28
   140016c42:	ret    
   140016c43:	test   edx,edx
   140016c45:	js     0x140016c5d
   140016c47:	cmp    edx,DWORD PTR [rcx+0x20]
   140016c4a:	jge    0x140016c5d
   140016c4c:	movsxd rax,edx
   140016c4f:	lea    rcx,[rax+rax*8]
   140016c53:	mov    rax,QWORD PTR [r8+0x18]
   140016c57:	lea    rax,[rax+rcx*8]
   140016c5b:	jmp    0x140016c3e
   140016c5d:	xor    r9d,r9d
   140016c60:	xor    r8d,r8d
   140016c63:	mov    ecx,0xc000008c
   140016c68:	lea    edx,[r9+0x1]
   140016c6c:	call   QWORD PTR [rip+0x2a72e]        # 0x1400413a0
   140016c72:	int3   
   140016c73:	int3   
   140016c74:	rex push rdi
   140016c76:	sub    rsp,0x30
   140016c7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016c83:	mov    QWORD PTR [rsp+0x48],rbx
   140016c88:	mov    rdi,rcx
   140016c8b:	lea    rcx,[rsp+0x40]
   140016c90:	call   0x140006b8c
   140016c95:	nop
   140016c96:	lea    rcx,[rsp+0x40]
   140016c9b:	call   0x140016d70
   140016ca0:	xor    edx,edx
   140016ca2:	mov    r11d,DWORD PTR [rdi+0x20]
   140016ca6:	test   r11d,r11d
   140016ca9:	jle    0x140016d02
   140016cab:	mov    rbx,QWORD PTR [rax]
   140016cae:	xor    r10d,r10d
   140016cb1:	test   rbx,rbx
   140016cb4:	setne  r10b
   140016cb8:	mov    r8,QWORD PTR [rdi+0x10]
   140016cbc:	test   r10d,r10d
   140016cbf:	je     0x140016cf7
   140016cc1:	mov    rax,QWORD PTR [r8]
   140016cc4:	mov    r9,rbx
   140016cc7:	sub    r9,rax
   140016cca:	movzx  ecx,WORD PTR [rax]
   140016ccd:	cmp    cx,WORD PTR [rax+r9*1]
   140016cd2:	jne    0x140016ce1
   140016cd4:	add    rax,0x2
   140016cd8:	test   cx,cx
   140016cdb:	jne    0x140016cca
   140016cdd:	xor    eax,eax
   140016cdf:	jmp    0x140016ce6
   140016ce1:	sbb    eax,eax
   140016ce3:	or     eax,0x1
   140016ce6:	test   eax,eax
   140016ce8:	je     0x140016d05
   140016cea:	inc    edx
   140016cec:	add    r8,0x8
   140016cf0:	cmp    edx,r11d
   140016cf3:	jl     0x140016cbc
   140016cf5:	jmp    0x140016d02
   140016cf7:	mov    ecx,0x80004005
   140016cfc:	call   0x14000400c
   140016d01:	int3   
   140016d02:	or     edx,0xffffffff
   140016d05:	cmp    edx,0xffffffff
   140016d08:	je     0x140016d46
   140016d0a:	test   edx,edx
   140016d0c:	js     0x140016d30
   140016d0e:	cmp    edx,r11d
   140016d11:	jge    0x140016d30
   140016d13:	movsxd rax,edx
   140016d16:	lea    rcx,[rax+rax*8]
   140016d1a:	mov    rax,QWORD PTR [rdi+0x18]
   140016d1e:	lea    rbx,[rax+rcx*8]
   140016d22:	cmp    DWORD PTR [rbx+0x24],0x0
   140016d26:	je     0x140016d48
   140016d28:	cmp    DWORD PTR [rbx+0x28],0x0
   140016d2c:	je     0x140016d46
   140016d2e:	jmp    0x140016d48
   140016d30:	xor    r9d,r9d
   140016d33:	xor    r8d,r8d
   140016d36:	lea    edx,[r9+0x1]
   140016d3a:	mov    ecx,0xc000008c
   140016d3f:	call   QWORD PTR [rip+0x2a65b]        # 0x1400413a0
   140016d45:	int3   
   140016d46:	xor    ebx,ebx
   140016d48:	mov    rdx,QWORD PTR [rsp+0x40]
   140016d4d:	add    rdx,0xffffffffffffffe8
   140016d51:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140016d56:	jg     0x140016d62
   140016d58:	mov    rcx,QWORD PTR [rdx]
   140016d5b:	mov    r8,QWORD PTR [rcx]
   140016d5e:	call   QWORD PTR [r8+0x8]
   140016d62:	mov    rax,rbx
   140016d65:	mov    rbx,QWORD PTR [rsp+0x48]
   140016d6a:	add    rsp,0x30
   140016d6e:	pop    rdi
   140016d6f:	ret    
   140016d70:	mov    QWORD PTR [rsp+0x8],rbx
   140016d75:	mov    QWORD PTR [rsp+0x10],rsi
   140016d7a:	push   rdi
   140016d7b:	sub    rsp,0x20
   140016d7f:	mov    rax,QWORD PTR [rcx]
   140016d82:	xor    esi,esi
   140016d84:	mov    rdi,rcx
   140016d87:	movsxd rbx,DWORD PTR [rax-0x10]
   140016d8b:	test   ebx,ebx
   140016d8d:	js     0x140016ddb
   140016d8f:	lea    ecx,[rsi+0x1]
   140016d92:	sub    ecx,DWORD PTR [rax-0x8]
   140016d95:	mov    eax,DWORD PTR [rax-0xc]
   140016d98:	sub    eax,ebx
   140016d9a:	or     ecx,eax
   140016d9c:	jge    0x140016da8
   140016d9e:	mov    edx,ebx
   140016da0:	mov    rcx,rdi
   140016da3:	call   0x140007098
   140016da8:	mov    rcx,QWORD PTR [rdi]
   140016dab:	lea    eax,[rbx+0x1]
   140016dae:	movsxd rdx,eax
   140016db1:	call   0x1400343cc
   140016db6:	mov    rax,QWORD PTR [rdi]
   140016db9:	cmp    ebx,DWORD PTR [rax-0xc]
   140016dbc:	jg     0x140016de6
   140016dbe:	mov    DWORD PTR [rax-0x10],ebx
   140016dc1:	mov    rax,QWORD PTR [rdi]
   140016dc4:	mov    WORD PTR [rax+rbx*2],si
   140016dc8:	mov    rbx,QWORD PTR [rsp+0x30]
   140016dcd:	mov    rsi,QWORD PTR [rsp+0x38]
   140016dd2:	mov    rax,rdi
   140016dd5:	add    rsp,0x20
   140016dd9:	pop    rdi
   140016dda:	ret    
   140016ddb:	mov    ecx,0x80070057
   140016de0:	call   0x14000400c
   140016de5:	int3   
   140016de6:	mov    ecx,0x80070057
   140016deb:	call   0x14000400c
   140016df0:	int3   
   140016df1:	int3   
   140016df2:	int3   
   140016df3:	int3   
   140016df4:	mov    rax,rsp
   140016df7:	mov    QWORD PTR [rax+0x8],rcx
   140016dfb:	push   r14
   140016dfd:	sub    rsp,0x40
   140016e01:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140016e09:	mov    QWORD PTR [rax+0x10],rbx
   140016e0d:	mov    QWORD PTR [rax+0x18],rsi
   140016e11:	mov    QWORD PTR [rax+0x20],rdi
   140016e15:	mov    rsi,r8
   140016e18:	mov    r14,rdx
   140016e1b:	mov    rdi,rcx
   140016e1e:	xor    ebx,ebx
   140016e20:	mov    DWORD PTR [rax-0x18],ebx
   140016e23:	mov    rax,QWORD PTR [rdx]
   140016e26:	mov    rcx,QWORD PTR [rax-0x18]
   140016e2a:	test   rcx,rcx
   140016e2d:	je     0x140016e3a
   140016e2f:	mov    rax,QWORD PTR [rcx]
   140016e32:	call   QWORD PTR [rax+0x20]
   140016e35:	mov    rdx,rax
   140016e38:	jmp    0x140016e3d
   140016e3a:	mov    rdx,rbx
   140016e3d:	test   rdx,rdx
   140016e40:	jne    0x140016e56
   140016e42:	lea    rcx,[rip+0x434df]        # 0x14005a328
   140016e49:	mov    rax,QWORD PTR [rip+0x434d8]        # 0x14005a328
   140016e50:	call   QWORD PTR [rax+0x20]
   140016e53:	mov    rdx,rax
   140016e56:	mov    ecx,ebx
   140016e58:	test   rdx,rdx
   140016e5b:	setne  cl
   140016e5e:	test   ecx,ecx
   140016e60:	jne    0x140016e6d
   140016e62:	mov    ecx,0x80004005
   140016e67:	call   0x14000400c
   140016e6c:	int3   
   140016e6d:	mov    rax,QWORD PTR [rdx]
   140016e70:	mov    rcx,rdx
   140016e73:	call   QWORD PTR [rax+0x18]
   140016e76:	add    rax,0x18
   140016e7a:	mov    QWORD PTR [rdi],rax
   140016e7d:	mov    DWORD PTR [rsp+0x30],0x1
   140016e85:	test   rsi,rsi
   140016e88:	je     0x140016e99
   140016e8a:	or     rax,0xffffffffffffffff
   140016e8e:	inc    rax
   140016e91:	cmp    WORD PTR [rsi+rax*2],bx
   140016e95:	jne    0x140016e8e
   140016e97:	mov    ebx,eax
   140016e99:	mov    rdx,QWORD PTR [r14]
   140016e9c:	mov    DWORD PTR [rsp+0x20],ebx
   140016ea0:	mov    r9,rsi
   140016ea3:	mov    r8d,DWORD PTR [rdx-0x10]
   140016ea7:	mov    rcx,rdi
   140016eaa:	call   0x14000da40
   140016eaf:	mov    rax,rdi
   140016eb2:	mov    rbx,QWORD PTR [rsp+0x58]
   140016eb7:	mov    rsi,QWORD PTR [rsp+0x60]
   140016ebc:	mov    rdi,QWORD PTR [rsp+0x68]
   140016ec1:	add    rsp,0x40
   140016ec5:	pop    r14
   140016ec7:	ret    
   140016ec8:	int3   
   140016ec9:	int3   
   140016eca:	int3   
   140016ecb:	int3   
   140016ecc:	mov    rax,rsp
   140016ecf:	mov    QWORD PTR [rax+0x8],rcx
   140016ed3:	push   rdi
   140016ed4:	sub    rsp,0x40
   140016ed8:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140016ee0:	mov    QWORD PTR [rax+0x10],rbx
   140016ee4:	mov    rdi,r8
   140016ee7:	mov    rbx,rcx
   140016eea:	and    DWORD PTR [rax-0x18],0x0
   140016eee:	mov    rax,QWORD PTR [r8]
   140016ef1:	mov    rcx,QWORD PTR [rax-0x18]
   140016ef5:	test   rcx,rcx
   140016ef8:	je     0x140016f05
   140016efa:	mov    rax,QWORD PTR [rcx]
   140016efd:	call   QWORD PTR [rax+0x20]
   140016f00:	mov    rdx,rax
   140016f03:	jmp    0x140016f07
   140016f05:	xor    edx,edx
   140016f07:	test   rdx,rdx
   140016f0a:	jne    0x140016f20
   140016f0c:	lea    rcx,[rip+0x43415]        # 0x14005a328
   140016f13:	mov    rax,QWORD PTR [rip+0x4340e]        # 0x14005a328
   140016f1a:	call   QWORD PTR [rax+0x20]
   140016f1d:	mov    rdx,rax
   140016f20:	xor    ecx,ecx
   140016f22:	test   rdx,rdx
   140016f25:	setne  cl
   140016f28:	test   ecx,ecx
   140016f2a:	jne    0x140016f37
   140016f2c:	mov    ecx,0x80004005
   140016f31:	call   0x14000400c
   140016f36:	int3   
   140016f37:	mov    rax,QWORD PTR [rdx]
   140016f3a:	mov    rcx,rdx
   140016f3d:	call   QWORD PTR [rax+0x18]
   140016f40:	add    rax,0x18
   140016f44:	mov    QWORD PTR [rbx],rax
   140016f47:	mov    DWORD PTR [rsp+0x30],0x1
   140016f4f:	mov    r9,QWORD PTR [rdi]
   140016f52:	mov    eax,DWORD PTR [r9-0x10]
   140016f56:	mov    DWORD PTR [rsp+0x20],eax
   140016f5a:	mov    r8d,0x10
   140016f60:	lea    rdx,[rip+0x2f6a1]        # 0x140046608
   140016f67:	mov    rcx,rbx
   140016f6a:	call   0x14000da40
   140016f6f:	mov    rax,rbx
   140016f72:	mov    rbx,QWORD PTR [rsp+0x58]
   140016f77:	add    rsp,0x40
   140016f7b:	pop    rdi
   140016f7c:	ret    
   140016f7d:	int3   
   140016f7e:	int3   
   140016f7f:	int3   
   140016f80:	jmp    0x140017088
   140016f85:	int3   
   140016f86:	int3   
   140016f87:	int3   
   140016f88:	mov    QWORD PTR [rsp+0x8],rcx
   140016f8d:	push   rbp
   140016f8e:	push   rsi
   140016f8f:	push   rdi
   140016f90:	sub    rsp,0x30
   140016f94:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016f9d:	mov    QWORD PTR [rsp+0x58],rbx
   140016fa2:	mov    rdi,r8
   140016fa5:	mov    rbp,rdx
   140016fa8:	mov    rbx,rcx
   140016fab:	mov    eax,DWORD PTR [rcx+0x10]
   140016fae:	inc    eax
   140016fb0:	movsxd rdx,eax
   140016fb3:	mov    r8d,0x8
   140016fb9:	mov    rcx,QWORD PTR [rcx]
   140016fbc:	call   0x1400275ec
   140016fc1:	test   rax,rax
   140016fc4:	jne    0x140016fcd
   140016fc6:	xor    eax,eax
   140016fc8:	jmp    0x140017079
   140016fcd:	mov    QWORD PTR [rbx],rax
   140016fd0:	mov    eax,DWORD PTR [rbx+0x10]
   140016fd3:	inc    eax
   140016fd5:	movsxd rdx,eax
   140016fd8:	mov    r8d,0x48
   140016fde:	mov    rcx,QWORD PTR [rbx+0x8]
   140016fe2:	call   0x1400275ec
   140016fe7:	test   rax,rax
   140016fea:	je     0x140016fc6
   140016fec:	mov    QWORD PTR [rbx+0x8],rax
   140016ff0:	movsxd rax,DWORD PTR [rbx+0x10]
   140016ff4:	mov    DWORD PTR [rsp+0x68],eax
   140016ff8:	mov    rsi,rax
   140016ffb:	mov    rax,QWORD PTR [rbx]
   140016ffe:	lea    rcx,[rax+rsi*8]
   140017002:	mov    QWORD PTR [rsp+0x28],rcx
   140017007:	test   rcx,rcx
   14001700a:	je     0x140017015
   14001700c:	mov    rdx,rbp
   14001700f:	call   0x140006af0
   140017014:	nop
   140017015:	lea    rcx,[rsi+rsi*8]
   140017019:	mov    rax,QWORD PTR [rbx+0x8]
   14001701d:	lea    rdx,[rax+rcx*8]
   140017021:	mov    QWORD PTR [rsp+0x28],rdx
   140017026:	test   rdx,rdx
   140017029:	je     0x140017071
   14001702b:	mov    rax,QWORD PTR [rdi]
   14001702e:	mov    QWORD PTR [rdx],rax
   140017031:	mov    rax,QWORD PTR [rdi+0x8]
   140017035:	mov    QWORD PTR [rdx+0x8],rax
   140017039:	mov    rax,QWORD PTR [rdi+0x10]
   14001703d:	mov    QWORD PTR [rdx+0x10],rax
   140017041:	mov    rax,QWORD PTR [rdi+0x18]
   140017045:	mov    QWORD PTR [rdx+0x18],rax
   140017049:	mov    rcx,QWORD PTR [rdi+0x20]
   14001704d:	mov    QWORD PTR [rdx+0x20],rcx
   140017051:	mov    rcx,QWORD PTR [rdi+0x28]
   140017055:	mov    QWORD PTR [rdx+0x28],rcx
   140017059:	mov    rcx,QWORD PTR [rdi+0x30]
   14001705d:	mov    QWORD PTR [rdx+0x30],rcx
   140017061:	mov    rcx,QWORD PTR [rdi+0x38]
   140017065:	mov    QWORD PTR [rdx+0x38],rcx
   140017069:	mov    rcx,QWORD PTR [rdi+0x40]
   14001706d:	mov    QWORD PTR [rdx+0x40],rcx
   140017071:	inc    DWORD PTR [rbx+0x10]
   140017074:	mov    eax,0x1
   140017079:	mov    rbx,QWORD PTR [rsp+0x58]
   14001707e:	add    rsp,0x30
   140017082:	pop    rdi
   140017083:	pop    rsi
   140017084:	pop    rbp
   140017085:	ret    
   140017086:	int3   
   140017087:	int3   
   140017088:	rex push rdi
   14001708a:	sub    rsp,0x30
   14001708e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017097:	mov    QWORD PTR [rsp+0x48],rbx
   14001709c:	mov    QWORD PTR [rsp+0x50],rsi
   1400170a1:	mov    rbx,rcx
   1400170a4:	cmp    QWORD PTR [rcx],0x0
   1400170a8:	je     0x1400170ec
   1400170aa:	xor    edi,edi
   1400170ac:	cmp    DWORD PTR [rcx+0x10],edi
   1400170af:	jle    0x1400170e0
   1400170b1:	xor    esi,esi
   1400170b3:	mov    rcx,QWORD PTR [rbx]
   1400170b6:	add    rcx,rsi
   1400170b9:	mov    QWORD PTR [rsp+0x40],rcx
   1400170be:	mov    rdx,QWORD PTR [rcx]
   1400170c1:	sub    rdx,0x18
   1400170c5:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400170ca:	jg     0x1400170d5
   1400170cc:	mov    rcx,QWORD PTR [rdx]
   1400170cf:	mov    rax,QWORD PTR [rcx]
   1400170d2:	call   QWORD PTR [rax+0x8]
   1400170d5:	inc    edi
   1400170d7:	add    rsi,0x8
   1400170db:	cmp    edi,DWORD PTR [rbx+0x10]
   1400170de:	jl     0x1400170b3
   1400170e0:	mov    rcx,QWORD PTR [rbx]
   1400170e3:	call   0x1400273dc
   1400170e8:	and    QWORD PTR [rbx],0x0
   1400170ec:	mov    rcx,QWORD PTR [rbx+0x8]
   1400170f0:	test   rcx,rcx
   1400170f3:	je     0x1400170ff
   1400170f5:	call   0x1400273dc
   1400170fa:	and    QWORD PTR [rbx+0x8],0x0
   1400170ff:	and    DWORD PTR [rbx+0x10],0x0
   140017103:	mov    rbx,QWORD PTR [rsp+0x48]
   140017108:	mov    rsi,QWORD PTR [rsp+0x50]
   14001710d:	add    rsp,0x30
   140017111:	pop    rdi
   140017112:	ret    
   140017113:	int3   
   140017114:	add    rcx,0x10
   140017118:	jmp    0x14000cdac
   14001711d:	int3   
   14001711e:	int3   
   14001711f:	int3   
   140017120:	mov    QWORD PTR [rsp+0x8],rbx
   140017125:	push   rdi
   140017126:	sub    rsp,0x20
   14001712a:	mov    ebx,edx
   14001712c:	mov    rdi,rcx
   14001712f:	call   0x140017150
   140017134:	test   bl,0x1
   140017137:	je     0x140017141
   140017139:	mov    rcx,rdi
   14001713c:	call   0x14002657c
   140017141:	mov    rax,rdi
   140017144:	mov    rbx,QWORD PTR [rsp+0x30]
   140017149:	add    rsp,0x20
   14001714d:	pop    rdi
   14001714e:	ret    
   14001714f:	int3   
   140017150:	mov    QWORD PTR [rsp+0x8],rcx
   140017155:	sub    rsp,0x38
   140017159:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017162:	lea    rax,[rip+0x2f54f]        # 0x1400466b8
   140017169:	mov    QWORD PTR [rcx],rax
   14001716c:	lea    rax,[rcx+0x10]
   140017170:	mov    QWORD PTR [rsp+0x40],rax
   140017175:	mov    rdx,QWORD PTR [rax]
   140017178:	sub    rdx,0x18
   14001717c:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140017181:	jg     0x14001718c
   140017183:	mov    rcx,QWORD PTR [rdx]
   140017186:	mov    rax,QWORD PTR [rcx]
   140017189:	call   QWORD PTR [rax+0x8]
   14001718c:	add    rsp,0x38
   140017190:	ret    
   140017191:	int3   
   140017192:	int3   
   140017193:	int3   
   140017194:	mov    QWORD PTR [rsp+0x20],rbx
   140017199:	push   rbp
   14001719a:	push   rsi
   14001719b:	push   rdi
   14001719c:	lea    rbp,[rsp-0x47]
   1400171a1:	sub    rsp,0xe0
   1400171a8:	mov    rax,QWORD PTR [rip+0x41ed9]        # 0x140059088
   1400171af:	xor    rax,rsp
   1400171b2:	mov    QWORD PTR [rbp+0x37],rax
   1400171b6:	mov    rax,QWORD PTR [rdx]
   1400171b9:	mov    rbx,rdx
   1400171bc:	mov    rdi,rcx
   1400171bf:	lea    rdx,[rbp-0x79]
   1400171c3:	mov    rcx,rbx
   1400171c6:	mov    rsi,r8
   1400171c9:	call   QWORD PTR [rax+0x20]
   1400171cc:	mov    rax,QWORD PTR [rbx]
   1400171cf:	lea    rdx,[rbp-0x75]
   1400171d3:	mov    rcx,rbx
   1400171d6:	call   QWORD PTR [rax+0x18]
   1400171d9:	mov    r9d,DWORD PTR [rbp-0x79]
   1400171dd:	mov    ebx,0x20
   1400171e2:	lea    r8,[rip+0x2e757]        # 0x140045940
   1400171e9:	lea    rcx,[rbp-0x49]
   1400171ed:	mov    edx,ebx
   1400171ef:	call   0x140034420
   1400171f4:	mov    r9d,DWORD PTR [rbp-0x75]
   1400171f8:	lea    r8,[rip+0x2e741]        # 0x140045940
   1400171ff:	lea    rcx,[rbp-0x9]
   140017203:	mov    edx,ebx
   140017205:	call   0x140034420
   14001720a:	mov    rax,QWORD PTR [rdi+0x10]
   14001720e:	mov    rcx,QWORD PTR [rdi+0x8]
   140017212:	mov    QWORD PTR [rbp-0x71],rax
   140017216:	lea    rax,[rbp-0x49]
   14001721a:	lea    r9,[rbp-0x71]
   14001721e:	mov    QWORD PTR [rbp-0x69],rax
   140017222:	lea    rax,[rbp-0x9]
   140017226:	lea    r8d,[rbx-0x1c]
   14001722a:	mov    QWORD PTR [rbp-0x61],rax
   14001722e:	mov    rax,QWORD PTR [rcx]
   140017231:	mov    edx,0xe12305e4
   140017236:	mov    QWORD PTR [rbp-0x59],rsi
   14001723a:	call   QWORD PTR [rax]
   14001723c:	mov    rcx,QWORD PTR [rbp+0x37]
   140017240:	xor    rcx,rsp
   140017243:	call   0x1400265a0
   140017248:	mov    rbx,QWORD PTR [rsp+0x118]
   140017250:	add    rsp,0xe0
   140017257:	pop    rdi
   140017258:	pop    rsi
   140017259:	pop    rbp
   14001725a:	ret    
   14001725b:	int3   
   14001725c:	sub    rsp,0x28
   140017260:	call   0x140017194
   140017265:	xor    eax,eax
   140017267:	add    rsp,0x28
   14001726b:	ret    
   14001726c:	xor    eax,eax
   14001726e:	ret    
   14001726f:	int3   
   140017270:	add    rcx,0x60
   140017274:	jmp    0x14000cdac
   140017279:	int3   
   14001727a:	int3   
   14001727b:	int3   
   14001727c:	mov    BYTE PTR [rcx+0x8],dl
   14001727f:	ret    
   140017280:	mov    rax,rsp
   140017283:	mov    QWORD PTR [rax+0x8],rcx
   140017287:	push   rdi
   140017288:	sub    rsp,0x30
   14001728c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140017294:	mov    QWORD PTR [rax+0x10],rbx
   140017298:	mov    QWORD PTR [rax+0x18],rsi
   14001729c:	mov    rbx,r8
   14001729f:	mov    rdi,rcx
   1400172a2:	lea    rax,[rip+0x2f60f]        # 0x1400468b8
   1400172a9:	mov    QWORD PTR [rcx],rax
   1400172ac:	lea    rax,[rip+0x2f575]        # 0x140046828
   1400172b3:	mov    QWORD PTR [rcx],rax
   1400172b6:	xor    esi,esi
   1400172b8:	mov    BYTE PTR [rcx+0x8],sil
   1400172bc:	mov    QWORD PTR [rcx+0x10],rsi
   1400172c0:	mov    QWORD PTR [rcx+0x18],rsi
   1400172c4:	mov    DWORD PTR [rcx+0x20],esi
   1400172c7:	mov    QWORD PTR [rcx+0x30],rsi
   1400172cb:	mov    DWORD PTR [rcx+0x38],esi
   1400172ce:	mov    QWORD PTR [rcx+0x40],rsi
   1400172d2:	mov    DWORD PTR [rcx+0x48],esi
   1400172d5:	mov    QWORD PTR [rcx+0x58],rdx
   1400172d9:	add    rcx,0x60
   1400172dd:	lea    rdx,[rip+0x2ea0a]        # 0x140045cee
   1400172e4:	call   0x14000cd2c
   1400172e9:	nop
   1400172ea:	mov    QWORD PTR [rdi+0x68],rbx
   1400172ee:	cmp    DWORD PTR [rip+0x457d8],esi        # 0x14005cacc
   1400172f4:	jne    0x140017305
   1400172f6:	call   0x140012b10
   1400172fb:	mov    DWORD PTR [rip+0x457c7],0x1        # 0x14005cacc
   140017305:	mov    eax,DWORD PTR [rip+0x45899]        # 0x14005cba4
   14001730b:	mov    DWORD PTR [rdi+0x4c],eax
   14001730e:	mov    ecx,DWORD PTR [rip+0x45890]        # 0x14005cba4
   140017314:	cmp    ecx,0x3
   140017317:	jne    0x140017322
   140017319:	lea    rax,[rip+0x2f290]        # 0x1400465b0
   140017320:	jmp    0x14001734c
   140017322:	cmp    ecx,0x2
   140017325:	jne    0x140017330
   140017327:	lea    rax,[rip+0x2f28a]        # 0x1400465b8
   14001732e:	jmp    0x14001734c
   140017330:	cmp    ecx,0x5
   140017333:	jne    0x14001733e
   140017335:	lea    rax,[rip+0x2f284]        # 0x1400465c0
   14001733c:	jmp    0x14001734c
   14001733e:	lea    rax,[rip+0x2f283]        # 0x1400465c8
   140017345:	cmp    ecx,0x6
   140017348:	cmovne rax,rsi
   14001734c:	mov    QWORD PTR [rdi+0x50],rax
   140017350:	mov    rax,rdi
   140017353:	mov    rbx,QWORD PTR [rsp+0x48]
   140017358:	mov    rsi,QWORD PTR [rsp+0x50]
   14001735d:	add    rsp,0x30
   140017361:	pop    rdi
   140017362:	ret    
   140017363:	int3   
   140017364:	mov    QWORD PTR [rsp+0x8],rbx
   140017369:	push   rdi
   14001736a:	sub    rsp,0x20
   14001736e:	mov    ebx,edx
   140017370:	mov    rdi,rcx
   140017373:	call   0x140017394
   140017378:	test   bl,0x1
   14001737b:	je     0x140017385
   14001737d:	mov    rcx,rdi
   140017380:	call   0x14002657c
   140017385:	mov    rax,rdi
   140017388:	mov    rbx,QWORD PTR [rsp+0x30]
   14001738d:	add    rsp,0x20
   140017391:	pop    rdi
   140017392:	ret    
   140017393:	int3   
   140017394:	mov    QWORD PTR [rsp+0x8],rcx
   140017399:	push   rbx
   14001739a:	sub    rsp,0x30
   14001739e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400173a7:	mov    rbx,rcx
   1400173aa:	lea    rax,[rip+0x2f477]        # 0x140046828
   1400173b1:	mov    QWORD PTR [rcx],rax
   1400173b4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400173b8:	call   0x1400273dc
   1400173bd:	nop
   1400173be:	lea    rax,[rbx+0x60]
   1400173c2:	mov    QWORD PTR [rsp+0x48],rax
   1400173c7:	mov    rdx,QWORD PTR [rax]
   1400173ca:	sub    rdx,0x18
   1400173ce:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400173d3:	jg     0x1400173df
   1400173d5:	mov    rcx,QWORD PTR [rdx]
   1400173d8:	mov    rax,QWORD PTR [rcx]
   1400173db:	call   QWORD PTR [rax+0x8]
   1400173de:	nop
   1400173df:	lea    rax,[rip+0x2f4d2]        # 0x1400468b8
   1400173e6:	mov    QWORD PTR [rbx],rax
   1400173e9:	add    rsp,0x30
   1400173ed:	pop    rbx
   1400173ee:	ret    
   1400173ef:	int3   
   1400173f0:	sub    rsp,0x28
   1400173f4:	cmp    QWORD PTR [rcx+0x50],0x0
   1400173f9:	jne    0x140017416
   1400173fb:	mov    rcx,QWORD PTR [rcx+0x68]
   1400173ff:	xor    r9d,r9d
   140017402:	xor    r8d,r8d
   140017405:	mov    rax,QWORD PTR [rcx]
   140017408:	mov    edx,0xe12305e7
   14001740d:	call   QWORD PTR [rax]
   14001740f:	mov    eax,0x80004005
   140017414:	jmp    0x140017418
   140017416:	xor    eax,eax
   140017418:	add    rsp,0x28
   14001741c:	ret    
   14001741d:	int3   
   14001741e:	int3   
   14001741f:	int3   
   140017420:	mov    QWORD PTR [rsp+0x8],rbx
   140017425:	mov    QWORD PTR [rsp+0x10],rsi
   14001742a:	push   rdi
   14001742b:	sub    rsp,0x30
   14001742f:	mov    rbx,rcx
   140017432:	mov    rcx,QWORD PTR [rcx+0x28]
   140017436:	mov    edi,edx
   140017438:	mov    rax,QWORD PTR [rcx]
   14001743b:	lea    r9,[rbx+0x38]
   14001743f:	lea    r8,[rbx+0x30]
   140017443:	call   QWORD PTR [rax+0x28]
   140017446:	mov    esi,eax
   140017448:	test   eax,eax
   14001744a:	js     0x140017466
   14001744c:	mov    rcx,QWORD PTR [rbx+0x28]
   140017450:	lea    r9,[rbx+0x48]
   140017454:	lea    r8,[rbx+0x40]
   140017458:	mov    rax,QWORD PTR [rcx]
   14001745b:	mov    edx,edi
   14001745d:	call   QWORD PTR [rax+0x68]
   140017460:	mov    esi,eax
   140017462:	test   eax,eax
   140017464:	jns    0x1400174ab
   140017466:	mov    r8d,DWORD PTR [rbx+0x20]
   14001746a:	mov    rdx,QWORD PTR [rbx+0x18]
   14001746e:	call   0x1400174c0
   140017473:	mov    rdi,rax
   140017476:	test   rax,rax
   140017479:	je     0x1400174a3
   14001747b:	mov    rdx,QWORD PTR [rbx+0x60]
   14001747f:	mov    rcx,QWORD PTR [rbx+0x68]
   140017483:	lea    r9,[rsp+0x20]
   140017488:	mov    r10,QWORD PTR [rcx]
   14001748b:	mov    QWORD PTR [rsp+0x28],rdx
   140017490:	mov    r8d,0x2
   140017496:	mov    edx,0xe12305e6
   14001749b:	mov    QWORD PTR [rsp+0x20],rax
   1400174a0:	call   QWORD PTR [r10]
   1400174a3:	mov    rcx,rdi
   1400174a6:	call   0x1400273dc
   1400174ab:	mov    rbx,QWORD PTR [rsp+0x40]
   1400174b0:	mov    eax,esi
   1400174b2:	mov    rsi,QWORD PTR [rsp+0x48]
   1400174b7:	add    rsp,0x30
   1400174bb:	pop    rdi
   1400174bc:	ret    
   1400174bd:	int3   
   1400174be:	int3   
   1400174bf:	int3   
   1400174c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400174c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400174ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400174cf:	push   rdi
   1400174d0:	sub    rsp,0x20
   1400174d4:	movsxd rdi,r8d
   1400174d7:	mov    rbp,rdx
   1400174da:	lea    eax,[rdi+0x1]
   1400174dd:	movsxd rsi,eax
   1400174e0:	lea    rcx,[rsi+rsi*1]
   1400174e4:	call   0x140029d54
   1400174e9:	mov    rbx,rax
   1400174ec:	test   rax,rax
   1400174ef:	jne    0x1400174f5
   1400174f1:	xor    eax,eax
   1400174f3:	jmp    0x140017517
   1400174f5:	mov    r9,rdi
   1400174f8:	mov    r8,rbp
   1400174fb:	mov    rdx,rsi
   1400174fe:	mov    rcx,rax
   140017501:	call   0x14002e200
   140017506:	test   eax,eax
   140017508:	je     0x140017514
   14001750a:	mov    rcx,rbx
   14001750d:	call   0x1400273dc
   140017512:	jmp    0x1400174f1
   140017514:	mov    rax,rbx
   140017517:	mov    rbx,QWORD PTR [rsp+0x30]
   14001751c:	mov    rbp,QWORD PTR [rsp+0x38]
   140017521:	mov    rsi,QWORD PTR [rsp+0x40]
   140017526:	add    rsp,0x20
   14001752a:	pop    rdi
   14001752b:	ret    
   14001752c:	mov    QWORD PTR [rsp+0x8],rbx
   140017531:	push   rdi
   140017532:	sub    rsp,0x20
   140017536:	mov    r8d,DWORD PTR [rcx+0x48]
   14001753a:	mov    rdx,QWORD PTR [rcx+0x40]
   14001753e:	call   0x1400174c0
   140017543:	xor    r8d,r8d
   140017546:	xor    edx,edx
   140017548:	mov    rcx,rax
   14001754b:	mov    rdi,rax
   14001754e:	call   0x140027354
   140017553:	mov    rcx,rdi
   140017556:	mov    ebx,eax
   140017558:	call   0x1400273dc
   14001755d:	mov    eax,ebx
   14001755f:	mov    rbx,QWORD PTR [rsp+0x30]
   140017564:	add    rsp,0x20
   140017568:	pop    rdi
   140017569:	ret    
   14001756a:	int3   
   14001756b:	int3   
   14001756c:	mov    QWORD PTR [rsp+0x8],rbx
   140017571:	mov    QWORD PTR [rsp+0x10],rsi
   140017576:	push   rdi
   140017577:	sub    rsp,0x40
   14001757b:	mov    r8d,DWORD PTR [rcx+0x38]
   14001757f:	mov    rbx,rdx
   140017582:	mov    rdx,QWORD PTR [rcx+0x30]
   140017586:	mov    rdi,rcx
   140017589:	call   0x1400174c0
   14001758e:	mov    rdx,QWORD PTR [rdi+0x60]
   140017592:	mov    rcx,QWORD PTR [rdi+0x68]
   140017596:	mov    QWORD PTR [rsp+0x30],rdx
   14001759b:	lea    r9,[rsp+0x20]
   1400175a0:	mov    r10,QWORD PTR [rcx]
   1400175a3:	mov    edx,0xe12305e9
   1400175a8:	mov    r8d,0x3
   1400175ae:	mov    rsi,rax
   1400175b1:	mov    QWORD PTR [rsp+0x20],rax
   1400175b6:	mov    QWORD PTR [rsp+0x28],rbx
   1400175bb:	call   QWORD PTR [r10]
   1400175be:	mov    rcx,rsi
   1400175c1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400175c6:	mov    rsi,QWORD PTR [rsp+0x58]
   1400175cb:	add    rsp,0x40
   1400175cf:	pop    rdi
   1400175d0:	jmp    0x1400273dc
   1400175d5:	int3   
   1400175d6:	int3   
   1400175d7:	int3   
   1400175d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400175dd:	push   rdi
   1400175de:	sub    rsp,0x40
   1400175e2:	cmp    DWORD PTR [rcx+0x4c],0x3
   1400175e6:	mov    rdi,rcx
   1400175e9:	je     0x140017644
   1400175eb:	mov    r8d,DWORD PTR [rcx+0x38]
   1400175ef:	mov    rdx,QWORD PTR [rcx+0x30]
   1400175f3:	call   0x1400174c0
   1400175f8:	mov    rdx,QWORD PTR [rdi+0x50]
   1400175fc:	mov    rcx,QWORD PTR [rdi+0x68]
   140017600:	mov    r10,QWORD PTR [rcx]
   140017603:	mov    QWORD PTR [rsp+0x30],rdx
   140017608:	mov    rdx,QWORD PTR [rdi+0x60]
   14001760c:	mov    rbx,rax
   14001760f:	mov    QWORD PTR [rsp+0x20],rax
   140017614:	lea    rax,[rip+0x2f0dd]        # 0x1400466f8
   14001761b:	mov    QWORD PTR [rsp+0x38],rdx
   140017620:	lea    r9,[rsp+0x20]
   140017625:	mov    r8d,0x4
   14001762b:	mov    edx,0xe12305eb
   140017630:	mov    QWORD PTR [rsp+0x28],rax
   140017635:	call   QWORD PTR [r10]
   140017638:	mov    rcx,rbx
   14001763b:	call   0x1400273dc
   140017640:	xor    al,al
   140017642:	jmp    0x140017646
   140017644:	mov    al,0x1
   140017646:	mov    rbx,QWORD PTR [rsp+0x50]
   14001764b:	add    rsp,0x40
   14001764f:	pop    rdi
   140017650:	ret    
   140017651:	int3   
   140017652:	int3   
   140017653:	int3   
   140017654:	mov    QWORD PTR [rsp+0x10],rbx
   140017659:	push   rdi
   14001765a:	sub    rsp,0x40
   14001765e:	mov    rdi,rcx
   140017661:	mov    rcx,QWORD PTR [rcx+0x28]
   140017665:	lea    rdx,[rsp+0x50]
   14001766a:	mov    rax,QWORD PTR [rcx]
   14001766d:	call   QWORD PTR [rax+0x18]
   140017670:	xor    ebx,ebx
   140017672:	cmp    DWORD PTR [rsp+0x50],ebx
   140017676:	jle    0x1400176bf
   140017678:	mov    edx,ebx
   14001767a:	mov    rcx,rdi
   14001767d:	call   0x140017420
   140017682:	test   eax,eax
   140017684:	js     0x140017726
   14001768a:	movsxd r8,DWORD PTR [rdi+0x38]
   14001768e:	mov    rcx,QWORD PTR [rdi+0x30]
   140017692:	lea    rdx,[rip+0x2f06f]        # 0x140046708
   140017699:	call   0x140031388
   14001769e:	test   eax,eax
   1400176a0:	jne    0x140017717
   1400176a2:	movsxd r8,DWORD PTR [rdi+0x48]
   1400176a6:	mov    rdx,QWORD PTR [rdi+0x50]
   1400176aa:	mov    rcx,QWORD PTR [rdi+0x40]
   1400176ae:	call   0x140031388
   1400176b3:	test   eax,eax
   1400176b5:	jne    0x1400176cc
   1400176b7:	inc    ebx
   1400176b9:	cmp    ebx,DWORD PTR [rsp+0x50]
   1400176bd:	jl     0x140017678
   1400176bf:	xor    eax,eax
   1400176c1:	mov    rbx,QWORD PTR [rsp+0x58]
   1400176c6:	add    rsp,0x40
   1400176ca:	pop    rdi
   1400176cb:	ret    
   1400176cc:	mov    r8d,DWORD PTR [rdi+0x48]
   1400176d0:	mov    rdx,QWORD PTR [rdi+0x40]
   1400176d4:	call   0x1400174c0
   1400176d9:	mov    rdx,QWORD PTR [rdi+0x50]
   1400176dd:	mov    rcx,QWORD PTR [rdi+0x68]
   1400176e1:	mov    r10,QWORD PTR [rcx]
   1400176e4:	mov    QWORD PTR [rsp+0x28],rdx
   1400176e9:	mov    rdx,QWORD PTR [rdi+0x60]
   1400176ed:	mov    QWORD PTR [rsp+0x30],rdx
   1400176f2:	lea    r9,[rsp+0x20]
   1400176f7:	mov    r8d,0x3
   1400176fd:	mov    edx,0xe12305e8
   140017702:	mov    rbx,rax
   140017705:	mov    QWORD PTR [rsp+0x20],rax
   14001770a:	call   QWORD PTR [r10]
   14001770d:	mov    rcx,rbx
   140017710:	call   0x1400273dc
   140017715:	jmp    0x140017726
   140017717:	lea    rdx,[rip+0x2effa]        # 0x140046718
   14001771e:	mov    rcx,rdi
   140017721:	call   0x14001756c
   140017726:	mov    eax,0x80004005
   14001772b:	jmp    0x1400176c1
   14001772d:	int3   
   14001772e:	int3   
   14001772f:	int3   
   140017730:	mov    QWORD PTR [rsp+0x10],rbx
   140017735:	push   rdi
   140017736:	sub    rsp,0x20
   14001773a:	mov    rbx,rcx
   14001773d:	mov    rcx,QWORD PTR [rcx+0x28]
   140017741:	lea    rdx,[rsp+0x30]
   140017746:	mov    rax,QWORD PTR [rcx]
   140017749:	call   QWORD PTR [rax+0x18]
   14001774c:	xor    edi,edi
   14001774e:	cmp    DWORD PTR [rsp+0x30],edi
   140017752:	jle    0x1400177d2
   140017754:	mov    edx,edi
   140017756:	mov    rcx,rbx
   140017759:	call   0x140017420
   14001775e:	test   eax,eax
   140017760:	js     0x1400177ee
   140017766:	movsxd r8,DWORD PTR [rbx+0x38]
   14001776a:	mov    rcx,QWORD PTR [rbx+0x30]
   14001776e:	lea    rdx,[rip+0x2ef93]        # 0x140046708
   140017775:	call   0x140031388
   14001777a:	test   eax,eax
   14001777c:	jne    0x14001779a
   14001777e:	mov    rcx,QWORD PTR [rbx+0x10]
   140017782:	call   0x1400273dc
   140017787:	mov    r8d,DWORD PTR [rbx+0x48]
   14001778b:	mov    rdx,QWORD PTR [rbx+0x40]
   14001778f:	call   0x1400174c0
   140017794:	mov    QWORD PTR [rbx+0x10],rax
   140017798:	jmp    0x1400177ca
   14001779a:	movsxd r8,DWORD PTR [rbx+0x38]
   14001779e:	mov    rcx,QWORD PTR [rbx+0x30]
   1400177a2:	lea    rdx,[rip+0x2ef7f]        # 0x140046728
   1400177a9:	call   0x140031388
   1400177ae:	test   eax,eax
   1400177b0:	je     0x1400177ca
   1400177b2:	movsxd r8,DWORD PTR [rbx+0x38]
   1400177b6:	mov    rcx,QWORD PTR [rbx+0x30]
   1400177ba:	lea    rdx,[rip+0x2ef77]        # 0x140046738
   1400177c1:	call   0x140031388
   1400177c6:	test   eax,eax
   1400177c8:	jne    0x1400177df
   1400177ca:	inc    edi
   1400177cc:	cmp    edi,DWORD PTR [rsp+0x30]
   1400177d0:	jl     0x140017754
   1400177d2:	xor    eax,eax
   1400177d4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400177d9:	add    rsp,0x20
   1400177dd:	pop    rdi
   1400177de:	ret    
   1400177df:	lea    rdx,[rip+0x2ef72]        # 0x140046758
   1400177e6:	mov    rcx,rbx
   1400177e9:	call   0x14001756c
   1400177ee:	mov    eax,0x80004005
   1400177f3:	jmp    0x1400177d4
   1400177f5:	int3   
   1400177f6:	int3   
   1400177f7:	int3   
   1400177f8:	mov    rax,rsp
   1400177fb:	push   rbp
   1400177fc:	push   rdi
   1400177fd:	push   r13
   1400177ff:	push   r14
   140017801:	push   r15
   140017803:	lea    rbp,[rax-0x5f]
   140017807:	sub    rsp,0xc0
   14001780e:	mov    QWORD PTR [rbp+0x2f],0xfffffffffffffffe
   140017816:	mov    QWORD PTR [rax+0x18],rbx
   14001781a:	mov    QWORD PTR [rax+0x20],rsi
   14001781e:	mov    rsi,rcx
   140017821:	xor    edx,edx
   140017823:	lea    r8d,[rdx+0x48]
   140017827:	lea    rcx,[rbp-0x69]
   14001782b:	call   0x14002bb90
   140017830:	mov    rcx,QWORD PTR [rsi+0x10]
   140017834:	call   0x140027810
   140017839:	mov    QWORD PTR [rbp-0x61],rax
   14001783d:	mov    r15d,DWORD PTR [rbp-0x45]
   140017841:	mov    r13d,0x1
   140017847:	cmp    BYTE PTR [rsi+0x8],0x0
   14001784b:	cmovne r15d,r13d
   14001784f:	mov    DWORD PTR [rbp-0x45],r15d
   140017853:	mov    rcx,QWORD PTR [rsi+0x28]
   140017857:	mov    rax,QWORD PTR [rcx]
   14001785a:	lea    rdx,[rbp+0x67]
   14001785e:	call   QWORD PTR [rax+0x18]
   140017861:	xor    ebx,ebx
   140017863:	mov    r14,QWORD PTR [rbp-0x69]
   140017867:	cmp    DWORD PTR [rbp+0x67],ebx
   14001786a:	jle    0x140017b8f
   140017870:	mov    edx,ebx
   140017872:	mov    rcx,rsi
   140017875:	call   0x140017420
   14001787a:	test   eax,eax
   14001787c:	js     0x140017b85
   140017882:	movsxd r8,DWORD PTR [rsi+0x38]
   140017886:	lea    rdx,[rip+0x2ee7b]        # 0x140046708
   14001788d:	mov    rcx,QWORD PTR [rsi+0x30]
   140017891:	call   0x140031388
   140017896:	test   eax,eax
   140017898:	jne    0x1400178b3
   14001789a:	mov    r8d,DWORD PTR [rsi+0x48]
   14001789e:	mov    rdx,QWORD PTR [rsi+0x40]
   1400178a2:	call   0x1400174c0
   1400178a7:	mov    r14,rax
   1400178aa:	mov    QWORD PTR [rbp-0x69],rax
   1400178ae:	jmp    0x140017ac0
   1400178b3:	movsxd r8,DWORD PTR [rsi+0x38]
   1400178b7:	lea    rdx,[rip+0x2eeb2]        # 0x140046770
   1400178be:	mov    rcx,QWORD PTR [rsi+0x30]
   1400178c2:	call   0x140031388
   1400178c7:	test   eax,eax
   1400178c9:	jne    0x1400178e1
   1400178cb:	mov    r8d,DWORD PTR [rsi+0x48]
   1400178cf:	mov    rdx,QWORD PTR [rsi+0x40]
   1400178d3:	call   0x1400174c0
   1400178d8:	mov    QWORD PTR [rbp-0x59],rax
   1400178dc:	jmp    0x140017ac0
   1400178e1:	movsxd r8,DWORD PTR [rsi+0x38]
   1400178e5:	lea    rdx,[rip+0x2ee9c]        # 0x140046788
   1400178ec:	mov    rcx,QWORD PTR [rsi+0x30]
   1400178f0:	call   0x140031388
   1400178f5:	test   eax,eax
   1400178f7:	jne    0x14001790f
   1400178f9:	mov    r8d,DWORD PTR [rsi+0x48]
   1400178fd:	mov    rdx,QWORD PTR [rsi+0x40]
   140017901:	call   0x1400174c0
   140017906:	mov    QWORD PTR [rbp-0x51],rax
   14001790a:	jmp    0x140017ac0
   14001790f:	movsxd r8,DWORD PTR [rsi+0x38]
   140017913:	lea    rdx,[rip+0x2ee86]        # 0x1400467a0
   14001791a:	mov    rcx,QWORD PTR [rsi+0x30]
   14001791e:	call   0x140031388
   140017923:	test   eax,eax
   140017925:	jne    0x140017937
   140017927:	mov    rcx,rsi
   14001792a:	call   0x14001752c
   14001792f:	mov    DWORD PTR [rbp-0x49],eax
   140017932:	jmp    0x140017ac0
   140017937:	movsxd r8,DWORD PTR [rsi+0x38]
   14001793b:	lea    rdx,[rip+0x2ee6e]        # 0x1400467b0
   140017942:	mov    rcx,QWORD PTR [rsi+0x30]
   140017946:	call   0x140031388
   14001794b:	test   eax,eax
   14001794d:	jne    0x140017972
   14001794f:	mov    rcx,rsi
   140017952:	call   0x1400175d8
   140017957:	test   al,al
   140017959:	je     0x140017b85
   14001795f:	mov    rcx,rsi
   140017962:	call   0x14001752c
   140017967:	mov    eax,eax
   140017969:	mov    QWORD PTR [rbp-0x29],rax
   14001796d:	jmp    0x140017ac0
   140017972:	movsxd r8,DWORD PTR [rsi+0x38]
   140017976:	lea    rdx,[rip+0x2ee43]        # 0x1400467c0
   14001797d:	mov    rcx,QWORD PTR [rsi+0x30]
   140017981:	call   0x140031388
   140017986:	test   eax,eax
   140017988:	jne    0x1400179ad
   14001798a:	mov    rcx,rsi
   14001798d:	call   0x1400175d8
   140017992:	test   al,al
   140017994:	je     0x140017b85
   14001799a:	mov    rcx,rsi
   14001799d:	call   0x14001752c
   1400179a2:	mov    eax,eax
   1400179a4:	mov    QWORD PTR [rbp-0x31],rax
   1400179a8:	jmp    0x140017ac0
   1400179ad:	movsxd r8,DWORD PTR [rsi+0x38]
   1400179b1:	lea    rdx,[rip+0x2ee18]        # 0x1400467d0
   1400179b8:	mov    rcx,QWORD PTR [rsi+0x30]
   1400179bc:	call   0x140031388
   1400179c1:	test   eax,eax
   1400179c3:	jne    0x140017a53
   1400179c9:	mov    rcx,rsi
   1400179cc:	call   0x1400175d8
   1400179d1:	test   al,al
   1400179d3:	je     0x140017b85
   1400179d9:	movsxd r8,DWORD PTR [rsi+0x48]
   1400179dd:	lea    rdx,[rip+0x2edfc]        # 0x1400467e0
   1400179e4:	mov    rcx,QWORD PTR [rsi+0x40]
   1400179e8:	call   0x140031388
   1400179ed:	test   eax,eax
   1400179ef:	je     0x140017a4e
   1400179f1:	movsxd r8,DWORD PTR [rsi+0x48]
   1400179f5:	lea    rdx,[rip+0x2edec]        # 0x1400467e8
   1400179fc:	mov    rcx,QWORD PTR [rsi+0x40]
   140017a00:	call   0x140031388
   140017a05:	test   eax,eax
   140017a07:	jne    0x140017a0e
   140017a09:	mov    eax,r13d
   140017a0c:	jmp    0x140017a4e
   140017a0e:	movsxd r8,DWORD PTR [rsi+0x48]
   140017a12:	lea    rdx,[rip+0x2eddb]        # 0x1400467f4
   140017a19:	mov    rcx,QWORD PTR [rsi+0x40]
   140017a1d:	call   0x140031388
   140017a22:	test   eax,eax
   140017a24:	jne    0x140017a2d
   140017a26:	mov    eax,0x2
   140017a2b:	jmp    0x140017a4e
   140017a2d:	movsxd r8,DWORD PTR [rsi+0x48]
   140017a31:	lea    rdx,[rip+0x2edc4]        # 0x1400467fc
   140017a38:	mov    rcx,QWORD PTR [rsi+0x40]
   140017a3c:	call   0x140031388
   140017a41:	test   eax,eax
   140017a43:	jne    0x140017ad1
   140017a49:	mov    eax,0x3
   140017a4e:	mov    BYTE PTR [rbp-0x39],al
   140017a51:	jmp    0x140017ac0
   140017a53:	movsxd r8,DWORD PTR [rsi+0x38]
   140017a57:	lea    rdx,[rip+0x2edaa]        # 0x140046808
   140017a5e:	mov    rcx,QWORD PTR [rsi+0x30]
   140017a62:	call   0x140031388
   140017a67:	test   eax,eax
   140017a69:	jne    0x140017a8c
   140017a6b:	mov    eax,DWORD PTR [rsi+0x4c]
   140017a6e:	cmp    eax,0x2
   140017a71:	je     0x140017a7f
   140017a73:	add    eax,0xfffffffb
   140017a76:	cmp    eax,r13d
   140017a79:	ja     0x140017b2c
   140017a7f:	mov    rcx,rsi
   140017a82:	call   0x14001752c
   140017a87:	mov    DWORD PTR [rbp-0x39],eax
   140017a8a:	jmp    0x140017ac0
   140017a8c:	movsxd r8,DWORD PTR [rsi+0x38]
   140017a90:	lea    rdx,[rip+0x2ec91]        # 0x140046728
   140017a97:	mov    rcx,QWORD PTR [rsi+0x30]
   140017a9b:	call   0x140031388
   140017aa0:	test   eax,eax
   140017aa2:	je     0x140017ac0
   140017aa4:	movsxd r8,DWORD PTR [rsi+0x38]
   140017aa8:	lea    rdx,[rip+0x2ec89]        # 0x140046738
   140017aaf:	mov    rcx,QWORD PTR [rsi+0x30]
   140017ab3:	call   0x140031388
   140017ab8:	test   eax,eax
   140017aba:	jne    0x140017b76
   140017ac0:	add    ebx,r13d
   140017ac3:	cmp    ebx,DWORD PTR [rbp+0x67]
   140017ac6:	jge    0x140017b8f
   140017acc:	jmp    0x140017870
   140017ad1:	mov    r8d,DWORD PTR [rsi+0x38]
   140017ad5:	mov    rdx,QWORD PTR [rsi+0x30]
   140017ad9:	call   0x1400174c0
   140017ade:	mov    rdi,rax
   140017ae1:	mov    r8d,DWORD PTR [rsi+0x48]
   140017ae5:	mov    rdx,QWORD PTR [rsi+0x40]
   140017ae9:	call   0x1400174c0
   140017aee:	mov    rbx,rax
   140017af1:	mov    rcx,QWORD PTR [rsi+0x68]
   140017af5:	mov    QWORD PTR [rbp-0x9],rax
   140017af9:	mov    QWORD PTR [rbp-0x1],rdi
   140017afd:	mov    rdx,QWORD PTR [rsi+0x60]
   140017b01:	mov    QWORD PTR [rbp+0x7],rdx
   140017b05:	mov    r10,QWORD PTR [rcx]
   140017b08:	lea    r9,[rbp-0x9]
   140017b0c:	mov    edx,0xe12305ea
   140017b11:	mov    r8d,0x3
   140017b17:	call   QWORD PTR [r10]
   140017b1a:	mov    rcx,rdi
   140017b1d:	call   0x1400273dc
   140017b22:	mov    rcx,rbx
   140017b25:	call   0x1400273dc
   140017b2a:	jmp    0x140017b85
   140017b2c:	mov    r8d,DWORD PTR [rsi+0x38]
   140017b30:	mov    rdx,QWORD PTR [rsi+0x30]
   140017b34:	call   0x1400174c0
   140017b39:	mov    rbx,rax
   140017b3c:	mov    r8,QWORD PTR [rsi+0x60]
   140017b40:	mov    rdx,QWORD PTR [rsi+0x50]
   140017b44:	mov    rcx,QWORD PTR [rsi+0x68]
   140017b48:	mov    QWORD PTR [rbp+0xf],rax
   140017b4c:	lea    rax,[rip+0x2eba5]        # 0x1400466f8
   140017b53:	mov    QWORD PTR [rbp+0x17],rax
   140017b57:	mov    QWORD PTR [rbp+0x1f],rdx
   140017b5b:	mov    QWORD PTR [rbp+0x27],r8
   140017b5f:	mov    r10,QWORD PTR [rcx]
   140017b62:	lea    r9,[rbp+0xf]
   140017b66:	mov    edx,0xe12305eb
   140017b6b:	mov    r8d,0x4
   140017b71:	call   QWORD PTR [r10]
   140017b74:	jmp    0x140017b22
   140017b76:	lea    rdx,[rip+0x2eb7b]        # 0x1400466f8
   140017b7d:	mov    rcx,rsi
   140017b80:	call   0x14001756c
   140017b85:	mov    eax,0x80004005
   140017b8a:	jmp    0x140017c8b
   140017b8f:	lea    rdi,[rsi+0x60]
   140017b93:	mov    rbx,QWORD PTR [rsi+0x58]
   140017b97:	cmp    r15d,r13d
   140017b9a:	jne    0x140017bb0
   140017b9c:	mov    r8,rdi
   140017b9f:	lea    rdx,[rbp-0x69]
   140017ba3:	mov    rcx,rbx
   140017ba6:	call   0x140016a78
   140017bab:	jmp    0x140017c89
   140017bb0:	mov    rdx,r14
   140017bb3:	lea    rcx,[rbp+0x6f]
   140017bb7:	call   0x140006b8c
   140017bbc:	nop
   140017bbd:	lea    rcx,[rbp+0x6f]
   140017bc1:	call   0x140016d70
   140017bc6:	xor    ecx,ecx
   140017bc8:	or     r15d,0xffffffff
   140017bcc:	cmp    DWORD PTR [rbx+0x20],ecx
   140017bcf:	jle    0x140017c2a
   140017bd1:	xor    esi,esi
   140017bd3:	mov    rax,QWORD PTR [rbp+0x6f]
   140017bd7:	test   rax,rax
   140017bda:	setne  sil
   140017bde:	mov    r11,QWORD PTR [rbx+0x10]
   140017be2:	test   esi,esi
   140017be4:	je     0x140017c1f
   140017be6:	mov    rdx,QWORD PTR [r11]
   140017be9:	mov    r10,rax
   140017bec:	sub    r10,rdx
   140017bef:	movzx  r8d,WORD PTR [rdx]
   140017bf3:	cmp    r8w,WORD PTR [rdx+r10*1]
   140017bf8:	jne    0x140017c08
   140017bfa:	add    rdx,0x2
   140017bfe:	test   r8w,r8w
   140017c02:	jne    0x140017bef
   140017c04:	xor    edx,edx
   140017c06:	jmp    0x140017c0d
   140017c08:	sbb    edx,edx
   140017c0a:	or     edx,r13d
   140017c0d:	test   edx,edx
   140017c0f:	je     0x140017c2d
   140017c11:	add    ecx,r13d
   140017c14:	add    r11,0x8
   140017c18:	cmp    ecx,DWORD PTR [rbx+0x20]
   140017c1b:	jl     0x140017be2
   140017c1d:	jmp    0x140017c2a
   140017c1f:	mov    ecx,0x80004005
   140017c24:	call   0x14000400c
   140017c29:	int3   
   140017c2a:	mov    ecx,r15d
   140017c2d:	cmp    ecx,r15d
   140017c30:	je     0x140017c57
   140017c32:	mov    rax,QWORD PTR [rdi]
   140017c35:	mov    rcx,QWORD PTR [rbx+0x8]
   140017c39:	mov    QWORD PTR [rbp-0x19],r14
   140017c3d:	mov    QWORD PTR [rbp-0x11],rax
   140017c41:	mov    rax,QWORD PTR [rcx]
   140017c44:	lea    r9,[rbp-0x19]
   140017c48:	mov    edx,0xa1230930
   140017c4d:	mov    r8d,0x2
   140017c53:	call   QWORD PTR [rax]
   140017c55:	jmp    0x140017c69
   140017c57:	lea    r8,[rbp-0x69]
   140017c5b:	lea    rdx,[rbp+0x6f]
   140017c5f:	lea    rcx,[rbx+0x10]
   140017c63:	call   0x140016f88
   140017c68:	nop
   140017c69:	mov    rdx,QWORD PTR [rbp+0x6f]
   140017c6d:	add    rdx,0xffffffffffffffe8
   140017c71:	mov    eax,r15d
   140017c74:	lock xadd DWORD PTR [rdx+0x10],eax
   140017c79:	add    eax,r15d
   140017c7c:	test   eax,eax
   140017c7e:	jg     0x140017c89
   140017c80:	mov    rcx,QWORD PTR [rdx]
   140017c83:	mov    rax,QWORD PTR [rcx]
   140017c86:	call   QWORD PTR [rax+0x8]
   140017c89:	xor    eax,eax
   140017c8b:	lea    r11,[rsp+0xc0]
   140017c93:	mov    rbx,QWORD PTR [r11+0x40]
   140017c97:	mov    rsi,QWORD PTR [r11+0x48]
   140017c9b:	mov    rsp,r11
   140017c9e:	pop    r15
   140017ca0:	pop    r14
   140017ca2:	pop    r13
   140017ca4:	pop    rdi
   140017ca5:	pop    rbp
   140017ca6:	ret    
   140017ca7:	int3   
   140017ca8:	mov    QWORD PTR [rsp+0x8],rbx
   140017cad:	mov    QWORD PTR [rsp+0x10],rsi
   140017cb2:	push   rdi
   140017cb3:	sub    rsp,0x20
   140017cb7:	movsxd rdx,DWORD PTR [rsp+0x50]
   140017cbc:	mov    rax,QWORD PTR [rsp+0x68]
   140017cc1:	mov    rbx,rcx
   140017cc4:	mov    DWORD PTR [rcx+0x20],edx
   140017cc7:	mov    rsi,rdx
   140017cca:	mov    r8,rdx
   140017ccd:	mov    QWORD PTR [rcx+0x18],r9
   140017cd1:	mov    QWORD PTR [rcx+0x28],rax
   140017cd5:	lea    rdx,[rip+0x2ea3c]        # 0x140046718
   140017cdc:	mov    rcx,r9
   140017cdf:	mov    rdi,r9
   140017ce2:	call   0x140031388
   140017ce7:	test   eax,eax
   140017ce9:	jne    0x140017cfe
   140017ceb:	mov    rcx,rbx
   140017cee:	call   0x140017654
   140017cf3:	test   eax,eax
   140017cf5:	jns    0x140017d3e
   140017cf7:	mov    eax,0x80004005
   140017cfc:	jmp    0x140017d40
   140017cfe:	lea    rdx,[rip+0x2ea53]        # 0x140046758
   140017d05:	mov    r8,rsi
   140017d08:	mov    rcx,rdi
   140017d0b:	call   0x140031388
   140017d10:	test   eax,eax
   140017d12:	jne    0x140017d1e
   140017d14:	mov    rcx,rbx
   140017d17:	call   0x140017730
   140017d1c:	jmp    0x140017cf3
   140017d1e:	lea    rdx,[rip+0x2e9d3]        # 0x1400466f8
   140017d25:	mov    r8,rsi
   140017d28:	mov    rcx,rdi
   140017d2b:	call   0x140031388
   140017d30:	test   eax,eax
   140017d32:	jne    0x140017d3e
   140017d34:	mov    rcx,rbx
   140017d37:	call   0x1400177f8
   140017d3c:	jmp    0x140017cf3
   140017d3e:	xor    eax,eax
   140017d40:	mov    rbx,QWORD PTR [rsp+0x30]
   140017d45:	mov    rsi,QWORD PTR [rsp+0x38]
   140017d4a:	add    rsp,0x20
   140017d4e:	pop    rdi
   140017d4f:	ret    
   140017d50:	rex push rbx
   140017d52:	sub    rsp,0x20
   140017d56:	lea    rax,[rip+0x2eb5b]        # 0x1400468b8
   140017d5d:	mov    rbx,rcx
   140017d60:	mov    QWORD PTR [rcx],rax
   140017d63:	test   dl,0x1
   140017d66:	je     0x140017d6d
   140017d68:	call   0x14002657c
   140017d6d:	mov    rax,rbx
   140017d70:	add    rsp,0x20
   140017d74:	pop    rbx
   140017d75:	ret    
   140017d76:	int3   
   140017d77:	int3   
   140017d78:	lea    rax,[rip+0x2eb39]        # 0x1400468b8
   140017d7f:	mov    QWORD PTR [rcx],rax
   140017d82:	ret    
   140017d83:	int3   
   140017d84:	mov    QWORD PTR [rsp+0x10],rbx
   140017d89:	mov    QWORD PTR [rsp+0x18],rdi
   140017d8e:	push   rbp
   140017d8f:	lea    rbp,[rsp-0x57]
   140017d94:	sub    rsp,0xf0
   140017d9b:	mov    rax,QWORD PTR [rip+0x412e6]        # 0x140059088
   140017da2:	xor    rax,rsp
   140017da5:	mov    QWORD PTR [rbp+0x47],rax
   140017da9:	and    QWORD PTR [rbp+0x37],0x0
   140017dae:	and    DWORD PTR [rbp+0x3f],0x0
   140017db2:	mov    rdi,rcx
   140017db5:	lea    rcx,[rip+0x2eb84]        # 0x140046940
   140017dbc:	lea    rax,[rip+0x2eb6d]        # 0x140046930
   140017dc3:	mov    DWORD PTR [rbp-0x61],0x100
   140017dca:	mov    QWORD PTR [rbp-0x59],rcx
   140017dce:	lea    rcx,[rip+0x2eb7b]        # 0x140046950
   140017dd5:	mov    DWORD PTR [rbp-0x51],0x200
   140017ddc:	mov    QWORD PTR [rbp-0x49],rcx
   140017de0:	lea    rcx,[rip+0x2eb79]        # 0x140046960
   140017de7:	mov    QWORD PTR [rbp-0x69],rax
   140017deb:	mov    QWORD PTR [rbp-0x39],rcx
   140017def:	lea    rcx,[rip+0x2eb82]        # 0x140046978
   140017df6:	mov    DWORD PTR [rbp-0x41],0x4
   140017dfd:	mov    QWORD PTR [rbp-0x29],rcx
   140017e01:	lea    rcx,[rip+0x2eb88]        # 0x140046990
   140017e08:	mov    DWORD PTR [rbp-0x31],0x2000
   140017e0f:	mov    QWORD PTR [rbp-0x19],rcx
   140017e13:	lea    rcx,[rip+0x2eb86]        # 0x1400469a0
   140017e1a:	mov    DWORD PTR [rbp-0x21],0x1000
   140017e21:	mov    QWORD PTR [rbp-0x9],rcx
   140017e25:	lea    rcx,[rip+0x2eb84]        # 0x1400469b0
   140017e2c:	mov    DWORD PTR [rbp-0x11],0x10000
   140017e33:	mov    QWORD PTR [rbp+0x7],rcx
   140017e37:	lea    rcx,[rip+0x2eb8a]        # 0x1400469c8
   140017e3e:	mov    DWORD PTR [rbp-0x1],0x1
   140017e45:	mov    QWORD PTR [rbp+0x17],rcx
   140017e49:	lea    rcx,[rip+0x2eb88]        # 0x1400469d8
   140017e50:	mov    DWORD PTR [rbp+0xf],0x20000
   140017e57:	mov    DWORD PTR [rbp+0x1f],0x2
   140017e5e:	mov    DWORD PTR [rbp+0x2f],0x40000
   140017e65:	xor    ebx,ebx
   140017e67:	mov    QWORD PTR [rbp+0x27],rcx
   140017e6b:	or     DWORD PTR [rsp+0x28],0xffffffff
   140017e70:	or     r9d,0xffffffff
   140017e74:	mov    r8,rax
   140017e77:	lea    edx,[r9+0x2]
   140017e7b:	mov    ecx,0x409
   140017e80:	mov    QWORD PTR [rsp+0x20],rdi
   140017e85:	call   QWORD PTR [rip+0x29555]        # 0x1400413e0
   140017e8b:	cmp    eax,0x2
   140017e8e:	je     0x140017ea3
   140017e90:	inc    ebx
   140017e92:	mov    eax,ebx
   140017e94:	add    rax,rax
   140017e97:	mov    rax,QWORD PTR [rbp+rax*8-0x69]
   140017e9c:	test   rax,rax
   140017e9f:	jne    0x140017e6b
   140017ea1:	jmp    0x140017eac
   140017ea3:	mov    eax,ebx
   140017ea5:	add    rax,rax
   140017ea8:	mov    eax,DWORD PTR [rbp+rax*8-0x61]
   140017eac:	mov    rcx,QWORD PTR [rbp+0x47]
   140017eb0:	xor    rcx,rsp
   140017eb3:	call   0x1400265a0
   140017eb8:	lea    r11,[rsp+0xf0]
   140017ec0:	mov    rbx,QWORD PTR [r11+0x18]
   140017ec4:	mov    rdi,QWORD PTR [r11+0x20]
   140017ec8:	mov    rsp,r11
   140017ecb:	pop    rbp
   140017ecc:	ret    
   140017ecd:	int3   
   140017ece:	int3   
   140017ecf:	int3   
   140017ed0:	mov    rax,rsp
   140017ed3:	push   rbp
   140017ed4:	push   rsi
   140017ed5:	push   rdi
   140017ed6:	push   r12
   140017ed8:	push   r13
   140017eda:	push   r14
   140017edc:	push   r15
   140017ede:	mov    rbp,rsp
   140017ee1:	sub    rsp,0x50
   140017ee5:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140017eed:	mov    QWORD PTR [rax+0x10],rbx
   140017ef1:	mov    r14,rdx
   140017ef4:	mov    r13,rcx
   140017ef7:	xor    edx,edx
   140017ef9:	lea    r8d,[rdx+0x1c]
   140017efd:	mov    rcx,r14
   140017f00:	call   0x14002bb90
   140017f05:	mov    rax,QWORD PTR [r13+0x0]
   140017f09:	xor    r12d,r12d
   140017f0c:	cmp    DWORD PTR [rax-0x10],r12d
   140017f10:	jne    0x140017f1c
   140017f12:	mov    eax,0x80004005
   140017f17:	jmp    0x1400183ca
   140017f1c:	mov    DWORD PTR [rbp+0x40],r12d
   140017f20:	lea    rcx,[rip+0x42401]        # 0x14005a328
   140017f27:	mov    rax,QWORD PTR [rip+0x423fa]        # 0x14005a328
   140017f2e:	call   QWORD PTR [rax+0x18]
   140017f31:	add    rax,0x18
   140017f35:	mov    QWORD PTR [rbp-0x30],rax
   140017f39:	mov    edi,r12d
   140017f3c:	or     r15d,0xffffffff
   140017f40:	lea    r9,[rbp+0x40]
   140017f44:	lea    rdx,[rbp-0x18]
   140017f48:	mov    rcx,r13
   140017f4b:	call   0x14000d440
   140017f50:	nop
   140017f51:	mov    rdx,rax
   140017f54:	lea    rcx,[rbp-0x30]
   140017f58:	call   0x14000cdac
   140017f5d:	nop
   140017f5e:	mov    rdx,QWORD PTR [rbp-0x18]
   140017f62:	add    rdx,0xffffffffffffffe8
   140017f66:	mov    eax,r15d
   140017f69:	lock xadd DWORD PTR [rdx+0x10],eax
   140017f6e:	add    eax,r15d
   140017f71:	test   eax,eax
   140017f73:	jg     0x140017f7e
   140017f75:	mov    rcx,QWORD PTR [rdx]
   140017f78:	mov    rax,QWORD PTR [rcx]
   140017f7b:	call   QWORD PTR [rax+0x8]
   140017f7e:	mov    rbx,QWORD PTR [rbp-0x30]
   140017f82:	cmp    DWORD PTR [rbx-0x10],r12d
   140017f86:	je     0x1400183a8
   140017f8c:	mov    ecx,edi
   140017f8e:	test   edi,edi
   140017f90:	je     0x1400182a5
   140017f96:	dec    ecx
   140017f98:	je     0x14001807b
   140017f9e:	dec    ecx
   140017fa0:	je     0x140018062
   140017fa6:	dec    ecx
   140017fa8:	je     0x140017fe6
   140017faa:	dec    ecx
   140017fac:	je     0x140017fb8
   140017fae:	dec    ecx
   140017fb0:	je     0x1400183a1
   140017fb6:	jmp    0x140017f40
   140017fb8:	mov    r8d,0xa
   140017fbe:	lea    rdx,[rbp-0x28]
   140017fc2:	mov    rcx,rbx
   140017fc5:	call   0x140027354
   140017fca:	mov    DWORD PTR [r14+0x18],eax
   140017fce:	mov    rax,QWORD PTR [rbp-0x28]
   140017fd2:	cmp    WORD PTR [rax],r12w
   140017fd6:	jne    0x1400183a1
   140017fdc:	mov    edi,0x5
   140017fe1:	jmp    0x140017f40
   140017fe6:	mov    r8d,0x2
   140017fec:	lea    rdx,[rbp-0x20]
   140017ff0:	lea    rcx,[rbp-0x30]
   140017ff4:	call   0x14000d564
   140017ff9:	nop
   140017ffa:	lea    rdx,[rip+0x2e9eb]        # 0x1400469ec
   140018001:	mov    rcx,QWORD PTR [rbp-0x20]
   140018005:	call   0x140026fd8
   14001800a:	test   eax,eax
   14001800c:	jne    0x1400182e7
   140018012:	lea    r8d,[rax+0x10]
   140018016:	lea    rdx,[rbp-0x28]
   14001801a:	mov    rcx,rbx
   14001801d:	call   0x140027354
   140018022:	mov    DWORD PTR [r14+0x14],eax
   140018026:	mov    rax,QWORD PTR [rbp-0x28]
   14001802a:	cmp    WORD PTR [rax],r12w
   14001802e:	jne    0x1400182e7
   140018034:	mov    edi,0x4
   140018039:	mov    rdx,QWORD PTR [rbp-0x20]
   14001803d:	add    rdx,0xffffffffffffffe8
   140018041:	mov    eax,r15d
   140018044:	lock xadd DWORD PTR [rdx+0x10],eax
   140018049:	add    eax,r15d
   14001804c:	test   eax,eax
   14001804e:	jg     0x140017f40
   140018054:	mov    rcx,QWORD PTR [rdx]
   140018057:	mov    rax,QWORD PTR [rcx]
   14001805a:	call   QWORD PTR [rax+0x8]
   14001805d:	jmp    0x140017f40
   140018062:	mov    rcx,rbx
   140018065:	call   0x140017d84
   14001806a:	test   eax,eax
   14001806c:	je     0x1400183a1
   140018072:	or     DWORD PTR [r14+0x14],eax
   140018076:	jmp    0x140017f40
   14001807b:	lea    rdx,[rbp-0x30]
   14001807f:	lea    rcx,[rbp+0x58]
   140018083:	call   0x140006af0
   140018088:	nop
   140018089:	mov    rcx,QWORD PTR [rbp+0x58]
   14001808d:	cmp    DWORD PTR [rcx-0x10],r12d
   140018091:	jle    0x1400180b1
   140018093:	mov    edx,0x7b
   140018098:	call   0x140026e50
   14001809d:	test   rax,rax
   1400180a0:	je     0x1400180b1
   1400180a2:	mov    rcx,QWORD PTR [rbp+0x58]
   1400180a6:	sub    rax,rcx
   1400180a9:	sar    rax,1
   1400180ac:	cmp    eax,r15d
   1400180af:	jne    0x1400180db
   1400180b1:	lea    r8,[rip+0x2e92c]        # 0x1400469e4
   1400180b8:	lea    rcx,[rbp+0x58]
   1400180bc:	call   0x14000cfa0
   1400180c1:	mov    r8d,0x1
   1400180c7:	lea    rdx,[rip+0x2e91a]        # 0x1400469e8
   1400180ce:	lea    rcx,[rbp+0x58]
   1400180d2:	call   0x140006cfc
   1400180d7:	mov    rcx,QWORD PTR [rbp+0x58]
   1400180db:	mov    edx,DWORD PTR [rcx-0x10]
   1400180de:	call   QWORD PTR [rip+0x295f4]        # 0x1400416d8
   1400180e4:	mov    rsi,rax
   1400180e7:	test   rax,rax
   1400180ea:	je     0x14001839b
   1400180f0:	mov    rdx,r14
   1400180f3:	mov    rcx,rax
   1400180f6:	call   QWORD PTR [rip+0x2967c]        # 0x140041778
   1400180fc:	mov    edi,eax
   1400180fe:	mov    rcx,rsi
   140018101:	call   QWORD PTR [rip+0x295c9]        # 0x1400416d0
   140018107:	test   edi,edi
   140018109:	js     0x140018115
   14001810b:	mov    edi,0x3
   140018110:	jmp    0x14001829c
   140018115:	lea    rdx,[rbp-0x30]
   140018119:	lea    rcx,[rbp+0x50]
   14001811d:	call   0x140006af0
   140018122:	nop
   140018123:	mov    rcx,QWORD PTR [rbp+0x50]
   140018127:	cmp    DWORD PTR [rcx-0x10],r12d
   14001812b:	jle    0x140018215
   140018131:	mov    edx,0x22
   140018136:	call   0x140026e50
   14001813b:	mov    rdi,rax
   14001813e:	mov    rcx,QWORD PTR [rbp+0x50]
   140018142:	test   rax,rax
   140018145:	je     0x140018215
   14001814b:	sub    rdi,rcx
   14001814e:	sar    rdi,1
   140018151:	test   edi,edi
   140018153:	js     0x140018215
   140018159:	mov    r15d,0x1
   14001815f:	mov    esi,DWORD PTR [rcx-0x10]
   140018162:	cmp    edi,0x7ffffffe
   140018168:	jg     0x140018341
   14001816e:	lea    eax,[rdi+0x1]
   140018171:	cmp    eax,esi
   140018173:	jle    0x140018180
   140018175:	mov    r15d,esi
   140018178:	sub    r15d,edi
   14001817b:	test   r15d,r15d
   14001817e:	jle    0x140018127
   140018180:	sub    esi,r15d
   140018183:	mov    r12d,esi
   140018186:	sub    r12d,edi
   140018189:	inc    r12d
   14001818c:	cmp    DWORD PTR [rcx-0x8],0x1
   140018190:	jle    0x1400181a2
   140018192:	mov    edx,DWORD PTR [rcx-0x10]
   140018195:	lea    rcx,[rbp+0x50]
   140018199:	call   0x1400070f8
   14001819e:	mov    rcx,QWORD PTR [rbp+0x50]
   1400181a2:	movsxd rdx,r12d
   1400181a5:	add    rdx,rdx
   1400181a8:	movsxd r9,edi
   1400181ab:	movsxd rax,r15d
   1400181ae:	add    rax,r9
   1400181b1:	lea    r8,[rcx+rax*2]
   1400181b5:	lea    rcx,[rcx+r9*2]
   1400181b9:	mov    r9,rdx
   1400181bc:	call   0x140026edc
   1400181c1:	xor    r12d,r12d
   1400181c4:	test   eax,eax
   1400181c6:	je     0x1400181ec
   1400181c8:	cmp    eax,0xc
   1400181cb:	je     0x14001832b
   1400181d1:	cmp    eax,0x16
   1400181d4:	je     0x140018320
   1400181da:	cmp    eax,0x22
   1400181dd:	je     0x140018320
   1400181e3:	cmp    eax,0x50
   1400181e6:	jne    0x140018315
   1400181ec:	test   esi,esi
   1400181ee:	js     0x140018336
   1400181f4:	mov    rax,QWORD PTR [rbp+0x50]
   1400181f8:	cmp    esi,DWORD PTR [rax-0xc]
   1400181fb:	jg     0x140018336
   140018201:	mov    DWORD PTR [rax-0x10],esi
   140018204:	movsxd rcx,esi
   140018207:	mov    rax,QWORD PTR [rbp+0x50]
   14001820b:	mov    WORD PTR [rax+rcx*2],r12w
   140018210:	jmp    0x140018123
   140018215:	test   rcx,rcx
   140018218:	je     0x140018252
   14001821a:	mov    rdx,r14
   14001821d:	call   0x1400184d8
   140018222:	test   al,al
   140018224:	je     0x140018252
   140018226:	mov    edi,0x3
   14001822b:	mov    rdx,QWORD PTR [rbp+0x50]
   14001822f:	add    rdx,0xffffffffffffffe8
   140018233:	or     r15d,0xffffffff
   140018237:	mov    eax,r15d
   14001823a:	lock xadd DWORD PTR [rdx+0x10],eax
   14001823f:	add    eax,r15d
   140018242:	test   eax,eax
   140018244:	jg     0x140018250
   140018246:	mov    rcx,QWORD PTR [rdx]
   140018249:	mov    rax,QWORD PTR [rcx]
   14001824c:	call   QWORD PTR [rax+0x8]
   14001824f:	nop
   140018250:	jmp    0x14001829c
   140018252:	mov    rcx,rbx
   140018255:	call   0x140017d84
   14001825a:	test   eax,eax
   14001825c:	je     0x14001834c
   140018262:	mov    edi,0x2
   140018267:	movups xmm0,XMMWORD PTR [rip+0x2d56a]        # 0x1400457d8
   14001826e:	movdqu XMMWORD PTR [r14],xmm0
   140018273:	mov    DWORD PTR [r14+0x14],eax
   140018277:	mov    rdx,QWORD PTR [rbp+0x50]
   14001827b:	add    rdx,0xffffffffffffffe8
   14001827f:	or     r15d,0xffffffff
   140018283:	mov    eax,r15d
   140018286:	lock xadd DWORD PTR [rdx+0x10],eax
   14001828b:	add    eax,r15d
   14001828e:	test   eax,eax
   140018290:	jg     0x14001829c
   140018292:	mov    rcx,QWORD PTR [rdx]
   140018295:	mov    rax,QWORD PTR [rcx]
   140018298:	call   QWORD PTR [rax+0x8]
   14001829b:	nop
   14001829c:	mov    rdx,QWORD PTR [rbp+0x58]
   1400182a0:	jmp    0x14001803d
   1400182a5:	lea    rdx,[rip+0x2ddb4]        # 0x140046060
   1400182ac:	mov    rcx,rbx
   1400182af:	call   0x140026fd8
   1400182b4:	test   eax,eax
   1400182b6:	jne    0x1400182c2
   1400182b8:	mov    DWORD PTR [r14+0x10],0x1
   1400182c0:	jmp    0x1400182dd
   1400182c2:	lea    rdx,[rip+0x2d3cf]        # 0x140045698
   1400182c9:	mov    rcx,rbx
   1400182cc:	call   0x140026fd8
   1400182d1:	test   eax,eax
   1400182d3:	jne    0x1400183a1
   1400182d9:	mov    DWORD PTR [r14+0x10],r12d
   1400182dd:	mov    edi,0x1
   1400182e2:	jmp    0x140017f40
   1400182e7:	mov    rdx,QWORD PTR [rbp-0x20]
   1400182eb:	add    rdx,0xffffffffffffffe8
   1400182ef:	mov    eax,r15d
   1400182f2:	lock xadd DWORD PTR [rdx+0x10],eax
   1400182f7:	add    eax,r15d
   1400182fa:	test   eax,eax
   1400182fc:	jg     0x140018307
   1400182fe:	mov    rcx,QWORD PTR [rdx]
   140018301:	mov    rax,QWORD PTR [rcx]
   140018304:	call   QWORD PTR [rax+0x8]
   140018307:	mov    edi,0xe123059e
   14001830c:	mov    rbx,QWORD PTR [rbp-0x30]
   140018310:	jmp    0x1400183ab
   140018315:	mov    ecx,0x80004005
   14001831a:	call   0x14000400c
   14001831f:	int3   
   140018320:	mov    ecx,0x80070057
   140018325:	call   0x14000400c
   14001832a:	int3   
   14001832b:	mov    ecx,0x8007000e
   140018330:	call   0x14000400c
   140018335:	int3   
   140018336:	mov    ecx,0x80070057
   14001833b:	call   0x14000400c
   140018340:	int3   
   140018341:	mov    ecx,0x80070216
   140018346:	call   0x14000400c
   14001834b:	nop
   14001834c:	mov    rdx,QWORD PTR [rbp+0x50]
   140018350:	add    rdx,0xffffffffffffffe8
   140018354:	or     r15d,0xffffffff
   140018358:	mov    eax,r15d
   14001835b:	lock xadd DWORD PTR [rdx+0x10],eax
   140018360:	add    eax,r15d
   140018363:	test   eax,eax
   140018365:	jg     0x140018371
   140018367:	mov    rcx,QWORD PTR [rdx]
   14001836a:	mov    rax,QWORD PTR [rcx]
   14001836d:	call   QWORD PTR [rax+0x8]
   140018370:	nop
   140018371:	mov    rdx,QWORD PTR [rbp+0x58]
   140018375:	add    rdx,0xffffffffffffffe8
   140018379:	mov    eax,r15d
   14001837c:	lock xadd DWORD PTR [rdx+0x10],eax
   140018381:	add    eax,r15d
   140018384:	test   eax,eax
   140018386:	jg     0x140018391
   140018388:	mov    rcx,QWORD PTR [rdx]
   14001838b:	mov    rax,QWORD PTR [rcx]
   14001838e:	call   QWORD PTR [rax+0x8]
   140018391:	mov    edi,0xe123059f
   140018396:	jmp    0x14001830c
   14001839b:	call   0x140007088
   1400183a0:	nop
   1400183a1:	mov    edi,0x80004005
   1400183a6:	jmp    0x1400183ab
   1400183a8:	mov    edi,r12d
   1400183ab:	lea    rdx,[rbx-0x18]
   1400183af:	mov    ecx,r15d
   1400183b2:	lock xadd DWORD PTR [rdx+0x10],ecx
   1400183b7:	add    ecx,r15d
   1400183ba:	test   ecx,ecx
   1400183bc:	jg     0x1400183c8
   1400183be:	mov    rcx,QWORD PTR [rdx]
   1400183c1:	mov    r8,QWORD PTR [rcx]
   1400183c4:	call   QWORD PTR [r8+0x8]
   1400183c8:	mov    eax,edi
   1400183ca:	mov    rbx,QWORD PTR [rsp+0x98]
   1400183d2:	add    rsp,0x50
   1400183d6:	pop    r15
   1400183d8:	pop    r14
   1400183da:	pop    r13
   1400183dc:	pop    r12
   1400183de:	pop    rdi
   1400183df:	pop    rsi
   1400183e0:	pop    rbp
   1400183e1:	ret    
   1400183e2:	int3   
   1400183e3:	int3   
   1400183e4:	rex push rbp
   1400183e6:	push   rsi
   1400183e7:	push   rdi
   1400183e8:	mov    rbp,rsp
   1400183eb:	sub    rsp,0x40
   1400183ef:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400183f7:	mov    QWORD PTR [rsp+0x60],rbx
   1400183fc:	mov    rdi,rdx
   1400183ff:	mov    rsi,rcx
   140018402:	and    DWORD PTR [rbp+0x30],0x0
   140018406:	lea    rcx,[rip+0x41f1b]        # 0x14005a328
   14001840d:	mov    rax,QWORD PTR [rip+0x41f14]        # 0x14005a328
   140018414:	call   QWORD PTR [rax+0x18]
   140018417:	add    rax,0x18
   14001841b:	mov    QWORD PTR [rbp+0x38],rax
   14001841f:	lea    r9,[rbp+0x30]
   140018423:	lea    rdx,[rbp-0x20]
   140018427:	mov    rcx,rsi
   14001842a:	call   0x14000d440
   14001842f:	nop
   140018430:	mov    rdx,rax
   140018433:	lea    rcx,[rbp+0x38]
   140018437:	call   0x14000cdac
   14001843c:	nop
   14001843d:	mov    rdx,QWORD PTR [rbp-0x20]
   140018441:	add    rdx,0xffffffffffffffe8
   140018445:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001844a:	jg     0x140018455
   14001844c:	mov    rcx,QWORD PTR [rdx]
   14001844f:	mov    rax,QWORD PTR [rcx]
   140018452:	call   QWORD PTR [rax+0x8]
   140018455:	mov    rbx,QWORD PTR [rbp+0x38]
   140018459:	cmp    DWORD PTR [rbx-0x10],0x0
   14001845d:	je     0x1400184af
   14001845f:	lea    r9,[rbp+0x30]
   140018463:	lea    rdx,[rbp-0x18]
   140018467:	mov    rcx,rsi
   14001846a:	call   0x14000d440
   14001846f:	nop
   140018470:	mov    rdx,rax
   140018473:	lea    rcx,[rbp+0x38]
   140018477:	call   0x14000cdac
   14001847c:	nop
   14001847d:	mov    rdx,QWORD PTR [rbp-0x18]
   140018481:	add    rdx,0xffffffffffffffe8
   140018485:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001848a:	jg     0x140018495
   14001848c:	mov    rcx,QWORD PTR [rdx]
   14001848f:	mov    rax,QWORD PTR [rcx]
   140018492:	call   QWORD PTR [rax+0x8]
   140018495:	mov    rbx,QWORD PTR [rbp+0x38]
   140018499:	cmp    DWORD PTR [rbx-0x10],0x0
   14001849d:	je     0x1400184af
   14001849f:	lea    rdx,[rbp+0x38]
   1400184a3:	mov    rcx,rdi
   1400184a6:	call   0x14000cdac
   1400184ab:	xor    edi,edi
   1400184ad:	jmp    0x1400184b4
   1400184af:	mov    edi,0x80004005
   1400184b4:	lea    rdx,[rbx-0x18]
   1400184b8:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400184bd:	jg     0x1400184c9
   1400184bf:	mov    rcx,QWORD PTR [rdx]
   1400184c2:	mov    r8,QWORD PTR [rcx]
   1400184c5:	call   QWORD PTR [r8+0x8]
   1400184c9:	mov    eax,edi
   1400184cb:	mov    rbx,QWORD PTR [rsp+0x60]
   1400184d0:	add    rsp,0x40
   1400184d4:	pop    rdi
   1400184d5:	pop    rsi
   1400184d6:	pop    rbp
   1400184d7:	ret    
   1400184d8:	rex push rsi
   1400184da:	push   rdi
   1400184db:	push   r12
   1400184dd:	push   r14
   1400184df:	push   r15
   1400184e1:	sub    rsp,0x40
   1400184e5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400184ee:	mov    QWORD PTR [rsp+0x70],rbx
   1400184f3:	mov    QWORD PTR [rsp+0x78],rbp
   1400184f8:	mov    r12,rdx
   1400184fb:	mov    r15,rcx
   1400184fe:	mov    rax,QWORD PTR [rip+0x447d3]        # 0x14005ccd8
   140018505:	test   rax,rax
   140018508:	jne    0x14001852d
   14001850a:	xor    ecx,ecx
   14001850c:	call   QWORD PTR [rip+0x2926e]        # 0x140041780
   140018512:	call   0x140018688
   140018517:	call   QWORD PTR [rip+0x2926b]        # 0x140041788
   14001851d:	mov    rax,QWORD PTR [rip+0x447b4]        # 0x14005ccd8
   140018524:	test   rax,rax
   140018527:	je     0x14001863b
   14001852d:	movsxd rdi,DWORD PTR [rax+0x8]
   140018531:	test   edi,edi
   140018533:	je     0x14001863b
   140018539:	lea    rsi,[rdi-0x1]
   14001853d:	lea    ebp,[rdi-0x1]
   140018540:	lea    rcx,[rdi+rdi*2]
   140018544:	lea    r14,[rcx*8-0x18]
   14001854c:	test   rsi,rsi
   14001854f:	js     0x140018625
   140018555:	cmp    ebp,DWORD PTR [rax+0x8]
   140018558:	jge    0x140018625
   14001855e:	mov    rbx,QWORD PTR [rax]
   140018561:	add    rbx,r14
   140018564:	mov    rdx,rbx
   140018567:	lea    rcx,[rsp+0x28]
   14001856c:	call   0x140006af0
   140018571:	nop
   140018572:	movups xmm0,XMMWORD PTR [rbx+0x8]
   140018576:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001857c:	xor    eax,eax
   14001857e:	test   r15,r15
   140018581:	setne  al
   140018584:	test   eax,eax
   140018586:	je     0x14001861a
   14001858c:	mov    rdx,r15
   14001858f:	mov    rcx,QWORD PTR [rsp+0x28]
   140018594:	call   0x140026fd8
   140018599:	test   eax,eax
   14001859b:	je     0x1400185e4
   14001859d:	lea    rax,[rsp+0x28]
   1400185a2:	mov    QWORD PTR [rsp+0x80],rax
   1400185aa:	mov    rdx,QWORD PTR [rsp+0x28]
   1400185af:	add    rdx,0xffffffffffffffe8
   1400185b3:	or     eax,0xffffffff
   1400185b6:	lock xadd DWORD PTR [rdx+0x10],eax
   1400185bb:	dec    eax
   1400185bd:	jg     0x1400185c8
   1400185bf:	mov    rcx,QWORD PTR [rdx]
   1400185c2:	mov    rax,QWORD PTR [rcx]
   1400185c5:	call   QWORD PTR [rax+0x8]
   1400185c8:	or     ecx,0xffffffff
   1400185cb:	add    ebp,ecx
   1400185cd:	sub    r14,0x18
   1400185d1:	dec    rsi
   1400185d4:	add    edi,ecx
   1400185d6:	je     0x14001863b
   1400185d8:	mov    rax,QWORD PTR [rip+0x446f9]        # 0x14005ccd8
   1400185df:	jmp    0x14001854c
   1400185e4:	movups xmm0,XMMWORD PTR [rsp+0x30]
   1400185e9:	movdqu XMMWORD PTR [r12],xmm0
   1400185ef:	lea    rax,[rsp+0x28]
   1400185f4:	mov    QWORD PTR [rsp+0x80],rax
   1400185fc:	mov    rax,QWORD PTR [rsp+0x28]
   140018601:	lea    rdx,[rax-0x18]
   140018605:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001860a:	jg     0x140018616
   14001860c:	mov    rcx,QWORD PTR [rdx]
   14001860f:	mov    r8,QWORD PTR [rcx]
   140018612:	call   QWORD PTR [r8+0x8]
   140018616:	mov    al,0x1
   140018618:	jmp    0x14001863d
   14001861a:	mov    ecx,0x80004005
   14001861f:	call   0x14000400c
   140018624:	nop
   140018625:	xor    r9d,r9d
   140018628:	xor    r8d,r8d
   14001862b:	lea    edx,[r9+0x1]
   14001862f:	mov    ecx,0xc000008c
   140018634:	call   QWORD PTR [rip+0x28d66]        # 0x1400413a0
   14001863a:	int3   
   14001863b:	xor    al,al
   14001863d:	mov    rbx,QWORD PTR [rsp+0x70]
   140018642:	mov    rbp,QWORD PTR [rsp+0x78]
   140018647:	add    rsp,0x40
   14001864b:	pop    r15
   14001864d:	pop    r14
   14001864f:	pop    r12
   140018651:	pop    rdi
   140018652:	pop    rsi
   140018653:	ret    
   140018654:	mov    QWORD PTR [rsp+0x8],rcx
   140018659:	sub    rsp,0x38
   14001865d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018666:	mov    QWORD PTR [rsp+0x40],rcx
   14001866b:	mov    rdx,QWORD PTR [rcx]
   14001866e:	sub    rdx,0x18
   140018672:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140018677:	jg     0x140018682
   140018679:	mov    rcx,QWORD PTR [rdx]
   14001867c:	mov    rax,QWORD PTR [rcx]
   14001867f:	call   QWORD PTR [rax+0x8]
   140018682:	add    rsp,0x38
   140018686:	ret    
   140018687:	int3   
   140018688:	mov    rax,rsp
   14001868b:	push   rbp
   14001868c:	lea    rbp,[rax-0x18]
   140018690:	sub    rsp,0x110
   140018697:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   14001869f:	mov    QWORD PTR [rax+0x8],rbx
   1400186a3:	mov    QWORD PTR [rax+0x10],rsi
   1400186a7:	mov    QWORD PTR [rax+0x18],rdi
   1400186ab:	mov    QWORD PTR [rax+0x20],r14
   1400186af:	mov    rax,QWORD PTR [rip+0x409d2]        # 0x140059088
   1400186b6:	xor    rax,rsp
   1400186b9:	mov    QWORD PTR [rbp+0x0],rax
   1400186bd:	xor    r14d,r14d
   1400186c0:	cmp    QWORD PTR [rip+0x44611],r14        # 0x14005ccd8
   1400186c7:	jne    0x1400189b3
   1400186cd:	lea    ecx,[r14+0x10]
   1400186d1:	call   0x140026da8
   1400186d6:	mov    QWORD PTR [rbp-0x80],rax
   1400186da:	test   rax,rax
   1400186dd:	je     0x1400186e8
   1400186df:	mov    QWORD PTR [rax],r14
   1400186e2:	mov    QWORD PTR [rax+0x8],r14
   1400186e6:	jmp    0x1400186eb
   1400186e8:	mov    rax,r14
   1400186eb:	mov    QWORD PTR [rip+0x445e6],rax        # 0x14005ccd8
   1400186f2:	lea    rdx,[rip+0x2e317]        # 0x140046a10
   1400186f9:	lea    rcx,[rbp-0x60]
   1400186fd:	call   0x140006b8c
   140018702:	nop
   140018703:	movups xmm0,XMMWORD PTR [rip+0x2d0ce]        # 0x1400457d8
   14001870a:	movdqu XMMWORD PTR [rbp-0x58],xmm0
   14001870f:	lea    rdx,[rbp-0x60]
   140018713:	mov    rcx,QWORD PTR [rip+0x445be]        # 0x14005ccd8
   14001871a:	call   0x1400189dc
   14001871f:	nop
   140018720:	lea    rax,[rbp-0x60]
   140018724:	mov    QWORD PTR [rbp-0x80],rax
   140018728:	mov    rdx,QWORD PTR [rbp-0x60]
   14001872c:	add    rdx,0xffffffffffffffe8
   140018730:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140018735:	jg     0x140018740
   140018737:	mov    rcx,QWORD PTR [rdx]
   14001873a:	mov    rax,QWORD PTR [rcx]
   14001873d:	call   QWORD PTR [rax+0x8]
   140018740:	lea    rax,[rsp+0x70]
   140018745:	mov    QWORD PTR [rsp+0x20],rax
   14001874a:	lea    r9,[rip+0x2cc9f]        # 0x1400453f0
   140018751:	xor    edx,edx
   140018753:	lea    r8d,[rdx+0x1]
   140018757:	lea    rcx,[rip+0x2cc32]        # 0x140045390
   14001875e:	call   QWORD PTR [rip+0x2900c]        # 0x140041770
   140018764:	test   eax,eax
   140018766:	js     0x1400189b3
   14001876c:	mov    QWORD PTR [rsp+0x68],r14
   140018771:	lea    rcx,[rip+0x2e280]        # 0x1400469f8
   140018778:	call   QWORD PTR [rip+0x28f62]        # 0x1400416e0
   14001877e:	mov    rdi,rax
   140018781:	mov    rcx,QWORD PTR [rsp+0x70]
   140018786:	mov    r10,QWORD PTR [rcx]
   140018789:	lea    rax,[rsp+0x68]
   14001878e:	mov    QWORD PTR [rsp+0x40],rax
   140018793:	mov    QWORD PTR [rsp+0x38],r14
   140018798:	mov    QWORD PTR [rsp+0x30],r14
   14001879d:	mov    DWORD PTR [rsp+0x28],r14d
   1400187a2:	mov    QWORD PTR [rsp+0x20],r14
   1400187a7:	xor    r9d,r9d
   1400187aa:	xor    r8d,r8d
   1400187ad:	mov    rdx,rdi
   1400187b0:	call   QWORD PTR [r10+0x18]
   1400187b4:	mov    ebx,eax
   1400187b6:	mov    rcx,rdi
   1400187b9:	call   QWORD PTR [rip+0x28f11]        # 0x1400416d0
   1400187bf:	mov    rcx,QWORD PTR [rsp+0x70]
   1400187c4:	mov    rdx,QWORD PTR [rcx]
   1400187c7:	call   QWORD PTR [rdx+0x10]
   1400187ca:	mov    QWORD PTR [rsp+0x70],r14
   1400187cf:	test   ebx,ebx
   1400187d1:	js     0x1400189b3
   1400187d7:	mov    QWORD PTR [rsp+0x60],r14
   1400187dc:	lea    rcx,[rip+0x2e265]        # 0x140046a48
   1400187e3:	call   QWORD PTR [rip+0x28ef7]        # 0x1400416e0
   1400187e9:	mov    rdi,rax
   1400187ec:	mov    rcx,QWORD PTR [rsp+0x68]
   1400187f1:	mov    r10,QWORD PTR [rcx]
   1400187f4:	lea    rax,[rsp+0x60]
   1400187f9:	mov    QWORD PTR [rsp+0x20],rax
   1400187fe:	xor    r9d,r9d
   140018801:	mov    r8d,0x20001
   140018807:	mov    rdx,rdi
   14001880a:	call   QWORD PTR [r10+0x60]
   14001880e:	mov    ebx,eax
   140018810:	mov    rcx,rdi
   140018813:	call   QWORD PTR [rip+0x28eb7]        # 0x1400416d0
   140018819:	mov    rcx,QWORD PTR [rsp+0x68]
   14001881e:	mov    rdx,QWORD PTR [rcx]
   140018821:	call   QWORD PTR [rdx+0x10]
   140018824:	mov    QWORD PTR [rsp+0x68],r14
   140018829:	test   ebx,ebx
   14001882b:	js     0x1400189b3
   140018831:	lea    rcx,[rip+0x2df50]        # 0x140046788
   140018838:	call   QWORD PTR [rip+0x28ea2]        # 0x1400416e0
   14001883e:	mov    rdi,rax
   140018841:	lea    rcx,[rip+0x2e1f0]        # 0x140046a38
   140018848:	call   QWORD PTR [rip+0x28e92]        # 0x1400416e0
   14001884e:	mov    rsi,rax
   140018851:	mov    QWORD PTR [rsp+0x50],r14
   140018856:	mov    QWORD PTR [rsp+0x58],r14
   14001885b:	mov    rcx,QWORD PTR [rsp+0x60]
   140018860:	mov    r10,QWORD PTR [rcx]
   140018863:	lea    rax,[rsp+0x78]
   140018868:	mov    QWORD PTR [rsp+0x20],rax
   14001886d:	lea    r9,[rsp+0x50]
   140018872:	mov    r8d,0x1
   140018878:	or     edx,0xffffffff
   14001887b:	call   QWORD PTR [r10+0x20]
   14001887f:	jmp    0x14001898e
   140018884:	mov    rbx,r14
   140018887:	mov    rcx,QWORD PTR [rsp+0x50]
   14001888c:	mov    rax,QWORD PTR [rcx]
   14001888f:	lea    rdx,[rsp+0x58]
   140018894:	call   QWORD PTR [rax+0x18]
   140018897:	mov    rcx,QWORD PTR [rsp+0x58]
   14001889c:	test   rcx,rcx
   14001889f:	je     0x14001895b
   1400188a5:	mov    rax,QWORD PTR [rcx]
   1400188a8:	mov    QWORD PTR [rsp+0x20],r14
   1400188ad:	lea    r9,[rbp-0x40]
   1400188b1:	xor    r8d,r8d
   1400188b4:	mov    rdx,rdi
   1400188b7:	call   QWORD PTR [rax+0x18]
   1400188ba:	test   eax,eax
   1400188bc:	js     0x1400188c8
   1400188be:	cmp    WORD PTR [rbp-0x40],0x8
   1400188c3:	cmove  rbx,QWORD PTR [rbp-0x38]
   1400188c8:	mov    rcx,QWORD PTR [rsp+0x58]
   1400188cd:	mov    rax,QWORD PTR [rcx]
   1400188d0:	mov    QWORD PTR [rsp+0x20],r14
   1400188d5:	lea    r9,[rbp-0x28]
   1400188d9:	xor    r8d,r8d
   1400188dc:	mov    rdx,rsi
   1400188df:	call   QWORD PTR [rax+0x18]
   1400188e2:	test   eax,eax
   1400188e4:	js     0x14001894b
   1400188e6:	cmp    WORD PTR [rbp-0x28],0x8
   1400188eb:	jne    0x14001894b
   1400188ed:	lea    rdx,[rbp-0x10]
   1400188f1:	mov    rcx,QWORD PTR [rbp-0x20]
   1400188f5:	call   QWORD PTR [rip+0x28e7d]        # 0x140041778
   1400188fb:	test   eax,eax
   1400188fd:	js     0x14001894b
   1400188ff:	test   rbx,rbx
   140018902:	je     0x14001894b
   140018904:	mov    rdx,rbx
   140018907:	lea    rcx,[rbp-0x78]
   14001890b:	call   0x140006b8c
   140018910:	nop
   140018911:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140018915:	movdqu XMMWORD PTR [rbp-0x70],xmm0
   14001891a:	lea    rdx,[rbp-0x78]
   14001891e:	mov    rcx,QWORD PTR [rip+0x443b3]        # 0x14005ccd8
   140018925:	call   0x1400189dc
   14001892a:	nop
   14001892b:	lea    rax,[rbp-0x78]
   14001892f:	mov    QWORD PTR [rbp-0x80],rax
   140018933:	mov    rdx,QWORD PTR [rbp-0x78]
   140018937:	add    rdx,0xffffffffffffffe8
   14001893b:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140018940:	jg     0x14001894b
   140018942:	mov    rcx,QWORD PTR [rdx]
   140018945:	mov    rax,QWORD PTR [rcx]
   140018948:	call   QWORD PTR [rax+0x8]
   14001894b:	mov    rcx,QWORD PTR [rsp+0x58]
   140018950:	mov    rax,QWORD PTR [rcx]
   140018953:	call   QWORD PTR [rax+0x10]
   140018956:	mov    QWORD PTR [rsp+0x58],r14
   14001895b:	mov    rcx,QWORD PTR [rsp+0x50]
   140018960:	mov    rax,QWORD PTR [rcx]
   140018963:	call   QWORD PTR [rax+0x10]
   140018966:	mov    QWORD PTR [rsp+0x50],r14
   14001896b:	mov    rcx,QWORD PTR [rsp+0x60]
   140018970:	mov    rax,QWORD PTR [rcx]
   140018973:	lea    rdx,[rsp+0x78]
   140018978:	mov    QWORD PTR [rsp+0x20],rdx
   14001897d:	lea    r9,[rsp+0x50]
   140018982:	mov    r8d,0x1
   140018988:	or     edx,0xffffffff
   14001898b:	call   QWORD PTR [rax+0x20]
   14001898e:	test   eax,eax
   140018990:	je     0x140018884
   140018996:	mov    rcx,QWORD PTR [rsp+0x60]
   14001899b:	mov    rax,QWORD PTR [rcx]
   14001899e:	call   QWORD PTR [rax+0x10]
   1400189a1:	mov    rcx,rdi
   1400189a4:	call   QWORD PTR [rip+0x28d26]        # 0x1400416d0
   1400189aa:	mov    rcx,rsi
   1400189ad:	call   QWORD PTR [rip+0x28d1d]        # 0x1400416d0
   1400189b3:	mov    rcx,QWORD PTR [rbp+0x0]
   1400189b7:	xor    rcx,rsp
   1400189ba:	call   0x1400265a0
   1400189bf:	lea    r11,[rsp+0x110]
   1400189c7:	mov    rbx,QWORD PTR [r11+0x10]
   1400189cb:	mov    rsi,QWORD PTR [r11+0x18]
   1400189cf:	mov    rdi,QWORD PTR [r11+0x20]
   1400189d3:	mov    r14,QWORD PTR [r11+0x28]
   1400189d7:	mov    rsp,r11
   1400189da:	pop    rbp
   1400189db:	ret    
   1400189dc:	mov    QWORD PTR [rsp+0x8],rcx
   1400189e1:	push   rbx
   1400189e2:	push   rsi
   1400189e3:	push   rdi
   1400189e4:	sub    rsp,0x30
   1400189e8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400189f1:	mov    rsi,rdx
   1400189f4:	mov    rbx,rcx
   1400189f7:	mov    edi,DWORD PTR [rcx+0x8]
   1400189fa:	movsxd rdx,DWORD PTR [rcx+0xc]
   1400189fe:	cmp    edi,edx
   140018a00:	jne    0x140018a5a
   140018a02:	mov    r9,QWORD PTR [rcx]
   140018a05:	cmp    rsi,r9
   140018a08:	jb     0x140018a22
   140018a0a:	lea    rcx,[rdx+rdx*2]
   140018a0e:	lea    rax,[r9+rcx*8]
   140018a12:	cmp    rsi,rax
   140018a15:	jae    0x140018a22
   140018a17:	mov    ecx,0x80004005
   140018a1c:	call   0x14000400c
   140018a21:	int3   
   140018a22:	test   edx,edx
   140018a24:	jne    0x140018a2b
   140018a26:	lea    edi,[rdx+0x1]
   140018a29:	jmp    0x140018a2f
   140018a2b:	add    edi,edi
   140018a2d:	js     0x140018a56
   140018a2f:	movsxd rdx,edi
   140018a32:	cmp    rdx,0x5555555
   140018a39:	ja     0x140018a56
   140018a3b:	mov    r8d,0x18
   140018a41:	mov    rcx,r9
   140018a44:	call   0x1400275ec
   140018a49:	test   rax,rax
   140018a4c:	je     0x140018a56
   140018a4e:	mov    DWORD PTR [rbx+0xc],edi
   140018a51:	mov    QWORD PTR [rbx],rax
   140018a54:	jmp    0x140018a5a
   140018a56:	xor    eax,eax
   140018a58:	jmp    0x140018a99
   140018a5a:	movsxd rax,DWORD PTR [rbx+0x8]
   140018a5e:	mov    DWORD PTR [rsp+0x60],eax
   140018a62:	lea    rcx,[rax+rax*2]
   140018a66:	mov    rax,QWORD PTR [rbx]
   140018a69:	lea    rdi,[rax+rcx*8]
   140018a6d:	mov    QWORD PTR [rsp+0x68],rdi
   140018a72:	test   rdi,rdi
   140018a75:	je     0x140018a91
   140018a77:	mov    QWORD PTR [rsp+0x28],rdi
   140018a7c:	mov    rdx,rsi
   140018a7f:	mov    rcx,rdi
   140018a82:	call   0x140006af0
   140018a87:	nop
   140018a88:	movups xmm0,XMMWORD PTR [rsi+0x8]
   140018a8c:	movdqu XMMWORD PTR [rdi+0x8],xmm0
   140018a91:	inc    DWORD PTR [rbx+0x8]
   140018a94:	mov    eax,0x1
   140018a99:	add    rsp,0x30
   140018a9d:	pop    rdi
   140018a9e:	pop    rsi
   140018a9f:	pop    rbx
   140018aa0:	ret    
   140018aa1:	int3   
   140018aa2:	int3   
   140018aa3:	int3   
   140018aa4:	mov    rax,rsp
   140018aa7:	mov    QWORD PTR [rax+0x8],rbx
   140018aab:	mov    QWORD PTR [rax+0x10],rbp
   140018aaf:	mov    QWORD PTR [rax+0x18],rsi
   140018ab3:	mov    QWORD PTR [rax+0x20],rdi
   140018ab7:	push   r12
   140018ab9:	push   r14
   140018abb:	push   r15
   140018abd:	sub    rsp,0x30
   140018ac1:	xor    r15d,r15d
   140018ac4:	lea    rax,[rip+0x2e16d]        # 0x140046c38
   140018acb:	lea    rdi,[rip+0x2da0e]        # 0x1400464e0
   140018ad2:	test   cl,cl
   140018ad4:	mov    rbx,rdx
   140018ad7:	lea    rsi,[rip+0x44242]        # 0x14005cd20
   140018ade:	mov    r14d,r15d
   140018ae1:	lea    ebp,[r15+0x16]
   140018ae5:	lea    r12,[rip+0xfffffffffffe7514]        # 0x140000000
   140018aec:	cmovne rdi,rax
   140018af0:	test   rbx,rbx
   140018af3:	je     0x140018afe
   140018af5:	mov    rcx,rbx
   140018af8:	cmp    WORD PTR [rbx],r15w
   140018afc:	jne    0x140018b05
   140018afe:	lea    rcx,[rip+0x2e10b]        # 0x140046c10
   140018b05:	mov    rax,QWORD PTR [r14+r12*1+0x5a930]
   140018b0d:	lea    r8,[rip+0x2e11c]        # 0x140046c30
   140018b14:	mov    r9,rdi
   140018b17:	mov    QWORD PTR [rsp+0x28],rax
   140018b1c:	mov    QWORD PTR [rsp+0x20],rcx
   140018b21:	mov    rcx,rsi
   140018b24:	mov    edx,0x50
   140018b29:	call   0x140011314
   140018b2e:	mov    QWORD PTR [r14+r12*1+0x5cbd0],rsi
   140018b36:	add    rsi,0x50
   140018b3a:	add    r14,0x8
   140018b3e:	dec    rbp
   140018b41:	jne    0x140018af0
   140018b43:	mov    rbx,QWORD PTR [rsp+0x50]
   140018b48:	mov    rbp,QWORD PTR [rsp+0x58]
   140018b4d:	mov    rsi,QWORD PTR [rsp+0x60]
   140018b52:	mov    rdi,QWORD PTR [rsp+0x68]
   140018b57:	mov    DWORD PTR [rip+0x4405f],0x1        # 0x14005cbc0
   140018b61:	add    rsp,0x30
   140018b65:	pop    r15
   140018b67:	pop    r14
   140018b69:	pop    r12
   140018b6b:	ret    
   140018b6c:	rex push rbp
   140018b6e:	mov    rbp,rsp
   140018b71:	sub    rsp,0x40
   140018b75:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140018b7d:	mov    QWORD PTR [rsp+0x50],rbx
   140018b82:	mov    QWORD PTR [rsp+0x58],rsi
   140018b87:	mov    QWORD PTR [rsp+0x60],rdi
   140018b8c:	mov    rdi,rdx
   140018b8f:	mov    rsi,rcx
   140018b92:	mov    rdx,rcx
   140018b95:	mov    cl,0x1
   140018b97:	call   0x140018aa4
   140018b9c:	lea    rax,[rip+0x2cc05]        # 0x1400457a8
   140018ba3:	mov    QWORD PTR [rbp-0x18],rax
   140018ba7:	lea    rax,[rip+0x2d682]        # 0x140046230
   140018bae:	mov    QWORD PTR [rbp-0x18],rax
   140018bb2:	xor    ebx,ebx
   140018bb4:	mov    QWORD PTR [rbp-0x10],rbx
   140018bb8:	lea    rax,[rip+0x2d969]        # 0x140046528
   140018bbf:	mov    QWORD PTR [rbp-0x18],rax
   140018bc3:	mov    DWORD PTR [rbp-0x8],ebx
   140018bc6:	mov    r9d,0x100000
   140018bcc:	mov    rdx,QWORD PTR [rip+0x4402d]        # 0x14005cc00
   140018bd3:	lea    rcx,[rbp-0x18]
   140018bd7:	call   0x140015830
   140018bdc:	test   eax,eax
   140018bde:	je     0x140018bfb
   140018be0:	xor    r8d,r8d
   140018be3:	xor    edx,edx
   140018be5:	lea    rcx,[rbp-0x18]
   140018be9:	call   0x14001585c
   140018bee:	test   eax,eax
   140018bf0:	je     0x140018bfb
   140018bf2:	test   rdi,rdi
   140018bf5:	je     0x140018c5d
   140018bf7:	mov    BYTE PTR [rdi],bl
   140018bf9:	jmp    0x140018c5d
   140018bfb:	mov    rdx,rsi
   140018bfe:	xor    ecx,ecx
   140018c00:	call   0x140018aa4
   140018c05:	cmp    DWORD PTR [rbp-0x8],ebx
   140018c08:	je     0x140018c14
   140018c0a:	mov    rcx,QWORD PTR [rbp-0x10]
   140018c0e:	call   QWORD PTR [rip+0x28a64]        # 0x140041678
   140018c14:	mov    rcx,QWORD PTR [rbp-0x10]
   140018c18:	call   QWORD PTR [rip+0x2876a]        # 0x140041388
   140018c1e:	mov    QWORD PTR [rbp-0x10],rbx
   140018c22:	mov    r9d,0x100000
   140018c28:	mov    rdx,QWORD PTR [rip+0x43fd1]        # 0x14005cc00
   140018c2f:	lea    rcx,[rbp-0x18]
   140018c33:	call   0x140015830
   140018c38:	test   eax,eax
   140018c3a:	je     0x140018c58
   140018c3c:	xor    r8d,r8d
   140018c3f:	xor    edx,edx
   140018c41:	lea    rcx,[rbp-0x18]
   140018c45:	call   0x14001585c
   140018c4a:	test   eax,eax
   140018c4c:	je     0x140018c58
   140018c4e:	test   rdi,rdi
   140018c51:	je     0x140018c5d
   140018c53:	mov    BYTE PTR [rdi],0x1
   140018c56:	jmp    0x140018c5d
   140018c58:	mov    ebx,0xe123051a
   140018c5d:	lea    rcx,[rbp-0x18]
   140018c61:	call   0x140015774
   140018c66:	mov    eax,ebx
   140018c68:	mov    rbx,QWORD PTR [rsp+0x50]
   140018c6d:	mov    rsi,QWORD PTR [rsp+0x58]
   140018c72:	mov    rdi,QWORD PTR [rsp+0x60]
   140018c77:	add    rsp,0x40
   140018c7b:	pop    rbp
   140018c7c:	ret    
   140018c7d:	int3   
   140018c7e:	int3   
   140018c7f:	int3   
   140018c80:	mov    rax,rsp
   140018c83:	push   rbp
   140018c84:	push   r14
   140018c86:	push   r15
   140018c88:	mov    rbp,rsp
   140018c8b:	sub    rsp,0x70
   140018c8f:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   140018c97:	mov    QWORD PTR [rax+0x8],rbx
   140018c9b:	mov    QWORD PTR [rax+0x10],rsi
   140018c9f:	mov    QWORD PTR [rax+0x18],rdi
   140018ca3:	mov    rdi,rdx
   140018ca6:	mov    r15,rcx
   140018ca9:	call   QWORD PTR [rip+0x286b1]        # 0x140041360
   140018caf:	mov    r14d,eax
   140018cb2:	lea    rsi,[rip+0x2caef]        # 0x1400457a8
   140018cb9:	mov    QWORD PTR [rbp-0x38],rsi
   140018cbd:	lea    rax,[rip+0x2d56c]        # 0x140046230
   140018cc4:	mov    QWORD PTR [rbp-0x38],rax
   140018cc8:	xor    ebx,ebx
   140018cca:	mov    QWORD PTR [rbp-0x30],rbx
   140018cce:	lea    rax,[rip+0x2d853]        # 0x140046528
   140018cd5:	mov    QWORD PTR [rbp-0x38],rax
   140018cd9:	mov    DWORD PTR [rbp-0x28],ebx
   140018cdc:	jmp    0x140018d02
   140018cde:	mov    edx,0xc8
   140018ce3:	mov    rcx,r15
   140018ce6:	call   QWORD PTR [rip+0x2868c]        # 0x140041378
   140018cec:	test   eax,eax
   140018cee:	je     0x140018d6f
   140018cf0:	call   QWORD PTR [rip+0x2866a]        # 0x140041360
   140018cf6:	sub    eax,r14d
   140018cf9:	cmp    DWORD PTR [rdi],0xffffffff
   140018cfc:	je     0x140018d02
   140018cfe:	cmp    DWORD PTR [rdi],eax
   140018d00:	jb     0x140018d6f
   140018d02:	mov    r9d,0x100000
   140018d08:	mov    rdx,QWORD PTR [rip+0x43ef1]        # 0x14005cc00
   140018d0f:	lea    rcx,[rbp-0x38]
   140018d13:	call   0x140015830
   140018d18:	test   eax,eax
   140018d1a:	je     0x140018cde
   140018d1c:	cmp    DWORD PTR [rdi],0xffffffff
   140018d1f:	je     0x140018d4a
   140018d21:	call   QWORD PTR [rip+0x28639]        # 0x140041360
   140018d27:	mov    esi,eax
   140018d29:	sub    esi,r14d
   140018d2c:	call   QWORD PTR [rip+0x2862e]        # 0x140041360
   140018d32:	mov    r14d,eax
   140018d35:	mov    ecx,DWORD PTR [rdi]
   140018d37:	cmp    ecx,esi
   140018d39:	jae    0x140018d3f
   140018d3b:	mov    DWORD PTR [rdi],ebx
   140018d3d:	jmp    0x140018d43
   140018d3f:	sub    ecx,esi
   140018d41:	mov    DWORD PTR [rdi],ecx
   140018d43:	lea    rsi,[rip+0x2ca5e]        # 0x1400457a8
   140018d4a:	mov    QWORD PTR [rbp-0x48],r15
   140018d4e:	mov    rax,QWORD PTR [rbp-0x30]
   140018d52:	mov    QWORD PTR [rbp-0x40],rax
   140018d56:	mov    r9d,DWORD PTR [rdi]
   140018d59:	xor    r8d,r8d
   140018d5c:	lea    rdx,[rbp-0x48]
   140018d60:	lea    ecx,[r8+0x2]
   140018d64:	call   QWORD PTR [rip+0x28946]        # 0x1400416b0
   140018d6a:	cmp    eax,0x1
   140018d6d:	je     0x140018d76
   140018d6f:	mov    ebx,0xe1230572
   140018d74:	jmp    0x140018dee
   140018d76:	cmp    DWORD PTR [rdi],0xffffffff
   140018d79:	je     0x140018d92
   140018d7b:	call   QWORD PTR [rip+0x285df]        # 0x140041360
   140018d81:	sub    eax,r14d
   140018d84:	mov    ecx,DWORD PTR [rdi]
   140018d86:	cmp    ecx,eax
   140018d88:	jae    0x140018d8e
   140018d8a:	mov    DWORD PTR [rdi],ebx
   140018d8c:	jmp    0x140018d92
   140018d8e:	sub    ecx,eax
   140018d90:	mov    DWORD PTR [rdi],ecx
   140018d92:	mov    QWORD PTR [rbp-0x20],rsi
   140018d96:	lea    rax,[rip+0x2d493]        # 0x140046230
   140018d9d:	mov    QWORD PTR [rbp-0x20],rax
   140018da1:	mov    QWORD PTR [rbp-0x18],rbx
   140018da5:	lea    rax,[rip+0x2d77c]        # 0x140046528
   140018dac:	mov    QWORD PTR [rbp-0x20],rax
   140018db0:	mov    DWORD PTR [rbp-0x10],ebx
   140018db3:	mov    r9d,0x100000
   140018db9:	mov    rdx,QWORD PTR [rip+0x43e18]        # 0x14005cbd8
   140018dc0:	lea    rcx,[rbp-0x20]
   140018dc4:	call   0x140015830
   140018dc9:	test   eax,eax
   140018dcb:	je     0x140018ddf
   140018dcd:	xor    r8d,r8d
   140018dd0:	mov    edx,DWORD PTR [rdi]
   140018dd2:	lea    rcx,[rbp-0x20]
   140018dd6:	call   0x14001585c
   140018ddb:	test   eax,eax
   140018ddd:	jne    0x140018de4
   140018ddf:	mov    ebx,0xe1230572
   140018de4:	lea    rcx,[rbp-0x20]
   140018de8:	call   0x140015774
   140018ded:	nop
   140018dee:	lea    rcx,[rbp-0x38]
   140018df2:	call   0x140015774
   140018df7:	mov    eax,ebx
   140018df9:	lea    r11,[rsp+0x70]
   140018dfe:	mov    rbx,QWORD PTR [r11+0x20]
   140018e02:	mov    rsi,QWORD PTR [r11+0x28]
   140018e06:	mov    rdi,QWORD PTR [r11+0x30]
   140018e0a:	mov    rsp,r11
   140018e0d:	pop    r15
   140018e0f:	pop    r14
   140018e11:	pop    rbp
   140018e12:	ret    
   140018e13:	int3   
   140018e14:	rex push rbx
   140018e16:	push   rsi
   140018e17:	push   rdi
   140018e18:	push   r12
   140018e1a:	push   r13
   140018e1c:	push   r14
   140018e1e:	push   r15
   140018e20:	sub    rsp,0x1c0
   140018e27:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140018e30:	mov    rax,QWORD PTR [rip+0x40251]        # 0x140059088
   140018e37:	xor    rax,rsp
   140018e3a:	mov    QWORD PTR [rsp+0x1b0],rax
   140018e42:	mov    rdi,r9
   140018e45:	mov    r14,r8
   140018e48:	mov    rbx,rdx
   140018e4b:	mov    r15,rcx
   140018e4e:	mov    r12,QWORD PTR [rsp+0x230]
   140018e56:	call   QWORD PTR [rip+0x28504]        # 0x140041360
   140018e5c:	mov    esi,eax
   140018e5e:	xor    r13d,r13d
   140018e61:	test   r14,r14
   140018e64:	je     0x140018fc7
   140018e6a:	test   rdi,rdi
   140018e6d:	je     0x140018fc7
   140018e73:	test   rbx,rbx
   140018e76:	je     0x140018fc7
   140018e7c:	mov    rdx,r12
   140018e7f:	mov    cl,BYTE PTR [rsp+0x228]
   140018e86:	call   0x140018aa4
   140018e8b:	mov    QWORD PTR [rsp+0x48],rdi
   140018e90:	mov    QWORD PTR [rsp+0x40],r14
   140018e95:	mov    QWORD PTR [rsp+0x38],r13
   140018e9a:	mov    QWORD PTR [rsp+0x30],r13
   140018e9f:	mov    DWORD PTR [rsp+0x28],0x8000000
   140018ea7:	lea    r14d,[r13+0x1]
   140018eab:	mov    DWORD PTR [rsp+0x20],r14d
   140018eb0:	xor    r9d,r9d
   140018eb3:	xor    r8d,r8d
   140018eb6:	mov    rdx,rbx
   140018eb9:	mov    rcx,r15
   140018ebc:	call   QWORD PTR [rip+0x287e6]        # 0x1400416a8
   140018ec2:	test   eax,eax
   140018ec4:	jne    0x140018ed1
   140018ec6:	call   QWORD PTR [rip+0x2850c]        # 0x1400413d8
   140018ecc:	jmp    0x140018fcc
   140018ed1:	call   QWORD PTR [rip+0x28489]        # 0x140041360
   140018ed7:	sub    eax,esi
   140018ed9:	mov    ecx,0x7530
   140018ede:	cmp    eax,ecx
   140018ee0:	jbe    0x140018ee9
   140018ee2:	mov    DWORD PTR [rsp+0x58],r13d
   140018ee7:	jmp    0x140018eef
   140018ee9:	sub    ecx,eax
   140018eeb:	mov    DWORD PTR [rsp+0x58],ecx
   140018eef:	lea    rdx,[rsp+0x58]
   140018ef4:	mov    rcx,QWORD PTR [rdi]
   140018ef7:	call   0x140018c80
   140018efc:	mov    ebx,eax
   140018efe:	test   eax,eax
   140018f00:	jne    0x140018fc3
   140018f06:	lea    rax,[rip+0x2d563]        # 0x140046470
   140018f0d:	mov    QWORD PTR [rsp+0x70],rax
   140018f12:	lea    rax,[rip+0x2c88f]        # 0x1400457a8
   140018f19:	mov    QWORD PTR [rsp+0x78],rax
   140018f1e:	lea    rax,[rip+0x2d30b]        # 0x140046230
   140018f25:	mov    QWORD PTR [rsp+0x78],rax
   140018f2a:	mov    QWORD PTR [rsp+0x80],r13
   140018f32:	lea    rax,[rip+0x2d5b7]        # 0x1400464f0
   140018f39:	mov    QWORD PTR [rsp+0x70],rax
   140018f3e:	lea    rax,[rip+0x2d5c3]        # 0x140046508
   140018f45:	mov    QWORD PTR [rsp+0x78],rax
   140018f4a:	mov    QWORD PTR [rsp+0x88],r13
   140018f52:	mov    QWORD PTR [rsp+0x90],r13
   140018f5a:	mov    DWORD PTR [rsp+0x98],r13d
   140018f62:	mov    QWORD PTR [rsp+0xa0],r13
   140018f6a:	mov    BYTE PTR [rsp+0xa8],r13b
   140018f72:	mov    DWORD PTR [rsp+0x28],r14d
   140018f77:	mov    DWORD PTR [rsp+0x20],r13d
   140018f7c:	xor    r9d,r9d
   140018f7f:	mov    r8d,0x4b8
   140018f85:	mov    rdx,QWORD PTR [rip+0x43c94]        # 0x14005cc20
   140018f8c:	lea    rcx,[rsp+0x70]
   140018f91:	call   0x1400150ac
   140018f96:	mov    edx,0xe123053e
   140018f9b:	mov    ecx,DWORD PTR [rdi+0x10]
   140018f9e:	mov    rax,QWORD PTR [rsp+0x88]
   140018fa6:	cmp    DWORD PTR [rax+0x4a8],ecx
   140018fac:	cmovne ebx,edx
   140018faf:	mov    DWORD PTR [rsp+0x50],ebx
   140018fb3:	jmp    0x140018fb9
   140018fb5:	mov    ebx,DWORD PTR [rsp+0x50]
   140018fb9:	lea    rcx,[rsp+0x70]
   140018fbe:	call   0x140014ffc
   140018fc3:	mov    eax,ebx
   140018fc5:	jmp    0x140018fcc
   140018fc7:	mov    eax,0x57
   140018fcc:	mov    rcx,QWORD PTR [rsp+0x1b0]
   140018fd4:	xor    rcx,rsp
   140018fd7:	call   0x1400265a0
   140018fdc:	add    rsp,0x1c0
   140018fe3:	pop    r15
   140018fe5:	pop    r14
   140018fe7:	pop    r13
   140018fe9:	pop    r12
   140018feb:	pop    rdi
   140018fec:	pop    rsi
   140018fed:	pop    rbx
   140018fee:	ret    
   140018fef:	int3   
   140018ff0:	mov    r11,rsp
   140018ff3:	sub    rsp,0x58
   140018ff7:	mov    rax,QWORD PTR [rsp+0x80]
   140018fff:	mov    QWORD PTR [r11-0x28],r9
   140019003:	mov    QWORD PTR [r11-0x38],rdx
   140019007:	mov    QWORD PTR [r11-0x20],rax
   14001900b:	lea    rax,[rip+0x2d04e]        # 0x140046060
   140019012:	mov    QWORD PTR [r11-0x30],r8
   140019016:	mov    QWORD PTR [r11-0x18],rax
   14001901a:	mov    rax,QWORD PTR [rcx]
   14001901d:	lea    r9,[r11-0x38]
   140019021:	mov    edx,0xa123091b
   140019026:	mov    r8d,0x5
   14001902c:	call   QWORD PTR [rax]
   14001902e:	add    rsp,0x58
   140019032:	ret    
   140019033:	int3   
   140019034:	mov    rax,rsp
   140019037:	mov    QWORD PTR [rax+0x8],rbx
   14001903b:	mov    QWORD PTR [rax+0x18],rbp
   14001903f:	mov    QWORD PTR [rax+0x20],rsi
   140019043:	mov    DWORD PTR [rax+0x10],edx
   140019046:	push   rdi
   140019047:	push   r14
   140019049:	push   r15
   14001904b:	sub    rsp,0x40
   14001904f:	mov    ebp,DWORD PTR [rsp+0x88]
   140019056:	mov    rbx,QWORD PTR [rsp+0x80]
   14001905e:	mov    r14,r9
   140019061:	mov    r15,r8
   140019064:	mov    rsi,rcx
   140019067:	xor    edi,edi
   140019069:	mov    rcx,QWORD PTR [rsi]
   14001906c:	test   rcx,rcx
   14001906f:	je     0x1400190a1
   140019071:	lea    rax,[rsp+0x68]
   140019076:	lea    r9,[rsp+0x30]
   14001907b:	xor    r8d,r8d
   14001907e:	mov    QWORD PTR [rsp+0x28],rax
   140019083:	mov    rdx,r15
   140019086:	mov    DWORD PTR [rsp+0x68],ebp
   14001908a:	mov    QWORD PTR [rsp+0x20],rbx
   14001908f:	mov    DWORD PTR [rsp+0x30],0x1
   140019097:	call   QWORD PTR [rip+0x27f7b]        # 0x140041018
   14001909d:	test   eax,eax
   14001909f:	je     0x1400190e8
   1400190a1:	inc    edi
   1400190a3:	add    rsi,0x18
   1400190a7:	cmp    edi,0x4
   1400190aa:	jb     0x140019069
   1400190ac:	lea    rax,[rbp-0x1]
   1400190b0:	mov    edx,0x7ffffffe
   1400190b5:	mov    rcx,rbp
   1400190b8:	cmp    rax,rdx
   1400190bb:	ja     0x1400190ec
   1400190bd:	sub    rdx,rcx
   1400190c0:	sub    r14,rbx
   1400190c3:	lea    rax,[rdx+rcx*1]
   1400190c7:	test   rax,rax
   1400190ca:	je     0x1400190de
   1400190cc:	mov    al,BYTE PTR [r14+rbx*1]
   1400190d0:	test   al,al
   1400190d2:	je     0x1400190de
   1400190d4:	mov    BYTE PTR [rbx],al
   1400190d6:	inc    rbx
   1400190d9:	dec    rcx
   1400190dc:	jne    0x1400190c3
   1400190de:	test   rcx,rcx
   1400190e1:	jne    0x1400190f0
   1400190e3:	dec    rbx
   1400190e6:	jmp    0x1400190f0
   1400190e8:	mov    eax,edi
   1400190ea:	jmp    0x1400190f6
   1400190ec:	test   ebp,ebp
   1400190ee:	je     0x1400190f3
   1400190f0:	mov    BYTE PTR [rbx],0x0
   1400190f3:	or     eax,0xffffffff
   1400190f6:	mov    rbx,QWORD PTR [rsp+0x60]
   1400190fb:	mov    rbp,QWORD PTR [rsp+0x70]
   140019100:	mov    rsi,QWORD PTR [rsp+0x78]
   140019105:	add    rsp,0x40
   140019109:	pop    r15
   14001910b:	pop    r14
   14001910d:	pop    rdi
   14001910e:	ret    
   14001910f:	int3   
   140019110:	rex push rbp
   140019112:	push   rbx
   140019113:	push   rsi
   140019114:	push   rdi
   140019115:	push   r12
   140019117:	push   r14
   140019119:	push   r15
   14001911b:	mov    rbp,rsp
   14001911e:	sub    rsp,0x50
   140019122:	mov    rax,QWORD PTR [rip+0x3ff5f]        # 0x140059088
   140019129:	xor    rax,rsp
   14001912c:	mov    QWORD PTR [rbp-0x10],rax
   140019130:	mov    rdi,QWORD PTR [rbp+0x60]
   140019134:	mov    r15,QWORD PTR [rbp+0x68]
   140019138:	mov    r14,r9
   14001913b:	mov    rsi,r8
   14001913e:	lea    rax,[rbp-0x20]
   140019142:	lea    r9,[rip+0x2db07]        # 0x140046c50
   140019149:	lea    r8,[rip+0x2daf0]        # 0x140046c40
   140019150:	mov    DWORD PTR [rsp+0x28],0xa
   140019158:	mov    rbx,rcx
   14001915b:	mov    QWORD PTR [rsp+0x20],rax
   140019160:	call   0x140019034
   140019165:	lea    rdx,[rbp-0x20]
   140019169:	lea    rcx,[rip+0x2dae0]        # 0x140046c50
   140019170:	mov    BYTE PTR [rbp-0x17],0x0
   140019174:	movsxd r12,eax
   140019177:	call   0x140034480
   14001917c:	test   eax,eax
   14001917e:	jne    0x140019188
   140019180:	mov    DWORD PTR [rdi],0x1
   140019186:	jmp    0x1400191e2
   140019188:	lea    rdx,[rbp-0x20]
   14001918c:	lea    rcx,[rip+0x2dac9]        # 0x140046c5c
   140019193:	call   0x140034480
   140019198:	test   eax,eax
   14001919a:	jne    0x1400191a0
   14001919c:	and    DWORD PTR [rdi],eax
   14001919e:	jmp    0x1400191e2
   1400191a0:	lea    rdx,[rbp-0x20]
   1400191a4:	lea    rcx,[rip+0x2daa9]        # 0x140046c54
   1400191ab:	call   0x140034480
   1400191b0:	test   eax,eax
   1400191b2:	jne    0x1400191b9
   1400191b4:	or     DWORD PTR [rdi],0xffffffff
   1400191b7:	jmp    0x1400191e2
   1400191b9:	lea    rdx,[r12+r12*2]
   1400191bd:	lea    rax,[rip+0x2dabc]        # 0x140046c80
   1400191c4:	lea    r9,[rip+0x2da95]        # 0x140046c60
   1400191cb:	mov    r8,QWORD PTR [rbx+rdx*8+0x10]
   1400191d0:	mov    rdx,QWORD PTR [rbx+rdx*8+0x8]
   1400191d5:	mov    rcx,r15
   1400191d8:	mov    QWORD PTR [rsp+0x20],rax
   1400191dd:	call   0x140018ff0
   1400191e2:	lea    rax,[rbp-0x20]
   1400191e6:	lea    r12,[rip+0x2da63]        # 0x140046c50
   1400191ed:	lea    r8,[rip+0x2dadc]        # 0x140046cd0
   1400191f4:	mov    rcx,rbx
   1400191f7:	mov    r9,r12
   1400191fa:	mov    DWORD PTR [rsp+0x28],0xa
   140019202:	mov    QWORD PTR [rsp+0x20],rax
   140019207:	call   0x140019034
   14001920c:	lea    rdx,[rbp-0x20]
   140019210:	mov    rcx,r12
   140019213:	mov    BYTE PTR [rbp-0x17],0x0
   140019217:	movsxd rdi,eax
   14001921a:	call   0x140034480
   14001921f:	test   eax,eax
   140019221:	jne    0x14001922c
   140019223:	mov    DWORD PTR [r14],0x1
   14001922a:	jmp    0x140019243
   14001922c:	lea    rdx,[rbp-0x20]
   140019230:	lea    rcx,[rip+0x2da25]        # 0x140046c5c
   140019237:	call   0x140034480
   14001923c:	test   eax,eax
   14001923e:	jne    0x14001924c
   140019240:	and    DWORD PTR [r14],eax
   140019243:	lea    r14,[rip+0x2da66]        # 0x140046cb0
   14001924a:	jmp    0x140019275
   14001924c:	lea    rdx,[rdi+rdi*2]
   140019250:	lea    r14,[rip+0x2da59]        # 0x140046cb0
   140019257:	lea    r9,[rip+0x2da92]        # 0x140046cf0
   14001925e:	mov    r8,QWORD PTR [rbx+rdx*8+0x10]
   140019263:	mov    rdx,QWORD PTR [rbx+rdx*8+0x8]
   140019268:	mov    rcx,r15
   14001926b:	mov    QWORD PTR [rsp+0x20],r14
   140019270:	call   0x140018ff0
   140019275:	lea    rax,[rbp-0x20]
   140019279:	lea    r8,[rip+0x2da60]        # 0x140046ce0
   140019280:	mov    r9,r12
   140019283:	mov    rcx,rbx
   140019286:	mov    DWORD PTR [rsp+0x28],0xa
   14001928e:	mov    QWORD PTR [rsp+0x20],rax
   140019293:	call   0x140019034
   140019298:	lea    rdx,[rbp-0x20]
   14001929c:	mov    rcx,r12
   14001929f:	movsxd rdi,eax
   1400192a2:	mov    BYTE PTR [rbp-0x17],0x0
   1400192a6:	call   0x140034480
   1400192ab:	test   eax,eax
   1400192ad:	jne    0x1400192b7
   1400192af:	mov    DWORD PTR [rsi],0x1
   1400192b5:	jmp    0x1400192f1
   1400192b7:	lea    rdx,[rbp-0x20]
   1400192bb:	lea    rcx,[rip+0x2d99a]        # 0x140046c5c
   1400192c2:	call   0x140034480
   1400192c7:	test   eax,eax
   1400192c9:	jne    0x1400192cf
   1400192cb:	and    DWORD PTR [rsi],eax
   1400192cd:	jmp    0x1400192f1
   1400192cf:	lea    rdx,[rdi+rdi*2]
   1400192d3:	lea    r9,[rip+0x2da3e]        # 0x140046d18
   1400192da:	mov    rcx,r15
   1400192dd:	mov    r8,QWORD PTR [rbx+rdx*8+0x10]
   1400192e2:	mov    rdx,QWORD PTR [rbx+rdx*8+0x8]
   1400192e7:	mov    QWORD PTR [rsp+0x20],r14
   1400192ec:	call   0x140018ff0
   1400192f1:	mov    rcx,QWORD PTR [rbp-0x10]
   1400192f5:	xor    rcx,rsp
   1400192f8:	call   0x1400265a0
   1400192fd:	add    rsp,0x50
   140019301:	pop    r15
   140019303:	pop    r14
   140019305:	pop    r12
   140019307:	pop    rdi
   140019308:	pop    rsi
   140019309:	pop    rbx
   14001930a:	pop    rbp
   14001930b:	ret    
   14001930c:	mov    QWORD PTR [rsp+0x8],rbx
   140019311:	push   rdi
   140019312:	sub    rsp,0x20
   140019316:	mov    ebx,edx
   140019318:	mov    rdi,rcx
   14001931b:	call   0x140019714
   140019320:	test   bl,0x1
   140019323:	je     0x14001932d
   140019325:	mov    rcx,rdi
   140019328:	call   0x14002657c
   14001932d:	mov    rax,rdi
   140019330:	mov    rbx,QWORD PTR [rsp+0x30]
   140019335:	add    rsp,0x20
   140019339:	pop    rdi
   14001933a:	ret    
   14001933b:	int3   
   14001933c:	mov    rax,rsp
   14001933f:	push   rbp
   140019340:	push   rsi
   140019341:	push   rdi
   140019342:	push   r12
   140019344:	push   r15
   140019346:	lea    rbp,[rax-0x128]
   14001934d:	sub    rsp,0x200
   140019354:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14001935d:	mov    QWORD PTR [rax+0x10],rbx
   140019361:	mov    rax,QWORD PTR [rip+0x3fd20]        # 0x140059088
   140019368:	xor    rax,rsp
   14001936b:	mov    QWORD PTR [rbp+0xf0],rax
   140019372:	mov    rsi,r8
   140019375:	mov    rdi,rcx
   140019378:	mov    QWORD PTR [rcx+0x178],rdx
   14001937f:	lea    rbx,[rcx+0x10]
   140019383:	mov    r12d,0x1
   140019389:	mov    DWORD PTR [rsp+0x28],r12d
   14001938e:	xor    r15d,r15d
   140019391:	mov    DWORD PTR [rsp+0x20],r15d
   140019396:	mov    r9d,r12d
   140019399:	mov    r8d,0x4b8
   14001939f:	mov    rdx,QWORD PTR [rip+0x4387a]        # 0x14005cc20
   1400193a6:	mov    rcx,rbx
   1400193a9:	call   0x1400150ac
   1400193ae:	mov    rax,QWORD PTR [rbx]
   1400193b1:	mov    rcx,rbx
   1400193b4:	call   QWORD PTR [rax+0x8]
   1400193b7:	mov    QWORD PTR [rdi+0x158],rax
   1400193be:	lea    ecx,[r12+0x17]
   1400193c3:	call   0x140026da8
   1400193c8:	mov    QWORD PTR [rsp+0x68],rax
   1400193cd:	test   rax,rax
   1400193d0:	je     0x1400193ea
   1400193d2:	mov    ecx,DWORD PTR [rdi+0x8]
   1400193d5:	mov    DWORD PTR [rsp+0x20],ecx
   1400193d9:	mov    rdx,QWORD PTR [rip+0x43888]        # 0x14005cc68
   1400193e0:	mov    rcx,rax
   1400193e3:	call   0x140019ed0
   1400193e8:	jmp    0x1400193ed
   1400193ea:	mov    rax,r15
   1400193ed:	mov    QWORD PTR [rdi+0x150],rax
   1400193f4:	mov    rcx,rax
   1400193f7:	call   0x140019fec
   1400193fc:	mov    QWORD PTR [rsp+0x50],r15
   140019401:	mov    QWORD PTR [rsp+0x40],r15
   140019406:	mov    QWORD PTR [rsp+0x48],r15
   14001940b:	mov    QWORD PTR [rsp+0x58],r15
   140019410:	mov    QWORD PTR [rbp-0x80],r15
   140019414:	mov    QWORD PTR [rbp-0x78],r15
   140019418:	mov    QWORD PTR [rbp-0x78],0x7
   140019420:	mov    QWORD PTR [rbp-0x80],r15
   140019424:	mov    WORD PTR [rsp+0x70],r15w
   14001942a:	lea    rbx,[rip+0x2d92f]        # 0x140046d60
   140019431:	mov    rdx,rbx
   140019434:	lea    rcx,[rsp+0x70]
   140019439:	call   0x14000324c
   14001943e:	nop
   14001943f:	lea    rdx,[rip+0x2ce02]        # 0x140046248
   140019446:	lea    rcx,[rsp+0x70]
   14001944b:	call   0x1400030a8
   140019450:	lea    rcx,[rsp+0x70]
   140019455:	test   rsi,rsi
   140019458:	je     0x14001945f
   14001945a:	mov    rdx,rsi
   14001945d:	jmp    0x140019487
   14001945f:	lea    rdx,[rip+0x4160a]        # 0x14005aa70
   140019466:	cmp    QWORD PTR [rip+0x4161a],0x8        # 0x14005aa88
   14001946e:	cmovae rdx,QWORD PTR [rip+0x415fa]        # 0x14005aa70
   140019476:	call   0x1400030a8
   14001947b:	lea    rdx,[rip+0x2c84e]        # 0x140045cd0
   140019482:	lea    rcx,[rsp+0x70]
   140019487:	call   0x1400030a8
   14001948c:	lea    rax,[rsp+0x48]
   140019491:	mov    QWORD PTR [rsp+0x20],rax
   140019496:	mov    r9d,0x20019
   14001949c:	xor    r8d,r8d
   14001949f:	mov    rdx,rbx
   1400194a2:	mov    rbx,0xffffffff80000002
   1400194a9:	mov    rcx,rbx
   1400194ac:	call   QWORD PTR [rip+0x27c06]        # 0x1400410b8
   1400194b2:	lea    rax,[rsp+0x58]
   1400194b7:	mov    QWORD PTR [rsp+0x20],rax
   1400194bc:	mov    r9d,0x20019
   1400194c2:	xor    r8d,r8d
   1400194c5:	lea    rdx,[rip+0x2d894]        # 0x140046d60
   1400194cc:	lea    rsi,[rbx-0x1]
   1400194d0:	mov    rcx,rsi
   1400194d3:	call   QWORD PTR [rip+0x27bdf]        # 0x1400410b8
   1400194d9:	lea    rdx,[rsp+0x70]
   1400194de:	cmp    QWORD PTR [rbp-0x78],0x8
   1400194e3:	cmovae rdx,QWORD PTR [rsp+0x70]
   1400194e9:	lea    rax,[rsp+0x50]
   1400194ee:	mov    QWORD PTR [rsp+0x20],rax
   1400194f3:	mov    r9d,0x20019
   1400194f9:	xor    r8d,r8d
   1400194fc:	mov    rcx,rbx
   1400194ff:	call   QWORD PTR [rip+0x27bb3]        # 0x1400410b8
   140019505:	lea    rdx,[rsp+0x70]
   14001950a:	cmp    QWORD PTR [rbp-0x78],0x8
   14001950f:	cmovae rdx,QWORD PTR [rsp+0x70]
   140019515:	lea    rax,[rsp+0x40]
   14001951a:	mov    QWORD PTR [rsp+0x20],rax
   14001951f:	mov    r9d,0x20019
   140019525:	xor    r8d,r8d
   140019528:	mov    rcx,rsi
   14001952b:	call   QWORD PTR [rip+0x27b87]        # 0x1400410b8
   140019531:	mov    rax,QWORD PTR [rsp+0x40]
   140019536:	mov    QWORD PTR [rbp-0x70],rax
   14001953a:	lea    rcx,[rip+0x2d89f]        # 0x140046de0
   140019541:	mov    QWORD PTR [rbp-0x68],rcx
   140019545:	lea    rax,[rsp+0x70]
   14001954a:	cmp    QWORD PTR [rbp-0x78],0x8
   14001954f:	cmovae rax,QWORD PTR [rsp+0x70]
   140019555:	mov    QWORD PTR [rbp-0x60],rax
   140019559:	mov    rax,QWORD PTR [rsp+0x58]
   14001955e:	mov    QWORD PTR [rbp-0x58],rax
   140019562:	mov    QWORD PTR [rbp-0x50],rcx
   140019566:	lea    rdx,[rip+0x2d7f3]        # 0x140046d60
   14001956d:	mov    QWORD PTR [rbp-0x48],rdx
   140019571:	mov    rax,QWORD PTR [rsp+0x50]
   140019576:	mov    QWORD PTR [rbp-0x40],rax
   14001957a:	lea    rcx,[rip+0x2d7b7]        # 0x140046d38
   140019581:	mov    QWORD PTR [rbp-0x38],rcx
   140019585:	lea    rax,[rsp+0x70]
   14001958a:	cmovae rax,QWORD PTR [rsp+0x70]
   140019590:	mov    QWORD PTR [rbp-0x30],rax
   140019594:	mov    rax,QWORD PTR [rsp+0x48]
   140019599:	mov    QWORD PTR [rbp-0x28],rax
   14001959d:	mov    QWORD PTR [rbp-0x20],rcx
   1400195a1:	mov    QWORD PTR [rbp-0x18],rdx
   1400195a5:	lea    r8,[rdi+0x160]
   1400195ac:	mov    DWORD PTR [r8],r12d
   1400195af:	lea    r9,[rdi+0x164]
   1400195b6:	mov    DWORD PTR [r9],r12d
   1400195b9:	lea    rcx,[rdi+0x168]
   1400195c0:	mov    DWORD PTR [rcx],r12d
   1400195c3:	mov    rax,QWORD PTR [rdi+0x178]
   1400195ca:	mov    QWORD PTR [rsp+0x28],rax
   1400195cf:	mov    QWORD PTR [rsp+0x20],rcx
   1400195d4:	lea    rcx,[rbp-0x70]
   1400195d8:	call   0x140019110
   1400195dd:	mov    DWORD PTR [rdi+0x16c],r15d
   1400195e4:	mov    DWORD PTR [rsp+0x28],0x100
   1400195ec:	lea    rax,[rbp-0x10]
   1400195f0:	mov    QWORD PTR [rsp+0x20],rax
   1400195f5:	lea    r9,[rip+0x2d714]        # 0x140046d10
   1400195fc:	lea    r8,[rip+0x2d805]        # 0x140046e08
   140019603:	lea    rcx,[rbp-0x70]
   140019607:	call   0x140019034
   14001960c:	movsxd rbx,eax
   14001960f:	lea    rdx,[rbp-0x10]
   140019613:	lea    rcx,[rip+0x2d6f6]        # 0x140046d10
   14001961a:	call   0x140034480
   14001961f:	test   eax,eax
   140019621:	je     0x14001968d
   140019623:	lea    rdx,[rbp-0x10]
   140019627:	lea    rcx,[rip+0x2d802]        # 0x140046e30
   14001962e:	call   0x140034480
   140019633:	test   eax,eax
   140019635:	jne    0x140019640
   140019637:	mov    DWORD PTR [rdi+0x16c],r12d
   14001963e:	jmp    0x14001968d
   140019640:	lea    rdx,[rbp-0x10]
   140019644:	lea    rcx,[rip+0x2d7d5]        # 0x140046e20
   14001964b:	call   0x140034480
   140019650:	test   eax,eax
   140019652:	jne    0x140019660
   140019654:	mov    DWORD PTR [rdi+0x16c],0x2
   14001965e:	jmp    0x14001968d
   140019660:	lea    rdx,[rbx+rbx*2]
   140019664:	lea    rax,[rip+0x2d805]        # 0x140046e70
   14001966b:	mov    QWORD PTR [rsp+0x20],rax
   140019670:	lea    r9,[rip+0x2d7c9]        # 0x140046e40
   140019677:	mov    r8,QWORD PTR [rbp+rdx*8-0x60]
   14001967c:	mov    rdx,QWORD PTR [rbp+rdx*8-0x68]
   140019681:	mov    rcx,QWORD PTR [rdi+0x178]
   140019688:	call   0x140018ff0
   14001968d:	mov    rcx,QWORD PTR [rsp+0x50]
   140019692:	call   QWORD PTR [rip+0x279a0]        # 0x140041038
   140019698:	mov    rcx,QWORD PTR [rsp+0x40]
   14001969d:	call   QWORD PTR [rip+0x27995]        # 0x140041038
   1400196a3:	mov    rcx,QWORD PTR [rsp+0x48]
   1400196a8:	call   QWORD PTR [rip+0x2798a]        # 0x140041038
   1400196ae:	mov    rcx,QWORD PTR [rsp+0x58]
   1400196b3:	call   QWORD PTR [rip+0x2797f]        # 0x140041038
   1400196b9:	mov    rcx,QWORD PTR [rdi+0x150]
   1400196c0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400196c4:	call   QWORD PTR [rip+0x27bb6]        # 0x140041280
   1400196ca:	nop
   1400196cb:	cmp    QWORD PTR [rbp-0x78],0x8
   1400196d0:	jb     0x1400196dc
   1400196d2:	mov    rcx,QWORD PTR [rsp+0x70]
   1400196d7:	call   0x14002657c
   1400196dc:	mov    QWORD PTR [rbp-0x78],0x7
   1400196e4:	mov    QWORD PTR [rbp-0x80],r15
   1400196e8:	mov    WORD PTR [rsp+0x70],r15w
   1400196ee:	mov    rcx,QWORD PTR [rbp+0xf0]
   1400196f5:	xor    rcx,rsp
   1400196f8:	call   0x1400265a0
   1400196fd:	mov    rbx,QWORD PTR [rsp+0x238]
   140019705:	add    rsp,0x200
   14001970c:	pop    r15
   14001970e:	pop    r12
   140019710:	pop    rdi
   140019711:	pop    rsi
   140019712:	pop    rbp
   140019713:	ret    
   140019714:	mov    r11,rsp
   140019717:	mov    QWORD PTR [r11+0x8],rcx
   14001971b:	push   rdi
   14001971c:	sub    rsp,0x30
   140019720:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   140019728:	mov    QWORD PTR [r11+0x18],rbx
   14001972c:	mov    rdi,rcx
   14001972f:	lea    rax,[rip+0x2d782]        # 0x140046eb8
   140019736:	mov    QWORD PTR [rcx],rax
   140019739:	mov    rbx,QWORD PTR [rcx+0x150]
   140019740:	mov    QWORD PTR [r11+0x10],rbx
   140019744:	test   rbx,rbx
   140019747:	je     0x140019765
   140019749:	lea    rax,[rip+0x2d7a0]        # 0x140046ef0
   140019750:	mov    QWORD PTR [rbx],rax
   140019753:	lea    rcx,[rbx+0x8]
   140019757:	call   0x14002582c
   14001975c:	mov    rcx,rbx
   14001975f:	call   0x14002657c
   140019764:	nop
   140019765:	lea    rcx,[rdi+0x10]
   140019769:	mov    rbx,QWORD PTR [rsp+0x50]
   14001976e:	add    rsp,0x30
   140019772:	pop    rdi
   140019773:	jmp    0x140014ffc
   140019778:	mov    QWORD PTR [rsp+0x8],rbx
   14001977d:	mov    QWORD PTR [rsp+0x10],rsi
   140019782:	push   rdi
   140019783:	sub    rsp,0x20
   140019787:	mov    ebx,r8d
   14001978a:	mov    rdi,rdx
   14001978d:	mov    rsi,rcx
   140019790:	test   r8b,0x1
   140019794:	jne    0x14001979d
   140019796:	mov    eax,0xc
   14001979b:	jmp    0x1400197c2
   14001979d:	add    rcx,0x18
   1400197a1:	mov    r8d,0x6
   1400197a7:	mov    rax,QWORD PTR [rcx]
   1400197aa:	call   QWORD PTR [rax]
   1400197ac:	test   eax,eax
   1400197ae:	jne    0x1400197c2
   1400197b0:	mov    rcx,QWORD PTR [rsi+0x150]
   1400197b7:	mov    r8d,ebx
   1400197ba:	mov    rdx,rdi
   1400197bd:	mov    rax,QWORD PTR [rcx]
   1400197c0:	call   QWORD PTR [rax]
   1400197c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400197c7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400197cc:	add    rsp,0x20
   1400197d0:	pop    rdi
   1400197d1:	ret    
   1400197d2:	int3   
   1400197d3:	int3   
   1400197d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400197d9:	push   rdi
   1400197da:	sub    rsp,0x20
   1400197de:	mov    rbx,rcx
   1400197e1:	add    rcx,0x18
   1400197e5:	mov    rdi,rdx
   1400197e8:	mov    rax,QWORD PTR [rcx]
   1400197eb:	call   QWORD PTR [rax+0x8]
   1400197ee:	mov    rcx,QWORD PTR [rbx+0x150]
   1400197f5:	mov    rdx,rdi
   1400197f8:	mov    DWORD PTR [rsp+0x30],eax
   1400197fc:	mov    rax,QWORD PTR [rcx]
   1400197ff:	call   QWORD PTR [rax+0x8]
   140019802:	lea    rcx,[rsp+0x30]
   140019807:	mov    DWORD PTR [rsp+0x34],eax
   14001980b:	xor    eax,eax
   14001980d:	mov    edx,DWORD PTR [rcx]
   14001980f:	test   edx,edx
   140019811:	jne    0x140019822
   140019813:	inc    eax
   140019815:	add    rcx,0x4
   140019819:	cmp    eax,0x2
   14001981c:	jb     0x14001980d
   14001981e:	xor    eax,eax
   140019820:	jmp    0x140019824
   140019822:	mov    eax,edx
   140019824:	mov    rbx,QWORD PTR [rsp+0x38]
   140019829:	add    rsp,0x20
   14001982d:	pop    rdi
   14001982e:	ret    
   14001982f:	int3   
   140019830:	mov    QWORD PTR [rsp+0x8],rcx
   140019835:	push   rdi
   140019836:	sub    rsp,0x10
   14001983a:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140019842:	mov    QWORD PTR [rsp+0x28],rbx
   140019847:	mov    rdx,rcx
   14001984a:	lea    rax,[rip+0x2d687]        # 0x140046ed8
   140019851:	mov    QWORD PTR [rcx],rax
   140019854:	mov    r10d,0x3
   14001985a:	mov    DWORD PTR [rcx+0x8],r10d
   14001985e:	lea    rax,[rcx+0x10]
   140019862:	mov    QWORD PTR [rsp+0x30],rax
   140019867:	lea    r11,[rip+0x2cc02]        # 0x140046470
   14001986e:	mov    QWORD PTR [rax],r11
   140019871:	lea    rbx,[rip+0x2c9b8]        # 0x140046230
   140019878:	mov    QWORD PTR [rax+0x8],rbx
   14001987c:	xor    edi,edi
   14001987e:	mov    QWORD PTR [rax+0x10],rdi
   140019882:	lea    r9,[rip+0x2cc67]        # 0x1400464f0
   140019889:	mov    QWORD PTR [rax],r9
   14001988c:	lea    r8,[rip+0x2cc75]        # 0x140046508
   140019893:	mov    QWORD PTR [rax+0x8],r8
   140019897:	mov    QWORD PTR [rax+0x18],rdi
   14001989b:	mov    QWORD PTR [rax+0x20],rdi
   14001989f:	mov    DWORD PTR [rax+0x28],edi
   1400198a2:	mov    QWORD PTR [rax+0x30],rdi
   1400198a6:	mov    BYTE PTR [rax+0x38],dil
   1400198aa:	add    rcx,0x150
   1400198b1:	mov    QWORD PTR [rsp+0x30],rcx
   1400198b6:	lea    rax,[rip+0x2d733]        # 0x140046ff0
   1400198bd:	mov    QWORD PTR [rcx],rax
   1400198c0:	mov    DWORD PTR [rcx+0x8],r10d
   1400198c4:	lea    rax,[rcx+0x10]
   1400198c8:	mov    QWORD PTR [rsp+0x38],rax
   1400198cd:	mov    QWORD PTR [rax],r11
   1400198d0:	mov    QWORD PTR [rax+0x8],rbx
   1400198d4:	mov    QWORD PTR [rax+0x10],rdi
   1400198d8:	mov    QWORD PTR [rax],r9
   1400198db:	mov    QWORD PTR [rax+0x8],r8
   1400198df:	mov    QWORD PTR [rax+0x18],rdi
   1400198e3:	mov    QWORD PTR [rax+0x20],rdi
   1400198e7:	mov    DWORD PTR [rax+0x28],edi
   1400198ea:	mov    QWORD PTR [rax+0x30],rdi
   1400198ee:	mov    BYTE PTR [rax+0x38],dil
   1400198f2:	mov    DWORD PTR [rcx+0x150],edi
   1400198f8:	mov    QWORD PTR [rcx+0x158],rdi
   1400198ff:	lea    rax,[rdx+0x2b0]
   140019906:	mov    QWORD PTR [rsp+0x30],rax
   14001990b:	mov    QWORD PTR [rax],rbx
   14001990e:	mov    QWORD PTR [rax+0x8],rdi
   140019912:	lea    rcx,[rip+0x2cc0f]        # 0x140046528
   140019919:	mov    QWORD PTR [rax],rcx
   14001991c:	mov    DWORD PTR [rax+0x10],edi
   14001991f:	lea    rax,[rdx+0x2c8]
   140019926:	mov    QWORD PTR [rsp+0x30],rax
   14001992b:	mov    QWORD PTR [rax],rbx
   14001992e:	mov    QWORD PTR [rax+0x8],rdi
   140019932:	mov    QWORD PTR [rax],rcx
   140019935:	mov    DWORD PTR [rax+0x10],edi
   140019938:	mov    QWORD PTR [rdx+0x2e0],rdi
   14001993f:	mov    QWORD PTR [rdx+0x2e8],rdi
   140019946:	mov    DWORD PTR [rdx+0x2f4],edi
   14001994c:	mov    rax,rdx
   14001994f:	mov    rbx,QWORD PTR [rsp+0x28]
   140019954:	add    rsp,0x10
   140019958:	pop    rdi
   140019959:	ret    
   14001995a:	int3   
   14001995b:	int3   
   14001995c:	mov    QWORD PTR [rsp+0x8],rcx
   140019961:	push   rbx
   140019962:	sub    rsp,0x30
   140019966:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001996f:	mov    rbx,rcx
   140019972:	lea    rax,[rip+0x2d55f]        # 0x140046ed8
   140019979:	mov    QWORD PTR [rcx],rax
   14001997c:	add    rcx,0x2c8
   140019983:	call   0x140015774
   140019988:	nop
   140019989:	lea    rcx,[rbx+0x2b0]
   140019990:	call   0x140015774
   140019995:	nop
   140019996:	lea    rcx,[rbx+0x150]
   14001999d:	mov    QWORD PTR [rsp+0x48],rcx
   1400199a2:	lea    rax,[rip+0x2d647]        # 0x140046ff0
   1400199a9:	mov    QWORD PTR [rcx],rax
   1400199ac:	add    rcx,0x10
   1400199b0:	call   0x140014ffc
   1400199b5:	nop
   1400199b6:	lea    rcx,[rbx+0x10]
   1400199ba:	add    rsp,0x30
   1400199be:	pop    rbx
   1400199bf:	jmp    0x140014ffc
   1400199c4:	mov    rax,rsp
   1400199c7:	push   rsi
   1400199c8:	push   rdi
   1400199c9:	push   r12
   1400199cb:	push   r14
   1400199cd:	push   r15
   1400199cf:	sub    rsp,0x50
   1400199d3:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400199db:	mov    QWORD PTR [rax+0x18],rbx
   1400199df:	mov    QWORD PTR [rax+0x20],rbp
   1400199e3:	mov    rbp,rcx
   1400199e6:	lea    rbx,[rcx+0x10]
   1400199ea:	mov    r12d,0x1
   1400199f0:	mov    DWORD PTR [rax-0x50],r12d
   1400199f4:	xor    r14d,r14d
   1400199f7:	mov    DWORD PTR [rax-0x58],r14d
   1400199fb:	mov    r9d,r12d
   1400199fe:	mov    r8d,0x4b8
   140019a04:	mov    rdx,QWORD PTR [rip+0x43215]        # 0x14005cc20
   140019a0b:	mov    rcx,rbx
   140019a0e:	call   0x1400150ac
   140019a13:	mov    rax,QWORD PTR [rbx]
   140019a16:	mov    rcx,rbx
   140019a19:	call   QWORD PTR [rax+0x8]
   140019a1c:	lea    rcx,[rax+0x400]
   140019a23:	mov    QWORD PTR [rbp+0x2e0],rcx
   140019a2a:	lea    rcx,[rax+0x440]
   140019a31:	mov    QWORD PTR [rbp+0x2e8],rcx
   140019a38:	mov    eax,DWORD PTR [rax+0x344]
   140019a3e:	mov    DWORD PTR [rbp+0x2f0],eax
   140019a44:	lea    rcx,[rbp+0x2b0]
   140019a4b:	mov    ebx,0x100002
   140019a50:	mov    r9d,ebx
   140019a53:	mov    rdx,QWORD PTR [rip+0x43216]        # 0x14005cc70
   140019a5a:	call   0x140015830
   140019a5f:	test   eax,eax
   140019a61:	jne    0x140019a6a
   140019a63:	mov    DWORD PTR [rbp+0x2f0],r14d
   140019a6a:	lea    rcx,[rbp+0x2c8]
   140019a71:	mov    r9d,ebx
   140019a74:	mov    rdx,QWORD PTR [rip+0x431fd]        # 0x14005cc78
   140019a7b:	call   0x140015830
   140019a80:	test   eax,eax
   140019a82:	jne    0x140019a8b
   140019a84:	mov    DWORD PTR [rbp+0x2f0],r14d
   140019a8b:	mov    QWORD PTR [rbp+0x2a8],rbp
   140019a92:	mov    r15d,0x400
   140019a98:	mov    DWORD PTR [rbp+0x2a0],r15d
   140019a9f:	lea    rbx,[rbp+0x160]
   140019aa6:	mov    eax,r14d
   140019aa9:	cmp    DWORD PTR [rbp+0x158],0x3
   140019ab0:	setne  al
   140019ab3:	mov    DWORD PTR [rsp+0x28],r12d
   140019ab8:	mov    DWORD PTR [rsp+0x20],eax
   140019abc:	mov    r9d,r12d
   140019abf:	mov    r8d,0x96000
   140019ac5:	mov    rdx,QWORD PTR [rip+0x43144]        # 0x14005cc10
   140019acc:	mov    rcx,rbx
   140019acf:	call   0x1400150ac
   140019ad4:	cmp    DWORD PTR [rbp+0x158],r12d
   140019adb:	jne    0x140019b81
   140019ae1:	mov    rax,QWORD PTR [rbx]
   140019ae4:	mov    rcx,rbx
   140019ae7:	call   QWORD PTR [rax+0x8]
   140019aea:	mov    QWORD PTR [rsp+0x80],rax
   140019af2:	mov    edx,r15d
   140019af5:	or     r8d,0xffffffff
   140019af9:	mov    ecx,DWORD PTR [rip+0x430c9]        # 0x14005cbc8
   140019aff:	mov    QWORD PTR [rsp+0x88],rax
   140019b07:	test   rax,rax
   140019b0a:	je     0x140019b29
   140019b0c:	mov    QWORD PTR [rax],r14
   140019b0f:	mov    DWORD PTR [rax+0x8],ecx
   140019b12:	add    ecx,r12d
   140019b15:	mov    DWORD PTR [rip+0x430ad],ecx        # 0x14005cbc8
   140019b1b:	mov    DWORD PTR [rax+0x10],r14d
   140019b1f:	mov    DWORD PTR [rax+0x14],r8d
   140019b23:	mov    DWORD PTR [rax+0x18],r8d
   140019b27:	jmp    0x140019b2c
   140019b29:	mov    rax,r14
   140019b2c:	add    rax,0x258
   140019b32:	mov    QWORD PTR [rsp+0x80],rax
   140019b3a:	sub    rdx,r12
   140019b3d:	jne    0x140019aff
   140019b3f:	mov    rsi,QWORD PTR [rbp+0x2a8]
   140019b46:	lea    rbx,[rsi+0x160]
   140019b4d:	mov    rax,QWORD PTR [rbx]
   140019b50:	mov    rcx,rbx
   140019b53:	call   QWORD PTR [rax+0x8]
   140019b56:	mov    rdi,rax
   140019b59:	mov    rdx,QWORD PTR [rbx]
   140019b5c:	mov    rcx,rbx
   140019b5f:	call   QWORD PTR [rdx+0x8]
   140019b62:	lea    rdx,[r14+rax*1]
   140019b66:	mov    r8,rdi
   140019b69:	mov    rcx,QWORD PTR [rsi+0x2e0]
   140019b70:	call   0x14002324c
   140019b75:	lea    r14,[r14+0x258]
   140019b7c:	sub    r15,r12
   140019b7f:	jne    0x140019b3f
   140019b81:	mov    DWORD PTR [rbp+0x2f4],r12d
   140019b88:	lea    r11,[rsp+0x50]
   140019b8d:	mov    rbx,QWORD PTR [r11+0x40]
   140019b91:	mov    rbp,QWORD PTR [r11+0x48]
   140019b95:	mov    rsp,r11
   140019b98:	pop    r15
   140019b9a:	pop    r14
   140019b9c:	pop    r12
   140019b9e:	pop    rdi
   140019b9f:	pop    rsi
   140019ba0:	ret    
   140019ba1:	int3   
   140019ba2:	int3   
   140019ba3:	int3   
   140019ba4:	mov    QWORD PTR [rsp+0x8],rbx
   140019ba9:	push   rdi
   140019baa:	sub    rsp,0x20
   140019bae:	mov    rbx,rcx
   140019bb1:	add    rcx,0x160
   140019bb8:	mov    rdi,rdx
   140019bbb:	mov    rax,QWORD PTR [rcx]
   140019bbe:	call   QWORD PTR [rax+0x8]
   140019bc1:	mov    rcx,QWORD PTR [rbx+0x2e0]
   140019bc8:	mov    rdx,rax
   140019bcb:	call   0x140023298
   140019bd0:	test   rax,rax
   140019bd3:	je     0x140019bdf
   140019bd5:	mov    eax,DWORD PTR [rax+0x8]
   140019bd8:	mov    DWORD PTR [rdi],eax
   140019bda:	mov    eax,0x1
   140019bdf:	mov    rbx,QWORD PTR [rsp+0x30]
   140019be4:	add    rsp,0x20
   140019be8:	pop    rdi
   140019be9:	ret    
   140019bea:	int3   
   140019beb:	int3   
   140019bec:	mov    QWORD PTR [rsp+0x8],rbx
   140019bf1:	mov    QWORD PTR [rsp+0x10],rbp
   140019bf6:	mov    QWORD PTR [rsp+0x18],rsi
   140019bfb:	push   rdi
   140019bfc:	sub    rsp,0x20
   140019c00:	lea    rbx,[rcx+0x160]
   140019c07:	mov    rbp,rcx
   140019c0a:	mov    esi,edx
   140019c0c:	mov    rax,QWORD PTR [rbx]
   140019c0f:	mov    rcx,rbx
   140019c12:	call   QWORD PTR [rax+0x8]
   140019c15:	mov    r8,QWORD PTR [rbx]
   140019c18:	mov    rcx,rbx
   140019c1b:	mov    rdi,rax
   140019c1e:	call   QWORD PTR [r8+0x8]
   140019c22:	mov    rcx,QWORD PTR [rbp+0x2e8]
   140019c29:	mov    edx,esi
   140019c2b:	mov    r8,rdi
   140019c2e:	imul   rdx,rdx,0x258
   140019c35:	add    rdx,rax
   140019c38:	mov    rbx,QWORD PTR [rsp+0x30]
   140019c3d:	mov    rbp,QWORD PTR [rsp+0x38]
   140019c42:	mov    rsi,QWORD PTR [rsp+0x40]
   140019c47:	add    rsp,0x20
   140019c4b:	pop    rdi
   140019c4c:	jmp    0x14002324c
   140019c51:	int3   
   140019c52:	int3   
   140019c53:	int3   
   140019c54:	mov    QWORD PTR [rsp+0x18],rbx
   140019c59:	mov    QWORD PTR [rsp+0x20],rbp
   140019c5e:	push   rsi
   140019c5f:	push   rdi
   140019c60:	push   r12
   140019c62:	push   r13
   140019c64:	push   r14
   140019c66:	sub    rsp,0x20
   140019c6a:	and    DWORD PTR [rsp+0x58],0x0
   140019c6f:	mov    r14,r9
   140019c72:	mov    rbp,r8
   140019c75:	mov    edi,edx
   140019c77:	mov    rbx,rcx
   140019c7a:	lea    rdx,[rsp+0x58]
   140019c7f:	mov    rcx,rbx
   140019c82:	call   0x140019ba4
   140019c87:	test   eax,eax
   140019c89:	je     0x140019c7a
   140019c8b:	lea    rcx,[rbx+0x160]
   140019c92:	mov    rax,QWORD PTR [rcx]
   140019c95:	call   QWORD PTR [rax+0x8]
   140019c98:	mov    esi,DWORD PTR [rsp+0x58]
   140019c9c:	or     r13d,0xffffffff
   140019ca0:	mov    r12d,0x1
   140019ca6:	imul   rsi,rsi,0x258
   140019cad:	add    rsi,rax
   140019cb0:	cmp    BYTE PTR [rip+0x43761],0x0        # 0x14005d418
   140019cb7:	mov    DWORD PTR [rsi+0x10],r12d
   140019cbb:	mov    DWORD PTR [rsi+0x14],r13d
   140019cbf:	mov    DWORD PTR [rsi+0x18],r13d
   140019cc3:	mov    DWORD PTR [rsi+0x1c],r13d
   140019cc7:	mov    DWORD PTR [rsi+0x20],r13d
   140019ccb:	mov    DWORD PTR [rsi+0x24],edi
   140019cce:	jne    0x140019dc0
   140019cd4:	mov    eax,DWORD PTR [rip+0x42df2]        # 0x14005cacc
   140019cda:	mov    BYTE PTR [rip+0x43737],r12b        # 0x14005d418
   140019ce1:	test   eax,eax
   140019ce3:	jne    0x140019cf3
   140019ce5:	call   0x140012b10
   140019cea:	mov    eax,r12d
   140019ced:	mov    DWORD PTR [rip+0x42dd9],eax        # 0x14005cacc
   140019cf3:	mov    edx,DWORD PTR [rip+0x42dbf]        # 0x14005cab8
   140019cf9:	mov    ecx,DWORD PTR [rip+0x42ea9]        # 0x14005cba8
   140019cff:	test   edx,edx
   140019d01:	jne    0x140019d2d
   140019d03:	mov    DWORD PTR [rip+0x42db3],ecx        # 0x14005cabc
   140019d09:	test   ecx,ecx
   140019d0b:	jne    0x140019d24
   140019d0d:	call   0x140012e80
   140019d12:	mov    ecx,DWORD PTR [rip+0x42e90]        # 0x14005cba8
   140019d18:	mov    DWORD PTR [rip+0x42da6],eax        # 0x14005cac4
   140019d1e:	mov    eax,DWORD PTR [rip+0x42da8]        # 0x14005cacc
   140019d24:	mov    edx,r12d
   140019d27:	mov    DWORD PTR [rip+0x42d8b],edx        # 0x14005cab8
   140019d2d:	cmp    DWORD PTR [rip+0x42d88],0x0        # 0x14005cabc
   140019d34:	jne    0x140019d83
   140019d36:	test   eax,eax
   140019d38:	jne    0x140019d54
   140019d3a:	call   0x140012b10
   140019d3f:	mov    edx,DWORD PTR [rip+0x42d73]        # 0x14005cab8
   140019d45:	mov    ecx,DWORD PTR [rip+0x42e5d]        # 0x14005cba8
   140019d4b:	mov    eax,r12d
   140019d4e:	mov    DWORD PTR [rip+0x42d78],eax        # 0x14005cacc
   140019d54:	test   edx,edx
   140019d56:	jne    0x140019d7a
   140019d58:	mov    DWORD PTR [rip+0x42d5e],ecx        # 0x14005cabc
   140019d5e:	test   ecx,ecx
   140019d60:	jne    0x140019d73
   140019d62:	call   0x140012e80
   140019d67:	mov    DWORD PTR [rip+0x42d57],eax        # 0x14005cac4
   140019d6d:	mov    eax,DWORD PTR [rip+0x42d59]        # 0x14005cacc
   140019d73:	mov    DWORD PTR [rip+0x42d3e],r12d        # 0x14005cab8
   140019d7a:	cmp    DWORD PTR [rip+0x42d43],0x0        # 0x14005cac4
   140019d81:	je     0x140019dc0
   140019d83:	test   eax,eax
   140019d85:	jne    0x140019d93
   140019d87:	call   0x140012b10
   140019d8c:	mov    DWORD PTR [rip+0x42d39],r12d        # 0x14005cacc
   140019d93:	cmp    WORD PTR [rip+0x42d15],r12w        # 0x14005cab0
   140019d9b:	jle    0x140019dc0
   140019d9d:	lea    rcx,[rip+0x436b4]        # 0x14005d458
   140019da4:	call   QWORD PTR [rip+0x27866]        # 0x140041610
   140019daa:	test   eax,eax
   140019dac:	je     0x140019dc0
   140019dae:	mov    BYTE PTR [rip+0x43664],r12b        # 0x14005d419
   140019db5:	call   0x140015d14
   140019dba:	mov    DWORD PTR [rip+0x4365c],eax        # 0x14005d41c
   140019dc0:	xor    edi,edi
   140019dc2:	cmp    BYTE PTR [rip+0x43650],dil        # 0x14005d419
   140019dc9:	je     0x140019e1d
   140019dcb:	lea    rcx,[rsp+0x50]
   140019dd0:	call   QWORD PTR [rip+0x276a2]        # 0x140041478
   140019dd6:	test   eax,eax
   140019dd8:	je     0x140019e29
   140019dda:	mov    eax,DWORD PTR [rip+0x4363c]        # 0x14005d41c
   140019de0:	xorps  xmm2,xmm2
   140019de3:	xorps  xmm0,xmm0
   140019de6:	cvtsi2sd xmm2,QWORD PTR [rsp+0x50]
   140019ded:	cvtsi2sd xmm0,QWORD PTR [rip+0x43662]        # 0x14005d458
   140019df6:	mulsd  xmm2,QWORD PTR [rip+0x2e45a]        # 0x140048258
   140019dfe:	divsd  xmm2,xmm0
   140019e02:	xorps  xmm0,xmm0
   140019e05:	cvtsi2sd xmm0,rax
   140019e0a:	mulsd  xmm2,QWORD PTR [rip+0x2e446]        # 0x140048258
   140019e12:	mulsd  xmm2,xmm0
   140019e16:	cvttsd2si rdi,xmm2
   140019e1b:	jmp    0x140019e29
   140019e1d:	rdtsc  
   140019e1f:	shl    rdx,0x20
   140019e23:	or     rax,rdx
   140019e26:	mov    rdi,rax
   140019e29:	lea    rcx,[rsi+0x30]
   140019e2d:	mov    r8,rbp
   140019e30:	mov    edx,0x100
   140019e35:	mov    QWORD PTR [rsi+0x28],rdi
   140019e39:	call   0x140001004
   140019e3e:	test   r14,r14
   140019e41:	je     0x140019e4d
   140019e43:	xor    ecx,ecx
   140019e45:	test   eax,eax
   140019e47:	sets   cl
   140019e4a:	mov    DWORD PTR [r14],ecx
   140019e4d:	cmp    DWORD PTR [rbx+0x2f0],0x0
   140019e54:	je     0x140019e63
   140019e56:	mov    rcx,QWORD PTR [rbx+0x2d0]
   140019e5d:	call   QWORD PTR [rip+0x27825]        # 0x140041688
   140019e63:	mov    edx,DWORD PTR [rsp+0x58]
   140019e67:	mov    rcx,rbx
   140019e6a:	call   0x140019bec
   140019e6f:	cmp    DWORD PTR [rbx+0x2f0],0x0
   140019e76:	je     0x140019e97
   140019e78:	mov    rcx,QWORD PTR [rbx+0x2b8]
   140019e7f:	call   QWORD PTR [rip+0x277f3]        # 0x140041678
   140019e85:	lea    rcx,[rbx+0x2c8]
   140019e8c:	xor    r8d,r8d
   140019e8f:	mov    edx,r13d
   140019e92:	call   0x14001585c
   140019e97:	mov    rbx,QWORD PTR [rsp+0x60]
   140019e9c:	mov    rbp,QWORD PTR [rsp+0x68]
   140019ea1:	add    rsp,0x20
   140019ea5:	pop    r14
   140019ea7:	pop    r13
   140019ea9:	pop    r12
   140019eab:	pop    rdi
   140019eac:	pop    rsi
   140019ead:	ret    
   140019eae:	int3   
   140019eaf:	int3   
   140019eb0:	add    rcx,0x150
   140019eb7:	mov    rax,QWORD PTR [rcx]
   140019eba:	rex.W jmp QWORD PTR [rax]
   140019ebd:	int3   
   140019ebe:	int3   
   140019ebf:	int3   
   140019ec0:	add    rcx,0x150
   140019ec7:	mov    rax,QWORD PTR [rcx]
   140019eca:	rex.W jmp QWORD PTR [rax+0x8]
   140019ece:	int3   
   140019ecf:	int3   
   140019ed0:	mov    rax,rsp
   140019ed3:	push   rdi
   140019ed4:	sub    rsp,0x270
   140019edb:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140019ee4:	mov    QWORD PTR [rax+0x18],rbx
   140019ee8:	mov    QWORD PTR [rax+0x20],rsi
   140019eec:	mov    rax,QWORD PTR [rip+0x3f195]        # 0x140059088
   140019ef3:	xor    rax,rsp
   140019ef6:	mov    QWORD PTR [rsp+0x260],rax
   140019efe:	mov    rdi,rdx
   140019f01:	mov    rsi,rcx
   140019f04:	mov    QWORD PTR [rsp+0x30],rcx
   140019f09:	lea    rax,[rip+0x2cfe0]        # 0x140046ef0
   140019f10:	mov    QWORD PTR [rcx],rax
   140019f13:	lea    rbx,[rcx+0x8]
   140019f17:	mov    QWORD PTR [rsp+0x20],rbx
   140019f1c:	lea    rax,[rip+0x2c30d]        # 0x140046230
   140019f23:	mov    QWORD PTR [rbx],rax
   140019f26:	and    QWORD PTR [rbx+0x8],0x0
   140019f2b:	lea    rax,[rip+0x2dd7e]        # 0x140047cb0
   140019f32:	mov    QWORD PTR [rbx],rax
   140019f35:	mov    r8,rdx
   140019f38:	xor    edx,edx
   140019f3a:	cmp    DWORD PTR [rsp+0x2a0],0x1
   140019f42:	jne    0x140019f88
   140019f44:	xor    ecx,ecx
   140019f46:	call   QWORD PTR [rip+0x2736c]        # 0x1400412b8
   140019f4c:	mov    QWORD PTR [rbx+0x8],rax
   140019f50:	test   rax,rax
   140019f53:	je     0x140019f5d
   140019f55:	mov    rcx,rbx
   140019f58:	call   0x14002586c
   140019f5d:	test   eax,eax
   140019f5f:	jne    0x140019fc4
   140019f61:	call   QWORD PTR [rip+0x27471]        # 0x1400413d8
   140019f67:	mov    edx,eax
   140019f69:	mov    r8,rdi
   140019f6c:	lea    rcx,[rsp+0x40]
   140019f71:	call   0x140010930
   140019f76:	lea    rdx,[rip+0x3c25b]        # 0x1400561d8
   140019f7d:	lea    rcx,[rsp+0x40]
   140019f82:	call   0x140029fe8
   140019f87:	int3   
   140019f88:	mov    ecx,0x100001
   140019f8d:	call   QWORD PTR [rip+0x27385]        # 0x140041318
   140019f93:	mov    QWORD PTR [rbx+0x8],rax
   140019f97:	test   rax,rax
   140019f9a:	jne    0x140019fc4
   140019f9c:	and    DWORD PTR [rsp+0x20],eax
   140019fa0:	mov    DWORD PTR [rsp+0x24],0xe1232725
   140019fa8:	mov    rax,QWORD PTR [rsp+0x20]
   140019fad:	mov    QWORD PTR [rsp+0x20],rax
   140019fb2:	lea    rdx,[rip+0x3c2ef]        # 0x1400562a8
   140019fb9:	lea    rcx,[rsp+0x20]
   140019fbe:	call   0x140029fe8
   140019fc3:	nop
   140019fc4:	mov    rax,rsi
   140019fc7:	mov    rcx,QWORD PTR [rsp+0x260]
   140019fcf:	xor    rcx,rsp
   140019fd2:	call   0x1400265a0
   140019fd7:	lea    r11,[rsp+0x270]
   140019fdf:	mov    rbx,QWORD PTR [r11+0x20]
   140019fe3:	mov    rsi,QWORD PTR [r11+0x28]
   140019fe7:	mov    rsp,r11
   140019fea:	pop    rdi
   140019feb:	ret    
   140019fec:	rex push rbx
   140019fee:	sub    rsp,0x20
   140019ff2:	mov    rcx,QWORD PTR [rcx+0x10]
   140019ff6:	xor    ebx,ebx
   140019ff8:	test   rcx,rcx
   140019ffb:	je     0x14001a00e
   140019ffd:	or     edx,0xffffffff
   14001a000:	call   QWORD PTR [rip+0x27372]        # 0x140041378
   14001a006:	test   eax,0xffffff7f
   14001a00b:	sete   bl
   14001a00e:	mov    eax,ebx
   14001a010:	add    rsp,0x20
   14001a014:	pop    rbx
   14001a015:	ret    
   14001a016:	int3   
   14001a017:	int3   
   14001a018:	test   r8b,0x1
   14001a01c:	jne    0x14001a024
   14001a01e:	mov    eax,0xc
   14001a023:	ret    
   14001a024:	add    rcx,0x8
   14001a028:	mov    r8d,0x100001
   14001a02e:	mov    rax,QWORD PTR [rcx]
   14001a031:	rex.W jmp QWORD PTR [rax]
   14001a034:	add    rcx,0x8
   14001a038:	mov    rax,QWORD PTR [rcx]
   14001a03b:	rex.W jmp QWORD PTR [rax+0x8]
   14001a03f:	int3   
   14001a040:	mov    QWORD PTR [rsp+0x8],rcx
   14001a045:	sub    rsp,0x18
   14001a049:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   14001a051:	mov    rdx,rcx
   14001a054:	lea    rax,[rip+0x2cead]        # 0x140046f08
   14001a05b:	mov    QWORD PTR [rcx],rax
   14001a05e:	mov    DWORD PTR [rcx+0x8],0x3
   14001a065:	xor    r11d,r11d
   14001a068:	mov    QWORD PTR [rcx+0x10],r11
   14001a06c:	lea    rax,[rcx+0x18]
   14001a070:	mov    QWORD PTR [rsp+0x30],rax
   14001a075:	lea    r10,[rip+0x2c3f4]        # 0x140046470
   14001a07c:	mov    QWORD PTR [rax],r10
   14001a07f:	lea    r9,[rip+0x2c1aa]        # 0x140046230
   14001a086:	mov    QWORD PTR [rax+0x8],r9
   14001a08a:	mov    QWORD PTR [rax+0x10],r11
   14001a08e:	lea    r8,[rip+0x2c45b]        # 0x1400464f0
   14001a095:	mov    QWORD PTR [rax],r8
   14001a098:	lea    rcx,[rip+0x2c469]        # 0x140046508
   14001a09f:	mov    QWORD PTR [rax+0x8],rcx
   14001a0a3:	mov    QWORD PTR [rax+0x18],r11
   14001a0a7:	mov    QWORD PTR [rax+0x20],r11
   14001a0ab:	mov    DWORD PTR [rax+0x28],r11d
   14001a0af:	mov    QWORD PTR [rax+0x30],r11
   14001a0b3:	mov    BYTE PTR [rax+0x38],r11b
   14001a0b7:	lea    rax,[rdx+0x158]
   14001a0be:	mov    QWORD PTR [rsp+0x30],rax
   14001a0c3:	mov    QWORD PTR [rax],r10
   14001a0c6:	mov    QWORD PTR [rax+0x8],r9
   14001a0ca:	mov    QWORD PTR [rax+0x10],r11
   14001a0ce:	mov    QWORD PTR [rax],r8
   14001a0d1:	mov    QWORD PTR [rax+0x8],rcx
   14001a0d5:	mov    QWORD PTR [rax+0x18],r11
   14001a0d9:	mov    QWORD PTR [rax+0x20],r11
   14001a0dd:	mov    DWORD PTR [rax+0x28],r11d
   14001a0e1:	mov    QWORD PTR [rax+0x30],r11
   14001a0e5:	mov    BYTE PTR [rax+0x38],r11b
   14001a0e9:	mov    QWORD PTR [rdx+0x298],r11
   14001a0f0:	lea    rcx,[rdx+0x2a0]
   14001a0f7:	mov    QWORD PTR [rsp+0x30],rcx
   14001a0fc:	lea    rax,[rip+0x2c1a5]        # 0x1400462a8
   14001a103:	mov    QWORD PTR [rcx],rax
   14001a106:	lea    rax,[rip+0x2cefb]        # 0x140047008
   14001a10d:	mov    QWORD PTR [rcx],rax
   14001a110:	mov    DWORD PTR [rcx+0x28],r11d
   14001a114:	mov    DWORD PTR [rcx+0x2c],r11d
   14001a118:	mov    QWORD PTR [rcx+0x20],r11
   14001a11c:	mov    DWORD PTR [rcx+0x30],0xffffffff
   14001a123:	lea    rax,[rcx+0x8]
   14001a127:	mov    QWORD PTR [rax+0x8],rax
   14001a12b:	mov    QWORD PTR [rax],rax
   14001a12e:	mov    DWORD PTR [rcx+0x18],r11d
   14001a132:	mov    QWORD PTR [rdx+0x2d8],r11
   14001a139:	mov    rax,rdx
   14001a13c:	add    rsp,0x18
   14001a140:	ret    
   14001a141:	int3   
   14001a142:	int3   
   14001a143:	int3   
   14001a144:	mov    r11,rsp
   14001a147:	mov    QWORD PTR [r11+0x8],rcx
   14001a14b:	push   rdi
   14001a14c:	sub    rsp,0x30
   14001a150:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   14001a158:	mov    QWORD PTR [r11+0x18],rbx
   14001a15c:	mov    rbx,rcx
   14001a15f:	lea    rax,[rip+0x2cda2]        # 0x140046f08
   14001a166:	mov    QWORD PTR [rcx],rax
   14001a169:	and    QWORD PTR [rcx+0x10],0x0
   14001a16e:	mov    rdi,QWORD PTR [rcx+0x298]
   14001a175:	mov    QWORD PTR [r11+0x10],rdi
   14001a179:	test   rdi,rdi
   14001a17c:	je     0x14001a199
   14001a17e:	lea    rax,[rip+0x2cd6b]        # 0x140046ef0
   14001a185:	mov    QWORD PTR [rdi],rax
   14001a188:	lea    rcx,[rdi+0x8]
   14001a18c:	call   0x14002582c
   14001a191:	mov    rcx,rdi
   14001a194:	call   0x14002657c
   14001a199:	and    QWORD PTR [rbx+0x298],0x0
   14001a1a1:	lea    rcx,[rbx+0x2a0]
   14001a1a8:	call   0x14001b9d8
   14001a1ad:	nop
   14001a1ae:	lea    rcx,[rbx+0x158]
   14001a1b5:	call   0x140014ffc
   14001a1ba:	nop
   14001a1bb:	lea    rcx,[rbx+0x18]
   14001a1bf:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a1c4:	add    rsp,0x30
   14001a1c8:	pop    rdi
   14001a1c9:	jmp    0x140014ffc
   14001a1ce:	int3   
   14001a1cf:	int3   
   14001a1d0:	mov    rax,rsp
   14001a1d3:	push   rsi
   14001a1d4:	push   rdi
   14001a1d5:	push   r14
   14001a1d7:	sub    rsp,0x50
   14001a1db:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001a1e3:	mov    QWORD PTR [rax+0x10],rbx
   14001a1e7:	mov    QWORD PTR [rax+0x18],rbp
   14001a1eb:	mov    rsi,rcx
   14001a1ee:	mov    r14d,0x1
   14001a1f4:	mov    eax,DWORD PTR [rip+0x428d2]        # 0x14005cacc
   14001a1fa:	xor    edi,edi
   14001a1fc:	test   eax,eax
   14001a1fe:	jne    0x14001a20e
   14001a200:	call   0x140012b10
   14001a205:	mov    eax,r14d
   14001a208:	mov    DWORD PTR [rip+0x428be],eax        # 0x14005cacc
   14001a20e:	mov    ecx,DWORD PTR [rip+0x4295c]        # 0x14005cb70
   14001a214:	mov    ebx,ecx
   14001a216:	test   eax,eax
   14001a218:	jne    0x14001a22c
   14001a21a:	call   0x140012b10
   14001a21f:	mov    DWORD PTR [rip+0x428a6],r14d        # 0x14005cacc
   14001a226:	mov    ecx,DWORD PTR [rip+0x42944]        # 0x14005cb70
   14001a22c:	lea    ebp,[rcx-0x1]
   14001a22f:	not    ebp
   14001a231:	lea    eax,[rbx+0x4d27]
   14001a237:	and    ebp,eax
   14001a239:	lea    rbx,[rsi+0x158]
   14001a240:	mov    DWORD PTR [rsp+0x28],r14d
   14001a245:	mov    DWORD PTR [rsp+0x20],edi
   14001a249:	mov    r9d,r14d
   14001a24c:	mov    r8d,0x4b8
   14001a252:	mov    rdx,QWORD PTR [rip+0x429c7]        # 0x14005cc20
   14001a259:	mov    rcx,rbx
   14001a25c:	call   0x1400150ac
   14001a261:	mov    rax,QWORD PTR [rbx]
   14001a264:	mov    rcx,rbx
   14001a267:	call   QWORD PTR [rax+0x8]
   14001a26a:	mov    ecx,0x18
   14001a26f:	call   0x140026da8
   14001a274:	mov    QWORD PTR [rsp+0x70],rax
   14001a279:	test   rax,rax
   14001a27c:	je     0x14001a296
   14001a27e:	mov    ecx,DWORD PTR [rsi+0x8]
   14001a281:	mov    DWORD PTR [rsp+0x20],ecx
   14001a285:	mov    rdx,QWORD PTR [rip+0x429bc]        # 0x14005cc48
   14001a28c:	mov    rcx,rax
   14001a28f:	call   0x140019ed0
   14001a294:	jmp    0x14001a299
   14001a296:	mov    rax,rdi
   14001a299:	mov    QWORD PTR [rsi+0x298],rax
   14001a2a0:	lea    rbx,[rsi+0x18]
   14001a2a4:	cmp    DWORD PTR [rsi+0x8],r14d
   14001a2a8:	sete   dil
   14001a2ac:	mov    DWORD PTR [rsp+0x28],r14d
   14001a2b1:	mov    DWORD PTR [rsp+0x20],edi
   14001a2b5:	mov    r9d,r14d
   14001a2b8:	mov    r8d,ebp
   14001a2bb:	mov    rdx,QWORD PTR [rip+0x42966]        # 0x14005cc28
   14001a2c2:	mov    rcx,rbx
   14001a2c5:	call   0x1400150ac
   14001a2ca:	mov    rax,QWORD PTR [rbx]
   14001a2cd:	mov    rcx,rbx
   14001a2d0:	call   QWORD PTR [rax+0x8]
   14001a2d3:	mov    QWORD PTR [rsi+0x10],rax
   14001a2d7:	lea    r11,[rsp+0x50]
   14001a2dc:	mov    rbx,QWORD PTR [r11+0x28]
   14001a2e0:	mov    rbp,QWORD PTR [r11+0x30]
   14001a2e4:	mov    rsp,r11
   14001a2e7:	pop    r14
   14001a2e9:	pop    rdi
   14001a2ea:	pop    rsi
   14001a2eb:	ret    
   14001a2ec:	mov    QWORD PTR [rsp+0x8],rbx
   14001a2f1:	push   rdi
   14001a2f2:	sub    rsp,0x40
   14001a2f6:	mov    rbx,rcx
   14001a2f9:	call   0x14001a1d0
   14001a2fe:	lea    rdi,[rbx+0x2a0]
   14001a305:	jmp    0x14001a327
   14001a307:	mov    r9,QWORD PTR [rsp+0x38]
   14001a30c:	mov    r8d,DWORD PTR [rsp+0x34]
   14001a311:	mov    edx,DWORD PTR [rsp+0x30]
   14001a315:	mov    rcx,rbx
   14001a318:	call   0x14001a34c
   14001a31d:	lea    rcx,[rsp+0x30]
   14001a322:	call   0x14001b990
   14001a327:	lea    rdx,[rsp+0x30]
   14001a32c:	mov    rcx,rdi
   14001a32f:	call   0x14001bdd8
   14001a334:	test   eax,eax
   14001a336:	jne    0x14001a307
   14001a338:	lock inc DWORD PTR [rbx+0x2d8]
   14001a33f:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a344:	add    rsp,0x40
   14001a348:	pop    rdi
   14001a349:	ret    
   14001a34a:	int3   
   14001a34b:	int3   
   14001a34c:	mov    rax,rsp
   14001a34f:	mov    QWORD PTR [rax+0x8],rbx
   14001a353:	mov    QWORD PTR [rax+0x10],rbp
   14001a357:	mov    QWORD PTR [rax+0x18],rsi
   14001a35b:	mov    QWORD PTR [rax+0x20],rdi
   14001a35f:	push   r12
   14001a361:	push   r14
   14001a363:	push   r15
   14001a365:	sub    rsp,0x20
   14001a369:	mov    rbx,rcx
   14001a36c:	mov    rcx,QWORD PTR [rcx+0x298]
   14001a373:	xor    r12d,r12d
   14001a376:	mov    r14,r9
   14001a379:	mov    edi,r8d
   14001a37c:	mov    esi,edx
   14001a37e:	test   rcx,rcx
   14001a381:	je     0x14001a43b
   14001a387:	mov    rax,QWORD PTR [rbx+0x10]
   14001a38b:	cmp    DWORD PTR [rax+0x9f4],0x20
   14001a392:	je     0x14001a447
   14001a398:	call   0x140019fec
   14001a39d:	mov    rdx,QWORD PTR [rbx+0x10]
   14001a3a1:	mov    ebp,r12d
   14001a3a4:	mov    eax,DWORD PTR [rdx+0x9f4]
   14001a3aa:	lea    r15,[rdx+0x9f8]
   14001a3b1:	lea    rcx,[rax+rax*2]
   14001a3b5:	shl    rcx,0x7
   14001a3b9:	add    r15,rcx
   14001a3bc:	mov    DWORD PTR [r15],esi
   14001a3bf:	mov    DWORD PTR [r15+0x4],edi
   14001a3c3:	lea    rsi,[r15+0x8]
   14001a3c7:	test   edi,edi
   14001a3c9:	je     0x14001a417
   14001a3cb:	mov    rax,rsi
   14001a3ce:	mov    edx,0xbc
   14001a3d3:	sub    rax,r15
   14001a3d6:	sub    rax,0x8
   14001a3da:	sar    rax,1
   14001a3dd:	sub    rdx,rax
   14001a3e0:	cmp    edi,0x1
   14001a3e3:	jbe    0x14001a3ec
   14001a3e5:	mov    eax,edi
   14001a3e7:	sub    eax,ebp
   14001a3e9:	sub    rdx,rax
   14001a3ec:	mov    r8,QWORD PTR [r14]
   14001a3ef:	mov    rcx,rsi
   14001a3f2:	call   0x140001004
   14001a3f7:	or     rax,0xffffffffffffffff
   14001a3fb:	inc    rax
   14001a3fe:	cmp    WORD PTR [rsi+rax*2],r12w
   14001a403:	jne    0x14001a3fb
   14001a405:	lea    rsi,[rsi+rax*2]
   14001a409:	inc    ebp
   14001a40b:	add    r14,0x8
   14001a40f:	add    rsi,0x2
   14001a413:	cmp    ebp,edi
   14001a415:	jb     0x14001a3cb
   14001a417:	mov    rax,QWORD PTR [rbx+0x10]
   14001a41b:	inc    DWORD PTR [rax+0x9f4]
   14001a421:	lock inc DWORD PTR [rbx+0x2d8]
   14001a428:	mov    rcx,QWORD PTR [rbx+0x298]
   14001a42f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a433:	call   QWORD PTR [rip+0x26e47]        # 0x140041280
   14001a439:	jmp    0x14001a447
   14001a43b:	lea    rcx,[rbx+0x2a0]
   14001a442:	mov    rax,QWORD PTR [rcx]
   14001a445:	call   QWORD PTR [rax]
   14001a447:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a44c:	mov    rbp,QWORD PTR [rsp+0x48]
   14001a451:	mov    rsi,QWORD PTR [rsp+0x50]
   14001a456:	mov    rdi,QWORD PTR [rsp+0x58]
   14001a45b:	add    rsp,0x20
   14001a45f:	pop    r15
   14001a461:	pop    r14
   14001a463:	pop    r12
   14001a465:	ret    
   14001a466:	int3   
   14001a467:	int3   
   14001a468:	mov    QWORD PTR [rsp+0x8],rbx
   14001a46d:	mov    QWORD PTR [rsp+0x10],rsi
   14001a472:	push   rdi
   14001a473:	sub    rsp,0x20
   14001a477:	mov    ebx,r8d
   14001a47a:	mov    rdi,rdx
   14001a47d:	mov    rsi,rcx
   14001a480:	test   r8b,0x1
   14001a484:	jne    0x14001a48d
   14001a486:	mov    eax,0xc
   14001a48b:	jmp    0x14001a4b2
   14001a48d:	add    rcx,0x20
   14001a491:	mov    r8d,0x6
   14001a497:	mov    rax,QWORD PTR [rcx]
   14001a49a:	call   QWORD PTR [rax]
   14001a49c:	test   eax,eax
   14001a49e:	jne    0x14001a4b2
   14001a4a0:	mov    rcx,QWORD PTR [rsi+0x298]
   14001a4a7:	mov    r8d,ebx
   14001a4aa:	mov    rdx,rdi
   14001a4ad:	mov    rax,QWORD PTR [rcx]
   14001a4b0:	call   QWORD PTR [rax]
   14001a4b2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a4b7:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a4bc:	add    rsp,0x20
   14001a4c0:	pop    rdi
   14001a4c1:	ret    
   14001a4c2:	int3   
   14001a4c3:	int3   
   14001a4c4:	mov    QWORD PTR [rsp+0x10],rbx
   14001a4c9:	push   rdi
   14001a4ca:	sub    rsp,0x20
   14001a4ce:	mov    rbx,rcx
   14001a4d1:	add    rcx,0x20
   14001a4d5:	mov    rdi,rdx
   14001a4d8:	mov    rax,QWORD PTR [rcx]
   14001a4db:	call   QWORD PTR [rax+0x8]
   14001a4de:	mov    rcx,QWORD PTR [rbx+0x298]
   14001a4e5:	mov    rdx,rdi
   14001a4e8:	mov    DWORD PTR [rsp+0x30],eax
   14001a4ec:	mov    rax,QWORD PTR [rcx]
   14001a4ef:	call   QWORD PTR [rax+0x8]
   14001a4f2:	lea    rcx,[rsp+0x30]
   14001a4f7:	mov    DWORD PTR [rsp+0x34],eax
   14001a4fb:	xor    eax,eax
   14001a4fd:	mov    edx,DWORD PTR [rcx]
   14001a4ff:	test   edx,edx
   14001a501:	jne    0x14001a512
   14001a503:	inc    eax
   14001a505:	add    rcx,0x4
   14001a509:	cmp    eax,0x2
   14001a50c:	jb     0x14001a4fd
   14001a50e:	xor    eax,eax
   14001a510:	jmp    0x14001a514
   14001a512:	mov    eax,edx
   14001a514:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a519:	add    rsp,0x20
   14001a51d:	pop    rdi
   14001a51e:	ret    
   14001a51f:	int3   
   14001a520:	mov    QWORD PTR [rsp+0x18],r8
   14001a525:	mov    QWORD PTR [rsp+0x20],r9
   14001a52a:	push   rbx
   14001a52b:	push   rbp
   14001a52c:	push   rsi
   14001a52d:	push   rdi
   14001a52e:	sub    rsp,0x28
   14001a532:	xor    ebp,ebp
   14001a534:	lea    rax,[rdx-0x1]
   14001a538:	mov    rsi,rcx
   14001a53b:	cmp    rax,0x7ffffffe
   14001a541:	mov    edi,ebp
   14001a543:	mov    ecx,0x80070057
   14001a548:	cmova  edi,ecx
   14001a54b:	test   edi,edi
   14001a54d:	js     0x14001a583
   14001a54f:	lea    rbx,[rdx-0x1]
   14001a553:	lea    r9,[rsp+0x68]
   14001a558:	mov    rcx,rsi
   14001a55b:	mov    rdx,rbx
   14001a55e:	mov    edi,ebp
   14001a560:	call   0x140027674
   14001a565:	test   eax,eax
   14001a567:	js     0x14001a578
   14001a569:	cdqe   
   14001a56b:	cmp    rax,rbx
   14001a56e:	ja     0x14001a578
   14001a570:	jne    0x14001a58b
   14001a572:	mov    WORD PTR [rsi+rbx*2],bp
   14001a576:	jmp    0x14001a58b
   14001a578:	mov    WORD PTR [rsi+rbx*2],bp
   14001a57c:	mov    edi,0x8007007a
   14001a581:	jmp    0x14001a58b
   14001a583:	test   rdx,rdx
   14001a586:	je     0x14001a58b
   14001a588:	mov    WORD PTR [rsi],bp
   14001a58b:	mov    eax,edi
   14001a58d:	add    rsp,0x28
   14001a591:	pop    rdi
   14001a592:	pop    rsi
   14001a593:	pop    rbp
   14001a594:	pop    rbx
   14001a595:	ret    
   14001a596:	int3   
   14001a597:	int3   
   14001a598:	mov    QWORD PTR [rsp+0x8],rcx
   14001a59d:	sub    rsp,0x18
   14001a5a1:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   14001a5a9:	lea    rax,[rip+0x2c970]        # 0x140046f20
   14001a5b0:	mov    QWORD PTR [rcx],rax
   14001a5b3:	mov    DWORD PTR [rcx+0x8],0x3
   14001a5ba:	lea    rax,[rcx+0x10]
   14001a5be:	mov    QWORD PTR [rsp+0x30],rax
   14001a5c3:	lea    rdx,[rip+0x2bea6]        # 0x140046470
   14001a5ca:	mov    QWORD PTR [rax],rdx
   14001a5cd:	lea    rdx,[rip+0x2bc5c]        # 0x140046230
   14001a5d4:	mov    QWORD PTR [rax+0x8],rdx
   14001a5d8:	xor    r8d,r8d
   14001a5db:	mov    QWORD PTR [rax+0x10],r8
   14001a5df:	lea    rdx,[rip+0x2bf0a]        # 0x1400464f0
   14001a5e6:	mov    QWORD PTR [rax],rdx
   14001a5e9:	lea    rdx,[rip+0x2bf18]        # 0x140046508
   14001a5f0:	mov    QWORD PTR [rax+0x8],rdx
   14001a5f4:	mov    QWORD PTR [rax+0x18],r8
   14001a5f8:	mov    QWORD PTR [rax+0x20],r8
   14001a5fc:	mov    DWORD PTR [rax+0x28],r8d
   14001a600:	mov    QWORD PTR [rax+0x30],r8
   14001a604:	mov    BYTE PTR [rax+0x38],r8b
   14001a608:	mov    QWORD PTR [rcx+0x150],r8
   14001a60f:	mov    DWORD PTR [rcx+0x158],r8d
   14001a616:	mov    QWORD PTR [rcx+0x160],r8
   14001a61d:	mov    QWORD PTR [rcx+0x168],r8
   14001a624:	mov    QWORD PTR [rcx+0x170],r8
   14001a62b:	mov    rax,rcx
   14001a62e:	add    rsp,0x18
   14001a632:	ret    
   14001a633:	int3   
   14001a634:	mov    r11,rsp
   14001a637:	mov    QWORD PTR [r11+0x8],rcx
   14001a63b:	push   rdi
   14001a63c:	sub    rsp,0x30
   14001a640:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   14001a648:	mov    QWORD PTR [r11+0x18],rbx
   14001a64c:	mov    rbx,rcx
   14001a64f:	lea    rax,[rip+0x2c8ca]        # 0x140046f20
   14001a656:	mov    QWORD PTR [rcx],rax
   14001a659:	and    QWORD PTR [rcx+0x160],0x0
   14001a661:	and    QWORD PTR [rcx+0x168],0x0
   14001a669:	mov    rdi,QWORD PTR [rcx+0x170]
   14001a670:	test   rdi,rdi
   14001a673:	je     0x14001a694
   14001a675:	mov    QWORD PTR [r11+0x10],rdi
   14001a679:	lea    rax,[rip+0x2c870]        # 0x140046ef0
   14001a680:	mov    QWORD PTR [rdi],rax
   14001a683:	lea    rcx,[rdi+0x8]
   14001a687:	call   0x14002582c
   14001a68c:	mov    rcx,rdi
   14001a68f:	call   0x14002657c
   14001a694:	and    QWORD PTR [rbx+0x170],0x0
   14001a69c:	lea    rcx,[rbx+0x10]
   14001a6a0:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a6a5:	add    rsp,0x30
   14001a6a9:	pop    rdi
   14001a6aa:	jmp    0x140014ffc
   14001a6af:	int3   
   14001a6b0:	mov    r11,rsp
   14001a6b3:	push   rdi
   14001a6b4:	push   r14
   14001a6b6:	push   r15
   14001a6b8:	sub    rsp,0x50
   14001a6bc:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   14001a6c4:	mov    QWORD PTR [r11+0x10],rbx
   14001a6c8:	mov    QWORD PTR [r11+0x18],rbp
   14001a6cc:	mov    QWORD PTR [r11+0x20],rsi
   14001a6d0:	mov    r15d,r9d
   14001a6d3:	mov    r14d,r8d
   14001a6d6:	mov    rdi,rcx
   14001a6d9:	mov    DWORD PTR [rcx+0x154],edx
   14001a6df:	mov    DWORD PTR [rcx+0x158],r14d
   14001a6e6:	imul   edx,edx,0x3b8
   14001a6ec:	imul   r8d,r8d,0x234
   14001a6f3:	add    edx,0x230
   14001a6f9:	add    r8d,edx
   14001a6fc:	mov    DWORD PTR [rcx+0x150],r8d
   14001a703:	xor    ebp,ebp
   14001a705:	mov    eax,ebp
   14001a707:	cmp    BYTE PTR [rsp+0x90],bpl
   14001a70f:	sete   al
   14001a712:	lea    rsi,[rcx+0x10]
   14001a716:	lea    r9d,[rbp+0x1]
   14001a71a:	mov    rdx,QWORD PTR [rip+0x4250f]        # 0x14005cc30
   14001a721:	mov    DWORD PTR [r11-0x40],r9d
   14001a725:	cmp    DWORD PTR [rcx+0x8],0x3
   14001a729:	mov    rcx,rsi
   14001a72c:	jne    0x14001a73c
   14001a72e:	mov    DWORD PTR [rsp+0x20],ebp
   14001a732:	mov    r9d,eax
   14001a735:	call   0x1400150ac
   14001a73a:	jmp    0x14001a798
   14001a73c:	mov    DWORD PTR [rsp+0x20],r9d
   14001a741:	call   0x1400150ac
   14001a746:	mov    ebx,DWORD PTR [rdi+0x150]
   14001a74c:	mov    rax,QWORD PTR [rsi]
   14001a74f:	mov    rcx,rsi
   14001a752:	call   QWORD PTR [rax+0x8]
   14001a755:	mov    rcx,rax
   14001a758:	mov    r8d,ebx
   14001a75b:	xor    edx,edx
   14001a75d:	call   0x14002bb90
   14001a762:	mov    rax,QWORD PTR [rsi]
   14001a765:	mov    rcx,rsi
   14001a768:	call   QWORD PTR [rax+0x8]
   14001a76b:	or     DWORD PTR [rax+0x8],0xffffffff
   14001a76f:	mov    ecx,0x80000000
   14001a774:	cmp    r15d,0xffffffff
   14001a778:	cmove  r15d,ecx
   14001a77c:	mov    DWORD PTR [rax+0xc],r15d
   14001a780:	mov    DWORD PTR [rax],r14d
   14001a783:	lea    rcx,[rax+0x1c]
   14001a787:	lea    r8,[rip+0x2c7ba]        # 0x140046f48
   14001a78e:	mov    edx,0x208
   14001a793:	call   0x1400108b8
   14001a798:	mov    rax,QWORD PTR [rsi]
   14001a79b:	mov    rcx,rsi
   14001a79e:	call   QWORD PTR [rax+0x8]
   14001a7a1:	lea    rcx,[rax+0x230]
   14001a7a8:	mov    QWORD PTR [rdi+0x160],rcx
   14001a7af:	mov    rax,r14
   14001a7b2:	imul   rax,rax,0x234
   14001a7b9:	add    rax,rcx
   14001a7bc:	mov    QWORD PTR [rdi+0x168],rax
   14001a7c3:	mov    ecx,0x18
   14001a7c8:	call   0x140026da8
   14001a7cd:	mov    rbx,rax
   14001a7d0:	mov    QWORD PTR [rsp+0x70],rax
   14001a7d5:	test   rax,rax
   14001a7d8:	je     0x14001a805
   14001a7da:	mov    rdx,QWORD PTR [rsi]
   14001a7dd:	mov    rcx,rsi
   14001a7e0:	call   QWORD PTR [rdx+0x8]
   14001a7e3:	mov    rdx,QWORD PTR [rsi]
   14001a7e6:	mov    rcx,rsi
   14001a7e9:	call   QWORD PTR [rdx+0x8]
   14001a7ec:	mov    ecx,DWORD PTR [rdi+0x8]
   14001a7ef:	mov    DWORD PTR [rsp+0x20],ecx
   14001a7f3:	mov    rdx,QWORD PTR [rip+0x42456]        # 0x14005cc50
   14001a7fa:	mov    rcx,rbx
   14001a7fd:	call   0x140019ed0
   14001a802:	mov    rbp,rax
   14001a805:	mov    QWORD PTR [rdi+0x170],rbp
   14001a80c:	lea    r11,[rsp+0x50]
   14001a811:	mov    rbx,QWORD PTR [r11+0x28]
   14001a815:	mov    rbp,QWORD PTR [r11+0x30]
   14001a819:	mov    rsi,QWORD PTR [r11+0x38]
   14001a81d:	mov    rsp,r11
   14001a820:	pop    r15
   14001a822:	pop    r14
   14001a824:	pop    rdi
   14001a825:	ret    
   14001a826:	int3   
   14001a827:	int3   
   14001a828:	rex push rbx
   14001a82a:	sub    rsp,0x20
   14001a82e:	mov    eax,DWORD PTR [rcx+0x158]
   14001a834:	imul   edx,edx,0x3b8
   14001a83a:	add    rcx,0x10
   14001a83e:	lea    ebx,[rdx+0x230]
   14001a844:	imul   eax,eax,0x234
   14001a84a:	add    ebx,eax
   14001a84c:	mov    rax,QWORD PTR [rcx]
   14001a84f:	call   QWORD PTR [rax+0x8]
   14001a852:	mov    ecx,ebx
   14001a854:	add    rax,rcx
   14001a857:	add    rsp,0x20
   14001a85b:	pop    rbx
   14001a85c:	ret    
   14001a85d:	int3   
   14001a85e:	int3   
   14001a85f:	int3   
   14001a860:	rex push rbx
   14001a862:	sub    rsp,0x20
   14001a866:	mov    ebx,edx
   14001a868:	cmp    edx,DWORD PTR [rcx+0x158]
   14001a86e:	jb     0x14001a874
   14001a870:	xor    eax,eax
   14001a872:	jmp    0x14001a88d
   14001a874:	add    rcx,0x10
   14001a878:	mov    rax,QWORD PTR [rcx]
   14001a87b:	call   QWORD PTR [rax+0x8]
   14001a87e:	imul   ebx,ebx,0x234
   14001a884:	lea    ecx,[rbx+0x230]
   14001a88a:	add    rax,rcx
   14001a88d:	add    rsp,0x20
   14001a891:	pop    rbx
   14001a892:	ret    
   14001a893:	int3   
   14001a894:	mov    QWORD PTR [rsp+0x8],rbx
   14001a899:	mov    QWORD PTR [rsp+0x10],rsi
   14001a89e:	push   rdi
   14001a89f:	sub    rsp,0x20
   14001a8a3:	mov    ebx,r8d
   14001a8a6:	mov    rdi,rdx
   14001a8a9:	mov    rsi,rcx
   14001a8ac:	test   r8b,0x1
   14001a8b0:	jne    0x14001a8b9
   14001a8b2:	mov    eax,0xc
   14001a8b7:	jmp    0x14001a8de
   14001a8b9:	add    rcx,0x18
   14001a8bd:	mov    r8d,0x6
   14001a8c3:	mov    rax,QWORD PTR [rcx]
   14001a8c6:	call   QWORD PTR [rax]
   14001a8c8:	test   eax,eax
   14001a8ca:	jne    0x14001a8de
   14001a8cc:	mov    rcx,QWORD PTR [rsi+0x170]
   14001a8d3:	mov    r8d,ebx
   14001a8d6:	mov    rdx,rdi
   14001a8d9:	mov    rax,QWORD PTR [rcx]
   14001a8dc:	call   QWORD PTR [rax]
   14001a8de:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a8e3:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a8e8:	add    rsp,0x20
   14001a8ec:	pop    rdi
   14001a8ed:	ret    
   14001a8ee:	int3   
   14001a8ef:	int3   
   14001a8f0:	mov    QWORD PTR [rsp+0x10],rbx
   14001a8f5:	push   rdi
   14001a8f6:	sub    rsp,0x20
   14001a8fa:	mov    rbx,rcx
   14001a8fd:	add    rcx,0x18
   14001a901:	mov    rdi,rdx
   14001a904:	mov    rax,QWORD PTR [rcx]
   14001a907:	call   QWORD PTR [rax+0x8]
   14001a90a:	mov    rcx,QWORD PTR [rbx+0x170]
   14001a911:	mov    rdx,rdi
   14001a914:	mov    DWORD PTR [rsp+0x30],eax
   14001a918:	mov    rax,QWORD PTR [rcx]
   14001a91b:	call   QWORD PTR [rax+0x8]
   14001a91e:	lea    rcx,[rsp+0x30]
   14001a923:	mov    DWORD PTR [rsp+0x34],eax
   14001a927:	xor    eax,eax
   14001a929:	mov    edx,DWORD PTR [rcx]
   14001a92b:	test   edx,edx
   14001a92d:	jne    0x14001a93e
   14001a92f:	inc    eax
   14001a931:	add    rcx,0x4
   14001a935:	cmp    eax,0x2
   14001a938:	jb     0x14001a929
   14001a93a:	xor    eax,eax
   14001a93c:	jmp    0x14001a940
   14001a93e:	mov    eax,edx
   14001a940:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a945:	add    rsp,0x20
   14001a949:	pop    rdi
   14001a94a:	ret    
   14001a94b:	int3   
   14001a94c:	mov    QWORD PTR [rsp+0x8],rcx
   14001a951:	push   rbp
   14001a952:	push   rbx
   14001a953:	push   rsi
   14001a954:	push   r12
   14001a956:	push   r13
   14001a958:	push   r14
   14001a95a:	push   r15
   14001a95c:	mov    rbp,rsp
   14001a95f:	sub    rsp,0x30
   14001a963:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   14001a96b:	mov    rbx,rcx
   14001a96e:	lea    rax,[rip+0x2c66b]        # 0x140046fe0
   14001a975:	mov    QWORD PTR [rcx],rax
   14001a978:	or     DWORD PTR [rcx+0x8],0xffffffff
   14001a97c:	call   QWORD PTR [rip+0x26976]        # 0x1400412f8
   14001a982:	mov    DWORD PTR [rbx+0xc],eax
   14001a985:	lea    rdx,[rbx+0x90]
   14001a98c:	mov    QWORD PTR [rbp+0x48],rdx
   14001a990:	lea    rax,[rip+0x2c6a9]        # 0x140047040
   14001a997:	mov    QWORD PTR [rdx],rax
   14001a99a:	mov    r13d,0x3
   14001a9a0:	mov    QWORD PTR [rdx+0x8],r13
   14001a9a4:	xor    r9d,r9d
   14001a9a7:	lea    rax,[rdx+0x10]
   14001a9ab:	mov    QWORD PTR [rbp+0x50],rax
   14001a9af:	lea    r12,[rip+0x2baba]        # 0x140046470
   14001a9b6:	mov    QWORD PTR [rax],r12
   14001a9b9:	lea    r15,[rip+0x2b870]        # 0x140046230
   14001a9c0:	mov    QWORD PTR [rax+0x8],r15
   14001a9c4:	mov    QWORD PTR [rax+0x10],r9
   14001a9c8:	lea    r14,[rip+0x2bb21]        # 0x1400464f0
   14001a9cf:	mov    QWORD PTR [rax],r14
   14001a9d2:	lea    rsi,[rip+0x2bb2f]        # 0x140046508
   14001a9d9:	mov    QWORD PTR [rax+0x8],rsi
   14001a9dd:	mov    QWORD PTR [rax+0x18],r9
   14001a9e1:	mov    QWORD PTR [rax+0x20],r9
   14001a9e5:	mov    DWORD PTR [rax+0x28],r9d
   14001a9e9:	mov    QWORD PTR [rax+0x30],r9
   14001a9ed:	mov    BYTE PTR [rax+0x38],r9b
   14001a9f1:	lea    rax,[rdx+0x150]
   14001a9f8:	mov    QWORD PTR [rbp+0x50],rax
   14001a9fc:	mov    QWORD PTR [rax],r12
   14001a9ff:	mov    QWORD PTR [rax+0x8],r15
   14001aa03:	mov    QWORD PTR [rax+0x10],r9
   14001aa07:	mov    QWORD PTR [rax],r14
   14001aa0a:	mov    QWORD PTR [rax+0x8],rsi
   14001aa0e:	mov    QWORD PTR [rax+0x18],r9
   14001aa12:	mov    QWORD PTR [rax+0x20],r9
   14001aa16:	mov    DWORD PTR [rax+0x28],r9d
   14001aa1a:	mov    QWORD PTR [rax+0x30],r9
   14001aa1e:	mov    BYTE PTR [rax+0x38],r9b
   14001aa22:	lea    rax,[rdx+0x290]
   14001aa29:	mov    QWORD PTR [rbp+0x50],rax
   14001aa2d:	mov    QWORD PTR [rax],r15
   14001aa30:	mov    QWORD PTR [rax+0x8],r9
   14001aa34:	lea    rcx,[rip+0x2baed]        # 0x140046528
   14001aa3b:	mov    QWORD PTR [rax],rcx
   14001aa3e:	mov    DWORD PTR [rax+0x10],r9d
   14001aa42:	lea    rax,[rdx+0x2a8]
   14001aa49:	mov    QWORD PTR [rbp+0x50],rax
   14001aa4d:	mov    QWORD PTR [rax],r15
   14001aa50:	mov    QWORD PTR [rax+0x8],r9
   14001aa54:	mov    QWORD PTR [rax],rcx
   14001aa57:	mov    DWORD PTR [rax+0x10],r9d
   14001aa5b:	lea    rax,[rdx+0x2c0]
   14001aa62:	mov    QWORD PTR [rbp+0x50],rax
   14001aa66:	mov    QWORD PTR [rax],r15
   14001aa69:	mov    QWORD PTR [rax+0x8],r9
   14001aa6d:	lea    rcx,[rip+0x2d23c]        # 0x140047cb0
   14001aa74:	mov    QWORD PTR [rax],rcx
   14001aa77:	lea    rax,[rdx+0x2d0]
   14001aa7e:	mov    QWORD PTR [rbp+0x50],rax
   14001aa82:	mov    QWORD PTR [rax],r15
   14001aa85:	mov    QWORD PTR [rax+0x8],r9
   14001aa89:	mov    QWORD PTR [rax],rcx
   14001aa8c:	mov    QWORD PTR [rdx+0x2e0],r9
   14001aa93:	mov    QWORD PTR [rdx+0x2e8],r9
   14001aa9a:	lea    rcx,[rbx+0x380]
   14001aaa1:	mov    QWORD PTR [rbp+0x48],rcx
   14001aaa5:	lea    rax,[rip+0x2c5c4]        # 0x140047070
   14001aaac:	mov    QWORD PTR [rcx],rax
   14001aaaf:	mov    DWORD PTR [rcx+0x8],r13d
   14001aab3:	or     DWORD PTR [rcx+0x10],0xffffffff
   14001aab7:	mov    QWORD PTR [rcx+0x18],r9
   14001aabb:	lea    rax,[rcx+0x20]
   14001aabf:	mov    QWORD PTR [rbp+0x50],rax
   14001aac3:	mov    QWORD PTR [rax],r12
   14001aac6:	mov    QWORD PTR [rax+0x8],r15
   14001aaca:	mov    QWORD PTR [rax+0x10],r9
   14001aace:	mov    QWORD PTR [rax],r14
   14001aad1:	mov    QWORD PTR [rax+0x8],rsi
   14001aad5:	mov    QWORD PTR [rax+0x18],r9
   14001aad9:	mov    QWORD PTR [rax+0x20],r9
   14001aadd:	mov    DWORD PTR [rax+0x28],r9d
   14001aae1:	mov    QWORD PTR [rax+0x30],r9
   14001aae5:	mov    BYTE PTR [rax+0x38],r9b
   14001aae9:	mov    QWORD PTR [rcx+0x160],r9
   14001aaf0:	mov    QWORD PTR [rcx+0x168],r9
   14001aaf7:	lea    rax,[rcx+0x170]
   14001aafe:	mov    QWORD PTR [rbp+0x50],rax
   14001ab02:	mov    QWORD PTR [rax],r15
   14001ab05:	mov    QWORD PTR [rax+0x8],r9
   14001ab09:	lea    rdx,[rip+0x2d1c0]        # 0x140047cd0
   14001ab10:	mov    QWORD PTR [rax],rdx
   14001ab13:	add    rcx,0x180
   14001ab1a:	mov    QWORD PTR [rbp+0x50],rcx
   14001ab1e:	lea    rax,[rip+0x2c563]        # 0x140047088
   14001ab25:	mov    QWORD PTR [rcx],rax
   14001ab28:	mov    DWORD PTR [rcx+0x8],r13d
   14001ab2c:	lea    rax,[rcx+0x10]
   14001ab30:	mov    QWORD PTR [rbp+0x58],rax
   14001ab34:	mov    QWORD PTR [rax],r12
   14001ab37:	mov    QWORD PTR [rax+0x8],r15
   14001ab3b:	mov    QWORD PTR [rax+0x10],r9
   14001ab3f:	mov    QWORD PTR [rax],r14
   14001ab42:	mov    QWORD PTR [rax+0x8],rsi
   14001ab46:	mov    QWORD PTR [rax+0x18],r9
   14001ab4a:	mov    QWORD PTR [rax+0x20],r9
   14001ab4e:	mov    DWORD PTR [rax+0x28],r9d
   14001ab52:	mov    QWORD PTR [rax+0x30],r9
   14001ab56:	mov    BYTE PTR [rax+0x38],r9b
   14001ab5a:	lea    rax,[rcx+0x150]
   14001ab61:	mov    QWORD PTR [rbp+0x58],rax
   14001ab65:	lea    rdx,[rip+0x2c534]        # 0x1400470a0
   14001ab6c:	mov    QWORD PTR [rax],rdx
   14001ab6f:	mov    DWORD PTR [rax+0x8],r13d
   14001ab73:	add    rax,0x10
   14001ab77:	mov    QWORD PTR [rbp-0x8],rax
   14001ab7b:	mov    QWORD PTR [rax],r12
   14001ab7e:	mov    QWORD PTR [rax+0x8],r15
   14001ab82:	mov    QWORD PTR [rax+0x10],r9
   14001ab86:	mov    QWORD PTR [rax],r14
   14001ab89:	mov    QWORD PTR [rax+0x8],rsi
   14001ab8d:	mov    QWORD PTR [rax+0x18],r9
   14001ab91:	mov    QWORD PTR [rax+0x20],r9
   14001ab95:	mov    DWORD PTR [rax+0x28],r9d
   14001ab99:	mov    QWORD PTR [rax+0x30],r9
   14001ab9d:	mov    BYTE PTR [rax+0x38],r9b
   14001aba1:	mov    DWORD PTR [rcx+0x2a0],r9d
   14001aba8:	lea    rcx,[rbx+0x7a8]
   14001abaf:	mov    QWORD PTR [rbp+0x48],rcx
   14001abb3:	call   0x14001a598
   14001abb8:	nop
   14001abb9:	lea    rax,[rip+0x2c498]        # 0x140047058
   14001abc0:	mov    QWORD PTR [rcx],rax
   14001abc3:	mov    DWORD PTR [rcx+0x178],0x80000000
   14001abcd:	mov    QWORD PTR [rcx+0x180],r9
   14001abd4:	lea    rcx,[rbx+0x930]
   14001abdb:	call   0x14001a040
   14001abe0:	nop
   14001abe1:	lea    rcx,[rbx+0xc10]
   14001abe8:	call   0x140019830
   14001abed:	nop
   14001abee:	lea    rcx,[rbx+0xf08]
   14001abf5:	mov    QWORD PTR [rbp+0x48],rcx
   14001abf9:	lea    rax,[rip+0x2c2b8]        # 0x140046eb8
   14001ac00:	mov    QWORD PTR [rcx],rax
   14001ac03:	mov    DWORD PTR [rcx+0x8],r13d
   14001ac07:	lea    rax,[rcx+0x10]
   14001ac0b:	mov    QWORD PTR [rbp+0x50],rax
   14001ac0f:	mov    QWORD PTR [rax],r12
   14001ac12:	mov    QWORD PTR [rax+0x8],r15
   14001ac16:	xor    edx,edx
   14001ac18:	mov    QWORD PTR [rax+0x10],rdx
   14001ac1c:	mov    QWORD PTR [rax],r14
   14001ac1f:	mov    QWORD PTR [rax+0x8],rsi
   14001ac23:	mov    QWORD PTR [rax+0x18],rdx
   14001ac27:	mov    QWORD PTR [rax+0x20],rdx
   14001ac2b:	mov    DWORD PTR [rax+0x28],edx
   14001ac2e:	mov    QWORD PTR [rax+0x30],rdx
   14001ac32:	mov    BYTE PTR [rax+0x38],dl
   14001ac35:	mov    QWORD PTR [rcx+0x150],rdx
   14001ac3c:	mov    QWORD PTR [rcx+0x158],rdx
   14001ac43:	mov    QWORD PTR [rcx+0x178],rdx
   14001ac4a:	mov    DWORD PTR [rbx+0x1090],edx
   14001ac50:	lea    rcx,[rbx+0x10]
   14001ac54:	lea    r8d,[r13+0x65]
   14001ac58:	call   0x14002bb90
   14001ac5d:	xor    eax,eax
   14001ac5f:	mov    QWORD PTR [rbx+0x78],rax
   14001ac63:	mov    QWORD PTR [rbx+0x80],rax
   14001ac6a:	mov    QWORD PTR [rbx+0x88],rax
   14001ac71:	mov    rax,rbx
   14001ac74:	add    rsp,0x30
   14001ac78:	pop    r15
   14001ac7a:	pop    r14
   14001ac7c:	pop    r13
   14001ac7e:	pop    r12
   14001ac80:	pop    rsi
   14001ac81:	pop    rbx
   14001ac82:	pop    rbp
   14001ac83:	ret    
   14001ac84:	mov    QWORD PTR [rsp+0x8],rbx
   14001ac89:	push   rdi
   14001ac8a:	sub    rsp,0x20
   14001ac8e:	mov    ebx,edx
   14001ac90:	mov    rdi,rcx
   14001ac93:	call   0x14001acb4
   14001ac98:	test   bl,0x1
   14001ac9b:	je     0x14001aca5
   14001ac9d:	mov    rcx,rdi
   14001aca0:	call   0x14002657c
   14001aca5:	mov    rax,rdi
   14001aca8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001acad:	add    rsp,0x20
   14001acb1:	pop    rdi
   14001acb2:	ret    
   14001acb3:	int3   
   14001acb4:	mov    QWORD PTR [rsp+0x8],rcx
   14001acb9:	push   rbx
   14001acba:	sub    rsp,0x30
   14001acbe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001acc7:	mov    rbx,rcx
   14001acca:	lea    rax,[rip+0x2c30f]        # 0x140046fe0
   14001acd1:	mov    QWORD PTR [rcx],rax
   14001acd4:	add    rcx,0xf08
   14001acdb:	call   0x140019714
   14001ace0:	nop
   14001ace1:	lea    rcx,[rbx+0xc10]
   14001ace8:	call   0x14001995c
   14001aced:	nop
   14001acee:	lea    rcx,[rbx+0x930]
   14001acf5:	call   0x14001a144
   14001acfa:	nop
   14001acfb:	lea    rcx,[rbx+0x7a8]
   14001ad02:	mov    QWORD PTR [rsp+0x48],rcx
   14001ad07:	lea    rax,[rip+0x2c34a]        # 0x140047058
   14001ad0e:	mov    QWORD PTR [rcx],rax
   14001ad11:	call   0x14001a634
   14001ad16:	nop
   14001ad17:	lea    rcx,[rbx+0x380]
   14001ad1e:	call   0x14001c91c
   14001ad23:	nop
   14001ad24:	lea    rcx,[rbx+0x90]
   14001ad2b:	add    rsp,0x30
   14001ad2f:	pop    rbx
   14001ad30:	jmp    0x14001be9c
   14001ad35:	int3   
   14001ad36:	int3   
   14001ad37:	int3   
   14001ad38:	mov    rax,rsp
   14001ad3b:	push   rdi
   14001ad3c:	push   r12
   14001ad3e:	push   r13
   14001ad40:	push   r14
   14001ad42:	push   r15
   14001ad44:	sub    rsp,0x120
   14001ad4b:	mov    QWORD PTR [rax-0xc8],0xfffffffffffffffe
   14001ad56:	mov    QWORD PTR [rax+0x18],rbx
   14001ad5a:	mov    QWORD PTR [rax+0x20],rsi
   14001ad5e:	mov    rax,QWORD PTR [rip+0x3e323]        # 0x140059088
   14001ad65:	xor    rax,rsp
   14001ad68:	mov    QWORD PTR [rsp+0x110],rax
   14001ad70:	mov    rsi,rdx
   14001ad73:	mov    rdi,rcx
   14001ad76:	lea    rax,[rip+0x2aa2b]        # 0x1400457a8
   14001ad7d:	mov    QWORD PTR [rsp+0x50],rax
   14001ad82:	lea    rax,[rip+0x2b4a7]        # 0x140046230
   14001ad89:	mov    QWORD PTR [rsp+0x50],rax
   14001ad8e:	and    QWORD PTR [rsp+0x58],0x0
   14001ad94:	lea    rax,[rip+0x2b78d]        # 0x140046528
   14001ad9b:	mov    QWORD PTR [rsp+0x50],rax
   14001ada0:	and    DWORD PTR [rsp+0x60],0x0
   14001ada5:	mov    r9d,0x100000
   14001adab:	mov    rdx,QWORD PTR [rip+0x41e4e]        # 0x14005cc00
   14001adb2:	lea    rcx,[rsp+0x50]
   14001adb7:	call   0x140015830
   14001adbc:	test   eax,eax
   14001adbe:	je     0x14001afb2
   14001adc4:	xor    r8d,r8d
   14001adc7:	xor    edx,edx
   14001adc9:	lea    rcx,[rsp+0x50]
   14001adce:	call   0x14001585c
   14001add3:	test   eax,eax
   14001add5:	je     0x14001afb2
   14001addb:	lea    rcx,[rdi+0xc10]
   14001ade2:	call   0x1400199c4
   14001ade7:	call   QWORD PTR [rip+0x2650b]        # 0x1400412f8
   14001aded:	mov    edx,eax
   14001adef:	lea    rcx,[rdi+0x90]
   14001adf6:	call   0x14001bf1c
   14001adfb:	nop
   14001adfc:	mov    rax,QWORD PTR [rdi+0x1060]
   14001ae03:	mov    r14d,DWORD PTR [rax+0xc]
   14001ae07:	mov    r15d,DWORD PTR [rax+0x8]
   14001ae0b:	mov    r12d,DWORD PTR [rax+0x4]
   14001ae0f:	mov    r13d,DWORD PTR [rax]
   14001ae12:	mov    ebx,DWORD PTR [rdi+0x1070]
   14001ae18:	mov    DWORD PTR [rsp+0x40],ebx
   14001ae1c:	lea    rdx,[rsp+0x90]
   14001ae24:	mov    rcx,rdi
   14001ae27:	call   0x14001b59c
   14001ae2c:	test   eax,eax
   14001ae2e:	jne    0x14001ae43
   14001ae30:	mov    rax,QWORD PTR [rsi]
   14001ae33:	xor    r9d,r9d
   14001ae36:	xor    r8d,r8d
   14001ae39:	mov    edx,0xe1230543
   14001ae3e:	mov    rcx,rsi
   14001ae41:	call   QWORD PTR [rax]
   14001ae43:	cmp    DWORD PTR [rsp+0x94],0xb
   14001ae4b:	jne    0x14001ae5e
   14001ae4d:	cmp    DWORD PTR [rsp+0x98],0xc627
   14001ae58:	je     0x14001af3c
   14001ae5e:	lea    rcx,[rip+0x3f4c3]        # 0x14005a328
   14001ae65:	mov    rax,QWORD PTR [rip+0x3f4bc]        # 0x14005a328
   14001ae6c:	call   QWORD PTR [rax+0x18]
   14001ae6f:	add    rax,0x18
   14001ae73:	mov    QWORD PTR [rsp+0x48],rax
   14001ae78:	lea    rcx,[rip+0x3f4a9]        # 0x14005a328
   14001ae7f:	mov    rax,QWORD PTR [rip+0x3f4a2]        # 0x14005a328
   14001ae86:	call   QWORD PTR [rax+0x18]
   14001ae89:	lea    rbx,[rax+0x18]
   14001ae8d:	mov    QWORD PTR [rsp+0x70],rbx
   14001ae92:	mov    edx,DWORD PTR [rsp+0x94]
   14001ae99:	shr    edx,0x10
   14001ae9c:	movzx  ecx,WORD PTR [rsp+0x94]
   14001aea4:	mov    eax,DWORD PTR [rsp+0x98]
   14001aeab:	mov    DWORD PTR [rsp+0x38],eax
   14001aeaf:	mov    DWORD PTR [rsp+0x30],edx
   14001aeb3:	mov    DWORD PTR [rsp+0x28],ecx
   14001aeb7:	mov    DWORD PTR [rsp+0x20],0xc627
   14001aebf:	xor    r9d,r9d
   14001aec2:	lea    r8d,[r9+0xb]
   14001aec6:	lea    rdx,[rip+0x2c0bb]        # 0x140046f88
   14001aecd:	lea    rcx,[rsp+0x48]
   14001aed2:	call   0x14001b804
   14001aed7:	mov    rax,QWORD PTR [rsp+0x48]
   14001aedc:	mov    QWORD PTR [rsp+0x68],rax
   14001aee1:	mov    rax,QWORD PTR [rsi]
   14001aee4:	lea    r9,[rsp+0x68]
   14001aee9:	mov    edx,0xa1230904
   14001aeee:	mov    r8d,0x1
   14001aef4:	mov    rcx,rsi
   14001aef7:	call   QWORD PTR [rax+0x8]
   14001aefa:	nop
   14001aefb:	lea    rdx,[rbx-0x18]
   14001aeff:	or     ebx,0xffffffff
   14001af02:	mov    eax,ebx
   14001af04:	lock xadd DWORD PTR [rdx+0x10],eax
   14001af09:	add    eax,ebx
   14001af0b:	test   eax,eax
   14001af0d:	jg     0x14001af19
   14001af0f:	mov    rcx,QWORD PTR [rdx]
   14001af12:	mov    rax,QWORD PTR [rcx]
   14001af15:	call   QWORD PTR [rax+0x8]
   14001af18:	nop
   14001af19:	mov    rdx,QWORD PTR [rsp+0x48]
   14001af1e:	add    rdx,0xffffffffffffffe8
   14001af22:	mov    eax,ebx
   14001af24:	lock xadd DWORD PTR [rdx+0x10],eax
   14001af29:	add    eax,ebx
   14001af2b:	test   eax,eax
   14001af2d:	jg     0x14001af38
   14001af2f:	mov    rcx,QWORD PTR [rdx]
   14001af32:	mov    rax,QWORD PTR [rcx]
   14001af35:	call   QWORD PTR [rax+0x8]
   14001af38:	mov    ebx,DWORD PTR [rsp+0x40]
   14001af3c:	lea    rcx,[rdi+0x380]
   14001af43:	mov    r9d,r15d
   14001af46:	mov    r8d,r14d
   14001af49:	mov    edx,DWORD PTR [rdi+0xc]
   14001af4c:	call   0x14001c974
   14001af51:	lea    rcx,[rdi+0x7a8]
   14001af58:	mov    QWORD PTR [rcx+0x180],rsi
   14001af5f:	mov    BYTE PTR [rsp+0x20],0x0
   14001af64:	mov    r9d,ebx
   14001af67:	mov    r8d,r13d
   14001af6a:	mov    edx,r12d
   14001af6d:	call   0x14001a6b0
   14001af72:	lea    rcx,[rdi+0x930]
   14001af79:	call   0x14001a2ec
   14001af7e:	nop
   14001af7f:	mov    DWORD PTR [rdi+0x1090],0x1
   14001af89:	lea    rcx,[rsp+0x50]
   14001af8e:	call   0x140015774
   14001af93:	xor    eax,eax
   14001af95:	jmp    0x14001afc1
   14001af97:	mov    ebx,DWORD PTR [rsp+0x8c]
   14001af9e:	jmp    0x14001afa4
   14001afa0:	mov    ebx,DWORD PTR [rsp+0x7c]
   14001afa4:	lea    rcx,[rsp+0x50]
   14001afa9:	call   0x140015774
   14001afae:	mov    eax,ebx
   14001afb0:	jmp    0x14001afc1
   14001afb2:	lea    rcx,[rsp+0x50]
   14001afb7:	call   0x140015774
   14001afbc:	mov    eax,0xe123051a
   14001afc1:	mov    rcx,QWORD PTR [rsp+0x110]
   14001afc9:	xor    rcx,rsp
   14001afcc:	call   0x1400265a0
   14001afd1:	lea    r11,[rsp+0x120]
   14001afd9:	mov    rbx,QWORD PTR [r11+0x40]
   14001afdd:	mov    rsi,QWORD PTR [r11+0x48]
   14001afe1:	mov    rsp,r11
   14001afe4:	pop    r15
   14001afe6:	pop    r14
   14001afe8:	pop    r13
   14001afea:	pop    r12
   14001afec:	pop    rdi
   14001afed:	ret    
   14001afee:	int3   
   14001afef:	int3   
   14001aff0:	mov    rax,rsp
   14001aff3:	push   rdi
   14001aff4:	push   r12
   14001aff6:	push   r13
   14001aff8:	push   r14
   14001affa:	push   r15
   14001affc:	sub    rsp,0x9c0
   14001b003:	mov    QWORD PTR [rax-0x948],0xfffffffffffffffe
   14001b00e:	mov    QWORD PTR [rax+0x18],rbx
   14001b012:	mov    QWORD PTR [rax+0x20],rsi
   14001b016:	mov    rax,QWORD PTR [rip+0x3e06b]        # 0x140059088
   14001b01d:	xor    rax,rsp
   14001b020:	mov    QWORD PTR [rsp+0x9b0],rax
   14001b028:	mov    QWORD PTR [rsp+0x60],r9
   14001b02d:	mov    r14d,edx
   14001b030:	mov    rdi,rcx
   14001b033:	mov    rax,QWORD PTR [rsp+0xa10]
   14001b03b:	mov    QWORD PTR [rsp+0x78],rax
   14001b040:	mov    r12,QWORD PTR [rsp+0xa18]
   14001b048:	mov    rsi,QWORD PTR [rsp+0xa20]
   14001b050:	mov    eax,edx
   14001b052:	and    eax,0x1f
   14001b055:	cmp    eax,edx
   14001b057:	je     0x14001b082
   14001b059:	mov    ebx,0xe1230591
   14001b05e:	mov    edx,0xe1230556
   14001b063:	cmp    r14d,0x2
   14001b067:	cmove  ebx,edx
   14001b06a:	xor    r9d,r9d
   14001b06d:	xor    r8d,r8d
   14001b070:	mov    r10,QWORD PTR [rsi]
   14001b073:	mov    edx,ebx
   14001b075:	mov    rcx,rsi
   14001b078:	call   QWORD PTR [r10]
   14001b07b:	mov    eax,ebx
   14001b07d:	jmp    0x14001b4c7
   14001b082:	mov    eax,DWORD PTR [rsp+0xa28]
   14001b089:	test   eax,eax
   14001b08b:	jne    0x14001b098
   14001b08d:	call   QWORD PTR [rip+0x26265]        # 0x1400412f8
   14001b093:	mov    DWORD PTR [rdi+0xc],eax
   14001b096:	jmp    0x14001b09b
   14001b098:	mov    DWORD PTR [rcx+0xc],eax
   14001b09b:	mov    QWORD PTR [rdi+0x1088],rsi
   14001b0a2:	lea    rcx,[rdi+0xc10]
   14001b0a9:	call   0x1400199c4
   14001b0ae:	lea    rbx,[rdi+0x90]
   14001b0b5:	mov    edx,DWORD PTR [rdi+0xc]
   14001b0b8:	mov    rcx,rbx
   14001b0bb:	call   0x14001bf1c
   14001b0c0:	nop
   14001b0c1:	mov    rax,QWORD PTR [rdi+0x1060]
   14001b0c8:	mov    r13d,DWORD PTR [rax+0xc]
   14001b0cc:	mov    ecx,DWORD PTR [rax+0x8]
   14001b0cf:	mov    DWORD PTR [rsp+0x44],ecx
   14001b0d3:	mov    ecx,DWORD PTR [rax+0x4]
   14001b0d6:	mov    DWORD PTR [rsp+0x40],ecx
   14001b0da:	mov    eax,DWORD PTR [rax]
   14001b0dc:	mov    DWORD PTR [rsp+0x4c],eax
   14001b0e0:	mov    eax,DWORD PTR [rdi+0x1070]
   14001b0e6:	mov    DWORD PTR [rsp+0x58],eax
   14001b0ea:	mov    eax,DWORD PTR [rdi+0x106c]
   14001b0f0:	mov    DWORD PTR [rsp+0x48],eax
   14001b0f4:	lea    rdx,[rsp+0xb0]
   14001b0fc:	mov    rcx,rdi
   14001b0ff:	call   0x14001b59c
   14001b104:	test   eax,eax
   14001b106:	jne    0x14001b11b
   14001b108:	mov    rax,QWORD PTR [rsi]
   14001b10b:	xor    r9d,r9d
   14001b10e:	xor    r8d,r8d
   14001b111:	mov    edx,0xe1230543
   14001b116:	mov    rcx,rsi
   14001b119:	call   QWORD PTR [rax]
   14001b11b:	cmp    DWORD PTR [rsp+0xb4],0xb
   14001b123:	jne    0x14001b13d
   14001b125:	cmp    DWORD PTR [rsp+0xb8],0xc627
   14001b130:	jne    0x14001b13d
   14001b132:	mov    r15d,0x1
   14001b138:	jmp    0x14001b224
   14001b13d:	lea    rcx,[rip+0x3f1e4]        # 0x14005a328
   14001b144:	mov    rax,QWORD PTR [rip+0x3f1dd]        # 0x14005a328
   14001b14b:	call   QWORD PTR [rax+0x18]
   14001b14e:	add    rax,0x18
   14001b152:	mov    QWORD PTR [rsp+0x50],rax
   14001b157:	lea    rcx,[rip+0x3f1ca]        # 0x14005a328
   14001b15e:	mov    rax,QWORD PTR [rip+0x3f1c3]        # 0x14005a328
   14001b165:	call   QWORD PTR [rax+0x18]
   14001b168:	lea    rbx,[rax+0x18]
   14001b16c:	mov    QWORD PTR [rsp+0x98],rbx
   14001b174:	mov    edx,DWORD PTR [rsp+0xb4]
   14001b17b:	shr    edx,0x10
   14001b17e:	movzx  ecx,WORD PTR [rsp+0xb4]
   14001b186:	mov    eax,DWORD PTR [rsp+0xb8]
   14001b18d:	mov    DWORD PTR [rsp+0x38],eax
   14001b191:	mov    DWORD PTR [rsp+0x30],edx
   14001b195:	mov    DWORD PTR [rsp+0x28],ecx
   14001b199:	mov    DWORD PTR [rsp+0x20],0xc627
   14001b1a1:	xor    r9d,r9d
   14001b1a4:	lea    r8d,[r9+0xb]
   14001b1a8:	lea    rdx,[rip+0x2bdd9]        # 0x140046f88
   14001b1af:	lea    rcx,[rsp+0x50]
   14001b1b4:	call   0x14001b804
   14001b1b9:	mov    rax,QWORD PTR [rsp+0x50]
   14001b1be:	mov    QWORD PTR [rsp+0x68],rax
   14001b1c3:	mov    rax,QWORD PTR [rsi]
   14001b1c6:	lea    r9,[rsp+0x68]
   14001b1cb:	mov    r15d,0x1
   14001b1d1:	mov    r8d,r15d
   14001b1d4:	mov    edx,0xa1230904
   14001b1d9:	mov    rcx,rsi
   14001b1dc:	call   QWORD PTR [rax+0x8]
   14001b1df:	nop
   14001b1e0:	lea    rdx,[rbx-0x18]
   14001b1e4:	or     ebx,0xffffffff
   14001b1e7:	mov    eax,ebx
   14001b1e9:	lock xadd DWORD PTR [rdx+0x10],eax
   14001b1ee:	add    eax,ebx
   14001b1f0:	test   eax,eax
   14001b1f2:	jg     0x14001b1fe
   14001b1f4:	mov    rcx,QWORD PTR [rdx]
   14001b1f7:	mov    rax,QWORD PTR [rcx]
   14001b1fa:	call   QWORD PTR [rax+0x8]
   14001b1fd:	nop
   14001b1fe:	mov    rdx,QWORD PTR [rsp+0x50]
   14001b203:	add    rdx,0xffffffffffffffe8
   14001b207:	mov    eax,ebx
   14001b209:	lock xadd DWORD PTR [rdx+0x10],eax
   14001b20e:	add    eax,ebx
   14001b210:	test   eax,eax
   14001b212:	jg     0x14001b21d
   14001b214:	mov    rcx,QWORD PTR [rdx]
   14001b217:	mov    rax,QWORD PTR [rcx]
   14001b21a:	call   QWORD PTR [rax+0x8]
   14001b21d:	lea    rbx,[rdi+0x90]
   14001b224:	lea    rcx,[rdi+0x380]
   14001b22b:	mov    r9d,DWORD PTR [rsp+0x44]
   14001b230:	mov    r8d,r13d
   14001b233:	mov    edx,DWORD PTR [rdi+0xc]
   14001b236:	call   0x14001c974
   14001b23b:	lea    r13,[rdi+0x7a8]
   14001b242:	mov    QWORD PTR [r13+0x180],rsi
   14001b249:	mov    BYTE PTR [rsp+0x20],0x0
   14001b24e:	mov    r9d,DWORD PTR [rsp+0x58]
   14001b253:	mov    r8d,DWORD PTR [rsp+0x4c]
   14001b258:	mov    edx,DWORD PTR [rsp+0x40]
   14001b25c:	mov    rcx,r13
   14001b25f:	call   0x14001a6b0
   14001b264:	lea    rcx,[rdi+0x930]
   14001b26b:	call   0x14001a2ec
   14001b270:	mov    rax,QWORD PTR [rdi+0x940]
   14001b277:	mov    ecx,DWORD PTR [rax+0xa4]
   14001b27d:	test   r14d,ecx
   14001b280:	jne    0x14001b332
   14001b286:	lea    rdx,[rip+0x2ac03]        # 0x140045e90
   14001b28d:	mov    r8,rdx
   14001b290:	test   r14d,r14d
   14001b293:	je     0x14001b2cf
   14001b295:	dec    r14d
   14001b298:	je     0x14001b2c6
   14001b29a:	dec    r14d
   14001b29d:	je     0x14001b2bd
   14001b29f:	sub    r14d,0x2
   14001b2a3:	je     0x14001b2b4
   14001b2a5:	cmp    r14d,0x4
   14001b2a9:	jne    0x14001b2d6
   14001b2ab:	lea    r8,[rip+0x2a8ae]        # 0x140045b60
   14001b2b2:	jmp    0x14001b2d6
   14001b2b4:	lea    r8,[rip+0x2a8bd]        # 0x140045b78
   14001b2bb:	jmp    0x14001b2d6
   14001b2bd:	lea    r8,[rip+0x2a88c]        # 0x140045b50
   14001b2c4:	jmp    0x14001b2d6
   14001b2c6:	lea    r8,[rip+0x2bcf3]        # 0x140046fc0
   14001b2cd:	jmp    0x14001b2d6
   14001b2cf:	lea    r8,[rip+0x2bc92]        # 0x140046f68
   14001b2d6:	dec    ecx
   14001b2d8:	je     0x14001b303
   14001b2da:	dec    ecx
   14001b2dc:	je     0x14001b2fa
   14001b2de:	sub    ecx,0x2
   14001b2e1:	je     0x14001b2f1
   14001b2e3:	cmp    ecx,0x4
   14001b2e6:	jne    0x14001b30a
   14001b2e8:	lea    rdx,[rip+0x2a871]        # 0x140045b60
   14001b2ef:	jmp    0x14001b30a
   14001b2f1:	lea    rdx,[rip+0x2a880]        # 0x140045b78
   14001b2f8:	jmp    0x14001b30a
   14001b2fa:	lea    rdx,[rip+0x2a84f]        # 0x140045b50
   14001b301:	jmp    0x14001b30a
   14001b303:	lea    rdx,[rip+0x2bcb6]        # 0x140046fc0
   14001b30a:	mov    QWORD PTR [rsp+0x88],r8
   14001b312:	mov    QWORD PTR [rsp+0x90],rdx
   14001b31a:	lea    r9,[rsp+0x88]
   14001b322:	mov    ebx,0xe123058e
   14001b327:	mov    r8d,0x2
   14001b32d:	jmp    0x14001b070
   14001b332:	mov    eax,DWORD PTR [rsp+0x48]
   14001b336:	mov    DWORD PTR [rsp+0x28],eax
   14001b33a:	lea    rax,[rsp+0x70]
   14001b33f:	mov    QWORD PTR [rsp+0x20],rax
   14001b344:	mov    r9,QWORD PTR [rsp+0x60]
   14001b349:	mov    r8d,DWORD PTR [rsp+0xa30]
   14001b351:	mov    edx,DWORD PTR [rdi+0xc]
   14001b354:	mov    rcx,r13
   14001b357:	call   0x14001c5dc
   14001b35c:	test   eax,eax
   14001b35e:	jne    0x14001b390
   14001b360:	mov    eax,r15d
   14001b363:	lock xadd DWORD PTR [rip+0x41859],eax        # 0x14005cbc4
   14001b36b:	add    eax,r15d
   14001b36e:	cmp    eax,r15d
   14001b371:	jne    0x14001b386
   14001b373:	mov    rax,QWORD PTR [rsi]
   14001b376:	xor    r9d,r9d
   14001b379:	xor    r8d,r8d
   14001b37c:	mov    edx,0xe1230545
   14001b381:	mov    rcx,rsi
   14001b384:	call   QWORD PTR [rax]
   14001b386:	mov    eax,0xe1230545
   14001b38b:	jmp    0x14001b4c7
   14001b390:	mov    r14,QWORD PTR [rsp+0x70]
   14001b395:	mov    eax,DWORD PTR [r14]
   14001b398:	mov    rcx,QWORD PTR [rsp+0x78]
   14001b39d:	mov    DWORD PTR [rcx],eax
   14001b39f:	mov    DWORD PTR [rsp+0x130],r15d
   14001b3a7:	mov    eax,DWORD PTR [rdi+0xc]
   14001b3aa:	mov    DWORD PTR [rsp+0x134],eax
   14001b3b1:	mov    eax,DWORD PTR [r14]
   14001b3b4:	mov    DWORD PTR [rsp+0x144],eax
   14001b3bb:	lea    r8,[rip+0x2a16e]        # 0x140045530
   14001b3c2:	mov    edx,0x208
   14001b3c7:	lea    rcx,[rsp+0x154]
   14001b3cf:	call   0x1400108b8
   14001b3d4:	test   eax,eax
   14001b3d6:	jns    0x14001b3e2
   14001b3d8:	mov    ebx,0xe1230fb9
   14001b3dd:	jmp    0x14001b06a
   14001b3e2:	mov    r8,QWORD PTR [rsp+0x60]
   14001b3e7:	mov    edx,0x208
   14001b3ec:	lea    rcx,[rsp+0x35c]
   14001b3f4:	call   0x1400108b8
   14001b3f9:	test   eax,eax
   14001b3fb:	jns    0x14001b407
   14001b3fd:	mov    ebx,0xe1230408
   14001b402:	jmp    0x14001b06a
   14001b407:	mov    eax,DWORD PTR [rdi+0x1070]
   14001b40d:	mov    DWORD PTR [rsp+0x148],eax
   14001b414:	mov    eax,DWORD PTR [rdi+0x106c]
   14001b41a:	mov    DWORD PTR [rsp+0x14c],eax
   14001b421:	mov    eax,DWORD PTR [rdi+0x1068]
   14001b427:	mov    DWORD PTR [rsp+0x150],eax
   14001b42e:	lea    rax,[rsp+0x80]
   14001b436:	mov    QWORD PTR [rsp+0x28],rax
   14001b43b:	lea    r9,[rsp+0x570]
   14001b443:	lea    rdx,[rsp+0x130]
   14001b44b:	mov    rcx,rbx
   14001b44e:	call   0x14001c230
   14001b453:	test   eax,eax
   14001b455:	jne    0x14001b461
   14001b457:	call   QWORD PTR [rip+0x25f7b]        # 0x1400413d8
   14001b45d:	mov    ebx,eax
   14001b45f:	jmp    0x14001b46f
   14001b461:	xor    ebx,ebx
   14001b463:	mov    eax,DWORD PTR [rsp+0x9a8]
   14001b46a:	test   eax,eax
   14001b46c:	cmovne ebx,eax
   14001b46f:	mov    eax,DWORD PTR [rsp+0x57c]
   14001b476:	mov    DWORD PTR [r12],eax
   14001b47a:	mov    DWORD PTR [r14+0x8],eax
   14001b47e:	test   ebx,ebx
   14001b480:	jne    0x14001b48e
   14001b482:	mov    DWORD PTR [rdi+0x1090],r15d
   14001b489:	jmp    0x14001b07b
   14001b48e:	mov    rax,QWORD PTR [rdi+0x940]
   14001b495:	cmp    DWORD PTR [rax+0xa4],0x2
   14001b49c:	jne    0x14001b4b1
   14001b49e:	mov    rax,QWORD PTR [rsi]
   14001b4a1:	xor    r9d,r9d
   14001b4a4:	xor    r8d,r8d
   14001b4a7:	mov    edx,0xe1230556
   14001b4ac:	mov    rcx,rsi
   14001b4af:	call   QWORD PTR [rax]
   14001b4b1:	mov    edx,DWORD PTR [r12]
   14001b4b5:	mov    rcx,r13
   14001b4b8:	call   0x14001c88c
   14001b4bd:	jmp    0x14001b07b
   14001b4c2:	mov    eax,0xe1230591
   14001b4c7:	mov    rcx,QWORD PTR [rsp+0x9b0]
   14001b4cf:	xor    rcx,rsp
   14001b4d2:	call   0x1400265a0
   14001b4d7:	lea    r11,[rsp+0x9c0]
   14001b4df:	mov    rbx,QWORD PTR [r11+0x40]
   14001b4e3:	mov    rsi,QWORD PTR [r11+0x48]
   14001b4e7:	mov    rsp,r11
   14001b4ea:	pop    r15
   14001b4ec:	pop    r14
   14001b4ee:	pop    r13
   14001b4f0:	pop    r12
   14001b4f2:	pop    rdi
   14001b4f3:	ret    
   14001b4f4:	mov    QWORD PTR [rsp+0x20],rbx
   14001b4f9:	push   rbp
   14001b4fa:	push   rsi
   14001b4fb:	push   rdi
   14001b4fc:	sub    rsp,0x8d0
   14001b503:	mov    rax,QWORD PTR [rip+0x3db7e]        # 0x140059088
   14001b50a:	xor    rax,rsp
   14001b50d:	mov    QWORD PTR [rsp+0x8c0],rax
   14001b515:	mov    rbx,rcx
   14001b518:	add    rcx,0x7a8
   14001b51f:	mov    esi,r8d
   14001b522:	mov    edi,edx
   14001b524:	call   0x14001c88c
   14001b529:	xor    ebp,ebp
   14001b52b:	test   eax,eax
   14001b52d:	je     0x14001b576
   14001b52f:	lea    rax,[rsp+0x30]
   14001b534:	lea    rcx,[rbx+0x90]
   14001b53b:	lea    r9,[rsp+0x480]
   14001b543:	lea    rdx,[rsp+0x40]
   14001b548:	mov    DWORD PTR [rsp+0x40],0x3
   14001b550:	mov    DWORD PTR [rsp+0x44],esi
   14001b554:	mov    QWORD PTR [rsp+0x28],rax
   14001b559:	mov    DWORD PTR [rsp+0x4c],edi
   14001b55d:	call   0x14001c230
   14001b562:	cmp    DWORD PTR [rsp+0x8b8],ebp
   14001b569:	cmovl  eax,ebp
   14001b56c:	test   eax,eax
   14001b56e:	je     0x14001b576
   14001b570:	mov    DWORD PTR [rbx+0x1090],ebp
   14001b576:	mov    rcx,QWORD PTR [rsp+0x8c0]
   14001b57e:	xor    rcx,rsp
   14001b581:	call   0x1400265a0
   14001b586:	mov    rbx,QWORD PTR [rsp+0x908]
   14001b58e:	add    rsp,0x8d0
   14001b595:	pop    rdi
   14001b596:	pop    rsi
   14001b597:	pop    rbp
   14001b598:	ret    
   14001b599:	int3   
   14001b59a:	int3   
   14001b59b:	int3   
   14001b59c:	mov    QWORD PTR [rsp+0x18],rbx
   14001b5a1:	push   rbp
   14001b5a2:	lea    rbp,[rsp-0x7d0]
   14001b5aa:	sub    rsp,0x8d0
   14001b5b1:	mov    rax,QWORD PTR [rip+0x3dad0]        # 0x140059088
   14001b5b8:	xor    rax,rsp
   14001b5bb:	mov    QWORD PTR [rbp+0x7c0],rax
   14001b5c2:	mov    eax,DWORD PTR [rcx+0xc]
   14001b5c5:	mov    rbx,rdx
   14001b5c8:	lea    r9,[rbp+0x380]
   14001b5cf:	mov    DWORD PTR [rsp+0x44],eax
   14001b5d3:	lea    rax,[rsp+0x30]
   14001b5d8:	lea    rdx,[rsp+0x40]
   14001b5dd:	add    rcx,0x90
   14001b5e4:	mov    DWORD PTR [rsp+0x40],0x5
   14001b5ec:	mov    QWORD PTR [rsp+0x28],rax
   14001b5f1:	call   0x14001c230
   14001b5f6:	mov    edx,eax
   14001b5f8:	test   eax,eax
   14001b5fa:	je     0x14001b71f
   14001b600:	mov    ecx,DWORD PTR [rbp+0x398]
   14001b606:	mov    eax,DWORD PTR [rbp+0x3ac]
   14001b60c:	mov    DWORD PTR [rbx],ecx
   14001b60e:	mov    ecx,DWORD PTR [rbp+0x39c]
   14001b614:	mov    DWORD PTR [rbx+0x4],ecx
   14001b617:	mov    ecx,DWORD PTR [rbp+0x3a0]
   14001b61d:	mov    DWORD PTR [rbx+0x8],ecx
   14001b620:	mov    ecx,DWORD PTR [rbp+0x3a4]
   14001b626:	mov    DWORD PTR [rbx+0xc],ecx
   14001b629:	mov    ecx,DWORD PTR [rbp+0x3a8]
   14001b62f:	mov    DWORD PTR [rbx+0x10],ecx
   14001b632:	mov    DWORD PTR [rbx+0x14],eax
   14001b635:	mov    eax,DWORD PTR [rbp+0x3b0]
   14001b63b:	mov    DWORD PTR [rbx+0x18],eax
   14001b63e:	mov    eax,DWORD PTR [rbp+0x3b4]
   14001b644:	mov    DWORD PTR [rbx+0x1c],eax
   14001b647:	mov    eax,DWORD PTR [rbp+0x3b8]
   14001b64d:	mov    DWORD PTR [rbx+0x20],eax
   14001b650:	mov    eax,DWORD PTR [rbp+0x3bc]
   14001b656:	mov    DWORD PTR [rbx+0x24],eax
   14001b659:	mov    eax,DWORD PTR [rbp+0x3c0]
   14001b65f:	mov    DWORD PTR [rbx+0x28],eax
   14001b662:	mov    eax,DWORD PTR [rbp+0x3c4]
   14001b668:	mov    DWORD PTR [rbx+0x2c],eax
   14001b66b:	mov    eax,DWORD PTR [rbp+0x3c8]
   14001b671:	mov    DWORD PTR [rbx+0x30],eax
   14001b674:	mov    eax,DWORD PTR [rbp+0x3cc]
   14001b67a:	mov    DWORD PTR [rbx+0x34],eax
   14001b67d:	mov    eax,DWORD PTR [rbp+0x3d0]
   14001b683:	mov    DWORD PTR [rbx+0x38],eax
   14001b686:	mov    eax,DWORD PTR [rbp+0x3d4]
   14001b68c:	mov    DWORD PTR [rbx+0x3c],eax
   14001b68f:	mov    eax,DWORD PTR [rbp+0x3d8]
   14001b695:	mov    DWORD PTR [rbx+0x40],eax
   14001b698:	mov    eax,DWORD PTR [rbp+0x3dc]
   14001b69e:	mov    DWORD PTR [rbx+0x44],eax
   14001b6a1:	mov    eax,DWORD PTR [rbp+0x3e0]
   14001b6a7:	mov    DWORD PTR [rbx+0x48],eax
   14001b6aa:	mov    eax,DWORD PTR [rbp+0x3e4]
   14001b6b0:	mov    DWORD PTR [rbx+0x4c],eax
   14001b6b3:	mov    eax,DWORD PTR [rbp+0x3e8]
   14001b6b9:	mov    DWORD PTR [rbx+0x50],eax
   14001b6bc:	mov    eax,DWORD PTR [rbp+0x3ec]
   14001b6c2:	mov    DWORD PTR [rbx+0x54],eax
   14001b6c5:	mov    eax,DWORD PTR [rbp+0x3f0]
   14001b6cb:	mov    DWORD PTR [rbx+0x58],eax
   14001b6ce:	mov    eax,DWORD PTR [rbp+0x3f4]
   14001b6d4:	mov    DWORD PTR [rbx+0x5c],eax
   14001b6d7:	mov    eax,DWORD PTR [rbp+0x3f8]
   14001b6dd:	mov    DWORD PTR [rbx+0x60],eax
   14001b6e0:	mov    eax,DWORD PTR [rbp+0x3fc]
   14001b6e6:	mov    DWORD PTR [rbx+0x64],eax
   14001b6e9:	mov    eax,DWORD PTR [rbp+0x400]
   14001b6ef:	mov    DWORD PTR [rbx+0x68],eax
   14001b6f2:	mov    eax,DWORD PTR [rbp+0x404]
   14001b6f8:	mov    DWORD PTR [rbx+0x6c],eax
   14001b6fb:	mov    eax,DWORD PTR [rbp+0x408]
   14001b701:	mov    DWORD PTR [rbx+0x70],eax
   14001b704:	mov    eax,DWORD PTR [rbp+0x40c]
   14001b70a:	mov    DWORD PTR [rbx+0x74],eax
   14001b70d:	mov    eax,DWORD PTR [rbp+0x410]
   14001b713:	mov    DWORD PTR [rbx+0x78],eax
   14001b716:	mov    eax,DWORD PTR [rbp+0x414]
   14001b71c:	mov    DWORD PTR [rbx+0x7c],eax
   14001b71f:	mov    eax,edx
   14001b721:	mov    rcx,QWORD PTR [rbp+0x7c0]
   14001b728:	xor    rcx,rsp
   14001b72b:	call   0x1400265a0
   14001b730:	mov    rbx,QWORD PTR [rsp+0x8f0]
   14001b738:	add    rsp,0x8d0
   14001b73f:	pop    rbp
   14001b740:	ret    
   14001b741:	int3   
   14001b742:	int3   
   14001b743:	int3   
   14001b744:	sub    rsp,0x8d8
   14001b74b:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001b754:	mov    rax,QWORD PTR [rip+0x3d92d]        # 0x140059088
   14001b75b:	xor    rax,rsp
   14001b75e:	mov    QWORD PTR [rsp+0x8c0],rax
   14001b766:	mov    DWORD PTR [rsp+0x40],0xc
   14001b76e:	mov    eax,DWORD PTR [rdx]
   14001b770:	mov    DWORD PTR [rsp+0x58],eax
   14001b774:	mov    eax,DWORD PTR [rdx+0x4]
   14001b777:	mov    DWORD PTR [rsp+0x5c],eax
   14001b77b:	mov    eax,DWORD PTR [rdx+0x8]
   14001b77e:	mov    DWORD PTR [rsp+0x60],eax
   14001b782:	mov    eax,DWORD PTR [rdx+0xc]
   14001b785:	mov    DWORD PTR [rsp+0x64],eax
   14001b789:	mov    eax,DWORD PTR [rdx+0x10]
   14001b78c:	mov    DWORD PTR [rsp+0x68],eax
   14001b790:	mov    eax,DWORD PTR [rdx+0x14]
   14001b793:	mov    DWORD PTR [rsp+0x6c],eax
   14001b797:	mov    eax,DWORD PTR [rdx+0x18]
   14001b79a:	mov    DWORD PTR [rsp+0x70],eax
   14001b79e:	add    rcx,0x90
   14001b7a5:	lea    rax,[rsp+0x30]
   14001b7aa:	mov    QWORD PTR [rsp+0x28],rax
   14001b7af:	lea    r9,[rsp+0x480]
   14001b7b7:	lea    rdx,[rsp+0x40]
   14001b7bc:	call   0x14001c230
   14001b7c1:	test   eax,eax
   14001b7c3:	je     0x14001b7dc
   14001b7c5:	mov    eax,DWORD PTR [rsp+0x8b8]
   14001b7cc:	movzx  ecx,ax
   14001b7cf:	or     ecx,0x80070000
   14001b7d5:	test   eax,eax
   14001b7d7:	cmovle ecx,eax
   14001b7da:	jmp    0x14001b7e1
   14001b7dc:	mov    ecx,0x80004005
   14001b7e1:	mov    eax,ecx
   14001b7e3:	jmp    0x14001b7ea
   14001b7e5:	mov    eax,0x80004003
   14001b7ea:	mov    rcx,QWORD PTR [rsp+0x8c0]
   14001b7f2:	xor    rcx,rsp
   14001b7f5:	call   0x1400265a0
   14001b7fa:	add    rsp,0x8d8
   14001b801:	ret    
   14001b802:	int3   
   14001b803:	int3   
   14001b804:	mov    rax,rsp
   14001b807:	mov    QWORD PTR [rax+0x10],rdx
   14001b80b:	mov    QWORD PTR [rax+0x18],r8
   14001b80f:	mov    QWORD PTR [rax+0x20],r9
   14001b813:	push   rbx
   14001b814:	push   rbp
   14001b815:	push   rsi
   14001b816:	push   rdi
   14001b817:	sub    rsp,0x28
   14001b81b:	mov    rsi,rdx
   14001b81e:	mov    rdi,rcx
   14001b821:	lea    rbp,[rax+0x18]
   14001b825:	test   rdx,rdx
   14001b828:	je     0x14001b889
   14001b82a:	mov    rdx,rbp
   14001b82d:	mov    rcx,rsi
   14001b830:	call   0x1400346ec
   14001b835:	movsxd rbx,eax
   14001b838:	test   eax,eax
   14001b83a:	js     0x14001b894
   14001b83c:	mov    rax,QWORD PTR [rdi]
   14001b83f:	mov    ecx,0x1
   14001b844:	sub    ecx,DWORD PTR [rax-0x8]
   14001b847:	mov    eax,DWORD PTR [rax-0xc]
   14001b84a:	sub    eax,ebx
   14001b84c:	or     ecx,eax
   14001b84e:	jge    0x14001b85a
   14001b850:	mov    edx,ebx
   14001b852:	mov    rcx,rdi
   14001b855:	call   0x14000dce4
   14001b85a:	mov    rcx,QWORD PTR [rdi]
   14001b85d:	lea    eax,[rbx+0x1]
   14001b860:	mov    r9,rbp
   14001b863:	movsxd rdx,eax
   14001b866:	mov    r8,rsi
   14001b869:	call   0x1400346d4
   14001b86e:	mov    rax,QWORD PTR [rdi]
   14001b871:	cmp    ebx,DWORD PTR [rax-0xc]
   14001b874:	jg     0x14001b89f
   14001b876:	mov    DWORD PTR [rax-0x10],ebx
   14001b879:	mov    rax,QWORD PTR [rdi]
   14001b87c:	mov    BYTE PTR [rbx+rax*1],0x0
   14001b880:	add    rsp,0x28
   14001b884:	pop    rdi
   14001b885:	pop    rsi
   14001b886:	pop    rbp
   14001b887:	pop    rbx
   14001b888:	ret    
   14001b889:	mov    ecx,0x80070057
   14001b88e:	call   0x14000400c
   14001b893:	int3   
   14001b894:	mov    ecx,0x80004005
   14001b899:	call   0x14000400c
   14001b89e:	int3   
   14001b89f:	mov    ecx,0x80070057
   14001b8a4:	call   0x14000400c
   14001b8a9:	int3   
   14001b8aa:	int3   
   14001b8ab:	int3   
   14001b8ac:	mov    QWORD PTR [rsp+0x8],rcx
   14001b8b1:	sub    rsp,0x38
   14001b8b5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001b8be:	lea    rax,[rip+0x2b72b]        # 0x140046ff0
   14001b8c5:	mov    QWORD PTR [rcx],rax
   14001b8c8:	add    rcx,0x10
   14001b8cc:	add    rsp,0x38
   14001b8d0:	jmp    0x140014ffc
   14001b8d5:	int3   
   14001b8d6:	int3   
   14001b8d7:	int3   
   14001b8d8:	test   r8b,0x1
   14001b8dc:	jne    0x14001b8e4
   14001b8de:	mov    eax,0xc
   14001b8e3:	ret    
   14001b8e4:	add    rcx,0x18
   14001b8e8:	mov    r8d,0x6
   14001b8ee:	mov    rax,QWORD PTR [rcx]
   14001b8f1:	rex.W jmp QWORD PTR [rax]
   14001b8f4:	add    rcx,0x18
   14001b8f8:	mov    rax,QWORD PTR [rcx]
   14001b8fb:	rex.W jmp QWORD PTR [rax+0x8]
   14001b8ff:	int3   
   14001b900:	sub    rsp,0x28
   14001b904:	mov    rcx,QWORD PTR [rcx]
   14001b907:	xor    eax,eax
   14001b909:	xchg   DWORD PTR [rcx+0x8],eax
   14001b90c:	lock or DWORD PTR [rsp],0x0
   14001b911:	mov    eax,DWORD PTR [rcx+0xc]
   14001b914:	test   eax,eax
   14001b916:	jle    0x14001b931
   14001b918:	lock or DWORD PTR [rsp],0x0
   14001b91d:	mov    eax,DWORD PTR [rcx+0xc]
   14001b920:	mov    rax,QWORD PTR [rcx]
   14001b923:	test   rax,rax
   14001b926:	je     0x14001b931
   14001b928:	mov    rcx,QWORD PTR [rcx]
   14001b92b:	call   QWORD PTR [rip+0x25d47]        # 0x140041678
   14001b931:	add    rsp,0x28
   14001b935:	ret    
   14001b936:	int3   
   14001b937:	int3   
   14001b938:	rex push rbx
   14001b93a:	sub    rsp,0x20
   14001b93e:	mov    rax,QWORD PTR [rcx]
   14001b941:	mov    rbx,rcx
   14001b944:	test   rax,rax
   14001b947:	je     0x14001b952
   14001b949:	mov    rcx,QWORD PTR [rcx]
   14001b94c:	call   QWORD PTR [rip+0x25a36]        # 0x140041388
   14001b952:	mov    QWORD PTR [rbx],0x0
   14001b959:	add    rsp,0x20
   14001b95d:	pop    rbx
   14001b95e:	ret    
   14001b95f:	int3   
   14001b960:	mov    QWORD PTR [rsp+0x8],rbx
   14001b965:	push   rdi
   14001b966:	sub    rsp,0x20
   14001b96a:	mov    ebx,edx
   14001b96c:	mov    rdi,rcx
   14001b96f:	call   0x14001b9d8
   14001b974:	test   bl,0x1
   14001b977:	je     0x14001b981
   14001b979:	mov    rcx,rdi
   14001b97c:	call   0x14002657c
   14001b981:	mov    rax,rdi
   14001b984:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b989:	add    rsp,0x20
   14001b98d:	pop    rdi
   14001b98e:	ret    
   14001b98f:	int3   
   14001b990:	mov    QWORD PTR [rsp+0x8],rbx
   14001b995:	mov    QWORD PTR [rsp+0x10],rsi
   14001b99a:	push   rdi
   14001b99b:	sub    rsp,0x20
   14001b99f:	cmp    DWORD PTR [rcx+0x4],0x0
   14001b9a3:	mov    rdi,QWORD PTR [rcx+0x8]
   14001b9a7:	jbe    0x14001b9c0
   14001b9a9:	mov    esi,DWORD PTR [rcx+0x4]
   14001b9ac:	mov    rbx,rdi
   14001b9af:	mov    rcx,QWORD PTR [rbx]
   14001b9b2:	call   0x140026c1c
   14001b9b7:	lea    rbx,[rbx+0x8]
   14001b9bb:	dec    rsi
   14001b9be:	jne    0x14001b9af
   14001b9c0:	mov    rcx,rdi
   14001b9c3:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b9c8:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b9cd:	add    rsp,0x20
   14001b9d1:	pop    rdi
   14001b9d2:	jmp    0x140026c1c
   14001b9d7:	int3   
   14001b9d8:	mov    rax,rsp
   14001b9db:	mov    QWORD PTR [rax+0x8],rcx
   14001b9df:	push   rdi
   14001b9e0:	sub    rsp,0x30
   14001b9e4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001b9ec:	mov    QWORD PTR [rax+0x10],rbx
   14001b9f0:	mov    QWORD PTR [rax+0x18],rsi
   14001b9f4:	mov    rdi,rcx
   14001b9f7:	lea    rax,[rip+0x2b60a]        # 0x140047008
   14001b9fe:	mov    QWORD PTR [rcx],rax
   14001ba01:	lea    rsi,[rcx+0x8]
   14001ba05:	jmp    0x14001ba28
   14001ba07:	mov    rbx,QWORD PTR [rsi]
   14001ba0a:	mov    rax,QWORD PTR [rbx]
   14001ba0d:	mov    QWORD PTR [rsi],rax
   14001ba10:	mov    QWORD PTR [rax+0x8],rsi
   14001ba14:	lea    rcx,[rbx+0x10]
   14001ba18:	call   0x14001b990
   14001ba1d:	mov    rcx,rbx
   14001ba20:	call   0x14002657c
   14001ba25:	dec    DWORD PTR [rdi+0x18]
   14001ba28:	cmp    QWORD PTR [rsi],rsi
   14001ba2b:	jne    0x14001ba07
   14001ba2d:	mov    rax,QWORD PTR [rdi+0x20]
   14001ba31:	test   rax,rax
   14001ba34:	je     0x14001ba40
   14001ba36:	mov    rcx,QWORD PTR [rdi+0x20]
   14001ba3a:	call   QWORD PTR [rip+0x25948]        # 0x140041388
   14001ba40:	mov    QWORD PTR [rdi+0x20],0x0
   14001ba48:	lea    rax,[rip+0x2a859]        # 0x1400462a8
   14001ba4f:	mov    QWORD PTR [rdi],rax
   14001ba52:	mov    rbx,QWORD PTR [rsp+0x48]
   14001ba57:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ba5c:	add    rsp,0x30
   14001ba60:	pop    rdi
   14001ba61:	ret    
   14001ba62:	int3   
   14001ba63:	int3   
   14001ba64:	rex push rsi
   14001ba66:	push   rdi
   14001ba67:	push   r14
   14001ba69:	sub    rsp,0x30
   14001ba6d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ba76:	mov    QWORD PTR [rsp+0x58],rbx
   14001ba7b:	mov    QWORD PTR [rsp+0x60],rbp
   14001ba80:	mov    rdi,r9
   14001ba83:	mov    esi,r8d
   14001ba86:	mov    ebx,edx
   14001ba88:	mov    rbp,rcx
   14001ba8b:	mov    ecx,0x20
   14001ba90:	call   0x140026da8
   14001ba95:	mov    r14,rax
   14001ba98:	mov    DWORD PTR [rax+0x10],ebx
   14001ba9b:	mov    DWORD PTR [rax+0x14],esi
   14001ba9e:	mov    rdx,rdi
   14001baa1:	mov    ecx,esi
   14001baa3:	call   0x140025964
   14001baa8:	mov    QWORD PTR [r14+0x18],rax
   14001baac:	lea    rbx,[rbp+0x20]
   14001bab0:	mov    QWORD PTR [rsp+0x50],rbx
   14001bab5:	mov    ecx,0x1
   14001baba:	xchg   DWORD PTR [rbx+0x8],ecx
   14001babd:	test   ecx,ecx
   14001babf:	je     0x14001bacc
   14001bac1:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bac6:	call   0x1400258b8
   14001bacb:	nop
   14001bacc:	lea    rcx,[rbp+0x8]
   14001bad0:	mov    rax,QWORD PTR [rcx+0x8]
   14001bad4:	mov    QWORD PTR [r14],rcx
   14001bad7:	mov    QWORD PTR [r14+0x8],rax
   14001badb:	mov    QWORD PTR [rax],r14
   14001bade:	mov    QWORD PTR [rcx+0x8],r14
   14001bae2:	inc    DWORD PTR [rbp+0x18]
   14001bae5:	xor    eax,eax
   14001bae7:	xchg   DWORD PTR [rbx+0x8],eax
   14001baea:	lock or DWORD PTR [rsp],0x0
   14001baef:	mov    rcx,QWORD PTR [rsp+0x50]
   14001baf4:	mov    eax,DWORD PTR [rcx+0xc]
   14001baf7:	test   eax,eax
   14001baf9:	jle    0x14001bb1e
   14001bafb:	lock or DWORD PTR [rsp],0x0
   14001bb00:	mov    eax,DWORD PTR [rcx+0xc]
   14001bb03:	mov    rax,QWORD PTR [rsp+0x50]
   14001bb08:	mov    rcx,QWORD PTR [rax]
   14001bb0b:	test   rcx,rcx
   14001bb0e:	je     0x14001bb1e
   14001bb10:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bb15:	mov    rcx,QWORD PTR [rcx]
   14001bb18:	call   QWORD PTR [rip+0x25b5a]        # 0x140041678
   14001bb1e:	mov    rbx,QWORD PTR [rsp+0x58]
   14001bb23:	mov    rbp,QWORD PTR [rsp+0x60]
   14001bb28:	add    rsp,0x30
   14001bb2c:	pop    r14
   14001bb2e:	pop    rdi
   14001bb2f:	pop    rsi
   14001bb30:	ret    
   14001bb31:	int3   
   14001bb32:	int3   
   14001bb33:	int3   
   14001bb34:	mov    rax,rsp
   14001bb37:	mov    QWORD PTR [rax+0x8],rcx
   14001bb3b:	push   rsi
   14001bb3c:	push   rdi
   14001bb3d:	push   r12
   14001bb3f:	push   r14
   14001bb41:	push   r15
   14001bb43:	sub    rsp,0x40
   14001bb47:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14001bb4f:	mov    QWORD PTR [rax+0x10],rbx
   14001bb53:	mov    QWORD PTR [rax+0x18],rbp
   14001bb57:	mov    r12,r9
   14001bb5a:	mov    ebp,r8d
   14001bb5d:	mov    ebx,edx
   14001bb5f:	mov    rsi,rcx
   14001bb62:	mov    ecx,0x20
   14001bb67:	call   0x140026da8
   14001bb6c:	mov    rdi,rax
   14001bb6f:	mov    DWORD PTR [rax+0x10],ebx
   14001bb72:	test   ebp,ebp
   14001bb74:	je     0x14001bc17
   14001bb7a:	mov    DWORD PTR [rax+0x14],ebp
   14001bb7d:	mov    r15d,ebp
   14001bb80:	mov    eax,0x8
   14001bb85:	mul    rbp
   14001bb88:	mov    rcx,0xffffffffffffffff
   14001bb8f:	cmovo  rax,rcx
   14001bb93:	mov    rcx,rax
   14001bb96:	call   0x140027888
   14001bb9b:	mov    QWORD PTR [rdi+0x18],rax
   14001bb9f:	test   ebp,ebp
   14001bba1:	je     0x14001bc20
   14001bba3:	xor    r14d,r14d
   14001bba6:	or     rsi,0xffffffffffffffff
   14001bbaa:	and    DWORD PTR [rsp+0x28],0x0
   14001bbaf:	and    QWORD PTR [rsp+0x20],0x0
   14001bbb5:	mov    r9d,esi
   14001bbb8:	mov    r8,QWORD PTR [r14+r12*1]
   14001bbbc:	xor    edx,edx
   14001bbbe:	xor    ecx,ecx
   14001bbc0:	call   QWORD PTR [rip+0x25762]        # 0x140041328
   14001bbc6:	movsxd rbx,eax
   14001bbc9:	mov    eax,0x2
   14001bbce:	mul    rbx
   14001bbd1:	cmovo  rax,rsi
   14001bbd5:	mov    rcx,rax
   14001bbd8:	call   0x140027888
   14001bbdd:	mov    rcx,QWORD PTR [rdi+0x18]
   14001bbe1:	mov    QWORD PTR [r14+rcx*1],rax
   14001bbe5:	mov    rax,QWORD PTR [rdi+0x18]
   14001bbe9:	mov    DWORD PTR [rsp+0x28],ebx
   14001bbed:	mov    rax,QWORD PTR [rax+r14*1]
   14001bbf1:	mov    QWORD PTR [rsp+0x20],rax
   14001bbf6:	mov    r9d,esi
   14001bbf9:	mov    r8,QWORD PTR [r14+r12*1]
   14001bbfd:	xor    edx,edx
   14001bbff:	xor    ecx,ecx
   14001bc01:	call   QWORD PTR [rip+0x25721]        # 0x140041328
   14001bc07:	lea    r14,[r14+0x8]
   14001bc0b:	dec    r15
   14001bc0e:	jne    0x14001bbaa
   14001bc10:	mov    rsi,QWORD PTR [rsp+0x70]
   14001bc15:	jmp    0x14001bc20
   14001bc17:	and    DWORD PTR [rax+0x14],0x0
   14001bc1b:	and    QWORD PTR [rax+0x18],0x0
   14001bc20:	lea    rbx,[rsi+0x20]
   14001bc24:	mov    QWORD PTR [rsp+0x70],rbx
   14001bc29:	mov    eax,0x1
   14001bc2e:	xchg   DWORD PTR [rbx+0x8],eax
   14001bc31:	test   eax,eax
   14001bc33:	je     0x14001bc40
   14001bc35:	mov    rcx,QWORD PTR [rsp+0x70]
   14001bc3a:	call   0x1400258b8
   14001bc3f:	nop
   14001bc40:	lea    rcx,[rsi+0x8]
   14001bc44:	mov    rax,QWORD PTR [rcx+0x8]
   14001bc48:	mov    QWORD PTR [rdi],rcx
   14001bc4b:	mov    QWORD PTR [rdi+0x8],rax
   14001bc4f:	mov    QWORD PTR [rax],rdi
   14001bc52:	mov    QWORD PTR [rcx+0x8],rdi
   14001bc56:	inc    DWORD PTR [rsi+0x18]
   14001bc59:	xor    eax,eax
   14001bc5b:	xchg   DWORD PTR [rbx+0x8],eax
   14001bc5e:	lock or DWORD PTR [rsp],0x0
   14001bc63:	mov    rcx,QWORD PTR [rsp+0x70]
   14001bc68:	mov    eax,DWORD PTR [rcx+0xc]
   14001bc6b:	test   eax,eax
   14001bc6d:	jle    0x14001bc92
   14001bc6f:	lock or DWORD PTR [rsp],0x0
   14001bc74:	mov    eax,DWORD PTR [rcx+0xc]
   14001bc77:	mov    rax,QWORD PTR [rsp+0x70]
   14001bc7c:	mov    rcx,QWORD PTR [rax]
   14001bc7f:	test   rcx,rcx
   14001bc82:	je     0x14001bc92
   14001bc84:	mov    rcx,QWORD PTR [rsp+0x70]
   14001bc89:	mov    rcx,QWORD PTR [rcx]
   14001bc8c:	call   QWORD PTR [rip+0x259e6]        # 0x140041678
   14001bc92:	lea    r11,[rsp+0x40]
   14001bc97:	mov    rbx,QWORD PTR [r11+0x38]
   14001bc9b:	mov    rbp,QWORD PTR [r11+0x40]
   14001bc9f:	mov    rsp,r11
   14001bca2:	pop    r15
   14001bca4:	pop    r14
   14001bca6:	pop    r12
   14001bca8:	pop    rdi
   14001bca9:	pop    rsi
   14001bcaa:	ret    
   14001bcab:	int3   
   14001bcac:	mov    rax,rsp
   14001bcaf:	push   rdi
   14001bcb0:	push   r14
   14001bcb2:	push   r15
   14001bcb4:	sub    rsp,0x30
   14001bcb8:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001bcc0:	mov    QWORD PTR [rax+0x10],rbx
   14001bcc4:	mov    QWORD PTR [rax+0x18],rbp
   14001bcc8:	mov    QWORD PTR [rax+0x20],rsi
   14001bccc:	mov    esi,r8d
   14001bccf:	mov    rbp,rdx
   14001bcd2:	mov    rdi,rcx
   14001bcd5:	lea    rbx,[rcx+0x20]
   14001bcd9:	mov    QWORD PTR [rax+0x8],rbx
   14001bcdd:	mov    eax,0x1
   14001bce2:	xchg   DWORD PTR [rbx+0x8],eax
   14001bce5:	test   eax,eax
   14001bce7:	je     0x14001bcf4
   14001bce9:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bcee:	call   0x1400258b8
   14001bcf3:	nop
   14001bcf4:	test   esi,esi
   14001bcf6:	jne    0x14001bd2e
   14001bcf8:	mov    eax,DWORD PTR [rdi+0x18]
   14001bcfb:	mov    DWORD PTR [rbp+0x18],eax
   14001bcfe:	lea    rcx,[rbp+0x8]
   14001bd02:	lea    rdx,[rdi+0x8]
   14001bd06:	mov    rax,QWORD PTR [rdx+0x8]
   14001bd0a:	mov    QWORD PTR [rcx],rdx
   14001bd0d:	mov    QWORD PTR [rcx+0x8],rax
   14001bd11:	mov    QWORD PTR [rax],rcx
   14001bd14:	mov    QWORD PTR [rdx+0x8],rcx
   14001bd18:	mov    rax,QWORD PTR [rdx]
   14001bd1b:	mov    QWORD PTR [rcx],rax
   14001bd1e:	mov    QWORD PTR [rax+0x8],rcx
   14001bd22:	mov    QWORD PTR [rdx+0x8],rdx
   14001bd26:	mov    QWORD PTR [rdx],rdx
   14001bd29:	and    DWORD PTR [rdi+0x18],esi
   14001bd2c:	jmp    0x14001bd84
   14001bd2e:	lea    r14,[rdi+0x8]
   14001bd32:	mov    rsi,QWORD PTR [r14]
   14001bd35:	cmp    rsi,r14
   14001bd38:	je     0x14001bd84
   14001bd3a:	lea    r15,[rbp+0x8]
   14001bd3e:	mov    ecx,0x20
   14001bd43:	call   0x140026da8
   14001bd48:	mov    rdi,rax
   14001bd4b:	mov    ecx,DWORD PTR [rsi+0x10]
   14001bd4e:	mov    DWORD PTR [rax+0x10],ecx
   14001bd51:	mov    ecx,DWORD PTR [rsi+0x14]
   14001bd54:	mov    DWORD PTR [rax+0x14],ecx
   14001bd57:	mov    rdx,QWORD PTR [rsi+0x18]
   14001bd5b:	mov    ecx,DWORD PTR [rsi+0x14]
   14001bd5e:	call   0x140025964
   14001bd63:	mov    QWORD PTR [rdi+0x18],rax
   14001bd67:	mov    rcx,QWORD PTR [r15+0x8]
   14001bd6b:	mov    QWORD PTR [rdi],r15
   14001bd6e:	mov    QWORD PTR [rdi+0x8],rcx
   14001bd72:	mov    QWORD PTR [rcx],rdi
   14001bd75:	mov    QWORD PTR [r15+0x8],rdi
   14001bd79:	inc    DWORD PTR [rbp+0x18]
   14001bd7c:	mov    rsi,QWORD PTR [rsi]
   14001bd7f:	cmp    rsi,r14
   14001bd82:	jne    0x14001bd3e
   14001bd84:	xor    eax,eax
   14001bd86:	xchg   DWORD PTR [rbx+0x8],eax
   14001bd89:	lock or DWORD PTR [rsp],0x0
   14001bd8e:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bd93:	mov    eax,DWORD PTR [rcx+0xc]
   14001bd96:	test   eax,eax
   14001bd98:	jle    0x14001bdbd
   14001bd9a:	lock or DWORD PTR [rsp],0x0
   14001bd9f:	mov    eax,DWORD PTR [rcx+0xc]
   14001bda2:	mov    rax,QWORD PTR [rsp+0x50]
   14001bda7:	mov    rcx,QWORD PTR [rax]
   14001bdaa:	test   rcx,rcx
   14001bdad:	je     0x14001bdbd
   14001bdaf:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bdb4:	mov    rcx,QWORD PTR [rcx]
   14001bdb7:	call   QWORD PTR [rip+0x258bb]        # 0x140041678
   14001bdbd:	mov    rbx,QWORD PTR [rsp+0x58]
   14001bdc2:	mov    rbp,QWORD PTR [rsp+0x60]
   14001bdc7:	mov    rsi,QWORD PTR [rsp+0x68]
   14001bdcc:	add    rsp,0x30
   14001bdd0:	pop    r15
   14001bdd2:	pop    r14
   14001bdd4:	pop    rdi
   14001bdd5:	ret    
   14001bdd6:	int3   
   14001bdd7:	int3   
   14001bdd8:	mov    rax,rsp
   14001bddb:	push   rdi
   14001bddc:	sub    rsp,0x30
   14001bde0:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001bde8:	mov    QWORD PTR [rax+0x10],rbx
   14001bdec:	mov    QWORD PTR [rax+0x18],rbp
   14001bdf0:	mov    QWORD PTR [rax+0x20],rsi
   14001bdf4:	mov    rbp,rdx
   14001bdf7:	mov    rsi,rcx
   14001bdfa:	lea    rbx,[rcx+0x20]
   14001bdfe:	mov    QWORD PTR [rax+0x8],rbx
   14001be02:	mov    edi,0x1
   14001be07:	mov    eax,edi
   14001be09:	xchg   DWORD PTR [rbx+0x8],eax
   14001be0c:	test   eax,eax
   14001be0e:	je     0x14001be1b
   14001be10:	mov    rcx,QWORD PTR [rsp+0x40]
   14001be15:	call   0x1400258b8
   14001be1a:	nop
   14001be1b:	lea    rcx,[rsi+0x8]
   14001be1f:	mov    rdx,QWORD PTR [rcx]
   14001be22:	cmp    rdx,rcx
   14001be25:	jne    0x14001be2b
   14001be27:	xor    edi,edi
   14001be29:	jmp    0x14001be4a
   14001be2b:	mov    rax,QWORD PTR [rdx]
   14001be2e:	mov    QWORD PTR [rcx],rax
   14001be31:	mov    QWORD PTR [rax+0x8],rcx
   14001be35:	movups xmm0,XMMWORD PTR [rdx+0x10]
   14001be39:	movdqu XMMWORD PTR [rbp+0x0],xmm0
   14001be3e:	dec    DWORD PTR [rsi+0x18]
   14001be41:	mov    rcx,rdx
   14001be44:	call   0x14002657c
   14001be49:	nop
   14001be4a:	xor    eax,eax
   14001be4c:	xchg   DWORD PTR [rbx+0x8],eax
   14001be4f:	lock or DWORD PTR [rsp],0x0
   14001be54:	mov    rcx,QWORD PTR [rsp+0x40]
   14001be59:	mov    eax,DWORD PTR [rcx+0xc]
   14001be5c:	test   eax,eax
   14001be5e:	jle    0x14001be83
   14001be60:	lock or DWORD PTR [rsp],0x0
   14001be65:	mov    ecx,DWORD PTR [rcx+0xc]
   14001be68:	mov    rcx,QWORD PTR [rsp+0x40]
   14001be6d:	mov    rdx,QWORD PTR [rcx]
   14001be70:	test   rdx,rdx
   14001be73:	je     0x14001be83
   14001be75:	mov    rcx,QWORD PTR [rsp+0x40]
   14001be7a:	mov    rcx,QWORD PTR [rcx]
   14001be7d:	call   QWORD PTR [rip+0x257f5]        # 0x140041678
   14001be83:	mov    eax,edi
   14001be85:	mov    rbx,QWORD PTR [rsp+0x48]
   14001be8a:	mov    rbp,QWORD PTR [rsp+0x50]
   14001be8f:	mov    rsi,QWORD PTR [rsp+0x58]
   14001be94:	add    rsp,0x30
   14001be98:	pop    rdi
   14001be99:	ret    
   14001be9a:	int3   
   14001be9b:	int3   
   14001be9c:	mov    QWORD PTR [rsp+0x8],rcx
   14001bea1:	push   rbx
   14001bea2:	sub    rsp,0x30
   14001bea6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001beaf:	mov    rbx,rcx
   14001beb2:	lea    rax,[rip+0x2b187]        # 0x140047040
   14001beb9:	mov    QWORD PTR [rcx],rax
   14001bebc:	and    QWORD PTR [rcx+0x2e0],0x0
   14001bec4:	and    QWORD PTR [rcx+0x2e8],0x0
   14001becc:	add    rcx,0x2d0
   14001bed3:	call   0x14002582c
   14001bed8:	nop
   14001bed9:	lea    rcx,[rbx+0x2c0]
   14001bee0:	call   0x14002582c
   14001bee5:	nop
   14001bee6:	lea    rcx,[rbx+0x2a8]
   14001beed:	call   0x140015774
   14001bef2:	nop
   14001bef3:	lea    rcx,[rbx+0x290]
   14001befa:	call   0x140015774
   14001beff:	nop
   14001bf00:	lea    rcx,[rbx+0x150]
   14001bf07:	call   0x140014ffc
   14001bf0c:	nop
   14001bf0d:	lea    rcx,[rbx+0x10]
   14001bf11:	add    rsp,0x30
   14001bf15:	pop    rbx
   14001bf16:	jmp    0x140014ffc
   14001bf1b:	int3   
   14001bf1c:	mov    QWORD PTR [rsp+0x10],rbx
   14001bf21:	mov    QWORD PTR [rsp+0x18],rsi
   14001bf26:	push   rdi
   14001bf27:	sub    rsp,0x270
   14001bf2e:	mov    rax,QWORD PTR [rip+0x3d153]        # 0x140059088
   14001bf35:	xor    rax,rsp
   14001bf38:	mov    QWORD PTR [rsp+0x260],rax
   14001bf40:	mov    DWORD PTR [rcx+0xc],edx
   14001bf43:	mov    rdx,QWORD PTR [rip+0x40cd6]        # 0x14005cc20
   14001bf4a:	lea    rbx,[rcx+0x150]
   14001bf51:	mov    esi,0x1
   14001bf56:	mov    rdi,rcx
   14001bf59:	mov    r8d,0x4b8
   14001bf5f:	mov    rcx,rbx
   14001bf62:	mov    r9d,esi
   14001bf65:	mov    DWORD PTR [rsp+0x28],esi
   14001bf69:	and    DWORD PTR [rsp+0x20],0x0
   14001bf6e:	call   0x1400150ac
   14001bf73:	mov    rax,QWORD PTR [rbx]
   14001bf76:	mov    rcx,rbx
   14001bf79:	call   QWORD PTR [rax+0x8]
   14001bf7c:	mov    DWORD PTR [rsp+0x28],esi
   14001bf80:	mov    r9d,esi
   14001bf83:	lea    rcx,[rax+0x490]
   14001bf8a:	add    rax,0x48c
   14001bf90:	mov    r8d,0x440
   14001bf96:	mov    QWORD PTR [rdi+0x2e8],rcx
   14001bf9d:	mov    QWORD PTR [rdi+0x2e0],rax
   14001bfa4:	mov    rdx,QWORD PTR [rip+0x40c8d]        # 0x14005cc38
   14001bfab:	lea    rcx,[rdi+0x10]
   14001bfaf:	cmp    DWORD PTR [rdi+0x8],esi
   14001bfb2:	jne    0x14001c05a
   14001bfb8:	mov    DWORD PTR [rsp+0x20],esi
   14001bfbc:	call   0x1400150ac
   14001bfc1:	mov    rdx,QWORD PTR [rip+0x40c18]        # 0x14005cbe0
   14001bfc8:	lea    rcx,[rdi+0x290]
   14001bfcf:	call   0x1400157c4
   14001bfd4:	test   eax,eax
   14001bfd6:	je     0x14001c0fc
   14001bfdc:	mov    rdx,QWORD PTR [rip+0x40c05]        # 0x14005cbe8
   14001bfe3:	lea    rcx,[rdi+0x2a8]
   14001bfea:	call   0x1400157c4
   14001bfef:	test   eax,eax
   14001bff1:	je     0x14001c127
   14001bff7:	mov    r8,QWORD PTR [rip+0x40c42]        # 0x14005cc40
   14001bffe:	xor    edx,edx
   14001c000:	xor    ecx,ecx
   14001c002:	lea    rbx,[rdi+0x2c0]
   14001c009:	call   QWORD PTR [rip+0x252a9]        # 0x1400412b8
   14001c00f:	mov    QWORD PTR [rbx+0x8],rax
   14001c013:	test   rax,rax
   14001c016:	je     0x14001c020
   14001c018:	mov    rcx,rbx
   14001c01b:	call   0x14002586c
   14001c020:	test   eax,eax
   14001c022:	je     0x14001c152
   14001c028:	mov    r8,QWORD PTR [rip+0x40c31]        # 0x14005cc60
   14001c02f:	xor    edx,edx
   14001c031:	xor    ecx,ecx
   14001c033:	lea    rbx,[rdi+0x2d0]
   14001c03a:	call   QWORD PTR [rip+0x25278]        # 0x1400412b8
   14001c040:	mov    QWORD PTR [rbx+0x8],rax
   14001c044:	test   rax,rax
   14001c047:	je     0x14001c051
   14001c049:	mov    rcx,rbx
   14001c04c:	call   0x14002586c
   14001c051:	test   eax,eax
   14001c053:	jne    0x14001c0ca
   14001c055:	jmp    0x14001c17d
   14001c05a:	and    DWORD PTR [rsp+0x20],0x0
   14001c05f:	call   0x1400150ac
   14001c064:	mov    rdx,QWORD PTR [rip+0x40b75]        # 0x14005cbe0
   14001c06b:	mov    ebx,0x100002
   14001c070:	lea    rcx,[rdi+0x290]
   14001c077:	mov    r9d,ebx
   14001c07a:	call   0x140015830
   14001c07f:	mov    rdx,QWORD PTR [rip+0x40b62]        # 0x14005cbe8
   14001c086:	lea    rcx,[rdi+0x2a8]
   14001c08d:	mov    r9d,ebx
   14001c090:	call   0x140015830
   14001c095:	mov    r8,QWORD PTR [rip+0x40ba4]        # 0x14005cc40
   14001c09c:	mov    ebx,0x100001
   14001c0a1:	mov    ecx,ebx
   14001c0a3:	xor    edx,edx
   14001c0a5:	call   QWORD PTR [rip+0x2526d]        # 0x140041318
   14001c0ab:	xor    edx,edx
   14001c0ad:	mov    ecx,ebx
   14001c0af:	mov    QWORD PTR [rdi+0x2c8],rax
   14001c0b6:	mov    r8,QWORD PTR [rip+0x40ba3]        # 0x14005cc60
   14001c0bd:	call   QWORD PTR [rip+0x25255]        # 0x140041318
   14001c0c3:	mov    QWORD PTR [rdi+0x2d8],rax
   14001c0ca:	mov    rax,QWORD PTR [rdi+0x2e0]
   14001c0d1:	mov    DWORD PTR [rax],0x440
   14001c0d7:	mov    rcx,QWORD PTR [rsp+0x260]
   14001c0df:	xor    rcx,rsp
   14001c0e2:	call   0x1400265a0
   14001c0e7:	lea    r11,[rsp+0x270]
   14001c0ef:	mov    rbx,QWORD PTR [r11+0x18]
   14001c0f3:	mov    rsi,QWORD PTR [r11+0x20]
   14001c0f7:	mov    rsp,r11
   14001c0fa:	pop    rdi
   14001c0fb:	ret    
   14001c0fc:	call   QWORD PTR [rip+0x252d6]        # 0x1400413d8
   14001c102:	mov    r8,QWORD PTR [rip+0x40ad7]        # 0x14005cbe0
   14001c109:	lea    rcx,[rsp+0x40]
   14001c10e:	mov    edx,eax
   14001c110:	call   0x140010930
   14001c115:	lea    rdx,[rip+0x3a0bc]        # 0x1400561d8
   14001c11c:	lea    rcx,[rsp+0x40]
   14001c121:	call   0x140029fe8
   14001c126:	int3   
   14001c127:	call   QWORD PTR [rip+0x252ab]        # 0x1400413d8
   14001c12d:	mov    r8,QWORD PTR [rip+0x40ab4]        # 0x14005cbe8
   14001c134:	lea    rcx,[rsp+0x40]
   14001c139:	mov    edx,eax
   14001c13b:	call   0x140010930
   14001c140:	lea    rdx,[rip+0x3a091]        # 0x1400561d8
   14001c147:	lea    rcx,[rsp+0x40]
   14001c14c:	call   0x140029fe8
   14001c151:	int3   
   14001c152:	call   QWORD PTR [rip+0x25280]        # 0x1400413d8
   14001c158:	mov    r8,QWORD PTR [rip+0x40ae1]        # 0x14005cc40
   14001c15f:	lea    rcx,[rsp+0x40]
   14001c164:	mov    edx,eax
   14001c166:	call   0x140010930
   14001c16b:	lea    rdx,[rip+0x3a066]        # 0x1400561d8
   14001c172:	lea    rcx,[rsp+0x40]
   14001c177:	call   0x140029fe8
   14001c17c:	int3   
   14001c17d:	call   QWORD PTR [rip+0x25255]        # 0x1400413d8
   14001c183:	mov    r8,QWORD PTR [rip+0x40ad6]        # 0x14005cc60
   14001c18a:	lea    rcx,[rsp+0x40]
   14001c18f:	mov    edx,eax
   14001c191:	call   0x140010930
   14001c196:	lea    rdx,[rip+0x3a03b]        # 0x1400561d8
   14001c19d:	lea    rcx,[rsp+0x40]
   14001c1a2:	call   0x140029fe8
   14001c1a7:	int3   
   14001c1a8:	mov    rax,rsp
   14001c1ab:	mov    QWORD PTR [rax+0x8],rbx
   14001c1af:	mov    QWORD PTR [rax+0x10],rbp
   14001c1b3:	mov    QWORD PTR [rax+0x18],rsi
   14001c1b7:	mov    QWORD PTR [rax+0x20],rdi
   14001c1bb:	push   r14
   14001c1bd:	sub    rsp,0x20
   14001c1c1:	mov    rbx,rcx
   14001c1c4:	add    rcx,0x10
   14001c1c8:	mov    r14,r9
   14001c1cb:	mov    rax,QWORD PTR [rcx]
   14001c1ce:	mov    edi,r8d
   14001c1d1:	mov    rbp,rdx
   14001c1d4:	call   QWORD PTR [rax+0x8]
   14001c1d7:	mov    rcx,QWORD PTR [rbx+0x2e0]
   14001c1de:	cmp    DWORD PTR [rcx],edi
   14001c1e0:	mov    rsi,rax
   14001c1e3:	cmovb  edi,DWORD PTR [rcx]
   14001c1e6:	test   rbp,rbp
   14001c1e9:	je     0x14001c213
   14001c1eb:	mov    r8d,edi
   14001c1ee:	mov    rdx,rax
   14001c1f1:	mov    rcx,rbp
   14001c1f4:	call   0x1400265d0
   14001c1f9:	mov    r8d,edi
   14001c1fc:	mov    edx,0xcc
   14001c201:	mov    rcx,rsi
   14001c204:	mov    DWORD PTR [r14],edi
   14001c207:	call   0x14002bb90
   14001c20c:	mov    eax,0x1
   14001c211:	jmp    0x14001c215
   14001c213:	xor    eax,eax
   14001c215:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c21a:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c21f:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c224:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c229:	add    rsp,0x20
   14001c22d:	pop    r14
   14001c22f:	ret    
   14001c230:	mov    r11,rsp
   14001c233:	mov    QWORD PTR [r11+0x8],rbx
   14001c237:	mov    QWORD PTR [r11+0x10],rbp
   14001c23b:	mov    QWORD PTR [r11+0x18],rsi
   14001c23f:	push   rdi
   14001c240:	push   r14
   14001c242:	push   r15
   14001c244:	sub    rsp,0x50
   14001c248:	mov    rax,QWORD PTR [rcx+0x298]
   14001c24f:	mov    r8,QWORD PTR [rcx+0x2d8]
   14001c256:	mov    r14d,0xa
   14001c25c:	mov    QWORD PTR [r11-0x38],rax
   14001c260:	mov    rax,QWORD PTR [rcx+0x2c8]
   14001c267:	mov    rbp,r9
   14001c26a:	mov    r15,rdx
   14001c26d:	mov    rbx,rcx
   14001c270:	mov    QWORD PTR [r11-0x30],r8
   14001c274:	mov    QWORD PTR [r11-0x28],rax
   14001c278:	mov    QWORD PTR [r11-0x20],r8
   14001c27c:	lea    edi,[r14-0x9]
   14001c280:	xor    r8d,r8d
   14001c283:	lea    rdx,[rsp+0x40]
   14001c288:	or     r9d,0xffffffff
   14001c28c:	lea    ecx,[r8+0x2]
   14001c290:	sub    r14d,edi
   14001c293:	call   QWORD PTR [rip+0x25417]        # 0x1400416b0
   14001c299:	test   eax,eax
   14001c29b:	je     0x14001c2cc
   14001c29d:	sub    eax,0x80
   14001c2a2:	jne    0x14001c37c
   14001c2a8:	lea    rdx,[rsp+0x30]
   14001c2ad:	lea    ecx,[rax+0x2]
   14001c2b0:	mov    r9d,0xbb8
   14001c2b6:	xor    r8d,r8d
   14001c2b9:	call   QWORD PTR [rip+0x253f1]        # 0x1400416b0
   14001c2bf:	dec    eax
   14001c2c1:	test   eax,0xffffff7f
   14001c2c6:	je     0x14001c3c7
   14001c2cc:	lea    rcx,[rbx+0x10]
   14001c2d0:	mov    rax,QWORD PTR [rcx]
   14001c2d3:	call   QWORD PTR [rax+0x8]
   14001c2d6:	mov    rcx,QWORD PTR [rbx+0x2e0]
   14001c2dd:	mov    esi,0x440
   14001c2e2:	cmp    DWORD PTR [rcx],esi
   14001c2e4:	cmovb  esi,DWORD PTR [rcx]
   14001c2e7:	test   r15,r15
   14001c2ea:	je     0x14001c34a
   14001c2ec:	mov    r8d,esi
   14001c2ef:	mov    rdx,r15
   14001c2f2:	mov    rcx,rax
   14001c2f5:	call   0x1400265d0
   14001c2fa:	mov    rax,QWORD PTR [rbx+0x2e8]
   14001c301:	mov    DWORD PTR [rax],esi
   14001c303:	mov    rcx,QWORD PTR [rbx+0x298]
   14001c30a:	call   QWORD PTR [rip+0x25378]        # 0x140041688
   14001c310:	test   eax,eax
   14001c312:	je     0x14001c34a
   14001c314:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14001c31b:	call   QWORD PTR [rip+0x25357]        # 0x140041678
   14001c321:	test   eax,eax
   14001c323:	je     0x14001c34a
   14001c325:	xor    r8d,r8d
   14001c328:	lea    rdx,[rsp+0x30]
   14001c32d:	or     r9d,0xffffffff
   14001c331:	lea    ecx,[r8+0x2]
   14001c335:	call   QWORD PTR [rip+0x25375]        # 0x1400416b0
   14001c33b:	cmp    eax,edi
   14001c33d:	je     0x14001c3ba
   14001c33f:	cmp    eax,0x81
   14001c344:	je     0x14001c3ba
   14001c346:	test   eax,eax
   14001c348:	je     0x14001c384
   14001c34a:	mov    rcx,QWORD PTR [rbx+0x2c8]
   14001c351:	call   QWORD PTR [rip+0x24f29]        # 0x140041280
   14001c357:	test   r14d,r14d
   14001c35a:	jg     0x14001c280
   14001c360:	xor    eax,eax
   14001c362:	lea    r11,[rsp+0x50]
   14001c367:	mov    rbx,QWORD PTR [r11+0x20]
   14001c36b:	mov    rbp,QWORD PTR [r11+0x28]
   14001c36f:	mov    rsi,QWORD PTR [r11+0x30]
   14001c373:	mov    rsp,r11
   14001c376:	pop    r15
   14001c378:	pop    r14
   14001c37a:	pop    rdi
   14001c37b:	ret    
   14001c37c:	dec    eax
   14001c37e:	jne    0x14001c360
   14001c380:	xor    edi,edi
   14001c382:	jmp    0x14001c3c7
   14001c384:	mov    rax,QWORD PTR [rbx+0x2e8]
   14001c38b:	mov    r9,QWORD PTR [rsp+0x98]
   14001c393:	mov    rdx,rbp
   14001c396:	cmp    DWORD PTR [rax],0x440
   14001c39c:	mov    rcx,rbx
   14001c39f:	ja     0x14001c3a6
   14001c3a1:	mov    r8d,DWORD PTR [rax]
   14001c3a4:	jmp    0x14001c3ac
   14001c3a6:	mov    r8d,0x440
   14001c3ac:	call   0x14001c1a8
   14001c3b1:	mov    rcx,QWORD PTR [rbx+0x2c8]
   14001c3b8:	jmp    0x14001c3ce
   14001c3ba:	mov    rcx,QWORD PTR [rbx+0x2c8]
   14001c3c1:	call   QWORD PTR [rip+0x24eb9]        # 0x140041280
   14001c3c7:	mov    rcx,QWORD PTR [rbx+0x2d8]
   14001c3ce:	call   QWORD PTR [rip+0x24eac]        # 0x140041280
   14001c3d4:	mov    eax,edi
   14001c3d6:	jmp    0x14001c362
   14001c3d8:	mov    QWORD PTR [rsp+0x8],rbx
   14001c3dd:	push   rdi
   14001c3de:	sub    rsp,0x20
   14001c3e2:	mov    rbx,rdx
   14001c3e5:	mov    rdi,rcx
   14001c3e8:	test   r8b,0x1
   14001c3ec:	jne    0x14001c3f5
   14001c3ee:	mov    eax,0xc
   14001c3f3:	jmp    0x14001c464
   14001c3f5:	add    rcx,0x290
   14001c3fc:	mov    r8d,0x100002
   14001c402:	mov    rax,QWORD PTR [rcx]
   14001c405:	call   QWORD PTR [rax]
   14001c407:	test   eax,eax
   14001c409:	jne    0x14001c464
   14001c40b:	lea    rcx,[rdi+0x2a8]
   14001c412:	mov    r8d,0x100002
   14001c418:	mov    rdx,rbx
   14001c41b:	mov    rax,QWORD PTR [rcx]
   14001c41e:	call   QWORD PTR [rax]
   14001c420:	test   eax,eax
   14001c422:	jne    0x14001c464
   14001c424:	lea    rcx,[rdi+0x2c0]
   14001c42b:	mov    r8d,0x100001
   14001c431:	mov    rdx,rbx
   14001c434:	mov    rax,QWORD PTR [rcx]
   14001c437:	call   QWORD PTR [rax]
   14001c439:	test   eax,eax
   14001c43b:	jne    0x14001c464
   14001c43d:	lea    rcx,[rdi+0x2d0]
   14001c444:	mov    r8d,0x100001
   14001c44a:	mov    rdx,rbx
   14001c44d:	mov    rax,QWORD PTR [rcx]
   14001c450:	call   QWORD PTR [rax]
   14001c452:	lea    rcx,[rdi+0x18]
   14001c456:	mov    r8d,0x6
   14001c45c:	mov    rax,QWORD PTR [rcx]
   14001c45f:	mov    rdx,rbx
   14001c462:	call   QWORD PTR [rax]
   14001c464:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c469:	add    rsp,0x20
   14001c46d:	pop    rdi
   14001c46e:	ret    
   14001c46f:	int3   
   14001c470:	mov    QWORD PTR [rsp+0x18],rbx
   14001c475:	push   rdi
   14001c476:	sub    rsp,0x40
   14001c47a:	mov    rax,QWORD PTR [rip+0x3cc07]        # 0x140059088
   14001c481:	xor    rax,rsp
   14001c484:	mov    QWORD PTR [rsp+0x38],rax
   14001c489:	mov    rbx,rcx
   14001c48c:	add    rcx,0x290
   14001c493:	mov    rdi,rdx
   14001c496:	mov    rax,QWORD PTR [rcx]
   14001c499:	call   QWORD PTR [rax+0x8]
   14001c49c:	lea    rcx,[rbx+0x2a8]
   14001c4a3:	mov    rdx,rdi
   14001c4a6:	mov    DWORD PTR [rsp+0x20],eax
   14001c4aa:	mov    rax,QWORD PTR [rcx]
   14001c4ad:	call   QWORD PTR [rax+0x8]
   14001c4b0:	lea    rcx,[rbx+0x2c0]
   14001c4b7:	mov    rdx,rdi
   14001c4ba:	mov    DWORD PTR [rsp+0x24],eax
   14001c4be:	mov    rax,QWORD PTR [rcx]
   14001c4c1:	call   QWORD PTR [rax+0x8]
   14001c4c4:	lea    rcx,[rbx+0x2d0]
   14001c4cb:	mov    rdx,rdi
   14001c4ce:	mov    DWORD PTR [rsp+0x28],eax
   14001c4d2:	mov    rax,QWORD PTR [rcx]
   14001c4d5:	call   QWORD PTR [rax+0x8]
   14001c4d8:	lea    rcx,[rbx+0x18]
   14001c4dc:	mov    rdx,rdi
   14001c4df:	mov    DWORD PTR [rsp+0x2c],eax
   14001c4e3:	mov    rax,QWORD PTR [rcx]
   14001c4e6:	call   QWORD PTR [rax+0x8]
   14001c4e9:	lea    rcx,[rsp+0x20]
   14001c4ee:	mov    DWORD PTR [rsp+0x30],eax
   14001c4f2:	xor    eax,eax
   14001c4f4:	mov    edx,DWORD PTR [rcx]
   14001c4f6:	test   edx,edx
   14001c4f8:	jne    0x14001c509
   14001c4fa:	inc    eax
   14001c4fc:	add    rcx,0x4
   14001c500:	cmp    eax,0x5
   14001c503:	jb     0x14001c4f4
   14001c505:	xor    eax,eax
   14001c507:	jmp    0x14001c50b
   14001c509:	mov    eax,edx
   14001c50b:	mov    rcx,QWORD PTR [rsp+0x38]
   14001c510:	xor    rcx,rsp
   14001c513:	call   0x1400265a0
   14001c518:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c51d:	add    rsp,0x40
   14001c521:	pop    rdi
   14001c522:	ret    
   14001c523:	int3   
   14001c524:	mov    QWORD PTR [rsp+0x8],rbx
   14001c529:	mov    eax,0x104
   14001c52e:	xor    ebx,ebx
   14001c530:	mov    r11,r8
   14001c533:	mov    r9d,eax
   14001c536:	mov    edx,ebx
   14001c538:	mov    r10,rcx
   14001c53b:	cmp    WORD PTR [r10],bx
   14001c53f:	je     0x14001c54a
   14001c541:	add    r10,0x2
   14001c545:	dec    r9
   14001c548:	jne    0x14001c53b
   14001c54a:	test   r9,r9
   14001c54d:	jne    0x14001c559
   14001c54f:	mov    edx,0x80070057
   14001c554:	mov    r8,rbx
   14001c557:	jmp    0x14001c55f
   14001c559:	mov    r8,rax
   14001c55c:	sub    r8,r9
   14001c55f:	test   edx,edx
   14001c561:	js     0x14001c5ac
   14001c563:	lea    rcx,[rcx+r8*2]
   14001c567:	mov    edx,ebx
   14001c569:	sub    rax,r8
   14001c56c:	je     0x14001c5a0
   14001c56e:	lea    r9,[r8+0x7ffffefa]
   14001c575:	add    r9,rax
   14001c578:	sub    r11,rcx
   14001c57b:	test   r9,r9
   14001c57e:	je     0x14001c59b
   14001c580:	movzx  r8d,WORD PTR [r11+rcx*1]
   14001c585:	test   r8w,r8w
   14001c589:	je     0x14001c59b
   14001c58b:	mov    WORD PTR [rcx],r8w
   14001c58f:	dec    r9
   14001c592:	add    rcx,0x2
   14001c596:	dec    rax
   14001c599:	jne    0x14001c57b
   14001c59b:	test   rax,rax
   14001c59e:	jne    0x14001c5a9
   14001c5a0:	sub    rcx,0x2
   14001c5a4:	mov    edx,0x8007007a
   14001c5a9:	mov    WORD PTR [rcx],bx
   14001c5ac:	mov    rbx,QWORD PTR [rsp+0x8]
   14001c5b1:	mov    eax,edx
   14001c5b3:	ret    
   14001c5b4:	mov    QWORD PTR [rsp+0x8],rcx
   14001c5b9:	sub    rsp,0x38
   14001c5bd:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c5c6:	lea    rax,[rip+0x2aa8b]        # 0x140047058
   14001c5cd:	mov    QWORD PTR [rcx],rax
   14001c5d0:	add    rsp,0x38
   14001c5d4:	jmp    0x14001a634
   14001c5d9:	int3   
   14001c5da:	int3   
   14001c5db:	int3   
   14001c5dc:	mov    rax,rsp
   14001c5df:	mov    QWORD PTR [rax+0x8],rbx
   14001c5e3:	mov    QWORD PTR [rax+0x10],rbp
   14001c5e7:	mov    QWORD PTR [rax+0x18],rsi
   14001c5eb:	mov    QWORD PTR [rax+0x20],rdi
   14001c5ef:	push   r12
   14001c5f1:	push   r14
   14001c5f3:	push   r15
   14001c5f5:	sub    rsp,0x30
   14001c5f9:	mov    rdi,rcx
   14001c5fc:	mov    rcx,QWORD PTR [rcx+0x170]
   14001c603:	mov    rbp,r9
   14001c606:	mov    r14d,r8d
   14001c609:	mov    r15d,edx
   14001c60c:	call   0x140019fec
   14001c611:	xor    r12d,r12d
   14001c614:	mov    esi,r12d
   14001c617:	cmp    DWORD PTR [rdi+0x158],r12d
   14001c61e:	jbe    0x14001c646
   14001c620:	mov    edx,esi
   14001c622:	mov    rcx,rdi
   14001c625:	call   0x14001a860
   14001c62a:	mov    rbx,rax
   14001c62d:	mov    eax,0x1
   14001c632:	xchg   DWORD PTR [rbx+0x228],eax
   14001c638:	test   eax,eax
   14001c63a:	je     0x14001c66e
   14001c63c:	inc    esi
   14001c63e:	cmp    esi,DWORD PTR [rdi+0x158]
   14001c644:	jb     0x14001c620
   14001c646:	mov    rcx,QWORD PTR [rdi+0x170]
   14001c64d:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c651:	call   QWORD PTR [rip+0x24c29]        # 0x140041280
   14001c657:	mov    rbx,r12
   14001c65a:	mov    rsi,QWORD PTR [rsp+0x70]
   14001c65f:	mov    QWORD PTR [rsi],rbx
   14001c662:	test   rbx,rbx
   14001c665:	jne    0x14001c6b0
   14001c667:	xor    eax,eax
   14001c669:	jmp    0x14001c752
   14001c66e:	or     eax,0xffffffff
   14001c671:	lea    rcx,[rbx+0x20]
   14001c675:	lea    r8,[rip+0x2a8b4]        # 0x140046f30
   14001c67c:	mov    r9,rbx
   14001c67f:	mov    edx,0x104
   14001c684:	mov    DWORD PTR [rbx],esi
   14001c686:	mov    DWORD PTR [rbx+0x14],eax
   14001c689:	mov    DWORD PTR [rbx+0x10],eax
   14001c68c:	mov    QWORD PTR [rbx+0x18],0x1
   14001c694:	mov    DWORD PTR [rsp+0x20],esi
   14001c698:	call   0x14001a520
   14001c69d:	mov    rcx,QWORD PTR [rdi+0x170]
   14001c6a4:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c6a8:	call   QWORD PTR [rip+0x24bd2]        # 0x140041280
   14001c6ae:	jmp    0x14001c65a
   14001c6b0:	test   rbp,rbp
   14001c6b3:	je     0x14001c6d8
   14001c6b5:	mov    edx,0x20
   14001c6ba:	mov    r8,rbp
   14001c6bd:	mov    WORD PTR [rbx+0x20],dx
   14001c6c1:	mov    rax,QWORD PTR [rsi]
   14001c6c4:	mov    WORD PTR [rax+0x22],r12w
   14001c6c9:	mov    rcx,QWORD PTR [rsi]
   14001c6cc:	add    rcx,rdx
   14001c6cf:	call   0x14001c524
   14001c6d4:	test   eax,eax
   14001c6d6:	js     0x14001c667
   14001c6d8:	mov    rax,QWORD PTR [rsi]
   14001c6db:	mov    DWORD PTR [rax+0x4],r15d
   14001c6df:	mov    rax,QWORD PTR [rsi]
   14001c6e2:	mov    DWORD PTR [rax+0xc],r14d
   14001c6e6:	mov    rcx,QWORD PTR [rsi]
   14001c6e9:	mov    eax,DWORD PTR [rsp+0x78]
   14001c6ed:	mov    DWORD PTR [rcx+0x18],eax
   14001c6f0:	mov    rcx,QWORD PTR [rdi+0x170]
   14001c6f7:	call   0x140019fec
   14001c6fc:	mov    rbx,QWORD PTR [rsi]
   14001c6ff:	lea    rcx,[rdi+0x10]
   14001c703:	mov    rax,QWORD PTR [rcx]
   14001c706:	call   QWORD PTR [rax+0x8]
   14001c709:	mov    r8,rax
   14001c70c:	mov    eax,DWORD PTR [rax+0x8]
   14001c70f:	mov    DWORD PTR [rbx+0x10],eax
   14001c712:	sub    rbx,QWORD PTR [rdi+0x160]
   14001c719:	inc    DWORD PTR [r8+0x4]
   14001c71d:	movabs rax,0x1d0cb58f6ec07433
   14001c727:	imul   rbx
   14001c72a:	sar    rdx,0x6
   14001c72e:	mov    rcx,rdx
   14001c731:	shr    rcx,0x3f
   14001c735:	add    rdx,rcx
   14001c738:	mov    DWORD PTR [r8+0x8],edx
   14001c73c:	mov    rcx,QWORD PTR [rdi+0x170]
   14001c743:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c747:	call   QWORD PTR [rip+0x24b33]        # 0x140041280
   14001c74d:	mov    eax,0x1
   14001c752:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c757:	mov    rbp,QWORD PTR [rsp+0x58]
   14001c75c:	mov    rsi,QWORD PTR [rsp+0x60]
   14001c761:	mov    rdi,QWORD PTR [rsp+0x68]
   14001c766:	add    rsp,0x30
   14001c76a:	pop    r15
   14001c76c:	pop    r14
   14001c76e:	pop    r12
   14001c770:	ret    
   14001c771:	int3   
   14001c772:	int3   
   14001c773:	int3   
   14001c774:	mov    rax,rsp
   14001c777:	mov    QWORD PTR [rax+0x8],rbx
   14001c77b:	mov    QWORD PTR [rax+0x10],rbp
   14001c77f:	mov    QWORD PTR [rax+0x18],rsi
   14001c783:	mov    QWORD PTR [rax+0x20],rdi
   14001c787:	push   r12
   14001c789:	push   r14
   14001c78b:	push   r15
   14001c78d:	sub    rsp,0x20
   14001c791:	mov    rdi,rcx
   14001c794:	call   0x14001a860
   14001c799:	xor    ebx,ebx
   14001c79b:	mov    rsi,rax
   14001c79e:	test   rax,rax
   14001c7a1:	je     0x14001c86b
   14001c7a7:	mov    rdx,rax
   14001c7aa:	lea    r14,[rdi+0x10]
   14001c7ae:	movabs r12,0x1d0cb58f6ec07433
   14001c7b8:	sub    rdx,QWORD PTR [rdi+0x160]
   14001c7bf:	mov    rax,r12
   14001c7c2:	imul   rdx
   14001c7c5:	mov    rax,QWORD PTR [r14]
   14001c7c8:	mov    rbp,rdx
   14001c7cb:	sar    rbp,0x6
   14001c7cf:	mov    rcx,rbp
   14001c7d2:	shr    rcx,0x3f
   14001c7d6:	add    rbp,rcx
   14001c7d9:	mov    rcx,r14
   14001c7dc:	call   QWORD PTR [rax+0x8]
   14001c7df:	or     r15d,0xffffffff
   14001c7e3:	lea    r9,[rax+0x8]
   14001c7e7:	jmp    0x14001c803
   14001c7e9:	mov    ecx,r8d
   14001c7ec:	imul   rcx,rcx,0x234
   14001c7f3:	add    rcx,QWORD PTR [rdi+0x160]
   14001c7fa:	cmp    ebp,r8d
   14001c7fd:	je     0x14001c80d
   14001c7ff:	lea    r9,[rcx+0x10]
   14001c803:	mov    r8d,DWORD PTR [r9]
   14001c806:	cmp    r8d,r15d
   14001c809:	jne    0x14001c7e9
   14001c80b:	jmp    0x14001c817
   14001c80d:	mov    edx,DWORD PTR [rcx+0x10]
   14001c810:	mov    DWORD PTR [r9],edx
   14001c813:	add    DWORD PTR [rax+0x4],r15d
   14001c817:	mov    rdx,QWORD PTR [r14]
   14001c81a:	mov    rcx,r14
   14001c81d:	call   QWORD PTR [rdx+0x8]
   14001c820:	sub    rsi,rax
   14001c823:	mov    rax,r12
   14001c826:	sub    rsi,0x230
   14001c82d:	imul   rsi
   14001c830:	sar    rdx,0x6
   14001c834:	mov    rax,rdx
   14001c837:	shr    rax,0x3f
   14001c83b:	add    rdx,rax
   14001c83e:	cmp    edx,DWORD PTR [rdi+0x158]
   14001c844:	jae    0x14001c86b
   14001c846:	mov    rcx,rdi
   14001c849:	call   0x14001a860
   14001c84e:	test   rax,rax
   14001c851:	je     0x14001c86b
   14001c853:	mov    DWORD PTR [rax+0xc],ebx
   14001c856:	mov    DWORD PTR [rax+0x4],ebx
   14001c859:	mov    DWORD PTR [rax+0x14],r15d
   14001c85d:	mov    DWORD PTR [rax+0x10],r15d
   14001c861:	mov    QWORD PTR [rax+0x18],rbx
   14001c865:	xchg   DWORD PTR [rax+0x228],ebx
   14001c86b:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c870:	mov    rbp,QWORD PTR [rsp+0x48]
   14001c875:	mov    rsi,QWORD PTR [rsp+0x50]
   14001c87a:	mov    rdi,QWORD PTR [rsp+0x58]
   14001c87f:	add    rsp,0x20
   14001c883:	pop    r15
   14001c885:	pop    r14
   14001c887:	pop    r12
   14001c889:	ret    
   14001c88a:	int3   
   14001c88b:	int3   
   14001c88c:	mov    QWORD PTR [rsp+0x8],rbx
   14001c891:	mov    QWORD PTR [rsp+0x10],rbp
   14001c896:	mov    QWORD PTR [rsp+0x18],rsi
   14001c89b:	push   rdi
   14001c89c:	sub    rsp,0x20
   14001c8a0:	mov    rdi,rcx
   14001c8a3:	add    rcx,0x10
   14001c8a7:	mov    ebp,edx
   14001c8a9:	mov    rax,QWORD PTR [rcx]
   14001c8ac:	xor    esi,esi
   14001c8ae:	call   QWORD PTR [rax+0x8]
   14001c8b1:	mov    rcx,QWORD PTR [rdi+0x170]
   14001c8b8:	mov    rbx,rax
   14001c8bb:	call   0x140019fec
   14001c8c0:	mov    edx,DWORD PTR [rbx+0x8]
   14001c8c3:	or     ecx,0xffffffff
   14001c8c6:	jmp    0x14001c8e0
   14001c8c8:	mov    eax,edx
   14001c8ca:	imul   rax,rax,0x234
   14001c8d1:	add    rax,QWORD PTR [rdi+0x160]
   14001c8d8:	cmp    ebp,DWORD PTR [rax+0x8]
   14001c8db:	je     0x14001c8e6
   14001c8dd:	mov    edx,DWORD PTR [rax+0x10]
   14001c8e0:	cmp    edx,ecx
   14001c8e2:	jne    0x14001c8c8
   14001c8e4:	jmp    0x14001c8f3
   14001c8e6:	mov    rcx,rdi
   14001c8e9:	call   0x14001c774
   14001c8ee:	mov    esi,0x1
   14001c8f3:	mov    rcx,QWORD PTR [rdi+0x170]
   14001c8fa:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c8fe:	call   QWORD PTR [rip+0x2497c]        # 0x140041280
   14001c904:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c909:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c90e:	mov    eax,esi
   14001c910:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c915:	add    rsp,0x20
   14001c919:	pop    rdi
   14001c91a:	ret    
   14001c91b:	int3   
   14001c91c:	mov    QWORD PTR [rsp+0x8],rcx
   14001c921:	push   rbx
   14001c922:	sub    rsp,0x30
   14001c926:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c92f:	mov    rbx,rcx
   14001c932:	lea    rax,[rip+0x2a737]        # 0x140047070
   14001c939:	mov    QWORD PTR [rcx],rax
   14001c93c:	and    QWORD PTR [rcx+0x160],0x0
   14001c944:	and    QWORD PTR [rcx+0x168],0x0
   14001c94c:	add    rcx,0x180
   14001c953:	call   0x14001cbc0
   14001c958:	nop
   14001c959:	lea    rcx,[rbx+0x170]
   14001c960:	call   0x140025a54
   14001c965:	nop
   14001c966:	lea    rcx,[rbx+0x20]
   14001c96a:	add    rsp,0x30
   14001c96e:	pop    rbx
   14001c96f:	jmp    0x140014ffc
   14001c974:	mov    QWORD PTR [rsp+0x10],rbx
   14001c979:	push   rbp
   14001c97a:	push   rsi
   14001c97b:	push   rdi
   14001c97c:	sub    rsp,0x280
   14001c983:	mov    rax,QWORD PTR [rip+0x3c6fe]        # 0x140059088
   14001c98a:	xor    rax,rsp
   14001c98d:	mov    QWORD PTR [rsp+0x270],rax
   14001c995:	mov    DWORD PTR [rcx+0x10],edx
   14001c998:	mov    rdx,QWORD PTR [rip+0x40281]        # 0x14005cc20
   14001c99f:	lea    rbx,[rcx+0x20]
   14001c9a3:	mov    esi,r9d
   14001c9a6:	mov    ebp,r8d
   14001c9a9:	mov    rdi,rcx
   14001c9ac:	mov    rcx,rbx
   14001c9af:	mov    r9d,0x1
   14001c9b5:	mov    r8d,0x4b8
   14001c9bb:	mov    DWORD PTR [rsp+0x28],0x1
   14001c9c3:	and    DWORD PTR [rsp+0x20],0x0
   14001c9c8:	call   0x1400150ac
   14001c9cd:	mov    rax,QWORD PTR [rbx]
   14001c9d0:	mov    rcx,rbx
   14001c9d3:	call   QWORD PTR [rax+0x8]
   14001c9d6:	xor    edx,edx
   14001c9d8:	lea    rcx,[rax+0x380]
   14001c9df:	mov    QWORD PTR [rdi+0x160],rcx
   14001c9e6:	lea    rcx,[rax+0x3c0]
   14001c9ed:	add    rax,0x4a0
   14001c9f3:	cmp    DWORD PTR [rdi+0x8],0x1
   14001c9f7:	mov    QWORD PTR [rdi+0x168],rcx
   14001c9fe:	mov    QWORD PTR [rdi+0x18],rax
   14001ca02:	jne    0x14001ca55
   14001ca04:	mov    r9,QWORD PTR [rip+0x4024d]        # 0x14005cc58
   14001ca0b:	mov    r8d,esi
   14001ca0e:	xor    ecx,ecx
   14001ca10:	call   QWORD PTR [rip+0x248b2]        # 0x1400412c8
   14001ca16:	mov    QWORD PTR [rdi+0x178],rax
   14001ca1d:	call   QWORD PTR [rip+0x249b5]        # 0x1400413d8
   14001ca23:	mov    ebx,0xb7
   14001ca28:	cmp    eax,ebx
   14001ca2a:	jne    0x14001ca49
   14001ca2c:	mov    rcx,QWORD PTR [rdi+0x178]
   14001ca33:	call   QWORD PTR [rip+0x2494f]        # 0x140041388
   14001ca39:	and    QWORD PTR [rdi+0x178],0x0
   14001ca41:	mov    ecx,ebx
   14001ca43:	call   QWORD PTR [rip+0x248d7]        # 0x140041320
   14001ca49:	cmp    QWORD PTR [rdi+0x178],0x0
   14001ca51:	jne    0x14001ca73
   14001ca53:	jmp    0x14001caaa
   14001ca55:	mov    r8,QWORD PTR [rip+0x401fc]        # 0x14005cc58
   14001ca5c:	mov    ecx,0x100002
   14001ca61:	call   QWORD PTR [rip+0x24859]        # 0x1400412c0
   14001ca67:	mov    QWORD PTR [rdi+0x178],rax
   14001ca6e:	test   rax,rax
   14001ca71:	je     0x14001cad5
   14001ca73:	lea    rcx,[rdi+0x180]
   14001ca7a:	mov    r8d,esi
   14001ca7d:	mov    edx,ebp
   14001ca7f:	call   0x14001cc18
   14001ca84:	mov    DWORD PTR [rdi+0xc],esi
   14001ca87:	mov    rcx,QWORD PTR [rsp+0x270]
   14001ca8f:	xor    rcx,rsp
   14001ca92:	call   0x1400265a0
   14001ca97:	mov    rbx,QWORD PTR [rsp+0x2a8]
   14001ca9f:	add    rsp,0x280
   14001caa6:	pop    rdi
   14001caa7:	pop    rsi
   14001caa8:	pop    rbp
   14001caa9:	ret    
   14001caaa:	call   QWORD PTR [rip+0x24928]        # 0x1400413d8
   14001cab0:	mov    r8,QWORD PTR [rip+0x401a1]        # 0x14005cc58
   14001cab7:	lea    rcx,[rsp+0x50]
   14001cabc:	mov    edx,eax
   14001cabe:	call   0x140010930
   14001cac3:	lea    rdx,[rip+0x3970e]        # 0x1400561d8
   14001caca:	lea    rcx,[rsp+0x50]
   14001cacf:	call   0x140029fe8
   14001cad4:	int3   
   14001cad5:	and    DWORD PTR [rsp+0x40],0x0
   14001cada:	mov    DWORD PTR [rsp+0x44],0xe1232724
   14001cae2:	mov    rax,QWORD PTR [rsp+0x40]
   14001cae7:	lea    rdx,[rip+0x3980a]        # 0x1400562f8
   14001caee:	lea    rcx,[rsp+0x40]
   14001caf3:	mov    QWORD PTR [rsp+0x40],rax
   14001caf8:	call   0x140029fe8
   14001cafd:	int3   
   14001cafe:	int3   
   14001caff:	int3   
   14001cb00:	mov    QWORD PTR [rsp+0x8],rbx
   14001cb05:	mov    QWORD PTR [rsp+0x10],rsi
   14001cb0a:	push   rdi
   14001cb0b:	sub    rsp,0x20
   14001cb0f:	mov    ebx,r8d
   14001cb12:	mov    rdi,rdx
   14001cb15:	mov    rsi,rcx
   14001cb18:	test   r8b,0x1
   14001cb1c:	jne    0x14001cb25
   14001cb1e:	mov    eax,0xc
   14001cb23:	jmp    0x14001cb4d
   14001cb25:	add    rcx,0x170
   14001cb2c:	mov    r8d,0x100002
   14001cb32:	mov    rax,QWORD PTR [rcx]
   14001cb35:	call   QWORD PTR [rax]
   14001cb37:	test   eax,eax
   14001cb39:	jne    0x14001cb4d
   14001cb3b:	lea    rcx,[rsi+0x180]
   14001cb42:	mov    r8d,ebx
   14001cb45:	mov    rdx,rdi
   14001cb48:	mov    rax,QWORD PTR [rcx]
   14001cb4b:	call   QWORD PTR [rax]
   14001cb4d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cb52:	mov    rsi,QWORD PTR [rsp+0x38]
   14001cb57:	add    rsp,0x20
   14001cb5b:	pop    rdi
   14001cb5c:	ret    
   14001cb5d:	int3   
   14001cb5e:	int3   
   14001cb5f:	int3   
   14001cb60:	mov    QWORD PTR [rsp+0x10],rbx
   14001cb65:	push   rdi
   14001cb66:	sub    rsp,0x20
   14001cb6a:	mov    rbx,rcx
   14001cb6d:	add    rcx,0x170
   14001cb74:	mov    rdi,rdx
   14001cb77:	mov    rax,QWORD PTR [rcx]
   14001cb7a:	call   QWORD PTR [rax+0x8]
   14001cb7d:	lea    rcx,[rbx+0x180]
   14001cb84:	mov    rdx,rdi
   14001cb87:	mov    DWORD PTR [rsp+0x30],eax
   14001cb8b:	mov    rax,QWORD PTR [rcx]
   14001cb8e:	call   QWORD PTR [rax+0x8]
   14001cb91:	lea    rcx,[rsp+0x30]
   14001cb96:	mov    DWORD PTR [rsp+0x34],eax
   14001cb9a:	xor    eax,eax
   14001cb9c:	mov    edx,DWORD PTR [rcx]
   14001cb9e:	test   edx,edx
   14001cba0:	jne    0x14001cbb1
   14001cba2:	inc    eax
   14001cba4:	add    rcx,0x4
   14001cba8:	cmp    eax,0x2
   14001cbab:	jb     0x14001cb9c
   14001cbad:	xor    eax,eax
   14001cbaf:	jmp    0x14001cbb3
   14001cbb1:	mov    eax,edx
   14001cbb3:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cbb8:	add    rsp,0x20
   14001cbbc:	pop    rdi
   14001cbbd:	ret    
   14001cbbe:	int3   
   14001cbbf:	int3   
   14001cbc0:	mov    QWORD PTR [rsp+0x8],rcx
   14001cbc5:	push   rbx
   14001cbc6:	sub    rsp,0x30
   14001cbca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001cbd3:	mov    rbx,rcx
   14001cbd6:	lea    rax,[rip+0x2a4ab]        # 0x140047088
   14001cbdd:	mov    QWORD PTR [rcx],rax
   14001cbe0:	and    QWORD PTR [rip+0x40098],0x0        # 0x14005cc80
   14001cbe8:	add    rcx,0x150
   14001cbef:	mov    QWORD PTR [rsp+0x48],rcx
   14001cbf4:	lea    rax,[rip+0x2a4a5]        # 0x1400470a0
   14001cbfb:	mov    QWORD PTR [rcx],rax
   14001cbfe:	add    rcx,0x10
   14001cc02:	call   0x140014ffc
   14001cc07:	nop
   14001cc08:	lea    rcx,[rbx+0x10]
   14001cc0c:	add    rsp,0x30
   14001cc10:	pop    rbx
   14001cc11:	jmp    0x140014ffc
   14001cc16:	int3   
   14001cc17:	int3   
   14001cc18:	mov    rax,rsp
   14001cc1b:	push   rbp
   14001cc1c:	push   rsi
   14001cc1d:	push   rdi
   14001cc1e:	push   r12
   14001cc20:	push   r13
   14001cc22:	push   r14
   14001cc24:	push   r15
   14001cc26:	sub    rsp,0x50
   14001cc2a:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14001cc32:	mov    QWORD PTR [rax+0x18],rbx
   14001cc36:	mov    ebx,r8d
   14001cc39:	mov    ebp,edx
   14001cc3b:	mov    rsi,rcx
   14001cc3e:	mov    DWORD PTR [rcx+0x2a0],ebx
   14001cc44:	mov    edi,edx
   14001cc46:	imul   edi,r8d
   14001cc4a:	lea    r13,[rip+0x2981f]        # 0x140046470
   14001cc51:	mov    QWORD PTR [rax+0x8],r13
   14001cc55:	mov    r12d,0x1
   14001cc5b:	cmp    DWORD PTR [rip+0x3fe6a],0x0        # 0x14005cacc
   14001cc62:	jne    0x14001cc70
   14001cc64:	call   0x140012b10
   14001cc69:	mov    DWORD PTR [rip+0x3fe5c],r12d        # 0x14005cacc
   14001cc70:	movsxd r15,DWORD PTR [rip+0x3fef9]        # 0x14005cb70
   14001cc77:	lea    r14,[rsi+0x160]
   14001cc7e:	xor    ecx,ecx
   14001cc80:	cmp    edi,0x10000000
   14001cc86:	setbe  cl
   14001cc89:	xor    eax,eax
   14001cc8b:	cmp    DWORD PTR [rsi+0x158],0x3
   14001cc92:	setne  al
   14001cc95:	mov    DWORD PTR [rsp+0x28],ecx
   14001cc99:	mov    DWORD PTR [rsp+0x20],eax
   14001cc9d:	mov    r9d,r12d
   14001cca0:	mov    r8d,edi
   14001cca3:	mov    rdx,QWORD PTR [rip+0x3ff5e]        # 0x14005cc08
   14001ccaa:	mov    rcx,r14
   14001ccad:	call   0x1400150ac
   14001ccb2:	mov    rax,QWORD PTR [r14]
   14001ccb5:	mov    rcx,r14
   14001ccb8:	call   QWORD PTR [rax+0x8]
   14001ccbb:	mov    edx,edi
   14001ccbd:	add    rdx,0xfffffffffffffffc
   14001ccc1:	add    rdx,rax
   14001ccc4:	jmp    0x14001ccd2
   14001ccc6:	mov    cl,BYTE PTR [rdx]
   14001ccc8:	mov    BYTE PTR [rsp+0x98],cl
   14001cccf:	sub    rdx,r15
   14001ccd2:	cmp    rdx,rax
   14001ccd5:	ja     0x14001ccc6
   14001ccd7:	mov    QWORD PTR [rsp+0x90],r13
   14001ccdf:	mov    r8d,ebx
   14001cce2:	shl    r8d,0x6
   14001cce6:	lea    rdi,[rsi+0x10]
   14001ccea:	xor    eax,eax
   14001ccec:	cmp    DWORD PTR [rsi+0x8],0x3
   14001ccf0:	setne  al
   14001ccf3:	mov    DWORD PTR [rsp+0x28],r12d
   14001ccf8:	mov    DWORD PTR [rsp+0x20],eax
   14001ccfc:	mov    r9d,r12d
   14001ccff:	mov    rdx,QWORD PTR [rip+0x3ff12]        # 0x14005cc18
   14001cd06:	mov    rcx,rdi
   14001cd09:	call   0x1400150ac
   14001cd0e:	mov    rax,QWORD PTR [r14]
   14001cd11:	mov    rcx,r14
   14001cd14:	call   QWORD PTR [rax+0x8]
   14001cd17:	mov    QWORD PTR [rip+0x3ff62],rax        # 0x14005cc80
   14001cd1e:	cmp    DWORD PTR [rsi+0x8],r12d
   14001cd22:	jne    0x14001cd6d
   14001cd24:	mov    rax,QWORD PTR [rdi]
   14001cd27:	mov    rcx,rdi
   14001cd2a:	call   QWORD PTR [rax+0x8]
   14001cd2d:	mov    QWORD PTR [rsp+0x90],rax
   14001cd35:	xor    ecx,ecx
   14001cd37:	test   ebx,ebx
   14001cd39:	je     0x14001cd6d
   14001cd3b:	mov    QWORD PTR [rsp+0xa8],rax
   14001cd43:	test   rax,rax
   14001cd46:	je     0x14001cd5a
   14001cd48:	and    QWORD PTR [rax],0x0
   14001cd4c:	mov    DWORD PTR [rax+0x8],ecx
   14001cd4f:	or     DWORD PTR [rax+0xc],0xffffffff
   14001cd53:	mov    DWORD PTR [rax+0x10],ebp
   14001cd56:	mov    DWORD PTR [rax+0x14],r12d
   14001cd5a:	add    rax,0x40
   14001cd5e:	mov    QWORD PTR [rsp+0x90],rax
   14001cd66:	add    ecx,r12d
   14001cd69:	cmp    ecx,ebx
   14001cd6b:	jb     0x14001cd3b
   14001cd6d:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001cd75:	add    rsp,0x50
   14001cd79:	pop    r15
   14001cd7b:	pop    r14
   14001cd7d:	pop    r13
   14001cd7f:	pop    r12
   14001cd81:	pop    rdi
   14001cd82:	pop    rsi
   14001cd83:	pop    rbp
   14001cd84:	ret    
   14001cd85:	int3   
   14001cd86:	int3   
   14001cd87:	int3   
   14001cd88:	mov    QWORD PTR [rsp+0x8],rbx
   14001cd8d:	mov    QWORD PTR [rsp+0x10],rsi
   14001cd92:	push   rdi
   14001cd93:	sub    rsp,0x20
   14001cd97:	mov    ebx,r8d
   14001cd9a:	mov    rdi,rdx
   14001cd9d:	mov    rsi,rcx
   14001cda0:	test   r8b,0x1
   14001cda4:	jne    0x14001cdad
   14001cda6:	mov    eax,0xc
   14001cdab:	jmp    0x14001cdd2
   14001cdad:	add    rcx,0x18
   14001cdb1:	mov    r8d,0x6
   14001cdb7:	mov    rax,QWORD PTR [rcx]
   14001cdba:	call   QWORD PTR [rax]
   14001cdbc:	test   eax,eax
   14001cdbe:	jne    0x14001cdd2
   14001cdc0:	lea    rcx,[rsi+0x150]
   14001cdc7:	mov    r8d,ebx
   14001cdca:	mov    rdx,rdi
   14001cdcd:	mov    rax,QWORD PTR [rcx]
   14001cdd0:	call   QWORD PTR [rax]
   14001cdd2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cdd7:	mov    rsi,QWORD PTR [rsp+0x38]
   14001cddc:	add    rsp,0x20
   14001cde0:	pop    rdi
   14001cde1:	ret    
   14001cde2:	int3   
   14001cde3:	int3   
   14001cde4:	mov    QWORD PTR [rsp+0x10],rbx
   14001cde9:	push   rdi
   14001cdea:	sub    rsp,0x20
   14001cdee:	mov    rbx,rcx
   14001cdf1:	add    rcx,0x18
   14001cdf5:	mov    rdi,rdx
   14001cdf8:	mov    rax,QWORD PTR [rcx]
   14001cdfb:	call   QWORD PTR [rax+0x8]
   14001cdfe:	lea    rcx,[rbx+0x150]
   14001ce05:	mov    rdx,rdi
   14001ce08:	mov    DWORD PTR [rsp+0x30],eax
   14001ce0c:	mov    rax,QWORD PTR [rcx]
   14001ce0f:	call   QWORD PTR [rax+0x8]
   14001ce12:	lea    rcx,[rsp+0x30]
   14001ce17:	mov    DWORD PTR [rsp+0x34],eax
   14001ce1b:	xor    eax,eax
   14001ce1d:	mov    edx,DWORD PTR [rcx]
   14001ce1f:	test   edx,edx
   14001ce21:	jne    0x14001ce32
   14001ce23:	inc    eax
   14001ce25:	add    rcx,0x4
   14001ce29:	cmp    eax,0x2
   14001ce2c:	jb     0x14001ce1d
   14001ce2e:	xor    eax,eax
   14001ce30:	jmp    0x14001ce34
   14001ce32:	mov    eax,edx
   14001ce34:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ce39:	add    rsp,0x20
   14001ce3d:	pop    rdi
   14001ce3e:	ret    
   14001ce3f:	int3   
   14001ce40:	mov    QWORD PTR [rsp+0x8],rcx
   14001ce45:	sub    rsp,0x38
   14001ce49:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ce52:	lea    rax,[rip+0x2a247]        # 0x1400470a0
   14001ce59:	mov    QWORD PTR [rcx],rax
   14001ce5c:	add    rcx,0x10
   14001ce60:	add    rsp,0x38
   14001ce64:	jmp    0x140014ffc
   14001ce69:	int3   
   14001ce6a:	int3   
   14001ce6b:	int3   
   14001ce6c:	mov    rax,rsp
   14001ce6f:	push   rbp
   14001ce70:	push   rdi
   14001ce71:	push   r14
   14001ce73:	lea    rbp,[rax-0x178]
   14001ce7a:	sub    rsp,0x260
   14001ce81:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001ce8a:	mov    QWORD PTR [rax+0x10],rbx
   14001ce8e:	mov    QWORD PTR [rax+0x18],rsi
   14001ce92:	mov    rax,QWORD PTR [rip+0x3c1ef]        # 0x140059088
   14001ce99:	xor    rax,rsp
   14001ce9c:	mov    QWORD PTR [rbp+0x150],rax
   14001cea3:	mov    rsi,rcx
   14001cea6:	mov    r8d,0x105
   14001ceac:	lea    rdx,[rsp+0x40]
   14001ceb1:	xor    ecx,ecx
   14001ceb3:	call   QWORD PTR [rip+0x2447f]        # 0x140041338
   14001ceb9:	dec    eax
   14001cebb:	cmp    eax,0x102
   14001cec0:	ja     0x14001d074
   14001cec6:	lea    rdx,[rsp+0x40]
   14001cecb:	lea    rcx,[rsp+0x20]
   14001ced0:	call   0x140006b8c
   14001ced5:	nop
   14001ced6:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cedb:	mov    edx,DWORD PTR [rcx-0x10]
   14001cede:	xor    r14d,r14d
   14001cee1:	test   edx,edx
   14001cee3:	jns    0x14001cef0
   14001cee5:	mov    ecx,0x80070057
   14001ceea:	call   0x14000400c
   14001ceef:	int3   
   14001cef0:	mov    ebx,0x1
   14001cef5:	mov    r8d,ebx
   14001cef8:	sub    r8d,DWORD PTR [rcx-0x8]
   14001cefc:	mov    eax,DWORD PTR [rcx-0xc]
   14001ceff:	sub    eax,edx
   14001cf01:	or     eax,r8d
   14001cf04:	jge    0x14001cf15
   14001cf06:	lea    rcx,[rsp+0x20]
   14001cf0b:	call   0x140007098
   14001cf10:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cf15:	call   QWORD PTR [rip+0x24815]        # 0x140041730
   14001cf1b:	mov    edi,eax
   14001cf1d:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cf22:	movsxd rdx,DWORD PTR [rcx-0xc]
   14001cf26:	call   0x14002741c
   14001cf2b:	test   eax,eax
   14001cf2d:	js     0x14001d069
   14001cf33:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cf38:	cmp    eax,DWORD PTR [rcx-0xc]
   14001cf3b:	jg     0x14001d069
   14001cf41:	mov    DWORD PTR [rcx-0x10],eax
   14001cf44:	movsxd rcx,eax
   14001cf47:	mov    rax,QWORD PTR [rsp+0x20]
   14001cf4c:	mov    WORD PTR [rax+rcx*2],r14w
   14001cf51:	test   edi,edi
   14001cf53:	je     0x14001d03f
   14001cf59:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cf5e:	mov    edx,ebx
   14001cf60:	sub    edx,DWORD PTR [rcx-0x8]
   14001cf63:	mov    eax,DWORD PTR [rcx-0xc]
   14001cf66:	mov    edi,0x104
   14001cf6b:	sub    eax,edi
   14001cf6d:	or     eax,edx
   14001cf6f:	jge    0x14001cf82
   14001cf71:	mov    edx,edi
   14001cf73:	lea    rcx,[rsp+0x20]
   14001cf78:	call   0x140007098
   14001cf7d:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cf82:	call   QWORD PTR [rip+0x24790]        # 0x140041718
   14001cf88:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cf8d:	movsxd rdx,DWORD PTR [rcx-0xc]
   14001cf91:	call   0x14002741c
   14001cf96:	test   eax,eax
   14001cf98:	js     0x14001d034
   14001cf9e:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cfa3:	cmp    eax,DWORD PTR [rcx-0xc]
   14001cfa6:	jg     0x14001d034
   14001cfac:	mov    DWORD PTR [rcx-0x10],eax
   14001cfaf:	movsxd rcx,eax
   14001cfb2:	mov    rax,QWORD PTR [rsp+0x20]
   14001cfb7:	mov    WORD PTR [rax+rcx*2],r14w
   14001cfbc:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cfc1:	sub    ebx,DWORD PTR [rcx-0x8]
   14001cfc4:	mov    eax,DWORD PTR [rcx-0xc]
   14001cfc7:	sub    eax,edi
   14001cfc9:	or     eax,ebx
   14001cfcb:	jge    0x14001cfde
   14001cfcd:	mov    edx,edi
   14001cfcf:	lea    rcx,[rsp+0x20]
   14001cfd4:	call   0x140007098
   14001cfd9:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cfde:	lea    rdx,[rip+0x2a113]        # 0x1400470f8
   14001cfe5:	call   QWORD PTR [rip+0x24735]        # 0x140041720
   14001cfeb:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cff0:	movsxd rdx,DWORD PTR [rcx-0xc]
   14001cff4:	call   0x14002741c
   14001cff9:	test   eax,eax
   14001cffb:	js     0x14001d029
   14001cffd:	mov    rcx,QWORD PTR [rsp+0x20]
   14001d002:	cmp    eax,DWORD PTR [rcx-0xc]
   14001d005:	jg     0x14001d029
   14001d007:	mov    DWORD PTR [rcx-0x10],eax
   14001d00a:	movsxd rcx,eax
   14001d00d:	mov    rax,QWORD PTR [rsp+0x20]
   14001d012:	mov    WORD PTR [rax+rcx*2],r14w
   14001d017:	lea    rcx,[rsi+0x8]
   14001d01b:	mov    rdx,QWORD PTR [rsp+0x20]
   14001d020:	call   0x14000f66c
   14001d025:	mov    ebx,eax
   14001d027:	jmp    0x14001d042
   14001d029:	mov    ecx,0x80070057
   14001d02e:	call   0x14000400c
   14001d033:	int3   
   14001d034:	mov    ecx,0x80070057
   14001d039:	call   0x14000400c
   14001d03e:	int3   
   14001d03f:	mov    ebx,r14d
   14001d042:	lea    rax,[rsp+0x20]
   14001d047:	mov    QWORD PTR [rsp+0x30],rax
   14001d04c:	mov    rdx,QWORD PTR [rsp+0x20]
   14001d051:	add    rdx,0xffffffffffffffe8
   14001d055:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001d05a:	jg     0x14001d065
   14001d05c:	mov    rcx,QWORD PTR [rdx]
   14001d05f:	mov    rax,QWORD PTR [rcx]
   14001d062:	call   QWORD PTR [rax+0x8]
   14001d065:	mov    eax,ebx
   14001d067:	jmp    0x14001d076
   14001d069:	mov    ecx,0x80070057
   14001d06e:	call   0x14000400c
   14001d073:	nop
   14001d074:	xor    eax,eax
   14001d076:	mov    rcx,QWORD PTR [rbp+0x150]
   14001d07d:	xor    rcx,rsp
   14001d080:	call   0x1400265a0
   14001d085:	lea    r11,[rsp+0x260]
   14001d08d:	mov    rbx,QWORD PTR [r11+0x28]
   14001d091:	mov    rsi,QWORD PTR [r11+0x30]
   14001d095:	mov    rsp,r11
   14001d098:	pop    r14
   14001d09a:	pop    rdi
   14001d09b:	pop    rbp
   14001d09c:	ret    
   14001d09d:	int3   
   14001d09e:	int3   
   14001d09f:	int3   
   14001d0a0:	mov    rax,rsp
   14001d0a3:	mov    QWORD PTR [rax+0x8],rbx
   14001d0a7:	mov    QWORD PTR [rax+0x10],rbp
   14001d0ab:	mov    QWORD PTR [rax+0x18],rsi
   14001d0af:	mov    QWORD PTR [rax+0x20],rdi
   14001d0b3:	push   r14
   14001d0b5:	sub    rsp,0x70
   14001d0b9:	mov    rbx,rdx
   14001d0bc:	mov    rsi,rcx
   14001d0bf:	test   rdx,rdx
   14001d0c2:	je     0x14001d0c7
   14001d0c4:	and    DWORD PTR [rdx],0x0
   14001d0c7:	lea    rcx,[rsp+0x20]
   14001d0cc:	call   0x140012950
   14001d0d1:	xor    ebp,ebp
   14001d0d3:	lea    rdx,[rip+0x290ee]        # 0x1400461c8
   14001d0da:	lea    r8d,[rbp+0x1]
   14001d0de:	xor    ecx,ecx
   14001d0e0:	call   QWORD PTR [rip+0x240b2]        # 0x140041198
   14001d0e6:	mov    r14,rax
   14001d0e9:	test   rax,rax
   14001d0ec:	je     0x14001d18a
   14001d0f2:	lea    rdx,[rsi+0x40]
   14001d0f6:	xor    edi,edi
   14001d0f8:	cmp    QWORD PTR [rdx+0x18],0x8
   14001d0fd:	jb     0x14001d102
   14001d0ff:	mov    rdx,QWORD PTR [rdx]
   14001d102:	mov    r8d,0x20000090
   14001d108:	mov    rcx,rax
   14001d10b:	call   QWORD PTR [rip+0x240a7]        # 0x1400411b8
   14001d111:	mov    rsi,rax
   14001d114:	test   rax,rax
   14001d117:	je     0x14001d140
   14001d119:	xor    r8d,r8d
   14001d11c:	xor    edx,edx
   14001d11e:	mov    rcx,rax
   14001d121:	call   QWORD PTR [rip+0x24089]        # 0x1400411b0
   14001d127:	mov    ebp,eax
   14001d129:	test   eax,eax
   14001d12b:	jne    0x14001d135
   14001d12d:	call   QWORD PTR [rip+0x242a5]        # 0x1400413d8
   14001d133:	mov    edi,eax
   14001d135:	mov    rcx,rsi
   14001d138:	call   QWORD PTR [rip+0x2408a]        # 0x1400411c8
   14001d13e:	jmp    0x14001d148
   14001d140:	call   QWORD PTR [rip+0x24292]        # 0x1400413d8
   14001d146:	mov    edi,eax
   14001d148:	mov    rcx,r14
   14001d14b:	call   QWORD PTR [rip+0x24077]        # 0x1400411c8
   14001d151:	mov    ecx,edi
   14001d153:	call   QWORD PTR [rip+0x241c7]        # 0x140041320
   14001d159:	test   ebp,ebp
   14001d15b:	je     0x14001d18a
   14001d15d:	lea    rcx,[rsp+0x48]
   14001d162:	call   0x140012950
   14001d167:	test   rbx,rbx
   14001d16a:	je     0x14001d183
   14001d16c:	mov    ecx,0x200
   14001d171:	test   DWORD PTR [rsp+0x34],ecx
   14001d175:	jne    0x14001d183
   14001d177:	test   DWORD PTR [rsp+0x5c],ecx
   14001d17b:	je     0x14001d183
   14001d17d:	mov    DWORD PTR [rbx],0x1
   14001d183:	mov    eax,0x1
   14001d188:	jmp    0x14001d18c
   14001d18a:	xor    eax,eax
   14001d18c:	lea    r11,[rsp+0x70]
   14001d191:	mov    rbx,QWORD PTR [r11+0x10]
   14001d195:	mov    rbp,QWORD PTR [r11+0x18]
   14001d199:	mov    rsi,QWORD PTR [r11+0x20]
   14001d19d:	mov    rdi,QWORD PTR [r11+0x28]
   14001d1a1:	mov    rsp,r11
   14001d1a4:	pop    r14
   14001d1a6:	ret    
   14001d1a7:	int3   
   14001d1a8:	mov    r9d,0x4
   14001d1ae:	xor    r8d,r8d
   14001d1b1:	mov    rcx,rdx
   14001d1b4:	jmp    0x14001d1cc
   14001d1b9:	int3   
   14001d1ba:	int3   
   14001d1bb:	int3   
   14001d1bc:	mov    r9d,0x1
   14001d1c2:	mov    rcx,rdx
   14001d1c5:	jmp    0x14001d1cc
   14001d1ca:	int3   
   14001d1cb:	int3   
   14001d1cc:	mov    QWORD PTR [rsp+0x10],rbx
   14001d1d1:	mov    QWORD PTR [rsp+0x18],rsi
   14001d1d6:	push   rbp
   14001d1d7:	push   rdi
   14001d1d8:	push   r14
   14001d1da:	mov    rbp,rsp
   14001d1dd:	sub    rsp,0x80
   14001d1e4:	mov    r14d,r9d
   14001d1e7:	mov    rdi,rcx
   14001d1ea:	test   rcx,rcx
   14001d1ed:	jne    0x14001d1f7
   14001d1ef:	lea    eax,[rcx+0x57]
   14001d1f2:	jmp    0x14001d2c8
   14001d1f7:	mov    rcx,QWORD PTR [rip+0x3d82a]        # 0x14005aa28
   14001d1fe:	test   r8b,0x1
   14001d202:	mov    eax,0x12019f
   14001d207:	mov    esi,0x0
   14001d20c:	cmovne esi,eax
   14001d20f:	and    QWORD PTR [rbp-0x40],0x0
   14001d214:	xor    r9d,r9d
   14001d217:	lea    rax,[rbp-0x40]
   14001d21b:	lea    edx,[r9+0x1]
   14001d21f:	lea    r8d,[r9+0x4]
   14001d223:	mov    QWORD PTR [rsp+0x38],rax
   14001d228:	and    QWORD PTR [rsp+0x30],0x0
   14001d22e:	lea    rax,[rbp-0x38]
   14001d232:	mov    QWORD PTR [rsp+0x28],rax
   14001d237:	and    QWORD PTR [rsp+0x20],0x0
   14001d23d:	call   QWORD PTR [rip+0x23e05]        # 0x140041048
   14001d243:	mov    ebx,eax
   14001d245:	test   eax,eax
   14001d247:	jne    0x14001d2c6
   14001d249:	mov    r8,QWORD PTR [rbp-0x38]
   14001d24d:	and    DWORD PTR [rbp-0x28],eax
   14001d250:	and    QWORD PTR [rbp-0x20],0x0
   14001d255:	and    DWORD PTR [rbp-0x18],eax
   14001d258:	and    DWORD PTR [rbp-0x14],eax
   14001d25b:	lea    r9,[rbp+0x20]
   14001d25f:	lea    rdx,[rbp-0x30]
   14001d263:	lea    ecx,[rax+0x1]
   14001d266:	mov    DWORD PTR [rbp-0x30],esi
   14001d269:	mov    DWORD PTR [rbp-0x2c],r14d
   14001d26d:	mov    DWORD PTR [rbp-0x10],0x1
   14001d274:	mov    QWORD PTR [rbp-0x8],rdi
   14001d278:	call   QWORD PTR [rip+0x23eea]        # 0x140041168
   14001d27e:	mov    ebx,eax
   14001d280:	test   eax,eax
   14001d282:	jne    0x14001d2bc
   14001d284:	mov    rax,QWORD PTR [rbp+0x20]
   14001d288:	and    QWORD PTR [rsp+0x30],0x0
   14001d28e:	mov    rcx,QWORD PTR [rip+0x3d793]        # 0x14005aa28
   14001d295:	mov    QWORD PTR [rsp+0x28],rax
   14001d29a:	and    QWORD PTR [rsp+0x20],0x0
   14001d2a0:	lea    edx,[rbx+0x1]
   14001d2a3:	lea    r8d,[rbx+0x4]
   14001d2a7:	xor    r9d,r9d
   14001d2aa:	call   QWORD PTR [rip+0x23e90]        # 0x140041140
   14001d2b0:	mov    rcx,QWORD PTR [rbp+0x20]
   14001d2b4:	mov    ebx,eax
   14001d2b6:	call   QWORD PTR [rip+0x2410c]        # 0x1400413c8
   14001d2bc:	mov    rcx,QWORD PTR [rbp-0x40]
   14001d2c0:	call   QWORD PTR [rip+0x24102]        # 0x1400413c8
   14001d2c6:	mov    eax,ebx
   14001d2c8:	lea    r11,[rsp+0x80]
   14001d2d0:	mov    rbx,QWORD PTR [r11+0x28]
   14001d2d4:	mov    rsi,QWORD PTR [r11+0x30]
   14001d2d8:	mov    rsp,r11
   14001d2db:	pop    r14
   14001d2dd:	pop    rdi
   14001d2de:	pop    rbp
   14001d2df:	ret    
   14001d2e0:	mov    QWORD PTR [rsp+0x8],rcx
   14001d2e5:	push   rbx
   14001d2e6:	sub    rsp,0x30
   14001d2ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d2f3:	mov    rbx,rcx
   14001d2f6:	add    rcx,0x20
   14001d2fa:	call   0x140013980
   14001d2ff:	nop
   14001d300:	mov    rcx,QWORD PTR [rbx]
   14001d303:	test   rcx,rcx
   14001d306:	je     0x14001d31b
   14001d308:	call   0x14002657c
   14001d30d:	and    QWORD PTR [rbx],0x0
   14001d311:	and    QWORD PTR [rbx+0x8],0x0
   14001d316:	and    QWORD PTR [rbx+0x10],0x0
   14001d31b:	add    rsp,0x30
   14001d31f:	pop    rbx
   14001d320:	ret    
   14001d321:	int3   
   14001d322:	int3   
   14001d323:	int3   
   14001d324:	mov    QWORD PTR [rsp+0x10],rdx
   14001d329:	push   rbx
   14001d32a:	sub    rsp,0x30
   14001d32e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001d337:	mov    rbx,rdx
   14001d33a:	and    DWORD PTR [rsp+0x20],0x0
   14001d33f:	lea    rdx,[rcx+0x30]
   14001d343:	mov    rcx,rbx
   14001d346:	call   0x140006af0
   14001d34b:	nop
   14001d34c:	mov    DWORD PTR [rsp+0x20],0x1
   14001d354:	mov    rax,rbx
   14001d357:	add    rsp,0x30
   14001d35b:	pop    rbx
   14001d35c:	ret    
   14001d35d:	int3   
   14001d35e:	int3   
   14001d35f:	int3   
   14001d360:	rex push rbx
   14001d362:	sub    rsp,0x20
   14001d366:	mov    eax,DWORD PTR [rip+0x3f760]        # 0x14005cacc
   14001d36c:	xor    ebx,ebx
   14001d36e:	test   eax,eax
   14001d370:	jne    0x14001d380
   14001d372:	call   0x140012b10
   14001d377:	lea    eax,[rbx+0x1]
   14001d37a:	mov    DWORD PTR [rip+0x3f74c],eax        # 0x14005cacc
   14001d380:	mov    ecx,DWORD PTR [rip+0x3f74e]        # 0x14005cad4
   14001d386:	cmp    ecx,0x6
   14001d389:	ja     0x14001d3c6
   14001d38b:	test   eax,eax
   14001d38d:	jne    0x14001d3a5
   14001d38f:	call   0x140012b10
   14001d394:	mov    ecx,DWORD PTR [rip+0x3f73a]        # 0x14005cad4
   14001d39a:	mov    eax,0x1
   14001d39f:	mov    DWORD PTR [rip+0x3f727],eax        # 0x14005cacc
   14001d3a5:	cmp    ecx,0x6
   14001d3a8:	jne    0x14001d3cb
   14001d3aa:	test   eax,eax
   14001d3ac:	jne    0x14001d3bd
   14001d3ae:	call   0x140012b10
   14001d3b3:	mov    DWORD PTR [rip+0x3f70f],0x1        # 0x14005cacc
   14001d3bd:	cmp    DWORD PTR [rip+0x3f714],0x2        # 0x14005cad8
   14001d3c4:	jb     0x14001d3cb
   14001d3c6:	mov    ebx,0x1
   14001d3cb:	mov    al,bl
   14001d3cd:	add    rsp,0x20
   14001d3d1:	pop    rbx
   14001d3d2:	ret    
   14001d3d3:	int3   
   14001d3d4:	mov    QWORD PTR [rsp+0x8],rcx
   14001d3d9:	push   rbx
   14001d3da:	sub    rsp,0x30
   14001d3de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d3e7:	mov    rbx,rcx
   14001d3ea:	cmp    BYTE PTR [rcx+0x8],0x0
   14001d3ee:	je     0x14001d405
   14001d3f0:	cmp    BYTE PTR [rcx+0x9],0x0
   14001d3f4:	jne    0x14001d3ff
   14001d3f6:	mov    rcx,QWORD PTR [rcx]
   14001d3f9:	call   QWORD PTR [rip+0x24151]        # 0x140041550
   14001d3ff:	mov    WORD PTR [rbx+0x8],0x0
   14001d405:	add    rsp,0x30
   14001d409:	pop    rbx
   14001d40a:	ret    
   14001d40b:	int3   
   14001d40c:	mov    QWORD PTR [rsp+0x8],rcx
   14001d411:	push   rbx
   14001d412:	sub    rsp,0x30
   14001d416:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d41f:	mov    rbx,rcx
   14001d422:	cmp    BYTE PTR [rcx+0x8],0x0
   14001d426:	je     0x14001d43d
   14001d428:	cmp    BYTE PTR [rcx+0x9],0x0
   14001d42c:	jne    0x14001d437
   14001d42e:	mov    rcx,QWORD PTR [rcx]
   14001d431:	mov    rax,QWORD PTR [rcx]
   14001d434:	call   QWORD PTR [rax+0x10]
   14001d437:	mov    WORD PTR [rbx+0x8],0x0
   14001d43d:	add    rsp,0x30
   14001d441:	pop    rbx
   14001d442:	ret    
   14001d443:	int3   
   14001d444:	mov    rax,rsp
   14001d447:	push   rbp
   14001d448:	push   rdi
   14001d449:	push   r15
   14001d44b:	lea    rbp,[rax-0x188]
   14001d452:	sub    rsp,0x270
   14001d459:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001d462:	mov    QWORD PTR [rax+0x10],rbx
   14001d466:	mov    QWORD PTR [rax+0x18],rsi
   14001d46a:	mov    rax,QWORD PTR [rip+0x3bc17]        # 0x140059088
   14001d471:	xor    rax,rsp
   14001d474:	mov    QWORD PTR [rbp+0x160],rax
   14001d47b:	mov    rdi,rcx
   14001d47e:	mov    QWORD PTR [rsp+0x28],rcx
   14001d483:	lea    rax,[rip+0x29f9e]        # 0x140047428
   14001d48a:	mov    QWORD PTR [rcx],rax
   14001d48d:	xor    r15d,r15d
   14001d490:	mov    DWORD PTR [rcx+0x8],r15d
   14001d494:	mov    QWORD PTR [rcx+0x10],r15
   14001d498:	mov    QWORD PTR [rcx+0x18],rdx
   14001d49c:	mov    QWORD PTR [rcx+0x20],r15
   14001d4a0:	mov    QWORD PTR [rcx+0x28],r15
   14001d4a4:	lea    rbx,[rcx+0x30]
   14001d4a8:	mov    QWORD PTR [rsp+0x20],rbx
   14001d4ad:	lea    rcx,[rip+0x3ce74]        # 0x14005a328
   14001d4b4:	mov    rax,QWORD PTR [rip+0x3ce6d]        # 0x14005a328
   14001d4bb:	call   QWORD PTR [rax+0x18]
   14001d4be:	add    rax,0x18
   14001d4c2:	mov    QWORD PTR [rbx],rax
   14001d4c5:	mov    QWORD PTR [rdi+0x38],r15
   14001d4c9:	mov    QWORD PTR [rdi+0x40],r15
   14001d4cd:	mov    QWORD PTR [rdi+0x48],r15
   14001d4d1:	mov    DWORD PTR [rdi+0x50],0x1
   14001d4d8:	lea    rsi,[rdi+0x58]
   14001d4dc:	mov    QWORD PTR [rsp+0x20],rsi
   14001d4e1:	lea    rcx,[rip+0x3ce40]        # 0x14005a328
   14001d4e8:	mov    rax,QWORD PTR [rip+0x3ce39]        # 0x14005a328
   14001d4ef:	call   QWORD PTR [rax+0x18]
   14001d4f2:	add    rax,0x18
   14001d4f6:	mov    QWORD PTR [rsi],rax
   14001d4f9:	lea    rbx,[rdi+0x60]
   14001d4fd:	mov    QWORD PTR [rsp+0x20],rbx
   14001d502:	lea    rcx,[rip+0x3ce1f]        # 0x14005a328
   14001d509:	mov    rax,QWORD PTR [rip+0x3ce18]        # 0x14005a328
   14001d510:	call   QWORD PTR [rax+0x18]
   14001d513:	add    rax,0x18
   14001d517:	mov    QWORD PTR [rbx],rax
   14001d51a:	lea    rbx,[rdi+0x68]
   14001d51e:	mov    QWORD PTR [rsp+0x20],rbx
   14001d523:	lea    rcx,[rip+0x3cdfe]        # 0x14005a328
   14001d52a:	mov    rax,QWORD PTR [rip+0x3cdf7]        # 0x14005a328
   14001d531:	call   QWORD PTR [rax+0x18]
   14001d534:	add    rax,0x18
   14001d538:	mov    QWORD PTR [rbx],rax
   14001d53b:	mov    DWORD PTR [rdi+0x88],r15d
   14001d542:	mov    rcx,rdi
   14001d545:	call   0x1400204ac
   14001d54a:	lea    rdx,[rsp+0x20]
   14001d54f:	mov    rcx,rdi
   14001d552:	call   0x14001d324
   14001d557:	nop
   14001d558:	mov    rdx,rax
   14001d55b:	mov    rcx,rsi
   14001d55e:	call   0x14000cdac
   14001d563:	nop
   14001d564:	mov    rdx,QWORD PTR [rsp+0x20]
   14001d569:	add    rdx,0xffffffffffffffe8
   14001d56d:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001d572:	jg     0x14001d57d
   14001d574:	mov    rcx,QWORD PTR [rdx]
   14001d577:	mov    rax,QWORD PTR [rcx]
   14001d57a:	call   QWORD PTR [rax+0x8]
   14001d57d:	mov    r8d,0x13
   14001d583:	lea    rdx,[rip+0x29bb6]        # 0x140047140
   14001d58a:	mov    rcx,rsi
   14001d58d:	call   0x140006cfc
   14001d592:	mov    rcx,QWORD PTR [rsi]
   14001d595:	call   QWORD PTR [rip+0x2405d]        # 0x1400415f8
   14001d59b:	cmp    eax,0xffffffff
   14001d59e:	jne    0x14001d65d
   14001d5a4:	mov    DWORD PTR [rsp+0x40],r15d
   14001d5a9:	mov    DWORD PTR [rsp+0x44],0xe12305a2
   14001d5b1:	mov    DWORD PTR [rsp+0x48],0x8b1
   14001d5b9:	mov    BYTE PTR [rsp+0x4c],r15b
   14001d5be:	lea    r9,[rbp+0x50]
   14001d5c2:	lea    r10,[rsp+0x40]
   14001d5c7:	lea    rcx,[rbp+0x50]
   14001d5cb:	lea    rdx,[rsp+0x40]
   14001d5d0:	mov    rax,rdx
   14001d5d3:	or     rax,rcx
   14001d5d6:	and    eax,0xf
   14001d5d9:	jne    0x14001d63b
   14001d5db:	mov    eax,0x2
   14001d5e0:	lea    r8d,[rax+0x7e]
   14001d5e4:	movaps xmm0,XMMWORD PTR [rdx]
   14001d5e7:	movaps XMMWORD PTR [rcx],xmm0
   14001d5ea:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   14001d5ee:	movaps XMMWORD PTR [rcx+0x10],xmm1
   14001d5f2:	movaps xmm0,XMMWORD PTR [rdx+0x20]
   14001d5f6:	movaps XMMWORD PTR [rcx+0x20],xmm0
   14001d5fa:	movaps xmm1,XMMWORD PTR [rdx+0x30]
   14001d5fe:	movaps XMMWORD PTR [rcx+0x30],xmm1
   14001d602:	movaps xmm0,XMMWORD PTR [rdx+0x40]
   14001d606:	movaps XMMWORD PTR [rcx+0x40],xmm0
   14001d60a:	movaps xmm1,XMMWORD PTR [rdx+0x50]
   14001d60e:	movaps XMMWORD PTR [rcx+0x50],xmm1
   14001d612:	movaps xmm0,XMMWORD PTR [rdx+0x60]
   14001d616:	movaps XMMWORD PTR [rcx+0x60],xmm0
   14001d61a:	add    rcx,r8
   14001d61d:	movaps xmm1,XMMWORD PTR [rdx+0x70]
   14001d621:	movaps XMMWORD PTR [rcx-0x10],xmm1
   14001d625:	add    rdx,r8
   14001d628:	dec    rax
   14001d62b:	jne    0x14001d5e4
   14001d62d:	mov    rax,QWORD PTR [rdx]
   14001d630:	mov    QWORD PTR [rcx],rax
   14001d633:	mov    eax,DWORD PTR [rdx+0x8]
   14001d636:	mov    DWORD PTR [rcx+0x8],eax
   14001d639:	jmp    0x14001d64c
   14001d63b:	mov    r8d,0x10c
   14001d641:	mov    rdx,r10
   14001d644:	mov    rcx,r9
   14001d647:	call   0x1400265d0
   14001d64c:	lea    rdx,[rip+0x38d2d]        # 0x140056380
   14001d653:	lea    rcx,[rbp+0x50]
   14001d657:	call   0x140029fe8
   14001d65c:	nop
   14001d65d:	mov    rax,rdi
   14001d660:	mov    rcx,QWORD PTR [rbp+0x160]
   14001d667:	xor    rcx,rsp
   14001d66a:	call   0x1400265a0
   14001d66f:	lea    r11,[rsp+0x270]
   14001d677:	mov    rbx,QWORD PTR [r11+0x28]
   14001d67b:	mov    rsi,QWORD PTR [r11+0x30]
   14001d67f:	mov    rsp,r11
   14001d682:	pop    r15
   14001d684:	pop    rdi
   14001d685:	pop    rbp
   14001d686:	ret    
   14001d687:	int3   
   14001d688:	rex push rdi
   14001d68a:	sub    rsp,0x30
   14001d68e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d697:	mov    QWORD PTR [rsp+0x40],rbx
   14001d69c:	mov    rdi,rcx
   14001d69f:	xor    ecx,ecx
   14001d6a1:	call   0x140018b6c
   14001d6a6:	mov    edx,eax
   14001d6a8:	xor    ebx,ebx
   14001d6aa:	test   eax,eax
   14001d6ac:	je     0x14001d6cd
   14001d6ae:	mov    ecx,eax
   14001d6b0:	and    ecx,0x1fff0000
   14001d6b6:	cmp    ecx,0x1230000
   14001d6bc:	je     0x14001d6fc
   14001d6be:	movzx  eax,ax
   14001d6c1:	or     eax,0x80070000
   14001d6c6:	test   edx,edx
   14001d6c8:	cmovle eax,edx
   14001d6cb:	jmp    0x14001d6fc
   14001d6cd:	mov    ecx,0x1098
   14001d6d2:	call   0x140026da8
   14001d6d7:	mov    QWORD PTR [rsp+0x50],rax
   14001d6dc:	test   rax,rax
   14001d6df:	je     0x14001d6ec
   14001d6e1:	mov    rcx,rax
   14001d6e4:	call   0x14001a94c
   14001d6e9:	mov    rbx,rax
   14001d6ec:	mov    QWORD PTR [rdi+0x10],rbx
   14001d6f0:	neg    rbx
   14001d6f3:	sbb    eax,eax
   14001d6f5:	not    eax
   14001d6f7:	and    eax,0x8007000e
   14001d6fc:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d701:	add    rsp,0x30
   14001d705:	pop    rdi
   14001d706:	ret    
   14001d707:	int3   
   14001d708:	mov    rax,rsp
   14001d70b:	push   rsi
   14001d70c:	push   rdi
   14001d70d:	push   r14
   14001d70f:	sub    rsp,0x350
   14001d716:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14001d71f:	mov    QWORD PTR [rax+0x10],rbx
   14001d723:	mov    QWORD PTR [rax+0x18],rbp
   14001d727:	mov    rax,QWORD PTR [rip+0x3b95a]        # 0x140059088
   14001d72e:	xor    rax,rsp
   14001d731:	mov    QWORD PTR [rsp+0x340],rax
   14001d739:	mov    rsi,r9
   14001d73c:	mov    ebp,r8d
   14001d73f:	mov    r14d,edx
   14001d742:	mov    rbx,rcx
   14001d745:	mov    rcx,QWORD PTR [rcx+0x10]
   14001d749:	add    rcx,0xf08
   14001d750:	mov    r8,r9
   14001d753:	mov    rdx,QWORD PTR [rbx+0x18]
   14001d757:	call   0x14001933c
   14001d75c:	lea    rcx,[rsp+0x60]
   14001d761:	call   0x14001a040
   14001d766:	nop
   14001d767:	lea    rcx,[rsp+0x60]
   14001d76c:	call   0x14001a2ec
   14001d771:	mov    rax,QWORD PTR [rsp+0x70]
   14001d776:	mov    edi,DWORD PTR [rax+0xa4]
   14001d77c:	lea    rcx,[rsp+0x60]
   14001d781:	call   0x14001a144
   14001d786:	mov    edx,0x4
   14001d78b:	cmp    edi,0x1
   14001d78e:	jne    0x14001d79b
   14001d790:	mov    DWORD PTR [rbx+0x40],0x6
   14001d797:	mov    edx,edi
   14001d799:	jmp    0x14001d7a9
   14001d79b:	cmp    edi,0x10
   14001d79e:	jne    0x14001d7ad
   14001d7a0:	mov    DWORD PTR [rbx+0x40],0x7
   14001d7a7:	mov    edx,edi
   14001d7a9:	and    DWORD PTR [rbx+0x44],0x0
   14001d7ad:	lea    rcx,[rbx+0x24]
   14001d7b1:	lea    r8,[rbx+0x20]
   14001d7b5:	mov    DWORD PTR [rsp+0x40],ebp
   14001d7b9:	mov    DWORD PTR [rsp+0x38],r14d
   14001d7be:	mov    rax,QWORD PTR [rbx+0x18]
   14001d7c2:	mov    QWORD PTR [rsp+0x30],rax
   14001d7c7:	mov    QWORD PTR [rsp+0x28],rcx
   14001d7cc:	mov    QWORD PTR [rsp+0x20],r8
   14001d7d1:	mov    r9,rsi
   14001d7d4:	mov    rcx,QWORD PTR [rbx+0x10]
   14001d7d8:	call   0x14001aff0
   14001d7dd:	test   eax,eax
   14001d7df:	jne    0x14001d7fb
   14001d7e1:	mov    DWORD PTR [rbx+0x8],0x1
   14001d7e8:	mov    rcx,rbx
   14001d7eb:	call   0x14001d824
   14001d7f0:	neg    eax
   14001d7f2:	sbb    eax,eax
   14001d7f4:	not    eax
   14001d7f6:	and    eax,0x3eb
   14001d7fb:	mov    rcx,QWORD PTR [rsp+0x340]
   14001d803:	xor    rcx,rsp
   14001d806:	call   0x1400265a0
   14001d80b:	lea    r11,[rsp+0x350]
   14001d813:	mov    rbx,QWORD PTR [r11+0x28]
   14001d817:	mov    rbp,QWORD PTR [r11+0x30]
   14001d81b:	mov    rsp,r11
   14001d81e:	pop    r14
   14001d820:	pop    rdi
   14001d821:	pop    rsi
   14001d822:	ret    
   14001d823:	int3   
   14001d824:	rex push rbx
   14001d826:	sub    rsp,0x40
   14001d82a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001d833:	mov    rbx,rcx
   14001d836:	xor    r9d,r9d
   14001d839:	xor    r8d,r8d
   14001d83c:	mov    dl,0x16
   14001d83e:	call   0x140015618
   14001d843:	mov    ecx,0x78
   14001d848:	call   0x140026da8
   14001d84d:	mov    rcx,rax
   14001d850:	mov    QWORD PTR [rsp+0x50],rax
   14001d855:	xor    eax,eax
   14001d857:	test   rcx,rcx
   14001d85a:	je     0x14001d870
   14001d85c:	lea    r8,[rip+0x298bd]        # 0x140047120
   14001d863:	lea    rdx,[rip+0x287fe]        # 0x140046068
   14001d86a:	call   0x14000fca0
   14001d86f:	nop
   14001d870:	mov    QWORD PTR [rbx+0x38],rax
   14001d874:	mov    r8d,0xc0000000
   14001d87a:	lea    rdx,[rip+0x2847f]        # 0x140045d00
   14001d881:	mov    rcx,rax
   14001d884:	call   0x14000f98c
   14001d889:	movsxd rbx,eax
   14001d88c:	mov    r9,rbx
   14001d88f:	xor    r8d,r8d
   14001d892:	mov    dl,0x17
   14001d894:	call   0x140015618
   14001d899:	mov    eax,ebx
   14001d89b:	add    rsp,0x40
   14001d89f:	pop    rbx
   14001d8a0:	ret    
   14001d8a1:	int3   
   14001d8a2:	int3   
   14001d8a3:	int3   
   14001d8a4:	mov    QWORD PTR [rsp+0x10],rbx
   14001d8a9:	mov    QWORD PTR [rsp+0x8],rcx
   14001d8ae:	push   rdi
   14001d8af:	sub    rsp,0x40
   14001d8b3:	and    QWORD PTR [rsp+0x50],0x0
   14001d8b9:	mov    rbx,r8
   14001d8bc:	mov    rdi,rdx
   14001d8bf:	call   QWORD PTR [rip+0x23c7b]        # 0x140041540
   14001d8c5:	mov    DWORD PTR [rsp+0x30],0x3
   14001d8cd:	and    DWORD PTR [rsp+0x28],0x0
   14001d8d2:	and    DWORD PTR [rsp+0x20],0x0
   14001d8d7:	lea    r9,[rsp+0x50]
   14001d8dc:	mov    r8,rax
   14001d8df:	mov    rdx,rbx
   14001d8e2:	mov    rcx,rdi
   14001d8e5:	call   QWORD PTR [rip+0x23dcd]        # 0x1400416b8
   14001d8eb:	test   eax,eax
   14001d8ed:	je     0x14001d8ff
   14001d8ef:	mov    rcx,QWORD PTR [rsp+0x50]
   14001d8f4:	call   QWORD PTR [rip+0x23a8e]        # 0x140041388
   14001d8fa:	mov    eax,0x1
   14001d8ff:	mov    rbx,QWORD PTR [rsp+0x58]
   14001d904:	add    rsp,0x40
   14001d908:	pop    rdi
   14001d909:	ret    
   14001d90a:	int3   
   14001d90b:	int3   
   14001d90c:	mov    rax,rsp
   14001d90f:	mov    QWORD PTR [rax+0x10],rbx
   14001d913:	mov    QWORD PTR [rax+0x18],rsi
   14001d917:	mov    QWORD PTR [rax+0x8],rcx
   14001d91b:	push   rdi
   14001d91c:	sub    rsp,0x50
   14001d920:	and    QWORD PTR [rax-0x28],0x0
   14001d925:	mov    rbx,r9
   14001d928:	xor    r9d,r9d
   14001d92b:	mov    rsi,r8
   14001d92e:	mov    rdi,rdx
   14001d931:	mov    DWORD PTR [rax-0x30],0x40000000
   14001d938:	lea    r8d,[r9+0x3]
   14001d93c:	lea    rcx,[rip+0x283bd]        # 0x140045d00
   14001d943:	mov    edx,0xc0000000
   14001d948:	mov    DWORD PTR [rax-0x38],0x3
   14001d94f:	call   QWORD PTR [rip+0x239db]        # 0x140041330
   14001d955:	mov    QWORD PTR [rsp+0x60],rax
   14001d95a:	cmp    rax,0xffffffffffffffff
   14001d95e:	jne    0x14001d967
   14001d960:	xor    eax,eax
   14001d962:	jmp    0x14001da1c
   14001d967:	call   QWORD PTR [rip+0x23bd3]        # 0x140041540
   14001d96d:	mov    rdx,QWORD PTR [rsp+0x60]
   14001d972:	mov    DWORD PTR [rsp+0x30],0x2
   14001d97a:	and    DWORD PTR [rsp+0x28],0x0
   14001d97f:	and    DWORD PTR [rsp+0x20],0x0
   14001d984:	lea    r9,[rsp+0x40]
   14001d989:	mov    rcx,rax
   14001d98c:	mov    r8,rdi
   14001d98f:	call   QWORD PTR [rip+0x23d23]        # 0x1400416b8
   14001d995:	mov    rcx,QWORD PTR [rsp+0x60]
   14001d99a:	test   eax,eax
   14001d99c:	jne    0x14001d9a6
   14001d99e:	call   QWORD PTR [rip+0x239e4]        # 0x140041388
   14001d9a4:	jmp    0x14001d960
   14001d9a6:	call   QWORD PTR [rip+0x239dc]        # 0x140041388
   14001d9ac:	and    QWORD PTR [rsp+0x20],0x0
   14001d9b2:	lea    r8,[rsp+0x40]
   14001d9b7:	mov    r9d,0x8
   14001d9bd:	mov    rdx,rsi
   14001d9c0:	mov    rcx,rdi
   14001d9c3:	call   QWORD PTR [rip+0x23cf7]        # 0x1400416c0
   14001d9c9:	test   eax,eax
   14001d9cb:	jne    0x14001da0a
   14001d9cd:	call   QWORD PTR [rip+0x23b6d]        # 0x140041540
   14001d9d3:	mov    rdx,QWORD PTR [rsp+0x40]
   14001d9d8:	mov    DWORD PTR [rsp+0x30],0x3
   14001d9e0:	and    DWORD PTR [rsp+0x28],0x0
   14001d9e5:	and    DWORD PTR [rsp+0x20],0x0
   14001d9ea:	lea    r9,[rsp+0x60]
   14001d9ef:	mov    r8,rax
   14001d9f2:	mov    rcx,rdi
   14001d9f5:	call   QWORD PTR [rip+0x23cbd]        # 0x1400416b8
   14001d9fb:	test   eax,eax
   14001d9fd:	je     0x14001d960
   14001da03:	mov    rcx,QWORD PTR [rsp+0x60]
   14001da08:	jmp    0x14001d99e
   14001da0a:	test   rbx,rbx
   14001da0d:	je     0x14001da17
   14001da0f:	mov    rax,QWORD PTR [rsp+0x40]
   14001da14:	mov    QWORD PTR [rbx],rax
   14001da17:	mov    eax,0x1
   14001da1c:	mov    rbx,QWORD PTR [rsp+0x68]
   14001da21:	mov    rsi,QWORD PTR [rsp+0x70]
   14001da26:	add    rsp,0x50
   14001da2a:	pop    rdi
   14001da2b:	ret    
   14001da2c:	mov    rax,rsp
   14001da2f:	mov    QWORD PTR [rax+0x8],rcx
   14001da33:	push   r13
   14001da35:	push   r14
   14001da37:	push   r15
   14001da39:	sub    rsp,0xc0
   14001da40:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001da48:	mov    QWORD PTR [rax+0x10],rbx
   14001da4c:	mov    QWORD PTR [rax+0x18],rsi
   14001da50:	mov    QWORD PTR [rax+0x20],r12
   14001da54:	mov    esi,r9d
   14001da57:	mov    r13,r8
   14001da5a:	mov    r14,rcx
   14001da5d:	call   0x14001d360
   14001da62:	test   al,al
   14001da64:	jne    0x14001dcf3
   14001da6a:	mov    rax,QWORD PTR [r14+0x10]
   14001da6e:	mov    r15,QWORD PTR [rax+0x940]
   14001da75:	mov    eax,DWORD PTR [r15+0xa8]
   14001da7c:	mov    ebx,DWORD PTR [r15+0xac]
   14001da83:	test   eax,eax
   14001da85:	je     0x14001dabb
   14001da87:	cmp    eax,esi
   14001da89:	je     0x14001da95
   14001da8b:	mov    eax,0xe123058f
   14001da90:	jmp    0x14001dcf5
   14001da95:	mov    r12d,DWORD PTR [rsp+0x100]
   14001da9d:	cmp    ebx,r12d
   14001daa0:	je     0x14001dac3
   14001daa2:	mov    rcx,QWORD PTR [r14+0x18]
   14001daa6:	mov    rax,QWORD PTR [rcx]
   14001daa9:	xor    r9d,r9d
   14001daac:	xor    r8d,r8d
   14001daaf:	mov    edx,0xa1230916
   14001dab4:	call   QWORD PTR [rax]
   14001dab6:	mov    r12d,ebx
   14001dab9:	jmp    0x14001dac3
   14001dabb:	mov    r12d,DWORD PTR [rsp+0x100]
   14001dac3:	lea    eax,[rsi-0x6]
   14001dac6:	mov    ebx,0x1
   14001dacb:	cmp    eax,ebx
   14001dacd:	jbe    0x14001dce4
   14001dad3:	mov    QWORD PTR [rsp+0x40],r13
   14001dad8:	lea    r13d,[rbx+0x1f]
   14001dadc:	mov    r8d,r13d
   14001dadf:	xor    edx,edx
   14001dae1:	lea    rcx,[rsp+0x48]
   14001dae6:	call   0x14002bb90
   14001daeb:	xor    eax,eax
   14001daed:	cmp    DWORD PTR [r14+0x48],eax
   14001daf1:	cmovne eax,ebx
   14001daf4:	mov    DWORD PTR [rsp+0x4c],eax
   14001daf8:	cmp    esi,ebx
   14001dafa:	je     0x14001db5f
   14001dafc:	cmp    esi,0x2
   14001daff:	jbe    0x14001db55
   14001db01:	cmp    esi,0x4
   14001db04:	jbe    0x14001db47
   14001db06:	cmp    esi,0x5
   14001db09:	jne    0x14001db55
   14001db0b:	cmp    QWORD PTR [r14+0x78],0x0
   14001db10:	jne    0x14001db1c
   14001db12:	mov    eax,0xe12305e3
   14001db17:	jmp    0x14001dcf5
   14001db1c:	mov    DWORD PTR [rsp+0x48],0x5
   14001db24:	mov    rax,QWORD PTR [r14+0x70]
   14001db28:	mov    QWORD PTR [rsp+0x50],rax
   14001db2d:	mov    rax,QWORD PTR [r14+0x78]
   14001db31:	mov    QWORD PTR [rsp+0x58],rax
   14001db36:	mov    rax,QWORD PTR [r14+0x80]
   14001db3d:	mov    QWORD PTR [rsp+0x60],rax
   14001db42:	jmp    0x14001dc74
   14001db47:	mov    DWORD PTR [rsp+0x48],esi
   14001db4b:	mov    DWORD PTR [rsp+0x50],r12d
   14001db50:	jmp    0x14001dc74
   14001db55:	mov    eax,0x80004005
   14001db5a:	jmp    0x14001dcf5
   14001db5f:	lea    rcx,[rip+0x3c7c2]        # 0x14005a328
   14001db66:	mov    rax,QWORD PTR [rip+0x3c7bb]        # 0x14005a328
   14001db6d:	call   QWORD PTR [rax+0x18]
   14001db70:	lea    rbx,[rax+0x18]
   14001db74:	mov    QWORD PTR [rsp+0x30],rbx
   14001db79:	call   0x140004250
   14001db7e:	test   eax,eax
   14001db80:	jne    0x14001dc34
   14001db86:	lea    rcx,[rip+0x3c79b]        # 0x14005a328
   14001db8d:	mov    rax,QWORD PTR [rip+0x3c794]        # 0x14005a328
   14001db94:	call   QWORD PTR [rax+0x18]
   14001db97:	mov    QWORD PTR [rsp+0xa0],rax
   14001db9f:	add    rax,0x18
   14001dba3:	mov    QWORD PTR [rsp+0x38],rax
   14001dba8:	mov    rdx,QWORD PTR [r14+0x28]
   14001dbac:	mov    QWORD PTR [rsp+0x88],rdx
   14001dbb4:	mov    rcx,QWORD PTR [r14+0x18]
   14001dbb8:	mov    QWORD PTR [rsp+0x98],rcx
   14001dbc0:	call   0x140015eac
   14001dbc5:	mov    QWORD PTR [rsp+0xa8],rax
   14001dbcd:	mov    r9,rax
   14001dbd0:	lea    r8,[rsp+0x38]
   14001dbd5:	lea    rdx,[rsp+0x70]
   14001dbda:	lea    rcx,[rip+0x29597]        # 0x140047178
   14001dbe1:	call   0x1400260b8
   14001dbe6:	nop
   14001dbe7:	mov    rcx,QWORD PTR [rsp+0x38]
   14001dbec:	add    rcx,0xffffffffffffffe8
   14001dbf0:	mov    QWORD PTR [rsp+0x68],rcx
   14001dbf5:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14001dbfa:	jg     0x14001dc0a
   14001dbfc:	mov    rdx,QWORD PTR [rsp+0x68]
   14001dc01:	mov    rcx,QWORD PTR [rdx]
   14001dc04:	mov    rax,QWORD PTR [rcx]
   14001dc07:	call   QWORD PTR [rax+0x8]
   14001dc0a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dc0f:	jmp    0x14001dc34
   14001dc11:	mov    rdx,QWORD PTR [rsp+0x30]
   14001dc16:	add    rdx,0xffffffffffffffe8
   14001dc1a:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001dc1f:	jg     0x14001dc2a
   14001dc21:	mov    rcx,QWORD PTR [rdx]
   14001dc24:	mov    rax,QWORD PTR [rcx]
   14001dc27:	call   QWORD PTR [rax+0x8]
   14001dc2a:	mov    eax,0xe1230544
   14001dc2f:	jmp    0x14001dcf5
   14001dc34:	mov    ecx,r12d
   14001dc37:	mov    QWORD PTR [rsp+0x78],rcx
   14001dc3c:	mov    DWORD PTR [rsp+0x48],0x1
   14001dc44:	mov    rax,QWORD PTR [rsp+0x70]
   14001dc49:	mov    QWORD PTR [rsp+0x50],rax
   14001dc4e:	mov    QWORD PTR [rsp+0x58],rcx
   14001dc53:	mov    rax,QWORD PTR [rsp+0x80]
   14001dc5b:	mov    QWORD PTR [rsp+0x60],rax
   14001dc60:	lea    rdx,[rbx-0x18]
   14001dc64:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001dc69:	jg     0x14001dc74
   14001dc6b:	mov    rcx,QWORD PTR [rdx]
   14001dc6e:	mov    rax,QWORD PTR [rcx]
   14001dc71:	call   QWORD PTR [rax+0x8]
   14001dc74:	mov    rcx,QWORD PTR [r14+0x38]
   14001dc78:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001dc7c:	je     0x14001dca0
   14001dc7e:	and    DWORD PTR [rsp+0x28],0x0
   14001dc83:	and    QWORD PTR [rsp+0x20],0x0
   14001dc89:	mov    r9d,0x28
   14001dc8f:	lea    r8,[rsp+0x40]
   14001dc94:	mov    edx,0x8000a484
   14001dc99:	call   0x14000fc30
   14001dc9e:	jmp    0x14001dca2
   14001dca0:	xor    eax,eax
   14001dca2:	test   eax,eax
   14001dca4:	je     0x14001dc2a
   14001dca6:	mov    DWORD PTR [r15+0xa8],esi
   14001dcad:	mov    DWORD PTR [r15+0xac],r12d
   14001dcb4:	cmp    esi,0x5
   14001dcb7:	jne    0x14001dcf3
   14001dcb9:	lea    rcx,[r15+0x210]
   14001dcc0:	test   rcx,rcx
   14001dcc3:	je     0x14001dcf3
   14001dcc5:	mov    DWORD PTR [rcx],esi
   14001dcc7:	add    rcx,0x10
   14001dccb:	or     r9,0xffffffffffffffff
   14001dccf:	mov    r8,QWORD PTR [rsp+0x108]
   14001dcd7:	mov    r8,QWORD PTR [r8]
   14001dcda:	mov    rdx,r13
   14001dcdd:	call   0x14002e200
   14001dce2:	jmp    0x14001dcf3
   14001dce4:	mov    DWORD PTR [r15+0xa8],esi
   14001dceb:	and    DWORD PTR [r15+0xac],0x0
   14001dcf3:	xor    eax,eax
   14001dcf5:	lea    r11,[rsp+0xc0]
   14001dcfd:	mov    rbx,QWORD PTR [r11+0x28]
   14001dd01:	mov    rsi,QWORD PTR [r11+0x30]
   14001dd05:	mov    r12,QWORD PTR [r11+0x38]
   14001dd09:	mov    rsp,r11
   14001dd0c:	pop    r15
   14001dd0e:	pop    r14
   14001dd10:	pop    r13
   14001dd12:	ret    
   14001dd13:	int3   
   14001dd14:	mov    QWORD PTR [rsp+0x8],rbx
   14001dd19:	mov    QWORD PTR [rsp+0x10],rbp
   14001dd1e:	mov    QWORD PTR [rsp+0x18],rsi
   14001dd23:	push   rdi
   14001dd24:	sub    rsp,0x70
   14001dd28:	mov    rbp,rcx
   14001dd2b:	lea    rcx,[rip+0x2940e]        # 0x140047140
   14001dd32:	mov    rsi,r8
   14001dd35:	call   QWORD PTR [rip+0x2362d]        # 0x140041368
   14001dd3b:	xor    ebx,ebx
   14001dd3d:	test   rax,rax
   14001dd40:	je     0x14001ddb3
   14001dd42:	lea    rdx,[rip+0x2976f]        # 0x1400474b8
   14001dd49:	mov    rcx,rax
   14001dd4c:	call   QWORD PTR [rip+0x23596]        # 0x1400412e8
   14001dd52:	test   rax,rax
   14001dd55:	je     0x14001ddb3
   14001dd57:	call   rax
   14001dd59:	mov    rdi,rax
   14001dd5c:	test   rax,rax
   14001dd5f:	je     0x14001ddb3
   14001dd61:	lea    r8d,[rbx+0x40]
   14001dd65:	lea    rcx,[rsp+0x30]
   14001dd6a:	xor    edx,edx
   14001dd6c:	call   0x14002bb90
   14001dd71:	mov    rcx,QWORD PTR [rbp+0x38]
   14001dd75:	mov    QWORD PTR [rsp+0x30],rsi
   14001dd7a:	mov    rax,QWORD PTR [rdi+0x38]
   14001dd7e:	mov    DWORD PTR [rsp+0x6c],0x1
   14001dd86:	mov    QWORD PTR [rsp+0x38],rax
   14001dd8b:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001dd8f:	je     0x14001ddaf
   14001dd91:	lea    r9d,[rbx+0x40]
   14001dd95:	lea    r8,[rsp+0x30]
   14001dd9a:	mov    edx,0x8000a424
   14001dd9f:	mov    DWORD PTR [rsp+0x28],ebx
   14001dda3:	mov    QWORD PTR [rsp+0x20],rbx
   14001dda8:	call   0x14000fc30
   14001ddad:	mov    ebx,eax
   14001ddaf:	mov    eax,ebx
   14001ddb1:	jmp    0x14001ddb5
   14001ddb3:	xor    eax,eax
   14001ddb5:	lea    r11,[rsp+0x70]
   14001ddba:	mov    rbx,QWORD PTR [r11+0x10]
   14001ddbe:	mov    rbp,QWORD PTR [r11+0x18]
   14001ddc2:	mov    rsi,QWORD PTR [r11+0x20]
   14001ddc6:	mov    rsp,r11
   14001ddc9:	pop    rdi
   14001ddca:	ret    
   14001ddcb:	int3   
   14001ddcc:	mov    QWORD PTR [rsp+0x8],rbx
   14001ddd1:	push   rdi
   14001ddd2:	sub    rsp,0x70
   14001ddd6:	xor    edx,edx
   14001ddd8:	mov    rdi,r8
   14001dddb:	mov    rbx,rcx
   14001ddde:	lea    r8d,[rdx+0x40]
   14001dde2:	lea    rcx,[rsp+0x30]
   14001dde7:	call   0x14002bb90
   14001ddec:	mov    rcx,QWORD PTR [rbx+0x38]
   14001ddf0:	mov    QWORD PTR [rsp+0x30],rdi
   14001ddf5:	xor    eax,eax
   14001ddf7:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001ddfb:	je     0x14001de19
   14001ddfd:	mov    DWORD PTR [rsp+0x28],eax
   14001de01:	lea    r9d,[rax+0x40]
   14001de05:	lea    r8,[rsp+0x30]
   14001de0a:	mov    edx,0x8000a424
   14001de0f:	mov    QWORD PTR [rsp+0x20],rax
   14001de14:	call   0x14000fc30
   14001de19:	mov    rbx,QWORD PTR [rsp+0x80]
   14001de21:	add    rsp,0x70
   14001de25:	pop    rdi
   14001de26:	ret    
   14001de27:	int3   
   14001de28:	mov    rax,rsp
   14001de2b:	push   rdi
   14001de2c:	sub    rsp,0x340
   14001de33:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001de3c:	mov    QWORD PTR [rax+0x18],rbx
   14001de40:	mov    QWORD PTR [rax+0x20],rsi
   14001de44:	mov    rax,QWORD PTR [rip+0x3b23d]        # 0x140059088
   14001de4b:	xor    rax,rsp
   14001de4e:	mov    QWORD PTR [rsp+0x330],rax
   14001de56:	mov    rsi,rdx
   14001de59:	mov    rdi,rcx
   14001de5c:	call   0x14001d360
   14001de61:	test   al,al
   14001de63:	je     0x14001de6c
   14001de65:	mov    eax,0x1
   14001de6a:	jmp    0x14001ded5
   14001de6c:	lea    rcx,[rsp+0x50]
   14001de71:	call   0x14001a040
   14001de76:	nop
   14001de77:	lea    rcx,[rsp+0x50]
   14001de7c:	call   0x14001a2ec
   14001de81:	mov    rax,QWORD PTR [rsp+0x60]
   14001de86:	mov    ebx,DWORD PTR [rax+0xa4]
   14001de8c:	lea    rcx,[rsp+0x50]
   14001de91:	call   0x14001a144
   14001de96:	mov    eax,0x1
   14001de9b:	cmp    ebx,eax
   14001de9d:	je     0x14001ded5
   14001de9f:	cmp    ebx,0x10
   14001dea2:	je     0x14001ded5
   14001dea4:	mov    QWORD PTR [rsp+0x40],rsi
   14001dea9:	mov    rcx,QWORD PTR [rdi+0x38]
   14001dead:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001deb1:	je     0x14001ded3
   14001deb3:	and    DWORD PTR [rsp+0x28],0x0
   14001deb8:	and    QWORD PTR [rsp+0x20],0x0
   14001debe:	lea    r9d,[rax+0x7]
   14001dec2:	lea    r8,[rsp+0x40]
   14001dec7:	mov    edx,0x8000a488
   14001decc:	call   0x14000fc30
   14001ded1:	jmp    0x14001ded5
   14001ded3:	xor    eax,eax
   14001ded5:	mov    rcx,QWORD PTR [rsp+0x330]
   14001dedd:	xor    rcx,rsp
   14001dee0:	call   0x1400265a0
   14001dee5:	lea    r11,[rsp+0x340]
   14001deed:	mov    rbx,QWORD PTR [r11+0x20]
   14001def1:	mov    rsi,QWORD PTR [r11+0x28]
   14001def5:	mov    rsp,r11
   14001def8:	pop    rdi
   14001def9:	ret    
   14001defa:	int3   
   14001defb:	int3   
   14001defc:	rex push rbp
   14001defe:	push   rbx
   14001deff:	push   rsi
   14001df00:	push   rdi
   14001df01:	push   r12
   14001df03:	push   r13
   14001df05:	push   r14
   14001df07:	push   r15
   14001df09:	lea    rbp,[rsp-0xf]
   14001df0e:	sub    rsp,0xf8
   14001df15:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   14001df1d:	mov    rax,QWORD PTR [rip+0x3b164]        # 0x140059088
   14001df24:	xor    rax,rsp
   14001df27:	mov    QWORD PTR [rbp-0x9],rax
   14001df2b:	mov    r14,r9
   14001df2e:	mov    r12d,r8d
   14001df31:	mov    rsi,rdx
   14001df34:	mov    r15,rcx
   14001df37:	mov    r13,QWORD PTR [rbp+0x7f]
   14001df3b:	xor    ebx,ebx
   14001df3d:	mov    rcx,QWORD PTR [rip+0x3f4e4]        # 0x14005d428
   14001df44:	test   rcx,rcx
   14001df47:	jne    0x14001e099
   14001df4d:	and    QWORD PTR [rbp-0x59],rbx
   14001df51:	xor    edi,edi
   14001df53:	mov    rax,QWORD PTR [rip+0x3f4c6]        # 0x14005d420
   14001df5a:	test   rax,rax
   14001df5d:	jne    0x14001dfdd
   14001df5f:	lea    rcx,[rip+0x29202]        # 0x140047168
   14001df66:	call   QWORD PTR [rip+0x23694]        # 0x140041600
   14001df6c:	mov    rcx,rax
   14001df6f:	test   rax,rax
   14001df72:	jne    0x14001df8a
   14001df74:	call   QWORD PTR [rip+0x2345e]        # 0x1400413d8
   14001df7a:	movzx  ebx,ax
   14001df7d:	or     ebx,0x80070000
   14001df83:	test   eax,eax
   14001df85:	cmovle ebx,eax
   14001df88:	jmp    0x14001dfe2
   14001df8a:	mov    WORD PTR [rsp+0x68],bx
   14001df8f:	mov    QWORD PTR [rsp+0x60],rax
   14001df94:	mov    BYTE PTR [rsp+0x68],0x1
   14001df99:	xor    eax,eax
   14001df9b:	lock cmpxchg QWORD PTR [rip+0x3f47c],rcx        # 0x14005d420
   14001dfa4:	jne    0x14001dfc2
   14001dfa6:	mov    rax,QWORD PTR [rip+0x3f473]        # 0x14005d420
   14001dfad:	mov    QWORD PTR [rip+0x3f4bc],rax        # 0x14005d470
   14001dfb4:	mov    BYTE PTR [rip+0x3f4bd],0x1        # 0x14005d478
   14001dfbb:	mov    al,0x1
   14001dfbd:	mov    BYTE PTR [rbp-0x80],al
   14001dfc0:	jmp    0x14001dfc5
   14001dfc2:	mov    al,BYTE PTR [rbp-0x80]
   14001dfc5:	test   al,al
   14001dfc7:	jne    0x14001dfcf
   14001dfc9:	call   QWORD PTR [rip+0x23581]        # 0x140041550
   14001dfcf:	mov    WORD PTR [rsp+0x68],0x0
   14001dfd6:	mov    rax,QWORD PTR [rip+0x3f443]        # 0x14005d420
   14001dfdd:	mov    rdi,rax
   14001dfe0:	xor    ebx,ebx
   14001dfe2:	test   ebx,ebx
   14001dfe4:	js     0x14001e095
   14001dfea:	lea    rdx,[rip+0x28417]        # 0x140046408
   14001dff1:	mov    rcx,rdi
   14001dff4:	call   QWORD PTR [rip+0x232ee]        # 0x1400412e8
   14001dffa:	test   rax,rax
   14001dffd:	jne    0x14001e015
   14001dfff:	call   QWORD PTR [rip+0x233d3]        # 0x1400413d8
   14001e005:	movzx  ebx,ax
   14001e008:	or     ebx,0x80070000
   14001e00e:	test   eax,eax
   14001e010:	cmovle ebx,eax
   14001e013:	jmp    0x14001e02b
   14001e015:	lea    r8,[rbp-0x59]
   14001e019:	lea    rdx,[rip+0x281f8]        # 0x140046218
   14001e020:	lea    rcx,[rip+0x281c1]        # 0x1400461e8
   14001e027:	call   rax
   14001e029:	mov    ebx,eax
   14001e02b:	test   ebx,ebx
   14001e02d:	js     0x14001e095
   14001e02f:	mov    WORD PTR [rsp+0x50],0x0
   14001e036:	mov    rcx,QWORD PTR [rbp-0x59]
   14001e03a:	mov    QWORD PTR [rsp+0x48],rcx
   14001e03f:	mov    BYTE PTR [rsp+0x50],0x1
   14001e044:	mov    rcx,QWORD PTR [rbp-0x59]
   14001e048:	xor    eax,eax
   14001e04a:	lock cmpxchg QWORD PTR [rip+0x3f3d5],rcx        # 0x14005d428
   14001e053:	jne    0x14001e072
   14001e055:	mov    rax,QWORD PTR [rip+0x3f3cc]        # 0x14005d428
   14001e05c:	mov    QWORD PTR [rip+0x3f3fd],rax        # 0x14005d460
   14001e063:	mov    BYTE PTR [rip+0x3f3fe],0x1        # 0x14005d468
   14001e06a:	mov    al,0x1
   14001e06c:	mov    BYTE PTR [rsp+0x51],al
   14001e070:	jmp    0x14001e076
   14001e072:	mov    al,BYTE PTR [rsp+0x51]
   14001e076:	test   al,al
   14001e078:	jne    0x14001e085
   14001e07a:	mov    rcx,QWORD PTR [rsp+0x48]
   14001e07f:	mov    rax,QWORD PTR [rcx]
   14001e082:	call   QWORD PTR [rax+0x10]
   14001e085:	mov    WORD PTR [rsp+0x50],0x0
   14001e08c:	mov    rcx,QWORD PTR [rip+0x3f395]        # 0x14005d428
   14001e093:	jmp    0x14001e099
   14001e095:	mov    rcx,QWORD PTR [rbp-0x69]
   14001e099:	test   ebx,ebx
   14001e09b:	jns    0x14001e0a4
   14001e09d:	mov    eax,ebx
   14001e09f:	jmp    0x14001e2c9
   14001e0a4:	and    QWORD PTR [rbp-0x61],0x0
   14001e0a9:	mov    rax,QWORD PTR [rcx]
   14001e0ac:	lea    r8,[rbp-0x61]
   14001e0b0:	mov    rdx,rsi
   14001e0b3:	call   QWORD PTR [rax+0x30]
   14001e0b6:	mov    edi,eax
   14001e0b8:	xor    esi,esi
   14001e0ba:	test   eax,eax
   14001e0bc:	js     0x14001e2b8
   14001e0c2:	mov    QWORD PTR [rsp+0x40],rsi
   14001e0c7:	mov    rcx,QWORD PTR [rbp-0x61]
   14001e0cb:	mov    r10,QWORD PTR [rcx]
   14001e0ce:	xor    r9d,r9d
   14001e0d1:	lea    r8,[rsp+0x40]
   14001e0d6:	lea    ebx,[rsi+0x1]
   14001e0d9:	mov    edx,ebx
   14001e0db:	call   QWORD PTR [r10+0x18]
   14001e0df:	test   eax,eax
   14001e0e1:	jne    0x14001e2a7
   14001e0e7:	mov    QWORD PTR [rsp+0x58],rsi
   14001e0ec:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e0f1:	mov    rax,QWORD PTR [rcx]
   14001e0f4:	lea    r8,[rsp+0x58]
   14001e0f9:	lea    rdx,[rip+0x28108]        # 0x140046208
   14001e100:	call   QWORD PTR [rax]
   14001e102:	mov    edi,eax
   14001e104:	test   eax,eax
   14001e106:	jns    0x14001e123
   14001e108:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e10d:	test   rcx,rcx
   14001e110:	je     0x14001e11e
   14001e112:	mov    QWORD PTR [rsp+0x40],rsi
   14001e117:	mov    rax,QWORD PTR [rcx]
   14001e11a:	call   QWORD PTR [rax+0x10]
   14001e11d:	nop
   14001e11e:	jmp    0x14001e204
   14001e123:	mov    DWORD PTR [rbp-0x79],0x1e
   14001e12a:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e12f:	mov    rax,QWORD PTR [rcx]
   14001e132:	lea    r8,[rbp-0x79]
   14001e136:	lea    rdx,[rbp-0x49]
   14001e13a:	call   QWORD PTR [rax+0x18]
   14001e13d:	mov    edi,eax
   14001e13f:	test   eax,eax
   14001e141:	js     0x14001e1ee
   14001e147:	mov    edi,0x80004005
   14001e14c:	cmp    DWORD PTR [rbp-0x79],0x2
   14001e150:	jbe    0x14001e1ee
   14001e156:	movzx  eax,WORD PTR [rbp-0x49]
   14001e15a:	sub    ax,0x56
   14001e15e:	mov    ecx,0xffdf
   14001e163:	test   cx,ax
   14001e166:	jne    0x14001e1ee
   14001e16c:	cmp    WORD PTR [rbp-0x47],0x34
   14001e171:	jb     0x14001e1ee
   14001e173:	cmp    WORD PTR [rbp-0x45],0x2e
   14001e178:	jne    0x14001e1ee
   14001e17a:	mov    QWORD PTR [rbp-0x71],rsi
   14001e17e:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e183:	mov    rax,QWORD PTR [rcx]
   14001e186:	lea    r9,[rbp-0x71]
   14001e18a:	lea    r8,[rip+0x28047]        # 0x1400461d8
   14001e191:	lea    rdx,[rip+0x28060]        # 0x1400461f8
   14001e198:	call   QWORD PTR [rax+0x48]
   14001e19b:	mov    edi,eax
   14001e19d:	lea    rcx,[rip+0x3c184]        # 0x14005a328
   14001e1a4:	mov    rax,QWORD PTR [rip+0x3c17d]        # 0x14005a328
   14001e1ab:	call   QWORD PTR [rax+0x18]
   14001e1ae:	add    rax,0x18
   14001e1b2:	mov    QWORD PTR [rbp-0x69],rax
   14001e1b6:	lea    rdx,[rbp-0x69]
   14001e1ba:	mov    rcx,r15
   14001e1bd:	call   0x14001fef0
   14001e1c2:	test   edi,edi
   14001e1c4:	jns    0x14001e22d
   14001e1c6:	mov    rdx,QWORD PTR [rbp-0x69]
   14001e1ca:	add    rdx,0xffffffffffffffe8
   14001e1ce:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001e1d3:	jg     0x14001e1df
   14001e1d5:	mov    rcx,QWORD PTR [rdx]
   14001e1d8:	mov    rax,QWORD PTR [rcx]
   14001e1db:	call   QWORD PTR [rax+0x8]
   14001e1de:	nop
   14001e1df:	mov    rcx,QWORD PTR [rbp-0x71]
   14001e1e3:	test   rcx,rcx
   14001e1e6:	je     0x14001e1ee
   14001e1e8:	mov    rax,QWORD PTR [rcx]
   14001e1eb:	call   QWORD PTR [rax+0x10]
   14001e1ee:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e1f3:	test   rcx,rcx
   14001e1f6:	je     0x14001e204
   14001e1f8:	mov    QWORD PTR [rsp+0x40],rsi
   14001e1fd:	mov    rax,QWORD PTR [rcx]
   14001e200:	call   QWORD PTR [rax+0x10]
   14001e203:	nop
   14001e204:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e209:	test   rcx,rcx
   14001e20c:	je     0x14001e214
   14001e20e:	mov    rax,QWORD PTR [rcx]
   14001e211:	call   QWORD PTR [rax+0x10]
   14001e214:	mov    rcx,QWORD PTR [rbp-0x61]
   14001e218:	mov    rax,QWORD PTR [rcx]
   14001e21b:	xor    r9d,r9d
   14001e21e:	lea    r8,[rsp+0x40]
   14001e223:	mov    edx,ebx
   14001e225:	call   QWORD PTR [rax+0x18]
   14001e228:	jmp    0x14001e0df
   14001e22d:	test   r14,r14
   14001e230:	je     0x14001e245
   14001e232:	or     rdx,0xffffffffffffffff
   14001e236:	inc    rdx
   14001e239:	cmp    WORD PTR [r14+rdx*2],si
   14001e23e:	jne    0x14001e236
   14001e240:	shl    edx,0x3
   14001e243:	jmp    0x14001e247
   14001e245:	mov    edx,esi
   14001e247:	mov    rcx,QWORD PTR [rbp-0x71]
   14001e24b:	mov    rax,QWORD PTR [rcx]
   14001e24e:	mov    DWORD PTR [rsp+0x30],edx
   14001e252:	mov    QWORD PTR [rsp+0x28],r14
   14001e257:	mov    rbx,QWORD PTR [rbp-0x69]
   14001e25b:	mov    QWORD PTR [rsp+0x20],rbx
   14001e260:	mov    r9,r13
   14001e263:	mov    r8d,0x1388
   14001e269:	mov    edx,r12d
   14001e26c:	call   QWORD PTR [rax+0x18]
   14001e26f:	mov    edi,eax
   14001e271:	lea    rdx,[rbx-0x18]
   14001e275:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001e27a:	jg     0x14001e286
   14001e27c:	mov    rcx,QWORD PTR [rdx]
   14001e27f:	mov    rax,QWORD PTR [rcx]
   14001e282:	call   QWORD PTR [rax+0x8]
   14001e285:	nop
   14001e286:	mov    rcx,QWORD PTR [rbp-0x71]
   14001e28a:	test   rcx,rcx
   14001e28d:	je     0x14001e296
   14001e28f:	mov    rax,QWORD PTR [rcx]
   14001e292:	call   QWORD PTR [rax+0x10]
   14001e295:	nop
   14001e296:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e29b:	test   rcx,rcx
   14001e29e:	je     0x14001e2a7
   14001e2a0:	mov    rax,QWORD PTR [rcx]
   14001e2a3:	call   QWORD PTR [rax+0x10]
   14001e2a6:	nop
   14001e2a7:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e2ac:	test   rcx,rcx
   14001e2af:	je     0x14001e2b8
   14001e2b1:	mov    rax,QWORD PTR [rcx]
   14001e2b4:	call   QWORD PTR [rax+0x10]
   14001e2b7:	nop
   14001e2b8:	mov    rcx,QWORD PTR [rbp-0x61]
   14001e2bc:	test   rcx,rcx
   14001e2bf:	je     0x14001e2c7
   14001e2c1:	mov    rax,QWORD PTR [rcx]
   14001e2c4:	call   QWORD PTR [rax+0x10]
   14001e2c7:	mov    eax,edi
   14001e2c9:	mov    rcx,QWORD PTR [rbp-0x9]
   14001e2cd:	xor    rcx,rsp
   14001e2d0:	call   0x1400265a0
   14001e2d5:	add    rsp,0xf8
   14001e2dc:	pop    r15
   14001e2de:	pop    r14
   14001e2e0:	pop    r13
   14001e2e2:	pop    r12
   14001e2e4:	pop    rdi
   14001e2e5:	pop    rsi
   14001e2e6:	pop    rbx
   14001e2e7:	pop    rbp
   14001e2e8:	ret    
   14001e2e9:	int3   
   14001e2ea:	int3   
   14001e2eb:	int3   
   14001e2ec:	rex push rbp
   14001e2ee:	push   rbx
   14001e2ef:	push   rsi
   14001e2f0:	push   rdi
   14001e2f1:	push   r12
   14001e2f3:	push   r13
   14001e2f5:	push   r14
   14001e2f7:	push   r15
   14001e2f9:	lea    rbp,[rsp-0xf08]
   14001e301:	mov    eax,0x1008
   14001e306:	call   0x1400311e0
   14001e30b:	sub    rsp,rax
   14001e30e:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   14001e316:	mov    rax,QWORD PTR [rip+0x3ad6b]        # 0x140059088
   14001e31d:	xor    rax,rsp
   14001e320:	mov    QWORD PTR [rbp+0xef0],rax
   14001e327:	mov    r12,r9
   14001e32a:	mov    QWORD PTR [rbp-0x78],r8
   14001e32e:	mov    r13d,edx
   14001e331:	mov    rdi,rcx
   14001e334:	mov    r9d,edx
   14001e337:	mov    r8,r12
   14001e33a:	mov    dl,0x15
   14001e33c:	call   0x140015618
   14001e341:	mov    DWORD PTR [rsp+0x30],0x44a86cad
   14001e349:	mov    DWORD PTR [rsp+0x34],0x429cf7ee
   14001e351:	mov    DWORD PTR [rsp+0x38],0xcdf3eb83
   14001e359:	mov    DWORD PTR [rsp+0x3c],0x707bb8e3
   14001e361:	lea    rcx,[rip+0x27950]        # 0x140045cb8
   14001e368:	call   QWORD PTR [rip+0x23022]        # 0x140041390
   14001e36e:	test   rax,rax
   14001e371:	je     0x14001e391
   14001e373:	mov    rcx,QWORD PTR [rdi+0x18]
   14001e377:	mov    rax,QWORD PTR [rcx]
   14001e37a:	xor    r9d,r9d
   14001e37d:	xor    r8d,r8d
   14001e380:	mov    edx,0xe12305af
   14001e385:	call   QWORD PTR [rax]
   14001e387:	mov    eax,0xe12305af
   14001e38c:	jmp    0x14001e9c7
   14001e391:	and    QWORD PTR [rsp+0x60],0x0
   14001e397:	xor    r15d,r15d
   14001e39a:	mov    ecx,DWORD PTR [rdi+0x40]
   14001e39d:	cmp    ecx,0x1
   14001e3a0:	je     0x14001e3b9
   14001e3a2:	lea    eax,[rcx-0x3]
   14001e3a5:	cmp    eax,0x4
   14001e3a8:	jbe    0x14001e3b4
   14001e3aa:	mov    eax,0x80070057
   14001e3af:	jmp    0x14001e9c7
   14001e3b4:	cmp    ecx,0x1
   14001e3b7:	jne    0x14001e3c2
   14001e3b9:	cmp    DWORD PTR [rdi+0x44],0xc350
   14001e3c0:	jb     0x14001e3aa
   14001e3c2:	lea    rcx,[rip+0x3bf5f]        # 0x14005a328
   14001e3c9:	mov    rax,QWORD PTR [rip+0x3bf58]        # 0x14005a328
   14001e3d0:	call   QWORD PTR [rax+0x18]
   14001e3d3:	add    rax,0x18
   14001e3d7:	mov    QWORD PTR [rsp+0x58],rax
   14001e3dc:	lea    r8,[rsp+0x58]
   14001e3e1:	lea    rdx,[rsp+0x50]
   14001e3e6:	mov    ecx,r13d
   14001e3e9:	call   0x140021110
   14001e3ee:	movzx  eax,al
   14001e3f1:	test   eax,eax
   14001e3f3:	jne    0x14001e3ff
   14001e3f5:	mov    ebx,0xe1230589
   14001e3fa:	jmp    0x14001e9ab
   14001e3ff:	xor    r14d,r14d
   14001e402:	cmp    DWORD PTR [rip+0x3e87f],r14d        # 0x14005cc88
   14001e409:	jne    0x14001e42b
   14001e40b:	cmp    DWORD PTR [rsp+0x50],0x1
   14001e410:	jne    0x14001e42b
   14001e412:	mov    ecx,r13d
   14001e415:	call   0x140021274
   14001e41a:	mov    r14,rax
   14001e41d:	test   rax,rax
   14001e420:	je     0x14001e42b
   14001e422:	mov    rcx,rax
   14001e425:	call   QWORD PTR [rip+0x22e2d]        # 0x140041258
   14001e42b:	mov    r8d,r13d
   14001e42e:	xor    edx,edx
   14001e430:	mov    ecx,0x16047a
   14001e435:	call   QWORD PTR [rip+0x22f1d]        # 0x140041358
   14001e43b:	mov    rsi,rax
   14001e43e:	test   rax,rax
   14001e441:	jne    0x14001e464
   14001e443:	test   r14,r14
   14001e446:	je     0x14001e45a
   14001e448:	mov    rcx,r14
   14001e44b:	call   QWORD PTR [rip+0x22e0f]        # 0x140041260
   14001e451:	mov    rcx,r14
   14001e454:	call   QWORD PTR [rip+0x22f2e]        # 0x140041388
   14001e45a:	mov    ebx,0xe123057f
   14001e45f:	jmp    0x14001e9ab
   14001e464:	mov    rcx,rax
   14001e467:	call   0x140012ed8
   14001e46c:	mov    ebx,eax
   14001e46e:	test   eax,eax
   14001e470:	je     0x14001e492
   14001e472:	cmp    DWORD PTR [rip+0x3e80f],0x0        # 0x14005cc88
   14001e479:	je     0x14001e98a
   14001e47f:	mov    edx,0x1
   14001e484:	mov    rcx,rsi
   14001e487:	call   QWORD PTR [rip+0x230bb]        # 0x140041548
   14001e48d:	jmp    0x14001e98a
   14001e492:	mov    rdx,rsi
   14001e495:	call   0x1400200b4
   14001e49a:	mov    ebx,eax
   14001e49c:	test   eax,eax
   14001e49e:	je     0x14001e4c4
   14001e4a0:	and    eax,0x1fff0000
   14001e4a5:	cmp    eax,0x1230000
   14001e4aa:	je     0x14001e9ab
   14001e4b0:	movzx  eax,bx
   14001e4b3:	or     eax,0x80070000
   14001e4b8:	test   ebx,ebx
   14001e4ba:	cmovle eax,ebx
   14001e4bd:	mov    ebx,eax
   14001e4bf:	jmp    0x14001e9ab
   14001e4c4:	mov    r8,QWORD PTR [rsp+0x58]
   14001e4c9:	test   r12,r12
   14001e4cc:	cmovne r8,r12
   14001e4d0:	mov    edx,0x61a
   14001e4d5:	lea    rcx,[rbp+0x8d0]
   14001e4dc:	call   0x1400108b8
   14001e4e1:	lea    r9,[rbp+0x8d0]
   14001e4e8:	mov    r8d,DWORD PTR [rsp+0x50]
   14001e4ed:	mov    edx,r13d
   14001e4f0:	mov    rcx,rdi
   14001e4f3:	call   0x14001d708
   14001e4f8:	mov    ebx,eax
   14001e4fa:	test   eax,eax
   14001e4fc:	jne    0x14001e94c
   14001e502:	cmp    DWORD PTR [rip+0x3e5c4],eax        # 0x14005cacc
   14001e508:	jne    0x14001e51c
   14001e50a:	call   0x140012b10
   14001e50f:	mov    ebx,0x1
   14001e514:	mov    DWORD PTR [rip+0x3e5b2],ebx        # 0x14005cacc
   14001e51a:	jmp    0x14001e521
   14001e51c:	mov    ebx,0x1
   14001e521:	mov    eax,DWORD PTR [rdi+0x40]
   14001e524:	sub    eax,0x3
   14001e527:	cmp    eax,ebx
   14001e529:	ja     0x14001e583
   14001e52b:	mov    rcx,QWORD PTR [rdi+0x38]
   14001e52f:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14001e533:	je     0x14001e559
   14001e535:	mov    DWORD PTR [rsp+0x28],0x4
   14001e53d:	lea    rax,[rsp+0x4c]
   14001e542:	mov    QWORD PTR [rsp+0x20],rax
   14001e547:	xor    r9d,r9d
   14001e54a:	xor    r8d,r8d
   14001e54d:	mov    edx,0x80006004
   14001e552:	call   0x14000fc30
   14001e557:	jmp    0x14001e55b
   14001e559:	xor    eax,eax
   14001e55b:	test   eax,eax
   14001e55d:	je     0x14001e583
   14001e55f:	cmp    DWORD PTR [rdi+0x40],0x3
   14001e563:	jne    0x14001e56c
   14001e565:	test   BYTE PTR [rsp+0x4c],0x8
   14001e56a:	je     0x14001e579
   14001e56c:	cmp    DWORD PTR [rdi+0x40],0x4
   14001e570:	jne    0x14001e583
   14001e572:	test   BYTE PTR [rsp+0x4c],0x10
   14001e577:	jne    0x14001e583
   14001e579:	mov    ebx,0xe12305dd
   14001e57e:	jmp    0x14001e94c
   14001e583:	mov    QWORD PTR [rsp+0x68],rsi
   14001e588:	mov    eax,DWORD PTR [rdi+0x24]
   14001e58b:	mov    DWORD PTR [rsp+0x70],eax
   14001e58f:	mov    DWORD PTR [rsp+0x74],r13d
   14001e594:	lea    rax,[rbp+0x8d0]
   14001e59b:	mov    QWORD PTR [rsp+0x78],rax
   14001e5a0:	cmp    DWORD PTR [rdi+0x40],0x6
   14001e5a4:	sete   BYTE PTR [rbp-0x80]
   14001e5a8:	xor    r9d,r9d
   14001e5ab:	mov    r8,QWORD PTR [rdi+0x58]
   14001e5af:	mov    dl,0x18
   14001e5b1:	call   0x140015618
   14001e5b6:	xor    edx,edx
   14001e5b8:	mov    r8d,0xa8
   14001e5be:	lea    rcx,[rbp-0x60]
   14001e5c2:	call   0x14002bb90
   14001e5c7:	lea    r8,[rsp+0x68]
   14001e5cc:	lea    rdx,[rbp-0x60]
   14001e5d0:	mov    rcx,QWORD PTR [rdi+0x58]
   14001e5d4:	call   0x140020cf0
   14001e5d9:	test   eax,eax
   14001e5db:	jne    0x14001e5eb
   14001e5dd:	mov    ebx,0xe1230580
   14001e5e2:	lea    r15d,[rax+0x1]
   14001e5e6:	jmp    0x14001e94c
   14001e5eb:	xor    r9d,r9d
   14001e5ee:	xor    r8d,r8d
   14001e5f1:	mov    dl,0x19
   14001e5f3:	call   0x140015618
   14001e5f8:	mov    r12,QWORD PTR [rbp-0x60]
   14001e5fc:	lea    r8,[r12+0x18]
   14001e601:	lea    r9,[rsp+0x60]
   14001e606:	mov    rdx,rsi
   14001e609:	call   0x14001d90c
   14001e60e:	test   eax,eax
   14001e610:	jne    0x14001e639
   14001e612:	cmp    DWORD PTR [rip+0x3e670],ebx        # 0x14005cc88
   14001e618:	je     0x14001e62f
   14001e61a:	mov    r9b,bl
   14001e61d:	mov    r8,QWORD PTR [rdi+0x18]
   14001e621:	lea    rdx,[rbp-0x60]
   14001e625:	lea    rcx,[rsp+0x68]
   14001e62a:	call   0x140020fcc
   14001e62f:	mov    ebx,0xe1230580
   14001e634:	jmp    0x14001e934
   14001e639:	mov    DWORD PTR [rsp+0x44],ebx
   14001e63d:	mov    DWORD PTR [rsp+0x40],ebx
   14001e641:	and    DWORD PTR [rsp+0x48],0x0
   14001e646:	lea    r9,[rsp+0x48]
   14001e64b:	lea    r8,[rsp+0x40]
   14001e650:	lea    rdx,[rsp+0x44]
   14001e655:	mov    rcx,rsi
   14001e658:	call   0x140022688
   14001e65d:	test   eax,eax
   14001e65f:	jne    0x14001e6e6
   14001e665:	mov    ebx,DWORD PTR [rsp+0x40]
   14001e669:	cmp    DWORD PTR [rsp+0x44],eax
   14001e66d:	je     0x14001e677
   14001e66f:	test   ebx,ebx
   14001e671:	jne    0x14001e708
   14001e677:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001e67c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001e682:	lea    rax,[rsp+0x30]
   14001e687:	mov    QWORD PTR [rsp+0x28],rax
   14001e68c:	mov    r9,QWORD PTR [rbp-0x78]
   14001e690:	mov    r8d,r13d
   14001e693:	mov    rdx,rsi
   14001e696:	mov    rcx,rdi
   14001e699:	call   0x14001defc
   14001e69e:	test   eax,eax
   14001e6a0:	jns    0x14001e708
   14001e6a2:	test   ebx,ebx
   14001e6a4:	jne    0x14001e6ce
   14001e6a6:	cmp    DWORD PTR [rip+0x3e5db],0x1        # 0x14005cc88
   14001e6ad:	je     0x14001e6c4
   14001e6af:	mov    r9b,0x1
   14001e6b2:	mov    r8,QWORD PTR [rdi+0x18]
   14001e6b6:	lea    rdx,[rbp-0x60]
   14001e6ba:	lea    rcx,[rsp+0x68]
   14001e6bf:	call   0x140020fcc
   14001e6c4:	mov    ebx,0xe123058d
   14001e6c9:	jmp    0x14001e934
   14001e6ce:	cmp    eax,0x8013136a
   14001e6d3:	jne    0x14001e6df
   14001e6d5:	mov    ebx,0xe1230417
   14001e6da:	jmp    0x14001e934
   14001e6df:	mov    edx,0xa1230911
   14001e6e4:	jmp    0x14001e6f9
   14001e6e6:	call   0x14002153c
   14001e6eb:	test   al,al
   14001e6ed:	jne    0x14001e708
   14001e6ef:	call   0x140021634
   14001e6f4:	mov    edx,0xa1230912
   14001e6f9:	mov    rcx,QWORD PTR [rdi+0x18]
   14001e6fd:	mov    rax,QWORD PTR [rcx]
   14001e700:	xor    r9d,r9d
   14001e703:	xor    r8d,r8d
   14001e706:	call   QWORD PTR [rax]
   14001e708:	mov    ebx,DWORD PTR [rsp+0x48]
   14001e70c:	lea    eax,[rbx-0x1]
   14001e70f:	cmp    eax,0x1
   14001e712:	ja     0x14001e71f
   14001e714:	mov    rax,QWORD PTR [rdi]
   14001e717:	mov    edx,ebx
   14001e719:	mov    rcx,rdi
   14001e71c:	call   QWORD PTR [rax+0x40]
   14001e71f:	call   0x14001d360
   14001e724:	test   al,al
   14001e726:	je     0x14001e75f
   14001e728:	test   ebx,ebx
   14001e72a:	jne    0x14001e75f
   14001e72c:	mov    eax,DWORD PTR [rdi+0x40]
   14001e72f:	sub    eax,0x6
   14001e732:	cmp    eax,0x1
   14001e735:	jbe    0x14001e75f
   14001e737:	cmp    DWORD PTR [rip+0x3e54a],0x1        # 0x14005cc88
   14001e73e:	je     0x14001e755
   14001e740:	mov    r9b,0x1
   14001e743:	mov    r8,QWORD PTR [rdi+0x18]
   14001e747:	lea    rdx,[rbp-0x60]
   14001e74b:	lea    rcx,[rsp+0x68]
   14001e750:	call   0x140020fcc
   14001e755:	mov    ebx,0xe12305ff
   14001e75a:	jmp    0x14001e934
   14001e75f:	mov    r8,rsi
   14001e762:	mov    rcx,rdi
   14001e765:	call   0x14001dd14
   14001e76a:	test   eax,eax
   14001e76c:	jne    0x14001e7fe
   14001e772:	cmp    DWORD PTR [rip+0x3e50f],0x1        # 0x14005cc88
   14001e779:	je     0x14001e790
   14001e77b:	mov    r9b,0x1
   14001e77e:	mov    r8,QWORD PTR [rdi+0x18]
   14001e782:	lea    rdx,[rbp-0x60]
   14001e786:	lea    rcx,[rsp+0x68]
   14001e78b:	call   0x140020fcc
   14001e790:	lea    rdx,[rip+0x28a21]        # 0x1400471b8
   14001e797:	mov    ecx,r13d
   14001e79a:	call   0x140021848
   14001e79f:	test   eax,eax
   14001e7a1:	jne    0x14001e7f4
   14001e7a3:	lea    rdx,[rip+0x28a2e]        # 0x1400471d8
   14001e7aa:	mov    ecx,r13d
   14001e7ad:	call   0x140021848
   14001e7b2:	test   eax,eax
   14001e7b4:	jne    0x14001e7f4
   14001e7b6:	lea    rdx,[rip+0x289db]        # 0x140047198
   14001e7bd:	mov    ecx,r13d
   14001e7c0:	call   0x140021848
   14001e7c5:	test   eax,eax
   14001e7c7:	je     0x14001e7d3
   14001e7c9:	mov    ebx,0xe12305c7
   14001e7ce:	jmp    0x14001e934
   14001e7d3:	lea    rdx,[rip+0x28966]        # 0x140047140
   14001e7da:	mov    ecx,r13d
   14001e7dd:	call   0x140021848
   14001e7e2:	neg    eax
   14001e7e4:	sbb    ebx,ebx
   14001e7e6:	and    ebx,0x47
   14001e7e9:	add    ebx,0xe1230582
   14001e7ef:	jmp    0x14001e934
   14001e7f4:	mov    ebx,0xe12305c1
   14001e7f9:	jmp    0x14001e934
   14001e7fe:	mov    edx,r13d
   14001e801:	mov    rcx,rdi
   14001e804:	call   0x14001ff4c
   14001e809:	test   eax,eax
   14001e80b:	jne    0x14001e840
   14001e80d:	mov    r8,rsi
   14001e810:	mov    rcx,rdi
   14001e813:	call   0x14001ddcc
   14001e818:	cmp    DWORD PTR [rip+0x3e469],0x1        # 0x14005cc88
   14001e81f:	je     0x14001e836
   14001e821:	mov    r9b,0x1
   14001e824:	mov    r8,QWORD PTR [rdi+0x18]
   14001e828:	lea    rdx,[rbp-0x60]
   14001e82c:	lea    rcx,[rsp+0x68]
   14001e831:	call   0x140020fcc
   14001e836:	mov    ebx,0x80004005
   14001e83b:	jmp    0x14001e934
   14001e840:	mov    r9d,0x1
   14001e846:	mov    r8,QWORD PTR [rdi+0x58]
   14001e84a:	mov    rcx,rsi
   14001e84d:	call   0x140022388
   14001e852:	mov    r8,rsi
   14001e855:	mov    rcx,rdi
   14001e858:	test   eax,eax
   14001e85a:	je     0x14001e813
   14001e85c:	lea    rax,[rdi+0x68]
   14001e860:	mov    QWORD PTR [rsp+0x28],rax
   14001e865:	mov    eax,DWORD PTR [rdi+0x44]
   14001e868:	mov    DWORD PTR [rsp+0x20],eax
   14001e86c:	mov    r9d,DWORD PTR [rdi+0x40]
   14001e870:	call   0x14001da2c
   14001e875:	mov    ebx,eax
   14001e877:	test   eax,eax
   14001e879:	je     0x14001e8ad
   14001e87b:	mov    r8,rsi
   14001e87e:	mov    rcx,rdi
   14001e881:	call   0x14001ddcc
   14001e886:	cmp    DWORD PTR [rip+0x3e3fb],0x1        # 0x14005cc88
   14001e88d:	je     0x14001e934
   14001e893:	mov    r9b,0x1
   14001e896:	mov    r8,QWORD PTR [rdi+0x18]
   14001e89a:	lea    rdx,[rbp-0x60]
   14001e89e:	lea    rcx,[rsp+0x68]
   14001e8a3:	call   0x140020fcc
   14001e8a8:	jmp    0x14001e934
   14001e8ad:	mov    DWORD PTR [rbp+0x50],0x9
   14001e8b4:	mov    eax,DWORD PTR [rdi+0x24]
   14001e8b7:	mov    DWORD PTR [rbp+0x5c],eax
   14001e8ba:	mov    DWORD PTR [rbp+0x68],r13d
   14001e8be:	mov    QWORD PTR [rbp+0x70],r12
   14001e8c2:	mov    rcx,QWORD PTR [rdi+0x10]
   14001e8c6:	add    rcx,0x90
   14001e8cd:	lea    rax,[rbp-0x78]
   14001e8d1:	mov    QWORD PTR [rsp+0x28],rax
   14001e8d6:	lea    r9,[rbp+0x490]
   14001e8dd:	lea    rdx,[rbp+0x50]
   14001e8e1:	call   0x14001c230
   14001e8e6:	test   eax,eax
   14001e8e8:	je     0x14001e8fb
   14001e8ea:	cmp    DWORD PTR [rbp+0x8c8],0x0
   14001e8f1:	jne    0x14001e8fb
   14001e8f3:	and    QWORD PTR [rsp+0x60],0x0
   14001e8f9:	jmp    0x14001e93a
   14001e8fb:	mov    rdx,rsi
   14001e8fe:	mov    rcx,rdi
   14001e901:	call   0x14001de28
   14001e906:	mov    r8,rsi
   14001e909:	mov    rcx,rdi
   14001e90c:	call   0x14001ddcc
   14001e911:	cmp    DWORD PTR [rip+0x3e370],0x1        # 0x14005cc88
   14001e918:	je     0x14001e92f
   14001e91a:	mov    r9b,0x1
   14001e91d:	mov    r8,QWORD PTR [rdi+0x18]
   14001e921:	lea    rdx,[rbp-0x60]
   14001e925:	lea    rcx,[rsp+0x68]
   14001e92a:	call   0x140020fcc
   14001e92f:	mov    ebx,0xe1230581
   14001e934:	mov    r15d,0x1
   14001e93a:	mov    r8,QWORD PTR [rsp+0x60]
   14001e93f:	test   r8,r8
   14001e942:	je     0x14001e94c
   14001e944:	mov    rdx,rsi
   14001e947:	call   0x14001d8a4
   14001e94c:	xor    r12d,r12d
   14001e94f:	xchg   QWORD PTR [rdi+0x38],r12
   14001e953:	test   r12,r12
   14001e956:	je     0x14001e970
   14001e958:	mov    rcx,r12
   14001e95b:	call   0x14000fa1c
   14001e960:	mov    rcx,r12
   14001e963:	call   0x14000fd20
   14001e968:	mov    rcx,r12
   14001e96b:	call   0x14002657c
   14001e970:	test   r15d,r15d
   14001e973:	je     0x14001e98a
   14001e975:	cmp    DWORD PTR [rdi+0x8],0x0
   14001e979:	je     0x14001e98a
   14001e97b:	mov    r8d,r13d
   14001e97e:	mov    edx,DWORD PTR [rdi+0x24]
   14001e981:	mov    rcx,QWORD PTR [rdi+0x10]
   14001e985:	call   0x14001b4f4
   14001e98a:	mov    rcx,rsi
   14001e98d:	call   QWORD PTR [rip+0x229f5]        # 0x140041388
   14001e993:	test   r14,r14
   14001e996:	je     0x14001e9ab
   14001e998:	mov    rcx,r14
   14001e99b:	call   QWORD PTR [rip+0x228bf]        # 0x140041260
   14001e9a1:	mov    rcx,r14
   14001e9a4:	call   QWORD PTR [rip+0x229de]        # 0x140041388
   14001e9aa:	nop
   14001e9ab:	mov    rdx,QWORD PTR [rsp+0x58]
   14001e9b0:	add    rdx,0xffffffffffffffe8
   14001e9b4:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001e9b9:	jg     0x14001e9c5
   14001e9bb:	mov    rcx,QWORD PTR [rdx]
   14001e9be:	mov    r8,QWORD PTR [rcx]
   14001e9c1:	call   QWORD PTR [r8+0x8]
   14001e9c5:	mov    eax,ebx
   14001e9c7:	mov    rcx,QWORD PTR [rbp+0xef0]
   14001e9ce:	xor    rcx,rsp
   14001e9d1:	call   0x1400265a0
   14001e9d6:	add    rsp,0x1008
   14001e9dd:	pop    r15
   14001e9df:	pop    r14
   14001e9e1:	pop    r13
   14001e9e3:	pop    r12
   14001e9e5:	pop    rdi
   14001e9e6:	pop    rsi
   14001e9e7:	pop    rbx
   14001e9e8:	pop    rbp
   14001e9e9:	ret    
   14001e9ea:	int3   
   14001e9eb:	int3   
   14001e9ec:	mov    r11,rsp
   14001e9ef:	push   rsi
   14001e9f0:	push   rdi
   14001e9f1:	push   r12
   14001e9f3:	push   r13
   14001e9f5:	push   r15
   14001e9f7:	sub    rsp,0x270
   14001e9fe:	mov    QWORD PTR [r11-0xf0],0xfffffffffffffffe
   14001ea09:	mov    QWORD PTR [r11+0x20],rbx
   14001ea0d:	mov    rax,QWORD PTR [rip+0x3a674]        # 0x140059088
   14001ea14:	xor    rax,rsp
   14001ea17:	mov    QWORD PTR [rsp+0x260],rax
   14001ea1f:	mov    r12,r8
   14001ea22:	mov    r15,rdx
   14001ea25:	mov    r13,rcx
   14001ea28:	xor    esi,esi
   14001ea2a:	mov    QWORD PTR [r11-0x190],rsi
   14001ea31:	xor    eax,eax
   14001ea33:	mov    QWORD PTR [r11-0x188],rax
   14001ea3a:	mov    QWORD PTR [r11-0x180],rax
   14001ea41:	mov    QWORD PTR [r11-0x178],rax
   14001ea48:	cmp    QWORD PTR [rdx],rsi
   14001ea4b:	je     0x14001eae2
   14001ea51:	lea    rdx,[r11-0x190]
   14001ea58:	mov    rcx,QWORD PTR [r15]
   14001ea5b:	call   0x1400261f0
   14001ea60:	test   al,al
   14001ea62:	je     0x14001eae2
   14001ea64:	mov    rbx,QWORD PTR [rsp+0x120]
   14001ea6c:	mov    rdx,rbx
   14001ea6f:	lea    rcx,[rip+0x2929a]        # 0x140047d10
   14001ea76:	call   0x140026164
   14001ea7b:	test   al,al
   14001ea7d:	jne    0x14001eaa8
   14001ea7f:	mov    rdx,rbx
   14001ea82:	lea    rcx,[rip+0x2926b]        # 0x140047cf4
   14001ea89:	call   0x140026164
   14001ea8e:	test   al,al
   14001ea90:	jne    0x14001eaa8
   14001ea92:	mov    rdx,rbx
   14001ea95:	lea    rcx,[rip+0x29264]        # 0x140047d00
   14001ea9c:	call   0x140026164
   14001eaa1:	test   al,al
   14001eaa3:	mov    bl,sil
   14001eaa6:	je     0x14001eaaa
   14001eaa8:	mov    bl,0x1
   14001eaaa:	mov    rcx,QWORD PTR [rsp+0x108]
   14001eab2:	call   QWORD PTR [rip+0x228d0]        # 0x140041388
   14001eab8:	mov    rcx,QWORD PTR [rsp+0x110]
   14001eac0:	call   QWORD PTR [rip+0x228c2]        # 0x140041388
   14001eac6:	mov    rcx,QWORD PTR [rsp+0x118]
   14001eace:	call   QWORD PTR [rip+0x22b5c]        # 0x140041630
   14001ead4:	test   bl,bl
   14001ead6:	je     0x14001eae2
   14001ead8:	mov    eax,0xe123058c
   14001eadd:	jmp    0x14001f1ee
   14001eae2:	cmp    QWORD PTR [r15],rsi
   14001eae5:	je     0x14001f1e9
   14001eaeb:	mov    rbx,QWORD PTR [r15+0x8]
   14001eaef:	test   rbx,rbx
   14001eaf2:	je     0x14001f1e9
   14001eaf8:	mov    edi,0x68
   14001eafd:	mov    r8d,edi
   14001eb00:	xor    edx,edx
   14001eb02:	lea    rcx,[rsp+0x1b0]
   14001eb0a:	call   0x14002bb90
   14001eb0f:	mov    DWORD PTR [rsp+0x1b0],edi
   14001eb16:	or     rdx,0xffffffffffffffff
   14001eb1a:	inc    rdx
   14001eb1d:	cmp    WORD PTR [rbx+rdx*2],si
   14001eb21:	jne    0x14001eb1a
   14001eb23:	cmp    rdx,0x7fffffff
   14001eb2a:	jb     0x14001eb36
   14001eb2c:	mov    eax,0x80070057
   14001eb31:	jmp    0x14001f1ee
   14001eb36:	mov    QWORD PTR [rsp+0x58],rsi
   14001eb3b:	mov    QWORD PTR [rsp+0x60],rsi
   14001eb40:	mov    QWORD PTR [rsp+0x68],rsi
   14001eb45:	inc    rdx
   14001eb48:	lea    rcx,[rsp+0x58]
   14001eb4d:	call   0x14000337c
   14001eb52:	nop
   14001eb53:	mov    rdx,QWORD PTR [rsp+0x60]
   14001eb58:	sub    rdx,QWORD PTR [rsp+0x58]
   14001eb5d:	sar    rdx,1
   14001eb60:	mov    r8,QWORD PTR [r15+0x8]
   14001eb64:	mov    rcx,QWORD PTR [rsp+0x58]
   14001eb69:	call   0x140001004
   14001eb6e:	call   QWORD PTR [rip+0x2291c]        # 0x140041490
   14001eb74:	mov    rbx,rax
   14001eb77:	mov    rdx,rax
   14001eb7a:	lea    rcx,[rsp+0x80]
   14001eb82:	call   0x140012f2c
   14001eb87:	nop
   14001eb88:	test   rbx,rbx
   14001eb8b:	je     0x14001eb96
   14001eb8d:	mov    rcx,rbx
   14001eb90:	call   QWORD PTR [rip+0x22902]        # 0x140041498
   14001eb96:	lea    rdi,[rip+0x28613]        # 0x1400471b0
   14001eb9d:	mov    r8,rdi
   14001eba0:	lea    rdx,[rip+0x28691]        # 0x140047238
   14001eba7:	lea    rcx,[rsp+0x80]
   14001ebaf:	call   0x140013268
   14001ebb4:	lea    r8,[rip+0x286b5]        # 0x140047270
   14001ebbb:	lea    rdx,[rip+0x2862e]        # 0x1400471f0
   14001ebc2:	lea    rcx,[rsp+0x80]
   14001ebca:	call   0x140013268
   14001ebcf:	mov    r8,rdi
   14001ebd2:	lea    rdx,[rip+0x28637]        # 0x140047210
   14001ebd9:	lea    rcx,[rsp+0x80]
   14001ebe1:	call   0x140013268
   14001ebe6:	mov    r8,QWORD PTR [r15+0x20]
   14001ebea:	test   r8,r8
   14001ebed:	je     0x14001ec03
   14001ebef:	lea    rdx,[rip+0x2872a]        # 0x140047320
   14001ebf6:	lea    rcx,[rsp+0x80]
   14001ebfe:	call   0x140013268
   14001ec03:	lea    rcx,[rip+0x3b71e]        # 0x14005a328
   14001ec0a:	mov    rax,QWORD PTR [rip+0x3b717]        # 0x14005a328
   14001ec11:	call   QWORD PTR [rax+0x18]
   14001ec14:	add    rax,0x18
   14001ec18:	mov    QWORD PTR [rsp+0x70],rax
   14001ec1d:	lea    rdx,[rsp+0x70]
   14001ec22:	mov    rcx,r13
   14001ec25:	call   0x14001fef0
   14001ec2a:	mov    rbx,QWORD PTR [rsp+0x70]
   14001ec2f:	mov    r8,rbx
   14001ec32:	lea    rdx,[rip+0x2871f]        # 0x140047358
   14001ec39:	lea    rcx,[rsp+0x80]
   14001ec41:	call   0x140013268
   14001ec46:	mov    r8,rdi
   14001ec49:	lea    rdx,[rip+0x28670]        # 0x1400472c0
   14001ec50:	lea    rcx,[rsp+0x80]
   14001ec58:	call   0x140013268
   14001ec5d:	lea    r8,[rip+0x2860c]        # 0x140047270
   14001ec64:	lea    rdx,[rip+0x2868d]        # 0x1400472f8
   14001ec6b:	lea    rcx,[rsp+0x80]
   14001ec73:	call   0x140013268
   14001ec78:	cmp    DWORD PTR [r13+0x48],0x2
   14001ec7d:	ja     0x14001ecd4
   14001ec7f:	mov    DWORD PTR [rsp+0x220],0x30
   14001ec8a:	xor    edx,edx
   14001ec8c:	lea    r8d,[rdx+0x3c]
   14001ec90:	lea    rcx,[rsp+0x224]
   14001ec98:	call   0x14002bb90
   14001ec9d:	mov    r9d,0xa
   14001eca3:	lea    r8d,[r9+0x16]
   14001eca7:	lea    rdx,[rsp+0x220]
   14001ecaf:	mov    ecx,DWORD PTR [r13+0x48]
   14001ecb3:	call   0x140031258
   14001ecb8:	lea    r8,[rsp+0x220]
   14001ecc0:	lea    rdx,[rip+0x286f1]        # 0x1400473b8
   14001ecc7:	lea    rcx,[rsp+0x80]
   14001eccf:	call   0x140013268
   14001ecd4:	lea    rdx,[rip+0x286a5]        # 0x140047380
   14001ecdb:	lea    rcx,[rsp+0x80]
   14001ece3:	cmp    DWORD PTR [r13+0x50],esi
   14001ece7:	mov    r8,rdi
   14001ecea:	jne    0x14001ecf3
   14001ecec:	lea    r8,[rip+0x286c1]        # 0x1400473b4
   14001ecf3:	call   0x140013268
   14001ecf8:	mov    rdx,QWORD PTR [r15+0x18]
   14001ecfc:	lea    rcx,[rsp+0x130]
   14001ed04:	call   0x140012f2c
   14001ed09:	nop
   14001ed0a:	lea    rdx,[rsp+0x130]
   14001ed12:	lea    rcx,[rsp+0x80]
   14001ed1a:	call   0x14001330c
   14001ed1f:	call   0x140021634
   14001ed24:	mov    edi,0x4000400
   14001ed29:	lea    eax,[rdi+0x10]
   14001ed2c:	cmp    DWORD PTR [r15+0x28],esi
   14001ed30:	cmovne edi,eax
   14001ed33:	lea    rcx,[rsp+0x80]
   14001ed3b:	call   0x140013450
   14001ed40:	lea    rcx,[rsp+0xf0]
   14001ed48:	mov    QWORD PTR [rsp+0x48],rcx
   14001ed4d:	lea    rcx,[rsp+0x1b0]
   14001ed55:	mov    QWORD PTR [rsp+0x40],rcx
   14001ed5a:	mov    rcx,QWORD PTR [r15+0x10]
   14001ed5e:	mov    QWORD PTR [rsp+0x38],rcx
   14001ed63:	mov    QWORD PTR [rsp+0x30],rax
   14001ed68:	mov    DWORD PTR [rsp+0x28],edi
   14001ed6c:	mov    DWORD PTR [rsp+0x20],0x1
   14001ed74:	xor    r9d,r9d
   14001ed77:	xor    r8d,r8d
   14001ed7a:	mov    rdx,QWORD PTR [rsp+0x58]
   14001ed7f:	mov    rcx,QWORD PTR [r15]
   14001ed82:	call   QWORD PTR [rip+0x22920]        # 0x1400416a8
   14001ed88:	test   eax,eax
   14001ed8a:	jne    0x14001f05c
   14001ed90:	call   QWORD PTR [rip+0x22642]        # 0x1400413d8
   14001ed96:	cmp    eax,0x2
   14001ed99:	jb     0x14001efb8
   14001ed9f:	cmp    eax,0x3
   14001eda2:	jbe    0x14001ef13
   14001eda8:	cmp    eax,0xbd
   14001edad:	jbe    0x14001efb8
   14001edb3:	cmp    eax,0xc1
   14001edb8:	jbe    0x14001ee6e
   14001edbe:	cmp    eax,0x2e4
   14001edc3:	jne    0x14001efb8
   14001edc9:	lea    rcx,[rsp+0x150]
   14001edd1:	call   0x140013980
   14001edd6:	nop
   14001edd7:	mov    rcx,QWORD PTR [rsp+0x130]
   14001eddf:	test   rcx,rcx
   14001ede2:	je     0x14001edfd
   14001ede4:	call   0x14002657c
   14001ede9:	xorps  xmm0,xmm0
   14001edec:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14001edf5:	mov    QWORD PTR [rsp+0x140],rsi
   14001edfd:	lea    rdx,[rbx-0x18]
   14001ee01:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001ee06:	jg     0x14001ee12
   14001ee08:	mov    rcx,QWORD PTR [rdx]
   14001ee0b:	mov    rax,QWORD PTR [rcx]
   14001ee0e:	call   QWORD PTR [rax+0x8]
   14001ee11:	nop
   14001ee12:	lea    rcx,[rsp+0xa0]
   14001ee1a:	call   0x140013980
   14001ee1f:	nop
   14001ee20:	mov    rcx,QWORD PTR [rsp+0x80]
   14001ee28:	test   rcx,rcx
   14001ee2b:	je     0x14001ee46
   14001ee2d:	call   0x14002657c
   14001ee32:	xorps  xmm0,xmm0
   14001ee35:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14001ee3e:	mov    QWORD PTR [rsp+0x90],rsi
   14001ee46:	mov    rcx,QWORD PTR [rsp+0x58]
   14001ee4b:	test   rcx,rcx
   14001ee4e:	je     0x14001ee64
   14001ee50:	call   0x14002657c
   14001ee55:	mov    QWORD PTR [rsp+0x58],rsi
   14001ee5a:	mov    QWORD PTR [rsp+0x60],rsi
   14001ee5f:	mov    QWORD PTR [rsp+0x68],rsi
   14001ee64:	mov    eax,0x800702e4
   14001ee69:	jmp    0x14001f1ee
   14001ee6e:	lea    rcx,[rsp+0x150]
   14001ee76:	call   0x140013980
   14001ee7b:	nop
   14001ee7c:	mov    rcx,QWORD PTR [rsp+0x130]
   14001ee84:	test   rcx,rcx
   14001ee87:	je     0x14001eea2
   14001ee89:	call   0x14002657c
   14001ee8e:	xorps  xmm0,xmm0
   14001ee91:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14001ee9a:	mov    QWORD PTR [rsp+0x140],rsi
   14001eea2:	lea    rdx,[rbx-0x18]
   14001eea6:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001eeab:	jg     0x14001eeb7
   14001eead:	mov    rcx,QWORD PTR [rdx]
   14001eeb0:	mov    rax,QWORD PTR [rcx]
   14001eeb3:	call   QWORD PTR [rax+0x8]
   14001eeb6:	nop
   14001eeb7:	lea    rcx,[rsp+0xa0]
   14001eebf:	call   0x140013980
   14001eec4:	nop
   14001eec5:	mov    rcx,QWORD PTR [rsp+0x80]
   14001eecd:	test   rcx,rcx
   14001eed0:	je     0x14001eeeb
   14001eed2:	call   0x14002657c
   14001eed7:	xorps  xmm0,xmm0
   14001eeda:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14001eee3:	mov    QWORD PTR [rsp+0x90],rsi
   14001eeeb:	mov    rcx,QWORD PTR [rsp+0x58]
   14001eef0:	test   rcx,rcx
   14001eef3:	je     0x14001ef09
   14001eef5:	call   0x14002657c
   14001eefa:	mov    QWORD PTR [rsp+0x58],rsi
   14001eeff:	mov    QWORD PTR [rsp+0x60],rsi
   14001ef04:	mov    QWORD PTR [rsp+0x68],rsi
   14001ef09:	mov    eax,0xe123058b
   14001ef0e:	jmp    0x14001f1ee
   14001ef13:	lea    rcx,[rsp+0x150]
   14001ef1b:	call   0x140013980
   14001ef20:	nop
   14001ef21:	mov    rcx,QWORD PTR [rsp+0x130]
   14001ef29:	test   rcx,rcx
   14001ef2c:	je     0x14001ef47
   14001ef2e:	call   0x14002657c
   14001ef33:	xorps  xmm0,xmm0
   14001ef36:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14001ef3f:	mov    QWORD PTR [rsp+0x140],rsi
   14001ef47:	lea    rdx,[rbx-0x18]
   14001ef4b:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001ef50:	jg     0x14001ef5c
   14001ef52:	mov    rcx,QWORD PTR [rdx]
   14001ef55:	mov    rax,QWORD PTR [rcx]
   14001ef58:	call   QWORD PTR [rax+0x8]
   14001ef5b:	nop
   14001ef5c:	lea    rcx,[rsp+0xa0]
   14001ef64:	call   0x140013980
   14001ef69:	nop
   14001ef6a:	mov    rcx,QWORD PTR [rsp+0x80]
   14001ef72:	test   rcx,rcx
   14001ef75:	je     0x14001ef90
   14001ef77:	call   0x14002657c
   14001ef7c:	xorps  xmm0,xmm0
   14001ef7f:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14001ef88:	mov    QWORD PTR [rsp+0x90],rsi
   14001ef90:	mov    rcx,QWORD PTR [rsp+0x58]
   14001ef95:	test   rcx,rcx
   14001ef98:	je     0x14001efae
   14001ef9a:	call   0x14002657c
   14001ef9f:	mov    QWORD PTR [rsp+0x58],rsi
   14001efa4:	mov    QWORD PTR [rsp+0x60],rsi
   14001efa9:	mov    QWORD PTR [rsp+0x68],rsi
   14001efae:	mov    eax,0xe123058a
   14001efb3:	jmp    0x14001f1ee
   14001efb8:	lea    rcx,[rsp+0x150]
   14001efc0:	call   0x140013980
   14001efc5:	nop
   14001efc6:	mov    rcx,QWORD PTR [rsp+0x130]
   14001efce:	test   rcx,rcx
   14001efd1:	je     0x14001efec
   14001efd3:	call   0x14002657c
   14001efd8:	xorps  xmm0,xmm0
   14001efdb:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14001efe4:	mov    QWORD PTR [rsp+0x140],rsi
   14001efec:	lea    rdx,[rbx-0x18]
   14001eff0:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001eff5:	jg     0x14001f001
   14001eff7:	mov    rcx,QWORD PTR [rdx]
   14001effa:	mov    rax,QWORD PTR [rcx]
   14001effd:	call   QWORD PTR [rax+0x8]
   14001f000:	nop
   14001f001:	lea    rcx,[rsp+0xa0]
   14001f009:	call   0x140013980
   14001f00e:	nop
   14001f00f:	mov    rcx,QWORD PTR [rsp+0x80]
   14001f017:	test   rcx,rcx
   14001f01a:	je     0x14001f035
   14001f01c:	call   0x14002657c
   14001f021:	xorps  xmm0,xmm0
   14001f024:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14001f02d:	mov    QWORD PTR [rsp+0x90],rsi
   14001f035:	mov    rcx,QWORD PTR [rsp+0x58]
   14001f03a:	test   rcx,rcx
   14001f03d:	je     0x14001f1e9
   14001f043:	call   0x14002657c
   14001f048:	mov    QWORD PTR [rsp+0x58],rsi
   14001f04d:	mov    QWORD PTR [rsp+0x60],rsi
   14001f052:	mov    QWORD PTR [rsp+0x68],rsi
   14001f057:	jmp    0x14001f1e9
   14001f05c:	mov    DWORD PTR [rip+0x3dc22],0x1        # 0x14005cc88
   14001f066:	test   r12,r12
   14001f069:	je     0x14001f076
   14001f06b:	mov    eax,DWORD PTR [rsp+0x100]
   14001f072:	mov    DWORD PTR [r12],eax
   14001f076:	mov    r9,QWORD PTR [r15]
   14001f079:	xor    r8d,r8d
   14001f07c:	mov    edx,DWORD PTR [rsp+0x100]
   14001f083:	mov    rcx,r13
   14001f086:	call   0x14001e2ec
   14001f08b:	mov    DWORD PTR [rsp+0x50],eax
   14001f08f:	jmp    0x14001f098
   14001f091:	mov    rbx,QWORD PTR [rsp+0x70]
   14001f096:	xor    esi,esi
   14001f098:	cmp    DWORD PTR [rsp+0x50],esi
   14001f09c:	jge    0x14001f170
   14001f0a2:	xor    edx,edx
   14001f0a4:	mov    rcx,QWORD PTR [rsp+0xf0]
   14001f0ac:	call   QWORD PTR [rip+0x22496]        # 0x140041548
   14001f0b2:	mov    rcx,QWORD PTR [rsp+0xf8]
   14001f0ba:	call   QWORD PTR [rip+0x222c8]        # 0x140041388
   14001f0c0:	mov    rcx,QWORD PTR [rsp+0xf0]
   14001f0c8:	call   QWORD PTR [rip+0x222ba]        # 0x140041388
   14001f0ce:	nop
   14001f0cf:	lea    rcx,[rsp+0x150]
   14001f0d7:	call   0x140013980
   14001f0dc:	nop
   14001f0dd:	mov    rcx,QWORD PTR [rsp+0x130]
   14001f0e5:	test   rcx,rcx
   14001f0e8:	je     0x14001f103
   14001f0ea:	call   0x14002657c
   14001f0ef:	xorps  xmm0,xmm0
   14001f0f2:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14001f0fb:	mov    QWORD PTR [rsp+0x140],rsi
   14001f103:	lea    rdx,[rbx-0x18]
   14001f107:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001f10c:	jg     0x14001f118
   14001f10e:	mov    rcx,QWORD PTR [rdx]
   14001f111:	mov    rax,QWORD PTR [rcx]
   14001f114:	call   QWORD PTR [rax+0x8]
   14001f117:	nop
   14001f118:	lea    rcx,[rsp+0xa0]
   14001f120:	call   0x140013980
   14001f125:	nop
   14001f126:	mov    rcx,QWORD PTR [rsp+0x80]
   14001f12e:	test   rcx,rcx
   14001f131:	je     0x14001f14c
   14001f133:	call   0x14002657c
   14001f138:	xorps  xmm0,xmm0
   14001f13b:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14001f144:	mov    QWORD PTR [rsp+0x90],rsi
   14001f14c:	mov    rcx,QWORD PTR [rsp+0x58]
   14001f151:	test   rcx,rcx
   14001f154:	je     0x14001f16a
   14001f156:	call   0x14002657c
   14001f15b:	mov    QWORD PTR [rsp+0x58],rsi
   14001f160:	mov    QWORD PTR [rsp+0x60],rsi
   14001f165:	mov    QWORD PTR [rsp+0x68],rsi
   14001f16a:	mov    eax,DWORD PTR [rsp+0x50]
   14001f16e:	jmp    0x14001f1ee
   14001f170:	mov    rcx,QWORD PTR [rsp+0xf8]
   14001f178:	call   QWORD PTR [rip+0x2220a]        # 0x140041388
   14001f17e:	mov    rcx,QWORD PTR [rsp+0xf0]
   14001f186:	call   QWORD PTR [rip+0x221fc]        # 0x140041388
   14001f18c:	nop
   14001f18d:	lea    rcx,[rsp+0x150]
   14001f195:	call   0x140013980
   14001f19a:	nop
   14001f19b:	mov    rcx,QWORD PTR [rsp+0x130]
   14001f1a3:	test   rcx,rcx
   14001f1a6:	je     0x14001f1c1
   14001f1a8:	call   0x14002657c
   14001f1ad:	xorps  xmm0,xmm0
   14001f1b0:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14001f1b9:	mov    QWORD PTR [rsp+0x140],rsi
   14001f1c1:	lea    rdx,[rbx-0x18]
   14001f1c5:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001f1ca:	jg     0x14001f1d6
   14001f1cc:	mov    rcx,QWORD PTR [rdx]
   14001f1cf:	mov    rax,QWORD PTR [rcx]
   14001f1d2:	call   QWORD PTR [rax+0x8]
   14001f1d5:	nop
   14001f1d6:	lea    rcx,[rsp+0xa0]
   14001f1de:	call   0x140013980
   14001f1e3:	nop
   14001f1e4:	jmp    0x14001f126
   14001f1e9:	mov    eax,0x80004005
   14001f1ee:	mov    rcx,QWORD PTR [rsp+0x260]
   14001f1f6:	xor    rcx,rsp
   14001f1f9:	call   0x1400265a0
   14001f1fe:	mov    rbx,QWORD PTR [rsp+0x2b8]
   14001f206:	add    rsp,0x270
   14001f20d:	pop    r15
   14001f20f:	pop    r13
   14001f211:	pop    r12
   14001f213:	pop    rdi
   14001f214:	pop    rsi
   14001f215:	ret    
   14001f216:	int3   
   14001f217:	int3   
   14001f218:	mov    QWORD PTR [rsp+0x18],rbx
   14001f21d:	push   rbp
   14001f21e:	push   rsi
   14001f21f:	push   rdi
   14001f220:	push   r12
   14001f222:	push   r13
   14001f224:	push   r14
   14001f226:	push   r15
   14001f228:	lea    rbp,[rsp-0x8d0]
   14001f230:	sub    rsp,0x9d0
   14001f237:	mov    rax,QWORD PTR [rip+0x39e4a]        # 0x140059088
   14001f23e:	xor    rax,rsp
   14001f241:	mov    QWORD PTR [rbp+0x8c0],rax
   14001f248:	mov    esi,edx
   14001f24a:	mov    r14,rcx
   14001f24d:	lea    rdx,[rsp+0x3c]
   14001f252:	mov    ecx,esi
   14001f254:	mov    r12b,0x1
   14001f257:	call   QWORD PTR [rip+0x220b3]        # 0x140041310
   14001f25d:	test   eax,eax
   14001f25f:	jne    0x14001f27c
   14001f261:	call   QWORD PTR [rip+0x22171]        # 0x1400413d8
   14001f267:	mov    ecx,0xe1230530
   14001f26c:	cmp    eax,0x57
   14001f26f:	lea    edx,[rcx+0x59]
   14001f272:	cmove  ecx,edx
   14001f275:	mov    eax,ecx
   14001f277:	jmp    0x14001f60a
   14001f27c:	call   QWORD PTR [rip+0x22076]        # 0x1400412f8
   14001f282:	lea    rdx,[rsp+0x40]
   14001f287:	mov    ecx,eax
   14001f289:	call   QWORD PTR [rip+0x22081]        # 0x140041310
   14001f28f:	test   eax,eax
   14001f291:	jne    0x14001f29d
   14001f293:	mov    eax,0xe1230530
   14001f298:	jmp    0x14001f60a
   14001f29d:	mov    r9d,DWORD PTR [rsp+0x3c]
   14001f2a2:	xor    edx,edx
   14001f2a4:	mov    r8d,esi
   14001f2a7:	cmp    DWORD PTR [rsp+0x40],r9d
   14001f2ac:	je     0x14001f2bb
   14001f2ae:	mov    rcx,r14
   14001f2b1:	call   0x1400202b8
   14001f2b6:	jmp    0x14001f60a
   14001f2bb:	xor    ebx,ebx
   14001f2bd:	xor    r15d,r15d
   14001f2c0:	mov    ecx,0x47a
   14001f2c5:	and    DWORD PTR [rsp+0x38],ebx
   14001f2c9:	mov    DWORD PTR [rsp+0x30],r15d
   14001f2ce:	xor    r13d,r13d
   14001f2d1:	call   QWORD PTR [rip+0x22081]        # 0x140041358
   14001f2d7:	mov    rdi,rax
   14001f2da:	test   rax,rax
   14001f2dd:	jne    0x14001f309
   14001f2df:	call   QWORD PTR [rip+0x220f3]        # 0x1400413d8
   14001f2e5:	cmp    eax,0x5
   14001f2e8:	jne    0x14001f2f4
   14001f2ea:	mov    ebx,0xe123057f
   14001f2ef:	jmp    0x14001f4bb
   14001f2f4:	mov    ebx,0x80070057
   14001f2f9:	mov    edx,0xe1230589
   14001f2fe:	cmp    eax,0x57
   14001f301:	cmove  ebx,edx
   14001f304:	jmp    0x14001f4bb
   14001f309:	mov    rcx,r14
   14001f30c:	call   0x14001d824
   14001f311:	mov    r13d,eax
   14001f314:	test   eax,eax
   14001f316:	jne    0x14001f32b
   14001f318:	mov    rcx,rdi
   14001f31b:	call   QWORD PTR [rip+0x22067]        # 0x140041388
   14001f321:	mov    eax,0xe12305a0
   14001f326:	jmp    0x14001f60a
   14001f32b:	mov    rdx,rdi
   14001f32e:	mov    rcx,r14
   14001f331:	call   0x14001de28
   14001f336:	mov    rcx,QWORD PTR [r14+0x10]
   14001f33a:	lea    rax,[rsp+0x50]
   14001f33f:	lea    r9,[rbp+0x480]
   14001f346:	lea    rdx,[rbp+0x40]
   14001f34a:	add    rcx,0x90
   14001f351:	mov    DWORD PTR [rbp+0x40],0xa
   14001f358:	mov    DWORD PTR [rbp+0x58],esi
   14001f35b:	mov    QWORD PTR [rsp+0x28],rax
   14001f360:	call   0x14001c230
   14001f365:	mov    ecx,DWORD PTR [rbp+0x8b8]
   14001f36b:	test   eax,eax
   14001f36d:	je     0x14001f56c
   14001f373:	test   ecx,ecx
   14001f375:	js     0x14001f56c
   14001f37b:	mov    eax,DWORD PTR [rbp+0x48c]
   14001f381:	mov    r15d,0xa8
   14001f387:	lea    rcx,[rbp-0x70]
   14001f38b:	mov    r8d,r15d
   14001f38e:	xor    edx,edx
   14001f390:	mov    DWORD PTR [rsp+0x38],0x1
   14001f398:	mov    DWORD PTR [rsp+0x34],eax
   14001f39c:	call   0x14002bb90
   14001f3a1:	mov    r9d,r15d
   14001f3a4:	mov    r15,QWORD PTR [rbp+0x4a0]
   14001f3ab:	lea    rax,[rsp+0x48]
   14001f3b0:	lea    r8,[rbp-0x70]
   14001f3b4:	mov    rcx,rdi
   14001f3b7:	mov    rdx,r15
   14001f3ba:	mov    QWORD PTR [rsp+0x20],rax
   14001f3bf:	call   QWORD PTR [rip+0x21e7b]        # 0x140041240
   14001f3c5:	test   eax,eax
   14001f3c7:	je     0x14001f54b
   14001f3cd:	cmp    QWORD PTR [rsp+0x48],0xa8
   14001f3d6:	jne    0x14001f54b
   14001f3dc:	mov    r8,QWORD PTR [r14+0x58]
   14001f3e0:	xor    r9d,r9d
   14001f3e3:	mov    rcx,rdi
   14001f3e6:	mov    DWORD PTR [rsp+0x30],0x1
   14001f3ee:	call   0x140022388
   14001f3f3:	test   eax,eax
   14001f3f5:	jne    0x14001f416
   14001f3f7:	mov    rcx,rdi
   14001f3fa:	call   0x140021380
   14001f3ff:	mov    r15d,DWORD PTR [rsp+0x30]
   14001f404:	test   al,al
   14001f406:	jne    0x14001f496
   14001f40c:	mov    ebx,0x80004005
   14001f411:	jmp    0x14001f496
   14001f416:	mov    r9,r15
   14001f419:	mov    r8,rdi
   14001f41c:	mov    edx,esi
   14001f41e:	mov    rcx,r14
   14001f421:	call   0x140021434
   14001f426:	test   al,al
   14001f428:	jne    0x14001f439
   14001f42a:	mov    rcx,rdi
   14001f42d:	call   0x140021380
   14001f432:	neg    al
   14001f434:	sbb    cl,cl
   14001f436:	and    r12b,cl
   14001f439:	lea    rax,[rbp-0x80]
   14001f43d:	lea    rdx,[r15+0x18]
   14001f441:	lea    r8,[rsp+0x58]
   14001f446:	mov    r9d,0x8
   14001f44c:	mov    rcx,rdi
   14001f44f:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14001f458:	mov    QWORD PTR [rsp+0x20],rax
   14001f45d:	call   QWORD PTR [rip+0x2225d]        # 0x1400416c0
   14001f463:	test   eax,eax
   14001f465:	jne    0x14001f524
   14001f46b:	call   QWORD PTR [rip+0x21f67]        # 0x1400413d8
   14001f471:	mov    rcx,rdi
   14001f474:	mov    r15d,eax
   14001f477:	call   0x140021380
   14001f47c:	test   al,al
   14001f47e:	jne    0x14001f491
   14001f480:	movzx  ebx,r15w
   14001f484:	or     ebx,0x80070000
   14001f48a:	test   r15d,r15d
   14001f48d:	cmovle ebx,r15d
   14001f491:	mov    r15d,DWORD PTR [rsp+0x30]
   14001f496:	mov    r8,rdi
   14001f499:	mov    rcx,r14
   14001f49c:	call   0x14001ddcc
   14001f4a1:	test   eax,eax
   14001f4a3:	jne    0x14001f4bb
   14001f4a5:	mov    rcx,rdi
   14001f4a8:	call   0x140021380
   14001f4ad:	test   al,al
   14001f4af:	jne    0x14001f4bb
   14001f4b1:	test   ebx,ebx
   14001f4b3:	mov    eax,0x80004005
   14001f4b8:	cmove  ebx,eax
   14001f4bb:	mov    rcx,rdi
   14001f4be:	call   0x140021380
   14001f4c3:	test   al,al
   14001f4c5:	jne    0x14001f594
   14001f4cb:	test   r15d,r15d
   14001f4ce:	je     0x14001f594
   14001f4d4:	mov    eax,DWORD PTR [rsp+0x34]
   14001f4d8:	and    QWORD PTR [rsp+0x70],0x0
   14001f4de:	cmp    DWORD PTR [rip+0x3d7a3],0x1        # 0x14005cc88
   14001f4e5:	mov    DWORD PTR [rsp+0x68],eax
   14001f4e9:	mov    QWORD PTR [rsp+0x60],rdi
   14001f4ee:	mov    DWORD PTR [rsp+0x6c],esi
   14001f4f2:	mov    BYTE PTR [rsp+0x78],0x0
   14001f4f7:	je     0x14001f594
   14001f4fd:	mov    r8,QWORD PTR [r14+0x18]
   14001f501:	lea    rdx,[rbp-0x70]
   14001f505:	lea    rcx,[rsp+0x60]
   14001f50a:	mov    r9b,r12b
   14001f50d:	call   0x140020fcc
   14001f512:	mov    r15d,0x80004005
   14001f518:	test   eax,eax
   14001f51a:	jne    0x14001f59a
   14001f51c:	test   ebx,ebx
   14001f51e:	cmove  ebx,r15d
   14001f522:	jmp    0x14001f59a
   14001f524:	mov    r8,QWORD PTR [rbp-0x58]
   14001f528:	lea    rax,[r8-0x1]
   14001f52c:	cmp    rax,0xfffffffffffffffd
   14001f530:	ja     0x14001f491
   14001f536:	mov    rdx,rdi
   14001f539:	call   0x14001d8a4
   14001f53e:	test   eax,eax
   14001f540:	jne    0x14001f491
   14001f546:	jmp    0x14001f46b
   14001f54b:	call   QWORD PTR [rip+0x21e87]        # 0x1400413d8
   14001f551:	mov    rcx,rdi
   14001f554:	mov    r15d,eax
   14001f557:	call   0x140021380
   14001f55c:	test   al,al
   14001f55e:	je     0x14001f480
   14001f564:	mov    r15d,ebx
   14001f567:	jmp    0x14001f496
   14001f56c:	mov    eax,ecx
   14001f56e:	and    eax,0x1fff0000
   14001f573:	cmp    eax,0x1230000
   14001f578:	jne    0x14001f581
   14001f57a:	mov    ebx,ecx
   14001f57c:	jmp    0x14001f496
   14001f581:	movzx  ebx,cx
   14001f584:	or     ebx,0x80070000
   14001f58a:	test   ecx,ecx
   14001f58c:	cmovle ebx,ecx
   14001f58f:	jmp    0x14001f496
   14001f594:	mov    r15d,0x80004005
   14001f59a:	cmp    DWORD PTR [rsp+0x38],0x0
   14001f59f:	je     0x14001f5c7
   14001f5a1:	mov    edx,DWORD PTR [rsp+0x34]
   14001f5a5:	mov    rcx,QWORD PTR [r14+0x10]
   14001f5a9:	mov    r8d,esi
   14001f5ac:	call   0x14001b4f4
   14001f5b1:	test   eax,eax
   14001f5b3:	jne    0x14001f5c7
   14001f5b5:	mov    rcx,rdi
   14001f5b8:	call   0x140021380
   14001f5bd:	test   al,al
   14001f5bf:	jne    0x14001f5c7
   14001f5c1:	test   ebx,ebx
   14001f5c3:	cmove  ebx,r15d
   14001f5c7:	test   r13d,r13d
   14001f5ca:	je     0x14001f5ef
   14001f5cc:	xor    esi,esi
   14001f5ce:	xchg   QWORD PTR [r14+0x38],rsi
   14001f5d2:	test   rsi,rsi
   14001f5d5:	je     0x14001f5ef
   14001f5d7:	mov    rcx,rsi
   14001f5da:	call   0x14000fa1c
   14001f5df:	mov    rcx,rsi
   14001f5e2:	call   0x14000fd20
   14001f5e7:	mov    rcx,rsi
   14001f5ea:	call   0x14002657c
   14001f5ef:	test   rdi,rdi
   14001f5f2:	je     0x14001f5fd
   14001f5f4:	mov    rcx,rdi
   14001f5f7:	call   QWORD PTR [rip+0x21d8b]        # 0x140041388
   14001f5fd:	mov    eax,0xe123052c
   14001f602:	test   r12b,r12b
   14001f605:	cmove  ebx,eax
   14001f608:	mov    eax,ebx
   14001f60a:	mov    rcx,QWORD PTR [rbp+0x8c0]
   14001f611:	xor    rcx,rsp
   14001f614:	call   0x1400265a0
   14001f619:	mov    rbx,QWORD PTR [rsp+0xa20]
   14001f621:	add    rsp,0x9d0
   14001f628:	pop    r15
   14001f62a:	pop    r14
   14001f62c:	pop    r13
   14001f62e:	pop    r12
   14001f630:	pop    rdi
   14001f631:	pop    rsi
   14001f632:	pop    rbp
   14001f633:	ret    
   14001f634:	sub    rsp,0x28
   14001f638:	mov    rax,QWORD PTR [rdx]
   14001f63b:	cmp    rax,QWORD PTR [rip+0x25dde]        # 0x140045420
   14001f642:	jne    0x14001f65e
   14001f644:	mov    rax,QWORD PTR [rdx+0x8]
   14001f648:	cmp    rax,QWORD PTR [rip+0x25dd9]        # 0x140045428
   14001f64f:	jne    0x14001f65e
   14001f651:	mov    QWORD PTR [r8],rcx
   14001f654:	mov    rax,QWORD PTR [rcx]
   14001f657:	call   QWORD PTR [rax+0x8]
   14001f65a:	xor    eax,eax
   14001f65c:	jmp    0x14001f667
   14001f65e:	and    QWORD PTR [r8],0x0
   14001f662:	mov    eax,0x80004002
   14001f667:	add    rsp,0x28
   14001f66b:	ret    
   14001f66c:	mov    eax,0x1
   14001f671:	lock xadd DWORD PTR [rcx+0x88],eax
   14001f679:	inc    eax
   14001f67b:	ret    
   14001f67c:	mov    r11,rsp
   14001f67f:	push   rdi
   14001f680:	sub    rsp,0x30
   14001f684:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   14001f68c:	mov    QWORD PTR [r11+0x18],rbx
   14001f690:	mov    QWORD PTR [r11+0x20],rsi
   14001f694:	mov    rbx,rcx
   14001f697:	or     esi,0xffffffff
   14001f69a:	mov    edi,esi
   14001f69c:	lock xadd DWORD PTR [rcx+0x88],edi
   14001f6a4:	add    edi,esi
   14001f6a6:	jne    0x14001f766
   14001f6ac:	mov    QWORD PTR [r11+0x8],rcx
   14001f6b0:	test   rcx,rcx
   14001f6b3:	je     0x14001f766
   14001f6b9:	lea    rax,[rip+0x27d68]        # 0x140047428
   14001f6c0:	mov    QWORD PTR [rcx],rax
   14001f6c3:	lea    rax,[rcx+0x68]
   14001f6c7:	mov    QWORD PTR [r11+0x10],rax
   14001f6cb:	mov    rdx,QWORD PTR [rax]
   14001f6ce:	sub    rdx,0x18
   14001f6d2:	mov    eax,esi
   14001f6d4:	lock xadd DWORD PTR [rdx+0x10],eax
   14001f6d9:	add    eax,esi
   14001f6db:	test   eax,eax
   14001f6dd:	jg     0x14001f6e9
   14001f6df:	mov    rcx,QWORD PTR [rdx]
   14001f6e2:	mov    rax,QWORD PTR [rcx]
   14001f6e5:	call   QWORD PTR [rax+0x8]
   14001f6e8:	nop
   14001f6e9:	lea    rax,[rbx+0x60]
   14001f6ed:	mov    QWORD PTR [rsp+0x48],rax
   14001f6f2:	mov    rdx,QWORD PTR [rax]
   14001f6f5:	sub    rdx,0x18
   14001f6f9:	mov    eax,esi
   14001f6fb:	lock xadd DWORD PTR [rdx+0x10],eax
   14001f700:	add    eax,esi
   14001f702:	test   eax,eax
   14001f704:	jg     0x14001f710
   14001f706:	mov    rcx,QWORD PTR [rdx]
   14001f709:	mov    rax,QWORD PTR [rcx]
   14001f70c:	call   QWORD PTR [rax+0x8]
   14001f70f:	nop
   14001f710:	lea    rax,[rbx+0x58]
   14001f714:	mov    QWORD PTR [rsp+0x48],rax
   14001f719:	mov    rdx,QWORD PTR [rax]
   14001f71c:	sub    rdx,0x18
   14001f720:	mov    eax,esi
   14001f722:	lock xadd DWORD PTR [rdx+0x10],eax
   14001f727:	add    eax,esi
   14001f729:	test   eax,eax
   14001f72b:	jg     0x14001f737
   14001f72d:	mov    rcx,QWORD PTR [rdx]
   14001f730:	mov    rax,QWORD PTR [rcx]
   14001f733:	call   QWORD PTR [rax+0x8]
   14001f736:	nop
   14001f737:	lea    rax,[rbx+0x30]
   14001f73b:	mov    QWORD PTR [rsp+0x40],rax
   14001f740:	mov    rdx,QWORD PTR [rax]
   14001f743:	sub    rdx,0x18
   14001f747:	mov    ecx,esi
   14001f749:	lock xadd DWORD PTR [rdx+0x10],ecx
   14001f74e:	add    ecx,esi
   14001f750:	test   ecx,ecx
   14001f752:	jg     0x14001f75e
   14001f754:	mov    rcx,QWORD PTR [rdx]
   14001f757:	mov    r8,QWORD PTR [rcx]
   14001f75a:	call   QWORD PTR [r8+0x8]
   14001f75e:	mov    rcx,rbx
   14001f761:	call   0x14002657c
   14001f766:	mov    eax,edi
   14001f768:	mov    rbx,QWORD PTR [rsp+0x50]
   14001f76d:	mov    rsi,QWORD PTR [rsp+0x58]
   14001f772:	add    rsp,0x30
   14001f776:	pop    rdi
   14001f777:	ret    
   14001f778:	mov    DWORD PTR [rcx+0x40],edx
   14001f77b:	xor    eax,eax
   14001f77d:	ret    
   14001f77e:	int3   
   14001f77f:	int3   
   14001f780:	sub    rsp,0x18
   14001f784:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   14001f78c:	mov    eax,DWORD PTR [rcx+0x40]
   14001f78f:	mov    DWORD PTR [rdx],eax
   14001f791:	xor    eax,eax
   14001f793:	jmp    0x14001f79a
   14001f795:	mov    eax,0x80004005
   14001f79a:	add    rsp,0x18
   14001f79e:	ret    
   14001f79f:	int3   
   14001f7a0:	mov    DWORD PTR [rcx+0x44],edx
   14001f7a3:	xor    eax,eax
   14001f7a5:	ret    
   14001f7a6:	int3   
   14001f7a7:	int3   
   14001f7a8:	sub    rsp,0x18
   14001f7ac:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   14001f7b4:	mov    eax,DWORD PTR [rcx+0x44]
   14001f7b7:	mov    DWORD PTR [rdx],eax
   14001f7b9:	xor    eax,eax
   14001f7bb:	jmp    0x14001f7c2
   14001f7bd:	mov    eax,0x80004005
   14001f7c2:	add    rsp,0x18
   14001f7c6:	ret    
   14001f7c7:	int3   
   14001f7c8:	mov    QWORD PTR [rsp+0x8],rcx
   14001f7cd:	push   rsi
   14001f7ce:	push   rdi
   14001f7cf:	push   r14
   14001f7d1:	sub    rsp,0x30
   14001f7d5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f7de:	mov    QWORD PTR [rsp+0x58],rbx
   14001f7e3:	mov    r14,r8
   14001f7e6:	mov    rsi,rdx
   14001f7e9:	mov    rbx,rcx
   14001f7ec:	call   0x140004250
   14001f7f1:	xor    edi,edi
   14001f7f3:	test   eax,eax
   14001f7f5:	je     0x14001f7fe
   14001f7f7:	mov    eax,0xe12305c6
   14001f7fc:	jmp    0x14001f85b
   14001f7fe:	mov    rdx,r14
   14001f801:	mov    rcx,QWORD PTR [rbx+0x18]
   14001f805:	call   0x140015eac
   14001f80a:	lea    r8,[rbx+0x68]
   14001f80e:	lea    rdx,[rbx+0x70]
   14001f812:	mov    r9,rax
   14001f815:	mov    rcx,rsi
   14001f818:	call   0x1400260b8
   14001f81d:	lea    rcx,[rbx+0x60]
   14001f821:	test   rsi,rsi
   14001f824:	je     0x14001f835
   14001f826:	or     rax,0xffffffffffffffff
   14001f82a:	inc    rax
   14001f82d:	cmp    WORD PTR [rsi+rax*2],di
   14001f831:	jne    0x14001f82a
   14001f833:	mov    edi,eax
   14001f835:	mov    r8d,edi
   14001f838:	mov    rdx,rsi
   14001f83b:	call   0x140006f54
   14001f840:	mov    rax,QWORD PTR [rbx]
   14001f843:	mov    edx,DWORD PTR [rbx+0x78]
   14001f846:	mov    rcx,rbx
   14001f849:	call   QWORD PTR [rax+0x30]
   14001f84c:	xor    eax,eax
   14001f84e:	jmp    0x14001f85b
   14001f850:	mov    eax,DWORD PTR [rsp+0x68]
   14001f854:	jmp    0x14001f85b
   14001f856:	mov    eax,0x80004005
   14001f85b:	mov    rbx,QWORD PTR [rsp+0x58]
   14001f860:	add    rsp,0x30
   14001f864:	pop    r14
   14001f866:	pop    rdi
   14001f867:	pop    rsi
   14001f868:	ret    
   14001f869:	int3   
   14001f86a:	int3   
   14001f86b:	int3   
   14001f86c:	mov    DWORD PTR [rcx+0x48],edx
   14001f86f:	xor    eax,eax
   14001f871:	ret    
   14001f872:	int3   
   14001f873:	int3   
   14001f874:	sub    rsp,0x18
   14001f878:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   14001f880:	mov    eax,DWORD PTR [rcx+0x48]
   14001f883:	mov    DWORD PTR [rdx],eax
   14001f885:	xor    eax,eax
   14001f887:	jmp    0x14001f88e
   14001f889:	mov    eax,0x80004005
   14001f88e:	add    rsp,0x18
   14001f892:	ret    
   14001f893:	int3   
   14001f894:	mov    DWORD PTR [rcx+0x4c],edx
   14001f897:	xor    eax,eax
   14001f899:	ret    
   14001f89a:	int3   
   14001f89b:	int3   
   14001f89c:	sub    rsp,0x18
   14001f8a0:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   14001f8a8:	mov    eax,DWORD PTR [rcx+0x4c]
   14001f8ab:	mov    DWORD PTR [rdx],eax
   14001f8ad:	xor    eax,eax
   14001f8af:	jmp    0x14001f8b6
   14001f8b1:	mov    eax,0x80004005
   14001f8b6:	add    rsp,0x18
   14001f8ba:	ret    
   14001f8bb:	int3   
   14001f8bc:	mov    DWORD PTR [rcx+0x50],edx
   14001f8bf:	xor    eax,eax
   14001f8c1:	ret    
   14001f8c2:	int3   
   14001f8c3:	int3   
   14001f8c4:	sub    rsp,0x18
   14001f8c8:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   14001f8d0:	mov    eax,DWORD PTR [rcx+0x50]
   14001f8d3:	mov    DWORD PTR [rdx],eax
   14001f8d5:	xor    eax,eax
   14001f8d7:	jmp    0x14001f8de
   14001f8d9:	mov    eax,0x80004005
   14001f8de:	add    rsp,0x18
   14001f8e2:	ret    
   14001f8e3:	int3   
   14001f8e4:	mov    rax,rsp
   14001f8e7:	mov    QWORD PTR [rax+0x8],rcx
   14001f8eb:	push   r12
   14001f8ed:	push   r14
   14001f8ef:	push   r15
   14001f8f1:	sub    rsp,0x70
   14001f8f5:	mov    QWORD PTR [rax-0x50],0xfffffffffffffffe
   14001f8fd:	mov    QWORD PTR [rax+0x10],rbx
   14001f901:	mov    QWORD PTR [rax+0x18],rsi
   14001f905:	mov    QWORD PTR [rax+0x20],rdi
   14001f909:	mov    r12,r8
   14001f90c:	mov    rsi,rdx
   14001f90f:	mov    r14,rcx
   14001f912:	xor    edi,edi
   14001f914:	test   rdx,rdx
   14001f917:	je     0x14001fa70
   14001f91d:	cmp    QWORD PTR [rdx],rdi
   14001f920:	je     0x14001fa70
   14001f926:	mov    r8,QWORD PTR [rdx+0x8]
   14001f92a:	mov    rax,QWORD PTR [rdx]
   14001f92d:	or     rcx,0xffffffffffffffff
   14001f931:	test   r8,r8
   14001f934:	jne    0x14001f980
   14001f936:	mov    rbx,rcx
   14001f939:	inc    rbx
   14001f93c:	cmp    WORD PTR [rax+rbx*2],di
   14001f940:	jne    0x14001f939
   14001f942:	add    rbx,0x3
   14001f946:	mov    eax,0x2
   14001f94b:	mul    rbx
   14001f94e:	cmovo  rax,rcx
   14001f952:	mov    rcx,rax
   14001f955:	call   0x140027888
   14001f95a:	mov    r15,rax
   14001f95d:	mov    r9,QWORD PTR [rsi]
   14001f960:	lea    r8,[rip+0x27a41]        # 0x1400473a8
   14001f967:	mov    rdx,rbx
   14001f96a:	mov    rcx,rax
   14001f96d:	call   0x14001a520
   14001f972:	test   eax,eax
   14001f974:	jns    0x14001f9e3
   14001f976:	mov    eax,0x80004005
   14001f97b:	jmp    0x14001fa75
   14001f980:	mov    rdx,rcx
   14001f983:	inc    rdx
   14001f986:	cmp    WORD PTR [rax+rdx*2],di
   14001f98a:	jne    0x14001f983
   14001f98c:	mov    rax,rcx
   14001f98f:	inc    rax
   14001f992:	cmp    WORD PTR [r8+rax*2],di
   14001f997:	jne    0x14001f98f
   14001f999:	lea    rbx,[rax+0x4]
   14001f99d:	add    rbx,rdx
   14001f9a0:	mov    eax,0x2
   14001f9a5:	mul    rbx
   14001f9a8:	cmovo  rax,rcx
   14001f9ac:	mov    rcx,rax
   14001f9af:	call   0x140027888
   14001f9b4:	mov    r15,rax
   14001f9b7:	mov    rax,QWORD PTR [rsi+0x8]
   14001f9bb:	mov    QWORD PTR [rsp+0x20],rax
   14001f9c0:	mov    r9,QWORD PTR [rsi]
   14001f9c3:	lea    r8,[rip+0x27a16]        # 0x1400473e0
   14001f9ca:	mov    rdx,rbx
   14001f9cd:	mov    rcx,r15
   14001f9d0:	call   0x14001a520
   14001f9d5:	test   eax,eax
   14001f9d7:	jns    0x14001f9e3
   14001f9d9:	mov    eax,0x80004005
   14001f9de:	jmp    0x14001fa75
   14001f9e3:	xor    edx,edx
   14001f9e5:	mov    rcx,r14
   14001f9e8:	call   0x14001d688
   14001f9ed:	mov    ebx,eax
   14001f9ef:	mov    DWORD PTR [rsp+0x30],eax
   14001f9f3:	test   eax,eax
   14001f9f5:	js     0x14001fa45
   14001f9f7:	mov    rax,QWORD PTR [rsi]
   14001f9fa:	mov    QWORD PTR [rsp+0x40],rax
   14001f9ff:	mov    rax,QWORD PTR [rsi+0x10]
   14001fa03:	mov    QWORD PTR [rsp+0x50],rax
   14001fa08:	mov    rax,QWORD PTR [rsi+0x18]
   14001fa0c:	mov    QWORD PTR [rsp+0x58],rax
   14001fa11:	mov    rax,QWORD PTR [rsi+0x20]
   14001fa15:	mov    QWORD PTR [rsp+0x60],rax
   14001fa1a:	mov    eax,DWORD PTR [rsi+0x28]
   14001fa1d:	mov    DWORD PTR [rsp+0x68],eax
   14001fa21:	mov    QWORD PTR [rsp+0x48],r15
   14001fa26:	mov    r8,r12
   14001fa29:	lea    rdx,[rsp+0x40]
   14001fa2e:	mov    rcx,r14
   14001fa31:	call   0x14001e9ec
   14001fa36:	mov    ebx,eax
   14001fa38:	mov    DWORD PTR [rsp+0x30],eax
   14001fa3c:	mov    rcx,r15
   14001fa3f:	call   0x140026c1c
   14001fa44:	nop
   14001fa45:	jmp    0x14001fa55
   14001fa47:	xor    edi,edi
   14001fa49:	mov    r14,QWORD PTR [rsp+0x90]
   14001fa51:	mov    ebx,DWORD PTR [rsp+0x30]
   14001fa55:	mov    rcx,QWORD PTR [r14+0x10]
   14001fa59:	test   rcx,rcx
   14001fa5c:	je     0x14001fa68
   14001fa5e:	mov    rax,QWORD PTR [rcx]
   14001fa61:	mov    edx,0x1
   14001fa66:	call   QWORD PTR [rax]
   14001fa68:	mov    QWORD PTR [r14+0x10],rdi
   14001fa6c:	mov    eax,ebx
   14001fa6e:	jmp    0x14001fa75
   14001fa70:	mov    eax,0x80004005
   14001fa75:	lea    r11,[rsp+0x70]
   14001fa7a:	mov    rbx,QWORD PTR [r11+0x28]
   14001fa7e:	mov    rsi,QWORD PTR [r11+0x30]
   14001fa82:	mov    rdi,QWORD PTR [r11+0x38]
   14001fa86:	mov    rsp,r11
   14001fa89:	pop    r15
   14001fa8b:	pop    r14
   14001fa8d:	pop    r12
   14001fa8f:	ret    
   14001fa90:	int3   
   14001fa91:	int3   
   14001fa92:	int3   
   14001fa93:	int3   
   14001fa94:	mov    rax,rsp
   14001fa97:	mov    QWORD PTR [rax+0x8],rcx
   14001fa9b:	push   rsi
   14001fa9c:	push   rdi
   14001fa9d:	push   r14
   14001fa9f:	sub    rsp,0x40
   14001faa3:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001faab:	mov    QWORD PTR [rax+0x10],rbx
   14001faaf:	mov    r14,r8
   14001fab2:	mov    esi,edx
   14001fab4:	mov    rdi,rcx
   14001fab7:	lea    rdx,[rax-0x34]
   14001fabb:	mov    ecx,esi
   14001fabd:	call   QWORD PTR [rip+0x2184d]        # 0x140041310
   14001fac3:	test   eax,eax
   14001fac5:	jne    0x14001fae2
   14001fac7:	call   QWORD PTR [rip+0x2190b]        # 0x1400413d8
   14001facd:	mov    ecx,0xe1230530
   14001fad2:	lea    edx,[rcx+0x59]
   14001fad5:	cmp    eax,0x57
   14001fad8:	cmove  ecx,edx
   14001fadb:	mov    eax,ecx
   14001fadd:	jmp    0x14001fb8b
   14001fae2:	call   QWORD PTR [rip+0x21810]        # 0x1400412f8
   14001fae8:	mov    ecx,eax
   14001faea:	lea    rdx,[rsp+0x28]
   14001faef:	call   QWORD PTR [rip+0x2181b]        # 0x140041310
   14001faf5:	test   eax,eax
   14001faf7:	jne    0x14001fb03
   14001faf9:	mov    eax,0xe1230530
   14001fafe:	jmp    0x14001fb8b
   14001fb03:	mov    BYTE PTR [rsp+0x78],0x0
   14001fb08:	lea    rdx,[rsp+0x78]
   14001fb0d:	mov    rcx,rdi
   14001fb10:	call   0x14001d688
   14001fb15:	mov    ebx,eax
   14001fb17:	mov    DWORD PTR [rsp+0x20],eax
   14001fb1b:	test   eax,eax
   14001fb1d:	js     0x14001fb66
   14001fb1f:	mov    r9d,DWORD PTR [rsp+0x24]
   14001fb24:	cmp    DWORD PTR [rsp+0x28],r9d
   14001fb29:	setne  al
   14001fb2c:	test   al,al
   14001fb2e:	je     0x14001fb50
   14001fb30:	cmp    BYTE PTR [rsp+0x78],0x0
   14001fb35:	jne    0x14001fb3e
   14001fb37:	mov    ebx,0xe1230515
   14001fb3c:	jmp    0x14001fb62
   14001fb3e:	mov    r8d,esi
   14001fb41:	mov    edx,0x1
   14001fb46:	mov    rcx,rdi
   14001fb49:	call   0x1400202b8
   14001fb4e:	jmp    0x14001fb60
   14001fb50:	xor    r9d,r9d
   14001fb53:	mov    r8,r14
   14001fb56:	mov    edx,esi
   14001fb58:	mov    rcx,rdi
   14001fb5b:	call   0x14001e2ec
   14001fb60:	mov    ebx,eax
   14001fb62:	mov    DWORD PTR [rsp+0x20],ebx
   14001fb66:	jmp    0x14001fb71
   14001fb68:	mov    rdi,QWORD PTR [rsp+0x60]
   14001fb6d:	mov    ebx,DWORD PTR [rsp+0x20]
   14001fb71:	mov    rcx,QWORD PTR [rdi+0x10]
   14001fb75:	test   rcx,rcx
   14001fb78:	je     0x14001fb84
   14001fb7a:	mov    rax,QWORD PTR [rcx]
   14001fb7d:	mov    edx,0x1
   14001fb82:	call   QWORD PTR [rax]
   14001fb84:	and    QWORD PTR [rdi+0x10],0x0
   14001fb89:	mov    eax,ebx
   14001fb8b:	mov    rbx,QWORD PTR [rsp+0x68]
   14001fb90:	add    rsp,0x40
   14001fb94:	pop    r14
   14001fb96:	pop    rdi
   14001fb97:	pop    rsi
   14001fb98:	ret    
   14001fb99:	int3   
   14001fb9a:	int3   
   14001fb9b:	int3   
   14001fb9c:	mov    rax,rsp
   14001fb9f:	push   rsi
   14001fba0:	push   rdi
   14001fba1:	push   r12
   14001fba3:	push   r14
   14001fba5:	push   r15
   14001fba7:	sub    rsp,0x8e0
   14001fbae:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001fbb7:	mov    QWORD PTR [rax+0x18],rbx
   14001fbbb:	mov    rax,QWORD PTR [rip+0x394c6]        # 0x140059088
   14001fbc2:	xor    rax,rsp
   14001fbc5:	mov    QWORD PTR [rsp+0x8d0],rax
   14001fbcd:	mov    r14d,edx
   14001fbd0:	mov    rsi,rcx
   14001fbd3:	mov    QWORD PTR [rsp+0x38],rcx
   14001fbd8:	xor    edx,edx
   14001fbda:	call   0x14001d688
   14001fbdf:	mov    DWORD PTR [rsp+0x30],eax
   14001fbe3:	test   eax,eax
   14001fbe5:	js     0x14001fd1e
   14001fbeb:	mov    rdi,QWORD PTR [rsi+0x10]
   14001fbef:	xor    r8d,r8d
   14001fbf2:	mov    rdx,QWORD PTR [rsi+0x18]
   14001fbf6:	lea    rcx,[rdi+0xf08]
   14001fbfd:	call   0x14001933c
   14001fc02:	mov    rbx,QWORD PTR [rsi+0x10]
   14001fc06:	call   QWORD PTR [rip+0x216ec]        # 0x1400412f8
   14001fc0c:	mov    edx,eax
   14001fc0e:	lea    rcx,[rbx+0x90]
   14001fc15:	call   0x14001bf1c
   14001fc1a:	mov    rax,QWORD PTR [rdi+0x1060]
   14001fc21:	mov    edx,DWORD PTR [rax+0x4]
   14001fc24:	mov    r8d,DWORD PTR [rax]
   14001fc27:	mov    r9d,DWORD PTR [rdi+0x1070]
   14001fc2e:	mov    rcx,QWORD PTR [rsi+0x10]
   14001fc32:	mov    r10,QWORD PTR [rsi+0x18]
   14001fc36:	add    rcx,0x7a8
   14001fc3d:	mov    QWORD PTR [rcx+0x180],r10
   14001fc44:	mov    BYTE PTR [rsp+0x20],0x0
   14001fc49:	call   0x14001a6b0
   14001fc4e:	mov    DWORD PTR [rsp+0x50],0xb
   14001fc56:	mov    rcx,QWORD PTR [rsi+0x10]
   14001fc5a:	add    rcx,0x90
   14001fc61:	lea    rax,[rsp+0x40]
   14001fc66:	mov    QWORD PTR [rsp+0x28],rax
   14001fc6b:	lea    r9,[rsp+0x490]
   14001fc73:	lea    rdx,[rsp+0x50]
   14001fc78:	call   0x14001c230
   14001fc7d:	test   eax,eax
   14001fc7f:	jne    0x14001fc8c
   14001fc81:	mov    ebx,0x80004005
   14001fc86:	mov    DWORD PTR [rsp+0x30],ebx
   14001fc8a:	jmp    0x14001fcf9
   14001fc8c:	mov    ebx,DWORD PTR [rsp+0x8c8]
   14001fc93:	test   ebx,ebx
   14001fc95:	je     0x14001fcba
   14001fc97:	mov    eax,ebx
   14001fc99:	and    eax,0x1fff0000
   14001fc9e:	cmp    eax,0x1230000
   14001fca3:	je     0x14001fc86
   14001fca5:	movzx  eax,bx
   14001fca8:	or     eax,0x80070000
   14001fcad:	test   ebx,ebx
   14001fcaf:	cmovle eax,ebx
   14001fcb2:	mov    ebx,eax
   14001fcb4:	mov    DWORD PTR [rsp+0x30],eax
   14001fcb8:	jmp    0x14001fcf9
   14001fcba:	mov    ebx,0xe1230588
   14001fcbf:	mov    DWORD PTR [rsp+0x30],ebx
   14001fcc3:	lea    r12,[rsp+0x4ac]
   14001fccb:	mov    r15d,DWORD PTR [rsp+0x4a8]
   14001fcd3:	xor    edi,edi
   14001fcd5:	mov    DWORD PTR [rsp+0x34],edi
   14001fcd9:	cmp    edi,r15d
   14001fcdc:	jae    0x14001fcf9
   14001fcde:	cmp    r14d,DWORD PTR [r12+rdi*4]
   14001fce2:	jne    0x14001fcf5
   14001fce4:	mov    edx,r14d
   14001fce7:	mov    rcx,rsi
   14001fcea:	call   0x14001f218
   14001fcef:	mov    ebx,eax
   14001fcf1:	mov    DWORD PTR [rsp+0x30],eax
   14001fcf5:	inc    edi
   14001fcf7:	jmp    0x14001fcd5
   14001fcf9:	jmp    0x14001fd04
   14001fcfb:	mov    ebx,DWORD PTR [rsp+0x30]
   14001fcff:	mov    rsi,QWORD PTR [rsp+0x38]
   14001fd04:	mov    rcx,QWORD PTR [rsi+0x10]
   14001fd08:	test   rcx,rcx
   14001fd0b:	je     0x14001fd17
   14001fd0d:	mov    rax,QWORD PTR [rcx]
   14001fd10:	mov    edx,0x1
   14001fd15:	call   QWORD PTR [rax]
   14001fd17:	and    QWORD PTR [rsi+0x10],0x0
   14001fd1c:	mov    eax,ebx
   14001fd1e:	mov    rcx,QWORD PTR [rsp+0x8d0]
   14001fd26:	xor    rcx,rsp
   14001fd29:	call   0x1400265a0
   14001fd2e:	mov    rbx,QWORD PTR [rsp+0x920]
   14001fd36:	add    rsp,0x8e0
   14001fd3d:	pop    r15
   14001fd3f:	pop    r14
   14001fd41:	pop    r12
   14001fd43:	pop    rdi
   14001fd44:	pop    rsi
   14001fd45:	ret    
   14001fd46:	int3   
   14001fd47:	int3   
   14001fd48:	mov    rax,rsp
   14001fd4b:	push   rdi
   14001fd4c:	push   r14
   14001fd4e:	push   r15
   14001fd50:	sub    rsp,0x8e0
   14001fd57:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001fd60:	mov    QWORD PTR [rax+0x10],rbx
   14001fd64:	mov    QWORD PTR [rax+0x18],rsi
   14001fd68:	mov    rax,QWORD PTR [rip+0x39319]        # 0x140059088
   14001fd6f:	xor    rax,rsp
   14001fd72:	mov    QWORD PTR [rsp+0x8d0],rax
   14001fd7a:	mov    r14,rcx
   14001fd7d:	mov    QWORD PTR [rsp+0x38],rcx
   14001fd82:	xor    edx,edx
   14001fd84:	call   0x14001d688
   14001fd89:	mov    esi,eax
   14001fd8b:	mov    DWORD PTR [rsp+0x30],eax
   14001fd8f:	test   eax,eax
   14001fd91:	js     0x14001fec4
   14001fd97:	mov    rdi,QWORD PTR [r14+0x10]
   14001fd9b:	xor    r8d,r8d
   14001fd9e:	mov    rdx,QWORD PTR [r14+0x18]
   14001fda2:	lea    rcx,[rdi+0xf08]
   14001fda9:	call   0x14001933c
   14001fdae:	mov    rbx,QWORD PTR [r14+0x10]
   14001fdb2:	call   QWORD PTR [rip+0x21540]        # 0x1400412f8
   14001fdb8:	mov    edx,eax
   14001fdba:	lea    rcx,[rbx+0x90]
   14001fdc1:	call   0x14001bf1c
   14001fdc6:	mov    rax,QWORD PTR [rdi+0x1060]
   14001fdcd:	mov    edx,DWORD PTR [rax+0x4]
   14001fdd0:	mov    r8d,DWORD PTR [rax]
   14001fdd3:	mov    r9d,DWORD PTR [rdi+0x1070]
   14001fdda:	mov    rcx,QWORD PTR [r14+0x10]
   14001fdde:	mov    r10,QWORD PTR [r14+0x18]
   14001fde2:	add    rcx,0x7a8
   14001fde9:	mov    QWORD PTR [rcx+0x180],r10
   14001fdf0:	mov    BYTE PTR [rsp+0x20],0x0
   14001fdf5:	call   0x14001a6b0
   14001fdfa:	mov    DWORD PTR [rsp+0x50],0xb
   14001fe02:	mov    rcx,QWORD PTR [r14+0x10]
   14001fe06:	add    rcx,0x90
   14001fe0d:	lea    rax,[rsp+0x40]
   14001fe12:	mov    QWORD PTR [rsp+0x28],rax
   14001fe17:	lea    r9,[rsp+0x490]
   14001fe1f:	lea    rdx,[rsp+0x50]
   14001fe24:	call   0x14001c230
   14001fe29:	test   eax,eax
   14001fe2b:	jne    0x14001fe34
   14001fe2d:	mov    esi,0x80004005
   14001fe32:	jmp    0x14001fe63
   14001fe34:	mov    ecx,DWORD PTR [rsp+0x8c8]
   14001fe3b:	test   ecx,ecx
   14001fe3d:	je     0x14001fe69
   14001fe3f:	mov    eax,ecx
   14001fe41:	and    eax,0x1fff0000
   14001fe46:	cmp    eax,0x1230000
   14001fe4b:	jne    0x14001fe55
   14001fe4d:	mov    esi,ecx
   14001fe4f:	mov    DWORD PTR [rsp+0x30],ecx
   14001fe53:	jmp    0x14001fe9f
   14001fe55:	movzx  esi,cx
   14001fe58:	or     esi,0x80070000
   14001fe5e:	test   ecx,ecx
   14001fe60:	cmovle esi,ecx
   14001fe63:	mov    DWORD PTR [rsp+0x30],esi
   14001fe67:	jmp    0x14001fe9f
   14001fe69:	lea    r15,[rsp+0x4ac]
   14001fe71:	mov    edi,DWORD PTR [rsp+0x4a8]
   14001fe78:	xor    ebx,ebx
   14001fe7a:	mov    DWORD PTR [rsp+0x34],ebx
   14001fe7e:	cmp    ebx,edi
   14001fe80:	jae    0x14001fe9f
   14001fe82:	mov    edx,DWORD PTR [r15+rbx*4]
   14001fe86:	mov    rcx,r14
   14001fe89:	call   0x14001f218
   14001fe8e:	test   esi,esi
   14001fe90:	jne    0x14001fe9b
   14001fe92:	test   eax,eax
   14001fe94:	cmovs  esi,eax
   14001fe97:	mov    DWORD PTR [rsp+0x30],esi
   14001fe9b:	inc    ebx
   14001fe9d:	jmp    0x14001fe7a
   14001fe9f:	jmp    0x14001feaa
   14001fea1:	mov    esi,DWORD PTR [rsp+0x30]
   14001fea5:	mov    r14,QWORD PTR [rsp+0x38]
   14001feaa:	mov    rcx,QWORD PTR [r14+0x10]
   14001feae:	test   rcx,rcx
   14001feb1:	je     0x14001febd
   14001feb3:	mov    rax,QWORD PTR [rcx]
   14001feb6:	mov    edx,0x1
   14001febb:	call   QWORD PTR [rax]
   14001febd:	and    QWORD PTR [r14+0x10],0x0
   14001fec2:	mov    eax,esi
   14001fec4:	mov    rcx,QWORD PTR [rsp+0x8d0]
   14001fecc:	xor    rcx,rsp
   14001fecf:	call   0x1400265a0
   14001fed4:	lea    r11,[rsp+0x8e0]
   14001fedc:	mov    rbx,QWORD PTR [r11+0x28]
   14001fee0:	mov    rsi,QWORD PTR [r11+0x30]
   14001fee4:	mov    rsp,r11
   14001fee7:	pop    r15
   14001fee9:	pop    r14
   14001feeb:	pop    rdi
   14001feec:	ret    
   14001feed:	int3   
   14001feee:	int3   
   14001feef:	int3   
   14001fef0:	rex push rbx
   14001fef2:	sub    rsp,0x30
   14001fef6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001feff:	mov    rbx,rdx
   14001ff02:	lea    rdx,[rsp+0x50]
   14001ff07:	call   0x14001d324
   14001ff0c:	nop
   14001ff0d:	mov    rdx,rax
   14001ff10:	mov    rcx,rbx
   14001ff13:	call   0x14000cdac
   14001ff18:	nop
   14001ff19:	mov    rdx,QWORD PTR [rsp+0x50]
   14001ff1e:	add    rdx,0xffffffffffffffe8
   14001ff22:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14001ff27:	jg     0x14001ff32
   14001ff29:	mov    rcx,QWORD PTR [rdx]
   14001ff2c:	mov    rax,QWORD PTR [rcx]
   14001ff2f:	call   QWORD PTR [rax+0x8]
   14001ff32:	mov    r8d,0x11
   14001ff38:	lea    rdx,[rip+0x274b1]        # 0x1400473f0
   14001ff3f:	mov    rcx,rbx
   14001ff42:	add    rsp,0x30
   14001ff46:	pop    rbx
   14001ff47:	jmp    0x140006cfc
   14001ff4c:	mov    QWORD PTR [rsp+0x10],rbx
   14001ff51:	mov    QWORD PTR [rsp+0x18],rbp
   14001ff56:	mov    QWORD PTR [rsp+0x20],rsi
   14001ff5b:	push   rdi
   14001ff5c:	push   r12
   14001ff5e:	push   r13
   14001ff60:	push   r14
   14001ff62:	push   r15
   14001ff64:	sub    rsp,0x40
   14001ff68:	mov    rbp,QWORD PTR [rcx+0x10]
   14001ff6c:	mov    r15,rcx
   14001ff6f:	mov    r12d,edx
   14001ff72:	lea    rbx,[rbp+0x7b8]
   14001ff79:	mov    rcx,rbx
   14001ff7c:	mov    rax,QWORD PTR [rbx]
   14001ff7f:	call   QWORD PTR [rax+0x8]
   14001ff82:	mov    esi,DWORD PTR [r15+0x24]
   14001ff86:	xor    edi,edi
   14001ff88:	mov    r13d,DWORD PTR [rax+0xc]
   14001ff8c:	mov    rax,QWORD PTR [rbx]
   14001ff8f:	mov    rcx,rbx
   14001ff92:	mov    r14d,edi
   14001ff95:	call   QWORD PTR [rax+0x8]
   14001ff98:	mov    rcx,QWORD PTR [rbp+0x918]
   14001ff9f:	mov    rbx,rax
   14001ffa2:	call   0x140019fec
   14001ffa7:	mov    eax,DWORD PTR [rbx+0x8]
   14001ffaa:	or     ecx,0xffffffff
   14001ffad:	jmp    0x14001ffc5
   14001ffaf:	imul   rax,rax,0x234
   14001ffb6:	add    rax,QWORD PTR [rbp+0x908]
   14001ffbd:	cmp    esi,DWORD PTR [rax+0x8]
   14001ffc0:	je     0x14001ffea
   14001ffc2:	mov    eax,DWORD PTR [rax+0x10]
   14001ffc5:	cmp    eax,ecx
   14001ffc7:	jne    0x14001ffaf
   14001ffc9:	mov    esi,DWORD PTR [rsp+0x70]
   14001ffcd:	mov    rcx,QWORD PTR [rbp+0x918]
   14001ffd4:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ffd8:	call   QWORD PTR [rip+0x212a2]        # 0x140041280
   14001ffde:	test   r14d,r14d
   14001ffe1:	jne    0x14001fff5
   14001ffe3:	xor    eax,eax
   14001ffe5:	jmp    0x140020095
   14001ffea:	mov    esi,DWORD PTR [rax+0x18]
   14001ffed:	mov    r14d,0x1
   14001fff3:	jmp    0x14001ffcd
   14001fff5:	mov    eax,0x1
   14001fffa:	mov    r14d,0x8000a500
   140020000:	lea    ebp,[rax+0xb]
   140020003:	mov    ebx,eax
   140020005:	test   r13d,r13d
   140020008:	jne    0x14002004e
   14002000a:	mov    rcx,QWORD PTR [r15+0x38]
   14002000e:	mov    DWORD PTR [rsp+0x30],eax
   140020012:	mov    DWORD PTR [rsp+0x34],eax
   140020016:	mov    DWORD PTR [rsp+0x38],r12d
   14002001b:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14002001f:	je     0x140020041
   140020021:	lea    rax,[rsp+0x30]
   140020026:	lea    r8,[rsp+0x30]
   14002002b:	mov    r9d,ebp
   14002002e:	mov    edx,r14d
   140020031:	mov    DWORD PTR [rsp+0x28],ebp
   140020035:	mov    QWORD PTR [rsp+0x20],rax
   14002003a:	call   0x14000fc30
   14002003f:	jmp    0x140020043
   140020041:	mov    eax,edi
   140020043:	neg    eax
   140020045:	sbb    eax,eax
   140020047:	and    ebx,eax
   140020049:	mov    eax,0x1
   14002004e:	test   esi,esi
   140020050:	jne    0x140020093
   140020052:	mov    rcx,QWORD PTR [r15+0x38]
   140020056:	mov    DWORD PTR [rsp+0x30],eax
   14002005a:	mov    DWORD PTR [rsp+0x34],0x2
   140020062:	mov    DWORD PTR [rsp+0x38],r12d
   140020067:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14002006b:	je     0x14002008d
   14002006d:	lea    rax,[rsp+0x30]
   140020072:	lea    r8,[rsp+0x30]
   140020077:	mov    r9d,ebp
   14002007a:	mov    edx,r14d
   14002007d:	mov    DWORD PTR [rsp+0x28],ebp
   140020081:	mov    QWORD PTR [rsp+0x20],rax
   140020086:	call   0x14000fc30
   14002008b:	mov    edi,eax
   14002008d:	neg    edi
   14002008f:	sbb    eax,eax
   140020091:	and    ebx,eax
   140020093:	mov    eax,ebx
   140020095:	lea    r11,[rsp+0x40]
   14002009a:	mov    rbx,QWORD PTR [r11+0x38]
   14002009e:	mov    rbp,QWORD PTR [r11+0x40]
   1400200a2:	mov    rsi,QWORD PTR [r11+0x48]
   1400200a6:	mov    rsp,r11
   1400200a9:	pop    r15
   1400200ab:	pop    r14
   1400200ad:	pop    r13
   1400200af:	pop    r12
   1400200b1:	pop    rdi
   1400200b2:	ret    
   1400200b3:	int3   
   1400200b4:	mov    r11,rsp
   1400200b7:	push   r15
   1400200b9:	sub    rsp,0x1f0
   1400200c0:	mov    QWORD PTR [r11-0x170],0xfffffffffffffffe
   1400200cb:	mov    QWORD PTR [r11+0x8],rbx
   1400200cf:	mov    QWORD PTR [r11+0x10],rsi
   1400200d3:	mov    QWORD PTR [r11+0x18],rdi
   1400200d7:	mov    QWORD PTR [r11+0x20],r14
   1400200db:	mov    rax,QWORD PTR [rip+0x38fa6]        # 0x140059088
   1400200e2:	xor    rax,rsp
   1400200e5:	mov    QWORD PTR [rsp+0x1e0],rax
   1400200ed:	mov    rsi,rdx
   1400200f0:	lea    rax,[rip+0x26379]        # 0x140046470
   1400200f7:	mov    QWORD PTR [r11-0x158],rax
   1400200fe:	lea    r15,[rip+0x256a3]        # 0x1400457a8
   140020105:	mov    QWORD PTR [r11-0x150],r15
   14002010c:	lea    r14,[rip+0x2611d]        # 0x140046230
   140020113:	mov    QWORD PTR [r11-0x150],r14
   14002011a:	xor    ebx,ebx
   14002011c:	mov    QWORD PTR [r11-0x148],rbx
   140020123:	lea    rax,[rip+0x263c6]        # 0x1400464f0
   14002012a:	mov    QWORD PTR [r11-0x158],rax
   140020131:	lea    rax,[rip+0x263d0]        # 0x140046508
   140020138:	mov    QWORD PTR [r11-0x150],rax
   14002013f:	mov    QWORD PTR [r11-0x140],rbx
   140020146:	mov    QWORD PTR [r11-0x138],rbx
   14002014d:	mov    DWORD PTR [rsp+0xc8],ebx
   140020154:	mov    QWORD PTR [r11-0x128],rbx
   14002015b:	mov    BYTE PTR [rsp+0xd8],bl
   140020162:	mov    DWORD PTR [rsp+0x28],0x1
   14002016a:	mov    DWORD PTR [rsp+0x20],ebx
   14002016e:	xor    r9d,r9d
   140020171:	mov    r8d,0x4b8
   140020177:	mov    rdx,QWORD PTR [rip+0x3caa2]        # 0x14005cc20
   14002017e:	lea    rcx,[r11-0x158]
   140020185:	call   0x1400150ac
   14002018a:	nop
   14002018b:	mov    rax,QWORD PTR [rsp+0xb8]
   140020193:	mov    r8d,DWORD PTR [rax+0x4a8]
   14002019a:	xor    edx,edx
   14002019c:	mov    ecx,0x400
   1400201a1:	call   QWORD PTR [rip+0x211b1]        # 0x140041358
   1400201a7:	mov    rdi,rax
   1400201aa:	test   rax,rax
   1400201ad:	jne    0x1400201cb
   1400201af:	call   QWORD PTR [rip+0x21223]        # 0x1400413d8
   1400201b5:	mov    ebx,eax
   1400201b7:	lea    rcx,[rsp+0xa0]
   1400201bf:	call   0x140014ffc
   1400201c4:	mov    eax,ebx
   1400201c6:	jmp    0x14002028a
   1400201cb:	mov    QWORD PTR [rsp+0x58],rbx
   1400201d0:	mov    QWORD PTR [rsp+0x68],rbx
   1400201d5:	mov    QWORD PTR [rsp+0x78],rbx
   1400201da:	lea    r8,[rsp+0x50]
   1400201df:	mov    edx,0x8
   1400201e4:	mov    rcx,rax
   1400201e7:	call   QWORD PTR [rip+0x20eeb]        # 0x1400410d8
   1400201ed:	neg    eax
   1400201ef:	sbb    rcx,rcx
   1400201f2:	and    rcx,QWORD PTR [rsp+0x50]
   1400201f7:	mov    QWORD PTR [rsp+0x50],rcx
   1400201fc:	mov    rcx,rdi
   1400201ff:	call   QWORD PTR [rip+0x21183]        # 0x140041388
   140020205:	mov    QWORD PTR [rsp+0x40],r15
   14002020a:	mov    QWORD PTR [rsp+0x40],r14
   14002020f:	mov    QWORD PTR [rsp+0x48],rsi
   140020214:	cmp    QWORD PTR [rsp+0x50],rbx
   140020219:	jne    0x140020228
   14002021b:	mov    ecx,0x6
   140020220:	call   QWORD PTR [rip+0x210fa]        # 0x140041320
   140020226:	jmp    0x140020248
   140020228:	mov    rax,QWORD PTR [rsp+0x78]
   14002022d:	test   rax,rax
   140020230:	jne    0x140020245
   140020232:	lea    rcx,[rsp+0x50]
   140020237:	call   0x140015c2c
   14002023c:	test   eax,eax
   14002023e:	je     0x140020248
   140020240:	mov    rax,QWORD PTR [rsp+0x78]
   140020245:	mov    rbx,QWORD PTR [rax]
   140020248:	mov    BYTE PTR [rsp+0x20],0x1
   14002024d:	mov    r9d,0x10047a
   140020253:	mov    rdx,rbx
   140020256:	lea    rcx,[rsp+0x40]
   14002025b:	call   0x140010794
   140020260:	mov    ebx,eax
   140020262:	mov    QWORD PTR [rsp+0x40],r14
   140020267:	lea    rcx,[rsp+0x50]
   14002026c:	call   0x140015ccc
   140020271:	jmp    0x1400201b7
   140020276:	lea    rcx,[rsp+0xa0]
   14002027e:	call   0x140014ffc
   140020283:	mov    eax,DWORD PTR [rsp+0x94]
   14002028a:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140020292:	xor    rcx,rsp
   140020295:	call   0x1400265a0
   14002029a:	lea    r11,[rsp+0x1f0]
   1400202a2:	mov    rbx,QWORD PTR [r11+0x10]
   1400202a6:	mov    rsi,QWORD PTR [r11+0x18]
   1400202aa:	mov    rdi,QWORD PTR [r11+0x20]
   1400202ae:	mov    r14,QWORD PTR [r11+0x28]
   1400202b2:	mov    rsp,r11
   1400202b5:	pop    r15
   1400202b7:	ret    
   1400202b8:	rex push rbp
   1400202ba:	push   rbx
   1400202bb:	push   rdi
   1400202bc:	lea    rbp,[rsp-0x370]
   1400202c4:	sub    rsp,0x470
   1400202cb:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   1400202d4:	mov    rax,QWORD PTR [rip+0x38dad]        # 0x140059088
   1400202db:	xor    rax,rsp
   1400202de:	mov    QWORD PTR [rbp+0x360],rax
   1400202e5:	mov    r10d,r8d
   1400202e8:	mov    rbx,rcx
   1400202eb:	mov    eax,edx
   1400202ed:	neg    eax
   1400202ef:	sbb    r8d,r8d
   1400202f2:	add    r8d,0x2
   1400202f6:	mov    DWORD PTR [rsp+0x50],r8d
   1400202fb:	mov    DWORD PTR [rsp+0x54],edx
   1400202ff:	mov    DWORD PTR [rsp+0x58],r10d
   140020304:	mov    DWORD PTR [rsp+0x5c],r9d
   140020309:	test   edx,edx
   14002030b:	je     0x140020476
   140020311:	lea    rcx,[rbp+0x80]
   140020318:	call   0x14001a040
   14002031d:	nop
   14002031e:	lea    rcx,[rbp+0x80]
   140020325:	call   0x14001a2ec
   14002032a:	mov    rax,QWORD PTR [rbp+0x90]
   140020331:	mov    edi,DWORD PTR [rax+0xa4]
   140020337:	lea    rcx,[rbp+0x80]
   14002033e:	call   0x14001a144
   140020343:	cmp    edi,0x1
   140020346:	je     0x14002034d
   140020348:	cmp    edi,0x10
   14002034b:	jne    0x14002036e
   14002034d:	mov    eax,DWORD PTR [rbx+0x40]
   140020350:	sub    eax,0x3
   140020353:	cmp    eax,0x2
   140020356:	jbe    0x14002046f
   14002035c:	xor    eax,eax
   14002035e:	cmp    edi,0x1
   140020361:	setne  al
   140020364:	add    eax,0x6
   140020367:	mov    DWORD PTR [rbx+0x40],eax
   14002036a:	and    DWORD PTR [rbx+0x44],0x0
   14002036e:	mov    eax,DWORD PTR [rbx+0x40]
   140020371:	mov    DWORD PTR [rsp+0x60],eax
   140020375:	mov    eax,DWORD PTR [rbx+0x44]
   140020378:	mov    DWORD PTR [rsp+0x64],eax
   14002037c:	and    DWORD PTR [rsp+0x68],0x0
   140020381:	mov    rdi,QWORD PTR [rbx+0x60]
   140020385:	cmp    DWORD PTR [rdi-0x10],0x0
   140020389:	je     0x140020476
   14002038f:	mov    DWORD PTR [rsp+0x68],0x1
   140020397:	lea    rcx,[rip+0x39f8a]        # 0x14005a328
   14002039e:	mov    rax,QWORD PTR [rip+0x39f83]        # 0x14005a328
   1400203a5:	call   QWORD PTR [rax+0x18]
   1400203a8:	lea    rbx,[rax+0x18]
   1400203ac:	mov    QWORD PTR [rsp+0x40],rbx
   1400203b1:	test   rdi,rdi
   1400203b4:	je     0x1400203e0
   1400203b6:	test   rdi,0xffffffffffff0000
   1400203bd:	jne    0x1400203e0
   1400203bf:	movzx  edi,di
   1400203c2:	mov    ecx,edi
   1400203c4:	call   0x1400040b8
   1400203c9:	test   rax,rax
   1400203cc:	je     0x1400203f2
   1400203ce:	mov    r8d,edi
   1400203d1:	mov    rdx,rax
   1400203d4:	lea    rcx,[rsp+0x40]
   1400203d9:	call   0x14000dbbc
   1400203de:	jmp    0x1400203ed
   1400203e0:	mov    rdx,rdi
   1400203e3:	lea    rcx,[rsp+0x40]
   1400203e8:	call   0x14000d830
   1400203ed:	mov    rbx,QWORD PTR [rsp+0x40]
   1400203f2:	mov    edx,0x104
   1400203f7:	lea    rcx,[rsp+0x6c]
   1400203fc:	xor    r9d,r9d
   1400203ff:	lea    rax,[rsp+0x6c]
   140020404:	mov    r8,rbx
   140020407:	sub    r8,rax
   14002040a:	lea    rax,[rdx+0x7ffffefa]
   140020411:	test   rax,rax
   140020414:	je     0x140020428
   140020416:	mov    al,BYTE PTR [r8+rcx*1]
   14002041a:	test   al,al
   14002041c:	je     0x140020428
   14002041e:	mov    BYTE PTR [rcx],al
   140020420:	inc    rcx
   140020423:	dec    rdx
   140020426:	jne    0x14002040a
   140020428:	test   rdx,rdx
   14002042b:	jne    0x140020436
   14002042d:	dec    rcx
   140020430:	mov    r9d,0x8007007a
   140020436:	mov    BYTE PTR [rcx],0x0
   140020439:	test   r9d,r9d
   14002043c:	jns    0x140020459
   14002043e:	lea    rdx,[rbx-0x18]
   140020442:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140020447:	jg     0x140020452
   140020449:	mov    rcx,QWORD PTR [rdx]
   14002044c:	mov    rax,QWORD PTR [rcx]
   14002044f:	call   QWORD PTR [rax+0x8]
   140020452:	mov    eax,0xe1230553
   140020457:	jmp    0x140020491
   140020459:	lea    rdx,[rbx-0x18]
   14002045d:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140020462:	jg     0x140020476
   140020464:	mov    rcx,QWORD PTR [rdx]
   140020467:	mov    rax,QWORD PTR [rcx]
   14002046a:	call   QWORD PTR [rax+0x8]
   14002046d:	jmp    0x140020476
   14002046f:	mov    eax,0xe123052d
   140020474:	jmp    0x140020491
   140020476:	lea    rax,[rsp+0x50]
   14002047b:	test   rax,rax
   14002047e:	je     0x14002048c
   140020480:	lea    rcx,[rsp+0x50]
   140020485:	call   0x1400256cc
   14002048a:	jmp    0x140020491
   14002048c:	mov    eax,0xe1230554
   140020491:	mov    rcx,QWORD PTR [rbp+0x360]
   140020498:	xor    rcx,rsp
   14002049b:	call   0x1400265a0
   1400204a0:	add    rsp,0x470
   1400204a7:	pop    rdi
   1400204a8:	pop    rbx
   1400204a9:	pop    rbp
   1400204aa:	ret    
   1400204ab:	int3   
   1400204ac:	mov    rax,rsp
   1400204af:	push   rbp
   1400204b0:	lea    rbp,[rax-0x598]
   1400204b7:	sub    rsp,0x690
   1400204be:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400204c7:	mov    QWORD PTR [rax+0x10],rsi
   1400204cb:	mov    QWORD PTR [rax+0x18],rdi
   1400204cf:	mov    rax,QWORD PTR [rip+0x38bb2]        # 0x140059088
   1400204d6:	xor    rax,rsp
   1400204d9:	mov    QWORD PTR [rbp+0x580],rax
   1400204e0:	mov    rdi,rcx
   1400204e3:	xor    esi,esi
   1400204e5:	mov    WORD PTR [rbp+0x160],si
   1400204ec:	xor    edx,edx
   1400204ee:	mov    r8d,0x206
   1400204f4:	lea    rcx,[rbp+0x162]
   1400204fb:	call   0x14002bb90
   140020500:	mov    r8d,0x104
   140020506:	lea    rdx,[rbp+0x160]
   14002050d:	mov    rcx,QWORD PTR [rdi+0x28]
   140020511:	call   QWORD PTR [rip+0x20e21]        # 0x140041338
   140020517:	cmp    si,WORD PTR [rbp+0x160]
   14002051e:	jne    0x1400205da
   140020524:	mov    DWORD PTR [rsp+0x40],esi
   140020528:	mov    DWORD PTR [rsp+0x44],0xe1232723
   140020530:	mov    DWORD PTR [rsp+0x48],0x9e7
   140020538:	mov    BYTE PTR [rsp+0x4c],sil
   14002053d:	lea    r9,[rbp+0x50]
   140020541:	lea    r10,[rsp+0x40]
   140020546:	lea    rcx,[rbp+0x50]
   14002054a:	lea    rdx,[rsp+0x40]
   14002054f:	mov    rax,rdx
   140020552:	or     rax,rcx
   140020555:	and    eax,0xf
   140020558:	jne    0x1400205b8
   14002055a:	lea    eax,[rsi+0x2]
   14002055d:	lea    r8d,[rax+0x7e]
   140020561:	movaps xmm0,XMMWORD PTR [rdx]
   140020564:	movaps XMMWORD PTR [rcx],xmm0
   140020567:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   14002056b:	movaps XMMWORD PTR [rcx+0x10],xmm1
   14002056f:	movaps xmm0,XMMWORD PTR [rdx+0x20]
   140020573:	movaps XMMWORD PTR [rcx+0x20],xmm0
   140020577:	movaps xmm1,XMMWORD PTR [rdx+0x30]
   14002057b:	movaps XMMWORD PTR [rcx+0x30],xmm1
   14002057f:	movaps xmm0,XMMWORD PTR [rdx+0x40]
   140020583:	movaps XMMWORD PTR [rcx+0x40],xmm0
   140020587:	movaps xmm1,XMMWORD PTR [rdx+0x50]
   14002058b:	movaps XMMWORD PTR [rcx+0x50],xmm1
   14002058f:	movaps xmm0,XMMWORD PTR [rdx+0x60]
   140020593:	movaps XMMWORD PTR [rcx+0x60],xmm0
   140020597:	add    rcx,r8
   14002059a:	movaps xmm1,XMMWORD PTR [rdx+0x70]
   14002059e:	movaps XMMWORD PTR [rcx-0x10],xmm1
   1400205a2:	add    rdx,r8
   1400205a5:	dec    rax
   1400205a8:	jne    0x140020561
   1400205aa:	mov    rax,QWORD PTR [rdx]
   1400205ad:	mov    QWORD PTR [rcx],rax
   1400205b0:	mov    eax,DWORD PTR [rdx+0x8]
   1400205b3:	mov    DWORD PTR [rcx+0x8],eax
   1400205b6:	jmp    0x1400205c9
   1400205b8:	mov    r8d,0x10c
   1400205be:	mov    rdx,r10
   1400205c1:	mov    rcx,r9
   1400205c4:	call   0x1400265d0
   1400205c9:	lea    rdx,[rip+0x35db0]        # 0x140056380
   1400205d0:	lea    rcx,[rbp+0x50]
   1400205d4:	call   0x140029fe8
   1400205d9:	int3   
   1400205da:	mov    QWORD PTR [rsp+0x28],rsi
   1400205df:	lea    r9,[rsp+0x28]
   1400205e4:	lea    r8,[rbp+0x370]
   1400205eb:	mov    edx,0x104
   1400205f0:	lea    rcx,[rbp+0x160]
   1400205f7:	call   QWORD PTR [rip+0x20d83]        # 0x140041380
   1400205fd:	mov    rax,QWORD PTR [rsp+0x28]
   140020602:	test   rax,rax
   140020605:	je     0x14002062d
   140020607:	or     rcx,0xffffffffffffffff
   14002060b:	inc    rcx
   14002060e:	cmp    WORD PTR [rax+rcx*2],si
   140020612:	jne    0x14002060b
   140020614:	lea    rdx,[rbp+0x370]
   14002061b:	or     rax,0xffffffffffffffff
   14002061f:	inc    rax
   140020622:	cmp    WORD PTR [rdx+rax*2],si
   140020626:	jne    0x14002061f
   140020628:	sub    rax,rcx
   14002062b:	jmp    0x140020641
   14002062d:	lea    rcx,[rbp+0x370]
   140020634:	or     rax,0xffffffffffffffff
   140020638:	inc    rax
   14002063b:	cmp    WORD PTR [rcx+rax*2],si
   14002063f:	jne    0x140020638
   140020641:	lea    r9,[rip+0x39ce0]        # 0x14005a328
   140020648:	mov    r8d,eax
   14002064b:	lea    rdx,[rbp+0x370]
   140020652:	lea    rcx,[rsp+0x20]
   140020657:	call   0x14000db0c
   14002065c:	nop
   14002065d:	lea    rcx,[rdi+0x30]
   140020661:	lea    rdx,[rsp+0x20]
   140020666:	call   0x14000cdac
   14002066b:	nop
   14002066c:	mov    rdx,QWORD PTR [rsp+0x20]
   140020671:	add    rdx,0xffffffffffffffe8
   140020675:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14002067a:	jg     0x140020685
   14002067c:	mov    rcx,QWORD PTR [rdx]
   14002067f:	mov    rax,QWORD PTR [rcx]
   140020682:	call   QWORD PTR [rax+0x8]
   140020685:	mov    rcx,QWORD PTR [rbp+0x580]
   14002068c:	xor    rcx,rsp
   14002068f:	call   0x1400265a0
   140020694:	lea    r11,[rsp+0x690]
   14002069c:	mov    rsi,QWORD PTR [r11+0x18]
   1400206a0:	mov    rdi,QWORD PTR [r11+0x20]
   1400206a4:	mov    rsp,r11
   1400206a7:	pop    rbp
   1400206a8:	ret    
   1400206a9:	int3   
   1400206aa:	int3   
   1400206ab:	int3   
   1400206ac:	rex push rbx
   1400206ae:	sub    rsp,0x20
   1400206b2:	cmp    BYTE PTR [rcx+0x8],0x0
   1400206b6:	mov    rbx,rcx
   1400206b9:	je     0x1400206d0
   1400206bb:	cmp    BYTE PTR [rcx+0x9],0x0
   1400206bf:	jne    0x1400206ca
   1400206c1:	mov    rcx,QWORD PTR [rcx]
   1400206c4:	call   QWORD PTR [rip+0x20e86]        # 0x140041550
   1400206ca:	mov    WORD PTR [rbx+0x8],0x0
   1400206d0:	add    rsp,0x20
   1400206d4:	pop    rbx
   1400206d5:	ret    
   1400206d6:	int3   
   1400206d7:	int3   
   1400206d8:	rex push rbx
   1400206da:	sub    rsp,0x20
   1400206de:	cmp    BYTE PTR [rcx+0x8],0x0
   1400206e2:	mov    rbx,rcx
   1400206e5:	je     0x1400206f4
   1400206e7:	mov    rcx,QWORD PTR [rcx]
   1400206ea:	call   QWORD PTR [rip+0x20e60]        # 0x140041550
   1400206f0:	mov    BYTE PTR [rbx+0x8],0x0
   1400206f4:	add    rsp,0x20
   1400206f8:	pop    rbx
   1400206f9:	ret    
   1400206fa:	int3   
   1400206fb:	int3   
   1400206fc:	sub    rsp,0x28
   140020700:	cmp    BYTE PTR [rip+0x3cd61],0x0        # 0x14005d468
   140020707:	je     0x14002071d
   140020709:	mov    rcx,QWORD PTR [rip+0x3cd50]        # 0x14005d460
   140020710:	mov    rax,QWORD PTR [rcx]
   140020713:	call   QWORD PTR [rax+0x10]
   140020716:	mov    BYTE PTR [rip+0x3cd4b],0x0        # 0x14005d468
   14002071d:	add    rsp,0x28
   140020721:	ret    
   140020722:	int3   
   140020723:	int3   
   140020724:	rex push rbx
   140020726:	sub    rsp,0x20
   14002072a:	cmp    BYTE PTR [rcx+0x8],0x0
   14002072e:	mov    rbx,rcx
   140020731:	je     0x140020748
   140020733:	cmp    BYTE PTR [rcx+0x9],0x0
   140020737:	jne    0x140020742
   140020739:	mov    rcx,QWORD PTR [rcx]
   14002073c:	mov    rax,QWORD PTR [rcx]
   14002073f:	call   QWORD PTR [rax+0x10]
   140020742:	mov    WORD PTR [rbx+0x8],0x0
   140020748:	add    rsp,0x20
   14002074c:	pop    rbx
   14002074d:	ret    
   14002074e:	int3   
   14002074f:	int3   
   140020750:	sub    rsp,0x38
   140020754:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002075d:	lea    rcx,[rip+0x26dcc]        # 0x140047530
   140020764:	call   QWORD PTR [rip+0x20c26]        # 0x140041390
   14002076a:	test   rax,rax
   14002076d:	jne    0x1400207f3
   140020773:	mov    ecx,0x10c
   140020778:	call   0x140026da8
   14002077d:	mov    r8,rax
   140020780:	mov    QWORD PTR [rsp+0x48],rax
   140020785:	test   rax,rax
   140020788:	je     0x1400207d9
   14002078a:	and    DWORD PTR [rax],0x0
   14002078d:	mov    DWORD PTR [rax+0x4],0xe1232723
   140020794:	mov    DWORD PTR [rax+0x8],0xfd
   14002079b:	lea    rdx,[rax+0xc]
   14002079f:	mov    ecx,0x100
   1400207a4:	lea    r9,[rip+0x26d8d]        # 0x140047538
   1400207ab:	sub    r9,rdx
   1400207ae:	lea    rax,[rcx+0x7ffffefe]
   1400207b5:	test   rax,rax
   1400207b8:	je     0x1400207cc
   1400207ba:	mov    al,BYTE PTR [r9+rdx*1]
   1400207be:	test   al,al
   1400207c0:	je     0x1400207cc
   1400207c2:	mov    BYTE PTR [rdx],al
   1400207c4:	inc    rdx
   1400207c7:	dec    rcx
   1400207ca:	jne    0x1400207ae
   1400207cc:	test   rcx,rcx
   1400207cf:	jne    0x1400207d4
   1400207d1:	dec    rdx
   1400207d4:	mov    BYTE PTR [rdx],0x0
   1400207d7:	jmp    0x1400207dc
   1400207d9:	xor    r8d,r8d
   1400207dc:	mov    QWORD PTR [rsp+0x40],r8
   1400207e1:	lea    rdx,[rip+0x35c28]        # 0x140056410
   1400207e8:	lea    rcx,[rsp+0x40]
   1400207ed:	call   0x140029fe8
   1400207f2:	int3   
   1400207f3:	lea    rdx,[rip+0x26ce6]        # 0x1400474e0
   1400207fa:	mov    rcx,rax
   1400207fd:	call   QWORD PTR [rip+0x20ae5]        # 0x1400412e8
   140020803:	test   rax,rax
   140020806:	jne    0x14002088c
   14002080c:	mov    ecx,0x10c
   140020811:	call   0x140026da8
   140020816:	mov    r8,rax
   140020819:	mov    QWORD PTR [rsp+0x48],rax
   14002081e:	test   rax,rax
   140020821:	je     0x140020872
   140020823:	and    DWORD PTR [rax],0x0
   140020826:	mov    DWORD PTR [rax+0x4],0xe1232723
   14002082d:	mov    DWORD PTR [rax+0x8],0x102
   140020834:	lea    rdx,[rax+0xc]
   140020838:	mov    ecx,0x100
   14002083d:	lea    r9,[rip+0x26cbc]        # 0x140047500
   140020844:	sub    r9,rdx
   140020847:	lea    rax,[rcx+0x7ffffefe]
   14002084e:	test   rax,rax
   140020851:	je     0x140020865
   140020853:	mov    al,BYTE PTR [r9+rdx*1]
   140020857:	test   al,al
   140020859:	je     0x140020865
   14002085b:	mov    BYTE PTR [rdx],al
   14002085d:	inc    rdx
   140020860:	dec    rcx
   140020863:	jne    0x140020847
   140020865:	test   rcx,rcx
   140020868:	jne    0x14002086d
   14002086a:	dec    rdx
   14002086d:	mov    BYTE PTR [rdx],0x0
   140020870:	jmp    0x140020875
   140020872:	xor    r8d,r8d
   140020875:	mov    QWORD PTR [rsp+0x40],r8
   14002087a:	lea    rdx,[rip+0x35b8f]        # 0x140056410
   140020881:	lea    rcx,[rsp+0x40]
   140020886:	call   0x140029fe8
   14002088b:	int3   
   14002088c:	add    rsp,0x38
   140020890:	ret    
   140020891:	int3   
   140020892:	int3   
   140020893:	int3   
   140020894:	sub    rsp,0x38
   140020898:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400208a1:	lea    rcx,[rip+0x26c88]        # 0x140047530
   1400208a8:	call   QWORD PTR [rip+0x20ae2]        # 0x140041390
   1400208ae:	test   rax,rax
   1400208b1:	jne    0x140020937
   1400208b7:	mov    ecx,0x10c
   1400208bc:	call   0x140026da8
   1400208c1:	mov    r8,rax
   1400208c4:	mov    QWORD PTR [rsp+0x48],rax
   1400208c9:	test   rax,rax
   1400208cc:	je     0x14002091d
   1400208ce:	and    DWORD PTR [rax],0x0
   1400208d1:	mov    DWORD PTR [rax+0x4],0xe1232723
   1400208d8:	mov    DWORD PTR [rax+0x8],0x111
   1400208df:	lea    rdx,[rax+0xc]
   1400208e3:	mov    ecx,0x100
   1400208e8:	lea    r9,[rip+0x26c49]        # 0x140047538
   1400208ef:	sub    r9,rdx
   1400208f2:	lea    rax,[rcx+0x7ffffefe]
   1400208f9:	test   rax,rax
   1400208fc:	je     0x140020910
   1400208fe:	mov    al,BYTE PTR [r9+rdx*1]
   140020902:	test   al,al
   140020904:	je     0x140020910
   140020906:	mov    BYTE PTR [rdx],al
   140020908:	inc    rdx
   14002090b:	dec    rcx
   14002090e:	jne    0x1400208f2
   140020910:	test   rcx,rcx
   140020913:	jne    0x140020918
   140020915:	dec    rdx
   140020918:	mov    BYTE PTR [rdx],0x0
   14002091b:	jmp    0x140020920
   14002091d:	xor    r8d,r8d
   140020920:	mov    QWORD PTR [rsp+0x40],r8
   140020925:	lea    rdx,[rip+0x35ae4]        # 0x140056410
   14002092c:	lea    rcx,[rsp+0x40]
   140020931:	call   0x140029fe8
   140020936:	int3   
   140020937:	lea    rdx,[rip+0x26c52]        # 0x140047590
   14002093e:	mov    rcx,rax
   140020941:	call   QWORD PTR [rip+0x209a1]        # 0x1400412e8
   140020947:	test   rax,rax
   14002094a:	jne    0x1400209d0
   140020950:	mov    ecx,0x10c
   140020955:	call   0x140026da8
   14002095a:	mov    r8,rax
   14002095d:	mov    QWORD PTR [rsp+0x48],rax
   140020962:	test   rax,rax
   140020965:	je     0x1400209b6
   140020967:	and    DWORD PTR [rax],0x0
   14002096a:	mov    DWORD PTR [rax+0x4],0xe1232723
   140020971:	mov    DWORD PTR [rax+0x8],0x116
   140020978:	lea    rdx,[rax+0xc]
   14002097c:	mov    ecx,0x100
   140020981:	lea    r9,[rip+0x26c28]        # 0x1400475b0
   140020988:	sub    r9,rdx
   14002098b:	lea    rax,[rcx+0x7ffffefe]
   140020992:	test   rax,rax
   140020995:	je     0x1400209a9
   140020997:	mov    al,BYTE PTR [r9+rdx*1]
   14002099b:	test   al,al
   14002099d:	je     0x1400209a9
   14002099f:	mov    BYTE PTR [rdx],al
   1400209a1:	inc    rdx
   1400209a4:	dec    rcx
   1400209a7:	jne    0x14002098b
   1400209a9:	test   rcx,rcx
   1400209ac:	jne    0x1400209b1
   1400209ae:	dec    rdx
   1400209b1:	mov    BYTE PTR [rdx],0x0
   1400209b4:	jmp    0x1400209b9
   1400209b6:	xor    r8d,r8d
   1400209b9:	mov    QWORD PTR [rsp+0x40],r8
   1400209be:	lea    rdx,[rip+0x35a4b]        # 0x140056410
   1400209c5:	lea    rcx,[rsp+0x40]
   1400209ca:	call   0x140029fe8
   1400209cf:	int3   
   1400209d0:	add    rsp,0x38
   1400209d4:	rex.W jmp rax
   1400209d7:	int3   
   1400209d8:	rex push rbx
   1400209da:	sub    rsp,0x20
   1400209de:	mov    rbx,rdx
   1400209e1:	lea    rdx,[rip+0x26ad0]        # 0x1400474b8
   1400209e8:	call   QWORD PTR [rip+0x208fa]        # 0x1400412e8
   1400209ee:	test   rax,rax
   1400209f1:	jne    0x1400209f8
   1400209f3:	xor    r9d,r9d
   1400209f6:	jmp    0x1400209fd
   1400209f8:	call   rax
   1400209fa:	mov    r9,rax
   1400209fd:	test   rbx,rbx
   140020a00:	je     0x140020aa3
   140020a06:	test   r9,r9
   140020a09:	je     0x140020aa3
   140020a0f:	mov    rcx,rbx
   140020a12:	or     rcx,r9
   140020a15:	and    ecx,0xf
   140020a18:	jne    0x140020a8b
   140020a1a:	lea    eax,[rcx+0x1]
   140020a1d:	lea    ecx,[rax+0x7f]
   140020a20:	movaps xmm0,XMMWORD PTR [rbx]
   140020a23:	movaps XMMWORD PTR [r9],xmm0
   140020a27:	movaps xmm1,XMMWORD PTR [rbx+0x10]
   140020a2b:	movaps XMMWORD PTR [r9+0x10],xmm1
   140020a30:	movaps xmm0,XMMWORD PTR [rbx+0x20]
   140020a34:	movaps XMMWORD PTR [r9+0x20],xmm0
   140020a39:	movaps xmm1,XMMWORD PTR [rbx+0x30]
   140020a3d:	movaps XMMWORD PTR [r9+0x30],xmm1
   140020a42:	movaps xmm0,XMMWORD PTR [rbx+0x40]
   140020a46:	movaps XMMWORD PTR [r9+0x40],xmm0
   140020a4b:	movaps xmm1,XMMWORD PTR [rbx+0x50]
   140020a4f:	movaps XMMWORD PTR [r9+0x50],xmm1
   140020a54:	movaps xmm0,XMMWORD PTR [rbx+0x60]
   140020a58:	movaps XMMWORD PTR [r9+0x60],xmm0
   140020a5d:	movaps xmm1,XMMWORD PTR [rbx+0x70]
   140020a61:	add    r9,rcx
   140020a64:	add    rbx,rcx
   140020a67:	movaps XMMWORD PTR [r9-0x10],xmm1
   140020a6c:	dec    rax
   140020a6f:	jne    0x140020a20
   140020a71:	movaps xmm0,XMMWORD PTR [rbx]
   140020a74:	movaps XMMWORD PTR [r9],xmm0
   140020a78:	movaps xmm1,XMMWORD PTR [rbx+0x10]
   140020a7c:	movaps XMMWORD PTR [r9+0x10],xmm1
   140020a81:	mov    rax,QWORD PTR [rbx+0x20]
   140020a85:	mov    QWORD PTR [r9+0x20],rax
   140020a89:	jmp    0x140020a9c
   140020a8b:	mov    r8d,0xa8
   140020a91:	mov    rdx,rbx
   140020a94:	mov    rcx,r9
   140020a97:	call   0x1400265d0
   140020a9c:	mov    eax,0x1
   140020aa1:	jmp    0x140020aa5
   140020aa3:	xor    eax,eax
   140020aa5:	add    rsp,0x20
   140020aa9:	pop    rbx
   140020aaa:	ret    
   140020aab:	int3   
   140020aac:	mov    rax,rsp
   140020aaf:	push   rbp
   140020ab0:	push   rsi
   140020ab1:	push   rdi
   140020ab2:	mov    rbp,rsp
   140020ab5:	sub    rsp,0x70
   140020ab9:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   140020ac1:	mov    QWORD PTR [rax+0x18],rbx
   140020ac5:	mov    rax,QWORD PTR [rip+0x385bc]        # 0x140059088
   140020acc:	xor    rax,rsp
   140020acf:	mov    QWORD PTR [rbp-0x10],rax
   140020ad3:	mov    rbx,r8
   140020ad6:	mov    rsi,rdx
   140020ad9:	test   rdx,rdx
   140020adc:	je     0x140020cd0
   140020ae2:	lea    rdx,[rip+0x269cf]        # 0x1400474b8
   140020ae9:	call   QWORD PTR [rip+0x207f9]        # 0x1400412e8
   140020aef:	test   rax,rax
   140020af2:	je     0x140020cd0
   140020af8:	call   rax
   140020afa:	mov    rdi,rax
   140020afd:	test   rax,rax
   140020b00:	je     0x140020cd0
   140020b06:	mov    DWORD PTR [rax+0x54],0x3e8
   140020b0d:	call   0x140020750
   140020b12:	mov    QWORD PTR [rdi+0x40],rax
   140020b16:	lea    rcx,[rip+0x26a13]        # 0x140047530
   140020b1d:	call   QWORD PTR [rip+0x2086d]        # 0x140041390
   140020b23:	mov    rcx,rax
   140020b26:	lea    rdx,[rip+0x26a2b]        # 0x140047558
   140020b2d:	call   QWORD PTR [rip+0x207b5]        # 0x1400412e8
   140020b33:	mov    QWORD PTR [rdi+0x48],rax
   140020b37:	call   0x140020894
   140020b3c:	mov    QWORD PTR [rdi+0x28],rax
   140020b40:	lea    rcx,[rip+0x26ac9]        # 0x140047610
   140020b47:	call   QWORD PTR [rip+0x2081b]        # 0x140041368
   140020b4d:	mov    rcx,rax
   140020b50:	lea    rdx,[rip+0x26a19]        # 0x140047570
   140020b57:	call   QWORD PTR [rip+0x2078b]        # 0x1400412e8
   140020b5d:	mov    QWORD PTR [rdi+0x30],rax
   140020b61:	mov    eax,DWORD PTR [rbx+0x8]
   140020b64:	mov    DWORD PTR [rdi+0x9c],eax
   140020b6a:	cmp    BYTE PTR [rip+0x39ec7],0x0        # 0x14005aa38
   140020b71:	jne    0x140020b87
   140020b73:	lea    rcx,[rip+0x39ec6]        # 0x14005aa40
   140020b7a:	call   QWORD PTR [rip+0x20a88]        # 0x140041608
   140020b80:	mov    BYTE PTR [rip+0x39eb1],0x1        # 0x14005aa38
   140020b87:	mov    rax,QWORD PTR [rip+0x39ec2]        # 0x14005aa50
   140020b8e:	mov    QWORD PTR [rdi+0xa0],rax
   140020b95:	mov    al,BYTE PTR [rbx+0x18]
   140020b98:	mov    BYTE PTR [rdi+0x9b],al
   140020b9e:	mov    BYTE PTR [rdi+0x9a],0x1
   140020ba5:	lea    rcx,[rbp-0x30]
   140020ba9:	call   0x140021920
   140020bae:	nop
   140020baf:	lea    rax,[rbp-0x38]
   140020bb3:	mov    QWORD PTR [rsp+0x20],rax
   140020bb8:	mov    r9d,0x20019
   140020bbe:	xor    r8d,r8d
   140020bc1:	mov    rdx,QWORD PTR [rbp-0x30]
   140020bc5:	mov    rcx,0xffffffff80000002
   140020bcc:	call   QWORD PTR [rip+0x2044e]        # 0x140041020
   140020bd2:	test   eax,eax
   140020bd4:	jne    0x140020c2a
   140020bd6:	mov    DWORD PTR [rbp-0x3c],0x1
   140020bdd:	mov    DWORD PTR [rbp-0x40],0x10
   140020be4:	lea    rax,[rbp-0x40]
   140020be8:	mov    QWORD PTR [rsp+0x28],rax
   140020bed:	lea    rax,[rbp-0x20]
   140020bf1:	mov    QWORD PTR [rsp+0x20],rax
   140020bf6:	lea    r9,[rbp-0x3c]
   140020bfa:	xor    r8d,r8d
   140020bfd:	lea    rdx,[rip+0x269e4]        # 0x1400475e8
   140020c04:	mov    rcx,QWORD PTR [rbp-0x38]
   140020c08:	call   QWORD PTR [rip+0x2040a]        # 0x140041018
   140020c0e:	mov    ebx,eax
   140020c10:	mov    rcx,QWORD PTR [rbp-0x38]
   140020c14:	call   QWORD PTR [rip+0x2041e]        # 0x140041038
   140020c1a:	test   ebx,ebx
   140020c1c:	jne    0x140020c2a
   140020c1e:	cmp    BYTE PTR [rbp-0x20],0x30
   140020c22:	jne    0x140020c2a
   140020c24:	mov    BYTE PTR [rdi+0x9a],bl
   140020c2a:	mov    rax,rdi
   140020c2d:	or     rax,rsi
   140020c30:	and    eax,0xf
   140020c33:	jne    0x140020c9e
   140020c35:	mov    eax,0x1
   140020c3a:	lea    ecx,[rax+0x7f]
   140020c3d:	movaps xmm0,XMMWORD PTR [rdi]
   140020c40:	movaps XMMWORD PTR [rsi],xmm0
   140020c43:	movaps xmm1,XMMWORD PTR [rdi+0x10]
   140020c47:	movaps XMMWORD PTR [rsi+0x10],xmm1
   140020c4b:	movaps xmm0,XMMWORD PTR [rdi+0x20]
   140020c4f:	movaps XMMWORD PTR [rsi+0x20],xmm0
   140020c53:	movaps xmm1,XMMWORD PTR [rdi+0x30]
   140020c57:	movaps XMMWORD PTR [rsi+0x30],xmm1
   140020c5b:	movaps xmm0,XMMWORD PTR [rdi+0x40]
   140020c5f:	movaps XMMWORD PTR [rsi+0x40],xmm0
   140020c63:	movaps xmm1,XMMWORD PTR [rdi+0x50]
   140020c67:	movaps XMMWORD PTR [rsi+0x50],xmm1
   140020c6b:	movaps xmm0,XMMWORD PTR [rdi+0x60]
   140020c6f:	movaps XMMWORD PTR [rsi+0x60],xmm0
   140020c73:	add    rsi,rcx
   140020c76:	movaps xmm1,XMMWORD PTR [rdi+0x70]
   140020c7a:	movaps XMMWORD PTR [rsi-0x10],xmm1
   140020c7e:	add    rdi,rcx
   140020c81:	dec    rax
   140020c84:	jne    0x140020c3d
   140020c86:	movaps xmm0,XMMWORD PTR [rdi]
   140020c89:	movaps XMMWORD PTR [rsi],xmm0
   140020c8c:	movaps xmm1,XMMWORD PTR [rdi+0x10]
   140020c90:	movaps XMMWORD PTR [rsi+0x10],xmm1
   140020c94:	mov    rax,QWORD PTR [rdi+0x20]
   140020c98:	mov    QWORD PTR [rsi+0x20],rax
   140020c9c:	jmp    0x140020cb0
   140020c9e:	mov    r8d,0xa8
   140020ca4:	mov    rdx,rdi
   140020ca7:	mov    rcx,rsi
   140020caa:	call   0x1400265d0
   140020caf:	nop
   140020cb0:	mov    rdx,QWORD PTR [rbp-0x30]
   140020cb4:	add    rdx,0xffffffffffffffe8
   140020cb8:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140020cbd:	jg     0x140020cc9
   140020cbf:	mov    rcx,QWORD PTR [rdx]
   140020cc2:	mov    r8,QWORD PTR [rcx]
   140020cc5:	call   QWORD PTR [r8+0x8]
   140020cc9:	mov    eax,0x1
   140020cce:	jmp    0x140020cd2
   140020cd0:	xor    eax,eax
   140020cd2:	mov    rcx,QWORD PTR [rbp-0x10]
   140020cd6:	xor    rcx,rsp
   140020cd9:	call   0x1400265a0
   140020cde:	mov    rbx,QWORD PTR [rsp+0xa0]
   140020ce6:	add    rsp,0x70
   140020cea:	pop    rdi
   140020ceb:	pop    rsi
   140020cec:	pop    rbp
   140020ced:	ret    
   140020cee:	int3   
   140020cef:	int3   
   140020cf0:	rex push rbp
   140020cf2:	push   rbx
   140020cf3:	push   rsi
   140020cf4:	push   rdi
   140020cf5:	push   r14
   140020cf7:	lea    rbp,[rsp-0x37]
   140020cfc:	sub    rsp,0xf0
   140020d03:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140020d0c:	mov    rdi,r8
   140020d0f:	mov    r14,rdx
   140020d12:	mov    rsi,rcx
   140020d15:	call   QWORD PTR [rip+0x2084d]        # 0x140041568
   140020d1b:	mov    rbx,rax
   140020d1e:	test   rax,rax
   140020d21:	jne    0x140020da2
   140020d23:	mov    ecx,0x10c
   140020d28:	call   0x140026da8
   140020d2d:	mov    r8,rax
   140020d30:	mov    QWORD PTR [rsp+0x28],rax
   140020d35:	test   rax,rax
   140020d38:	je     0x140020d88
   140020d3a:	and    DWORD PTR [rax],ebx
   140020d3c:	mov    DWORD PTR [rax+0x4],0xe1232723
   140020d43:	mov    DWORD PTR [rax+0x8],0x1c2
   140020d4a:	lea    rdx,[rax+0xc]
   140020d4e:	mov    ecx,0x100
   140020d53:	lea    r9,[rip+0x2689e]        # 0x1400475f8
   140020d5a:	sub    r9,rdx
   140020d5d:	lea    rax,[rcx+0x7ffffefe]
   140020d64:	test   rax,rax
   140020d67:	je     0x140020d7b
   140020d69:	mov    al,BYTE PTR [r9+rdx*1]
   140020d6d:	test   al,al
   140020d6f:	je     0x140020d7b
   140020d71:	mov    BYTE PTR [rdx],al
   140020d73:	inc    rdx
   140020d76:	dec    rcx
   140020d79:	jne    0x140020d5d
   140020d7b:	test   rcx,rcx
   140020d7e:	jne    0x140020d83
   140020d80:	dec    rdx
   140020d83:	mov    BYTE PTR [rdx],0x0
   140020d86:	jmp    0x140020d8b
   140020d88:	xor    r8d,r8d
   140020d8b:	mov    QWORD PTR [rsp+0x20],r8
   140020d90:	lea    rdx,[rip+0x35679]        # 0x140056410
   140020d97:	lea    rcx,[rsp+0x20]
   140020d9c:	call   0x140029fe8
   140020da1:	int3   
   140020da2:	lea    r8,[rbp-0x79]
   140020da6:	mov    rdx,rsi
   140020da9:	mov    rcx,QWORD PTR [rdi]
   140020dac:	call   0x140021d50
   140020db1:	mov    rcx,rbx
   140020db4:	test   eax,eax
   140020db6:	jne    0x140020e4a
   140020dbc:	call   QWORD PTR [rip+0x2078e]        # 0x140041550
   140020dc2:	test   eax,eax
   140020dc4:	jne    0x140020fba
   140020dca:	mov    ecx,0x10c
   140020dcf:	call   0x140026da8
   140020dd4:	mov    r8,rax
   140020dd7:	mov    QWORD PTR [rsp+0x28],rax
   140020ddc:	test   rax,rax
   140020ddf:	je     0x140020e30
   140020de1:	and    DWORD PTR [rax],0x0
   140020de4:	mov    DWORD PTR [rax+0x4],0xe1232723
   140020deb:	mov    DWORD PTR [rax+0x8],0x1ce
   140020df2:	lea    rdx,[rax+0xc]
   140020df6:	mov    ecx,0x100
   140020dfb:	lea    r9,[rip+0x26866]        # 0x140047668
   140020e02:	sub    r9,rdx
   140020e05:	lea    rax,[rcx+0x7ffffefe]
   140020e0c:	test   rax,rax
   140020e0f:	je     0x140020e23
   140020e11:	mov    al,BYTE PTR [r9+rdx*1]
   140020e15:	test   al,al
   140020e17:	je     0x140020e23
   140020e19:	mov    BYTE PTR [rdx],al
   140020e1b:	inc    rdx
   140020e1e:	dec    rcx
   140020e21:	jne    0x140020e05
   140020e23:	test   rcx,rcx
   140020e26:	jne    0x140020e2b
   140020e28:	dec    rdx
   140020e2b:	mov    BYTE PTR [rdx],0x0
   140020e2e:	jmp    0x140020e33
   140020e30:	xor    r8d,r8d
   140020e33:	mov    QWORD PTR [rsp+0x20],r8
   140020e38:	lea    rdx,[rip+0x355d1]        # 0x140056410
   140020e3f:	lea    rcx,[rsp+0x20]
   140020e44:	call   0x140029fe8
   140020e49:	int3   
   140020e4a:	lea    rdx,[rbp-0x79]
   140020e4e:	call   0x1400209d8
   140020e53:	mov    r8,rdi
   140020e56:	mov    rdx,r14
   140020e59:	mov    rcx,rbx
   140020e5c:	call   0x140020aac
   140020e61:	test   eax,eax
   140020e63:	je     0x140020e98
   140020e65:	lea    rdx,[rip+0x2664c]        # 0x1400474b8
   140020e6c:	mov    rcx,rbx
   140020e6f:	call   QWORD PTR [rip+0x20473]        # 0x1400412e8
   140020e75:	test   rax,rax
   140020e78:	je     0x140020e7c
   140020e7a:	call   rax
   140020e7c:	mov    r9,r14
   140020e7f:	mov    r8,rsi
   140020e82:	mov    rcx,QWORD PTR [rdi]
   140020e85:	call   0x140022048
   140020e8a:	test   eax,eax
   140020e8c:	je     0x140020e98
   140020e8e:	mov    eax,0x1
   140020e93:	jmp    0x140020fbc
   140020e98:	mov    r8,QWORD PTR [rbp-0x71]
   140020e9c:	mov    rcx,QWORD PTR [rdi]
   140020e9f:	call   0x140021fb8
   140020ea4:	mov    edi,eax
   140020ea6:	mov    rcx,rbx
   140020ea9:	call   QWORD PTR [rip+0x206a1]        # 0x140041550
   140020eaf:	test   eax,eax
   140020eb1:	jne    0x140020f37
   140020eb7:	mov    ecx,0x10c
   140020ebc:	call   0x140026da8
   140020ec1:	mov    r8,rax
   140020ec4:	mov    QWORD PTR [rsp+0x28],rax
   140020ec9:	test   rax,rax
   140020ecc:	je     0x140020f1d
   140020ece:	and    DWORD PTR [rax],0x0
   140020ed1:	mov    DWORD PTR [rax+0x4],0xe1232723
   140020ed8:	mov    DWORD PTR [rax+0x8],0x1fb
   140020edf:	lea    rdx,[rax+0xc]
   140020ee3:	mov    ecx,0x100
   140020ee8:	lea    r9,[rip+0x26779]        # 0x140047668
   140020eef:	sub    r9,rdx
   140020ef2:	lea    rax,[rcx+0x7ffffefe]
   140020ef9:	test   rax,rax
   140020efc:	je     0x140020f10
   140020efe:	mov    al,BYTE PTR [r9+rdx*1]
   140020f02:	test   al,al
   140020f04:	je     0x140020f10
   140020f06:	mov    BYTE PTR [rdx],al
   140020f08:	inc    rdx
   140020f0b:	dec    rcx
   140020f0e:	jne    0x140020ef2
   140020f10:	test   rcx,rcx
   140020f13:	jne    0x140020f18
   140020f15:	dec    rdx
   140020f18:	mov    BYTE PTR [rdx],0x0
   140020f1b:	jmp    0x140020f20
   140020f1d:	xor    r8d,r8d
   140020f20:	mov    QWORD PTR [rsp+0x20],r8
   140020f25:	lea    rdx,[rip+0x354e4]        # 0x140056410
   140020f2c:	lea    rcx,[rsp+0x20]
   140020f31:	call   0x140029fe8
   140020f36:	int3   
   140020f37:	test   edi,edi
   140020f39:	jne    0x140020fba
   140020f3b:	mov    ecx,0x10c
   140020f40:	call   0x140026da8
   140020f45:	mov    r8,rax
   140020f48:	mov    QWORD PTR [rsp+0x28],rax
   140020f4d:	test   rax,rax
   140020f50:	je     0x140020fa0
   140020f52:	and    DWORD PTR [rax],edi
   140020f54:	mov    DWORD PTR [rax+0x4],0xe1232723
   140020f5b:	mov    DWORD PTR [rax+0x8],0x1fe
   140020f62:	lea    rdx,[rax+0xc]
   140020f66:	mov    ecx,0x100
   140020f6b:	lea    r9,[rip+0x2670e]        # 0x140047680
   140020f72:	sub    r9,rdx
   140020f75:	lea    rax,[rcx+0x7ffffefe]
   140020f7c:	test   rax,rax
   140020f7f:	je     0x140020f93
   140020f81:	mov    al,BYTE PTR [r9+rdx*1]
   140020f85:	test   al,al
   140020f87:	je     0x140020f93
   140020f89:	mov    BYTE PTR [rdx],al
   140020f8b:	inc    rdx
   140020f8e:	dec    rcx
   140020f91:	jne    0x140020f75
   140020f93:	test   rcx,rcx
   140020f96:	jne    0x140020f9b
   140020f98:	dec    rdx
   140020f9b:	mov    BYTE PTR [rdx],0x0
   140020f9e:	jmp    0x140020fa3
   140020fa0:	xor    r8d,r8d
   140020fa3:	mov    QWORD PTR [rsp+0x20],r8
   140020fa8:	lea    rdx,[rip+0x35461]        # 0x140056410
   140020faf:	lea    rcx,[rsp+0x20]
   140020fb4:	call   0x140029fe8
   140020fb9:	int3   
   140020fba:	xor    eax,eax
   140020fbc:	add    rsp,0xf0
   140020fc3:	pop    r14
   140020fc5:	pop    rdi
   140020fc6:	pop    rsi
   140020fc7:	pop    rbx
   140020fc8:	pop    rbp
   140020fc9:	ret    
   140020fca:	int3   
   140020fcb:	int3   
   140020fcc:	mov    rax,rsp
   140020fcf:	push   rdi
   140020fd0:	sub    rsp,0x30
   140020fd4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140020fdc:	mov    QWORD PTR [rax+0x10],rbx
   140020fe0:	mov    QWORD PTR [rax+0x18],rbp
   140020fe4:	mov    QWORD PTR [rax+0x20],rsi
   140020fe8:	mov    bpl,r9b
   140020feb:	mov    rsi,r8
   140020fee:	mov    rbx,rdx
   140020ff1:	mov    rdi,rcx
   140020ff4:	mov    rcx,QWORD PTR [rcx]
   140020ff7:	test   rcx,rcx
   140020ffa:	je     0x1400210f7
   140021000:	test   rdx,rdx
   140021003:	je     0x1400210f7
   140021009:	mov    r8,QWORD PTR [rdx+0x8]
   14002100d:	test   r8,r8
   140021010:	je     0x1400210f7
   140021016:	call   0x14002224c
   14002101b:	test   eax,eax
   14002101d:	je     0x1400210f7
   140021023:	cmp    BYTE PTR [rbx+0x98],0x0
   14002102a:	je     0x140021046
   14002102c:	cmp    QWORD PTR [rbx+0x58],0x0
   140021031:	jne    0x14002104d
   140021033:	mov    rax,QWORD PTR [rsi]
   140021036:	xor    r9d,r9d
   140021039:	xor    r8d,r8d
   14002103c:	mov    edx,0xa1230911
   140021041:	mov    rcx,rsi
   140021044:	call   QWORD PTR [rax]
   140021046:	cmp    QWORD PTR [rbx+0x58],0x0
   14002104b:	je     0x140021055
   14002104d:	mov    rcx,QWORD PTR [rdi]
   140021050:	call   0x140022514
   140021055:	mov    eax,0x1
   14002105a:	test   bpl,bpl
   14002105d:	je     0x1400210f9
   140021063:	mov    r8,QWORD PTR [rbx+0x8]
   140021067:	mov    rcx,QWORD PTR [rdi]
   14002106a:	call   0x140021fb8
   14002106f:	test   eax,eax
   140021071:	jne    0x1400210f9
   140021077:	mov    ecx,0x10c
   14002107c:	call   0x140026da8
   140021081:	mov    rcx,rax
   140021084:	mov    QWORD PTR [rsp+0x28],rax
   140021089:	test   rax,rax
   14002108c:	je     0x1400210de
   14002108e:	and    DWORD PTR [rax],0x0
   140021091:	mov    DWORD PTR [rax+0x4],0xe1232723
   140021098:	mov    DWORD PTR [rax+0x8],0x252
   14002109f:	lea    rdx,[rax+0xc]
   1400210a3:	mov    r8d,0x100
   1400210a9:	lea    r9,[rip+0x265d0]        # 0x140047680
   1400210b0:	sub    r9,rdx
   1400210b3:	lea    rax,[r8+0x7ffffefe]
   1400210ba:	test   rax,rax
   1400210bd:	je     0x1400210d1
   1400210bf:	mov    al,BYTE PTR [r9+rdx*1]
   1400210c3:	test   al,al
   1400210c5:	je     0x1400210d1
   1400210c7:	mov    BYTE PTR [rdx],al
   1400210c9:	inc    rdx
   1400210cc:	dec    r8
   1400210cf:	jne    0x1400210b3
   1400210d1:	test   r8,r8
   1400210d4:	jne    0x1400210d9
   1400210d6:	dec    rdx
   1400210d9:	mov    BYTE PTR [rdx],0x0
   1400210dc:	jmp    0x1400210e0
   1400210de:	xor    ecx,ecx
   1400210e0:	mov    QWORD PTR [rsp+0x40],rcx
   1400210e5:	lea    rdx,[rip+0x35324]        # 0x140056410
   1400210ec:	lea    rcx,[rsp+0x40]
   1400210f1:	call   0x140029fe8
   1400210f6:	int3   
   1400210f7:	xor    eax,eax
   1400210f9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400210fe:	mov    rbp,QWORD PTR [rsp+0x50]
   140021103:	mov    rsi,QWORD PTR [rsp+0x58]
   140021108:	add    rsp,0x30
   14002110c:	pop    rdi
   14002110d:	ret    
   14002110e:	int3   
   14002110f:	int3   
   140021110:	mov    rax,rsp
   140021113:	push   rbp
   140021114:	push   rsi
   140021115:	push   rdi
   140021116:	push   r14
   140021118:	push   r15
   14002111a:	sub    rsp,0x290
   140021121:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14002112a:	mov    QWORD PTR [rax+0x8],rbx
   14002112e:	mov    rax,QWORD PTR [rip+0x37f53]        # 0x140059088
   140021135:	xor    rax,rsp
   140021138:	mov    QWORD PTR [rsp+0x280],rax
   140021140:	mov    r15,r8
   140021143:	mov    r14,rdx
   140021146:	mov    ebp,ecx
   140021148:	xor    edx,edx
   14002114a:	lea    ecx,[rdx+0x2]
   14002114d:	call   QWORD PTR [rip+0x200b5]        # 0x140041208
   140021153:	mov    rsi,rax
   140021156:	or     rdi,0xffffffffffffffff
   14002115a:	cmp    rax,rdi
   14002115d:	jne    0x1400211e4
   140021163:	mov    ecx,0x10c
   140021168:	call   0x140026da8
   14002116d:	mov    rcx,rax
   140021170:	mov    QWORD PTR [rsp+0x30],rax
   140021175:	xor    ebx,ebx
   140021177:	test   rax,rax
   14002117a:	je     0x1400211ca
   14002117c:	mov    DWORD PTR [rax],ebx
   14002117e:	mov    DWORD PTR [rax+0x4],0xe1232723
   140021185:	mov    DWORD PTR [rax+0x8],0x260
   14002118c:	lea    rdx,[rax+0xc]
   140021190:	mov    r8d,0x100
   140021196:	lea    r9,[rip+0x26503]        # 0x1400476a0
   14002119d:	sub    r9,rdx
   1400211a0:	lea    rax,[r8+0x7ffffefe]
   1400211a7:	test   rax,rax
   1400211aa:	je     0x1400211be
   1400211ac:	mov    al,BYTE PTR [r9+rdx*1]
   1400211b0:	test   al,al
   1400211b2:	je     0x1400211be
   1400211b4:	mov    BYTE PTR [rdx],al
   1400211b6:	inc    rdx
   1400211b9:	dec    r8
   1400211bc:	jne    0x1400211a0
   1400211be:	test   r8,r8
   1400211c1:	jne    0x1400211c6
   1400211c3:	dec    rdx
   1400211c6:	mov    BYTE PTR [rdx],bl
   1400211c8:	jmp    0x1400211cd
   1400211ca:	mov    rcx,rbx
   1400211cd:	mov    QWORD PTR [rsp+0x20],rcx
   1400211d2:	lea    rdx,[rip+0x35237]        # 0x140056410
   1400211d9:	lea    rcx,[rsp+0x20]
   1400211de:	call   0x140029fe8
   1400211e3:	int3   
   1400211e4:	xor    ebx,ebx
   1400211e6:	mov    DWORD PTR [r14],ebx
   1400211e9:	mov    DWORD PTR [rsp+0x40],0x238
   1400211f1:	lea    rdx,[rsp+0x40]
   1400211f6:	mov    rcx,rax
   1400211f9:	call   QWORD PTR [rip+0x20029]        # 0x140041228
   1400211ff:	test   eax,eax
   140021201:	je     0x140021240
   140021203:	cmp    DWORD PTR [rsp+0x48],ebp
   140021207:	je     0x140021219
   140021209:	lea    rdx,[rsp+0x40]
   14002120e:	mov    rcx,rsi
   140021211:	call   QWORD PTR [rip+0x1fff9]        # 0x140041210
   140021217:	jmp    0x1400211ff
   140021219:	mov    eax,DWORD PTR [rsp+0x5c]
   14002121d:	mov    DWORD PTR [r14],eax
   140021220:	lea    rax,[rsp+0x6c]
   140021225:	inc    rdi
   140021228:	cmp    WORD PTR [rax+rdi*2],bx
   14002122c:	jne    0x140021225
   14002122e:	mov    r8d,edi
   140021231:	lea    rdx,[rsp+0x6c]
   140021236:	mov    rcx,r15
   140021239:	call   0x140006f54
   14002123e:	mov    bl,0x1
   140021240:	mov    rcx,rsi
   140021243:	call   QWORD PTR [rip+0x2013f]        # 0x140041388
   140021249:	mov    al,bl
   14002124b:	mov    rcx,QWORD PTR [rsp+0x280]
   140021253:	xor    rcx,rsp
   140021256:	call   0x1400265a0
   14002125b:	mov    rbx,QWORD PTR [rsp+0x2c0]
   140021263:	add    rsp,0x290
   14002126a:	pop    r15
   14002126c:	pop    r14
   14002126e:	pop    rdi
   14002126f:	pop    rsi
   140021270:	pop    rbp
   140021271:	ret    
   140021272:	int3   
   140021273:	int3   
   140021274:	mov    QWORD PTR [rsp+0x8],rbx
   140021279:	mov    QWORD PTR [rsp+0x10],rbp
   14002127e:	mov    QWORD PTR [rsp+0x18],rsi
   140021283:	push   rdi
   140021284:	sub    rsp,0x50
   140021288:	mov    rax,QWORD PTR [rip+0x37df9]        # 0x140059088
   14002128f:	xor    rax,rsp
   140021292:	mov    QWORD PTR [rsp+0x40],rax
   140021297:	mov    ebp,ecx
   140021299:	test   ecx,ecx
   14002129b:	jne    0x1400212a4
   14002129d:	xor    eax,eax
   14002129f:	jmp    0x14002135c
   1400212a4:	and    DWORD PTR [rsp+0x20],0x0
   1400212a9:	xor    edx,edx
   1400212ab:	lea    rcx,[rsp+0x24]
   1400212b0:	lea    r8d,[rdx+0x18]
   1400212b4:	call   0x14002bb90
   1400212b9:	xor    edx,edx
   1400212bb:	lea    ecx,[rdx+0x4]
   1400212be:	call   QWORD PTR [rip+0x1ff44]        # 0x140041208
   1400212c4:	mov    rsi,rax
   1400212c7:	cmp    rax,0xffffffffffffffff
   1400212cb:	je     0x14002129d
   1400212cd:	lea    rdx,[rsp+0x20]
   1400212d2:	mov    rcx,rax
   1400212d5:	mov    DWORD PTR [rsp+0x20],0x1c
   1400212dd:	xor    ebx,ebx
   1400212df:	xor    dil,dil
   1400212e2:	call   QWORD PTR [rip+0x1ff60]        # 0x140041248
   1400212e8:	test   eax,eax
   1400212ea:	je     0x14002134a
   1400212ec:	cmp    DWORD PTR [rsp+0x2c],ebp
   1400212f0:	je     0x140021302
   1400212f2:	lea    rdx,[rsp+0x20]
   1400212f7:	mov    rcx,rsi
   1400212fa:	call   QWORD PTR [rip+0x1ff30]        # 0x140041230
   140021300:	jmp    0x1400212e8
   140021302:	mov    r8d,DWORD PTR [rsp+0x28]
   140021307:	xor    edx,edx
   140021309:	mov    ecx,0x1fffff
   14002130e:	call   QWORD PTR [rip+0x1ff0c]        # 0x140041220
   140021314:	mov    rbx,rax
   140021317:	test   rax,rax
   14002131a:	je     0x14002134a
   14002131c:	mov    rcx,rax
   14002131f:	call   QWORD PTR [rip+0x1ff3b]        # 0x140041260
   140021325:	mov    ecx,0x1
   14002132a:	movzx  edi,dil
   14002132e:	cmp    eax,ecx
   140021330:	cmove  edi,ecx
   140021333:	mov    rcx,rbx
   140021336:	call   QWORD PTR [rip+0x1ff1c]        # 0x140041258
   14002133c:	test   dil,dil
   14002133f:	jne    0x14002134a
   140021341:	mov    rcx,rbx
   140021344:	call   QWORD PTR [rip+0x2003e]        # 0x140041388
   14002134a:	mov    rcx,rsi
   14002134d:	call   QWORD PTR [rip+0x20035]        # 0x140041388
   140021353:	neg    dil
   140021356:	sbb    rax,rax
   140021359:	and    rax,rbx
   14002135c:	mov    rcx,QWORD PTR [rsp+0x40]
   140021361:	xor    rcx,rsp
   140021364:	call   0x1400265a0
   140021369:	mov    rbx,QWORD PTR [rsp+0x60]
   14002136e:	mov    rbp,QWORD PTR [rsp+0x68]
   140021373:	mov    rsi,QWORD PTR [rsp+0x70]
   140021378:	add    rsp,0x50
   14002137c:	pop    rdi
   14002137d:	ret    
   14002137e:	int3   
   14002137f:	int3   
   140021380:	rex push rbx
   140021382:	sub    rsp,0x30
   140021386:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002138f:	xor    ebx,ebx
   140021391:	mov    DWORD PTR [rsp+0x48],ebx
   140021395:	lea    rdx,[rsp+0x48]
   14002139a:	call   QWORD PTR [rip+0x1fe98]        # 0x140041238
   1400213a0:	test   eax,eax
   1400213a2:	jne    0x140021423
   1400213a4:	mov    ecx,0x10c
   1400213a9:	call   0x140026da8
   1400213ae:	mov    rcx,rax
   1400213b1:	mov    QWORD PTR [rsp+0x58],rax
   1400213b6:	test   rax,rax
   1400213b9:	je     0x140021409
   1400213bb:	mov    DWORD PTR [rax],ebx
   1400213bd:	mov    DWORD PTR [rax+0x4],0xe1232723
   1400213c4:	mov    DWORD PTR [rax+0x8],0x2e5
   1400213cb:	lea    rdx,[rax+0xc]
   1400213cf:	mov    r8d,0x100
   1400213d5:	lea    r9,[rip+0x26324]        # 0x140047700
   1400213dc:	sub    r9,rdx
   1400213df:	lea    rax,[r8+0x7ffffefe]
   1400213e6:	test   rax,rax
   1400213e9:	je     0x1400213fd
   1400213eb:	mov    al,BYTE PTR [r9+rdx*1]
   1400213ef:	test   al,al
   1400213f1:	je     0x1400213fd
   1400213f3:	mov    BYTE PTR [rdx],al
   1400213f5:	inc    rdx
   1400213f8:	dec    r8
   1400213fb:	jne    0x1400213df
   1400213fd:	test   r8,r8
   140021400:	jne    0x140021405
   140021402:	dec    rdx
   140021405:	mov    BYTE PTR [rdx],bl
   140021407:	jmp    0x14002140c
   140021409:	mov    rcx,rbx
   14002140c:	mov    QWORD PTR [rsp+0x50],rcx
   140021411:	lea    rdx,[rip+0x34ff8]        # 0x140056410
   140021418:	lea    rcx,[rsp+0x50]
   14002141d:	call   0x140029fe8
   140021422:	int3   
   140021423:	cmp    DWORD PTR [rsp+0x48],0x103
   14002142b:	setne  al
   14002142e:	add    rsp,0x30
   140021432:	pop    rbx
   140021433:	ret    
   140021434:	mov    QWORD PTR [rsp+0x8],rbx
   140021439:	mov    QWORD PTR [rsp+0x18],rbp
   14002143e:	mov    QWORD PTR [rsp+0x20],rsi
   140021443:	push   rdi
   140021444:	push   r12
   140021446:	push   r14
   140021448:	sub    rsp,0x40
   14002144c:	mov    rbx,r9
   14002144f:	mov    rdi,r8
   140021452:	mov    ebp,edx
   140021454:	mov    r14,rcx
   140021457:	call   QWORD PTR [rip+0x1ff03]        # 0x140041360
   14002145d:	and    DWORD PTR [rsp+0x68],0x0
   140021462:	mov    esi,eax
   140021464:	mov    r12d,0x4
   14002146a:	mov    rcx,QWORD PTR [r14+0x38]
   14002146e:	mov    DWORD PTR [rsp+0x30],ebp
   140021472:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   140021476:	je     0x14002149b
   140021478:	lea    rax,[rsp+0x68]
   14002147d:	lea    r8,[rsp+0x30]
   140021482:	mov    r9d,r12d
   140021485:	mov    edx,0x8000a418
   14002148a:	mov    DWORD PTR [rsp+0x28],r12d
   14002148f:	mov    QWORD PTR [rsp+0x20],rax
   140021494:	call   0x14000fc30
   140021499:	jmp    0x14002149d
   14002149b:	xor    eax,eax
   14002149d:	cmp    eax,0x1
   1400214a0:	jne    0x1400214a9
   1400214a2:	cmp    DWORD PTR [rsp+0x68],0x0
   1400214a7:	je     0x1400214de
   1400214a9:	mov    ecx,0x64
   1400214ae:	call   QWORD PTR [rip+0x1fe8c]        # 0x140041340
   1400214b4:	call   QWORD PTR [rip+0x1fea6]        # 0x140041360
   1400214ba:	sub    eax,esi
   1400214bc:	cmp    eax,0x2710
   1400214c1:	jbe    0x14002146a
   1400214c3:	xor    al,al
   1400214c5:	mov    rbx,QWORD PTR [rsp+0x60]
   1400214ca:	mov    rbp,QWORD PTR [rsp+0x70]
   1400214cf:	mov    rsi,QWORD PTR [rsp+0x78]
   1400214d4:	add    rsp,0x40
   1400214d8:	pop    r14
   1400214da:	pop    r12
   1400214dc:	pop    rdi
   1400214dd:	ret    
   1400214de:	mov    rcx,rdi
   1400214e1:	call   0x140021380
   1400214e6:	test   al,al
   1400214e8:	jne    0x1400214c3
   1400214ea:	test   rbx,rbx
   1400214ed:	je     0x1400214c3
   1400214ef:	jmp    0x140021512
   1400214f1:	cmp    DWORD PTR [rsp+0x30],0x0
   1400214f6:	je     0x140021537
   1400214f8:	mov    ecx,0x64
   1400214fd:	call   QWORD PTR [rip+0x1fe3d]        # 0x140041340
   140021503:	call   QWORD PTR [rip+0x1fe57]        # 0x140041360
   140021509:	sub    eax,esi
   14002150b:	cmp    eax,0x4e20
   140021510:	ja     0x1400214c3
   140021512:	lea    rax,[rsp+0x38]
   140021517:	lea    r8,[rsp+0x30]
   14002151c:	lea    rdx,[rbx+0x24]
   140021520:	mov    r9,r12
   140021523:	mov    rcx,rdi
   140021526:	mov    QWORD PTR [rsp+0x20],rax
   14002152b:	call   QWORD PTR [rip+0x1fd0f]        # 0x140041240
   140021531:	test   eax,eax
   140021533:	jne    0x1400214f1
   140021535:	jmp    0x1400214c3
   140021537:	mov    al,0x1
   140021539:	jmp    0x1400214c5
   14002153b:	int3   
   14002153c:	rex push rdi
   14002153e:	sub    rsp,0x40
   140021542:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002154b:	mov    QWORD PTR [rsp+0x60],rbx
   140021550:	lea    rcx,[rip+0x38dd1]        # 0x14005a328
   140021557:	mov    rax,QWORD PTR [rip+0x38dca]        # 0x14005a328
   14002155e:	call   QWORD PTR [rax+0x18]
   140021561:	add    rax,0x18
   140021565:	mov    QWORD PTR [rsp+0x50],rax
   14002156a:	lea    r8,[rip+0x261af]        # 0x140047720
   140021571:	lea    rdx,[rip+0x26148]        # 0x1400476c0
   140021578:	lea    rcx,[rsp+0x50]
   14002157d:	call   0x14001b804
   140021582:	lea    rax,[rsp+0x58]
   140021587:	mov    QWORD PTR [rsp+0x20],rax
   14002158c:	mov    edi,0x20019
   140021591:	mov    r9d,edi
   140021594:	xor    r8d,r8d
   140021597:	mov    rbx,QWORD PTR [rsp+0x50]
   14002159c:	mov    rdx,rbx
   14002159f:	mov    rcx,0xffffffff80000000
   1400215a6:	call   QWORD PTR [rip+0x1fa74]        # 0x140041020
   1400215ac:	test   eax,eax
   1400215ae:	jne    0x14002160c
   1400215b0:	mov    rcx,QWORD PTR [rsp+0x58]
   1400215b5:	call   QWORD PTR [rip+0x1fa7d]        # 0x140041038
   1400215bb:	lea    r8,[rip+0x26116]        # 0x1400476d8
   1400215c2:	lea    rdx,[rip+0x260f7]        # 0x1400476c0
   1400215c9:	lea    rcx,[rsp+0x50]
   1400215ce:	call   0x14001b804
   1400215d3:	lea    rax,[rsp+0x58]
   1400215d8:	mov    QWORD PTR [rsp+0x20],rax
   1400215dd:	mov    r9d,edi
   1400215e0:	xor    r8d,r8d
   1400215e3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400215e8:	mov    rdx,rbx
   1400215eb:	mov    rcx,0xffffffff80000000
   1400215f2:	call   QWORD PTR [rip+0x1fa28]        # 0x140041020
   1400215f8:	test   eax,eax
   1400215fa:	jne    0x14002160c
   1400215fc:	mov    rcx,QWORD PTR [rsp+0x58]
   140021601:	call   QWORD PTR [rip+0x1fa31]        # 0x140041038
   140021607:	mov    dil,0x1
   14002160a:	jmp    0x14002160f
   14002160c:	xor    dil,dil
   14002160f:	lea    rdx,[rbx-0x18]
   140021613:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140021618:	jg     0x140021624
   14002161a:	mov    rcx,QWORD PTR [rdx]
   14002161d:	mov    r8,QWORD PTR [rcx]
   140021620:	call   QWORD PTR [r8+0x8]
   140021624:	mov    al,dil
   140021627:	mov    rbx,QWORD PTR [rsp+0x60]
   14002162c:	add    rsp,0x40
   140021630:	pop    rdi
   140021631:	ret    
   140021632:	int3   
   140021633:	int3   
   140021634:	mov    QWORD PTR [rsp+0x8],rbx
   140021639:	mov    QWORD PTR [rsp+0x10],rsi
   14002163e:	push   rdi
   14002163f:	sub    rsp,0x240
   140021646:	mov    rax,QWORD PTR [rip+0x37a3b]        # 0x140059088
   14002164d:	xor    rax,rsp
   140021650:	mov    QWORD PTR [rsp+0x230],rax
   140021658:	lea    rdx,[rsp+0x20]
   14002165d:	mov    r8d,0x104
   140021663:	xor    ecx,ecx
   140021665:	mov    esi,0x1
   14002166a:	call   QWORD PTR [rip+0x1fcc8]        # 0x140041338
   140021670:	lea    rdx,[rip+0x24bd1]        # 0x140046248
   140021677:	lea    rcx,[rsp+0x20]
   14002167c:	lea    rdi,[rsp+0x20]
   140021681:	call   0x140027984
   140021686:	xor    ebx,ebx
   140021688:	jmp    0x1400216ac
   14002168a:	lea    rdx,[rip+0x24bb7]        # 0x140046248
   140021691:	mov    rcx,rdi
   140021694:	call   0x140027984
   140021699:	lea    rdx,[rip+0x24ba8]        # 0x140046248
   1400216a0:	lea    rdi,[rax+0x2]
   1400216a4:	mov    rcx,rdi
   1400216a7:	call   0x140027984
   1400216ac:	test   rax,rax
   1400216af:	jne    0x14002168a
   1400216b1:	lea    r8,[rip+0x25d38]        # 0x1400473f0
   1400216b8:	lea    rcx,[rsp+0x20]
   1400216bd:	mov    WORD PTR [rdi],bx
   1400216c0:	call   0x14001c524
   1400216c5:	test   eax,eax
   1400216c7:	jns    0x1400216cd
   1400216c9:	xor    eax,eax
   1400216cb:	jmp    0x140021709
   1400216cd:	lea    rcx,[rsp+0x20]
   1400216d2:	call   QWORD PTR [rip+0x1fe90]        # 0x140041568
   1400216d8:	mov    rdi,rax
   1400216db:	test   rax,rax
   1400216de:	je     0x140021707
   1400216e0:	lea    rdx,[rip+0x26061]        # 0x140047748
   1400216e7:	mov    rcx,rax
   1400216ea:	call   QWORD PTR [rip+0x1fbf8]        # 0x1400412e8
   1400216f0:	test   rax,rax
   1400216f3:	je     0x1400216fe
   1400216f5:	call   rax
   1400216f7:	test   eax,eax
   1400216f9:	cmovs  esi,ebx
   1400216fc:	mov    ebx,esi
   1400216fe:	mov    rcx,rdi
   140021701:	call   QWORD PTR [rip+0x1fe49]        # 0x140041550
   140021707:	mov    eax,ebx
   140021709:	mov    rcx,QWORD PTR [rsp+0x230]
   140021711:	xor    rcx,rsp
   140021714:	call   0x1400265a0
   140021719:	lea    r11,[rsp+0x240]
   140021721:	mov    rbx,QWORD PTR [r11+0x10]
   140021725:	mov    rsi,QWORD PTR [r11+0x18]
   140021729:	mov    rsp,r11
   14002172c:	pop    rdi
   14002172d:	ret    
   14002172e:	int3   
   14002172f:	int3   
   140021730:	mov    rax,rsp
   140021733:	mov    QWORD PTR [rax+0x18],r8
   140021737:	push   rdi
   140021738:	sub    rsp,0x80
   14002173f:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140021747:	mov    QWORD PTR [rax+0x8],rbx
   14002174b:	mov    QWORD PTR [rax+0x10],rsi
   14002174f:	mov    rsi,rdx
   140021752:	mov    rdi,rcx
   140021755:	xor    ebx,ebx
   140021757:	test   rcx,rcx
   14002175a:	jne    0x140021766
   14002175c:	mov    eax,0x80070057
   140021761:	jmp    0x140021831
   140021766:	mov    QWORD PTR [rsp+0x30],rbx
   14002176b:	mov    DWORD PTR [rsp+0x28],ebx
   14002176f:	mov    DWORD PTR [rsp+0x20],0x3
   140021777:	xor    r9d,r9d
   14002177a:	mov    edx,0x80000000
   14002177f:	lea    r8d,[r9+0x1]
   140021783:	lea    rcx,[rip+0x25d3e]        # 0x1400474c8
   14002178a:	call   QWORD PTR [rip+0x1fac0]        # 0x140041250
   140021790:	cmp    rax,0xffffffffffffffff
   140021794:	je     0x1400217a9
   140021796:	mov    rcx,rax
   140021799:	call   QWORD PTR [rip+0x1fbe9]        # 0x140041388
   14002179f:	mov    eax,0xe1230585
   1400217a4:	jmp    0x140021831
   1400217a9:	mov    rax,QWORD PTR gs:0x30
   1400217b2:	add    rax,0x1750
   1400217b8:	je     0x1400217ca
   1400217ba:	cmp    DWORD PTR [rax+0x4],0xabcd0001
   1400217c1:	jne    0x1400217ca
   1400217c3:	mov    eax,0xe1230586
   1400217c8:	jmp    0x140021831
   1400217ca:	lea    rcx,[rsp+0x50]
   1400217cf:	call   0x140012950
   1400217d4:	mov    eax,DWORD PTR [rsp+0x6c]
   1400217d8:	cmp    eax,0x1
   1400217db:	jbe    0x14002181c
   1400217dd:	cmp    eax,0x4
   1400217e0:	je     0x14002181c
   1400217e2:	cmp    eax,0x7
   1400217e5:	jae    0x14002181c
   1400217e7:	mov    ecx,0x90
   1400217ec:	call   0x140026da8
   1400217f1:	mov    QWORD PTR [rsp+0xa0],rax
   1400217f9:	test   rax,rax
   1400217fc:	je     0x14002180c
   1400217fe:	mov    rdx,rsi
   140021801:	mov    rcx,rax
   140021804:	call   0x14001d444
   140021809:	mov    rbx,rax
   14002180c:	mov    QWORD PTR [rdi],rbx
   14002180f:	mov    rax,QWORD PTR [rbx]
   140021812:	mov    rcx,rbx
   140021815:	call   QWORD PTR [rax+0x8]
   140021818:	xor    eax,eax
   14002181a:	jmp    0x140021831
   14002181c:	mov    eax,0xe1230584
   140021821:	jmp    0x140021831
   140021823:	mov    eax,DWORD PTR [rsp+0xa0]
   14002182a:	jmp    0x140021831
   14002182c:	mov    eax,0x80004005
   140021831:	lea    r11,[rsp+0x80]
   140021839:	mov    rbx,QWORD PTR [r11+0x10]
   14002183d:	mov    rsi,QWORD PTR [r11+0x18]
   140021841:	mov    rsp,r11
   140021844:	pop    rdi
   140021845:	ret    
   140021846:	int3   
   140021847:	int3   
   140021848:	mov    QWORD PTR [rsp+0x18],rbx
   14002184d:	push   rbp
   14002184e:	push   rsi
   14002184f:	push   rdi
   140021850:	sub    rsp,0x470
   140021857:	mov    rax,QWORD PTR [rip+0x3782a]        # 0x140059088
   14002185e:	xor    rax,rsp
   140021861:	mov    QWORD PTR [rsp+0x460],rax
   140021869:	xor    ebx,ebx
   14002186b:	mov    rbp,rdx
   14002186e:	mov    edi,ecx
   140021870:	test   rdx,rdx
   140021873:	jne    0x14002187c
   140021875:	xor    eax,eax
   140021877:	jmp    0x1400218fd
   14002187c:	test   ecx,ecx
   14002187e:	je     0x140021875
   140021880:	lea    rcx,[rsp+0x24]
   140021885:	xor    edx,edx
   140021887:	mov    r8d,0x434
   14002188d:	mov    DWORD PTR [rsp+0x20],ebx
   140021891:	call   0x14002bb90
   140021896:	mov    edx,edi
   140021898:	mov    ecx,0x8
   14002189d:	call   QWORD PTR [rip+0x1f965]        # 0x140041208
   1400218a3:	mov    rsi,rax
   1400218a6:	cmp    rax,0xffffffffffffffff
   1400218aa:	je     0x140021875
   1400218ac:	lea    rdx,[rsp+0x20]
   1400218b1:	mov    rcx,rax
   1400218b4:	mov    DWORD PTR [rsp+0x20],0x438
   1400218bc:	call   QWORD PTR [rip+0x1f956]        # 0x140041218
   1400218c2:	test   eax,eax
   1400218c4:	je     0x1400218f2
   1400218c6:	cmp    DWORD PTR [rsp+0x28],edi
   1400218ca:	jne    0x1400218dd
   1400218cc:	lea    rcx,[rsp+0x50]
   1400218d1:	mov    rdx,rbp
   1400218d4:	call   0x140026fd8
   1400218d9:	test   eax,eax
   1400218db:	je     0x1400218ed
   1400218dd:	lea    rdx,[rsp+0x20]
   1400218e2:	mov    rcx,rsi
   1400218e5:	call   QWORD PTR [rip+0x1f915]        # 0x140041200
   1400218eb:	jmp    0x1400218c2
   1400218ed:	mov    ebx,0x1
   1400218f2:	mov    rcx,rsi
   1400218f5:	call   QWORD PTR [rip+0x1fa8d]        # 0x140041388
   1400218fb:	mov    eax,ebx
   1400218fd:	mov    rcx,QWORD PTR [rsp+0x460]
   140021905:	xor    rcx,rsp
   140021908:	call   0x1400265a0
   14002190d:	mov    rbx,QWORD PTR [rsp+0x4a0]
   140021915:	add    rsp,0x470
   14002191c:	pop    rdi
   14002191d:	pop    rsi
   14002191e:	pop    rbp
   14002191f:	ret    
   140021920:	mov    rax,rsp
   140021923:	mov    QWORD PTR [rax+0x8],rcx
   140021927:	push   rsi
   140021928:	push   rdi
   140021929:	push   r14
   14002192b:	sub    rsp,0x30
   14002192f:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140021937:	mov    QWORD PTR [rax+0x10],rbx
   14002193b:	mov    QWORD PTR [rax+0x18],rbp
   14002193f:	mov    rbx,rcx
   140021942:	lea    r14,[rip+0x25cdf]        # 0x140047628
   140021949:	lea    rcx,[rip+0x389d8]        # 0x14005a328
   140021950:	mov    rax,QWORD PTR [rip+0x389d1]        # 0x14005a328
   140021957:	call   QWORD PTR [rax+0x18]
   14002195a:	add    rax,0x18
   14002195e:	mov    QWORD PTR [rbx],rax
   140021961:	test   r14,0xffffffffffff0000
   140021968:	jne    0x14002198a
   14002196a:	movzx  edi,r14w
   14002196e:	mov    ecx,edi
   140021970:	call   0x1400040b8
   140021975:	test   rax,rax
   140021978:	je     0x1400219ea
   14002197a:	mov    r8d,edi
   14002197d:	mov    rdx,rax
   140021980:	mov    rcx,rbx
   140021983:	call   0x14000dbbc
   140021988:	jmp    0x1400219ea
   14002198a:	mov    rax,QWORD PTR [rbx]
   14002198d:	mov    esi,DWORD PTR [rax-0x10]
   140021990:	mov    rdi,r14
   140021993:	sub    rdi,rax
   140021996:	mov    ecx,0x1
   14002199b:	sub    ecx,DWORD PTR [rax-0x8]
   14002199e:	mov    eax,DWORD PTR [rax-0xc]
   1400219a1:	mov    ebp,0x3c
   1400219a6:	sub    eax,ebp
   1400219a8:	or     eax,ecx
   1400219aa:	jge    0x1400219b6
   1400219ac:	mov    edx,ebp
   1400219ae:	mov    rcx,rbx
   1400219b1:	call   0x14000dce4
   1400219b6:	mov    rcx,QWORD PTR [rbx]
   1400219b9:	movsxd rdx,DWORD PTR [rcx-0xc]
   1400219bd:	mov    r9,rbp
   1400219c0:	cmp    rdi,rsi
   1400219c3:	ja     0x1400219d0
   1400219c5:	lea    r8,[rcx+rdi*1]
   1400219c9:	call   0x140026edc
   1400219ce:	jmp    0x1400219d8
   1400219d0:	mov    r8,r14
   1400219d3:	call   0x140027788
   1400219d8:	mov    rax,QWORD PTR [rbx]
   1400219db:	cmp    DWORD PTR [rax-0xc],ebp
   1400219de:	jl     0x1400219ef
   1400219e0:	mov    DWORD PTR [rax-0x10],ebp
   1400219e3:	mov    rax,QWORD PTR [rbx]
   1400219e6:	mov    BYTE PTR [rax+0x3c],0x0
   1400219ea:	mov    rax,rbx
   1400219ed:	jmp    0x1400219fa
   1400219ef:	mov    ecx,0x80070057
   1400219f4:	call   0x14000400c
   1400219f9:	nop
   1400219fa:	mov    rbx,QWORD PTR [rsp+0x58]
   1400219ff:	mov    rbp,QWORD PTR [rsp+0x60]
   140021a04:	add    rsp,0x30
   140021a08:	pop    r14
   140021a0a:	pop    rdi
   140021a0b:	pop    rsi
   140021a0c:	ret    
   140021a0d:	int3   
   140021a0e:	int3   
   140021a0f:	int3   
   140021a10:	rex push rbx
   140021a12:	sub    rsp,0x20
   140021a16:	and    QWORD PTR [rcx+0x328],0x0
   140021a1e:	mov    rbx,rcx
   140021a21:	mov    DWORD PTR [rcx+0x320],0x1
   140021a2b:	mov    DWORD PTR [rcx+0x324],0x1
   140021a35:	call   QWORD PTR [rcx+0x310]
   140021a3b:	mov    QWORD PTR [rbx+0x328],rax
   140021a42:	test   rax,rax
   140021a45:	jne    0x140021a4b
   140021a47:	xor    eax,eax
   140021a49:	jmp    0x140021ab5
   140021a4b:	lea    rdx,[rbx+0x208]
   140021a52:	mov    rcx,rax
   140021a55:	call   QWORD PTR [rbx+0x318]
   140021a5b:	test   rax,rax
   140021a5e:	je     0x140021a47
   140021a60:	call   rax
   140021a62:	mov    r8,rax
   140021a65:	test   rax,rax
   140021a68:	je     0x140021a47
   140021a6a:	lea    rdx,[rbx+0x330]
   140021a71:	cmp    rdx,rax
   140021a74:	ja     0x140021a82
   140021a76:	lea    rax,[rdx+0xa8]
   140021a7d:	cmp    rax,r8
   140021a80:	jae    0x140021a47
   140021a82:	cmp    r8,rdx
   140021a85:	ja     0x140021a93
   140021a87:	lea    rax,[r8+0xa8]
   140021a8e:	cmp    rax,rdx
   140021a91:	jae    0x140021a47
   140021a93:	sub    r8,rdx
   140021a96:	mov    r9d,0xa8
   140021a9c:	mov    cl,BYTE PTR [r8+rdx*1]
   140021aa0:	mov    BYTE PTR [rdx],cl
   140021aa2:	inc    rdx
   140021aa5:	dec    r9
   140021aa8:	jne    0x140021a9c
   140021aaa:	and    DWORD PTR [rbx+0x320],r9d
   140021ab1:	lea    eax,[r9+0x1]
   140021ab5:	add    rsp,0x20
   140021ab9:	pop    rbx
   140021aba:	ret    
   140021abb:	int3   
   140021abc:	rex push rbx
   140021abe:	sub    rsp,0x20
   140021ac2:	mov    rbx,rcx
   140021ac5:	mov    DWORD PTR [rcx+0x10],0x1
   140021acc:	mov    DWORD PTR [rcx+0x14],0x1
   140021ad3:	mov    rcx,QWORD PTR [rcx]
   140021ad6:	call   QWORD PTR [rbx+0x8]
   140021ad9:	xor    edx,edx
   140021adb:	cmp    eax,0x1
   140021ade:	mov    eax,0x1
   140021ae3:	setne  dl
   140021ae6:	mov    DWORD PTR [rbx+0x10],edx
   140021ae9:	add    rsp,0x20
   140021aed:	pop    rbx
   140021aee:	ret    
   140021aef:	int3   
   140021af0:	rex push rbx
   140021af2:	sub    rsp,0x20
   140021af6:	mov    rbx,rcx
   140021af9:	mov    DWORD PTR [rcx+0x3c8],0x1
   140021b03:	mov    DWORD PTR [rcx+0x3cc],0x1
   140021b0d:	call   QWORD PTR [rcx+0x3b8]
   140021b13:	test   rax,rax
   140021b16:	jne    0x140021b1c
   140021b18:	xor    eax,eax
   140021b1a:	jmp    0x140021b46
   140021b1c:	lea    rdx,[rbx+0x208]
   140021b23:	mov    rcx,rax
   140021b26:	call   QWORD PTR [rbx+0x3c0]
   140021b2c:	test   rax,rax
   140021b2f:	je     0x140021b18
   140021b31:	lea    rcx,[rbx+0x310]
   140021b38:	call   rax
   140021b3a:	and    DWORD PTR [rbx+0x3c8],0x0
   140021b41:	mov    eax,0x1
   140021b46:	add    rsp,0x20
   140021b4a:	pop    rbx
   140021b4b:	ret    
   140021b4c:	rex push rbx
   140021b4e:	sub    rsp,0x20
   140021b52:	mov    rbx,rcx
   140021b55:	mov    DWORD PTR [rcx+0x1c0],0x1
   140021b5f:	mov    DWORD PTR [rcx+0x1c4],0x1
   140021b69:	mov    rcx,QWORD PTR [rcx]
   140021b6c:	test   rcx,rcx
   140021b6f:	jne    0x140021b75
   140021b71:	xor    eax,eax
   140021b73:	jmp    0x140021bd9
   140021b75:	lea    rdx,[rbx+0x8]
   140021b79:	call   QWORD PTR [rbx+0x110]
   140021b7f:	test   rax,rax
   140021b82:	je     0x140021b71
   140021b84:	call   rax
   140021b86:	mov    r8,rax
   140021b89:	test   rax,rax
   140021b8c:	je     0x140021b71
   140021b8e:	lea    rdx,[rbx+0x118]
   140021b95:	cmp    rdx,rax
   140021b98:	ja     0x140021ba6
   140021b9a:	lea    rax,[rdx+0xa8]
   140021ba1:	cmp    rax,r8
   140021ba4:	jae    0x140021b71
   140021ba6:	cmp    r8,rdx
   140021ba9:	ja     0x140021bb7
   140021bab:	lea    rax,[r8+0xa8]
   140021bb2:	cmp    rax,rdx
   140021bb5:	jae    0x140021b71
   140021bb7:	sub    r8,rdx
   140021bba:	mov    r9d,0xa8
   140021bc0:	mov    cl,BYTE PTR [r8+rdx*1]
   140021bc4:	mov    BYTE PTR [rdx],cl
   140021bc6:	inc    rdx
   140021bc9:	dec    r9
   140021bcc:	jne    0x140021bc0
   140021bce:	and    DWORD PTR [rbx+0x1c0],r9d
   140021bd5:	lea    eax,[r9+0x1]
   140021bd9:	add    rsp,0x20
   140021bdd:	pop    rbx
   140021bde:	ret    
   140021bdf:	int3   
   140021be0:	rex push rbx
   140021be2:	sub    rsp,0x20
   140021be6:	mov    rbx,rcx
   140021be9:	mov    DWORD PTR [rcx+0x320],0x1
   140021bf3:	mov    DWORD PTR [rcx+0x324],0x1
   140021bfd:	call   QWORD PTR [rcx+0x310]
   140021c03:	test   rax,rax
   140021c06:	jne    0x140021c0c
   140021c08:	xor    eax,eax
   140021c0a:	jmp    0x140021c2f
   140021c0c:	lea    rdx,[rbx+0x208]
   140021c13:	mov    rcx,rax
   140021c16:	call   QWORD PTR [rbx+0x318]
   140021c1c:	test   rax,rax
   140021c1f:	je     0x140021c08
   140021c21:	call   rax
   140021c23:	and    DWORD PTR [rbx+0x320],0x0
   140021c2a:	mov    eax,0x1
   140021c2f:	add    rsp,0x20
   140021c33:	pop    rbx
   140021c34:	ret    
   140021c35:	int3   
   140021c36:	int3   
   140021c37:	int3   
   140021c38:	rex push rbx
   140021c3a:	sub    rsp,0x20
   140021c3e:	mov    rbx,rcx
   140021c41:	mov    DWORD PTR [rcx+0x320],0x1
   140021c4b:	mov    DWORD PTR [rcx+0x324],0x1
   140021c55:	call   QWORD PTR [rcx+0x310]
   140021c5b:	test   rax,rax
   140021c5e:	jne    0x140021c64
   140021c60:	xor    eax,eax
   140021c62:	jmp    0x140021c86
   140021c64:	lea    rdx,[rbx+0x208]
   140021c6b:	mov    rcx,rax
   140021c6e:	call   QWORD PTR [rbx+0x318]
   140021c74:	test   rax,rax
   140021c77:	je     0x140021c60
   140021c79:	call   rax
   140021c7b:	mov    DWORD PTR [rbx+0x320],eax
   140021c81:	mov    eax,0x1
   140021c86:	add    rsp,0x20
   140021c8a:	pop    rbx
   140021c8b:	ret    
   140021c8c:	mov    QWORD PTR [rsp+0x8],rbx
   140021c91:	mov    QWORD PTR [rsp+0x10],rsi
   140021c96:	mov    QWORD PTR [rsp+0x18],rdi
   140021c9b:	push   r14
   140021c9d:	sub    rsp,0x20
   140021ca1:	mov    r14d,0x1
   140021ca7:	mov    rbx,rcx
   140021caa:	mov    DWORD PTR [rcx+0x4a4],r14d
   140021cb1:	mov    DWORD PTR [rcx+0x4a8],r14d
   140021cb8:	call   QWORD PTR [rcx+0x490]
   140021cbe:	test   rax,rax
   140021cc1:	jne    0x140021cca
   140021cc3:	mov    DWORD PTR [rbx+0x4a0],r14d
   140021cca:	lea    rcx,[rbx+0x208]
   140021cd1:	xor    r8d,r8d
   140021cd4:	xor    edx,edx
   140021cd6:	call   QWORD PTR [rbx+0x498]
   140021cdc:	lea    rdx,[rbx+0x388]
   140021ce3:	lea    rcx,[rbx+0x288]
   140021cea:	mov    r8d,0x40
   140021cf0:	mov    esi,eax
   140021cf2:	call   QWORD PTR [rbx+0x498]
   140021cf8:	lea    rdx,[rbx+0x408]
   140021cff:	lea    rcx,[rbx+0x308]
   140021d06:	mov    r8d,0x40
   140021d0c:	mov    edi,eax
   140021d0e:	call   QWORD PTR [rbx+0x498]
   140021d14:	cmp    DWORD PTR [rbx+0x4a0],0x0
   140021d1b:	jne    0x140021d25
   140021d1d:	test   esi,esi
   140021d1f:	je     0x140021d2c
   140021d21:	test   edi,edi
   140021d23:	je     0x140021d2c
   140021d25:	and    DWORD PTR [rbx+0x4a4],0x0
   140021d2c:	test   eax,eax
   140021d2e:	je     0x140021d37
   140021d30:	mov    DWORD PTR [rbx+0x488],r14d
   140021d37:	mov    rbx,QWORD PTR [rsp+0x30]
   140021d3c:	mov    rsi,QWORD PTR [rsp+0x38]
   140021d41:	mov    rdi,QWORD PTR [rsp+0x40]
   140021d46:	mov    eax,r14d
   140021d49:	add    rsp,0x20
   140021d4d:	pop    r14
   140021d4f:	ret    
   140021d50:	mov    QWORD PTR [rsp+0x10],rbx
   140021d55:	push   rbp
   140021d56:	push   rsi
   140021d57:	push   rdi
   140021d58:	lea    rbp,[rsp-0x310]
   140021d60:	sub    rsp,0x410
   140021d67:	mov    rax,QWORD PTR [rip+0x3731a]        # 0x140059088
   140021d6e:	xor    rax,rsp
   140021d71:	mov    QWORD PTR [rbp+0x300],rax
   140021d78:	mov    rdi,r8
   140021d7b:	mov    rbx,rdx
   140021d7e:	mov    rsi,rcx
   140021d81:	xor    edx,edx
   140021d83:	mov    r8d,0xa8
   140021d89:	mov    rcx,rdi
   140021d8c:	call   0x14002bb90
   140021d91:	lea    rcx,[rsp+0x20]
   140021d96:	xor    edx,edx
   140021d98:	mov    r8d,0x3d8
   140021d9e:	call   0x14002bb90
   140021da3:	lea    rcx,[rsp+0x20]
   140021da8:	mov    r8,rbx
   140021dab:	mov    edx,0x208
   140021db0:	call   0x1400108b8
   140021db5:	test   eax,eax
   140021db7:	js     0x140021f91
   140021dbd:	lea    r8,[rip+0x256f4]        # 0x1400474b8
   140021dc4:	lea    rax,[rbp+0x128]
   140021dcb:	xor    r9d,r9d
   140021dce:	mov    edx,0x104
   140021dd3:	lea    rcx,[rbp+0x128]
   140021dda:	sub    r8,rax
   140021ddd:	lea    rax,[rdx+0x7ffffefa]
   140021de4:	test   rax,rax
   140021de7:	je     0x140021dfb
   140021de9:	mov    al,BYTE PTR [r8+rcx*1]
   140021ded:	test   al,al
   140021def:	je     0x140021dfb
   140021df1:	mov    BYTE PTR [rcx],al
   140021df3:	inc    rcx
   140021df6:	dec    rdx
   140021df9:	jne    0x140021ddd
   140021dfb:	test   rdx,rdx
   140021dfe:	jne    0x140021e09
   140021e00:	dec    rcx
   140021e03:	mov    r9d,0x8007007a
   140021e09:	mov    BYTE PTR [rcx],0x0
   140021e0c:	test   r9d,r9d
   140021e0f:	js     0x140021f91
   140021e15:	and    DWORD PTR [rbp+0x244],0x0
   140021e1c:	and    QWORD PTR [rbp+0x248],0x0
   140021e24:	lea    rcx,[rip+0x25965]        # 0x140047790
   140021e2b:	mov    DWORD PTR [rbp+0x240],0x1
   140021e35:	call   QWORD PTR [rip+0x1f555]        # 0x140041390
   140021e3b:	mov    rbx,rax
   140021e3e:	test   rax,rax
   140021e41:	je     0x140021f91
   140021e47:	lea    rdx,[rip+0x25922]        # 0x140047770
   140021e4e:	mov    rcx,rax
   140021e51:	call   QWORD PTR [rip+0x1f491]        # 0x1400412e8
   140021e57:	lea    rdx,[rip+0x25922]        # 0x140047780
   140021e5e:	mov    rcx,rbx
   140021e61:	mov    QWORD PTR [rbp+0x230],rax
   140021e68:	call   QWORD PTR [rip+0x1f47a]        # 0x1400412e8
   140021e6e:	cmp    QWORD PTR [rbp+0x230],0x0
   140021e76:	mov    QWORD PTR [rbp+0x238],rax
   140021e7d:	je     0x140021f91
   140021e83:	test   rax,rax
   140021e86:	je     0x140021f91
   140021e8c:	lea    rcx,[rip+0x25931]        # 0x1400477c4
   140021e93:	call   QWORD PTR [rip+0x1f4f7]        # 0x140041390
   140021e99:	test   rax,rax
   140021e9c:	je     0x140021f91
   140021ea2:	lea    r8,[rsp+0x20]
   140021ea7:	lea    rdx,[rip+0xfffffffffffffb62]        # 0x140021a10
   140021eae:	mov    r9d,0x3d8
   140021eb4:	mov    rcx,rsi
   140021eb7:	call   0x14002293c
   140021ebc:	test   eax,eax
   140021ebe:	je     0x140021f91
   140021ec4:	cmp    DWORD PTR [rbp+0x240],0x1
   140021ecb:	je     0x140021f91
   140021ed1:	cmp    DWORD PTR [rbp+0x244],0x0
   140021ed8:	je     0x140021f91
   140021ede:	cmp    QWORD PTR [rbp+0x248],0x0
   140021ee6:	je     0x140021f91
   140021eec:	cmp    QWORD PTR [rbp+0x250],0x0
   140021ef4:	je     0x140021f91
   140021efa:	lea    rcx,[rbp+0x250]
   140021f01:	lea    rdx,[rbp+0x250]
   140021f08:	mov    rax,rcx
   140021f0b:	or     rax,rdi
   140021f0e:	and    eax,0xf
   140021f11:	jne    0x140021f7c
   140021f13:	mov    eax,0x1
   140021f18:	lea    edx,[rax+0x7f]
   140021f1b:	movaps xmm0,XMMWORD PTR [rcx]
   140021f1e:	movaps xmm1,XMMWORD PTR [rcx+0x10]
   140021f22:	movaps XMMWORD PTR [rdi],xmm0
   140021f25:	movaps xmm0,XMMWORD PTR [rcx+0x20]
   140021f29:	movaps XMMWORD PTR [rdi+0x10],xmm1
   140021f2d:	movaps xmm1,XMMWORD PTR [rcx+0x30]
   140021f31:	movaps XMMWORD PTR [rdi+0x20],xmm0
   140021f35:	movaps xmm0,XMMWORD PTR [rcx+0x40]
   140021f39:	movaps XMMWORD PTR [rdi+0x30],xmm1
   140021f3d:	movaps xmm1,XMMWORD PTR [rcx+0x50]
   140021f41:	movaps XMMWORD PTR [rdi+0x40],xmm0
   140021f45:	movaps xmm0,XMMWORD PTR [rcx+0x60]
   140021f49:	movaps XMMWORD PTR [rdi+0x50],xmm1
   140021f4d:	movaps xmm1,XMMWORD PTR [rcx+0x70]
   140021f51:	add    rcx,rdx
   140021f54:	movaps XMMWORD PTR [rdi+0x60],xmm0
   140021f58:	add    rdi,rdx
   140021f5b:	movaps XMMWORD PTR [rdi-0x10],xmm1
   140021f5f:	dec    rax
   140021f62:	jne    0x140021f1b
   140021f64:	movaps xmm0,XMMWORD PTR [rcx]
   140021f67:	movaps xmm1,XMMWORD PTR [rcx+0x10]
   140021f6b:	mov    rax,QWORD PTR [rcx+0x20]
   140021f6f:	movaps XMMWORD PTR [rdi],xmm0
   140021f72:	movaps XMMWORD PTR [rdi+0x10],xmm1
   140021f76:	mov    QWORD PTR [rdi+0x20],rax
   140021f7a:	jmp    0x140021f8a
   140021f7c:	mov    r8d,0xa8
   140021f82:	mov    rcx,rdi
   140021f85:	call   0x1400265d0
   140021f8a:	mov    eax,0x1
   140021f8f:	jmp    0x140021f93
   140021f91:	xor    eax,eax
   140021f93:	mov    rcx,QWORD PTR [rbp+0x300]
   140021f9a:	xor    rcx,rsp
   140021f9d:	call   0x1400265a0
   140021fa2:	mov    rbx,QWORD PTR [rsp+0x438]
   140021faa:	add    rsp,0x410
   140021fb1:	pop    rdi
   140021fb2:	pop    rsi
   140021fb3:	pop    rbp
   140021fb4:	ret    
   140021fb5:	int3   
   140021fb6:	int3   
   140021fb7:	int3   
   140021fb8:	mov    r11,rsp
   140021fbb:	push   rbx
   140021fbc:	sub    rsp,0x40
   140021fc0:	xor    eax,eax
   140021fc2:	mov    rbx,rcx
   140021fc5:	lea    rcx,[rip+0x257c4]        # 0x140047790
   140021fcc:	mov    QWORD PTR [r11-0x28],rax
   140021fd0:	mov    QWORD PTR [r11-0x28],r8
   140021fd4:	mov    QWORD PTR [r11-0x20],rax
   140021fd8:	mov    QWORD PTR [r11-0x18],rax
   140021fdc:	and    DWORD PTR [rsp+0x34],eax
   140021fe0:	mov    DWORD PTR [rsp+0x30],0x1
   140021fe8:	call   QWORD PTR [rip+0x1f3a2]        # 0x140041390
   140021fee:	test   rax,rax
   140021ff1:	je     0x140022040
   140021ff3:	lea    rdx,[rip+0x257d6]        # 0x1400477d0
   140021ffa:	mov    rcx,rax
   140021ffd:	call   QWORD PTR [rip+0x1f2e5]        # 0x1400412e8
   140022003:	mov    QWORD PTR [rsp+0x28],rax
   140022008:	test   rax,rax
   14002200b:	je     0x140022040
   14002200d:	lea    r8,[rsp+0x20]
   140022012:	lea    rdx,[rip+0xfffffffffffffaa3]        # 0x140021abc
   140022019:	mov    r9d,0x18
   14002201f:	mov    rcx,rbx
   140022022:	call   0x14002293c
   140022027:	test   eax,eax
   140022029:	je     0x140022040
   14002202b:	cmp    DWORD PTR [rsp+0x34],0x0
   140022030:	je     0x140022040
   140022032:	cmp    DWORD PTR [rsp+0x30],0x1
   140022037:	je     0x140022040
   140022039:	mov    eax,0x1
   14002203e:	jmp    0x140022042
   140022040:	xor    eax,eax
   140022042:	add    rsp,0x40
   140022046:	pop    rbx
   140022047:	ret    
   140022048:	mov    QWORD PTR [rsp+0x10],rbx
   14002204d:	push   rbp
   14002204e:	push   rsi
   14002204f:	push   rdi
   140022050:	lea    rbp,[rsp-0x300]
   140022058:	sub    rsp,0x400
   14002205f:	mov    rax,QWORD PTR [rip+0x37022]        # 0x140059088
   140022066:	xor    rax,rsp
   140022069:	mov    QWORD PTR [rbp+0x2f0],rax
   140022070:	mov    rsi,rcx
   140022073:	mov    rbx,r8
   140022076:	lea    rcx,[rsp+0x20]
   14002207b:	xor    edx,edx
   14002207d:	mov    r8d,0x3d0
   140022083:	mov    rdi,r9
   140022086:	call   0x14002bb90
   14002208b:	mov    r8,rbx
   14002208e:	mov    ebx,0x104
   140022093:	lea    rcx,[rsp+0x20]
   140022098:	mov    edx,ebx
   14002209a:	call   0x140001004
   14002209f:	test   eax,eax
   1400220a1:	js     0x140022226
   1400220a7:	lea    rdx,[rip+0x256f2]        # 0x1400477a0
   1400220ae:	lea    rax,[rbp+0x128]
   1400220b5:	xor    r8d,r8d
   1400220b8:	sub    rdx,rax
   1400220bb:	lea    rcx,[rbp+0x128]
   1400220c2:	lea    rax,[rbx+0x7ffffefa]
   1400220c9:	test   rax,rax
   1400220cc:	je     0x1400220df
   1400220ce:	mov    al,BYTE PTR [rdx+rcx*1]
   1400220d1:	test   al,al
   1400220d3:	je     0x1400220df
   1400220d5:	mov    BYTE PTR [rcx],al
   1400220d7:	inc    rcx
   1400220da:	dec    rbx
   1400220dd:	jne    0x1400220c2
   1400220df:	test   rbx,rbx
   1400220e2:	jne    0x1400220ed
   1400220e4:	dec    rcx
   1400220e7:	mov    r8d,0x8007007a
   1400220ed:	mov    BYTE PTR [rcx],0x0
   1400220f0:	test   r8d,r8d
   1400220f3:	js     0x140022226
   1400220f9:	lea    rcx,[rbp+0x230]
   140022100:	mov    rax,rdi
   140022103:	lea    r9,[rbp+0x230]
   14002210a:	or     rax,rcx
   14002210d:	and    eax,0xf
   140022110:	jne    0x14002217b
   140022112:	mov    eax,0x1
   140022117:	lea    edx,[rax+0x7f]
   14002211a:	movaps xmm0,XMMWORD PTR [rdi]
   14002211d:	movaps xmm1,XMMWORD PTR [rdi+0x10]
   140022121:	movaps XMMWORD PTR [rcx],xmm0
   140022124:	movaps xmm0,XMMWORD PTR [rdi+0x20]
   140022128:	movaps XMMWORD PTR [rcx+0x10],xmm1
   14002212c:	movaps xmm1,XMMWORD PTR [rdi+0x30]
   140022130:	movaps XMMWORD PTR [rcx+0x20],xmm0
   140022134:	movaps xmm0,XMMWORD PTR [rdi+0x40]
   140022138:	movaps XMMWORD PTR [rcx+0x30],xmm1
   14002213c:	movaps xmm1,XMMWORD PTR [rdi+0x50]
   140022140:	movaps XMMWORD PTR [rcx+0x40],xmm0
   140022144:	movaps xmm0,XMMWORD PTR [rdi+0x60]
   140022148:	movaps XMMWORD PTR [rcx+0x50],xmm1
   14002214c:	movaps xmm1,XMMWORD PTR [rdi+0x70]
   140022150:	add    rdi,rdx
   140022153:	movaps XMMWORD PTR [rcx+0x60],xmm0
   140022157:	add    rcx,rdx
   14002215a:	movaps XMMWORD PTR [rcx-0x10],xmm1
   14002215e:	dec    rax
   140022161:	jne    0x14002211a
   140022163:	movaps xmm0,XMMWORD PTR [rdi]
   140022166:	movaps xmm1,XMMWORD PTR [rdi+0x10]
   14002216a:	mov    rax,QWORD PTR [rdi+0x20]
   14002216e:	movaps XMMWORD PTR [rcx],xmm0
   140022171:	movaps XMMWORD PTR [rcx+0x10],xmm1
   140022175:	mov    QWORD PTR [rcx+0x20],rax
   140022179:	jmp    0x14002218c
   14002217b:	mov    r8d,0xa8
   140022181:	mov    rdx,rdi
   140022184:	mov    rcx,r9
   140022187:	call   0x1400265d0
   14002218c:	and    DWORD PTR [rbp+0x2ec],0x0
   140022193:	lea    rcx,[rip+0x255f6]        # 0x140047790
   14002219a:	mov    DWORD PTR [rbp+0x2e8],0x1
   1400221a4:	call   QWORD PTR [rip+0x1f1e6]        # 0x140041390
   1400221aa:	mov    rbx,rax
   1400221ad:	test   rax,rax
   1400221b0:	je     0x140022226
   1400221b2:	lea    rdx,[rip+0x255f7]        # 0x1400477b0
   1400221b9:	mov    rcx,rax
   1400221bc:	call   QWORD PTR [rip+0x1f126]        # 0x1400412e8
   1400221c2:	lea    rdx,[rip+0x255b7]        # 0x140047780
   1400221c9:	mov    rcx,rbx
   1400221cc:	mov    QWORD PTR [rbp+0x2d8],rax
   1400221d3:	call   QWORD PTR [rip+0x1f10f]        # 0x1400412e8
   1400221d9:	cmp    QWORD PTR [rbp+0x2d8],0x0
   1400221e1:	mov    QWORD PTR [rbp+0x2e0],rax
   1400221e8:	je     0x140022226
   1400221ea:	test   rax,rax
   1400221ed:	je     0x140022226
   1400221ef:	lea    r8,[rsp+0x20]
   1400221f4:	lea    rdx,[rip+0xfffffffffffff8f5]        # 0x140021af0
   1400221fb:	mov    r9d,0x3d0
   140022201:	mov    rcx,rsi
   140022204:	call   0x14002293c
   140022209:	test   eax,eax
   14002220b:	je     0x140022226
   14002220d:	cmp    DWORD PTR [rbp+0x2ec],0x0
   140022214:	je     0x140022226
   140022216:	cmp    DWORD PTR [rbp+0x2e8],0x1
   14002221d:	je     0x140022226
   14002221f:	mov    eax,0x1
   140022224:	jmp    0x140022228
   140022226:	xor    eax,eax
   140022228:	mov    rcx,QWORD PTR [rbp+0x2f0]
   14002222f:	xor    rcx,rsp
   140022232:	call   0x1400265a0
   140022237:	mov    rbx,QWORD PTR [rsp+0x428]
   14002223f:	add    rsp,0x400
   140022246:	pop    rdi
   140022247:	pop    rsi
   140022248:	pop    rbp
   140022249:	ret    
   14002224a:	int3   
   14002224b:	int3   
   14002224c:	mov    QWORD PTR [rsp+0x10],rbx
   140022251:	push   rdi
   140022252:	sub    rsp,0x200
   140022259:	mov    rax,QWORD PTR [rip+0x36e28]        # 0x140059088
   140022260:	xor    rax,rsp
   140022263:	mov    QWORD PTR [rsp+0x1f0],rax
   14002226b:	mov    rdi,rcx
   14002226e:	mov    rbx,r8
   140022271:	lea    rcx,[rsp+0x20]
   140022276:	xor    edx,edx
   140022278:	mov    r8d,0x1c8
   14002227e:	call   0x14002bb90
   140022283:	lea    r9,[rip+0x2522e]        # 0x1400474b8
   14002228a:	lea    rax,[rsp+0x28]
   14002228f:	mov    QWORD PTR [rsp+0x20],rbx
   140022294:	xor    ebx,ebx
   140022296:	mov    edx,0x104
   14002229b:	sub    r9,rax
   14002229e:	lea    rcx,[rsp+0x28]
   1400222a3:	mov    r8d,ebx
   1400222a6:	lea    rax,[rdx+0x7ffffefa]
   1400222ad:	test   rax,rax
   1400222b0:	je     0x1400222c4
   1400222b2:	mov    al,BYTE PTR [r9+rcx*1]
   1400222b6:	test   al,al
   1400222b8:	je     0x1400222c4
   1400222ba:	mov    BYTE PTR [rcx],al
   1400222bc:	inc    rcx
   1400222bf:	dec    rdx
   1400222c2:	jne    0x1400222a6
   1400222c4:	test   rdx,rdx
   1400222c7:	jne    0x1400222d2
   1400222c9:	dec    rcx
   1400222cc:	mov    r8d,0x8007007a
   1400222d2:	mov    BYTE PTR [rcx],bl
   1400222d4:	test   r8d,r8d
   1400222d7:	js     0x140022362
   1400222dd:	lea    rcx,[rip+0x254ac]        # 0x140047790
   1400222e4:	mov    QWORD PTR [rsp+0x1e0],0x1
   1400222f0:	call   QWORD PTR [rip+0x1f09a]        # 0x140041390
   1400222f6:	test   rax,rax
   1400222f9:	je     0x140022362
   1400222fb:	lea    rdx,[rip+0x2547e]        # 0x140047780
   140022302:	mov    rcx,rax
   140022305:	call   QWORD PTR [rip+0x1efdd]        # 0x1400412e8
   14002230b:	mov    QWORD PTR [rsp+0x130],rax
   140022313:	test   rax,rax
   140022316:	je     0x140022362
   140022318:	lea    rcx,[rip+0x254a5]        # 0x1400477c4
   14002231f:	call   QWORD PTR [rip+0x1f06b]        # 0x140041390
   140022325:	test   rax,rax
   140022328:	je     0x140022362
   14002232a:	lea    r8,[rsp+0x20]
   14002232f:	lea    rdx,[rip+0xfffffffffffff816]        # 0x140021b4c
   140022336:	mov    r9d,0x1c8
   14002233c:	mov    rcx,rdi
   14002233f:	call   0x14002293c
   140022344:	test   eax,eax
   140022346:	je     0x140022362
   140022348:	cmp    DWORD PTR [rsp+0x1e4],ebx
   14002234f:	je     0x140022362
   140022351:	cmp    DWORD PTR [rsp+0x1e0],0x1
   140022359:	je     0x140022362
   14002235b:	mov    eax,0x1
   140022360:	jmp    0x140022364
   140022362:	xor    eax,eax
   140022364:	mov    rcx,QWORD PTR [rsp+0x1f0]
   14002236c:	xor    rcx,rsp
   14002236f:	call   0x1400265a0
   140022374:	mov    rbx,QWORD PTR [rsp+0x218]
   14002237c:	add    rsp,0x200
   140022383:	pop    rdi
   140022384:	ret    
   140022385:	int3   
   140022386:	int3   
   140022387:	int3   
   140022388:	mov    rax,rsp
   14002238b:	mov    QWORD PTR [rax+0x10],rbx
   14002238f:	mov    QWORD PTR [rax+0x18],rsi
   140022393:	mov    QWORD PTR [rax+0x20],rdi
   140022397:	push   rbp
   140022398:	lea    rbp,[rax-0x268]
   14002239f:	sub    rsp,0x360
   1400223a6:	mov    rax,QWORD PTR [rip+0x36cdb]        # 0x140059088
   1400223ad:	xor    rax,rsp
   1400223b0:	mov    QWORD PTR [rbp+0x250],rax
   1400223b7:	mov    rsi,rcx
   1400223ba:	mov    rbx,r8
   1400223bd:	lea    rcx,[rsp+0x20]
   1400223c2:	xor    edx,edx
   1400223c4:	mov    r8d,0x328
   1400223ca:	mov    edi,r9d
   1400223cd:	call   0x14002bb90
   1400223d2:	lea    rcx,[rsp+0x20]
   1400223d7:	mov    r8,rbx
   1400223da:	mov    edx,0x208
   1400223df:	call   0x1400108b8
   1400223e4:	test   eax,eax
   1400223e6:	js     0x1400224e7
   1400223ec:	test   edi,edi
   1400223ee:	lea    rax,[rip+0x2541b]        # 0x140047810
   1400223f5:	lea    r8,[rip+0x25424]        # 0x140047820
   1400223fc:	cmovne r8,rax
   140022400:	xor    r9d,r9d
   140022403:	lea    rax,[rbp+0x128]
   14002240a:	mov    edx,0x104
   14002240f:	lea    rcx,[rbp+0x128]
   140022416:	sub    r8,rax
   140022419:	lea    edi,[r9+0x1]
   14002241d:	lea    rax,[rdx+0x7ffffefa]
   140022424:	test   rax,rax
   140022427:	je     0x14002243b
   140022429:	mov    al,BYTE PTR [r8+rcx*1]
   14002242d:	test   al,al
   14002242f:	je     0x14002243b
   140022431:	mov    BYTE PTR [rcx],al
   140022433:	add    rcx,rdi
   140022436:	sub    rdx,rdi
   140022439:	jne    0x14002241d
   14002243b:	test   rdx,rdx
   14002243e:	jne    0x140022449
   140022440:	sub    rcx,rdi
   140022443:	mov    r9d,0x8007007a
   140022449:	mov    BYTE PTR [rcx],0x0
   14002244c:	test   r9d,r9d
   14002244f:	js     0x1400224e7
   140022455:	and    DWORD PTR [rbp+0x244],0x0
   14002245c:	lea    rcx,[rip+0x2532d]        # 0x140047790
   140022463:	mov    DWORD PTR [rbp+0x240],edi
   140022469:	call   QWORD PTR [rip+0x1ef21]        # 0x140041390
   14002246f:	mov    rbx,rax
   140022472:	test   rax,rax
   140022475:	je     0x1400224e7
   140022477:	lea    rdx,[rip+0x25332]        # 0x1400477b0
   14002247e:	mov    rcx,rax
   140022481:	call   QWORD PTR [rip+0x1ee61]        # 0x1400412e8
   140022487:	lea    rdx,[rip+0x252f2]        # 0x140047780
   14002248e:	mov    rcx,rbx
   140022491:	mov    QWORD PTR [rbp+0x230],rax
   140022498:	call   QWORD PTR [rip+0x1ee4a]        # 0x1400412e8
   14002249e:	cmp    QWORD PTR [rbp+0x230],0x0
   1400224a6:	mov    QWORD PTR [rbp+0x238],rax
   1400224ad:	je     0x1400224e7
   1400224af:	test   rax,rax
   1400224b2:	je     0x1400224e7
   1400224b4:	lea    r8,[rsp+0x20]
   1400224b9:	lea    rdx,[rip+0xfffffffffffff720]        # 0x140021be0
   1400224c0:	mov    r9d,0x328
   1400224c6:	mov    rcx,rsi
   1400224c9:	call   0x14002293c
   1400224ce:	test   eax,eax
   1400224d0:	je     0x1400224e7
   1400224d2:	cmp    DWORD PTR [rbp+0x244],0x0
   1400224d9:	je     0x1400224e7
   1400224db:	cmp    DWORD PTR [rbp+0x240],edi
   1400224e1:	je     0x1400224e7
   1400224e3:	mov    eax,edi
   1400224e5:	jmp    0x1400224e9
   1400224e7:	xor    eax,eax
   1400224e9:	mov    rcx,QWORD PTR [rbp+0x250]
   1400224f0:	xor    rcx,rsp
   1400224f3:	call   0x1400265a0
   1400224f8:	lea    r11,[rsp+0x360]
   140022500:	mov    rbx,QWORD PTR [r11+0x18]
   140022504:	mov    rsi,QWORD PTR [r11+0x20]
   140022508:	mov    rdi,QWORD PTR [r11+0x28]
   14002250c:	mov    rsp,r11
   14002250f:	pop    rbp
   140022510:	ret    
   140022511:	int3   
   140022512:	int3   
   140022513:	int3   
   140022514:	mov    QWORD PTR [rsp+0x10],rbx
   140022519:	mov    QWORD PTR [rsp+0x18],rdi
   14002251e:	push   rbp
   14002251f:	lea    rbp,[rsp-0x260]
   140022527:	sub    rsp,0x360
   14002252e:	mov    rax,QWORD PTR [rip+0x36b53]        # 0x140059088
   140022535:	xor    rax,rsp
   140022538:	mov    QWORD PTR [rbp+0x250],rax
   14002253f:	mov    rdi,rcx
   140022542:	lea    rcx,[rsp+0x20]
   140022547:	xor    edx,edx
   140022549:	mov    r8d,0x328
   14002254f:	call   0x14002bb90
   140022554:	mov    ebx,0x104
   140022559:	lea    r8,[rip+0x24e90]        # 0x1400473f0
   140022560:	lea    rcx,[rsp+0x20]
   140022565:	mov    edx,ebx
   140022567:	call   0x140001004
   14002256c:	test   eax,eax
   14002256e:	js     0x140022660
   140022574:	lea    rdx,[rip+0x25265]        # 0x1400477e0
   14002257b:	lea    rax,[rbp+0x128]
   140022582:	xor    r8d,r8d
   140022585:	sub    rdx,rax
   140022588:	lea    rcx,[rbp+0x128]
   14002258f:	lea    rax,[rbx+0x7ffffefa]
   140022596:	test   rax,rax
   140022599:	je     0x1400225ac
   14002259b:	mov    al,BYTE PTR [rdx+rcx*1]
   14002259e:	test   al,al
   1400225a0:	je     0x1400225ac
   1400225a2:	mov    BYTE PTR [rcx],al
   1400225a4:	inc    rcx
   1400225a7:	dec    rbx
   1400225aa:	jne    0x14002258f
   1400225ac:	test   rbx,rbx
   1400225af:	jne    0x1400225ba
   1400225b1:	dec    rcx
   1400225b4:	mov    r8d,0x8007007a
   1400225ba:	mov    BYTE PTR [rcx],0x0
   1400225bd:	test   r8d,r8d
   1400225c0:	js     0x140022660
   1400225c6:	and    DWORD PTR [rbp+0x244],0x0
   1400225cd:	lea    rcx,[rip+0x251bc]        # 0x140047790
   1400225d4:	mov    DWORD PTR [rbp+0x240],0x1
   1400225de:	call   QWORD PTR [rip+0x1edac]        # 0x140041390
   1400225e4:	mov    rbx,rax
   1400225e7:	test   rax,rax
   1400225ea:	je     0x140022660
   1400225ec:	lea    rdx,[rip+0x251bd]        # 0x1400477b0
   1400225f3:	mov    rcx,rax
   1400225f6:	call   QWORD PTR [rip+0x1ecec]        # 0x1400412e8
   1400225fc:	lea    rdx,[rip+0x2517d]        # 0x140047780
   140022603:	mov    rcx,rbx
   140022606:	mov    QWORD PTR [rbp+0x230],rax
   14002260d:	call   QWORD PTR [rip+0x1ecd5]        # 0x1400412e8
   140022613:	cmp    QWORD PTR [rbp+0x230],0x0
   14002261b:	mov    QWORD PTR [rbp+0x238],rax
   140022622:	je     0x140022660
   140022624:	test   rax,rax
   140022627:	je     0x140022660
   140022629:	lea    r8,[rsp+0x20]
   14002262e:	lea    rdx,[rip+0xfffffffffffff603]        # 0x140021c38
   140022635:	mov    r9d,0x328
   14002263b:	mov    rcx,rdi
   14002263e:	call   0x14002293c
   140022643:	test   eax,eax
   140022645:	je     0x140022660
   140022647:	cmp    DWORD PTR [rbp+0x244],0x0
   14002264e:	je     0x140022660
   140022650:	cmp    DWORD PTR [rbp+0x240],0x1
   140022657:	je     0x140022660
   140022659:	mov    eax,0x1
   14002265e:	jmp    0x140022662
   140022660:	xor    eax,eax
   140022662:	mov    rcx,QWORD PTR [rbp+0x250]
   140022669:	xor    rcx,rsp
   14002266c:	call   0x1400265a0
   140022671:	lea    r11,[rsp+0x360]
   140022679:	mov    rbx,QWORD PTR [r11+0x18]
   14002267d:	mov    rdi,QWORD PTR [r11+0x20]
   140022681:	mov    rsp,r11
   140022684:	pop    rbp
   140022685:	ret    
   140022686:	int3   
   140022687:	int3   
   140022688:	rex push rbp
   14002268a:	push   rbx
   14002268b:	push   rsi
   14002268c:	push   rdi
   14002268d:	push   r12
   14002268f:	push   r14
   140022691:	push   r15
   140022693:	lea    rbp,[rsp-0x3e0]
   14002269b:	sub    rsp,0x4e0
   1400226a2:	mov    rax,QWORD PTR [rip+0x369df]        # 0x140059088
   1400226a9:	xor    rax,rsp
   1400226ac:	mov    QWORD PTR [rbp+0x3d0],rax
   1400226b3:	xor    r12d,r12d
   1400226b6:	mov    rdi,r9
   1400226b9:	mov    r14,r8
   1400226bc:	mov    rsi,rdx
   1400226bf:	mov    r15,rcx
   1400226c2:	test   r8,r8
   1400226c5:	jne    0x1400226ce
   1400226c7:	xor    eax,eax
   1400226c9:	jmp    0x140022864
   1400226ce:	test   r9,r9
   1400226d1:	je     0x1400226c7
   1400226d3:	lea    rcx,[rsp+0x20]
   1400226d8:	xor    edx,edx
   1400226da:	mov    r8d,0x4b0
   1400226e0:	call   0x14002bb90
   1400226e5:	lea    r8,[rip+0x23d04]        # 0x1400463f0
   1400226ec:	lea    rcx,[rsp+0x20]
   1400226f1:	mov    edx,0x104
   1400226f6:	call   0x140001004
   1400226fb:	test   eax,eax
   1400226fd:	js     0x1400226c7
   1400226ff:	mov    ebx,0x80
   140022704:	lea    r8,[rip+0x24b2d]        # 0x140047238
   14002270b:	lea    rcx,[rbp+0x128]
   140022712:	mov    edx,ebx
   140022714:	call   0x1400108b8
   140022719:	test   eax,eax
   14002271b:	js     0x1400226c7
   14002271d:	lea    r8,[rip+0x24acc]        # 0x1400471f0
   140022724:	lea    rcx,[rbp+0x1a8]
   14002272b:	mov    edx,ebx
   14002272d:	call   0x1400108b8
   140022732:	test   eax,eax
   140022734:	js     0x1400226c7
   140022736:	lea    r8,[rip+0x24c7b]        # 0x1400473b8
   14002273d:	lea    rcx,[rbp+0x228]
   140022744:	mov    edx,ebx
   140022746:	call   0x1400108b8
   14002274b:	test   eax,eax
   14002274d:	js     0x1400226c7
   140022753:	lea    rcx,[rip+0x25036]        # 0x140047790
   14002275a:	mov    DWORD PTR [rbp+0x3a8],r12d
   140022761:	mov    QWORD PTR [rbp+0x3c4],0x1
   14002276c:	mov    DWORD PTR [rbp+0x3c0],r12d
   140022773:	call   QWORD PTR [rip+0x1ec17]        # 0x140041390
   140022779:	mov    rbx,rax
   14002277c:	test   rax,rax
   14002277f:	je     0x1400226c7
   140022785:	lea    rdx,[rip+0x25024]        # 0x1400477b0
   14002278c:	mov    rcx,rax
   14002278f:	call   QWORD PTR [rip+0x1eb53]        # 0x1400412e8
   140022795:	lea    rdx,[rip+0x2505c]        # 0x1400477f8
   14002279c:	mov    rcx,rbx
   14002279f:	mov    QWORD PTR [rbp+0x3b0],rax
   1400227a6:	call   QWORD PTR [rip+0x1eb3c]        # 0x1400412e8
   1400227ac:	mov    QWORD PTR [rbp+0x3b8],rax
   1400227b3:	cmp    QWORD PTR [rbp+0x3b0],r12
   1400227ba:	je     0x1400226c7
   1400227c0:	test   rax,rax
   1400227c3:	je     0x1400226c7
   1400227c9:	lea    r8,[rsp+0x20]
   1400227ce:	lea    rdx,[rip+0xfffffffffffff4b7]        # 0x140021c8c
   1400227d5:	mov    r9d,0x4b0
   1400227db:	mov    rcx,r15
   1400227de:	call   0x14002293c
   1400227e3:	mov    DWORD PTR [rsi],0x1
   1400227e9:	cmp    eax,0x1
   1400227ec:	jne    0x140022801
   1400227ee:	cmp    DWORD PTR [rbp+0x3c8],eax
   1400227f4:	jne    0x140022801
   1400227f6:	cmp    DWORD PTR [rbp+0x3c4],eax
   1400227fc:	jne    0x140022801
   1400227fe:	mov    DWORD PTR [rsi],r12d
   140022801:	cmp    DWORD PTR [rbp+0x3c0],r12d
   140022808:	jne    0x14002282e
   14002280a:	cmp    WORD PTR [rbp+0x2a8],r12w
   140022812:	je     0x14002282e
   140022814:	lea    rdx,[rip+0x24a55]        # 0x140047270
   14002281b:	lea    rcx,[rbp+0x2a8]
   140022822:	call   0x140026fd8
   140022827:	test   eax,eax
   140022829:	je     0x14002282e
   14002282b:	mov    DWORD PTR [r14],r12d
   14002282e:	cmp    DWORD PTR [rsi],r12d
   140022831:	je     0x14002283d
   140022833:	mov    ebx,0x1
   140022838:	cmp    DWORD PTR [r14],r12d
   14002283b:	jne    0x140022840
   14002283d:	mov    ebx,r12d
   140022840:	cmp    DWORD PTR [rbp+0x3a8],0x1
   140022847:	jne    0x140022862
   140022849:	lea    rcx,[rbp+0x328]
   140022850:	mov    DWORD PTR [rdi],r12d
   140022853:	call   0x14003137c
   140022858:	lea    ecx,[rax-0x1]
   14002285b:	cmp    ecx,0x1
   14002285e:	ja     0x140022862
   140022860:	mov    DWORD PTR [rdi],eax
   140022862:	mov    eax,ebx
   140022864:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14002286b:	xor    rcx,rsp
   14002286e:	call   0x1400265a0
   140022873:	add    rsp,0x4e0
   14002287a:	pop    r15
   14002287c:	pop    r14
   14002287e:	pop    r12
   140022880:	pop    rdi
   140022881:	pop    rsi
   140022882:	pop    rbx
   140022883:	pop    rbp
   140022884:	ret    
   140022885:	int3   
   140022886:	int3   
   140022887:	int3   
   140022888:	rex push rbx
   14002288a:	sub    rsp,0x20
   14002288e:	lea    rax,[rip+0x24ed3]        # 0x140047768
   140022895:	mov    rbx,rcx
   140022898:	mov    QWORD PTR [rcx],rax
   14002289b:	mov    rcx,QWORD PTR [rcx+0x10]
   14002289f:	test   rcx,rcx
   1400228a2:	je     0x1400228aa
   1400228a4:	call   QWORD PTR [rip+0x1eade]        # 0x140041388
   1400228aa:	mov    rcx,QWORD PTR [rbx+0x8]
   1400228ae:	test   rcx,rcx
   1400228b1:	je     0x1400228cb
   1400228b3:	mov    rdx,QWORD PTR [rbx+0x18]
   1400228b7:	test   rdx,rdx
   1400228ba:	je     0x1400228cb
   1400228bc:	mov    r9d,0x8000
   1400228c2:	xor    r8d,r8d
   1400228c5:	call   QWORD PTR [rip+0x1eb1d]        # 0x1400413e8
   1400228cb:	add    rsp,0x20
   1400228cf:	pop    rbx
   1400228d0:	ret    
   1400228d1:	int3   
   1400228d2:	int3   
   1400228d3:	int3   
   1400228d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400228d9:	push   rdi
   1400228da:	sub    rsp,0x20
   1400228de:	lea    rax,[rip+0x24e83]        # 0x140047768
   1400228e5:	mov    rbx,rcx
   1400228e8:	mov    edi,edx
   1400228ea:	mov    QWORD PTR [rcx],rax
   1400228ed:	mov    rcx,QWORD PTR [rcx+0x10]
   1400228f1:	test   rcx,rcx
   1400228f4:	je     0x1400228fc
   1400228f6:	call   QWORD PTR [rip+0x1ea8c]        # 0x140041388
   1400228fc:	mov    rcx,QWORD PTR [rbx+0x8]
   140022900:	test   rcx,rcx
   140022903:	je     0x14002291d
   140022905:	mov    rdx,QWORD PTR [rbx+0x18]
   140022909:	test   rdx,rdx
   14002290c:	je     0x14002291d
   14002290e:	mov    r9d,0x8000
   140022914:	xor    r8d,r8d
   140022917:	call   QWORD PTR [rip+0x1eacb]        # 0x1400413e8
   14002291d:	test   dil,0x1
   140022921:	je     0x14002292b
   140022923:	mov    rcx,rbx
   140022926:	call   0x14002657c
   14002292b:	mov    rax,rbx
   14002292e:	mov    rbx,QWORD PTR [rsp+0x30]
   140022933:	add    rsp,0x20
   140022937:	pop    rdi
   140022938:	ret    
   140022939:	int3   
   14002293a:	int3   
   14002293b:	int3   
   14002293c:	mov    rax,rsp
   14002293f:	mov    QWORD PTR [rax+0x18],r8
   140022943:	push   rbp
   140022944:	push   rsi
   140022945:	push   rdi
   140022946:	push   r12
   140022948:	push   r13
   14002294a:	push   r14
   14002294c:	push   r15
   14002294e:	mov    rbp,rsp
   140022951:	sub    rsp,0x70
   140022955:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   14002295d:	mov    QWORD PTR [rax+0x10],rbx
   140022961:	mov    r12d,r9d
   140022964:	mov    r13,rdx
   140022967:	mov    r15,rcx
   14002296a:	lea    rax,[rip+0x24df7]        # 0x140047768
   140022971:	mov    QWORD PTR [rbp-0x20],rax
   140022975:	xor    esi,esi
   140022977:	mov    QWORD PTR [rbp-0x18],rsi
   14002297b:	xor    r14d,r14d
   14002297e:	mov    QWORD PTR [rbp-0x10],r14
   140022982:	xor    ebx,ebx
   140022984:	mov    QWORD PTR [rbp-0x8],rbx
   140022988:	lea    eax,[r12*2+0x1020]
   140022990:	test   rcx,rcx
   140022993:	je     0x140022b00
   140022999:	mov    rsi,rcx
   14002299c:	mov    QWORD PTR [rbp-0x18],rcx
   1400229a0:	movsxd r8,eax
   1400229a3:	mov    DWORD PTR [rsp+0x20],0x40
   1400229ab:	xor    edx,edx
   1400229ad:	mov    r9d,0x1000
   1400229b3:	call   QWORD PTR [rip+0x1e837]        # 0x1400411f0
   1400229b9:	mov    rdi,rax
   1400229bc:	test   rax,rax
   1400229bf:	je     0x140022b00
   1400229c5:	mov    rbx,rax
   1400229c8:	mov    QWORD PTR [rbp-0x8],rax
   1400229cc:	or     QWORD PTR [rbp+0x40],0xffffffffffffffff
   1400229d1:	lea    rax,[rbp+0x40]
   1400229d5:	mov    QWORD PTR [rsp+0x20],rax
   1400229da:	mov    r9d,0x1000
   1400229e0:	mov    r8,r13
   1400229e3:	mov    rdx,rbx
   1400229e6:	mov    rcx,rsi
   1400229e9:	call   QWORD PTR [rip+0x1ecd1]        # 0x1400416c0
   1400229ef:	test   eax,eax
   1400229f1:	je     0x140022b00
   1400229f7:	cmp    QWORD PTR [rbp+0x40],0x1000
   1400229ff:	jne    0x140022b00
   140022a05:	lea    r13,[rbx+0x1020]
   140022a0c:	or     QWORD PTR [rbp+0x40],0xffffffffffffffff
   140022a11:	lea    rax,[rbp+0x40]
   140022a15:	mov    QWORD PTR [rsp+0x20],rax
   140022a1a:	mov    r9d,r12d
   140022a1d:	mov    r8,QWORD PTR [rbp+0x50]
   140022a21:	mov    rdx,r13
   140022a24:	mov    rcx,rsi
   140022a27:	call   QWORD PTR [rip+0x1ec93]        # 0x1400416c0
   140022a2d:	test   eax,eax
   140022a2f:	je     0x140022b00
   140022a35:	cmp    QWORD PTR [rbp+0x40],r12
   140022a39:	jne    0x140022b00
   140022a3f:	lea    rax,[rbp+0x58]
   140022a43:	mov    QWORD PTR [rsp+0x30],rax
   140022a48:	mov    DWORD PTR [rsp+0x28],0x4
   140022a50:	mov    QWORD PTR [rsp+0x20],r13
   140022a55:	mov    r9,rbx
   140022a58:	xor    r8d,r8d
   140022a5b:	xor    edx,edx
   140022a5d:	mov    rcx,rsi
   140022a60:	call   QWORD PTR [rip+0x1e792]        # 0x1400411f8
   140022a66:	mov    rdi,rax
   140022a69:	test   rax,rax
   140022a6c:	je     0x140022b00
   140022a72:	mov    r14,rax
   140022a75:	mov    QWORD PTR [rbp-0x10],rax
   140022a79:	mov    edx,0x2
   140022a7e:	mov    rcx,rax
   140022a81:	call   QWORD PTR [rip+0x1e759]        # 0x1400411e0
   140022a87:	mov    rcx,r14
   140022a8a:	call   QWORD PTR [rip+0x1e7c8]        # 0x140041258
   140022a90:	mov    edx,0x2710
   140022a95:	mov    rcx,r14
   140022a98:	call   QWORD PTR [rip+0x1e8da]        # 0x140041378
   140022a9e:	cmp    eax,0x102
   140022aa3:	jne    0x140022abc
   140022aa5:	xor    edx,edx
   140022aa7:	mov    rcx,r14
   140022aaa:	call   QWORD PTR [rip+0x1e738]        # 0x1400411e8
   140022ab0:	test   eax,eax
   140022ab2:	jne    0x140022b00
   140022ab4:	xor    ebx,ebx
   140022ab6:	mov    QWORD PTR [rbp-0x8],rbx
   140022aba:	jmp    0x140022b00
   140022abc:	test   eax,eax
   140022abe:	jne    0x140022b00
   140022ac0:	mov    r8,r12
   140022ac3:	xor    edx,edx
   140022ac5:	mov    rcx,QWORD PTR [rbp+0x50]
   140022ac9:	call   0x14002bb90
   140022ace:	or     QWORD PTR [rbp-0x30],0xffffffffffffffff
   140022ad3:	lea    rax,[rbp-0x30]
   140022ad7:	mov    QWORD PTR [rsp+0x20],rax
   140022adc:	mov    r9,r12
   140022adf:	mov    r8,QWORD PTR [rbp+0x50]
   140022ae3:	mov    rdx,r13
   140022ae6:	mov    rcx,r15
   140022ae9:	call   QWORD PTR [rip+0x1e751]        # 0x140041240
   140022aef:	test   eax,eax
   140022af1:	je     0x140022b00
   140022af3:	cmp    QWORD PTR [rbp-0x30],r12
   140022af7:	jne    0x140022b00
   140022af9:	mov    edi,0x1
   140022afe:	jmp    0x140022b02
   140022b00:	xor    edi,edi
   140022b02:	lea    rax,[rip+0x24c5f]        # 0x140047768
   140022b09:	mov    QWORD PTR [rbp-0x20],rax
   140022b0d:	test   r14,r14
   140022b10:	je     0x140022b1b
   140022b12:	mov    rcx,r14
   140022b15:	call   QWORD PTR [rip+0x1e86d]        # 0x140041388
   140022b1b:	test   rsi,rsi
   140022b1e:	je     0x140022b3a
   140022b20:	test   rbx,rbx
   140022b23:	je     0x140022b3a
   140022b25:	mov    r9d,0x8000
   140022b2b:	xor    r8d,r8d
   140022b2e:	mov    rdx,rbx
   140022b31:	mov    rcx,rsi
   140022b34:	call   QWORD PTR [rip+0x1e8ae]        # 0x1400413e8
   140022b3a:	mov    eax,edi
   140022b3c:	mov    rbx,QWORD PTR [rsp+0xb8]
   140022b44:	add    rsp,0x70
   140022b48:	pop    r15
   140022b4a:	pop    r14
   140022b4c:	pop    r13
   140022b4e:	pop    r12
   140022b50:	pop    rdi
   140022b51:	pop    rsi
   140022b52:	pop    rbp
   140022b53:	ret    
   140022b54:	rex push rbx
   140022b56:	push   rdi
   140022b57:	sub    rsp,0x38
   140022b5b:	call   QWORD PTR [rip+0x1e727]        # 0x140041288
   140022b61:	cmp    al,0x6
   140022b63:	jb     0x140022b6c
   140022b65:	mov    al,0x1
   140022b67:	jmp    0x140022bf8
   140022b6c:	lea    rax,[rsp+0x68]
   140022b71:	lea    rdx,[rip+0x24d58]        # 0x1400478d0
   140022b78:	mov    r9d,0x20019
   140022b7e:	xor    r8d,r8d
   140022b81:	mov    rcx,0xffffffff80000001
   140022b88:	mov    QWORD PTR [rsp+0x20],rax
   140022b8d:	call   QWORD PTR [rip+0x1e525]        # 0x1400410b8
   140022b93:	test   eax,eax
   140022b95:	jne    0x140022bf6
   140022b97:	mov    rcx,QWORD PTR [rsp+0x68]
   140022b9c:	lea    rax,[rsp+0x50]
   140022ba1:	lea    r9,[rsp+0x58]
   140022ba6:	mov    QWORD PTR [rsp+0x28],rax
   140022bab:	lea    rax,[rsp+0x60]
   140022bb0:	lea    rdx,[rip+0x24d71]        # 0x140047928
   140022bb7:	xor    r8d,r8d
   140022bba:	mov    DWORD PTR [rsp+0x50],0x4
   140022bc2:	mov    QWORD PTR [rsp+0x20],rax
   140022bc7:	call   QWORD PTR [rip+0x1e4e3]        # 0x1400410b0
   140022bcd:	mov    rcx,QWORD PTR [rsp+0x68]
   140022bd2:	mov    ebx,eax
   140022bd4:	call   QWORD PTR [rip+0x1e45e]        # 0x140041038
   140022bda:	test   ebx,ebx
   140022bdc:	jne    0x140022bf6
   140022bde:	cmp    DWORD PTR [rsp+0x58],0x4
   140022be3:	jne    0x140022bf6
   140022be5:	cmp    DWORD PTR [rsp+0x50],0x4
   140022bea:	jne    0x140022bf6
   140022bec:	cmp    DWORD PTR [rsp+0x60],0x1
   140022bf1:	sete   al
   140022bf4:	jmp    0x140022bf8
   140022bf6:	xor    al,al
   140022bf8:	add    rsp,0x38
   140022bfc:	pop    rdi
   140022bfd:	pop    rbx
   140022bfe:	ret    
   140022bff:	int3   
   140022c00:	rex push rbx
   140022c02:	push   rsi
   140022c03:	push   rdi
   140022c04:	sub    rsp,0x30
   140022c08:	lea    rax,[rsp+0x68]
   140022c0d:	mov    rdi,rcx
   140022c10:	lea    rdx,[rip+0x24c19]        # 0x140047830
   140022c17:	mov    r9d,0x20019
   140022c1d:	xor    r8d,r8d
   140022c20:	mov    rcx,0xffffffff80000002
   140022c27:	mov    QWORD PTR [rsp+0x20],rax
   140022c2c:	call   QWORD PTR [rip+0x1e486]        # 0x1400410b8
   140022c32:	xor    esi,esi
   140022c34:	test   eax,eax
   140022c36:	je     0x140022c3c
   140022c38:	xor    al,al
   140022c3a:	jmp    0x140022cb2
   140022c3c:	mov    rcx,QWORD PTR [rsp+0x68]
   140022c41:	lea    rax,[rsp+0x60]
   140022c46:	lea    r9,[rsp+0x58]
   140022c4b:	mov    QWORD PTR [rsp+0x28],rax
   140022c50:	lea    rdx,[rip+0x24c61]        # 0x1400478b8
   140022c57:	xor    r8d,r8d
   140022c5a:	mov    QWORD PTR [rsp+0x20],rdi
   140022c5f:	mov    DWORD PTR [rsp+0x60],0x208
   140022c67:	call   QWORD PTR [rip+0x1e443]        # 0x1400410b0
   140022c6d:	mov    rcx,QWORD PTR [rsp+0x68]
   140022c72:	mov    ebx,eax
   140022c74:	call   QWORD PTR [rip+0x1e3be]        # 0x140041038
   140022c7a:	mov    WORD PTR [rdi+0x206],si
   140022c81:	test   ebx,ebx
   140022c83:	jne    0x140022c38
   140022c85:	cmp    DWORD PTR [rsp+0x58],0x2
   140022c8a:	jne    0x140022ca9
   140022c8c:	mov    r8d,0x104
   140022c92:	mov    rdx,rdi
   140022c95:	mov    rcx,rdi
   140022c98:	call   QWORD PTR [rip+0x1e5f2]        # 0x140041290
   140022c9e:	dec    eax
   140022ca0:	cmp    eax,0x103
   140022ca5:	jbe    0x140022cb0
   140022ca7:	jmp    0x140022c38
   140022ca9:	cmp    DWORD PTR [rsp+0x58],0x1
   140022cae:	jne    0x140022c38
   140022cb0:	mov    al,0x1
   140022cb2:	add    rsp,0x30
   140022cb6:	pop    rdi
   140022cb7:	pop    rsi
   140022cb8:	pop    rbx
   140022cb9:	ret    
   140022cba:	int3   
   140022cbb:	int3   
   140022cbc:	sub    rsp,0x38
   140022cc0:	and    QWORD PTR [rsp+0x28],0x0
   140022cc6:	xor    r9d,r9d
   140022cc9:	lea    rdx,[rip+0x3a730]        # 0x14005d400
   140022cd0:	lea    r8d,[r9+0x4]
   140022cd4:	or     rcx,0xffffffffffffffff
   140022cd8:	mov    DWORD PTR [rsp+0x20],0x9cb8
   140022ce0:	call   QWORD PTR [rip+0x1e58a]        # 0x140041270
   140022ce6:	mov    QWORD PTR [rip+0x39fa3],rax        # 0x14005cc90
   140022ced:	test   rax,rax
   140022cf0:	jne    0x140022cf6
   140022cf2:	xor    al,al
   140022cf4:	jmp    0x140022d34
   140022cf6:	and    QWORD PTR [rsp+0x20],0x0
   140022cfc:	xor    r9d,r9d
   140022cff:	xor    r8d,r8d
   140022d02:	lea    edx,[r9+0x6]
   140022d06:	mov    rcx,rax
   140022d09:	call   QWORD PTR [rip+0x1e919]        # 0x140041628
   140022d0f:	mov    QWORD PTR [rip+0x39f82],rax        # 0x14005cc98
   140022d16:	test   rax,rax
   140022d19:	jne    0x140022d32
   140022d1b:	mov    rcx,QWORD PTR [rip+0x39f6e]        # 0x14005cc90
   140022d22:	call   QWORD PTR [rip+0x1e660]        # 0x140041388
   140022d28:	and    QWORD PTR [rip+0x39f60],0x0        # 0x14005cc90
   140022d30:	jmp    0x140022cf2
   140022d32:	mov    al,0x1
   140022d34:	add    rsp,0x38
   140022d38:	ret    
   140022d39:	int3   
   140022d3a:	int3   
   140022d3b:	int3   
   140022d3c:	mov    rax,rsp
   140022d3f:	mov    QWORD PTR [rax+0x8],rbx
   140022d43:	mov    QWORD PTR [rax+0x10],rsi
   140022d47:	mov    QWORD PTR [rax+0x18],rdi
   140022d4b:	mov    QWORD PTR [rax+0x20],r13
   140022d4f:	push   rbp
   140022d50:	push   r14
   140022d52:	push   r15
   140022d54:	lea    rbp,[rax-0x5f]
   140022d58:	sub    rsp,0xc0
   140022d5f:	mov    rax,QWORD PTR [rip+0x36322]        # 0x140059088
   140022d66:	xor    rax,rsp
   140022d69:	mov    QWORD PTR [rbp+0x37],rax
   140022d6d:	xor    r13d,r13d
   140022d70:	mov    r15,rcx
   140022d73:	cmp    QWORD PTR [rip+0x3a6b6],r13        # 0x14005d430
   140022d7a:	mov    QWORD PTR [rbp-0x29],r13
   140022d7e:	je     0x140022db1
   140022d80:	lea    eax,[r13+0x1]
   140022d84:	mov    rcx,QWORD PTR [rbp+0x37]
   140022d88:	xor    rcx,rsp
   140022d8b:	call   0x1400265a0
   140022d90:	lea    r11,[rsp+0xc0]
   140022d98:	mov    rbx,QWORD PTR [r11+0x20]
   140022d9c:	mov    rsi,QWORD PTR [r11+0x28]
   140022da0:	mov    rdi,QWORD PTR [r11+0x30]
   140022da4:	mov    r13,QWORD PTR [r11+0x38]
   140022da8:	mov    rsp,r11
   140022dab:	pop    r15
   140022dad:	pop    r14
   140022daf:	pop    rbp
   140022db0:	ret    
   140022db1:	mov    eax,DWORD PTR [rip+0x39ed5]        # 0x14005cc8c
   140022db7:	mov    edi,0x1
   140022dbc:	test   eax,eax
   140022dbe:	jle    0x140022dd6
   140022dc0:	cmp    eax,0x2
   140022dc3:	jle    0x140022de1
   140022dc5:	cmp    eax,0x3
   140022dc8:	jne    0x140022dd6
   140022dca:	call   0x140022b54
   140022dcf:	test   al,al
   140022dd1:	sete   al
   140022dd4:	jmp    0x140022dd9
   140022dd6:	mov    al,dil
   140022dd9:	test   al,al
   140022ddb:	je     0x140022de1
   140022ddd:	mov    eax,edi
   140022ddf:	jmp    0x140022d84
   140022de1:	cmp    QWORD PTR [rip+0x39eb0],r13        # 0x14005cc98
   140022de8:	mov    DWORD PTR [rip+0x3a60e],0x18        # 0x14005d400
   140022df2:	mov    QWORD PTR [rip+0x3a60f],r13        # 0x14005d408
   140022df9:	mov    DWORD PTR [rip+0x3a611],edi        # 0x14005d410
   140022dff:	jne    0x140022e0a
   140022e01:	call   0x140022cbc
   140022e06:	test   al,al
   140022e08:	je     0x140022ddd
   140022e0a:	lea    rax,[rip+0x3a66f]        # 0x14005d480
   140022e11:	test   rax,rax
   140022e14:	je     0x140022e20
   140022e16:	mov    rcx,rax
   140022e19:	call   0x140022c00
   140022e1e:	jmp    0x140022e23
   140022e20:	mov    al,r13b
   140022e23:	test   al,al
   140022e25:	je     0x140022ddd
   140022e27:	lea    rbx,[rip+0x3a5d2]        # 0x14005d400
   140022e2e:	xor    r9d,r9d
   140022e31:	xor    r8d,r8d
   140022e34:	mov    rcx,rbx
   140022e37:	xor    edx,edx
   140022e39:	call   QWORD PTR [rip+0x1e439]        # 0x140041278
   140022e3f:	xor    r9d,r9d
   140022e42:	xor    r8d,r8d
   140022e45:	xor    edx,edx
   140022e47:	mov    rcx,rbx
   140022e4a:	mov    QWORD PTR [rip+0x3a5df],rax        # 0x14005d430
   140022e51:	call   QWORD PTR [rip+0x1e421]        # 0x140041278
   140022e57:	xor    r8d,r8d
   140022e5a:	xor    edx,edx
   140022e5c:	mov    rcx,rbx
   140022e5f:	mov    r14,rax
   140022e62:	call   QWORD PTR [rip+0x1e400]        # 0x140041268
   140022e68:	mov    rsi,rax
   140022e6b:	call   QWORD PTR [rip+0x1e6cf]        # 0x140041540
   140022e71:	mov    DWORD PTR [rsp+0x30],r13d
   140022e76:	lea    r9,[rbp-0x29]
   140022e7a:	mov    r8,rax
   140022e7d:	mov    rdx,rax
   140022e80:	mov    rcx,rax
   140022e83:	mov    DWORD PTR [rsp+0x28],edi
   140022e87:	mov    DWORD PTR [rsp+0x20],0x1fffff
   140022e8f:	call   QWORD PTR [rip+0x1e823]        # 0x1400416b8
   140022e95:	test   eax,eax
   140022e97:	je     0x1400231cb
   140022e9d:	cmp    QWORD PTR [rip+0x3a58c],r13        # 0x14005d430
   140022ea4:	je     0x1400231cb
   140022eaa:	test   r14,r14
   140022ead:	je     0x1400231d9
   140022eb3:	test   rsi,rsi
   140022eb6:	je     0x1400231cb
   140022ebc:	cmp    QWORD PTR [rbp-0x29],r13
   140022ec0:	je     0x1400231cb
   140022ec6:	mov    rbx,QWORD PTR [rip+0x39dcb]        # 0x14005cc98
   140022ecd:	xor    edx,edx
   140022ecf:	mov    r8d,0x9cb8
   140022ed5:	mov    rcx,rbx
   140022ed8:	call   0x14002bb90
   140022edd:	mov    rax,QWORD PTR [rbp-0x29]
   140022ee1:	mov    QWORD PTR [rbx+0x40],rax
   140022ee5:	call   QWORD PTR [rip+0x1e40d]        # 0x1400412f8
   140022eeb:	mov    rcx,QWORD PTR [rip+0x39da6]        # 0x14005cc98
   140022ef2:	mov    DWORD PTR [rcx+0x8],eax
   140022ef5:	call   QWORD PTR [rip+0x1e525]        # 0x140041420
   140022efb:	mov    rdx,QWORD PTR [rip+0x39d96]        # 0x14005cc98
   140022f02:	mov    DWORD PTR [rdx+0xc],eax
   140022f05:	mov    rax,QWORD PTR [rip+0x3a524]        # 0x14005d430
   140022f0c:	mov    QWORD PTR [rdx+0x20],r14
   140022f10:	mov    QWORD PTR [rdx+0x38],rsi
   140022f14:	mov    DWORD PTR [rdx],0x9cb8
   140022f1a:	mov    DWORD PTR [rdx+0x4],0x20000
   140022f21:	mov    QWORD PTR [rdx+0x30],rax
   140022f25:	mov    QWORD PTR [rdx+0x18],r15
   140022f29:	mov    rax,QWORD PTR [r15]
   140022f2c:	mov    rcx,QWORD PTR [rax+0x10]
   140022f30:	mov    QWORD PTR [rdx+0x10],rcx
   140022f34:	call   QWORD PTR [rip+0x1e34e]        # 0x140041288
   140022f3a:	mov    ecx,DWORD PTR [rip+0x39d4c]        # 0x14005cc8c
   140022f40:	cmp    al,0x6
   140022f42:	setae  dl
   140022f45:	dec    ecx
   140022f47:	je     0x140022f7f
   140022f49:	dec    ecx
   140022f4b:	je     0x140022f62
   140022f4d:	dec    ecx
   140022f4f:	jne    0x1400231cb
   140022f55:	mov    r8,QWORD PTR [rip+0x39d3c]        # 0x14005cc98
   140022f5c:	mov    DWORD PTR [r8+0x48],r13d
   140022f60:	jmp    0x140022f71
   140022f62:	mov    r8,QWORD PTR [rip+0x39d2f]        # 0x14005cc98
   140022f69:	mov    DWORD PTR [r8+0x48],0x8
   140022f71:	mov    eax,r13d
   140022f74:	test   dl,dl
   140022f76:	sete   al
   140022f79:	mov    DWORD PTR [r8+0x4c],eax
   140022f7d:	jmp    0x140022f8a
   140022f7f:	mov    r8,QWORD PTR [rip+0x39d12]        # 0x14005cc98
   140022f86:	mov    QWORD PTR [r8+0x48],r13
   140022f8a:	mov    dl,BYTE PTR [rip+0x39ad5]        # 0x14005ca65
   140022f90:	mov    DWORD PTR [r8+0x50],r13d
   140022f94:	mov    DWORD PTR [r8+0x58],r13d
   140022f98:	mov    al,dl
   140022f9a:	mov    DWORD PTR [r8+0x60],edi
   140022f9e:	neg    al
   140022fa0:	sbb    ecx,ecx
   140022fa2:	not    ecx
   140022fa4:	and    ecx,0x10
   140022fa7:	or     ecx,0x4
   140022faa:	neg    dl
   140022fac:	sbb    eax,eax
   140022fae:	mov    DWORD PTR [r8+0x54],ecx
   140022fb2:	or     r15,0xffffffffffffffff
   140022fb6:	and    eax,0x10
   140022fb9:	lea    rcx,[r8+0x21c8]
   140022fc0:	lea    edx,[r15+0x39]
   140022fc4:	or     eax,edi
   140022fc6:	mov    r9,r15
   140022fc9:	mov    DWORD PTR [r8+0x68],eax
   140022fcd:	mov    r8,QWORD PTR [rip+0x37a3c]        # 0x14005aa10
   140022fd4:	call   0x14002e200
   140022fd9:	mov    rcx,QWORD PTR [rip+0x39cb8]        # 0x14005cc98
   140022fe0:	mov    r8,QWORD PTR [rip+0x38d41]        # 0x14005bd28
   140022fe7:	mov    ebx,0x104
   140022fec:	add    rcx,0x274
   140022ff3:	mov    r9,r15
   140022ff6:	mov    edx,ebx
   140022ff8:	call   0x14002e200
   140022ffd:	mov    rax,QWORD PTR [rip+0x2495c]        # 0x140047960
   140023004:	mov    rcx,QWORD PTR [rip+0x39c8d]        # 0x14005cc98
   14002300b:	mov    QWORD PTR [rbp-0x19],rax
   14002300f:	mov    rax,QWORD PTR [rip+0x24952]        # 0x140047968
   140023016:	lea    r9d,[r15+0x49]
   14002301a:	mov    QWORD PTR [rbp-0x11],rax
   14002301e:	mov    rax,QWORD PTR [rip+0x2494b]        # 0x140047970
   140023025:	lea    r8,[rbp-0x19]
   140023029:	mov    QWORD PTR [rbp-0x9],rax
   14002302d:	mov    rax,QWORD PTR [rip+0x24944]        # 0x140047978
   140023034:	add    rcx,0x47c
   14002303b:	mov    QWORD PTR [rbp-0x1],rax
   14002303f:	mov    rax,QWORD PTR [rip+0x2493a]        # 0x140047980
   140023046:	mov    edx,ebx
   140023048:	mov    QWORD PTR [rbp+0x7],rax
   14002304c:	mov    rax,QWORD PTR [rip+0x24935]        # 0x140047988
   140023053:	mov    QWORD PTR [rbp+0xf],rax
   140023057:	mov    rax,QWORD PTR [rip+0x24932]        # 0x140047990
   14002305e:	mov    QWORD PTR [rbp+0x17],rax
   140023062:	mov    rax,QWORD PTR [rip+0x2492f]        # 0x140047998
   140023069:	mov    QWORD PTR [rbp+0x1f],rax
   14002306d:	mov    rax,QWORD PTR [rip+0x2492c]        # 0x1400479a0
   140023074:	mov    QWORD PTR [rbp+0x27],rax
   140023078:	call   0x140027788
   14002307d:	mov    rcx,QWORD PTR [rip+0x39c14]        # 0x14005cc98
   140023084:	mov    r8,QWORD PTR [rip+0x3798d]        # 0x14005aa18
   14002308b:	add    rcx,0x7c0
   140023092:	mov    r9,r15
   140023095:	mov    edx,ebx
   140023097:	call   0x14002e200
   14002309c:	mov    r9,QWORD PTR [rip+0x39bed]        # 0x14005cc90
   1400230a3:	lea    r8,[rip+0x248fe]        # 0x1400479a8
   1400230aa:	lea    rcx,[rip+0x3a65f]        # 0x14005d710
   1400230b1:	mov    edx,ebx
   1400230b3:	call   0x140034420
   1400230b8:	lea    ebx,[r15+0x69]
   1400230bc:	lea    r15,[rip+0x3a5dd]        # 0x14005d6a0
   1400230c3:	mov    rcx,r15
   1400230c6:	mov    r8d,ebx
   1400230c9:	xor    edx,edx
   1400230cb:	call   0x14002bb90
   1400230d0:	lea    rax,[rip+0x3a5b1]        # 0x14005d688
   1400230d7:	xor    r9d,r9d
   1400230da:	mov    QWORD PTR [rsp+0x48],rax
   1400230df:	mov    QWORD PTR [rsp+0x40],r15
   1400230e4:	mov    QWORD PTR [rsp+0x38],r13
   1400230e9:	mov    QWORD PTR [rsp+0x30],r13
   1400230ee:	mov    DWORD PTR [rsp+0x28],0x4000020
   1400230f6:	mov    DWORD PTR [rip+0x3a5a4],ebx        # 0x14005d6a0
   1400230fc:	mov    DWORD PTR [rsp+0x20],edi
   140023100:	xor    r8d,r8d
   140023103:	lea    rdx,[rip+0x3a606]        # 0x14005d710
   14002310a:	lea    rcx,[rip+0x3a36f]        # 0x14005d480
   140023111:	call   QWORD PTR [rip+0x1e591]        # 0x1400416a8
   140023117:	test   eax,eax
   140023119:	je     0x1400231cb
   14002311f:	mov    rcx,QWORD PTR [rip+0x3a562]        # 0x14005d688
   140023126:	call   QWORD PTR [rip+0x1e25c]        # 0x140041388
   14002312c:	mov    rcx,QWORD PTR [rip+0x3a55d]        # 0x14005d690
   140023133:	call   QWORD PTR [rip+0x1e24f]        # 0x140041388
   140023139:	mov    bl,dil
   14002313c:	mov    r15d,0x4e20
   140023142:	mov    rcx,QWORD PTR [rip+0x3a2e7]        # 0x14005d430
   140023149:	mov    edx,r15d
   14002314c:	call   QWORD PTR [rip+0x1e226]        # 0x140041378
   140023152:	test   eax,eax
   140023154:	jne    0x14002316a
   140023156:	mov    edx,edi
   140023158:	mov    rcx,r14
   14002315b:	call   QWORD PTR [rip+0x1e217]        # 0x140041378
   140023161:	test   eax,eax
   140023163:	jne    0x1400231bc
   140023165:	mov    bl,r13b
   140023168:	jmp    0x1400231bc
   14002316a:	mov    edx,r15d
   14002316d:	mov    rcx,rsi
   140023170:	call   QWORD PTR [rip+0x1e202]        # 0x140041378
   140023176:	cmp    eax,0x102
   14002317b:	je     0x1400231cb
   14002317d:	cmp    eax,0x80
   140023182:	je     0x1400231c2
   140023184:	mov    rcx,QWORD PTR [rip+0x3a2a5]        # 0x14005d430
   14002318b:	mov    edx,edi
   14002318d:	call   QWORD PTR [rip+0x1e1e5]        # 0x140041378
   140023193:	mov    rcx,r14
   140023196:	test   eax,eax
   140023198:	je     0x1400231a5
   14002319a:	call   QWORD PTR [rip+0x1e4d8]        # 0x140041678
   1400231a0:	mov    bl,r13b
   1400231a3:	jmp    0x1400231b3
   1400231a5:	mov    edx,edi
   1400231a7:	call   QWORD PTR [rip+0x1e1cb]        # 0x140041378
   1400231ad:	neg    eax
   1400231af:	sbb    cl,cl
   1400231b1:	and    bl,cl
   1400231b3:	mov    rcx,rsi
   1400231b6:	call   QWORD PTR [rip+0x1e0c4]        # 0x140041280
   1400231bc:	test   bl,bl
   1400231be:	je     0x1400231cb
   1400231c0:	jmp    0x140023142
   1400231c2:	mov    rcx,rsi
   1400231c5:	call   QWORD PTR [rip+0x1e0b5]        # 0x140041280
   1400231cb:	test   r14,r14
   1400231ce:	je     0x1400231d9
   1400231d0:	mov    rcx,r14
   1400231d3:	call   QWORD PTR [rip+0x1e1af]        # 0x140041388
   1400231d9:	test   rsi,rsi
   1400231dc:	je     0x1400231e7
   1400231de:	mov    rcx,rsi
   1400231e1:	call   QWORD PTR [rip+0x1e1a1]        # 0x140041388
   1400231e7:	mov    rcx,QWORD PTR [rbp-0x29]
   1400231eb:	test   rcx,rcx
   1400231ee:	je     0x1400231f6
   1400231f0:	call   QWORD PTR [rip+0x1e192]        # 0x140041388
   1400231f6:	mov    rcx,QWORD PTR [rip+0x3a233]        # 0x14005d430
   1400231fd:	test   rcx,rcx
   140023200:	je     0x14002320f
   140023202:	call   QWORD PTR [rip+0x1e180]        # 0x140041388
   140023208:	mov    QWORD PTR [rip+0x3a221],r13        # 0x14005d430
   14002320f:	mov    rcx,QWORD PTR [rip+0x39a82]        # 0x14005cc98
   140023216:	test   rcx,rcx
   140023219:	je     0x140023228
   14002321b:	call   QWORD PTR [rip+0x1e40f]        # 0x140041630
   140023221:	mov    QWORD PTR [rip+0x39a70],r13        # 0x14005cc98
   140023228:	mov    rcx,QWORD PTR [rip+0x39a61]        # 0x14005cc90
   14002322f:	test   rcx,rcx
   140023232:	je     0x140023241
   140023234:	call   QWORD PTR [rip+0x1e14e]        # 0x140041388
   14002323a:	mov    QWORD PTR [rip+0x39a4f],r13        # 0x14005cc90
   140023241:	mov    ecx,edi
   140023243:	call   0x140028754
   140023248:	int3   
   140023249:	int3   
   14002324a:	int3   
   14002324b:	int3   
   14002324c:	sub    rsp,0x48
   140023250:	mov    r10d,edx
   140023253:	mov    r9,rcx
   140023256:	sub    r10d,r8d
   140023259:	prefetchw BYTE PTR [rcx]
   14002325c:	mov    rax,QWORD PTR [r9]
   14002325f:	mov    DWORD PTR [rsp],r10d
   140023263:	mov    r8,rax
   140023266:	mov    rcx,rax
   140023269:	mov    DWORD PTR [rdx],eax
   14002326b:	shr    r8,0x20
   14002326f:	shr    rcx,0x30
   140023273:	inc    r8w
   140023277:	inc    cx
   14002327a:	mov    WORD PTR [rsp+0x6],cx
   14002327f:	mov    WORD PTR [rsp+0x4],r8w
   140023285:	mov    rcx,QWORD PTR [rsp]
   140023289:	lock cmpxchg QWORD PTR [r9],rcx
   14002328e:	jne    0x14002325c
   140023290:	add    rsp,0x48
   140023294:	ret    
   140023295:	int3   
   140023296:	int3   
   140023297:	int3   
   140023298:	sub    rsp,0x48
   14002329c:	mov    r9,rcx
   14002329f:	mov    rax,QWORD PTR [r9]
   1400232a2:	cmp    eax,0xffffffff
   1400232a5:	je     0x1400232e3
   1400232a7:	mov    r8,rax
   1400232aa:	mov    rcx,rax
   1400232ad:	movsxd r10,eax
   1400232b0:	shr    rcx,0x30
   1400232b4:	shr    r8,0x20
   1400232b8:	add    r10,rdx
   1400232bb:	dec    r8w
   1400232bf:	inc    cx
   1400232c2:	mov    WORD PTR [rsp+0x6],cx
   1400232c7:	mov    ecx,DWORD PTR [r10]
   1400232ca:	mov    WORD PTR [rsp+0x4],r8w
   1400232d0:	mov    DWORD PTR [rsp],ecx
   1400232d3:	mov    rcx,QWORD PTR [rsp]
   1400232d7:	lock cmpxchg QWORD PTR [r9],rcx
   1400232dc:	jne    0x14002329f
   1400232de:	mov    rax,r10
   1400232e1:	jmp    0x1400232e5
   1400232e3:	xor    eax,eax
   1400232e5:	add    rsp,0x48
   1400232e9:	ret    
   1400232ea:	int3   
   1400232eb:	int3   
   1400232ec:	mov    QWORD PTR [rsp+0x8],rcx
   1400232f1:	push   rdi
   1400232f2:	sub    rsp,0x30
   1400232f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400232ff:	mov    QWORD PTR [rsp+0x48],rbx
   140023304:	mov    ebx,edx
   140023306:	mov    rdi,rcx
   140023309:	call   0x140029e84
   14002330e:	test   bl,0x1
   140023311:	je     0x14002331b
   140023313:	mov    rcx,rdi
   140023316:	call   0x14002657c
   14002331b:	mov    rax,rdi
   14002331e:	mov    rbx,QWORD PTR [rsp+0x48]
   140023323:	add    rsp,0x30
   140023327:	pop    rdi
   140023328:	ret    
   140023329:	int3   
   14002332a:	int3   
   14002332b:	int3   
   14002332c:	mov    QWORD PTR [rsp+0x8],rcx
   140023331:	sub    rsp,0x38
   140023335:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002333e:	add    rsp,0x38
   140023342:	jmp    0x140029e84
   140023347:	int3   
   140023348:	mov    QWORD PTR [rsp+0x8],rcx
   14002334d:	push   rbx
   14002334e:	sub    rsp,0x30
   140023352:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002335b:	mov    rbx,rcx
   14002335e:	call   0x140029e58
   140023363:	nop
   140023364:	lea    rax,[rip+0x21e4d]        # 0x1400451b8
   14002336b:	mov    QWORD PTR [rbx],rax
   14002336e:	mov    rax,rbx
   140023371:	add    rsp,0x30
   140023375:	pop    rbx
   140023376:	ret    
   140023377:	int3   
   140023378:	rex push rbx
   14002337a:	sub    rsp,0x20
   14002337e:	mov    rbx,rcx
   140023381:	lea    r9,[rsp+0x38]
   140023386:	lea    r8,[rsp+0x40]
   14002338b:	lea    rcx,[rip+0x2464e]        # 0x1400479e0
   140023392:	mov    edx,0x1
   140023397:	call   QWORD PTR [rip+0x1dcb3]        # 0x140041050
   14002339d:	test   eax,eax
   14002339f:	jne    0x1400233b8
   1400233a1:	call   QWORD PTR [rip+0x1e031]        # 0x1400413d8
   1400233a7:	mov    ecx,eax
   1400233a9:	movzx  eax,ax
   1400233ac:	or     eax,0x80070000
   1400233b1:	test   ecx,ecx
   1400233b3:	cmovle eax,ecx
   1400233b6:	jmp    0x1400233d8
   1400233b8:	mov    edx,DWORD PTR [rsp+0x38]
   1400233bc:	mov    rcx,rbx
   1400233bf:	call   0x1400034c4
   1400233c4:	mov    r8d,DWORD PTR [rsp+0x38]
   1400233c9:	mov    rdx,QWORD PTR [rsp+0x40]
   1400233ce:	mov    rcx,QWORD PTR [rbx]
   1400233d1:	call   0x1400265d0
   1400233d6:	xor    eax,eax
   1400233d8:	add    rsp,0x20
   1400233dc:	pop    rbx
   1400233dd:	ret    
   1400233de:	int3   
   1400233df:	int3   
   1400233e0:	mov    rax,rsp
   1400233e3:	push   rbp
   1400233e4:	mov    rbp,rsp
   1400233e7:	sub    rsp,0x70
   1400233eb:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   1400233f3:	mov    QWORD PTR [rax+0x10],rbx
   1400233f7:	mov    QWORD PTR [rax+0x18],rsi
   1400233fb:	mov    QWORD PTR [rax+0x20],rdi
   1400233ff:	mov    rax,QWORD PTR [rip+0x35c82]        # 0x140059088
   140023406:	xor    rax,rsp
   140023409:	mov    QWORD PTR [rbp-0x8],rax
   14002340d:	mov    rbx,rcx
   140023410:	mov    rax,QWORD PTR [rcx]
   140023413:	mov    QWORD PTR [rcx+0x8],rax
   140023417:	xor    esi,esi
   140023419:	mov    QWORD PTR [rbp-0x18],rsi
   14002341d:	mov    QWORD PTR [rbp-0x10],rsi
   140023421:	mov    QWORD PTR [rbp-0x10],0x7
   140023429:	mov    QWORD PTR [rbp-0x18],rsi
   14002342d:	mov    WORD PTR [rbp-0x28],si
   140023431:	lea    rdx,[rip+0x228f8]        # 0x140045d30
   140023438:	lea    rcx,[rbp-0x28]
   14002343c:	call   0x14000324c
   140023441:	nop
   140023442:	lea    rdx,[rip+0x245df]        # 0x140047a28
   140023449:	lea    rcx,[rbp-0x28]
   14002344d:	call   0x1400030a8
   140023452:	lea    rdx,[rbp-0x28]
   140023456:	cmp    QWORD PTR [rbp-0x10],0x8
   14002345b:	cmovae rdx,QWORD PTR [rbp-0x28]
   140023460:	lea    rax,[rbp-0x38]
   140023464:	mov    QWORD PTR [rsp+0x20],rax
   140023469:	mov    r9d,0x20019
   14002346f:	xor    r8d,r8d
   140023472:	mov    rcx,0xffffffff80000002
   140023479:	call   QWORD PTR [rip+0x1dc39]        # 0x1400410b8
   14002347f:	test   eax,eax
   140023481:	je     0x14002349f
   140023483:	cmp    eax,0x2
   140023486:	je     0x14002350c
   14002348c:	movzx  ebx,ax
   14002348f:	or     ebx,0x80070000
   140023495:	test   eax,eax
   140023497:	cmovle ebx,eax
   14002349a:	jmp    0x140023526
   14002349f:	mov    eax,0x100
   1400234a4:	mov    DWORD PTR [rbp-0x3c],eax
   1400234a7:	mov    DWORD PTR [rbp-0x40],0x3
   1400234ae:	mov    edx,eax
   1400234b0:	mov    rcx,rbx
   1400234b3:	call   0x1400034c4
   1400234b8:	mov    rax,QWORD PTR [rbx]
   1400234bb:	lea    rcx,[rbp-0x3c]
   1400234bf:	mov    QWORD PTR [rsp+0x28],rcx
   1400234c4:	mov    QWORD PTR [rsp+0x20],rax
   1400234c9:	lea    r9,[rbp-0x40]
   1400234cd:	xor    r8d,r8d
   1400234d0:	lea    rdx,[rip+0x245c9]        # 0x140047aa0
   1400234d7:	mov    rcx,QWORD PTR [rbp-0x38]
   1400234db:	call   QWORD PTR [rip+0x1dbcf]        # 0x1400410b0
   1400234e1:	mov    edi,eax
   1400234e3:	test   eax,eax
   1400234e5:	jne    0x1400234f0
   1400234e7:	cmp    DWORD PTR [rbp-0x40],0x3
   1400234eb:	je     0x1400234fd
   1400234ed:	lea    edi,[rax+0xd]
   1400234f0:	cmp    edi,0xea
   1400234f6:	jne    0x1400234fd
   1400234f8:	mov    eax,DWORD PTR [rbp-0x3c]
   1400234fb:	jmp    0x1400234ae
   1400234fd:	mov    rcx,QWORD PTR [rbp-0x38]
   140023501:	call   QWORD PTR [rip+0x1db31]        # 0x140041038
   140023507:	cmp    edi,0x2
   14002350a:	jne    0x140023518
   14002350c:	mov    rcx,rbx
   14002350f:	call   0x140023378
   140023514:	mov    ebx,eax
   140023516:	jmp    0x140023526
   140023518:	movzx  ebx,di
   14002351b:	or     ebx,0x80070000
   140023521:	test   edi,edi
   140023523:	cmovle ebx,edi
   140023526:	cmp    QWORD PTR [rbp-0x10],0x8
   14002352b:	jb     0x140023536
   14002352d:	mov    rcx,QWORD PTR [rbp-0x28]
   140023531:	call   0x14002657c
   140023536:	mov    QWORD PTR [rbp-0x10],0x7
   14002353e:	mov    QWORD PTR [rbp-0x18],rsi
   140023542:	mov    WORD PTR [rbp-0x28],si
   140023546:	mov    eax,ebx
   140023548:	mov    rcx,QWORD PTR [rbp-0x8]
   14002354c:	xor    rcx,rsp
   14002354f:	call   0x1400265a0
   140023554:	lea    r11,[rsp+0x70]
   140023559:	mov    rbx,QWORD PTR [r11+0x18]
   14002355d:	mov    rsi,QWORD PTR [r11+0x20]
   140023561:	mov    rdi,QWORD PTR [r11+0x28]
   140023565:	mov    rsp,r11
   140023568:	pop    rbp
   140023569:	ret    
   14002356a:	int3   
   14002356b:	int3   
   14002356c:	mov    r11,rsp
   14002356f:	push   rbp
   140023570:	lea    rbp,[r11-0x5f]
   140023574:	sub    rsp,0x90
   14002357b:	mov    QWORD PTR [rbp+0x37],0xfffffffffffffffe
   140023583:	mov    QWORD PTR [r11+0x10],rbx
   140023587:	mov    QWORD PTR [r11+0x18],rsi
   14002358b:	mov    QWORD PTR [r11+0x20],rdi
   14002358f:	mov    rax,QWORD PTR [rip+0x35af2]        # 0x140059088
   140023596:	xor    rax,rsp
   140023599:	mov    QWORD PTR [rbp+0x4f],rax
   14002359d:	mov    rdi,rcx
   1400235a0:	xor    ebx,ebx
   1400235a2:	mov    QWORD PTR [r11-0x68],rbx
   1400235a6:	mov    DWORD PTR [rsp+0x28],ebx
   1400235aa:	lea    r8d,[rbx+0x3]
   1400235ae:	mov    DWORD PTR [r11-0x78],r8d
   1400235b2:	xor    r9d,r9d
   1400235b5:	mov    edx,0x60000
   1400235ba:	lea    rcx,[rip+0x244f7]        # 0x140047ab8
   1400235c1:	call   QWORD PTR [rip+0x1dc89]        # 0x140041250
   1400235c7:	cmp    rax,0xffffffffffffffff
   1400235cb:	jne    0x1400235d8
   1400235cd:	call   QWORD PTR [rip+0x1de05]        # 0x1400413d8
   1400235d3:	jmp    0x140023696
   1400235d8:	lea    rcx,[rip+0x221c9]        # 0x1400457a8
   1400235df:	mov    QWORD PTR [rbp+0x17],rcx
   1400235e3:	lea    rsi,[rip+0x22c46]        # 0x140046230
   1400235ea:	mov    QWORD PTR [rbp+0x17],rsi
   1400235ee:	mov    QWORD PTR [rbp+0x1f],rax
   1400235f2:	lea    r9,[rbp+0x2f]
   1400235f6:	lea    r8,[rbp+0xf]
   1400235fa:	lea    rdx,[rbp+0x7]
   1400235fe:	mov    rcx,rdi
   140023601:	call   QWORD PTR [rip+0x1da09]        # 0x140041010
   140023607:	test   eax,eax
   140023609:	jne    0x140023615
   14002360b:	call   QWORD PTR [rip+0x1ddc7]        # 0x1400413d8
   140023611:	mov    ebx,eax
   140023613:	jmp    0x140023690
   140023615:	cmp    DWORD PTR [rbp+0x7],ebx
   140023618:	je     0x140023690
   14002361a:	mov    r9d,0x2
   140023620:	lea    r8d,[r9+0xa]
   140023624:	lea    rdx,[rbp+0x3f]
   140023628:	mov    rcx,QWORD PTR [rbp+0xf]
   14002362c:	call   QWORD PTR [rip+0x1d9ce]        # 0x140041000
   140023632:	mov    edi,ebx
   140023634:	cmp    DWORD PTR [rbp+0x3f],ebx
   140023637:	jbe    0x140023690
   140023639:	lea    r8,[rbp+0x27]
   14002363d:	mov    edx,edi
   14002363f:	mov    rcx,QWORD PTR [rbp+0xf]
   140023643:	call   QWORD PTR [rip+0x1d9bf]        # 0x140041008
   140023649:	mov    rdx,QWORD PTR [rbp+0x27]
   14002364d:	movzx  ecx,BYTE PTR [rdx]
   140023650:	test   ecx,ecx
   140023652:	je     0x14002366b
   140023654:	dec    ecx
   140023656:	jne    0x140023689
   140023658:	mov    eax,DWORD PTR [rdx+0x4]
   14002365b:	and    eax,0xf
   14002365e:	cmp    al,0xf
   140023660:	jne    0x140023689
   140023662:	mov    BYTE PTR [rsp+0x20],bl
   140023666:	xor    r9d,r9d
   140023669:	jmp    0x14002367c
   14002366b:	test   BYTE PTR [rdx+0x4],0xf
   14002366f:	je     0x140023689
   140023671:	mov    BYTE PTR [rsp+0x20],0x1
   140023676:	mov    r9d,0xc0000000
   14002367c:	add    rdx,0x8
   140023680:	lea    rcx,[rbp+0x17]
   140023684:	call   0x140010794
   140023689:	inc    edi
   14002368b:	cmp    edi,DWORD PTR [rbp+0x3f]
   14002368e:	jb     0x140023639
   140023690:	mov    QWORD PTR [rbp+0x17],rsi
   140023694:	mov    eax,ebx
   140023696:	mov    rcx,QWORD PTR [rbp+0x4f]
   14002369a:	xor    rcx,rsp
   14002369d:	call   0x1400265a0
   1400236a2:	lea    r11,[rsp+0x90]
   1400236aa:	mov    rbx,QWORD PTR [r11+0x18]
   1400236ae:	mov    rsi,QWORD PTR [r11+0x20]
   1400236b2:	mov    rdi,QWORD PTR [r11+0x28]
   1400236b6:	mov    rsp,r11
   1400236b9:	pop    rbp
   1400236ba:	ret    
   1400236bb:	int3   
   1400236bc:	mov    rax,rsp
   1400236bf:	push   rbp
   1400236c0:	lea    rbp,[rax-0x68]
   1400236c4:	sub    rsp,0x160
   1400236cb:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   1400236d4:	mov    QWORD PTR [rax+0x10],rbx
   1400236d8:	mov    QWORD PTR [rax+0x18],rsi
   1400236dc:	mov    QWORD PTR [rax+0x20],rdi
   1400236e0:	mov    rax,QWORD PTR [rip+0x359a1]        # 0x140059088
   1400236e7:	xor    rax,rsp
   1400236ea:	mov    QWORD PTR [rbp+0x50],rax
   1400236ee:	lea    r9,[rsp+0x70]
   1400236f3:	lea    r8,[rsp+0x50]
   1400236f8:	lea    rdx,[rsp+0x4c]
   1400236fd:	call   QWORD PTR [rip+0x1d90d]        # 0x140041010
   140023703:	xor    esi,esi
   140023705:	test   eax,eax
   140023707:	jne    0x140023714
   140023709:	call   QWORD PTR [rip+0x1dcc9]        # 0x1400413d8
   14002370f:	jmp    0x140023924
   140023714:	cmp    DWORD PTR [rsp+0x4c],esi
   140023718:	jne    0x140023721
   14002371a:	xor    eax,eax
   14002371c:	jmp    0x140023924
   140023721:	mov    r9d,0x2
   140023727:	lea    r8d,[r9+0xa]
   14002372b:	lea    rdx,[rbp-0x40]
   14002372f:	mov    rcx,QWORD PTR [rsp+0x50]
   140023734:	call   QWORD PTR [rip+0x1d8c6]        # 0x140041000
   14002373a:	mov    edx,DWORD PTR [rbp-0x3c]
   14002373d:	mov    QWORD PTR [rsp+0x58],rsi
   140023742:	mov    QWORD PTR [rsp+0x60],rsi
   140023747:	mov    QWORD PTR [rsp+0x68],rsi
   14002374c:	lea    rcx,[rsp+0x58]
   140023751:	call   0x1400034c4
   140023756:	nop
   140023757:	mov    r8,QWORD PTR [rsp+0x60]
   14002375c:	mov    rdi,QWORD PTR [rsp+0x58]
   140023761:	sub    r8,rdi
   140023764:	mov    rdx,QWORD PTR [rsp+0x50]
   140023769:	mov    rcx,rdi
   14002376c:	call   0x1400265d0
   140023771:	mov    ebx,esi
   140023773:	cmp    DWORD PTR [rbp-0x40],esi
   140023776:	jbe    0x1400237b5
   140023778:	lea    r8,[rsp+0x40]
   14002377d:	mov    edx,ebx
   14002377f:	mov    rcx,rdi
   140023782:	call   QWORD PTR [rip+0x1d880]        # 0x140041008
   140023788:	mov    rcx,QWORD PTR [rsp+0x40]
   14002378d:	cmp    BYTE PTR [rcx],0x1
   140023790:	ja     0x1400237ae
   140023792:	mov    eax,DWORD PTR [rcx+0x4]
   140023795:	test   al,0x4
   140023797:	je     0x1400237a8
   140023799:	and    eax,0xfffffff0
   14002379c:	mov    DWORD PTR [rcx+0x4],eax
   14002379f:	or     DWORD PTR [rcx+0x4],0x12019f
   1400237a6:	jmp    0x1400237ae
   1400237a8:	and    eax,0xfffffff0
   1400237ab:	mov    DWORD PTR [rcx+0x4],eax
   1400237ae:	inc    ebx
   1400237b0:	cmp    ebx,DWORD PTR [rbp-0x40]
   1400237b3:	jb     0x140023778
   1400237b5:	lea    rcx,[rsp+0x40]
   1400237ba:	call   0x140024898
   1400237bf:	mov    ebx,eax
   1400237c1:	cmp    eax,0xe0000204
   1400237c6:	jne    0x1400237ea
   1400237c8:	call   0x140024798
   1400237cd:	test   eax,eax
   1400237cf:	jne    0x1400237de
   1400237d1:	call   QWORD PTR [rip+0x1dc01]        # 0x1400413d8
   1400237d7:	mov    ebx,eax
   1400237d9:	jmp    0x140023906
   1400237de:	lea    rcx,[rsp+0x40]
   1400237e3:	call   0x140024898
   1400237e8:	mov    ebx,eax
   1400237ea:	cmp    ebx,0x53a
   1400237f0:	jne    0x140023803
   1400237f2:	call   0x1400262fc
   1400237f7:	lea    rcx,[rsp+0x40]
   1400237fc:	call   0x140024898
   140023801:	mov    ebx,eax
   140023803:	test   ebx,ebx
   140023805:	jne    0x140023906
   14002380b:	mov    rdx,QWORD PTR [rsp+0x40]
   140023810:	lea    rcx,[rbp-0x80]
   140023814:	call   0x14000fe68
   140023819:	nop
   14002381a:	mov    rcx,QWORD PTR [rsp+0x40]
   14002381f:	call   QWORD PTR [rip+0x1dba3]        # 0x1400413c8
   140023825:	mov    rcx,rdi
   140023828:	call   QWORD PTR [rip+0x1d94a]        # 0x140041178
   14002382e:	test   eax,eax
   140023830:	je     0x14002383e
   140023832:	mov    rdx,rdi
   140023835:	lea    rcx,[rbp-0x80]
   140023839:	call   0x1400100d0
   14002383e:	cmp    DWORD PTR [rbp-0x80],esi
   140023841:	jne    0x14002384d
   140023843:	mov    ebx,0x53a
   140023848:	jmp    0x1400238fc
   14002384d:	lea    rcx,[rbp-0x80]
   140023851:	call   0x14002496c
   140023856:	mov    ebx,eax
   140023858:	test   eax,eax
   14002385a:	jne    0x1400238fc
   140023860:	mov    r8,QWORD PTR [rip+0x37299]        # 0x14005ab00
   140023867:	mov    rdx,QWORD PTR [rip+0x3729a]        # 0x14005ab08
   14002386e:	lea    rcx,[rbp-0x28]
   140023872:	call   0x14000fca0
   140023877:	nop
   140023878:	lea    rax,[rip+0x21f29]        # 0x1400457a8
   14002387f:	mov    QWORD PTR [rbp-0x30],rax
   140023883:	lea    rax,[rip+0x21f06]        # 0x140045790
   14002388a:	mov    QWORD PTR [rbp-0x30],rax
   14002388e:	mov    DWORD PTR [rsp+0x40],esi
   140023892:	mov    DWORD PTR [rsp+0x48],esi
   140023896:	lea    r8d,[rbx+0x1]
   14002389a:	lea    rdx,[rip+0x22927]        # 0x1400461c8
   1400238a1:	xor    ecx,ecx
   1400238a3:	call   QWORD PTR [rip+0x1d8ef]        # 0x140041198
   1400238a9:	test   rax,rax
   1400238ac:	je     0x1400238f2
   1400238ae:	mov    r9,rax
   1400238b1:	lea    r8,[rsp+0x48]
   1400238b6:	lea    rdx,[rsp+0x40]
   1400238bb:	lea    rcx,[rbp-0x28]
   1400238bf:	call   0x14000f5d4
   1400238c4:	cmp    DWORD PTR [rsp+0x48],esi
   1400238c8:	je     0x1400238f2
   1400238ca:	mov    QWORD PTR [rsp+0x30],rsi
   1400238cf:	mov    QWORD PTR [rsp+0x28],rdi
   1400238d4:	mov    QWORD PTR [rsp+0x20],rsi
   1400238d9:	xor    r9d,r9d
   1400238dc:	lea    edx,[rbx+0x1]
   1400238df:	lea    r8d,[rbx+0x4]
   1400238e3:	mov    rcx,QWORD PTR [rip+0x3713e]        # 0x14005aa28
   1400238ea:	call   QWORD PTR [rip+0x1d850]        # 0x140041140
   1400238f0:	mov    ebx,eax
   1400238f2:	lea    rcx,[rbp-0x28]
   1400238f6:	call   0x14000fd20
   1400238fb:	nop
   1400238fc:	lea    rcx,[rbp-0x80]
   140023900:	call   0x14000fed0
   140023905:	nop
   140023906:	test   rdi,rdi
   140023909:	je     0x140023922
   14002390b:	mov    rcx,rdi
   14002390e:	call   0x14002657c
   140023913:	mov    QWORD PTR [rsp+0x58],rsi
   140023918:	mov    QWORD PTR [rsp+0x60],rsi
   14002391d:	mov    QWORD PTR [rsp+0x68],rsi
   140023922:	mov    eax,ebx
   140023924:	mov    rcx,QWORD PTR [rbp+0x50]
   140023928:	xor    rcx,rsp
   14002392b:	call   0x1400265a0
   140023930:	lea    r11,[rsp+0x160]
   140023938:	mov    rbx,QWORD PTR [r11+0x18]
   14002393c:	mov    rsi,QWORD PTR [r11+0x20]
   140023940:	mov    rdi,QWORD PTR [r11+0x28]
   140023944:	mov    rsp,r11
   140023947:	pop    rbp
   140023948:	ret    
   140023949:	int3   
   14002394a:	int3   
   14002394b:	int3   
   14002394c:	mov    rax,rsp
   14002394f:	push   rbp
   140023950:	push   rdi
   140023951:	push   r14
   140023953:	lea    rbp,[rax-0x5f]
   140023957:	sub    rsp,0xb0
   14002395e:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   140023966:	mov    QWORD PTR [rax+0x10],rbx
   14002396a:	mov    QWORD PTR [rax+0x18],rsi
   14002396e:	mov    rax,QWORD PTR [rip+0x35713]        # 0x140059088
   140023975:	xor    rax,rsp
   140023978:	mov    QWORD PTR [rbp+0x3f],rax
   14002397c:	mov    rbx,rcx
   14002397f:	call   QWORD PTR [rip+0x1d6d3]        # 0x140041058
   140023985:	xor    r14d,r14d
   140023988:	test   eax,eax
   14002398a:	jne    0x1400239a6
   14002398c:	call   QWORD PTR [rip+0x1da46]        # 0x1400413d8
   140023992:	mov    ecx,eax
   140023994:	movzx  eax,ax
   140023997:	or     eax,0x80070000
   14002399c:	test   ecx,ecx
   14002399e:	cmovle eax,ecx
   1400239a1:	jmp    0x140023b5a
   1400239a6:	mov    rcx,rbx
   1400239a9:	call   QWORD PTR [rip+0x1d789]        # 0x140041138
   1400239af:	mov    DWORD PTR [rbp-0x15],eax
   1400239b2:	mov    rdi,r14
   1400239b5:	mov    QWORD PTR [rbp-0x9],r14
   1400239b9:	mov    QWORD PTR [rbp-0x1],r14
   1400239bd:	mov    QWORD PTR [rbp+0x7],r14
   1400239c1:	lea    r8,[rbp+0xf]
   1400239c5:	lea    rdx,[rbp-0x19]
   1400239c9:	mov    rcx,rbx
   1400239cc:	call   QWORD PTR [rip+0x1d786]        # 0x140041158
   1400239d2:	test   eax,eax
   1400239d4:	jne    0x1400239de
   1400239d6:	call   QWORD PTR [rip+0x1d9fc]        # 0x1400413d8
   1400239dc:	jmp    0x140023a23
   1400239de:	mov    eax,0x8000
   1400239e3:	test   WORD PTR [rbp-0x19],ax
   1400239e7:	jne    0x140023a39
   1400239e9:	mov    edx,DWORD PTR [rbp-0x15]
   1400239ec:	lea    rcx,[rbp-0x9]
   1400239f0:	call   0x1400034c4
   1400239f5:	lea    r8,[rbp-0x15]
   1400239f9:	mov    rdi,QWORD PTR [rbp-0x9]
   1400239fd:	mov    rdx,rdi
   140023a00:	mov    rcx,rbx
   140023a03:	call   QWORD PTR [rip+0x1d707]        # 0x140041110
   140023a09:	test   eax,eax
   140023a0b:	je     0x140023a15
   140023a0d:	call   QWORD PTR [rip+0x1d9c5]        # 0x1400413d8
   140023a13:	jmp    0x140023a18
   140023a15:	mov    eax,r14d
   140023a18:	cmp    eax,0xea
   140023a1d:	je     0x1400239e9
   140023a1f:	test   eax,eax
   140023a21:	je     0x140023a36
   140023a23:	movzx  ebx,ax
   140023a26:	or     ebx,0x80070000
   140023a2c:	test   eax,eax
   140023a2e:	cmovle ebx,eax
   140023a31:	jmp    0x140023b3f
   140023a36:	mov    rbx,rdi
   140023a39:	mov    QWORD PTR [rbp+0x2f],r14
   140023a3d:	mov    QWORD PTR [rbp+0x37],r14
   140023a41:	mov    QWORD PTR [rbp+0x37],0x7
   140023a49:	mov    QWORD PTR [rbp+0x2f],r14
   140023a4d:	mov    WORD PTR [rbp+0x1f],r14w
   140023a52:	lea    rdx,[rip+0x222d7]        # 0x140045d30
   140023a59:	lea    rcx,[rbp+0x1f]
   140023a5d:	call   0x14000324c
   140023a62:	nop
   140023a63:	lea    rdx,[rip+0x23fbe]        # 0x140047a28
   140023a6a:	lea    rcx,[rbp+0x1f]
   140023a6e:	call   0x1400030a8
   140023a73:	lea    rdx,[rbp+0x1f]
   140023a77:	cmp    QWORD PTR [rbp+0x37],0x8
   140023a7c:	cmovae rdx,QWORD PTR [rbp+0x1f]
   140023a81:	mov    QWORD PTR [rsp+0x40],r14
   140023a86:	lea    rax,[rbp-0x11]
   140023a8a:	mov    QWORD PTR [rsp+0x38],rax
   140023a8f:	mov    QWORD PTR [rsp+0x30],r14
   140023a94:	mov    DWORD PTR [rsp+0x28],0x20006
   140023a9c:	mov    DWORD PTR [rsp+0x20],r14d
   140023aa1:	xor    r9d,r9d
   140023aa4:	xor    r8d,r8d
   140023aa7:	mov    rcx,0xffffffff80000002
   140023aae:	call   QWORD PTR [rip+0x1d5e4]        # 0x140041098
   140023ab4:	test   eax,eax
   140023ab6:	je     0x140023ac8
   140023ab8:	movzx  ebx,ax
   140023abb:	or     ebx,0x80070000
   140023ac1:	test   eax,eax
   140023ac3:	cmovle ebx,eax
   140023ac6:	jmp    0x140023b1e
   140023ac8:	mov    eax,DWORD PTR [rbp-0x15]
   140023acb:	mov    DWORD PTR [rsp+0x28],eax
   140023acf:	mov    QWORD PTR [rsp+0x20],rbx
   140023ad4:	mov    r9d,0x3
   140023ada:	xor    r8d,r8d
   140023add:	lea    rdx,[rip+0x23fbc]        # 0x140047aa0
   140023ae4:	mov    rcx,QWORD PTR [rbp-0x11]
   140023ae8:	call   QWORD PTR [rip+0x1d57a]        # 0x140041068
   140023aee:	mov    esi,eax
   140023af0:	mov    rcx,QWORD PTR [rbp-0x11]
   140023af4:	call   QWORD PTR [rip+0x1d53e]        # 0x140041038
   140023afa:	test   esi,esi
   140023afc:	jne    0x140023b10
   140023afe:	mov    rcx,rbx
   140023b01:	call   0x14002356c
   140023b06:	mov    rcx,rbx
   140023b09:	call   0x1400236bc
   140023b0e:	mov    esi,eax
   140023b10:	movzx  ebx,si
   140023b13:	or     ebx,0x80070000
   140023b19:	test   esi,esi
   140023b1b:	cmovle ebx,esi
   140023b1e:	cmp    QWORD PTR [rbp+0x37],0x8
   140023b23:	jb     0x140023b2e
   140023b25:	mov    rcx,QWORD PTR [rbp+0x1f]
   140023b29:	call   0x14002657c
   140023b2e:	mov    QWORD PTR [rbp+0x37],0x7
   140023b36:	mov    QWORD PTR [rbp+0x2f],r14
   140023b3a:	mov    WORD PTR [rbp+0x1f],r14w
   140023b3f:	test   rdi,rdi
   140023b42:	je     0x140023b58
   140023b44:	mov    rcx,rdi
   140023b47:	call   0x14002657c
   140023b4c:	mov    QWORD PTR [rbp-0x9],r14
   140023b50:	mov    QWORD PTR [rbp-0x1],r14
   140023b54:	mov    QWORD PTR [rbp+0x7],r14
   140023b58:	mov    eax,ebx
   140023b5a:	mov    rcx,QWORD PTR [rbp+0x3f]
   140023b5e:	xor    rcx,rsp
   140023b61:	call   0x1400265a0
   140023b66:	lea    r11,[rsp+0xb0]
   140023b6e:	mov    rbx,QWORD PTR [r11+0x28]
   140023b72:	mov    rsi,QWORD PTR [r11+0x30]
   140023b76:	mov    rsp,r11
   140023b79:	pop    r14
   140023b7b:	pop    rdi
   140023b7c:	pop    rbp
   140023b7d:	ret    
   140023b7e:	int3   
   140023b7f:	int3   
   140023b80:	mov    QWORD PTR [rsp+0x8],rbx
   140023b85:	push   rdi
   140023b86:	sub    rsp,0x20
   140023b8a:	mov    rdi,rdx
   140023b8d:	xor    edx,edx
   140023b8f:	mov    rbx,rcx
   140023b92:	lea    r8d,[rdx+0x38]
   140023b96:	mov    rcx,rdi
   140023b99:	call   0x14002bb90
   140023b9e:	xor    eax,eax
   140023ba0:	add    rbx,0x40
   140023ba4:	mov    QWORD PTR [rdi+0x8],rax
   140023ba8:	mov    QWORD PTR [rdi+0x10],rax
   140023bac:	mov    DWORD PTR [rdi],0x633
   140023bb2:	cmp    QWORD PTR [rbx+0x18],0x8
   140023bb7:	jb     0x140023bbc
   140023bb9:	mov    rbx,QWORD PTR [rbx]
   140023bbc:	mov    QWORD PTR [rdi+0x18],rbx
   140023bc0:	mov    rbx,QWORD PTR [rsp+0x30]
   140023bc5:	mov    QWORD PTR [rdi+0x20],rax
   140023bc9:	add    rsp,0x20
   140023bcd:	pop    rdi
   140023bce:	ret    
   140023bcf:	int3   
   140023bd0:	mov    rax,rsp
   140023bd3:	push   rbp
   140023bd4:	push   rdi
   140023bd5:	push   r14
   140023bd7:	mov    rbp,rsp
   140023bda:	sub    rsp,0x80
   140023be1:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140023be9:	mov    QWORD PTR [rax+0x10],rbx
   140023bed:	mov    QWORD PTR [rax+0x18],rsi
   140023bf1:	mov    r14,r8
   140023bf4:	mov    ebx,edx
   140023bf6:	mov    rdi,QWORD PTR [rcx+0x10]
   140023bfa:	xor    esi,esi
   140023bfc:	mov    QWORD PTR [rbp-0x50],rsi
   140023c00:	and    QWORD PTR [rbp-0x48],rsi
   140023c04:	and    QWORD PTR [rbp-0x40],rsi
   140023c08:	test   r9d,r9d
   140023c0b:	je     0x140023c1d
   140023c0d:	lea    rcx,[rbp-0x50]
   140023c11:	call   0x140023378
   140023c16:	mov    rsi,QWORD PTR [rbp-0x50]
   140023c1a:	mov    rdi,rsi
   140023c1d:	mov    edx,0x1
   140023c22:	lea    rcx,[rbp-0x38]
   140023c26:	call   QWORD PTR [rip+0x1d464]        # 0x140041090
   140023c2c:	test   eax,eax
   140023c2e:	je     0x140023d5c
   140023c34:	test   bl,0x1
   140023c37:	je     0x140023c64
   140023c39:	lea    r8,[rbp+0x20]
   140023c3d:	lea    rdx,[rbp-0x60]
   140023c41:	mov    rcx,rdi
   140023c44:	call   QWORD PTR [rip+0x1d436]        # 0x140041080
   140023c4a:	test   eax,eax
   140023c4c:	je     0x140023d5c
   140023c52:	mov    r8d,DWORD PTR [rbp+0x20]
   140023c56:	mov    rdx,QWORD PTR [rbp-0x60]
   140023c5a:	lea    rcx,[rbp-0x38]
   140023c5e:	call   QWORD PTR [rip+0x1d424]        # 0x140041088
   140023c64:	test   bl,0x2
   140023c67:	je     0x140023c94
   140023c69:	lea    r8,[rbp+0x20]
   140023c6d:	lea    rdx,[rbp-0x60]
   140023c71:	mov    rcx,rdi
   140023c74:	call   QWORD PTR [rip+0x1d3e6]        # 0x140041060
   140023c7a:	test   eax,eax
   140023c7c:	je     0x140023d5c
   140023c82:	mov    r8d,DWORD PTR [rbp+0x20]
   140023c86:	mov    rdx,QWORD PTR [rbp-0x60]
   140023c8a:	lea    rcx,[rbp-0x38]
   140023c8e:	call   QWORD PTR [rip+0x1d414]        # 0x1400410a8
   140023c94:	test   bl,0x4
   140023c97:	je     0x140023ccb
   140023c99:	lea    r9,[rbp+0x20]
   140023c9d:	lea    r8,[rbp-0x58]
   140023ca1:	lea    rdx,[rbp-0x60]
   140023ca5:	mov    rcx,rdi
   140023ca8:	call   QWORD PTR [rip+0x1d362]        # 0x140041010
   140023cae:	test   eax,eax
   140023cb0:	je     0x140023d5c
   140023cb6:	mov    r9d,DWORD PTR [rbp+0x20]
   140023cba:	mov    r8,QWORD PTR [rbp-0x58]
   140023cbe:	mov    edx,DWORD PTR [rbp-0x60]
   140023cc1:	lea    rcx,[rbp-0x38]
   140023cc5:	call   QWORD PTR [rip+0x1d47d]        # 0x140041148
   140023ccb:	test   bl,0x8
   140023cce:	je     0x140023cfe
   140023cd0:	lea    r9,[rbp+0x20]
   140023cd4:	lea    r8,[rbp-0x58]
   140023cd8:	lea    rdx,[rbp-0x60]
   140023cdc:	mov    rcx,rdi
   140023cdf:	call   QWORD PTR [rip+0x1d393]        # 0x140041078
   140023ce5:	test   eax,eax
   140023ce7:	je     0x140023d5c
   140023ce9:	mov    r9d,DWORD PTR [rbp+0x20]
   140023ced:	mov    r8,QWORD PTR [rbp-0x58]
   140023cf1:	mov    edx,DWORD PTR [rbp-0x60]
   140023cf4:	lea    rcx,[rbp-0x38]
   140023cf8:	call   QWORD PTR [rip+0x1d372]        # 0x140041070
   140023cfe:	and    DWORD PTR [rbp+0x38],0x0
   140023d02:	lea    r8,[rbp+0x38]
   140023d06:	xor    edx,edx
   140023d08:	lea    rcx,[rbp-0x38]
   140023d0c:	call   QWORD PTR [rip+0x1d3fe]        # 0x140041110
   140023d12:	test   eax,eax
   140023d14:	jne    0x140023d21
   140023d16:	call   QWORD PTR [rip+0x1d6bc]        # 0x1400413d8
   140023d1c:	cmp    eax,0x7a
   140023d1f:	jne    0x140023d62
   140023d21:	mov    edx,DWORD PTR [rbp+0x38]
   140023d24:	mov    ecx,0x40
   140023d29:	call   QWORD PTR [rip+0x1d5b1]        # 0x1400412e0
   140023d2f:	mov    rbx,rax
   140023d32:	test   rax,rax
   140023d35:	jne    0x140023d3e
   140023d37:	mov    ebx,0x8007000e
   140023d3c:	jmp    0x140023d77
   140023d3e:	lea    r8,[rbp+0x38]
   140023d42:	mov    rdx,rax
   140023d45:	lea    rcx,[rbp-0x38]
   140023d49:	call   QWORD PTR [rip+0x1d3c1]        # 0x140041110
   140023d4f:	test   eax,eax
   140023d51:	jne    0x140023d72
   140023d53:	mov    rcx,rbx
   140023d56:	call   QWORD PTR [rip+0x1d66c]        # 0x1400413c8
   140023d5c:	call   QWORD PTR [rip+0x1d676]        # 0x1400413d8
   140023d62:	movzx  ebx,ax
   140023d65:	or     ebx,0x80070000
   140023d6b:	test   eax,eax
   140023d6d:	cmovle ebx,eax
   140023d70:	jmp    0x140023d77
   140023d72:	mov    QWORD PTR [r14],rbx
   140023d75:	xor    ebx,ebx
   140023d77:	test   rsi,rsi
   140023d7a:	je     0x140023d93
   140023d7c:	mov    rcx,rsi
   140023d7f:	call   0x14002657c
   140023d84:	and    QWORD PTR [rbp-0x50],0x0
   140023d89:	and    QWORD PTR [rbp-0x48],0x0
   140023d8e:	and    QWORD PTR [rbp-0x40],0x0
   140023d93:	mov    eax,ebx
   140023d95:	lea    r11,[rsp+0x80]
   140023d9d:	mov    rbx,QWORD PTR [r11+0x28]
   140023da1:	mov    rsi,QWORD PTR [r11+0x30]
   140023da5:	mov    rsp,r11
   140023da8:	pop    r14
   140023daa:	pop    rdi
   140023dab:	pop    rbp
   140023dac:	ret    
   140023dad:	int3   
   140023dae:	int3   
   140023daf:	int3   
   140023db0:	mov    rax,rsp
   140023db3:	push   rbp
   140023db4:	lea    rbp,[rax-0x5f]
   140023db8:	sub    rsp,0x90
   140023dbf:	mov    QWORD PTR [rbp+0x4f],0xfffffffffffffffe
   140023dc7:	mov    QWORD PTR [rax+0x8],rbx
   140023dcb:	mov    QWORD PTR [rax+0x10],rdi
   140023dcf:	mov    QWORD PTR [rax+0x18],r14
   140023dd3:	mov    rdi,r8
   140023dd6:	mov    r14d,edx
   140023dd9:	mov    rbx,rcx
   140023ddc:	mov    edx,0x1
   140023de1:	lea    rcx,[rbp+0x27]
   140023de5:	call   QWORD PTR [rip+0x1d2a5]        # 0x140041090
   140023deb:	test   eax,eax
   140023ded:	jne    0x140023e09
   140023def:	call   QWORD PTR [rip+0x1d5e3]        # 0x1400413d8
   140023df5:	mov    ecx,eax
   140023df7:	movzx  eax,ax
   140023dfa:	or     eax,0x80070000
   140023dff:	test   ecx,ecx
   140023e01:	cmovle eax,ecx
   140023e04:	jmp    0x140023f89
   140023e09:	lea    rdx,[rbx+0x10]
   140023e0d:	lea    rcx,[rbp-0x11]
   140023e11:	call   0x14002430c
   140023e16:	nop
   140023e17:	test   r14b,0x1
   140023e1b:	mov    rcx,QWORD PTR [rbp-0x11]
   140023e1f:	cmovne rcx,rdi
   140023e23:	lea    r8,[rbp+0x7f]
   140023e27:	lea    rdx,[rbp+0x17]
   140023e2b:	call   QWORD PTR [rip+0x1d24f]        # 0x140041080
   140023e31:	test   eax,eax
   140023e33:	je     0x140023ed4
   140023e39:	mov    r8d,DWORD PTR [rbp+0x7f]
   140023e3d:	mov    rdx,QWORD PTR [rbp+0x17]
   140023e41:	lea    rcx,[rbp+0x27]
   140023e45:	call   QWORD PTR [rip+0x1d23d]        # 0x140041088
   140023e4b:	test   r14b,0x2
   140023e4f:	mov    rcx,QWORD PTR [rbp-0x11]
   140023e53:	cmovne rcx,rdi
   140023e57:	lea    r8,[rbp+0x7f]
   140023e5b:	lea    rdx,[rbp+0x1f]
   140023e5f:	call   QWORD PTR [rip+0x1d1fb]        # 0x140041060
   140023e65:	test   eax,eax
   140023e67:	je     0x140023ed4
   140023e69:	mov    r8d,DWORD PTR [rbp+0x7f]
   140023e6d:	mov    rdx,QWORD PTR [rbp+0x1f]
   140023e71:	lea    rcx,[rbp+0x27]
   140023e75:	call   QWORD PTR [rip+0x1d22d]        # 0x1400410a8
   140023e7b:	test   r14b,0x4
   140023e7f:	mov    rcx,QWORD PTR [rbp-0x11]
   140023e83:	cmovne rcx,rdi
   140023e87:	lea    r9,[rbp+0x7f]
   140023e8b:	lea    r8,[rbp+0x7]
   140023e8f:	lea    rdx,[rbp-0x19]
   140023e93:	call   QWORD PTR [rip+0x1d177]        # 0x140041010
   140023e99:	test   eax,eax
   140023e9b:	je     0x140023ed4
   140023e9d:	mov    r9d,DWORD PTR [rbp+0x7f]
   140023ea1:	mov    r8,QWORD PTR [rbp+0x7]
   140023ea5:	mov    edx,DWORD PTR [rbp-0x19]
   140023ea8:	lea    rcx,[rbp+0x27]
   140023eac:	call   QWORD PTR [rip+0x1d296]        # 0x140041148
   140023eb2:	test   r14b,0x8
   140023eb6:	mov    rcx,QWORD PTR [rbp-0x11]
   140023eba:	cmovne rcx,rdi
   140023ebe:	lea    r9,[rbp+0x7f]
   140023ec2:	lea    r8,[rbp+0xf]
   140023ec6:	lea    rdx,[rbp-0x19]
   140023eca:	call   QWORD PTR [rip+0x1d1a8]        # 0x140041078
   140023ed0:	test   eax,eax
   140023ed2:	jne    0x140023eea
   140023ed4:	call   QWORD PTR [rip+0x1d4fe]        # 0x1400413d8
   140023eda:	movzx  ebx,ax
   140023edd:	or     ebx,0x80070000
   140023ee3:	test   eax,eax
   140023ee5:	cmovle ebx,eax
   140023ee8:	jmp    0x140023f68
   140023eea:	mov    r9d,DWORD PTR [rbp+0x7f]
   140023eee:	mov    r8,QWORD PTR [rbp+0xf]
   140023ef2:	mov    edx,DWORD PTR [rbp-0x19]
   140023ef5:	lea    rcx,[rbp+0x27]
   140023ef9:	call   QWORD PTR [rip+0x1d171]        # 0x140041070
   140023eff:	mov    eax,0x100
   140023f04:	mov    DWORD PTR [rbp-0x15],eax
   140023f07:	mov    edi,DWORD PTR [rbp+0x7f]
   140023f0a:	mov    edx,eax
   140023f0c:	lea    rcx,[rbx+0x10]
   140023f10:	call   0x1400034c4
   140023f15:	lea    r8,[rbp-0x15]
   140023f19:	mov    rdx,QWORD PTR [rbx+0x10]
   140023f1d:	lea    rcx,[rbp+0x27]
   140023f21:	call   QWORD PTR [rip+0x1d1e9]        # 0x140041110
   140023f27:	test   eax,eax
   140023f29:	jne    0x140023f3f
   140023f2b:	call   QWORD PTR [rip+0x1d4a7]        # 0x1400413d8
   140023f31:	mov    edi,eax
   140023f33:	cmp    eax,0xea
   140023f38:	jne    0x140023f5a
   140023f3a:	mov    eax,DWORD PTR [rbp-0x15]
   140023f3d:	jmp    0x140023f0a
   140023f3f:	mov    rcx,QWORD PTR [rbx+0x10]
   140023f43:	call   QWORD PTR [rip+0x1d10f]        # 0x140041058
   140023f49:	test   eax,eax
   140023f4b:	je     0x140023f5a
   140023f4d:	mov    rcx,QWORD PTR [rbx+0x10]
   140023f51:	call   0x14002394c
   140023f56:	mov    ebx,eax
   140023f58:	jmp    0x140023f68
   140023f5a:	movzx  ebx,di
   140023f5d:	or     ebx,0x80070000
   140023f63:	test   edi,edi
   140023f65:	cmovle ebx,edi
   140023f68:	cmp    QWORD PTR [rbp-0x11],0x0
   140023f6d:	je     0x140023f87
   140023f6f:	mov    rcx,QWORD PTR [rbp-0x11]
   140023f73:	call   0x14002657c
   140023f78:	and    QWORD PTR [rbp-0x11],0x0
   140023f7d:	and    QWORD PTR [rbp-0x9],0x0
   140023f82:	and    QWORD PTR [rbp-0x1],0x0
   140023f87:	mov    eax,ebx
   140023f89:	lea    r11,[rsp+0x90]
   140023f91:	mov    rbx,QWORD PTR [r11+0x10]
   140023f95:	mov    rdi,QWORD PTR [r11+0x18]
   140023f99:	mov    r14,QWORD PTR [r11+0x20]
   140023f9d:	mov    rsp,r11
   140023fa0:	pop    rbp
   140023fa1:	ret    
   140023fa2:	int3   
   140023fa3:	int3   
   140023fa4:	mov    rax,QWORD PTR [rcx+0x28]
   140023fa8:	mov    rdx,rcx
   140023fab:	mov    QWORD PTR [r9],rax
   140023fae:	mov    rcx,QWORD PTR [rcx+0x30]
   140023fb2:	mov    rax,QWORD PTR [rsp+0x28]
   140023fb7:	sub    rcx,QWORD PTR [rdx+0x28]
   140023fbb:	sar    rcx,0x5
   140023fbf:	mov    DWORD PTR [rax],ecx
   140023fc1:	mov    rax,QWORD PTR [rsp+0x30]
   140023fc6:	and    DWORD PTR [rax],0x0
   140023fc9:	xor    eax,eax
   140023fcb:	ret    
   140023fcc:	sub    rsp,0x28
   140023fd0:	lea    rdx,[rip+0x22059]        # 0x140046030
   140023fd7:	mov    rcx,r9
   140023fda:	call   QWORD PTR [rip+0x1d0c0]        # 0x1400410a0
   140023fe0:	xor    eax,eax
   140023fe2:	add    rsp,0x28
   140023fe6:	ret    
   140023fe7:	int3   
   140023fe8:	and    QWORD PTR [rdx],0x0
   140023fec:	and    DWORD PTR [r8],0x0
   140023ff0:	mov    eax,0x80004001
   140023ff5:	ret    
   140023ff6:	int3   
   140023ff7:	int3   
   140023ff8:	sub    rsp,0x28
   140023ffc:	xor    r9d,r9d
   140023fff:	mov    QWORD PTR [r8],r9
   140024002:	mov    rax,QWORD PTR [rdx]
   140024005:	cmp    rax,QWORD PTR [rip+0x217bc]        # 0x1400457c8
   14002400c:	jne    0x140024020
   14002400e:	mov    rax,QWORD PTR [rdx+0x8]
   140024012:	cmp    rax,QWORD PTR [rip+0x217b7]        # 0x1400457d0
   140024019:	jne    0x140024020
   14002401b:	mov    QWORD PTR [r8],rcx
   14002401e:	jmp    0x14002407b
   140024020:	mov    rax,QWORD PTR [rdx]
   140024023:	cmp    rax,QWORD PTR [rip+0x2178e]        # 0x1400457b8
   14002402a:	jne    0x140024046
   14002402c:	mov    rax,QWORD PTR [rdx+0x8]
   140024030:	cmp    rax,QWORD PTR [rip+0x21789]        # 0x1400457c0
   140024037:	jne    0x140024046
   140024039:	mov    QWORD PTR [r8],r9
   14002403c:	mov    eax,0x80004002
   140024041:	add    rsp,0x28
   140024045:	ret    
   140024046:	mov    rax,QWORD PTR [rdx]
   140024049:	cmp    rax,QWORD PTR [rip+0x21718]        # 0x140045768
   140024050:	jne    0x14002405f
   140024052:	mov    rax,QWORD PTR [rdx+0x8]
   140024056:	cmp    rax,QWORD PTR [rip+0x21713]        # 0x140045770
   14002405d:	je     0x140024039
   14002405f:	mov    rax,QWORD PTR [rdx]
   140024062:	cmp    rax,QWORD PTR [rip+0x2170f]        # 0x140045778
   140024069:	jne    0x14002403c
   14002406b:	mov    rax,QWORD PTR [rdx+0x8]
   14002406f:	cmp    rax,QWORD PTR [rip+0x2170a]        # 0x140045780
   140024076:	jne    0x14002403c
   140024078:	mov    QWORD PTR [r8],r9
   14002407b:	mov    rcx,QWORD PTR [r8]
   14002407e:	test   rcx,rcx
   140024081:	je     0x14002403c
   140024083:	mov    rax,QWORD PTR [rcx]
   140024086:	call   QWORD PTR [rax+0x8]
   140024089:	xor    eax,eax
   14002408b:	jmp    0x140024041
   14002408d:	int3   
   14002408e:	int3   
   14002408f:	int3   
   140024090:	mov    rax,rsp
   140024093:	mov    QWORD PTR [rax+0x20],r9
   140024097:	mov    QWORD PTR [rax+0x8],rcx
   14002409b:	push   rbp
   14002409c:	push   rdi
   14002409d:	push   r14
   14002409f:	mov    rbp,rsp
   1400240a2:	sub    rsp,0x60
   1400240a6:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   1400240ae:	mov    QWORD PTR [rax+0x10],rbx
   1400240b2:	mov    QWORD PTR [rax+0x18],rsi
   1400240b6:	mov    rsi,rcx
   1400240b9:	lea    rax,[rip+0x23b38]        # 0x140047bf8
   1400240c0:	mov    QWORD PTR [rcx],rax
   1400240c3:	xor    r14d,r14d
   1400240c6:	mov    DWORD PTR [rcx+0x8],r14d
   1400240ca:	lea    rax,[rip+0x23ab7]        # 0x140047b88
   1400240d1:	mov    QWORD PTR [rcx],rax
   1400240d4:	mov    QWORD PTR [rcx+0x10],r14
   1400240d8:	mov    QWORD PTR [rcx+0x18],r14
   1400240dc:	mov    QWORD PTR [rcx+0x20],r14
   1400240e0:	lea    rdi,[rcx+0x28]
   1400240e4:	mov    QWORD PTR [rdi],r14
   1400240e7:	mov    QWORD PTR [rdi+0x8],r14
   1400240eb:	mov    QWORD PTR [rdi+0x10],r14
   1400240ef:	add    rcx,0x40
   1400240f3:	mov    QWORD PTR [rcx+0x18],0x7
   1400240fb:	mov    QWORD PTR [rcx+0x10],r14
   1400240ff:	mov    WORD PTR [rcx],r14w
   140024103:	lea    rdx,[rip+0x23936]        # 0x140047a40
   14002410a:	call   0x14000324c
   14002410f:	nop
   140024110:	lea    rcx,[rsi+0x10]
   140024114:	call   0x1400233e0
   140024119:	test   eax,eax
   14002411b:	jns    0x140024152
   14002411d:	lea    rax,[rip+0x23954]        # 0x140047a78
   140024124:	mov    QWORD PTR [rbp+0x38],rax
   140024128:	lea    rdx,[rbp+0x38]
   14002412c:	lea    rcx,[rbp-0x38]
   140024130:	call   0x140029e0c
   140024135:	nop
   140024136:	lea    rax,[rip+0x2107b]        # 0x1400451b8
   14002413d:	mov    QWORD PTR [rbp-0x38],rax
   140024141:	lea    rdx,[rip+0x32310]        # 0x140056458
   140024148:	lea    rcx,[rbp-0x38]
   14002414c:	call   0x140029fe8
   140024151:	int3   
   140024152:	lea    rax,[rip+0x212d7]        # 0x140045430
   140024159:	mov    QWORD PTR [rbp-0x20],rax
   14002415d:	mov    DWORD PTR [rbp-0x18],0x4
   140024164:	lea    rax,[rip+0x239b5]        # 0x140047b20
   14002416b:	mov    QWORD PTR [rbp-0x10],rax
   14002416f:	mov    DWORD PTR [rbp-0x8],0x30000
   140024176:	lea    rdx,[rbp-0x20]
   14002417a:	mov    rcx,rdi
   14002417d:	call   0x140024488
   140024182:	mov    DWORD PTR [rbp-0x18],0x2
   140024189:	lea    rax,[rip+0x239b8]        # 0x140047b48
   140024190:	mov    QWORD PTR [rbp-0x10],rax
   140024194:	lea    rdx,[rbp-0x20]
   140024198:	mov    rcx,rdi
   14002419b:	call   0x140024488
   1400241a0:	mov    DWORD PTR [rbp-0x18],0x1
   1400241a7:	lea    rax,[rip+0x23922]        # 0x140047ad0
   1400241ae:	mov    QWORD PTR [rbp-0x10],rax
   1400241b2:	lea    rdx,[rbp-0x20]
   1400241b6:	mov    rcx,rdi
   1400241b9:	call   0x140024488
   1400241be:	mov    DWORD PTR [rbp-0x18],0xf
   1400241c5:	lea    rax,[rip+0x2393c]        # 0x140047b08
   1400241cc:	mov    QWORD PTR [rbp-0x10],rax
   1400241d0:	mov    DWORD PTR [rbp-0x8],0x20000
   1400241d7:	lea    rdx,[rbp-0x20]
   1400241db:	mov    rcx,rdi
   1400241de:	call   0x140024488
   1400241e3:	nop
   1400241e4:	mov    rax,rsi
   1400241e7:	lea    r11,[rsp+0x60]
   1400241ec:	mov    rbx,QWORD PTR [r11+0x28]
   1400241f0:	mov    rsi,QWORD PTR [r11+0x30]
   1400241f4:	mov    rsp,r11
   1400241f7:	pop    r14
   1400241f9:	pop    rdi
   1400241fa:	pop    rbp
   1400241fb:	ret    
   1400241fc:	mov    rax,rsp
   1400241ff:	mov    QWORD PTR [rax+0x8],rcx
   140024203:	push   rdi
   140024204:	sub    rsp,0x30
   140024208:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140024210:	mov    QWORD PTR [rax+0x10],rbx
   140024214:	mov    QWORD PTR [rax+0x18],rsi
   140024218:	mov    edi,edx
   14002421a:	mov    rbx,rcx
   14002421d:	cmp    QWORD PTR [rcx+0x58],0x8
   140024222:	jb     0x14002422d
   140024224:	mov    rcx,QWORD PTR [rcx+0x40]
   140024228:	call   0x14002657c
   14002422d:	mov    QWORD PTR [rbx+0x58],0x7
   140024235:	xor    esi,esi
   140024237:	mov    QWORD PTR [rbx+0x50],rsi
   14002423b:	mov    WORD PTR [rbx+0x40],si
   14002423f:	mov    rcx,QWORD PTR [rbx+0x28]
   140024243:	test   rcx,rcx
   140024246:	je     0x140024259
   140024248:	call   0x14002657c
   14002424d:	mov    QWORD PTR [rbx+0x28],rsi
   140024251:	mov    QWORD PTR [rbx+0x30],rsi
   140024255:	mov    QWORD PTR [rbx+0x38],rsi
   140024259:	mov    rcx,QWORD PTR [rbx+0x10]
   14002425d:	test   rcx,rcx
   140024260:	je     0x140024273
   140024262:	call   0x14002657c
   140024267:	mov    QWORD PTR [rbx+0x10],rsi
   14002426b:	mov    QWORD PTR [rbx+0x18],rsi
   14002426f:	mov    QWORD PTR [rbx+0x20],rsi
   140024273:	lea    rax,[rip+0x2397e]        # 0x140047bf8
   14002427a:	mov    QWORD PTR [rbx],rax
   14002427d:	test   dil,0x1
   140024281:	je     0x14002428b
   140024283:	mov    rcx,rbx
   140024286:	call   0x14002657c
   14002428b:	mov    rax,rbx
   14002428e:	mov    rbx,QWORD PTR [rsp+0x48]
   140024293:	mov    rsi,QWORD PTR [rsp+0x50]
   140024298:	add    rsp,0x30
   14002429c:	pop    rdi
   14002429d:	ret    
   14002429e:	int3   
   14002429f:	int3   
   1400242a0:	mov    QWORD PTR [rsp+0x20],r9
   1400242a5:	push   rdi
   1400242a6:	sub    rsp,0x40
   1400242aa:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400242b3:	mov    QWORD PTR [rsp+0x50],rbx
   1400242b8:	mov    rdi,rcx
   1400242bb:	xor    ebx,ebx
   1400242bd:	test   rcx,rcx
   1400242c0:	jne    0x1400242c9
   1400242c2:	mov    eax,0x80004003
   1400242c7:	jmp    0x140024300
   1400242c9:	mov    QWORD PTR [rcx],rbx
   1400242cc:	mov    ecx,0x60
   1400242d1:	call   0x140026da8
   1400242d6:	mov    QWORD PTR [rsp+0x68],rax
   1400242db:	test   rax,rax
   1400242de:	je     0x1400242eb
   1400242e0:	mov    rcx,rax
   1400242e3:	call   0x140024090
   1400242e8:	mov    rbx,rax
   1400242eb:	mov    rax,QWORD PTR [rbx]
   1400242ee:	mov    rcx,rbx
   1400242f1:	call   QWORD PTR [rax+0x8]
   1400242f4:	mov    QWORD PTR [rdi],rbx
   1400242f7:	xor    eax,eax
   1400242f9:	jmp    0x140024300
   1400242fb:	mov    eax,0x8007000e
   140024300:	mov    rbx,QWORD PTR [rsp+0x50]
   140024305:	add    rsp,0x40
   140024309:	pop    rdi
   14002430a:	ret    
   14002430b:	int3   
   14002430c:	mov    rax,rsp
   14002430f:	mov    QWORD PTR [rax+0x8],rcx
   140024313:	push   rdi
   140024314:	sub    rsp,0x40
   140024318:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140024320:	mov    QWORD PTR [rax+0x10],rbx
   140024324:	mov    QWORD PTR [rax+0x18],rsi
   140024328:	mov    rsi,rdx
   14002432b:	mov    rbx,rcx
   14002432e:	and    QWORD PTR [rcx],0x0
   140024332:	and    QWORD PTR [rcx+0x8],0x0
   140024337:	and    QWORD PTR [rcx+0x10],0x0
   14002433c:	mov    rdi,QWORD PTR [rdx+0x8]
   140024340:	sub    rdi,QWORD PTR [rdx]
   140024343:	mov    QWORD PTR [rcx],0x0
   14002434a:	mov    QWORD PTR [rcx+0x8],0x0
   140024352:	mov    QWORD PTR [rcx+0x10],0x0
   14002435a:	je     0x1400243a5
   14002435c:	cmp    rdi,0xffffffffffffffff
   140024360:	jbe    0x14002436f
   140024362:	lea    rcx,[rip+0x213e7]        # 0x140045750
   140024369:	call   0x140031f18
   14002436e:	int3   
   14002436f:	mov    rcx,rdi
   140024372:	call   0x140026da8
   140024377:	test   rax,rax
   14002437a:	je     0x14002439f
   14002437c:	mov    QWORD PTR [rbx],rax
   14002437f:	mov    QWORD PTR [rbx+0x8],rax
   140024383:	add    rax,rdi
   140024386:	mov    QWORD PTR [rbx+0x10],rax
   14002438a:	mov    r8,QWORD PTR [rbx]
   14002438d:	mov    rdx,QWORD PTR [rsi+0x8]
   140024391:	mov    rcx,QWORD PTR [rsi]
   140024394:	call   0x1400246ec
   140024399:	mov    QWORD PTR [rbx+0x8],rax
   14002439d:	jmp    0x1400243a5
   14002439f:	call   0x140031ed4
   1400243a4:	int3   
   1400243a5:	mov    rax,rbx
   1400243a8:	mov    rbx,QWORD PTR [rsp+0x58]
   1400243ad:	mov    rsi,QWORD PTR [rsp+0x60]
   1400243b2:	add    rsp,0x40
   1400243b6:	pop    rdi
   1400243b7:	ret    
   1400243b8:	mov    rax,QWORD PTR [rcx]
   1400243bb:	rex.W jmp QWORD PTR [rax+0x60]
   1400243bf:	int3   
   1400243c0:	sub    rsp,0x28
   1400243c4:	mov    eax,0x1
   1400243c9:	lock xadd DWORD PTR [rcx+0x8],eax
   1400243ce:	inc    eax
   1400243d0:	jle    0x1400243d7
   1400243d2:	add    rsp,0x28
   1400243d6:	ret    
   1400243d7:	lea    rdx,[rip+0x32102]        # 0x1400564e0
   1400243de:	lea    rcx,[rsp+0x30]
   1400243e3:	mov    DWORD PTR [rsp+0x30],0x80004005
   1400243eb:	call   0x140029fe8
   1400243f0:	int3   
   1400243f1:	int3   
   1400243f2:	int3   
   1400243f3:	int3   
   1400243f4:	rex push rbx
   1400243f6:	sub    rsp,0x20
   1400243fa:	mov    rbx,rcx
   1400243fd:	or     eax,0xffffffff
   140024400:	lock xadd DWORD PTR [rcx+0x8],eax
   140024405:	dec    eax
   140024407:	jg     0x14002442f
   140024409:	test   eax,eax
   14002440b:	jne    0x14002444f
   14002440d:	mov    eax,0xffffec78
   140024412:	xchg   DWORD PTR [rcx+0x8],eax
   140024415:	test   eax,eax
   140024417:	jne    0x140024435
   140024419:	mov    rax,QWORD PTR [rcx]
   14002441c:	call   QWORD PTR [rax+0x50]
   14002441f:	mov    rax,QWORD PTR [rbx]
   140024422:	mov    edx,0x1
   140024427:	mov    rcx,rbx
   14002442a:	call   QWORD PTR [rax+0x58]
   14002442d:	xor    eax,eax
   14002442f:	add    rsp,0x20
   140024433:	pop    rbx
   140024434:	ret    
   140024435:	lea    rdx,[rip+0x320a4]        # 0x1400564e0
   14002443c:	lea    rcx,[rsp+0x30]
   140024441:	mov    DWORD PTR [rsp+0x30],0x80004005
   140024449:	call   0x140029fe8
   14002444e:	int3   
   14002444f:	lea    rdx,[rip+0x3208a]        # 0x1400564e0
   140024456:	lea    rcx,[rsp+0x38]
   14002445b:	mov    DWORD PTR [rsp+0x38],0x80004005
   140024463:	call   0x140029fe8
   140024468:	int3   
   140024469:	int3   
   14002446a:	int3   
   14002446b:	int3   
   14002446c:	lea    rax,[rip+0x23785]        # 0x140047bf8
   140024473:	mov    QWORD PTR [rcx],rax
   140024476:	ret    
   140024477:	int3   
   140024478:	test   r8,r8
   14002447b:	je     0x140024481
   14002447d:	and    QWORD PTR [r8],0x0
   140024481:	mov    eax,0x80004001
   140024486:	ret    
   140024487:	int3   
   140024488:	rex push rdi
   14002448a:	sub    rsp,0x30
   14002448e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024497:	mov    QWORD PTR [rsp+0x50],rbx
   14002449c:	mov    rbx,rdx
   14002449f:	mov    rdi,rcx
   1400244a2:	mov    rcx,QWORD PTR [rcx+0x8]
   1400244a6:	cmp    rdx,rcx
   1400244a9:	jae    0x140024569
   1400244af:	cmp    QWORD PTR [rdi],rdx
   1400244b2:	ja     0x140024569
   1400244b8:	sub    rbx,QWORD PTR [rdi]
   1400244bb:	mov    rdx,QWORD PTR [rdi+0x10]
   1400244bf:	cmp    rcx,rdx
   1400244c2:	jne    0x14002452c
   1400244c4:	mov    rax,rdx
   1400244c7:	sub    rax,rcx
   1400244ca:	sar    rax,0x5
   1400244ce:	cmp    rax,0x1
   1400244d2:	jae    0x14002452c
   1400244d4:	sub    rcx,QWORD PTR [rdi]
   1400244d7:	sar    rcx,0x5
   1400244db:	movabs r8,0x7ffffffffffffff
   1400244e5:	mov    rax,r8
   1400244e8:	sub    rax,rcx
   1400244eb:	cmp    rax,0x1
   1400244ef:	jae    0x1400244fe
   1400244f1:	lea    rcx,[rip+0x21258]        # 0x140045750
   1400244f8:	call   0x140031f18
   1400244fd:	int3   
   1400244fe:	inc    rcx
   140024501:	sub    rdx,QWORD PTR [rdi]
   140024504:	sar    rdx,0x5
   140024508:	mov    rax,rdx
   14002450b:	shr    rax,1
   14002450e:	sub    r8,rax
   140024511:	cmp    r8,rdx
   140024514:	jae    0x14002451a
   140024516:	xor    edx,edx
   140024518:	jmp    0x14002451d
   14002451a:	add    rdx,rax
   14002451d:	cmp    rdx,rcx
   140024520:	cmovb  rdx,rcx
   140024524:	mov    rcx,rdi
   140024527:	call   0x14002463c
   14002452c:	and    rbx,0xffffffffffffffe0
   140024530:	add    rbx,QWORD PTR [rdi]
   140024533:	mov    rcx,QWORD PTR [rdi+0x8]
   140024537:	mov    QWORD PTR [rsp+0x40],rcx
   14002453c:	mov    QWORD PTR [rsp+0x48],rcx
   140024541:	test   rcx,rcx
   140024544:	je     0x140024564
   140024546:	mov    rax,QWORD PTR [rbx]
   140024549:	mov    QWORD PTR [rcx],rax
   14002454c:	mov    rax,QWORD PTR [rbx+0x8]
   140024550:	mov    QWORD PTR [rcx+0x8],rax
   140024554:	mov    rax,QWORD PTR [rbx+0x10]
   140024558:	mov    QWORD PTR [rcx+0x10],rax
   14002455c:	mov    rax,QWORD PTR [rbx+0x18]
   140024560:	mov    QWORD PTR [rcx+0x18],rax
   140024564:	jmp    0x140024601
   140024569:	mov    rdx,QWORD PTR [rdi+0x10]
   14002456d:	cmp    rcx,rdx
   140024570:	jne    0x1400245da
   140024572:	mov    rax,rdx
   140024575:	sub    rax,rcx
   140024578:	sar    rax,0x5
   14002457c:	cmp    rax,0x1
   140024580:	jae    0x1400245da
   140024582:	sub    rcx,QWORD PTR [rdi]
   140024585:	sar    rcx,0x5
   140024589:	movabs r8,0x7ffffffffffffff
   140024593:	mov    rax,r8
   140024596:	sub    rax,rcx
   140024599:	cmp    rax,0x1
   14002459d:	jae    0x1400245ac
   14002459f:	lea    rcx,[rip+0x211aa]        # 0x140045750
   1400245a6:	call   0x140031f18
   1400245ab:	int3   
   1400245ac:	inc    rcx
   1400245af:	sub    rdx,QWORD PTR [rdi]
   1400245b2:	sar    rdx,0x5
   1400245b6:	mov    rax,rdx
   1400245b9:	shr    rax,1
   1400245bc:	sub    r8,rax
   1400245bf:	cmp    r8,rdx
   1400245c2:	jae    0x1400245c8
   1400245c4:	xor    edx,edx
   1400245c6:	jmp    0x1400245cb
   1400245c8:	add    rdx,rax
   1400245cb:	cmp    rdx,rcx
   1400245ce:	cmovb  rdx,rcx
   1400245d2:	mov    rcx,rdi
   1400245d5:	call   0x14002463c
   1400245da:	mov    rcx,QWORD PTR [rdi+0x8]
   1400245de:	test   rcx,rcx
   1400245e1:	je     0x140024601
   1400245e3:	mov    rax,QWORD PTR [rbx]
   1400245e6:	mov    QWORD PTR [rcx],rax
   1400245e9:	mov    rax,QWORD PTR [rbx+0x8]
   1400245ed:	mov    QWORD PTR [rcx+0x8],rax
   1400245f1:	mov    rax,QWORD PTR [rbx+0x10]
   1400245f5:	mov    QWORD PTR [rcx+0x10],rax
   1400245f9:	mov    rax,QWORD PTR [rbx+0x18]
   1400245fd:	mov    QWORD PTR [rcx+0x18],rax
   140024601:	add    QWORD PTR [rdi+0x8],0x20
   140024606:	mov    rbx,QWORD PTR [rsp+0x50]
   14002460b:	add    rsp,0x30
   14002460f:	pop    rdi
   140024610:	ret    
   140024611:	int3   
   140024612:	int3   
   140024613:	int3   
   140024614:	rex push rbx
   140024616:	sub    rsp,0x20
   14002461a:	lea    rax,[rip+0x235d7]        # 0x140047bf8
   140024621:	mov    rbx,rcx
   140024624:	mov    QWORD PTR [rcx],rax
   140024627:	test   dl,0x1
   14002462a:	je     0x140024631
   14002462c:	call   0x14002657c
   140024631:	mov    rax,rbx
   140024634:	add    rsp,0x20
   140024638:	pop    rbx
   140024639:	ret    
   14002463a:	int3   
   14002463b:	int3   
   14002463c:	mov    rax,rsp
   14002463f:	push   r14
   140024641:	sub    rsp,0x40
   140024645:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002464d:	mov    QWORD PTR [rax+0x8],rbx
   140024651:	mov    QWORD PTR [rax+0x18],rsi
   140024655:	mov    QWORD PTR [rax+0x20],rdi
   140024659:	mov    rbx,rdx
   14002465c:	mov    r14,rcx
   14002465f:	xor    edi,edi
   140024661:	mov    QWORD PTR [rsp+0x58],rdi
   140024666:	test   rdx,rdx
   140024669:	je     0x140024699
   14002466b:	movabs rax,0x7ffffffffffffff
   140024675:	cmp    rdx,rax
   140024678:	ja     0x140024693
   14002467a:	mov    rcx,rdx
   14002467d:	shl    rcx,0x5
   140024681:	call   0x140026da8
   140024686:	mov    rdi,rax
   140024689:	mov    QWORD PTR [rsp+0x58],rax
   14002468e:	test   rax,rax
   140024691:	jne    0x140024699
   140024693:	call   0x140031ed4
   140024698:	nop
   140024699:	mov    r8,rdi
   14002469c:	mov    rdx,QWORD PTR [r14+0x8]
   1400246a0:	mov    rcx,QWORD PTR [r14]
   1400246a3:	call   0x140024738
   1400246a8:	nop
   1400246a9:	mov    rcx,QWORD PTR [r14]
   1400246ac:	mov    rsi,QWORD PTR [r14+0x8]
   1400246b0:	sub    rsi,rcx
   1400246b3:	test   rcx,rcx
   1400246b6:	je     0x1400246bd
   1400246b8:	call   0x14002657c
   1400246bd:	shl    rbx,0x5
   1400246c1:	add    rbx,rdi
   1400246c4:	mov    QWORD PTR [r14+0x10],rbx
   1400246c8:	and    rsi,0xffffffffffffffe0
   1400246cc:	add    rsi,rdi
   1400246cf:	mov    QWORD PTR [r14+0x8],rsi
   1400246d3:	mov    QWORD PTR [r14],rdi
   1400246d6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400246db:	mov    rsi,QWORD PTR [rsp+0x60]
   1400246e0:	mov    rdi,QWORD PTR [rsp+0x68]
   1400246e5:	add    rsp,0x40
   1400246e9:	pop    r14
   1400246eb:	ret    
   1400246ec:	mov    rax,rsp
   1400246ef:	mov    QWORD PTR [rax+0x10],rdx
   1400246f3:	mov    QWORD PTR [rax+0x8],rcx
   1400246f7:	sub    rsp,0x38
   1400246fb:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140024703:	mov    rax,QWORD PTR [rax+0x8]
   140024707:	cmp    rax,QWORD PTR [rsp+0x48]
   14002470c:	je     0x14002472f
   14002470e:	test   r8,r8
   140024711:	je     0x14002471d
   140024713:	mov    cl,BYTE PTR [rax]
   140024715:	mov    BYTE PTR [r8],cl
   140024718:	mov    rax,QWORD PTR [rsp+0x40]
   14002471d:	inc    r8
   140024720:	mov    QWORD PTR [rsp+0x50],r8
   140024725:	inc    rax
   140024728:	mov    QWORD PTR [rsp+0x40],rax
   14002472d:	jmp    0x140024707
   14002472f:	mov    rax,r8
   140024732:	add    rsp,0x38
   140024736:	ret    
   140024737:	int3   
   140024738:	mov    QWORD PTR [rsp+0x20],r9
   14002473d:	mov    QWORD PTR [rsp+0x18],r8
   140024742:	sub    rsp,0x38
   140024746:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002474f:	cmp    rcx,rdx
   140024752:	je     0x140024790
   140024754:	mov    QWORD PTR [rsp+0x58],r8
   140024759:	test   r8,r8
   14002475c:	je     0x14002477c
   14002475e:	mov    rax,QWORD PTR [rcx]
   140024761:	mov    QWORD PTR [r8],rax
   140024764:	mov    rax,QWORD PTR [rcx+0x8]
   140024768:	mov    QWORD PTR [r8+0x8],rax
   14002476c:	mov    rax,QWORD PTR [rcx+0x10]
   140024770:	mov    QWORD PTR [r8+0x10],rax
   140024774:	mov    rax,QWORD PTR [rcx+0x18]
   140024778:	mov    QWORD PTR [r8+0x18],rax
   14002477c:	add    r8,0x20
   140024780:	mov    QWORD PTR [rsp+0x50],r8
   140024785:	add    rcx,0x20
   140024789:	mov    QWORD PTR [rsp+0x40],rcx
   14002478e:	jmp    0x14002474f
   140024790:	mov    rax,r8
   140024793:	add    rsp,0x38
   140024797:	ret    
   140024798:	mov    rax,rsp
   14002479b:	push   rbp
   14002479c:	lea    rbp,[rax-0x5f]
   1400247a0:	sub    rsp,0xc0
   1400247a7:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   1400247af:	mov    QWORD PTR [rax+0x8],rbx
   1400247b3:	mov    rax,QWORD PTR [rip+0x348ce]        # 0x140059088
   1400247ba:	xor    rax,rsp
   1400247bd:	mov    QWORD PTR [rbp+0x47],rax
   1400247c1:	mov    r8,QWORD PTR [rip+0x36338]        # 0x14005ab00
   1400247c8:	mov    rdx,QWORD PTR [rip+0x36339]        # 0x14005ab08
   1400247cf:	lea    rcx,[rbp-0x31]
   1400247d3:	call   0x14000fca0
   1400247d8:	nop
   1400247d9:	lea    rax,[rip+0x20fc8]        # 0x1400457a8
   1400247e0:	mov    QWORD PTR [rbp-0x39],rax
   1400247e4:	lea    rax,[rip+0x20fa5]        # 0x140045790
   1400247eb:	mov    QWORD PTR [rbp-0x39],rax
   1400247ef:	xor    ebx,ebx
   1400247f1:	mov    DWORD PTR [rbp-0x49],ebx
   1400247f4:	mov    DWORD PTR [rbp-0x45],ebx
   1400247f7:	lea    r8d,[rbx+0x1]
   1400247fb:	lea    rdx,[rip+0x219c6]        # 0x1400461c8
   140024802:	xor    ecx,ecx
   140024804:	call   QWORD PTR [rip+0x1c98e]        # 0x140041198
   14002480a:	test   rax,rax
   14002480d:	je     0x140024834
   14002480f:	mov    r9,rax
   140024812:	lea    r8,[rbp-0x45]
   140024816:	lea    rdx,[rbp-0x49]
   14002481a:	lea    rcx,[rbp-0x31]
   14002481e:	call   0x14000f5d4
   140024823:	cmp    DWORD PTR [rbp-0x45],ebx
   140024826:	je     0x14002482f
   140024828:	mov    ecx,0xe12305a8
   14002482d:	jmp    0x140024846
   14002482f:	cmp    DWORD PTR [rbp-0x49],ebx
   140024832:	jne    0x14002484e
   140024834:	lea    rcx,[rbp-0x39]
   140024838:	call   0x14001ce6c
   14002483d:	test   eax,eax
   14002483f:	jne    0x14002484e
   140024841:	mov    ecx,0xe12305a9
   140024846:	call   QWORD PTR [rip+0x1cad4]        # 0x140041320
   14002484c:	jmp    0x14002486d
   14002484e:	lea    rdx,[rbp-0x49]
   140024852:	lea    rcx,[rbp-0x39]
   140024856:	call   0x14001d0a0
   14002485b:	test   eax,eax
   14002485d:	je     0x14002486d
   14002485f:	lea    rcx,[rbp-0x31]
   140024863:	call   0x14000f8a4
   140024868:	mov    ebx,0x1
   14002486d:	lea    rcx,[rbp-0x31]
   140024871:	call   0x14000fd20
   140024876:	mov    eax,ebx
   140024878:	mov    rcx,QWORD PTR [rbp+0x47]
   14002487c:	xor    rcx,rsp
   14002487f:	call   0x1400265a0
   140024884:	mov    rbx,QWORD PTR [rsp+0xd0]
   14002488c:	add    rsp,0xc0
   140024893:	pop    rbp
   140024894:	ret    
   140024895:	int3   
   140024896:	int3   
   140024897:	int3   
   140024898:	mov    r11,rsp
   14002489b:	mov    QWORD PTR [r11+0x8],rbx
   14002489f:	push   rdi
   1400248a0:	sub    rsp,0x40
   1400248a4:	and    QWORD PTR [r11-0x10],0x0
   1400248a9:	and    QWORD PTR [r11-0x18],0x0
   1400248ae:	xor    r9d,r9d
   1400248b1:	lea    rax,[r11+0x10]
   1400248b5:	mov    rbx,rcx
   1400248b8:	lea    edx,[r9+0x17]
   1400248bc:	mov    QWORD PTR [r11-0x20],rax
   1400248c0:	and    DWORD PTR [rsp+0x20],0x0
   1400248c5:	lea    rcx,[rip+0x21784]        # 0x140046050
   1400248cc:	xor    r8d,r8d
   1400248cf:	call   QWORD PTR [rip+0x1ce2b]        # 0x140041700
   1400248d5:	call   QWORD PTR [rip+0x1cafd]        # 0x1400413d8
   1400248db:	cmp    eax,0x7a
   1400248de:	je     0x1400248e8
   1400248e0:	call   QWORD PTR [rip+0x1caf2]        # 0x1400413d8
   1400248e6:	jmp    0x140024961
   1400248e8:	mov    edx,DWORD PTR [rsp+0x58]
   1400248ec:	xor    ecx,ecx
   1400248ee:	call   QWORD PTR [rip+0x1c9ec]        # 0x1400412e0
   1400248f4:	mov    rdi,rax
   1400248f7:	test   rax,rax
   1400248fa:	jne    0x140024901
   1400248fc:	lea    eax,[rdi+0x8]
   1400248ff:	jmp    0x140024961
   140024901:	and    QWORD PTR [rsp+0x38],0x0
   140024907:	and    QWORD PTR [rsp+0x30],0x0
   14002490d:	lea    rax,[rsp+0x58]
   140024912:	mov    QWORD PTR [rsp+0x28],rax
   140024917:	mov    eax,DWORD PTR [rsp+0x58]
   14002491b:	xor    r8d,r8d
   14002491e:	lea    rcx,[rip+0x2172b]        # 0x140046050
   140024925:	lea    edx,[r8+0x17]
   140024929:	mov    r9,rdi
   14002492c:	mov    DWORD PTR [rsp+0x20],eax
   140024930:	call   QWORD PTR [rip+0x1cdca]        # 0x140041700
   140024936:	test   eax,eax
   140024938:	je     0x14002494e
   14002493a:	mov    rcx,rdi
   14002493d:	call   QWORD PTR [rip+0x1c715]        # 0x140041058
   140024943:	test   eax,eax
   140024945:	je     0x14002494e
   140024947:	mov    QWORD PTR [rbx],rdi
   14002494a:	xor    eax,eax
   14002494c:	jmp    0x140024961
   14002494e:	call   QWORD PTR [rip+0x1ca84]        # 0x1400413d8
   140024954:	mov    rcx,rdi
   140024957:	mov    ebx,eax
   140024959:	call   QWORD PTR [rip+0x1ca69]        # 0x1400413c8
   14002495f:	mov    eax,ebx
   140024961:	mov    rbx,QWORD PTR [rsp+0x50]
   140024966:	add    rsp,0x40
   14002496a:	pop    rdi
   14002496b:	ret    
   14002496c:	mov    QWORD PTR [rsp+0x10],rbx
   140024971:	mov    QWORD PTR [rsp+0x18],rsi
   140024976:	push   rdi
   140024977:	sub    rsp,0x30
   14002497b:	mov    rdi,rcx
   14002497e:	mov    rcx,QWORD PTR [rcx+0x18]
   140024982:	call   QWORD PTR [rip+0x1c7b0]        # 0x140041138
   140024988:	mov    ecx,eax
   14002498a:	mov    ebx,eax
   14002498c:	call   0x140027888
   140024991:	mov    rcx,QWORD PTR [rdi+0x18]
   140024995:	lea    r8,[rsp+0x40]
   14002499a:	mov    rdx,rax
   14002499d:	mov    rsi,rax
   1400249a0:	mov    DWORD PTR [rsp+0x40],ebx
   1400249a4:	call   QWORD PTR [rip+0x1c766]        # 0x140041110
   1400249aa:	xor    edi,edi
   1400249ac:	test   eax,eax
   1400249ae:	jne    0x1400249ba
   1400249b0:	call   QWORD PTR [rip+0x1ca22]        # 0x1400413d8
   1400249b6:	mov    ebx,eax
   1400249b8:	jmp    0x1400249bc
   1400249ba:	mov    ebx,edi
   1400249bc:	mov    rcx,rsi
   1400249bf:	test   ebx,ebx
   1400249c1:	je     0x1400249cc
   1400249c3:	call   0x140026c1c
   1400249c8:	mov    eax,ebx
   1400249ca:	jmp    0x140024a0c
   1400249cc:	call   QWORD PTR [rip+0x1c766]        # 0x140041138
   1400249d2:	lea    rcx,[rip+0x21677]        # 0x140046050
   1400249d9:	mov    r8,rsi
   1400249dc:	mov    edx,0x17
   1400249e1:	mov    r9d,eax
   1400249e4:	mov    QWORD PTR [rsp+0x28],rdi
   1400249e9:	mov    QWORD PTR [rsp+0x20],rdi
   1400249ee:	call   QWORD PTR [rip+0x1cd14]        # 0x140041708
   1400249f4:	mov    rcx,rsi
   1400249f7:	mov    ebx,eax
   1400249f9:	call   0x140026c1c
   1400249fe:	test   ebx,ebx
   140024a00:	jne    0x140024a0a
   140024a02:	call   QWORD PTR [rip+0x1c9d0]        # 0x1400413d8
   140024a08:	mov    edi,eax
   140024a0a:	mov    eax,edi
   140024a0c:	mov    rbx,QWORD PTR [rsp+0x48]
   140024a11:	mov    rsi,QWORD PTR [rsp+0x50]
   140024a16:	add    rsp,0x30
   140024a1a:	pop    rdi
   140024a1b:	ret    
   140024a1c:	mov    QWORD PTR [rsp+0x8],rcx
   140024a21:	push   rdi
   140024a22:	sub    rsp,0x30
   140024a26:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024a2f:	mov    QWORD PTR [rsp+0x48],rbx
   140024a34:	mov    ebx,edx
   140024a36:	mov    rdi,rcx
   140024a39:	call   0x140029e84
   140024a3e:	test   bl,0x1
   140024a41:	je     0x140024a4b
   140024a43:	mov    rcx,rdi
   140024a46:	call   0x14002657c
   140024a4b:	mov    rax,rdi
   140024a4e:	mov    rbx,QWORD PTR [rsp+0x48]
   140024a53:	add    rsp,0x30
   140024a57:	pop    rdi
   140024a58:	ret    
   140024a59:	int3   
   140024a5a:	int3   
   140024a5b:	int3   
   140024a5c:	mov    QWORD PTR [rsp+0x8],rcx
   140024a61:	sub    rsp,0x38
   140024a65:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024a6e:	add    rsp,0x38
   140024a72:	jmp    0x140029e84
   140024a77:	int3   
   140024a78:	sub    rsp,0x28
   140024a7c:	xor    eax,eax
   140024a7e:	xchg   QWORD PTR [rcx],rax
   140024a81:	test   rax,rax
   140024a84:	je     0x140024a8f
   140024a86:	mov    rcx,rax
   140024a89:	call   QWORD PTR [rip+0x1c739]        # 0x1400411c8
   140024a8f:	add    rsp,0x28
   140024a93:	ret    
   140024a94:	mov    QWORD PTR [rsp+0x8],rcx
   140024a99:	push   rbx
   140024a9a:	sub    rsp,0x30
   140024a9e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024aa7:	mov    rbx,rcx
   140024aaa:	call   0x140029e58
   140024aaf:	nop
   140024ab0:	lea    rax,[rip+0x206a1]        # 0x140045158
   140024ab7:	mov    QWORD PTR [rbx],rax
   140024aba:	lea    rax,[rip+0x206af]        # 0x140045170
   140024ac1:	mov    QWORD PTR [rbx],rax
   140024ac4:	mov    rax,rbx
   140024ac7:	add    rsp,0x30
   140024acb:	pop    rbx
   140024acc:	ret    
   140024acd:	int3   
   140024ace:	int3   
   140024acf:	int3   
   140024ad0:	mov    QWORD PTR [rsp+0x8],rcx
   140024ad5:	push   rbx
   140024ad6:	sub    rsp,0x30
   140024ada:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024ae3:	mov    rbx,rcx
   140024ae6:	call   0x140029e58
   140024aeb:	nop
   140024aec:	lea    rax,[rip+0x20665]        # 0x140045158
   140024af3:	mov    QWORD PTR [rbx],rax
   140024af6:	mov    rax,rbx
   140024af9:	add    rsp,0x30
   140024afd:	pop    rbx
   140024afe:	ret    
   140024aff:	int3   
   140024b00:	mov    rax,rsp
   140024b03:	push   rbp
   140024b04:	push   rsi
   140024b05:	push   rdi
   140024b06:	lea    rbp,[rax-0x5f]
   140024b0a:	sub    rsp,0xa0
   140024b11:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   140024b19:	mov    QWORD PTR [rax+0x18],rbx
   140024b1d:	mov    rax,QWORD PTR [rip+0x34564]        # 0x140059088
   140024b24:	xor    rax,rsp
   140024b27:	mov    QWORD PTR [rbp+0x3f],rax
   140024b2b:	mov    rdi,rdx
   140024b2e:	mov    rsi,rcx
   140024b31:	mov    QWORD PTR [rbp-0x31],r8
   140024b35:	mov    rcx,QWORD PTR [rbp-0x31]
   140024b39:	test   rcx,rcx
   140024b3c:	jne    0x140024b7e
   140024b3e:	lea    rax,[rip+0x2311b]        # 0x140047c60
   140024b45:	mov    QWORD PTR [rbp-0x21],rax
   140024b49:	lea    rdx,[rbp-0x21]
   140024b4d:	lea    rcx,[rbp-0x19]
   140024b51:	call   0x140029e0c
   140024b56:	nop
   140024b57:	lea    rax,[rip+0x205fa]        # 0x140045158
   140024b5e:	mov    QWORD PTR [rbp-0x19],rax
   140024b62:	lea    rax,[rip+0x20607]        # 0x140045170
   140024b69:	mov    QWORD PTR [rbp-0x19],rax
   140024b6d:	lea    rdx,[rip+0x31a14]        # 0x140056588
   140024b74:	lea    rcx,[rbp-0x19]
   140024b78:	call   0x140029fe8
   140024b7d:	int3   
   140024b7e:	mov    r8d,0x84
   140024b84:	lea    rdx,[rip+0x209f5]        # 0x140045580
   140024b8b:	call   QWORD PTR [rip+0x1c627]        # 0x1400411b8
   140024b91:	test   rax,rax
   140024b94:	jne    0x140024b9a
   140024b96:	xor    ebx,ebx
   140024b98:	jmp    0x140024c16
   140024b9a:	mov    QWORD PTR [rbp-0x39],rax
   140024b9e:	mov    ebx,0x1
   140024ba3:	mov    DWORD PTR [rsi],ebx
   140024ba5:	mov    rcx,QWORD PTR [rbp-0x39]
   140024ba9:	test   rcx,rcx
   140024bac:	jne    0x140024bee
   140024bae:	lea    rax,[rip+0x230ab]        # 0x140047c60
   140024bb5:	mov    QWORD PTR [rbp-0x29],rax
   140024bb9:	lea    rdx,[rbp-0x29]
   140024bbd:	lea    rcx,[rbp-0x1]
   140024bc1:	call   0x140029e0c
   140024bc6:	nop
   140024bc7:	lea    rax,[rip+0x2058a]        # 0x140045158
   140024bce:	mov    QWORD PTR [rbp-0x1],rax
   140024bd2:	lea    rax,[rip+0x20597]        # 0x140045170
   140024bd9:	mov    QWORD PTR [rbp-0x1],rax
   140024bdd:	lea    rdx,[rip+0x319a4]        # 0x140056588
   140024be4:	lea    rcx,[rbp-0x1]
   140024be8:	call   0x140029fe8
   140024bed:	int3   
   140024bee:	lea    rdx,[rbp+0x1f]
   140024bf2:	call   QWORD PTR [rip+0x1c5a8]        # 0x1400411a0
   140024bf8:	test   eax,eax
   140024bfa:	je     0x140024c04
   140024bfc:	cmp    DWORD PTR [rbp+0x23],0x4
   140024c00:	jne    0x140024c04
   140024c02:	mov    DWORD PTR [rdi],ebx
   140024c04:	xor    ecx,ecx
   140024c06:	xchg   QWORD PTR [rbp-0x39],rcx
   140024c0a:	test   rcx,rcx
   140024c0d:	je     0x140024c16
   140024c0f:	call   QWORD PTR [rip+0x1c5b3]        # 0x1400411c8
   140024c15:	nop
   140024c16:	xor    ecx,ecx
   140024c18:	xchg   QWORD PTR [rbp-0x31],rcx
   140024c1c:	test   rcx,rcx
   140024c1f:	je     0x140024c27
   140024c21:	call   QWORD PTR [rip+0x1c5a1]        # 0x1400411c8
   140024c27:	mov    eax,ebx
   140024c29:	mov    rcx,QWORD PTR [rbp+0x3f]
   140024c2d:	xor    rcx,rsp
   140024c30:	call   0x1400265a0
   140024c35:	mov    rbx,QWORD PTR [rsp+0xd0]
   140024c3d:	add    rsp,0xa0
   140024c44:	pop    rdi
   140024c45:	pop    rsi
   140024c46:	pop    rbp
   140024c47:	ret    
   140024c48:	mov    rax,rsp
   140024c4b:	push   rbp
   140024c4c:	push   r14
   140024c4e:	push   r15
   140024c50:	lea    rbp,[rax-0x5f]
   140024c54:	sub    rsp,0x100
   140024c5b:	mov    QWORD PTR [rbp-0x9],0xfffffffffffffffe
   140024c63:	mov    QWORD PTR [rax+0x8],rbx
   140024c67:	mov    QWORD PTR [rax+0x10],rsi
   140024c6b:	mov    QWORD PTR [rax+0x18],rdi
   140024c6f:	mov    rax,QWORD PTR [rip+0x34412]        # 0x140059088
   140024c76:	xor    rax,rsp
   140024c79:	mov    QWORD PTR [rbp+0x3f],rax
   140024c7d:	mov    r8d,0x3
   140024c83:	lea    rdx,[rip+0x2153e]        # 0x1400461c8
   140024c8a:	xor    ecx,ecx
   140024c8c:	call   QWORD PTR [rip+0x1c506]        # 0x140041198
   140024c92:	xor    edi,edi
   140024c94:	test   rax,rax
   140024c97:	je     0x140024ed1
   140024c9d:	mov    QWORD PTR [rbp-0x41],rax
   140024ca1:	mov    QWORD PTR [rbp+0xf],rdi
   140024ca5:	mov    QWORD PTR [rbp+0x17],rdi
   140024ca9:	mov    r14d,0x7
   140024caf:	mov    QWORD PTR [rbp+0x17],r14
   140024cb3:	mov    QWORD PTR [rbp+0xf],rdi
   140024cb7:	mov    WORD PTR [rbp-0x1],di
   140024cbb:	lea    rcx,[rbp-0x29]
   140024cbf:	call   0x1400284b4
   140024cc4:	test   eax,eax
   140024cc6:	jne    0x140024e9f
   140024ccc:	mov    rdx,QWORD PTR [rbp-0x29]
   140024cd0:	test   rdx,rdx
   140024cd3:	je     0x140024e9f
   140024cd9:	lea    rcx,[rbp-0x1]
   140024cdd:	call   0x14000324c
   140024ce2:	lea    r15d,[r14+0x55]
   140024ce6:	mov    WORD PTR [rbp-0x49],r15w
   140024ceb:	or     rsi,0xffffffffffffffff
   140024cef:	mov    rcx,QWORD PTR [rbp+0xf]
   140024cf3:	lea    ebx,[rsi+0x2]
   140024cf6:	cmp    rcx,rbx
   140024cf9:	jb     0x140024d80
   140024cff:	dec    rcx
   140024d02:	cmp    rcx,rsi
   140024d05:	cmova  rcx,rsi
   140024d09:	lea    rax,[rbp-0x1]
   140024d0d:	mov    r10,QWORD PTR [rbp-0x1]
   140024d11:	mov    r11,QWORD PTR [rbp+0x17]
   140024d15:	cmp    r11,0x8
   140024d19:	cmovae rax,r10
   140024d1d:	lea    r9,[rax+rcx*2]
   140024d21:	cmp    WORD PTR [r9],r15w
   140024d25:	jne    0x140024d55
   140024d27:	mov    r8,rbx
   140024d2a:	lea    rcx,[rbp-0x49]
   140024d2e:	mov    rdx,r9
   140024d31:	movzx  eax,WORD PTR [rcx]
   140024d34:	cmp    WORD PTR [rdx],ax
   140024d37:	jne    0x140024d4a
   140024d39:	add    rdx,0x2
   140024d3d:	add    rcx,0x2
   140024d41:	sub    r8,rbx
   140024d44:	jne    0x140024d31
   140024d46:	mov    eax,edi
   140024d48:	jmp    0x140024d51
   140024d4a:	sbb    eax,eax
   140024d4c:	and    eax,0xfffffffe
   140024d4f:	add    eax,ebx
   140024d51:	test   eax,eax
   140024d53:	je     0x140024d6c
   140024d55:	lea    rax,[rbp-0x1]
   140024d59:	cmp    r11,0x8
   140024d5d:	cmovae rax,r10
   140024d61:	cmp    r9,rax
   140024d64:	je     0x140024d80
   140024d66:	sub    r9,0x2
   140024d6a:	jmp    0x140024d21
   140024d6c:	lea    rax,[rbp-0x1]
   140024d70:	cmp    r11,0x8
   140024d74:	cmovae rax,r10
   140024d78:	sub    r9,rax
   140024d7b:	sar    r9,1
   140024d7e:	jmp    0x140024d83
   140024d80:	mov    r9,rsi
   140024d83:	cmp    r9,rsi
   140024d86:	je     0x140024e9f
   140024d8c:	lea    rdx,[rbp+0x1f]
   140024d90:	lea    rcx,[rbp-0x1]
   140024d94:	call   0x1400255d4
   140024d99:	nop
   140024d9a:	mov    rdx,rax
   140024d9d:	lea    rcx,[rbp-0x1]
   140024da1:	call   0x14001117c
   140024da6:	nop
   140024da7:	cmp    QWORD PTR [rbp+0x37],0x8
   140024dac:	jb     0x140024db7
   140024dae:	mov    rcx,QWORD PTR [rbp+0x1f]
   140024db2:	call   0x14002657c
   140024db7:	mov    QWORD PTR [rbp+0x37],r14
   140024dbb:	mov    QWORD PTR [rbp+0x2f],rdi
   140024dbf:	mov    WORD PTR [rbp+0x1f],di
   140024dc3:	lea    rdx,[rip+0x2147e]        # 0x140046248
   140024dca:	lea    rcx,[rbp-0x1]
   140024dce:	call   0x1400030a8
   140024dd3:	lea    rdx,[rip+0x22e9e]        # 0x140047c78
   140024dda:	lea    rcx,[rbp-0x1]
   140024dde:	call   0x1400030a8
   140024de3:	lea    rax,[rbp-0x1]
   140024de7:	cmp    QWORD PTR [rbp+0x17],0x8
   140024dec:	cmovae rax,QWORD PTR [rbp-0x1]
   140024df1:	mov    rcx,QWORD PTR [rbp-0x41]
   140024df5:	test   rcx,rcx
   140024df8:	jne    0x140024e3a
   140024dfa:	lea    rax,[rip+0x22e5f]        # 0x140047c60
   140024e01:	mov    QWORD PTR [rbp-0x31],rax
   140024e05:	lea    rdx,[rbp-0x31]
   140024e09:	lea    rcx,[rbp-0x21]
   140024e0d:	call   0x140029e0c
   140024e12:	nop
   140024e13:	lea    rax,[rip+0x2033e]        # 0x140045158
   140024e1a:	mov    QWORD PTR [rbp-0x21],rax
   140024e1e:	lea    rax,[rip+0x2034b]        # 0x140045170
   140024e25:	mov    QWORD PTR [rbp-0x21],rax
   140024e29:	lea    rdx,[rip+0x31758]        # 0x140056588
   140024e30:	lea    rcx,[rbp-0x21]
   140024e34:	call   0x140029fe8
   140024e39:	int3   
   140024e3a:	mov    QWORD PTR [rsp+0x60],rdi
   140024e3f:	mov    QWORD PTR [rsp+0x58],rdi
   140024e44:	mov    QWORD PTR [rsp+0x50],rdi
   140024e49:	mov    QWORD PTR [rsp+0x48],rdi
   140024e4e:	mov    QWORD PTR [rsp+0x40],rdi
   140024e53:	mov    QWORD PTR [rsp+0x38],rax
   140024e58:	mov    DWORD PTR [rsp+0x30],ebx
   140024e5c:	mov    DWORD PTR [rsp+0x28],0x3
   140024e64:	mov    DWORD PTR [rsp+0x20],0x10
   140024e6c:	mov    r9d,0xf01ff
   140024e72:	lea    rdx,[rip+0x20707]        # 0x140045580
   140024e79:	mov    r8,rdx
   140024e7c:	call   QWORD PTR [rip+0x1c34e]        # 0x1400411d0
   140024e82:	test   rax,rax
   140024e85:	je     0x140024e9f
   140024e87:	mov    QWORD PTR [rbp-0x39],rax
   140024e8b:	mov    rcx,rdi
   140024e8e:	xchg   QWORD PTR [rbp-0x39],rcx
   140024e92:	test   rcx,rcx
   140024e95:	je     0x140024ea1
   140024e97:	call   QWORD PTR [rip+0x1c32b]        # 0x1400411c8
   140024e9d:	jmp    0x140024ea1
   140024e9f:	mov    ebx,edi
   140024ea1:	cmp    QWORD PTR [rbp+0x17],0x8
   140024ea6:	jb     0x140024eb1
   140024ea8:	mov    rcx,QWORD PTR [rbp-0x1]
   140024eac:	call   0x14002657c
   140024eb1:	mov    QWORD PTR [rbp+0x17],r14
   140024eb5:	mov    QWORD PTR [rbp+0xf],rdi
   140024eb9:	mov    WORD PTR [rbp-0x1],di
   140024ebd:	mov    rcx,rdi
   140024ec0:	xchg   QWORD PTR [rbp-0x41],rcx
   140024ec4:	test   rcx,rcx
   140024ec7:	je     0x140024ecf
   140024ec9:	call   QWORD PTR [rip+0x1c2f9]        # 0x1400411c8
   140024ecf:	mov    eax,ebx
   140024ed1:	mov    rcx,QWORD PTR [rbp+0x3f]
   140024ed5:	xor    rcx,rsp
   140024ed8:	call   0x1400265a0
   140024edd:	lea    r11,[rsp+0x100]
   140024ee5:	mov    rbx,QWORD PTR [r11+0x20]
   140024ee9:	mov    rsi,QWORD PTR [r11+0x28]
   140024eed:	mov    rdi,QWORD PTR [r11+0x30]
   140024ef1:	mov    rsp,r11
   140024ef4:	pop    r15
   140024ef6:	pop    r14
   140024ef8:	pop    rbp
   140024ef9:	ret    
   140024efa:	int3   
   140024efb:	int3   
   140024efc:	mov    rax,rsp
   140024eff:	push   rbp
   140024f00:	lea    rbp,[rax-0x5f]
   140024f04:	sub    rsp,0xf0
   140024f0b:	mov    QWORD PTR [rbp+0x1f],0xfffffffffffffffe
   140024f13:	mov    QWORD PTR [rax+0x8],rbx
   140024f17:	mov    QWORD PTR [rax+0x10],rsi
   140024f1b:	mov    QWORD PTR [rax+0x18],rdi
   140024f1f:	mov    rax,QWORD PTR [rip+0x34162]        # 0x140059088
   140024f26:	xor    rax,rsp
   140024f29:	mov    QWORD PTR [rbp+0x47],rax
   140024f2d:	and    QWORD PTR [rsp+0x30],0x0
   140024f33:	and    DWORD PTR [rsp+0x28],0x0
   140024f38:	mov    DWORD PTR [rsp+0x20],0x3
   140024f40:	xor    r9d,r9d
   140024f43:	xor    r8d,r8d
   140024f46:	mov    edx,0xc0000000
   140024f4b:	lea    rcx,[rip+0x22b66]        # 0x140047ab8
   140024f52:	call   QWORD PTR [rip+0x1c2f8]        # 0x140041250
   140024f58:	cmp    rax,0xffffffffffffffff
   140024f5c:	je     0x140024f79
   140024f5e:	mov    rcx,rax
   140024f61:	call   QWORD PTR [rip+0x1c421]        # 0x140041388
   140024f67:	mov    ecx,0x217
   140024f6c:	call   QWORD PTR [rip+0x1c3ae]        # 0x140041320
   140024f72:	xor    eax,eax
   140024f74:	jmp    0x140025185
   140024f79:	call   QWORD PTR [rip+0x1c459]        # 0x1400413d8
   140024f7f:	cmp    eax,0xe7
   140024f84:	je     0x140024f72
   140024f86:	mov    ebx,0x1
   140024f8b:	mov    r8d,ebx
   140024f8e:	lea    rdx,[rip+0x21233]        # 0x1400461c8
   140024f95:	xor    ecx,ecx
   140024f97:	call   QWORD PTR [rip+0x1c1fb]        # 0x140041198
   140024f9d:	test   rax,rax
   140024fa0:	je     0x140024f72
   140024fa2:	mov    QWORD PTR [rbp-0x51],rax
   140024fa6:	mov    rcx,QWORD PTR [rbp-0x51]
   140024faa:	test   rcx,rcx
   140024fad:	jne    0x140024fef
   140024faf:	lea    rax,[rip+0x22caa]        # 0x140047c60
   140024fb6:	mov    QWORD PTR [rbp-0x39],rax
   140024fba:	lea    rdx,[rbp-0x39]
   140024fbe:	lea    rcx,[rbp-0x29]
   140024fc2:	call   0x140029e0c
   140024fc7:	nop
   140024fc8:	lea    rax,[rip+0x20189]        # 0x140045158
   140024fcf:	mov    QWORD PTR [rbp-0x29],rax
   140024fd3:	lea    rax,[rip+0x20196]        # 0x140045170
   140024fda:	mov    QWORD PTR [rbp-0x29],rax
   140024fde:	lea    rdx,[rip+0x315a3]        # 0x140056588
   140024fe5:	lea    rcx,[rbp-0x29]
   140024fe9:	call   0x140029fe8
   140024fee:	int3   
   140024fef:	mov    r8d,0x20000094
   140024ff5:	lea    rdx,[rip+0x20584]        # 0x140045580
   140024ffc:	call   QWORD PTR [rip+0x1c1b6]        # 0x1400411b8
   140025002:	test   rax,rax
   140025005:	jne    0x14002500e
   140025007:	xor    ebx,ebx
   140025009:	jmp    0x140025172
   14002500e:	mov    QWORD PTR [rbp-0x59],rax
   140025012:	mov    rcx,QWORD PTR [rbp-0x59]
   140025016:	test   rcx,rcx
   140025019:	jne    0x14002505b
   14002501b:	lea    rax,[rip+0x22c3e]        # 0x140047c60
   140025022:	mov    QWORD PTR [rbp-0x31],rax
   140025026:	lea    rdx,[rbp-0x31]
   14002502a:	lea    rcx,[rbp+0x7]
   14002502e:	call   0x140029e0c
   140025033:	nop
   140025034:	lea    rax,[rip+0x2011d]        # 0x140045158
   14002503b:	mov    QWORD PTR [rbp+0x7],rax
   14002503f:	lea    rax,[rip+0x2012a]        # 0x140045170
   140025046:	mov    QWORD PTR [rbp+0x7],rax
   14002504a:	lea    rdx,[rip+0x31537]        # 0x140056588
   140025051:	lea    rcx,[rbp+0x7]
   140025055:	call   0x140029fe8
   14002505a:	int3   
   14002505b:	xor    r8d,r8d
   14002505e:	xor    edx,edx
   140025060:	call   QWORD PTR [rip+0x1c14a]        # 0x1400411b0
   140025066:	test   eax,eax
   140025068:	je     0x14002515e
   14002506e:	mov    rsi,QWORD PTR [rbp-0x59]
   140025072:	test   rsi,rsi
   140025075:	jne    0x1400250b7
   140025077:	lea    rax,[rip+0x22be2]        # 0x140047c60
   14002507e:	mov    QWORD PTR [rbp-0x49],rax
   140025082:	lea    rdx,[rbp-0x49]
   140025086:	lea    rcx,[rbp-0x11]
   14002508a:	call   0x140029e0c
   14002508f:	nop
   140025090:	lea    rax,[rip+0x200c1]        # 0x140045158
   140025097:	mov    QWORD PTR [rbp-0x11],rax
   14002509b:	lea    rax,[rip+0x200ce]        # 0x140045170
   1400250a2:	mov    QWORD PTR [rbp-0x11],rax
   1400250a6:	lea    rdx,[rip+0x314db]        # 0x140056588
   1400250ad:	lea    rcx,[rbp-0x11]
   1400250b1:	call   0x140029fe8
   1400250b6:	int3   
   1400250b7:	xor    edi,edi
   1400250b9:	lea    rdx,[rbp+0x27]
   1400250bd:	mov    rcx,rsi
   1400250c0:	call   QWORD PTR [rip+0x1c0da]        # 0x1400411a0
   1400250c6:	test   eax,eax
   1400250c8:	je     0x14002515e
   1400250ce:	mov    eax,DWORD PTR [rbp+0x2b]
   1400250d1:	cmp    eax,0x4
   1400250d4:	je     0x1400250e4
   1400250d6:	mov    ecx,0x64
   1400250db:	call   QWORD PTR [rip+0x1c25f]        # 0x140041340
   1400250e1:	mov    eax,DWORD PTR [rbp+0x2b]
   1400250e4:	add    edi,ebx
   1400250e6:	cmp    eax,0x4
   1400250e9:	je     0x1400250f0
   1400250eb:	cmp    edi,0x32
   1400250ee:	jb     0x1400250b9
   1400250f0:	sub    eax,0x4
   1400250f3:	neg    eax
   1400250f5:	sbb    eax,eax
   1400250f7:	and    eax,0x80004005
   1400250fc:	jl     0x14002515e
   1400250fe:	mov    edi,0xc0000000
   140025103:	jmp    0x140025125
   140025105:	call   QWORD PTR [rip+0x1c2cd]        # 0x1400413d8
   14002510b:	cmp    eax,0xe7
   140025110:	jne    0x14002515e
   140025112:	xor    edx,edx
   140025114:	lea    rcx,[rip+0x2299d]        # 0x140047ab8
   14002511b:	call   QWORD PTR [rip+0x1c177]        # 0x140041298
   140025121:	test   eax,eax
   140025123:	je     0x14002515e
   140025125:	and    QWORD PTR [rsp+0x30],0x0
   14002512b:	and    DWORD PTR [rsp+0x28],0x0
   140025130:	mov    DWORD PTR [rsp+0x20],0x3
   140025138:	xor    r9d,r9d
   14002513b:	xor    r8d,r8d
   14002513e:	mov    edx,edi
   140025140:	lea    rcx,[rip+0x22971]        # 0x140047ab8
   140025147:	call   QWORD PTR [rip+0x1c103]        # 0x140041250
   14002514d:	cmp    rax,0xffffffffffffffff
   140025151:	je     0x140025105
   140025153:	mov    rcx,rax
   140025156:	call   QWORD PTR [rip+0x1c22c]        # 0x140041388
   14002515c:	jmp    0x140025160
   14002515e:	xor    ebx,ebx
   140025160:	xor    ecx,ecx
   140025162:	xchg   QWORD PTR [rbp-0x59],rcx
   140025166:	test   rcx,rcx
   140025169:	je     0x140025172
   14002516b:	call   QWORD PTR [rip+0x1c057]        # 0x1400411c8
   140025171:	nop
   140025172:	xor    ecx,ecx
   140025174:	xchg   QWORD PTR [rbp-0x51],rcx
   140025178:	test   rcx,rcx
   14002517b:	je     0x140025183
   14002517d:	call   QWORD PTR [rip+0x1c045]        # 0x1400411c8
   140025183:	mov    eax,ebx
   140025185:	mov    rcx,QWORD PTR [rbp+0x47]
   140025189:	xor    rcx,rsp
   14002518c:	call   0x1400265a0
   140025191:	lea    r11,[rsp+0xf0]
   140025199:	mov    rbx,QWORD PTR [r11+0x10]
   14002519d:	mov    rsi,QWORD PTR [r11+0x18]
   1400251a1:	mov    rdi,QWORD PTR [r11+0x20]
   1400251a5:	mov    rsp,r11
   1400251a8:	pop    rbp
   1400251a9:	ret    
   1400251aa:	int3   
   1400251ab:	int3   
   1400251ac:	mov    rax,rsp
   1400251af:	push   rbp
   1400251b0:	lea    rbp,[rax-0x5f]
   1400251b4:	sub    rsp,0xa0
   1400251bb:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   1400251c3:	mov    QWORD PTR [rax+0x8],rbx
   1400251c7:	mov    rax,QWORD PTR [rip+0x33eba]        # 0x140059088
   1400251ce:	xor    rax,rsp
   1400251d1:	mov    QWORD PTR [rbp+0x4f],rax
   1400251d5:	mov    ebx,0x1
   1400251da:	mov    r8d,ebx
   1400251dd:	lea    rdx,[rip+0x20fe4]        # 0x1400461c8
   1400251e4:	xor    ecx,ecx
   1400251e6:	call   QWORD PTR [rip+0x1bfac]        # 0x140041198
   1400251ec:	test   rax,rax
   1400251ef:	je     0x1400252de
   1400251f5:	mov    QWORD PTR [rbp-0x21],rax
   1400251f9:	mov    rcx,QWORD PTR [rbp-0x21]
   1400251fd:	test   rcx,rcx
   140025200:	jne    0x140025242
   140025202:	lea    rax,[rip+0x22a57]        # 0x140047c60
   140025209:	mov    QWORD PTR [rbp-0x11],rax
   14002520d:	lea    rdx,[rbp-0x11]
   140025211:	lea    rcx,[rbp-0x9]
   140025215:	call   0x140029e0c
   14002521a:	nop
   14002521b:	lea    rax,[rip+0x1ff36]        # 0x140045158
   140025222:	mov    QWORD PTR [rbp-0x9],rax
   140025226:	lea    rax,[rip+0x1ff43]        # 0x140045170
   14002522d:	mov    QWORD PTR [rbp-0x9],rax
   140025231:	lea    rdx,[rip+0x31350]        # 0x140056588
   140025238:	lea    rcx,[rbp-0x9]
   14002523c:	call   0x140029fe8
   140025241:	int3   
   140025242:	mov    r8d,0x200000a4
   140025248:	lea    rdx,[rip+0x20331]        # 0x140045580
   14002524f:	call   QWORD PTR [rip+0x1bf63]        # 0x1400411b8
   140025255:	test   rax,rax
   140025258:	jne    0x14002525e
   14002525a:	xor    ebx,ebx
   14002525c:	jmp    0x1400252cb
   14002525e:	mov    QWORD PTR [rbp-0x29],rax
   140025262:	mov    rcx,QWORD PTR [rbp-0x29]
   140025266:	test   rcx,rcx
   140025269:	jne    0x1400252ab
   14002526b:	lea    rax,[rip+0x229ee]        # 0x140047c60
   140025272:	mov    QWORD PTR [rbp-0x19],rax
   140025276:	lea    rdx,[rbp-0x19]
   14002527a:	lea    rcx,[rbp+0xf]
   14002527e:	call   0x140029e0c
   140025283:	nop
   140025284:	lea    rax,[rip+0x1fecd]        # 0x140045158
   14002528b:	mov    QWORD PTR [rbp+0xf],rax
   14002528f:	lea    rax,[rip+0x1feda]        # 0x140045170
   140025296:	mov    QWORD PTR [rbp+0xf],rax
   14002529a:	lea    rdx,[rip+0x312e7]        # 0x140056588
   1400252a1:	lea    rcx,[rbp+0xf]
   1400252a5:	call   0x140029fe8
   1400252aa:	int3   
   1400252ab:	lea    r8,[rbp+0x2f]
   1400252af:	mov    edx,ebx
   1400252b1:	call   QWORD PTR [rip+0x1bed1]        # 0x140041188
   1400252b7:	mov    ebx,eax
   1400252b9:	xor    ecx,ecx
   1400252bb:	xchg   QWORD PTR [rbp-0x29],rcx
   1400252bf:	test   rcx,rcx
   1400252c2:	je     0x1400252cb
   1400252c4:	call   QWORD PTR [rip+0x1befe]        # 0x1400411c8
   1400252ca:	nop
   1400252cb:	xor    ecx,ecx
   1400252cd:	xchg   QWORD PTR [rbp-0x21],rcx
   1400252d1:	test   rcx,rcx
   1400252d4:	je     0x1400252dc
   1400252d6:	call   QWORD PTR [rip+0x1beec]        # 0x1400411c8
   1400252dc:	mov    eax,ebx
   1400252de:	mov    rcx,QWORD PTR [rbp+0x4f]
   1400252e2:	xor    rcx,rsp
   1400252e5:	call   0x1400265a0
   1400252ea:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400252f2:	add    rsp,0xa0
   1400252f9:	pop    rbp
   1400252fa:	ret    
   1400252fb:	int3   
   1400252fc:	rex push rbp
   1400252fe:	push   rbx
   1400252ff:	mov    rbp,rsp
   140025302:	sub    rsp,0x68
   140025306:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   14002530e:	mov    r8d,0x3
   140025314:	lea    rdx,[rip+0x20ead]        # 0x1400461c8
   14002531b:	xor    ecx,ecx
   14002531d:	call   QWORD PTR [rip+0x1be75]        # 0x140041198
   140025323:	test   rax,rax
   140025326:	je     0x14002540f
   14002532c:	mov    QWORD PTR [rbp+0x20],rax
   140025330:	mov    rcx,QWORD PTR [rbp+0x20]
   140025334:	test   rcx,rcx
   140025337:	jne    0x140025379
   140025339:	lea    rax,[rip+0x22920]        # 0x140047c60
   140025340:	mov    QWORD PTR [rbp+0x28],rax
   140025344:	lea    rdx,[rbp+0x28]
   140025348:	lea    rcx,[rbp-0x40]
   14002534c:	call   0x140029e0c
   140025351:	nop
   140025352:	lea    rax,[rip+0x1fdff]        # 0x140045158
   140025359:	mov    QWORD PTR [rbp-0x40],rax
   14002535d:	lea    rax,[rip+0x1fe0c]        # 0x140045170
   140025364:	mov    QWORD PTR [rbp-0x40],rax
   140025368:	lea    rdx,[rip+0x31219]        # 0x140056588
   14002536f:	lea    rcx,[rbp-0x40]
   140025373:	call   0x140029fe8
   140025378:	int3   
   140025379:	mov    r8d,0x20010084
   14002537f:	lea    rdx,[rip+0x201fa]        # 0x140045580
   140025386:	call   QWORD PTR [rip+0x1be2c]        # 0x1400411b8
   14002538c:	test   rax,rax
   14002538f:	jne    0x140025395
   140025391:	xor    ebx,ebx
   140025393:	jmp    0x1400253fc
   140025395:	mov    QWORD PTR [rbp+0x18],rax
   140025399:	mov    rcx,QWORD PTR [rbp+0x18]
   14002539d:	test   rcx,rcx
   1400253a0:	jne    0x1400253e2
   1400253a2:	lea    rax,[rip+0x228b7]        # 0x140047c60
   1400253a9:	mov    QWORD PTR [rbp+0x30],rax
   1400253ad:	lea    rdx,[rbp+0x30]
   1400253b1:	lea    rcx,[rbp-0x28]
   1400253b5:	call   0x140029e0c
   1400253ba:	nop
   1400253bb:	lea    rax,[rip+0x1fd96]        # 0x140045158
   1400253c2:	mov    QWORD PTR [rbp-0x28],rax
   1400253c6:	lea    rax,[rip+0x1fda3]        # 0x140045170
   1400253cd:	mov    QWORD PTR [rbp-0x28],rax
   1400253d1:	lea    rdx,[rip+0x311b0]        # 0x140056588
   1400253d8:	lea    rcx,[rbp-0x28]
   1400253dc:	call   0x140029fe8
   1400253e1:	int3   
   1400253e2:	call   QWORD PTR [rip+0x1bdd8]        # 0x1400411c0
   1400253e8:	mov    ebx,eax
   1400253ea:	xor    ecx,ecx
   1400253ec:	xchg   QWORD PTR [rbp+0x18],rcx
   1400253f0:	test   rcx,rcx
   1400253f3:	je     0x1400253fc
   1400253f5:	call   QWORD PTR [rip+0x1bdcd]        # 0x1400411c8
   1400253fb:	nop
   1400253fc:	xor    ecx,ecx
   1400253fe:	xchg   QWORD PTR [rbp+0x20],rcx
   140025402:	test   rcx,rcx
   140025405:	je     0x14002540d
   140025407:	call   QWORD PTR [rip+0x1bdbb]        # 0x1400411c8
   14002540d:	mov    eax,ebx
   14002540f:	add    rsp,0x68
   140025413:	pop    rbx
   140025414:	pop    rbp
   140025415:	ret    
   140025416:	int3   
   140025417:	int3   
   140025418:	mov    rax,rsp
   14002541b:	push   rbp
   14002541c:	lea    rbp,[rax-0x5f]
   140025420:	sub    rsp,0xa0
   140025427:	mov    QWORD PTR [rbp+0x1f],0xfffffffffffffffe
   14002542f:	mov    QWORD PTR [rax+0x8],rbx
   140025433:	mov    ebx,ecx
   140025435:	lea    eax,[rcx-0x2]
   140025438:	mov    r8d,0x1
   14002543e:	cmp    eax,r8d
   140025441:	jbe    0x14002544d
   140025443:	mov    eax,0x80070057
   140025448:	jmp    0x1400255c0
   14002544d:	lea    rdx,[rip+0x20d74]        # 0x1400461c8
   140025454:	xor    ecx,ecx
   140025456:	call   QWORD PTR [rip+0x1bd3c]        # 0x140041198
   14002545c:	test   rax,rax
   14002545f:	jne    0x14002547b
   140025461:	call   QWORD PTR [rip+0x1bf71]        # 0x1400413d8
   140025467:	mov    ecx,eax
   140025469:	movzx  eax,ax
   14002546c:	or     eax,0x80070000
   140025471:	test   ecx,ecx
   140025473:	cmovle eax,ecx
   140025476:	jmp    0x1400255c0
   14002547b:	mov    QWORD PTR [rbp+0x77],rax
   14002547f:	mov    rcx,QWORD PTR [rbp+0x77]
   140025483:	test   rcx,rcx
   140025486:	jne    0x1400254c8
   140025488:	lea    rax,[rip+0x227d1]        # 0x140047c60
   14002548f:	mov    QWORD PTR [rbp+0x7f],rax
   140025493:	lea    rdx,[rbp+0x7f]
   140025497:	lea    rcx,[rbp+0x27]
   14002549b:	call   0x140029e0c
   1400254a0:	nop
   1400254a1:	lea    rax,[rip+0x1fcb0]        # 0x140045158
   1400254a8:	mov    QWORD PTR [rbp+0x27],rax
   1400254ac:	lea    rax,[rip+0x1fcbd]        # 0x140045170
   1400254b3:	mov    QWORD PTR [rbp+0x27],rax
   1400254b7:	lea    rdx,[rip+0x310ca]        # 0x140056588
   1400254be:	lea    rcx,[rbp+0x27]
   1400254c2:	call   0x140029fe8
   1400254c7:	int3   
   1400254c8:	mov    r8d,0x2
   1400254ce:	lea    rdx,[rip+0x200ab]        # 0x140045580
   1400254d5:	call   QWORD PTR [rip+0x1bcdd]        # 0x1400411b8
   1400254db:	test   rax,rax
   1400254de:	jne    0x1400254f9
   1400254e0:	call   QWORD PTR [rip+0x1bef2]        # 0x1400413d8
   1400254e6:	movzx  ebx,ax
   1400254e9:	or     ebx,0x80070000
   1400254ef:	test   eax,eax
   1400254f1:	cmovle ebx,eax
   1400254f4:	jmp    0x1400255ad
   1400254f9:	mov    QWORD PTR [rbp+0x6f],rax
   1400254fd:	mov    rcx,QWORD PTR [rbp+0x6f]
   140025501:	test   rcx,rcx
   140025504:	jne    0x140025546
   140025506:	lea    rax,[rip+0x22753]        # 0x140047c60
   14002550d:	mov    QWORD PTR [rbp+0x17],rax
   140025511:	lea    rdx,[rbp+0x17]
   140025515:	lea    rcx,[rbp+0x3f]
   140025519:	call   0x140029e0c
   14002551e:	nop
   14002551f:	lea    rax,[rip+0x1fc32]        # 0x140045158
   140025526:	mov    QWORD PTR [rbp+0x3f],rax
   14002552a:	lea    rax,[rip+0x1fc3f]        # 0x140045170
   140025531:	mov    QWORD PTR [rbp+0x3f],rax
   140025535:	lea    rdx,[rip+0x3104c]        # 0x140056588
   14002553c:	lea    rcx,[rbp+0x3f]
   140025540:	call   0x140029fe8
   140025545:	int3   
   140025546:	and    QWORD PTR [rsp+0x50],0x0
   14002554c:	and    QWORD PTR [rsp+0x48],0x0
   140025552:	and    QWORD PTR [rsp+0x40],0x0
   140025558:	and    QWORD PTR [rsp+0x38],0x0
   14002555e:	and    QWORD PTR [rsp+0x30],0x0
   140025564:	and    QWORD PTR [rsp+0x28],0x0
   14002556a:	and    QWORD PTR [rsp+0x20],0x0
   140025570:	or     edx,0xffffffff
   140025573:	mov    r9d,edx
   140025576:	mov    r8d,ebx
   140025579:	call   QWORD PTR [rip+0x1bc29]        # 0x1400411a8
   14002557f:	test   eax,eax
   140025581:	jne    0x140025599
   140025583:	call   QWORD PTR [rip+0x1be4f]        # 0x1400413d8
   140025589:	movzx  ebx,ax
   14002558c:	or     ebx,0x80070000
   140025592:	test   eax,eax
   140025594:	cmovle ebx,eax
   140025597:	jmp    0x14002559b
   140025599:	xor    ebx,ebx
   14002559b:	xor    ecx,ecx
   14002559d:	xchg   QWORD PTR [rbp+0x6f],rcx
   1400255a1:	test   rcx,rcx
   1400255a4:	je     0x1400255ad
   1400255a6:	call   QWORD PTR [rip+0x1bc1c]        # 0x1400411c8
   1400255ac:	nop
   1400255ad:	xor    ecx,ecx
   1400255af:	xchg   QWORD PTR [rbp+0x77],rcx
   1400255b3:	test   rcx,rcx
   1400255b6:	je     0x1400255be
   1400255b8:	call   QWORD PTR [rip+0x1bc0a]        # 0x1400411c8
   1400255be:	mov    eax,ebx
   1400255c0:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400255c8:	add    rsp,0xa0
   1400255cf:	pop    rbp
   1400255d0:	ret    
   1400255d1:	int3   
   1400255d2:	int3   
   1400255d3:	int3   
   1400255d4:	mov    QWORD PTR [rsp+0x10],rdx
   1400255d9:	push   rbx
   1400255da:	sub    rsp,0x30
   1400255de:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400255e7:	mov    rbx,rdx
   1400255ea:	xor    eax,eax
   1400255ec:	mov    DWORD PTR [rsp+0x20],eax
   1400255f0:	mov    QWORD PTR [rdx+0x18],0x7
   1400255f8:	mov    QWORD PTR [rdx+0x10],rax
   1400255fc:	mov    WORD PTR [rdx],ax
   1400255ff:	xor    r8d,r8d
   140025602:	mov    rdx,rcx
   140025605:	mov    rcx,rbx
   140025608:	call   0x1400039d4
   14002560d:	nop
   14002560e:	mov    DWORD PTR [rsp+0x20],0x1
   140025616:	mov    rax,rbx
   140025619:	add    rsp,0x30
   14002561d:	pop    rbx
   14002561e:	ret    
   14002561f:	int3   
   140025620:	rex push rbx
   140025622:	sub    rsp,0x20
   140025626:	lea    rax,[rip+0x22673]        # 0x140047ca0
   14002562d:	mov    rbx,rcx
   140025630:	mov    QWORD PTR [rcx],rax
   140025633:	mov    rcx,QWORD PTR [rcx+0x8]
   140025637:	test   rcx,rcx
   14002563a:	je     0x140025642
   14002563c:	call   QWORD PTR [rip+0x1bb86]        # 0x1400411c8
   140025642:	mov    rcx,QWORD PTR [rbx+0x10]
   140025646:	test   rcx,rcx
   140025649:	je     0x140025651
   14002564b:	call   QWORD PTR [rip+0x1bb77]        # 0x1400411c8
   140025651:	mov    rcx,QWORD PTR [rbx+0x18]
   140025655:	test   rcx,rcx
   140025658:	je     0x140025660
   14002565a:	call   QWORD PTR [rip+0x1bd28]        # 0x140041388
   140025660:	add    rsp,0x20
   140025664:	pop    rbx
   140025665:	ret    
   140025666:	int3   
   140025667:	int3   
   140025668:	mov    QWORD PTR [rsp+0x8],rbx
   14002566d:	push   rdi
   14002566e:	sub    rsp,0x20
   140025672:	lea    rax,[rip+0x22627]        # 0x140047ca0
   140025679:	mov    rbx,rcx
   14002567c:	mov    edi,edx
   14002567e:	mov    QWORD PTR [rcx],rax
   140025681:	mov    rcx,QWORD PTR [rcx+0x8]
   140025685:	test   rcx,rcx
   140025688:	je     0x140025690
   14002568a:	call   QWORD PTR [rip+0x1bb38]        # 0x1400411c8
   140025690:	mov    rcx,QWORD PTR [rbx+0x10]
   140025694:	test   rcx,rcx
   140025697:	je     0x14002569f
   140025699:	call   QWORD PTR [rip+0x1bb29]        # 0x1400411c8
   14002569f:	mov    rcx,QWORD PTR [rbx+0x18]
   1400256a3:	test   rcx,rcx
   1400256a6:	je     0x1400256ae
   1400256a8:	call   QWORD PTR [rip+0x1bcda]        # 0x140041388
   1400256ae:	test   dil,0x1
   1400256b2:	je     0x1400256bc
   1400256b4:	mov    rcx,rbx
   1400256b7:	call   0x14002657c
   1400256bc:	mov    rax,rbx
   1400256bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400256c4:	add    rsp,0x20
   1400256c8:	pop    rdi
   1400256c9:	ret    
   1400256ca:	int3   
   1400256cb:	int3   
   1400256cc:	rex push rbp
   1400256ce:	push   rbx
   1400256cf:	push   rsi
   1400256d0:	push   rdi
   1400256d1:	push   r12
   1400256d3:	mov    rbp,rsp
   1400256d6:	sub    rsp,0x70
   1400256da:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   1400256e2:	mov    rsi,rcx
   1400256e5:	lea    r12,[rip+0x225b4]        # 0x140047ca0
   1400256ec:	mov    QWORD PTR [rbp-0x20],r12
   1400256f0:	and    QWORD PTR [rbp-0x18],0x0
   1400256f5:	and    QWORD PTR [rbp-0x10],0x0
   1400256fa:	xor    edi,edi
   1400256fc:	mov    QWORD PTR [rbp-0x8],rdi
   140025700:	jmp    0x14002572a
   140025702:	call   QWORD PTR [rip+0x1bcd0]        # 0x1400413d8
   140025708:	cmp    eax,0xe7
   14002570d:	jne    0x1400257d6
   140025713:	xor    edx,edx
   140025715:	lea    rcx,[rip+0x2239c]        # 0x140047ab8
   14002571c:	call   QWORD PTR [rip+0x1bb76]        # 0x140041298
   140025722:	test   eax,eax
   140025724:	je     0x1400257d6
   14002572a:	and    QWORD PTR [rsp+0x30],0x0
   140025730:	and    DWORD PTR [rsp+0x28],0x0
   140025735:	mov    DWORD PTR [rsp+0x20],0x3
   14002573d:	xor    r9d,r9d
   140025740:	xor    r8d,r8d
   140025743:	mov    edx,0xc0000000
   140025748:	lea    rcx,[rip+0x22369]        # 0x140047ab8
   14002574f:	call   QWORD PTR [rip+0x1bafb]        # 0x140041250
   140025755:	cmp    rax,0xffffffffffffffff
   140025759:	mov    rbx,rax
   14002575c:	je     0x140025702
   14002575e:	mov    rdi,rax
   140025761:	mov    QWORD PTR [rbp-0x8],rax
   140025765:	mov    DWORD PTR [rbp+0x38],0x2
   14002576c:	xor    r9d,r9d
   14002576f:	xor    r8d,r8d
   140025772:	lea    rdx,[rbp+0x38]
   140025776:	mov    rcx,rax
   140025779:	call   QWORD PTR [rip+0x1bb21]        # 0x1400412a0
   14002577f:	test   eax,eax
   140025781:	je     0x1400257d6
   140025783:	and    QWORD PTR [rsp+0x20],0x0
   140025789:	lea    r9,[rbp+0x40]
   14002578d:	mov    r8d,0x124
   140025793:	mov    rdx,rsi
   140025796:	mov    rcx,rbx
   140025799:	call   QWORD PTR [rip+0x1bca1]        # 0x140041440
   14002579f:	test   eax,eax
   1400257a1:	je     0x1400257d6
   1400257a3:	cmp    DWORD PTR [rbp+0x40],0x124
   1400257aa:	jne    0x1400257d6
   1400257ac:	and    QWORD PTR [rsp+0x20],0x0
   1400257b2:	lea    r9,[rbp+0x48]
   1400257b6:	mov    r8d,0x4
   1400257bc:	lea    rdx,[rbp-0x30]
   1400257c0:	mov    rcx,rbx
   1400257c3:	call   QWORD PTR [rip+0x1be57]        # 0x140041620
   1400257c9:	test   eax,eax
   1400257cb:	je     0x1400257d6
   1400257cd:	cmp    DWORD PTR [rbp+0x48],0x4
   1400257d1:	mov    ebx,DWORD PTR [rbp-0x30]
   1400257d4:	je     0x1400257db
   1400257d6:	mov    ebx,0xe1230555
   1400257db:	mov    QWORD PTR [rbp-0x20],r12
   1400257df:	test   rdi,rdi
   1400257e2:	je     0x1400257ed
   1400257e4:	mov    rcx,rdi
   1400257e7:	call   QWORD PTR [rip+0x1bb9b]        # 0x140041388
   1400257ed:	mov    eax,ebx
   1400257ef:	add    rsp,0x70
   1400257f3:	pop    r12
   1400257f5:	pop    rdi
   1400257f6:	pop    rsi
   1400257f7:	pop    rbx
   1400257f8:	pop    rbp
   1400257f9:	ret    
   1400257fa:	int3   
   1400257fb:	int3   
   1400257fc:	mov    QWORD PTR [rsp+0x8],rbx
   140025801:	push   rdi
   140025802:	sub    rsp,0x20
   140025806:	mov    ebx,edx
   140025808:	mov    rdi,rcx
   14002580b:	call   0x14002582c
   140025810:	test   bl,0x1
   140025813:	je     0x14002581d
   140025815:	mov    rcx,rdi
   140025818:	call   0x14002657c
   14002581d:	mov    rax,rdi
   140025820:	mov    rbx,QWORD PTR [rsp+0x30]
   140025825:	add    rsp,0x20
   140025829:	pop    rdi
   14002582a:	ret    
   14002582b:	int3   
   14002582c:	mov    QWORD PTR [rsp+0x8],rcx
   140025831:	push   rbx
   140025832:	sub    rsp,0x30
   140025836:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002583f:	mov    rbx,rcx
   140025842:	lea    rax,[rip+0x22467]        # 0x140047cb0
   140025849:	mov    QWORD PTR [rcx],rax
   14002584c:	mov    rcx,QWORD PTR [rcx+0x8]
   140025850:	call   QWORD PTR [rip+0x1bb32]        # 0x140041388
   140025856:	and    QWORD PTR [rbx+0x8],0x0
   14002585b:	lea    rax,[rip+0x209ce]        # 0x140046230
   140025862:	mov    QWORD PTR [rbx],rax
   140025865:	add    rsp,0x30
   140025869:	pop    rbx
   14002586a:	ret    
   14002586b:	int3   
   14002586c:	mov    QWORD PTR [rsp+0x8],rbx
   140025871:	push   rdi
   140025872:	sub    rsp,0x20
   140025876:	mov    rdi,rcx
   140025879:	call   QWORD PTR [rip+0x1bb59]        # 0x1400413d8
   14002587f:	xor    ebx,ebx
   140025881:	cmp    eax,0xb7
   140025886:	jne    0x1400258a1
   140025888:	mov    rcx,QWORD PTR [rdi+0x8]
   14002588c:	call   QWORD PTR [rip+0x1baf6]        # 0x140041388
   140025892:	mov    ecx,0xb7
   140025897:	mov    QWORD PTR [rdi+0x8],rbx
   14002589b:	call   QWORD PTR [rip+0x1ba7f]        # 0x140041320
   1400258a1:	cmp    QWORD PTR [rdi+0x8],rbx
   1400258a5:	setne  bl
   1400258a8:	mov    eax,ebx
   1400258aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400258af:	add    rsp,0x20
   1400258b3:	pop    rdi
   1400258b4:	ret    
   1400258b5:	int3   
   1400258b6:	int3   
   1400258b7:	int3   
   1400258b8:	rex push rbx
   1400258ba:	sub    rsp,0x20
   1400258be:	mov    rbx,rcx
   1400258c1:	mov    ecx,0x1000
   1400258c6:	mov    eax,DWORD PTR [rbx+0x8]
   1400258c9:	test   eax,eax
   1400258cb:	je     0x1400258d5
   1400258cd:	pause  
   1400258cf:	dec    ecx
   1400258d1:	test   ecx,ecx
   1400258d3:	jg     0x1400258c6
   1400258d5:	test   ecx,ecx
   1400258d7:	jne    0x140025922
   1400258d9:	lock inc DWORD PTR [rbx+0x10]
   1400258dd:	jne    0x1400258f6
   1400258df:	xor    r9d,r9d
   1400258e2:	xor    r8d,r8d
   1400258e5:	xor    edx,edx
   1400258e7:	xor    ecx,ecx
   1400258e9:	call   QWORD PTR [rip+0x1bd91]        # 0x140041680
   1400258ef:	mov    QWORD PTR [rbx],rax
   1400258f2:	jmp    0x1400258fe
   1400258f4:	pause  
   1400258f6:	mov    rax,QWORD PTR [rbx]
   1400258f9:	test   rax,rax
   1400258fc:	je     0x1400258f4
   1400258fe:	lock inc DWORD PTR [rbx+0xc]
   140025902:	mov    eax,0x1
   140025907:	xchg   DWORD PTR [rbx+0x8],eax
   14002590a:	test   eax,eax
   14002590c:	je     0x140025930
   14002590e:	mov    rcx,QWORD PTR [rbx]
   140025911:	or     edx,0xffffffff
   140025914:	call   QWORD PTR [rip+0x1ba5e]        # 0x140041378
   14002591a:	lock dec DWORD PTR [rbx+0xc]
   14002591e:	test   eax,eax
   140025920:	jne    0x14002593a
   140025922:	mov    eax,0x1
   140025927:	xchg   DWORD PTR [rbx+0x8],eax
   14002592a:	test   eax,eax
   14002592c:	je     0x140025934
   14002592e:	jmp    0x1400258c1
   140025930:	lock dec DWORD PTR [rbx+0xc]
   140025934:	add    rsp,0x20
   140025938:	pop    rbx
   140025939:	ret    
   14002593a:	and    DWORD PTR [rsp+0x38],0x0
   14002593f:	mov    DWORD PTR [rsp+0x3c],0xe1232723
   140025947:	mov    rax,QWORD PTR [rsp+0x38]
   14002594c:	lea    rdx,[rip+0x3083d]        # 0x140056190
   140025953:	lea    rcx,[rsp+0x38]
   140025958:	mov    QWORD PTR [rsp+0x38],rax
   14002595d:	call   0x140029fe8
   140025962:	int3   
   140025963:	int3   
   140025964:	mov    rax,rsp
   140025967:	mov    QWORD PTR [rax+0x8],rbx
   14002596b:	mov    QWORD PTR [rax+0x10],rbp
   14002596f:	mov    QWORD PTR [rax+0x18],rsi
   140025973:	mov    QWORD PTR [rax+0x20],rdi
   140025977:	push   r12
   140025979:	push   r14
   14002597b:	push   r15
   14002597d:	sub    rsp,0x20
   140025981:	xor    r15d,r15d
   140025984:	mov    rdi,rdx
   140025987:	mov    ebx,ecx
   140025989:	test   ecx,ecx
   14002598b:	jne    0x140025991
   14002598d:	xor    eax,eax
   14002598f:	jmp    0x140025a02
   140025991:	mov    eax,0x8
   140025996:	mov    r12,0xffffffffffffffff
   14002599d:	mov    rbp,rbx
   1400259a0:	mul    rbx
   1400259a3:	cmovo  rax,r12
   1400259a7:	mov    rcx,rax
   1400259aa:	call   0x140027888
   1400259af:	mov    rsi,rax
   1400259b2:	test   ebx,ebx
   1400259b4:	je     0x1400259ff
   1400259b6:	mov    r14,rax
   1400259b9:	sub    r14,rdi
   1400259bc:	mov    rax,QWORD PTR [rdi]
   1400259bf:	mov    rbx,r12
   1400259c2:	inc    rbx
   1400259c5:	cmp    WORD PTR [rax+rbx*2],r15w
   1400259ca:	jne    0x1400259c2
   1400259cc:	inc    rbx
   1400259cf:	mov    eax,0x2
   1400259d4:	mul    rbx
   1400259d7:	cmovo  rax,r12
   1400259db:	mov    rcx,rax
   1400259de:	call   0x140027888
   1400259e3:	lea    r8,[rbx+rbx*1]
   1400259e7:	mov    QWORD PTR [r14+rdi*1],rax
   1400259eb:	mov    rdx,QWORD PTR [rdi]
   1400259ee:	mov    rcx,rax
   1400259f1:	call   0x1400265d0
   1400259f6:	add    rdi,0x8
   1400259fa:	dec    rbp
   1400259fd:	jne    0x1400259bc
   1400259ff:	mov    rax,rsi
   140025a02:	mov    rbx,QWORD PTR [rsp+0x40]
   140025a07:	mov    rbp,QWORD PTR [rsp+0x48]
   140025a0c:	mov    rsi,QWORD PTR [rsp+0x50]
   140025a11:	mov    rdi,QWORD PTR [rsp+0x58]
   140025a16:	add    rsp,0x20
   140025a1a:	pop    r15
   140025a1c:	pop    r14
   140025a1e:	pop    r12
   140025a20:	ret    
   140025a21:	int3   
   140025a22:	int3   
   140025a23:	int3   
   140025a24:	mov    QWORD PTR [rsp+0x8],rbx
   140025a29:	push   rdi
   140025a2a:	sub    rsp,0x20
   140025a2e:	mov    ebx,edx
   140025a30:	mov    rdi,rcx
   140025a33:	call   0x140025a54
   140025a38:	test   bl,0x1
   140025a3b:	je     0x140025a45
   140025a3d:	mov    rcx,rdi
   140025a40:	call   0x14002657c
   140025a45:	mov    rax,rdi
   140025a48:	mov    rbx,QWORD PTR [rsp+0x30]
   140025a4d:	add    rsp,0x20
   140025a51:	pop    rdi
   140025a52:	ret    
   140025a53:	int3   
   140025a54:	mov    QWORD PTR [rsp+0x8],rcx
   140025a59:	push   rbx
   140025a5a:	sub    rsp,0x30
   140025a5e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140025a67:	mov    rbx,rcx
   140025a6a:	lea    rax,[rip+0x2225f]        # 0x140047cd0
   140025a71:	mov    QWORD PTR [rcx],rax
   140025a74:	mov    rcx,QWORD PTR [rcx+0x8]
   140025a78:	test   rcx,rcx
   140025a7b:	je     0x140025a88
   140025a7d:	call   QWORD PTR [rip+0x1b905]        # 0x140041388
   140025a83:	and    QWORD PTR [rbx+0x8],0x0
   140025a88:	lea    rax,[rip+0x207a1]        # 0x140046230
   140025a8f:	mov    QWORD PTR [rbx],rax
   140025a92:	add    rsp,0x30
   140025a96:	pop    rbx
   140025a97:	ret    
   140025a98:	mov    rax,rsp
   140025a9b:	push   rbp
   140025a9c:	push   rdi
   140025a9d:	push   r14
   140025a9f:	lea    rbp,[rax-0x28]
   140025aa3:	sub    rsp,0x110
   140025aaa:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140025ab3:	mov    QWORD PTR [rax+0x18],rbx
   140025ab7:	mov    QWORD PTR [rax+0x20],rsi
   140025abb:	mov    rax,QWORD PTR [rip+0x335c6]        # 0x140059088
   140025ac2:	xor    rax,rsp
   140025ac5:	mov    QWORD PTR [rbp+0x8],rax
   140025ac9:	mov    rbx,rdx
   140025acc:	mov    rdi,rcx
   140025acf:	mov    r8d,0x2
   140025ad5:	lea    rdx,[rsp+0x38]
   140025ada:	call   0x14000d564
   140025adf:	nop
   140025ae0:	lea    rdx,[rip+0x20f05]        # 0x1400469ec
   140025ae7:	mov    rcx,QWORD PTR [rsp+0x38]
   140025aec:	call   0x140026fd8
   140025af1:	xor    r14d,r14d
   140025af4:	mov    esi,r14d
   140025af7:	test   eax,eax
   140025af9:	sete   sil
   140025afd:	lea    rdx,[rsp+0x30]
   140025b02:	mov    rcx,QWORD PTR [rdi]
   140025b05:	test   esi,esi
   140025b07:	lea    r8d,[r14+0x10]
   140025b0b:	jne    0x140025b11
   140025b0d:	lea    r8d,[r14+0xa]
   140025b11:	call   0x140027354
   140025b16:	mov    DWORD PTR [rbx],eax
   140025b18:	mov    rax,QWORD PTR [rsp+0x30]
   140025b1d:	cmp    WORD PTR [rax],r14w
   140025b21:	je     0x140025b4b
   140025b23:	mov    r9,QWORD PTR [rdi]
   140025b26:	mov    edx,0xe1230551
   140025b2b:	mov    r8d,0x1
   140025b31:	lea    rcx,[rbp-0x80]
   140025b35:	call   0x140010a9c
   140025b3a:	lea    rdx,[rip+0x304af]        # 0x140055ff0
   140025b41:	lea    rcx,[rbp-0x80]
   140025b45:	call   0x140029fe8
   140025b4a:	int3   
   140025b4b:	cmp    DWORD PTR [rbx],0xffffffff
   140025b4e:	ja     0x140025b72
   140025b50:	mov    rdx,QWORD PTR [rsp+0x38]
   140025b55:	add    rdx,0xffffffffffffffe8
   140025b59:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140025b5e:	jg     0x140025bf7
   140025b64:	mov    rcx,QWORD PTR [rdx]
   140025b67:	mov    rax,QWORD PTR [rcx]
   140025b6a:	call   QWORD PTR [rax+0x8]
   140025b6d:	jmp    0x140025bf7
   140025b72:	xor    r9d,r9d
   140025b75:	lea    ebx,[r9+0x28]
   140025b79:	lea    rcx,[rbp-0x20]
   140025b7d:	mov    edx,ebx
   140025b7f:	test   esi,esi
   140025b81:	je     0x140025b98
   140025b83:	lea    r8,[rip+0x2215e]        # 0x140047ce8
   140025b8a:	call   0x140004164
   140025b8f:	lea    r8,[rip+0x22152]        # 0x140047ce8
   140025b96:	jmp    0x140025bab
   140025b98:	lea    r8,[rip+0x1fda1]        # 0x140045940
   140025b9f:	call   0x140004164
   140025ba4:	lea    r8,[rip+0x1fd95]        # 0x140045940
   140025bab:	or     r9d,0xffffffff
   140025baf:	mov    rdx,rbx
   140025bb2:	lea    rcx,[rbp-0x48]
   140025bb6:	call   0x140004164
   140025bbb:	lea    rax,[rbp-0x48]
   140025bbf:	mov    QWORD PTR [rsp+0x28],rax
   140025bc4:	lea    rax,[rbp-0x20]
   140025bc8:	mov    QWORD PTR [rsp+0x20],rax
   140025bcd:	mov    r9,QWORD PTR [rdi]
   140025bd0:	mov    edx,0xe1230550
   140025bd5:	mov    r8d,0x3
   140025bdb:	lea    rcx,[rsp+0x48]
   140025be0:	call   0x140010a9c
   140025be5:	lea    rdx,[rip+0x30404]        # 0x140055ff0
   140025bec:	lea    rcx,[rsp+0x48]
   140025bf1:	call   0x140029fe8
   140025bf6:	nop
   140025bf7:	mov    rcx,QWORD PTR [rbp+0x8]
   140025bfb:	xor    rcx,rsp
   140025bfe:	call   0x1400265a0
   140025c03:	lea    r11,[rsp+0x110]
   140025c0b:	mov    rbx,QWORD PTR [r11+0x30]
   140025c0f:	mov    rsi,QWORD PTR [r11+0x38]
   140025c13:	mov    rsp,r11
   140025c16:	pop    r14
   140025c18:	pop    rdi
   140025c19:	pop    rbp
   140025c1a:	ret    
   140025c1b:	int3   
   140025c1c:	mov    rax,rsp
   140025c1f:	mov    QWORD PTR [rax+0x20],r9
   140025c23:	push   rbp
   140025c24:	push   r12
   140025c26:	push   r13
   140025c28:	push   r14
   140025c2a:	push   r15
   140025c2c:	lea    rbp,[rax-0x48]
   140025c30:	sub    rsp,0x120
   140025c37:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   140025c3f:	mov    QWORD PTR [rax+0x8],rbx
   140025c43:	mov    QWORD PTR [rax+0x10],rsi
   140025c47:	mov    QWORD PTR [rax+0x18],rdi
   140025c4b:	mov    r12,r8
   140025c4e:	mov    rdi,rdx
   140025c51:	mov    r15,rcx
   140025c54:	xor    r14d,r14d
   140025c57:	test   r9,r9
   140025c5a:	jne    0x140025c98
   140025c5c:	lea    ebx,[r9+0x1]
   140025c60:	mov    DWORD PTR [rsp+0x68],ebx
   140025c64:	mov    DWORD PTR [rsp+0x6c],0xe12305e1
   140025c6c:	mov    QWORD PTR [rsp+0x70],r14
   140025c71:	mov    QWORD PTR [rsp+0x78],r14
   140025c76:	mov    QWORD PTR [rbp-0x80],r14
   140025c7a:	mov    QWORD PTR [rbp-0x78],r14
   140025c7e:	mov    QWORD PTR [rbp-0x70],r14
   140025c82:	mov    QWORD PTR [rbp-0x68],r14
   140025c86:	lea    rdx,[rip+0x30363]        # 0x140055ff0
   140025c8d:	lea    rcx,[rsp+0x68]
   140025c92:	call   0x140029fe8
   140025c97:	int3   
   140025c98:	xor    eax,eax
   140025c9a:	mov    QWORD PTR [rdx],rax
   140025c9d:	mov    QWORD PTR [rdx+0x8],rax
   140025ca1:	mov    QWORD PTR [rdx+0x10],rax
   140025ca5:	mov    rax,QWORD PTR [r8]
   140025ca8:	lea    rdx,[rax-0x18]
   140025cac:	mov    rbx,QWORD PTR [rdx]
   140025caf:	cmp    DWORD PTR [rdx+0x8],r14d
   140025cb3:	je     0x140025cfa
   140025cb5:	cmp    DWORD PTR [rdx+0x10],r14d
   140025cb9:	jge    0x140025cd9
   140025cbb:	cmp    DWORD PTR [rax-0xc],r14d
   140025cbf:	jge    0x140025ccc
   140025cc1:	mov    ecx,0x80070057
   140025cc6:	call   0x14000400c
   140025ccb:	int3   
   140025ccc:	mov    DWORD PTR [rax-0x10],r14d
   140025cd0:	mov    rax,QWORD PTR [r8]
   140025cd3:	mov    WORD PTR [rax],r14w
   140025cd7:	jmp    0x140025cfa
   140025cd9:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140025cde:	jg     0x140025ce9
   140025ce0:	mov    rcx,QWORD PTR [rdx]
   140025ce3:	mov    rax,QWORD PTR [rcx]
   140025ce6:	call   QWORD PTR [rax+0x8]
   140025ce9:	mov    rax,QWORD PTR [rbx]
   140025cec:	mov    rcx,rbx
   140025cef:	call   QWORD PTR [rax+0x18]
   140025cf2:	add    rax,0x18
   140025cf6:	mov    QWORD PTR [r12],rax
   140025cfa:	mov    rax,QWORD PTR [r15]
   140025cfd:	cmp    DWORD PTR [rax-0x10],r14d
   140025d01:	jne    0x140025d3b
   140025d03:	mov    ebx,0x1
   140025d08:	mov    DWORD PTR [rbp-0x60],ebx
   140025d0b:	mov    DWORD PTR [rbp-0x5c],0xe123054e
   140025d12:	mov    QWORD PTR [rbp-0x58],r14
   140025d16:	mov    QWORD PTR [rbp-0x50],r14
   140025d1a:	mov    QWORD PTR [rbp-0x48],r14
   140025d1e:	mov    QWORD PTR [rbp-0x40],r14
   140025d22:	mov    QWORD PTR [rbp-0x38],r14
   140025d26:	mov    QWORD PTR [rbp-0x30],r14
   140025d2a:	lea    rdx,[rip+0x302bf]        # 0x140055ff0
   140025d31:	lea    rcx,[rbp-0x60]
   140025d35:	call   0x140029fe8
   140025d3a:	int3   
   140025d3b:	xor    r13d,r13d
   140025d3e:	mov    QWORD PTR [rsp+0x30],r13
   140025d43:	mov    QWORD PTR [rsp+0x38],r13
   140025d48:	lea    ebx,[r13+0x1]
   140025d4c:	mov    rcx,QWORD PTR [r15]
   140025d4f:	test   r14d,r14d
   140025d52:	js     0x140025d7f
   140025d54:	cmp    r14d,DWORD PTR [rcx-0x10]
   140025d58:	jge    0x140025d7f
   140025d5a:	mov    edx,0x2c
   140025d5f:	movsxd rax,r14d
   140025d62:	lea    rcx,[rcx+rax*2]
   140025d66:	call   0x140026e50
   140025d6b:	mov    rsi,rax
   140025d6e:	test   rax,rax
   140025d71:	je     0x140025e18
   140025d77:	sub    rsi,QWORD PTR [r15]
   140025d7a:	sar    rsi,1
   140025d7d:	jmp    0x140025d82
   140025d7f:	or     esi,0xffffffff
   140025d82:	cmp    esi,0xffffffff
   140025d85:	je     0x140025e18
   140025d8b:	cmp    esi,r14d
   140025d8e:	jne    0x140025dd1
   140025d90:	add    r14d,ebx
   140025d93:	lea    rdx,[rip+0x1f796]        # 0x140045530
   140025d9a:	lea    rcx,[rsp+0x60]
   140025d9f:	call   0x140006b8c
   140025da4:	nop
   140025da5:	mov    rdx,rax
   140025da8:	lea    rcx,[rsp+0x30]
   140025dad:	call   0x140006c28
   140025db2:	nop
   140025db3:	mov    rdx,QWORD PTR [rsp+0x60]
   140025db8:	add    rdx,0xffffffffffffffe8
   140025dbc:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140025dc1:	jg     0x140025d4c
   140025dc3:	mov    rcx,QWORD PTR [rdx]
   140025dc6:	mov    rax,QWORD PTR [rcx]
   140025dc9:	call   QWORD PTR [rax+0x8]
   140025dcc:	jmp    0x140025d4c
   140025dd1:	mov    r9d,esi
   140025dd4:	sub    r9d,r14d
   140025dd7:	mov    r8d,r14d
   140025dda:	lea    rdx,[rsp+0x58]
   140025ddf:	mov    rcx,r15
   140025de2:	call   0x14000d95c
   140025de7:	nop
   140025de8:	mov    rdx,rax
   140025deb:	lea    rcx,[rsp+0x30]
   140025df0:	call   0x140006c28
   140025df5:	nop
   140025df6:	mov    rdx,QWORD PTR [rsp+0x58]
   140025dfb:	add    rdx,0xffffffffffffffe8
   140025dff:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140025e04:	jg     0x140025e0f
   140025e06:	mov    rcx,QWORD PTR [rdx]
   140025e09:	mov    rax,QWORD PTR [rcx]
   140025e0c:	call   QWORD PTR [rax+0x8]
   140025e0f:	lea    r14d,[rsi+0x1]
   140025e13:	jmp    0x140025d4c
   140025e18:	mov    r8d,r14d
   140025e1b:	lea    rdx,[rsp+0x50]
   140025e20:	mov    rcx,r15
   140025e23:	call   0x140026124
   140025e28:	nop
   140025e29:	mov    rdx,rax
   140025e2c:	lea    rcx,[rsp+0x30]
   140025e31:	call   0x140006c28
   140025e36:	nop
   140025e37:	mov    rdx,QWORD PTR [rsp+0x50]
   140025e3c:	add    rdx,0xffffffffffffffe8
   140025e40:	or     r15,0xffffffffffffffff
   140025e44:	mov    eax,r15d
   140025e47:	lock xadd DWORD PTR [rdx+0x10],eax
   140025e4c:	add    eax,r15d
   140025e4f:	test   eax,eax
   140025e51:	mov    r13,QWORD PTR [rbp+0x68]
   140025e55:	jg     0x140025e60
   140025e57:	mov    rcx,QWORD PTR [rdx]
   140025e5a:	mov    rax,QWORD PTR [rcx]
   140025e5d:	call   QWORD PTR [rax+0x8]
   140025e60:	xor    r14d,r14d
   140025e63:	cmp    DWORD PTR [rsp+0x38],r14d
   140025e68:	jg     0x140025e7e
   140025e6a:	xor    r9d,r9d
   140025e6d:	xor    r8d,r8d
   140025e70:	mov    edx,ebx
   140025e72:	mov    ecx,0xc000008c
   140025e77:	call   QWORD PTR [rip+0x1b523]        # 0x1400413a0
   140025e7d:	int3   
   140025e7e:	mov    rax,QWORD PTR [rsp+0x30]
   140025e83:	mov    r8,QWORD PTR [r13+0x0]
   140025e87:	mov    rdx,QWORD PTR [rax]
   140025e8a:	mov    rcx,r13
   140025e8d:	call   QWORD PTR [r8+0x8]
   140025e91:	mov    rsi,rax
   140025e94:	test   rax,rax
   140025e97:	jne    0x140025ede
   140025e99:	cmp    DWORD PTR [rsp+0x38],r14d
   140025e9e:	jg     0x140025eb4
   140025ea0:	xor    r9d,r9d
   140025ea3:	xor    r8d,r8d
   140025ea6:	mov    edx,ebx
   140025ea8:	mov    ecx,0xc000008c
   140025ead:	call   QWORD PTR [rip+0x1b4ed]        # 0x1400413a0
   140025eb3:	int3   
   140025eb4:	mov    r9,QWORD PTR [rsp+0x30]
   140025eb9:	mov    r9,QWORD PTR [r9]
   140025ebc:	mov    r8d,ebx
   140025ebf:	mov    edx,0xe12305e2
   140025ec4:	lea    rcx,[rbp-0x20]
   140025ec8:	call   0x140010a9c
   140025ecd:	lea    rdx,[rip+0x3011c]        # 0x140055ff0
   140025ed4:	lea    rcx,[rbp-0x20]
   140025ed8:	call   0x140029fe8
   140025edd:	int3   
   140025ede:	or     DWORD PTR [rdi+0x4],0x3
   140025ee2:	cmp    DWORD PTR [rsp+0x38],0x2
   140025ee7:	jl     0x140025f1c
   140025ee9:	cmp    DWORD PTR [rsp+0x38],ebx
   140025eed:	jg     0x140025f03
   140025eef:	xor    r9d,r9d
   140025ef2:	xor    r8d,r8d
   140025ef5:	mov    edx,ebx
   140025ef7:	mov    ecx,0xc000008c
   140025efc:	call   QWORD PTR [rip+0x1b49e]        # 0x1400413a0
   140025f02:	int3   
   140025f03:	mov    rcx,QWORD PTR [rsp+0x30]
   140025f08:	add    rcx,0x8
   140025f0c:	lea    rdx,[rsp+0x40]
   140025f11:	call   0x140025a98
   140025f16:	mov    eax,DWORD PTR [rsp+0x40]
   140025f1a:	jmp    0x140025f1f
   140025f1c:	mov    eax,DWORD PTR [rax+0x20]
   140025f1f:	mov    QWORD PTR [rdi+0x8],rax
   140025f23:	lea    rdx,[rip+0x2124e]        # 0x140047178
   140025f2a:	lea    rcx,[rsp+0x48]
   140025f2f:	call   0x140006b8c
   140025f34:	nop
   140025f35:	cmp    DWORD PTR [rsp+0x38],r14d
   140025f3a:	jg     0x140025f50
   140025f3c:	xor    r9d,r9d
   140025f3f:	xor    r8d,r8d
   140025f42:	mov    edx,ebx
   140025f44:	mov    ecx,0xc000008c
   140025f49:	call   QWORD PTR [rip+0x1b451]        # 0x1400413a0
   140025f4f:	int3   
   140025f50:	mov    eax,r14d
   140025f53:	mov    rdx,QWORD PTR [rsp+0x48]
   140025f58:	test   rdx,rdx
   140025f5b:	setne  al
   140025f5e:	test   eax,eax
   140025f60:	jne    0x140025f6d
   140025f62:	mov    ecx,0x80004005
   140025f67:	call   0x14000400c
   140025f6c:	int3   
   140025f6d:	mov    rax,QWORD PTR [rsp+0x30]
   140025f72:	mov    rcx,QWORD PTR [rax]
   140025f75:	call   0x140026fd8
   140025f7a:	test   eax,eax
   140025f7c:	jne    0x140025f8d
   140025f7e:	mov    eax,0x2710
   140025f83:	cmp    QWORD PTR [rdi+0x8],rax
   140025f87:	jae    0x140025f8d
   140025f89:	mov    QWORD PTR [rdi+0x8],rax
   140025f8d:	cmp    DWORD PTR [rsp+0x38],0x3
   140025f92:	jl     0x140025fc2
   140025f94:	cmp    DWORD PTR [rsp+0x38],0x2
   140025f99:	jg     0x140025faf
   140025f9b:	xor    r9d,r9d
   140025f9e:	xor    r8d,r8d
   140025fa1:	mov    edx,ebx
   140025fa3:	mov    ecx,0xc000008c
   140025fa8:	call   QWORD PTR [rip+0x1b3f2]        # 0x1400413a0
   140025fae:	int3   
   140025faf:	mov    rdx,QWORD PTR [rsp+0x30]
   140025fb4:	add    rdx,0x10
   140025fb8:	mov    rcx,r12
   140025fbb:	call   0x14000cdac
   140025fc0:	jmp    0x140025fe8
   140025fc2:	mov    rdx,QWORD PTR [rsi+0x10]
   140025fc6:	test   rdx,rdx
   140025fc9:	jne    0x140025fd0
   140025fcb:	mov    eax,r14d
   140025fce:	jmp    0x140025fdd
   140025fd0:	mov    rax,r15
   140025fd3:	inc    rax
   140025fd6:	cmp    WORD PTR [rdx+rax*2],r14w
   140025fdb:	jne    0x140025fd3
   140025fdd:	mov    r8d,eax
   140025fe0:	mov    rcx,r12
   140025fe3:	call   0x140006f54
   140025fe8:	cmp    DWORD PTR [rip+0x36add],r14d        # 0x14005cacc
   140025fef:	jne    0x140025ffc
   140025ff1:	call   0x140012b10
   140025ff6:	mov    DWORD PTR [rip+0x36ad0],ebx        # 0x14005cacc
   140025ffc:	mov    eax,DWORD PTR [rip+0x36ba2]        # 0x14005cba4
   140026002:	mov    DWORD PTR [rdi],eax
   140026004:	mov    eax,DWORD PTR [rip+0x36b9a]        # 0x14005cba4
   14002600a:	cmp    eax,0x2
   14002600d:	je     0x140026065
   14002600f:	cmp    eax,0x3
   140026012:	je     0x14002601d
   140026014:	add    eax,0xfffffffb
   140026017:	cmp    eax,ebx
   140026019:	jbe    0x140026065
   14002601b:	jmp    0x14002606b
   14002601d:	mov    eax,DWORD PTR [rsi+0x38]
   140026020:	shr    eax,0x19
   140026023:	xor    eax,DWORD PTR [rdi+0x10]
   140026026:	and    eax,0x3f
   140026029:	xor    DWORD PTR [rdi+0x10],eax
   14002602c:	mov    eax,DWORD PTR [rsi+0x38]
   14002602f:	shr    eax,0x3
   140026032:	xor    eax,DWORD PTR [rdi+0x10]
   140026035:	and    eax,0x3fffc0
   14002603a:	xor    eax,DWORD PTR [rdi+0x10]
   14002603d:	mov    DWORD PTR [rdi+0x10],eax
   140026040:	mov    ecx,DWORD PTR [rsi+0x40]
   140026043:	shl    ecx,0x9
   140026046:	xor    ecx,eax
   140026048:	and    ecx,0x1c00000
   14002604e:	xor    ecx,eax
   140026050:	mov    DWORD PTR [rdi+0x10],ecx
   140026053:	movzx  eax,BYTE PTR [rsi+0x30]
   140026057:	shl    eax,0x19
   14002605a:	xor    eax,ecx
   14002605c:	and    eax,0x6000000
   140026061:	xor    eax,ecx
   140026063:	jmp    0x140026068
   140026065:	mov    eax,DWORD PTR [rsi+0x30]
   140026068:	mov    DWORD PTR [rdi+0x10],eax
   14002606b:	mov    rdx,QWORD PTR [rsp+0x48]
   140026070:	add    rdx,0xffffffffffffffe8
   140026074:	mov    eax,r15d
   140026077:	lock xadd DWORD PTR [rdx+0x10],eax
   14002607c:	add    eax,r15d
   14002607f:	test   eax,eax
   140026081:	jg     0x14002608d
   140026083:	mov    rcx,QWORD PTR [rdx]
   140026086:	mov    rax,QWORD PTR [rcx]
   140026089:	call   QWORD PTR [rax+0x8]
   14002608c:	nop
   14002608d:	lea    rcx,[rsp+0x30]
   140026092:	call   0x1400072ec
   140026097:	lea    r11,[rsp+0x120]
   14002609f:	mov    rbx,QWORD PTR [r11+0x30]
   1400260a3:	mov    rsi,QWORD PTR [r11+0x38]
   1400260a7:	mov    rdi,QWORD PTR [r11+0x40]
   1400260ab:	mov    rsp,r11
   1400260ae:	pop    r15
   1400260b0:	pop    r14
   1400260b2:	pop    r13
   1400260b4:	pop    r12
   1400260b6:	pop    rbp
   1400260b7:	ret    
   1400260b8:	mov    rax,rsp
   1400260bb:	push   rdi
   1400260bc:	sub    rsp,0x30
   1400260c0:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   1400260c8:	mov    QWORD PTR [rax+0x8],rbx
   1400260cc:	mov    QWORD PTR [rax+0x10],rsi
   1400260d0:	mov    rbx,r9
   1400260d3:	mov    rdi,r8
   1400260d6:	mov    rsi,rdx
   1400260d9:	mov    rdx,rcx
   1400260dc:	lea    rcx,[rax-0x18]
   1400260e0:	call   0x140006b8c
   1400260e5:	nop
   1400260e6:	mov    r9,rbx
   1400260e9:	mov    r8,rdi
   1400260ec:	mov    rdx,rsi
   1400260ef:	mov    rcx,rax
   1400260f2:	call   0x140025c1c
   1400260f7:	nop
   1400260f8:	mov    rdx,QWORD PTR [rsp+0x20]
   1400260fd:	add    rdx,0xffffffffffffffe8
   140026101:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140026106:	jg     0x140026111
   140026108:	mov    rcx,QWORD PTR [rdx]
   14002610b:	mov    rax,QWORD PTR [rcx]
   14002610e:	call   QWORD PTR [rax+0x8]
   140026111:	mov    rbx,QWORD PTR [rsp+0x40]
   140026116:	mov    rsi,QWORD PTR [rsp+0x48]
   14002611b:	add    rsp,0x30
   14002611f:	pop    rdi
   140026120:	ret    
   140026121:	int3   
   140026122:	int3   
   140026123:	int3   
   140026124:	mov    QWORD PTR [rsp+0x10],rdx
   140026129:	push   rbx
   14002612a:	sub    rsp,0x30
   14002612e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140026137:	mov    rbx,rdx
   14002613a:	and    DWORD PTR [rsp+0x20],0x0
   14002613f:	mov    rax,QWORD PTR [rcx]
   140026142:	mov    r9d,DWORD PTR [rax-0x10]
   140026146:	sub    r9d,r8d
   140026149:	call   0x14000d95c
   14002614e:	nop
   14002614f:	mov    DWORD PTR [rsp+0x20],0x1
   140026157:	mov    rax,rbx
   14002615a:	add    rsp,0x30
   14002615e:	pop    rbx
   14002615f:	ret    
   140026160:	int3   
   140026161:	int3   
   140026162:	int3   
   140026163:	int3   
   140026164:	mov    rax,rsp
   140026167:	mov    QWORD PTR [rax+0x8],rbx
   14002616b:	mov    QWORD PTR [rax+0x10],rbp
   14002616f:	mov    QWORD PTR [rax+0x18],rsi
   140026173:	mov    QWORD PTR [rax+0x20],rdi
   140026177:	push   r14
   140026179:	sub    rsp,0x20
   14002617d:	xor    r14d,r14d
   140026180:	mov    rbx,rdx
   140026183:	mov    rbp,rcx
   140026186:	test   rcx,rcx
   140026189:	je     0x1400261d3
   14002618b:	test   rdx,rdx
   14002618e:	je     0x1400261d3
   140026190:	movzx  eax,WORD PTR [rdx+0x14]
   140026194:	lea    rdi,[rdx+0x18]
   140026198:	add    rdi,rax
   14002619b:	je     0x1400261d3
   14002619d:	cmp    r14w,WORD PTR [rdx+0x6]
   1400261a2:	mov    esi,r14d
   1400261a5:	jae    0x1400261d3
   1400261a7:	test   rdi,rdi
   1400261aa:	je     0x1400261c1
   1400261ac:	mov    r8d,0x8
   1400261b2:	mov    rdx,rdi
   1400261b5:	mov    rcx,rbp
   1400261b8:	call   0x140038a50
   1400261bd:	test   eax,eax
   1400261bf:	je     0x1400261cf
   1400261c1:	movzx  eax,WORD PTR [rbx+0x6]
   1400261c5:	inc    esi
   1400261c7:	add    rdi,0x28
   1400261cb:	cmp    esi,eax
   1400261cd:	jmp    0x1400261a5
   1400261cf:	mov    al,0x1
   1400261d1:	jmp    0x1400261d5
   1400261d3:	xor    al,al
   1400261d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400261da:	mov    rbp,QWORD PTR [rsp+0x38]
   1400261df:	mov    rsi,QWORD PTR [rsp+0x40]
   1400261e4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400261e9:	add    rsp,0x20
   1400261ed:	pop    r14
   1400261ef:	ret    
   1400261f0:	mov    rax,rsp
   1400261f3:	mov    QWORD PTR [rax+0x8],rbx
   1400261f7:	mov    QWORD PTR [rax+0x10],rsi
   1400261fb:	mov    QWORD PTR [rax+0x18],rdi
   1400261ff:	push   r14
   140026201:	sub    rsp,0x40
   140026205:	and    QWORD PTR [rax-0x18],0x0
   14002620a:	xor    r9d,r9d
   14002620d:	mov    r14,rdx
   140026210:	mov    DWORD PTR [rax-0x20],0x80
   140026217:	lea    r8d,[r9+0x1]
   14002621b:	mov    edx,0x80000000
   140026220:	mov    DWORD PTR [rax-0x28],0x3
   140026227:	call   QWORD PTR [rip+0x1b103]        # 0x140041330
   14002622d:	mov    rdi,rax
   140026230:	cmp    rax,0xffffffffffffffff
   140026234:	jne    0x14002623d
   140026236:	xor    al,al
   140026238:	jmp    0x1400262e6
   14002623d:	and    QWORD PTR [rsp+0x28],0x0
   140026243:	and    DWORD PTR [rsp+0x20],0x0
   140026248:	xor    r9d,r9d
   14002624b:	lea    r8d,[r9+0x2]
   14002624f:	xor    edx,edx
   140026251:	mov    rcx,rax
   140026254:	call   QWORD PTR [rip+0x1b3ee]        # 0x140041648
   14002625a:	mov    rsi,rax
   14002625d:	test   rax,rax
   140026260:	jne    0x14002626d
   140026262:	mov    rcx,rdi
   140026265:	call   QWORD PTR [rip+0x1b11d]        # 0x140041388
   14002626b:	jmp    0x140026236
   14002626d:	and    QWORD PTR [rsp+0x20],0x0
   140026273:	xor    r9d,r9d
   140026276:	xor    r8d,r8d
   140026279:	lea    edx,[r9+0x4]
   14002627d:	mov    rcx,rax
   140026280:	call   QWORD PTR [rip+0x1b3a2]        # 0x140041628
   140026286:	mov    rbx,rax
   140026289:	test   rax,rax
   14002628c:	jne    0x14002629c
   14002628e:	mov    rcx,rdi
   140026291:	call   QWORD PTR [rip+0x1b0f1]        # 0x140041388
   140026297:	mov    rcx,rsi
   14002629a:	jmp    0x140026265
   14002629c:	mov    eax,0x5a4d
   1400262a1:	cmp    WORD PTR [rbx],ax
   1400262a4:	je     0x1400262c6
   1400262a6:	mov    rcx,rdi
   1400262a9:	call   QWORD PTR [rip+0x1b0d9]        # 0x140041388
   1400262af:	mov    rcx,rsi
   1400262b2:	call   QWORD PTR [rip+0x1b0d0]        # 0x140041388
   1400262b8:	mov    rcx,rbx
   1400262bb:	call   QWORD PTR [rip+0x1b36f]        # 0x140041630
   1400262c1:	jmp    0x140026236
   1400262c6:	movsxd rax,DWORD PTR [rbx+0x3c]
   1400262ca:	add    rax,rbx
   1400262cd:	cmp    DWORD PTR [rax],0x4550
   1400262d3:	jne    0x1400262a6
   1400262d5:	mov    QWORD PTR [r14+0x18],rax
   1400262d9:	mov    QWORD PTR [r14],rdi
   1400262dc:	mov    QWORD PTR [r14+0x8],rsi
   1400262e0:	mov    al,0x1
   1400262e2:	mov    QWORD PTR [r14+0x10],rbx
   1400262e6:	mov    rbx,QWORD PTR [rsp+0x50]
   1400262eb:	mov    rsi,QWORD PTR [rsp+0x58]
   1400262f0:	mov    rdi,QWORD PTR [rsp+0x60]
   1400262f5:	add    rsp,0x40
   1400262f9:	pop    r14
   1400262fb:	ret    
   1400262fc:	rex push rbx
   1400262fe:	push   rdi
   1400262ff:	sub    rsp,0x48
   140026303:	xor    r9d,r9d
   140026306:	lea    r8,[rsp+0x70]
   14002630b:	lea    rcx,[rip+0x1fdfe]        # 0x140046110
   140026312:	lea    ebx,[r9+0x1]
   140026316:	mov    edx,ebx
   140026318:	call   QWORD PTR [rip+0x1ad32]        # 0x140041050
   14002631e:	xor    edi,edi
   140026320:	test   eax,eax
   140026322:	jne    0x14002632f
   140026324:	call   QWORD PTR [rip+0x1b0ae]        # 0x1400413d8
   14002632a:	jmp    0x1400263ea
   14002632f:	mov    rcx,QWORD PTR [rsp+0x70]
   140026334:	lea    r9,[rsp+0x60]
   140026339:	lea    r8,[rsp+0x78]
   14002633e:	lea    rdx,[rsp+0x68]
   140026343:	call   QWORD PTR [rip+0x1acc7]        # 0x140041010
   140026349:	test   eax,eax
   14002634b:	jne    0x140026365
   14002634d:	call   QWORD PTR [rip+0x1b085]        # 0x1400413d8
   140026353:	mov    rcx,QWORD PTR [rsp+0x70]
   140026358:	mov    ebx,eax
   14002635a:	call   QWORD PTR [rip+0x1b068]        # 0x1400413c8
   140026360:	jmp    0x1400263e8
   140026365:	mov    rcx,QWORD PTR [rsp+0x70]
   14002636a:	call   QWORD PTR [rip+0x1adc8]        # 0x140041138
   140026370:	mov    r8,QWORD PTR [rsp+0x70]
   140026375:	lea    rcx,[rip+0x34684]        # 0x14005aa00
   14002637c:	mov    r9d,eax
   14002637f:	mov    edx,0x17
   140026384:	mov    QWORD PTR [rsp+0x28],rdi
   140026389:	mov    QWORD PTR [rsp+0x20],rdi
   14002638e:	call   QWORD PTR [rip+0x1b374]        # 0x140041708
   140026394:	test   eax,eax
   140026396:	jne    0x1400263a2
   140026398:	call   QWORD PTR [rip+0x1b03a]        # 0x1400413d8
   14002639e:	mov    ebx,eax
   1400263a0:	jmp    0x1400263d4
   1400263a2:	mov    rax,QWORD PTR [rsp+0x78]
   1400263a7:	mov    rcx,QWORD PTR [rip+0x3467a]        # 0x14005aa28
   1400263ae:	xor    r9d,r9d
   1400263b1:	mov    QWORD PTR [rsp+0x30],rdi
   1400263b6:	mov    QWORD PTR [rsp+0x28],rax
   1400263bb:	lea    r8d,[r9+0x4]
   1400263bf:	mov    edx,ebx
   1400263c1:	mov    QWORD PTR [rsp+0x20],rdi
   1400263c6:	call   QWORD PTR [rip+0x1ad74]        # 0x140041140
   1400263cc:	mov    ebx,eax
   1400263ce:	cmp    eax,0x2
   1400263d1:	cmove  ebx,edi
   1400263d4:	mov    rcx,QWORD PTR [rsp+0x70]
   1400263d9:	call   QWORD PTR [rip+0x1afe9]        # 0x1400413c8
   1400263df:	cmp    ebx,0xe0000204
   1400263e5:	cmove  ebx,edi
   1400263e8:	mov    eax,ebx
   1400263ea:	add    rsp,0x48
   1400263ee:	pop    rdi
   1400263ef:	pop    rbx
   1400263f0:	ret    
   1400263f1:	int3   
   1400263f2:	int3   
   1400263f3:	int3   
   1400263f4:	mov    QWORD PTR [rsp+0x10],rbx
   1400263f9:	push   rdi
   1400263fa:	sub    rsp,0x30
   1400263fe:	mov    edi,0x1
   140026403:	mov    ecx,edi
   140026405:	call   0x1400291cc
   14002640a:	mov    eax,0x5a4d
   14002640f:	cmp    WORD PTR [rip+0xfffffffffffd9bea],ax        # 0x140000000
   140026416:	je     0x14002641c
   140026418:	xor    ebx,ebx
   14002641a:	jmp    0x140026454
   14002641c:	movsxd rax,DWORD PTR [rip+0xfffffffffffd9c19]        # 0x14000003c
   140026423:	lea    rcx,[rip+0xfffffffffffd9bd6]        # 0x140000000
   14002642a:	add    rax,rcx
   14002642d:	cmp    DWORD PTR [rax],0x4550
   140026433:	jne    0x140026418
   140026435:	mov    ecx,0x20b
   14002643a:	cmp    WORD PTR [rax+0x18],cx
   14002643e:	jne    0x140026418
   140026440:	xor    ebx,ebx
   140026442:	cmp    DWORD PTR [rax+0x84],0xe
   140026449:	jbe    0x140026454
   14002644b:	cmp    DWORD PTR [rax+0xf8],ebx
   140026451:	setne  bl
   140026454:	mov    DWORD PTR [rsp+0x40],ebx
   140026458:	call   0x140028a44
   14002645d:	test   eax,eax
   14002645f:	jne    0x140026483
   140026461:	cmp    DWORD PTR [rip+0x36144],0x2        # 0x14005c5ac
   140026468:	je     0x14002646f
   14002646a:	call   0x140028760
   14002646f:	mov    ecx,0x1c
   140026474:	call   0x1400287d4
   140026479:	mov    ecx,0xff
   14002647e:	call   0x140028398
   140026483:	call   0x1400282b0
   140026488:	test   eax,eax
   14002648a:	jne    0x1400264ae
   14002648c:	cmp    DWORD PTR [rip+0x36119],0x2        # 0x14005c5ac
   140026493:	je     0x14002649a
   140026495:	call   0x140028760
   14002649a:	mov    ecx,0x10
   14002649f:	call   0x1400287d4
   1400264a4:	mov    ecx,0xff
   1400264a9:	call   0x140028398
   1400264ae:	call   0x1400292cc
   1400264b3:	nop
   1400264b4:	call   0x140028a90
   1400264b9:	call   QWORD PTR [rip+0x1af31]        # 0x1400413f0
   1400264bf:	mov    QWORD PTR [rip+0x386ba],rax        # 0x14005eb80
   1400264c6:	call   0x14002933c
   1400264cb:	mov    QWORD PTR [rip+0x35296],rax        # 0x14005b768
   1400264d2:	call   0x140028e0c
   1400264d7:	test   eax,eax
   1400264d9:	jns    0x1400264e5
   1400264db:	mov    ecx,0x8
   1400264e0:	call   0x1400283b0
   1400264e5:	call   0x140029094
   1400264ea:	test   eax,eax
   1400264ec:	jns    0x1400264f8
   1400264ee:	mov    ecx,0x9
   1400264f3:	call   0x1400283b0
   1400264f8:	mov    ecx,edi
   1400264fa:	call   0x1400283f8
   1400264ff:	test   eax,eax
   140026501:	je     0x14002650a
   140026503:	mov    ecx,eax
   140026505:	call   0x1400283b0
   14002650a:	mov    r8,QWORD PTR [rip+0x35807]        # 0x14005bd18
   140026511:	mov    QWORD PTR [rip+0x35828],r8        # 0x14005bd40
   140026518:	mov    rdx,QWORD PTR [rip+0x357e9]        # 0x14005bd08
   14002651f:	mov    ecx,DWORD PTR [rip+0x357d7]        # 0x14005bcfc
   140026525:	call   0x14000f494
   14002652a:	mov    edi,eax
   14002652c:	mov    DWORD PTR [rsp+0x20],eax
   140026530:	test   ebx,ebx
   140026532:	jne    0x14002653b
   140026534:	mov    ecx,eax
   140026536:	call   0x140028754
   14002653b:	call   0x1400283e8
   140026540:	jmp    0x140026559
   140026542:	mov    edi,eax
   140026544:	cmp    DWORD PTR [rsp+0x40],0x0
   140026549:	jne    0x140026553
   14002654b:	mov    ecx,eax
   14002654d:	call   0x1400284a8
   140026552:	int3   
   140026553:	call   0x1400283d8
   140026558:	nop
   140026559:	mov    eax,edi
   14002655b:	mov    rbx,QWORD PTR [rsp+0x48]
   140026560:	add    rsp,0x30
   140026564:	pop    rdi
   140026565:	ret    
   140026566:	int3   
   140026567:	int3   
   140026568:	sub    rsp,0x28
   14002656c:	call   0x140029214
   140026571:	add    rsp,0x28
   140026575:	jmp    0x1400263f4
   14002657a:	int3   
   14002657b:	int3   
   14002657c:	jmp    0x1400273dc
   140026581:	int3   
   140026582:	int3   
   140026583:	int3   
   140026584:	int3   
   140026585:	int3   
   140026586:	int3   
   140026587:	int3   
   140026588:	int3   
   140026589:	int3   
   14002658a:	int3   
   14002658b:	int3   
   14002658c:	int3   
   14002658d:	int3   
   14002658e:	int3   
   14002658f:	int3   
   140026590:	int3   
   140026591:	int3   
   140026592:	int3   
   140026593:	int3   
   140026594:	int3   
   140026595:	int3   
   140026596:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400265a0:	cmp    rcx,QWORD PTR [rip+0x32ae1]        # 0x140059088
   1400265a7:	jne    0x1400265ba
   1400265a9:	rol    rcx,0x10
   1400265ad:	test   cx,0xffff
   1400265b2:	jne    0x1400265b6
   1400265b4:	repz ret 
   1400265b6:	ror    rcx,0x10
   1400265ba:	jmp    0x140027be4
   1400265bf:	int3   
   1400265c0:	int3   
   1400265c1:	int3   
   1400265c2:	int3   
   1400265c3:	int3   
   1400265c4:	int3   
   1400265c5:	int3   
   1400265c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400265d0:	mov    r11,rcx
   1400265d3:	mov    r10,rdx
   1400265d6:	cmp    r8,0x10
   1400265da:	jbe    0x140026689
   1400265e0:	sub    rdx,rcx
   1400265e3:	jae    0x1400265f4
   1400265e5:	mov    rax,r10
   1400265e8:	add    rax,r8
   1400265eb:	cmp    rcx,rax
   1400265ee:	jl     0x14002693a
   1400265f4:	bt     DWORD PTR [rip+0x35fb4],0x1        # 0x14005c5b0
   1400265fc:	jae    0x140026611
   1400265fe:	push   rdi
   1400265ff:	push   rsi
   140026600:	mov    rdi,rcx
   140026603:	mov    rsi,r10
   140026606:	mov    rcx,r8
   140026609:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002660b:	pop    rsi
   14002660c:	pop    rdi
   14002660d:	mov    rax,r11
   140026610:	ret    
   140026611:	test   cl,0x7
   140026614:	je     0x14002664c
   140026616:	test   cl,0x1
   140026619:	je     0x140026626
   14002661b:	mov    al,BYTE PTR [rdx+rcx*1]
   14002661e:	dec    r8
   140026621:	mov    BYTE PTR [rcx],al
   140026623:	inc    rcx
   140026626:	test   cl,0x2
   140026629:	je     0x14002663a
   14002662b:	mov    ax,WORD PTR [rdx+rcx*1]
   14002662f:	sub    r8,0x2
   140026633:	mov    WORD PTR [rcx],ax
   140026636:	add    rcx,0x2
   14002663a:	test   cl,0x4
   14002663d:	je     0x14002664c
   14002663f:	mov    eax,DWORD PTR [rdx+rcx*1]
   140026642:	sub    r8,0x4
   140026646:	mov    DWORD PTR [rcx],eax
   140026648:	add    rcx,0x4
   14002664c:	mov    r9,r8
   14002664f:	shr    r9,0x5
   140026653:	jne    0x140026837
   140026659:	mov    r9,r8
   14002665c:	shr    r9,0x3
   140026660:	je     0x140026676
   140026662:	mov    rax,QWORD PTR [rdx+rcx*1]
   140026666:	mov    QWORD PTR [rcx],rax
   140026669:	add    rcx,0x8
   14002666d:	dec    r9
   140026670:	jne    0x140026662
   140026672:	and    r8,0x7
   140026676:	test   r8,r8
   140026679:	jne    0x140026680
   14002667b:	mov    rax,r11
   14002667e:	ret    
   14002667f:	nop
   140026680:	lea    rdx,[rdx+rcx*1]
   140026684:	mov    r10,rcx
   140026687:	jmp    0x14002668c
   140026689:	mov    r10,r11
   14002668c:	lea    r9,[rip+0xfffffffffffd996d]        # 0x140000000
   140026693:	mov    rax,r8
   140026696:	mov    eax,DWORD PTR [r9+r8*4+0x266a3]
   14002669e:	add    rax,r9
   1400266a1:	jmp    rax
   1400266a3:	out    0x66,eax
   1400266a5:	add    al,BYTE PTR [rax]
   1400266a7:	jmp    0x14002670f
   1400266a9:	add    al,BYTE PTR [rax]
   1400266ab:	mul    BYTE PTR [rsi+0x2]
   1400266ae:	add    BYTE PTR [rdx],al
   1400266b0:	add    al,BYTE PTR [eax]
   1400266b3:	(bad)  
   1400266b4:	add    al,BYTE PTR [eax]
   1400266b7:	and    BYTE PTR [rdi+0x2],ah
   1400266ba:	add    BYTE PTR [rdx],dh
   1400266bc:	add    al,BYTE PTR [eax]
   1400266bf:	rex.RB
   1400266c0:	add    al,BYTE PTR [eax]
   1400266c3:	(bad)  
   1400266c4:	add    al,BYTE PTR [eax]
   1400266c7:	imul   esp,DWORD PTR [rdi+0x2],0x0
   1400266cb:	jle    0x140026734
   1400266cd:	add    al,BYTE PTR [rax]
   1400266cf:	xchg   edx,eax
   1400266d0:	add    al,BYTE PTR [eax]
   1400266d3:	scas   eax,DWORD PTR es:[rdi]
   1400266d4:	add    al,BYTE PTR [eax]
   1400266d7:	shl    BYTE PTR [rdi+0x2],0x0
   1400266db:	fisub  DWORD PTR [rdi+0x2]
   1400266de:	add    ch,dh
   1400266e0:	add    al,BYTE PTR [eax]
   1400266e3:	sbb    DWORD PTR [rax+0x2],ebp
   1400266e6:	add    BYTE PTR [rcx-0x75],cl
   1400266e9:	ret    
   1400266ea:	ret    
   1400266eb:	movzx  rax,BYTE PTR [rdx]
   1400266ef:	mov    BYTE PTR [r10],al
   1400266f2:	mov    rax,r11
   1400266f5:	ret    
   1400266f6:	movzx  rax,WORD PTR [rdx]
   1400266fa:	mov    WORD PTR [r10],ax
   1400266fe:	mov    rax,r11
   140026701:	ret    
   140026702:	movzx  rax,BYTE PTR [rdx]
   140026706:	movzx  rcx,WORD PTR [rdx+0x1]
   14002670b:	mov    BYTE PTR [r10],al
   14002670e:	mov    WORD PTR [r10+0x1],cx
   140026713:	mov    rax,r11
   140026716:	ret    
   140026717:	mov    eax,DWORD PTR [rdx]
   140026719:	mov    DWORD PTR [r10],eax
   14002671c:	mov    rax,r11
   14002671f:	ret    
   140026720:	movzx  rax,BYTE PTR [rdx]
   140026724:	mov    ecx,DWORD PTR [rdx+0x1]
   140026727:	mov    BYTE PTR [r10],al
   14002672a:	mov    DWORD PTR [r10+0x1],ecx
   14002672e:	mov    rax,r11
   140026731:	ret    
   140026732:	movzx  rax,WORD PTR [rdx]
   140026736:	mov    ecx,DWORD PTR [rdx+0x2]
   140026739:	mov    WORD PTR [r10],ax
   14002673d:	mov    DWORD PTR [r10+0x2],ecx
   140026741:	mov    rax,r11
   140026744:	ret    
   140026745:	movzx  rax,BYTE PTR [rdx]
   140026749:	movzx  rcx,WORD PTR [rdx+0x1]
   14002674e:	mov    edx,DWORD PTR [rdx+0x3]
   140026751:	mov    BYTE PTR [r10],al
   140026754:	mov    WORD PTR [r10+0x1],cx
   140026759:	mov    DWORD PTR [r10+0x3],edx
   14002675d:	mov    rax,r11
   140026760:	ret    
   140026761:	mov    rax,QWORD PTR [rdx]
   140026764:	mov    QWORD PTR [r10],rax
   140026767:	mov    rax,r11
   14002676a:	ret    
   14002676b:	movzx  rax,BYTE PTR [rdx]
   14002676f:	mov    rcx,QWORD PTR [rdx+0x1]
   140026773:	mov    BYTE PTR [r10],al
   140026776:	mov    QWORD PTR [r10+0x1],rcx
   14002677a:	mov    rax,r11
   14002677d:	ret    
   14002677e:	movzx  rax,WORD PTR [rdx]
   140026782:	mov    rcx,QWORD PTR [rdx+0x2]
   140026786:	mov    WORD PTR [r10],ax
   14002678a:	mov    QWORD PTR [r10+0x2],rcx
   14002678e:	mov    rax,r11
   140026791:	ret    
   140026792:	movzx  rax,BYTE PTR [rdx]
   140026796:	movzx  rcx,WORD PTR [rdx+0x1]
   14002679b:	mov    rdx,QWORD PTR [rdx+0x3]
   14002679f:	mov    BYTE PTR [r10],al
   1400267a2:	mov    WORD PTR [r10+0x1],cx
   1400267a7:	mov    QWORD PTR [r10+0x3],rdx
   1400267ab:	mov    rax,r11
   1400267ae:	ret    
   1400267af:	mov    eax,DWORD PTR [rdx]
   1400267b1:	mov    rcx,QWORD PTR [rdx+0x4]
   1400267b5:	mov    DWORD PTR [r10],eax
   1400267b8:	mov    QWORD PTR [r10+0x4],rcx
   1400267bc:	mov    rax,r11
   1400267bf:	ret    
   1400267c0:	movzx  rax,BYTE PTR [rdx]
   1400267c4:	mov    ecx,DWORD PTR [rdx+0x1]
   1400267c7:	mov    rdx,QWORD PTR [rdx+0x5]
   1400267cb:	mov    BYTE PTR [r10],al
   1400267ce:	mov    DWORD PTR [r10+0x1],ecx
   1400267d2:	mov    QWORD PTR [r10+0x5],rdx
   1400267d6:	mov    rax,r11
   1400267d9:	ret    
   1400267da:	movzx  rax,WORD PTR [rdx]
   1400267de:	mov    ecx,DWORD PTR [rdx+0x2]
   1400267e1:	mov    rdx,QWORD PTR [rdx+0x6]
   1400267e5:	mov    WORD PTR [r10],ax
   1400267e9:	mov    DWORD PTR [r10+0x2],ecx
   1400267ed:	mov    QWORD PTR [r10+0x6],rdx
   1400267f1:	mov    rax,r11
   1400267f4:	ret    
   1400267f5:	movzx  r8,BYTE PTR [rdx]
   1400267f9:	movzx  rax,WORD PTR [rdx+0x1]
   1400267fe:	mov    ecx,DWORD PTR [rdx+0x3]
   140026801:	mov    rdx,QWORD PTR [rdx+0x7]
   140026805:	mov    BYTE PTR [r10],r8b
   140026808:	mov    WORD PTR [r10+0x1],ax
   14002680d:	mov    DWORD PTR [r10+0x3],ecx
   140026811:	mov    QWORD PTR [r10+0x7],rdx
   140026815:	mov    rax,r11
   140026818:	ret    
   140026819:	movdqu xmm0,XMMWORD PTR [rdx]
   14002681d:	movdqu XMMWORD PTR [r10],xmm0
   140026822:	mov    rax,r11
   140026825:	ret    
   140026826:	data16 nop WORD PTR [rax+rax*1+0x0]
   140026830:	data16 data16 xchg ax,ax
   140026834:	data16 xchg ax,ax
   140026837:	cmp    r9,0x2000
   14002683e:	jae    0x140026882
   140026840:	mov    rax,QWORD PTR [rdx+rcx*1]
   140026844:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140026849:	add    rcx,0x20
   14002684d:	mov    QWORD PTR [rcx-0x20],rax
   140026851:	mov    QWORD PTR [rcx-0x18],r10
   140026855:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14002685a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14002685f:	dec    r9
   140026862:	mov    QWORD PTR [rcx-0x10],rax
   140026866:	mov    QWORD PTR [rcx-0x8],r10
   14002686a:	jne    0x140026840
   14002686c:	and    r8,0x1f
   140026870:	jmp    0x140026659
   140026875:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140026880:	xchg   ax,ax
   140026882:	cmp    rdx,0x1000
   140026889:	jb     0x140026840
   14002688b:	mov    eax,0x20
   140026890:	prefetchnta BYTE PTR [rdx+rcx*1]
   140026894:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140026899:	add    rcx,0x80
   1400268a0:	dec    eax
   1400268a2:	jne    0x140026890
   1400268a4:	sub    rcx,0x1000
   1400268ab:	mov    eax,0x40
   1400268b0:	mov    r9,QWORD PTR [rdx+rcx*1]
   1400268b4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   1400268b9:	movnti QWORD PTR [rcx],r9
   1400268bd:	movnti QWORD PTR [rcx+0x8],r10
   1400268c2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   1400268c7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   1400268cc:	movnti QWORD PTR [rcx+0x10],r9
   1400268d1:	movnti QWORD PTR [rcx+0x18],r10
   1400268d6:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   1400268db:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   1400268e0:	add    rcx,0x40
   1400268e4:	movnti QWORD PTR [rcx-0x20],r9
   1400268e9:	movnti QWORD PTR [rcx-0x18],r10
   1400268ee:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   1400268f3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   1400268f8:	dec    eax
   1400268fa:	movnti QWORD PTR [rcx-0x10],r9
   1400268ff:	movnti QWORD PTR [rcx-0x8],r10
   140026904:	jne    0x1400268b0
   140026906:	sub    r8,0x1000
   14002690d:	cmp    r8,0x1000
   140026914:	jae    0x14002688b
   14002691a:	lock or BYTE PTR [rsp],0x0
   14002691f:	jmp    0x14002664c
   140026924:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140026930:	data16 data16 xchg ax,ax
   140026934:	data16 data16 xchg ax,ax
   140026938:	xchg   ax,ax
   14002693a:	add    rcx,r8
   14002693d:	test   cl,0x7
   140026940:	je     0x140026978
   140026942:	test   cl,0x1
   140026945:	je     0x140026952
   140026947:	dec    rcx
   14002694a:	mov    al,BYTE PTR [rdx+rcx*1]
   14002694d:	dec    r8
   140026950:	mov    BYTE PTR [rcx],al
   140026952:	test   cl,0x2
   140026955:	je     0x140026966
   140026957:	sub    rcx,0x2
   14002695b:	mov    ax,WORD PTR [rdx+rcx*1]
   14002695f:	sub    r8,0x2
   140026963:	mov    WORD PTR [rcx],ax
   140026966:	test   cl,0x4
   140026969:	je     0x140026978
   14002696b:	sub    rcx,0x4
   14002696f:	mov    eax,DWORD PTR [rdx+rcx*1]
   140026972:	sub    r8,0x4
   140026976:	mov    DWORD PTR [rcx],eax
   140026978:	mov    r9,r8
   14002697b:	shr    r9,0x5
   14002697f:	jne    0x1400269c7
   140026981:	mov    r9,r8
   140026984:	shr    r9,0x3
   140026988:	je     0x14002699e
   14002698a:	sub    rcx,0x8
   14002698e:	mov    rax,QWORD PTR [rdx+rcx*1]
   140026992:	dec    r9
   140026995:	mov    QWORD PTR [rcx],rax
   140026998:	jne    0x14002698a
   14002699a:	and    r8,0x7
   14002699e:	test   r8,r8
   1400269a1:	jne    0x1400269b0
   1400269a3:	mov    rax,r11
   1400269a6:	ret    
   1400269a7:	nop    WORD PTR [rax+rax*1+0x0]
   1400269b0:	sub    rcx,r8
   1400269b3:	mov    r10,rcx
   1400269b6:	lea    rdx,[rdx+rcx*1]
   1400269ba:	jmp    0x14002668c
   1400269bf:	nop
   1400269c0:	data16 data16 xchg ax,ax
   1400269c4:	data16 xchg ax,ax
   1400269c7:	cmp    r9,0x2000
   1400269ce:	jae    0x140026a12
   1400269d0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   1400269d5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   1400269da:	sub    rcx,0x20
   1400269de:	mov    QWORD PTR [rcx+0x18],rax
   1400269e2:	mov    QWORD PTR [rcx+0x10],r10
   1400269e6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   1400269eb:	mov    r10,QWORD PTR [rdx+rcx*1]
   1400269ef:	dec    r9
   1400269f2:	mov    QWORD PTR [rcx+0x8],rax
   1400269f6:	mov    QWORD PTR [rcx],r10
   1400269f9:	jne    0x1400269d0
   1400269fb:	and    r8,0x1f
   1400269ff:	jmp    0x140026981
   140026a01:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140026a10:	xchg   ax,ax
   140026a12:	cmp    rdx,0xfffffffffffff000
   140026a19:	ja     0x1400269d0
   140026a1b:	mov    eax,0x20
   140026a20:	sub    rcx,0x80
   140026a27:	prefetchnta BYTE PTR [rdx+rcx*1]
   140026a2b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140026a30:	dec    eax
   140026a32:	jne    0x140026a20
   140026a34:	add    rcx,0x1000
   140026a3b:	mov    eax,0x40
   140026a40:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140026a45:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140026a4a:	movnti QWORD PTR [rcx-0x8],r9
   140026a4f:	movnti QWORD PTR [rcx-0x10],r10
   140026a54:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140026a59:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   140026a5e:	movnti QWORD PTR [rcx-0x18],r9
   140026a63:	movnti QWORD PTR [rcx-0x20],r10
   140026a68:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   140026a6d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140026a72:	sub    rcx,0x40
   140026a76:	movnti QWORD PTR [rcx+0x18],r9
   140026a7b:	movnti QWORD PTR [rcx+0x10],r10
   140026a80:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140026a85:	mov    r10,QWORD PTR [rdx+rcx*1]
   140026a89:	dec    eax
   140026a8b:	movnti QWORD PTR [rcx+0x8],r9
   140026a90:	movnti QWORD PTR [rcx],r10
   140026a94:	jne    0x140026a40
   140026a96:	sub    r8,0x1000
   140026a9d:	cmp    r8,0x1000
   140026aa4:	jae    0x140026a1b
   140026aaa:	lock or BYTE PTR [rsp],0x0
   140026aaf:	jmp    0x140026978
   140026ab4:	rex push rbx
   140026ab6:	sub    rsp,0x20
   140026aba:	mov    edx,0x8
   140026abf:	lea    ecx,[rdx+0x18]
   140026ac2:	call   0x140029744
   140026ac7:	mov    rcx,rax
   140026aca:	mov    rbx,rax
   140026acd:	call   QWORD PTR [rip+0x1a925]        # 0x1400413f8
   140026ad3:	mov    QWORD PTR [rip+0x38096],rax        # 0x14005eb70
   140026ada:	mov    QWORD PTR [rip+0x38087],rax        # 0x14005eb68
   140026ae1:	test   rbx,rbx
   140026ae4:	jne    0x140026aeb
   140026ae6:	lea    eax,[rbx+0x18]
   140026ae9:	jmp    0x140026af1
   140026aeb:	and    QWORD PTR [rbx],0x0
   140026aef:	xor    eax,eax
   140026af1:	add    rsp,0x20
   140026af5:	pop    rbx
   140026af6:	ret    
   140026af7:	int3   
   140026af8:	mov    QWORD PTR [rsp+0x8],rbx
   140026afd:	mov    QWORD PTR [rsp+0x10],rsi
   140026b02:	mov    QWORD PTR [rsp+0x18],rdi
   140026b07:	push   r12
   140026b09:	push   r14
   140026b0b:	push   r15
   140026b0d:	sub    rsp,0x20
   140026b11:	mov    r12,rcx
   140026b14:	call   0x1400285a4
   140026b19:	nop
   140026b1a:	mov    rcx,QWORD PTR [rip+0x3804f]        # 0x14005eb70
   140026b21:	call   QWORD PTR [rip+0x1a8d9]        # 0x140041400
   140026b27:	mov    r14,rax
   140026b2a:	mov    rcx,QWORD PTR [rip+0x38037]        # 0x14005eb68
   140026b31:	call   QWORD PTR [rip+0x1a8c9]        # 0x140041400
   140026b37:	mov    rbx,rax
   140026b3a:	cmp    rax,r14
   140026b3d:	jb     0x140026bde
   140026b43:	mov    rdi,rax
   140026b46:	sub    rdi,r14
   140026b49:	lea    r15,[rdi+0x8]
   140026b4d:	cmp    r15,0x8
   140026b51:	jb     0x140026bde
   140026b57:	mov    rcx,r14
   140026b5a:	call   0x140029708
   140026b5f:	mov    rsi,rax
   140026b62:	cmp    rax,r15
   140026b65:	jae    0x140026bbc
   140026b67:	mov    edx,0x1000
   140026b6c:	cmp    rax,rdx
   140026b6f:	cmovb  rdx,rax
   140026b73:	add    rdx,rax
   140026b76:	cmp    rdx,rax
   140026b79:	jb     0x140026b8c
   140026b7b:	mov    rcx,r14
   140026b7e:	call   0x140029840
   140026b83:	xor    ebx,ebx
   140026b85:	test   rax,rax
   140026b88:	jne    0x140026ba4
   140026b8a:	jmp    0x140026b8e
   140026b8c:	xor    ebx,ebx
   140026b8e:	lea    rdx,[rsi+0x20]
   140026b92:	cmp    rdx,rsi
   140026b95:	jb     0x140026be0
   140026b97:	mov    rcx,r14
   140026b9a:	call   0x140029840
   140026b9f:	test   rax,rax
   140026ba2:	je     0x140026be0
   140026ba4:	sar    rdi,0x3
   140026ba8:	lea    rbx,[rax+rdi*8]
   140026bac:	mov    rcx,rax
   140026baf:	call   QWORD PTR [rip+0x1a843]        # 0x1400413f8
   140026bb5:	mov    QWORD PTR [rip+0x37fb4],rax        # 0x14005eb70
   140026bbc:	mov    rcx,r12
   140026bbf:	call   QWORD PTR [rip+0x1a833]        # 0x1400413f8
   140026bc5:	mov    QWORD PTR [rbx],rax
   140026bc8:	lea    rcx,[rbx+0x8]
   140026bcc:	call   QWORD PTR [rip+0x1a826]        # 0x1400413f8
   140026bd2:	mov    QWORD PTR [rip+0x37f8f],rax        # 0x14005eb68
   140026bd9:	mov    rbx,r12
   140026bdc:	jmp    0x140026be0
   140026bde:	xor    ebx,ebx
   140026be0:	call   0x1400285b0
   140026be5:	mov    rax,rbx
   140026be8:	mov    rbx,QWORD PTR [rsp+0x40]
   140026bed:	mov    rsi,QWORD PTR [rsp+0x48]
   140026bf2:	mov    rdi,QWORD PTR [rsp+0x50]
   140026bf7:	add    rsp,0x20
   140026bfb:	pop    r15
   140026bfd:	pop    r14
   140026bff:	pop    r12
   140026c01:	ret    
   140026c02:	int3   
   140026c03:	int3   
   140026c04:	sub    rsp,0x28
   140026c08:	call   0x140026af8
   140026c0d:	neg    rax
   140026c10:	sbb    eax,eax
   140026c12:	neg    eax
   140026c14:	dec    eax
   140026c16:	add    rsp,0x28
   140026c1a:	ret    
   140026c1b:	int3   
   140026c1c:	jmp    0x14002657c
   140026c21:	int3   
   140026c22:	int3   
   140026c23:	int3   
   140026c24:	sub    rsp,0x28
   140026c28:	mov    rcx,QWORD PTR [rip+0x35999]        # 0x14005c5c8
   140026c2f:	call   QWORD PTR [rip+0x1a7cb]        # 0x140041400
   140026c35:	test   rax,rax
   140026c38:	je     0x140026c3c
   140026c3a:	call   rax
   140026c3c:	mov    ecx,0x19
   140026c41:	call   0x1400287d4
   140026c46:	mov    edx,0x1
   140026c4b:	xor    ecx,ecx
   140026c4d:	call   0x14002994c
   140026c52:	call   0x140029968
   140026c57:	int3   
   140026c58:	sub    rsp,0x28
   140026c5c:	xor    r11d,r11d
   140026c5f:	mov    r10,r8
   140026c62:	mov    r9,rdx
   140026c65:	test   r8,r8
   140026c68:	jne    0x140026c81
   140026c6a:	call   0x140029bf8
   140026c6f:	mov    DWORD PTR [rax],0x16
   140026c75:	call   0x140029b2c
   140026c7a:	xor    eax,eax
   140026c7c:	jmp    0x140026d12
   140026c81:	test   rdx,rdx
   140026c84:	je     0x140026c6a
   140026c86:	test   rcx,rcx
   140026c89:	jne    0x140026cc0
   140026c8b:	mov    rcx,QWORD PTR [r8]
   140026c8e:	test   rcx,rcx
   140026c91:	jne    0x140026cc0
   140026c93:	jmp    0x140026c6a
   140026c95:	mov    rdx,r9
   140026c98:	cmp    WORD PTR [r9],r11w
   140026c9c:	je     0x140026cb6
   140026c9e:	movzx  r8d,WORD PTR [r9]
   140026ca2:	cmp    r8w,ax
   140026ca6:	je     0x140026cb6
   140026ca8:	add    rdx,0x2
   140026cac:	movzx  r8d,WORD PTR [rdx]
   140026cb0:	test   r8w,r8w
   140026cb4:	jne    0x140026ca2
   140026cb6:	cmp    WORD PTR [rdx],r11w
   140026cba:	je     0x140026cc8
   140026cbc:	add    rcx,0x2
   140026cc0:	movzx  eax,WORD PTR [rcx]
   140026cc3:	test   ax,ax
   140026cc6:	jne    0x140026c95
   140026cc8:	mov    rax,rcx
   140026ccb:	jmp    0x140026cf8
   140026ccd:	mov    rdx,r9
   140026cd0:	cmp    WORD PTR [r9],r11w
   140026cd4:	je     0x140026cee
   140026cd6:	movzx  r8d,WORD PTR [r9]
   140026cda:	cmp    r8w,WORD PTR [rcx]
   140026cde:	je     0x140026cee
   140026ce0:	add    rdx,0x2
   140026ce4:	movzx  r8d,WORD PTR [rdx]
   140026ce8:	test   r8w,r8w
   140026cec:	jne    0x140026cda
   140026cee:	cmp    WORD PTR [rdx],r11w
   140026cf2:	jne    0x140026d00
   140026cf4:	add    rcx,0x2
   140026cf8:	cmp    WORD PTR [rcx],r11w
   140026cfc:	jne    0x140026ccd
   140026cfe:	jmp    0x140026d08
   140026d00:	mov    WORD PTR [rcx],r11w
   140026d04:	add    rcx,0x2
   140026d08:	cmp    rax,rcx
   140026d0b:	mov    QWORD PTR [r10],rcx
   140026d0e:	cmove  rax,r11
   140026d12:	add    rsp,0x28
   140026d16:	ret    
   140026d17:	int3   
   140026d18:	sub    rsp,0x28
   140026d1c:	mov    rax,rdx
   140026d1f:	lea    rdx,[rcx+0x11]
   140026d23:	lea    rcx,[rax+0x11]
   140026d27:	call   0x140029c80
   140026d2c:	test   eax,eax
   140026d2e:	sete   al
   140026d31:	add    rsp,0x28
   140026d35:	ret    
   140026d36:	int3   
   140026d37:	int3   
   140026d38:	mov    QWORD PTR [rsp+0x8],rbx
   140026d3d:	push   rdi
   140026d3e:	sub    rsp,0x20
   140026d42:	lea    rax,[rip+0x1ab87]        # 0x1400418d0
   140026d49:	mov    ebx,edx
   140026d4b:	mov    rdi,rcx
   140026d4e:	mov    QWORD PTR [rcx],rax
   140026d51:	call   0x140029ce8
   140026d56:	test   bl,0x1
   140026d59:	je     0x140026d63
   140026d5b:	mov    rcx,rdi
   140026d5e:	call   0x14002657c
   140026d63:	mov    rax,rdi
   140026d66:	mov    rbx,QWORD PTR [rsp+0x30]
   140026d6b:	add    rsp,0x20
   140026d6f:	pop    rdi
   140026d70:	ret    
   140026d71:	int3   
   140026d72:	int3   
   140026d73:	int3   
   140026d74:	rex push rbx
   140026d76:	sub    rsp,0x20
   140026d7a:	mov    rbx,rcx
   140026d7d:	call   0x140029e58
   140026d82:	lea    rax,[rip+0x1ab57]        # 0x1400418e0
   140026d89:	mov    QWORD PTR [rbx],rax
   140026d8c:	mov    rax,rbx
   140026d8f:	add    rsp,0x20
   140026d93:	pop    rbx
   140026d94:	ret    
   140026d95:	int3   
   140026d96:	int3   
   140026d97:	int3   
   140026d98:	lea    rax,[rip+0x1ab41]        # 0x1400418e0
   140026d9f:	mov    QWORD PTR [rcx],rax
   140026da2:	jmp    0x140029e84
   140026da7:	int3   
   140026da8:	rex push rbx
   140026daa:	sub    rsp,0x40
   140026dae:	mov    rbx,rcx
   140026db1:	jmp    0x140026dc2
   140026db3:	mov    rcx,rbx
   140026db6:	call   0x140029fac
   140026dbb:	test   eax,eax
   140026dbd:	je     0x140026dd2
   140026dbf:	mov    rcx,rbx
   140026dc2:	call   0x140029d54
   140026dc7:	test   rax,rax
   140026dca:	je     0x140026db3
   140026dcc:	add    rsp,0x40
   140026dd0:	pop    rbx
   140026dd1:	ret    
   140026dd2:	lea    rax,[rip+0x1ab17]        # 0x1400418f0
   140026dd9:	lea    rdx,[rsp+0x58]
   140026dde:	lea    rcx,[rsp+0x20]
   140026de3:	mov    r8d,0x1
   140026de9:	mov    QWORD PTR [rsp+0x58],rax
   140026dee:	call   0x140029e3c
   140026df3:	lea    rax,[rip+0x1aae6]        # 0x1400418e0
   140026dfa:	lea    rdx,[rip+0x2f05f]        # 0x140055e60
   140026e01:	lea    rcx,[rsp+0x20]
   140026e06:	mov    QWORD PTR [rsp+0x20],rax
   140026e0b:	call   0x140029fe8
   140026e10:	int3   
   140026e11:	int3   
   140026e12:	int3   
   140026e13:	int3   
   140026e14:	mov    QWORD PTR [rsp+0x8],rbx
   140026e19:	push   rdi
   140026e1a:	sub    rsp,0x20
   140026e1e:	lea    rax,[rip+0x1aabb]        # 0x1400418e0
   140026e25:	mov    ebx,edx
   140026e27:	mov    rdi,rcx
   140026e2a:	mov    QWORD PTR [rcx],rax
   140026e2d:	call   0x140029e84
   140026e32:	test   bl,0x1
   140026e35:	je     0x140026e3f
   140026e37:	mov    rcx,rdi
   140026e3a:	call   0x14002657c
   140026e3f:	mov    rax,rdi
   140026e42:	mov    rbx,QWORD PTR [rsp+0x30]
   140026e47:	add    rsp,0x20
   140026e4b:	pop    rdi
   140026e4c:	ret    
   140026e4d:	int3   
   140026e4e:	int3   
   140026e4f:	int3   
   140026e50:	sub    rsp,0x18
   140026e54:	movdqa xmm2,XMMWORD PTR [rsp]
   140026e59:	movzx  eax,dx
   140026e5c:	mov    r8,rcx
   140026e5f:	movd   xmm0,eax
   140026e63:	xor    r9d,r9d
   140026e66:	pshuflw xmm1,xmm0,0x0
   140026e6b:	pshufd xmm3,xmm1,0x0
   140026e70:	mov    rax,r8
   140026e73:	and    eax,0xfff
   140026e78:	cmp    rax,0xff0
   140026e7e:	ja     0x140026eab
   140026e80:	movdqu xmm1,XMMWORD PTR [r8]
   140026e85:	movdqa xmm0,xmm2
   140026e89:	pxor   xmm0,xmm2
   140026e8d:	movdqa xmm2,xmm0
   140026e91:	pcmpeqw xmm2,xmm1
   140026e95:	pcmpeqw xmm1,xmm3
   140026e99:	por    xmm2,xmm1
   140026e9d:	pmovmskb eax,xmm2
   140026ea1:	test   eax,eax
   140026ea3:	jne    0x140026ebd
   140026ea5:	add    r8,0x10
   140026ea9:	jmp    0x140026e70
   140026eab:	cmp    WORD PTR [r8],dx
   140026eaf:	je     0x140026ed4
   140026eb1:	cmp    WORD PTR [r8],r9w
   140026eb5:	je     0x140026ed0
   140026eb7:	add    r8,0x2
   140026ebb:	jmp    0x140026e70
   140026ebd:	bsf    ecx,eax
   140026ec0:	add    r8,rcx
   140026ec3:	cmp    WORD PTR [r8],dx
   140026ec7:	cmove  r9,r8
   140026ecb:	mov    rax,r9
   140026ece:	jmp    0x140026ed7
   140026ed0:	xor    eax,eax
   140026ed2:	jmp    0x140026ed7
   140026ed4:	mov    rax,r8
   140026ed7:	add    rsp,0x18
   140026edb:	ret    
   140026edc:	rex push rbx
   140026ede:	sub    rsp,0x20
   140026ee2:	mov    rax,r8
   140026ee5:	test   r9,r9
   140026ee8:	je     0x140026f25
   140026eea:	test   rcx,rcx
   140026eed:	jne    0x140026f04
   140026eef:	call   0x140029bf8
   140026ef4:	mov    ebx,0x16
   140026ef9:	mov    DWORD PTR [rax],ebx
   140026efb:	call   0x140029b2c
   140026f00:	mov    eax,ebx
   140026f02:	jmp    0x140026f27
   140026f04:	test   rax,rax
   140026f07:	je     0x140026eef
   140026f09:	cmp    rdx,r9
   140026f0c:	jae    0x140026f1a
   140026f0e:	call   0x140029bf8
   140026f13:	mov    ebx,0x22
   140026f18:	jmp    0x140026ef9
   140026f1a:	mov    r8,r9
   140026f1d:	mov    rdx,rax
   140026f20:	call   0x1400265d0
   140026f25:	xor    eax,eax
   140026f27:	add    rsp,0x20
   140026f2b:	pop    rbx
   140026f2c:	ret    
   140026f2d:	int3   
   140026f2e:	int3   
   140026f2f:	int3   
   140026f30:	rex push rbx
   140026f32:	sub    rsp,0x20
   140026f36:	mov    rbx,rcx
   140026f39:	mov    BYTE PTR [rcx+0x18],0x0
   140026f3d:	test   rdx,rdx
   140026f40:	jne    0x140026fc8
   140026f46:	call   0x14002814c
   140026f4b:	mov    QWORD PTR [rbx+0x10],rax
   140026f4f:	mov    rdx,QWORD PTR [rax+0xc0]
   140026f56:	mov    QWORD PTR [rbx],rdx
   140026f59:	mov    rcx,QWORD PTR [rax+0xb8]
   140026f60:	mov    QWORD PTR [rbx+0x8],rcx
   140026f64:	cmp    rdx,QWORD PTR [rip+0x32ab5]        # 0x140059a20
   140026f6b:	je     0x140026f83
   140026f6d:	mov    eax,DWORD PTR [rax+0xc8]
   140026f73:	test   DWORD PTR [rip+0x32c13],eax        # 0x140059b8c
   140026f79:	jne    0x140026f83
   140026f7b:	call   0x14002a390
   140026f80:	mov    QWORD PTR [rbx],rax
   140026f83:	mov    rax,QWORD PTR [rip+0x3249e]        # 0x140059428
   140026f8a:	cmp    QWORD PTR [rbx+0x8],rax
   140026f8e:	je     0x140026fab
   140026f90:	mov    rax,QWORD PTR [rbx+0x10]
   140026f94:	mov    ecx,DWORD PTR [rax+0xc8]
   140026f9a:	test   DWORD PTR [rip+0x32bec],ecx        # 0x140059b8c
   140026fa0:	jne    0x140026fab
   140026fa2:	call   0x14002a788
   140026fa7:	mov    QWORD PTR [rbx+0x8],rax
   140026fab:	mov    rcx,QWORD PTR [rbx+0x10]
   140026faf:	mov    eax,DWORD PTR [rcx+0xc8]
   140026fb5:	test   al,0x2
   140026fb7:	jne    0x140026fcf
   140026fb9:	or     eax,0x2
   140026fbc:	mov    DWORD PTR [rcx+0xc8],eax
   140026fc2:	mov    BYTE PTR [rbx+0x18],0x1
   140026fc6:	jmp    0x140026fcf
   140026fc8:	movups xmm0,XMMWORD PTR [rdx]
   140026fcb:	movdqu XMMWORD PTR [rcx],xmm0
   140026fcf:	mov    rax,rbx
   140026fd2:	add    rsp,0x20
   140026fd6:	pop    rbx
   140026fd7:	ret    
   140026fd8:	sub    rsp,0x28
   140026fdc:	xor    r8d,r8d
   140026fdf:	mov    r9,rdx
   140026fe2:	mov    r10,rcx
   140026fe5:	cmp    DWORD PTR [rip+0x35624],r8d        # 0x14005c610
   140026fec:	jne    0x140027053
   140026fee:	test   rcx,rcx
   140026ff1:	jne    0x14002700d
   140026ff3:	call   0x140029bf8
   140026ff8:	mov    DWORD PTR [rax],0x16
   140026ffe:	call   0x140029b2c
   140027003:	mov    eax,0x7fffffff
   140027008:	add    rsp,0x28
   14002700c:	ret    
   14002700d:	test   rdx,rdx
   140027010:	je     0x140026ff3
   140027012:	sub    r10,rdx
   140027015:	movzx  edx,WORD PTR [r10+r9*1]
   14002701a:	lea    eax,[rdx-0x41]
   14002701d:	cmp    ax,0x19
   140027021:	ja     0x140027027
   140027023:	add    dx,0x20
   140027027:	movzx  ecx,WORD PTR [r9]
   14002702b:	lea    eax,[rcx-0x41]
   14002702e:	cmp    ax,0x19
   140027032:	ja     0x140027038
   140027034:	add    cx,0x20
   140027038:	add    r9,0x2
   14002703c:	test   dx,dx
   14002703f:	je     0x140027046
   140027041:	cmp    dx,cx
   140027044:	je     0x140027015
   140027046:	movzx  ecx,cx
   140027049:	movzx  eax,dx
   14002704c:	sub    eax,ecx
   14002704e:	add    rsp,0x28
   140027052:	ret    
   140027053:	add    rsp,0x28
   140027057:	jmp    0x14002705c
   14002705c:	mov    rax,rsp
   14002705f:	mov    QWORD PTR [rax+0x8],rbx
   140027063:	mov    QWORD PTR [rax+0x10],rbp
   140027067:	mov    QWORD PTR [rax+0x18],rsi
   14002706b:	push   rdi
   14002706c:	sub    rsp,0x40
   140027070:	mov    rsi,rcx
   140027073:	mov    rdi,rdx
   140027076:	lea    rcx,[rax-0x28]
   14002707a:	mov    rdx,r8
   14002707d:	call   0x140026f30
   140027082:	xor    ebp,ebp
   140027084:	test   rsi,rsi
   140027087:	je     0x14002708e
   140027089:	test   rdi,rdi
   14002708c:	jne    0x1400270a5
   14002708e:	call   0x140029bf8
   140027093:	mov    DWORD PTR [rax],0x16
   140027099:	call   0x140029b2c
   14002709e:	mov    eax,0x7fffffff
   1400270a3:	jmp    0x140027121
   1400270a5:	mov    rax,QWORD PTR [rsp+0x20]
   1400270aa:	cmp    QWORD PTR [rax+0x138],rbp
   1400270b1:	jne    0x1400270e7
   1400270b3:	sub    rsi,rdi
   1400270b6:	movzx  ebx,WORD PTR [rsi+rdi*1]
   1400270ba:	lea    eax,[rbx-0x41]
   1400270bd:	cmp    ax,0x19
   1400270c1:	ja     0x1400270c7
   1400270c3:	add    bx,0x20
   1400270c7:	movzx  ecx,WORD PTR [rdi]
   1400270ca:	lea    eax,[rcx-0x41]
   1400270cd:	cmp    ax,0x19
   1400270d1:	ja     0x1400270d7
   1400270d3:	add    cx,0x20
   1400270d7:	add    rdi,0x2
   1400270db:	test   bx,bx
   1400270de:	je     0x140027119
   1400270e0:	cmp    bx,cx
   1400270e3:	je     0x1400270b6
   1400270e5:	jmp    0x140027119
   1400270e7:	movzx  ecx,WORD PTR [rsi]
   1400270ea:	lea    rdx,[rsp+0x20]
   1400270ef:	call   0x14002ad50
   1400270f4:	movzx  ecx,WORD PTR [rdi]
   1400270f7:	lea    rdx,[rsp+0x20]
   1400270fc:	movzx  ebx,ax
   1400270ff:	lea    rsi,[rsi+0x2]
   140027103:	call   0x14002ad50
   140027108:	lea    rdi,[rdi+0x2]
   14002710c:	movzx  ecx,ax
   14002710f:	test   bx,bx
   140027112:	je     0x140027119
   140027114:	cmp    bx,ax
   140027117:	je     0x1400270e7
   140027119:	movzx  ecx,cx
   14002711c:	movzx  eax,bx
   14002711f:	sub    eax,ecx
   140027121:	cmp    BYTE PTR [rsp+0x38],bpl
   140027126:	je     0x140027134
   140027128:	mov    rcx,QWORD PTR [rsp+0x30]
   14002712d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140027134:	mov    rbx,QWORD PTR [rsp+0x50]
   140027139:	mov    rbp,QWORD PTR [rsp+0x58]
   14002713e:	mov    rsi,QWORD PTR [rsp+0x60]
   140027143:	add    rsp,0x40
   140027147:	pop    rdi
   140027148:	ret    
   140027149:	int3   
   14002714a:	int3   
   14002714b:	int3   
   14002714c:	mov    r9,rdx
   14002714f:	mov    rdx,rcx
   140027152:	lea    rcx,[rip+0x3ea3]        # 0x14002affc
   140027159:	xor    r8d,r8d
   14002715c:	jmp    0x140034704
   140027161:	int3   
   140027162:	int3   
   140027163:	int3   
   140027164:	mov    QWORD PTR [rsp+0x18],rbx
   140027169:	mov    QWORD PTR [rsp+0x8],rcx
   14002716e:	push   rbp
   14002716f:	push   rsi
   140027170:	push   rdi
   140027171:	push   r12
   140027173:	push   r13
   140027175:	push   r14
   140027177:	push   r15
   140027179:	sub    rsp,0x20
   14002717d:	mov    ebp,r9d
   140027180:	mov    r14d,r8d
   140027183:	mov    r15,rdx
   140027186:	test   rdx,rdx
   140027189:	je     0x14002718e
   14002718b:	mov    QWORD PTR [rdx],rcx
   14002718e:	test   rcx,rcx
   140027191:	jne    0x1400271aa
   140027193:	call   0x140029bf8
   140027198:	mov    DWORD PTR [rax],0x16
   14002719e:	call   0x140029b2c
   1400271a3:	xor    eax,eax
   1400271a5:	jmp    0x140027337
   1400271aa:	test   r8d,r8d
   1400271ad:	je     0x1400271b8
   1400271af:	lea    eax,[r8-0x2]
   1400271b3:	cmp    eax,0x22
   1400271b6:	ja     0x140027193
   1400271b8:	movzx  esi,WORD PTR [rcx]
   1400271bb:	xor    edi,edi
   1400271bd:	lea    rbx,[rcx+0x2]
   1400271c1:	lea    r13d,[rdi+0x8]
   1400271c5:	jmp    0x1400271ce
   1400271c7:	movzx  esi,WORD PTR [rbx]
   1400271ca:	add    rbx,0x2
   1400271ce:	mov    edx,r13d
   1400271d1:	movzx  ecx,si
   1400271d4:	call   0x14002bc9c
   1400271d9:	test   eax,eax
   1400271db:	jne    0x1400271c7
   1400271dd:	cmp    si,0x2d
   1400271e1:	jne    0x1400271e8
   1400271e3:	or     ebp,0x2
   1400271e6:	jmp    0x1400271ee
   1400271e8:	cmp    si,0x2b
   1400271ec:	jne    0x1400271f5
   1400271ee:	movzx  esi,WORD PTR [rbx]
   1400271f1:	add    rbx,0x2
   1400271f5:	mov    r13d,0xffdf
   1400271fb:	test   r14d,r14d
   1400271fe:	jne    0x14002722f
   140027200:	movzx  ecx,si
   140027203:	call   0x14002bd04
   140027208:	test   eax,eax
   14002720a:	je     0x140027214
   14002720c:	mov    r14d,0xa
   140027212:	jmp    0x140027256
   140027214:	movzx  eax,WORD PTR [rbx]
   140027217:	sub    ax,0x58
   14002721b:	test   r13w,ax
   14002721f:	je     0x140027229
   140027221:	mov    r14d,0x8
   140027227:	jmp    0x140027256
   140027229:	mov    r14d,0x10
   14002722f:	cmp    r14d,0x10
   140027233:	jne    0x140027256
   140027235:	movzx  ecx,si
   140027238:	call   0x14002bd04
   14002723d:	test   eax,eax
   14002723f:	jne    0x140027256
   140027241:	movzx  eax,WORD PTR [rbx]
   140027244:	sub    ax,0x58
   140027248:	test   r13w,ax
   14002724c:	jne    0x140027256
   14002724e:	movzx  esi,WORD PTR [rbx+0x2]
   140027252:	add    rbx,0x4
   140027256:	xor    edx,edx
   140027258:	or     eax,0xffffffff
   14002725b:	div    r14d
   14002725e:	mov    r13d,eax
   140027261:	mov    r12d,edx
   140027264:	movzx  ecx,si
   140027267:	call   0x14002bd04
   14002726c:	cmp    eax,0xffffffff
   14002726f:	jne    0x140027295
   140027271:	lea    ecx,[rsi-0x41]
   140027274:	cmp    cx,0x19
   140027278:	jbe    0x140027283
   14002727a:	lea    eax,[rsi-0x61]
   14002727d:	cmp    ax,0x19
   140027281:	ja     0x1400272b1
   140027283:	lea    eax,[rsi-0x61]
   140027286:	cmp    ax,0x19
   14002728a:	movzx  eax,si
   14002728d:	ja     0x140027292
   14002728f:	sub    eax,0x20
   140027292:	add    eax,0xffffffc9
   140027295:	cmp    eax,r14d
   140027298:	jae    0x1400272b1
   14002729a:	or     ebp,0x8
   14002729d:	cmp    edi,r13d
   1400272a0:	jb     0x1400272cb
   1400272a2:	jne    0x1400272a9
   1400272a4:	cmp    eax,r12d
   1400272a7:	jbe    0x1400272cb
   1400272a9:	or     ebp,0x4
   1400272ac:	test   r15,r15
   1400272af:	jne    0x1400272d1
   1400272b1:	mov    r12,QWORD PTR [rsp+0x60]
   1400272b6:	sub    rbx,0x2
   1400272ba:	test   bpl,0x8
   1400272be:	jne    0x1400272da
   1400272c0:	test   r15,r15
   1400272c3:	cmovne rbx,r12
   1400272c7:	xor    edi,edi
   1400272c9:	jmp    0x140027325
   1400272cb:	imul   edi,r14d
   1400272cf:	add    edi,eax
   1400272d1:	movzx  esi,WORD PTR [rbx]
   1400272d4:	add    rbx,0x2
   1400272d8:	jmp    0x140027264
   1400272da:	mov    esi,0x7fffffff
   1400272df:	test   bpl,0x4
   1400272e3:	jne    0x140027302
   1400272e5:	test   bpl,0x1
   1400272e9:	jne    0x140027325
   1400272eb:	mov    eax,ebp
   1400272ed:	and    eax,0x2
   1400272f0:	je     0x1400272fa
   1400272f2:	cmp    edi,0x80000000
   1400272f8:	ja     0x140027302
   1400272fa:	test   eax,eax
   1400272fc:	jne    0x140027325
   1400272fe:	cmp    edi,esi
   140027300:	jbe    0x140027325
   140027302:	call   0x140029bf8
   140027307:	mov    DWORD PTR [rax],0x22
   14002730d:	test   bpl,0x1
   140027311:	je     0x140027318
   140027313:	or     edi,0xffffffff
   140027316:	jmp    0x140027325
   140027318:	mov    al,bpl
   14002731b:	and    al,0x2
   14002731d:	neg    al
   14002731f:	sbb    edi,edi
   140027321:	neg    edi
   140027323:	add    edi,esi
   140027325:	test   r15,r15
   140027328:	je     0x14002732d
   14002732a:	mov    QWORD PTR [r15],rbx
   14002732d:	test   bpl,0x2
   140027331:	je     0x140027335
   140027333:	neg    edi
   140027335:	mov    eax,edi
   140027337:	mov    rbx,QWORD PTR [rsp+0x70]
   14002733c:	add    rsp,0x20
   140027340:	pop    r15
   140027342:	pop    r14
   140027344:	pop    r13
   140027346:	pop    r12
   140027348:	pop    rdi
   140027349:	pop    rsi
   14002734a:	pop    rbp
   14002734b:	ret    
   14002734c:	xor    r9d,r9d
   14002734f:	jmp    0x140027164
   140027354:	mov    r9d,0x1
   14002735a:	jmp    0x140027164
   14002735f:	int3   
   140027360:	rex push rdi
   140027362:	sub    rsp,0x20
   140027366:	mov    r10,r8
   140027369:	xor    r8d,r8d
   14002736c:	test   r9,r9
   14002736f:	jne    0x140027375
   140027371:	xor    eax,eax
   140027373:	jmp    0x1400273d4
   140027375:	test   rcx,rcx
   140027378:	jne    0x14002738f
   14002737a:	call   0x140029bf8
   14002737f:	mov    edi,0x16
   140027384:	mov    DWORD PTR [rax],edi
   140027386:	call   0x140029b2c
   14002738b:	mov    eax,edi
   14002738d:	jmp    0x1400273d4
   14002738f:	test   r10,r10
   140027392:	je     0x1400273a7
   140027394:	cmp    rdx,r9
   140027397:	jb     0x1400273a7
   140027399:	lea    r8,[r9+r9*1]
   14002739d:	mov    rdx,r10
   1400273a0:	call   0x1400265d0
   1400273a5:	jmp    0x140027371
   1400273a7:	test   rdx,rdx
   1400273aa:	je     0x1400273b9
   1400273ac:	mov    rdi,rcx
   1400273af:	movzx  eax,r8w
   1400273b3:	mov    rcx,rdx
   1400273b6:	rep stos WORD PTR es:[rdi],ax
   1400273b9:	test   r10,r10
   1400273bc:	je     0x14002737a
   1400273be:	cmp    rdx,r9
   1400273c1:	jae    0x1400273cf
   1400273c3:	call   0x140029bf8
   1400273c8:	mov    edi,0x22
   1400273cd:	jmp    0x140027384
   1400273cf:	mov    eax,0x16
   1400273d4:	add    rsp,0x20
   1400273d8:	pop    rdi
   1400273d9:	ret    
   1400273da:	int3   
   1400273db:	int3   
   1400273dc:	test   rcx,rcx
   1400273df:	je     0x140027418
   1400273e1:	push   rbx
   1400273e2:	sub    rsp,0x20
   1400273e6:	mov    r8,rcx
   1400273e9:	mov    rcx,QWORD PTR [rip+0x34f98]        # 0x14005c388
   1400273f0:	xor    edx,edx
   1400273f2:	call   QWORD PTR [rip+0x1a010]        # 0x140041408
   1400273f8:	test   eax,eax
   1400273fa:	jne    0x140027413
   1400273fc:	call   0x140029bf8
   140027401:	mov    rbx,rax
   140027404:	call   QWORD PTR [rip+0x19fce]        # 0x1400413d8
   14002740a:	mov    ecx,eax
   14002740c:	call   0x140029c18
   140027411:	mov    DWORD PTR [rbx],eax
   140027413:	add    rsp,0x20
   140027417:	pop    rbx
   140027418:	ret    
   140027419:	int3   
   14002741a:	int3   
   14002741b:	int3   
   14002741c:	xor    r8d,r8d
   14002741f:	mov    eax,r8d
   140027422:	test   rdx,rdx
   140027425:	je     0x140027439
   140027427:	cmp    WORD PTR [rcx],r8w
   14002742b:	je     0x140027439
   14002742d:	inc    rax
   140027430:	add    rcx,0x2
   140027434:	cmp    rax,rdx
   140027437:	jb     0x140027427
   140027439:	repz ret 
   14002743b:	int3   
   14002743c:	mov    QWORD PTR [rsp+0x8],rbx
   140027441:	mov    QWORD PTR [rsp+0x10],rsi
   140027446:	mov    QWORD PTR [rsp+0x18],rdi
   14002744b:	push   rbp
   14002744c:	push   r14
   14002744e:	push   r15
   140027450:	mov    rbp,rsp
   140027453:	sub    rsp,0x50
   140027457:	xor    ebx,ebx
   140027459:	mov    r14,r8
   14002745c:	mov    r15,rcx
   14002745f:	mov    rdi,rdx
   140027462:	lea    rcx,[rbp-0x28]
   140027466:	lea    r8d,[rbx+0x28]
   14002746a:	xor    edx,edx
   14002746c:	mov    rsi,r9
   14002746f:	mov    QWORD PTR [rbp-0x30],rbx
   140027473:	call   0x14002bb90
   140027478:	test   rsi,rsi
   14002747b:	jne    0x140027495
   14002747d:	call   0x140029bf8
   140027482:	mov    DWORD PTR [rax],0x16
   140027488:	call   0x140029b2c
   14002748d:	or     eax,0xffffffff
   140027490:	jmp    0x14002753c
   140027495:	test   r14,r14
   140027498:	je     0x14002749f
   14002749a:	test   rdi,rdi
   14002749d:	je     0x14002747d
   14002749f:	mov    DWORD PTR [rbp-0x18],0x42
   1400274a6:	mov    QWORD PTR [rbp-0x20],rdi
   1400274aa:	mov    QWORD PTR [rbp-0x30],rdi
   1400274ae:	cmp    r14,0x3fffffff
   1400274b5:	jbe    0x1400274c0
   1400274b7:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   1400274be:	jmp    0x1400274c7
   1400274c0:	lea    eax,[r14+r14*1]
   1400274c4:	mov    DWORD PTR [rbp-0x28],eax
   1400274c7:	mov    r9,QWORD PTR [rbp+0x48]
   1400274cb:	mov    r8,QWORD PTR [rbp+0x40]
   1400274cf:	lea    rcx,[rbp-0x30]
   1400274d3:	mov    rdx,rsi
   1400274d6:	call   r15
   1400274d9:	mov    esi,eax
   1400274db:	test   rdi,rdi
   1400274de:	je     0x14002753c
   1400274e0:	test   eax,eax
   1400274e2:	js     0x14002752d
   1400274e4:	dec    DWORD PTR [rbp-0x28]
   1400274e7:	js     0x1400274fc
   1400274e9:	mov    rax,QWORD PTR [rbp-0x30]
   1400274ed:	mov    BYTE PTR [rax],bl
   1400274ef:	mov    rax,QWORD PTR [rbp-0x30]
   1400274f3:	inc    rax
   1400274f6:	mov    QWORD PTR [rbp-0x30],rax
   1400274fa:	jmp    0x140027510
   1400274fc:	lea    rdx,[rbp-0x30]
   140027500:	xor    ecx,ecx
   140027502:	call   0x14002ae64
   140027507:	cmp    eax,0xffffffff
   14002750a:	je     0x14002752d
   14002750c:	mov    rax,QWORD PTR [rbp-0x30]
   140027510:	dec    DWORD PTR [rbp-0x28]
   140027513:	js     0x140027519
   140027515:	mov    BYTE PTR [rax],bl
   140027517:	jmp    0x140027529
   140027519:	lea    rdx,[rbp-0x30]
   14002751d:	xor    ecx,ecx
   14002751f:	call   0x14002ae64
   140027524:	cmp    eax,0xffffffff
   140027527:	je     0x14002752d
   140027529:	mov    eax,esi
   14002752b:	jmp    0x14002753c
   14002752d:	cmp    DWORD PTR [rbp-0x28],ebx
   140027530:	mov    WORD PTR [rdi+r14*2-0x2],bx
   140027536:	setge  bl
   140027539:	lea    eax,[rbx-0x2]
   14002753c:	lea    r11,[rsp+0x50]
   140027541:	mov    rbx,QWORD PTR [r11+0x20]
   140027545:	mov    rsi,QWORD PTR [r11+0x28]
   140027549:	mov    rdi,QWORD PTR [r11+0x30]
   14002754d:	mov    rsp,r11
   140027550:	pop    r15
   140027552:	pop    r14
   140027554:	pop    rbp
   140027555:	ret    
   140027556:	int3   
   140027557:	int3   
   140027558:	mov    QWORD PTR [rsp+0x8],rbx
   14002755d:	push   rdi
   14002755e:	sub    rsp,0x30
   140027562:	xor    edi,edi
   140027564:	mov    rbx,rcx
   140027567:	test   r8,r8
   14002756a:	je     0x1400275b3
   14002756c:	test   rcx,rcx
   14002756f:	je     0x1400275b3
   140027571:	test   rdx,rdx
   140027574:	je     0x1400275b3
   140027576:	mov    rax,QWORD PTR [rsp+0x60]
   14002757b:	mov    QWORD PTR [rsp+0x28],rax
   140027580:	mov    QWORD PTR [rsp+0x20],r9
   140027585:	mov    r9,r8
   140027588:	mov    r8,rdx
   14002758b:	mov    rdx,rcx
   14002758e:	lea    rcx,[rip+0x4907]        # 0x14002be9c
   140027595:	call   0x14002743c
   14002759a:	test   eax,eax
   14002759c:	jns    0x1400275a1
   14002759e:	mov    WORD PTR [rbx],di
   1400275a1:	cmp    eax,0xfffffffe
   1400275a4:	jne    0x1400275c6
   1400275a6:	call   0x140029bf8
   1400275ab:	mov    DWORD PTR [rax],0x22
   1400275b1:	jmp    0x1400275be
   1400275b3:	call   0x140029bf8
   1400275b8:	mov    DWORD PTR [rax],0x16
   1400275be:	call   0x140029b2c
   1400275c3:	or     eax,0xffffffff
   1400275c6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400275cb:	add    rsp,0x30
   1400275cf:	pop    rdi
   1400275d0:	ret    
   1400275d1:	int3   
   1400275d2:	int3   
   1400275d3:	int3   
   1400275d4:	sub    rsp,0x38
   1400275d8:	mov    QWORD PTR [rsp+0x20],r9
   1400275dd:	xor    r9d,r9d
   1400275e0:	call   0x140027558
   1400275e5:	add    rsp,0x38
   1400275e9:	ret    
   1400275ea:	int3   
   1400275eb:	int3   
   1400275ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400275f1:	mov    QWORD PTR [rsp+0x10],rsi
   1400275f6:	push   rdi
   1400275f7:	sub    rsp,0x20
   1400275fb:	xor    edi,edi
   1400275fd:	mov    rbx,rdx
   140027600:	mov    rsi,rcx
   140027603:	test   rdx,rdx
   140027606:	je     0x140027625
   140027608:	xor    edx,edx
   14002760a:	lea    rax,[rdi-0x20]
   14002760e:	div    rbx
   140027611:	cmp    rax,r8
   140027614:	jae    0x140027625
   140027616:	call   0x140029bf8
   14002761b:	mov    DWORD PTR [rax],0xc
   140027621:	xor    eax,eax
   140027623:	jmp    0x140027662
   140027625:	imul   rbx,r8
   140027629:	test   rcx,rcx
   14002762c:	je     0x140027636
   14002762e:	call   0x140029708
   140027633:	mov    rdi,rax
   140027636:	mov    rdx,rbx
   140027639:	mov    rcx,rsi
   14002763c:	call   0x14002c9f4
   140027641:	mov    rsi,rax
   140027644:	test   rax,rax
   140027647:	je     0x14002765f
   140027649:	cmp    rdi,rbx
   14002764c:	jae    0x14002765f
   14002764e:	sub    rbx,rdi
   140027651:	lea    rcx,[rdi+rax*1]
   140027655:	xor    edx,edx
   140027657:	mov    r8,rbx
   14002765a:	call   0x14002bb90
   14002765f:	mov    rax,rsi
   140027662:	mov    rbx,QWORD PTR [rsp+0x30]
   140027667:	mov    rsi,QWORD PTR [rsp+0x38]
   14002766c:	add    rsp,0x20
   140027670:	pop    rdi
   140027671:	ret    
   140027672:	int3   
   140027673:	int3   
   140027674:	sub    rsp,0x38
   140027678:	mov    QWORD PTR [rsp+0x20],r9
   14002767d:	xor    r9d,r9d
   140027680:	call   0x14002768c
   140027685:	add    rsp,0x38
   140027689:	ret    
   14002768a:	int3   
   14002768b:	int3   
   14002768c:	mov    rax,rsp
   14002768f:	mov    QWORD PTR [rax+0x8],rbx
   140027693:	mov    QWORD PTR [rax+0x10],rsi
   140027697:	mov    QWORD PTR [rax+0x18],rdi
   14002769b:	mov    QWORD PTR [rax+0x20],r14
   14002769f:	push   rbp
   1400276a0:	mov    rbp,rsp
   1400276a3:	sub    rsp,0x50
   1400276a7:	and    QWORD PTR [rbp-0x30],0x0
   1400276ac:	mov    rdi,rdx
   1400276af:	xor    edx,edx
   1400276b1:	mov    rsi,r8
   1400276b4:	mov    rbx,rcx
   1400276b7:	lea    r8d,[rdx+0x28]
   1400276bb:	lea    rcx,[rbp-0x28]
   1400276bf:	mov    r14,r9
   1400276c2:	call   0x14002bb90
   1400276c7:	test   rsi,rsi
   1400276ca:	jne    0x1400276e4
   1400276cc:	call   0x140029bf8
   1400276d1:	mov    DWORD PTR [rax],0x16
   1400276d7:	call   0x140029b2c
   1400276dc:	or     eax,0xffffffff
   1400276df:	jmp    0x14002776e
   1400276e4:	test   rdi,rdi
   1400276e7:	je     0x1400276ee
   1400276e9:	test   rbx,rbx
   1400276ec:	je     0x1400276cc
   1400276ee:	mov    DWORD PTR [rbp-0x18],0x42
   1400276f5:	mov    QWORD PTR [rbp-0x20],rbx
   1400276f9:	mov    QWORD PTR [rbp-0x30],rbx
   1400276fd:	cmp    rdi,0x3fffffff
   140027704:	jbe    0x14002770f
   140027706:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   14002770d:	jmp    0x140027715
   14002770f:	lea    eax,[rdi+rdi*1]
   140027712:	mov    DWORD PTR [rbp-0x28],eax
   140027715:	mov    r9,QWORD PTR [rbp+0x30]
   140027719:	lea    rcx,[rbp-0x30]
   14002771d:	mov    r8,r14
   140027720:	mov    rdx,rsi
   140027723:	call   0x14002affc
   140027728:	mov    edi,eax
   14002772a:	test   rbx,rbx
   14002772d:	je     0x14002776e
   14002772f:	dec    DWORD PTR [rbp-0x28]
   140027732:	js     0x140027748
   140027734:	mov    rax,QWORD PTR [rbp-0x30]
   140027738:	mov    BYTE PTR [rax],0x0
   14002773b:	mov    rax,QWORD PTR [rbp-0x30]
   14002773f:	inc    rax
   140027742:	mov    QWORD PTR [rbp-0x30],rax
   140027746:	jmp    0x140027757
   140027748:	lea    rdx,[rbp-0x30]
   14002774c:	xor    ecx,ecx
   14002774e:	call   0x14002ae64
   140027753:	mov    rax,QWORD PTR [rbp-0x30]
   140027757:	dec    DWORD PTR [rbp-0x28]
   14002775a:	js     0x140027761
   14002775c:	mov    BYTE PTR [rax],0x0
   14002775f:	jmp    0x14002776c
   140027761:	lea    rdx,[rbp-0x30]
   140027765:	xor    ecx,ecx
   140027767:	call   0x14002ae64
   14002776c:	mov    eax,edi
   14002776e:	mov    rbx,QWORD PTR [rsp+0x60]
   140027773:	mov    rsi,QWORD PTR [rsp+0x68]
   140027778:	mov    rdi,QWORD PTR [rsp+0x70]
   14002777d:	mov    r14,QWORD PTR [rsp+0x78]
   140027782:	add    rsp,0x50
   140027786:	pop    rbp
   140027787:	ret    
   140027788:	mov    QWORD PTR [rsp+0x8],rbx
   14002778d:	mov    QWORD PTR [rsp+0x10],rsi
   140027792:	push   rdi
   140027793:	sub    rsp,0x20
   140027797:	mov    rbx,r9
   14002779a:	mov    rsi,r8
   14002779d:	mov    rdi,rdx
   1400277a0:	test   r9,r9
   1400277a3:	jne    0x1400277a9
   1400277a5:	xor    eax,eax
   1400277a7:	jmp    0x1400277ff
   1400277a9:	test   rcx,rcx
   1400277ac:	jne    0x1400277c3
   1400277ae:	call   0x140029bf8
   1400277b3:	mov    ebx,0x16
   1400277b8:	mov    DWORD PTR [rax],ebx
   1400277ba:	call   0x140029b2c
   1400277bf:	mov    eax,ebx
   1400277c1:	jmp    0x1400277ff
   1400277c3:	test   r8,r8
   1400277c6:	je     0x1400277da
   1400277c8:	cmp    rdx,rbx
   1400277cb:	jb     0x1400277da
   1400277cd:	mov    r8,rbx
   1400277d0:	mov    rdx,rsi
   1400277d3:	call   0x1400265d0
   1400277d8:	jmp    0x1400277a5
   1400277da:	mov    r8,rdx
   1400277dd:	xor    edx,edx
   1400277df:	call   0x14002bb90
   1400277e4:	test   rsi,rsi
   1400277e7:	je     0x1400277ae
   1400277e9:	cmp    rdi,rbx
   1400277ec:	jae    0x1400277fa
   1400277ee:	call   0x140029bf8
   1400277f3:	mov    ebx,0x22
   1400277f8:	jmp    0x1400277b8
   1400277fa:	mov    eax,0x16
   1400277ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140027804:	mov    rsi,QWORD PTR [rsp+0x38]
   140027809:	add    rsp,0x20
   14002780d:	pop    rdi
   14002780e:	ret    
   14002780f:	int3   
   140027810:	mov    QWORD PTR [rsp+0x8],rbx
   140027815:	mov    QWORD PTR [rsp+0x10],rsi
   14002781a:	push   rdi
   14002781b:	sub    rsp,0x30
   14002781f:	mov    rbx,rcx
   140027822:	test   rcx,rcx
   140027825:	je     0x14002785d
   140027827:	call   0x14002cb34
   14002782c:	mov    edx,0x2
   140027831:	lea    rcx,[rax+0x1]
   140027835:	mov    rsi,rax
   140027838:	call   0x140027890
   14002783d:	mov    rdi,rax
   140027840:	test   rax,rax
   140027843:	je     0x14002785d
   140027845:	lea    rdx,[rsi+0x1]
   140027849:	mov    r8,rbx
   14002784c:	mov    rcx,rax
   14002784f:	call   0x14002cac8
   140027854:	test   eax,eax
   140027856:	jne    0x14002786f
   140027858:	mov    rax,rdi
   14002785b:	jmp    0x14002785f
   14002785d:	xor    eax,eax
   14002785f:	mov    rbx,QWORD PTR [rsp+0x40]
   140027864:	mov    rsi,QWORD PTR [rsp+0x48]
   140027869:	add    rsp,0x30
   14002786d:	pop    rdi
   14002786e:	ret    
   14002786f:	and    QWORD PTR [rsp+0x20],0x0
   140027875:	xor    r9d,r9d
   140027878:	xor    r8d,r8d
   14002787b:	xor    edx,edx
   14002787d:	xor    ecx,ecx
   14002787f:	call   0x140029b4c
   140027884:	int3   
   140027885:	int3   
   140027886:	int3   
   140027887:	int3   
   140027888:	jmp    0x140026da8
   14002788d:	int3   
   14002788e:	int3   
   14002788f:	int3   
   140027890:	rex push rbx
   140027892:	sub    rsp,0x20
   140027896:	and    DWORD PTR [rsp+0x40],0x0
   14002789b:	lea    r8,[rsp+0x40]
   1400278a0:	call   0x14002cb50
   1400278a5:	mov    rbx,rax
   1400278a8:	test   rax,rax
   1400278ab:	jne    0x1400278c8
   1400278ad:	cmp    DWORD PTR [rsp+0x40],eax
   1400278b1:	je     0x1400278c8
   1400278b3:	call   0x140029bf8
   1400278b8:	test   rax,rax
   1400278bb:	je     0x1400278c8
   1400278bd:	call   0x140029bf8
   1400278c2:	mov    ecx,DWORD PTR [rsp+0x40]
   1400278c6:	mov    DWORD PTR [rax],ecx
   1400278c8:	mov    rax,rbx
   1400278cb:	add    rsp,0x20
   1400278cf:	pop    rbx
   1400278d0:	ret    
   1400278d1:	int3   
   1400278d2:	int3   
   1400278d3:	int3   
   1400278d4:	cmp    DWORD PTR [rip+0x317bd],0x2        # 0x140059098
   1400278db:	movzx  r9d,dx
   1400278df:	mov    r8,rcx
   1400278e2:	jge    0x140027911
   1400278e4:	mov    rdx,rcx
   1400278e7:	xor    ecx,ecx
   1400278e9:	movzx  eax,WORD PTR [r8]
   1400278ed:	add    r8,0x2
   1400278f1:	test   ax,ax
   1400278f4:	jne    0x1400278e9
   1400278f6:	sub    r8,0x2
   1400278fa:	cmp    r8,rdx
   1400278fd:	je     0x140027905
   1400278ff:	cmp    WORD PTR [r8],r9w
   140027903:	jne    0x1400278f6
   140027905:	cmp    WORD PTR [r8],r9w
   140027909:	cmove  rcx,r8
   14002790d:	mov    rax,rcx
   140027910:	ret    
   140027911:	xor    ecx,ecx
   140027913:	mov    edx,ecx
   140027915:	jmp    0x140027929
   140027917:	cmp    WORD PTR [r8],r9w
   14002791b:	cmove  rdx,r8
   14002791f:	cmp    WORD PTR [r8],cx
   140027923:	je     0x14002797f
   140027925:	add    r8,0x2
   140027929:	lea    eax,[r8+0x1]
   14002792d:	test   al,0xe
   14002792f:	jne    0x140027917
   140027931:	cmp    cx,r9w
   140027935:	jne    0x14002795b
   140027937:	mov    eax,0xffff0001
   14002793c:	movd   xmm1,eax
   140027940:	jmp    0x140027946
   140027942:	add    r8,0x10
   140027946:	movdqu xmm0,XMMWORD PTR [r8]
   14002794b:	pcmpistri xmm1,xmm0,0x15
   140027951:	jne    0x140027942
   140027953:	movsxd rax,ecx
   140027956:	lea    rax,[r8+rax*2]
   14002795a:	ret    
   14002795b:	movzx  eax,r9w
   14002795f:	movd   xmm1,eax
   140027963:	movdqu xmm0,XMMWORD PTR [r8]
   140027968:	pcmpistri xmm1,xmm0,0x41
   14002796e:	jae    0x140027977
   140027970:	movsxd rax,ecx
   140027973:	lea    rdx,[r8+rax*2]
   140027977:	je     0x14002797f
   140027979:	add    r8,0x10
   14002797d:	jmp    0x140027963
   14002797f:	mov    rax,rdx
   140027982:	ret    
   140027983:	int3   
   140027984:	mov    QWORD PTR [rsp+0x8],rbx
   140027989:	mov    QWORD PTR [rsp+0x10],rsi
   14002798e:	push   rdi
   14002798f:	sub    rsp,0x10
   140027993:	movzx  edi,WORD PTR [rdx]
   140027996:	xor    esi,esi
   140027998:	mov    rbx,rdx
   14002799b:	mov    r8,rcx
   14002799e:	cmp    si,di
   1400279a1:	jne    0x1400279ab
   1400279a3:	mov    rax,rcx
   1400279a6:	jmp    0x140027b70
   1400279ab:	cmp    DWORD PTR [rip+0x316e6],0x2        # 0x140059098
   1400279b2:	mov    r10d,0xfff
   1400279b8:	lea    r11d,[r10-0xf]
   1400279bc:	jge    0x140027a9b
   1400279c2:	movzx  eax,di
   1400279c5:	xorps  xmm2,xmm2
   1400279c8:	movd   xmm0,eax
   1400279cc:	pshuflw xmm1,xmm0,0x0
   1400279d1:	pshufd xmm3,xmm1,0x0
   1400279d6:	mov    rax,r8
   1400279d9:	and    rax,r10
   1400279dc:	cmp    rax,r11
   1400279df:	ja     0x140027a0e
   1400279e1:	movdqu xmm0,XMMWORD PTR [r8]
   1400279e6:	movdqa xmm1,xmm0
   1400279ea:	pcmpeqw xmm0,xmm3
   1400279ee:	pcmpeqw xmm1,xmm2
   1400279f2:	por    xmm1,xmm0
   1400279f6:	pmovmskb eax,xmm1
   1400279fa:	test   eax,eax
   1400279fc:	jne    0x140027a04
   1400279fe:	add    r8,0x10
   140027a02:	jmp    0x1400279d6
   140027a04:	bsf    ecx,eax
   140027a07:	shr    rcx,1
   140027a0a:	lea    r8,[r8+rcx*2]
   140027a0e:	cmp    si,WORD PTR [r8]
   140027a12:	je     0x140027b6e
   140027a18:	cmp    di,WORD PTR [r8]
   140027a1c:	jne    0x140027a92
   140027a1e:	mov    rdx,r8
   140027a21:	mov    r9,rbx
   140027a24:	mov    rax,r9
   140027a27:	and    rax,r10
   140027a2a:	cmp    rax,r11
   140027a2d:	ja     0x140027a76
   140027a2f:	mov    rax,rdx
   140027a32:	and    rax,r10
   140027a35:	cmp    rax,r11
   140027a38:	ja     0x140027a76
   140027a3a:	movdqu xmm1,XMMWORD PTR [r9]
   140027a3f:	movdqu xmm0,XMMWORD PTR [rdx]
   140027a43:	pcmpeqw xmm0,xmm1
   140027a47:	pcmpeqw xmm1,xmm2
   140027a4b:	pcmpeqw xmm0,xmm2
   140027a4f:	por    xmm1,xmm0
   140027a53:	pmovmskb eax,xmm1
   140027a57:	test   eax,eax
   140027a59:	jne    0x140027a65
   140027a5b:	add    rdx,0x10
   140027a5f:	add    r9,0x10
   140027a63:	jmp    0x140027a24
   140027a65:	bsf    eax,eax
   140027a68:	mov    ecx,eax
   140027a6a:	shr    rcx,1
   140027a6d:	add    rcx,rcx
   140027a70:	add    rdx,rcx
   140027a73:	add    r9,rcx
   140027a76:	movzx  eax,WORD PTR [r9]
   140027a7a:	cmp    si,ax
   140027a7d:	je     0x140027b69
   140027a83:	cmp    WORD PTR [rdx],ax
   140027a86:	jne    0x140027a92
   140027a88:	add    rdx,0x2
   140027a8c:	add    r9,0x2
   140027a90:	jmp    0x140027a24
   140027a92:	add    r8,0x2
   140027a96:	jmp    0x1400279d6
   140027a9b:	mov    rax,rdx
   140027a9e:	and    rax,r10
   140027aa1:	cmp    rax,r11
   140027aa4:	ja     0x140027aac
   140027aa6:	movdqu xmm0,XMMWORD PTR [rdx]
   140027aaa:	jmp    0x140027ad9
   140027aac:	mov    rcx,rdx
   140027aaf:	xorps  xmm0,xmm0
   140027ab2:	mov    r9d,0x8
   140027ab8:	movzx  edx,di
   140027abb:	psrldq xmm0,0x2
   140027ac0:	movzx  eax,dx
   140027ac3:	pinsrw xmm0,eax,0x7
   140027ac8:	cmp    si,dx
   140027acb:	je     0x140027ad4
   140027acd:	add    rcx,0x2
   140027ad1:	movzx  edx,WORD PTR [rcx]
   140027ad4:	dec    r9
   140027ad7:	jne    0x140027abb
   140027ad9:	mov    rax,r8
   140027adc:	and    rax,r10
   140027adf:	cmp    rax,r11
   140027ae2:	ja     0x140027b3f
   140027ae4:	movdqu xmm1,XMMWORD PTR [r8]
   140027ae9:	pcmpistri xmm0,xmm1,0xd
   140027aef:	jbe    0x140027af7
   140027af1:	add    r8,0x10
   140027af5:	jmp    0x140027ad9
   140027af7:	jae    0x140027b6e
   140027af9:	pcmpistri xmm0,xmm1,0xd
   140027aff:	movsxd rax,ecx
   140027b02:	lea    r8,[r8+rax*2]
   140027b06:	mov    rdx,r8
   140027b09:	mov    r9,rbx
   140027b0c:	mov    rax,rdx
   140027b0f:	and    rax,r10
   140027b12:	cmp    rax,r11
   140027b15:	ja     0x140027b51
   140027b17:	mov    rax,r9
   140027b1a:	and    rax,r10
   140027b1d:	cmp    rax,r11
   140027b20:	ja     0x140027b51
   140027b22:	movdqu xmm1,XMMWORD PTR [rdx]
   140027b26:	movdqu xmm2,XMMWORD PTR [r9]
   140027b2b:	pcmpistri xmm2,xmm1,0xd
   140027b31:	jno    0x140027b4b
   140027b33:	js     0x140027b69
   140027b35:	add    rdx,0x10
   140027b39:	add    r9,0x10
   140027b3d:	jmp    0x140027b0c
   140027b3f:	cmp    si,WORD PTR [r8]
   140027b43:	je     0x140027b6e
   140027b45:	cmp    WORD PTR [r8],di
   140027b49:	je     0x140027b06
   140027b4b:	add    r8,0x2
   140027b4f:	jmp    0x140027ad9
   140027b51:	movzx  eax,WORD PTR [r9]
   140027b55:	cmp    si,ax
   140027b58:	je     0x140027b69
   140027b5a:	cmp    WORD PTR [rdx],ax
   140027b5d:	jne    0x140027b4b
   140027b5f:	add    rdx,0x2
   140027b63:	add    r9,0x2
   140027b67:	jmp    0x140027b0c
   140027b69:	mov    rax,r8
   140027b6c:	jmp    0x140027b70
   140027b6e:	xor    eax,eax
   140027b70:	mov    rbx,QWORD PTR [rsp+0x20]
   140027b75:	mov    rsi,QWORD PTR [rsp+0x28]
   140027b7a:	add    rsp,0x10
   140027b7e:	pop    rdi
   140027b7f:	ret    
   140027b80:	mov    rcx,QWORD PTR [rip+0x31501]        # 0x140059088
   140027b87:	xor    eax,eax
   140027b89:	or     rcx,0x1
   140027b8d:	cmp    QWORD PTR [rip+0x33bdc],rcx        # 0x14005b770
   140027b94:	sete   al
   140027b97:	ret    
   140027b98:	rex push rbx
   140027b9a:	sub    rsp,0x20
   140027b9e:	mov    rbx,rcx
   140027ba1:	call   QWORD PTR [rip+0x19869]        # 0x140041410
   140027ba7:	mov    ecx,0x1
   140027bac:	mov    DWORD PTR [rip+0x3413e],eax        # 0x14005bcf0
   140027bb2:	call   0x14002d998
   140027bb7:	mov    rcx,rbx
   140027bba:	call   0x14002db2c
   140027bbf:	cmp    DWORD PTR [rip+0x3412a],0x0        # 0x14005bcf0
   140027bc6:	jne    0x140027bd2
   140027bc8:	mov    ecx,0x1
   140027bcd:	call   0x14002d998
   140027bd2:	mov    ecx,0xc0000409
   140027bd7:	add    rsp,0x20
   140027bdb:	pop    rbx
   140027bdc:	jmp    0x14002db0c
   140027be1:	int3   
   140027be2:	int3   
   140027be3:	int3   
   140027be4:	mov    QWORD PTR [rsp+0x8],rcx
   140027be9:	sub    rsp,0x38
   140027bed:	mov    ecx,0x17
   140027bf2:	call   0x14003265c
   140027bf7:	test   eax,eax
   140027bf9:	je     0x140027c02
   140027bfb:	mov    ecx,0x2
   140027c00:	int    0x29
   140027c02:	lea    rcx,[rip+0x33c17]        # 0x14005b820
   140027c09:	call   0x14002da10
   140027c0e:	mov    rax,QWORD PTR [rsp+0x38]
   140027c13:	mov    QWORD PTR [rip+0x33cfe],rax        # 0x14005b918
   140027c1a:	lea    rax,[rsp+0x38]
   140027c1f:	add    rax,0x8
   140027c23:	mov    QWORD PTR [rip+0x33c8e],rax        # 0x14005b8b8
   140027c2a:	mov    rax,QWORD PTR [rip+0x33ce7]        # 0x14005b918
   140027c31:	mov    QWORD PTR [rip+0x33b58],rax        # 0x14005b790
   140027c38:	mov    rax,QWORD PTR [rsp+0x40]
   140027c3d:	mov    QWORD PTR [rip+0x33c5c],rax        # 0x14005b8a0
   140027c44:	mov    DWORD PTR [rip+0x33b32],0xc0000409        # 0x14005b780
   140027c4e:	mov    DWORD PTR [rip+0x33b2c],0x1        # 0x14005b784
   140027c58:	mov    DWORD PTR [rip+0x33b36],0x1        # 0x14005b798
   140027c62:	mov    eax,0x8
   140027c67:	imul   rax,rax,0x0
   140027c6b:	lea    rcx,[rip+0x33b2e]        # 0x14005b7a0
   140027c72:	mov    QWORD PTR [rcx+rax*1],0x2
   140027c7a:	mov    eax,0x8
   140027c7f:	imul   rax,rax,0x0
   140027c83:	mov    rcx,QWORD PTR [rip+0x313fe]        # 0x140059088
   140027c8a:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140027c8f:	mov    eax,0x8
   140027c94:	imul   rax,rax,0x1
   140027c98:	mov    rcx,QWORD PTR [rip+0x313f1]        # 0x140059090
   140027c9f:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140027ca4:	lea    rcx,[rip+0x19c55]        # 0x140041900
   140027cab:	call   0x140027b98
   140027cb0:	add    rsp,0x38
   140027cb4:	ret    
   140027cb5:	int3   
   140027cb6:	int3   
   140027cb7:	int3   
   140027cb8:	sub    rsp,0x28
   140027cbc:	mov    ecx,0x8
   140027cc1:	call   0x140027ccc
   140027cc6:	add    rsp,0x28
   140027cca:	ret    
   140027ccb:	int3   
   140027ccc:	mov    DWORD PTR [rsp+0x8],ecx
   140027cd0:	sub    rsp,0x28
   140027cd4:	mov    ecx,0x17
   140027cd9:	call   0x14003265c
   140027cde:	test   eax,eax
   140027ce0:	je     0x140027cea
   140027ce2:	mov    eax,DWORD PTR [rsp+0x30]
   140027ce6:	mov    ecx,eax
   140027ce8:	int    0x29
   140027cea:	lea    rcx,[rip+0x33b2f]        # 0x14005b820
   140027cf1:	call   0x14002d9a0
   140027cf6:	mov    rax,QWORD PTR [rsp+0x28]
   140027cfb:	mov    QWORD PTR [rip+0x33c16],rax        # 0x14005b918
   140027d02:	lea    rax,[rsp+0x28]
   140027d07:	add    rax,0x8
   140027d0b:	mov    QWORD PTR [rip+0x33ba6],rax        # 0x14005b8b8
   140027d12:	mov    rax,QWORD PTR [rip+0x33bff]        # 0x14005b918
   140027d19:	mov    QWORD PTR [rip+0x33a70],rax        # 0x14005b790
   140027d20:	mov    DWORD PTR [rip+0x33a56],0xc0000409        # 0x14005b780
   140027d2a:	mov    DWORD PTR [rip+0x33a50],0x1        # 0x14005b784
   140027d34:	mov    DWORD PTR [rip+0x33a5a],0x1        # 0x14005b798
   140027d3e:	mov    eax,0x8
   140027d43:	imul   rax,rax,0x0
   140027d47:	lea    rcx,[rip+0x33a52]        # 0x14005b7a0
   140027d4e:	mov    edx,DWORD PTR [rsp+0x30]
   140027d52:	mov    QWORD PTR [rcx+rax*1],rdx
   140027d56:	lea    rcx,[rip+0x19ba3]        # 0x140041900
   140027d5d:	call   0x140027b98
   140027d62:	add    rsp,0x28
   140027d66:	ret    
   140027d67:	int3   
   140027d68:	mov    QWORD PTR [rsp+0x8],rbx
   140027d6d:	movzx  r8d,WORD PTR [rcx]
   140027d71:	mov    r10,rdx
   140027d74:	mov    rax,rcx
   140027d77:	test   r8w,r8w
   140027d7b:	je     0x140027daf
   140027d7d:	movzx  ebx,WORD PTR [rdx]
   140027d80:	movzx  r11d,r8w
   140027d84:	mov    r9,r10
   140027d87:	cmp    ebx,r11d
   140027d8a:	je     0x140027da1
   140027d8c:	movzx  edx,bx
   140027d8f:	test   dx,dx
   140027d92:	je     0x140027daf
   140027d94:	add    r9,0x2
   140027d98:	movzx  edx,WORD PTR [r9]
   140027d9c:	cmp    edx,r11d
   140027d9f:	jne    0x140027d8f
   140027da1:	add    rax,0x2
   140027da5:	movzx  r8d,WORD PTR [rax]
   140027da9:	test   r8w,r8w
   140027dad:	jne    0x140027d80
   140027daf:	mov    rbx,QWORD PTR [rsp+0x8]
   140027db4:	sub    rax,rcx
   140027db7:	sar    rax,1
   140027dba:	ret    
   140027dbb:	int3   
   140027dbc:	xor    r10d,r10d
   140027dbf:	mov    r9,rdx
   140027dc2:	mov    rax,rcx
   140027dc5:	cmp    WORD PTR [rcx],r10w
   140027dc9:	je     0x140027df4
   140027dcb:	mov    r8,r9
   140027dce:	cmp    WORD PTR [r9],r10w
   140027dd2:	je     0x140027dea
   140027dd4:	movzx  edx,WORD PTR [r9]
   140027dd8:	cmp    dx,WORD PTR [rax]
   140027ddb:	je     0x140027df4
   140027ddd:	add    r8,0x2
   140027de1:	movzx  edx,WORD PTR [r8]
   140027de5:	test   dx,dx
   140027de8:	jne    0x140027dd8
   140027dea:	add    rax,0x2
   140027dee:	cmp    WORD PTR [rax],r10w
   140027df2:	jmp    0x140027dc9
   140027df4:	sub    rax,rcx
   140027df7:	sar    rax,1
   140027dfa:	ret    
   140027dfb:	int3   
   140027dfc:	sub    rsp,0x28
   140027e00:	mov    rax,QWORD PTR [rcx]
   140027e03:	cmp    DWORD PTR [rax],0xe06d7363
   140027e09:	jne    0x140027e27
   140027e0b:	cmp    DWORD PTR [rax+0x18],0x4
   140027e0f:	jne    0x140027e27
   140027e11:	mov    ecx,DWORD PTR [rax+0x20]
   140027e14:	lea    eax,[rcx-0x19930520]
   140027e1a:	cmp    eax,0x2
   140027e1d:	jbe    0x140027e2e
   140027e1f:	cmp    ecx,0x1994000
   140027e25:	je     0x140027e2e
   140027e27:	xor    eax,eax
   140027e29:	add    rsp,0x28
   140027e2d:	ret    
   140027e2e:	call   0x1400296c8
   140027e33:	int3   
   140027e34:	sub    rsp,0x28
   140027e38:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140027dfc
   140027e3f:	call   0x14002db04
   140027e44:	xor    eax,eax
   140027e46:	add    rsp,0x28
   140027e4a:	ret    
   140027e4b:	int3   
   140027e4c:	mov    QWORD PTR [rsp+0x8],rbx
   140027e51:	mov    QWORD PTR [rsp+0x10],rbp
   140027e56:	mov    QWORD PTR [rsp+0x18],rsi
   140027e5b:	push   rdi
   140027e5c:	sub    rsp,0x20
   140027e60:	mov    rsi,rdx
   140027e63:	mov    edi,ecx
   140027e65:	call   0x140028170
   140027e6a:	xor    r9d,r9d
   140027e6d:	mov    rbx,rax
   140027e70:	test   rax,rax
   140027e73:	je     0x140028001
   140027e79:	mov    rdx,QWORD PTR [rax+0xa0]
   140027e80:	mov    rcx,rdx
   140027e83:	cmp    DWORD PTR [rcx],edi
   140027e85:	je     0x140027e97
   140027e87:	lea    rax,[rdx+0xc0]
   140027e8e:	add    rcx,0x10
   140027e92:	cmp    rcx,rax
   140027e95:	jb     0x140027e83
   140027e97:	lea    rax,[rdx+0xc0]
   140027e9e:	cmp    rcx,rax
   140027ea1:	jae    0x140027ea7
   140027ea3:	cmp    DWORD PTR [rcx],edi
   140027ea5:	je     0x140027eaa
   140027ea7:	mov    rcx,r9
   140027eaa:	test   rcx,rcx
   140027ead:	je     0x140028001
   140027eb3:	mov    r8,QWORD PTR [rcx+0x8]
   140027eb7:	test   r8,r8
   140027eba:	je     0x140028001
   140027ec0:	cmp    r8,0x5
   140027ec4:	jne    0x140027ed3
   140027ec6:	mov    QWORD PTR [rcx+0x8],r9
   140027eca:	lea    eax,[r8-0x4]
   140027ece:	jmp    0x140028003
   140027ed3:	cmp    r8,0x1
   140027ed7:	jne    0x140027ee1
   140027ed9:	or     eax,0xffffffff
   140027edc:	jmp    0x140028003
   140027ee1:	mov    rbp,QWORD PTR [rbx+0xa8]
   140027ee8:	mov    QWORD PTR [rbx+0xa8],rsi
   140027eef:	cmp    DWORD PTR [rcx+0x4],0x8
   140027ef3:	jne    0x140027feb
   140027ef9:	mov    edx,0x30
   140027efe:	mov    rax,QWORD PTR [rbx+0xa0]
   140027f05:	add    rdx,0x10
   140027f09:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   140027f0e:	cmp    rdx,0xc0
   140027f15:	jl     0x140027efe
   140027f17:	cmp    DWORD PTR [rcx],0xc000008e
   140027f1d:	mov    edi,DWORD PTR [rbx+0xb0]
   140027f23:	jne    0x140027f34
   140027f25:	mov    DWORD PTR [rbx+0xb0],0x83
   140027f2f:	jmp    0x140027fd5
   140027f34:	cmp    DWORD PTR [rcx],0xc0000090
   140027f3a:	jne    0x140027f4b
   140027f3c:	mov    DWORD PTR [rbx+0xb0],0x81
   140027f46:	jmp    0x140027fd5
   140027f4b:	cmp    DWORD PTR [rcx],0xc0000091
   140027f51:	jne    0x140027f5f
   140027f53:	mov    DWORD PTR [rbx+0xb0],0x84
   140027f5d:	jmp    0x140027fd5
   140027f5f:	cmp    DWORD PTR [rcx],0xc0000093
   140027f65:	jne    0x140027f73
   140027f67:	mov    DWORD PTR [rbx+0xb0],0x85
   140027f71:	jmp    0x140027fd5
   140027f73:	cmp    DWORD PTR [rcx],0xc000008d
   140027f79:	jne    0x140027f87
   140027f7b:	mov    DWORD PTR [rbx+0xb0],0x82
   140027f85:	jmp    0x140027fd5
   140027f87:	cmp    DWORD PTR [rcx],0xc000008f
   140027f8d:	jne    0x140027f9b
   140027f8f:	mov    DWORD PTR [rbx+0xb0],0x86
   140027f99:	jmp    0x140027fd5
   140027f9b:	cmp    DWORD PTR [rcx],0xc0000092
   140027fa1:	jne    0x140027faf
   140027fa3:	mov    DWORD PTR [rbx+0xb0],0x8a
   140027fad:	jmp    0x140027fd5
   140027faf:	cmp    DWORD PTR [rcx],0xc00002b5
   140027fb5:	jne    0x140027fc3
   140027fb7:	mov    DWORD PTR [rbx+0xb0],0x8d
   140027fc1:	jmp    0x140027fd5
   140027fc3:	cmp    DWORD PTR [rcx],0xc00002b4
   140027fc9:	jne    0x140027fd5
   140027fcb:	mov    DWORD PTR [rbx+0xb0],0x8e
   140027fd5:	mov    edx,DWORD PTR [rbx+0xb0]
   140027fdb:	mov    ecx,0x8
   140027fe0:	call   r8
   140027fe3:	mov    DWORD PTR [rbx+0xb0],edi
   140027fe9:	jmp    0x140027ff5
   140027feb:	mov    QWORD PTR [rcx+0x8],r9
   140027fef:	mov    ecx,DWORD PTR [rcx+0x4]
   140027ff2:	call   r8
   140027ff5:	mov    QWORD PTR [rbx+0xa8],rbp
   140027ffc:	jmp    0x140027ed9
   140028001:	xor    eax,eax
   140028003:	mov    rbx,QWORD PTR [rsp+0x30]
   140028008:	mov    rbp,QWORD PTR [rsp+0x38]
   14002800d:	mov    rsi,QWORD PTR [rsp+0x40]
   140028012:	add    rsp,0x20
   140028016:	pop    rdi
   140028017:	ret    
   140028018:	test   rcx,rcx
   14002801b:	je     0x14002814a
   140028021:	mov    QWORD PTR [rsp+0x10],rbx
   140028026:	push   rdi
   140028027:	sub    rsp,0x20
   14002802b:	mov    rbx,rcx
   14002802e:	mov    rcx,QWORD PTR [rcx+0x38]
   140028032:	test   rcx,rcx
   140028035:	je     0x14002803c
   140028037:	call   0x1400273dc
   14002803c:	mov    rcx,QWORD PTR [rbx+0x48]
   140028040:	test   rcx,rcx
   140028043:	je     0x14002804a
   140028045:	call   0x1400273dc
   14002804a:	mov    rcx,QWORD PTR [rbx+0x58]
   14002804e:	test   rcx,rcx
   140028051:	je     0x140028058
   140028053:	call   0x1400273dc
   140028058:	mov    rcx,QWORD PTR [rbx+0x68]
   14002805c:	test   rcx,rcx
   14002805f:	je     0x140028066
   140028061:	call   0x1400273dc
   140028066:	mov    rcx,QWORD PTR [rbx+0x70]
   14002806a:	test   rcx,rcx
   14002806d:	je     0x140028074
   14002806f:	call   0x1400273dc
   140028074:	mov    rcx,QWORD PTR [rbx+0x78]
   140028078:	test   rcx,rcx
   14002807b:	je     0x140028082
   14002807d:	call   0x1400273dc
   140028082:	mov    rcx,QWORD PTR [rbx+0x80]
   140028089:	test   rcx,rcx
   14002808c:	je     0x140028093
   14002808e:	call   0x1400273dc
   140028093:	mov    rcx,QWORD PTR [rbx+0xa0]
   14002809a:	lea    rax,[rip+0x1986f]        # 0x140041910
   1400280a1:	cmp    rcx,rax
   1400280a4:	je     0x1400280ab
   1400280a6:	call   0x1400273dc
   1400280ab:	mov    edi,0xd
   1400280b0:	mov    ecx,edi
   1400280b2:	call   0x14002db4c
   1400280b7:	nop
   1400280b8:	mov    rcx,QWORD PTR [rbx+0xb8]
   1400280bf:	mov    QWORD PTR [rsp+0x30],rcx
   1400280c4:	test   rcx,rcx
   1400280c7:	je     0x1400280e5
   1400280c9:	lock dec DWORD PTR [rcx]
   1400280cc:	jne    0x1400280e5
   1400280ce:	lea    rax,[rip+0x3145b]        # 0x140059530
   1400280d5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400280da:	cmp    rcx,rax
   1400280dd:	je     0x1400280e5
   1400280df:	call   0x1400273dc
   1400280e4:	nop
   1400280e5:	mov    ecx,edi
   1400280e7:	call   0x14002dd34
   1400280ec:	mov    ecx,0xc
   1400280f1:	call   0x14002db4c
   1400280f6:	nop
   1400280f7:	mov    rdi,QWORD PTR [rbx+0xc0]
   1400280fe:	test   rdi,rdi
   140028101:	je     0x14002812e
   140028103:	mov    rcx,rdi
   140028106:	call   0x14002a2ec
   14002810b:	cmp    rdi,QWORD PTR [rip+0x3190e]        # 0x140059a20
   140028112:	je     0x14002812e
   140028114:	lea    rax,[rip+0x31915]        # 0x140059a30
   14002811b:	cmp    rdi,rax
   14002811e:	je     0x14002812e
   140028120:	cmp    DWORD PTR [rdi],0x0
   140028123:	jne    0x14002812e
   140028125:	mov    rcx,rdi
   140028128:	call   0x14002a154
   14002812d:	nop
   14002812e:	mov    ecx,0xc
   140028133:	call   0x14002dd34
   140028138:	mov    rcx,rbx
   14002813b:	call   0x1400273dc
   140028140:	mov    rbx,QWORD PTR [rsp+0x38]
   140028145:	add    rsp,0x20
   140028149:	pop    rdi
   14002814a:	ret    
   14002814b:	int3   
   14002814c:	rex push rbx
   14002814e:	sub    rsp,0x20
   140028152:	call   0x140028170
   140028157:	mov    rbx,rax
   14002815a:	test   rax,rax
   14002815d:	jne    0x140028167
   14002815f:	lea    ecx,[rax+0x10]
   140028162:	call   0x1400283b0
   140028167:	mov    rax,rbx
   14002816a:	add    rsp,0x20
   14002816e:	pop    rbx
   14002816f:	ret    
   140028170:	mov    QWORD PTR [rsp+0x8],rbx
   140028175:	push   rdi
   140028176:	sub    rsp,0x20
   14002817a:	call   QWORD PTR [rip+0x19258]        # 0x1400413d8
   140028180:	mov    ecx,DWORD PTR [rip+0x30e9a]        # 0x140059020
   140028186:	mov    edi,eax
   140028188:	call   0x14002da94
   14002818d:	mov    rbx,rax
   140028190:	test   rax,rax
   140028193:	jne    0x1400281dc
   140028195:	lea    ecx,[rax+0x1]
   140028198:	mov    edx,0x470
   14002819d:	call   0x140029744
   1400281a2:	mov    rbx,rax
   1400281a5:	test   rax,rax
   1400281a8:	je     0x1400281dc
   1400281aa:	mov    ecx,DWORD PTR [rip+0x30e70]        # 0x140059020
   1400281b0:	mov    rdx,rax
   1400281b3:	call   0x14002da9c
   1400281b8:	mov    rcx,rbx
   1400281bb:	test   eax,eax
   1400281bd:	je     0x1400281d5
   1400281bf:	xor    edx,edx
   1400281c1:	call   0x1400281f4
   1400281c6:	call   QWORD PTR [rip+0x19254]        # 0x140041420
   1400281cc:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400281d1:	mov    DWORD PTR [rbx],eax
   1400281d3:	jmp    0x1400281dc
   1400281d5:	call   0x1400273dc
   1400281da:	xor    ebx,ebx
   1400281dc:	mov    ecx,edi
   1400281de:	call   QWORD PTR [rip+0x1913c]        # 0x140041320
   1400281e4:	mov    rax,rbx
   1400281e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400281ec:	add    rsp,0x20
   1400281f0:	pop    rdi
   1400281f1:	ret    
   1400281f2:	int3   
   1400281f3:	int3   
   1400281f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400281f9:	push   rdi
   1400281fa:	sub    rsp,0x20
   1400281fe:	mov    rdi,rdx
   140028201:	mov    rbx,rcx
   140028204:	lea    rax,[rip+0x19705]        # 0x140041910
   14002820b:	mov    QWORD PTR [rcx+0xa0],rax
   140028212:	and    DWORD PTR [rcx+0x10],0x0
   140028216:	mov    DWORD PTR [rcx+0x1c],0x1
   14002821d:	mov    DWORD PTR [rcx+0xc8],0x1
   140028227:	mov    eax,0x43
   14002822c:	mov    WORD PTR [rcx+0x164],ax
   140028233:	mov    WORD PTR [rcx+0x26a],ax
   14002823a:	lea    rax,[rip+0x312ef]        # 0x140059530
   140028241:	mov    QWORD PTR [rcx+0xb8],rax
   140028248:	mov    ecx,0xd
   14002824d:	call   0x14002db4c
   140028252:	nop
   140028253:	mov    rax,QWORD PTR [rbx+0xb8]
   14002825a:	lock inc DWORD PTR [rax]
   14002825d:	mov    ecx,0xd
   140028262:	call   0x14002dd34
   140028267:	mov    ecx,0xc
   14002826c:	call   0x14002db4c
   140028271:	nop
   140028272:	mov    QWORD PTR [rbx+0xc0],rdi
   140028279:	test   rdi,rdi
   14002827c:	jne    0x14002828c
   14002827e:	mov    rax,QWORD PTR [rip+0x3179b]        # 0x140059a20
   140028285:	mov    QWORD PTR [rbx+0xc0],rax
   14002828c:	mov    rcx,QWORD PTR [rbx+0xc0]
   140028293:	call   0x14002a0c8
   140028298:	nop
   140028299:	mov    ecx,0xc
   14002829e:	call   0x14002dd34
   1400282a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400282a8:	add    rsp,0x20
   1400282ac:	pop    rdi
   1400282ad:	ret    
   1400282ae:	int3   
   1400282af:	int3   
   1400282b0:	rex push rbx
   1400282b2:	sub    rsp,0x20
   1400282b6:	call   0x1400284ec
   1400282bb:	call   0x14002dcd4
   1400282c0:	test   eax,eax
   1400282c2:	je     0x140028322
   1400282c4:	lea    rcx,[rip+0xfffffffffffffd4d]        # 0x140028018
   1400282cb:	call   0x14002da84
   1400282d0:	mov    DWORD PTR [rip+0x30d4a],eax        # 0x140059020
   1400282d6:	cmp    eax,0xffffffff
   1400282d9:	je     0x140028322
   1400282db:	mov    edx,0x470
   1400282e0:	mov    ecx,0x1
   1400282e5:	call   0x140029744
   1400282ea:	mov    rbx,rax
   1400282ed:	test   rax,rax
   1400282f0:	je     0x140028322
   1400282f2:	mov    ecx,DWORD PTR [rip+0x30d28]        # 0x140059020
   1400282f8:	mov    rdx,rax
   1400282fb:	call   0x14002da9c
   140028300:	test   eax,eax
   140028302:	je     0x140028322
   140028304:	xor    edx,edx
   140028306:	mov    rcx,rbx
   140028309:	call   0x1400281f4
   14002830e:	call   QWORD PTR [rip+0x1910c]        # 0x140041420
   140028314:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140028319:	mov    DWORD PTR [rbx],eax
   14002831b:	mov    eax,0x1
   140028320:	jmp    0x140028329
   140028322:	call   0x140028330
   140028327:	xor    eax,eax
   140028329:	add    rsp,0x20
   14002832d:	pop    rbx
   14002832e:	ret    
   14002832f:	int3   
   140028330:	sub    rsp,0x28
   140028334:	mov    ecx,DWORD PTR [rip+0x30ce6]        # 0x140059020
   14002833a:	cmp    ecx,0xffffffff
   14002833d:	je     0x14002834b
   14002833f:	call   0x14002da8c
   140028344:	or     DWORD PTR [rip+0x30cd5],0xffffffff        # 0x140059020
   14002834b:	add    rsp,0x28
   14002834f:	jmp    0x14002db90
   140028354:	rex push rbx
   140028356:	sub    rsp,0x20
   14002835a:	mov    ebx,ecx
   14002835c:	lea    r8,[rsp+0x38]
   140028361:	lea    rdx,[rip+0x1e088]        # 0x1400463f0
   140028368:	xor    ecx,ecx
   14002836a:	call   QWORD PTR [rip+0x190c0]        # 0x140041430
   140028370:	test   eax,eax
   140028372:	je     0x14002838f
   140028374:	mov    rcx,QWORD PTR [rsp+0x38]
   140028379:	lea    rdx,[rip+0x19660]        # 0x1400419e0
   140028380:	call   QWORD PTR [rip+0x18f62]        # 0x1400412e8
   140028386:	test   rax,rax
   140028389:	je     0x14002838f
   14002838b:	mov    ecx,ebx
   14002838d:	call   rax
   14002838f:	add    rsp,0x20
   140028393:	pop    rbx
   140028394:	ret    
   140028395:	int3   
   140028396:	int3   
   140028397:	int3   
   140028398:	rex push rbx
   14002839a:	sub    rsp,0x20
   14002839e:	mov    ebx,ecx
   1400283a0:	call   0x140028354
   1400283a5:	mov    ecx,ebx
   1400283a7:	call   QWORD PTR [rip+0x1907b]        # 0x140041428
   1400283ad:	int3   
   1400283ae:	int3   
   1400283af:	int3   
   1400283b0:	rex push rbx
   1400283b2:	sub    rsp,0x20
   1400283b6:	mov    ebx,ecx
   1400283b8:	call   0x140028760
   1400283bd:	mov    ecx,ebx
   1400283bf:	call   0x1400287d4
   1400283c4:	xor    r8d,r8d
   1400283c7:	mov    ecx,0xff
   1400283cc:	lea    edx,[r8+0x1]
   1400283d0:	call   0x1400285bc
   1400283d5:	int3   
   1400283d6:	int3   
   1400283d7:	int3   
   1400283d8:	mov    edx,0x1
   1400283dd:	xor    ecx,ecx
   1400283df:	mov    r8d,edx
   1400283e2:	jmp    0x1400285bc
   1400283e7:	int3   
   1400283e8:	xor    edx,edx
   1400283ea:	xor    ecx,ecx
   1400283ec:	lea    r8d,[rdx+0x1]
   1400283f0:	jmp    0x1400285bc
   1400283f5:	int3   
   1400283f6:	int3   
   1400283f7:	int3   
   1400283f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400283fd:	push   rdi
   1400283fe:	sub    rsp,0x20
   140028402:	cmp    QWORD PTR [rip+0x229de],0x0        # 0x14004ade8
   14002840a:	mov    ebx,ecx
   14002840c:	je     0x140028426
   14002840e:	lea    rcx,[rip+0x229d3]        # 0x14004ade8
   140028415:	call   0x14002dda0
   14002841a:	test   eax,eax
   14002841c:	je     0x140028426
   14002841e:	mov    ecx,ebx
   140028420:	call   QWORD PTR [rip+0x229c2]        # 0x14004ade8
   140028426:	call   0x14002de20
   14002842b:	lea    rdx,[rip+0x1941e]        # 0x140041850
   140028432:	lea    rcx,[rip+0x193e7]        # 0x140041820
   140028439:	call   0x140028568
   14002843e:	test   eax,eax
   140028440:	jne    0x14002849c
   140028442:	lea    rcx,[rip+0xebb]        # 0x140029304
   140028449:	call   0x140026c04
   14002844e:	lea    rbx,[rip+0x19353]        # 0x1400417a8
   140028455:	lea    rdi,[rip+0x193bc]        # 0x140041818
   14002845c:	jmp    0x14002846c
   14002845e:	mov    rax,QWORD PTR [rbx]
   140028461:	test   rax,rax
   140028464:	je     0x140028468
   140028466:	call   rax
   140028468:	add    rbx,0x8
   14002846c:	cmp    rbx,rdi
   14002846f:	jb     0x14002845e
   140028471:	cmp    QWORD PTR [rip+0x366e7],0x0        # 0x14005eb60
   140028479:	je     0x14002849a
   14002847b:	lea    rcx,[rip+0x366de]        # 0x14005eb60
   140028482:	call   0x14002dda0
   140028487:	test   eax,eax
   140028489:	je     0x14002849a
   14002848b:	xor    r8d,r8d
   14002848e:	xor    ecx,ecx
   140028490:	lea    edx,[r8+0x2]
   140028494:	call   QWORD PTR [rip+0x366c6]        # 0x14005eb60
   14002849a:	xor    eax,eax
   14002849c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400284a1:	add    rsp,0x20
   1400284a5:	pop    rdi
   1400284a6:	ret    
   1400284a7:	int3   
   1400284a8:	xor    r8d,r8d
   1400284ab:	lea    edx,[r8+0x1]
   1400284af:	jmp    0x1400285bc
   1400284b4:	sub    rsp,0x28
   1400284b8:	test   rcx,rcx
   1400284bb:	jne    0x1400284d4
   1400284bd:	call   0x140029bf8
   1400284c2:	mov    DWORD PTR [rax],0x16
   1400284c8:	call   0x140029b2c
   1400284cd:	mov    eax,0x16
   1400284d2:	jmp    0x1400284e5
   1400284d4:	mov    rax,QWORD PTR [rip+0x3384d]        # 0x14005bd28
   1400284db:	test   rax,rax
   1400284de:	je     0x1400284bd
   1400284e0:	mov    QWORD PTR [rcx],rax
   1400284e3:	xor    eax,eax
   1400284e5:	add    rsp,0x28
   1400284e9:	ret    
   1400284ea:	int3   
   1400284eb:	int3   
   1400284ec:	rex push rbx
   1400284ee:	sub    rsp,0x20
   1400284f2:	xor    ecx,ecx
   1400284f4:	call   QWORD PTR [rip+0x18efe]        # 0x1400413f8
   1400284fa:	mov    rcx,rax
   1400284fd:	mov    rbx,rax
   140028500:	call   0x140029fe0
   140028505:	mov    rcx,rbx
   140028508:	call   0x140029abc
   14002850d:	mov    rcx,rbx
   140028510:	call   0x1400299c0
   140028515:	mov    rcx,rbx
   140028518:	call   0x14002de5c
   14002851d:	mov    rcx,rbx
   140028520:	call   0x14002de74
   140028525:	mov    rcx,rbx
   140028528:	add    rsp,0x20
   14002852c:	pop    rbx
   14002852d:	jmp    0x1400296e8
   140028532:	int3   
   140028533:	int3   
   140028534:	cmp    rcx,rdx
   140028537:	jae    0x140028566
   140028539:	mov    QWORD PTR [rsp+0x8],rbx
   14002853e:	push   rdi
   14002853f:	sub    rsp,0x20
   140028543:	mov    rdi,rdx
   140028546:	mov    rbx,rcx
   140028549:	mov    rax,QWORD PTR [rbx]
   14002854c:	test   rax,rax
   14002854f:	je     0x140028553
   140028551:	call   rax
   140028553:	add    rbx,0x8
   140028557:	cmp    rbx,rdi
   14002855a:	jb     0x140028549
   14002855c:	mov    rbx,QWORD PTR [rsp+0x30]
   140028561:	add    rsp,0x20
   140028565:	pop    rdi
   140028566:	ret    
   140028567:	int3   
   140028568:	mov    QWORD PTR [rsp+0x8],rbx
   14002856d:	push   rdi
   14002856e:	sub    rsp,0x20
   140028572:	xor    eax,eax
   140028574:	mov    rdi,rdx
   140028577:	mov    rbx,rcx
   14002857a:	cmp    rcx,rdx
   14002857d:	jae    0x140028596
   14002857f:	test   eax,eax
   140028581:	jne    0x140028596
   140028583:	mov    rcx,QWORD PTR [rbx]
   140028586:	test   rcx,rcx
   140028589:	je     0x14002858d
   14002858b:	call   rcx
   14002858d:	add    rbx,0x8
   140028591:	cmp    rbx,rdi
   140028594:	jb     0x14002857f
   140028596:	mov    rbx,QWORD PTR [rsp+0x30]
   14002859b:	add    rsp,0x20
   14002859f:	pop    rdi
   1400285a0:	ret    
   1400285a1:	int3   
   1400285a2:	int3   
   1400285a3:	int3   
   1400285a4:	mov    ecx,0x8
   1400285a9:	jmp    0x14002db4c
   1400285ae:	int3   
   1400285af:	int3   
   1400285b0:	mov    ecx,0x8
   1400285b5:	jmp    0x14002dd34
   1400285ba:	int3   
   1400285bb:	int3   
   1400285bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400285c1:	mov    QWORD PTR [rsp+0x10],rsi
   1400285c6:	mov    DWORD PTR [rsp+0x18],r8d
   1400285cb:	push   rdi
   1400285cc:	push   r12
   1400285ce:	push   r13
   1400285d0:	push   r14
   1400285d2:	push   r15
   1400285d4:	sub    rsp,0x40
   1400285d8:	mov    r14d,r8d
   1400285db:	mov    ebx,edx
   1400285dd:	mov    r13d,ecx
   1400285e0:	mov    ecx,0x8
   1400285e5:	call   0x14002db4c
   1400285ea:	nop
   1400285eb:	cmp    DWORD PTR [rip+0x33706],0x1        # 0x14005bcf8
   1400285f2:	je     0x1400286ff
   1400285f8:	mov    DWORD PTR [rip+0x33736],0x1        # 0x14005bd38
   140028602:	mov    BYTE PTR [rip+0x3372b],r14b        # 0x14005bd34
   140028609:	test   ebx,ebx
   14002860b:	jne    0x1400286eb
   140028611:	mov    rcx,QWORD PTR [rip+0x36558]        # 0x14005eb70
   140028618:	call   QWORD PTR [rip+0x18de2]        # 0x140041400
   14002861e:	mov    rsi,rax
   140028621:	mov    QWORD PTR [rsp+0x30],rax
   140028626:	test   rax,rax
   140028629:	je     0x1400286d8
   14002862f:	mov    rcx,QWORD PTR [rip+0x36532]        # 0x14005eb68
   140028636:	call   QWORD PTR [rip+0x18dc4]        # 0x140041400
   14002863c:	mov    rdi,rax
   14002863f:	mov    QWORD PTR [rsp+0x20],rax
   140028644:	mov    r12,rsi
   140028647:	mov    QWORD PTR [rsp+0x28],rsi
   14002864c:	mov    r15,rax
   14002864f:	mov    QWORD PTR [rsp+0x38],rax
   140028654:	sub    rdi,0x8
   140028658:	mov    QWORD PTR [rsp+0x20],rdi
   14002865d:	cmp    rdi,rsi
   140028660:	jb     0x1400286d8
   140028662:	xor    ecx,ecx
   140028664:	call   QWORD PTR [rip+0x18d8e]        # 0x1400413f8
   14002866a:	cmp    QWORD PTR [rdi],rax
   14002866d:	jne    0x140028671
   14002866f:	jmp    0x140028654
   140028671:	cmp    rdi,rsi
   140028674:	jb     0x1400286d8
   140028676:	mov    rcx,QWORD PTR [rdi]
   140028679:	call   QWORD PTR [rip+0x18d81]        # 0x140041400
   14002867f:	mov    rbx,rax
   140028682:	xor    ecx,ecx
   140028684:	call   QWORD PTR [rip+0x18d6e]        # 0x1400413f8
   14002868a:	mov    QWORD PTR [rdi],rax
   14002868d:	call   rbx
   14002868f:	mov    rcx,QWORD PTR [rip+0x364da]        # 0x14005eb70
   140028696:	call   QWORD PTR [rip+0x18d64]        # 0x140041400
   14002869c:	mov    rbx,rax
   14002869f:	mov    rcx,QWORD PTR [rip+0x364c2]        # 0x14005eb68
   1400286a6:	call   QWORD PTR [rip+0x18d54]        # 0x140041400
   1400286ac:	cmp    r12,rbx
   1400286af:	jne    0x1400286b6
   1400286b1:	cmp    r15,rax
   1400286b4:	je     0x14002866f
   1400286b6:	mov    r12,rbx
   1400286b9:	mov    QWORD PTR [rsp+0x28],rbx
   1400286be:	mov    rsi,rbx
   1400286c1:	mov    QWORD PTR [rsp+0x30],rbx
   1400286c6:	mov    r15,rax
   1400286c9:	mov    QWORD PTR [rsp+0x38],rax
   1400286ce:	mov    rdi,rax
   1400286d1:	mov    QWORD PTR [rsp+0x20],rax
   1400286d6:	jmp    0x14002866f
   1400286d8:	lea    rdx,[rip+0x19199]        # 0x140041878
   1400286df:	lea    rcx,[rip+0x19172]        # 0x140041858
   1400286e6:	call   0x140028534
   1400286eb:	lea    rdx,[rip+0x19196]        # 0x140041888
   1400286f2:	lea    rcx,[rip+0x19187]        # 0x140041880
   1400286f9:	call   0x140028534
   1400286fe:	nop
   1400286ff:	test   r14d,r14d
   140028702:	je     0x140028713
   140028704:	mov    ecx,0x8
   140028709:	call   0x14002dd34
   14002870e:	test   r14d,r14d
   140028711:	jne    0x140028739
   140028713:	mov    DWORD PTR [rip+0x335db],0x1        # 0x14005bcf8
   14002871d:	mov    ecx,0x8
   140028722:	call   0x14002dd34
   140028727:	mov    ecx,r13d
   14002872a:	call   0x140028354
   14002872f:	mov    ecx,r13d
   140028732:	call   QWORD PTR [rip+0x18cf0]        # 0x140041428
   140028738:	int3   
   140028739:	mov    rbx,QWORD PTR [rsp+0x70]
   14002873e:	mov    rsi,QWORD PTR [rsp+0x78]
   140028743:	add    rsp,0x40
   140028747:	pop    r15
   140028749:	pop    r14
   14002874b:	pop    r13
   14002874d:	pop    r12
   14002874f:	pop    rdi
   140028750:	ret    
   140028751:	int3   
   140028752:	int3   
   140028753:	int3   
   140028754:	xor    r8d,r8d
   140028757:	xor    edx,edx
   140028759:	jmp    0x1400285bc
   14002875e:	int3   
   14002875f:	int3   
   140028760:	sub    rsp,0x28
   140028764:	mov    ecx,0x3
   140028769:	call   0x1400291d4
   14002876e:	cmp    eax,0x1
   140028771:	je     0x14002878a
   140028773:	mov    ecx,0x3
   140028778:	call   0x1400291d4
   14002877d:	test   eax,eax
   14002877f:	jne    0x14002879e
   140028781:	cmp    DWORD PTR [rip+0x335c8],0x1        # 0x14005bd50
   140028788:	jne    0x14002879e
   14002878a:	mov    ecx,0xfc
   14002878f:	call   0x1400287d4
   140028794:	mov    ecx,0xff
   140028799:	call   0x1400287d4
   14002879e:	add    rsp,0x28
   1400287a2:	ret    
   1400287a3:	int3   
   1400287a4:	lea    r9,[rip+0x19245]        # 0x1400419f0
   1400287ab:	xor    edx,edx
   1400287ad:	mov    r8,r9
   1400287b0:	cmp    ecx,DWORD PTR [r8]
   1400287b3:	je     0x1400287c7
   1400287b5:	inc    edx
   1400287b7:	add    r8,0x10
   1400287bb:	movsxd rax,edx
   1400287be:	cmp    rax,0x17
   1400287c2:	jb     0x1400287b0
   1400287c4:	xor    eax,eax
   1400287c6:	ret    
   1400287c7:	movsxd rax,edx
   1400287ca:	add    rax,rax
   1400287cd:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   1400287d2:	ret    
   1400287d3:	int3   
   1400287d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400287d9:	mov    QWORD PTR [rsp+0x18],rbp
   1400287de:	mov    QWORD PTR [rsp+0x20],rsi
   1400287e3:	push   rdi
   1400287e4:	push   r14
   1400287e6:	push   r15
   1400287e8:	sub    rsp,0x250
   1400287ef:	mov    rax,QWORD PTR [rip+0x30892]        # 0x140059088
   1400287f6:	xor    rax,rsp
   1400287f9:	mov    QWORD PTR [rsp+0x240],rax
   140028801:	mov    edi,ecx
   140028803:	call   0x1400287a4
   140028808:	xor    esi,esi
   14002880a:	mov    rbx,rax
   14002880d:	test   rax,rax
   140028810:	je     0x1400289af
   140028816:	lea    ecx,[rsi+0x3]
   140028819:	call   0x1400291d4
   14002881e:	cmp    eax,0x1
   140028821:	je     0x140028944
   140028827:	lea    ecx,[rsi+0x3]
   14002882a:	call   0x1400291d4
   14002882f:	test   eax,eax
   140028831:	jne    0x140028840
   140028833:	cmp    DWORD PTR [rip+0x33516],0x1        # 0x14005bd50
   14002883a:	je     0x140028944
   140028840:	cmp    edi,0xfc
   140028846:	je     0x1400289af
   14002884c:	lea    rbp,[rip+0x3350d]        # 0x14005bd60
   140028853:	mov    r15d,0x314
   140028859:	lea    r8,[rip+0x19c30]        # 0x140042490
   140028860:	mov    rcx,rbp
   140028863:	mov    edx,r15d
   140028866:	call   0x14002cac8
   14002886b:	xor    ecx,ecx
   14002886d:	test   eax,eax
   14002886f:	jne    0x140028a30
   140028875:	lea    r14,[rip+0x33516]        # 0x14005bd92
   14002887c:	mov    r8d,0x104
   140028882:	mov    WORD PTR [rip+0x33711],si        # 0x14005bf9a
   140028889:	mov    rdx,r14
   14002888c:	call   QWORD PTR [rip+0x18aa6]        # 0x140041338
   140028892:	lea    edi,[r15-0x19]
   140028896:	test   eax,eax
   140028898:	jne    0x1400288b3
   14002889a:	lea    r8,[rip+0x19c27]        # 0x1400424c8
   1400288a1:	mov    edx,edi
   1400288a3:	mov    rcx,r14
   1400288a6:	call   0x14002cac8
   1400288ab:	test   eax,eax
   1400288ad:	jne    0x1400289dc
   1400288b3:	mov    rcx,r14
   1400288b6:	call   0x14002cb34
   1400288bb:	inc    rax
   1400288be:	cmp    rax,0x3c
   1400288c2:	jbe    0x1400288fd
   1400288c4:	mov    rcx,r14
   1400288c7:	call   0x14002cb34
   1400288cc:	lea    rcx,[rbp-0x44]
   1400288d0:	lea    r8,[rip+0x19c21]        # 0x1400424f8
   1400288d7:	lea    rcx,[rcx+rax*2]
   1400288db:	mov    r9d,0x3
   1400288e1:	mov    rax,rcx
   1400288e4:	sub    rax,r14
   1400288e7:	sar    rax,1
   1400288ea:	sub    rdi,rax
   1400288ed:	mov    rdx,rdi
   1400288f0:	call   0x14002e200
   1400288f5:	test   eax,eax
   1400288f7:	jne    0x1400289f1
   1400288fd:	lea    r8,[rip+0x19bfc]        # 0x140042500
   140028904:	mov    rdx,r15
   140028907:	mov    rcx,rbp
   14002890a:	call   0x14002e178
   14002890f:	test   eax,eax
   140028911:	jne    0x140028a1b
   140028917:	mov    r8,rbx
   14002891a:	mov    rdx,r15
   14002891d:	mov    rcx,rbp
   140028920:	call   0x14002e178
   140028925:	test   eax,eax
   140028927:	jne    0x140028a06
   14002892d:	lea    rdx,[rip+0x19bdc]        # 0x140042510
   140028934:	mov    r8d,0x12010
   14002893a:	mov    rcx,rbp
   14002893d:	call   0x14002e2cc
   140028942:	jmp    0x1400289af
   140028944:	mov    ecx,0xfffffff4
   140028949:	call   QWORD PTR [rip+0x18ae9]        # 0x140041438
   14002894f:	mov    rdi,rax
   140028952:	lea    rcx,[rax-0x1]
   140028956:	cmp    rcx,0xfffffffffffffffd
   14002895a:	ja     0x1400289af
   14002895c:	mov    r8d,esi
   14002895f:	lea    rdx,[rsp+0x40]
   140028964:	mov    cl,BYTE PTR [rbx]
   140028966:	mov    BYTE PTR [rdx],cl
   140028968:	cmp    WORD PTR [rbx],si
   14002896b:	je     0x140028982
   14002896d:	inc    r8d
   140028970:	inc    rdx
   140028973:	add    rbx,0x2
   140028977:	movsxd rax,r8d
   14002897a:	cmp    rax,0x1f4
   140028980:	jb     0x140028964
   140028982:	lea    rcx,[rsp+0x40]
   140028987:	mov    BYTE PTR [rsp+0x233],sil
   14002898f:	call   0x14002e0d0
   140028994:	lea    r9,[rsp+0x30]
   140028999:	lea    rdx,[rsp+0x40]
   14002899e:	mov    rcx,rdi
   1400289a1:	mov    r8,rax
   1400289a4:	mov    QWORD PTR [rsp+0x20],rsi
   1400289a9:	call   QWORD PTR [rip+0x18a91]        # 0x140041440
   1400289af:	mov    rcx,QWORD PTR [rsp+0x240]
   1400289b7:	xor    rcx,rsp
   1400289ba:	call   0x1400265a0
   1400289bf:	lea    r11,[rsp+0x250]
   1400289c7:	mov    rbx,QWORD PTR [r11+0x28]
   1400289cb:	mov    rbp,QWORD PTR [r11+0x30]
   1400289cf:	mov    rsi,QWORD PTR [r11+0x38]
   1400289d3:	mov    rsp,r11
   1400289d6:	pop    r15
   1400289d8:	pop    r14
   1400289da:	pop    rdi
   1400289db:	ret    
   1400289dc:	xor    r9d,r9d
   1400289df:	xor    r8d,r8d
   1400289e2:	xor    edx,edx
   1400289e4:	xor    ecx,ecx
   1400289e6:	mov    QWORD PTR [rsp+0x20],rsi
   1400289eb:	call   0x140029b4c
   1400289f0:	int3   
   1400289f1:	xor    r9d,r9d
   1400289f4:	xor    r8d,r8d
   1400289f7:	xor    edx,edx
   1400289f9:	xor    ecx,ecx
   1400289fb:	mov    QWORD PTR [rsp+0x20],rsi
   140028a00:	call   0x140029b4c
   140028a05:	int3   
   140028a06:	xor    r9d,r9d
   140028a09:	xor    r8d,r8d
   140028a0c:	xor    edx,edx
   140028a0e:	xor    ecx,ecx
   140028a10:	mov    QWORD PTR [rsp+0x20],rsi
   140028a15:	call   0x140029b4c
   140028a1a:	int3   
   140028a1b:	xor    r9d,r9d
   140028a1e:	xor    r8d,r8d
   140028a21:	xor    edx,edx
   140028a23:	xor    ecx,ecx
   140028a25:	mov    QWORD PTR [rsp+0x20],rsi
   140028a2a:	call   0x140029b4c
   140028a2f:	int3   
   140028a30:	xor    r9d,r9d
   140028a33:	xor    r8d,r8d
   140028a36:	xor    edx,edx
   140028a38:	mov    QWORD PTR [rsp+0x20],rsi
   140028a3d:	call   0x140029b4c
   140028a42:	int3   
   140028a43:	int3   
   140028a44:	sub    rsp,0x28
   140028a48:	call   QWORD PTR [rip+0x189fa]        # 0x140041448
   140028a4e:	xor    ecx,ecx
   140028a50:	test   rax,rax
   140028a53:	mov    QWORD PTR [rip+0x3392e],rax        # 0x14005c388
   140028a5a:	setne  cl
   140028a5d:	mov    eax,ecx
   140028a5f:	add    rsp,0x28
   140028a63:	ret    
   140028a64:	sub    rsp,0x28
   140028a68:	lea    rdx,[rip+0x49]        # 0x140028ab8
   140028a6f:	lea    rcx,[rip+0x3391a]        # 0x14005c390
   140028a76:	xor    r9d,r9d
   140028a79:	xor    r8d,r8d
   140028a7c:	call   QWORD PTR [rip+0x189e6]        # 0x140041468
   140028a82:	neg    eax
   140028a84:	sbb    eax,eax
   140028a86:	neg    eax
   140028a88:	dec    eax
   140028a8a:	add    rsp,0x28
   140028a8e:	ret    
   140028a8f:	int3   
   140028a90:	sub    rsp,0x28
   140028a94:	lea    rcx,[rip+0x35ec5]        # 0x14005e960
   140028a9b:	xor    edx,edx
   140028a9d:	mov    r8d,0x200
   140028aa3:	call   0x14002bb90
   140028aa8:	mov    DWORD PTR [rip+0x35e8e],0x3        # 0x14005e940
   140028ab2:	add    rsp,0x28
   140028ab6:	ret    
   140028ab7:	int3   
   140028ab8:	mov    rax,rsp
   140028abb:	mov    QWORD PTR [rax+0x8],rbx
   140028abf:	mov    QWORD PTR [rax+0x10],rsi
   140028ac3:	mov    QWORD PTR [rax+0x18],rdi
   140028ac7:	mov    QWORD PTR [rax+0x20],r12
   140028acb:	push   r13
   140028acd:	push   r14
   140028acf:	push   r15
   140028ad1:	sub    rsp,0xc0
   140028ad8:	mov    QWORD PTR [rsp+0x38],rsp
   140028add:	mov    ecx,0xb
   140028ae2:	call   0x14002db4c
   140028ae7:	nop
   140028ae8:	xor    r12d,r12d
   140028aeb:	cmp    QWORD PTR [rip+0x35e6e],r12        # 0x14005e960
   140028af2:	je     0x140028b0f
   140028af4:	lea    rdx,[rip+0xa]        # 0x140028b05
   140028afb:	mov    rcx,rsp
   140028afe:	call   0x14002e5d0
   140028b03:	nop
   140028b04:	nop
   140028b05:	mov    eax,0x1
   140028b0a:	jmp    0x140028dea
   140028b0f:	mov    edi,0x58
   140028b14:	mov    edx,edi
   140028b16:	lea    r13d,[rdi-0x38]
   140028b1a:	mov    ecx,r13d
   140028b1d:	call   0x140029744
   140028b22:	mov    rcx,rax
   140028b25:	mov    QWORD PTR [rsp+0x28],rax
   140028b2a:	test   rax,rax
   140028b2d:	jne    0x140028b49
   140028b2f:	lea    rdx,[rip+0xc]        # 0x140028b42
   140028b36:	mov    rcx,QWORD PTR [rsp+0x38]
   140028b3b:	call   0x14002e5d0
   140028b40:	nop
   140028b41:	nop
   140028b42:	xor    eax,eax
   140028b44:	jmp    0x140028dea
   140028b49:	mov    QWORD PTR [rip+0x35e10],rax        # 0x14005e960
   140028b50:	mov    DWORD PTR [rip+0x35de9],r13d        # 0x14005e940
   140028b57:	add    rax,0xb00
   140028b5d:	cmp    rcx,rax
   140028b60:	jae    0x140028b9b
   140028b62:	mov    WORD PTR [rcx+0x8],0xa00
   140028b68:	or     QWORD PTR [rcx],0xffffffffffffffff
   140028b6c:	mov    DWORD PTR [rcx+0xc],r12d
   140028b70:	and    BYTE PTR [rcx+0x38],0x80
   140028b74:	mov    al,BYTE PTR [rcx+0x38]
   140028b77:	and    al,0x7f
   140028b79:	mov    BYTE PTR [rcx+0x38],al
   140028b7c:	mov    WORD PTR [rcx+0x39],0xa0a
   140028b82:	mov    DWORD PTR [rcx+0x50],r12d
   140028b86:	mov    BYTE PTR [rcx+0x4c],r12b
   140028b8a:	add    rcx,rdi
   140028b8d:	mov    QWORD PTR [rsp+0x28],rcx
   140028b92:	mov    rax,QWORD PTR [rip+0x35dc7]        # 0x14005e960
   140028b99:	jmp    0x140028b57
   140028b9b:	lea    rcx,[rsp+0x50]
   140028ba0:	call   QWORD PTR [rip+0x188ca]        # 0x140041470
   140028ba6:	cmp    WORD PTR [rsp+0x92],r12w
   140028baf:	je     0x140028cf5
   140028bb5:	mov    rax,QWORD PTR [rsp+0x98]
   140028bbd:	test   rax,rax
   140028bc0:	je     0x140028cf5
   140028bc6:	lea    r14,[rax+0x4]
   140028bca:	mov    QWORD PTR [rsp+0x48],r14
   140028bcf:	movsxd rsi,DWORD PTR [rax]
   140028bd2:	add    rsi,r14
   140028bd5:	mov    QWORD PTR [rsp+0x40],rsi
   140028bda:	mov    r15d,0x800
   140028be0:	cmp    DWORD PTR [rax],r15d
   140028be3:	cmovl  r15d,DWORD PTR [rax]
   140028be7:	mov    ebx,0x1
   140028bec:	mov    DWORD PTR [rsp+0x30],ebx
   140028bf0:	cmp    DWORD PTR [rip+0x35d49],r15d        # 0x14005e940
   140028bf7:	jge    0x140028c6c
   140028bf9:	mov    rdx,rdi
   140028bfc:	mov    rcx,r13
   140028bff:	call   0x140029744
   140028c04:	mov    rcx,rax
   140028c07:	mov    QWORD PTR [rsp+0x28],rax
   140028c0c:	test   rax,rax
   140028c0f:	jne    0x140028c1a
   140028c11:	mov    r15d,DWORD PTR [rip+0x35d28]        # 0x14005e940
   140028c18:	jmp    0x140028c6c
   140028c1a:	movsxd rdx,ebx
   140028c1d:	lea    r8,[rip+0x35d3c]        # 0x14005e960
   140028c24:	mov    QWORD PTR [r8+rdx*8],rax
   140028c28:	add    DWORD PTR [rip+0x35d11],r13d        # 0x14005e940
   140028c2f:	mov    rax,QWORD PTR [r8+rdx*8]
   140028c33:	add    rax,0xb00
   140028c39:	cmp    rcx,rax
   140028c3c:	jae    0x140028c68
   140028c3e:	mov    WORD PTR [rcx+0x8],0xa00
   140028c44:	or     QWORD PTR [rcx],0xffffffffffffffff
   140028c48:	mov    DWORD PTR [rcx+0xc],r12d
   140028c4c:	and    BYTE PTR [rcx+0x38],0x80
   140028c50:	mov    WORD PTR [rcx+0x39],0xa0a
   140028c56:	mov    DWORD PTR [rcx+0x50],r12d
   140028c5a:	mov    BYTE PTR [rcx+0x4c],r12b
   140028c5e:	add    rcx,rdi
   140028c61:	mov    QWORD PTR [rsp+0x28],rcx
   140028c66:	jmp    0x140028c2f
   140028c68:	inc    ebx
   140028c6a:	jmp    0x140028bec
   140028c6c:	mov    edi,r12d
   140028c6f:	mov    DWORD PTR [rsp+0x20],r12d
   140028c74:	lea    r13,[rip+0x35ce5]        # 0x14005e960
   140028c7b:	cmp    edi,r15d
   140028c7e:	jge    0x140028cf5
   140028c80:	mov    rcx,QWORD PTR [rsi]
   140028c83:	lea    rax,[rcx+0x2]
   140028c87:	cmp    rax,0x1
   140028c8b:	jbe    0x140028cdc
   140028c8d:	test   BYTE PTR [r14],0x1
   140028c91:	je     0x140028cdc
   140028c93:	test   BYTE PTR [r14],0x8
   140028c97:	jne    0x140028ca3
   140028c99:	call   QWORD PTR [rip+0x187b1]        # 0x140041450
   140028c9f:	test   eax,eax
   140028ca1:	je     0x140028cdc
   140028ca3:	movsxd rbx,edi
   140028ca6:	mov    rax,rbx
   140028ca9:	sar    rax,0x5
   140028cad:	and    ebx,0x1f
   140028cb0:	imul   rbx,rbx,0x58
   140028cb4:	add    rbx,QWORD PTR [r13+rax*8+0x0]
   140028cb9:	mov    QWORD PTR [rsp+0x28],rbx
   140028cbe:	mov    rax,QWORD PTR [rsi]
   140028cc1:	mov    QWORD PTR [rbx],rax
   140028cc4:	mov    al,BYTE PTR [r14]
   140028cc7:	mov    BYTE PTR [rbx+0x8],al
   140028cca:	lea    rcx,[rbx+0x10]
   140028cce:	mov    edx,0xfa0
   140028cd3:	call   QWORD PTR [rip+0x1877f]        # 0x140041458
   140028cd9:	inc    DWORD PTR [rbx+0xc]
   140028cdc:	inc    edi
   140028cde:	mov    DWORD PTR [rsp+0x20],edi
   140028ce2:	inc    r14
   140028ce5:	mov    QWORD PTR [rsp+0x48],r14
   140028cea:	add    rsi,0x8
   140028cee:	mov    QWORD PTR [rsp+0x40],rsi
   140028cf3:	jmp    0x140028c7b
   140028cf5:	mov    edi,r12d
   140028cf8:	mov    DWORD PTR [rsp+0x20],r12d
   140028cfd:	mov    r15,0xfffffffffffffffe
   140028d04:	cmp    edi,0x3
   140028d07:	jge    0x140028ddb
   140028d0d:	movsxd r14,edi
   140028d10:	mov    rbx,r14
   140028d13:	imul   rbx,rbx,0x58
   140028d17:	add    rbx,QWORD PTR [rip+0x35c42]        # 0x14005e960
   140028d1e:	mov    QWORD PTR [rsp+0x28],rbx
   140028d23:	mov    rax,QWORD PTR [rbx]
   140028d26:	add    rax,0x2
   140028d2a:	cmp    rax,0x1
   140028d2e:	jbe    0x140028d40
   140028d30:	movsx  eax,BYTE PTR [rbx+0x8]
   140028d34:	bts    eax,0x7
   140028d38:	mov    BYTE PTR [rbx+0x8],al
   140028d3b:	jmp    0x140028dd0
   140028d40:	mov    BYTE PTR [rbx+0x8],0x81
   140028d44:	lea    eax,[rdi-0x1]
   140028d47:	neg    eax
   140028d49:	sbb    ecx,ecx
   140028d4b:	add    ecx,0xfffffff5
   140028d4e:	mov    eax,0xfffffff6
   140028d53:	test   edi,edi
   140028d55:	cmove  ecx,eax
   140028d58:	call   QWORD PTR [rip+0x186da]        # 0x140041438
   140028d5e:	mov    rsi,rax
   140028d61:	lea    rcx,[rax+0x1]
   140028d65:	cmp    rcx,0x1
   140028d69:	jbe    0x140028daf
   140028d6b:	mov    rcx,rax
   140028d6e:	call   QWORD PTR [rip+0x186dc]        # 0x140041450
   140028d74:	test   eax,eax
   140028d76:	je     0x140028daf
   140028d78:	mov    QWORD PTR [rbx],rsi
   140028d7b:	movzx  eax,al
   140028d7e:	cmp    eax,0x2
   140028d81:	jne    0x140028d8c
   140028d83:	movsx  eax,BYTE PTR [rbx+0x8]
   140028d87:	or     eax,0x40
   140028d8a:	jmp    0x140028d98
   140028d8c:	cmp    eax,0x3
   140028d8f:	jne    0x140028d9b
   140028d91:	movsx  eax,BYTE PTR [rbx+0x8]
   140028d95:	or     eax,0x8
   140028d98:	mov    BYTE PTR [rbx+0x8],al
   140028d9b:	lea    rcx,[rbx+0x10]
   140028d9f:	mov    edx,0xfa0
   140028da4:	call   QWORD PTR [rip+0x186ae]        # 0x140041458
   140028daa:	inc    DWORD PTR [rbx+0xc]
   140028dad:	jmp    0x140028dd0
   140028daf:	movsx  eax,BYTE PTR [rbx+0x8]
   140028db3:	or     eax,0x40
   140028db6:	mov    BYTE PTR [rbx+0x8],al
   140028db9:	mov    QWORD PTR [rbx],r15
   140028dbc:	mov    rax,QWORD PTR [rip+0x34b65]        # 0x14005d928
   140028dc3:	test   rax,rax
   140028dc6:	je     0x140028dd0
   140028dc8:	mov    rax,QWORD PTR [rax+r14*8]
   140028dcc:	mov    DWORD PTR [rax+0x1c],r15d
   140028dd0:	inc    edi
   140028dd2:	mov    DWORD PTR [rsp+0x20],edi
   140028dd6:	jmp    0x140028d04
   140028ddb:	mov    ecx,0xb
   140028de0:	call   0x14002dd34
   140028de5:	mov    eax,0x1
   140028dea:	lea    r11,[rsp+0xc0]
   140028df2:	mov    rbx,QWORD PTR [r11+0x20]
   140028df6:	mov    rsi,QWORD PTR [r11+0x28]
   140028dfa:	mov    rdi,QWORD PTR [r11+0x30]
   140028dfe:	mov    r12,QWORD PTR [r11+0x38]
   140028e02:	mov    rsp,r11
   140028e05:	pop    r15
   140028e07:	pop    r14
   140028e09:	pop    r13
   140028e0b:	ret    
   140028e0c:	mov    QWORD PTR [rsp+0x18],rbx
   140028e11:	push   rbp
   140028e12:	push   rsi
   140028e13:	push   rdi
   140028e14:	sub    rsp,0x30
   140028e18:	lea    rdi,[rip+0x33581]        # 0x14005c3a0
   140028e1f:	xor    ebp,ebp
   140028e21:	mov    r8d,0x104
   140028e27:	mov    rdx,rdi
   140028e2a:	xor    ecx,ecx
   140028e2c:	mov    WORD PTR [rip+0x33775],bp        # 0x14005c5a8
   140028e33:	call   QWORD PTR [rip+0x184ff]        # 0x140041338
   140028e39:	mov    rbx,QWORD PTR [rip+0x35d40]        # 0x14005eb80
   140028e40:	mov    QWORD PTR [rip+0x32ee1],rdi        # 0x14005bd28
   140028e47:	test   rbx,rbx
   140028e4a:	je     0x140028e51
   140028e4c:	cmp    WORD PTR [rbx],bp
   140028e4f:	jne    0x140028e54
   140028e51:	mov    rbx,rdi
   140028e54:	lea    rax,[rsp+0x58]
   140028e59:	lea    r9,[rsp+0x50]
   140028e5e:	xor    r8d,r8d
   140028e61:	xor    edx,edx
   140028e63:	mov    rcx,rbx
   140028e66:	mov    QWORD PTR [rsp+0x20],rax
   140028e6b:	call   0x140028efc
   140028e70:	movsxd rsi,DWORD PTR [rsp+0x50]
   140028e75:	movabs rax,0x1fffffffffffffff
   140028e7f:	cmp    rsi,rax
   140028e82:	jae    0x140028ee9
   140028e84:	movsxd rax,DWORD PTR [rsp+0x58]
   140028e89:	movabs rcx,0x7fffffffffffffff
   140028e93:	cmp    rax,rcx
   140028e96:	jae    0x140028ee9
   140028e98:	lea    rcx,[rax+rsi*4]
   140028e9c:	add    rax,rax
   140028e9f:	add    rcx,rcx
   140028ea2:	cmp    rcx,rax
   140028ea5:	jb     0x140028ee9
   140028ea7:	call   0x1400297c4
   140028eac:	mov    rdi,rax
   140028eaf:	test   rax,rax
   140028eb2:	je     0x140028ee9
   140028eb4:	lea    r8,[rax+rsi*8]
   140028eb8:	lea    rax,[rsp+0x58]
   140028ebd:	lea    r9,[rsp+0x50]
   140028ec2:	mov    rdx,rdi
   140028ec5:	mov    rcx,rbx
   140028ec8:	mov    QWORD PTR [rsp+0x20],rax
   140028ecd:	call   0x140028efc
   140028ed2:	mov    eax,DWORD PTR [rsp+0x50]
   140028ed6:	mov    QWORD PTR [rip+0x32e2b],rdi        # 0x14005bd08
   140028edd:	dec    eax
   140028edf:	mov    DWORD PTR [rip+0x32e17],eax        # 0x14005bcfc
   140028ee5:	xor    eax,eax
   140028ee7:	jmp    0x140028eec
   140028ee9:	or     eax,0xffffffff
   140028eec:	mov    rbx,QWORD PTR [rsp+0x60]
   140028ef1:	add    rsp,0x30
   140028ef5:	pop    rdi
   140028ef6:	pop    rsi
   140028ef7:	pop    rbp
   140028ef8:	ret    
   140028ef9:	int3   
   140028efa:	int3   
   140028efb:	int3   
   140028efc:	mov    rax,rsp
   140028eff:	mov    QWORD PTR [rax+0x8],rbx
   140028f03:	mov    QWORD PTR [rax+0x10],rsi
   140028f07:	mov    QWORD PTR [rax+0x18],rdi
   140028f0b:	mov    QWORD PTR [rax+0x20],r12
   140028f0f:	push   r15
   140028f11:	mov    r11,QWORD PTR [rsp+0x30]
   140028f16:	xor    esi,esi
   140028f18:	mov    rbx,r9
   140028f1b:	mov    DWORD PTR [r11],esi
   140028f1e:	mov    r10,rdx
   140028f21:	mov    DWORD PTR [r9],0x1
   140028f28:	test   rdx,rdx
   140028f2b:	je     0x140028f34
   140028f2d:	mov    QWORD PTR [rdx],r8
   140028f30:	add    r10,0x8
   140028f34:	mov    edx,esi
   140028f36:	mov    r12d,0x22
   140028f3c:	cmp    WORD PTR [rcx],r12w
   140028f40:	jne    0x140028f55
   140028f42:	test   edx,edx
   140028f44:	mov    eax,esi
   140028f46:	sete   al
   140028f49:	add    rcx,0x2
   140028f4d:	mov    edx,eax
   140028f4f:	movzx  eax,r12w
   140028f53:	jmp    0x140028f74
   140028f55:	inc    DWORD PTR [r11]
   140028f58:	test   r8,r8
   140028f5b:	je     0x140028f68
   140028f5d:	movzx  eax,WORD PTR [rcx]
   140028f60:	mov    WORD PTR [r8],ax
   140028f64:	add    r8,0x2
   140028f68:	movzx  eax,WORD PTR [rcx]
   140028f6b:	add    rcx,0x2
   140028f6f:	test   ax,ax
   140028f72:	je     0x140028f90
   140028f74:	test   edx,edx
   140028f76:	jne    0x140028f3c
   140028f78:	cmp    ax,0x20
   140028f7c:	je     0x140028f84
   140028f7e:	cmp    ax,0x9
   140028f82:	jne    0x140028f3c
   140028f84:	test   r8,r8
   140028f87:	je     0x140028f94
   140028f89:	mov    WORD PTR [r8-0x2],si
   140028f8e:	jmp    0x140028f94
   140028f90:	sub    rcx,0x2
   140028f94:	mov    edi,esi
   140028f96:	mov    r15d,0x5c
   140028f9c:	cmp    WORD PTR [rcx],si
   140028f9f:	je     0x140029073
   140028fa5:	cmp    WORD PTR [rcx],0x20
   140028fa9:	je     0x140028fb1
   140028fab:	cmp    WORD PTR [rcx],0x9
   140028faf:	jne    0x140028fb7
   140028fb1:	add    rcx,0x2
   140028fb5:	jmp    0x140028fa5
   140028fb7:	cmp    WORD PTR [rcx],si
   140028fba:	je     0x140029073
   140028fc0:	test   r10,r10
   140028fc3:	je     0x140028fcc
   140028fc5:	mov    QWORD PTR [r10],r8
   140028fc8:	add    r10,0x8
   140028fcc:	inc    DWORD PTR [rbx]
   140028fce:	mov    r9d,0x1
   140028fd4:	mov    edx,esi
   140028fd6:	jmp    0x140028fde
   140028fd8:	add    rcx,0x2
   140028fdc:	inc    edx
   140028fde:	cmp    WORD PTR [rcx],r15w
   140028fe2:	je     0x140028fd8
   140028fe4:	cmp    WORD PTR [rcx],r12w
   140028fe8:	jne    0x140029024
   140028fea:	test   r9b,dl
   140028fed:	jne    0x14002900e
   140028fef:	test   edi,edi
   140028ff1:	je     0x140029002
   140028ff3:	lea    rax,[rcx+0x2]
   140028ff7:	cmp    WORD PTR [rax],r12w
   140028ffb:	jne    0x140029002
   140028ffd:	mov    rcx,rax
   140029000:	jmp    0x14002900e
   140029002:	test   edi,edi
   140029004:	mov    eax,esi
   140029006:	mov    r9d,esi
   140029009:	sete   al
   14002900c:	mov    edi,eax
   14002900e:	shr    edx,1
   140029010:	jmp    0x140029024
   140029012:	dec    edx
   140029014:	test   r8,r8
   140029017:	je     0x140029021
   140029019:	mov    WORD PTR [r8],r15w
   14002901d:	add    r8,0x2
   140029021:	inc    DWORD PTR [r11]
   140029024:	test   edx,edx
   140029026:	jne    0x140029012
   140029028:	movzx  eax,WORD PTR [rcx]
   14002902b:	test   ax,ax
   14002902e:	je     0x14002905e
   140029030:	test   edi,edi
   140029032:	jne    0x140029040
   140029034:	cmp    ax,0x20
   140029038:	je     0x14002905e
   14002903a:	cmp    ax,0x9
   14002903e:	je     0x14002905e
   140029040:	test   r9d,r9d
   140029043:	je     0x140029055
   140029045:	test   r8,r8
   140029048:	je     0x140029052
   14002904a:	mov    WORD PTR [r8],ax
   14002904e:	add    r8,0x2
   140029052:	inc    DWORD PTR [r11]
   140029055:	add    rcx,0x2
   140029059:	jmp    0x140028fce
   14002905e:	test   r8,r8
   140029061:	je     0x14002906b
   140029063:	mov    WORD PTR [r8],si
   140029067:	add    r8,0x2
   14002906b:	inc    DWORD PTR [r11]
   14002906e:	jmp    0x140028f9c
   140029073:	test   r10,r10
   140029076:	je     0x14002907b
   140029078:	mov    QWORD PTR [r10],rsi
   14002907b:	inc    DWORD PTR [rbx]
   14002907d:	mov    rsi,QWORD PTR [rsp+0x18]
   140029082:	mov    rdi,QWORD PTR [rsp+0x20]
   140029087:	mov    rbx,QWORD PTR [rsp+0x10]
   14002908c:	mov    r12,QWORD PTR [rsp+0x28]
   140029091:	pop    r15
   140029093:	ret    
   140029094:	mov    rax,rsp
   140029097:	mov    QWORD PTR [rax+0x8],rbx
   14002909b:	mov    QWORD PTR [rax+0x10],rbp
   14002909f:	mov    QWORD PTR [rax+0x18],rsi
   1400290a3:	mov    QWORD PTR [rax+0x20],rdi
   1400290a7:	push   r14
   1400290a9:	sub    rsp,0x30
   1400290ad:	mov    rbx,QWORD PTR [rip+0x326b4]        # 0x14005b768
   1400290b4:	xor    r14d,r14d
   1400290b7:	mov    edi,r14d
   1400290ba:	test   rbx,rbx
   1400290bd:	jne    0x1400290df
   1400290bf:	or     eax,0xffffffff
   1400290c2:	jmp    0x140029184
   1400290c7:	cmp    ax,0x3d
   1400290cb:	je     0x1400290cf
   1400290cd:	inc    edi
   1400290cf:	mov    rcx,rbx
   1400290d2:	call   0x14002cb34
   1400290d7:	lea    rbx,[rbx+rax*2]
   1400290db:	add    rbx,0x2
   1400290df:	movzx  eax,WORD PTR [rbx]
   1400290e2:	test   ax,ax
   1400290e5:	jne    0x1400290c7
   1400290e7:	lea    eax,[rdi+0x1]
   1400290ea:	mov    edx,0x8
   1400290ef:	movsxd rcx,eax
   1400290f2:	call   0x140029744
   1400290f7:	mov    rdi,rax
   1400290fa:	mov    QWORD PTR [rip+0x32c17],rax        # 0x14005bd18
   140029101:	test   rax,rax
   140029104:	je     0x1400290bf
   140029106:	mov    rbx,QWORD PTR [rip+0x3265b]        # 0x14005b768
   14002910d:	cmp    WORD PTR [rbx],r14w
   140029111:	je     0x140029166
   140029113:	mov    rcx,rbx
   140029116:	call   0x14002cb34
   14002911b:	cmp    WORD PTR [rbx],0x3d
   14002911f:	lea    esi,[rax+0x1]
   140029122:	je     0x140029152
   140029124:	movsxd rbp,esi
   140029127:	mov    edx,0x2
   14002912c:	mov    rcx,rbp
   14002912f:	call   0x140029744
   140029134:	mov    QWORD PTR [rdi],rax
   140029137:	test   rax,rax
   14002913a:	je     0x14002919f
   14002913c:	mov    r8,rbx
   14002913f:	mov    rdx,rbp
   140029142:	mov    rcx,rax
   140029145:	call   0x14002cac8
   14002914a:	test   eax,eax
   14002914c:	jne    0x1400291b7
   14002914e:	add    rdi,0x8
   140029152:	movsxd rax,esi
   140029155:	lea    rbx,[rbx+rax*2]
   140029159:	cmp    WORD PTR [rbx],r14w
   14002915d:	jne    0x140029113
   14002915f:	mov    rbx,QWORD PTR [rip+0x32602]        # 0x14005b768
   140029166:	mov    rcx,rbx
   140029169:	call   0x1400273dc
   14002916e:	mov    QWORD PTR [rip+0x325f3],r14        # 0x14005b768
   140029175:	mov    QWORD PTR [rdi],r14
   140029178:	mov    DWORD PTR [rip+0x359fa],0x1        # 0x14005eb7c
   140029182:	xor    eax,eax
   140029184:	mov    rbx,QWORD PTR [rsp+0x40]
   140029189:	mov    rbp,QWORD PTR [rsp+0x48]
   14002918e:	mov    rsi,QWORD PTR [rsp+0x50]
   140029193:	mov    rdi,QWORD PTR [rsp+0x58]
   140029198:	add    rsp,0x30
   14002919c:	pop    r14
   14002919e:	ret    
   14002919f:	mov    rcx,QWORD PTR [rip+0x32b72]        # 0x14005bd18
   1400291a6:	call   0x1400273dc
   1400291ab:	mov    QWORD PTR [rip+0x32b66],r14        # 0x14005bd18
   1400291b2:	jmp    0x1400290bf
   1400291b7:	xor    r9d,r9d
   1400291ba:	xor    r8d,r8d
   1400291bd:	xor    edx,edx
   1400291bf:	xor    ecx,ecx
   1400291c1:	mov    QWORD PTR [rsp+0x20],r14
   1400291c6:	call   0x140029b4c
   1400291cb:	int3   
   1400291cc:	mov    DWORD PTR [rip+0x32b7e],ecx        # 0x14005bd50
   1400291d2:	ret    
   1400291d3:	int3   
   1400291d4:	sub    rsp,0x28
   1400291d8:	test   ecx,ecx
   1400291da:	js     0x1400291fc
   1400291dc:	cmp    ecx,0x2
   1400291df:	jle    0x1400291ee
   1400291e1:	cmp    ecx,0x3
   1400291e4:	jne    0x1400291fc
   1400291e6:	mov    eax,DWORD PTR [rip+0x333c0]        # 0x14005c5ac
   1400291ec:	jmp    0x14002920f
   1400291ee:	mov    eax,DWORD PTR [rip+0x333b8]        # 0x14005c5ac
   1400291f4:	mov    DWORD PTR [rip+0x333b2],ecx        # 0x14005c5ac
   1400291fa:	jmp    0x14002920f
   1400291fc:	call   0x140029bf8
   140029201:	mov    DWORD PTR [rax],0x16
   140029207:	call   0x140029b2c
   14002920c:	or     eax,0xffffffff
   14002920f:	add    rsp,0x28
   140029213:	ret    
   140029214:	mov    QWORD PTR [rsp+0x20],rbx
   140029219:	push   rbp
   14002921a:	mov    rbp,rsp
   14002921d:	sub    rsp,0x20
   140029221:	mov    rax,QWORD PTR [rip+0x2fe60]        # 0x140059088
   140029228:	and    QWORD PTR [rbp+0x18],0x0
   14002922d:	movabs rbx,0x2b992ddfa232
   140029237:	cmp    rax,rbx
   14002923a:	jne    0x1400292b7
   14002923c:	lea    rcx,[rbp+0x18]
   140029240:	call   QWORD PTR [rip+0x1823a]        # 0x140041480
   140029246:	mov    rax,QWORD PTR [rbp+0x18]
   14002924a:	mov    QWORD PTR [rbp+0x10],rax
   14002924e:	call   QWORD PTR [rip+0x181cc]        # 0x140041420
   140029254:	mov    eax,eax
   140029256:	xor    QWORD PTR [rbp+0x10],rax
   14002925a:	call   QWORD PTR [rip+0x18228]        # 0x140041488
   140029260:	shl    rax,0x18
   140029264:	xor    QWORD PTR [rbp+0x10],rax
   140029268:	call   QWORD PTR [rip+0x1821a]        # 0x140041488
   14002926e:	lea    rcx,[rbp+0x20]
   140029272:	xor    QWORD PTR [rbp+0x10],rax
   140029276:	call   QWORD PTR [rip+0x181fc]        # 0x140041478
   14002927c:	mov    eax,DWORD PTR [rbp+0x20]
   14002927f:	shl    rax,0x20
   140029283:	lea    rcx,[rbp+0x10]
   140029287:	xor    rax,QWORD PTR [rbp+0x20]
   14002928b:	xor    rax,QWORD PTR [rbp+0x10]
   14002928f:	xor    rax,rcx
   140029292:	movabs rcx,0xffffffffffff
   14002929c:	and    rax,rcx
   14002929f:	movabs rcx,0x2b992ddfa233
   1400292a9:	cmp    rax,rbx
   1400292ac:	cmove  rax,rcx
   1400292b0:	mov    QWORD PTR [rip+0x2fdd1],rax        # 0x140059088
   1400292b7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400292bc:	not    rax
   1400292bf:	mov    QWORD PTR [rip+0x2fdca],rax        # 0x140059090
   1400292c6:	add    rsp,0x20
   1400292ca:	pop    rbp
   1400292cb:	ret    
   1400292cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400292d1:	push   rdi
   1400292d2:	sub    rsp,0x20
   1400292d6:	lea    rbx,[rip+0x2377b]        # 0x14004ca58
   1400292dd:	lea    rdi,[rip+0x23774]        # 0x14004ca58
   1400292e4:	jmp    0x1400292f4
   1400292e6:	mov    rax,QWORD PTR [rbx]
   1400292e9:	test   rax,rax
   1400292ec:	je     0x1400292f0
   1400292ee:	call   rax
   1400292f0:	add    rbx,0x8
   1400292f4:	cmp    rbx,rdi
   1400292f7:	jb     0x1400292e6
   1400292f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400292fe:	add    rsp,0x20
   140029302:	pop    rdi
   140029303:	ret    
   140029304:	mov    QWORD PTR [rsp+0x8],rbx
   140029309:	push   rdi
   14002930a:	sub    rsp,0x20
   14002930e:	lea    rbx,[rip+0x23753]        # 0x14004ca68
   140029315:	lea    rdi,[rip+0x2374c]        # 0x14004ca68
   14002931c:	jmp    0x14002932c
   14002931e:	mov    rax,QWORD PTR [rbx]
   140029321:	test   rax,rax
   140029324:	je     0x140029328
   140029326:	call   rax
   140029328:	add    rbx,0x8
   14002932c:	cmp    rbx,rdi
   14002932f:	jb     0x14002931e
   140029331:	mov    rbx,QWORD PTR [rsp+0x30]
   140029336:	add    rsp,0x20
   14002933a:	pop    rdi
   14002933b:	ret    
   14002933c:	mov    QWORD PTR [rsp+0x8],rbx
   140029341:	mov    QWORD PTR [rsp+0x10],rbp
   140029346:	mov    QWORD PTR [rsp+0x18],rsi
   14002934b:	push   rdi
   14002934c:	sub    rsp,0x20
   140029350:	call   QWORD PTR [rip+0x1813a]        # 0x140041490
   140029356:	xor    ebx,ebx
   140029358:	mov    rdi,rax
   14002935b:	test   rax,rax
   14002935e:	jne    0x14002936f
   140029360:	jmp    0x1400293a9
   140029362:	add    rax,0x2
   140029366:	cmp    WORD PTR [rax],bx
   140029369:	jne    0x140029362
   14002936b:	add    rax,0x2
   14002936f:	cmp    WORD PTR [rax],bx
   140029372:	jne    0x140029362
   140029374:	sub    eax,edi
   140029376:	add    eax,0x2
   140029379:	movsxd rbp,eax
   14002937c:	mov    rcx,rbp
   14002937f:	call   0x1400297c4
   140029384:	mov    rsi,rax
   140029387:	test   rax,rax
   14002938a:	je     0x14002939d
   14002938c:	mov    r8,rbp
   14002938f:	mov    rdx,rdi
   140029392:	mov    rcx,rax
   140029395:	call   0x1400265d0
   14002939a:	mov    rbx,rsi
   14002939d:	mov    rcx,rdi
   1400293a0:	call   QWORD PTR [rip+0x180f2]        # 0x140041498
   1400293a6:	mov    rax,rbx
   1400293a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400293ae:	mov    rbp,QWORD PTR [rsp+0x38]
   1400293b3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400293b8:	add    rsp,0x20
   1400293bc:	pop    rdi
   1400293bd:	ret    
   1400293be:	int3   
   1400293bf:	int3   
   1400293c0:	mov    rax,rsp
   1400293c3:	mov    QWORD PTR [rax+0x8],rbx
   1400293c7:	mov    QWORD PTR [rax+0x10],rbp
   1400293cb:	mov    QWORD PTR [rax+0x18],rsi
   1400293cf:	push   rdi
   1400293d0:	push   r12
   1400293d2:	push   r13
   1400293d4:	push   r14
   1400293d6:	push   r15
   1400293d8:	sub    rsp,0x40
   1400293dc:	mov    r12,QWORD PTR [r9+0x8]
   1400293e0:	mov    r15,QWORD PTR [r9]
   1400293e3:	mov    rbx,QWORD PTR [r9+0x38]
   1400293e7:	sub    r15,r12
   1400293ea:	test   BYTE PTR [rcx+0x4],0x66
   1400293ee:	mov    r14,r9
   1400293f1:	mov    r13,rdx
   1400293f4:	mov    rbp,rcx
   1400293f7:	jne    0x1400294db
   1400293fd:	mov    esi,DWORD PTR [r9+0x48]
   140029401:	mov    QWORD PTR [rax-0x38],rcx
   140029405:	mov    QWORD PTR [rax-0x30],r8
   140029409:	cmp    esi,DWORD PTR [rbx]
   14002940b:	jae    0x14002957b
   140029411:	mov    edi,esi
   140029413:	add    rdi,rdi
   140029416:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   14002941a:	cmp    r15,rax
   14002941d:	jb     0x1400294cd
   140029423:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   140029427:	cmp    r15,rax
   14002942a:	jae    0x1400294cd
   140029430:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   140029435:	je     0x1400294cd
   14002943b:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   140029440:	je     0x140029459
   140029442:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   140029446:	lea    rcx,[rsp+0x30]
   14002944b:	mov    rdx,r13
   14002944e:	add    rax,r12
   140029451:	call   rax
   140029453:	test   eax,eax
   140029455:	js     0x1400294d4
   140029457:	jle    0x1400294cd
   140029459:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140029460:	jne    0x14002948a
   140029462:	cmp    QWORD PTR [rip+0x1c06e],0x0        # 0x1400454d8
   14002946a:	je     0x14002948a
   14002946c:	lea    rcx,[rip+0x1c065]        # 0x1400454d8
   140029473:	call   0x14002dda0
   140029478:	test   eax,eax
   14002947a:	je     0x14002948a
   14002947c:	mov    edx,0x1
   140029481:	mov    rcx,rbp
   140029484:	call   QWORD PTR [rip+0x1c04e]        # 0x1400454d8
   14002948a:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   14002948e:	mov    r8d,0x1
   140029494:	mov    rdx,r13
   140029497:	add    rcx,r12
   14002949a:	call   0x14002e600
   14002949f:	mov    rax,QWORD PTR [r14+0x40]
   1400294a3:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   1400294a7:	mov    r9d,DWORD PTR [rbp+0x0]
   1400294ab:	mov    QWORD PTR [rsp+0x28],rax
   1400294b0:	mov    rax,QWORD PTR [r14+0x28]
   1400294b4:	add    rdx,r12
   1400294b7:	mov    r8,rbp
   1400294ba:	mov    rcx,r13
   1400294bd:	mov    QWORD PTR [rsp+0x20],rax
   1400294c2:	call   QWORD PTR [rip+0x17fd8]        # 0x1400414a0
   1400294c8:	call   0x14002e630
   1400294cd:	inc    esi
   1400294cf:	jmp    0x140029409
   1400294d4:	xor    eax,eax
   1400294d6:	jmp    0x140029580
   1400294db:	mov    rsi,QWORD PTR [r9+0x20]
   1400294df:	mov    edi,DWORD PTR [r9+0x48]
   1400294e3:	sub    rsi,r12
   1400294e6:	jmp    0x140029571
   1400294eb:	mov    ecx,edi
   1400294ed:	add    rcx,rcx
   1400294f0:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   1400294f4:	cmp    r15,rax
   1400294f7:	jb     0x14002956f
   1400294f9:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   1400294fd:	cmp    r15,rax
   140029500:	jae    0x14002956f
   140029502:	test   BYTE PTR [rbp+0x4],0x20
   140029506:	je     0x140029549
   140029508:	xor    r9d,r9d
   14002950b:	test   edx,edx
   14002950d:	je     0x140029544
   14002950f:	lea    r8,[rbx+0x8]
   140029513:	mov    eax,DWORD PTR [r8-0x4]
   140029517:	cmp    rsi,rax
   14002951a:	jb     0x140029538
   14002951c:	mov    eax,DWORD PTR [r8]
   14002951f:	cmp    rsi,rax
   140029522:	jae    0x140029538
   140029524:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   140029528:	cmp    DWORD PTR [r8+0x8],eax
   14002952c:	jne    0x140029538
   14002952e:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   140029532:	cmp    DWORD PTR [r8+0x4],eax
   140029536:	je     0x140029544
   140029538:	inc    r9d
   14002953b:	add    r8,0x10
   14002953f:	cmp    r9d,edx
   140029542:	jb     0x140029513
   140029544:	cmp    r9d,edx
   140029547:	jne    0x14002957b
   140029549:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   14002954d:	test   eax,eax
   14002954f:	je     0x140029558
   140029551:	cmp    rsi,rax
   140029554:	je     0x14002957b
   140029556:	jmp    0x14002956f
   140029558:	lea    eax,[rdi+0x1]
   14002955b:	mov    rdx,r13
   14002955e:	mov    DWORD PTR [r14+0x48],eax
   140029562:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   140029567:	mov    cl,0x1
   140029569:	add    r8,r12
   14002956c:	call   r8
   14002956f:	inc    edi
   140029571:	mov    edx,DWORD PTR [rbx]
   140029573:	cmp    edi,edx
   140029575:	jb     0x1400294eb
   14002957b:	mov    eax,0x1
   140029580:	lea    r11,[rsp+0x40]
   140029585:	mov    rbx,QWORD PTR [r11+0x30]
   140029589:	mov    rbp,QWORD PTR [r11+0x38]
   14002958d:	mov    rsi,QWORD PTR [r11+0x40]
   140029591:	mov    rsp,r11
   140029594:	pop    r15
   140029596:	pop    r14
   140029598:	pop    r13
   14002959a:	pop    r12
   14002959c:	pop    rdi
   14002959d:	ret    
   14002959e:	int3   
   14002959f:	int3   
   1400295a0:	rex push rbx
   1400295a2:	sub    rsp,0x10
   1400295a6:	mov    r9d,0x2
   1400295ac:	xor    ecx,ecx
   1400295ae:	lea    r10d,[r9-0x1]
   1400295b2:	mov    DWORD PTR [rip+0x2fae3],r9d        # 0x14005909c
   1400295b9:	mov    eax,r10d
   1400295bc:	mov    DWORD PTR [rip+0x2fad5],r10d        # 0x140059098
   1400295c3:	cpuid  
   1400295c5:	mov    DWORD PTR [rsp],eax
   1400295c8:	mov    DWORD PTR [rsp+0x4],ebx
   1400295cc:	mov    DWORD PTR [rsp+0xc],edx
   1400295d0:	bt     ecx,0x14
   1400295d4:	jae    0x140029601
   1400295d6:	mov    DWORD PTR [rip+0x2fabb],r9d        # 0x140059098
   1400295dd:	mov    DWORD PTR [rip+0x2fab5],0x6        # 0x14005909c
   1400295e7:	bt     ecx,0x1c
   1400295eb:	jae    0x140029601
   1400295ed:	mov    DWORD PTR [rip+0x2faa1],0x3        # 0x140059098
   1400295f7:	mov    DWORD PTR [rip+0x2fa9b],0xe        # 0x14005909c
   140029601:	mov    r8d,DWORD PTR [rip+0x32fa8]        # 0x14005c5b0
   140029608:	xor    ecx,ecx
   14002960a:	mov    eax,0x7
   14002960f:	cpuid  
   140029611:	mov    DWORD PTR [rsp],eax
   140029614:	mov    DWORD PTR [rsp+0x8],ecx
   140029618:	mov    DWORD PTR [rsp+0xc],edx
   14002961c:	bt     ebx,0x9
   140029620:	jae    0x14002962c
   140029622:	or     r8d,r9d
   140029625:	mov    DWORD PTR [rip+0x32f84],r8d        # 0x14005c5b0
   14002962c:	xor    eax,eax
   14002962e:	xor    ecx,ecx
   140029630:	cpuid  
   140029632:	mov    DWORD PTR [rsp],eax
   140029635:	cmp    ebx,0x756e6547
   14002963b:	jne    0x14002969e
   14002963d:	cmp    edx,0x49656e69
   140029643:	jne    0x14002969e
   140029645:	cmp    ecx,0x6c65746e
   14002964b:	jne    0x14002969e
   14002964d:	xor    ecx,ecx
   14002964f:	mov    eax,r10d
   140029652:	cpuid  
   140029654:	and    eax,0xfff3ff0
   140029659:	mov    DWORD PTR [rsp+0x4],ebx
   14002965d:	mov    DWORD PTR [rsp+0x8],ecx
   140029661:	mov    DWORD PTR [rsp+0xc],edx
   140029665:	cmp    eax,0x106c0
   14002966a:	je     0x140029694
   14002966c:	cmp    eax,0x20660
   140029671:	je     0x140029694
   140029673:	cmp    eax,0x20670
   140029678:	je     0x140029694
   14002967a:	add    eax,0xfffcf9b0
   14002967f:	cmp    eax,0x20
   140029682:	ja     0x14002969e
   140029684:	movabs rcx,0x100010001
   14002968e:	bt     rcx,rax
   140029692:	jae    0x14002969e
   140029694:	or     r8d,r10d
   140029697:	mov    DWORD PTR [rip+0x32f12],r8d        # 0x14005c5b0
   14002969e:	xor    eax,eax
   1400296a0:	add    rsp,0x10
   1400296a4:	pop    rbx
   1400296a5:	ret    
   1400296a6:	int3   
   1400296a7:	int3   
   1400296a8:	sub    rsp,0x28
   1400296ac:	mov    rcx,QWORD PTR [rip+0x32f05]        # 0x14005c5b8
   1400296b3:	call   QWORD PTR [rip+0x17d47]        # 0x140041400
   1400296b9:	test   rax,rax
   1400296bc:	je     0x1400296c2
   1400296be:	call   rax
   1400296c0:	jmp    0x1400296c2
   1400296c2:	call   0x1400296c8
   1400296c7:	nop
   1400296c8:	sub    rsp,0x28
   1400296cc:	call   0x14002814c
   1400296d1:	mov    rcx,QWORD PTR [rax+0xd0]
   1400296d8:	test   rcx,rcx
   1400296db:	je     0x1400296e1
   1400296dd:	call   rcx
   1400296df:	jmp    0x1400296e1
   1400296e1:	call   0x140029968
   1400296e6:	nop
   1400296e7:	int3   
   1400296e8:	sub    rsp,0x28
   1400296ec:	lea    rcx,[rip+0xffffffffffffffd5]        # 0x1400296c8
   1400296f3:	call   QWORD PTR [rip+0x17cff]        # 0x1400413f8
   1400296f9:	mov    QWORD PTR [rip+0x32eb8],rax        # 0x14005c5b8
   140029700:	add    rsp,0x28
   140029704:	ret    
   140029705:	int3   
   140029706:	int3   
   140029707:	int3   
   140029708:	sub    rsp,0x28
   14002970c:	test   rcx,rcx
   14002970f:	jne    0x14002972a
   140029711:	call   0x140029bf8
   140029716:	mov    DWORD PTR [rax],0x16
   14002971c:	call   0x140029b2c
   140029721:	or     rax,0xffffffffffffffff
   140029725:	add    rsp,0x28
   140029729:	ret    
   14002972a:	mov    r8,rcx
   14002972d:	mov    rcx,QWORD PTR [rip+0x32c54]        # 0x14005c388
   140029734:	xor    edx,edx
   140029736:	add    rsp,0x28
   14002973a:	rex.W jmp QWORD PTR [rip+0x17d67]        # 0x1400414a8
   140029741:	int3   
   140029742:	int3   
   140029743:	int3   
   140029744:	mov    rax,rsp
   140029747:	mov    QWORD PTR [rax+0x8],rbx
   14002974b:	mov    QWORD PTR [rax+0x10],rbp
   14002974f:	mov    QWORD PTR [rax+0x18],rsi
   140029753:	mov    QWORD PTR [rax+0x20],rdi
   140029757:	push   r14
   140029759:	sub    rsp,0x20
   14002975d:	xor    ebx,ebx
   14002975f:	mov    rsi,rdx
   140029762:	mov    rbp,rcx
   140029765:	or     r14d,0xffffffff
   140029769:	xor    r8d,r8d
   14002976c:	mov    rdx,rsi
   14002976f:	mov    rcx,rbp
   140029772:	call   0x14002cb50
   140029777:	mov    rdi,rax
   14002977a:	test   rax,rax
   14002977d:	jne    0x1400297a6
   14002977f:	cmp    DWORD PTR [rip+0x32e3b],eax        # 0x14005c5c0
   140029785:	jbe    0x1400297a6
   140029787:	mov    ecx,ebx
   140029789:	call   QWORD PTR [rip+0x17bb1]        # 0x140041340
   14002978f:	lea    ecx,[rbx+0x3e8]
   140029795:	cmp    ecx,DWORD PTR [rip+0x32e25]        # 0x14005c5c0
   14002979b:	mov    ebx,ecx
   14002979d:	cmova  ebx,r14d
   1400297a1:	cmp    ebx,r14d
   1400297a4:	jne    0x140029769
   1400297a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400297ab:	mov    rbp,QWORD PTR [rsp+0x38]
   1400297b0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400297b5:	mov    rax,rdi
   1400297b8:	mov    rdi,QWORD PTR [rsp+0x48]
   1400297bd:	add    rsp,0x20
   1400297c1:	pop    r14
   1400297c3:	ret    
   1400297c4:	mov    rax,rsp
   1400297c7:	mov    QWORD PTR [rax+0x8],rbx
   1400297cb:	mov    QWORD PTR [rax+0x10],rbp
   1400297cf:	mov    QWORD PTR [rax+0x18],rsi
   1400297d3:	mov    QWORD PTR [rax+0x20],rdi
   1400297d7:	push   r14
   1400297d9:	sub    rsp,0x20
   1400297dd:	mov    esi,DWORD PTR [rip+0x32ddd]        # 0x14005c5c0
   1400297e3:	xor    edi,edi
   1400297e5:	mov    rbp,rcx
   1400297e8:	or     r14d,0xffffffff
   1400297ec:	mov    rcx,rbp
   1400297ef:	call   0x140029d54
   1400297f4:	mov    rbx,rax
   1400297f7:	test   rax,rax
   1400297fa:	jne    0x140029821
   1400297fc:	test   esi,esi
   1400297fe:	je     0x140029821
   140029800:	mov    ecx,edi
   140029802:	call   QWORD PTR [rip+0x17b38]        # 0x140041340
   140029808:	mov    esi,DWORD PTR [rip+0x32db2]        # 0x14005c5c0
   14002980e:	lea    ecx,[rdi+0x3e8]
   140029814:	cmp    ecx,esi
   140029816:	mov    edi,ecx
   140029818:	cmova  edi,r14d
   14002981c:	cmp    edi,r14d
   14002981f:	jne    0x1400297ec
   140029821:	mov    rbp,QWORD PTR [rsp+0x38]
   140029826:	mov    rsi,QWORD PTR [rsp+0x40]
   14002982b:	mov    rdi,QWORD PTR [rsp+0x48]
   140029830:	mov    rax,rbx
   140029833:	mov    rbx,QWORD PTR [rsp+0x30]
   140029838:	add    rsp,0x20
   14002983c:	pop    r14
   14002983e:	ret    
   14002983f:	int3   
   140029840:	mov    rax,rsp
   140029843:	mov    QWORD PTR [rax+0x8],rbx
   140029847:	mov    QWORD PTR [rax+0x10],rbp
   14002984b:	mov    QWORD PTR [rax+0x18],rsi
   14002984f:	mov    QWORD PTR [rax+0x20],rdi
   140029853:	push   r14
   140029855:	sub    rsp,0x20
   140029859:	xor    ebx,ebx
   14002985b:	mov    rsi,rdx
   14002985e:	mov    rbp,rcx
   140029861:	or     r14d,0xffffffff
   140029865:	mov    rdx,rsi
   140029868:	mov    rcx,rbp
   14002986b:	call   0x14002c9f4
   140029870:	mov    rdi,rax
   140029873:	test   rax,rax
   140029876:	jne    0x1400298a4
   140029878:	test   rsi,rsi
   14002987b:	je     0x1400298a4
   14002987d:	cmp    DWORD PTR [rip+0x32d3d],eax        # 0x14005c5c0
   140029883:	jbe    0x1400298a4
   140029885:	mov    ecx,ebx
   140029887:	call   QWORD PTR [rip+0x17ab3]        # 0x140041340
   14002988d:	lea    ecx,[rbx+0x3e8]
   140029893:	cmp    ecx,DWORD PTR [rip+0x32d27]        # 0x14005c5c0
   140029899:	mov    ebx,ecx
   14002989b:	cmova  ebx,r14d
   14002989f:	cmp    ebx,r14d
   1400298a2:	jne    0x140029865
   1400298a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400298a9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400298ae:	mov    rsi,QWORD PTR [rsp+0x40]
   1400298b3:	mov    rax,rdi
   1400298b6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400298bb:	add    rsp,0x20
   1400298bf:	pop    r14
   1400298c1:	ret    
   1400298c2:	int3   
   1400298c3:	int3   
   1400298c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400298c9:	mov    QWORD PTR [rsp+0x10],rbp
   1400298ce:	mov    QWORD PTR [rsp+0x18],rsi
   1400298d3:	push   rdi
   1400298d4:	push   r14
   1400298d6:	push   r15
   1400298d8:	sub    rsp,0x20
   1400298dc:	xor    edi,edi
   1400298de:	mov    rsi,r8
   1400298e1:	mov    rbp,rdx
   1400298e4:	or     r15d,0xffffffff
   1400298e8:	mov    r14,rcx
   1400298eb:	mov    r8,rsi
   1400298ee:	mov    rdx,rbp
   1400298f1:	mov    rcx,r14
   1400298f4:	call   0x1400275ec
   1400298f9:	mov    rbx,rax
   1400298fc:	test   rax,rax
   1400298ff:	jne    0x14002992d
   140029901:	test   rsi,rsi
   140029904:	je     0x14002992d
   140029906:	cmp    DWORD PTR [rip+0x32cb4],eax        # 0x14005c5c0
   14002990c:	jbe    0x14002992d
   14002990e:	mov    ecx,edi
   140029910:	call   QWORD PTR [rip+0x17a2a]        # 0x140041340
   140029916:	lea    ecx,[rdi+0x3e8]
   14002991c:	cmp    ecx,DWORD PTR [rip+0x32c9e]        # 0x14005c5c0
   140029922:	mov    edi,ecx
   140029924:	cmova  edi,r15d
   140029928:	cmp    edi,r15d
   14002992b:	jne    0x1400298eb
   14002992d:	mov    rbp,QWORD PTR [rsp+0x48]
   140029932:	mov    rsi,QWORD PTR [rsp+0x50]
   140029937:	mov    rax,rbx
   14002993a:	mov    rbx,QWORD PTR [rsp+0x40]
   14002993f:	add    rsp,0x20
   140029943:	pop    r15
   140029945:	pop    r14
   140029947:	pop    rdi
   140029948:	ret    
   140029949:	int3   
   14002994a:	int3   
   14002994b:	int3   
   14002994c:	mov    eax,DWORD PTR [rip+0x2f74e]        # 0x1400590a0
   140029952:	mov    r8d,edx
   140029955:	and    ecx,edx
   140029957:	not    r8d
   14002995a:	and    r8d,eax
   14002995d:	or     r8d,ecx
   140029960:	mov    DWORD PTR [rip+0x2f739],r8d        # 0x1400590a0
   140029967:	ret    
   140029968:	sub    rsp,0x28
   14002996c:	call   0x14002de64
   140029971:	test   rax,rax
   140029974:	je     0x140029980
   140029976:	mov    ecx,0x16
   14002997b:	call   0x14002de94
   140029980:	test   BYTE PTR [rip+0x2f719],0x2        # 0x1400590a0
   140029987:	je     0x1400299b2
   140029989:	mov    ecx,0x17
   14002998e:	call   0x14003265c
   140029993:	test   eax,eax
   140029995:	je     0x14002999e
   140029997:	mov    ecx,0x7
   14002999c:	int    0x29
   14002999e:	mov    r8d,0x1
   1400299a4:	mov    edx,0x40000015
   1400299a9:	lea    ecx,[r8+0x2]
   1400299ad:	call   0x1400299c8
   1400299b2:	mov    ecx,0x3
   1400299b7:	call   0x1400284a8
   1400299bc:	int3   
   1400299bd:	int3   
   1400299be:	int3   
   1400299bf:	int3   
   1400299c0:	mov    QWORD PTR [rip+0x32c01],rcx        # 0x14005c5c8
   1400299c7:	ret    
   1400299c8:	mov    rax,rsp
   1400299cb:	mov    QWORD PTR [rax+0x10],rbx
   1400299cf:	mov    QWORD PTR [rax+0x18],rsi
   1400299d3:	mov    QWORD PTR [rax+0x20],rdi
   1400299d7:	push   rbp
   1400299d8:	lea    rbp,[rax-0x4b8]
   1400299df:	sub    rsp,0x5b0
   1400299e6:	mov    rax,QWORD PTR [rip+0x2f69b]        # 0x140059088
   1400299ed:	xor    rax,rsp
   1400299f0:	mov    QWORD PTR [rbp+0x4a0],rax
   1400299f7:	mov    edi,r8d
   1400299fa:	mov    esi,edx
   1400299fc:	mov    ebx,ecx
   1400299fe:	cmp    ecx,0xffffffff
   140029a01:	je     0x140029a08
   140029a03:	call   0x14002d998
   140029a08:	and    DWORD PTR [rsp+0x30],0x0
   140029a0d:	lea    rcx,[rsp+0x34]
   140029a12:	xor    edx,edx
   140029a14:	mov    r8d,0x94
   140029a1a:	call   0x14002bb90
   140029a1f:	lea    rax,[rsp+0x30]
   140029a24:	lea    rcx,[rbp-0x30]
   140029a28:	mov    QWORD PTR [rsp+0x20],rax
   140029a2d:	lea    rax,[rbp-0x30]
   140029a31:	mov    QWORD PTR [rsp+0x28],rax
   140029a36:	call   0x14002d9a0
   140029a3b:	mov    rax,QWORD PTR [rbp+0x4b8]
   140029a42:	mov    QWORD PTR [rbp+0xc8],rax
   140029a49:	lea    rax,[rbp+0x4b8]
   140029a50:	mov    DWORD PTR [rsp+0x30],esi
   140029a54:	add    rax,0x8
   140029a58:	mov    DWORD PTR [rsp+0x34],edi
   140029a5c:	mov    QWORD PTR [rbp+0x68],rax
   140029a60:	mov    rax,QWORD PTR [rbp+0x4b8]
   140029a67:	mov    QWORD PTR [rsp+0x40],rax
   140029a6c:	call   QWORD PTR [rip+0x1799e]        # 0x140041410
   140029a72:	lea    rcx,[rsp+0x20]
   140029a77:	mov    edi,eax
   140029a79:	call   0x14002db2c
   140029a7e:	test   eax,eax
   140029a80:	jne    0x140029a92
   140029a82:	test   edi,edi
   140029a84:	jne    0x140029a92
   140029a86:	cmp    ebx,0xffffffff
   140029a89:	je     0x140029a92
   140029a8b:	mov    ecx,ebx
   140029a8d:	call   0x14002d998
   140029a92:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140029a99:	xor    rcx,rsp
   140029a9c:	call   0x1400265a0
   140029aa1:	lea    r11,[rsp+0x5b0]
   140029aa9:	mov    rbx,QWORD PTR [r11+0x18]
   140029aad:	mov    rsi,QWORD PTR [r11+0x20]
   140029ab1:	mov    rdi,QWORD PTR [r11+0x28]
   140029ab5:	mov    rsp,r11
   140029ab8:	pop    rbp
   140029ab9:	ret    
   140029aba:	int3   
   140029abb:	int3   
   140029abc:	mov    QWORD PTR [rip+0x32b0d],rcx        # 0x14005c5d0
   140029ac3:	ret    
   140029ac4:	mov    QWORD PTR [rsp+0x8],rbx
   140029ac9:	mov    QWORD PTR [rsp+0x10],rbp
   140029ace:	mov    QWORD PTR [rsp+0x18],rsi
   140029ad3:	push   rdi
   140029ad4:	sub    rsp,0x30
   140029ad8:	mov    rbp,rcx
   140029adb:	mov    rcx,QWORD PTR [rip+0x32aee]        # 0x14005c5d0
   140029ae2:	mov    ebx,r9d
   140029ae5:	mov    rdi,r8
   140029ae8:	mov    rsi,rdx
   140029aeb:	call   QWORD PTR [rip+0x1790f]        # 0x140041400
   140029af1:	mov    r9d,ebx
   140029af4:	mov    r8,rdi
   140029af7:	mov    rdx,rsi
   140029afa:	mov    rcx,rbp
   140029afd:	test   rax,rax
   140029b00:	je     0x140029b19
   140029b02:	mov    rbx,QWORD PTR [rsp+0x40]
   140029b07:	mov    rbp,QWORD PTR [rsp+0x48]
   140029b0c:	mov    rsi,QWORD PTR [rsp+0x50]
   140029b11:	add    rsp,0x30
   140029b15:	pop    rdi
   140029b16:	rex.W jmp rax
   140029b19:	mov    rax,QWORD PTR [rsp+0x60]
   140029b1e:	mov    QWORD PTR [rsp+0x20],rax
   140029b23:	call   0x140029b4c
   140029b28:	int3   
   140029b29:	int3   
   140029b2a:	int3   
   140029b2b:	int3   
   140029b2c:	sub    rsp,0x38
   140029b30:	and    QWORD PTR [rsp+0x20],0x0
   140029b36:	xor    r9d,r9d
   140029b39:	xor    r8d,r8d
   140029b3c:	xor    edx,edx
   140029b3e:	xor    ecx,ecx
   140029b40:	call   0x140029ac4
   140029b45:	add    rsp,0x38
   140029b49:	ret    
   140029b4a:	int3   
   140029b4b:	int3   
   140029b4c:	sub    rsp,0x28
   140029b50:	mov    ecx,0x17
   140029b55:	call   0x14003265c
   140029b5a:	test   eax,eax
   140029b5c:	je     0x140029b65
   140029b5e:	mov    ecx,0x5
   140029b63:	int    0x29
   140029b65:	mov    r8d,0x1
   140029b6b:	mov    edx,0xc0000417
   140029b70:	lea    ecx,[r8+0x1]
   140029b74:	call   0x1400299c8
   140029b79:	mov    ecx,0xc0000417
   140029b7e:	add    rsp,0x28
   140029b82:	jmp    0x14002db0c
   140029b87:	int3   
   140029b88:	sub    rsp,0x28
   140029b8c:	call   0x140028170
   140029b91:	test   rax,rax
   140029b94:	jne    0x140029b9f
   140029b96:	lea    rax,[rip+0x2f67f]        # 0x14005921c
   140029b9d:	jmp    0x140029ba3
   140029b9f:	add    rax,0x14
   140029ba3:	add    rsp,0x28
   140029ba7:	ret    
   140029ba8:	mov    QWORD PTR [rsp+0x8],rbx
   140029bad:	push   rdi
   140029bae:	sub    rsp,0x20
   140029bb2:	mov    edi,ecx
   140029bb4:	call   0x140028170
   140029bb9:	test   rax,rax
   140029bbc:	jne    0x140029bc7
   140029bbe:	lea    rax,[rip+0x2f657]        # 0x14005921c
   140029bc5:	jmp    0x140029bcb
   140029bc7:	add    rax,0x14
   140029bcb:	mov    DWORD PTR [rax],edi
   140029bcd:	call   0x140028170
   140029bd2:	lea    rbx,[rip+0x2f63f]        # 0x140059218
   140029bd9:	test   rax,rax
   140029bdc:	je     0x140029be2
   140029bde:	lea    rbx,[rax+0x10]
   140029be2:	mov    ecx,edi
   140029be4:	call   0x140029c18
   140029be9:	mov    DWORD PTR [rbx],eax
   140029beb:	mov    rbx,QWORD PTR [rsp+0x30]
   140029bf0:	add    rsp,0x20
   140029bf4:	pop    rdi
   140029bf5:	ret    
   140029bf6:	int3   
   140029bf7:	int3   
   140029bf8:	sub    rsp,0x28
   140029bfc:	call   0x140028170
   140029c01:	test   rax,rax
   140029c04:	jne    0x140029c0f
   140029c06:	lea    rax,[rip+0x2f60b]        # 0x140059218
   140029c0d:	jmp    0x140029c13
   140029c0f:	add    rax,0x10
   140029c13:	add    rsp,0x28
   140029c17:	ret    
   140029c18:	lea    r10,[rip+0x2f491]        # 0x1400590b0
   140029c1f:	xor    edx,edx
   140029c21:	mov    r8,r10
   140029c24:	lea    r9d,[rdx+0x8]
   140029c28:	cmp    ecx,DWORD PTR [r8]
   140029c2b:	je     0x140029c5c
   140029c2d:	inc    edx
   140029c2f:	add    r8,r9
   140029c32:	movsxd rax,edx
   140029c35:	cmp    rax,0x2d
   140029c39:	jb     0x140029c28
   140029c3b:	lea    eax,[rcx-0x13]
   140029c3e:	cmp    eax,0x11
   140029c41:	ja     0x140029c49
   140029c43:	mov    eax,0xd
   140029c48:	ret    
   140029c49:	add    ecx,0xffffff44
   140029c4f:	mov    eax,0x16
   140029c54:	cmp    ecx,0xe
   140029c57:	cmovbe eax,r9d
   140029c5b:	ret    
   140029c5c:	movsxd rax,edx
   140029c5f:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   140029c64:	ret    
   140029c65:	int3   
   140029c66:	int3   
   140029c67:	int3   
   140029c68:	int3   
   140029c69:	int3   
   140029c6a:	int3   
   140029c6b:	int3   
   140029c6c:	int3   
   140029c6d:	int3   
   140029c6e:	int3   
   140029c6f:	int3   
   140029c70:	int3   
   140029c71:	int3   
   140029c72:	int3   
   140029c73:	int3   
   140029c74:	int3   
   140029c75:	int3   
   140029c76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029c80:	sub    rdx,rcx
   140029c83:	test   cl,0x7
   140029c86:	je     0x140029c9c
   140029c88:	movzx  eax,BYTE PTR [rcx]
   140029c8b:	cmp    al,BYTE PTR [rcx+rdx*1]
   140029c8e:	jne    0x140029cdf
   140029c90:	inc    rcx
   140029c93:	test   al,al
   140029c95:	je     0x140029cdc
   140029c97:	test   cl,0x7
   140029c9a:	jne    0x140029c88
   140029c9c:	movabs r11,0x8080808080808080
   140029ca6:	movabs r10,0xfefefefefefefeff
   140029cb0:	lea    eax,[ecx+edx*1]
   140029cb4:	and    eax,0xfff
   140029cb9:	cmp    eax,0xff8
   140029cbe:	ja     0x140029c88
   140029cc0:	mov    rax,QWORD PTR [rcx]
   140029cc3:	cmp    rax,QWORD PTR [rcx+rdx*1]
   140029cc7:	jne    0x140029c88
   140029cc9:	lea    r9,[r10+rax*1]
   140029ccd:	not    rax
   140029cd0:	add    rcx,0x8
   140029cd4:	and    rax,r9
   140029cd7:	test   r11,rax
   140029cda:	je     0x140029cb0
   140029cdc:	xor    eax,eax
   140029cde:	ret    
   140029cdf:	sbb    rax,rax
   140029ce2:	or     rax,0x1
   140029ce6:	ret    
   140029ce7:	int3   
   140029ce8:	rex push rbx
   140029cea:	sub    rsp,0x30
   140029cee:	mov    rbx,rcx
   140029cf1:	mov    ecx,0xe
   140029cf6:	call   0x14002db4c
   140029cfb:	nop
   140029cfc:	mov    rax,QWORD PTR [rbx+0x8]
   140029d00:	test   rax,rax
   140029d03:	je     0x140029d44
   140029d05:	mov    rcx,QWORD PTR [rip+0x328d4]        # 0x14005c5e0
   140029d0c:	lea    rdx,[rip+0x328c5]        # 0x14005c5d8
   140029d13:	mov    QWORD PTR [rsp+0x20],rcx
   140029d18:	test   rcx,rcx
   140029d1b:	je     0x140029d36
   140029d1d:	cmp    QWORD PTR [rcx],rax
   140029d20:	jne    0x140029d31
   140029d22:	mov    rax,QWORD PTR [rcx+0x8]
   140029d26:	mov    QWORD PTR [rdx+0x8],rax
   140029d2a:	call   0x1400273dc
   140029d2f:	jmp    0x140029d36
   140029d31:	mov    rdx,rcx
   140029d34:	jmp    0x140029d13
   140029d36:	mov    rcx,QWORD PTR [rbx+0x8]
   140029d3a:	call   0x1400273dc
   140029d3f:	and    QWORD PTR [rbx+0x8],0x0
   140029d44:	mov    ecx,0xe
   140029d49:	call   0x14002dd34
   140029d4e:	add    rsp,0x30
   140029d52:	pop    rbx
   140029d53:	ret    
   140029d54:	mov    QWORD PTR [rsp+0x8],rbx
   140029d59:	mov    QWORD PTR [rsp+0x10],rsi
   140029d5e:	push   rdi
   140029d5f:	sub    rsp,0x20
   140029d63:	mov    rbx,rcx
   140029d66:	cmp    rcx,0xffffffffffffffe0
   140029d6a:	ja     0x140029de8
   140029d6c:	mov    edi,0x1
   140029d71:	test   rcx,rcx
   140029d74:	cmovne rdi,rcx
   140029d78:	mov    rcx,QWORD PTR [rip+0x32609]        # 0x14005c388
   140029d7f:	test   rcx,rcx
   140029d82:	jne    0x140029da4
   140029d84:	call   0x140028760
   140029d89:	mov    ecx,0x1e
   140029d8e:	call   0x1400287d4
   140029d93:	mov    ecx,0xff
   140029d98:	call   0x140028398
   140029d9d:	mov    rcx,QWORD PTR [rip+0x325e4]        # 0x14005c388
   140029da4:	mov    r8,rdi
   140029da7:	xor    edx,edx
   140029da9:	call   QWORD PTR [rip+0x17701]        # 0x1400414b0
   140029daf:	mov    rsi,rax
   140029db2:	test   rax,rax
   140029db5:	jne    0x140029de3
   140029db7:	cmp    DWORD PTR [rip+0x32b6b],eax        # 0x14005c928
   140029dbd:	je     0x140029dcd
   140029dbf:	mov    rcx,rbx
   140029dc2:	call   0x140029fac
   140029dc7:	test   eax,eax
   140029dc9:	je     0x140029dd8
   140029dcb:	jmp    0x140029d78
   140029dcd:	call   0x140029bf8
   140029dd2:	mov    DWORD PTR [rax],0xc
   140029dd8:	call   0x140029bf8
   140029ddd:	mov    DWORD PTR [rax],0xc
   140029de3:	mov    rax,rsi
   140029de6:	jmp    0x140029dfa
   140029de8:	call   0x140029fac
   140029ded:	call   0x140029bf8
   140029df2:	mov    DWORD PTR [rax],0xc
   140029df8:	xor    eax,eax
   140029dfa:	mov    rbx,QWORD PTR [rsp+0x30]
   140029dff:	mov    rsi,QWORD PTR [rsp+0x38]
   140029e04:	add    rsp,0x20
   140029e08:	pop    rdi
   140029e09:	ret    
   140029e0a:	int3   
   140029e0b:	int3   
   140029e0c:	rex push rbx
   140029e0e:	sub    rsp,0x20
   140029e12:	and    QWORD PTR [rcx+0x8],0x0
   140029e17:	lea    rax,[rip+0x1874a]        # 0x140042568
   140029e1e:	mov    BYTE PTR [rcx+0x10],0x0
   140029e22:	mov    QWORD PTR [rcx],rax
   140029e25:	mov    rdx,QWORD PTR [rdx]
   140029e28:	mov    rbx,rcx
   140029e2b:	call   0x140029f14
   140029e30:	mov    rax,rbx
   140029e33:	add    rsp,0x20
   140029e37:	pop    rbx
   140029e38:	ret    
   140029e39:	int3   
   140029e3a:	int3   
   140029e3b:	int3   
   140029e3c:	lea    rax,[rip+0x18725]        # 0x140042568
   140029e43:	mov    QWORD PTR [rcx],rax
   140029e46:	mov    rax,QWORD PTR [rdx]
   140029e49:	mov    BYTE PTR [rcx+0x10],0x0
   140029e4d:	mov    QWORD PTR [rcx+0x8],rax
   140029e51:	mov    rax,rcx
   140029e54:	ret    
   140029e55:	int3   
   140029e56:	int3   
   140029e57:	int3   
   140029e58:	rex push rbx
   140029e5a:	sub    rsp,0x20
   140029e5e:	and    QWORD PTR [rcx+0x8],0x0
   140029e63:	lea    rax,[rip+0x186fe]        # 0x140042568
   140029e6a:	mov    rbx,rcx
   140029e6d:	mov    QWORD PTR [rcx],rax
   140029e70:	mov    BYTE PTR [rcx+0x10],0x0
   140029e74:	call   0x140029e94
   140029e79:	mov    rax,rbx
   140029e7c:	add    rsp,0x20
   140029e80:	pop    rbx
   140029e81:	ret    
   140029e82:	int3   
   140029e83:	int3   
   140029e84:	lea    rax,[rip+0x186dd]        # 0x140042568
   140029e8b:	mov    QWORD PTR [rcx],rax
   140029e8e:	jmp    0x140029f70
   140029e93:	int3   
   140029e94:	mov    QWORD PTR [rsp+0x8],rbx
   140029e99:	push   rdi
   140029e9a:	sub    rsp,0x20
   140029e9e:	mov    rdi,rdx
   140029ea1:	mov    rbx,rcx
   140029ea4:	cmp    rcx,rdx
   140029ea7:	je     0x140029eca
   140029ea9:	call   0x140029f70
   140029eae:	cmp    BYTE PTR [rdi+0x10],0x0
   140029eb2:	je     0x140029ec2
   140029eb4:	mov    rdx,QWORD PTR [rdi+0x8]
   140029eb8:	mov    rcx,rbx
   140029ebb:	call   0x140029f14
   140029ec0:	jmp    0x140029eca
   140029ec2:	mov    rax,QWORD PTR [rdi+0x8]
   140029ec6:	mov    QWORD PTR [rbx+0x8],rax
   140029eca:	mov    rax,rbx
   140029ecd:	mov    rbx,QWORD PTR [rsp+0x30]
   140029ed2:	add    rsp,0x20
   140029ed6:	pop    rdi
   140029ed7:	ret    
   140029ed8:	mov    QWORD PTR [rsp+0x8],rbx
   140029edd:	push   rdi
   140029ede:	sub    rsp,0x20
   140029ee2:	lea    rax,[rip+0x1867f]        # 0x140042568
   140029ee9:	mov    ebx,edx
   140029eeb:	mov    rdi,rcx
   140029eee:	mov    QWORD PTR [rcx],rax
   140029ef1:	call   0x140029f70
   140029ef6:	test   bl,0x1
   140029ef9:	je     0x140029f03
   140029efb:	mov    rcx,rdi
   140029efe:	call   0x14002657c
   140029f03:	mov    rax,rdi
   140029f06:	mov    rbx,QWORD PTR [rsp+0x30]
   140029f0b:	add    rsp,0x20
   140029f0f:	pop    rdi
   140029f10:	ret    
   140029f11:	int3   
   140029f12:	int3   
   140029f13:	int3   
   140029f14:	test   rdx,rdx
   140029f17:	je     0x140029f6d
   140029f19:	mov    QWORD PTR [rsp+0x8],rbx
   140029f1e:	mov    QWORD PTR [rsp+0x10],rsi
   140029f23:	push   rdi
   140029f24:	sub    rsp,0x20
   140029f28:	mov    rsi,rcx
   140029f2b:	mov    rcx,rdx
   140029f2e:	mov    rbx,rdx
   140029f31:	call   0x14002e0d0
   140029f36:	mov    rdi,rax
   140029f39:	lea    rcx,[rax+0x1]
   140029f3d:	call   0x140029d54
   140029f42:	mov    QWORD PTR [rsi+0x8],rax
   140029f46:	test   rax,rax
   140029f49:	je     0x140029f5e
   140029f4b:	lea    rdx,[rdi+0x1]
   140029f4f:	mov    r8,rbx
   140029f52:	mov    rcx,rax
   140029f55:	call   0x14002e728
   140029f5a:	mov    BYTE PTR [rsi+0x10],0x1
   140029f5e:	mov    rbx,QWORD PTR [rsp+0x30]
   140029f63:	mov    rsi,QWORD PTR [rsp+0x38]
   140029f68:	add    rsp,0x20
   140029f6c:	pop    rdi
   140029f6d:	ret    
   140029f6e:	int3   
   140029f6f:	int3   
   140029f70:	rex push rbx
   140029f72:	sub    rsp,0x20
   140029f76:	cmp    BYTE PTR [rcx+0x10],0x0
   140029f7a:	mov    rbx,rcx
   140029f7d:	je     0x140029f88
   140029f7f:	mov    rcx,QWORD PTR [rcx+0x8]
   140029f83:	call   0x1400273dc
   140029f88:	and    QWORD PTR [rbx+0x8],0x0
   140029f8d:	mov    BYTE PTR [rbx+0x10],0x0
   140029f91:	add    rsp,0x20
   140029f95:	pop    rbx
   140029f96:	ret    
   140029f97:	int3   
   140029f98:	cmp    QWORD PTR [rcx+0x8],0x0
   140029f9d:	lea    rax,[rip+0x185d4]        # 0x140042578
   140029fa4:	cmovne rax,QWORD PTR [rcx+0x8]
   140029fa9:	ret    
   140029faa:	int3   
   140029fab:	int3   
   140029fac:	rex push rbx
   140029fae:	sub    rsp,0x20
   140029fb2:	mov    rbx,rcx
   140029fb5:	mov    rcx,QWORD PTR [rip+0x3262c]        # 0x14005c5e8
   140029fbc:	call   QWORD PTR [rip+0x1743e]        # 0x140041400
   140029fc2:	test   rax,rax
   140029fc5:	je     0x140029fd7
   140029fc7:	mov    rcx,rbx
   140029fca:	call   rax
   140029fcc:	test   eax,eax
   140029fce:	je     0x140029fd7
   140029fd0:	mov    eax,0x1
   140029fd5:	jmp    0x140029fd9
   140029fd7:	xor    eax,eax
   140029fd9:	add    rsp,0x20
   140029fdd:	pop    rbx
   140029fde:	ret    
   140029fdf:	int3   
   140029fe0:	mov    QWORD PTR [rip+0x32601],rcx        # 0x14005c5e8
   140029fe7:	ret    
   140029fe8:	mov    QWORD PTR [rsp+0x10],rbx
   140029fed:	push   rbp
   140029fee:	mov    rbp,rsp
   140029ff1:	sub    rsp,0x60
   140029ff5:	mov    rax,QWORD PTR [rip+0x18594]        # 0x140042590
   140029ffc:	mov    rbx,rdx
   140029fff:	mov    rdx,rcx
   14002a002:	mov    QWORD PTR [rbp-0x40],rax
   14002a006:	mov    rax,QWORD PTR [rip+0x1858b]        # 0x140042598
   14002a00d:	mov    QWORD PTR [rbp-0x38],rax
   14002a011:	mov    rax,QWORD PTR [rip+0x18588]        # 0x1400425a0
   14002a018:	mov    QWORD PTR [rbp-0x30],rax
   14002a01c:	mov    rax,QWORD PTR [rip+0x18585]        # 0x1400425a8
   14002a023:	mov    QWORD PTR [rbp-0x28],rax
   14002a027:	mov    rax,QWORD PTR [rip+0x18582]        # 0x1400425b0
   14002a02e:	mov    QWORD PTR [rbp-0x20],rax
   14002a032:	mov    rax,QWORD PTR [rip+0x1857f]        # 0x1400425b8
   14002a039:	mov    QWORD PTR [rbp-0x18],rax
   14002a03d:	mov    rax,QWORD PTR [rip+0x1857c]        # 0x1400425c0
   14002a044:	mov    QWORD PTR [rbp-0x10],rax
   14002a048:	mov    rax,QWORD PTR [rip+0x18579]        # 0x1400425c8
   14002a04f:	mov    QWORD PTR [rbp-0x8],rax
   14002a053:	test   rbx,rbx
   14002a056:	je     0x14002a068
   14002a058:	test   BYTE PTR [rbx],0x10
   14002a05b:	je     0x14002a068
   14002a05d:	mov    rax,QWORD PTR [rcx]
   14002a060:	mov    rcx,QWORD PTR [rax-0x8]
   14002a064:	mov    rbx,QWORD PTR [rcx+0x30]
   14002a068:	mov    QWORD PTR [rbp-0x18],rdx
   14002a06c:	lea    rdx,[rbp+0x10]
   14002a070:	mov    rcx,rbx
   14002a073:	mov    QWORD PTR [rbp-0x10],rbx
   14002a077:	call   QWORD PTR [rip+0x1743b]        # 0x1400414b8
   14002a07d:	mov    rdx,rax
   14002a080:	mov    QWORD PTR [rbp+0x10],rax
   14002a084:	mov    QWORD PTR [rbp-0x8],rax
   14002a088:	test   rbx,rbx
   14002a08b:	je     0x14002a0a8
   14002a08d:	test   BYTE PTR [rbx],0x8
   14002a090:	mov    ecx,0x1994000
   14002a095:	je     0x14002a09c
   14002a097:	mov    DWORD PTR [rbp-0x20],ecx
   14002a09a:	jmp    0x14002a0a8
   14002a09c:	mov    eax,DWORD PTR [rbp-0x20]
   14002a09f:	test   rdx,rdx
   14002a0a2:	cmove  eax,ecx
   14002a0a5:	mov    DWORD PTR [rbp-0x20],eax
   14002a0a8:	mov    r8d,DWORD PTR [rbp-0x28]
   14002a0ac:	mov    edx,DWORD PTR [rbp-0x3c]
   14002a0af:	mov    ecx,DWORD PTR [rbp-0x40]
   14002a0b2:	lea    r9,[rbp-0x20]
   14002a0b6:	call   QWORD PTR [rip+0x172e4]        # 0x1400413a0
   14002a0bc:	mov    rbx,QWORD PTR [rsp+0x78]
   14002a0c1:	add    rsp,0x60
   14002a0c5:	pop    rbp
   14002a0c6:	ret    
   14002a0c7:	int3   
   14002a0c8:	lock inc DWORD PTR [rcx]
   14002a0cb:	mov    rax,QWORD PTR [rcx+0xd8]
   14002a0d2:	test   rax,rax
   14002a0d5:	je     0x14002a0da
   14002a0d7:	lock inc DWORD PTR [rax]
   14002a0da:	mov    rax,QWORD PTR [rcx+0xe8]
   14002a0e1:	test   rax,rax
   14002a0e4:	je     0x14002a0e9
   14002a0e6:	lock inc DWORD PTR [rax]
   14002a0e9:	mov    rax,QWORD PTR [rcx+0xe0]
   14002a0f0:	test   rax,rax
   14002a0f3:	je     0x14002a0f8
   14002a0f5:	lock inc DWORD PTR [rax]
   14002a0f8:	mov    rax,QWORD PTR [rcx+0xf8]
   14002a0ff:	test   rax,rax
   14002a102:	je     0x14002a107
   14002a104:	lock inc DWORD PTR [rax]
   14002a107:	lea    rax,[rcx+0x28]
   14002a10b:	mov    r8d,0x6
   14002a111:	lea    rdx,[rip+0x2f640]        # 0x140059758
   14002a118:	cmp    QWORD PTR [rax-0x10],rdx
   14002a11c:	je     0x14002a129
   14002a11e:	mov    rdx,QWORD PTR [rax]
   14002a121:	test   rdx,rdx
   14002a124:	je     0x14002a129
   14002a126:	lock inc DWORD PTR [rdx]
   14002a129:	cmp    QWORD PTR [rax-0x18],0x0
   14002a12e:	je     0x14002a13c
   14002a130:	mov    rdx,QWORD PTR [rax-0x8]
   14002a134:	test   rdx,rdx
   14002a137:	je     0x14002a13c
   14002a139:	lock inc DWORD PTR [rdx]
   14002a13c:	add    rax,0x20
   14002a140:	dec    r8
   14002a143:	jne    0x14002a111
   14002a145:	mov    rax,QWORD PTR [rcx+0x120]
   14002a14c:	lock inc DWORD PTR [rax+0x15c]
   14002a153:	ret    
   14002a154:	mov    QWORD PTR [rsp+0x8],rbx
   14002a159:	mov    QWORD PTR [rsp+0x10],rbp
   14002a15e:	mov    QWORD PTR [rsp+0x18],rsi
   14002a163:	push   rdi
   14002a164:	sub    rsp,0x20
   14002a168:	mov    rax,QWORD PTR [rcx+0xf0]
   14002a16f:	mov    rbx,rcx
   14002a172:	test   rax,rax
   14002a175:	je     0x14002a1f0
   14002a177:	lea    rcx,[rip+0x300a2]        # 0x14005a220
   14002a17e:	cmp    rax,rcx
   14002a181:	je     0x14002a1f0
   14002a183:	mov    rax,QWORD PTR [rbx+0xd8]
   14002a18a:	test   rax,rax
   14002a18d:	je     0x14002a1f0
   14002a18f:	cmp    DWORD PTR [rax],0x0
   14002a192:	jne    0x14002a1f0
   14002a194:	mov    rcx,QWORD PTR [rbx+0xe8]
   14002a19b:	test   rcx,rcx
   14002a19e:	je     0x14002a1b6
   14002a1a0:	cmp    DWORD PTR [rcx],0x0
   14002a1a3:	jne    0x14002a1b6
   14002a1a5:	call   0x1400273dc
   14002a1aa:	mov    rcx,QWORD PTR [rbx+0xf0]
   14002a1b1:	call   0x14002e78c
   14002a1b6:	mov    rcx,QWORD PTR [rbx+0xe0]
   14002a1bd:	test   rcx,rcx
   14002a1c0:	je     0x14002a1d8
   14002a1c2:	cmp    DWORD PTR [rcx],0x0
   14002a1c5:	jne    0x14002a1d8
   14002a1c7:	call   0x1400273dc
   14002a1cc:	mov    rcx,QWORD PTR [rbx+0xf0]
   14002a1d3:	call   0x14002e898
   14002a1d8:	mov    rcx,QWORD PTR [rbx+0xd8]
   14002a1df:	call   0x1400273dc
   14002a1e4:	mov    rcx,QWORD PTR [rbx+0xf0]
   14002a1eb:	call   0x1400273dc
   14002a1f0:	mov    rax,QWORD PTR [rbx+0xf8]
   14002a1f7:	test   rax,rax
   14002a1fa:	je     0x14002a243
   14002a1fc:	cmp    DWORD PTR [rax],0x0
   14002a1ff:	jne    0x14002a243
   14002a201:	mov    rcx,QWORD PTR [rbx+0x100]
   14002a208:	sub    rcx,0xfe
   14002a20f:	call   0x1400273dc
   14002a214:	mov    rcx,QWORD PTR [rbx+0x110]
   14002a21b:	mov    edi,0x80
   14002a220:	sub    rcx,rdi
   14002a223:	call   0x1400273dc
   14002a228:	mov    rcx,QWORD PTR [rbx+0x118]
   14002a22f:	sub    rcx,rdi
   14002a232:	call   0x1400273dc
   14002a237:	mov    rcx,QWORD PTR [rbx+0xf8]
   14002a23e:	call   0x1400273dc
   14002a243:	mov    rcx,QWORD PTR [rbx+0x120]
   14002a24a:	lea    rax,[rip+0x2f50f]        # 0x140059760
   14002a251:	cmp    rcx,rax
   14002a254:	je     0x14002a270
   14002a256:	cmp    DWORD PTR [rcx+0x15c],0x0
   14002a25d:	jne    0x14002a270
   14002a25f:	call   0x14002e904
   14002a264:	mov    rcx,QWORD PTR [rbx+0x120]
   14002a26b:	call   0x1400273dc
   14002a270:	lea    rsi,[rbx+0x128]
   14002a277:	lea    rdi,[rbx+0x28]
   14002a27b:	mov    ebp,0x6
   14002a280:	lea    rax,[rip+0x2f4d1]        # 0x140059758
   14002a287:	cmp    QWORD PTR [rdi-0x10],rax
   14002a28b:	je     0x14002a2a7
   14002a28d:	mov    rcx,QWORD PTR [rdi]
   14002a290:	test   rcx,rcx
   14002a293:	je     0x14002a2a7
   14002a295:	cmp    DWORD PTR [rcx],0x0
   14002a298:	jne    0x14002a2a7
   14002a29a:	call   0x1400273dc
   14002a29f:	mov    rcx,QWORD PTR [rsi]
   14002a2a2:	call   0x1400273dc
   14002a2a7:	cmp    QWORD PTR [rdi-0x18],0x0
   14002a2ac:	je     0x14002a2c1
   14002a2ae:	mov    rcx,QWORD PTR [rdi-0x8]
   14002a2b2:	test   rcx,rcx
   14002a2b5:	je     0x14002a2c1
   14002a2b7:	cmp    DWORD PTR [rcx],0x0
   14002a2ba:	jne    0x14002a2c1
   14002a2bc:	call   0x1400273dc
   14002a2c1:	add    rsi,0x8
   14002a2c5:	add    rdi,0x20
   14002a2c9:	dec    rbp
   14002a2cc:	jne    0x14002a280
   14002a2ce:	mov    rcx,rbx
   14002a2d1:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a2d6:	mov    rbp,QWORD PTR [rsp+0x38]
   14002a2db:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a2e0:	add    rsp,0x20
   14002a2e4:	pop    rdi
   14002a2e5:	jmp    0x1400273dc
   14002a2ea:	int3   
   14002a2eb:	int3   
   14002a2ec:	test   rcx,rcx
   14002a2ef:	je     0x14002a38c
   14002a2f5:	or     r9d,0xffffffff
   14002a2f9:	lock add DWORD PTR [rcx],r9d
   14002a2fd:	mov    rax,QWORD PTR [rcx+0xd8]
   14002a304:	test   rax,rax
   14002a307:	je     0x14002a30d
   14002a309:	lock add DWORD PTR [rax],r9d
   14002a30d:	mov    rax,QWORD PTR [rcx+0xe8]
   14002a314:	test   rax,rax
   14002a317:	je     0x14002a31d
   14002a319:	lock add DWORD PTR [rax],r9d
   14002a31d:	mov    rax,QWORD PTR [rcx+0xe0]
   14002a324:	test   rax,rax
   14002a327:	je     0x14002a32d
   14002a329:	lock add DWORD PTR [rax],r9d
   14002a32d:	mov    rax,QWORD PTR [rcx+0xf8]
   14002a334:	test   rax,rax
   14002a337:	je     0x14002a33d
   14002a339:	lock add DWORD PTR [rax],r9d
   14002a33d:	lea    rax,[rcx+0x28]
   14002a341:	mov    r8d,0x6
   14002a347:	lea    rdx,[rip+0x2f40a]        # 0x140059758
   14002a34e:	cmp    QWORD PTR [rax-0x10],rdx
   14002a352:	je     0x14002a360
   14002a354:	mov    rdx,QWORD PTR [rax]
   14002a357:	test   rdx,rdx
   14002a35a:	je     0x14002a360
   14002a35c:	lock add DWORD PTR [rdx],r9d
   14002a360:	cmp    QWORD PTR [rax-0x18],0x0
   14002a365:	je     0x14002a374
   14002a367:	mov    rdx,QWORD PTR [rax-0x8]
   14002a36b:	test   rdx,rdx
   14002a36e:	je     0x14002a374
   14002a370:	lock add DWORD PTR [rdx],r9d
   14002a374:	add    rax,0x20
   14002a378:	dec    r8
   14002a37b:	jne    0x14002a347
   14002a37d:	mov    rax,QWORD PTR [rcx+0x120]
   14002a384:	lock add DWORD PTR [rax+0x15c],r9d
   14002a38c:	mov    rax,rcx
   14002a38f:	ret    
   14002a390:	rex push rbx
   14002a392:	sub    rsp,0x20
   14002a396:	call   0x14002814c
   14002a39b:	mov    rbx,rax
   14002a39e:	mov    ecx,DWORD PTR [rip+0x2f7e8]        # 0x140059b8c
   14002a3a4:	test   DWORD PTR [rax+0xc8],ecx
   14002a3aa:	je     0x14002a3c4
   14002a3ac:	cmp    QWORD PTR [rax+0xc0],0x0
   14002a3b4:	je     0x14002a3c4
   14002a3b6:	call   0x14002814c
   14002a3bb:	mov    rbx,QWORD PTR [rax+0xc0]
   14002a3c2:	jmp    0x14002a3ef
   14002a3c4:	mov    ecx,0xc
   14002a3c9:	call   0x14002db4c
   14002a3ce:	nop
   14002a3cf:	lea    rcx,[rbx+0xc0]
   14002a3d6:	mov    rdx,QWORD PTR [rip+0x2f643]        # 0x140059a20
   14002a3dd:	call   0x14002a408
   14002a3e2:	mov    rbx,rax
   14002a3e5:	mov    ecx,0xc
   14002a3ea:	call   0x14002dd34
   14002a3ef:	test   rbx,rbx
   14002a3f2:	jne    0x14002a3fc
   14002a3f4:	lea    ecx,[rbx+0x20]
   14002a3f7:	call   0x1400283b0
   14002a3fc:	mov    rax,rbx
   14002a3ff:	add    rsp,0x20
   14002a403:	pop    rbx
   14002a404:	ret    
   14002a405:	int3   
   14002a406:	int3   
   14002a407:	int3   
   14002a408:	mov    QWORD PTR [rsp+0x8],rbx
   14002a40d:	push   rdi
   14002a40e:	sub    rsp,0x20
   14002a412:	mov    rdi,rdx
   14002a415:	test   rdx,rdx
   14002a418:	je     0x14002a45d
   14002a41a:	test   rcx,rcx
   14002a41d:	je     0x14002a45d
   14002a41f:	mov    rbx,QWORD PTR [rcx]
   14002a422:	cmp    rbx,rdx
   14002a425:	je     0x14002a458
   14002a427:	mov    QWORD PTR [rcx],rdx
   14002a42a:	mov    rcx,rdx
   14002a42d:	call   0x14002a0c8
   14002a432:	test   rbx,rbx
   14002a435:	je     0x14002a458
   14002a437:	mov    rcx,rbx
   14002a43a:	call   0x14002a2ec
   14002a43f:	cmp    DWORD PTR [rbx],0x0
   14002a442:	jne    0x14002a458
   14002a444:	lea    rax,[rip+0x2f5e5]        # 0x140059a30
   14002a44b:	cmp    rbx,rax
   14002a44e:	je     0x14002a458
   14002a450:	mov    rcx,rbx
   14002a453:	call   0x14002a154
   14002a458:	mov    rax,rdi
   14002a45b:	jmp    0x14002a45f
   14002a45d:	xor    eax,eax
   14002a45f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a464:	add    rsp,0x20
   14002a468:	pop    rdi
   14002a469:	ret    
   14002a46a:	int3   
   14002a46b:	int3   
   14002a46c:	sub    rsp,0x28
   14002a470:	cmp    DWORD PTR [rip+0x34701],0x0        # 0x14005eb78
   14002a477:	jne    0x14002a48d
   14002a479:	mov    ecx,0xfffffffd
   14002a47e:	call   0x14002a844
   14002a483:	mov    DWORD PTR [rip+0x346eb],0x1        # 0x14005eb78
   14002a48d:	xor    eax,eax
   14002a48f:	add    rsp,0x28
   14002a493:	ret    
   14002a494:	rex push rbx
   14002a496:	sub    rsp,0x40
   14002a49a:	mov    ebx,ecx
   14002a49c:	lea    rcx,[rsp+0x20]
   14002a4a1:	xor    edx,edx
   14002a4a3:	call   0x140026f30
   14002a4a8:	and    DWORD PTR [rip+0x3215d],0x0        # 0x14005c60c
   14002a4af:	cmp    ebx,0xfffffffe
   14002a4b2:	jne    0x14002a4c6
   14002a4b4:	mov    DWORD PTR [rip+0x3214e],0x1        # 0x14005c60c
   14002a4be:	call   QWORD PTR [rip+0x1700c]        # 0x1400414d0
   14002a4c4:	jmp    0x14002a4db
   14002a4c6:	cmp    ebx,0xfffffffd
   14002a4c9:	jne    0x14002a4df
   14002a4cb:	mov    DWORD PTR [rip+0x32137],0x1        # 0x14005c60c
   14002a4d5:	call   QWORD PTR [rip+0x16fed]        # 0x1400414c8
   14002a4db:	mov    ebx,eax
   14002a4dd:	jmp    0x14002a4f6
   14002a4df:	cmp    ebx,0xfffffffc
   14002a4e2:	jne    0x14002a4f6
   14002a4e4:	mov    rax,QWORD PTR [rsp+0x20]
   14002a4e9:	mov    DWORD PTR [rip+0x32119],0x1        # 0x14005c60c
   14002a4f3:	mov    ebx,DWORD PTR [rax+0x4]
   14002a4f6:	cmp    BYTE PTR [rsp+0x38],0x0
   14002a4fb:	je     0x14002a509
   14002a4fd:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a502:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a509:	mov    eax,ebx
   14002a50b:	add    rsp,0x40
   14002a50f:	pop    rbx
   14002a510:	ret    
   14002a511:	int3   
   14002a512:	int3   
   14002a513:	int3   
   14002a514:	mov    QWORD PTR [rsp+0x8],rbx
   14002a519:	mov    QWORD PTR [rsp+0x10],rbp
   14002a51e:	mov    QWORD PTR [rsp+0x18],rsi
   14002a523:	push   rdi
   14002a524:	sub    rsp,0x20
   14002a528:	lea    rbx,[rcx+0x18]
   14002a52c:	mov    rsi,rcx
   14002a52f:	mov    ebp,0x101
   14002a534:	mov    rcx,rbx
   14002a537:	mov    r8d,ebp
   14002a53a:	xor    edx,edx
   14002a53c:	call   0x14002bb90
   14002a541:	xor    eax,eax
   14002a543:	lea    rdi,[rsi+0xc]
   14002a547:	mov    QWORD PTR [rsi+0x4],rax
   14002a54b:	mov    QWORD PTR [rsi+0x220],rax
   14002a552:	mov    ecx,0x6
   14002a557:	movzx  eax,ax
   14002a55a:	rep stos WORD PTR es:[rdi],ax
   14002a55d:	lea    rdi,[rip+0x2efcc]        # 0x140059530
   14002a564:	sub    rdi,rsi
   14002a567:	mov    al,BYTE PTR [rdi+rbx*1]
   14002a56a:	mov    BYTE PTR [rbx],al
   14002a56c:	inc    rbx
   14002a56f:	dec    rbp
   14002a572:	jne    0x14002a567
   14002a574:	lea    rcx,[rsi+0x119]
   14002a57b:	mov    edx,0x100
   14002a580:	mov    al,BYTE PTR [rcx+rdi*1]
   14002a583:	mov    BYTE PTR [rcx],al
   14002a585:	inc    rcx
   14002a588:	dec    rdx
   14002a58b:	jne    0x14002a580
   14002a58d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a592:	mov    rbp,QWORD PTR [rsp+0x38]
   14002a597:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a59c:	add    rsp,0x20
   14002a5a0:	pop    rdi
   14002a5a1:	ret    
   14002a5a2:	int3   
   14002a5a3:	int3   
   14002a5a4:	mov    QWORD PTR [rsp+0x10],rbx
   14002a5a9:	mov    QWORD PTR [rsp+0x18],rdi
   14002a5ae:	push   rbp
   14002a5af:	lea    rbp,[rsp-0x480]
   14002a5b7:	sub    rsp,0x580
   14002a5be:	mov    rax,QWORD PTR [rip+0x2eac3]        # 0x140059088
   14002a5c5:	xor    rax,rsp
   14002a5c8:	mov    QWORD PTR [rbp+0x470],rax
   14002a5cf:	mov    rdi,rcx
   14002a5d2:	mov    ecx,DWORD PTR [rcx+0x4]
   14002a5d5:	lea    rdx,[rsp+0x50]
   14002a5da:	call   QWORD PTR [rip+0x16ef8]        # 0x1400414d8
   14002a5e0:	mov    ebx,0x100
   14002a5e5:	test   eax,eax
   14002a5e7:	je     0x14002a722
   14002a5ed:	xor    eax,eax
   14002a5ef:	lea    rcx,[rsp+0x70]
   14002a5f4:	mov    BYTE PTR [rcx],al
   14002a5f6:	inc    eax
   14002a5f8:	inc    rcx
   14002a5fb:	cmp    eax,ebx
   14002a5fd:	jb     0x14002a5f4
   14002a5ff:	mov    al,BYTE PTR [rsp+0x56]
   14002a603:	mov    BYTE PTR [rsp+0x70],0x20
   14002a608:	lea    rdx,[rsp+0x56]
   14002a60d:	jmp    0x14002a631
   14002a60f:	movzx  r8d,BYTE PTR [rdx+0x1]
   14002a614:	movzx  ecx,al
   14002a617:	jmp    0x14002a626
   14002a619:	cmp    ecx,ebx
   14002a61b:	jae    0x14002a62b
   14002a61d:	mov    eax,ecx
   14002a61f:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   14002a624:	inc    ecx
   14002a626:	cmp    ecx,r8d
   14002a629:	jbe    0x14002a619
   14002a62b:	add    rdx,0x2
   14002a62f:	mov    al,BYTE PTR [rdx]
   14002a631:	test   al,al
   14002a633:	jne    0x14002a60f
   14002a635:	mov    eax,DWORD PTR [rdi+0x4]
   14002a638:	and    DWORD PTR [rsp+0x30],0x0
   14002a63d:	lea    r8,[rsp+0x70]
   14002a642:	mov    DWORD PTR [rsp+0x28],eax
   14002a646:	lea    rax,[rbp+0x270]
   14002a64d:	mov    r9d,ebx
   14002a650:	mov    edx,0x1
   14002a655:	xor    ecx,ecx
   14002a657:	mov    QWORD PTR [rsp+0x20],rax
   14002a65c:	call   0x14002f1d0
   14002a661:	and    DWORD PTR [rsp+0x40],0x0
   14002a666:	mov    eax,DWORD PTR [rdi+0x4]
   14002a669:	mov    rdx,QWORD PTR [rdi+0x220]
   14002a670:	mov    DWORD PTR [rsp+0x38],eax
   14002a674:	lea    rax,[rbp+0x70]
   14002a678:	mov    DWORD PTR [rsp+0x30],ebx
   14002a67c:	mov    QWORD PTR [rsp+0x28],rax
   14002a681:	lea    r9,[rsp+0x70]
   14002a686:	mov    r8d,ebx
   14002a689:	xor    ecx,ecx
   14002a68b:	mov    DWORD PTR [rsp+0x20],ebx
   14002a68f:	call   0x14002efd0
   14002a694:	and    DWORD PTR [rsp+0x40],0x0
   14002a699:	mov    eax,DWORD PTR [rdi+0x4]
   14002a69c:	mov    rdx,QWORD PTR [rdi+0x220]
   14002a6a3:	mov    DWORD PTR [rsp+0x38],eax
   14002a6a7:	lea    rax,[rbp+0x170]
   14002a6ae:	mov    DWORD PTR [rsp+0x30],ebx
   14002a6b2:	mov    QWORD PTR [rsp+0x28],rax
   14002a6b7:	lea    r9,[rsp+0x70]
   14002a6bc:	mov    r8d,0x200
   14002a6c2:	xor    ecx,ecx
   14002a6c4:	mov    DWORD PTR [rsp+0x20],ebx
   14002a6c8:	call   0x14002efd0
   14002a6cd:	lea    r8,[rbp+0x70]
   14002a6d1:	lea    r9,[rbp+0x170]
   14002a6d8:	sub    r8,rdi
   14002a6db:	lea    rdx,[rbp+0x270]
   14002a6e2:	lea    rcx,[rdi+0x19]
   14002a6e6:	sub    r9,rdi
   14002a6e9:	test   BYTE PTR [rdx],0x1
   14002a6ec:	je     0x14002a6f8
   14002a6ee:	or     BYTE PTR [rcx],0x10
   14002a6f1:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14002a6f6:	jmp    0x14002a705
   14002a6f8:	test   BYTE PTR [rdx],0x2
   14002a6fb:	je     0x14002a70d
   14002a6fd:	or     BYTE PTR [rcx],0x20
   14002a700:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   14002a705:	mov    BYTE PTR [rcx+0x100],al
   14002a70b:	jmp    0x14002a714
   14002a70d:	mov    BYTE PTR [rcx+0x100],0x0
   14002a714:	inc    rcx
   14002a717:	add    rdx,0x2
   14002a71b:	dec    rbx
   14002a71e:	jne    0x14002a6e9
   14002a720:	jmp    0x14002a761
   14002a722:	xor    edx,edx
   14002a724:	lea    rcx,[rdi+0x19]
   14002a728:	lea    r8d,[rdx-0x61]
   14002a72c:	lea    eax,[r8+0x20]
   14002a730:	cmp    eax,0x19
   14002a733:	ja     0x14002a73d
   14002a735:	or     BYTE PTR [rcx],0x10
   14002a738:	lea    eax,[rdx+0x20]
   14002a73b:	jmp    0x14002a749
   14002a73d:	cmp    r8d,0x19
   14002a741:	ja     0x14002a751
   14002a743:	or     BYTE PTR [rcx],0x20
   14002a746:	lea    eax,[rdx-0x20]
   14002a749:	mov    BYTE PTR [rcx+0x100],al
   14002a74f:	jmp    0x14002a758
   14002a751:	mov    BYTE PTR [rcx+0x100],0x0
   14002a758:	inc    edx
   14002a75a:	inc    rcx
   14002a75d:	cmp    edx,ebx
   14002a75f:	jb     0x14002a728
   14002a761:	mov    rcx,QWORD PTR [rbp+0x470]
   14002a768:	xor    rcx,rsp
   14002a76b:	call   0x1400265a0
   14002a770:	lea    r11,[rsp+0x580]
   14002a778:	mov    rbx,QWORD PTR [r11+0x18]
   14002a77c:	mov    rdi,QWORD PTR [r11+0x20]
   14002a780:	mov    rsp,r11
   14002a783:	pop    rbp
   14002a784:	ret    
   14002a785:	int3   
   14002a786:	int3   
   14002a787:	int3   
   14002a788:	mov    QWORD PTR [rsp+0x10],rbx
   14002a78d:	push   rdi
   14002a78e:	sub    rsp,0x20
   14002a792:	call   0x14002814c
   14002a797:	mov    rdi,rax
   14002a79a:	mov    ecx,DWORD PTR [rip+0x2f3ec]        # 0x140059b8c
   14002a7a0:	test   DWORD PTR [rax+0xc8],ecx
   14002a7a6:	je     0x14002a7bb
   14002a7a8:	cmp    QWORD PTR [rax+0xc0],0x0
   14002a7b0:	je     0x14002a7bb
   14002a7b2:	mov    rbx,QWORD PTR [rax+0xb8]
   14002a7b9:	jmp    0x14002a827
   14002a7bb:	mov    ecx,0xd
   14002a7c0:	call   0x14002db4c
   14002a7c5:	nop
   14002a7c6:	mov    rbx,QWORD PTR [rdi+0xb8]
   14002a7cd:	mov    QWORD PTR [rsp+0x30],rbx
   14002a7d2:	cmp    rbx,QWORD PTR [rip+0x2ec4f]        # 0x140059428
   14002a7d9:	je     0x14002a81d
   14002a7db:	test   rbx,rbx
   14002a7de:	je     0x14002a7fb
   14002a7e0:	lock dec DWORD PTR [rbx]
   14002a7e3:	jne    0x14002a7fb
   14002a7e5:	lea    rax,[rip+0x2ed44]        # 0x140059530
   14002a7ec:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a7f1:	cmp    rcx,rax
   14002a7f4:	je     0x14002a7fb
   14002a7f6:	call   0x1400273dc
   14002a7fb:	mov    rax,QWORD PTR [rip+0x2ec26]        # 0x140059428
   14002a802:	mov    QWORD PTR [rdi+0xb8],rax
   14002a809:	mov    rax,QWORD PTR [rip+0x2ec18]        # 0x140059428
   14002a810:	mov    QWORD PTR [rsp+0x30],rax
   14002a815:	lock inc DWORD PTR [rax]
   14002a818:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a81d:	mov    ecx,0xd
   14002a822:	call   0x14002dd34
   14002a827:	test   rbx,rbx
   14002a82a:	jne    0x14002a834
   14002a82c:	lea    ecx,[rbx+0x20]
   14002a82f:	call   0x1400283b0
   14002a834:	mov    rax,rbx
   14002a837:	mov    rbx,QWORD PTR [rsp+0x38]
   14002a83c:	add    rsp,0x20
   14002a840:	pop    rdi
   14002a841:	ret    
   14002a842:	int3   
   14002a843:	int3   
   14002a844:	mov    rax,rsp
   14002a847:	mov    QWORD PTR [rax+0x8],rbx
   14002a84b:	mov    QWORD PTR [rax+0x10],rsi
   14002a84f:	mov    QWORD PTR [rax+0x18],rdi
   14002a853:	mov    QWORD PTR [rax+0x20],r14
   14002a857:	push   r15
   14002a859:	sub    rsp,0x30
   14002a85d:	mov    edi,ecx
   14002a85f:	or     r15d,0xffffffff
   14002a863:	call   0x14002814c
   14002a868:	mov    rsi,rax
   14002a86b:	call   0x14002a788
   14002a870:	mov    rbx,QWORD PTR [rsi+0xb8]
   14002a877:	mov    ecx,edi
   14002a879:	call   0x14002a494
   14002a87e:	mov    r14d,eax
   14002a881:	cmp    eax,DWORD PTR [rbx+0x4]
   14002a884:	je     0x14002aa7d
   14002a88a:	mov    ecx,0x228
   14002a88f:	call   0x1400297c4
   14002a894:	mov    rbx,rax
   14002a897:	xor    edi,edi
   14002a899:	test   rax,rax
   14002a89c:	je     0x14002aa82
   14002a8a2:	mov    rdx,QWORD PTR [rsi+0xb8]
   14002a8a9:	mov    rcx,rax
   14002a8ac:	mov    rax,rdx
   14002a8af:	or     rax,rcx
   14002a8b2:	and    eax,0xf
   14002a8b5:	jne    0x14002a91f
   14002a8b7:	lea    eax,[rdi+0x4]
   14002a8ba:	lea    r8d,[rax+0x7c]
   14002a8be:	movaps xmm0,XMMWORD PTR [rdx]
   14002a8c1:	movaps XMMWORD PTR [rcx],xmm0
   14002a8c4:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   14002a8c8:	movaps XMMWORD PTR [rcx+0x10],xmm1
   14002a8cc:	movaps xmm0,XMMWORD PTR [rdx+0x20]
   14002a8d0:	movaps XMMWORD PTR [rcx+0x20],xmm0
   14002a8d4:	movaps xmm1,XMMWORD PTR [rdx+0x30]
   14002a8d8:	movaps XMMWORD PTR [rcx+0x30],xmm1
   14002a8dc:	movaps xmm0,XMMWORD PTR [rdx+0x40]
   14002a8e0:	movaps XMMWORD PTR [rcx+0x40],xmm0
   14002a8e4:	movaps xmm1,XMMWORD PTR [rdx+0x50]
   14002a8e8:	movaps XMMWORD PTR [rcx+0x50],xmm1
   14002a8ec:	movaps xmm0,XMMWORD PTR [rdx+0x60]
   14002a8f0:	movaps XMMWORD PTR [rcx+0x60],xmm0
   14002a8f4:	add    rcx,r8
   14002a8f7:	movaps xmm1,XMMWORD PTR [rdx+0x70]
   14002a8fb:	movaps XMMWORD PTR [rcx-0x10],xmm1
   14002a8ff:	add    rdx,r8
   14002a902:	dec    rax
   14002a905:	jne    0x14002a8be
   14002a907:	movaps xmm0,XMMWORD PTR [rdx]
   14002a90a:	movaps XMMWORD PTR [rcx],xmm0
   14002a90d:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   14002a911:	movaps XMMWORD PTR [rcx+0x10],xmm1
   14002a915:	mov    rax,QWORD PTR [rdx+0x20]
   14002a919:	mov    QWORD PTR [rcx+0x20],rax
   14002a91d:	jmp    0x14002a92a
   14002a91f:	mov    r8d,0x228
   14002a925:	call   0x1400265d0
   14002a92a:	mov    DWORD PTR [rbx],edi
   14002a92c:	mov    rdx,rbx
   14002a92f:	mov    ecx,r14d
   14002a932:	call   0x14002aaa0
   14002a937:	mov    r15d,eax
   14002a93a:	test   eax,eax
   14002a93c:	jne    0x14002aa57
   14002a942:	mov    rcx,QWORD PTR [rsi+0xb8]
   14002a949:	lea    r14,[rip+0x2ebe0]        # 0x140059530
   14002a950:	lock dec DWORD PTR [rcx]
   14002a953:	jne    0x14002a966
   14002a955:	mov    rcx,QWORD PTR [rsi+0xb8]
   14002a95c:	cmp    rcx,r14
   14002a95f:	je     0x14002a966
   14002a961:	call   0x1400273dc
   14002a966:	mov    QWORD PTR [rsi+0xb8],rbx
   14002a96d:	lock inc DWORD PTR [rbx]
   14002a970:	test   BYTE PTR [rsi+0xc8],0x2
   14002a977:	jne    0x14002aa82
   14002a97d:	test   BYTE PTR [rip+0x2f208],0x1        # 0x140059b8c
   14002a984:	jne    0x14002aa82
   14002a98a:	mov    esi,0xd
   14002a98f:	mov    ecx,esi
   14002a991:	call   0x14002db4c
   14002a996:	nop
   14002a997:	mov    eax,DWORD PTR [rbx+0x4]
   14002a99a:	mov    DWORD PTR [rip+0x31c58],eax        # 0x14005c5f8
   14002a9a0:	mov    eax,DWORD PTR [rbx+0x8]
   14002a9a3:	mov    DWORD PTR [rip+0x31c53],eax        # 0x14005c5fc
   14002a9a9:	mov    rax,QWORD PTR [rbx+0x220]
   14002a9b0:	mov    QWORD PTR [rip+0x31c39],rax        # 0x14005c5f0
   14002a9b7:	mov    edx,edi
   14002a9b9:	lea    r8,[rip+0xfffffffffffd5640]        # 0x140000000
   14002a9c0:	mov    DWORD PTR [rsp+0x20],edx
   14002a9c4:	cmp    edx,0x5
   14002a9c7:	jge    0x14002a9de
   14002a9c9:	movsxd rcx,edx
   14002a9cc:	movzx  eax,WORD PTR [rbx+rcx*2+0xc]
   14002a9d1:	mov    WORD PTR [r8+rcx*2+0x5c600],ax
   14002a9da:	inc    edx
   14002a9dc:	jmp    0x14002a9c0
   14002a9de:	mov    edx,edi
   14002a9e0:	mov    DWORD PTR [rsp+0x20],edx
   14002a9e4:	cmp    edx,0x101
   14002a9ea:	jge    0x14002a9ff
   14002a9ec:	movsxd rcx,edx
   14002a9ef:	mov    al,BYTE PTR [rcx+rbx*1+0x18]
   14002a9f3:	mov    BYTE PTR [rcx+r8*1+0x59320],al
   14002a9fb:	inc    edx
   14002a9fd:	jmp    0x14002a9e0
   14002a9ff:	mov    DWORD PTR [rsp+0x20],edi
   14002aa03:	cmp    edi,0x100
   14002aa09:	jge    0x14002aa21
   14002aa0b:	movsxd rcx,edi
   14002aa0e:	mov    al,BYTE PTR [rcx+rbx*1+0x119]
   14002aa15:	mov    BYTE PTR [rcx+r8*1+0x59430],al
   14002aa1d:	inc    edi
   14002aa1f:	jmp    0x14002a9ff
   14002aa21:	mov    rcx,QWORD PTR [rip+0x2ea00]        # 0x140059428
   14002aa28:	or     eax,0xffffffff
   14002aa2b:	lock xadd DWORD PTR [rcx],eax
   14002aa2f:	dec    eax
   14002aa31:	jne    0x14002aa44
   14002aa33:	mov    rcx,QWORD PTR [rip+0x2e9ee]        # 0x140059428
   14002aa3a:	cmp    rcx,r14
   14002aa3d:	je     0x14002aa44
   14002aa3f:	call   0x1400273dc
   14002aa44:	mov    QWORD PTR [rip+0x2e9dd],rbx        # 0x140059428
   14002aa4b:	lock inc DWORD PTR [rbx]
   14002aa4e:	mov    ecx,esi
   14002aa50:	call   0x14002dd34
   14002aa55:	jmp    0x14002aa82
   14002aa57:	cmp    eax,0xffffffff
   14002aa5a:	jne    0x14002aa82
   14002aa5c:	lea    r14,[rip+0x2eacd]        # 0x140059530
   14002aa63:	cmp    rbx,r14
   14002aa66:	je     0x14002aa70
   14002aa68:	mov    rcx,rbx
   14002aa6b:	call   0x1400273dc
   14002aa70:	call   0x140029bf8
   14002aa75:	mov    DWORD PTR [rax],0x16
   14002aa7b:	jmp    0x14002aa82
   14002aa7d:	xor    edi,edi
   14002aa7f:	mov    r15d,edi
   14002aa82:	mov    eax,r15d
   14002aa85:	mov    rbx,QWORD PTR [rsp+0x40]
   14002aa8a:	mov    rsi,QWORD PTR [rsp+0x48]
   14002aa8f:	mov    rdi,QWORD PTR [rsp+0x50]
   14002aa94:	mov    r14,QWORD PTR [rsp+0x58]
   14002aa99:	add    rsp,0x30
   14002aa9d:	pop    r15
   14002aa9f:	ret    
   14002aaa0:	mov    QWORD PTR [rsp+0x18],rbx
   14002aaa5:	mov    QWORD PTR [rsp+0x20],rbp
   14002aaaa:	push   rsi
   14002aaab:	push   rdi
   14002aaac:	push   r12
   14002aaae:	push   r14
   14002aab0:	push   r15
   14002aab2:	sub    rsp,0x40
   14002aab6:	mov    rax,QWORD PTR [rip+0x2e5cb]        # 0x140059088
   14002aabd:	xor    rax,rsp
   14002aac0:	mov    QWORD PTR [rsp+0x38],rax
   14002aac5:	mov    rbx,rdx
   14002aac8:	call   0x14002a494
   14002aacd:	xor    esi,esi
   14002aacf:	mov    edi,eax
   14002aad1:	test   eax,eax
   14002aad3:	jne    0x14002aae2
   14002aad5:	mov    rcx,rbx
   14002aad8:	call   0x14002a514
   14002aadd:	jmp    0x14002ad26
   14002aae2:	lea    r12,[rip+0x2e747]        # 0x140059230
   14002aae9:	mov    ebp,esi
   14002aaeb:	mov    r15d,0x1
   14002aaf1:	mov    rax,r12
   14002aaf4:	cmp    DWORD PTR [rax],edi
   14002aaf6:	je     0x14002ac34
   14002aafc:	add    ebp,r15d
   14002aaff:	add    rax,0x30
   14002ab03:	cmp    ebp,0x5
   14002ab06:	jb     0x14002aaf4
   14002ab08:	lea    eax,[rdi-0xfde8]
   14002ab0e:	cmp    eax,r15d
   14002ab11:	jbe    0x14002ac2c
   14002ab17:	movzx  ecx,di
   14002ab1a:	call   QWORD PTR [rip+0x169a0]        # 0x1400414c0
   14002ab20:	test   eax,eax
   14002ab22:	je     0x14002ac2c
   14002ab28:	lea    rdx,[rsp+0x20]
   14002ab2d:	mov    ecx,edi
   14002ab2f:	call   QWORD PTR [rip+0x169a3]        # 0x1400414d8
   14002ab35:	test   eax,eax
   14002ab37:	je     0x14002ac20
   14002ab3d:	lea    rcx,[rbx+0x18]
   14002ab41:	xor    edx,edx
   14002ab43:	mov    r8d,0x101
   14002ab49:	call   0x14002bb90
   14002ab4e:	mov    DWORD PTR [rbx+0x4],edi
   14002ab51:	mov    QWORD PTR [rbx+0x220],rsi
   14002ab58:	cmp    DWORD PTR [rsp+0x20],r15d
   14002ab5d:	jbe    0x14002ac09
   14002ab63:	lea    rdx,[rsp+0x26]
   14002ab68:	cmp    BYTE PTR [rsp+0x26],sil
   14002ab6d:	je     0x14002aba8
   14002ab6f:	cmp    BYTE PTR [rdx+0x1],sil
   14002ab73:	je     0x14002aba8
   14002ab75:	movzx  r8d,BYTE PTR [rdx]
   14002ab79:	movzx  edi,BYTE PTR [rdx+0x1]
   14002ab7d:	cmp    r8d,edi
   14002ab80:	ja     0x14002ab9f
   14002ab82:	lea    ecx,[r8+0x1]
   14002ab86:	lea    rax,[rbx+0x18]
   14002ab8a:	add    rax,rcx
   14002ab8d:	sub    edi,r8d
   14002ab90:	lea    ecx,[r15+rdi*1]
   14002ab94:	or     BYTE PTR [rax],0x4
   14002ab97:	add    rax,r15
   14002ab9a:	sub    rcx,r15
   14002ab9d:	jne    0x14002ab94
   14002ab9f:	add    rdx,0x2
   14002aba3:	cmp    BYTE PTR [rdx],sil
   14002aba6:	jne    0x14002ab6f
   14002aba8:	lea    rax,[rbx+0x1a]
   14002abac:	mov    ecx,0xfe
   14002abb1:	or     BYTE PTR [rax],0x8
   14002abb4:	add    rax,r15
   14002abb7:	sub    rcx,r15
   14002abba:	jne    0x14002abb1
   14002abbc:	mov    ecx,DWORD PTR [rbx+0x4]
   14002abbf:	sub    ecx,0x3a4
   14002abc5:	je     0x14002abf5
   14002abc7:	sub    ecx,0x4
   14002abca:	je     0x14002abec
   14002abcc:	sub    ecx,0xd
   14002abcf:	je     0x14002abe3
   14002abd1:	dec    ecx
   14002abd3:	je     0x14002abda
   14002abd5:	mov    rax,rsi
   14002abd8:	jmp    0x14002abfc
   14002abda:	mov    rax,QWORD PTR [rip+0x17a07]        # 0x1400425e8
   14002abe1:	jmp    0x14002abfc
   14002abe3:	mov    rax,QWORD PTR [rip+0x179f6]        # 0x1400425e0
   14002abea:	jmp    0x14002abfc
   14002abec:	mov    rax,QWORD PTR [rip+0x179e5]        # 0x1400425d8
   14002abf3:	jmp    0x14002abfc
   14002abf5:	mov    rax,QWORD PTR [rip+0x179d4]        # 0x1400425d0
   14002abfc:	mov    QWORD PTR [rbx+0x220],rax
   14002ac03:	mov    DWORD PTR [rbx+0x8],r15d
   14002ac07:	jmp    0x14002ac0c
   14002ac09:	mov    DWORD PTR [rbx+0x8],esi
   14002ac0c:	lea    rdi,[rbx+0xc]
   14002ac10:	movzx  eax,si
   14002ac13:	mov    ecx,0x6
   14002ac18:	rep stos WORD PTR es:[rdi],ax
   14002ac1b:	jmp    0x14002ad1e
   14002ac20:	cmp    DWORD PTR [rip+0x319e6],esi        # 0x14005c60c
   14002ac26:	jne    0x14002aad5
   14002ac2c:	or     eax,0xffffffff
   14002ac2f:	jmp    0x14002ad28
   14002ac34:	lea    rcx,[rbx+0x18]
   14002ac38:	xor    edx,edx
   14002ac3a:	mov    r8d,0x101
   14002ac40:	call   0x14002bb90
   14002ac45:	mov    eax,ebp
   14002ac47:	lea    r9,[r12+0x10]
   14002ac4c:	lea    r11,[rax+rax*2]
   14002ac50:	lea    r14,[rip+0x2e5c9]        # 0x140059220
   14002ac57:	mov    ebp,0x4
   14002ac5c:	shl    r11,0x4
   14002ac60:	add    r9,r11
   14002ac63:	mov    rdx,r9
   14002ac66:	cmp    BYTE PTR [r9],sil
   14002ac69:	je     0x14002acab
   14002ac6b:	cmp    BYTE PTR [rdx+0x1],sil
   14002ac6f:	je     0x14002acab
   14002ac71:	movzx  r8d,BYTE PTR [rdx]
   14002ac75:	movzx  eax,BYTE PTR [rdx+0x1]
   14002ac79:	cmp    r8d,eax
   14002ac7c:	ja     0x14002aca2
   14002ac7e:	lea    r10d,[r8+0x1]
   14002ac82:	cmp    r10d,0x101
   14002ac89:	jae    0x14002aca2
   14002ac8b:	mov    al,BYTE PTR [r14]
   14002ac8e:	add    r8d,r15d
   14002ac91:	or     BYTE PTR [r10+rbx*1+0x18],al
   14002ac96:	movzx  eax,BYTE PTR [rdx+0x1]
   14002ac9a:	add    r10d,r15d
   14002ac9d:	cmp    r8d,eax
   14002aca0:	jbe    0x14002ac82
   14002aca2:	add    rdx,0x2
   14002aca6:	cmp    BYTE PTR [rdx],sil
   14002aca9:	jne    0x14002ac6b
   14002acab:	add    r9,0x8
   14002acaf:	add    r14,r15
   14002acb2:	sub    rbp,r15
   14002acb5:	jne    0x14002ac63
   14002acb7:	mov    DWORD PTR [rbx+0x4],edi
   14002acba:	mov    DWORD PTR [rbx+0x8],r15d
   14002acbe:	sub    edi,0x3a4
   14002acc4:	je     0x14002acef
   14002acc6:	sub    edi,0x4
   14002acc9:	je     0x14002ace6
   14002accb:	sub    edi,0xd
   14002acce:	je     0x14002acdd
   14002acd0:	dec    edi
   14002acd2:	jne    0x14002acf6
   14002acd4:	mov    rsi,QWORD PTR [rip+0x1790d]        # 0x1400425e8
   14002acdb:	jmp    0x14002acf6
   14002acdd:	mov    rsi,QWORD PTR [rip+0x178fc]        # 0x1400425e0
   14002ace4:	jmp    0x14002acf6
   14002ace6:	mov    rsi,QWORD PTR [rip+0x178eb]        # 0x1400425d8
   14002aced:	jmp    0x14002acf6
   14002acef:	mov    rsi,QWORD PTR [rip+0x178da]        # 0x1400425d0
   14002acf6:	sub    r11,rbx
   14002acf9:	mov    QWORD PTR [rbx+0x220],rsi
   14002ad00:	lea    rcx,[rbx+0xc]
   14002ad04:	lea    rdi,[r11+r12*1]
   14002ad08:	mov    edx,0x6
   14002ad0d:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14002ad12:	mov    WORD PTR [rcx],ax
   14002ad15:	lea    rcx,[rcx+0x2]
   14002ad19:	sub    rdx,r15
   14002ad1c:	jne    0x14002ad0d
   14002ad1e:	mov    rcx,rbx
   14002ad21:	call   0x14002a5a4
   14002ad26:	xor    eax,eax
   14002ad28:	mov    rcx,QWORD PTR [rsp+0x38]
   14002ad2d:	xor    rcx,rsp
   14002ad30:	call   0x1400265a0
   14002ad35:	lea    r11,[rsp+0x40]
   14002ad3a:	mov    rbx,QWORD PTR [r11+0x40]
   14002ad3e:	mov    rbp,QWORD PTR [r11+0x48]
   14002ad42:	mov    rsp,r11
   14002ad45:	pop    r15
   14002ad47:	pop    r14
   14002ad49:	pop    r12
   14002ad4b:	pop    rdi
   14002ad4c:	pop    rsi
   14002ad4d:	ret    
   14002ad4e:	int3   
   14002ad4f:	int3   
   14002ad50:	mov    QWORD PTR [rsp+0x10],rbx
   14002ad55:	mov    WORD PTR [rsp+0x8],cx
   14002ad5a:	push   rbp
   14002ad5b:	mov    rbp,rsp
   14002ad5e:	sub    rsp,0x50
   14002ad62:	mov    eax,0xffff
   14002ad67:	cmp    cx,ax
   14002ad6a:	je     0x14002ae0f
   14002ad70:	lea    rcx,[rbp-0x20]
   14002ad74:	call   0x140026f30
   14002ad79:	mov    rbx,QWORD PTR [rbp-0x20]
   14002ad7d:	mov    rax,QWORD PTR [rbx+0x138]
   14002ad84:	test   rax,rax
   14002ad87:	jne    0x14002ad9c
   14002ad89:	movzx  edx,WORD PTR [rbp+0x10]
   14002ad8d:	lea    eax,[rdx-0x41]
   14002ad90:	cmp    ax,0x19
   14002ad94:	ja     0x14002adfb
   14002ad96:	add    dx,0x20
   14002ad9a:	jmp    0x14002adfb
   14002ad9c:	movzx  ecx,WORD PTR [rbp+0x10]
   14002ada0:	mov    edx,0x100
   14002ada5:	cmp    cx,dx
   14002ada8:	jae    0x14002adcf
   14002adaa:	mov    edx,0x1
   14002adaf:	call   0x14002bc9c
   14002adb4:	test   eax,eax
   14002adb6:	jne    0x14002adbe
   14002adb8:	movzx  edx,WORD PTR [rbp+0x10]
   14002adbc:	jmp    0x14002adfb
   14002adbe:	movzx  ecx,WORD PTR [rbp+0x10]
   14002adc2:	mov    rax,QWORD PTR [rbx+0x110]
   14002adc9:	movzx  edx,BYTE PTR [rax+rcx*1]
   14002adcd:	jmp    0x14002adfb
   14002adcf:	lea    rcx,[rbp+0x20]
   14002add3:	mov    r9d,0x1
   14002add9:	lea    r8,[rbp+0x10]
   14002addd:	mov    DWORD PTR [rsp+0x28],r9d
   14002ade2:	mov    QWORD PTR [rsp+0x20],rcx
   14002ade7:	mov    rcx,rax
   14002adea:	call   0x14002f24c
   14002adef:	movzx  edx,WORD PTR [rbp+0x10]
   14002adf3:	test   eax,eax
   14002adf5:	je     0x14002adfb
   14002adf7:	movzx  edx,WORD PTR [rbp+0x20]
   14002adfb:	cmp    BYTE PTR [rbp-0x8],0x0
   14002adff:	je     0x14002ae0c
   14002ae01:	mov    rcx,QWORD PTR [rbp-0x10]
   14002ae05:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002ae0c:	movzx  eax,dx
   14002ae0f:	mov    rbx,QWORD PTR [rsp+0x68]
   14002ae14:	add    rsp,0x50
   14002ae18:	pop    rbp
   14002ae19:	ret    
   14002ae1a:	int3   
   14002ae1b:	int3   
   14002ae1c:	rex push rdi
   14002ae1e:	sub    rsp,0x20
   14002ae22:	lea    rdi,[rip+0x2ec07]        # 0x140059a30
   14002ae29:	cmp    QWORD PTR [rip+0x2ebf0],rdi        # 0x140059a20
   14002ae30:	je     0x14002ae5d
   14002ae32:	mov    ecx,0xc
   14002ae37:	call   0x14002db4c
   14002ae3c:	nop
   14002ae3d:	mov    rdx,rdi
   14002ae40:	lea    rcx,[rip+0x2ebd9]        # 0x140059a20
   14002ae47:	call   0x14002a408
   14002ae4c:	mov    QWORD PTR [rip+0x2ebcd],rax        # 0x140059a20
   14002ae53:	mov    ecx,0xc
   14002ae58:	call   0x14002dd34
   14002ae5d:	add    rsp,0x20
   14002ae61:	pop    rdi
   14002ae62:	ret    
   14002ae63:	int3   
   14002ae64:	mov    rax,rsp
   14002ae67:	mov    QWORD PTR [rax+0x10],rbx
   14002ae6b:	mov    QWORD PTR [rax+0x18],rbp
   14002ae6f:	mov    QWORD PTR [rax+0x20],rsi
   14002ae73:	mov    DWORD PTR [rax+0x8],ecx
   14002ae76:	push   rdi
   14002ae77:	sub    rsp,0x20
   14002ae7b:	mov    rbx,rdx
   14002ae7e:	call   0x140028a64
   14002ae83:	xor    edi,edi
   14002ae85:	test   eax,eax
   14002ae87:	jns    0x14002ae91
   14002ae89:	or     eax,0xffffffff
   14002ae8c:	jmp    0x14002afe5
   14002ae91:	mov    rcx,rbx
   14002ae94:	call   0x14002f3b4
   14002ae99:	mov    ecx,DWORD PTR [rbx+0x18]
   14002ae9c:	movsxd rsi,eax
   14002ae9f:	test   cl,0x82
   14002aea2:	jne    0x14002aeb5
   14002aea4:	call   0x140029bf8
   14002aea9:	mov    DWORD PTR [rax],0x9
   14002aeaf:	or     DWORD PTR [rbx+0x18],0x20
   14002aeb3:	jmp    0x14002ae89
   14002aeb5:	test   cl,0x40
   14002aeb8:	je     0x14002aec7
   14002aeba:	call   0x140029bf8
   14002aebf:	mov    DWORD PTR [rax],0x22
   14002aec5:	jmp    0x14002aeaf
   14002aec7:	test   cl,0x1
   14002aeca:	je     0x14002aee5
   14002aecc:	mov    DWORD PTR [rbx+0x8],edi
   14002aecf:	test   cl,0x10
   14002aed2:	je     0x14002af61
   14002aed8:	mov    rax,QWORD PTR [rbx+0x10]
   14002aedc:	and    ecx,0xfffffffe
   14002aedf:	mov    QWORD PTR [rbx],rax
   14002aee2:	mov    DWORD PTR [rbx+0x18],ecx
   14002aee5:	mov    eax,DWORD PTR [rbx+0x18]
   14002aee8:	mov    DWORD PTR [rbx+0x8],edi
   14002aeeb:	and    eax,0xffffffef
   14002aeee:	or     eax,0x2
   14002aef1:	mov    DWORD PTR [rbx+0x18],eax
   14002aef4:	test   eax,0x10c
   14002aef9:	jne    0x14002af2a
   14002aefb:	call   0x14002ccb4
   14002af00:	add    rax,0x30
   14002af04:	cmp    rbx,rax
   14002af07:	je     0x14002af17
   14002af09:	call   0x14002ccb4
   14002af0e:	add    rax,0x60
   14002af12:	cmp    rbx,rax
   14002af15:	jne    0x14002af22
   14002af17:	mov    ecx,esi
   14002af19:	call   0x14002f3dc
   14002af1e:	test   eax,eax
   14002af20:	jne    0x14002af2a
   14002af22:	mov    rcx,rbx
   14002af25:	call   0x14002fe34
   14002af2a:	test   DWORD PTR [rbx+0x18],0x108
   14002af31:	je     0x14002afc2
   14002af37:	mov    ebp,DWORD PTR [rbx]
   14002af39:	mov    rdx,QWORD PTR [rbx+0x10]
   14002af3d:	sub    ebp,DWORD PTR [rbx+0x10]
   14002af40:	lea    rax,[rdx+0x1]
   14002af44:	mov    QWORD PTR [rbx],rax
   14002af47:	mov    eax,DWORD PTR [rbx+0x24]
   14002af4a:	dec    eax
   14002af4c:	mov    DWORD PTR [rbx+0x8],eax
   14002af4f:	test   ebp,ebp
   14002af51:	jle    0x14002af6c
   14002af53:	mov    r8d,ebp
   14002af56:	mov    ecx,esi
   14002af58:	call   0x14002f450
   14002af5d:	mov    edi,eax
   14002af5f:	jmp    0x14002afb6
   14002af61:	or     ecx,0x20
   14002af64:	mov    DWORD PTR [rbx+0x18],ecx
   14002af67:	jmp    0x14002ae89
   14002af6c:	lea    eax,[rsi+0x2]
   14002af6f:	cmp    eax,0x1
   14002af72:	jbe    0x14002af92
   14002af74:	mov    rcx,rsi
   14002af77:	mov    rax,rsi
   14002af7a:	lea    rdx,[rip+0x339df]        # 0x14005e960
   14002af81:	and    ecx,0x1f
   14002af84:	sar    rax,0x5
   14002af88:	imul   rcx,rcx,0x58
   14002af8c:	add    rcx,QWORD PTR [rdx+rax*8]
   14002af90:	jmp    0x14002af99
   14002af92:	lea    rcx,[rip+0x2e097]        # 0x140059030
   14002af99:	test   BYTE PTR [rcx+0x8],0x20
   14002af9d:	je     0x14002afb6
   14002af9f:	xor    edx,edx
   14002afa1:	mov    ecx,esi
   14002afa3:	lea    r8d,[rdx+0x2]
   14002afa7:	call   0x14002fcb0
   14002afac:	cmp    rax,0xffffffffffffffff
   14002afb0:	je     0x14002aeaf
   14002afb6:	mov    rcx,QWORD PTR [rbx+0x10]
   14002afba:	mov    al,BYTE PTR [rsp+0x30]
   14002afbe:	mov    BYTE PTR [rcx],al
   14002afc0:	jmp    0x14002afd8
   14002afc2:	mov    ebp,0x1
   14002afc7:	lea    rdx,[rsp+0x30]
   14002afcc:	mov    ecx,esi
   14002afce:	mov    r8d,ebp
   14002afd1:	call   0x14002f450
   14002afd6:	mov    edi,eax
   14002afd8:	cmp    edi,ebp
   14002afda:	jne    0x14002aeaf
   14002afe0:	movzx  eax,BYTE PTR [rsp+0x30]
   14002afe5:	mov    rbx,QWORD PTR [rsp+0x38]
   14002afea:	mov    rbp,QWORD PTR [rsp+0x40]
   14002afef:	mov    rsi,QWORD PTR [rsp+0x48]
   14002aff4:	add    rsp,0x20
   14002aff8:	pop    rdi
   14002aff9:	ret    
   14002affa:	int3   
   14002affb:	int3   
   14002affc:	mov    QWORD PTR [rsp+0x18],rbx
   14002b001:	push   rbp
   14002b002:	push   rsi
   14002b003:	push   rdi
   14002b004:	push   r12
   14002b006:	push   r13
   14002b008:	push   r14
   14002b00a:	push   r15
   14002b00c:	lea    rbp,[rsp-0x3e0]
   14002b014:	sub    rsp,0x4e0
   14002b01b:	mov    rax,QWORD PTR [rip+0x2e066]        # 0x140059088
   14002b022:	xor    rax,rsp
   14002b025:	mov    QWORD PTR [rbp+0x3d0],rax
   14002b02c:	xor    eax,eax
   14002b02e:	mov    rbx,rcx
   14002b031:	mov    QWORD PTR [rsp+0x78],rcx
   14002b036:	mov    QWORD PTR [rbp-0x80],rdx
   14002b03a:	lea    rcx,[rbp-0x70]
   14002b03e:	mov    rdx,r8
   14002b041:	mov    r12,r9
   14002b044:	mov    QWORD PTR [rsp+0x50],r9
   14002b049:	mov    DWORD PTR [rsp+0x70],eax
   14002b04d:	mov    r14d,eax
   14002b050:	mov    DWORD PTR [rsp+0x58],eax
   14002b054:	mov    edi,eax
   14002b056:	mov    DWORD PTR [rsp+0x44],eax
   14002b05a:	mov    DWORD PTR [rsp+0x48],eax
   14002b05e:	mov    DWORD PTR [rsp+0x6c],eax
   14002b062:	mov    DWORD PTR [rsp+0x4c],eax
   14002b066:	call   0x140026f30
   14002b06b:	call   0x140029bf8
   14002b070:	mov    QWORD PTR [rbp-0x48],rax
   14002b074:	call   0x140028a64
   14002b079:	xor    r10d,r10d
   14002b07c:	test   eax,eax
   14002b07e:	jns    0x14002b099
   14002b080:	cmp    BYTE PTR [rbp-0x58],r10b
   14002b084:	je     0x14002b091
   14002b086:	mov    rax,QWORD PTR [rbp-0x60]
   14002b08a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002b091:	or     eax,0xffffffff
   14002b094:	jmp    0x14002b899
   14002b099:	test   rbx,rbx
   14002b09c:	jne    0x14002b0b5
   14002b09e:	call   0x140029bf8
   14002b0a3:	mov    DWORD PTR [rax],0x16
   14002b0a9:	call   0x140029b2c
   14002b0ae:	xor    ecx,ecx
   14002b0b0:	cmp    BYTE PTR [rbp-0x58],cl
   14002b0b3:	jmp    0x14002b084
   14002b0b5:	mov    r8,QWORD PTR [rbp-0x80]
   14002b0b9:	test   r8,r8
   14002b0bc:	je     0x14002b09e
   14002b0be:	movzx  r15d,WORD PTR [r8]
   14002b0c2:	mov    esi,r10d
   14002b0c5:	mov    DWORD PTR [rsp+0x40],r10d
   14002b0ca:	mov    r13d,r10d
   14002b0cd:	mov    edx,r10d
   14002b0d0:	mov    QWORD PTR [rbp-0x50],r10
   14002b0d4:	test   r15w,r15w
   14002b0d8:	je     0x14002b886
   14002b0de:	mov    rbx,QWORD PTR [rbp-0x40]
   14002b0e2:	mov    r11d,0x20
   14002b0e8:	mov    r9d,0x200
   14002b0ee:	add    r8,0x2
   14002b0f2:	mov    QWORD PTR [rbp-0x80],r8
   14002b0f6:	test   esi,esi
   14002b0f8:	js     0x14002b886
   14002b0fe:	movzx  eax,r15w
   14002b102:	mov    ecx,0x58
   14002b107:	sub    ax,r11w
   14002b10b:	cmp    ax,cx
   14002b10e:	ja     0x14002b125
   14002b110:	lea    rcx,[rip+0x17979]        # 0x140042a90
   14002b117:	movzx  eax,r15w
   14002b11b:	movsx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14002b120:	and    ecx,0xf
   14002b123:	jmp    0x14002b128
   14002b125:	mov    ecx,r10d
   14002b128:	movsxd rax,edx
   14002b12b:	movsxd rcx,ecx
   14002b12e:	lea    rdx,[rax+rcx*8]
   14002b132:	lea    rax,[rip+0x17957]        # 0x140042a90
   14002b139:	movsx  edx,BYTE PTR [rdx+rax*1]
   14002b13d:	sar    edx,0x4
   14002b140:	mov    DWORD PTR [rsp+0x68],edx
   14002b144:	mov    ecx,edx
   14002b146:	test   edx,edx
   14002b148:	je     0x14002b96c
   14002b14e:	dec    ecx
   14002b150:	je     0x14002ba7c
   14002b156:	dec    ecx
   14002b158:	je     0x14002ba21
   14002b15e:	dec    ecx
   14002b160:	je     0x14002b9df
   14002b166:	dec    ecx
   14002b168:	je     0x14002b9d2
   14002b16e:	dec    ecx
   14002b170:	je     0x14002b997
   14002b176:	dec    ecx
   14002b178:	je     0x14002b8c3
   14002b17e:	dec    ecx
   14002b180:	jne    0x14002b878
   14002b186:	movzx  ecx,r15w
   14002b18a:	cmp    ecx,0x64
   14002b18d:	jg     0x14002b39e
   14002b193:	je     0x14002b4b1
   14002b199:	cmp    ecx,0x41
   14002b19c:	je     0x14002b36b
   14002b1a2:	cmp    ecx,0x43
   14002b1a5:	je     0x14002b2f5
   14002b1ab:	lea    eax,[rcx-0x45]
   14002b1ae:	test   eax,0xfffffffd
   14002b1b3:	je     0x14002b36b
   14002b1b9:	cmp    ecx,0x53
   14002b1bc:	je     0x14002b24f
   14002b1c2:	mov    eax,0x58
   14002b1c7:	cmp    ecx,eax
   14002b1c9:	je     0x14002b430
   14002b1cf:	cmp    ecx,0x5a
   14002b1d2:	je     0x14002b1eb
   14002b1d4:	cmp    ecx,0x61
   14002b1d7:	je     0x14002b376
   14002b1dd:	cmp    ecx,0x63
   14002b1e0:	je     0x14002b301
   14002b1e6:	jmp    0x14002b2bd
   14002b1eb:	mov    rax,QWORD PTR [r12]
   14002b1ef:	add    r12,0x8
   14002b1f3:	mov    QWORD PTR [rsp+0x50],r12
   14002b1f8:	test   rax,rax
   14002b1fb:	je     0x14002b238
   14002b1fd:	mov    rbx,QWORD PTR [rax+0x8]
   14002b201:	test   rbx,rbx
   14002b204:	je     0x14002b238
   14002b206:	mov    edi,0x2d
   14002b20b:	bt     r14d,0xb
   14002b210:	jae    0x14002b22a
   14002b212:	movsx  eax,WORD PTR [rax]
   14002b215:	mov    DWORD PTR [rsp+0x4c],0x1
   14002b21d:	cdq    
   14002b21e:	sub    eax,edx
   14002b220:	sar    eax,1
   14002b222:	mov    r13d,eax
   14002b225:	jmp    0x14002b2c2
   14002b22a:	movsx  r13d,WORD PTR [rax]
   14002b22e:	mov    DWORD PTR [rsp+0x4c],r10d
   14002b233:	jmp    0x14002b2c2
   14002b238:	mov    rbx,QWORD PTR [rip+0x2ed21]        # 0x140059f60
   14002b23f:	mov    rcx,rbx
   14002b242:	call   0x14002e0d0
   14002b247:	xor    r10d,r10d
   14002b24a:	mov    r13,rax
   14002b24d:	jmp    0x14002b2bd
   14002b24f:	test   r14d,0x830
   14002b256:	jne    0x14002b25b
   14002b258:	or     r14d,r11d
   14002b25b:	cmp    DWORD PTR [rsp+0x44],0xffffffff
   14002b260:	mov    rbx,QWORD PTR [r12]
   14002b264:	mov    eax,0x7fffffff
   14002b269:	cmove  edi,eax
   14002b26c:	add    r12,0x8
   14002b270:	mov    QWORD PTR [rsp+0x50],r12
   14002b275:	test   r11b,r14b
   14002b278:	je     0x14002b3f0
   14002b27e:	test   rbx,rbx
   14002b281:	mov    r13d,r10d
   14002b284:	cmove  rbx,QWORD PTR [rip+0x2ecd4]        # 0x140059f60
   14002b28c:	mov    rsi,rbx
   14002b28f:	test   edi,edi
   14002b291:	jle    0x14002b2b9
   14002b293:	cmp    BYTE PTR [rsi],r10b
   14002b296:	je     0x14002b2b9
   14002b298:	movzx  ecx,BYTE PTR [rsi]
   14002b29b:	lea    rdx,[rbp-0x70]
   14002b29f:	call   0x14002fe88
   14002b2a4:	xor    r10d,r10d
   14002b2a7:	test   eax,eax
   14002b2a9:	je     0x14002b2ae
   14002b2ab:	inc    rsi
   14002b2ae:	inc    r13d
   14002b2b1:	inc    rsi
   14002b2b4:	cmp    r13d,edi
   14002b2b7:	jl     0x14002b293
   14002b2b9:	mov    esi,DWORD PTR [rsp+0x40]
   14002b2bd:	mov    edi,0x2d
   14002b2c2:	cmp    DWORD PTR [rsp+0x6c],r10d
   14002b2c7:	jne    0x14002b844
   14002b2cd:	test   r14b,0x40
   14002b2d1:	je     0x14002b714
   14002b2d7:	bt     r14d,0x8
   14002b2dc:	jae    0x14002b6e6
   14002b2e2:	mov    WORD PTR [rsp+0x5c],di
   14002b2e7:	mov    esi,0x1
   14002b2ec:	mov    DWORD PTR [rsp+0x48],esi
   14002b2f0:	jmp    0x14002b718
   14002b2f5:	test   r14d,0x830
   14002b2fc:	jne    0x14002b301
   14002b2fe:	or     r14d,r11d
   14002b301:	movzx  eax,WORD PTR [r12]
   14002b306:	add    r12,0x8
   14002b30a:	mov    DWORD PTR [rsp+0x4c],0x1
   14002b312:	mov    QWORD PTR [rsp+0x50],r12
   14002b317:	mov    WORD PTR [rsp+0x60],ax
   14002b31c:	test   r11b,r14b
   14002b31f:	je     0x14002b358
   14002b321:	mov    BYTE PTR [rsp+0x64],al
   14002b325:	mov    rax,QWORD PTR [rbp-0x70]
   14002b329:	mov    BYTE PTR [rsp+0x65],r10b
   14002b32e:	movsxd r8,DWORD PTR [rax+0xd4]
   14002b335:	lea    r9,[rbp-0x70]
   14002b339:	lea    rdx,[rsp+0x64]
   14002b33e:	lea    rcx,[rbp-0x30]
   14002b342:	call   0x1400300f8
   14002b347:	xor    r10d,r10d
   14002b34a:	test   eax,eax
   14002b34c:	jns    0x14002b35c
   14002b34e:	mov    DWORD PTR [rsp+0x6c],0x1
   14002b356:	jmp    0x14002b35c
   14002b358:	mov    WORD PTR [rbp-0x30],ax
   14002b35c:	lea    rbx,[rbp-0x30]
   14002b360:	mov    r13d,0x1
   14002b366:	jmp    0x14002b2bd
   14002b36b:	mov    DWORD PTR [rbp-0x78],0x1
   14002b372:	add    r15w,r11w
   14002b376:	mov    eax,0x67
   14002b37b:	or     r14d,0x40
   14002b37f:	lea    rbx,[rbp-0x30]
   14002b383:	mov    esi,r9d
   14002b386:	test   edi,edi
   14002b388:	jns    0x14002b5d6
   14002b38e:	mov    r13d,0x6
   14002b394:	mov    DWORD PTR [rsp+0x44],r13d
   14002b399:	jmp    0x14002b629
   14002b39e:	cmp    ecx,0x65
   14002b3a1:	jl     0x14002b2bd
   14002b3a7:	mov    eax,0x67
   14002b3ac:	cmp    ecx,eax
   14002b3ae:	jle    0x14002b37b
   14002b3b0:	cmp    ecx,0x69
   14002b3b3:	je     0x14002b4b1
   14002b3b9:	cmp    ecx,0x6e
   14002b3bc:	je     0x14002b477
   14002b3c2:	cmp    ecx,0x6f
   14002b3c5:	je     0x14002b461
   14002b3cb:	cmp    ecx,0x70
   14002b3ce:	je     0x14002b426
   14002b3d0:	cmp    ecx,0x73
   14002b3d3:	je     0x14002b25b
   14002b3d9:	cmp    ecx,0x75
   14002b3dc:	je     0x14002b4b5
   14002b3e2:	cmp    ecx,0x78
   14002b3e5:	jne    0x14002b2bd
   14002b3eb:	lea    eax,[rcx-0x51]
   14002b3ee:	jmp    0x14002b435
   14002b3f0:	test   rbx,rbx
   14002b3f3:	mov    DWORD PTR [rsp+0x4c],0x1
   14002b3fb:	cmove  rbx,QWORD PTR [rip+0x2eb65]        # 0x140059f68
   14002b403:	mov    rax,rbx
   14002b406:	jmp    0x14002b414
   14002b408:	dec    edi
   14002b40a:	cmp    WORD PTR [rax],r10w
   14002b40e:	je     0x14002b418
   14002b410:	add    rax,0x2
   14002b414:	test   edi,edi
   14002b416:	jne    0x14002b408
   14002b418:	sub    rax,rbx
   14002b41b:	sar    rax,1
   14002b41e:	mov    r13d,eax
   14002b421:	jmp    0x14002b2bd
   14002b426:	mov    edi,0x10
   14002b42b:	bts    r14d,0xf
   14002b430:	mov    eax,0x7
   14002b435:	mov    DWORD PTR [rsp+0x70],eax
   14002b439:	mov    r9d,0x10
   14002b43f:	mov    r15d,0x200
   14002b445:	test   r14b,r14b
   14002b448:	jns    0x14002b4c1
   14002b44a:	lea    ecx,[r9+0x20]
   14002b44e:	add    ax,0x51
   14002b452:	lea    edx,[rcx-0x2e]
   14002b455:	mov    WORD PTR [rsp+0x5c],cx
   14002b45a:	mov    WORD PTR [rsp+0x5e],ax
   14002b45f:	jmp    0x14002b4c5
   14002b461:	mov    r9d,0x8
   14002b467:	test   r14b,r14b
   14002b46a:	jns    0x14002b4bb
   14002b46c:	mov    r15d,0x200
   14002b472:	or     r14d,r15d
   14002b475:	jmp    0x14002b4c1
   14002b477:	mov    rdi,QWORD PTR [r12]
   14002b47b:	add    r12,0x8
   14002b47f:	mov    QWORD PTR [rsp+0x50],r12
   14002b484:	call   0x140027b80
   14002b489:	xor    r10d,r10d
   14002b48c:	test   eax,eax
   14002b48e:	je     0x14002b09e
   14002b494:	lea    r11d,[r10+0x20]
   14002b498:	test   r11b,r14b
   14002b49b:	je     0x14002b4a2
   14002b49d:	mov    WORD PTR [rdi],si
   14002b4a0:	jmp    0x14002b4a4
   14002b4a2:	mov    DWORD PTR [rdi],esi
   14002b4a4:	mov    DWORD PTR [rsp+0x6c],0x1
   14002b4ac:	jmp    0x14002b84a
   14002b4b1:	or     r14d,0x40
   14002b4b5:	mov    r9d,0xa
   14002b4bb:	mov    r15d,0x200
   14002b4c1:	mov    edx,DWORD PTR [rsp+0x48]
   14002b4c5:	mov    eax,0x8000
   14002b4ca:	test   eax,r14d
   14002b4cd:	je     0x14002b4d9
   14002b4cf:	mov    r8,QWORD PTR [r12]
   14002b4d3:	add    r12,0x8
   14002b4d7:	jmp    0x14002b516
   14002b4d9:	bt     r14d,0xc
   14002b4de:	jb     0x14002b4cf
   14002b4e0:	add    r12,0x8
   14002b4e4:	test   r11b,r14b
   14002b4e7:	je     0x14002b504
   14002b4e9:	mov    QWORD PTR [rsp+0x50],r12
   14002b4ee:	test   r14b,0x40
   14002b4f2:	je     0x14002b4fc
   14002b4f4:	movsx  r8,WORD PTR [r12-0x8]
   14002b4fa:	jmp    0x14002b51b
   14002b4fc:	movzx  r8d,WORD PTR [r12-0x8]
   14002b502:	jmp    0x14002b51b
   14002b504:	test   r14b,0x40
   14002b508:	je     0x14002b511
   14002b50a:	movsxd r8,DWORD PTR [r12-0x8]
   14002b50f:	jmp    0x14002b516
   14002b511:	mov    r8d,DWORD PTR [r12-0x8]
   14002b516:	mov    QWORD PTR [rsp+0x50],r12
   14002b51b:	test   r14b,0x40
   14002b51f:	je     0x14002b52e
   14002b521:	test   r8,r8
   14002b524:	jns    0x14002b52e
   14002b526:	neg    r8
   14002b529:	bts    r14d,0x8
   14002b52e:	test   eax,r14d
   14002b531:	jne    0x14002b53d
   14002b533:	bt     r14d,0xc
   14002b538:	jb     0x14002b53d
   14002b53a:	mov    r8d,r8d
   14002b53d:	test   edi,edi
   14002b53f:	jns    0x14002b548
   14002b541:	mov    edi,0x1
   14002b546:	jmp    0x14002b553
   14002b548:	and    r14d,0xfffffff7
   14002b54c:	cmp    edi,r15d
   14002b54f:	cmovg  edi,r15d
   14002b553:	mov    esi,DWORD PTR [rsp+0x70]
   14002b557:	mov    rax,r8
   14002b55a:	lea    rbx,[rbp+0x1cf]
   14002b561:	neg    rax
   14002b564:	sbb    ecx,ecx
   14002b566:	and    ecx,edx
   14002b568:	mov    DWORD PTR [rsp+0x48],ecx
   14002b56c:	mov    ecx,edi
   14002b56e:	dec    edi
   14002b570:	test   ecx,ecx
   14002b572:	jg     0x14002b579
   14002b574:	test   r8,r8
   14002b577:	je     0x14002b598
   14002b579:	xor    edx,edx
   14002b57b:	mov    rax,r8
   14002b57e:	movsxd rcx,r9d
   14002b581:	div    rcx
   14002b584:	mov    r8,rax
   14002b587:	lea    eax,[rdx+0x30]
   14002b58a:	cmp    eax,0x39
   14002b58d:	jle    0x14002b591
   14002b58f:	add    eax,esi
   14002b591:	mov    BYTE PTR [rbx],al
   14002b593:	dec    rbx
   14002b596:	jmp    0x14002b56c
   14002b598:	mov    esi,DWORD PTR [rsp+0x40]
   14002b59c:	lea    rax,[rbp+0x1cf]
   14002b5a3:	mov    DWORD PTR [rsp+0x44],edi
   14002b5a7:	sub    eax,ebx
   14002b5a9:	inc    rbx
   14002b5ac:	mov    r13d,eax
   14002b5af:	test   r15d,r14d
   14002b5b2:	je     0x14002b2bd
   14002b5b8:	test   eax,eax
   14002b5ba:	mov    eax,0x30
   14002b5bf:	je     0x14002b5c9
   14002b5c1:	cmp    BYTE PTR [rbx],al
   14002b5c3:	je     0x14002b2bd
   14002b5c9:	dec    rbx
   14002b5cc:	inc    r13d
   14002b5cf:	mov    BYTE PTR [rbx],al
   14002b5d1:	jmp    0x14002b2bd
   14002b5d6:	jne    0x14002b5e9
   14002b5d8:	cmp    r15w,ax
   14002b5dc:	jne    0x14002b61f
   14002b5de:	mov    r13d,0x1
   14002b5e4:	jmp    0x14002b394
   14002b5e9:	cmp    edi,r9d
   14002b5ec:	mov    r13d,0xa3
   14002b5f2:	cmovg  edi,r9d
   14002b5f6:	mov    DWORD PTR [rsp+0x44],edi
   14002b5fa:	cmp    edi,r13d
   14002b5fd:	jle    0x14002b626
   14002b5ff:	add    edi,0x15d
   14002b605:	movsxd rcx,edi
   14002b608:	call   0x1400297c4
   14002b60d:	mov    QWORD PTR [rbp-0x50],rax
   14002b611:	test   rax,rax
   14002b614:	je     0x14002b394
   14002b61a:	mov    rbx,rax
   14002b61d:	mov    esi,edi
   14002b61f:	mov    r13d,DWORD PTR [rsp+0x44]
   14002b624:	jmp    0x14002b629
   14002b626:	mov    r13d,edi
   14002b629:	mov    rax,QWORD PTR [r12]
   14002b62d:	mov    rcx,QWORD PTR [rip+0x2ebbc]        # 0x14005a1f0
   14002b634:	add    r12,0x8
   14002b638:	mov    QWORD PTR [rsp+0x50],r12
   14002b63d:	movsx  edi,r15b
   14002b641:	movsxd rsi,esi
   14002b644:	mov    QWORD PTR [rbp-0x40],rax
   14002b648:	call   QWORD PTR [rip+0x15db2]        # 0x140041400
   14002b64e:	lea    rcx,[rbp-0x70]
   14002b652:	mov    QWORD PTR [rsp+0x30],rcx
   14002b657:	mov    ecx,DWORD PTR [rbp-0x78]
   14002b65a:	mov    r9d,edi
   14002b65d:	mov    DWORD PTR [rsp+0x28],ecx
   14002b661:	lea    rcx,[rbp-0x40]
   14002b665:	mov    r8,rsi
   14002b668:	mov    rdx,rbx
   14002b66b:	mov    DWORD PTR [rsp+0x20],r13d
   14002b670:	call   rax
   14002b672:	mov    edi,r14d
   14002b675:	and    edi,0x80
   14002b67b:	je     0x14002b698
   14002b67d:	test   r13d,r13d
   14002b680:	jne    0x14002b698
   14002b682:	mov    rcx,QWORD PTR [rip+0x2eb7f]        # 0x14005a208
   14002b689:	call   QWORD PTR [rip+0x15d71]        # 0x140041400
   14002b68f:	lea    rdx,[rbp-0x70]
   14002b693:	mov    rcx,rbx
   14002b696:	call   rax
   14002b698:	mov    ecx,0x67
   14002b69d:	cmp    r15w,cx
   14002b6a1:	jne    0x14002b6bd
   14002b6a3:	test   edi,edi
   14002b6a5:	jne    0x14002b6bd
   14002b6a7:	mov    rcx,QWORD PTR [rip+0x2eb52]        # 0x14005a200
   14002b6ae:	call   QWORD PTR [rip+0x15d4c]        # 0x140041400
   14002b6b4:	lea    rdx,[rbp-0x70]
   14002b6b8:	mov    rcx,rbx
   14002b6bb:	call   rax
   14002b6bd:	mov    edi,0x2d
   14002b6c2:	cmp    BYTE PTR [rbx],dil
   14002b6c5:	jne    0x14002b6cf
   14002b6c7:	bts    r14d,0x8
   14002b6cc:	inc    rbx
   14002b6cf:	mov    rcx,rbx
   14002b6d2:	call   0x14002e0d0
   14002b6d7:	mov    esi,DWORD PTR [rsp+0x40]
   14002b6db:	xor    r10d,r10d
   14002b6de:	mov    r13d,eax
   14002b6e1:	jmp    0x14002b2c2
   14002b6e6:	test   r14b,0x1
   14002b6ea:	je     0x14002b6fb
   14002b6ec:	mov    eax,0x2b
   14002b6f1:	mov    WORD PTR [rsp+0x5c],ax
   14002b6f6:	jmp    0x14002b2e7
   14002b6fb:	test   r14b,0x2
   14002b6ff:	je     0x14002b714
   14002b701:	mov    eax,0x20
   14002b706:	mov    WORD PTR [rsp+0x5c],ax
   14002b70b:	lea    esi,[rax-0x1f]
   14002b70e:	mov    DWORD PTR [rsp+0x48],esi
   14002b712:	jmp    0x14002b71d
   14002b714:	mov    esi,DWORD PTR [rsp+0x48]
   14002b718:	mov    eax,0x20
   14002b71d:	mov    r15d,DWORD PTR [rsp+0x58]
   14002b722:	mov    rdi,QWORD PTR [rsp+0x78]
   14002b727:	sub    r15d,r13d
   14002b72a:	sub    r15d,esi
   14002b72d:	test   r14b,0xc
   14002b731:	jne    0x14002b745
   14002b733:	lea    r9,[rsp+0x40]
   14002b738:	mov    ecx,eax
   14002b73a:	mov    r8,rdi
   14002b73d:	mov    edx,r15d
   14002b740:	call   0x14002c9a0
   14002b745:	mov    rax,QWORD PTR [rbp-0x48]
   14002b749:	lea    r9,[rsp+0x40]
   14002b74e:	lea    rcx,[rsp+0x5c]
   14002b753:	mov    r8,rdi
   14002b756:	mov    edx,esi
   14002b758:	mov    QWORD PTR [rsp+0x20],rax
   14002b75d:	call   0x14002badc
   14002b762:	test   r14b,0x8
   14002b766:	je     0x14002b783
   14002b768:	test   r14b,0x4
   14002b76c:	jne    0x14002b783
   14002b76e:	lea    r9,[rsp+0x40]
   14002b773:	mov    ecx,0x30
   14002b778:	mov    r8,rdi
   14002b77b:	mov    edx,r15d
   14002b77e:	call   0x14002c9a0
   14002b783:	xor    eax,eax
   14002b785:	cmp    DWORD PTR [rsp+0x4c],eax
   14002b789:	jne    0x14002b7fb
   14002b78b:	test   r13d,r13d
   14002b78e:	jle    0x14002b7fb
   14002b790:	mov    rdi,rbx
   14002b793:	mov    esi,r13d
   14002b796:	mov    rax,QWORD PTR [rbp-0x70]
   14002b79a:	lea    r9,[rbp-0x70]
   14002b79e:	lea    rcx,[rsp+0x60]
   14002b7a3:	movsxd r8,DWORD PTR [rax+0xd4]
   14002b7aa:	mov    rdx,rdi
   14002b7ad:	dec    esi
   14002b7af:	call   0x1400300f8
   14002b7b4:	xor    r10d,r10d
   14002b7b7:	movsxd r12,eax
   14002b7ba:	test   eax,eax
   14002b7bc:	jle    0x14002b7e8
   14002b7be:	mov    rdx,QWORD PTR [rsp+0x78]
   14002b7c3:	movzx  ecx,WORD PTR [rsp+0x60]
   14002b7c8:	lea    r8,[rsp+0x40]
   14002b7cd:	call   0x14002baa4
   14002b7d2:	add    rdi,r12
   14002b7d5:	xor    r10d,r10d
   14002b7d8:	test   esi,esi
   14002b7da:	jg     0x14002b796
   14002b7dc:	mov    r12,QWORD PTR [rsp+0x50]
   14002b7e1:	mov    rdi,QWORD PTR [rsp+0x78]
   14002b7e6:	jmp    0x14002b81a
   14002b7e8:	mov    r12,QWORD PTR [rsp+0x50]
   14002b7ed:	mov    rdi,QWORD PTR [rsp+0x78]
   14002b7f2:	or     esi,0xffffffff
   14002b7f5:	mov    DWORD PTR [rsp+0x40],esi
   14002b7f9:	jmp    0x14002b81e
   14002b7fb:	mov    rax,QWORD PTR [rbp-0x48]
   14002b7ff:	lea    r9,[rsp+0x40]
   14002b804:	mov    r8,rdi
   14002b807:	mov    edx,r13d
   14002b80a:	mov    rcx,rbx
   14002b80d:	mov    QWORD PTR [rsp+0x20],rax
   14002b812:	call   0x14002badc
   14002b817:	xor    r10d,r10d
   14002b81a:	mov    esi,DWORD PTR [rsp+0x40]
   14002b81e:	test   esi,esi
   14002b820:	js     0x14002b844
   14002b822:	test   r14b,0x4
   14002b826:	je     0x14002b844
   14002b828:	lea    r9,[rsp+0x40]
   14002b82d:	mov    ecx,0x20
   14002b832:	mov    r8,rdi
   14002b835:	mov    edx,r15d
   14002b838:	call   0x14002c9a0
   14002b83d:	mov    esi,DWORD PTR [rsp+0x40]
   14002b841:	xor    r10d,r10d
   14002b844:	mov    r11d,0x20
   14002b84a:	mov    rax,QWORD PTR [rbp-0x50]
   14002b84e:	test   rax,rax
   14002b851:	je     0x14002b866
   14002b853:	mov    rcx,rax
   14002b856:	call   0x1400273dc
   14002b85b:	xor    r10d,r10d
   14002b85e:	lea    r11d,[r10+0x20]
   14002b862:	mov    QWORD PTR [rbp-0x50],r10
   14002b866:	mov    edi,DWORD PTR [rsp+0x44]
   14002b86a:	mov    r8,QWORD PTR [rbp-0x80]
   14002b86e:	mov    edx,DWORD PTR [rsp+0x68]
   14002b872:	mov    r9d,0x200
   14002b878:	movzx  r15d,WORD PTR [r8]
   14002b87c:	test   r15w,r15w
   14002b880:	jne    0x14002b0ee
   14002b886:	cmp    BYTE PTR [rbp-0x58],r10b
   14002b88a:	je     0x14002b897
   14002b88c:	mov    rcx,QWORD PTR [rbp-0x60]
   14002b890:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002b897:	mov    eax,esi
   14002b899:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14002b8a0:	xor    rcx,rsp
   14002b8a3:	call   0x1400265a0
   14002b8a8:	mov    rbx,QWORD PTR [rsp+0x530]
   14002b8b0:	add    rsp,0x4e0
   14002b8b7:	pop    r15
   14002b8b9:	pop    r14
   14002b8bb:	pop    r13
   14002b8bd:	pop    r12
   14002b8bf:	pop    rdi
   14002b8c0:	pop    rsi
   14002b8c1:	pop    rbp
   14002b8c2:	ret    
   14002b8c3:	movzx  eax,r15w
   14002b8c7:	cmp    eax,0x49
   14002b8ca:	je     0x14002b908
   14002b8cc:	cmp    eax,0x68
   14002b8cf:	je     0x14002b900
   14002b8d1:	mov    ecx,0x6c
   14002b8d6:	cmp    eax,ecx
   14002b8d8:	je     0x14002b8e6
   14002b8da:	cmp    eax,0x77
   14002b8dd:	jne    0x14002b878
   14002b8df:	bts    r14d,0xb
   14002b8e4:	jmp    0x14002b878
   14002b8e6:	cmp    WORD PTR [r8],cx
   14002b8ea:	jne    0x14002b8f7
   14002b8ec:	add    r8,0x2
   14002b8f0:	bts    r14d,0xc
   14002b8f5:	jmp    0x14002b878
   14002b8f7:	or     r14d,0x10
   14002b8fb:	jmp    0x14002b878
   14002b900:	or     r14d,r11d
   14002b903:	jmp    0x14002b878
   14002b908:	movzx  eax,WORD PTR [r8]
   14002b90c:	bts    r14d,0xf
   14002b911:	cmp    ax,0x36
   14002b915:	jne    0x14002b92d
   14002b917:	cmp    WORD PTR [r8+0x2],0x34
   14002b91d:	jne    0x14002b92d
   14002b91f:	add    r8,0x4
   14002b923:	bts    r14d,0xf
   14002b928:	jmp    0x14002b878
   14002b92d:	cmp    ax,0x33
   14002b931:	jne    0x14002b949
   14002b933:	cmp    WORD PTR [r8+0x2],0x32
   14002b939:	jne    0x14002b949
   14002b93b:	add    r8,0x4
   14002b93f:	btr    r14d,0xf
   14002b944:	jmp    0x14002b878
   14002b949:	sub    ax,0x58
   14002b94d:	cmp    ax,r11w
   14002b951:	ja     0x14002b967
   14002b953:	movabs rcx,0x120821001
   14002b95d:	bt     rcx,rax
   14002b961:	jb     0x14002b878
   14002b967:	mov    DWORD PTR [rsp+0x68],r10d
   14002b96c:	mov    rdx,QWORD PTR [rsp+0x78]
   14002b971:	lea    r8,[rsp+0x40]
   14002b976:	movzx  ecx,r15w
   14002b97a:	mov    DWORD PTR [rsp+0x4c],0x1
   14002b982:	call   0x14002baa4
   14002b987:	mov    esi,DWORD PTR [rsp+0x40]
   14002b98b:	xor    r10d,r10d
   14002b98e:	lea    r11d,[r10+0x20]
   14002b992:	jmp    0x14002b86a
   14002b997:	cmp    r15w,0x2a
   14002b99c:	jne    0x14002b9bc
   14002b99e:	mov    edi,DWORD PTR [r12]
   14002b9a2:	add    r12,0x8
   14002b9a6:	mov    QWORD PTR [rsp+0x50],r12
   14002b9ab:	mov    DWORD PTR [rsp+0x44],edi
   14002b9af:	test   edi,edi
   14002b9b1:	jns    0x14002b878
   14002b9b7:	or     edi,0xffffffff
   14002b9ba:	jmp    0x14002b9c9
   14002b9bc:	lea    edi,[rdi+rdi*4]
   14002b9bf:	movzx  eax,r15w
   14002b9c3:	lea    edi,[rdi-0x18]
   14002b9c6:	lea    edi,[rax+rdi*2]
   14002b9c9:	mov    DWORD PTR [rsp+0x44],edi
   14002b9cd:	jmp    0x14002b878
   14002b9d2:	mov    edi,r10d
   14002b9d5:	mov    DWORD PTR [rsp+0x44],r10d
   14002b9da:	jmp    0x14002b878
   14002b9df:	cmp    r15w,0x2a
   14002b9e4:	jne    0x14002ba07
   14002b9e6:	mov    eax,DWORD PTR [r12]
   14002b9ea:	add    r12,0x8
   14002b9ee:	mov    QWORD PTR [rsp+0x50],r12
   14002b9f3:	mov    DWORD PTR [rsp+0x58],eax
   14002b9f7:	test   eax,eax
   14002b9f9:	jns    0x14002b878
   14002b9ff:	or     r14d,0x4
   14002ba03:	neg    eax
   14002ba05:	jmp    0x14002ba18
   14002ba07:	mov    eax,DWORD PTR [rsp+0x58]
   14002ba0b:	lea    ecx,[rax+rax*4]
   14002ba0e:	movzx  eax,r15w
   14002ba12:	lea    eax,[rax+rcx*2]
   14002ba15:	add    eax,0xffffffd0
   14002ba18:	mov    DWORD PTR [rsp+0x58],eax
   14002ba1c:	jmp    0x14002b878
   14002ba21:	movzx  eax,r15w
   14002ba25:	cmp    eax,r11d
   14002ba28:	je     0x14002ba73
   14002ba2a:	cmp    eax,0x23
   14002ba2d:	je     0x14002ba69
   14002ba2f:	mov    ecx,0x2b
   14002ba34:	cmp    eax,ecx
   14002ba36:	je     0x14002ba60
   14002ba38:	mov    ecx,0x2d
   14002ba3d:	cmp    eax,ecx
   14002ba3f:	je     0x14002ba57
   14002ba41:	mov    ecx,0x30
   14002ba46:	cmp    eax,ecx
   14002ba48:	jne    0x14002b878
   14002ba4e:	or     r14d,0x8
   14002ba52:	jmp    0x14002b878
   14002ba57:	or     r14d,0x4
   14002ba5b:	jmp    0x14002b878
   14002ba60:	or     r14d,0x1
   14002ba64:	jmp    0x14002b878
   14002ba69:	bts    r14d,0x7
   14002ba6e:	jmp    0x14002b878
   14002ba73:	or     r14d,0x2
   14002ba77:	jmp    0x14002b878
   14002ba7c:	or     edi,0xffffffff
   14002ba7f:	mov    DWORD PTR [rbp-0x78],r10d
   14002ba83:	mov    DWORD PTR [rsp+0x6c],r10d
   14002ba88:	mov    DWORD PTR [rsp+0x58],r10d
   14002ba8d:	mov    DWORD PTR [rsp+0x48],r10d
   14002ba92:	mov    r14d,r10d
   14002ba95:	mov    DWORD PTR [rsp+0x44],edi
   14002ba99:	mov    DWORD PTR [rsp+0x4c],r10d
   14002ba9e:	jmp    0x14002b878
   14002baa3:	int3   
   14002baa4:	rex push rbx
   14002baa6:	sub    rsp,0x20
   14002baaa:	test   BYTE PTR [rdx+0x18],0x40
   14002baae:	mov    rbx,r8
   14002bab1:	je     0x14002babf
   14002bab3:	cmp    QWORD PTR [rdx+0x10],0x0
   14002bab8:	jne    0x14002babf
   14002baba:	inc    DWORD PTR [r8]
   14002babd:	jmp    0x14002bad5
   14002babf:	call   0x14002ff20
   14002bac4:	mov    ecx,0xffff
   14002bac9:	cmp    ax,cx
   14002bacc:	jne    0x14002bad3
   14002bace:	or     DWORD PTR [rbx],0xffffffff
   14002bad1:	jmp    0x14002bad5
   14002bad3:	inc    DWORD PTR [rbx]
   14002bad5:	add    rsp,0x20
   14002bad9:	pop    rbx
   14002bada:	ret    
   14002badb:	int3   
   14002badc:	mov    QWORD PTR [rsp+0x8],rbx
   14002bae1:	mov    QWORD PTR [rsp+0x10],rbp
   14002bae6:	mov    QWORD PTR [rsp+0x18],rsi
   14002baeb:	push   rdi
   14002baec:	push   r14
   14002baee:	push   r15
   14002baf0:	sub    rsp,0x20
   14002baf4:	test   BYTE PTR [r8+0x18],0x40
   14002baf9:	mov    rbx,QWORD PTR [rsp+0x60]
   14002bafe:	mov    rdi,r9
   14002bb01:	mov    r15d,DWORD PTR [rbx]
   14002bb04:	mov    rbp,r8
   14002bb07:	mov    esi,edx
   14002bb09:	mov    r14,rcx
   14002bb0c:	je     0x14002bb1a
   14002bb0e:	cmp    QWORD PTR [r8+0x10],0x0
   14002bb13:	jne    0x14002bb1a
   14002bb15:	add    DWORD PTR [r9],edx
   14002bb18:	jmp    0x14002bb5c
   14002bb1a:	and    DWORD PTR [rbx],0x0
   14002bb1d:	test   edx,edx
   14002bb1f:	jle    0x14002bb59
   14002bb21:	movzx  ecx,WORD PTR [r14]
   14002bb25:	mov    r8,rdi
   14002bb28:	mov    rdx,rbp
   14002bb2b:	dec    esi
   14002bb2d:	call   0x14002baa4
   14002bb32:	cmp    DWORD PTR [rdi],0xffffffff
   14002bb35:	lea    r14,[r14+0x2]
   14002bb39:	jne    0x14002bb50
   14002bb3b:	cmp    DWORD PTR [rbx],0x2a
   14002bb3e:	jne    0x14002bb54
   14002bb40:	mov    ecx,0x3f
   14002bb45:	mov    r8,rdi
   14002bb48:	mov    rdx,rbp
   14002bb4b:	call   0x14002baa4
   14002bb50:	test   esi,esi
   14002bb52:	jg     0x14002bb21
   14002bb54:	cmp    DWORD PTR [rbx],0x0
   14002bb57:	jne    0x14002bb5c
   14002bb59:	mov    DWORD PTR [rbx],r15d
   14002bb5c:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bb61:	mov    rbp,QWORD PTR [rsp+0x48]
   14002bb66:	mov    rsi,QWORD PTR [rsp+0x50]
   14002bb6b:	add    rsp,0x20
   14002bb6f:	pop    r15
   14002bb71:	pop    r14
   14002bb73:	pop    rdi
   14002bb74:	ret    
   14002bb75:	int3   
   14002bb76:	int3   
   14002bb77:	int3   
   14002bb78:	int3   
   14002bb79:	int3   
   14002bb7a:	int3   
   14002bb7b:	int3   
   14002bb7c:	int3   
   14002bb7d:	int3   
   14002bb7e:	int3   
   14002bb7f:	int3   
   14002bb80:	int3   
   14002bb81:	int3   
   14002bb82:	int3   
   14002bb83:	int3   
   14002bb84:	int3   
   14002bb85:	int3   
   14002bb86:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002bb90:	mov    r11,rcx
   14002bb93:	cmp    r8,0x8
   14002bb97:	jb     0x14002bc04
   14002bb99:	movzx  edx,dl
   14002bb9c:	bt     DWORD PTR [rip+0x30a0c],0x1        # 0x14005c5b0
   14002bba4:	jae    0x14002bbb4
   14002bba6:	push   rdi
   14002bba7:	mov    rdi,rcx
   14002bbaa:	mov    eax,edx
   14002bbac:	mov    rcx,r8
   14002bbaf:	rep stos BYTE PTR es:[rdi],al
   14002bbb1:	pop    rdi
   14002bbb2:	jmp    0x14002bc13
   14002bbb4:	movabs r9,0x101010101010101
   14002bbbe:	imul   rdx,r9
   14002bbc2:	cmp    r8,0x40
   14002bbc6:	jb     0x14002bbe6
   14002bbc8:	neg    rcx
   14002bbcb:	and    ecx,0x7
   14002bbce:	je     0x14002bbd6
   14002bbd0:	sub    r8,rcx
   14002bbd3:	mov    QWORD PTR [r11],rdx
   14002bbd6:	add    rcx,r11
   14002bbd9:	mov    r9,r8
   14002bbdc:	and    r8,0x3f
   14002bbe0:	shr    r9,0x6
   14002bbe4:	jne    0x14002bc27
   14002bbe6:	mov    r9,r8
   14002bbe9:	and    r8,0x7
   14002bbed:	shr    r9,0x3
   14002bbf1:	je     0x14002bc04
   14002bbf3:	data16 data16 xchg ax,ax
   14002bbf7:	nop
   14002bbf8:	mov    QWORD PTR [rcx],rdx
   14002bbfb:	add    rcx,0x8
   14002bbff:	dec    r9
   14002bc02:	jne    0x14002bbf8
   14002bc04:	test   r8,r8
   14002bc07:	je     0x14002bc13
   14002bc09:	mov    BYTE PTR [rcx],dl
   14002bc0b:	inc    rcx
   14002bc0e:	dec    r8
   14002bc11:	jne    0x14002bc09
   14002bc13:	mov    rax,r11
   14002bc16:	ret    
   14002bc17:	nop    WORD PTR [rax+rax*1+0x0]
   14002bc20:	data16 data16 xchg ax,ax
   14002bc24:	data16 xchg ax,ax
   14002bc27:	cmp    r9,0x1c00
   14002bc2e:	jae    0x14002bc60
   14002bc30:	mov    QWORD PTR [rcx],rdx
   14002bc33:	mov    QWORD PTR [rcx+0x8],rdx
   14002bc37:	mov    QWORD PTR [rcx+0x10],rdx
   14002bc3b:	add    rcx,0x40
   14002bc3f:	mov    QWORD PTR [rcx-0x28],rdx
   14002bc43:	mov    QWORD PTR [rcx-0x20],rdx
   14002bc47:	dec    r9
   14002bc4a:	mov    QWORD PTR [rcx-0x18],rdx
   14002bc4e:	mov    QWORD PTR [rcx-0x10],rdx
   14002bc52:	mov    QWORD PTR [rcx-0x8],rdx
   14002bc56:	jne    0x14002bc30
   14002bc58:	jmp    0x14002bbe6
   14002bc5a:	nop    WORD PTR [rax+rax*1+0x0]
   14002bc60:	movnti QWORD PTR [rcx],rdx
   14002bc64:	movnti QWORD PTR [rcx+0x8],rdx
   14002bc69:	movnti QWORD PTR [rcx+0x10],rdx
   14002bc6e:	add    rcx,0x40
   14002bc72:	movnti QWORD PTR [rcx-0x28],rdx
   14002bc77:	movnti QWORD PTR [rcx-0x20],rdx
   14002bc7c:	dec    r9
   14002bc7f:	movnti QWORD PTR [rcx-0x18],rdx
   14002bc84:	movnti QWORD PTR [rcx-0x10],rdx
   14002bc89:	movnti QWORD PTR [rcx-0x8],rdx
   14002bc8e:	jne    0x14002bc60
   14002bc90:	lock or BYTE PTR [rsp],0x0
   14002bc95:	jmp    0x14002bbe6
   14002bc9a:	int3   
   14002bc9b:	int3   
   14002bc9c:	mov    WORD PTR [rsp+0x8],cx
   14002bca1:	push   rbx
   14002bca2:	sub    rsp,0x20
   14002bca6:	mov    eax,0xffff
   14002bcab:	movzx  ebx,dx
   14002bcae:	cmp    cx,ax
   14002bcb1:	jne    0x14002bcb7
   14002bcb3:	xor    eax,eax
   14002bcb5:	jmp    0x14002bcfc
   14002bcb7:	mov    eax,0x100
   14002bcbc:	cmp    cx,ax
   14002bcbf:	jae    0x14002bcd1
   14002bcc1:	mov    rax,QWORD PTR [rip+0x2e5f8]        # 0x14005a2c0
   14002bcc8:	movzx  ecx,cx
   14002bccb:	movzx  eax,WORD PTR [rax+rcx*2]
   14002bccf:	jmp    0x14002bcf7
   14002bcd1:	mov    ecx,0x1
   14002bcd6:	lea    r9,[rsp+0x40]
   14002bcdb:	lea    rdx,[rsp+0x30]
   14002bce0:	mov    r8d,ecx
   14002bce3:	call   QWORD PTR [rip+0x157f7]        # 0x1400414e0
   14002bce9:	xor    ecx,ecx
   14002bceb:	test   eax,eax
   14002bced:	je     0x14002bcf4
   14002bcef:	movzx  ecx,WORD PTR [rsp+0x40]
   14002bcf4:	movzx  eax,cx
   14002bcf7:	movzx  ecx,bx
   14002bcfa:	and    eax,ecx
   14002bcfc:	add    rsp,0x20
   14002bd00:	pop    rbx
   14002bd01:	ret    
   14002bd02:	int3   
   14002bd03:	int3   
   14002bd04:	mov    edx,0x30
   14002bd09:	cmp    cx,dx
   14002bd0c:	jb     0x14002be95
   14002bd12:	cmp    cx,0x3a
   14002bd16:	jae    0x14002bd1e
   14002bd18:	movzx  eax,cx
   14002bd1b:	sub    eax,edx
   14002bd1d:	ret    
   14002bd1e:	mov    edx,0xff10
   14002bd23:	cmp    cx,dx
   14002bd26:	jae    0x14002be87
   14002bd2c:	mov    edx,0x660
   14002bd31:	cmp    cx,dx
   14002bd34:	jb     0x14002be95
   14002bd3a:	lea    eax,[rdx+0xa]
   14002bd3d:	cmp    cx,ax
   14002bd40:	jb     0x14002bd18
   14002bd42:	mov    edx,0x6f0
   14002bd47:	cmp    cx,dx
   14002bd4a:	jb     0x14002be95
   14002bd50:	lea    eax,[rdx+0xa]
   14002bd53:	cmp    cx,ax
   14002bd56:	jb     0x14002bd18
   14002bd58:	mov    edx,0x966
   14002bd5d:	cmp    cx,dx
   14002bd60:	jb     0x14002be95
   14002bd66:	lea    eax,[rdx+0xa]
   14002bd69:	cmp    cx,ax
   14002bd6c:	jb     0x14002bd18
   14002bd6e:	lea    edx,[rax+0x76]
   14002bd71:	cmp    cx,dx
   14002bd74:	jb     0x14002be95
   14002bd7a:	lea    eax,[rdx+0xa]
   14002bd7d:	cmp    cx,ax
   14002bd80:	jb     0x14002bd18
   14002bd82:	lea    edx,[rax+0x76]
   14002bd85:	cmp    cx,dx
   14002bd88:	jb     0x14002be95
   14002bd8e:	lea    eax,[rdx+0xa]
   14002bd91:	cmp    cx,ax
   14002bd94:	jb     0x14002bd18
   14002bd96:	lea    edx,[rax+0x76]
   14002bd99:	cmp    cx,dx
   14002bd9c:	jb     0x14002be95
   14002bda2:	lea    eax,[rdx+0xa]
   14002bda5:	cmp    cx,ax
   14002bda8:	jb     0x14002bd18
   14002bdae:	lea    edx,[rax+0x76]
   14002bdb1:	cmp    cx,dx
   14002bdb4:	jb     0x14002be95
   14002bdba:	lea    eax,[rdx+0xa]
   14002bdbd:	cmp    cx,ax
   14002bdc0:	jb     0x14002bd18
   14002bdc6:	mov    edx,0xc66
   14002bdcb:	cmp    cx,dx
   14002bdce:	jb     0x14002be95
   14002bdd4:	lea    eax,[rdx+0xa]
   14002bdd7:	cmp    cx,ax
   14002bdda:	jb     0x14002bd18
   14002bde0:	lea    edx,[rax+0x76]
   14002bde3:	cmp    cx,dx
   14002bde6:	jb     0x14002be95
   14002bdec:	lea    eax,[rdx+0xa]
   14002bdef:	cmp    cx,ax
   14002bdf2:	jb     0x14002bd18
   14002bdf8:	lea    edx,[rax+0x76]
   14002bdfb:	cmp    cx,dx
   14002bdfe:	jb     0x14002be95
   14002be04:	lea    eax,[rdx+0xa]
   14002be07:	cmp    cx,ax
   14002be0a:	jb     0x14002bd18
   14002be10:	mov    edx,0xe50
   14002be15:	cmp    cx,dx
   14002be18:	jb     0x14002be95
   14002be1a:	lea    eax,[rdx+0xa]
   14002be1d:	cmp    cx,ax
   14002be20:	jb     0x14002bd18
   14002be26:	lea    edx,[rax+0x76]
   14002be29:	cmp    cx,dx
   14002be2c:	jb     0x14002be95
   14002be2e:	lea    eax,[rdx+0xa]
   14002be31:	cmp    cx,ax
   14002be34:	jb     0x14002bd18
   14002be3a:	lea    edx,[rax+0x46]
   14002be3d:	cmp    cx,dx
   14002be40:	jb     0x14002be95
   14002be42:	lea    eax,[rdx+0xa]
   14002be45:	cmp    cx,ax
   14002be48:	jb     0x14002bd18
   14002be4e:	mov    edx,0x1040
   14002be53:	cmp    cx,dx
   14002be56:	jb     0x14002be95
   14002be58:	lea    eax,[rdx+0xa]
   14002be5b:	cmp    cx,ax
   14002be5e:	jb     0x14002bd18
   14002be64:	mov    edx,0x17e0
   14002be69:	cmp    cx,dx
   14002be6c:	jb     0x14002be95
   14002be6e:	lea    eax,[rdx+0xa]
   14002be71:	cmp    cx,ax
   14002be74:	jb     0x14002bd18
   14002be7a:	lea    edx,[rax+0x26]
   14002be7d:	cmp    cx,dx
   14002be80:	jb     0x14002be95
   14002be82:	lea    eax,[rdx+0xa]
   14002be85:	jmp    0x14002be8c
   14002be87:	mov    eax,0xff1a
   14002be8c:	cmp    cx,ax
   14002be8f:	jb     0x14002bd18
   14002be95:	or     eax,0xffffffff
   14002be98:	ret    
   14002be99:	int3   
   14002be9a:	int3   
   14002be9b:	int3   
   14002be9c:	mov    QWORD PTR [rsp+0x18],rbx
   14002bea1:	push   rbp
   14002bea2:	push   rsi
   14002bea3:	push   rdi
   14002bea4:	push   r12
   14002bea6:	push   r13
   14002bea8:	push   r14
   14002beaa:	push   r15
   14002beac:	lea    rbp,[rsp-0x3e0]
   14002beb4:	sub    rsp,0x4e0
   14002bebb:	mov    rax,QWORD PTR [rip+0x2d1c6]        # 0x140059088
   14002bec2:	xor    rax,rsp
   14002bec5:	mov    QWORD PTR [rbp+0x3d0],rax
   14002becc:	xor    eax,eax
   14002bece:	mov    rbx,rcx
   14002bed1:	mov    QWORD PTR [rsp+0x78],rcx
   14002bed6:	mov    QWORD PTR [rbp-0x80],rdx
   14002beda:	lea    rcx,[rbp-0x70]
   14002bede:	mov    rdx,r8
   14002bee1:	mov    r12,r9
   14002bee4:	mov    QWORD PTR [rsp+0x50],r9
   14002bee9:	mov    DWORD PTR [rsp+0x74],eax
   14002beed:	mov    r14d,eax
   14002bef0:	mov    DWORD PTR [rsp+0x5c],eax
   14002bef4:	mov    edi,eax
   14002bef6:	mov    DWORD PTR [rsp+0x44],eax
   14002befa:	mov    DWORD PTR [rsp+0x48],eax
   14002befe:	mov    DWORD PTR [rsp+0x70],eax
   14002bf02:	mov    DWORD PTR [rsp+0x58],eax
   14002bf06:	call   0x140026f30
   14002bf0b:	call   0x140029bf8
   14002bf10:	mov    QWORD PTR [rbp-0x48],rax
   14002bf14:	call   0x140028a64
   14002bf19:	xor    r10d,r10d
   14002bf1c:	test   eax,eax
   14002bf1e:	jns    0x14002bf39
   14002bf20:	cmp    BYTE PTR [rbp-0x58],r10b
   14002bf24:	je     0x14002bf31
   14002bf26:	mov    rax,QWORD PTR [rbp-0x60]
   14002bf2a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002bf31:	or     eax,0xffffffff
   14002bf34:	jmp    0x14002c763
   14002bf39:	test   rbx,rbx
   14002bf3c:	jne    0x14002bf55
   14002bf3e:	call   0x140029bf8
   14002bf43:	mov    DWORD PTR [rax],0x16
   14002bf49:	call   0x140029b2c
   14002bf4e:	xor    ecx,ecx
   14002bf50:	cmp    BYTE PTR [rbp-0x58],cl
   14002bf53:	jmp    0x14002bf24
   14002bf55:	mov    r8,QWORD PTR [rbp-0x80]
   14002bf59:	test   r8,r8
   14002bf5c:	je     0x14002bf3e
   14002bf5e:	movzx  r15d,WORD PTR [r8]
   14002bf62:	mov    edx,r10d
   14002bf65:	mov    r13d,r10d
   14002bf68:	mov    r9d,r10d
   14002bf6b:	mov    QWORD PTR [rbp-0x50],r10
   14002bf6f:	mov    DWORD PTR [rsp+0x40],edx
   14002bf73:	test   r15w,r15w
   14002bf77:	je     0x14002c750
   14002bf7d:	mov    rbx,QWORD PTR [rbp-0x40]
   14002bf81:	or     esi,0xffffffff
   14002bf84:	lea    r11d,[rsi+0x21]
   14002bf88:	add    r8,0x2
   14002bf8c:	mov    ecx,0x58
   14002bf91:	mov    QWORD PTR [rbp-0x80],r8
   14002bf95:	test   edx,edx
   14002bf97:	js     0x14002c741
   14002bf9d:	movzx  eax,r15w
   14002bfa1:	sub    ax,r11w
   14002bfa5:	cmp    ax,cx
   14002bfa8:	ja     0x14002bfbf
   14002bfaa:	lea    rcx,[rip+0x17d5f]        # 0x140043d10
   14002bfb1:	movzx  eax,r15w
   14002bfb5:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14002bfba:	and    ecx,0xf
   14002bfbd:	jmp    0x14002bfc2
   14002bfbf:	mov    ecx,r10d
   14002bfc2:	movsxd rax,ecx
   14002bfc5:	lea    rcx,[rax+rax*8]
   14002bfc9:	movsxd rax,r9d
   14002bfcc:	add    rcx,rax
   14002bfcf:	lea    rax,[rip+0x17d3a]        # 0x140043d10
   14002bfd6:	movzx  r9d,BYTE PTR [rcx+rax*1]
   14002bfdb:	shr    r9d,0x4
   14002bfdf:	mov    DWORD PTR [rsp+0x6c],r9d
   14002bfe4:	cmp    r9d,0x8
   14002bfe8:	je     0x14002c975
   14002bfee:	mov    ecx,r9d
   14002bff1:	test   r9d,r9d
   14002bff4:	je     0x14002c839
   14002bffa:	dec    ecx
   14002bffc:	je     0x14002c94f
   14002c002:	dec    ecx
   14002c004:	je     0x14002c8f4
   14002c00a:	dec    ecx
   14002c00c:	je     0x14002c8b2
   14002c012:	dec    ecx
   14002c014:	je     0x14002c8a5
   14002c01a:	dec    ecx
   14002c01c:	je     0x14002c864
   14002c022:	dec    ecx
   14002c024:	je     0x14002c78d
   14002c02a:	dec    ecx
   14002c02c:	jne    0x14002c733
   14002c032:	movzx  ecx,r15w
   14002c036:	cmp    ecx,0x64
   14002c039:	jg     0x14002c24e
   14002c03f:	je     0x14002c36d
   14002c045:	cmp    ecx,0x41
   14002c048:	je     0x14002c217
   14002c04e:	cmp    ecx,0x43
   14002c051:	je     0x14002c1a1
   14002c057:	lea    eax,[rcx-0x45]
   14002c05a:	test   eax,0xfffffffd
   14002c05f:	je     0x14002c217
   14002c065:	cmp    ecx,0x53
   14002c068:	je     0x14002c12b
   14002c06e:	mov    eax,0x58
   14002c073:	cmp    ecx,eax
   14002c075:	je     0x14002c2e0
   14002c07b:	cmp    ecx,0x5a
   14002c07e:	je     0x14002c0ca
   14002c080:	cmp    ecx,0x61
   14002c083:	je     0x14002c222
   14002c089:	cmp    ecx,0x63
   14002c08c:	je     0x14002c1ad
   14002c092:	mov    edi,0x2d
   14002c097:	cmp    DWORD PTR [rsp+0x70],r10d
   14002c09c:	jne    0x14002c6f9
   14002c0a2:	test   r14b,0x40
   14002c0a6:	je     0x14002c5cd
   14002c0ac:	bt     r14d,0x8
   14002c0b1:	jae    0x14002c59f
   14002c0b7:	mov    WORD PTR [rsp+0x60],di
   14002c0bc:	mov    esi,0x1
   14002c0c1:	mov    DWORD PTR [rsp+0x48],esi
   14002c0c5:	jmp    0x14002c5d1
   14002c0ca:	mov    rax,QWORD PTR [r12]
   14002c0ce:	add    r12,0x8
   14002c0d2:	mov    QWORD PTR [rsp+0x50],r12
   14002c0d7:	test   rax,rax
   14002c0da:	je     0x14002c111
   14002c0dc:	mov    rbx,QWORD PTR [rax+0x8]
   14002c0e0:	test   rbx,rbx
   14002c0e3:	je     0x14002c111
   14002c0e5:	mov    edi,0x2d
   14002c0ea:	bt     r14d,0xb
   14002c0ef:	jae    0x14002c106
   14002c0f1:	movsx  eax,WORD PTR [rax]
   14002c0f4:	mov    DWORD PTR [rsp+0x58],0x1
   14002c0fc:	cdq    
   14002c0fd:	sub    eax,edx
   14002c0ff:	sar    eax,1
   14002c101:	mov    r13d,eax
   14002c104:	jmp    0x14002c097
   14002c106:	movsx  r13d,WORD PTR [rax]
   14002c10a:	mov    DWORD PTR [rsp+0x58],r10d
   14002c10f:	jmp    0x14002c097
   14002c111:	mov    rbx,QWORD PTR [rip+0x2de48]        # 0x140059f60
   14002c118:	mov    rcx,rbx
   14002c11b:	call   0x14002e0d0
   14002c120:	xor    r10d,r10d
   14002c123:	mov    r13,rax
   14002c126:	jmp    0x14002c092
   14002c12b:	test   r14d,0x830
   14002c132:	jne    0x14002c137
   14002c134:	or     r14d,r11d
   14002c137:	cmp    DWORD PTR [rsp+0x44],esi
   14002c13b:	mov    rbx,QWORD PTR [r12]
   14002c13f:	mov    eax,0x7fffffff
   14002c144:	cmove  edi,eax
   14002c147:	add    r12,0x8
   14002c14b:	mov    QWORD PTR [rsp+0x50],r12
   14002c150:	test   r11b,r14b
   14002c153:	je     0x14002c2a0
   14002c159:	test   rbx,rbx
   14002c15c:	mov    r13d,r10d
   14002c15f:	cmove  rbx,QWORD PTR [rip+0x2ddf9]        # 0x140059f60
   14002c167:	mov    rsi,rbx
   14002c16a:	test   edi,edi
   14002c16c:	jle    0x14002c092
   14002c172:	cmp    BYTE PTR [rsi],r10b
   14002c175:	je     0x14002c092
   14002c17b:	movzx  ecx,BYTE PTR [rsi]
   14002c17e:	lea    rdx,[rbp-0x70]
   14002c182:	call   0x14002fe88
   14002c187:	xor    r10d,r10d
   14002c18a:	test   eax,eax
   14002c18c:	je     0x14002c191
   14002c18e:	inc    rsi
   14002c191:	inc    r13d
   14002c194:	inc    rsi
   14002c197:	cmp    r13d,edi
   14002c19a:	jl     0x14002c172
   14002c19c:	jmp    0x14002c092
   14002c1a1:	test   r14d,0x830
   14002c1a8:	jne    0x14002c1ad
   14002c1aa:	or     r14d,r11d
   14002c1ad:	movzx  eax,WORD PTR [r12]
   14002c1b2:	add    r12,0x8
   14002c1b6:	mov    DWORD PTR [rsp+0x58],0x1
   14002c1be:	mov    QWORD PTR [rsp+0x50],r12
   14002c1c3:	mov    WORD PTR [rsp+0x64],ax
   14002c1c8:	test   r11b,r14b
   14002c1cb:	je     0x14002c204
   14002c1cd:	mov    BYTE PTR [rsp+0x68],al
   14002c1d1:	mov    rax,QWORD PTR [rbp-0x70]
   14002c1d5:	mov    BYTE PTR [rsp+0x69],r10b
   14002c1da:	movsxd r8,DWORD PTR [rax+0xd4]
   14002c1e1:	lea    r9,[rbp-0x70]
   14002c1e5:	lea    rdx,[rsp+0x68]
   14002c1ea:	lea    rcx,[rbp-0x30]
   14002c1ee:	call   0x1400300f8
   14002c1f3:	xor    r10d,r10d
   14002c1f6:	test   eax,eax
   14002c1f8:	jns    0x14002c208
   14002c1fa:	mov    DWORD PTR [rsp+0x70],0x1
   14002c202:	jmp    0x14002c208
   14002c204:	mov    WORD PTR [rbp-0x30],ax
   14002c208:	lea    rbx,[rbp-0x30]
   14002c20c:	mov    r13d,0x1
   14002c212:	jmp    0x14002c092
   14002c217:	mov    DWORD PTR [rbp-0x78],0x1
   14002c21e:	add    r15w,r11w
   14002c222:	mov    edx,0x67
   14002c227:	mov    eax,0x200
   14002c22c:	or     r14d,0x40
   14002c230:	lea    rbx,[rbp-0x30]
   14002c234:	mov    esi,eax
   14002c236:	test   edi,edi
   14002c238:	jns    0x14002c495
   14002c23e:	mov    r13d,0x6
   14002c244:	mov    DWORD PTR [rsp+0x44],r13d
   14002c249:	jmp    0x14002c4e6
   14002c24e:	cmp    ecx,0x65
   14002c251:	jl     0x14002c092
   14002c257:	mov    edx,0x67
   14002c25c:	cmp    ecx,edx
   14002c25e:	jle    0x14002c227
   14002c260:	cmp    ecx,0x69
   14002c263:	je     0x14002c36d
   14002c269:	cmp    ecx,0x6e
   14002c26c:	je     0x14002c32b
   14002c272:	cmp    ecx,0x6f
   14002c275:	je     0x14002c316
   14002c27b:	cmp    ecx,0x70
   14002c27e:	je     0x14002c2d6
   14002c280:	cmp    ecx,0x73
   14002c283:	je     0x14002c137
   14002c289:	cmp    ecx,0x75
   14002c28c:	je     0x14002c371
   14002c292:	cmp    ecx,0x78
   14002c295:	jne    0x14002c092
   14002c29b:	lea    eax,[rdx-0x40]
   14002c29e:	jmp    0x14002c2e5
   14002c2a0:	test   rbx,rbx
   14002c2a3:	mov    DWORD PTR [rsp+0x58],0x1
   14002c2ab:	cmove  rbx,QWORD PTR [rip+0x2dcb5]        # 0x140059f68
   14002c2b3:	mov    rax,rbx
   14002c2b6:	jmp    0x14002c2c4
   14002c2b8:	dec    edi
   14002c2ba:	cmp    WORD PTR [rax],r10w
   14002c2be:	je     0x14002c2c8
   14002c2c0:	add    rax,0x2
   14002c2c4:	test   edi,edi
   14002c2c6:	jne    0x14002c2b8
   14002c2c8:	sub    rax,rbx
   14002c2cb:	sar    rax,1
   14002c2ce:	mov    r13d,eax
   14002c2d1:	jmp    0x14002c092
   14002c2d6:	mov    edi,0x10
   14002c2db:	bts    r14d,0xf
   14002c2e0:	mov    eax,0x7
   14002c2e5:	mov    r9d,0x10
   14002c2eb:	mov    DWORD PTR [rsp+0x74],eax
   14002c2ef:	mov    esi,0x200
   14002c2f4:	lea    r15d,[r9+0x20]
   14002c2f8:	test   r14b,r14b
   14002c2fb:	jns    0x14002c382
   14002c301:	add    ax,0x51
   14002c305:	mov    WORD PTR [rsp+0x60],r15w
   14002c30b:	lea    edx,[r9-0xe]
   14002c30f:	mov    WORD PTR [rsp+0x62],ax
   14002c314:	jmp    0x14002c386
   14002c316:	mov    r9d,0x8
   14002c31c:	test   r14b,r14b
   14002c31f:	jns    0x14002c377
   14002c321:	mov    esi,0x200
   14002c326:	or     r14d,esi
   14002c329:	jmp    0x14002c37c
   14002c32b:	mov    rdi,QWORD PTR [r12]
   14002c32f:	add    r12,0x8
   14002c333:	mov    QWORD PTR [rsp+0x50],r12
   14002c338:	call   0x140027b80
   14002c33d:	xor    r10d,r10d
   14002c340:	test   eax,eax
   14002c342:	je     0x14002c975
   14002c348:	mov    eax,DWORD PTR [rsp+0x40]
   14002c34c:	lea    r11d,[r10+0x20]
   14002c350:	test   r11b,r14b
   14002c353:	je     0x14002c35a
   14002c355:	mov    WORD PTR [rdi],ax
   14002c358:	jmp    0x14002c35c
   14002c35a:	mov    DWORD PTR [rdi],eax
   14002c35c:	mov    edx,DWORD PTR [rsp+0x40]
   14002c360:	mov    DWORD PTR [rsp+0x70],0x1
   14002c368:	jmp    0x14002c703
   14002c36d:	or     r14d,0x40
   14002c371:	mov    r9d,0xa
   14002c377:	mov    esi,0x200
   14002c37c:	mov    r15d,0x30
   14002c382:	mov    edx,DWORD PTR [rsp+0x48]
   14002c386:	mov    eax,0x8000
   14002c38b:	test   eax,r14d
   14002c38e:	je     0x14002c39a
   14002c390:	mov    r8,QWORD PTR [r12]
   14002c394:	add    r12,0x8
   14002c398:	jmp    0x14002c3d7
   14002c39a:	bt     r14d,0xc
   14002c39f:	jb     0x14002c390
   14002c3a1:	add    r12,0x8
   14002c3a5:	test   r11b,r14b
   14002c3a8:	je     0x14002c3c5
   14002c3aa:	mov    QWORD PTR [rsp+0x50],r12
   14002c3af:	test   r14b,0x40
   14002c3b3:	je     0x14002c3bd
   14002c3b5:	movsx  r8,WORD PTR [r12-0x8]
   14002c3bb:	jmp    0x14002c3dc
   14002c3bd:	movzx  r8d,WORD PTR [r12-0x8]
   14002c3c3:	jmp    0x14002c3dc
   14002c3c5:	test   r14b,0x40
   14002c3c9:	je     0x14002c3d2
   14002c3cb:	movsxd r8,DWORD PTR [r12-0x8]
   14002c3d0:	jmp    0x14002c3d7
   14002c3d2:	mov    r8d,DWORD PTR [r12-0x8]
   14002c3d7:	mov    QWORD PTR [rsp+0x50],r12
   14002c3dc:	test   r14b,0x40
   14002c3e0:	je     0x14002c3ef
   14002c3e2:	test   r8,r8
   14002c3e5:	jns    0x14002c3ef
   14002c3e7:	neg    r8
   14002c3ea:	bts    r14d,0x8
   14002c3ef:	test   eax,r14d
   14002c3f2:	jne    0x14002c3fe
   14002c3f4:	bt     r14d,0xc
   14002c3f9:	jb     0x14002c3fe
   14002c3fb:	mov    r8d,r8d
   14002c3fe:	test   edi,edi
   14002c400:	jns    0x14002c409
   14002c402:	mov    edi,0x1
   14002c407:	jmp    0x14002c412
   14002c409:	and    r14d,0xfffffff7
   14002c40d:	cmp    edi,esi
   14002c40f:	cmovg  edi,esi
   14002c412:	mov    r12d,DWORD PTR [rsp+0x74]
   14002c417:	mov    rax,r8
   14002c41a:	lea    rbx,[rbp+0x1cf]
   14002c421:	neg    rax
   14002c424:	sbb    ecx,ecx
   14002c426:	and    ecx,edx
   14002c428:	mov    DWORD PTR [rsp+0x48],ecx
   14002c42c:	mov    ecx,edi
   14002c42e:	dec    edi
   14002c430:	test   ecx,ecx
   14002c432:	jg     0x14002c439
   14002c434:	test   r8,r8
   14002c437:	je     0x14002c459
   14002c439:	xor    edx,edx
   14002c43b:	mov    rax,r8
   14002c43e:	movsxd rcx,r9d
   14002c441:	div    rcx
   14002c444:	mov    r8,rax
   14002c447:	lea    eax,[rdx+0x30]
   14002c44a:	cmp    eax,0x39
   14002c44d:	jle    0x14002c452
   14002c44f:	add    eax,r12d
   14002c452:	mov    BYTE PTR [rbx],al
   14002c454:	dec    rbx
   14002c457:	jmp    0x14002c42c
   14002c459:	mov    r12,QWORD PTR [rsp+0x50]
   14002c45e:	lea    rax,[rbp+0x1cf]
   14002c465:	mov    DWORD PTR [rsp+0x44],edi
   14002c469:	sub    eax,ebx
   14002c46b:	inc    rbx
   14002c46e:	mov    r13d,eax
   14002c471:	test   esi,r14d
   14002c474:	je     0x14002c092
   14002c47a:	test   eax,eax
   14002c47c:	je     0x14002c487
   14002c47e:	cmp    BYTE PTR [rbx],r15b
   14002c481:	je     0x14002c092
   14002c487:	dec    rbx
   14002c48a:	inc    r13d
   14002c48d:	mov    BYTE PTR [rbx],r15b
   14002c490:	jmp    0x14002c092
   14002c495:	jne    0x14002c4a8
   14002c497:	cmp    r15w,dx
   14002c49b:	jne    0x14002c4dc
   14002c49d:	mov    r13d,0x1
   14002c4a3:	jmp    0x14002c244
   14002c4a8:	cmp    edi,eax
   14002c4aa:	mov    r13d,0xa3
   14002c4b0:	cmovg  edi,eax
   14002c4b3:	mov    DWORD PTR [rsp+0x44],edi
   14002c4b7:	cmp    edi,r13d
   14002c4ba:	jle    0x14002c4e3
   14002c4bc:	add    edi,0x15d
   14002c4c2:	movsxd rcx,edi
   14002c4c5:	call   0x1400297c4
   14002c4ca:	mov    QWORD PTR [rbp-0x50],rax
   14002c4ce:	test   rax,rax
   14002c4d1:	je     0x14002c244
   14002c4d7:	mov    rbx,rax
   14002c4da:	mov    esi,edi
   14002c4dc:	mov    r13d,DWORD PTR [rsp+0x44]
   14002c4e1:	jmp    0x14002c4e6
   14002c4e3:	mov    r13d,edi
   14002c4e6:	mov    rax,QWORD PTR [r12]
   14002c4ea:	mov    rcx,QWORD PTR [rip+0x2dcff]        # 0x14005a1f0
   14002c4f1:	add    r12,0x8
   14002c4f5:	mov    QWORD PTR [rsp+0x50],r12
   14002c4fa:	movsx  edi,r15b
   14002c4fe:	movsxd rsi,esi
   14002c501:	mov    QWORD PTR [rbp-0x40],rax
   14002c505:	call   QWORD PTR [rip+0x14ef5]        # 0x140041400
   14002c50b:	lea    rcx,[rbp-0x70]
   14002c50f:	mov    QWORD PTR [rsp+0x30],rcx
   14002c514:	mov    ecx,DWORD PTR [rbp-0x78]
   14002c517:	mov    r9d,edi
   14002c51a:	mov    DWORD PTR [rsp+0x28],ecx
   14002c51e:	lea    rcx,[rbp-0x40]
   14002c522:	mov    r8,rsi
   14002c525:	mov    rdx,rbx
   14002c528:	mov    DWORD PTR [rsp+0x20],r13d
   14002c52d:	call   rax
   14002c52f:	mov    edi,r14d
   14002c532:	and    edi,0x80
   14002c538:	je     0x14002c555
   14002c53a:	test   r13d,r13d
   14002c53d:	jne    0x14002c555
   14002c53f:	mov    rcx,QWORD PTR [rip+0x2dcc2]        # 0x14005a208
   14002c546:	call   QWORD PTR [rip+0x14eb4]        # 0x140041400
   14002c54c:	lea    rdx,[rbp-0x70]
   14002c550:	mov    rcx,rbx
   14002c553:	call   rax
   14002c555:	mov    ecx,0x67
   14002c55a:	cmp    r15w,cx
   14002c55e:	jne    0x14002c57a
   14002c560:	test   edi,edi
   14002c562:	jne    0x14002c57a
   14002c564:	mov    rcx,QWORD PTR [rip+0x2dc95]        # 0x14005a200
   14002c56b:	call   QWORD PTR [rip+0x14e8f]        # 0x140041400
   14002c571:	lea    rdx,[rbp-0x70]
   14002c575:	mov    rcx,rbx
   14002c578:	call   rax
   14002c57a:	mov    edi,0x2d
   14002c57f:	cmp    BYTE PTR [rbx],dil
   14002c582:	jne    0x14002c58c
   14002c584:	bts    r14d,0x8
   14002c589:	inc    rbx
   14002c58c:	mov    rcx,rbx
   14002c58f:	call   0x14002e0d0
   14002c594:	xor    r10d,r10d
   14002c597:	mov    r13d,eax
   14002c59a:	jmp    0x14002c097
   14002c59f:	test   r14b,0x1
   14002c5a3:	je     0x14002c5b4
   14002c5a5:	mov    eax,0x2b
   14002c5aa:	mov    WORD PTR [rsp+0x60],ax
   14002c5af:	jmp    0x14002c0bc
   14002c5b4:	test   r14b,0x2
   14002c5b8:	je     0x14002c5cd
   14002c5ba:	mov    eax,0x20
   14002c5bf:	mov    WORD PTR [rsp+0x60],ax
   14002c5c4:	lea    esi,[rax-0x1f]
   14002c5c7:	mov    DWORD PTR [rsp+0x48],esi
   14002c5cb:	jmp    0x14002c5d6
   14002c5cd:	mov    esi,DWORD PTR [rsp+0x48]
   14002c5d1:	mov    eax,0x20
   14002c5d6:	mov    r15d,DWORD PTR [rsp+0x5c]
   14002c5db:	mov    rdi,QWORD PTR [rsp+0x78]
   14002c5e0:	sub    r15d,r13d
   14002c5e3:	sub    r15d,esi
   14002c5e6:	test   r14b,0xc
   14002c5ea:	jne    0x14002c5fe
   14002c5ec:	lea    r9,[rsp+0x40]
   14002c5f1:	mov    ecx,eax
   14002c5f3:	mov    r8,rdi
   14002c5f6:	mov    edx,r15d
   14002c5f9:	call   0x14002c9a0
   14002c5fe:	mov    rax,QWORD PTR [rbp-0x48]
   14002c602:	lea    r9,[rsp+0x40]
   14002c607:	lea    rcx,[rsp+0x60]
   14002c60c:	mov    r8,rdi
   14002c60f:	mov    edx,esi
   14002c611:	mov    QWORD PTR [rsp+0x20],rax
   14002c616:	call   0x14002badc
   14002c61b:	test   r14b,0x8
   14002c61f:	je     0x14002c63c
   14002c621:	test   r14b,0x4
   14002c625:	jne    0x14002c63c
   14002c627:	lea    r9,[rsp+0x40]
   14002c62c:	mov    ecx,0x30
   14002c631:	mov    r8,rdi
   14002c634:	mov    edx,r15d
   14002c637:	call   0x14002c9a0
   14002c63c:	xor    eax,eax
   14002c63e:	cmp    DWORD PTR [rsp+0x58],eax
   14002c642:	jne    0x14002c6b4
   14002c644:	test   r13d,r13d
   14002c647:	jle    0x14002c6b4
   14002c649:	mov    rdi,rbx
   14002c64c:	mov    esi,r13d
   14002c64f:	mov    rax,QWORD PTR [rbp-0x70]
   14002c653:	lea    r9,[rbp-0x70]
   14002c657:	lea    rcx,[rsp+0x64]
   14002c65c:	movsxd r8,DWORD PTR [rax+0xd4]
   14002c663:	mov    rdx,rdi
   14002c666:	dec    esi
   14002c668:	call   0x1400300f8
   14002c66d:	xor    r10d,r10d
   14002c670:	movsxd r12,eax
   14002c673:	test   eax,eax
   14002c675:	jle    0x14002c6a1
   14002c677:	mov    rdx,QWORD PTR [rsp+0x78]
   14002c67c:	movzx  ecx,WORD PTR [rsp+0x64]
   14002c681:	lea    r8,[rsp+0x40]
   14002c686:	call   0x14002baa4
   14002c68b:	add    rdi,r12
   14002c68e:	xor    r10d,r10d
   14002c691:	test   esi,esi
   14002c693:	jg     0x14002c64f
   14002c695:	mov    r12,QWORD PTR [rsp+0x50]
   14002c69a:	mov    rdi,QWORD PTR [rsp+0x78]
   14002c69f:	jmp    0x14002c6d3
   14002c6a1:	mov    r12,QWORD PTR [rsp+0x50]
   14002c6a6:	mov    rdi,QWORD PTR [rsp+0x78]
   14002c6ab:	or     edx,0xffffffff
   14002c6ae:	mov    DWORD PTR [rsp+0x40],edx
   14002c6b2:	jmp    0x14002c6d7
   14002c6b4:	mov    rax,QWORD PTR [rbp-0x48]
   14002c6b8:	lea    r9,[rsp+0x40]
   14002c6bd:	mov    r8,rdi
   14002c6c0:	mov    edx,r13d
   14002c6c3:	mov    rcx,rbx
   14002c6c6:	mov    QWORD PTR [rsp+0x20],rax
   14002c6cb:	call   0x14002badc
   14002c6d0:	xor    r10d,r10d
   14002c6d3:	mov    edx,DWORD PTR [rsp+0x40]
   14002c6d7:	test   edx,edx
   14002c6d9:	js     0x14002c6fd
   14002c6db:	test   r14b,0x4
   14002c6df:	je     0x14002c6fd
   14002c6e1:	lea    r9,[rsp+0x40]
   14002c6e6:	mov    ecx,0x20
   14002c6eb:	mov    r8,rdi
   14002c6ee:	mov    edx,r15d
   14002c6f1:	call   0x14002c9a0
   14002c6f6:	xor    r10d,r10d
   14002c6f9:	mov    edx,DWORD PTR [rsp+0x40]
   14002c6fd:	mov    r11d,0x20
   14002c703:	mov    rax,QWORD PTR [rbp-0x50]
   14002c707:	test   rax,rax
   14002c70a:	je     0x14002c723
   14002c70c:	mov    rcx,rax
   14002c70f:	call   0x1400273dc
   14002c714:	mov    edx,DWORD PTR [rsp+0x40]
   14002c718:	xor    r10d,r10d
   14002c71b:	lea    r11d,[r10+0x20]
   14002c71f:	mov    QWORD PTR [rbp-0x50],r10
   14002c723:	mov    edi,DWORD PTR [rsp+0x44]
   14002c727:	or     esi,0xffffffff
   14002c72a:	mov    r8,QWORD PTR [rbp-0x80]
   14002c72e:	mov    r9d,DWORD PTR [rsp+0x6c]
   14002c733:	movzx  r15d,WORD PTR [r8]
   14002c737:	test   r15w,r15w
   14002c73b:	jne    0x14002bf88
   14002c741:	test   r9d,r9d
   14002c744:	je     0x14002c750
   14002c746:	cmp    r9d,0x7
   14002c74a:	jne    0x14002c975
   14002c750:	cmp    BYTE PTR [rbp-0x58],r10b
   14002c754:	je     0x14002c761
   14002c756:	mov    rcx,QWORD PTR [rbp-0x60]
   14002c75a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002c761:	mov    eax,edx
   14002c763:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14002c76a:	xor    rcx,rsp
   14002c76d:	call   0x1400265a0
   14002c772:	mov    rbx,QWORD PTR [rsp+0x530]
   14002c77a:	add    rsp,0x4e0
   14002c781:	pop    r15
   14002c783:	pop    r14
   14002c785:	pop    r13
   14002c787:	pop    r12
   14002c789:	pop    rdi
   14002c78a:	pop    rsi
   14002c78b:	pop    rbp
   14002c78c:	ret    
   14002c78d:	movzx  eax,r15w
   14002c791:	cmp    eax,0x49
   14002c794:	je     0x14002c7d5
   14002c796:	cmp    eax,0x68
   14002c799:	je     0x14002c7cd
   14002c79b:	mov    ecx,0x6c
   14002c7a0:	cmp    eax,ecx
   14002c7a2:	je     0x14002c7b0
   14002c7a4:	cmp    eax,0x77
   14002c7a7:	jne    0x14002c733
   14002c7a9:	bts    r14d,0xb
   14002c7ae:	jmp    0x14002c733
   14002c7b0:	cmp    WORD PTR [r8],cx
   14002c7b4:	jne    0x14002c7c4
   14002c7b6:	add    r8,0x2
   14002c7ba:	bts    r14d,0xc
   14002c7bf:	jmp    0x14002c733
   14002c7c4:	or     r14d,0x10
   14002c7c8:	jmp    0x14002c733
   14002c7cd:	or     r14d,r11d
   14002c7d0:	jmp    0x14002c733
   14002c7d5:	movzx  eax,WORD PTR [r8]
   14002c7d9:	bts    r14d,0xf
   14002c7de:	cmp    ax,0x36
   14002c7e2:	jne    0x14002c7fa
   14002c7e4:	cmp    WORD PTR [r8+0x2],0x34
   14002c7ea:	jne    0x14002c7fa
   14002c7ec:	add    r8,0x4
   14002c7f0:	bts    r14d,0xf
   14002c7f5:	jmp    0x14002c733
   14002c7fa:	cmp    ax,0x33
   14002c7fe:	jne    0x14002c816
   14002c800:	cmp    WORD PTR [r8+0x2],0x32
   14002c806:	jne    0x14002c816
   14002c808:	add    r8,0x4
   14002c80c:	btr    r14d,0xf
   14002c811:	jmp    0x14002c733
   14002c816:	sub    ax,0x58
   14002c81a:	cmp    ax,r11w
   14002c81e:	ja     0x14002c834
   14002c820:	movabs rcx,0x120821001
   14002c82a:	bt     rcx,rax
   14002c82e:	jb     0x14002c733
   14002c834:	mov    DWORD PTR [rsp+0x6c],r10d
   14002c839:	mov    rdx,QWORD PTR [rsp+0x78]
   14002c83e:	lea    r8,[rsp+0x40]
   14002c843:	movzx  ecx,r15w
   14002c847:	mov    DWORD PTR [rsp+0x58],0x1
   14002c84f:	call   0x14002baa4
   14002c854:	mov    edx,DWORD PTR [rsp+0x40]
   14002c858:	xor    r10d,r10d
   14002c85b:	lea    r11d,[r10+0x20]
   14002c85f:	jmp    0x14002c72a
   14002c864:	cmp    r15w,0x2a
   14002c869:	jne    0x14002c88f
   14002c86b:	mov    edi,DWORD PTR [r12]
   14002c86f:	add    r12,0x8
   14002c873:	mov    QWORD PTR [rsp+0x50],r12
   14002c878:	mov    DWORD PTR [rsp+0x44],edi
   14002c87c:	test   edi,edi
   14002c87e:	jns    0x14002c733
   14002c884:	mov    edi,esi
   14002c886:	mov    DWORD PTR [rsp+0x44],esi
   14002c88a:	jmp    0x14002c733
   14002c88f:	lea    edi,[rdi+rdi*4]
   14002c892:	movzx  eax,r15w
   14002c896:	lea    edi,[rdi-0x18]
   14002c899:	lea    edi,[rax+rdi*2]
   14002c89c:	mov    DWORD PTR [rsp+0x44],edi
   14002c8a0:	jmp    0x14002c733
   14002c8a5:	mov    edi,r10d
   14002c8a8:	mov    DWORD PTR [rsp+0x44],r10d
   14002c8ad:	jmp    0x14002c733
   14002c8b2:	cmp    r15w,0x2a
   14002c8b7:	jne    0x14002c8da
   14002c8b9:	mov    eax,DWORD PTR [r12]
   14002c8bd:	add    r12,0x8
   14002c8c1:	mov    QWORD PTR [rsp+0x50],r12
   14002c8c6:	mov    DWORD PTR [rsp+0x5c],eax
   14002c8ca:	test   eax,eax
   14002c8cc:	jns    0x14002c733
   14002c8d2:	or     r14d,0x4
   14002c8d6:	neg    eax
   14002c8d8:	jmp    0x14002c8eb
   14002c8da:	mov    eax,DWORD PTR [rsp+0x5c]
   14002c8de:	lea    ecx,[rax+rax*4]
   14002c8e1:	movzx  eax,r15w
   14002c8e5:	lea    eax,[rax+rcx*2]
   14002c8e8:	add    eax,0xffffffd0
   14002c8eb:	mov    DWORD PTR [rsp+0x5c],eax
   14002c8ef:	jmp    0x14002c733
   14002c8f4:	movzx  eax,r15w
   14002c8f8:	cmp    eax,r11d
   14002c8fb:	je     0x14002c946
   14002c8fd:	cmp    eax,0x23
   14002c900:	je     0x14002c93c
   14002c902:	mov    ecx,0x2b
   14002c907:	cmp    eax,ecx
   14002c909:	je     0x14002c933
   14002c90b:	mov    ecx,0x2d
   14002c910:	cmp    eax,ecx
   14002c912:	je     0x14002c92a
   14002c914:	mov    ecx,0x30
   14002c919:	cmp    eax,ecx
   14002c91b:	jne    0x14002c733
   14002c921:	or     r14d,0x8
   14002c925:	jmp    0x14002c733
   14002c92a:	or     r14d,0x4
   14002c92e:	jmp    0x14002c733
   14002c933:	or     r14d,0x1
   14002c937:	jmp    0x14002c733
   14002c93c:	bts    r14d,0x7
   14002c941:	jmp    0x14002c733
   14002c946:	or     r14d,0x2
   14002c94a:	jmp    0x14002c733
   14002c94f:	mov    DWORD PTR [rbp-0x78],r10d
   14002c953:	mov    DWORD PTR [rsp+0x70],r10d
   14002c958:	mov    DWORD PTR [rsp+0x5c],r10d
   14002c95d:	mov    DWORD PTR [rsp+0x48],r10d
   14002c962:	mov    r14d,r10d
   14002c965:	mov    edi,esi
   14002c967:	mov    DWORD PTR [rsp+0x44],esi
   14002c96b:	mov    DWORD PTR [rsp+0x58],r10d
   14002c970:	jmp    0x14002c733
   14002c975:	call   0x140029bf8
   14002c97a:	mov    DWORD PTR [rax],0x16
   14002c980:	call   0x140029b2c
   14002c985:	xor    ecx,ecx
   14002c987:	cmp    BYTE PTR [rbp-0x58],cl
   14002c98a:	je     0x14002c997
   14002c98c:	mov    rax,QWORD PTR [rbp-0x60]
   14002c990:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002c997:	mov    eax,esi
   14002c999:	jmp    0x14002c763
   14002c99e:	int3   
   14002c99f:	int3   
   14002c9a0:	test   edx,edx
   14002c9a2:	jle    0x14002c9f0
   14002c9a4:	mov    QWORD PTR [rsp+0x8],rbx
   14002c9a9:	mov    QWORD PTR [rsp+0x10],rbp
   14002c9ae:	mov    QWORD PTR [rsp+0x18],rsi
   14002c9b3:	push   rdi
   14002c9b4:	sub    rsp,0x20
   14002c9b8:	mov    rdi,r9
   14002c9bb:	mov    rsi,r8
   14002c9be:	mov    ebx,edx
   14002c9c0:	movzx  ebp,cx
   14002c9c3:	mov    r8,rdi
   14002c9c6:	mov    rdx,rsi
   14002c9c9:	movzx  ecx,bp
   14002c9cc:	dec    ebx
   14002c9ce:	call   0x14002baa4
   14002c9d3:	cmp    DWORD PTR [rdi],0xffffffff
   14002c9d6:	je     0x14002c9dc
   14002c9d8:	test   ebx,ebx
   14002c9da:	jg     0x14002c9c3
   14002c9dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c9e1:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c9e6:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c9eb:	add    rsp,0x20
   14002c9ef:	pop    rdi
   14002c9f0:	ret    
   14002c9f1:	int3   
   14002c9f2:	int3   
   14002c9f3:	int3   
   14002c9f4:	mov    QWORD PTR [rsp+0x8],rbx
   14002c9f9:	mov    QWORD PTR [rsp+0x10],rsi
   14002c9fe:	push   rdi
   14002c9ff:	sub    rsp,0x20
   14002ca03:	mov    rbx,rdx
   14002ca06:	mov    rdi,rcx
   14002ca09:	test   rcx,rcx
   14002ca0c:	jne    0x14002ca18
   14002ca0e:	mov    rcx,rdx
   14002ca11:	call   0x140029d54
   14002ca16:	jmp    0x14002ca82
   14002ca18:	test   rdx,rdx
   14002ca1b:	jne    0x14002ca24
   14002ca1d:	call   0x1400273dc
   14002ca22:	jmp    0x14002ca80
   14002ca24:	cmp    rdx,0xffffffffffffffe0
   14002ca28:	ja     0x14002ca6d
   14002ca2a:	mov    rcx,QWORD PTR [rip+0x2f957]        # 0x14005c388
   14002ca31:	mov    eax,0x1
   14002ca36:	test   rbx,rbx
   14002ca39:	cmove  rbx,rax
   14002ca3d:	mov    r8,rdi
   14002ca40:	xor    edx,edx
   14002ca42:	mov    r9,rbx
   14002ca45:	call   QWORD PTR [rip+0x14a9d]        # 0x1400414e8
   14002ca4b:	mov    rsi,rax
   14002ca4e:	test   rax,rax
   14002ca51:	jne    0x14002cac2
   14002ca53:	cmp    DWORD PTR [rip+0x2fecf],eax        # 0x14005c928
   14002ca59:	je     0x14002caab
   14002ca5b:	mov    rcx,rbx
   14002ca5e:	call   0x140029fac
   14002ca63:	test   eax,eax
   14002ca65:	je     0x14002ca92
   14002ca67:	cmp    rbx,0xffffffffffffffe0
   14002ca6b:	jbe    0x14002ca2a
   14002ca6d:	mov    rcx,rbx
   14002ca70:	call   0x140029fac
   14002ca75:	call   0x140029bf8
   14002ca7a:	mov    DWORD PTR [rax],0xc
   14002ca80:	xor    eax,eax
   14002ca82:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ca87:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ca8c:	add    rsp,0x20
   14002ca90:	pop    rdi
   14002ca91:	ret    
   14002ca92:	call   0x140029bf8
   14002ca97:	mov    rbx,rax
   14002ca9a:	call   QWORD PTR [rip+0x14938]        # 0x1400413d8
   14002caa0:	mov    ecx,eax
   14002caa2:	call   0x140029c18
   14002caa7:	mov    DWORD PTR [rbx],eax
   14002caa9:	jmp    0x14002ca80
   14002caab:	call   0x140029bf8
   14002cab0:	mov    rbx,rax
   14002cab3:	call   QWORD PTR [rip+0x1491f]        # 0x1400413d8
   14002cab9:	mov    ecx,eax
   14002cabb:	call   0x140029c18
   14002cac0:	mov    DWORD PTR [rbx],eax
   14002cac2:	mov    rax,rsi
   14002cac5:	jmp    0x14002ca82
   14002cac7:	int3   
   14002cac8:	rex push rbx
   14002caca:	sub    rsp,0x20
   14002cace:	xor    r10d,r10d
   14002cad1:	test   rcx,rcx
   14002cad4:	je     0x14002cae4
   14002cad6:	test   rdx,rdx
   14002cad9:	je     0x14002cae4
   14002cadb:	test   r8,r8
   14002cade:	jne    0x14002cafd
   14002cae0:	mov    WORD PTR [rcx],r10w
   14002cae4:	call   0x140029bf8
   14002cae9:	mov    ebx,0x16
   14002caee:	mov    DWORD PTR [rax],ebx
   14002caf0:	call   0x140029b2c
   14002caf5:	mov    eax,ebx
   14002caf7:	add    rsp,0x20
   14002cafb:	pop    rbx
   14002cafc:	ret    
   14002cafd:	mov    r9,rcx
   14002cb00:	sub    r9,r8
   14002cb03:	movzx  eax,WORD PTR [r8]
   14002cb07:	mov    WORD PTR [r9+r8*1],ax
   14002cb0c:	lea    r8,[r8+0x2]
   14002cb10:	test   ax,ax
   14002cb13:	je     0x14002cb1a
   14002cb15:	dec    rdx
   14002cb18:	jne    0x14002cb03
   14002cb1a:	test   rdx,rdx
   14002cb1d:	jne    0x14002cb2f
   14002cb1f:	mov    WORD PTR [rcx],r10w
   14002cb23:	call   0x140029bf8
   14002cb28:	mov    ebx,0x22
   14002cb2d:	jmp    0x14002caee
   14002cb2f:	xor    eax,eax
   14002cb31:	jmp    0x14002caf7
   14002cb33:	int3   
   14002cb34:	mov    rax,rcx
   14002cb37:	movzx  edx,WORD PTR [rax]
   14002cb3a:	add    rax,0x2
   14002cb3e:	test   dx,dx
   14002cb41:	jne    0x14002cb37
   14002cb43:	sub    rax,rcx
   14002cb46:	sar    rax,1
   14002cb49:	dec    rax
   14002cb4c:	ret    
   14002cb4d:	int3   
   14002cb4e:	int3   
   14002cb4f:	int3   
   14002cb50:	mov    QWORD PTR [rsp+0x8],rbx
   14002cb55:	push   rdi
   14002cb56:	sub    rsp,0x20
   14002cb5a:	mov    rdi,r8
   14002cb5d:	mov    rbx,rdx
   14002cb60:	test   rcx,rcx
   14002cb63:	je     0x14002cb82
   14002cb65:	xor    edx,edx
   14002cb67:	lea    rax,[rdx-0x20]
   14002cb6b:	div    rcx
   14002cb6e:	cmp    rax,rbx
   14002cb71:	jae    0x14002cb82
   14002cb73:	call   0x140029bf8
   14002cb78:	mov    DWORD PTR [rax],0xc
   14002cb7e:	xor    eax,eax
   14002cb80:	jmp    0x14002cbdf
   14002cb82:	imul   rbx,rcx
   14002cb86:	mov    eax,0x1
   14002cb8b:	test   rbx,rbx
   14002cb8e:	cmove  rbx,rax
   14002cb92:	xor    eax,eax
   14002cb94:	cmp    rbx,0xffffffffffffffe0
   14002cb98:	ja     0x14002cbb2
   14002cb9a:	mov    rcx,QWORD PTR [rip+0x2f7e7]        # 0x14005c388
   14002cba1:	lea    edx,[rax+0x8]
   14002cba4:	mov    r8,rbx
   14002cba7:	call   QWORD PTR [rip+0x14903]        # 0x1400414b0
   14002cbad:	test   rax,rax
   14002cbb0:	jne    0x14002cbdf
   14002cbb2:	cmp    DWORD PTR [rip+0x2fd6f],0x0        # 0x14005c928
   14002cbb9:	je     0x14002cbd4
   14002cbbb:	mov    rcx,rbx
   14002cbbe:	call   0x140029fac
   14002cbc3:	test   eax,eax
   14002cbc5:	jne    0x14002cb92
   14002cbc7:	test   rdi,rdi
   14002cbca:	je     0x14002cb7e
   14002cbcc:	mov    DWORD PTR [rdi],0xc
   14002cbd2:	jmp    0x14002cb7e
   14002cbd4:	test   rdi,rdi
   14002cbd7:	je     0x14002cbdf
   14002cbd9:	mov    DWORD PTR [rdi],0xc
   14002cbdf:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cbe4:	add    rsp,0x20
   14002cbe8:	pop    rdi
   14002cbe9:	ret    
   14002cbea:	int3   
   14002cbeb:	int3   
   14002cbec:	mov    QWORD PTR [rsp+0x8],rbx
   14002cbf1:	push   rdi
   14002cbf2:	sub    rsp,0x20
   14002cbf6:	mov    eax,DWORD PTR [rip+0x30d34]        # 0x14005d930
   14002cbfc:	xor    ebx,ebx
   14002cbfe:	mov    edi,0x14
   14002cc03:	test   eax,eax
   14002cc05:	jne    0x14002cc0e
   14002cc07:	mov    eax,0x200
   14002cc0c:	jmp    0x14002cc13
   14002cc0e:	cmp    eax,edi
   14002cc10:	cmovl  eax,edi
   14002cc13:	movsxd rcx,eax
   14002cc16:	mov    edx,0x8
   14002cc1b:	mov    DWORD PTR [rip+0x30d0f],eax        # 0x14005d930
   14002cc21:	call   0x140029744
   14002cc26:	mov    QWORD PTR [rip+0x30cfb],rax        # 0x14005d928
   14002cc2d:	test   rax,rax
   14002cc30:	jne    0x14002cc56
   14002cc32:	lea    edx,[rax+0x8]
   14002cc35:	mov    rcx,rdi
   14002cc38:	mov    DWORD PTR [rip+0x30cf2],edi        # 0x14005d930
   14002cc3e:	call   0x140029744
   14002cc43:	mov    QWORD PTR [rip+0x30cde],rax        # 0x14005d928
   14002cc4a:	test   rax,rax
   14002cc4d:	jne    0x14002cc56
   14002cc4f:	mov    eax,0x1a
   14002cc54:	jmp    0x14002cc79
   14002cc56:	lea    rcx,[rip+0x2cf43]        # 0x140059ba0
   14002cc5d:	mov    QWORD PTR [rbx+rax*1],rcx
   14002cc61:	add    rcx,0x30
   14002cc65:	lea    rbx,[rbx+0x8]
   14002cc69:	dec    rdi
   14002cc6c:	je     0x14002cc77
   14002cc6e:	mov    rax,QWORD PTR [rip+0x30cb3]        # 0x14005d928
   14002cc75:	jmp    0x14002cc5d
   14002cc77:	xor    eax,eax
   14002cc79:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cc7e:	add    rsp,0x20
   14002cc82:	pop    rdi
   14002cc83:	ret    
   14002cc84:	sub    rsp,0x28
   14002cc88:	call   0x140030f30
   14002cc8d:	cmp    BYTE PTR [rip+0x2f0a0],0x0        # 0x14005bd34
   14002cc94:	je     0x14002cc9b
   14002cc96:	call   0x140030dc0
   14002cc9b:	mov    rcx,QWORD PTR [rip+0x30c86]        # 0x14005d928
   14002cca2:	call   0x1400273dc
   14002cca7:	and    QWORD PTR [rip+0x30c79],0x0        # 0x14005d928
   14002ccaf:	add    rsp,0x28
   14002ccb3:	ret    
   14002ccb4:	lea    rax,[rip+0x2cee5]        # 0x140059ba0
   14002ccbb:	ret    
   14002ccbc:	rex push rbx
   14002ccbe:	sub    rsp,0x20
   14002ccc2:	mov    rbx,rcx
   14002ccc5:	lea    rcx,[rip+0x2ced4]        # 0x140059ba0
   14002cccc:	cmp    rbx,rcx
   14002cccf:	jb     0x14002cd11
   14002ccd1:	lea    rax,[rip+0x2d258]        # 0x140059f30
   14002ccd8:	cmp    rbx,rax
   14002ccdb:	ja     0x14002cd11
   14002ccdd:	mov    rdx,rbx
   14002cce0:	movabs rax,0x2aaaaaaaaaaaaaab
   14002ccea:	sub    rdx,rcx
   14002cced:	imul   rdx
   14002ccf0:	sar    rdx,0x3
   14002ccf4:	mov    rcx,rdx
   14002ccf7:	shr    rcx,0x3f
   14002ccfb:	add    rcx,rdx
   14002ccfe:	add    ecx,0x10
   14002cd01:	call   0x14002db4c
   14002cd06:	bts    DWORD PTR [rbx+0x18],0xf
   14002cd0b:	add    rsp,0x20
   14002cd0f:	pop    rbx
   14002cd10:	ret    
   14002cd11:	lea    rcx,[rbx+0x30]
   14002cd15:	add    rsp,0x20
   14002cd19:	pop    rbx
   14002cd1a:	rex.W jmp QWORD PTR [rip+0x147cf]        # 0x1400414f0
   14002cd21:	int3   
   14002cd22:	int3   
   14002cd23:	int3   
   14002cd24:	rex push rbx
   14002cd26:	sub    rsp,0x20
   14002cd2a:	mov    rbx,rdx
   14002cd2d:	cmp    ecx,0x14
   14002cd30:	jge    0x14002cd45
   14002cd32:	add    ecx,0x10
   14002cd35:	call   0x14002db4c
   14002cd3a:	bts    DWORD PTR [rbx+0x18],0xf
   14002cd3f:	add    rsp,0x20
   14002cd43:	pop    rbx
   14002cd44:	ret    
   14002cd45:	lea    rcx,[rdx+0x30]
   14002cd49:	add    rsp,0x20
   14002cd4d:	pop    rbx
   14002cd4e:	rex.W jmp QWORD PTR [rip+0x1479b]        # 0x1400414f0
   14002cd55:	int3   
   14002cd56:	int3   
   14002cd57:	int3   
   14002cd58:	lea    rdx,[rip+0x2ce41]        # 0x140059ba0
   14002cd5f:	cmp    rcx,rdx
   14002cd62:	jb     0x14002cd9b
   14002cd64:	lea    rax,[rip+0x2d1c5]        # 0x140059f30
   14002cd6b:	cmp    rcx,rax
   14002cd6e:	ja     0x14002cd9b
   14002cd70:	btr    DWORD PTR [rcx+0x18],0xf
   14002cd75:	sub    rcx,rdx
   14002cd78:	movabs rax,0x2aaaaaaaaaaaaaab
   14002cd82:	imul   rcx
   14002cd85:	sar    rdx,0x3
   14002cd89:	mov    rcx,rdx
   14002cd8c:	shr    rcx,0x3f
   14002cd90:	add    rcx,rdx
   14002cd93:	add    ecx,0x10
   14002cd96:	jmp    0x14002dd34
   14002cd9b:	add    rcx,0x30
   14002cd9f:	rex.W jmp QWORD PTR [rip+0x14752]        # 0x1400414f8
   14002cda6:	int3   
   14002cda7:	int3   
   14002cda8:	cmp    ecx,0x14
   14002cdab:	jge    0x14002cdba
   14002cdad:	btr    DWORD PTR [rdx+0x18],0xf
   14002cdb2:	add    ecx,0x10
   14002cdb5:	jmp    0x14002dd34
   14002cdba:	lea    rcx,[rdx+0x30]
   14002cdbe:	rex.W jmp QWORD PTR [rip+0x14733]        # 0x1400414f8
   14002cdc5:	int3   
   14002cdc6:	int3   
   14002cdc7:	int3   
   14002cdc8:	test   ecx,ecx
   14002cdca:	je     0x14002cdfe
   14002cdcc:	push   rbx
   14002cdcd:	sub    rsp,0x20
   14002cdd1:	test   DWORD PTR [rdx+0x18],0x1000
   14002cdd8:	mov    rbx,rdx
   14002cddb:	je     0x14002cdf9
   14002cddd:	mov    rcx,rdx
   14002cde0:	call   0x140030eb4
   14002cde5:	and    DWORD PTR [rbx+0x18],0xffffeeff
   14002cdec:	and    DWORD PTR [rbx+0x24],0x0
   14002cdf0:	and    QWORD PTR [rbx],0x0
   14002cdf4:	and    QWORD PTR [rbx+0x10],0x0
   14002cdf9:	add    rsp,0x20
   14002cdfd:	pop    rbx
   14002cdfe:	ret    
   14002cdff:	int3   
   14002ce00:	mov    QWORD PTR [rsp+0x8],rbx
   14002ce05:	mov    QWORD PTR [rsp+0x10],rdi
   14002ce0a:	push   r14
   14002ce0c:	sub    rsp,0x20
   14002ce10:	mov    rbx,rcx
   14002ce13:	call   0x14002f3b4
   14002ce18:	mov    ecx,eax
   14002ce1a:	call   0x14002f3dc
   14002ce1f:	test   eax,eax
   14002ce21:	je     0x14002cebc
   14002ce27:	call   0x14002ccb4
   14002ce2c:	add    rax,0x30
   14002ce30:	cmp    rbx,rax
   14002ce33:	jne    0x14002ce39
   14002ce35:	xor    eax,eax
   14002ce37:	jmp    0x14002ce4c
   14002ce39:	call   0x14002ccb4
   14002ce3e:	add    rax,0x60
   14002ce42:	cmp    rbx,rax
   14002ce45:	jne    0x14002cebc
   14002ce47:	mov    eax,0x1
   14002ce4c:	inc    DWORD PTR [rip+0x2f7c2]        # 0x14005c614
   14002ce52:	test   DWORD PTR [rbx+0x18],0x10c
   14002ce59:	jne    0x14002cebc
   14002ce5b:	lea    r14,[rip+0x2f7b6]        # 0x14005c618
   14002ce62:	movsxd rdi,eax
   14002ce65:	mov    rax,QWORD PTR [r14+rdi*8]
   14002ce69:	test   rax,rax
   14002ce6c:	jne    0x14002ce99
   14002ce6e:	mov    ecx,0x1000
   14002ce73:	call   0x1400297c4
   14002ce78:	mov    QWORD PTR [r14+rdi*8],rax
   14002ce7c:	test   rax,rax
   14002ce7f:	jne    0x14002ce99
   14002ce81:	lea    rax,[rbx+0x20]
   14002ce85:	mov    QWORD PTR [rbx+0x10],rax
   14002ce89:	mov    QWORD PTR [rbx],rax
   14002ce8c:	mov    eax,0x2
   14002ce91:	mov    DWORD PTR [rbx+0x24],eax
   14002ce94:	mov    DWORD PTR [rbx+0x8],eax
   14002ce97:	jmp    0x14002ceae
   14002ce99:	mov    QWORD PTR [rbx+0x10],rax
   14002ce9d:	mov    QWORD PTR [rbx],rax
   14002cea0:	mov    DWORD PTR [rbx+0x24],0x1000
   14002cea7:	mov    DWORD PTR [rbx+0x8],0x1000
   14002ceae:	or     DWORD PTR [rbx+0x18],0x1102
   14002ceb5:	mov    eax,0x1
   14002ceba:	jmp    0x14002cebe
   14002cebc:	xor    eax,eax
   14002cebe:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cec3:	mov    rdi,QWORD PTR [rsp+0x38]
   14002cec8:	add    rsp,0x20
   14002cecc:	pop    r14
   14002cece:	ret    
   14002cecf:	int3   
   14002ced0:	mov    QWORD PTR [rsp+0x18],rbx
   14002ced5:	push   rbp
   14002ced6:	push   rsi
   14002ced7:	push   rdi
   14002ced8:	push   r12
   14002ceda:	push   r13
   14002cedc:	push   r14
   14002cede:	push   r15
   14002cee0:	lea    rbp,[rsp-0x1e0]
   14002cee8:	sub    rsp,0x2e0
   14002ceef:	mov    rax,QWORD PTR [rip+0x2c192]        # 0x140059088
   14002cef6:	xor    rax,rsp
   14002cef9:	mov    QWORD PTR [rbp+0x1d8],rax
   14002cf00:	xor    eax,eax
   14002cf02:	mov    rsi,rcx
   14002cf05:	mov    QWORD PTR [rsp+0x68],rcx
   14002cf0a:	mov    rdi,rdx
   14002cf0d:	lea    rcx,[rbp-0x58]
   14002cf11:	mov    rdx,r8
   14002cf14:	mov    r13,r9
   14002cf17:	mov    DWORD PTR [rsp+0x64],eax
   14002cf1b:	mov    r14d,eax
   14002cf1e:	mov    DWORD PTR [rsp+0x54],eax
   14002cf22:	mov    r12d,eax
   14002cf25:	mov    DWORD PTR [rsp+0x48],eax
   14002cf29:	mov    DWORD PTR [rsp+0x60],eax
   14002cf2d:	mov    DWORD PTR [rsp+0x58],eax
   14002cf31:	call   0x140026f30
   14002cf36:	call   0x140029bf8
   14002cf3b:	mov    QWORD PTR [rbp-0x70],rax
   14002cf3f:	call   0x140028a64
   14002cf44:	xor    r10d,r10d
   14002cf47:	test   eax,eax
   14002cf49:	js     0x14002d90c
   14002cf4f:	test   rsi,rsi
   14002cf52:	je     0x14002d8f9
   14002cf58:	test   BYTE PTR [rsi+0x18],0x40
   14002cf5c:	lea    r9,[rip+0xfffffffffffd309d]        # 0x140000000
   14002cf63:	jne    0x14002cff4
   14002cf69:	mov    rcx,rsi
   14002cf6c:	call   0x14002f3b4
   14002cf71:	lea    rdx,[rip+0x2c0b8]        # 0x140059030
   14002cf78:	movsxd r9,eax
   14002cf7b:	lea    ecx,[r9+0x2]
   14002cf7f:	cmp    ecx,0x1
   14002cf82:	jbe    0x14002cfa7
   14002cf84:	mov    r8,r9
   14002cf87:	mov    rcx,r9
   14002cf8a:	lea    rax,[rip+0xfffffffffffd306f]        # 0x140000000
   14002cf91:	and    r8d,0x1f
   14002cf95:	sar    rcx,0x5
   14002cf99:	imul   r8,r8,0x58
   14002cf9d:	add    r8,QWORD PTR [rax+rcx*8+0x5e960]
   14002cfa5:	jmp    0x14002cfaa
   14002cfa7:	mov    r8,rdx
   14002cfaa:	test   BYTE PTR [r8+0x38],0x7f
   14002cfaf:	jne    0x14002d8f9
   14002cfb5:	lea    eax,[r9+0x2]
   14002cfb9:	cmp    eax,0x1
   14002cfbc:	jbe    0x14002cfe0
   14002cfbe:	mov    rdx,r9
   14002cfc1:	mov    rax,r9
   14002cfc4:	lea    r9,[rip+0xfffffffffffd3035]        # 0x140000000
   14002cfcb:	and    edx,0x1f
   14002cfce:	sar    rax,0x5
   14002cfd2:	imul   rdx,rdx,0x58
   14002cfd6:	add    rdx,QWORD PTR [r9+rax*8+0x5e960]
   14002cfde:	jmp    0x14002cfe7
   14002cfe0:	lea    r9,[rip+0xfffffffffffd3019]        # 0x140000000
   14002cfe7:	test   BYTE PTR [rdx+0x38],0x80
   14002cfeb:	jne    0x14002d8f9
   14002cff1:	xor    r10d,r10d
   14002cff4:	test   rdi,rdi
   14002cff7:	je     0x14002d8f9
   14002cffd:	mov    r15b,BYTE PTR [rdi]
   14002d000:	mov    r8d,r10d
   14002d003:	mov    DWORD PTR [rsp+0x50],r10d
   14002d008:	mov    DWORD PTR [rsp+0x40],r10d
   14002d00d:	mov    DWORD PTR [rsp+0x44],r10d
   14002d012:	mov    edx,r10d
   14002d015:	mov    QWORD PTR [rbp-0x80],r10
   14002d019:	test   r15b,r15b
   14002d01c:	je     0x14002d910
   14002d022:	mov    rbx,QWORD PTR [rbp-0x60]
   14002d026:	mov    r11d,0x200
   14002d02c:	inc    rdi
   14002d02f:	mov    QWORD PTR [rbp-0x68],rdi
   14002d033:	test   r8d,r8d
   14002d036:	js     0x14002d910
   14002d03c:	lea    eax,[r15-0x20]
   14002d040:	cmp    al,0x58
   14002d042:	ja     0x14002d056
   14002d044:	movsx  rax,r15b
   14002d048:	movsx  ecx,BYTE PTR [rax+r9*1+0x42a70]
   14002d051:	and    ecx,0xf
   14002d054:	jmp    0x14002d059
   14002d056:	mov    ecx,r10d
   14002d059:	movsxd rax,edx
   14002d05c:	movsxd rcx,ecx
   14002d05f:	lea    rdx,[rax+rcx*8]
   14002d063:	movsx  edx,BYTE PTR [rdx+r9*1+0x42a90]
   14002d06c:	sar    edx,0x4
   14002d06f:	mov    DWORD PTR [rsp+0x5c],edx
   14002d073:	mov    ecx,edx
   14002d075:	test   edx,edx
   14002d077:	je     0x14002d7b3
   14002d07d:	dec    ecx
   14002d07f:	je     0x14002d8d4
   14002d085:	dec    ecx
   14002d087:	je     0x14002d884
   14002d08d:	dec    ecx
   14002d08f:	je     0x14002d848
   14002d095:	dec    ecx
   14002d097:	je     0x14002d840
   14002d09d:	dec    ecx
   14002d09f:	je     0x14002d80a
   14002d0a5:	dec    ecx
   14002d0a7:	je     0x14002d713
   14002d0ad:	dec    ecx
   14002d0af:	jne    0x14002d376
   14002d0b5:	movsx  ecx,r15b
   14002d0b9:	cmp    ecx,0x64
   14002d0bc:	jg     0x14002d22c
   14002d0c2:	je     0x14002d387
   14002d0c8:	cmp    ecx,0x41
   14002d0cb:	je     0x14002d201
   14002d0d1:	cmp    ecx,0x43
   14002d0d4:	je     0x14002d1a7
   14002d0da:	lea    eax,[rcx-0x45]
   14002d0dd:	test   eax,0xfffffffd
   14002d0e2:	je     0x14002d201
   14002d0e8:	cmp    ecx,0x53
   14002d0eb:	je     0x14002d15a
   14002d0ed:	cmp    ecx,0x58
   14002d0f0:	je     0x14002d2c6
   14002d0f6:	cmp    ecx,0x5a
   14002d0f9:	je     0x14002d112
   14002d0fb:	cmp    ecx,0x61
   14002d0fe:	je     0x14002d20d
   14002d104:	cmp    ecx,0x63
   14002d107:	je     0x14002d1b5
   14002d10d:	jmp    0x14002d592
   14002d112:	mov    rax,QWORD PTR [r13+0x0]
   14002d116:	add    r13,0x8
   14002d11a:	test   rax,rax
   14002d11d:	je     0x14002d14e
   14002d11f:	mov    rbx,QWORD PTR [rax+0x8]
   14002d123:	test   rbx,rbx
   14002d126:	je     0x14002d14e
   14002d128:	movsx  eax,WORD PTR [rax]
   14002d12b:	bt     r14d,0xb
   14002d130:	jae    0x14002d144
   14002d132:	cdq    
   14002d133:	mov    DWORD PTR [rsp+0x58],0x1
   14002d13b:	sub    eax,edx
   14002d13d:	sar    eax,1
   14002d13f:	jmp    0x14002d58e
   14002d144:	mov    DWORD PTR [rsp+0x58],r10d
   14002d149:	jmp    0x14002d58e
   14002d14e:	mov    rbx,QWORD PTR [rip+0x2ce0b]        # 0x140059f60
   14002d155:	jmp    0x14002d583
   14002d15a:	test   r14d,0x830
   14002d161:	jne    0x14002d168
   14002d163:	bts    r14d,0xb
   14002d168:	mov    rbx,QWORD PTR [r13+0x0]
   14002d16c:	cmp    r12d,0xffffffff
   14002d170:	mov    eax,r12d
   14002d173:	mov    ecx,0x7fffffff
   14002d178:	cmove  eax,ecx
   14002d17b:	add    r13,0x8
   14002d17f:	test   r14d,0x810
   14002d186:	je     0x14002d292
   14002d18c:	test   rbx,rbx
   14002d18f:	mov    DWORD PTR [rsp+0x58],0x1
   14002d197:	cmove  rbx,QWORD PTR [rip+0x2cdc9]        # 0x140059f68
   14002d19f:	mov    rcx,rbx
   14002d1a2:	jmp    0x14002d286
   14002d1a7:	test   r14d,0x830
   14002d1ae:	jne    0x14002d1b5
   14002d1b0:	bts    r14d,0xb
   14002d1b5:	add    r13,0x8
   14002d1b9:	test   r14d,0x810
   14002d1c0:	je     0x14002d1e9
   14002d1c2:	movzx  r9d,WORD PTR [r13-0x8]
   14002d1c7:	lea    rdx,[rbp-0x30]
   14002d1cb:	lea    rcx,[rsp+0x44]
   14002d1d0:	mov    r8,r11
   14002d1d3:	call   0x1400311b0
   14002d1d8:	xor    r10d,r10d
   14002d1db:	test   eax,eax
   14002d1dd:	je     0x14002d1f8
   14002d1df:	mov    DWORD PTR [rsp+0x60],0x1
   14002d1e7:	jmp    0x14002d1f8
   14002d1e9:	mov    al,BYTE PTR [r13-0x8]
   14002d1ed:	mov    DWORD PTR [rsp+0x44],0x1
   14002d1f5:	mov    BYTE PTR [rbp-0x30],al
   14002d1f8:	lea    rbx,[rbp-0x30]
   14002d1fc:	jmp    0x14002d592
   14002d201:	mov    DWORD PTR [rsp+0x78],0x1
   14002d209:	add    r15b,0x20
   14002d20d:	or     r14d,0x40
   14002d211:	lea    rbx,[rbp-0x30]
   14002d215:	mov    esi,r11d
   14002d218:	test   r12d,r12d
   14002d21b:	jns    0x14002d4a5
   14002d221:	mov    r12d,0x6
   14002d227:	jmp    0x14002d4eb
   14002d22c:	cmp    ecx,0x65
   14002d22f:	jl     0x14002d592
   14002d235:	cmp    ecx,0x67
   14002d238:	jle    0x14002d20d
   14002d23a:	cmp    ecx,0x69
   14002d23d:	je     0x14002d387
   14002d243:	cmp    ecx,0x6e
   14002d246:	je     0x14002d309
   14002d24c:	cmp    ecx,0x6f
   14002d24f:	je     0x14002d2f2
   14002d255:	cmp    ecx,0x70
   14002d258:	je     0x14002d2bb
   14002d25a:	cmp    ecx,0x73
   14002d25d:	je     0x14002d168
   14002d263:	cmp    ecx,0x75
   14002d266:	je     0x14002d38b
   14002d26c:	cmp    ecx,0x78
   14002d26f:	jne    0x14002d592
   14002d275:	lea    eax,[rcx-0x51]
   14002d278:	jmp    0x14002d2cb
   14002d27a:	dec    eax
   14002d27c:	cmp    WORD PTR [rcx],r10w
   14002d280:	je     0x14002d28a
   14002d282:	add    rcx,0x2
   14002d286:	test   eax,eax
   14002d288:	jne    0x14002d27a
   14002d28a:	sub    rcx,rbx
   14002d28d:	sar    rcx,1
   14002d290:	jmp    0x14002d2b2
   14002d292:	test   rbx,rbx
   14002d295:	cmove  rbx,QWORD PTR [rip+0x2ccc3]        # 0x140059f60
   14002d29d:	mov    rcx,rbx
   14002d2a0:	jmp    0x14002d2ac
   14002d2a2:	dec    eax
   14002d2a4:	cmp    BYTE PTR [rcx],r10b
   14002d2a7:	je     0x14002d2b0
   14002d2a9:	inc    rcx
   14002d2ac:	test   eax,eax
   14002d2ae:	jne    0x14002d2a2
   14002d2b0:	sub    ecx,ebx
   14002d2b2:	mov    DWORD PTR [rsp+0x44],ecx
   14002d2b6:	jmp    0x14002d592
   14002d2bb:	mov    r12d,0x10
   14002d2c1:	bts    r14d,0xf
   14002d2c6:	mov    eax,0x7
   14002d2cb:	mov    DWORD PTR [rsp+0x64],eax
   14002d2cf:	mov    r9d,0x10
   14002d2d5:	test   r14b,r14b
   14002d2d8:	jns    0x14002d391
   14002d2de:	add    al,0x51
   14002d2e0:	mov    BYTE PTR [rsp+0x4c],0x30
   14002d2e5:	lea    edx,[r9-0xe]
   14002d2e9:	mov    BYTE PTR [rsp+0x4d],al
   14002d2ed:	jmp    0x14002d395
   14002d2f2:	mov    r9d,0x8
   14002d2f8:	test   r14b,r14b
   14002d2fb:	jns    0x14002d391
   14002d301:	or     r14d,r11d
   14002d304:	jmp    0x14002d391
   14002d309:	mov    rdi,QWORD PTR [r13+0x0]
   14002d30d:	add    r13,0x8
   14002d311:	call   0x140027b80
   14002d316:	xor    r10d,r10d
   14002d319:	test   eax,eax
   14002d31b:	je     0x14002d8f9
   14002d321:	mov    eax,DWORD PTR [rsp+0x50]
   14002d325:	test   r14b,0x20
   14002d329:	je     0x14002d330
   14002d32b:	mov    WORD PTR [rdi],ax
   14002d32e:	jmp    0x14002d332
   14002d330:	mov    DWORD PTR [rdi],eax
   14002d332:	mov    DWORD PTR [rsp+0x60],0x1
   14002d33a:	mov    r8d,DWORD PTR [rsp+0x50]
   14002d33f:	mov    rax,QWORD PTR [rbp-0x80]
   14002d343:	test   rax,rax
   14002d346:	je     0x14002d35c
   14002d348:	mov    rcx,rax
   14002d34b:	call   0x1400273dc
   14002d350:	mov    r8d,DWORD PTR [rsp+0x50]
   14002d355:	xor    r10d,r10d
   14002d358:	mov    QWORD PTR [rbp-0x80],r10
   14002d35c:	mov    rsi,QWORD PTR [rsp+0x68]
   14002d361:	mov    rdi,QWORD PTR [rbp-0x68]
   14002d365:	mov    edx,DWORD PTR [rsp+0x5c]
   14002d369:	mov    r11d,0x200
   14002d36f:	lea    r9,[rip+0xfffffffffffd2c8a]        # 0x140000000
   14002d376:	mov    r15b,BYTE PTR [rdi]
   14002d379:	test   r15b,r15b
   14002d37c:	je     0x14002d910
   14002d382:	jmp    0x14002d02c
   14002d387:	or     r14d,0x40
   14002d38b:	mov    r9d,0xa
   14002d391:	mov    edx,DWORD PTR [rsp+0x48]
   14002d395:	mov    eax,0x8000
   14002d39a:	test   eax,r14d
   14002d39d:	je     0x14002d3a9
   14002d39f:	mov    r8,QWORD PTR [r13+0x0]
   14002d3a3:	add    r13,0x8
   14002d3a7:	jmp    0x14002d3e3
   14002d3a9:	bt     r14d,0xc
   14002d3ae:	jb     0x14002d39f
   14002d3b0:	add    r13,0x8
   14002d3b4:	test   r14b,0x20
   14002d3b8:	je     0x14002d3d3
   14002d3ba:	mov    QWORD PTR [rsp+0x70],r13
   14002d3bf:	test   r14b,0x40
   14002d3c3:	je     0x14002d3cc
   14002d3c5:	movsx  r8,WORD PTR [r13-0x8]
   14002d3ca:	jmp    0x14002d3e8
   14002d3cc:	movzx  r8d,WORD PTR [r13-0x8]
   14002d3d1:	jmp    0x14002d3e8
   14002d3d3:	test   r14b,0x40
   14002d3d7:	je     0x14002d3df
   14002d3d9:	movsxd r8,DWORD PTR [r13-0x8]
   14002d3dd:	jmp    0x14002d3e3
   14002d3df:	mov    r8d,DWORD PTR [r13-0x8]
   14002d3e3:	mov    QWORD PTR [rsp+0x70],r13
   14002d3e8:	test   r14b,0x40
   14002d3ec:	je     0x14002d3fb
   14002d3ee:	test   r8,r8
   14002d3f1:	jns    0x14002d3fb
   14002d3f3:	neg    r8
   14002d3f6:	bts    r14d,0x8
   14002d3fb:	test   eax,r14d
   14002d3fe:	jne    0x14002d40a
   14002d400:	bt     r14d,0xc
   14002d405:	jb     0x14002d40a
   14002d407:	mov    r8d,r8d
   14002d40a:	test   r12d,r12d
   14002d40d:	jns    0x14002d417
   14002d40f:	mov    r12d,0x1
   14002d415:	jmp    0x14002d422
   14002d417:	and    r14d,0xfffffff7
   14002d41b:	cmp    r12d,r11d
   14002d41e:	cmovg  r12d,r11d
   14002d422:	mov    r13d,DWORD PTR [rsp+0x64]
   14002d427:	mov    rax,r8
   14002d42a:	lea    rbx,[rbp+0x1cf]
   14002d431:	neg    rax
   14002d434:	sbb    ecx,ecx
   14002d436:	and    ecx,edx
   14002d438:	mov    DWORD PTR [rsp+0x48],ecx
   14002d43c:	mov    ecx,r12d
   14002d43f:	dec    r12d
   14002d442:	test   ecx,ecx
   14002d444:	jg     0x14002d44b
   14002d446:	test   r8,r8
   14002d449:	je     0x14002d46b
   14002d44b:	xor    edx,edx
   14002d44d:	mov    rax,r8
   14002d450:	movsxd rcx,r9d
   14002d453:	div    rcx
   14002d456:	mov    r8,rax
   14002d459:	lea    eax,[rdx+0x30]
   14002d45c:	cmp    eax,0x39
   14002d45f:	jle    0x14002d464
   14002d461:	add    eax,r13d
   14002d464:	mov    BYTE PTR [rbx],al
   14002d466:	dec    rbx
   14002d469:	jmp    0x14002d43c
   14002d46b:	mov    r13,QWORD PTR [rsp+0x70]
   14002d470:	lea    rax,[rbp+0x1cf]
   14002d477:	sub    eax,ebx
   14002d479:	inc    rbx
   14002d47c:	mov    DWORD PTR [rsp+0x44],eax
   14002d480:	test   r11d,r14d
   14002d483:	je     0x14002d592
   14002d489:	test   eax,eax
   14002d48b:	je     0x14002d496
   14002d48d:	cmp    BYTE PTR [rbx],0x30
   14002d490:	je     0x14002d592
   14002d496:	dec    rbx
   14002d499:	inc    DWORD PTR [rsp+0x44]
   14002d49d:	mov    BYTE PTR [rbx],0x30
   14002d4a0:	jmp    0x14002d592
   14002d4a5:	jne    0x14002d4b5
   14002d4a7:	cmp    r15b,0x67
   14002d4ab:	jne    0x14002d4eb
   14002d4ad:	mov    r12d,0x1
   14002d4b3:	jmp    0x14002d4eb
   14002d4b5:	cmp    r12d,r11d
   14002d4b8:	cmovg  r12d,r11d
   14002d4bc:	cmp    r12d,0xa3
   14002d4c3:	jle    0x14002d4eb
   14002d4c5:	lea    edi,[r12+0x15d]
   14002d4cd:	movsxd rcx,edi
   14002d4d0:	call   0x1400297c4
   14002d4d5:	mov    QWORD PTR [rbp-0x80],rax
   14002d4d9:	test   rax,rax
   14002d4dc:	je     0x14002d4e5
   14002d4de:	mov    rbx,rax
   14002d4e1:	mov    esi,edi
   14002d4e3:	jmp    0x14002d4eb
   14002d4e5:	mov    r12d,0xa3
   14002d4eb:	mov    rax,QWORD PTR [r13+0x0]
   14002d4ef:	mov    rcx,QWORD PTR [rip+0x2ccfa]        # 0x14005a1f0
   14002d4f6:	add    r13,0x8
   14002d4fa:	movsx  edi,r15b
   14002d4fe:	movsxd rsi,esi
   14002d501:	mov    QWORD PTR [rbp-0x60],rax
   14002d505:	call   QWORD PTR [rip+0x13ef5]        # 0x140041400
   14002d50b:	lea    rcx,[rbp-0x58]
   14002d50f:	mov    r9d,edi
   14002d512:	mov    QWORD PTR [rsp+0x30],rcx
   14002d517:	mov    ecx,DWORD PTR [rsp+0x78]
   14002d51b:	mov    r8,rsi
   14002d51e:	mov    DWORD PTR [rsp+0x28],ecx
   14002d522:	lea    rcx,[rbp-0x60]
   14002d526:	mov    rdx,rbx
   14002d529:	mov    DWORD PTR [rsp+0x20],r12d
   14002d52e:	call   rax
   14002d530:	mov    edi,r14d
   14002d533:	and    edi,0x80
   14002d539:	je     0x14002d556
   14002d53b:	test   r12d,r12d
   14002d53e:	jne    0x14002d556
   14002d540:	mov    rcx,QWORD PTR [rip+0x2ccc1]        # 0x14005a208
   14002d547:	call   QWORD PTR [rip+0x13eb3]        # 0x140041400
   14002d54d:	lea    rdx,[rbp-0x58]
   14002d551:	mov    rcx,rbx
   14002d554:	call   rax
   14002d556:	cmp    r15b,0x67
   14002d55a:	jne    0x14002d576
   14002d55c:	test   edi,edi
   14002d55e:	jne    0x14002d576
   14002d560:	mov    rcx,QWORD PTR [rip+0x2cc99]        # 0x14005a200
   14002d567:	call   QWORD PTR [rip+0x13e93]        # 0x140041400
   14002d56d:	lea    rdx,[rbp-0x58]
   14002d571:	mov    rcx,rbx
   14002d574:	call   rax
   14002d576:	cmp    BYTE PTR [rbx],0x2d
   14002d579:	jne    0x14002d583
   14002d57b:	bts    r14d,0x8
   14002d580:	inc    rbx
   14002d583:	mov    rcx,rbx
   14002d586:	call   0x14002e0d0
   14002d58b:	xor    r10d,r10d
   14002d58e:	mov    DWORD PTR [rsp+0x44],eax
   14002d592:	cmp    DWORD PTR [rsp+0x60],r10d
   14002d597:	jne    0x14002d33a
   14002d59d:	test   r14b,0x40
   14002d5a1:	je     0x14002d5d4
   14002d5a3:	bt     r14d,0x8
   14002d5a8:	jae    0x14002d5b1
   14002d5aa:	mov    BYTE PTR [rsp+0x4c],0x2d
   14002d5af:	jmp    0x14002d5bc
   14002d5b1:	test   r14b,0x1
   14002d5b5:	je     0x14002d5c7
   14002d5b7:	mov    BYTE PTR [rsp+0x4c],0x2b
   14002d5bc:	mov    edi,0x1
   14002d5c1:	mov    DWORD PTR [rsp+0x48],edi
   14002d5c5:	jmp    0x14002d5d8
   14002d5c7:	test   r14b,0x2
   14002d5cb:	je     0x14002d5d4
   14002d5cd:	mov    BYTE PTR [rsp+0x4c],0x20
   14002d5d2:	jmp    0x14002d5bc
   14002d5d4:	mov    edi,DWORD PTR [rsp+0x48]
   14002d5d8:	mov    esi,DWORD PTR [rsp+0x54]
   14002d5dc:	mov    r15,QWORD PTR [rsp+0x68]
   14002d5e1:	sub    esi,DWORD PTR [rsp+0x44]
   14002d5e5:	sub    esi,edi
   14002d5e7:	test   r14b,0xc
   14002d5eb:	jne    0x14002d5fe
   14002d5ed:	lea    r9,[rsp+0x40]
   14002d5f2:	mov    r8,r15
   14002d5f5:	mov    edx,esi
   14002d5f7:	mov    cl,0x20
   14002d5f9:	call   0x140030cd8
   14002d5fe:	mov    rax,QWORD PTR [rbp-0x70]
   14002d602:	lea    r9,[rsp+0x40]
   14002d607:	lea    rcx,[rsp+0x4c]
   14002d60c:	mov    r8,r15
   14002d60f:	mov    edx,edi
   14002d611:	mov    QWORD PTR [rsp+0x20],rax
   14002d616:	call   0x140030d2c
   14002d61b:	test   r14b,0x8
   14002d61f:	je     0x14002d638
   14002d621:	test   r14b,0x4
   14002d625:	jne    0x14002d638
   14002d627:	lea    r9,[rsp+0x40]
   14002d62c:	mov    r8,r15
   14002d62f:	mov    edx,esi
   14002d631:	mov    cl,0x30
   14002d633:	call   0x140030cd8
   14002d638:	cmp    DWORD PTR [rsp+0x58],0x0
   14002d63d:	mov    edi,DWORD PTR [rsp+0x44]
   14002d641:	je     0x14002d6b5
   14002d643:	test   edi,edi
   14002d645:	jle    0x14002d6b5
   14002d647:	mov    r15,rbx
   14002d64a:	movzx  r9d,WORD PTR [r15]
   14002d64e:	lea    rdx,[rbp+0x1d0]
   14002d655:	lea    rcx,[rbp-0x78]
   14002d659:	mov    r8d,0x6
   14002d65f:	dec    edi
   14002d661:	lea    r15,[r15+0x2]
   14002d665:	call   0x1400311b0
   14002d66a:	xor    r10d,r10d
   14002d66d:	test   eax,eax
   14002d66f:	jne    0x14002d6a5
   14002d671:	mov    edx,DWORD PTR [rbp-0x78]
   14002d674:	test   edx,edx
   14002d676:	je     0x14002d6a5
   14002d678:	mov    rax,QWORD PTR [rbp-0x70]
   14002d67c:	mov    r8,QWORD PTR [rsp+0x68]
   14002d681:	lea    r9,[rsp+0x40]
   14002d686:	lea    rcx,[rbp+0x1d0]
   14002d68d:	mov    QWORD PTR [rsp+0x20],rax
   14002d692:	call   0x140030d2c
   14002d697:	xor    r10d,r10d
   14002d69a:	test   edi,edi
   14002d69c:	jne    0x14002d64a
   14002d69e:	mov    r15,QWORD PTR [rsp+0x68]
   14002d6a3:	jmp    0x14002d6d3
   14002d6a5:	mov    r15,QWORD PTR [rsp+0x68]
   14002d6aa:	or     r8d,0xffffffff
   14002d6ae:	mov    DWORD PTR [rsp+0x40],r8d
   14002d6b3:	jmp    0x14002d6d8
   14002d6b5:	mov    rax,QWORD PTR [rbp-0x70]
   14002d6b9:	lea    r9,[rsp+0x40]
   14002d6be:	mov    r8,r15
   14002d6c1:	mov    edx,edi
   14002d6c3:	mov    rcx,rbx
   14002d6c6:	mov    QWORD PTR [rsp+0x20],rax
   14002d6cb:	call   0x140030d2c
   14002d6d0:	xor    r10d,r10d
   14002d6d3:	mov    r8d,DWORD PTR [rsp+0x40]
   14002d6d8:	mov    DWORD PTR [rsp+0x50],r8d
   14002d6dd:	test   r8d,r8d
   14002d6e0:	js     0x14002d33f
   14002d6e6:	test   r14b,0x4
   14002d6ea:	je     0x14002d33f
   14002d6f0:	lea    r9,[rsp+0x40]
   14002d6f5:	mov    r8,r15
   14002d6f8:	mov    edx,esi
   14002d6fa:	mov    cl,0x20
   14002d6fc:	call   0x140030cd8
   14002d701:	mov    r8d,DWORD PTR [rsp+0x40]
   14002d706:	xor    r10d,r10d
   14002d709:	mov    DWORD PTR [rsp+0x50],r8d
   14002d70e:	jmp    0x14002d33f
   14002d713:	cmp    r15b,0x49
   14002d717:	je     0x14002d75d
   14002d719:	cmp    r15b,0x68
   14002d71d:	je     0x14002d754
   14002d71f:	cmp    r15b,0x6c
   14002d723:	je     0x14002d739
   14002d725:	cmp    r15b,0x77
   14002d729:	jne    0x14002d376
   14002d72f:	bts    r14d,0xb
   14002d734:	jmp    0x14002d376
   14002d739:	cmp    BYTE PTR [rdi],0x6c
   14002d73c:	jne    0x14002d74b
   14002d73e:	inc    rdi
   14002d741:	bts    r14d,0xc
   14002d746:	jmp    0x14002d376
   14002d74b:	or     r14d,0x10
   14002d74f:	jmp    0x14002d376
   14002d754:	or     r14d,0x20
   14002d758:	jmp    0x14002d376
   14002d75d:	mov    al,BYTE PTR [rdi]
   14002d75f:	bts    r14d,0xf
   14002d764:	cmp    al,0x36
   14002d766:	jne    0x14002d77c
   14002d768:	cmp    BYTE PTR [rdi+0x1],0x34
   14002d76c:	jne    0x14002d77c
   14002d76e:	add    rdi,0x2
   14002d772:	bts    r14d,0xf
   14002d777:	jmp    0x14002d376
   14002d77c:	cmp    al,0x33
   14002d77e:	jne    0x14002d794
   14002d780:	cmp    BYTE PTR [rdi+0x1],0x32
   14002d784:	jne    0x14002d794
   14002d786:	add    rdi,0x2
   14002d78a:	btr    r14d,0xf
   14002d78f:	jmp    0x14002d376
   14002d794:	sub    al,0x58
   14002d796:	cmp    al,0x20
   14002d798:	ja     0x14002d7ae
   14002d79a:	movabs rcx,0x120821001
   14002d7a4:	bt     rcx,rax
   14002d7a8:	jb     0x14002d376
   14002d7ae:	mov    DWORD PTR [rsp+0x5c],r10d
   14002d7b3:	lea    rdx,[rbp-0x58]
   14002d7b7:	movzx  ecx,r15b
   14002d7bb:	mov    DWORD PTR [rsp+0x58],r10d
   14002d7c0:	call   0x14002fe88
   14002d7c5:	test   eax,eax
   14002d7c7:	je     0x14002d7e8
   14002d7c9:	lea    r8,[rsp+0x40]
   14002d7ce:	mov    rdx,rsi
   14002d7d1:	mov    cl,r15b
   14002d7d4:	call   0x14002d950
   14002d7d9:	mov    r15b,BYTE PTR [rdi]
   14002d7dc:	inc    rdi
   14002d7df:	test   r15b,r15b
   14002d7e2:	je     0x14002d8f9
   14002d7e8:	lea    r8,[rsp+0x40]
   14002d7ed:	mov    rdx,rsi
   14002d7f0:	mov    cl,r15b
   14002d7f3:	call   0x14002d950
   14002d7f8:	mov    r8d,DWORD PTR [rsp+0x40]
   14002d7fd:	xor    r10d,r10d
   14002d800:	mov    DWORD PTR [rsp+0x50],r8d
   14002d805:	jmp    0x14002d365
   14002d80a:	cmp    r15b,0x2a
   14002d80e:	jne    0x14002d82a
   14002d810:	mov    r12d,DWORD PTR [r13+0x0]
   14002d814:	add    r13,0x8
   14002d818:	test   r12d,r12d
   14002d81b:	jns    0x14002d376
   14002d821:	or     r12d,0xffffffff
   14002d825:	jmp    0x14002d376
   14002d82a:	lea    r12d,[r12+r12*4]
   14002d82e:	movsx  eax,r15b
   14002d832:	lea    r12d,[r12-0x18]
   14002d837:	lea    r12d,[rax+r12*2]
   14002d83b:	jmp    0x14002d376
   14002d840:	mov    r12d,r10d
   14002d843:	jmp    0x14002d376
   14002d848:	cmp    r15b,0x2a
   14002d84c:	jne    0x14002d86a
   14002d84e:	mov    eax,DWORD PTR [r13+0x0]
   14002d852:	add    r13,0x8
   14002d856:	mov    DWORD PTR [rsp+0x54],eax
   14002d85a:	test   eax,eax
   14002d85c:	jns    0x14002d376
   14002d862:	or     r14d,0x4
   14002d866:	neg    eax
   14002d868:	jmp    0x14002d87b
   14002d86a:	mov    eax,DWORD PTR [rsp+0x54]
   14002d86e:	lea    ecx,[rax+rax*4]
   14002d871:	movsx  eax,r15b
   14002d875:	lea    eax,[rax+rcx*2]
   14002d878:	add    eax,0xffffffd0
   14002d87b:	mov    DWORD PTR [rsp+0x54],eax
   14002d87f:	jmp    0x14002d376
   14002d884:	cmp    r15b,0x20
   14002d888:	je     0x14002d8cb
   14002d88a:	cmp    r15b,0x23
   14002d88e:	je     0x14002d8c1
   14002d890:	cmp    r15b,0x2b
   14002d894:	je     0x14002d8b8
   14002d896:	cmp    r15b,0x2d
   14002d89a:	je     0x14002d8af
   14002d89c:	cmp    r15b,0x30
   14002d8a0:	jne    0x14002d376
   14002d8a6:	or     r14d,0x8
   14002d8aa:	jmp    0x14002d376
   14002d8af:	or     r14d,0x4
   14002d8b3:	jmp    0x14002d376
   14002d8b8:	or     r14d,0x1
   14002d8bc:	jmp    0x14002d376
   14002d8c1:	bts    r14d,0x7
   14002d8c6:	jmp    0x14002d376
   14002d8cb:	or     r14d,0x2
   14002d8cf:	jmp    0x14002d376
   14002d8d4:	mov    DWORD PTR [rsp+0x78],r10d
   14002d8d9:	mov    DWORD PTR [rsp+0x60],r10d
   14002d8de:	mov    DWORD PTR [rsp+0x54],r10d
   14002d8e3:	mov    DWORD PTR [rsp+0x48],r10d
   14002d8e8:	mov    r14d,r10d
   14002d8eb:	or     r12d,0xffffffff
   14002d8ef:	mov    DWORD PTR [rsp+0x58],r10d
   14002d8f4:	jmp    0x14002d376
   14002d8f9:	call   0x140029bf8
   14002d8fe:	mov    DWORD PTR [rax],0x16
   14002d904:	call   0x140029b2c
   14002d909:	xor    r10d,r10d
   14002d90c:	or     r8d,0xffffffff
   14002d910:	cmp    BYTE PTR [rbp-0x40],r10b
   14002d914:	je     0x14002d921
   14002d916:	mov    rcx,QWORD PTR [rbp-0x48]
   14002d91a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002d921:	mov    eax,r8d
   14002d924:	mov    rcx,QWORD PTR [rbp+0x1d8]
   14002d92b:	xor    rcx,rsp
   14002d92e:	call   0x1400265a0
   14002d933:	mov    rbx,QWORD PTR [rsp+0x330]
   14002d93b:	add    rsp,0x2e0
   14002d942:	pop    r15
   14002d944:	pop    r14
   14002d946:	pop    r13
   14002d948:	pop    r12
   14002d94a:	pop    rdi
   14002d94b:	pop    rsi
   14002d94c:	pop    rbp
   14002d94d:	ret    
   14002d94e:	int3   
   14002d94f:	int3   
   14002d950:	rex push rbx
   14002d952:	sub    rsp,0x20
   14002d956:	test   BYTE PTR [rdx+0x18],0x40
   14002d95a:	mov    rbx,r8
   14002d95d:	je     0x14002d96b
   14002d95f:	cmp    QWORD PTR [rdx+0x10],0x0
   14002d964:	jne    0x14002d96b
   14002d966:	inc    DWORD PTR [r8]
   14002d969:	jmp    0x14002d990
   14002d96b:	dec    DWORD PTR [rdx+0x8]
   14002d96e:	js     0x14002d97d
   14002d970:	mov    rax,QWORD PTR [rdx]
   14002d973:	mov    BYTE PTR [rax],cl
   14002d975:	inc    QWORD PTR [rdx]
   14002d978:	movzx  eax,cl
   14002d97b:	jmp    0x14002d985
   14002d97d:	movsx  ecx,cl
   14002d980:	call   0x14002ae64
   14002d985:	cmp    eax,0xffffffff
   14002d988:	jne    0x14002d98e
   14002d98a:	or     DWORD PTR [rbx],eax
   14002d98c:	jmp    0x14002d990
   14002d98e:	inc    DWORD PTR [rbx]
   14002d990:	add    rsp,0x20
   14002d994:	pop    rbx
   14002d995:	ret    
   14002d996:	int3   
   14002d997:	int3   
   14002d998:	and    DWORD PTR [rip+0x2ff81],0x0        # 0x14005d920
   14002d99f:	ret    
   14002d9a0:	mov    QWORD PTR [rsp+0x20],rbx
   14002d9a5:	push   rdi
   14002d9a6:	sub    rsp,0x40
   14002d9aa:	mov    rbx,rcx
   14002d9ad:	call   QWORD PTR [rip+0x13b4d]        # 0x140041500
   14002d9b3:	mov    rdi,QWORD PTR [rbx+0xf8]
   14002d9ba:	lea    rdx,[rsp+0x50]
   14002d9bf:	xor    r8d,r8d
   14002d9c2:	mov    rcx,rdi
   14002d9c5:	call   QWORD PTR [rip+0x13b3d]        # 0x140041508
   14002d9cb:	test   rax,rax
   14002d9ce:	je     0x14002da02
   14002d9d0:	and    QWORD PTR [rsp+0x38],0x0
   14002d9d6:	mov    rdx,QWORD PTR [rsp+0x50]
   14002d9db:	lea    rcx,[rsp+0x58]
   14002d9e0:	mov    QWORD PTR [rsp+0x30],rcx
   14002d9e5:	lea    rcx,[rsp+0x60]
   14002d9ea:	mov    r9,rax
   14002d9ed:	mov    QWORD PTR [rsp+0x28],rcx
   14002d9f2:	xor    ecx,ecx
   14002d9f4:	mov    r8,rdi
   14002d9f7:	mov    QWORD PTR [rsp+0x20],rbx
   14002d9fc:	call   QWORD PTR [rip+0x13b0e]        # 0x140041510
   14002da02:	mov    rbx,QWORD PTR [rsp+0x68]
   14002da07:	add    rsp,0x40
   14002da0b:	pop    rdi
   14002da0c:	ret    
   14002da0d:	int3   
   14002da0e:	int3   
   14002da0f:	int3   
   14002da10:	rex push rbx
   14002da12:	push   rsi
   14002da13:	push   rdi
   14002da14:	sub    rsp,0x40
   14002da18:	mov    rbx,rcx
   14002da1b:	call   QWORD PTR [rip+0x13adf]        # 0x140041500
   14002da21:	mov    rsi,QWORD PTR [rbx+0xf8]
   14002da28:	xor    edi,edi
   14002da2a:	lea    rdx,[rsp+0x60]
   14002da2f:	xor    r8d,r8d
   14002da32:	mov    rcx,rsi
   14002da35:	call   QWORD PTR [rip+0x13acd]        # 0x140041508
   14002da3b:	test   rax,rax
   14002da3e:	je     0x14002da79
   14002da40:	and    QWORD PTR [rsp+0x38],0x0
   14002da46:	mov    rdx,QWORD PTR [rsp+0x60]
   14002da4b:	lea    rcx,[rsp+0x68]
   14002da50:	mov    QWORD PTR [rsp+0x30],rcx
   14002da55:	lea    rcx,[rsp+0x70]
   14002da5a:	mov    r9,rax
   14002da5d:	mov    QWORD PTR [rsp+0x28],rcx
   14002da62:	xor    ecx,ecx
   14002da64:	mov    r8,rsi
   14002da67:	mov    QWORD PTR [rsp+0x20],rbx
   14002da6c:	call   QWORD PTR [rip+0x13a9e]        # 0x140041510
   14002da72:	inc    edi
   14002da74:	cmp    edi,0x2
   14002da77:	jl     0x14002da2a
   14002da79:	add    rsp,0x40
   14002da7d:	pop    rdi
   14002da7e:	pop    rsi
   14002da7f:	pop    rbx
   14002da80:	ret    
   14002da81:	int3   
   14002da82:	int3   
   14002da83:	int3   
   14002da84:	rex.W jmp QWORD PTR [rip+0x13a95]        # 0x140041520
   14002da8b:	int3   
   14002da8c:	rex.W jmp QWORD PTR [rip+0x13aa5]        # 0x140041538
   14002da93:	int3   
   14002da94:	rex.W jmp QWORD PTR [rip+0x13a8d]        # 0x140041528
   14002da9b:	int3   
   14002da9c:	rex.W jmp QWORD PTR [rip+0x13a8d]        # 0x140041530
   14002daa3:	int3   
   14002daa4:	rex push rbx
   14002daa6:	sub    rsp,0x20
   14002daaa:	mov    eax,DWORD PTR [rip+0x2c4c0]        # 0x140059f70
   14002dab0:	xor    ebx,ebx
   14002dab2:	test   eax,eax
   14002dab4:	jns    0x14002daf7
   14002dab6:	lea    rcx,[rip+0x1504b]        # 0x140042b08
   14002dabd:	mov    DWORD PTR [rsp+0x30],ebx
   14002dac1:	call   QWORD PTR [rip+0x138a1]        # 0x140041368
   14002dac7:	lea    rdx,[rip+0x15022]        # 0x140042af0
   14002dace:	mov    rcx,rax
   14002dad1:	call   QWORD PTR [rip+0x13811]        # 0x1400412e8
   14002dad7:	test   rax,rax
   14002dada:	je     0x14002daed
   14002dadc:	lea    rcx,[rsp+0x30]
   14002dae1:	xor    edx,edx
   14002dae3:	call   rax
   14002dae5:	cmp    eax,0x7a
   14002dae8:	lea    eax,[rbx+0x1]
   14002daeb:	je     0x14002daef
   14002daed:	mov    eax,ebx
   14002daef:	mov    DWORD PTR [rip+0x2c47b],eax        # 0x140059f70
   14002daf5:	test   eax,eax
   14002daf7:	setg   bl
   14002dafa:	mov    eax,ebx
   14002dafc:	add    rsp,0x20
   14002db00:	pop    rbx
   14002db01:	ret    
   14002db02:	int3   
   14002db03:	int3   
   14002db04:	rex.W jmp QWORD PTR [rip+0x137cd]        # 0x1400412d8
   14002db0b:	int3   
   14002db0c:	rex push rbx
   14002db0e:	sub    rsp,0x20
   14002db12:	mov    ebx,ecx
   14002db14:	call   QWORD PTR [rip+0x13a26]        # 0x140041540
   14002db1a:	mov    edx,ebx
   14002db1c:	mov    rcx,rax
   14002db1f:	add    rsp,0x20
   14002db23:	pop    rbx
   14002db24:	rex.W jmp QWORD PTR [rip+0x13a1d]        # 0x140041548
   14002db2b:	int3   
   14002db2c:	rex push rbx
   14002db2e:	sub    rsp,0x20
   14002db32:	mov    rbx,rcx
   14002db35:	xor    ecx,ecx
   14002db37:	call   QWORD PTR [rip+0x1379b]        # 0x1400412d8
   14002db3d:	mov    rcx,rbx
   14002db40:	add    rsp,0x20
   14002db44:	pop    rbx
   14002db45:	rex.W jmp QWORD PTR [rip+0x139cc]        # 0x140041518
   14002db4c:	mov    QWORD PTR [rsp+0x8],rbx
   14002db51:	push   rdi
   14002db52:	sub    rsp,0x20
   14002db56:	movsxd rbx,ecx
   14002db59:	lea    rdi,[rip+0x2c420]        # 0x140059f80
   14002db60:	add    rbx,rbx
   14002db63:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14002db68:	jne    0x14002db7b
   14002db6a:	call   0x14002dc18
   14002db6f:	test   eax,eax
   14002db71:	jne    0x14002db7b
   14002db73:	lea    ecx,[rax+0x11]
   14002db76:	call   0x1400283b0
   14002db7b:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14002db7f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002db84:	add    rsp,0x20
   14002db88:	pop    rdi
   14002db89:	rex.W jmp QWORD PTR [rip+0x13960]        # 0x1400414f0
   14002db90:	mov    QWORD PTR [rsp+0x8],rbx
   14002db95:	mov    QWORD PTR [rsp+0x10],rbp
   14002db9a:	mov    QWORD PTR [rsp+0x18],rsi
   14002db9f:	push   rdi
   14002dba0:	sub    rsp,0x20
   14002dba4:	mov    edi,0x24
   14002dba9:	lea    rbx,[rip+0x2c3d0]        # 0x140059f80
   14002dbb0:	mov    ebp,edi
   14002dbb2:	mov    rsi,QWORD PTR [rbx]
   14002dbb5:	test   rsi,rsi
   14002dbb8:	je     0x14002dbd5
   14002dbba:	cmp    DWORD PTR [rbx+0x8],0x1
   14002dbbe:	je     0x14002dbd5
   14002dbc0:	mov    rcx,rsi
   14002dbc3:	call   QWORD PTR [rip+0x13897]        # 0x140041460
   14002dbc9:	mov    rcx,rsi
   14002dbcc:	call   0x1400273dc
   14002dbd1:	and    QWORD PTR [rbx],0x0
   14002dbd5:	add    rbx,0x10
   14002dbd9:	dec    rbp
   14002dbdc:	jne    0x14002dbb2
   14002dbde:	lea    rbx,[rip+0x2c3a3]        # 0x140059f88
   14002dbe5:	mov    rcx,QWORD PTR [rbx-0x8]
   14002dbe9:	test   rcx,rcx
   14002dbec:	je     0x14002dbf9
   14002dbee:	cmp    DWORD PTR [rbx],0x1
   14002dbf1:	jne    0x14002dbf9
   14002dbf3:	call   QWORD PTR [rip+0x13867]        # 0x140041460
   14002dbf9:	add    rbx,0x10
   14002dbfd:	dec    rdi
   14002dc00:	jne    0x14002dbe5
   14002dc02:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dc07:	mov    rbp,QWORD PTR [rsp+0x38]
   14002dc0c:	mov    rsi,QWORD PTR [rsp+0x40]
   14002dc11:	add    rsp,0x20
   14002dc15:	pop    rdi
   14002dc16:	ret    
   14002dc17:	int3   
   14002dc18:	mov    QWORD PTR [rsp+0x8],rbx
   14002dc1d:	mov    QWORD PTR [rsp+0x10],rdi
   14002dc22:	push   r14
   14002dc24:	sub    rsp,0x20
   14002dc28:	movsxd rbx,ecx
   14002dc2b:	cmp    QWORD PTR [rip+0x2e755],0x0        # 0x14005c388
   14002dc33:	jne    0x14002dc4e
   14002dc35:	call   0x140028760
   14002dc3a:	mov    ecx,0x1e
   14002dc3f:	call   0x1400287d4
   14002dc44:	mov    ecx,0xff
   14002dc49:	call   0x140028398
   14002dc4e:	add    rbx,rbx
   14002dc51:	lea    r14,[rip+0x2c328]        # 0x140059f80
   14002dc58:	cmp    QWORD PTR [r14+rbx*8],0x0
   14002dc5d:	je     0x14002dc66
   14002dc5f:	mov    eax,0x1
   14002dc64:	jmp    0x14002dcc2
   14002dc66:	mov    ecx,0x28
   14002dc6b:	call   0x1400297c4
   14002dc70:	mov    rdi,rax
   14002dc73:	test   rax,rax
   14002dc76:	jne    0x14002dc87
   14002dc78:	call   0x140029bf8
   14002dc7d:	mov    DWORD PTR [rax],0xc
   14002dc83:	xor    eax,eax
   14002dc85:	jmp    0x14002dcc2
   14002dc87:	mov    ecx,0xa
   14002dc8c:	call   0x14002db4c
   14002dc91:	nop
   14002dc92:	mov    rcx,rdi
   14002dc95:	cmp    QWORD PTR [r14+rbx*8],0x0
   14002dc9a:	jne    0x14002dcad
   14002dc9c:	mov    edx,0xfa0
   14002dca1:	call   QWORD PTR [rip+0x137b1]        # 0x140041458
   14002dca7:	mov    QWORD PTR [r14+rbx*8],rdi
   14002dcab:	jmp    0x14002dcb3
   14002dcad:	call   0x1400273dc
   14002dcb2:	nop
   14002dcb3:	mov    rcx,QWORD PTR [rip+0x2c366]        # 0x14005a020
   14002dcba:	call   QWORD PTR [rip+0x13838]        # 0x1400414f8
   14002dcc0:	jmp    0x14002dc5f
   14002dcc2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dcc7:	mov    rdi,QWORD PTR [rsp+0x38]
   14002dccc:	add    rsp,0x20
   14002dcd0:	pop    r14
   14002dcd2:	ret    
   14002dcd3:	int3   
   14002dcd4:	mov    QWORD PTR [rsp+0x8],rbx
   14002dcd9:	mov    QWORD PTR [rsp+0x10],rsi
   14002dcde:	push   rdi
   14002dcdf:	sub    rsp,0x20
   14002dce3:	xor    esi,esi
   14002dce5:	lea    rbx,[rip+0x2c294]        # 0x140059f80
   14002dcec:	lea    edi,[rsi+0x24]
   14002dcef:	cmp    DWORD PTR [rbx+0x8],0x1
   14002dcf3:	jne    0x14002dd17
   14002dcf5:	movsxd rax,esi
   14002dcf8:	lea    rdx,[rip+0x2e931]        # 0x14005c630
   14002dcff:	inc    esi
   14002dd01:	lea    rcx,[rax+rax*4]
   14002dd05:	lea    rcx,[rdx+rcx*8]
   14002dd09:	mov    edx,0xfa0
   14002dd0e:	mov    QWORD PTR [rbx],rcx
   14002dd11:	call   QWORD PTR [rip+0x13741]        # 0x140041458
   14002dd17:	add    rbx,0x10
   14002dd1b:	dec    rdi
   14002dd1e:	jne    0x14002dcef
   14002dd20:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dd25:	mov    rsi,QWORD PTR [rsp+0x38]
   14002dd2a:	lea    eax,[rdi+0x1]
   14002dd2d:	add    rsp,0x20
   14002dd31:	pop    rdi
   14002dd32:	ret    
   14002dd33:	int3   
   14002dd34:	movsxd rcx,ecx
   14002dd37:	lea    rax,[rip+0x2c242]        # 0x140059f80
   14002dd3e:	add    rcx,rcx
   14002dd41:	mov    rcx,QWORD PTR [rax+rcx*8]
   14002dd45:	rex.W jmp QWORD PTR [rip+0x137ac]        # 0x1400414f8
   14002dd4c:	int3   
   14002dd4d:	int3   
   14002dd4e:	int3   
   14002dd4f:	int3   
   14002dd50:	movsxd r8,DWORD PTR [rcx+0x3c]
   14002dd54:	xor    r9d,r9d
   14002dd57:	mov    r10,rdx
   14002dd5a:	add    r8,rcx
   14002dd5d:	movzx  eax,WORD PTR [r8+0x14]
   14002dd62:	movzx  r11d,WORD PTR [r8+0x6]
   14002dd67:	add    rax,0x18
   14002dd6b:	add    rax,r8
   14002dd6e:	test   r11d,r11d
   14002dd71:	je     0x14002dd91
   14002dd73:	mov    edx,DWORD PTR [rax+0xc]
   14002dd76:	cmp    r10,rdx
   14002dd79:	jb     0x14002dd85
   14002dd7b:	mov    ecx,DWORD PTR [rax+0x8]
   14002dd7e:	add    ecx,edx
   14002dd80:	cmp    r10,rcx
   14002dd83:	jb     0x14002dd93
   14002dd85:	inc    r9d
   14002dd88:	add    rax,0x28
   14002dd8c:	cmp    r9d,r11d
   14002dd8f:	jb     0x14002dd73
   14002dd91:	xor    eax,eax
   14002dd93:	repz ret 
   14002dd95:	int3   
   14002dd96:	int3   
   14002dd97:	int3   
   14002dd98:	int3   
   14002dd99:	int3   
   14002dd9a:	int3   
   14002dd9b:	int3   
   14002dd9c:	int3   
   14002dd9d:	int3   
   14002dd9e:	int3   
   14002dd9f:	int3   
   14002dda0:	mov    QWORD PTR [rsp+0x8],rbx
   14002dda5:	push   rdi
   14002dda6:	sub    rsp,0x20
   14002ddaa:	mov    rbx,rcx
   14002ddad:	lea    rdi,[rip+0xfffffffffffd224c]        # 0x140000000
   14002ddb4:	mov    rcx,rdi
   14002ddb7:	call   0x14002ddf0
   14002ddbc:	test   eax,eax
   14002ddbe:	je     0x14002dde2
   14002ddc0:	sub    rbx,rdi
   14002ddc3:	mov    rdx,rbx
   14002ddc6:	mov    rcx,rdi
   14002ddc9:	call   0x14002dd50
   14002ddce:	test   rax,rax
   14002ddd1:	je     0x14002dde2
   14002ddd3:	mov    eax,DWORD PTR [rax+0x24]
   14002ddd6:	shr    eax,0x1f
   14002ddd9:	not    eax
   14002dddb:	and    eax,0x1
   14002ddde:	jmp    0x14002dde2
   14002dde0:	xor    eax,eax
   14002dde2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dde7:	add    rsp,0x20
   14002ddeb:	pop    rdi
   14002ddec:	ret    
   14002dded:	int3   
   14002ddee:	int3   
   14002ddef:	int3   
   14002ddf0:	mov    rax,rcx
   14002ddf3:	mov    ecx,0x5a4d
   14002ddf8:	cmp    WORD PTR [rax],cx
   14002ddfb:	je     0x14002de00
   14002ddfd:	xor    eax,eax
   14002ddff:	ret    
   14002de00:	movsxd rcx,DWORD PTR [rax+0x3c]
   14002de04:	add    rcx,rax
   14002de07:	xor    eax,eax
   14002de09:	cmp    DWORD PTR [rcx],0x4550
   14002de0f:	jne    0x14002de1d
   14002de11:	mov    edx,0x20b
   14002de16:	cmp    WORD PTR [rcx+0x18],dx
   14002de1a:	sete   al
   14002de1d:	repz ret 
   14002de1f:	int3   
   14002de20:	mov    QWORD PTR [rsp+0x8],rbx
   14002de25:	push   rdi
   14002de26:	sub    rsp,0x20
   14002de2a:	xor    edi,edi
   14002de2c:	lea    rbx,[rip+0x2c38d]        # 0x14005a1c0
   14002de33:	mov    rcx,QWORD PTR [rbx]
   14002de36:	call   QWORD PTR [rip+0x135bc]        # 0x1400413f8
   14002de3c:	inc    edi
   14002de3e:	mov    QWORD PTR [rbx],rax
   14002de41:	movsxd rax,edi
   14002de44:	lea    rbx,[rbx+0x8]
   14002de48:	cmp    rax,0xa
   14002de4c:	jb     0x14002de33
   14002de4e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002de53:	add    rsp,0x20
   14002de57:	pop    rdi
   14002de58:	ret    
   14002de59:	int3   
   14002de5a:	int3   
   14002de5b:	int3   
   14002de5c:	mov    QWORD PTR [rip+0x2e9fd],rcx        # 0x14005c860
   14002de63:	ret    
   14002de64:	mov    rcx,QWORD PTR [rip+0x2ea0d]        # 0x14005c878
   14002de6b:	rex.W jmp QWORD PTR [rip+0x1358e]        # 0x140041400
   14002de72:	int3   
   14002de73:	int3   
   14002de74:	mov    QWORD PTR [rip+0x2e9ed],rcx        # 0x14005c868
   14002de7b:	mov    QWORD PTR [rip+0x2e9ee],rcx        # 0x14005c870
   14002de82:	mov    QWORD PTR [rip+0x2e9ef],rcx        # 0x14005c878
   14002de89:	mov    QWORD PTR [rip+0x2e9f0],rcx        # 0x14005c880
   14002de90:	ret    
   14002de91:	int3   
   14002de92:	int3   
   14002de93:	int3   
   14002de94:	mov    QWORD PTR [rsp+0x18],rbx
   14002de99:	push   rsi
   14002de9a:	push   rdi
   14002de9b:	push   r12
   14002de9d:	push   r14
   14002de9f:	push   r15
   14002dea1:	sub    rsp,0x30
   14002dea5:	mov    ebx,ecx
   14002dea7:	xor    edi,edi
   14002dea9:	mov    DWORD PTR [rsp+0x60],edi
   14002dead:	xor    esi,esi
   14002deaf:	mov    edx,ecx
   14002deb1:	sub    edx,0x2
   14002deb4:	je     0x14002df7e
   14002deba:	sub    edx,0x2
   14002debd:	je     0x14002df21
   14002debf:	sub    edx,0x2
   14002dec2:	je     0x14002df11
   14002dec4:	sub    edx,0x2
   14002dec7:	je     0x14002df21
   14002dec9:	sub    edx,0x3
   14002decc:	je     0x14002df21
   14002dece:	sub    edx,0x4
   14002ded1:	je     0x14002df01
   14002ded3:	sub    edx,0x6
   14002ded6:	je     0x14002deee
   14002ded8:	dec    edx
   14002deda:	je     0x14002df11
   14002dedc:	call   0x140029bf8
   14002dee1:	mov    DWORD PTR [rax],0x16
   14002dee7:	call   0x140029b2c
   14002deec:	jmp    0x14002df2e
   14002deee:	lea    r14,[rip+0x2e97b]        # 0x14005c870
   14002def5:	mov    rcx,QWORD PTR [rip+0x2e974]        # 0x14005c870
   14002defc:	jmp    0x14002df8c
   14002df01:	lea    r14,[rip+0x2e978]        # 0x14005c880
   14002df08:	mov    rcx,QWORD PTR [rip+0x2e971]        # 0x14005c880
   14002df0f:	jmp    0x14002df8c
   14002df11:	lea    r14,[rip+0x2e960]        # 0x14005c878
   14002df18:	mov    rcx,QWORD PTR [rip+0x2e959]        # 0x14005c878
   14002df1f:	jmp    0x14002df8c
   14002df21:	call   0x140028170
   14002df26:	mov    rsi,rax
   14002df29:	test   rax,rax
   14002df2c:	jne    0x14002df36
   14002df2e:	or     eax,0xffffffff
   14002df31:	jmp    0x14002e0a6
   14002df36:	mov    rdx,QWORD PTR [rax+0xa0]
   14002df3d:	mov    rcx,rdx
   14002df40:	movsxd r8,DWORD PTR [rip+0x13a89]        # 0x1400419d0
   14002df47:	cmp    DWORD PTR [rcx+0x4],ebx
   14002df4a:	je     0x14002df5f
   14002df4c:	add    rcx,0x10
   14002df50:	mov    rax,r8
   14002df53:	shl    rax,0x4
   14002df57:	add    rax,rdx
   14002df5a:	cmp    rcx,rax
   14002df5d:	jb     0x14002df47
   14002df5f:	mov    rax,r8
   14002df62:	shl    rax,0x4
   14002df66:	add    rax,rdx
   14002df69:	cmp    rcx,rax
   14002df6c:	jae    0x14002df73
   14002df6e:	cmp    DWORD PTR [rcx+0x4],ebx
   14002df71:	je     0x14002df75
   14002df73:	xor    ecx,ecx
   14002df75:	lea    r14,[rcx+0x8]
   14002df79:	mov    r15,QWORD PTR [r14]
   14002df7c:	jmp    0x14002df9e
   14002df7e:	lea    r14,[rip+0x2e8e3]        # 0x14005c868
   14002df85:	mov    rcx,QWORD PTR [rip+0x2e8dc]        # 0x14005c868
   14002df8c:	mov    edi,0x1
   14002df91:	mov    DWORD PTR [rsp+0x60],edi
   14002df95:	call   QWORD PTR [rip+0x13465]        # 0x140041400
   14002df9b:	mov    r15,rax
   14002df9e:	cmp    r15,0x1
   14002dfa2:	jne    0x14002dfab
   14002dfa4:	xor    eax,eax
   14002dfa6:	jmp    0x14002e0a6
   14002dfab:	test   r15,r15
   14002dfae:	jne    0x14002dfba
   14002dfb0:	lea    ecx,[r15+0x3]
   14002dfb4:	call   0x1400284a8
   14002dfb9:	int3   
   14002dfba:	test   edi,edi
   14002dfbc:	je     0x14002dfc6
   14002dfbe:	xor    ecx,ecx
   14002dfc0:	call   0x14002db4c
   14002dfc5:	nop
   14002dfc6:	mov    r12d,0x910
   14002dfcc:	cmp    ebx,0xb
   14002dfcf:	ja     0x14002e004
   14002dfd1:	bt     r12d,ebx
   14002dfd5:	jae    0x14002e004
   14002dfd7:	mov    rax,QWORD PTR [rsi+0xa8]
   14002dfde:	mov    QWORD PTR [rsp+0x28],rax
   14002dfe3:	and    QWORD PTR [rsi+0xa8],0x0
   14002dfeb:	cmp    ebx,0x8
   14002dfee:	jne    0x14002e042
   14002dff0:	mov    eax,DWORD PTR [rsi+0xb0]
   14002dff6:	mov    DWORD PTR [rsp+0x68],eax
   14002dffa:	mov    DWORD PTR [rsi+0xb0],0x8c
   14002e004:	cmp    ebx,0x8
   14002e007:	jne    0x14002e042
   14002e009:	mov    ecx,DWORD PTR [rip+0x139c9]        # 0x1400419d8
   14002e00f:	mov    edx,ecx
   14002e011:	mov    DWORD PTR [rsp+0x20],ecx
   14002e015:	mov    eax,DWORD PTR [rip+0x139c1]        # 0x1400419dc
   14002e01b:	add    ecx,eax
   14002e01d:	cmp    edx,ecx
   14002e01f:	jge    0x14002e04d
   14002e021:	movsxd rcx,edx
   14002e024:	add    rcx,rcx
   14002e027:	mov    rax,QWORD PTR [rsi+0xa0]
   14002e02e:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14002e034:	inc    edx
   14002e036:	mov    DWORD PTR [rsp+0x20],edx
   14002e03a:	mov    ecx,DWORD PTR [rip+0x13998]        # 0x1400419d8
   14002e040:	jmp    0x14002e015
   14002e042:	xor    ecx,ecx
   14002e044:	call   QWORD PTR [rip+0x133ae]        # 0x1400413f8
   14002e04a:	mov    QWORD PTR [r14],rax
   14002e04d:	test   edi,edi
   14002e04f:	je     0x14002e058
   14002e051:	xor    ecx,ecx
   14002e053:	call   0x14002dd34
   14002e058:	cmp    ebx,0x8
   14002e05b:	jne    0x14002e06a
   14002e05d:	mov    edx,DWORD PTR [rsi+0xb0]
   14002e063:	mov    ecx,ebx
   14002e065:	call   r15
   14002e068:	jmp    0x14002e06f
   14002e06a:	mov    ecx,ebx
   14002e06c:	call   r15
   14002e06f:	cmp    ebx,0xb
   14002e072:	ja     0x14002dfa4
   14002e078:	bt     r12d,ebx
   14002e07c:	jae    0x14002dfa4
   14002e082:	mov    rax,QWORD PTR [rsp+0x28]
   14002e087:	mov    QWORD PTR [rsi+0xa8],rax
   14002e08e:	cmp    ebx,0x8
   14002e091:	jne    0x14002dfa4
   14002e097:	mov    eax,DWORD PTR [rsp+0x68]
   14002e09b:	mov    DWORD PTR [rsi+0xb0],eax
   14002e0a1:	jmp    0x14002dfa4
   14002e0a6:	mov    rbx,QWORD PTR [rsp+0x70]
   14002e0ab:	add    rsp,0x30
   14002e0af:	pop    r15
   14002e0b1:	pop    r14
   14002e0b3:	pop    r12
   14002e0b5:	pop    rdi
   14002e0b6:	pop    rsi
   14002e0b7:	ret    
   14002e0b8:	int3   
   14002e0b9:	int3   
   14002e0ba:	int3   
   14002e0bb:	int3   
   14002e0bc:	int3   
   14002e0bd:	int3   
   14002e0be:	int3   
   14002e0bf:	int3   
   14002e0c0:	int3   
   14002e0c1:	int3   
   14002e0c2:	int3   
   14002e0c3:	int3   
   14002e0c4:	int3   
   14002e0c5:	int3   
   14002e0c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002e0d0:	mov    rax,rcx
   14002e0d3:	neg    rcx
   14002e0d6:	test   rax,0x7
   14002e0dc:	je     0x14002e0ed
   14002e0de:	xchg   ax,ax
   14002e0e0:	mov    dl,BYTE PTR [rax]
   14002e0e2:	inc    rax
   14002e0e5:	test   dl,dl
   14002e0e7:	je     0x14002e148
   14002e0e9:	test   al,0x7
   14002e0eb:	jne    0x14002e0e0
   14002e0ed:	movabs r8,0x7efefefefefefeff
   14002e0f7:	movabs r11,0x8101010101010100
   14002e101:	mov    rdx,QWORD PTR [rax]
   14002e104:	mov    r9,r8
   14002e107:	add    rax,0x8
   14002e10b:	add    r9,rdx
   14002e10e:	not    rdx
   14002e111:	xor    rdx,r9
   14002e114:	and    rdx,r11
   14002e117:	je     0x14002e101
   14002e119:	mov    rdx,QWORD PTR [rax-0x8]
   14002e11d:	test   dl,dl
   14002e11f:	je     0x14002e172
   14002e121:	test   dh,dh
   14002e123:	je     0x14002e16c
   14002e125:	shr    rdx,0x10
   14002e129:	test   dl,dl
   14002e12b:	je     0x14002e166
   14002e12d:	test   dh,dh
   14002e12f:	je     0x14002e160
   14002e131:	shr    rdx,0x10
   14002e135:	test   dl,dl
   14002e137:	je     0x14002e15a
   14002e139:	test   dh,dh
   14002e13b:	je     0x14002e154
   14002e13d:	shr    edx,0x10
   14002e140:	test   dl,dl
   14002e142:	je     0x14002e14e
   14002e144:	test   dh,dh
   14002e146:	jne    0x14002e101
   14002e148:	lea    rax,[rcx+rax*1-0x1]
   14002e14d:	ret    
   14002e14e:	lea    rax,[rcx+rax*1-0x2]
   14002e153:	ret    
   14002e154:	lea    rax,[rcx+rax*1-0x3]
   14002e159:	ret    
   14002e15a:	lea    rax,[rcx+rax*1-0x4]
   14002e15f:	ret    
   14002e160:	lea    rax,[rcx+rax*1-0x5]
   14002e165:	ret    
   14002e166:	lea    rax,[rcx+rax*1-0x6]
   14002e16b:	ret    
   14002e16c:	lea    rax,[rcx+rax*1-0x7]
   14002e171:	ret    
   14002e172:	lea    rax,[rcx+rax*1-0x8]
   14002e177:	ret    
   14002e178:	rex push rbx
   14002e17a:	sub    rsp,0x20
   14002e17e:	xor    r10d,r10d
   14002e181:	mov    r9,rcx
   14002e184:	test   rcx,rcx
   14002e187:	je     0x14002e197
   14002e189:	test   rdx,rdx
   14002e18c:	je     0x14002e197
   14002e18e:	test   r8,r8
   14002e191:	jne    0x14002e1b0
   14002e193:	mov    WORD PTR [rcx],r10w
   14002e197:	call   0x140029bf8
   14002e19c:	mov    ebx,0x16
   14002e1a1:	mov    DWORD PTR [rax],ebx
   14002e1a3:	call   0x140029b2c
   14002e1a8:	mov    eax,ebx
   14002e1aa:	add    rsp,0x20
   14002e1ae:	pop    rbx
   14002e1af:	ret    
   14002e1b0:	cmp    WORD PTR [rcx],r10w
   14002e1b4:	je     0x14002e1bf
   14002e1b6:	add    rcx,0x2
   14002e1ba:	dec    rdx
   14002e1bd:	jne    0x14002e1b0
   14002e1bf:	test   rdx,rdx
   14002e1c2:	jne    0x14002e1ca
   14002e1c4:	mov    WORD PTR [r9],r10w
   14002e1c8:	jmp    0x14002e197
   14002e1ca:	sub    rcx,r8
   14002e1cd:	movzx  eax,WORD PTR [r8]
   14002e1d1:	mov    WORD PTR [rcx+r8*1],ax
   14002e1d6:	lea    r8,[r8+0x2]
   14002e1da:	test   ax,ax
   14002e1dd:	je     0x14002e1e4
   14002e1df:	dec    rdx
   14002e1e2:	jne    0x14002e1cd
   14002e1e4:	test   rdx,rdx
   14002e1e7:	jne    0x14002e1f9
   14002e1e9:	mov    WORD PTR [r9],r10w
   14002e1ed:	call   0x140029bf8
   14002e1f2:	mov    ebx,0x22
   14002e1f7:	jmp    0x14002e1a1
   14002e1f9:	xor    eax,eax
   14002e1fb:	jmp    0x14002e1aa
   14002e1fd:	int3   
   14002e1fe:	int3   
   14002e1ff:	int3   
   14002e200:	rex push rbx
   14002e202:	sub    rsp,0x20
   14002e206:	xor    ebx,ebx
   14002e208:	test   r9,r9
   14002e20b:	jne    0x14002e21b
   14002e20d:	test   rcx,rcx
   14002e210:	jne    0x14002e220
   14002e212:	test   rdx,rdx
   14002e215:	jne    0x14002e237
   14002e217:	xor    eax,eax
   14002e219:	jmp    0x14002e24a
   14002e21b:	test   rcx,rcx
   14002e21e:	je     0x14002e237
   14002e220:	test   rdx,rdx
   14002e223:	je     0x14002e237
   14002e225:	test   r9,r9
   14002e228:	jne    0x14002e22f
   14002e22a:	mov    WORD PTR [rcx],bx
   14002e22d:	jmp    0x14002e217
   14002e22f:	test   r8,r8
   14002e232:	jne    0x14002e250
   14002e234:	mov    WORD PTR [rcx],bx
   14002e237:	call   0x140029bf8
   14002e23c:	mov    ebx,0x16
   14002e241:	mov    DWORD PTR [rax],ebx
   14002e243:	call   0x140029b2c
   14002e248:	mov    eax,ebx
   14002e24a:	add    rsp,0x20
   14002e24e:	pop    rbx
   14002e24f:	ret    
   14002e250:	mov    r11,rcx
   14002e253:	mov    r10,rdx
   14002e256:	cmp    r9,0xffffffffffffffff
   14002e25a:	jne    0x14002e278
   14002e25c:	sub    r11,r8
   14002e25f:	movzx  eax,WORD PTR [r8]
   14002e263:	mov    WORD PTR [r11+r8*1],ax
   14002e268:	lea    r8,[r8+0x2]
   14002e26c:	test   ax,ax
   14002e26f:	je     0x14002e2a0
   14002e271:	dec    r10
   14002e274:	jne    0x14002e25f
   14002e276:	jmp    0x14002e2a0
   14002e278:	sub    r8,rcx
   14002e27b:	movzx  eax,WORD PTR [r8+r11*1]
   14002e280:	mov    WORD PTR [r11],ax
   14002e284:	lea    r11,[r11+0x2]
   14002e288:	test   ax,ax
   14002e28b:	je     0x14002e297
   14002e28d:	dec    r10
   14002e290:	je     0x14002e297
   14002e292:	dec    r9
   14002e295:	jne    0x14002e27b
   14002e297:	test   r9,r9
   14002e29a:	jne    0x14002e2a0
   14002e29c:	mov    WORD PTR [r11],bx
   14002e2a0:	test   r10,r10
   14002e2a3:	jne    0x14002e217
   14002e2a9:	cmp    r9,0xffffffffffffffff
   14002e2ad:	jne    0x14002e2ba
   14002e2af:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   14002e2b4:	lea    eax,[r10+0x50]
   14002e2b8:	jmp    0x14002e24a
   14002e2ba:	mov    WORD PTR [rcx],bx
   14002e2bd:	call   0x140029bf8
   14002e2c2:	mov    ebx,0x22
   14002e2c7:	jmp    0x14002e241
   14002e2cc:	rex push rbx
   14002e2ce:	push   rbp
   14002e2cf:	push   rsi
   14002e2d0:	push   rdi
   14002e2d1:	push   r12
   14002e2d3:	push   r14
   14002e2d5:	push   r15
   14002e2d7:	sub    rsp,0x50
   14002e2db:	mov    rax,QWORD PTR [rip+0x2ada6]        # 0x140059088
   14002e2e2:	xor    rax,rsp
   14002e2e5:	mov    QWORD PTR [rsp+0x48],rax
   14002e2ea:	mov    r15,rcx
   14002e2ed:	xor    ecx,ecx
   14002e2ef:	mov    ebp,r8d
   14002e2f2:	mov    r12,rdx
   14002e2f5:	call   QWORD PTR [rip+0x130fd]        # 0x1400413f8
   14002e2fb:	xor    edi,edi
   14002e2fd:	mov    rsi,rax
   14002e300:	call   0x14002daa4
   14002e305:	cmp    QWORD PTR [rip+0x2e584],rdi        # 0x14005c890
   14002e30c:	mov    r14d,eax
   14002e30f:	jne    0x14002e408
   14002e315:	lea    rcx,[rip+0x1480c]        # 0x140042b28
   14002e31c:	xor    edx,edx
   14002e31e:	mov    r8d,0x800
   14002e324:	call   QWORD PTR [rip+0x1322e]        # 0x140041558
   14002e32a:	mov    rbx,rax
   14002e32d:	test   rax,rax
   14002e330:	jne    0x14002e35a
   14002e332:	call   QWORD PTR [rip+0x130a0]        # 0x1400413d8
   14002e338:	cmp    eax,0x57
   14002e33b:	jne    0x14002e51c
   14002e341:	lea    rcx,[rip+0x147e0]        # 0x140042b28
   14002e348:	call   QWORD PTR [rip+0x1321a]        # 0x140041568
   14002e34e:	mov    rbx,rax
   14002e351:	test   rax,rax
   14002e354:	je     0x14002e51c
   14002e35a:	lea    rdx,[rip+0x147df]        # 0x140042b40
   14002e361:	mov    rcx,rbx
   14002e364:	call   QWORD PTR [rip+0x12f7e]        # 0x1400412e8
   14002e36a:	test   rax,rax
   14002e36d:	je     0x14002e51c
   14002e373:	mov    rcx,rax
   14002e376:	call   QWORD PTR [rip+0x1307c]        # 0x1400413f8
   14002e37c:	lea    rdx,[rip+0x147cd]        # 0x140042b50
   14002e383:	mov    rcx,rbx
   14002e386:	mov    QWORD PTR [rip+0x2e503],rax        # 0x14005c890
   14002e38d:	call   QWORD PTR [rip+0x12f55]        # 0x1400412e8
   14002e393:	mov    rcx,rax
   14002e396:	call   QWORD PTR [rip+0x1305c]        # 0x1400413f8
   14002e39c:	lea    rdx,[rip+0x147bd]        # 0x140042b60
   14002e3a3:	mov    rcx,rbx
   14002e3a6:	mov    QWORD PTR [rip+0x2e4eb],rax        # 0x14005c898
   14002e3ad:	call   QWORD PTR [rip+0x12f35]        # 0x1400412e8
   14002e3b3:	mov    rcx,rax
   14002e3b6:	call   QWORD PTR [rip+0x1303c]        # 0x1400413f8
   14002e3bc:	lea    rdx,[rip+0x147b5]        # 0x140042b78
   14002e3c3:	mov    rcx,rbx
   14002e3c6:	mov    QWORD PTR [rip+0x2e4d3],rax        # 0x14005c8a0
   14002e3cd:	call   QWORD PTR [rip+0x12f15]        # 0x1400412e8
   14002e3d3:	mov    rcx,rax
   14002e3d6:	call   QWORD PTR [rip+0x1301c]        # 0x1400413f8
   14002e3dc:	mov    QWORD PTR [rip+0x2e4cd],rax        # 0x14005c8b0
   14002e3e3:	test   rax,rax
   14002e3e6:	je     0x14002e408
   14002e3e8:	lea    rdx,[rip+0x147a9]        # 0x140042b98
   14002e3ef:	mov    rcx,rbx
   14002e3f2:	call   QWORD PTR [rip+0x12ef0]        # 0x1400412e8
   14002e3f8:	mov    rcx,rax
   14002e3fb:	call   QWORD PTR [rip+0x12ff7]        # 0x1400413f8
   14002e401:	mov    QWORD PTR [rip+0x2e4a0],rax        # 0x14005c8a8
   14002e408:	call   QWORD PTR [rip+0x13002]        # 0x140041410
   14002e40e:	test   eax,eax
   14002e410:	je     0x14002e42f
   14002e412:	test   r15,r15
   14002e415:	je     0x14002e420
   14002e417:	mov    rcx,r15
   14002e41a:	call   QWORD PTR [rip+0x13140]        # 0x140041560
   14002e420:	test   r14d,r14d
   14002e423:	je     0x14002e44b
   14002e425:	mov    eax,0x4
   14002e42a:	jmp    0x14002e51e
   14002e42f:	test   r14d,r14d
   14002e432:	je     0x14002e44b
   14002e434:	mov    rcx,QWORD PTR [rip+0x2e455]        # 0x14005c890
   14002e43b:	call   QWORD PTR [rip+0x12fbf]        # 0x140041400
   14002e441:	mov    eax,0x3
   14002e446:	jmp    0x14002e51e
   14002e44b:	mov    rcx,QWORD PTR [rip+0x2e456]        # 0x14005c8a8
   14002e452:	cmp    rcx,rsi
   14002e455:	je     0x14002e4ba
   14002e457:	cmp    QWORD PTR [rip+0x2e452],rsi        # 0x14005c8b0
   14002e45e:	je     0x14002e4ba
   14002e460:	call   QWORD PTR [rip+0x12f9a]        # 0x140041400
   14002e466:	mov    rcx,QWORD PTR [rip+0x2e443]        # 0x14005c8b0
   14002e46d:	mov    rbx,rax
   14002e470:	call   QWORD PTR [rip+0x12f8a]        # 0x140041400
   14002e476:	mov    r14,rax
   14002e479:	test   rbx,rbx
   14002e47c:	je     0x14002e4ba
   14002e47e:	test   rax,rax
   14002e481:	je     0x14002e4ba
   14002e483:	call   rbx
   14002e485:	test   rax,rax
   14002e488:	je     0x14002e4b4
   14002e48a:	lea    rcx,[rsp+0x30]
   14002e48f:	mov    r9d,0xc
   14002e495:	lea    r8,[rsp+0x38]
   14002e49a:	mov    QWORD PTR [rsp+0x20],rcx
   14002e49f:	lea    edx,[r9-0xb]
   14002e4a3:	mov    rcx,rax
   14002e4a6:	call   r14
   14002e4a9:	test   eax,eax
   14002e4ab:	je     0x14002e4b4
   14002e4ad:	test   BYTE PTR [rsp+0x40],0x1
   14002e4b2:	jne    0x14002e4ba
   14002e4b4:	bts    ebp,0x15
   14002e4b8:	jmp    0x14002e4fa
   14002e4ba:	mov    rcx,QWORD PTR [rip+0x2e3d7]        # 0x14005c898
   14002e4c1:	cmp    rcx,rsi
   14002e4c4:	je     0x14002e4fa
   14002e4c6:	call   QWORD PTR [rip+0x12f34]        # 0x140041400
   14002e4cc:	test   rax,rax
   14002e4cf:	je     0x14002e4fa
   14002e4d1:	call   rax
   14002e4d3:	mov    rdi,rax
   14002e4d6:	test   rax,rax
   14002e4d9:	je     0x14002e4fa
   14002e4db:	mov    rcx,QWORD PTR [rip+0x2e3be]        # 0x14005c8a0
   14002e4e2:	cmp    rcx,rsi
   14002e4e5:	je     0x14002e4fa
   14002e4e7:	call   QWORD PTR [rip+0x12f13]        # 0x140041400
   14002e4ed:	test   rax,rax
   14002e4f0:	je     0x14002e4fa
   14002e4f2:	mov    rcx,rdi
   14002e4f5:	call   rax
   14002e4f7:	mov    rdi,rax
   14002e4fa:	mov    rcx,QWORD PTR [rip+0x2e38f]        # 0x14005c890
   14002e501:	call   QWORD PTR [rip+0x12ef9]        # 0x140041400
   14002e507:	test   rax,rax
   14002e50a:	je     0x14002e51c
   14002e50c:	mov    r9d,ebp
   14002e50f:	mov    r8,r12
   14002e512:	mov    rdx,r15
   14002e515:	mov    rcx,rdi
   14002e518:	call   rax
   14002e51a:	jmp    0x14002e51e
   14002e51c:	xor    eax,eax
   14002e51e:	mov    rcx,QWORD PTR [rsp+0x48]
   14002e523:	xor    rcx,rsp
   14002e526:	call   0x1400265a0
   14002e52b:	add    rsp,0x50
   14002e52f:	pop    r15
   14002e531:	pop    r14
   14002e533:	pop    r12
   14002e535:	pop    rdi
   14002e536:	pop    rsi
   14002e537:	pop    rbp
   14002e538:	pop    rbx
   14002e539:	ret    
   14002e53a:	int3   
   14002e53b:	int3   
   14002e53c:	sub    rsp,0x28
   14002e540:	mov    r8,QWORD PTR [r9+0x38]
   14002e544:	mov    rcx,rdx
   14002e547:	mov    rdx,r9
   14002e54a:	call   0x14002e55c
   14002e54f:	mov    eax,0x1
   14002e554:	add    rsp,0x28
   14002e558:	ret    
   14002e559:	int3   
   14002e55a:	int3   
   14002e55b:	int3   
   14002e55c:	rex push rbx
   14002e55e:	sub    rsp,0x20
   14002e562:	mov    r11d,DWORD PTR [r8]
   14002e565:	mov    rbx,rdx
   14002e568:	mov    r9,rcx
   14002e56b:	and    r11d,0xfffffff8
   14002e56f:	test   BYTE PTR [r8],0x4
   14002e573:	mov    r10,rcx
   14002e576:	je     0x14002e58b
   14002e578:	mov    eax,DWORD PTR [r8+0x8]
   14002e57c:	movsxd r10,DWORD PTR [r8+0x4]
   14002e580:	neg    eax
   14002e582:	add    r10,rcx
   14002e585:	movsxd rcx,eax
   14002e588:	and    r10,rcx
   14002e58b:	movsxd rax,r11d
   14002e58e:	mov    rdx,QWORD PTR [rax+r10*1]
   14002e592:	mov    rax,QWORD PTR [rbx+0x10]
   14002e596:	mov    ecx,DWORD PTR [rax+0x8]
   14002e599:	add    rcx,QWORD PTR [rbx+0x8]
   14002e59d:	test   BYTE PTR [rcx+0x3],0xf
   14002e5a1:	je     0x14002e5af
   14002e5a3:	movzx  eax,BYTE PTR [rcx+0x3]
   14002e5a7:	and    eax,0xfffffff0
   14002e5aa:	cdqe   
   14002e5ac:	add    r9,rax
   14002e5af:	xor    r9,rdx
   14002e5b2:	mov    rcx,r9
   14002e5b5:	add    rsp,0x20
   14002e5b9:	pop    rbx
   14002e5ba:	jmp    0x1400265a0
   14002e5bf:	int3   
   14002e5c0:	int3   
   14002e5c1:	int3   
   14002e5c2:	int3   
   14002e5c3:	int3   
   14002e5c4:	int3   
   14002e5c5:	int3   
   14002e5c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002e5d0:	sub    rsp,0x4d8
   14002e5d7:	xor    r8,r8
   14002e5da:	xor    r9,r9
   14002e5dd:	mov    QWORD PTR [rsp+0x20],rsp
   14002e5e2:	mov    QWORD PTR [rsp+0x28],r8
   14002e5e7:	call   0x140032662
   14002e5ec:	add    rsp,0x4d8
   14002e5f3:	ret    
   14002e5f4:	int3   
   14002e5f5:	int3   
   14002e5f6:	int3   
   14002e5f7:	int3   
   14002e5f8:	int3   
   14002e5f9:	int3   
   14002e5fa:	nop    WORD PTR [rax+rax*1+0x0]
   14002e600:	mov    QWORD PTR [rsp+0x8],rcx
   14002e605:	mov    QWORD PTR [rsp+0x18],rdx
   14002e60a:	mov    DWORD PTR [rsp+0x10],r8d
   14002e60f:	mov    r9,0x19930520
   14002e616:	jmp    0x14002e620
   14002e618:	int3   
   14002e619:	int3   
   14002e61a:	int3   
   14002e61b:	int3   
   14002e61c:	int3   
   14002e61d:	int3   
   14002e61e:	xchg   ax,ax
   14002e620:	ret    
   14002e621:	int3   
   14002e622:	int3   
   14002e623:	int3   
   14002e624:	int3   
   14002e625:	int3   
   14002e626:	int3   
   14002e627:	nop    WORD PTR [rax+rax*1+0x0]
   14002e630:	ret    
   14002e631:	int3   
   14002e632:	int3   
   14002e633:	int3   
   14002e634:	rex push rbx
   14002e636:	sub    rsp,0x20
   14002e63a:	xor    ebx,ebx
   14002e63c:	test   r9,r9
   14002e63f:	jne    0x14002e64f
   14002e641:	test   rcx,rcx
   14002e644:	jne    0x14002e654
   14002e646:	test   rdx,rdx
   14002e649:	jne    0x14002e669
   14002e64b:	xor    eax,eax
   14002e64d:	jmp    0x14002e67c
   14002e64f:	test   rcx,rcx
   14002e652:	je     0x14002e669
   14002e654:	test   rdx,rdx
   14002e657:	je     0x14002e669
   14002e659:	test   r9,r9
   14002e65c:	jne    0x14002e662
   14002e65e:	mov    BYTE PTR [rcx],bl
   14002e660:	jmp    0x14002e64b
   14002e662:	test   r8,r8
   14002e665:	jne    0x14002e682
   14002e667:	mov    BYTE PTR [rcx],bl
   14002e669:	call   0x140029bf8
   14002e66e:	mov    ebx,0x16
   14002e673:	mov    DWORD PTR [rax],ebx
   14002e675:	call   0x140029b2c
   14002e67a:	mov    eax,ebx
   14002e67c:	add    rsp,0x20
   14002e680:	pop    rbx
   14002e681:	ret    
   14002e682:	mov    r11,rcx
   14002e685:	mov    r10,rdx
   14002e688:	cmp    r9,0xffffffffffffffff
   14002e68c:	jne    0x14002e6a6
   14002e68e:	sub    r11,r8
   14002e691:	mov    al,BYTE PTR [r8]
   14002e694:	mov    BYTE PTR [r11+r8*1],al
   14002e698:	inc    r8
   14002e69b:	test   al,al
   14002e69d:	je     0x14002e6c9
   14002e69f:	dec    r10
   14002e6a2:	jne    0x14002e691
   14002e6a4:	jmp    0x14002e6c9
   14002e6a6:	sub    r8,rcx
   14002e6a9:	mov    al,BYTE PTR [r8+r11*1]
   14002e6ad:	mov    BYTE PTR [r11],al
   14002e6b0:	inc    r11
   14002e6b3:	test   al,al
   14002e6b5:	je     0x14002e6c1
   14002e6b7:	dec    r10
   14002e6ba:	je     0x14002e6c1
   14002e6bc:	dec    r9
   14002e6bf:	jne    0x14002e6a9
   14002e6c1:	test   r9,r9
   14002e6c4:	jne    0x14002e6c9
   14002e6c6:	mov    BYTE PTR [r11],bl
   14002e6c9:	test   r10,r10
   14002e6cc:	jne    0x14002e64b
   14002e6d2:	cmp    r9,0xffffffffffffffff
   14002e6d6:	jne    0x14002e6e2
   14002e6d8:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   14002e6dc:	lea    eax,[r10+0x50]
   14002e6e0:	jmp    0x14002e67c
   14002e6e2:	mov    BYTE PTR [rcx],bl
   14002e6e4:	call   0x140029bf8
   14002e6e9:	mov    ebx,0x22
   14002e6ee:	jmp    0x14002e673
   14002e6f0:	mov    r11,rsp
   14002e6f3:	sub    rsp,0x58
   14002e6f7:	xor    eax,eax
   14002e6f9:	mov    QWORD PTR [r11-0x18],rax
   14002e6fd:	mov    QWORD PTR [r11-0x20],rax
   14002e701:	mov    QWORD PTR [r11-0x28],rax
   14002e705:	mov    eax,DWORD PTR [rsp+0x88]
   14002e70c:	mov    DWORD PTR [rsp+0x28],eax
   14002e710:	mov    rax,QWORD PTR [rsp+0x80]
   14002e718:	mov    QWORD PTR [r11-0x38],rax
   14002e71c:	call   QWORD PTR [rip+0x12e4e]        # 0x140041570
   14002e722:	add    rsp,0x58
   14002e726:	ret    
   14002e727:	int3   
   14002e728:	rex push rbx
   14002e72a:	sub    rsp,0x20
   14002e72e:	test   rcx,rcx
   14002e731:	je     0x14002e740
   14002e733:	test   rdx,rdx
   14002e736:	je     0x14002e740
   14002e738:	test   r8,r8
   14002e73b:	jne    0x14002e759
   14002e73d:	mov    BYTE PTR [rcx],r8b
   14002e740:	call   0x140029bf8
   14002e745:	mov    ebx,0x16
   14002e74a:	mov    DWORD PTR [rax],ebx
   14002e74c:	call   0x140029b2c
   14002e751:	mov    eax,ebx
   14002e753:	add    rsp,0x20
   14002e757:	pop    rbx
   14002e758:	ret    
   14002e759:	mov    r9,rcx
   14002e75c:	sub    r9,r8
   14002e75f:	mov    al,BYTE PTR [r8]
   14002e762:	mov    BYTE PTR [r9+r8*1],al
   14002e766:	inc    r8
   14002e769:	test   al,al
   14002e76b:	je     0x14002e772
   14002e76d:	dec    rdx
   14002e770:	jne    0x14002e75f
   14002e772:	test   rdx,rdx
   14002e775:	jne    0x14002e785
   14002e777:	mov    BYTE PTR [rcx],dl
   14002e779:	call   0x140029bf8
   14002e77e:	mov    ebx,0x22
   14002e783:	jmp    0x14002e74a
   14002e785:	xor    eax,eax
   14002e787:	jmp    0x14002e753
   14002e789:	int3   
   14002e78a:	int3   
   14002e78b:	int3   
   14002e78c:	test   rcx,rcx
   14002e78f:	je     0x14002e895
   14002e795:	push   rbx
   14002e796:	sub    rsp,0x20
   14002e79a:	mov    rbx,rcx
   14002e79d:	mov    rcx,QWORD PTR [rcx+0x18]
   14002e7a1:	cmp    rcx,QWORD PTR [rip+0x2ba90]        # 0x14005a238
   14002e7a8:	je     0x14002e7af
   14002e7aa:	call   0x1400273dc
   14002e7af:	mov    rcx,QWORD PTR [rbx+0x20]
   14002e7b3:	cmp    rcx,QWORD PTR [rip+0x2ba86]        # 0x14005a240
   14002e7ba:	je     0x14002e7c1
   14002e7bc:	call   0x1400273dc
   14002e7c1:	mov    rcx,QWORD PTR [rbx+0x28]
   14002e7c5:	cmp    rcx,QWORD PTR [rip+0x2ba7c]        # 0x14005a248
   14002e7cc:	je     0x14002e7d3
   14002e7ce:	call   0x1400273dc
   14002e7d3:	mov    rcx,QWORD PTR [rbx+0x30]
   14002e7d7:	cmp    rcx,QWORD PTR [rip+0x2ba72]        # 0x14005a250
   14002e7de:	je     0x14002e7e5
   14002e7e0:	call   0x1400273dc
   14002e7e5:	mov    rcx,QWORD PTR [rbx+0x38]
   14002e7e9:	cmp    rcx,QWORD PTR [rip+0x2ba68]        # 0x14005a258
   14002e7f0:	je     0x14002e7f7
   14002e7f2:	call   0x1400273dc
   14002e7f7:	mov    rcx,QWORD PTR [rbx+0x40]
   14002e7fb:	cmp    rcx,QWORD PTR [rip+0x2ba5e]        # 0x14005a260
   14002e802:	je     0x14002e809
   14002e804:	call   0x1400273dc
   14002e809:	mov    rcx,QWORD PTR [rbx+0x48]
   14002e80d:	cmp    rcx,QWORD PTR [rip+0x2ba54]        # 0x14005a268
   14002e814:	je     0x14002e81b
   14002e816:	call   0x1400273dc
   14002e81b:	mov    rcx,QWORD PTR [rbx+0x68]
   14002e81f:	cmp    rcx,QWORD PTR [rip+0x2ba62]        # 0x14005a288
   14002e826:	je     0x14002e82d
   14002e828:	call   0x1400273dc
   14002e82d:	mov    rcx,QWORD PTR [rbx+0x70]
   14002e831:	cmp    rcx,QWORD PTR [rip+0x2ba58]        # 0x14005a290
   14002e838:	je     0x14002e83f
   14002e83a:	call   0x1400273dc
   14002e83f:	mov    rcx,QWORD PTR [rbx+0x78]
   14002e843:	cmp    rcx,QWORD PTR [rip+0x2ba4e]        # 0x14005a298
   14002e84a:	je     0x14002e851
   14002e84c:	call   0x1400273dc
   14002e851:	mov    rcx,QWORD PTR [rbx+0x80]
   14002e858:	cmp    rcx,QWORD PTR [rip+0x2ba41]        # 0x14005a2a0
   14002e85f:	je     0x14002e866
   14002e861:	call   0x1400273dc
   14002e866:	mov    rcx,QWORD PTR [rbx+0x88]
   14002e86d:	cmp    rcx,QWORD PTR [rip+0x2ba34]        # 0x14005a2a8
   14002e874:	je     0x14002e87b
   14002e876:	call   0x1400273dc
   14002e87b:	mov    rcx,QWORD PTR [rbx+0x90]
   14002e882:	cmp    rcx,QWORD PTR [rip+0x2ba27]        # 0x14005a2b0
   14002e889:	je     0x14002e890
   14002e88b:	call   0x1400273dc
   14002e890:	add    rsp,0x20
   14002e894:	pop    rbx
   14002e895:	ret    
   14002e896:	int3   
   14002e897:	int3   
   14002e898:	test   rcx,rcx
   14002e89b:	je     0x14002e903
   14002e89d:	push   rbx
   14002e89e:	sub    rsp,0x20
   14002e8a2:	mov    rbx,rcx
   14002e8a5:	mov    rcx,QWORD PTR [rcx]
   14002e8a8:	cmp    rcx,QWORD PTR [rip+0x2b971]        # 0x14005a220
   14002e8af:	je     0x14002e8b6
   14002e8b1:	call   0x1400273dc
   14002e8b6:	mov    rcx,QWORD PTR [rbx+0x8]
   14002e8ba:	cmp    rcx,QWORD PTR [rip+0x2b967]        # 0x14005a228
   14002e8c1:	je     0x14002e8c8
   14002e8c3:	call   0x1400273dc
   14002e8c8:	mov    rcx,QWORD PTR [rbx+0x10]
   14002e8cc:	cmp    rcx,QWORD PTR [rip+0x2b95d]        # 0x14005a230
   14002e8d3:	je     0x14002e8da
   14002e8d5:	call   0x1400273dc
   14002e8da:	mov    rcx,QWORD PTR [rbx+0x58]
   14002e8de:	cmp    rcx,QWORD PTR [rip+0x2b993]        # 0x14005a278
   14002e8e5:	je     0x14002e8ec
   14002e8e7:	call   0x1400273dc
   14002e8ec:	mov    rcx,QWORD PTR [rbx+0x60]
   14002e8f0:	cmp    rcx,QWORD PTR [rip+0x2b989]        # 0x14005a280
   14002e8f7:	je     0x14002e8fe
   14002e8f9:	call   0x1400273dc
   14002e8fe:	add    rsp,0x20
   14002e902:	pop    rbx
   14002e903:	ret    
   14002e904:	test   rcx,rcx
   14002e907:	je     0x14002ecfd
   14002e90d:	push   rbx
   14002e90e:	sub    rsp,0x20
   14002e912:	mov    rbx,rcx
   14002e915:	mov    rcx,QWORD PTR [rcx+0x8]
   14002e919:	call   0x1400273dc
   14002e91e:	mov    rcx,QWORD PTR [rbx+0x10]
   14002e922:	call   0x1400273dc
   14002e927:	mov    rcx,QWORD PTR [rbx+0x18]
   14002e92b:	call   0x1400273dc
   14002e930:	mov    rcx,QWORD PTR [rbx+0x20]
   14002e934:	call   0x1400273dc
   14002e939:	mov    rcx,QWORD PTR [rbx+0x28]
   14002e93d:	call   0x1400273dc
   14002e942:	mov    rcx,QWORD PTR [rbx+0x30]
   14002e946:	call   0x1400273dc
   14002e94b:	mov    rcx,QWORD PTR [rbx]
   14002e94e:	call   0x1400273dc
   14002e953:	mov    rcx,QWORD PTR [rbx+0x40]
   14002e957:	call   0x1400273dc
   14002e95c:	mov    rcx,QWORD PTR [rbx+0x48]
   14002e960:	call   0x1400273dc
   14002e965:	mov    rcx,QWORD PTR [rbx+0x50]
   14002e969:	call   0x1400273dc
   14002e96e:	mov    rcx,QWORD PTR [rbx+0x58]
   14002e972:	call   0x1400273dc
   14002e977:	mov    rcx,QWORD PTR [rbx+0x60]
   14002e97b:	call   0x1400273dc
   14002e980:	mov    rcx,QWORD PTR [rbx+0x68]
   14002e984:	call   0x1400273dc
   14002e989:	mov    rcx,QWORD PTR [rbx+0x38]
   14002e98d:	call   0x1400273dc
   14002e992:	mov    rcx,QWORD PTR [rbx+0x70]
   14002e996:	call   0x1400273dc
   14002e99b:	mov    rcx,QWORD PTR [rbx+0x78]
   14002e99f:	call   0x1400273dc
   14002e9a4:	mov    rcx,QWORD PTR [rbx+0x80]
   14002e9ab:	call   0x1400273dc
   14002e9b0:	mov    rcx,QWORD PTR [rbx+0x88]
   14002e9b7:	call   0x1400273dc
   14002e9bc:	mov    rcx,QWORD PTR [rbx+0x90]
   14002e9c3:	call   0x1400273dc
   14002e9c8:	mov    rcx,QWORD PTR [rbx+0x98]
   14002e9cf:	call   0x1400273dc
   14002e9d4:	mov    rcx,QWORD PTR [rbx+0xa0]
   14002e9db:	call   0x1400273dc
   14002e9e0:	mov    rcx,QWORD PTR [rbx+0xa8]
   14002e9e7:	call   0x1400273dc
   14002e9ec:	mov    rcx,QWORD PTR [rbx+0xb0]
   14002e9f3:	call   0x1400273dc
   14002e9f8:	mov    rcx,QWORD PTR [rbx+0xb8]
   14002e9ff:	call   0x1400273dc
   14002ea04:	mov    rcx,QWORD PTR [rbx+0xc0]
   14002ea0b:	call   0x1400273dc
   14002ea10:	mov    rcx,QWORD PTR [rbx+0xc8]
   14002ea17:	call   0x1400273dc
   14002ea1c:	mov    rcx,QWORD PTR [rbx+0xd0]
   14002ea23:	call   0x1400273dc
   14002ea28:	mov    rcx,QWORD PTR [rbx+0xd8]
   14002ea2f:	call   0x1400273dc
   14002ea34:	mov    rcx,QWORD PTR [rbx+0xe0]
   14002ea3b:	call   0x1400273dc
   14002ea40:	mov    rcx,QWORD PTR [rbx+0xe8]
   14002ea47:	call   0x1400273dc
   14002ea4c:	mov    rcx,QWORD PTR [rbx+0xf0]
   14002ea53:	call   0x1400273dc
   14002ea58:	mov    rcx,QWORD PTR [rbx+0xf8]
   14002ea5f:	call   0x1400273dc
   14002ea64:	mov    rcx,QWORD PTR [rbx+0x100]
   14002ea6b:	call   0x1400273dc
   14002ea70:	mov    rcx,QWORD PTR [rbx+0x108]
   14002ea77:	call   0x1400273dc
   14002ea7c:	mov    rcx,QWORD PTR [rbx+0x110]
   14002ea83:	call   0x1400273dc
   14002ea88:	mov    rcx,QWORD PTR [rbx+0x118]
   14002ea8f:	call   0x1400273dc
   14002ea94:	mov    rcx,QWORD PTR [rbx+0x120]
   14002ea9b:	call   0x1400273dc
   14002eaa0:	mov    rcx,QWORD PTR [rbx+0x128]
   14002eaa7:	call   0x1400273dc
   14002eaac:	mov    rcx,QWORD PTR [rbx+0x130]
   14002eab3:	call   0x1400273dc
   14002eab8:	mov    rcx,QWORD PTR [rbx+0x138]
   14002eabf:	call   0x1400273dc
   14002eac4:	mov    rcx,QWORD PTR [rbx+0x140]
   14002eacb:	call   0x1400273dc
   14002ead0:	mov    rcx,QWORD PTR [rbx+0x148]
   14002ead7:	call   0x1400273dc
   14002eadc:	mov    rcx,QWORD PTR [rbx+0x150]
   14002eae3:	call   0x1400273dc
   14002eae8:	mov    rcx,QWORD PTR [rbx+0x168]
   14002eaef:	call   0x1400273dc
   14002eaf4:	mov    rcx,QWORD PTR [rbx+0x170]
   14002eafb:	call   0x1400273dc
   14002eb00:	mov    rcx,QWORD PTR [rbx+0x178]
   14002eb07:	call   0x1400273dc
   14002eb0c:	mov    rcx,QWORD PTR [rbx+0x180]
   14002eb13:	call   0x1400273dc
   14002eb18:	mov    rcx,QWORD PTR [rbx+0x188]
   14002eb1f:	call   0x1400273dc
   14002eb24:	mov    rcx,QWORD PTR [rbx+0x190]
   14002eb2b:	call   0x1400273dc
   14002eb30:	mov    rcx,QWORD PTR [rbx+0x160]
   14002eb37:	call   0x1400273dc
   14002eb3c:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14002eb43:	call   0x1400273dc
   14002eb48:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14002eb4f:	call   0x1400273dc
   14002eb54:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14002eb5b:	call   0x1400273dc
   14002eb60:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14002eb67:	call   0x1400273dc
   14002eb6c:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14002eb73:	call   0x1400273dc
   14002eb78:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14002eb7f:	call   0x1400273dc
   14002eb84:	mov    rcx,QWORD PTR [rbx+0x198]
   14002eb8b:	call   0x1400273dc
   14002eb90:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14002eb97:	call   0x1400273dc
   14002eb9c:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14002eba3:	call   0x1400273dc
   14002eba8:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14002ebaf:	call   0x1400273dc
   14002ebb4:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14002ebbb:	call   0x1400273dc
   14002ebc0:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14002ebc7:	call   0x1400273dc
   14002ebcc:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14002ebd3:	call   0x1400273dc
   14002ebd8:	mov    rcx,QWORD PTR [rbx+0x200]
   14002ebdf:	call   0x1400273dc
   14002ebe4:	mov    rcx,QWORD PTR [rbx+0x208]
   14002ebeb:	call   0x1400273dc
   14002ebf0:	mov    rcx,QWORD PTR [rbx+0x210]
   14002ebf7:	call   0x1400273dc
   14002ebfc:	mov    rcx,QWORD PTR [rbx+0x218]
   14002ec03:	call   0x1400273dc
   14002ec08:	mov    rcx,QWORD PTR [rbx+0x220]
   14002ec0f:	call   0x1400273dc
   14002ec14:	mov    rcx,QWORD PTR [rbx+0x228]
   14002ec1b:	call   0x1400273dc
   14002ec20:	mov    rcx,QWORD PTR [rbx+0x230]
   14002ec27:	call   0x1400273dc
   14002ec2c:	mov    rcx,QWORD PTR [rbx+0x238]
   14002ec33:	call   0x1400273dc
   14002ec38:	mov    rcx,QWORD PTR [rbx+0x240]
   14002ec3f:	call   0x1400273dc
   14002ec44:	mov    rcx,QWORD PTR [rbx+0x248]
   14002ec4b:	call   0x1400273dc
   14002ec50:	mov    rcx,QWORD PTR [rbx+0x250]
   14002ec57:	call   0x1400273dc
   14002ec5c:	mov    rcx,QWORD PTR [rbx+0x258]
   14002ec63:	call   0x1400273dc
   14002ec68:	mov    rcx,QWORD PTR [rbx+0x260]
   14002ec6f:	call   0x1400273dc
   14002ec74:	mov    rcx,QWORD PTR [rbx+0x268]
   14002ec7b:	call   0x1400273dc
   14002ec80:	mov    rcx,QWORD PTR [rbx+0x270]
   14002ec87:	call   0x1400273dc
   14002ec8c:	mov    rcx,QWORD PTR [rbx+0x278]
   14002ec93:	call   0x1400273dc
   14002ec98:	mov    rcx,QWORD PTR [rbx+0x280]
   14002ec9f:	call   0x1400273dc
   14002eca4:	mov    rcx,QWORD PTR [rbx+0x288]
   14002ecab:	call   0x1400273dc
   14002ecb0:	mov    rcx,QWORD PTR [rbx+0x290]
   14002ecb7:	call   0x1400273dc
   14002ecbc:	mov    rcx,QWORD PTR [rbx+0x298]
   14002ecc3:	call   0x1400273dc
   14002ecc8:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14002eccf:	call   0x1400273dc
   14002ecd4:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14002ecdb:	call   0x1400273dc
   14002ece0:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14002ece7:	call   0x1400273dc
   14002ecec:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14002ecf3:	call   0x1400273dc
   14002ecf8:	add    rsp,0x20
   14002ecfc:	pop    rbx
   14002ecfd:	ret    
   14002ecfe:	int3   
   14002ecff:	int3   
   14002ed00:	rex push rbp
   14002ed02:	push   r12
   14002ed04:	push   r13
   14002ed06:	push   r14
   14002ed08:	push   r15
   14002ed0a:	sub    rsp,0x50
   14002ed0e:	lea    rbp,[rsp+0x40]
   14002ed13:	mov    QWORD PTR [rbp+0x40],rbx
   14002ed17:	mov    QWORD PTR [rbp+0x48],rsi
   14002ed1b:	mov    QWORD PTR [rbp+0x50],rdi
   14002ed1f:	mov    rax,QWORD PTR [rip+0x2a362]        # 0x140059088
   14002ed26:	xor    rax,rbp
   14002ed29:	mov    QWORD PTR [rbp+0x8],rax
   14002ed2d:	mov    ebx,DWORD PTR [rbp+0x60]
   14002ed30:	xor    edi,edi
   14002ed32:	mov    r12,r9
   14002ed35:	mov    r13d,r8d
   14002ed38:	mov    QWORD PTR [rbp+0x0],rdx
   14002ed3c:	test   ebx,ebx
   14002ed3e:	jle    0x14002ed6a
   14002ed40:	mov    r10d,ebx
   14002ed43:	mov    rax,r9
   14002ed46:	dec    r10d
   14002ed49:	cmp    BYTE PTR [rax],dil
   14002ed4c:	je     0x14002ed5a
   14002ed4e:	inc    rax
   14002ed51:	test   r10d,r10d
   14002ed54:	jne    0x14002ed46
   14002ed56:	or     r10d,0xffffffff
   14002ed5a:	mov    eax,ebx
   14002ed5c:	sub    eax,r10d
   14002ed5f:	dec    eax
   14002ed61:	cmp    eax,ebx
   14002ed63:	lea    ebx,[rax+0x1]
   14002ed66:	jl     0x14002ed6a
   14002ed68:	mov    ebx,eax
   14002ed6a:	mov    r14d,DWORD PTR [rbp+0x78]
   14002ed6e:	mov    esi,edi
   14002ed70:	test   r14d,r14d
   14002ed73:	jne    0x14002ed7c
   14002ed75:	mov    rax,QWORD PTR [rcx]
   14002ed78:	mov    r14d,DWORD PTR [rax+0x4]
   14002ed7c:	neg    DWORD PTR [rbp+0x80]
   14002ed82:	mov    r9d,ebx
   14002ed85:	mov    r8,r12
   14002ed88:	sbb    edx,edx
   14002ed8a:	mov    ecx,r14d
   14002ed8d:	mov    DWORD PTR [rsp+0x28],edi
   14002ed91:	and    edx,0x8
   14002ed94:	mov    QWORD PTR [rsp+0x20],rdi
   14002ed99:	inc    edx
   14002ed9b:	call   QWORD PTR [rip+0x12587]        # 0x140041328
   14002eda1:	movsxd r15,eax
   14002eda4:	test   eax,eax
   14002eda6:	jne    0x14002edaf
   14002eda8:	xor    eax,eax
   14002edaa:	jmp    0x14002efa8
   14002edaf:	movabs r8,0xffffffffffffff0
   14002edb9:	test   eax,eax
   14002edbb:	jle    0x14002ee1e
   14002edbd:	xor    edx,edx
   14002edbf:	lea    rax,[rdx-0x20]
   14002edc3:	div    r15
   14002edc6:	cmp    rax,0x2
   14002edca:	jb     0x14002ee1e
   14002edcc:	lea    rcx,[r15*2+0x10]
   14002edd4:	cmp    rcx,0x400
   14002eddb:	ja     0x14002ee07
   14002eddd:	lea    rax,[rcx+0xf]
   14002ede1:	cmp    rax,rcx
   14002ede4:	ja     0x14002ede9
   14002ede6:	mov    rax,r8
   14002ede9:	and    rax,0xfffffffffffffff0
   14002eded:	call   0x1400311e0
   14002edf2:	sub    rsp,rax
   14002edf5:	lea    rdi,[rsp+0x40]
   14002edfa:	test   rdi,rdi
   14002edfd:	je     0x14002eda8
   14002edff:	mov    DWORD PTR [rdi],0xcccc
   14002ee05:	jmp    0x14002ee1a
   14002ee07:	call   0x140029d54
   14002ee0c:	mov    rdi,rax
   14002ee0f:	test   rax,rax
   14002ee12:	je     0x14002ee1e
   14002ee14:	mov    DWORD PTR [rax],0xdddd
   14002ee1a:	add    rdi,0x10
   14002ee1e:	test   rdi,rdi
   14002ee21:	je     0x14002eda8
   14002ee23:	mov    r9d,ebx
   14002ee26:	mov    r8,r12
   14002ee29:	mov    edx,0x1
   14002ee2e:	mov    ecx,r14d
   14002ee31:	mov    DWORD PTR [rsp+0x28],r15d
   14002ee36:	mov    QWORD PTR [rsp+0x20],rdi
   14002ee3b:	call   QWORD PTR [rip+0x124e7]        # 0x140041328
   14002ee41:	test   eax,eax
   14002ee43:	je     0x14002ef95
   14002ee49:	mov    r12,QWORD PTR [rbp+0x0]
   14002ee4d:	and    DWORD PTR [rsp+0x28],esi
   14002ee51:	and    QWORD PTR [rsp+0x20],rsi
   14002ee56:	mov    rcx,r12
   14002ee59:	mov    r9d,r15d
   14002ee5c:	mov    r8,rdi
   14002ee5f:	mov    edx,r13d
   14002ee62:	call   0x14002e6f0
   14002ee67:	movsxd rsi,eax
   14002ee6a:	test   eax,eax
   14002ee6c:	je     0x14002ef95
   14002ee72:	mov    r8d,0x400
   14002ee78:	test   r8d,r13d
   14002ee7b:	je     0x14002eeb3
   14002ee7d:	mov    ecx,DWORD PTR [rbp+0x70]
   14002ee80:	test   ecx,ecx
   14002ee82:	je     0x14002ef95
   14002ee88:	cmp    esi,ecx
   14002ee8a:	jg     0x14002ef95
   14002ee90:	mov    rax,QWORD PTR [rbp+0x68]
   14002ee94:	mov    DWORD PTR [rsp+0x28],ecx
   14002ee98:	mov    r9d,r15d
   14002ee9b:	mov    r8,rdi
   14002ee9e:	mov    edx,r13d
   14002eea1:	mov    rcx,r12
   14002eea4:	mov    QWORD PTR [rsp+0x20],rax
   14002eea9:	call   0x14002e6f0
   14002eeae:	jmp    0x14002ef95
   14002eeb3:	test   eax,eax
   14002eeb5:	jle    0x14002ef21
   14002eeb7:	xor    edx,edx
   14002eeb9:	lea    rax,[rdx-0x20]
   14002eebd:	div    rsi
   14002eec0:	cmp    rax,0x2
   14002eec4:	jb     0x14002ef21
   14002eec6:	lea    rcx,[rsi*2+0x10]
   14002eece:	cmp    rcx,r8
   14002eed1:	ja     0x14002ef08
   14002eed3:	lea    rax,[rcx+0xf]
   14002eed7:	cmp    rax,rcx
   14002eeda:	ja     0x14002eee6
   14002eedc:	movabs rax,0xffffffffffffff0
   14002eee6:	and    rax,0xfffffffffffffff0
   14002eeea:	call   0x1400311e0
   14002eeef:	sub    rsp,rax
   14002eef2:	lea    rbx,[rsp+0x40]
   14002eef7:	test   rbx,rbx
   14002eefa:	je     0x14002ef95
   14002ef00:	mov    DWORD PTR [rbx],0xcccc
   14002ef06:	jmp    0x14002ef1b
   14002ef08:	call   0x140029d54
   14002ef0d:	mov    rbx,rax
   14002ef10:	test   rax,rax
   14002ef13:	je     0x14002ef23
   14002ef15:	mov    DWORD PTR [rax],0xdddd
   14002ef1b:	add    rbx,0x10
   14002ef1f:	jmp    0x14002ef23
   14002ef21:	xor    ebx,ebx
   14002ef23:	test   rbx,rbx
   14002ef26:	je     0x14002ef95
   14002ef28:	mov    r9d,r15d
   14002ef2b:	mov    r8,rdi
   14002ef2e:	mov    edx,r13d
   14002ef31:	mov    rcx,r12
   14002ef34:	mov    DWORD PTR [rsp+0x28],esi
   14002ef38:	mov    QWORD PTR [rsp+0x20],rbx
   14002ef3d:	call   0x14002e6f0
   14002ef42:	xor    ecx,ecx
   14002ef44:	test   eax,eax
   14002ef46:	je     0x14002ef84
   14002ef48:	mov    eax,DWORD PTR [rbp+0x70]
   14002ef4b:	xor    edx,edx
   14002ef4d:	mov    QWORD PTR [rsp+0x38],rcx
   14002ef52:	mov    r9d,esi
   14002ef55:	mov    r8,rbx
   14002ef58:	mov    QWORD PTR [rsp+0x30],rcx
   14002ef5d:	test   eax,eax
   14002ef5f:	jne    0x14002ef6c
   14002ef61:	mov    DWORD PTR [rsp+0x28],ecx
   14002ef65:	mov    QWORD PTR [rsp+0x20],rcx
   14002ef6a:	jmp    0x14002ef79
   14002ef6c:	mov    DWORD PTR [rsp+0x28],eax
   14002ef70:	mov    rax,QWORD PTR [rbp+0x68]
   14002ef74:	mov    QWORD PTR [rsp+0x20],rax
   14002ef79:	mov    ecx,r14d
   14002ef7c:	call   QWORD PTR [rip+0x123ce]        # 0x140041350
   14002ef82:	mov    esi,eax
   14002ef84:	lea    rcx,[rbx-0x10]
   14002ef88:	cmp    DWORD PTR [rcx],0xdddd
   14002ef8e:	jne    0x14002ef95
   14002ef90:	call   0x1400273dc
   14002ef95:	lea    rcx,[rdi-0x10]
   14002ef99:	cmp    DWORD PTR [rcx],0xdddd
   14002ef9f:	jne    0x14002efa6
   14002efa1:	call   0x1400273dc
   14002efa6:	mov    eax,esi
   14002efa8:	mov    rcx,QWORD PTR [rbp+0x8]
   14002efac:	xor    rcx,rbp
   14002efaf:	call   0x1400265a0
   14002efb4:	mov    rbx,QWORD PTR [rbp+0x40]
   14002efb8:	mov    rsi,QWORD PTR [rbp+0x48]
   14002efbc:	mov    rdi,QWORD PTR [rbp+0x50]
   14002efc0:	lea    rsp,[rbp+0x10]
   14002efc4:	pop    r15
   14002efc6:	pop    r14
   14002efc8:	pop    r13
   14002efca:	pop    r12
   14002efcc:	pop    rbp
   14002efcd:	ret    
   14002efce:	int3   
   14002efcf:	int3   
   14002efd0:	mov    QWORD PTR [rsp+0x8],rbx
   14002efd5:	mov    QWORD PTR [rsp+0x10],rsi
   14002efda:	push   rdi
   14002efdb:	sub    rsp,0x70
   14002efdf:	mov    rsi,rdx
   14002efe2:	mov    rdx,rcx
   14002efe5:	lea    rcx,[rsp+0x50]
   14002efea:	mov    rbx,r9
   14002efed:	mov    edi,r8d
   14002eff0:	call   0x140026f30
   14002eff5:	mov    eax,DWORD PTR [rsp+0xc0]
   14002effc:	lea    rcx,[rsp+0x50]
   14002f001:	mov    r9,rbx
   14002f004:	mov    DWORD PTR [rsp+0x40],eax
   14002f008:	mov    eax,DWORD PTR [rsp+0xb8]
   14002f00f:	mov    r8d,edi
   14002f012:	mov    DWORD PTR [rsp+0x38],eax
   14002f016:	mov    eax,DWORD PTR [rsp+0xb0]
   14002f01d:	mov    rdx,rsi
   14002f020:	mov    DWORD PTR [rsp+0x30],eax
   14002f024:	mov    rax,QWORD PTR [rsp+0xa8]
   14002f02c:	mov    QWORD PTR [rsp+0x28],rax
   14002f031:	mov    eax,DWORD PTR [rsp+0xa0]
   14002f038:	mov    DWORD PTR [rsp+0x20],eax
   14002f03c:	call   0x14002ed00
   14002f041:	cmp    BYTE PTR [rsp+0x68],0x0
   14002f046:	je     0x14002f054
   14002f048:	mov    rcx,QWORD PTR [rsp+0x60]
   14002f04d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002f054:	lea    r11,[rsp+0x70]
   14002f059:	mov    rbx,QWORD PTR [r11+0x10]
   14002f05d:	mov    rsi,QWORD PTR [r11+0x18]
   14002f061:	mov    rsp,r11
   14002f064:	pop    rdi
   14002f065:	ret    
   14002f066:	int3   
   14002f067:	int3   
   14002f068:	rex push rbp
   14002f06a:	push   r12
   14002f06c:	push   r13
   14002f06e:	push   r14
   14002f070:	push   r15
   14002f072:	sub    rsp,0x40
   14002f076:	lea    rbp,[rsp+0x30]
   14002f07b:	mov    QWORD PTR [rbp+0x40],rbx
   14002f07f:	mov    QWORD PTR [rbp+0x48],rsi
   14002f083:	mov    QWORD PTR [rbp+0x50],rdi
   14002f087:	mov    rax,QWORD PTR [rip+0x29ffa]        # 0x140059088
   14002f08e:	xor    rax,rbp
   14002f091:	mov    QWORD PTR [rbp+0x0],rax
   14002f095:	mov    r14d,DWORD PTR [rbp+0x68]
   14002f099:	xor    edi,edi
   14002f09b:	mov    r15d,r9d
   14002f09e:	mov    r12,r8
   14002f0a1:	mov    r13d,edx
   14002f0a4:	test   r14d,r14d
   14002f0a7:	jne    0x14002f0b0
   14002f0a9:	mov    rax,QWORD PTR [rcx]
   14002f0ac:	mov    r14d,DWORD PTR [rax+0x4]
   14002f0b0:	neg    DWORD PTR [rbp+0x70]
   14002f0b3:	mov    ecx,r14d
   14002f0b6:	mov    DWORD PTR [rsp+0x28],edi
   14002f0ba:	sbb    edx,edx
   14002f0bc:	mov    QWORD PTR [rsp+0x20],rdi
   14002f0c1:	and    edx,0x8
   14002f0c4:	inc    edx
   14002f0c6:	call   QWORD PTR [rip+0x1225c]        # 0x140041328
   14002f0cc:	movsxd rsi,eax
   14002f0cf:	test   eax,eax
   14002f0d1:	jne    0x14002f0da
   14002f0d3:	xor    eax,eax
   14002f0d5:	jmp    0x14002f1a7
   14002f0da:	jle    0x14002f146
   14002f0dc:	movabs rax,0x7ffffffffffffff0
   14002f0e6:	cmp    rsi,rax
   14002f0e9:	ja     0x14002f146
   14002f0eb:	lea    rcx,[rsi*2+0x10]
   14002f0f3:	cmp    rcx,0x400
   14002f0fa:	ja     0x14002f12d
   14002f0fc:	lea    rax,[rcx+0xf]
   14002f100:	cmp    rax,rcx
   14002f103:	ja     0x14002f10f
   14002f105:	movabs rax,0xffffffffffffff0
   14002f10f:	and    rax,0xfffffffffffffff0
   14002f113:	call   0x1400311e0
   14002f118:	sub    rsp,rax
   14002f11b:	lea    rbx,[rsp+0x30]
   14002f120:	test   rbx,rbx
   14002f123:	je     0x14002f0d3
   14002f125:	mov    DWORD PTR [rbx],0xcccc
   14002f12b:	jmp    0x14002f140
   14002f12d:	call   0x140029d54
   14002f132:	mov    rbx,rax
   14002f135:	test   rax,rax
   14002f138:	je     0x14002f149
   14002f13a:	mov    DWORD PTR [rax],0xdddd
   14002f140:	add    rbx,0x10
   14002f144:	jmp    0x14002f149
   14002f146:	mov    rbx,rdi
   14002f149:	test   rbx,rbx
   14002f14c:	je     0x14002f0d3
   14002f14e:	mov    r8,rsi
   14002f151:	xor    edx,edx
   14002f153:	mov    rcx,rbx
   14002f156:	add    r8,r8
   14002f159:	call   0x14002bb90
   14002f15e:	mov    r9d,r15d
   14002f161:	mov    r8,r12
   14002f164:	mov    edx,0x1
   14002f169:	mov    ecx,r14d
   14002f16c:	mov    DWORD PTR [rsp+0x28],esi
   14002f170:	mov    QWORD PTR [rsp+0x20],rbx
   14002f175:	call   QWORD PTR [rip+0x121ad]        # 0x140041328
   14002f17b:	test   eax,eax
   14002f17d:	je     0x14002f194
   14002f17f:	mov    r9,QWORD PTR [rbp+0x60]
   14002f183:	mov    r8d,eax
   14002f186:	mov    rdx,rbx
   14002f189:	mov    ecx,r13d
   14002f18c:	call   QWORD PTR [rip+0x1234e]        # 0x1400414e0
   14002f192:	mov    edi,eax
   14002f194:	lea    rcx,[rbx-0x10]
   14002f198:	cmp    DWORD PTR [rcx],0xdddd
   14002f19e:	jne    0x14002f1a5
   14002f1a0:	call   0x1400273dc
   14002f1a5:	mov    eax,edi
   14002f1a7:	mov    rcx,QWORD PTR [rbp+0x0]
   14002f1ab:	xor    rcx,rbp
   14002f1ae:	call   0x1400265a0
   14002f1b3:	mov    rbx,QWORD PTR [rbp+0x40]
   14002f1b7:	mov    rsi,QWORD PTR [rbp+0x48]
   14002f1bb:	mov    rdi,QWORD PTR [rbp+0x50]
   14002f1bf:	lea    rsp,[rbp+0x10]
   14002f1c3:	pop    r15
   14002f1c5:	pop    r14
   14002f1c7:	pop    r13
   14002f1c9:	pop    r12
   14002f1cb:	pop    rbp
   14002f1cc:	ret    
   14002f1cd:	int3   
   14002f1ce:	int3   
   14002f1cf:	int3   
   14002f1d0:	mov    QWORD PTR [rsp+0x8],rbx
   14002f1d5:	mov    QWORD PTR [rsp+0x10],rsi
   14002f1da:	push   rdi
   14002f1db:	sub    rsp,0x60
   14002f1df:	mov    esi,edx
   14002f1e1:	mov    rdx,rcx
   14002f1e4:	lea    rcx,[rsp+0x40]
   14002f1e9:	mov    ebx,r9d
   14002f1ec:	mov    rdi,r8
   14002f1ef:	call   0x140026f30
   14002f1f4:	mov    eax,DWORD PTR [rsp+0xa0]
   14002f1fb:	lea    rcx,[rsp+0x40]
   14002f200:	mov    r9d,ebx
   14002f203:	mov    DWORD PTR [rsp+0x30],eax
   14002f207:	mov    eax,DWORD PTR [rsp+0x98]
   14002f20e:	mov    r8,rdi
   14002f211:	mov    DWORD PTR [rsp+0x28],eax
   14002f215:	mov    rax,QWORD PTR [rsp+0x90]
   14002f21d:	mov    edx,esi
   14002f21f:	mov    QWORD PTR [rsp+0x20],rax
   14002f224:	call   0x14002f068
   14002f229:	cmp    BYTE PTR [rsp+0x58],0x0
   14002f22e:	je     0x14002f23c
   14002f230:	mov    rcx,QWORD PTR [rsp+0x50]
   14002f235:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002f23c:	mov    rbx,QWORD PTR [rsp+0x70]
   14002f241:	mov    rsi,QWORD PTR [rsp+0x78]
   14002f246:	add    rsp,0x60
   14002f24a:	pop    rdi
   14002f24b:	ret    
   14002f24c:	mov    QWORD PTR [rsp+0x8],rbx
   14002f251:	mov    QWORD PTR [rsp+0x10],rsi
   14002f256:	push   rdi
   14002f257:	sub    rsp,0x30
   14002f25b:	movsxd rax,r9d
   14002f25e:	mov    rbx,r8
   14002f261:	mov    edi,edx
   14002f263:	mov    rsi,rcx
   14002f266:	test   r9d,r9d
   14002f269:	jle    0x14002f276
   14002f26b:	mov    rdx,rax
   14002f26e:	mov    rcx,rbx
   14002f271:	call   0x14002741c
   14002f276:	mov    r8,rbx
   14002f279:	mov    edx,edi
   14002f27b:	mov    r9d,eax
   14002f27e:	mov    rcx,rsi
   14002f281:	mov    rbx,QWORD PTR [rsp+0x40]
   14002f286:	mov    rsi,QWORD PTR [rsp+0x48]
   14002f28b:	add    rsp,0x30
   14002f28f:	pop    rdi
   14002f290:	jmp    0x14002e6f0
   14002f295:	int3   
   14002f296:	int3   
   14002f297:	int3   
   14002f298:	int3   
   14002f299:	int3   
   14002f29a:	int3   
   14002f29b:	int3   
   14002f29c:	int3   
   14002f29d:	int3   
   14002f29e:	int3   
   14002f29f:	int3   
   14002f2a0:	int3   
   14002f2a1:	int3   
   14002f2a2:	int3   
   14002f2a3:	int3   
   14002f2a4:	int3   
   14002f2a5:	int3   
   14002f2a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002f2b0:	sub    rdx,rcx
   14002f2b3:	cmp    r8,0x8
   14002f2b7:	jb     0x14002f2db
   14002f2b9:	test   cl,0x7
   14002f2bc:	je     0x14002f2d2
   14002f2be:	xchg   ax,ax
   14002f2c0:	mov    al,BYTE PTR [rcx]
   14002f2c2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14002f2c5:	jne    0x14002f2f3
   14002f2c7:	inc    rcx
   14002f2ca:	dec    r8
   14002f2cd:	test   cl,0x7
   14002f2d0:	jne    0x14002f2c0
   14002f2d2:	mov    r9,r8
   14002f2d5:	shr    r9,0x3
   14002f2d9:	jne    0x14002f2fa
   14002f2db:	test   r8,r8
   14002f2de:	je     0x14002f2ef
   14002f2e0:	mov    al,BYTE PTR [rcx]
   14002f2e2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14002f2e5:	jne    0x14002f2f3
   14002f2e7:	inc    rcx
   14002f2ea:	dec    r8
   14002f2ed:	jne    0x14002f2e0
   14002f2ef:	xor    rax,rax
   14002f2f2:	ret    
   14002f2f3:	sbb    eax,eax
   14002f2f5:	sbb    eax,0xffffffff
   14002f2f8:	ret    
   14002f2f9:	nop
   14002f2fa:	shr    r9,0x2
   14002f2fe:	je     0x14002f337
   14002f300:	mov    rax,QWORD PTR [rcx]
   14002f303:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14002f307:	jne    0x14002f364
   14002f309:	mov    rax,QWORD PTR [rcx+0x8]
   14002f30d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14002f312:	jne    0x14002f360
   14002f314:	mov    rax,QWORD PTR [rcx+0x10]
   14002f318:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14002f31d:	jne    0x14002f35c
   14002f31f:	mov    rax,QWORD PTR [rcx+0x18]
   14002f323:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14002f328:	jne    0x14002f358
   14002f32a:	add    rcx,0x20
   14002f32e:	dec    r9
   14002f331:	jne    0x14002f300
   14002f333:	and    r8,0x1f
   14002f337:	mov    r9,r8
   14002f33a:	shr    r9,0x3
   14002f33e:	je     0x14002f2db
   14002f340:	mov    rax,QWORD PTR [rcx]
   14002f343:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14002f347:	jne    0x14002f364
   14002f349:	add    rcx,0x8
   14002f34d:	dec    r9
   14002f350:	jne    0x14002f340
   14002f352:	and    r8,0x7
   14002f356:	jmp    0x14002f2db
   14002f358:	add    rcx,0x8
   14002f35c:	add    rcx,0x8
   14002f360:	add    rcx,0x8
   14002f364:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14002f368:	bswap  rax
   14002f36b:	bswap  rcx
   14002f36e:	cmp    rax,rcx
   14002f371:	sbb    eax,eax
   14002f373:	sbb    eax,0xffffffff
   14002f376:	ret    
   14002f377:	int3   
   14002f378:	movzx  r8d,WORD PTR [rdx]
   14002f37c:	movzx  eax,WORD PTR [rcx]
   14002f37f:	sub    eax,r8d
   14002f382:	jne    0x14002f39e
   14002f384:	sub    rcx,rdx
   14002f387:	test   r8w,r8w
   14002f38b:	je     0x14002f39e
   14002f38d:	add    rdx,0x2
   14002f391:	movzx  r8d,WORD PTR [rdx]
   14002f395:	movzx  eax,WORD PTR [rcx+rdx*1]
   14002f399:	sub    eax,r8d
   14002f39c:	je     0x14002f387
   14002f39e:	test   eax,eax
   14002f3a0:	jns    0x14002f3a6
   14002f3a2:	or     eax,0xffffffff
   14002f3a5:	ret    
   14002f3a6:	mov    ecx,0x1
   14002f3ab:	test   eax,eax
   14002f3ad:	cmovg  eax,ecx
   14002f3b0:	ret    
   14002f3b1:	int3   
   14002f3b2:	int3   
   14002f3b3:	int3   
   14002f3b4:	sub    rsp,0x28
   14002f3b8:	test   rcx,rcx
   14002f3bb:	jne    0x14002f3d2
   14002f3bd:	call   0x140029bf8
   14002f3c2:	mov    DWORD PTR [rax],0x16
   14002f3c8:	call   0x140029b2c
   14002f3cd:	or     eax,0xffffffff
   14002f3d0:	jmp    0x14002f3d5
   14002f3d2:	mov    eax,DWORD PTR [rcx+0x1c]
   14002f3d5:	add    rsp,0x28
   14002f3d9:	ret    
   14002f3da:	int3   
   14002f3db:	int3   
   14002f3dc:	rex push rbx
   14002f3de:	sub    rsp,0x20
   14002f3e2:	movsxd rbx,ecx
   14002f3e5:	cmp    ebx,0xfffffffe
   14002f3e8:	jne    0x14002f3f7
   14002f3ea:	call   0x140029bf8
   14002f3ef:	mov    DWORD PTR [rax],0x9
   14002f3f5:	jmp    0x14002f447
   14002f3f7:	call   0x140028a64
   14002f3fc:	test   eax,eax
   14002f3fe:	jns    0x14002f405
   14002f400:	or     eax,0xffffffff
   14002f403:	jmp    0x14002f449
   14002f405:	test   ebx,ebx
   14002f407:	js     0x14002f437
   14002f409:	cmp    ebx,DWORD PTR [rip+0x2f531]        # 0x14005e940
   14002f40f:	jae    0x14002f437
   14002f411:	mov    rcx,rbx
   14002f414:	mov    rax,rbx
   14002f417:	lea    rdx,[rip+0x2f542]        # 0x14005e960
   14002f41e:	sar    rax,0x5
   14002f422:	and    ecx,0x1f
   14002f425:	mov    rax,QWORD PTR [rdx+rax*8]
   14002f429:	imul   rcx,rcx,0x58
   14002f42d:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14002f432:	and    eax,0x40
   14002f435:	jmp    0x14002f449
   14002f437:	call   0x140029bf8
   14002f43c:	mov    DWORD PTR [rax],0x9
   14002f442:	call   0x140029b2c
   14002f447:	xor    eax,eax
   14002f449:	add    rsp,0x20
   14002f44d:	pop    rbx
   14002f44e:	ret    
   14002f44f:	int3   
   14002f450:	mov    QWORD PTR [rsp+0x10],rbx
   14002f455:	mov    DWORD PTR [rsp+0x8],ecx
   14002f459:	push   rsi
   14002f45a:	push   rdi
   14002f45b:	push   r12
   14002f45d:	push   r14
   14002f45f:	push   r15
   14002f461:	sub    rsp,0x20
   14002f465:	mov    r14d,r8d
   14002f468:	mov    r15,rdx
   14002f46b:	movsxd rdi,ecx
   14002f46e:	cmp    edi,0xfffffffe
   14002f471:	jne    0x14002f48b
   14002f473:	call   0x140029b88
   14002f478:	and    DWORD PTR [rax],0x0
   14002f47b:	call   0x140029bf8
   14002f480:	mov    DWORD PTR [rax],0x9
   14002f486:	jmp    0x14002f527
   14002f48b:	call   0x140028a64
   14002f490:	test   eax,eax
   14002f492:	js     0x14002f527
   14002f498:	test   edi,edi
   14002f49a:	js     0x14002f50f
   14002f49c:	cmp    edi,DWORD PTR [rip+0x2f49e]        # 0x14005e940
   14002f4a2:	jae    0x14002f50f
   14002f4a4:	mov    rbx,rdi
   14002f4a7:	mov    rsi,rdi
   14002f4aa:	sar    rsi,0x5
   14002f4ae:	lea    r12,[rip+0x2f4ab]        # 0x14005e960
   14002f4b5:	and    ebx,0x1f
   14002f4b8:	imul   rbx,rbx,0x58
   14002f4bc:	mov    rax,QWORD PTR [r12+rsi*8]
   14002f4c0:	movsx  ecx,BYTE PTR [rbx+rax*1+0x8]
   14002f4c5:	and    ecx,0x1
   14002f4c8:	je     0x14002f50f
   14002f4ca:	mov    ecx,edi
   14002f4cc:	call   0x140031538
   14002f4d1:	nop
   14002f4d2:	mov    rax,QWORD PTR [r12+rsi*8]
   14002f4d6:	test   BYTE PTR [rbx+rax*1+0x8],0x1
   14002f4db:	je     0x14002f4ee
   14002f4dd:	mov    r8d,r14d
   14002f4e0:	mov    rdx,r15
   14002f4e3:	mov    ecx,edi
   14002f4e5:	call   0x14002f53c
   14002f4ea:	mov    ebx,eax
   14002f4ec:	jmp    0x14002f504
   14002f4ee:	call   0x140029bf8
   14002f4f3:	mov    DWORD PTR [rax],0x9
   14002f4f9:	call   0x140029b88
   14002f4fe:	and    DWORD PTR [rax],0x0
   14002f501:	or     ebx,0xffffffff
   14002f504:	mov    ecx,edi
   14002f506:	call   0x140031700
   14002f50b:	mov    eax,ebx
   14002f50d:	jmp    0x14002f52a
   14002f50f:	call   0x140029b88
   14002f514:	and    DWORD PTR [rax],0x0
   14002f517:	call   0x140029bf8
   14002f51c:	mov    DWORD PTR [rax],0x9
   14002f522:	call   0x140029b2c
   14002f527:	or     eax,0xffffffff
   14002f52a:	mov    rbx,QWORD PTR [rsp+0x58]
   14002f52f:	add    rsp,0x20
   14002f533:	pop    r15
   14002f535:	pop    r14
   14002f537:	pop    r12
   14002f539:	pop    rdi
   14002f53a:	pop    rsi
   14002f53b:	ret    
   14002f53c:	mov    QWORD PTR [rsp+0x20],rbx
   14002f541:	push   rbp
   14002f542:	push   rsi
   14002f543:	push   rdi
   14002f544:	push   r12
   14002f546:	push   r13
   14002f548:	push   r14
   14002f54a:	push   r15
   14002f54c:	lea    rbp,[rsp-0x1a30]
   14002f554:	mov    eax,0x1b30
   14002f559:	call   0x1400311e0
   14002f55e:	sub    rsp,rax
   14002f561:	mov    rax,QWORD PTR [rip+0x29b20]        # 0x140059088
   14002f568:	xor    rax,rsp
   14002f56b:	mov    QWORD PTR [rbp+0x1a20],rax
   14002f572:	xor    edi,edi
   14002f574:	mov    r15d,r8d
   14002f577:	mov    r14,rdx
   14002f57a:	and    DWORD PTR [rsp+0x48],edi
   14002f57e:	movsxd rbx,ecx
   14002f581:	test   r8d,r8d
   14002f584:	jne    0x14002f58d
   14002f586:	xor    eax,eax
   14002f588:	jmp    0x14002fc86
   14002f58d:	test   rdx,rdx
   14002f590:	jne    0x14002f5b1
   14002f592:	call   0x140029b88
   14002f597:	and    DWORD PTR [rax],edi
   14002f599:	call   0x140029bf8
   14002f59e:	mov    DWORD PTR [rax],0x16
   14002f5a4:	call   0x140029b2c
   14002f5a9:	or     eax,0xffffffff
   14002f5ac:	jmp    0x14002fc86
   14002f5b1:	call   0x140028a64
   14002f5b6:	test   eax,eax
   14002f5b8:	js     0x14002f5a9
   14002f5ba:	lea    eax,[rbx-0x1]
   14002f5bd:	cmp    eax,0x1
   14002f5c0:	ja     0x14002f5e5
   14002f5c2:	mov    rsi,rbx
   14002f5c5:	imul   rsi,rsi,0x58
   14002f5c9:	add    rsi,QWORD PTR [rip+0x2f390]        # 0x14005e960
   14002f5d0:	je     0x14002f5e5
   14002f5d2:	lea    eax,[rbx-0x1]
   14002f5d5:	neg    eax
   14002f5d7:	sbb    ecx,ecx
   14002f5d9:	add    ecx,0xfffffff5
   14002f5dc:	call   QWORD PTR [rip+0x11e56]        # 0x140041438
   14002f5e2:	mov    QWORD PTR [rsi],rax
   14002f5e5:	mov    r12,rbx
   14002f5e8:	lea    rax,[rip+0x2f371]        # 0x14005e960
   14002f5ef:	mov    r13,rbx
   14002f5f2:	sar    r13,0x5
   14002f5f6:	and    r12d,0x1f
   14002f5fa:	mov    rcx,QWORD PTR [rax+r13*8]
   14002f5fe:	mov    QWORD PTR [rsp+0x50],r13
   14002f603:	imul   r12,r12,0x58
   14002f607:	mov    sil,BYTE PTR [r12+rcx*1+0x38]
   14002f60c:	add    sil,sil
   14002f60f:	sar    sil,1
   14002f612:	lea    eax,[rsi-0x1]
   14002f615:	cmp    al,0x1
   14002f617:	ja     0x14002f626
   14002f619:	mov    eax,r15d
   14002f61c:	not    eax
   14002f61e:	test   al,0x1
   14002f620:	je     0x14002f592
   14002f626:	test   BYTE PTR [r12+rcx*1+0x8],0x20
   14002f62c:	je     0x14002f63b
   14002f62e:	xor    edx,edx
   14002f630:	mov    ecx,ebx
   14002f632:	lea    r8d,[rdx+0x2]
   14002f636:	call   0x14002fda0
   14002f63b:	mov    ecx,ebx
   14002f63d:	call   0x14002f3dc
   14002f642:	test   eax,eax
   14002f644:	je     0x14002f906
   14002f64a:	lea    rax,[rip+0x2f30f]        # 0x14005e960
   14002f651:	mov    rax,QWORD PTR [rax+r13*8]
   14002f655:	test   BYTE PTR [r12+rax*1+0x8],0x80
   14002f65b:	je     0x14002f906
   14002f661:	call   0x14002814c
   14002f666:	xor    ebx,ebx
   14002f668:	lea    rdx,[rsp+0x5c]
   14002f66d:	mov    rcx,QWORD PTR [rax+0xc0]
   14002f674:	lea    rax,[rip+0x2f2e5]        # 0x14005e960
   14002f67b:	cmp    QWORD PTR [rcx+0x138],rbx
   14002f682:	mov    rcx,QWORD PTR [rax+r13*8]
   14002f686:	mov    rcx,QWORD PTR [r12+rcx*1]
   14002f68a:	sete   bl
   14002f68d:	call   QWORD PTR [rip+0x11eed]        # 0x140041580
   14002f693:	test   eax,eax
   14002f695:	je     0x14002f906
   14002f69b:	test   ebx,ebx
   14002f69d:	je     0x14002f6a8
   14002f69f:	test   sil,sil
   14002f6a2:	je     0x14002f906
   14002f6a8:	call   QWORD PTR [rip+0x11eca]        # 0x140041578
   14002f6ae:	and    DWORD PTR [rsp+0x58],edi
   14002f6b2:	mov    rbx,r14
   14002f6b5:	mov    DWORD PTR [rsp+0x5c],eax
   14002f6b9:	test   r15d,r15d
   14002f6bc:	je     0x14002f8fd
   14002f6c2:	test   sil,sil
   14002f6c5:	jne    0x14002f84f
   14002f6cb:	mov    cl,BYTE PTR [rbx]
   14002f6cd:	xor    eax,eax
   14002f6cf:	cmp    cl,0xa
   14002f6d2:	sete   al
   14002f6d5:	mov    DWORD PTR [rsp+0x44],eax
   14002f6d9:	lea    rax,[rip+0x2f280]        # 0x14005e960
   14002f6e0:	mov    rdx,QWORD PTR [rax+r13*8]
   14002f6e4:	cmp    DWORD PTR [r12+rdx*1+0x50],0x0
   14002f6ea:	je     0x14002f70c
   14002f6ec:	mov    al,BYTE PTR [r12+rdx*1+0x4c]
   14002f6f1:	mov    BYTE PTR [rsp+0x61],cl
   14002f6f5:	mov    r8d,0x2
   14002f6fb:	mov    BYTE PTR [rsp+0x60],al
   14002f6ff:	and    DWORD PTR [r12+rdx*1+0x50],0x0
   14002f705:	lea    rdx,[rsp+0x60]
   14002f70a:	jmp    0x14002f755
   14002f70c:	movsx  ecx,cl
   14002f70f:	call   0x14002fecc
   14002f714:	test   eax,eax
   14002f716:	je     0x14002f74c
   14002f718:	mov    rax,r15
   14002f71b:	sub    rax,rbx
   14002f71e:	add    rax,r14
   14002f721:	cmp    rax,0x1
   14002f725:	jle    0x14002f8d3
   14002f72b:	lea    rcx,[rsp+0x40]
   14002f730:	mov    r8d,0x2
   14002f736:	mov    rdx,rbx
   14002f739:	call   0x14003024c
   14002f73e:	cmp    eax,0xffffffff
   14002f741:	je     0x14002f8f4
   14002f747:	inc    rbx
   14002f74a:	jmp    0x14002f768
   14002f74c:	mov    r8d,0x1
   14002f752:	mov    rdx,rbx
   14002f755:	lea    rcx,[rsp+0x40]
   14002f75a:	call   0x14003024c
   14002f75f:	cmp    eax,0xffffffff
   14002f762:	je     0x14002f8f4
   14002f768:	and    QWORD PTR [rsp+0x38],0x0
   14002f76e:	and    QWORD PTR [rsp+0x30],0x0
   14002f774:	mov    ecx,DWORD PTR [rsp+0x5c]
   14002f778:	lea    rax,[rsp+0x60]
   14002f77d:	lea    r8,[rsp+0x40]
   14002f782:	mov    r9d,0x1
   14002f788:	xor    edx,edx
   14002f78a:	mov    DWORD PTR [rsp+0x28],0x5
   14002f792:	inc    rbx
   14002f795:	mov    QWORD PTR [rsp+0x20],rax
   14002f79a:	call   QWORD PTR [rip+0x11bb0]        # 0x140041350
   14002f7a0:	mov    r13d,eax
   14002f7a3:	test   eax,eax
   14002f7a5:	je     0x14002f8f4
   14002f7ab:	mov    rcx,QWORD PTR [rsp+0x50]
   14002f7b0:	and    QWORD PTR [rsp+0x20],0x0
   14002f7b6:	lea    rax,[rip+0x2f1a3]        # 0x14005e960
   14002f7bd:	mov    rcx,QWORD PTR [rax+rcx*8]
   14002f7c1:	lea    r9,[rsp+0x58]
   14002f7c6:	lea    rdx,[rsp+0x60]
   14002f7cb:	mov    rcx,QWORD PTR [r12+rcx*1]
   14002f7cf:	mov    r8d,r13d
   14002f7d2:	call   QWORD PTR [rip+0x11c68]        # 0x140041440
   14002f7d8:	test   eax,eax
   14002f7da:	je     0x14002fc0e
   14002f7e0:	mov    edi,ebx
   14002f7e2:	sub    edi,r14d
   14002f7e5:	add    edi,DWORD PTR [rsp+0x48]
   14002f7e9:	cmp    DWORD PTR [rsp+0x58],r13d
   14002f7ee:	jl     0x14002f8f4
   14002f7f4:	cmp    DWORD PTR [rsp+0x44],0x0
   14002f7f9:	mov    r13,QWORD PTR [rsp+0x50]
   14002f7fe:	je     0x14002f8c4
   14002f804:	and    QWORD PTR [rsp+0x20],0x0
   14002f80a:	lea    rax,[rip+0x2f14f]        # 0x14005e960
   14002f811:	mov    BYTE PTR [rsp+0x60],0xd
   14002f816:	mov    rcx,QWORD PTR [rax+r13*8]
   14002f81a:	lea    r9,[rsp+0x58]
   14002f81f:	lea    rdx,[rsp+0x60]
   14002f824:	mov    rcx,QWORD PTR [r12+rcx*1]
   14002f828:	mov    r8d,0x1
   14002f82e:	call   QWORD PTR [rip+0x11c0c]        # 0x140041440
   14002f834:	test   eax,eax
   14002f836:	je     0x14002fc0e
   14002f83c:	cmp    DWORD PTR [rsp+0x58],0x1
   14002f841:	jl     0x14002f8f4
   14002f847:	inc    DWORD PTR [rsp+0x48]
   14002f84b:	inc    edi
   14002f84d:	jmp    0x14002f8c4
   14002f84f:	lea    eax,[rsi-0x1]
   14002f852:	cmp    al,0x1
   14002f854:	ja     0x14002f874
   14002f856:	movzx  eax,WORD PTR [rbx]
   14002f859:	xor    r13d,r13d
   14002f85c:	cmp    ax,0xa
   14002f860:	mov    WORD PTR [rsp+0x40],ax
   14002f865:	sete   r13b
   14002f869:	add    rbx,0x2
   14002f86d:	mov    DWORD PTR [rsp+0x44],r13d
   14002f872:	jmp    0x14002f879
   14002f874:	mov    r13d,DWORD PTR [rsp+0x44]
   14002f879:	lea    eax,[rsi-0x1]
   14002f87c:	cmp    al,0x1
   14002f87e:	ja     0x14002f8bf
   14002f880:	movzx  ecx,WORD PTR [rsp+0x40]
   14002f885:	call   0x14003172c
   14002f88a:	cmp    ax,WORD PTR [rsp+0x40]
   14002f88f:	jne    0x14002fc0e
   14002f895:	add    edi,0x2
   14002f898:	test   r13d,r13d
   14002f89b:	je     0x14002f8bf
   14002f89d:	mov    eax,0xd
   14002f8a2:	mov    ecx,eax
   14002f8a4:	mov    WORD PTR [rsp+0x40],ax
   14002f8a9:	call   0x14003172c
   14002f8ae:	cmp    ax,WORD PTR [rsp+0x40]
   14002f8b3:	jne    0x14002fc0e
   14002f8b9:	inc    edi
   14002f8bb:	inc    DWORD PTR [rsp+0x48]
   14002f8bf:	mov    r13,QWORD PTR [rsp+0x50]
   14002f8c4:	mov    eax,ebx
   14002f8c6:	sub    eax,r14d
   14002f8c9:	cmp    eax,r15d
   14002f8cc:	jae    0x14002f8f4
   14002f8ce:	jmp    0x14002f6c2
   14002f8d3:	mov    al,BYTE PTR [rbx]
   14002f8d5:	lea    rdx,[rip+0x2f084]        # 0x14005e960
   14002f8dc:	inc    edi
   14002f8de:	mov    rcx,QWORD PTR [rdx+r13*8]
   14002f8e2:	mov    BYTE PTR [r12+rcx*1+0x4c],al
   14002f8e7:	mov    rax,QWORD PTR [rdx+r13*8]
   14002f8eb:	mov    DWORD PTR [r12+rax*1+0x50],0x1
   14002f8f4:	mov    ebx,DWORD PTR [rsp+0x44]
   14002f8f8:	jmp    0x14002fc16
   14002f8fd:	mov    ebx,DWORD PTR [rsp+0x44]
   14002f901:	jmp    0x14002fc1a
   14002f906:	lea    rax,[rip+0x2f053]        # 0x14005e960
   14002f90d:	mov    rcx,QWORD PTR [rax+r13*8]
   14002f911:	test   BYTE PTR [r12+rcx*1+0x8],0x80
   14002f917:	je     0x14002fbe8
   14002f91d:	xor    ebx,ebx
   14002f91f:	mov    r13,r14
   14002f922:	mov    DWORD PTR [rsp+0x44],ebx
   14002f926:	test   sil,sil
   14002f929:	jne    0x14002f9f7
   14002f92f:	test   r15d,r15d
   14002f932:	je     0x14002fc46
   14002f938:	lea    edx,[rbx+0xd]
   14002f93b:	mov    ebx,DWORD PTR [rsp+0x48]
   14002f93f:	lea    rsi,[rbp+0x620]
   14002f946:	xor    ecx,ecx
   14002f948:	mov    eax,r13d
   14002f94b:	sub    eax,r14d
   14002f94e:	cmp    eax,r15d
   14002f951:	jae    0x14002f979
   14002f953:	mov    al,BYTE PTR [r13+0x0]
   14002f957:	inc    r13
   14002f95a:	cmp    al,0xa
   14002f95c:	jne    0x14002f968
   14002f95e:	mov    BYTE PTR [rsi],dl
   14002f960:	inc    ebx
   14002f962:	inc    rsi
   14002f965:	inc    rcx
   14002f968:	inc    rcx
   14002f96b:	mov    BYTE PTR [rsi],al
   14002f96d:	inc    rsi
   14002f970:	cmp    rcx,0x13ff
   14002f977:	jb     0x14002f948
   14002f979:	and    QWORD PTR [rsp+0x20],0x0
   14002f97f:	lea    rax,[rbp+0x620]
   14002f986:	mov    r8d,esi
   14002f989:	sub    r8d,eax
   14002f98c:	mov    rax,QWORD PTR [rsp+0x50]
   14002f991:	lea    rcx,[rip+0x2efc8]        # 0x14005e960
   14002f998:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002f99c:	lea    r9,[rsp+0x4c]
   14002f9a1:	lea    rdx,[rbp+0x620]
   14002f9a8:	mov    rcx,QWORD PTR [r12+rcx*1]
   14002f9ac:	mov    DWORD PTR [rsp+0x48],ebx
   14002f9b0:	call   QWORD PTR [rip+0x11a8a]        # 0x140041440
   14002f9b6:	mov    ebx,DWORD PTR [rsp+0x44]
   14002f9ba:	test   eax,eax
   14002f9bc:	je     0x14002fc0e
   14002f9c2:	add    edi,DWORD PTR [rsp+0x4c]
   14002f9c6:	lea    rax,[rbp+0x620]
   14002f9cd:	sub    rsi,rax
   14002f9d0:	movsxd rax,DWORD PTR [rsp+0x4c]
   14002f9d5:	cmp    rax,rsi
   14002f9d8:	jl     0x14002fc16
   14002f9de:	mov    eax,r13d
   14002f9e1:	mov    edx,0xd
   14002f9e6:	sub    eax,r14d
   14002f9e9:	cmp    eax,r15d
   14002f9ec:	jb     0x14002f93b
   14002f9f2:	jmp    0x14002fc16
   14002f9f7:	cmp    sil,0x2
   14002f9fb:	jne    0x14002fad6
   14002fa01:	test   r15d,r15d
   14002fa04:	je     0x14002fc46
   14002fa0a:	mov    edx,0xd
   14002fa0f:	mov    ebx,DWORD PTR [rsp+0x48]
   14002fa13:	lea    rsi,[rbp+0x620]
   14002fa1a:	xor    ecx,ecx
   14002fa1c:	mov    eax,r13d
   14002fa1f:	sub    eax,r14d
   14002fa22:	cmp    eax,r15d
   14002fa25:	jae    0x14002fa58
   14002fa27:	movzx  eax,WORD PTR [r13+0x0]
   14002fa2c:	add    r13,0x2
   14002fa30:	cmp    ax,0xa
   14002fa34:	jne    0x14002fa44
   14002fa36:	mov    WORD PTR [rsi],dx
   14002fa39:	add    ebx,0x2
   14002fa3c:	add    rsi,0x2
   14002fa40:	add    rcx,0x2
   14002fa44:	add    rcx,0x2
   14002fa48:	mov    WORD PTR [rsi],ax
   14002fa4b:	add    rsi,0x2
   14002fa4f:	cmp    rcx,0x13fe
   14002fa56:	jb     0x14002fa1c
   14002fa58:	and    QWORD PTR [rsp+0x20],0x0
   14002fa5e:	lea    rax,[rbp+0x620]
   14002fa65:	mov    r8d,esi
   14002fa68:	sub    r8d,eax
   14002fa6b:	mov    rax,QWORD PTR [rsp+0x50]
   14002fa70:	lea    rcx,[rip+0x2eee9]        # 0x14005e960
   14002fa77:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002fa7b:	lea    r9,[rsp+0x4c]
   14002fa80:	lea    rdx,[rbp+0x620]
   14002fa87:	mov    rcx,QWORD PTR [r12+rcx*1]
   14002fa8b:	mov    DWORD PTR [rsp+0x48],ebx
   14002fa8f:	call   QWORD PTR [rip+0x119ab]        # 0x140041440
   14002fa95:	mov    ebx,DWORD PTR [rsp+0x44]
   14002fa99:	test   eax,eax
   14002fa9b:	je     0x14002fc0e
   14002faa1:	add    edi,DWORD PTR [rsp+0x4c]
   14002faa5:	lea    rax,[rbp+0x620]
   14002faac:	sub    rsi,rax
   14002faaf:	movsxd rax,DWORD PTR [rsp+0x4c]
   14002fab4:	cmp    rax,rsi
   14002fab7:	jl     0x14002fc16
   14002fabd:	mov    eax,r13d
   14002fac0:	mov    edx,0xd
   14002fac5:	sub    eax,r14d
   14002fac8:	cmp    eax,r15d
   14002facb:	jb     0x14002fa0f
   14002fad1:	jmp    0x14002fc16
   14002fad6:	test   r15d,r15d
   14002fad9:	je     0x14002fc46
   14002fadf:	mov    r8d,0xd
   14002fae5:	lea    rcx,[rsp+0x70]
   14002faea:	xor    edx,edx
   14002faec:	mov    eax,r13d
   14002faef:	sub    eax,r14d
   14002faf2:	cmp    eax,r15d
   14002faf5:	jae    0x14002fb26
   14002faf7:	movzx  eax,WORD PTR [r13+0x0]
   14002fafc:	add    r13,0x2
   14002fb00:	cmp    ax,0xa
   14002fb04:	jne    0x14002fb12
   14002fb06:	mov    WORD PTR [rcx],r8w
   14002fb0a:	add    rcx,0x2
   14002fb0e:	add    rdx,0x2
   14002fb12:	add    rdx,0x2
   14002fb16:	mov    WORD PTR [rcx],ax
   14002fb19:	add    rcx,0x2
   14002fb1d:	cmp    rdx,0x6a8
   14002fb24:	jb     0x14002faec
   14002fb26:	and    QWORD PTR [rsp+0x38],0x0
   14002fb2c:	and    QWORD PTR [rsp+0x30],0x0
   14002fb32:	lea    rax,[rsp+0x70]
   14002fb37:	sub    ecx,eax
   14002fb39:	lea    r8,[rsp+0x70]
   14002fb3e:	mov    DWORD PTR [rsp+0x28],0xd55
   14002fb46:	mov    eax,ecx
   14002fb48:	mov    ecx,0xfde9
   14002fb4d:	cdq    
   14002fb4e:	sub    eax,edx
   14002fb50:	xor    edx,edx
   14002fb52:	sar    eax,1
   14002fb54:	mov    r9d,eax
   14002fb57:	lea    rax,[rbp+0x620]
   14002fb5e:	mov    QWORD PTR [rsp+0x20],rax
   14002fb63:	call   QWORD PTR [rip+0x117e7]        # 0x140041350
   14002fb69:	mov    DWORD PTR [rsp+0x44],eax
   14002fb6d:	test   eax,eax
   14002fb6f:	je     0x14002fc0e
   14002fb75:	xor    esi,esi
   14002fb77:	and    QWORD PTR [rsp+0x20],0x0
   14002fb7d:	mov    r8d,eax
   14002fb80:	mov    rax,QWORD PTR [rsp+0x50]
   14002fb85:	movsxd rcx,esi
   14002fb88:	lea    rdx,[rbp+0x620]
   14002fb8f:	lea    r9,[rsp+0x4c]
   14002fb94:	add    rdx,rcx
   14002fb97:	lea    rcx,[rip+0x2edc2]        # 0x14005e960
   14002fb9e:	sub    r8d,esi
   14002fba1:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002fba5:	mov    rcx,QWORD PTR [r12+rcx*1]
   14002fba9:	call   QWORD PTR [rip+0x11891]        # 0x140041440
   14002fbaf:	test   eax,eax
   14002fbb1:	je     0x14002fbc1
   14002fbb3:	add    esi,DWORD PTR [rsp+0x4c]
   14002fbb7:	mov    eax,DWORD PTR [rsp+0x44]
   14002fbbb:	cmp    eax,esi
   14002fbbd:	jg     0x14002fb77
   14002fbbf:	jmp    0x14002fbcd
   14002fbc1:	call   QWORD PTR [rip+0x11811]        # 0x1400413d8
   14002fbc7:	mov    ebx,eax
   14002fbc9:	mov    eax,DWORD PTR [rsp+0x44]
   14002fbcd:	cmp    eax,esi
   14002fbcf:	jg     0x14002fc16
   14002fbd1:	mov    edi,r13d
   14002fbd4:	mov    r8d,0xd
   14002fbda:	sub    edi,r14d
   14002fbdd:	cmp    edi,r15d
   14002fbe0:	jb     0x14002fae5
   14002fbe6:	jmp    0x14002fc16
   14002fbe8:	mov    rcx,QWORD PTR [r12+rcx*1]
   14002fbec:	and    QWORD PTR [rsp+0x20],rdi
   14002fbf1:	lea    r9,[rsp+0x4c]
   14002fbf6:	mov    r8d,r15d
   14002fbf9:	mov    rdx,r14
   14002fbfc:	call   QWORD PTR [rip+0x1183e]        # 0x140041440
   14002fc02:	test   eax,eax
   14002fc04:	je     0x14002fc0e
   14002fc06:	mov    edi,DWORD PTR [rsp+0x4c]
   14002fc0a:	xor    ebx,ebx
   14002fc0c:	jmp    0x14002fc16
   14002fc0e:	call   QWORD PTR [rip+0x117c4]        # 0x1400413d8
   14002fc14:	mov    ebx,eax
   14002fc16:	test   edi,edi
   14002fc18:	jne    0x14002fc80
   14002fc1a:	test   ebx,ebx
   14002fc1c:	je     0x14002fc46
   14002fc1e:	cmp    ebx,0x5
   14002fc21:	jne    0x14002fc3a
   14002fc23:	call   0x140029bf8
   14002fc28:	mov    DWORD PTR [rax],0x9
   14002fc2e:	call   0x140029b88
   14002fc33:	mov    DWORD PTR [rax],ebx
   14002fc35:	jmp    0x14002f5a9
   14002fc3a:	mov    ecx,ebx
   14002fc3c:	call   0x140029ba8
   14002fc41:	jmp    0x14002f5a9
   14002fc46:	mov    rax,QWORD PTR [rsp+0x50]
   14002fc4b:	lea    rcx,[rip+0x2ed0e]        # 0x14005e960
   14002fc52:	mov    rax,QWORD PTR [rcx+rax*8]
   14002fc56:	test   BYTE PTR [r12+rax*1+0x8],0x40
   14002fc5c:	je     0x14002fc68
   14002fc5e:	cmp    BYTE PTR [r14],0x1a
   14002fc62:	je     0x14002f586
   14002fc68:	call   0x140029bf8
   14002fc6d:	mov    DWORD PTR [rax],0x1c
   14002fc73:	call   0x140029b88
   14002fc78:	and    DWORD PTR [rax],0x0
   14002fc7b:	jmp    0x14002f5a9
   14002fc80:	sub    edi,DWORD PTR [rsp+0x48]
   14002fc84:	mov    eax,edi
   14002fc86:	mov    rcx,QWORD PTR [rbp+0x1a20]
   14002fc8d:	xor    rcx,rsp
   14002fc90:	call   0x1400265a0
   14002fc95:	mov    rbx,QWORD PTR [rsp+0x1b88]
   14002fc9d:	add    rsp,0x1b30
   14002fca4:	pop    r15
   14002fca6:	pop    r14
   14002fca8:	pop    r13
   14002fcaa:	pop    r12
   14002fcac:	pop    rdi
   14002fcad:	pop    rsi
   14002fcae:	pop    rbp
   14002fcaf:	ret    
   14002fcb0:	mov    QWORD PTR [rsp+0x10],rbx
   14002fcb5:	mov    DWORD PTR [rsp+0x8],ecx
   14002fcb9:	push   rsi
   14002fcba:	push   rdi
   14002fcbb:	push   r12
   14002fcbd:	push   r14
   14002fcbf:	push   r15
   14002fcc1:	sub    rsp,0x20
   14002fcc5:	mov    r14d,r8d
   14002fcc8:	mov    r15,rdx
   14002fccb:	movsxd rdi,ecx
   14002fcce:	cmp    edi,0xfffffffe
   14002fcd1:	jne    0x14002fceb
   14002fcd3:	call   0x140029b88
   14002fcd8:	and    DWORD PTR [rax],0x0
   14002fcdb:	call   0x140029bf8
   14002fce0:	mov    DWORD PTR [rax],0x9
   14002fce6:	jmp    0x14002fd8a
   14002fceb:	call   0x140028a64
   14002fcf0:	test   eax,eax
   14002fcf2:	js     0x14002fd8a
   14002fcf8:	test   edi,edi
   14002fcfa:	js     0x14002fd72
   14002fcfc:	cmp    edi,DWORD PTR [rip+0x2ec3e]        # 0x14005e940
   14002fd02:	jae    0x14002fd72
   14002fd04:	mov    rbx,rdi
   14002fd07:	mov    rsi,rdi
   14002fd0a:	sar    rsi,0x5
   14002fd0e:	lea    r12,[rip+0x2ec4b]        # 0x14005e960
   14002fd15:	and    ebx,0x1f
   14002fd18:	imul   rbx,rbx,0x58
   14002fd1c:	mov    rax,QWORD PTR [r12+rsi*8]
   14002fd20:	movsx  ecx,BYTE PTR [rbx+rax*1+0x8]
   14002fd25:	and    ecx,0x1
   14002fd28:	je     0x14002fd72
   14002fd2a:	mov    ecx,edi
   14002fd2c:	call   0x140031538
   14002fd31:	nop
   14002fd32:	mov    rax,QWORD PTR [r12+rsi*8]
   14002fd36:	test   BYTE PTR [rbx+rax*1+0x8],0x1
   14002fd3b:	je     0x14002fd4f
   14002fd3d:	mov    r8d,r14d
   14002fd40:	mov    rdx,r15
   14002fd43:	mov    ecx,edi
   14002fd45:	call   0x14002fda0
   14002fd4a:	mov    rbx,rax
   14002fd4d:	jmp    0x14002fd66
   14002fd4f:	call   0x140029bf8
   14002fd54:	mov    DWORD PTR [rax],0x9
   14002fd5a:	call   0x140029b88
   14002fd5f:	and    DWORD PTR [rax],0x0
   14002fd62:	or     rbx,0xffffffffffffffff
   14002fd66:	mov    ecx,edi
   14002fd68:	call   0x140031700
   14002fd6d:	mov    rax,rbx
   14002fd70:	jmp    0x14002fd8e
   14002fd72:	call   0x140029b88
   14002fd77:	and    DWORD PTR [rax],0x0
   14002fd7a:	call   0x140029bf8
   14002fd7f:	mov    DWORD PTR [rax],0x9
   14002fd85:	call   0x140029b2c
   14002fd8a:	or     rax,0xffffffffffffffff
   14002fd8e:	mov    rbx,QWORD PTR [rsp+0x58]
   14002fd93:	add    rsp,0x20
   14002fd97:	pop    r15
   14002fd99:	pop    r14
   14002fd9b:	pop    r12
   14002fd9d:	pop    rdi
   14002fd9e:	pop    rsi
   14002fd9f:	ret    
   14002fda0:	mov    QWORD PTR [rsp+0x8],rbx
   14002fda5:	mov    QWORD PTR [rsp+0x10],rsi
   14002fdaa:	push   rdi
   14002fdab:	sub    rsp,0x20
   14002fdaf:	movsxd rbx,ecx
   14002fdb2:	mov    edi,r8d
   14002fdb5:	mov    rsi,rdx
   14002fdb8:	mov    ecx,ebx
   14002fdba:	call   0x14003167c
   14002fdbf:	cmp    rax,0xffffffffffffffff
   14002fdc3:	jne    0x14002fdd6
   14002fdc5:	call   0x140029bf8
   14002fdca:	mov    DWORD PTR [rax],0x9
   14002fdd0:	or     rax,0xffffffffffffffff
   14002fdd4:	jmp    0x14002fe23
   14002fdd6:	lea    r8,[rsp+0x48]
   14002fddb:	mov    r9d,edi
   14002fdde:	mov    rdx,rsi
   14002fde1:	mov    rcx,rax
   14002fde4:	call   QWORD PTR [rip+0x1179e]        # 0x140041588
   14002fdea:	test   eax,eax
   14002fdec:	jne    0x14002fdfd
   14002fdee:	call   QWORD PTR [rip+0x115e4]        # 0x1400413d8
   14002fdf4:	mov    ecx,eax
   14002fdf6:	call   0x140029ba8
   14002fdfb:	jmp    0x14002fdd0
   14002fdfd:	mov    rcx,rbx
   14002fe00:	mov    rax,rbx
   14002fe03:	lea    rdx,[rip+0x2eb56]        # 0x14005e960
   14002fe0a:	sar    rax,0x5
   14002fe0e:	and    ecx,0x1f
   14002fe11:	mov    rax,QWORD PTR [rdx+rax*8]
   14002fe15:	imul   rcx,rcx,0x58
   14002fe19:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   14002fe1e:	mov    rax,QWORD PTR [rsp+0x48]
   14002fe23:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fe28:	mov    rsi,QWORD PTR [rsp+0x38]
   14002fe2d:	add    rsp,0x20
   14002fe31:	pop    rdi
   14002fe32:	ret    
   14002fe33:	int3   
   14002fe34:	rex push rbx
   14002fe36:	sub    rsp,0x20
   14002fe3a:	inc    DWORD PTR [rip+0x2c7d4]        # 0x14005c614
   14002fe40:	mov    rbx,rcx
   14002fe43:	mov    ecx,0x1000
   14002fe48:	call   0x1400297c4
   14002fe4d:	mov    QWORD PTR [rbx+0x10],rax
   14002fe51:	test   rax,rax
   14002fe54:	je     0x14002fe63
   14002fe56:	or     DWORD PTR [rbx+0x18],0x8
   14002fe5a:	mov    DWORD PTR [rbx+0x24],0x1000
   14002fe61:	jmp    0x14002fe76
   14002fe63:	or     DWORD PTR [rbx+0x18],0x4
   14002fe67:	lea    rax,[rbx+0x20]
   14002fe6b:	mov    DWORD PTR [rbx+0x24],0x2
   14002fe72:	mov    QWORD PTR [rbx+0x10],rax
   14002fe76:	mov    rax,QWORD PTR [rbx+0x10]
   14002fe7a:	and    DWORD PTR [rbx+0x8],0x0
   14002fe7e:	mov    QWORD PTR [rbx],rax
   14002fe81:	add    rsp,0x20
   14002fe85:	pop    rbx
   14002fe86:	ret    
   14002fe87:	int3   
   14002fe88:	rex push rbx
   14002fe8a:	sub    rsp,0x40
   14002fe8e:	mov    ebx,ecx
   14002fe90:	lea    rcx,[rsp+0x20]
   14002fe95:	call   0x140026f30
   14002fe9a:	mov    rax,QWORD PTR [rsp+0x20]
   14002fe9f:	movzx  edx,bl
   14002fea2:	mov    rcx,QWORD PTR [rax+0x108]
   14002fea9:	movzx  eax,WORD PTR [rcx+rdx*2]
   14002fead:	and    eax,0x8000
   14002feb2:	cmp    BYTE PTR [rsp+0x38],0x0
   14002feb7:	je     0x14002fec5
   14002feb9:	mov    rcx,QWORD PTR [rsp+0x30]
   14002febe:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002fec5:	add    rsp,0x40
   14002fec9:	pop    rbx
   14002feca:	ret    
   14002fecb:	int3   
   14002fecc:	rex push rbx
   14002fece:	sub    rsp,0x40
   14002fed2:	mov    ebx,ecx
   14002fed4:	lea    rcx,[rsp+0x20]
   14002fed9:	xor    edx,edx
   14002fedb:	call   0x140026f30
   14002fee0:	mov    rax,QWORD PTR [rsp+0x20]
   14002fee5:	movzx  edx,bl
   14002fee8:	mov    rcx,QWORD PTR [rax+0x108]
   14002feef:	movzx  eax,WORD PTR [rcx+rdx*2]
   14002fef3:	and    eax,0x8000
   14002fef8:	cmp    BYTE PTR [rsp+0x38],0x0
   14002fefd:	je     0x14002ff0b
   14002feff:	mov    rcx,QWORD PTR [rsp+0x30]
   14002ff04:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002ff0b:	add    rsp,0x40
   14002ff0f:	pop    rbx
   14002ff10:	ret    
   14002ff11:	int3   
   14002ff12:	int3   
   14002ff13:	int3   
   14002ff14:	mov    edx,0x8
   14002ff19:	jmp    0x14002bc9c
   14002ff1e:	int3   
   14002ff1f:	int3   
   14002ff20:	mov    QWORD PTR [rsp+0x18],rbx
   14002ff25:	mov    QWORD PTR [rsp+0x20],rbp
   14002ff2a:	push   rsi
   14002ff2b:	push   rdi
   14002ff2c:	push   r14
   14002ff2e:	sub    rsp,0x40
   14002ff32:	mov    rax,QWORD PTR [rip+0x2914f]        # 0x140059088
   14002ff39:	xor    rax,rsp
   14002ff3c:	mov    QWORD PTR [rsp+0x30],rax
   14002ff41:	test   BYTE PTR [rdx+0x18],0x40
   14002ff45:	mov    rdi,rdx
   14002ff48:	movzx  esi,cx
   14002ff4b:	jne    0x1400300ae
   14002ff51:	mov    rcx,rdx
   14002ff54:	call   0x14002f3b4
   14002ff59:	lea    rbp,[rip+0x290d0]        # 0x140059030
   14002ff60:	lea    r14,[rip+0x2e9f9]        # 0x14005e960
   14002ff67:	cmp    eax,0xffffffff
   14002ff6a:	je     0x14002ff9d
   14002ff6c:	mov    rcx,rdi
   14002ff6f:	call   0x14002f3b4
   14002ff74:	cmp    eax,0xfffffffe
   14002ff77:	je     0x14002ff9d
   14002ff79:	mov    rcx,rdi
   14002ff7c:	call   0x14002f3b4
   14002ff81:	mov    rcx,rdi
   14002ff84:	movsxd rbx,eax
   14002ff87:	sar    rbx,0x5
   14002ff8b:	call   0x14002f3b4
   14002ff90:	and    eax,0x1f
   14002ff93:	imul   rax,rax,0x58
   14002ff97:	add    rax,QWORD PTR [r14+rbx*8]
   14002ff9b:	jmp    0x14002ffa0
   14002ff9d:	mov    rax,rbp
   14002ffa0:	mov    al,BYTE PTR [rax+0x38]
   14002ffa3:	and    al,0x7f
   14002ffa5:	cmp    al,0x2
   14002ffa7:	je     0x1400300ae
   14002ffad:	mov    rcx,rdi
   14002ffb0:	call   0x14002f3b4
   14002ffb5:	cmp    eax,0xffffffff
   14002ffb8:	je     0x14002ffeb
   14002ffba:	mov    rcx,rdi
   14002ffbd:	call   0x14002f3b4
   14002ffc2:	cmp    eax,0xfffffffe
   14002ffc5:	je     0x14002ffeb
   14002ffc7:	mov    rcx,rdi
   14002ffca:	call   0x14002f3b4
   14002ffcf:	mov    rcx,rdi
   14002ffd2:	movsxd rbx,eax
   14002ffd5:	sar    rbx,0x5
   14002ffd9:	call   0x14002f3b4
   14002ffde:	and    eax,0x1f
   14002ffe1:	imul   rax,rax,0x58
   14002ffe5:	add    rax,QWORD PTR [r14+rbx*8]
   14002ffe9:	jmp    0x14002ffee
   14002ffeb:	mov    rax,rbp
   14002ffee:	mov    al,BYTE PTR [rax+0x38]
   14002fff1:	and    al,0x7f
   14002fff3:	cmp    al,0x1
   14002fff5:	je     0x1400300ae
   14002fffb:	mov    rcx,rdi
   14002fffe:	call   0x14002f3b4
   140030003:	cmp    eax,0xffffffff
   140030006:	je     0x140030039
   140030008:	mov    rcx,rdi
   14003000b:	call   0x14002f3b4
   140030010:	cmp    eax,0xfffffffe
   140030013:	je     0x140030039
   140030015:	mov    rcx,rdi
   140030018:	call   0x14002f3b4
   14003001d:	mov    rcx,rdi
   140030020:	movsxd rbx,eax
   140030023:	sar    rbx,0x5
   140030027:	call   0x14002f3b4
   14003002c:	mov    ebp,eax
   14003002e:	and    ebp,0x1f
   140030031:	imul   rbp,rbp,0x58
   140030035:	add    rbp,QWORD PTR [r14+rbx*8]
   140030039:	test   BYTE PTR [rbp+0x8],0x80
   14003003d:	je     0x1400300ae
   14003003f:	lea    rdx,[rsp+0x24]
   140030044:	lea    rcx,[rsp+0x20]
   140030049:	movzx  r9d,si
   14003004d:	mov    r8d,0x5
   140030053:	call   0x1400311b0
   140030058:	xor    ebx,ebx
   14003005a:	test   eax,eax
   14003005c:	je     0x140030065
   14003005e:	mov    eax,0xffff
   140030063:	jmp    0x1400300d7
   140030065:	cmp    DWORD PTR [rsp+0x20],ebx
   140030069:	jle    0x1400300a9
   14003006b:	lea    r14,[rsp+0x24]
   140030070:	dec    DWORD PTR [rdi+0x8]
   140030073:	js     0x14003008b
   140030075:	mov    rcx,QWORD PTR [rdi]
   140030078:	mov    al,BYTE PTR [r14]
   14003007b:	mov    BYTE PTR [rcx],al
   14003007d:	mov    rax,QWORD PTR [rdi]
   140030080:	movzx  ecx,BYTE PTR [rax]
   140030083:	inc    rax
   140030086:	mov    QWORD PTR [rdi],rax
   140030089:	jmp    0x140030099
   14003008b:	movsx  ecx,BYTE PTR [r14]
   14003008f:	mov    rdx,rdi
   140030092:	call   0x14002ae64
   140030097:	mov    ecx,eax
   140030099:	cmp    ecx,0xffffffff
   14003009c:	je     0x14003005e
   14003009e:	inc    ebx
   1400300a0:	inc    r14
   1400300a3:	cmp    ebx,DWORD PTR [rsp+0x20]
   1400300a7:	jl     0x140030070
   1400300a9:	movzx  eax,si
   1400300ac:	jmp    0x1400300d7
   1400300ae:	movsxd rax,DWORD PTR [rdi+0x8]
   1400300b2:	add    rax,0xfffffffffffffffe
   1400300b6:	mov    DWORD PTR [rdi+0x8],eax
   1400300b9:	test   eax,eax
   1400300bb:	js     0x1400300cc
   1400300bd:	mov    rax,QWORD PTR [rdi]
   1400300c0:	mov    WORD PTR [rax],si
   1400300c3:	add    QWORD PTR [rdi],0x2
   1400300c7:	movzx  eax,si
   1400300ca:	jmp    0x1400300d7
   1400300cc:	mov    rdx,rdi
   1400300cf:	movzx  ecx,si
   1400300d2:	call   0x140031788
   1400300d7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400300dc:	xor    rcx,rsp
   1400300df:	call   0x1400265a0
   1400300e4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400300e9:	mov    rbp,QWORD PTR [rsp+0x78]
   1400300ee:	add    rsp,0x40
   1400300f2:	pop    r14
   1400300f4:	pop    rdi
   1400300f5:	pop    rsi
   1400300f6:	ret    
   1400300f7:	int3   
   1400300f8:	mov    rax,rsp
   1400300fb:	mov    QWORD PTR [rax+0x8],rbx
   1400300ff:	mov    QWORD PTR [rax+0x10],rbp
   140030103:	mov    QWORD PTR [rax+0x18],rsi
   140030107:	mov    QWORD PTR [rax+0x20],rdi
   14003010b:	push   r14
   14003010d:	sub    rsp,0x50
   140030111:	xor    r14d,r14d
   140030114:	mov    rbp,r8
   140030117:	mov    rsi,rdx
   14003011a:	mov    rdi,rcx
   14003011d:	test   rdx,rdx
   140030120:	je     0x140030135
   140030122:	test   r8,r8
   140030125:	je     0x140030135
   140030127:	cmp    BYTE PTR [rdx],r14b
   14003012a:	jne    0x140030152
   14003012c:	test   rcx,rcx
   14003012f:	je     0x140030135
   140030131:	mov    WORD PTR [rcx],r14w
   140030135:	xor    eax,eax
   140030137:	mov    rbx,QWORD PTR [rsp+0x60]
   14003013c:	mov    rbp,QWORD PTR [rsp+0x68]
   140030141:	mov    rsi,QWORD PTR [rsp+0x70]
   140030146:	mov    rdi,QWORD PTR [rsp+0x78]
   14003014b:	add    rsp,0x50
   14003014f:	pop    r14
   140030151:	ret    
   140030152:	lea    rcx,[rsp+0x30]
   140030157:	mov    rdx,r9
   14003015a:	call   0x140026f30
   14003015f:	mov    rax,QWORD PTR [rsp+0x30]
   140030164:	cmp    QWORD PTR [rax+0x138],r14
   14003016b:	jne    0x140030182
   14003016d:	test   rdi,rdi
   140030170:	je     0x140030178
   140030172:	movzx  eax,BYTE PTR [rsi]
   140030175:	mov    WORD PTR [rdi],ax
   140030178:	mov    ebx,0x1
   14003017d:	jmp    0x14003022f
   140030182:	movzx  ecx,BYTE PTR [rsi]
   140030185:	lea    rdx,[rsp+0x30]
   14003018a:	call   0x14002fe88
   14003018f:	mov    ebx,0x1
   140030194:	test   eax,eax
   140030196:	je     0x1400301f2
   140030198:	mov    rcx,QWORD PTR [rsp+0x30]
   14003019d:	mov    r9d,DWORD PTR [rcx+0xd4]
   1400301a4:	cmp    r9d,ebx
   1400301a7:	jle    0x1400301d8
   1400301a9:	cmp    ebp,r9d
   1400301ac:	jl     0x1400301d8
   1400301ae:	mov    ecx,DWORD PTR [rcx+0x4]
   1400301b1:	mov    eax,r14d
   1400301b4:	test   rdi,rdi
   1400301b7:	setne  al
   1400301ba:	lea    edx,[rbx+0x8]
   1400301bd:	mov    r8,rsi
   1400301c0:	mov    DWORD PTR [rsp+0x28],eax
   1400301c4:	mov    QWORD PTR [rsp+0x20],rdi
   1400301c9:	call   QWORD PTR [rip+0x11159]        # 0x140041328
   1400301cf:	mov    rcx,QWORD PTR [rsp+0x30]
   1400301d4:	test   eax,eax
   1400301d6:	jne    0x1400301ea
   1400301d8:	movsxd rax,DWORD PTR [rcx+0xd4]
   1400301df:	cmp    rbp,rax
   1400301e2:	jb     0x140030221
   1400301e4:	cmp    BYTE PTR [rsi+0x1],r14b
   1400301e8:	je     0x140030221
   1400301ea:	mov    ebx,DWORD PTR [rcx+0xd4]
   1400301f0:	jmp    0x14003022f
   1400301f2:	mov    eax,r14d
   1400301f5:	test   rdi,rdi
   1400301f8:	mov    r9d,ebx
   1400301fb:	setne  al
   1400301fe:	mov    r8,rsi
   140030201:	mov    edx,0x9
   140030206:	mov    DWORD PTR [rsp+0x28],eax
   14003020a:	mov    rax,QWORD PTR [rsp+0x30]
   14003020f:	mov    QWORD PTR [rsp+0x20],rdi
   140030214:	mov    ecx,DWORD PTR [rax+0x4]
   140030217:	call   QWORD PTR [rip+0x1110b]        # 0x140041328
   14003021d:	test   eax,eax
   14003021f:	jne    0x14003022f
   140030221:	call   0x140029bf8
   140030226:	or     ebx,0xffffffff
   140030229:	mov    DWORD PTR [rax],0x2a
   14003022f:	cmp    BYTE PTR [rsp+0x48],r14b
   140030234:	je     0x140030242
   140030236:	mov    rcx,QWORD PTR [rsp+0x40]
   14003023b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140030242:	mov    eax,ebx
   140030244:	jmp    0x140030137
   140030249:	int3   
   14003024a:	int3   
   14003024b:	int3   
   14003024c:	xor    r9d,r9d
   14003024f:	jmp    0x1400300f8
   140030254:	mov    QWORD PTR [rsp+0x18],rbx
   140030259:	push   rbp
   14003025a:	push   rsi
   14003025b:	push   rdi
   14003025c:	push   r12
   14003025e:	push   r13
   140030260:	push   r14
   140030262:	push   r15
   140030264:	lea    rbp,[rsp-0x1e0]
   14003026c:	sub    rsp,0x2e0
   140030273:	mov    rax,QWORD PTR [rip+0x28e0e]        # 0x140059088
   14003027a:	xor    rax,rsp
   14003027d:	mov    QWORD PTR [rbp+0x1d8],rax
   140030284:	xor    eax,eax
   140030286:	mov    rsi,rcx
   140030289:	mov    QWORD PTR [rsp+0x68],rcx
   14003028e:	mov    rdi,rdx
   140030291:	lea    rcx,[rbp-0x58]
   140030295:	mov    rdx,r8
   140030298:	mov    r13,r9
   14003029b:	mov    DWORD PTR [rsp+0x64],eax
   14003029f:	mov    r14d,eax
   1400302a2:	mov    DWORD PTR [rsp+0x54],eax
   1400302a6:	mov    r12d,eax
   1400302a9:	mov    DWORD PTR [rsp+0x48],eax
   1400302ad:	mov    DWORD PTR [rsp+0x60],eax
   1400302b1:	mov    DWORD PTR [rsp+0x58],eax
   1400302b5:	call   0x140026f30
   1400302ba:	call   0x140029bf8
   1400302bf:	mov    QWORD PTR [rbp-0x70],rax
   1400302c3:	call   0x140028a64
   1400302c8:	xor    r10d,r10d
   1400302cb:	test   eax,eax
   1400302cd:	js     0x14003072d
   1400302d3:	test   rsi,rsi
   1400302d6:	je     0x14003071a
   1400302dc:	test   BYTE PTR [rsi+0x18],0x40
   1400302e0:	lea    r9,[rip+0xfffffffffffcfd19]        # 0x140000000
   1400302e7:	jne    0x140030378
   1400302ed:	mov    rcx,rsi
   1400302f0:	call   0x14002f3b4
   1400302f5:	lea    rdx,[rip+0x28d34]        # 0x140059030
   1400302fc:	movsxd r9,eax
   1400302ff:	lea    ecx,[r9+0x2]
   140030303:	cmp    ecx,0x1
   140030306:	jbe    0x14003032b
   140030308:	mov    r8,r9
   14003030b:	mov    rcx,r9
   14003030e:	lea    rax,[rip+0xfffffffffffcfceb]        # 0x140000000
   140030315:	and    r8d,0x1f
   140030319:	sar    rcx,0x5
   14003031d:	imul   r8,r8,0x58
   140030321:	add    r8,QWORD PTR [rax+rcx*8+0x5e960]
   140030329:	jmp    0x14003032e
   14003032b:	mov    r8,rdx
   14003032e:	test   BYTE PTR [r8+0x38],0x7f
   140030333:	jne    0x14003071a
   140030339:	lea    eax,[r9+0x2]
   14003033d:	cmp    eax,0x1
   140030340:	jbe    0x140030364
   140030342:	mov    rdx,r9
   140030345:	mov    rax,r9
   140030348:	lea    r9,[rip+0xfffffffffffcfcb1]        # 0x140000000
   14003034f:	and    edx,0x1f
   140030352:	sar    rax,0x5
   140030356:	imul   rdx,rdx,0x58
   14003035a:	add    rdx,QWORD PTR [r9+rax*8+0x5e960]
   140030362:	jmp    0x14003036b
   140030364:	lea    r9,[rip+0xfffffffffffcfc95]        # 0x140000000
   14003036b:	test   BYTE PTR [rdx+0x38],0x80
   14003036f:	jne    0x14003071a
   140030375:	xor    r10d,r10d
   140030378:	test   rdi,rdi
   14003037b:	je     0x14003071a
   140030381:	mov    r15b,BYTE PTR [rdi]
   140030384:	mov    edx,r10d
   140030387:	mov    DWORD PTR [rsp+0x44],r10d
   14003038c:	mov    DWORD PTR [rsp+0x50],edx
   140030390:	mov    DWORD PTR [rsp+0x40],edx
   140030394:	mov    r8d,r10d
   140030397:	mov    QWORD PTR [rbp-0x80],r10
   14003039b:	test   r15b,r15b
   14003039e:	je     0x140030730
   1400303a4:	mov    rbx,QWORD PTR [rbp-0x60]
   1400303a8:	mov    r11d,0x200
   1400303ae:	inc    rdi
   1400303b1:	mov    QWORD PTR [rbp-0x68],rdi
   1400303b5:	test   edx,edx
   1400303b7:	js     0x14003070f
   1400303bd:	lea    eax,[r15-0x20]
   1400303c1:	cmp    al,0x58
   1400303c3:	ja     0x1400303d7
   1400303c5:	movsx  rax,r15b
   1400303c9:	movzx  ecx,BYTE PTR [rax+r9*1+0x43cf0]
   1400303d2:	and    ecx,0xf
   1400303d5:	jmp    0x1400303da
   1400303d7:	mov    ecx,r10d
   1400303da:	movsxd rax,ecx
   1400303dd:	lea    rcx,[rax+rax*8]
   1400303e1:	movsxd rax,r8d
   1400303e4:	add    rcx,rax
   1400303e7:	movzx  r8d,BYTE PTR [rcx+r9*1+0x43d10]
   1400303f0:	shr    r8d,0x4
   1400303f4:	mov    DWORD PTR [rsp+0x5c],r8d
   1400303f9:	cmp    r8d,0x8
   1400303fd:	je     0x14003071a
   140030403:	mov    ecx,r8d
   140030406:	test   r8d,r8d
   140030409:	je     0x140030b92
   14003040f:	dec    ecx
   140030411:	je     0x140030cb1
   140030417:	dec    ecx
   140030419:	je     0x140030c61
   14003041f:	dec    ecx
   140030421:	je     0x140030c25
   140030427:	dec    ecx
   140030429:	je     0x140030c1d
   14003042f:	dec    ecx
   140030431:	je     0x140030be7
   140030437:	dec    ecx
   140030439:	je     0x140030af2
   14003043f:	dec    ecx
   140030441:	jne    0x140030703
   140030447:	movsx  ecx,r15b
   14003044b:	cmp    ecx,0x64
   14003044e:	jg     0x1400305be
   140030454:	je     0x14003076d
   14003045a:	cmp    ecx,0x41
   14003045d:	je     0x140030593
   140030463:	cmp    ecx,0x43
   140030466:	je     0x140030539
   14003046c:	lea    eax,[rcx-0x45]
   14003046f:	test   eax,0xfffffffd
   140030474:	je     0x140030593
   14003047a:	cmp    ecx,0x53
   14003047d:	je     0x1400304ec
   14003047f:	cmp    ecx,0x58
   140030482:	je     0x140030658
   140030488:	cmp    ecx,0x5a
   14003048b:	je     0x1400304a4
   14003048d:	cmp    ecx,0x61
   140030490:	je     0x14003059f
   140030496:	cmp    ecx,0x63
   140030499:	je     0x140030547
   14003049f:	jmp    0x140030978
   1400304a4:	mov    rax,QWORD PTR [r13+0x0]
   1400304a8:	add    r13,0x8
   1400304ac:	test   rax,rax
   1400304af:	je     0x1400304e0
   1400304b1:	mov    rbx,QWORD PTR [rax+0x8]
   1400304b5:	test   rbx,rbx
   1400304b8:	je     0x1400304e0
   1400304ba:	movsx  eax,WORD PTR [rax]
   1400304bd:	bt     r14d,0xb
   1400304c2:	jae    0x1400304d6
   1400304c4:	cdq    
   1400304c5:	mov    DWORD PTR [rsp+0x58],0x1
   1400304cd:	sub    eax,edx
   1400304cf:	sar    eax,1
   1400304d1:	jmp    0x140030974
   1400304d6:	mov    DWORD PTR [rsp+0x58],r10d
   1400304db:	jmp    0x140030974
   1400304e0:	mov    rbx,QWORD PTR [rip+0x29a79]        # 0x140059f60
   1400304e7:	jmp    0x140030969
   1400304ec:	test   r14d,0x830
   1400304f3:	jne    0x1400304fa
   1400304f5:	bts    r14d,0xb
   1400304fa:	mov    rbx,QWORD PTR [r13+0x0]
   1400304fe:	cmp    r12d,0xffffffff
   140030502:	mov    eax,r12d
   140030505:	mov    ecx,0x7fffffff
   14003050a:	cmove  eax,ecx
   14003050d:	add    r13,0x8
   140030511:	test   r14d,0x810
   140030518:	je     0x140030624
   14003051e:	test   rbx,rbx
   140030521:	mov    DWORD PTR [rsp+0x58],0x1
   140030529:	cmove  rbx,QWORD PTR [rip+0x29a37]        # 0x140059f68
   140030531:	mov    rcx,rbx
   140030534:	jmp    0x140030618
   140030539:	test   r14d,0x830
   140030540:	jne    0x140030547
   140030542:	bts    r14d,0xb
   140030547:	add    r13,0x8
   14003054b:	test   r14d,0x810
   140030552:	je     0x14003057b
   140030554:	movzx  r9d,WORD PTR [r13-0x8]
   140030559:	lea    rdx,[rbp-0x30]
   14003055d:	lea    rcx,[rsp+0x44]
   140030562:	mov    r8,r11
   140030565:	call   0x1400311b0
   14003056a:	xor    r10d,r10d
   14003056d:	test   eax,eax
   14003056f:	je     0x14003058a
   140030571:	mov    DWORD PTR [rsp+0x60],0x1
   140030579:	jmp    0x14003058a
   14003057b:	mov    al,BYTE PTR [r13-0x8]
   14003057f:	mov    DWORD PTR [rsp+0x44],0x1
   140030587:	mov    BYTE PTR [rbp-0x30],al
   14003058a:	lea    rbx,[rbp-0x30]
   14003058e:	jmp    0x140030978
   140030593:	mov    DWORD PTR [rsp+0x78],0x1
   14003059b:	add    r15b,0x20
   14003059f:	or     r14d,0x40
   1400305a3:	lea    rbx,[rbp-0x30]
   1400305a7:	mov    esi,r11d
   1400305aa:	test   r12d,r12d
   1400305ad:	jns    0x14003088b
   1400305b3:	mov    r12d,0x6
   1400305b9:	jmp    0x1400308d1
   1400305be:	cmp    ecx,0x65
   1400305c1:	jl     0x140030978
   1400305c7:	cmp    ecx,0x67
   1400305ca:	jle    0x14003059f
   1400305cc:	cmp    ecx,0x69
   1400305cf:	je     0x14003076d
   1400305d5:	cmp    ecx,0x6e
   1400305d8:	je     0x14003069b
   1400305de:	cmp    ecx,0x6f
   1400305e1:	je     0x140030684
   1400305e7:	cmp    ecx,0x70
   1400305ea:	je     0x14003064d
   1400305ec:	cmp    ecx,0x73
   1400305ef:	je     0x1400304fa
   1400305f5:	cmp    ecx,0x75
   1400305f8:	je     0x140030771
   1400305fe:	cmp    ecx,0x78
   140030601:	jne    0x140030978
   140030607:	lea    eax,[rcx-0x51]
   14003060a:	jmp    0x14003065d
   14003060c:	dec    eax
   14003060e:	cmp    WORD PTR [rcx],r10w
   140030612:	je     0x14003061c
   140030614:	add    rcx,0x2
   140030618:	test   eax,eax
   14003061a:	jne    0x14003060c
   14003061c:	sub    rcx,rbx
   14003061f:	sar    rcx,1
   140030622:	jmp    0x140030644
   140030624:	test   rbx,rbx
   140030627:	cmove  rbx,QWORD PTR [rip+0x29931]        # 0x140059f60
   14003062f:	mov    rcx,rbx
   140030632:	jmp    0x14003063e
   140030634:	dec    eax
   140030636:	cmp    BYTE PTR [rcx],r10b
   140030639:	je     0x140030642
   14003063b:	inc    rcx
   14003063e:	test   eax,eax
   140030640:	jne    0x140030634
   140030642:	sub    ecx,ebx
   140030644:	mov    DWORD PTR [rsp+0x44],ecx
   140030648:	jmp    0x140030978
   14003064d:	mov    r12d,0x10
   140030653:	bts    r14d,0xf
   140030658:	mov    eax,0x7
   14003065d:	mov    DWORD PTR [rsp+0x64],eax
   140030661:	mov    r9d,0x10
   140030667:	test   r14b,r14b
   14003066a:	jns    0x140030777
   140030670:	add    al,0x51
   140030672:	mov    BYTE PTR [rsp+0x4c],0x30
   140030677:	lea    edx,[r9-0xe]
   14003067b:	mov    BYTE PTR [rsp+0x4d],al
   14003067f:	jmp    0x14003077b
   140030684:	mov    r9d,0x8
   14003068a:	test   r14b,r14b
   14003068d:	jns    0x140030777
   140030693:	or     r14d,r11d
   140030696:	jmp    0x140030777
   14003069b:	mov    rdi,QWORD PTR [r13+0x0]
   14003069f:	add    r13,0x8
   1400306a3:	call   0x140027b80
   1400306a8:	xor    r10d,r10d
   1400306ab:	test   eax,eax
   1400306ad:	je     0x14003071a
   1400306af:	mov    eax,DWORD PTR [rsp+0x50]
   1400306b3:	test   r14b,0x20
   1400306b7:	je     0x1400306be
   1400306b9:	mov    WORD PTR [rdi],ax
   1400306bc:	jmp    0x1400306c0
   1400306be:	mov    DWORD PTR [rdi],eax
   1400306c0:	mov    DWORD PTR [rsp+0x60],0x1
   1400306c8:	mov    edx,DWORD PTR [rsp+0x50]
   1400306cc:	mov    rax,QWORD PTR [rbp-0x80]
   1400306d0:	test   rax,rax
   1400306d3:	je     0x1400306e8
   1400306d5:	mov    rcx,rax
   1400306d8:	call   0x1400273dc
   1400306dd:	mov    edx,DWORD PTR [rsp+0x50]
   1400306e1:	xor    r10d,r10d
   1400306e4:	mov    QWORD PTR [rbp-0x80],r10
   1400306e8:	mov    rsi,QWORD PTR [rsp+0x68]
   1400306ed:	mov    rdi,QWORD PTR [rbp-0x68]
   1400306f1:	mov    r8d,DWORD PTR [rsp+0x5c]
   1400306f6:	mov    r11d,0x200
   1400306fc:	lea    r9,[rip+0xfffffffffffcf8fd]        # 0x140000000
   140030703:	mov    r15b,BYTE PTR [rdi]
   140030706:	test   r15b,r15b
   140030709:	jne    0x1400303ae
   14003070f:	test   r8d,r8d
   140030712:	je     0x140030730
   140030714:	cmp    r8d,0x7
   140030718:	je     0x140030730
   14003071a:	call   0x140029bf8
   14003071f:	mov    DWORD PTR [rax],0x16
   140030725:	call   0x140029b2c
   14003072a:	xor    r10d,r10d
   14003072d:	or     edx,0xffffffff
   140030730:	cmp    BYTE PTR [rbp-0x40],r10b
   140030734:	je     0x140030741
   140030736:	mov    rcx,QWORD PTR [rbp-0x48]
   14003073a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140030741:	mov    eax,edx
   140030743:	mov    rcx,QWORD PTR [rbp+0x1d8]
   14003074a:	xor    rcx,rsp
   14003074d:	call   0x1400265a0
   140030752:	mov    rbx,QWORD PTR [rsp+0x330]
   14003075a:	add    rsp,0x2e0
   140030761:	pop    r15
   140030763:	pop    r14
   140030765:	pop    r13
   140030767:	pop    r12
   140030769:	pop    rdi
   14003076a:	pop    rsi
   14003076b:	pop    rbp
   14003076c:	ret    
   14003076d:	or     r14d,0x40
   140030771:	mov    r9d,0xa
   140030777:	mov    edx,DWORD PTR [rsp+0x48]
   14003077b:	mov    eax,0x8000
   140030780:	test   eax,r14d
   140030783:	je     0x14003078f
   140030785:	mov    r8,QWORD PTR [r13+0x0]
   140030789:	add    r13,0x8
   14003078d:	jmp    0x1400307c9
   14003078f:	bt     r14d,0xc
   140030794:	jb     0x140030785
   140030796:	add    r13,0x8
   14003079a:	test   r14b,0x20
   14003079e:	je     0x1400307b9
   1400307a0:	mov    QWORD PTR [rsp+0x70],r13
   1400307a5:	test   r14b,0x40
   1400307a9:	je     0x1400307b2
   1400307ab:	movsx  r8,WORD PTR [r13-0x8]
   1400307b0:	jmp    0x1400307ce
   1400307b2:	movzx  r8d,WORD PTR [r13-0x8]
   1400307b7:	jmp    0x1400307ce
   1400307b9:	test   r14b,0x40
   1400307bd:	je     0x1400307c5
   1400307bf:	movsxd r8,DWORD PTR [r13-0x8]
   1400307c3:	jmp    0x1400307c9
   1400307c5:	mov    r8d,DWORD PTR [r13-0x8]
   1400307c9:	mov    QWORD PTR [rsp+0x70],r13
   1400307ce:	test   r14b,0x40
   1400307d2:	je     0x1400307e1
   1400307d4:	test   r8,r8
   1400307d7:	jns    0x1400307e1
   1400307d9:	neg    r8
   1400307dc:	bts    r14d,0x8
   1400307e1:	test   eax,r14d
   1400307e4:	jne    0x1400307f0
   1400307e6:	bt     r14d,0xc
   1400307eb:	jb     0x1400307f0
   1400307ed:	mov    r8d,r8d
   1400307f0:	test   r12d,r12d
   1400307f3:	jns    0x1400307fd
   1400307f5:	mov    r12d,0x1
   1400307fb:	jmp    0x140030808
   1400307fd:	and    r14d,0xfffffff7
   140030801:	cmp    r12d,r11d
   140030804:	cmovg  r12d,r11d
   140030808:	mov    r13d,DWORD PTR [rsp+0x64]
   14003080d:	mov    rax,r8
   140030810:	lea    rbx,[rbp+0x1cf]
   140030817:	neg    rax
   14003081a:	sbb    ecx,ecx
   14003081c:	and    ecx,edx
   14003081e:	mov    DWORD PTR [rsp+0x48],ecx
   140030822:	mov    ecx,r12d
   140030825:	dec    r12d
   140030828:	test   ecx,ecx
   14003082a:	jg     0x140030831
   14003082c:	test   r8,r8
   14003082f:	je     0x140030851
   140030831:	xor    edx,edx
   140030833:	mov    rax,r8
   140030836:	movsxd rcx,r9d
   140030839:	div    rcx
   14003083c:	mov    r8,rax
   14003083f:	lea    eax,[rdx+0x30]
   140030842:	cmp    eax,0x39
   140030845:	jle    0x14003084a
   140030847:	add    eax,r13d
   14003084a:	mov    BYTE PTR [rbx],al
   14003084c:	dec    rbx
   14003084f:	jmp    0x140030822
   140030851:	mov    r13,QWORD PTR [rsp+0x70]
   140030856:	lea    rax,[rbp+0x1cf]
   14003085d:	sub    eax,ebx
   14003085f:	inc    rbx
   140030862:	mov    DWORD PTR [rsp+0x44],eax
   140030866:	test   r11d,r14d
   140030869:	je     0x140030978
   14003086f:	test   eax,eax
   140030871:	je     0x14003087c
   140030873:	cmp    BYTE PTR [rbx],0x30
   140030876:	je     0x140030978
   14003087c:	dec    rbx
   14003087f:	inc    DWORD PTR [rsp+0x44]
   140030883:	mov    BYTE PTR [rbx],0x30
   140030886:	jmp    0x140030978
   14003088b:	jne    0x14003089b
   14003088d:	cmp    r15b,0x67
   140030891:	jne    0x1400308d1
   140030893:	mov    r12d,0x1
   140030899:	jmp    0x1400308d1
   14003089b:	cmp    r12d,r11d
   14003089e:	cmovg  r12d,r11d
   1400308a2:	cmp    r12d,0xa3
   1400308a9:	jle    0x1400308d1
   1400308ab:	lea    edi,[r12+0x15d]
   1400308b3:	movsxd rcx,edi
   1400308b6:	call   0x1400297c4
   1400308bb:	mov    QWORD PTR [rbp-0x80],rax
   1400308bf:	test   rax,rax
   1400308c2:	je     0x1400308cb
   1400308c4:	mov    rbx,rax
   1400308c7:	mov    esi,edi
   1400308c9:	jmp    0x1400308d1
   1400308cb:	mov    r12d,0xa3
   1400308d1:	mov    rax,QWORD PTR [r13+0x0]
   1400308d5:	mov    rcx,QWORD PTR [rip+0x29914]        # 0x14005a1f0
   1400308dc:	add    r13,0x8
   1400308e0:	movsx  edi,r15b
   1400308e4:	movsxd rsi,esi
   1400308e7:	mov    QWORD PTR [rbp-0x60],rax
   1400308eb:	call   QWORD PTR [rip+0x10b0f]        # 0x140041400
   1400308f1:	lea    rcx,[rbp-0x58]
   1400308f5:	mov    r9d,edi
   1400308f8:	mov    QWORD PTR [rsp+0x30],rcx
   1400308fd:	mov    ecx,DWORD PTR [rsp+0x78]
   140030901:	mov    r8,rsi
   140030904:	mov    DWORD PTR [rsp+0x28],ecx
   140030908:	lea    rcx,[rbp-0x60]
   14003090c:	mov    rdx,rbx
   14003090f:	mov    DWORD PTR [rsp+0x20],r12d
   140030914:	call   rax
   140030916:	mov    edi,r14d
   140030919:	and    edi,0x80
   14003091f:	je     0x14003093c
   140030921:	test   r12d,r12d
   140030924:	jne    0x14003093c
   140030926:	mov    rcx,QWORD PTR [rip+0x298db]        # 0x14005a208
   14003092d:	call   QWORD PTR [rip+0x10acd]        # 0x140041400
   140030933:	lea    rdx,[rbp-0x58]
   140030937:	mov    rcx,rbx
   14003093a:	call   rax
   14003093c:	cmp    r15b,0x67
   140030940:	jne    0x14003095c
   140030942:	test   edi,edi
   140030944:	jne    0x14003095c
   140030946:	mov    rcx,QWORD PTR [rip+0x298b3]        # 0x14005a200
   14003094d:	call   QWORD PTR [rip+0x10aad]        # 0x140041400
   140030953:	lea    rdx,[rbp-0x58]
   140030957:	mov    rcx,rbx
   14003095a:	call   rax
   14003095c:	cmp    BYTE PTR [rbx],0x2d
   14003095f:	jne    0x140030969
   140030961:	bts    r14d,0x8
   140030966:	inc    rbx
   140030969:	mov    rcx,rbx
   14003096c:	call   0x14002e0d0
   140030971:	xor    r10d,r10d
   140030974:	mov    DWORD PTR [rsp+0x44],eax
   140030978:	cmp    DWORD PTR [rsp+0x60],r10d
   14003097d:	jne    0x1400306c8
   140030983:	test   r14b,0x40
   140030987:	je     0x1400309ba
   140030989:	bt     r14d,0x8
   14003098e:	jae    0x140030997
   140030990:	mov    BYTE PTR [rsp+0x4c],0x2d
   140030995:	jmp    0x1400309a2
   140030997:	test   r14b,0x1
   14003099b:	je     0x1400309ad
   14003099d:	mov    BYTE PTR [rsp+0x4c],0x2b
   1400309a2:	mov    edi,0x1
   1400309a7:	mov    DWORD PTR [rsp+0x48],edi
   1400309ab:	jmp    0x1400309be
   1400309ad:	test   r14b,0x2
   1400309b1:	je     0x1400309ba
   1400309b3:	mov    BYTE PTR [rsp+0x4c],0x20
   1400309b8:	jmp    0x1400309a2
   1400309ba:	mov    edi,DWORD PTR [rsp+0x48]
   1400309be:	mov    esi,DWORD PTR [rsp+0x54]
   1400309c2:	mov    r15,QWORD PTR [rsp+0x68]
   1400309c7:	sub    esi,DWORD PTR [rsp+0x44]
   1400309cb:	sub    esi,edi
   1400309cd:	test   r14b,0xc
   1400309d1:	jne    0x1400309e4
   1400309d3:	lea    r9,[rsp+0x40]
   1400309d8:	mov    r8,r15
   1400309db:	mov    edx,esi
   1400309dd:	mov    cl,0x20
   1400309df:	call   0x140030cd8
   1400309e4:	mov    rax,QWORD PTR [rbp-0x70]
   1400309e8:	lea    r9,[rsp+0x40]
   1400309ed:	lea    rcx,[rsp+0x4c]
   1400309f2:	mov    r8,r15
   1400309f5:	mov    edx,edi
   1400309f7:	mov    QWORD PTR [rsp+0x20],rax
   1400309fc:	call   0x140030d2c
   140030a01:	test   r14b,0x8
   140030a05:	je     0x140030a1e
   140030a07:	test   r14b,0x4
   140030a0b:	jne    0x140030a1e
   140030a0d:	lea    r9,[rsp+0x40]
   140030a12:	mov    r8,r15
   140030a15:	mov    edx,esi
   140030a17:	mov    cl,0x30
   140030a19:	call   0x140030cd8
   140030a1e:	cmp    DWORD PTR [rsp+0x58],0x0
   140030a23:	mov    edi,DWORD PTR [rsp+0x44]
   140030a27:	je     0x140030a99
   140030a29:	test   edi,edi
   140030a2b:	jle    0x140030a99
   140030a2d:	mov    r15,rbx
   140030a30:	movzx  r9d,WORD PTR [r15]
   140030a34:	lea    rdx,[rbp+0x1d0]
   140030a3b:	lea    rcx,[rbp-0x78]
   140030a3f:	mov    r8d,0x6
   140030a45:	dec    edi
   140030a47:	lea    r15,[r15+0x2]
   140030a4b:	call   0x1400311b0
   140030a50:	xor    r10d,r10d
   140030a53:	test   eax,eax
   140030a55:	jne    0x140030a8b
   140030a57:	mov    edx,DWORD PTR [rbp-0x78]
   140030a5a:	test   edx,edx
   140030a5c:	je     0x140030a8b
   140030a5e:	mov    rax,QWORD PTR [rbp-0x70]
   140030a62:	mov    r8,QWORD PTR [rsp+0x68]
   140030a67:	lea    r9,[rsp+0x40]
   140030a6c:	lea    rcx,[rbp+0x1d0]
   140030a73:	mov    QWORD PTR [rsp+0x20],rax
   140030a78:	call   0x140030d2c
   140030a7d:	xor    r10d,r10d
   140030a80:	test   edi,edi
   140030a82:	jne    0x140030a30
   140030a84:	mov    r15,QWORD PTR [rsp+0x68]
   140030a89:	jmp    0x140030ab7
   140030a8b:	mov    r15,QWORD PTR [rsp+0x68]
   140030a90:	or     edx,0xffffffff
   140030a93:	mov    DWORD PTR [rsp+0x40],edx
   140030a97:	jmp    0x140030abb
   140030a99:	mov    rax,QWORD PTR [rbp-0x70]
   140030a9d:	lea    r9,[rsp+0x40]
   140030aa2:	mov    r8,r15
   140030aa5:	mov    edx,edi
   140030aa7:	mov    rcx,rbx
   140030aaa:	mov    QWORD PTR [rsp+0x20],rax
   140030aaf:	call   0x140030d2c
   140030ab4:	xor    r10d,r10d
   140030ab7:	mov    edx,DWORD PTR [rsp+0x40]
   140030abb:	mov    DWORD PTR [rsp+0x50],edx
   140030abf:	test   edx,edx
   140030ac1:	js     0x1400306cc
   140030ac7:	test   r14b,0x4
   140030acb:	je     0x1400306cc
   140030ad1:	lea    r9,[rsp+0x40]
   140030ad6:	mov    r8,r15
   140030ad9:	mov    edx,esi
   140030adb:	mov    cl,0x20
   140030add:	call   0x140030cd8
   140030ae2:	mov    edx,DWORD PTR [rsp+0x40]
   140030ae6:	xor    r10d,r10d
   140030ae9:	mov    DWORD PTR [rsp+0x50],edx
   140030aed:	jmp    0x1400306cc
   140030af2:	cmp    r15b,0x49
   140030af6:	je     0x140030b3c
   140030af8:	cmp    r15b,0x68
   140030afc:	je     0x140030b33
   140030afe:	cmp    r15b,0x6c
   140030b02:	je     0x140030b18
   140030b04:	cmp    r15b,0x77
   140030b08:	jne    0x140030703
   140030b0e:	bts    r14d,0xb
   140030b13:	jmp    0x140030703
   140030b18:	cmp    BYTE PTR [rdi],0x6c
   140030b1b:	jne    0x140030b2a
   140030b1d:	inc    rdi
   140030b20:	bts    r14d,0xc
   140030b25:	jmp    0x140030703
   140030b2a:	or     r14d,0x10
   140030b2e:	jmp    0x140030703
   140030b33:	or     r14d,0x20
   140030b37:	jmp    0x140030703
   140030b3c:	mov    al,BYTE PTR [rdi]
   140030b3e:	bts    r14d,0xf
   140030b43:	cmp    al,0x36
   140030b45:	jne    0x140030b5b
   140030b47:	cmp    BYTE PTR [rdi+0x1],0x34
   140030b4b:	jne    0x140030b5b
   140030b4d:	add    rdi,0x2
   140030b51:	bts    r14d,0xf
   140030b56:	jmp    0x140030703
   140030b5b:	cmp    al,0x33
   140030b5d:	jne    0x140030b73
   140030b5f:	cmp    BYTE PTR [rdi+0x1],0x32
   140030b63:	jne    0x140030b73
   140030b65:	add    rdi,0x2
   140030b69:	btr    r14d,0xf
   140030b6e:	jmp    0x140030703
   140030b73:	sub    al,0x58
   140030b75:	cmp    al,0x20
   140030b77:	ja     0x140030b8d
   140030b79:	movabs rcx,0x120821001
   140030b83:	bt     rcx,rax
   140030b87:	jb     0x140030703
   140030b8d:	mov    DWORD PTR [rsp+0x5c],r10d
   140030b92:	lea    rdx,[rbp-0x58]
   140030b96:	movzx  ecx,r15b
   140030b9a:	mov    DWORD PTR [rsp+0x58],r10d
   140030b9f:	call   0x14002fe88
   140030ba4:	test   eax,eax
   140030ba6:	je     0x140030bc7
   140030ba8:	lea    r8,[rsp+0x40]
   140030bad:	mov    rdx,rsi
   140030bb0:	mov    cl,r15b
   140030bb3:	call   0x14002d950
   140030bb8:	mov    r15b,BYTE PTR [rdi]
   140030bbb:	inc    rdi
   140030bbe:	test   r15b,r15b
   140030bc1:	je     0x14003071a
   140030bc7:	lea    r8,[rsp+0x40]
   140030bcc:	mov    rdx,rsi
   140030bcf:	mov    cl,r15b
   140030bd2:	call   0x14002d950
   140030bd7:	mov    edx,DWORD PTR [rsp+0x40]
   140030bdb:	xor    r10d,r10d
   140030bde:	mov    DWORD PTR [rsp+0x50],edx
   140030be2:	jmp    0x1400306f1
   140030be7:	cmp    r15b,0x2a
   140030beb:	jne    0x140030c07
   140030bed:	mov    r12d,DWORD PTR [r13+0x0]
   140030bf1:	add    r13,0x8
   140030bf5:	test   r12d,r12d
   140030bf8:	jns    0x140030703
   140030bfe:	or     r12d,0xffffffff
   140030c02:	jmp    0x140030703
   140030c07:	lea    r12d,[r12+r12*4]
   140030c0b:	movsx  eax,r15b
   140030c0f:	lea    r12d,[r12-0x18]
   140030c14:	lea    r12d,[rax+r12*2]
   140030c18:	jmp    0x140030703
   140030c1d:	mov    r12d,r10d
   140030c20:	jmp    0x140030703
   140030c25:	cmp    r15b,0x2a
   140030c29:	jne    0x140030c47
   140030c2b:	mov    eax,DWORD PTR [r13+0x0]
   140030c2f:	add    r13,0x8
   140030c33:	mov    DWORD PTR [rsp+0x54],eax
   140030c37:	test   eax,eax
   140030c39:	jns    0x140030703
   140030c3f:	or     r14d,0x4
   140030c43:	neg    eax
   140030c45:	jmp    0x140030c58
   140030c47:	mov    eax,DWORD PTR [rsp+0x54]
   140030c4b:	lea    ecx,[rax+rax*4]
   140030c4e:	movsx  eax,r15b
   140030c52:	lea    eax,[rax+rcx*2]
   140030c55:	add    eax,0xffffffd0
   140030c58:	mov    DWORD PTR [rsp+0x54],eax
   140030c5c:	jmp    0x140030703
   140030c61:	cmp    r15b,0x20
   140030c65:	je     0x140030ca8
   140030c67:	cmp    r15b,0x23
   140030c6b:	je     0x140030c9e
   140030c6d:	cmp    r15b,0x2b
   140030c71:	je     0x140030c95
   140030c73:	cmp    r15b,0x2d
   140030c77:	je     0x140030c8c
   140030c79:	cmp    r15b,0x30
   140030c7d:	jne    0x140030703
   140030c83:	or     r14d,0x8
   140030c87:	jmp    0x140030703
   140030c8c:	or     r14d,0x4
   140030c90:	jmp    0x140030703
   140030c95:	or     r14d,0x1
   140030c99:	jmp    0x140030703
   140030c9e:	bts    r14d,0x7
   140030ca3:	jmp    0x140030703
   140030ca8:	or     r14d,0x2
   140030cac:	jmp    0x140030703
   140030cb1:	mov    DWORD PTR [rsp+0x78],r10d
   140030cb6:	mov    DWORD PTR [rsp+0x60],r10d
   140030cbb:	mov    DWORD PTR [rsp+0x54],r10d
   140030cc0:	mov    DWORD PTR [rsp+0x48],r10d
   140030cc5:	mov    r14d,r10d
   140030cc8:	or     r12d,0xffffffff
   140030ccc:	mov    DWORD PTR [rsp+0x58],r10d
   140030cd1:	jmp    0x140030703
   140030cd6:	int3   
   140030cd7:	int3   
   140030cd8:	test   edx,edx
   140030cda:	jle    0x140030d28
   140030cdc:	mov    QWORD PTR [rsp+0x8],rbx
   140030ce1:	mov    QWORD PTR [rsp+0x10],rbp
   140030ce6:	mov    QWORD PTR [rsp+0x18],rsi
   140030ceb:	push   rdi
   140030cec:	sub    rsp,0x20
   140030cf0:	mov    rdi,r9
   140030cf3:	mov    rsi,r8
   140030cf6:	mov    ebx,edx
   140030cf8:	mov    bpl,cl
   140030cfb:	mov    r8,rdi
   140030cfe:	mov    rdx,rsi
   140030d01:	mov    cl,bpl
   140030d04:	dec    ebx
   140030d06:	call   0x14002d950
   140030d0b:	cmp    DWORD PTR [rdi],0xffffffff
   140030d0e:	je     0x140030d14
   140030d10:	test   ebx,ebx
   140030d12:	jg     0x140030cfb
   140030d14:	mov    rbx,QWORD PTR [rsp+0x30]
   140030d19:	mov    rbp,QWORD PTR [rsp+0x38]
   140030d1e:	mov    rsi,QWORD PTR [rsp+0x40]
   140030d23:	add    rsp,0x20
   140030d27:	pop    rdi
   140030d28:	ret    
   140030d29:	int3   
   140030d2a:	int3   
   140030d2b:	int3   
   140030d2c:	mov    QWORD PTR [rsp+0x8],rbx
   140030d31:	mov    QWORD PTR [rsp+0x10],rbp
   140030d36:	mov    QWORD PTR [rsp+0x18],rsi
   140030d3b:	push   rdi
   140030d3c:	push   r14
   140030d3e:	push   r15
   140030d40:	sub    rsp,0x20
   140030d44:	test   BYTE PTR [r8+0x18],0x40
   140030d49:	mov    rbx,QWORD PTR [rsp+0x60]
   140030d4e:	mov    rdi,r9
   140030d51:	mov    r15d,DWORD PTR [rbx]
   140030d54:	mov    rbp,r8
   140030d57:	mov    esi,edx
   140030d59:	mov    r14,rcx
   140030d5c:	je     0x140030d6a
   140030d5e:	cmp    QWORD PTR [r8+0x10],0x0
   140030d63:	jne    0x140030d6a
   140030d65:	add    DWORD PTR [r9],edx
   140030d68:	jmp    0x140030da7
   140030d6a:	and    DWORD PTR [rbx],0x0
   140030d6d:	test   edx,edx
   140030d6f:	jle    0x140030da4
   140030d71:	mov    cl,BYTE PTR [r14]
   140030d74:	mov    r8,rdi
   140030d77:	mov    rdx,rbp
   140030d7a:	dec    esi
   140030d7c:	call   0x14002d950
   140030d81:	inc    r14
   140030d84:	cmp    DWORD PTR [rdi],0xffffffff
   140030d87:	jne    0x140030d9b
   140030d89:	cmp    DWORD PTR [rbx],0x2a
   140030d8c:	jne    0x140030d9f
   140030d8e:	mov    r8,rdi
   140030d91:	mov    rdx,rbp
   140030d94:	mov    cl,0x3f
   140030d96:	call   0x14002d950
   140030d9b:	test   esi,esi
   140030d9d:	jg     0x140030d71
   140030d9f:	cmp    DWORD PTR [rbx],0x0
   140030da2:	jne    0x140030da7
   140030da4:	mov    DWORD PTR [rbx],r15d
   140030da7:	mov    rbx,QWORD PTR [rsp+0x40]
   140030dac:	mov    rbp,QWORD PTR [rsp+0x48]
   140030db1:	mov    rsi,QWORD PTR [rsp+0x50]
   140030db6:	add    rsp,0x20
   140030dba:	pop    r15
   140030dbc:	pop    r14
   140030dbe:	pop    rdi
   140030dbf:	ret    
   140030dc0:	mov    QWORD PTR [rsp+0x8],rbx
   140030dc5:	mov    QWORD PTR [rsp+0x10],rsi
   140030dca:	push   rdi
   140030dcb:	sub    rsp,0x30
   140030dcf:	xor    edi,edi
   140030dd1:	lea    ecx,[rdi+0x1]
   140030dd4:	call   0x14002db4c
   140030dd9:	nop
   140030dda:	lea    ebx,[rdi+0x3]
   140030ddd:	mov    DWORD PTR [rsp+0x20],ebx
   140030de1:	cmp    ebx,DWORD PTR [rip+0x2cb49]        # 0x14005d930
   140030de7:	jge    0x140030e4c
   140030de9:	movsxd rsi,ebx
   140030dec:	mov    rax,QWORD PTR [rip+0x2cb35]        # 0x14005d928
   140030df3:	mov    rcx,QWORD PTR [rax+rsi*8]
   140030df7:	test   rcx,rcx
   140030dfa:	je     0x140030e48
   140030dfc:	test   BYTE PTR [rcx+0x18],0x83
   140030e00:	je     0x140030e12
   140030e02:	call   0x1400319a4
   140030e07:	cmp    eax,0xffffffff
   140030e0a:	je     0x140030e12
   140030e0c:	inc    edi
   140030e0e:	mov    DWORD PTR [rsp+0x24],edi
   140030e12:	cmp    ebx,0x14
   140030e15:	jl     0x140030e48
   140030e17:	mov    rax,QWORD PTR [rip+0x2cb0a]        # 0x14005d928
   140030e1e:	mov    rcx,QWORD PTR [rax+rsi*8]
   140030e22:	add    rcx,0x30
   140030e26:	call   QWORD PTR [rip+0x10634]        # 0x140041460
   140030e2c:	mov    rcx,QWORD PTR [rip+0x2caf5]        # 0x14005d928
   140030e33:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140030e37:	call   0x1400273dc
   140030e3c:	mov    rax,QWORD PTR [rip+0x2cae5]        # 0x14005d928
   140030e43:	and    QWORD PTR [rax+rsi*8],0x0
   140030e48:	inc    ebx
   140030e4a:	jmp    0x140030ddd
   140030e4c:	mov    ecx,0x1
   140030e51:	call   0x14002dd34
   140030e56:	mov    eax,edi
   140030e58:	mov    rbx,QWORD PTR [rsp+0x40]
   140030e5d:	mov    rsi,QWORD PTR [rsp+0x48]
   140030e62:	add    rsp,0x30
   140030e66:	pop    rdi
   140030e67:	ret    
   140030e68:	rex push rbx
   140030e6a:	sub    rsp,0x20
   140030e6e:	mov    rbx,rcx
   140030e71:	test   rcx,rcx
   140030e74:	jne    0x140030e80
   140030e76:	add    rsp,0x20
   140030e7a:	pop    rbx
   140030e7b:	jmp    0x140030f3c
   140030e80:	call   0x140030eb4
   140030e85:	test   eax,eax
   140030e87:	je     0x140030e8e
   140030e89:	or     eax,0xffffffff
   140030e8c:	jmp    0x140030eae
   140030e8e:	test   DWORD PTR [rbx+0x18],0x4000
   140030e95:	je     0x140030eac
   140030e97:	mov    rcx,rbx
   140030e9a:	call   0x14002f3b4
   140030e9f:	mov    ecx,eax
   140030ea1:	call   0x140031a0c
   140030ea6:	neg    eax
   140030ea8:	sbb    eax,eax
   140030eaa:	jmp    0x140030eae
   140030eac:	xor    eax,eax
   140030eae:	add    rsp,0x20
   140030eb2:	pop    rbx
   140030eb3:	ret    
   140030eb4:	mov    QWORD PTR [rsp+0x8],rbx
   140030eb9:	mov    QWORD PTR [rsp+0x10],rsi
   140030ebe:	push   rdi
   140030ebf:	sub    rsp,0x20
   140030ec3:	mov    eax,DWORD PTR [rcx+0x18]
   140030ec6:	xor    esi,esi
   140030ec8:	mov    rbx,rcx
   140030ecb:	and    al,0x3
   140030ecd:	cmp    al,0x2
   140030ecf:	jne    0x140030f10
   140030ed1:	test   DWORD PTR [rcx+0x18],0x108
   140030ed8:	je     0x140030f10
   140030eda:	mov    edi,DWORD PTR [rcx]
   140030edc:	sub    edi,DWORD PTR [rcx+0x10]
   140030edf:	test   edi,edi
   140030ee1:	jle    0x140030f10
   140030ee3:	call   0x14002f3b4
   140030ee8:	mov    rdx,QWORD PTR [rbx+0x10]
   140030eec:	mov    r8d,edi
   140030eef:	mov    ecx,eax
   140030ef1:	call   0x14002f450
   140030ef6:	cmp    eax,edi
   140030ef8:	jne    0x140030f09
   140030efa:	mov    eax,DWORD PTR [rbx+0x18]
   140030efd:	test   al,al
   140030eff:	jns    0x140030f10
   140030f01:	and    eax,0xfffffffd
   140030f04:	mov    DWORD PTR [rbx+0x18],eax
   140030f07:	jmp    0x140030f10
   140030f09:	or     DWORD PTR [rbx+0x18],0x20
   140030f0d:	or     esi,0xffffffff
   140030f10:	mov    rcx,QWORD PTR [rbx+0x10]
   140030f14:	and    DWORD PTR [rbx+0x8],0x0
   140030f18:	mov    eax,esi
   140030f1a:	mov    rsi,QWORD PTR [rsp+0x38]
   140030f1f:	mov    QWORD PTR [rbx],rcx
   140030f22:	mov    rbx,QWORD PTR [rsp+0x30]
   140030f27:	add    rsp,0x20
   140030f2b:	pop    rdi
   140030f2c:	ret    
   140030f2d:	int3   
   140030f2e:	int3   
   140030f2f:	int3   
   140030f30:	mov    ecx,0x1
   140030f35:	jmp    0x140030f3c
   140030f3a:	int3   
   140030f3b:	int3   
   140030f3c:	mov    QWORD PTR [rsp+0x8],rbx
   140030f41:	mov    QWORD PTR [rsp+0x10],rsi
   140030f46:	mov    QWORD PTR [rsp+0x18],rdi
   140030f4b:	push   r13
   140030f4d:	push   r14
   140030f4f:	push   r15
   140030f51:	sub    rsp,0x30
   140030f55:	mov    r14d,ecx
   140030f58:	xor    esi,esi
   140030f5a:	xor    edi,edi
   140030f5c:	lea    ecx,[rsi+0x1]
   140030f5f:	call   0x14002db4c
   140030f64:	nop
   140030f65:	xor    ebx,ebx
   140030f67:	or     r13d,0xffffffff
   140030f6b:	mov    DWORD PTR [rsp+0x20],ebx
   140030f6f:	cmp    ebx,DWORD PTR [rip+0x2c9bb]        # 0x14005d930
   140030f75:	jge    0x140030ff5
   140030f77:	movsxd r15,ebx
   140030f7a:	mov    rax,QWORD PTR [rip+0x2c9a7]        # 0x14005d928
   140030f81:	mov    rdx,QWORD PTR [rax+r15*8]
   140030f85:	test   rdx,rdx
   140030f88:	je     0x140030fee
   140030f8a:	test   BYTE PTR [rdx+0x18],0x83
   140030f8e:	je     0x140030fee
   140030f90:	mov    ecx,ebx
   140030f92:	call   0x14002cd24
   140030f97:	nop
   140030f98:	mov    rax,QWORD PTR [rip+0x2c989]        # 0x14005d928
   140030f9f:	mov    rcx,QWORD PTR [rax+r15*8]
   140030fa3:	test   BYTE PTR [rcx+0x18],0x83
   140030fa7:	je     0x140030fdc
   140030fa9:	cmp    r14d,0x1
   140030fad:	jne    0x140030fc1
   140030faf:	call   0x140030e68
   140030fb4:	cmp    eax,r13d
   140030fb7:	je     0x140030fdc
   140030fb9:	inc    esi
   140030fbb:	mov    DWORD PTR [rsp+0x24],esi
   140030fbf:	jmp    0x140030fdc
   140030fc1:	test   r14d,r14d
   140030fc4:	jne    0x140030fdc
   140030fc6:	test   BYTE PTR [rcx+0x18],0x2
   140030fca:	je     0x140030fdc
   140030fcc:	call   0x140030e68
   140030fd1:	cmp    eax,r13d
   140030fd4:	cmove  edi,r13d
   140030fd8:	mov    DWORD PTR [rsp+0x28],edi
   140030fdc:	mov    rdx,QWORD PTR [rip+0x2c945]        # 0x14005d928
   140030fe3:	mov    rdx,QWORD PTR [rdx+r15*8]
   140030fe7:	mov    ecx,ebx
   140030fe9:	call   0x14002cda8
   140030fee:	inc    ebx
   140030ff0:	jmp    0x140030f6b
   140030ff5:	mov    ecx,0x1
   140030ffa:	call   0x14002dd34
   140030fff:	cmp    r14d,0x1
   140031003:	cmove  edi,esi
   140031006:	mov    eax,edi
   140031008:	mov    rbx,QWORD PTR [rsp+0x50]
   14003100d:	mov    rsi,QWORD PTR [rsp+0x58]
   140031012:	mov    rdi,QWORD PTR [rsp+0x60]
   140031017:	add    rsp,0x30
   14003101b:	pop    r15
   14003101d:	pop    r14
   14003101f:	pop    r13
   140031021:	ret    
   140031022:	int3   
   140031023:	int3   
   140031024:	mov    QWORD PTR [rsp+0x8],rbx
   140031029:	mov    QWORD PTR [rsp+0x18],rsi
   14003102e:	mov    WORD PTR [rsp+0x20],r9w
   140031034:	push   rdi
   140031035:	sub    rsp,0x60
   140031039:	mov    rdi,r8
   14003103c:	mov    rsi,rdx
   14003103f:	mov    rbx,rcx
   140031042:	test   rdx,rdx
   140031045:	jne    0x14003105a
   140031047:	test   r8,r8
   14003104a:	je     0x14003105a
   14003104c:	test   rcx,rcx
   14003104f:	je     0x140031053
   140031051:	and    DWORD PTR [rcx],edx
   140031053:	xor    eax,eax
   140031055:	jmp    0x1400310ef
   14003105a:	test   rcx,rcx
   14003105d:	je     0x140031062
   14003105f:	or     DWORD PTR [rcx],0xffffffff
   140031062:	cmp    r8,0x7fffffff
   140031069:	jbe    0x14003107e
   14003106b:	call   0x140029bf8
   140031070:	mov    ebx,0x16
   140031075:	mov    DWORD PTR [rax],ebx
   140031077:	call   0x140029b2c
   14003107c:	jmp    0x1400310ed
   14003107e:	mov    rdx,QWORD PTR [rsp+0x90]
   140031086:	lea    rcx,[rsp+0x40]
   14003108b:	call   0x140026f30
   140031090:	mov    rax,QWORD PTR [rsp+0x40]
   140031095:	cmp    QWORD PTR [rax+0x138],0x0
   14003109d:	jne    0x14003111e
   14003109f:	movzx  eax,WORD PTR [rsp+0x88]
   1400310a7:	mov    ecx,0xff
   1400310ac:	cmp    ax,cx
   1400310af:	jbe    0x140031101
   1400310b1:	test   rsi,rsi
   1400310b4:	je     0x1400310c8
   1400310b6:	test   rdi,rdi
   1400310b9:	je     0x1400310c8
   1400310bb:	mov    r8,rdi
   1400310be:	xor    edx,edx
   1400310c0:	mov    rcx,rsi
   1400310c3:	call   0x14002bb90
   1400310c8:	call   0x140029bf8
   1400310cd:	mov    DWORD PTR [rax],0x2a
   1400310d3:	call   0x140029bf8
   1400310d8:	mov    ebx,DWORD PTR [rax]
   1400310da:	cmp    BYTE PTR [rsp+0x58],0x0
   1400310df:	je     0x1400310ed
   1400310e1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400310e6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400310ed:	mov    eax,ebx
   1400310ef:	lea    r11,[rsp+0x60]
   1400310f4:	mov    rbx,QWORD PTR [r11+0x10]
   1400310f8:	mov    rsi,QWORD PTR [r11+0x20]
   1400310fc:	mov    rsp,r11
   1400310ff:	pop    rdi
   140031100:	ret    
   140031101:	test   rsi,rsi
   140031104:	je     0x140031111
   140031106:	test   rdi,rdi
   140031109:	je     0x140031198
   14003110f:	mov    BYTE PTR [rsi],al
   140031111:	test   rbx,rbx
   140031114:	je     0x14003116b
   140031116:	mov    DWORD PTR [rbx],0x1
   14003111c:	jmp    0x14003116b
   14003111e:	and    DWORD PTR [rsp+0x78],0x0
   140031123:	lea    rcx,[rsp+0x78]
   140031128:	lea    r8,[rsp+0x88]
   140031130:	mov    QWORD PTR [rsp+0x38],rcx
   140031135:	and    QWORD PTR [rsp+0x30],0x0
   14003113b:	mov    ecx,DWORD PTR [rax+0x4]
   14003113e:	mov    r9d,0x1
   140031144:	xor    edx,edx
   140031146:	mov    DWORD PTR [rsp+0x28],edi
   14003114a:	mov    QWORD PTR [rsp+0x20],rsi
   14003114f:	call   QWORD PTR [rip+0x101fb]        # 0x140041350
   140031155:	test   eax,eax
   140031157:	je     0x140031172
   140031159:	cmp    DWORD PTR [rsp+0x78],0x0
   14003115e:	jne    0x1400310c8
   140031164:	test   rbx,rbx
   140031167:	je     0x14003116b
   140031169:	mov    DWORD PTR [rbx],eax
   14003116b:	xor    ebx,ebx
   14003116d:	jmp    0x1400310da
   140031172:	call   QWORD PTR [rip+0x10260]        # 0x1400413d8
   140031178:	cmp    eax,0x7a
   14003117b:	jne    0x1400310c8
   140031181:	test   rsi,rsi
   140031184:	je     0x140031198
   140031186:	test   rdi,rdi
   140031189:	je     0x140031198
   14003118b:	mov    r8,rdi
   14003118e:	xor    edx,edx
   140031190:	mov    rcx,rsi
   140031193:	call   0x14002bb90
   140031198:	call   0x140029bf8
   14003119d:	mov    ebx,0x22
   1400311a2:	mov    DWORD PTR [rax],ebx
   1400311a4:	call   0x140029b2c
   1400311a9:	jmp    0x1400310da
   1400311ae:	int3   
   1400311af:	int3   
   1400311b0:	sub    rsp,0x38
   1400311b4:	and    QWORD PTR [rsp+0x20],0x0
   1400311ba:	call   0x140031024
   1400311bf:	add    rsp,0x38
   1400311c3:	ret    
   1400311c4:	mov    ecx,0x2
   1400311c9:	jmp    0x1400283b0
   1400311ce:	int3   
   1400311cf:	int3   
   1400311d0:	int3   
   1400311d1:	int3   
   1400311d2:	int3   
   1400311d3:	int3   
   1400311d4:	int3   
   1400311d5:	int3   
   1400311d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400311e0:	sub    rsp,0x10
   1400311e4:	mov    QWORD PTR [rsp],r10
   1400311e8:	mov    QWORD PTR [rsp+0x8],r11
   1400311ed:	xor    r11,r11
   1400311f0:	lea    r10,[rsp+0x18]
   1400311f5:	sub    r10,rax
   1400311f8:	cmovb  r10,r11
   1400311fc:	mov    r11,QWORD PTR gs:0x10
   140031205:	cmp    r10,r11
   140031208:	jae    0x140031220
   14003120a:	and    r10w,0xf000
   140031210:	lea    r11,[r11-0x1000]
   140031217:	mov    BYTE PTR [r11],0x0
   14003121b:	cmp    r10,r11
   14003121e:	jne    0x140031210
   140031220:	mov    r10,QWORD PTR [rsp]
   140031224:	mov    r11,QWORD PTR [rsp+0x8]
   140031229:	add    rsp,0x10
   14003122d:	ret    
   14003122e:	int3   
   14003122f:	int3   
   140031230:	sub    rsp,0x38
   140031234:	cmp    r9d,0xa
   140031238:	jne    0x140031248
   14003123a:	test   ecx,ecx
   14003123c:	jns    0x140031248
   14003123e:	mov    DWORD PTR [rsp+0x20],0x1
   140031246:	jmp    0x14003124d
   140031248:	and    DWORD PTR [rsp+0x20],0x0
   14003124d:	call   0x14003126c
   140031252:	add    rsp,0x38
   140031256:	ret    
   140031257:	int3   
   140031258:	sub    rsp,0x38
   14003125c:	and    DWORD PTR [rsp+0x20],0x0
   140031261:	call   0x14003126c
   140031266:	add    rsp,0x38
   14003126a:	ret    
   14003126b:	int3   
   14003126c:	mov    QWORD PTR [rsp+0x8],rbx
   140031271:	mov    QWORD PTR [rsp+0x10],rbp
   140031276:	mov    QWORD PTR [rsp+0x18],rsi
   14003127b:	push   rdi
   14003127c:	sub    rsp,0x20
   140031280:	xor    ebp,ebp
   140031282:	mov    esi,r9d
   140031285:	mov    rdi,r8
   140031288:	mov    r10,rdx
   14003128b:	mov    r11d,ecx
   14003128e:	test   rdx,rdx
   140031291:	jne    0x1400312ab
   140031293:	call   0x140029bf8
   140031298:	mov    ebx,0x16
   14003129d:	mov    DWORD PTR [rax],ebx
   14003129f:	call   0x140029b2c
   1400312a4:	mov    eax,ebx
   1400312a6:	jmp    0x140031367
   1400312ab:	test   r8,r8
   1400312ae:	je     0x140031293
   1400312b0:	mov    WORD PTR [rdx],bp
   1400312b3:	mov    edx,DWORD PTR [rsp+0x50]
   1400312b7:	mov    eax,edx
   1400312b9:	neg    eax
   1400312bb:	sbb    rcx,rcx
   1400312be:	neg    rcx
   1400312c1:	inc    rcx
   1400312c4:	cmp    r8,rcx
   1400312c7:	ja     0x1400312d5
   1400312c9:	call   0x140029bf8
   1400312ce:	mov    ebx,0x22
   1400312d3:	jmp    0x14003129d
   1400312d5:	lea    eax,[r9-0x2]
   1400312d9:	mov    ebx,0x22
   1400312de:	cmp    eax,ebx
   1400312e0:	ja     0x140031293
   1400312e2:	mov    rcx,rbp
   1400312e5:	mov    r8,r10
   1400312e8:	test   edx,edx
   1400312ea:	je     0x1400312fd
   1400312ec:	lea    eax,[rbx+0xb]
   1400312ef:	lea    r8,[r10+0x2]
   1400312f3:	lea    ecx,[rbx-0x21]
   1400312f6:	mov    WORD PTR [r10],ax
   1400312fa:	neg    r11d
   1400312fd:	mov    r9,r8
   140031300:	xor    edx,edx
   140031302:	mov    eax,r11d
   140031305:	div    esi
   140031307:	mov    r11d,eax
   14003130a:	cmp    edx,0x9
   14003130d:	jbe    0x140031315
   14003130f:	add    dx,0x57
   140031313:	jmp    0x140031319
   140031315:	add    dx,0x30
   140031319:	mov    WORD PTR [r8],dx
   14003131d:	inc    rcx
   140031320:	add    r8,0x2
   140031324:	test   eax,eax
   140031326:	je     0x14003132d
   140031328:	cmp    rcx,rdi
   14003132b:	jb     0x140031300
   14003132d:	cmp    rcx,rdi
   140031330:	jb     0x140031340
   140031332:	mov    WORD PTR [r10],bp
   140031336:	call   0x140029bf8
   14003133b:	jmp    0x14003129d
   140031340:	mov    WORD PTR [r8],bp
   140031344:	sub    r8,0x2
   140031348:	movzx  eax,WORD PTR [r9]
   14003134c:	movzx  ecx,WORD PTR [r8]
   140031350:	mov    WORD PTR [r8],ax
   140031354:	mov    WORD PTR [r9],cx
   140031358:	add    r9,0x2
   14003135c:	sub    r8,0x2
   140031360:	cmp    r9,r8
   140031363:	jb     0x140031348
   140031365:	xor    eax,eax
   140031367:	mov    rbx,QWORD PTR [rsp+0x30]
   14003136c:	mov    rbp,QWORD PTR [rsp+0x38]
   140031371:	mov    rsi,QWORD PTR [rsp+0x40]
   140031376:	add    rsp,0x20
   14003137a:	pop    rdi
   14003137b:	ret    
   14003137c:	xor    edx,edx
   14003137e:	lea    r8d,[rdx+0xa]
   140031382:	jmp    0x14002734c
   140031387:	int3   
   140031388:	sub    rsp,0x28
   14003138c:	xor    r9d,r9d
   14003138f:	mov    r11,r8
   140031392:	mov    r10,rcx
   140031395:	cmp    DWORD PTR [rip+0x2b274],r9d        # 0x14005c610
   14003139c:	jne    0x140031416
   14003139e:	test   r8,r8
   1400313a1:	je     0x14003140e
   1400313a3:	test   rcx,rcx
   1400313a6:	jne    0x1400313c2
   1400313a8:	call   0x140029bf8
   1400313ad:	mov    DWORD PTR [rax],0x16
   1400313b3:	call   0x140029b2c
   1400313b8:	mov    eax,0x7fffffff
   1400313bd:	add    rsp,0x28
   1400313c1:	ret    
   1400313c2:	test   rdx,rdx
   1400313c5:	je     0x1400313a8
   1400313c7:	sub    r10,rdx
   1400313ca:	movzx  ecx,WORD PTR [r10+rdx*1]
   1400313cf:	lea    eax,[rcx-0x41]
   1400313d2:	cmp    ax,0x19
   1400313d6:	ja     0x1400313dc
   1400313d8:	add    cx,0x20
   1400313dc:	movzx  r8d,WORD PTR [rdx]
   1400313e0:	lea    eax,[r8-0x41]
   1400313e4:	cmp    ax,0x19
   1400313e8:	ja     0x1400313ef
   1400313ea:	add    r8w,0x20
   1400313ef:	add    rdx,0x2
   1400313f3:	dec    r11
   1400313f6:	je     0x140031403
   1400313f8:	test   cx,cx
   1400313fb:	je     0x140031403
   1400313fd:	cmp    cx,r8w
   140031401:	je     0x1400313ca
   140031403:	movzx  eax,r8w
   140031407:	movzx  r9d,cx
   14003140b:	sub    r9d,eax
   14003140e:	mov    eax,r9d
   140031411:	add    rsp,0x28
   140031415:	ret    
   140031416:	add    rsp,0x28
   14003141a:	jmp    0x140031420
   14003141f:	int3   
   140031420:	mov    rax,rsp
   140031423:	mov    QWORD PTR [rax+0x8],rbx
   140031427:	mov    QWORD PTR [rax+0x10],rbp
   14003142b:	mov    QWORD PTR [rax+0x18],rsi
   14003142f:	mov    QWORD PTR [rax+0x20],rdi
   140031433:	push   r14
   140031435:	sub    rsp,0x40
   140031439:	xor    r14d,r14d
   14003143c:	mov    rbp,r8
   14003143f:	mov    rdi,rdx
   140031442:	mov    rsi,rcx
   140031445:	mov    eax,r14d
   140031448:	test   r8,r8
   14003144b:	je     0x14003151b
   140031451:	test   rcx,rcx
   140031454:	jne    0x140031470
   140031456:	call   0x140029bf8
   14003145b:	mov    DWORD PTR [rax],0x16
   140031461:	call   0x140029b2c
   140031466:	mov    eax,0x7fffffff
   14003146b:	jmp    0x14003151b
   140031470:	test   rdx,rdx
   140031473:	je     0x140031456
   140031475:	lea    rcx,[rsp+0x20]
   14003147a:	mov    rdx,r9
   14003147d:	call   0x140026f30
   140031482:	mov    rax,QWORD PTR [rsp+0x20]
   140031487:	cmp    QWORD PTR [rax+0x138],r14
   14003148e:	jne    0x1400314c9
   140031490:	sub    rsi,rdi
   140031493:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140031497:	lea    eax,[rbx-0x41]
   14003149a:	cmp    ax,0x19
   14003149e:	ja     0x1400314a4
   1400314a0:	add    bx,0x20
   1400314a4:	movzx  ecx,WORD PTR [rdi]
   1400314a7:	lea    eax,[rcx-0x41]
   1400314aa:	cmp    ax,0x19
   1400314ae:	ja     0x1400314b4
   1400314b0:	add    cx,0x20
   1400314b4:	add    rdi,0x2
   1400314b8:	dec    rbp
   1400314bb:	je     0x140031500
   1400314bd:	test   bx,bx
   1400314c0:	je     0x140031500
   1400314c2:	cmp    bx,cx
   1400314c5:	je     0x140031493
   1400314c7:	jmp    0x140031500
   1400314c9:	movzx  ecx,WORD PTR [rsi]
   1400314cc:	lea    rdx,[rsp+0x20]
   1400314d1:	call   0x14002ad50
   1400314d6:	movzx  ecx,WORD PTR [rdi]
   1400314d9:	lea    rdx,[rsp+0x20]
   1400314de:	movzx  ebx,ax
   1400314e1:	call   0x14002ad50
   1400314e6:	lea    rsi,[rsi+0x2]
   1400314ea:	lea    rdi,[rdi+0x2]
   1400314ee:	movzx  ecx,ax
   1400314f1:	dec    rbp
   1400314f4:	je     0x140031500
   1400314f6:	test   bx,bx
   1400314f9:	je     0x140031500
   1400314fb:	cmp    bx,ax
   1400314fe:	je     0x1400314c9
   140031500:	movzx  ecx,cx
   140031503:	movzx  eax,bx
   140031506:	sub    eax,ecx
   140031508:	cmp    BYTE PTR [rsp+0x38],r14b
   14003150d:	je     0x14003151b
   14003150f:	mov    rcx,QWORD PTR [rsp+0x30]
   140031514:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003151b:	mov    rbx,QWORD PTR [rsp+0x50]
   140031520:	mov    rbp,QWORD PTR [rsp+0x58]
   140031525:	mov    rsi,QWORD PTR [rsp+0x60]
   14003152a:	mov    rdi,QWORD PTR [rsp+0x68]
   14003152f:	add    rsp,0x40
   140031533:	pop    r14
   140031535:	ret    
   140031536:	int3   
   140031537:	int3   
   140031538:	mov    QWORD PTR [rsp+0x8],rbx
   14003153d:	mov    QWORD PTR [rsp+0x10],rsi
   140031542:	mov    QWORD PTR [rsp+0x18],rdi
   140031547:	push   r15
   140031549:	sub    rsp,0x20
   14003154d:	movsxd rbx,ecx
   140031550:	mov    rsi,rbx
   140031553:	sar    rsi,0x5
   140031557:	lea    r15,[rip+0x2d402]        # 0x14005e960
   14003155e:	and    ebx,0x1f
   140031561:	imul   rbx,rbx,0x58
   140031565:	mov    rdi,QWORD PTR [r15+rsi*8]
   140031569:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14003156e:	jne    0x1400315a2
   140031570:	mov    ecx,0xa
   140031575:	call   0x14002db4c
   14003157a:	nop
   14003157b:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   140031580:	jne    0x140031598
   140031582:	lea    rcx,[rbx+0x10]
   140031586:	add    rcx,rdi
   140031589:	mov    edx,0xfa0
   14003158e:	call   QWORD PTR [rip+0xfec4]        # 0x140041458
   140031594:	inc    DWORD PTR [rbx+rdi*1+0xc]
   140031598:	mov    ecx,0xa
   14003159d:	call   0x14002dd34
   1400315a2:	mov    rcx,QWORD PTR [r15+rsi*8]
   1400315a6:	add    rcx,0x10
   1400315aa:	add    rcx,rbx
   1400315ad:	call   QWORD PTR [rip+0xff3d]        # 0x1400414f0
   1400315b3:	mov    eax,0x1
   1400315b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400315bd:	mov    rsi,QWORD PTR [rsp+0x38]
   1400315c2:	mov    rdi,QWORD PTR [rsp+0x40]
   1400315c7:	add    rsp,0x20
   1400315cb:	pop    r15
   1400315cd:	ret    
   1400315ce:	int3   
   1400315cf:	int3   
   1400315d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400315d5:	mov    QWORD PTR [rsp+0x10],rdi
   1400315da:	push   r14
   1400315dc:	sub    rsp,0x20
   1400315e0:	test   ecx,ecx
   1400315e2:	js     0x140031653
   1400315e4:	cmp    ecx,DWORD PTR [rip+0x2d356]        # 0x14005e940
   1400315ea:	jae    0x140031653
   1400315ec:	movsxd rbx,ecx
   1400315ef:	lea    r14,[rip+0x2d36a]        # 0x14005e960
   1400315f6:	mov    rdi,rbx
   1400315f9:	and    ebx,0x1f
   1400315fc:	sar    rdi,0x5
   140031600:	imul   rbx,rbx,0x58
   140031604:	mov    rax,QWORD PTR [r14+rdi*8]
   140031608:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14003160d:	je     0x140031653
   14003160f:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   140031614:	je     0x140031653
   140031616:	cmp    DWORD PTR [rip+0x2a733],0x1        # 0x14005bd50
   14003161d:	jne    0x140031646
   14003161f:	test   ecx,ecx
   140031621:	je     0x140031639
   140031623:	dec    ecx
   140031625:	je     0x140031632
   140031627:	dec    ecx
   140031629:	jne    0x140031646
   14003162b:	mov    ecx,0xfffffff4
   140031630:	jmp    0x14003163e
   140031632:	mov    ecx,0xfffffff5
   140031637:	jmp    0x14003163e
   140031639:	mov    ecx,0xfffffff6
   14003163e:	xor    edx,edx
   140031640:	call   QWORD PTR [rip+0xff4a]        # 0x140041590
   140031646:	mov    rax,QWORD PTR [r14+rdi*8]
   14003164a:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14003164f:	xor    eax,eax
   140031651:	jmp    0x140031669
   140031653:	call   0x140029bf8
   140031658:	mov    DWORD PTR [rax],0x9
   14003165e:	call   0x140029b88
   140031663:	and    DWORD PTR [rax],0x0
   140031666:	or     eax,0xffffffff
   140031669:	mov    rbx,QWORD PTR [rsp+0x30]
   14003166e:	mov    rdi,QWORD PTR [rsp+0x38]
   140031673:	add    rsp,0x20
   140031677:	pop    r14
   140031679:	ret    
   14003167a:	int3   
   14003167b:	int3   
   14003167c:	rex push rbx
   14003167e:	sub    rsp,0x20
   140031682:	movsxd rbx,ecx
   140031685:	cmp    ebx,0xfffffffe
   140031688:	jne    0x14003169f
   14003168a:	call   0x140029b88
   14003168f:	and    DWORD PTR [rax],0x0
   140031692:	call   0x140029bf8
   140031697:	mov    DWORD PTR [rax],0x9
   14003169d:	jmp    0x1400316f5
   14003169f:	call   0x140028a64
   1400316a4:	test   eax,eax
   1400316a6:	js     0x1400316f5
   1400316a8:	test   ebx,ebx
   1400316aa:	js     0x1400316dd
   1400316ac:	cmp    ebx,DWORD PTR [rip+0x2d28e]        # 0x14005e940
   1400316b2:	jae    0x1400316dd
   1400316b4:	mov    rcx,rbx
   1400316b7:	mov    rax,rbx
   1400316ba:	lea    rdx,[rip+0x2d29f]        # 0x14005e960
   1400316c1:	sar    rax,0x5
   1400316c5:	and    ecx,0x1f
   1400316c8:	mov    rax,QWORD PTR [rdx+rax*8]
   1400316cc:	imul   rcx,rcx,0x58
   1400316d0:	test   BYTE PTR [rax+rcx*1+0x8],0x1
   1400316d5:	je     0x1400316dd
   1400316d7:	mov    rax,QWORD PTR [rax+rcx*1]
   1400316db:	jmp    0x1400316f9
   1400316dd:	call   0x140029b88
   1400316e2:	and    DWORD PTR [rax],0x0
   1400316e5:	call   0x140029bf8
   1400316ea:	mov    DWORD PTR [rax],0x9
   1400316f0:	call   0x140029b2c
   1400316f5:	or     rax,0xffffffffffffffff
   1400316f9:	add    rsp,0x20
   1400316fd:	pop    rbx
   1400316fe:	ret    
   1400316ff:	int3   
   140031700:	movsxd rdx,ecx
   140031703:	lea    rcx,[rip+0x2d256]        # 0x14005e960
   14003170a:	mov    rax,rdx
   14003170d:	and    edx,0x1f
   140031710:	sar    rax,0x5
   140031714:	imul   rdx,rdx,0x58
   140031718:	mov    rax,QWORD PTR [rcx+rax*8]
   14003171c:	lea    rcx,[rdx+0x10]
   140031720:	add    rcx,rax
   140031723:	rex.W jmp QWORD PTR [rip+0xfdce]        # 0x1400414f8
   14003172a:	int3   
   14003172b:	int3   
   14003172c:	mov    WORD PTR [rsp+0x8],cx
   140031731:	sub    rsp,0x38
   140031735:	mov    rcx,QWORD PTR [rip+0x28b94]        # 0x14005a2d0
   14003173c:	cmp    rcx,0xfffffffffffffffe
   140031740:	jne    0x14003174e
   140031742:	call   0x140031b18
   140031747:	mov    rcx,QWORD PTR [rip+0x28b82]        # 0x14005a2d0
   14003174e:	cmp    rcx,0xffffffffffffffff
   140031752:	jne    0x14003175b
   140031754:	mov    eax,0xffff
   140031759:	jmp    0x140031780
   14003175b:	and    QWORD PTR [rsp+0x20],0x0
   140031761:	lea    r9,[rsp+0x48]
   140031766:	lea    rdx,[rsp+0x40]
   14003176b:	mov    r8d,0x1
   140031771:	call   QWORD PTR [rip+0xfe21]        # 0x140041598
   140031777:	test   eax,eax
   140031779:	je     0x140031754
   14003177b:	movzx  eax,WORD PTR [rsp+0x40]
   140031780:	add    rsp,0x38
   140031784:	ret    
   140031785:	int3   
   140031786:	int3   
   140031787:	int3   
   140031788:	mov    QWORD PTR [rsp+0x8],rbx
   14003178d:	mov    QWORD PTR [rsp+0x10],rbp
   140031792:	push   rsi
   140031793:	push   rdi
   140031794:	push   r14
   140031796:	sub    rsp,0x20
   14003179a:	mov    rbx,rdx
   14003179d:	mov    r14d,ecx
   1400317a0:	call   0x140028a64
   1400317a5:	xor    edi,edi
   1400317a7:	test   eax,eax
   1400317a9:	jns    0x1400317b3
   1400317ab:	or     eax,0xffffffff
   1400317ae:	jmp    0x140031913
   1400317b3:	mov    rcx,rbx
   1400317b6:	call   0x14002f3b4
   1400317bb:	mov    ecx,DWORD PTR [rbx+0x18]
   1400317be:	movsxd rsi,eax
   1400317c1:	test   cl,0x82
   1400317c4:	jne    0x1400317df
   1400317c6:	call   0x140029bf8
   1400317cb:	mov    DWORD PTR [rax],0x9
   1400317d1:	or     DWORD PTR [rbx+0x18],0x20
   1400317d5:	mov    eax,0xffff
   1400317da:	jmp    0x140031913
   1400317df:	test   cl,0x40
   1400317e2:	je     0x1400317f1
   1400317e4:	call   0x140029bf8
   1400317e9:	mov    DWORD PTR [rax],0x22
   1400317ef:	jmp    0x1400317d1
   1400317f1:	test   cl,0x1
   1400317f4:	je     0x14003180f
   1400317f6:	mov    DWORD PTR [rbx+0x8],edi
   1400317f9:	test   cl,0x10
   1400317fc:	je     0x14003188c
   140031802:	mov    rax,QWORD PTR [rbx+0x10]
   140031806:	and    ecx,0xfffffffe
   140031809:	mov    QWORD PTR [rbx],rax
   14003180c:	mov    DWORD PTR [rbx+0x18],ecx
   14003180f:	mov    eax,DWORD PTR [rbx+0x18]
   140031812:	mov    DWORD PTR [rbx+0x8],edi
   140031815:	and    eax,0xffffffef
   140031818:	or     eax,0x2
   14003181b:	mov    DWORD PTR [rbx+0x18],eax
   14003181e:	test   eax,0x10c
   140031823:	jne    0x140031854
   140031825:	call   0x14002ccb4
   14003182a:	add    rax,0x30
   14003182e:	cmp    rbx,rax
   140031831:	je     0x140031841
   140031833:	call   0x14002ccb4
   140031838:	add    rax,0x60
   14003183c:	cmp    rbx,rax
   14003183f:	jne    0x14003184c
   140031841:	mov    ecx,esi
   140031843:	call   0x14002f3dc
   140031848:	test   eax,eax
   14003184a:	jne    0x140031854
   14003184c:	mov    rcx,rbx
   14003184f:	call   0x14002fe34
   140031854:	test   DWORD PTR [rbx+0x18],0x108
   14003185b:	je     0x1400318eb
   140031861:	mov    ebp,DWORD PTR [rbx]
   140031863:	mov    rdx,QWORD PTR [rbx+0x10]
   140031867:	sub    ebp,DWORD PTR [rbx+0x10]
   14003186a:	lea    rax,[rdx+0x2]
   14003186e:	mov    QWORD PTR [rbx],rax
   140031871:	mov    eax,DWORD PTR [rbx+0x24]
   140031874:	sub    eax,0x2
   140031877:	mov    DWORD PTR [rbx+0x8],eax
   14003187a:	test   ebp,ebp
   14003187c:	jle    0x140031897
   14003187e:	mov    r8d,ebp
   140031881:	mov    ecx,esi
   140031883:	call   0x14002f450
   140031888:	mov    edi,eax
   14003188a:	jmp    0x1400318e1
   14003188c:	or     ecx,0x20
   14003188f:	mov    DWORD PTR [rbx+0x18],ecx
   140031892:	jmp    0x1400317d5
   140031897:	lea    eax,[rsi+0x2]
   14003189a:	cmp    eax,0x1
   14003189d:	jbe    0x1400318bd
   14003189f:	mov    rcx,rsi
   1400318a2:	mov    rax,rsi
   1400318a5:	lea    rdx,[rip+0x2d0b4]        # 0x14005e960
   1400318ac:	and    ecx,0x1f
   1400318af:	sar    rax,0x5
   1400318b3:	imul   rcx,rcx,0x58
   1400318b7:	add    rcx,QWORD PTR [rdx+rax*8]
   1400318bb:	jmp    0x1400318c4
   1400318bd:	lea    rcx,[rip+0x2776c]        # 0x140059030
   1400318c4:	test   BYTE PTR [rcx+0x8],0x20
   1400318c8:	je     0x1400318e1
   1400318ca:	xor    edx,edx
   1400318cc:	mov    ecx,esi
   1400318ce:	lea    r8d,[rdx+0x2]
   1400318d2:	call   0x14002fcb0
   1400318d7:	cmp    rax,0xffffffffffffffff
   1400318db:	je     0x1400317d1
   1400318e1:	mov    rax,QWORD PTR [rbx+0x10]
   1400318e5:	mov    WORD PTR [rax],r14w
   1400318e9:	jmp    0x140031907
   1400318eb:	mov    ebp,0x2
   1400318f0:	lea    rdx,[rsp+0x50]
   1400318f5:	mov    ecx,esi
   1400318f7:	mov    r8d,ebp
   1400318fa:	mov    WORD PTR [rsp+0x50],r14w
   140031900:	call   0x14002f450
   140031905:	mov    edi,eax
   140031907:	cmp    edi,ebp
   140031909:	jne    0x1400317d1
   14003190f:	movzx  eax,r14w
   140031913:	mov    rbx,QWORD PTR [rsp+0x40]
   140031918:	mov    rbp,QWORD PTR [rsp+0x48]
   14003191d:	add    rsp,0x20
   140031921:	pop    r14
   140031923:	pop    rdi
   140031924:	pop    rsi
   140031925:	ret    
   140031926:	int3   
   140031927:	int3   
   140031928:	mov    QWORD PTR [rsp+0x8],rbx
   14003192d:	push   rdi
   14003192e:	sub    rsp,0x20
   140031932:	or     edi,0xffffffff
   140031935:	mov    rbx,rcx
   140031938:	test   rcx,rcx
   14003193b:	jne    0x140031951
   14003193d:	call   0x140029bf8
   140031942:	mov    DWORD PTR [rax],0x16
   140031948:	call   0x140029b2c
   14003194d:	or     eax,edi
   14003194f:	jmp    0x140031997
   140031951:	test   BYTE PTR [rcx+0x18],0x83
   140031955:	je     0x140031991
   140031957:	call   0x140030eb4
   14003195c:	mov    rcx,rbx
   14003195f:	mov    edi,eax
   140031961:	call   0x140031dcc
   140031966:	mov    rcx,rbx
   140031969:	call   0x14002f3b4
   14003196e:	mov    ecx,eax
   140031970:	call   0x140031c30
   140031975:	test   eax,eax
   140031977:	jns    0x14003197e
   140031979:	or     edi,0xffffffff
   14003197c:	jmp    0x140031991
   14003197e:	mov    rcx,QWORD PTR [rbx+0x28]
   140031982:	test   rcx,rcx
   140031985:	je     0x140031991
   140031987:	call   0x1400273dc
   14003198c:	and    QWORD PTR [rbx+0x28],0x0
   140031991:	and    DWORD PTR [rbx+0x18],0x0
   140031995:	mov    eax,edi
   140031997:	mov    rbx,QWORD PTR [rsp+0x30]
   14003199c:	add    rsp,0x20
   1400319a0:	pop    rdi
   1400319a1:	ret    
   1400319a2:	int3   
   1400319a3:	int3   
   1400319a4:	mov    QWORD PTR [rsp+0x10],rbx
   1400319a9:	mov    QWORD PTR [rsp+0x8],rcx
   1400319ae:	push   rdi
   1400319af:	sub    rsp,0x20
   1400319b3:	mov    rbx,rcx
   1400319b6:	or     edi,0xffffffff
   1400319b9:	xor    eax,eax
   1400319bb:	test   rcx,rcx
   1400319be:	setne  al
   1400319c1:	test   eax,eax
   1400319c3:	jne    0x1400319d9
   1400319c5:	call   0x140029bf8
   1400319ca:	mov    DWORD PTR [rax],0x16
   1400319d0:	call   0x140029b2c
   1400319d5:	mov    eax,edi
   1400319d7:	jmp    0x1400319ff
   1400319d9:	test   BYTE PTR [rcx+0x18],0x40
   1400319dd:	je     0x1400319e5
   1400319df:	and    DWORD PTR [rcx+0x18],0x0
   1400319e3:	jmp    0x1400319d5
   1400319e5:	call   0x14002ccbc
   1400319ea:	nop
   1400319eb:	mov    rcx,rbx
   1400319ee:	call   0x140031928
   1400319f3:	mov    edi,eax
   1400319f5:	mov    rcx,rbx
   1400319f8:	call   0x14002cd58
   1400319fd:	jmp    0x1400319d5
   1400319ff:	mov    rbx,QWORD PTR [rsp+0x38]
   140031a04:	add    rsp,0x20
   140031a08:	pop    rdi
   140031a09:	ret    
   140031a0a:	int3   
   140031a0b:	int3   
   140031a0c:	mov    QWORD PTR [rsp+0x18],rbx
   140031a11:	mov    DWORD PTR [rsp+0x8],ecx
   140031a15:	push   rsi
   140031a16:	push   rdi
   140031a17:	push   r14
   140031a19:	sub    rsp,0x20
   140031a1d:	movsxd rdi,ecx
   140031a20:	cmp    edi,0xfffffffe
   140031a23:	jne    0x140031a35
   140031a25:	call   0x140029bf8
   140031a2a:	mov    DWORD PTR [rax],0x9
   140031a30:	jmp    0x140031ae5
   140031a35:	call   0x140028a64
   140031a3a:	test   eax,eax
   140031a3c:	jns    0x140031a48
   140031a3e:	mov    eax,0x9
   140031a43:	jmp    0x140031ae8
   140031a48:	test   edi,edi
   140031a4a:	js     0x140031ad5
   140031a50:	cmp    edi,DWORD PTR [rip+0x2ceea]        # 0x14005e940
   140031a56:	jae    0x140031ad5
   140031a58:	mov    rbx,rdi
   140031a5b:	mov    rsi,rdi
   140031a5e:	sar    rsi,0x5
   140031a62:	lea    r14,[rip+0x2cef7]        # 0x14005e960
   140031a69:	and    ebx,0x1f
   140031a6c:	imul   rbx,rbx,0x58
   140031a70:	mov    rax,QWORD PTR [r14+rsi*8]
   140031a74:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140031a79:	and    ecx,0x1
   140031a7c:	je     0x140031ad5
   140031a7e:	mov    ecx,edi
   140031a80:	call   0x140031538
   140031a85:	nop
   140031a86:	mov    rax,QWORD PTR [r14+rsi*8]
   140031a8a:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140031a8f:	je     0x140031abc
   140031a91:	mov    ecx,edi
   140031a93:	call   0x14003167c
   140031a98:	mov    rcx,rax
   140031a9b:	call   QWORD PTR [rip+0xfaff]        # 0x1400415a0
   140031aa1:	test   eax,eax
   140031aa3:	jne    0x140031aaf
   140031aa5:	call   QWORD PTR [rip+0xf92d]        # 0x1400413d8
   140031aab:	mov    ebx,eax
   140031aad:	jmp    0x140031ab1
   140031aaf:	xor    ebx,ebx
   140031ab1:	test   ebx,ebx
   140031ab3:	je     0x140031aca
   140031ab5:	call   0x140029b88
   140031aba:	mov    DWORD PTR [rax],ebx
   140031abc:	call   0x140029bf8
   140031ac1:	mov    DWORD PTR [rax],0x9
   140031ac7:	or     ebx,0xffffffff
   140031aca:	mov    ecx,edi
   140031acc:	call   0x140031700
   140031ad1:	mov    eax,ebx
   140031ad3:	jmp    0x140031ae8
   140031ad5:	call   0x140029bf8
   140031ada:	mov    DWORD PTR [rax],0x9
   140031ae0:	call   0x140029b2c
   140031ae5:	or     eax,0xffffffff
   140031ae8:	mov    rbx,QWORD PTR [rsp+0x50]
   140031aed:	add    rsp,0x20
   140031af1:	pop    r14
   140031af3:	pop    rdi
   140031af4:	pop    rsi
   140031af5:	ret    
   140031af6:	int3   
   140031af7:	int3   
   140031af8:	sub    rsp,0x28
   140031afc:	mov    rcx,QWORD PTR [rip+0x287cd]        # 0x14005a2d0
   140031b03:	lea    rax,[rcx+0x2]
   140031b07:	cmp    rax,0x1
   140031b0b:	jbe    0x140031b13
   140031b0d:	call   QWORD PTR [rip+0xf875]        # 0x140041388
   140031b13:	add    rsp,0x28
   140031b17:	ret    
   140031b18:	sub    rsp,0x48
   140031b1c:	and    QWORD PTR [rsp+0x30],0x0
   140031b22:	and    DWORD PTR [rsp+0x28],0x0
   140031b27:	mov    r8d,0x3
   140031b2d:	lea    rcx,[rip+0x1223c]        # 0x140043d70
   140031b34:	xor    r9d,r9d
   140031b37:	mov    edx,0x40000000
   140031b3c:	mov    DWORD PTR [rsp+0x20],r8d
   140031b41:	call   QWORD PTR [rip+0xf7e9]        # 0x140041330
   140031b47:	mov    QWORD PTR [rip+0x28782],rax        # 0x14005a2d0
   140031b4e:	add    rsp,0x48
   140031b52:	ret    
   140031b53:	int3   
   140031b54:	mov    QWORD PTR [rsp+0x10],rsi
   140031b59:	push   rbp
   140031b5a:	push   rdi
   140031b5b:	push   r14
   140031b5d:	mov    rbp,rsp
   140031b60:	sub    rsp,0x60
   140031b64:	movsxd rdi,ecx
   140031b67:	mov    r14d,edx
   140031b6a:	lea    rcx,[rbp-0x20]
   140031b6e:	mov    rdx,r8
   140031b71:	call   0x140026f30
   140031b76:	lea    eax,[rdi+0x1]
   140031b79:	cmp    eax,0x100
   140031b7e:	ja     0x140031b91
   140031b80:	mov    rax,QWORD PTR [rbp-0x20]
   140031b84:	mov    rcx,QWORD PTR [rax+0x108]
   140031b8b:	movzx  eax,WORD PTR [rcx+rdi*2]
   140031b8f:	jmp    0x140031c0a
   140031b91:	mov    esi,edi
   140031b93:	lea    rdx,[rbp-0x20]
   140031b97:	sar    esi,0x8
   140031b9a:	movzx  ecx,sil
   140031b9e:	call   0x14002fe88
   140031ba3:	mov    edx,0x1
   140031ba8:	test   eax,eax
   140031baa:	je     0x140031bbe
   140031bac:	mov    BYTE PTR [rbp+0x38],sil
   140031bb0:	mov    BYTE PTR [rbp+0x39],dil
   140031bb4:	mov    BYTE PTR [rbp+0x3a],0x0
   140031bb8:	lea    r9d,[rdx+0x1]
   140031bbc:	jmp    0x140031bc9
   140031bbe:	mov    BYTE PTR [rbp+0x38],dil
   140031bc2:	mov    BYTE PTR [rbp+0x39],0x0
   140031bc6:	mov    r9d,edx
   140031bc9:	mov    rax,QWORD PTR [rbp-0x20]
   140031bcd:	mov    DWORD PTR [rsp+0x30],edx
   140031bd1:	lea    r8,[rbp+0x38]
   140031bd5:	mov    ecx,DWORD PTR [rax+0x4]
   140031bd8:	lea    rax,[rbp+0x20]
   140031bdc:	mov    DWORD PTR [rsp+0x28],ecx
   140031be0:	lea    rcx,[rbp-0x20]
   140031be4:	mov    QWORD PTR [rsp+0x20],rax
   140031be9:	call   0x14002f1d0
   140031bee:	test   eax,eax
   140031bf0:	jne    0x140031c06
   140031bf2:	cmp    BYTE PTR [rbp-0x8],al
   140031bf5:	je     0x140031c02
   140031bf7:	mov    rax,QWORD PTR [rbp-0x10]
   140031bfb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140031c02:	xor    eax,eax
   140031c04:	jmp    0x140031c1e
   140031c06:	movzx  eax,WORD PTR [rbp+0x20]
   140031c0a:	and    eax,r14d
   140031c0d:	cmp    BYTE PTR [rbp-0x8],0x0
   140031c11:	je     0x140031c1e
   140031c13:	mov    rcx,QWORD PTR [rbp-0x10]
   140031c17:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140031c1e:	mov    rsi,QWORD PTR [rsp+0x88]
   140031c26:	add    rsp,0x60
   140031c2a:	pop    r14
   140031c2c:	pop    rdi
   140031c2d:	pop    rbp
   140031c2e:	ret    
   140031c2f:	int3   
   140031c30:	mov    QWORD PTR [rsp+0x18],rbx
   140031c35:	mov    DWORD PTR [rsp+0x8],ecx
   140031c39:	push   rsi
   140031c3a:	push   rdi
   140031c3b:	push   r14
   140031c3d:	sub    rsp,0x20
   140031c41:	movsxd rdi,ecx
   140031c44:	cmp    edi,0xfffffffe
   140031c47:	jne    0x140031c61
   140031c49:	call   0x140029b88
   140031c4e:	and    DWORD PTR [rax],0x0
   140031c51:	call   0x140029bf8
   140031c56:	mov    DWORD PTR [rax],0x9
   140031c5c:	jmp    0x140031cef
   140031c61:	call   0x140028a64
   140031c66:	test   eax,eax
   140031c68:	js     0x140031cef
   140031c6e:	test   edi,edi
   140031c70:	js     0x140031cd7
   140031c72:	cmp    edi,DWORD PTR [rip+0x2ccc8]        # 0x14005e940
   140031c78:	jae    0x140031cd7
   140031c7a:	mov    rbx,rdi
   140031c7d:	mov    rsi,rdi
   140031c80:	sar    rsi,0x5
   140031c84:	lea    r14,[rip+0x2ccd5]        # 0x14005e960
   140031c8b:	and    ebx,0x1f
   140031c8e:	imul   rbx,rbx,0x58
   140031c92:	mov    rax,QWORD PTR [r14+rsi*8]
   140031c96:	movsx  ecx,BYTE PTR [rbx+rax*1+0x8]
   140031c9b:	and    ecx,0x1
   140031c9e:	je     0x140031cd7
   140031ca0:	mov    ecx,edi
   140031ca2:	call   0x140031538
   140031ca7:	nop
   140031ca8:	mov    rax,QWORD PTR [r14+rsi*8]
   140031cac:	test   BYTE PTR [rbx+rax*1+0x8],0x1
   140031cb1:	je     0x140031cbe
   140031cb3:	mov    ecx,edi
   140031cb5:	call   0x140031d00
   140031cba:	mov    ebx,eax
   140031cbc:	jmp    0x140031ccc
   140031cbe:	call   0x140029bf8
   140031cc3:	mov    DWORD PTR [rax],0x9
   140031cc9:	or     ebx,0xffffffff
   140031ccc:	mov    ecx,edi
   140031cce:	call   0x140031700
   140031cd3:	mov    eax,ebx
   140031cd5:	jmp    0x140031cf2
   140031cd7:	call   0x140029b88
   140031cdc:	and    DWORD PTR [rax],0x0
   140031cdf:	call   0x140029bf8
   140031ce4:	mov    DWORD PTR [rax],0x9
   140031cea:	call   0x140029b2c
   140031cef:	or     eax,0xffffffff
   140031cf2:	mov    rbx,QWORD PTR [rsp+0x50]
   140031cf7:	add    rsp,0x20
   140031cfb:	pop    r14
   140031cfd:	pop    rdi
   140031cfe:	pop    rsi
   140031cff:	ret    
   140031d00:	mov    QWORD PTR [rsp+0x8],rbx
   140031d05:	push   rdi
   140031d06:	sub    rsp,0x20
   140031d0a:	movsxd rdi,ecx
   140031d0d:	call   0x140028a64
   140031d12:	test   eax,eax
   140031d14:	jns    0x140031d1e
   140031d16:	or     eax,0xffffffff
   140031d19:	jmp    0x140031dc0
   140031d1e:	mov    ecx,edi
   140031d20:	call   0x14003167c
   140031d25:	cmp    rax,0xffffffffffffffff
   140031d29:	je     0x140031d84
   140031d2b:	mov    rax,QWORD PTR [rip+0x2cc2e]        # 0x14005e960
   140031d32:	mov    ecx,0x2
   140031d37:	cmp    edi,0x1
   140031d3a:	jne    0x140031d45
   140031d3c:	test   BYTE PTR [rax+0xb8],dil
   140031d43:	jne    0x140031d4f
   140031d45:	cmp    edi,ecx
   140031d47:	jne    0x140031d66
   140031d49:	test   BYTE PTR [rax+0x60],0x1
   140031d4d:	je     0x140031d66
   140031d4f:	call   0x14003167c
   140031d54:	mov    ecx,0x1
   140031d59:	mov    rbx,rax
   140031d5c:	call   0x14003167c
   140031d61:	cmp    rax,rbx
   140031d64:	je     0x140031d84
   140031d66:	mov    ecx,edi
   140031d68:	call   0x14003167c
   140031d6d:	mov    rcx,rax
   140031d70:	call   QWORD PTR [rip+0xf612]        # 0x140041388
   140031d76:	test   eax,eax
   140031d78:	jne    0x140031d84
   140031d7a:	call   QWORD PTR [rip+0xf658]        # 0x1400413d8
   140031d80:	mov    ebx,eax
   140031d82:	jmp    0x140031d86
   140031d84:	xor    ebx,ebx
   140031d86:	mov    ecx,edi
   140031d88:	call   0x1400315d0
   140031d8d:	mov    rcx,rdi
   140031d90:	mov    rax,rdi
   140031d93:	sar    rax,0x5
   140031d97:	and    ecx,0x1f
   140031d9a:	lea    rdx,[rip+0x2cbbf]        # 0x14005e960
   140031da1:	mov    rax,QWORD PTR [rdx+rax*8]
   140031da5:	imul   rcx,rcx,0x58
   140031da9:	mov    BYTE PTR [rax+rcx*1+0x8],0x0
   140031dae:	test   ebx,ebx
   140031db0:	je     0x140031dbe
   140031db2:	mov    ecx,ebx
   140031db4:	call   0x140029ba8
   140031db9:	jmp    0x140031d16
   140031dbe:	xor    eax,eax
   140031dc0:	mov    rbx,QWORD PTR [rsp+0x30]
   140031dc5:	add    rsp,0x20
   140031dc9:	pop    rdi
   140031dca:	ret    
   140031dcb:	int3   
   140031dcc:	rex push rbx
   140031dce:	sub    rsp,0x20
   140031dd2:	test   BYTE PTR [rcx+0x18],0x83
   140031dd6:	mov    rbx,rcx
   140031dd9:	je     0x140031dfd
   140031ddb:	test   BYTE PTR [rcx+0x18],0x8
   140031ddf:	je     0x140031dfd
   140031de1:	mov    rcx,QWORD PTR [rcx+0x10]
   140031de5:	call   0x1400273dc
   140031dea:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140031df1:	xor    eax,eax
   140031df3:	mov    QWORD PTR [rbx],rax
   140031df6:	mov    QWORD PTR [rbx+0x10],rax
   140031dfa:	mov    DWORD PTR [rbx+0x8],eax
   140031dfd:	add    rsp,0x20
   140031e01:	pop    rbx
   140031e02:	ret    
   140031e03:	int3   
   140031e04:	cmp    QWORD PTR [rip+0x1242c],0x0        # 0x140044238
   140031e0c:	lea    rax,[rip+0x1241d]        # 0x140044230
   140031e13:	je     0x140031e24
   140031e15:	cmp    DWORD PTR [rax],ecx
   140031e17:	je     0x140031e27
   140031e19:	add    rax,0x10
   140031e1d:	cmp    QWORD PTR [rax+0x8],0x0
   140031e22:	jne    0x140031e15
   140031e24:	xor    eax,eax
   140031e26:	ret    
   140031e27:	mov    rax,QWORD PTR [rax+0x8]
   140031e2b:	ret    
   140031e2c:	cmp    QWORD PTR [rip+0x11f54],0x0        # 0x140043d88
   140031e34:	lea    rax,[rip+0x11f45]        # 0x140043d80
   140031e3b:	je     0x140031e4c
   140031e3d:	cmp    DWORD PTR [rax],ecx
   140031e3f:	je     0x140031e4f
   140031e41:	add    rax,0x10
   140031e45:	cmp    QWORD PTR [rax+0x8],0x0
   140031e4a:	jne    0x140031e3d
   140031e4c:	xor    eax,eax
   140031e4e:	ret    
   140031e4f:	mov    rax,QWORD PTR [rax+0x8]
   140031e53:	ret    
   140031e54:	rex push rbx
   140031e56:	sub    rsp,0x20
   140031e5a:	mov    rbx,rcx
   140031e5d:	call   0x140029e58
   140031e62:	lea    rax,[rip+0x1331f]        # 0x140045188
   140031e69:	mov    QWORD PTR [rbx],rax
   140031e6c:	mov    rax,rbx
   140031e6f:	add    rsp,0x20
   140031e73:	pop    rbx
   140031e74:	ret    
   140031e75:	int3   
   140031e76:	int3   
   140031e77:	int3   
   140031e78:	rex push rbx
   140031e7a:	sub    rsp,0x20
   140031e7e:	mov    rbx,rcx
   140031e81:	call   0x140029e58
   140031e86:	lea    rax,[rip+0x13313]        # 0x1400451a0
   140031e8d:	mov    QWORD PTR [rbx],rax
   140031e90:	mov    rax,rbx
   140031e93:	add    rsp,0x20
   140031e97:	pop    rbx
   140031e98:	ret    
   140031e99:	int3   
   140031e9a:	int3   
   140031e9b:	int3   
   140031e9c:	jmp    0x140029e84
   140031ea1:	int3   
   140031ea2:	int3   
   140031ea3:	int3   
   140031ea4:	mov    QWORD PTR [rsp+0x8],rbx
   140031ea9:	push   rdi
   140031eaa:	sub    rsp,0x20
   140031eae:	mov    ebx,edx
   140031eb0:	mov    rdi,rcx
   140031eb3:	call   0x140029e84
   140031eb8:	test   bl,0x1
   140031ebb:	je     0x140031ec5
   140031ebd:	mov    rcx,rdi
   140031ec0:	call   0x14002657c
   140031ec5:	mov    rax,rdi
   140031ec8:	mov    rbx,QWORD PTR [rsp+0x30]
   140031ecd:	add    rsp,0x20
   140031ed1:	pop    rdi
   140031ed2:	ret    
   140031ed3:	int3   
   140031ed4:	sub    rsp,0x48
   140031ed8:	lea    rax,[rip+0xfa11]        # 0x1400418f0
   140031edf:	lea    rdx,[rsp+0x50]
   140031ee4:	lea    rcx,[rsp+0x20]
   140031ee9:	mov    r8d,0x1
   140031eef:	mov    QWORD PTR [rsp+0x50],rax
   140031ef4:	call   0x140029e3c
   140031ef9:	lea    rax,[rip+0xf9e0]        # 0x1400418e0
   140031f00:	lea    rdx,[rip+0x23f59]        # 0x140055e60
   140031f07:	lea    rcx,[rsp+0x20]
   140031f0c:	mov    QWORD PTR [rsp+0x20],rax
   140031f11:	call   0x140029fe8
   140031f16:	int3   
   140031f17:	int3   
   140031f18:	sub    rsp,0x48
   140031f1c:	mov    QWORD PTR [rsp+0x50],rcx
   140031f21:	lea    rdx,[rsp+0x50]
   140031f26:	lea    rcx,[rsp+0x20]
   140031f2b:	call   0x140029e0c
   140031f30:	lea    rax,[rip+0x13251]        # 0x140045188
   140031f37:	lea    rdx,[rip+0x23f82]        # 0x140055ec0
   140031f3e:	lea    rcx,[rsp+0x20]
   140031f43:	mov    QWORD PTR [rsp+0x20],rax
   140031f48:	call   0x140029fe8
   140031f4d:	int3   
   140031f4e:	int3   
   140031f4f:	int3   
   140031f50:	sub    rsp,0x48
   140031f54:	mov    QWORD PTR [rsp+0x50],rcx
   140031f59:	lea    rdx,[rsp+0x50]
   140031f5e:	lea    rcx,[rsp+0x20]
   140031f63:	call   0x140029e0c
   140031f68:	lea    rax,[rip+0x13231]        # 0x1400451a0
   140031f6f:	lea    rdx,[rip+0x23fb2]        # 0x140055f28
   140031f76:	lea    rcx,[rsp+0x20]
   140031f7b:	mov    QWORD PTR [rsp+0x20],rax
   140031f80:	call   0x140029fe8
   140031f85:	int3   
   140031f86:	int3   
   140031f87:	int3   
   140031f88:	mov    QWORD PTR [rsp+0x8],rbx
   140031f8d:	push   rdi
   140031f8e:	sub    rsp,0x20
   140031f92:	xor    edx,edx
   140031f94:	mov    rdi,rcx
   140031f97:	lea    r8d,[rdx+0x28]
   140031f9b:	add    rcx,r8
   140031f9e:	call   0x14002bb90
   140031fa3:	and    QWORD PTR [rdi+0x50],0x0
   140031fa8:	and    DWORD PTR [rdi+0x58],0x0
   140031fac:	and    DWORD PTR [rdi+0x5c],0x0
   140031fb0:	lea    rax,[rip+0xfffffffffffce049]        # 0x140000000
   140031fb7:	lea    rcx,[rdi+0x28]
   140031fbb:	mov    QWORD PTR [rdi+0x10],rax
   140031fbf:	mov    QWORD PTR [rdi+0x8],rax
   140031fc3:	lea    rax,[rip+0x131fe]        # 0x1400451c8
   140031fca:	xor    r8d,r8d
   140031fcd:	xor    edx,edx
   140031fcf:	mov    DWORD PTR [rdi],0x60
   140031fd5:	mov    QWORD PTR [rdi+0x20],rax
   140031fd9:	mov    DWORD PTR [rdi+0x18],0xb00
   140031fe0:	call   QWORD PTR [rip+0xf5c2]        # 0x1400415a8
   140031fe6:	test   eax,eax
   140031fe8:	jne    0x140032015
   140031fea:	call   QWORD PTR [rip+0xf3e8]        # 0x1400413d8
   140031ff0:	mov    edx,0x1
   140031ff5:	movzx  ecx,ax
   140031ff8:	or     ecx,0x80070000
   140031ffe:	test   eax,eax
   140032000:	cmovle ecx,eax
   140032003:	movzx  eax,BYTE PTR [rip+0x2aa46]        # 0x14005ca50
   14003200a:	test   ecx,ecx
   14003200c:	cmovs  eax,edx
   14003200f:	mov    BYTE PTR [rip+0x2aa3b],al        # 0x14005ca50
   140032015:	mov    rax,rdi
   140032018:	mov    rbx,QWORD PTR [rsp+0x30]
   14003201d:	add    rsp,0x20
   140032021:	pop    rdi
   140032022:	ret    
   140032023:	int3   
   140032024:	rex push rbx
   140032026:	sub    rsp,0x20
   14003202a:	mov    rbx,rcx
   14003202d:	add    rcx,0x28
   140032031:	call   QWORD PTR [rip+0xf429]        # 0x140041460
   140032037:	mov    rcx,QWORD PTR [rbx+0x50]
   14003203b:	test   rcx,rcx
   14003203e:	je     0x14003204a
   140032040:	call   0x1400273dc
   140032045:	and    QWORD PTR [rbx+0x50],0x0
   14003204a:	and    DWORD PTR [rbx+0x58],0x0
   14003204e:	and    DWORD PTR [rbx+0x5c],0x0
   140032052:	add    rsp,0x20
   140032056:	pop    rbx
   140032057:	ret    
   140032058:	mov    QWORD PTR [rsp+0x8],rbx
   14003205d:	mov    QWORD PTR [rsp+0x10],rbp
   140032062:	mov    QWORD PTR [rsp+0x18],rsi
   140032067:	push   rdi
   140032068:	sub    rsp,0x20
   14003206c:	mov    rsi,rcx
   14003206f:	add    rcx,0x28
   140032073:	movsxd rbx,edx
   140032076:	call   QWORD PTR [rip+0xf474]        # 0x1400414f0
   14003207c:	xor    edi,edi
   14003207e:	cmp    ebx,DWORD PTR [rsi+0x58]
   140032081:	jg     0x140032090
   140032083:	test   ebx,ebx
   140032085:	js     0x140032090
   140032087:	cmp    ebx,DWORD PTR [rsi+0x58]
   14003208a:	jne    0x1400320b2
   14003208c:	mov    rdi,QWORD PTR [rsi+0x10]
   140032090:	lea    rcx,[rsi+0x28]
   140032094:	call   QWORD PTR [rip+0xf45e]        # 0x1400414f8
   14003209a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003209f:	mov    rbp,QWORD PTR [rsp+0x38]
   1400320a4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400320a9:	mov    rax,rdi
   1400320ac:	add    rsp,0x20
   1400320b0:	pop    rdi
   1400320b1:	ret    
   1400320b2:	jge    0x1400320be
   1400320b4:	mov    rax,QWORD PTR [rsi+0x50]
   1400320b8:	mov    rdi,QWORD PTR [rax+rbx*8]
   1400320bc:	jmp    0x140032090
   1400320be:	xor    r9d,r9d
   1400320c1:	xor    r8d,r8d
   1400320c4:	mov    ecx,0xc000008c
   1400320c9:	lea    edx,[r9+0x1]
   1400320cd:	call   QWORD PTR [rip+0xf2cd]        # 0x1400413a0
   1400320d3:	int3   
   1400320d4:	rex push rbx
   1400320d6:	sub    rsp,0x20
   1400320da:	lea    rax,[rip+0x1311f]        # 0x140045200
   1400320e1:	mov    rbx,rcx
   1400320e4:	mov    QWORD PTR [rcx],rax
   1400320e7:	test   dl,0x1
   1400320ea:	je     0x1400320f1
   1400320ec:	call   0x14002657c
   1400320f1:	mov    rax,rbx
   1400320f4:	add    rsp,0x20
   1400320f8:	pop    rbx
   1400320f9:	ret    
   1400320fa:	int3   
   1400320fb:	int3   
   1400320fc:	mov    QWORD PTR [rsp+0x8],rbx
   140032101:	push   rdi
   140032102:	sub    rsp,0x20
   140032106:	cmp    BYTE PTR [rcx+0x10],0x0
   14003210a:	lea    rax,[rip+0x130c7]        # 0x1400451d8
   140032111:	mov    edi,edx
   140032113:	mov    QWORD PTR [rcx],rax
   140032116:	mov    rbx,rcx
   140032119:	je     0x14003212a
   14003211b:	mov    rcx,QWORD PTR [rcx+0x8]
   14003211f:	test   rcx,rcx
   140032122:	je     0x14003212a
   140032124:	call   QWORD PTR [rip+0xf486]        # 0x1400415b0
   14003212a:	test   dil,0x1
   14003212e:	je     0x140032138
   140032130:	mov    rcx,rbx
   140032133:	call   0x14002657c
   140032138:	mov    rax,rbx
   14003213b:	mov    rbx,QWORD PTR [rsp+0x30]
   140032140:	add    rsp,0x20
   140032144:	pop    rdi
   140032145:	ret    
   140032146:	int3   
   140032147:	int3   
   140032148:	mov    QWORD PTR [rsp+0x8],rbx
   14003214d:	push   rdi
   14003214e:	sub    rsp,0x20
   140032152:	lea    ebx,[rdx+0x8]
   140032155:	movsxd r9,r8d
   140032158:	mov    rdi,rcx
   14003215b:	and    ebx,0xfffffff8
   14003215e:	movsxd r8,ebx
   140032161:	jne    0x140032168
   140032163:	xor    r8d,r8d
   140032166:	jmp    0x140032180
   140032168:	xor    edx,edx
   14003216a:	or     rax,0xffffffffffffffff
   14003216e:	div    r8
   140032171:	cmp    rax,r9
   140032174:	jb     0x1400321ae
   140032176:	imul   r8,r9
   14003217a:	cmp    r8,0xffffffffffffffe7
   14003217e:	ja     0x1400321ae
   140032180:	mov    rcx,QWORD PTR [rcx+0x8]
   140032184:	lea    rdx,[r8+0x18]
   140032188:	mov    rax,QWORD PTR [rcx]
   14003218b:	call   QWORD PTR [rax]
   14003218d:	mov    rcx,rax
   140032190:	test   rax,rax
   140032193:	je     0x1400321ae
   140032195:	and    DWORD PTR [rcx+0x8],0x0
   140032199:	mov    QWORD PTR [rax],rdi
   14003219c:	mov    DWORD PTR [rax+0x10],0x1
   1400321a3:	lea    eax,[rbx-0x1]
   1400321a6:	mov    DWORD PTR [rcx+0xc],eax
   1400321a9:	mov    rax,rcx
   1400321ac:	jmp    0x1400321b0
   1400321ae:	xor    eax,eax
   1400321b0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400321b5:	add    rsp,0x20
   1400321b9:	pop    rdi
   1400321ba:	ret    
   1400321bb:	int3   
   1400321bc:	mov    rcx,QWORD PTR [rcx+0x8]
   1400321c0:	mov    r8,rdx
   1400321c3:	xor    edx,edx
   1400321c5:	rex.W jmp QWORD PTR [rip+0xf2e4]        # 0x1400414b0
   1400321cc:	mov    rax,rcx
   1400321cf:	ret    
   1400321d0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400321d4:	mov    rax,QWORD PTR [rcx]
   1400321d7:	rex.W jmp QWORD PTR [rax+0x8]
   1400321db:	int3   
   1400321dc:	sub    rsp,0x28
   1400321e0:	test   rdx,rdx
   1400321e3:	je     0x1400321f4
   1400321e5:	mov    rcx,QWORD PTR [rcx+0x8]
   1400321e9:	mov    r8,rdx
   1400321ec:	xor    edx,edx
   1400321ee:	call   QWORD PTR [rip+0xf214]        # 0x140041408
   1400321f4:	add    rsp,0x28
   1400321f8:	ret    
   1400321f9:	int3   
   1400321fa:	int3   
   1400321fb:	int3   
   1400321fc:	lock inc DWORD PTR [rcx+0x20]
   140032200:	lea    rax,[rcx+0x10]
   140032204:	ret    
   140032205:	int3   
   140032206:	int3   
   140032207:	int3   
   140032208:	mov    rcx,QWORD PTR [rcx+0x8]
   14003220c:	mov    r8,rdx
   14003220f:	xor    edx,edx
   140032211:	rex.W jmp QWORD PTR [rip+0xf290]        # 0x1400414a8
   140032218:	rex push rbx
   14003221a:	sub    rsp,0x20
   14003221e:	lea    ebx,[r8+0x8]
   140032222:	mov    eax,r9d
   140032225:	and    ebx,0xfffffff8
   140032228:	mov    r8d,ebx
   14003222b:	imul   r8,rax
   14003222f:	mov    eax,0xffffffff
   140032234:	cmp    r8,rax
   140032237:	ja     0x140032261
   140032239:	cmp    r8d,0xffffffe7
   14003223d:	ja     0x140032261
   14003223f:	mov    rcx,QWORD PTR [rcx+0x8]
   140032243:	add    r8d,0x18
   140032247:	mov    r9,QWORD PTR [rcx]
   14003224a:	call   QWORD PTR [r9+0x10]
   14003224e:	mov    rcx,rax
   140032251:	test   rax,rax
   140032254:	je     0x140032261
   140032256:	lea    eax,[rbx-0x1]
   140032259:	mov    DWORD PTR [rcx+0xc],eax
   14003225c:	mov    rax,rcx
   14003225f:	jmp    0x140032263
   140032261:	xor    eax,eax
   140032263:	add    rsp,0x20
   140032267:	pop    rbx
   140032268:	ret    
   140032269:	int3   
   14003226a:	int3   
   14003226b:	int3   
   14003226c:	sub    rsp,0x28
   140032270:	test   rdx,rdx
   140032273:	jne    0x140032282
   140032275:	mov    rax,QWORD PTR [rcx]
   140032278:	mov    rdx,r8
   14003227b:	add    rsp,0x28
   14003227f:	rex.W jmp QWORD PTR [rax]
   140032282:	test   r8,r8
   140032285:	jne    0x140032294
   140032287:	mov    rax,QWORD PTR [rcx]
   14003228a:	call   QWORD PTR [rax+0x8]
   14003228d:	xor    eax,eax
   14003228f:	add    rsp,0x28
   140032293:	ret    
   140032294:	mov    rcx,QWORD PTR [rcx+0x8]
   140032298:	mov    r9,r8
   14003229b:	mov    r8,rdx
   14003229e:	xor    edx,edx
   1400322a0:	add    rsp,0x28
   1400322a4:	rex.W jmp QWORD PTR [rip+0xf23d]        # 0x1400414e8
   1400322ab:	int3   
   1400322ac:	int3   
   1400322ad:	int3   
   1400322ae:	int3   
   1400322af:	int3   
   1400322b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400322b5:	movsxd rax,DWORD PTR [rip+0xfffffffffffcdd80]        # 0x14000003c
   1400322bc:	lea    rbx,[rip+0xfffffffffffcdd3d]        # 0x140000000
   1400322c3:	xor    edx,edx
   1400322c5:	mov    r11,rcx
   1400322c8:	cmp    DWORD PTR [rax+rbx*1+0xf4],edx
   1400322cf:	je     0x14003231f
   1400322d1:	mov    r8d,DWORD PTR [rax+rbx*1+0xf0]
   1400322d9:	add    r8,rbx
   1400322dc:	mov    eax,DWORD PTR [r8+0x4]
   1400322e0:	test   eax,eax
   1400322e2:	je     0x14003231f
   1400322e4:	mov    r10d,eax
   1400322e7:	add    r10,rbx
   1400322ea:	mov    rcx,r10
   1400322ed:	mov    al,BYTE PTR [rcx]
   1400322ef:	inc    rcx
   1400322f2:	test   al,al
   1400322f4:	jne    0x1400322ed
   1400322f6:	sub    rcx,r10
   1400322f9:	mov    r9,r11
   1400322fc:	dec    rcx
   1400322ff:	mov    al,BYTE PTR [r9]
   140032302:	inc    r9
   140032305:	test   al,al
   140032307:	jne    0x1400322ff
   140032309:	sub    r9,r11
   14003230c:	dec    r9
   14003230f:	cmp    rcx,r9
   140032312:	jne    0x140032347
   140032314:	mov    r9,r11
   140032317:	test   rcx,rcx
   14003231a:	jne    0x140032336
   14003231c:	mov    rdx,r8
   14003231f:	mov    rbx,QWORD PTR [rsp+0x8]
   140032324:	mov    rax,rdx
   140032327:	ret    
   140032328:	mov    al,BYTE PTR [r10]
   14003232b:	cmp    BYTE PTR [r9],al
   14003232e:	jne    0x14003233b
   140032330:	inc    r9
   140032333:	inc    r10
   140032336:	dec    rcx
   140032339:	jne    0x140032328
   14003233b:	movzx  ecx,BYTE PTR [r9]
   14003233f:	movzx  eax,BYTE PTR [r10]
   140032343:	cmp    ecx,eax
   140032345:	je     0x14003231c
   140032347:	add    r8,0x20
   14003234b:	jmp    0x1400322dc
   14003234d:	int3   
   14003234e:	int3   
   14003234f:	int3   
   140032350:	mov    QWORD PTR [rsp+0x8],rbx
   140032355:	mov    QWORD PTR [rsp+0x10],rsi
   14003235a:	push   rdi
   14003235b:	sub    rsp,0x20
   14003235f:	mov    ebx,0x8007007e
   140032364:	call   0x1400322b0
   140032369:	mov    rdi,rax
   14003236c:	test   rax,rax
   14003236f:	je     0x1400323b0
   140032371:	mov    ebx,DWORD PTR [rax+0xc]
   140032374:	lea    rax,[rip+0xfffffffffffcdc85]        # 0x140000000
   14003237b:	xor    ecx,ecx
   14003237d:	add    rbx,rax
   140032380:	mov    rax,rbx
   140032383:	cmp    QWORD PTR [rbx],rcx
   140032386:	je     0x140032394
   140032388:	lea    rax,[rax+0x8]
   14003238c:	inc    ecx
   14003238e:	cmp    QWORD PTR [rax],0x0
   140032392:	jne    0x140032388
   140032394:	lea    rsi,[rbx+rcx*8]
   140032398:	jmp    0x1400323a9
   14003239a:	mov    rdx,rbx
   14003239d:	mov    rcx,rdi
   1400323a0:	call   0x1400323c4
   1400323a5:	add    rbx,0x8
   1400323a9:	cmp    rbx,rsi
   1400323ac:	jb     0x14003239a
   1400323ae:	xor    ebx,ebx
   1400323b0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400323b5:	mov    eax,ebx
   1400323b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400323bc:	add    rsp,0x20
   1400323c0:	pop    rdi
   1400323c1:	ret    
   1400323c2:	int3   
   1400323c3:	int3   
   1400323c4:	rex push rbp
   1400323c6:	push   rbx
   1400323c7:	push   rsi
   1400323c8:	push   rdi
   1400323c9:	push   r12
   1400323cb:	push   r13
   1400323cd:	push   r14
   1400323cf:	push   r15
   1400323d1:	mov    rbp,rsp
   1400323d4:	sub    rsp,0x78
   1400323d8:	mov    eax,DWORD PTR [rcx+0x4]
   1400323db:	mov    r9d,DWORD PTR [rcx]
   1400323de:	mov    r15d,DWORD PTR [rcx+0x8]
   1400323e2:	mov    r10d,DWORD PTR [rcx+0xc]
   1400323e6:	and    DWORD PTR [rbp-0x38],0x0
   1400323ea:	mov    r14,rcx
   1400323ed:	mov    r13d,DWORD PTR [r14+0x14]
   1400323f1:	mov    ecx,DWORD PTR [rcx+0x10]
   1400323f4:	mov    r12,rdx
   1400323f7:	lea    rdx,[rip+0xfffffffffffcdc02]        # 0x140000000
   1400323fe:	and    r9d,0x1
   140032402:	mov    DWORD PTR [rbp-0x58],0x48
   140032409:	add    rax,rdx
   14003240c:	add    r13,rdx
   14003240f:	add    r15,rdx
   140032412:	add    r10,rdx
   140032415:	add    rcx,rdx
   140032418:	mov    edx,DWORD PTR [r14+0x1c]
   14003241c:	mov    QWORD PTR [rbp-0x40],rax
   140032420:	xor    eax,eax
   140032422:	mov    QWORD PTR [rbp-0x50],r14
   140032426:	and    QWORD PTR [rbp-0x28],rax
   14003242a:	and    QWORD PTR [rbp-0x20],rax
   14003242e:	and    DWORD PTR [rbp-0x18],eax
   140032431:	mov    DWORD PTR [rbp+0x48],edx
   140032434:	mov    QWORD PTR [rbp-0x48],r12
   140032438:	mov    QWORD PTR [rbp-0x30],rax
   14003243c:	test   r9b,r9b
   14003243f:	jne    0x140032465
   140032441:	xor    edx,edx
   140032443:	lea    rax,[rbp-0x58]
   140032447:	lea    r9,[rbp+0x50]
   14003244b:	lea    r8d,[rdx+0x1]
   14003244f:	mov    ecx,0xc06d0057
   140032454:	mov    QWORD PTR [rbp+0x50],rax
   140032458:	call   QWORD PTR [rip+0xef42]        # 0x1400413a0
   14003245e:	xor    eax,eax
   140032460:	jmp    0x14003264a
   140032465:	mov    rdi,QWORD PTR [r15]
   140032468:	movabs rax,0x8000000000000000
   140032472:	mov    rsi,r12
   140032475:	sub    rsi,r10
   140032478:	sar    rsi,0x3
   14003247c:	mov    esi,esi
   14003247e:	test   QWORD PTR [rcx+rsi*8],rax
   140032482:	mov    eax,0x0
   140032487:	sete   al
   14003248a:	mov    DWORD PTR [rbp-0x38],eax
   14003248d:	test   eax,eax
   14003248f:	je     0x1400324a4
   140032491:	mov    eax,DWORD PTR [rcx+rsi*8]
   140032494:	lea    rcx,[rip+0xfffffffffffcdb67]        # 0x140000002
   14003249b:	add    rax,rcx
   14003249e:	mov    QWORD PTR [rbp-0x30],rax
   1400324a2:	jmp    0x1400324ab
   1400324a4:	movzx  eax,WORD PTR [rcx+rsi*8]
   1400324a8:	mov    DWORD PTR [rbp-0x30],eax
   1400324ab:	mov    rax,QWORD PTR [rip+0x2a58e]        # 0x14005ca40
   1400324b2:	xor    ebx,ebx
   1400324b4:	test   rax,rax
   1400324b7:	je     0x1400324d4
   1400324b9:	lea    rdx,[rbp-0x58]
   1400324bd:	xor    ecx,ecx
   1400324bf:	call   rax
   1400324c1:	mov    rbx,rax
   1400324c4:	test   rax,rax
   1400324c7:	jne    0x140032624
   1400324cd:	mov    rax,QWORD PTR [rip+0x2a56c]        # 0x14005ca40
   1400324d4:	test   rdi,rdi
   1400324d7:	jne    0x140032571
   1400324dd:	test   rax,rax
   1400324e0:	je     0x1400324f3
   1400324e2:	lea    rdx,[rbp-0x58]
   1400324e6:	lea    ecx,[rdi+0x1]
   1400324e9:	call   rax
   1400324eb:	mov    rdi,rax
   1400324ee:	test   rax,rax
   1400324f1:	jne    0x140032556
   1400324f3:	mov    rcx,QWORD PTR [rbp-0x40]
   1400324f7:	xor    r8d,r8d
   1400324fa:	xor    edx,edx
   1400324fc:	call   QWORD PTR [rip+0xeda6]        # 0x1400412a8
   140032502:	mov    rdi,rax
   140032505:	test   rax,rax
   140032508:	jne    0x140032556
   14003250a:	call   QWORD PTR [rip+0xeec8]        # 0x1400413d8
   140032510:	mov    DWORD PTR [rbp-0x18],eax
   140032513:	mov    rax,QWORD PTR [rip+0x2a51e]        # 0x14005ca38
   14003251a:	test   rax,rax
   14003251d:	je     0x140032530
   14003251f:	lea    rdx,[rbp-0x58]
   140032523:	lea    ecx,[rdi+0x3]
   140032526:	call   rax
   140032528:	mov    rdi,rax
   14003252b:	test   rax,rax
   14003252e:	jne    0x140032556
   140032530:	xor    edx,edx
   140032532:	lea    rax,[rbp-0x58]
   140032536:	lea    r9,[rbp+0x58]
   14003253a:	lea    r8d,[rdx+0x1]
   14003253e:	mov    ecx,0xc06d007e
   140032543:	mov    QWORD PTR [rbp+0x58],rax
   140032547:	call   QWORD PTR [rip+0xee53]        # 0x1400413a0
   14003254d:	mov    rax,QWORD PTR [rbp-0x20]
   140032551:	jmp    0x14003264a
   140032556:	mov    rax,rdi
   140032559:	xchg   QWORD PTR [r15],rax
   14003255c:	cmp    rax,rdi
   14003255f:	jne    0x14003256a
   140032561:	mov    rcx,rdi
   140032564:	call   QWORD PTR [rip+0xefe6]        # 0x140041550
   14003256a:	mov    rax,QWORD PTR [rip+0x2a4cf]        # 0x14005ca40
   140032571:	mov    QWORD PTR [rbp-0x28],rdi
   140032575:	test   rax,rax
   140032578:	je     0x140032588
   14003257a:	lea    rdx,[rbp-0x58]
   14003257e:	mov    ecx,0x2
   140032583:	call   rax
   140032585:	mov    rbx,rax
   140032588:	test   rbx,rbx
   14003258b:	jne    0x140032620
   140032591:	cmp    DWORD PTR [r14+0x14],ebx
   140032595:	je     0x1400325c4
   140032597:	cmp    DWORD PTR [r14+0x1c],ebx
   14003259b:	je     0x1400325c4
   14003259d:	movsxd rax,DWORD PTR [rdi+0x3c]
   1400325a1:	cmp    DWORD PTR [rax+rdi*1],0x4550
   1400325a8:	jne    0x1400325c4
   1400325aa:	mov    ecx,DWORD PTR [rbp+0x48]
   1400325ad:	cmp    DWORD PTR [rax+rdi*1+0x8],ecx
   1400325b1:	jne    0x1400325c4
   1400325b3:	cmp    rdi,QWORD PTR [rax+rdi*1+0x30]
   1400325b8:	jne    0x1400325c4
   1400325ba:	mov    rbx,QWORD PTR [r13+rsi*8+0x0]
   1400325bf:	test   rbx,rbx
   1400325c2:	jne    0x140032620
   1400325c4:	mov    rdx,QWORD PTR [rbp-0x30]
   1400325c8:	mov    rcx,rdi
   1400325cb:	call   QWORD PTR [rip+0xed17]        # 0x1400412e8
   1400325d1:	mov    rbx,rax
   1400325d4:	test   rax,rax
   1400325d7:	jne    0x140032620
   1400325d9:	call   QWORD PTR [rip+0xedf9]        # 0x1400413d8
   1400325df:	mov    DWORD PTR [rbp-0x18],eax
   1400325e2:	mov    rax,QWORD PTR [rip+0x2a44f]        # 0x14005ca38
   1400325e9:	test   rax,rax
   1400325ec:	je     0x1400325ff
   1400325ee:	lea    rdx,[rbp-0x58]
   1400325f2:	lea    ecx,[rbx+0x4]
   1400325f5:	call   rax
   1400325f7:	mov    rbx,rax
   1400325fa:	test   rax,rax
   1400325fd:	jne    0x140032620
   1400325ff:	xor    edx,edx
   140032601:	lea    rax,[rbp-0x58]
   140032605:	lea    r9,[rbp+0x60]
   140032609:	lea    r8d,[rdx+0x1]
   14003260d:	mov    ecx,0xc06d007f
   140032612:	mov    QWORD PTR [rbp+0x60],rax
   140032616:	call   QWORD PTR [rip+0xed84]        # 0x1400413a0
   14003261c:	mov    rbx,QWORD PTR [rbp-0x20]
   140032620:	mov    QWORD PTR [r12],rbx
   140032624:	mov    rax,QWORD PTR [rip+0x2a415]        # 0x14005ca40
   14003262b:	test   rax,rax
   14003262e:	je     0x140032647
   140032630:	and    DWORD PTR [rbp-0x18],0x0
   140032634:	lea    rdx,[rbp-0x58]
   140032638:	mov    ecx,0x5
   14003263d:	mov    QWORD PTR [rbp-0x28],rdi
   140032641:	mov    QWORD PTR [rbp-0x20],rbx
   140032645:	call   rax
   140032647:	mov    rax,rbx
   14003264a:	add    rsp,0x78
   14003264e:	pop    r15
   140032650:	pop    r14
   140032652:	pop    r13
   140032654:	pop    r12
   140032656:	pop    rdi
   140032657:	pop    rsi
   140032658:	pop    rbx
   140032659:	pop    rbp
   14003265a:	ret    
   14003265b:	int3   
   14003265c:	jmp    QWORD PTR [rip+0xedb6]        # 0x140041418
   140032662:	jmp    QWORD PTR [rip+0xee38]        # 0x1400414a0
   140032668:	mov    QWORD PTR [rsp+0x10],rbx
   14003266d:	mov    QWORD PTR [rsp+0x18],rbp
   140032672:	push   rsi
   140032673:	push   rdi
   140032674:	push   r12
   140032676:	push   r14
   140032678:	push   r15
   14003267a:	sub    rsp,0x20
   14003267e:	mov    edi,DWORD PTR [r8+0xc]
   140032682:	mov    r12,rcx
   140032685:	mov    rcx,r8
   140032688:	mov    rsi,r9
   14003268b:	mov    r14,r8
   14003268e:	mov    r15,rdx
   140032691:	call   0x140035bd4
   140032696:	mov    r10,QWORD PTR [r12]
   14003269a:	mov    QWORD PTR [rsi],r10
   14003269d:	mov    ebp,eax
   14003269f:	test   edi,edi
   1400326a1:	je     0x140032717
   1400326a3:	movsxd rax,DWORD PTR [r14+0x10]
   1400326a7:	dec    edi
   1400326a9:	lea    rdx,[rdi+rdi*4]
   1400326ad:	lea    rbx,[rax+rdx*4]
   1400326b1:	add    rbx,QWORD PTR [r15+0x8]
   1400326b5:	cmp    ebp,DWORD PTR [rbx+0x4]
   1400326b8:	jle    0x14003269f
   1400326ba:	cmp    ebp,DWORD PTR [rbx+0x8]
   1400326bd:	jg     0x14003269f
   1400326bf:	mov    rcx,QWORD PTR [r15]
   1400326c2:	lea    rdx,[rsp+0x50]
   1400326c7:	xor    r8d,r8d
   1400326ca:	call   QWORD PTR [rip+0xee38]        # 0x140041508
   1400326d0:	movsxd r8,DWORD PTR [rbx+0x10]
   1400326d4:	mov    r9d,DWORD PTR [rbx+0xc]
   1400326d8:	add    r8,QWORD PTR [rsp+0x50]
   1400326dd:	mov    r10d,DWORD PTR [rax]
   1400326e0:	xor    ecx,ecx
   1400326e2:	test   r9d,r9d
   1400326e5:	je     0x1400326fe
   1400326e7:	lea    rdx,[r8+0xc]
   1400326eb:	movsxd rax,DWORD PTR [rdx]
   1400326ee:	cmp    rax,r10
   1400326f1:	je     0x1400326fe
   1400326f3:	inc    ecx
   1400326f5:	add    rdx,0x14
   1400326f9:	cmp    ecx,r9d
   1400326fc:	jb     0x1400326eb
   1400326fe:	cmp    ecx,r9d
   140032701:	jae    0x14003269f
   140032703:	mov    rax,QWORD PTR [r12]
   140032707:	lea    rcx,[rcx+rcx*4]
   14003270b:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   140032710:	mov    rcx,QWORD PTR [rcx+rax*1]
   140032714:	mov    QWORD PTR [rsi],rcx
   140032717:	mov    rbx,QWORD PTR [rsp+0x58]
   14003271c:	mov    rbp,QWORD PTR [rsp+0x60]
   140032721:	mov    rax,rsi
   140032724:	add    rsp,0x20
   140032728:	pop    r15
   14003272a:	pop    r14
   14003272c:	pop    r12
   14003272e:	pop    rdi
   14003272f:	pop    rsi
   140032730:	ret    
   140032731:	int3   
   140032732:	int3   
   140032733:	int3   
   140032734:	mov    rax,rsp
   140032737:	mov    QWORD PTR [rax+0x8],rbx
   14003273b:	mov    QWORD PTR [rax+0x10],rbp
   14003273f:	mov    QWORD PTR [rax+0x18],rsi
   140032743:	mov    QWORD PTR [rax+0x20],rdi
   140032747:	push   r12
   140032749:	push   r14
   14003274b:	push   r15
   14003274d:	sub    rsp,0x20
   140032751:	mov    edi,DWORD PTR [rdx+0xc]
   140032754:	mov    rbp,QWORD PTR [rsp+0x70]
   140032759:	mov    rbx,rdx
   14003275c:	mov    rcx,rbx
   14003275f:	mov    rdx,rbp
   140032762:	mov    r12d,r9d
   140032765:	xor    esi,esi
   140032767:	call   0x140035bd4
   14003276c:	mov    r14d,eax
   14003276f:	test   edi,edi
   140032771:	jne    0x140032778
   140032773:	call   0x1400296a8
   140032778:	mov    r10,QWORD PTR [rsp+0x68]
   14003277d:	mov    r8,QWORD PTR [rsp+0x60]
   140032782:	mov    edx,edi
   140032784:	or     DWORD PTR [r10],0xffffffff
   140032788:	or     DWORD PTR [r8],0xffffffff
   14003278c:	test   edi,edi
   14003278e:	je     0x1400327ba
   140032790:	movsxd r11,DWORD PTR [rbx+0x10]
   140032794:	mov    r15,QWORD PTR [rbp+0x8]
   140032798:	lea    r9d,[rdx-0x1]
   14003279c:	lea    rcx,[r9+r9*4]
   1400327a0:	lea    rax,[r15+rcx*4]
   1400327a4:	cmp    r14d,DWORD PTR [rax+r11*1+0x4]
   1400327a9:	jle    0x1400327b2
   1400327ab:	cmp    r14d,DWORD PTR [rax+r11*1+0x8]
   1400327b0:	jle    0x1400327ba
   1400327b2:	mov    edx,r9d
   1400327b5:	test   r9d,r9d
   1400327b8:	jne    0x140032798
   1400327ba:	test   edx,edx
   1400327bc:	je     0x1400327d1
   1400327be:	lea    eax,[rdx-0x1]
   1400327c1:	lea    rdx,[rax+rax*4]
   1400327c5:	movsxd rax,DWORD PTR [rbx+0x10]
   1400327c9:	lea    rsi,[rax+rdx*4]
   1400327cd:	add    rsi,QWORD PTR [rbp+0x8]
   1400327d1:	xor    edx,edx
   1400327d3:	test   edi,edi
   1400327d5:	je     0x140032837
   1400327d7:	xor    r9d,r9d
   1400327da:	movsxd rcx,DWORD PTR [rbx+0x10]
   1400327de:	add    rcx,QWORD PTR [rbp+0x8]
   1400327e2:	add    rcx,r9
   1400327e5:	test   rsi,rsi
   1400327e8:	je     0x1400327f9
   1400327ea:	mov    eax,DWORD PTR [rsi+0x4]
   1400327ed:	cmp    DWORD PTR [rcx],eax
   1400327ef:	jle    0x140032813
   1400327f1:	mov    eax,DWORD PTR [rsi+0x8]
   1400327f4:	cmp    DWORD PTR [rcx+0x4],eax
   1400327f7:	jg     0x140032813
   1400327f9:	cmp    r12d,DWORD PTR [rcx]
   1400327fc:	jl     0x140032813
   1400327fe:	cmp    r12d,DWORD PTR [rcx+0x4]
   140032802:	jg     0x140032813
   140032804:	cmp    DWORD PTR [r8],0xffffffff
   140032808:	jne    0x14003280d
   14003280a:	mov    DWORD PTR [r8],edx
   14003280d:	lea    eax,[rdx+0x1]
   140032810:	mov    DWORD PTR [r10],eax
   140032813:	inc    edx
   140032815:	add    r9,0x14
   140032819:	cmp    edx,edi
   14003281b:	jb     0x1400327da
   14003281d:	mov    eax,DWORD PTR [r8]
   140032820:	cmp    eax,0xffffffff
   140032823:	je     0x140032837
   140032825:	lea    rcx,[rax+rax*4]
   140032829:	movsxd rax,DWORD PTR [rbx+0x10]
   14003282d:	lea    rax,[rax+rcx*4]
   140032831:	add    rax,QWORD PTR [rbp+0x8]
   140032835:	jmp    0x140032841
   140032837:	and    DWORD PTR [r8],0x0
   14003283b:	and    DWORD PTR [r10],0x0
   14003283f:	xor    eax,eax
   140032841:	mov    rbx,QWORD PTR [rsp+0x40]
   140032846:	mov    rbp,QWORD PTR [rsp+0x48]
   14003284b:	mov    rsi,QWORD PTR [rsp+0x50]
   140032850:	mov    rdi,QWORD PTR [rsp+0x58]
   140032855:	add    rsp,0x20
   140032859:	pop    r15
   14003285b:	pop    r14
   14003285d:	pop    r12
   14003285f:	ret    
   140032860:	mov    QWORD PTR [rsp+0x8],rbx
   140032865:	mov    QWORD PTR [rsp+0x10],rbp
   14003286a:	push   rsi
   14003286b:	push   rdi
   14003286c:	push   r14
   14003286e:	sub    rsp,0x20
   140032872:	lea    r9,[rsp+0x50]
   140032877:	mov    rdi,r8
   14003287a:	mov    rbp,rdx
   14003287d:	call   0x140032668
   140032882:	mov    rdx,rbp
   140032885:	mov    rcx,rdi
   140032888:	mov    r14,rax
   14003288b:	call   0x140035bd4
   140032890:	mov    ebx,DWORD PTR [rdi+0xc]
   140032893:	mov    esi,eax
   140032895:	jmp    0x1400328be
   140032897:	dec    ebx
   140032899:	call   0x14002814c
   14003289e:	lea    rdx,[rbx+rbx*4]
   1400328a2:	mov    rax,QWORD PTR [rax+0x128]
   1400328a9:	lea    rcx,[rax+rdx*4]
   1400328ad:	movsxd rax,DWORD PTR [rdi+0x10]
   1400328b1:	add    rcx,rax
   1400328b4:	cmp    esi,DWORD PTR [rcx+0x4]
   1400328b7:	jle    0x1400328be
   1400328b9:	cmp    esi,DWORD PTR [rcx+0x8]
   1400328bc:	jle    0x1400328c4
   1400328be:	test   ebx,ebx
   1400328c0:	jne    0x140032897
   1400328c2:	xor    ecx,ecx
   1400328c4:	test   rcx,rcx
   1400328c7:	jne    0x1400328cf
   1400328c9:	or     r9d,0xffffffff
   1400328cd:	jmp    0x1400328d3
   1400328cf:	mov    r9d,DWORD PTR [rcx+0x4]
   1400328d3:	mov    r8,rdi
   1400328d6:	mov    rdx,rbp
   1400328d9:	mov    rcx,r14
   1400328dc:	call   0x140035660
   1400328e1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400328e6:	mov    rbp,QWORD PTR [rsp+0x48]
   1400328eb:	add    rsp,0x20
   1400328ef:	pop    r14
   1400328f1:	pop    rdi
   1400328f2:	pop    rsi
   1400328f3:	ret    
   1400328f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400328f9:	mov    QWORD PTR [rsp+0x10],rbp
   1400328fe:	mov    QWORD PTR [rsp+0x18],rsi
   140032903:	push   rdi
   140032904:	sub    rsp,0x40
   140032908:	mov    rsi,r9
   14003290b:	mov    rbp,r8
   14003290e:	mov    rbx,rdx
   140032911:	mov    rdi,rcx
   140032914:	call   0x14002814c
   140032919:	mov    QWORD PTR [rax+0x138],rbx
   140032920:	mov    rbx,QWORD PTR [rdi]
   140032923:	call   0x14002814c
   140032928:	mov    rdx,QWORD PTR [rbx+0x38]
   14003292c:	mov    rcx,QWORD PTR [rsp+0x78]
   140032931:	mov    r9,QWORD PTR [rsp+0x70]
   140032936:	mov    DWORD PTR [rsp+0x38],0x1
   14003293e:	mov    QWORD PTR [rax+0x130],rdx
   140032945:	xor    ebx,ebx
   140032947:	mov    QWORD PTR [rsp+0x30],rbx
   14003294c:	mov    DWORD PTR [rsp+0x28],ebx
   140032950:	mov    QWORD PTR [rsp+0x20],rcx
   140032955:	mov    rcx,QWORD PTR [rdi]
   140032958:	mov    r8,rsi
   14003295b:	mov    rdx,rbp
   14003295e:	call   0x1400357f4
   140032963:	call   0x14002814c
   140032968:	mov    rcx,QWORD PTR [rsp+0x80]
   140032970:	mov    rbp,QWORD PTR [rsp+0x58]
   140032975:	mov    rsi,QWORD PTR [rsp+0x60]
   14003297a:	mov    QWORD PTR [rax+0x138],rbx
   140032981:	lea    eax,[rbx+0x1]
   140032984:	mov    rbx,QWORD PTR [rsp+0x50]
   140032989:	mov    DWORD PTR [rcx],0x1
   14003298f:	add    rsp,0x40
   140032993:	pop    rdi
   140032994:	ret    
   140032995:	int3   
   140032996:	int3   
   140032997:	int3   
   140032998:	mov    rax,rsp
   14003299b:	mov    QWORD PTR [rax+0x20],r9
   14003299f:	mov    QWORD PTR [rax+0x18],r8
   1400329a3:	mov    QWORD PTR [rax+0x10],rdx
   1400329a7:	mov    QWORD PTR [rax+0x8],rcx
   1400329ab:	push   rbx
   1400329ac:	sub    rsp,0x60
   1400329b0:	mov    rbx,rcx
   1400329b3:	and    DWORD PTR [rax-0x28],0x0
   1400329b7:	mov    QWORD PTR [rax-0x20],rcx
   1400329bb:	mov    QWORD PTR [rax-0x18],r8
   1400329bf:	call   0x14002814c
   1400329c4:	mov    r8,QWORD PTR [rax+0xe0]
   1400329cb:	lea    rdx,[rsp+0x48]
   1400329d0:	mov    ecx,DWORD PTR [rbx]
   1400329d2:	call   r8
   1400329d5:	mov    DWORD PTR [rsp+0x40],0x0
   1400329dd:	jmp    0x1400329df
   1400329df:	mov    eax,DWORD PTR [rsp+0x40]
   1400329e3:	add    rsp,0x60
   1400329e7:	pop    rbx
   1400329e8:	ret    
   1400329e9:	int3   
   1400329ea:	int3   
   1400329eb:	int3   
   1400329ec:	rex push rbx
   1400329ee:	sub    rsp,0x20
   1400329f2:	mov    rbx,rcx
   1400329f5:	mov    QWORD PTR [rcx],rdx
   1400329f8:	call   0x14002814c
   1400329fd:	cmp    rbx,QWORD PTR [rax+0x120]
   140032a04:	jae    0x140032a14
   140032a06:	call   0x14002814c
   140032a0b:	mov    rcx,QWORD PTR [rax+0x120]
   140032a12:	jmp    0x140032a16
   140032a14:	xor    ecx,ecx
   140032a16:	mov    QWORD PTR [rbx+0x8],rcx
   140032a1a:	call   0x14002814c
   140032a1f:	mov    QWORD PTR [rax+0x120],rbx
   140032a26:	mov    rax,rbx
   140032a29:	add    rsp,0x20
   140032a2d:	pop    rbx
   140032a2e:	ret    
   140032a2f:	int3   
   140032a30:	mov    QWORD PTR [rsp+0x8],rbx
   140032a35:	push   rdi
   140032a36:	sub    rsp,0x20
   140032a3a:	mov    rdi,rcx
   140032a3d:	call   0x14002814c
   140032a42:	cmp    rdi,QWORD PTR [rax+0x120]
   140032a49:	je     0x140032a50
   140032a4b:	call   0x1400296a8
   140032a50:	call   0x14002814c
   140032a55:	mov    rbx,QWORD PTR [rax+0x120]
   140032a5c:	jmp    0x140032a67
   140032a5e:	cmp    rdi,rbx
   140032a61:	je     0x140032a7c
   140032a63:	mov    rbx,QWORD PTR [rbx+0x8]
   140032a67:	test   rbx,rbx
   140032a6a:	jne    0x140032a5e
   140032a6c:	call   0x1400296a8
   140032a71:	mov    rbx,QWORD PTR [rsp+0x30]
   140032a76:	add    rsp,0x20
   140032a7a:	pop    rdi
   140032a7b:	ret    
   140032a7c:	call   0x14002814c
   140032a81:	mov    rcx,QWORD PTR [rbx+0x8]
   140032a85:	mov    QWORD PTR [rax+0x120],rcx
   140032a8c:	jmp    0x140032a71
   140032a8e:	int3   
   140032a8f:	int3   
   140032a90:	sub    rsp,0x28
   140032a94:	call   0x14002814c
   140032a99:	mov    rax,QWORD PTR [rax+0x128]
   140032aa0:	add    rsp,0x28
   140032aa4:	ret    
   140032aa5:	int3   
   140032aa6:	int3   
   140032aa7:	int3   
   140032aa8:	sub    rsp,0x28
   140032aac:	call   0x14002814c
   140032ab1:	mov    rax,QWORD PTR [rax+0x130]
   140032ab8:	add    rsp,0x28
   140032abc:	ret    
   140032abd:	int3   
   140032abe:	int3   
   140032abf:	int3   
   140032ac0:	rex push rbx
   140032ac2:	sub    rsp,0x20
   140032ac6:	mov    rbx,rcx
   140032ac9:	call   0x14002814c
   140032ace:	mov    rdx,QWORD PTR [rax+0x120]
   140032ad5:	jmp    0x140032ae0
   140032ad7:	cmp    QWORD PTR [rdx],rbx
   140032ada:	je     0x140032aee
   140032adc:	mov    rdx,QWORD PTR [rdx+0x8]
   140032ae0:	test   rdx,rdx
   140032ae3:	jne    0x140032ad7
   140032ae5:	lea    eax,[rdx+0x1]
   140032ae8:	add    rsp,0x20
   140032aec:	pop    rbx
   140032aed:	ret    
   140032aee:	xor    eax,eax
   140032af0:	jmp    0x140032ae8
   140032af2:	int3   
   140032af3:	int3   
   140032af4:	rex push rbx
   140032af6:	sub    rsp,0x20
   140032afa:	mov    rbx,rcx
   140032afd:	call   0x14002814c
   140032b02:	mov    QWORD PTR [rax+0x128],rbx
   140032b09:	add    rsp,0x20
   140032b0d:	pop    rbx
   140032b0e:	ret    
   140032b0f:	int3   
   140032b10:	rex push rbx
   140032b12:	sub    rsp,0x20
   140032b16:	mov    rbx,rcx
   140032b19:	call   0x14002814c
   140032b1e:	mov    QWORD PTR [rax+0x130],rbx
   140032b25:	add    rsp,0x20
   140032b29:	pop    rbx
   140032b2a:	ret    
   140032b2b:	int3   
   140032b2c:	mov    rax,rsp
   140032b2f:	mov    QWORD PTR [rax+0x10],rbx
   140032b33:	mov    QWORD PTR [rax+0x18],rsi
   140032b37:	mov    QWORD PTR [rax+0x20],rdi
   140032b3b:	push   rbp
   140032b3c:	push   r14
   140032b3e:	push   r15
   140032b40:	lea    rbp,[rax-0x4c8]
   140032b47:	sub    rsp,0x5b0
   140032b4e:	mov    rax,QWORD PTR [rip+0x26533]        # 0x140059088
   140032b55:	xor    rax,rsp
   140032b58:	mov    QWORD PTR [rbp+0x4a0],rax
   140032b5f:	mov    rbx,QWORD PTR [rbp+0x508]
   140032b66:	mov    r14,rdx
   140032b69:	lea    rdx,[rip+0x128d0]        # 0x140045440
   140032b70:	mov    r15,rcx
   140032b73:	lea    rcx,[rsp+0x30]
   140032b78:	mov    rax,rdx
   140032b7b:	or     rax,rcx
   140032b7e:	mov    rdi,r9
   140032b81:	mov    rsi,r8
   140032b84:	lea    r9,[rsp+0x30]
   140032b89:	and    eax,0xf
   140032b8c:	jne    0x140032bf0
   140032b8e:	mov    eax,0x1
   140032b93:	lea    r8d,[rax+0x7f]
   140032b97:	movaps xmm0,XMMWORD PTR [rdx]
   140032b9a:	movaps xmm1,XMMWORD PTR [rdx+0x10]
   140032b9e:	movaps XMMWORD PTR [rcx],xmm0
   140032ba1:	movaps xmm0,XMMWORD PTR [rdx+0x20]
   140032ba5:	movaps XMMWORD PTR [rcx+0x10],xmm1
   140032ba9:	movaps xmm1,XMMWORD PTR [rdx+0x30]
   140032bad:	movaps XMMWORD PTR [rcx+0x20],xmm0
   140032bb1:	movaps xmm0,XMMWORD PTR [rdx+0x40]
   140032bb5:	movaps XMMWORD PTR [rcx+0x30],xmm1
   140032bb9:	movaps xmm1,XMMWORD PTR [rdx+0x50]
   140032bbd:	movaps XMMWORD PTR [rcx+0x40],xmm0
   140032bc1:	movaps xmm0,XMMWORD PTR [rdx+0x60]
   140032bc5:	movaps XMMWORD PTR [rcx+0x50],xmm1
   140032bc9:	movaps xmm1,XMMWORD PTR [rdx+0x70]
   140032bcd:	add    rdx,r8
   140032bd0:	movaps XMMWORD PTR [rcx+0x60],xmm0
   140032bd4:	add    rcx,r8
   140032bd7:	movaps XMMWORD PTR [rcx-0x10],xmm1
   140032bdb:	dec    rax
   140032bde:	jne    0x140032b97
   140032be0:	movaps xmm0,XMMWORD PTR [rdx]
   140032be3:	mov    rax,QWORD PTR [rdx+0x10]
   140032be7:	movaps XMMWORD PTR [rcx],xmm0
   140032bea:	mov    QWORD PTR [rcx+0x10],rax
   140032bee:	jmp    0x140032bfe
   140032bf0:	mov    r8d,0x98
   140032bf6:	mov    rcx,r9
   140032bf9:	call   0x1400265d0
   140032bfe:	mov    rdx,QWORD PTR [rbx]
   140032c01:	mov    rcx,QWORD PTR [r15]
   140032c04:	lea    rax,[rip+0x27fd]        # 0x140035408
   140032c0b:	mov    QWORD PTR [rsp+0x50],rax
   140032c10:	mov    rax,QWORD PTR [rbp+0x4f0]
   140032c17:	lea    r8,[rsp+0x30]
   140032c1c:	mov    QWORD PTR [rsp+0x60],rax
   140032c21:	movsxd rax,DWORD PTR [rbp+0x4f8]
   140032c28:	xor    r9d,r9d
   140032c2b:	mov    QWORD PTR [rsp+0x68],rax
   140032c30:	mov    rax,QWORD PTR [rbp+0x500]
   140032c37:	mov    QWORD PTR [rsp+0x58],rdi
   140032c3c:	mov    QWORD PTR [rsp+0x78],rax
   140032c41:	movzx  eax,BYTE PTR [rbp+0x510]
   140032c48:	mov    QWORD PTR [rsp+0x70],rsi
   140032c4d:	mov    QWORD PTR [rbp-0x78],rax
   140032c51:	mov    rax,QWORD PTR [rbx+0x40]
   140032c55:	mov    QWORD PTR [rbp-0x80],r14
   140032c59:	mov    QWORD PTR [rsp+0x28],rax
   140032c5e:	lea    rax,[rbp-0x30]
   140032c62:	mov    QWORD PTR [rbp-0x70],0x19930520
   140032c6a:	mov    QWORD PTR [rsp+0x20],rax
   140032c6f:	call   QWORD PTR [rip+0xe82b]        # 0x1400414a0
   140032c75:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140032c7c:	xor    rcx,rsp
   140032c7f:	call   0x1400265a0
   140032c84:	lea    r11,[rsp+0x5b0]
   140032c8c:	mov    rbx,QWORD PTR [r11+0x28]
   140032c90:	mov    rsi,QWORD PTR [r11+0x30]
   140032c94:	mov    rdi,QWORD PTR [r11+0x38]
   140032c98:	mov    rsp,r11
   140032c9b:	pop    r15
   140032c9d:	pop    r14
   140032c9f:	pop    rbp
   140032ca0:	ret    
   140032ca1:	int3   
   140032ca2:	int3   
   140032ca3:	int3   
   140032ca4:	mov    QWORD PTR [rsp+0x10],rbx
   140032ca9:	mov    QWORD PTR [rsp+0x18],rsi
   140032cae:	push   rdi
   140032caf:	sub    rsp,0x40
   140032cb3:	mov    rbx,r9
   140032cb6:	mov    rdi,r8
   140032cb9:	mov    rsi,rcx
   140032cbc:	mov    QWORD PTR [rsp+0x50],rdx
   140032cc1:	call   0x14002814c
   140032cc6:	mov    rdx,QWORD PTR [rbx+0x8]
   140032cca:	mov    QWORD PTR [rax+0x128],rdx
   140032cd1:	call   0x14002814c
   140032cd6:	mov    rdx,QWORD PTR [rsi+0x38]
   140032cda:	mov    QWORD PTR [rax+0x130],rdx
   140032ce1:	call   0x14002814c
   140032ce6:	mov    rdx,QWORD PTR [rbx+0x38]
   140032cea:	mov    r8d,DWORD PTR [rdx]
   140032ced:	lea    rdx,[rsp+0x50]
   140032cf2:	mov    r9,rbx
   140032cf5:	add    r8,QWORD PTR [rax+0x128]
   140032cfc:	xor    eax,eax
   140032cfe:	mov    rcx,rsi
   140032d01:	mov    DWORD PTR [rsp+0x38],eax
   140032d05:	mov    QWORD PTR [rsp+0x30],rax
   140032d0a:	mov    DWORD PTR [rsp+0x28],eax
   140032d0e:	mov    QWORD PTR [rsp+0x20],r8
   140032d13:	mov    r8,rdi
   140032d16:	call   0x1400357f4
   140032d1b:	mov    rbx,QWORD PTR [rsp+0x58]
   140032d20:	mov    rsi,QWORD PTR [rsp+0x60]
   140032d25:	add    rsp,0x40
   140032d29:	pop    rdi
   140032d2a:	ret    
   140032d2b:	int3   
   140032d2c:	mov    rax,rsp
   140032d2f:	mov    QWORD PTR [rax+0x8],rbx
   140032d33:	mov    QWORD PTR [rax+0x10],rbp
   140032d37:	mov    QWORD PTR [rax+0x18],rsi
   140032d3b:	mov    QWORD PTR [rax+0x20],rdi
   140032d3f:	push   r12
   140032d41:	push   r14
   140032d43:	push   r15
   140032d45:	sub    rsp,0x50
   140032d49:	xor    r12d,r12d
   140032d4c:	mov    rbp,r8
   140032d4f:	mov    r14,rdx
   140032d52:	mov    rdi,rcx
   140032d55:	mov    ebx,r12d
   140032d58:	test   rcx,rcx
   140032d5b:	je     0x140032d6d
   140032d5d:	test   r8,r8
   140032d60:	jne    0x140032d69
   140032d62:	xor    eax,eax
   140032d64:	jmp    0x140032ee9
   140032d69:	mov    WORD PTR [rcx],r12w
   140032d6d:	test   rdx,rdx
   140032d70:	jne    0x140032d8b
   140032d72:	call   0x140029bf8
   140032d77:	mov    DWORD PTR [rax],0x16
   140032d7d:	call   0x140029b2c
   140032d82:	or     rax,0xffffffffffffffff
   140032d86:	jmp    0x140032ee9
   140032d8b:	lea    rcx,[rsp+0x30]
   140032d90:	mov    rdx,r9
   140032d93:	call   0x140026f30
   140032d98:	mov    rax,QWORD PTR [rsp+0x30]
   140032d9d:	test   rdi,rdi
   140032da0:	je     0x140032e85
   140032da6:	cmp    QWORD PTR [rax+0x138],r12
   140032dad:	jne    0x140032ddb
   140032daf:	test   rbp,rbp
   140032db2:	je     0x140032ed3
   140032db8:	movzx  eax,BYTE PTR [rbx+r14*1]
   140032dbd:	mov    WORD PTR [rdi],ax
   140032dc0:	cmp    BYTE PTR [rbx+r14*1],r12b
   140032dc4:	je     0x140032ed3
   140032dca:	inc    rbx
   140032dcd:	add    rdi,0x2
   140032dd1:	cmp    rbx,rbp
   140032dd4:	jb     0x140032db8
   140032dd6:	jmp    0x140032ed3
   140032ddb:	mov    ecx,DWORD PTR [rax+0x4]
   140032dde:	or     rbx,0xffffffffffffffff
   140032de2:	mov    r8,r14
   140032de5:	lea    edx,[rbx+0xa]
   140032de8:	mov    r9d,ebx
   140032deb:	mov    DWORD PTR [rsp+0x28],ebp
   140032def:	mov    QWORD PTR [rsp+0x20],rdi
   140032df4:	call   QWORD PTR [rip+0xe52e]        # 0x140041328
   140032dfa:	movsxd rcx,eax
   140032dfd:	test   eax,eax
   140032dff:	jne    0x140032ecf
   140032e05:	call   QWORD PTR [rip+0xe5cd]        # 0x1400413d8
   140032e0b:	cmp    eax,0x7a
   140032e0e:	jne    0x140032e6f
   140032e10:	mov    r15d,ebp
   140032e13:	mov    rsi,r14
   140032e16:	test   ebp,ebp
   140032e18:	je     0x140032e43
   140032e1a:	dec    r15d
   140032e1d:	cmp    BYTE PTR [rsi],r12b
   140032e20:	je     0x140032e43
   140032e22:	movzx  ecx,BYTE PTR [rsi]
   140032e25:	lea    rdx,[rsp+0x30]
   140032e2a:	call   0x14002fe88
   140032e2f:	test   eax,eax
   140032e31:	je     0x140032e3b
   140032e33:	inc    rsi
   140032e36:	cmp    BYTE PTR [rsi],r12b
   140032e39:	je     0x140032e6f
   140032e3b:	inc    rsi
   140032e3e:	test   r15d,r15d
   140032e41:	jmp    0x140032e18
   140032e43:	mov    rax,QWORD PTR [rsp+0x30]
   140032e48:	sub    esi,r14d
   140032e4b:	mov    r8,r14
   140032e4e:	mov    ecx,DWORD PTR [rax+0x4]
   140032e51:	mov    edx,0x1
   140032e56:	mov    r9d,esi
   140032e59:	mov    DWORD PTR [rsp+0x28],ebp
   140032e5d:	mov    QWORD PTR [rsp+0x20],rdi
   140032e62:	call   QWORD PTR [rip+0xe4c0]        # 0x140041328
   140032e68:	movsxd rcx,eax
   140032e6b:	test   eax,eax
   140032e6d:	jne    0x140032e80
   140032e6f:	call   0x140029bf8
   140032e74:	mov    DWORD PTR [rax],0x2a
   140032e7a:	mov    WORD PTR [rdi],r12w
   140032e7e:	jmp    0x140032ed3
   140032e80:	mov    rbx,rcx
   140032e83:	jmp    0x140032ed3
   140032e85:	cmp    QWORD PTR [rax+0x138],r12
   140032e8c:	jne    0x140032e9b
   140032e8e:	mov    rcx,r14
   140032e91:	call   0x14002e0d0
   140032e96:	mov    rbx,rax
   140032e99:	jmp    0x140032ed3
   140032e9b:	mov    ecx,DWORD PTR [rax+0x4]
   140032e9e:	or     rbx,0xffffffffffffffff
   140032ea2:	mov    r8,r14
   140032ea5:	lea    edx,[rbx+0xa]
   140032ea8:	mov    r9d,ebx
   140032eab:	mov    DWORD PTR [rsp+0x28],r12d
   140032eb0:	mov    QWORD PTR [rsp+0x20],r12
   140032eb5:	call   QWORD PTR [rip+0xe46d]        # 0x140041328
   140032ebb:	movsxd rcx,eax
   140032ebe:	test   eax,eax
   140032ec0:	jne    0x140032ecf
   140032ec2:	call   0x140029bf8
   140032ec7:	mov    DWORD PTR [rax],0x2a
   140032ecd:	jmp    0x140032ed3
   140032ecf:	lea    rbx,[rcx-0x1]
   140032ed3:	cmp    BYTE PTR [rsp+0x48],r12b
   140032ed8:	je     0x140032ee6
   140032eda:	mov    rcx,QWORD PTR [rsp+0x40]
   140032edf:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140032ee6:	mov    rax,rbx
   140032ee9:	lea    r11,[rsp+0x50]
   140032eee:	mov    rbx,QWORD PTR [r11+0x20]
   140032ef2:	mov    rbp,QWORD PTR [r11+0x28]
   140032ef6:	mov    rsi,QWORD PTR [r11+0x30]
   140032efa:	mov    rdi,QWORD PTR [r11+0x38]
   140032efe:	mov    rsp,r11
   140032f01:	pop    r15
   140032f03:	pop    r14
   140032f05:	pop    r12
   140032f07:	ret    
   140032f08:	mov    QWORD PTR [rsp+0x8],rbx
   140032f0d:	mov    QWORD PTR [rsp+0x10],rsi
   140032f12:	mov    QWORD PTR [rsp+0x18],rdi
   140032f17:	push   r12
   140032f19:	push   r14
   140032f1b:	push   r15
   140032f1d:	sub    rsp,0x40
   140032f21:	xor    r12d,r12d
   140032f24:	mov    r15,r9
   140032f27:	mov    rsi,r8
   140032f2a:	mov    rdi,rdx
   140032f2d:	mov    r14,rcx
   140032f30:	mov    ebx,r12d
   140032f33:	test   rdx,rdx
   140032f36:	jne    0x140032f3f
   140032f38:	test   r8,r8
   140032f3b:	je     0x140032f5e
   140032f3d:	jmp    0x140032f44
   140032f3f:	test   r8,r8
   140032f42:	jne    0x140032f5a
   140032f44:	call   0x140029bf8
   140032f49:	mov    ebx,0x16
   140032f4e:	mov    DWORD PTR [rax],ebx
   140032f50:	call   0x140029b2c
   140032f55:	jmp    0x14003301c
   140032f5a:	mov    WORD PTR [rdx],r12w
   140032f5e:	test   rcx,rcx
   140032f61:	je     0x140032f66
   140032f63:	mov    QWORD PTR [rcx],r12
   140032f66:	mov    rdx,QWORD PTR [rsp+0x88]
   140032f6e:	lea    rcx,[rsp+0x20]
   140032f73:	call   0x140026f30
   140032f78:	mov    r8,QWORD PTR [rsp+0x80]
   140032f80:	cmp    r8,rsi
   140032f83:	cmova  r8,rsi
   140032f87:	cmp    r8,0x7fffffff
   140032f8e:	jbe    0x140032f9c
   140032f90:	call   0x140029bf8
   140032f95:	mov    ebx,0x16
   140032f9a:	jmp    0x140032fea
   140032f9c:	lea    r9,[rsp+0x20]
   140032fa1:	mov    rdx,r15
   140032fa4:	mov    rcx,rdi
   140032fa7:	call   0x140032d2c
   140032fac:	cmp    rax,0xffffffffffffffff
   140032fb0:	jne    0x140032fc4
   140032fb2:	test   rdi,rdi
   140032fb5:	je     0x140032fbb
   140032fb7:	mov    WORD PTR [rdi],r12w
   140032fbb:	call   0x140029bf8
   140032fc0:	mov    ebx,DWORD PTR [rax]
   140032fc2:	jmp    0x140033009
   140032fc4:	inc    rax
   140032fc7:	test   rdi,rdi
   140032fca:	je     0x140033001
   140032fcc:	cmp    rax,rsi
   140032fcf:	jbe    0x140032ffb
   140032fd1:	cmp    QWORD PTR [rsp+0x80],0xffffffffffffffff
   140032fda:	je     0x140032ff3
   140032fdc:	mov    WORD PTR [rdi],r12w
   140032fe0:	call   0x140029bf8
   140032fe5:	mov    ebx,0x22
   140032fea:	mov    DWORD PTR [rax],ebx
   140032fec:	call   0x140029b2c
   140032ff1:	jmp    0x140033009
   140032ff3:	mov    rax,rsi
   140032ff6:	mov    ebx,0x50
   140032ffb:	mov    WORD PTR [rdi+rax*2-0x2],r12w
   140033001:	test   r14,r14
   140033004:	je     0x140033009
   140033006:	mov    QWORD PTR [r14],rax
   140033009:	cmp    BYTE PTR [rsp+0x38],r12b
   14003300e:	je     0x14003301c
   140033010:	mov    rcx,QWORD PTR [rsp+0x30]
   140033015:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003301c:	mov    rsi,QWORD PTR [rsp+0x68]
   140033021:	mov    rdi,QWORD PTR [rsp+0x70]
   140033026:	mov    eax,ebx
   140033028:	mov    rbx,QWORD PTR [rsp+0x60]
   14003302d:	add    rsp,0x40
   140033031:	pop    r15
   140033033:	pop    r14
   140033035:	pop    r12
   140033037:	ret    
   140033038:	sub    rsp,0x38
   14003303c:	mov    rax,QWORD PTR [rsp+0x60]
   140033041:	and    QWORD PTR [rsp+0x28],0x0
   140033047:	mov    QWORD PTR [rsp+0x20],rax
   14003304c:	call   0x140032f08
   140033051:	add    rsp,0x38
   140033055:	ret    
   140033056:	int3   
   140033057:	int3   
   140033058:	mov    rax,rsp
   14003305b:	mov    QWORD PTR [rax+0x8],rbx
   14003305f:	mov    QWORD PTR [rax+0x18],rsi
   140033063:	mov    QWORD PTR [rax+0x20],rdi
   140033067:	mov    QWORD PTR [rax+0x10],rdx
   14003306b:	push   r14
   14003306d:	sub    rsp,0x20
   140033071:	mov    rdi,rdx
   140033074:	mov    rsi,rcx
   140033077:	xor    eax,eax
   140033079:	test   rcx,rcx
   14003307c:	setne  al
   14003307f:	test   eax,eax
   140033081:	jne    0x14003309b
   140033083:	call   0x140029bf8
   140033088:	mov    DWORD PTR [rax],0x16
   14003308e:	call   0x140029b2c
   140033093:	or     eax,0xffffffff
   140033096:	jmp    0x140033176
   14003309b:	xor    eax,eax
   14003309d:	test   rdx,rdx
   1400330a0:	setne  al
   1400330a3:	test   eax,eax
   1400330a5:	je     0x140033083
   1400330a7:	call   0x140028a64
   1400330ac:	test   eax,eax
   1400330ae:	js     0x140033093
   1400330b0:	test   BYTE PTR [rdi+0x18],0x40
   1400330b4:	jne    0x140033127
   1400330b6:	mov    rcx,rdi
   1400330b9:	call   0x14002f3b4
   1400330be:	movsxd r8,eax
   1400330c1:	lea    ecx,[r8+0x2]
   1400330c5:	lea    r9,[rip+0x2b894]        # 0x14005e960
   1400330cc:	cmp    ecx,0x1
   1400330cf:	jbe    0x1400330ef
   1400330d1:	mov    rdx,r8
   1400330d4:	mov    rcx,r8
   1400330d7:	sar    rcx,0x5
   1400330db:	and    edx,0x1f
   1400330de:	imul   rdx,rdx,0x58
   1400330e2:	add    rdx,QWORD PTR [r9+rcx*8]
   1400330e6:	lea    rcx,[rip+0x25f43]        # 0x140059030
   1400330ed:	jmp    0x1400330f9
   1400330ef:	lea    rcx,[rip+0x25f3a]        # 0x140059030
   1400330f6:	mov    rdx,rcx
   1400330f9:	test   BYTE PTR [rdx+0x38],0x7f
   1400330fd:	jne    0x140033083
   1400330ff:	lea    eax,[r8+0x2]
   140033103:	cmp    eax,0x1
   140033106:	jbe    0x14003311d
   140033108:	mov    rcx,r8
   14003310b:	mov    rax,r8
   14003310e:	sar    rax,0x5
   140033112:	and    ecx,0x1f
   140033115:	imul   rcx,rcx,0x58
   140033119:	add    rcx,QWORD PTR [r9+rax*8]
   14003311d:	test   BYTE PTR [rcx+0x38],0x80
   140033121:	jne    0x140033083
   140033127:	mov    rcx,rsi
   14003312a:	call   0x14002e0d0
   14003312f:	mov    r14,rax
   140033132:	mov    rcx,rdi
   140033135:	call   0x14002ccbc
   14003313a:	nop
   14003313b:	mov    rcx,rdi
   14003313e:	call   0x14002ce00
   140033143:	mov    ebx,eax
   140033145:	mov    r9,rdi
   140033148:	mov    r8,r14
   14003314b:	mov    edx,0x1
   140033150:	mov    rcx,rsi
   140033153:	call   0x140035c68
   140033158:	mov    rsi,rax
   14003315b:	mov    rdx,rdi
   14003315e:	mov    ecx,ebx
   140033160:	call   0x14002cdc8
   140033165:	nop
   140033166:	mov    rcx,rdi
   140033169:	call   0x14002cd58
   14003316e:	sub    rsi,r14
   140033171:	neg    rsi
   140033174:	sbb    eax,eax
   140033176:	mov    rbx,QWORD PTR [rsp+0x30]
   14003317b:	mov    rsi,QWORD PTR [rsp+0x40]
   140033180:	mov    rdi,QWORD PTR [rsp+0x48]
   140033185:	add    rsp,0x20
   140033189:	pop    r14
   14003318b:	ret    
   14003318c:	sub    rsp,0x38
   140033190:	mov    QWORD PTR [rsp+0x20],r9
   140033195:	xor    r9d,r9d
   140033198:	call   0x1400331a4
   14003319d:	add    rsp,0x38
   1400331a1:	ret    
   1400331a2:	int3   
   1400331a3:	int3   
   1400331a4:	mov    rax,rsp
   1400331a7:	mov    QWORD PTR [rax+0x8],rbx
   1400331ab:	mov    QWORD PTR [rax+0x10],rbp
   1400331af:	mov    QWORD PTR [rax+0x18],rsi
   1400331b3:	push   rdi
   1400331b4:	sub    rsp,0x50
   1400331b8:	and    QWORD PTR [rax-0x38],0x0
   1400331bd:	mov    rbx,rdx
   1400331c0:	xor    edx,edx
   1400331c2:	mov    rsi,r8
   1400331c5:	mov    rdi,rcx
   1400331c8:	lea    r8d,[rdx+0x28]
   1400331cc:	lea    rcx,[rax-0x30]
   1400331d0:	mov    rbp,r9
   1400331d3:	call   0x14002bb90
   1400331d8:	test   rsi,rsi
   1400331db:	jne    0x1400331f2
   1400331dd:	call   0x140029bf8
   1400331e2:	mov    DWORD PTR [rax],0x16
   1400331e8:	call   0x140029b2c
   1400331ed:	or     eax,0xffffffff
   1400331f0:	jmp    0x14003325a
   1400331f2:	test   rbx,rbx
   1400331f5:	je     0x1400331fc
   1400331f7:	test   rdi,rdi
   1400331fa:	je     0x1400331dd
   1400331fc:	mov    r9,QWORD PTR [rsp+0x80]
   140033204:	mov    eax,0x7fffffff
   140033209:	lea    rcx,[rsp+0x20]
   14003320e:	cmp    rbx,rax
   140033211:	mov    r8,rbp
   140033214:	mov    rdx,rsi
   140033217:	cmova  ebx,eax
   14003321a:	mov    DWORD PTR [rsp+0x38],0x42
   140033222:	mov    QWORD PTR [rsp+0x30],rdi
   140033227:	mov    DWORD PTR [rsp+0x28],ebx
   14003322b:	mov    QWORD PTR [rsp+0x20],rdi
   140033230:	call   0x14002ced0
   140033235:	mov    ebx,eax
   140033237:	test   rdi,rdi
   14003323a:	je     0x14003325a
   14003323c:	dec    DWORD PTR [rsp+0x28]
   140033240:	js     0x14003324c
   140033242:	mov    rax,QWORD PTR [rsp+0x20]
   140033247:	mov    BYTE PTR [rax],0x0
   14003324a:	jmp    0x140033258
   14003324c:	lea    rdx,[rsp+0x20]
   140033251:	xor    ecx,ecx
   140033253:	call   0x14002ae64
   140033258:	mov    eax,ebx
   14003325a:	mov    rbx,QWORD PTR [rsp+0x60]
   14003325f:	mov    rbp,QWORD PTR [rsp+0x68]
   140033264:	mov    rsi,QWORD PTR [rsp+0x70]
   140033269:	add    rsp,0x50
   14003326d:	pop    rdi
   14003326e:	ret    
   14003326f:	int3   
   140033270:	mov    QWORD PTR [rsp+0x8],rbx
   140033275:	push   rsi
   140033276:	push   rdi
   140033277:	push   r14
   140033279:	sub    rsp,0x20
   14003327d:	mov    rdi,rcx
   140033280:	call   0x140028a64
   140033285:	test   eax,eax
   140033287:	jns    0x140033293
   140033289:	mov    eax,0xffff
   14003328e:	jmp    0x14003346b
   140033293:	test   BYTE PTR [rdi+0x18],0x40
   140033297:	lea    r14,[rip+0x2b6c2]        # 0x14005e960
   14003329e:	lea    rsi,[rip+0x25d8b]        # 0x140059030
   1400332a5:	jne    0x140033445
   1400332ab:	mov    rcx,rdi
   1400332ae:	call   0x14002f3b4
   1400332b3:	cmp    eax,0xffffffff
   1400332b6:	je     0x1400332e9
   1400332b8:	mov    rcx,rdi
   1400332bb:	call   0x14002f3b4
   1400332c0:	cmp    eax,0xfffffffe
   1400332c3:	je     0x1400332e9
   1400332c5:	mov    rcx,rdi
   1400332c8:	call   0x14002f3b4
   1400332cd:	mov    rcx,rdi
   1400332d0:	movsxd rbx,eax
   1400332d3:	sar    rbx,0x5
   1400332d7:	call   0x14002f3b4
   1400332dc:	and    eax,0x1f
   1400332df:	imul   rax,rax,0x58
   1400332e3:	add    rax,QWORD PTR [r14+rbx*8]
   1400332e7:	jmp    0x1400332ec
   1400332e9:	mov    rax,rsi
   1400332ec:	test   BYTE PTR [rax+0x38],0x7f
   1400332f0:	je     0x140033350
   1400332f2:	dec    DWORD PTR [rdi+0x8]
   1400332f5:	js     0x140033305
   1400332f7:	mov    rax,QWORD PTR [rdi]
   1400332fa:	movzx  ecx,BYTE PTR [rax]
   1400332fd:	inc    rax
   140033300:	mov    QWORD PTR [rdi],rax
   140033303:	jmp    0x14003330f
   140033305:	mov    rcx,rdi
   140033308:	call   0x140035df8
   14003330d:	mov    ecx,eax
   14003330f:	cmp    ecx,0xffffffff
   140033312:	je     0x140033289
   140033318:	dec    DWORD PTR [rdi+0x8]
   14003331b:	mov    BYTE PTR [rsp+0x48],cl
   14003331f:	js     0x14003332f
   140033321:	mov    rax,QWORD PTR [rdi]
   140033324:	movzx  ecx,BYTE PTR [rax]
   140033327:	inc    rax
   14003332a:	mov    QWORD PTR [rdi],rax
   14003332d:	jmp    0x140033339
   14003332f:	mov    rcx,rdi
   140033332:	call   0x140035df8
   140033337:	mov    ecx,eax
   140033339:	cmp    ecx,0xffffffff
   14003333c:	je     0x140033289
   140033342:	mov    BYTE PTR [rsp+0x49],cl
   140033346:	movzx  eax,WORD PTR [rsp+0x48]
   14003334b:	jmp    0x14003346b
   140033350:	test   BYTE PTR [rdi+0x18],0x40
   140033354:	jne    0x140033445
   14003335a:	mov    rcx,rdi
   14003335d:	call   0x14002f3b4
   140033362:	cmp    eax,0xffffffff
   140033365:	je     0x140033398
   140033367:	mov    rcx,rdi
   14003336a:	call   0x14002f3b4
   14003336f:	cmp    eax,0xfffffffe
   140033372:	je     0x140033398
   140033374:	mov    rcx,rdi
   140033377:	call   0x14002f3b4
   14003337c:	mov    rcx,rdi
   14003337f:	movsxd rbx,eax
   140033382:	sar    rbx,0x5
   140033386:	call   0x14002f3b4
   14003338b:	mov    esi,eax
   14003338d:	and    esi,0x1f
   140033390:	imul   rsi,rsi,0x58
   140033394:	add    rsi,QWORD PTR [r14+rbx*8]
   140033398:	test   BYTE PTR [rsi+0x8],0x80
   14003339c:	je     0x140033445
   1400333a2:	dec    DWORD PTR [rdi+0x8]
   1400333a5:	mov    ebx,0x1
   1400333aa:	js     0x1400333ba
   1400333ac:	mov    rax,QWORD PTR [rdi]
   1400333af:	movzx  ecx,BYTE PTR [rax]
   1400333b2:	inc    rax
   1400333b5:	mov    QWORD PTR [rdi],rax
   1400333b8:	jmp    0x1400333c4
   1400333ba:	mov    rcx,rdi
   1400333bd:	call   0x140035df8
   1400333c2:	mov    ecx,eax
   1400333c4:	cmp    ecx,0xffffffff
   1400333c7:	je     0x140033289
   1400333cd:	mov    BYTE PTR [rsp+0x50],cl
   1400333d1:	movzx  ecx,cl
   1400333d4:	call   0x14002fecc
   1400333d9:	test   eax,eax
   1400333db:	je     0x14003341a
   1400333dd:	dec    DWORD PTR [rdi+0x8]
   1400333e0:	js     0x1400333f0
   1400333e2:	mov    rax,QWORD PTR [rdi]
   1400333e5:	movzx  ecx,BYTE PTR [rax]
   1400333e8:	inc    rax
   1400333eb:	mov    QWORD PTR [rdi],rax
   1400333ee:	jmp    0x1400333fa
   1400333f0:	mov    rcx,rdi
   1400333f3:	call   0x140035df8
   1400333f8:	mov    ecx,eax
   1400333fa:	cmp    ecx,0xffffffff
   1400333fd:	jne    0x140033411
   1400333ff:	movsx  ecx,BYTE PTR [rsp+0x50]
   140033404:	mov    rdx,rdi
   140033407:	call   0x140036054
   14003340c:	jmp    0x140033289
   140033411:	mov    BYTE PTR [rsp+0x51],cl
   140033415:	mov    ebx,0x2
   14003341a:	lea    rdx,[rsp+0x50]
   14003341f:	lea    rcx,[rsp+0x48]
   140033424:	movsxd r8,ebx
   140033427:	call   0x14003024c
   14003342c:	cmp    eax,0xffffffff
   14003342f:	jne    0x140033346
   140033435:	call   0x140029bf8
   14003343a:	mov    DWORD PTR [rax],0x2a
   140033440:	jmp    0x140033289
   140033445:	movsxd rax,DWORD PTR [rdi+0x8]
   140033449:	add    rax,0xfffffffffffffffe
   14003344d:	mov    DWORD PTR [rdi+0x8],eax
   140033450:	test   eax,eax
   140033452:	js     0x140033463
   140033454:	mov    rcx,QWORD PTR [rdi]
   140033457:	movzx  eax,WORD PTR [rcx]
   14003345a:	add    rcx,0x2
   14003345e:	mov    QWORD PTR [rdi],rcx
   140033461:	jmp    0x14003346b
   140033463:	mov    rcx,rdi
   140033466:	call   0x1400360bc
   14003346b:	mov    rbx,QWORD PTR [rsp+0x40]
   140033470:	add    rsp,0x20
   140033474:	pop    r14
   140033476:	pop    rdi
   140033477:	pop    rsi
   140033478:	ret    
   140033479:	int3   
   14003347a:	int3   
   14003347b:	int3   
   14003347c:	mov    QWORD PTR [rsp+0x10],rbx
   140033481:	mov    QWORD PTR [rsp+0x8],rcx
   140033486:	push   rdi
   140033487:	sub    rsp,0x20
   14003348b:	mov    rbx,rcx
   14003348e:	xor    eax,eax
   140033490:	test   rcx,rcx
   140033493:	setne  al
   140033496:	test   eax,eax
   140033498:	jne    0x1400334b1
   14003349a:	call   0x140029bf8
   14003349f:	mov    DWORD PTR [rax],0x16
   1400334a5:	call   0x140029b2c
   1400334aa:	mov    eax,0xffff
   1400334af:	jmp    0x1400334cd
   1400334b1:	call   0x14002ccbc
   1400334b6:	nop
   1400334b7:	mov    rcx,rbx
   1400334ba:	call   0x140033270
   1400334bf:	movzx  edi,ax
   1400334c2:	mov    rcx,rbx
   1400334c5:	call   0x14002cd58
   1400334ca:	movzx  eax,di
   1400334cd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400334d2:	add    rsp,0x20
   1400334d6:	pop    rdi
   1400334d7:	ret    
   1400334d8:	mov    QWORD PTR [rsp+0x18],rbx
   1400334dd:	mov    QWORD PTR [rsp+0x20],rsi
   1400334e2:	mov    QWORD PTR [rsp+0x10],rdx
   1400334e7:	push   rdi
   1400334e8:	push   r14
   1400334ea:	push   r15
   1400334ec:	sub    rsp,0x30
   1400334f0:	mov    rsi,rdx
   1400334f3:	mov    r15,rcx
   1400334f6:	xor    ebx,ebx
   1400334f8:	mov    eax,ebx
   1400334fa:	test   rcx,rcx
   1400334fd:	setne  al
   140033500:	test   eax,eax
   140033502:	jne    0x14003351b
   140033504:	call   0x140029bf8
   140033509:	mov    DWORD PTR [rax],0x16
   14003350f:	call   0x140029b2c
   140033514:	mov    eax,0xffff
   140033519:	jmp    0x140033578
   14003351b:	mov    eax,ebx
   14003351d:	test   rdx,rdx
   140033520:	setne  al
   140033523:	test   eax,eax
   140033525:	je     0x140033504
   140033527:	call   0x14002cb34
   14003352c:	mov    r14,rax
   14003352f:	mov    rcx,rsi
   140033532:	call   0x14002ccbc
   140033537:	nop
   140033538:	mov    edi,0xffff
   14003353d:	mov    rcx,r14
   140033540:	dec    r14
   140033543:	mov    QWORD PTR [rsp+0x20],r14
   140033548:	test   rcx,rcx
   14003354b:	je     0x14003356e
   14003354d:	movzx  ecx,WORD PTR [r15]
   140033551:	add    r15,0x2
   140033555:	mov    QWORD PTR [rsp+0x50],r15
   14003355a:	mov    rdx,rsi
   14003355d:	call   0x14002ff20
   140033562:	cmp    ax,di
   140033565:	jne    0x14003356c
   140033567:	or     ebx,0xffffffff
   14003356a:	jmp    0x14003356e
   14003356c:	jmp    0x14003353d
   14003356e:	mov    rcx,rsi
   140033571:	call   0x14002cd58
   140033576:	mov    eax,ebx
   140033578:	mov    rbx,QWORD PTR [rsp+0x60]
   14003357d:	mov    rsi,QWORD PTR [rsp+0x68]
   140033582:	add    rsp,0x30
   140033586:	pop    r15
   140033588:	pop    r14
   14003358a:	pop    rdi
   14003358b:	ret    
   14003358c:	mov    QWORD PTR [rsp+0x18],rbx
   140033591:	mov    QWORD PTR [rsp+0x20],rsi
   140033596:	mov    DWORD PTR [rsp+0x8],ecx
   14003359a:	push   rdi
   14003359b:	push   r14
   14003359d:	push   r15
   14003359f:	sub    rsp,0x20
   1400335a3:	mov    ebx,edx
   1400335a5:	movsxd rdi,ecx
   1400335a8:	cmp    edx,0x20000
   1400335ae:	je     0x1400335e0
   1400335b0:	cmp    edx,0x10000
   1400335b6:	je     0x1400335e0
   1400335b8:	cmp    edx,0x8000
   1400335be:	je     0x1400335e0
   1400335c0:	cmp    edx,0x4000
   1400335c6:	je     0x1400335e0
   1400335c8:	cmp    edx,0x40000
   1400335ce:	je     0x1400335e0
   1400335d0:	call   0x140029bf8
   1400335d5:	mov    DWORD PTR [rax],0x16
   1400335db:	jmp    0x140033674
   1400335e0:	cmp    edi,0xfffffffe
   1400335e3:	jne    0x1400335f5
   1400335e5:	call   0x140029bf8
   1400335ea:	mov    DWORD PTR [rax],0x9
   1400335f0:	jmp    0x140033679
   1400335f5:	call   0x140028a64
   1400335fa:	test   eax,eax
   1400335fc:	js     0x140033679
   1400335fe:	test   edi,edi
   140033600:	js     0x140033669
   140033602:	cmp    edi,DWORD PTR [rip+0x2b338]        # 0x14005e940
   140033608:	jae    0x140033669
   14003360a:	mov    rsi,rdi
   14003360d:	mov    r14,rdi
   140033610:	sar    r14,0x5
   140033614:	lea    r15,[rip+0x2b345]        # 0x14005e960
   14003361b:	and    esi,0x1f
   14003361e:	imul   rsi,rsi,0x58
   140033622:	mov    rax,QWORD PTR [r15+r14*8]
   140033626:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14003362b:	and    ecx,0x1
   14003362e:	je     0x140033669
   140033630:	mov    ecx,edi
   140033632:	call   0x140031538
   140033637:	nop
   140033638:	mov    rax,QWORD PTR [r15+r14*8]
   14003363c:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140033641:	je     0x140033650
   140033643:	mov    edx,ebx
   140033645:	mov    ecx,edi
   140033647:	call   0x140033690
   14003364c:	mov    ebx,eax
   14003364e:	jmp    0x14003365e
   140033650:	call   0x140029bf8
   140033655:	mov    DWORD PTR [rax],0x9
   14003365b:	or     ebx,0xffffffff
   14003365e:	mov    ecx,edi
   140033660:	call   0x140031700
   140033665:	mov    eax,ebx
   140033667:	jmp    0x14003367c
   140033669:	call   0x140029bf8
   14003366e:	mov    DWORD PTR [rax],0x9
   140033674:	call   0x140029b2c
   140033679:	or     eax,0xffffffff
   14003367c:	mov    rbx,QWORD PTR [rsp+0x50]
   140033681:	mov    rsi,QWORD PTR [rsp+0x58]
   140033686:	add    rsp,0x20
   14003368a:	pop    r15
   14003368c:	pop    r14
   14003368e:	pop    rdi
   14003368f:	ret    
   140033690:	mov    QWORD PTR [rsp+0x8],rbx
   140033695:	mov    QWORD PTR [rsp+0x10],rdi
   14003369a:	movsxd r8,ecx
   14003369d:	lea    rdi,[rip+0x2b2bc]        # 0x14005e960
   1400336a4:	mov    r10,r8
   1400336a7:	and    r8d,0x1f
   1400336ab:	sar    r10,0x5
   1400336af:	imul   r8,r8,0x58
   1400336b3:	mov    r9,QWORD PTR [rdi+r10*8]
   1400336b7:	mov    al,BYTE PTR [r9+r8*1+0x38]
   1400336bc:	movzx  ecx,BYTE PTR [r9+r8*1+0x8]
   1400336c2:	add    al,al
   1400336c4:	mov    ebx,ecx
   1400336c6:	movsx  r11d,al
   1400336ca:	and    ebx,0x80
   1400336d0:	sar    r11d,1
   1400336d3:	cmp    edx,0x4000
   1400336d9:	je     0x140033736
   1400336db:	cmp    edx,0x8000
   1400336e1:	je     0x14003372c
   1400336e3:	lea    eax,[rdx-0x10000]
   1400336e9:	test   eax,0xfffeffff
   1400336ee:	je     0x140033712
   1400336f0:	cmp    edx,0x40000
   1400336f6:	jne    0x140033748
   1400336f8:	or     cl,0x80
   1400336fb:	mov    BYTE PTR [r9+r8*1+0x8],cl
   140033700:	mov    rax,QWORD PTR [rdi+r10*8]
   140033704:	and    BYTE PTR [rax+r8*1+0x38],0x81
   14003370a:	or     BYTE PTR [rax+r8*1+0x38],0x1
   140033710:	jmp    0x140033748
   140033712:	or     cl,0x80
   140033715:	mov    BYTE PTR [r9+r8*1+0x8],cl
   14003371a:	mov    rax,QWORD PTR [rdi+r10*8]
   14003371e:	and    BYTE PTR [rax+r8*1+0x38],0x82
   140033724:	or     BYTE PTR [rax+r8*1+0x38],0x2
   14003372a:	jmp    0x140033748
   14003372c:	and    cl,0x7f
   14003372f:	mov    BYTE PTR [r9+r8*1+0x8],cl
   140033734:	jmp    0x140033748
   140033736:	or     cl,0x80
   140033739:	mov    BYTE PTR [r9+r8*1+0x8],cl
   14003373e:	mov    rcx,QWORD PTR [rdi+r10*8]
   140033742:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   140033748:	test   ebx,ebx
   14003374a:	jne    0x140033753
   14003374c:	mov    eax,0x8000
   140033751:	jmp    0x140033762
   140033753:	neg    r11d
   140033756:	sbb    eax,eax
   140033758:	and    eax,0xc000
   14003375d:	add    eax,0x4000
   140033762:	mov    rbx,QWORD PTR [rsp+0x8]
   140033767:	mov    rdi,QWORD PTR [rsp+0x10]
   14003376c:	ret    
   14003376d:	int3   
   14003376e:	int3   
   14003376f:	int3   
   140033770:	mov    QWORD PTR [rsp+0x10],rbx
   140033775:	mov    QWORD PTR [rsp+0x18],r8
   14003377a:	push   rbp
   14003377b:	push   rsi
   14003377c:	push   rdi
   14003377d:	push   r12
   14003377f:	push   r13
   140033781:	push   r14
   140033783:	push   r15
   140033785:	sub    rsp,0x20
   140033789:	mov    r14,QWORD PTR [rsp+0x98]
   140033791:	mov    r15,QWORD PTR [rsp+0x88]
   140033799:	mov    rdi,rcx
   14003379c:	xor    ecx,ecx
   14003379e:	mov    r13,r9
   1400337a1:	mov    rsi,r8
   1400337a4:	mov    r9d,ecx
   1400337a7:	mov    DWORD PTR [rsp+0x60],ecx
   1400337ab:	mov    r12,rdx
   1400337ae:	test   rdi,rdi
   1400337b1:	je     0x1400337bd
   1400337b3:	test   rdx,rdx
   1400337b6:	jne    0x1400337c8
   1400337b8:	test   r8,r8
   1400337bb:	je     0x1400337cd
   1400337bd:	mov    r9d,0x1
   1400337c3:	jmp    0x140033995
   1400337c8:	test   r8,r8
   1400337cb:	je     0x1400337bd
   1400337cd:	test   r13,r13
   1400337d0:	jne    0x1400337de
   1400337d2:	cmp    QWORD PTR [rsp+0x80],rcx
   1400337da:	jne    0x1400337bd
   1400337dc:	jmp    0x1400337e8
   1400337de:	cmp    QWORD PTR [rsp+0x80],rcx
   1400337e6:	je     0x1400337bd
   1400337e8:	test   r15,r15
   1400337eb:	jne    0x1400337f9
   1400337ed:	cmp    QWORD PTR [rsp+0x90],rcx
   1400337f5:	jne    0x1400337bd
   1400337f7:	jmp    0x140033803
   1400337f9:	cmp    QWORD PTR [rsp+0x90],rcx
   140033801:	je     0x1400337bd
   140033803:	test   r14,r14
   140033806:	jne    0x140033814
   140033808:	cmp    QWORD PTR [rsp+0xa0],rcx
   140033810:	jne    0x1400337bd
   140033812:	jmp    0x14003381e
   140033814:	cmp    QWORD PTR [rsp+0xa0],rcx
   14003381c:	je     0x1400337bd
   14003381e:	mov    eax,0x1
   140033823:	mov    rbx,rdi
   140033826:	cmp    WORD PTR [rbx],cx
   140033829:	je     0x140033834
   14003382b:	add    rbx,0x2
   14003382f:	dec    rax
   140033832:	jne    0x140033826
   140033834:	cmp    WORD PTR [rbx],0x3a
   140033838:	jne    0x140033865
   14003383a:	test   rdx,rdx
   14003383d:	je     0x14003385f
   14003383f:	cmp    r8,0x3
   140033843:	jb     0x140033995
   140033849:	mov    r9d,0x2
   14003384f:	mov    r8,rdi
   140033852:	mov    rdx,rsi
   140033855:	mov    rcx,r12
   140033858:	call   0x14002e200
   14003385d:	xor    ecx,ecx
   14003385f:	lea    rdi,[rbx+0x2]
   140033863:	jmp    0x14003386d
   140033865:	test   rdx,rdx
   140033868:	je     0x14003386d
   14003386a:	mov    WORD PTR [rdx],cx
   14003386d:	movzx  eax,WORD PTR [rdi]
   140033870:	mov    rbp,rcx
   140033873:	mov    rsi,rcx
   140033876:	mov    rbx,rdi
   140033879:	test   ax,ax
   14003387c:	je     0x1400338e0
   14003387e:	cmp    ax,0x2f
   140033882:	je     0x140033895
   140033884:	cmp    ax,0x5c
   140033888:	je     0x140033895
   14003388a:	cmp    ax,0x2e
   14003388e:	jne    0x140033899
   140033890:	mov    rsi,rbx
   140033893:	jmp    0x140033899
   140033895:	lea    rbp,[rbx+0x2]
   140033899:	add    rbx,0x2
   14003389d:	movzx  eax,WORD PTR [rbx]
   1400338a0:	test   ax,ax
   1400338a3:	jne    0x14003387e
   1400338a5:	test   rbp,rbp
   1400338a8:	je     0x1400338e0
   1400338aa:	test   r13,r13
   1400338ad:	je     0x1400338db
   1400338af:	mov    r9,rbp
   1400338b2:	sub    r9,rdi
   1400338b5:	sar    r9,1
   1400338b8:	cmp    QWORD PTR [rsp+0x80],r9
   1400338c0:	jbe    0x14003398b
   1400338c6:	mov    rdx,QWORD PTR [rsp+0x80]
   1400338ce:	mov    r8,rdi
   1400338d1:	mov    rcx,r13
   1400338d4:	call   0x14002e200
   1400338d9:	xor    ecx,ecx
   1400338db:	mov    rdi,rbp
   1400338de:	jmp    0x1400338ea
   1400338e0:	test   r13,r13
   1400338e3:	je     0x1400338ea
   1400338e5:	mov    WORD PTR [r13+0x0],cx
   1400338ea:	test   rsi,rsi
   1400338ed:	je     0x14003394e
   1400338ef:	cmp    rsi,rdi
   1400338f2:	jb     0x14003394e
   1400338f4:	test   r15,r15
   1400338f7:	je     0x140033921
   1400338f9:	mov    r9,rsi
   1400338fc:	sub    r9,rdi
   1400338ff:	sar    r9,1
   140033902:	cmp    QWORD PTR [rsp+0x90],r9
   14003390a:	jbe    0x14003398b
   14003390c:	mov    rdx,QWORD PTR [rsp+0x90]
   140033914:	mov    r8,rdi
   140033917:	mov    rcx,r15
   14003391a:	call   0x14002e200
   14003391f:	xor    ecx,ecx
   140033921:	test   r14,r14
   140033924:	je     0x140033984
   140033926:	sub    rbx,rsi
   140033929:	sar    rbx,1
   14003392c:	cmp    QWORD PTR [rsp+0xa0],rbx
   140033934:	jbe    0x14003398b
   140033936:	mov    rdx,QWORD PTR [rsp+0xa0]
   14003393e:	mov    r9,rbx
   140033941:	mov    r8,rsi
   140033944:	mov    rcx,r14
   140033947:	call   0x14002e200
   14003394c:	jmp    0x140033984
   14003394e:	test   r15,r15
   140033951:	je     0x14003397b
   140033953:	sub    rbx,rdi
   140033956:	sar    rbx,1
   140033959:	cmp    QWORD PTR [rsp+0x90],rbx
   140033961:	jbe    0x14003398b
   140033963:	mov    rdx,QWORD PTR [rsp+0x90]
   14003396b:	mov    r9,rbx
   14003396e:	mov    r8,rdi
   140033971:	mov    rcx,r15
   140033974:	call   0x14002e200
   140033979:	xor    ecx,ecx
   14003397b:	test   r14,r14
   14003397e:	je     0x140033984
   140033980:	mov    WORD PTR [r14],cx
   140033984:	xor    eax,eax
   140033986:	jmp    0x140033a0b
   14003398b:	mov    r9d,DWORD PTR [rsp+0x60]
   140033990:	mov    rsi,QWORD PTR [rsp+0x70]
   140033995:	test   r12,r12
   140033998:	je     0x1400339a4
   14003399a:	test   rsi,rsi
   14003399d:	je     0x1400339a4
   14003399f:	mov    WORD PTR [r12],cx
   1400339a4:	test   r13,r13
   1400339a7:	je     0x1400339b8
   1400339a9:	cmp    QWORD PTR [rsp+0x80],rcx
   1400339b1:	jbe    0x1400339b8
   1400339b3:	mov    WORD PTR [r13+0x0],cx
   1400339b8:	test   r15,r15
   1400339bb:	je     0x1400339cb
   1400339bd:	cmp    QWORD PTR [rsp+0x90],rcx
   1400339c5:	jbe    0x1400339cb
   1400339c7:	mov    WORD PTR [r15],cx
   1400339cb:	test   r14,r14
   1400339ce:	je     0x1400339de
   1400339d0:	cmp    QWORD PTR [rsp+0xa0],rcx
   1400339d8:	jbe    0x1400339de
   1400339da:	mov    WORD PTR [r14],cx
   1400339de:	test   rdi,rdi
   1400339e1:	jne    0x1400339f8
   1400339e3:	call   0x140029bf8
   1400339e8:	mov    ebx,0x16
   1400339ed:	mov    DWORD PTR [rax],ebx
   1400339ef:	call   0x140029b2c
   1400339f4:	mov    eax,ebx
   1400339f6:	jmp    0x140033a0b
   1400339f8:	test   r9d,r9d
   1400339fb:	jne    0x1400339e3
   1400339fd:	call   0x140029bf8
   140033a02:	mov    ecx,0x22
   140033a07:	mov    DWORD PTR [rax],ecx
   140033a09:	mov    eax,ecx
   140033a0b:	mov    rbx,QWORD PTR [rsp+0x68]
   140033a10:	add    rsp,0x20
   140033a14:	pop    r15
   140033a16:	pop    r14
   140033a18:	pop    r13
   140033a1a:	pop    r12
   140033a1c:	pop    rdi
   140033a1d:	pop    rsi
   140033a1e:	pop    rbp
   140033a1f:	ret    
   140033a20:	mov    QWORD PTR [rsp+0x10],rbx
   140033a25:	mov    QWORD PTR [rsp+0x18],r8
   140033a2a:	push   rbp
   140033a2b:	push   rsi
   140033a2c:	push   rdi
   140033a2d:	push   r12
   140033a2f:	push   r13
   140033a31:	push   r14
   140033a33:	push   r15
   140033a35:	sub    rsp,0x20
   140033a39:	mov    r14,QWORD PTR [rsp+0x98]
   140033a41:	mov    r15,QWORD PTR [rsp+0x88]
   140033a49:	mov    rdi,rcx
   140033a4c:	mov    r12,rdx
   140033a4f:	xor    edx,edx
   140033a51:	mov    r13,r9
   140033a54:	mov    ecx,edx
   140033a56:	mov    DWORD PTR [rsp+0x60],edx
   140033a5a:	mov    r10,r8
   140033a5d:	test   rdi,rdi
   140033a60:	je     0x140033a6c
   140033a62:	test   r12,r12
   140033a65:	jne    0x140033a76
   140033a67:	test   r8,r8
   140033a6a:	je     0x140033a7b
   140033a6c:	mov    ecx,0x1
   140033a71:	jmp    0x140033c39
   140033a76:	test   r8,r8
   140033a79:	je     0x140033a6c
   140033a7b:	test   r9,r9
   140033a7e:	jne    0x140033a8c
   140033a80:	cmp    QWORD PTR [rsp+0x80],rdx
   140033a88:	jne    0x140033a6c
   140033a8a:	jmp    0x140033a96
   140033a8c:	cmp    QWORD PTR [rsp+0x80],rdx
   140033a94:	je     0x140033a6c
   140033a96:	test   r15,r15
   140033a99:	jne    0x140033aa7
   140033a9b:	cmp    QWORD PTR [rsp+0x90],rdx
   140033aa3:	jne    0x140033a6c
   140033aa5:	jmp    0x140033ab1
   140033aa7:	cmp    QWORD PTR [rsp+0x90],rdx
   140033aaf:	je     0x140033a6c
   140033ab1:	test   r14,r14
   140033ab4:	jne    0x140033ac2
   140033ab6:	cmp    QWORD PTR [rsp+0xa0],rdx
   140033abe:	jne    0x140033a6c
   140033ac0:	jmp    0x140033acc
   140033ac2:	cmp    QWORD PTR [rsp+0xa0],rdx
   140033aca:	je     0x140033a6c
   140033acc:	mov    eax,0x1
   140033ad1:	mov    rbx,rdi
   140033ad4:	cmp    BYTE PTR [rbx],dl
   140033ad6:	je     0x140033ae0
   140033ad8:	inc    rbx
   140033adb:	dec    rax
   140033ade:	jne    0x140033ad4
   140033ae0:	cmp    BYTE PTR [rbx],0x3a
   140033ae3:	jne    0x140033b10
   140033ae5:	test   r12,r12
   140033ae8:	je     0x140033b0a
   140033aea:	cmp    r8,0x3
   140033aee:	jb     0x140033c39
   140033af4:	mov    r9d,0x2
   140033afa:	mov    r8,rdi
   140033afd:	mov    rdx,r10
   140033b00:	mov    rcx,r12
   140033b03:	call   0x14002e634
   140033b08:	xor    edx,edx
   140033b0a:	lea    rdi,[rbx+0x1]
   140033b0e:	jmp    0x140033b19
   140033b10:	test   r12,r12
   140033b13:	je     0x140033b19
   140033b15:	mov    BYTE PTR [r12],dl
   140033b19:	mov    rbp,rdx
   140033b1c:	mov    rsi,rdx
   140033b1f:	mov    rbx,rdi
   140033b22:	cmp    BYTE PTR [rdi],dl
   140033b24:	je     0x140033b8f
   140033b26:	movsx  ecx,BYTE PTR [rbx]
   140033b29:	call   0x140036290
   140033b2e:	xor    edx,edx
   140033b30:	test   eax,eax
   140033b32:	je     0x140033b39
   140033b34:	inc    rbx
   140033b37:	jmp    0x140033b50
   140033b39:	mov    al,BYTE PTR [rbx]
   140033b3b:	cmp    al,0x2f
   140033b3d:	je     0x140033b4c
   140033b3f:	cmp    al,0x5c
   140033b41:	je     0x140033b4c
   140033b43:	cmp    al,0x2e
   140033b45:	jne    0x140033b50
   140033b47:	mov    rsi,rbx
   140033b4a:	jmp    0x140033b50
   140033b4c:	lea    rbp,[rbx+0x1]
   140033b50:	inc    rbx
   140033b53:	cmp    BYTE PTR [rbx],dl
   140033b55:	jne    0x140033b26
   140033b57:	test   rbp,rbp
   140033b5a:	je     0x140033b8f
   140033b5c:	test   r13,r13
   140033b5f:	je     0x140033b8a
   140033b61:	mov    r9,rbp
   140033b64:	sub    r9,rdi
   140033b67:	cmp    QWORD PTR [rsp+0x80],r9
   140033b6f:	jbe    0x140033c2c
   140033b75:	mov    rdx,QWORD PTR [rsp+0x80]
   140033b7d:	mov    r8,rdi
   140033b80:	mov    rcx,r13
   140033b83:	call   0x14002e634
   140033b88:	xor    edx,edx
   140033b8a:	mov    rdi,rbp
   140033b8d:	jmp    0x140033b98
   140033b8f:	test   r13,r13
   140033b92:	je     0x140033b98
   140033b94:	mov    BYTE PTR [r13+0x0],dl
   140033b98:	test   rsi,rsi
   140033b9b:	je     0x140033bf6
   140033b9d:	cmp    rsi,rdi
   140033ba0:	jb     0x140033bf6
   140033ba2:	test   r15,r15
   140033ba5:	je     0x140033bcc
   140033ba7:	mov    r9,rsi
   140033baa:	sub    r9,rdi
   140033bad:	cmp    QWORD PTR [rsp+0x90],r9
   140033bb5:	jbe    0x140033c30
   140033bb7:	mov    rdx,QWORD PTR [rsp+0x90]
   140033bbf:	mov    r8,rdi
   140033bc2:	mov    rcx,r15
   140033bc5:	call   0x14002e634
   140033bca:	xor    edx,edx
   140033bcc:	test   r14,r14
   140033bcf:	je     0x140033c28
   140033bd1:	sub    rbx,rsi
   140033bd4:	cmp    QWORD PTR [rsp+0xa0],rbx
   140033bdc:	jbe    0x140033c30
   140033bde:	mov    rdx,QWORD PTR [rsp+0xa0]
   140033be6:	mov    r9,rbx
   140033be9:	mov    r8,rsi
   140033bec:	mov    rcx,r14
   140033bef:	call   0x14002e634
   140033bf4:	jmp    0x140033c28
   140033bf6:	test   r15,r15
   140033bf9:	je     0x140033c20
   140033bfb:	sub    rbx,rdi
   140033bfe:	cmp    QWORD PTR [rsp+0x90],rbx
   140033c06:	jbe    0x140033c30
   140033c08:	mov    rdx,QWORD PTR [rsp+0x90]
   140033c10:	mov    r9,rbx
   140033c13:	mov    r8,rdi
   140033c16:	mov    rcx,r15
   140033c19:	call   0x14002e634
   140033c1e:	xor    edx,edx
   140033c20:	test   r14,r14
   140033c23:	je     0x140033c28
   140033c25:	mov    BYTE PTR [r14],dl
   140033c28:	xor    eax,eax
   140033c2a:	jmp    0x140033caa
   140033c2c:	mov    ecx,edx
   140033c2e:	jmp    0x140033c34
   140033c30:	mov    ecx,DWORD PTR [rsp+0x60]
   140033c34:	mov    r10,QWORD PTR [rsp+0x70]
   140033c39:	test   r12,r12
   140033c3c:	je     0x140033c47
   140033c3e:	test   r10,r10
   140033c41:	je     0x140033c47
   140033c43:	mov    BYTE PTR [r12],dl
   140033c47:	test   r13,r13
   140033c4a:	je     0x140033c5a
   140033c4c:	cmp    QWORD PTR [rsp+0x80],rdx
   140033c54:	jbe    0x140033c5a
   140033c56:	mov    BYTE PTR [r13+0x0],dl
   140033c5a:	test   r15,r15
   140033c5d:	je     0x140033c6c
   140033c5f:	cmp    QWORD PTR [rsp+0x90],rdx
   140033c67:	jbe    0x140033c6c
   140033c69:	mov    BYTE PTR [r15],dl
   140033c6c:	test   r14,r14
   140033c6f:	je     0x140033c7e
   140033c71:	cmp    QWORD PTR [rsp+0xa0],rdx
   140033c79:	jbe    0x140033c7e
   140033c7b:	mov    BYTE PTR [r14],dl
   140033c7e:	test   rdi,rdi
   140033c81:	jne    0x140033c98
   140033c83:	call   0x140029bf8
   140033c88:	mov    ebx,0x16
   140033c8d:	mov    DWORD PTR [rax],ebx
   140033c8f:	call   0x140029b2c
   140033c94:	mov    eax,ebx
   140033c96:	jmp    0x140033caa
   140033c98:	test   ecx,ecx
   140033c9a:	jne    0x140033c83
   140033c9c:	call   0x140029bf8
   140033ca1:	mov    ecx,0x22
   140033ca6:	mov    DWORD PTR [rax],ecx
   140033ca8:	mov    eax,ecx
   140033caa:	mov    rbx,QWORD PTR [rsp+0x68]
   140033caf:	add    rsp,0x20
   140033cb3:	pop    r15
   140033cb5:	pop    r14
   140033cb7:	pop    r13
   140033cb9:	pop    r12
   140033cbb:	pop    rdi
   140033cbc:	pop    rsi
   140033cbd:	pop    rbp
   140033cbe:	ret    
   140033cbf:	int3   
   140033cc0:	jmp    0x1400362a4
   140033cc5:	int3   
   140033cc6:	int3   
   140033cc7:	int3   
   140033cc8:	rex push rbp
   140033cca:	push   r14
   140033ccc:	push   r15
   140033cce:	sub    rsp,0x40
   140033cd2:	lea    rbp,[rsp+0x30]
   140033cd7:	mov    QWORD PTR [rbp+0x30],rbx
   140033cdb:	mov    QWORD PTR [rbp+0x38],rsi
   140033cdf:	mov    QWORD PTR [rbp+0x40],rdi
   140033ce3:	mov    QWORD PTR [rbp+0x48],r12
   140033ce7:	mov    rax,QWORD PTR [rip+0x2539a]        # 0x140059088
   140033cee:	xor    rax,rbp
   140033cf1:	mov    QWORD PTR [rbp+0x0],rax
   140033cf5:	xor    r12d,r12d
   140033cf8:	mov    r15,r8
   140033cfb:	mov    rsi,rdx
   140033cfe:	mov    rbx,rcx
   140033d01:	test   rcx,rcx
   140033d04:	jne    0x140033d1c
   140033d06:	call   0x140029bf8
   140033d0b:	mov    ebx,0x16
   140033d10:	mov    DWORD PTR [rax],ebx
   140033d12:	call   0x140029b2c
   140033d17:	jmp    0x140033e92
   140033d1c:	call   0x14002741c
   140033d21:	cmp    rax,rsi
   140033d24:	jb     0x140033d2c
   140033d26:	mov    WORD PTR [rbx],r12w
   140033d2a:	jmp    0x140033d06
   140033d2c:	mov    rax,QWORD PTR [r15]
   140033d2f:	mov    rcx,QWORD PTR [rax+0x138]
   140033d36:	test   rcx,rcx
   140033d39:	je     0x140033d8c
   140033d3b:	or     r9d,0xffffffff
   140033d3f:	mov    r8,rbx
   140033d42:	mov    edx,0x200
   140033d47:	mov    DWORD PTR [rsp+0x28],r12d
   140033d4c:	mov    QWORD PTR [rsp+0x20],r12
   140033d51:	call   0x14002f24c
   140033d56:	movsxd r14,eax
   140033d59:	test   eax,eax
   140033d5b:	jne    0x140033d99
   140033d5d:	call   0x140029bf8
   140033d62:	mov    ebx,0x2a
   140033d67:	mov    DWORD PTR [rax],ebx
   140033d69:	call   0x140029bf8
   140033d6e:	mov    eax,DWORD PTR [rax]
   140033d70:	jmp    0x140033e94
   140033d75:	movzx  ecx,WORD PTR [rbx]
   140033d78:	lea    eax,[rcx-0x61]
   140033d7b:	cmp    ax,0x19
   140033d7f:	ja     0x140033d88
   140033d81:	sub    cx,0x20
   140033d85:	mov    WORD PTR [rbx],cx
   140033d88:	add    rbx,0x2
   140033d8c:	cmp    WORD PTR [rbx],r12w
   140033d90:	jne    0x140033d75
   140033d92:	xor    eax,eax
   140033d94:	jmp    0x140033e94
   140033d99:	mov    rcx,r14
   140033d9c:	cmp    rsi,r14
   140033d9f:	jae    0x140033db4
   140033da1:	mov    WORD PTR [rbx],r12w
   140033da5:	call   0x140029bf8
   140033daa:	mov    ebx,0x22
   140033daf:	jmp    0x140033d10
   140033db4:	test   eax,eax
   140033db6:	jle    0x140033e22
   140033db8:	xor    edx,edx
   140033dba:	lea    rax,[rdx-0x20]
   140033dbe:	div    rcx
   140033dc1:	cmp    rax,0x2
   140033dc5:	jb     0x140033e22
   140033dc7:	lea    rcx,[r14*2+0x10]
   140033dcf:	cmp    rcx,0x400
   140033dd6:	ja     0x140033e09
   140033dd8:	lea    rax,[rcx+0xf]
   140033ddc:	cmp    rax,rcx
   140033ddf:	ja     0x140033deb
   140033de1:	movabs rax,0xffffffffffffff0
   140033deb:	and    rax,0xfffffffffffffff0
   140033def:	call   0x1400311e0
   140033df4:	sub    rsp,rax
   140033df7:	lea    rdi,[rsp+0x30]
   140033dfc:	test   rdi,rdi
   140033dff:	je     0x140033e2a
   140033e01:	mov    DWORD PTR [rdi],0xcccc
   140033e07:	jmp    0x140033e1c
   140033e09:	call   0x140029d54
   140033e0e:	mov    rdi,rax
   140033e11:	test   rax,rax
   140033e14:	je     0x140033e25
   140033e16:	mov    DWORD PTR [rax],0xdddd
   140033e1c:	add    rdi,0x10
   140033e20:	jmp    0x140033e25
   140033e22:	mov    rdi,r12
   140033e25:	test   rdi,rdi
   140033e28:	jne    0x140033e3a
   140033e2a:	call   0x140029bf8
   140033e2f:	mov    DWORD PTR [rax],0xc
   140033e35:	jmp    0x140033d69
   140033e3a:	mov    rcx,QWORD PTR [r15]
   140033e3d:	or     r9d,0xffffffff
   140033e41:	mov    r8,rbx
   140033e44:	mov    rcx,QWORD PTR [rcx+0x138]
   140033e4b:	mov    edx,0x200
   140033e50:	mov    DWORD PTR [rsp+0x28],r14d
   140033e55:	mov    QWORD PTR [rsp+0x20],rdi
   140033e5a:	call   0x14002f24c
   140033e5f:	test   eax,eax
   140033e61:	je     0x140033e75
   140033e63:	mov    r8,rdi
   140033e66:	mov    rdx,rsi
   140033e69:	mov    rcx,rbx
   140033e6c:	call   0x14002cac8
   140033e71:	mov    ebx,eax
   140033e73:	jmp    0x140033e81
   140033e75:	call   0x140029bf8
   140033e7a:	mov    ebx,0x2a
   140033e7f:	mov    DWORD PTR [rax],ebx
   140033e81:	lea    rcx,[rdi-0x10]
   140033e85:	cmp    DWORD PTR [rcx],0xdddd
   140033e8b:	jne    0x140033e92
   140033e8d:	call   0x1400273dc
   140033e92:	mov    eax,ebx
   140033e94:	mov    rcx,QWORD PTR [rbp+0x0]
   140033e98:	xor    rcx,rbp
   140033e9b:	call   0x1400265a0
   140033ea0:	mov    rbx,QWORD PTR [rbp+0x30]
   140033ea4:	mov    rsi,QWORD PTR [rbp+0x38]
   140033ea8:	mov    rdi,QWORD PTR [rbp+0x40]
   140033eac:	mov    r12,QWORD PTR [rbp+0x48]
   140033eb0:	lea    rsp,[rbp+0x10]
   140033eb4:	pop    r15
   140033eb6:	pop    r14
   140033eb8:	pop    rbp
   140033eb9:	ret    
   140033eba:	int3   
   140033ebb:	int3   
   140033ebc:	xor    r8d,r8d
   140033ebf:	jmp    0x140033ec4
   140033ec4:	mov    QWORD PTR [rsp+0x8],rbx
   140033ec9:	push   rdi
   140033eca:	sub    rsp,0x40
   140033ece:	mov    rdi,rcx
   140033ed1:	mov    rbx,rdx
   140033ed4:	lea    rcx,[rsp+0x20]
   140033ed9:	mov    rdx,r8
   140033edc:	call   0x140026f30
   140033ee1:	lea    r8,[rsp+0x20]
   140033ee6:	mov    rdx,rbx
   140033ee9:	mov    rcx,rdi
   140033eec:	call   0x140033cc8
   140033ef1:	cmp    BYTE PTR [rsp+0x38],0x0
   140033ef6:	je     0x140033f04
   140033ef8:	mov    rcx,QWORD PTR [rsp+0x30]
   140033efd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140033f04:	mov    rbx,QWORD PTR [rsp+0x50]
   140033f09:	add    rsp,0x40
   140033f0d:	pop    rdi
   140033f0e:	ret    
   140033f0f:	int3   
   140033f10:	mov    r11,rsp
   140033f13:	mov    QWORD PTR [r11+0x10],rdx
   140033f17:	mov    QWORD PTR [r11+0x18],r8
   140033f1b:	mov    QWORD PTR [r11+0x20],r9
   140033f1f:	sub    rsp,0x38
   140033f23:	mov    r8,rdx
   140033f26:	lea    rax,[r11+0x18]
   140033f2a:	mov    rdx,rcx
   140033f2d:	lea    rcx,[rip+0x247c]        # 0x1400363b0
   140033f34:	xor    r9d,r9d
   140033f37:	mov    QWORD PTR [r11-0x18],rax
   140033f3b:	call   0x140033f48
   140033f40:	add    rsp,0x38
   140033f44:	ret    
   140033f45:	int3   
   140033f46:	int3   
   140033f47:	int3   
   140033f48:	mov    rax,rsp
   140033f4b:	mov    QWORD PTR [rax+0x8],rbx
   140033f4f:	mov    QWORD PTR [rax+0x10],rbp
   140033f53:	mov    QWORD PTR [rax+0x18],rsi
   140033f57:	push   rdi
   140033f58:	sub    rsp,0x50
   140033f5c:	and    QWORD PTR [rax-0x38],0x0
   140033f61:	mov    rbx,rdx
   140033f64:	xor    edx,edx
   140033f66:	mov    rdi,r8
   140033f69:	mov    rbp,rcx
   140033f6c:	lea    r8d,[rdx+0x28]
   140033f70:	lea    rcx,[rax-0x30]
   140033f74:	mov    rsi,r9
   140033f77:	call   0x14002bb90
   140033f7c:	test   rbx,rbx
   140033f7f:	jne    0x140033f96
   140033f81:	call   0x140029bf8
   140033f86:	mov    DWORD PTR [rax],0x16
   140033f8c:	call   0x140029b2c
   140033f91:	or     eax,0xffffffff
   140033f94:	jmp    0x140033fe2
   140033f96:	test   rdi,rdi
   140033f99:	je     0x140033f81
   140033f9b:	mov    rcx,rbx
   140033f9e:	call   0x14002cb34
   140033fa3:	mov    DWORD PTR [rsp+0x38],0x49
   140033fab:	mov    QWORD PTR [rsp+0x30],rbx
   140033fb0:	mov    QWORD PTR [rsp+0x20],rbx
   140033fb5:	cmp    rax,0x3fffffff
   140033fbb:	jbe    0x140033fc7
   140033fbd:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   140033fc5:	jmp    0x140033fcd
   140033fc7:	add    eax,eax
   140033fc9:	mov    DWORD PTR [rsp+0x28],eax
   140033fcd:	mov    r9,QWORD PTR [rsp+0x80]
   140033fd5:	lea    rcx,[rsp+0x20]
   140033fda:	mov    r8,rsi
   140033fdd:	mov    rdx,rdi
   140033fe0:	call   rbp
   140033fe2:	mov    rbx,QWORD PTR [rsp+0x60]
   140033fe7:	mov    rbp,QWORD PTR [rsp+0x68]
   140033fec:	mov    rsi,QWORD PTR [rsp+0x70]
   140033ff1:	add    rsp,0x50
   140033ff5:	pop    rdi
   140033ff6:	ret    
   140033ff7:	int3   
   140033ff8:	int3   
   140033ff9:	int3   
   140033ffa:	int3   
   140033ffb:	int3   
   140033ffc:	int3   
   140033ffd:	int3   
   140033ffe:	int3   
   140033fff:	int3   
   140034000:	int3   
   140034001:	int3   
   140034002:	int3   
   140034003:	int3   
   140034004:	int3   
   140034005:	int3   
   140034006:	data16 nop WORD PTR [rax+rax*1+0x0]
   140034010:	sub    rdx,rcx
   140034013:	test   r8,r8
   140034016:	je     0x140034082
   140034018:	test   ecx,0x7
   14003401e:	je     0x14003403d
   140034020:	movzx  eax,BYTE PTR [rcx]
   140034023:	cmp    al,BYTE PTR [rcx+rdx*1]
   140034026:	jne    0x140034085
   140034028:	inc    rcx
   14003402b:	dec    r8
   14003402e:	je     0x140034082
   140034030:	test   al,al
   140034032:	je     0x140034082
   140034034:	test   rcx,0x7
   14003403b:	jne    0x140034020
   14003403d:	movabs r11,0x8080808080808080
   140034047:	movabs r10,0xfefefefefefefeff
   140034051:	lea    eax,[rcx+rdx*1]
   140034054:	and    eax,0xfff
   140034059:	cmp    eax,0xff8
   14003405e:	ja     0x140034020
   140034060:	mov    rax,QWORD PTR [rcx]
   140034063:	cmp    rax,QWORD PTR [rcx+rdx*1]
   140034067:	jne    0x140034020
   140034069:	add    rcx,0x8
   14003406d:	sub    r8,0x8
   140034071:	jbe    0x140034082
   140034073:	lea    r9,[rax+r10*1]
   140034077:	not    rax
   14003407a:	and    rax,r9
   14003407d:	test   r11,rax
   140034080:	je     0x140034051
   140034082:	xor    eax,eax
   140034084:	ret    
   140034085:	sbb    rax,rax
   140034088:	or     rax,0x1
   14003408c:	ret    
   14003408d:	int3   
   14003408e:	int3   
   14003408f:	int3   
   140034090:	mov    QWORD PTR [rsp+0x8],rbx
   140034095:	mov    QWORD PTR [rsp+0x10],rsi
   14003409a:	mov    QWORD PTR [rsp+0x18],rdi
   14003409f:	push   r14
   1400340a1:	sub    rsp,0x20
   1400340a5:	mov    rsi,rdx
   1400340a8:	mov    r14,rcx
   1400340ab:	test   rcx,rcx
   1400340ae:	je     0x1400341af
   1400340b4:	test   rdx,rdx
   1400340b7:	je     0x1400341af
   1400340bd:	xor    edi,edi
   1400340bf:	mov    rbx,rcx
   1400340c2:	test   r8,r8
   1400340c5:	je     0x1400340e8
   1400340c7:	mov    al,BYTE PTR [r8]
   1400340ca:	test   al,al
   1400340cc:	je     0x1400340e8
   1400340ce:	mov    edi,0x2
   1400340d3:	cmp    rdx,rdi
   1400340d6:	jbe    0x140034198
   1400340dc:	lea    rbx,[rcx+0x1]
   1400340e0:	mov    BYTE PTR [rcx],al
   1400340e2:	mov    BYTE PTR [rbx],0x3a
   1400340e5:	inc    rbx
   1400340e8:	mov    rdx,r9
   1400340eb:	test   r9,r9
   1400340ee:	je     0x140034131
   1400340f0:	cmp    BYTE PTR [r9],0x0
   1400340f4:	je     0x140034131
   1400340f6:	inc    rdi
   1400340f9:	cmp    rdi,rsi
   1400340fc:	jae    0x140034198
   140034102:	mov    al,BYTE PTR [rdx]
   140034104:	inc    rdx
   140034107:	mov    BYTE PTR [rbx],al
   140034109:	inc    rbx
   14003410c:	cmp    BYTE PTR [rdx],0x0
   14003410f:	jne    0x1400340f6
   140034111:	mov    rcx,r9
   140034114:	call   0x1400376b8
   140034119:	cmp    BYTE PTR [rax],0x2f
   14003411c:	je     0x140034131
   14003411e:	cmp    BYTE PTR [rax],0x5c
   140034121:	je     0x140034131
   140034123:	inc    rdi
   140034126:	cmp    rdi,rsi
   140034129:	jae    0x140034198
   14003412b:	mov    BYTE PTR [rbx],0x5c
   14003412e:	inc    rbx
   140034131:	mov    rcx,QWORD PTR [rsp+0x50]
   140034136:	test   rcx,rcx
   140034139:	je     0x140034154
   14003413b:	jmp    0x14003414f
   14003413d:	inc    rdi
   140034140:	cmp    rdi,rsi
   140034143:	jae    0x140034198
   140034145:	mov    al,BYTE PTR [rcx]
   140034147:	mov    BYTE PTR [rbx],al
   140034149:	inc    rbx
   14003414c:	inc    rcx
   14003414f:	cmp    BYTE PTR [rcx],0x0
   140034152:	jne    0x14003413d
   140034154:	mov    rcx,QWORD PTR [rsp+0x58]
   140034159:	test   rcx,rcx
   14003415c:	je     0x14003418f
   14003415e:	mov    al,BYTE PTR [rcx]
   140034160:	test   al,al
   140034162:	je     0x14003418f
   140034164:	cmp    al,0x2e
   140034166:	je     0x14003418a
   140034168:	inc    rdi
   14003416b:	cmp    rdi,rsi
   14003416e:	jae    0x140034198
   140034170:	mov    BYTE PTR [rbx],0x2e
   140034173:	inc    rbx
   140034176:	jmp    0x14003418a
   140034178:	inc    rdi
   14003417b:	cmp    rdi,rsi
   14003417e:	jae    0x140034198
   140034180:	mov    al,BYTE PTR [rcx]
   140034182:	mov    BYTE PTR [rbx],al
   140034184:	inc    rbx
   140034187:	inc    rcx
   14003418a:	cmp    BYTE PTR [rcx],0x0
   14003418d:	jne    0x140034178
   14003418f:	lea    rax,[rdi+0x1]
   140034193:	cmp    rax,rsi
   140034196:	jbe    0x1400341a8
   140034198:	mov    BYTE PTR [r14],0x0
   14003419c:	call   0x140029bf8
   1400341a1:	mov    ebx,0x22
   1400341a6:	jmp    0x1400341b9
   1400341a8:	mov    BYTE PTR [rbx],0x0
   1400341ab:	xor    eax,eax
   1400341ad:	jmp    0x1400341c2
   1400341af:	call   0x140029bf8
   1400341b4:	mov    ebx,0x16
   1400341b9:	mov    DWORD PTR [rax],ebx
   1400341bb:	call   0x140029b2c
   1400341c0:	mov    eax,ebx
   1400341c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400341c7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400341cc:	mov    rdi,QWORD PTR [rsp+0x40]
   1400341d1:	add    rsp,0x20
   1400341d5:	pop    r14
   1400341d7:	ret    
   1400341d8:	rex push rbp
   1400341da:	push   r14
   1400341dc:	push   r15
   1400341de:	sub    rsp,0x40
   1400341e2:	lea    rbp,[rsp+0x30]
   1400341e7:	mov    QWORD PTR [rbp+0x30],rbx
   1400341eb:	mov    QWORD PTR [rbp+0x38],rsi
   1400341ef:	mov    QWORD PTR [rbp+0x40],rdi
   1400341f3:	mov    QWORD PTR [rbp+0x48],r12
   1400341f7:	mov    rax,QWORD PTR [rip+0x24e8a]        # 0x140059088
   1400341fe:	xor    rax,rbp
   140034201:	mov    QWORD PTR [rbp+0x0],rax
   140034205:	xor    r12d,r12d
   140034208:	mov    r15,r8
   14003420b:	mov    rsi,rdx
   14003420e:	mov    rbx,rcx
   140034211:	test   rcx,rcx
   140034214:	jne    0x14003422c
   140034216:	call   0x140029bf8
   14003421b:	mov    ebx,0x16
   140034220:	mov    DWORD PTR [rax],ebx
   140034222:	call   0x140029b2c
   140034227:	jmp    0x1400343a2
   14003422c:	call   0x14002741c
   140034231:	cmp    rax,rsi
   140034234:	jb     0x14003423c
   140034236:	mov    WORD PTR [rbx],r12w
   14003423a:	jmp    0x140034216
   14003423c:	mov    rax,QWORD PTR [r15]
   14003423f:	mov    rcx,QWORD PTR [rax+0x138]
   140034246:	test   rcx,rcx
   140034249:	je     0x14003429c
   14003424b:	or     r9d,0xffffffff
   14003424f:	mov    r8,rbx
   140034252:	mov    edx,0x100
   140034257:	mov    DWORD PTR [rsp+0x28],r12d
   14003425c:	mov    QWORD PTR [rsp+0x20],r12
   140034261:	call   0x14002f24c
   140034266:	movsxd r14,eax
   140034269:	test   eax,eax
   14003426b:	jne    0x1400342a9
   14003426d:	call   0x140029bf8
   140034272:	mov    ebx,0x2a
   140034277:	mov    DWORD PTR [rax],ebx
   140034279:	call   0x140029bf8
   14003427e:	mov    eax,DWORD PTR [rax]
   140034280:	jmp    0x1400343a4
   140034285:	movzx  ecx,WORD PTR [rbx]
   140034288:	lea    eax,[rcx-0x41]
   14003428b:	cmp    ax,0x19
   14003428f:	ja     0x140034298
   140034291:	add    cx,0x20
   140034295:	mov    WORD PTR [rbx],cx
   140034298:	add    rbx,0x2
   14003429c:	cmp    WORD PTR [rbx],r12w
   1400342a0:	jne    0x140034285
   1400342a2:	xor    eax,eax
   1400342a4:	jmp    0x1400343a4
   1400342a9:	mov    rcx,r14
   1400342ac:	cmp    rsi,r14
   1400342af:	jae    0x1400342c4
   1400342b1:	mov    WORD PTR [rbx],r12w
   1400342b5:	call   0x140029bf8
   1400342ba:	mov    ebx,0x22
   1400342bf:	jmp    0x140034220
   1400342c4:	test   eax,eax
   1400342c6:	jle    0x140034332
   1400342c8:	xor    edx,edx
   1400342ca:	lea    rax,[rdx-0x20]
   1400342ce:	div    rcx
   1400342d1:	cmp    rax,0x2
   1400342d5:	jb     0x140034332
   1400342d7:	lea    rcx,[r14*2+0x10]
   1400342df:	cmp    rcx,0x400
   1400342e6:	ja     0x140034319
   1400342e8:	lea    rax,[rcx+0xf]
   1400342ec:	cmp    rax,rcx
   1400342ef:	ja     0x1400342fb
   1400342f1:	movabs rax,0xffffffffffffff0
   1400342fb:	and    rax,0xfffffffffffffff0
   1400342ff:	call   0x1400311e0
   140034304:	sub    rsp,rax
   140034307:	lea    rdi,[rsp+0x30]
   14003430c:	test   rdi,rdi
   14003430f:	je     0x14003433a
   140034311:	mov    DWORD PTR [rdi],0xcccc
   140034317:	jmp    0x14003432c
   140034319:	call   0x140029d54
   14003431e:	mov    rdi,rax
   140034321:	test   rax,rax
   140034324:	je     0x140034335
   140034326:	mov    DWORD PTR [rax],0xdddd
   14003432c:	add    rdi,0x10
   140034330:	jmp    0x140034335
   140034332:	mov    rdi,r12
   140034335:	test   rdi,rdi
   140034338:	jne    0x14003434a
   14003433a:	call   0x140029bf8
   14003433f:	mov    DWORD PTR [rax],0xc
   140034345:	jmp    0x140034279
   14003434a:	mov    rcx,QWORD PTR [r15]
   14003434d:	or     r9d,0xffffffff
   140034351:	mov    r8,rbx
   140034354:	mov    rcx,QWORD PTR [rcx+0x138]
   14003435b:	mov    edx,0x100
   140034360:	mov    DWORD PTR [rsp+0x28],r14d
   140034365:	mov    QWORD PTR [rsp+0x20],rdi
   14003436a:	call   0x14002f24c
   14003436f:	test   eax,eax
   140034371:	je     0x140034385
   140034373:	mov    r8,rdi
   140034376:	mov    rdx,rsi
   140034379:	mov    rcx,rbx
   14003437c:	call   0x14002cac8
   140034381:	mov    ebx,eax
   140034383:	jmp    0x140034391
   140034385:	call   0x140029bf8
   14003438a:	mov    ebx,0x2a
   14003438f:	mov    DWORD PTR [rax],ebx
   140034391:	lea    rcx,[rdi-0x10]
   140034395:	cmp    DWORD PTR [rcx],0xdddd
   14003439b:	jne    0x1400343a2
   14003439d:	call   0x1400273dc
   1400343a2:	mov    eax,ebx
   1400343a4:	mov    rcx,QWORD PTR [rbp+0x0]
   1400343a8:	xor    rcx,rbp
   1400343ab:	call   0x1400265a0
   1400343b0:	mov    rbx,QWORD PTR [rbp+0x30]
   1400343b4:	mov    rsi,QWORD PTR [rbp+0x38]
   1400343b8:	mov    rdi,QWORD PTR [rbp+0x40]
   1400343bc:	mov    r12,QWORD PTR [rbp+0x48]
   1400343c0:	lea    rsp,[rbp+0x10]
   1400343c4:	pop    r15
   1400343c6:	pop    r14
   1400343c8:	pop    rbp
   1400343c9:	ret    
   1400343ca:	int3   
   1400343cb:	int3   
   1400343cc:	xor    r8d,r8d
   1400343cf:	jmp    0x1400343d4
   1400343d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400343d9:	push   rdi
   1400343da:	sub    rsp,0x40
   1400343de:	mov    rdi,rcx
   1400343e1:	mov    rbx,rdx
   1400343e4:	lea    rcx,[rsp+0x20]
   1400343e9:	mov    rdx,r8
   1400343ec:	call   0x140026f30
   1400343f1:	lea    r8,[rsp+0x20]
   1400343f6:	mov    rdx,rbx
   1400343f9:	mov    rcx,rdi
   1400343fc:	call   0x1400341d8
   140034401:	cmp    BYTE PTR [rsp+0x38],0x0
   140034406:	je     0x140034414
   140034408:	mov    rcx,QWORD PTR [rsp+0x30]
   14003440d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140034414:	mov    rbx,QWORD PTR [rsp+0x50]
   140034419:	add    rsp,0x40
   14003441d:	pop    rdi
   14003441e:	ret    
   14003441f:	int3   
   140034420:	mov    r11,rsp
   140034423:	mov    QWORD PTR [r11+0x18],r8
   140034427:	mov    QWORD PTR [r11+0x20],r9
   14003442b:	sub    rsp,0x38
   14003442f:	lea    rax,[r11+0x20]
   140034433:	xor    r9d,r9d
   140034436:	mov    QWORD PTR [r11-0x18],rax
   14003443a:	call   0x140027558
   14003443f:	add    rsp,0x38
   140034443:	ret    
   140034444:	mov    r9,rcx
   140034447:	movzx  r8d,BYTE PTR [r9]
   14003444b:	inc    r9
   14003444e:	lea    eax,[r8-0x41]
   140034452:	cmp    eax,0x19
   140034455:	ja     0x14003445b
   140034457:	add    r8d,0x20
   14003445b:	movzx  ecx,BYTE PTR [rdx]
   14003445e:	inc    rdx
   140034461:	lea    eax,[rcx-0x41]
   140034464:	cmp    eax,0x19
   140034467:	ja     0x14003446c
   140034469:	add    ecx,0x20
   14003446c:	test   r8d,r8d
   14003446f:	je     0x140034476
   140034471:	cmp    r8d,ecx
   140034474:	je     0x140034447
   140034476:	sub    r8d,ecx
   140034479:	mov    eax,r8d
   14003447c:	ret    
   14003447d:	int3   
   14003447e:	int3   
   14003447f:	int3   
   140034480:	sub    rsp,0x28
   140034484:	cmp    DWORD PTR [rip+0x28185],0x0        # 0x14005c610
   14003448b:	jne    0x1400344ba
   14003448d:	test   rcx,rcx
   140034490:	jne    0x1400344ac
   140034492:	call   0x140029bf8
   140034497:	mov    DWORD PTR [rax],0x16
   14003449d:	call   0x140029b2c
   1400344a2:	mov    eax,0x7fffffff
   1400344a7:	add    rsp,0x28
   1400344ab:	ret    
   1400344ac:	test   rdx,rdx
   1400344af:	je     0x140034492
   1400344b1:	add    rsp,0x28
   1400344b5:	jmp    0x140034444
   1400344ba:	xor    r8d,r8d
   1400344bd:	add    rsp,0x28
   1400344c1:	jmp    0x1400344c8
   1400344c6:	int3   
   1400344c7:	int3   
   1400344c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400344cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400344d2:	push   rdi
   1400344d3:	sub    rsp,0x40
   1400344d7:	mov    rsi,rcx
   1400344da:	mov    rdi,rdx
   1400344dd:	lea    rcx,[rsp+0x20]
   1400344e2:	mov    rdx,r8
   1400344e5:	call   0x140026f30
   1400344ea:	test   rsi,rsi
   1400344ed:	je     0x1400344f4
   1400344ef:	test   rdi,rdi
   1400344f2:	jne    0x14003450b
   1400344f4:	call   0x140029bf8
   1400344f9:	mov    DWORD PTR [rax],0x16
   1400344ff:	call   0x140029b2c
   140034504:	mov    ebx,0x7fffffff
   140034509:	jmp    0x140034556
   14003450b:	mov    rax,QWORD PTR [rsp+0x20]
   140034510:	cmp    QWORD PTR [rax+0x138],0x0
   140034518:	jne    0x140034529
   14003451a:	mov    rdx,rdi
   14003451d:	mov    rcx,rsi
   140034520:	call   0x140034444
   140034525:	mov    ebx,eax
   140034527:	jmp    0x140034556
   140034529:	sub    rsi,rdi
   14003452c:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140034530:	lea    rdx,[rsp+0x20]
   140034535:	call   0x140037758
   14003453a:	movzx  ecx,BYTE PTR [rdi]
   14003453d:	lea    rdx,[rsp+0x20]
   140034542:	mov    ebx,eax
   140034544:	call   0x140037758
   140034549:	inc    rdi
   14003454c:	test   ebx,ebx
   14003454e:	je     0x140034554
   140034550:	cmp    ebx,eax
   140034552:	je     0x14003452c
   140034554:	sub    ebx,eax
   140034556:	cmp    BYTE PTR [rsp+0x38],0x0
   14003455b:	je     0x140034569
   14003455d:	mov    rcx,QWORD PTR [rsp+0x30]
   140034562:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140034569:	mov    rsi,QWORD PTR [rsp+0x58]
   14003456e:	mov    eax,ebx
   140034570:	mov    rbx,QWORD PTR [rsp+0x50]
   140034575:	add    rsp,0x40
   140034579:	pop    rdi
   14003457a:	ret    
   14003457b:	int3   
   14003457c:	mov    QWORD PTR [rsp+0x8],rbx
   140034581:	mov    QWORD PTR [rsp+0x10],rsi
   140034586:	mov    QWORD PTR [rsp+0x18],rdi
   14003458b:	push   rbp
   14003458c:	push   r14
   14003458e:	push   r15
   140034590:	mov    rbp,rsp
   140034593:	sub    rsp,0x50
   140034597:	xor    ebx,ebx
   140034599:	mov    r14,r8
   14003459c:	mov    r15,rcx
   14003459f:	mov    rsi,rdx
   1400345a2:	lea    rcx,[rbp-0x28]
   1400345a6:	lea    r8d,[rbx+0x28]
   1400345aa:	xor    edx,edx
   1400345ac:	mov    rdi,r9
   1400345af:	mov    QWORD PTR [rbp-0x30],rbx
   1400345b3:	call   0x14002bb90
   1400345b8:	test   rdi,rdi
   1400345bb:	jne    0x1400345d2
   1400345bd:	call   0x140029bf8
   1400345c2:	mov    DWORD PTR [rax],0x16
   1400345c8:	call   0x140029b2c
   1400345cd:	or     eax,0xffffffff
   1400345d0:	jmp    0x140034648
   1400345d2:	test   r14,r14
   1400345d5:	je     0x1400345dc
   1400345d7:	test   rsi,rsi
   1400345da:	je     0x1400345bd
   1400345dc:	mov    r9,QWORD PTR [rbp+0x48]
   1400345e0:	mov    r8,QWORD PTR [rbp+0x40]
   1400345e4:	mov    ecx,0x7fffffff
   1400345e9:	cmp    r14,rcx
   1400345ec:	mov    eax,r14d
   1400345ef:	mov    rdx,rdi
   1400345f2:	cmova  eax,ecx
   1400345f5:	lea    rcx,[rbp-0x30]
   1400345f9:	mov    DWORD PTR [rbp-0x18],0x42
   140034600:	mov    QWORD PTR [rbp-0x20],rsi
   140034604:	mov    QWORD PTR [rbp-0x30],rsi
   140034608:	mov    DWORD PTR [rbp-0x28],eax
   14003460b:	call   r15
   14003460e:	mov    edi,eax
   140034610:	test   rsi,rsi
   140034613:	je     0x140034648
   140034615:	test   eax,eax
   140034617:	js     0x14003463a
   140034619:	dec    DWORD PTR [rbp-0x28]
   14003461c:	js     0x140034626
   14003461e:	mov    rax,QWORD PTR [rbp-0x30]
   140034622:	mov    BYTE PTR [rax],bl
   140034624:	jmp    0x140034636
   140034626:	lea    rdx,[rbp-0x30]
   14003462a:	xor    ecx,ecx
   14003462c:	call   0x14002ae64
   140034631:	cmp    eax,0xffffffff
   140034634:	je     0x14003463a
   140034636:	mov    eax,edi
   140034638:	jmp    0x140034648
   14003463a:	cmp    DWORD PTR [rbp-0x28],ebx
   14003463d:	mov    BYTE PTR [rsi+r14*1-0x1],bl
   140034642:	setge  bl
   140034645:	lea    eax,[rbx-0x2]
   140034648:	lea    r11,[rsp+0x50]
   14003464d:	mov    rbx,QWORD PTR [r11+0x20]
   140034651:	mov    rsi,QWORD PTR [r11+0x28]
   140034655:	mov    rdi,QWORD PTR [r11+0x30]
   140034659:	mov    rsp,r11
   14003465c:	pop    r15
   14003465e:	pop    r14
   140034660:	pop    rbp
   140034661:	ret    
   140034662:	int3   
   140034663:	int3   
   140034664:	rex push rbx
   140034666:	sub    rsp,0x30
   14003466a:	mov    rbx,rcx
   14003466d:	test   r8,r8
   140034670:	je     0x1400346b9
   140034672:	test   rcx,rcx
   140034675:	je     0x1400346b9
   140034677:	test   rdx,rdx
   14003467a:	je     0x1400346b9
   14003467c:	mov    rax,QWORD PTR [rsp+0x60]
   140034681:	mov    QWORD PTR [rsp+0x28],rax
   140034686:	mov    QWORD PTR [rsp+0x20],r9
   14003468b:	mov    r9,r8
   14003468e:	mov    r8,rdx
   140034691:	mov    rdx,rcx
   140034694:	lea    rcx,[rip+0xffffffffffffbbb9]        # 0x140030254
   14003469b:	call   0x14003457c
   1400346a0:	test   eax,eax
   1400346a2:	jns    0x1400346a7
   1400346a4:	mov    BYTE PTR [rbx],0x0
   1400346a7:	cmp    eax,0xfffffffe
   1400346aa:	jne    0x1400346cc
   1400346ac:	call   0x140029bf8
   1400346b1:	mov    DWORD PTR [rax],0x22
   1400346b7:	jmp    0x1400346c4
   1400346b9:	call   0x140029bf8
   1400346be:	mov    DWORD PTR [rax],0x16
   1400346c4:	call   0x140029b2c
   1400346c9:	or     eax,0xffffffff
   1400346cc:	add    rsp,0x30
   1400346d0:	pop    rbx
   1400346d1:	ret    
   1400346d2:	int3   
   1400346d3:	int3   
   1400346d4:	sub    rsp,0x38
   1400346d8:	mov    QWORD PTR [rsp+0x20],r9
   1400346dd:	xor    r9d,r9d
   1400346e0:	call   0x140034664
   1400346e5:	add    rsp,0x38
   1400346e9:	ret    
   1400346ea:	int3   
   1400346eb:	int3   
   1400346ec:	mov    r9,rdx
   1400346ef:	mov    rdx,rcx
   1400346f2:	lea    rcx,[rip+0xffffffffffff87d7]        # 0x14002ced0
   1400346f9:	xor    r8d,r8d
   1400346fc:	jmp    0x140034704
   140034701:	int3   
   140034702:	int3   
   140034703:	int3   
   140034704:	mov    rax,rsp
   140034707:	mov    QWORD PTR [rax+0x8],rbx
   14003470b:	mov    QWORD PTR [rax+0x10],rbp
   14003470f:	mov    QWORD PTR [rax+0x18],rsi
   140034713:	push   rdi
   140034714:	sub    rsp,0x50
   140034718:	and    QWORD PTR [rax-0x38],0x0
   14003471d:	mov    rbx,rdx
   140034720:	xor    edx,edx
   140034722:	mov    rsi,r8
   140034725:	mov    rbp,rcx
   140034728:	lea    r8d,[rdx+0x28]
   14003472c:	lea    rcx,[rax-0x30]
   140034730:	mov    rdi,r9
   140034733:	call   0x14002bb90
   140034738:	test   rbx,rbx
   14003473b:	jne    0x140034752
   14003473d:	call   0x140029bf8
   140034742:	mov    DWORD PTR [rax],0x16
   140034748:	call   0x140029b2c
   14003474d:	or     eax,0xffffffff
   140034750:	jmp    0x14003477e
   140034752:	and    QWORD PTR [rsp+0x30],0x0
   140034758:	and    QWORD PTR [rsp+0x20],0x0
   14003475e:	lea    rcx,[rsp+0x20]
   140034763:	mov    r9,rdi
   140034766:	mov    r8,rsi
   140034769:	mov    rdx,rbx
   14003476c:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   140034774:	mov    DWORD PTR [rsp+0x38],0x42
   14003477c:	call   rbp
   14003477e:	mov    rbx,QWORD PTR [rsp+0x60]
   140034783:	mov    rbp,QWORD PTR [rsp+0x68]
   140034788:	mov    rsi,QWORD PTR [rsp+0x70]
   14003478d:	add    rsp,0x50
   140034791:	pop    rdi
   140034792:	ret    
   140034793:	int3   
   140034794:	test   rcx,rcx
   140034797:	je     0x140034801
   140034799:	mov    BYTE PTR [rsp+0x10],dl
   14003479d:	sub    rsp,0x28
   1400347a1:	cmp    DWORD PTR [rcx],0xe06d7363
   1400347a7:	jne    0x1400347fd
   1400347a9:	cmp    DWORD PTR [rcx+0x18],0x4
   1400347ad:	jne    0x1400347fd
   1400347af:	mov    eax,DWORD PTR [rcx+0x20]
   1400347b2:	sub    eax,0x19930520
   1400347b7:	cmp    eax,0x2
   1400347ba:	ja     0x1400347fd
   1400347bc:	mov    rax,QWORD PTR [rcx+0x30]
   1400347c0:	test   rax,rax
   1400347c3:	je     0x1400347fd
   1400347c5:	movsxd rdx,DWORD PTR [rax+0x4]
   1400347c9:	test   edx,edx
   1400347cb:	je     0x1400347e6
   1400347cd:	mov    rax,rdx
   1400347d0:	mov    rdx,QWORD PTR [rcx+0x38]
   1400347d4:	add    rdx,rax
   1400347d7:	mov    rcx,QWORD PTR [rcx+0x28]
   1400347db:	call   rdx
   1400347dd:	nop
   1400347de:	jmp    0x1400347fd
   1400347e0:	call   0x1400296c8
   1400347e5:	nop
   1400347e6:	test   BYTE PTR [rax],0x10
   1400347e9:	je     0x1400347fd
   1400347eb:	mov    rax,QWORD PTR [rcx+0x28]
   1400347ef:	mov    rcx,QWORD PTR [rax]
   1400347f2:	test   rcx,rcx
   1400347f5:	je     0x1400347fd
   1400347f7:	mov    rax,QWORD PTR [rcx]
   1400347fa:	call   QWORD PTR [rax+0x10]
   1400347fd:	add    rsp,0x28
   140034801:	ret    
   140034802:	int3   
   140034803:	int3   
   140034804:	rex push rbx
   140034806:	sub    rsp,0x20
   14003480a:	mov    rbx,rcx
   14003480d:	call   0x140029e58
   140034812:	lea    rax,[rip+0x10ccf]        # 0x1400454e8
   140034819:	mov    QWORD PTR [rbx],rax
   14003481c:	mov    rax,rbx
   14003481f:	add    rsp,0x20
   140034823:	pop    rbx
   140034824:	ret    
   140034825:	int3   
   140034826:	int3   
   140034827:	int3   
   140034828:	lea    rax,[rip+0x10cb9]        # 0x1400454e8
   14003482f:	mov    QWORD PTR [rcx],rax
   140034832:	jmp    0x140029e84
   140034837:	int3   
   140034838:	mov    QWORD PTR [rsp+0x8],rbx
   14003483d:	push   rdi
   14003483e:	sub    rsp,0x20
   140034842:	lea    rax,[rip+0x10c9f]        # 0x1400454e8
   140034849:	mov    ebx,edx
   14003484b:	mov    rdi,rcx
   14003484e:	mov    QWORD PTR [rcx],rax
   140034851:	call   0x140029e84
   140034856:	test   bl,0x1
   140034859:	je     0x140034863
   14003485b:	mov    rcx,rdi
   14003485e:	call   0x14002657c
   140034863:	mov    rax,rdi
   140034866:	mov    rbx,QWORD PTR [rsp+0x30]
   14003486b:	add    rsp,0x20
   14003486f:	pop    rdi
   140034870:	ret    
   140034871:	int3   
   140034872:	int3   
   140034873:	int3   
   140034874:	mov    rax,rsp
   140034877:	mov    QWORD PTR [rax+0x8],rbx
   14003487b:	mov    QWORD PTR [rax+0x18],rbp
   14003487f:	push   rsi
   140034880:	push   rdi
   140034881:	push   r12
   140034883:	push   r14
   140034885:	push   r15
   140034887:	sub    rsp,0x50
   14003488b:	mov    r15,QWORD PTR [rsp+0xa0]
   140034893:	mov    rbp,r9
   140034896:	mov    r14,rdx
   140034899:	mov    r12,r8
   14003489c:	mov    rbx,rcx
   14003489f:	lea    r9,[rax+0x10]
   1400348a3:	mov    r8,r15
   1400348a6:	mov    rdx,rbp
   1400348a9:	mov    rcx,r14
   1400348ac:	call   0x140032668
   1400348b1:	mov    r9,QWORD PTR [rsp+0xb0]
   1400348b9:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400348c1:	mov    rdi,rax
   1400348c4:	test   r9,r9
   1400348c7:	je     0x1400348d7
   1400348c9:	mov    r8,rsi
   1400348cc:	mov    rdx,rax
   1400348cf:	mov    rcx,rbx
   1400348d2:	call   0x140035150
   1400348d7:	call   0x140032a90
   1400348dc:	movsxd rcx,DWORD PTR [rsi+0xc]
   1400348e0:	mov    r9,rdi
   1400348e3:	add    rax,rcx
   1400348e6:	mov    cl,BYTE PTR [rsp+0xd8]
   1400348ed:	mov    r8,r12
   1400348f0:	mov    BYTE PTR [rsp+0x40],cl
   1400348f4:	mov    rcx,QWORD PTR [rsp+0xb8]
   1400348fc:	mov    QWORD PTR [rsp+0x38],rbp
   140034901:	mov    edx,DWORD PTR [rcx]
   140034903:	mov    QWORD PTR [rsp+0x30],r15
   140034908:	mov    rcx,r14
   14003490b:	mov    DWORD PTR [rsp+0x28],edx
   14003490f:	mov    rdx,rbx
   140034912:	mov    QWORD PTR [rsp+0x20],rax
   140034917:	call   0x140032b2c
   14003491c:	lea    r11,[rsp+0x50]
   140034921:	mov    rbx,QWORD PTR [r11+0x30]
   140034925:	mov    rbp,QWORD PTR [r11+0x40]
   140034929:	mov    rsp,r11
   14003492c:	pop    r15
   14003492e:	pop    r14
   140034930:	pop    r12
   140034932:	pop    rdi
   140034933:	pop    rsi
   140034934:	ret    
   140034935:	int3   
   140034936:	int3   
   140034937:	int3   
   140034938:	mov    QWORD PTR [rsp+0x10],rbx
   14003493d:	mov    QWORD PTR [rsp+0x18],r8
   140034942:	push   rbp
   140034943:	push   rsi
   140034944:	push   rdi
   140034945:	push   r12
   140034947:	push   r13
   140034949:	push   r14
   14003494b:	push   r15
   14003494d:	lea    rbp,[rsp-0x7]
   140034952:	sub    rsp,0xb0
   140034959:	mov    rbx,QWORD PTR [rbp+0x67]
   14003495d:	mov    r13,rdx
   140034960:	mov    rdi,rcx
   140034963:	xor    r12d,r12d
   140034966:	mov    rdx,r9
   140034969:	mov    rcx,rbx
   14003496c:	mov    r15,r9
   14003496f:	mov    r14,r8
   140034972:	mov    BYTE PTR [rbp+0x47],r12b
   140034976:	mov    BYTE PTR [rbp-0x49],r12b
   14003497a:	call   0x140035bd4
   14003497f:	lea    r9,[rbp-0x21]
   140034983:	mov    r8,rbx
   140034986:	mov    rdx,r15
   140034989:	mov    rcx,r13
   14003498c:	mov    esi,eax
   14003498e:	call   0x140032668
   140034993:	mov    r8,rbx
   140034996:	mov    rdx,r15
   140034999:	mov    rcx,r13
   14003499c:	call   0x140035b60
   1400349a1:	mov    r8,rbx
   1400349a4:	mov    rdx,r15
   1400349a7:	cmp    esi,eax
   1400349a9:	jle    0x1400349ca
   1400349ab:	lea    rcx,[rbp-0x21]
   1400349af:	mov    r9d,esi
   1400349b2:	call   0x140035b8c
   1400349b7:	mov    r9d,esi
   1400349ba:	mov    r8,rbx
   1400349bd:	mov    rdx,r15
   1400349c0:	mov    rcx,r13
   1400349c3:	call   0x140035b98
   1400349c8:	jmp    0x1400349d4
   1400349ca:	mov    rcx,r13
   1400349cd:	call   0x140035b60
   1400349d2:	mov    esi,eax
   1400349d4:	cmp    esi,0xffffffff
   1400349d7:	jl     0x1400349de
   1400349d9:	cmp    esi,DWORD PTR [rbx+0x4]
   1400349dc:	jl     0x1400349e3
   1400349de:	call   0x1400296a8
   1400349e3:	cmp    DWORD PTR [rdi],0xe06d7363
   1400349e9:	jne    0x140034d6a
   1400349ef:	cmp    DWORD PTR [rdi+0x18],0x4
   1400349f3:	jne    0x140034b30
   1400349f9:	mov    eax,DWORD PTR [rdi+0x20]
   1400349fc:	sub    eax,0x19930520
   140034a01:	cmp    eax,0x2
   140034a04:	ja     0x140034b30
   140034a0a:	cmp    QWORD PTR [rdi+0x30],r12
   140034a0e:	jne    0x140034b30
   140034a14:	call   0x14002814c
   140034a19:	cmp    QWORD PTR [rax+0xf0],r12
   140034a20:	je     0x140034d4f
   140034a26:	call   0x14002814c
   140034a2b:	mov    rdi,QWORD PTR [rax+0xf0]
   140034a32:	call   0x14002814c
   140034a37:	mov    rcx,QWORD PTR [rdi+0x38]
   140034a3b:	mov    r14,QWORD PTR [rax+0xf8]
   140034a42:	mov    BYTE PTR [rbp+0x47],0x1
   140034a46:	mov    QWORD PTR [rbp+0x57],r14
   140034a4a:	call   0x140032b10
   140034a4f:	mov    edx,0x1
   140034a54:	mov    rcx,rdi
   140034a57:	call   0x1400378cc
   140034a5c:	test   eax,eax
   140034a5e:	jne    0x140034a65
   140034a60:	call   0x1400296a8
   140034a65:	cmp    DWORD PTR [rdi],0xe06d7363
   140034a6b:	jne    0x140034a8b
   140034a6d:	cmp    DWORD PTR [rdi+0x18],0x4
   140034a71:	jne    0x140034a8b
   140034a73:	mov    eax,DWORD PTR [rdi+0x20]
   140034a76:	sub    eax,0x19930520
   140034a7b:	cmp    eax,0x2
   140034a7e:	ja     0x140034a8b
   140034a80:	cmp    QWORD PTR [rdi+0x30],r12
   140034a84:	jne    0x140034a8b
   140034a86:	call   0x1400296a8
   140034a8b:	call   0x14002814c
   140034a90:	cmp    QWORD PTR [rax+0x108],r12
   140034a97:	je     0x140034b30
   140034a9d:	call   0x14002814c
   140034aa2:	mov    r14,QWORD PTR [rax+0x108]
   140034aa9:	call   0x14002814c
   140034aae:	mov    rdx,r14
   140034ab1:	mov    rcx,rdi
   140034ab4:	mov    QWORD PTR [rax+0x108],r12
   140034abb:	call   0x140035054
   140034ac0:	test   al,al
   140034ac2:	jne    0x140034b2c
   140034ac4:	mov    r15d,r12d
   140034ac7:	cmp    DWORD PTR [r14],r12d
   140034aca:	jle    0x140034da2
   140034ad0:	mov    rsi,r12
   140034ad3:	call   0x140032a90
   140034ad8:	movsxd rcx,DWORD PTR [r14+0x4]
   140034adc:	add    rax,rsi
   140034adf:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   140034ae4:	je     0x140034b01
   140034ae6:	call   0x140032a90
   140034aeb:	movsxd rcx,DWORD PTR [r14+0x4]
   140034aef:	add    rax,rsi
   140034af2:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140034af7:	call   0x140032a90
   140034afc:	add    rax,rbx
   140034aff:	jmp    0x140034b04
   140034b01:	mov    rax,r12
   140034b04:	lea    rdx,[rip+0x25855]        # 0x14005a360
   140034b0b:	mov    rcx,rax
   140034b0e:	call   0x140026d18
   140034b13:	test   al,al
   140034b15:	jne    0x140034da8
   140034b1b:	inc    r15d
   140034b1e:	add    rsi,0x14
   140034b22:	cmp    r15d,DWORD PTR [r14]
   140034b25:	jl     0x140034ad3
   140034b27:	jmp    0x140034da2
   140034b2c:	mov    r14,QWORD PTR [rbp+0x57]
   140034b30:	cmp    DWORD PTR [rdi],0xe06d7363
   140034b36:	jne    0x140034d6a
   140034b3c:	cmp    DWORD PTR [rdi+0x18],0x4
   140034b40:	jne    0x140034d6a
   140034b46:	mov    eax,DWORD PTR [rdi+0x20]
   140034b49:	sub    eax,0x19930520
   140034b4e:	cmp    eax,0x2
   140034b51:	ja     0x140034d6a
   140034b57:	cmp    DWORD PTR [rbx+0xc],r12d
   140034b5b:	jbe    0x140034caf
   140034b61:	mov    r8d,DWORD PTR [rbp+0x77]
   140034b65:	lea    rax,[rbp-0x41]
   140034b69:	mov    QWORD PTR [rsp+0x30],r15
   140034b6e:	mov    QWORD PTR [rsp+0x28],rax
   140034b73:	lea    rax,[rbp-0x45]
   140034b77:	mov    r9d,esi
   140034b7a:	mov    rdx,rbx
   140034b7d:	mov    rcx,r13
   140034b80:	mov    QWORD PTR [rsp+0x20],rax
   140034b85:	call   0x140032734
   140034b8a:	mov    ecx,DWORD PTR [rbp-0x45]
   140034b8d:	mov    edx,DWORD PTR [rbp-0x41]
   140034b90:	cmp    ecx,edx
   140034b92:	jae    0x140034caf
   140034b98:	lea    r14,[rax+0x10]
   140034b9c:	cmp    DWORD PTR [r14-0x10],esi
   140034ba0:	jg     0x140034c91
   140034ba6:	cmp    esi,DWORD PTR [r14-0xc]
   140034baa:	jg     0x140034c91
   140034bb0:	call   0x140032a90
   140034bb5:	movsxd r12,DWORD PTR [r14]
   140034bb8:	add    r12,rax
   140034bbb:	mov    eax,DWORD PTR [r14-0x4]
   140034bbf:	mov    DWORD PTR [rbp-0x3d],eax
   140034bc2:	test   eax,eax
   140034bc4:	jle    0x140034c8b
   140034bca:	call   0x140032aa8
   140034bcf:	mov    rcx,QWORD PTR [rdi+0x30]
   140034bd3:	movsxd rdx,DWORD PTR [rcx+0xc]
   140034bd7:	add    rax,0x4
   140034bdb:	add    rax,rdx
   140034bde:	mov    QWORD PTR [rbp-0x31],rax
   140034be2:	call   0x140032aa8
   140034be7:	mov    rcx,QWORD PTR [rdi+0x30]
   140034beb:	movsxd rdx,DWORD PTR [rcx+0xc]
   140034bef:	mov    ecx,DWORD PTR [rax+rdx*1]
   140034bf2:	mov    DWORD PTR [rbp-0x39],ecx
   140034bf5:	test   ecx,ecx
   140034bf7:	jle    0x140034c30
   140034bf9:	call   0x140032aa8
   140034bfe:	mov    rcx,QWORD PTR [rbp-0x31]
   140034c02:	mov    r8,QWORD PTR [rdi+0x30]
   140034c06:	movsxd rcx,DWORD PTR [rcx]
   140034c09:	add    rax,rcx
   140034c0c:	mov    rcx,r12
   140034c0f:	mov    rdx,rax
   140034c12:	mov    QWORD PTR [rbp-0x29],rax
   140034c16:	call   0x140035a18
   140034c1b:	test   eax,eax
   140034c1d:	jne    0x140034c3b
   140034c1f:	mov    eax,DWORD PTR [rbp-0x39]
   140034c22:	add    QWORD PTR [rbp-0x31],0x4
   140034c27:	dec    eax
   140034c29:	mov    DWORD PTR [rbp-0x39],eax
   140034c2c:	test   eax,eax
   140034c2e:	jg     0x140034bf9
   140034c30:	mov    eax,DWORD PTR [rbp-0x3d]
   140034c33:	dec    eax
   140034c35:	add    r12,0x14
   140034c39:	jmp    0x140034bbf
   140034c3b:	mov    al,BYTE PTR [rbp+0x6f]
   140034c3e:	mov    r8,QWORD PTR [rbp+0x57]
   140034c42:	mov    r9,r15
   140034c45:	mov    BYTE PTR [rsp+0x58],al
   140034c49:	mov    al,BYTE PTR [rbp+0x47]
   140034c4c:	mov    rdx,r13
   140034c4f:	mov    BYTE PTR [rsp+0x50],al
   140034c53:	mov    rax,QWORD PTR [rbp+0x7f]
   140034c57:	mov    rcx,rdi
   140034c5a:	mov    QWORD PTR [rsp+0x48],rax
   140034c5f:	mov    eax,DWORD PTR [rbp+0x77]
   140034c62:	mov    BYTE PTR [rbp-0x49],0x1
   140034c66:	mov    DWORD PTR [rsp+0x40],eax
   140034c6a:	lea    rax,[r14-0x10]
   140034c6e:	mov    QWORD PTR [rsp+0x38],rax
   140034c73:	mov    rax,QWORD PTR [rbp-0x29]
   140034c77:	mov    QWORD PTR [rsp+0x30],rax
   140034c7c:	mov    QWORD PTR [rsp+0x28],r12
   140034c81:	mov    QWORD PTR [rsp+0x20],rbx
   140034c86:	call   0x140034874
   140034c8b:	mov    edx,DWORD PTR [rbp-0x41]
   140034c8e:	mov    ecx,DWORD PTR [rbp-0x45]
   140034c91:	inc    ecx
   140034c93:	add    r14,0x14
   140034c97:	mov    DWORD PTR [rbp-0x45],ecx
   140034c9a:	cmp    ecx,edx
   140034c9c:	jb     0x140034b9c
   140034ca2:	xor    r12d,r12d
   140034ca5:	cmp    BYTE PTR [rbp-0x49],r12b
   140034ca9:	jne    0x140034d3c
   140034caf:	mov    eax,DWORD PTR [rbx]
   140034cb1:	and    eax,0x1fffffff
   140034cb6:	cmp    eax,0x19930521
   140034cbb:	jb     0x140034d3c
   140034cbd:	mov    esi,DWORD PTR [rbx+0x20]
   140034cc0:	test   esi,esi
   140034cc2:	je     0x140034cd1
   140034cc4:	movsxd rsi,esi
   140034cc7:	call   0x140032a90
   140034ccc:	add    rax,rsi
   140034ccf:	jmp    0x140034cd4
   140034cd1:	mov    rax,r12
   140034cd4:	test   rax,rax
   140034cd7:	je     0x140034d3c
   140034cd9:	test   esi,esi
   140034cdb:	je     0x140034cee
   140034cdd:	call   0x140032a90
   140034ce2:	mov    rdx,rax
   140034ce5:	movsxd rax,DWORD PTR [rbx+0x20]
   140034ce9:	add    rdx,rax
   140034cec:	jmp    0x140034cf1
   140034cee:	mov    rdx,r12
   140034cf1:	mov    rcx,rdi
   140034cf4:	call   0x140035054
   140034cf9:	test   al,al
   140034cfb:	jne    0x140034d3c
   140034cfd:	lea    r9,[rbp+0x47]
   140034d01:	mov    r8,rbx
   140034d04:	mov    rdx,r15
   140034d07:	mov    rcx,r13
   140034d0a:	call   0x140032668
   140034d0f:	mov    cl,BYTE PTR [rbp+0x6f]
   140034d12:	mov    r8,QWORD PTR [rbp+0x57]
   140034d16:	mov    BYTE PTR [rsp+0x40],cl
   140034d1a:	mov    QWORD PTR [rsp+0x38],r15
   140034d1f:	mov    QWORD PTR [rsp+0x30],rbx
   140034d24:	or     DWORD PTR [rsp+0x28],0xffffffff
   140034d29:	mov    r9,rax
   140034d2c:	mov    rdx,rdi
   140034d2f:	mov    rcx,r13
   140034d32:	mov    QWORD PTR [rsp+0x20],r12
   140034d37:	call   0x140032b2c
   140034d3c:	call   0x14002814c
   140034d41:	cmp    QWORD PTR [rax+0x108],r12
   140034d48:	je     0x140034d4f
   140034d4a:	call   0x1400296a8
   140034d4f:	mov    rbx,QWORD PTR [rsp+0xf8]
   140034d57:	add    rsp,0xb0
   140034d5e:	pop    r15
   140034d60:	pop    r14
   140034d62:	pop    r13
   140034d64:	pop    r12
   140034d66:	pop    rdi
   140034d67:	pop    rsi
   140034d68:	pop    rbp
   140034d69:	ret    
   140034d6a:	cmp    DWORD PTR [rbx+0xc],r12d
   140034d6e:	jbe    0x140034d3c
   140034d70:	cmp    BYTE PTR [rbp+0x6f],r12b
   140034d74:	jne    0x140034de6
   140034d76:	mov    rax,QWORD PTR [rbp+0x7f]
   140034d7a:	mov    r9,r15
   140034d7d:	mov    r8,r14
   140034d80:	mov    QWORD PTR [rsp+0x38],rax
   140034d85:	mov    eax,DWORD PTR [rbp+0x77]
   140034d88:	mov    rdx,r13
   140034d8b:	mov    DWORD PTR [rsp+0x30],eax
   140034d8f:	mov    rcx,rdi
   140034d92:	mov    DWORD PTR [rsp+0x28],esi
   140034d96:	mov    QWORD PTR [rsp+0x20],rbx
   140034d9b:	call   0x140034dec
   140034da0:	jmp    0x140034d3c
   140034da2:	call   0x1400296c8
   140034da7:	int3   
   140034da8:	mov    dl,0x1
   140034daa:	mov    rcx,rdi
   140034dad:	call   0x140034794
   140034db2:	lea    rax,[rip+0x1073f]        # 0x1400454f8
   140034db9:	lea    rdx,[rbp+0x47]
   140034dbd:	lea    rcx,[rbp-0x19]
   140034dc1:	mov    QWORD PTR [rbp+0x47],rax
   140034dc5:	call   0x140029e0c
   140034dca:	lea    rax,[rip+0x10717]        # 0x1400454e8
   140034dd1:	lea    rdx,[rip+0x211b8]        # 0x140055f90
   140034dd8:	lea    rcx,[rbp-0x19]
   140034ddc:	mov    QWORD PTR [rbp-0x19],rax
   140034de0:	call   0x140029fe8
   140034de5:	int3   
   140034de6:	call   0x1400296c8
   140034deb:	int3   
   140034dec:	mov    QWORD PTR [rsp+0x10],rbx
   140034df1:	mov    QWORD PTR [rsp+0x18],r8
   140034df6:	push   rbp
   140034df7:	push   rsi
   140034df8:	push   rdi
   140034df9:	push   r12
   140034dfb:	push   r13
   140034dfd:	push   r14
   140034dff:	push   r15
   140034e01:	sub    rsp,0x70
   140034e05:	cmp    DWORD PTR [rcx],0x80000003
   140034e0b:	mov    r15,r9
   140034e0e:	mov    rdi,r8
   140034e11:	mov    r12,rdx
   140034e14:	mov    rsi,rcx
   140034e17:	je     0x140035039
   140034e1d:	call   0x14002814c
   140034e22:	mov    rbp,QWORD PTR [rsp+0xd0]
   140034e2a:	cmp    QWORD PTR [rax+0xe0],0x0
   140034e32:	je     0x140034e95
   140034e34:	xor    ecx,ecx
   140034e36:	call   QWORD PTR [rip+0xc5bc]        # 0x1400413f8
   140034e3c:	mov    rbx,rax
   140034e3f:	call   0x14002814c
   140034e44:	cmp    QWORD PTR [rax+0xe0],rbx
   140034e4b:	je     0x140034e95
   140034e4d:	cmp    DWORD PTR [rsi],0xe0434f4d
   140034e53:	je     0x140034e95
   140034e55:	cmp    DWORD PTR [rsi],0xe0434352
   140034e5b:	mov    ebx,DWORD PTR [rsp+0xe0]
   140034e62:	je     0x140034e9c
   140034e64:	mov    rax,QWORD PTR [rsp+0xe8]
   140034e6c:	mov    r9,r15
   140034e6f:	mov    r8,rdi
   140034e72:	mov    QWORD PTR [rsp+0x30],rax
   140034e77:	mov    rdx,r12
   140034e7a:	mov    rcx,rsi
   140034e7d:	mov    DWORD PTR [rsp+0x28],ebx
   140034e81:	mov    QWORD PTR [rsp+0x20],rbp
   140034e86:	call   0x140032998
   140034e8b:	test   eax,eax
   140034e8d:	jne    0x140035039
   140034e93:	jmp    0x140034e9c
   140034e95:	mov    ebx,DWORD PTR [rsp+0xe0]
   140034e9c:	cmp    DWORD PTR [rbp+0xc],0x0
   140034ea0:	jne    0x140034ea7
   140034ea2:	call   0x1400296a8
   140034ea7:	mov    r14d,DWORD PTR [rsp+0xd8]
   140034eaf:	lea    rax,[rsp+0x60]
   140034eb4:	mov    QWORD PTR [rsp+0x30],r15
   140034eb9:	mov    QWORD PTR [rsp+0x28],rax
   140034ebe:	lea    rax,[rsp+0xb0]
   140034ec6:	mov    r8d,ebx
   140034ec9:	mov    r9d,r14d
   140034ecc:	mov    rdx,rbp
   140034ecf:	mov    rcx,r12
   140034ed2:	mov    QWORD PTR [rsp+0x20],rax
   140034ed7:	call   0x140032734
   140034edc:	mov    ecx,DWORD PTR [rsp+0xb0]
   140034ee3:	cmp    ecx,DWORD PTR [rsp+0x60]
   140034ee7:	jae    0x140035039
   140034eed:	lea    rdi,[rax+0xc]
   140034ef1:	lea    r13,[rdi-0xc]
   140034ef5:	cmp    r14d,DWORD PTR [r13+0x0]
   140034ef9:	jl     0x140035022
   140034eff:	cmp    r14d,DWORD PTR [rdi-0x8]
   140034f03:	jg     0x140035022
   140034f09:	call   0x140032a90
   140034f0e:	movsxd rcx,DWORD PTR [rdi]
   140034f11:	lea    rdx,[rcx+rcx*4]
   140034f15:	movsxd rcx,DWORD PTR [rdi+0x4]
   140034f19:	lea    rdx,[rcx+rdx*4]
   140034f1d:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   140034f22:	je     0x140034f47
   140034f24:	call   0x140032a90
   140034f29:	movsxd rcx,DWORD PTR [rdi]
   140034f2c:	lea    rdx,[rcx+rcx*4]
   140034f30:	movsxd rcx,DWORD PTR [rdi+0x4]
   140034f34:	lea    rdx,[rcx+rdx*4]
   140034f38:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140034f3d:	call   0x140032a90
   140034f42:	add    rax,rbx
   140034f45:	jmp    0x140034f49
   140034f47:	xor    eax,eax
   140034f49:	test   rax,rax
   140034f4c:	je     0x140034f98
   140034f4e:	call   0x140032a90
   140034f53:	movsxd rcx,DWORD PTR [rdi]
   140034f56:	lea    rdx,[rcx+rcx*4]
   140034f5a:	movsxd rcx,DWORD PTR [rdi+0x4]
   140034f5e:	lea    rdx,[rcx+rdx*4]
   140034f62:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   140034f67:	je     0x140034f8c
   140034f69:	call   0x140032a90
   140034f6e:	movsxd rcx,DWORD PTR [rdi]
   140034f71:	lea    rdx,[rcx+rcx*4]
   140034f75:	movsxd rcx,DWORD PTR [rdi+0x4]
   140034f79:	lea    rdx,[rcx+rdx*4]
   140034f7d:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140034f82:	call   0x140032a90
   140034f87:	add    rax,rbx
   140034f8a:	jmp    0x140034f8e
   140034f8c:	xor    eax,eax
   140034f8e:	cmp    BYTE PTR [rax+0x10],0x0
   140034f92:	jne    0x14003501b
   140034f98:	call   0x140032a90
   140034f9d:	movsxd rcx,DWORD PTR [rdi]
   140034fa0:	lea    rdx,[rcx+rcx*4]
   140034fa4:	movsxd rcx,DWORD PTR [rdi+0x4]
   140034fa8:	lea    rdx,[rcx+rdx*4]
   140034fac:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   140034fb1:	jne    0x14003501b
   140034fb3:	call   0x140032a90
   140034fb8:	mov    ecx,DWORD PTR [rdi]
   140034fba:	mov    r8,QWORD PTR [rsp+0xc0]
   140034fc2:	mov    BYTE PTR [rsp+0x58],0x0
   140034fc7:	mov    BYTE PTR [rsp+0x50],0x1
   140034fcc:	dec    ecx
   140034fce:	movsxd rcx,ecx
   140034fd1:	mov    r9,r15
   140034fd4:	lea    rdx,[rcx+rcx*4]
   140034fd8:	lea    rcx,[rax+rdx*4]
   140034fdc:	movsxd rax,DWORD PTR [rdi+0x4]
   140034fe0:	mov    rdx,r12
   140034fe3:	add    rcx,rax
   140034fe6:	mov    rax,QWORD PTR [rsp+0xe8]
   140034fee:	mov    QWORD PTR [rsp+0x48],rax
   140034ff3:	mov    eax,DWORD PTR [rsp+0xe0]
   140034ffa:	mov    DWORD PTR [rsp+0x40],eax
   140034ffe:	mov    QWORD PTR [rsp+0x38],r13
   140035003:	and    QWORD PTR [rsp+0x30],0x0
   140035009:	mov    QWORD PTR [rsp+0x28],rcx
   14003500e:	mov    rcx,rsi
   140035011:	mov    QWORD PTR [rsp+0x20],rbp
   140035016:	call   0x140034874
   14003501b:	mov    ecx,DWORD PTR [rsp+0xb0]
   140035022:	inc    ecx
   140035024:	add    rdi,0x14
   140035028:	mov    DWORD PTR [rsp+0xb0],ecx
   14003502f:	cmp    ecx,DWORD PTR [rsp+0x60]
   140035033:	jb     0x140034ef1
   140035039:	mov    rbx,QWORD PTR [rsp+0xb8]
   140035041:	add    rsp,0x70
   140035045:	pop    r15
   140035047:	pop    r14
   140035049:	pop    r13
   14003504b:	pop    r12
   14003504d:	pop    rdi
   14003504e:	pop    rsi
   14003504f:	pop    rbp
   140035050:	ret    
   140035051:	int3   
   140035052:	int3   
   140035053:	int3   
   140035054:	mov    QWORD PTR [rsp+0x8],rbx
   140035059:	mov    QWORD PTR [rsp+0x10],rbp
   14003505e:	mov    QWORD PTR [rsp+0x18],rsi
   140035063:	push   rdi
   140035064:	push   r12
   140035066:	push   r13
   140035068:	push   r14
   14003506a:	push   r15
   14003506c:	sub    rsp,0x20
   140035070:	mov    rsi,rdx
   140035073:	mov    r13,rcx
   140035076:	test   rdx,rdx
   140035079:	je     0x140035120
   14003507f:	xor    edi,edi
   140035081:	xor    r14b,r14b
   140035084:	cmp    DWORD PTR [rdx],edi
   140035086:	jle    0x140035100
   140035088:	call   0x140032aa8
   14003508d:	mov    rdx,rax
   140035090:	mov    rax,QWORD PTR [r13+0x30]
   140035094:	movsxd r15,DWORD PTR [rax+0xc]
   140035098:	add    r15,0x4
   14003509c:	add    r15,rdx
   14003509f:	call   0x140032aa8
   1400350a4:	mov    rdx,rax
   1400350a7:	mov    rax,QWORD PTR [r13+0x30]
   1400350ab:	movsxd rcx,DWORD PTR [rax+0xc]
   1400350af:	mov    ebp,DWORD PTR [rdx+rcx*1]
   1400350b2:	test   ebp,ebp
   1400350b4:	jle    0x1400350fa
   1400350b6:	movsxd rax,edi
   1400350b9:	lea    r12,[rax+rax*4]
   1400350bd:	call   0x140032aa8
   1400350c2:	mov    rbx,rax
   1400350c5:	movsxd rax,DWORD PTR [r15]
   1400350c8:	add    rbx,rax
   1400350cb:	call   0x140032a90
   1400350d0:	movsxd rcx,DWORD PTR [rsi+0x4]
   1400350d4:	mov    r8,QWORD PTR [r13+0x30]
   1400350d8:	lea    rax,[rax+r12*4]
   1400350dc:	mov    rdx,rbx
   1400350df:	add    rcx,rax
   1400350e2:	call   0x140035a18
   1400350e7:	test   eax,eax
   1400350e9:	jne    0x1400350f7
   1400350eb:	dec    ebp
   1400350ed:	add    r15,0x4
   1400350f1:	test   ebp,ebp
   1400350f3:	jg     0x1400350bd
   1400350f5:	jmp    0x1400350fa
   1400350f7:	mov    r14b,0x1
   1400350fa:	inc    edi
   1400350fc:	cmp    edi,DWORD PTR [rsi]
   1400350fe:	jl     0x140035088
   140035100:	mov    rbx,QWORD PTR [rsp+0x50]
   140035105:	mov    rbp,QWORD PTR [rsp+0x58]
   14003510a:	mov    rsi,QWORD PTR [rsp+0x60]
   14003510f:	mov    al,r14b
   140035112:	add    rsp,0x20
   140035116:	pop    r15
   140035118:	pop    r14
   14003511a:	pop    r13
   14003511c:	pop    r12
   14003511e:	pop    rdi
   14003511f:	ret    
   140035120:	call   0x1400296a8
   140035125:	call   0x1400296c8
   14003512a:	int3   
   14003512b:	int3   
   14003512c:	movsxd rax,DWORD PTR [rdx]
   14003512f:	add    rax,rcx
   140035132:	cmp    DWORD PTR [rdx+0x4],0x0
   140035136:	jl     0x14003514e
   140035138:	movsxd r9,DWORD PTR [rdx+0x4]
   14003513c:	movsxd rdx,DWORD PTR [rdx+0x8]
   140035140:	mov    rcx,QWORD PTR [r9+rcx*1]
   140035144:	movsxd r8,DWORD PTR [rdx+rcx*1]
   140035148:	add    r8,r9
   14003514b:	add    rax,r8
   14003514e:	ret    
   14003514f:	int3   
   140035150:	mov    QWORD PTR [rsp+0x8],rbx
   140035155:	mov    QWORD PTR [rsp+0x10],rsi
   14003515a:	mov    QWORD PTR [rsp+0x18],rdi
   14003515f:	push   r14
   140035161:	sub    rsp,0x20
   140035165:	mov    rdi,r9
   140035168:	mov    r14,rcx
   14003516b:	test   DWORD PTR [r8],0x80000000
   140035172:	je     0x140035179
   140035174:	mov    rsi,rdx
   140035177:	jmp    0x140035180
   140035179:	movsxd rsi,DWORD PTR [r8+0x8]
   14003517d:	add    rsi,QWORD PTR [rdx]
   140035180:	call   0x140035208
   140035185:	dec    eax
   140035187:	je     0x1400351c0
   140035189:	dec    eax
   14003518b:	jne    0x1400351e8
   14003518d:	xor    ebx,ebx
   14003518f:	cmp    DWORD PTR [rdi+0x18],ebx
   140035192:	je     0x1400351a3
   140035194:	call   0x140032aa8
   140035199:	mov    rbx,rax
   14003519c:	movsxd rax,DWORD PTR [rdi+0x18]
   1400351a0:	add    rbx,rax
   1400351a3:	lea    rdx,[rdi+0x8]
   1400351a7:	mov    rcx,QWORD PTR [r14+0x28]
   1400351ab:	call   0x14003512c
   1400351b0:	mov    rdx,rax
   1400351b3:	mov    r8d,0x1
   1400351b9:	mov    rcx,rsi
   1400351bc:	call   rbx
   1400351be:	jmp    0x1400351e8
   1400351c0:	xor    ebx,ebx
   1400351c2:	cmp    DWORD PTR [rdi+0x18],ebx
   1400351c5:	je     0x1400351d3
   1400351c7:	call   0x140032aa8
   1400351cc:	movsxd rbx,DWORD PTR [rdi+0x18]
   1400351d0:	add    rbx,rax
   1400351d3:	lea    rdx,[rdi+0x8]
   1400351d7:	mov    rcx,QWORD PTR [r14+0x28]
   1400351db:	call   0x14003512c
   1400351e0:	mov    rdx,rax
   1400351e3:	mov    rcx,rsi
   1400351e6:	call   rbx
   1400351e8:	jmp    0x1400351f0
   1400351ea:	call   0x1400296c8
   1400351ef:	nop
   1400351f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400351f5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400351fa:	mov    rdi,QWORD PTR [rsp+0x40]
   1400351ff:	add    rsp,0x20
   140035203:	pop    r14
   140035205:	ret    
   140035206:	int3   
   140035207:	int3   
   140035208:	mov    QWORD PTR [rsp+0x8],rbx
   14003520d:	mov    QWORD PTR [rsp+0x10],rsi
   140035212:	mov    QWORD PTR [rsp+0x18],rdi
   140035217:	push   r13
   140035219:	push   r14
   14003521b:	push   r15
   14003521d:	sub    rsp,0x30
   140035221:	mov    rsi,r9
   140035224:	mov    rbx,r8
   140035227:	mov    r14,rdx
   14003522a:	mov    r13,rcx
   14003522d:	xor    edi,edi
   14003522f:	mov    r15d,DWORD PTR [r8+0x4]
   140035233:	test   r15d,r15d
   140035236:	je     0x140035246
   140035238:	movsxd r15,r15d
   14003523b:	call   0x140032a90
   140035240:	lea    rdx,[r15+rax*1]
   140035244:	jmp    0x140035249
   140035246:	mov    rdx,rdi
   140035249:	test   rdx,rdx
   14003524c:	je     0x1400353e9
   140035252:	test   r15d,r15d
   140035255:	je     0x140035268
   140035257:	call   0x140032a90
   14003525c:	mov    rcx,rax
   14003525f:	movsxd rax,DWORD PTR [rbx+0x4]
   140035263:	add    rcx,rax
   140035266:	jmp    0x14003526b
   140035268:	mov    rcx,rdi
   14003526b:	cmp    BYTE PTR [rcx+0x10],dil
   14003526f:	je     0x1400353e9
   140035275:	cmp    DWORD PTR [rbx+0x8],edi
   140035278:	jne    0x140035286
   14003527a:	test   DWORD PTR [rbx],0x80000000
   140035280:	je     0x1400353e9
   140035286:	test   DWORD PTR [rbx],0x80000000
   14003528c:	jne    0x140035298
   14003528e:	movsxd rax,DWORD PTR [rbx+0x8]
   140035292:	add    rax,QWORD PTR [r14]
   140035295:	mov    r14,rax
   140035298:	test   BYTE PTR [rbx],0x8
   14003529b:	mov    ebx,0x1
   1400352a0:	je     0x1400352df
   1400352a2:	mov    edx,ebx
   1400352a4:	mov    rcx,QWORD PTR [r13+0x28]
   1400352a8:	call   0x1400378cc
   1400352ad:	test   eax,eax
   1400352af:	je     0x1400353d9
   1400352b5:	mov    edx,ebx
   1400352b7:	mov    rcx,r14
   1400352ba:	call   0x1400378cc
   1400352bf:	test   eax,eax
   1400352c1:	je     0x1400353d9
   1400352c7:	mov    rcx,QWORD PTR [r13+0x28]
   1400352cb:	mov    QWORD PTR [r14],rcx
   1400352ce:	lea    rdx,[rsi+0x8]
   1400352d2:	call   0x14003512c
   1400352d7:	mov    QWORD PTR [r14],rax
   1400352da:	jmp    0x1400353df
   1400352df:	test   BYTE PTR [rsi],bl
   1400352e1:	je     0x140035330
   1400352e3:	mov    edx,ebx
   1400352e5:	mov    rcx,QWORD PTR [r13+0x28]
   1400352e9:	call   0x1400378cc
   1400352ee:	test   eax,eax
   1400352f0:	je     0x1400353d9
   1400352f6:	mov    edx,ebx
   1400352f8:	mov    rcx,r14
   1400352fb:	call   0x1400378cc
   140035300:	test   eax,eax
   140035302:	je     0x1400353d9
   140035308:	movsxd r8,DWORD PTR [rsi+0x14]
   14003530c:	mov    rdx,QWORD PTR [r13+0x28]
   140035310:	mov    rcx,r14
   140035313:	call   0x1400265d0
   140035318:	cmp    DWORD PTR [rsi+0x14],0x8
   14003531c:	jne    0x1400353df
   140035322:	cmp    QWORD PTR [r14],rdi
   140035325:	je     0x1400353df
   14003532b:	mov    rcx,QWORD PTR [r14]
   14003532e:	jmp    0x1400352ce
   140035330:	cmp    DWORD PTR [rsi+0x18],edi
   140035333:	je     0x140035346
   140035335:	call   0x140032aa8
   14003533a:	mov    rcx,rax
   14003533d:	movsxd rax,DWORD PTR [rsi+0x18]
   140035341:	add    rcx,rax
   140035344:	jmp    0x140035349
   140035346:	mov    rcx,rdi
   140035349:	mov    edx,ebx
   14003534b:	test   rcx,rcx
   14003534e:	mov    rcx,QWORD PTR [r13+0x28]
   140035352:	jne    0x14003538c
   140035354:	call   0x1400378cc
   140035359:	test   eax,eax
   14003535b:	je     0x1400353d9
   14003535d:	mov    edx,ebx
   14003535f:	mov    rcx,r14
   140035362:	call   0x1400378cc
   140035367:	test   eax,eax
   140035369:	je     0x1400353d9
   14003536b:	movsxd rbx,DWORD PTR [rsi+0x14]
   14003536f:	lea    rdx,[rsi+0x8]
   140035373:	mov    rcx,QWORD PTR [r13+0x28]
   140035377:	call   0x14003512c
   14003537c:	mov    rdx,rax
   14003537f:	mov    r8,rbx
   140035382:	mov    rcx,r14
   140035385:	call   0x1400265d0
   14003538a:	jmp    0x1400353df
   14003538c:	call   0x1400378cc
   140035391:	test   eax,eax
   140035393:	je     0x1400353d9
   140035395:	mov    edx,ebx
   140035397:	mov    rcx,r14
   14003539a:	call   0x1400378cc
   14003539f:	test   eax,eax
   1400353a1:	je     0x1400353d9
   1400353a3:	cmp    DWORD PTR [rsi+0x18],edi
   1400353a6:	je     0x1400353b9
   1400353a8:	call   0x140032aa8
   1400353ad:	mov    rcx,rax
   1400353b0:	movsxd rax,DWORD PTR [rsi+0x18]
   1400353b4:	add    rcx,rax
   1400353b7:	jmp    0x1400353bc
   1400353b9:	mov    rcx,rdi
   1400353bc:	call   0x1400378cc
   1400353c1:	test   eax,eax
   1400353c3:	je     0x1400353d9
   1400353c5:	mov    al,BYTE PTR [rsi]
   1400353c7:	and    al,0x4
   1400353c9:	neg    al
   1400353cb:	sbb    ecx,ecx
   1400353cd:	neg    ecx
   1400353cf:	add    ecx,ebx
   1400353d1:	mov    edi,ecx
   1400353d3:	mov    DWORD PTR [rsp+0x20],ecx
   1400353d7:	jmp    0x1400353df
   1400353d9:	call   0x1400296a8
   1400353de:	nop
   1400353df:	mov    eax,edi
   1400353e1:	jmp    0x1400353eb
   1400353e3:	call   0x1400296c8
   1400353e8:	nop
   1400353e9:	xor    eax,eax
   1400353eb:	mov    rbx,QWORD PTR [rsp+0x50]
   1400353f0:	mov    rsi,QWORD PTR [rsp+0x58]
   1400353f5:	mov    rdi,QWORD PTR [rsp+0x60]
   1400353fa:	add    rsp,0x30
   1400353fe:	pop    r15
   140035400:	pop    r14
   140035402:	pop    r13
   140035404:	ret    
   140035405:	int3   
   140035406:	int3   
   140035407:	int3   
   140035408:	rex push rbx
   14003540a:	push   rsi
   14003540b:	push   rdi
   14003540c:	push   r12
   14003540e:	push   r13
   140035410:	push   r14
   140035412:	push   r15
   140035414:	sub    rsp,0x90
   14003541b:	mov    rdi,rcx
   14003541e:	xor    r15d,r15d
   140035421:	mov    DWORD PTR [rsp+0x20],r15d
   140035426:	and    DWORD PTR [rsp+0xd0],r15d
   14003542e:	and    QWORD PTR [rsp+0x40],r15
   140035433:	and    QWORD PTR [rsp+0xe8],r15
   14003543b:	call   0x14002814c
   140035440:	mov    r13,QWORD PTR [rax+0xf8]
   140035447:	mov    QWORD PTR [rsp+0x50],r13
   14003544c:	call   0x14002814c
   140035451:	mov    rax,QWORD PTR [rax+0xf0]
   140035458:	mov    QWORD PTR [rsp+0xe0],rax
   140035460:	mov    rsi,QWORD PTR [rdi+0x50]
   140035464:	mov    QWORD PTR [rsp+0xd8],rsi
   14003546c:	mov    rax,QWORD PTR [rdi+0x48]
   140035470:	mov    QWORD PTR [rsp+0x48],rax
   140035475:	mov    rbx,QWORD PTR [rdi+0x40]
   140035479:	mov    rax,QWORD PTR [rdi+0x30]
   14003547d:	mov    QWORD PTR [rsp+0x58],rax
   140035482:	mov    r14,QWORD PTR [rdi+0x28]
   140035486:	mov    QWORD PTR [rsp+0x60],r14
   14003548b:	call   0x14002814c
   140035490:	mov    QWORD PTR [rax+0xf0],rsi
   140035497:	call   0x14002814c
   14003549c:	mov    QWORD PTR [rax+0xf8],rbx
   1400354a3:	call   0x14002814c
   1400354a8:	mov    rdx,QWORD PTR [rax+0xf0]
   1400354af:	mov    rdx,QWORD PTR [rdx+0x28]
   1400354b3:	lea    rcx,[rsp+0x78]
   1400354b8:	call   0x1400329ec
   1400354bd:	mov    r12,rax
   1400354c0:	mov    QWORD PTR [rsp+0x38],rax
   1400354c5:	cmp    QWORD PTR [rdi+0x58],r15
   1400354c9:	je     0x1400354ea
   1400354cb:	mov    DWORD PTR [rsp+0xd0],0x1
   1400354d6:	call   0x14002814c
   1400354db:	mov    rcx,QWORD PTR [rax+0x138]
   1400354e2:	mov    QWORD PTR [rsp+0xe8],rcx
   1400354ea:	mov    r8d,0x100
   1400354f0:	mov    rdx,r14
   1400354f3:	mov    rcx,QWORD PTR [rsp+0x58]
   1400354f8:	call   0x1400378f0
   1400354fd:	mov    rbx,rax
   140035500:	mov    QWORD PTR [rsp+0x40],rax
   140035505:	mov    rdi,QWORD PTR [rsp+0xe0]
   14003550d:	jmp    0x14003558a
   14003550f:	mov    DWORD PTR [rsp+0x20],0x1
   140035517:	call   0x14002814c
   14003551c:	and    DWORD PTR [rax+0x460],0x0
   140035523:	mov    rsi,QWORD PTR [rsp+0xd8]
   14003552b:	cmp    DWORD PTR [rsp+0xd0],0x0
   140035533:	je     0x140035556
   140035535:	mov    dl,0x1
   140035537:	mov    rcx,rsi
   14003553a:	call   0x140034794
   14003553f:	mov    rax,QWORD PTR [rsp+0xe8]
   140035547:	lea    r9,[rax+0x20]
   14003554b:	mov    r8d,DWORD PTR [rax+0x18]
   14003554f:	mov    edx,DWORD PTR [rax+0x4]
   140035552:	mov    ecx,DWORD PTR [rax]
   140035554:	jmp    0x140035563
   140035556:	lea    r9,[rsi+0x20]
   14003555a:	mov    r8d,DWORD PTR [rsi+0x18]
   14003555e:	mov    edx,DWORD PTR [rsi+0x4]
   140035561:	mov    ecx,DWORD PTR [rsi]
   140035563:	call   QWORD PTR [rip+0xbe37]        # 0x1400413a0
   140035569:	mov    r15d,DWORD PTR [rsp+0x20]
   14003556e:	mov    rbx,QWORD PTR [rsp+0x40]
   140035573:	mov    r13,QWORD PTR [rsp+0x50]
   140035578:	mov    rdi,QWORD PTR [rsp+0xe0]
   140035580:	mov    r14,QWORD PTR [rsp+0x60]
   140035585:	mov    r12,QWORD PTR [rsp+0x38]
   14003558a:	mov    rcx,r12
   14003558d:	call   0x140032a30
   140035592:	test   r15d,r15d
   140035595:	jne    0x1400355c9
   140035597:	cmp    DWORD PTR [rsi],0xe06d7363
   14003559d:	jne    0x1400355c9
   14003559f:	cmp    DWORD PTR [rsi+0x18],0x4
   1400355a3:	jne    0x1400355c9
   1400355a5:	mov    eax,DWORD PTR [rsi+0x20]
   1400355a8:	sub    eax,0x19930520
   1400355ad:	cmp    eax,0x2
   1400355b0:	ja     0x1400355c9
   1400355b2:	mov    rcx,QWORD PTR [rsi+0x28]
   1400355b6:	call   0x140032ac0
   1400355bb:	test   eax,eax
   1400355bd:	je     0x1400355c9
   1400355bf:	mov    dl,0x1
   1400355c1:	mov    rcx,rsi
   1400355c4:	call   0x140034794
   1400355c9:	call   0x14002814c
   1400355ce:	mov    QWORD PTR [rax+0xf0],rdi
   1400355d5:	call   0x14002814c
   1400355da:	mov    QWORD PTR [rax+0xf8],r13
   1400355e1:	mov    rax,QWORD PTR [rsp+0x48]
   1400355e6:	movsxd rcx,DWORD PTR [rax+0x1c]
   1400355ea:	mov    rax,QWORD PTR [r14]
   1400355ed:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   1400355f5:	mov    rax,rbx
   1400355f8:	add    rsp,0x90
   1400355ff:	pop    r15
   140035601:	pop    r14
   140035603:	pop    r13
   140035605:	pop    r12
   140035607:	pop    rdi
   140035608:	pop    rsi
   140035609:	pop    rbx
   14003560a:	ret    
   14003560b:	int3   
   14003560c:	sub    rsp,0x28
   140035610:	mov    rax,QWORD PTR [rcx]
   140035613:	cmp    DWORD PTR [rax],0xe0434352
   140035619:	je     0x14003562d
   14003561b:	cmp    DWORD PTR [rax],0xe0434f4d
   140035621:	je     0x14003562d
   140035623:	cmp    DWORD PTR [rax],0xe06d7363
   140035629:	jne    0x140035646
   14003562b:	jmp    0x14003564d
   14003562d:	call   0x14002814c
   140035632:	cmp    DWORD PTR [rax+0x100],0x0
   140035639:	jle    0x140035646
   14003563b:	call   0x14002814c
   140035640:	dec    DWORD PTR [rax+0x100]
   140035646:	xor    eax,eax
   140035648:	add    rsp,0x28
   14003564c:	ret    
   14003564d:	call   0x14002814c
   140035652:	and    DWORD PTR [rax+0x100],0x0
   140035659:	call   0x1400296c8
   14003565e:	int3   
   14003565f:	int3   
   140035660:	mov    rax,rsp
   140035663:	mov    DWORD PTR [rax+0x20],r9d
   140035667:	mov    QWORD PTR [rax+0x18],r8
   14003566b:	mov    QWORD PTR [rax+0x10],rdx
   14003566f:	mov    QWORD PTR [rax+0x8],rcx
   140035673:	push   rbx
   140035674:	push   rsi
   140035675:	push   rdi
   140035676:	push   r12
   140035678:	push   r13
   14003567a:	push   r14
   14003567c:	push   r15
   14003567e:	sub    rsp,0x30
   140035682:	mov    r12d,r9d
   140035685:	mov    rsi,r8
   140035688:	mov    r13,rdx
   14003568b:	mov    r15,rcx
   14003568e:	call   0x140032a90
   140035693:	mov    QWORD PTR [rsp+0x28],rax
   140035698:	mov    r8,rsi
   14003569b:	mov    rdx,r13
   14003569e:	mov    rcx,r15
   1400356a1:	call   0x140035b38
   1400356a6:	mov    edi,eax
   1400356a8:	call   0x14002814c
   1400356ad:	inc    DWORD PTR [rax+0x100]
   1400356b3:	cmp    edi,0xffffffff
   1400356b6:	je     0x1400357a9
   1400356bc:	cmp    edi,r12d
   1400356bf:	jle    0x1400357a9
   1400356c5:	cmp    edi,0xffffffff
   1400356c8:	jle    0x1400356cf
   1400356ca:	cmp    edi,DWORD PTR [rsi+0x4]
   1400356cd:	jl     0x1400356d4
   1400356cf:	call   0x1400296a8
   1400356d4:	movsxd r14,edi
   1400356d7:	call   0x140032a90
   1400356dc:	movsxd rcx,DWORD PTR [rsi+0x8]
   1400356e0:	lea    rax,[rax+r14*8]
   1400356e4:	mov    edi,DWORD PTR [rcx+rax*1]
   1400356e7:	mov    DWORD PTR [rsp+0x20],edi
   1400356eb:	call   0x140032a90
   1400356f0:	movsxd rcx,DWORD PTR [rsi+0x8]
   1400356f4:	lea    rax,[rax+r14*8]
   1400356f8:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   1400356fd:	je     0x14003571b
   1400356ff:	call   0x140032a90
   140035704:	movsxd rcx,DWORD PTR [rsi+0x8]
   140035708:	lea    rax,[rax+r14*8]
   14003570c:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140035711:	call   0x140032a90
   140035716:	add    rax,rbx
   140035719:	jmp    0x14003571d
   14003571b:	xor    eax,eax
   14003571d:	test   rax,rax
   140035720:	je     0x140035780
   140035722:	mov    r9d,edi
   140035725:	mov    r8,rsi
   140035728:	mov    rdx,r13
   14003572b:	mov    rcx,r15
   14003572e:	call   0x140035b8c
   140035733:	call   0x140032a90
   140035738:	movsxd rcx,DWORD PTR [rsi+0x8]
   14003573c:	lea    rax,[rax+r14*8]
   140035740:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140035745:	je     0x140035763
   140035747:	call   0x140032a90
   14003574c:	movsxd rcx,DWORD PTR [rsi+0x8]
   140035750:	lea    rax,[rax+r14*8]
   140035754:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140035759:	call   0x140032a90
   14003575e:	add    rax,rbx
   140035761:	jmp    0x140035765
   140035763:	xor    eax,eax
   140035765:	mov    r8d,0x103
   14003576b:	mov    rdx,r15
   14003576e:	mov    rcx,rax
   140035771:	call   0x1400378f0
   140035776:	mov    rcx,QWORD PTR [rsp+0x28]
   14003577b:	call   0x140032af4
   140035780:	jmp    0x1400357a0
   140035782:	mov    r12d,DWORD PTR [rsp+0x88]
   14003578a:	mov    rsi,QWORD PTR [rsp+0x80]
   140035792:	mov    r13,QWORD PTR [rsp+0x78]
   140035797:	mov    r15,QWORD PTR [rsp+0x70]
   14003579c:	mov    edi,DWORD PTR [rsp+0x20]
   1400357a0:	mov    DWORD PTR [rsp+0x24],edi
   1400357a4:	jmp    0x1400356b3
   1400357a9:	call   0x14002814c
   1400357ae:	cmp    DWORD PTR [rax+0x100],0x0
   1400357b5:	jle    0x1400357c2
   1400357b7:	call   0x14002814c
   1400357bc:	dec    DWORD PTR [rax+0x100]
   1400357c2:	cmp    edi,0xffffffff
   1400357c5:	je     0x1400357d1
   1400357c7:	cmp    edi,r12d
   1400357ca:	jle    0x1400357d1
   1400357cc:	call   0x1400296a8
   1400357d1:	mov    r9d,edi
   1400357d4:	mov    r8,rsi
   1400357d7:	mov    rdx,r13
   1400357da:	mov    rcx,r15
   1400357dd:	call   0x140035b8c
   1400357e2:	add    rsp,0x30
   1400357e6:	pop    r15
   1400357e8:	pop    r14
   1400357ea:	pop    r13
   1400357ec:	pop    r12
   1400357ee:	pop    rdi
   1400357ef:	pop    rsi
   1400357f0:	pop    rbx
   1400357f1:	ret    
   1400357f2:	int3   
   1400357f3:	int3   
   1400357f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400357f9:	mov    QWORD PTR [rsp+0x10],rbp
   1400357fe:	mov    QWORD PTR [rsp+0x18],rsi
   140035803:	push   rdi
   140035804:	push   r12
   140035806:	push   r14
   140035808:	sub    rsp,0x40
   14003580c:	mov    rbp,r9
   14003580f:	mov    r14,r8
   140035812:	mov    rsi,rdx
   140035815:	mov    rbx,rcx
   140035818:	call   0x14002814c
   14003581d:	mov    rdi,QWORD PTR [rsp+0x80]
   140035825:	cmp    DWORD PTR [rax+0x460],0x0
   14003582c:	mov    edx,0x1fffffff
   140035831:	mov    r8d,0x80000029
   140035837:	mov    r9d,0x80000026
   14003583d:	mov    r12d,0x1
   140035843:	jne    0x14003587d
   140035845:	cmp    DWORD PTR [rbx],0xe06d7363
   14003584b:	je     0x14003587d
   14003584d:	cmp    DWORD PTR [rbx],r8d
   140035850:	jne    0x140035862
   140035852:	cmp    DWORD PTR [rbx+0x18],0xf
   140035856:	jne    0x140035862
   140035858:	cmp    QWORD PTR [rbx+0x60],0x19930520
   140035860:	je     0x14003587d
   140035862:	cmp    DWORD PTR [rbx],r9d
   140035865:	je     0x14003587d
   140035867:	mov    ecx,DWORD PTR [rdi]
   140035869:	and    ecx,edx
   14003586b:	cmp    ecx,0x19930522
   140035871:	jb     0x14003587d
   140035873:	test   BYTE PTR [rdi+0x24],r12b
   140035877:	jne    0x1400359fc
   14003587d:	mov    eax,DWORD PTR [rbx+0x4]
   140035880:	test   al,0x66
   140035882:	je     0x14003591a
   140035888:	cmp    DWORD PTR [rdi+0x4],0x0
   14003588c:	je     0x1400359fc
   140035892:	cmp    DWORD PTR [rsp+0x88],0x0
   14003589a:	jne    0x1400359fc
   1400358a0:	and    eax,0x20
   1400358a3:	je     0x1400358e3
   1400358a5:	cmp    DWORD PTR [rbx],r9d
   1400358a8:	jne    0x1400358e3
   1400358aa:	mov    r8,QWORD PTR [r14+0xf8]
   1400358b1:	mov    rdx,rbp
   1400358b4:	mov    rcx,rdi
   1400358b7:	call   0x140035bdc
   1400358bc:	mov    ebx,eax
   1400358be:	cmp    eax,0xffffffff
   1400358c1:	jl     0x1400358c8
   1400358c3:	cmp    eax,DWORD PTR [rdi+0x4]
   1400358c6:	jl     0x1400358cd
   1400358c8:	call   0x1400296a8
   1400358cd:	mov    r9d,ebx
   1400358d0:	mov    rcx,rsi
   1400358d3:	mov    rdx,rbp
   1400358d6:	mov    r8,rdi
   1400358d9:	call   0x140035660
   1400358de:	jmp    0x1400359fc
   1400358e3:	test   eax,eax
   1400358e5:	je     0x140035907
   1400358e7:	cmp    DWORD PTR [rbx],r8d
   1400358ea:	jne    0x140035907
   1400358ec:	mov    esi,DWORD PTR [rbx+0x38]
   1400358ef:	cmp    esi,0xffffffff
   1400358f2:	jl     0x1400358f9
   1400358f4:	cmp    esi,DWORD PTR [rdi+0x4]
   1400358f7:	jl     0x1400358fe
   1400358f9:	call   0x1400296a8
   1400358fe:	mov    rcx,QWORD PTR [rbx+0x28]
   140035902:	mov    r9d,esi
   140035905:	jmp    0x1400358d3
   140035907:	mov    r8,rdi
   14003590a:	mov    rdx,rbp
   14003590d:	mov    rcx,rsi
   140035910:	call   0x140032860
   140035915:	jmp    0x1400359fc
   14003591a:	cmp    DWORD PTR [rdi+0xc],0x0
   14003591e:	jne    0x14003594e
   140035920:	mov    eax,DWORD PTR [rdi]
   140035922:	and    eax,edx
   140035924:	cmp    eax,0x19930521
   140035929:	jb     0x1400359fc
   14003592f:	cmp    DWORD PTR [rdi+0x20],0x0
   140035933:	je     0x140035943
   140035935:	call   0x140032a90
   14003593a:	movsxd rcx,DWORD PTR [rdi+0x20]
   14003593e:	add    rax,rcx
   140035941:	jmp    0x140035945
   140035943:	xor    eax,eax
   140035945:	test   rax,rax
   140035948:	je     0x1400359fc
   14003594e:	cmp    DWORD PTR [rbx],0xe06d7363
   140035954:	jne    0x1400359c3
   140035956:	cmp    DWORD PTR [rbx+0x18],0x3
   14003595a:	jb     0x1400359c3
   14003595c:	cmp    DWORD PTR [rbx+0x20],0x19930522
   140035963:	jbe    0x1400359c3
   140035965:	mov    rax,QWORD PTR [rbx+0x30]
   140035969:	cmp    DWORD PTR [rax+0x8],0x0
   14003596d:	je     0x140035981
   14003596f:	call   0x140032aa8
   140035974:	mov    rcx,QWORD PTR [rbx+0x30]
   140035978:	movsxd r10,DWORD PTR [rcx+0x8]
   14003597c:	add    r10,rax
   14003597f:	jmp    0x140035984
   140035981:	xor    r10d,r10d
   140035984:	test   r10,r10
   140035987:	je     0x1400359c3
   140035989:	movzx  eax,BYTE PTR [rsp+0x98]
   140035991:	mov    r9,rbp
   140035994:	mov    r8,r14
   140035997:	mov    DWORD PTR [rsp+0x38],eax
   14003599b:	mov    rax,QWORD PTR [rsp+0x90]
   1400359a3:	mov    rdx,rsi
   1400359a6:	mov    QWORD PTR [rsp+0x30],rax
   1400359ab:	mov    eax,DWORD PTR [rsp+0x88]
   1400359b2:	mov    rcx,rbx
   1400359b5:	mov    DWORD PTR [rsp+0x28],eax
   1400359b9:	mov    QWORD PTR [rsp+0x20],rdi
   1400359be:	call   r10
   1400359c1:	jmp    0x1400359ff
   1400359c3:	mov    rax,QWORD PTR [rsp+0x90]
   1400359cb:	mov    r9,rbp
   1400359ce:	mov    r8,r14
   1400359d1:	mov    QWORD PTR [rsp+0x38],rax
   1400359d6:	mov    eax,DWORD PTR [rsp+0x88]
   1400359dd:	mov    rdx,rsi
   1400359e0:	mov    DWORD PTR [rsp+0x30],eax
   1400359e4:	mov    al,BYTE PTR [rsp+0x98]
   1400359eb:	mov    rcx,rbx
   1400359ee:	mov    BYTE PTR [rsp+0x28],al
   1400359f2:	mov    QWORD PTR [rsp+0x20],rdi
   1400359f7:	call   0x140034938
   1400359fc:	mov    eax,r12d
   1400359ff:	mov    rbx,QWORD PTR [rsp+0x60]
   140035a04:	mov    rbp,QWORD PTR [rsp+0x68]
   140035a09:	mov    rsi,QWORD PTR [rsp+0x70]
   140035a0e:	add    rsp,0x40
   140035a12:	pop    r14
   140035a14:	pop    r12
   140035a16:	pop    rdi
   140035a17:	ret    
   140035a18:	mov    rax,rsp
   140035a1b:	mov    QWORD PTR [rax+0x8],rbx
   140035a1f:	mov    QWORD PTR [rax+0x10],rbp
   140035a23:	mov    QWORD PTR [rax+0x18],rsi
   140035a27:	mov    QWORD PTR [rax+0x20],rdi
   140035a2b:	push   r14
   140035a2d:	sub    rsp,0x20
   140035a31:	mov    esi,DWORD PTR [rcx+0x4]
   140035a34:	xor    ebx,ebx
   140035a36:	mov    r14,r8
   140035a39:	mov    rbp,rdx
   140035a3c:	mov    rdi,rcx
   140035a3f:	test   esi,esi
   140035a41:	je     0x140035a51
   140035a43:	movsxd rsi,esi
   140035a46:	call   0x140032a90
   140035a4b:	lea    rcx,[rsi+rax*1]
   140035a4f:	jmp    0x140035a54
   140035a51:	mov    rcx,rbx
   140035a54:	test   rcx,rcx
   140035a57:	je     0x140035b16
   140035a5d:	test   esi,esi
   140035a5f:	je     0x140035a70
   140035a61:	movsxd rsi,DWORD PTR [rdi+0x4]
   140035a65:	call   0x140032a90
   140035a6a:	lea    rcx,[rsi+rax*1]
   140035a6e:	jmp    0x140035a73
   140035a70:	mov    rcx,rbx
   140035a73:	cmp    BYTE PTR [rcx+0x10],bl
   140035a76:	je     0x140035b16
   140035a7c:	test   esi,esi
   140035a7e:	je     0x140035a91
   140035a80:	call   0x140032a90
   140035a85:	mov    rsi,rax
   140035a88:	movsxd rax,DWORD PTR [rdi+0x4]
   140035a8c:	add    rsi,rax
   140035a8f:	jmp    0x140035a94
   140035a91:	mov    rsi,rbx
   140035a94:	call   0x140032aa8
   140035a99:	mov    rcx,rax
   140035a9c:	movsxd rax,DWORD PTR [rbp+0x4]
   140035aa0:	add    rcx,rax
   140035aa3:	cmp    rsi,rcx
   140035aa6:	je     0x140035ae2
   140035aa8:	cmp    DWORD PTR [rdi+0x4],ebx
   140035aab:	je     0x140035abe
   140035aad:	call   0x140032a90
   140035ab2:	mov    rsi,rax
   140035ab5:	movsxd rax,DWORD PTR [rdi+0x4]
   140035ab9:	add    rsi,rax
   140035abc:	jmp    0x140035ac1
   140035abe:	mov    rsi,rbx
   140035ac1:	call   0x140032aa8
   140035ac6:	movsxd rdx,DWORD PTR [rbp+0x4]
   140035aca:	lea    rcx,[rsi+0x10]
   140035ace:	add    rdx,0x10
   140035ad2:	add    rdx,rax
   140035ad5:	call   0x140029c80
   140035ada:	test   eax,eax
   140035adc:	je     0x140035ae2
   140035ade:	xor    eax,eax
   140035ae0:	jmp    0x140035b1b
   140035ae2:	mov    al,0x2
   140035ae4:	test   BYTE PTR [rbp+0x0],al
   140035ae7:	je     0x140035aee
   140035ae9:	test   BYTE PTR [rdi],0x8
   140035aec:	je     0x140035b12
   140035aee:	test   BYTE PTR [r14],0x1
   140035af2:	je     0x140035af9
   140035af4:	test   BYTE PTR [rdi],0x1
   140035af7:	je     0x140035b12
   140035af9:	test   BYTE PTR [r14],0x4
   140035afd:	je     0x140035b04
   140035aff:	test   BYTE PTR [rdi],0x4
   140035b02:	je     0x140035b12
   140035b04:	test   BYTE PTR [r14],al
   140035b07:	je     0x140035b0d
   140035b09:	test   BYTE PTR [rdi],al
   140035b0b:	je     0x140035b12
   140035b0d:	mov    ebx,0x1
   140035b12:	mov    eax,ebx
   140035b14:	jmp    0x140035b1b
   140035b16:	mov    eax,0x1
   140035b1b:	mov    rbx,QWORD PTR [rsp+0x30]
   140035b20:	mov    rbp,QWORD PTR [rsp+0x38]
   140035b25:	mov    rsi,QWORD PTR [rsp+0x40]
   140035b2a:	mov    rdi,QWORD PTR [rsp+0x48]
   140035b2f:	add    rsp,0x20
   140035b33:	pop    r14
   140035b35:	ret    
   140035b36:	int3   
   140035b37:	int3   
   140035b38:	sub    rsp,0x28
   140035b3c:	movsxd r9,DWORD PTR [r8+0x1c]
   140035b40:	mov    rax,QWORD PTR [rcx]
   140035b43:	mov    r10,r8
   140035b46:	mov    eax,DWORD PTR [r9+rax*1]
   140035b4a:	cmp    eax,0xfffffffe
   140035b4d:	jne    0x140035b5a
   140035b4f:	mov    r8,QWORD PTR [rdx]
   140035b52:	mov    rcx,r10
   140035b55:	call   0x140035bdc
   140035b5a:	add    rsp,0x28
   140035b5e:	ret    
   140035b5f:	int3   
   140035b60:	rex push rbx
   140035b62:	sub    rsp,0x20
   140035b66:	lea    r9,[rsp+0x40]
   140035b6b:	mov    rbx,r8
   140035b6e:	call   0x140032668
   140035b73:	mov    rcx,QWORD PTR [rax]
   140035b76:	movsxd rax,DWORD PTR [rbx+0x1c]
   140035b7a:	mov    QWORD PTR [rsp+0x40],rcx
   140035b7f:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   140035b83:	add    rsp,0x20
   140035b87:	pop    rbx
   140035b88:	ret    
   140035b89:	int3   
   140035b8a:	int3   
   140035b8b:	int3   
   140035b8c:	movsxd rdx,DWORD PTR [r8+0x1c]
   140035b90:	mov    rax,QWORD PTR [rcx]
   140035b93:	mov    DWORD PTR [rdx+rax*1],r9d
   140035b97:	ret    
   140035b98:	mov    QWORD PTR [rsp+0x8],rbx
   140035b9d:	push   rdi
   140035b9e:	sub    rsp,0x20
   140035ba2:	mov    edi,r9d
   140035ba5:	lea    r9,[rsp+0x40]
   140035baa:	mov    rbx,r8
   140035bad:	call   0x140032668
   140035bb2:	mov    rcx,QWORD PTR [rax]
   140035bb5:	movsxd rax,DWORD PTR [rbx+0x1c]
   140035bb9:	mov    QWORD PTR [rsp+0x40],rcx
   140035bbe:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   140035bc2:	jle    0x140035bc8
   140035bc4:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   140035bc8:	mov    rbx,QWORD PTR [rsp+0x30]
   140035bcd:	add    rsp,0x20
   140035bd1:	pop    rdi
   140035bd2:	ret    
   140035bd3:	int3   
   140035bd4:	mov    r8,QWORD PTR [rdx]
   140035bd7:	jmp    0x140035bdc
   140035bdc:	mov    QWORD PTR [rsp+0x8],rbx
   140035be1:	mov    QWORD PTR [rsp+0x10],rbp
   140035be6:	mov    QWORD PTR [rsp+0x18],rsi
   140035beb:	push   rdi
   140035bec:	sub    rsp,0x20
   140035bf0:	mov    rbp,r8
   140035bf3:	mov    rsi,rdx
   140035bf6:	mov    rbx,rcx
   140035bf9:	test   rcx,rcx
   140035bfc:	jne    0x140035c03
   140035bfe:	call   0x1400296a8
   140035c03:	movsxd rax,DWORD PTR [rbx+0x18]
   140035c07:	mov    edi,DWORD PTR [rbx+0x14]
   140035c0a:	add    rax,QWORD PTR [rsi+0x8]
   140035c0e:	jne    0x140035c15
   140035c10:	call   0x1400296a8
   140035c15:	xor    ecx,ecx
   140035c17:	test   edi,edi
   140035c19:	je     0x140035c4d
   140035c1b:	mov    r8,QWORD PTR [rsi+0x8]
   140035c1f:	movsxd r9,DWORD PTR [rbx+0x18]
   140035c23:	lea    rdx,[r8+r9*1]
   140035c27:	movsxd rax,DWORD PTR [rdx]
   140035c2a:	add    rax,r8
   140035c2d:	cmp    rbp,rax
   140035c30:	jl     0x140035c3c
   140035c32:	inc    ecx
   140035c34:	add    rdx,0x8
   140035c38:	cmp    ecx,edi
   140035c3a:	jb     0x140035c27
   140035c3c:	test   ecx,ecx
   140035c3e:	je     0x140035c4d
   140035c40:	dec    ecx
   140035c42:	lea    rax,[r8+rcx*8]
   140035c46:	mov    eax,DWORD PTR [rax+r9*1+0x4]
   140035c4b:	jmp    0x140035c50
   140035c4d:	or     eax,0xffffffff
   140035c50:	mov    rbx,QWORD PTR [rsp+0x30]
   140035c55:	mov    rbp,QWORD PTR [rsp+0x38]
   140035c5a:	mov    rsi,QWORD PTR [rsp+0x40]
   140035c5f:	add    rsp,0x20
   140035c63:	pop    rdi
   140035c64:	ret    
   140035c65:	int3   
   140035c66:	int3   
   140035c67:	int3   
   140035c68:	mov    rax,rsp
   140035c6b:	mov    QWORD PTR [rax+0x8],rbx
   140035c6f:	mov    QWORD PTR [rax+0x10],rbp
   140035c73:	mov    QWORD PTR [rax+0x20],rsi
   140035c77:	mov    QWORD PTR [rax+0x18],r8
   140035c7b:	push   rdi
   140035c7c:	push   r12
   140035c7e:	push   r13
   140035c80:	push   r14
   140035c82:	push   r15
   140035c84:	sub    rsp,0x20
   140035c88:	mov    rsi,r9
   140035c8b:	mov    r14,rdx
   140035c8e:	mov    r15,rcx
   140035c91:	test   rdx,rdx
   140035c94:	je     0x140035cb0
   140035c96:	test   r8,r8
   140035c99:	je     0x140035cb0
   140035c9b:	test   r9,r9
   140035c9e:	jne    0x140035ccf
   140035ca0:	call   0x140029bf8
   140035ca5:	mov    DWORD PTR [rax],0x16
   140035cab:	call   0x140029b2c
   140035cb0:	xor    eax,eax
   140035cb2:	mov    rbx,QWORD PTR [rsp+0x50]
   140035cb7:	mov    rbp,QWORD PTR [rsp+0x58]
   140035cbc:	mov    rsi,QWORD PTR [rsp+0x68]
   140035cc1:	add    rsp,0x20
   140035cc5:	pop    r15
   140035cc7:	pop    r14
   140035cc9:	pop    r13
   140035ccb:	pop    r12
   140035ccd:	pop    rdi
   140035cce:	ret    
   140035ccf:	test   rcx,rcx
   140035cd2:	je     0x140035ca0
   140035cd4:	xor    edx,edx
   140035cd6:	or     rax,0xffffffffffffffff
   140035cda:	div    r14
   140035cdd:	cmp    r8,rax
   140035ce0:	ja     0x140035ca0
   140035ce2:	mov    rdi,r14
   140035ce5:	imul   rdi,r8
   140035ce9:	test   DWORD PTR [r9+0x18],0x10c
   140035cf1:	mov    rbp,rdi
   140035cf4:	je     0x140035cfc
   140035cf6:	mov    r12d,DWORD PTR [r9+0x24]
   140035cfa:	jmp    0x140035d02
   140035cfc:	mov    r12d,0x1000
   140035d02:	test   rdi,rdi
   140035d05:	je     0x140035dee
   140035d0b:	mov    eax,DWORD PTR [rsi+0x18]
   140035d0e:	and    eax,0x108
   140035d13:	je     0x140035d4e
   140035d15:	mov    r13d,DWORD PTR [rsi+0x8]
   140035d19:	test   r13d,r13d
   140035d1c:	je     0x140035d4e
   140035d1e:	js     0x140035da6
   140035d24:	mov    rcx,QWORD PTR [rsi]
   140035d27:	cmp    rbp,r13
   140035d2a:	mov    rdx,r15
   140035d2d:	cmovb  r13d,ebp
   140035d31:	mov    r8d,r13d
   140035d34:	mov    ebx,r13d
   140035d37:	call   0x1400265d0
   140035d3c:	sub    DWORD PTR [rsi+0x8],r13d
   140035d40:	add    QWORD PTR [rsi],rbx
   140035d43:	sub    rbp,rbx
   140035d46:	add    r15,rbx
   140035d49:	jmp    0x140035de0
   140035d4e:	mov    ebx,r12d
   140035d51:	cmp    rbp,rbx
   140035d54:	jb     0x140035dba
   140035d56:	test   eax,eax
   140035d58:	je     0x140035d66
   140035d5a:	mov    rcx,rsi
   140035d5d:	call   0x140030eb4
   140035d62:	test   eax,eax
   140035d64:	jne    0x140035daa
   140035d66:	test   r12d,r12d
   140035d69:	je     0x140035d79
   140035d6b:	xor    edx,edx
   140035d6d:	mov    rax,rbp
   140035d70:	div    rbx
   140035d73:	mov    ebx,ebp
   140035d75:	sub    ebx,edx
   140035d77:	jmp    0x140035d7b
   140035d79:	mov    ebx,ebp
   140035d7b:	mov    rcx,rsi
   140035d7e:	call   0x14002f3b4
   140035d83:	mov    r8d,ebx
   140035d86:	mov    rdx,r15
   140035d89:	mov    ecx,eax
   140035d8b:	call   0x14002f450
   140035d90:	cmp    eax,0xffffffff
   140035d93:	je     0x140035da6
   140035d95:	mov    ecx,eax
   140035d97:	cmp    eax,ebx
   140035d99:	cmova  ecx,ebx
   140035d9c:	sub    rbp,rcx
   140035d9f:	add    r15,rcx
   140035da2:	cmp    eax,ebx
   140035da4:	jae    0x140035de0
   140035da6:	or     DWORD PTR [rsi+0x18],0x20
   140035daa:	sub    rdi,rbp
   140035dad:	xor    edx,edx
   140035daf:	mov    rax,rdi
   140035db2:	div    r14
   140035db5:	jmp    0x140035cb2
   140035dba:	movsx  ecx,BYTE PTR [r15]
   140035dbe:	mov    rdx,rsi
   140035dc1:	call   0x14002ae64
   140035dc6:	cmp    eax,0xffffffff
   140035dc9:	je     0x140035daa
   140035dcb:	inc    r15
   140035dce:	dec    rbp
   140035dd1:	cmp    DWORD PTR [rsi+0x24],0x0
   140035dd5:	mov    r12d,0x1
   140035ddb:	cmovg  r12d,DWORD PTR [rsi+0x24]
   140035de0:	test   rbp,rbp
   140035de3:	jne    0x140035d0b
   140035de9:	mov    r8,QWORD PTR [rsp+0x60]
   140035dee:	mov    rax,r8
   140035df1:	jmp    0x140035cb2
   140035df6:	int3   
   140035df7:	int3   
   140035df8:	mov    QWORD PTR [rsp+0x8],rbx
   140035dfd:	mov    QWORD PTR [rsp+0x10],rsi
   140035e02:	push   rdi
   140035e03:	sub    rsp,0x20
   140035e07:	mov    rdi,rcx
   140035e0a:	test   rcx,rcx
   140035e0d:	jne    0x140035e24
   140035e0f:	call   0x140029bf8
   140035e14:	mov    DWORD PTR [rax],0x16
   140035e1a:	call   0x140029b2c
   140035e1f:	jmp    0x140035f38
   140035e24:	call   0x140028a64
   140035e29:	test   eax,eax
   140035e2b:	js     0x140035f38
   140035e31:	mov    eax,DWORD PTR [rdi+0x18]
   140035e34:	test   al,0x83
   140035e36:	je     0x140035f38
   140035e3c:	test   al,0x40
   140035e3e:	jne    0x140035f38
   140035e44:	test   al,0x2
   140035e46:	je     0x140035e53
   140035e48:	or     eax,0x20
   140035e4b:	mov    DWORD PTR [rdi+0x18],eax
   140035e4e:	jmp    0x140035f38
   140035e53:	or     eax,0x1
   140035e56:	mov    DWORD PTR [rdi+0x18],eax
   140035e59:	test   eax,0x10c
   140035e5e:	jne    0x140035e6a
   140035e60:	mov    rcx,rdi
   140035e63:	call   0x14002fe34
   140035e68:	jmp    0x140035e71
   140035e6a:	mov    rax,QWORD PTR [rdi+0x10]
   140035e6e:	mov    QWORD PTR [rdi],rax
   140035e71:	mov    rcx,rdi
   140035e74:	call   0x14002f3b4
   140035e79:	mov    r8d,DWORD PTR [rdi+0x24]
   140035e7d:	mov    rdx,QWORD PTR [rdi+0x10]
   140035e81:	mov    ecx,eax
   140035e83:	call   0x140037938
   140035e88:	mov    DWORD PTR [rdi+0x8],eax
   140035e8b:	lea    ecx,[rax+0x1]
   140035e8e:	cmp    ecx,0x1
   140035e91:	jbe    0x140035f27
   140035e97:	test   BYTE PTR [rdi+0x18],0x82
   140035e9b:	jne    0x140035ef7
   140035e9d:	mov    rcx,rdi
   140035ea0:	call   0x14002f3b4
   140035ea5:	cmp    eax,0xffffffff
   140035ea8:	je     0x140035ee2
   140035eaa:	mov    rcx,rdi
   140035ead:	call   0x14002f3b4
   140035eb2:	cmp    eax,0xfffffffe
   140035eb5:	je     0x140035ee2
   140035eb7:	mov    rcx,rdi
   140035eba:	call   0x14002f3b4
   140035ebf:	mov    rcx,rdi
   140035ec2:	lea    rsi,[rip+0x28a97]        # 0x14005e960
   140035ec9:	movsxd rbx,eax
   140035ecc:	sar    rbx,0x5
   140035ed0:	call   0x14002f3b4
   140035ed5:	and    eax,0x1f
   140035ed8:	imul   rax,rax,0x58
   140035edc:	add    rax,QWORD PTR [rsi+rbx*8]
   140035ee0:	jmp    0x140035ee9
   140035ee2:	lea    rax,[rip+0x23147]        # 0x140059030
   140035ee9:	mov    al,BYTE PTR [rax+0x8]
   140035eec:	and    al,0x82
   140035eee:	cmp    al,0x82
   140035ef0:	jne    0x140035ef7
   140035ef2:	bts    DWORD PTR [rdi+0x18],0xd
   140035ef7:	cmp    DWORD PTR [rdi+0x24],0x200
   140035efe:	jne    0x140035f16
   140035f00:	test   BYTE PTR [rdi+0x18],0x8
   140035f04:	je     0x140035f16
   140035f06:	test   DWORD PTR [rdi+0x18],0x400
   140035f0d:	jne    0x140035f16
   140035f0f:	mov    DWORD PTR [rdi+0x24],0x1000
   140035f16:	mov    rcx,QWORD PTR [rdi]
   140035f19:	dec    DWORD PTR [rdi+0x8]
   140035f1c:	movzx  eax,BYTE PTR [rcx]
   140035f1f:	inc    rcx
   140035f22:	mov    QWORD PTR [rdi],rcx
   140035f25:	jmp    0x140035f3b
   140035f27:	neg    eax
   140035f29:	sbb    eax,eax
   140035f2b:	and    eax,0x10
   140035f2e:	add    eax,0x10
   140035f31:	or     DWORD PTR [rdi+0x18],eax
   140035f34:	and    DWORD PTR [rdi+0x8],0x0
   140035f38:	or     eax,0xffffffff
   140035f3b:	mov    rbx,QWORD PTR [rsp+0x30]
   140035f40:	mov    rsi,QWORD PTR [rsp+0x38]
   140035f45:	add    rsp,0x20
   140035f49:	pop    rdi
   140035f4a:	ret    
   140035f4b:	int3   
   140035f4c:	mov    QWORD PTR [rsp+0x8],rbx
   140035f51:	push   rdi
   140035f52:	sub    rsp,0x20
   140035f56:	test   BYTE PTR [rdx+0x18],0x40
   140035f5a:	mov    rbx,rdx
   140035f5d:	mov    edi,ecx
   140035f5f:	jne    0x140035fec
   140035f65:	mov    rcx,rdx
   140035f68:	call   0x14002f3b4
   140035f6d:	lea    rdx,[rip+0x230bc]        # 0x140059030
   140035f74:	lea    r10,[rip+0x289e5]        # 0x14005e960
   140035f7b:	movsxd r9,eax
   140035f7e:	lea    r8d,[r9+0x2]
   140035f82:	cmp    r8d,0x1
   140035f86:	jbe    0x140035fa0
   140035f88:	mov    r8,r9
   140035f8b:	mov    rcx,r9
   140035f8e:	and    r8d,0x1f
   140035f92:	sar    rcx,0x5
   140035f96:	imul   r8,r8,0x58
   140035f9a:	add    r8,QWORD PTR [r10+rcx*8]
   140035f9e:	jmp    0x140035fa3
   140035fa0:	mov    r8,rdx
   140035fa3:	test   BYTE PTR [r8+0x38],0x7f
   140035fa8:	jne    0x140035fce
   140035faa:	lea    eax,[r9+0x2]
   140035fae:	cmp    eax,0x1
   140035fb1:	jbe    0x140035fc8
   140035fb3:	mov    rdx,r9
   140035fb6:	mov    rax,r9
   140035fb9:	and    edx,0x1f
   140035fbc:	sar    rax,0x5
   140035fc0:	imul   rdx,rdx,0x58
   140035fc4:	add    rdx,QWORD PTR [r10+rax*8]
   140035fc8:	test   BYTE PTR [rdx+0x38],0x80
   140035fcc:	je     0x140035fec
   140035fce:	call   0x140029bf8
   140035fd3:	mov    DWORD PTR [rax],0x16
   140035fd9:	call   0x140029b2c
   140035fde:	or     eax,0xffffffff
   140035fe1:	mov    rbx,QWORD PTR [rsp+0x30]
   140035fe6:	add    rsp,0x20
   140035fea:	pop    rdi
   140035feb:	ret    
   140035fec:	cmp    edi,0xffffffff
   140035fef:	je     0x140035fde
   140035ff1:	test   BYTE PTR [rbx+0x18],0x1
   140035ff5:	jne    0x140036003
   140035ff7:	test   BYTE PTR [rbx+0x18],0x80
   140035ffb:	je     0x140035fde
   140035ffd:	test   BYTE PTR [rbx+0x18],0x2
   140036001:	jne    0x140035fde
   140036003:	cmp    QWORD PTR [rbx+0x10],0x0
   140036008:	jne    0x140036012
   14003600a:	mov    rcx,rbx
   14003600d:	call   0x14002fe34
   140036012:	mov    rax,QWORD PTR [rbx]
   140036015:	cmp    rax,QWORD PTR [rbx+0x10]
   140036019:	jne    0x140036027
   14003601b:	cmp    DWORD PTR [rbx+0x8],0x0
   14003601f:	jne    0x140035fde
   140036021:	inc    rax
   140036024:	mov    QWORD PTR [rbx],rax
   140036027:	dec    QWORD PTR [rbx]
   14003602a:	test   BYTE PTR [rbx+0x18],0x40
   14003602e:	mov    rax,QWORD PTR [rbx]
   140036031:	je     0x140036040
   140036033:	cmp    BYTE PTR [rax],dil
   140036036:	je     0x140036043
   140036038:	inc    rax
   14003603b:	mov    QWORD PTR [rbx],rax
   14003603e:	jmp    0x140035fde
   140036040:	mov    BYTE PTR [rax],dil
   140036043:	inc    DWORD PTR [rbx+0x8]
   140036046:	and    DWORD PTR [rbx+0x18],0xffffffef
   14003604a:	or     DWORD PTR [rbx+0x18],0x1
   14003604e:	movzx  eax,dil
   140036052:	jmp    0x140035fe1
   140036054:	mov    QWORD PTR [rsp+0x8],rbx
   140036059:	mov    QWORD PTR [rsp+0x10],rdx
   14003605e:	push   rdi
   14003605f:	sub    rsp,0x20
   140036063:	mov    rbx,rdx
   140036066:	mov    edi,ecx
   140036068:	xor    eax,eax
   14003606a:	test   rdx,rdx
   14003606d:	setne  al
   140036070:	test   eax,eax
   140036072:	jne    0x140036089
   140036074:	call   0x140029bf8
   140036079:	mov    DWORD PTR [rax],0x16
   14003607f:	call   0x140029b2c
   140036084:	or     eax,0xffffffff
   140036087:	jmp    0x1400360b1
   140036089:	call   0x140028a64
   14003608e:	test   eax,eax
   140036090:	js     0x140036084
   140036092:	mov    rcx,rbx
   140036095:	call   0x14002ccbc
   14003609a:	nop
   14003609b:	mov    rdx,rbx
   14003609e:	mov    ecx,edi
   1400360a0:	call   0x140035f4c
   1400360a5:	mov    edi,eax
   1400360a7:	mov    rcx,rbx
   1400360aa:	call   0x14002cd58
   1400360af:	mov    eax,edi
   1400360b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400360b6:	add    rsp,0x20
   1400360ba:	pop    rdi
   1400360bb:	ret    
   1400360bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400360c1:	mov    QWORD PTR [rsp+0x10],rsi
   1400360c6:	push   rdi
   1400360c7:	sub    rsp,0x20
   1400360cb:	mov    rdi,rcx
   1400360ce:	test   rcx,rcx
   1400360d1:	jne    0x1400360e8
   1400360d3:	call   0x140029bf8
   1400360d8:	mov    DWORD PTR [rax],0x16
   1400360de:	call   0x140029b2c
   1400360e3:	jmp    0x1400361fe
   1400360e8:	call   0x140028a64
   1400360ed:	test   eax,eax
   1400360ef:	js     0x1400361fe
   1400360f5:	mov    eax,DWORD PTR [rdi+0x18]
   1400360f8:	test   al,0x83
   1400360fa:	je     0x1400361fe
   140036100:	test   al,0x40
   140036102:	jne    0x1400361fe
   140036108:	test   al,0x2
   14003610a:	je     0x140036117
   14003610c:	or     eax,0x20
   14003610f:	mov    DWORD PTR [rdi+0x18],eax
   140036112:	jmp    0x1400361fe
   140036117:	or     eax,0x1
   14003611a:	mov    DWORD PTR [rdi+0x18],eax
   14003611d:	test   eax,0x10c
   140036122:	jne    0x14003612e
   140036124:	mov    rcx,rdi
   140036127:	call   0x14002fe34
   14003612c:	jmp    0x140036135
   14003612e:	mov    rax,QWORD PTR [rdi+0x10]
   140036132:	mov    QWORD PTR [rdi],rax
   140036135:	mov    rcx,rdi
   140036138:	call   0x14002f3b4
   14003613d:	mov    r8d,DWORD PTR [rdi+0x24]
   140036141:	mov    rdx,QWORD PTR [rdi+0x10]
   140036145:	mov    ecx,eax
   140036147:	call   0x140037938
   14003614c:	mov    DWORD PTR [rdi+0x8],eax
   14003614f:	lea    ecx,[rax+0x1]
   140036152:	cmp    ecx,0x2
   140036155:	jbe    0x1400361ed
   14003615b:	test   BYTE PTR [rdi+0x18],0x82
   14003615f:	jne    0x1400361bb
   140036161:	mov    rcx,rdi
   140036164:	call   0x14002f3b4
   140036169:	cmp    eax,0xffffffff
   14003616c:	je     0x1400361a6
   14003616e:	mov    rcx,rdi
   140036171:	call   0x14002f3b4
   140036176:	cmp    eax,0xfffffffe
   140036179:	je     0x1400361a6
   14003617b:	mov    rcx,rdi
   14003617e:	call   0x14002f3b4
   140036183:	mov    rcx,rdi
   140036186:	lea    rsi,[rip+0x287d3]        # 0x14005e960
   14003618d:	movsxd rbx,eax
   140036190:	sar    rbx,0x5
   140036194:	call   0x14002f3b4
   140036199:	and    eax,0x1f
   14003619c:	imul   rax,rax,0x58
   1400361a0:	add    rax,QWORD PTR [rsi+rbx*8]
   1400361a4:	jmp    0x1400361ad
   1400361a6:	lea    rax,[rip+0x22e83]        # 0x140059030
   1400361ad:	mov    al,BYTE PTR [rax+0x8]
   1400361b0:	and    al,0x82
   1400361b2:	cmp    al,0x82
   1400361b4:	jne    0x1400361bb
   1400361b6:	bts    DWORD PTR [rdi+0x18],0xd
   1400361bb:	cmp    DWORD PTR [rdi+0x24],0x200
   1400361c2:	jne    0x1400361da
   1400361c4:	test   BYTE PTR [rdi+0x18],0x8
   1400361c8:	je     0x1400361da
   1400361ca:	test   DWORD PTR [rdi+0x18],0x400
   1400361d1:	jne    0x1400361da
   1400361d3:	mov    DWORD PTR [rdi+0x24],0x1000
   1400361da:	mov    rcx,QWORD PTR [rdi]
   1400361dd:	add    DWORD PTR [rdi+0x8],0xfffffffe
   1400361e1:	movzx  eax,WORD PTR [rcx]
   1400361e4:	add    rcx,0x2
   1400361e8:	mov    QWORD PTR [rdi],rcx
   1400361eb:	jmp    0x140036203
   1400361ed:	neg    eax
   1400361ef:	sbb    eax,eax
   1400361f1:	and    eax,0x10
   1400361f4:	add    eax,0x10
   1400361f7:	or     DWORD PTR [rdi+0x18],eax
   1400361fa:	and    DWORD PTR [rdi+0x8],0x0
   1400361fe:	mov    eax,0xffff
   140036203:	mov    rbx,QWORD PTR [rsp+0x30]
   140036208:	mov    rsi,QWORD PTR [rsp+0x38]
   14003620d:	add    rsp,0x20
   140036211:	pop    rdi
   140036212:	ret    
   140036213:	int3   
   140036214:	mov    QWORD PTR [rsp+0x8],rbx
   140036219:	mov    QWORD PTR [rsp+0x10],rsi
   14003621e:	push   rdi
   14003621f:	sub    rsp,0x40
   140036223:	mov    ebx,edx
   140036225:	mov    rdx,rcx
   140036228:	lea    rcx,[rsp+0x20]
   14003622d:	mov    edi,r9d
   140036230:	mov    esi,r8d
   140036233:	call   0x140026f30
   140036238:	mov    rax,QWORD PTR [rsp+0x28]
   14003623d:	movzx  edx,bl
   140036240:	test   BYTE PTR [rdx+rax*1+0x19],dil
   140036245:	jne    0x140036265
   140036247:	test   esi,esi
   140036249:	je     0x14003625f
   14003624b:	mov    rax,QWORD PTR [rsp+0x20]
   140036250:	mov    rcx,QWORD PTR [rax+0x108]
   140036257:	movzx  eax,WORD PTR [rcx+rdx*2]
   14003625b:	and    eax,esi
   14003625d:	jmp    0x140036261
   14003625f:	xor    eax,eax
   140036261:	test   eax,eax
   140036263:	je     0x14003626a
   140036265:	mov    eax,0x1
   14003626a:	cmp    BYTE PTR [rsp+0x38],0x0
   14003626f:	je     0x14003627d
   140036271:	mov    rcx,QWORD PTR [rsp+0x30]
   140036276:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003627d:	mov    rbx,QWORD PTR [rsp+0x50]
   140036282:	mov    rsi,QWORD PTR [rsp+0x58]
   140036287:	add    rsp,0x40
   14003628b:	pop    rdi
   14003628c:	ret    
   14003628d:	int3   
   14003628e:	int3   
   14003628f:	int3   
   140036290:	mov    edx,ecx
   140036292:	mov    r9d,0x4
   140036298:	xor    r8d,r8d
   14003629b:	xor    ecx,ecx
   14003629d:	jmp    0x140036214
   1400362a2:	int3   
   1400362a3:	int3   
   1400362a4:	sub    rsp,0x38
   1400362a8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400362b1:	call   0x140026da8
   1400362b6:	nop
   1400362b7:	jmp    0x1400362be
   1400362b9:	mov    rax,QWORD PTR [rsp+0x50]
   1400362be:	add    rsp,0x38
   1400362c2:	ret    
   1400362c3:	int3   
   1400362c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400362c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400362ce:	push   rdi
   1400362cf:	sub    rsp,0x20
   1400362d3:	mov    rsi,r9
   1400362d6:	mov    rdi,r8
   1400362d9:	mov    rbx,rdx
   1400362dc:	cmp    rcx,QWORD PTR [rdx]
   1400362df:	jne    0x140036348
   1400362e1:	cmp    QWORD PTR [r8],r9
   1400362e4:	jne    0x140036326
   1400362e6:	mov    rcx,QWORD PTR [rbx]
   1400362e9:	mov    edx,0x4
   1400362ee:	call   0x140029744
   1400362f3:	mov    QWORD PTR [rdi],rax
   1400362f6:	test   rax,rax
   1400362f9:	jne    0x1400362ff
   1400362fb:	xor    eax,eax
   1400362fd:	jmp    0x14003634d
   1400362ff:	mov    rax,QWORD PTR [rsp+0x50]
   140036304:	mov    rdx,rsi
   140036307:	mov    DWORD PTR [rax],0x1
   14003630d:	mov    r8,QWORD PTR [rbx]
   140036310:	mov    rcx,QWORD PTR [rdi]
   140036313:	add    r8,r8
   140036316:	call   0x1400265d0
   14003631b:	mov    rax,QWORD PTR [rbx]
   14003631e:	add    rax,rax
   140036321:	mov    QWORD PTR [rbx],rax
   140036324:	jmp    0x140036348
   140036326:	mov    rdx,QWORD PTR [rdx]
   140036329:	mov    rcx,QWORD PTR [rdi]
   14003632c:	mov    r8d,0x4
   140036332:	call   0x1400298c4
   140036337:	test   rax,rax
   14003633a:	je     0x1400362fb
   14003633c:	mov    QWORD PTR [rdi],rax
   14003633f:	mov    rcx,QWORD PTR [rbx]
   140036342:	add    rcx,rcx
   140036345:	mov    QWORD PTR [rbx],rcx
   140036348:	mov    eax,0x1
   14003634d:	mov    rbx,QWORD PTR [rsp+0x30]
   140036352:	mov    rsi,QWORD PTR [rsp+0x38]
   140036357:	add    rsp,0x20
   14003635b:	pop    rdi
   14003635c:	ret    
   14003635d:	int3   
   14003635e:	int3   
   14003635f:	int3   
   140036360:	mov    QWORD PTR [rsp+0x8],rbx
   140036365:	mov    QWORD PTR [rsp+0x10],rsi
   14003636a:	push   rdi
   14003636b:	sub    rsp,0x20
   14003636f:	mov    rsi,rdx
   140036372:	mov    rdi,rcx
   140036375:	inc    DWORD PTR [rdi]
   140036377:	mov    rcx,rsi
   14003637a:	call   0x140033270
   14003637f:	movzx  ebx,ax
   140036382:	mov    eax,0xffff
   140036387:	cmp    bx,ax
   14003638a:	je     0x14003639d
   14003638c:	mov    edx,0x8
   140036391:	movzx  ecx,bx
   140036394:	call   0x14002bc9c
   140036399:	test   eax,eax
   14003639b:	jne    0x140036375
   14003639d:	mov    rsi,QWORD PTR [rsp+0x38]
   1400363a2:	movzx  eax,bx
   1400363a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400363aa:	add    rsp,0x20
   1400363ae:	pop    rdi
   1400363af:	ret    
   1400363b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400363b5:	push   rbp
   1400363b6:	push   rsi
   1400363b7:	push   rdi
   1400363b8:	push   r12
   1400363ba:	push   r13
   1400363bc:	push   r14
   1400363be:	push   r15
   1400363c0:	lea    rbp,[rsp-0x2c0]
   1400363c8:	sub    rsp,0x3c0
   1400363cf:	mov    rax,QWORD PTR [rip+0x22cb2]        # 0x140059088
   1400363d6:	xor    rax,rsp
   1400363d9:	mov    QWORD PTR [rbp+0x2b0],rax
   1400363e0:	xor    r13d,r13d
   1400363e3:	lea    r12,[rbp-0x10]
   1400363e7:	mov    QWORD PTR [rbp-0x40],r9
   1400363eb:	movzx  edi,r13w
   1400363ef:	mov    rbx,r8
   1400363f2:	mov    rsi,rdx
   1400363f5:	mov    QWORD PTR [rsp+0x78],rdx
   1400363fa:	mov    r15,rcx
   1400363fd:	mov    QWORD PTR [rsp+0x70],rcx
   140036402:	mov    DWORD PTR [rsp+0x40],edi
   140036406:	mov    QWORD PTR [rbp-0x70],r12
   14003640a:	mov    QWORD PTR [rbp-0x58],0x15e
   140036412:	mov    DWORD PTR [rbp-0x68],r13d
   140036416:	mov    QWORD PTR [rsp+0x68],r13
   14003641b:	mov    DWORD PTR [rbp-0x48],r13d
   14003641f:	mov    DWORD PTR [rsp+0x50],r13d
   140036424:	test   rdx,rdx
   140036427:	jne    0x140036441
   140036429:	call   0x140029bf8
   14003642e:	mov    DWORD PTR [rax],0x16
   140036434:	call   0x140029b2c
   140036439:	or     eax,0xffffffff
   14003643c:	jmp    0x140037677
   140036441:	call   0x140028a64
   140036446:	test   eax,eax
   140036448:	js     0x140036439
   14003644a:	test   r15,r15
   14003644d:	je     0x140036429
   14003644f:	lea    rcx,[rbp-0x38]
   140036453:	mov    rdx,rbx
   140036456:	call   0x140026f30
   14003645b:	movzx  eax,WORD PTR [rsi]
   14003645e:	mov    ebx,r13d
   140036461:	mov    BYTE PTR [rsp+0x3c],r13b
   140036466:	mov    r14d,r13d
   140036469:	mov    DWORD PTR [rsp+0x30],r13d
   14003646e:	mov    DWORD PTR [rsp+0x48],r13d
   140036473:	mov    DWORD PTR [rsp+0x38],ebx
   140036477:	test   ax,ax
   14003647a:	je     0x140037664
   140036480:	mov    ebx,0x1
   140036485:	mov    r12d,0xffff
   14003648b:	mov    edx,0x8
   140036490:	movzx  ecx,ax
   140036493:	call   0x14002bc9c
   140036498:	test   eax,eax
   14003649a:	je     0x1400364eb
   14003649c:	lea    rcx,[rsp+0x48]
   1400364a1:	sub    r14d,ebx
   1400364a4:	mov    rdx,r15
   1400364a7:	mov    DWORD PTR [rsp+0x48],r14d
   1400364ac:	call   0x140036360
   1400364b1:	cmp    r12w,ax
   1400364b5:	je     0x1400364c2
   1400364b7:	mov    rdx,r15
   1400364ba:	movzx  ecx,ax
   1400364bd:	call   0x1400382cc
   1400364c2:	add    rsi,0x2
   1400364c6:	mov    edx,0x8
   1400364cb:	movzx  ecx,WORD PTR [rsi]
   1400364ce:	call   0x14002bc9c
   1400364d3:	test   eax,eax
   1400364d5:	jne    0x1400364c2
   1400364d7:	mov    r14d,DWORD PTR [rsp+0x48]
   1400364dc:	mov    QWORD PTR [rsp+0x78],rsi
   1400364e1:	mov    DWORD PTR [rsp+0x30],r14d
   1400364e6:	jmp    0x1400374dc
   1400364eb:	mov    r10,QWORD PTR [rsp+0x78]
   1400364f0:	mov    ecx,0x25
   1400364f5:	cmp    cx,WORD PTR [r10]
   1400364f9:	jne    0x140037485
   1400364ff:	cmp    cx,WORD PTR [r10+0x2]
   140036504:	je     0x14003746f
   14003650a:	movzx  r15d,r13w
   14003650e:	xor    r11d,r11d
   140036511:	mov    edx,r13d
   140036514:	mov    r12,r13
   140036517:	lea    r9d,[rcx-0x24]
   14003651b:	mov    DWORD PTR [rsp+0x60],r13d
   140036520:	mov    DWORD PTR [rbp-0x60],r15d
   140036524:	mov    DWORD PTR [rsp+0x64],r13d
   140036529:	mov    r8d,r13d
   14003652c:	mov    DWORD PTR [rsp+0x58],r13d
   140036531:	mov    QWORD PTR [rbp-0x78],r13
   140036535:	mov    BYTE PTR [rsp+0x5c],r13b
   14003653a:	mov    BYTE PTR [rsp+0x4c],r13b
   14003653f:	mov    dil,r13b
   140036542:	mov    sil,r13b
   140036545:	mov    DWORD PTR [rbp-0x64],r13d
   140036549:	mov    r12b,r9b
   14003654c:	mov    DWORD PTR [rsp+0x44],edx
   140036550:	mov    r14b,r11b
   140036553:	mov    r13d,r11d
   140036556:	or     r15d,0xffffffff
   14003655a:	add    r10,0x2
   14003655e:	mov    eax,0xff00
   140036563:	movzx  ebx,WORD PTR [r10]
   140036567:	mov    QWORD PTR [rsp+0x78],r10
   14003656c:	test   ax,bx
   14003656f:	jne    0x1400365ac
   140036571:	movzx  ecx,bl
   140036574:	call   0x1400384d0
   140036579:	mov    r8d,DWORD PTR [rsp+0x58]
   14003657e:	mov    edx,DWORD PTR [rsp+0x44]
   140036582:	mov    r10,QWORD PTR [rsp+0x78]
   140036587:	xor    r11d,r11d
   14003658a:	lea    r9d,[r11+0x1]
   14003658e:	test   eax,eax
   140036590:	je     0x1400365ac
   140036592:	lea    edx,[rdx+rdx*4]
   140036595:	add    r8d,r9d
   140036598:	lea    edx,[rdx-0x18]
   14003659b:	mov    DWORD PTR [rsp+0x58],r8d
   1400365a0:	lea    edx,[rbx+rdx*2]
   1400365a3:	mov    DWORD PTR [rsp+0x44],edx
   1400365a7:	jmp    0x140036681
   1400365ac:	cmp    ebx,0x2a
   1400365af:	je     0x14003667e
   1400365b5:	cmp    ebx,0x46
   1400365b8:	je     0x140036681
   1400365be:	cmp    ebx,0x49
   1400365c1:	je     0x140036611
   1400365c3:	cmp    ebx,0x4c
   1400365c6:	je     0x14003660c
   1400365c8:	cmp    ebx,0x4e
   1400365cb:	je     0x140036681
   1400365d1:	cmp    ebx,0x68
   1400365d4:	je     0x140036604
   1400365d6:	mov    ecx,0x6c
   1400365db:	cmp    ebx,ecx
   1400365dd:	je     0x1400365e9
   1400365df:	cmp    ebx,0x77
   1400365e2:	je     0x1400365ff
   1400365e4:	jmp    0x140036679
   1400365e9:	lea    rax,[r10+0x2]
   1400365ed:	cmp    WORD PTR [rax],cx
   1400365f0:	jne    0x1400365fc
   1400365f2:	mov    r10,rax
   1400365f5:	mov    QWORD PTR [rsp+0x78],rax
   1400365fa:	jmp    0x14003662e
   1400365fc:	add    r12b,r9b
   1400365ff:	add    r14b,r9b
   140036602:	jmp    0x140036681
   140036604:	add    r12b,r15b
   140036607:	add    r14b,r15b
   14003660a:	jmp    0x140036681
   14003660c:	add    r12b,r9b
   14003660f:	jmp    0x140036681
   140036611:	movzx  eax,WORD PTR [r10+0x2]
   140036616:	cmp    ax,0x36
   14003661a:	jne    0x140036637
   14003661c:	lea    rcx,[r10+0x4]
   140036620:	cmp    WORD PTR [rcx],0x34
   140036624:	jne    0x140036637
   140036626:	mov    r10,rcx
   140036629:	mov    QWORD PTR [rsp+0x78],rcx
   14003662e:	add    r13d,r9d
   140036631:	mov    QWORD PTR [rbp-0x80],r11
   140036635:	jmp    0x140036681
   140036637:	cmp    ax,0x33
   14003663b:	jne    0x140036651
   14003663d:	lea    rcx,[r10+0x4]
   140036641:	cmp    WORD PTR [rcx],0x32
   140036645:	jne    0x140036651
   140036647:	mov    r10,rcx
   14003664a:	mov    QWORD PTR [rsp+0x78],rcx
   14003664f:	jmp    0x140036681
   140036651:	sub    ax,0x58
   140036655:	mov    ecx,0x20
   14003665a:	cmp    ax,cx
   14003665d:	ja     0x140036672
   14003665f:	movzx  eax,ax
   140036662:	movabs rcx,0x100821001
   14003666c:	bt     rcx,rax
   140036670:	jb     0x14003662e
   140036672:	add    r13d,r9d
   140036675:	mov    QWORD PTR [rbp-0x80],r11
   140036679:	add    sil,r9b
   14003667c:	jmp    0x140036681
   14003667e:	add    dil,r9b
   140036681:	test   sil,sil
   140036684:	je     0x14003655a
   14003668a:	mov    r15d,DWORD PTR [rbp-0x60]
   14003668e:	mov    BYTE PTR [rsp+0x34],dil
   140036693:	mov    edi,DWORD PTR [rsp+0x40]
   140036697:	mov    cl,BYTE PTR [rsp+0x34]
   14003669b:	mov    BYTE PTR [rsp+0x35],r12b
   1400366a0:	mov    r12,QWORD PTR [rbp-0x78]
   1400366a4:	mov    DWORD PTR [rsp+0x54],r13d
   1400366a9:	mov    r13d,DWORD PTR [rbp-0x64]
   1400366ad:	test   cl,cl
   1400366af:	jne    0x1400366cb
   1400366b1:	mov    rax,QWORD PTR [rbp-0x40]
   1400366b5:	mov    QWORD PTR [rbp-0x50],rax
   1400366b9:	add    rax,0x8
   1400366bd:	mov    QWORD PTR [rbp-0x40],rax
   1400366c1:	mov    rax,QWORD PTR [rax-0x8]
   1400366c5:	mov    QWORD PTR [rbp-0x78],rax
   1400366c9:	jmp    0x1400366cf
   1400366cb:	mov    QWORD PTR [rbp-0x78],r11
   1400366cf:	mov    bl,r11b
   1400366d2:	test   r14b,r14b
   1400366d5:	jne    0x1400366fc
   1400366d7:	movzx  eax,WORD PTR [r10]
   1400366db:	mov    r9d,0xffef
   1400366e1:	sub    ax,0x43
   1400366e5:	and    ax,r9w
   1400366e9:	mov    r9d,0x1
   1400366ef:	neg    ax
   1400366f2:	sbb    r14b,r14b
   1400366f5:	and    r14b,0x2
   1400366f9:	dec    r14b
   1400366fc:	movzx  esi,WORD PTR [r10]
   140036700:	mov    eax,0x6e
   140036705:	or     esi,0x20
   140036708:	mov    DWORD PTR [rbp-0x60],esi
   14003670b:	cmp    esi,eax
   14003670d:	je     0x140036777
   14003670f:	cmp    esi,0x63
   140036712:	je     0x140036735
   140036714:	cmp    esi,0x7b
   140036717:	je     0x140036735
   140036719:	mov    rdx,QWORD PTR [rsp+0x70]
   14003671e:	lea    rcx,[rsp+0x48]
   140036723:	call   0x140036360
   140036728:	movzx  edi,ax
   14003672b:	mov    eax,DWORD PTR [rsp+0x48]
   14003672f:	mov    DWORD PTR [rsp+0x30],eax
   140036733:	jmp    0x140036751
   140036735:	mov    eax,DWORD PTR [rsp+0x30]
   140036739:	mov    rcx,QWORD PTR [rsp+0x70]
   14003673e:	add    eax,r9d
   140036741:	mov    DWORD PTR [rsp+0x30],eax
   140036745:	mov    DWORD PTR [rsp+0x48],eax
   140036749:	call   0x140033270
   14003674e:	movzx  edi,ax
   140036751:	mov    eax,0xffff
   140036756:	mov    DWORD PTR [rsp+0x40],edi
   14003675a:	cmp    ax,di
   14003675d:	je     0x140037632
   140036763:	mov    edx,DWORD PTR [rsp+0x44]
   140036767:	mov    r10,QWORD PTR [rsp+0x78]
   14003676c:	mov    r8d,DWORD PTR [rsp+0x58]
   140036771:	mov    cl,BYTE PTR [rsp+0x34]
   140036775:	jmp    0x14003677c
   140036777:	mov    eax,0xffff
   14003677c:	test   r8d,r8d
   14003677f:	je     0x140036789
   140036781:	test   edx,edx
   140036783:	je     0x1400374ed
   140036789:	test   cl,cl
   14003678b:	jne    0x1400367dd
   14003678d:	lea    eax,[rsi-0x63]
   140036790:	test   eax,0xffffffe7
   140036795:	jne    0x1400367dd
   140036797:	cmp    esi,0x6b
   14003679a:	je     0x1400367dd
   14003679c:	mov    r9,QWORD PTR [rbp-0x50]
   1400367a0:	mov    rax,QWORD PTR [r9]
   1400367a3:	add    r9,0x8
   1400367a7:	mov    r12d,DWORD PTR [r9]
   1400367aa:	mov    r11,r9
   1400367ad:	mov    QWORD PTR [rbp-0x50],r9
   1400367b1:	add    r9,0x8
   1400367b5:	mov    QWORD PTR [rbp-0x78],rax
   1400367b9:	mov    QWORD PTR [rbp-0x40],r9
   1400367bd:	mov    r9d,0x1
   1400367c3:	cmp    r12,r9
   1400367c6:	jae    0x1400367e7
   1400367c8:	xor    r13d,r13d
   1400367cb:	test   r14b,r14b
   1400367ce:	jle    0x14003750e
   1400367d4:	mov    WORD PTR [rax],r13w
   1400367d8:	jmp    0x140037511
   1400367dd:	mov    r11,QWORD PTR [rbp-0x50]
   1400367e1:	mov    r9d,0x1
   1400367e7:	cmp    esi,0x6f
   1400367ea:	jg     0x140036c6e
   1400367f0:	je     0x1400371bb
   1400367f6:	cmp    esi,0x63
   1400367f9:	je     0x140036c4c
   1400367ff:	cmp    esi,0x64
   140036802:	je     0x1400371bb
   140036808:	jle    0x140036c97
   14003680e:	cmp    esi,0x67
   140036811:	jle    0x140036873
   140036813:	cmp    esi,0x69
   140036816:	je     0x140036856
   140036818:	mov    eax,0x6e
   14003681d:	cmp    esi,eax
   14003681f:	jne    0x140036c97
   140036825:	mov    r14d,DWORD PTR [rsp+0x30]
   14003682a:	xor    r13d,r13d
   14003682d:	mov    eax,r14d
   140036830:	test   cl,cl
   140036832:	jne    0x14003744b
   140036838:	mov    r12d,DWORD PTR [rsp+0x54]
   14003683d:	test   r12d,r12d
   140036840:	je     0x140037434
   140036846:	mov    rax,QWORD PTR [rbp-0x78]
   14003684a:	mov    rcx,QWORD PTR [rbp-0x80]
   14003684e:	mov    QWORD PTR [rax],rcx
   140036851:	jmp    0x14003744b
   140036856:	mov    esi,0x64
   14003685b:	mov    eax,0x2d
   140036860:	cmp    ax,di
   140036863:	jne    0x140036e30
   140036869:	mov    BYTE PTR [rsp+0x4c],r9b
   14003686e:	jmp    0x140036e3a
   140036873:	xor    r13d,r13d
   140036876:	mov    ebx,r13d
   140036879:	lea    ecx,[r13+0x2d]
   14003687d:	cmp    cx,di
   140036880:	jne    0x14003688e
   140036882:	mov    rax,QWORD PTR [rbp-0x70]
   140036886:	mov    rbx,r9
   140036889:	mov    WORD PTR [rax],cx
   14003688c:	jmp    0x140036898
   14003688e:	mov    eax,0x2b
   140036893:	cmp    ax,di
   140036896:	jne    0x1400368c3
   140036898:	mov    r12,QWORD PTR [rsp+0x70]
   14003689d:	mov    r15d,DWORD PTR [rsp+0x44]
   1400368a2:	mov    r14d,DWORD PTR [rsp+0x30]
   1400368a7:	mov    rcx,r12
   1400368aa:	sub    r15d,r9d
   1400368ad:	add    r14d,r9d
   1400368b0:	call   0x140033270
   1400368b5:	mov    r8d,DWORD PTR [rsp+0x58]
   1400368ba:	movzx  edi,ax
   1400368bd:	mov    DWORD PTR [rsp+0x40],edi
   1400368c1:	jmp    0x1400368d2
   1400368c3:	mov    r14d,DWORD PTR [rsp+0x30]
   1400368c8:	mov    r15d,DWORD PTR [rsp+0x44]
   1400368cd:	mov    r12,QWORD PTR [rsp+0x70]
   1400368d2:	test   r8d,r8d
   1400368d5:	mov    eax,0xffffffff
   1400368da:	cmove  r15d,eax
   1400368de:	mov    eax,0xff00
   1400368e3:	test   ax,di
   1400368e6:	jne    0x14003695a
   1400368e8:	mov    esi,0x1
   1400368ed:	movzx  eax,di
   1400368f0:	movzx  ecx,al
   1400368f3:	call   0x1400384d0
   1400368f8:	test   eax,eax
   1400368fa:	je     0x14003695a
   1400368fc:	mov    eax,r15d
   1400368ff:	sub    r15d,esi
   140036902:	test   eax,eax
   140036904:	je     0x14003695a
   140036906:	mov    rcx,QWORD PTR [rbp-0x70]
   14003690a:	add    DWORD PTR [rsp+0x64],esi
   14003690e:	movsx  eax,dil
   140036912:	mov    WORD PTR [rcx+rbx*2],ax
   140036916:	lea    rax,[rbp-0x68]
   14003691a:	add    rbx,rsi
   14003691d:	lea    r9,[rbp-0x10]
   140036921:	lea    r8,[rbp-0x70]
   140036925:	lea    rdx,[rbp-0x58]
   140036929:	mov    rcx,rbx
   14003692c:	mov    QWORD PTR [rsp+0x20],rax
   140036931:	call   0x1400362c4
   140036936:	test   eax,eax
   140036938:	je     0x14003751c
   14003693e:	mov    rcx,r12
   140036941:	add    r14d,esi
   140036944:	call   0x140033270
   140036949:	movzx  edi,ax
   14003694c:	mov    eax,0xff00
   140036951:	mov    DWORD PTR [rsp+0x40],edi
   140036955:	test   ax,di
   140036958:	je     0x1400368ed
   14003695a:	mov    rax,QWORD PTR [rbp-0x38]
   14003695e:	mov    edx,0x1
   140036963:	mov    rcx,QWORD PTR [rax+0xf0]
   14003696a:	mov    rax,QWORD PTR [rcx+0x58]
   14003696e:	movzx  esi,WORD PTR [rax]
   140036971:	movsx  eax,dil
   140036975:	cmp    esi,eax
   140036977:	jne    0x140036a40
   14003697d:	mov    eax,r15d
   140036980:	sub    r15d,edx
   140036983:	test   eax,eax
   140036985:	je     0x140036a40
   14003698b:	mov    rcx,r12
   14003698e:	add    r14d,edx
   140036991:	call   0x140033270
   140036996:	lea    r9,[rbp-0x10]
   14003699a:	lea    r8,[rbp-0x70]
   14003699e:	movzx  edi,ax
   1400369a1:	mov    rax,QWORD PTR [rbp-0x70]
   1400369a5:	lea    rdx,[rbp-0x58]
   1400369a9:	mov    WORD PTR [rax+rbx*2],si
   1400369ad:	lea    rax,[rbp-0x68]
   1400369b1:	mov    esi,0x1
   1400369b6:	add    rbx,rsi
   1400369b9:	mov    DWORD PTR [rsp+0x40],edi
   1400369bd:	mov    QWORD PTR [rsp+0x20],rax
   1400369c2:	mov    rcx,rbx
   1400369c5:	call   0x1400362c4
   1400369ca:	test   eax,eax
   1400369cc:	je     0x14003751c
   1400369d2:	jmp    0x140036a33
   1400369d4:	movzx  eax,di
   1400369d7:	movzx  ecx,al
   1400369da:	call   0x1400384d0
   1400369df:	test   eax,eax
   1400369e1:	je     0x140036a3d
   1400369e3:	mov    eax,r15d
   1400369e6:	sub    r15d,esi
   1400369e9:	test   eax,eax
   1400369eb:	je     0x140036a3d
   1400369ed:	mov    rax,QWORD PTR [rbp-0x70]
   1400369f1:	add    DWORD PTR [rsp+0x64],esi
   1400369f5:	lea    r9,[rbp-0x10]
   1400369f9:	mov    WORD PTR [rax+rbx*2],di
   1400369fd:	lea    rax,[rbp-0x68]
   140036a01:	add    rbx,rsi
   140036a04:	lea    r8,[rbp-0x70]
   140036a08:	lea    rdx,[rbp-0x58]
   140036a0c:	mov    rcx,rbx
   140036a0f:	mov    QWORD PTR [rsp+0x20],rax
   140036a14:	call   0x1400362c4
   140036a19:	test   eax,eax
   140036a1b:	je     0x14003751c
   140036a21:	mov    rcx,r12
   140036a24:	add    r14d,esi
   140036a27:	call   0x140033270
   140036a2c:	movzx  edi,ax
   140036a2f:	mov    DWORD PTR [rsp+0x40],edi
   140036a33:	mov    eax,0xff00
   140036a38:	test   ax,di
   140036a3b:	je     0x1400369d4
   140036a3d:	mov    rdx,rsi
   140036a40:	mov    esi,DWORD PTR [rsp+0x64]
   140036a44:	test   esi,esi
   140036a46:	je     0x140036b7d
   140036a4c:	lea    eax,[rdi-0x45]
   140036a4f:	mov    ecx,0xffdf
   140036a54:	test   cx,ax
   140036a57:	jne    0x140036b7d
   140036a5d:	mov    eax,r15d
   140036a60:	sub    r15d,edx
   140036a63:	test   eax,eax
   140036a65:	je     0x140036b7d
   140036a6b:	mov    rax,QWORD PTR [rbp-0x70]
   140036a6f:	mov    ecx,0x65
   140036a74:	lea    r9,[rbp-0x10]
   140036a78:	mov    WORD PTR [rax+rbx*2],cx
   140036a7c:	add    rbx,rdx
   140036a7f:	lea    rax,[rbp-0x68]
   140036a83:	lea    rdx,[rbp-0x58]
   140036a87:	lea    r8,[rbp-0x70]
   140036a8b:	mov    rcx,rbx
   140036a8e:	mov    QWORD PTR [rsp+0x20],rax
   140036a93:	call   0x1400362c4
   140036a98:	test   eax,eax
   140036a9a:	je     0x14003751c
   140036aa0:	mov    rcx,r12
   140036aa3:	inc    r14d
   140036aa6:	call   0x140033270
   140036aab:	mov    ecx,0x2d
   140036ab0:	movzx  edi,ax
   140036ab3:	mov    DWORD PTR [rsp+0x40],edi
   140036ab7:	cmp    cx,ax
   140036aba:	jne    0x140036aee
   140036abc:	mov    rax,QWORD PTR [rbp-0x70]
   140036ac0:	lea    r9,[rbp-0x10]
   140036ac4:	lea    r8,[rbp-0x70]
   140036ac8:	mov    WORD PTR [rax+rbx*2],cx
   140036acc:	lea    rax,[rbp-0x68]
   140036ad0:	inc    rbx
   140036ad3:	lea    rdx,[rbp-0x58]
   140036ad7:	mov    rcx,rbx
   140036ada:	mov    QWORD PTR [rsp+0x20],rax
   140036adf:	call   0x1400362c4
   140036ae4:	test   eax,eax
   140036ae6:	je     0x14003751c
   140036aec:	jmp    0x140036af8
   140036aee:	mov    eax,0x2b
   140036af3:	cmp    ax,di
   140036af6:	jne    0x140036b73
   140036af8:	mov    eax,r15d
   140036afb:	mov    ecx,0x1
   140036b00:	sub    r15d,ecx
   140036b03:	test   eax,eax
   140036b05:	jne    0x140036b0c
   140036b07:	mov    r15d,r13d
   140036b0a:	jmp    0x140036b73
   140036b0c:	add    r14d,ecx
   140036b0f:	jmp    0x140036b64
   140036b11:	movzx  eax,di
   140036b14:	movzx  ecx,al
   140036b17:	call   0x1400384d0
   140036b1c:	test   eax,eax
   140036b1e:	je     0x140036b7d
   140036b20:	mov    eax,r15d
   140036b23:	mov    ecx,0x1
   140036b28:	sub    r15d,ecx
   140036b2b:	test   eax,eax
   140036b2d:	je     0x140036b7d
   140036b2f:	mov    rax,QWORD PTR [rbp-0x70]
   140036b33:	add    esi,ecx
   140036b35:	lea    r9,[rbp-0x10]
   140036b39:	mov    WORD PTR [rax+rbx*2],di
   140036b3d:	add    rbx,rcx
   140036b40:	lea    rax,[rbp-0x68]
   140036b44:	lea    r8,[rbp-0x70]
   140036b48:	lea    rdx,[rbp-0x58]
   140036b4c:	mov    rcx,rbx
   140036b4f:	mov    QWORD PTR [rsp+0x20],rax
   140036b54:	call   0x1400362c4
   140036b59:	test   eax,eax
   140036b5b:	je     0x14003751c
   140036b61:	inc    r14d
   140036b64:	mov    rcx,r12
   140036b67:	call   0x140033270
   140036b6c:	movzx  edi,ax
   140036b6f:	mov    DWORD PTR [rsp+0x40],edi
   140036b73:	mov    eax,0xff00
   140036b78:	test   ax,di
   140036b7b:	je     0x140036b11
   140036b7d:	mov    eax,0x1
   140036b82:	mov    ecx,0xffff
   140036b87:	sub    r14d,eax
   140036b8a:	mov    DWORD PTR [rsp+0x30],r14d
   140036b8f:	mov    DWORD PTR [rsp+0x48],r14d
   140036b94:	cmp    cx,di
   140036b97:	je     0x140036ba9
   140036b99:	mov    rdx,r12
   140036b9c:	movzx  ecx,di
   140036b9f:	call   0x1400382cc
   140036ba4:	mov    eax,0x1
   140036ba9:	test   esi,esi
   140036bab:	je     0x14003751c
   140036bb1:	cmp    BYTE PTR [rsp+0x34],r13b
   140036bb6:	jne    0x14003744b
   140036bbc:	mov    r15d,DWORD PTR [rsp+0x38]
   140036bc1:	mov    r12,QWORD PTR [rbp-0x70]
   140036bc5:	add    r15d,eax
   140036bc8:	mov    rax,QWORD PTR [rbp-0x58]
   140036bcc:	mov    WORD PTR [r12+rbx*2],r13w
   140036bd1:	lea    rbx,[rax*2+0x2]
   140036bd9:	mov    DWORD PTR [rsp+0x38],r15d
   140036bde:	mov    rcx,rbx
   140036be1:	call   0x1400297c4
   140036be6:	mov    rsi,rax
   140036be9:	test   rax,rax
   140036bec:	je     0x140037521
   140036bf2:	lea    rax,[rbx-0x1]
   140036bf6:	mov    r9,r12
   140036bf9:	mov    r8,rbx
   140036bfc:	mov    rdx,rsi
   140036bff:	xor    ecx,ecx
   140036c01:	mov    QWORD PTR [rsp+0x20],rax
   140036c06:	call   0x1400389e8
   140036c0b:	cmp    eax,0x16
   140036c0e:	je     0x1400376a1
   140036c14:	cmp    eax,0x22
   140036c17:	je     0x1400376a1
   140036c1d:	mov    rcx,QWORD PTR [rip+0x235d4]        # 0x14005a1f8
   140036c24:	movsx  ebx,BYTE PTR [rsp+0x35]
   140036c29:	call   QWORD PTR [rip+0xa7d1]        # 0x140041400
   140036c2f:	mov    rdx,QWORD PTR [rbp-0x78]
   140036c33:	lea    r9,[rbp-0x38]
   140036c37:	lea    ecx,[rbx-0x1]
   140036c3a:	mov    r8,rsi
   140036c3d:	call   rax
   140036c3f:	mov    rcx,rsi
   140036c42:	call   0x1400273dc
   140036c47:	jmp    0x14003744b
   140036c4c:	test   r8d,r8d
   140036c4f:	jne    0x140036c5d
   140036c51:	add    edx,r9d
   140036c54:	mov    DWORD PTR [rsp+0x58],r9d
   140036c59:	mov    DWORD PTR [rsp+0x44],edx
   140036c5d:	test   r14b,r14b
   140036c60:	jle    0x140036fdc
   140036c66:	mov    r13b,r9b
   140036c69:	jmp    0x140036fdc
   140036c6e:	cmp    esi,0x70
   140036c71:	je     0x1400371a5
   140036c77:	cmp    esi,0x73
   140036c7a:	je     0x140036fd1
   140036c80:	cmp    esi,0x75
   140036c83:	je     0x1400371bb
   140036c89:	cmp    esi,0x78
   140036c8c:	je     0x14003685b
   140036c92:	cmp    esi,0x7b
   140036c95:	je     0x140036cc4
   140036c97:	cmp    WORD PTR [r10],di
   140036c9b:	jne    0x140037580
   140036ca1:	mov    al,BYTE PTR [rsp+0x3c]
   140036ca5:	mov    r14d,DWORD PTR [rsp+0x30]
   140036caa:	xor    r13d,r13d
   140036cad:	dec    al
   140036caf:	mov    BYTE PTR [rsp+0x3c],al
   140036cb3:	test   cl,cl
   140036cb5:	jne    0x14003744b
   140036cbb:	mov    QWORD PTR [rbp-0x40],r11
   140036cbf:	jmp    0x14003744b
   140036cc4:	test   r14b,r14b
   140036cc7:	movzx  r13d,r13b
   140036ccb:	mov    eax,0x5e
   140036cd0:	cmovg  r13d,r9d
   140036cd4:	add    r10,0x2
   140036cd8:	mov    DWORD PTR [rbp-0x64],r13d
   140036cdc:	mov    QWORD PTR [rsp+0x78],r10
   140036ce1:	cmp    ax,WORD PTR [r10]
   140036ce5:	jne    0x140036cf5
   140036ce7:	add    r10,0x2
   140036ceb:	mov    BYTE PTR [rsp+0x5c],0xff
   140036cf0:	mov    QWORD PTR [rsp+0x78],r10
   140036cf5:	mov    rbx,QWORD PTR [rsp+0x68]
   140036cfa:	xor    r14d,r14d
   140036cfd:	test   rbx,rbx
   140036d00:	jne    0x140036d24
   140036d02:	mov    ecx,0x2000
   140036d07:	call   0x1400297c4
   140036d0c:	mov    rbx,rax
   140036d0f:	mov    QWORD PTR [rsp+0x68],rax
   140036d14:	test   rax,rax
   140036d17:	je     0x140037619
   140036d1d:	lea    eax,[r14+0x1]
   140036d21:	mov    DWORD PTR [rbp-0x48],eax
   140036d24:	xor    edx,edx
   140036d26:	mov    r8d,0x2000
   140036d2c:	mov    rcx,rbx
   140036d2f:	call   0x14002bb90
   140036d34:	mov    r10,QWORD PTR [rsp+0x78]
   140036d39:	mov    edx,0x5d
   140036d3e:	cmp    dx,WORD PTR [r10]
   140036d42:	jne    0x140036d51
   140036d44:	lea    eax,[rdx-0x3d]
   140036d47:	mov    r15d,edx
   140036d4a:	add    r10,0x2
   140036d4e:	mov    BYTE PTR [rbx+0xb],al
   140036d51:	movzx  eax,WORD PTR [r10]
   140036d55:	mov    r9d,0x1
   140036d5b:	cmp    dx,ax
   140036d5e:	je     0x140036e1c
   140036d64:	lea    esi,[r9+0x6]
   140036d68:	lea    r13d,[r9+0x2c]
   140036d6c:	add    r10,0x2
   140036d70:	cmp    r13w,ax
   140036d74:	jne    0x140036de7
   140036d76:	test   r15w,r15w
   140036d7a:	je     0x140036de7
   140036d7c:	movzx  ecx,WORD PTR [r10]
   140036d80:	cmp    dx,cx
   140036d83:	je     0x140036de7
   140036d85:	add    r10,0x2
   140036d89:	cmp    r15w,cx
   140036d8d:	jae    0x140036d95
   140036d8f:	movzx  r9d,cx
   140036d93:	jmp    0x140036d9d
   140036d95:	movzx  r9d,r15w
   140036d99:	movzx  r15d,cx
   140036d9d:	movzx  r8d,r9w
   140036da1:	mov    r11d,0x1
   140036da7:	movzx  ecx,r15w
   140036dab:	mov    eax,r11d
   140036dae:	cmp    ecx,r8d
   140036db1:	jge    0x140036dc8
   140036db3:	movzx  edx,r15w
   140036db7:	and    ecx,esi
   140036db9:	shr    rdx,0x3
   140036dbd:	shl    al,cl
   140036dbf:	or     BYTE PTR [rdx+rbx*1],al
   140036dc2:	add    r15w,r11w
   140036dc6:	jmp    0x140036da7
   140036dc8:	and    r8d,esi
   140036dcb:	movzx  edx,r9w
   140036dcf:	movzx  r15d,r14w
   140036dd3:	mov    cl,r8b
   140036dd6:	shr    rdx,0x3
   140036dda:	mov    r9d,0x1
   140036de0:	shl    al,cl
   140036de2:	or     BYTE PTR [rdx+rbx*1],al
   140036de5:	jmp    0x140036e03
   140036de7:	movzx  r8d,ax
   140036deb:	movzx  r15d,ax
   140036def:	movzx  eax,ax
   140036df2:	and    eax,esi
   140036df4:	mov    edx,r9d
   140036df7:	shr    r8,0x3
   140036dfb:	mov    cl,al
   140036dfd:	shl    dl,cl
   140036dff:	or     BYTE PTR [r8+rbx*1],dl
   140036e03:	movzx  eax,WORD PTR [r10]
   140036e07:	mov    edx,0x5d
   140036e0c:	cmp    dx,ax
   140036e0f:	jne    0x140036d6c
   140036e15:	mov    esi,DWORD PTR [rbp-0x60]
   140036e18:	mov    r13d,DWORD PTR [rbp-0x64]
   140036e1c:	cmp    WORD PTR [r10],r14w
   140036e20:	je     0x140037604
   140036e26:	mov    QWORD PTR [rsp+0x78],r10
   140036e2b:	jmp    0x140036fdc
   140036e30:	mov    eax,0x2b
   140036e35:	cmp    ax,di
   140036e38:	jne    0x140036e4b
   140036e3a:	sub    edx,r9d
   140036e3d:	mov    DWORD PTR [rsp+0x44],edx
   140036e41:	jne    0x140036ec0
   140036e43:	test   r8d,r8d
   140036e46:	je     0x140036ec0
   140036e48:	mov    bl,r9b
   140036e4b:	mov    r15,QWORD PTR [rsp+0x70]
   140036e50:	mov    r14d,DWORD PTR [rsp+0x30]
   140036e55:	mov    eax,0x30
   140036e5a:	cmp    ax,di
   140036e5d:	jne    0x140036f5b
   140036e63:	lea    r12d,[rax-0x2f]
   140036e67:	mov    rcx,r15
   140036e6a:	add    r14d,r12d
   140036e6d:	mov    DWORD PTR [rsp+0x30],r14d
   140036e72:	mov    DWORD PTR [rsp+0x48],r14d
   140036e77:	call   0x140033270
   140036e7c:	movzx  edi,ax
   140036e7f:	mov    ecx,0xffdf
   140036e84:	lea    eax,[rdi-0x58]
   140036e87:	mov    DWORD PTR [rsp+0x40],edi
   140036e8b:	test   cx,ax
   140036e8e:	je     0x140036f1f
   140036e94:	mov    r13d,r12d
   140036e97:	cmp    esi,0x78
   140036e9a:	je     0x140036eeb
   140036e9c:	mov    r15d,DWORD PTR [rsp+0x44]
   140036ea1:	xor    ecx,ecx
   140036ea3:	cmp    DWORD PTR [rsp+0x58],ecx
   140036ea7:	je     0x140036eb1
   140036ea9:	sub    r15d,r12d
   140036eac:	jne    0x140036eb1
   140036eae:	add    bl,r12b
   140036eb1:	mov    r12d,DWORD PTR [rsp+0x54]
   140036eb6:	mov    esi,0x6f
   140036ebb:	jmp    0x140036f6a
   140036ec0:	mov    r14d,DWORD PTR [rsp+0x30]
   140036ec5:	mov    r15,QWORD PTR [rsp+0x70]
   140036eca:	add    r14d,r9d
   140036ecd:	mov    rcx,r15
   140036ed0:	mov    DWORD PTR [rsp+0x30],r14d
   140036ed5:	mov    DWORD PTR [rsp+0x48],r14d
   140036eda:	call   0x140033270
   140036edf:	movzx  edi,ax
   140036ee2:	mov    DWORD PTR [rsp+0x40],edi
   140036ee6:	jmp    0x140036e55
   140036eeb:	sub    r14d,r12d
   140036eee:	mov    ecx,0xffff
   140036ef3:	mov    DWORD PTR [rsp+0x30],r14d
   140036ef8:	mov    DWORD PTR [rsp+0x48],r14d
   140036efd:	cmp    cx,di
   140036f00:	je     0x140036f0d
   140036f02:	mov    rdx,r15
   140036f05:	movzx  ecx,di
   140036f08:	call   0x1400382cc
   140036f0d:	mov    r12d,DWORD PTR [rsp+0x54]
   140036f12:	mov    eax,0x30
   140036f17:	mov    edi,eax
   140036f19:	mov    DWORD PTR [rsp+0x40],eax
   140036f1d:	jmp    0x140036f65
   140036f1f:	add    r14d,r12d
   140036f22:	mov    rcx,r15
   140036f25:	mov    DWORD PTR [rsp+0x30],r14d
   140036f2a:	mov    DWORD PTR [rsp+0x48],r14d
   140036f2f:	call   0x140033270
   140036f34:	xor    ecx,ecx
   140036f36:	movzx  edi,ax
   140036f39:	mov    DWORD PTR [rsp+0x40],edi
   140036f3d:	cmp    DWORD PTR [rsp+0x58],ecx
   140036f41:	je     0x140036f56
   140036f43:	mov    eax,DWORD PTR [rsp+0x44]
   140036f47:	sub    eax,0x2
   140036f4a:	mov    DWORD PTR [rsp+0x44],eax
   140036f4e:	cmp    eax,r12d
   140036f51:	jge    0x140036f56
   140036f53:	add    bl,r12b
   140036f56:	mov    esi,0x78
   140036f5b:	mov    r12d,DWORD PTR [rsp+0x54]
   140036f60:	mov    r13d,DWORD PTR [rsp+0x64]
   140036f65:	mov    r15d,DWORD PTR [rsp+0x44]
   140036f6a:	mov    r14d,DWORD PTR [rsp+0x30]
   140036f6f:	test   r12d,r12d
   140036f72:	je     0x1400372f9
   140036f78:	test   bl,bl
   140036f7a:	mov    rbx,QWORD PTR [rbp-0x80]
   140036f7e:	jne    0x1400372e1
   140036f84:	lea    eax,[rsi-0x70]
   140036f87:	test   eax,0xfffffff7
   140036f8c:	mov    eax,0xff00
   140036f91:	je     0x140037238
   140036f97:	test   ax,di
   140036f9a:	jne    0x1400372b9
   140036fa0:	movzx  eax,di
   140036fa3:	movzx  ecx,al
   140036fa6:	call   0x1400384d0
   140036fab:	test   eax,eax
   140036fad:	je     0x1400372b9
   140036fb3:	cmp    esi,0x6f
   140036fb6:	jne    0x14003722f
   140036fbc:	lea    eax,[rsi-0x37]
   140036fbf:	cmp    ax,di
   140036fc2:	jbe    0x1400372b9
   140036fc8:	shl    rbx,0x3
   140036fcc:	jmp    0x140037272
   140036fd1:	movzx  r13d,r13b
   140036fd5:	test   r14b,r14b
   140036fd8:	cmovg  r13d,r9d
   140036fdc:	mov    r14d,DWORD PTR [rsp+0x30]
   140036fe1:	mov    rbx,QWORD PTR [rbp-0x78]
   140036fe5:	mov    r8d,0x1
   140036feb:	sub    r14d,r8d
   140036fee:	mov    r9d,0xffff
   140036ff4:	mov    DWORD PTR [rsp+0x30],r14d
   140036ff9:	mov    DWORD PTR [rsp+0x48],r14d
   140036ffe:	cmp    r9w,di
   140037002:	je     0x140037017
   140037004:	mov    rdx,QWORD PTR [rsp+0x70]
   140037009:	movzx  ecx,di
   14003700c:	call   0x1400382cc
   140037011:	mov    r8d,0x1
   140037017:	cmp    esi,0x63
   14003701a:	je     0x14003701f
   14003701c:	sub    r12,r8
   14003701f:	mov    r15b,BYTE PTR [rsp+0x5c]
   140037024:	xor    edx,edx
   140037026:	cmp    DWORD PTR [rsp+0x58],edx
   14003702a:	je     0x140037041
   14003702c:	mov    ecx,DWORD PTR [rsp+0x44]
   140037030:	mov    eax,ecx
   140037032:	sub    ecx,r8d
   140037035:	mov    DWORD PTR [rsp+0x44],ecx
   140037039:	test   eax,eax
   14003703b:	je     0x140037164
   140037041:	mov    rcx,QWORD PTR [rsp+0x70]
   140037046:	add    r14d,r8d
   140037049:	mov    DWORD PTR [rsp+0x30],r14d
   14003704e:	mov    DWORD PTR [rsp+0x48],r14d
   140037053:	call   0x140033270
   140037058:	mov    r9d,0xffff
   14003705e:	movzx  edi,ax
   140037061:	mov    DWORD PTR [rsp+0x40],edi
   140037065:	cmp    r9w,ax
   140037069:	je     0x140037136
   14003706f:	cmp    esi,0x63
   140037072:	je     0x1400370b8
   140037074:	cmp    esi,0x73
   140037077:	jne    0x14003708e
   140037079:	lea    eax,[rdi-0x9]
   14003707c:	cmp    ax,0x4
   140037080:	jbe    0x140037136
   140037086:	lea    eax,[rsi-0x53]
   140037089:	cmp    di,ax
   14003708c:	jne    0x1400370b8
   14003708e:	cmp    esi,0x7b
   140037091:	jne    0x140037136
   140037097:	mov    rcx,QWORD PTR [rsp+0x68]
   14003709c:	movzx  eax,di
   14003709f:	movzx  edx,di
   1400370a2:	shr    rax,0x3
   1400370a6:	and    edx,0x7
   1400370a9:	movsx  ecx,BYTE PTR [rax+rcx*1]
   1400370ad:	movsx  eax,r15b
   1400370b1:	xor    ecx,eax
   1400370b3:	bt     ecx,edx
   1400370b6:	jae    0x140037136
   1400370b8:	xor    edx,edx
   1400370ba:	cmp    BYTE PTR [rsp+0x34],dl
   1400370be:	jne    0x140037127
   1400370c0:	test   r12,r12
   1400370c3:	je     0x1400375aa
   1400370c9:	test   r13b,r13b
   1400370cc:	je     0x1400370e9
   1400370ce:	mov    rcx,QWORD PTR [rbp-0x78]
   1400370d2:	lea    r8d,[rdx+0x1]
   1400370d6:	mov    WORD PTR [rcx],di
   1400370d9:	add    rcx,0x2
   1400370dd:	sub    r12,r8
   1400370e0:	mov    QWORD PTR [rbp-0x78],rcx
   1400370e4:	jmp    0x140037026
   1400370e9:	mov    DWORD PTR [rbp-0x64],edx
   1400370ec:	mov    rdx,QWORD PTR [rbp-0x78]
   1400370f0:	lea    rcx,[rbp-0x64]
   1400370f4:	movzx  r9d,di
   1400370f8:	mov    r8,r12
   1400370fb:	call   0x1400311b0
   140037100:	cmp    eax,0x22
   140037103:	je     0x1400375aa
   140037109:	movsxd rax,DWORD PTR [rbp-0x64]
   14003710d:	xor    edx,edx
   14003710f:	lea    r8d,[rdx+0x1]
   140037113:	test   eax,eax
   140037115:	jle    0x140037026
   14003711b:	add    QWORD PTR [rbp-0x78],rax
   14003711f:	sub    r12,rax
   140037122:	jmp    0x140037026
   140037127:	add    rbx,0x2
   14003712b:	mov    r8d,0x1
   140037131:	jmp    0x140037026
   140037136:	mov    r8d,0x1
   14003713c:	sub    r14d,r8d
   14003713f:	mov    DWORD PTR [rsp+0x30],r14d
   140037144:	mov    DWORD PTR [rsp+0x48],r14d
   140037149:	cmp    r9w,di
   14003714d:	je     0x140037162
   14003714f:	mov    rdx,QWORD PTR [rsp+0x70]
   140037154:	movzx  ecx,di
   140037157:	call   0x1400382cc
   14003715c:	mov    r8d,0x1
   140037162:	xor    edx,edx
   140037164:	mov    rax,QWORD PTR [rbp-0x78]
   140037168:	cmp    rbx,rax
   14003716b:	je     0x1400374ff
   140037171:	cmp    BYTE PTR [rsp+0x34],dl
   140037175:	jne    0x140037448
   14003717b:	add    DWORD PTR [rsp+0x38],r8d
   140037180:	cmp    esi,0x63
   140037183:	je     0x140037448
   140037189:	test   r13b,r13b
   14003718c:	je     0x14003719a
   14003718e:	xor    r13d,r13d
   140037191:	mov    WORD PTR [rax],r13w
   140037195:	jmp    0x14003744b
   14003719a:	xor    r13d,r13d
   14003719d:	mov    BYTE PTR [rax],r13b
   1400371a0:	jmp    0x14003744b
   1400371a5:	mov    r12d,DWORD PTR [rsp+0x54]
   1400371aa:	mov    BYTE PTR [rsp+0x35],r9b
   1400371af:	add    r12d,r9d
   1400371b2:	xor    r14d,r14d
   1400371b5:	mov    QWORD PTR [rbp-0x80],r14
   1400371b9:	jmp    0x1400371c0
   1400371bb:	mov    r12d,DWORD PTR [rsp+0x54]
   1400371c0:	mov    eax,0x2d
   1400371c5:	cmp    ax,di
   1400371c8:	jne    0x1400371d1
   1400371ca:	mov    BYTE PTR [rsp+0x4c],r9b
   1400371cf:	jmp    0x1400371df
   1400371d1:	mov    eax,0x2b
   1400371d6:	cmp    ax,di
   1400371d9:	jne    0x140036f60
   1400371df:	sub    edx,r9d
   1400371e2:	mov    DWORD PTR [rsp+0x44],edx
   1400371e6:	jne    0x1400371fd
   1400371e8:	test   r8d,r8d
   1400371eb:	je     0x1400371fd
   1400371ed:	mov    r13d,DWORD PTR [rsp+0x64]
   1400371f2:	mov    bl,r9b
   1400371f5:	mov    r15d,edx
   1400371f8:	jmp    0x140036f6a
   1400371fd:	mov    r14d,DWORD PTR [rsp+0x30]
   140037202:	mov    rcx,QWORD PTR [rsp+0x70]
   140037207:	add    r14d,r9d
   14003720a:	mov    DWORD PTR [rsp+0x30],r14d
   14003720f:	mov    DWORD PTR [rsp+0x48],r14d
   140037214:	call   0x140033270
   140037219:	mov    r15d,DWORD PTR [rsp+0x44]
   14003721e:	mov    r13d,DWORD PTR [rsp+0x64]
   140037223:	movzx  edi,ax
   140037226:	mov    DWORD PTR [rsp+0x40],edi
   14003722a:	jmp    0x140036f6f
   14003722f:	lea    rbx,[rbx+rbx*4]
   140037233:	add    rbx,rbx
   140037236:	jmp    0x140037272
   140037238:	test   ax,di
   14003723b:	jne    0x1400372b9
   14003723d:	movzx  eax,di
   140037240:	movzx  ebx,al
   140037243:	mov    ecx,ebx
   140037245:	call   0x14003854c
   14003724a:	test   eax,eax
   14003724c:	je     0x1400372b9
   14003724e:	shl    QWORD PTR [rbp-0x80],0x4
   140037253:	mov    ecx,ebx
   140037255:	call   0x1400384d0
   14003725a:	mov    rbx,QWORD PTR [rbp-0x80]
   14003725e:	test   eax,eax
   140037260:	jne    0x140037272
   140037262:	mov    eax,0xffdf
   140037267:	and    di,ax
   14003726a:	sub    di,0x7
   14003726e:	mov    DWORD PTR [rsp+0x40],edi
   140037272:	movzx  eax,di
   140037275:	mov    ecx,0x1
   14003727a:	sub    eax,0x30
   14003727d:	add    r13d,ecx
   140037280:	cdqe   
   140037282:	add    rbx,rax
   140037285:	xor    eax,eax
   140037287:	mov    QWORD PTR [rbp-0x80],rbx
   14003728b:	cmp    DWORD PTR [rsp+0x58],eax
   14003728f:	je     0x140037296
   140037291:	sub    r15d,ecx
   140037294:	je     0x1400372e1
   140037296:	add    r14d,ecx
   140037299:	mov    rcx,QWORD PTR [rsp+0x70]
   14003729e:	mov    DWORD PTR [rsp+0x30],r14d
   1400372a3:	mov    DWORD PTR [rsp+0x48],r14d
   1400372a8:	call   0x140033270
   1400372ad:	movzx  edi,ax
   1400372b0:	mov    DWORD PTR [rsp+0x40],edi
   1400372b4:	jmp    0x140036f84
   1400372b9:	dec    r14d
   1400372bc:	mov    eax,0xffff
   1400372c1:	mov    DWORD PTR [rsp+0x30],r14d
   1400372c6:	mov    DWORD PTR [rsp+0x48],r14d
   1400372cb:	cmp    ax,di
   1400372ce:	je     0x1400372dd
   1400372d0:	mov    rdx,QWORD PTR [rsp+0x70]
   1400372d5:	movzx  ecx,di
   1400372d8:	call   0x1400382cc
   1400372dd:	mov    rbx,QWORD PTR [rbp-0x80]
   1400372e1:	xor    ecx,ecx
   1400372e3:	cmp    BYTE PTR [rsp+0x4c],cl
   1400372e7:	je     0x140037408
   1400372ed:	neg    rbx
   1400372f0:	mov    QWORD PTR [rbp-0x80],rbx
   1400372f4:	jmp    0x140037408
   1400372f9:	test   bl,bl
   1400372fb:	mov    ebx,DWORD PTR [rsp+0x60]
   1400372ff:	jne    0x1400373fa
   140037305:	lea    eax,[rsi-0x70]
   140037308:	test   eax,0xfffffff7
   14003730d:	mov    eax,0xff00
   140037312:	je     0x14003734e
   140037314:	test   ax,di
   140037317:	jne    0x1400373d2
   14003731d:	movzx  eax,di
   140037320:	movzx  ecx,al
   140037323:	call   0x1400384d0
   140037328:	test   eax,eax
   14003732a:	je     0x1400373d2
   140037330:	cmp    esi,0x6f
   140037333:	jne    0x140037346
   140037335:	lea    eax,[rsi-0x37]
   140037338:	cmp    ax,di
   14003733b:	jbe    0x1400373d2
   140037341:	shl    ebx,0x3
   140037344:	jmp    0x14003738e
   140037346:	lea    eax,[rbx+rbx*4]
   140037349:	lea    ebx,[rax+rax*1]
   14003734c:	jmp    0x14003738e
   14003734e:	test   ax,di
   140037351:	jne    0x1400373d2
   140037353:	movzx  eax,di
   140037356:	movzx  ebx,al
   140037359:	mov    ecx,ebx
   14003735b:	call   0x14003854c
   140037360:	test   eax,eax
   140037362:	je     0x1400373d2
   140037364:	mov    eax,DWORD PTR [rsp+0x60]
   140037368:	mov    ecx,ebx
   14003736a:	shl    eax,0x4
   14003736d:	mov    DWORD PTR [rsp+0x60],eax
   140037371:	call   0x1400384d0
   140037376:	mov    ebx,DWORD PTR [rsp+0x60]
   14003737a:	test   eax,eax
   14003737c:	jne    0x14003738e
   14003737e:	mov    eax,0xffdf
   140037383:	and    di,ax
   140037386:	sub    di,0x7
   14003738a:	mov    DWORD PTR [rsp+0x40],edi
   14003738e:	movzx  eax,di
   140037391:	add    ebx,0xffffffd0
   140037394:	mov    ecx,0x1
   140037399:	add    ebx,eax
   14003739b:	xor    eax,eax
   14003739d:	add    r13d,ecx
   1400373a0:	mov    DWORD PTR [rsp+0x60],ebx
   1400373a4:	cmp    DWORD PTR [rsp+0x58],eax
   1400373a8:	je     0x1400373af
   1400373aa:	sub    r15d,ecx
   1400373ad:	je     0x1400373fa
   1400373af:	add    r14d,ecx
   1400373b2:	mov    rcx,QWORD PTR [rsp+0x70]
   1400373b7:	mov    DWORD PTR [rsp+0x30],r14d
   1400373bc:	mov    DWORD PTR [rsp+0x48],r14d
   1400373c1:	call   0x140033270
   1400373c6:	movzx  edi,ax
   1400373c9:	mov    DWORD PTR [rsp+0x40],edi
   1400373cd:	jmp    0x140037305
   1400373d2:	dec    r14d
   1400373d5:	mov    eax,0xffff
   1400373da:	mov    DWORD PTR [rsp+0x30],r14d
   1400373df:	mov    DWORD PTR [rsp+0x48],r14d
   1400373e4:	cmp    ax,di
   1400373e7:	je     0x1400373f6
   1400373e9:	mov    rdx,QWORD PTR [rsp+0x70]
   1400373ee:	movzx  ecx,di
   1400373f1:	call   0x1400382cc
   1400373f6:	mov    ebx,DWORD PTR [rsp+0x60]
   1400373fa:	xor    ecx,ecx
   1400373fc:	cmp    BYTE PTR [rsp+0x4c],cl
   140037400:	je     0x140037408
   140037402:	neg    ebx
   140037404:	mov    DWORD PTR [rsp+0x60],ebx
   140037408:	cmp    esi,0x46
   14003740b:	mov    ebx,0x0
   140037410:	cmove  r13d,ebx
   140037414:	test   r13d,r13d
   140037417:	je     0x1400374ff
   14003741d:	xor    r13d,r13d
   140037420:	cmp    BYTE PTR [rsp+0x34],r13b
   140037425:	jne    0x14003744b
   140037427:	inc    DWORD PTR [rsp+0x38]
   14003742b:	mov    eax,DWORD PTR [rsp+0x60]
   14003742f:	jmp    0x14003683d
   140037434:	mov    rcx,QWORD PTR [rbp-0x78]
   140037438:	cmp    BYTE PTR [rsp+0x35],r13b
   14003743d:	je     0x140037443
   14003743f:	mov    DWORD PTR [rcx],eax
   140037441:	jmp    0x14003744b
   140037443:	mov    WORD PTR [rcx],ax
   140037446:	jmp    0x14003744b
   140037448:	xor    r13d,r13d
   14003744b:	mov    rsi,QWORD PTR [rsp+0x78]
   140037450:	mov    r15,QWORD PTR [rsp+0x70]
   140037455:	mov    ebx,0x1
   14003745a:	add    BYTE PTR [rsp+0x3c],bl
   14003745e:	add    rsi,0x2
   140037462:	mov    r12d,0xffff
   140037468:	mov    QWORD PTR [rsp+0x78],rsi
   14003746d:	jmp    0x1400374bb
   14003746f:	cmp    cx,WORD PTR [r10]
   140037473:	jne    0x140037485
   140037475:	lea    rax,[r10+0x2]
   140037479:	cmp    cx,WORD PTR [rax]
   14003747c:	cmove  r10,rax
   140037480:	mov    QWORD PTR [rsp+0x78],r10
   140037485:	add    r14d,ebx
   140037488:	mov    rcx,r15
   14003748b:	mov    DWORD PTR [rsp+0x30],r14d
   140037490:	mov    DWORD PTR [rsp+0x48],r14d
   140037495:	call   0x140033270
   14003749a:	mov    rsi,QWORD PTR [rsp+0x78]
   14003749f:	movzx  edi,ax
   1400374a2:	movzx  eax,WORD PTR [rsi]
   1400374a5:	add    rsi,0x2
   1400374a9:	mov    DWORD PTR [rsp+0x40],edi
   1400374ad:	mov    QWORD PTR [rsp+0x78],rsi
   1400374b2:	cmp    ax,di
   1400374b5:	jne    0x1400375e4
   1400374bb:	cmp    r12w,di
   1400374bf:	jne    0x1400374dc
   1400374c1:	mov    ecx,0x25
   1400374c6:	cmp    WORD PTR [rsi],cx
   1400374c9:	jne    0x1400375f5
   1400374cf:	lea    eax,[rcx+0x49]
   1400374d2:	cmp    WORD PTR [rsi+0x2],ax
   1400374d6:	jne    0x1400375f5
   1400374dc:	movzx  eax,WORD PTR [rsi]
   1400374df:	test   ax,ax
   1400374e2:	je     0x1400375f5
   1400374e8:	jmp    0x14003648b
   1400374ed:	cmp    ax,di
   1400374f0:	je     0x1400374ff
   1400374f2:	mov    rdx,QWORD PTR [rsp+0x70]
   1400374f7:	movzx  ecx,di
   1400374fa:	call   0x1400382cc
   1400374ff:	mov    r15d,DWORD PTR [rsp+0x38]
   140037504:	mov    r12d,DWORD PTR [rsp+0x50]
   140037509:	xor    r13d,r13d
   14003750c:	jmp    0x140037524
   14003750e:	mov    BYTE PTR [rax],r13b
   140037511:	call   0x140029bf8
   140037516:	mov    DWORD PTR [rax],0xc
   14003751c:	mov    r15d,DWORD PTR [rsp+0x38]
   140037521:	mov    r12d,r13d
   140037524:	mov    esi,0xffff
   140037529:	mov    r9d,0x1
   14003752f:	mov    rbx,QWORD PTR [rsp+0x68]
   140037534:	cmp    DWORD PTR [rbp-0x48],r9d
   140037538:	jne    0x140037542
   14003753a:	mov    rcx,rbx
   14003753d:	call   0x1400273dc
   140037542:	mov    eax,0x1
   140037547:	cmp    DWORD PTR [rbp-0x68],eax
   14003754a:	jne    0x14003755a
   14003754c:	mov    rcx,QWORD PTR [rbp-0x70]
   140037550:	call   0x1400273dc
   140037555:	mov    eax,0x1
   14003755a:	cmp    si,di
   14003755d:	jne    0x140037646
   140037563:	test   r15d,r15d
   140037566:	jne    0x14003765b
   14003756c:	mov    al,BYTE PTR [rsp+0x3c]
   140037570:	test   al,al
   140037572:	jne    0x14003765b
   140037578:	or     eax,0xffffffff
   14003757b:	jmp    0x140037666
   140037580:	mov    esi,0xffff
   140037585:	cmp    si,di
   140037588:	je     0x140037597
   14003758a:	mov    rdx,QWORD PTR [rsp+0x70]
   14003758f:	movzx  ecx,di
   140037592:	call   0x1400382cc
   140037597:	mov    r15d,DWORD PTR [rsp+0x38]
   14003759c:	mov    r12d,0x1
   1400375a2:	xor    r13d,r13d
   1400375a5:	mov    r9d,r12d
   1400375a8:	jmp    0x14003752f
   1400375aa:	call   0x140029bf8
   1400375af:	mov    r15d,DWORD PTR [rsp+0x38]
   1400375b4:	mov    esi,0xffff
   1400375b9:	mov    DWORD PTR [rax],0xc
   1400375bf:	xor    eax,eax
   1400375c1:	lea    r9d,[rax+0x1]
   1400375c5:	mov    r12d,eax
   1400375c8:	test   r13b,r13b
   1400375cb:	je     0x1400375d9
   1400375cd:	xor    r13d,r13d
   1400375d0:	mov    WORD PTR [rbx],r13w
   1400375d4:	jmp    0x14003752f
   1400375d9:	xor    r13d,r13d
   1400375dc:	mov    BYTE PTR [rbx],r13b
   1400375df:	jmp    0x14003752f
   1400375e4:	cmp    r12w,di
   1400375e8:	je     0x1400375f5
   1400375ea:	mov    rdx,r15
   1400375ed:	movzx  ecx,di
   1400375f0:	call   0x1400382cc
   1400375f5:	mov    r15d,DWORD PTR [rsp+0x38]
   1400375fa:	mov    r12d,DWORD PTR [rsp+0x50]
   1400375ff:	jmp    0x140037524
   140037604:	mov    r15d,DWORD PTR [rsp+0x38]
   140037609:	mov    r12d,r14d
   14003760c:	xor    r13d,r13d
   14003760f:	mov    esi,0xffff
   140037614:	jmp    0x140037534
   140037619:	mov    r15d,DWORD PTR [rsp+0x38]
   14003761e:	xor    r13d,r13d
   140037621:	mov    r12d,r14d
   140037624:	lea    r9d,[r13+0x1]
   140037628:	mov    esi,0xffff
   14003762d:	jmp    0x140037534
   140037632:	mov    r15d,DWORD PTR [rsp+0x38]
   140037637:	mov    r12d,DWORD PTR [rsp+0x50]
   14003763c:	xor    r13d,r13d
   14003763f:	mov    esi,eax
   140037641:	jmp    0x140037529
   140037646:	cmp    r12d,eax
   140037649:	jne    0x140037660
   14003764b:	call   0x140029bf8
   140037650:	mov    DWORD PTR [rax],0x16
   140037656:	call   0x140029b2c
   14003765b:	mov    eax,r15d
   14003765e:	jmp    0x140037666
   140037660:	mov    ebx,DWORD PTR [rsp+0x38]
   140037664:	mov    eax,ebx
   140037666:	cmp    BYTE PTR [rbp-0x20],r13b
   14003766a:	je     0x140037677
   14003766c:	mov    rcx,QWORD PTR [rbp-0x28]
   140037670:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140037677:	mov    rcx,QWORD PTR [rbp+0x2b0]
   14003767e:	xor    rcx,rsp
   140037681:	call   0x1400265a0
   140037686:	mov    rbx,QWORD PTR [rsp+0x410]
   14003768e:	add    rsp,0x3c0
   140037695:	pop    r15
   140037697:	pop    r14
   140037699:	pop    r13
   14003769b:	pop    r12
   14003769d:	pop    rdi
   14003769e:	pop    rsi
   14003769f:	pop    rbp
   1400376a0:	ret    
   1400376a1:	xor    r9d,r9d
   1400376a4:	xor    r8d,r8d
   1400376a7:	xor    edx,edx
   1400376a9:	xor    ecx,ecx
   1400376ab:	mov    QWORD PTR [rsp+0x20],r13
   1400376b0:	call   0x140029b4c
   1400376b5:	int3   
   1400376b6:	int3   
   1400376b7:	int3   
   1400376b8:	xor    r8d,r8d
   1400376bb:	jmp    0x1400376c0
   1400376c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400376c5:	push   rdi
   1400376c6:	sub    rsp,0x40
   1400376ca:	mov    rbx,rdx
   1400376cd:	mov    rdi,rcx
   1400376d0:	test   rcx,rcx
   1400376d3:	jne    0x1400376e9
   1400376d5:	call   0x140029bf8
   1400376da:	mov    DWORD PTR [rax],0x16
   1400376e0:	call   0x140029b2c
   1400376e5:	xor    eax,eax
   1400376e7:	jmp    0x14003774b
   1400376e9:	test   rdx,rdx
   1400376ec:	je     0x1400376d5
   1400376ee:	cmp    rcx,rdx
   1400376f1:	jae    0x1400376e5
   1400376f3:	lea    rcx,[rsp+0x20]
   1400376f8:	mov    rdx,r8
   1400376fb:	call   0x140026f30
   140037700:	mov    rcx,QWORD PTR [rsp+0x28]
   140037705:	cmp    DWORD PTR [rcx+0x8],0x0
   140037709:	jne    0x140037710
   14003770b:	dec    rbx
   14003770e:	jmp    0x140037735
   140037710:	lea    rdx,[rbx-0x1]
   140037714:	dec    rdx
   140037717:	cmp    rdi,rdx
   14003771a:	ja     0x140037726
   14003771c:	movzx  eax,BYTE PTR [rdx]
   14003771f:	test   BYTE PTR [rax+rcx*1+0x19],0x4
   140037724:	jne    0x140037714
   140037726:	mov    rcx,rbx
   140037729:	sub    rcx,rdx
   14003772c:	and    ecx,0x1
   14003772f:	sub    rbx,rcx
   140037732:	dec    rbx
   140037735:	cmp    BYTE PTR [rsp+0x38],0x0
   14003773a:	je     0x140037748
   14003773c:	mov    rcx,QWORD PTR [rsp+0x30]
   140037741:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140037748:	mov    rax,rbx
   14003774b:	mov    rbx,QWORD PTR [rsp+0x50]
   140037750:	add    rsp,0x40
   140037754:	pop    rdi
   140037755:	ret    
   140037756:	int3   
   140037757:	int3   
   140037758:	mov    QWORD PTR [rsp+0x10],rdi
   14003775d:	mov    QWORD PTR [rsp+0x20],r14
   140037762:	push   rbp
   140037763:	mov    rbp,rsp
   140037766:	sub    rsp,0x70
   14003776a:	movsxd rdi,ecx
   14003776d:	lea    rcx,[rbp-0x20]
   140037771:	call   0x140026f30
   140037776:	cmp    edi,0x100
   14003777c:	jae    0x1400377db
   14003777e:	mov    rdx,QWORD PTR [rbp-0x20]
   140037782:	cmp    DWORD PTR [rdx+0xd4],0x1
   140037789:	jle    0x1400377a1
   14003778b:	lea    r8,[rbp-0x20]
   14003778f:	mov    edx,0x1
   140037794:	mov    ecx,edi
   140037796:	call   0x140031b54
   14003779b:	mov    rdx,QWORD PTR [rbp-0x20]
   14003779f:	jmp    0x1400377af
   1400377a1:	mov    rax,QWORD PTR [rdx+0x108]
   1400377a8:	movzx  eax,WORD PTR [rax+rdi*2]
   1400377ac:	and    eax,0x1
   1400377af:	test   eax,eax
   1400377b1:	je     0x1400377c3
   1400377b3:	mov    rax,QWORD PTR [rdx+0x110]
   1400377ba:	movzx  eax,BYTE PTR [rax+rdi*1]
   1400377be:	jmp    0x140037887
   1400377c3:	cmp    BYTE PTR [rbp-0x8],0x0
   1400377c7:	je     0x1400377d4
   1400377c9:	mov    rax,QWORD PTR [rbp-0x10]
   1400377cd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400377d4:	mov    eax,edi
   1400377d6:	jmp    0x140037898
   1400377db:	mov    rax,QWORD PTR [rbp-0x20]
   1400377df:	cmp    DWORD PTR [rax+0xd4],0x1
   1400377e6:	jle    0x140037813
   1400377e8:	mov    r14d,edi
   1400377eb:	lea    rdx,[rbp-0x20]
   1400377ef:	sar    r14d,0x8
   1400377f3:	movzx  ecx,r14b
   1400377f7:	call   0x14002fe88
   1400377fc:	test   eax,eax
   1400377fe:	je     0x140037813
   140037800:	mov    BYTE PTR [rbp+0x10],r14b
   140037804:	mov    BYTE PTR [rbp+0x11],dil
   140037808:	mov    BYTE PTR [rbp+0x12],0x0
   14003780c:	mov    ecx,0x2
   140037811:	jmp    0x14003782b
   140037813:	call   0x140029bf8
   140037818:	mov    ecx,0x1
   14003781d:	mov    DWORD PTR [rax],0x2a
   140037823:	mov    BYTE PTR [rbp+0x10],dil
   140037827:	mov    BYTE PTR [rbp+0x11],0x0
   14003782b:	mov    rdx,QWORD PTR [rbp-0x20]
   14003782f:	mov    DWORD PTR [rsp+0x40],0x1
   140037837:	lea    r9,[rbp+0x10]
   14003783b:	mov    eax,DWORD PTR [rdx+0x4]
   14003783e:	mov    rdx,QWORD PTR [rdx+0x138]
   140037845:	mov    r8d,0x100
   14003784b:	mov    DWORD PTR [rsp+0x38],eax
   14003784f:	lea    rax,[rbp+0x20]
   140037853:	mov    DWORD PTR [rsp+0x30],0x3
   14003785b:	mov    QWORD PTR [rsp+0x28],rax
   140037860:	mov    DWORD PTR [rsp+0x20],ecx
   140037864:	lea    rcx,[rbp-0x20]
   140037868:	call   0x14002efd0
   14003786d:	test   eax,eax
   14003786f:	je     0x1400377c3
   140037875:	cmp    eax,0x1
   140037878:	movzx  eax,BYTE PTR [rbp+0x20]
   14003787c:	je     0x140037887
   14003787e:	movzx  ecx,BYTE PTR [rbp+0x21]
   140037882:	shl    eax,0x8
   140037885:	or     eax,ecx
   140037887:	cmp    BYTE PTR [rbp-0x8],0x0
   14003788b:	je     0x140037898
   14003788d:	mov    rcx,QWORD PTR [rbp-0x10]
   140037891:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140037898:	lea    r11,[rsp+0x70]
   14003789d:	mov    rdi,QWORD PTR [r11+0x18]
   1400378a1:	mov    r14,QWORD PTR [r11+0x28]
   1400378a5:	mov    rsp,r11
   1400378a8:	pop    rbp
   1400378a9:	ret    
   1400378aa:	int3   
   1400378ab:	int3   
   1400378ac:	cmp    DWORD PTR [rip+0x24d5d],0x0        # 0x14005c610
   1400378b3:	jne    0x1400378c3
   1400378b5:	lea    eax,[rcx-0x41]
   1400378b8:	cmp    eax,0x19
   1400378bb:	ja     0x1400378c0
   1400378bd:	add    ecx,0x20
   1400378c0:	mov    eax,ecx
   1400378c2:	ret    
   1400378c3:	xor    edx,edx
   1400378c5:	jmp    0x140037758
   1400378ca:	int3   
   1400378cb:	int3   
   1400378cc:	neg    rcx
   1400378cf:	sbb    eax,eax
   1400378d1:	and    eax,0x1
   1400378d4:	ret    
   1400378d5:	int3   
   1400378d6:	int3   
   1400378d7:	int3   
   1400378d8:	int3   
   1400378d9:	int3   
   1400378da:	int3   
   1400378db:	int3   
   1400378dc:	int3   
   1400378dd:	int3   
   1400378de:	int3   
   1400378df:	int3   
   1400378e0:	int3   
   1400378e1:	int3   
   1400378e2:	int3   
   1400378e3:	int3   
   1400378e4:	int3   
   1400378e5:	int3   
   1400378e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400378f0:	sub    rsp,0x28
   1400378f4:	mov    QWORD PTR [rsp+0x30],rcx
   1400378f9:	mov    QWORD PTR [rsp+0x38],rdx
   1400378fe:	mov    DWORD PTR [rsp+0x40],r8d
   140037903:	mov    rdx,QWORD PTR [rdx]
   140037906:	mov    rax,rcx
   140037909:	call   0x14002e600
   14003790e:	call   rax
   140037910:	call   0x14002e630
   140037915:	mov    rcx,rax
   140037918:	mov    rdx,QWORD PTR [rsp+0x38]
   14003791d:	mov    rdx,QWORD PTR [rdx]
   140037920:	mov    r8d,0x2
   140037926:	call   0x14002e600
   14003792b:	add    rsp,0x28
   14003792f:	ret    
   140037930:	mov    rax,QWORD PTR [rsp]
   140037934:	mov    QWORD PTR [rcx],rax
   140037937:	ret    
   140037938:	mov    QWORD PTR [rsp+0x10],rbx
   14003793d:	mov    QWORD PTR [rsp+0x18],rsi
   140037942:	mov    DWORD PTR [rsp+0x8],ecx
   140037946:	push   rdi
   140037947:	push   r12
   140037949:	push   r13
   14003794b:	push   r14
   14003794d:	push   r15
   14003794f:	sub    rsp,0x20
   140037953:	mov    r14d,r8d
   140037956:	mov    r12,rdx
   140037959:	movsxd rdi,ecx
   14003795c:	cmp    edi,0xfffffffe
   14003795f:	jne    0x14003797a
   140037961:	call   0x140029b88
   140037966:	xor    ebx,ebx
   140037968:	mov    DWORD PTR [rax],ebx
   14003796a:	call   0x140029bf8
   14003796f:	mov    DWORD PTR [rax],0x9
   140037975:	jmp    0x140037a44
   14003797a:	call   0x140028a64
   14003797f:	xor    ebx,ebx
   140037981:	test   eax,eax
   140037983:	js     0x140037a44
   140037989:	test   edi,edi
   14003798b:	js     0x140037a2d
   140037991:	cmp    edi,DWORD PTR [rip+0x26fa9]        # 0x14005e940
   140037997:	jae    0x140037a2d
   14003799d:	mov    rsi,rdi
   1400379a0:	mov    r15,rdi
   1400379a3:	sar    r15,0x5
   1400379a7:	lea    r13,[rip+0x26fb2]        # 0x14005e960
   1400379ae:	and    esi,0x1f
   1400379b1:	imul   rsi,rsi,0x58
   1400379b5:	mov    rax,QWORD PTR [r13+r15*8+0x0]
   1400379ba:	movsx  ecx,BYTE PTR [rsi+rax*1+0x8]
   1400379bf:	and    ecx,0x1
   1400379c2:	je     0x140037a2d
   1400379c4:	mov    eax,ebx
   1400379c6:	cmp    r14d,0x7fffffff
   1400379cd:	setbe  al
   1400379d0:	test   eax,eax
   1400379d2:	jne    0x1400379e8
   1400379d4:	call   0x140029b88
   1400379d9:	mov    DWORD PTR [rax],ebx
   1400379db:	call   0x140029bf8
   1400379e0:	mov    DWORD PTR [rax],0x16
   1400379e6:	jmp    0x140037a3f
   1400379e8:	mov    ecx,edi
   1400379ea:	call   0x140031538
   1400379ef:	nop
   1400379f0:	mov    rax,QWORD PTR [r13+r15*8+0x0]
   1400379f5:	test   BYTE PTR [rsi+rax*1+0x8],0x1
   1400379fa:	je     0x140037a0d
   1400379fc:	mov    r8d,r14d
   1400379ff:	mov    rdx,r12
   140037a02:	mov    ecx,edi
   140037a04:	call   0x140037a60
   140037a09:	mov    ebx,eax
   140037a0b:	jmp    0x140037a22
   140037a0d:	call   0x140029bf8
   140037a12:	mov    DWORD PTR [rax],0x9
   140037a18:	call   0x140029b88
   140037a1d:	mov    DWORD PTR [rax],ebx
   140037a1f:	or     ebx,0xffffffff
   140037a22:	mov    ecx,edi
   140037a24:	call   0x140031700
   140037a29:	mov    eax,ebx
   140037a2b:	jmp    0x140037a47
   140037a2d:	call   0x140029b88
   140037a32:	mov    DWORD PTR [rax],ebx
   140037a34:	call   0x140029bf8
   140037a39:	mov    DWORD PTR [rax],0x9
   140037a3f:	call   0x140029b2c
   140037a44:	or     eax,0xffffffff
   140037a47:	mov    rbx,QWORD PTR [rsp+0x58]
   140037a4c:	mov    rsi,QWORD PTR [rsp+0x60]
   140037a51:	add    rsp,0x20
   140037a55:	pop    r15
   140037a57:	pop    r14
   140037a59:	pop    r13
   140037a5b:	pop    r12
   140037a5d:	pop    rdi
   140037a5e:	ret    
   140037a5f:	int3   
   140037a60:	mov    QWORD PTR [rsp+0x10],rdx
   140037a65:	mov    DWORD PTR [rsp+0x8],ecx
   140037a69:	push   rbp
   140037a6a:	push   rbx
   140037a6b:	push   rsi
   140037a6c:	push   rdi
   140037a6d:	push   r12
   140037a6f:	push   r13
   140037a71:	push   r14
   140037a73:	push   r15
   140037a75:	mov    rbp,rsp
   140037a78:	sub    rsp,0x58
   140037a7c:	xor    edi,edi
   140037a7e:	movsxd r12,ecx
   140037a81:	mov    ebx,r8d
   140037a84:	mov    r15,rdx
   140037a87:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   140037a8e:	mov    DWORD PTR [rbp-0x18],edi
   140037a91:	mov    DWORD PTR [rbp-0x10],ebx
   140037a94:	cmp    r12d,0xfffffffe
   140037a98:	jne    0x140037ab1
   140037a9a:	call   0x140029b88
   140037a9f:	mov    DWORD PTR [rax],edi
   140037aa1:	call   0x140029bf8
   140037aa6:	mov    DWORD PTR [rax],0x9
   140037aac:	jmp    0x1400382b6
   140037ab1:	call   0x140028a64
   140037ab6:	test   eax,eax
   140037ab8:	js     0x1400382b6
   140037abe:	test   r12d,r12d
   140037ac1:	js     0x14003829f
   140037ac7:	cmp    r12d,DWORD PTR [rip+0x26e72]        # 0x14005e940
   140037ace:	jae    0x14003829f
   140037ad4:	mov    rsi,r12
   140037ad7:	mov    r13,r12
   140037ada:	lea    r9,[rip+0xfffffffffffc851f]        # 0x140000000
   140037ae1:	sar    r13,0x5
   140037ae5:	and    esi,0x1f
   140037ae8:	mov    rcx,QWORD PTR [r9+r13*8+0x5e960]
   140037af0:	imul   rsi,rsi,0x58
   140037af4:	mov    al,BYTE PTR [rsi+rcx*1+0x8]
   140037af8:	test   al,0x1
   140037afa:	je     0x14003829f
   140037b00:	cmp    ebx,0x7fffffff
   140037b06:	jbe    0x140037b1f
   140037b08:	call   0x140029b88
   140037b0d:	mov    DWORD PTR [rax],edi
   140037b0f:	call   0x140029bf8
   140037b14:	mov    DWORD PTR [rax],0x16
   140037b1a:	jmp    0x1400382b1
   140037b1f:	mov    r14d,edi
   140037b22:	test   ebx,ebx
   140037b24:	je     0x14003829b
   140037b2a:	test   al,0x2
   140037b2c:	jne    0x14003829b
   140037b32:	test   r15,r15
   140037b35:	je     0x140037b08
   140037b37:	mov    dl,BYTE PTR [rsi+rcx*1+0x38]
   140037b3b:	mov    r8d,0x4
   140037b41:	add    dl,dl
   140037b43:	sar    dl,1
   140037b45:	movsx  ecx,dl
   140037b48:	mov    BYTE PTR [rbp+0x60],dl
   140037b4b:	dec    ecx
   140037b4d:	je     0x140037b60
   140037b4f:	dec    ecx
   140037b51:	jne    0x140037bc0
   140037b53:	mov    eax,ebx
   140037b55:	not    eax
   140037b57:	test   al,0x1
   140037b59:	je     0x140037b08
   140037b5b:	and    ebx,0xfffffffe
   140037b5e:	jmp    0x140037bc0
   140037b60:	mov    eax,ebx
   140037b62:	not    eax
   140037b64:	test   al,0x1
   140037b66:	je     0x140037b08
   140037b68:	shr    ebx,1
   140037b6a:	cmp    ebx,r8d
   140037b6d:	cmovb  ebx,r8d
   140037b71:	mov    ecx,ebx
   140037b73:	call   0x1400297c4
   140037b78:	mov    r15,rax
   140037b7b:	test   rax,rax
   140037b7e:	jne    0x140037b9b
   140037b80:	call   0x140029bf8
   140037b85:	mov    DWORD PTR [rax],0xc
   140037b8b:	call   0x140029b88
   140037b90:	mov    DWORD PTR [rax],0x8
   140037b96:	jmp    0x1400382b6
   140037b9b:	xor    edx,edx
   140037b9d:	mov    ecx,r12d
   140037ba0:	lea    r8d,[rdx+0x1]
   140037ba4:	call   0x14002fda0
   140037ba9:	mov    dl,BYTE PTR [rbp+0x60]
   140037bac:	lea    r9,[rip+0xfffffffffffc844d]        # 0x140000000
   140037bb3:	mov    rcx,QWORD PTR [r9+r13*8+0x5e960]
   140037bbb:	mov    QWORD PTR [rsi+rcx*1+0x40],rax
   140037bc0:	mov    rax,QWORD PTR [r9+r13*8+0x5e960]
   140037bc8:	mov    r12,r15
   140037bcb:	mov    r8d,0xa
   140037bd1:	test   BYTE PTR [rsi+rax*1+0x8],0x48
   140037bd6:	je     0x140037c79
   140037bdc:	mov    cl,BYTE PTR [rsi+rax*1+0x9]
   140037be0:	cmp    cl,r8b
   140037be3:	je     0x140037c79
   140037be9:	test   ebx,ebx
   140037beb:	je     0x140037c79
   140037bf1:	mov    BYTE PTR [r15],cl
   140037bf4:	mov    rax,QWORD PTR [r9+r13*8+0x5e960]
   140037bfc:	or     r10d,0xffffffff
   140037c00:	add    ebx,r10d
   140037c03:	lea    r12,[r15+0x1]
   140037c07:	lea    r14d,[r8-0x9]
   140037c0b:	mov    BYTE PTR [rsi+rax*1+0x9],r8b
   140037c10:	test   dl,dl
   140037c12:	je     0x140037c79
   140037c14:	mov    rax,QWORD PTR [r9+r13*8+0x5e960]
   140037c1c:	mov    cl,BYTE PTR [rsi+rax*1+0x39]
   140037c20:	cmp    cl,r8b
   140037c23:	je     0x140037c79
   140037c25:	test   ebx,ebx
   140037c27:	je     0x140037c79
   140037c29:	mov    BYTE PTR [r12],cl
   140037c2d:	mov    rax,QWORD PTR [r9+r13*8+0x5e960]
   140037c35:	add    ebx,r10d
   140037c38:	inc    r12
   140037c3b:	lea    r14d,[r8-0x8]
   140037c3f:	mov    BYTE PTR [rsi+rax*1+0x39],r8b
   140037c44:	cmp    dl,0x1
   140037c47:	jne    0x140037c79
   140037c49:	mov    rax,QWORD PTR [r9+r13*8+0x5e960]
   140037c51:	mov    cl,BYTE PTR [rsi+rax*1+0x3a]
   140037c55:	cmp    cl,r8b
   140037c58:	je     0x140037c79
   140037c5a:	test   ebx,ebx
   140037c5c:	je     0x140037c79
   140037c5e:	mov    BYTE PTR [r12],cl
   140037c62:	mov    rax,QWORD PTR [r9+r13*8+0x5e960]
   140037c6a:	inc    r12
   140037c6d:	lea    r14d,[r8-0x7]
   140037c71:	add    ebx,r10d
   140037c74:	mov    BYTE PTR [rsi+rax*1+0x3a],r8b
   140037c79:	mov    ecx,DWORD PTR [rbp+0x48]
   140037c7c:	call   0x14002f3dc
   140037c81:	test   eax,eax
   140037c83:	je     0x140037d04
   140037c85:	lea    rcx,[rip+0xfffffffffffc8374]        # 0x140000000
   140037c8c:	mov    rcx,QWORD PTR [rcx+r13*8+0x5e960]
   140037c94:	test   BYTE PTR [rsi+rcx*1+0x8],0x80
   140037c99:	je     0x140037d04
   140037c9b:	mov    rcx,QWORD PTR [rsi+rcx*1]
   140037c9f:	lea    rdx,[rbp-0x18]
   140037ca3:	call   QWORD PTR [rip+0x98d7]        # 0x140041580
   140037ca9:	mov    DWORD PTR [rbp-0x18],eax
   140037cac:	test   eax,eax
   140037cae:	je     0x140037d04
   140037cb0:	cmp    BYTE PTR [rbp+0x60],0x2
   140037cb4:	jne    0x140037d04
   140037cb6:	lea    rax,[rip+0xfffffffffffc8343]        # 0x140000000
   140037cbd:	shr    ebx,1
   140037cbf:	lea    r9,[rbp-0x24]
   140037cc3:	mov    rcx,QWORD PTR [rax+r13*8+0x5e960]
   140037ccb:	mov    rdx,r12
   140037cce:	mov    r8d,ebx
   140037cd1:	mov    rcx,QWORD PTR [rsi+rcx*1]
   140037cd5:	mov    QWORD PTR [rsp+0x20],rdi
   140037cda:	call   QWORD PTR [rip+0x95d0]        # 0x1400412b0
   140037ce0:	test   eax,eax
   140037ce2:	jne    0x140037cf9
   140037ce4:	call   QWORD PTR [rip+0x96ee]        # 0x1400413d8
   140037cea:	mov    ecx,eax
   140037cec:	call   0x140029ba8
   140037cf1:	or     ebx,0xffffffff
   140037cf4:	jmp    0x1400380a1
   140037cf9:	mov    eax,DWORD PTR [rbp-0x24]
   140037cfc:	lea    edx,[rax+rax*1]
   140037cff:	mov    DWORD PTR [rbp-0x24],edx
   140037d02:	jmp    0x140037d4b
   140037d04:	lea    rcx,[rip+0xfffffffffffc82f5]        # 0x140000000
   140037d0b:	lea    r9,[rbp-0x24]
   140037d0f:	mov    r8d,ebx
   140037d12:	mov    rcx,QWORD PTR [rcx+r13*8+0x5e960]
   140037d1a:	mov    rdx,r12
   140037d1d:	mov    QWORD PTR [rsp+0x20],rdi
   140037d22:	mov    rcx,QWORD PTR [rsi+rcx*1]
   140037d26:	call   QWORD PTR [rip+0x98f4]        # 0x140041620
   140037d2c:	test   eax,eax
   140037d2e:	je     0x140038265
   140037d34:	movsxd rdx,DWORD PTR [rbp-0x24]
   140037d38:	test   edx,edx
   140037d3a:	js     0x140038265
   140037d40:	mov    eax,ebx
   140037d42:	cmp    rdx,rax
   140037d45:	ja     0x140038265
   140037d4b:	lea    r10,[rip+0xfffffffffffc82ae]        # 0x140000000
   140037d52:	add    r14d,edx
   140037d55:	mov    rcx,QWORD PTR [r10+r13*8+0x5e960]
   140037d5d:	mov    al,BYTE PTR [rsi+rcx*1+0x8]
   140037d61:	test   al,al
   140037d63:	jns    0x14003809e
   140037d69:	cmp    BYTE PTR [rbp+0x60],0x2
   140037d6d:	je     0x140038013
   140037d73:	test   edx,edx
   140037d75:	mov    edx,0xa
   140037d7a:	je     0x140037d85
   140037d7c:	cmp    BYTE PTR [r15],dl
   140037d7f:	jne    0x140037d85
   140037d81:	or     al,0x4
   140037d83:	jmp    0x140037d87
   140037d85:	and    al,0xfb
   140037d87:	mov    BYTE PTR [rsi+rcx*1+0x8],al
   140037d8b:	movsxd rax,r14d
   140037d8e:	mov    rbx,r15
   140037d91:	add    rax,r15
   140037d94:	mov    r12,r15
   140037d97:	mov    QWORD PTR [rbp-0x18],rax
   140037d9b:	cmp    r15,rax
   140037d9e:	jae    0x140037ed4
   140037da4:	mov    r14d,0xd
   140037daa:	mov    al,BYTE PTR [r12]
   140037dae:	cmp    al,0x1a
   140037db0:	je     0x140037eb3
   140037db6:	cmp    al,r14b
   140037db9:	je     0x140037dc8
   140037dbb:	mov    BYTE PTR [rbx],al
   140037dbd:	inc    rbx
   140037dc0:	inc    r12
   140037dc3:	jmp    0x140037ea7
   140037dc8:	mov    rax,QWORD PTR [rbp-0x18]
   140037dcc:	dec    rax
   140037dcf:	cmp    r12,rax
   140037dd2:	jae    0x140037dee
   140037dd4:	lea    rax,[r12+0x1]
   140037dd9:	cmp    BYTE PTR [rax],dl
   140037ddb:	jne    0x140037de6
   140037ddd:	add    r12,0x2
   140037de1:	jmp    0x140037e6c
   140037de6:	mov    r12,rax
   140037de9:	jmp    0x140037ea1
   140037dee:	mov    rcx,QWORD PTR [r10+r13*8+0x5e960]
   140037df6:	lea    r9,[rbp-0x24]
   140037dfa:	lea    rdx,[rbp+0x58]
   140037dfe:	mov    rcx,QWORD PTR [rsi+rcx*1]
   140037e02:	mov    r8d,0x1
   140037e08:	inc    r12
   140037e0b:	mov    QWORD PTR [rsp+0x20],rdi
   140037e10:	call   QWORD PTR [rip+0x980a]        # 0x140041620
   140037e16:	test   eax,eax
   140037e18:	jne    0x140037e24
   140037e1a:	call   QWORD PTR [rip+0x95b8]        # 0x1400413d8
   140037e20:	test   eax,eax
   140037e22:	jne    0x140037e95
   140037e24:	cmp    DWORD PTR [rbp-0x24],edi
   140037e27:	je     0x140037e95
   140037e29:	lea    r10,[rip+0xfffffffffffc81d0]        # 0x140000000
   140037e30:	mov    rax,QWORD PTR [r10+r13*8+0x5e960]
   140037e38:	test   BYTE PTR [rsi+rax*1+0x8],0x48
   140037e3d:	je     0x140037e5d
   140037e3f:	mov    edx,0xa
   140037e44:	cmp    BYTE PTR [rbp+0x58],dl
   140037e47:	je     0x140037e6c
   140037e49:	mov    BYTE PTR [rbx],r14b
   140037e4c:	mov    rcx,QWORD PTR [r10+r13*8+0x5e960]
   140037e54:	mov    al,BYTE PTR [rbp+0x58]
   140037e57:	mov    BYTE PTR [rsi+rcx*1+0x9],al
   140037e5b:	jmp    0x140037ea4
   140037e5d:	cmp    rbx,r15
   140037e60:	jne    0x140037e70
   140037e62:	mov    edx,0xa
   140037e67:	cmp    BYTE PTR [rbp+0x58],dl
   140037e6a:	jne    0x140037e70
   140037e6c:	mov    BYTE PTR [rbx],dl
   140037e6e:	jmp    0x140037ea4
   140037e70:	mov    ecx,DWORD PTR [rbp+0x48]
   140037e73:	mov    r8d,0x1
   140037e79:	or     rdx,0xffffffffffffffff
   140037e7d:	call   0x14002fda0
   140037e82:	mov    edx,0xa
   140037e87:	lea    r10,[rip+0xfffffffffffc8172]        # 0x140000000
   140037e8e:	cmp    BYTE PTR [rbp+0x58],dl
   140037e91:	je     0x140037ea7
   140037e93:	jmp    0x140037ea1
   140037e95:	mov    edx,0xa
   140037e9a:	lea    r10,[rip+0xfffffffffffc815f]        # 0x140000000
   140037ea1:	mov    BYTE PTR [rbx],r14b
   140037ea4:	inc    rbx
   140037ea7:	cmp    r12,QWORD PTR [rbp-0x18]
   140037eab:	jb     0x140037daa
   140037eb1:	jmp    0x140037ed4
   140037eb3:	mov    rcx,QWORD PTR [r10+r13*8+0x5e960]
   140037ebb:	mov    al,BYTE PTR [rsi+rcx*1+0x8]
   140037ebf:	test   al,0x40
   140037ec1:	jne    0x140037ecb
   140037ec3:	or     al,0x2
   140037ec5:	mov    BYTE PTR [rsi+rcx*1+0x8],al
   140037ec9:	jmp    0x140037ed4
   140037ecb:	mov    al,BYTE PTR [r12]
   140037ecf:	mov    BYTE PTR [rbx],al
   140037ed1:	inc    rbx
   140037ed4:	mov    r14d,ebx
   140037ed7:	sub    r14d,r15d
   140037eda:	cmp    BYTE PTR [rbp+0x60],0x1
   140037ede:	jne    0x14003809e
   140037ee4:	test   r14d,r14d
   140037ee7:	je     0x14003809e
   140037eed:	dec    rbx
   140037ef0:	test   BYTE PTR [rbx],0x80
   140037ef3:	jne    0x140037efd
   140037ef5:	inc    rbx
   140037ef8:	jmp    0x140037fab
   140037efd:	mov    edx,0x1
   140037f02:	jmp    0x140037f13
   140037f04:	cmp    edx,0x4
   140037f07:	jg     0x140037f20
   140037f09:	cmp    rbx,r15
   140037f0c:	jb     0x140037f20
   140037f0e:	dec    rbx
   140037f11:	inc    edx
   140037f13:	movzx  eax,BYTE PTR [rbx]
   140037f16:	cmp    BYTE PTR [rax+r10*1+0x5a390],dil
   140037f1e:	je     0x140037f04
   140037f20:	movzx  ecx,BYTE PTR [rbx]
   140037f23:	movsx  eax,BYTE PTR [rcx+r10*1+0x5a390]
   140037f2c:	test   eax,eax
   140037f2e:	jne    0x140037f40
   140037f30:	call   0x140029bf8
   140037f35:	mov    DWORD PTR [rax],0x2a
   140037f3b:	jmp    0x140037cf1
   140037f40:	inc    eax
   140037f42:	cmp    eax,edx
   140037f44:	jne    0x140037f4e
   140037f46:	movsxd rax,edx
   140037f49:	add    rbx,rax
   140037f4c:	jmp    0x140037fab
   140037f4e:	mov    rax,QWORD PTR [r10+r13*8+0x5e960]
   140037f56:	test   BYTE PTR [rsi+rax*1+0x8],0x48
   140037f5b:	je     0x140037f98
   140037f5d:	inc    rbx
   140037f60:	mov    BYTE PTR [rsi+rax*1+0x9],cl
   140037f64:	cmp    edx,0x2
   140037f67:	jl     0x140037f7a
   140037f69:	mov    al,BYTE PTR [rbx]
   140037f6b:	mov    rcx,QWORD PTR [r10+r13*8+0x5e960]
   140037f73:	inc    rbx
   140037f76:	mov    BYTE PTR [rsi+rcx*1+0x39],al
   140037f7a:	cmp    edx,0x3
   140037f7d:	jne    0x140037f90
   140037f7f:	mov    al,BYTE PTR [rbx]
   140037f81:	mov    rcx,QWORD PTR [r10+r13*8+0x5e960]
   140037f89:	inc    rbx
   140037f8c:	mov    BYTE PTR [rsi+rcx*1+0x3a],al
   140037f90:	movsxd rax,edx
   140037f93:	sub    rbx,rax
   140037f96:	jmp    0x140037fab
   140037f98:	mov    ecx,DWORD PTR [rbp+0x48]
   140037f9b:	neg    edx
   140037f9d:	mov    r8d,0x1
   140037fa3:	movsxd rdx,edx
   140037fa6:	call   0x14002fda0
   140037fab:	mov    eax,DWORD PTR [rbp-0x10]
   140037fae:	mov    r12,QWORD PTR [rbp+0x50]
   140037fb2:	sub    ebx,r15d
   140037fb5:	shr    eax,1
   140037fb7:	mov    r9d,ebx
   140037fba:	mov    r8,r15
   140037fbd:	mov    DWORD PTR [rsp+0x28],eax
   140037fc1:	xor    edx,edx
   140037fc3:	mov    ecx,0xfde9
   140037fc8:	mov    QWORD PTR [rsp+0x20],r12
   140037fcd:	call   QWORD PTR [rip+0x9355]        # 0x140041328
   140037fd3:	mov    r14d,eax
   140037fd6:	test   eax,eax
   140037fd8:	jne    0x140037fef
   140037fda:	call   QWORD PTR [rip+0x93f8]        # 0x1400413d8
   140037fe0:	mov    ecx,eax
   140037fe2:	call   0x140029ba8
   140037fe7:	or     ebx,0xffffffff
   140037fea:	jmp    0x1400380a5
   140037fef:	cmp    eax,ebx
   140037ff1:	mov    ebx,DWORD PTR [rbp-0x20]
   140037ff4:	lea    rax,[rip+0xfffffffffffc8005]        # 0x140000000
   140037ffb:	mov    rax,QWORD PTR [rax+r13*8+0x5e960]
   140038003:	setne  dil
   140038007:	add    r14d,r14d
   14003800a:	mov    DWORD PTR [rsi+rax*1+0x48],edi
   14003800e:	jmp    0x1400380a5
   140038013:	cmp    DWORD PTR [rbp-0x18],edi
   140038016:	je     0x1400380c0
   14003801c:	mov    eax,r14d
   14003801f:	mov    r8,r15
   140038022:	mov    r9,r15
   140038025:	cdq    
   140038026:	sub    eax,edx
   140038028:	sar    eax,1
   14003802a:	movsxd rcx,eax
   14003802d:	lea    rdx,[r15+rcx*2]
   140038031:	cmp    r15,rdx
   140038034:	jae    0x140038092
   140038036:	mov    ecx,0xa
   14003803b:	lea    r14d,[rcx+0x3]
   14003803f:	movzx  eax,WORD PTR [r9]
   140038043:	cmp    ax,0x1a
   140038047:	je     0x140038085
   140038049:	cmp    ax,r14w
   14003804d:	je     0x14003805d
   14003804f:	mov    WORD PTR [r8],ax
   140038053:	add    r8,0x2
   140038057:	add    r9,0x2
   14003805b:	jmp    0x14003807e
   14003805d:	lea    rax,[rdx-0x2]
   140038061:	cmp    r9,rax
   140038064:	jae    0x14003807e
   140038066:	add    r9,0x2
   14003806a:	cmp    WORD PTR [r9],cx
   14003806e:	jne    0x140038076
   140038070:	mov    WORD PTR [r8],cx
   140038074:	jmp    0x14003807a
   140038076:	mov    WORD PTR [r8],r14w
   14003807a:	add    r8,0x2
   14003807e:	cmp    r9,rdx
   140038081:	jb     0x14003803f
   140038083:	jmp    0x140038092
   140038085:	mov    rax,QWORD PTR [r10+r13*8+0x5e960]
   14003808d:	or     BYTE PTR [rsi+rax*1+0x8],0x2
   140038092:	sub    r8,r15
   140038095:	mov    r14,r8
   140038098:	sar    r14,1
   14003809b:	add    r14d,r14d
   14003809e:	mov    ebx,DWORD PTR [rbp-0x20]
   1400380a1:	mov    r12,QWORD PTR [rbp+0x50]
   1400380a5:	cmp    r15,r12
   1400380a8:	je     0x1400380b2
   1400380aa:	mov    rcx,r15
   1400380ad:	call   0x1400273dc
   1400380b2:	cmp    ebx,0xfffffffe
   1400380b5:	cmove  ebx,r14d
   1400380b9:	mov    eax,ebx
   1400380bb:	jmp    0x1400382b9
   1400380c0:	test   edx,edx
   1400380c2:	mov    edx,0xa
   1400380c7:	je     0x1400380d3
   1400380c9:	cmp    WORD PTR [r15],dx
   1400380cd:	jne    0x1400380d3
   1400380cf:	or     al,0x4
   1400380d1:	jmp    0x1400380d5
   1400380d3:	and    al,0xfb
   1400380d5:	mov    BYTE PTR [rsi+rcx*1+0x8],al
   1400380d9:	movsxd rax,r14d
   1400380dc:	mov    rbx,r15
   1400380df:	add    rax,r15
   1400380e2:	mov    r12,r15
   1400380e5:	mov    QWORD PTR [rbp+0x60],rax
   1400380e9:	cmp    r15,rax
   1400380ec:	jae    0x14003825a
   1400380f2:	mov    r14d,0xd
   1400380f8:	movzx  eax,WORD PTR [r12]
   1400380fd:	cmp    ax,0x1a
   140038101:	je     0x140038236
   140038107:	cmp    ax,r14w
   14003810b:	je     0x14003811d
   14003810d:	mov    WORD PTR [rbx],ax
   140038110:	add    rbx,0x2
   140038114:	add    r12,0x2
   140038118:	jmp    0x14003822a
   14003811d:	mov    rax,QWORD PTR [rbp+0x60]
   140038121:	add    rax,0xfffffffffffffffe
   140038125:	cmp    r12,rax
   140038128:	jae    0x140038145
   14003812a:	lea    rax,[r12+0x2]
   14003812f:	cmp    WORD PTR [rax],dx
   140038132:	jne    0x14003813d
   140038134:	add    r12,0x4
   140038138:	jmp    0x1400381ea
   14003813d:	mov    r12,rax
   140038140:	jmp    0x140038222
   140038145:	mov    rcx,QWORD PTR [r10+r13*8+0x5e960]
   14003814d:	lea    r9,[rbp-0x24]
   140038151:	lea    rdx,[rbp-0x28]
   140038155:	mov    rcx,QWORD PTR [rsi+rcx*1]
   140038159:	mov    r8d,0x2
   14003815f:	add    r12,0x2
   140038163:	mov    QWORD PTR [rsp+0x20],rdi
   140038168:	call   QWORD PTR [rip+0x94b2]        # 0x140041620
   14003816e:	test   eax,eax
   140038170:	jne    0x140038180
   140038172:	call   QWORD PTR [rip+0x9260]        # 0x1400413d8
   140038178:	test   eax,eax
   14003817a:	jne    0x140038216
   140038180:	cmp    DWORD PTR [rbp-0x24],edi
   140038183:	je     0x140038216
   140038189:	lea    r10,[rip+0xfffffffffffc7e70]        # 0x140000000
   140038190:	mov    rax,QWORD PTR [r10+r13*8+0x5e960]
   140038198:	test   BYTE PTR [rsi+rax*1+0x8],0x48
   14003819d:	je     0x1400381da
   14003819f:	mov    edx,0xa
   1400381a4:	cmp    WORD PTR [rbp-0x28],dx
   1400381a8:	je     0x1400381ea
   1400381aa:	mov    WORD PTR [rbx],r14w
   1400381ae:	mov    al,BYTE PTR [rbp-0x28]
   1400381b1:	mov    rcx,QWORD PTR [r10+r13*8+0x5e960]
   1400381b9:	mov    BYTE PTR [rsi+rcx*1+0x9],al
   1400381bd:	mov    al,BYTE PTR [rbp-0x27]
   1400381c0:	mov    rcx,QWORD PTR [r10+r13*8+0x5e960]
   1400381c8:	mov    BYTE PTR [rsi+rcx*1+0x39],al
   1400381cc:	mov    rax,QWORD PTR [r10+r13*8+0x5e960]
   1400381d4:	mov    BYTE PTR [rsi+rax*1+0x3a],dl
   1400381d8:	jmp    0x140038226
   1400381da:	cmp    rbx,r15
   1400381dd:	jne    0x1400381ef
   1400381df:	mov    edx,0xa
   1400381e4:	cmp    WORD PTR [rbp-0x28],dx
   1400381e8:	jne    0x1400381ef
   1400381ea:	mov    WORD PTR [rbx],dx
   1400381ed:	jmp    0x140038226
   1400381ef:	mov    ecx,DWORD PTR [rbp+0x48]
   1400381f2:	mov    rdx,0xfffffffffffffffe
   1400381f9:	lea    r8d,[rdx+0x3]
   1400381fd:	call   0x14002fda0
   140038202:	mov    edx,0xa
   140038207:	lea    r10,[rip+0xfffffffffffc7df2]        # 0x140000000
   14003820e:	cmp    WORD PTR [rbp-0x28],dx
   140038212:	je     0x14003822a
   140038214:	jmp    0x140038222
   140038216:	mov    edx,0xa
   14003821b:	lea    r10,[rip+0xfffffffffffc7dde]        # 0x140000000
   140038222:	mov    WORD PTR [rbx],r14w
   140038226:	add    rbx,0x2
   14003822a:	cmp    r12,QWORD PTR [rbp+0x60]
   14003822e:	jb     0x1400380f8
   140038234:	jmp    0x14003825a
   140038236:	mov    rcx,QWORD PTR [r10+r13*8+0x5e960]
   14003823e:	mov    al,BYTE PTR [rsi+rcx*1+0x8]
   140038242:	test   al,0x40
   140038244:	jne    0x14003824e
   140038246:	or     al,0x2
   140038248:	mov    BYTE PTR [rsi+rcx*1+0x8],al
   14003824c:	jmp    0x14003825a
   14003824e:	movzx  eax,WORD PTR [r12]
   140038253:	mov    WORD PTR [rbx],ax
   140038256:	add    rbx,0x2
   14003825a:	sub    ebx,r15d
   14003825d:	mov    r14d,ebx
   140038260:	jmp    0x14003809e
   140038265:	call   QWORD PTR [rip+0x916d]        # 0x1400413d8
   14003826b:	cmp    eax,0x5
   14003826e:	jne    0x14003828b
   140038270:	call   0x140029bf8
   140038275:	mov    DWORD PTR [rax],0x9
   14003827b:	call   0x140029b88
   140038280:	mov    DWORD PTR [rax],0x5
   140038286:	jmp    0x140037cf1
   14003828b:	cmp    eax,0x6d
   14003828e:	jne    0x140037cea
   140038294:	mov    ebx,edi
   140038296:	jmp    0x1400380a1
   14003829b:	xor    eax,eax
   14003829d:	jmp    0x1400382b9
   14003829f:	call   0x140029b88
   1400382a4:	mov    DWORD PTR [rax],edi
   1400382a6:	call   0x140029bf8
   1400382ab:	mov    DWORD PTR [rax],0x9
   1400382b1:	call   0x140029b2c
   1400382b6:	or     eax,0xffffffff
   1400382b9:	add    rsp,0x58
   1400382bd:	pop    r15
   1400382bf:	pop    r14
   1400382c1:	pop    r13
   1400382c3:	pop    r12
   1400382c5:	pop    rdi
   1400382c6:	pop    rsi
   1400382c7:	pop    rbx
   1400382c8:	pop    rbp
   1400382c9:	ret    
   1400382ca:	int3   
   1400382cb:	int3   
   1400382cc:	mov    QWORD PTR [rsp+0x18],rbx
   1400382d1:	mov    QWORD PTR [rsp+0x20],rbp
   1400382d6:	push   rsi
   1400382d7:	push   rdi
   1400382d8:	push   r13
   1400382da:	push   r14
   1400382dc:	push   r15
   1400382de:	sub    rsp,0x40
   1400382e2:	mov    rax,QWORD PTR [rip+0x20d9f]        # 0x140059088
   1400382e9:	xor    rax,rsp
   1400382ec:	mov    QWORD PTR [rsp+0x30],rax
   1400382f1:	mov    r15d,0xffff
   1400382f7:	mov    rdi,rdx
   1400382fa:	movzx  ebp,cx
   1400382fd:	mov    WORD PTR [rsp+0x24],cx
   140038302:	cmp    cx,r15w
   140038306:	je     0x1400384a1
   14003830c:	test   BYTE PTR [rdx+0x18],0x1
   140038310:	mov    esi,0x2
   140038315:	jne    0x14003832b
   140038317:	test   BYTE PTR [rdx+0x18],0x80
   14003831b:	je     0x1400384a1
   140038321:	test   BYTE PTR [rdx+0x18],sil
   140038325:	jne    0x1400384a1
   14003832b:	cmp    QWORD PTR [rdx+0x10],0x0
   140038330:	jne    0x14003833a
   140038332:	mov    rcx,rdx
   140038335:	call   0x14002fe34
   14003833a:	test   BYTE PTR [rdi+0x18],0x40
   14003833e:	jne    0x14003846a
   140038344:	mov    rcx,rdi
   140038347:	call   0x14002f3b4
   14003834c:	lea    r14,[rip+0x20cdd]        # 0x140059030
   140038353:	lea    r13,[rip+0x26606]        # 0x14005e960
   14003835a:	cmp    eax,0xffffffff
   14003835d:	je     0x140038391
   14003835f:	mov    rcx,rdi
   140038362:	call   0x14002f3b4
   140038367:	cmp    eax,0xfffffffe
   14003836a:	je     0x140038391
   14003836c:	mov    rcx,rdi
   14003836f:	call   0x14002f3b4
   140038374:	mov    rcx,rdi
   140038377:	movsxd rbx,eax
   14003837a:	sar    rbx,0x5
   14003837e:	call   0x14002f3b4
   140038383:	and    eax,0x1f
   140038386:	imul   rax,rax,0x58
   14003838a:	add    rax,QWORD PTR [r13+rbx*8+0x0]
   14003838f:	jmp    0x140038394
   140038391:	mov    rax,r14
   140038394:	test   BYTE PTR [rax+0x8],0x80
   140038398:	je     0x14003846a
   14003839e:	mov    rcx,rdi
   1400383a1:	call   0x14002f3b4
   1400383a6:	cmp    eax,0xffffffff
   1400383a9:	je     0x1400383df
   1400383ab:	mov    rcx,rdi
   1400383ae:	call   0x14002f3b4
   1400383b3:	cmp    eax,0xfffffffe
   1400383b6:	je     0x1400383df
   1400383b8:	mov    rcx,rdi
   1400383bb:	call   0x14002f3b4
   1400383c0:	mov    rcx,rdi
   1400383c3:	movsxd rbx,eax
   1400383c6:	sar    rbx,0x5
   1400383ca:	call   0x14002f3b4
   1400383cf:	mov    r14d,eax
   1400383d2:	and    r14d,0x1f
   1400383d6:	imul   r14,r14,0x58
   1400383da:	add    r14,QWORD PTR [r13+rbx*8+0x0]
   1400383df:	test   BYTE PTR [r14+0x38],0x7f
   1400383e4:	je     0x1400383f9
   1400383e6:	mov    al,BYTE PTR [rsp+0x25]
   1400383ea:	mov    BYTE PTR [rsp+0x28],bpl
   1400383ef:	mov    DWORD PTR [rsp+0x20],esi
   1400383f3:	mov    BYTE PTR [rsp+0x29],al
   1400383f7:	jmp    0x14003841e
   1400383f9:	lea    rdx,[rsp+0x28]
   1400383fe:	lea    rcx,[rsp+0x20]
   140038403:	movzx  r9d,bp
   140038407:	mov    r8d,0x5
   14003840d:	call   0x1400311b0
   140038412:	test   eax,eax
   140038414:	jne    0x1400384a1
   14003841a:	mov    esi,DWORD PTR [rsp+0x20]
   14003841e:	mov    rax,QWORD PTR [rdi+0x10]
   140038422:	movsxd rdx,esi
   140038425:	add    rdx,rax
   140038428:	cmp    QWORD PTR [rdi],rdx
   14003842b:	jae    0x14003843b
   14003842d:	cmp    DWORD PTR [rdi+0x8],0x0
   140038431:	jne    0x1400384a1
   140038433:	cmp    esi,DWORD PTR [rdi+0x24]
   140038436:	jg     0x1400384a1
   140038438:	mov    QWORD PTR [rdi],rdx
   14003843b:	lea    eax,[rsi-0x1]
   14003843e:	movsxd rdx,eax
   140038441:	test   eax,eax
   140038443:	js     0x14003845a
   140038445:	dec    QWORD PTR [rdi]
   140038448:	mov    al,BYTE PTR [rsp+rdx*1+0x28]
   14003844c:	dec    rdx
   14003844f:	mov    rcx,QWORD PTR [rdi]
   140038452:	mov    BYTE PTR [rcx],al
   140038454:	jns    0x140038445
   140038456:	mov    esi,DWORD PTR [rsp+0x20]
   14003845a:	add    DWORD PTR [rdi+0x8],esi
   14003845d:	and    DWORD PTR [rdi+0x18],0xffffffef
   140038461:	or     DWORD PTR [rdi+0x18],0x1
   140038465:	movzx  eax,bp
   140038468:	jmp    0x1400384a5
   14003846a:	mov    rax,QWORD PTR [rdi+0x10]
   14003846e:	lea    rcx,[rax+0x2]
   140038472:	cmp    QWORD PTR [rdi],rcx
   140038475:	jae    0x140038489
   140038477:	cmp    DWORD PTR [rdi+0x8],0x0
   14003847b:	jne    0x1400384a1
   14003847d:	movsxd rax,DWORD PTR [rdi+0x24]
   140038481:	cmp    rax,rsi
   140038484:	jb     0x1400384a1
   140038486:	mov    QWORD PTR [rdi],rcx
   140038489:	add    QWORD PTR [rdi],0xfffffffffffffffe
   14003848d:	test   BYTE PTR [rdi+0x18],0x40
   140038491:	mov    rax,QWORD PTR [rdi]
   140038494:	je     0x1400384cb
   140038496:	cmp    WORD PTR [rax],bp
   140038499:	je     0x14003845a
   14003849b:	add    rax,rsi
   14003849e:	mov    QWORD PTR [rdi],rax
   1400384a1:	movzx  eax,r15w
   1400384a5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400384aa:	xor    rcx,rsp
   1400384ad:	call   0x1400265a0
   1400384b2:	lea    r11,[rsp+0x40]
   1400384b7:	mov    rbx,QWORD PTR [r11+0x40]
   1400384bb:	mov    rbp,QWORD PTR [r11+0x48]
   1400384bf:	mov    rsp,r11
   1400384c2:	pop    r15
   1400384c4:	pop    r14
   1400384c6:	pop    r13
   1400384c8:	pop    rdi
   1400384c9:	pop    rsi
   1400384ca:	ret    
   1400384cb:	mov    WORD PTR [rax],bp
   1400384ce:	jmp    0x14003845a
   1400384d0:	rex push rbx
   1400384d2:	sub    rsp,0x40
   1400384d6:	cmp    DWORD PTR [rip+0x24133],0x0        # 0x14005c610
   1400384dd:	movsxd rbx,ecx
   1400384e0:	jne    0x1400384f2
   1400384e2:	mov    rax,QWORD PTR [rip+0x2164f]        # 0x140059b38
   1400384e9:	movzx  eax,WORD PTR [rax+rbx*2]
   1400384ed:	and    eax,0x4
   1400384f0:	jmp    0x140038544
   1400384f2:	lea    rcx,[rsp+0x20]
   1400384f7:	xor    edx,edx
   1400384f9:	call   0x140026f30
   1400384fe:	mov    rax,QWORD PTR [rsp+0x20]
   140038503:	cmp    DWORD PTR [rax+0xd4],0x1
   14003850a:	jle    0x140038521
   14003850c:	lea    r8,[rsp+0x20]
   140038511:	mov    edx,0x4
   140038516:	mov    ecx,ebx
   140038518:	call   0x140031b54
   14003851d:	mov    ecx,eax
   14003851f:	jmp    0x14003852f
   140038521:	mov    rax,QWORD PTR [rax+0x108]
   140038528:	movzx  ecx,WORD PTR [rax+rbx*2]
   14003852c:	and    ecx,0x4
   14003852f:	cmp    BYTE PTR [rsp+0x38],0x0
   140038534:	je     0x140038542
   140038536:	mov    rax,QWORD PTR [rsp+0x30]
   14003853b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140038542:	mov    eax,ecx
   140038544:	add    rsp,0x40
   140038548:	pop    rbx
   140038549:	ret    
   14003854a:	int3   
   14003854b:	int3   
   14003854c:	rex push rbx
   14003854e:	sub    rsp,0x40
   140038552:	cmp    DWORD PTR [rip+0x240b7],0x0        # 0x14005c610
   140038559:	movsxd rbx,ecx
   14003855c:	jne    0x140038570
   14003855e:	mov    rax,QWORD PTR [rip+0x215d3]        # 0x140059b38
   140038565:	movzx  eax,WORD PTR [rax+rbx*2]
   140038569:	and    eax,0x80
   14003856e:	jmp    0x1400385c5
   140038570:	lea    rcx,[rsp+0x20]
   140038575:	xor    edx,edx
   140038577:	call   0x140026f30
   14003857c:	mov    rax,QWORD PTR [rsp+0x20]
   140038581:	cmp    DWORD PTR [rax+0xd4],0x1
   140038588:	jle    0x14003859f
   14003858a:	lea    r8,[rsp+0x20]
   14003858f:	mov    edx,0x80
   140038594:	mov    ecx,ebx
   140038596:	call   0x140031b54
   14003859b:	mov    ecx,eax
   14003859d:	jmp    0x1400385b0
   14003859f:	mov    rax,QWORD PTR [rax+0x108]
   1400385a6:	movzx  ecx,WORD PTR [rax+rbx*2]
   1400385aa:	and    ecx,0x80
   1400385b0:	cmp    BYTE PTR [rsp+0x38],0x0
   1400385b5:	je     0x1400385c3
   1400385b7:	mov    rax,QWORD PTR [rsp+0x30]
   1400385bc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400385c3:	mov    eax,ecx
   1400385c5:	add    rsp,0x40
   1400385c9:	pop    rbx
   1400385ca:	ret    
   1400385cb:	int3   
   1400385cc:	mov    QWORD PTR [rsp+0x20],rbx
   1400385d1:	push   rbp
   1400385d2:	push   rsi
   1400385d3:	push   rdi
   1400385d4:	push   r12
   1400385d6:	push   r13
   1400385d8:	push   r14
   1400385da:	push   r15
   1400385dc:	mov    rbp,rsp
   1400385df:	sub    rsp,0x80
   1400385e6:	mov    rax,QWORD PTR [rip+0x20a9b]        # 0x140059088
   1400385ed:	xor    rax,rsp
   1400385f0:	mov    QWORD PTR [rbp-0x10],rax
   1400385f4:	xor    r12d,r12d
   1400385f7:	mov    rsi,r8
   1400385fa:	mov    r14,rdx
   1400385fd:	mov    r15,rcx
   140038600:	mov    ebx,r12d
   140038603:	mov    DWORD PTR [rbp-0x40],r12d
   140038607:	test   rcx,rcx
   14003860a:	je     0x140038618
   14003860c:	test   r8,r8
   14003860f:	jne    0x140038618
   140038611:	xor    eax,eax
   140038613:	jmp    0x1400388d3
   140038618:	test   rdx,rdx
   14003861b:	jne    0x140038636
   14003861d:	call   0x140029bf8
   140038622:	mov    DWORD PTR [rax],0x16
   140038628:	call   0x140029b2c
   14003862d:	or     rax,0xffffffffffffffff
   140038631:	jmp    0x1400388d3
   140038636:	lea    rcx,[rbp-0x38]
   14003863a:	mov    rdx,r9
   14003863d:	call   0x140026f30
   140038642:	test   r15,r15
   140038645:	je     0x14003882c
   14003864b:	mov    r13,QWORD PTR [rbp-0x38]
   14003864f:	cmp    QWORD PTR [r13+0x138],r12
   140038656:	jne    0x14003869f
   140038658:	test   rsi,rsi
   14003865b:	je     0x1400388bc
   140038661:	mov    ecx,0xff
   140038666:	cmp    WORD PTR [r14],cx
   14003866a:	ja     0x140038691
   14003866c:	mov    al,BYTE PTR [r14]
   14003866f:	mov    BYTE PTR [r15+rbx*1],al
   140038673:	movzx  eax,WORD PTR [r14]
   140038677:	add    r14,0x2
   14003867b:	test   ax,ax
   14003867e:	je     0x1400388bc
   140038684:	inc    rbx
   140038687:	cmp    rbx,rsi
   14003868a:	jb     0x140038666
   14003868c:	jmp    0x1400388bc
   140038691:	call   0x140029bf8
   140038696:	or     rbx,0xffffffffffffffff
   14003869a:	jmp    0x1400388b6
   14003869f:	cmp    DWORD PTR [r13+0xd4],0x1
   1400386a7:	jne    0x140038723
   1400386a9:	test   rsi,rsi
   1400386ac:	je     0x1400386da
   1400386ae:	mov    rax,r14
   1400386b1:	mov    rcx,rsi
   1400386b4:	cmp    WORD PTR [rax],r12w
   1400386b8:	je     0x1400386c3
   1400386ba:	add    rax,0x2
   1400386be:	dec    rcx
   1400386c1:	jne    0x1400386b4
   1400386c3:	test   rcx,rcx
   1400386c6:	je     0x1400386da
   1400386c8:	cmp    WORD PTR [rax],r12w
   1400386cc:	jne    0x1400386da
   1400386ce:	mov    rsi,rax
   1400386d1:	sub    rsi,r14
   1400386d4:	sar    rsi,1
   1400386d7:	inc    rsi
   1400386da:	mov    ecx,DWORD PTR [r13+0x4]
   1400386de:	lea    rax,[rbp-0x40]
   1400386e2:	mov    r9d,esi
   1400386e5:	mov    QWORD PTR [rsp+0x38],rax
   1400386ea:	mov    QWORD PTR [rsp+0x30],r12
   1400386ef:	mov    r8,r14
   1400386f2:	xor    edx,edx
   1400386f4:	mov    DWORD PTR [rsp+0x28],esi
   1400386f8:	mov    QWORD PTR [rsp+0x20],r15
   1400386fd:	call   QWORD PTR [rip+0x8c4d]        # 0x140041350
   140038703:	movsxd rbx,eax
   140038706:	test   eax,eax
   140038708:	je     0x140038691
   14003870a:	cmp    DWORD PTR [rbp-0x40],r12d
   14003870e:	jne    0x140038691
   140038710:	cmp    BYTE PTR [r15+rbx*1-0x1],r12b
   140038715:	jne    0x1400388bc
   14003871b:	dec    rbx
   14003871e:	jmp    0x1400388bc
   140038723:	mov    ecx,DWORD PTR [r13+0x4]
   140038727:	lea    rax,[rbp-0x40]
   14003872b:	or     rbx,0xffffffffffffffff
   14003872f:	mov    QWORD PTR [rsp+0x38],rax
   140038734:	mov    QWORD PTR [rsp+0x30],r12
   140038739:	mov    r9d,ebx
   14003873c:	mov    r8,r14
   14003873f:	xor    edx,edx
   140038741:	mov    DWORD PTR [rsp+0x28],esi
   140038745:	mov    QWORD PTR [rsp+0x20],r15
   14003874a:	call   QWORD PTR [rip+0x8c00]        # 0x140041350
   140038750:	movsxd rdi,eax
   140038753:	test   eax,eax
   140038755:	je     0x14003876a
   140038757:	cmp    DWORD PTR [rbp-0x40],r12d
   14003875b:	jne    0x1400388b1
   140038761:	lea    rbx,[rdi-0x1]
   140038765:	jmp    0x1400388bc
   14003876a:	cmp    DWORD PTR [rbp-0x40],r12d
   14003876e:	jne    0x1400388b1
   140038774:	call   QWORD PTR [rip+0x8c5e]        # 0x1400413d8
   14003877a:	cmp    eax,0x7a
   14003877d:	jne    0x1400388b1
   140038783:	test   rsi,rsi
   140038786:	je     0x1400388bf
   14003878c:	mov    ecx,DWORD PTR [r13+0x4]
   140038790:	lea    rax,[rbp-0x40]
   140038794:	mov    r9d,0x1
   14003879a:	mov    QWORD PTR [rsp+0x38],rax
   14003879f:	mov    eax,DWORD PTR [r13+0xd4]
   1400387a6:	mov    QWORD PTR [rsp+0x30],r12
   1400387ab:	mov    DWORD PTR [rsp+0x28],eax
   1400387af:	lea    rax,[rbp-0x18]
   1400387b3:	mov    r8,r14
   1400387b6:	xor    edx,edx
   1400387b8:	mov    QWORD PTR [rsp+0x20],rax
   1400387bd:	call   QWORD PTR [rip+0x8b8d]        # 0x140041350
   1400387c3:	test   eax,eax
   1400387c5:	je     0x1400388b1
   1400387cb:	cmp    DWORD PTR [rbp-0x40],r12d
   1400387cf:	jne    0x1400388b1
   1400387d5:	test   eax,eax
   1400387d7:	js     0x1400388b1
   1400387dd:	movsxd rdx,eax
   1400387e0:	cmp    rdx,0x5
   1400387e4:	ja     0x1400388b1
   1400387ea:	lea    rax,[rdx+rdi*1]
   1400387ee:	cmp    rax,rsi
   1400387f1:	ja     0x1400388bf
   1400387f7:	mov    rcx,r12
   1400387fa:	test   rdx,rdx
   1400387fd:	jle    0x14003881a
   1400387ff:	mov    al,BYTE PTR [rbp+rcx*1-0x18]
   140038803:	mov    BYTE PTR [r15+rdi*1],al
   140038807:	test   al,al
   140038809:	je     0x1400388bf
   14003880f:	inc    rcx
   140038812:	inc    rdi
   140038815:	cmp    rcx,rdx
   140038818:	jl     0x1400387ff
   14003881a:	add    r14,0x2
   14003881e:	cmp    rdi,rsi
   140038821:	jae    0x1400388bf
   140038827:	jmp    0x14003878c
   14003882c:	mov    rax,QWORD PTR [rbp-0x38]
   140038830:	cmp    QWORD PTR [rax+0x138],r12
   140038837:	jne    0x140038872
   140038839:	movzx  eax,WORD PTR [r14]
   14003883d:	mov    rdi,r12
   140038840:	test   ax,ax
   140038843:	je     0x1400388bf
   140038845:	mov    ecx,0xff
   14003884a:	cmp    ax,cx
   14003884d:	ja     0x140038861
   14003884f:	add    r14,0x2
   140038853:	inc    rdi
   140038856:	movzx  eax,WORD PTR [r14]
   14003885a:	test   ax,ax
   14003885d:	jne    0x14003884a
   14003885f:	jmp    0x1400388bf
   140038861:	call   0x140029bf8
   140038866:	or     rdi,0xffffffffffffffff
   14003886a:	mov    DWORD PTR [rax],0x2a
   140038870:	jmp    0x1400388bf
   140038872:	lea    rcx,[rbp-0x40]
   140038876:	or     rbx,0xffffffffffffffff
   14003887a:	mov    r8,r14
   14003887d:	mov    QWORD PTR [rsp+0x38],rcx
   140038882:	mov    ecx,DWORD PTR [rax+0x4]
   140038885:	mov    QWORD PTR [rsp+0x30],r12
   14003888a:	mov    r9d,ebx
   14003888d:	xor    edx,edx
   14003888f:	mov    DWORD PTR [rsp+0x28],r12d
   140038894:	mov    QWORD PTR [rsp+0x20],r12
   140038899:	call   QWORD PTR [rip+0x8ab1]        # 0x140041350
   14003889f:	movsxd rdi,eax
   1400388a2:	test   eax,eax
   1400388a4:	je     0x1400388b1
   1400388a6:	cmp    DWORD PTR [rbp-0x40],r12d
   1400388aa:	jne    0x1400388b1
   1400388ac:	dec    rdi
   1400388af:	jmp    0x1400388bf
   1400388b1:	call   0x140029bf8
   1400388b6:	mov    DWORD PTR [rax],0x2a
   1400388bc:	mov    rdi,rbx
   1400388bf:	cmp    BYTE PTR [rbp-0x20],r12b
   1400388c3:	je     0x1400388d0
   1400388c5:	mov    rcx,QWORD PTR [rbp-0x28]
   1400388c9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400388d0:	mov    rax,rdi
   1400388d3:	mov    rcx,QWORD PTR [rbp-0x10]
   1400388d7:	xor    rcx,rsp
   1400388da:	call   0x1400265a0
   1400388df:	mov    rbx,QWORD PTR [rsp+0xd8]
   1400388e7:	add    rsp,0x80
   1400388ee:	pop    r15
   1400388f0:	pop    r14
   1400388f2:	pop    r13
   1400388f4:	pop    r12
   1400388f6:	pop    rdi
   1400388f7:	pop    rsi
   1400388f8:	pop    rbp
   1400388f9:	ret    
   1400388fa:	int3   
   1400388fb:	int3   
   1400388fc:	mov    QWORD PTR [rsp+0x8],rbx
   140038901:	mov    QWORD PTR [rsp+0x10],rsi
   140038906:	mov    QWORD PTR [rsp+0x18],rdi
   14003890b:	push   r14
   14003890d:	sub    rsp,0x20
   140038911:	xor    r14d,r14d
   140038914:	mov    rax,r9
   140038917:	mov    rdi,r8
   14003891a:	mov    rbx,rdx
   14003891d:	mov    rsi,rcx
   140038920:	test   rdx,rdx
   140038923:	je     0x140038976
   140038925:	test   r8,r8
   140038928:	je     0x14003897b
   14003892a:	test   rdx,rdx
   14003892d:	je     0x140038932
   14003892f:	mov    BYTE PTR [rdx],r14b
   140038932:	test   rcx,rcx
   140038935:	je     0x14003893a
   140038937:	and    QWORD PTR [rcx],r14
   14003893a:	mov    r8,QWORD PTR [rsp+0x50]
   14003893f:	cmp    r8,rdi
   140038942:	cmova  r8,rdi
   140038946:	cmp    r8,0x7fffffff
   14003894d:	ja     0x14003897b
   14003894f:	mov    r9,QWORD PTR [rsp+0x58]
   140038954:	mov    rdx,rax
   140038957:	mov    rcx,rbx
   14003895a:	call   0x1400385cc
   14003895f:	cmp    rax,0xffffffffffffffff
   140038963:	jne    0x140038990
   140038965:	test   rbx,rbx
   140038968:	je     0x14003896d
   14003896a:	mov    BYTE PTR [rbx],r14b
   14003896d:	call   0x140029bf8
   140038972:	mov    eax,DWORD PTR [rax]
   140038974:	jmp    0x1400389d2
   140038976:	test   r8,r8
   140038979:	je     0x14003892a
   14003897b:	call   0x140029bf8
   140038980:	mov    ebx,0x16
   140038985:	mov    DWORD PTR [rax],ebx
   140038987:	call   0x140029b2c
   14003898c:	mov    eax,ebx
   14003898e:	jmp    0x1400389d2
   140038990:	inc    rax
   140038993:	test   rbx,rbx
   140038996:	je     0x1400389c7
   140038998:	cmp    rax,rdi
   14003899b:	jbe    0x1400389c2
   14003899d:	cmp    QWORD PTR [rsp+0x50],0xffffffffffffffff
   1400389a3:	je     0x1400389b9
   1400389a5:	mov    BYTE PTR [rbx],r14b
   1400389a8:	cmp    rdi,rax
   1400389ab:	ja     0x1400389b9
   1400389ad:	call   0x140029bf8
   1400389b2:	mov    ebx,0x22
   1400389b7:	jmp    0x140038985
   1400389b9:	mov    rax,rdi
   1400389bc:	mov    r14d,0x50
   1400389c2:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   1400389c7:	test   rsi,rsi
   1400389ca:	je     0x1400389cf
   1400389cc:	mov    QWORD PTR [rsi],rax
   1400389cf:	mov    eax,r14d
   1400389d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400389d7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400389dc:	mov    rdi,QWORD PTR [rsp+0x40]
   1400389e1:	add    rsp,0x20
   1400389e5:	pop    r14
   1400389e7:	ret    
   1400389e8:	sub    rsp,0x38
   1400389ec:	mov    rax,QWORD PTR [rsp+0x60]
   1400389f1:	and    QWORD PTR [rsp+0x28],0x0
   1400389f7:	mov    QWORD PTR [rsp+0x20],rax
   1400389fc:	call   0x1400388fc
   140038a01:	add    rsp,0x38
   140038a05:	ret    
   140038a06:	int3   
   140038a07:	int3   
   140038a08:	mov    r10,rcx
   140038a0b:	test   r8,r8
   140038a0e:	je     0x140038a4b
   140038a10:	movzx  r9d,BYTE PTR [r10]
   140038a14:	inc    r10
   140038a17:	lea    eax,[r9-0x41]
   140038a1b:	cmp    eax,0x19
   140038a1e:	ja     0x140038a24
   140038a20:	add    r9d,0x20
   140038a24:	movzx  ecx,BYTE PTR [rdx]
   140038a27:	inc    rdx
   140038a2a:	lea    eax,[rcx-0x41]
   140038a2d:	cmp    eax,0x19
   140038a30:	ja     0x140038a35
   140038a32:	add    ecx,0x20
   140038a35:	dec    r8
   140038a38:	je     0x140038a44
   140038a3a:	test   r9d,r9d
   140038a3d:	je     0x140038a44
   140038a3f:	cmp    r9d,ecx
   140038a42:	je     0x140038a10
   140038a44:	sub    r9d,ecx
   140038a47:	mov    eax,r9d
   140038a4a:	ret    
   140038a4b:	xor    eax,eax
   140038a4d:	ret    
   140038a4e:	int3   
   140038a4f:	int3   
   140038a50:	sub    rsp,0x28
   140038a54:	cmp    DWORD PTR [rip+0x23bb5],0x0        # 0x14005c610
   140038a5b:	jne    0x140038a93
   140038a5d:	test   rcx,rcx
   140038a60:	jne    0x140038a7c
   140038a62:	call   0x140029bf8
   140038a67:	mov    DWORD PTR [rax],0x16
   140038a6d:	call   0x140029b2c
   140038a72:	mov    eax,0x7fffffff
   140038a77:	add    rsp,0x28
   140038a7b:	ret    
   140038a7c:	test   rdx,rdx
   140038a7f:	je     0x140038a62
   140038a81:	cmp    r8,0x7fffffff
   140038a88:	ja     0x140038a62
   140038a8a:	add    rsp,0x28
   140038a8e:	jmp    0x140038a08
   140038a93:	xor    r9d,r9d
   140038a96:	add    rsp,0x28
   140038a9a:	jmp    0x140038aa0
   140038a9f:	int3   
   140038aa0:	mov    rax,rsp
   140038aa3:	mov    QWORD PTR [rax+0x8],rbx
   140038aa7:	mov    QWORD PTR [rax+0x10],rbp
   140038aab:	mov    QWORD PTR [rax+0x18],rsi
   140038aaf:	push   rdi
   140038ab0:	sub    rsp,0x40
   140038ab4:	mov    rbp,r8
   140038ab7:	mov    rdi,rdx
   140038aba:	mov    rsi,rcx
   140038abd:	test   r8,r8
   140038ac0:	je     0x140038b62
   140038ac6:	lea    rcx,[rax-0x28]
   140038aca:	mov    rdx,r9
   140038acd:	call   0x140026f30
   140038ad2:	mov    ebx,0x7fffffff
   140038ad7:	test   rsi,rsi
   140038ada:	je     0x140038ae6
   140038adc:	test   rdi,rdi
   140038adf:	je     0x140038ae6
   140038ae1:	cmp    rbp,rbx
   140038ae4:	jbe    0x140038af8
   140038ae6:	call   0x140029bf8
   140038aeb:	mov    DWORD PTR [rax],0x16
   140038af1:	call   0x140029b2c
   140038af6:	jmp    0x140038b4b
   140038af8:	mov    rax,QWORD PTR [rsp+0x20]
   140038afd:	cmp    QWORD PTR [rax+0x138],0x0
   140038b05:	jne    0x140038b19
   140038b07:	mov    r8,rbp
   140038b0a:	mov    rdx,rdi
   140038b0d:	mov    rcx,rsi
   140038b10:	call   0x140038a08
   140038b15:	mov    ebx,eax
   140038b17:	jmp    0x140038b4b
   140038b19:	sub    rsi,rdi
   140038b1c:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140038b20:	lea    rdx,[rsp+0x20]
   140038b25:	call   0x140037758
   140038b2a:	movzx  ecx,BYTE PTR [rdi]
   140038b2d:	lea    rdx,[rsp+0x20]
   140038b32:	mov    ebx,eax
   140038b34:	call   0x140037758
   140038b39:	inc    rdi
   140038b3c:	dec    rbp
   140038b3f:	je     0x140038b49
   140038b41:	test   ebx,ebx
   140038b43:	je     0x140038b49
   140038b45:	cmp    ebx,eax
   140038b47:	je     0x140038b1c
   140038b49:	sub    ebx,eax
   140038b4b:	cmp    BYTE PTR [rsp+0x38],0x0
   140038b50:	je     0x140038b5e
   140038b52:	mov    rax,QWORD PTR [rsp+0x30]
   140038b57:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140038b5e:	mov    eax,ebx
   140038b60:	jmp    0x140038b64
   140038b62:	xor    eax,eax
   140038b64:	mov    rbx,QWORD PTR [rsp+0x50]
   140038b69:	mov    rbp,QWORD PTR [rsp+0x58]
   140038b6e:	mov    rsi,QWORD PTR [rsp+0x60]
   140038b73:	add    rsp,0x40
   140038b77:	pop    rdi
   140038b78:	ret    
   140038b79:	int3   
   140038b7a:	int3   
   140038b7b:	int3   
   140038b7c:	mov    rax,rsp
   140038b7f:	mov    QWORD PTR [rax+0x8],rbx
   140038b83:	mov    QWORD PTR [rax+0x10],rbp
   140038b87:	mov    QWORD PTR [rax+0x18],rsi
   140038b8b:	mov    QWORD PTR [rax+0x20],rdi
   140038b8f:	push   r14
   140038b91:	sub    rsp,0x20
   140038b95:	mov    rbx,QWORD PTR [r9+0x38]
   140038b99:	mov    rsi,rdx
   140038b9c:	mov    r14,r8
   140038b9f:	mov    rbp,rcx
   140038ba2:	lea    r8,[rbx+0x4]
   140038ba6:	mov    rdx,r9
   140038ba9:	mov    rcx,rsi
   140038bac:	mov    rdi,r9
   140038baf:	call   0x14002e55c
   140038bb4:	mov    r11d,DWORD PTR [rbx+0x4]
   140038bb8:	mov    r10d,DWORD PTR [rbp+0x4]
   140038bbc:	mov    eax,r11d
   140038bbf:	and    r11d,0x2
   140038bc3:	mov    r8d,0x1
   140038bc9:	and    eax,r8d
   140038bcc:	and    r10b,0x66
   140038bd0:	cmove  r11d,eax
   140038bd4:	test   r11d,r11d
   140038bd7:	je     0x140038bed
   140038bd9:	mov    r9,rdi
   140038bdc:	mov    r8,r14
   140038bdf:	mov    rdx,rsi
   140038be2:	mov    rcx,rbp
   140038be5:	call   0x140032ca4
   140038bea:	mov    r8d,eax
   140038bed:	mov    rbx,QWORD PTR [rsp+0x30]
   140038bf2:	mov    rbp,QWORD PTR [rsp+0x38]
   140038bf7:	mov    rsi,QWORD PTR [rsp+0x40]
   140038bfc:	mov    rdi,QWORD PTR [rsp+0x48]
   140038c01:	mov    eax,r8d
   140038c04:	add    rsp,0x20
   140038c08:	pop    r14
   140038c0a:	ret    
   140038c0b:	int3   
   140038c0c:	jmp    0x140038c14
   140038c11:	int3   
   140038c12:	int3   
   140038c13:	int3   
   140038c14:	lea    rax,[rip+0xb35]        # 0x140039750
   140038c1b:	lea    rcx,[rip+0x7a]        # 0x140038c9c
   140038c22:	mov    QWORD PTR [rip+0x2159f],rax        # 0x14005a1c8
   140038c29:	lea    rax,[rip+0xbc0]        # 0x1400397f0
   140038c30:	mov    QWORD PTR [rip+0x21589],rcx        # 0x14005a1c0
   140038c37:	mov    QWORD PTR [rip+0x21592],rax        # 0x14005a1d0
   140038c3e:	lea    rax,[rip+0xbf3]        # 0x140039838
   140038c45:	mov    QWORD PTR [rip+0x2159c],rcx        # 0x14005a1e8
   140038c4c:	mov    QWORD PTR [rip+0x21585],rax        # 0x14005a1d8
   140038c53:	lea    rax,[rip+0xc66]        # 0x1400398c0
   140038c5a:	mov    QWORD PTR [rip+0x2157f],rax        # 0x14005a1e0
   140038c61:	lea    rax,[rip+0x58]        # 0x140038cc0
   140038c68:	mov    QWORD PTR [rip+0x21581],rax        # 0x14005a1f0
   140038c6f:	lea    rax,[rip+0xb82]        # 0x1400397f8
   140038c76:	mov    QWORD PTR [rip+0x2157b],rax        # 0x14005a1f8
   140038c7d:	lea    rax,[rip+0xad4]        # 0x140039758
   140038c84:	mov    QWORD PTR [rip+0x21575],rax        # 0x14005a200
   140038c8b:	lea    rax,[rip+0xbae]        # 0x140039840
   140038c92:	mov    QWORD PTR [rip+0x2156f],rax        # 0x14005a208
   140038c99:	ret    
   140038c9a:	int3   
   140038c9b:	int3   
   140038c9c:	sub    rsp,0x48
   140038ca0:	mov    eax,DWORD PTR [rsp+0x78]
   140038ca4:	and    QWORD PTR [rsp+0x30],0x0
   140038caa:	mov    DWORD PTR [rsp+0x28],eax
   140038cae:	mov    eax,DWORD PTR [rsp+0x70]
   140038cb2:	mov    DWORD PTR [rsp+0x20],eax
   140038cb6:	call   0x140038cc0
   140038cbb:	add    rsp,0x48
   140038cbf:	ret    
   140038cc0:	sub    rsp,0x38
   140038cc4:	lea    eax,[r9-0x45]
   140038cc8:	mov    r10d,0xffffffdf
   140038cce:	test   r10d,eax
   140038cd1:	je     0x140038d1d
   140038cd3:	cmp    r9d,0x66
   140038cd7:	jne    0x140038cef
   140038cd9:	mov    rax,QWORD PTR [rsp+0x70]
   140038cde:	mov    r9d,DWORD PTR [rsp+0x60]
   140038ce3:	mov    QWORD PTR [rsp+0x20],rax
   140038ce8:	call   0x140039548
   140038ced:	jmp    0x140038d39
   140038cef:	lea    eax,[r9-0x41]
   140038cf3:	mov    r9d,DWORD PTR [rsp+0x60]
   140038cf8:	test   r10d,eax
   140038cfb:	mov    rax,QWORD PTR [rsp+0x70]
   140038d00:	mov    QWORD PTR [rsp+0x28],rax
   140038d05:	mov    eax,DWORD PTR [rsp+0x68]
   140038d09:	mov    DWORD PTR [rsp+0x20],eax
   140038d0d:	je     0x140038d16
   140038d0f:	call   0x14003961c
   140038d14:	jmp    0x140038d39
   140038d16:	call   0x140038d40
   140038d1b:	jmp    0x140038d39
   140038d1d:	mov    rax,QWORD PTR [rsp+0x70]
   140038d22:	mov    r9d,DWORD PTR [rsp+0x60]
   140038d27:	mov    QWORD PTR [rsp+0x28],rax
   140038d2c:	mov    eax,DWORD PTR [rsp+0x68]
   140038d30:	mov    DWORD PTR [rsp+0x20],eax
   140038d34:	call   0x1400392ec
   140038d39:	add    rsp,0x38
   140038d3d:	ret    
   140038d3e:	int3   
   140038d3f:	int3   
   140038d40:	mov    rax,rsp
   140038d43:	mov    QWORD PTR [rax+0x8],rbx
   140038d47:	mov    QWORD PTR [rax+0x10],rbp
   140038d4b:	mov    QWORD PTR [rax+0x18],rsi
   140038d4f:	push   rdi
   140038d50:	push   r12
   140038d52:	push   r13
   140038d54:	push   r14
   140038d56:	push   r15
   140038d58:	sub    rsp,0x50
   140038d5c:	mov    rdi,rdx
   140038d5f:	mov    rdx,QWORD PTR [rsp+0xa8]
   140038d67:	mov    r14,rcx
   140038d6a:	lea    rcx,[rax-0x48]
   140038d6e:	mov    r15d,0x30
   140038d74:	mov    ebx,r9d
   140038d77:	mov    rsi,r8
   140038d7a:	mov    r12d,0x3ff
   140038d80:	movzx  ebp,r15w
   140038d84:	call   0x140026f30
   140038d89:	xor    r9d,r9d
   140038d8c:	test   ebx,ebx
   140038d8e:	cmovs  ebx,r9d
   140038d92:	test   rdi,rdi
   140038d95:	jne    0x140038da3
   140038d97:	call   0x140029bf8
   140038d9c:	mov    ebx,0x16
   140038da1:	jmp    0x140038dc0
   140038da3:	test   rsi,rsi
   140038da6:	je     0x140038d97
   140038da8:	lea    eax,[rbx+0xb]
   140038dab:	mov    BYTE PTR [rdi],r9b
   140038dae:	movsxd rcx,eax
   140038db1:	cmp    rsi,rcx
   140038db4:	ja     0x140038dcf
   140038db6:	call   0x140029bf8
   140038dbb:	mov    ebx,0x22
   140038dc0:	mov    DWORD PTR [rax],ebx
   140038dc2:	call   0x140029b2c
   140038dc7:	xor    r9d,r9d
   140038dca:	jmp    0x1400390bd
   140038dcf:	mov    rax,QWORD PTR [r14]
   140038dd2:	mov    ecx,0x7ff
   140038dd7:	shr    rax,0x34
   140038ddb:	and    rax,rcx
   140038dde:	cmp    rax,rcx
   140038de1:	jne    0x140038e79
   140038de7:	mov    QWORD PTR [rsp+0x28],r9
   140038dec:	mov    DWORD PTR [rsp+0x20],r9d
   140038df1:	lea    r8,[rsi-0x2]
   140038df5:	cmp    rsi,0xffffffffffffffff
   140038df9:	lea    rdx,[rdi+0x2]
   140038dfd:	mov    r9d,ebx
   140038e00:	cmove  r8,rsi
   140038e04:	mov    rcx,r14
   140038e07:	call   0x1400392ec
   140038e0c:	xor    r9d,r9d
   140038e0f:	mov    ebx,eax
   140038e11:	test   eax,eax
   140038e13:	je     0x140038e1d
   140038e15:	mov    BYTE PTR [rdi],r9b
   140038e18:	jmp    0x1400390bd
   140038e1d:	cmp    BYTE PTR [rdi+0x2],0x2d
   140038e21:	mov    esi,0x1
   140038e26:	jne    0x140038e2e
   140038e28:	mov    BYTE PTR [rdi],0x2d
   140038e2b:	add    rdi,rsi
   140038e2e:	mov    ebx,DWORD PTR [rsp+0xa0]
   140038e35:	mov    BYTE PTR [rdi],r15b
   140038e38:	mov    edx,0x65
   140038e3d:	mov    eax,ebx
   140038e3f:	neg    eax
   140038e41:	sbb    cl,cl
   140038e43:	and    cl,0xe0
   140038e46:	add    cl,0x78
   140038e49:	mov    BYTE PTR [rdi+rsi*1],cl
   140038e4c:	lea    rcx,[rsi+0x1]
   140038e50:	add    rcx,rdi
   140038e53:	call   0x1400398d4
   140038e58:	xor    r9d,r9d
   140038e5b:	test   rax,rax
   140038e5e:	je     0x1400390ba
   140038e64:	neg    ebx
   140038e66:	sbb    cl,cl
   140038e68:	and    cl,0xe0
   140038e6b:	add    cl,0x70
   140038e6e:	mov    BYTE PTR [rax],cl
   140038e70:	mov    BYTE PTR [rax+0x3],r9b
   140038e74:	jmp    0x1400390ba
   140038e79:	movabs rax,0x8000000000000000
   140038e83:	mov    esi,0x1
   140038e88:	test   QWORD PTR [r14],rax
   140038e8b:	je     0x140038e93
   140038e8d:	mov    BYTE PTR [rdi],0x2d
   140038e90:	add    rdi,rsi
   140038e93:	mov    r13d,DWORD PTR [rsp+0xa0]
   140038e9b:	mov    r10d,r15d
   140038e9e:	movabs r11,0xfffffffffffff
   140038ea8:	mov    BYTE PTR [rdi],r10b
   140038eab:	add    rdi,rsi
   140038eae:	mov    eax,r13d
   140038eb1:	neg    eax
   140038eb3:	mov    eax,r13d
   140038eb6:	sbb    cl,cl
   140038eb8:	and    cl,0xe0
   140038ebb:	add    cl,0x78
   140038ebe:	mov    BYTE PTR [rdi],cl
   140038ec0:	add    rdi,rsi
   140038ec3:	neg    eax
   140038ec5:	sbb    edx,edx
   140038ec7:	movabs rax,0x7ff0000000000000
   140038ed1:	and    edx,0xffffffe0
   140038ed4:	sub    edx,0xffffffd9
   140038ed7:	test   QWORD PTR [r14],rax
   140038eda:	jne    0x140038ef7
   140038edc:	mov    BYTE PTR [rdi],r10b
   140038edf:	mov    rax,QWORD PTR [r14]
   140038ee2:	add    rdi,rsi
   140038ee5:	and    rax,r11
   140038ee8:	neg    rax
   140038eeb:	sbb    r12,r12
   140038eee:	and    r12d,0x3fe
   140038ef5:	jmp    0x140038efd
   140038ef7:	mov    BYTE PTR [rdi],0x31
   140038efa:	add    rdi,rsi
   140038efd:	mov    r15,rdi
   140038f00:	add    rdi,rsi
   140038f03:	test   ebx,ebx
   140038f05:	jne    0x140038f0c
   140038f07:	mov    BYTE PTR [r15],r9b
   140038f0a:	jmp    0x140038f20
   140038f0c:	mov    rax,QWORD PTR [rsp+0x30]
   140038f11:	mov    rcx,QWORD PTR [rax+0xf0]
   140038f18:	mov    rax,QWORD PTR [rcx]
   140038f1b:	mov    cl,BYTE PTR [rax]
   140038f1d:	mov    BYTE PTR [r15],cl
   140038f20:	test   QWORD PTR [r14],r11
   140038f23:	jbe    0x140038fb1
   140038f29:	movabs r8,0xf000000000000
   140038f33:	test   ebx,ebx
   140038f35:	jle    0x140038f64
   140038f37:	mov    rax,QWORD PTR [r14]
   140038f3a:	mov    cl,bpl
   140038f3d:	and    rax,r8
   140038f40:	and    rax,r11
   140038f43:	shr    rax,cl
   140038f46:	add    ax,r10w
   140038f4a:	cmp    ax,0x39
   140038f4e:	jbe    0x140038f53
   140038f50:	add    ax,dx
   140038f53:	mov    BYTE PTR [rdi],al
   140038f55:	shr    r8,0x4
   140038f59:	sub    ebx,esi
   140038f5b:	add    rdi,rsi
   140038f5e:	add    bp,0xfffc
   140038f62:	jns    0x140038f33
   140038f64:	test   bp,bp
   140038f67:	js     0x140038fb1
   140038f69:	mov    rax,QWORD PTR [r14]
   140038f6c:	mov    cl,bpl
   140038f6f:	and    rax,r8
   140038f72:	and    rax,r11
   140038f75:	shr    rax,cl
   140038f78:	cmp    ax,0x8
   140038f7c:	jbe    0x140038fb1
   140038f7e:	lea    rcx,[rdi-0x1]
   140038f82:	mov    al,BYTE PTR [rcx]
   140038f84:	sub    al,0x46
   140038f86:	test   al,0xdf
   140038f88:	jne    0x140038f92
   140038f8a:	mov    BYTE PTR [rcx],r10b
   140038f8d:	sub    rcx,rsi
   140038f90:	jmp    0x140038f82
   140038f92:	cmp    rcx,r15
   140038f95:	je     0x140038fab
   140038f97:	mov    al,BYTE PTR [rcx]
   140038f99:	cmp    al,0x39
   140038f9b:	jne    0x140038fa4
   140038f9d:	add    dl,0x3a
   140038fa0:	mov    BYTE PTR [rcx],dl
   140038fa2:	jmp    0x140038fb1
   140038fa4:	add    al,sil
   140038fa7:	mov    BYTE PTR [rcx],al
   140038fa9:	jmp    0x140038fb1
   140038fab:	sub    rcx,rsi
   140038fae:	add    BYTE PTR [rcx],sil
   140038fb1:	test   ebx,ebx
   140038fb3:	jle    0x140038fcd
   140038fb5:	mov    r8,rbx
   140038fb8:	mov    dl,r10b
   140038fbb:	mov    rcx,rdi
   140038fbe:	call   0x14002bb90
   140038fc3:	add    rdi,rbx
   140038fc6:	xor    r9d,r9d
   140038fc9:	lea    r10d,[r9+0x30]
   140038fcd:	cmp    BYTE PTR [r15],r9b
   140038fd0:	cmove  rdi,r15
   140038fd4:	neg    r13d
   140038fd7:	sbb    al,al
   140038fd9:	and    al,0xe0
   140038fdb:	add    al,0x70
   140038fdd:	mov    BYTE PTR [rdi],al
   140038fdf:	mov    rcx,QWORD PTR [r14]
   140038fe2:	add    rdi,rsi
   140038fe5:	shr    rcx,0x34
   140038fe9:	and    ecx,0x7ff
   140038fef:	sub    rcx,r12
   140038ff2:	js     0x140038ffc
   140038ff4:	mov    BYTE PTR [rdi],0x2b
   140038ff7:	add    rdi,rsi
   140038ffa:	jmp    0x140039005
   140038ffc:	mov    BYTE PTR [rdi],0x2d
   140038fff:	add    rdi,rsi
   140039002:	neg    rcx
   140039005:	mov    r8,rdi
   140039008:	mov    BYTE PTR [rdi],r10b
   14003900b:	cmp    rcx,0x3e8
   140039012:	jl     0x140039047
   140039014:	movabs rax,0x20c49ba5e353f7cf
   14003901e:	imul   rcx
   140039021:	sar    rdx,0x7
   140039025:	mov    rax,rdx
   140039028:	shr    rax,0x3f
   14003902c:	add    rdx,rax
   14003902f:	lea    eax,[r10+rdx*1]
   140039033:	imul   rdx,rdx,0xfffffffffffffc18
   14003903a:	mov    BYTE PTR [rdi],al
   14003903c:	add    rdi,rsi
   14003903f:	add    rcx,rdx
   140039042:	cmp    rdi,r8
   140039045:	jne    0x14003904d
   140039047:	cmp    rcx,0x64
   14003904b:	jl     0x14003907b
   14003904d:	movabs rax,0xa3d70a3d70a3d70b
   140039057:	imul   rcx
   14003905a:	add    rdx,rcx
   14003905d:	sar    rdx,0x6
   140039061:	mov    rax,rdx
   140039064:	shr    rax,0x3f
   140039068:	add    rdx,rax
   14003906b:	lea    eax,[r10+rdx*1]
   14003906f:	imul   rdx,rdx,0xffffffffffffff9c
   140039073:	mov    BYTE PTR [rdi],al
   140039075:	add    rdi,rsi
   140039078:	add    rcx,rdx
   14003907b:	cmp    rdi,r8
   14003907e:	jne    0x140039086
   140039080:	cmp    rcx,0xa
   140039084:	jl     0x1400390b1
   140039086:	movabs rax,0x6666666666666667
   140039090:	imul   rcx
   140039093:	sar    rdx,0x2
   140039097:	mov    rax,rdx
   14003909a:	shr    rax,0x3f
   14003909e:	add    rdx,rax
   1400390a1:	lea    eax,[r10+rdx*1]
   1400390a5:	imul   rdx,rdx,0xfffffffffffffff6
   1400390a9:	mov    BYTE PTR [rdi],al
   1400390ab:	add    rdi,rsi
   1400390ae:	add    rcx,rdx
   1400390b1:	add    cl,r10b
   1400390b4:	mov    BYTE PTR [rdi],cl
   1400390b6:	mov    BYTE PTR [rdi+0x1],r9b
   1400390ba:	mov    ebx,r9d
   1400390bd:	cmp    BYTE PTR [rsp+0x48],r9b
   1400390c2:	je     0x1400390d0
   1400390c4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400390c9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400390d0:	lea    r11,[rsp+0x50]
   1400390d5:	mov    eax,ebx
   1400390d7:	mov    rbx,QWORD PTR [r11+0x30]
   1400390db:	mov    rbp,QWORD PTR [r11+0x38]
   1400390df:	mov    rsi,QWORD PTR [r11+0x40]
   1400390e3:	mov    rsp,r11
   1400390e6:	pop    r15
   1400390e8:	pop    r14
   1400390ea:	pop    r13
   1400390ec:	pop    r12
   1400390ee:	pop    rdi
   1400390ef:	ret    
   1400390f0:	mov    rax,rsp
   1400390f3:	mov    QWORD PTR [rax+0x8],rbx
   1400390f7:	mov    QWORD PTR [rax+0x10],rbp
   1400390fb:	mov    QWORD PTR [rax+0x18],rsi
   1400390ff:	mov    QWORD PTR [rax+0x20],rdi
   140039103:	push   r13
   140039105:	push   r14
   140039107:	push   r15
   140039109:	sub    rsp,0x50
   14003910d:	mov    r14,rdx
   140039110:	mov    rdx,QWORD PTR [rsp+0xa0]
   140039118:	mov    rdi,rcx
   14003911b:	lea    rcx,[rax-0x38]
   14003911f:	mov    r13d,r9d
   140039122:	movsxd rsi,r8d
   140039125:	call   0x140026f30
   14003912a:	test   rdi,rdi
   14003912d:	je     0x140039134
   14003912f:	test   r14,r14
   140039132:	jne    0x140039140
   140039134:	call   0x140029bf8
   140039139:	mov    ebx,0x16
   14003913e:	jmp    0x14003915b
   140039140:	xor    eax,eax
   140039142:	test   esi,esi
   140039144:	cmovg  eax,esi
   140039147:	add    eax,0x9
   14003914a:	cdqe   
   14003914c:	cmp    r14,rax
   14003914f:	ja     0x140039167
   140039151:	call   0x140029bf8
   140039156:	mov    ebx,0x22
   14003915b:	mov    DWORD PTR [rax],ebx
   14003915d:	call   0x140029b2c
   140039162:	jmp    0x14003929f
   140039167:	cmp    BYTE PTR [rsp+0x98],0x0
   14003916f:	mov    rbp,QWORD PTR [rsp+0x90]
   140039177:	je     0x1400391ad
   140039179:	xor    ebx,ebx
   14003917b:	cmp    DWORD PTR [rbp+0x0],0x2d
   14003917f:	sete   bl
   140039182:	xor    r15d,r15d
   140039185:	add    rbx,rdi
   140039188:	test   esi,esi
   14003918a:	setg   r15b
   14003918e:	test   r15d,r15d
   140039191:	je     0x1400391ad
   140039193:	mov    rcx,rbx
   140039196:	call   0x14002e0d0
   14003919b:	movsxd rcx,r15d
   14003919e:	mov    rdx,rbx
   1400391a1:	lea    r8,[rax+0x1]
   1400391a5:	add    rcx,rbx
   1400391a8:	call   0x1400265d0
   1400391ad:	cmp    DWORD PTR [rbp+0x0],0x2d
   1400391b1:	mov    rdx,rdi
   1400391b4:	jne    0x1400391bd
   1400391b6:	mov    BYTE PTR [rdi],0x2d
   1400391b9:	lea    rdx,[rdi+0x1]
   1400391bd:	test   esi,esi
   1400391bf:	jle    0x1400391dc
   1400391c1:	mov    al,BYTE PTR [rdx+0x1]
   1400391c4:	mov    BYTE PTR [rdx],al
   1400391c6:	mov    rax,QWORD PTR [rsp+0x30]
   1400391cb:	inc    rdx
   1400391ce:	mov    rcx,QWORD PTR [rax+0xf0]
   1400391d5:	mov    rax,QWORD PTR [rcx]
   1400391d8:	mov    cl,BYTE PTR [rax]
   1400391da:	mov    BYTE PTR [rdx],cl
   1400391dc:	xor    ecx,ecx
   1400391de:	lea    rbx,[rdx+rsi*1]
   1400391e2:	lea    r8,[rip+0x11c07]        # 0x14004adf0
   1400391e9:	cmp    BYTE PTR [rsp+0x98],cl
   1400391f0:	sete   cl
   1400391f3:	add    rbx,rcx
   1400391f6:	sub    rdi,rbx
   1400391f9:	cmp    r14,0xffffffffffffffff
   1400391fd:	mov    rcx,rbx
   140039200:	lea    rdx,[r14+rdi*1]
   140039204:	cmove  rdx,r14
   140039208:	call   0x14002e728
   14003920d:	test   eax,eax
   14003920f:	jne    0x1400392d3
   140039215:	lea    rcx,[rbx+0x2]
   140039219:	test   r13d,r13d
   14003921c:	je     0x140039221
   14003921e:	mov    BYTE PTR [rbx],0x45
   140039221:	mov    rax,QWORD PTR [rbp+0x10]
   140039225:	cmp    BYTE PTR [rax],0x30
   140039228:	je     0x140039280
   14003922a:	mov    r8d,DWORD PTR [rbp+0x4]
   14003922e:	dec    r8d
   140039231:	jns    0x14003923a
   140039233:	neg    r8d
   140039236:	mov    BYTE PTR [rbx+0x1],0x2d
   14003923a:	cmp    r8d,0x64
   14003923e:	jl     0x14003925b
   140039240:	mov    eax,0x51eb851f
   140039245:	imul   r8d
   140039248:	sar    edx,0x5
   14003924b:	mov    eax,edx
   14003924d:	shr    eax,0x1f
   140039250:	add    edx,eax
   140039252:	add    BYTE PTR [rbx+0x2],dl
   140039255:	imul   edx,edx,0xffffff9c
   140039258:	add    r8d,edx
   14003925b:	cmp    r8d,0xa
   14003925f:	jl     0x14003927c
   140039261:	mov    eax,0x66666667
   140039266:	imul   r8d
   140039269:	sar    edx,0x2
   14003926c:	mov    eax,edx
   14003926e:	shr    eax,0x1f
   140039271:	add    edx,eax
   140039273:	add    BYTE PTR [rbx+0x3],dl
   140039276:	imul   edx,edx,0xfffffff6
   140039279:	add    r8d,edx
   14003927c:	add    BYTE PTR [rbx+0x4],r8b
   140039280:	test   BYTE PTR [rip+0x24695],0x1        # 0x14005d91c
   140039287:	je     0x14003929d
   140039289:	cmp    BYTE PTR [rcx],0x30
   14003928c:	jne    0x14003929d
   14003928e:	lea    rdx,[rcx+0x1]
   140039292:	mov    r8d,0x3
   140039298:	call   0x1400265d0
   14003929d:	xor    ebx,ebx
   14003929f:	cmp    BYTE PTR [rsp+0x48],0x0
   1400392a4:	je     0x1400392b2
   1400392a6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400392ab:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400392b2:	lea    r11,[rsp+0x50]
   1400392b7:	mov    eax,ebx
   1400392b9:	mov    rbx,QWORD PTR [r11+0x20]
   1400392bd:	mov    rbp,QWORD PTR [r11+0x28]
   1400392c1:	mov    rsi,QWORD PTR [r11+0x30]
   1400392c5:	mov    rdi,QWORD PTR [r11+0x38]
   1400392c9:	mov    rsp,r11
   1400392cc:	pop    r15
   1400392ce:	pop    r14
   1400392d0:	pop    r13
   1400392d2:	ret    
   1400392d3:	and    QWORD PTR [rsp+0x20],0x0
   1400392d9:	xor    r9d,r9d
   1400392dc:	xor    r8d,r8d
   1400392df:	xor    edx,edx
   1400392e1:	xor    ecx,ecx
   1400392e3:	call   0x140029b4c
   1400392e8:	int3   
   1400392e9:	int3   
   1400392ea:	int3   
   1400392eb:	int3   
   1400392ec:	rex push rbx
   1400392ee:	push   rbp
   1400392ef:	push   rsi
   1400392f0:	push   rdi
   1400392f1:	sub    rsp,0x88
   1400392f8:	mov    rax,QWORD PTR [rip+0x1fd89]        # 0x140059088
   1400392ff:	xor    rax,rsp
   140039302:	mov    QWORD PTR [rsp+0x70],rax
   140039307:	mov    rcx,QWORD PTR [rcx]
   14003930a:	mov    rbx,r8
   14003930d:	mov    rdi,rdx
   140039310:	mov    esi,r9d
   140039313:	mov    ebp,0x16
   140039318:	lea    r8,[rsp+0x58]
   14003931d:	lea    rdx,[rsp+0x40]
   140039322:	mov    r9d,ebp
   140039325:	call   0x140039d44
   14003932a:	test   rdi,rdi
   14003932d:	jne    0x140039342
   14003932f:	call   0x140029bf8
   140039334:	mov    DWORD PTR [rax],ebp
   140039336:	call   0x140029b2c
   14003933b:	mov    eax,ebp
   14003933d:	jmp    0x1400393ca
   140039342:	test   rbx,rbx
   140039345:	je     0x14003932f
   140039347:	or     rdx,0xffffffffffffffff
   14003934b:	cmp    rbx,rdx
   14003934e:	je     0x14003936a
   140039350:	xor    eax,eax
   140039352:	cmp    DWORD PTR [rsp+0x40],0x2d
   140039357:	mov    rdx,rbx
   14003935a:	sete   al
   14003935d:	sub    rdx,rax
   140039360:	xor    eax,eax
   140039362:	test   esi,esi
   140039364:	setg   al
   140039367:	sub    rdx,rax
   14003936a:	xor    eax,eax
   14003936c:	cmp    DWORD PTR [rsp+0x40],0x2d
   140039371:	lea    r8d,[rsi+0x1]
   140039375:	sete   al
   140039378:	xor    ecx,ecx
   14003937a:	test   esi,esi
   14003937c:	setg   cl
   14003937f:	add    rax,rdi
   140039382:	lea    r9,[rsp+0x40]
   140039387:	add    rcx,rax
   14003938a:	call   0x140039a18
   14003938f:	test   eax,eax
   140039391:	je     0x140039398
   140039393:	mov    BYTE PTR [rdi],0x0
   140039396:	jmp    0x1400393ca
   140039398:	mov    rax,QWORD PTR [rsp+0xd8]
   1400393a0:	mov    r9d,DWORD PTR [rsp+0xd0]
   1400393a8:	mov    r8d,esi
   1400393ab:	mov    QWORD PTR [rsp+0x30],rax
   1400393b0:	lea    rax,[rsp+0x40]
   1400393b5:	mov    rdx,rbx
   1400393b8:	mov    rcx,rdi
   1400393bb:	mov    BYTE PTR [rsp+0x28],0x0
   1400393c0:	mov    QWORD PTR [rsp+0x20],rax
   1400393c5:	call   0x1400390f0
   1400393ca:	mov    rcx,QWORD PTR [rsp+0x70]
   1400393cf:	xor    rcx,rsp
   1400393d2:	call   0x1400265a0
   1400393d7:	add    rsp,0x88
   1400393de:	pop    rdi
   1400393df:	pop    rsi
   1400393e0:	pop    rbp
   1400393e1:	pop    rbx
   1400393e2:	ret    
   1400393e3:	int3   
   1400393e4:	mov    rax,rsp
   1400393e7:	mov    QWORD PTR [rax+0x8],rbx
   1400393eb:	mov    QWORD PTR [rax+0x10],rbp
   1400393ef:	mov    QWORD PTR [rax+0x18],rsi
   1400393f3:	mov    QWORD PTR [rax+0x20],rdi
   1400393f7:	push   r14
   1400393f9:	sub    rsp,0x40
   1400393fd:	mov    ebx,DWORD PTR [r9+0x4]
   140039401:	mov    rsi,rdx
   140039404:	mov    rdx,QWORD PTR [rsp+0x78]
   140039409:	mov    rdi,rcx
   14003940c:	lea    rcx,[rax-0x28]
   140039410:	mov    rbp,r9
   140039413:	dec    ebx
   140039415:	mov    r14d,r8d
   140039418:	call   0x140026f30
   14003941d:	test   rdi,rdi
   140039420:	je     0x140039427
   140039422:	test   rsi,rsi
   140039425:	jne    0x14003943d
   140039427:	call   0x140029bf8
   14003942c:	mov    ebx,0x16
   140039431:	mov    DWORD PTR [rax],ebx
   140039433:	call   0x140029b2c
   140039438:	jmp    0x140039515
   14003943d:	cmp    BYTE PTR [rsp+0x70],0x0
   140039442:	je     0x14003945e
   140039444:	cmp    ebx,r14d
   140039447:	jne    0x14003945e
   140039449:	xor    eax,eax
   14003944b:	cmp    DWORD PTR [rbp+0x0],0x2d
   14003944f:	movsxd rcx,ebx
   140039452:	sete   al
   140039455:	add    rax,rdi
   140039458:	mov    WORD PTR [rcx+rax*1],0x30
   14003945e:	cmp    DWORD PTR [rbp+0x0],0x2d
   140039462:	jne    0x14003946a
   140039464:	mov    BYTE PTR [rdi],0x2d
   140039467:	inc    rdi
   14003946a:	cmp    DWORD PTR [rbp+0x4],0x0
   14003946e:	jg     0x140039490
   140039470:	mov    rcx,rdi
   140039473:	call   0x14002e0d0
   140039478:	lea    rcx,[rdi+0x1]
   14003947c:	mov    rdx,rdi
   14003947f:	lea    r8,[rax+0x1]
   140039483:	call   0x1400265d0
   140039488:	mov    BYTE PTR [rdi],0x30
   14003948b:	inc    rdi
   14003948e:	jmp    0x140039497
   140039490:	movsxd rax,DWORD PTR [rbp+0x4]
   140039494:	add    rdi,rax
   140039497:	test   r14d,r14d
   14003949a:	jle    0x140039513
   14003949c:	mov    rcx,rdi
   14003949f:	lea    rsi,[rdi+0x1]
   1400394a3:	call   0x14002e0d0
   1400394a8:	mov    rdx,rdi
   1400394ab:	mov    rcx,rsi
   1400394ae:	lea    r8,[rax+0x1]
   1400394b2:	call   0x1400265d0
   1400394b7:	mov    rax,QWORD PTR [rsp+0x20]
   1400394bc:	mov    rcx,QWORD PTR [rax+0xf0]
   1400394c3:	mov    rax,QWORD PTR [rcx]
   1400394c6:	mov    cl,BYTE PTR [rax]
   1400394c8:	mov    BYTE PTR [rdi],cl
   1400394ca:	mov    ebx,DWORD PTR [rbp+0x4]
   1400394cd:	test   ebx,ebx
   1400394cf:	jns    0x140039513
   1400394d1:	neg    ebx
   1400394d3:	cmp    BYTE PTR [rsp+0x70],0x0
   1400394d8:	jne    0x1400394e5
   1400394da:	mov    eax,ebx
   1400394dc:	mov    ebx,r14d
   1400394df:	cmp    r14d,eax
   1400394e2:	cmovge ebx,eax
   1400394e5:	test   ebx,ebx
   1400394e7:	je     0x140039503
   1400394e9:	mov    rcx,rsi
   1400394ec:	call   0x14002e0d0
   1400394f1:	movsxd rcx,ebx
   1400394f4:	mov    rdx,rsi
   1400394f7:	lea    r8,[rax+0x1]
   1400394fb:	add    rcx,rsi
   1400394fe:	call   0x1400265d0
   140039503:	movsxd r8,ebx
   140039506:	mov    edx,0x30
   14003950b:	mov    rcx,rsi
   14003950e:	call   0x14002bb90
   140039513:	xor    ebx,ebx
   140039515:	cmp    BYTE PTR [rsp+0x38],0x0
   14003951a:	je     0x140039528
   14003951c:	mov    rcx,QWORD PTR [rsp+0x30]
   140039521:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140039528:	mov    rbp,QWORD PTR [rsp+0x58]
   14003952d:	mov    rsi,QWORD PTR [rsp+0x60]
   140039532:	mov    rdi,QWORD PTR [rsp+0x68]
   140039537:	mov    eax,ebx
   140039539:	mov    rbx,QWORD PTR [rsp+0x50]
   14003953e:	add    rsp,0x40
   140039542:	pop    r14
   140039544:	ret    
   140039545:	int3   
   140039546:	int3   
   140039547:	int3   
   140039548:	rex push rbx
   14003954a:	push   rbp
   14003954b:	push   rsi
   14003954c:	push   rdi
   14003954d:	sub    rsp,0x78
   140039551:	mov    rax,QWORD PTR [rip+0x1fb30]        # 0x140059088
   140039558:	xor    rax,rsp
   14003955b:	mov    QWORD PTR [rsp+0x60],rax
   140039560:	mov    rcx,QWORD PTR [rcx]
   140039563:	mov    rbx,r8
   140039566:	mov    rdi,rdx
   140039569:	mov    esi,r9d
   14003956c:	mov    ebp,0x16
   140039571:	lea    r8,[rsp+0x48]
   140039576:	lea    rdx,[rsp+0x30]
   14003957b:	mov    r9d,ebp
   14003957e:	call   0x140039d44
   140039583:	test   rdi,rdi
   140039586:	jne    0x140039598
   140039588:	call   0x140029bf8
   14003958d:	mov    DWORD PTR [rax],ebp
   14003958f:	call   0x140029b2c
   140039594:	mov    eax,ebp
   140039596:	jmp    0x140039603
   140039598:	test   rbx,rbx
   14003959b:	je     0x140039588
   14003959d:	or     rdx,0xffffffffffffffff
   1400395a1:	cmp    rbx,rdx
   1400395a4:	je     0x1400395b6
   1400395a6:	xor    eax,eax
   1400395a8:	cmp    DWORD PTR [rsp+0x30],0x2d
   1400395ad:	mov    rdx,rbx
   1400395b0:	sete   al
   1400395b3:	sub    rdx,rax
   1400395b6:	mov    r8d,DWORD PTR [rsp+0x34]
   1400395bb:	xor    ecx,ecx
   1400395bd:	lea    r9,[rsp+0x30]
   1400395c2:	add    r8d,esi
   1400395c5:	cmp    DWORD PTR [rsp+0x30],0x2d
   1400395ca:	sete   cl
   1400395cd:	add    rcx,rdi
   1400395d0:	call   0x140039a18
   1400395d5:	test   eax,eax
   1400395d7:	je     0x1400395de
   1400395d9:	mov    BYTE PTR [rdi],0x0
   1400395dc:	jmp    0x140039603
   1400395de:	mov    rax,QWORD PTR [rsp+0xc0]
   1400395e6:	lea    r9,[rsp+0x30]
   1400395eb:	mov    r8d,esi
   1400395ee:	mov    QWORD PTR [rsp+0x28],rax
   1400395f3:	mov    rdx,rbx
   1400395f6:	mov    rcx,rdi
   1400395f9:	mov    BYTE PTR [rsp+0x20],0x0
   1400395fe:	call   0x1400393e4
   140039603:	mov    rcx,QWORD PTR [rsp+0x60]
   140039608:	xor    rcx,rsp
   14003960b:	call   0x1400265a0
   140039610:	add    rsp,0x78
   140039614:	pop    rdi
   140039615:	pop    rsi
   140039616:	pop    rbp
   140039617:	pop    rbx
   140039618:	ret    
   140039619:	int3   
   14003961a:	int3   
   14003961b:	int3   
   14003961c:	rex push rbx
   14003961e:	push   rbp
   14003961f:	push   rsi
   140039620:	push   rdi
   140039621:	push   r14
   140039623:	sub    rsp,0x80
   14003962a:	mov    rax,QWORD PTR [rip+0x1fa57]        # 0x140059088
   140039631:	xor    rax,rsp
   140039634:	mov    QWORD PTR [rsp+0x70],rax
   140039639:	mov    rcx,QWORD PTR [rcx]
   14003963c:	mov    rdi,r8
   14003963f:	mov    rsi,rdx
   140039642:	mov    ebp,r9d
   140039645:	mov    ebx,0x16
   14003964a:	lea    r8,[rsp+0x58]
   14003964f:	lea    rdx,[rsp+0x40]
   140039654:	mov    r9d,ebx
   140039657:	call   0x140039d44
   14003965c:	test   rsi,rsi
   14003965f:	jne    0x140039674
   140039661:	call   0x140029bf8
   140039666:	mov    DWORD PTR [rax],ebx
   140039668:	call   0x140029b2c
   14003966d:	mov    eax,ebx
   14003966f:	jmp    0x140039735
   140039674:	test   rdi,rdi
   140039677:	je     0x140039661
   140039679:	mov    r14d,DWORD PTR [rsp+0x44]
   14003967e:	xor    eax,eax
   140039680:	dec    r14d
   140039683:	cmp    DWORD PTR [rsp+0x40],0x2d
   140039688:	sete   al
   14003968b:	or     rdx,0xffffffffffffffff
   14003968f:	lea    rbx,[rax+rsi*1]
   140039693:	cmp    rdi,rdx
   140039696:	je     0x14003969e
   140039698:	mov    rdx,rdi
   14003969b:	sub    rdx,rax
   14003969e:	lea    r9,[rsp+0x40]
   1400396a3:	mov    r8d,ebp
   1400396a6:	mov    rcx,rbx
   1400396a9:	call   0x140039a18
   1400396ae:	test   eax,eax
   1400396b0:	je     0x1400396b7
   1400396b2:	mov    BYTE PTR [rsi],0x0
   1400396b5:	jmp    0x140039735
   1400396b7:	mov    eax,DWORD PTR [rsp+0x44]
   1400396bb:	dec    eax
   1400396bd:	cmp    r14d,eax
   1400396c0:	setl   cl
   1400396c3:	cmp    eax,0xfffffffc
   1400396c6:	jl     0x140039703
   1400396c8:	cmp    eax,ebp
   1400396ca:	jge    0x140039703
   1400396cc:	test   cl,cl
   1400396ce:	je     0x1400396dc
   1400396d0:	mov    al,BYTE PTR [rbx]
   1400396d2:	inc    rbx
   1400396d5:	test   al,al
   1400396d7:	jne    0x1400396d0
   1400396d9:	mov    BYTE PTR [rbx-0x2],al
   1400396dc:	mov    rax,QWORD PTR [rsp+0xd8]
   1400396e4:	lea    r9,[rsp+0x40]
   1400396e9:	mov    r8d,ebp
   1400396ec:	mov    QWORD PTR [rsp+0x28],rax
   1400396f1:	mov    rdx,rdi
   1400396f4:	mov    rcx,rsi
   1400396f7:	mov    BYTE PTR [rsp+0x20],0x1
   1400396fc:	call   0x1400393e4
   140039701:	jmp    0x140039735
   140039703:	mov    rax,QWORD PTR [rsp+0xd8]
   14003970b:	mov    r9d,DWORD PTR [rsp+0xd0]
   140039713:	mov    r8d,ebp
   140039716:	mov    QWORD PTR [rsp+0x30],rax
   14003971b:	lea    rax,[rsp+0x40]
   140039720:	mov    rdx,rdi
   140039723:	mov    rcx,rsi
   140039726:	mov    BYTE PTR [rsp+0x28],0x1
   14003972b:	mov    QWORD PTR [rsp+0x20],rax
   140039730:	call   0x1400390f0
   140039735:	mov    rcx,QWORD PTR [rsp+0x70]
   14003973a:	xor    rcx,rsp
   14003973d:	call   0x1400265a0
   140039742:	add    rsp,0x80
   140039749:	pop    r14
   14003974b:	pop    rdi
   14003974c:	pop    rsi
   14003974d:	pop    rbp
   14003974e:	pop    rbx
   14003974f:	ret    
   140039750:	xor    edx,edx
   140039752:	jmp    0x140039758
   140039757:	int3   
   140039758:	rex push rbx
   14003975a:	sub    rsp,0x40
   14003975e:	mov    rbx,rcx
   140039761:	lea    rcx,[rsp+0x20]
   140039766:	call   0x140026f30
   14003976b:	mov    cl,BYTE PTR [rbx]
   14003976d:	mov    r8,QWORD PTR [rsp+0x20]
   140039772:	test   cl,cl
   140039774:	je     0x14003978f
   140039776:	mov    rax,QWORD PTR [r8+0xf0]
   14003977d:	mov    rdx,QWORD PTR [rax]
   140039780:	mov    al,BYTE PTR [rdx]
   140039782:	cmp    cl,al
   140039784:	je     0x14003978f
   140039786:	inc    rbx
   140039789:	mov    cl,BYTE PTR [rbx]
   14003978b:	test   cl,cl
   14003978d:	jne    0x140039782
   14003978f:	mov    al,BYTE PTR [rbx]
   140039791:	inc    rbx
   140039794:	test   al,al
   140039796:	je     0x1400397d5
   140039798:	jmp    0x1400397a3
   14003979a:	sub    al,0x45
   14003979c:	test   al,0xdf
   14003979e:	je     0x1400397a9
   1400397a0:	inc    rbx
   1400397a3:	mov    al,BYTE PTR [rbx]
   1400397a5:	test   al,al
   1400397a7:	jne    0x14003979a
   1400397a9:	mov    rdx,rbx
   1400397ac:	dec    rbx
   1400397af:	cmp    BYTE PTR [rbx],0x30
   1400397b2:	je     0x1400397ac
   1400397b4:	mov    rax,QWORD PTR [r8+0xf0]
   1400397bb:	mov    rcx,QWORD PTR [rax]
   1400397be:	mov    al,BYTE PTR [rcx]
   1400397c0:	cmp    BYTE PTR [rbx],al
   1400397c2:	jne    0x1400397c7
   1400397c4:	dec    rbx
   1400397c7:	mov    al,BYTE PTR [rdx]
   1400397c9:	inc    rbx
   1400397cc:	inc    rdx
   1400397cf:	mov    BYTE PTR [rbx],al
   1400397d1:	test   al,al
   1400397d3:	jne    0x1400397c7
   1400397d5:	cmp    BYTE PTR [rsp+0x38],0x0
   1400397da:	je     0x1400397e8
   1400397dc:	mov    rax,QWORD PTR [rsp+0x30]
   1400397e1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400397e8:	add    rsp,0x40
   1400397ec:	pop    rbx
   1400397ed:	ret    
   1400397ee:	int3   
   1400397ef:	int3   
   1400397f0:	xor    r9d,r9d
   1400397f3:	jmp    0x1400397f8
   1400397f8:	rex push rbx
   1400397fa:	sub    rsp,0x30
   1400397fe:	mov    rax,r8
   140039801:	mov    rbx,rdx
   140039804:	mov    r8,r9
   140039807:	mov    rdx,rax
   14003980a:	test   ecx,ecx
   14003980c:	je     0x140039822
   14003980e:	lea    rcx,[rsp+0x20]
   140039813:	call   0x140039ae4
   140039818:	mov    rax,QWORD PTR [rsp+0x20]
   14003981d:	mov    QWORD PTR [rbx],rax
   140039820:	jmp    0x140039832
   140039822:	lea    rcx,[rsp+0x40]
   140039827:	call   0x140039bac
   14003982c:	mov    eax,DWORD PTR [rsp+0x40]
   140039830:	mov    DWORD PTR [rbx],eax
   140039832:	add    rsp,0x30
   140039836:	pop    rbx
   140039837:	ret    
   140039838:	xor    edx,edx
   14003983a:	jmp    0x140039840
   14003983f:	int3   
   140039840:	rex push rbx
   140039842:	sub    rsp,0x40
   140039846:	mov    rbx,rcx
   140039849:	lea    rcx,[rsp+0x20]
   14003984e:	call   0x140026f30
   140039853:	movsx  ecx,BYTE PTR [rbx]
   140039856:	call   0x1400378ac
   14003985b:	cmp    eax,0x65
   14003985e:	je     0x14003986f
   140039860:	inc    rbx
   140039863:	movzx  ecx,BYTE PTR [rbx]
   140039866:	call   0x1400384d0
   14003986b:	test   eax,eax
   14003986d:	jne    0x140039860
   14003986f:	movsx  ecx,BYTE PTR [rbx]
   140039872:	call   0x1400378ac
   140039877:	cmp    eax,0x78
   14003987a:	jne    0x140039880
   14003987c:	add    rbx,0x2
   140039880:	mov    rax,QWORD PTR [rsp+0x20]
   140039885:	mov    dl,BYTE PTR [rbx]
   140039887:	mov    rcx,QWORD PTR [rax+0xf0]
   14003988e:	mov    rax,QWORD PTR [rcx]
   140039891:	mov    cl,BYTE PTR [rax]
   140039893:	mov    BYTE PTR [rbx],cl
   140039895:	inc    rbx
   140039898:	mov    al,BYTE PTR [rbx]
   14003989a:	mov    BYTE PTR [rbx],dl
   14003989c:	mov    dl,al
   14003989e:	mov    al,BYTE PTR [rbx]
   1400398a0:	inc    rbx
   1400398a3:	test   al,al
   1400398a5:	jne    0x140039898
   1400398a7:	cmp    BYTE PTR [rsp+0x38],al
   1400398ab:	je     0x1400398b9
   1400398ad:	mov    rax,QWORD PTR [rsp+0x30]
   1400398b2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400398b9:	add    rsp,0x40
   1400398bd:	pop    rbx
   1400398be:	ret    
   1400398bf:	int3   
   1400398c0:	movsd  xmm0,QWORD PTR [rcx]
   1400398c4:	xor    eax,eax
   1400398c6:	comisd xmm0,QWORD PTR [rip+0x1152a]        # 0x14004adf8
   1400398ce:	setae  al
   1400398d1:	ret    
   1400398d2:	int3   
   1400398d3:	int3   
   1400398d4:	sub    rsp,0x18
   1400398d8:	xor    r8d,r8d
   1400398db:	mov    r9,rcx
   1400398de:	test   edx,edx
   1400398e0:	jne    0x14003992a
   1400398e2:	and    r9d,0xf
   1400398e6:	mov    rdx,rcx
   1400398e9:	xorps  xmm1,xmm1
   1400398ec:	and    rdx,0xfffffffffffffff0
   1400398f0:	mov    ecx,r9d
   1400398f3:	or     r9d,0xffffffff
   1400398f7:	shl    r9d,cl
   1400398fa:	movdqa xmm0,XMMWORD PTR [rdx]
   1400398fe:	pcmpeqb xmm0,xmm1
   140039902:	pmovmskb eax,xmm0
   140039906:	and    eax,r9d
   140039909:	jne    0x14003991f
   14003990b:	add    rdx,0x10
   14003990f:	movdqa xmm0,XMMWORD PTR [rdx]
   140039913:	pcmpeqb xmm0,xmm1
   140039917:	pmovmskb eax,xmm0
   14003991b:	test   eax,eax
   14003991d:	je     0x14003990b
   14003991f:	bsf    eax,eax
   140039922:	add    rax,rdx
   140039925:	jmp    0x1400399d0
   14003992a:	cmp    DWORD PTR [rip+0x1f767],0x2        # 0x140059098
   140039931:	jge    0x1400399d5
   140039937:	mov    r10,rcx
   14003993a:	movzx  eax,dl
   14003993d:	and    r9d,0xf
   140039941:	and    r10,0xfffffffffffffff0
   140039945:	mov    ecx,eax
   140039947:	xorps  xmm2,xmm2
   14003994a:	shl    ecx,0x8
   14003994d:	or     ecx,eax
   14003994f:	movd   xmm0,ecx
   140039953:	mov    ecx,r9d
   140039956:	or     r9d,0xffffffff
   14003995a:	shl    r9d,cl
   14003995d:	pshuflw xmm1,xmm0,0x0
   140039962:	movdqa xmm0,xmm2
   140039966:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14003996b:	pshufd xmm3,xmm1,0x0
   140039970:	pmovmskb ecx,xmm0
   140039974:	movdqa xmm0,xmm3
   140039978:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14003997d:	pmovmskb edx,xmm0
   140039981:	and    edx,r9d
   140039984:	and    ecx,r9d
   140039987:	jne    0x1400399b7
   140039989:	bsr    ecx,edx
   14003998c:	movdqa xmm1,xmm2
   140039990:	movdqa xmm0,xmm3
   140039994:	add    rcx,r10
   140039997:	test   edx,edx
   140039999:	cmovne r8,rcx
   14003999d:	add    r10,0x10
   1400399a1:	pcmpeqb xmm1,XMMWORD PTR [r10]
   1400399a6:	pcmpeqb xmm0,XMMWORD PTR [r10]
   1400399ab:	pmovmskb ecx,xmm1
   1400399af:	pmovmskb edx,xmm0
   1400399b3:	test   ecx,ecx
   1400399b5:	je     0x140039989
   1400399b7:	mov    eax,ecx
   1400399b9:	neg    eax
   1400399bb:	and    eax,ecx
   1400399bd:	dec    eax
   1400399bf:	and    edx,eax
   1400399c1:	bsr    ecx,edx
   1400399c4:	add    rcx,r10
   1400399c7:	test   edx,edx
   1400399c9:	cmovne r8,rcx
   1400399cd:	mov    rax,r8
   1400399d0:	add    rsp,0x18
   1400399d4:	ret    
   1400399d5:	test   cl,0xf
   1400399d8:	je     0x1400399f3
   1400399da:	movsx  eax,BYTE PTR [r9]
   1400399de:	cmp    eax,edx
   1400399e0:	cmove  r8,r9
   1400399e4:	cmp    BYTE PTR [r9],0x0
   1400399e8:	je     0x1400399cd
   1400399ea:	inc    r9
   1400399ed:	test   r9b,0xf
   1400399f1:	jne    0x1400399da
   1400399f3:	movzx  eax,dl
   1400399f6:	movd   xmm0,eax
   1400399fa:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140039a01:	jae    0x140039a10
   140039a03:	movsxd r8,ecx
   140039a06:	add    r8,r9
   140039a09:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140039a10:	je     0x1400399cd
   140039a12:	add    r9,0x10
   140039a16:	jmp    0x1400399fa
   140039a18:	mov    QWORD PTR [rsp+0x8],rbx
   140039a1d:	push   rdi
   140039a1e:	sub    rsp,0x20
   140039a22:	mov    rbx,rcx
   140039a25:	mov    rcx,QWORD PTR [r9+0x10]
   140039a29:	xor    r10d,r10d
   140039a2c:	test   rbx,rbx
   140039a2f:	jne    0x140039a49
   140039a31:	call   0x140029bf8
   140039a36:	mov    ebx,0x16
   140039a3b:	mov    DWORD PTR [rax],ebx
   140039a3d:	call   0x140029b2c
   140039a42:	mov    eax,ebx
   140039a44:	jmp    0x140039ad8
   140039a49:	test   rdx,rdx
   140039a4c:	je     0x140039a31
   140039a4e:	mov    eax,r10d
   140039a51:	test   r8d,r8d
   140039a54:	mov    BYTE PTR [rbx],r10b
   140039a57:	cmovg  eax,r8d
   140039a5b:	inc    eax
   140039a5d:	cdqe   
   140039a5f:	cmp    rdx,rax
   140039a62:	ja     0x140039a70
   140039a64:	call   0x140029bf8
   140039a69:	mov    ebx,0x22
   140039a6e:	jmp    0x140039a3b
   140039a70:	lea    rdi,[rbx+0x1]
   140039a74:	mov    BYTE PTR [rbx],0x30
   140039a77:	mov    rax,rdi
   140039a7a:	jmp    0x140039a96
   140039a7c:	cmp    BYTE PTR [rcx],r10b
   140039a7f:	je     0x140039a89
   140039a81:	movsx  edx,BYTE PTR [rcx]
   140039a84:	inc    rcx
   140039a87:	jmp    0x140039a8e
   140039a89:	mov    edx,0x30
   140039a8e:	mov    BYTE PTR [rax],dl
   140039a90:	inc    rax
   140039a93:	dec    r8d
   140039a96:	test   r8d,r8d
   140039a99:	jg     0x140039a7c
   140039a9b:	mov    BYTE PTR [rax],r10b
   140039a9e:	js     0x140039ab4
   140039aa0:	cmp    BYTE PTR [rcx],0x35
   140039aa3:	jl     0x140039ab4
   140039aa5:	jmp    0x140039aaa
   140039aa7:	mov    BYTE PTR [rax],0x30
   140039aaa:	dec    rax
   140039aad:	cmp    BYTE PTR [rax],0x39
   140039ab0:	je     0x140039aa7
   140039ab2:	inc    BYTE PTR [rax]
   140039ab4:	cmp    BYTE PTR [rbx],0x31
   140039ab7:	jne    0x140039abf
   140039ab9:	inc    DWORD PTR [r9+0x4]
   140039abd:	jmp    0x140039ad6
   140039abf:	mov    rcx,rdi
   140039ac2:	call   0x14002e0d0
   140039ac7:	mov    rdx,rdi
   140039aca:	mov    rcx,rbx
   140039acd:	lea    r8,[rax+0x1]
   140039ad1:	call   0x1400265d0
   140039ad6:	xor    eax,eax
   140039ad8:	mov    rbx,QWORD PTR [rsp+0x30]
   140039add:	add    rsp,0x20
   140039ae1:	pop    rdi
   140039ae2:	ret    
   140039ae3:	int3   
   140039ae4:	mov    QWORD PTR [rsp+0x18],rbx
   140039ae9:	push   rdi
   140039aea:	sub    rsp,0x80
   140039af1:	mov    rax,QWORD PTR [rip+0x1f590]        # 0x140059088
   140039af8:	xor    rax,rsp
   140039afb:	mov    QWORD PTR [rsp+0x78],rax
   140039b00:	mov    rdi,rcx
   140039b03:	mov    rbx,rdx
   140039b06:	lea    rcx,[rsp+0x40]
   140039b0b:	mov    rdx,r8
   140039b0e:	call   0x140026f30
   140039b13:	lea    rax,[rsp+0x40]
   140039b18:	lea    rdx,[rsp+0x60]
   140039b1d:	mov    QWORD PTR [rsp+0x38],rax
   140039b22:	and    DWORD PTR [rsp+0x30],0x0
   140039b27:	and    DWORD PTR [rsp+0x28],0x0
   140039b2c:	and    DWORD PTR [rsp+0x20],0x0
   140039b31:	lea    rcx,[rsp+0x68]
   140039b36:	xor    r9d,r9d
   140039b39:	mov    r8,rbx
   140039b3c:	call   0x14003a95c
   140039b41:	lea    rcx,[rsp+0x68]
   140039b46:	mov    rdx,rdi
   140039b49:	mov    ebx,eax
   140039b4b:	call   0x140039dfc
   140039b50:	mov    ecx,eax
   140039b52:	mov    eax,0x3
   140039b57:	test   al,bl
   140039b59:	jne    0x140039b67
   140039b5b:	cmp    ecx,0x1
   140039b5e:	je     0x140039b7a
   140039b60:	cmp    ecx,0x2
   140039b63:	jne    0x140039b78
   140039b65:	jmp    0x140039b6c
   140039b67:	test   bl,0x1
   140039b6a:	je     0x140039b73
   140039b6c:	mov    eax,0x4
   140039b71:	jmp    0x140039b7a
   140039b73:	test   bl,0x2
   140039b76:	jne    0x140039b7a
   140039b78:	xor    eax,eax
   140039b7a:	cmp    BYTE PTR [rsp+0x58],0x0
   140039b7f:	je     0x140039b8d
   140039b81:	mov    rcx,QWORD PTR [rsp+0x50]
   140039b86:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140039b8d:	mov    rcx,QWORD PTR [rsp+0x78]
   140039b92:	xor    rcx,rsp
   140039b95:	call   0x1400265a0
   140039b9a:	mov    rbx,QWORD PTR [rsp+0xa0]
   140039ba2:	add    rsp,0x80
   140039ba9:	pop    rdi
   140039baa:	ret    
   140039bab:	int3   
   140039bac:	mov    QWORD PTR [rsp+0x18],rbx
   140039bb1:	push   rdi
   140039bb2:	sub    rsp,0x80
   140039bb9:	mov    rax,QWORD PTR [rip+0x1f4c8]        # 0x140059088
   140039bc0:	xor    rax,rsp
   140039bc3:	mov    QWORD PTR [rsp+0x78],rax
   140039bc8:	mov    rdi,rcx
   140039bcb:	mov    rbx,rdx
   140039bce:	lea    rcx,[rsp+0x40]
   140039bd3:	mov    rdx,r8
   140039bd6:	call   0x140026f30
   140039bdb:	lea    rax,[rsp+0x40]
   140039be0:	lea    rdx,[rsp+0x60]
   140039be5:	mov    QWORD PTR [rsp+0x38],rax
   140039bea:	and    DWORD PTR [rsp+0x30],0x0
   140039bef:	and    DWORD PTR [rsp+0x28],0x0
   140039bf4:	and    DWORD PTR [rsp+0x20],0x0
   140039bf9:	lea    rcx,[rsp+0x68]
   140039bfe:	xor    r9d,r9d
   140039c01:	mov    r8,rbx
   140039c04:	call   0x14003a95c
   140039c09:	lea    rcx,[rsp+0x68]
   140039c0e:	mov    rdx,rdi
   140039c11:	mov    ebx,eax
   140039c13:	call   0x14003a3ac
   140039c18:	mov    ecx,eax
   140039c1a:	mov    eax,0x3
   140039c1f:	test   al,bl
   140039c21:	jne    0x140039c2f
   140039c23:	cmp    ecx,0x1
   140039c26:	je     0x140039c42
   140039c28:	cmp    ecx,0x2
   140039c2b:	jne    0x140039c40
   140039c2d:	jmp    0x140039c34
   140039c2f:	test   bl,0x1
   140039c32:	je     0x140039c3b
   140039c34:	mov    eax,0x4
   140039c39:	jmp    0x140039c42
   140039c3b:	test   bl,0x2
   140039c3e:	jne    0x140039c42
   140039c40:	xor    eax,eax
   140039c42:	cmp    BYTE PTR [rsp+0x58],0x0
   140039c47:	je     0x140039c55
   140039c49:	mov    rcx,QWORD PTR [rsp+0x50]
   140039c4e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140039c55:	mov    rcx,QWORD PTR [rsp+0x78]
   140039c5a:	xor    rcx,rsp
   140039c5d:	call   0x1400265a0
   140039c62:	mov    rbx,QWORD PTR [rsp+0xa0]
   140039c6a:	add    rsp,0x80
   140039c71:	pop    rdi
   140039c72:	ret    
   140039c73:	int3   
   140039c74:	mov    QWORD PTR [rsp+0x8],rbx
   140039c79:	movzx  r11d,WORD PTR [rdx+0x6]
   140039c7e:	mov    r10,rcx
   140039c81:	mov    ecx,DWORD PTR [rdx+0x4]
   140039c84:	movzx  r8d,r11w
   140039c88:	mov    eax,0x8000
   140039c8d:	mov    r9d,0x7ff
   140039c93:	shr    r8w,0x4
   140039c98:	and    r11w,ax
   140039c9c:	mov    eax,DWORD PTR [rdx]
   140039c9e:	and    r8w,r9w
   140039ca2:	and    ecx,0xfffff
   140039ca8:	mov    ebx,0x80000000
   140039cad:	movzx  edx,r8w
   140039cb1:	test   edx,edx
   140039cb3:	je     0x140039ccd
   140039cb5:	cmp    edx,r9d
   140039cb8:	je     0x140039cc5
   140039cba:	mov    edx,0x3c00
   140039cbf:	add    r8w,dx
   140039cc3:	jmp    0x140039ce9
   140039cc5:	mov    r8d,0x7fff
   140039ccb:	jmp    0x140039ce9
   140039ccd:	test   ecx,ecx
   140039ccf:	jne    0x140039cde
   140039cd1:	test   eax,eax
   140039cd3:	jne    0x140039cde
   140039cd5:	and    DWORD PTR [r10+0x4],eax
   140039cd9:	and    DWORD PTR [r10],eax
   140039cdc:	jmp    0x140039d36
   140039cde:	mov    edx,0x3c01
   140039ce3:	add    r8w,dx
   140039ce7:	xor    ebx,ebx
   140039ce9:	mov    r9d,eax
   140039cec:	shl    ecx,0xb
   140039cef:	shl    eax,0xb
   140039cf2:	shr    r9d,0x15
   140039cf6:	mov    DWORD PTR [r10],eax
   140039cf9:	or     r9d,ecx
   140039cfc:	or     r9d,ebx
   140039cff:	mov    DWORD PTR [r10+0x4],r9d
   140039d03:	test   r9d,r9d
   140039d06:	js     0x140039d32
   140039d08:	mov    edx,DWORD PTR [r10]
   140039d0b:	lea    eax,[r9+r9*1]
   140039d0f:	mov    ecx,edx
   140039d11:	shr    ecx,0x1f
   140039d14:	mov    r9d,ecx
   140039d17:	or     r9d,eax
   140039d1a:	lea    eax,[rdx+rdx*1]
   140039d1d:	mov    DWORD PTR [r10],eax
   140039d20:	mov    eax,0xffff
   140039d25:	add    r8w,ax
   140039d29:	test   r9d,r9d
   140039d2c:	jns    0x140039d08
   140039d2e:	mov    DWORD PTR [r10+0x4],r9d
   140039d32:	or     r11w,r8w
   140039d36:	mov    rbx,QWORD PTR [rsp+0x8]
   140039d3b:	mov    WORD PTR [r10+0x8],r11w
   140039d40:	ret    
   140039d41:	int3   
   140039d42:	int3   
   140039d43:	int3   
   140039d44:	rex push rbp
   140039d46:	push   rbx
   140039d47:	push   rsi
   140039d48:	push   rdi
   140039d49:	lea    rbp,[rsp-0x3f]
   140039d4e:	sub    rsp,0x88
   140039d55:	mov    rax,QWORD PTR [rip+0x1f32c]        # 0x140059088
   140039d5c:	xor    rax,rsp
   140039d5f:	mov    QWORD PTR [rbp+0x27],rax
   140039d63:	mov    rdi,rdx
   140039d66:	mov    QWORD PTR [rbp-0x19],rcx
   140039d6a:	lea    rdx,[rbp-0x19]
   140039d6e:	lea    rcx,[rbp-0x9]
   140039d72:	mov    rbx,r9
   140039d75:	mov    rsi,r8
   140039d78:	call   0x140039c74
   140039d7d:	mov    rax,QWORD PTR [rbp-0x9]
   140039d81:	xor    r8d,r8d
   140039d84:	mov    QWORD PTR [rbp-0x19],rax
   140039d88:	movzx  eax,WORD PTR [rbp-0x1]
   140039d8c:	lea    r9,[rbp+0x7]
   140039d90:	lea    edx,[r8+0x11]
   140039d94:	lea    rcx,[rbp-0x19]
   140039d98:	mov    WORD PTR [rbp-0x11],ax
   140039d9c:	call   0x14003b1b0
   140039da1:	movsx  ecx,BYTE PTR [rbp+0x9]
   140039da5:	lea    r8,[rbp+0xb]
   140039da9:	mov    DWORD PTR [rdi],ecx
   140039dab:	movsx  ecx,WORD PTR [rbp+0x7]
   140039daf:	mov    rdx,rbx
   140039db2:	mov    DWORD PTR [rdi+0x4],ecx
   140039db5:	mov    rcx,rsi
   140039db8:	mov    DWORD PTR [rdi+0x8],eax
   140039dbb:	call   0x14002e728
   140039dc0:	test   eax,eax
   140039dc2:	jne    0x140039de3
   140039dc4:	mov    QWORD PTR [rdi+0x10],rsi
   140039dc8:	mov    rax,rdi
   140039dcb:	mov    rcx,QWORD PTR [rbp+0x27]
   140039dcf:	xor    rcx,rsp
   140039dd2:	call   0x1400265a0
   140039dd7:	add    rsp,0x88
   140039dde:	pop    rdi
   140039ddf:	pop    rsi
   140039de0:	pop    rbx
   140039de1:	pop    rbp
   140039de2:	ret    
   140039de3:	and    QWORD PTR [rsp+0x20],0x0
   140039de9:	xor    r9d,r9d
   140039dec:	xor    r8d,r8d
   140039def:	xor    edx,edx
   140039df1:	xor    ecx,ecx
   140039df3:	call   0x140029b4c
   140039df8:	int3   
   140039df9:	int3   
   140039dfa:	int3   
   140039dfb:	int3   
   140039dfc:	mov    QWORD PTR [rsp+0x8],rbx
   140039e01:	mov    QWORD PTR [rsp+0x18],rsi
   140039e06:	mov    QWORD PTR [rsp+0x20],rdi
   140039e0b:	push   rbp
   140039e0c:	push   r12
   140039e0e:	push   r13
   140039e10:	push   r14
   140039e12:	push   r15
   140039e14:	mov    rbp,rsp
   140039e17:	sub    rsp,0x60
   140039e1b:	mov    rax,QWORD PTR [rip+0x1f266]        # 0x140059088
   140039e22:	xor    rax,rsp
   140039e25:	mov    QWORD PTR [rbp-0x8],rax
   140039e29:	movzx  eax,WORD PTR [rcx+0xa]
   140039e2d:	movzx  r9d,WORD PTR [rcx]
   140039e31:	xor    ebx,ebx
   140039e33:	mov    edi,eax
   140039e35:	and    eax,0x8000
   140039e3a:	shl    r9d,0x10
   140039e3e:	mov    DWORD PTR [rbp-0x3c],eax
   140039e41:	mov    eax,DWORD PTR [rcx+0x6]
   140039e44:	and    edi,0x7fff
   140039e4a:	mov    DWORD PTR [rbp-0x18],eax
   140039e4d:	mov    eax,DWORD PTR [rcx+0x2]
   140039e50:	sub    edi,0x3fff
   140039e56:	mov    r12d,0x1f
   140039e5c:	mov    QWORD PTR [rbp-0x30],rdx
   140039e60:	mov    DWORD PTR [rbp-0x28],r9d
   140039e64:	mov    DWORD PTR [rbp-0x14],eax
   140039e67:	mov    DWORD PTR [rbp-0x10],r9d
   140039e6b:	lea    esi,[rbx+0x1]
   140039e6e:	lea    r14d,[r12-0x1c]
   140039e73:	cmp    edi,0xffffc001
   140039e79:	jne    0x140039ea4
   140039e7b:	mov    r8d,ebx
   140039e7e:	mov    eax,ebx
   140039e80:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   140039e84:	jne    0x140039e93
   140039e86:	add    rax,rsi
   140039e89:	cmp    rax,r14
   140039e8c:	jl     0x140039e80
   140039e8e:	jmp    0x14003a342
   140039e93:	mov    QWORD PTR [rbp-0x18],rbx
   140039e97:	mov    DWORD PTR [rbp-0x10],ebx
   140039e9a:	mov    ebx,0x2
   140039e9f:	jmp    0x14003a342
   140039ea4:	mov    rax,QWORD PTR [rbp-0x18]
   140039ea8:	mov    r10d,r12d
   140039eab:	or     r15d,0xffffffff
   140039eaf:	mov    QWORD PTR [rbp-0x20],rax
   140039eb3:	mov    eax,DWORD PTR [rip+0x215af]        # 0x14005b468
   140039eb9:	mov    DWORD PTR [rbp-0x40],edi
   140039ebc:	dec    eax
   140039ebe:	mov    r13d,ebx
   140039ec1:	mov    DWORD PTR [rbp-0x38],eax
   140039ec4:	inc    eax
   140039ec6:	cdq    
   140039ec7:	and    edx,r12d
   140039eca:	add    eax,edx
   140039ecc:	mov    r11d,eax
   140039ecf:	and    eax,r12d
   140039ed2:	sub    eax,edx
   140039ed4:	sar    r11d,0x5
   140039ed8:	sub    r10d,eax
   140039edb:	movsxd rax,r11d
   140039ede:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   140039ee2:	mov    DWORD PTR [rbp-0x24],r10d
   140039ee6:	bt     ecx,r10d
   140039eea:	jae    0x140039f88
   140039ef0:	mov    ecx,r10d
   140039ef3:	mov    eax,r15d
   140039ef6:	movsxd r8,r11d
   140039ef9:	shl    eax,cl
   140039efb:	not    eax
   140039efd:	test   DWORD PTR [rbp+r8*4-0x18],eax
   140039f02:	jne    0x140039f1c
   140039f04:	lea    eax,[rsi+r8*1]
   140039f08:	cdqe   
   140039f0a:	jmp    0x140039f15
   140039f0c:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   140039f10:	jne    0x140039f1c
   140039f12:	add    rax,rsi
   140039f15:	cmp    rax,r14
   140039f18:	jl     0x140039f0c
   140039f1a:	jmp    0x140039f88
   140039f1c:	mov    eax,DWORD PTR [rbp-0x38]
   140039f1f:	mov    ecx,r12d
   140039f22:	cdq    
   140039f23:	and    edx,r12d
   140039f26:	add    eax,edx
   140039f28:	mov    r8d,eax
   140039f2b:	and    eax,r12d
   140039f2e:	sub    eax,edx
   140039f30:	sar    r8d,0x5
   140039f34:	mov    edx,esi
   140039f36:	sub    ecx,eax
   140039f38:	movsxd r10,r8d
   140039f3b:	mov    eax,DWORD PTR [rbp+r10*4-0x18]
   140039f40:	shl    edx,cl
   140039f42:	lea    ecx,[rax+rdx*1]
   140039f45:	cmp    ecx,eax
   140039f47:	jb     0x140039f4d
   140039f49:	cmp    ecx,edx
   140039f4b:	jae    0x140039f50
   140039f4d:	mov    r13d,esi
   140039f50:	sub    r8d,esi
   140039f53:	mov    DWORD PTR [rbp+r10*4-0x18],ecx
   140039f58:	movsxd rdx,r8d
   140039f5b:	js     0x140039f84
   140039f5d:	test   r13d,r13d
   140039f60:	je     0x140039f84
   140039f62:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140039f66:	mov    r13d,ebx
   140039f69:	lea    r8d,[rax+0x1]
   140039f6d:	cmp    r8d,eax
   140039f70:	jb     0x140039f77
   140039f72:	cmp    r8d,esi
   140039f75:	jae    0x140039f7a
   140039f77:	mov    r13d,esi
   140039f7a:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   140039f7f:	sub    rdx,rsi
   140039f82:	jns    0x140039f5d
   140039f84:	mov    r10d,DWORD PTR [rbp-0x24]
   140039f88:	mov    ecx,r10d
   140039f8b:	mov    eax,r15d
   140039f8e:	shl    eax,cl
   140039f90:	movsxd rcx,r11d
   140039f93:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   140039f97:	lea    eax,[r11+0x1]
   140039f9b:	movsxd rdx,eax
   140039f9e:	cmp    rdx,r14
   140039fa1:	jge    0x140039fc0
   140039fa3:	lea    rcx,[rbp-0x18]
   140039fa7:	mov    r8,r14
   140039faa:	sub    r8,rdx
   140039fad:	lea    rcx,[rcx+rdx*4]
   140039fb1:	xor    edx,edx
   140039fb3:	shl    r8,0x2
   140039fb7:	call   0x14002bb90
   140039fbc:	mov    r9d,DWORD PTR [rbp-0x28]
   140039fc0:	test   r13d,r13d
   140039fc3:	je     0x140039fc7
   140039fc5:	add    edi,esi
   140039fc7:	mov    ecx,DWORD PTR [rip+0x21497]        # 0x14005b464
   140039fcd:	mov    eax,ecx
   140039fcf:	sub    eax,DWORD PTR [rip+0x21493]        # 0x14005b468
   140039fd5:	cmp    edi,eax
   140039fd7:	jge    0x140039fed
   140039fd9:	mov    QWORD PTR [rbp-0x18],rbx
   140039fdd:	mov    DWORD PTR [rbp-0x10],ebx
   140039fe0:	mov    r8d,ebx
   140039fe3:	mov    ebx,0x2
   140039fe8:	jmp    0x14003a33e
   140039fed:	cmp    edi,ecx
   140039fef:	jg     0x14003a223
   140039ff5:	sub    ecx,DWORD PTR [rbp-0x40]
   140039ff8:	mov    rax,QWORD PTR [rbp-0x20]
   140039ffc:	mov    r10d,r15d
   140039fff:	mov    QWORD PTR [rbp-0x18],rax
   14003a003:	mov    eax,ecx
   14003a005:	mov    DWORD PTR [rbp-0x10],r9d
   14003a009:	cdq    
   14003a00a:	mov    r11,r14
   14003a00d:	mov    r9d,ebx
   14003a010:	and    edx,r12d
   14003a013:	lea    r8,[rbp-0x18]
   14003a017:	add    eax,edx
   14003a019:	mov    r13d,eax
   14003a01c:	and    eax,r12d
   14003a01f:	sub    eax,edx
   14003a021:	sar    r13d,0x5
   14003a025:	mov    ecx,eax
   14003a027:	mov    edi,eax
   14003a029:	mov    eax,0x20
   14003a02e:	shl    r10d,cl
   14003a031:	sub    eax,ecx
   14003a033:	mov    r14d,eax
   14003a036:	not    r10d
   14003a039:	mov    eax,DWORD PTR [r8]
   14003a03c:	mov    ecx,edi
   14003a03e:	mov    edx,eax
   14003a040:	shr    eax,cl
   14003a042:	mov    ecx,r14d
   14003a045:	or     eax,r9d
   14003a048:	and    edx,r10d
   14003a04b:	mov    r9d,edx
   14003a04e:	mov    DWORD PTR [r8],eax
   14003a051:	lea    r8,[r8+0x4]
   14003a055:	shl    r9d,cl
   14003a058:	sub    r11,rsi
   14003a05b:	jne    0x14003a039
   14003a05d:	movsxd r10,r13d
   14003a060:	lea    edi,[r11+0x2]
   14003a064:	lea    r14d,[r11+0x3]
   14003a068:	mov    r9,r10
   14003a06b:	mov    r8d,edi
   14003a06e:	neg    r9
   14003a071:	cmp    r8,r10
   14003a074:	jl     0x14003a08b
   14003a076:	mov    rdx,r8
   14003a079:	shl    rdx,0x2
   14003a07d:	lea    rax,[rdx+r9*4]
   14003a081:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14003a085:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14003a089:	jmp    0x14003a090
   14003a08b:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14003a090:	sub    r8,rsi
   14003a093:	jns    0x14003a071
   14003a095:	mov    r9d,DWORD PTR [rbp-0x38]
   14003a099:	mov    r11d,r12d
   14003a09c:	lea    eax,[r9+0x1]
   14003a0a0:	cdq    
   14003a0a1:	and    edx,r12d
   14003a0a4:	add    eax,edx
   14003a0a6:	mov    r10d,eax
   14003a0a9:	and    eax,r12d
   14003a0ac:	sub    eax,edx
   14003a0ae:	sar    r10d,0x5
   14003a0b2:	sub    r11d,eax
   14003a0b5:	movsxd rax,r10d
   14003a0b8:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   14003a0bc:	bt     ecx,r11d
   14003a0c0:	jae    0x14003a15b
   14003a0c6:	mov    ecx,r11d
   14003a0c9:	mov    eax,r15d
   14003a0cc:	movsxd r8,r10d
   14003a0cf:	shl    eax,cl
   14003a0d1:	not    eax
   14003a0d3:	test   DWORD PTR [rbp+r8*4-0x18],eax
   14003a0d8:	jne    0x14003a0f2
   14003a0da:	lea    eax,[rsi+r8*1]
   14003a0de:	cdqe   
   14003a0e0:	jmp    0x14003a0eb
   14003a0e2:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14003a0e6:	jne    0x14003a0f2
   14003a0e8:	add    rax,rsi
   14003a0eb:	cmp    rax,r14
   14003a0ee:	jl     0x14003a0e2
   14003a0f0:	jmp    0x14003a15b
   14003a0f2:	mov    eax,r9d
   14003a0f5:	mov    ecx,r12d
   14003a0f8:	cdq    
   14003a0f9:	and    edx,r12d
   14003a0fc:	add    eax,edx
   14003a0fe:	mov    r8d,eax
   14003a101:	and    eax,r12d
   14003a104:	sub    eax,edx
   14003a106:	sar    r8d,0x5
   14003a10a:	mov    edx,esi
   14003a10c:	sub    ecx,eax
   14003a10e:	movsxd r13,r8d
   14003a111:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14003a116:	shl    edx,cl
   14003a118:	mov    ecx,ebx
   14003a11a:	lea    r9d,[rax+rdx*1]
   14003a11e:	cmp    r9d,eax
   14003a121:	jb     0x14003a128
   14003a123:	cmp    r9d,edx
   14003a126:	jae    0x14003a12a
   14003a128:	mov    ecx,esi
   14003a12a:	sub    r8d,esi
   14003a12d:	mov    DWORD PTR [rbp+r13*4-0x18],r9d
   14003a132:	movsxd rdx,r8d
   14003a135:	js     0x14003a15b
   14003a137:	test   ecx,ecx
   14003a139:	je     0x14003a15b
   14003a13b:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14003a13f:	mov    ecx,ebx
   14003a141:	lea    r8d,[rax+0x1]
   14003a145:	cmp    r8d,eax
   14003a148:	jb     0x14003a14f
   14003a14a:	cmp    r8d,esi
   14003a14d:	jae    0x14003a151
   14003a14f:	mov    ecx,esi
   14003a151:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14003a156:	sub    rdx,rsi
   14003a159:	jns    0x14003a137
   14003a15b:	mov    ecx,r11d
   14003a15e:	mov    eax,r15d
   14003a161:	shl    eax,cl
   14003a163:	movsxd rcx,r10d
   14003a166:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14003a16a:	lea    eax,[r10+0x1]
   14003a16e:	movsxd rdx,eax
   14003a171:	cmp    rdx,r14
   14003a174:	jge    0x14003a18f
   14003a176:	lea    rcx,[rbp-0x18]
   14003a17a:	mov    r8,r14
   14003a17d:	sub    r8,rdx
   14003a180:	lea    rcx,[rcx+rdx*4]
   14003a184:	xor    edx,edx
   14003a186:	shl    r8,0x2
   14003a18a:	call   0x14002bb90
   14003a18f:	mov    eax,DWORD PTR [rip+0x212d7]        # 0x14005b46c
   14003a195:	mov    r13d,0x20
   14003a19b:	mov    r9d,ebx
   14003a19e:	inc    eax
   14003a1a0:	lea    r8,[rbp-0x18]
   14003a1a4:	cdq    
   14003a1a5:	and    edx,r12d
   14003a1a8:	add    eax,edx
   14003a1aa:	mov    r10d,eax
   14003a1ad:	and    eax,r12d
   14003a1b0:	sub    eax,edx
   14003a1b2:	sar    r10d,0x5
   14003a1b6:	mov    ecx,eax
   14003a1b8:	mov    r11d,eax
   14003a1bb:	shl    r15d,cl
   14003a1be:	sub    r13d,eax
   14003a1c1:	not    r15d
   14003a1c4:	mov    eax,DWORD PTR [r8]
   14003a1c7:	mov    ecx,r11d
   14003a1ca:	mov    edx,eax
   14003a1cc:	shr    eax,cl
   14003a1ce:	mov    ecx,r13d
   14003a1d1:	or     eax,r9d
   14003a1d4:	and    edx,r15d
   14003a1d7:	mov    r9d,edx
   14003a1da:	mov    DWORD PTR [r8],eax
   14003a1dd:	lea    r8,[r8+0x4]
   14003a1e1:	shl    r9d,cl
   14003a1e4:	sub    r14,rsi
   14003a1e7:	jne    0x14003a1c4
   14003a1e9:	movsxd r10,r10d
   14003a1ec:	mov    r8,rdi
   14003a1ef:	mov    r9,r10
   14003a1f2:	neg    r9
   14003a1f5:	cmp    r8,r10
   14003a1f8:	jl     0x14003a20f
   14003a1fa:	mov    rdx,r8
   14003a1fd:	shl    rdx,0x2
   14003a201:	lea    rax,[rdx+r9*4]
   14003a205:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14003a209:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14003a20d:	jmp    0x14003a214
   14003a20f:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14003a214:	sub    r8,rsi
   14003a217:	jns    0x14003a1f5
   14003a219:	mov    r8d,ebx
   14003a21c:	mov    ebx,edi
   14003a21e:	jmp    0x14003a33e
   14003a223:	mov    eax,DWORD PTR [rip+0x21243]        # 0x14005b46c
   14003a229:	mov    r10d,DWORD PTR [rip+0x21230]        # 0x14005b460
   14003a230:	mov    r13d,0x20
   14003a236:	cdq    
   14003a237:	and    edx,r12d
   14003a23a:	add    eax,edx
   14003a23c:	mov    r11d,eax
   14003a23f:	and    eax,r12d
   14003a242:	sub    eax,edx
   14003a244:	sar    r11d,0x5
   14003a248:	mov    ecx,eax
   14003a24a:	shl    r15d,cl
   14003a24d:	not    r15d
   14003a250:	cmp    edi,r10d
   14003a253:	jl     0x14003a2cf
   14003a255:	mov    QWORD PTR [rbp-0x18],rbx
   14003a259:	bts    DWORD PTR [rbp-0x18],0x1f
   14003a25e:	mov    DWORD PTR [rbp-0x10],ebx
   14003a261:	sub    r13d,eax
   14003a264:	mov    edi,eax
   14003a266:	mov    r9d,ebx
   14003a269:	lea    r8,[rbp-0x18]
   14003a26d:	mov    eax,DWORD PTR [r8]
   14003a270:	mov    ecx,edi
   14003a272:	mov    edx,r15d
   14003a275:	and    edx,eax
   14003a277:	shr    eax,cl
   14003a279:	mov    ecx,r13d
   14003a27c:	or     eax,r9d
   14003a27f:	mov    r9d,edx
   14003a282:	shl    r9d,cl
   14003a285:	mov    DWORD PTR [r8],eax
   14003a288:	lea    r8,[r8+0x4]
   14003a28c:	sub    r14,rsi
   14003a28f:	jne    0x14003a26d
   14003a291:	movsxd r9,r11d
   14003a294:	lea    edi,[r14+0x2]
   14003a298:	mov    r8,r9
   14003a29b:	neg    r8
   14003a29e:	cmp    rdi,r9
   14003a2a1:	jl     0x14003a2b8
   14003a2a3:	mov    rdx,rdi
   14003a2a6:	shl    rdx,0x2
   14003a2aa:	lea    rax,[rdx+r8*4]
   14003a2ae:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14003a2b2:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14003a2b6:	jmp    0x14003a2bc
   14003a2b8:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14003a2bc:	sub    rdi,rsi
   14003a2bf:	jns    0x14003a29e
   14003a2c1:	mov    r8d,DWORD PTR [rip+0x211ac]        # 0x14005b474
   14003a2c8:	mov    ebx,esi
   14003a2ca:	add    r8d,r10d
   14003a2cd:	jmp    0x14003a33e
   14003a2cf:	mov    r8d,DWORD PTR [rip+0x2119e]        # 0x14005b474
   14003a2d6:	btr    DWORD PTR [rbp-0x18],0x1f
   14003a2db:	mov    r10d,ebx
   14003a2de:	add    r8d,edi
   14003a2e1:	mov    edi,eax
   14003a2e3:	sub    r13d,eax
   14003a2e6:	lea    r9,[rbp-0x18]
   14003a2ea:	mov    eax,DWORD PTR [r9]
   14003a2ed:	mov    ecx,edi
   14003a2ef:	mov    edx,eax
   14003a2f1:	shr    eax,cl
   14003a2f3:	mov    ecx,r13d
   14003a2f6:	or     eax,r10d
   14003a2f9:	and    edx,r15d
   14003a2fc:	mov    r10d,edx
   14003a2ff:	mov    DWORD PTR [r9],eax
   14003a302:	lea    r9,[r9+0x4]
   14003a306:	shl    r10d,cl
   14003a309:	sub    r14,rsi
   14003a30c:	jne    0x14003a2ea
   14003a30e:	movsxd r10,r11d
   14003a311:	lea    edi,[r14+0x2]
   14003a315:	mov    r9,r10
   14003a318:	neg    r9
   14003a31b:	cmp    rdi,r10
   14003a31e:	jl     0x14003a335
   14003a320:	mov    rdx,rdi
   14003a323:	shl    rdx,0x2
   14003a327:	lea    rax,[rdx+r9*4]
   14003a32b:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14003a32f:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14003a333:	jmp    0x14003a339
   14003a335:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14003a339:	sub    rdi,rsi
   14003a33c:	jns    0x14003a31b
   14003a33e:	mov    rdx,QWORD PTR [rbp-0x30]
   14003a342:	sub    r12d,DWORD PTR [rip+0x21123]        # 0x14005b46c
   14003a349:	mov    cl,r12b
   14003a34c:	shl    r8d,cl
   14003a34f:	neg    DWORD PTR [rbp-0x3c]
   14003a352:	sbb    eax,eax
   14003a354:	and    eax,0x80000000
   14003a359:	or     r8d,eax
   14003a35c:	mov    eax,DWORD PTR [rip+0x2110e]        # 0x14005b470
   14003a362:	or     r8d,DWORD PTR [rbp-0x18]
   14003a366:	cmp    eax,0x40
   14003a369:	jne    0x14003a376
   14003a36b:	mov    eax,DWORD PTR [rbp-0x14]
   14003a36e:	mov    DWORD PTR [rdx+0x4],r8d
   14003a372:	mov    DWORD PTR [rdx],eax
   14003a374:	jmp    0x14003a37e
   14003a376:	cmp    eax,0x20
   14003a379:	jne    0x14003a37e
   14003a37b:	mov    DWORD PTR [rdx],r8d
   14003a37e:	mov    eax,ebx
   14003a380:	mov    rcx,QWORD PTR [rbp-0x8]
   14003a384:	xor    rcx,rsp
   14003a387:	call   0x1400265a0
   14003a38c:	lea    r11,[rsp+0x60]
   14003a391:	mov    rbx,QWORD PTR [r11+0x30]
   14003a395:	mov    rsi,QWORD PTR [r11+0x40]
   14003a399:	mov    rdi,QWORD PTR [r11+0x48]
   14003a39d:	mov    rsp,r11
   14003a3a0:	pop    r15
   14003a3a2:	pop    r14
   14003a3a4:	pop    r13
   14003a3a6:	pop    r12
   14003a3a8:	pop    rbp
   14003a3a9:	ret    
   14003a3aa:	int3   
   14003a3ab:	int3   
   14003a3ac:	mov    QWORD PTR [rsp+0x8],rbx
   14003a3b1:	mov    QWORD PTR [rsp+0x18],rsi
   14003a3b6:	mov    QWORD PTR [rsp+0x20],rdi
   14003a3bb:	push   rbp
   14003a3bc:	push   r12
   14003a3be:	push   r13
   14003a3c0:	push   r14
   14003a3c2:	push   r15
   14003a3c4:	mov    rbp,rsp
   14003a3c7:	sub    rsp,0x60
   14003a3cb:	mov    rax,QWORD PTR [rip+0x1ecb6]        # 0x140059088
   14003a3d2:	xor    rax,rsp
   14003a3d5:	mov    QWORD PTR [rbp-0x8],rax
   14003a3d9:	movzx  eax,WORD PTR [rcx+0xa]
   14003a3dd:	movzx  r9d,WORD PTR [rcx]
   14003a3e1:	xor    ebx,ebx
   14003a3e3:	mov    edi,eax
   14003a3e5:	and    eax,0x8000
   14003a3ea:	shl    r9d,0x10
   14003a3ee:	mov    DWORD PTR [rbp-0x3c],eax
   14003a3f1:	mov    eax,DWORD PTR [rcx+0x6]
   14003a3f4:	and    edi,0x7fff
   14003a3fa:	mov    DWORD PTR [rbp-0x18],eax
   14003a3fd:	mov    eax,DWORD PTR [rcx+0x2]
   14003a400:	sub    edi,0x3fff
   14003a406:	mov    r12d,0x1f
   14003a40c:	mov    QWORD PTR [rbp-0x30],rdx
   14003a410:	mov    DWORD PTR [rbp-0x28],r9d
   14003a414:	mov    DWORD PTR [rbp-0x14],eax
   14003a417:	mov    DWORD PTR [rbp-0x10],r9d
   14003a41b:	lea    esi,[rbx+0x1]
   14003a41e:	lea    r14d,[r12-0x1c]
   14003a423:	cmp    edi,0xffffc001
   14003a429:	jne    0x14003a454
   14003a42b:	mov    r8d,ebx
   14003a42e:	mov    eax,ebx
   14003a430:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14003a434:	jne    0x14003a443
   14003a436:	add    rax,rsi
   14003a439:	cmp    rax,r14
   14003a43c:	jl     0x14003a430
   14003a43e:	jmp    0x14003a8f2
   14003a443:	mov    QWORD PTR [rbp-0x18],rbx
   14003a447:	mov    DWORD PTR [rbp-0x10],ebx
   14003a44a:	mov    ebx,0x2
   14003a44f:	jmp    0x14003a8f2
   14003a454:	mov    rax,QWORD PTR [rbp-0x18]
   14003a458:	mov    r10d,r12d
   14003a45b:	or     r15d,0xffffffff
   14003a45f:	mov    QWORD PTR [rbp-0x20],rax
   14003a463:	mov    eax,DWORD PTR [rip+0x21017]        # 0x14005b480
   14003a469:	mov    DWORD PTR [rbp-0x40],edi
   14003a46c:	dec    eax
   14003a46e:	mov    r13d,ebx
   14003a471:	mov    DWORD PTR [rbp-0x38],eax
   14003a474:	inc    eax
   14003a476:	cdq    
   14003a477:	and    edx,r12d
   14003a47a:	add    eax,edx
   14003a47c:	mov    r11d,eax
   14003a47f:	and    eax,r12d
   14003a482:	sub    eax,edx
   14003a484:	sar    r11d,0x5
   14003a488:	sub    r10d,eax
   14003a48b:	movsxd rax,r11d
   14003a48e:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   14003a492:	mov    DWORD PTR [rbp-0x24],r10d
   14003a496:	bt     ecx,r10d
   14003a49a:	jae    0x14003a538
   14003a4a0:	mov    ecx,r10d
   14003a4a3:	mov    eax,r15d
   14003a4a6:	movsxd r8,r11d
   14003a4a9:	shl    eax,cl
   14003a4ab:	not    eax
   14003a4ad:	test   DWORD PTR [rbp+r8*4-0x18],eax
   14003a4b2:	jne    0x14003a4cc
   14003a4b4:	lea    eax,[rsi+r8*1]
   14003a4b8:	cdqe   
   14003a4ba:	jmp    0x14003a4c5
   14003a4bc:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14003a4c0:	jne    0x14003a4cc
   14003a4c2:	add    rax,rsi
   14003a4c5:	cmp    rax,r14
   14003a4c8:	jl     0x14003a4bc
   14003a4ca:	jmp    0x14003a538
   14003a4cc:	mov    eax,DWORD PTR [rbp-0x38]
   14003a4cf:	mov    ecx,r12d
   14003a4d2:	cdq    
   14003a4d3:	and    edx,r12d
   14003a4d6:	add    eax,edx
   14003a4d8:	mov    r8d,eax
   14003a4db:	and    eax,r12d
   14003a4de:	sub    eax,edx
   14003a4e0:	sar    r8d,0x5
   14003a4e4:	mov    edx,esi
   14003a4e6:	sub    ecx,eax
   14003a4e8:	movsxd r10,r8d
   14003a4eb:	mov    eax,DWORD PTR [rbp+r10*4-0x18]
   14003a4f0:	shl    edx,cl
   14003a4f2:	lea    ecx,[rax+rdx*1]
   14003a4f5:	cmp    ecx,eax
   14003a4f7:	jb     0x14003a4fd
   14003a4f9:	cmp    ecx,edx
   14003a4fb:	jae    0x14003a500
   14003a4fd:	mov    r13d,esi
   14003a500:	sub    r8d,esi
   14003a503:	mov    DWORD PTR [rbp+r10*4-0x18],ecx
   14003a508:	movsxd rdx,r8d
   14003a50b:	js     0x14003a534
   14003a50d:	test   r13d,r13d
   14003a510:	je     0x14003a534
   14003a512:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14003a516:	mov    r13d,ebx
   14003a519:	lea    r8d,[rax+0x1]
   14003a51d:	cmp    r8d,eax
   14003a520:	jb     0x14003a527
   14003a522:	cmp    r8d,esi
   14003a525:	jae    0x14003a52a
   14003a527:	mov    r13d,esi
   14003a52a:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14003a52f:	sub    rdx,rsi
   14003a532:	jns    0x14003a50d
   14003a534:	mov    r10d,DWORD PTR [rbp-0x24]
   14003a538:	mov    ecx,r10d
   14003a53b:	mov    eax,r15d
   14003a53e:	shl    eax,cl
   14003a540:	movsxd rcx,r11d
   14003a543:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14003a547:	lea    eax,[r11+0x1]
   14003a54b:	movsxd rdx,eax
   14003a54e:	cmp    rdx,r14
   14003a551:	jge    0x14003a570
   14003a553:	lea    rcx,[rbp-0x18]
   14003a557:	mov    r8,r14
   14003a55a:	sub    r8,rdx
   14003a55d:	lea    rcx,[rcx+rdx*4]
   14003a561:	xor    edx,edx
   14003a563:	shl    r8,0x2
   14003a567:	call   0x14002bb90
   14003a56c:	mov    r9d,DWORD PTR [rbp-0x28]
   14003a570:	test   r13d,r13d
   14003a573:	je     0x14003a577
   14003a575:	add    edi,esi
   14003a577:	mov    ecx,DWORD PTR [rip+0x20eff]        # 0x14005b47c
   14003a57d:	mov    eax,ecx
   14003a57f:	sub    eax,DWORD PTR [rip+0x20efb]        # 0x14005b480
   14003a585:	cmp    edi,eax
   14003a587:	jge    0x14003a59d
   14003a589:	mov    QWORD PTR [rbp-0x18],rbx
   14003a58d:	mov    DWORD PTR [rbp-0x10],ebx
   14003a590:	mov    r8d,ebx
   14003a593:	mov    ebx,0x2
   14003a598:	jmp    0x14003a8ee
   14003a59d:	cmp    edi,ecx
   14003a59f:	jg     0x14003a7d3
   14003a5a5:	sub    ecx,DWORD PTR [rbp-0x40]
   14003a5a8:	mov    rax,QWORD PTR [rbp-0x20]
   14003a5ac:	mov    r10d,r15d
   14003a5af:	mov    QWORD PTR [rbp-0x18],rax
   14003a5b3:	mov    eax,ecx
   14003a5b5:	mov    DWORD PTR [rbp-0x10],r9d
   14003a5b9:	cdq    
   14003a5ba:	mov    r11,r14
   14003a5bd:	mov    r9d,ebx
   14003a5c0:	and    edx,r12d
   14003a5c3:	lea    r8,[rbp-0x18]
   14003a5c7:	add    eax,edx
   14003a5c9:	mov    r13d,eax
   14003a5cc:	and    eax,r12d
   14003a5cf:	sub    eax,edx
   14003a5d1:	sar    r13d,0x5
   14003a5d5:	mov    ecx,eax
   14003a5d7:	mov    edi,eax
   14003a5d9:	mov    eax,0x20
   14003a5de:	shl    r10d,cl
   14003a5e1:	sub    eax,ecx
   14003a5e3:	mov    r14d,eax
   14003a5e6:	not    r10d
   14003a5e9:	mov    eax,DWORD PTR [r8]
   14003a5ec:	mov    ecx,edi
   14003a5ee:	mov    edx,eax
   14003a5f0:	shr    eax,cl
   14003a5f2:	mov    ecx,r14d
   14003a5f5:	or     eax,r9d
   14003a5f8:	and    edx,r10d
   14003a5fb:	mov    r9d,edx
   14003a5fe:	mov    DWORD PTR [r8],eax
   14003a601:	lea    r8,[r8+0x4]
   14003a605:	shl    r9d,cl
   14003a608:	sub    r11,rsi
   14003a60b:	jne    0x14003a5e9
   14003a60d:	movsxd r10,r13d
   14003a610:	lea    edi,[r11+0x2]
   14003a614:	lea    r14d,[r11+0x3]
   14003a618:	mov    r9,r10
   14003a61b:	mov    r8d,edi
   14003a61e:	neg    r9
   14003a621:	cmp    r8,r10
   14003a624:	jl     0x14003a63b
   14003a626:	mov    rdx,r8
   14003a629:	shl    rdx,0x2
   14003a62d:	lea    rax,[rdx+r9*4]
   14003a631:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14003a635:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14003a639:	jmp    0x14003a640
   14003a63b:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14003a640:	sub    r8,rsi
   14003a643:	jns    0x14003a621
   14003a645:	mov    r9d,DWORD PTR [rbp-0x38]
   14003a649:	mov    r11d,r12d
   14003a64c:	lea    eax,[r9+0x1]
   14003a650:	cdq    
   14003a651:	and    edx,r12d
   14003a654:	add    eax,edx
   14003a656:	mov    r10d,eax
   14003a659:	and    eax,r12d
   14003a65c:	sub    eax,edx
   14003a65e:	sar    r10d,0x5
   14003a662:	sub    r11d,eax
   14003a665:	movsxd rax,r10d
   14003a668:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   14003a66c:	bt     ecx,r11d
   14003a670:	jae    0x14003a70b
   14003a676:	mov    ecx,r11d
   14003a679:	mov    eax,r15d
   14003a67c:	movsxd r8,r10d
   14003a67f:	shl    eax,cl
   14003a681:	not    eax
   14003a683:	test   DWORD PTR [rbp+r8*4-0x18],eax
   14003a688:	jne    0x14003a6a2
   14003a68a:	lea    eax,[rsi+r8*1]
   14003a68e:	cdqe   
   14003a690:	jmp    0x14003a69b
   14003a692:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14003a696:	jne    0x14003a6a2
   14003a698:	add    rax,rsi
   14003a69b:	cmp    rax,r14
   14003a69e:	jl     0x14003a692
   14003a6a0:	jmp    0x14003a70b
   14003a6a2:	mov    eax,r9d
   14003a6a5:	mov    ecx,r12d
   14003a6a8:	cdq    
   14003a6a9:	and    edx,r12d
   14003a6ac:	add    eax,edx
   14003a6ae:	mov    r8d,eax
   14003a6b1:	and    eax,r12d
   14003a6b4:	sub    eax,edx
   14003a6b6:	sar    r8d,0x5
   14003a6ba:	mov    edx,esi
   14003a6bc:	sub    ecx,eax
   14003a6be:	movsxd r13,r8d
   14003a6c1:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14003a6c6:	shl    edx,cl
   14003a6c8:	mov    ecx,ebx
   14003a6ca:	lea    r9d,[rax+rdx*1]
   14003a6ce:	cmp    r9d,eax
   14003a6d1:	jb     0x14003a6d8
   14003a6d3:	cmp    r9d,edx
   14003a6d6:	jae    0x14003a6da
   14003a6d8:	mov    ecx,esi
   14003a6da:	sub    r8d,esi
   14003a6dd:	mov    DWORD PTR [rbp+r13*4-0x18],r9d
   14003a6e2:	movsxd rdx,r8d
   14003a6e5:	js     0x14003a70b
   14003a6e7:	test   ecx,ecx
   14003a6e9:	je     0x14003a70b
   14003a6eb:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14003a6ef:	mov    ecx,ebx
   14003a6f1:	lea    r8d,[rax+0x1]
   14003a6f5:	cmp    r8d,eax
   14003a6f8:	jb     0x14003a6ff
   14003a6fa:	cmp    r8d,esi
   14003a6fd:	jae    0x14003a701
   14003a6ff:	mov    ecx,esi
   14003a701:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14003a706:	sub    rdx,rsi
   14003a709:	jns    0x14003a6e7
   14003a70b:	mov    ecx,r11d
   14003a70e:	mov    eax,r15d
   14003a711:	shl    eax,cl
   14003a713:	movsxd rcx,r10d
   14003a716:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14003a71a:	lea    eax,[r10+0x1]
   14003a71e:	movsxd rdx,eax
   14003a721:	cmp    rdx,r14
   14003a724:	jge    0x14003a73f
   14003a726:	lea    rcx,[rbp-0x18]
   14003a72a:	mov    r8,r14
   14003a72d:	sub    r8,rdx
   14003a730:	lea    rcx,[rcx+rdx*4]
   14003a734:	xor    edx,edx
   14003a736:	shl    r8,0x2
   14003a73a:	call   0x14002bb90
   14003a73f:	mov    eax,DWORD PTR [rip+0x20d3f]        # 0x14005b484
   14003a745:	mov    r13d,0x20
   14003a74b:	mov    r9d,ebx
   14003a74e:	inc    eax
   14003a750:	lea    r8,[rbp-0x18]
   14003a754:	cdq    
   14003a755:	and    edx,r12d
   14003a758:	add    eax,edx
   14003a75a:	mov    r10d,eax
   14003a75d:	and    eax,r12d
   14003a760:	sub    eax,edx
   14003a762:	sar    r10d,0x5
   14003a766:	mov    ecx,eax
   14003a768:	mov    r11d,eax
   14003a76b:	shl    r15d,cl
   14003a76e:	sub    r13d,eax
   14003a771:	not    r15d
   14003a774:	mov    eax,DWORD PTR [r8]
   14003a777:	mov    ecx,r11d
   14003a77a:	mov    edx,eax
   14003a77c:	shr    eax,cl
   14003a77e:	mov    ecx,r13d
   14003a781:	or     eax,r9d
   14003a784:	and    edx,r15d
   14003a787:	mov    r9d,edx
   14003a78a:	mov    DWORD PTR [r8],eax
   14003a78d:	lea    r8,[r8+0x4]
   14003a791:	shl    r9d,cl
   14003a794:	sub    r14,rsi
   14003a797:	jne    0x14003a774
   14003a799:	movsxd r10,r10d
   14003a79c:	mov    r8,rdi
   14003a79f:	mov    r9,r10
   14003a7a2:	neg    r9
   14003a7a5:	cmp    r8,r10
   14003a7a8:	jl     0x14003a7bf
   14003a7aa:	mov    rdx,r8
   14003a7ad:	shl    rdx,0x2
   14003a7b1:	lea    rax,[rdx+r9*4]
   14003a7b5:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14003a7b9:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14003a7bd:	jmp    0x14003a7c4
   14003a7bf:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14003a7c4:	sub    r8,rsi
   14003a7c7:	jns    0x14003a7a5
   14003a7c9:	mov    r8d,ebx
   14003a7cc:	mov    ebx,edi
   14003a7ce:	jmp    0x14003a8ee
   14003a7d3:	mov    eax,DWORD PTR [rip+0x20cab]        # 0x14005b484
   14003a7d9:	mov    r10d,DWORD PTR [rip+0x20c98]        # 0x14005b478
   14003a7e0:	mov    r13d,0x20
   14003a7e6:	cdq    
   14003a7e7:	and    edx,r12d
   14003a7ea:	add    eax,edx
   14003a7ec:	mov    r11d,eax
   14003a7ef:	and    eax,r12d
   14003a7f2:	sub    eax,edx
   14003a7f4:	sar    r11d,0x5
   14003a7f8:	mov    ecx,eax
   14003a7fa:	shl    r15d,cl
   14003a7fd:	not    r15d
   14003a800:	cmp    edi,r10d
   14003a803:	jl     0x14003a87f
   14003a805:	mov    QWORD PTR [rbp-0x18],rbx
   14003a809:	bts    DWORD PTR [rbp-0x18],0x1f
   14003a80e:	mov    DWORD PTR [rbp-0x10],ebx
   14003a811:	sub    r13d,eax
   14003a814:	mov    edi,eax
   14003a816:	mov    r9d,ebx
   14003a819:	lea    r8,[rbp-0x18]
   14003a81d:	mov    eax,DWORD PTR [r8]
   14003a820:	mov    ecx,edi
   14003a822:	mov    edx,r15d
   14003a825:	and    edx,eax
   14003a827:	shr    eax,cl
   14003a829:	mov    ecx,r13d
   14003a82c:	or     eax,r9d
   14003a82f:	mov    r9d,edx
   14003a832:	shl    r9d,cl
   14003a835:	mov    DWORD PTR [r8],eax
   14003a838:	lea    r8,[r8+0x4]
   14003a83c:	sub    r14,rsi
   14003a83f:	jne    0x14003a81d
   14003a841:	movsxd r9,r11d
   14003a844:	lea    edi,[r14+0x2]
   14003a848:	mov    r8,r9
   14003a84b:	neg    r8
   14003a84e:	cmp    rdi,r9
   14003a851:	jl     0x14003a868
   14003a853:	mov    rdx,rdi
   14003a856:	shl    rdx,0x2
   14003a85a:	lea    rax,[rdx+r8*4]
   14003a85e:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14003a862:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14003a866:	jmp    0x14003a86c
   14003a868:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14003a86c:	sub    rdi,rsi
   14003a86f:	jns    0x14003a84e
   14003a871:	mov    r8d,DWORD PTR [rip+0x20c14]        # 0x14005b48c
   14003a878:	mov    ebx,esi
   14003a87a:	add    r8d,r10d
   14003a87d:	jmp    0x14003a8ee
   14003a87f:	mov    r8d,DWORD PTR [rip+0x20c06]        # 0x14005b48c
   14003a886:	btr    DWORD PTR [rbp-0x18],0x1f
   14003a88b:	mov    r10d,ebx
   14003a88e:	add    r8d,edi
   14003a891:	mov    edi,eax
   14003a893:	sub    r13d,eax
   14003a896:	lea    r9,[rbp-0x18]
   14003a89a:	mov    eax,DWORD PTR [r9]
   14003a89d:	mov    ecx,edi
   14003a89f:	mov    edx,eax
   14003a8a1:	shr    eax,cl
   14003a8a3:	mov    ecx,r13d
   14003a8a6:	or     eax,r10d
   14003a8a9:	and    edx,r15d
   14003a8ac:	mov    r10d,edx
   14003a8af:	mov    DWORD PTR [r9],eax
   14003a8b2:	lea    r9,[r9+0x4]
   14003a8b6:	shl    r10d,cl
   14003a8b9:	sub    r14,rsi
   14003a8bc:	jne    0x14003a89a
   14003a8be:	movsxd r10,r11d
   14003a8c1:	lea    edi,[r14+0x2]
   14003a8c5:	mov    r9,r10
   14003a8c8:	neg    r9
   14003a8cb:	cmp    rdi,r10
   14003a8ce:	jl     0x14003a8e5
   14003a8d0:	mov    rdx,rdi
   14003a8d3:	shl    rdx,0x2
   14003a8d7:	lea    rax,[rdx+r9*4]
   14003a8db:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14003a8df:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14003a8e3:	jmp    0x14003a8e9
   14003a8e5:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14003a8e9:	sub    rdi,rsi
   14003a8ec:	jns    0x14003a8cb
   14003a8ee:	mov    rdx,QWORD PTR [rbp-0x30]
   14003a8f2:	sub    r12d,DWORD PTR [rip+0x20b8b]        # 0x14005b484
   14003a8f9:	mov    cl,r12b
   14003a8fc:	shl    r8d,cl
   14003a8ff:	neg    DWORD PTR [rbp-0x3c]
   14003a902:	sbb    eax,eax
   14003a904:	and    eax,0x80000000
   14003a909:	or     r8d,eax
   14003a90c:	mov    eax,DWORD PTR [rip+0x20b76]        # 0x14005b488
   14003a912:	or     r8d,DWORD PTR [rbp-0x18]
   14003a916:	cmp    eax,0x40
   14003a919:	jne    0x14003a926
   14003a91b:	mov    eax,DWORD PTR [rbp-0x14]
   14003a91e:	mov    DWORD PTR [rdx+0x4],r8d
   14003a922:	mov    DWORD PTR [rdx],eax
   14003a924:	jmp    0x14003a92e
   14003a926:	cmp    eax,0x20
   14003a929:	jne    0x14003a92e
   14003a92b:	mov    DWORD PTR [rdx],r8d
   14003a92e:	mov    eax,ebx
   14003a930:	mov    rcx,QWORD PTR [rbp-0x8]
   14003a934:	xor    rcx,rsp
   14003a937:	call   0x1400265a0
   14003a93c:	lea    r11,[rsp+0x60]
   14003a941:	mov    rbx,QWORD PTR [r11+0x30]
   14003a945:	mov    rsi,QWORD PTR [r11+0x40]
   14003a949:	mov    rdi,QWORD PTR [r11+0x48]
   14003a94d:	mov    rsp,r11
   14003a950:	pop    r15
   14003a952:	pop    r14
   14003a954:	pop    r13
   14003a956:	pop    r12
   14003a958:	pop    rbp
   14003a959:	ret    
   14003a95a:	int3   
   14003a95b:	int3   
   14003a95c:	mov    QWORD PTR [rsp+0x18],rbx
   14003a961:	push   rbp
   14003a962:	push   rsi
   14003a963:	push   rdi
   14003a964:	push   r12
   14003a966:	push   r13
   14003a968:	push   r14
   14003a96a:	push   r15
   14003a96c:	lea    rbp,[rsp-0x7]
   14003a971:	sub    rsp,0xa0
   14003a978:	mov    rax,QWORD PTR [rip+0x1e709]        # 0x140059088
   14003a97f:	xor    rax,rsp
   14003a982:	mov    QWORD PTR [rbp-0x1],rax
   14003a986:	mov    r14,QWORD PTR [rbp+0x7f]
   14003a98a:	xor    ebx,ebx
   14003a98c:	mov    DWORD PTR [rbp-0x6d],r9d
   14003a990:	lea    r9d,[rbx+0x1]
   14003a994:	mov    QWORD PTR [rbp-0x59],rcx
   14003a998:	mov    QWORD PTR [rbp-0x69],rdx
   14003a99c:	lea    r10,[rbp-0x21]
   14003a9a0:	mov    WORD PTR [rbp-0x71],bx
   14003a9a4:	mov    r11d,ebx
   14003a9a7:	mov    DWORD PTR [rbp-0x75],r9d
   14003a9ab:	mov    r15d,ebx
   14003a9ae:	mov    DWORD PTR [rbp-0x79],ebx
   14003a9b1:	mov    r12d,ebx
   14003a9b4:	mov    r13d,ebx
   14003a9b7:	mov    esi,ebx
   14003a9b9:	mov    ecx,ebx
   14003a9bb:	test   r14,r14
   14003a9be:	jne    0x14003a9d7
   14003a9c0:	call   0x140029bf8
   14003a9c5:	mov    DWORD PTR [rax],0x16
   14003a9cb:	call   0x140029b2c
   14003a9d0:	xor    eax,eax
   14003a9d2:	jmp    0x14003b186
   14003a9d7:	mov    rdi,r8
   14003a9da:	cmp    BYTE PTR [r8],0x20
   14003a9de:	ja     0x14003a9f9
   14003a9e0:	movsx  rax,BYTE PTR [r8]
   14003a9e4:	movabs rdx,0x100002600
   14003a9ee:	bt     rdx,rax
   14003a9f2:	jae    0x14003a9f9
   14003a9f4:	add    r8,r9
   14003a9f7:	jmp    0x14003a9da
   14003a9f9:	mov    dl,BYTE PTR [r8]
   14003a9fc:	add    r8,r9
   14003a9ff:	cmp    ecx,0x5
   14003aa02:	jg     0x14003ac12
   14003aa08:	je     0x14003abf8
   14003aa0e:	mov    r9d,ecx
   14003aa11:	test   ecx,ecx
   14003aa13:	je     0x14003ab9c
   14003aa19:	dec    r9d
   14003aa1c:	je     0x14003ab5c
   14003aa22:	dec    r9d
   14003aa25:	je     0x14003ab0a
   14003aa2b:	dec    r9d
   14003aa2e:	je     0x14003aabd
   14003aa34:	dec    r9d
   14003aa37:	jne    0x14003acd7
   14003aa3d:	mov    r9d,0x1
   14003aa43:	mov    al,0x30
   14003aa45:	mov    r15d,r9d
   14003aa48:	mov    DWORD PTR [rbp-0x79],r9d
   14003aa4c:	test   r11d,r11d
   14003aa4f:	jne    0x14003aa81
   14003aa51:	jmp    0x14003aa5c
   14003aa53:	mov    dl,BYTE PTR [r8]
   14003aa56:	sub    esi,r9d
   14003aa59:	add    r8,r9
   14003aa5c:	cmp    dl,al
   14003aa5e:	je     0x14003aa53
   14003aa60:	jmp    0x14003aa81
   14003aa62:	cmp    dl,0x39
   14003aa65:	jg     0x14003aa85
   14003aa67:	cmp    r11d,0x19
   14003aa6b:	jae    0x14003aa7b
   14003aa6d:	sub    dl,al
   14003aa6f:	add    r11d,r9d
   14003aa72:	mov    BYTE PTR [r10],dl
   14003aa75:	add    r10,r9
   14003aa78:	sub    esi,r9d
   14003aa7b:	mov    dl,BYTE PTR [r8]
   14003aa7e:	add    r8,r9
   14003aa81:	cmp    dl,al
   14003aa83:	jge    0x14003aa62
   14003aa85:	lea    eax,[rdx-0x2b]
   14003aa88:	test   al,0xfd
   14003aa8a:	je     0x14003aab0
   14003aa8c:	cmp    dl,0x43
   14003aa8f:	jle    0x14003abd1
   14003aa95:	cmp    dl,0x45
   14003aa98:	jle    0x14003aaa6
   14003aa9a:	sub    dl,0x64
   14003aa9d:	cmp    dl,r9b
   14003aaa0:	ja     0x14003abd1
   14003aaa6:	mov    ecx,0x6
   14003aaab:	jmp    0x14003a9f9
   14003aab0:	sub    r8,r9
   14003aab3:	mov    ecx,0xb
   14003aab8:	jmp    0x14003a9f9
   14003aabd:	mov    r9d,0x1
   14003aac3:	mov    al,0x30
   14003aac5:	mov    r15d,r9d
   14003aac8:	jmp    0x14003aaeb
   14003aaca:	cmp    dl,0x39
   14003aacd:	jg     0x14003aaef
   14003aacf:	cmp    r11d,0x19
   14003aad3:	jae    0x14003aae2
   14003aad5:	sub    dl,al
   14003aad7:	add    r11d,r9d
   14003aada:	mov    BYTE PTR [r10],dl
   14003aadd:	add    r10,r9
   14003aae0:	jmp    0x14003aae5
   14003aae2:	add    esi,r9d
   14003aae5:	mov    dl,BYTE PTR [r8]
   14003aae8:	add    r8,r9
   14003aaeb:	cmp    dl,al
   14003aaed:	jge    0x14003aaca
   14003aaef:	mov    rax,QWORD PTR [r14]
   14003aaf2:	mov    rcx,QWORD PTR [rax+0xf0]
   14003aaf9:	mov    rax,QWORD PTR [rcx]
   14003aafc:	cmp    dl,BYTE PTR [rax]
   14003aafe:	jne    0x14003aa85
   14003ab00:	mov    ecx,0x4
   14003ab05:	jmp    0x14003a9f9
   14003ab0a:	lea    eax,[rdx-0x31]
   14003ab0d:	cmp    al,0x8
   14003ab0f:	ja     0x14003ab24
   14003ab11:	mov    ecx,0x3
   14003ab16:	mov    r9d,0x1
   14003ab1c:	sub    r8,r9
   14003ab1f:	jmp    0x14003a9f9
   14003ab24:	mov    rax,QWORD PTR [r14]
   14003ab27:	mov    rcx,QWORD PTR [rax+0xf0]
   14003ab2e:	mov    rax,QWORD PTR [rcx]
   14003ab31:	cmp    dl,BYTE PTR [rax]
   14003ab33:	jne    0x14003ab45
   14003ab35:	mov    ecx,0x5
   14003ab3a:	mov    r9d,0x1
   14003ab40:	jmp    0x14003a9f9
   14003ab45:	cmp    dl,0x30
   14003ab48:	jne    0x14003ad40
   14003ab4e:	mov    r9d,0x1
   14003ab54:	mov    ecx,r9d
   14003ab57:	jmp    0x14003a9f9
   14003ab5c:	lea    eax,[rdx-0x31]
   14003ab5f:	mov    r9d,0x1
   14003ab65:	mov    r15d,r9d
   14003ab68:	cmp    al,0x8
   14003ab6a:	ja     0x14003ab72
   14003ab6c:	lea    ecx,[r9+0x2]
   14003ab70:	jmp    0x14003ab1c
   14003ab72:	mov    rax,QWORD PTR [r14]
   14003ab75:	mov    rcx,QWORD PTR [rax+0xf0]
   14003ab7c:	mov    rax,QWORD PTR [rcx]
   14003ab7f:	cmp    dl,BYTE PTR [rax]
   14003ab81:	je     0x14003ab00
   14003ab87:	lea    eax,[rdx-0x2b]
   14003ab8a:	test   al,0xfd
   14003ab8c:	je     0x14003aab0
   14003ab92:	cmp    dl,0x30
   14003ab95:	je     0x14003ab54
   14003ab97:	jmp    0x14003aa8c
   14003ab9c:	lea    eax,[rdx-0x31]
   14003ab9f:	cmp    al,0x8
   14003aba1:	jbe    0x14003ab11
   14003aba7:	mov    rax,QWORD PTR [r14]
   14003abaa:	mov    rcx,QWORD PTR [rax+0xf0]
   14003abb1:	mov    rax,QWORD PTR [rcx]
   14003abb4:	cmp    dl,BYTE PTR [rax]
   14003abb6:	je     0x14003ab35
   14003abbc:	cmp    dl,0x2b
   14003abbf:	je     0x14003abea
   14003abc1:	cmp    dl,0x2d
   14003abc4:	je     0x14003abd9
   14003abc6:	cmp    dl,0x30
   14003abc9:	je     0x14003ab4e
   14003abcb:	mov    r9d,0x1
   14003abd1:	sub    r8,r9
   14003abd4:	jmp    0x14003ad49
   14003abd9:	mov    ecx,0x2
   14003abde:	mov    DWORD PTR [rbp-0x71],0x8000
   14003abe5:	jmp    0x14003ab3a
   14003abea:	mov    ecx,0x2
   14003abef:	mov    WORD PTR [rbp-0x71],bx
   14003abf3:	jmp    0x14003ab3a
   14003abf8:	sub    dl,0x30
   14003abfb:	mov    DWORD PTR [rbp-0x79],r9d
   14003abff:	cmp    dl,0x9
   14003ac02:	ja     0x14003ace1
   14003ac08:	mov    ecx,0x4
   14003ac0d:	jmp    0x14003ab1c
   14003ac12:	mov    r9d,ecx
   14003ac15:	sub    r9d,0x6
   14003ac19:	je     0x14003acbb
   14003ac1f:	dec    r9d
   14003ac22:	je     0x14003ac97
   14003ac24:	dec    r9d
   14003ac27:	je     0x14003ac6b
   14003ac29:	dec    r9d
   14003ac2c:	je     0x14003ace6
   14003ac32:	cmp    r9d,0x2
   14003ac36:	jne    0x14003acd7
   14003ac3c:	cmp    DWORD PTR [rbp+0x77],ebx
   14003ac3f:	je     0x14003abcb
   14003ac41:	lea    rdi,[r8-0x1]
   14003ac45:	cmp    dl,0x2b
   14003ac48:	je     0x14003ac61
   14003ac4a:	cmp    dl,0x2d
   14003ac4d:	jne    0x14003ad40
   14003ac53:	or     DWORD PTR [rbp-0x75],0xffffffff
   14003ac57:	mov    ecx,0x7
   14003ac5c:	jmp    0x14003ab3a
   14003ac61:	mov    ecx,0x7
   14003ac66:	jmp    0x14003ab3a
   14003ac6b:	mov    r9d,0x1
   14003ac71:	mov    r12d,r9d
   14003ac74:	jmp    0x14003ac7c
   14003ac76:	mov    dl,BYTE PTR [r8]
   14003ac79:	add    r8,r9
   14003ac7c:	cmp    dl,0x30
   14003ac7f:	je     0x14003ac76
   14003ac81:	sub    dl,0x31
   14003ac84:	cmp    dl,0x8
   14003ac87:	ja     0x14003abd1
   14003ac8d:	mov    ecx,0x9
   14003ac92:	jmp    0x14003ab1c
   14003ac97:	lea    eax,[rdx-0x31]
   14003ac9a:	cmp    al,0x8
   14003ac9c:	ja     0x14003aca8
   14003ac9e:	mov    ecx,0x9
   14003aca3:	jmp    0x14003ab16
   14003aca8:	cmp    dl,0x30
   14003acab:	jne    0x14003ad40
   14003acb1:	mov    ecx,0x8
   14003acb6:	jmp    0x14003ab3a
   14003acbb:	lea    eax,[rdx-0x31]
   14003acbe:	lea    rdi,[r8-0x2]
   14003acc2:	cmp    al,0x8
   14003acc4:	jbe    0x14003ac9e
   14003acc6:	cmp    dl,0x2b
   14003acc9:	je     0x14003acd2
   14003accb:	cmp    dl,0x2d
   14003acce:	je     0x14003ac53
   14003acd0:	jmp    0x14003aca8
   14003acd2:	mov    ecx,0x7
   14003acd7:	cmp    ecx,0xa
   14003acda:	je     0x14003ad43
   14003acdc:	jmp    0x14003ab3a
   14003ace1:	mov    r8,rdi
   14003ace4:	jmp    0x14003ad49
   14003ace6:	mov    r9d,0x1
   14003acec:	mov    dil,0x30
   14003acef:	mov    r12d,r9d
   14003acf2:	jmp    0x14003ad18
   14003acf4:	cmp    dl,0x39
   14003acf7:	jg     0x14003ad36
   14003acf9:	lea    r13d,[r13+r13*4+0x0]
   14003acfe:	movsx  eax,dl
   14003ad01:	lea    r13d,[r13-0x18]
   14003ad05:	lea    r13d,[rax+r13*2]
   14003ad09:	cmp    r13d,0x1450
   14003ad10:	jg     0x14003ad1f
   14003ad12:	mov    dl,BYTE PTR [r8]
   14003ad15:	add    r8,r9
   14003ad18:	cmp    dl,dil
   14003ad1b:	jge    0x14003acf4
   14003ad1d:	jmp    0x14003ad36
   14003ad1f:	mov    r13d,0x1451
   14003ad25:	jmp    0x14003ad36
   14003ad27:	cmp    dl,0x39
   14003ad2a:	jg     0x14003abd1
   14003ad30:	mov    dl,BYTE PTR [r8]
   14003ad33:	add    r8,r9
   14003ad36:	cmp    dl,dil
   14003ad39:	jge    0x14003ad27
   14003ad3b:	jmp    0x14003abd1
   14003ad40:	mov    r8,rdi
   14003ad43:	mov    r9d,0x1
   14003ad49:	mov    rax,QWORD PTR [rbp-0x69]
   14003ad4d:	mov    QWORD PTR [rax],r8
   14003ad50:	test   r15d,r15d
   14003ad53:	je     0x14003b15c
   14003ad59:	cmp    r11d,0x18
   14003ad5d:	jbe    0x14003ad78
   14003ad5f:	mov    al,BYTE PTR [rbp-0xa]
   14003ad62:	cmp    al,0x5
   14003ad64:	jl     0x14003ad6c
   14003ad66:	add    al,r9b
   14003ad69:	mov    BYTE PTR [rbp-0xa],al
   14003ad6c:	sub    r10,r9
   14003ad6f:	mov    r11d,0x18
   14003ad75:	add    esi,r9d
   14003ad78:	test   r11d,r11d
   14003ad7b:	jne    0x14003ad92
   14003ad7d:	movzx  edx,bx
   14003ad80:	movzx  eax,bx
   14003ad83:	mov    edi,ebx
   14003ad85:	mov    ecx,ebx
   14003ad87:	jmp    0x14003b16b
   14003ad8c:	dec    r11d
   14003ad8f:	add    esi,r9d
   14003ad92:	sub    r10,r9
   14003ad95:	cmp    BYTE PTR [r10],bl
   14003ad98:	je     0x14003ad8c
   14003ad9a:	lea    r8,[rbp-0x41]
   14003ad9e:	lea    rcx,[rbp-0x21]
   14003ada2:	mov    edx,r11d
   14003ada5:	call   0x14003bc7c
   14003adaa:	cmp    DWORD PTR [rbp-0x75],ebx
   14003adad:	jge    0x14003adb2
   14003adaf:	neg    r13d
   14003adb2:	add    r13d,esi
   14003adb5:	test   r12d,r12d
   14003adb8:	jne    0x14003adbe
   14003adba:	add    r13d,DWORD PTR [rbp+0x67]
   14003adbe:	cmp    DWORD PTR [rbp-0x79],ebx
   14003adc1:	jne    0x14003adc7
   14003adc3:	sub    r13d,DWORD PTR [rbp+0x6f]
   14003adc7:	cmp    r13d,0x1450
   14003adce:	jg     0x14003b146
   14003add4:	cmp    r13d,0xffffebb0
   14003addb:	jl     0x14003b136
   14003ade1:	lea    r14,[rip+0x206a8]        # 0x14005b490
   14003ade8:	sub    r14,0x60
   14003adec:	test   r13d,r13d
   14003adef:	je     0x14003b124
   14003adf5:	jns    0x14003ae05
   14003adf7:	lea    r14,[rip+0x207f2]        # 0x14005b5f0
   14003adfe:	neg    r13d
   14003ae01:	sub    r14,0x60
   14003ae05:	cmp    DWORD PTR [rbp-0x6d],ebx
   14003ae08:	jne    0x14003ae0e
   14003ae0a:	mov    WORD PTR [rbp-0x41],bx
   14003ae0e:	test   r13d,r13d
   14003ae11:	je     0x14003b124
   14003ae17:	mov    edi,0x80000000
   14003ae1c:	mov    r9d,0x7fff
   14003ae22:	mov    eax,r13d
   14003ae25:	add    r14,0x54
   14003ae29:	sar    r13d,0x3
   14003ae2d:	mov    QWORD PTR [rbp-0x61],r14
   14003ae31:	and    eax,0x7
   14003ae34:	je     0x14003b11b
   14003ae3a:	cdqe   
   14003ae3c:	mov    r11d,0x8000
   14003ae42:	mov    esi,0x1
   14003ae47:	lea    rcx,[rax+rax*2]
   14003ae4b:	lea    rdx,[r14+rcx*4]
   14003ae4f:	mov    QWORD PTR [rbp-0x69],rdx
   14003ae53:	cmp    WORD PTR [rdx],r11w
   14003ae57:	jb     0x14003ae77
   14003ae59:	mov    rcx,QWORD PTR [rdx]
   14003ae5c:	mov    eax,DWORD PTR [rdx+0x8]
   14003ae5f:	lea    rdx,[rbp-0x31]
   14003ae63:	mov    QWORD PTR [rbp-0x31],rcx
   14003ae67:	shr    rcx,0x10
   14003ae6b:	mov    DWORD PTR [rbp-0x29],eax
   14003ae6e:	sub    ecx,esi
   14003ae70:	mov    QWORD PTR [rbp-0x69],rdx
   14003ae74:	mov    DWORD PTR [rbp-0x2f],ecx
   14003ae77:	movzx  eax,WORD PTR [rdx+0xa]
   14003ae7b:	movzx  ecx,WORD PTR [rbp-0x37]
   14003ae7f:	mov    QWORD PTR [rbp-0x51],rbx
   14003ae83:	movzx  r12d,ax
   14003ae87:	and    ax,r9w
   14003ae8b:	mov    DWORD PTR [rbp-0x49],ebx
   14003ae8e:	xor    r12w,cx
   14003ae92:	and    cx,r9w
   14003ae96:	and    r12w,r11w
   14003ae9a:	lea    r8d,[rcx+rax*1]
   14003ae9e:	cmp    cx,r9w
   14003aea2:	jae    0x14003b107
   14003aea8:	cmp    ax,r9w
   14003aeac:	jae    0x14003b107
   14003aeb2:	mov    r10d,0xbffd
   14003aeb8:	cmp    r8w,r10w
   14003aebc:	ja     0x14003b107
   14003aec2:	mov    r10d,0x3fbf
   14003aec8:	cmp    r8w,r10w
   14003aecc:	ja     0x14003aeda
   14003aece:	mov    QWORD PTR [rbp-0x3d],rbx
   14003aed2:	mov    DWORD PTR [rbp-0x41],ebx
   14003aed5:	jmp    0x14003b11b
   14003aeda:	test   cx,cx
   14003aedd:	jne    0x14003aeff
   14003aedf:	add    r8w,si
   14003aee3:	test   DWORD PTR [rbp-0x39],0x7fffffff
   14003aeea:	jne    0x14003aeff
   14003aeec:	cmp    DWORD PTR [rbp-0x3d],ebx
   14003aeef:	jne    0x14003aeff
   14003aef1:	cmp    DWORD PTR [rbp-0x41],ebx
   14003aef4:	jne    0x14003aeff
   14003aef6:	mov    WORD PTR [rbp-0x37],bx
   14003aefa:	jmp    0x14003b11b
   14003aeff:	test   ax,ax
   14003af02:	jne    0x14003af1a
   14003af04:	add    r8w,si
   14003af08:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14003af0f:	jne    0x14003af1a
   14003af11:	cmp    DWORD PTR [rdx+0x4],ebx
   14003af14:	jne    0x14003af1a
   14003af16:	cmp    DWORD PTR [rdx],ebx
   14003af18:	je     0x14003aece
   14003af1a:	mov    r15d,ebx
   14003af1d:	lea    rcx,[rbp-0x51]
   14003af21:	mov    r10d,0x5
   14003af27:	lea    eax,[r15+r15*1]
   14003af2b:	mov    DWORD PTR [rbp-0x79],r10d
   14003af2f:	movsxd r9,eax
   14003af32:	test   r10d,r10d
   14003af35:	jle    0x14003af99
   14003af37:	mov    eax,r15d
   14003af3a:	lea    rdi,[rbp-0x41]
   14003af3e:	lea    r14,[rdx+0x8]
   14003af42:	and    eax,esi
   14003af44:	add    rdi,r9
   14003af47:	mov    edx,eax
   14003af49:	movzx  eax,WORD PTR [r14]
   14003af4d:	movzx  r9d,WORD PTR [rdi]
   14003af51:	mov    r11d,ebx
   14003af54:	imul   r9d,eax
   14003af58:	mov    eax,DWORD PTR [rcx]
   14003af5a:	lea    esi,[rax+r9*1]
   14003af5e:	cmp    esi,eax
   14003af60:	jb     0x14003af67
   14003af62:	cmp    esi,r9d
   14003af65:	jae    0x14003af6d
   14003af67:	mov    r11d,0x1
   14003af6d:	mov    DWORD PTR [rcx],esi
   14003af6f:	mov    esi,0x1
   14003af74:	test   r11d,r11d
   14003af77:	je     0x14003af7d
   14003af79:	add    WORD PTR [rcx+0x4],si
   14003af7d:	mov    r11d,DWORD PTR [rbp-0x79]
   14003af81:	add    rdi,0x2
   14003af85:	sub    r14,0x2
   14003af89:	sub    r11d,esi
   14003af8c:	mov    DWORD PTR [rbp-0x79],r11d
   14003af90:	test   r11d,r11d
   14003af93:	jg     0x14003af49
   14003af95:	mov    rdx,QWORD PTR [rbp-0x69]
   14003af99:	sub    r10d,esi
   14003af9c:	add    rcx,0x2
   14003afa0:	add    r15d,esi
   14003afa3:	test   r10d,r10d
   14003afa6:	jg     0x14003af27
   14003afac:	mov    r10d,DWORD PTR [rbp-0x49]
   14003afb0:	mov    r9d,DWORD PTR [rbp-0x51]
   14003afb4:	mov    eax,0xc002
   14003afb9:	add    r8w,ax
   14003afbd:	mov    edi,0x80000000
   14003afc2:	mov    r15d,0xffff
   14003afc8:	test   r8w,r8w
   14003afcc:	jle    0x14003b00d
   14003afce:	test   edi,r10d
   14003afd1:	jne    0x14003b007
   14003afd3:	mov    r11d,DWORD PTR [rbp-0x4d]
   14003afd7:	mov    edx,r9d
   14003afda:	add    r10d,r10d
   14003afdd:	shr    edx,0x1f
   14003afe0:	add    r9d,r9d
   14003afe3:	mov    ecx,r11d
   14003afe6:	shr    ecx,0x1f
   14003afe9:	lea    eax,[r11+r11*1]
   14003afed:	add    r8w,r15w
   14003aff1:	or     eax,edx
   14003aff3:	or     r10d,ecx
   14003aff6:	mov    DWORD PTR [rbp-0x51],r9d
   14003affa:	mov    DWORD PTR [rbp-0x4d],eax
   14003affd:	mov    DWORD PTR [rbp-0x49],r10d
   14003b001:	test   r8w,r8w
   14003b005:	jg     0x14003afce
   14003b007:	test   r8w,r8w
   14003b00b:	jg     0x14003b075
   14003b00d:	add    r8w,r15w
   14003b011:	jns    0x14003b075
   14003b013:	movzx  eax,r8w
   14003b017:	mov    edi,ebx
   14003b019:	neg    ax
   14003b01c:	movzx  edx,ax
   14003b01f:	add    r8w,dx
   14003b023:	test   BYTE PTR [rbp-0x51],sil
   14003b027:	je     0x14003b02b
   14003b029:	add    edi,esi
   14003b02b:	mov    r11d,DWORD PTR [rbp-0x4d]
   14003b02f:	mov    eax,r10d
   14003b032:	shr    r9d,1
   14003b035:	mov    ecx,r11d
   14003b038:	shl    eax,0x1f
   14003b03b:	shr    r11d,1
   14003b03e:	shl    ecx,0x1f
   14003b041:	or     r11d,eax
   14003b044:	shr    r10d,1
   14003b047:	or     r9d,ecx
   14003b04a:	mov    DWORD PTR [rbp-0x4d],r11d
   14003b04e:	mov    DWORD PTR [rbp-0x51],r9d
   14003b052:	sub    rdx,rsi
   14003b055:	jne    0x14003b023
   14003b057:	test   edi,edi
   14003b059:	mov    DWORD PTR [rbp-0x49],r10d
   14003b05d:	mov    edi,0x80000000
   14003b062:	je     0x14003b075
   14003b064:	movzx  eax,r9w
   14003b068:	or     ax,si
   14003b06b:	mov    WORD PTR [rbp-0x51],ax
   14003b06f:	mov    r9d,DWORD PTR [rbp-0x51]
   14003b073:	jmp    0x14003b079
   14003b075:	movzx  eax,WORD PTR [rbp-0x51]
   14003b079:	mov    r14,QWORD PTR [rbp-0x61]
   14003b07d:	mov    r11d,0x8000
   14003b083:	cmp    ax,r11w
   14003b087:	ja     0x14003b099
   14003b089:	and    r9d,0x1ffff
   14003b090:	cmp    r9d,0x18000
   14003b097:	jne    0x14003b0de
   14003b099:	mov    eax,DWORD PTR [rbp-0x4f]
   14003b09c:	or     ecx,0xffffffff
   14003b09f:	cmp    eax,ecx
   14003b0a1:	jne    0x14003b0d9
   14003b0a3:	mov    eax,DWORD PTR [rbp-0x4b]
   14003b0a6:	mov    DWORD PTR [rbp-0x4f],ebx
   14003b0a9:	cmp    eax,ecx
   14003b0ab:	jne    0x14003b0ce
   14003b0ad:	movzx  eax,WORD PTR [rbp-0x47]
   14003b0b1:	mov    DWORD PTR [rbp-0x4b],ebx
   14003b0b4:	cmp    ax,r15w
   14003b0b8:	jne    0x14003b0c5
   14003b0ba:	mov    WORD PTR [rbp-0x47],r11w
   14003b0bf:	add    r8w,si
   14003b0c3:	jmp    0x14003b0d3
   14003b0c5:	add    ax,si
   14003b0c8:	mov    WORD PTR [rbp-0x47],ax
   14003b0cc:	jmp    0x14003b0d3
   14003b0ce:	add    eax,esi
   14003b0d0:	mov    DWORD PTR [rbp-0x4b],eax
   14003b0d3:	mov    r10d,DWORD PTR [rbp-0x49]
   14003b0d7:	jmp    0x14003b0de
   14003b0d9:	add    eax,esi
   14003b0db:	mov    DWORD PTR [rbp-0x4f],eax
   14003b0de:	mov    r9d,0x7fff
   14003b0e4:	cmp    r8w,r9w
   14003b0e8:	jae    0x14003b107
   14003b0ea:	movzx  eax,WORD PTR [rbp-0x4f]
   14003b0ee:	or     r8w,r12w
   14003b0f2:	mov    DWORD PTR [rbp-0x3b],r10d
   14003b0f6:	mov    WORD PTR [rbp-0x41],ax
   14003b0fa:	mov    eax,DWORD PTR [rbp-0x4d]
   14003b0fd:	mov    WORD PTR [rbp-0x37],r8w
   14003b102:	mov    DWORD PTR [rbp-0x3f],eax
   14003b105:	jmp    0x14003b11b
   14003b107:	neg    r12w
   14003b10b:	mov    QWORD PTR [rbp-0x41],rbx
   14003b10f:	sbb    eax,eax
   14003b111:	and    eax,edi
   14003b113:	add    eax,0x7fff8000
   14003b118:	mov    DWORD PTR [rbp-0x39],eax
   14003b11b:	test   r13d,r13d
   14003b11e:	jne    0x14003ae22
   14003b124:	mov    eax,DWORD PTR [rbp-0x39]
   14003b127:	movzx  edx,WORD PTR [rbp-0x41]
   14003b12b:	mov    ecx,DWORD PTR [rbp-0x3f]
   14003b12e:	mov    edi,DWORD PTR [rbp-0x3b]
   14003b131:	shr    eax,0x10
   14003b134:	jmp    0x14003b16b
   14003b136:	mov    edx,ebx
   14003b138:	movzx  eax,bx
   14003b13b:	mov    edi,ebx
   14003b13d:	mov    ecx,ebx
   14003b13f:	mov    ebx,0x1
   14003b144:	jmp    0x14003b16b
   14003b146:	mov    ecx,ebx
   14003b148:	movzx  edx,bx
   14003b14b:	mov    eax,0x7fff
   14003b150:	mov    ebx,0x2
   14003b155:	mov    edi,0x80000000
   14003b15a:	jmp    0x14003b16b
   14003b15c:	movzx  edx,bx
   14003b15f:	movzx  eax,bx
   14003b162:	mov    edi,ebx
   14003b164:	mov    ecx,ebx
   14003b166:	mov    ebx,0x4
   14003b16b:	mov    r8,QWORD PTR [rbp-0x59]
   14003b16f:	or     ax,WORD PTR [rbp-0x71]
   14003b173:	mov    WORD PTR [r8+0xa],ax
   14003b178:	mov    eax,ebx
   14003b17a:	mov    WORD PTR [r8],dx
   14003b17e:	mov    DWORD PTR [r8+0x2],ecx
   14003b182:	mov    DWORD PTR [r8+0x6],edi
   14003b186:	mov    rcx,QWORD PTR [rbp-0x1]
   14003b18a:	xor    rcx,rsp
   14003b18d:	call   0x1400265a0
   14003b192:	mov    rbx,QWORD PTR [rsp+0xf0]
   14003b19a:	add    rsp,0xa0
   14003b1a1:	pop    r15
   14003b1a3:	pop    r14
   14003b1a5:	pop    r13
   14003b1a7:	pop    r12
   14003b1a9:	pop    rdi
   14003b1aa:	pop    rsi
   14003b1ab:	pop    rbp
   14003b1ac:	ret    
   14003b1ad:	int3   
   14003b1ae:	int3   
   14003b1af:	int3   
   14003b1b0:	mov    QWORD PTR [rsp+0x10],rbx
   14003b1b5:	push   rbp
   14003b1b6:	push   rsi
   14003b1b7:	push   rdi
   14003b1b8:	push   r12
   14003b1ba:	push   r13
   14003b1bc:	push   r14
   14003b1be:	push   r15
   14003b1c0:	lea    rbp,[rsp-0x27]
   14003b1c5:	sub    rsp,0xc0
   14003b1cc:	mov    rax,QWORD PTR [rip+0x1deb5]        # 0x140059088
   14003b1d3:	xor    rax,rsp
   14003b1d6:	mov    QWORD PTR [rbp+0x17],rax
   14003b1da:	movzx  edi,WORD PTR [rcx+0x8]
   14003b1de:	mov    r10d,DWORD PTR [rcx]
   14003b1e1:	mov    rbx,r9
   14003b1e4:	mov    r9d,DWORD PTR [rcx+0x4]
   14003b1e8:	movzx  ecx,di
   14003b1eb:	mov    r11d,0x1
   14003b1f1:	mov    DWORD PTR [rbp-0x4d],edx
   14003b1f4:	mov    edx,0x8000
   14003b1f9:	xor    r15d,r15d
   14003b1fc:	and    cx,dx
   14003b1ff:	lea    r13d,[rdx-0x1]
   14003b203:	mov    DWORD PTR [rbp-0x39],r8d
   14003b207:	and    di,r13w
   14003b20b:	mov    QWORD PTR [rbp-0x41],rbx
   14003b20f:	mov    DWORD PTR [rbp-0x9],0xcccccccc
   14003b216:	mov    DWORD PTR [rbp-0x5],0xcccccccc
   14003b21d:	mov    DWORD PTR [rbp-0x1],0x3ffbcccc
   14003b224:	mov    WORD PTR [rbp-0x67],cx
   14003b228:	lea    eax,[r11+0x1f]
   14003b22c:	lea    r8d,[r11+0x2c]
   14003b230:	test   cx,cx
   14003b233:	je     0x14003b23b
   14003b235:	mov    BYTE PTR [rbx+0x2],r8b
   14003b239:	jmp    0x14003b23e
   14003b23b:	mov    BYTE PTR [rbx+0x2],al
   14003b23e:	test   di,di
   14003b241:	jne    0x14003b272
   14003b243:	test   r9d,r9d
   14003b246:	jne    0x14003b341
   14003b24c:	test   r10d,r10d
   14003b24f:	jne    0x14003b341
   14003b255:	cmp    cx,dx
   14003b258:	cmove  eax,r8d
   14003b25c:	mov    WORD PTR [rbx],r15w
   14003b260:	mov    BYTE PTR [rbx+0x2],al
   14003b263:	mov    WORD PTR [rbx+0x3],0x3001
   14003b269:	mov    BYTE PTR [rbx+0x5],r15b
   14003b26d:	jmp    0x14003bbc2
   14003b272:	cmp    di,r13w
   14003b276:	jne    0x14003b341
   14003b27c:	mov    esi,0x80000000
   14003b281:	mov    WORD PTR [rbx],r11w
   14003b285:	cmp    r9d,esi
   14003b288:	jne    0x14003b28f
   14003b28a:	test   r10d,r10d
   14003b28d:	je     0x14003b2b8
   14003b28f:	bt     r9d,0x1e
   14003b294:	jb     0x14003b2b8
   14003b296:	lea    rcx,[rbx+0x4]
   14003b29a:	lea    r8,[rip+0xfb5f]        # 0x14004ae00
   14003b2a1:	mov    edx,0x16
   14003b2a6:	call   0x14002e728
   14003b2ab:	test   eax,eax
   14003b2ad:	je     0x14003b335
   14003b2b3:	jmp    0x14003bc28
   14003b2b8:	test   cx,cx
   14003b2bb:	je     0x14003b2e8
   14003b2bd:	cmp    r9d,0xc0000000
   14003b2c4:	jne    0x14003b2e8
   14003b2c6:	test   r10d,r10d
   14003b2c9:	jne    0x14003b318
   14003b2cb:	lea    rcx,[rbx+0x4]
   14003b2cf:	lea    r8,[rip+0xfb32]        # 0x14004ae08
   14003b2d6:	lea    edx,[r10+0x16]
   14003b2da:	call   0x14002e728
   14003b2df:	test   eax,eax
   14003b2e1:	je     0x14003b30e
   14003b2e3:	jmp    0x14003bc3d
   14003b2e8:	cmp    r9d,esi
   14003b2eb:	jne    0x14003b318
   14003b2ed:	test   r10d,r10d
   14003b2f0:	jne    0x14003b318
   14003b2f2:	lea    rcx,[rbx+0x4]
   14003b2f6:	lea    r8,[rip+0xfb13]        # 0x14004ae10
   14003b2fd:	lea    edx,[r10+0x16]
   14003b301:	call   0x14002e728
   14003b306:	test   eax,eax
   14003b308:	jne    0x14003bc52
   14003b30e:	mov    eax,0x5
   14003b313:	mov    BYTE PTR [rbx+0x3],al
   14003b316:	jmp    0x14003b339
   14003b318:	lea    rcx,[rbx+0x4]
   14003b31c:	lea    r8,[rip+0xfaf5]        # 0x14004ae18
   14003b323:	mov    edx,0x16
   14003b328:	call   0x14002e728
   14003b32d:	test   eax,eax
   14003b32f:	jne    0x14003bc67
   14003b335:	mov    BYTE PTR [rbx+0x3],0x6
   14003b339:	mov    r11d,r15d
   14003b33c:	jmp    0x14003bbc2
   14003b341:	movzx  r8d,di
   14003b345:	mov    ecx,r9d
   14003b348:	mov    DWORD PTR [rbp-0x13],r9d
   14003b34c:	shr    ecx,0x18
   14003b34f:	mov    eax,r8d
   14003b352:	mov    DWORD PTR [rbp-0x17],r10d
   14003b356:	shr    eax,0x8
   14003b359:	lea    r9,[rip+0x20130]        # 0x14005b490
   14003b360:	mov    r14d,0x80000000
   14003b366:	imul   r8d,r8d,0x4d10
   14003b36d:	lea    edx,[rax+rcx*2]
   14003b370:	lea    ecx,[r8-0x134312f4]
   14003b377:	mov    r12d,0x5
   14003b37d:	sub    r9,0x60
   14003b381:	mov    WORD PTR [rbp-0xf],di
   14003b385:	mov    WORD PTR [rbp-0x19],r15w
   14003b38a:	imul   edx,edx,0x4d
   14003b38d:	add    ecx,edx
   14003b38f:	mov    DWORD PTR [rbp-0x49],r12d
   14003b393:	mov    esi,0xbffd
   14003b398:	sar    ecx,0x10
   14003b39b:	lea    edi,[r14-0x1]
   14003b39f:	movsx  r10d,cx
   14003b3a3:	mov    DWORD PTR [rbp-0x61],ecx
   14003b3a6:	neg    r10d
   14003b3a9:	je     0x14003b716
   14003b3af:	test   r10d,r10d
   14003b3b2:	jns    0x14003b3c5
   14003b3b4:	lea    r9,[rip+0x20235]        # 0x14005b5f0
   14003b3bb:	neg    r10d
   14003b3be:	sub    r9,0x60
   14003b3c2:	test   r10d,r10d
   14003b3c5:	je     0x14003b716
   14003b3cb:	mov    r8d,DWORD PTR [rbp-0x15]
   14003b3cf:	mov    edx,DWORD PTR [rbp-0x19]
   14003b3d2:	mov    eax,r10d
   14003b3d5:	add    r9,0x54
   14003b3d9:	sar    r10d,0x3
   14003b3dd:	mov    DWORD PTR [rbp-0x51],r10d
   14003b3e1:	mov    QWORD PTR [rbp-0x59],r9
   14003b3e5:	and    eax,0x7
   14003b3e8:	je     0x14003b6ff
   14003b3ee:	cdqe   
   14003b3f0:	lea    rcx,[rax+rax*2]
   14003b3f4:	lea    rsi,[r9+rcx*4]
   14003b3f8:	mov    r9d,0x8000
   14003b3fe:	mov    QWORD PTR [rbp-0x31],rsi
   14003b402:	cmp    WORD PTR [rsi],r9w
   14003b406:	jb     0x14003b427
   14003b408:	mov    rcx,QWORD PTR [rsi]
   14003b40b:	mov    eax,DWORD PTR [rsi+0x8]
   14003b40e:	lea    rsi,[rbp+0x7]
   14003b412:	mov    QWORD PTR [rbp+0x7],rcx
   14003b416:	shr    rcx,0x10
   14003b41a:	mov    DWORD PTR [rbp+0xf],eax
   14003b41d:	sub    ecx,r11d
   14003b420:	mov    QWORD PTR [rbp-0x31],rsi
   14003b424:	mov    DWORD PTR [rbp+0x9],ecx
   14003b427:	movzx  ecx,WORD PTR [rsi+0xa]
   14003b42b:	movzx  eax,WORD PTR [rbp-0xf]
   14003b42f:	mov    DWORD PTR [rbp-0x65],r15d
   14003b433:	movzx  ebx,cx
   14003b436:	and    cx,r13w
   14003b43a:	mov    QWORD PTR [rbp-0x29],0x0
   14003b442:	xor    bx,ax
   14003b445:	and    ax,r13w
   14003b449:	mov    DWORD PTR [rbp-0x21],r15d
   14003b44d:	and    bx,r9w
   14003b451:	lea    r9d,[rax+rcx*1]
   14003b455:	mov    WORD PTR [rbp-0x69],bx
   14003b459:	cmp    ax,r13w
   14003b45d:	jae    0x14003b6de
   14003b463:	cmp    cx,r13w
   14003b467:	jae    0x14003b6de
   14003b46d:	mov    r13d,0xbffd
   14003b473:	cmp    r9w,r13w
   14003b477:	ja     0x14003b6d8
   14003b47d:	mov    ebx,0x3fbf
   14003b482:	cmp    r9w,bx
   14003b486:	ja     0x14003b49b
   14003b488:	mov    QWORD PTR [rbp-0x15],0x0
   14003b490:	mov    r13d,0x7fff
   14003b496:	jmp    0x14003b6f2
   14003b49b:	test   ax,ax
   14003b49e:	jne    0x14003b4c2
   14003b4a0:	add    r9w,r11w
   14003b4a4:	test   DWORD PTR [rbp-0x11],edi
   14003b4a7:	jne    0x14003b4c2
   14003b4a9:	test   r8d,r8d
   14003b4ac:	jne    0x14003b4c2
   14003b4ae:	test   edx,edx
   14003b4b0:	jne    0x14003b4c2
   14003b4b2:	mov    WORD PTR [rbp-0xf],r15w
   14003b4b7:	mov    r13d,0x7fff
   14003b4bd:	jmp    0x14003b6fb
   14003b4c2:	test   cx,cx
   14003b4c5:	jne    0x14003b4db
   14003b4c7:	add    r9w,r11w
   14003b4cb:	test   DWORD PTR [rsi+0x8],edi
   14003b4ce:	jne    0x14003b4db
   14003b4d0:	cmp    DWORD PTR [rsi+0x4],r15d
   14003b4d4:	jne    0x14003b4db
   14003b4d6:	cmp    DWORD PTR [rsi],r15d
   14003b4d9:	je     0x14003b488
   14003b4db:	mov    r14d,r15d
   14003b4de:	lea    rdx,[rbp-0x29]
   14003b4e2:	mov    edi,r12d
   14003b4e5:	lea    eax,[r14+r14*1]
   14003b4e9:	mov    r13d,edi
   14003b4ec:	movsxd rcx,eax
   14003b4ef:	test   edi,edi
   14003b4f1:	jle    0x14003b54c
   14003b4f3:	lea    r15,[rbp-0x19]
   14003b4f7:	mov    ebx,r14d
   14003b4fa:	lea    r12,[rsi+0x8]
   14003b4fe:	add    r15,rcx
   14003b501:	and    ebx,r11d
   14003b504:	xor    esi,esi
   14003b506:	movzx  eax,WORD PTR [r12]
   14003b50b:	movzx  ecx,WORD PTR [r15]
   14003b50f:	mov    r10d,esi
   14003b512:	imul   ecx,eax
   14003b515:	mov    eax,DWORD PTR [rdx]
   14003b517:	lea    r8d,[rax+rcx*1]
   14003b51b:	cmp    r8d,eax
   14003b51e:	jb     0x14003b525
   14003b520:	cmp    r8d,ecx
   14003b523:	jae    0x14003b528
   14003b525:	mov    r10d,r11d
   14003b528:	mov    DWORD PTR [rdx],r8d
   14003b52b:	test   r10d,r10d
   14003b52e:	je     0x14003b535
   14003b530:	add    WORD PTR [rdx+0x4],r11w
   14003b535:	sub    r13d,r11d
   14003b538:	add    r15,0x2
   14003b53c:	sub    r12,0x2
   14003b540:	test   r13d,r13d
   14003b543:	jg     0x14003b506
   14003b545:	mov    rsi,QWORD PTR [rbp-0x31]
   14003b549:	xor    r15d,r15d
   14003b54c:	sub    edi,r11d
   14003b54f:	add    rdx,0x2
   14003b553:	add    r14d,r11d
   14003b556:	test   edi,edi
   14003b558:	jg     0x14003b4e5
   14003b55a:	mov    r10d,DWORD PTR [rbp-0x21]
   14003b55e:	mov    r8d,DWORD PTR [rbp-0x29]
   14003b562:	mov    eax,0xc002
   14003b567:	add    r9w,ax
   14003b56b:	mov    ebx,0xffff
   14003b570:	mov    r14d,0x80000000
   14003b576:	test   r9w,r9w
   14003b57a:	jle    0x14003b5b8
   14003b57c:	test   r14d,r10d
   14003b57f:	jne    0x14003b5b2
   14003b581:	mov    edi,DWORD PTR [rbp-0x25]
   14003b584:	mov    edx,r8d
   14003b587:	add    r10d,r10d
   14003b58a:	shr    edx,0x1f
   14003b58d:	add    r8d,r8d
   14003b590:	mov    ecx,edi
   14003b592:	shr    ecx,0x1f
   14003b595:	lea    eax,[rdi+rdi*1]
   14003b598:	add    r9w,bx
   14003b59c:	or     eax,edx
   14003b59e:	or     r10d,ecx
   14003b5a1:	mov    DWORD PTR [rbp-0x29],r8d
   14003b5a5:	mov    DWORD PTR [rbp-0x25],eax
   14003b5a8:	mov    DWORD PTR [rbp-0x21],r10d
   14003b5ac:	test   r9w,r9w
   14003b5b0:	jg     0x14003b57c
   14003b5b2:	test   r9w,r9w
   14003b5b6:	jg     0x14003b625
   14003b5b8:	add    r9w,bx
   14003b5bc:	jns    0x14003b625
   14003b5be:	movzx  eax,r9w
   14003b5c2:	neg    ax
   14003b5c5:	movzx  edx,ax
   14003b5c8:	add    r9w,dx
   14003b5cc:	mov    WORD PTR [rbp-0x5d],r9w
   14003b5d1:	mov    r9d,DWORD PTR [rbp-0x65]
   14003b5d5:	test   BYTE PTR [rbp-0x29],r11b
   14003b5d9:	je     0x14003b5de
   14003b5db:	add    r9d,r11d
   14003b5de:	mov    edi,DWORD PTR [rbp-0x25]
   14003b5e1:	mov    eax,r10d
   14003b5e4:	shr    r8d,1
   14003b5e7:	mov    ecx,edi
   14003b5e9:	shl    eax,0x1f
   14003b5ec:	shr    edi,1
   14003b5ee:	shl    ecx,0x1f
   14003b5f1:	or     edi,eax
   14003b5f3:	shr    r10d,1
   14003b5f6:	or     r8d,ecx
   14003b5f9:	mov    DWORD PTR [rbp-0x25],edi
   14003b5fc:	mov    DWORD PTR [rbp-0x29],r8d
   14003b600:	sub    rdx,r11
   14003b603:	jne    0x14003b5d5
   14003b605:	test   r9d,r9d
   14003b608:	movzx  r9d,WORD PTR [rbp-0x5d]
   14003b60d:	mov    DWORD PTR [rbp-0x21],r10d
   14003b611:	je     0x14003b625
   14003b613:	movzx  eax,r8w
   14003b617:	or     ax,r11w
   14003b61b:	mov    WORD PTR [rbp-0x29],ax
   14003b61f:	mov    r8d,DWORD PTR [rbp-0x29]
   14003b623:	jmp    0x14003b629
   14003b625:	movzx  eax,WORD PTR [rbp-0x29]
   14003b629:	mov    ecx,0x8000
   14003b62e:	cmp    ax,cx
   14003b631:	ja     0x14003b643
   14003b633:	and    r8d,0x1ffff
   14003b63a:	cmp    r8d,0x18000
   14003b641:	jne    0x14003b68b
   14003b643:	mov    eax,DWORD PTR [rbp-0x27]
   14003b646:	or     edx,0xffffffff
   14003b649:	cmp    eax,edx
   14003b64b:	jne    0x14003b685
   14003b64d:	mov    eax,DWORD PTR [rbp-0x23]
   14003b650:	mov    DWORD PTR [rbp-0x27],r15d
   14003b654:	cmp    eax,edx
   14003b656:	jne    0x14003b679
   14003b658:	movzx  eax,WORD PTR [rbp-0x1f]
   14003b65c:	mov    DWORD PTR [rbp-0x23],r15d
   14003b660:	cmp    ax,bx
   14003b663:	jne    0x14003b66f
   14003b665:	mov    WORD PTR [rbp-0x1f],cx
   14003b669:	add    r9w,r11w
   14003b66d:	jmp    0x14003b67f
   14003b66f:	add    ax,r11w
   14003b673:	mov    WORD PTR [rbp-0x1f],ax
   14003b677:	jmp    0x14003b67f
   14003b679:	add    eax,r11d
   14003b67c:	mov    DWORD PTR [rbp-0x23],eax
   14003b67f:	mov    r10d,DWORD PTR [rbp-0x21]
   14003b683:	jmp    0x14003b68b
   14003b685:	add    eax,r11d
   14003b688:	mov    DWORD PTR [rbp-0x27],eax
   14003b68b:	mov    r13d,0x7fff
   14003b691:	mov    r12d,0x5
   14003b697:	mov    edi,0x7fffffff
   14003b69c:	cmp    r9w,r13w
   14003b6a0:	jb     0x14003b6af
   14003b6a2:	movzx  eax,WORD PTR [rbp-0x69]
   14003b6a6:	mov    r10d,DWORD PTR [rbp-0x51]
   14003b6aa:	neg    ax
   14003b6ad:	jmp    0x14003b6e1
   14003b6af:	movzx  eax,WORD PTR [rbp-0x27]
   14003b6b3:	or     r9w,WORD PTR [rbp-0x69]
   14003b6b8:	mov    DWORD PTR [rbp-0x13],r10d
   14003b6bc:	mov    r10d,DWORD PTR [rbp-0x51]
   14003b6c0:	mov    WORD PTR [rbp-0x19],ax
   14003b6c4:	mov    eax,DWORD PTR [rbp-0x25]
   14003b6c7:	mov    DWORD PTR [rbp-0x17],eax
   14003b6ca:	mov    r8d,DWORD PTR [rbp-0x15]
   14003b6ce:	mov    edx,DWORD PTR [rbp-0x19]
   14003b6d1:	mov    WORD PTR [rbp-0xf],r9w
   14003b6d6:	jmp    0x14003b6fb
   14003b6d8:	mov    r13d,0x7fff
   14003b6de:	neg    bx
   14003b6e1:	sbb    eax,eax
   14003b6e3:	mov    DWORD PTR [rbp-0x15],r15d
   14003b6e7:	and    eax,r14d
   14003b6ea:	add    eax,0x7fff8000
   14003b6ef:	mov    DWORD PTR [rbp-0x11],eax
   14003b6f2:	mov    edx,r15d
   14003b6f5:	mov    r8d,r15d
   14003b6f8:	mov    DWORD PTR [rbp-0x19],edx
   14003b6fb:	mov    r9,QWORD PTR [rbp-0x59]
   14003b6ff:	test   r10d,r10d
   14003b702:	jne    0x14003b3d2
   14003b708:	mov    rbx,QWORD PTR [rbp-0x41]
   14003b70c:	mov    ecx,DWORD PTR [rbp-0x61]
   14003b70f:	mov    esi,0xbffd
   14003b714:	jmp    0x14003b71d
   14003b716:	mov    r8d,DWORD PTR [rbp-0x15]
   14003b71a:	mov    edx,DWORD PTR [rbp-0x19]
   14003b71d:	mov    eax,DWORD PTR [rbp-0x11]
   14003b720:	mov    r9d,0x3fff
   14003b726:	shr    eax,0x10
   14003b729:	cmp    ax,r9w
   14003b72d:	jb     0x14003b9e9
   14003b733:	add    cx,r11w
   14003b737:	mov    r9d,0x8000
   14003b73d:	mov    DWORD PTR [rbp-0x65],r15d
   14003b741:	lea    r10d,[r9-0x1]
   14003b745:	mov    DWORD PTR [rbp-0x61],ecx
   14003b748:	movzx  ecx,WORD PTR [rbp+0x1]
   14003b74c:	movzx  r13d,cx
   14003b750:	and    cx,r10w
   14003b754:	mov    QWORD PTR [rbp-0x29],0x0
   14003b75c:	xor    r13w,ax
   14003b760:	and    ax,r10w
   14003b764:	mov    DWORD PTR [rbp-0x21],r15d
   14003b768:	and    r13w,r9w
   14003b76c:	lea    r9d,[rax+rcx*1]
   14003b770:	cmp    ax,r10w
   14003b774:	jae    0x14003b9d2
   14003b77a:	cmp    cx,r10w
   14003b77e:	jae    0x14003b9d2
   14003b784:	cmp    r9w,si
   14003b788:	ja     0x14003b9d2
   14003b78e:	mov    r10d,0x3fbf
   14003b794:	cmp    r9w,r10w
   14003b798:	ja     0x14003b7a3
   14003b79a:	mov    DWORD PTR [rbp-0x11],r15d
   14003b79e:	jmp    0x14003b9e3
   14003b7a3:	test   ax,ax
   14003b7a6:	jne    0x14003b7c4
   14003b7a8:	add    r9w,r11w
   14003b7ac:	test   DWORD PTR [rbp-0x11],edi
   14003b7af:	jne    0x14003b7c4
   14003b7b1:	test   r8d,r8d
   14003b7b4:	jne    0x14003b7c4
   14003b7b6:	test   edx,edx
   14003b7b8:	jne    0x14003b7c4
   14003b7ba:	mov    WORD PTR [rbp-0xf],r15w
   14003b7bf:	jmp    0x14003b9e9
   14003b7c4:	test   cx,cx
   14003b7c7:	jne    0x14003b7de
   14003b7c9:	add    r9w,r11w
   14003b7cd:	test   DWORD PTR [rbp-0x1],edi
   14003b7d0:	jne    0x14003b7de
   14003b7d2:	cmp    DWORD PTR [rbp-0x5],r15d
   14003b7d6:	jne    0x14003b7de
   14003b7d8:	cmp    DWORD PTR [rbp-0x9],r15d
   14003b7dc:	je     0x14003b79a
   14003b7de:	mov    edi,r15d
   14003b7e1:	lea    rcx,[rbp-0x29]
   14003b7e5:	lea    eax,[rdi+rdi*1]
   14003b7e8:	xor    ebx,ebx
   14003b7ea:	mov    r15d,r12d
   14003b7ed:	movsxd rdx,eax
   14003b7f0:	test   r12d,r12d
   14003b7f3:	jle    0x14003b847
   14003b7f5:	lea    r14,[rbp-0x19]
   14003b7f9:	mov    r12d,edi
   14003b7fc:	lea    rsi,[rbp-0x1]
   14003b800:	and    r12d,r11d
   14003b803:	add    r14,rdx
   14003b806:	movzx  eax,WORD PTR [r14]
   14003b80a:	movzx  edx,WORD PTR [rsi]
   14003b80d:	mov    r8d,ebx
   14003b810:	imul   edx,eax
   14003b813:	mov    eax,DWORD PTR [rcx]
   14003b815:	lea    r10d,[rax+rdx*1]
   14003b819:	cmp    r10d,eax
   14003b81c:	jb     0x14003b823
   14003b81e:	cmp    r10d,edx
   14003b821:	jae    0x14003b826
   14003b823:	mov    r8d,r11d
   14003b826:	mov    DWORD PTR [rcx],r10d
   14003b829:	test   r8d,r8d
   14003b82c:	je     0x14003b833
   14003b82e:	add    WORD PTR [rcx+0x4],r11w
   14003b833:	sub    r15d,r11d
   14003b836:	add    r14,0x2
   14003b83a:	sub    rsi,0x2
   14003b83e:	test   r15d,r15d
   14003b841:	jg     0x14003b806
   14003b843:	mov    r12d,DWORD PTR [rbp-0x49]
   14003b847:	sub    r12d,r11d
   14003b84a:	add    rcx,0x2
   14003b84e:	add    edi,r11d
   14003b851:	xor    r15d,r15d
   14003b854:	mov    DWORD PTR [rbp-0x49],r12d
   14003b858:	test   r12d,r12d
   14003b85b:	jg     0x14003b7e5
   14003b85d:	mov    rbx,QWORD PTR [rbp-0x41]
   14003b861:	mov    r8d,DWORD PTR [rbp-0x21]
   14003b865:	mov    r10d,DWORD PTR [rbp-0x29]
   14003b869:	mov    eax,0xc002
   14003b86e:	mov    esi,0x80000000
   14003b873:	mov    r14d,0xffff
   14003b879:	add    r9w,ax
   14003b87d:	test   r9w,r9w
   14003b881:	jle    0x14003b8bf
   14003b883:	test   esi,r8d
   14003b886:	jne    0x14003b8b9
   14003b888:	mov    edi,DWORD PTR [rbp-0x25]
   14003b88b:	mov    edx,r10d
   14003b88e:	add    r8d,r8d
   14003b891:	shr    edx,0x1f
   14003b894:	add    r10d,r10d
   14003b897:	mov    ecx,edi
   14003b899:	shr    ecx,0x1f
   14003b89c:	lea    eax,[rdi+rdi*1]
   14003b89f:	add    r9w,r14w
   14003b8a3:	or     eax,edx
   14003b8a5:	or     r8d,ecx
   14003b8a8:	mov    DWORD PTR [rbp-0x29],r10d
   14003b8ac:	mov    DWORD PTR [rbp-0x25],eax
   14003b8af:	mov    DWORD PTR [rbp-0x21],r8d
   14003b8b3:	test   r9w,r9w
   14003b8b7:	jg     0x14003b883
   14003b8b9:	test   r9w,r9w
   14003b8bd:	jg     0x14003b924
   14003b8bf:	add    r9w,r14w
   14003b8c3:	jns    0x14003b924
   14003b8c5:	mov    ebx,DWORD PTR [rbp-0x65]
   14003b8c8:	movzx  eax,r9w
   14003b8cc:	neg    ax
   14003b8cf:	movzx  edx,ax
   14003b8d2:	add    r9w,dx
   14003b8d6:	test   BYTE PTR [rbp-0x29],r11b
   14003b8da:	je     0x14003b8df
   14003b8dc:	add    ebx,r11d
   14003b8df:	mov    edi,DWORD PTR [rbp-0x25]
   14003b8e2:	mov    eax,r8d
   14003b8e5:	shr    r10d,1
   14003b8e8:	mov    ecx,edi
   14003b8ea:	shl    eax,0x1f
   14003b8ed:	shr    edi,1
   14003b8ef:	shl    ecx,0x1f
   14003b8f2:	or     edi,eax
   14003b8f4:	shr    r8d,1
   14003b8f7:	or     r10d,ecx
   14003b8fa:	mov    DWORD PTR [rbp-0x25],edi
   14003b8fd:	mov    DWORD PTR [rbp-0x29],r10d
   14003b901:	sub    rdx,r11
   14003b904:	jne    0x14003b8d6
   14003b906:	test   ebx,ebx
   14003b908:	mov    rbx,QWORD PTR [rbp-0x41]
   14003b90c:	mov    DWORD PTR [rbp-0x21],r8d
   14003b910:	je     0x14003b924
   14003b912:	movzx  eax,r10w
   14003b916:	or     ax,r11w
   14003b91a:	mov    WORD PTR [rbp-0x29],ax
   14003b91e:	mov    r10d,DWORD PTR [rbp-0x29]
   14003b922:	jmp    0x14003b928
   14003b924:	movzx  eax,WORD PTR [rbp-0x29]
   14003b928:	mov    ecx,0x8000
   14003b92d:	cmp    ax,cx
   14003b930:	ja     0x14003b942
   14003b932:	and    r10d,0x1ffff
   14003b939:	cmp    r10d,0x18000
   14003b940:	jne    0x14003b98b
   14003b942:	mov    eax,DWORD PTR [rbp-0x27]
   14003b945:	or     edx,0xffffffff
   14003b948:	cmp    eax,edx
   14003b94a:	jne    0x14003b985
   14003b94c:	mov    eax,DWORD PTR [rbp-0x23]
   14003b94f:	mov    DWORD PTR [rbp-0x27],r15d
   14003b953:	cmp    eax,edx
   14003b955:	jne    0x14003b979
   14003b957:	movzx  eax,WORD PTR [rbp-0x1f]
   14003b95b:	mov    DWORD PTR [rbp-0x23],r15d
   14003b95f:	cmp    ax,r14w
   14003b963:	jne    0x14003b96f
   14003b965:	mov    WORD PTR [rbp-0x1f],cx
   14003b969:	add    r9w,r11w
   14003b96d:	jmp    0x14003b97f
   14003b96f:	add    ax,r11w
   14003b973:	mov    WORD PTR [rbp-0x1f],ax
   14003b977:	jmp    0x14003b97f
   14003b979:	add    eax,r11d
   14003b97c:	mov    DWORD PTR [rbp-0x23],eax
   14003b97f:	mov    r8d,DWORD PTR [rbp-0x21]
   14003b983:	jmp    0x14003b98b
   14003b985:	add    eax,r11d
   14003b988:	mov    DWORD PTR [rbp-0x27],eax
   14003b98b:	mov    eax,0x7fff
   14003b990:	cmp    r9w,ax
   14003b994:	jb     0x14003b9ae
   14003b996:	neg    r13w
   14003b99a:	mov    r8d,r15d
   14003b99d:	mov    edx,r15d
   14003b9a0:	sbb    eax,eax
   14003b9a2:	and    eax,esi
   14003b9a4:	add    eax,0x7fff8000
   14003b9a9:	mov    DWORD PTR [rbp-0x11],eax
   14003b9ac:	jmp    0x14003b9ee
   14003b9ae:	movzx  eax,WORD PTR [rbp-0x27]
   14003b9b2:	or     r9w,r13w
   14003b9b6:	mov    DWORD PTR [rbp-0x13],r8d
   14003b9ba:	mov    WORD PTR [rbp-0x19],ax
   14003b9be:	mov    eax,DWORD PTR [rbp-0x25]
   14003b9c1:	mov    WORD PTR [rbp-0xf],r9w
   14003b9c6:	mov    DWORD PTR [rbp-0x17],eax
   14003b9c9:	mov    r8d,DWORD PTR [rbp-0x15]
   14003b9cd:	mov    edx,DWORD PTR [rbp-0x19]
   14003b9d0:	jmp    0x14003b9ee
   14003b9d2:	neg    r13w
   14003b9d6:	sbb    eax,eax
   14003b9d8:	and    eax,r14d
   14003b9db:	add    eax,0x7fff8000
   14003b9e0:	mov    DWORD PTR [rbp-0x11],eax
   14003b9e3:	mov    edx,r15d
   14003b9e6:	mov    r8d,r15d
   14003b9e9:	mov    ecx,0x8000
   14003b9ee:	mov    eax,DWORD PTR [rbp-0x61]
   14003b9f1:	mov    r14d,DWORD PTR [rbp-0x4d]
   14003b9f5:	mov    WORD PTR [rbx],ax
   14003b9f8:	test   BYTE PTR [rbp-0x39],r11b
   14003b9fc:	je     0x14003ba1b
   14003b9fe:	cwde   
   14003b9ff:	add    r14d,eax
   14003ba02:	test   r14d,r14d
   14003ba05:	jg     0x14003ba1b
   14003ba07:	cmp    WORD PTR [rbp-0x67],cx
   14003ba0b:	mov    eax,0x20
   14003ba10:	lea    ecx,[rax+0xd]
   14003ba13:	cmove  eax,ecx
   14003ba16:	jmp    0x14003b25c
   14003ba1b:	mov    r9d,DWORD PTR [rbp-0x11]
   14003ba1f:	mov    eax,0x15
   14003ba24:	mov    WORD PTR [rbp-0xf],r15w
   14003ba29:	mov    esi,DWORD PTR [rbp-0x11]
   14003ba2c:	cmp    r14d,eax
   14003ba2f:	lea    r10d,[rax-0xd]
   14003ba33:	cmovg  r14d,eax
   14003ba37:	shr    r9d,0x10
   14003ba3b:	sub    r9d,0x3ffe
   14003ba42:	mov    ecx,r8d
   14003ba45:	mov    eax,edx
   14003ba47:	add    esi,esi
   14003ba49:	add    r8d,r8d
   14003ba4c:	shr    eax,0x1f
   14003ba4f:	shr    ecx,0x1f
   14003ba52:	or     r8d,eax
   14003ba55:	or     esi,ecx
   14003ba57:	add    edx,edx
   14003ba59:	sub    r10,r11
   14003ba5c:	jne    0x14003ba42
   14003ba5e:	mov    DWORD PTR [rbp-0x15],r8d
   14003ba62:	mov    DWORD PTR [rbp-0x19],edx
   14003ba65:	test   r9d,r9d
   14003ba68:	jns    0x14003ba9c
   14003ba6a:	neg    r9d
   14003ba6d:	movzx  r10d,r9b
   14003ba71:	test   r10d,r10d
   14003ba74:	jle    0x14003ba9c
   14003ba76:	mov    ecx,r8d
   14003ba79:	mov    eax,esi
   14003ba7b:	shr    edx,1
   14003ba7d:	shr    r8d,1
   14003ba80:	shl    eax,0x1f
   14003ba83:	shl    ecx,0x1f
   14003ba86:	sub    r10d,r11d
   14003ba89:	shr    esi,1
   14003ba8b:	or     r8d,eax
   14003ba8e:	or     edx,ecx
   14003ba90:	test   r10d,r10d
   14003ba93:	jg     0x14003ba76
   14003ba95:	mov    DWORD PTR [rbp-0x15],r8d
   14003ba99:	mov    DWORD PTR [rbp-0x19],edx
   14003ba9c:	lea    r12d,[r14+0x1]
   14003baa0:	lea    rdi,[rbx+0x4]
   14003baa4:	mov    r10,rdi
   14003baa7:	test   r12d,r12d
   14003baaa:	jle    0x14003bb7e
   14003bab0:	mov    r15,QWORD PTR [rbp-0x19]
   14003bab4:	mov    ecx,r8d
   14003bab7:	add    r8d,r8d
   14003baba:	shr    ecx,0x1f
   14003babd:	mov    eax,edx
   14003babf:	add    edx,edx
   14003bac1:	shr    eax,0x1f
   14003bac4:	lea    r9d,[rsi+rsi*1]
   14003bac8:	mov    QWORD PTR [rbp+0x7],r15
   14003bacc:	or     r8d,eax
   14003bacf:	or     r9d,ecx
   14003bad2:	mov    eax,edx
   14003bad4:	mov    ecx,r8d
   14003bad7:	shr    eax,0x1f
   14003bada:	add    r8d,r8d
   14003badd:	or     r8d,eax
   14003bae0:	add    edx,edx
   14003bae2:	add    r9d,r9d
   14003bae5:	shr    ecx,0x1f
   14003bae8:	mov    eax,r15d
   14003baeb:	lea    r13d,[rax+rdx*1]
   14003baef:	or     r9d,ecx
   14003baf2:	cmp    r13d,edx
   14003baf5:	jb     0x14003bafc
   14003baf7:	cmp    r13d,eax
   14003bafa:	jae    0x14003bb19
   14003bafc:	lea    eax,[r8+0x1]
   14003bb00:	xor    ecx,ecx
   14003bb02:	cmp    eax,r8d
   14003bb05:	jb     0x14003bb0c
   14003bb07:	cmp    eax,r11d
   14003bb0a:	jae    0x14003bb0f
   14003bb0c:	mov    ecx,r11d
   14003bb0f:	mov    r8d,eax
   14003bb12:	test   ecx,ecx
   14003bb14:	je     0x14003bb19
   14003bb16:	add    r9d,r11d
   14003bb19:	shr    r15,0x20
   14003bb1d:	lea    r14d,[r8+r15*1]
   14003bb21:	cmp    r14d,r8d
   14003bb24:	jb     0x14003bb2b
   14003bb26:	cmp    r14d,r15d
   14003bb29:	jae    0x14003bb2e
   14003bb2b:	add    r9d,r11d
   14003bb2e:	add    r9d,esi
   14003bb31:	xor    r15d,r15d
   14003bb34:	mov    eax,r13d
   14003bb37:	shr    eax,0x1f
   14003bb3a:	lea    r8d,[r14+r14*1]
   14003bb3e:	mov    ecx,r14d
   14003bb41:	or     r8d,eax
   14003bb44:	shr    ecx,0x1f
   14003bb47:	lea    eax,[r9+r9*1]
   14003bb4b:	or     eax,ecx
   14003bb4d:	lea    edx,[r13*2+0x0]
   14003bb55:	sub    r12d,r11d
   14003bb58:	mov    DWORD PTR [rbp-0x11],eax
   14003bb5b:	shr    eax,0x18
   14003bb5e:	mov    DWORD PTR [rbp-0x19],edx
   14003bb61:	add    al,0x30
   14003bb63:	mov    DWORD PTR [rbp-0x15],r8d
   14003bb67:	mov    BYTE PTR [rbp-0xe],r15b
   14003bb6b:	mov    BYTE PTR [r10],al
   14003bb6e:	add    r10,r11
   14003bb71:	test   r12d,r12d
   14003bb74:	jle    0x14003bb7e
   14003bb76:	mov    esi,DWORD PTR [rbp-0x11]
   14003bb79:	jmp    0x14003bab0
   14003bb7e:	sub    r10,r11
   14003bb81:	mov    al,BYTE PTR [r10]
   14003bb84:	sub    r10,r11
   14003bb87:	cmp    al,0x35
   14003bb89:	jl     0x14003bbf5
   14003bb8b:	jmp    0x14003bb9a
   14003bb8d:	cmp    BYTE PTR [r10],0x39
   14003bb91:	jne    0x14003bb9f
   14003bb93:	mov    BYTE PTR [r10],0x30
   14003bb97:	sub    r10,r11
   14003bb9a:	cmp    r10,rdi
   14003bb9d:	jae    0x14003bb8d
   14003bb9f:	cmp    r10,rdi
   14003bba2:	jae    0x14003bbab
   14003bba4:	add    r10,r11
   14003bba7:	add    WORD PTR [rbx],r11w
   14003bbab:	add    BYTE PTR [r10],r11b
   14003bbae:	sub    r10b,bl
   14003bbb1:	sub    r10b,0x3
   14003bbb5:	movsx  rax,r10b
   14003bbb9:	mov    BYTE PTR [rbx+0x3],r10b
   14003bbbd:	mov    BYTE PTR [rax+rbx*1+0x4],r15b
   14003bbc2:	mov    eax,r11d
   14003bbc5:	mov    rcx,QWORD PTR [rbp+0x17]
   14003bbc9:	xor    rcx,rsp
   14003bbcc:	call   0x1400265a0
   14003bbd1:	mov    rbx,QWORD PTR [rsp+0x108]
   14003bbd9:	add    rsp,0xc0
   14003bbe0:	pop    r15
   14003bbe2:	pop    r14
   14003bbe4:	pop    r13
   14003bbe6:	pop    r12
   14003bbe8:	pop    rdi
   14003bbe9:	pop    rsi
   14003bbea:	pop    rbp
   14003bbeb:	ret    
   14003bbec:	cmp    BYTE PTR [r10],0x30
   14003bbf0:	jne    0x14003bbfa
   14003bbf2:	sub    r10,r11
   14003bbf5:	cmp    r10,rdi
   14003bbf8:	jae    0x14003bbec
   14003bbfa:	cmp    r10,rdi
   14003bbfd:	jae    0x14003bbae
   14003bbff:	mov    eax,0x20
   14003bc04:	mov    r9d,0x8000
   14003bc0a:	mov    WORD PTR [rbx],r15w
   14003bc0e:	cmp    WORD PTR [rbp-0x67],r9w
   14003bc13:	lea    ecx,[rax+0xd]
   14003bc16:	mov    BYTE PTR [rbx+0x3],r11b
   14003bc1a:	cmove  eax,ecx
   14003bc1d:	mov    BYTE PTR [rbx+0x2],al
   14003bc20:	mov    BYTE PTR [rdi],0x30
   14003bc23:	jmp    0x14003b269
   14003bc28:	xor    r9d,r9d
   14003bc2b:	xor    r8d,r8d
   14003bc2e:	xor    edx,edx
   14003bc30:	xor    ecx,ecx
   14003bc32:	mov    QWORD PTR [rsp+0x20],r15
   14003bc37:	call   0x140029b4c
   14003bc3c:	int3   
   14003bc3d:	xor    r9d,r9d
   14003bc40:	xor    r8d,r8d
   14003bc43:	xor    edx,edx
   14003bc45:	xor    ecx,ecx
   14003bc47:	mov    QWORD PTR [rsp+0x20],r15
   14003bc4c:	call   0x140029b4c
   14003bc51:	int3   
   14003bc52:	xor    r9d,r9d
   14003bc55:	xor    r8d,r8d
   14003bc58:	xor    edx,edx
   14003bc5a:	xor    ecx,ecx
   14003bc5c:	mov    QWORD PTR [rsp+0x20],r15
   14003bc61:	call   0x140029b4c
   14003bc66:	int3   
   14003bc67:	xor    r9d,r9d
   14003bc6a:	xor    r8d,r8d
   14003bc6d:	xor    edx,edx
   14003bc6f:	xor    ecx,ecx
   14003bc71:	mov    QWORD PTR [rsp+0x20],r15
   14003bc76:	call   0x140029b4c
   14003bc7b:	int3   
   14003bc7c:	mov    rax,rsp
   14003bc7f:	mov    QWORD PTR [rax+0x8],rbx
   14003bc83:	mov    QWORD PTR [rax+0x10],rbp
   14003bc87:	mov    QWORD PTR [rax+0x18],rsi
   14003bc8b:	mov    QWORD PTR [rax+0x20],rdi
   14003bc8f:	push   r13
   14003bc91:	push   r14
   14003bc93:	push   r15
   14003bc95:	sub    rsp,0x10
   14003bc99:	and    DWORD PTR [r8],0x0
   14003bc9d:	and    DWORD PTR [r8+0x4],0x0
   14003bca2:	and    DWORD PTR [r8+0x8],0x0
   14003bca7:	mov    r10,r8
   14003bcaa:	mov    edi,edx
   14003bcac:	mov    rbp,rcx
   14003bcaf:	mov    ebx,0x404e
   14003bcb4:	test   edx,edx
   14003bcb6:	je     0x14003bdfb
   14003bcbc:	xor    r11d,r11d
   14003bcbf:	xor    r8d,r8d
   14003bcc2:	xor    r9d,r9d
   14003bcc5:	lea    r13d,[r11+0x1]
   14003bcc9:	mov    rsi,QWORD PTR [r10]
   14003bccc:	mov    r15d,DWORD PTR [r10+0x8]
   14003bcd0:	mov    ecx,r8d
   14003bcd3:	shr    ecx,0x1f
   14003bcd6:	add    r8d,r8d
   14003bcd9:	add    r9d,r9d
   14003bcdc:	or     r9d,ecx
   14003bcdf:	lea    edx,[r11+r11*1]
   14003bce3:	mov    eax,r11d
   14003bce6:	shr    eax,0x1f
   14003bce9:	add    r9d,r9d
   14003bcec:	mov    QWORD PTR [rsp],rsi
   14003bcf0:	or     r8d,eax
   14003bcf3:	mov    eax,edx
   14003bcf5:	add    edx,edx
   14003bcf7:	mov    ecx,r8d
   14003bcfa:	shr    eax,0x1f
   14003bcfd:	add    r8d,r8d
   14003bd00:	shr    ecx,0x1f
   14003bd03:	or     r8d,eax
   14003bd06:	xor    eax,eax
   14003bd08:	or     r9d,ecx
   14003bd0b:	mov    ecx,esi
   14003bd0d:	mov    DWORD PTR [r10],edx
   14003bd10:	lea    r14d,[rdx+rcx*1]
   14003bd14:	mov    DWORD PTR [r10+0x4],r8d
   14003bd18:	mov    DWORD PTR [r10+0x8],r9d
   14003bd1c:	cmp    r14d,edx
   14003bd1f:	jb     0x14003bd26
   14003bd21:	cmp    r14d,ecx
   14003bd24:	jae    0x14003bd29
   14003bd26:	mov    eax,r13d
   14003bd29:	mov    DWORD PTR [r10],r14d
   14003bd2c:	test   eax,eax
   14003bd2e:	je     0x14003bd54
   14003bd30:	mov    eax,r8d
   14003bd33:	inc    r8d
   14003bd36:	xor    ecx,ecx
   14003bd38:	cmp    r8d,eax
   14003bd3b:	jb     0x14003bd42
   14003bd3d:	cmp    r8d,r13d
   14003bd40:	jae    0x14003bd45
   14003bd42:	mov    ecx,r13d
   14003bd45:	mov    DWORD PTR [r10+0x4],r8d
   14003bd49:	test   ecx,ecx
   14003bd4b:	je     0x14003bd54
   14003bd4d:	inc    r9d
   14003bd50:	mov    DWORD PTR [r10+0x8],r9d
   14003bd54:	shr    rsi,0x20
   14003bd58:	xor    eax,eax
   14003bd5a:	lea    r11d,[r8+rsi*1]
   14003bd5e:	cmp    r11d,r8d
   14003bd61:	jb     0x14003bd68
   14003bd63:	cmp    r11d,esi
   14003bd66:	jae    0x14003bd6b
   14003bd68:	mov    eax,r13d
   14003bd6b:	mov    DWORD PTR [r10+0x4],r11d
   14003bd6f:	test   eax,eax
   14003bd71:	je     0x14003bd7a
   14003bd73:	add    r9d,r13d
   14003bd76:	mov    DWORD PTR [r10+0x8],r9d
   14003bd7a:	add    r9d,r15d
   14003bd7d:	lea    edx,[r14+r14*1]
   14003bd81:	mov    ecx,r11d
   14003bd84:	shr    ecx,0x1f
   14003bd87:	lea    r8d,[r11+r11*1]
   14003bd8b:	add    r9d,r9d
   14003bd8e:	or     r9d,ecx
   14003bd91:	mov    eax,r14d
   14003bd94:	mov    DWORD PTR [r10],edx
   14003bd97:	shr    eax,0x1f
   14003bd9a:	mov    DWORD PTR [r10+0x8],r9d
   14003bd9e:	or     r8d,eax
   14003bda1:	xor    eax,eax
   14003bda3:	mov    DWORD PTR [r10+0x4],r8d
   14003bda7:	movsx  ecx,BYTE PTR [rbp+0x0]
   14003bdab:	lea    r11d,[rdx+rcx*1]
   14003bdaf:	cmp    r11d,edx
   14003bdb2:	jb     0x14003bdb9
   14003bdb4:	cmp    r11d,ecx
   14003bdb7:	jae    0x14003bdbc
   14003bdb9:	mov    eax,r13d
   14003bdbc:	mov    DWORD PTR [r10],r11d
   14003bdbf:	test   eax,eax
   14003bdc1:	je     0x14003bde8
   14003bdc3:	lea    eax,[r8+0x1]
   14003bdc7:	xor    ecx,ecx
   14003bdc9:	cmp    eax,r8d
   14003bdcc:	jb     0x14003bdd3
   14003bdce:	cmp    eax,r13d
   14003bdd1:	jae    0x14003bdd6
   14003bdd3:	mov    ecx,r13d
   14003bdd6:	mov    r8d,eax
   14003bdd9:	mov    DWORD PTR [r10+0x4],eax
   14003bddd:	test   ecx,ecx
   14003bddf:	je     0x14003bde8
   14003bde1:	inc    r9d
   14003bde4:	mov    DWORD PTR [r10+0x8],r9d
   14003bde8:	add    rbp,r13
   14003bdeb:	mov    DWORD PTR [r10+0x4],r8d
   14003bdef:	mov    DWORD PTR [r10+0x8],r9d
   14003bdf3:	dec    edi
   14003bdf5:	jne    0x14003bcc9
   14003bdfb:	cmp    DWORD PTR [r10+0x8],0x0
   14003be00:	jne    0x14003be3c
   14003be02:	mov    r8d,DWORD PTR [r10+0x4]
   14003be06:	mov    edx,DWORD PTR [r10]
   14003be09:	mov    eax,r8d
   14003be0c:	mov    r9d,r8d
   14003be0f:	shl    eax,0x10
   14003be12:	mov    ecx,edx
   14003be14:	shl    edx,0x10
   14003be17:	shr    ecx,0x10
   14003be1a:	shr    r9d,0x10
   14003be1e:	mov    DWORD PTR [r10],edx
   14003be21:	mov    r8d,ecx
   14003be24:	or     r8d,eax
   14003be27:	mov    eax,0xfff0
   14003be2c:	add    bx,ax
   14003be2f:	test   r9d,r9d
   14003be32:	je     0x14003be06
   14003be34:	mov    DWORD PTR [r10+0x4],r8d
   14003be38:	mov    DWORD PTR [r10+0x8],r9d
   14003be3c:	mov    edx,DWORD PTR [r10+0x8]
   14003be40:	mov    r11d,0x8000
   14003be46:	test   r11d,edx
   14003be49:	jne    0x14003be83
   14003be4b:	mov    r9d,DWORD PTR [r10]
   14003be4e:	mov    r8d,DWORD PTR [r10+0x4]
   14003be52:	mov    ecx,r8d
   14003be55:	mov    eax,r9d
   14003be58:	add    r8d,r8d
   14003be5b:	shr    eax,0x1f
   14003be5e:	add    edx,edx
   14003be60:	shr    ecx,0x1f
   14003be63:	or     r8d,eax
   14003be66:	mov    eax,0xffff
   14003be6b:	or     edx,ecx
   14003be6d:	add    bx,ax
   14003be70:	add    r9d,r9d
   14003be73:	test   r11d,edx
   14003be76:	je     0x14003be52
   14003be78:	mov    DWORD PTR [r10],r9d
   14003be7b:	mov    DWORD PTR [r10+0x4],r8d
   14003be7f:	mov    DWORD PTR [r10+0x8],edx
   14003be83:	mov    rbp,QWORD PTR [rsp+0x38]
   14003be88:	mov    rsi,QWORD PTR [rsp+0x40]
   14003be8d:	mov    rdi,QWORD PTR [rsp+0x48]
   14003be92:	mov    WORD PTR [r10+0xa],bx
   14003be97:	mov    rbx,QWORD PTR [rsp+0x30]
   14003be9c:	add    rsp,0x10
   14003bea0:	pop    r15
   14003bea2:	pop    r14
   14003bea4:	pop    r13
   14003bea6:	ret    
   14003bea7:	int3   
   14003bea8:	int3   
   14003bea9:	int3   
   14003beaa:	int3   
   14003beab:	int3   
   14003beac:	int3   
   14003bead:	int3   
   14003beae:	int3   
   14003beaf:	int3   
   14003beb0:	int3   
   14003beb1:	int3   
   14003beb2:	int3   
   14003beb3:	int3   
   14003beb4:	int3   
   14003beb5:	int3   
   14003beb6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003bec0:	push   rbx
   14003bec1:	mov    eax,ecx
   14003bec3:	mov    r9,rdx
   14003bec6:	mov    ecx,0x0
   14003becb:	cpuid  
   14003becd:	mov    DWORD PTR [r9],eax
   14003bed0:	mov    DWORD PTR [r9+0x4],ebx
   14003bed4:	mov    DWORD PTR [r9+0x8],ecx
   14003bed8:	mov    DWORD PTR [r9+0xc],edx
   14003bedc:	pop    rbx
   14003bedd:	ret    
   14003bede:	int3   
   14003bedf:	int3   
   14003bee0:	int3   
   14003bee1:	int3   
   14003bee2:	int3   
   14003bee3:	int3   
   14003bee4:	int3   
   14003bee5:	int3   
   14003bee6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003bef0:	xor    rax,rax
   14003bef3:	rdpmc  
   14003bef5:	shl    rdx,0x20
   14003bef9:	or     rax,rdx
   14003befc:	ret    
   14003befd:	int3   
   14003befe:	int3   
   14003beff:	int3   
   14003bf00:	int3   
   14003bf01:	int3   
   14003bf02:	int3   
   14003bf03:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14003bf10:	push   rbx
   14003bf11:	mov    eax,0x564d5868
   14003bf16:	mov    ebx,0x0
   14003bf1b:	mov    ecx,0xa
   14003bf20:	mov    edx,0x5658
   14003bf25:	in     eax,dx
   14003bf26:	mov    rax,0x0
   14003bf2d:	cmp    ebx,0x564d5868
   14003bf33:	jne    0x14003bf3c
   14003bf35:	mov    rax,0x1
   14003bf3c:	pop    rbx
   14003bf3d:	ret    
   14003bf3e:	int3   
   14003bf3f:	int3   
   14003bf40:	rex push rbp
   14003bf42:	sub    rsp,0x20
   14003bf46:	mov    rbp,rdx
   14003bf49:	mov    rax,QWORD PTR [rcx]
   14003bf4c:	mov    rdx,rcx
   14003bf4f:	mov    ecx,DWORD PTR [rax]
   14003bf51:	call   0x140027e4c
   14003bf56:	nop
   14003bf57:	add    rsp,0x20
   14003bf5b:	pop    rbp
   14003bf5c:	ret    
   14003bf5d:	int3   
   14003bf5e:	rex push rbp
   14003bf60:	sub    rsp,0x20
   14003bf64:	mov    rbp,rdx
   14003bf67:	add    rsp,0x20
   14003bf6b:	pop    rbp
   14003bf6c:	jmp    0x1400285b0
   14003bf71:	int3   
   14003bf72:	rex push rbp
   14003bf74:	sub    rsp,0x20
   14003bf78:	mov    rbp,rdx
   14003bf7b:	mov    ecx,0xd
   14003bf80:	add    rsp,0x20
   14003bf84:	pop    rbp
   14003bf85:	jmp    0x14002dd34
   14003bf8a:	int3   
   14003bf8b:	rex push rbp
   14003bf8d:	sub    rsp,0x20
   14003bf91:	mov    rbp,rdx
   14003bf94:	mov    ecx,0xc
   14003bf99:	add    rsp,0x20
   14003bf9d:	pop    rbp
   14003bf9e:	jmp    0x14002dd34
   14003bfa3:	int3   
   14003bfa4:	rex push rbp
   14003bfa6:	sub    rsp,0x20
   14003bfaa:	mov    rbp,rdx
   14003bfad:	cmp    DWORD PTR [rbp+0x80],0x0
   14003bfb4:	je     0x14003bfc1
   14003bfb6:	mov    ecx,0x8
   14003bfbb:	call   0x14002dd34
   14003bfc0:	nop
   14003bfc1:	add    rsp,0x20
   14003bfc5:	pop    rbp
   14003bfc6:	ret    
   14003bfc7:	int3   
   14003bfc8:	rex push rbp
   14003bfca:	sub    rsp,0x20
   14003bfce:	mov    rbp,rdx
   14003bfd1:	mov    ecx,0xb
   14003bfd6:	call   0x14002dd34
   14003bfdb:	nop
   14003bfdc:	add    rsp,0x20
   14003bfe0:	pop    rbp
   14003bfe1:	ret    
   14003bfe2:	int3   
   14003bfe3:	rex push rbp
   14003bfe5:	sub    rsp,0x20
   14003bfe9:	mov    rbp,rdx
   14003bfec:	mov    ecx,0xe
   14003bff1:	add    rsp,0x20
   14003bff5:	pop    rbp
   14003bff6:	jmp    0x14002dd34
   14003bffb:	int3   
   14003bffc:	rex push rbp
   14003bffe:	sub    rsp,0x20
   14003c002:	mov    rbp,rdx
   14003c005:	mov    ecx,0xc
   14003c00a:	add    rsp,0x20
   14003c00e:	pop    rbp
   14003c00f:	jmp    0x14002dd34
   14003c014:	int3   
   14003c015:	rex push rbp
   14003c017:	sub    rsp,0x20
   14003c01b:	mov    rbp,rdx
   14003c01e:	mov    ecx,0xd
   14003c023:	add    rsp,0x20
   14003c027:	pop    rbp
   14003c028:	jmp    0x14002dd34
   14003c02d:	int3   
   14003c02e:	rex push rbp
   14003c030:	sub    rsp,0x20
   14003c034:	mov    rbp,rdx
   14003c037:	mov    rcx,QWORD PTR [rip+0x1dfe2]        # 0x14005a020
   14003c03e:	add    rsp,0x20
   14003c042:	pop    rbp
   14003c043:	rex.W jmp QWORD PTR [rip+0x54ae]        # 0x1400414f8
   14003c04a:	int3   
   14003c04b:	int3   
   14003c04c:	int3   
   14003c04d:	int3   
   14003c04e:	int3   
   14003c04f:	int3   
   14003c050:	rex push rbp
   14003c052:	sub    rsp,0x20
   14003c056:	mov    rbp,rdx
   14003c059:	mov    rax,QWORD PTR [rcx]
   14003c05c:	xor    ecx,ecx
   14003c05e:	cmp    DWORD PTR [rax],0xc0000005
   14003c064:	sete   cl
   14003c067:	mov    eax,ecx
   14003c069:	add    rsp,0x20
   14003c06d:	pop    rbp
   14003c06e:	ret    
   14003c06f:	int3   
   14003c070:	rex push rbp
   14003c072:	sub    rsp,0x20
   14003c076:	mov    rbp,rdx
   14003c079:	cmp    DWORD PTR [rbp+0x60],0x0
   14003c07d:	je     0x14003c087
   14003c07f:	xor    ecx,ecx
   14003c081:	call   0x14002dd34
   14003c086:	nop
   14003c087:	add    rsp,0x20
   14003c08b:	pop    rbp
   14003c08c:	ret    
   14003c08d:	int3   
   14003c08e:	rex push rbp
   14003c090:	sub    rsp,0x20
   14003c094:	mov    rbp,rdx
   14003c097:	mov    ecx,DWORD PTR [rbp+0x50]
   14003c09a:	add    rsp,0x20
   14003c09e:	pop    rbp
   14003c09f:	jmp    0x140031700
   14003c0a4:	int3   
   14003c0a5:	rex push rbp
   14003c0a7:	sub    rsp,0x20
   14003c0ab:	mov    rbp,rdx
   14003c0ae:	mov    ecx,0x1
   14003c0b3:	add    rsp,0x20
   14003c0b7:	pop    rbp
   14003c0b8:	jmp    0x14002dd34
   14003c0bd:	int3   
   14003c0be:	rex push rbp
   14003c0c0:	sub    rsp,0x20
   14003c0c4:	mov    rbp,rdx
   14003c0c7:	movsxd rcx,DWORD PTR [rbp+0x20]
   14003c0cb:	mov    rax,rcx
   14003c0ce:	mov    rdx,QWORD PTR [rip+0x21853]        # 0x14005d928
   14003c0d5:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14003c0d9:	call   0x14002cda8
   14003c0de:	nop
   14003c0df:	add    rsp,0x20
   14003c0e3:	pop    rbp
   14003c0e4:	ret    
   14003c0e5:	int3   
   14003c0e6:	rex push rbp
   14003c0e8:	sub    rsp,0x20
   14003c0ec:	mov    rbp,rdx
   14003c0ef:	mov    ecx,0x1
   14003c0f4:	add    rsp,0x20
   14003c0f8:	pop    rbp
   14003c0f9:	jmp    0x14002dd34
   14003c0fe:	int3   
   14003c0ff:	rex push rbp
   14003c101:	sub    rsp,0x20
   14003c105:	mov    rbp,rdx
   14003c108:	mov    ecx,0xa
   14003c10d:	add    rsp,0x20
   14003c111:	pop    rbp
   14003c112:	jmp    0x14002dd34
   14003c117:	int3   
   14003c118:	rex push rbp
   14003c11a:	sub    rsp,0x20
   14003c11e:	mov    rbp,rdx
   14003c121:	mov    ecx,DWORD PTR [rbp+0x40]
   14003c124:	add    rsp,0x20
   14003c128:	pop    rbp
   14003c129:	jmp    0x140031700
   14003c12e:	int3   
   14003c12f:	rex push rbp
   14003c131:	sub    rsp,0x40
   14003c135:	mov    rbp,rdx
   14003c138:	lea    rax,[rbp+0x40]
   14003c13c:	mov    QWORD PTR [rsp+0x30],rax
   14003c141:	mov    rax,QWORD PTR [rbp+0x90]
   14003c148:	mov    QWORD PTR [rsp+0x28],rax
   14003c14d:	mov    rax,QWORD PTR [rbp+0x88]
   14003c154:	mov    QWORD PTR [rsp+0x20],rax
   14003c159:	mov    r9,QWORD PTR [rbp+0x80]
   14003c160:	mov    r8,QWORD PTR [rbp+0x78]
   14003c164:	mov    rdx,QWORD PTR [rbp+0x70]
   14003c168:	call   0x1400328f4
   14003c16d:	nop
   14003c16e:	add    rsp,0x40
   14003c172:	pop    rbp
   14003c173:	ret    
   14003c174:	int3   
   14003c175:	rex push rbp
   14003c177:	sub    rsp,0x20
   14003c17b:	mov    rbp,rdx
   14003c17e:	mov    rcx,QWORD PTR [rbp+0x38]
   14003c182:	add    rsp,0x20
   14003c186:	pop    rbp
   14003c187:	jmp    0x14002cd58
   14003c18c:	int3   
   14003c18d:	rex push rbp
   14003c18f:	sub    rsp,0x20
   14003c193:	mov    rbp,rdx
   14003c196:	mov    rcx,QWORD PTR [rbp+0x30]
   14003c19a:	add    rsp,0x20
   14003c19e:	pop    rbp
   14003c19f:	jmp    0x14002cd58
   14003c1a4:	int3   
   14003c1a5:	rex push rbp
   14003c1a7:	sub    rsp,0x20
   14003c1ab:	mov    rbp,rdx
   14003c1ae:	mov    rcx,QWORD PTR [rbp+0x58]
   14003c1b2:	add    rsp,0x20
   14003c1b6:	pop    rbp
   14003c1b7:	jmp    0x14002cd58
   14003c1bc:	int3   
   14003c1bd:	rex push rbp
   14003c1bf:	sub    rsp,0x20
   14003c1c3:	mov    rbp,rdx
   14003c1c6:	mov    QWORD PTR [rbp+0x70],rcx
   14003c1ca:	mov    QWORD PTR [rbp+0x68],rcx
   14003c1ce:	mov    rax,QWORD PTR [rbp+0x68]
   14003c1d2:	mov    rcx,QWORD PTR [rax]
   14003c1d5:	mov    QWORD PTR [rbp+0x28],rcx
   14003c1d9:	mov    DWORD PTR [rbp+0x20],0x0
   14003c1e0:	mov    rax,QWORD PTR [rbp+0x28]
   14003c1e4:	cmp    DWORD PTR [rax],0xe06d7363
   14003c1ea:	jne    0x14003c239
   14003c1ec:	mov    rax,QWORD PTR [rbp+0x28]
   14003c1f0:	cmp    DWORD PTR [rax+0x18],0x4
   14003c1f4:	jne    0x14003c239
   14003c1f6:	mov    rax,QWORD PTR [rbp+0x28]
   14003c1fa:	cmp    DWORD PTR [rax+0x20],0x19930520
   14003c201:	je     0x14003c21d
   14003c203:	mov    rax,QWORD PTR [rbp+0x28]
   14003c207:	cmp    DWORD PTR [rax+0x20],0x19930521
   14003c20e:	je     0x14003c21d
   14003c210:	mov    rax,QWORD PTR [rbp+0x28]
   14003c214:	cmp    DWORD PTR [rax+0x20],0x19930522
   14003c21b:	jne    0x14003c239
   14003c21d:	mov    rdx,QWORD PTR [rbp+0x28]
   14003c221:	mov    rax,QWORD PTR [rbp+0xd8]
   14003c228:	mov    rcx,QWORD PTR [rax+0x28]
   14003c22c:	cmp    QWORD PTR [rdx+0x28],rcx
   14003c230:	jne    0x14003c239
   14003c232:	mov    DWORD PTR [rbp+0x20],0x1
   14003c239:	mov    rax,QWORD PTR [rbp+0x28]
   14003c23d:	cmp    DWORD PTR [rax],0xe06d7363
   14003c243:	jne    0x14003c2a0
   14003c245:	mov    rax,QWORD PTR [rbp+0x28]
   14003c249:	cmp    DWORD PTR [rax+0x18],0x4
   14003c24d:	jne    0x14003c2a0
   14003c24f:	mov    rax,QWORD PTR [rbp+0x28]
   14003c253:	cmp    DWORD PTR [rax+0x20],0x19930520
   14003c25a:	je     0x14003c276
   14003c25c:	mov    rax,QWORD PTR [rbp+0x28]
   14003c260:	cmp    DWORD PTR [rax+0x20],0x19930521
   14003c267:	je     0x14003c276
   14003c269:	mov    rax,QWORD PTR [rbp+0x28]
   14003c26d:	cmp    DWORD PTR [rax+0x20],0x19930522
   14003c274:	jne    0x14003c2a0
   14003c276:	mov    rax,QWORD PTR [rbp+0x28]
   14003c27a:	cmp    QWORD PTR [rax+0x30],0x0
   14003c27f:	jne    0x14003c2a0
   14003c281:	call   0x14002814c
   14003c286:	mov    DWORD PTR [rax+0x460],0x1
   14003c290:	mov    DWORD PTR [rbp+0x20],0x1
   14003c297:	mov    DWORD PTR [rbp+0x30],0x1
   14003c29e:	jmp    0x14003c2a7
   14003c2a0:	mov    DWORD PTR [rbp+0x30],0x0
   14003c2a7:	mov    eax,DWORD PTR [rbp+0x30]
   14003c2aa:	add    rsp,0x20
   14003c2ae:	pop    rbp
   14003c2af:	ret    
   14003c2b0:	int3   
   14003c2b1:	rex push rbx
   14003c2b3:	push   rbp
   14003c2b4:	sub    rsp,0x28
   14003c2b8:	mov    rbp,rdx
   14003c2bb:	mov    rcx,QWORD PTR [rbp+0x38]
   14003c2bf:	call   0x140032a30
   14003c2c4:	cmp    DWORD PTR [rbp+0x20],0x0
   14003c2c8:	jne    0x14003c304
   14003c2ca:	mov    rbx,QWORD PTR [rbp+0xd8]
   14003c2d1:	cmp    DWORD PTR [rbx],0xe06d7363
   14003c2d7:	jne    0x14003c304
   14003c2d9:	cmp    DWORD PTR [rbx+0x18],0x4
   14003c2dd:	jne    0x14003c304
   14003c2df:	mov    eax,DWORD PTR [rbx+0x20]
   14003c2e2:	sub    eax,0x19930520
   14003c2e7:	cmp    eax,0x2
   14003c2ea:	ja     0x14003c304
   14003c2ec:	mov    rcx,QWORD PTR [rbx+0x28]
   14003c2f0:	call   0x140032ac0
   14003c2f5:	test   eax,eax
   14003c2f7:	je     0x14003c304
   14003c2f9:	mov    dl,0x1
   14003c2fb:	mov    rcx,rbx
   14003c2fe:	call   0x140034794
   14003c303:	nop
   14003c304:	call   0x14002814c
   14003c309:	mov    rcx,QWORD PTR [rbp+0xe0]
   14003c310:	mov    QWORD PTR [rax+0xf0],rcx
   14003c317:	call   0x14002814c
   14003c31c:	mov    rcx,QWORD PTR [rbp+0x50]
   14003c320:	mov    QWORD PTR [rax+0xf8],rcx
   14003c327:	add    rsp,0x28
   14003c32b:	pop    rbp
   14003c32c:	pop    rbx
   14003c32d:	ret    
   14003c32e:	int3   
   14003c32f:	rex push rbp
   14003c331:	sub    rsp,0x20
   14003c335:	mov    rbp,rdx
   14003c338:	xor    eax,eax
   14003c33a:	cmp    BYTE PTR [rbp+0x38],al
   14003c33d:	setne  al
   14003c340:	add    rsp,0x20
   14003c344:	pop    rbp
   14003c345:	ret    
   14003c346:	int3   
   14003c347:	rex push rbp
   14003c349:	sub    rsp,0x20
   14003c34d:	mov    rbp,rdx
   14003c350:	call   0x14003560c
   14003c355:	nop
   14003c356:	add    rsp,0x20
   14003c35a:	pop    rbp
   14003c35b:	ret    
   14003c35c:	int3   
   14003c35d:	rex push rbp
   14003c35f:	sub    rsp,0x20
   14003c363:	mov    rbp,rdx
   14003c366:	call   0x14002814c
   14003c36b:	cmp    DWORD PTR [rax+0x100],0x0
   14003c372:	jle    0x14003c37f
   14003c374:	call   0x14002814c
   14003c379:	dec    DWORD PTR [rax+0x100]
   14003c37f:	add    rsp,0x20
   14003c383:	pop    rbp
   14003c384:	ret    
   14003c385:	int3   
   14003c386:	mov    QWORD PTR [rsp+0x10],rdx
   14003c38b:	push   rbp
   14003c38c:	sub    rsp,0x20
   14003c390:	mov    rbp,rdx
   14003c393:	and    QWORD PTR [rbp+0x50],0x0
   14003c398:	lea    rax,[rip+0xffffffffffff9f1a]        # 0x1400362b9
   14003c39f:	add    rsp,0x20
   14003c3a3:	pop    rbp
   14003c3a4:	ret    
   14003c3a5:	int3   
   14003c3a6:	mov    rcx,QWORD PTR [rdx+0x40]
   14003c3ad:	add    rcx,0x8
   14003c3b1:	jmp    0x140003220
   14003c3b6:	mov    rcx,QWORD PTR [rdx+0x40]
   14003c3bd:	add    rcx,0x20
   14003c3c1:	jmp    0x140006a48
   14003c3c6:	mov    rcx,QWORD PTR [rdx+0x40]
   14003c3cd:	jmp    0x140010c00
   14003c3d2:	mov    rcx,QWORD PTR [rdx+0x40]
   14003c3d9:	add    rcx,0x8
   14003c3dd:	jmp    0x14000fd20
   14003c3e2:	mov    rcx,QWORD PTR [rdx+0x20]
   14003c3e9:	jmp    0x14000107c
   14003c3ee:	mov    rcx,QWORD PTR [rdx+0x40]
   14003c3f5:	jmp    0x140010c00
   14003c3fa:	mov    rcx,QWORD PTR [rdx+0x40]
   14003c401:	jmp    0x14000107c
   14003c406:	mov    rcx,QWORD PTR [rdx+0x40]
   14003c40d:	jmp    0x1400011c0
   14003c412:	mov    rcx,QWORD PTR [rdx+0x40]
   14003c419:	jmp    0x14000107c
   14003c41e:	lea    rcx,[rip+0x1f023]        # 0x14005b448
   14003c425:	jmp    0x14000107c
   14003c42a:	lea    rcx,[rip+0x1f017]        # 0x14005b448
   14003c431:	jmp    0x1400011c0
   14003c436:	lea    rcx,[rip+0x1f003]        # 0x14005b440
   14003c43d:	jmp    0x14000107c
   14003c442:	lea    rcx,[rip+0x1eff7]        # 0x14005b440
   14003c449:	jmp    0x1400011c0
   14003c44e:	lea    rcx,[rip+0x1effb]        # 0x14005b450
   14003c455:	jmp    0x14000107c
   14003c45a:	lea    rcx,[rip+0x1efe7]        # 0x14005b448
   14003c461:	jmp    0x1400011c0
   14003c466:	lea    rcx,[rip+0x1efdb]        # 0x14005b448
   14003c46d:	jmp    0x14000107c
   14003c472:	lea    rcx,[rip+0x1efc7]        # 0x14005b440
   14003c479:	jmp    0x1400011c0
   14003c47e:	lea    rcx,[rip+0x1efbb]        # 0x14005b440
   14003c485:	jmp    0x14000107c
   14003c48a:	lea    rcx,[rdx+0x48]
   14003c491:	jmp    0x140003220
   14003c496:	lea    rcx,[rdx+0x30]
   14003c49d:	jmp    0x140003220
   14003c4a2:	rex push rbp
   14003c4a4:	sub    rsp,0x20
   14003c4a8:	mov    rbp,rdx
   14003c4ab:	mov    rdx,QWORD PTR [rbp+0xa8]
   14003c4b2:	mov    rcx,QWORD PTR [rbp+0x98]
   14003c4b9:	call   0x140001000
   14003c4be:	add    rsp,0x20
   14003c4c2:	pop    rbp
   14003c4c3:	ret    
   14003c4c4:	lea    rcx,[rdx+0x60]
   14003c4cb:	add    rcx,0x8
   14003c4cf:	jmp    0x140003220
   14003c4d4:	lea    rcx,[rdx+0x60]
   14003c4db:	add    rcx,0x20
   14003c4df:	jmp    0x140006a48
   14003c4e4:	lea    rcx,[rdx+0x60]
   14003c4eb:	add    rcx,0x8
   14003c4ef:	jmp    0x140003220
   14003c4f4:	lea    rcx,[rdx+0x60]
   14003c4fb:	add    rcx,0x20
   14003c4ff:	jmp    0x140006a48
   14003c504:	lea    rcx,[rdx+0x78]
   14003c50b:	add    rcx,0x8
   14003c50f:	jmp    0x140003220
   14003c514:	lea    rcx,[rdx+0x78]
   14003c51b:	add    rcx,0x20
   14003c51f:	jmp    0x140006a48
   14003c524:	lea    rcx,[rdx+0xb0]
   14003c52b:	add    rcx,0x8
   14003c52f:	jmp    0x14000fd20
   14003c534:	lea    rcx,[rdx+0xb0]
   14003c53b:	jmp    0x140001820
   14003c540:	lea    rcx,[rdx+0x78]
   14003c547:	add    rcx,0x8
   14003c54b:	jmp    0x140003220
   14003c550:	lea    rcx,[rdx+0x78]
   14003c557:	add    rcx,0x20
   14003c55b:	jmp    0x140006a48
   14003c560:	lea    rcx,[rdx+0x78]
   14003c567:	jmp    0x140003078
   14003c56c:	lea    rcx,[rdx+0xb0]
   14003c573:	add    rcx,0x8
   14003c577:	jmp    0x14000fd20
   14003c57c:	lea    rcx,[rdx+0xb0]
   14003c583:	add    rcx,0x8
   14003c587:	jmp    0x14000fd20
   14003c58c:	lea    rcx,[rdx+0xb0]
   14003c593:	add    rcx,0x8
   14003c597:	jmp    0x14000fd20
   14003c59c:	lea    rcx,[rdx+0xb0]
   14003c5a3:	add    rcx,0x8
   14003c5a7:	jmp    0x14000fd20
   14003c5ac:	lea    rcx,[rdx+0xb0]
   14003c5b3:	add    rcx,0x8
   14003c5b7:	jmp    0x14000fd20
   14003c5bc:	lea    rcx,[rdx+0x118]
   14003c5c3:	add    rcx,0x8
   14003c5c7:	jmp    0x140003220
   14003c5cc:	lea    rcx,[rdx+0x118]
   14003c5d3:	add    rcx,0x20
   14003c5d7:	jmp    0x140006a48
   14003c5dc:	lea    rcx,[rdx+0x118]
   14003c5e3:	add    rcx,0x8
   14003c5e7:	jmp    0x140003220
   14003c5ec:	lea    rcx,[rdx+0x118]
   14003c5f3:	add    rcx,0x20
   14003c5f7:	jmp    0x140006a48
   14003c5fc:	lea    rcx,[rdx+0x1f0]
   14003c603:	jmp    0x140010294
   14003c608:	lea    rcx,[rdx+0xf8]
   14003c60f:	jmp    0x140003078
   14003c614:	lea    rcx,[rdx+0xf8]
   14003c61b:	jmp    0x140003078
   14003c620:	lea    rcx,[rdx+0x80]
   14003c627:	jmp    0x14000fed0
   14003c62c:	lea    rcx,[rdx+0xf8]
   14003c633:	jmp    0x140003078
   14003c638:	lea    rcx,[rdx+0xf8]
   14003c63f:	jmp    0x140003220
   14003c644:	lea    rcx,[rdx+0x118]
   14003c64b:	jmp    0x140003078
   14003c650:	lea    rcx,[rdx+0x118]
   14003c657:	jmp    0x140003078
   14003c65c:	lea    rcx,[rdx+0xe0]
   14003c663:	add    rcx,0x8
   14003c667:	jmp    0x14000fd20
   14003c66c:	lea    rcx,[rdx+0xe0]
   14003c673:	jmp    0x140001820
   14003c678:	lea    rcx,[rdx+0xb0]
   14003c67f:	jmp    0x140003078
   14003c684:	lea    rcx,[rdx+0xb0]
   14003c68b:	jmp    0x140003078
   14003c690:	lea    rcx,[rdx+0xe0]
   14003c697:	add    rcx,0x8
   14003c69b:	jmp    0x14000fd20
   14003c6a0:	lea    rcx,[rdx+0xb0]
   14003c6a7:	jmp    0x140003078
   14003c6ac:	lea    rcx,[rdx+0x160]
   14003c6b3:	jmp    0x140010294
   14003c6b8:	lea    rcx,[rdx+0xe0]
   14003c6bf:	add    rcx,0x8
   14003c6c3:	jmp    0x14000fd20
   14003c6c8:	lea    rcx,[rdx+0x80]
   14003c6cf:	add    rcx,0x8
   14003c6d3:	jmp    0x140003220
   14003c6d8:	lea    rcx,[rdx+0x80]
   14003c6df:	add    rcx,0x20
   14003c6e3:	jmp    0x140006a48
   14003c6e8:	lea    rcx,[rdx+0x80]
   14003c6ef:	add    rcx,0x8
   14003c6f3:	jmp    0x140003220
   14003c6f8:	lea    rcx,[rdx+0x80]
   14003c6ff:	add    rcx,0x20
   14003c703:	jmp    0x140006a48
   14003c708:	lea    rcx,[rdx+0x80]
   14003c70f:	jmp    0x140003078
   14003c714:	lea    rcx,[rdx+0x80]
   14003c71b:	jmp    0x140003078
   14003c720:	lea    rcx,[rdx+0x80]
   14003c727:	jmp    0x140003078
   14003c72c:	lea    rcx,[rdx+0x80]
   14003c733:	jmp    0x140003078
   14003c738:	lea    rcx,[rdx+0x80]
   14003c73f:	jmp    0x140003078
   14003c744:	lea    rcx,[rdx+0x80]
   14003c74b:	jmp    0x140003078
   14003c750:	lea    rcx,[rdx+0x80]
   14003c757:	jmp    0x140003078
   14003c75c:	mov    QWORD PTR [rsp+0x10],rdx
   14003c761:	push   rbp
   14003c762:	sub    rsp,0x20
   14003c766:	mov    rbp,rdx
   14003c769:	mov    rcx,QWORD PTR [rbp+0x68]
   14003c76d:	mov    QWORD PTR [rbp+0x68],rcx
   14003c771:	xor    eax,eax
   14003c773:	inc    rcx
   14003c776:	jne    0x14003c77a
   14003c778:	jmp    0x14003c78a
   14003c77a:	cmp    rcx,0xffffffffffffffff
   14003c77e:	ja     0x14003c797
   14003c780:	call   0x140026da8
   14003c785:	test   rax,rax
   14003c788:	je     0x14003c797
   14003c78a:	mov    QWORD PTR [rbp+0x20],rax
   14003c78e:	lea    rax,[rip+0xfffffffffffc7741]        # 0x140003ed6
   14003c795:	jmp    0x14003c79d
   14003c797:	call   0x140031ed4
   14003c79c:	nop
   14003c79d:	add    rsp,0x20
   14003c7a1:	pop    rbp
   14003c7a2:	ret    
   14003c7a3:	int3   
   14003c7a4:	mov    QWORD PTR [rsp+0x10],rdx
   14003c7a9:	push   rbx
   14003c7aa:	push   rbp
   14003c7ab:	sub    rsp,0x28
   14003c7af:	mov    rbp,rdx
   14003c7b2:	mov    rbx,QWORD PTR [rbp+0x60]
   14003c7b6:	cmp    QWORD PTR [rbx+0x18],0x10
   14003c7bb:	jb     0x14003c7c5
   14003c7bd:	mov    rcx,QWORD PTR [rbx]
   14003c7c0:	call   0x14002657c
   14003c7c5:	mov    QWORD PTR [rbx+0x18],0xf
   14003c7cd:	and    QWORD PTR [rbx+0x10],0x0
   14003c7d2:	mov    BYTE PTR [rbx],0x0
   14003c7d5:	xor    edx,edx
   14003c7d7:	xor    ecx,ecx
   14003c7d9:	call   0x140029fe8
   14003c7de:	nop
   14003c7df:	rex push rbp
   14003c7e1:	sub    rsp,0x20
   14003c7e5:	mov    rbp,rdx
   14003c7e8:	mov    rdx,QWORD PTR [rbp+0x68]
   14003c7ec:	mov    rcx,QWORD PTR [rbp+0x78]
   14003c7f0:	call   0x140001000
   14003c7f5:	add    rsp,0x20
   14003c7f9:	pop    rbp
   14003c7fa:	ret    
   14003c7fb:	mov    QWORD PTR [rsp+0x10],rdx
   14003c800:	push   rbp
   14003c801:	sub    rsp,0x20
   14003c805:	mov    rbp,rdx
   14003c808:	mov    rcx,QWORD PTR [rbp+0x68]
   14003c80c:	mov    QWORD PTR [rbp+0x68],rcx
   14003c810:	xor    eax,eax
   14003c812:	inc    rcx
   14003c815:	jne    0x14003c819
   14003c817:	jmp    0x14003c835
   14003c819:	movabs rax,0x7fffffffffffffff
   14003c823:	cmp    rcx,rax
   14003c826:	ja     0x14003c842
   14003c828:	add    rcx,rcx
   14003c82b:	call   0x140026da8
   14003c830:	test   rax,rax
   14003c833:	je     0x14003c842
   14003c835:	mov    QWORD PTR [rbp+0x20],rax
   14003c839:	lea    rax,[rip+0xfffffffffffc7381]        # 0x140003bc1
   14003c840:	jmp    0x14003c848
   14003c842:	call   0x140031ed4
   14003c847:	nop
   14003c848:	add    rsp,0x20
   14003c84c:	pop    rbp
   14003c84d:	ret    
   14003c84e:	int3   
   14003c84f:	mov    QWORD PTR [rsp+0x10],rdx
   14003c854:	push   rbx
   14003c855:	push   rbp
   14003c856:	sub    rsp,0x28
   14003c85a:	mov    rbp,rdx
   14003c85d:	mov    rbx,QWORD PTR [rbp+0x60]
   14003c861:	cmp    QWORD PTR [rbx+0x18],0x8
   14003c866:	jb     0x14003c870
   14003c868:	mov    rcx,QWORD PTR [rbx]
   14003c86b:	call   0x14002657c
   14003c870:	mov    QWORD PTR [rbx+0x18],0x7
   14003c878:	and    QWORD PTR [rbx+0x10],0x0
   14003c87d:	xor    eax,eax
   14003c87f:	mov    WORD PTR [rbx],ax
   14003c882:	xor    edx,edx
   14003c884:	xor    ecx,ecx
   14003c886:	call   0x140029fe8
   14003c88b:	nop
   14003c88c:	rex push rbp
   14003c88e:	sub    rsp,0x20
   14003c892:	mov    rbp,rdx
   14003c895:	mov    rdx,QWORD PTR [rbp+0x68]
   14003c899:	mov    rcx,QWORD PTR [rbp+0x78]
   14003c89d:	call   0x140001000
   14003c8a2:	add    rsp,0x20
   14003c8a6:	pop    rbp
   14003c8a7:	ret    
   14003c8a8:	mov    QWORD PTR [rsp+0x10],rdx
   14003c8ad:	push   rbp
   14003c8ae:	sub    rsp,0x20
   14003c8b2:	mov    rbp,rdx
   14003c8b5:	mov    rcx,QWORD PTR [rbp+0x48]
   14003c8b9:	call   0x14002657c
   14003c8be:	xor    edx,edx
   14003c8c0:	xor    ecx,ecx
   14003c8c2:	call   0x140029fe8
   14003c8c7:	nop
   14003c8c8:	mov    QWORD PTR [rsp+0x10],rdx
   14003c8cd:	push   rbp
   14003c8ce:	sub    rsp,0x20
   14003c8d2:	mov    rbp,rdx
   14003c8d5:	mov    rcx,QWORD PTR [rbp+0x48]
   14003c8d9:	call   0x14002657c
   14003c8de:	xor    edx,edx
   14003c8e0:	xor    ecx,ecx
   14003c8e2:	call   0x140029fe8
   14003c8e7:	nop
   14003c8e8:	mov    QWORD PTR [rsp+0x10],rdx
   14003c8ed:	push   rbp
   14003c8ee:	sub    rsp,0x20
   14003c8f2:	mov    rbp,rdx
   14003c8f5:	mov    rcx,QWORD PTR [rbp+0x48]
   14003c8f9:	call   0x14002657c
   14003c8fe:	xor    edx,edx
   14003c900:	xor    ecx,ecx
   14003c902:	call   0x140029fe8
   14003c907:	nop
   14003c908:	rex push rbp
   14003c90a:	sub    rsp,0x20
   14003c90e:	mov    rbp,rdx
   14003c911:	mov    eax,DWORD PTR [rbp+0x20]
   14003c914:	and    eax,0x1
   14003c917:	test   eax,eax
   14003c919:	je     0x14003c928
   14003c91b:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14003c91f:	mov    rcx,QWORD PTR [rbp+0x48]
   14003c923:	call   0x140003048
   14003c928:	add    rsp,0x20
   14003c92c:	pop    rbp
   14003c92d:	ret    
   14003c92e:	mov    QWORD PTR [rsp+0x10],rdx
   14003c933:	push   rbx
   14003c934:	push   rbp
   14003c935:	sub    rsp,0x28
   14003c939:	mov    rbp,rdx
   14003c93c:	mov    rbx,QWORD PTR [rbp+0x40]
   14003c940:	mov    rcx,QWORD PTR [rbx]
   14003c943:	test   rcx,rcx
   14003c946:	je     0x14003c95b
   14003c948:	call   0x14002657c
   14003c94d:	and    QWORD PTR [rbx],0x0
   14003c951:	and    QWORD PTR [rbx+0x8],0x0
   14003c956:	and    QWORD PTR [rbx+0x10],0x0
   14003c95b:	xor    edx,edx
   14003c95d:	xor    ecx,ecx
   14003c95f:	call   0x140029fe8
   14003c964:	nop
   14003c965:	mov    QWORD PTR [rsp+0x10],rdx
   14003c96a:	push   rbx
   14003c96b:	push   rbp
   14003c96c:	sub    rsp,0x28
   14003c970:	mov    rbp,rdx
   14003c973:	mov    rbx,QWORD PTR [rbp+0x50]
   14003c977:	mov    rcx,QWORD PTR [rbx]
   14003c97a:	test   rcx,rcx
   14003c97d:	je     0x14003c992
   14003c97f:	call   0x14002657c
   14003c984:	and    QWORD PTR [rbx],0x0
   14003c988:	and    QWORD PTR [rbx+0x8],0x0
   14003c98d:	and    QWORD PTR [rbx+0x10],0x0
   14003c992:	xor    edx,edx
   14003c994:	xor    ecx,ecx
   14003c996:	call   0x140029fe8
   14003c99b:	nop
   14003c99c:	lea    rcx,[rdx+0x50]
   14003c9a3:	jmp    0x140006cdc
   14003c9a8:	lea    rcx,[rdx+0x50]
   14003c9af:	jmp    0x140006ac0
   14003c9b4:	lea    rcx,[rdx+0x50]
   14003c9bb:	jmp    0x140006cdc
   14003c9c0:	lea    rcx,[rdx+0x38]
   14003c9c7:	jmp    0x140003078
   14003c9cc:	mov    rcx,QWORD PTR [rdx+0x30]
   14003c9d3:	add    rcx,0x8
   14003c9d7:	jmp    0x140003078
   14003c9dc:	rex push rbp
   14003c9de:	sub    rsp,0x20
   14003c9e2:	mov    rbp,rdx
   14003c9e5:	mov    eax,DWORD PTR [rbp+0x20]
   14003c9e8:	and    eax,0x1
   14003c9eb:	test   eax,eax
   14003c9ed:	je     0x14003c9fc
   14003c9ef:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14003c9f3:	mov    rcx,QWORD PTR [rbp+0x30]
   14003c9f7:	call   0x140006a08
   14003c9fc:	add    rsp,0x20
   14003ca00:	pop    rbp
   14003ca01:	ret    
   14003ca02:	mov    rcx,QWORD PTR [rdx+0x60]
   14003ca09:	jmp    0x140006a08
   14003ca0e:	mov    rcx,QWORD PTR [rdx+0x48]
   14003ca15:	add    rcx,0x8
   14003ca19:	jmp    0x140003078
   14003ca1e:	mov    rcx,QWORD PTR [rdx+0x48]
   14003ca25:	jmp    0x140006a08
   14003ca2a:	mov    rcx,QWORD PTR [rdx+0x50]
   14003ca31:	jmp    0x140006a08
   14003ca36:	mov    rcx,QWORD PTR [rdx+0x50]
   14003ca3d:	add    rcx,0x8
   14003ca41:	jmp    0x140003078
   14003ca46:	mov    rcx,QWORD PTR [rdx+0x60]
   14003ca4d:	add    rcx,0x8
   14003ca51:	jmp    0x140003078
   14003ca56:	mov    rcx,QWORD PTR [rdx+0x60]
   14003ca5d:	jmp    0x140006cdc
   14003ca62:	mov    rcx,QWORD PTR [rdx+0x50]
   14003ca69:	add    rcx,0x8
   14003ca6d:	jmp    0x140006ac0
   14003ca72:	mov    rcx,QWORD PTR [rdx+0x50]
   14003ca79:	jmp    0x140014068
   14003ca7e:	mov    rcx,QWORD PTR [rdx+0x60]
   14003ca85:	jmp    0x140006cdc
   14003ca8a:	mov    rcx,QWORD PTR [rdx+0x50]
   14003ca91:	add    rcx,0x670
   14003ca98:	jmp    0x140006ac0
   14003ca9d:	mov    rcx,QWORD PTR [rdx+0x50]
   14003caa4:	add    rcx,0x678
   14003caab:	jmp    0x1400072c4
   14003cab0:	mov    rcx,QWORD PTR [rdx+0x50]
   14003cab7:	add    rcx,0x688
   14003cabe:	jmp    0x1400072ec
   14003cac3:	mov    rcx,QWORD PTR [rdx+0x50]
   14003caca:	add    rcx,0x698
   14003cad1:	jmp    0x1400072c4
   14003cad6:	mov    rcx,QWORD PTR [rdx+0x50]
   14003cadd:	add    rcx,0x6a8
   14003cae4:	jmp    0x1400072ec
   14003cae9:	mov    rcx,QWORD PTR [rdx+0x50]
   14003caf0:	add    rcx,0x908
   14003caf7:	jmp    0x1400072ec
   14003cafc:	mov    rcx,QWORD PTR [rdx+0x50]
   14003cb03:	add    rcx,0x918
   14003cb0a:	jmp    0x1400072ec
   14003cb0f:	mov    rcx,QWORD PTR [rdx+0x50]
   14003cb16:	add    rcx,0x930
   14003cb1d:	jmp    0x1400072ec
   14003cb22:	mov    rcx,QWORD PTR [rdx+0x50]
   14003cb29:	add    rcx,0x940
   14003cb30:	jmp    0x1400072ec
   14003cb35:	mov    rcx,QWORD PTR [rdx+0x60]
   14003cb3c:	jmp    0x140006cdc
   14003cb41:	mov    rcx,QWORD PTR [rdx+0x50]
   14003cb48:	add    rcx,0x950
   14003cb4f:	jmp    0x140006ac0
   14003cb54:	mov    rcx,QWORD PTR [rdx+0x50]
   14003cb5b:	add    rcx,0x958
   14003cb62:	jmp    0x1400072ec
   14003cb67:	mov    rcx,QWORD PTR [rdx+0x60]
   14003cb6e:	jmp    0x140006cdc
   14003cb73:	mov    rcx,QWORD PTR [rdx+0x50]
   14003cb7a:	add    rcx,0x968
   14003cb81:	jmp    0x140006ac0
   14003cb86:	mov    rcx,QWORD PTR [rdx+0x60]
   14003cb8d:	jmp    0x140006cdc
   14003cb92:	mov    rcx,QWORD PTR [rdx+0x50]
   14003cb99:	add    rcx,0x970
   14003cba0:	jmp    0x140006ac0
   14003cba5:	mov    rcx,QWORD PTR [rdx+0x60]
   14003cbac:	jmp    0x140006cdc
   14003cbb1:	mov    rcx,QWORD PTR [rdx+0x50]
   14003cbb8:	add    rcx,0x978
   14003cbbf:	jmp    0x140006ac0
   14003cbc4:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cbcb:	jmp    0x140006cdc
   14003cbd0:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cbd7:	add    rcx,0x8
   14003cbdb:	jmp    0x140003078
   14003cbe0:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cbe7:	jmp    0x140014068
   14003cbec:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cbf3:	add    rcx,0x670
   14003cbfa:	jmp    0x140006ac0
   14003cbff:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cc06:	add    rcx,0x678
   14003cc0d:	jmp    0x1400072c4
   14003cc12:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cc19:	add    rcx,0x688
   14003cc20:	jmp    0x1400072ec
   14003cc25:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cc2c:	add    rcx,0x698
   14003cc33:	jmp    0x1400072c4
   14003cc38:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cc3f:	add    rcx,0x6a8
   14003cc46:	jmp    0x1400072ec
   14003cc4b:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cc52:	add    rcx,0x908
   14003cc59:	jmp    0x1400072ec
   14003cc5e:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cc65:	add    rcx,0x918
   14003cc6c:	jmp    0x1400072ec
   14003cc71:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cc78:	add    rcx,0x930
   14003cc7f:	jmp    0x1400072ec
   14003cc84:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cc8b:	add    rcx,0x940
   14003cc92:	jmp    0x1400072ec
   14003cc97:	mov    rcx,QWORD PTR [rdx+0x40]
   14003cc9e:	add    rcx,0x950
   14003cca5:	jmp    0x140006ac0
   14003ccaa:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ccb1:	add    rcx,0x958
   14003ccb8:	jmp    0x1400072ec
   14003ccbd:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ccc4:	add    rcx,0x968
   14003cccb:	jmp    0x140006ac0
   14003ccd0:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ccd7:	add    rcx,0x970
   14003ccde:	jmp    0x140006ac0
   14003cce3:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ccea:	add    rcx,0x978
   14003ccf1:	jmp    0x140006ac0
   14003ccf6:	mov    rcx,QWORD PTR [rdx+0x48]
   14003ccfd:	jmp    0x140006cdc
   14003cd02:	mov    rcx,QWORD PTR [rdx+0x48]
   14003cd09:	jmp    0x140006cdc
   14003cd0e:	mov    rcx,QWORD PTR [rdx+0x48]
   14003cd15:	jmp    0x140006cdc
   14003cd1a:	mov    rcx,QWORD PTR [rdx+0x48]
   14003cd21:	jmp    0x140006cdc
   14003cd26:	mov    rcx,QWORD PTR [rdx+0x48]
   14003cd2d:	jmp    0x140006cdc
   14003cd32:	rex push rbp
   14003cd34:	sub    rsp,0x20
   14003cd38:	mov    rbp,rdx
   14003cd3b:	mov    rdx,QWORD PTR [rbp+0x50]
   14003cd3f:	movsxd rax,DWORD PTR [rbp+0x60]
   14003cd43:	imul   rax,rax,0x8
   14003cd47:	mov    rdx,QWORD PTR [rdx]
   14003cd4a:	add    rdx,rax
   14003cd4d:	mov    rcx,QWORD PTR [rbp+0x68]
   14003cd51:	call   0x140001000
   14003cd56:	add    rsp,0x20
   14003cd5a:	pop    rbp
   14003cd5b:	ret    
   14003cd5c:	mov    rcx,QWORD PTR [rdx+0x68]
   14003cd63:	jmp    0x140006ac0
   14003cd68:	lea    rcx,[rdx+0x28]
   14003cd6f:	jmp    0x140006a48
   14003cd74:	mov    rcx,QWORD PTR [rdx+0x98]
   14003cd7b:	jmp    0x140006a08
   14003cd80:	lea    rcx,[rdx+0x28]
   14003cd87:	jmp    0x140006ac0
   14003cd8c:	lea    rcx,[rdx+0x40]
   14003cd93:	jmp    0x140006ac0
   14003cd98:	lea    rcx,[rdx+0x38]
   14003cd9f:	jmp    0x140006ac0
   14003cda4:	lea    rcx,[rdx+0x38]
   14003cdab:	jmp    0x140006cdc
   14003cdb0:	rex push rbp
   14003cdb2:	sub    rsp,0x20
   14003cdb6:	mov    rbp,rdx
   14003cdb9:	mov    rdx,QWORD PTR [rbp+0x88]
   14003cdc0:	movsxd rax,DWORD PTR [rbp+0x68]
   14003cdc4:	imul   rax,rax,0x4
   14003cdc8:	mov    rdx,QWORD PTR [rdx]
   14003cdcb:	add    rdx,rax
   14003cdce:	mov    rcx,QWORD PTR [rbp+0x90]
   14003cdd5:	call   0x140001000
   14003cdda:	add    rsp,0x20
   14003cdde:	pop    rbp
   14003cddf:	ret    
   14003cde0:	lea    rcx,[rdx+0x40]
   14003cde7:	jmp    0x140006cdc
   14003cdec:	lea    rcx,[rdx+0x28]
   14003cdf3:	jmp    0x140006cdc
   14003cdf8:	lea    rcx,[rdx+0x98]
   14003cdff:	jmp    0x140006cdc
   14003ce04:	lea    rcx,[rdx+0x98]
   14003ce0b:	jmp    0x140006ac0
   14003ce10:	lea    rcx,[rdx+0x38]
   14003ce17:	jmp    0x140006cdc
   14003ce1c:	lea    rcx,[rdx+0x38]
   14003ce23:	jmp    0x140006ac0
   14003ce28:	lea    rcx,[rdx+0x38]
   14003ce2f:	jmp    0x140006cdc
   14003ce34:	lea    rcx,[rdx+0x48]
   14003ce3b:	jmp    0x140006cdc
   14003ce40:	lea    rcx,[rdx+0x48]
   14003ce47:	jmp    0x140006ac0
   14003ce4c:	lea    rcx,[rdx+0x48]
   14003ce53:	jmp    0x140006cdc
   14003ce58:	lea    rcx,[rdx+0x30]
   14003ce5f:	jmp    0x140006cdc
   14003ce64:	lea    rcx,[rdx+0x30]
   14003ce6b:	jmp    0x140006ac0
   14003ce70:	lea    rcx,[rdx+0x30]
   14003ce77:	jmp    0x140006cdc
   14003ce7c:	lea    rcx,[rdx+0x40]
   14003ce83:	jmp    0x140006cdc
   14003ce88:	lea    rcx,[rdx+0x40]
   14003ce8f:	jmp    0x140006ac0
   14003ce94:	lea    rcx,[rdx+0x40]
   14003ce9b:	jmp    0x140006cdc
   14003cea0:	lea    rcx,[rdx+0x50]
   14003cea7:	jmp    0x140006cdc
   14003ceac:	lea    rcx,[rdx+0x50]
   14003ceb3:	jmp    0x140006ac0
   14003ceb8:	lea    rcx,[rdx+0x50]
   14003cebf:	jmp    0x140006cdc
   14003cec4:	lea    rcx,[rdx+0x98]
   14003cecb:	jmp    0x140006cdc
   14003ced0:	lea    rcx,[rdx+0x1c0]
   14003ced7:	jmp    0x140006ac0
   14003cedc:	lea    rcx,[rdx+0x1c0]
   14003cee3:	jmp    0x140006cdc
   14003cee8:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ceef:	jmp    0x14000d818
   14003cef4:	mov    rcx,QWORD PTR [rdx+0x50]
   14003cefb:	jmp    0x140006cdc
   14003cf00:	rex push rbp
   14003cf02:	sub    rsp,0x20
   14003cf06:	mov    rbp,rdx
   14003cf09:	mov    eax,DWORD PTR [rbp+0x30]
   14003cf0c:	and    eax,0x1
   14003cf0f:	test   eax,eax
   14003cf11:	je     0x14003cf20
   14003cf13:	and    DWORD PTR [rbp+0x30],0xfffffffe
   14003cf17:	mov    rcx,QWORD PTR [rbp+0x50]
   14003cf1b:	call   0x140006ac0
   14003cf20:	add    rsp,0x20
   14003cf24:	pop    rbp
   14003cf25:	ret    
   14003cf26:	lea    rcx,[rdx+0x28]
   14003cf2d:	jmp    0x1400072ec
   14003cf32:	lea    rcx,[rdx+0x38]
   14003cf39:	jmp    0x1400072ec
   14003cf3e:	lea    rcx,[rdx+0x88]
   14003cf45:	jmp    0x140006ac0
   14003cf4a:	lea    rcx,[rdx+0x88]
   14003cf51:	jmp    0x140006cdc
   14003cf56:	lea    rcx,[rdx+0x30]
   14003cf5d:	jmp    0x140006ac0
   14003cf62:	lea    rcx,[rdx+0x20]
   14003cf69:	jmp    0x140006cdc
   14003cf6e:	lea    rcx,[rdx+0x20]
   14003cf75:	jmp    0x140006ac0
   14003cf7a:	lea    rcx,[rdx+0x28]
   14003cf81:	jmp    0x140006cdc
   14003cf86:	lea    rcx,[rdx+0x28]
   14003cf8d:	jmp    0x140006ac0
   14003cf92:	lea    rcx,[rdx+0x40]
   14003cf99:	jmp    0x140006ac0
   14003cf9e:	lea    rcx,[rdx+0x40]
   14003cfa5:	jmp    0x140006cdc
   14003cfaa:	lea    rcx,[rdx+0x38]
   14003cfb1:	jmp    0x140006ac0
   14003cfb6:	lea    rcx,[rdx+0x38]
   14003cfbd:	jmp    0x140006cdc
   14003cfc2:	lea    rcx,[rdx+0x48]
   14003cfc9:	jmp    0x140006ac0
   14003cfce:	lea    rcx,[rdx+0x48]
   14003cfd5:	jmp    0x140006cdc
   14003cfda:	lea    rcx,[rdx+0x28]
   14003cfe1:	jmp    0x140006cdc
   14003cfe6:	lea    rcx,[rdx+0x20]
   14003cfed:	jmp    0x140006cdc
   14003cff2:	lea    rcx,[rdx+0x30]
   14003cff9:	jmp    0x140006cdc
   14003cffe:	rex push rbp
   14003d000:	sub    rsp,0x20
   14003d004:	mov    rbp,rdx
   14003d007:	mov    eax,DWORD PTR [rbp+0x24]
   14003d00a:	and    eax,0x1
   14003d00d:	test   eax,eax
   14003d00f:	je     0x14003d01e
   14003d011:	and    DWORD PTR [rbp+0x24],0xfffffffe
   14003d015:	mov    rcx,QWORD PTR [rbp+0x30]
   14003d019:	call   0x140006ac0
   14003d01e:	add    rsp,0x20
   14003d022:	pop    rbp
   14003d023:	ret    
   14003d024:	lea    rcx,[rdx+0x38]
   14003d02b:	jmp    0x140006cdc
   14003d030:	lea    rcx,[rdx+0x38]
   14003d037:	jmp    0x140006ac0
   14003d03c:	lea    rcx,[rdx+0x30]
   14003d043:	jmp    0x140006cdc
   14003d048:	lea    rcx,[rdx+0x30]
   14003d04f:	jmp    0x140006ac0
   14003d054:	lea    rcx,[rdx+0x28]
   14003d05b:	jmp    0x14000d818
   14003d060:	lea    rcx,[rdx+0x28]
   14003d067:	jmp    0x14000b004
   14003d06c:	lea    rcx,[rdx+0x88]
   14003d073:	jmp    0x14000d818
   14003d078:	lea    rcx,[rdx+0x88]
   14003d07f:	jmp    0x14000b004
   14003d084:	lea    rcx,[rdx+0x40]
   14003d08b:	jmp    0x140006ac0
   14003d090:	lea    rcx,[rdx+0x40]
   14003d097:	jmp    0x140006cdc
   14003d09c:	lea    rcx,[rdx+0x88]
   14003d0a3:	jmp    0x14000d818
   14003d0a8:	lea    rcx,[rdx+0x28]
   14003d0af:	jmp    0x14000d818
   14003d0b4:	lea    rcx,[rdx+0x30]
   14003d0bb:	jmp    0x140006cdc
   14003d0c0:	lea    rcx,[rdx+0x38]
   14003d0c7:	jmp    0x140006cdc
   14003d0cc:	rex push rbp
   14003d0ce:	sub    rsp,0x20
   14003d0d2:	mov    rbp,rdx
   14003d0d5:	mov    eax,DWORD PTR [rbp+0x20]
   14003d0d8:	and    eax,0x1
   14003d0db:	test   eax,eax
   14003d0dd:	je     0x14003d0ec
   14003d0df:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14003d0e3:	mov    rcx,QWORD PTR [rbp+0x48]
   14003d0e7:	call   0x140006ac0
   14003d0ec:	add    rsp,0x20
   14003d0f0:	pop    rbp
   14003d0f1:	ret    
   14003d0f2:	mov    rcx,QWORD PTR [rdx+0x48]
   14003d0f9:	jmp    0x140006cdc
   14003d0fe:	rex push rbp
   14003d100:	sub    rsp,0x20
   14003d104:	mov    rbp,rdx
   14003d107:	mov    eax,DWORD PTR [rbp+0x20]
   14003d10a:	and    eax,0x1
   14003d10d:	test   eax,eax
   14003d10f:	je     0x14003d11e
   14003d111:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14003d115:	mov    rcx,QWORD PTR [rbp+0x58]
   14003d119:	call   0x140006ac0
   14003d11e:	add    rsp,0x20
   14003d122:	pop    rbp
   14003d123:	ret    
   14003d124:	mov    rcx,QWORD PTR [rdx+0x58]
   14003d12b:	jmp    0x140006cdc
   14003d130:	lea    rcx,[rdx+0x50]
   14003d137:	jmp    0x14001995c
   14003d13c:	lea    rcx,[rdx+0x30]
   14003d143:	jmp    0x14000d818
   14003d148:	lea    rcx,[rdx+0x30]
   14003d14f:	jmp    0x14000b004
   14003d154:	lea    rcx,[rdx+0x30]
   14003d15b:	jmp    0x14000d818
   14003d160:	lea    rcx,[rdx+0x30]
   14003d167:	jmp    0x14000d818
   14003d16c:	lea    rcx,[rdx+0x30]
   14003d173:	jmp    0x14000d818
   14003d178:	lea    rcx,[rdx+0x30]
   14003d17f:	jmp    0x14000b004
   14003d184:	lea    rcx,[rdx+0x30]
   14003d18b:	jmp    0x14000d818
   14003d190:	lea    rcx,[rdx+0x30]
   14003d197:	jmp    0x14000d818
   14003d19c:	lea    rcx,[rdx+0x30]
   14003d1a3:	jmp    0x1400072c4
   14003d1a8:	lea    rcx,[rdx+0x40]
   14003d1af:	jmp    0x140006ac0
   14003d1b4:	lea    rcx,[rdx+0x58]
   14003d1bb:	jmp    0x140006cdc
   14003d1c0:	lea    rcx,[rdx+0x58]
   14003d1c7:	jmp    0x140006ac0
   14003d1cc:	lea    rcx,[rdx+0x58]
   14003d1d3:	jmp    0x140006cdc
   14003d1d8:	lea    rcx,[rdx+0x40]
   14003d1df:	jmp    0x140006cdc
   14003d1e4:	lea    rcx,[rdx+0x50]
   14003d1eb:	jmp    0x140006cdc
   14003d1f0:	lea    rcx,[rdx+0x50]
   14003d1f7:	jmp    0x140006ac0
   14003d1fc:	lea    rcx,[rdx+0x50]
   14003d203:	jmp    0x140006cdc
   14003d208:	lea    rcx,[rdx+0xd0]
   14003d20f:	jmp    0x140006ac0
   14003d214:	lea    rcx,[rdx+0xd0]
   14003d21b:	jmp    0x140018654
   14003d220:	lea    rcx,[rdx+0xd0]
   14003d227:	jmp    0x140006ac0
   14003d22c:	mov    rcx,QWORD PTR [rdx+0x60]
   14003d233:	jmp    0x140006cdc
   14003d238:	lea    rcx,[rdx+0xd0]
   14003d23f:	jmp    0x140006ac0
   14003d244:	mov    rcx,QWORD PTR [rdx+0x70]
   14003d24b:	jmp    0x140006cdc
   14003d250:	lea    rcx,[rdx+0x68]
   14003d257:	jmp    0x140006cdc
   14003d25c:	lea    rcx,[rdx+0x68]
   14003d263:	jmp    0x140006ac0
   14003d268:	lea    rcx,[rdx+0x68]
   14003d26f:	jmp    0x140006cdc
   14003d274:	rex push rbp
   14003d276:	sub    rsp,0x20
   14003d27a:	mov    rbp,rdx
   14003d27d:	lea    rdx,[rbp+0x30]
   14003d281:	movsxd rax,DWORD PTR [rbp+0x48]
   14003d285:	imul   rax,rax,0x1c
   14003d289:	mov    rdx,QWORD PTR [rdx]
   14003d28c:	add    rdx,rax
   14003d28f:	mov    rcx,QWORD PTR [rbp+0x70]
   14003d293:	call   0x140001000
   14003d298:	add    rsp,0x20
   14003d29c:	pop    rbp
   14003d29d:	ret    
   14003d29e:	lea    rcx,[rdx+0x40]
   14003d2a5:	jmp    0x140006cdc
   14003d2aa:	mov    rcx,QWORD PTR [rdx+0x70]
   14003d2b1:	jmp    0x14002657c
   14003d2b6:	mov    QWORD PTR [rsp+0x10],rdx
   14003d2bb:	push   rbx
   14003d2bc:	push   rbp
   14003d2bd:	sub    rsp,0x38
   14003d2c1:	mov    rbp,rdx
   14003d2c4:	mov    rcx,QWORD PTR [rbp+0x58]
   14003d2c8:	mov    rax,QWORD PTR [rcx]
   14003d2cb:	mov    edx,0x1
   14003d2d0:	call   QWORD PTR [rax]
   14003d2d2:	mov    rbx,QWORD PTR [rbp+0x80]
   14003d2d9:	mov    rcx,QWORD PTR [rbx+0x8]
   14003d2dd:	mov    rax,QWORD PTR [rcx]
   14003d2e0:	xor    r9d,r9d
   14003d2e3:	xor    r8d,r8d
   14003d2e6:	mov    edx,0xe1230591
   14003d2eb:	call   QWORD PTR [rax]
   14003d2ed:	mov    DWORD PTR [rbx],0x1
   14003d2f3:	lea    rax,[rip+0xfffffffffffcf0bf]        # 0x14000c3b9
   14003d2fa:	add    rsp,0x38
   14003d2fe:	pop    rbp
   14003d2ff:	pop    rbx
   14003d300:	ret    
   14003d301:	int3   
   14003d302:	lea    rcx,[rdx+0x160]
   14003d309:	jmp    0x14001a144
   14003d30e:	rex push rbp
   14003d310:	sub    rsp,0x20
   14003d314:	mov    rbp,rdx
   14003d317:	mov    eax,DWORD PTR [rbp+0x40]
   14003d31a:	and    eax,0x1
   14003d31d:	test   eax,eax
   14003d31f:	je     0x14003d331
   14003d321:	and    DWORD PTR [rbp+0x40],0xfffffffe
   14003d325:	lea    rcx,[rbp+0x110]
   14003d32c:	call   0x1400072ec
   14003d331:	add    rsp,0x20
   14003d335:	pop    rbp
   14003d336:	ret    
   14003d337:	lea    rcx,[rdx+0x48]
   14003d33e:	jmp    0x14000d818
   14003d343:	lea    rcx,[rdx+0x48]
   14003d34a:	jmp    0x14000b004
   14003d34f:	lea    rcx,[rdx+0x48]
   14003d356:	jmp    0x14000d818
   14003d35b:	lea    rcx,[rdx+0x138]
   14003d362:	jmp    0x1400072ec
   14003d367:	lea    rcx,[rdx+0x128]
   14003d36e:	jmp    0x1400072ec
   14003d373:	lea    rcx,[rdx+0x78]
   14003d37a:	jmp    0x140006cdc
   14003d37f:	lea    rcx,[rdx+0x78]
   14003d386:	jmp    0x140006ac0
   14003d38b:	mov    QWORD PTR [rsp+0x10],rdx
   14003d390:	push   rbx
   14003d391:	push   rbp
   14003d392:	sub    rsp,0x48
   14003d396:	mov    rbp,rdx
   14003d399:	mov    rbx,QWORD PTR [rbp+0xb0]
   14003d3a0:	mov    rcx,QWORD PTR [rbx+0x8]
   14003d3a4:	mov    rax,QWORD PTR [rcx]
   14003d3a7:	xor    r9d,r9d
   14003d3aa:	xor    r8d,r8d
   14003d3ad:	mov    edx,0xe1230fa0
   14003d3b2:	call   QWORD PTR [rax]
   14003d3b4:	mov    DWORD PTR [rbx],0x1
   14003d3ba:	lea    rax,[rip+0xfffffffffffce0b0]        # 0x14000b471
   14003d3c1:	add    rsp,0x48
   14003d3c5:	pop    rbp
   14003d3c6:	pop    rbx
   14003d3c7:	ret    
   14003d3c8:	int3   
   14003d3c9:	lea    rcx,[rdx+0x78]
   14003d3d0:	jmp    0x140006cdc
   14003d3d5:	lea    rcx,[rdx+0x48]
   14003d3dc:	jmp    0x14000d818
   14003d3e1:	lea    rcx,[rdx+0x78]
   14003d3e8:	jmp    0x140006cdc
   14003d3ed:	lea    rcx,[rdx+0x48]
   14003d3f4:	jmp    0x14000d818
   14003d3f9:	lea    rcx,[rdx+0x78]
   14003d400:	jmp    0x140006cdc
   14003d405:	lea    rcx,[rdx+0x90]
   14003d40c:	jmp    0x140006cdc
   14003d411:	lea    rcx,[rdx+0x90]
   14003d418:	jmp    0x140006ac0
   14003d41d:	lea    rcx,[rdx+0x90]
   14003d424:	jmp    0x140006cdc
   14003d429:	rex push rbp
   14003d42b:	sub    rsp,0x20
   14003d42f:	mov    rbp,rdx
   14003d432:	mov    eax,DWORD PTR [rbp+0x40]
   14003d435:	and    eax,0x2
   14003d438:	test   eax,eax
   14003d43a:	je     0x14003d44c
   14003d43c:	and    DWORD PTR [rbp+0x40],0xfffffffd
   14003d440:	lea    rcx,[rbp+0xa0]
   14003d447:	call   0x140006ac0
   14003d44c:	add    rsp,0x20
   14003d450:	pop    rbp
   14003d451:	ret    
   14003d452:	lea    rcx,[rdx+0x88]
   14003d459:	jmp    0x140006cdc
   14003d45e:	rex push rbp
   14003d460:	sub    rsp,0x20
   14003d464:	mov    rbp,rdx
   14003d467:	mov    eax,DWORD PTR [rbp+0x40]
   14003d46a:	and    eax,0x4
   14003d46d:	test   eax,eax
   14003d46f:	je     0x14003d481
   14003d471:	and    DWORD PTR [rbp+0x40],0xfffffffb
   14003d475:	lea    rcx,[rbp+0x88]
   14003d47c:	call   0x140006ac0
   14003d481:	add    rsp,0x20
   14003d485:	pop    rbp
   14003d486:	ret    
   14003d487:	lea    rcx,[rdx+0x88]
   14003d48e:	jmp    0x140006cdc
   14003d493:	lea    rcx,[rdx+0xa0]
   14003d49a:	jmp    0x140006cdc
   14003d49f:	rex push rbp
   14003d4a1:	sub    rsp,0x20
   14003d4a5:	mov    rbp,rdx
   14003d4a8:	mov    eax,DWORD PTR [rbp+0x40]
   14003d4ab:	and    eax,0x8
   14003d4ae:	test   eax,eax
   14003d4b0:	je     0x14003d4c2
   14003d4b2:	and    DWORD PTR [rbp+0x40],0xfffffff7
   14003d4b6:	lea    rcx,[rbp+0xa8]
   14003d4bd:	call   0x140006ac0
   14003d4c2:	add    rsp,0x20
   14003d4c6:	pop    rbp
   14003d4c7:	ret    
   14003d4c8:	lea    rcx,[rdx+0x98]
   14003d4cf:	jmp    0x140006cdc
   14003d4d4:	rex push rbp
   14003d4d6:	sub    rsp,0x20
   14003d4da:	mov    rbp,rdx
   14003d4dd:	mov    eax,DWORD PTR [rbp+0x40]
   14003d4e0:	and    eax,0x10
   14003d4e3:	test   eax,eax
   14003d4e5:	je     0x14003d4f7
   14003d4e7:	and    DWORD PTR [rbp+0x40],0xffffffef
   14003d4eb:	lea    rcx,[rbp+0x98]
   14003d4f2:	call   0x140006ac0
   14003d4f7:	add    rsp,0x20
   14003d4fb:	pop    rbp
   14003d4fc:	ret    
   14003d4fd:	lea    rcx,[rdx+0x98]
   14003d504:	jmp    0x140006cdc
   14003d509:	lea    rcx,[rdx+0xa8]
   14003d510:	jmp    0x140006cdc
   14003d515:	lea    rcx,[rdx+0x48]
   14003d51c:	jmp    0x14000d818
   14003d521:	lea    rcx,[rdx+0x58]
   14003d528:	jmp    0x14001292c
   14003d52d:	lea    rcx,[rdx+0x28]
   14003d534:	jmp    0x140006a48
   14003d539:	lea    rcx,[rdx+0x190]
   14003d540:	jmp    0x140012ecc
   14003d545:	lea    rcx,[rdx+0x190]
   14003d54c:	add    rcx,0x8
   14003d550:	jmp    0x14000fda8
   14003d555:	lea    rcx,[rdx+0x190]
   14003d55c:	jmp    0x140014ffc
   14003d561:	lea    rcx,[rdx+0x50]
   14003d568:	jmp    0x140012ecc
   14003d56d:	lea    rcx,[rdx+0x50]
   14003d574:	add    rcx,0x8
   14003d578:	jmp    0x14000fda8
   14003d57d:	lea    rcx,[rdx+0x50]
   14003d584:	jmp    0x140014ffc
   14003d589:	lea    rcx,[rdx+0x2d0]
   14003d590:	jmp    0x14001a634
   14003d595:	lea    rcx,[rdx+0x40]
   14003d59c:	jmp    0x1400072ec
   14003d5a1:	lea    rcx,[rdx+0x30]
   14003d5a8:	jmp    0x1400072ec
   14003d5ad:	lea    rcx,[rdx+0x90]
   14003d5b4:	jmp    0x140006ac0
   14003d5b9:	lea    rcx,[rdx+0x98]
   14003d5c0:	jmp    0x140006ac0
   14003d5c5:	lea    rcx,[rdx+0xa0]
   14003d5cc:	jmp    0x140006ac0
   14003d5d1:	lea    rcx,[rdx+0xa0]
   14003d5d8:	jmp    0x140006cdc
   14003d5dd:	lea    rcx,[rdx+0x98]
   14003d5e4:	jmp    0x140006cdc
   14003d5e9:	lea    rcx,[rdx+0x90]
   14003d5f0:	jmp    0x140006cdc
   14003d5f5:	lea    rcx,[rdx+0x350]
   14003d5fc:	jmp    0x140012ecc
   14003d601:	lea    rcx,[rdx+0x350]
   14003d608:	add    rcx,0x8
   14003d60c:	jmp    0x14000fda8
   14003d611:	lea    rcx,[rdx+0x350]
   14003d618:	jmp    0x140014ffc
   14003d61d:	lea    rcx,[rdx+0x210]
   14003d624:	jmp    0x140012ecc
   14003d629:	lea    rcx,[rdx+0x210]
   14003d630:	add    rcx,0x8
   14003d634:	jmp    0x14000fda8
   14003d639:	lea    rcx,[rdx+0x210]
   14003d640:	jmp    0x140014ffc
   14003d645:	lea    rcx,[rdx+0x90]
   14003d64c:	jmp    0x14001a634
   14003d651:	mov    QWORD PTR [rsp+0x10],rdx
   14003d656:	push   rbp
   14003d657:	sub    rsp,0x40
   14003d65b:	mov    rbp,rdx
   14003d65e:	mov    rax,QWORD PTR [rbp+0x58]
   14003d662:	mov    rcx,QWORD PTR [rax+0x8]
   14003d666:	mov    rax,QWORD PTR [rcx]
   14003d669:	xor    r9d,r9d
   14003d66c:	xor    r8d,r8d
   14003d66f:	mov    edx,0x61230d3b
   14003d674:	call   QWORD PTR [rax]
   14003d676:	nop
   14003d677:	lea    rax,[rip+0xfffffffffffcc6a2]        # 0x140009d20
   14003d67e:	add    rsp,0x40
   14003d682:	pop    rbp
   14003d683:	ret    
   14003d684:	int3   
   14003d685:	lea    rcx,[rdx+0x90]
   14003d68c:	jmp    0x140012ecc
   14003d691:	lea    rcx,[rdx+0x90]
   14003d698:	add    rcx,0x8
   14003d69c:	jmp    0x14000fda8
   14003d6a1:	lea    rcx,[rdx+0x90]
   14003d6a8:	jmp    0x140014ffc
   14003d6ad:	lea    rcx,[rdx+0x1d0]
   14003d6b4:	jmp    0x14001a634
   14003d6b9:	lea    rcx,[rdx+0x350]
   14003d6c0:	jmp    0x140014ffc
   14003d6c5:	lea    rcx,[rdx+0x490]
   14003d6cc:	jmp    0x14001995c
   14003d6d1:	mov    QWORD PTR [rsp+0x10],rdx
   14003d6d6:	push   rbp
   14003d6d7:	sub    rsp,0x40
   14003d6db:	mov    rbp,rdx
   14003d6de:	mov    rdx,QWORD PTR [rbp+0x80]
   14003d6e5:	mov    rcx,QWORD PTR [rbp+0x78]
   14003d6e9:	call   0x14000abec
   14003d6ee:	nop
   14003d6ef:	lea    rax,[rip+0xfffffffffffcacc5]        # 0x1400083bb
   14003d6f6:	add    rsp,0x40
   14003d6fa:	pop    rbp
   14003d6fb:	ret    
   14003d6fc:	int3   
   14003d6fd:	lea    rcx,[rdx+0x40]
   14003d704:	jmp    0x140006cdc
   14003d709:	lea    rcx,[rdx+0x40]
   14003d710:	jmp    0x140006ac0
   14003d715:	lea    rcx,[rdx+0xc0]
   14003d71c:	jmp    0x1400072ec
   14003d721:	lea    rcx,[rdx+0x88]
   14003d728:	jmp    0x140006cdc
   14003d72d:	lea    rcx,[rdx+0x88]
   14003d734:	jmp    0x140006ac0
   14003d739:	lea    rcx,[rdx+0x88]
   14003d740:	jmp    0x140006cdc
   14003d745:	lea    rcx,[rdx+0xa8]
   14003d74c:	jmp    0x1400072ec
   14003d751:	lea    rcx,[rdx+0x98]
   14003d758:	jmp    0x140006cdc
   14003d75d:	lea    rcx,[rdx+0x98]
   14003d764:	jmp    0x140006ac0
   14003d769:	lea    rcx,[rdx+0x98]
   14003d770:	jmp    0x140006cdc
   14003d775:	lea    rcx,[rdx+0x48]
   14003d77c:	jmp    0x1400072ec
   14003d781:	lea    rcx,[rdx+0x80]
   14003d788:	jmp    0x140006ac0
   14003d78d:	lea    rcx,[rdx+0x80]
   14003d794:	jmp    0x140006cdc
   14003d799:	lea    rcx,[rdx+0x68]
   14003d7a0:	jmp    0x140006ac0
   14003d7a5:	lea    rcx,[rdx+0x58]
   14003d7ac:	jmp    0x1400072ec
   14003d7b1:	lea    rcx,[rdx+0xf0]
   14003d7b8:	jmp    0x140006ac0
   14003d7bd:	lea    rcx,[rdx+0xf0]
   14003d7c4:	jmp    0x140006cdc
   14003d7c9:	lea    rcx,[rdx+0x90]
   14003d7d0:	jmp    0x140006cdc
   14003d7d5:	lea    rcx,[rdx+0x90]
   14003d7dc:	jmp    0x140006ac0
   14003d7e1:	lea    rcx,[rdx+0x90]
   14003d7e8:	jmp    0x140006cdc
   14003d7ed:	lea    rcx,[rdx+0xb8]
   14003d7f4:	jmp    0x140006cdc
   14003d7f9:	lea    rcx,[rdx+0xb8]
   14003d800:	jmp    0x140006ac0
   14003d805:	lea    rcx,[rdx+0xb8]
   14003d80c:	jmp    0x140006cdc
   14003d811:	lea    rcx,[rdx+0x68]
   14003d818:	jmp    0x140006cdc
   14003d81d:	lea    rcx,[rdx+0xa0]
   14003d824:	jmp    0x140006cdc
   14003d829:	lea    rcx,[rdx+0xa0]
   14003d830:	jmp    0x140006ac0
   14003d835:	lea    rcx,[rdx+0xa0]
   14003d83c:	jmp    0x140006cdc
   14003d841:	lea    rcx,[rdx+0x120]
   14003d848:	jmp    0x14001556c
   14003d84d:	lea    rcx,[rdx+0x40]
   14003d854:	jmp    0x140006cdc
   14003d859:	lea    rcx,[rdx+0x40]
   14003d860:	jmp    0x140012ecc
   14003d865:	lea    rcx,[rdx+0x40]
   14003d86c:	add    rcx,0x8
   14003d870:	jmp    0x14000fda8
   14003d875:	lea    rcx,[rdx+0x40]
   14003d87c:	jmp    0x140014ffc
   14003d881:	lea    rcx,[rdx+0x180]
   14003d888:	jmp    0x14001a634
   14003d88d:	lea    rcx,[rdx+0x38]
   14003d894:	jmp    0x14000fda8
   14003d899:	lea    rcx,[rdx+0x38]
   14003d8a0:	jmp    0x140015774
   14003d8a5:	mov    QWORD PTR [rsp+0x10],rdx
   14003d8aa:	push   rbp
   14003d8ab:	sub    rsp,0x40
   14003d8af:	mov    rbp,rdx
   14003d8b2:	mov    rdx,QWORD PTR [rbp+0x48]
   14003d8b6:	cmp    DWORD PTR [rdx+0x4],0xe1232742
   14003d8bd:	jne    0x14003d8e1
   14003d8bf:	mov    rax,QWORD PTR [rbp+0x60]
   14003d8c3:	mov    rcx,QWORD PTR [rax+0x8]
   14003d8c7:	mov    rax,QWORD PTR [rcx]
   14003d8ca:	xor    r9d,r9d
   14003d8cd:	xor    r8d,r8d
   14003d8d0:	mov    edx,0xe123051a
   14003d8d5:	call   QWORD PTR [rax]
   14003d8d7:	nop
   14003d8d8:	lea    rax,[rip+0xfffffffffffca303]        # 0x140007be2
   14003d8df:	jmp    0x14003d8f2
   14003d8e1:	mov    rcx,QWORD PTR [rbp+0x60]
   14003d8e5:	call   0x14000abec
   14003d8ea:	nop
   14003d8eb:	lea    rax,[rip+0xfffffffffffca2f0]        # 0x140007be2
   14003d8f2:	add    rsp,0x40
   14003d8f6:	pop    rbp
   14003d8f7:	ret    
   14003d8f8:	int3   
   14003d8f9:	rex push rbp
   14003d8fb:	sub    rsp,0x20
   14003d8ff:	mov    rbp,rdx
   14003d902:	mov    eax,DWORD PTR [rbp+0x20]
   14003d905:	and    eax,0x1
   14003d908:	test   eax,eax
   14003d90a:	je     0x14003d919
   14003d90c:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14003d910:	mov    rcx,QWORD PTR [rbp+0x48]
   14003d914:	call   0x1400072ec
   14003d919:	add    rsp,0x20
   14003d91d:	pop    rbp
   14003d91e:	ret    
   14003d91f:	lea    rcx,[rdx+0x190]
   14003d926:	jmp    0x140012ecc
   14003d92b:	lea    rcx,[rdx+0x190]
   14003d932:	add    rcx,0x8
   14003d936:	jmp    0x14000fda8
   14003d93b:	lea    rcx,[rdx+0x190]
   14003d942:	jmp    0x140014ffc
   14003d947:	lea    rcx,[rdx+0x2d0]
   14003d94e:	jmp    0x14001a634
   14003d953:	lea    rcx,[rdx+0x50]
   14003d95a:	jmp    0x140012ecc
   14003d95f:	lea    rcx,[rdx+0x50]
   14003d966:	add    rcx,0x8
   14003d96a:	jmp    0x14000fda8
   14003d96f:	lea    rcx,[rdx+0x50]
   14003d976:	jmp    0x140014ffc
   14003d97b:	lea    rcx,[rdx+0xa0]
   14003d982:	jmp    0x140010294
   14003d987:	mov    QWORD PTR [rsp+0x10],rdx
   14003d98c:	push   rbp
   14003d98d:	sub    rsp,0x40
   14003d991:	mov    rbp,rdx
   14003d994:	mov    rdx,QWORD PTR [rbp+0x58]
   14003d998:	mov    rdx,QWORD PTR [rdx+0x8]
   14003d99c:	mov    rcx,QWORD PTR [rbp+0x90]
   14003d9a3:	call   0x140010c44
   14003d9a8:	nop
   14003d9a9:	lea    rax,[rip+0xfffffffffffcbacd]        # 0x14000947d
   14003d9b0:	add    rsp,0x40
   14003d9b4:	pop    rbp
   14003d9b5:	ret    
   14003d9b6:	int3   
   14003d9b7:	mov    rcx,QWORD PTR [rdx+0x58]
   14003d9be:	jmp    0x140006cdc
   14003d9c3:	mov    QWORD PTR [rsp+0x10],rdx
   14003d9c8:	push   rbp
   14003d9c9:	sub    rsp,0x20
   14003d9cd:	mov    rbp,rdx
   14003d9d0:	mov    rax,QWORD PTR [rbp+0x50]
   14003d9d4:	mov    QWORD PTR [rip+0x1f05d],rax        # 0x14005ca38
   14003d9db:	mov    DWORD PTR [rbp+0x20],0x80004002
   14003d9e2:	lea    rax,[rip+0xfffffffffffce10e]        # 0x14000baf7
   14003d9e9:	add    rsp,0x20
   14003d9ed:	pop    rbp
   14003d9ee:	ret    
   14003d9ef:	int3   
   14003d9f0:	mov    QWORD PTR [rsp+0x10],rdx
   14003d9f5:	push   rbp
   14003d9f6:	sub    rsp,0x20
   14003d9fa:	mov    rbp,rdx
   14003d9fd:	mov    rdx,QWORD PTR [rbp+0x78]
   14003da01:	lea    rcx,[rbp+0x28]
   14003da05:	call   0x140010c44
   14003da0a:	mov    eax,DWORD PTR [rbp+0x2c]
   14003da0d:	mov    DWORD PTR [rbp+0x80],eax
   14003da13:	lea    rcx,[rbp+0x28]
   14003da17:	call   0x140010c00
   14003da1c:	nop
   14003da1d:	lea    rax,[rip+0xfffffffffffd16c3]        # 0x14000f0e7
   14003da24:	add    rsp,0x20
   14003da28:	pop    rbp
   14003da29:	ret    
   14003da2a:	int3   
   14003da2b:	lea    rcx,[rdx+0x28]
   14003da32:	jmp    0x140010c00
   14003da37:	lea    rcx,[rdx+0x78]
   14003da3e:	jmp    0x140010c00
   14003da43:	lea    rcx,[rdx+0x40]
   14003da4a:	jmp    0x140010c00
   14003da4f:	lea    rcx,[rdx+0x70]
   14003da56:	add    rcx,0x8
   14003da5a:	jmp    0x140003220
   14003da5f:	lea    rcx,[rdx+0x70]
   14003da66:	add    rcx,0x20
   14003da6a:	jmp    0x140006a48
   14003da6f:	lea    rcx,[rdx+0x70]
   14003da76:	add    rcx,0x8
   14003da7a:	jmp    0x140003220
   14003da7f:	lea    rcx,[rdx+0x70]
   14003da86:	add    rcx,0x20
   14003da8a:	jmp    0x140006a48
   14003da8f:	lea    rcx,[rdx+0x70]
   14003da96:	add    rcx,0x8
   14003da9a:	jmp    0x140003220
   14003da9f:	lea    rcx,[rdx+0x70]
   14003daa6:	add    rcx,0x20
   14003daaa:	jmp    0x140006a48
   14003daaf:	lea    rcx,[rdx+0x70]
   14003dab6:	jmp    0x140003078
   14003dabb:	lea    rcx,[rdx+0x78]
   14003dac2:	jmp    0x140003078
   14003dac7:	lea    rcx,[rdx+0xb0]
   14003dace:	add    rcx,0x8
   14003dad2:	jmp    0x14000fd20
   14003dad7:	lea    rcx,[rdx+0xb0]
   14003dade:	jmp    0x140001820
   14003dae3:	lea    rcx,[rdx+0x38]
   14003daea:	jmp    0x140010c00
   14003daef:	lea    rcx,[rdx+0xb0]
   14003daf6:	add    rcx,0x8
   14003dafa:	jmp    0x14000fd20
   14003daff:	lea    rcx,[rdx+0xc0]
   14003db06:	add    rcx,0x8
   14003db0a:	jmp    0x14000fd20
   14003db0f:	lea    rcx,[rdx+0xc0]
   14003db16:	jmp    0x140001820
   14003db1b:	lea    rcx,[rdx+0xc0]
   14003db22:	add    rcx,0x8
   14003db26:	jmp    0x14000fd20
   14003db2b:	lea    rcx,[rdx+0xc0]
   14003db32:	add    rcx,0x8
   14003db36:	jmp    0x14000fd20
   14003db3b:	lea    rcx,[rdx+0xc0]
   14003db42:	add    rcx,0x8
   14003db46:	jmp    0x14000fd20
   14003db4b:	lea    rcx,[rdx+0xc0]
   14003db52:	add    rcx,0x8
   14003db56:	jmp    0x14000fd20
   14003db5b:	lea    rcx,[rdx+0xc0]
   14003db62:	add    rcx,0x8
   14003db66:	jmp    0x14000fd20
   14003db6b:	lea    rcx,[rdx+0xc0]
   14003db72:	add    rcx,0x8
   14003db76:	jmp    0x14000fd20
   14003db7b:	lea    rcx,[rdx+0xc0]
   14003db82:	add    rcx,0x8
   14003db86:	jmp    0x14000fd20
   14003db8b:	lea    rcx,[rdx+0x90]
   14003db92:	jmp    0x140010294
   14003db97:	lea    rcx,[rdx+0x30]
   14003db9e:	jmp    0x14000fed0
   14003dba3:	lea    rcx,[rdx+0x58]
   14003dbaa:	jmp    0x1400158ac
   14003dbaf:	lea    rcx,[rdx+0xc0]
   14003dbb6:	jmp    0x1400045ac
   14003dbbb:	lea    rcx,[rdx+0x70]
   14003dbc2:	jmp    0x140015ccc
   14003dbc7:	mov    QWORD PTR [rsp+0x10],rdx
   14003dbcc:	push   rbp
   14003dbcd:	sub    rsp,0x30
   14003dbd1:	mov    rbp,rdx
   14003dbd4:	mov    rdx,QWORD PTR [rbp+0x38]
   14003dbd8:	mov    rcx,QWORD PTR [rbp+0xa8]
   14003dbdf:	call   0x140010c44
   14003dbe4:	mov    DWORD PTR [rbp+0x30],0x2e4
   14003dbeb:	lea    rax,[rip+0xfffffffffffd1817]        # 0x14000f409
   14003dbf2:	add    rsp,0x30
   14003dbf6:	pop    rbp
   14003dbf7:	ret    
   14003dbf8:	int3   
   14003dbf9:	mov    QWORD PTR [rsp+0x10],rdx
   14003dbfe:	push   rbx
   14003dbff:	push   rbp
   14003dc00:	sub    rsp,0x38
   14003dc04:	mov    rbp,rdx
   14003dc07:	mov    rdx,QWORD PTR [rbp+0x38]
   14003dc0b:	mov    rbx,QWORD PTR [rbp+0xb0]
   14003dc12:	mov    rcx,rbx
   14003dc15:	call   0x140010c44
   14003dc1a:	mov    eax,DWORD PTR [rbx+0x4]
   14003dc1d:	mov    DWORD PTR [rbp+0x30],eax
   14003dc20:	lea    rax,[rip+0xfffffffffffd17e2]        # 0x14000f409
   14003dc27:	add    rsp,0x38
   14003dc2b:	pop    rbp
   14003dc2c:	pop    rbx
   14003dc2d:	ret    
   14003dc2e:	int3   
   14003dc2f:	rex push rbp
   14003dc31:	sub    rsp,0x30
   14003dc35:	mov    rbp,rdx
   14003dc38:	mov    rax,QWORD PTR [rcx]
   14003dc3b:	cmp    DWORD PTR [rax],0x80000003
   14003dc41:	je     0x14003dc53
   14003dc43:	call   0x140022d3c
   14003dc48:	test   eax,eax
   14003dc4a:	je     0x14003dc53
   14003dc4c:	mov    eax,0x1
   14003dc51:	jmp    0x14003dc55
   14003dc53:	xor    eax,eax
   14003dc55:	add    rsp,0x30
   14003dc59:	pop    rbp
   14003dc5a:	ret    
   14003dc5b:	int3   
   14003dc5c:	mov    rcx,QWORD PTR [rdx+0x40]
   14003dc63:	add    rcx,0x38
   14003dc67:	jmp    0x140003078
   14003dc6c:	mov    rcx,QWORD PTR [rdx+0x40]
   14003dc73:	add    rcx,0x58
   14003dc77:	jmp    0x140003078
   14003dc7c:	mov    rcx,QWORD PTR [rdx+0x50]
   14003dc83:	jmp    0x140003220
   14003dc88:	mov    rcx,QWORD PTR [rdx+0x50]
   14003dc8f:	add    rcx,0x18
   14003dc93:	jmp    0x140003220
   14003dc98:	mov    rcx,QWORD PTR [rdx+0x50]
   14003dc9f:	add    rcx,0x30
   14003dca3:	jmp    0x140003078
   14003dca8:	mov    rcx,QWORD PTR [rdx+0x50]
   14003dcaf:	add    rcx,0x50
   14003dcb3:	jmp    0x140003078
   14003dcb8:	mov    QWORD PTR [rsp+0x10],rdx
   14003dcbd:	push   rbp
   14003dcbe:	sub    rsp,0x20
   14003dcc2:	mov    rbp,rdx
   14003dcc5:	mov    rcx,QWORD PTR [rbp+0x60]
   14003dcc9:	call   QWORD PTR [rip+0x36f9]        # 0x1400413c8
   14003dccf:	xor    edx,edx
   14003dcd1:	xor    ecx,ecx
   14003dcd3:	call   0x140029fe8
   14003dcd8:	nop
   14003dcd9:	mov    rcx,QWORD PTR [rdx+0x40]
   14003dce0:	jmp    0x140003220
   14003dce5:	mov    rcx,QWORD PTR [rdx+0x40]
   14003dcec:	add    rcx,0x18
   14003dcf0:	jmp    0x140003220
   14003dcf5:	mov    rcx,QWORD PTR [rdx+0x40]
   14003dcfc:	add    rcx,0x30
   14003dd00:	jmp    0x140003078
   14003dd05:	mov    rcx,QWORD PTR [rdx+0x40]
   14003dd0c:	add    rcx,0x50
   14003dd10:	jmp    0x140003078
   14003dd15:	lea    rcx,[rdx+0x50]
   14003dd1c:	jmp    0x140003220
   14003dd21:	rex push rbp
   14003dd23:	sub    rsp,0x20
   14003dd27:	mov    rbp,rdx
   14003dd2a:	mov    rdx,QWORD PTR [rbp+0x40]
   14003dd2e:	mov    rcx,QWORD PTR [rbp+0x50]
   14003dd32:	call   0x140001000
   14003dd37:	add    rsp,0x20
   14003dd3b:	pop    rbp
   14003dd3c:	ret    
   14003dd3d:	mov    QWORD PTR [rsp+0x10],rdx
   14003dd42:	push   rbx
   14003dd43:	push   rbp
   14003dd44:	sub    rsp,0x28
   14003dd48:	mov    rbp,rdx
   14003dd4b:	mov    rbx,QWORD PTR [rbp+0x58]
   14003dd4f:	jmp    0x14003dd76
   14003dd51:	cmp    QWORD PTR [rbx+0x18],0x8
   14003dd56:	jb     0x14003dd60
   14003dd58:	mov    rcx,QWORD PTR [rbx]
   14003dd5b:	call   0x14002657c
   14003dd60:	mov    QWORD PTR [rbx+0x18],0x7
   14003dd68:	and    QWORD PTR [rbx+0x10],0x0
   14003dd6d:	xor    eax,eax
   14003dd6f:	mov    WORD PTR [rbx],ax
   14003dd72:	add    rbx,0x20
   14003dd76:	cmp    rbx,QWORD PTR [rbp+0x40]
   14003dd7a:	jne    0x14003dd51
   14003dd7c:	xor    edx,edx
   14003dd7e:	xor    ecx,ecx
   14003dd80:	call   0x140029fe8
   14003dd85:	nop
   14003dd86:	mov    QWORD PTR [rsp+0x10],rdx
   14003dd8b:	push   rbx
   14003dd8c:	push   rbp
   14003dd8d:	sub    rsp,0x28
   14003dd91:	mov    rbp,rdx
   14003dd94:	mov    rbx,QWORD PTR [rbp+0x68]
   14003dd98:	jmp    0x14003ddbf
   14003dd9a:	cmp    QWORD PTR [rbx+0x18],0x8
   14003dd9f:	jb     0x14003dda9
   14003dda1:	mov    rcx,QWORD PTR [rbx]
   14003dda4:	call   0x14002657c
   14003dda9:	mov    QWORD PTR [rbx+0x18],0x7
   14003ddb1:	and    QWORD PTR [rbx+0x10],0x0
   14003ddb6:	xor    eax,eax
   14003ddb8:	mov    WORD PTR [rbx],ax
   14003ddbb:	add    rbx,0x20
   14003ddbf:	cmp    rbx,QWORD PTR [rbp+0x60]
   14003ddc3:	jne    0x14003dd9a
   14003ddc5:	xor    edx,edx
   14003ddc7:	xor    ecx,ecx
   14003ddc9:	call   0x140029fe8
   14003ddce:	nop
   14003ddcf:	rex push rbp
   14003ddd1:	sub    rsp,0x20
   14003ddd5:	mov    rbp,rdx
   14003ddd8:	mov    rdx,QWORD PTR [rbp+0x58]
   14003dddc:	mov    rcx,QWORD PTR [rbp+0x50]
   14003dde0:	call   0x140001000
   14003dde5:	add    rsp,0x20
   14003dde9:	pop    rbp
   14003ddea:	ret    
   14003ddeb:	rex push rbp
   14003dded:	sub    rsp,0x20
   14003ddf1:	mov    rbp,rdx
   14003ddf4:	mov    rdx,QWORD PTR [rbp+0x68]
   14003ddf8:	mov    rcx,QWORD PTR [rbp+0x28]
   14003ddfc:	call   0x140001000
   14003de01:	add    rsp,0x20
   14003de05:	pop    rbp
   14003de06:	ret    
   14003de07:	mov    rcx,QWORD PTR [rdx+0x60]
   14003de0e:	add    rcx,0x8
   14003de12:	jmp    0x140003220
   14003de17:	mov    rcx,QWORD PTR [rdx+0x60]
   14003de1e:	add    rcx,0x20
   14003de22:	jmp    0x140006a48
   14003de27:	mov    rcx,QWORD PTR [rdx+0x40]
   14003de2e:	add    rcx,0x8
   14003de32:	jmp    0x140003220
   14003de37:	mov    rcx,QWORD PTR [rdx+0x40]
   14003de3e:	add    rcx,0x20
   14003de42:	jmp    0x140006a48
   14003de47:	rex push rbp
   14003de49:	sub    rsp,0x20
   14003de4d:	mov    rbp,rdx
   14003de50:	mov    rdx,QWORD PTR [rbp+0x40]
   14003de54:	mov    rcx,QWORD PTR [rbp+0x48]
   14003de58:	call   0x140001000
   14003de5d:	add    rsp,0x20
   14003de61:	pop    rbp
   14003de62:	ret    
   14003de63:	mov    QWORD PTR [rsp+0x10],rdx
   14003de68:	push   rbp
   14003de69:	sub    rsp,0x30
   14003de6d:	mov    rbp,rdx
   14003de70:	mov    rcx,QWORD PTR [rbp+0x78]
   14003de74:	call   0x14002657c
   14003de79:	xor    edx,edx
   14003de7b:	xor    ecx,ecx
   14003de7d:	call   0x140029fe8
   14003de82:	nop
   14003de83:	mov    QWORD PTR [rsp+0x10],rdx
   14003de88:	push   rbx
   14003de89:	push   rbp
   14003de8a:	sub    rsp,0x28
   14003de8e:	mov    rbp,rdx
   14003de91:	mov    rbx,QWORD PTR [rbp+0x50]
   14003de95:	mov    rcx,QWORD PTR [rbx]
   14003de98:	test   rcx,rcx
   14003de9b:	je     0x14003deb0
   14003de9d:	call   0x14002657c
   14003dea2:	and    QWORD PTR [rbx],0x0
   14003dea6:	and    QWORD PTR [rbx+0x8],0x0
   14003deab:	and    QWORD PTR [rbx+0x10],0x0
   14003deb0:	xor    edx,edx
   14003deb2:	xor    ecx,ecx
   14003deb4:	call   0x140029fe8
   14003deb9:	nop
   14003deba:	mov    QWORD PTR [rsp+0x10],rdx
   14003debf:	push   rbx
   14003dec0:	push   rbp
   14003dec1:	push   rsi
   14003dec2:	push   rdi
   14003dec3:	sub    rsp,0x38
   14003dec7:	mov    rbp,rdx
   14003deca:	mov    rdi,QWORD PTR [rbp+0x50]
   14003dece:	mov    rbx,QWORD PTR [rdi]
   14003ded1:	test   rbx,rbx
   14003ded4:	je     0x14003df1c
   14003ded6:	mov    rsi,QWORD PTR [rdi+0x8]
   14003deda:	jmp    0x14003df01
   14003dedc:	cmp    QWORD PTR [rbx+0x18],0x8
   14003dee1:	jb     0x14003deeb
   14003dee3:	mov    rcx,QWORD PTR [rbx]
   14003dee6:	call   0x14002657c
   14003deeb:	mov    QWORD PTR [rbx+0x18],0x7
   14003def3:	and    QWORD PTR [rbx+0x10],0x0
   14003def8:	xor    eax,eax
   14003defa:	mov    WORD PTR [rbx],ax
   14003defd:	add    rbx,0x20
   14003df01:	cmp    rbx,rsi
   14003df04:	jne    0x14003dedc
   14003df06:	mov    rcx,QWORD PTR [rdi]
   14003df09:	call   0x14002657c
   14003df0e:	and    QWORD PTR [rdi],0x0
   14003df12:	and    QWORD PTR [rdi+0x8],0x0
   14003df17:	and    QWORD PTR [rdi+0x10],0x0
   14003df1c:	xor    edx,edx
   14003df1e:	xor    ecx,ecx
   14003df20:	call   0x140029fe8
   14003df25:	nop
   14003df26:	mov    rcx,QWORD PTR [rdx+0x40]
   14003df2d:	jmp    0x140011388
   14003df32:	mov    rcx,QWORD PTR [rdx+0x40]
   14003df39:	jmp    0x14002657c
   14003df3e:	mov    rcx,QWORD PTR [rdx+0x40]
   14003df45:	jmp    0x140011388
   14003df4a:	lea    rcx,[rdx+0x70]
   14003df51:	jmp    0x140012044
   14003df56:	mov    QWORD PTR [rsp+0x10],rdx
   14003df5b:	push   rbx
   14003df5c:	push   rbp
   14003df5d:	sub    rsp,0x38
   14003df61:	mov    rbp,rdx
   14003df64:	mov    rax,QWORD PTR [rbp+0x60]
   14003df68:	cmp    DWORD PTR [rax],0x8007000e
   14003df6e:	jne    0x14003df9b
   14003df70:	mov    WORD PTR [rbp+0x38],0x0
   14003df76:	xor    eax,eax
   14003df78:	mov    rbx,QWORD PTR [rbp+0x40]
   14003df7c:	jmp    0x14003df95
   14003df7e:	mov    BYTE PTR [rbp+0x38],al
   14003df81:	mov    r8,QWORD PTR [rbp+0x30]
   14003df85:	lea    rdx,[rbp+0x38]
   14003df89:	mov    rcx,QWORD PTR [rbp+0x50]
   14003df8d:	call   0x1400116d4
   14003df92:	inc    rbx
   14003df95:	mov    al,BYTE PTR [rbx]
   14003df97:	test   al,al
   14003df99:	jne    0x14003df7e
   14003df9b:	lea    rax,[rip+0xfffffffffffd39ea]        # 0x14001198c
   14003dfa2:	add    rsp,0x38
   14003dfa6:	pop    rbp
   14003dfa7:	pop    rbx
   14003dfa8:	ret    
   14003dfa9:	int3   
   14003dfaa:	lea    rcx,[rdx+0x50]
   14003dfb1:	jmp    0x140012044
   14003dfb6:	mov    QWORD PTR [rsp+0x10],rdx
   14003dfbb:	push   rbp
   14003dfbc:	sub    rsp,0x30
   14003dfc0:	mov    rbp,rdx
   14003dfc3:	mov    rdx,QWORD PTR [rbp+0x30]
   14003dfc7:	mov    rcx,QWORD PTR [rbp+0x38]
   14003dfcb:	call   0x1400334d8
   14003dfd0:	nop
   14003dfd1:	lea    rax,[rip+0xfffffffffffd3c6e]        # 0x140011c46
   14003dfd8:	add    rsp,0x30
   14003dfdc:	pop    rbp
   14003dfdd:	ret    
   14003dfde:	int3   
   14003dfdf:	lea    rcx,[rdx+0x48]
   14003dfe6:	jmp    0x1400128e4
   14003dfeb:	lea    rcx,[rdx+0x38]
   14003dff2:	jmp    0x140012908
   14003dff7:	lea    rcx,[rdx+0x28]
   14003dffe:	jmp    0x140012908
   14003e003:	lea    rcx,[rdx+0x20]
   14003e00a:	jmp    0x140012908
   14003e00f:	lea    rcx,[rdx+0x30]
   14003e016:	jmp    0x140012908
   14003e01b:	lea    rcx,[rdx+0x58]
   14003e022:	jmp    0x140003078
   14003e027:	mov    rcx,QWORD PTR [rdx+0x90]
   14003e02e:	jmp    0x140003220
   14003e033:	mov    rcx,QWORD PTR [rdx+0x90]
   14003e03a:	add    rcx,0x20
   14003e03e:	jmp    0x140013980
   14003e043:	lea    rcx,[rdx+0xa0]
   14003e04a:	jmp    0x140006cdc
   14003e04f:	lea    rcx,[rdx+0xa0]
   14003e056:	jmp    0x140006ac0
   14003e05b:	lea    rcx,[rdx+0x98]
   14003e062:	jmp    0x140006cdc
   14003e067:	lea    rcx,[rdx+0x98]
   14003e06e:	jmp    0x140006ac0
   14003e073:	lea    rcx,[rdx+0xa8]
   14003e07a:	jmp    0x140006cdc
   14003e07f:	lea    rcx,[rdx+0xa8]
   14003e086:	jmp    0x140006ac0
   14003e08b:	lea    rcx,[rdx+0xa8]
   14003e092:	jmp    0x140006cdc
   14003e097:	lea    rcx,[rdx+0x98]
   14003e09e:	jmp    0x140006cdc
   14003e0a3:	lea    rcx,[rdx+0xa0]
   14003e0aa:	jmp    0x140006cdc
   14003e0af:	lea    rcx,[rdx+0xa8]
   14003e0b6:	jmp    0x140006cdc
   14003e0bb:	lea    rcx,[rdx+0x98]
   14003e0c2:	jmp    0x140006cdc
   14003e0c7:	lea    rcx,[rdx+0xa0]
   14003e0ce:	jmp    0x140006cdc
   14003e0d3:	lea    rcx,[rdx+0xa8]
   14003e0da:	jmp    0x140006cdc
   14003e0df:	lea    rcx,[rdx+0x98]
   14003e0e6:	jmp    0x140006cdc
   14003e0eb:	lea    rcx,[rdx+0xa0]
   14003e0f2:	jmp    0x140006cdc
   14003e0f7:	lea    rcx,[rdx+0x20]
   14003e0fe:	jmp    0x140006ac0
   14003e103:	lea    rcx,[rdx+0x20]
   14003e10a:	jmp    0x140006cdc
   14003e10f:	lea    rcx,[rdx+0x28]
   14003e116:	jmp    0x140006ac0
   14003e11b:	lea    rcx,[rdx+0x28]
   14003e122:	jmp    0x140006cdc
   14003e127:	lea    rcx,[rdx+0xa8]
   14003e12e:	jmp    0x140006cdc
   14003e133:	lea    rcx,[rdx+0x98]
   14003e13a:	jmp    0x140006cdc
   14003e13f:	lea    rcx,[rdx+0xa0]
   14003e146:	jmp    0x140006cdc
   14003e14b:	mov    QWORD PTR [rsp+0x10],rdx
   14003e150:	push   rbp
   14003e151:	sub    rsp,0x20
   14003e155:	mov    rbp,rdx
   14003e158:	lea    rax,[rip+0xfffffffffffd58c6]        # 0x140013a25
   14003e15f:	add    rsp,0x20
   14003e163:	pop    rbp
   14003e164:	ret    
   14003e165:	int3   
   14003e166:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e16d:	jmp    0x140006ac0
   14003e172:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e179:	add    rcx,0x8
   14003e17d:	jmp    0x140006ac0
   14003e182:	mov    rcx,QWORD PTR [rdx+0x48]
   14003e189:	jmp    0x140006cdc
   14003e18e:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e195:	jmp    0x140006cdc
   14003e19a:	lea    rcx,[rip+0x1c8cf]        # 0x14005aa70
   14003e1a1:	jmp    0x140003078
   14003e1a6:	lea    rcx,[rip+0x1c8c3]        # 0x14005aa70
   14003e1ad:	add    rcx,0x20
   14003e1b1:	jmp    0x140003078
   14003e1b6:	lea    rcx,[rip+0x1c8b3]        # 0x14005aa70
   14003e1bd:	add    rcx,0x40
   14003e1c1:	jmp    0x140003078
   14003e1c6:	mov    rcx,QWORD PTR [rdx+0x48]
   14003e1cd:	jmp    0x140013fd4
   14003e1d2:	mov    rcx,QWORD PTR [rdx+0x48]
   14003e1d9:	jmp    0x140006ac0
   14003e1de:	mov    rcx,QWORD PTR [rdx+0x48]
   14003e1e5:	add    rcx,0x8
   14003e1e9:	jmp    0x140006ac0
   14003e1ee:	mov    rcx,QWORD PTR [rdx+0x50]
   14003e1f5:	jmp    0x140006cdc
   14003e1fa:	mov    rcx,QWORD PTR [rdx+0x48]
   14003e201:	jmp    0x140006cdc
   14003e206:	lea    rcx,[rdx+0x98]
   14003e20d:	jmp    0x140006cdc
   14003e212:	lea    rcx,[rdx+0x98]
   14003e219:	jmp    0x140006ac0
   14003e21e:	lea    rcx,[rdx+0x20]
   14003e225:	jmp    0x140006cdc
   14003e22a:	lea    rcx,[rdx+0x20]
   14003e231:	jmp    0x140006ac0
   14003e236:	lea    rcx,[rdx+0x20]
   14003e23d:	jmp    0x140006cdc
   14003e242:	lea    rcx,[rdx+0x98]
   14003e249:	jmp    0x140006cdc
   14003e24e:	lea    rcx,[rdx+0x20]
   14003e255:	jmp    0x140006cdc
   14003e25a:	lea    rcx,[rdx+0x98]
   14003e261:	jmp    0x140006cdc
   14003e266:	lea    rcx,[rdx+0xa0]
   14003e26d:	jmp    0x140006cdc
   14003e272:	lea    rcx,[rdx+0xa0]
   14003e279:	jmp    0x140006ac0
   14003e27e:	lea    rcx,[rdx+0xa8]
   14003e285:	jmp    0x140006cdc
   14003e28a:	lea    rcx,[rdx+0xa8]
   14003e291:	jmp    0x140006ac0
   14003e296:	lea    rcx,[rdx+0xa8]
   14003e29d:	jmp    0x140006cdc
   14003e2a2:	lea    rcx,[rdx+0xa0]
   14003e2a9:	jmp    0x140006cdc
   14003e2ae:	lea    rcx,[rdx+0x28]
   14003e2b5:	jmp    0x140006cdc
   14003e2ba:	lea    rcx,[rdx+0x28]
   14003e2c1:	jmp    0x140006ac0
   14003e2c6:	lea    rcx,[rdx+0x28]
   14003e2cd:	jmp    0x140006cdc
   14003e2d2:	lea    rcx,[rdx+0xa8]
   14003e2d9:	jmp    0x140006cdc
   14003e2de:	lea    rcx,[rdx+0xa0]
   14003e2e5:	jmp    0x140006cdc
   14003e2ea:	lea    rcx,[rdx+0x50]
   14003e2f1:	jmp    0x140006cdc
   14003e2f6:	lea    rcx,[rdx+0x50]
   14003e2fd:	jmp    0x140006ac0
   14003e302:	lea    rcx,[rdx+0x58]
   14003e309:	jmp    0x140006cdc
   14003e30e:	lea    rcx,[rdx+0x58]
   14003e315:	jmp    0x140006ac0
   14003e31a:	lea    rcx,[rdx+0x58]
   14003e321:	jmp    0x140006cdc
   14003e326:	lea    rcx,[rdx+0x50]
   14003e32d:	jmp    0x140006cdc
   14003e332:	lea    rcx,[rdx+0x58]
   14003e339:	jmp    0x140006cdc
   14003e33e:	lea    rcx,[rdx+0x50]
   14003e345:	jmp    0x140006cdc
   14003e34a:	rex push rbp
   14003e34c:	sub    rsp,0x20
   14003e350:	mov    rbp,rdx
   14003e353:	mov    rdx,QWORD PTR [rbp+0x20]
   14003e357:	mov    rcx,QWORD PTR [rbp+0x30]
   14003e35b:	call   0x140001000
   14003e360:	add    rsp,0x20
   14003e364:	pop    rbp
   14003e365:	ret    
   14003e366:	mov    rcx,QWORD PTR [rdx+0x30]
   14003e36d:	jmp    0x140006ac0
   14003e372:	mov    rcx,QWORD PTR [rdx+0x38]
   14003e379:	jmp    0x140006cdc
   14003e37e:	mov    rcx,QWORD PTR [rdx+0x30]
   14003e385:	add    rcx,0x8
   14003e389:	jmp    0x140006ac0
   14003e38e:	mov    rcx,QWORD PTR [rdx+0x30]
   14003e395:	jmp    0x140013fd4
   14003e39a:	mov    QWORD PTR [rsp+0x10],rdx
   14003e39f:	push   rbp
   14003e3a0:	sub    rsp,0x20
   14003e3a4:	mov    rbp,rdx
   14003e3a7:	mov    rdx,QWORD PTR [rbp+0x60]
   14003e3ab:	mov    rax,QWORD PTR [rdx+0x40]
   14003e3af:	mov    rcx,QWORD PTR [rbp+0x20]
   14003e3b3:	mov    QWORD PTR [rcx+0x10],rax
   14003e3b7:	mov    QWORD PTR [rdx+0x40],rcx
   14003e3bb:	xor    edx,edx
   14003e3bd:	xor    ecx,ecx
   14003e3bf:	call   0x140029fe8
   14003e3c4:	nop
   14003e3c5:	lea    rcx,[rdx+0x58]
   14003e3cc:	jmp    0x140006ac0
   14003e3d1:	lea    rcx,[rdx+0x40]
   14003e3d8:	jmp    0x140006ac0
   14003e3dd:	lea    rcx,[rdx+0x40]
   14003e3e4:	jmp    0x140006cdc
   14003e3e9:	lea    rcx,[rdx+0x58]
   14003e3f0:	jmp    0x140006cdc
   14003e3f5:	mov    QWORD PTR [rsp+0x10],rdx
   14003e3fa:	push   rbp
   14003e3fb:	sub    rsp,0x30
   14003e3ff:	mov    rbp,rdx
   14003e402:	mov    rcx,QWORD PTR [rbp+0x88]
   14003e409:	test   rcx,rcx
   14003e40c:	jne    0x14003e419
   14003e40e:	mov    ecx,0x80004005
   14003e413:	call   0x14000400c
   14003e418:	int3   
   14003e419:	xor    edx,edx
   14003e41b:	mov    eax,DWORD PTR [rcx+0x18]
   14003e41e:	mov    r9,QWORD PTR [rbp+0x70]
   14003e422:	div    DWORD PTR [r9+0x10]
   14003e426:	mov    r10,QWORD PTR [r9]
   14003e429:	mov    r8,QWORD PTR [r10+rdx*8]
   14003e42d:	cmp    rcx,r8
   14003e430:	je     0x14003e453
   14003e432:	mov    rax,QWORD PTR [r8+0x10]
   14003e436:	jmp    0x14003e43f
   14003e438:	mov    r8,rax
   14003e43b:	mov    rax,QWORD PTR [rax+0x10]
   14003e43f:	cmp    rax,rcx
   14003e442:	jne    0x14003e438
   14003e444:	test   r8,r8
   14003e447:	je     0x14003e453
   14003e449:	mov    rax,QWORD PTR [rcx+0x10]
   14003e44d:	mov    QWORD PTR [r8+0x10],rax
   14003e451:	jmp    0x14003e45b
   14003e453:	mov    rax,QWORD PTR [rcx+0x10]
   14003e457:	mov    QWORD PTR [r10+rdx*8],rax
   14003e45b:	mov    rdx,rcx
   14003e45e:	mov    rcx,r9
   14003e461:	call   0x140013e88
   14003e466:	xor    edx,edx
   14003e468:	xor    ecx,ecx
   14003e46a:	call   0x140029fe8
   14003e46f:	nop
   14003e470:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e477:	add    rcx,0x8
   14003e47b:	jmp    0x140006ac0
   14003e480:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e487:	jmp    0x140006cdc
   14003e48c:	lea    rcx,[rdx+0x98]
   14003e493:	jmp    0x140006ac0
   14003e498:	lea    rcx,[rdx+0x90]
   14003e49f:	jmp    0x140006ac0
   14003e4a4:	lea    rcx,[rdx+0x88]
   14003e4ab:	jmp    0x140006ac0
   14003e4b0:	lea    rcx,[rdx+0x88]
   14003e4b7:	jmp    0x140006cdc
   14003e4bc:	lea    rcx,[rdx+0x90]
   14003e4c3:	jmp    0x140006cdc
   14003e4c8:	lea    rcx,[rdx+0x98]
   14003e4cf:	jmp    0x140006cdc
   14003e4d4:	lea    rcx,[rdx+0x48]
   14003e4db:	jmp    0x140014f4c
   14003e4e0:	lea    rcx,[rdx+0x50]
   14003e4e7:	jmp    0x140014f44
   14003e4ec:	lea    rcx,[rdx+0x58]
   14003e4f3:	jmp    0x140014f44
   14003e4f8:	lea    rcx,[rdx+0xc8]
   14003e4ff:	jmp    0x140006ac0
   14003e504:	lea    rcx,[rdx+0xc8]
   14003e50b:	jmp    0x140006cdc
   14003e510:	lea    rcx,[rdx+0xc8]
   14003e517:	jmp    0x140006cdc
   14003e51c:	mov    rcx,QWORD PTR [rdx+0x20]
   14003e523:	jmp    0x140012ecc
   14003e528:	mov    rcx,QWORD PTR [rdx+0x20]
   14003e52f:	add    rcx,0x8
   14003e533:	jmp    0x14000fda8
   14003e538:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e53f:	jmp    0x140012ecc
   14003e544:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e54b:	add    rcx,0x8
   14003e54f:	jmp    0x14000fda8
   14003e554:	lea    rcx,[rdx+0x20]
   14003e55b:	add    rcx,0x8
   14003e55f:	jmp    0x140003220
   14003e564:	lea    rcx,[rdx+0x20]
   14003e56b:	add    rcx,0x20
   14003e56f:	jmp    0x140006a48
   14003e574:	mov    QWORD PTR [rsp+0x10],rdx
   14003e579:	push   rbp
   14003e57a:	sub    rsp,0x20
   14003e57e:	mov    rbp,rdx
   14003e581:	lea    rax,[rip+0xfffffffffffd7150]        # 0x1400156d8
   14003e588:	add    rsp,0x20
   14003e58c:	pop    rbp
   14003e58d:	ret    
   14003e58e:	int3   
   14003e58f:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e596:	jmp    0x140015e08
   14003e59b:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e5a2:	add    rcx,0x10
   14003e5a6:	jmp    0x140016f80
   14003e5ab:	lea    rcx,[rip+0x1c51e]        # 0x14005aad0
   14003e5b2:	jmp    0x140015e08
   14003e5b7:	lea    rcx,[rip+0x1c512]        # 0x14005aad0
   14003e5be:	add    rcx,0x10
   14003e5c2:	jmp    0x140016f80
   14003e5c7:	rex push rbp
   14003e5c9:	sub    rsp,0x20
   14003e5cd:	mov    rbp,rdx
   14003e5d0:	mov    rdx,QWORD PTR [rbp+0x50]
   14003e5d4:	movsxd rax,DWORD PTR [rbp+0x68]
   14003e5d8:	imul   rax,rax,0x8
   14003e5dc:	mov    rdx,QWORD PTR [rdx]
   14003e5df:	add    rdx,rax
   14003e5e2:	mov    rcx,QWORD PTR [rbp+0x28]
   14003e5e6:	call   0x140001000
   14003e5eb:	add    rsp,0x20
   14003e5ef:	pop    rbp
   14003e5f0:	ret    
   14003e5f1:	mov    rcx,QWORD PTR [rdx+0x28]
   14003e5f8:	jmp    0x140006ac0
   14003e5fd:	rex push rbp
   14003e5ff:	sub    rsp,0x20
   14003e603:	mov    rbp,rdx
   14003e606:	mov    rdx,QWORD PTR [rbp+0x50]
   14003e60a:	add    rdx,0x8
   14003e60e:	movsxd rax,DWORD PTR [rbp+0x68]
   14003e612:	imul   rax,rax,0x48
   14003e616:	mov    rdx,QWORD PTR [rdx]
   14003e619:	add    rdx,rax
   14003e61c:	mov    rcx,QWORD PTR [rbp+0x28]
   14003e620:	call   0x140001000
   14003e625:	add    rsp,0x20
   14003e629:	pop    rbp
   14003e62a:	ret    
   14003e62b:	lea    rcx,[rdx+0x68]
   14003e632:	jmp    0x140006ac0
   14003e637:	lea    rcx,[rdx+0x68]
   14003e63e:	jmp    0x140006cdc
   14003e643:	mov    QWORD PTR [rsp+0x10],rdx
   14003e648:	push   rbp
   14003e649:	sub    rsp,0x20
   14003e64d:	mov    rbp,rdx
   14003e650:	lea    rax,[rip+0xfffffffffffd7b6f]        # 0x1400161c6
   14003e657:	add    rsp,0x20
   14003e65b:	pop    rbp
   14003e65c:	ret    
   14003e65d:	int3   
   14003e65e:	lea    rcx,[rdx+0x40]
   14003e665:	jmp    0x140006ac0
   14003e66a:	lea    rcx,[rdx+0x40]
   14003e671:	jmp    0x140006cdc
   14003e676:	lea    rcx,[rdx+0x20]
   14003e67d:	jmp    0x140006ac0
   14003e682:	lea    rcx,[rdx+0x30]
   14003e689:	jmp    0x140006cdc
   14003e68e:	lea    rcx,[rdx+0x30]
   14003e695:	jmp    0x140006ac0
   14003e69a:	lea    rcx,[rdx+0xa0]
   14003e6a1:	jmp    0x140006ac0
   14003e6a6:	lea    rcx,[rdx+0xa0]
   14003e6ad:	jmp    0x140006cdc
   14003e6b2:	lea    rcx,[rdx+0x50]
   14003e6b9:	jmp    0x140006ac0
   14003e6be:	lea    rcx,[rdx+0xf0]
   14003e6c5:	jmp    0x140006ac0
   14003e6ca:	lea    rcx,[rdx+0x90]
   14003e6d1:	jmp    0x140006ac0
   14003e6d6:	lea    rcx,[rdx+0xd0]
   14003e6dd:	jmp    0x140006ac0
   14003e6e2:	lea    rcx,[rdx+0x80]
   14003e6e9:	jmp    0x140006ac0
   14003e6ee:	lea    rcx,[rdx+0xe0]
   14003e6f5:	jmp    0x140006ac0
   14003e6fa:	lea    rcx,[rdx+0x28]
   14003e701:	jmp    0x140006ac0
   14003e706:	lea    rcx,[rdx+0xe0]
   14003e70d:	jmp    0x140006cdc
   14003e712:	lea    rcx,[rdx+0x80]
   14003e719:	jmp    0x140006cdc
   14003e71e:	lea    rcx,[rdx+0xd0]
   14003e725:	jmp    0x140006cdc
   14003e72a:	lea    rcx,[rdx+0x90]
   14003e731:	jmp    0x140006cdc
   14003e736:	lea    rcx,[rdx+0xf0]
   14003e73d:	jmp    0x140006cdc
   14003e742:	lea    rcx,[rdx+0x50]
   14003e749:	jmp    0x140006cdc
   14003e74e:	lea    rcx,[rdx+0x60]
   14003e755:	jmp    0x140006ac0
   14003e75a:	lea    rcx,[rdx+0x60]
   14003e761:	jmp    0x140006cdc
   14003e766:	lea    rcx,[rdx+0x40]
   14003e76d:	jmp    0x140006ac0
   14003e772:	lea    rcx,[rdx+0xc0]
   14003e779:	jmp    0x140006ac0
   14003e77e:	lea    rcx,[rdx+0xd8]
   14003e785:	jmp    0x140006ac0
   14003e78a:	lea    rcx,[rdx+0xb0]
   14003e791:	jmp    0x140006ac0
   14003e796:	lea    rcx,[rdx+0xe8]
   14003e79d:	jmp    0x140006ac0
   14003e7a2:	lea    rcx,[rdx+0xe8]
   14003e7a9:	jmp    0x140006cdc
   14003e7ae:	lea    rcx,[rdx+0xb0]
   14003e7b5:	jmp    0x140006cdc
   14003e7ba:	lea    rcx,[rdx+0xd8]
   14003e7c1:	jmp    0x140006cdc
   14003e7c6:	lea    rcx,[rdx+0xc0]
   14003e7cd:	jmp    0x140006cdc
   14003e7d2:	lea    rcx,[rdx+0x40]
   14003e7d9:	jmp    0x140006cdc
   14003e7de:	lea    rcx,[rdx+0x68]
   14003e7e5:	jmp    0x140006ac0
   14003e7ea:	lea    rcx,[rdx+0x68]
   14003e7f1:	jmp    0x140006cdc
   14003e7f6:	lea    rcx,[rdx+0x48]
   14003e7fd:	jmp    0x140006ac0
   14003e802:	lea    rcx,[rdx+0x88]
   14003e809:	jmp    0x140006ac0
   14003e80e:	lea    rcx,[rdx+0x78]
   14003e815:	jmp    0x140006ac0
   14003e81a:	lea    rcx,[rdx+0x78]
   14003e821:	jmp    0x140006cdc
   14003e826:	lea    rcx,[rdx+0x88]
   14003e82d:	jmp    0x140006cdc
   14003e832:	lea    rcx,[rdx+0x48]
   14003e839:	jmp    0x140006cdc
   14003e83e:	lea    rcx,[rdx+0x58]
   14003e845:	jmp    0x140006ac0
   14003e84a:	lea    rcx,[rdx+0xa8]
   14003e851:	jmp    0x140006ac0
   14003e856:	lea    rcx,[rdx+0x98]
   14003e85d:	jmp    0x140006ac0
   14003e862:	lea    rcx,[rdx+0x98]
   14003e869:	jmp    0x140006cdc
   14003e86e:	lea    rcx,[rdx+0xa8]
   14003e875:	jmp    0x140006cdc
   14003e87a:	lea    rcx,[rdx+0x58]
   14003e881:	jmp    0x140006cdc
   14003e886:	lea    rcx,[rdx+0xb8]
   14003e88d:	jmp    0x140006ac0
   14003e892:	lea    rcx,[rdx+0xb8]
   14003e899:	jmp    0x140006cdc
   14003e89e:	lea    rcx,[rdx+0x28]
   14003e8a5:	jmp    0x140006cdc
   14003e8aa:	lea    rcx,[rdx+0x30]
   14003e8b1:	jmp    0x140006cdc
   14003e8b6:	lea    rcx,[rdx+0x20]
   14003e8bd:	jmp    0x140006cdc
   14003e8c2:	mov    QWORD PTR [rsp+0x10],rdx
   14003e8c7:	push   rbp
   14003e8c8:	sub    rsp,0x20
   14003e8cc:	mov    rbp,rdx
   14003e8cf:	and    DWORD PTR [rip+0x1c222],0x0        # 0x14005aaf8
   14003e8d6:	lea    rax,[rip+0xfffffffffffd7611]        # 0x140015eee
   14003e8dd:	add    rsp,0x20
   14003e8e1:	pop    rbp
   14003e8e2:	ret    
   14003e8e3:	int3   
   14003e8e4:	lea    rcx,[rdx+0x88]
   14003e8eb:	jmp    0x140006cdc
   14003e8f0:	lea    rcx,[rdx+0x88]
   14003e8f7:	jmp    0x140006ac0
   14003e8fc:	lea    rcx,[rdx+0x78]
   14003e903:	jmp    0x140006cdc
   14003e908:	lea    rcx,[rdx+0x78]
   14003e90f:	jmp    0x140006ac0
   14003e914:	mov    rcx,QWORD PTR [rdx+0x38]
   14003e91b:	jmp    0x14002657c
   14003e920:	mov    rcx,QWORD PTR [rdx+0x38]
   14003e927:	jmp    0x14002657c
   14003e92c:	mov    rcx,QWORD PTR [rdx+0x38]
   14003e933:	add    rcx,0x10
   14003e937:	jmp    0x140006ac0
   14003e93c:	lea    rcx,[rdx+0x78]
   14003e943:	jmp    0x140006cdc
   14003e948:	lea    rcx,[rdx+0x88]
   14003e94f:	jmp    0x140006cdc
   14003e954:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e95b:	add    rcx,0x10
   14003e95f:	jmp    0x140006ac0
   14003e964:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e96b:	jmp    0x140006cdc
   14003e970:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e977:	jmp    0x140017d78
   14003e97c:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e983:	add    rcx,0x60
   14003e987:	jmp    0x140006ac0
   14003e98c:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e993:	jmp    0x140017d78
   14003e998:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e99f:	add    rcx,0x60
   14003e9a3:	jmp    0x140006ac0
   14003e9a8:	mov    rcx,QWORD PTR [rdx+0x48]
   14003e9af:	jmp    0x140006cdc
   14003e9b4:	lea    rcx,[rdx+0xf8]
   14003e9bb:	jmp    0x140006ac0
   14003e9c0:	lea    rcx,[rdx+0xf8]
   14003e9c7:	jmp    0x140006cdc
   14003e9cc:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e9d3:	jmp    0x140006ac0
   14003e9d8:	mov    rcx,QWORD PTR [rdx+0x40]
   14003e9df:	jmp    0x140006cdc
   14003e9e4:	lea    rcx,[rdx+0x78]
   14003e9eb:	jmp    0x140006cdc
   14003e9f0:	lea    rcx,[rdx+0x78]
   14003e9f7:	jmp    0x140006ac0
   14003e9fc:	lea    rcx,[rdx+0x20]
   14003ea03:	jmp    0x140006ac0
   14003ea08:	lea    rcx,[rdx+0x20]
   14003ea0f:	jmp    0x140006cdc
   14003ea14:	lea    rcx,[rdx+0x28]
   14003ea1b:	jmp    0x140006ac0
   14003ea20:	lea    rcx,[rdx+0x28]
   14003ea27:	jmp    0x140006cdc
   14003ea2c:	lea    rcx,[rdx+0x78]
   14003ea33:	jmp    0x140006cdc
   14003ea38:	lea    rcx,[rdx+0x20]
   14003ea3f:	jmp    0x140006cdc
   14003ea44:	lea    rcx,[rdx+0x20]
   14003ea4b:	jmp    0x140006ac0
   14003ea50:	lea    rcx,[rdx+0x38]
   14003ea57:	jmp    0x140006ac0
   14003ea5c:	lea    rcx,[rdx+0x38]
   14003ea63:	jmp    0x140006cdc
   14003ea68:	lea    rcx,[rdx+0xa8]
   14003ea6f:	jmp    0x140006ac0
   14003ea74:	lea    rcx,[rdx+0xa8]
   14003ea7b:	jmp    0x140006cdc
   14003ea80:	lea    rcx,[rdx+0xa0]
   14003ea87:	jmp    0x140006ac0
   14003ea8c:	lea    rcx,[rdx+0xa0]
   14003ea93:	jmp    0x140006cdc
   14003ea98:	lea    rcx,[rdx+0xa8]
   14003ea9f:	jmp    0x140006cdc
   14003eaa4:	lea    rcx,[rdx+0xa0]
   14003eaab:	jmp    0x140006cdc
   14003eab0:	lea    rcx,[rdx+0xa8]
   14003eab7:	jmp    0x140006cdc
   14003eabc:	lea    rcx,[rdx+0xa0]
   14003eac3:	jmp    0x140006cdc
   14003eac8:	lea    rcx,[rdx+0xa8]
   14003eacf:	jmp    0x140006cdc
   14003ead4:	lea    rcx,[rdx+0x30]
   14003eadb:	jmp    0x140006ac0
   14003eae0:	lea    rcx,[rdx+0x30]
   14003eae7:	jmp    0x140006cdc
   14003eaec:	lea    rcx,[rdx+0x30]
   14003eaf3:	jmp    0x140006cdc
   14003eaf8:	lea    rcx,[rdx+0x20]
   14003eaff:	jmp    0x140006cdc
   14003eb04:	rex push rbp
   14003eb06:	sub    rsp,0x20
   14003eb0a:	mov    rbp,rdx
   14003eb0d:	mov    rdx,QWORD PTR [rbp+0x50]
   14003eb11:	movsxd rax,DWORD PTR [rbp+0x60]
   14003eb15:	imul   rax,rax,0x18
   14003eb19:	mov    rdx,QWORD PTR [rdx]
   14003eb1c:	add    rdx,rax
   14003eb1f:	mov    rcx,QWORD PTR [rbp+0x68]
   14003eb23:	call   0x140001000
   14003eb28:	add    rsp,0x20
   14003eb2c:	pop    rbp
   14003eb2d:	ret    
   14003eb2e:	mov    rcx,QWORD PTR [rdx+0x28]
   14003eb35:	jmp    0x140006ac0
   14003eb3a:	mov    rcx,QWORD PTR [rdx+0x68]
   14003eb41:	jmp    0x140018654
   14003eb46:	lea    rcx,[rdx+0x28]
   14003eb4d:	jmp    0x140006ac0
   14003eb52:	lea    rcx,[rdx+0x28]
   14003eb59:	jmp    0x140018654
   14003eb5e:	lea    rcx,[rdx+0x28]
   14003eb65:	jmp    0x140006ac0
   14003eb6a:	mov    rcx,QWORD PTR [rdx+0x80]
   14003eb71:	jmp    0x140006cdc
   14003eb76:	lea    rcx,[rdx+0x28]
   14003eb7d:	jmp    0x140006ac0
   14003eb82:	mov    rcx,QWORD PTR [rdx+0x80]
   14003eb89:	jmp    0x140006cdc
   14003eb8e:	mov    rcx,QWORD PTR [rdx+0x80]
   14003eb95:	jmp    0x14002657c
   14003eb9a:	lea    rcx,[rdx+0xa0]
   14003eba1:	jmp    0x140006ac0
   14003eba6:	lea    rcx,[rdx+0xa0]
   14003ebad:	jmp    0x140018654
   14003ebb2:	lea    rcx,[rdx+0xa0]
   14003ebb9:	jmp    0x140006ac0
   14003ebbe:	mov    rcx,QWORD PTR [rdx+0x80]
   14003ebc5:	jmp    0x140006cdc
   14003ebca:	lea    rcx,[rdx+0x88]
   14003ebd1:	jmp    0x140006ac0
   14003ebd6:	lea    rcx,[rdx+0x88]
   14003ebdd:	jmp    0x140018654
   14003ebe2:	lea    rcx,[rdx+0x88]
   14003ebe9:	jmp    0x140006ac0
   14003ebee:	mov    rcx,QWORD PTR [rdx+0x80]
   14003ebf5:	jmp    0x140006cdc
   14003ebfa:	lea    rcx,[rdx+0x70]
   14003ec01:	jmp    0x140012ecc
   14003ec06:	lea    rcx,[rdx+0x70]
   14003ec0d:	add    rcx,0x8
   14003ec11:	jmp    0x14000fda8
   14003ec16:	lea    rcx,[rdx+0x70]
   14003ec1d:	jmp    0x140014ffc
   14003ec22:	mov    QWORD PTR [rsp+0x10],rdx
   14003ec27:	push   rbp
   14003ec28:	sub    rsp,0x50
   14003ec2c:	mov    rbp,rdx
   14003ec2f:	mov    rax,QWORD PTR [rbp+0x68]
   14003ec33:	mov    ecx,DWORD PTR [rax+0x4]
   14003ec36:	mov    DWORD PTR [rbp+0x50],ecx
   14003ec39:	mov    eax,0xe1230572
   14003ec3e:	cmp    ecx,0xe1232742
   14003ec44:	cmove  ecx,eax
   14003ec47:	mov    DWORD PTR [rbp+0x50],ecx
   14003ec4a:	lea    rax,[rip+0xfffffffffffda364]        # 0x140018fb5
   14003ec51:	add    rsp,0x50
   14003ec55:	pop    rbp
   14003ec56:	ret    
   14003ec57:	int3   
   14003ec58:	lea    rcx,[rdx+0x28]
   14003ec5f:	jmp    0x14000fda8
   14003ec64:	lea    rcx,[rdx+0x28]
   14003ec6b:	jmp    0x140015774
   14003ec70:	lea    rcx,[rdx+0x38]
   14003ec77:	jmp    0x14000fda8
   14003ec7c:	lea    rcx,[rdx+0x38]
   14003ec83:	jmp    0x140015774
   14003ec88:	lea    rcx,[rdx+0x50]
   14003ec8f:	jmp    0x14000fda8
   14003ec94:	lea    rcx,[rdx+0x50]
   14003ec9b:	jmp    0x140015774
   14003eca0:	mov    rcx,QWORD PTR [rdx+0x68]
   14003eca7:	jmp    0x14002657c
   14003ecac:	lea    rcx,[rdx+0x70]
   14003ecb3:	jmp    0x140003078
   14003ecb8:	mov    rcx,QWORD PTR [rdx+0x30]
   14003ecbf:	jmp    0x140012ecc
   14003ecc4:	mov    rcx,QWORD PTR [rdx+0x30]
   14003eccb:	add    rcx,0x8
   14003eccf:	jmp    0x14000fda8
   14003ecd4:	mov    rcx,QWORD PTR [rdx+0x20]
   14003ecdb:	add    rcx,0x10
   14003ecdf:	jmp    0x140014ffc
   14003ece4:	mov    rcx,QWORD PTR [rdx+0x38]
   14003eceb:	jmp    0x140012ecc
   14003ecf0:	mov    rcx,QWORD PTR [rdx+0x38]
   14003ecf7:	add    rcx,0x8
   14003ecfb:	jmp    0x14000fda8
   14003ed00:	mov    rcx,QWORD PTR [rdx+0x30]
   14003ed07:	add    rcx,0x10
   14003ed0b:	jmp    0x140014ffc
   14003ed10:	mov    rcx,QWORD PTR [rdx+0x20]
   14003ed17:	add    rcx,0x150
   14003ed1e:	jmp    0x14001b8ac
   14003ed23:	mov    rcx,QWORD PTR [rdx+0x30]
   14003ed2a:	jmp    0x14000fda8
   14003ed2f:	mov    rcx,QWORD PTR [rdx+0x20]
   14003ed36:	add    rcx,0x2b0
   14003ed3d:	jmp    0x140015774
   14003ed42:	mov    rcx,QWORD PTR [rdx+0x30]
   14003ed49:	jmp    0x14000fda8
   14003ed4e:	mov    rcx,QWORD PTR [rdx+0x20]
   14003ed55:	add    rcx,0x2c8
   14003ed5c:	jmp    0x140015774
   14003ed61:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ed68:	add    rcx,0x10
   14003ed6c:	jmp    0x140014ffc
   14003ed71:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ed78:	add    rcx,0x150
   14003ed7f:	jmp    0x14001b8ac
   14003ed84:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ed8b:	add    rcx,0x2b0
   14003ed92:	jmp    0x140015774
   14003ed97:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ed9e:	add    rcx,0x2c8
   14003eda5:	jmp    0x140015774
   14003edaa:	mov    rcx,QWORD PTR [rdx+0x48]
   14003edb1:	add    rcx,0x10
   14003edb5:	jmp    0x140014ffc
   14003edba:	rex push rbp
   14003edbc:	sub    rsp,0x20
   14003edc0:	mov    rbp,rdx
   14003edc3:	mov    rdx,QWORD PTR [rbp+0x80]
   14003edca:	mov    rcx,QWORD PTR [rbp+0x88]
   14003edd1:	call   0x140001000
   14003edd6:	add    rsp,0x20
   14003edda:	pop    rbp
   14003eddb:	ret    
   14003eddc:	mov    rcx,QWORD PTR [rdx+0x20]
   14003ede3:	jmp    0x14000fda8
   14003ede8:	mov    rcx,QWORD PTR [rdx+0x30]
   14003edef:	add    rcx,0x8
   14003edf3:	jmp    0x14002582c
   14003edf8:	mov    rcx,QWORD PTR [rdx+0x30]
   14003edff:	jmp    0x140012ecc
   14003ee04:	mov    rcx,QWORD PTR [rdx+0x30]
   14003ee0b:	add    rcx,0x8
   14003ee0f:	jmp    0x14000fda8
   14003ee14:	mov    rcx,QWORD PTR [rdx+0x20]
   14003ee1b:	add    rcx,0x18
   14003ee1f:	jmp    0x140014ffc
   14003ee24:	mov    rcx,QWORD PTR [rdx+0x30]
   14003ee2b:	jmp    0x140012ecc
   14003ee30:	mov    rcx,QWORD PTR [rdx+0x30]
   14003ee37:	add    rcx,0x8
   14003ee3b:	jmp    0x14000fda8
   14003ee40:	mov    rcx,QWORD PTR [rdx+0x20]
   14003ee47:	add    rcx,0x158
   14003ee4e:	jmp    0x140014ffc
   14003ee53:	mov    rcx,QWORD PTR [rdx+0x30]
   14003ee5a:	jmp    0x140011388
   14003ee5f:	mov    rcx,QWORD PTR [rdx+0x30]
   14003ee66:	add    rcx,0x20
   14003ee6a:	jmp    0x14001b938
   14003ee6f:	mov    rcx,QWORD PTR [rdx+0x20]
   14003ee76:	add    rcx,0x2a0
   14003ee7d:	jmp    0x14001b9d8
   14003ee82:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ee89:	add    rcx,0x18
   14003ee8d:	jmp    0x140014ffc
   14003ee92:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ee99:	add    rcx,0x158
   14003eea0:	jmp    0x140014ffc
   14003eea5:	mov    rcx,QWORD PTR [rdx+0x40]
   14003eeac:	add    rcx,0x2a0
   14003eeb3:	jmp    0x14001b9d8
   14003eeb8:	mov    rcx,QWORD PTR [rdx+0x48]
   14003eebf:	add    rcx,0x8
   14003eec3:	jmp    0x14002582c
   14003eec8:	mov    rcx,QWORD PTR [rdx+0x30]
   14003eecf:	jmp    0x140012ecc
   14003eed4:	mov    rcx,QWORD PTR [rdx+0x30]
   14003eedb:	add    rcx,0x8
   14003eedf:	jmp    0x14000fda8
   14003eee4:	mov    rcx,QWORD PTR [rdx+0x20]
   14003eeeb:	add    rcx,0x10
   14003eeef:	jmp    0x140014ffc
   14003eef4:	mov    rcx,QWORD PTR [rdx+0x40]
   14003eefb:	add    rcx,0x10
   14003eeff:	jmp    0x140014ffc
   14003ef04:	mov    rcx,QWORD PTR [rdx+0x48]
   14003ef0b:	add    rcx,0x8
   14003ef0f:	jmp    0x14002582c
   14003ef14:	mov    rcx,QWORD PTR [rdx+0x70]
   14003ef1b:	jmp    0x14002657c
   14003ef20:	mov    rcx,QWORD PTR [rdx+0x80]
   14003ef27:	jmp    0x140012ecc
   14003ef2c:	mov    rcx,QWORD PTR [rdx+0x80]
   14003ef33:	add    rcx,0x8
   14003ef37:	jmp    0x14000fda8
   14003ef3c:	mov    rcx,QWORD PTR [rdx+0x78]
   14003ef43:	add    rcx,0x10
   14003ef47:	jmp    0x140014ffc
   14003ef4c:	mov    rcx,QWORD PTR [rdx+0x80]
   14003ef53:	jmp    0x140012ecc
   14003ef58:	mov    rcx,QWORD PTR [rdx+0x80]
   14003ef5f:	add    rcx,0x8
   14003ef63:	jmp    0x14000fda8
   14003ef68:	mov    rcx,QWORD PTR [rdx+0x78]
   14003ef6f:	add    rcx,0x150
   14003ef76:	jmp    0x140014ffc
   14003ef7b:	mov    rcx,QWORD PTR [rdx+0x80]
   14003ef82:	jmp    0x14000fda8
   14003ef87:	mov    rcx,QWORD PTR [rdx+0x78]
   14003ef8e:	add    rcx,0x290
   14003ef95:	jmp    0x140015774
   14003ef9a:	mov    rcx,QWORD PTR [rdx+0x80]
   14003efa1:	jmp    0x14000fda8
   14003efa6:	mov    rcx,QWORD PTR [rdx+0x78]
   14003efad:	add    rcx,0x2a8
   14003efb4:	jmp    0x140015774
   14003efb9:	mov    rcx,QWORD PTR [rdx+0x80]
   14003efc0:	jmp    0x14000fda8
   14003efc5:	mov    rcx,QWORD PTR [rdx+0x78]
   14003efcc:	add    rcx,0x2c0
   14003efd3:	jmp    0x14002582c
   14003efd8:	mov    rcx,QWORD PTR [rdx+0x80]
   14003efdf:	jmp    0x14000fda8
   14003efe4:	mov    rcx,QWORD PTR [rdx+0x78]
   14003efeb:	add    rcx,0x2d0
   14003eff2:	jmp    0x14002582c
   14003eff7:	mov    rcx,QWORD PTR [rdx+0x70]
   14003effe:	add    rcx,0x90
   14003f005:	jmp    0x14001be9c
   14003f00a:	mov    rcx,QWORD PTR [rdx+0x80]
   14003f011:	jmp    0x140012ecc
   14003f016:	mov    rcx,QWORD PTR [rdx+0x80]
   14003f01d:	add    rcx,0x8
   14003f021:	jmp    0x14000fda8
   14003f026:	mov    rcx,QWORD PTR [rdx+0x78]
   14003f02d:	add    rcx,0x20
   14003f031:	jmp    0x140014ffc
   14003f036:	mov    rcx,QWORD PTR [rdx+0x80]
   14003f03d:	jmp    0x14000fda8
   14003f042:	mov    rcx,QWORD PTR [rdx+0x78]
   14003f049:	add    rcx,0x170
   14003f050:	jmp    0x140025a54
   14003f055:	mov    rcx,QWORD PTR [rdx+0x88]
   14003f05c:	jmp    0x140012ecc
   14003f061:	mov    rcx,QWORD PTR [rdx+0x88]
   14003f068:	add    rcx,0x8
   14003f06c:	jmp    0x14000fda8
   14003f071:	mov    rcx,QWORD PTR [rdx+0x80]
   14003f078:	add    rcx,0x10
   14003f07c:	jmp    0x140014ffc
   14003f081:	mov    rcx,QWORD PTR [rdx+0x28]
   14003f088:	jmp    0x140012ecc
   14003f08d:	mov    rcx,QWORD PTR [rdx+0x28]
   14003f094:	add    rcx,0x8
   14003f098:	jmp    0x14000fda8
   14003f09d:	mov    rcx,QWORD PTR [rdx+0x88]
   14003f0a4:	add    rcx,0x10
   14003f0a8:	jmp    0x140014ffc
   14003f0ad:	mov    rcx,QWORD PTR [rdx+0x80]
   14003f0b4:	add    rcx,0x150
   14003f0bb:	jmp    0x14001ce40
   14003f0c0:	mov    rcx,QWORD PTR [rdx+0x78]
   14003f0c7:	add    rcx,0x180
   14003f0ce:	jmp    0x14001cbc0
   14003f0d3:	mov    rcx,QWORD PTR [rdx+0x70]
   14003f0da:	add    rcx,0x380
   14003f0e1:	jmp    0x14001c91c
   14003f0e6:	mov    rcx,QWORD PTR [rdx+0x78]
   14003f0ed:	jmp    0x14001a634
   14003f0f2:	mov    rcx,QWORD PTR [rdx+0x70]
   14003f0f9:	add    rcx,0x7a8
   14003f100:	jmp    0x14001c5b4
   14003f105:	mov    rcx,QWORD PTR [rdx+0x70]
   14003f10c:	add    rcx,0x930
   14003f113:	jmp    0x14001a144
   14003f118:	mov    rcx,QWORD PTR [rdx+0x70]
   14003f11f:	add    rcx,0xc10
   14003f126:	jmp    0x14001995c
   14003f12b:	mov    rcx,QWORD PTR [rdx+0x80]
   14003f132:	jmp    0x140012ecc
   14003f137:	mov    rcx,QWORD PTR [rdx+0x80]
   14003f13e:	add    rcx,0x8
   14003f142:	jmp    0x14000fda8
   14003f147:	mov    rcx,QWORD PTR [rdx+0x78]
   14003f14e:	add    rcx,0x10
   14003f152:	jmp    0x140014ffc
   14003f157:	mov    rcx,QWORD PTR [rdx+0x70]
   14003f15e:	add    rcx,0xf08
   14003f165:	jmp    0x140019714
   14003f16a:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f171:	add    rcx,0x90
   14003f178:	jmp    0x14001be9c
   14003f17d:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f184:	add    rcx,0x380
   14003f18b:	jmp    0x14001c91c
   14003f190:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f197:	add    rcx,0x7a8
   14003f19e:	jmp    0x14001c5b4
   14003f1a3:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f1aa:	add    rcx,0x930
   14003f1b1:	jmp    0x14001a144
   14003f1b6:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f1bd:	add    rcx,0xc10
   14003f1c4:	jmp    0x14001995c
   14003f1c9:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f1d0:	add    rcx,0xf08
   14003f1d7:	jmp    0x140019714
   14003f1dc:	mov    rcx,QWORD PTR [rdx+0x48]
   14003f1e3:	jmp    0x14001a634
   14003f1e8:	mov    QWORD PTR [rsp+0x10],rdx
   14003f1ed:	push   rbp
   14003f1ee:	sub    rsp,0x30
   14003f1f2:	mov    rbp,rdx
   14003f1f5:	lea    rax,[rip+0xfffffffffffdc5e9]        # 0x14001b7e5
   14003f1fc:	add    rsp,0x30
   14003f200:	pop    rbp
   14003f201:	ret    
   14003f202:	int3   
   14003f203:	lea    rcx,[rdx+0x50]
   14003f20a:	jmp    0x14000fda8
   14003f20f:	lea    rcx,[rdx+0x50]
   14003f216:	jmp    0x140015774
   14003f21b:	mov    QWORD PTR [rsp+0x10],rdx
   14003f220:	push   rbp
   14003f221:	sub    rsp,0x40
   14003f225:	mov    rbp,rdx
   14003f228:	lea    rax,[rip+0xfffffffffffdbd71]        # 0x14001afa0
   14003f22f:	add    rsp,0x40
   14003f233:	pop    rbp
   14003f234:	ret    
   14003f235:	int3   
   14003f236:	lea    rcx,[rdx+0x48]
   14003f23d:	jmp    0x140006cdc
   14003f242:	lea    rcx,[rdx+0x48]
   14003f249:	jmp    0x140006ac0
   14003f24e:	lea    rcx,[rdx+0x70]
   14003f255:	jmp    0x140006cdc
   14003f25a:	lea    rcx,[rdx+0x70]
   14003f261:	jmp    0x140006ac0
   14003f266:	lea    rcx,[rdx+0x70]
   14003f26d:	jmp    0x140006cdc
   14003f272:	lea    rcx,[rdx+0x48]
   14003f279:	jmp    0x140006cdc
   14003f27e:	mov    QWORD PTR [rsp+0x10],rdx
   14003f283:	push   rbp
   14003f284:	sub    rsp,0x40
   14003f288:	mov    rbp,rdx
   14003f28b:	lea    rax,[rip+0xfffffffffffdbd05]        # 0x14001af97
   14003f292:	add    rsp,0x40
   14003f296:	pop    rbp
   14003f297:	ret    
   14003f298:	int3   
   14003f299:	mov    QWORD PTR [rsp+0x10],rdx
   14003f29e:	push   rbp
   14003f29f:	sub    rsp,0x40
   14003f2a3:	mov    rbp,rdx
   14003f2a6:	lea    rax,[rip+0xfffffffffffdc215]        # 0x14001b4c2
   14003f2ad:	add    rsp,0x40
   14003f2b1:	pop    rbp
   14003f2b2:	ret    
   14003f2b3:	int3   
   14003f2b4:	lea    rcx,[rdx+0x50]
   14003f2bb:	jmp    0x140006cdc
   14003f2c0:	lea    rcx,[rdx+0x50]
   14003f2c7:	jmp    0x140006ac0
   14003f2cc:	lea    rcx,[rdx+0x98]
   14003f2d3:	jmp    0x140006cdc
   14003f2d8:	lea    rcx,[rdx+0x98]
   14003f2df:	jmp    0x140006ac0
   14003f2e4:	lea    rcx,[rdx+0x98]
   14003f2eb:	jmp    0x140006cdc
   14003f2f0:	lea    rcx,[rdx+0x50]
   14003f2f7:	jmp    0x140006cdc
   14003f2fc:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f303:	add    rcx,0x10
   14003f307:	jmp    0x140014ffc
   14003f30c:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f313:	jmp    0x140011388
   14003f318:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f31f:	add    rcx,0x20
   14003f323:	jmp    0x14001b938
   14003f328:	lea    rcx,[rdx+0x70]
   14003f32f:	jmp    0x14001b900
   14003f334:	lea    rcx,[rdx+0x50]
   14003f33b:	jmp    0x14001b900
   14003f340:	lea    rcx,[rdx+0x40]
   14003f347:	jmp    0x14001b900
   14003f34c:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f353:	add    rcx,0x10
   14003f357:	jmp    0x140014ffc
   14003f35c:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f363:	add    rcx,0x150
   14003f36a:	jmp    0x140014ffc
   14003f36f:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f376:	add    rcx,0x290
   14003f37d:	jmp    0x140015774
   14003f382:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f389:	add    rcx,0x2a8
   14003f390:	jmp    0x140015774
   14003f395:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f39c:	add    rcx,0x2c0
   14003f3a3:	jmp    0x14002582c
   14003f3a8:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f3af:	add    rcx,0x2d0
   14003f3b6:	jmp    0x14002582c
   14003f3bb:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f3c2:	jmp    0x14001a634
   14003f3c7:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f3ce:	add    rcx,0x20
   14003f3d2:	jmp    0x140014ffc
   14003f3d7:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f3de:	add    rcx,0x170
   14003f3e5:	jmp    0x140025a54
   14003f3ea:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f3f1:	add    rcx,0x180
   14003f3f8:	jmp    0x14001cbc0
   14003f3fd:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f404:	add    rcx,0x10
   14003f408:	jmp    0x140014ffc
   14003f40d:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f414:	add    rcx,0x150
   14003f41b:	jmp    0x14001ce40
   14003f420:	mov    rcx,QWORD PTR [rdx+0x48]
   14003f427:	add    rcx,0x10
   14003f42b:	jmp    0x140014ffc
   14003f430:	lea    rcx,[rdx+0x90]
   14003f437:	jmp    0x140012ecc
   14003f43c:	rex push rbp
   14003f43e:	sub    rsp,0x20
   14003f442:	mov    rbp,rdx
   14003f445:	mov    rdx,QWORD PTR [rbp+0x90]
   14003f44c:	mov    rcx,QWORD PTR [rbp+0xa8]
   14003f453:	call   0x140001000
   14003f458:	add    rsp,0x20
   14003f45c:	pop    rbp
   14003f45d:	ret    
   14003f45e:	lea    rcx,[rdx+0x20]
   14003f465:	jmp    0x140006ac0
   14003f46a:	lea    rcx,[rdx+0x20]
   14003f471:	jmp    0x140018654
   14003f476:	lea    rcx,[rdx+0x20]
   14003f47d:	jmp    0x140006ac0
   14003f482:	mov    rcx,QWORD PTR [rdx+0x30]
   14003f489:	jmp    0x140006cdc
   14003f48e:	mov    rcx,QWORD PTR [rdx+0x20]
   14003f495:	jmp    0x140006cdc
   14003f49a:	mov    rcx,QWORD PTR [rdx+0x28]
   14003f4a1:	add    rcx,0x30
   14003f4a5:	jmp    0x140006ac0
   14003f4aa:	mov    rcx,QWORD PTR [rdx+0x20]
   14003f4b1:	jmp    0x140006cdc
   14003f4b6:	mov    rcx,QWORD PTR [rdx+0x28]
   14003f4bd:	add    rcx,0x58
   14003f4c1:	jmp    0x140006ac0
   14003f4c6:	mov    rcx,QWORD PTR [rdx+0x20]
   14003f4cd:	jmp    0x140006cdc
   14003f4d2:	mov    rcx,QWORD PTR [rdx+0x28]
   14003f4d9:	add    rcx,0x60
   14003f4dd:	jmp    0x140006ac0
   14003f4e2:	mov    rcx,QWORD PTR [rdx+0x20]
   14003f4e9:	jmp    0x140006cdc
   14003f4ee:	mov    rcx,QWORD PTR [rdx+0x28]
   14003f4f5:	add    rcx,0x68
   14003f4f9:	jmp    0x140006ac0
   14003f4fe:	lea    rcx,[rdx+0x20]
   14003f505:	jmp    0x140006ac0
   14003f50a:	lea    rcx,[rdx+0x20]
   14003f511:	jmp    0x140006cdc
   14003f516:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f51d:	jmp    0x140020724
   14003f522:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f529:	jmp    0x140003220
   14003f52e:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f535:	add    rcx,0x20
   14003f539:	jmp    0x140013980
   14003f53e:	mov    rcx,QWORD PTR [rdx+0x40]
   14003f545:	jmp    0x1400206ac
   14003f54a:	lea    rcx,[rip+0x1df0f]        # 0x14005d460
   14003f551:	jmp    0x1400206fc
   14003f556:	lea    rcx,[rip+0x1df13]        # 0x14005d470
   14003f55d:	jmp    0x1400206d8
   14003f562:	lea    rcx,[rdx+0xa0]
   14003f569:	jmp    0x140012ecc
   14003f56e:	lea    rcx,[rdx+0xa0]
   14003f575:	add    rcx,0x8
   14003f579:	jmp    0x14000fda8
   14003f57e:	lea    rcx,[rdx+0xa0]
   14003f585:	jmp    0x140014ffc
   14003f58a:	mov    QWORD PTR [rsp+0x10],rdx
   14003f58f:	push   rbp
   14003f590:	sub    rsp,0x40
   14003f594:	mov    rbp,rdx
   14003f597:	lea    rax,[rip+0xfffffffffffe0cd8]        # 0x140020276
   14003f59e:	add    rsp,0x40
   14003f5a2:	pop    rbp
   14003f5a3:	ret    
   14003f5a4:	int3   
   14003f5a5:	lea    rcx,[rdx+0x50]
   14003f5ac:	jmp    0x140015ccc
   14003f5b1:	lea    rcx,[rdx+0x40]
   14003f5b8:	jmp    0x14000fda8
   14003f5bd:	mov    QWORD PTR [rsp+0x10],rdx
   14003f5c2:	push   rbp
   14003f5c3:	sub    rsp,0x20
   14003f5c7:	mov    rbp,rdx
   14003f5ca:	mov    DWORD PTR [rbp+0x20],0x80004005
   14003f5d1:	lea    rax,[rip+0xfffffffffffe0590]        # 0x14001fb68
   14003f5d8:	add    rsp,0x20
   14003f5dc:	pop    rbp
   14003f5dd:	ret    
   14003f5de:	int3   
   14003f5df:	lea    rcx,[rdx+0x60]
   14003f5e6:	jmp    0x1400206ac
   14003f5eb:	lea    rcx,[rdx+0x60]
   14003f5f2:	jmp    0x14001d3d4
   14003f5f7:	lea    rcx,[rdx+0x60]
   14003f5fe:	jmp    0x1400206ac
   14003f603:	lea    rcx,[rdx+0x48]
   14003f60a:	jmp    0x140020724
   14003f60f:	lea    rcx,[rdx+0x48]
   14003f616:	jmp    0x14001d40c
   14003f61b:	lea    rcx,[rdx+0x48]
   14003f622:	jmp    0x140020724
   14003f627:	lea    rcx,[rdx+0x88]
   14003f62e:	jmp    0x14000d818
   14003f633:	lea    rcx,[rdx+0x88]
   14003f63a:	jmp    0x14000b004
   14003f63f:	lea    rcx,[rdx+0x40]
   14003f646:	jmp    0x14000d818
   14003f64b:	lea    rcx,[rdx+0x40]
   14003f652:	jmp    0x14000b004
   14003f657:	lea    rcx,[rdx+0x58]
   14003f65e:	jmp    0x14000d818
   14003f663:	lea    rcx,[rdx+0x58]
   14003f66a:	jmp    0x14000b004
   14003f66f:	lea    rcx,[rdx+0x58]
   14003f676:	jmp    0x14000d818
   14003f67b:	lea    rcx,[rdx+0x78]
   14003f682:	jmp    0x14000d818
   14003f687:	lea    rcx,[rdx+0x78]
   14003f68e:	jmp    0x14000b004
   14003f693:	lea    rcx,[rdx+0x80]
   14003f69a:	jmp    0x140006cdc
   14003f69f:	lea    rcx,[rdx+0x80]
   14003f6a6:	jmp    0x140006ac0
   14003f6ab:	lea    rcx,[rdx+0x80]
   14003f6b2:	jmp    0x140006cdc
   14003f6b7:	lea    rcx,[rdx+0x78]
   14003f6be:	jmp    0x14000d818
   14003f6c3:	lea    rcx,[rdx+0x58]
   14003f6ca:	jmp    0x14000d818
   14003f6cf:	lea    rcx,[rdx+0x80]
   14003f6d6:	jmp    0x140006cdc
   14003f6db:	lea    rcx,[rdx+0x78]
   14003f6e2:	jmp    0x14000d818
   14003f6e7:	lea    rcx,[rdx+0x58]
   14003f6ee:	jmp    0x14000d818
   14003f6f3:	lea    rcx,[rdx+0x40]
   14003f6fa:	jmp    0x14000d818
   14003f6ff:	lea    rcx,[rdx+0x88]
   14003f706:	jmp    0x14000d818
   14003f70b:	mov    rcx,QWORD PTR [rdx+0x50]
   14003f712:	jmp    0x14002657c
   14003f717:	lea    rcx,[rdx+0x180]
   14003f71e:	jmp    0x14001a144
   14003f723:	lea    rcx,[rdx+0x40]
   14003f72a:	jmp    0x140006cdc
   14003f72f:	lea    rcx,[rdx+0x40]
   14003f736:	jmp    0x140006ac0
   14003f73b:	lea    rcx,[rdx+0x40]
   14003f742:	jmp    0x140006cdc
   14003f747:	lea    rcx,[rdx+0x40]
   14003f74e:	jmp    0x140006cdc
   14003f753:	mov    QWORD PTR [rsp+0x10],rdx
   14003f758:	push   rbp
   14003f759:	sub    rsp,0x30
   14003f75d:	mov    rbp,rdx
   14003f760:	mov    DWORD PTR [rbp+0x30],0x80004005
   14003f767:	lea    rax,[rip+0xfffffffffffe0733]        # 0x14001fea1
   14003f76e:	add    rsp,0x30
   14003f772:	pop    rbp
   14003f773:	ret    
   14003f774:	int3   
   14003f775:	mov    QWORD PTR [rsp+0x10],rdx
   14003f77a:	push   rbp
   14003f77b:	sub    rsp,0x30
   14003f77f:	mov    rbp,rdx
   14003f782:	mov    DWORD PTR [rbp+0x30],0x80004005
   14003f789:	lea    rax,[rip+0xfffffffffffe056b]        # 0x14001fcfb
   14003f790:	add    rsp,0x30
   14003f794:	pop    rbp
   14003f795:	ret    
   14003f796:	int3   
   14003f797:	lea    rcx,[rdx+0x50]
   14003f79e:	jmp    0x140006ac0
   14003f7a3:	lea    rcx,[rdx+0x50]
   14003f7aa:	jmp    0x140006cdc
   14003f7af:	lea    rcx,[rdx+0x60]
   14003f7b6:	jmp    0x14001a144
   14003f7bb:	lea    rcx,[rdx+0x58]
   14003f7c2:	jmp    0x140006cdc
   14003f7c7:	lea    rcx,[rdx+0x58]
   14003f7ce:	jmp    0x140006ac0
   14003f7d3:	lea    rcx,[rdx+0x58]
   14003f7da:	jmp    0x140006cdc
   14003f7df:	lea    rcx,[rdx+0x58]
   14003f7e6:	jmp    0x140003220
   14003f7eb:	lea    rcx,[rdx+0x80]
   14003f7f2:	jmp    0x14001d2e0
   14003f7f7:	lea    rcx,[rdx+0x70]
   14003f7fe:	jmp    0x140006cdc
   14003f803:	lea    rcx,[rdx+0x70]
   14003f80a:	jmp    0x140006ac0
   14003f80f:	lea    rcx,[rdx+0x130]
   14003f816:	jmp    0x14001d2e0
   14003f81b:	lea    rcx,[rdx+0x130]
   14003f822:	jmp    0x140003220
   14003f827:	lea    rcx,[rdx+0x130]
   14003f82e:	add    rcx,0x20
   14003f832:	jmp    0x140013980
   14003f837:	lea    rcx,[rdx+0x70]
   14003f83e:	jmp    0x140006cdc
   14003f843:	lea    rcx,[rdx+0x80]
   14003f84a:	jmp    0x140003220
   14003f84f:	lea    rcx,[rdx+0x80]
   14003f856:	add    rcx,0x20
   14003f85a:	jmp    0x140013980
   14003f85f:	lea    rcx,[rdx+0x130]
   14003f866:	jmp    0x140003220
   14003f86b:	lea    rcx,[rdx+0x130]
   14003f872:	add    rcx,0x20
   14003f876:	jmp    0x140013980
   14003f87b:	lea    rcx,[rdx+0x70]
   14003f882:	jmp    0x140006cdc
   14003f887:	lea    rcx,[rdx+0x80]
   14003f88e:	jmp    0x140003220
   14003f893:	lea    rcx,[rdx+0x80]
   14003f89a:	add    rcx,0x20
   14003f89e:	jmp    0x140013980
   14003f8a3:	lea    rcx,[rdx+0x130]
   14003f8aa:	jmp    0x140003220
   14003f8af:	lea    rcx,[rdx+0x130]
   14003f8b6:	add    rcx,0x20
   14003f8ba:	jmp    0x140013980
   14003f8bf:	lea    rcx,[rdx+0x70]
   14003f8c6:	jmp    0x140006cdc
   14003f8cb:	lea    rcx,[rdx+0x80]
   14003f8d2:	jmp    0x140003220
   14003f8d7:	lea    rcx,[rdx+0x80]
   14003f8de:	add    rcx,0x20
   14003f8e2:	jmp    0x140013980
   14003f8e7:	lea    rcx,[rdx+0x130]
   14003f8ee:	jmp    0x140003220
   14003f8f3:	lea    rcx,[rdx+0x130]
   14003f8fa:	add    rcx,0x20
   14003f8fe:	jmp    0x140013980
   14003f903:	lea    rcx,[rdx+0x70]
   14003f90a:	jmp    0x140006cdc
   14003f90f:	lea    rcx,[rdx+0x80]
   14003f916:	jmp    0x140003220
   14003f91b:	lea    rcx,[rdx+0x80]
   14003f922:	add    rcx,0x20
   14003f926:	jmp    0x140013980
   14003f92b:	mov    QWORD PTR [rsp+0x10],rdx
   14003f930:	push   rbp
   14003f931:	sub    rsp,0x50
   14003f935:	mov    rbp,rdx
   14003f938:	mov    rax,QWORD PTR [rbp+0x1a0]
   14003f93f:	cmp    DWORD PTR [rax],0x1
   14003f942:	jne    0x14003f954
   14003f944:	cmp    DWORD PTR [rax+0x4],0xe1230fa3
   14003f94b:	mov    DWORD PTR [rbp+0x50],0xe1230590
   14003f952:	je     0x14003f95b
   14003f954:	mov    DWORD PTR [rbp+0x50],0x80004005
   14003f95b:	lea    rax,[rip+0xfffffffffffdf72f]        # 0x14001f091
   14003f962:	add    rsp,0x50
   14003f966:	pop    rbp
   14003f967:	ret    
   14003f968:	int3   
   14003f969:	mov    QWORD PTR [rsp+0x10],rdx
   14003f96e:	push   rbp
   14003f96f:	sub    rsp,0x50
   14003f973:	mov    rbp,rdx
   14003f976:	mov    DWORD PTR [rbp+0x50],0x80004005
   14003f97d:	lea    rax,[rip+0xfffffffffffdf70d]        # 0x14001f091
   14003f984:	add    rsp,0x50
   14003f988:	pop    rbp
   14003f989:	ret    
   14003f98a:	int3   
   14003f98b:	lea    rcx,[rdx+0x130]
   14003f992:	jmp    0x140003220
   14003f997:	lea    rcx,[rdx+0x130]
   14003f99e:	add    rcx,0x20
   14003f9a2:	jmp    0x140013980
   14003f9a7:	lea    rcx,[rdx+0x70]
   14003f9ae:	jmp    0x140006cdc
   14003f9b3:	lea    rcx,[rdx+0x80]
   14003f9ba:	jmp    0x140003220
   14003f9bf:	lea    rcx,[rdx+0x80]
   14003f9c6:	add    rcx,0x20
   14003f9ca:	jmp    0x140013980
   14003f9cf:	lea    rcx,[rdx+0x130]
   14003f9d6:	jmp    0x140003220
   14003f9db:	lea    rcx,[rdx+0x130]
   14003f9e2:	add    rcx,0x20
   14003f9e6:	jmp    0x140013980
   14003f9eb:	lea    rcx,[rdx+0x70]
   14003f9f2:	jmp    0x140006cdc
   14003f9f7:	lea    rcx,[rdx+0x80]
   14003f9fe:	jmp    0x140003220
   14003fa03:	lea    rcx,[rdx+0x80]
   14003fa0a:	add    rcx,0x20
   14003fa0e:	jmp    0x140013980
   14003fa13:	mov    QWORD PTR [rsp+0x10],rdx
   14003fa18:	push   rbp
   14003fa19:	sub    rsp,0x30
   14003fa1d:	mov    rbp,rdx
   14003fa20:	mov    DWORD PTR [rbp+0x30],0x80004005
   14003fa27:	lea    rax,[rip+0xfffffffffffe0019]        # 0x14001fa47
   14003fa2e:	add    rsp,0x30
   14003fa32:	pop    rbp
   14003fa33:	ret    
   14003fa34:	int3   
   14003fa35:	mov    rcx,QWORD PTR [rdx+0x40]
   14003fa3c:	add    rcx,0x30
   14003fa40:	jmp    0x140006ac0
   14003fa45:	mov    rcx,QWORD PTR [rdx+0x40]
   14003fa4c:	add    rcx,0x58
   14003fa50:	jmp    0x140006ac0
   14003fa55:	mov    rcx,QWORD PTR [rdx+0x40]
   14003fa5c:	add    rcx,0x60
   14003fa60:	jmp    0x140006ac0
   14003fa65:	mov    rcx,QWORD PTR [rdx+0x40]
   14003fa6c:	add    rcx,0x68
   14003fa70:	jmp    0x140006ac0
   14003fa75:	mov    rcx,QWORD PTR [rdx+0x48]
   14003fa7c:	jmp    0x140006cdc
   14003fa81:	mov    rcx,QWORD PTR [rdx+0x48]
   14003fa88:	jmp    0x140006cdc
   14003fa8d:	mov    rcx,QWORD PTR [rdx+0x48]
   14003fa94:	jmp    0x140006cdc
   14003fa99:	mov    rcx,QWORD PTR [rdx+0x40]
   14003faa0:	jmp    0x140006cdc
   14003faa5:	mov    QWORD PTR [rsp+0x10],rdx
   14003faaa:	push   rbx
   14003faab:	push   rbp
   14003faac:	sub    rsp,0x28
   14003fab0:	mov    rbp,rdx
   14003fab3:	mov    rdx,QWORD PTR [rbp+0x50]
   14003fab7:	mov    rdx,QWORD PTR [rdx+0x18]
   14003fabb:	mov    rbx,QWORD PTR [rbp+0x28]
   14003fabf:	mov    rcx,rbx
   14003fac2:	call   0x140010c44
   14003fac7:	mov    eax,DWORD PTR [rbx+0x4]
   14003faca:	mov    DWORD PTR [rbp+0x68],eax
   14003facd:	lea    rax,[rip+0xfffffffffffdfd7c]        # 0x14001f850
   14003fad4:	add    rsp,0x28
   14003fad8:	pop    rbp
   14003fad9:	pop    rbx
   14003fada:	ret    
   14003fadb:	int3   
   14003fadc:	mov    QWORD PTR [rsp+0x10],rdx
   14003fae1:	push   rbp
   14003fae2:	sub    rsp,0x20
   14003fae6:	mov    rbp,rdx
   14003fae9:	lea    rax,[rip+0xfffffffffffdfd66]        # 0x14001f856
   14003faf0:	add    rsp,0x20
   14003faf4:	pop    rbp
   14003faf5:	ret    
   14003faf6:	int3   
   14003faf7:	lea    rcx,[rdx+0x20]
   14003fafe:	jmp    0x140006cdc
   14003fb03:	lea    rcx,[rdx+0x20]
   14003fb0a:	jmp    0x140006ac0
   14003fb0f:	lea    rcx,[rdx+0x20]
   14003fb16:	jmp    0x140006cdc
   14003fb1b:	lea    rcx,[rdx+0x30]
   14003fb22:	jmp    0x140006cdc
   14003fb27:	lea    rcx,[rdx+0x30]
   14003fb2e:	jmp    0x140006ac0
   14003fb33:	lea    rcx,[rdx+0x38]
   14003fb3a:	jmp    0x140006cdc
   14003fb3f:	lea    rcx,[rdx+0x38]
   14003fb46:	jmp    0x140006ac0
   14003fb4b:	lea    rcx,[rdx+0x38]
   14003fb52:	jmp    0x140006cdc
   14003fb57:	mov    QWORD PTR [rsp+0x10],rdx
   14003fb5c:	push   rbp
   14003fb5d:	sub    rsp,0x30
   14003fb61:	mov    rbp,rdx
   14003fb64:	mov    rdx,QWORD PTR [rbp+0xe0]
   14003fb6b:	mov    rdx,QWORD PTR [rdx+0x18]
   14003fb6f:	mov    rcx,QWORD PTR [rbp+0x90]
   14003fb76:	call   0x140010c44
   14003fb7b:	nop
   14003fb7c:	lea    rax,[rip+0xfffffffffffde08e]        # 0x14001dc11
   14003fb83:	add    rsp,0x30
   14003fb87:	pop    rbp
   14003fb88:	ret    
   14003fb89:	int3   
   14003fb8a:	lea    rcx,[rdx+0x30]
   14003fb91:	jmp    0x140006cdc
   14003fb96:	lea    rcx,[rdx+0x30]
   14003fb9d:	jmp    0x140006cdc
   14003fba2:	lea    rcx,[rdx+0x50]
   14003fba9:	jmp    0x14001a144
   14003fbae:	mov    QWORD PTR [rsp+0x10],rdx
   14003fbb3:	push   rbp
   14003fbb4:	mov    rbp,rdx
   14003fbb7:	lea    rax,[rip+0xfffffffffffdfd1b]        # 0x14001f8d9
   14003fbbe:	pop    rbp
   14003fbbf:	ret    
   14003fbc0:	int3   
   14003fbc1:	mov    QWORD PTR [rsp+0x10],rdx
   14003fbc6:	push   rbp
   14003fbc7:	mov    rbp,rdx
   14003fbca:	lea    rax,[rip+0xfffffffffffdfcb8]        # 0x14001f889
   14003fbd1:	pop    rbp
   14003fbd2:	ret    
   14003fbd3:	int3   
   14003fbd4:	mov    QWORD PTR [rsp+0x10],rdx
   14003fbd9:	push   rbp
   14003fbda:	mov    rbp,rdx
   14003fbdd:	lea    rax,[rip+0xfffffffffffdfbd9]        # 0x14001f7bd
   14003fbe4:	pop    rbp
   14003fbe5:	ret    
   14003fbe6:	int3   
   14003fbe7:	mov    QWORD PTR [rsp+0x10],rdx
   14003fbec:	push   rbp
   14003fbed:	mov    rbp,rdx
   14003fbf0:	lea    rax,[rip+0xfffffffffffdfb9e]        # 0x14001f795
   14003fbf7:	pop    rbp
   14003fbf8:	ret    
   14003fbf9:	int3   
   14003fbfa:	mov    QWORD PTR [rsp+0x10],rdx
   14003fbff:	push   rbp
   14003fc00:	mov    rbp,rdx
   14003fc03:	lea    rax,[rip+0xfffffffffffdfca7]        # 0x14001f8b1
   14003fc0a:	pop    rbp
   14003fc0b:	ret    
   14003fc0c:	int3   
   14003fc0d:	mov    rcx,QWORD PTR [rdx+0x50]
   14003fc14:	jmp    0x140006cdc
   14003fc19:	mov    rcx,QWORD PTR [rdx+0x58]
   14003fc20:	jmp    0x14002657c
   14003fc25:	mov    rcx,QWORD PTR [rdx+0x28]
   14003fc2c:	jmp    0x14002657c
   14003fc31:	mov    rcx,QWORD PTR [rdx+0x48]
   14003fc38:	jmp    0x14002657c
   14003fc3d:	mov    rcx,QWORD PTR [rdx+0x48]
   14003fc44:	jmp    0x14002657c
   14003fc49:	mov    rcx,QWORD PTR [rdx+0xa0]
   14003fc50:	jmp    0x14002657c
   14003fc55:	mov    QWORD PTR [rsp+0x10],rdx
   14003fc5a:	push   rbp
   14003fc5b:	sub    rsp,0x40
   14003fc5f:	mov    rbp,rdx
   14003fc62:	mov    rax,QWORD PTR [rbp+0x48]
   14003fc66:	mov    ecx,DWORD PTR [rax+0x4]
   14003fc69:	mov    eax,ecx
   14003fc6b:	and    eax,0x1fff0000
   14003fc70:	cmp    eax,0x1230000
   14003fc75:	je     0x14003fc7b
   14003fc77:	xor    dl,dl
   14003fc79:	jmp    0x14003fc8b
   14003fc7b:	movzx  eax,cx
   14003fc7e:	add    eax,0xffffd8f0
   14003fc83:	cmp    eax,0x12b
   14003fc88:	setbe  dl
   14003fc8b:	mov    eax,0x80004005
   14003fc90:	test   dl,dl
   14003fc92:	cmove  eax,ecx
   14003fc95:	mov    DWORD PTR [rbp+0xa0],eax
   14003fc9b:	lea    rax,[rip+0xfffffffffffe1b81]        # 0x140021823
   14003fca2:	add    rsp,0x40
   14003fca6:	pop    rbp
   14003fca7:	ret    
   14003fca8:	int3   
   14003fca9:	mov    QWORD PTR [rsp+0x10],rdx
   14003fcae:	push   rbp
   14003fcaf:	sub    rsp,0x40
   14003fcb3:	mov    rbp,rdx
   14003fcb6:	lea    rax,[rip+0xfffffffffffe1b6f]        # 0x14002182c
   14003fcbd:	add    rsp,0x40
   14003fcc1:	pop    rbp
   14003fcc2:	ret    
   14003fcc3:	int3   
   14003fcc4:	mov    rcx,QWORD PTR [rdx+0x30]
   14003fccb:	jmp    0x14002657c
   14003fcd0:	mov    rcx,QWORD PTR [rdx+0x28]
   14003fcd7:	jmp    0x14002657c
   14003fcdc:	mov    rcx,QWORD PTR [rdx+0x28]
   14003fce3:	jmp    0x14002657c
   14003fce8:	mov    rcx,QWORD PTR [rdx+0x28]
   14003fcef:	jmp    0x14002657c
   14003fcf4:	mov    rcx,QWORD PTR [rdx+0x28]
   14003fcfb:	jmp    0x14002657c
   14003fd00:	lea    rcx,[rdx+0x50]
   14003fd07:	jmp    0x140022888
   14003fd0c:	mov    QWORD PTR [rsp+0x10],rdx
   14003fd11:	push   rbp
   14003fd12:	sub    rsp,0x20
   14003fd16:	mov    rbp,rdx
   14003fd19:	xor    edx,edx
   14003fd1b:	xor    ecx,ecx
   14003fd1d:	call   0x140029fe8
   14003fd22:	nop
   14003fd23:	rex push rbp
   14003fd25:	sub    rsp,0x20
   14003fd29:	mov    rbp,rdx
   14003fd2c:	mov    rdx,QWORD PTR [rbp+0x50]
   14003fd30:	mov    rcx,QWORD PTR [rbp+0x58]
   14003fd34:	call   0x140001000
   14003fd39:	add    rsp,0x20
   14003fd3d:	pop    rbp
   14003fd3e:	ret    
   14003fd3f:	mov    QWORD PTR [rsp+0x10],rdx
   14003fd44:	push   rbp
   14003fd45:	sub    rsp,0x20
   14003fd49:	mov    rbp,rdx
   14003fd4c:	xor    edx,edx
   14003fd4e:	xor    ecx,ecx
   14003fd50:	call   0x140029fe8
   14003fd55:	nop
   14003fd56:	mov    QWORD PTR [rsp+0x10],rdx
   14003fd5b:	push   rbx
   14003fd5c:	push   rbp
   14003fd5d:	sub    rsp,0x38
   14003fd61:	mov    rbp,rdx
   14003fd64:	mov    rbx,QWORD PTR [rbp+0x50]
   14003fd68:	mov    rcx,QWORD PTR [rbx]
   14003fd6b:	test   rcx,rcx
   14003fd6e:	je     0x14003fd83
   14003fd70:	call   0x14002657c
   14003fd75:	and    QWORD PTR [rbx],0x0
   14003fd79:	and    QWORD PTR [rbx+0x8],0x0
   14003fd7e:	and    QWORD PTR [rbx+0x10],0x0
   14003fd83:	xor    edx,edx
   14003fd85:	xor    ecx,ecx
   14003fd87:	call   0x140029fe8
   14003fd8c:	nop
   14003fd8d:	mov    rcx,QWORD PTR [rdx+0x80]
   14003fd94:	jmp    0x14002446c
   14003fd99:	mov    rcx,QWORD PTR [rdx+0x80]
   14003fda0:	add    rcx,0x10
   14003fda4:	jmp    0x140003220
   14003fda9:	mov    rcx,QWORD PTR [rdx+0x80]
   14003fdb0:	add    rcx,0x28
   14003fdb4:	jmp    0x140003220
   14003fdb9:	mov    rcx,QWORD PTR [rdx+0x80]
   14003fdc0:	add    rcx,0x40
   14003fdc4:	jmp    0x140003078
   14003fdc9:	lea    rcx,[rdx+0x28]
   14003fdd0:	jmp    0x140029e84
   14003fdd5:	mov    rcx,QWORD PTR [rdx+0x40]
   14003fddc:	jmp    0x14002446c
   14003fde1:	mov    rcx,QWORD PTR [rdx+0x40]
   14003fde8:	add    rcx,0x10
   14003fdec:	jmp    0x140003220
   14003fdf1:	mov    rcx,QWORD PTR [rdx+0x40]
   14003fdf8:	add    rcx,0x28
   14003fdfc:	jmp    0x140003220
   14003fe01:	mov    rcx,QWORD PTR [rdx+0x40]
   14003fe08:	add    rcx,0x40
   14003fe0c:	jmp    0x140003078
   14003fe11:	mov    rcx,QWORD PTR [rdx+0x40]
   14003fe18:	jmp    0x140029e84
   14003fe1d:	lea    rcx,[rdx+0x58]
   14003fe24:	jmp    0x140003220
   14003fe29:	lea    rcx,[rdx+0x80]
   14003fe30:	jmp    0x14000fed0
   14003fe35:	lea    rcx,[rdx+0xd0]
   14003fe3c:	add    rcx,0x8
   14003fe40:	jmp    0x14000fd20
   14003fe45:	lea    rcx,[rdx+0xd0]
   14003fe4c:	jmp    0x140001820
   14003fe51:	lea    rcx,[rdx+0xd0]
   14003fe58:	add    rcx,0x8
   14003fe5c:	jmp    0x14000fd20
   14003fe61:	lea    rcx,[rdx+0x50]
   14003fe68:	jmp    0x14000fda8
   14003fe6d:	lea    rcx,[rdx+0x30]
   14003fe74:	jmp    0x140003220
   14003fe79:	lea    rcx,[rdx+0x48]
   14003fe80:	jmp    0x140003078
   14003fe85:	mov    rcx,QWORD PTR [rdx+0x68]
   14003fe8c:	jmp    0x14002657c
   14003fe91:	mov    QWORD PTR [rsp+0x10],rdx
   14003fe96:	push   rbp
   14003fe97:	sub    rsp,0x30
   14003fe9b:	mov    rbp,rdx
   14003fe9e:	lea    rax,[rip+0xfffffffffffe4456]        # 0x1400242fb
   14003fea5:	add    rsp,0x30
   14003fea9:	pop    rbp
   14003feaa:	ret    
   14003feab:	int3   
   14003feac:	lea    rcx,[rdx+0x28]
   14003feb3:	jmp    0x140003220
   14003feb8:	lea    rcx,[rdx+0x60]
   14003febf:	jmp    0x140003220
   14003fec4:	lea    rcx,[rdx+0x88]
   14003fecb:	jmp    0x140003078
   14003fed0:	mov    QWORD PTR [rsp+0x10],rdx
   14003fed5:	push   rbp
   14003fed6:	sub    rsp,0x30
   14003feda:	mov    rbp,rdx
   14003fedd:	mov    rcx,QWORD PTR [rbp+0x58]
   14003fee1:	call   0x14002657c
   14003fee6:	xor    edx,edx
   14003fee8:	xor    ecx,ecx
   14003feea:	call   0x140029fe8
   14003feef:	nop
   14003fef0:	lea    rcx,[rdx+0x30]
   14003fef7:	add    rcx,0x8
   14003fefb:	jmp    0x14000fd20
   14003ff00:	lea    rcx,[rdx+0x30]
   14003ff07:	jmp    0x140001820
   14003ff0c:	lea    rcx,[rdx+0x30]
   14003ff13:	add    rcx,0x8
   14003ff17:	jmp    0x14000fd20
   14003ff1c:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ff23:	jmp    0x140029e84
   14003ff28:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ff2f:	jmp    0x14002332c
   14003ff34:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ff3b:	jmp    0x14002332c
   14003ff40:	mov    rcx,QWORD PTR [rdx+0x40]
   14003ff47:	jmp    0x140029e84
   14003ff4c:	lea    rcx,[rdx+0xc0]
   14003ff53:	jmp    0x140024a78
   14003ff58:	lea    rcx,[rdx+0x70]
   14003ff5f:	jmp    0x140029e84
   14003ff64:	lea    rcx,[rdx+0x70]
   14003ff6b:	jmp    0x14002332c
   14003ff70:	lea    rcx,[rdx+0xb8]
   14003ff77:	jmp    0x140024a78
   14003ff7c:	lea    rcx,[rdx+0x88]
   14003ff83:	jmp    0x140029e84
   14003ff88:	lea    rcx,[rdx+0x88]
   14003ff8f:	jmp    0x14002332c
   14003ff94:	lea    rcx,[rdx+0x78]
   14003ff9b:	jmp    0x140024a78
   14003ffa0:	lea    rcx,[rdx+0xb8]
   14003ffa7:	jmp    0x140003078
   14003ffac:	lea    rcx,[rdx+0xd8]
   14003ffb3:	jmp    0x140003078
   14003ffb8:	lea    rcx,[rdx+0x98]
   14003ffbf:	jmp    0x140029e84
   14003ffc4:	lea    rcx,[rdx+0x98]
   14003ffcb:	jmp    0x14002332c
   14003ffd0:	lea    rcx,[rdx+0x80]
   14003ffd7:	jmp    0x140024a78
   14003ffdc:	lea    rcx,[rdx+0x48]
   14003ffe3:	jmp    0x140024a78
   14003ffe8:	lea    rcx,[rdx+0x70]
   14003ffef:	jmp    0x140029e84
   14003fff4:	lea    rcx,[rdx+0x70]
   14003fffb:	jmp    0x14002332c
   140040000:	lea    rcx,[rdx+0x40]
   140040007:	jmp    0x140024a78
   14004000c:	lea    rcx,[rdx+0xa0]
   140040013:	jmp    0x140029e84
   140040018:	lea    rcx,[rdx+0xa0]
   14004001f:	jmp    0x14002332c
   140040024:	lea    rcx,[rdx+0x88]
   14004002b:	jmp    0x140029e84
   140040030:	lea    rcx,[rdx+0x88]
   140040037:	jmp    0x14002332c
   14004003c:	lea    rcx,[rdx+0x28]
   140040043:	jmp    0x140024a78
   140040048:	lea    rcx,[rdx+0x40]
   14004004f:	jmp    0x140029e84
   140040054:	lea    rcx,[rdx+0x40]
   14004005b:	jmp    0x14002332c
   140040060:	lea    rcx,[rdx+0x20]
   140040067:	jmp    0x140024a78
   14004006c:	lea    rcx,[rdx+0x58]
   140040073:	jmp    0x140029e84
   140040078:	lea    rcx,[rdx+0x58]
   14004007f:	jmp    0x14002332c
   140040084:	lea    rcx,[rdx+0x88]
   14004008b:	jmp    0x140024a78
   140040090:	lea    rcx,[rdx+0x28]
   140040097:	jmp    0x140029e84
   14004009c:	lea    rcx,[rdx+0x28]
   1400400a3:	jmp    0x14002332c
   1400400a8:	lea    rcx,[rdx+0x80]
   1400400af:	jmp    0x140024a78
   1400400b4:	lea    rcx,[rdx+0x40]
   1400400bb:	jmp    0x140029e84
   1400400c0:	lea    rcx,[rdx+0x40]
   1400400c7:	jmp    0x14002332c
   1400400cc:	rex push rbp
   1400400ce:	sub    rsp,0x20
   1400400d2:	mov    rbp,rdx
   1400400d5:	mov    eax,DWORD PTR [rbp+0x20]
   1400400d8:	and    eax,0x1
   1400400db:	test   eax,eax
   1400400dd:	je     0x1400400ec
   1400400df:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400400e3:	mov    rcx,QWORD PTR [rbp+0x48]
   1400400e7:	call   0x140003078
   1400400ec:	add    rsp,0x20
   1400400f0:	pop    rbp
   1400400f1:	ret    
   1400400f2:	lea    rcx,[rdx+0x50]
   1400400f9:	jmp    0x140025620
   1400400fe:	mov    rcx,QWORD PTR [rdx+0x40]
   140040105:	jmp    0x14000fda8
   14004010a:	lea    rcx,[rdx+0x38]
   140040111:	jmp    0x140006ac0
   140040116:	lea    rcx,[rdx+0x38]
   14004011d:	jmp    0x140006cdc
   140040122:	lea    rcx,[rdx+0x20]
   140040129:	jmp    0x140006ac0
   14004012e:	lea    rcx,[rdx+0x20]
   140040135:	jmp    0x140006cdc
   14004013a:	rex push rbp
   14004013c:	sub    rsp,0x20
   140040140:	mov    rbp,rdx
   140040143:	mov    eax,DWORD PTR [rbp+0x20]
   140040146:	and    eax,0x1
   140040149:	test   eax,eax
   14004014b:	je     0x14004015a
   14004014d:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140040151:	mov    rcx,QWORD PTR [rbp+0x48]
   140040155:	call   0x140006ac0
   14004015a:	add    rsp,0x20
   14004015e:	pop    rbp
   14004015f:	ret    
   140040160:	lea    rcx,[rdx+0x68]
   140040167:	add    rcx,0x8
   14004016b:	jmp    0x140003220
   140040170:	lea    rcx,[rdx+0x68]
   140040177:	add    rcx,0x20
   14004017b:	jmp    0x140006a48
   140040180:	lea    rcx,[rdx+0xa0]
   140040187:	add    rcx,0x8
   14004018b:	jmp    0x140003220
   140040190:	lea    rcx,[rdx+0xa0]
   140040197:	add    rcx,0x20
   14004019b:	jmp    0x140006a48
   1400401a0:	lea    rcx,[rdx+0x30]
   1400401a7:	jmp    0x1400072ec
   1400401ac:	lea    rcx,[rdx+0x50]
   1400401b3:	jmp    0x140006ac0
   1400401b8:	lea    rcx,[rdx+0x50]
   1400401bf:	jmp    0x140006cdc
   1400401c4:	lea    rcx,[rdx+0x60]
   1400401cb:	jmp    0x140006ac0
   1400401d0:	lea    rcx,[rdx+0x60]
   1400401d7:	jmp    0x140006cdc
   1400401dc:	lea    rcx,[rdx+0x58]
   1400401e3:	jmp    0x140006ac0
   1400401e8:	lea    rcx,[rdx+0x58]
   1400401ef:	jmp    0x140006cdc
   1400401f4:	lea    rcx,[rdx+0x48]
   1400401fb:	jmp    0x140006ac0
   140040200:	lea    rcx,[rdx+0x48]
   140040207:	jmp    0x140006cdc
   14004020c:	sub    rsp,0x38
   140040210:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140040219:	lea    rax,[rip+0x4e90]        # 0x1400450b0
   140040220:	mov    QWORD PTR [rip+0x1b229],rax        # 0x14005b450
   140040227:	lea    rcx,[rip+0x35a]        # 0x140040588
   14004022e:	add    rsp,0x38
   140040232:	jmp    0x140026c04
   140040237:	int3   
   140040238:	sub    rsp,0x38
   14004023c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140040245:	lea    rax,[rip+0x4e64]        # 0x1400450b0
   14004024c:	mov    QWORD PTR [rip+0x1b1f5],rax        # 0x14005b448
   140040253:	lea    rax,[rip+0x4e8e]        # 0x1400450e8
   14004025a:	mov    QWORD PTR [rip+0x1b1e7],rax        # 0x14005b448
   140040261:	lea    rcx,[rip+0x300]        # 0x140040568
   140040268:	add    rsp,0x38
   14004026c:	jmp    0x140026c04
   140040271:	int3   
   140040272:	int3   
   140040273:	int3   
   140040274:	sub    rsp,0x38
   140040278:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140040281:	lea    rax,[rip+0x4e28]        # 0x1400450b0
   140040288:	mov    QWORD PTR [rip+0x1b1b1],rax        # 0x14005b440
   14004028f:	lea    rax,[rip+0x4e8a]        # 0x140045120
   140040296:	mov    QWORD PTR [rip+0x1b1a3],rax        # 0x14005b440
   14004029d:	lea    rcx,[rip+0x2a4]        # 0x140040548
   1400402a4:	add    rsp,0x38
   1400402a8:	jmp    0x140026c04
   1400402ad:	int3   
   1400402ae:	int3   
   1400402af:	int3   
   1400402b0:	lea    rcx,[rip+0x2f1]        # 0x1400405a8
   1400402b7:	jmp    0x140026c04
   1400402bc:	mov    rax,rsp
   1400402bf:	push   rdi
   1400402c0:	sub    rsp,0x240
   1400402c7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400402d0:	mov    QWORD PTR [rax+0x8],rbx
   1400402d4:	mov    QWORD PTR [rax+0x10],rsi
   1400402d8:	mov    rax,QWORD PTR [rip+0x18da9]        # 0x140059088
   1400402df:	xor    rax,rsp
   1400402e2:	mov    QWORD PTR [rsp+0x230],rax
   1400402ea:	xor    esi,esi
   1400402ec:	mov    QWORD PTR [rip+0x1a7ad],rsi        # 0x14005aaa0
   1400402f3:	mov    QWORD PTR [rip+0x1a7ae],rsi        # 0x14005aaa8
   1400402fa:	lea    eax,[rsi+0x7]
   1400402fd:	mov    QWORD PTR [rip+0x1a7a4],rax        # 0x14005aaa8
   140040304:	mov    QWORD PTR [rip+0x1a795],rsi        # 0x14005aaa0
   14004030b:	mov    WORD PTR [rip+0x1a77e],si        # 0x14005aa90
   140040312:	mov    QWORD PTR [rip+0x1a7a7],rsi        # 0x14005aac0
   140040319:	mov    QWORD PTR [rip+0x1a7a8],rsi        # 0x14005aac8
   140040320:	mov    QWORD PTR [rip+0x1a7a1],rax        # 0x14005aac8
   140040327:	mov    QWORD PTR [rip+0x1a792],rsi        # 0x14005aac0
   14004032e:	mov    WORD PTR [rip+0x1a77b],si        # 0x14005aab0
   140040335:	mov    r8d,0xff
   14004033b:	lea    rdx,[rsp+0x30]
   140040340:	xor    ecx,ecx
   140040342:	call   QWORD PTR [rip+0xff0]        # 0x140041338
   140040348:	test   eax,eax
   14004034a:	je     0x1400403de
   140040350:	lea    rdx,[rsp+0x30]
   140040355:	lea    rcx,[rip+0x1a754]        # 0x14005aab0
   14004035c:	call   0x14000324c
   140040361:	lea    rcx,[rsp+0x30]
   140040366:	or     rbx,0xffffffffffffffff
   14004036a:	mov    rax,rbx
   14004036d:	inc    rax
   140040370:	cmp    WORD PTR [rcx+rax*2],si
   140040374:	jne    0x14004036d
   140040376:	lea    rdi,[rsp+0x30]
   14004037b:	lea    rdi,[rdi+rax*2]
   14004037f:	test   rax,rax
   140040382:	je     0x140040393
   140040384:	cmp    WORD PTR [rdi],0x5c
   140040388:	je     0x140040393
   14004038a:	sub    rdi,0x2
   14004038e:	dec    rax
   140040391:	jne    0x140040384
   140040393:	mov    WORD PTR [rdi],si
   140040396:	lea    rdx,[rsp+0x30]
   14004039b:	lea    rcx,[rip+0x1a6ee]        # 0x14005aa90
   1400403a2:	call   0x14000324c
   1400403a7:	inc    rbx
   1400403aa:	cmp    WORD PTR [rdi+rbx*2+0x2],si
   1400403af:	jne    0x1400403a7
   1400403b1:	test   rbx,rbx
   1400403b4:	je     0x1400403cd
   1400403b6:	cmp    WORD PTR [rdi+rbx*2+0x2],0x2e
   1400403bc:	je     0x1400403c3
   1400403be:	dec    rbx
   1400403c1:	jne    0x1400403b6
   1400403c3:	test   rbx,rbx
   1400403c6:	je     0x1400403cd
   1400403c8:	mov    WORD PTR [rdi+rbx*2+0x2],si
   1400403cd:	lea    rdx,[rdi+0x2]
   1400403d1:	lea    rcx,[rip+0x1a698]        # 0x14005aa70
   1400403d8:	call   0x14000324c
   1400403dd:	nop
   1400403de:	lea    rcx,[rip+0x1d3]        # 0x1400405b8
   1400403e5:	call   0x140026c04
   1400403ea:	mov    rcx,QWORD PTR [rsp+0x230]
   1400403f2:	xor    rcx,rsp
   1400403f5:	call   0x1400265a0
   1400403fa:	lea    r11,[rsp+0x240]
   140040402:	mov    rbx,QWORD PTR [r11+0x10]
   140040406:	mov    rsi,QWORD PTR [r11+0x18]
   14004040a:	mov    rsp,r11
   14004040d:	pop    rdi
   14004040e:	ret    
   14004040f:	int3   
   140040410:	sub    rsp,0x38
   140040414:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004041d:	lea    rax,[rip+0x6224]        # 0x140046648
   140040424:	mov    QWORD PTR [rip+0x1a6a5],rax        # 0x14005aad0
   14004042b:	xor    eax,eax
   14004042d:	mov    QWORD PTR [rip+0x1a6a4],rax        # 0x14005aad8
   140040434:	mov    QWORD PTR [rip+0x1a6a5],rax        # 0x14005aae0
   14004043b:	mov    QWORD PTR [rip+0x1a6a6],rax        # 0x14005aae8
   140040442:	mov    DWORD PTR [rip+0x1a6a8],eax        # 0x14005aaf0
   140040448:	mov    DWORD PTR [rip+0x1a6aa],eax        # 0x14005aaf8
   14004044e:	lea    rcx,[rip+0x20b]        # 0x140040660
   140040455:	add    rsp,0x38
   140040459:	jmp    0x140026c04
   14004045e:	int3   
   14004045f:	int3   
   140040460:	lea    rcx,[rip+0x205]        # 0x14004066c
   140040467:	jmp    0x140026c04
   14004046c:	lea    rcx,[rip+0x28d]        # 0x140040700
   140040473:	jmp    0x140026c04
   140040478:	lea    rcx,[rip+0x2b1]        # 0x140040730
   14004047f:	jmp    0x140026c04
   140040484:	mov    r11,rsp
   140040487:	sub    rsp,0x58
   14004048b:	xor    ecx,ecx
   14004048d:	lea    rax,[rip+0x1a68c]        # 0x14005ab20
   140040494:	lea    rdx,[rip+0x1a675]        # 0x14005ab10
   14004049b:	mov    QWORD PTR [r11-0x18],rax
   14004049f:	lea    rax,[rip+0x1a68a]        # 0x14005ab30
   1400404a6:	mov    QWORD PTR [r11-0x10],rcx
   1400404aa:	mov    QWORD PTR [r11-0x20],rax
   1400404ae:	mov    QWORD PTR [r11-0x28],rcx
   1400404b2:	mov    QWORD PTR [r11-0x30],rcx
   1400404b6:	lea    rax,[r11-0x18]
   1400404ba:	lea    r9d,[rcx+0x1]
   1400404be:	lea    rcx,[rip+0xfffffffffffd522f]        # 0x1400156f4
   1400404c5:	mov    r8,rdx
   1400404c8:	mov    QWORD PTR [r11-0x38],rax
   1400404cc:	call   QWORD PTR [rip+0xc16]        # 0x1400410e8
   1400404d2:	lea    rcx,[rip+0x287]        # 0x140040760
   1400404d9:	add    rsp,0x58
   1400404dd:	jmp    0x140026c04
   1400404e2:	int3   
   1400404e3:	int3   
   1400404e4:	sub    rsp,0x28
   1400404e8:	lea    rcx,[rip+0x1c461]        # 0x14005c950
   1400404ef:	call   0x140031f88
   1400404f4:	lea    rcx,[rip+0x269]        # 0x140040764
   1400404fb:	add    rsp,0x28
   1400404ff:	jmp    0x140026c04
   140040504:	sub    rsp,0x28
   140040508:	call   QWORD PTR [rip+0xf3a]        # 0x140041448
   14004050e:	lea    rcx,[rip+0x4cc3]        # 0x1400451d8
   140040515:	mov    BYTE PTR [rip+0x1c4a4],0x0        # 0x14005c9c0
   14004051c:	mov    QWORD PTR [rip+0x1c48d],rcx        # 0x14005c9b0
   140040523:	lea    rcx,[rip+0x246]        # 0x140040770
   14004052a:	mov    QWORD PTR [rip+0x1c487],rax        # 0x14005c9b8
   140040531:	add    rsp,0x28
   140040535:	jmp    0x140026c04
   14004053a:	int3   
   14004053b:	int3   
   14004053c:	lea    rcx,[rip+0x261]        # 0x1400407a4
   140040543:	jmp    0x140026c04
   140040548:	sub    rsp,0x18
   14004054c:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140040554:	lea    rax,[rip+0x4b1d]        # 0x140045078
   14004055b:	mov    QWORD PTR [rip+0x1aede],rax        # 0x14005b440
   140040562:	add    rsp,0x18
   140040566:	ret    
   140040567:	int3   
   140040568:	sub    rsp,0x18
   14004056c:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140040574:	lea    rax,[rip+0x4afd]        # 0x140045078
   14004057b:	mov    QWORD PTR [rip+0x1aec6],rax        # 0x14005b448
   140040582:	add    rsp,0x18
   140040586:	ret    
   140040587:	int3   
   140040588:	sub    rsp,0x18
   14004058c:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140040594:	lea    rax,[rip+0x4add]        # 0x140045078
   14004059b:	mov    QWORD PTR [rip+0x1aeae],rax        # 0x14005b450
   1400405a2:	add    rsp,0x18
   1400405a6:	ret    
   1400405a7:	int3   
   1400405a8:	lea    rax,[rip+0x5df9]        # 0x1400463a8
   1400405af:	mov    QWORD PTR [rip+0x1a47a],rax        # 0x14005aa30
   1400405b6:	ret    
   1400405b7:	int3   
   1400405b8:	rex push rdi
   1400405ba:	sub    rsp,0x30
   1400405be:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400405c7:	mov    QWORD PTR [rsp+0x40],rbx
   1400405cc:	cmp    QWORD PTR [rip+0x1a4f4],0x8        # 0x14005aac8
   1400405d4:	jb     0x1400405e2
   1400405d6:	mov    rcx,QWORD PTR [rip+0x1a4d3]        # 0x14005aab0
   1400405dd:	call   0x14002657c
   1400405e2:	mov    edi,0x7
   1400405e7:	mov    QWORD PTR [rip+0x1a4da],rdi        # 0x14005aac8
   1400405ee:	xor    ebx,ebx
   1400405f0:	mov    QWORD PTR [rip+0x1a4c9],rbx        # 0x14005aac0
   1400405f7:	mov    WORD PTR [rip+0x1a4b2],bx        # 0x14005aab0
   1400405fe:	cmp    QWORD PTR [rip+0x1a4a2],0x8        # 0x14005aaa8
   140040606:	jb     0x140040614
   140040608:	mov    rcx,QWORD PTR [rip+0x1a481]        # 0x14005aa90
   14004060f:	call   0x14002657c
   140040614:	mov    QWORD PTR [rip+0x1a48d],rdi        # 0x14005aaa8
   14004061b:	mov    QWORD PTR [rip+0x1a47e],rbx        # 0x14005aaa0
   140040622:	mov    WORD PTR [rip+0x1a467],bx        # 0x14005aa90
   140040629:	cmp    QWORD PTR [rip+0x1a457],0x8        # 0x14005aa88
   140040631:	jb     0x14004063f
   140040633:	mov    rcx,QWORD PTR [rip+0x1a436]        # 0x14005aa70
   14004063a:	call   0x14002657c
   14004063f:	mov    QWORD PTR [rip+0x1a442],rdi        # 0x14005aa88
   140040646:	mov    QWORD PTR [rip+0x1a433],rbx        # 0x14005aa80
   14004064d:	mov    WORD PTR [rip+0x1a41c],bx        # 0x14005aa70
   140040654:	mov    rbx,QWORD PTR [rsp+0x40]
   140040659:	add    rsp,0x30
   14004065d:	pop    rdi
   14004065e:	ret    
   14004065f:	int3   
   140040660:	lea    rcx,[rip+0x1a469]        # 0x14005aad0
   140040667:	jmp    0x140015e6c
   14004066c:	rex push rdi
   14004066e:	sub    rsp,0x30
   140040672:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004067b:	mov    QWORD PTR [rsp+0x48],rbx
   140040680:	mov    QWORD PTR [rsp+0x50],rsi
   140040685:	mov    rbx,QWORD PTR [rip+0x1c64c]        # 0x14005ccd8
   14004068c:	test   rbx,rbx
   14004068f:	je     0x1400406ee
   140040691:	cmp    QWORD PTR [rbx],0x0
   140040695:	je     0x1400406de
   140040697:	xor    edi,edi
   140040699:	cmp    DWORD PTR [rbx+0x8],edi
   14004069c:	jle    0x1400406d2
   14004069e:	xor    esi,esi
   1400406a0:	mov    rcx,QWORD PTR [rbx]
   1400406a3:	add    rcx,rsi
   1400406a6:	mov    QWORD PTR [rsp+0x40],rcx
   1400406ab:	mov    QWORD PTR [rsp+0x40],rcx
   1400406b0:	mov    rdx,QWORD PTR [rcx]
   1400406b3:	sub    rdx,0x18
   1400406b7:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400406bc:	jg     0x1400406c7
   1400406be:	mov    rcx,QWORD PTR [rdx]
   1400406c1:	mov    rax,QWORD PTR [rcx]
   1400406c4:	call   QWORD PTR [rax+0x8]
   1400406c7:	inc    edi
   1400406c9:	add    rsi,0x18
   1400406cd:	cmp    edi,DWORD PTR [rbx+0x8]
   1400406d0:	jl     0x1400406a0
   1400406d2:	mov    rcx,QWORD PTR [rbx]
   1400406d5:	call   0x1400273dc
   1400406da:	and    QWORD PTR [rbx],0x0
   1400406de:	and    DWORD PTR [rbx+0x8],0x0
   1400406e2:	and    DWORD PTR [rbx+0xc],0x0
   1400406e6:	mov    rcx,rbx
   1400406e9:	call   0x14002657c
   1400406ee:	mov    rbx,QWORD PTR [rsp+0x48]
   1400406f3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400406f8:	add    rsp,0x30
   1400406fc:	pop    rdi
   1400406fd:	ret    
   1400406fe:	int3   
   1400406ff:	int3   
   140040700:	sub    rsp,0x38
   140040704:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004070d:	cmp    BYTE PTR [rip+0x1cd64],0x0        # 0x14005d478
   140040714:	je     0x14004072a
   140040716:	mov    rcx,QWORD PTR [rip+0x1cd53]        # 0x14005d470
   14004071d:	call   QWORD PTR [rip+0xe2d]        # 0x140041550
   140040723:	mov    BYTE PTR [rip+0x1cd4e],0x0        # 0x14005d478
   14004072a:	add    rsp,0x38
   14004072e:	ret    
   14004072f:	int3   
   140040730:	sub    rsp,0x38
   140040734:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004073d:	cmp    BYTE PTR [rip+0x1cd24],0x0        # 0x14005d468
   140040744:	je     0x14004075a
   140040746:	mov    rcx,QWORD PTR [rip+0x1cd13]        # 0x14005d460
   14004074d:	mov    rax,QWORD PTR [rcx]
   140040750:	call   QWORD PTR [rax+0x10]
   140040753:	mov    BYTE PTR [rip+0x1cd0e],0x0        # 0x14005d468
   14004075a:	add    rsp,0x38
   14004075e:	ret    
   14004075f:	int3   
   140040760:	ret    0x0
   140040763:	int3   
   140040764:	lea    rcx,[rip+0x1c1e5]        # 0x14005c950
   14004076b:	jmp    0x140032024
   140040770:	sub    rsp,0x28
   140040774:	cmp    BYTE PTR [rip+0x1c245],0x0        # 0x14005c9c0
   14004077b:	lea    rax,[rip+0x4a56]        # 0x1400451d8
   140040782:	mov    QWORD PTR [rip+0x1c227],rax        # 0x14005c9b0
   140040789:	je     0x14004079d
   14004078b:	mov    rcx,QWORD PTR [rip+0x1c226]        # 0x14005c9b8
   140040792:	test   rcx,rcx
   140040795:	je     0x14004079d
   140040797:	call   QWORD PTR [rip+0xe13]        # 0x1400415b0
   14004079d:	add    rsp,0x28
   1400407a1:	ret    
   1400407a2:	int3   
   1400407a3:	int3   
   1400407a4:	lea    rax,[rip+0x4a55]        # 0x140045200
   1400407ab:	mov    QWORD PTR [rip+0x19b76],rax        # 0x14005a328
   1400407b2:	ret    

Disassembly of section .rdata:

0000000140041000 <.rdata>:
   140041000:	push   rax
   140041001:	outs   dx,BYTE PTR ds:[rsi]
   140041002:	add    eax,0x0
   140041007:	add    BYTE PTR [rsi+rbp*2+0x5],ah
   14004100b:	add    BYTE PTR [rax],al
   14004100d:	add    BYTE PTR [rax],al
   14004100f:	add    BYTE PTR [rsi+0x6e],ch
   140041012:	add    eax,0x0
   140041017:	add    BYTE PTR [rdx+0x56e],cl
   14004101d:	add    BYTE PTR [rax],al
   14004101f:	add    BYTE PTR [rsi+0x56e],bl
   140041025:	add    BYTE PTR [rax],al
   140041027:	add    BYTE PTR [rsi+0x56e],ch
   14004102d:	add    BYTE PTR [rax],al
   14004102f:	add    al,al
   140041031:	outs   dx,BYTE PTR ds:[rsi]
   140041032:	add    eax,0x0
   140041037:	add    dh,cl
   140041039:	outs   dx,BYTE PTR ds:[rsi]
   14004103a:	add    eax,0x0
   14004103f:	add    ah,bl
   140041041:	outs   dx,BYTE PTR ds:[rsi]
   140041042:	add    eax,0x0
   140041047:	add    dl,bh
   140041049:	outs   dx,BYTE PTR ds:[rsi]
   14004104a:	add    eax,0x0
   14004104f:	add    BYTE PTR [rdx],dl
   140041051:	outs   dx,DWORD PTR ds:[rsi]
   140041052:	add    eax,0x0
   140041057:	add    BYTE PTR [rdx+0x6f],cl
   14004105a:	add    eax,0x0
   14004105f:	add    BYTE PTR [rdi+rsi*2+0x5],dh
   140041066:	add    BYTE PTR [rax],al
   140041068:	movabs ds:0x8600000000000577,al
   140041071:	ja     0x140041078
   140041073:	add    BYTE PTR [rax],al
   140041075:	add    BYTE PTR [rax],al
   140041077:	add    BYTE PTR [rdx+0x77],ch
   14004107a:	add    eax,0x0
   14004107f:	add    BYTE PTR [rdi+rsi*2+0x5],cl
   140041083:	add    BYTE PTR [rax],al
   140041085:	add    BYTE PTR [rax],al
   140041087:	add    BYTE PTR [rsi],ch
   140041089:	ja     0x140041090
   14004108b:	add    BYTE PTR [rax],al
   14004108d:	add    BYTE PTR [rax],al
   14004108f:	add    BYTE PTR [rsi],cl
   140041091:	ja     0x140041098
   140041093:	add    BYTE PTR [rax],al
   140041095:	add    BYTE PTR [rax],al
   140041097:	add    ah,bh
   140041099:	jbe    0x1400410a0
   14004109b:	add    BYTE PTR [rax],al
   14004109d:	add    BYTE PTR [rax],al
   14004109f:	add    dl,ch
   1400410a1:	jbe    0x1400410a8
   1400410a3:	add    BYTE PTR [rax],al
   1400410a5:	add    BYTE PTR [rax],al
   1400410a7:	add    ah,cl
   1400410a9:	jbe    0x1400410b0
   1400410ab:	add    BYTE PTR [rax],al
   1400410ad:	add    BYTE PTR [rax],al
   1400410af:	add    BYTE PTR [rax+0x576],bh
   1400410b5:	add    BYTE PTR [rax],al
   1400410b7:	add    BYTE PTR [rax+0x576],ch
   1400410bd:	add    BYTE PTR [rax],al
   1400410bf:	add    BYTE PTR [rax+0x576],dl
   1400410c5:	add    BYTE PTR [rax],al
   1400410c7:	add    BYTE PTR [rax+0x76],bh
   1400410ca:	add    eax,0x0
   1400410cf:	add    BYTE PTR [rdx+0x76],ah
   1400410d2:	add    eax,0x0
   1400410d7:	add    BYTE PTR [rsi+0x76],cl
   1400410da:	add    eax,0x0
   1400410df:	add    BYTE PTR [rax],bh
   1400410e1:	jbe    0x1400410e8
   1400410e3:	add    BYTE PTR [rax],al
   1400410e5:	add    BYTE PTR [rax],al
   1400410e7:	add    BYTE PTR [rdx],ah
   1400410e9:	jbe    0x1400410f0
   1400410eb:	add    BYTE PTR [rax],al
   1400410ed:	add    BYTE PTR [rax],al
   1400410ef:	add    BYTE PTR [rsi+rsi*2],dl
   1400410f2:	add    eax,0x0
   1400410f7:	add    ah,bh
   1400410f9:	jne    0x140041100
   1400410fb:	add    BYTE PTR [rax],al
   1400410fd:	add    BYTE PTR [rax],al
   1400410ff:	add    dh,ah
   140041101:	jne    0x140041108
   140041103:	add    BYTE PTR [rax],al
   140041105:	add    BYTE PTR [rax],al
   140041107:	add    dh,dl
   140041109:	jne    0x140041110
   14004110b:	add    BYTE PTR [rax],al
   14004110d:	add    BYTE PTR [rax],al
   14004110f:	add    al,al
   140041111:	jne    0x140041118
   140041113:	add    BYTE PTR [rax],al
   140041115:	add    BYTE PTR [rax],al
   140041117:	add    BYTE PTR [rax+0x575],ch
   14004111d:	add    BYTE PTR [rax],al
   14004111f:	add    BYTE PTR [rsi+0x575],dl
   140041125:	add    BYTE PTR [rax],al
   140041127:	add    BYTE PTR [rbp+rsi*2+0x5],al
   14004112e:	add    BYTE PTR [rax],al
   140041130:	jo     0x1400411a7
   140041132:	add    eax,0x0
   140041137:	add    BYTE PTR [rdx+0x75],dl
   14004113a:	add    eax,0x0
   14004113f:	add    BYTE PTR [rdx],bh
   140041141:	jne    0x140041148
   140041143:	add    BYTE PTR [rax],al
   140041145:	add    BYTE PTR [rax],al
   140041147:	add    BYTE PTR [rsi],bl
   140041149:	jne    0x140041150
   14004114b:	add    BYTE PTR [rax],al
   14004114d:	add    BYTE PTR [rax],al
   14004114f:	add    BYTE PTR [rax],cl
   140041151:	jne    0x140041158
   140041153:	add    BYTE PTR [rax],al
   140041155:	add    BYTE PTR [rax],al
   140041157:	add    al,ch
   140041159:	je     0x140041160
   14004115b:	add    BYTE PTR [rax],al
   14004115d:	add    BYTE PTR [rax],al
   14004115f:	add    dh,cl
   140041161:	je     0x140041168
   140041163:	add    BYTE PTR [rax],al
   140041165:	add    BYTE PTR [rax],al
   140041167:	add    BYTE PTR [rdx+0x574],bh
   14004116d:	add    BYTE PTR [rax],al
   14004116f:	add    BYTE PTR [rsp+rsi*2+0x5],ah
   140041176:	add    BYTE PTR [rax],al
   140041178:	xchg   esi,eax
   140041179:	je     0x140041180
   14004117b:	add    BYTE PTR [rax],al
   14004117d:	add    BYTE PTR [rax],al
   14004117f:	add    BYTE PTR [rdx+0x74],bh
   140041182:	add    eax,0x0
   140041187:	add    BYTE PTR [rax+0x74],ch
   14004118a:	add    eax,0x0
   14004118f:	add    BYTE PTR [rdx+0x74],dl
   140041192:	add    eax,0x0
   140041197:	add    BYTE PTR [rax+0x74],al
   14004119a:	add    eax,0x0
   14004119f:	add    BYTE PTR [rdx],ch
   1400411a1:	je     0x1400411a8
   1400411a3:	add    BYTE PTR [rax],al
   1400411a5:	add    BYTE PTR [rax],al
   1400411a7:	add    BYTE PTR [rdx],dl
   1400411a9:	je     0x1400411b0
   1400411ab:	add    BYTE PTR [rax],al
   1400411ad:	add    BYTE PTR [rax],al
   1400411af:	add    BYTE PTR [rdx],al
   1400411b1:	je     0x1400411b8
   1400411b3:	add    BYTE PTR [rax],al
   1400411b5:	add    BYTE PTR [rax],al
   1400411b7:	add    dl,dh
   1400411b9:	jae    0x1400411c0
   1400411bb:	add    BYTE PTR [rax],al
   1400411bd:	add    BYTE PTR [rax],al
   1400411bf:	add    dl,ah
   1400411c1:	jae    0x1400411c8
   1400411c3:	add    BYTE PTR [rax],al
   1400411c5:	add    BYTE PTR [rax],al
   1400411c7:	add    ah,cl
   1400411c9:	jae    0x1400411d0
   1400411cb:	add    BYTE PTR [rax],al
   1400411cd:	add    BYTE PTR [rax],al
   1400411cf:	add    BYTE PTR [rdx+0x573],bh
	...
   1400411dd:	add    BYTE PTR [rax],al
   1400411df:	add    BYTE PTR [rax+0x57f],cl
   1400411e5:	add    BYTE PTR [rax],al
   1400411e7:	add    BYTE PTR [rsi+0x7f],dh
   1400411ea:	add    eax,0x0
   1400411ef:	add    BYTE PTR [rdi+rdi*2+0x5],bl
   1400411f6:	add    BYTE PTR [rax],al
   1400411f8:	push   rax
   1400411f9:	jg     0x140041200
   1400411fb:	add    BYTE PTR [rax],al
   1400411fd:	add    BYTE PTR [rax],al
   1400411ff:	add    BYTE PTR [rax+0x7f],al
   140041202:	add    eax,0x0
   140041207:	add    BYTE PTR [rdi+rdi*2],ah
   14004120a:	add    eax,0x0
   14004120f:	add    BYTE PTR [rdx],dl
   140041211:	jg     0x140041218
   140041213:	add    BYTE PTR [rax],al
   140041215:	add    BYTE PTR [rax],al
   140041217:	add    BYTE PTR [rax],al
   140041219:	jg     0x140041220
   14004121b:	add    BYTE PTR [rax],al
   14004121d:	add    BYTE PTR [rax],al
   14004121f:	add    dl,dh
   140041221:	jle    0x140041228
   140041223:	add    BYTE PTR [rax],al
   140041225:	add    BYTE PTR [rax],al
   140041227:	add    al,ah
   140041229:	jle    0x140041230
   14004122b:	add    BYTE PTR [rax],al
   14004122d:	add    BYTE PTR [rax],al
   14004122f:	add    al,dl
   140041231:	jle    0x140041238
   140041233:	add    BYTE PTR [rax],al
   140041235:	add    BYTE PTR [rax],al
   140041237:	add    BYTE PTR [rdx+0x57e],bh
   14004123d:	add    BYTE PTR [rax],al
   14004123f:	add    BYTE PTR [rsi+0x57e],ah
   140041245:	add    BYTE PTR [rax],al
   140041247:	add    BYTE PTR [rsi+0x57e],dl
   14004124d:	add    BYTE PTR [rax],al
   14004124f:	add    BYTE PTR [rax+0x57e],cl
   140041255:	add    BYTE PTR [rax],al
   140041257:	add    BYTE PTR [rax+0x7e],bh
   14004125a:	add    eax,0x0
   14004125f:	add    BYTE PTR [rax+0x7e],ch
   140041262:	add    eax,0x0
   140041267:	add    BYTE PTR [rsi+0x57f],ch
   14004126d:	add    BYTE PTR [rax],al
   14004126f:	add    BYTE PTR [rsi+0x57f],bh
   140041275:	add    BYTE PTR [rax],al
   140041277:	add    ah,dl
   140041279:	jg     0x140041280
   14004127b:	add    BYTE PTR [rax],al
   14004127d:	add    BYTE PTR [rax],al
   14004127f:	add    ah,ah
   140041281:	jg     0x140041288
   140041283:	add    BYTE PTR [rax],al
   140041285:	add    BYTE PTR [rax],al
   140041287:	add    ah,dh
   140041289:	jg     0x140041290
   14004128b:	add    BYTE PTR [rax],al
   14004128d:	add    BYTE PTR [rax],al
   14004128f:	add    BYTE PTR [rdx],al
   140041291:	add    BYTE PTR [rip+0x0],0x0        # 0x140041298
   140041298:	(bad)  
   140041299:	add    BYTE PTR [rip+0x0],0x0        # 0x1400412a0
   1400412a0:	xor    BYTE PTR [rax+0x5],al
   1400412a6:	add    BYTE PTR [rax],al
   1400412a8:	rex.WX add BYTE PTR [rip+0x0],0x0        # 0x1400412b0
   1400412b0:	pop    rsp
   1400412b1:	add    BYTE PTR [rip+0x0],0x0        # 0x1400412b8
   1400412b8:	ins    BYTE PTR es:[rdi],dx
   1400412b9:	add    BYTE PTR [rip+0x0],0x0        # 0x1400412c0
   1400412c0:	jl     0x140041242
   1400412c2:	add    eax,0x0
   1400412c7:	add    BYTE PTR [rsi+0x580],cl
   1400412cd:	add    BYTE PTR [rax],al
   1400412cf:	add    ah,dl
   1400412d1:	jno    0x1400412d8
   1400412d3:	add    BYTE PTR [rax],al
   1400412d5:	add    BYTE PTR [rax],al
   1400412d7:	add    BYTE PTR [rsi+0x571],dh
   1400412dd:	add    BYTE PTR [rax],al
   1400412df:	add    BYTE PTR [rax+0x571],ch
   1400412e5:	add    BYTE PTR [rax],al
   1400412e7:	add    BYTE PTR [rsi+0x571],dl
   1400412ed:	add    BYTE PTR [rax],al
   1400412ef:	add    BYTE PTR [rcx+rsi*2+0x5],al
   1400412f6:	add    BYTE PTR [rax],al
   1400412f8:	outs   dx,BYTE PTR ds:[rsi]
   1400412f9:	jno    0x140041300
   1400412fb:	add    BYTE PTR [rax],al
   1400412fd:	add    BYTE PTR [rax],al
   1400412ff:	add    BYTE PTR [rcx+rsi*2+0x5],bl
   140041303:	add    BYTE PTR [rax],al
   140041305:	add    BYTE PTR [rax],al
   140041307:	add    BYTE PTR [rsi+0x71],cl
   14004130a:	add    eax,0x0
   14004130f:	add    BYTE PTR [rsi],dh
   140041311:	jno    0x140041318
   140041313:	add    BYTE PTR [rax],al
   140041315:	add    BYTE PTR [rax],al
   140041317:	add    BYTE PTR [rax],ch
   140041319:	jno    0x140041320
   14004131b:	add    BYTE PTR [rax],al
   14004131d:	add    BYTE PTR [rax],al
   14004131f:	add    BYTE PTR [rax],bl
   140041321:	jno    0x140041328
   140041323:	add    BYTE PTR [rax],al
   140041325:	add    BYTE PTR [rax],al
   140041327:	add    BYTE PTR [rdx],al
   140041329:	jno    0x140041330
   14004132b:	add    BYTE PTR [rax],al
   14004132d:	add    BYTE PTR [rax],al
   14004132f:	add    ah,dh
   140041331:	jo     0x140041338
   140041333:	add    BYTE PTR [rax],al
   140041335:	add    BYTE PTR [rax],al
   140041337:	add    dh,bl
   140041339:	jo     0x140041340
   14004133b:	add    BYTE PTR [rax],al
   14004133d:	add    BYTE PTR [rax],al
   14004133f:	add    dh,dl
   140041341:	jo     0x140041348
   140041343:	add    BYTE PTR [rax],al
   140041345:	add    BYTE PTR [rax],al
   140041347:	add    ah,al
   140041349:	jo     0x140041350
   14004134b:	add    BYTE PTR [rax],al
   14004134d:	add    BYTE PTR [rax],al
   14004134f:	add    BYTE PTR [rsi+0x570],ch
   140041355:	add    BYTE PTR [rax],al
   140041357:	add    BYTE PTR [rax+0x570],ah
   14004135d:	add    BYTE PTR [rax],al
   14004135f:	add    BYTE PTR [rax+0x570],dl
   140041365:	add    BYTE PTR [rax],al
   140041367:	add    BYTE PTR [rax+rsi*2+0x5],bh
   14004136b:	add    BYTE PTR [rax],al
   14004136d:	add    BYTE PTR [rax],al
   14004136f:	add    BYTE PTR [rax+rsi*2+0x5],ah
   140041373:	add    BYTE PTR [rax],al
   140041375:	add    BYTE PTR [rax],al
   140041377:	add    BYTE PTR [rsi+0x70],cl
   14004137a:	add    eax,0x0
   14004137f:	add    BYTE PTR [rdx],bh
   140041381:	jo     0x140041388
   140041383:	add    BYTE PTR [rax],al
   140041385:	add    BYTE PTR [rax],al
   140041387:	add    BYTE PTR [rax+rsi*2],ch
   14004138a:	add    eax,0x0
   14004138f:	add    BYTE PTR [rax],bl
   140041391:	jo     0x140041398
   140041393:	add    BYTE PTR [rax],al
   140041395:	add    BYTE PTR [rax],al
   140041397:	add    BYTE PTR [rax],cl
   140041399:	jo     0x1400413a0
   14004139b:	add    BYTE PTR [rax],al
   14004139d:	add    BYTE PTR [rax],al
   14004139f:	add    dh,dh
   1400413a1:	outs   dx,DWORD PTR ds:[rsi]
   1400413a2:	add    eax,0x0
   1400413a7:	add    ah,ah
   1400413a9:	outs   dx,DWORD PTR ds:[rsi]
   1400413aa:	add    eax,0x0
   1400413af:	add    ah,dl
   1400413b1:	outs   dx,DWORD PTR ds:[rsi]
   1400413b2:	add    eax,0x0
   1400413b7:	add    ah,al
   1400413b9:	outs   dx,DWORD PTR ds:[rsi]
   1400413ba:	add    eax,0x0
   1400413bf:	add    BYTE PTR [rdx+0x56f],dh
   1400413c5:	add    BYTE PTR [rax],al
   1400413c7:	add    BYTE PTR [rsi+0x56f],ah
   1400413cd:	add    BYTE PTR [rax],al
   1400413cf:	add    BYTE PTR [rsi+0x56f],dl
   1400413d5:	add    BYTE PTR [rax],al
   1400413d7:	add    BYTE PTR [rsi+0x56f],al
   1400413dd:	add    BYTE PTR [rax],al
   1400413df:	add    BYTE PTR [rdi+rbp*2+0x5],dh
   1400413e3:	add    BYTE PTR [rax],al
   1400413e5:	add    BYTE PTR [rax],al
   1400413e7:	add    BYTE PTR [rsi+0x7f],ah
   1400413ea:	add    eax,0x0
   1400413ef:	add    dl,dl
   1400413f1:	ja     0x1400413f8
   1400413f3:	add    BYTE PTR [rax],al
   1400413f5:	add    BYTE PTR [rax],al
   1400413f7:	add    ah,ah
   1400413f9:	ja     0x140041400
   1400413fb:	add    BYTE PTR [rax],al
   1400413fd:	add    BYTE PTR [rax],al
   1400413ff:	add    ah,dh
   140041401:	ja     0x140041408
   140041403:	add    BYTE PTR [rax],al
   140041405:	add    BYTE PTR [rax],al
   140041407:	add    BYTE PTR [rax+rdi*2],al
   14004140a:	add    eax,0x0
   14004140f:	add    BYTE PTR [rax],dl
   140041411:	js     0x140041418
   140041413:	add    BYTE PTR [rax],al
   140041415:	add    BYTE PTR [rax],al
   140041417:	add    BYTE PTR [rax+rdi*2],ah
   14004141a:	add    eax,0x0
   14004141f:	add    BYTE PTR [rax+0x78],al
   140041422:	add    eax,0x0
   140041427:	add    BYTE PTR [rsi+0x78],dl
   14004142a:	add    eax,0x0
   14004142f:	add    BYTE PTR [rax+rdi*2+0x5],ah
   140041433:	add    BYTE PTR [rax],al
   140041435:	add    BYTE PTR [rax],al
   140041437:	add    BYTE PTR [rdx+0x78],bh
   14004143a:	add    eax,0x0
   14004143f:	add    BYTE PTR [rdx+0x578],cl
   140041445:	add    BYTE PTR [rax],al
   140041447:	add    BYTE PTR [rsi+0x578],dl
   14004144d:	add    BYTE PTR [rax],al
   14004144f:	add    BYTE PTR [rax+0x578],ch
   140041455:	add    BYTE PTR [rax],al
   140041457:	add    BYTE PTR [rsi+0x578],dh
   14004145d:	add    BYTE PTR [rax],al
   14004145f:	add    dh,bl
   140041461:	js     0x140041468
   140041463:	add    BYTE PTR [rax],al
   140041465:	add    BYTE PTR [rax],al
   140041467:	add    dh,dh
   140041469:	js     0x140041470
   14004146b:	add    BYTE PTR [rax],al
   14004146d:	add    BYTE PTR [rax],al
   14004146f:	add    BYTE PTR [rcx+rdi*2],cl
   140041472:	add    eax,0x0
   140041477:	add    BYTE PTR [rsi],bl
   140041479:	jns    0x140041480
   14004147b:	add    BYTE PTR [rax],al
   14004147d:	add    BYTE PTR [rax],al
   14004147f:	add    BYTE PTR [rax],bh
   140041481:	jns    0x140041488
   140041483:	add    BYTE PTR [rax],al
   140041485:	add    BYTE PTR [rax],al
   140041487:	add    BYTE PTR [rdx+0x79],dl
   14004148a:	add    eax,0x0
   14004148f:	add    BYTE PTR [rcx+rdi*2+0x5],ah
   140041493:	add    BYTE PTR [rax],al
   140041495:	add    BYTE PTR [rax],al
   140041497:	add    BYTE PTR [rsi+0x79],bh
   14004149a:	add    eax,0x0
   14004149f:	add    BYTE PTR [rax+0x579],bl
   1400414a5:	add    BYTE PTR [rax],al
   1400414a7:	add    BYTE PTR [rsi+0x579],ah
   1400414ad:	add    BYTE PTR [rax],al
   1400414af:	add    BYTE PTR [rdx+0x579],dh
   1400414b5:	add    BYTE PTR [rax],al
   1400414b7:	add    BYTE PTR [rsi+0x579],bh
   1400414bd:	add    BYTE PTR [rax],al
   1400414bf:	add    dl,dl
   1400414c1:	jns    0x1400414c8
   1400414c3:	add    BYTE PTR [rax],al
   1400414c5:	add    BYTE PTR [rax],al
   1400414c7:	add    ah,ah
   1400414c9:	jns    0x1400414d0
   1400414cb:	add    BYTE PTR [rax],al
   1400414cd:	add    BYTE PTR [rax],al
   1400414cf:	add    dh,ch
   1400414d1:	jns    0x1400414d8
   1400414d3:	add    BYTE PTR [rax],al
   1400414d5:	add    BYTE PTR [rax],al
   1400414d7:	add    dl,bh
   1400414d9:	jns    0x1400414e0
   1400414db:	add    BYTE PTR [rax],al
   1400414dd:	add    BYTE PTR [rax],al
   1400414df:	add    BYTE PTR [rsi],al
   1400414e1:	jp     0x1400414e8
   1400414e3:	add    BYTE PTR [rax],al
   1400414e5:	add    BYTE PTR [rax],al
   1400414e7:	add    BYTE PTR [rax],bl
   1400414e9:	jp     0x1400414f0
   1400414eb:	add    BYTE PTR [rax],al
   1400414ed:	add    BYTE PTR [rax],al
   1400414ef:	add    BYTE PTR [rsi],ah
   1400414f1:	jp     0x1400414f8
   1400414f3:	add    BYTE PTR [rax],al
   1400414f5:	add    BYTE PTR [rax],al
   1400414f7:	add    BYTE PTR [rsi],bh
   1400414f9:	jp     0x140041500
   1400414fb:	add    BYTE PTR [rax],al
   1400414fd:	add    BYTE PTR [rax],al
   1400414ff:	add    BYTE PTR [rsi+0x7a],dl
   140041502:	add    eax,0x0
   140041507:	add    BYTE PTR [rdx+0x7a],ch
   14004150a:	add    eax,0x0
   14004150f:	add    BYTE PTR [rdx+rdi*2+0x5],al
   140041516:	add    BYTE PTR [rax],al
   140041518:	cwde   
   140041519:	jp     0x140041520
   14004151b:	add    BYTE PTR [rax],al
   14004151d:	add    BYTE PTR [rax],al
   14004151f:	add    BYTE PTR [rdx+rdi*2+0x5],dh
   140041526:	add    BYTE PTR [rax],al
   140041528:	sar    BYTE PTR [rdx+0x5],0x0
   14004152c:	add    BYTE PTR [rax],al
   14004152e:	add    BYTE PTR [rax],al
   140041530:	(bad)  
   140041531:	jp     0x140041538
   140041533:	add    BYTE PTR [rax],al
   140041535:	add    BYTE PTR [rax],al
   140041537:	add    ah,bl
   140041539:	jp     0x140041540
   14004153b:	add    BYTE PTR [rax],al
   14004153d:	add    BYTE PTR [rax],al
   14004153f:	add    dh,ah
   140041541:	jp     0x140041548
   140041543:	add    BYTE PTR [rax],al
   140041545:	add    BYTE PTR [rax],al
   140041547:	add    dl,bh
   140041549:	jp     0x140041550
   14004154b:	add    BYTE PTR [rax],al
   14004154d:	add    BYTE PTR [rax],al
   14004154f:	add    BYTE PTR [rsi],cl
   140041551:	jnp    0x140041558
   140041553:	add    BYTE PTR [rax],al
   140041555:	add    BYTE PTR [rax],al
   140041557:	add    BYTE PTR [rbx+rdi*2],bl
   14004155a:	add    eax,0x0
   14004155f:	add    BYTE PTR [rsi],ch
   140041561:	jnp    0x140041568
   140041563:	add    BYTE PTR [rax],al
   140041565:	add    BYTE PTR [rax],al
   140041567:	add    BYTE PTR [rbx+rdi*2+0x5],al
   14004156b:	add    BYTE PTR [rax],al
   14004156d:	add    BYTE PTR [rax],al
   14004156f:	add    BYTE PTR [rbx+rdi*2+0x5],dl
   140041573:	add    BYTE PTR [rax],al
   140041575:	add    BYTE PTR [rax],al
   140041577:	add    BYTE PTR [rbx+rdi*2+0x5],ah
   14004157b:	add    BYTE PTR [rax],al
   14004157d:	add    BYTE PTR [rax],al
   14004157f:	add    BYTE PTR [rbx+rdi*2+0x5],dh
   140041583:	add    BYTE PTR [rax],al
   140041585:	add    BYTE PTR [rax],al
   140041587:	add    BYTE PTR [rsi+0x57b],al
   14004158d:	add    BYTE PTR [rax],al
   14004158f:	add    BYTE PTR [rdx+0x57b],bl
   140041595:	add    BYTE PTR [rax],al
   140041597:	add    BYTE PTR [rdx+0x57b],ch
   14004159d:	add    BYTE PTR [rax],al
   14004159f:	add    BYTE PTR [rdx+0x57b],bh
   1400415a5:	add    BYTE PTR [rax],al
   1400415a7:	add    dh,cl
   1400415a9:	jnp    0x1400415b0
   1400415ab:	add    BYTE PTR [rax],al
   1400415ad:	add    BYTE PTR [rax],al
   1400415af:	add    ah,ch
   1400415b1:	jnp    0x1400415b8
   1400415b3:	add    BYTE PTR [rax],al
   1400415b5:	add    BYTE PTR [rax],al
   1400415b7:	add    dl,bh
   1400415b9:	jnp    0x1400415c0
   1400415bb:	add    BYTE PTR [rax],al
   1400415bd:	add    BYTE PTR [rax],al
   1400415bf:	add    BYTE PTR [rsp+rdi*2],cl
   1400415c2:	add    eax,0x0
   1400415c7:	add    BYTE PTR [rax],ch
   1400415c9:	jl     0x1400415d0
   1400415cb:	add    BYTE PTR [rax],al
   1400415cd:	add    BYTE PTR [rax],al
   1400415cf:	add    BYTE PTR [rsp+rdi*2],dh
   1400415d2:	add    eax,0x0
   1400415d7:	add    BYTE PTR [rsi+0x7c],al
   1400415da:	add    eax,0x0
   1400415df:	add    BYTE PTR [rax+0x7c],bl
   1400415e2:	add    eax,0x0
   1400415e7:	add    BYTE PTR [rax+0x7c],ch
   1400415ea:	add    eax,0x0
   1400415ef:	add    BYTE PTR [rsi+0x57c],al
   1400415f5:	add    BYTE PTR [rax],al
   1400415f7:	add    BYTE PTR [rsi+0x57c],dl
   1400415fd:	add    BYTE PTR [rax],al
   1400415ff:	add    BYTE PTR [rsp+rdi*2+0x5],ch
   140041606:	add    BYTE PTR [rax],al
   140041608:	mov    esp,0x57c
   14004160d:	add    BYTE PTR [rax],al
   14004160f:	add    ah,cl
   140041611:	jl     0x140041618
   140041613:	add    BYTE PTR [rax],al
   140041615:	add    BYTE PTR [rax],al
   140041617:	add    al,ch
   140041619:	jl     0x140041620
   14004161b:	add    BYTE PTR [rax],al
   14004161d:	add    BYTE PTR [rax],al
   14004161f:	add    dh,dh
   140041621:	jl     0x140041628
   140041623:	add    BYTE PTR [rax],al
   140041625:	add    BYTE PTR [rax],al
   140041627:	add    BYTE PTR [rdx],al
   140041629:	jge    0x140041630
   14004162b:	add    BYTE PTR [rax],al
   14004162d:	add    BYTE PTR [rax],al
   14004162f:	add    BYTE PTR [rdx],dl
   140041631:	jge    0x140041638
   140041633:	add    BYTE PTR [rax],al
   140041635:	add    BYTE PTR [rax],al
   140041637:	add    BYTE PTR [rdi*2+0x5],ah
   14004163e:	add    BYTE PTR [rax],al
   140041640:	xor    al,0x7d
   140041642:	add    eax,0x0
   140041647:	add    BYTE PTR [rbp+rdi*2+0x5],al
   14004164b:	add    BYTE PTR [rax],al
   14004164d:	add    BYTE PTR [rax],al
   14004164f:	add    BYTE PTR [rdx+0x7d],bl
   140041652:	add    eax,0x0
   140041657:	add    BYTE PTR [rax+0x7d],ch
   14004165a:	add    eax,0x0
   14004165f:	add    BYTE PTR [rbp+rdi*2+0x5],bh
   140041663:	add    BYTE PTR [rax],al
   140041665:	add    BYTE PTR [rax],al
   140041667:	add    BYTE PTR [rbp+rdi*2+0x5],cl
   14004166e:	add    BYTE PTR [rax],al
   140041670:	(bad)  
   140041671:	jge    0x140041678
   140041673:	add    BYTE PTR [rax],al
   140041675:	add    BYTE PTR [rax],al
   140041677:	add    BYTE PTR [rsi+0x57d],ah
   14004167d:	add    BYTE PTR [rax],al
   14004167f:	add    BYTE PTR [rdx+0x57d],dh
   140041685:	add    BYTE PTR [rax],al
   140041687:	add    dl,al
   140041689:	jge    0x140041690
   14004168b:	add    BYTE PTR [rax],al
   14004168d:	add    BYTE PTR [rax],al
   14004168f:	add    al,dl
   140041691:	jge    0x140041698
   140041693:	add    BYTE PTR [rax],al
   140041695:	add    BYTE PTR [rax],al
   140041697:	add    dl,ah
   140041699:	jge    0x1400416a0
   14004169b:	add    BYTE PTR [rax],al
   14004169d:	add    BYTE PTR [rax],al
   14004169f:	add    al,bh
   1400416a1:	jge    0x1400416a8
   1400416a3:	add    BYTE PTR [rax],al
   1400416a5:	add    BYTE PTR [rax],al
   1400416a7:	add    BYTE PTR [rsi+rdi*2],dl
   1400416aa:	add    eax,0x0
   1400416af:	add    BYTE PTR [rsi],ah
   1400416b1:	jle    0x1400416b8
   1400416b3:	add    BYTE PTR [rax],al
   1400416b5:	add    BYTE PTR [rax],al
   1400416b7:	add    BYTE PTR [rax+0x7e],al
   1400416ba:	add    eax,0x0
   1400416bf:	add    BYTE PTR [rdx+0x7e],dl
   1400416c2:	add    eax,0x0
	...
   1400416cf:	add    BYTE PTR [rsi],al
   1400416d1:	add    BYTE PTR [rax],al
   1400416d3:	add    BYTE PTR [rax],al
   1400416d5:	add    BYTE PTR [rax],al
   1400416d7:	add    BYTE PTR [rax+rax*1],0x0
   1400416db:	add    BYTE PTR [rax],al
   1400416dd:	add    BYTE PTR [rax],al
   1400416df:	add    BYTE PTR [rdx],0x0
   1400416e2:	add    BYTE PTR [rax],al
   1400416e4:	add    BYTE PTR [rax],al
   1400416e6:	add    BYTE PTR [rax+0x0],al
   1400416ec:	add    BYTE PTR [rax],al
   1400416ee:	add    BYTE PTR [rax],al
   1400416f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400416f1:	jb     0x1400416f8
	...
   1400416ff:	add    dl,ch
   140041701:	jb     0x140041708
   140041703:	add    BYTE PTR [rax],al
   140041705:	add    BYTE PTR [rax],al
   140041707:	add    dh,al
   140041709:	jb     0x140041710
	...
   140041717:	add    BYTE PTR [rdx+0x73],cl
   14004171a:	add    eax,0x0
   14004171f:	add    BYTE PTR [rsi+0x73],bl
   140041722:	add    eax,0x0
   140041727:	add    BYTE PTR [rbx+rsi*2],bl
   14004172a:	add    eax,0x0
   14004172f:	add    BYTE PTR [rbx+rsi*2],dh
   140041732:	add    eax,0x0
	...
   14004173f:	add    BYTE PTR [rax],dl
   140041741:	jb     0x140041748
   140041743:	add    BYTE PTR [rax],al
   140041745:	add    BYTE PTR [rax],al
   140041747:	add    al,bh
   140041749:	jno    0x140041750
	...
   140041757:	add    BYTE PTR [rbx+rsi*2+0x5],bl
	...
   140041766:	add    BYTE PTR [rax],al
   140041768:	rex.RX jb 0x140041770
   14004176b:	add    BYTE PTR [rax],al
   14004176d:	add    BYTE PTR [rax],al
   14004176f:	add    BYTE PTR [rax+0x72],bl
   140041772:	add    eax,0x0
   140041777:	add    BYTE PTR [rdx+rsi*2+0x5],ch
   14004177b:	add    BYTE PTR [rax],al
   14004177d:	add    BYTE PTR [rax],al
   14004177f:	add    BYTE PTR [rsi+0x72],bh
   140041782:	add    eax,0x0
   140041787:	add    BYTE PTR [rdx+rsi*2],dh
   14004178a:	add    eax,0x0
	...
   140041797:	add    BYTE PTR [rax+0x73],bh
   14004179a:	add    eax,0x0
	...
   1400417af:	add    ah,ah
   1400417b1:	add    al,0x4
   1400417b3:	rex add DWORD PTR [rax],eax
   1400417b6:	add    BYTE PTR [rax],al
   1400417b8:	add    al,0x5
   1400417ba:	add    al,0x40
   1400417bc:	add    DWORD PTR [rax],eax
   1400417be:	add    BYTE PTR [rax],al
   1400417c0:	cmp    al,0x5
   1400417c2:	add    al,0x40
   1400417c4:	add    DWORD PTR [rax],eax
   1400417c6:	add    BYTE PTR [rax],al
   1400417c8:	or     al,0x2
   1400417ca:	add    al,0x40
   1400417cc:	add    DWORD PTR [rax],eax
   1400417ce:	add    BYTE PTR [rax],al
   1400417d0:	cmp    BYTE PTR [rdx],al
   1400417d2:	add    al,0x40
   1400417d4:	add    DWORD PTR [rax],eax
   1400417d6:	add    BYTE PTR [rax],al
   1400417d8:	je     0x1400417dc
   1400417da:	add    al,0x40
   1400417dc:	add    DWORD PTR [rax],eax
   1400417de:	add    BYTE PTR [rax],al
   1400417e0:	mov    al,0x2
   1400417e2:	add    al,0x40
   1400417e4:	add    DWORD PTR [rax],eax
   1400417e6:	add    BYTE PTR [rax],al
   1400417e8:	mov    esp,0x1400402
   1400417ed:	add    BYTE PTR [rax],al
   1400417ef:	add    BYTE PTR [rax],dl
   1400417f1:	add    al,0x4
   1400417f3:	rex add DWORD PTR [rax],eax
   1400417f6:	add    BYTE PTR [rax],al
   1400417f8:	(bad)  
   1400417f9:	add    al,0x4
   1400417fb:	rex add DWORD PTR [rax],eax
   1400417fe:	add    BYTE PTR [rax],al
   140041800:	ins    BYTE PTR es:[rdi],dx
   140041801:	add    al,0x4
   140041803:	rex add DWORD PTR [rax],eax
   140041806:	add    BYTE PTR [rax],al
   140041808:	js     0x14004180e
   14004180a:	add    al,0x40
   14004180c:	add    DWORD PTR [rax],eax
   14004180e:	add    BYTE PTR [rax],al
   140041810:	test   BYTE PTR [rsp+rax*1],al
   140041813:	rex add DWORD PTR [rax],eax
	...
   140041826:	add    BYTE PTR [rax],al
   140041828:	mov    ah,0x6a
   14004182a:	add    al,BYTE PTR [rax+0x1]
   14004182d:	add    BYTE PTR [rax],al
   14004182f:	add    BYTE PTR [rax+0x1400295],ah
   140041835:	add    BYTE PTR [rax],al
   140041837:	add    BYTE PTR [rsp+riz*4+0x2],ch
   14004183b:	rex add DWORD PTR [rax],eax
   14004183e:	add    BYTE PTR [rax],al
   140041840:	in     al,dx
   140041841:	retf   
   140041842:	add    al,BYTE PTR [rax+0x1]
   140041845:	add    BYTE PTR [rax],al
   140041847:	add    BYTE PTR [rsi+rdi*2],dh
   14004184a:	add    al,BYTE PTR [rax+0x1]
	...
   14004185d:	add    BYTE PTR [rax],al
   14004185f:	add    BYTE PTR [rsi+rbp*4],bl
   140041862:	add    al,BYTE PTR [rax+0x1]
   140041865:	add    BYTE PTR [rax],al
   140041867:	add    al,bh
   140041869:	sbb    al,BYTE PTR [rbx]
   14004186b:	rex add DWORD PTR [rax],eax
   14004186e:	add    BYTE PTR [rax],al
   140041870:	test   ah,cl
   140041872:	add    al,BYTE PTR [rax+0x1]
	...
   140041891:	add    BYTE PTR [rax],al
   140041893:	add    BYTE PTR [rdx-0x4b],al
   140041896:	adc    DWORD PTR [rax+0x0],edx
   140041899:	add    BYTE PTR [rax],al
   14004189b:	add    BYTE PTR [rdx],al
   14004189d:	add    BYTE PTR [rax],al
   14004189f:	add    BYTE PTR [rsi],ah
   1400418a1:	add    BYTE PTR [rax],al
   1400418a3:	add    BYTE PTR [rax-0x6ffffb52],dl
   1400418a9:	(bad)  
   1400418aa:	add    al,0x0
   1400418ac:	add    BYTE PTR [rax],al
   1400418ae:	add    BYTE PTR [rax],al
   1400418b0:	rex.X mov bpl,0x11
   1400418b3:	push   rax
   1400418b4:	add    BYTE PTR [rax],al
   1400418b6:	add    BYTE PTR [rax],al
   1400418b8:	or     al,0x0
   1400418ba:	add    BYTE PTR [rax],al
   1400418bc:	adc    BYTE PTR [rax],al
   1400418be:	add    BYTE PTR [rax],al
   1400418c0:	mov    eax,0xb80004ae
   1400418c5:	(bad)  
   1400418c6:	add    al,0x0
   1400418c8:	enter  0x4ae,0x40
   1400418cc:	add    DWORD PTR [rax],eax
   1400418ce:	add    BYTE PTR [rax],al
   1400418d0:	cmp    BYTE PTR [rbp+0x2],ch
   1400418d3:	rex add DWORD PTR [rax],eax
   1400418d6:	add    BYTE PTR [rax],al
   1400418d8:	rex scas eax,DWORD PTR es:[rdi]
   1400418da:	add    al,0x40
   1400418dc:	add    DWORD PTR [rax],eax
   1400418de:	add    BYTE PTR [rax],al
   1400418e0:	adc    al,0x6e
   1400418e2:	add    al,BYTE PTR [rax+0x1]
   1400418e5:	add    BYTE PTR [rax],al
   1400418e7:	add    BYTE PTR [rax+0x140029f],bl
   1400418ed:	add    BYTE PTR [rax],al
   1400418ef:	add    BYTE PTR [rdx+0x61],ah
   1400418f2:	and    BYTE PTR fs:[rcx+0x6c],ah
   1400418f6:	ins    BYTE PTR es:[rdi],dx
   1400418f7:	outs   dx,DWORD PTR ds:[rsi]
   1400418f8:	movsxd esp,DWORD PTR [rcx+0x74]
   1400418fb:	imul   ebp,DWORD PTR [rdi+0x6e],0xb7800000
   140041902:	add    eax,0x140
   140041907:	add    BYTE PTR [rax],ah
   140041909:	mov    eax,0x14005
   14004190e:	add    BYTE PTR [rax],al
   140041910:	add    eax,0xbc00000
	...
   14004191d:	add    BYTE PTR [rax],al
   14004191f:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c41925
	...
   14004192d:	add    BYTE PTR [rax],al
   14004192f:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   14004193d:	add    BYTE PTR [rax],al
   14004193f:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   14004194d:	add    BYTE PTR [rax],al
   14004194f:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   14004195d:	add    BYTE PTR [rax],al
   14004195f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   14004196d:	add    BYTE PTR [rax],al
   14004196f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   14004197d:	add    BYTE PTR [rax],al
   14004197f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14004198d:	add    BYTE PTR [rax],al
   14004198f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   14004199d:	add    BYTE PTR [rax],al
   14004199f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   1400419ad:	add    BYTE PTR [rax],al
   1400419af:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   1400419be:	add    BYTE PTR [rax],al
   1400419c0:	mov    ch,0x2
   1400419c2:	add    al,al
   1400419c4:	or     BYTE PTR [rax],al
	...
   1400419ce:	add    BYTE PTR [rax],al
   1400419d0:	or     al,0x0
   1400419d2:	add    BYTE PTR [rax],al
   1400419d4:	rol    BYTE PTR [rax],0x0
   1400419d7:	add    BYTE PTR [rbx],al
   1400419d9:	add    BYTE PTR [rax],al
   1400419db:	add    BYTE PTR [rcx],cl
   1400419dd:	add    BYTE PTR [rax],al
   1400419df:	add    BYTE PTR [rbx+0x6f],al
   1400419e2:	jb     0x140041a29
   1400419e4:	js     0x140041a4f
   1400419e6:	je     0x140041a38
   1400419e8:	jb     0x140041a59
   1400419ea:	movsxd esp,DWORD PTR [rbp+0x73]
   1400419ed:	jae    0x1400419ef
   1400419ef:	add    BYTE PTR [rdx],al
   1400419f1:	add    BYTE PTR [rax],al
   1400419f3:	add    BYTE PTR [rax],al
   1400419f5:	add    BYTE PTR [rax],al
   1400419f7:	add    BYTE PTR [rax+0x1b],ah
   1400419fa:	add    al,0x40
   1400419fc:	add    DWORD PTR [rax],eax
   1400419fe:	add    BYTE PTR [rax],al
   140041a00:	or     BYTE PTR [rax],al
   140041a02:	add    BYTE PTR [rax],al
   140041a04:	add    BYTE PTR [rax],al
   140041a06:	add    BYTE PTR [rax],al
   140041a08:	rcr    BYTE PTR [rbx],0x4
   140041a0b:	rex add DWORD PTR [rax],eax
   140041a0e:	add    BYTE PTR [rax],al
   140041a10:	or     DWORD PTR [rax],eax
   140041a12:	add    BYTE PTR [rax],al
   140041a14:	add    BYTE PTR [rax],al
   140041a16:	add    BYTE PTR [rax],al
   140041a18:	and    BYTE PTR [rsp+rax*1],bl
   140041a1b:	rex add DWORD PTR [rax],eax
   140041a1e:	add    BYTE PTR [rax],al
   140041a20:	or     al,BYTE PTR [rax]
   140041a22:	add    BYTE PTR [rax],al
   140041a24:	add    BYTE PTR [rax],al
   140041a26:	add    BYTE PTR [rax],al
   140041a28:	sbb    BYTE PTR [rsp+rax*1],0x40
   140041a2c:	add    DWORD PTR [rax],eax
   140041a2e:	add    BYTE PTR [rax],al
   140041a30:	adc    BYTE PTR [rax],al
   140041a32:	add    BYTE PTR [rax],al
   140041a34:	add    BYTE PTR [rax],al
   140041a36:	add    BYTE PTR [rax],al
   140041a38:	rcr    BYTE PTR [rsp+rax*1],1
   140041a3b:	rex add DWORD PTR [rax],eax
   140041a3e:	add    BYTE PTR [rax],al
   140041a40:	adc    DWORD PTR [rax],eax
   140041a42:	add    BYTE PTR [rax],al
   140041a44:	add    BYTE PTR [rax],al
   140041a46:	add    BYTE PTR [rax],al
   140041a48:	xor    BYTE PTR [rip+0x14004],bl        # 0x140055a52
   140041a4e:	add    BYTE PTR [rax],al
   140041a50:	adc    al,BYTE PTR [rax]
   140041a52:	add    BYTE PTR [rax],al
   140041a54:	add    BYTE PTR [rax],al
   140041a56:	add    BYTE PTR [rax],al
   140041a58:	nop
   140041a59:	sbb    eax,0x14004
   140041a5e:	add    BYTE PTR [rax],al
   140041a60:	adc    eax,DWORD PTR [rax]
   140041a62:	add    BYTE PTR [rax],al
   140041a64:	add    BYTE PTR [rax],al
   140041a66:	add    BYTE PTR [rax],al
   140041a68:	loopne 0x140041a87
   140041a6a:	add    al,0x40
   140041a6c:	add    DWORD PTR [rax],eax
   140041a6e:	add    BYTE PTR [rax],al
   140041a70:	sbb    BYTE PTR [rax],al
   140041a72:	add    BYTE PTR [rax],al
   140041a74:	add    BYTE PTR [rax],al
   140041a76:	add    BYTE PTR [rax],al
   140041a78:	rex (bad) 
   140041a7a:	add    al,0x40
   140041a7c:	add    DWORD PTR [rax],eax
   140041a7e:	add    BYTE PTR [rax],al
   140041a80:	sbb    DWORD PTR [rax],eax
   140041a82:	add    BYTE PTR [rax],al
   140041a84:	add    BYTE PTR [rax],al
   140041a86:	add    BYTE PTR [rax],al
   140041a88:	mov    al,0x1e
   140041a8a:	add    al,0x40
   140041a8c:	add    DWORD PTR [rax],eax
   140041a8e:	add    BYTE PTR [rax],al
   140041a90:	sbb    al,BYTE PTR [rax]
   140041a92:	add    BYTE PTR [rax],al
   140041a94:	add    BYTE PTR [rax],al
   140041a96:	add    BYTE PTR [rax],al
   140041a98:	add    BYTE PTR [rdi],bl
   140041a9a:	add    al,0x40
   140041a9c:	add    DWORD PTR [rax],eax
   140041a9e:	add    BYTE PTR [rax],al
   140041aa0:	sbb    eax,DWORD PTR [rax]
   140041aa2:	add    BYTE PTR [rax],al
   140041aa4:	add    BYTE PTR [rax],al
   140041aa6:	add    BYTE PTR [rax],al
   140041aa8:	jo     0x140041ac9
   140041aaa:	add    al,0x40
   140041aac:	add    DWORD PTR [rax],eax
   140041aae:	add    BYTE PTR [rax],al
   140041ab0:	sbb    al,0x0
   140041ab2:	add    BYTE PTR [rax],al
   140041ab4:	add    BYTE PTR [rax],al
   140041ab6:	add    BYTE PTR [rax],al
   140041ab8:	loopne 0x140041ad9
   140041aba:	add    al,0x40
   140041abc:	add    DWORD PTR [rax],eax
   140041abe:	add    BYTE PTR [rax],al
   140041ac0:	(bad)  
   140041ac1:	add    BYTE PTR [rax],al
   140041ac3:	add    BYTE PTR [rax],al
   140041ac5:	add    BYTE PTR [rax],al
   140041ac7:	add    BYTE PTR [rax],dh
   140041ac9:	and    BYTE PTR [rax+rax*2],al
   140041acc:	add    DWORD PTR [rax],eax
   140041ace:	add    BYTE PTR [rax],al
   140041ad0:	(bad)  
   140041ad1:	add    BYTE PTR [rax],al
   140041ad3:	add    BYTE PTR [rax],al
   140041ad5:	add    BYTE PTR [rax],al
   140041ad7:	add    BYTE PTR [rax+0x20],dh
   140041ada:	add    al,0x40
   140041adc:	add    DWORD PTR [rax],eax
   140041ade:	add    BYTE PTR [rax],al
   140041ae0:	and    BYTE PTR [rax],al
   140041ae2:	add    BYTE PTR [rax],al
   140041ae4:	add    BYTE PTR [rax],al
   140041ae6:	add    BYTE PTR [rax],al
   140041ae8:	rex and DWORD PTR [rax+rax*2],eax
   140041aec:	add    DWORD PTR [rax],eax
   140041aee:	add    BYTE PTR [rax],al
   140041af0:	and    DWORD PTR [rax],eax
   140041af2:	add    BYTE PTR [rax],al
   140041af4:	add    BYTE PTR [rax],al
   140041af6:	add    BYTE PTR [rax],al
   140041af8:	mov    al,0x21
   140041afa:	add    al,0x40
   140041afc:	add    DWORD PTR [rax],eax
   140041afe:	add    BYTE PTR [rax],al
   140041b00:	and    al,BYTE PTR [rax]
   140041b02:	add    BYTE PTR [rax],al
   140041b04:	add    BYTE PTR [rax],al
   140041b06:	add    BYTE PTR [rax],al
   140041b08:	movabs al,ds:0x7800000001400423
   140041b11:	add    BYTE PTR [rax],al
   140041b13:	add    BYTE PTR [rax],al
   140041b15:	add    BYTE PTR [rax],al
   140041b17:	add    BYTE PTR [rax],cl
   140041b19:	and    al,0x4
   140041b1b:	rex add DWORD PTR [rax],eax
   140041b1e:	add    BYTE PTR [rax],al
   140041b20:	jns    0x140041b22
   140041b22:	add    BYTE PTR [rax],al
   140041b24:	add    BYTE PTR [rax],al
   140041b26:	add    BYTE PTR [rax],al
   140041b28:	sub    BYTE PTR [rsp+rax*1],ah
   140041b2b:	rex add DWORD PTR [rax],eax
   140041b2e:	add    BYTE PTR [rax],al
   140041b30:	jp     0x140041b32
   140041b32:	add    BYTE PTR [rax],al
   140041b34:	add    BYTE PTR [rax],al
   140041b36:	add    BYTE PTR [rax],al
   140041b38:	rex.W and al,0x4
   140041b3b:	rex add DWORD PTR [rax],eax
   140041b3e:	add    BYTE PTR [rax],al
   140041b40:	cld    
   140041b41:	add    BYTE PTR [rax],al
   140041b43:	add    BYTE PTR [rax],al
   140041b45:	add    BYTE PTR [rax],al
   140041b47:	add    BYTE PTR [rsp+0x4],ah
   140041b4b:	rex add DWORD PTR [rax],eax
   140041b4e:	add    BYTE PTR [rax],al
   140041b50:	inc    DWORD PTR [rax]
   140041b52:	add    BYTE PTR [rax],al
   140041b54:	add    BYTE PTR [rax],al
   140041b56:	add    BYTE PTR [rax],al
   140041b58:	jo     0x140041b7e
   140041b5a:	add    al,0x40
   140041b5c:	add    DWORD PTR [rax],eax
   140041b5e:	add    BYTE PTR [rax],al
   140041b60:	push   rdx
   140041b61:	add    BYTE PTR [rsi],dh
   140041b63:	add    BYTE PTR [rax],dh
   140041b65:	add    BYTE PTR [rax],dh
   140041b67:	add    BYTE PTR [rdx],dh
   140041b69:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d04256f
   140041b6f:	add    BYTE PTR [rax],ah
   140041b71:	add    BYTE PTR [rsi+0x0],ah
   140041b74:	ins    BYTE PTR es:[rdi],dx
   140041b75:	add    BYTE PTR [rdi+0x0],ch
   140041b78:	(bad)  
   140041b79:	add    BYTE PTR [rax+rax*1+0x69],dh
   140041b7d:	add    BYTE PTR [rsi+0x0],ch
   140041b80:	add    BYTE PTR [eax],ah
   140041b83:	add    BYTE PTR [rax+0x0],dh
   140041b86:	outs   dx,DWORD PTR ds:[rsi]
   140041b87:	add    BYTE PTR [rcx+0x0],ch
   140041b8a:	outs   dx,BYTE PTR ds:[rsi]
   140041b8b:	add    BYTE PTR [rax+rax*1+0x20],dh
   140041b8f:	add    BYTE PTR [rbx+0x0],dh
   140041b92:	jne    0x140041b94
   140041b94:	jo     0x140041b96
   140041b96:	jo     0x140041b98
   140041b98:	outs   dx,DWORD PTR ds:[rsi]
   140041b99:	add    BYTE PTR [rdx+0x0],dh
   140041b9c:	je     0x140041b9e
   140041b9e:	and    BYTE PTR [rax],al
   140041ba0:	outs   dx,BYTE PTR ds:[rsi]
   140041ba1:	add    BYTE PTR [rdi+0x0],ch
   140041ba4:	je     0x140041ba6
   140041ba6:	and    BYTE PTR [rax],al
   140041ba8:	ins    BYTE PTR es:[rdi],dx
   140041ba9:	add    BYTE PTR [rdi+0x0],ch
   140041bac:	(bad)  
   140041bad:	add    BYTE PTR [rax+rax*1+0x65],ah
   140041bb1:	add    BYTE PTR [rax+rax*1+0xd],ah
   140041bb5:	add    BYTE PTR [rdx],cl
	...
   140041bbf:	add    BYTE PTR [rdx+0x0],dl
   140041bc2:	add    BYTE PTR ss:[rax],dh
   140041bc5:	add    BYTE PTR [rax],dh
   140041bc7:	add    BYTE PTR [rax],bh
   140041bc9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0425cf
   140041bcf:	add    BYTE PTR [rax],ah
   140041bd1:	add    BYTE PTR [rsi+0x0],ch
   140041bd4:	outs   dx,DWORD PTR ds:[rsi]
   140041bd5:	add    BYTE PTR [rax+rax*1+0x20],dh
   140041bd9:	add    BYTE PTR [rbp+0x0],ah
   140041bdc:	outs   dx,BYTE PTR ds:[rsi]
   140041bdd:	add    BYTE PTR [rdi+0x0],ch
   140041be0:	jne    0x140041be2
   140041be2:	add    BYTE PTR [eax+0x0],ch
   140041be6:	and    BYTE PTR [rax],al
   140041be8:	jae    0x140041bea
   140041bea:	jo     0x140041bec
   140041bec:	(bad)  
   140041bed:	add    BYTE PTR [rbx+0x0],ah
   140041bf0:	add    BYTE PTR gs:[rax],ah
   140041bf3:	add    BYTE PTR [rsi+0x0],ah
   140041bf6:	outs   dx,DWORD PTR ds:[rsi]
   140041bf7:	add    BYTE PTR [rdx+0x0],dh
   140041bfa:	and    BYTE PTR [rax],al
   140041bfc:	(bad)  
   140041bfd:	add    BYTE PTR [rdx+0x0],dh
   140041c00:	add    BYTE PTR [ebp+0x0],dh
   140041c04:	ins    DWORD PTR es:[rdi],dx
   140041c05:	add    BYTE PTR [rbp+0x0],ah
   140041c08:	outs   dx,BYTE PTR ds:[rsi]
   140041c09:	add    BYTE PTR [rax+rax*1+0x73],dh
   140041c0d:	add    BYTE PTR [rip+0xa00],cl        # 0x140042613
	...
   140041c1f:	add    BYTE PTR [rdx+0x0],dl
   140041c22:	add    BYTE PTR ss:[rax],dh
   140041c25:	add    BYTE PTR [rax],dh
   140041c27:	add    BYTE PTR [rcx],bh
   140041c29:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d04262f
   140041c2f:	add    BYTE PTR [rax],ah
   140041c31:	add    BYTE PTR [rsi+0x0],ch
   140041c34:	outs   dx,DWORD PTR ds:[rsi]
   140041c35:	add    BYTE PTR [rax+rax*1+0x20],dh
   140041c39:	add    BYTE PTR [rbp+0x0],ah
   140041c3c:	outs   dx,BYTE PTR ds:[rsi]
   140041c3d:	add    BYTE PTR [rdi+0x0],ch
   140041c40:	jne    0x140041c42
   140041c42:	add    BYTE PTR [eax+0x0],ch
   140041c46:	and    BYTE PTR [rax],al
   140041c48:	jae    0x140041c4a
   140041c4a:	jo     0x140041c4c
   140041c4c:	(bad)  
   140041c4d:	add    BYTE PTR [rbx+0x0],ah
   140041c50:	add    BYTE PTR gs:[rax],ah
   140041c53:	add    BYTE PTR [rsi+0x0],ah
   140041c56:	outs   dx,DWORD PTR ds:[rsi]
   140041c57:	add    BYTE PTR [rdx+0x0],dh
   140041c5a:	and    BYTE PTR [rax],al
   140041c5c:	add    BYTE PTR gs:[rsi+0x0],ch
   140041c60:	jbe    0x140041c62
   140041c62:	imul   eax,DWORD PTR [rax],0x6f0072
   140041c68:	outs   dx,BYTE PTR ds:[rsi]
   140041c69:	add    BYTE PTR [rbp+0x0],ch
   140041c6c:	add    BYTE PTR gs:[rsi+0x0],ch
   140041c70:	je     0x140041c72
   140041c72:	or     eax,0xa00
	...
   140041c7f:	add    BYTE PTR [rdx+0x0],dl
   140041c82:	add    BYTE PTR ss:[rax],dh
   140041c85:	add    BYTE PTR [rcx],dh
   140041c87:	add    BYTE PTR [rax],dh
   140041c89:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d04268f
   140041c8f:	add    BYTE PTR [rax],ah
   140041c91:	add    BYTE PTR [rcx+0x0],ah
   140041c94:	(bad)  
   140041c95:	add    BYTE PTR [rdi+0x0],ch
   140041c98:	jb     0x140041c9a
   140041c9a:	je     0x140041c9c
   140041c9c:	sub    BYTE PTR [rax],al
   140041c9e:	sub    DWORD PTR [rax],eax
   140041ca0:	and    BYTE PTR [rax],al
   140041ca2:	push   0x73006100
   140041ca7:	add    BYTE PTR [rax],ah
   140041ca9:	add    BYTE PTR [rdx+0x0],ah
   140041cac:	add    BYTE PTR gs:[rbp+0x0],ah
   140041cb0:	outs   dx,BYTE PTR ds:[rsi]
   140041cb1:	add    BYTE PTR [rax],ah
   140041cb3:	add    BYTE PTR [rbx+0x0],ah
   140041cb6:	(bad)  
   140041cb7:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140041cbb:	add    BYTE PTR [rbp+0x0],ah
   140041cbe:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x1400426c5
	...
   140041ccd:	add    BYTE PTR [rax],al
   140041ccf:	add    BYTE PTR [rdx+0x0],dl
   140041cd2:	add    BYTE PTR ss:[rax],dh
   140041cd5:	add    BYTE PTR [rcx],dh
   140041cd7:	add    BYTE PTR [rsi],dh
   140041cd9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0426df
   140041cdf:	add    BYTE PTR [rax],ah
   140041ce1:	add    BYTE PTR [rsi+0x0],ch
   140041ce4:	outs   dx,DWORD PTR ds:[rsi]
   140041ce5:	add    BYTE PTR [rax+rax*1+0x20],dh
   140041ce9:	add    BYTE PTR [rbp+0x0],ah
   140041cec:	outs   dx,BYTE PTR ds:[rsi]
   140041ced:	add    BYTE PTR [rdi+0x0],ch
   140041cf0:	jne    0x140041cf2
   140041cf2:	add    BYTE PTR [eax+0x0],ch
   140041cf6:	and    BYTE PTR [rax],al
   140041cf8:	jae    0x140041cfa
   140041cfa:	jo     0x140041cfc
   140041cfc:	(bad)  
   140041cfd:	add    BYTE PTR [rbx+0x0],ah
   140041d00:	add    BYTE PTR gs:[rax],ah
   140041d03:	add    BYTE PTR [rsi+0x0],ah
   140041d06:	outs   dx,DWORD PTR ds:[rsi]
   140041d07:	add    BYTE PTR [rdx+0x0],dh
   140041d0a:	and    BYTE PTR [rax],al
   140041d0c:	je     0x140041d0e
   140041d0e:	push   0x65007200
   140041d13:	add    BYTE PTR [rcx+0x0],ah
   140041d16:	add    BYTE PTR fs:[rax],ah
   140041d19:	add    BYTE PTR [rax+rax*1+0x61],ah
   140041d1d:	add    BYTE PTR [rax+rax*1+0x61],dh
   140041d21:	add    BYTE PTR [rip+0xa00],cl        # 0x140042727
	...
   140041d2f:	add    BYTE PTR [rdx+0x0],dl
   140041d32:	add    BYTE PTR ss:[rax],dh
   140041d35:	add    BYTE PTR [rcx],dh
   140041d37:	add    BYTE PTR [rdi],dh
   140041d39:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d04273f
   140041d3f:	add    BYTE PTR [rax],ah
   140041d41:	add    BYTE PTR [rbp+0x0],dh
   140041d44:	outs   dx,BYTE PTR ds:[rsi]
   140041d45:	add    BYTE PTR [rbp+0x0],ah
   140041d48:	js     0x140041d4a
   140041d4a:	jo     0x140041d4c
   140041d4c:	add    BYTE PTR gs:[rbx+0x0],ah
   140041d50:	je     0x140041d52
   140041d52:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140041d57:	add    BYTE PTR [rbp+0x0],ch
   140041d5a:	jne    0x140041d5c
   140041d5c:	ins    BYTE PTR es:[rdi],dx
   140041d5d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140041d61:	add    BYTE PTR [rax+rax*1+0x68],dh
   140041d65:	add    BYTE PTR [rdx+0x0],dh
   140041d68:	add    BYTE PTR gs:[rcx+0x0],ah
   140041d6c:	add    BYTE PTR fs:[rax],ah
   140041d6f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140041d73:	add    BYTE PTR [rbx+0x0],ah
   140041d76:	imul   eax,DWORD PTR [rax],0x20
   140041d79:	add    BYTE PTR [rbp+0x0],ah
   140041d7c:	jb     0x140041d7e
   140041d7e:	jb     0x140041d80
   140041d80:	outs   dx,DWORD PTR ds:[rsi]
   140041d81:	add    BYTE PTR [rdx+0x0],dh
   140041d84:	or     eax,0xa00
   140041d89:	add    BYTE PTR [rax],al
   140041d8b:	add    BYTE PTR [rax],al
   140041d8d:	add    BYTE PTR [rax],al
   140041d8f:	add    BYTE PTR [rdx+0x0],dl
   140041d92:	add    BYTE PTR ss:[rax],dh
   140041d95:	add    BYTE PTR [rcx],dh
   140041d97:	add    BYTE PTR [rax],bh
   140041d99:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d04279f
   140041d9f:	add    BYTE PTR [rax],ah
   140041da1:	add    BYTE PTR [rbp+0x0],dh
   140041da4:	outs   dx,BYTE PTR ds:[rsi]
   140041da5:	add    BYTE PTR [rbp+0x0],ah
   140041da8:	js     0x140041daa
   140041daa:	jo     0x140041dac
   140041dac:	add    BYTE PTR gs:[rbx+0x0],ah
   140041db0:	je     0x140041db2
   140041db2:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140041db7:	add    BYTE PTR [rax+0x0],ch
   140041dba:	add    BYTE PTR gs:[rcx+0x0],ah
   140041dbe:	jo     0x140041dc0
   140041dc0:	and    BYTE PTR [rax],al
   140041dc2:	add    BYTE PTR gs:[rdx+0x0],dh
   140041dc6:	jb     0x140041dc8
   140041dc8:	outs   dx,DWORD PTR ds:[rsi]
   140041dc9:	add    BYTE PTR [rdx+0x0],dh
   140041dcc:	or     eax,0xa00
	...
   140041ddd:	add    BYTE PTR [rax],al
   140041ddf:	add    BYTE PTR [rdx+0x0],dl
   140041de2:	add    BYTE PTR ss:[rax],dh
   140041de5:	add    BYTE PTR [rcx],dh
   140041de7:	add    BYTE PTR [rcx],bh
   140041de9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0427ef
   140041def:	add    BYTE PTR [rax],ah
   140041df1:	add    BYTE PTR [rbp+0x0],dh
   140041df4:	outs   dx,BYTE PTR ds:[rsi]
   140041df5:	add    BYTE PTR [rcx+0x0],ah
   140041df8:	(bad)  
   140041df9:	add    BYTE PTR [rax+rax*1+0x65],ch
   140041dfd:	add    BYTE PTR [rax],ah
   140041dff:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140041e03:	add    BYTE PTR [rax],ah
   140041e05:	add    BYTE PTR [rdi+0x0],ch
   140041e08:	jo     0x140041e0a
   140041e0a:	add    BYTE PTR gs:[rsi+0x0],ch
   140041e0e:	and    BYTE PTR [rax],al
   140041e10:	movsxd eax,DWORD PTR [rax]
   140041e12:	outs   dx,DWORD PTR ds:[rsi]
   140041e13:	add    BYTE PTR [rsi+0x0],ch
   140041e16:	jae    0x140041e18
   140041e18:	outs   dx,DWORD PTR ds:[rsi]
   140041e19:	add    BYTE PTR [rax+rax*1+0x65],ch
   140041e1d:	add    BYTE PTR [rax],ah
   140041e1f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140041e23:	add    BYTE PTR [rsi+0x0],dh
   140041e26:	imul   eax,DWORD PTR [rax],0x650063
   140041e2c:	or     eax,0xa00
	...
   140041e3d:	add    BYTE PTR [rax],al
   140041e3f:	add    BYTE PTR [rdx+0x0],dl
   140041e42:	add    BYTE PTR ss:[rax],dh
   140041e45:	add    BYTE PTR [rdx],dh
   140041e47:	add    BYTE PTR [rax+rax*1],dh
   140041e4a:	or     eax,0x2d000a00
   140041e4f:	add    BYTE PTR [rax],ah
   140041e51:	add    BYTE PTR [rsi+0x0],ch
   140041e54:	outs   dx,DWORD PTR ds:[rsi]
   140041e55:	add    BYTE PTR [rax+rax*1+0x20],dh
   140041e59:	add    BYTE PTR [rbp+0x0],ah
   140041e5c:	outs   dx,BYTE PTR ds:[rsi]
   140041e5d:	add    BYTE PTR [rdi+0x0],ch
   140041e60:	jne    0x140041e62
   140041e62:	add    BYTE PTR [eax+0x0],ch
   140041e66:	and    BYTE PTR [rax],al
   140041e68:	jae    0x140041e6a
   140041e6a:	jo     0x140041e6c
   140041e6c:	(bad)  
   140041e6d:	add    BYTE PTR [rbx+0x0],ah
   140041e70:	add    BYTE PTR gs:[rax],ah
   140041e73:	add    BYTE PTR [rsi+0x0],ah
   140041e76:	outs   dx,DWORD PTR ds:[rsi]
   140041e77:	add    BYTE PTR [rdx+0x0],dh
   140041e7a:	and    BYTE PTR [rax],al
   140041e7c:	pop    rdi
   140041e7d:	add    BYTE PTR [rdi+0x0],ch
   140041e80:	outs   dx,BYTE PTR ds:[rsi]
   140041e81:	add    BYTE PTR [rbp+0x0],ah
   140041e84:	js     0x140041e86
   140041e86:	imul   eax,DWORD PTR [rax],0x2f0074
   140041e8c:	(bad)  
   140041e8d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140041e91:	add    BYTE PTR [rax+0x0],bh
   140041e94:	imul   eax,DWORD PTR [rax],0x200074
   140041e9a:	je     0x140041e9c
   140041e9c:	(bad)  
   140041e9d:	add    BYTE PTR [rdx+0x0],ah
   140041ea0:	ins    BYTE PTR es:[rdi],dx
   140041ea1:	add    BYTE PTR [rbp+0x0],ah
   140041ea4:	or     eax,0xa00
   140041ea9:	add    BYTE PTR [rax],al
   140041eab:	add    BYTE PTR [rax],al
   140041ead:	add    BYTE PTR [rax],al
   140041eaf:	add    BYTE PTR [rdx+0x0],dl
   140041eb2:	add    BYTE PTR ss:[rax],dh
   140041eb5:	add    BYTE PTR [rdx],dh
   140041eb7:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a042bbd
   140041ebd:	add    BYTE PTR [rip+0x70002000],ch        # 0x1b0043ec3
   140041ec3:	add    BYTE PTR [rbp+0x0],dh
   140041ec6:	jb     0x140041ec8
   140041ec8:	add    BYTE PTR gs:[rax],ah
   140041ecb:	add    BYTE PTR [rsi+0x0],dh
   140041ece:	imul   eax,DWORD PTR [rax],0x740072
   140041ed4:	jne    0x140041ed6
   140041ed6:	(bad)  
   140041ed7:	add    BYTE PTR [rax+rax*1+0x20],ch
   140041edb:	add    BYTE PTR [rsi+0x0],ah
   140041ede:	jne    0x140041ee0
   140041ee0:	outs   dx,BYTE PTR ds:[rsi]
   140041ee1:	add    BYTE PTR [rbx+0x0],ah
   140041ee4:	je     0x140041ee6
   140041ee6:	imul   eax,DWORD PTR [rax],0x6e006f
   140041eec:	and    BYTE PTR [rax],al
   140041eee:	movsxd eax,DWORD PTR [rax]
   140041ef0:	(bad)  
   140041ef1:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140041ef5:	add    BYTE PTR [rip+0xa00],cl        # 0x1400428fb
   140041efb:	add    BYTE PTR [rax],al
   140041efd:	add    BYTE PTR [rax],al
   140041eff:	add    BYTE PTR [rdx+0x0],dl
   140041f02:	add    BYTE PTR ss:[rax],dh
   140041f05:	add    BYTE PTR [rdx],dh
   140041f07:	add    BYTE PTR [rsi],dh
   140041f09:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d04290f
   140041f0f:	add    BYTE PTR [rax],ah
   140041f11:	add    BYTE PTR [rsi+0x0],ch
   140041f14:	outs   dx,DWORD PTR ds:[rsi]
   140041f15:	add    BYTE PTR [rax+rax*1+0x20],dh
   140041f19:	add    BYTE PTR [rbp+0x0],ah
   140041f1c:	outs   dx,BYTE PTR ds:[rsi]
   140041f1d:	add    BYTE PTR [rdi+0x0],ch
   140041f20:	jne    0x140041f22
   140041f22:	add    BYTE PTR [eax+0x0],ch
   140041f26:	and    BYTE PTR [rax],al
   140041f28:	jae    0x140041f2a
   140041f2a:	jo     0x140041f2c
   140041f2c:	(bad)  
   140041f2d:	add    BYTE PTR [rbx+0x0],ah
   140041f30:	add    BYTE PTR gs:[rax],ah
   140041f33:	add    BYTE PTR [rsi+0x0],ah
   140041f36:	outs   dx,DWORD PTR ds:[rsi]
   140041f37:	add    BYTE PTR [rdx+0x0],dh
   140041f3a:	and    BYTE PTR [rax],al
   140041f3c:	jae    0x140041f3e
   140041f3e:	je     0x140041f40
   140041f40:	add    BYTE PTR fs:[rcx+0x0],ch
   140041f44:	outs   dx,DWORD PTR ds:[rsi]
   140041f45:	add    BYTE PTR [rax],ah
   140041f47:	add    BYTE PTR [rcx+0x0],ch
   140041f4a:	outs   dx,BYTE PTR ds:[rsi]
   140041f4b:	add    BYTE PTR [rcx+0x0],ch
   140041f4e:	je     0x140041f50
   140041f50:	imul   eax,DWORD PTR [rax],0x6c0061
   140041f56:	imul   eax,DWORD PTR [rax],0x61007a
   140041f5c:	je     0x140041f5e
   140041f5e:	imul   eax,DWORD PTR [rax],0x6e006f
   140041f64:	or     eax,0xa00
   140041f69:	add    BYTE PTR [rax],al
   140041f6b:	add    BYTE PTR [rax],al
   140041f6d:	add    BYTE PTR [rax],al
   140041f6f:	add    BYTE PTR [rdx+0x0],dl
   140041f72:	add    BYTE PTR ss:[rax],dh
   140041f75:	add    BYTE PTR [rdx],dh
   140041f77:	add    BYTE PTR [rdi],dh
   140041f79:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d04297f
   140041f7f:	add    BYTE PTR [rax],ah
   140041f81:	add    BYTE PTR [rsi+0x0],ch
   140041f84:	outs   dx,DWORD PTR ds:[rsi]
   140041f85:	add    BYTE PTR [rax+rax*1+0x20],dh
   140041f89:	add    BYTE PTR [rbp+0x0],ah
   140041f8c:	outs   dx,BYTE PTR ds:[rsi]
   140041f8d:	add    BYTE PTR [rdi+0x0],ch
   140041f90:	jne    0x140041f92
   140041f92:	add    BYTE PTR [eax+0x0],ch
   140041f96:	and    BYTE PTR [rax],al
   140041f98:	jae    0x140041f9a
   140041f9a:	jo     0x140041f9c
   140041f9c:	(bad)  
   140041f9d:	add    BYTE PTR [rbx+0x0],ah
   140041fa0:	add    BYTE PTR gs:[rax],ah
   140041fa3:	add    BYTE PTR [rsi+0x0],ah
   140041fa6:	outs   dx,DWORD PTR ds:[rsi]
   140041fa7:	add    BYTE PTR [rdx+0x0],dh
   140041faa:	and    BYTE PTR [rax],al
   140041fac:	ins    BYTE PTR es:[rdi],dx
   140041fad:	add    BYTE PTR [rdi+0x0],ch
   140041fb0:	ja     0x140041fb2
   140041fb2:	imul   eax,DWORD PTR [rax],0x20006f
   140041fb8:	imul   eax,DWORD PTR [rax],0x69006e
   140041fbe:	je     0x140041fc0
   140041fc0:	imul   eax,DWORD PTR [rax],0x6c0061
   140041fc6:	imul   eax,DWORD PTR [rax],0x61007a
   140041fcc:	je     0x140041fce
   140041fce:	imul   eax,DWORD PTR [rax],0x6e006f
   140041fd4:	or     eax,0xa00
   140041fd9:	add    BYTE PTR [rax],al
   140041fdb:	add    BYTE PTR [rax],al
   140041fdd:	add    BYTE PTR [rax],al
   140041fdf:	add    BYTE PTR [rdx+0x0],dl
   140041fe2:	add    BYTE PTR ss:[rax],dh
   140041fe5:	add    BYTE PTR [rdx],dh
   140041fe7:	add    BYTE PTR [rax],bh
   140041fe9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0429ef
   140041fef:	add    BYTE PTR [rax],ah
   140041ff1:	add    BYTE PTR [rbp+0x0],dh
   140041ff4:	outs   dx,BYTE PTR ds:[rsi]
   140041ff5:	add    BYTE PTR [rcx+0x0],ah
   140041ff8:	(bad)  
   140041ff9:	add    BYTE PTR [rax+rax*1+0x65],ch
   140041ffd:	add    BYTE PTR [rax],ah
   140041fff:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140042003:	add    BYTE PTR [rax],ah
   140042005:	add    BYTE PTR [rcx+0x0],ch
   140042008:	outs   dx,BYTE PTR ds:[rsi]
   140042009:	add    BYTE PTR [rcx+0x0],ch
   14004200c:	je     0x14004200e
   14004200e:	imul   eax,DWORD PTR [rax],0x6c0061
   140042014:	imul   eax,DWORD PTR [rax],0x65007a
   14004201a:	and    BYTE PTR [rax],al
   14004201c:	push   0x61006500
   140042021:	add    BYTE PTR [rax+0x0],dh
   140042024:	or     eax,0xa00
   140042029:	add    BYTE PTR [rax],al
   14004202b:	add    BYTE PTR [rax],al
   14004202d:	add    BYTE PTR [rax],al
   14004202f:	add    BYTE PTR [rdx+0x0],dl
   140042032:	add    BYTE PTR ss:[rax],dh
   140042035:	add    BYTE PTR [rbx],dh
   140042037:	add    BYTE PTR [rax],dh
   140042039:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d042a3f
   14004203f:	add    BYTE PTR [rax],ah
   140042041:	add    BYTE PTR [rbx+0x0],al
   140042044:	push   rdx
   140042045:	add    BYTE PTR [rax+rax*1+0x20],dl
   140042049:	add    BYTE PTR [rsi+0x0],ch
   14004204c:	outs   dx,DWORD PTR ds:[rsi]
   14004204d:	add    BYTE PTR [rax+rax*1+0x20],dh
   140042051:	add    BYTE PTR [rcx+0x0],ch
   140042054:	outs   dx,BYTE PTR ds:[rsi]
   140042055:	add    BYTE PTR [rcx+0x0],ch
   140042058:	je     0x14004205a
   14004205a:	imul   eax,DWORD PTR [rax],0x6c0061
   140042060:	imul   eax,DWORD PTR [rax],0x65007a
   140042066:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x140042a6d
   14004206d:	add    BYTE PTR [rax],al
   14004206f:	add    BYTE PTR [rdx+0x0],dl
   140042072:	add    BYTE PTR ss:[rax],dh
   140042075:	add    BYTE PTR [rbx],dh
   140042077:	add    BYTE PTR [rcx],dh
   140042079:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d042a7f
   14004207f:	add    BYTE PTR [rax],ah
   140042081:	add    BYTE PTR [rcx+0x0],al
   140042084:	je     0x140042086
   140042086:	je     0x140042088
   140042088:	add    BYTE PTR gs:[rbp+0x0],ch
   14004208c:	jo     0x14004208e
   14004208e:	je     0x140042090
   140042090:	and    BYTE PTR [rax],al
   140042092:	je     0x140042094
   140042094:	outs   dx,DWORD PTR ds:[rsi]
   140042095:	add    BYTE PTR [rax],ah
   140042097:	add    BYTE PTR [rcx+0x0],ch
   14004209a:	outs   dx,BYTE PTR ds:[rsi]
   14004209b:	add    BYTE PTR [rcx+0x0],ch
   14004209e:	je     0x1400420a0
   1400420a0:	imul   eax,DWORD PTR [rax],0x6c0061
   1400420a6:	imul   eax,DWORD PTR [rax],0x65007a
   1400420ac:	and    BYTE PTR [rax],al
   1400420ae:	je     0x1400420b0
   1400420b0:	push   0x20006500
   1400420b5:	add    BYTE PTR [rbx+0x0],al
   1400420b8:	push   rdx
   1400420b9:	add    BYTE PTR [rax+rax*1+0x20],dl
   1400420bd:	add    BYTE PTR [rbp+0x0],ch
   1400420c0:	outs   dx,DWORD PTR ds:[rsi]
   1400420c1:	add    BYTE PTR [rdx+0x0],dh
   1400420c4:	add    BYTE PTR gs:[rax],ah
   1400420c7:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400420cb:	add    BYTE PTR [rcx+0x0],ah
   1400420ce:	outs   dx,BYTE PTR ds:[rsi]
   1400420cf:	add    BYTE PTR [rax],ah
   1400420d1:	add    BYTE PTR [rdi+0x0],ch
   1400420d4:	outs   dx,BYTE PTR ds:[rsi]
   1400420d5:	add    BYTE PTR [rbx+0x0],ah
   1400420d8:	add    BYTE PTR gs:[rsi],ch
   1400420db:	add    BYTE PTR [rdx],cl
   1400420dd:	add    BYTE PTR [rax+rax*1+0x68],dl
   1400420e1:	add    BYTE PTR [rcx+0x0],ch
   1400420e4:	jae    0x1400420e6
   1400420e6:	and    BYTE PTR [rax],al
   1400420e8:	imul   eax,DWORD PTR [rax],0x64006e
   1400420ee:	imul   eax,DWORD PTR [rax],0x610063
   1400420f4:	je     0x1400420f6
   1400420f6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400420fa:	and    BYTE PTR [rax],al
   1400420fc:	(bad)  
   1400420fd:	add    BYTE PTR [rax],ah
   1400420ff:	add    BYTE PTR [rdx+0x0],ah
   140042102:	jne    0x140042104
   140042104:	add    BYTE PTR [eax],ah
   140042107:	add    BYTE PTR [rcx+0x0],ch
   14004210a:	outs   dx,BYTE PTR ds:[rsi]
   14004210b:	add    BYTE PTR [rax],ah
   14004210d:	add    BYTE PTR [rcx+0x0],bh
   140042110:	outs   dx,DWORD PTR ds:[rsi]
   140042111:	add    BYTE PTR [rbp+0x0],dh
   140042114:	jb     0x140042116
   140042116:	and    BYTE PTR [rax],al
   140042118:	(bad)  
   140042119:	add    BYTE PTR [rax+0x0],dh
   14004211c:	jo     0x14004211e
   14004211e:	ins    BYTE PTR es:[rdi],dx
   14004211f:	add    BYTE PTR [rcx+0x0],ch
   140042122:	movsxd eax,DWORD PTR [rax]
   140042124:	(bad)  
   140042125:	add    BYTE PTR [rax+rax*1+0x69],dh
   140042129:	add    BYTE PTR [rdi+0x0],ch
   14004212c:	outs   dx,BYTE PTR ds:[rsi]
   14004212d:	add    BYTE PTR [rsi],ch
   14004212f:	add    BYTE PTR [rip+0xa00],cl        # 0x140042b35
	...
   14004213d:	add    BYTE PTR [rax],al
   14004213f:	add    BYTE PTR [rdx+0x0],dl
   140042142:	add    BYTE PTR ss:[rax],dh
   140042145:	add    BYTE PTR [rbx],dh
   140042147:	add    BYTE PTR [rdx],dh
   140042149:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d042b4f
   14004214f:	add    BYTE PTR [rax],ah
   140042151:	add    BYTE PTR [rsi+0x0],ch
   140042154:	outs   dx,DWORD PTR ds:[rsi]
   140042155:	add    BYTE PTR [rax+rax*1+0x20],dh
   140042159:	add    BYTE PTR [rbp+0x0],ah
   14004215c:	outs   dx,BYTE PTR ds:[rsi]
   14004215d:	add    BYTE PTR [rdi+0x0],ch
   140042160:	jne    0x140042162
   140042162:	add    BYTE PTR [eax+0x0],ch
   140042166:	and    BYTE PTR [rax],al
   140042168:	jae    0x14004216a
   14004216a:	jo     0x14004216c
   14004216c:	(bad)  
   14004216d:	add    BYTE PTR [rbx+0x0],ah
   140042170:	add    BYTE PTR gs:[rax],ah
   140042173:	add    BYTE PTR [rsi+0x0],ah
   140042176:	outs   dx,DWORD PTR ds:[rsi]
   140042177:	add    BYTE PTR [rdx+0x0],dh
   14004217a:	and    BYTE PTR [rax],al
   14004217c:	ins    BYTE PTR es:[rdi],dx
   14004217d:	add    BYTE PTR [rdi+0x0],ch
   140042180:	movsxd eax,DWORD PTR [rax]
   140042182:	(bad)  
   140042183:	add    BYTE PTR [rax+rax*1+0x65],ch
   140042187:	add    BYTE PTR [rax],ah
   140042189:	add    BYTE PTR [rcx+0x0],ch
   14004218c:	outs   dx,BYTE PTR ds:[rsi]
   14004218d:	add    BYTE PTR [rsi+0x0],ah
   140042190:	outs   dx,DWORD PTR ds:[rsi]
   140042191:	add    BYTE PTR [rdx+0x0],dh
   140042194:	ins    DWORD PTR es:[rdi],dx
   140042195:	add    BYTE PTR [rcx+0x0],ah
   140042198:	je     0x14004219a
   14004219a:	imul   eax,DWORD PTR [rax],0x6e006f
   1400421a0:	or     eax,0xa00
	...
   1400421ad:	add    BYTE PTR [rax],al
   1400421af:	add    BYTE PTR [rdx+0x0],dl
   1400421b2:	add    BYTE PTR ss:[rax],dh
   1400421b5:	add    BYTE PTR [rbx],dh
   1400421b7:	add    BYTE PTR [rbx],dh
   1400421b9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d042bbf
   1400421bf:	add    BYTE PTR [rax],ah
   1400421c1:	add    BYTE PTR [rcx+0x0],al
   1400421c4:	je     0x1400421c6
   1400421c6:	je     0x1400421c8
   1400421c8:	add    BYTE PTR gs:[rbp+0x0],ch
   1400421cc:	jo     0x1400421ce
   1400421ce:	je     0x1400421d0
   1400421d0:	and    BYTE PTR [rax],al
   1400421d2:	je     0x1400421d4
   1400421d4:	outs   dx,DWORD PTR ds:[rsi]
   1400421d5:	add    BYTE PTR [rax],ah
   1400421d7:	add    BYTE PTR [rbp+0x0],dh
   1400421da:	jae    0x1400421dc
   1400421dc:	add    BYTE PTR gs:[rax],ah
   1400421df:	add    BYTE PTR [rbp+0x0],cl
   1400421e2:	push   rbx
   1400421e3:	add    BYTE PTR [rcx+0x0],cl
   1400421e6:	rex.WR add BYTE PTR [rax],r12b
   1400421e9:	add    BYTE PTR [rbx+0x0],ah
   1400421ec:	outs   dx,DWORD PTR ds:[rsi]
   1400421ed:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400421f1:	add    BYTE PTR [rax],ah
   1400421f3:	add    BYTE PTR [rsi+0x0],ah
   1400421f6:	jb     0x1400421f8
   1400421f8:	outs   dx,DWORD PTR ds:[rsi]
   1400421f9:	add    BYTE PTR [rbp+0x0],ch
   1400421fc:	and    BYTE PTR [rax],al
   1400421fe:	je     0x140042200
   140042200:	push   0x73006900
   140042205:	add    BYTE PTR [rax],ah
   140042207:	add    BYTE PTR [rcx+0x0],ah
   14004220a:	jae    0x14004220c
   14004220c:	jae    0x14004220e
   14004220e:	add    BYTE PTR gs:[rbp+0x0],ch
   140042212:	(bad)  
   140042213:	add    BYTE PTR [rax+rax*1+0x79],ch
   140042217:	add    BYTE PTR [rax],ah
   140042219:	add    BYTE PTR [rax+rax*1+0x75],ah
   14004221d:	add    BYTE PTR [rdx+0x0],dh
   140042220:	imul   eax,DWORD PTR [rax],0x67006e
   140042226:	and    BYTE PTR [rax],al
   140042228:	outs   dx,BYTE PTR ds:[rsi]
   140042229:	add    BYTE PTR [rcx+0x0],ah
   14004222c:	je     0x14004222e
   14004222e:	imul   eax,DWORD PTR [rax],0x650076
   140042234:	and    BYTE PTR [rax],al
   140042236:	movsxd eax,DWORD PTR [rax]
   140042238:	outs   dx,DWORD PTR ds:[rsi]
   140042239:	add    BYTE PTR [rax+rax*1+0x65],ah
   14004223d:	add    BYTE PTR [rax],ah
   14004223f:	add    BYTE PTR [rcx+0x0],ch
   140042242:	outs   dx,BYTE PTR ds:[rsi]
   140042243:	add    BYTE PTR [rcx+0x0],ch
   140042246:	je     0x140042248
   140042248:	imul   eax,DWORD PTR [rax],0x6c0061
   14004224e:	imul   eax,DWORD PTR [rax],0x61007a
   140042254:	je     0x140042256
   140042256:	imul   eax,DWORD PTR [rax],0x6e006f
   14004225c:	or     al,BYTE PTR [rax]
   14004225e:	push   rsp
   14004225f:	add    BYTE PTR [rax+0x0],ch
   140042262:	imul   eax,DWORD PTR [rax],0x200073
   140042268:	imul   eax,DWORD PTR [rax],0x64006e
   14004226e:	imul   eax,DWORD PTR [rax],0x610063
   140042274:	je     0x140042276
   140042276:	add    BYTE PTR gs:[rbx+0x0],dh
   14004227a:	and    BYTE PTR [rax],al
   14004227c:	(bad)  
   14004227d:	add    BYTE PTR [rax],ah
   14004227f:	add    BYTE PTR [rdx+0x0],ah
   140042282:	jne    0x140042284
   140042284:	add    BYTE PTR [eax],ah
   140042287:	add    BYTE PTR [rcx+0x0],ch
   14004228a:	outs   dx,BYTE PTR ds:[rsi]
   14004228b:	add    BYTE PTR [rax],ah
   14004228d:	add    BYTE PTR [rcx+0x0],bh
   140042290:	outs   dx,DWORD PTR ds:[rsi]
   140042291:	add    BYTE PTR [rbp+0x0],dh
   140042294:	jb     0x140042296
   140042296:	and    BYTE PTR [rax],al
   140042298:	(bad)  
   140042299:	add    BYTE PTR [rax+0x0],dh
   14004229c:	jo     0x14004229e
   14004229e:	ins    BYTE PTR es:[rdi],dx
   14004229f:	add    BYTE PTR [rcx+0x0],ch
   1400422a2:	movsxd eax,DWORD PTR [rax]
   1400422a4:	(bad)  
   1400422a5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400422a9:	add    BYTE PTR [rdi+0x0],ch
   1400422ac:	outs   dx,BYTE PTR ds:[rsi]
   1400422ad:	add    BYTE PTR [rsi],ch
   1400422af:	add    BYTE PTR [rax],ah
   1400422b1:	add    BYTE PTR [rcx+0x0],cl
   1400422b4:	je     0x1400422b6
   1400422b6:	and    BYTE PTR [rax],al
   1400422b8:	imul   eax,DWORD PTR [rax],0x200073
   1400422be:	ins    DWORD PTR es:[rdi],dx
   1400422bf:	add    BYTE PTR [rdi+0x0],ch
   1400422c2:	jae    0x1400422c4
   1400422c4:	je     0x1400422c6
   1400422c6:	and    BYTE PTR [rax],al
   1400422c8:	ins    BYTE PTR es:[rdi],dx
   1400422c9:	add    BYTE PTR [rcx+0x0],ch
   1400422cc:	imul   eax,DWORD PTR [rax],0x65
   1400422cf:	add    BYTE PTR [rax+rax*1+0x79],ch
   1400422d3:	add    BYTE PTR [rax],ah
   1400422d5:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400422d9:	add    BYTE PTR [rbp+0x0],ah
   1400422dc:	and    BYTE PTR [rax],al
   1400422de:	jb     0x1400422e0
   1400422e0:	add    BYTE PTR gs:[rbx+0x0],dh
   1400422e4:	jne    0x1400422e6
   1400422e6:	ins    BYTE PTR es:[rdi],dx
   1400422e7:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400422eb:	add    BYTE PTR [rdi+0x0],ch
   1400422ee:	data16 add BYTE PTR [rax],ah
   1400422f1:	add    BYTE PTR [rbx+0x0],ah
   1400422f4:	(bad)  
   1400422f5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400422f9:	add    BYTE PTR [rcx+0x0],ch
   1400422fc:	outs   dx,BYTE PTR ds:[rsi]
   1400422fd:	add    BYTE PTR [rdi+0x0],ah
   140042300:	and    BYTE PTR [rax],al
   140042302:	(bad)  
   140042303:	add    BYTE PTR [rsi+0x0],ch
   140042306:	and    BYTE PTR [rax],al
   140042308:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14004230c:	rex.WB add BYTE PTR [r8+rax*1+0x2d],cl
   140042311:	add    BYTE PTR [rbx+0x0],ah
   140042314:	outs   dx,DWORD PTR ds:[rsi]
   140042315:	add    BYTE PTR [rbp+0x0],ch
   140042318:	jo     0x14004231a
   14004231a:	imul   eax,DWORD PTR [rax],0x65006c
   140042320:	add    BYTE PTR fs:[rax],ah
   140042323:	add    BYTE PTR [rax],ch
   140042325:	add    BYTE PTR [rdi],ch
   140042327:	add    BYTE PTR [rbx+0x0],ah
   14004232a:	ins    BYTE PTR es:[rdi],dx
   14004232b:	add    BYTE PTR [rdx+0x0],dh
   14004232e:	sub    DWORD PTR [rax],eax
   140042330:	and    BYTE PTR [rax],al
   140042332:	data16 add BYTE PTR [rbp+0x0],dh
   140042336:	outs   dx,BYTE PTR ds:[rsi]
   140042337:	add    BYTE PTR [rbx+0x0],ah
   14004233a:	je     0x14004233c
   14004233c:	imul   eax,DWORD PTR [rax],0x6e006f
   140042342:	and    BYTE PTR [rax],al
   140042344:	data16 add BYTE PTR [rdx+0x0],dh
   140042348:	outs   dx,DWORD PTR ds:[rsi]
   140042349:	add    BYTE PTR [rbp+0x0],ch
   14004234c:	and    BYTE PTR [rax],al
   14004234e:	(bad)  
   14004234f:	add    BYTE PTR [rax],ah
   140042351:	add    BYTE PTR [rsi+0x0],ch
   140042354:	(bad)  
   140042355:	add    BYTE PTR [rax+rax*1+0x69],dh
   140042359:	add    BYTE PTR [rsi+0x0],dh
   14004235c:	add    BYTE PTR gs:[rax],ah
   14004235f:	add    BYTE PTR [rbx+0x0],ah
   140042362:	outs   dx,DWORD PTR ds:[rsi]
   140042363:	add    BYTE PTR [rsi+0x0],ch
   140042366:	jae    0x140042368
   140042368:	je     0x14004236a
   14004236a:	jb     0x14004236c
   14004236c:	jne    0x14004236e
   14004236e:	movsxd eax,DWORD PTR [rax]
   140042370:	je     0x140042372
   140042372:	outs   dx,DWORD PTR ds:[rsi]
   140042373:	add    BYTE PTR [rdx+0x0],dh
   140042376:	and    BYTE PTR [rax],al
   140042378:	outs   dx,DWORD PTR ds:[rsi]
   140042379:	add    BYTE PTR [rdx+0x0],dh
   14004237c:	and    BYTE PTR [rax],al
   14004237e:	data16 add BYTE PTR [rdx+0x0],dh
   140042382:	outs   dx,DWORD PTR ds:[rsi]
   140042383:	add    BYTE PTR [rbp+0x0],ch
   140042386:	and    BYTE PTR [rax],al
   140042388:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   14004238d:	add    BYTE PTR [rbp+0x0],cl
   140042390:	(bad)  
   140042391:	add    BYTE PTR [rcx+0x0],ch
   140042394:	outs   dx,BYTE PTR ds:[rsi]
   140042395:	add    BYTE PTR [rsi],ch
   140042397:	add    BYTE PTR [rip+0xa00],cl        # 0x140042d9d
   14004239d:	add    BYTE PTR [rax],al
   14004239f:	add    BYTE PTR [rdx+0x0],dl
   1400423a2:	add    BYTE PTR ss:[rax],dh
   1400423a5:	add    BYTE PTR [rbx],dh
   1400423a7:	add    BYTE PTR [rax+rax*1],dh
   1400423aa:	or     eax,0x2d000a00
   1400423af:	add    BYTE PTR [rax],ah
   1400423b1:	add    BYTE PTR [rcx+0x0],ch
   1400423b4:	outs   dx,BYTE PTR ds:[rsi]
   1400423b5:	add    BYTE PTR [rbx+0x0],ah
   1400423b8:	outs   dx,DWORD PTR ds:[rsi]
   1400423b9:	add    BYTE PTR [rsi+0x0],ch
   1400423bc:	jae    0x1400423be
   1400423be:	imul   eax,DWORD PTR [rax],0x740073
   1400423c4:	add    BYTE PTR gs:[rsi+0x0],ch
   1400423c8:	je     0x1400423ca
   1400423ca:	and    BYTE PTR [rax],al
   1400423cc:	outs   dx,DWORD PTR ds:[rsi]
   1400423cd:	add    BYTE PTR [rsi+0x0],ch
   1400423d0:	add    BYTE PTR gs:[rax+0x0],bh
   1400423d4:	imul   eax,DWORD PTR [rax],0x200074
   1400423da:	(bad)  
   1400423db:	add    BYTE PTR [rbp+0x0],ah
   1400423de:	add    BYTE PTR [ecx+0x0],ch
   1400423e2:	outs   dx,BYTE PTR ds:[rsi]
   1400423e3:	add    BYTE PTR [rip+0x6e006500],ch        # 0x1ae0488e9
   1400423e9:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400423ed:	add    BYTE PTR [rsi+0x0],dh
   1400423f0:	(bad)  
   1400423f1:	add    BYTE PTR [rdx+0x0],dh
   1400423f4:	imul   eax,DWORD PTR [rax],0x620061
   1400423fa:	ins    BYTE PTR es:[rdi],dx
   1400423fb:	add    BYTE PTR [rbp+0x0],ah
   1400423fe:	jae    0x140042400
   140042400:	or     eax,0xa00
   140042405:	add    BYTE PTR [rax],al
   140042407:	add    BYTE PTR [rax+rax*1+0x4f],al
   14004240b:	add    BYTE PTR [rbp+0x0],cl
   14004240e:	add    BYTE PTR [r9+0x0],cl
   140042412:	rex.WRX add BYTE PTR [rax],r12b
   140042415:	add    BYTE PTR [rbp+0x0],ah
   140042418:	jb     0x14004241a
   14004241a:	jb     0x14004241c
   14004241c:	outs   dx,DWORD PTR ds:[rsi]
   14004241d:	add    BYTE PTR [rdx+0x0],dh
   140042420:	or     eax,0xa00
   140042425:	add    BYTE PTR [rax],al
   140042427:	add    BYTE PTR [rbx+0x0],dl
   14004242a:	rex.WB add BYTE PTR [r14+0x0],cl
   14004242e:	rex.RXB add BYTE PTR [r8],r12b
   140042431:	add    BYTE PTR [rbp+0x0],ah
   140042434:	jb     0x140042436
   140042436:	jb     0x140042438
   140042438:	outs   dx,DWORD PTR ds:[rsi]
   140042439:	add    BYTE PTR [rdx+0x0],dh
   14004243c:	or     eax,0xa00
   140042441:	add    BYTE PTR [rax],al
   140042443:	add    BYTE PTR [rax],al
   140042445:	add    BYTE PTR [rax],al
   140042447:	add    BYTE PTR [rax+rax*1+0x4c],dl
   14004244b:	add    BYTE PTR [rdi+0x0],cl
   14004244e:	push   rbx
   14004244f:	add    BYTE PTR [rbx+0x0],dl
   140042452:	and    BYTE PTR [rax],al
   140042454:	add    BYTE PTR gs:[rdx+0x0],dh
   140042458:	jb     0x14004245a
   14004245a:	outs   dx,DWORD PTR ds:[rsi]
   14004245b:	add    BYTE PTR [rdx+0x0],dh
   14004245e:	or     eax,0xa00
   140042463:	add    BYTE PTR [rip+0xa00],cl        # 0x140042e69
   140042469:	add    BYTE PTR [rax],al
   14004246b:	add    BYTE PTR [rax],al
   14004246d:	add    BYTE PTR [rax],al
   14004246f:	add    BYTE PTR [rdx+0x0],dh
   140042472:	jne    0x140042474
   140042474:	outs   dx,BYTE PTR ds:[rsi]
   140042475:	add    BYTE PTR [rax+rax*1+0x69],dh
   140042479:	add    BYTE PTR [rbp+0x0],ch
   14004247c:	add    BYTE PTR gs:[rax],ah
   14004247f:	add    BYTE PTR [rbp+0x0],ah
   140042482:	jb     0x140042484
   140042484:	jb     0x140042486
   140042486:	outs   dx,DWORD PTR ds:[rsi]
   140042487:	add    BYTE PTR [rdx+0x0],dh
   14004248a:	and    BYTE PTR [rax],al
   14004248c:	add    BYTE PTR [rax],al
   14004248e:	add    BYTE PTR [rax],al
   140042490:	push   rdx
   140042491:	add    BYTE PTR [rbp+0x0],dh
   140042494:	outs   dx,BYTE PTR ds:[rsi]
   140042495:	add    BYTE PTR [rax+rax*1+0x69],dh
   140042499:	add    BYTE PTR [rbp+0x0],ch
   14004249c:	add    BYTE PTR gs:[rax],ah
   14004249f:	add    BYTE PTR [rbp+0x0],al
   1400424a2:	jb     0x1400424a4
   1400424a4:	jb     0x1400424a6
   1400424a6:	outs   dx,DWORD PTR ds:[rsi]
   1400424a7:	add    BYTE PTR [rdx+0x0],dh
   1400424aa:	and    DWORD PTR [rax],eax
   1400424ac:	or     al,BYTE PTR [rax]
   1400424ae:	or     al,BYTE PTR [rax]
   1400424b0:	push   rax
   1400424b1:	add    BYTE PTR [rdx+0x0],dh
   1400424b4:	outs   dx,DWORD PTR ds:[rsi]
   1400424b5:	add    BYTE PTR [rdi+0x0],ah
   1400424b8:	jb     0x1400424ba
   1400424ba:	(bad)  
   1400424bb:	add    BYTE PTR [rbp+0x0],ch
   1400424be:	cmp    al,BYTE PTR [rax]
   1400424c0:	and    BYTE PTR [rax],al
   1400424c2:	add    BYTE PTR [rax],al
   1400424c4:	add    BYTE PTR [rax],al
   1400424c6:	add    BYTE PTR [rax],al
   1400424c8:	cmp    al,0x0
   1400424ca:	jo     0x1400424cc
   1400424cc:	jb     0x1400424ce
   1400424ce:	outs   dx,DWORD PTR ds:[rsi]
   1400424cf:	add    BYTE PTR [rdi+0x0],ah
   1400424d2:	jb     0x1400424d4
   1400424d4:	(bad)  
   1400424d5:	add    BYTE PTR [rbp+0x0],ch
   1400424d8:	and    BYTE PTR [rax],al
   1400424da:	outs   dx,BYTE PTR ds:[rsi]
   1400424db:	add    BYTE PTR [rcx+0x0],ah
   1400424de:	ins    DWORD PTR es:[rdi],dx
   1400424df:	add    BYTE PTR [rbp+0x0],ah
   1400424e2:	and    BYTE PTR [rax],al
   1400424e4:	jne    0x1400424e6
   1400424e6:	outs   dx,BYTE PTR ds:[rsi]
   1400424e7:	add    BYTE PTR [rbx+0x0],ch
   1400424ea:	outs   dx,BYTE PTR ds:[rsi]
   1400424eb:	add    BYTE PTR [rdi+0x0],ch
   1400424ee:	ja     0x1400424f0
   1400424f0:	outs   dx,BYTE PTR ds:[rsi]
   1400424f1:	add    BYTE PTR [rsi],bh
   1400424f3:	add    BYTE PTR [rax],al
   1400424f5:	add    BYTE PTR [rax],al
   1400424f7:	add    BYTE PTR [rsi],ch
   1400424f9:	add    BYTE PTR [rsi],ch
   1400424fb:	add    BYTE PTR [rsi],ch
   1400424fd:	add    BYTE PTR [rax],al
   1400424ff:	add    BYTE PTR [rdx],cl
   140042501:	add    BYTE PTR [rdx],cl
	...
   14004250f:	add    BYTE PTR [rbp+0x0],cl
   140042512:	imul   eax,DWORD PTR [rax],0x720063
   140042518:	outs   dx,DWORD PTR ds:[rsi]
   140042519:	add    BYTE PTR [rbx+0x0],dh
   14004251c:	outs   dx,DWORD PTR ds:[rsi]
   14004251d:	add    BYTE PTR [rsi+0x0],ah
   140042520:	je     0x140042522
   140042522:	and    BYTE PTR [rax],al
   140042524:	push   rsi
   140042525:	add    BYTE PTR [rcx+0x0],ch
   140042528:	jae    0x14004252a
   14004252a:	jne    0x14004252c
   14004252c:	(bad)  
   14004252d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140042531:	add    BYTE PTR [rbx+0x0],al
   140042534:	sub    eax,DWORD PTR [rax]
   140042536:	sub    eax,DWORD PTR [rax]
   140042538:	and    BYTE PTR [rax],al
   14004253a:	push   rdx
   14004253b:	add    BYTE PTR [rbp+0x0],dh
   14004253e:	outs   dx,BYTE PTR ds:[rsi]
   14004253f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140042543:	add    BYTE PTR [rbp+0x0],ch
   140042546:	add    BYTE PTR gs:[rax],ah
   140042549:	add    BYTE PTR [rax+rax*1+0x69],cl
   14004254d:	add    BYTE PTR [rdx+0x0],ah
   140042550:	jb     0x140042552
   140042552:	(bad)  
   140042553:	add    BYTE PTR [rdx+0x0],dh
   140042556:	jns    0x140042558
	...
   140042560:	shr    BYTE PTR [rdi+0x14004],0x0
   140042567:	add    al,bl
   140042569:	sahf   
   14004256a:	add    al,BYTE PTR [rax+0x1]
   14004256d:	add    BYTE PTR [rax],al
   14004256f:	add    BYTE PTR [rax+0x140029f],bl
   140042575:	add    BYTE PTR [rax],al
   140042577:	add    BYTE PTR [rbp+0x6e],dl
   14004257a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14004257e:	outs   dx,BYTE PTR ds:[rsi]
   14004257f:	and    BYTE PTR [rbp+0x78],ah
   140042582:	movsxd esp,DWORD PTR [rbp+0x70]
   140042585:	je     0x1400425f0
   140042587:	outs   dx,DWORD PTR ds:[rsi]
   140042588:	outs   dx,BYTE PTR ds:[rsi]
   140042589:	add    BYTE PTR [rax],al
   14004258b:	add    BYTE PTR [rax],al
   14004258d:	add    BYTE PTR [rax],al
   14004258f:	add    BYTE PTR [rbx+0x73],ah
   140042592:	ins    DWORD PTR es:[rdi],dx
   140042593:	loopne 0x140042596
	...
   1400425a5:	add    BYTE PTR [rax],al
   1400425a7:	add    BYTE PTR [rax+rax*1],al
   1400425aa:	add    BYTE PTR [rax],al
   1400425ac:	add    BYTE PTR [rax],al
   1400425ae:	add    BYTE PTR [rax],al
   1400425b0:	and    BYTE PTR [rip+0x1993],al        # 0x140043f49
	...
   1400425ce:	add    BYTE PTR [rax],al
   1400425d0:	lock and eax,0x14004
   1400425d6:	add    BYTE PTR [rax],al
   1400425d8:	add    BYTE PTR [rsi],ah
   1400425da:	add    al,0x40
   1400425dc:	add    DWORD PTR [rax],eax
   1400425de:	add    BYTE PTR [rax],al
   1400425e0:	adc    BYTE PTR [rsi],ah
   1400425e2:	add    al,0x40
   1400425e4:	add    DWORD PTR [rax],eax
   1400425e6:	add    BYTE PTR [rax],al
   1400425e8:	and    BYTE PTR [rsi],ah
   1400425ea:	add    al,0x40
   1400425ec:	add    DWORD PTR [rax],eax
   1400425ee:	add    BYTE PTR [rax],al
   1400425f0:	push   0x0
   1400425f2:	(bad)  
   1400425f3:	add    BYTE PTR [rip+0x50004a00],ch        # 0x190046ff9
   1400425f9:	add    BYTE PTR [rax],al
   1400425fb:	add    BYTE PTR [rax],al
   1400425fd:	add    BYTE PTR [rax],al
   1400425ff:	add    BYTE PTR [rdx+0x0],bh
   140042602:	push   0x43002d00
   140042607:	add    BYTE PTR [rsi+0x0],cl
   14004260a:	add    BYTE PTR [rax],al
   14004260c:	add    BYTE PTR [rax],al
   14004260e:	add    BYTE PTR [rax],al
   140042610:	imul   eax,DWORD PTR [rax],0x6f
   140042613:	add    BYTE PTR [rip+0x52004b00],ch        # 0x192047119
   140042619:	add    BYTE PTR [rax],al
   14004261b:	add    BYTE PTR [rax],al
   14004261d:	add    BYTE PTR [rax],al
   14004261f:	add    BYTE PTR [rdx+0x0],bh
   140042622:	push   0x54002d00
   140042627:	add    BYTE PTR [rdi+0x0],dl
   14004262a:	add    BYTE PTR [rax],al
   14004262c:	push   rbx
   14004262d:	jne    0x14004269d
   14004262f:	add    BYTE PTR [rbp+0x6f],cl
   140042632:	outs   dx,BYTE PTR ds:[rsi]
   140042633:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   140042637:	add    BYTE PTR [rdi+0x65],dl
   14004263a:	add    BYTE PTR fs:[rax+rbp*2+0x75],dl
   14004263f:	add    BYTE PTR [rsi+0x72],al
   140042642:	imul   eax,DWORD PTR [rax],0x746153
   140042648:	push   rbx
   140042649:	jne    0x1400426b9
   14004264b:	fs (bad) 
   14004264d:	jns    0x14004264f
   14004264f:	add    BYTE PTR [rbp+0x6f],cl
   140042652:	outs   dx,BYTE PTR ds:[rsi]
   140042653:	fs (bad) 
   140042655:	jns    0x140042657
   140042657:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   14004265b:	jae    0x1400426c1
   14004265d:	(bad)  
   14004265e:	jns    0x140042660
   140042660:	push   rdi
   140042661:	gs outs dx,BYTE PTR fs:[rsi]
   140042664:	gs jae 0x1400426cb
   140042667:	(bad)  
   140042668:	jns    0x14004266a
   14004266a:	add    BYTE PTR [rax],al
   14004266c:	add    BYTE PTR [rax],al
   14004266e:	add    BYTE PTR [rax],al
   140042670:	push   rsp
   140042671:	push   0x64737275
   140042676:	(bad)  
   140042677:	jns    0x140042679
   140042679:	add    BYTE PTR [rax],al
   14004267b:	add    BYTE PTR [rsi+0x72],al
   14004267e:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   140042686:	add    BYTE PTR [rax],al
   140042688:	push   rbx
   140042689:	(bad)  
   14004268a:	je     0x140042701
   14004268c:	jb     0x1400426f2
   14004268e:	(bad)  
   14004268f:	jns    0x140042691
   140042691:	add    BYTE PTR [rax],al
   140042693:	add    BYTE PTR [rdx+0x61],cl
   140042696:	outs   dx,BYTE PTR ds:[rsi]
   140042697:	add    BYTE PTR [rsi+0x65],al
   14004269a:	(bad)  
   14004269b:	add    BYTE PTR [rbp+0x61],cl
   14004269e:	jb     0x1400426a0
   1400426a0:	rex.B jo 0x140042715
   1400426a3:	add    BYTE PTR [rbp+0x61],cl
   1400426a6:	jns    0x1400426a8
   1400426a8:	rex.WX jne 0x140042719
   1400426ab:	add    BYTE PTR [rdx+0x75],cl
   1400426ae:	ins    BYTE PTR es:[rdi],dx
   1400426af:	add    BYTE PTR [rcx+0x75],al
   1400426b2:	add    BYTE PTR [ebx+0x65],dl
   1400426b6:	jo     0x1400426b8
   1400426b8:	movsxd r14,DWORD PTR [r8+r8*1+0x4e]
   1400426bd:	outs   dx,DWORD PTR ds:[rsi]
   1400426be:	jbe    0x1400426c0
   1400426c0:	rex.R
   1400426c1:	movsxd eax,DWORD PTR gs:[rax]
   1400426c4:	add    BYTE PTR [rax],al
   1400426c6:	add    BYTE PTR [rax],al
   1400426c8:	rex.WX (bad) 
   1400426ca:	outs   dx,BYTE PTR ds:[rsi]
   1400426cb:	jne    0x14004272e
   1400426cd:	jb     0x140042748
   1400426cf:	add    BYTE PTR [rsi+0x65],al
   1400426d2:	(bad)
   1400426d7:	jns    0x1400426d9
   1400426d9:	add    BYTE PTR [rax],al
   1400426db:	add    BYTE PTR [rbp+0x61],cl
   1400426de:	jb     0x140042743
   1400426e0:	push   0x41000000
   1400426e5:	jo     0x140042759
   1400426e7:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x6e754a00
   1400426ef:	add    BYTE PTR gs:[rax],al
   1400426f2:	add    BYTE PTR [rax],al
   1400426f4:	rex.WX jne 0x140042763
   1400426f7:	jns    0x1400426f9
   1400426f9:	add    BYTE PTR [rax],al
   1400426fb:	add    BYTE PTR [rcx+0x75],al
   1400426fe:	addr32 jne 0x140042774
   140042701:	je     0x140042703
   140042703:	add    BYTE PTR [rax],al
   140042705:	add    BYTE PTR [rax],al
   140042707:	add    BYTE PTR [rbx+0x65],dl
   14004270a:	jo     0x140042780
   14004270c:	gs ins DWORD PTR es:[rdi],dx
   14004270e:	(bad)  
   14004270f:	gs jb  0x140042712
   140042712:	add    BYTE PTR [rax],al
   140042714:	add    BYTE PTR [rax],al
   140042716:	add    BYTE PTR [rax],al
   140042718:	movsxd r14,DWORD PTR [r15+r13*2+0x62]
   14004271d:	gs jb  0x140042720
   140042720:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140042722:	jbe    0x140042789
   140042724:	ins    DWORD PTR es:[rdi],dx
   140042725:	(bad)  
   140042726:	gs jb  0x140042729
   140042729:	add    BYTE PTR [rax],al
   14004272b:	add    BYTE PTR [rax],al
   14004272d:	add    BYTE PTR [rax],al
   14004272f:	add    BYTE PTR [rbp+riz*2+0x63],al
   140042733:	gs ins DWORD PTR es:[rdi],dx
   140042735:	(bad)  
   140042736:	gs jb  0x140042739
   140042739:	add    BYTE PTR [rax],al
   14004273b:	add    BYTE PTR [rcx+0x4d],al
   14004273e:	add    BYTE PTR [rax],al
   140042740:	push   rax
   140042741:	rex.WRB add BYTE PTR [r8],r8b
   140042744:	add    BYTE PTR [rax],al
   140042746:	add    BYTE PTR [rax],al
   140042748:	rex.WRB
   140042749:	rex.WRB (bad) 
   14004274b:	fs fs (bad) 
   14004274e:	jns    0x1400427c9
	...
   140042758:	fs fs fs fs sub al,0x20
   14004275e:	rex.WRB
   14004275f:	rex.WRB
   140042760:	rex.WRB
   140042761:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   140042766:	and    BYTE PTR [rcx+0x79],bh
   140042769:	jns    0x1400427e4
   14004276b:	add    BYTE PTR [rax],al
   14004276d:	add    BYTE PTR [rax],al
   14004276f:	add    BYTE PTR [rax+0x48],cl
   140042772:	cmp    ch,BYTE PTR [rbp+0x6d]
   140042775:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   140042780:	push   rbx
   140042781:	add    BYTE PTR [rbp+0x0],dh
   140042784:	outs   dx,BYTE PTR ds:[rsi]
   140042785:	add    BYTE PTR [rax],al
   140042787:	add    BYTE PTR [rbp+0x0],cl
   14004278a:	outs   dx,DWORD PTR ds:[rsi]
   14004278b:	add    BYTE PTR [rsi+0x0],ch
   14004278e:	add    BYTE PTR [rax],al
   140042790:	push   rsp
   140042791:	add    BYTE PTR [rbp+0x0],dh
   140042794:	add    BYTE PTR gs:[rax],al
   140042797:	add    BYTE PTR [rdi+0x0],dl
   14004279a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14004279f:	add    BYTE PTR [rax+rax*1+0x68],dl
   1400427a3:	add    BYTE PTR [rbp+0x0],dh
   1400427a6:	add    BYTE PTR [rax],al
   1400427a8:	rex.RX add BYTE PTR [rdx+0x0],r14b
   1400427ac:	imul   eax,DWORD PTR [rax],0x530000
   1400427b2:	(bad)  
   1400427b3:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400427b7:	add    BYTE PTR [rbx+0x0],dl
   1400427ba:	jne    0x1400427bc
   1400427bc:	outs   dx,BYTE PTR ds:[rsi]
   1400427bd:	add    BYTE PTR [rax+rax*1+0x61],ah
   1400427c1:	add    BYTE PTR [rcx+0x0],bh
   1400427c4:	add    BYTE PTR [rax],al
   1400427c6:	add    BYTE PTR [rax],al
   1400427c8:	rex.WRB add BYTE PTR [r15+0x0],r13b
   1400427cc:	outs   dx,BYTE PTR ds:[rsi]
   1400427cd:	add    BYTE PTR [rax+rax*1+0x61],ah
   1400427d1:	add    BYTE PTR [rcx+0x0],bh
   1400427d4:	add    BYTE PTR [rax],al
   1400427d6:	add    BYTE PTR [rax],al
   1400427d8:	push   rsp
   1400427d9:	add    BYTE PTR [rbp+0x0],dh
   1400427dc:	add    BYTE PTR gs:[rbx+0x0],dh
   1400427e0:	add    BYTE PTR fs:[rcx+0x0],ah
   1400427e4:	jns    0x1400427e6
   1400427e6:	add    BYTE PTR [rax],al
   1400427e8:	push   rdi
   1400427e9:	add    BYTE PTR [rbp+0x0],ah
   1400427ec:	add    BYTE PTR fs:[rsi+0x0],ch
   1400427f0:	add    BYTE PTR gs:[rbx+0x0],dh
   1400427f4:	add    BYTE PTR fs:[rcx+0x0],ah
   1400427f8:	jns    0x1400427fa
   1400427fa:	add    BYTE PTR [rax],al
   1400427fc:	add    BYTE PTR [rax],al
   1400427fe:	add    BYTE PTR [rax],al
   140042800:	push   rsp
   140042801:	add    BYTE PTR [rax+0x0],ch
   140042804:	jne    0x140042806
   140042806:	jb     0x140042808
   140042808:	jae    0x14004280a
   14004280a:	add    BYTE PTR fs:[rcx+0x0],ah
   14004280e:	jns    0x140042810
	...
   140042818:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14004281c:	imul   eax,DWORD PTR [rax],0x610064
   140042822:	jns    0x140042824
   140042824:	add    BYTE PTR [rax],al
   140042826:	add    BYTE PTR [rax],al
   140042828:	push   rbx
   140042829:	add    BYTE PTR [rcx+0x0],ah
   14004282c:	je     0x14004282e
   14004282e:	jne    0x140042830
   140042830:	jb     0x140042832
   140042832:	add    BYTE PTR fs:[rcx+0x0],ah
   140042836:	jns    0x140042838
	...
   140042840:	rex.WX add BYTE PTR [rcx+0x0],spl
   140042844:	outs   dx,BYTE PTR ds:[rsi]
   140042845:	add    BYTE PTR [rax],al
   140042847:	add    BYTE PTR [rsi+0x0],al
   14004284a:	add    BYTE PTR gs:[rdx+0x0],ah
   14004284e:	add    BYTE PTR [rax],al
   140042850:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140042854:	jb     0x140042856
   140042856:	add    BYTE PTR [rax],al
   140042858:	add    BYTE PTR [r8+0x0],sil
   14004285c:	jb     0x14004285e
   14004285e:	add    BYTE PTR [rax],al
   140042860:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140042864:	jns    0x140042866
   140042866:	add    BYTE PTR [rax],al
   140042868:	rex.WX add BYTE PTR [rbp+0x0],sil
   14004286c:	outs   dx,BYTE PTR ds:[rsi]
   14004286d:	add    BYTE PTR [rax],al
   14004286f:	add    BYTE PTR [rdx+0x0],cl
   140042872:	jne    0x140042874
   140042874:	ins    BYTE PTR es:[rdi],dx
   140042875:	add    BYTE PTR [rax],al
   140042877:	add    BYTE PTR [rcx+0x0],al
   14004287a:	jne    0x14004287c
   14004287c:	add    BYTE PTR [eax],al
   14004287f:	add    BYTE PTR [rbx+0x0],dl
   140042882:	add    BYTE PTR gs:[rax+0x0],dh
   140042886:	add    BYTE PTR [rax],al
   140042888:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14004288c:	je     0x14004288e
   14004288e:	add    BYTE PTR [rax],al
   140042890:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140042894:	jbe    0x140042896
   140042896:	add    BYTE PTR [rax],al
   140042898:	add    BYTE PTR [rbp+0x0],r12b
   14004289c:	movsxd eax,DWORD PTR [rax]
   14004289e:	add    BYTE PTR [rax],al
   1400428a0:	rex.WX add BYTE PTR [rcx+0x0],spl
   1400428a4:	outs   dx,BYTE PTR ds:[rsi]
   1400428a5:	add    BYTE PTR [rbp+0x0],dh
   1400428a8:	(bad)  
   1400428a9:	add    BYTE PTR [rdx+0x0],dh
   1400428ac:	jns    0x1400428ae
   1400428ae:	add    BYTE PTR [rax],al
   1400428b0:	rex.RX add BYTE PTR [rbp+0x0],r12b
   1400428b4:	(bad)  
   1400428b5:	add    BYTE PTR [rdx+0x0],dh
   1400428b8:	jne    0x1400428ba
   1400428ba:	(bad)  
   1400428bb:	add    BYTE PTR [rdx+0x0],dh
   1400428be:	jns    0x1400428c0
	...
   1400428c8:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400428cc:	jb     0x1400428ce
   1400428ce:	movsxd eax,DWORD PTR [rax]
   1400428d0:	push   0x0
   1400428d5:	add    BYTE PTR [rax],al
   1400428d7:	add    BYTE PTR [rcx+0x0],al
   1400428da:	jo     0x1400428dc
   1400428dc:	jb     0x1400428de
   1400428de:	imul   eax,DWORD PTR [rax],0x6c
   1400428e4:	add    BYTE PTR [rax],al
   1400428e6:	add    BYTE PTR [rax],al
   1400428e8:	rex.WX add BYTE PTR [rbp+0x0],sil
   1400428ec:	outs   dx,BYTE PTR ds:[rsi]
   1400428ed:	add    BYTE PTR [rbp+0x0],ah
	...
   1400428f8:	rex.WX add BYTE PTR [rbp+0x0],sil
   1400428fc:	ins    BYTE PTR es:[rdi],dx
   1400428fd:	add    BYTE PTR [rcx+0x0],bh
	...
   140042908:	add    BYTE PTR [r13+0x0],sil
   14004290c:	add    BYTE PTR [ebp+0x0],dh
   140042910:	jae    0x140042912
   140042912:	je     0x140042914
   140042914:	add    BYTE PTR [rax],al
   140042916:	add    BYTE PTR [rax],al
   140042918:	push   rbx
   140042919:	add    BYTE PTR [rbp+0x0],ah
   14004291c:	jo     0x14004291e
   14004291e:	je     0x140042920
   140042920:	add    BYTE PTR gs:[rbp+0x0],ch
   140042924:	(bad)  
   140042925:	add    BYTE PTR [rbp+0x0],ah
   140042928:	jb     0x14004292a
   14004292a:	add    BYTE PTR [rax],al
   14004292c:	add    BYTE PTR [rax],al
   14004292e:	add    BYTE PTR [rax],al
   140042930:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   140042934:	je     0x140042936
   140042936:	outs   dx,DWORD PTR ds:[rsi]
   140042937:	add    BYTE PTR [rdx+0x0],ah
   14004293a:	add    BYTE PTR gs:[rdx+0x0],dh
   14004293e:	add    BYTE PTR [rax],al
   140042940:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140042944:	jbe    0x140042946
   140042946:	add    BYTE PTR gs:[rbp+0x0],ch
   14004294a:	(bad)  
   14004294b:	add    BYTE PTR [rbp+0x0],ah
   14004294e:	jb     0x140042950
	...
   140042958:	add    BYTE PTR [rbp+0x0],r12b
   14004295c:	movsxd eax,DWORD PTR [rax]
   14004295e:	add    BYTE PTR gs:[rbp+0x0],ch
   140042962:	(bad)  
   140042963:	add    BYTE PTR [rbp+0x0],ah
   140042966:	jb     0x140042968
   140042968:	add    BYTE PTR [rax],al
   14004296a:	add    BYTE PTR [rax],al
   14004296c:	add    BYTE PTR [r13+0x0],cl
   140042970:	add    BYTE PTR [rax],al
   140042972:	add    BYTE PTR [rax],al
   140042974:	push   rax
   140042975:	add    BYTE PTR [rbp+0x0],cl
	...
   140042980:	rex.WRB add BYTE PTR [r13+0x0],r9b
   140042984:	(bad)  
   140042985:	add    BYTE PTR [rax+rax*1+0x64],ah
   140042989:	add    BYTE PTR [rdi],ch
   14004298b:	add    BYTE PTR [rcx+0x0],bh
   14004298e:	jns    0x140042990
	...
   140042998:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   14004299d:	add    BYTE PTR [rax+rax*1+0x2c],ah
   1400429a1:	add    BYTE PTR [rax],ah
   1400429a3:	add    BYTE PTR [rbp+0x0],cl
   1400429a6:	rex.WRB add BYTE PTR [r13+0x0],r9b
   1400429aa:	rex.WRB add BYTE PTR [r8],r12b
   1400429ad:	add    BYTE PTR [rax+rax*1+0x64],ah
   1400429b1:	add    BYTE PTR [rax+rax*1],ch
   1400429b4:	and    BYTE PTR [rax],al
   1400429b6:	jns    0x1400429b8
   1400429b8:	jns    0x1400429ba
   1400429ba:	jns    0x1400429bc
   1400429bc:	jns    0x1400429be
   1400429be:	add    BYTE PTR [rax],al
   1400429c0:	rex.W add BYTE PTR [rax+0x0],cl
   1400429c4:	cmp    al,BYTE PTR [rax]
   1400429c6:	ins    DWORD PTR es:[rdi],dx
   1400429c7:	add    BYTE PTR [rbp+0x0],ch
   1400429ca:	cmp    al,BYTE PTR [rax]
   1400429cc:	jae    0x1400429ce
   1400429ce:	jae    0x1400429d0
	...
   1400429d8:	add    BYTE PTR gs:[rsi+0x0],ch
   1400429dc:	sub    eax,0x53005500
	...
   1400429ed:	add    BYTE PTR [rax],al
   1400429ef:	add    BYTE PTR [rcx],al
   1400429f1:	add    al,BYTE PTR [rbx]
   1400429f3:	add    al,0x5
   1400429f5:	(bad)  
   1400429f6:	(bad)  
   1400429f7:	or     BYTE PTR [rcx],cl
   1400429f9:	or     cl,BYTE PTR [rbx]
   1400429fb:	or     al,0xd
   1400429fd:	(bad)  
   1400429fe:	movups xmm2,XMMWORD PTR [rcx]
   140042a01:	adc    dl,BYTE PTR [rbx]
   140042a03:	adc    al,0x15
   140042a05:	(bad)  
   140042a06:	(bad)  
   140042a07:	sbb    BYTE PTR [rcx],bl
   140042a09:	sbb    bl,BYTE PTR [rbx]
   140042a0b:	sbb    al,0x1d
   140042a0d:	(bad)  
   140042a0e:	(bad)  
   140042a0f:	and    BYTE PTR [rcx],ah
   140042a11:	and    ah,BYTE PTR [rbx]
   140042a13:	and    al,0x25
   140042a15:	es (bad) 
   140042a17:	sub    BYTE PTR [rcx],ch
   140042a19:	sub    ch,BYTE PTR [rbx]
   140042a1b:	sub    al,0x2d
   140042a1d:	cs (bad) 
   140042a1f:	xor    BYTE PTR [rcx],dh
   140042a21:	xor    dh,BYTE PTR [rbx]
   140042a23:	xor    al,0x35
   140042a25:	ss (bad) 
   140042a27:	cmp    BYTE PTR [rcx],bh
   140042a29:	cmp    bh,BYTE PTR [rbx]
   140042a2b:	cmp    al,0x3d
   140042a2d:	ds (bad) 
   140042a2f:	rex
   140042a30:	rex.B
   140042a31:	rex.X
   140042a32:	rex.XB
   140042a33:	rex.R
   140042a34:	rex.RB
   140042a35:	rex.RX
   140042a36:	rex.RXB
   140042a37:	rex.W
   140042a38:	rex.WB
   140042a39:	rex.WX
   140042a3a:	rex.WXB
   140042a3b:	rex.WR
   140042a3c:	rex.WRB
   140042a3d:	rex.WRX
   140042a3e:	rex.WRXB push r8
   140042a40:	push   rcx
   140042a41:	push   rdx
   140042a42:	push   rbx
   140042a43:	push   rsp
   140042a44:	push   rbp
   140042a45:	push   rsi
   140042a46:	push   rdi
   140042a47:	pop    rax
   140042a48:	pop    rcx
   140042a49:	pop    rdx
   140042a4a:	pop    rbx
   140042a4b:	pop    rsp
   140042a4c:	pop    rbp
   140042a4d:	pop    rsi
   140042a4e:	pop    rdi
   140042a4f:	(bad)  
   140042a50:	(bad)  
   140042a51:	(bad)
   140042a56:	addr32 push 0x6c6b6a69
   140042a5c:	ins    DWORD PTR es:[rdi],dx
   140042a5d:	outs   dx,BYTE PTR ds:[rsi]
   140042a5e:	outs   dx,DWORD PTR ds:[rsi]
   140042a5f:	jo     0x140042ad2
   140042a61:	jb     0x140042ad6
   140042a63:	je     0x140042ada
   140042a65:	jbe    0x140042ade
   140042a67:	js     0x140042ae2
   140042a69:	jp     0x140042ae6
   140042a6b:	jl     0x140042aea
   140042a6d:	jle    0x140042aee
   140042a6f:	add    BYTE PTR [rax],ch
   140042a71:	outs   dx,BYTE PTR ds:[rsi]
   140042a72:	jne    0x140042ae0
   140042a74:	ins    BYTE PTR es:[rdi],dx
   140042a75:	sub    DWORD PTR [rax],eax
   140042a77:	add    BYTE PTR [rax],ch
   140042a79:	add    BYTE PTR [rsi+0x0],ch
   140042a7c:	jne    0x140042a7e
   140042a7e:	ins    BYTE PTR es:[rdi],dx
   140042a7f:	add    BYTE PTR [rax+rax*1+0x29],ch
	...
   140042a8f:	add    BYTE PTR [rsi],al
   140042a91:	add    BYTE PTR [rax],al
   140042a93:	(bad)  
   140042a94:	add    BYTE PTR [rcx],al
   140042a96:	add    BYTE PTR [rax],al
   140042a98:	adc    BYTE PTR [rax],al
   140042a9a:	add    eax,DWORD PTR [rsi]
   140042a9c:	add    BYTE PTR [rsi],al
   140042a9e:	add    dl,BYTE PTR [rax]
   140042aa0:	add    al,0x45
   140042aa2:	rex.RB
   140042aa3:	rex.RB add eax,0x5050505
   140042aa9:	xor    eax,0x500030
   140042aae:	add    BYTE PTR [rax],al
   140042ab0:	add    BYTE PTR [rax],ch
   140042ab2:	and    BYTE PTR [rax],bh
   140042ab4:	push   rax
   140042ab5:	pop    rax
   140042ab6:	(bad)  
   140042ab7:	or     BYTE PTR [rax],al
   140042ab9:	(bad)  
   140042aba:	xor    BYTE PTR [rax],dh
   140042abc:	push   rdi
   140042abd:	push   rax
   140042abe:	(bad)  
   140042abf:	add    BYTE PTR [rax],al
   140042ac1:	and    BYTE PTR [rax],ah
   140042ac3:	or     BYTE PTR [rax],al
   140042ac5:	add    BYTE PTR [rax],al
   140042ac7:	add    BYTE PTR [rax],cl
   140042ac9:	(bad)  
   140042aca:	push   0x60606060
   140042acf:	add    BYTE PTR [rax],al
   140042ad1:	js     0x140042b43
   140042ad3:	js     0x140042b4d
   140042ad5:	js     0x140042b4f
   140042ad7:	or     BYTE PTR [rdi],al
   140042ad9:	or     BYTE PTR [rax],al
   140042adb:	add    BYTE PTR [rdi],al
   140042add:	add    BYTE PTR [rax],cl
   140042adf:	or     BYTE PTR [rax],cl
   140042ae1:	add    BYTE PTR [rax],al
   140042ae3:	or     BYTE PTR [rax],al
   140042ae5:	or     BYTE PTR [rax],al
   140042ae7:	(bad)  
   140042ae8:	or     BYTE PTR [rax],al
   140042aea:	add    BYTE PTR [rax],al
   140042aec:	add    BYTE PTR [rax],al
   140042aee:	add    BYTE PTR [rax],al
   140042af0:	rex.RXB
   140042af1:	gs je  0x140042b37
   140042af4:	jne    0x140042b68
   140042af6:	jb     0x140042b5d
   140042af8:	outs   dx,BYTE PTR ds:[rsi]
   140042af9:	je     0x140042b4b
   140042afb:	(bad)  
   140042afc:	movsxd ebp,DWORD PTR [rbx+0x61]
   140042aff:	addr32 gs rex.WB
   140042b02:	add    BYTE PTR fs:[rax],al
   140042b05:	add    BYTE PTR [rax],al
   140042b07:	add    BYTE PTR [rbx+0x0],ch
   140042b0a:	add    BYTE PTR gs:[rdx+0x0],dh
   140042b0e:	outs   dx,BYTE PTR ds:[rsi]
   140042b0f:	add    BYTE PTR [rbp+0x0],ah
   140042b12:	ins    BYTE PTR es:[rdi],dx
   140042b13:	add    BYTE PTR [rbx],dh
   140042b15:	add    BYTE PTR [rdx],dh
   140042b17:	add    BYTE PTR [rsi],ch
   140042b19:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140042b1d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140042b21:	add    BYTE PTR [rax],al
   140042b23:	add    BYTE PTR [rax],al
   140042b25:	add    BYTE PTR [rax],al
   140042b27:	add    BYTE PTR [rbp+0x0],dl
   140042b2a:	push   rbx
   140042b2b:	add    BYTE PTR [rbp+0x0],al
   140042b2e:	push   rdx
   140042b2f:	add    BYTE PTR [rbx],dh
   140042b31:	add    BYTE PTR [rdx],dh
   140042b33:	add    BYTE PTR [rsi],ch
   140042b35:	add    BYTE PTR [rax+rax*1+0x4c],al
   140042b39:	add    BYTE PTR [rax+rax*1+0x0],cl
   140042b3d:	add    BYTE PTR [rax],al
   140042b3f:	add    BYTE PTR [rbp+0x65],cl
   140042b42:	jae    0x140042bb7
   140042b44:	(bad)  
   140042b45:	rex.X outs dx,DWORD PTR gs:[esi]
   140042b49:	js     0x140042ba2
   140042b4b:	add    BYTE PTR [rax],al
   140042b4d:	add    BYTE PTR [rax],al
   140042b4f:	add    BYTE PTR [rdi+0x65],al
   140042b52:	je     0x140042b95
   140042b54:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140042b58:	gs push rdi
   140042b5a:	imul   ebp,DWORD PTR [rsi+0x64],0x4700776f
   140042b61:	gs je  0x140042bb0
   140042b64:	(bad)  
   140042b65:	jae    0x140042bdb
   140042b67:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140042b6c:	gs push rax
   140042b6e:	outs   dx,DWORD PTR ds:[rsi]
   140042b6f:	jo     0x140042be6
   140042b71:	jo     0x140042b73
   140042b73:	add    BYTE PTR [rax],al
   140042b75:	add    BYTE PTR [rax],al
   140042b77:	add    BYTE PTR [rdi+0x65],al
   140042b7a:	je     0x140042bd1
   140042b7c:	jae    0x140042be3
   140042b7e:	jb     0x140042bcf
   140042b80:	(bad)  
   140042b81:	push   0x65
   140042b83:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   140042b87:	outs   dx,WORD PTR ds:[rsi]
   140042b89:	jb     0x140042bf8
   140042b8b:	(bad)  
   140042b8c:	je     0x140042bf7
   140042b8e:	outs   dx,DWORD PTR ds:[rsi]
   140042b8f:	outs   dx,BYTE PTR ds:[rsi]
   140042b90:	push   rdi
   140042b91:	add    BYTE PTR [rax],al
   140042b93:	add    BYTE PTR [rax],al
   140042b95:	add    BYTE PTR [rax],al
   140042b97:	add    BYTE PTR [rdi+0x65],al
   140042b9a:	je     0x140042bec
   140042b9c:	jb     0x140042c0d
   140042b9e:	movsxd esp,DWORD PTR [rbp+0x73]
   140042ba1:	jae    0x140042bfa
   140042ba3:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   140042baa:	(bad)  
   140042bab:	je     0x140042c16
   140042bad:	outs   dx,DWORD PTR ds:[rsi]
   140042bae:	outs   dx,BYTE PTR ds:[rsi]
   140042baf:	add    al,al
   140042bb1:	cs add al,0x40
   140042bb4:	add    DWORD PTR [rax],eax
   140042bb6:	add    BYTE PTR [rax],al
   140042bb8:	shr    BYTE PTR [rsi],1
   140042bba:	add    al,0x40
   140042bbc:	add    DWORD PTR [rax],eax
   140042bbe:	add    BYTE PTR [rax],al
   140042bc0:	fsubr  DWORD PTR [rsi]
   140042bc2:	add    al,0x40
   140042bc4:	add    DWORD PTR [rax],eax
   140042bc6:	add    BYTE PTR [rax],al
   140042bc8:	call   0x141442ffb
   140042bcd:	add    BYTE PTR [rax],al
   140042bcf:	add    al,bh
   140042bd1:	cs add al,0x40
   140042bd4:	add    DWORD PTR [rax],eax
   140042bd6:	add    BYTE PTR [rax],al
   140042bd8:	or     BYTE PTR [rdi],ch
   140042bda:	add    al,0x40
   140042bdc:	add    DWORD PTR [rax],eax
   140042bde:	add    BYTE PTR [rax],al
   140042be0:	sbb    BYTE PTR [rdi],ch
   140042be2:	add    al,0x40
   140042be4:	add    DWORD PTR [rax],eax
   140042be6:	add    BYTE PTR [rax],al
   140042be8:	and    al,0x2f
   140042bea:	add    al,0x40
   140042bec:	add    DWORD PTR [rax],eax
   140042bee:	add    BYTE PTR [rax],al
   140042bf0:	xor    BYTE PTR [rdi],ch
   140042bf2:	add    al,0x40
   140042bf4:	add    DWORD PTR [rax],eax
   140042bf6:	add    BYTE PTR [rax],al
   140042bf8:	cmp    BYTE PTR [rdi],ch
   140042bfa:	add    al,0x40
   140042bfc:	add    DWORD PTR [rax],eax
   140042bfe:	add    BYTE PTR [rax],al
   140042c00:	rex.W (bad) 
   140042c02:	add    al,0x40
   140042c04:	add    DWORD PTR [rax],eax
   140042c06:	add    BYTE PTR [rax],al
   140042c08:	pop    rax
   140042c09:	(bad)  
   140042c0a:	add    al,0x40
   140042c0c:	add    DWORD PTR [rax],eax
   140042c0e:	add    BYTE PTR [rax],al
   140042c10:	out    dx,al
   140042c11:	pop    rsp
   140042c12:	add    al,0x40
   140042c14:	add    DWORD PTR [rax],eax
   140042c16:	add    BYTE PTR [rax],al
   140042c18:	push   0x1400434
   140042c1d:	add    BYTE PTR [rax],al
   140042c1f:	add    BYTE PTR [rax+0x1400434],al
   140042c25:	add    BYTE PTR [rax],al
   140042c27:	add    BYTE PTR [rax+0x1400434],ah
   140042c2d:	add    BYTE PTR [rax],al
   140042c2f:	add    BYTE PTR [rax+0x1400434],bh
   140042c35:	add    BYTE PTR [rax],al
   140042c37:	add    al,bl
   140042c39:	xor    al,0x4
   140042c3b:	rex add DWORD PTR [rax],eax
   140042c3e:	add    BYTE PTR [rax],al
   140042c40:	fs (bad) 
   140042c42:	add    al,0x40
   140042c44:	add    DWORD PTR [rax],eax
   140042c46:	add    BYTE PTR [rax],al
   140042c48:	jo     0x140042c79
   140042c4a:	add    al,0x40
   140042c4c:	add    DWORD PTR [rax],eax
   140042c4e:	add    BYTE PTR [rax],al
   140042c50:	js     0x140042c81
   140042c52:	add    al,0x40
   140042c54:	add    DWORD PTR [rax],eax
   140042c56:	add    BYTE PTR [rax],al
   140042c58:	jl     0x140042c89
   140042c5a:	add    al,0x40
   140042c5c:	add    DWORD PTR [rax],eax
   140042c5e:	add    BYTE PTR [rax],al
   140042c60:	sub    BYTE PTR [rdi],0x4
   140042c63:	rex add DWORD PTR [rax],eax
   140042c66:	add    BYTE PTR [rax],al
   140042c68:	test   BYTE PTR [rdi],ch
   140042c6a:	add    al,0x40
   140042c6c:	add    DWORD PTR [rax],eax
   140042c6e:	add    BYTE PTR [rax],al
   140042c70:	mov    BYTE PTR [rdi],ch
   140042c72:	add    al,0x40
   140042c74:	add    DWORD PTR [rax],eax
   140042c76:	add    BYTE PTR [rax],al
   140042c78:	mov    WORD PTR [rdi],gs
   140042c7a:	add    al,0x40
   140042c7c:	add    DWORD PTR [rax],eax
   140042c7e:	add    BYTE PTR [rax],al
   140042c80:	nop
   140042c81:	(bad)  
   140042c82:	add    al,0x40
   140042c84:	add    DWORD PTR [rax],eax
   140042c86:	add    BYTE PTR [rax],al
   140042c88:	cwde   
   140042c89:	(bad)  
   140042c8a:	add    al,0x40
   140042c8c:	add    DWORD PTR [rax],eax
   140042c8e:	add    BYTE PTR [rax],al
   140042c90:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042c91:	(bad)  
   140042c92:	add    al,0x40
   140042c94:	add    DWORD PTR [rax],eax
   140042c96:	add    BYTE PTR [rax],al
   140042c98:	test   al,0x2f
   140042c9a:	add    al,0x40
   140042c9c:	add    DWORD PTR [rax],eax
   140042c9e:	add    BYTE PTR [rax],al
   140042ca0:	lods   al,BYTE PTR ds:[rsi]
   140042ca1:	(bad)  
   140042ca2:	add    al,0x40
   140042ca4:	add    DWORD PTR [rax],eax
   140042ca6:	add    BYTE PTR [rax],al
   140042ca8:	mov    al,0x2f
   140042caa:	add    al,0x40
   140042cac:	add    DWORD PTR [rax],eax
   140042cae:	add    BYTE PTR [rax],al
   140042cb0:	mov    ah,0x2f
   140042cb2:	add    al,0x40
   140042cb4:	add    DWORD PTR [rax],eax
   140042cb6:	add    BYTE PTR [rax],al
   140042cb8:	mov    eax,0x140042f
   140042cbd:	add    BYTE PTR [rax],al
   140042cbf:	add    BYTE PTR [rdi+rbp*1+0x14004],bh
   140042cc6:	add    BYTE PTR [rax],al
   140042cc8:	shr    BYTE PTR [rdi],0x4
   140042ccb:	rex add DWORD PTR [rax],eax
   140042cce:	add    BYTE PTR [rax],al
   140042cd0:	(bad)  
   140042cd1:	(bad)  
   140042cd2:	add    al,0x40
   140042cd4:	add    DWORD PTR [rax],eax
   140042cd6:	add    BYTE PTR [rax],al
   140042cd8:	enter  0x42f,0x40
   140042cdc:	add    DWORD PTR [rax],eax
   140042cde:	add    BYTE PTR [rax],al
   140042ce0:	int3   
   140042ce1:	(bad)  
   140042ce2:	add    al,0x40
   140042ce4:	add    DWORD PTR [rax],eax
   140042ce6:	add    BYTE PTR [rax],al
   140042ce8:	shr    BYTE PTR [rdi],1
   140042cea:	add    al,0x40
   140042cec:	add    DWORD PTR [rax],eax
   140042cee:	add    BYTE PTR [rax],al
   140042cf0:	(bad)  
   140042cf1:	(bad)  
   140042cf2:	add    al,0x40
   140042cf4:	add    DWORD PTR [rax],eax
   140042cf6:	add    BYTE PTR [rax],al
   140042cf8:	fsubr  DWORD PTR [rdi]
   140042cfa:	add    al,0x40
   140042cfc:	add    DWORD PTR [rax],eax
   140042cfe:	add    BYTE PTR [rax],al
   140042d00:	fsubr  QWORD PTR [rdi]
   140042d02:	add    al,0x40
   140042d04:	add    DWORD PTR [rax],eax
   140042d06:	add    BYTE PTR [rax],al
   140042d08:	loopne 0x140042d39
   140042d0a:	add    al,0x40
   140042d0c:	add    DWORD PTR [rax],eax
   140042d0e:	add    BYTE PTR [rax],al
   140042d10:	in     al,0x2f
   140042d12:	add    al,0x40
   140042d14:	add    DWORD PTR [rax],eax
   140042d16:	add    BYTE PTR [rax],al
   140042d18:	call   0x14144314c
   140042d1d:	add    BYTE PTR [rax],al
   140042d1f:	add    ah,ch
   140042d21:	(bad)  
   140042d22:	add    al,0x40
   140042d24:	add    DWORD PTR [rax],eax
   140042d26:	add    BYTE PTR [rax],al
   140042d28:	lock (bad) 
   140042d2a:	add    al,0x40
   140042d2c:	add    DWORD PTR [rax],eax
   140042d2e:	add    BYTE PTR [rax],al
   140042d30:	hlt    
   140042d31:	(bad)  
   140042d32:	add    al,0x40
   140042d34:	add    DWORD PTR [rax],eax
   140042d36:	add    BYTE PTR [rax],al
   140042d38:	clc    
   140042d39:	(bad)  
   140042d3a:	add    al,0x40
   140042d3c:	add    DWORD PTR [rax],eax
   140042d3e:	add    BYTE PTR [rax],al
   140042d40:	cld    
   140042d41:	(bad)  
   140042d42:	add    al,0x40
   140042d44:	add    DWORD PTR [rax],eax
   140042d46:	add    BYTE PTR [rax],al
   140042d48:	add    BYTE PTR [rax],dh
   140042d4a:	add    al,0x40
   140042d4c:	add    DWORD PTR [rax],eax
   140042d4e:	add    BYTE PTR [rax],al
   140042d50:	add    al,0x30
   140042d52:	add    al,0x40
   140042d54:	add    DWORD PTR [rax],eax
   140042d56:	add    BYTE PTR [rax],al
   140042d58:	or     BYTE PTR [rax],dh
   140042d5a:	add    al,0x40
   140042d5c:	add    DWORD PTR [rax],eax
   140042d5e:	add    BYTE PTR [rax],al
   140042d60:	or     al,0x30
   140042d62:	add    al,0x40
   140042d64:	add    DWORD PTR [rax],eax
   140042d66:	add    BYTE PTR [rax],al
   140042d68:	adc    BYTE PTR [rax],dh
   140042d6a:	add    al,0x40
   140042d6c:	add    DWORD PTR [rax],eax
   140042d6e:	add    BYTE PTR [rax],al
   140042d70:	adc    al,0x30
   140042d72:	add    al,0x40
   140042d74:	add    DWORD PTR [rax],eax
   140042d76:	add    BYTE PTR [rax],al
   140042d78:	sbb    BYTE PTR [rax],dh
   140042d7a:	add    al,0x40
   140042d7c:	add    DWORD PTR [rax],eax
   140042d7e:	add    BYTE PTR [rax],al
   140042d80:	sbb    al,0x30
   140042d82:	add    al,0x40
   140042d84:	add    DWORD PTR [rax],eax
   140042d86:	add    BYTE PTR [rax],al
   140042d88:	and    BYTE PTR [rax],dh
   140042d8a:	add    al,0x40
   140042d8c:	add    DWORD PTR [rax],eax
   140042d8e:	add    BYTE PTR [rax],al
   140042d90:	xor    BYTE PTR [rax],dh
   140042d92:	add    al,0x40
   140042d94:	add    DWORD PTR [rax],eax
   140042d96:	add    BYTE PTR [rax],al
   140042d98:	xor    BYTE PTR [rax+rax*2],al
   140042d9c:	add    DWORD PTR [rax],eax
   140042d9e:	add    BYTE PTR [rax],al
   140042da0:	rex.W xor BYTE PTR [rax+rax*2],al
   140042da4:	add    DWORD PTR [rax],eax
   140042da6:	add    BYTE PTR [rax],al
   140042da8:	pop    rax
   140042da9:	xor    BYTE PTR [rax+rax*2],al
   140042dac:	add    DWORD PTR [rax],eax
   140042dae:	add    BYTE PTR [rax],al
   140042db0:	jo     0x140042de2
   140042db2:	add    al,0x40
   140042db4:	add    DWORD PTR [rax],eax
   140042db6:	add    BYTE PTR [rax],al
   140042db8:	xor    BYTE PTR [rax],0x4
   140042dbb:	rex add DWORD PTR [rax],eax
   140042dbe:	add    BYTE PTR [rax],al
   140042dc0:	cwde   
   140042dc1:	xor    BYTE PTR [rax+rax*2],al
   140042dc4:	add    DWORD PTR [rax],eax
   140042dc6:	add    BYTE PTR [rax],al
   140042dc8:	mov    eax,0x1400430
   140042dcd:	add    BYTE PTR [rax],al
   140042dcf:	add    al,bl
   140042dd1:	xor    BYTE PTR [rax+rax*2],al
   140042dd4:	add    DWORD PTR [rax],eax
   140042dd6:	add    BYTE PTR [rax],al
   140042dd8:	clc    
   140042dd9:	xor    BYTE PTR [rax+rax*2],al
   140042ddc:	add    DWORD PTR [rax],eax
   140042dde:	add    BYTE PTR [rax],al
   140042de0:	sbb    BYTE PTR [rcx],dh
   140042de2:	add    al,0x40
   140042de4:	add    DWORD PTR [rax],eax
   140042de6:	add    BYTE PTR [rax],al
   140042de8:	cmp    BYTE PTR [rcx],dh
   140042dea:	add    al,0x40
   140042dec:	add    DWORD PTR [rax],eax
   140042dee:	add    BYTE PTR [rax],al
   140042df0:	(bad)  
   140042df1:	xor    DWORD PTR [rax+rax*2],eax
   140042df4:	add    DWORD PTR [rax],eax
   140042df6:	add    BYTE PTR [rax],al
   140042df8:	xor    BYTE PTR [rcx],0x4
   140042dfb:	rex add DWORD PTR [rax],eax
   140042dfe:	add    BYTE PTR [rax],al
   140042e00:	test   al,0x31
   140042e02:	add    al,0x40
   140042e04:	add    DWORD PTR [rax],eax
   140042e06:	add    BYTE PTR [rax],al
   140042e08:	enter  0x431,0x40
   140042e0c:	add    DWORD PTR [rax],eax
   140042e0e:	add    BYTE PTR [rax],al
   140042e10:	lock xor DWORD PTR [rax+rax*2],eax
   140042e14:	add    DWORD PTR [rax],eax
   140042e16:	add    BYTE PTR [rax],al
   140042e18:	adc    BYTE PTR [rdx],dh
   140042e1a:	add    al,0x40
   140042e1c:	add    DWORD PTR [rax],eax
   140042e1e:	add    BYTE PTR [rax],al
   140042e20:	and    BYTE PTR [rdx],dh
   140042e22:	add    al,0x40
   140042e24:	add    DWORD PTR [rax],eax
   140042e26:	add    BYTE PTR [rax],al
   140042e28:	and    al,0x32
   140042e2a:	add    al,0x40
   140042e2c:	add    DWORD PTR [rax],eax
   140042e2e:	add    BYTE PTR [rax],al
   140042e30:	xor    BYTE PTR [rdx],dh
   140042e32:	add    al,0x40
   140042e34:	add    DWORD PTR [rax],eax
   140042e36:	add    BYTE PTR [rax],al
   140042e38:	xor    al,BYTE PTR [rax+rax*2]
   140042e3c:	add    DWORD PTR [rax],eax
   140042e3e:	add    BYTE PTR [rax],al
   140042e40:	xor    al,BYTE PTR fs:[rax+rax*2]
   140042e44:	add    DWORD PTR [rax],eax
   140042e46:	add    BYTE PTR [rax],al
   140042e48:	jo     0x140042e7c
   140042e4a:	add    al,0x40
   140042e4c:	add    DWORD PTR [rax],eax
   140042e4e:	add    BYTE PTR [rax],al
   140042e50:	xor    BYTE PTR [rdx],0x4
   140042e53:	rex add DWORD PTR [rax],eax
   140042e56:	add    BYTE PTR [rax],al
   140042e58:	nop
   140042e59:	xor    al,BYTE PTR [rax+rax*2]
   140042e5c:	add    DWORD PTR [rax],eax
   140042e5e:	add    BYTE PTR [rax],al
   140042e60:	mov    al,0x32
   140042e62:	add    al,0x40
   140042e64:	add    DWORD PTR [rax],eax
   140042e66:	add    BYTE PTR [rax],al
   140042e68:	shl    BYTE PTR [rdx],1
   140042e6a:	add    al,0x40
   140042e6c:	add    DWORD PTR [rax],eax
   140042e6e:	add    BYTE PTR [rax],al
   140042e70:	clc    
   140042e71:	xor    al,BYTE PTR [rax+rax*2]
   140042e74:	add    DWORD PTR [rax],eax
   140042e76:	add    BYTE PTR [rax],al
   140042e78:	and    BYTE PTR [rbx],dh
   140042e7a:	add    al,0x40
   140042e7c:	add    DWORD PTR [rax],eax
   140042e7e:	add    BYTE PTR [rax],al
   140042e80:	xor    rax,QWORD PTR [rax+rax*2]
   140042e84:	add    DWORD PTR [rax],eax
   140042e86:	add    BYTE PTR [rax],al
   140042e88:	js     0x140042ebd
   140042e8a:	add    al,0x40
   140042e8c:	add    DWORD PTR [rax],eax
   140042e8e:	add    BYTE PTR [rax],al
   140042e90:	cwde   
   140042e91:	xor    eax,DWORD PTR [rax+rax*2]
   140042e94:	add    DWORD PTR [rax],eax
   140042e96:	add    BYTE PTR [rax],al
   140042e98:	shl    BYTE PTR [rbx],0x4
   140042e9b:	rex add DWORD PTR [rax],eax
   140042e9e:	add    BYTE PTR [rax],al
   140042ea0:	call   0x1414432d8
   140042ea5:	add    BYTE PTR [rax],al
   140042ea7:	add    BYTE PTR [rax],bl
   140042ea9:	xor    al,0x4
   140042eab:	rex add DWORD PTR [rax],eax
   140042eae:	add    BYTE PTR [rax],al
   140042eb0:	rex.W xor al,0x4
   140042eb3:	rex add DWORD PTR [rax],eax
   140042eb6:	add    BYTE PTR [rax],al
   140042eb8:	out    dx,al
   140042eb9:	pop    rsp
   140042eba:	add    al,0x40
   140042ebc:	add    DWORD PTR [rax],eax
   140042ebe:	add    BYTE PTR [rax],al
   140042ec0:	pop    rdi
   140042ec1:	pop    rdi
   140042ec2:	(bad)  
   140042ec4:	jae    0x140042f2b
   140042ec6:	sub    BYTE PTR fs:[rax],al
   140042ec9:	add    BYTE PTR [rax],al
   140042ecb:	add    BYTE PTR [rax],al
   140042ecd:	add    BYTE PTR [rax],al
   140042ecf:	add    BYTE PTR [rdi+0x5f],bl
   140042ed2:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   140042ed6:	ins    BYTE PTR es:[rdi],dx
   140042ed7:	add    BYTE PTR [rdi+0x5f],bl
   140042eda:	jo     0x140042f3d
   140042edc:	jae    0x140042f41
   140042ede:	(bad)  
   140042edf:	ins    BYTE PTR es:[rdi],dx
	...
   140042ee8:	pop    rdi
   140042ee9:	pop    rdi
   140042eea:	jae    0x140042f60
   140042eec:	movsxd esp,DWORD PTR fs:[rcx+0x6c]
   140042ef0:	ins    BYTE PTR es:[rdi],dx
   140042ef1:	add    BYTE PTR [rax],al
   140042ef3:	add    BYTE PTR [rax],al
   140042ef5:	add    BYTE PTR [rax],al
   140042ef7:	add    BYTE PTR [rdi+0x5f],bl
   140042efa:	je     0x140042f64
   140042efc:	imul   esi,DWORD PTR [rbx+0x63],0x6c6c61
   140042f03:	add    BYTE PTR [rax],al
   140042f05:	add    BYTE PTR [rax],al
   140042f07:	add    BYTE PTR [rdi+0x5f],bl
   140042f0a:	data16 (bad) 
   140042f0c:	jae    0x140042f82
   140042f0e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140042f11:	ins    BYTE PTR es:[rdi],dx
   140042f12:	add    BYTE PTR [rax],al
   140042f14:	add    BYTE PTR [rax],al
   140042f16:	add    BYTE PTR [rax],al
   140042f18:	pop    rdi
   140042f19:	pop    rdi
   140042f1a:	movsxd ebp,DWORD PTR [rdx+rsi*2+0x63]
   140042f1e:	(bad)  
   140042f1f:	ins    BYTE PTR es:[rdi],dx
   140042f20:	ins    BYTE PTR es:[rdi],dx
   140042f21:	add    BYTE PTR [rax],al
   140042f23:	add    BYTE PTR [rdi+0x5f],bl
   140042f26:	gs (bad) 
   140042f28:	(bad)  
   140042f29:	imul   eax,DWORD PTR [rax],0x0
   140042f2f:	add    BYTE PTR [rdi+0x5f],bl
   140042f32:	jo     0x140042fa8
   140042f34:	jb     0x140042f6c
   140042f36:	xor    al,0x0
   140042f38:	pop    rdi
   140042f39:	pop    rdi
   140042f3a:	jb     0x140042fa1
   140042f3c:	jae    0x140042fb2
   140042f3e:	jb     0x140042fa9
   140042f40:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140042f44:	add    BYTE PTR [rax],al
   140042f46:	add    BYTE PTR [rax],al
   140042f48:	pop    rdi
   140042f49:	pop    rdi
   140042f4a:	jne    0x140042fba
   140042f4c:	(bad)  
   140042f4d:	ins    BYTE PTR es:[rdi],dx
   140042f4e:	imul   esp,DWORD PTR [rdi+0x6e],0x6465
   140042f55:	add    BYTE PTR [rax],al
   140042f57:	add    BYTE PTR [rdx+0x65],dh
   140042f5a:	jae    0x140042fd0
   140042f5c:	jb     0x140042fc7
   140042f5e:	movsxd esi,DWORD PTR [rax+rbp*1+0x0]
   140042f62:	add    BYTE PTR [rax],al
   140042f64:	and    BYTE PTR [rsi+0x65],ch
   140042f67:	ja     0x140042f69
   140042f69:	add    BYTE PTR [rax],al
   140042f6b:	add    BYTE PTR [rax],al
   140042f6d:	add    BYTE PTR [rax],al
   140042f6f:	add    BYTE PTR [rax],ah
   140042f71:	fs gs ins BYTE PTR es:[rdi],dx
   140042f74:	gs je  0x140042fdc
   140042f77:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e042f7d
   140042f7d:	add    BYTE PTR ds:[rax],al
   140042f80:	cmp    al,0x3c
   140042f82:	add    BYTE PTR [rax],al
   140042f84:	and    DWORD PTR [rax],eax
   140042f86:	add    BYTE PTR [rax],al
   140042f88:	cmp    eax,0x2100003d
   140042f8d:	cmp    eax,0x5d5b0000
   140042f92:	add    BYTE PTR [rax],al
   140042f94:	add    BYTE PTR [rax],al
   140042f96:	add    BYTE PTR [rax],al
   140042f98:	outs   dx,DWORD PTR ds:[rsi]
   140042f99:	jo     0x140043000
   140042f9b:	jb     0x140042ffe
   140042f9d:	je     0x14004300e
   140042f9f:	jb     0x140042fa1
   140042fa1:	add    BYTE PTR [rax],al
   140042fa3:	add    BYTE PTR [rip+0x2a00003e],ch        # 0x16a042fe7
   140042fa9:	add    BYTE PTR [rax],al
   140042fab:	add    BYTE PTR [rbx],ch
   140042fad:	sub    eax,DWORD PTR [rax]
   140042faf:	add    BYTE PTR [rip+0x2d00002d],ch        # 0x16d042fe2
   140042fb5:	add    BYTE PTR [rax],al
   140042fb7:	add    BYTE PTR [rbx],ch
   140042fb9:	add    BYTE PTR [rax],al
   140042fbb:	add    BYTE PTR [rsi],ah
   140042fbd:	add    BYTE PTR [rax],al
   140042fbf:	add    BYTE PTR [rip+0x2f002a3e],ch        # 0x16f045a03
   140042fc5:	add    BYTE PTR [rax],al
   140042fc7:	add    BYTE PTR [rip+0x3c000000],ah        # 0x17c042fcd
   140042fcd:	add    BYTE PTR [rax],al
   140042fcf:	add    BYTE PTR [rdi*1+0x3e0000],bh
   140042fd6:	add    BYTE PTR [rax],al
   140042fd8:	ds cmp eax,0x2c0000
   140042fde:	add    BYTE PTR [rax],al
   140042fe0:	sub    BYTE PTR [rcx],ch
   140042fe2:	add    BYTE PTR [rax],al
   140042fe4:	jle    0x140042fe6
   140042fe6:	add    BYTE PTR [rax],al
   140042fe8:	pop    rsi
   140042fe9:	add    BYTE PTR [rax],al
   140042feb:	add    BYTE PTR [rax+rax*1+0x0],bh
   140042fef:	add    BYTE PTR [rsi],ah
   140042ff1:	add    BYTE PTR es:[rax],al
   140042ff4:	jl     0x140043072
   140042ff6:	add    BYTE PTR [rax],al
   140042ff8:	sub    bh,BYTE PTR [rip+0x3d2b0000]        # 0x17d2f2ffe
   140042ffe:	add    BYTE PTR [rax],al
   140043000:	sub    eax,0x2f00003d
   140043005:	cmp    eax,0x3d250000
   14004300a:	add    BYTE PTR [rax],al
   14004300c:	ds ds cmp eax,0x3d3c3c00
   140043013:	add    BYTE PTR [rsi],ah
   140043015:	cmp    eax,0x3d7c0000
   14004301a:	add    BYTE PTR [rax],al
   14004301c:	pop    rsi
   14004301d:	cmp    eax,0x76600000
   140043022:	data16 je 0x140043086
   140043025:	(bad)  
   140043026:	ins    BYTE PTR es:[rdi],dx
   140043027:	gs (bad) 
   140043029:	add    BYTE PTR [rax],al
   14004302b:	add    BYTE PTR [rax],al
   14004302d:	add    BYTE PTR [rax],al
   14004302f:	add    BYTE PTR [rax+0x76],ah
   140043032:	(bad)  
   140043033:	je     0x140043096
   140043035:	(bad)  
   140043036:	ins    BYTE PTR es:[rdi],dx
   140043037:	gs (bad) 
   140043039:	add    BYTE PTR [rax],al
   14004303b:	add    BYTE PTR [rax],al
   14004303d:	add    BYTE PTR [rax],al
   14004303f:	add    BYTE PTR [rax+0x76],ah
   140043042:	movsxd esp,DWORD PTR [rcx+0x6c]
   140043045:	ins    BYTE PTR es:[rdi],dx
   140043046:	(bad)  
   140043047:	add    BYTE PTR [rax+0x74],ah
   14004304a:	jns    0x1400430bc
   14004304c:	outs   dx,DWORD PTR gs:[rsi]
   14004304e:	data16 (bad) 
	...
   140043058:	(bad)  
   140043059:	ins    BYTE PTR es:[rdi],dx
   14004305a:	outs   dx,DWORD PTR ds:[rsi]
   14004305b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004305e:	and    BYTE PTR [rbx+0x74],dh
   140043061:	(bad)  
   140043062:	je     0x1400430cd
   140043064:	movsxd esp,DWORD PTR [rax]
   140043066:	addr32 jne 0x1400430ca
   140043069:	jb     0x1400430cf
   14004306b:	(bad)  
   14004306c:	add    BYTE PTR [rax],al
   14004306e:	add    BYTE PTR [rax],al
   140043070:	(bad)  
   140043071:	jae    0x1400430e7
   140043073:	jb     0x1400430de
   140043075:	outs   dx,BYTE PTR ds:[rsi]
   140043076:	addr32 (bad) 
	...
   140043080:	(bad)  
   140043081:	jbe    0x1400430e5
   140043083:	(bad)  
   140043084:	jae    0x1400430eb
   140043086:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14004308a:	je     0x1400430fe
   14004308c:	jne    0x1400430f1
   14004308e:	je     0x1400430ff
   140043090:	jb     0x1400430b9
   140043092:	add    BYTE PTR [rax],al
   140043094:	add    BYTE PTR [rax],al
   140043096:	add    BYTE PTR [rax],al
   140043098:	(bad)  
   140043099:	jbe    0x140043100
   14004309b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14004309f:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   1400430a3:	gs je  0x14004310f
   1400430a6:	outs   dx,BYTE PTR ds:[rsi]
   1400430a7:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   1400430ac:	je     0x140043120
   1400430ae:	jne    0x140043113
   1400430b0:	je     0x140043121
   1400430b2:	jb     0x1400430db
   1400430b4:	add    BYTE PTR [rax],al
   1400430b6:	add    BYTE PTR [rax],al
   1400430b8:	(bad)  
   1400430b9:	fs gs data16 (bad) 
   1400430bd:	jne    0x14004312b
   1400430bf:	je     0x1400430e1
   1400430c1:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400430c4:	jae    0x14004313a
   1400430c6:	jb     0x14004313d
   1400430c8:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400430cc:	and    BYTE PTR [rbx+0x6c],ah
   1400430cf:	outs   dx,DWORD PTR ds:[rsi]
   1400430d0:	jae    0x140043147
   1400430d2:	jb     0x140043139
   1400430d4:	(bad)  
   1400430d5:	add    BYTE PTR [rax],al
   1400430d7:	add    BYTE PTR [rax+0x73],ah
   1400430da:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400430dd:	(bad)  
   1400430de:	jb     0x140043100
   1400430e0:	fs gs ins BYTE PTR es:[rdi],dx
   1400430e3:	gs je  0x14004314f
   1400430e6:	outs   dx,BYTE PTR ds:[rsi]
   1400430e7:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   1400430ec:	je     0x140043160
   1400430ee:	jne    0x140043153
   1400430f0:	je     0x140043161
   1400430f2:	jb     0x14004311b
   1400430f4:	add    BYTE PTR [rax],al
   1400430f6:	add    BYTE PTR [rax],al
   1400430f8:	(bad)  
   1400430f9:	jbe    0x140043160
   1400430fb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400430ff:	and    BYTE PTR [rbx+0x6f],ah
   140043102:	outs   dx,BYTE PTR ds:[rsi]
   140043103:	jae    0x140043179
   140043105:	jb     0x14004317c
   140043107:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14004310b:	and    BYTE PTR [rcx+0x74],ch
   14004310e:	gs jb  0x140043172
   140043111:	je     0x140043182
   140043113:	jb     0x14004313c
   140043115:	add    BYTE PTR [rax],al
   140043117:	add    BYTE PTR [rax+0x76],ah
   14004311a:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14004311f:	and    BYTE PTR [rbp+riz*2+0x73],ah
   140043123:	je     0x140043197
   140043125:	jne    0x14004318a
   140043127:	je     0x140043198
   140043129:	jb     0x14004314b
   14004312b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   140043133:	(bad)  
   140043134:	add    BYTE PTR [rax],al
   140043136:	add    BYTE PTR [rax],al
   140043138:	(bad)  
   140043139:	jbe    0x1400431a0
   14004313b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14004313f:	and    BYTE PTR [rsi+0x62],dh
   140043142:	(bad)  
   140043143:	jae    0x1400431aa
   140043145:	and    BYTE PTR [rbx+0x6f],ah
   140043148:	outs   dx,BYTE PTR ds:[rsi]
   140043149:	jae    0x1400431bf
   14004314b:	jb     0x1400431c2
   14004314d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140043151:	and    BYTE PTR [rcx+0x74],ch
   140043154:	gs jb  0x1400431b8
   140043157:	je     0x1400431c8
   140043159:	jb     0x140043182
   14004315b:	add    BYTE PTR [rax],al
   14004315d:	add    BYTE PTR [rax],al
   14004315f:	add    BYTE PTR [rax+0x76],ah
   140043162:	imul   esi,DWORD PTR [rdx+0x74],0x206c6175
   140043169:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6563616c
   140043171:	ins    DWORD PTR es:[rdi],dx
   140043172:	outs   dx,BYTE PTR gs:[rsi]
   140043174:	je     0x140043196
   140043176:	ins    DWORD PTR es:[rdi],dx
   140043177:	(bad)  
   140043178:	jo     0x1400431a1
   14004317a:	add    BYTE PTR [rax],al
   14004317c:	add    BYTE PTR [rax],al
   14004317e:	add    BYTE PTR [rax],al
   140043180:	(bad)  
   140043181:	gs push 0x63657620
   140043187:	je     0x1400431f8
   140043189:	jb     0x1400431ab
   14004318b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14004318e:	jae    0x140043204
   140043190:	jb     0x140043207
   140043192:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140043196:	and    BYTE PTR [rcx+0x74],ch
   140043199:	gs jb  0x1400431fd
   14004319c:	je     0x14004320d
   14004319e:	jb     0x1400431c7
	...
   1400431a8:	(bad)  
   1400431a9:	gs push 0x63657620
   1400431af:	je     0x140043220
   1400431b1:	jb     0x1400431d3
   1400431b3:	fs gs jae 0x14004322b
   1400431b7:	jb     0x14004322e
   1400431b9:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400431bd:	and    BYTE PTR [rcx+0x74],ch
   1400431c0:	gs jb  0x140043224
   1400431c3:	je     0x140043234
   1400431c5:	jb     0x1400431ee
   1400431c7:	add    BYTE PTR [rax+0x65],ah
   1400431ca:	push   0x63657620
   1400431cf:	je     0x140043240
   1400431d1:	jb     0x1400431f3
   1400431d3:	jbe    0x140043237
   1400431d5:	(bad)  
   1400431d6:	jae    0x14004323d
   1400431d8:	and    BYTE PTR [rbx+0x6f],ah
   1400431db:	outs   dx,BYTE PTR ds:[rsi]
   1400431dc:	jae    0x140043252
   1400431de:	jb     0x140043255
   1400431e0:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400431e4:	and    BYTE PTR [rcx+0x74],ch
   1400431e7:	gs jb  0x14004324b
   1400431ea:	je     0x14004325b
   1400431ec:	jb     0x140043215
   1400431ee:	add    BYTE PTR [rax],al
   1400431f0:	(bad)  
   1400431f1:	movsxd ebp,DWORD PTR [rdi+0x70]
   1400431f4:	jns    0x140043216
   1400431f6:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400431f9:	jae    0x14004326f
   1400431fb:	jb     0x140043272
   1400431fd:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140043201:	and    BYTE PTR [rbx+0x6c],ah
   140043204:	outs   dx,DWORD PTR ds:[rsi]
   140043205:	jae    0x14004327c
   140043207:	jb     0x14004326e
   140043209:	(bad)  
   14004320a:	add    BYTE PTR [rax],al
   14004320c:	add    BYTE PTR [rax],al
   14004320e:	add    BYTE PTR [rax],al
   140043210:	(bad)  
   140043211:	jne    0x140043277
   140043213:	je     0x140043235
   140043215:	jb     0x14004327c
   140043217:	je     0x14004328e
   140043219:	jb     0x140043289
   14004321b:	imul   ebp,DWORD PTR [rsi+0x67],0x45600027
   140043222:	rex.W add BYTE PTR [rax+0x52],spl
   140043226:	push   rsp
   140043227:	push   rsp
   140043228:	rex.WB add BYTE PTR [r8],al
   14004322b:	add    BYTE PTR [rax],al
   14004322d:	add    BYTE PTR [rax],al
   14004322f:	add    BYTE PTR [rax+0x6c],ah
   140043232:	outs   dx,DWORD PTR ds:[rsi]
   140043233:	movsxd esp,DWORD PTR [rcx+0x6c]
   140043236:	and    BYTE PTR [rsi+0x66],dh
   140043239:	je     0x14004329c
   14004323b:	(bad)  
   14004323c:	ins    BYTE PTR es:[rdi],dx
   14004323d:	gs (bad) 
   14004323f:	add    BYTE PTR [rax+0x6c],ah
   140043242:	outs   dx,DWORD PTR ds:[rsi]
   140043243:	movsxd esp,DWORD PTR [rcx+0x6c]
   140043246:	and    BYTE PTR [rsi+0x66],dh
   140043249:	je     0x1400432ac
   14004324b:	(bad)  
   14004324c:	ins    BYTE PTR es:[rdi],dx
   14004324d:	and    BYTE PTR gs:[rbx+0x6f],ah
   140043251:	outs   dx,BYTE PTR ds:[rsi]
   140043252:	jae    0x1400432c8
   140043254:	jb     0x1400432cb
   140043256:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14004325a:	and    BYTE PTR [rbx+0x6c],ah
   14004325d:	outs   dx,DWORD PTR ds:[rsi]
   14004325e:	jae    0x1400432d5
   140043260:	jb     0x1400432c7
   140043262:	(bad)  
   140043263:	add    BYTE PTR [rax],ah
   140043265:	outs   dx,BYTE PTR ds:[rsi]
   140043266:	gs ja  0x1400432c4
   140043269:	pop    rbp
   14004326a:	add    BYTE PTR [rax],al
   14004326c:	add    BYTE PTR [rax],al
   14004326e:	add    BYTE PTR [rax],al
   140043270:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   140043274:	gs je  0x1400432dc
   140043277:	pop    rbx
   140043278:	pop    rbp
   140043279:	add    BYTE PTR [rax],al
   14004327b:	add    BYTE PTR [rax],al
   14004327d:	add    BYTE PTR [rax],al
   14004327f:	add    BYTE PTR [rax+0x6f],ah
   140043282:	ins    DWORD PTR es:[rdi],dx
   140043283:	outs   dx,BYTE PTR ds:[rsi]
   140043284:	imul   esp,DWORD PTR [rax],0x6c6c6163
   14004328a:	jae    0x1400432f5
   14004328c:	addr32 (bad) 
   14004328e:	add    BYTE PTR [rax],al
   140043290:	(bad)  
   140043291:	jo     0x1400432ff
   140043293:	(bad)  
   140043294:	movsxd esp,DWORD PTR [rbp+0x6d]
   140043297:	outs   dx,BYTE PTR gs:[rsi]
   140043299:	je     0x1400432bb
   14004329b:	fs gs ins BYTE PTR es:[rdi],dx
   14004329e:	gs je  0x140043306
   1400432a1:	and    BYTE PTR [rbx+0x6c],ah
   1400432a4:	outs   dx,DWORD PTR ds:[rsi]
   1400432a5:	jae    0x14004331c
   1400432a7:	jb     0x14004330e
   1400432a9:	(bad)  
   1400432aa:	add    BYTE PTR [rax],al
   1400432ac:	add    BYTE PTR [rax],al
   1400432ae:	add    BYTE PTR [rax],al
   1400432b0:	(bad)  
   1400432b1:	jo     0x14004331f
   1400432b3:	(bad)  
   1400432b4:	movsxd esp,DWORD PTR [rbp+0x6d]
   1400432b7:	outs   dx,BYTE PTR gs:[rsi]
   1400432b9:	je     0x1400432db
   1400432bb:	fs gs ins BYTE PTR es:[rdi],dx
   1400432be:	gs je  0x140043326
   1400432c1:	pop    rbx
   1400432c2:	pop    rbp
   1400432c3:	and    BYTE PTR [rbx+0x6c],ah
   1400432c6:	outs   dx,DWORD PTR ds:[rsi]
   1400432c7:	jae    0x14004333e
   1400432c9:	jb     0x140043330
   1400432cb:	(bad)  
   1400432cc:	add    BYTE PTR [rax],al
   1400432ce:	add    BYTE PTR [rax],al
   1400432d0:	(bad)  
   1400432d1:	ins    DWORD PTR es:[rdi],dx
   1400432d2:	(bad)  
   1400432d3:	outs   dx,BYTE PTR ds:[rsi]
   1400432d4:	(bad)  
   1400432d5:	gs and BYTE PTR fs:[esi+0x65],dh
   1400432db:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400432df:	and    BYTE PTR [rbx+0x6f],ah
   1400432e2:	outs   dx,BYTE PTR ds:[rsi]
   1400432e3:	jae    0x140043359
   1400432e5:	jb     0x14004335c
   1400432e7:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400432eb:	and    BYTE PTR [rcx+0x74],ch
   1400432ee:	gs jb  0x140043352
   1400432f1:	je     0x140043362
   1400432f3:	jb     0x14004331c
   1400432f5:	add    BYTE PTR [rax],al
   1400432f7:	add    BYTE PTR [rax+0x6d],ah
   1400432fa:	(bad)  
   1400432fb:	outs   dx,BYTE PTR ds:[rsi]
   1400432fc:	(bad)  
   1400432fd:	gs and BYTE PTR fs:[esi+0x65],dh
   140043303:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140043307:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14004330b:	je     0x14004337f
   14004330d:	jne    0x140043372
   14004330f:	je     0x140043380
   140043311:	jb     0x140043333
   140043313:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14004331b:	(bad)  
   14004331c:	add    BYTE PTR [rax],al
   14004331e:	add    BYTE PTR [rax],al
   140043320:	(bad)  
   140043321:	gs push 0x63657620
   140043327:	je     0x140043398
   140043329:	jb     0x14004334b
   14004332b:	movsxd ebp,DWORD PTR [rdi+0x70]
   14004332e:	jns    0x140043350
   140043330:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140043333:	jae    0x1400433a9
   140043335:	jb     0x1400433ac
   140043337:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14004333b:	and    BYTE PTR [rcx+0x74],ch
   14004333e:	gs jb  0x1400433a2
   140043341:	je     0x1400433b2
   140043343:	jb     0x14004336c
   140043345:	add    BYTE PTR [rax],al
   140043347:	add    BYTE PTR [rax+0x65],ah
   14004334a:	push   0x63657620
   14004334f:	je     0x1400433c0
   140043351:	jb     0x140043373
   140043353:	jbe    0x1400433b7
   140043355:	(bad)  
   140043356:	jae    0x1400433bd
   140043358:	and    BYTE PTR [rbx+0x6f],ah
   14004335b:	jo     0x1400433d6
   14004335d:	and    BYTE PTR [rbx+0x6f],ah
   140043360:	outs   dx,BYTE PTR ds:[rsi]
   140043361:	jae    0x1400433d7
   140043363:	jb     0x1400433da
   140043365:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140043369:	and    BYTE PTR [rcx+0x74],ch
   14004336c:	gs jb  0x1400433d0
   14004336f:	je     0x1400433e0
   140043371:	jb     0x14004339a
   140043373:	add    BYTE PTR [rax],al
   140043375:	add    BYTE PTR [rax],al
   140043377:	add    BYTE PTR [rax+0x64],ah
   14004337a:	jns    0x1400433ea
   14004337c:	(bad)  
   14004337d:	ins    DWORD PTR es:[rdi],dx
   14004337e:	imul   esp,DWORD PTR [rbx+0x20],0x74696e69
   140043385:	imul   esp,DWORD PTR [rcx+0x6c],0x72657a69
   14004338c:	and    BYTE PTR [rsi+0x6f],ah
   14004338f:	jb     0x1400433b1
   140043391:	(bad)  
   140043392:	add    BYTE PTR [rax],al
   140043394:	add    BYTE PTR [rax],al
   140043396:	add    BYTE PTR [rax],al
   140043398:	(bad)  
   140043399:	fs jns 0x14004340a
   14004339c:	(bad)  
   14004339d:	ins    DWORD PTR es:[rdi],dx
   14004339e:	imul   esp,DWORD PTR [rbx+0x20],0x78657461
   1400433a5:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x72747365
   1400433ad:	jne    0x140043412
   1400433af:	je     0x140043420
   1400433b1:	jb     0x1400433d3
   1400433b3:	outs   dx,WORD PTR ds:[rsi]
   1400433b5:	jb     0x1400433d7
   1400433b7:	(bad)  
	...
   1400433c0:	(bad)  
   1400433c1:	jbe    0x140043428
   1400433c3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400433c7:	and    BYTE PTR [rbx+0x6f],ah
   1400433ca:	jo     0x140043445
   1400433cc:	and    BYTE PTR [rbx+0x6f],ah
   1400433cf:	outs   dx,BYTE PTR ds:[rsi]
   1400433d0:	jae    0x140043446
   1400433d2:	jb     0x140043449
   1400433d4:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400433d8:	and    BYTE PTR [rcx+0x74],ch
   1400433db:	gs jb  0x14004343f
   1400433de:	je     0x14004344f
   1400433e0:	jb     0x140043409
   1400433e2:	add    BYTE PTR [rax],al
   1400433e4:	add    BYTE PTR [rax],al
   1400433e6:	add    BYTE PTR [rax],al
   1400433e8:	(bad)  
   1400433e9:	jbe    0x140043450
   1400433eb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400433ef:	and    BYTE PTR [rsi+0x62],dh
   1400433f2:	(bad)  
   1400433f3:	jae    0x14004345a
   1400433f5:	and    BYTE PTR [rbx+0x6f],ah
   1400433f8:	jo     0x140043473
   1400433fa:	and    BYTE PTR [rbx+0x6f],ah
   1400433fd:	outs   dx,BYTE PTR ds:[rsi]
   1400433fe:	jae    0x140043474
   140043400:	jb     0x140043477
   140043402:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140043406:	and    BYTE PTR [rcx+0x74],ch
   140043409:	gs jb  0x14004346d
   14004340c:	je     0x14004347d
   14004340e:	jb     0x140043437
	...
   140043418:	(bad)  
   140043419:	ins    DWORD PTR es:[rdi],dx
   14004341a:	(bad)  
   14004341b:	outs   dx,BYTE PTR ds:[rsi]
   14004341c:	(bad)  
   14004341d:	gs and BYTE PTR fs:[esi+0x65],dh
   140043423:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140043427:	and    BYTE PTR [rbx+0x6f],ah
   14004342a:	jo     0x1400434a5
   14004342c:	and    BYTE PTR [rbx+0x6f],ah
   14004342f:	outs   dx,BYTE PTR ds:[rsi]
   140043430:	jae    0x1400434a6
   140043432:	jb     0x1400434a9
   140043434:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140043438:	and    BYTE PTR [rcx+0x74],ch
   14004343b:	gs jb  0x14004349f
   14004343e:	je     0x1400434af
   140043440:	jb     0x140043469
   140043442:	add    BYTE PTR [rax],al
   140043444:	add    BYTE PTR [rax],al
   140043446:	add    BYTE PTR [rax],al
   140043448:	(bad)  
   140043449:	ins    BYTE PTR es:[rdi],dx
   14004344a:	outs   dx,DWORD PTR ds:[rsi]
   14004344b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004344e:	and    BYTE PTR [rbx+0x74],dh
   140043451:	(bad)  
   140043452:	je     0x1400434bd
   140043454:	movsxd esp,DWORD PTR [rax]
   140043456:	je     0x1400434c0
   140043458:	jb     0x1400434bf
   14004345a:	(bad)  
   14004345b:	and    BYTE PTR fs:[rdi+0x75],ah
   14004345f:	(bad)  
   140043460:	jb     0x1400434c6
   140043462:	(bad)  
   140043463:	add    BYTE PTR [rax],al
   140043465:	add    BYTE PTR [rax],al
   140043467:	add    BYTE PTR [rax],ah
   140043469:	push   rsp
   14004346a:	jns    0x1400434dc
   14004346c:	and    BYTE PTR gs:[rbp+riz*2+0x73],al
   140043471:	movsxd esi,DWORD PTR [rdx+0x69]
   140043474:	jo     0x1400434ea
   140043476:	outs   dx,DWORD PTR ds:[rsi]
   140043477:	jb     0x1400434a0
   140043479:	add    BYTE PTR [rax],al
   14004347b:	add    BYTE PTR [rax],al
   14004347d:	add    BYTE PTR [rax],al
   14004347f:	add    BYTE PTR [rax],ah
   140043481:	rex.X (bad) 
   140043483:	jae    0x1400434ea
   140043485:	and    BYTE PTR [rbx+0x6c],al
   140043488:	(bad)  
   140043489:	jae    0x1400434fe
   14004348b:	and    BYTE PTR [rbp+riz*2+0x73],al
   14004348f:	movsxd esi,DWORD PTR [rdx+0x69]
   140043492:	jo     0x140043508
   140043494:	outs   dx,DWORD PTR ds:[rsi]
   140043495:	jb     0x1400434b7
   140043497:	(bad)  
   140043498:	je     0x1400434ba
   14004349a:	sub    BYTE PTR [rax],al
   14004349c:	add    BYTE PTR [rax],al
   14004349e:	add    BYTE PTR [rax],al
   1400434a0:	and    BYTE PTR [rdx+0x61],al
   1400434a3:	jae    0x14004350a
   1400434a5:	and    BYTE PTR [rbx+0x6c],al
   1400434a8:	(bad)  
   1400434a9:	jae    0x14004351e
   1400434ab:	and    BYTE PTR [rcx+0x72],al
   1400434ae:	jb     0x140043511
   1400434b0:	jns    0x1400434d9
   1400434b2:	add    BYTE PTR [rax],al
   1400434b4:	add    BYTE PTR [rax],al
   1400434b6:	add    BYTE PTR [rax],al
   1400434b8:	and    BYTE PTR [rbx+0x6c],al
   1400434bb:	(bad)  
   1400434bc:	jae    0x140043531
   1400434be:	and    BYTE PTR [rax+0x69],cl
   1400434c1:	gs jb  0x140043525
   1400434c4:	jb     0x140043529
   1400434c6:	push   0x65442079
   1400434cb:	jae    0x140043530
   1400434cd:	jb     0x140043538
   1400434cf:	jo     0x140043545
   1400434d1:	outs   dx,DWORD PTR ds:[rsi]
   1400434d2:	jb     0x1400434fb
   1400434d4:	add    BYTE PTR [rax],al
   1400434d6:	add    BYTE PTR [rax],al
   1400434d8:	and    BYTE PTR [rbx+0x6f],al
   1400434db:	ins    DWORD PTR es:[rdi],dx
   1400434dc:	jo     0x14004354a
   1400434de:	gs je  0x140043546
   1400434e1:	and    BYTE PTR [rdi+0x62],cl
   1400434e4:	push   0x65
   1400434e6:	movsxd esi,DWORD PTR [rax+riz*1+0x4c]
   1400434ea:	outs   dx,DWORD PTR ds:[rsi]
   1400434eb:	movsxd esp,DWORD PTR [rcx+0x74]
   1400434ee:	outs   dx,DWORD PTR ds:[rsi]
   1400434ef:	jb     0x140043518
	...
   1400435fd:	add    BYTE PTR [rax],al
   1400435ff:	add    BYTE PTR [rax],ah
   140043601:	add    BYTE PTR [rax],ah
   140043603:	add    BYTE PTR [rax],ah
   140043605:	add    BYTE PTR [rax],ah
   140043607:	add    BYTE PTR [rax],ah
   140043609:	add    BYTE PTR [rax],ah
   14004360b:	add    BYTE PTR [rax],ah
   14004360d:	add    BYTE PTR [rax],ah
   14004360f:	add    BYTE PTR [rax],ah
   140043611:	add    BYTE PTR [rax],ch
   140043613:	add    BYTE PTR [rax],ch
   140043615:	add    BYTE PTR [rax],ch
   140043617:	add    BYTE PTR [rax],ch
   140043619:	add    BYTE PTR [rax],ch
   14004361b:	add    BYTE PTR [rax],ah
   14004361d:	add    BYTE PTR [rax],ah
   14004361f:	add    BYTE PTR [rax],ah
   140043621:	add    BYTE PTR [rax],ah
   140043623:	add    BYTE PTR [rax],ah
   140043625:	add    BYTE PTR [rax],ah
   140043627:	add    BYTE PTR [rax],ah
   140043629:	add    BYTE PTR [rax],ah
   14004362b:	add    BYTE PTR [rax],ah
   14004362d:	add    BYTE PTR [rax],ah
   14004362f:	add    BYTE PTR [rax],ah
   140043631:	add    BYTE PTR [rax],ah
   140043633:	add    BYTE PTR [rax],ah
   140043635:	add    BYTE PTR [rax],ah
   140043637:	add    BYTE PTR [rax],ah
   140043639:	add    BYTE PTR [rax],ah
   14004363b:	add    BYTE PTR [rax],ah
   14004363d:	add    BYTE PTR [rax],ah
   14004363f:	add    BYTE PTR [rax+0x0],cl
   140043642:	adc    BYTE PTR [rax],al
   140043644:	adc    BYTE PTR [rax],al
   140043646:	adc    BYTE PTR [rax],al
   140043648:	adc    BYTE PTR [rax],al
   14004364a:	adc    BYTE PTR [rax],al
   14004364c:	adc    BYTE PTR [rax],al
   14004364e:	adc    BYTE PTR [rax],al
   140043650:	adc    BYTE PTR [rax],al
   140043652:	adc    BYTE PTR [rax],al
   140043654:	adc    BYTE PTR [rax],al
   140043656:	adc    BYTE PTR [rax],al
   140043658:	adc    BYTE PTR [rax],al
   14004365a:	adc    BYTE PTR [rax],al
   14004365c:	adc    BYTE PTR [rax],al
   14004365e:	adc    BYTE PTR [rax],al
   140043660:	test   BYTE PTR [rax],al
   140043662:	test   BYTE PTR [rax],al
   140043664:	test   BYTE PTR [rax],al
   140043666:	test   BYTE PTR [rax],al
   140043668:	test   BYTE PTR [rax],al
   14004366a:	test   BYTE PTR [rax],al
   14004366c:	test   BYTE PTR [rax],al
   14004366e:	test   BYTE PTR [rax],al
   140043670:	test   BYTE PTR [rax],al
   140043672:	test   BYTE PTR [rax],al
   140043674:	adc    BYTE PTR [rax],al
   140043676:	adc    BYTE PTR [rax],al
   140043678:	adc    BYTE PTR [rax],al
   14004367a:	adc    BYTE PTR [rax],al
   14004367c:	adc    BYTE PTR [rax],al
   14004367e:	adc    BYTE PTR [rax],al
   140043680:	adc    BYTE PTR [rax],al
   140043682:	add    DWORD PTR [rax],0x810081
   140043688:	add    DWORD PTR [rax],0x810081
   14004368e:	add    DWORD PTR [rax],eax
   140043690:	add    DWORD PTR [rax],eax
   140043692:	add    DWORD PTR [rax],eax
   140043694:	add    DWORD PTR [rax],eax
   140043696:	add    DWORD PTR [rax],eax
   140043698:	add    DWORD PTR [rax],eax
   14004369a:	add    DWORD PTR [rax],eax
   14004369c:	add    DWORD PTR [rax],eax
   14004369e:	add    DWORD PTR [rax],eax
   1400436a0:	add    DWORD PTR [rax],eax
   1400436a2:	add    DWORD PTR [rax],eax
   1400436a4:	add    DWORD PTR [rax],eax
   1400436a6:	add    DWORD PTR [rax],eax
   1400436a8:	add    DWORD PTR [rax],eax
   1400436aa:	add    DWORD PTR [rax],eax
   1400436ac:	add    DWORD PTR [rax],eax
   1400436ae:	add    DWORD PTR [rax],eax
   1400436b0:	add    DWORD PTR [rax],eax
   1400436b2:	add    DWORD PTR [rax],eax
   1400436b4:	add    DWORD PTR [rax],eax
   1400436b6:	adc    BYTE PTR [rax],al
   1400436b8:	adc    BYTE PTR [rax],al
   1400436ba:	adc    BYTE PTR [rax],al
   1400436bc:	adc    BYTE PTR [rax],al
   1400436be:	adc    BYTE PTR [rax],al
   1400436c0:	adc    BYTE PTR [rax],al
   1400436c2:	(bad)  
   1400436c3:	add    BYTE PTR [rdx-0x7dff7e00],al
   1400436c9:	add    BYTE PTR [rdx+0x2008200],al
   1400436cf:	add    BYTE PTR [rdx],al
   1400436d1:	add    BYTE PTR [rdx],al
   1400436d3:	add    BYTE PTR [rdx],al
   1400436d5:	add    BYTE PTR [rdx],al
   1400436d7:	add    BYTE PTR [rdx],al
   1400436d9:	add    BYTE PTR [rdx],al
   1400436db:	add    BYTE PTR [rdx],al
   1400436dd:	add    BYTE PTR [rdx],al
   1400436df:	add    BYTE PTR [rdx],al
   1400436e1:	add    BYTE PTR [rdx],al
   1400436e3:	add    BYTE PTR [rdx],al
   1400436e5:	add    BYTE PTR [rdx],al
   1400436e7:	add    BYTE PTR [rdx],al
   1400436e9:	add    BYTE PTR [rdx],al
   1400436eb:	add    BYTE PTR [rdx],al
   1400436ed:	add    BYTE PTR [rdx],al
   1400436ef:	add    BYTE PTR [rdx],al
   1400436f1:	add    BYTE PTR [rdx],al
   1400436f3:	add    BYTE PTR [rdx],al
   1400436f5:	add    BYTE PTR [rax],dl
   1400436f7:	add    BYTE PTR [rax],dl
   1400436f9:	add    BYTE PTR [rax],dl
   1400436fb:	add    BYTE PTR [rax],dl
   1400436fd:	add    BYTE PTR [rax],ah
	...
   1400437ff:	add    BYTE PTR [rax],al
   140043801:	add    BYTE PTR [rax],ah
   140043803:	add    BYTE PTR [rax],ah
   140043805:	add    BYTE PTR [rax],ah
   140043807:	add    BYTE PTR [rax],ah
   140043809:	add    BYTE PTR [rax],ah
   14004380b:	add    BYTE PTR [rax],ah
   14004380d:	add    BYTE PTR [rax],ah
   14004380f:	add    BYTE PTR [rax],ah
   140043811:	add    BYTE PTR [rax],ah
   140043813:	add    BYTE PTR [rax+0x0],ch
   140043816:	sub    BYTE PTR [rax],al
   140043818:	sub    BYTE PTR [rax],al
   14004381a:	sub    BYTE PTR [rax],al
   14004381c:	sub    BYTE PTR [rax],al
   14004381e:	and    BYTE PTR [rax],al
   140043820:	and    BYTE PTR [rax],al
   140043822:	and    BYTE PTR [rax],al
   140043824:	and    BYTE PTR [rax],al
   140043826:	and    BYTE PTR [rax],al
   140043828:	and    BYTE PTR [rax],al
   14004382a:	and    BYTE PTR [rax],al
   14004382c:	and    BYTE PTR [rax],al
   14004382e:	and    BYTE PTR [rax],al
   140043830:	and    BYTE PTR [rax],al
   140043832:	and    BYTE PTR [rax],al
   140043834:	and    BYTE PTR [rax],al
   140043836:	and    BYTE PTR [rax],al
   140043838:	and    BYTE PTR [rax],al
   14004383a:	and    BYTE PTR [rax],al
   14004383c:	and    BYTE PTR [rax],al
   14004383e:	and    BYTE PTR [rax],al
   140043840:	and    BYTE PTR [rax],al
   140043842:	rex.W add BYTE PTR [rax],dl
   140043845:	add    BYTE PTR [rax],dl
   140043847:	add    BYTE PTR [rax],dl
   140043849:	add    BYTE PTR [rax],dl
   14004384b:	add    BYTE PTR [rax],dl
   14004384d:	add    BYTE PTR [rax],dl
   14004384f:	add    BYTE PTR [rax],dl
   140043851:	add    BYTE PTR [rax],dl
   140043853:	add    BYTE PTR [rax],dl
   140043855:	add    BYTE PTR [rax],dl
   140043857:	add    BYTE PTR [rax],dl
   140043859:	add    BYTE PTR [rax],dl
   14004385b:	add    BYTE PTR [rax],dl
   14004385d:	add    BYTE PTR [rax],dl
   14004385f:	add    BYTE PTR [rax],dl
   140043861:	add    BYTE PTR [rax+rax*1+0x840084],al
   140043868:	test   BYTE PTR [rax],al
   14004386a:	test   BYTE PTR [rax],al
   14004386c:	test   BYTE PTR [rax],al
   14004386e:	test   BYTE PTR [rax],al
   140043870:	test   BYTE PTR [rax],al
   140043872:	test   BYTE PTR [rax],al
   140043874:	test   BYTE PTR [rax],al
   140043876:	adc    BYTE PTR [rax],al
   140043878:	adc    BYTE PTR [rax],al
   14004387a:	adc    BYTE PTR [rax],al
   14004387c:	adc    BYTE PTR [rax],al
   14004387e:	adc    BYTE PTR [rax],al
   140043880:	adc    BYTE PTR [rax],al
   140043882:	adc    BYTE PTR [rax],al
   140043884:	add    DWORD PTR [rcx],0x1810181
   14004388a:	add    DWORD PTR [rcx],0x1810181
   140043890:	add    DWORD PTR [rcx],eax
   140043892:	add    DWORD PTR [rcx],eax
   140043894:	add    DWORD PTR [rcx],eax
   140043896:	add    DWORD PTR [rcx],eax
   140043898:	add    DWORD PTR [rcx],eax
   14004389a:	add    DWORD PTR [rcx],eax
   14004389c:	add    DWORD PTR [rcx],eax
   14004389e:	add    DWORD PTR [rcx],eax
   1400438a0:	add    DWORD PTR [rcx],eax
   1400438a2:	add    DWORD PTR [rcx],eax
   1400438a4:	add    DWORD PTR [rcx],eax
   1400438a6:	add    DWORD PTR [rcx],eax
   1400438a8:	add    DWORD PTR [rcx],eax
   1400438aa:	add    DWORD PTR [rcx],eax
   1400438ac:	add    DWORD PTR [rcx],eax
   1400438ae:	add    DWORD PTR [rcx],eax
   1400438b0:	add    DWORD PTR [rcx],eax
   1400438b2:	add    DWORD PTR [rcx],eax
   1400438b4:	add    DWORD PTR [rcx],eax
   1400438b6:	add    DWORD PTR [rcx],eax
   1400438b8:	adc    BYTE PTR [rax],al
   1400438ba:	adc    BYTE PTR [rax],al
   1400438bc:	adc    BYTE PTR [rax],al
   1400438be:	adc    BYTE PTR [rax],al
   1400438c0:	adc    BYTE PTR [rax],al
   1400438c2:	adc    BYTE PTR [rax],al
   1400438c4:	(bad)  
   1400438c5:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   1400438cb:	add    DWORD PTR [rdx+0x2018201],eax
   1400438d1:	add    DWORD PTR [rdx],eax
   1400438d3:	add    DWORD PTR [rdx],eax
   1400438d5:	add    DWORD PTR [rdx],eax
   1400438d7:	add    DWORD PTR [rdx],eax
   1400438d9:	add    DWORD PTR [rdx],eax
   1400438db:	add    DWORD PTR [rdx],eax
   1400438dd:	add    DWORD PTR [rdx],eax
   1400438df:	add    DWORD PTR [rdx],eax
   1400438e1:	add    DWORD PTR [rdx],eax
   1400438e3:	add    DWORD PTR [rdx],eax
   1400438e5:	add    DWORD PTR [rdx],eax
   1400438e7:	add    DWORD PTR [rdx],eax
   1400438e9:	add    DWORD PTR [rdx],eax
   1400438eb:	add    DWORD PTR [rdx],eax
   1400438ed:	add    DWORD PTR [rdx],eax
   1400438ef:	add    DWORD PTR [rdx],eax
   1400438f1:	add    DWORD PTR [rdx],eax
   1400438f3:	add    DWORD PTR [rdx],eax
   1400438f5:	add    DWORD PTR [rdx],eax
   1400438f7:	add    DWORD PTR [rax],edx
   1400438f9:	add    BYTE PTR [rax],dl
   1400438fb:	add    BYTE PTR [rax],dl
   1400438fd:	add    BYTE PTR [rax],dl
   1400438ff:	add    BYTE PTR [rax],ah
   140043901:	add    BYTE PTR [rax],ah
   140043903:	add    BYTE PTR [rax],ah
   140043905:	add    BYTE PTR [rax],ah
   140043907:	add    BYTE PTR [rax],ah
   140043909:	add    BYTE PTR [rax],ah
   14004390b:	add    BYTE PTR [rax],ah
   14004390d:	add    BYTE PTR [rax],ah
   14004390f:	add    BYTE PTR [rax],ah
   140043911:	add    BYTE PTR [rax],ah
   140043913:	add    BYTE PTR [rax],ah
   140043915:	add    BYTE PTR [rax],ah
   140043917:	add    BYTE PTR [rax],ah
   140043919:	add    BYTE PTR [rax],ah
   14004391b:	add    BYTE PTR [rax],ah
   14004391d:	add    BYTE PTR [rax],ah
   14004391f:	add    BYTE PTR [rax],ah
   140043921:	add    BYTE PTR [rax],ah
   140043923:	add    BYTE PTR [rax],ah
   140043925:	add    BYTE PTR [rax],ah
   140043927:	add    BYTE PTR [rax],ah
   140043929:	add    BYTE PTR [rax],ah
   14004392b:	add    BYTE PTR [rax],ah
   14004392d:	add    BYTE PTR [rax],ah
   14004392f:	add    BYTE PTR [rax],ah
   140043931:	add    BYTE PTR [rax],ah
   140043933:	add    BYTE PTR [rax],ah
   140043935:	add    BYTE PTR [rax],ah
   140043937:	add    BYTE PTR [rax],ah
   140043939:	add    BYTE PTR [rax],ah
   14004393b:	add    BYTE PTR [rax],ah
   14004393d:	add    BYTE PTR [rax],ah
   14004393f:	add    BYTE PTR [rax],ah
   140043941:	add    BYTE PTR [rax+0x0],cl
   140043944:	adc    BYTE PTR [rax],al
   140043946:	adc    BYTE PTR [rax],al
   140043948:	adc    BYTE PTR [rax],al
   14004394a:	adc    BYTE PTR [rax],al
   14004394c:	adc    BYTE PTR [rax],al
   14004394e:	adc    BYTE PTR [rax],al
   140043950:	adc    BYTE PTR [rax],al
   140043952:	adc    BYTE PTR [rax],al
   140043954:	adc    BYTE PTR [rax],al
   140043956:	adc    BYTE PTR [rax],al
   140043958:	adc    BYTE PTR [rax],al
   14004395a:	adc    BYTE PTR [rax],al
   14004395c:	adc    BYTE PTR [rax],al
   14004395e:	adc    BYTE PTR [rax],al
   140043960:	adc    BYTE PTR [rax],al
   140043962:	adc    BYTE PTR [rax],al
   140043964:	adc    BYTE PTR [rax],al
   140043966:	adc    al,0x0
   140043968:	adc    al,0x0
   14004396a:	adc    BYTE PTR [rax],al
   14004396c:	adc    BYTE PTR [rax],al
   14004396e:	adc    BYTE PTR [rax],al
   140043970:	adc    BYTE PTR [rax],al
   140043972:	adc    BYTE PTR [rax],al
   140043974:	adc    al,0x0
   140043976:	adc    BYTE PTR [rax],al
   140043978:	adc    BYTE PTR [rax],al
   14004397a:	adc    BYTE PTR [rax],al
   14004397c:	adc    BYTE PTR [rax],al
   14004397e:	adc    BYTE PTR [rax],al
   140043980:	adc    BYTE PTR [rax],al
   140043982:	add    DWORD PTR [rcx],eax
   140043984:	add    DWORD PTR [rcx],eax
   140043986:	add    DWORD PTR [rcx],eax
   140043988:	add    DWORD PTR [rcx],eax
   14004398a:	add    DWORD PTR [rcx],eax
   14004398c:	add    DWORD PTR [rcx],eax
   14004398e:	add    DWORD PTR [rcx],eax
   140043990:	add    DWORD PTR [rcx],eax
   140043992:	add    DWORD PTR [rcx],eax
   140043994:	add    DWORD PTR [rcx],eax
   140043996:	add    DWORD PTR [rcx],eax
   140043998:	add    DWORD PTR [rcx],eax
   14004399a:	add    DWORD PTR [rcx],eax
   14004399c:	add    DWORD PTR [rcx],eax
   14004399e:	add    DWORD PTR [rcx],eax
   1400439a0:	add    DWORD PTR [rcx],eax
   1400439a2:	add    DWORD PTR [rcx],eax
   1400439a4:	add    DWORD PTR [rcx],eax
   1400439a6:	add    DWORD PTR [rcx],eax
   1400439a8:	add    DWORD PTR [rcx],eax
   1400439aa:	add    DWORD PTR [rcx],eax
   1400439ac:	add    DWORD PTR [rcx],eax
   1400439ae:	add    DWORD PTR [rcx],eax
   1400439b0:	adc    BYTE PTR [rax],al
   1400439b2:	add    DWORD PTR [rcx],eax
   1400439b4:	add    DWORD PTR [rcx],eax
   1400439b6:	add    DWORD PTR [rcx],eax
   1400439b8:	add    DWORD PTR [rcx],eax
   1400439ba:	add    DWORD PTR [rcx],eax
   1400439bc:	add    DWORD PTR [rcx],eax
   1400439be:	add    DWORD PTR [rcx],eax
   1400439c0:	add    al,BYTE PTR [rcx]
   1400439c2:	add    al,BYTE PTR [rcx]
   1400439c4:	add    al,BYTE PTR [rcx]
   1400439c6:	add    al,BYTE PTR [rcx]
   1400439c8:	add    al,BYTE PTR [rcx]
   1400439ca:	add    al,BYTE PTR [rcx]
   1400439cc:	add    al,BYTE PTR [rcx]
   1400439ce:	add    al,BYTE PTR [rcx]
   1400439d0:	add    al,BYTE PTR [rcx]
   1400439d2:	add    al,BYTE PTR [rcx]
   1400439d4:	add    al,BYTE PTR [rcx]
   1400439d6:	add    al,BYTE PTR [rcx]
   1400439d8:	add    al,BYTE PTR [rcx]
   1400439da:	add    al,BYTE PTR [rcx]
   1400439dc:	add    al,BYTE PTR [rcx]
   1400439de:	add    al,BYTE PTR [rcx]
   1400439e0:	add    al,BYTE PTR [rcx]
   1400439e2:	add    al,BYTE PTR [rcx]
   1400439e4:	add    al,BYTE PTR [rcx]
   1400439e6:	add    al,BYTE PTR [rcx]
   1400439e8:	add    al,BYTE PTR [rcx]
   1400439ea:	add    al,BYTE PTR [rcx]
   1400439ec:	add    al,BYTE PTR [rcx]
   1400439ee:	add    al,BYTE PTR [rcx]
   1400439f0:	adc    BYTE PTR [rax],al
   1400439f2:	add    al,BYTE PTR [rcx]
   1400439f4:	add    al,BYTE PTR [rcx]
   1400439f6:	add    al,BYTE PTR [rcx]
   1400439f8:	add    al,BYTE PTR [rcx]
   1400439fa:	add    al,BYTE PTR [rcx]
   1400439fc:	add    al,BYTE PTR [rcx]
   1400439fe:	add    al,BYTE PTR [rcx]
   140043a00:	add    al,BYTE PTR [rcx]
   140043a02:	add    DWORD PTR [rcx],eax
	...
   140043a10:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140043a17:	xchg   DWORD PTR [rax-0x73747577],ecx
   140043a1d:	lea    ecx,[rsi-0x6d6e6f71]
   140043a23:	xchg   ebx,eax
   140043a24:	xchg   esp,eax
   140043a25:	xchg   ebp,eax
   140043a26:	xchg   esi,eax
   140043a27:	xchg   edi,eax
   140043a28:	cwde   
   140043a29:	cdq    
   140043a2a:	(bad)  
   140043a2b:	fwait
   140043a2c:	pushf  
   140043a2d:	popf   
   140043a2e:	sahf   
   140043a2f:	lahf   
   140043a30:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140043a39:	test   eax,0xadacabaa
   140043a3e:	scas   al,BYTE PTR es:[rdi]
   140043a3f:	scas   eax,DWORD PTR es:[rdi]
   140043a40:	mov    al,0xb1
   140043a42:	mov    dl,0xb3
   140043a44:	mov    ah,0xb5
   140043a46:	mov    dh,0xb7
   140043a48:	mov    eax,0xbcbbbab9
   140043a4d:	mov    ebp,0xc1c0bfbe
   140043a52:	ret    0xc4c3
   140043a55:	(bad)
   140043a58:	enter  0xcac9,0xcb
   140043a5c:	int3   
   140043a5d:	int    0xce
   140043a5f:	iret   
   140043a60:	rcl    cl,1
   140043a62:	rcl    bl,cl
   140043a64:	(bad)  
   140043a65:	(bad)  
   140043a66:	(bad)  
   140043a67:	xlat   BYTE PTR ds:[rbx]
   140043a68:	fcomp  st(1)
   140043a6a:	fcmovu st,st(3)
   140043a6c:	(bad)  
   140043a6e:	(bad)  
   140043a70:	loopne 0x140043a53
   140043a72:	loop   0x140043a57
   140043a74:	in     al,0xe5
   140043a76:	out    0xe7,al
   140043a78:	call   0x12cf02566
   140043a7d:	in     eax,dx
   140043a7e:	out    dx,al
   140043a7f:	out    dx,eax
   140043a80:	lock icebp 
   140043a82:	repnz repz hlt 
   140043a85:	cmc    
   140043a86:	div    bh
   140043a88:	clc    
   140043a89:	stc    
   140043a8a:	cli    
   140043a8b:	sti    
   140043a8c:	cld    
   140043a8d:	std    
   140043a8e:	(bad)  
   140043a8f:	inc    DWORD PTR [rax]
   140043a91:	add    DWORD PTR [rdx],eax
   140043a93:	add    eax,DWORD PTR [rax*1+0x9080706]
   140043a9a:	or     cl,BYTE PTR [rbx]
   140043a9c:	or     al,0xd
   140043a9e:	(bad)  
   140043a9f:	movups xmm2,XMMWORD PTR [rcx]
   140043aa2:	adc    dl,BYTE PTR [rbx]
   140043aa4:	adc    al,0x15
   140043aa6:	(bad)  
   140043aa7:	(bad)  
   140043aa8:	sbb    BYTE PTR [rcx],bl
   140043aaa:	sbb    bl,BYTE PTR [rbx]
   140043aac:	sbb    al,0x1d
   140043aae:	(bad)  
   140043aaf:	(bad)  
   140043ab0:	and    BYTE PTR [rcx],ah
   140043ab2:	and    ah,BYTE PTR [rbx]
   140043ab4:	and    al,0x25
   140043ab6:	es (bad) 
   140043ab8:	sub    BYTE PTR [rcx],ch
   140043aba:	sub    ch,BYTE PTR [rbx]
   140043abc:	sub    al,0x2d
   140043abe:	cs (bad) 
   140043ac0:	xor    BYTE PTR [rcx],dh
   140043ac2:	xor    dh,BYTE PTR [rbx]
   140043ac4:	xor    al,0x35
   140043ac6:	ss (bad) 
   140043ac8:	cmp    BYTE PTR [rcx],bh
   140043aca:	cmp    bh,BYTE PTR [rbx]
   140043acc:	cmp    al,0x3d
   140043ace:	ds (bad) 
   140043ad0:	rex (bad) 
   140043ad2:	(bad)
   140043ad7:	addr32 push 0x6c6b6a69
   140043add:	ins    DWORD PTR es:[rdi],dx
   140043ade:	outs   dx,BYTE PTR ds:[rsi]
   140043adf:	outs   dx,DWORD PTR ds:[rsi]
   140043ae0:	jo     0x140043b53
   140043ae2:	jb     0x140043b57
   140043ae4:	je     0x140043b5b
   140043ae6:	jbe    0x140043b5f
   140043ae8:	js     0x140043b63
   140043aea:	jp     0x140043b47
   140043aec:	pop    rsp
   140043aed:	pop    rbp
   140043aee:	pop    rsi
   140043aef:	pop    rdi
   140043af0:	(bad)  
   140043af1:	(bad)  
   140043af2:	(bad)
   140043af7:	addr32 push 0x6c6b6a69
   140043afd:	ins    DWORD PTR es:[rdi],dx
   140043afe:	outs   dx,BYTE PTR ds:[rsi]
   140043aff:	outs   dx,DWORD PTR ds:[rsi]
   140043b00:	jo     0x140043b73
   140043b02:	jb     0x140043b77
   140043b04:	je     0x140043b7b
   140043b06:	jbe    0x140043b7f
   140043b08:	js     0x140043b83
   140043b0a:	jp     0x140043b87
   140043b0c:	jl     0x140043b8b
   140043b0e:	jle    0x140043b8f
   140043b10:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140043b17:	xchg   DWORD PTR [rax-0x73747577],ecx
   140043b1d:	lea    ecx,[rsi-0x6d6e6f71]
   140043b23:	xchg   ebx,eax
   140043b24:	xchg   esp,eax
   140043b25:	xchg   ebp,eax
   140043b26:	xchg   esi,eax
   140043b27:	xchg   edi,eax
   140043b28:	cwde   
   140043b29:	cdq    
   140043b2a:	(bad)  
   140043b2b:	fwait
   140043b2c:	pushf  
   140043b2d:	popf   
   140043b2e:	sahf   
   140043b2f:	lahf   
   140043b30:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140043b39:	test   eax,0xadacabaa
   140043b3e:	scas   al,BYTE PTR es:[rdi]
   140043b3f:	scas   eax,DWORD PTR es:[rdi]
   140043b40:	mov    al,0xb1
   140043b42:	mov    dl,0xb3
   140043b44:	mov    ah,0xb5
   140043b46:	mov    dh,0xb7
   140043b48:	mov    eax,0xbcbbbab9
   140043b4d:	mov    ebp,0xc1c0bfbe
   140043b52:	ret    0xc4c3
   140043b55:	(bad)
   140043b58:	enter  0xcac9,0xcb
   140043b5c:	int3   
   140043b5d:	int    0xce
   140043b5f:	iret   
   140043b60:	rcl    cl,1
   140043b62:	rcl    bl,cl
   140043b64:	(bad)  
   140043b65:	(bad)  
   140043b66:	(bad)  
   140043b67:	xlat   BYTE PTR ds:[rbx]
   140043b68:	fcomp  st(1)
   140043b6a:	fcmovu st,st(3)
   140043b6c:	(bad)  
   140043b6e:	(bad)  
   140043b70:	loopne 0x140043b53
   140043b72:	loop   0x140043b57
   140043b74:	in     al,0xe5
   140043b76:	out    0xe7,al
   140043b78:	call   0x12cf02666
   140043b7d:	in     eax,dx
   140043b7e:	out    dx,al
   140043b7f:	out    dx,eax
   140043b80:	lock icebp 
   140043b82:	repnz repz hlt 
   140043b85:	cmc    
   140043b86:	div    bh
   140043b88:	clc    
   140043b89:	stc    
   140043b8a:	cli    
   140043b8b:	sti    
   140043b8c:	cld    
   140043b8d:	std    
   140043b8e:	(bad)  
   140043b8f:	inc    DWORD PTR [rax-0x7b7c7d7f]
   140043b95:	test   DWORD PTR [rsi-0x75767779],eax
   140043b9b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140043ba2:	xchg   edx,eax
   140043ba3:	xchg   ebx,eax
   140043ba4:	xchg   esp,eax
   140043ba5:	xchg   ebp,eax
   140043ba6:	xchg   esi,eax
   140043ba7:	xchg   edi,eax
   140043ba8:	cwde   
   140043ba9:	cdq    
   140043baa:	(bad)  
   140043bab:	fwait
   140043bac:	pushf  
   140043bad:	popf   
   140043bae:	sahf   
   140043baf:	lahf   
   140043bb0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140043bb9:	test   eax,0xadacabaa
   140043bbe:	scas   al,BYTE PTR es:[rdi]
   140043bbf:	scas   eax,DWORD PTR es:[rdi]
   140043bc0:	mov    al,0xb1
   140043bc2:	mov    dl,0xb3
   140043bc4:	mov    ah,0xb5
   140043bc6:	mov    dh,0xb7
   140043bc8:	mov    eax,0xbcbbbab9
   140043bcd:	mov    ebp,0xc1c0bfbe
   140043bd2:	ret    0xc4c3
   140043bd5:	(bad)
   140043bd8:	enter  0xcac9,0xcb
   140043bdc:	int3   
   140043bdd:	int    0xce
   140043bdf:	iret   
   140043be0:	rcl    cl,1
   140043be2:	rcl    bl,cl
   140043be4:	(bad)  
   140043be5:	(bad)  
   140043be6:	(bad)  
   140043be7:	xlat   BYTE PTR ds:[rbx]
   140043be8:	fcomp  st(1)
   140043bea:	fcmovu st,st(3)
   140043bec:	(bad)  
   140043bee:	(bad)  
   140043bf0:	loopne 0x140043bd3
   140043bf2:	loop   0x140043bd7
   140043bf4:	in     al,0xe5
   140043bf6:	out    0xe7,al
   140043bf8:	call   0x12cf026e6
   140043bfd:	in     eax,dx
   140043bfe:	out    dx,al
   140043bff:	out    dx,eax
   140043c00:	lock icebp 
   140043c02:	repnz repz hlt 
   140043c05:	cmc    
   140043c06:	div    bh
   140043c08:	clc    
   140043c09:	stc    
   140043c0a:	cli    
   140043c0b:	sti    
   140043c0c:	cld    
   140043c0d:	std    
   140043c0e:	(bad)  
   140043c0f:	inc    DWORD PTR [rax]
   140043c11:	add    DWORD PTR [rdx],eax
   140043c13:	add    eax,DWORD PTR [rax*1+0x9080706]
   140043c1a:	or     cl,BYTE PTR [rbx]
   140043c1c:	or     al,0xd
   140043c1e:	(bad)  
   140043c1f:	movups xmm2,XMMWORD PTR [rcx]
   140043c22:	adc    dl,BYTE PTR [rbx]
   140043c24:	adc    al,0x15
   140043c26:	(bad)  
   140043c27:	(bad)  
   140043c28:	sbb    BYTE PTR [rcx],bl
   140043c2a:	sbb    bl,BYTE PTR [rbx]
   140043c2c:	sbb    al,0x1d
   140043c2e:	(bad)  
   140043c2f:	(bad)  
   140043c30:	and    BYTE PTR [rcx],ah
   140043c32:	and    ah,BYTE PTR [rbx]
   140043c34:	and    al,0x25
   140043c36:	es (bad) 
   140043c38:	sub    BYTE PTR [rcx],ch
   140043c3a:	sub    ch,BYTE PTR [rbx]
   140043c3c:	sub    al,0x2d
   140043c3e:	cs (bad) 
   140043c40:	xor    BYTE PTR [rcx],dh
   140043c42:	xor    dh,BYTE PTR [rbx]
   140043c44:	xor    al,0x35
   140043c46:	ss (bad) 
   140043c48:	cmp    BYTE PTR [rcx],bh
   140043c4a:	cmp    bh,BYTE PTR [rbx]
   140043c4c:	cmp    al,0x3d
   140043c4e:	ds (bad) 
   140043c50:	rex
   140043c51:	rex.B
   140043c52:	rex.X
   140043c53:	rex.XB
   140043c54:	rex.R
   140043c55:	rex.RB
   140043c56:	rex.RX
   140043c57:	rex.RXB
   140043c58:	rex.W
   140043c59:	rex.WB
   140043c5a:	rex.WX
   140043c5b:	rex.WXB
   140043c5c:	rex.WR
   140043c5d:	rex.WRB
   140043c5e:	rex.WRX
   140043c5f:	rex.WRXB push r8
   140043c61:	push   rcx
   140043c62:	push   rdx
   140043c63:	push   rbx
   140043c64:	push   rsp
   140043c65:	push   rbp
   140043c66:	push   rsi
   140043c67:	push   rdi
   140043c68:	pop    rax
   140043c69:	pop    rcx
   140043c6a:	pop    rdx
   140043c6b:	pop    rbx
   140043c6c:	pop    rsp
   140043c6d:	pop    rbp
   140043c6e:	pop    rsi
   140043c6f:	pop    rdi
   140043c70:	(bad)  
   140043c71:	rex.B
   140043c72:	rex.X
   140043c73:	rex.XB
   140043c74:	rex.R
   140043c75:	rex.RB
   140043c76:	rex.RX
   140043c77:	rex.RXB
   140043c78:	rex.W
   140043c79:	rex.WB
   140043c7a:	rex.WX
   140043c7b:	rex.WXB
   140043c7c:	rex.WR
   140043c7d:	rex.WRB
   140043c7e:	rex.WRX
   140043c7f:	rex.WRXB push r8
   140043c81:	push   rcx
   140043c82:	push   rdx
   140043c83:	push   rbx
   140043c84:	push   rsp
   140043c85:	push   rbp
   140043c86:	push   rsi
   140043c87:	push   rdi
   140043c88:	pop    rax
   140043c89:	pop    rcx
   140043c8a:	pop    rdx
   140043c8b:	jnp    0x140043d09
   140043c8d:	jge    0x140043d0d
   140043c8f:	jg     0x140043c11
   140043c91:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   140043c9b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140043ca2:	xchg   edx,eax
   140043ca3:	xchg   ebx,eax
   140043ca4:	xchg   esp,eax
   140043ca5:	xchg   ebp,eax
   140043ca6:	xchg   esi,eax
   140043ca7:	xchg   edi,eax
   140043ca8:	cwde   
   140043ca9:	cdq    
   140043caa:	(bad)  
   140043cab:	fwait
   140043cac:	pushf  
   140043cad:	popf   
   140043cae:	sahf   
   140043caf:	lahf   
   140043cb0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140043cb9:	test   eax,0xadacabaa
   140043cbe:	scas   al,BYTE PTR es:[rdi]
   140043cbf:	scas   eax,DWORD PTR es:[rdi]
   140043cc0:	mov    al,0xb1
   140043cc2:	mov    dl,0xb3
   140043cc4:	mov    ah,0xb5
   140043cc6:	mov    dh,0xb7
   140043cc8:	mov    eax,0xbcbbbab9
   140043ccd:	mov    ebp,0xc1c0bfbe
   140043cd2:	ret    0xc4c3
   140043cd5:	(bad)
   140043cd8:	enter  0xcac9,0xcb
   140043cdc:	int3   
   140043cdd:	int    0xce
   140043cdf:	iret   
   140043ce0:	rcl    cl,1
   140043ce2:	rcl    bl,cl
   140043ce4:	(bad)  
   140043ce5:	(bad)  
   140043ce6:	(bad)  
   140043ce7:	xlat   BYTE PTR ds:[rbx]
   140043ce8:	fcomp  st(1)
   140043cea:	fcmovu st,st(3)
   140043cec:	(bad)  
   140043cee:	(bad)  
   140043cf0:	loopne 0x140043cd3
   140043cf2:	loop   0x140043cd7
   140043cf4:	in     al,0xe5
   140043cf6:	out    0xe7,al
   140043cf8:	call   0x12cf027e6
   140043cfd:	in     eax,dx
   140043cfe:	out    dx,al
   140043cff:	out    dx,eax
   140043d00:	lock icebp 
   140043d02:	repnz repz hlt 
   140043d05:	cmc    
   140043d06:	div    bh
   140043d08:	clc    
   140043d09:	stc    
   140043d0a:	cli    
   140043d0b:	sti    
   140043d0c:	cld    
   140043d0d:	std    
   140043d0e:	(bad)  
   140043d0f:	inc    DWORD PTR [rsi]
   140043d11:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   140043d18:	add    BYTE PTR [rax],dl
   140043d1a:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   140043d20:	adc    al,0x5
   140043d22:	add    eax,0x85454545
   140043d27:	test   DWORD PTR [rbp+0x30000005],eax
   140043d2d:	xor    BYTE PTR [rax+0x888050],al
   140043d33:	or     BYTE PTR [rax],al
   140043d35:	sub    BYTE PTR [rdi],ah
   140043d37:	cmp    BYTE PTR [rax+0x57],dl
   140043d3a:	add    BYTE PTR [rax],0x7
   140043d3d:	add    BYTE PTR [rdi],dh
   140043d3f:	xor    BYTE PTR [rax],dh
   140043d41:	push   rax
   140043d42:	push   rax
   140043d43:	mov    BYTE PTR [rax],al
   140043d45:	add    BYTE PTR [rax],al
   140043d47:	and    BYTE PTR [rax],ch
   140043d49:	or     BYTE PTR [rax+0x8080],0x0
   140043d50:	(bad)  
   140043d51:	push   0x68686860
   140043d56:	or     BYTE PTR [rax],cl
   140043d58:	(bad)  
   140043d59:	js     0x140043dcb
   140043d5b:	jo     0x140043dd4
   140043d5d:	jo     0x140043dcf
   140043d5f:	or     BYTE PTR [rax],cl
   140043d61:	add    BYTE PTR [rax],al
   140043d63:	or     BYTE PTR [rax],al
   140043d65:	or     BYTE PTR [rax],al
   140043d67:	(bad)  
   140043d68:	or     BYTE PTR [rax],al
   140043d6a:	add    BYTE PTR [rax],al
   140043d6c:	add    BYTE PTR [rax],al
   140043d6e:	add    BYTE PTR [rax],al
   140043d70:	rex.XB add BYTE PTR [r15+0x0],cl
   140043d74:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   140043d78:	push   rbp
   140043d79:	add    BYTE PTR [rax+rax*1+0x24],dl
   140043d7d:	add    BYTE PTR [rax],al
   140043d7f:	add    BYTE PTR [rip+0x0],al        # 0x140043d85
   140043d85:	add    BYTE PTR [rax],al
   140043d87:	add    BYTE PTR [rax],ah
   140043d89:	rex.RXB add al,0x40
   140043d8c:	add    DWORD PTR [rax],eax
   140043d8e:	add    BYTE PTR [rax],al
   140043d90:	mov    bh,0x0
   140043d92:	add    BYTE PTR [rax],al
   140043d94:	add    BYTE PTR [rax],al
   140043d96:	add    BYTE PTR [rax],al
   140043d98:	cmp    BYTE PTR [rdi+0x4],al
   140043d9b:	rex add DWORD PTR [rax],eax
   140043d9e:	add    BYTE PTR [rax],al
   140043da0:	adc    al,0x0
   140043da2:	add    BYTE PTR [rax],al
   140043da4:	add    BYTE PTR [rax],al
   140043da6:	add    BYTE PTR [rax],al
   140043da8:	rex.W
   140043da9:	rex.RXB add al,0x40
   140043dac:	add    DWORD PTR [rax],eax
   140043dae:	add    BYTE PTR [rax],al
   140043db0:	outs   dx,DWORD PTR ds:[rsi]
   140043db1:	add    BYTE PTR [rax],al
   140043db3:	add    BYTE PTR [rax],al
   140043db5:	add    BYTE PTR [rax],al
   140043db7:	add    BYTE PTR [rax+0x47],bl
   140043dba:	add    al,0x40
   140043dbc:	add    DWORD PTR [rax],eax
   140043dbe:	add    BYTE PTR [rax],al
   140043dc0:	stos   BYTE PTR es:[rdi],al
   140043dc1:	add    BYTE PTR [rax],al
   140043dc3:	add    BYTE PTR [rax],al
   140043dc5:	add    BYTE PTR [rax],al
   140043dc7:	add    BYTE PTR [rax+0x47],dh
   140043dca:	add    al,0x40
   140043dcc:	add    DWORD PTR [rax],eax
   140043dce:	add    BYTE PTR [rax],al
   140043dd0:	mov    es,WORD PTR [rax]
   140043dd2:	add    BYTE PTR [rax],al
   140043dd4:	add    BYTE PTR [rax],al
   140043dd6:	add    BYTE PTR [rax],al
   140043dd8:	jo     0x140043e21
   140043dda:	add    al,0x40
   140043ddc:	add    DWORD PTR [rax],eax
   140043dde:	add    BYTE PTR [rax],al
   140043de0:	push   rdx
   140043de1:	add    BYTE PTR [rax],al
   140043de3:	add    BYTE PTR [rax],al
   140043de5:	add    BYTE PTR [rax],al
   140043de7:	add    BYTE PTR [rax],ah
   140043de9:	rex.RXB add al,0x40
   140043dec:	add    DWORD PTR [rax],eax
   140043dee:	add    BYTE PTR [rax],al
   140043df0:	repz add eax,DWORD PTR [rax]
   140043df3:	add    BYTE PTR [rax],al
   140043df5:	add    BYTE PTR [rax],al
   140043df7:	add    BYTE PTR [rax+0x1400447],cl
   140043dfd:	add    BYTE PTR [rax],al
   140043dff:	add    ah,dh
   140043e01:	add    eax,DWORD PTR [rax]
   140043e03:	add    BYTE PTR [rax],al
   140043e05:	add    BYTE PTR [rax],al
   140043e07:	add    BYTE PTR [rax+0x1400447],cl
   140043e0d:	add    BYTE PTR [rax],al
   140043e0f:	add    ch,dh
   140043e11:	add    eax,DWORD PTR [rax]
   140043e13:	add    BYTE PTR [rax],al
   140043e15:	add    BYTE PTR [rax],al
   140043e17:	add    BYTE PTR [rax+0x1400447],cl
   140043e1d:	add    BYTE PTR [rax],al
   140043e1f:	add    BYTE PTR [rax],dl
   140043e21:	add    BYTE PTR [rax],al
   140043e23:	add    BYTE PTR [rax],al
   140043e25:	add    BYTE PTR [rax],al
   140043e27:	add    BYTE PTR [rax],ah
   140043e29:	rex.RXB add al,0x40
   140043e2c:	add    DWORD PTR [rax],eax
   140043e2e:	add    BYTE PTR [rax],al
   140043e30:	(bad)  
   140043e31:	add    BYTE PTR [rax],al
   140043e33:	add    BYTE PTR [rax],al
   140043e35:	add    BYTE PTR [rax],al
   140043e37:	add    BYTE PTR [rax+0x47],cl
   140043e3a:	add    al,0x40
   140043e3c:	add    DWORD PTR [rax],eax
   140043e3e:	add    BYTE PTR [rax],al
   140043e40:	or     DWORD PTR fs:[rax],eax
   140043e43:	add    BYTE PTR [rax],al
   140043e45:	add    BYTE PTR [rax],al
   140043e47:	add    BYTE PTR [rax+0x47],dh
   140043e4a:	add    al,0x40
   140043e4c:	add    DWORD PTR [rax],eax
   140043e4e:	add    BYTE PTR [rax],al
   140043e50:	xchg   ecx,eax
   140043e51:	add    BYTE PTR [rax],al
   140043e53:	add    BYTE PTR [rax],al
   140043e55:	add    BYTE PTR [rax],al
   140043e57:	add    BYTE PTR [rax+0x1400447],bl
   140043e5d:	add    BYTE PTR [rax],al
   140043e5f:	add    BYTE PTR [rbx],cl
   140043e61:	add    DWORD PTR [rax],eax
   140043e63:	add    BYTE PTR [rax],al
   140043e65:	add    BYTE PTR [rax],al
   140043e67:	add    BYTE PTR [rax+0x1400447],dh
   140043e6d:	add    BYTE PTR [rax],al
   140043e6f:	add    BYTE PTR [rax+0x0],dh
   140043e72:	add    BYTE PTR [rax],al
   140043e74:	add    BYTE PTR [rax],al
   140043e76:	add    BYTE PTR [rax],al
   140043e78:	enter  0x447,0x40
   140043e7c:	add    DWORD PTR [rax],eax
   140043e7e:	add    BYTE PTR [rax],al
   140043e80:	push   rax
   140043e81:	add    BYTE PTR [rax],al
   140043e83:	add    BYTE PTR [rax],al
   140043e85:	add    BYTE PTR [rax],al
   140043e87:	add    BYTE PTR [rax],bh
   140043e89:	rex.RXB add al,0x40
   140043e8c:	add    DWORD PTR [rax],eax
   140043e8e:	add    BYTE PTR [rax],al
   140043e90:	add    al,BYTE PTR [rax]
   140043e92:	add    BYTE PTR [rax],al
   140043e94:	add    BYTE PTR [rax],al
   140043e96:	add    BYTE PTR [rax],al
   140043e98:	loopne 0x140043ee1
   140043e9a:	add    al,0x40
   140043e9c:	add    DWORD PTR [rax],eax
   140043e9e:	add    BYTE PTR [rax],al
   140043ea0:	(bad)  
   140043ea1:	add    BYTE PTR [rax],al
   140043ea3:	add    BYTE PTR [rax],al
   140043ea5:	add    BYTE PTR [rax],al
   140043ea7:	add    al,cl
   140043ea9:	rex.RXB add al,0x40
   140043eac:	add    DWORD PTR [rax],eax
   140043eae:	add    BYTE PTR [rax],al
   140043eb0:	or     al,0x0
   140043eb2:	add    BYTE PTR [rax],al
   140043eb4:	add    BYTE PTR [rax],al
   140043eb6:	add    BYTE PTR [rax],al
   140043eb8:	and    BYTE PTR [rdi+0x4],al
   140043ebb:	rex add DWORD PTR [rax],eax
   140043ebe:	add    BYTE PTR [rax],al
   140043ec0:	sldt   WORD PTR [rax]
   140043ec3:	add    BYTE PTR [rax],al
   140043ec5:	add    BYTE PTR [rax],al
   140043ec7:	add    BYTE PTR [rax+0x47],cl
   140043eca:	add    al,0x40
   140043ecc:	add    DWORD PTR [rax],eax
   140043ece:	add    BYTE PTR [rax],al
   140043ed0:	add    DWORD PTR [rax],eax
   140043ed2:	add    BYTE PTR [rax],al
   140043ed4:	add    BYTE PTR [rax],al
   140043ed6:	add    BYTE PTR [rax],al
   140043ed8:	add    BYTE PTR [rax+0x4],cl
   140043edb:	rex add DWORD PTR [rax],eax
   140043ede:	add    BYTE PTR [rax],al
   140043ee0:	(bad)  
   140043ee1:	add    BYTE PTR [rax],al
   140043ee3:	add    BYTE PTR [rax],al
   140043ee5:	add    BYTE PTR [rax],al
   140043ee7:	add    BYTE PTR [rax+0x1400447],dh
   140043eed:	add    BYTE PTR [rax],al
   140043eef:	add    BYTE PTR [rbx+0x0],bh
   140043ef2:	add    BYTE PTR [rax],al
   140043ef4:	add    BYTE PTR [rax],al
   140043ef6:	add    BYTE PTR [rax],al
   140043ef8:	mov    al,0x47
   140043efa:	add    al,0x40
   140043efc:	add    DWORD PTR [rax],eax
   140043efe:	add    BYTE PTR [rax],al
   140043f00:	and    DWORD PTR [rax],eax
   140043f02:	add    BYTE PTR [rax],al
   140043f04:	add    BYTE PTR [rax],al
   140043f06:	add    BYTE PTR [rax],al
   140043f08:	sbb    BYTE PTR [rax+0x4],cl
   140043f0b:	rex add DWORD PTR [rax],eax
   140043f0e:	add    BYTE PTR [rax],al
   140043f10:	(bad)  
   140043f11:	add    BYTE PTR [rax],al
   140043f13:	add    BYTE PTR [rax],al
   140043f15:	add    BYTE PTR [rax],al
   140043f17:	add    BYTE PTR [rax],bl
   140043f19:	rex.W add al,0x40
   140043f1c:	add    DWORD PTR [rax],eax
   140043f1e:	add    BYTE PTR [rax],al
   140043f20:	add    DWORD PTR [rax],0x0
   140043f23:	add    BYTE PTR [rax],al
   140043f25:	add    BYTE PTR [rax],al
   140043f27:	add    BYTE PTR [rax+0x1400447],dh
   140043f2d:	add    BYTE PTR [rax],al
   140043f2f:	add    dh,ah
   140043f31:	add    eax,DWORD PTR [rax]
   140043f33:	add    BYTE PTR [rax],al
   140043f35:	add    BYTE PTR [rax],al
   140043f37:	add    BYTE PTR [rax],ah
   140043f39:	rex.RXB add al,0x40
   140043f3c:	add    DWORD PTR [rax],eax
   140043f3e:	add    BYTE PTR [rax],al
   140043f40:	or     BYTE PTR [rax],al
   140043f42:	add    BYTE PTR [rax],al
   140043f44:	add    BYTE PTR [rax],al
   140043f46:	add    BYTE PTR [rax],al
   140043f48:	xor    BYTE PTR [rax+0x4],cl
   140043f4b:	rex add DWORD PTR [rax],eax
   140043f4e:	add    BYTE PTR [rax],al
   140043f50:	adc    eax,0x0
   140043f55:	add    BYTE PTR [rax],al
   140043f57:	add    BYTE PTR [rax+0x48],cl
   140043f5a:	add    al,0x40
   140043f5c:	add    DWORD PTR [rax],eax
   140043f5e:	add    BYTE PTR [rax],al
   140043f60:	adc    DWORD PTR [rax],eax
   140043f62:	add    BYTE PTR [rax],al
   140043f64:	add    BYTE PTR [rax],al
   140043f66:	add    BYTE PTR [rax],al
   140043f68:	push   0x1400448
   140043f6d:	add    BYTE PTR [rax],al
   140043f6f:	add    BYTE PTR [rsi+0x0],ch
   140043f72:	add    BYTE PTR [rax],al
   140043f74:	add    BYTE PTR [rax],al
   140043f76:	add    BYTE PTR [rax],al
   140043f78:	mov    BYTE PTR [rdi+0x4],al
   140043f7b:	rex add DWORD PTR [rax],eax
   140043f7e:	add    BYTE PTR [rax],al
   140043f80:	(bad)  
   140043f81:	or     DWORD PTR [rax],eax
   140043f83:	add    BYTE PTR [rax],al
   140043f85:	add    BYTE PTR [rax],al
   140043f87:	add    BYTE PTR [rax+0x47],dh
   140043f8a:	add    al,0x40
   140043f8c:	add    DWORD PTR [rax],eax
   140043f8e:	add    BYTE PTR [rax],al
   140043f90:	jrcxz  0x140043f95
   140043f92:	add    BYTE PTR [rax],al
   140043f94:	add    BYTE PTR [rax],al
   140043f96:	add    BYTE PTR [rax],al
   140043f98:	or     BYTE PTR [rax+0x4],0x40
   140043f9c:	add    DWORD PTR [rax],eax
   140043f9e:	add    BYTE PTR [rax],al
   140043fa0:	(bad)  
   140043fa1:	add    BYTE PTR [rax],al
   140043fa3:	add    BYTE PTR [rax],al
   140043fa5:	add    BYTE PTR [rax],al
   140043fa7:	add    BYTE PTR [rax],dh
   140043fa9:	rex.W add al,0x40
   140043fac:	add    DWORD PTR [rax],eax
   140043fae:	add    BYTE PTR [rax],al
   140043fb0:	add    eax,DWORD PTR [rax]
   140043fb2:	add    BYTE PTR [rax],al
   140043fb4:	add    BYTE PTR [rax],al
   140043fb6:	add    BYTE PTR [rax],al
   140043fb8:	loopne 0x140044001
   140043fba:	add    al,0x40
   140043fbc:	add    DWORD PTR [rax],eax
   140043fbe:	add    BYTE PTR [rax],al
   140043fc0:	(bad)  
   140043fc1:	add    BYTE PTR [rax],al
   140043fc3:	add    BYTE PTR [rax],al
   140043fc5:	add    BYTE PTR [rax],al
   140043fc7:	add    BYTE PTR [rax+0x1400447],cl
   140043fcd:	add    BYTE PTR [rax],al
   140043fcf:	add    ch,dl
   140043fd1:	add    al,0x0
   140043fd3:	add    BYTE PTR [rax],al
   140043fd5:	add    BYTE PTR [rax],al
   140043fd7:	add    BYTE PTR [rax+0x48],cl
   140043fda:	add    al,0x40
   140043fdc:	add    DWORD PTR [rax],eax
   140043fde:	add    BYTE PTR [rax],al
   140043fe0:	sbb    DWORD PTR [rax],eax
   140043fe2:	add    BYTE PTR [rax],al
   140043fe4:	add    BYTE PTR [rax],al
   140043fe6:	add    BYTE PTR [rax],al
   140043fe8:	mov    BYTE PTR [rdi+0x4],al
   140043feb:	rex add DWORD PTR [rax],eax
   140043fee:	add    BYTE PTR [rax],al
   140043ff0:	and    BYTE PTR [rax],al
   140043ff2:	add    BYTE PTR [rax],al
   140043ff4:	add    BYTE PTR [rax],al
   140043ff6:	add    BYTE PTR [rax],al
   140043ff8:	and    BYTE PTR [rdi+0x4],al
   140043ffb:	rex add DWORD PTR [rax],eax
   140043ffe:	add    BYTE PTR [rax],al
   140044000:	add    al,0x0
   140044002:	add    BYTE PTR [rax],al
   140044004:	add    BYTE PTR [rax],al
   140044006:	add    BYTE PTR [rax],al
   140044008:	cwde   
   140044009:	rex.W add al,0x40
   14004400c:	add    DWORD PTR [rax],eax
   14004400e:	add    BYTE PTR [rax],al
   140044010:	sbb    eax,0x0
   140044015:	add    BYTE PTR [rax],al
   140044017:	add    BYTE PTR [rax+0x1400447],cl
   14004401d:	add    BYTE PTR [rax],al
   14004401f:	add    BYTE PTR [rbx],dl
   140044021:	add    BYTE PTR [rax],al
   140044023:	add    BYTE PTR [rax],al
   140044025:	add    BYTE PTR [rax],al
   140044027:	add    BYTE PTR [rax],ah
   140044029:	rex.RXB add al,0x40
   14004402c:	add    DWORD PTR [rax],eax
   14004402e:	add    BYTE PTR [rax],al
   140044030:	sbb    eax,0x27
   140044035:	add    BYTE PTR [rax],al
   140044037:	add    BYTE PTR [rax+0x1400448],dh
   14004403d:	add    BYTE PTR [rax],al
   14004403f:	add    BYTE PTR [rax+0x27],al
   140044042:	add    BYTE PTR [rax],al
   140044044:	add    BYTE PTR [rax],al
   140044046:	add    BYTE PTR [rax],al
   140044048:	enter  0x448,0x40
   14004404c:	add    DWORD PTR [rax],eax
   14004404e:	add    BYTE PTR [rax],al
   140044050:	rex.B (bad) 
   140044052:	add    BYTE PTR [rax],al
   140044054:	add    BYTE PTR [rax],al
   140044056:	add    BYTE PTR [rax],al
   140044058:	fmul   DWORD PTR [rax+0x4]
   14004405b:	rex add DWORD PTR [rax],eax
   14004405e:	add    BYTE PTR [rax],al
   140044060:	(bad)  
   140044061:	(bad)  
   140044062:	add    BYTE PTR [rax],al
   140044064:	add    BYTE PTR [rax],al
   140044066:	add    BYTE PTR [rax],al
   140044068:	lock rex.W add al,0x40
   14004406c:	add    DWORD PTR [rax],eax
   14004406e:	add    BYTE PTR [rax],al
   140044070:	xor    eax,0x27
   140044075:	add    BYTE PTR [rax],al
   140044077:	add    BYTE PTR [rax],dl
   140044079:	rex.WB add al,0x40
   14004407c:	add    DWORD PTR [rax],eax
   14004407e:	add    BYTE PTR [rax],al
   140044080:	sbb    DWORD PTR [rdi],esp
   140044082:	add    BYTE PTR [rax],al
   140044084:	add    BYTE PTR [rax],al
   140044086:	add    BYTE PTR [rax],al
   140044088:	xor    BYTE PTR [rcx+0x4],cl
   14004408b:	rex add DWORD PTR [rax],eax
   14004408e:	add    BYTE PTR [rax],al
   140044090:	rex.RB (bad) 
   140044092:	add    BYTE PTR [rax],al
   140044094:	add    BYTE PTR [rax],al
   140044096:	add    BYTE PTR [rax],al
   140044098:	rex.W
   140044099:	rex.WB add al,0x40
   14004409c:	add    DWORD PTR [rax],eax
   14004409e:	add    BYTE PTR [rax],al
   1400440a0:	rex.WRB (bad) 
   1400440a2:	add    BYTE PTR [rax],al
   1400440a4:	add    BYTE PTR [rax],al
   1400440a6:	add    BYTE PTR [rax],al
   1400440a8:	(bad)  
   1400440a9:	rex.WB add al,0x40
   1400440ac:	add    DWORD PTR [rax],eax
   1400440ae:	add    BYTE PTR [rax],al
   1400440b0:	rex.RX (bad) 
   1400440b2:	add    BYTE PTR [rax],al
   1400440b4:	add    BYTE PTR [rax],al
   1400440b6:	add    BYTE PTR [rax],al
   1400440b8:	js     0x140044103
   1400440ba:	add    al,0x40
   1400440bc:	add    DWORD PTR [rax],eax
   1400440be:	add    BYTE PTR [rax],al
   1400440c0:	(bad)  
   1400440c1:	(bad)  
   1400440c2:	add    BYTE PTR [rax],al
   1400440c4:	add    BYTE PTR [rax],al
   1400440c6:	add    BYTE PTR [rax],al
   1400440c8:	nop
   1400440c9:	rex.WB add al,0x40
   1400440cc:	add    DWORD PTR [rax],eax
   1400440ce:	add    BYTE PTR [rax],al
   1400440d0:	(bad)  
   1400440d1:	(bad)  
   1400440d2:	add    BYTE PTR [rax],al
   1400440d4:	add    BYTE PTR [rax],al
   1400440d6:	add    BYTE PTR [rax],al
   1400440d8:	mov    al,0x49
   1400440da:	add    al,0x40
   1400440dc:	add    DWORD PTR [rax],eax
   1400440de:	add    BYTE PTR [rax],al
   1400440e0:	push   rcx
   1400440e1:	(bad)  
   1400440e2:	add    BYTE PTR [rax],al
   1400440e4:	add    BYTE PTR [rax],al
   1400440e6:	add    BYTE PTR [rax],al
   1400440e8:	ror    BYTE PTR [rcx+0x4],0x40
   1400440ec:	add    DWORD PTR [rax],eax
   1400440ee:	add    BYTE PTR [rax],al
   1400440f0:	xor    al,0x27
   1400440f2:	add    BYTE PTR [rax],al
   1400440f4:	add    BYTE PTR [rax],al
   1400440f6:	add    BYTE PTR [rax],al
   1400440f8:	fmul   DWORD PTR [rcx+0x4]
   1400440fb:	rex add DWORD PTR [rax],eax
   1400440fe:	add    BYTE PTR [rax],al
   140044100:	adc    al,0x27
   140044102:	add    BYTE PTR [rax],al
   140044104:	add    BYTE PTR [rax],al
   140044106:	add    BYTE PTR [rax],al
   140044108:	lock rex.WB add al,0x40
   14004410c:	add    DWORD PTR [rax],eax
   14004410e:	add    BYTE PTR [rax],al
   140044110:	es (bad) 
   140044112:	add    BYTE PTR [rax],al
   140044114:	add    BYTE PTR [rax],al
   140044116:	add    BYTE PTR [rax],al
   140044118:	add    BYTE PTR [rdx+0x4],cl
   14004411b:	rex add DWORD PTR [rax],eax
   14004411e:	add    BYTE PTR [rax],al
   140044120:	rex.W (bad) 
   140044122:	add    BYTE PTR [rax],al
   140044124:	add    BYTE PTR [rax],al
   140044126:	add    BYTE PTR [rax],al
   140044128:	sbb    BYTE PTR [rdx+0x4],cl
   14004412b:	rex add DWORD PTR [rax],eax
   14004412e:	add    BYTE PTR [rax],al
   140044130:	sub    BYTE PTR [rdi],ah
   140044132:	add    BYTE PTR [rax],al
   140044134:	add    BYTE PTR [rax],al
   140044136:	add    BYTE PTR [rax],al
   140044138:	xor    BYTE PTR [rdx+0x4],cl
   14004413b:	rex add DWORD PTR [rax],eax
   14004413e:	add    BYTE PTR [rax],al
   140044140:	cmp    BYTE PTR [rdi],ah
   140044142:	add    BYTE PTR [rax],al
   140044144:	add    BYTE PTR [rax],al
   140044146:	add    BYTE PTR [rax],al
   140044148:	rex.W
   140044149:	rex.WX add al,0x40
   14004414c:	add    DWORD PTR [rax],eax
   14004414e:	add    BYTE PTR [rax],al
   140044150:	rex.WRXB (bad) 
   140044152:	add    BYTE PTR [rax],al
   140044154:	add    BYTE PTR [rax],al
   140044156:	add    BYTE PTR [rax],al
   140044158:	pop    rax
   140044159:	rex.WX add al,0x40
   14004415c:	add    DWORD PTR [rax],eax
   14004415e:	add    BYTE PTR [rax],al
   140044160:	rex.X (bad) 
   140044162:	add    BYTE PTR [rax],al
   140044164:	add    BYTE PTR [rax],al
   140044166:	add    BYTE PTR [rax],al
   140044168:	jo     0x1400441b4
   14004416a:	add    al,0x40
   14004416c:	add    DWORD PTR [rax],eax
   14004416e:	add    BYTE PTR [rax],al
   140044170:	rex.R (bad) 
   140044172:	add    BYTE PTR [rax],al
   140044174:	add    BYTE PTR [rax],al
   140044176:	add    BYTE PTR [rax],al
   140044178:	or     BYTE PTR [rdx+0x4],0x40
   14004417c:	add    DWORD PTR [rax],eax
   14004417e:	add    BYTE PTR [rax],al
   140044180:	rex.XB (bad) 
   140044182:	add    BYTE PTR [rax],al
   140044184:	add    BYTE PTR [rax],al
   140044186:	add    BYTE PTR [rax],al
   140044188:	nop
   140044189:	rex.WX add al,0x40
   14004418c:	add    DWORD PTR [rax],eax
   14004418e:	add    BYTE PTR [rax],al
   140044190:	rex.RXB (bad) 
   140044192:	add    BYTE PTR [rax],al
   140044194:	add    BYTE PTR [rax],al
   140044196:	add    BYTE PTR [rax],al
   140044198:	test   al,0x4a
   14004419a:	add    al,0x40
   14004419c:	add    DWORD PTR [rax],eax
   14004419e:	add    BYTE PTR [rax],al
   1400441a0:	cmp    ah,BYTE PTR [rdi]
   1400441a2:	add    BYTE PTR [rax],al
   1400441a4:	add    BYTE PTR [rax],al
   1400441a6:	add    BYTE PTR [rax],al
   1400441a8:	mov    eax,0x140044a
   1400441ad:	add    BYTE PTR [rax],al
   1400441af:	add    BYTE PTR [rcx+0x27],cl
   1400441b2:	add    BYTE PTR [rax],al
   1400441b4:	add    BYTE PTR [rax],al
   1400441b6:	add    BYTE PTR [rax],al
   1400441b8:	ror    BYTE PTR [rdx+0x4],1
   1400441bb:	rex add DWORD PTR [rax],eax
   1400441be:	add    BYTE PTR [rax],al
   1400441c0:	ss (bad) 
   1400441c2:	add    BYTE PTR [rax],al
   1400441c4:	add    BYTE PTR [rax],al
   1400441c6:	add    BYTE PTR [rax],al
   1400441c8:	loopne 0x140044214
   1400441ca:	add    al,0x40
   1400441cc:	add    DWORD PTR [rax],eax
   1400441ce:	add    BYTE PTR [rax],al
   1400441d0:	cmp    eax,0x27
   1400441d5:	add    BYTE PTR [rax],al
   1400441d7:	add    al,dh
   1400441d9:	rex.WX add al,0x40
   1400441dc:	add    DWORD PTR [rax],eax
   1400441de:	add    BYTE PTR [rax],al
   1400441e0:	cmp    esp,DWORD PTR [rdi]
   1400441e2:	add    BYTE PTR [rax],al
   1400441e4:	add    BYTE PTR [rax],al
   1400441e6:	add    BYTE PTR [rax],al
   1400441e8:	or     BYTE PTR [rbx+0x4],cl
   1400441eb:	rex add DWORD PTR [rax],eax
   1400441ee:	add    BYTE PTR [rax],al
   1400441f0:	cmp    DWORD PTR [rdi],esp
   1400441f2:	add    BYTE PTR [rax],al
   1400441f4:	add    BYTE PTR [rax],al
   1400441f6:	add    BYTE PTR [rax],al
   1400441f8:	and    BYTE PTR [rbx+0x4],cl
   1400441fb:	rex add DWORD PTR [rax],eax
   1400441fe:	add    BYTE PTR [rax],al
   140044200:	rex.WR (bad) 
   140044202:	add    BYTE PTR [rax],al
   140044204:	add    BYTE PTR [rax],al
   140044206:	add    BYTE PTR [rax],al
   140044208:	cmp    BYTE PTR [rbx+0x4],cl
   14004420b:	rex add DWORD PTR [rax],eax
   14004420e:	add    BYTE PTR [rax],al
   140044210:	xor    esp,DWORD PTR [rdi]
   140044212:	add    BYTE PTR [rax],al
   140044214:	add    BYTE PTR [rax],al
   140044216:	add    BYTE PTR [rax],al
   140044218:	rex.W
   140044219:	rex.WXB add al,0x40
   14004421c:	add    DWORD PTR [rax],eax
	...
   14004422e:	add    BYTE PTR [rax],al
   140044230:	data16 add BYTE PTR [rax],al
   140044233:	add    BYTE PTR [rax],al
   140044235:	add    BYTE PTR [rax],al
   140044237:	add    BYTE PTR [rax+0x4b],ah
   14004423a:	add    al,0x40
   14004423c:	add    DWORD PTR [rax],eax
   14004423e:	add    BYTE PTR [rax],al
   140044240:	add    BYTE PTR fs:[rax],al
   140044243:	add    BYTE PTR [rax],al
   140044245:	add    BYTE PTR [rax],al
   140044247:	add    BYTE PTR [rax+0x140044b],al
   14004424d:	add    BYTE PTR [rax],al
   14004424f:	add    BYTE PTR [rbp+0x0],ah
   140044252:	add    BYTE PTR [rax],al
   140044254:	add    BYTE PTR [rax],al
   140044256:	add    BYTE PTR [rax],al
   140044258:	nop
   140044259:	rex.WXB add al,0x40
   14004425c:	add    DWORD PTR [rax],eax
   14004425e:	add    BYTE PTR [rax],al
   140044260:	jno    0x140044262
   140044262:	add    BYTE PTR [rax],al
   140044264:	add    BYTE PTR [rax],al
   140044266:	add    BYTE PTR [rax],al
   140044268:	test   al,0x4b
   14004426a:	add    al,0x40
   14004426c:	add    DWORD PTR [rax],eax
   14004426e:	add    BYTE PTR [rax],al
   140044270:	(bad)  
   140044271:	add    BYTE PTR [rax],al
   140044273:	add    BYTE PTR [rax],al
   140044275:	add    BYTE PTR [rax],al
   140044277:	add    al,al
   140044279:	rex.WXB add al,0x40
   14004427c:	add    DWORD PTR [rax],eax
   14004427e:	add    BYTE PTR [rax],al
   140044280:	and    DWORD PTR [rax],eax
   140044282:	add    BYTE PTR [rax],al
   140044284:	add    BYTE PTR [rax],al
   140044286:	add    BYTE PTR [rax],al
   140044288:	fmul   DWORD PTR [rbx+0x4]
   14004428b:	rex add DWORD PTR [rax],eax
   14004428e:	add    BYTE PTR [rax],al
   140044290:	(bad)  
   140044291:	add    BYTE PTR [rax],al
   140044293:	add    BYTE PTR [rax],al
   140044295:	add    BYTE PTR [rax],al
   140044297:	add    al,dh
   140044299:	rex.WXB add al,0x40
   14004429c:	add    DWORD PTR [rax],eax
   14004429e:	add    BYTE PTR [rax],al
   1400442a0:	or     DWORD PTR [rax],eax
   1400442a2:	add    BYTE PTR [rax],al
   1400442a4:	add    BYTE PTR [rax],al
   1400442a6:	add    BYTE PTR [rax],al
   1400442a8:	add    BYTE PTR [rsp+rax*1+0x40],cl
   1400442ac:	add    DWORD PTR [rax],eax
   1400442ae:	add    BYTE PTR [rax],al
   1400442b0:	push   0x0
   1400442b5:	add    BYTE PTR [rax],al
   1400442b7:	add    BYTE PTR [rax],bl
   1400442b9:	rex.WR add al,0x40
   1400442bc:	add    DWORD PTR [rax],eax
   1400442be:	add    BYTE PTR [rax],al
   1400442c0:	and    BYTE PTR [rax],al
   1400442c2:	add    BYTE PTR [rax],al
   1400442c4:	add    BYTE PTR [rax],al
   1400442c6:	add    BYTE PTR [rax],al
   1400442c8:	sub    BYTE PTR [rsp+rax*1+0x40],cl
   1400442cc:	add    DWORD PTR [rax],eax
   1400442ce:	add    BYTE PTR [rax],al
   1400442d0:	push   0x0
   1400442d2:	add    BYTE PTR [rax],al
   1400442d4:	add    BYTE PTR [rax],al
   1400442d6:	add    BYTE PTR [rax],al
   1400442d8:	cmp    BYTE PTR [rsp+rax*1+0x40],cl
   1400442dc:	add    DWORD PTR [rax],eax
   1400442de:	add    BYTE PTR [rax],al
   1400442e0:	add    BYTE PTR [eax],al
   1400442e3:	add    BYTE PTR [rax],al
   1400442e5:	add    BYTE PTR [rax],al
   1400442e7:	add    BYTE PTR [rax+0x4c],dl
   1400442ea:	add    al,0x40
   1400442ec:	add    DWORD PTR [rax],eax
   1400442ee:	add    BYTE PTR [rax],al
   1400442f0:	imul   eax,DWORD PTR [rax],0x0
   1400442f3:	add    BYTE PTR [rax],al
   1400442f5:	add    BYTE PTR [rax],al
   1400442f7:	add    BYTE PTR [rax+0x4c],dh
   1400442fa:	add    al,0x40
   1400442fc:	add    DWORD PTR [rax],eax
   1400442fe:	add    BYTE PTR [rax],al
   140044300:	ins    BYTE PTR es:[rdi],dx
   140044301:	add    BYTE PTR [rax],al
   140044303:	add    BYTE PTR [rax],al
   140044305:	add    BYTE PTR [rax],al
   140044307:	add    BYTE PTR [rax+0x140044c],cl
   14004430d:	add    BYTE PTR [rax],al
   14004430f:	add    BYTE PTR [rdx],dl
   140044311:	add    BYTE PTR [rax],al
   140044313:	add    BYTE PTR [rax],al
   140044315:	add    BYTE PTR [rax],al
   140044317:	add    BYTE PTR [rax+0x48],ch
   14004431a:	add    al,0x40
   14004431c:	add    DWORD PTR [rax],eax
   14004431e:	add    BYTE PTR [rax],al
   140044320:	ins    DWORD PTR es:[rdi],dx
   140044321:	add    BYTE PTR [rax],al
   140044323:	add    BYTE PTR [rax],al
   140044325:	add    BYTE PTR [rax],al
   140044327:	add    BYTE PTR [rax+0x140044c],ah
   14004432d:	add    BYTE PTR [rax],al
   14004432f:	add    BYTE PTR [rax],dl
   140044331:	add    BYTE PTR [rax],al
   140044333:	add    BYTE PTR [rax],al
   140044335:	add    BYTE PTR [rax],al
   140044337:	add    BYTE PTR [rax+0x47],dh
   14004433a:	add    al,0x40
   14004433c:	add    DWORD PTR [rax],eax
   14004433e:	add    BYTE PTR [rax],al
   140044340:	sub    DWORD PTR [rax],eax
   140044342:	add    BYTE PTR [rax],al
   140044344:	add    BYTE PTR [rax],al
   140044346:	add    BYTE PTR [rax],al
   140044348:	cwde   
   140044349:	rex.RXB add al,0x40
   14004434c:	add    DWORD PTR [rax],eax
   14004434e:	add    BYTE PTR [rax],al
   140044350:	or     BYTE PTR [rax],al
   140044352:	add    BYTE PTR [rax],al
   140044354:	add    BYTE PTR [rax],al
   140044356:	add    BYTE PTR [rax],al
   140044358:	ror    BYTE PTR [rsp+rax*1+0x40],0x1
   14004435d:	add    BYTE PTR [rax],al
   14004435f:	add    BYTE PTR [rcx],dl
   140044361:	add    BYTE PTR [rax],al
   140044363:	add    BYTE PTR [rax],al
   140044365:	add    BYTE PTR [rax],al
   140044367:	add    BYTE PTR [rax],bh
   140044369:	rex.RXB add al,0x40
   14004436c:	add    DWORD PTR [rax],eax
   14004436e:	add    BYTE PTR [rax],al
   140044370:	sbb    eax,DWORD PTR [rax]
   140044372:	add    BYTE PTR [rax],al
   140044374:	add    BYTE PTR [rax],al
   140044376:	add    BYTE PTR [rax],al
   140044378:	fmul   DWORD PTR [rsp+rax*1+0x40]
   14004437c:	add    DWORD PTR [rax],eax
   14004437e:	add    BYTE PTR [rax],al
   140044380:	add    BYTE PTR es:[rax],al
   140044383:	add    BYTE PTR [rax],al
   140044385:	add    BYTE PTR [rax],al
   140044387:	add    BYTE PTR [rax+0x47],bl
   14004438a:	add    al,0x40
   14004438c:	add    DWORD PTR [rax],eax
   14004438e:	add    BYTE PTR [rax],al
   140044390:	sub    BYTE PTR [rax],al
   140044392:	add    BYTE PTR [rax],al
   140044394:	add    BYTE PTR [rax],al
   140044396:	add    BYTE PTR [rax],al
   140044398:	add    BYTE PTR [rax+0x4],cl
   14004439b:	rex add DWORD PTR [rax],eax
   14004439e:	add    BYTE PTR [rax],al
   1400443a0:	outs   dx,BYTE PTR ds:[rsi]
   1400443a1:	add    BYTE PTR [rax],al
   1400443a3:	add    BYTE PTR [rax],al
   1400443a5:	add    BYTE PTR [rax],al
   1400443a7:	add    al,ch
   1400443a9:	rex.WR add al,0x40
   1400443ac:	add    DWORD PTR [rax],eax
   1400443ae:	add    BYTE PTR [rax],al
   1400443b0:	outs   dx,DWORD PTR ds:[rsi]
	...
   1400443b9:	rex.WRB add al,0x40
   1400443bc:	add    DWORD PTR [rax],eax
   1400443be:	add    BYTE PTR [rax],al
   1400443c0:	sub    al,BYTE PTR [rax]
   1400443c2:	add    BYTE PTR [rax],al
   1400443c4:	add    BYTE PTR [rax],al
   1400443c6:	add    BYTE PTR [rax],al
   1400443c8:	sbb    BYTE PTR [rbp+0x4],cl
   1400443cb:	rex add DWORD PTR [rax],eax
   1400443ce:	add    BYTE PTR [rax],al
   1400443d0:	sbb    DWORD PTR [rax],eax
   1400443d2:	add    BYTE PTR [rax],al
   1400443d4:	add    BYTE PTR [rax],al
   1400443d6:	add    BYTE PTR [rax],al
   1400443d8:	xor    BYTE PTR [rbp+0x4],cl
   1400443db:	rex add DWORD PTR [rax],eax
   1400443de:	add    BYTE PTR [rax],al
   1400443e0:	add    al,0x0
   1400443e2:	add    BYTE PTR [rax],al
   1400443e4:	add    BYTE PTR [rax],al
   1400443e6:	add    BYTE PTR [rax],al
   1400443e8:	lock rex.WB add al,0x40
   1400443ec:	add    DWORD PTR [rax],eax
   1400443ee:	add    BYTE PTR [rax],al
   1400443f0:	(bad)  
   1400443f1:	add    BYTE PTR [rax],al
   1400443f3:	add    BYTE PTR [rax],al
   1400443f5:	add    BYTE PTR [rax],al
   1400443f7:	add    BYTE PTR [rax+0x1400447],dh
   1400443fd:	add    BYTE PTR [rax],al
   1400443ff:	add    BYTE PTR [rip+0x0],bl        # 0x140044405
   140044405:	add    BYTE PTR [rax],al
   140044407:	add    BYTE PTR [rax+0x4d],bl
   14004440a:	add    al,0x40
   14004440c:	add    DWORD PTR [rax],eax
   14004440e:	add    BYTE PTR [rax],al
   140044410:	add    eax,0x0
   140044415:	add    BYTE PTR [rax],al
   140044417:	add    BYTE PTR [rax+0x1400447],cl
   14004441d:	add    BYTE PTR [rax],al
   14004441f:	add    BYTE PTR [rip+0x0],dl        # 0x140044425
   140044425:	add    BYTE PTR [rax],al
   140044427:	add    BYTE PTR [rax+0x4d],ch
   14004442a:	add    al,0x40
   14004442c:	add    DWORD PTR [rax],eax
   14004442e:	add    BYTE PTR [rax],al
   140044430:	jae    0x140044432
   140044432:	add    BYTE PTR [rax],al
   140044434:	add    BYTE PTR [rax],al
   140044436:	add    BYTE PTR [rax],al
   140044438:	js     0x140044487
   14004443a:	add    al,0x40
   14004443c:	add    DWORD PTR [rax],eax
   14004443e:	add    BYTE PTR [rax],al
   140044440:	je     0x140044442
   140044442:	add    BYTE PTR [rax],al
   140044444:	add    BYTE PTR [rax],al
   140044446:	add    BYTE PTR [rax],al
   140044448:	mov    BYTE PTR [rbp+0x4],cl
   14004444b:	rex add DWORD PTR [rax],eax
   14004444e:	add    BYTE PTR [rax],al
   140044450:	jne    0x140044452
   140044452:	add    BYTE PTR [rax],al
   140044454:	add    BYTE PTR [rax],al
   140044456:	add    BYTE PTR [rax],al
   140044458:	cwde   
   140044459:	rex.WRB add al,0x40
   14004445c:	add    DWORD PTR [rax],eax
   14004445e:	add    BYTE PTR [rax],al
   140044460:	jbe    0x140044462
   140044462:	add    BYTE PTR [rax],al
   140044464:	add    BYTE PTR [rax],al
   140044466:	add    BYTE PTR [rax],al
   140044468:	test   al,0x4d
   14004446a:	add    al,0x40
   14004446c:	add    DWORD PTR [rax],eax
   14004446e:	add    BYTE PTR [rax],al
   140044470:	ja     0x140044472
   140044472:	add    BYTE PTR [rax],al
   140044474:	add    BYTE PTR [rax],al
   140044476:	add    BYTE PTR [rax],al
   140044478:	ror    BYTE PTR [rbp+0x4],0x40
   14004447c:	add    DWORD PTR [rax],eax
   14004447e:	add    BYTE PTR [rax],al
   140044480:	or     al,BYTE PTR [rax]
   140044482:	add    BYTE PTR [rax],al
   140044484:	add    BYTE PTR [rax],al
   140044486:	add    BYTE PTR [rax],al
   140044488:	ror    BYTE PTR [rbp+0x4],1
   14004448b:	rex add DWORD PTR [rax],eax
   14004448e:	add    BYTE PTR [rax],al
   140044490:	jns    0x140044492
   140044492:	add    BYTE PTR [rax],al
   140044494:	add    BYTE PTR [rax],al
   140044496:	add    BYTE PTR [rax],al
   140044498:	call   0x1414448ea
   14004449d:	add    BYTE PTR [rax],al
   14004449f:	add    BYTE PTR [rdi],ah
   1400444a1:	add    BYTE PTR [rax],al
   1400444a3:	add    BYTE PTR [rax],al
   1400444a5:	add    BYTE PTR [rax],al
   1400444a7:	add    BYTE PTR [rax],bl
   1400444a9:	rex.W add al,0x40
   1400444ac:	add    DWORD PTR [rax],eax
   1400444ae:	add    BYTE PTR [rax],al
   1400444b0:	js     0x1400444b2
   1400444b2:	add    BYTE PTR [rax],al
   1400444b4:	add    BYTE PTR [rax],al
   1400444b6:	add    BYTE PTR [rax],al
   1400444b8:	lock rex.WRB add al,0x40
   1400444bc:	add    DWORD PTR [rax],eax
   1400444be:	add    BYTE PTR [rax],al
   1400444c0:	jp     0x1400444c2
   1400444c2:	add    BYTE PTR [rax],al
   1400444c4:	add    BYTE PTR [rax],al
   1400444c6:	add    BYTE PTR [rax],al
   1400444c8:	or     BYTE PTR [rsi+0x4],cl
   1400444cb:	rex add DWORD PTR [rax],eax
   1400444ce:	add    BYTE PTR [rax],al
   1400444d0:	jnp    0x1400444d2
   1400444d2:	add    BYTE PTR [rax],al
   1400444d4:	add    BYTE PTR [rax],al
   1400444d6:	add    BYTE PTR [rax],al
   1400444d8:	sbb    BYTE PTR [rsi+0x4],cl
   1400444db:	rex add DWORD PTR [rax],eax
   1400444de:	add    BYTE PTR [rax],al
   1400444e0:	sbb    al,0x0
   1400444e2:	add    BYTE PTR [rax],al
   1400444e4:	add    BYTE PTR [rax],al
   1400444e6:	add    BYTE PTR [rax],al
   1400444e8:	enter  0x447,0x40
   1400444ec:	add    DWORD PTR [rax],eax
   1400444ee:	add    BYTE PTR [rax],al
   1400444f0:	jl     0x1400444f2
   1400444f2:	add    BYTE PTR [rax],al
   1400444f4:	add    BYTE PTR [rax],al
   1400444f6:	add    BYTE PTR [rax],al
   1400444f8:	xor    BYTE PTR [rsi+0x4],cl
   1400444fb:	rex add DWORD PTR [rax],eax
   1400444fe:	add    BYTE PTR [rax],al
   140044500:	(bad)  
   140044501:	add    BYTE PTR [rax],al
   140044503:	add    BYTE PTR [rax],al
   140044505:	add    BYTE PTR [rax],al
   140044507:	add    BYTE PTR [rax+0x4e],cl
   14004450a:	add    al,0x40
   14004450c:	add    DWORD PTR [rax],eax
   14004450e:	add    BYTE PTR [rax],al
   140044510:	adc    eax,DWORD PTR [rax]
   140044512:	add    BYTE PTR [rax],al
   140044514:	add    BYTE PTR [rax],al
   140044516:	add    BYTE PTR [rax],al
   140044518:	rex.W
   140044519:	rex.RXB add al,0x40
   14004451c:	add    DWORD PTR [rax],eax
   14004451e:	add    BYTE PTR [rax],al
   140044520:	add    al,BYTE PTR [rax]
   140044522:	add    BYTE PTR [rax],al
   140044524:	add    BYTE PTR [rax],al
   140044526:	add    BYTE PTR [rax],al
   140044528:	loopne 0x140044571
   14004452a:	add    al,0x40
   14004452c:	add    DWORD PTR [rax],eax
   14004452e:	add    BYTE PTR [rax],al
   140044530:	add    eax,DWORD PTR [rax]
   140044532:	add    BYTE PTR [rax],al
   140044534:	add    BYTE PTR [rax],al
   140044536:	add    BYTE PTR [rax],al
   140044538:	push   0x140044e
   14004453d:	add    BYTE PTR [rax],al
   14004453f:	add    BYTE PTR [rax+rax*1],dl
   140044542:	add    BYTE PTR [rax],al
   140044544:	add    BYTE PTR [rax],al
   140044546:	add    BYTE PTR [rax],al
   140044548:	js     0x140044598
   14004454a:	add    al,0x40
   14004454c:	add    DWORD PTR [rax],eax
   14004454e:	add    BYTE PTR [rax],al
   140044550:	add    BYTE PTR [rax],0x0
   140044553:	add    BYTE PTR [rax],al
   140044555:	add    BYTE PTR [rax],al
   140044557:	add    BYTE PTR [rax+0x140044e],cl
   14004455d:	add    BYTE PTR [rax],al
   14004455f:	add    BYTE PTR [rbp+0x0],bh
   140044562:	add    BYTE PTR [rax],al
   140044564:	add    BYTE PTR [rax],al
   140044566:	add    BYTE PTR [rax],al
   140044568:	cwde   
   140044569:	rex.WRX add al,0x40
   14004456c:	add    DWORD PTR [rax],eax
   14004456e:	add    BYTE PTR [rax],al
   140044570:	jle    0x140044572
   140044572:	add    BYTE PTR [rax],al
   140044574:	add    BYTE PTR [rax],al
   140044576:	add    BYTE PTR [rax],al
   140044578:	test   al,0x4e
   14004457a:	add    al,0x40
   14004457c:	add    DWORD PTR [rax],eax
   14004457e:	add    BYTE PTR [rax],al
   140044580:	or     al,0x0
   140044582:	add    BYTE PTR [rax],al
   140044584:	add    BYTE PTR [rax],al
   140044586:	add    BYTE PTR [rax],al
   140044588:	xor    BYTE PTR [rax+0x4],cl
   14004458b:	rex add DWORD PTR [rax],eax
   14004458e:	add    BYTE PTR [rax],al
   140044590:	add    DWORD PTR [rax],0x0
   140044596:	add    BYTE PTR [rax],al
   140044598:	mov    eax,0x140044e
   14004459d:	add    BYTE PTR [rax],al
   14004459f:	add    BYTE PTR [rcx+0x0],ch
   1400445a2:	add    BYTE PTR [rax],al
   1400445a4:	add    BYTE PTR [rax],al
   1400445a6:	add    BYTE PTR [rax],al
   1400445a8:	or     BYTE PTR [rax+0x4],0x40
   1400445ac:	add    DWORD PTR [rax],eax
   1400445ae:	add    BYTE PTR [rax],al
   1400445b0:	jo     0x1400445b2
   1400445b2:	add    BYTE PTR [rax],al
   1400445b4:	add    BYTE PTR [rax],al
   1400445b6:	add    BYTE PTR [rax],al
   1400445b8:	enter  0x44e,0x40
   1400445bc:	add    DWORD PTR [rax],eax
   1400445be:	add    BYTE PTR [rax],al
   1400445c0:	add    DWORD PTR [rax],eax
   1400445c2:	add    BYTE PTR [rax],al
   1400445c4:	add    BYTE PTR [rax],al
   1400445c6:	add    BYTE PTR [rax],al
   1400445c8:	loopne 0x140044618
   1400445ca:	add    al,0x40
   1400445cc:	add    DWORD PTR [rax],eax
   1400445ce:	add    BYTE PTR [rax],al
   1400445d0:	(bad)  
   1400445d1:	add    BYTE PTR [rax],al
   1400445d3:	add    BYTE PTR [rax],al
   1400445d5:	add    BYTE PTR [rax],al
   1400445d7:	add    al,bh
   1400445d9:	rex.WRX add al,0x40
   1400445dc:	add    DWORD PTR [rax],eax
   1400445de:	add    BYTE PTR [rax],al
   1400445e0:	mov    WORD PTR [rax],es
   1400445e2:	add    BYTE PTR [rax],al
   1400445e4:	add    BYTE PTR [rax],al
   1400445e6:	add    BYTE PTR [rax],al
   1400445e8:	adc    BYTE PTR [rdi+0x4],cl
   1400445eb:	rex add DWORD PTR [rax],eax
   1400445ee:	add    BYTE PTR [rax],al
   1400445f0:	test   DWORD PTR [rax],eax
   1400445f2:	add    BYTE PTR [rax],al
   1400445f4:	add    BYTE PTR [rax],al
   1400445f6:	add    BYTE PTR [rax],al
   1400445f8:	sub    BYTE PTR [rdi+0x4],cl
   1400445fb:	rex add DWORD PTR [rax],eax
   1400445fe:	add    BYTE PTR [rax],al
   140044600:	or     eax,0x0
   140044605:	add    BYTE PTR [rax],al
   140044607:	add    BYTE PTR [rax],ah
   140044609:	rex.RXB add al,0x40
   14004460c:	add    DWORD PTR [rax],eax
   14004460e:	add    BYTE PTR [rax],al
   140044610:	xchg   BYTE PTR [rax],al
   140044612:	add    BYTE PTR [rax],al
   140044614:	add    BYTE PTR [rax],al
   140044616:	add    BYTE PTR [rax],al
   140044618:	cmp    BYTE PTR [rdi+0x4],cl
   14004461b:	rex add DWORD PTR [rax],eax
   14004461e:	add    BYTE PTR [rax],al
   140044620:	xchg   DWORD PTR [rax],eax
   140044622:	add    BYTE PTR [rax],al
   140044624:	add    BYTE PTR [rax],al
   140044626:	add    BYTE PTR [rax],al
   140044628:	rex.W
   140044629:	rex.WRXB add al,0x40
   14004462c:	add    DWORD PTR [rax],eax
   14004462e:	add    BYTE PTR [rax],al
   140044630:	(bad)  
   140044631:	add    BYTE PTR [rax],al
   140044633:	add    BYTE PTR [rax],al
   140044635:	add    BYTE PTR [rax],al
   140044637:	add    BYTE PTR [rax+0x4f],ah
   14004463a:	add    al,0x40
   14004463c:	add    DWORD PTR [rax],eax
   14004463e:	add    BYTE PTR [rax],al
   140044640:	and    al,0x0
   140044642:	add    BYTE PTR [rax],al
   140044644:	add    BYTE PTR [rax],al
   140044646:	add    BYTE PTR [rax],al
   140044648:	js     0x140044699
   14004464a:	add    al,0x40
   14004464c:	add    DWORD PTR [rax],eax
   14004464e:	add    BYTE PTR [rax],al
   140044650:	or     eax,DWORD PTR [rax]
   140044652:	add    BYTE PTR [rax],al
   140044654:	add    BYTE PTR [rax],al
   140044656:	add    BYTE PTR [rax],al
   140044658:	rex.W
   140044659:	rex.W add al,0x40
   14004465c:	add    DWORD PTR [rax],eax
   14004465e:	add    BYTE PTR [rax],al
   140044660:	and    al,BYTE PTR [rax]
   140044662:	add    BYTE PTR [rax],al
   140044664:	add    BYTE PTR [rax],al
   140044666:	add    BYTE PTR [rax],al
   140044668:	cwde   
   140044669:	rex.WRXB add al,0x40
   14004466c:	add    DWORD PTR [rax],eax
   14004466e:	add    BYTE PTR [rax],al
   140044670:	jg     0x140044672
   140044672:	add    BYTE PTR [rax],al
   140044674:	add    BYTE PTR [rax],al
   140044676:	add    BYTE PTR [rax],al
   140044678:	mov    al,0x4f
   14004467a:	add    al,0x40
   14004467c:	add    DWORD PTR [rax],eax
   14004467e:	add    BYTE PTR [rax],al
   140044680:	mov    DWORD PTR [rax],eax
   140044682:	add    BYTE PTR [rax],al
   140044684:	add    BYTE PTR [rax],al
   140044686:	add    BYTE PTR [rax],al
   140044688:	enter  0x44f,0x40
   14004468c:	add    DWORD PTR [rax],eax
   14004468e:	add    BYTE PTR [rax],al
   140044690:	mov    eax,DWORD PTR [rax]
   140044692:	add    BYTE PTR [rax],al
   140044694:	add    BYTE PTR [rax],al
   140044696:	add    BYTE PTR [rax],al
   140044698:	fmul   DWORD PTR [rdi+0x4]
   14004469b:	rex add DWORD PTR [rax],eax
   14004469e:	add    BYTE PTR [rax],al
   1400446a0:	mov    al,BYTE PTR [rax]
   1400446a2:	add    BYTE PTR [rax],al
   1400446a4:	add    BYTE PTR [rax],al
   1400446a6:	add    BYTE PTR [rax],al
   1400446a8:	call   0x141444afc
   1400446ad:	add    BYTE PTR [rax],al
   1400446af:	add    BYTE PTR [rdi],dl
   1400446b1:	add    BYTE PTR [rax],al
   1400446b3:	add    BYTE PTR [rax],al
   1400446b5:	add    BYTE PTR [rax],al
   1400446b7:	add    al,bh
   1400446b9:	rex.WRXB add al,0x40
   1400446bc:	add    DWORD PTR [rax],eax
   1400446be:	add    BYTE PTR [rax],al
   1400446c0:	sbb    BYTE PTR [rax],al
   1400446c2:	add    BYTE PTR [rax],al
   1400446c4:	add    BYTE PTR [rax],al
   1400446c6:	add    BYTE PTR [rax],al
   1400446c8:	cwde   
   1400446c9:	rex.W add al,0x40
   1400446cc:	add    DWORD PTR [rax],eax
   1400446ce:	add    BYTE PTR [rax],al
   1400446d0:	(bad)  
   1400446d1:	add    BYTE PTR [rax],al
   1400446d3:	add    BYTE PTR [rax],al
   1400446d5:	add    BYTE PTR [rax],al
   1400446d7:	add    BYTE PTR [rax],bl
   1400446d9:	push   rax
   1400446da:	add    al,0x40
   1400446dc:	add    DWORD PTR [rax],eax
   1400446de:	add    BYTE PTR [rax],al
   1400446e0:	jb     0x1400446e2
   1400446e2:	add    BYTE PTR [rax],al
   1400446e4:	add    BYTE PTR [rax],al
   1400446e6:	add    BYTE PTR [rax],al
   1400446e8:	sub    BYTE PTR [rax+0x4],dl
   1400446eb:	rex add DWORD PTR [rax],eax
   1400446ee:	add    BYTE PTR [rax],al
   1400446f0:	test   BYTE PTR [rax],al
   1400446f2:	add    BYTE PTR [rax],al
   1400446f4:	add    BYTE PTR [rax],al
   1400446f6:	add    BYTE PTR [rax],al
   1400446f8:	rex.W push rax
   1400446fa:	add    al,0x40
   1400446fc:	add    DWORD PTR [rax],eax
   1400446fe:	add    BYTE PTR [rax],al
   140044700:	mov    BYTE PTR [rax],al
   140044702:	add    BYTE PTR [rax],al
   140044704:	add    BYTE PTR [rax],al
   140044706:	add    BYTE PTR [rax],al
   140044708:	pop    rax
   140044709:	push   rax
   14004470a:	add    al,0x40
   14004470c:	add    DWORD PTR [rax],eax
	...
   14004471e:	add    BYTE PTR [rax],al
   140044720:	jo     0x140044787
   140044722:	jb     0x140044791
   140044724:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   14004472b:	fs outs dx,BYTE PTR gs:[rsi]
   14004472e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140044735:	add    BYTE PTR [rax],al
   140044737:	add    BYTE PTR [rsi+0x69],ah
   14004473a:	ins    BYTE PTR es:[rdi],dx
   14004473b:	and    BYTE PTR gs:[rbp+0x78],ah
   14004473f:	imul   esi,DWORD PTR [rbx+0x74],0x73
   140044746:	add    BYTE PTR [rax],al
   140044748:	outs   dx,BYTE PTR ds:[rsi]
   140044749:	outs   dx,DWORD PTR ds:[rsi]
   14004474a:	and    BYTE PTR [rbx+0x75],dh
   14004474d:	movsxd ebp,DWORD PTR [rax+0x20]
   140044750:	fs gs jbe 0x1400447bd
   140044754:	movsxd esp,DWORD PTR [rbp+0x0]
   140044757:	add    BYTE PTR [rsi+0x69],ah
   14004475a:	ins    BYTE PTR es:[rdi],dx
   14004475b:	outs   dx,BYTE PTR gs:[rsi]
   14004475d:	(bad)  
   14004475e:	ins    DWORD PTR es:[rdi],dx
   14004475f:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   140044764:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140044768:	add    BYTE PTR [eax],al
   14004476b:	add    BYTE PTR [rax],al
   14004476d:	add    BYTE PTR [rax],al
   14004476f:	add    BYTE PTR [rbp+riz*2+0x76],ah
   140044773:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   14004477a:	jb     0x1400447e1
   14004477c:	jae    0x1400447ed
   14004477e:	jne    0x1400447f2
   140044780:	movsxd esp,DWORD PTR [rbp+0x20]
   140044783:	(bad)  
   140044784:	jne    0x1400447f9
   140044786:	jns    0x140044788
   140044788:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   14004478f:	jb     0x140044791
   140044791:	add    BYTE PTR [rax],al
   140044793:	add    BYTE PTR [rax],al
   140044795:	add    BYTE PTR [rax],al
   140044797:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   14004479b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400447a0:	jns    0x1400447c2
   1400447a2:	outs   dx,BYTE PTR ds:[rsi]
   1400447a3:	outs   dx,DWORD PTR ds:[rsi]
   1400447a4:	je     0x1400447c6
   1400447a6:	gs ins DWORD PTR es:[rdi],dx
   1400447a8:	jo     0x14004481e
   1400447aa:	jns    0x1400447ac
   1400447ac:	add    BYTE PTR [rax],al
   1400447ae:	add    BYTE PTR [rax],al
   1400447b0:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400447b7:	and    BYTE PTR [rcx+0x72],ah
   1400447ba:	addr32 jne 0x14004482a
   1400447bd:	outs   dx,BYTE PTR gs:[rsi]
   1400447bf:	je     0x1400447c1
   1400447c1:	add    BYTE PTR [rax],al
   1400447c3:	add    BYTE PTR [rax],al
   1400447c5:	add    BYTE PTR [rax],al
   1400447c7:	add    BYTE PTR [rsi+0x6f],ch
   1400447ca:	and    BYTE PTR [rbx+0x70],dh
   1400447cd:	(bad)  
   1400447ce:	movsxd esp,DWORD PTR [rbp+0x20]
   1400447d1:	outs   dx,DWORD PTR ds:[rsi]
   1400447d2:	outs   dx,BYTE PTR ds:[rsi]
   1400447d3:	and    BYTE PTR [rbp+riz*2+0x76],ah
   1400447d7:	imul   esp,DWORD PTR [rbx+0x65],0x0
   1400447de:	add    BYTE PTR [rax],al
   1400447e0:	outs   dx,BYTE PTR ds:[rsi]
   1400447e1:	outs   dx,DWORD PTR ds:[rsi]
   1400447e2:	and    BYTE PTR [rbx+0x75],dh
   1400447e5:	movsxd ebp,DWORD PTR [rax+0x20]
   1400447e8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   1400447ef:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   1400447f3:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400447f8:	jns    0x1400447fa
   1400447fa:	add    BYTE PTR [rax],al
   1400447fc:	add    BYTE PTR [rax],al
   1400447fe:	add    BYTE PTR [rax],al
   140044800:	data16 jne 0x140044871
   140044803:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140044807:	outs   dx,BYTE PTR ds:[rsi]
   140044808:	and    BYTE PTR [rsi+0x6f],ch
   14004480b:	je     0x14004482d
   14004480d:	jae    0x140044884
   14004480f:	jo     0x140044881
   140044811:	outs   dx,DWORD PTR ds:[rsi]
   140044812:	jb     0x140044888
   140044814:	gs add BYTE PTR fs:[rax],al
   140044818:	outs   dx,BYTE PTR ds:[rsi]
   140044819:	outs   dx,DWORD PTR ds:[rsi]
   14004481a:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   14004481e:	imul   esp,DWORD PTR [rax],0x61
   140044821:	jbe    0x140044884
   140044823:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14004482b:	add    BYTE PTR [rax],al
   14004482d:	add    BYTE PTR [rax],al
   14004482f:	add    BYTE PTR [rsi+0x6f],ch
   140044832:	je     0x140044854
   140044834:	outs   dx,BYTE PTR gs:[rsi]
   140044836:	outs   dx,DWORD PTR ds:[rsi]
   140044837:	jne    0x1400448a0
   140044839:	push   0x6d656d20
   14004483e:	outs   dx,DWORD PTR ds:[rsi]
   14004483f:	jb     0x1400448ba
   140044841:	add    BYTE PTR [rax],al
   140044843:	add    BYTE PTR [rax],al
   140044845:	add    BYTE PTR [rax],al
   140044847:	add    BYTE PTR [rdx+0x65],dh
   14004484a:	jae    0x1400448bb
   14004484c:	jne    0x1400448c0
   14004484e:	movsxd esp,DWORD PTR [rbp+0x20]
   140044851:	jne    0x1400448c1
   140044853:	(bad)  
   140044854:	jbe    0x1400448b7
   140044856:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   14004485e:	jb     0x1400448d9
   140044860:	and    BYTE PTR [rcx+0x67],ah
   140044863:	(bad)  
   140044864:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   14004486b:	jae    0x1400448e0
   14004486d:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140044871:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   140044878:	imul   eax,DWORD PTR [rax],0x0
   14004487b:	add    BYTE PTR [rax],al
   14004487d:	add    BYTE PTR [rax],al
   14004487f:	add    BYTE PTR [rdi+0x70],ch
   140044882:	gs jb  0x1400448e6
   140044885:	je     0x1400448f0
   140044887:	outs   dx,DWORD PTR ds:[rsi]
   140044888:	outs   dx,BYTE PTR ds:[rsi]
   140044889:	and    BYTE PTR [rbx+0x61],ah
   14004488c:	outs   dx,BYTE PTR ds:[rsi]
   14004488d:	movsxd esp,DWORD PTR [rbp+0x6c]
   140044890:	gs add BYTE PTR fs:[rax],al
   140044894:	add    BYTE PTR [rax],al
   140044896:	add    BYTE PTR [rax],al
   140044898:	je     0x140044909
   14004489a:	outs   dx,DWORD PTR ds:[rsi]
   14004489b:	and    BYTE PTR [rbp+0x61],ch
   14004489e:	outs   dx,BYTE PTR ds:[rsi]
   14004489f:	jns    0x1400448c1
   1400448a1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   1400448a8:	jo     0x14004490f
   1400448aa:	outs   dx,BYTE PTR ds:[rsi]
   1400448ab:	add    BYTE PTR [rax],al
   1400448ad:	add    BYTE PTR [rax],al
   1400448af:	add    BYTE PTR [rax+0x65],dh
   1400448b2:	jb     0x140044921
   1400448b4:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   1400448bb:	fs outs dx,BYTE PTR gs:[rsi]
   1400448be:	imul   esp,DWORD PTR [rbp+0x64],0x0
   1400448c5:	add    BYTE PTR [rax],al
   1400448c7:	add    BYTE PTR [rcx+0x64],ah
   1400448ca:	fs jb  0x140044932
   1400448cd:	jae    0x140044942
   1400448cf:	pop    rdi
   1400448d0:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   1400448d7:	add    BYTE PTR [rcx+0x64],ah
   1400448da:	fs jb  0x140044942
   1400448dd:	jae    0x140044952
   1400448df:	pop    rdi
   1400448e0:	outs   dx,BYTE PTR ds:[rsi]
   1400448e1:	outs   dx,DWORD PTR ds:[rsi]
   1400448e2:	je     0x140044943
   1400448e4:	(bad)  
   1400448e5:	jbe    0x140044948
   1400448e7:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400448ef:	add    BYTE PTR [rcx+0x64],ah
   1400448f2:	fs jb  0x14004495a
   1400448f5:	jae    0x14004496a
   1400448f7:	pop    rdi
   1400448f8:	data16 (bad) 
   1400448fa:	ins    DWORD PTR es:[rdi],dx
   1400448fb:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   140044903:	jae    0x14004497a
   140044905:	jo     0x140044977
   140044907:	outs   dx,DWORD PTR ds:[rsi]
   140044908:	jb     0x14004497e
   14004490a:	gs add BYTE PTR fs:[rax],al
   14004490e:	add    BYTE PTR [rax],al
   140044910:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140044913:	outs   dx,BYTE PTR ds:[rsi]
   140044914:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140044919:	outs   dx,BYTE PTR ds:[rsi]
   14004491a:	pop    rdi
   14004491b:	(bad)  
   14004491c:	ins    BYTE PTR es:[rdi],dx
   14004491d:	jb     0x140044984
   14004491f:	(bad)  
   140044920:	fs jns 0x140044982
   140044923:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   14004492a:	jb     0x140044991
   14004492c:	jae    0x1400449a1
   14004492e:	add    BYTE PTR [rax],al
   140044930:	(bad)
   140044935:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   14004493d:	jb     0x1400449a8
   14004493f:	jo     0x1400449b5
   140044941:	outs   dx,DWORD PTR ds:[rsi]
   140044942:	jb     0x140044944
   140044944:	add    BYTE PTR [rax],al
   140044946:	add    BYTE PTR [rax],al
   140044948:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14004494b:	outs   dx,BYTE PTR ds:[rsi]
   14004494c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140044951:	outs   dx,BYTE PTR ds:[rsi]
   140044952:	pop    rdi
   140044953:	(bad)  
   140044954:	(bad)  
   140044955:	outs   dx,DWORD PTR ds:[rsi]
   140044956:	jb     0x1400449cc
   140044958:	gs add BYTE PTR fs:[rax],al
   14004495c:	add    BYTE PTR [rax],al
   14004495e:	add    BYTE PTR [rax],al
   140044960:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140044963:	outs   dx,BYTE PTR ds:[rsi]
   140044964:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140044969:	outs   dx,BYTE PTR ds:[rsi]
   14004496a:	pop    rdi
   14004496b:	jb     0x1400449d2
   14004496d:	data16 jne 0x1400449e3
   140044970:	gs add BYTE PTR fs:[rax],al
   140044974:	add    BYTE PTR [rax],al
   140044976:	add    BYTE PTR [rax],al
   140044978:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14004497b:	outs   dx,BYTE PTR ds:[rsi]
   14004497c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140044981:	outs   dx,BYTE PTR ds:[rsi]
   140044982:	pop    rdi
   140044983:	jb     0x1400449ea
   140044985:	jae    0x1400449ec
   140044987:	je     0x140044989
   140044989:	add    BYTE PTR [rax],al
   14004498b:	add    BYTE PTR [rax],al
   14004498d:	add    BYTE PTR [rax],al
   14004498f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140044993:	je     0x1400449fe
   140044995:	outs   dx,BYTE PTR ds:[rsi]
   140044996:	(bad)  
   140044997:	je     0x140044a02
   140044999:	outs   dx,DWORD PTR ds:[rsi]
   14004499a:	outs   dx,BYTE PTR ds:[rsi]
   14004499b:	pop    rdi
   14004499c:	(bad)  
   14004499d:	fs fs jb 0x140044a06
   1400449a1:	jae    0x140044a16
   1400449a3:	pop    rdi
   1400449a4:	jb     0x140044a0b
   1400449a6:	jno    0x140044a1d
   1400449a8:	imul   esi,DWORD PTR [rdx+0x65],0x64
   1400449af:	add    BYTE PTR [rdx+0x61],ah
   1400449b2:	fs pop rdi
   1400449b4:	(bad)  
   1400449b5:	fs fs jb 0x140044a1e
   1400449b9:	jae    0x140044a2e
   1400449bb:	add    BYTE PTR [rax],al
   1400449bd:	add    BYTE PTR [rax],al
   1400449bf:	add    BYTE PTR [rax+0x6f],ch
   1400449c2:	jae    0x140044a38
   1400449c4:	pop    rdi
   1400449c5:	jne    0x140044a35
   1400449c7:	jb     0x140044a2e
   1400449c9:	(bad)  
   1400449ca:	movsxd ebp,DWORD PTR [rax+0x61]
   1400449cd:	(bad)  
   1400449ce:	ins    BYTE PTR es:[rdi],dx
   1400449cf:	add    BYTE PTR gs:[rax],al
   1400449d2:	add    BYTE PTR [rax],al
   1400449d4:	add    BYTE PTR [rax],al
   1400449d6:	add    BYTE PTR [rax],al
   1400449d8:	outs   dx,DWORD PTR ds:[rsi]
   1400449d9:	jo     0x140044a40
   1400449db:	jb     0x140044a3e
   1400449dd:	je     0x140044a48
   1400449df:	outs   dx,DWORD PTR ds:[rsi]
   1400449e0:	outs   dx,BYTE PTR ds:[rsi]
   1400449e1:	pop    rdi
   1400449e2:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   1400449e9:	jb     0x140044a50
   1400449eb:	jae    0x140044a60
   1400449ed:	add    BYTE PTR [rax],al
   1400449ef:	add    BYTE PTR [rcx+0x6e],ch
   1400449f2:	je     0x140044a59
   1400449f4:	jb     0x140044a68
   1400449f6:	jne    0x140044a68
   1400449f8:	je     0x140044a5f
   1400449fa:	add    BYTE PTR fs:[rax],al
   1400449fd:	add    BYTE PTR [rax],al
   1400449ff:	add    BYTE PTR [rcx+0x6e],ch
   140044a02:	jbe    0x140044a65
   140044a04:	ins    BYTE PTR es:[rdi],dx
   140044a05:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   140044a0d:	outs   dx,BYTE PTR gs:[rsi]
   140044a0f:	je     0x140044a11
   140044a11:	add    BYTE PTR [rax],al
   140044a13:	add    BYTE PTR [rax],al
   140044a15:	add    BYTE PTR [rax],al
   140044a17:	add    BYTE PTR [rcx+0x6c],ah
   140044a1a:	jb     0x140044a81
   140044a1c:	(bad)  
   140044a1d:	fs jns 0x140044a7f
   140044a20:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140044a23:	outs   dx,BYTE PTR ds:[rsi]
   140044a24:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140044a29:	add    BYTE PTR [rax],al
   140044a2b:	add    BYTE PTR [rax],al
   140044a2d:	add    BYTE PTR [rax],al
   140044a2f:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140044a33:	pop    rdi
   140044a34:	ins    DWORD PTR es:[rdi],dx
   140044a35:	(bad)  
   140044a36:	outs   dx,BYTE PTR ds:[rsi]
   140044a37:	jns    0x140044a98
   140044a39:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   140044a40:	jo     0x140044aa7
   140044a42:	outs   dx,BYTE PTR ds:[rsi]
   140044a43:	add    BYTE PTR [rax],al
   140044a45:	add    BYTE PTR [rax],al
   140044a47:	add    BYTE PTR [rbp+0x65],ch
   140044a4a:	jae    0x140044abf
   140044a4c:	(bad)  
   140044a4d:	addr32 gs pop rdi
   140044a50:	jae    0x140044abb
   140044a52:	jp     0x140044ab9
   140044a54:	add    BYTE PTR [rax],al
   140044a56:	add    BYTE PTR [rax],al
   140044a58:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   140044a5f:	gs pop rdi
   140044a61:	je     0x140044ad2
   140044a63:	outs   dx,DWORD PTR ds:[rsi]
   140044a64:	pop    rdi
   140044a65:	ins    BYTE PTR es:[rdi],dx
   140044a66:	outs   dx,DWORD PTR ds:[rsi]
   140044a67:	outs   dx,BYTE PTR ds:[rsi]
   140044a68:	add    BYTE PTR [eax],al
   140044a6b:	add    BYTE PTR [rax],al
   140044a6d:	add    BYTE PTR [rax],al
   140044a6f:	add    BYTE PTR [rsi+0x65],ch
   140044a72:	je     0x140044aeb
   140044a74:	outs   dx,DWORD PTR ds:[rsi]
   140044a75:	jb     0x140044ae2
   140044a77:	pop    rdi
   140044a78:	outs   dx,DWORD PTR fs:[rsi]
   140044a7a:	ja     0x140044aea
   140044a7c:	add    BYTE PTR [rax],al
   140044a7e:	add    BYTE PTR [rax],al
   140044a80:	outs   dx,BYTE PTR ds:[rsi]
   140044a81:	gs je  0x140044afb
   140044a84:	outs   dx,DWORD PTR ds:[rsi]
   140044a85:	jb     0x140044af2
   140044a87:	pop    rdi
   140044a88:	jb     0x140044aef
   140044a8a:	jae    0x140044af1
   140044a8c:	je     0x140044a8e
   140044a8e:	add    BYTE PTR [rax],al
   140044a90:	outs   dx,BYTE PTR ds:[rsi]
   140044a91:	gs je  0x140044b0b
   140044a94:	outs   dx,DWORD PTR ds:[rsi]
   140044a95:	jb     0x140044b02
   140044a97:	pop    rdi
   140044a98:	jne    0x140044b08
   140044a9a:	jb     0x140044b01
   140044a9c:	(bad)  
   140044a9d:	movsxd ebp,DWORD PTR [rax+0x61]
   140044aa0:	(bad)  
   140044aa1:	ins    BYTE PTR es:[rdi],dx
   140044aa2:	add    BYTE PTR gs:[rax],al
   140044aa5:	add    BYTE PTR [rax],al
   140044aa7:	add    BYTE PTR [rsi+0x6f],ch
   140044aaa:	pop    rdi
   140044aab:	(bad)  
   140044aac:	jne    0x140044b14
   140044aae:	data16 gs jb 0x140044b11
   140044ab2:	jae    0x140044b24
   140044ab4:	(bad)  
   140044ab5:	movsxd esp,DWORD PTR [rbp+0x0]
   140044ab8:	outs   dx,BYTE PTR ds:[rsi]
   140044ab9:	outs   dx,DWORD PTR ds:[rsi]
   140044aba:	pop    rdi
   140044abb:	jo     0x140044b2f
   140044abd:	outs   dx,DWORD PTR ds:[rsi]
   140044abe:	je     0x140044b2f
   140044ac0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140044ac3:	pop    rdi
   140044ac4:	outs   dx,DWORD PTR ds:[rsi]
   140044ac5:	jo     0x140044b3b
   140044ac7:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140044ace:	add    BYTE PTR [rax],al
   140044ad0:	outs   dx,BYTE PTR ds:[rsi]
   140044ad1:	outs   dx,DWORD PTR ds:[rsi]
   140044ad2:	je     0x140044b33
   140044ad4:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140044ad7:	outs   dx,BYTE PTR ds:[rsi]
   140044ad8:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140044add:	add    BYTE PTR [rax],al
   140044adf:	add    BYTE PTR [rsi+0x6f],ch
   140044ae2:	je     0x140044b43
   140044ae4:	(bad)  
   140044ae5:	pop    rdi
   140044ae6:	jae    0x140044b57
   140044ae8:	movsxd ebp,DWORD PTR [rbx+0x65]
   140044aeb:	je     0x140044aed
   140044aed:	add    BYTE PTR [rax],al
   140044aef:	add    BYTE PTR [rdi+0x70],ch
   140044af2:	gs jb  0x140044b56
   140044af5:	je     0x140044b60
   140044af7:	outs   dx,DWORD PTR ds:[rsi]
   140044af8:	outs   dx,BYTE PTR ds:[rsi]
   140044af9:	pop    rdi
   140044afa:	outs   dx,BYTE PTR ds:[rsi]
   140044afb:	outs   dx,DWORD PTR ds:[rsi]
   140044afc:	je     0x140044b5d
   140044afe:	jae    0x140044b75
   140044b00:	jo     0x140044b72
   140044b02:	outs   dx,DWORD PTR ds:[rsi]
   140044b03:	jb     0x140044b79
   140044b05:	gs add BYTE PTR fs:[rax+0x72],dh
   140044b0a:	outs   dx,DWORD PTR ds:[rsi]
   140044b0b:	je     0x140044b7c
   140044b0d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140044b10:	pop    rdi
   140044b11:	outs   dx,BYTE PTR ds:[rsi]
   140044b12:	outs   dx,DWORD PTR ds:[rsi]
   140044b13:	je     0x140044b74
   140044b15:	jae    0x140044b8c
   140044b17:	jo     0x140044b89
   140044b19:	outs   dx,DWORD PTR ds:[rsi]
   140044b1a:	jb     0x140044b90
   140044b1c:	gs add BYTE PTR fs:[rax],al
   140044b20:	ja     0x140044b94
   140044b22:	outs   dx,DWORD PTR ds:[rsi]
   140044b23:	outs   dx,BYTE PTR ds:[rsi]
   140044b24:	addr32 pop rdi
   140044b26:	jo     0x140044b9a
   140044b28:	outs   dx,DWORD PTR ds:[rsi]
   140044b29:	je     0x140044b9a
   140044b2b:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140044b2e:	pop    rdi
   140044b2f:	je     0x140044baa
   140044b31:	jo     0x140044b98
   140044b33:	add    BYTE PTR [rax],al
   140044b35:	add    BYTE PTR [rax],al
   140044b37:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   140044b3b:	gs fs pop rdi
   140044b3e:	outs   dx,DWORD PTR ds:[rsi]
   140044b3f:	jne    0x140044bb5
   140044b41:	add    BYTE PTR [rax],al
   140044b43:	add    BYTE PTR [rax],al
   140044b45:	add    BYTE PTR [rax],al
   140044b47:	add    BYTE PTR [rdi+0x70],ch
   140044b4a:	gs jb  0x140044bae
   140044b4d:	je     0x140044bb8
   140044b4f:	outs   dx,DWORD PTR ds:[rsi]
   140044b50:	outs   dx,BYTE PTR ds:[rsi]
   140044b51:	pop    rdi
   140044b52:	ja     0x140044bc3
   140044b54:	jne    0x140044bc2
   140044b56:	fs pop rdi
   140044b58:	(bad)  
   140044b59:	ins    BYTE PTR es:[rdi],dx
   140044b5a:	outs   dx,DWORD PTR ds:[rsi]
   140044b5b:	movsxd ebp,DWORD PTR [rbx+0x0]
   140044b5e:	add    BYTE PTR [rax],al
   140044b60:	(bad)  
   140044b61:	fs fs jb 0x140044bca
   140044b65:	jae    0x140044bda
   140044b67:	and    BYTE PTR [rsi+0x61],ah
   140044b6a:	ins    DWORD PTR es:[rdi],dx
   140044b6b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   140044b73:	jae    0x140044bea
   140044b75:	jo     0x140044be7
   140044b77:	outs   dx,DWORD PTR ds:[rsi]
   140044b78:	jb     0x140044bee
   140044b7a:	gs add BYTE PTR fs:[rax],al
   140044b7e:	add    BYTE PTR [rax],al
   140044b80:	(bad)  
   140044b81:	fs fs jb 0x140044bea
   140044b85:	jae    0x140044bfa
   140044b87:	and    BYTE PTR [rcx+0x6e],ch
   140044b8a:	and    BYTE PTR [rbp+0x73],dh
   140044b8d:	add    BYTE PTR gs:[rax],al
   140044b90:	(bad)  
   140044b91:	fs fs jb 0x140044bfa
   140044b95:	jae    0x140044c0a
   140044b97:	and    BYTE PTR [rsi+0x6f],ch
   140044b9a:	je     0x140044bbc
   140044b9c:	(bad)  
   140044b9d:	jbe    0x140044c00
   140044b9f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140044ba7:	add    BYTE PTR [rcx+0x6c],ah
   140044baa:	jb     0x140044c11
   140044bac:	(bad)  
   140044bad:	fs jns 0x140044bd0
   140044bb0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140044bb3:	outs   dx,BYTE PTR ds:[rsi]
   140044bb4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140044bb9:	add    BYTE PTR [rax],al
   140044bbb:	add    BYTE PTR [rax],al
   140044bbd:	add    BYTE PTR [rax],al
   140044bbf:	add    BYTE PTR [rcx+0x72],ah
   140044bc2:	addr32 jne 0x140044c32
   140044bc5:	outs   dx,BYTE PTR gs:[rsi]
   140044bc7:	je     0x140044be9
   140044bc9:	ins    BYTE PTR es:[rdi],dx
   140044bca:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   140044bd1:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140044bd5:	add    BYTE PTR [eax],al
   140044bd8:	(bad)  
   140044bd9:	jb     0x140044c42
   140044bdb:	jne    0x140044c4a
   140044bdd:	outs   dx,BYTE PTR gs:[rsi]
   140044bdf:	je     0x140044c01
   140044be1:	outs   dx,DWORD PTR ds:[rsi]
   140044be2:	jne    0x140044c58
   140044be4:	and    BYTE PTR [rdi+0x66],ch
   140044be7:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   140044beb:	(bad)  
   140044bec:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   140044bf3:	and    BYTE PTR [rcx+0x64],ah
   140044bf6:	fs jb  0x140044c5e
   140044bf9:	jae    0x140044c6e
   140044bfb:	add    BYTE PTR [rax],al
   140044bfd:	add    BYTE PTR [rax],al
   140044bff:	add    BYTE PTR [rdx+0x61],ah
   140044c02:	and    BYTE PTR fs:[rsi+0x69],ah
   140044c06:	ins    BYTE PTR es:[rdi],dx
   140044c07:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   140044c0c:	movsxd esi,DWORD PTR [rdx+0x69]
   140044c0f:	jo     0x140044c85
   140044c11:	outs   dx,DWORD PTR ds:[rsi]
   140044c12:	jb     0x140044c14
   140044c14:	add    BYTE PTR [rax],al
   140044c16:	add    BYTE PTR [rax],al
   140044c18:	(bad)
   140044c1d:	gs jae 0x140044c93
   140044c20:	(bad)  
   140044c21:	add    BYTE PTR gs:[eax],al
   140044c25:	add    BYTE PTR [rax],al
   140044c27:	add    BYTE PTR [rdx+0x72],ah
   140044c2a:	outs   dx,DWORD PTR ds:[rsi]
   140044c2b:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   140044c2f:	jo     0x140044c9a
   140044c31:	jo     0x140044c98
   140044c33:	add    BYTE PTR [rax],al
   140044c35:	add    BYTE PTR [rax],al
   140044c37:	add    BYTE PTR [rbx+0x6f],ah
   140044c3a:	outs   dx,BYTE PTR ds:[rsi]
   140044c3b:	outs   dx,BYTE PTR ds:[rsi]
   140044c3c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140044c41:	outs   dx,BYTE PTR ds:[rsi]
   140044c42:	and    BYTE PTR [rcx+0x62],ah
   140044c45:	outs   dx,DWORD PTR ds:[rsi]
   140044c46:	jb     0x140044cbc
   140044c48:	gs add BYTE PTR fs:[rax],al
   140044c4c:	add    BYTE PTR [rax],al
   140044c4e:	add    BYTE PTR [rax],al
   140044c50:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140044c53:	outs   dx,BYTE PTR ds:[rsi]
   140044c54:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140044c59:	outs   dx,BYTE PTR ds:[rsi]
   140044c5a:	and    BYTE PTR [rcx+0x6c],ah
   140044c5d:	jb     0x140044cc4
   140044c5f:	(bad)  
   140044c60:	fs jns 0x140044c83
   140044c63:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   140044c6a:	jb     0x140044cd1
   140044c6c:	jae    0x140044ce1
   140044c6e:	add    BYTE PTR [rax],al
   140044c70:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140044c73:	outs   dx,BYTE PTR ds:[rsi]
   140044c74:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140044c79:	outs   dx,BYTE PTR ds:[rsi]
   140044c7a:	and    BYTE PTR [rdx+0x65],dh
   140044c7d:	data16 jne 0x140044cf3
   140044c80:	gs add BYTE PTR fs:[rax],al
   140044c84:	add    BYTE PTR [rax],al
   140044c86:	add    BYTE PTR [rax],al
   140044c88:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140044c8b:	outs   dx,BYTE PTR ds:[rsi]
   140044c8c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140044c91:	outs   dx,BYTE PTR ds:[rsi]
   140044c92:	and    BYTE PTR [rdx+0x65],dh
   140044c95:	jae    0x140044cfc
   140044c97:	je     0x140044c99
   140044c99:	add    BYTE PTR [rax],al
   140044c9b:	add    BYTE PTR [rax],al
   140044c9d:	add    BYTE PTR [rax],al
   140044c9f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140044ca3:	je     0x140044d0e
   140044ca5:	outs   dx,BYTE PTR ds:[rsi]
   140044ca6:	(bad)  
   140044ca7:	je     0x140044d12
   140044ca9:	outs   dx,DWORD PTR ds:[rsi]
   140044caa:	outs   dx,BYTE PTR ds:[rsi]
   140044cab:	and    BYTE PTR [rcx+0x64],ah
   140044cae:	fs jb  0x140044d16
   140044cb1:	jae    0x140044d26
   140044cb3:	and    BYTE PTR [rdx+0x65],dh
   140044cb6:	jno    0x140044d2d
   140044cb8:	imul   esi,DWORD PTR [rdx+0x65],0x64
   140044cbf:	add    BYTE PTR [rbp+0x78],ah
   140044cc2:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   140044cc6:	(bad)  
   140044cc7:	(bad)  
   140044cc8:	ins    BYTE PTR es:[rdi],dx
   140044cc9:	and    BYTE PTR gs:[rsi+0x6f],ah
   140044ccd:	jb     0x140044d3c
   140044ccf:	(bad)  
   140044cd0:	je     0x140044cf2
   140044cd2:	gs jb  0x140044d47
   140044cd5:	outs   dx,DWORD PTR ds:[rsi]
   140044cd6:	jb     0x140044cd8
   140044cd8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   140044cdf:	outs   dx,DWORD PTR ds:[rsi]
   140044ce0:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140044ce4:	add    BYTE PTR gs:[eax],al
   140044ce8:	push   0x2074736f
   140044ced:	jne    0x140044d5d
   140044cef:	jb     0x140044d56
   140044cf1:	(bad)  
   140044cf2:	movsxd ebp,DWORD PTR [rax+0x61]
   140044cf5:	(bad)  
   140044cf6:	ins    BYTE PTR es:[rdi],dx
   140044cf7:	add    BYTE PTR gs:[rax],al
   140044cfa:	add    BYTE PTR [rax],al
   140044cfc:	add    BYTE PTR [rax],al
   140044cfe:	add    BYTE PTR [rax],al
   140044d00:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   140044d08:	gs jb  0x140044d2b
   140044d0b:	jb     0x140044d72
   140044d0d:	ins    DWORD PTR es:[rdi],dx
   140044d0e:	outs   dx,DWORD PTR ds:[rsi]
   140044d0f:	jbe    0x140044d76
   140044d11:	add    BYTE PTR fs:[rax],al
   140044d14:	add    BYTE PTR [rax],al
   140044d16:	add    BYTE PTR [rax],al
   140044d18:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   140044d20:	(bad)  
   140044d21:	jns    0x140044d97
   140044d23:	and    BYTE PTR gs:[rbx+0x65],dh
   140044d27:	jno    0x140044d9e
   140044d29:	outs   dx,BYTE PTR gs:[rsi]
   140044d2b:	movsxd esp,DWORD PTR [rbp+0x0]
   140044d2e:	add    BYTE PTR [rax],al
   140044d30:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   140044d37:	jo     0x140044dab
   140044d39:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   140044d40:	and    BYTE PTR [rbx+0x6f],ah
   140044d43:	outs   dx,BYTE PTR ds:[rsi]
   140044d44:	je     0x140044db8
   140044d46:	outs   dx,DWORD PTR ds:[rsi]
   140044d47:	ins    BYTE PTR es:[rdi],dx
   140044d48:	and    BYTE PTR [rdi+0x70],ch
   140044d4b:	gs jb  0x140044daf
   140044d4e:	je     0x140044db9
   140044d50:	outs   dx,DWORD PTR ds:[rsi]
   140044d51:	outs   dx,BYTE PTR ds:[rsi]
   140044d52:	add    BYTE PTR [rax],al
   140044d54:	add    BYTE PTR [rax],al
   140044d56:	add    BYTE PTR [rax],al
   140044d58:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140044d5f:	and    BYTE PTR [rbx+0x65],dh
   140044d62:	imul   eax,DWORD PTR gs:[rax],0x0
   140044d66:	add    BYTE PTR [rax],al
   140044d68:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   140044d6f:	jb     0x140044dd6
   140044d71:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140044d75:	jns    0x140044d77
   140044d77:	add    BYTE PTR [rbp+0x65],ch
   140044d7a:	jae    0x140044def
   140044d7c:	(bad)  
   140044d7d:	and    BYTE PTR gs:[ebx+0x69],dh
   140044d82:	jp     0x140044de9
   140044d84:	add    BYTE PTR [rax],al
   140044d86:	add    BYTE PTR [rax],al
   140044d88:	outs   dx,BYTE PTR ds:[rsi]
   140044d89:	gs je  0x140044e03
   140044d8c:	outs   dx,DWORD PTR ds:[rsi]
   140044d8d:	jb     0x140044dfa
   140044d8f:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   140044d93:	outs   dx,BYTE PTR ds:[rsi]
   140044d94:	add    BYTE PTR [rax],al
   140044d96:	add    BYTE PTR [rax],al
   140044d98:	outs   dx,BYTE PTR ds:[rsi]
   140044d99:	gs je  0x140044e13
   140044d9c:	outs   dx,DWORD PTR ds:[rsi]
   140044d9d:	jb     0x140044e0a
   140044d9f:	and    BYTE PTR [rdx+0x65],dh
   140044da2:	jae    0x140044e09
   140044da4:	je     0x140044da6
   140044da6:	add    BYTE PTR [rax],al
   140044da8:	outs   dx,BYTE PTR ds:[rsi]
   140044da9:	gs je  0x140044e23
   140044dac:	outs   dx,DWORD PTR ds:[rsi]
   140044dad:	jb     0x140044e1a
   140044daf:	and    BYTE PTR [rbp+0x6e],dh
   140044db2:	jb     0x140044e19
   140044db4:	(bad)  
   140044db5:	movsxd ebp,DWORD PTR [rax+0x61]
   140044db8:	(bad)  
   140044db9:	ins    BYTE PTR es:[rdi],dx
   140044dba:	add    BYTE PTR gs:[rax],al
   140044dbd:	add    BYTE PTR [rax],al
   140044dbf:	add    BYTE PTR [rsi+0x6f],ch
   140044dc2:	and    BYTE PTR [rdx+0x75],ah
   140044dc5:	data16 data16 gs jb 0x140044dea
   140044dca:	jae    0x140044e3c
   140044dcc:	(bad)  
   140044dcd:	movsxd esp,DWORD PTR [rbp+0x0]
   140044dd0:	outs   dx,BYTE PTR ds:[rsi]
   140044dd1:	outs   dx,DWORD PTR ds:[rsi]
   140044dd2:	and    BYTE PTR [rbx+0x68],ah
   140044dd5:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   140044ddd:	gs jae 0x140044e53
	...
   140044de8:	outs   dx,BYTE PTR ds:[rsi]
   140044de9:	outs   dx,DWORD PTR ds:[rsi]
   140044dea:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   140044dee:	imul   eax,DWORD PTR [rax],0x6e
   140044df1:	outs   dx,DWORD PTR ds:[rsi]
   140044df2:	and    BYTE PTR [rbp+0x65],ch
   140044df5:	jae    0x140044e6a
   140044df7:	(bad)  
   140044df8:	and    BYTE PTR gs:[ecx+0x76],ah
   140044dfd:	(bad)  
   140044dfe:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140044e06:	add    BYTE PTR [rax],al
   140044e08:	outs   dx,BYTE PTR ds:[rsi]
   140044e09:	outs   dx,DWORD PTR ds:[rsi]
   140044e0a:	and    BYTE PTR [rbp+0x65],ch
   140044e0d:	jae    0x140044e82
   140044e0f:	(bad)  
   140044e10:	add    BYTE PTR gs:[eax],al
   140044e14:	add    BYTE PTR [rax],al
   140044e16:	add    BYTE PTR [rax],al
   140044e18:	outs   dx,BYTE PTR ds:[rsi]
   140044e19:	outs   dx,DWORD PTR ds:[rsi]
   140044e1a:	and    BYTE PTR [rax+0x72],dh
   140044e1d:	outs   dx,DWORD PTR ds:[rsi]
   140044e1e:	je     0x140044e8f
   140044e20:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140044e23:	and    BYTE PTR [rdi+0x70],ch
   140044e26:	je     0x140044e91
   140044e28:	outs   dx,DWORD PTR ds:[rsi]
   140044e29:	outs   dx,BYTE PTR ds:[rsi]
   140044e2a:	add    BYTE PTR [rax],al
   140044e2c:	add    BYTE PTR [rax],al
   140044e2e:	add    BYTE PTR [rax],al
   140044e30:	outs   dx,BYTE PTR ds:[rsi]
   140044e31:	outs   dx,DWORD PTR ds:[rsi]
   140044e32:	and    BYTE PTR [rbx+0x74],dh
   140044e35:	jb     0x140044e9c
   140044e37:	(bad)  
   140044e38:	ins    DWORD PTR es:[rdi],dx
   140044e39:	and    BYTE PTR [rdx+0x65],dh
   140044e3c:	jae    0x140044ead
   140044e3e:	jne    0x140044eb2
   140044e40:	movsxd esp,DWORD PTR [rbp+0x73]
   140044e43:	add    BYTE PTR [rax],al
   140044e45:	add    BYTE PTR [rax],al
   140044e47:	add    BYTE PTR [rsi+0x6f],ch
   140044e4a:	and    BYTE PTR [rbx+0x75],dh
   140044e4d:	movsxd ebp,DWORD PTR [rax+0x20]
   140044e50:	fs gs jbe 0x140044ebd
   140044e54:	movsxd esp,DWORD PTR [rbp+0x20]
   140044e57:	outs   dx,DWORD PTR ds:[rsi]
   140044e58:	jb     0x140044e7a
   140044e5a:	(bad)  
   140044e5b:	fs fs jb 0x140044ec4
   140044e5f:	jae    0x140044ed4
   140044e61:	add    BYTE PTR [rax],al
   140044e63:	add    BYTE PTR [rax],al
   140044e65:	add    BYTE PTR [rax],al
   140044e67:	add    BYTE PTR [rsi+0x6f],ch
   140044e6a:	and    BYTE PTR [rbx+0x75],dh
   140044e6d:	movsxd ebp,DWORD PTR [rax+0x20]
   140044e70:	jo     0x140044ee4
   140044e72:	outs   dx,DWORD PTR ds:[rsi]
   140044e73:	movsxd esp,DWORD PTR [rbp+0x73]
   140044e76:	jae    0x140044e78
   140044e78:	outs   dx,BYTE PTR ds:[rsi]
   140044e79:	outs   dx,DWORD PTR ds:[rsi]
   140044e7a:	je     0x140044e9c
   140044e7c:	(bad)  
   140044e7d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140044e81:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140044e86:	jns    0x140044e88
   140044e88:	outs   dx,BYTE PTR ds:[rsi]
   140044e89:	outs   dx,DWORD PTR ds:[rsi]
   140044e8a:	je     0x140044eac
   140044e8c:	(bad)  
   140044e8d:	and    BYTE PTR [rbx+0x6f],dh
   140044e90:	movsxd ebp,DWORD PTR [rbx+0x65]
   140044e93:	je     0x140044e95
   140044e95:	add    BYTE PTR [rax],al
   140044e97:	add    BYTE PTR [rsi+0x6f],ch
   140044e9a:	je     0x140044ebc
   140044e9c:	(bad)  
   140044e9d:	and    BYTE PTR [rbx+0x74],dh
   140044ea0:	jb     0x140044f07
   140044ea2:	(bad)  
   140044ea3:	ins    DWORD PTR es:[rdi],dx
   140044ea4:	add    BYTE PTR [rax],al
   140044ea6:	add    BYTE PTR [rax],al
   140044ea8:	outs   dx,BYTE PTR ds:[rsi]
   140044ea9:	outs   dx,DWORD PTR ds:[rsi]
   140044eaa:	je     0x140044ecc
   140044eac:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140044eaf:	outs   dx,BYTE PTR ds:[rsi]
   140044eb0:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140044eb5:	add    BYTE PTR [rax],al
   140044eb7:	add    BYTE PTR [rsi+0x6f],ch
   140044eba:	je     0x140044edc
   140044ebc:	jae    0x140044f33
   140044ebe:	jo     0x140044f30
   140044ec0:	outs   dx,DWORD PTR ds:[rsi]
   140044ec1:	jb     0x140044f37
   140044ec3:	gs add BYTE PTR fs:[rax],al
   140044ec7:	add    BYTE PTR [rdi+0x70],ch
   140044eca:	gs jb  0x140044f2e
   140044ecd:	je     0x140044f38
   140044ecf:	outs   dx,DWORD PTR ds:[rsi]
   140044ed0:	outs   dx,BYTE PTR ds:[rsi]
   140044ed1:	and    BYTE PTR [rcx+0x6e],ch
   140044ed4:	and    BYTE PTR [rax+0x72],dh
   140044ed7:	outs   dx,DWORD PTR ds:[rsi]
   140044ed8:	addr32 jb 0x140044f40
   140044edb:	jae    0x140044f50
   140044edd:	add    BYTE PTR [rax],al
   140044edf:	add    BYTE PTR [rdi+0x70],ch
   140044ee2:	gs jb  0x140044f46
   140044ee5:	je     0x140044f50
   140044ee7:	outs   dx,DWORD PTR ds:[rsi]
   140044ee8:	outs   dx,BYTE PTR ds:[rsi]
   140044ee9:	and    BYTE PTR [rsi+0x6f],ch
   140044eec:	je     0x140044f0e
   140044eee:	jo     0x140044f55
   140044ef0:	jb     0x140044f5f
   140044ef2:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   140044efa:	gs jb  0x140044f5e
   140044efd:	je     0x140044f68
   140044eff:	outs   dx,DWORD PTR ds:[rsi]
   140044f00:	outs   dx,BYTE PTR ds:[rsi]
   140044f01:	and    BYTE PTR [rsi+0x6f],ch
   140044f04:	je     0x140044f26
   140044f06:	jae    0x140044f7d
   140044f08:	jo     0x140044f7a
   140044f0a:	outs   dx,DWORD PTR ds:[rsi]
   140044f0b:	jb     0x140044f81
   140044f0d:	gs add BYTE PTR fs:[rdi+0x70],ch
   140044f12:	gs jb  0x140044f76
   140044f15:	je     0x140044f80
   140044f17:	outs   dx,DWORD PTR ds:[rsi]
   140044f18:	outs   dx,BYTE PTR ds:[rsi]
   140044f19:	and    BYTE PTR [rdi+0x6f],dh
   140044f1c:	jne    0x140044f8a
   140044f1e:	and    BYTE PTR fs:[rdx+0x6c],ah
   140044f22:	outs   dx,DWORD PTR ds:[rsi]
   140044f23:	movsxd ebp,DWORD PTR [rbx+0x0]
   140044f26:	add    BYTE PTR [rax],al
   140044f28:	outs   dx,DWORD PTR ds:[rsi]
   140044f29:	ja     0x140044f99
   140044f2b:	gs jb  0x140044f4e
   140044f2e:	fs gs (bad) 
   140044f31:	add    BYTE PTR fs:[rax],al
   140044f34:	add    BYTE PTR [rax],al
   140044f36:	add    BYTE PTR [rax],al
   140044f38:	jo     0x140044fac
   140044f3a:	outs   dx,DWORD PTR ds:[rsi]
   140044f3b:	je     0x140044fac
   140044f3d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140044f40:	and    BYTE PTR [rbp+0x72],ah
   140044f43:	jb     0x140044fb4
   140044f45:	jb     0x140044f47
   140044f47:	add    BYTE PTR [rax+0x72],dh
   140044f4a:	outs   dx,DWORD PTR ds:[rsi]
   140044f4b:	je     0x140044fbc
   140044f4d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140044f50:	and    BYTE PTR [rsi+0x6f],ch
   140044f53:	je     0x140044f75
   140044f55:	jae    0x140044fcc
   140044f57:	jo     0x140044fc9
   140044f59:	outs   dx,DWORD PTR ds:[rsi]
   140044f5a:	jb     0x140044fd0
   140044f5c:	gs add BYTE PTR fs:[rax],al
   140044f60:	jb     0x140044fc7
   140044f62:	(bad)  
   140044f63:	and    BYTE PTR fs:[rdi+0x6e],ch
   140044f67:	ins    BYTE PTR es:[rdi],dx
   140044f68:	jns    0x140044f8a
   140044f6a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   140044f71:	jae    0x140044fe7
   140044f73:	gs ins DWORD PTR es:[rdi],dx
   140044f75:	add    BYTE PTR [rax],al
   140044f77:	add    BYTE PTR [rdx+0x65],dh
   140044f7a:	jae    0x140044feb
   140044f7c:	jne    0x140044ff0
   140044f7e:	movsxd esp,DWORD PTR [rbp+0x20]
   140044f81:	fs gs (bad) 
   140044f84:	fs ins BYTE PTR es:[rdi],dx
   140044f86:	outs   dx,DWORD PTR ds:[rsi]
   140044f87:	movsxd ebp,DWORD PTR [rbx+0x20]
   140044f8a:	ja     0x140044ffb
   140044f8c:	jne    0x140044ffa
   140044f8e:	and    BYTE PTR fs:[rdi+0x63],ch
   140044f92:	movsxd esi,DWORD PTR [rbp+0x72]
   140044f95:	add    BYTE PTR [rax],al
   140044f97:	add    BYTE PTR [rdx+0x65],dh
   140044f9a:	jae    0x140045011
   140044f9c:	ins    BYTE PTR es:[rdi],dx
   140044f9d:	je     0x140044fbf
   140044f9f:	outs   dx,DWORD PTR ds:[rsi]
   140044fa0:	jne    0x140045016
   140044fa2:	and    BYTE PTR [rdi+0x66],ch
   140044fa5:	and    BYTE PTR [rdx+0x61],dh
   140044fa8:	outs   dx,BYTE PTR ds:[rsi]
   140044fa9:	add    BYTE PTR gs:[eax],al
   140044fad:	add    BYTE PTR [rax],al
   140044faf:	add    BYTE PTR [rbx+0x74],dh
   140044fb2:	(bad)  
   140044fb3:	je     0x14004501a
   140044fb5:	and    BYTE PTR [rsi+0x6f],ch
   140044fb8:	je     0x140044fda
   140044fba:	jb     0x140045021
   140044fbc:	movsxd ebp,DWORD PTR [rdi+0x76]
   140044fbf:	gs jb  0x140045023
   140044fc2:	(bad)  
   140044fc3:	ins    BYTE PTR es:[rdi],dx
   140044fc4:	add    BYTE PTR gs:[rax],al
   140044fc7:	add    BYTE PTR [rbx+0x74],dh
   140044fca:	jb     0x140045031
   140044fcc:	(bad)  
   140044fcd:	ins    DWORD PTR es:[rdi],dx
   140044fce:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   140044fd2:	outs   dx,DWORD PTR gs:[rsi]
   140044fd4:	jne    0x14004504a
   140044fd6:	add    BYTE PTR [rax],al
   140044fd8:	je     0x14004503f
   140044fda:	js     0x140045050
   140044fdc:	and    BYTE PTR [rsi+0x69],ah
   140044fdf:	ins    BYTE PTR es:[rdi],dx
   140044fe0:	and    BYTE PTR gs:[rdx+0x75],ah
   140044fe4:	jae    0x14004505f
   140044fe6:	add    BYTE PTR [rax],al
   140044fe8:	je     0x140045053
   140044fea:	ins    DWORD PTR es:[rdi],dx
   140044feb:	gs and BYTE PTR fs:[rdi+0x75],ch
   140044ff0:	je     0x140044ff2
   140044ff2:	add    BYTE PTR [rax],al
   140044ff4:	add    BYTE PTR [rax],al
   140044ff6:	add    BYTE PTR [rax],al
   140044ff8:	je     0x140045069
   140044ffa:	outs   dx,DWORD PTR ds:[rsi]
   140044ffb:	and    BYTE PTR [rbp+0x61],ch
   140044ffe:	outs   dx,BYTE PTR ds:[rsi]
   140044fff:	jns    0x140045021
   140045001:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140045008:	jo     0x14004506f
   14004500a:	outs   dx,BYTE PTR ds:[rsi]
   14004500b:	and    BYTE PTR [rcx+0x6e],ch
   14004500e:	and    BYTE PTR [rbx+0x79],dh
   140045011:	jae    0x140045087
   140045013:	gs ins DWORD PTR es:[rdi],dx
   140045015:	add    BYTE PTR [rax],al
   140045017:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14004501b:	and    BYTE PTR [rbp+0x61],ch
   14004501e:	outs   dx,BYTE PTR ds:[rsi]
   14004501f:	jns    0x140045041
   140045021:	ins    BYTE PTR es:[rdi],dx
   140045022:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   140045029:	outs   dx,DWORD PTR ds:[rsi]
   14004502a:	outs   dx,DWORD PTR ds:[rsi]
   14004502b:	and    BYTE PTR [rbp+0x61],ch
   14004502e:	outs   dx,BYTE PTR ds:[rsi]
   14004502f:	jns    0x140045051
   140045031:	jae    0x1400450ac
   140045033:	ins    DWORD PTR es:[rdi],dx
   140045034:	(bad)  
   140045035:	outs   dx,DWORD PTR ds:[rsi]
   140045036:	ins    BYTE PTR es:[rdi],dx
   140045037:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   14004503e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140045042:	gs ins BYTE PTR es:[rdi],dx
   140045044:	jae    0x140045046
   140045046:	add    BYTE PTR [rax],al
   140045048:	jbe    0x1400450ab
   14004504a:	ins    BYTE PTR es:[rdi],dx
   14004504b:	jne    0x1400450b2
   14004504d:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   140045051:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140045055:	add    BYTE PTR gs:[edi+0x72],dh
   14004505a:	outs   dx,DWORD PTR ds:[rsi]
   14004505b:	outs   dx,BYTE PTR ds:[rsi]
   14004505c:	and    BYTE PTR [eax+0x72],dh
   140045060:	outs   dx,DWORD PTR ds:[rsi]
   140045061:	je     0x1400450d2
   140045063:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140045066:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14004506a:	add    BYTE PTR gs:[rax],al
   14004506d:	add    BYTE PTR [rax],al
   14004506f:	add    BYTE PTR [rax],bl
   140045071:	mov    bl,0x4
   140045073:	rex add DWORD PTR [rax],eax
   140045076:	add    BYTE PTR [rax],al
   140045078:	mov    BYTE PTR [rax],dl
   14004507a:	add    BYTE PTR [rax+0x1],al
   14004507d:	add    BYTE PTR [rax],al
   14004507f:	add    BYTE PTR [rsp+rbp*2],ah
   140045082:	add    al,BYTE PTR [rax+0x1]
   140045085:	add    BYTE PTR [rax],al
   140045087:	add    BYTE PTR [rsp+rbp*2],ah
   14004508a:	add    al,BYTE PTR [rax+0x1]
   14004508d:	add    BYTE PTR [rax],al
   14004508f:	add    BYTE PTR [rax+0x1400010],dh
   140045095:	add    BYTE PTR [rax],al
   140045097:	add    ah,dh
   140045099:	adc    BYTE PTR [rax],al
   14004509b:	rex add DWORD PTR [rax],eax
   14004509e:	add    BYTE PTR [rax],al
   1400450a0:	mov    esp,0x1400010
   1400450a5:	add    BYTE PTR [rax],al
   1400450a7:	add    BYTE PTR [rax-0x4e],bh
   1400450aa:	add    al,0x40
   1400450ac:	add    DWORD PTR [rax],eax
   1400450ae:	add    BYTE PTR [rax],al
   1400450b0:	mov    WORD PTR [rcx],ss
   1400450b2:	add    BYTE PTR [rax+0x1],al
   1400450b5:	add    BYTE PTR [rax],al
   1400450b7:	add    BYTE PTR [rax],cl
   1400450b9:	adc    DWORD PTR [rax],eax
   1400450bb:	rex add DWORD PTR [rax],eax
   1400450be:	add    BYTE PTR [rax],al
   1400450c0:	adc    BYTE PTR [rcx],dl
   1400450c2:	add    BYTE PTR [rax+0x1],al
   1400450c5:	add    BYTE PTR [rax],al
   1400450c7:	add    BYTE PTR [rax+0x1400010],dh
   1400450cd:	add    BYTE PTR [rax],al
   1400450cf:	add    ah,dh
   1400450d1:	adc    BYTE PTR [rax],al
   1400450d3:	rex add DWORD PTR [rax],eax
   1400450d6:	add    BYTE PTR [rax],al
   1400450d8:	mov    esp,0x1400010
   1400450dd:	add    BYTE PTR [rax],al
   1400450df:	add    BYTE PTR [rax-0x4d],ch
   1400450e2:	add    al,0x40
   1400450e4:	add    DWORD PTR [rax],eax
   1400450e6:	add    BYTE PTR [rax],al
   1400450e8:	rex.W adc al,BYTE PTR [rax]
   1400450eb:	rex add DWORD PTR [rax],eax
   1400450ee:	add    BYTE PTR [rax],al
   1400450f0:	loopne 0x140045103
   1400450f2:	add    BYTE PTR [rax+0x1],al
   1400450f5:	add    BYTE PTR [rax],al
   1400450f7:	add    al,ch
   1400450f9:	adc    DWORD PTR [rax],eax
   1400450fb:	rex add DWORD PTR [rax],eax
   1400450fe:	add    BYTE PTR [rax],al
   140045100:	mov    al,0x10
   140045102:	add    BYTE PTR [rax+0x1],al
   140045105:	add    BYTE PTR [rax],al
   140045107:	add    ah,dh
   140045109:	adc    BYTE PTR [rax],al
   14004510b:	rex add DWORD PTR [rax],eax
   14004510e:	add    BYTE PTR [rax],al
   140045110:	mov    esp,0x1400010
   140045115:	add    BYTE PTR [rax],al
   140045117:	add    BYTE PTR [rax-0x4c],bl
   14004511a:	add    al,0x40
   14004511c:	add    DWORD PTR [rax],eax
   14004511e:	add    BYTE PTR [rax],al
   140045120:	rex.W adc al,BYTE PTR [rax]
   140045123:	rex add DWORD PTR [rax],eax
   140045126:	add    BYTE PTR [rax],al
   140045128:	jl     0x14004513c
   14004512a:	add    BYTE PTR [rax+0x1],al
   14004512d:	add    BYTE PTR [rax],al
   14004512f:	add    BYTE PTR [rdx+rdx*1+0x14000],al
   140045136:	add    BYTE PTR [rax],al
   140045138:	add    BYTE PTR [rbx],dl
   14004513a:	add    BYTE PTR [rax+0x1],al
   14004513d:	add    BYTE PTR [rax],al
   14004513f:	add    ah,dh
   140045141:	adc    BYTE PTR [rax],al
   140045143:	rex add DWORD PTR [rax],eax
   140045146:	add    BYTE PTR [rax],al
   140045148:	mov    esp,0x1400010
   14004514d:	add    BYTE PTR [rax],al
   14004514f:	add    BYTE PTR [rax],ch
   140045151:	enter  0x4004,0x1
   140045155:	add    BYTE PTR [rax],al
   140045157:	add    ah,ch
   140045159:	xor    al,BYTE PTR [rdx]
   14004515b:	rex add DWORD PTR [rax],eax
   14004515e:	add    BYTE PTR [rax],al
   140045160:	cwde   
   140045161:	lahf   
   140045162:	add    al,BYTE PTR [rax+0x1]
   140045165:	add    BYTE PTR [rax],al
   140045167:	add    BYTE PTR [rax],al
   140045169:	enter  0x4004,0x1
   14004516d:	add    BYTE PTR [rax],al
   14004516f:	add    BYTE PTR [rdx+rcx*2],bl
   140045172:	add    al,BYTE PTR [rax+0x1]
   140045175:	add    BYTE PTR [rax],al
   140045177:	add    BYTE PTR [rax+0x140029f],bl
   14004517d:	add    BYTE PTR [rax],al
   14004517f:	add    al,ch
   140045181:	scas   eax,DWORD PTR es:[rdi]
   140045182:	add    al,0x40
   140045184:	add    DWORD PTR [rax],eax
   140045186:	add    BYTE PTR [rax],al
   140045188:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045189:	(bad)  
   14004518a:	add    eax,DWORD PTR [rax+0x1]
   14004518d:	add    BYTE PTR [rax],al
   14004518f:	add    BYTE PTR [rax+0x140029f],bl
   140045195:	add    BYTE PTR [rax],al
   140045197:	add    BYTE PTR [rax-0x50],dh
   14004519a:	add    al,0x40
   14004519c:	add    DWORD PTR [rax],eax
   14004519e:	add    BYTE PTR [rax],al
   1400451a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400451a1:	(bad)  
   1400451a2:	add    eax,DWORD PTR [rax+0x1]
   1400451a5:	add    BYTE PTR [rax],al
   1400451a7:	add    BYTE PTR [rax+0x140029f],bl
   1400451ad:	add    BYTE PTR [rax],al
   1400451af:	add    BYTE PTR [rax+0x14004c7],bl
   1400451b5:	add    BYTE PTR [rax],al
   1400451b7:	add    ah,ch
   1400451b9:	xor    al,BYTE PTR [rdx]
   1400451bb:	rex add DWORD PTR [rax],eax
   1400451be:	add    BYTE PTR [rax],al
   1400451c0:	cwde   
   1400451c1:	lahf   
   1400451c2:	add    al,BYTE PTR [rax+0x1]
   1400451c5:	add    BYTE PTR [rax],al
   1400451c7:	add    BYTE PTR [rax],ch
   1400451c9:	sub    BYTE PTR [rcx-0x2d],cl
   1400451cc:	cmp    BYTE PTR [rcx-0x2c],al
   1400451cf:	rex.WRXB mov r11b,0xec
   1400451d2:	fistp  DWORD PTR [rcx-0x7951a1ed]
   1400451d8:	mov    esp,0x1400321
   1400451dd:	add    BYTE PTR [rax],al
   1400451df:	add    ah,bl
   1400451e1:	and    DWORD PTR [rbx],eax
   1400451e3:	rex add DWORD PTR [rax],eax
   1400451e6:	add    BYTE PTR [rax],al
   1400451e8:	ins    BYTE PTR es:[rdi],dx
   1400451e9:	and    al,BYTE PTR [rbx]
   1400451eb:	rex add DWORD PTR [rax],eax
   1400451ee:	add    BYTE PTR [rax],al
   1400451f0:	or     BYTE PTR [rdx],ah
   1400451f2:	add    eax,DWORD PTR [rax+0x1]
   1400451f5:	add    BYTE PTR [rax],al
   1400451f7:	add    ah,bh
   1400451f9:	and    BYTE PTR [rbx],al
   1400451fb:	rex add DWORD PTR [rax],eax
   1400451fe:	add    BYTE PTR [rax],al
   140045200:	and    QWORD PTR [rbx],rax
   140045203:	rex add DWORD PTR [rax],eax
   140045206:	add    BYTE PTR [rax],al
   140045208:	shl    BYTE PTR [rcx],1
   14004520a:	add    eax,DWORD PTR [rax+0x1]
   14004520d:	add    BYTE PTR [rax],al
   14004520f:	add    BYTE PTR [rax],bl
   140045211:	and    al,BYTE PTR [rbx]
   140045213:	rex add DWORD PTR [rax],eax
   140045216:	add    BYTE PTR [rax],al
   140045218:	cld    
   140045219:	and    DWORD PTR [rbx],eax
   14004521b:	rex add DWORD PTR [rax],eax
   14004521e:	add    BYTE PTR [rax],al
   140045220:	int3   
   140045221:	and    DWORD PTR [rbx],eax
   140045223:	rex add DWORD PTR [rax],eax
   140045226:	add    BYTE PTR [rax],al
   140045228:	(bad)  
   140045229:	and    BYTE PTR [rbx],al
   14004522b:	rex add DWORD PTR [rax],eax
   14004522e:	add    BYTE PTR [rax],al
   140045230:	(bad)  
   140045231:	cmp    al,0x35
   140045233:	imul   rdx,QWORD PTR [r9-0x2f],0x11
   140045238:	scas   al,BYTE PTR es:[rdi]
   140045239:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004523a:	add    al,al
   14004523c:	rex.WRXB mov r14b,0x88
   14004523f:	and    BYTE PTR [rcx],al
   140045241:	js     0x1400451c8
   140045243:	jl     0x1400451c6
   140045245:	jae    0x140045216
   140045247:	adc    DWORD PTR [rax+0xaa004d],ecx
   14004524d:	rex.WXB
   14004524e:	cs and al,0x80
   140045251:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045252:	adc    bl,ah
   140045254:	jg     0x1400452c9
   140045256:	iret   
   140045257:	adc    DWORD PTR [rax+0xaa004d],ecx
   14004525d:	rex.WXB
   14004525e:	cs and al,0x88
   140045261:	ret    0x2705
   140045264:	scas   al,BYTE PTR es:[rdi]
   140045265:	jns    0x140045239
   140045267:	adc    DWORD PTR [rbx+0x5a100048],esi
   14004526d:	(bad)  
   14004526e:	xor    DWORD PTR [rdi-0x74],0x231cfaba
   140045275:	adc    eax,0x79ad11d1
   14004527a:	add    al,al
   14004527c:	rex.WRXB fdivr st,st(5)
   14004527f:	(bad)  
   140045280:	(bad)  
   140045281:	xchg   esi,eax
   140045282:	sar    DWORD PTR [rsi+0x5],0x70
   140045286:	rcl    DWORD PTR [rcx],1
   140045288:	lods   eax,DWORD PTR ds:[rsi]
   140045289:	nop
   14004528a:	add    al,al
   14004528c:	rex.WRXB fdivr st,st(5)
   14004528f:	call   FWORD PTR [rcx+0x6b49353c]
   140045295:	push   rcx
   140045296:	rcl    DWORD PTR [rcx],1
   140045298:	scas   al,BYTE PTR es:[rdi]
   140045299:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004529a:	add    al,al
   14004529c:	rex.WRXB mov r14b,0x88
   14004529f:	and    BYTE PTR [rsi+0x4f9a6530],al
   1400452a5:	(bad)  
   1400452a6:	rcl    BYTE PTR [rcx],cl
   1400452a8:	mov    ch,0xf9
   1400452aa:	add    BYTE PTR [rax],dl
   1400452ac:	rex.WXB jo 0x1400452ed
   1400452af:	std    
   1400452b0:	popf   
   1400452b1:	push   rbp
   1400452b2:	sbb    al,0x8d
   1400452b4:	lock test BYTE PTR [rbx+0x56d5a74b],dh
   1400452bb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400452bc:	rex.XB pop r10
   1400452be:	fwait
   1400452bf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400452c0:	rex.WRX xchg rdi,rax
   1400452c2:	scas   eax,DWORD PTR es:[rdi]
   1400452c3:	ins    DWORD PTR es:[rdi],dx
   1400452c4:	(bad)  
   1400452c5:	rcl    BYTE PTR cs:[rcx],cl
   1400452c8:	scas   al,BYTE PTR es:[rdi]
   1400452c9:	leave  
   1400452ca:	add    al,al
   1400452cc:	rex.WRXB mov r14b,0x88
   1400452cf:	and    BYTE PTR [rbp+0x33eb87e1],bh
   1400452d5:	xor    dl,dl
   1400452d7:	adc    DWORD PTR [rsi+0x4fc000c9],ebp
   1400452dd:	mov    dh,0x88
   1400452df:	and    cl,bh
   1400452e1:	sbb    eax,0xd515b7b3
   1400452e6:	rcl    DWORD PTR [rcx],cl
   1400452e8:	movabs eax,ds:0xf25a511f5a10001c
   1400452f1:	adc    ax,0x1ec7
   1400452f5:	push   rsi
   1400452f6:	rcl    DWORD PTR [rcx],1
   1400452f8:	lods   eax,DWORD PTR ds:[rsi]
   1400452f9:	xchg   DWORD PTR [rax],eax
   1400452fb:	ror    BYTE PTR [rdi-0x28],0xfd
   1400452ff:	call   QWORD PTR [rdi-0x69]
   140045302:	scas   eax,DWORD PTR es:[rdi]
   140045303:	ins    DWORD PTR es:[rdi],dx
   140045304:	(bad)  
   140045305:	rcl    BYTE PTR cs:[rcx],cl
   140045308:	scas   al,BYTE PTR es:[rdi]
   140045309:	leave  
   14004530a:	add    al,al
   14004530c:	rex.WRXB mov r14b,0x88
   14004530f:	and    BYTE PTR [rcx+0x7fdc12a6],al
   140045315:	jae    0x1400452e6
   140045317:	adc    DWORD PTR [rax+0xaa004d],ecx
   14004531d:	rex.WXB
   14004531e:	cs and al,0xc7
   140045321:	xor    bl,BYTE PTR [rsi-0x2d43743c]
   140045327:	adc    DWORD PTR [rbp+0x5a1000d4],eax
   14004532d:	(bad)  
   14004532e:	add    DWORD PTR [rdx+rdi*1],0xffffff88
   140045332:	mov    edi,0xd3cad7bf
   140045337:	adc    DWORD PTR [rcx+0x5a10001b],esp
   14004533d:	(bad)  
   14004533e:	push   rcx
   14004533f:	pop    rdx
   140045340:	je     0x1400452e8
   140045342:	lods   al,BYTE PTR ds:[rsi]
   140045343:	rex.R cld 
   140045345:	call   0x1bca4651a
   14004534a:	add    al,al
   14004534c:	rex.WRXB mov r14b,0x88
   14004534f:	and    BYTE PTR [rbx*4+0x34713173],al
   140045356:	hlt    
   140045357:	rex.WR (bad) 
   140045359:	jl     0x1400453b2
   14004535b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004535c:	rex.WX out 0x19,eax
   14004535f:	push   rsi
   140045360:	cwde   
   140045361:	data16 rex.WXB
   140045363:	addr32 xchg edx,eax
   140045365:	out    dx,al
   140045366:	rcl    BYTE PTR [rcx],1
   140045368:	lods   eax,DWORD PTR ds:[rsi]
   140045369:	jno    0x14004536b
   14004536b:	ror    BYTE PTR [rdi-0x28],0xfd
   14004536f:	jmp    rcx
   140045371:	rex.RXB jns 0x140045376
   140045374:	xor    edi,edx
   140045376:	(bad)  
   140045377:	adc    DWORD PTR [rbx+0x57],esp
   14004537d:	add    BYTE PTR [rax],al
   14004537f:	add    DWORD PTR [rcx-0x736aa924],ebx
   140045385:	(bad)  
   140045386:	iret   
   140045387:	adc    DWORD PTR [rbx+0xaa007e],esp
   14004538d:	xor    al,BYTE PTR [rax-0x39]
   140045390:	adc    eax,edi
   140045392:	nop
   140045393:	cmp    r11b,BYTE PTR [rip+0x1f8911d0]        # 0x15f8d656a
   14004539a:	add    BYTE PTR [rdx+0x242e4b00],ch
   1400453a0:	(bad)  
   1400453a1:	xor    bl,BYTE PTR [rsi-0x2d43743c]
   1400453a7:	adc    DWORD PTR [rbp+0x5a1000d4],eax
   1400453ad:	(bad)  
   1400453ae:	add    DWORD PTR [rax+rbp*1],0x20
   1400453b2:	mov    ebp,0xd1152349
   1400453b7:	adc    DWORD PTR [rbp+0x4fc00079],ebp
   1400453bd:	fdivr  st,st(5)
   1400453bf:	push   QWORD PTR [rbp-0x5a]
   1400453c2:	lods   al,BYTE PTR ds:[rsi]
   1400453c3:	rex.R cld 
   1400453c5:	call   0x1bca4659a
   1400453ca:	add    al,al
   1400453cc:	rex.WRXB mov r14b,0x88
   1400453cf:	and    BYTE PTR [rcx+riz*8+0x3233eb87],bh
   1400453d6:	rcl    BYTE PTR [rcx],cl
   1400453d8:	scas   al,BYTE PTR es:[rdi]
   1400453d9:	leave  
   1400453da:	add    al,al
   1400453dc:	rex.WRXB mov r14b,0x88
   1400453df:	and    BYTE PTR [rdx+0x6b49353c],dl
   1400453e5:	push   rcx
   1400453e6:	rcl    DWORD PTR [rcx],1
   1400453e8:	scas   al,BYTE PTR es:[rdi]
   1400453e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400453ea:	add    al,al
   1400453ec:	rex.WRXB mov r14b,0x88
   1400453ef:	and    BYTE PTR [rdi+0x7fdc12a6],al
   1400453f5:	jae    0x1400453c6
   1400453f7:	adc    DWORD PTR [rax+0xaa004d],ecx
   1400453fd:	rex.WXB
   1400453fe:	cs and al,0xc5
   140045401:	ficomp WORD PTR [rcx-0x5d]
   140045404:	adc    ebp,eax
   140045406:	xor    al,0x48
   140045408:	mov    ch,BYTE PTR [rdx]
   14004540a:	mov    edx,0x7d771d7f
   14004540f:	jbe    0x14004540b
   140045411:	pop    rsp
   140045412:	shl    edi,cl
   140045414:	mov    esi,DWORD PTR [rsi+rbx*2]
   140045417:	rex.W mov bpl,0x24
   14004541a:	and    eax,0x97d62527
   14004541f:	retf   0x0
   140045422:	add    BYTE PTR [rax],al
   140045424:	add    BYTE PTR [rax],al
   140045426:	add    BYTE PTR [rax],al
   140045428:	rol    BYTE PTR [rax],0x0
   14004542b:	add    BYTE PTR [rax],al
   14004542d:	add    BYTE PTR [rax],al
   14004542f:	rex.RX add BYTE PTR [rax],r8b
	...
   14004543e:	add    BYTE PTR [rax],al
   140045440:	sub    DWORD PTR [rax],eax
   140045442:	add    BYTE PTR [rax+0x1],al
	...
   140045458:	sldt   WORD PTR [rax]
   14004545b:	add    BYTE PTR [rax],al
   14004545d:	add    BYTE PTR [rax],al
   14004545f:	add    BYTE PTR [rax],ah
   140045461:	add    eax,0x1993
	...
   1400454d6:	add    BYTE PTR [rax],al
   1400454d8:	xchg   esp,eax
   1400454d9:	rex.RXB add r8d,DWORD PTR [r8+0x1]
   1400454dd:	add    BYTE PTR [rax],al
   1400454df:	add    al,bh
   1400454e1:	mov    al,0x4
   1400454e3:	rex add DWORD PTR [rax],eax
   1400454e6:	add    BYTE PTR [rax],al
   1400454e8:	cmp    BYTE PTR [rax+0x3],cl
   1400454eb:	rex add DWORD PTR [rax],eax
   1400454ee:	add    BYTE PTR [rax],al
   1400454f0:	cwde   
   1400454f1:	lahf   
   1400454f2:	add    al,BYTE PTR [rax+0x1]
   1400454f5:	add    BYTE PTR [rax],al
   1400454f7:	add    BYTE PTR [rdx+0x61],ah
   1400454fa:	and    BYTE PTR fs:[rbp+0x78],ah
   1400454fe:	movsxd esp,DWORD PTR [rbp+0x70]
   140045501:	je     0x14004556c
   140045503:	outs   dx,DWORD PTR ds:[rsi]
   140045504:	outs   dx,BYTE PTR ds:[rsi]
   140045505:	add    BYTE PTR [rax],al
   140045507:	add    BYTE PTR [rdx],ah
   140045509:	add    eax,0x21993
   14004550e:	add    BYTE PTR [rax],al
   140045510:	sbb    al,0xf3
   140045512:	add    al,0x0
   140045514:	add    DWORD PTR [rax],eax
   140045516:	add    BYTE PTR [rax],al
   140045518:	jl     0x1400454f0
   14004551a:	add    al,0x0
   14004551c:	(bad)  
   14004551d:	add    BYTE PTR [rax],al
   14004551f:	add    BYTE PTR [rsi+rdx*8+0x200004],ah
   140045526:	add    BYTE PTR [rax],al
   140045528:	add    BYTE PTR [rax],al
   14004552a:	add    BYTE PTR [rax],al
   14004552c:	add    DWORD PTR [rax],eax
	...
   140045536:	add    BYTE PTR [rax],al
   140045538:	outs   dx,BYTE PTR gs:[esi]
   14004553b:	gs jb  0x1400455a7
   14004553e:	movsxd eax,DWORD PTR [rax]
   140045540:	jne    0x1400455b0
   140045542:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140045546:	outs   dx,BYTE PTR ds:[rsi]
   140045547:	and    BYTE PTR [rbp+0x72],ah
   14004554a:	jb     0x1400455bb
   14004554c:	jb     0x14004554e
   14004554e:	add    BYTE PTR [rax],al
   140045550:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   140045557:	ins    DWORD PTR es:[rdi],dx
	...
   140045560:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   140045567:	ins    DWORD PTR es:[rdi],dx
   140045568:	and    BYTE PTR [rbx+0x74],dh
   14004556b:	jb     0x1400455d2
   14004556d:	(bad)  
   14004556e:	ins    DWORD PTR es:[rdi],dx
   14004556f:	and    BYTE PTR [rbp+0x72],ah
   140045572:	jb     0x1400455e3
   140045574:	jb     0x140045576
   140045576:	add    BYTE PTR [rax],al
   140045578:	jae    0x1400455f3
   14004557a:	jae    0x1400455f0
   14004557c:	gs ins DWORD PTR es:[rdi],dx
   14004557e:	add    BYTE PTR [rax],al
   140045580:	push   rsi
   140045581:	add    BYTE PTR [rbx+0x0],dl
   140045584:	push   rax
   140045585:	add    BYTE PTR [rbp+0x0],ah
   140045588:	jb     0x14004558a
   14004558a:	data16 add BYTE PTR [rbx+0x0],dl
   14004558e:	jb     0x140045590
   140045590:	jbe    0x140045592
   140045592:	add    BYTE PTR [rax],al
   140045594:	add    BYTE PTR [rax],al
   140045596:	add    BYTE PTR [rax],al
   140045598:	rex.RX add BYTE PTR [rbp+0x0],r14b
   14004559c:	ins    BYTE PTR es:[rdi],dx
   14004559d:	add    BYTE PTR [rax+rax*1+0x41],ch
   1400455a1:	add    BYTE PTR [rbx+0x0],ah
   1400455a4:	movsxd eax,DWORD PTR [rax]
   1400455a6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400455aa:	jae    0x1400455ac
   1400455ac:	add    BYTE PTR [rax],al
   1400455ae:	add    BYTE PTR [rax],al
   1400455b0:	rex.XB add BYTE PTR [r10+0x0],sil
   1400455b4:	outs   dx,DWORD PTR ds:[rsi]
   1400455b5:	add    BYTE PTR [rbx+0x0],dh
   1400455b8:	jae    0x1400455ba
   1400455ba:	push   rbx
   1400455bb:	add    BYTE PTR [rbp+0x0],ah
   1400455be:	jae    0x1400455c0
   1400455c0:	jae    0x1400455c2
   1400455c2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400455c8:	and    BYTE PTR [rax],al
   1400455ca:	add    BYTE PTR [rax],al
   1400455cc:	add    BYTE PTR [rax],al
   1400455ce:	add    BYTE PTR [rax],al
   1400455d0:	push   rbx
   1400455d1:	add    BYTE PTR [rcx+0x0],ah
   1400455d4:	ins    DWORD PTR es:[rdi],dx
   1400455d5:	add    BYTE PTR [rax+0x0],dh
   1400455d8:	ins    BYTE PTR es:[rdi],dx
   1400455d9:	add    BYTE PTR [rbp+0x0],ah
   1400455dc:	push   rax
   1400455dd:	add    BYTE PTR [rdx+0x0],dh
   1400455e0:	outs   dx,DWORD PTR ds:[rsi]
   1400455e1:	add    BYTE PTR [rsi+0x0],ah
   1400455e4:	imul   eax,DWORD PTR [rax],0x69006c
   1400455ea:	outs   dx,BYTE PTR ds:[rsi]
   1400455eb:	add    BYTE PTR [rdi+0x0],ah
   1400455ee:	and    BYTE PTR [rax],al
	...
   1400455f8:	rex.WR add BYTE PTR [rcx+0x0],r13b
   1400455fc:	jae    0x1400455fe
   1400455fe:	je     0x140045600
   140045600:	add    BYTE PTR [rax],al
   140045602:	add    BYTE PTR [rax],al
   140045604:	rex.WR add BYTE PTR [rax],r8b
   140045607:	add    BYTE PTR [rcx+0x0],al
   14004560a:	ins    BYTE PTR es:[rdi],dx
   14004560b:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14004560f:	add    BYTE PTR [rdi+0x0],dh
   140045612:	add    BYTE PTR [rax],al
   140045614:	add    BYTE PTR [r8],al
   140045617:	add    BYTE PTR [rax+rax*1+0x65],al
   14004561b:	add    BYTE PTR [rsi+0x0],ch
   14004561e:	jns    0x140045620
   140045620:	add    BYTE PTR [rax],al
   140045622:	add    BYTE PTR [rax],al
   140045624:	add    BYTE PTR [rax],r8b
   140045627:	add    BYTE PTR [rbx+0x0],al
   14004562a:	jb     0x14004562c
   14004562c:	outs   dx,DWORD PTR ds:[rsi]
   14004562d:	add    BYTE PTR [rbx+0x0],dh
   140045630:	jae    0x140045632
   140045632:	push   rbx
   140045633:	add    BYTE PTR [rbp+0x0],ah
   140045636:	jae    0x140045638
   140045638:	jae    0x14004563a
   14004563a:	imul   eax,DWORD PTR [rax],0x6e006f
   140045640:	add    BYTE PTR [rax],al
   140045642:	add    BYTE PTR [rax],al
   140045644:	rex.XB add BYTE PTR [r11+0x0],dl
	...
   140045650:	push   rbx
   140045651:	add    BYTE PTR [rcx+0x0],ah
   140045654:	ins    DWORD PTR es:[rdi],dx
   140045655:	add    BYTE PTR [rax+0x0],dh
   140045658:	ins    BYTE PTR es:[rdi],dx
   140045659:	add    BYTE PTR [rbp+0x0],ah
   14004565c:	push   rax
   14004565d:	add    BYTE PTR [rdx+0x0],dh
   140045660:	outs   dx,DWORD PTR ds:[rsi]
   140045661:	add    BYTE PTR [rsi+0x0],ah
   140045664:	imul   eax,DWORD PTR [rax],0x69006c
   14004566a:	outs   dx,BYTE PTR ds:[rsi]
   14004566b:	add    BYTE PTR [rdi+0x0],ah
   14004566e:	add    BYTE PTR [rax],al
   140045670:	push   rbx
   140045671:	add    BYTE PTR [rax+0x0],dl
   140045674:	add    BYTE PTR [rax],al
   140045676:	add    BYTE PTR [rax],al
   140045678:	rex.RX add BYTE PTR [rcx+0x0],r8b
   14004567c:	add    BYTE PTR [rax],al
   14004567e:	add    BYTE PTR [rax],al
   140045680:	add    BYTE PTR [r13+0x0],sil
   140045684:	je     0x140045686
   140045686:	outs   dx,DWORD PTR ds:[rsi]
   140045687:	add    BYTE PTR [rbx+0x0],dh
   14004568a:	je     0x14004568c
   14004568c:	(bad)  
   14004568d:	add    BYTE PTR [rdx+0x0],dh
   140045690:	je     0x140045692
   140045692:	add    BYTE PTR [rax],al
   140045694:	add    BYTE PTR [rax],al
   140045696:	add    BYTE PTR [rax],al
   140045698:	outs   dx,DWORD PTR ds:[rsi]
   140045699:	add    BYTE PTR [rsi+0x0],ah
   14004569c:	data16 add BYTE PTR [rax],al
   14004569f:	add    BYTE PTR [rbx+0x0],dl
   1400456a2:	je     0x1400456a4
   1400456a4:	(bad)  
   1400456a5:	add    BYTE PTR [rdx+0x0],dh
   1400456a8:	je     0x1400456aa
   1400456aa:	add    BYTE PTR [rax],al
   1400456ac:	add    BYTE PTR [rax],al
   1400456ae:	add    BYTE PTR [rax],al
   1400456b0:	push   rbx
   1400456b1:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400456b5:	add    BYTE PTR [rax+0x0],dh
	...
   1400456c0:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400456c4:	jae    0x1400456c6
   1400456c6:	je     0x1400456c8
   1400456c8:	(bad)  
   1400456c9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400456cd:	add    BYTE PTR [rax],al
   1400456cf:	add    BYTE PTR [rbp+0x0],dl
   1400456d2:	outs   dx,BYTE PTR ds:[rsi]
   1400456d3:	add    BYTE PTR [rcx+0x0],ch
   1400456d6:	outs   dx,BYTE PTR ds:[rsi]
   1400456d7:	add    BYTE PTR [rbx+0x0],dh
   1400456da:	je     0x1400456dc
   1400456dc:	(bad)  
   1400456dd:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400456e1:	add    BYTE PTR [rax],al
   1400456e3:	add    BYTE PTR [rax+rax*1],ch
   1400456e6:	cmp    al,BYTE PTR [rax]
	...
   1400456f0:	jae    0x1400456f2
   1400456f2:	add    BYTE PTR gs:[rbx+0x0],ah
   1400456f6:	jne    0x1400456f8
   1400456f8:	jb     0x1400456fa
   1400456fa:	imul   eax,DWORD PTR [rax],0x790074
	...
   140045708:	jae    0x14004570a
   14004570a:	add    BYTE PTR gs:[rdx+0x0],dh
   14004570e:	jbe    0x140045710
   140045710:	imul   eax,DWORD PTR [rax],0x650063
   140045716:	add    BYTE PTR [rax],al
   140045718:	add    BYTE PTR fs:[rdx+0x0],dh
   14004571c:	imul   eax,DWORD PTR [rax],0x650076
   140045722:	jb     0x140045724
   140045724:	add    BYTE PTR [rax],al
   140045726:	add    BYTE PTR [rax],al
   140045728:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14004572f:	and    BYTE PTR [rbx+0x74],dh
   140045732:	jb     0x14004579d
   140045734:	outs   dx,BYTE PTR ds:[rsi]
   140045735:	and    BYTE PTR [eax+0x6f],dh
   140045739:	jae    0x1400457a4
   14004573b:	je     0x1400457a6
   14004573d:	outs   dx,DWORD PTR ds:[rsi]
   14004573e:	outs   dx,BYTE PTR ds:[rsi]
   14004573f:	add    BYTE PTR [rbx+0x74],dh
   140045742:	jb     0x1400457ad
   140045744:	outs   dx,BYTE PTR ds:[rsi]
   140045745:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14004574a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14004574e:	add    BYTE PTR [esi+0x65],dh
   140045752:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140045756:	cmp    al,0x54
   140045758:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14004575d:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140045761:	add    BYTE PTR [eax],al
   140045764:	add    BYTE PTR [rax],al
   140045766:	add    BYTE PTR [rax],al
   140045768:	jbe    0x140045746
   14004576a:	push   rbx
   14004576b:	cmp    BYTE PTR [rip+0xffffffff88407c9f],dh        # 0xc844d410
   140045771:	movabs eax,ds:0x66ebbc5f364493d1
   14004577a:	xor    ah,bh
   14004577c:	out    dx,eax
   14004577d:	jns    0x1400457ca
   14004577f:	rex.R xchg ecx,eax
   140045781:	adc    ecx,edx
   140045783:	mov    dh,BYTE PTR [rbp-0x15]
   140045786:	repnz cli 
   140045788:	xor    BYTE PTR [rsp+rax*1+0x140],0x0
   140045790:	mov    esp,0x14001d1
   140045795:	add    BYTE PTR [rax],al
   140045797:	add    BYTE PTR [rax+0x14001d1],ch
   14004579d:	add    BYTE PTR [rax],al
   14004579f:	add    BYTE PTR [rax],bl
   1400457a1:	mov    ah,0x4
   1400457a3:	rex add DWORD PTR [rax],eax
   1400457a6:	add    BYTE PTR [rax],al
   1400457a8:	and    al,0x6c
   1400457aa:	add    al,BYTE PTR [rax+0x1]
   1400457ad:	add    BYTE PTR [rax],al
   1400457af:	add    BYTE PTR [rsp+rbp*2],ah
   1400457b2:	add    al,BYTE PTR [rax+0x1]
   1400457b5:	add    BYTE PTR [rax],al
   1400457b7:	add    BYTE PTR [rbp+rdi*8+0x6f88c3cc],dh
   1400457be:	rcl    BYTE PTR [rcx],cl
   1400457c0:	movabs ds:0x602a78b14fc000ce,eax
   1400457c9:	ret    
   1400457ca:	pop    rdi
   1400457cb:	xchg   esi,eax
   1400457cc:	call   QWORD PTR [rsi]
   1400457ce:	rcl    BYTE PTR [rcx],1
   1400457d0:	xchg   ecx,eax
   1400457d1:	retf   
   1400457d2:	add    BYTE PTR [rdx+0x23b7bb00],ch
   1400457d8:	lods   eax,DWORD PTR ds:[rsi]
   1400457d9:	rex.WX sbb QWORD PTR [rsi+0x11d23204],0x6000829a
   1400457e4:	or     BYTE PTR [rax+0x3969],ch
   1400457ea:	add    BYTE PTR [rax],al
   1400457ec:	add    BYTE PTR [rax],al
   1400457ee:	add    BYTE PTR [rax],al
   1400457f0:	adc    DWORD PTR [rax],eax
   1400457f2:	add    BYTE PTR [rax],al
   1400457f4:	(bad)  
   1400457f5:	add    BYTE PTR [rax],al
   1400457f7:	add    BYTE PTR [rip+0x25000000],bl        # 0x1650457fd
   1400457fd:	add    BYTE PTR [rax],al
   1400457ff:	add    BYTE PTR [rcx],ch
   140045801:	add    BYTE PTR [rax],al
   140045803:	add    BYTE PTR [rip+0x43000000],dh        # 0x183045809
   140045809:	add    BYTE PTR [rax],al
   14004580b:	add    BYTE PTR [rbx+0x0],dl
   14004580e:	add    BYTE PTR [rax],al
   140045810:	add    BYTE PTR [eax],al
   140045813:	add    BYTE PTR [rbx-0x5d000000],al
   140045819:	add    BYTE PTR [rax],al
   14004581b:	add    bl,dl
   14004581d:	add    BYTE PTR [rax],al
   14004581f:	add    BYTE PTR [rcx],al
   140045821:	add    DWORD PTR [rax],eax
   140045823:	add    BYTE PTR [rbx+0x1],cl
   140045826:	add    BYTE PTR [rax],al
   140045828:	cdq    
   140045829:	add    DWORD PTR [rax],eax
   14004582b:	add    BYTE PTR [rcx],cl
   14004582d:	add    al,BYTE PTR [rax]
   14004582f:	add    BYTE PTR [rdi+0x35000002],al
   140045835:	add    eax,DWORD PTR [rax]
   140045837:	add    BYTE PTR [rdi],al
   140045839:	add    al,0x0
   14004583b:	add    BYTE PTR [rbx],cl
   14004583d:	add    eax,0x65b0000
   140045842:	add    BYTE PTR [rax],al
   140045844:	add    eax,0x1f000008
   140045849:	or     al,BYTE PTR [rax]
   14004584b:	add    BYTE PTR [rbx+0x300000c],dh
   140045851:	adc    BYTE PTR [rax],al
   140045853:	add    BYTE PTR [rdi],ch
   140045855:	adc    al,0x0
   140045857:	add    BYTE PTR [rcx+0x19],bh
   14004585a:	add    BYTE PTR [rax],al
   14004585c:	adc    DWORD PTR [rax],esp
   14004585e:	add    BYTE PTR [rax],al
   140045860:	pop    rbx
   140045861:	sub    BYTE PTR [rax],al
   140045863:	add    bh,cl
   140045865:	xor    al,BYTE PTR [rax]
   140045867:	add    BYTE PTR [rbx],bl
   140045869:	add    BYTE PTR [rax],al
   14004586c:	mov    bh,0x50
   14004586e:	add    BYTE PTR [rax],al
   140045870:	movabs eax,ds:0x5300008003000065
   140045879:	movabs eax,ds:0x10000cb350000
   140045882:	add    DWORD PTR [rax],eax
   140045884:	mov    eax,DWORD PTR [rdx+0x1]
   140045887:	add    BYTE PTR [rcx-0x6a],ah
   14004588a:	add    DWORD PTR [rax],eax
   14004588c:	sbb    eax,0x29000200
   140045891:	test   DWORD PTR [rdx],eax
   140045893:	add    bl,al
   140045895:	sub    al,0x3
   140045897:	add    BYTE PTR [rbx],al
   140045899:	add    BYTE PTR [rax+rax*1],al
   14004589c:	(bad)  
   14004589d:	or     al,BYTE PTR [rip+0x6599300]        # 0x1465deba3
   1400458a3:	add    BYTE PTR [rip+0x53000800],dl        # 0x1930460a9
   1400458a9:	adc    al,0xa
   1400458ab:	add    BYTE PTR [rbx],ah
   1400458ad:	mov    bl,0xc
   1400458af:	add    BYTE PTR [rdi],al
   1400458b1:	add    BYTE PTR [rax],dl
   1400458b3:	add    BYTE PTR [rbx+0x1f001428],dh
   1400458b9:	sbb    WORD PTR [rax],ax
   1400458bc:	adc    DWORD PTR [rax],eax
   1400458be:	and    BYTE PTR [rax],al
   1400458c0:	push   rcx
   1400458c1:	push   rcx
   1400458c2:	sub    BYTE PTR [rax],al
   1400458c4:	dec    ebx
   1400458c6:	xor    al,BYTE PTR [rax]
   1400458c8:	sldt   WORD PTR [rax+0x0]
   1400458cc:	lea    esp,[rdx-0x67feffb0]
   1400458d2:	add    BYTE PTR gs:[rcx],cl
   1400458d5:	add    BYTE PTR [rax-0x5ebadf00],al
   1400458db:	add    cl,bh
   1400458dd:	(bad)  
   1400458de:	retf   
   1400458df:	add    bh,bh
   1400458e1:	(bad)  
   1400458e2:	(bad)  
   1400458e3:	inc    DWORD PTR [rax]
	...
   1400458ed:	add    BYTE PTR [rax],al
   1400458ef:	add    BYTE PTR [rax],bh
   1400458f1:	mov    ch,0x4
   1400458f3:	rex add DWORD PTR [rax],eax
   1400458f6:	add    BYTE PTR [rax],al
   1400458f8:	jl     0x14004593f
   1400458fa:	add    BYTE PTR [rax+0x1],al
   1400458fd:	add    BYTE PTR [rax],al
   1400458ff:	add    BYTE PTR [rax+0x47],ah
   140045902:	add    BYTE PTR [rax+0x1],al
   140045905:	add    BYTE PTR [rax],al
   140045907:	add    BYTE PTR [rdi+rax*2+0x14000],dl
   14004590e:	add    BYTE PTR [rax],al
   140045910:	mov    esp,0x1400056
   140045915:	add    BYTE PTR [rax],al
   140045917:	add    al,ch
   140045919:	push   rsi
   14004591a:	add    BYTE PTR [rax+0x1],al
   14004591d:	add    BYTE PTR [rax],al
   14004591f:	add    BYTE PTR [rdi+rdx*2],dl
   140045922:	add    BYTE PTR [rax+0x1],al
   140045925:	add    BYTE PTR [rax],al
   140045927:	add    BYTE PTR [rdi+rdx*2+0x0],al
   14004592b:	rex add DWORD PTR [rax],eax
   14004592e:	add    BYTE PTR [rax],al
   140045930:	in     al,dx
   140045931:	pop    rdx
   140045932:	add    BYTE PTR [rax+0x1],al
   140045935:	add    BYTE PTR [rax],al
   140045937:	add    BYTE PTR [rax],al
   140045939:	adc    BYTE PTR [rax],al
   14004593b:	rex add DWORD PTR [rax],eax
   14004593e:	add    BYTE PTR [rax],al
   140045940:	and    eax,0x6400
   140045945:	add    BYTE PTR [rax],al
   140045947:	add    BYTE PTR [rdi+0x0],al
   14004594a:	rex.WR add BYTE PTR [rdi+0x0],r9b
   14004594e:	rex.X add BYTE PTR [rcx+0x0],al
   140045952:	rex.WR add BYTE PTR [rdi+0x0],r9b
   140045956:	rex.WRX add BYTE PTR [rax],r8b
   140045959:	add    BYTE PTR [rax],al
   14004595b:	add    BYTE PTR [rax],al
   14004595d:	add    BYTE PTR [rax],al
   14004595f:	add    BYTE PTR [rdi+0x0],al
   140045962:	rex.WR add BYTE PTR [rdi+0x0],r9b
   140045966:	rex.X add BYTE PTR [rcx+0x0],al
   14004596a:	rex.WR add BYTE PTR [rdi+0x0],r9b
   14004596e:	rex.RX add BYTE PTR [rsi+0x0],r8b
   140045972:	add    BYTE PTR [rax],al
   140045974:	add    BYTE PTR [rax],al
   140045976:	add    BYTE PTR [rax],al
   140045978:	push   rax
   140045979:	add    BYTE PTR [rdx+0x0],dl
   14004597c:	rex.WRXB add BYTE PTR [r11+0x0],r8b
   140045980:	add    BYTE PTR [r11+0x0],r10b
   140045984:	push   rbx
   140045985:	add    BYTE PTR [rdi+0x0],cl
   140045988:	rex.WRX add BYTE PTR [rax],r8b
   14004598b:	add    BYTE PTR [rax],al
   14004598d:	add    BYTE PTR [rax],al
   14004598f:	add    BYTE PTR [rax+0x0],dl
   140045992:	push   rdx
   140045993:	add    BYTE PTR [rdi+0x0],cl
   140045996:	rex.XB add BYTE PTR [r13+0x0],al
   14004599a:	push   rbx
   14004599b:	add    BYTE PTR [rbx+0x0],dl
   14004599e:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   1400459a2:	rex.RX add BYTE PTR [rax],r8b
   1400459a5:	add    BYTE PTR [rax],al
   1400459a7:	add    BYTE PTR [rax+rax*1+0x48],dl
   1400459ab:	add    BYTE PTR [rdx+0x0],dl
   1400459ae:	add    BYTE PTR [r9+0x0],r8b
   1400459b2:	add    BYTE PTR [rdi+0x0],r9b
   1400459b6:	rex.WRX add BYTE PTR [rax],r8b
   1400459b9:	add    BYTE PTR [rax],al
   1400459bb:	add    BYTE PTR [rax],al
   1400459bd:	add    BYTE PTR [rax],al
   1400459bf:	add    BYTE PTR [rax+rax*1+0x48],dl
   1400459c3:	add    BYTE PTR [rdx+0x0],dl
   1400459c6:	add    BYTE PTR [r9+0x0],r8b
   1400459ca:	add    BYTE PTR [rdi+0x0],r9b
   1400459ce:	rex.RX add BYTE PTR [rsi+0x0],r8b
   1400459d2:	add    BYTE PTR [rax],al
   1400459d4:	add    BYTE PTR [rax],al
   1400459d6:	add    BYTE PTR [rax],al
   1400459d8:	push   rbx
   1400459d9:	add    BYTE PTR [rax+0x0],cl
   1400459dc:	push   rbp
   1400459dd:	add    BYTE PTR [rax+rax*1+0x44],dl
   1400459e1:	add    BYTE PTR [rdi+0x0],cl
   1400459e4:	push   rdi
   1400459e5:	add    BYTE PTR [rsi+0x0],cl
	...
   1400459f0:	rex.RX add BYTE PTR [rdi+0x0],r9b
   1400459f4:	push   rdx
   1400459f5:	add    BYTE PTR [rbx+0x0],al
   1400459f8:	add    BYTE PTR [r11+0x0],r10b
   1400459fc:	rex.W add BYTE PTR [rbp+0x0],dl
   140045a00:	push   rsp
   140045a01:	add    BYTE PTR [rax+rax*1+0x4f],al
   140045a05:	add    BYTE PTR [rdi+0x0],dl
   140045a08:	rex.WRX add BYTE PTR [rax],r8b
   140045a0b:	add    BYTE PTR [rax],al
   140045a0d:	add    BYTE PTR [rax],al
   140045a0f:	add    BYTE PTR [rdi+0x0],dl
   140045a12:	add    BYTE PTR [r9+0x0],cl
   140045a16:	push   rsp
   140045a17:	add    BYTE PTR [rbx+0x0],dl
   140045a1a:	push   rsp
   140045a1b:	add    BYTE PTR [rcx+0x0],al
   140045a1e:	push   rdx
   140045a1f:	add    BYTE PTR [rax+rax*1+0x0],dl
   140045a23:	add    BYTE PTR [rax],al
   140045a25:	add    BYTE PTR [rax],al
   140045a27:	add    BYTE PTR [rbx+0x0],dl
   140045a2a:	push   rsp
   140045a2b:	add    BYTE PTR [rcx+0x0],al
   140045a2e:	push   rdx
   140045a2f:	add    BYTE PTR [rax+rax*1+0x0],dl
   140045a33:	add    BYTE PTR [rax],al
   140045a35:	add    BYTE PTR [rax],al
   140045a37:	add    BYTE PTR [rbp+0x0],cl
   140045a3a:	add    BYTE PTR [r10+0x0],dl
   140045a3e:	rex.WXB add BYTE PTR [r8],al
   140045a41:	add    BYTE PTR [rax],al
   140045a43:	add    BYTE PTR [rax],al
   140045a45:	add    BYTE PTR [rax],al
   140045a47:	add    BYTE PTR [rbx+0x0],dl
   140045a4a:	push   rsp
   140045a4b:	add    BYTE PTR [rcx+0x0],al
   140045a4e:	push   rsp
   140045a4f:	add    BYTE PTR [rbp+0x0],dl
   140045a52:	push   rbx
   140045a53:	add    BYTE PTR [rax],al
   140045a55:	add    BYTE PTR [rax],al
   140045a57:	add    BYTE PTR [rsi+0x0],dl
   140045a5a:	add    BYTE PTR [r10+0x0],r10b
   140045a5e:	rex.X add BYTE PTR [rdi+0x0],cl
   140045a62:	push   rbx
   140045a63:	add    BYTE PTR [rbp+0x0],al
   140045a66:	add    BYTE PTR [rax],al
   140045a68:	rex.WR add BYTE PTR [rcx+0x0],r8b
   140045a6c:	push   rbp
   140045a6d:	add    BYTE PTR [rsi+0x0],cl
   140045a70:	rex.XB add BYTE PTR [r8+0x0],cl
   140045a74:	add    BYTE PTR [rax],al
   140045a76:	add    BYTE PTR [rax],al
   140045a78:	add    BYTE PTR [r10+0x0],dl
   140045a7c:	rex.RXB add BYTE PTR [r11+0x0],r10b
	...
   140045a88:	rex.XB add BYTE PTR [r15+0x0],cl
   140045a8c:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   140045a90:	rex.WRXB add BYTE PTR [r8+r8*1+0x45],r9b
   140045a95:	add    BYTE PTR [rax],al
   140045a97:	add    BYTE PTR [rax+rax*1+0x49],cl
   140045a9b:	add    BYTE PTR [rsi+0x0],cl
   140045a9e:	add    BYTE PTR [r15+0x0],r9b
   140045aa2:	rex.RX add BYTE PTR [rsi+0x0],r8b
   140045aa6:	add    BYTE PTR [rax],al
   140045aa8:	rex.XB add BYTE PTR [r10+0x0],dl
   140045aac:	rex.WRXB add BYTE PTR [r11+0x0],r10b
   140045ab0:	push   rbx
   140045ab1:	add    BYTE PTR [rbx+0x0],dl
   140045ab4:	add    BYTE PTR [r11+0x0],r10b
   140045ab8:	push   rbx
   140045ab9:	add    BYTE PTR [rcx+0x0],cl
   140045abc:	rex.WRXB add BYTE PTR [r14+0x0],r9b
	...
   140045ac8:	add    BYTE PTR [r8+rax*1+0x54],dl
   140045acd:	add    BYTE PTR [rcx+0x0],al
   140045ad0:	rex.XB add BYTE PTR [r8+0x0],cl
   140045ad4:	add    BYTE PTR [rax],al
   140045ad6:	add    BYTE PTR [rax],al
   140045ad8:	add    BYTE PTR [rbp+0x0],r8b
   140045adc:	push   rsp
   140045add:	add    BYTE PTR [rcx+0x0],al
   140045ae0:	rex.XB add BYTE PTR [r8+0x0],cl
   140045ae4:	add    BYTE PTR [rax],al
   140045ae6:	add    BYTE PTR [rax],al
   140045ae8:	push   rax
   140045ae9:	add    BYTE PTR [rsi+0x0],al
   140045aec:	add    BYTE PTR [rax],al
   140045aee:	add    BYTE PTR [rax],al
   140045af0:	push   rbx
   140045af1:	add    BYTE PTR [rcx+0x0],bl
   140045af4:	push   rbx
   140045af5:	add    BYTE PTR [rax],al
   140045af7:	add    BYTE PTR [rax+rax*1+0x49],dl
   140045afb:	add    BYTE PTR [rbp+0x0],cl
   140045afe:	add    BYTE PTR [r10+0x0],r10b
   140045b02:	add    BYTE PTR [rax],al
   140045b04:	add    BYTE PTR [rax],al
   140045b06:	add    BYTE PTR [rax],al
   140045b08:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140045b0c:	push   rsp
   140045b0d:	add    BYTE PTR [rax+0x0],dl
   140045b10:	push   rbp
   140045b11:	add    BYTE PTR [rax+rax*1+0x0],dl
   140045b15:	add    BYTE PTR [rax],al
   140045b17:	add    BYTE PTR [rdi+0x0],al
   140045b1a:	rex.XB add BYTE PTR [r8],al
   140045b1d:	add    BYTE PTR [rax],al
   140045b1f:	add    BYTE PTR [rcx+0x0],al
   140045b22:	rex.WR add BYTE PTR [rax+rax*1+0x4f],r9b
   140045b27:	add    BYTE PTR [rbx+0x0],al
   140045b2a:	add    BYTE PTR [r8+rax*1+0x49],dl
   140045b2f:	add    BYTE PTR [rdi+0x0],cl
   140045b32:	rex.WRX add BYTE PTR [rax],r8b
   140045b35:	add    BYTE PTR [rax],al
   140045b37:	add    BYTE PTR [rax+rax*1+0x49],cl
   140045b3b:	add    BYTE PTR [rsi+0x0],al
   140045b3e:	add    BYTE PTR [r8+rax*1+0x49],r10b
   140045b43:	add    BYTE PTR [rbp+0x0],cl
   140045b46:	add    BYTE PTR [r8],r8b
   140045b49:	add    BYTE PTR [rax],al
   140045b4b:	add    BYTE PTR [rax],al
   140045b4d:	add    BYTE PTR [rax],al
   140045b4f:	add    BYTE PTR [rax+rax*1+0x52],dl
   140045b53:	add    BYTE PTR [rcx+0x0],al
   140045b56:	rex.XB add BYTE PTR [r13+0x0],al
   140045b5a:	add    BYTE PTR [rax],al
   140045b5c:	add    BYTE PTR [rax],al
   140045b5e:	add    BYTE PTR [rax],al
   140045b60:	rex.XB add BYTE PTR [r15+0x0],cl
   140045b64:	push   rsi
   140045b65:	add    BYTE PTR [rbp+0x0],al
   140045b68:	push   rdx
   140045b69:	add    BYTE PTR [rcx+0x0],al
   140045b6c:	rex.RXB add BYTE PTR [r13+0x0],r8b
	...
   140045b78:	push   rbx
   140045b79:	add    BYTE PTR [rcx+0x0],al
   140045b7c:	rex.WRB add BYTE PTR [r8+0x0],r10b
   140045b80:	rex.WR add BYTE PTR [rbp+0x0],r8b
   140045b84:	add    BYTE PTR [rax],al
   140045b86:	add    BYTE PTR [rax],al
   140045b88:	rex.XB add BYTE PTR [r15+0x0],cl
   140045b8c:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   140045b90:	push   rbp
   140045b91:	add    BYTE PTR [rdx+0x0],dl
   140045b94:	push   rdx
   140045b95:	add    BYTE PTR [rbp+0x0],al
   140045b98:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   140045b9c:	pop    rcx
   140045b9d:	add    BYTE PTR [rax],al
   140045b9f:	add    BYTE PTR [rbp+0x0],dl
   140045ba2:	add    BYTE PTR [rax],al
   140045ba4:	add    BYTE PTR [rbx+0x0],r10b
	...
   140045bb0:	add    BYTE PTR [r14+0x0],r10b
   140045bb4:	add    BYTE PTR [r14+0x0],r9b
   140045bb8:	push   rsp
   140045bb9:	add    BYTE PTR [rbx+0x0],dl
   140045bbc:	add    BYTE PTR [rax],al
   140045bbe:	add    BYTE PTR [rax],al
   140045bc0:	rex.XB add BYTE PTR [r15+0x0],cl
   140045bc4:	push   rbp
   140045bc5:	add    BYTE PTR [rsi+0x0],cl
   140045bc8:	push   rsp
   140045bc9:	add    BYTE PTR [rbp+0x0],al
   140045bcc:	push   rdx
   140045bcd:	add    BYTE PTR [rax],al
   140045bcf:	add    BYTE PTR [rcx+0x0],dl
   140045bd2:	push   rbp
   140045bd3:	add    BYTE PTR [rbp+0x0],al
   140045bd6:	push   rdx
   140045bd7:	add    BYTE PTR [rcx+0x0],bl
   140045bda:	rex.XB add BYTE PTR [r15+0x0],cl
   140045bde:	push   rbp
   140045bdf:	add    BYTE PTR [rsi+0x0],cl
   140045be2:	push   rsp
   140045be3:	add    BYTE PTR [rbp+0x0],al
   140045be6:	push   rdx
   140045be7:	add    BYTE PTR [rbx+0x0],dl
   140045bea:	add    BYTE PTR [rax],al
   140045bec:	add    BYTE PTR [rax],al
   140045bee:	add    BYTE PTR [rax],al
   140045bf0:	push   rdi
   140045bf1:	add    BYTE PTR [rcx+0x0],cl
   140045bf4:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   140045bf8:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140045bfc:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   140045c01:	add    BYTE PTR [rdx+0x0],dl
   140045c04:	add    BYTE PTR [rax],al
   140045c06:	add    BYTE PTR [rax],al
   140045c08:	add    BYTE PTR [r13+0x0],dl
   140045c0c:	push   rsp
   140045c0d:	add    BYTE PTR [rdi+0x0],cl
   140045c10:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140045c14:	push   rdx
   140045c15:	add    BYTE PTR [rbx+0x0],cl
	...
   140045c20:	push   rbp
   140045c21:	add    BYTE PTR [rbx+0x0],dl
   140045c24:	add    BYTE PTR [r10+0x0],r10b
	...
   140045c30:	add    BYTE PTR [rdx+0x0],r10b
   140045c34:	rex.WB add BYTE PTR [r14+0x0],dl
   140045c38:	add    BYTE PTR [r10+0x0],r10b
   140045c3c:	add    BYTE PTR [rax],al
   140045c3e:	add    BYTE PTR [rax],al
   140045c40:	add    BYTE PTR [r8+rax*1+0x4d],al
   140045c45:	add    BYTE PTR [rcx+0x0],cl
   140045c48:	rex.WRX add BYTE PTR [rax],r8b
   140045c4b:	add    BYTE PTR [rax],al
   140045c4d:	add    BYTE PTR [rax],al
   140045c4f:	add    BYTE PTR [rbx+0x0],dl
   140045c52:	push   rsp
   140045c53:	add    BYTE PTR [rcx+0x0],al
   140045c56:	push   rdx
   140045c57:	add    BYTE PTR [rax+rax*1+0x54],dl
   140045c5b:	add    BYTE PTR [rbp+0x0],al
   140045c5e:	push   rbx
   140045c5f:	add    BYTE PTR [rax+rax*1+0x0],dl
   140045c63:	add    BYTE PTR [rax],al
   140045c65:	add    BYTE PTR [rax],al
   140045c67:	add    BYTE PTR [rbp+0x0],al
   140045c6a:	rex.WRX add BYTE PTR [rax+r8*1+0x54],r8b
   140045c6f:	add    BYTE PTR [rbp+0x0],al
   140045c72:	push   rbx
   140045c73:	add    BYTE PTR [rax+rax*1+0x0],dl
   140045c77:	add    BYTE PTR [rax+rax*1+0x41],dl
   140045c7b:	add    BYTE PTR [rdx+0x0],dl
   140045c7e:	rex.RXB add BYTE PTR [r13+0x0],r8b
   140045c82:	push   rsp
   140045c83:	add    BYTE PTR [rbx+0x0],al
   140045c86:	rex.WR add BYTE PTR [rdx+0x0],r10b
   140045c8a:	add    BYTE PTR [rax],al
   140045c8c:	add    BYTE PTR [rax],al
   140045c8e:	add    BYTE PTR [rax],al
   140045c90:	rex.WB add BYTE PTR [r11+0x0],dl
   140045c94:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140045c98:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   140045c9c:	rex.RXB add BYTE PTR [r13+0x0],r8b
   140045ca0:	add    BYTE PTR [rax],r8b
   140045ca3:	add    BYTE PTR [rdi],bh
   140045ca5:	add    BYTE PTR [rax],al
   140045ca7:	add    BYTE PTR [rax+0x0],cl
   140045caa:	add    BYTE PTR [r8+rax*1+0x50],r9b
	...
   140045cb7:	add    BYTE PTR [rsi+0x65],dh
   140045cba:	jb     0x140045d25
   140045cbc:	imul   sp,WORD PTR [rbp+0x72],0x642e
   140045cc2:	ins    BYTE PTR es:[rdi],dx
   140045cc3:	ins    BYTE PTR es:[rdi],dx
   140045cc4:	add    BYTE PTR [rax],al
   140045cc6:	add    BYTE PTR [rax],al
   140045cc8:	cmp    al,BYTE PTR [rax]
   140045cca:	add    BYTE PTR [rax],al
   140045ccc:	or     al,BYTE PTR [rax]
   140045cce:	add    BYTE PTR [rax],al
   140045cd0:	add    BYTE PTR cs:[rbp+0x0],ah
   140045cd4:	js     0x140045cd6
   140045cd6:	add    BYTE PTR gs:[rax],al
   140045cd9:	add    BYTE PTR [rax],al
   140045cdb:	add    BYTE PTR [rax],al
   140045cdd:	add    BYTE PTR [rax],al
   140045cdf:	add    BYTE PTR [rip+0x20006400],ah        # 0x16004c0e5
   140045ce5:	add    BYTE PTR [rip+0xa007300],ah        # 0x14a04cfeb
   140045ceb:	add    BYTE PTR [rax],al
   140045ced:	add    BYTE PTR [rax],al
   140045cef:	add    BYTE PTR [rip+0x5800],ah        # 0x14004b4f5
   140045cf5:	add    BYTE PTR [rax],al
   140045cf7:	add    BYTE PTR [rip+0x64006c00],ah        # 0x1a404c8fd
   140045cfd:	add    BYTE PTR [rax],al
   140045cff:	add    BYTE PTR [rax+rax*1+0x5c],bl
   140045d03:	add    BYTE PTR [rsi],ch
   140045d05:	add    BYTE PTR [rax+rax*1+0x56],bl
   140045d09:	add    BYTE PTR [rbx+0x0],dl
   140045d0c:	push   rax
   140045d0d:	add    BYTE PTR [rbp+0x0],ah
   140045d10:	jb     0x140045d12
   140045d12:	data16 add BYTE PTR [rax+rax*1+0x72],al
   140045d17:	add    BYTE PTR [rsi+0x0],dh
   140045d1a:	xor    DWORD PTR [rax],eax
   140045d1c:	xor    DWORD PTR [rax],eax
   140045d1e:	xor    BYTE PTR [rax],al
	...
   140045d30:	push   rbx
   140045d31:	add    BYTE PTR [rcx+0x0],bl
   140045d34:	push   rbx
   140045d35:	add    BYTE PTR [rax+rax*1+0x45],dl
   140045d39:	add    BYTE PTR [rbp+0x0],cl
   140045d3c:	pop    rsp
   140045d3d:	add    BYTE PTR [rbx+0x0],al
   140045d40:	jne    0x140045d42
   140045d42:	jb     0x140045d44
   140045d44:	jb     0x140045d46
   140045d46:	add    BYTE PTR gs:[rsi+0x0],ch
   140045d4a:	je     0x140045d4c
   140045d4c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140045d50:	outs   dx,BYTE PTR ds:[rsi]
   140045d51:	add    BYTE PTR [rax+rax*1+0x72],dh
   140045d55:	add    BYTE PTR [rdi+0x0],ch
   140045d58:	ins    BYTE PTR es:[rdi],dx
   140045d59:	add    BYTE PTR [rbx+0x0],dl
   140045d5c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140045d61:	add    BYTE PTR [rbx+0x0],dl
   140045d64:	add    BYTE PTR gs:[rdx+0x0],dh
   140045d68:	jbe    0x140045d6a
   140045d6a:	imul   eax,DWORD PTR [rax],0x650063
   140045d70:	jae    0x140045d72
   140045d72:	pop    rsp
   140045d73:	add    BYTE PTR [rsi+0x0],dl
   140045d76:	push   rbx
   140045d77:	add    BYTE PTR [rax+0x0],dl
   140045d7a:	add    BYTE PTR gs:[rdx+0x0],dh
   140045d7e:	data16 add BYTE PTR [rbx+0x0],dl
   140045d82:	jb     0x140045d84
   140045d84:	jbe    0x140045d86
	...
   140045d8e:	add    BYTE PTR [rax],al
   140045d90:	push   rbx
   140045d91:	outs   dx,DWORD PTR ds:[rsi]
   140045d92:	data16 je 0x140045e0c
   140045d95:	(bad)  
   140045d96:	jb     0x140045dfd
   140045d98:	pop    rsp
   140045d99:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140045da1:	je     0x140045dff
   140045da3:	push   rsi
   140045da4:	imul   esi,DWORD PTR [rbx+0x75],0x74536c61
   140045dab:	jne    0x140045e11
   140045dad:	imul   ebp,DWORD PTR [rdi+0x5c],0x302e3131
   140045db4:	pop    rsp
   140045db5:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140045db7:	je     0x140045e1e
   140045db9:	jb     0x140045e2b
   140045dbb:	jb     0x140045e26
   140045dbd:	jae    0x140045e24
   140045dbf:	push   rsp
   140045dc0:	outs   dx,DWORD PTR ds:[rsi]
   140045dc1:	outs   dx,DWORD PTR ds:[rsi]
   140045dc2:	ins    BYTE PTR es:[rdi],dx
   140045dc3:	jae    0x140045e21
   140045dc5:	rex.RX (bad) 
   140045dc7:	jne    0x140045e35
   140045dc9:	je     0x140045e1f
   140045dcb:	gs jae 0x140045e42
   140045dce:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   140045dd5:	add    BYTE PTR [rax],al
   140045dd7:	add    BYTE PTR [rsi+0x73],dh
   140045dda:	jo     0x140045e41
   140045ddc:	jb     0x140045e44
   140045dde:	movsxd ebp,DWORD PTR [rbp+0x64]
   140045de1:	cs gs js 0x140045e4a
   140045de5:	add    BYTE PTR [rax],al
   140045de7:	add    BYTE PTR [rsi+0x0],dl
   140045dea:	push   rbx
   140045deb:	add    BYTE PTR [rax+0x0],dl
   140045dee:	add    BYTE PTR gs:[rdx+0x0],dh
   140045df2:	data16 add BYTE PTR [rbp+0x0],cl
   140045df6:	outs   dx,DWORD PTR ds:[rsi]
   140045df7:	add    BYTE PTR [rsi+0x0],ch
   140045dfa:	and    BYTE PTR [rax],al
   140045dfc:	sub    eax,0x73002500
   140045e01:	add    BYTE PTR [rax],ah
   140045e03:	add    BYTE PTR [rip+0x73002500],ch        # 0x1b3048309
   140045e09:	add    BYTE PTR [rdx],bh
   140045e0b:	add    BYTE PTR [rdx],ah
   140045e0d:	add    BYTE PTR [rip+0x22007300],ah        # 0x16204d113
   140045e13:	add    BYTE PTR [rax],al
   140045e15:	add    BYTE PTR [rax],al
   140045e17:	add    BYTE PTR [rax],ah
   140045e19:	add    BYTE PTR [rip+0x73002500],ch        # 0x1b304831f
   140045e1f:	add    BYTE PTR [rdx],bh
   140045e21:	add    BYTE PTR [rdx],ah
   140045e23:	add    BYTE PTR [rip+0x22007300],ah        # 0x16204d129
   140045e29:	add    BYTE PTR [rax],al
   140045e2b:	add    BYTE PTR [rax],al
   140045e2d:	add    BYTE PTR [rax],al
   140045e2f:	add    BYTE PTR [rax+0x49],al
   140045e32:	outs   dx,BYTE PTR ds:[rsi]
   140045e33:	jae    0x140045ea9
   140045e35:	(bad)  
   140045e36:	outs   dx,BYTE PTR ds:[rsi]
   140045e37:	movsxd esp,DWORD PTR [rbp+0x0]
   140045e3a:	add    BYTE PTR [rax],al
   140045e3c:	and    eax,0x2500
   140045e41:	add    BYTE PTR [rax],al
   140045e43:	add    BYTE PTR [rip+0x25000000],ah        # 0x165045e49
   140045e49:	add    BYTE PTR [rbx+0x0],dh
   140045e4c:	add    BYTE PTR [rax],al
   140045e4e:	add    BYTE PTR [rax],al
   140045e50:	and    BYTE PTR [rax],al
   140045e52:	sub    eax,0x73002500
   140045e57:	add    BYTE PTR [rdx],bh
   140045e59:	add    BYTE PTR [rip+0x6400],ah        # 0x14004c25f
   140045e5f:	add    BYTE PTR [rax],ah
   140045e61:	add    BYTE PTR [rip+0x53004300],ch        # 0x19304a167
	...
   140045e6f:	add    BYTE PTR [rsi+0x0],dh
   140045e72:	jae    0x140045e74
   140045e74:	jo     0x140045e76
   140045e76:	add    BYTE PTR gs:[rdx+0x0],dh
   140045e7a:	data16 add BYTE PTR [rbp+0x0],ch
   140045e7e:	outs   dx,DWORD PTR ds:[rsi]
   140045e7f:	add    BYTE PTR [rsi+0x0],ch
   140045e82:	add    BYTE PTR cs:[rbp+0x0],ah
   140045e86:	js     0x140045e88
   140045e88:	add    BYTE PTR gs:[rax],al
   140045e8b:	add    BYTE PTR [rax],al
   140045e8d:	add    BYTE PTR [rax],al
   140045e8f:	add    BYTE PTR [rax+rax*1],bh
   140045e92:	jne    0x140045e94
   140045e94:	outs   dx,BYTE PTR ds:[rsi]
   140045e95:	add    BYTE PTR [rbx+0x0],ch
   140045e98:	outs   dx,BYTE PTR ds:[rsi]
   140045e99:	add    BYTE PTR [rdi+0x0],ch
   140045e9c:	ja     0x140045e9e
   140045e9e:	outs   dx,BYTE PTR ds:[rsi]
   140045e9f:	add    BYTE PTR [rsi],bh
   140045ea1:	add    BYTE PTR [rax],al
   140045ea3:	add    BYTE PTR [rax],al
   140045ea5:	add    BYTE PTR [rax],al
   140045ea7:	add    BYTE PTR [rbx+0x0],dl
   140045eaa:	sub    eax,0x3f003f00
   140045eaf:	add    BYTE PTR [rdi],bh
   140045eb1:	add    BYTE PTR [rax],al
   140045eb3:	add    BYTE PTR [rax],al
   140045eb5:	add    BYTE PTR [rax],al
   140045eb7:	add    BYTE PTR [rax+0x73],dh
   140045eba:	(bad)  
   140045ebb:	jo     0x140045f26
   140045ebd:	cs fs ins BYTE PTR es:[rdi],dx
   140045ec0:	ins    BYTE PTR es:[rdi],dx
   140045ec1:	add    BYTE PTR [rax],al
   140045ec3:	add    BYTE PTR [rdx],ah
   140045ec5:	add    BYTE PTR [rax],al
   140045ec7:	add    BYTE PTR [rdx],ah
   140045ec9:	add    BYTE PTR [rax],ah
   140045ecb:	add    BYTE PTR [rax],al
   140045ecd:	add    BYTE PTR [rax],al
   140045ecf:	add    BYTE PTR [rax],ah
   140045ed1:	pop    rbx
   140045ed2:	outs   dx,BYTE PTR ds:[rsi]
   140045ed3:	outs   dx,DWORD PTR ds:[rsi]
   140045ed4:	je     0x140045ef6
   140045ed6:	jae    0x140045f4d
   140045ed8:	jo     0x140045f4a
   140045eda:	outs   dx,DWORD PTR ds:[rsi]
   140045edb:	jb     0x140045f51
   140045edd:	gs fs pop rbp
   140045ee0:	add    BYTE PTR [rax],al
   140045ee2:	add    BYTE PTR [rax],al
   140045ee4:	sub    al,0x0
   140045ee6:	add    BYTE PTR [rax],al
   140045ee8:	pop    rsp
   140045ee9:	add    BYTE PTR [rip+0x28007300],ah        # 0x16804d1ef
   140045eef:	add    BYTE PTR [rdi+0x0],bl
   140045ef2:	push   rsp
   140045ef3:	add    BYTE PTR [rdi+0x0],ch
   140045ef6:	je     0x140045ef8
   140045ef8:	(bad)  
   140045ef9:	add    BYTE PTR [rax+rax*1+0x29],ch
   140045efd:	add    BYTE PTR [rax+rax*1+0x25],bl
   140045f01:	add    BYTE PTR [rbx+0x0],dh
   140045f04:	add    BYTE PTR [rax],al
   140045f06:	add    BYTE PTR [rax],al
   140045f08:	push   rsi
   140045f09:	push   rbx
   140045f0a:	push   rax
   140045f0b:	gs jb  0x140045f74
   140045f0e:	pop    rdi
   140045f0f:	push   rdx
   140045f10:	jne    0x140045f7e
   140045f12:	gs pop rdi
   140045f14:	rex.R
   140045f15:	imul   bp,WORD PTR gs:[rsi+0x69],0x6974
   140045f1c:	outs   dx,DWORD PTR ds:[rsi]
   140045f1d:	outs   dx,BYTE PTR ds:[rsi]
   140045f1e:	jae    0x140045f4e
   140045f20:	js     0x140045f8f
   140045f22:	ins    BYTE PTR es:[rdi],dx
   140045f23:	add    BYTE PTR [rax],al
   140045f25:	add    BYTE PTR [rax],al
   140045f27:	add    BYTE PTR [rsi],ch
   140045f29:	add    BYTE PTR [rsi],ch
   140045f2b:	add    BYTE PTR [rip+0x6300],ah        # 0x14004c231
   140045f31:	add    BYTE PTR [rax],al
   140045f33:	add    BYTE PTR [rbp+0x0],ah
   140045f36:	outs   dx,BYTE PTR ds:[rsi]
	...
   140045f3f:	add    BYTE PTR [rdi+0x0],dl
   140045f42:	imul   eax,DWORD PTR [rax],0x43006e
   140045f48:	outs   dx,DWORD PTR ds:[rsi]
   140045f49:	add    BYTE PTR [rbp+0x0],dh
   140045f4c:	outs   dx,BYTE PTR ds:[rsi]
   140045f4d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140045f51:	add    BYTE PTR [rdx+0x0],dh
   140045f54:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140045f58:	ins    DWORD PTR es:[rdi],dx
   140045f59:	add    BYTE PTR [rbp+0x0],ah
   140045f5c:	add    BYTE PTR [rax],al
   140045f5e:	add    BYTE PTR [rax],al
   140045f60:	push   rsp
   140045f61:	add    BYTE PTR [rdi+0x0],ch
   140045f64:	je     0x140045f66
   140045f66:	(bad)  
   140045f67:	add    BYTE PTR [rax+rax*1+0x57],ch
   140045f6b:	add    BYTE PTR [rcx+0x0],ch
   140045f6e:	outs   dx,BYTE PTR ds:[rsi]
   140045f6f:	add    BYTE PTR [rbx+0x0],al
   140045f72:	outs   dx,DWORD PTR ds:[rsi]
   140045f73:	add    BYTE PTR [rbp+0x0],dh
   140045f76:	outs   dx,BYTE PTR ds:[rsi]
   140045f77:	add    BYTE PTR [rax+rax*1+0x65],dh
   140045f7b:	add    BYTE PTR [rdx+0x0],dh
   140045f7e:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140045f82:	ins    DWORD PTR es:[rdi],dx
   140045f83:	add    BYTE PTR [rbp+0x0],ah
	...
   140045f8e:	add    BYTE PTR [rax],al
   140045f90:	add    BYTE PTR [rbp+0x4],bl
   140045f93:	rex add DWORD PTR [rax],eax
   140045f96:	add    BYTE PTR [rax],al
   140045f98:	add    BYTE PTR [rbp+0x4],bl
   140045f9b:	rex add DWORD PTR [rax],eax
   140045f9e:	add    BYTE PTR [rax],al
   140045fa0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140045fa4:	movsxd eax,DWORD PTR [rax]
   140045fa6:	jb     0x140045fa8
   140045fa8:	outs   dx,DWORD PTR ds:[rsi]
   140045fa9:	add    BYTE PTR [rbx+0x0],dh
   140045fac:	outs   dx,DWORD PTR ds:[rsi]
   140045fad:	add    BYTE PTR [rsi+0x0],ah
   140045fb0:	je     0x140045fb2
   140045fb2:	scas   al,BYTE PTR es:[rdi]
   140045fb3:	add    BYTE PTR [rax],ah
   140045fb5:	add    BYTE PTR [rsi+0x0],dl
   140045fb8:	push   rbx
   140045fb9:	add    BYTE PTR [rax+0x0],dl
   140045fbc:	add    BYTE PTR gs:[rdx+0x0],dh
   140045fc0:	data16 add BYTE PTR [rax],ah
   140045fc3:	add    BYTE PTR [rax+0x0],dl
   140045fc6:	add    BYTE PTR gs:[rdx+0x0],dh
   140045fca:	data16 add BYTE PTR [rdi+0x0],ch
   140045fce:	jb     0x140045fd0
   140045fd0:	ins    DWORD PTR es:[rdi],dx
   140045fd1:	add    BYTE PTR [rcx+0x0],ah
   140045fd4:	outs   dx,BYTE PTR ds:[rsi]
   140045fd5:	add    BYTE PTR [rbx+0x0],ah
   140045fd8:	add    BYTE PTR gs:[rax],ah
   140045fdb:	add    BYTE PTR [rbx+0x0],al
   140045fde:	outs   dx,DWORD PTR ds:[rsi]
   140045fdf:	add    BYTE PTR [rsi+0x0],ch
   140045fe2:	je     0x140045fe4
   140045fe4:	jb     0x140045fe6
   140045fe6:	outs   dx,DWORD PTR ds:[rsi]
   140045fe7:	add    BYTE PTR [rax+rax*1+0x20],ch
   140045feb:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140045fef:	add    BYTE PTR [rdi+0x0],ch
   140045ff2:	ins    BYTE PTR es:[rdi],dx
   140045ff3:	add    BYTE PTR [rax],al
   140045ff5:	add    BYTE PTR [rax],al
   140045ff7:	add    al,bh
   140045ff9:	jo     0x140045fff
   140045ffb:	rex add DWORD PTR [rax],eax
   140045ffe:	add    BYTE PTR [rax],al
   140046000:	mov    al,0x70
   140046002:	add    al,0x40
   140046004:	add    DWORD PTR [rax],eax
   140046006:	add    BYTE PTR [rax],al
   140046008:	push   0x1400460
   14004600d:	add    BYTE PTR [rax],al
   14004600f:	add    BYTE PTR [rax],al
   140046011:	pop    rbp
   140046012:	add    al,0x40
   140046014:	add    DWORD PTR [rax],eax
   140046016:	add    BYTE PTR [rax],al
   140046018:	rex jno 0x14004601f
   14004601b:	rex add DWORD PTR [rax],eax
   14004601e:	add    BYTE PTR [rax],al
   140046020:	push   0x1400460
   140046025:	add    BYTE PTR [rax],al
   140046027:	add    BYTE PTR [rax],ah
   140046029:	jno    0x14004602f
   14004602b:	rex add DWORD PTR [rax],eax
	...
   14004603a:	add    BYTE PTR [rax],al
   14004603c:	sldt   WORD PTR [rax]
   14004603f:	add    BYTE PTR [rcx-0x628d8604],al
   140046045:	jo     0x140045fdc
   140046047:	mov    sil,0x3d
   14004604a:	imul   edi,esi,0x30900d4b
   140046050:	(bad)  
   140046051:	and    DWORD PTR [rdi-0x38],0x46238a37
   140046058:	mov    BYTE PTR [rdx-0x50],ah
   14004605b:	mov    cl,0xf3
   14004605d:	jge    0x140046053
   14004605f:	js     0x1400460d0
   140046061:	add    BYTE PTR [rsi+0x0],ch
   140046064:	add    BYTE PTR [rax],al
   140046066:	add    BYTE PTR [rax],al
   140046068:	push   rsi
   140046069:	add    BYTE PTR [rbx+0x0],dl
   14004606c:	push   rax
   14004606d:	add    BYTE PTR [rbp+0x0],ah
   140046070:	jb     0x140046072
   140046072:	data16 add BYTE PTR [rax+rax*1+0x72],al
   140046077:	add    BYTE PTR [rsi+0x0],dh
   14004607a:	xor    DWORD PTR [rax],eax
   14004607c:	xor    DWORD PTR [rax],eax
   14004607e:	xor    BYTE PTR [rax],al
	...
   140046088:	add    BYTE PTR [r8+rax*1+0x64],spl
   14004608d:	add    BYTE PTR [rbp+0x0],dl
   140046090:	jae    0x140046092
   140046092:	add    BYTE PTR gs:[rdx+0x0],dh
   140046096:	add    BYTE PTR [rax],al
   140046098:	push   rdx
   140046099:	add    BYTE PTR [rbp+0x0],ah
   14004609c:	ins    DWORD PTR es:[rdi],dx
   14004609d:	add    BYTE PTR [rdi+0x0],ch
   1400460a0:	jbe    0x1400460a2
   1400460a2:	add    BYTE PTR gs:[rbp+0x0],dl
   1400460a6:	jae    0x1400460a8
   1400460a8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400460ac:	add    BYTE PTR [rax],al
   1400460ae:	add    BYTE PTR [rax],al
   1400460b0:	push   rbx
   1400460b1:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400460b5:	add    BYTE PTR [rax+rax*1+0x75],dh
   1400460b9:	add    BYTE PTR [rbx+0x0],dh
   1400460bc:	add    BYTE PTR [rax],al
   1400460be:	add    BYTE PTR [rax],al
   1400460c0:	rex.WXB
   1400460c1:	rex.RB push r10
   1400460c3:	rex.WRX
   1400460c4:	rex.RB
   1400460c5:	xor    r14,QWORD PTR [rdx]
   1400460c8:	cs rex.R
   1400460ca:	rex.WR
   1400460cb:	rex.WR add BYTE PTR [rax],r8b
   1400460ce:	add    BYTE PTR [rax],al
   1400460d0:	rex.RXB
   1400460d1:	gs je  0x140046121
   1400460d4:	(bad)  
   1400460d5:	js     0x140046140
   1400460d7:	ins    DWORD PTR es:[rdi],dx
   1400460d8:	jne    0x140046147
   1400460da:	push   rax
   1400460db:	jb     0x14004614c
   1400460dd:	movsxd esp,DWORD PTR [rbp+0x73]
   1400460e0:	jae    0x140046151
   1400460e2:	jb     0x140046127
   1400460e4:	outs   dx,DWORD PTR ds:[rsi]
   1400460e5:	jne    0x140046155
   1400460e7:	je     0x1400460e9
   1400460e9:	add    BYTE PTR [rax],al
   1400460eb:	add    BYTE PTR [rax],al
   1400460ed:	add    BYTE PTR [rax],al
   1400460ef:	add    BYTE PTR [rdi+0x65],al
   1400460f2:	je     0x140046141
   1400460f4:	(bad)  
   1400460f5:	js     0x140046160
   1400460f7:	ins    DWORD PTR es:[rdi],dx
   1400460f8:	jne    0x140046167
   1400460fa:	push   rax
   1400460fb:	jb     0x14004616c
   1400460fd:	movsxd esp,DWORD PTR [rbp+0x73]
   140046100:	jae    0x140046171
   140046102:	jb     0x14004614b
   140046104:	jb     0x140046175
   140046106:	jne    0x140046178
   140046108:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004610a:	jne    0x14004617a
   14004610c:	je     0x14004610e
   14004610e:	add    BYTE PTR [rax],al
   140046110:	add    BYTE PTR [rdx],r15b
   140046113:	add    BYTE PTR [rax+0x0],dl
   140046116:	sub    BYTE PTR [rax],al
   140046118:	add    BYTE PTR [r11],dil
   14004611b:	add    BYTE PTR [rbx],bh
   14004611d:	add    BYTE PTR [rdi+0x0],al
   140046120:	add    BYTE PTR [r11],dil
   140046123:	add    BYTE PTR [rbx],bh
   140046125:	add    BYTE PTR [rbx],bh
   140046127:	add    BYTE PTR [rbx+0x0],dl
   14004612a:	pop    rcx
   14004612b:	add    BYTE PTR [rcx],ch
   14004612d:	add    BYTE PTR [rax],ch
   14004612f:	add    BYTE PTR [rcx+0x0],al
   140046132:	cmp    eax,DWORD PTR [rax]
   140046134:	cmp    eax,DWORD PTR [rax]
   140046136:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14004613a:	cmp    eax,DWORD PTR [rax]
   14004613c:	cmp    eax,DWORD PTR [rax]
   14004613e:	cmp    eax,DWORD PTR [rax]
   140046140:	rex.X add BYTE PTR [rcx+0x0],al
   140046144:	sub    DWORD PTR [rax],eax
   140046146:	add    BYTE PTR [rax],al
   140046148:	xor    DWORD PTR [rax],eax
   14004614a:	xor    DWORD PTR [rax],eax
   14004614c:	add    BYTE PTR cs:[rax],dh
   14004614f:	add    BYTE PTR [rsi],ch
   140046151:	add    BYTE PTR [rip+0x37003000],dh        # 0x177049157
   140046157:	add    BYTE PTR [rdx],dh
   140046159:	add    BYTE PTR [rdi],dh
   14004615b:	add    BYTE PTR [rax],ah
   14004615d:	add    BYTE PTR [rax+0x0],bh
   140046160:	add    BYTE PTR ss:[rax+rax*1],dh
   140046164:	add    BYTE PTR [rax],al
   140046166:	add    BYTE PTR [rax],al
   140046168:	push   rbx
   140046169:	gs rex.R
   14004616b:	gs (bad) 
   14004616d:	jne    0x1400461d6
   14004616f:	push   rax
   140046170:	jb     0x1400461db
   140046172:	jbe    0x1400461dd
   140046174:	ins    BYTE PTR es:[rdi],dx
   140046175:	gs add BYTE PTR gs:[eax],al
   14004617a:	add    BYTE PTR [rax],al
   14004617c:	add    BYTE PTR [rax],al
   14004617e:	add    BYTE PTR [rax],al
   140046180:	push   rbx
   140046181:	add    BYTE PTR [rcx+0x0],ah
   140046184:	ins    DWORD PTR es:[rdi],dx
   140046185:	add    BYTE PTR [rax+0x0],dh
   140046188:	ins    BYTE PTR es:[rdi],dx
   140046189:	add    BYTE PTR [rcx+0x0],ch
   14004618c:	outs   dx,BYTE PTR ds:[rsi]
   14004618d:	add    BYTE PTR [rdi+0x0],ah
   140046190:	rex.XB add BYTE PTR [r15+0x0],bpl
   140046194:	outs   dx,BYTE PTR ds:[rsi]
   140046195:	add    BYTE PTR [rax+rax*1+0x72],dh
   140046199:	add    BYTE PTR [rdi+0x0],ch
   14004619c:	ins    BYTE PTR es:[rdi],dx
   14004619d:	add    BYTE PTR [rsi],ch
   14004619f:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1400461a3:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400461a7:	add    BYTE PTR [rbx+0x0],dh
   1400461aa:	jne    0x1400461ac
   1400461ac:	jo     0x1400461ae
   1400461ae:	jo     0x1400461b0
   1400461b0:	jb     0x1400461b2
   1400461b2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400461b6:	jae    0x1400461b8
   1400461b8:	pop    rdi
   1400461b9:	add    BYTE PTR [rdi+0x0],dh
   1400461bc:	(bad)  
   1400461bd:	add    BYTE PTR [rax+rax*1+0x73],dh
   1400461c1:	add    BYTE PTR [rdi+0x0],ch
   1400461c4:	outs   dx,BYTE PTR ds:[rsi]
   1400461c5:	add    BYTE PTR [rax],al
   1400461c7:	add    BYTE PTR [rbx+0x65],dl
   1400461ca:	jb     0x140046242
   1400461cc:	imul   esp,DWORD PTR [rbx+0x65],0x74634173
   1400461d3:	imul   esi,DWORD PTR [rsi+0x65],0xabe30000
   1400461da:	rex.WB mov r11b,0x6f
   1400461dd:	mov    ch,0x89
   1400461df:	rex.RX mov edi,0x39bf76cd
   1400461e5:	fmul   DWORD PTR [rax-0x7fe77216]
   1400461eb:	xchg   edx,eax
   1400461ec:	mov    cs,WORD PTR [rsi]
   1400461ee:	addr32 rex.W mov bl,0xc
   1400461f2:	jg     0x14004619c
   1400461f4:	cmp    BYTE PTR [rax+rbp*8+0x97ed8de],al
   1400461fb:	mov    ebp,0x43fe733e
   140046200:	mov    ss,edi
   140046202:	test   eax,0x44a8f95f
   140046207:	mov    edx,ss
   140046209:	sar    DWORD PTR [rcx],1
   14004620b:	mov    ebp,0x486aba2f
   140046210:	mov    DWORD PTR [rax+0x46cbb0b4],esi
   140046216:	push   0x32db9e91
   14004621b:	shl    DWORD PTR [rbx-0x7dbeda47],cl
   140046221:	(bad)  
   140046222:	movabs eax,ds:0x4b6301632f58448
   14004622b:	rex add DWORD PTR [rax],eax
   14004622e:	add    BYTE PTR [rax],al
   140046230:	fs (bad) 
   140046232:	add    DWORD PTR [rax+0x1],eax
   140046235:	add    BYTE PTR [rax],al
   140046237:	add    BYTE PTR [rdi+rax*1+0x1],bh
   14004623b:	rex add DWORD PTR [rax],eax
   14004623e:	add    BYTE PTR [rax],al
   140046240:	mov    ah,0xfd
   140046242:	add    BYTE PTR [rax+0x1],al
   140046245:	add    BYTE PTR [rax],al
   140046247:	add    BYTE PTR [rax+rax*1+0x0],bl
   14004624b:	add    BYTE PTR [rax],al
   14004624d:	add    BYTE PTR [rax],al
   14004624f:	add    BYTE PTR [rax],ch
   140046251:	add    BYTE PTR [rax+0x0],dh
   140046254:	jb     0x140046256
   140046256:	add    BYTE PTR gs:[rbx+0x0],dh
   14004625a:	jae    0x14004625c
   14004625c:	and    BYTE PTR [rax],al
   14004625e:	cmp    al,0x0
   140046260:	jb     0x140046262
   140046262:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140046267:	add    BYTE PTR [rdx+0x0],dh
   14004626a:	outs   dx,BYTE PTR ds:[rsi]
   14004626b:	add    BYTE PTR [rsi],bh
   14004626d:	add    BYTE PTR [rax],ah
   14004626f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140046273:	add    BYTE PTR [rax],ah
   140046275:	add    BYTE PTR [rbx+0x0],ah
   140046278:	outs   dx,DWORD PTR ds:[rsi]
   140046279:	add    BYTE PTR [rsi+0x0],ch
   14004627c:	je     0x14004627e
   14004627e:	imul   eax,DWORD PTR [rax],0x75006e
   140046284:	add    BYTE PTR gs:[rcx],ch
	...
   14004628f:	add    BYTE PTR [rip+0x64003400],ah        # 0x1a4049695
   140046295:	add    BYTE PTR [rax],al
   140046297:	add    BYTE PTR [rip+0x6434],ah        # 0x14004c6d1
   14004629d:	add    BYTE PTR [rax],al
   14004629f:	add    al,dl
   1400462a1:	mov    dh,0x4
   1400462a3:	rex add DWORD PTR [rax],eax
   1400462a6:	add    BYTE PTR [rax],al
   1400462a8:	and    al,0x6c
   1400462aa:	add    al,BYTE PTR [rax+0x1]
   1400462ad:	add    BYTE PTR [rax],al
   1400462af:	add    BYTE PTR [rsp+rbp*2],ah
   1400462b2:	add    al,BYTE PTR [rax+0x1]
   1400462b5:	add    BYTE PTR [rax],al
   1400462b7:	add    BYTE PTR [rax+0x1400113],bl
   1400462bd:	add    BYTE PTR [rax],al
   1400462bf:	add    BYTE PTR [rbx+rdx*1+0x14001],dl
   1400462c6:	add    BYTE PTR [rax],al
   1400462c8:	xchg   esp,eax
   1400462c9:	adc    eax,DWORD PTR [rcx]
   1400462cb:	rex add DWORD PTR [rax],eax
   1400462ce:	add    BYTE PTR [rax],al
   1400462d0:	mov    dil,0x4
   1400462d3:	rex add DWORD PTR [rax],eax
   1400462d6:	add    BYTE PTR [rax],al
   1400462d8:	loopne 0x1400462ed
   1400462da:	add    DWORD PTR [rax+0x1],eax
   1400462dd:	add    BYTE PTR [rax],al
   1400462df:	add    BYTE PTR [rsp+rdx*1+0x14001],dl
   1400462e6:	add    BYTE PTR [rax],al
   1400462e8:	movabs al,ds:0x9400000001400116
   1400462f1:	adc    eax,DWORD PTR [rcx]
   1400462f3:	rex add DWORD PTR [rax],eax
   1400462f6:	add    BYTE PTR [rax],al
   1400462f8:	movabs al,ds:0x4d00000001400115
   140046301:	outs   dx,DWORD PTR ds:[rsi]
   140046302:	fs jne 0x140046371
   140046305:	xor    esi,DWORD PTR gs:[rdx]
   140046308:	rex.RX imul r14d,DWORD PTR [rdx+0x73],0x5774
   140046310:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140046312:	fs jne 0x140046381
   140046315:	xor    esi,DWORD PTR gs:[rdx]
   140046318:	rex.WRX
   140046319:	gs js  0x140046390
   14004631c:	push   rdi
   14004631d:	add    BYTE PTR [rax],al
   14004631f:	add    BYTE PTR [rbx+0x72],al
   140046322:	gs (bad) 
   140046324:	je     0x14004638b
   140046326:	push   rsp
   140046327:	outs   dx,DWORD PTR ds:[rsi]
   140046328:	outs   dx,DWORD PTR ds:[rsi]
   140046329:	ins    BYTE PTR es:[rdi],dx
   14004632a:	push   0x33706c65
   14004632f:	xor    dl,BYTE PTR [rbx+0x6e]
   140046332:	(bad)  
   140046333:	jo     0x1400463a8
   140046335:	push   0x746f
   14004633a:	add    BYTE PTR [rax],al
   14004633c:	add    BYTE PTR [rax],al
   14004633e:	add    BYTE PTR [rax],al
   140046340:	push   rax
   140046341:	jb     0x1400463b2
   140046343:	movsxd esp,DWORD PTR [rbp+0x73]
   140046346:	jae    0x14004637b
   140046348:	xor    al,BYTE PTR [rsi+0x69]
   14004634b:	jb     0x1400463c0
   14004634d:	je     0x1400463a6
   14004634f:	add    BYTE PTR [rax+0x72],dl
   140046352:	outs   dx,DWORD PTR ds:[rsi]
   140046353:	movsxd esp,DWORD PTR [rbp+0x73]
   140046356:	jae    0x14004638b
   140046358:	xor    cl,BYTE PTR [rsi+0x65]
   14004635b:	js     0x1400463d1
   14004635d:	push   rdi
   14004635e:	add    BYTE PTR [rax],al
   140046360:	rex.B
   140046361:	rex.R push rsi
   140046363:	push   r8
   140046365:	xor    rsi,QWORD PTR [r10]
   140046368:	cs rex.R
   14004636a:	rex.WR
   14004636b:	rex.WR add BYTE PTR [rax],r8b
   14004636e:	add    BYTE PTR [rax],al
   140046370:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140046372:	outs   dx,BYTE PTR ds:[rsi]
   140046373:	jbe    0x1400463da
   140046375:	jb     0x1400463eb
   140046377:	push   rbx
   140046378:	imul   esp,DWORD PTR [rsp+rdx*2+0x6f],0x69727453
   140046380:	outs   dx,BYTE PTR ds:[rsi]
   140046381:	addr32 push rbx
   140046383:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x6e6f4300
   14004638b:	jbe    0x1400463f2
   14004638d:	jb     0x140046403
   14004638f:	push   rbx
   140046390:	je     0x140046404
   140046392:	imul   ebp,DWORD PTR [rsi+0x67],0x54646953
   140046399:	outs   dx,DWORD PTR ds:[rsi]
   14004639a:	push   rbx
   14004639b:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x4b76800
   1400463a3:	rex add DWORD PTR [rax],eax
   1400463a6:	add    BYTE PTR [rax],al
   1400463a8:	(bad)  
   1400463a9:	and    eax,DWORD PTR [rcx]
   1400463ab:	rex add DWORD PTR [rax],eax
   1400463ae:	add    BYTE PTR [rax],al
   1400463b0:	imul   esp,DWORD PTR [rbp+0x72],0x6e
   1400463b4:	gs ins BYTE PTR es:[rdi],dx
   1400463b6:	xor    esi,DWORD PTR [rdx]
   1400463b8:	cs fs ins BYTE PTR es:[rdi],dx
   1400463bb:	ins    BYTE PTR es:[rdi],dx
   1400463bc:	add    BYTE PTR [rax],al
   1400463be:	add    BYTE PTR [rax],al
   1400463c0:	push   rsi
   1400463c1:	gs jb  0x14004642d
   1400463c4:	data16 jns 0x14004641d
   1400463c7:	gs jb  0x14004643d
   1400463ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
   1400463d1:	add    BYTE PTR [r8],al
   1400463d4:	add    BYTE PTR [rax],al
   1400463d6:	add    BYTE PTR [rax],al
   1400463d8:	push   rsi
   1400463d9:	gs jb  0x14004642f
   1400463dc:	gs je  0x140046422
   1400463df:	outs   dx,DWORD PTR ds:[rsi]
   1400463e0:	outs   dx,BYTE PTR ds:[rsi]
   1400463e1:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x73614d6e
   1400463ea:	imul   eax,DWORD PTR [rax],0x0
   1400463ed:	add    BYTE PTR [rax],al
   1400463ef:	add    BYTE PTR [rbp+0x0],ch
   1400463f2:	jae    0x1400463f4
   1400463f4:	movsxd eax,DWORD PTR [rax]
   1400463f6:	outs   dx,DWORD PTR ds:[rsi]
   1400463f7:	add    BYTE PTR [rdx+0x0],dh
   1400463fa:	add    BYTE PTR gs:[rbp+0x0],ah
   1400463fe:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140046403:	add    BYTE PTR [rax+rax*1+0x0],ch
   140046407:	add    BYTE PTR [rbx+0x4c],al
   14004640a:	push   rdx
   14004640b:	rex.XB jb 0x140046473
   14004640e:	(bad)  
   14004640f:	je     0x140046476
   140046411:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140046413:	jae    0x140046489
   140046415:	(bad)  
   140046416:	outs   dx,BYTE PTR ds:[rsi]
   140046417:	movsxd esp,DWORD PTR [rbp+0x0]
   14004641a:	add    BYTE PTR [rax],al
   14004641c:	add    BYTE PTR [rax],al
   14004641e:	add    BYTE PTR [rax],al
   140046420:	rex.WB jae 0x14004647a
   140046423:	outs   dx,DWORD PTR ds:[rsi]
   140046424:	ja     0x14004645c
   140046426:	xor    al,0x50
   140046428:	jb     0x140046499
   14004642a:	movsxd esp,DWORD PTR [rbp+0x73]
   14004642d:	jae    0x14004642f
   14004642f:	add    BYTE PTR [rbx+0x65],ch
   140046432:	jb     0x1400464a2
   140046434:	gs ins BYTE PTR es:[rdi],dx
   140046436:	xor    esi,DWORD PTR [rdx]
	...
   140046440:	rex.RXB
   140046441:	gs je  0x140046492
   140046444:	(bad)  
   140046445:	je     0x1400464b0
   140046447:	jbe    0x1400464ae
   140046449:	push   rbx
   14004644a:	jns    0x1400464bf
   14004644c:	je     0x1400464b3
   14004644e:	ins    DWORD PTR es:[rdi],dx
   14004644f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140046451:	outs   dx,WORD PTR ds:[rsi]
   140046453:	add    BYTE PTR [rax],al
   140046455:	add    BYTE PTR [rax],al
   140046457:	add    BYTE PTR [rip+0x3d007300],ah        # 0x17d04d75d
   14004645d:	add    BYTE PTR [rip+0x7300],ah        # 0x14004d763
   140046463:	add    BYTE PTR [rax],al
   140046465:	add    BYTE PTR [rax],al
   140046467:	add    al,dh
   140046469:	mov    bh,0x4
   14004646b:	rex add DWORD PTR [rax],eax
   14004646e:	add    BYTE PTR [rax],al
   140046470:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046471:	add    DWORD PTR cs:[rax+0x1],eax
	...
   14004647d:	add    BYTE PTR [rax],al
   14004647f:	add    BYTE PTR [rax-0x48],bl
   140046482:	add    al,0x40
   140046484:	add    DWORD PTR [rax],eax
   140046486:	add    BYTE PTR [rax],al
   140046488:	cmp    BYTE PTR [rax+0x1],al
   14004648b:	rex add DWORD PTR [rax],eax
   14004648e:	add    BYTE PTR [rax],al
   140046490:	lods   al,BYTE PTR ds:[rsi]
   140046491:	rex add DWORD PTR [rax+0x1],eax
   140046495:	add    BYTE PTR [rax],al
   140046497:	add    BYTE PTR [rsp+rbp*2],ah
   14004649a:	add    al,BYTE PTR [rax+0x1]
   14004649d:	add    BYTE PTR [rax],al
   14004649f:	add    BYTE PTR [rsp+rbp*2],ah
   1400464a2:	add    al,BYTE PTR [rax+0x1]
   1400464a5:	add    BYTE PTR [rax],al
   1400464a7:	add    BYTE PTR [rsp+rbp*2],ah
   1400464aa:	add    al,BYTE PTR [rax+0x1]
   1400464ad:	add    BYTE PTR [rax],al
   1400464af:	add    BYTE PTR [rsp+rbp*2],ah
   1400464b2:	add    al,BYTE PTR [rax+0x1]
   1400464b5:	add    BYTE PTR [rax],al
   1400464b7:	add    BYTE PTR [rax],al
   1400464b9:	adc    BYTE PTR [rax],al
   1400464bb:	rex add DWORD PTR [rax],eax
   1400464be:	add    BYTE PTR [rax],al
   1400464c0:	xor    BYTE PTR [rax+0x1],al
   1400464c3:	rex add DWORD PTR [rax],eax
   1400464c6:	add    BYTE PTR [rax],al
   1400464c8:	add    BYTE PTR [rax],dl
   1400464ca:	add    BYTE PTR [rax+0x1],al
   1400464cd:	add    BYTE PTR [rax],al
   1400464cf:	add    BYTE PTR [rax],ah
   1400464d1:	add    BYTE PTR [rax],al
   1400464d3:	add    BYTE PTR [rip+0x7800],ah        # 0x14004dcd9
   1400464d9:	add    BYTE PTR [rax],al
   1400464db:	add    BYTE PTR [rax],al
   1400464dd:	add    BYTE PTR [rax],al
   1400464df:	add    BYTE PTR [rdi+0x6c],al
   1400464e2:	outs   dx,DWORD PTR ds:[rsi]
   1400464e3:	(bad)
   1400464e8:	cmp    BYTE PTR [rax+0x14004],0x0
   1400464ef:	add    ah,cl
   1400464f1:	rex.WRXB add QWORD PTR [r8+0x1],r8
   1400464f5:	add    BYTE PTR [rax],al
   1400464f7:	add    BYTE PTR [rax+0x55],bl
   1400464fa:	add    DWORD PTR [rax+0x1],eax
   1400464fd:	add    BYTE PTR [rax],al
   1400464ff:	add    al,ch
   140046501:	mov    eax,0x14004
   140046506:	add    BYTE PTR [rax],al
   140046508:	fs (bad) 
   14004650a:	add    DWORD PTR [rax+0x1],eax
   14004650d:	add    BYTE PTR [rax],al
   14004650f:	add    BYTE PTR [rdi+rax*1+0x1],bh
   140046513:	rex add DWORD PTR [rax],eax
   140046516:	add    BYTE PTR [rax],al
   140046518:	(bad)  
   140046519:	push   rbp
   14004651a:	add    DWORD PTR [rax+0x1],eax
   14004651d:	add    BYTE PTR [rax],al
   14004651f:	add    BYTE PTR [rax+0x14004b9],dh
   140046525:	add    BYTE PTR [rax],al
   140046527:	add    BYTE PTR [rdi+rax*1+0x1],ah
   14004652b:	rex add DWORD PTR [rax],eax
   14004652e:	add    BYTE PTR [rax],al
   140046530:	jl     0x140046539
   140046532:	add    DWORD PTR [rax+0x1],eax
   140046535:	add    BYTE PTR [rax],al
   140046537:	add    BYTE PTR [rdi+rdx*2+0x1],al
   14004653b:	rex add DWORD PTR [rax],eax
   14004653e:	add    BYTE PTR [rax],al
   140046540:	push   rbp
   140046541:	rex.WB add BYTE PTR [r8],al
   140046544:	add    BYTE PTR [rax],al
   140046546:	add    BYTE PTR [rax],al
   140046548:	and    eax,0x2e342573
   14004654d:	xor    al,0x64
   14004654f:	add    BYTE PTR [rsp+rbp*2+0x6c],ah
   140046553:	add    BYTE PTR [rax],al
   140046555:	add    BYTE PTR [rax],al
   140046557:	add    BYTE PTR [rax+0x41],cl
   14004655a:	push   rdx
   14004655b:	rex.R push rdi
   14004655d:	push   r10
   14004655f:	rex.RB pop r12
   140046561:	rex.R
   140046562:	rex.RB push r11
   140046564:	rex.XB push r10
   140046566:	rex.WB push r8
   140046568:	push   rsp
   140046569:	rex.WB
   14004656a:	rex.WRXB
   14004656b:	rex.WRX pop rsp
   14004656d:	push   rbx
   14004656e:	jns    0x1400465e3
   140046570:	je     0x1400465d7
   140046572:	ins    DWORD PTR es:[rdi],dx
   140046573:	pop    rsp
   140046574:	rex.XB
   140046575:	outs   dx,BYTE PTR gs:[rsi]
   140046577:	je     0x1400465eb
   140046579:	(bad)  
   14004657a:	ins    BYTE PTR es:[rdi],dx
   14004657b:	push   rax
   14004657c:	jb     0x1400465ed
   14004657e:	movsxd esp,DWORD PTR [rbp+0x73]
   140046581:	jae    0x1400465f2
   140046583:	jb     0x1400465e1
   140046585:	xor    BYTE PTR [rax],al
   140046587:	add    BYTE PTR [rsi+0x4d],bh
   14004658a:	rex.W jp 0x14004658d
   14004658d:	add    BYTE PTR [rax],al
   14004658f:	add    BYTE PTR [rsi+0x4d],bh
   140046592:	push   0x7a
   140046597:	add    BYTE PTR [rsi+0x6d],bh
   14004659a:	push   0x7a
   14004659f:	add    BYTE PTR [rbp+0x0],dl
   1400465a2:	outs   dx,BYTE PTR ds:[rsi]
   1400465a3:	add    BYTE PTR [rbx+0x0],ch
   1400465a6:	outs   dx,BYTE PTR ds:[rsi]
   1400465a7:	add    BYTE PTR [rdi+0x0],ch
   1400465aa:	ja     0x1400465ac
   1400465ac:	outs   dx,BYTE PTR ds:[rsi]
   1400465ad:	add    BYTE PTR [rax],al
   1400465af:	add    BYTE PTR [rax+0x0],dl
   1400465b2:	xor    al,0x0
   1400465b4:	add    BYTE PTR [rax],al
   1400465b6:	add    BYTE PTR [rax],al
   1400465b8:	push   rax
   1400465b9:	add    BYTE PTR [rsi],dh
   1400465bb:	add    BYTE PTR [rax],al
   1400465bd:	add    BYTE PTR [rax],al
   1400465bf:	add    BYTE PTR [rbx+0x0],cl
   1400465c2:	(bad)  
   1400465c3:	add    BYTE PTR [rax],al
   1400465c5:	add    BYTE PTR [rax],al
   1400465c7:	add    BYTE PTR [rbx+0x0],cl
   1400465ca:	cmp    BYTE PTR [rax],al
   1400465cc:	add    BYTE PTR [rax],al
   1400465ce:	add    BYTE PTR [rax],al
   1400465d0:	push   rsi
   1400465d1:	add    BYTE PTR [rbx+0x0],dl
   1400465d4:	push   rax
   1400465d5:	add    BYTE PTR [rbp+0x0],ah
   1400465d8:	jb     0x1400465da
   1400465da:	data16 add BYTE PTR [rdi+0x0],bl
   1400465de:	push   rax
   1400465df:	add    BYTE PTR [rdi+0x0],ch
   1400465e2:	jb     0x1400465e4
   1400465e4:	je     0x1400465e6
   1400465e6:	(bad)  
   1400465e7:	add    BYTE PTR [rdx+0x0],ah
   1400465ea:	ins    BYTE PTR es:[rdi],dx
   1400465eb:	add    BYTE PTR [rbp+0x0],ah
   1400465ee:	add    BYTE PTR cs:[rax+0x0],bh
   1400465f2:	ins    DWORD PTR es:[rdi],dx
   1400465f3:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400465f7:	add    BYTE PTR [rsi],ch
   1400465f9:	js     0x140046668
   1400465fb:	ins    BYTE PTR es:[rdi],dx
   1400465fc:	add    BYTE PTR [rax],al
   1400465fe:	add    BYTE PTR [rax],al
   140046600:	pop    rdi
   140046601:	add    BYTE PTR [rax],al
   140046603:	add    BYTE PTR [rax],al
   140046605:	add    BYTE PTR [rax],al
   140046607:	add    BYTE PTR [rsi+0x0],dl
   14004660a:	push   rbx
   14004660b:	add    BYTE PTR [rax+0x0],dl
   14004660e:	add    BYTE PTR gs:[rdx+0x0],dh
   140046612:	data16 add BYTE PTR [rdi+0x0],bl
   140046616:	push   rax
   140046617:	add    BYTE PTR [rax+rax*1+0x61],ch
   14004661b:	add    BYTE PTR [rax+rax*1+0x66],dh
   14004661f:	add    BYTE PTR [rdi+0x0],ch
   140046622:	jb     0x140046624
   140046624:	ins    DWORD PTR es:[rdi],dx
   140046625:	add    BYTE PTR [rdi+0x0],bl
	...
   140046630:	pop    rdi
   140046631:	(bad)  
   140046632:	jb     0x140046697
   140046634:	push   0x6c6d782e
   140046639:	add    BYTE PTR [rax],al
   14004663b:	add    BYTE PTR [rax],al
   14004663d:	add    BYTE PTR [rax],al
   14004663f:	add    BYTE PTR [rax+0x14004ba],dl
   140046645:	add    BYTE PTR [rax],al
   140046647:	add    BYTE PTR [rsp+rbp*2],ch
   14004664a:	add    DWORD PTR [rax+0x1],eax
   14004664d:	add    BYTE PTR [rax],al
   14004664f:	add    BYTE PTR [rsp+rbp*2+0x1],dh
   140046653:	rex add DWORD PTR [rax],eax
   140046656:	add    BYTE PTR [rax],al
   140046658:	xor    BYTE PTR [rcx+rax*1+0x40],ch
   14004665c:	add    DWORD PTR [rax],eax
   14004665e:	add    BYTE PTR [rax],al
   140046660:	cmp    al,0x5e
   140046662:	add    DWORD PTR [rax+0x1],eax
   140046665:	add    BYTE PTR [rax],al
   140046667:	add    BYTE PTR [rdx+rbp*2],cl
   14004666a:	(bad)  [rax+0x11d4f192]
   140046670:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046671:	pop    rdi
   140046672:	add    BYTE PTR [rax-0x6a],al
   140046675:	xor    dl,BYTE PTR [rcx-0x1b]
   140046678:	shr    BYTE PTR [rsi-0x7],1
   14004667b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004667c:	sub    eax,edi
   14004667e:	outs   dx,BYTE PTR ds:[rsi]
   14004667f:	rex.RXB add r8d,0x2abdc7cd
   140046686:	or     BYTE PTR [rdx],al
   140046688:	sub    BYTE PTR [rdx+0x14004],bh
   14004668e:	add    BYTE PTR [rax],al
   140046690:	and    al,0x6c
   140046692:	add    al,BYTE PTR [rax+0x1]
   140046695:	add    BYTE PTR [rax],al
   140046697:	add    BYTE PTR [rsp+rbp*2],ah
   14004669a:	add    al,BYTE PTR [rax+0x1]
   14004669d:	add    BYTE PTR [rax],al
   14004669f:	add    BYTE PTR [rsp+rbp*2],ah
   1400466a2:	add    al,BYTE PTR [rax+0x1]
   1400466a5:	add    BYTE PTR [rax],al
   1400466a7:	add    BYTE PTR [rsi+rbx*2],dl
   1400466aa:	add    DWORD PTR [rax+0x1],eax
   1400466ad:	add    BYTE PTR [rax],al
   1400466af:	add    al,bl
   1400466b1:	mov    ebx,0x14004
   1400466b6:	add    BYTE PTR [rax],al
   1400466b8:	ins    BYTE PTR es:[rdi],dx
   1400466b9:	jb     0x1400466bc
   1400466bb:	rex add DWORD PTR [rax],eax
   1400466be:	add    BYTE PTR [rax],al
   1400466c0:	ins    BYTE PTR es:[rdi],dx
   1400466c1:	jb     0x1400466c4
   1400466c3:	rex add DWORD PTR [rax],eax
   1400466c6:	add    BYTE PTR [rax],al
   1400466c8:	ins    BYTE PTR es:[rdi],dx
   1400466c9:	jb     0x1400466cc
   1400466cb:	rex add DWORD PTR [rax],eax
   1400466ce:	add    BYTE PTR [rax],al
   1400466d0:	pop    rsp
   1400466d1:	jb     0x1400466d4
   1400466d3:	rex add DWORD PTR [rax],eax
   1400466d6:	add    BYTE PTR [rax],al
   1400466d8:	pop    rsp
   1400466d9:	jb     0x1400466dc
   1400466db:	rex add DWORD PTR [rax],eax
   1400466de:	add    BYTE PTR [rax],al
   1400466e0:	ins    BYTE PTR es:[rdi],dx
   1400466e1:	jb     0x1400466e4
   1400466e3:	rex add DWORD PTR [rax],eax
   1400466e6:	add    BYTE PTR [rax],al
   1400466e8:	and    BYTE PTR [rcx+0x1],dh
   1400466eb:	rex add DWORD PTR [rax],eax
   1400466ee:	add    BYTE PTR [rax],al
   1400466f0:	adc    al,0x71
   1400466f2:	add    DWORD PTR [rax+0x1],eax
   1400466f5:	add    BYTE PTR [rax],al
   1400466f7:	add    BYTE PTR [rbx+0x0],al
   1400466fa:	outs   dx,DWORD PTR ds:[rsi]
   1400466fb:	add    BYTE PTR [rbp+0x0],dh
   1400466fe:	outs   dx,BYTE PTR ds:[rsi]
   1400466ff:	add    BYTE PTR [rax+rax*1+0x65],dh
   140046703:	add    BYTE PTR [rdx+0x0],dh
   140046706:	add    BYTE PTR [rax],al
   140046708:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14004670c:	ins    DWORD PTR es:[rdi],dx
   14004670d:	add    BYTE PTR [rbp+0x0],ah
	...
   140046718:	rex.RX add BYTE PTR [rcx+0x0],r12b
   14004671c:	ins    DWORD PTR es:[rdi],dx
   14004671d:	add    BYTE PTR [rcx+0x0],ch
   140046720:	ins    BYTE PTR es:[rdi],dx
   140046721:	add    BYTE PTR [rcx+0x0],bh
   140046724:	add    BYTE PTR [rax],al
   140046726:	add    BYTE PTR [rax],al
   140046728:	pop    rdi
   140046729:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14004672d:	add    BYTE PTR [rbx+0x0],ah
   140046730:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140046735:	add    BYTE PTR [rax],al
   140046737:	add    BYTE PTR [rdi+0x0],bl
   14004673a:	ins    BYTE PTR es:[rdi],dx
   14004673b:	add    BYTE PTR [rdi+0x0],ch
   14004673e:	movsxd eax,DWORD PTR [rax]
   140046740:	add    BYTE PTR [r8+rax*1+0x74],sil
   140046745:	add    BYTE PTR [rdx+0x0],dh
   140046748:	add    BYTE PTR [rcx+0x0],r12b
   14004674c:	je     0x14004674e
   14004674e:	(bad)  
	...
   140046757:	add    BYTE PTR [rbx+0x0],al
   14004675a:	(bad)  
   14004675b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14004675f:	add    BYTE PTR [rdi+0x0],ah
   140046762:	outs   dx,DWORD PTR ds:[rsi]
   140046763:	add    BYTE PTR [rdx+0x0],dh
   140046766:	jns    0x140046768
	...
   140046770:	add    BYTE PTR [rcx+0x0],r13b
   140046774:	jae    0x140046776
   140046776:	jo     0x140046778
   140046778:	ins    BYTE PTR es:[rdi],dx
   140046779:	add    BYTE PTR [rcx+0x0],ah
   14004677c:	jns    0x14004677e
   14004677e:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140046782:	ins    DWORD PTR es:[rdi],dx
   140046783:	add    BYTE PTR [rbp+0x0],ah
   140046786:	add    BYTE PTR [rax],al
   140046788:	add    BYTE PTR [rbp+0x0],r12b
   14004678c:	jae    0x14004678e
   14004678e:	movsxd eax,DWORD PTR [rax]
   140046790:	jb     0x140046792
   140046792:	imul   eax,DWORD PTR [rax],0x740070
   140046798:	imul   eax,DWORD PTR [rax],0x6e006f
   14004679e:	add    BYTE PTR [rax],al
   1400467a0:	push   rdx
   1400467a1:	add    BYTE PTR [rbp+0x0],ah
   1400467a4:	ins    BYTE PTR es:[rdi],dx
   1400467a5:	add    BYTE PTR [rdi+0x0],ch
   1400467a8:	(bad)  
   1400467a9:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400467ad:	add    BYTE PTR [rax],al
   1400467af:	add    BYTE PTR [rbx+0x0],al
   1400467b2:	rex.XB add BYTE PTR [r11+0x0],al
   1400467b6:	push   rdx
	...
   1400467bf:	add    BYTE PTR [rbp+0x0],al
   1400467c2:	push   rbx
   1400467c3:	add    BYTE PTR [rbx+0x0],al
   1400467c6:	push   rdx
	...
   1400467cf:	add    BYTE PTR [rdi+0x0],al
   1400467d2:	jb     0x1400467d4
   1400467d4:	outs   dx,DWORD PTR ds:[rsi]
   1400467d5:	add    BYTE PTR [rbp+0x0],dh
   1400467d8:	jo     0x1400467da
   1400467da:	add    BYTE PTR [rax],al
   1400467dc:	add    BYTE PTR [rax],al
   1400467de:	add    BYTE PTR [rax],al
   1400467e0:	rex.X add BYTE PTR [rax+0x0],dl
   1400467e4:	push   rbp
   1400467e5:	add    BYTE PTR [rax],al
   1400467e7:	add    BYTE PTR [rsi+0x0],al
   1400467ea:	rex.WR add BYTE PTR [rcx+0x0],r8b
   1400467ee:	rex.WRB add BYTE PTR [r13+0x0],r8b
   1400467f2:	add    BYTE PTR [rax],al
   1400467f4:	rex.WB add BYTE PTR [r9+0x0],dl
   1400467f8:	add    BYTE PTR [rax],al
   1400467fa:	add    BYTE PTR [rax],al
   1400467fc:	rex.WRB add BYTE PTR [r11+0x0],r10b
	...
   140046808:	push   rax
   140046809:	add    BYTE PTR [rbp+0x0],ah
   14004680c:	jb     0x14004680e
   14004680e:	data16 add BYTE PTR [rbp+0x0],al
   140046812:	jbe    0x140046814
   140046814:	je     0x140046816
   140046816:	push   rbx
   140046817:	add    BYTE PTR [rbp+0x0],ah
   14004681a:	ins    BYTE PTR es:[rdi],dx
   14004681b:	add    BYTE PTR [rax],al
   14004681d:	add    BYTE PTR [rax],al
   14004681f:	add    BYTE PTR [rax-0x44],ah
   140046822:	add    al,0x40
   140046824:	add    DWORD PTR [rax],eax
   140046826:	add    BYTE PTR [rax],al
   140046828:	ins    BYTE PTR es:[rdi],dx
   140046829:	jb     0x14004682c
   14004682b:	rex add DWORD PTR [rax],eax
   14004682e:	add    BYTE PTR [rax],al
   140046830:	ins    BYTE PTR es:[rdi],dx
   140046831:	jb     0x140046834
   140046833:	rex add DWORD PTR [rax],eax
   140046836:	add    BYTE PTR [rax],al
   140046838:	ins    BYTE PTR es:[rdi],dx
   140046839:	jb     0x14004683c
   14004683b:	rex add DWORD PTR [rax],eax
   14004683e:	add    BYTE PTR [rax],al
   140046840:	ins    BYTE PTR es:[rdi],dx
   140046841:	jb     0x140046844
   140046843:	rex add DWORD PTR [rax],eax
   140046846:	add    BYTE PTR [rax],al
   140046848:	lock jae 0x14004684c
   14004684b:	rex add DWORD PTR [rax],eax
   14004684e:	add    BYTE PTR [rax],al
   140046850:	ins    BYTE PTR es:[rdi],dx
   140046851:	jb     0x140046854
   140046853:	rex add DWORD PTR [rax],eax
   140046856:	add    BYTE PTR [rax],al
   140046858:	ins    BYTE PTR es:[rdi],dx
   140046859:	jb     0x14004685c
   14004685b:	rex add DWORD PTR [rax],eax
   14004685e:	add    BYTE PTR [rax],al
   140046860:	ins    BYTE PTR es:[rdi],dx
   140046861:	jb     0x140046864
   140046863:	rex add DWORD PTR [rax],eax
   140046866:	add    BYTE PTR [rax],al
   140046868:	test   al,0x7c
   14004686a:	add    DWORD PTR [rax+0x1],eax
   14004686d:	add    BYTE PTR [rax],al
   14004686f:	add    BYTE PTR [rdx+rsi*2+0x1],ch
   140046873:	rex add DWORD PTR [rax],eax
   140046876:	add    BYTE PTR [rax],al
   140046878:	ins    BYTE PTR es:[rdi],dx
   140046879:	jb     0x14004687c
   14004687b:	rex add DWORD PTR [rax],eax
   14004687e:	add    BYTE PTR [rax],al
   140046880:	ins    BYTE PTR es:[rdi],dx
   140046881:	jb     0x140046884
   140046883:	rex add DWORD PTR [rax],eax
   140046886:	add    BYTE PTR [rax],al
   140046888:	ins    BYTE PTR es:[rdi],dx
   140046889:	jb     0x14004688c
   14004688b:	rex add DWORD PTR [rax],eax
   14004688e:	add    BYTE PTR [rax],al
   140046890:	ins    BYTE PTR es:[rdi],dx
   140046891:	jb     0x140046894
   140046893:	rex add DWORD PTR [rax],eax
   140046896:	add    BYTE PTR [rax],al
   140046898:	fs jae 0x14004689c
   14004689b:	rex add DWORD PTR [rax],eax
   14004689e:	add    BYTE PTR [rax],al
   1400468a0:	jo     0x140046914
   1400468a2:	add    DWORD PTR [rax+0x1],eax
   1400468a5:	add    BYTE PTR [rax],al
   1400468a7:	add    BYTE PTR [rdx+rsi*2+0x1],bh
   1400468ab:	rex add DWORD PTR [rax],eax
   1400468ae:	add    BYTE PTR [rax],al
   1400468b0:	cmp    BYTE PTR [rbp+0x14004],0x0
   1400468b7:	add    BYTE PTR [rdx+rsi*2+0x1],ch
   1400468bb:	rex add DWORD PTR [rax],eax
   1400468be:	add    BYTE PTR [rax],al
   1400468c0:	ins    BYTE PTR es:[rdi],dx
   1400468c1:	jb     0x1400468c4
   1400468c3:	rex add DWORD PTR [rax],eax
   1400468c6:	add    BYTE PTR [rax],al
   1400468c8:	ins    BYTE PTR es:[rdi],dx
   1400468c9:	jb     0x1400468cc
   1400468cb:	rex add DWORD PTR [rax],eax
   1400468ce:	add    BYTE PTR [rax],al
   1400468d0:	ins    BYTE PTR es:[rdi],dx
   1400468d1:	jb     0x1400468d4
   1400468d3:	rex add DWORD PTR [rax],eax
   1400468d6:	add    BYTE PTR [rax],al
   1400468d8:	ins    BYTE PTR es:[rdi],dx
   1400468d9:	jb     0x1400468dc
   1400468db:	rex add DWORD PTR [rax],eax
   1400468de:	add    BYTE PTR [rax],al
   1400468e0:	ins    BYTE PTR es:[rdi],dx
   1400468e1:	jb     0x1400468e4
   1400468e3:	rex add DWORD PTR [rax],eax
   1400468e6:	add    BYTE PTR [rax],al
   1400468e8:	ins    BYTE PTR es:[rdi],dx
   1400468e9:	jb     0x1400468ec
   1400468eb:	rex add DWORD PTR [rax],eax
   1400468ee:	add    BYTE PTR [rax],al
   1400468f0:	ins    BYTE PTR es:[rdi],dx
   1400468f1:	jb     0x1400468f4
   1400468f3:	rex add DWORD PTR [rax],eax
   1400468f6:	add    BYTE PTR [rax],al
   1400468f8:	ins    BYTE PTR es:[rdi],dx
   1400468f9:	jb     0x1400468fc
   1400468fb:	rex add DWORD PTR [rax],eax
   1400468fe:	add    BYTE PTR [rax],al
   140046900:	ins    BYTE PTR es:[rdi],dx
   140046901:	jb     0x140046904
   140046903:	rex add DWORD PTR [rax],eax
   140046906:	add    BYTE PTR [rax],al
   140046908:	ins    BYTE PTR es:[rdi],dx
   140046909:	jb     0x14004690c
   14004690b:	rex add DWORD PTR [rax],eax
   14004690e:	add    BYTE PTR [rax],al
   140046910:	ins    BYTE PTR es:[rdi],dx
   140046911:	jb     0x140046914
   140046913:	rex add DWORD PTR [rax],eax
   140046916:	add    BYTE PTR [rax],al
   140046918:	ins    BYTE PTR es:[rdi],dx
   140046919:	jb     0x14004691c
   14004691b:	rex add DWORD PTR [rax],eax
   14004691e:	add    BYTE PTR [rax],al
   140046920:	ins    BYTE PTR es:[rdi],dx
   140046921:	jb     0x140046924
   140046923:	rex add DWORD PTR [rax],eax
   140046926:	add    BYTE PTR [rax],al
   140046928:	push   rax
   140046929:	jge    0x14004692c
   14004692b:	rex add DWORD PTR [rax],eax
   14004692e:	add    BYTE PTR [rax],al
   140046930:	add    BYTE PTR [rcx+0x0],r13b
   140046934:	jae    0x140046936
   140046936:	imul   eax,DWORD PTR [rax],0x0
   140046939:	add    BYTE PTR [rax],al
   14004693b:	add    BYTE PTR [rax],al
   14004693d:	add    BYTE PTR [rax],al
   14004693f:	add    BYTE PTR [rsi+0x0],al
   140046942:	imul   eax,DWORD PTR [rax],0x65006c
	...
   140046950:	rex.WB add BYTE PTR [r13+0x0],bpl
   140046954:	(bad)  
   140046955:	add    BYTE PTR [rdi+0x0],ah
   140046958:	add    BYTE PTR gs:[rax],al
   14004695b:	add    BYTE PTR [rax],al
   14004695d:	add    BYTE PTR [rax],al
   14004695f:	add    BYTE PTR [rax+0x0],cl
   140046962:	(bad)  
   140046963:	add    BYTE PTR [rdx+0x0],dh
   140046966:	add    BYTE PTR fs:[rsi+0x0],ah
   14004696a:	(bad)  
   14004696b:	add    BYTE PTR [rbp+0x0],dh
   14004696e:	ins    BYTE PTR es:[rdi],dx
   14004696f:	add    BYTE PTR [rax+rax*1+0x0],dh
   140046973:	add    BYTE PTR [rax],al
   140046975:	add    BYTE PTR [rax],al
   140046977:	add    BYTE PTR [rax+0x0],dl
   14004697a:	(bad)  
   14004697b:	add    BYTE PTR [rdi+0x0],ah
   14004697e:	add    BYTE PTR gs:[rsi+0x0],ah
   140046982:	(bad)  
   140046983:	add    BYTE PTR [rbp+0x0],dh
   140046986:	ins    BYTE PTR es:[rdi],dx
   140046987:	add    BYTE PTR [rax+rax*1+0x0],dh
   14004698b:	add    BYTE PTR [rax],al
   14004698d:	add    BYTE PTR [rax],al
   14004698f:	add    BYTE PTR [rsi+0x0],cl
   140046992:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   140046997:	add    BYTE PTR [rdi+0x0],ch
   14004699a:	jb     0x14004699c
   14004699c:	imul   eax,DWORD PTR [rax],0x0
   14004699f:	add    BYTE PTR [rax+0x0],dl
   1400469a2:	jb     0x1400469a4
   1400469a4:	outs   dx,DWORD PTR ds:[rsi]
   1400469a5:	add    BYTE PTR [rbx+0x0],ah
   1400469a8:	add    BYTE PTR gs:[rbx+0x0],dh
   1400469ac:	jae    0x1400469ae
   1400469ae:	add    BYTE PTR [rax],al
   1400469b0:	push   rdx
   1400469b1:	add    BYTE PTR [rbp+0x0],ah
   1400469b4:	add    BYTE PTR [ecx+0x0],ch
   1400469b8:	jae    0x1400469ba
   1400469ba:	je     0x1400469bc
   1400469bc:	jb     0x1400469be
   1400469be:	jns    0x1400469c0
	...
   1400469c8:	push   rsp
   1400469c9:	add    BYTE PTR [rax+0x0],ch
   1400469cc:	jb     0x1400469ce
   1400469ce:	add    BYTE PTR gs:[rcx+0x0],ah
   1400469d2:	add    BYTE PTR fs:[rax],al
   1400469d5:	add    BYTE PTR [rax],al
   1400469d7:	add    BYTE PTR [rax+rax*1+0x65],al
   1400469db:	add    BYTE PTR [rdx+0x0],ah
   1400469de:	jne    0x1400469e0
   1400469e0:	add    BYTE PTR [eax],al
   1400469e3:	add    BYTE PTR [rbx+0x0],bh
   1400469e6:	add    BYTE PTR [rax],al
   1400469e8:	jge    0x1400469ea
   1400469ea:	add    BYTE PTR [rax],al
   1400469ec:	xor    BYTE PTR [rax],al
   1400469ee:	js     0x1400469f0
	...
   1400469f8:	jb     0x1400469fa
   1400469fa:	outs   dx,DWORD PTR ds:[rsi]
   1400469fb:	add    BYTE PTR [rdi+0x0],ch
   1400469fe:	je     0x140046a00
   140046a00:	pop    rsp
   140046a01:	add    BYTE PTR [rdi+0x0],dh
   140046a04:	ins    DWORD PTR es:[rdi],dx
   140046a05:	add    BYTE PTR [rcx+0x0],ch
	...
   140046a10:	rex.WRX add BYTE PTR [rax+r8*1+0x20],r10b
   140046a15:	add    BYTE PTR [rbx+0x0],cl
   140046a18:	add    BYTE PTR gs:[rdx+0x0],dh
   140046a1c:	outs   dx,BYTE PTR ds:[rsi]
   140046a1d:	add    BYTE PTR [rbp+0x0],ah
   140046a20:	ins    BYTE PTR es:[rdi],dx
   140046a21:	add    BYTE PTR [rax],ah
   140046a23:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140046a27:	add    BYTE PTR [rdi+0x0],ah
   140046a2a:	add    BYTE PTR [ebp+0x0],ah
   140046a2e:	jb     0x140046a30
	...
   140046a38:	rex.RXB add BYTE PTR [r13+0x0],r14b
   140046a3c:	imul   eax,DWORD PTR [rax],0x64
   140046a42:	add    BYTE PTR [rax],al
   140046a44:	add    BYTE PTR [rax],al
   140046a46:	add    BYTE PTR [rax],al
   140046a48:	add    BYTE PTR [r14+0x0],r14b
   140046a4c:	add    BYTE PTR gs:[rsi+0x0],ch
   140046a50:	je     0x140046a52
   140046a52:	push   rsp
   140046a53:	add    BYTE PTR [rdx+0x0],dh
   140046a56:	(bad)  
   140046a57:	add    BYTE PTR [rbx+0x0],ah
   140046a5a:	add    BYTE PTR gs:[rax],al
   140046a5d:	add    BYTE PTR [rax],al
   140046a5f:	add    BYTE PTR [rax+0x72],dl
   140046a62:	outs   dx,DWORD PTR ds:[rsi]
   140046a63:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x7361
   140046a6a:	push   rbx
   140046a6b:	je     0x140046ace
   140046a6d:	jb     0x140046ae3
   140046a6f:	gs add BYTE PTR fs:[rax],al
   140046a73:	add    BYTE PTR [rax],al
   140046a75:	add    BYTE PTR [rax],al
   140046a77:	add    BYTE PTR [rax+0x69],dl
   140046a7a:	jo     0x140046ae1
   140046a7c:	push   rbx
   140046a7d:	imul   esp,DWORD PTR [rdi+0x6e],0x6c436c61
   140046a84:	imul   esp,DWORD PTR [rbp+0x6e],0x74
   140046a8b:	add    BYTE PTR [rax],al
   140046a8d:	add    BYTE PTR [rax],al
   140046a8f:	add    BYTE PTR [rax+0x72],dl
   140046a92:	outs   dx,DWORD PTR ds:[rsi]
   140046a93:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x7361
   140046a9a:	push   rbx
   140046a9b:	je     0x140046afe
   140046a9d:	jb     0x140046b13
   140046a9f:	gs fs rex.WRXB jne 0x140046b18
   140046aa4:	jo     0x140046b1b
   140046aa6:	je     0x140046aee
   140046aa8:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x0
   140046ab0:	push   rdx
   140046ab1:	gs imul esi,DWORD PTR fs:[rdx+0x65],0x6f437463
   140046aba:	ins    DWORD PTR es:[rdi],dx
   140046abb:	jo     0x140046b29
   140046abd:	gs je  0x140046b25
	...
   140046ac8:	push   rax
   140046ac9:	imul   esi,DWORD PTR [rax+0x65],0x6e676953
   140046ad0:	(bad)  
   140046ad1:	ins    BYTE PTR es:[rdi],dx
   140046ad2:	push   rbx
   140046ad3:	gs jb  0x140046b4c
   140046ad6:	gs jb  0x140046ad9
   140046ad9:	add    BYTE PTR [rax],al
   140046adb:	add    BYTE PTR [rax],al
   140046add:	add    BYTE PTR [rax],al
   140046adf:	add    BYTE PTR [rdi+rbp*2+0x67],cl
   140046ae3:	addr32 gs jb 0x140046b30
   140046ae7:	outs   dx,BYTE PTR ds:[rsi]
   140046ae8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140046af0:	add    BYTE PTR fs:[rax],al
   140046af3:	add    BYTE PTR [rax],al
   140046af5:	add    BYTE PTR [rax],al
   140046af7:	add    BYTE PTR [rbx+0x6c],al
   140046afa:	outs   dx,DWORD PTR ds:[rsi]
   140046afb:	jae    0x140046b62
   140046afd:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140046aff:	ins    DWORD PTR es:[rdi],dx
   140046b00:	jo     0x140046b6e
   140046b02:	gs je  0x140046b6a
   140046b05:	add    BYTE PTR [rax],al
   140046b07:	add    BYTE PTR [rbp+0x76],al
   140046b0a:	outs   dx,BYTE PTR gs:[rsi]
   140046b0c:	je     0x140046b50
   140046b0e:	jne    0x140046b76
   140046b10:	data16 gs jb 0x140046b55
   140046b14:	jb     0x140046b88
   140046b16:	(bad)  
   140046b17:	jns    0x140046b19
   140046b19:	add    BYTE PTR [rax],al
   140046b1b:	add    BYTE PTR [rax],al
   140046b1d:	add    BYTE PTR [rax],al
   140046b1f:	add    BYTE PTR [rdx+0x75],al
   140046b22:	data16 data16 gs jb 0x140046b77
   140046b27:	outs   dx,DWORD PTR ds:[rsi]
   140046b28:	outs   dx,DWORD PTR ds:[rsi]
   140046b29:	ins    BYTE PTR es:[rdi],dx
   140046b2a:	add    BYTE PTR [rax],al
   140046b2c:	rex.B
   140046b2d:	fs ins DWORD PTR es:[rdi],dx
   140046b2f:	imul   ebp,DWORD PTR [rsi+0x0],0x0
   140046b36:	add    BYTE PTR [rax],al
   140046b38:	rex.X jne 0x140046ba1
   140046b3b:	data16 gs jb 0x140046b80
   140046b3f:	jb     0x140046bb3
   140046b41:	(bad)  
   140046b42:	jns    0x140046b44
   140046b44:	add    BYTE PTR [rax],al
   140046b46:	add    BYTE PTR [rax],al
   140046b48:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140046b4a:	outs   dx,BYTE PTR ds:[rsi]
   140046b4b:	je     0x140046bbf
   140046b4d:	outs   dx,DWORD PTR ds:[rsi]
   140046b4e:	ins    BYTE PTR es:[rdi],dx
   140046b4f:	rex.X ins BYTE PTR es:[rdi],dx
   140046b51:	outs   dx,DWORD PTR ds:[rsi]
   140046b52:	movsxd ebp,DWORD PTR [rbx+0x73]
   140046b55:	add    BYTE PTR [rax],al
   140046b57:	add    BYTE PTR [rsi+0x69],al
   140046b5a:	ins    BYTE PTR es:[rdi],dx
   140046b5b:	gs rex.W
   140046b5d:	gs (bad) 
   140046b5f:	fs gs jb 0x140046b63
   140046b63:	add    BYTE PTR [rax],al
   140046b65:	add    BYTE PTR [rax],al
   140046b67:	add    BYTE PTR [rax+0x69],dl
   140046b6a:	jo     0x140046bd1
   140046b6c:	rex.XB ins BYTE PTR es:[rdi],dx
   140046b6e:	imul   esp,DWORD PTR [rbp+0x6e],0x69705374
   140046b75:	outs   dx,BYTE PTR ds:[rsi]
   140046b76:	ins    BYTE PTR es:[rdi],dx
   140046b77:	outs   dx,DWORD PTR ds:[rsi]
   140046b78:	movsxd ebp,DWORD PTR [rbx+0x0]
   140046b7b:	add    BYTE PTR [rax],al
   140046b7d:	add    BYTE PTR [rax],al
   140046b7f:	add    BYTE PTR [rax+0x69],dl
   140046b82:	jo     0x140046be9
   140046b84:	rex.WRB
   140046b85:	gs ins DWORD PTR es:[rdi],dx
   140046b87:	add    BYTE PTR [rbx+0x6f],al
   140046b8a:	outs   dx,BYTE PTR ds:[rsi]
   140046b8b:	je     0x140046bff
   140046b8d:	outs   dx,DWORD PTR ds:[rsi]
   140046b8e:	ins    BYTE PTR es:[rdi],dx
   140046b8f:	push   rbx
   140046b90:	jo     0x140046bfb
   140046b92:	outs   dx,BYTE PTR ds:[rsi]
   140046b93:	ins    BYTE PTR es:[rdi],dx
   140046b94:	outs   dx,DWORD PTR ds:[rsi]
   140046b95:	movsxd ebp,DWORD PTR [rbx+0x0]
   140046b98:	rex.WRB
   140046b99:	gs jae 0x140046c0f
   140046b9c:	(bad)  
   140046b9d:	imul   ebp,DWORD PTR [esi+0x67],0x6e697053
   140046ba5:	ins    BYTE PTR es:[rdi],dx
   140046ba6:	outs   dx,DWORD PTR ds:[rsi]
   140046ba7:	movsxd ebp,DWORD PTR [rbx+0x0]
   140046baa:	add    BYTE PTR [rax],al
   140046bac:	add    BYTE PTR [rax],al
   140046bae:	add    BYTE PTR [rax],al
   140046bb0:	push   rax
   140046bb1:	imul   esi,DWORD PTR [rax+0x65],0x76726553
   140046bb8:	gs jb  0x140046c0e
   140046bbb:	push   0x6f647475
   140046bc0:	ja     0x140046c30
   140046bc2:	add    BYTE PTR [rax],al
   140046bc4:	add    BYTE PTR [rax],al
   140046bc6:	add    BYTE PTR [rax],al
   140046bc8:	rex.RX jb 0x140046c30
   140046bcb:	gs push rcx
   140046bcd:	jne    0x140046c34
   140046bcf:	jne    0x140046c36
   140046bd1:	push   rbx
   140046bd2:	gs ins DWORD PTR es:[rdi],dx
   140046bd4:	(bad)  
   140046bd5:	jo     0x140046c3f
   140046bd7:	outs   dx,DWORD PTR ds:[rsi]
   140046bd8:	jb     0x140046c3f
   140046bda:	add    BYTE PTR [rax],al
   140046bdc:	add    BYTE PTR [rax],al
   140046bde:	add    BYTE PTR [rax],al
   140046be0:	rex.RB jbe 0x140046c48
   140046be3:	outs   dx,BYTE PTR ds:[rsi]
   140046be4:	je     0x140046c37
   140046be6:	jne    0x140046c4d
   140046be8:	jne    0x140046c4f
   140046bea:	add    BYTE PTR fs:[rax],al
   140046bed:	add    BYTE PTR [rax],al
   140046bef:	add    BYTE PTR [rbx+0x6f],al
   140046bf2:	ins    BYTE PTR es:[rdi],dx
   140046bf3:	ins    BYTE PTR es:[rdi],dx
   140046bf4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140046bf9:	outs   dx,BYTE PTR ds:[rsi]
   140046bfa:	push   rbx
   140046bfb:	gs je  0x140046c72
   140046bfe:	imul   ebp,DWORD PTR [rsi+0x67],0x69705373
   140046c05:	outs   dx,BYTE PTR ds:[rsi]
   140046c06:	ins    BYTE PTR es:[rdi],dx
   140046c07:	outs   dx,DWORD PTR ds:[rsi]
   140046c08:	movsxd ebp,DWORD PTR [rbx+0x0]
   140046c0b:	add    BYTE PTR [rax],al
   140046c0d:	add    BYTE PTR [rax],al
   140046c0f:	add    BYTE PTR [rsi+0x0],dh
   140046c12:	jae    0x140046c14
   140046c14:	jo     0x140046c16
   140046c16:	add    BYTE PTR gs:[rdx+0x0],dh
   140046c1a:	data16 add BYTE PTR [rax],al
   140046c1d:	add    BYTE PTR [rax],al
   140046c1f:	add    BYTE PTR [rbp+0x76],al
   140046c22:	outs   dx,BYTE PTR gs:[rsi]
   140046c24:	je     0x140046c6a
   140046c26:	gs push rcx
   140046c28:	jne    0x140046c8f
   140046c2a:	jne    0x140046c91
   140046c2c:	add    BYTE PTR fs:[rax],al
   140046c2f:	add    BYTE PTR [rip+0x2e532573],ah        # 0x16e5791a8
   140046c35:	and    eax,0x6f4c0073
   140046c3a:	movsxd esp,DWORD PTR [rcx+0x6c]
   140046c3d:	add    BYTE PTR cs:[rax],al
   140046c40:	rex.RXB ins BYTE PTR es:[rdi],dx
   140046c42:	outs   dx,DWORD PTR ds:[rsi]
   140046c43:	(bad)
   140046c48:	outs   dx,DWORD PTR ds:[rsi]
   140046c49:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
   140046c50:	outs   dx,DWORD PTR ds:[rsi]
   140046c51:	outs   dx,BYTE PTR ds:[rsi]
   140046c52:	add    BYTE PTR [rax],al
   140046c54:	outs   dx,BYTE PTR ds:[rsi]
   140046c55:	gs jbe 0x140046cbd
   140046c58:	jb     0x140046c5a
   140046c5a:	add    BYTE PTR [rax],al
   140046c5c:	outs   dx,DWORD PTR ds:[rsi]
   140046c5d:	data16 data16 add BYTE PTR [rdi+0x0],al
   140046c62:	ins    BYTE PTR es:[rdi],dx
   140046c63:	add    BYTE PTR [rdi+0x0],ch
   140046c66:	(bad)  
   140046c67:	add    BYTE PTR [rcx+0x0],ah
   140046c6a:	ins    BYTE PTR es:[rdi],dx
   140046c6b:	add    BYTE PTR [rax+0x0],dl
   140046c6e:	jb     0x140046c70
   140046c70:	outs   dx,DWORD PTR ds:[rsi]
   140046c71:	add    BYTE PTR [rsi+0x0],ah
   140046c74:	imul   eax,DWORD PTR [rax],0x65006c
   140046c7a:	add    BYTE PTR [rax],al
   140046c7c:	add    BYTE PTR [rax],al
   140046c7e:	add    BYTE PTR [rax],al
   140046c80:	and    al,BYTE PTR [rax]
   140046c82:	outs   dx,DWORD PTR ds:[rsi]
   140046c83:	add    BYTE PTR [rsi+0x0],ch
   140046c86:	and    al,BYTE PTR [rax]
   140046c88:	sub    al,0x0
   140046c8a:	and    BYTE PTR [rax],al
   140046c8c:	and    al,BYTE PTR [rax]
   140046c8e:	outs   dx,DWORD PTR ds:[rsi]
   140046c8f:	add    BYTE PTR [rsi+0x0],ah
   140046c92:	data16 add BYTE PTR [rdx],ah
   140046c95:	add    BYTE PTR [rax+rax*1],ch
   140046c98:	and    BYTE PTR [rax],al
   140046c9a:	outs   dx,DWORD PTR ds:[rsi]
   140046c9b:	add    BYTE PTR [rdx+0x0],dh
   140046c9e:	and    BYTE PTR [rax],al
   140046ca0:	and    al,BYTE PTR [rax]
   140046ca2:	outs   dx,BYTE PTR ds:[rsi]
   140046ca3:	add    BYTE PTR [rbp+0x0],ah
   140046ca6:	jbe    0x140046ca8
   140046ca8:	add    BYTE PTR gs:[rdx+0x0],dh
   140046cac:	and    al,BYTE PTR [rax]
   140046cae:	add    BYTE PTR [rax],al
   140046cb0:	and    al,BYTE PTR [rax]
   140046cb2:	outs   dx,DWORD PTR ds:[rsi]
   140046cb3:	add    BYTE PTR [rsi+0x0],ch
   140046cb6:	and    al,BYTE PTR [rax]
   140046cb8:	and    BYTE PTR [rax],al
   140046cba:	outs   dx,DWORD PTR ds:[rsi]
   140046cbb:	add    BYTE PTR [rdx+0x0],dh
   140046cbe:	and    BYTE PTR [rax],al
   140046cc0:	and    al,BYTE PTR [rax]
   140046cc2:	outs   dx,DWORD PTR ds:[rsi]
   140046cc3:	add    BYTE PTR [rsi+0x0],ah
   140046cc6:	data16 add BYTE PTR [rdx],ah
   140046cc9:	add    BYTE PTR [rsi],ch
   140046ccb:	add    BYTE PTR [rax],al
   140046ccd:	add    BYTE PTR [rax],al
   140046ccf:	add    BYTE PTR [rax+0x72],dl
   140046cd2:	outs   dx,DWORD PTR ds:[rsi]
   140046cd3:	movsxd esp,DWORD PTR [rbp+0x73]
   140046cd6:	jae    0x140046d28
   140046cd8:	jb     0x140046d49
   140046cda:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x5400
   140046ce1:	push   0x64616572
   140046ce6:	push   rax
   140046ce7:	jb     0x140046d58
   140046ce9:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
   140046cf0:	push   rax
   140046cf1:	add    BYTE PTR [rdx+0x0],dh
   140046cf4:	outs   dx,DWORD PTR ds:[rsi]
   140046cf5:	add    BYTE PTR [rbx+0x0],ah
   140046cf8:	add    BYTE PTR gs:[rbx+0x0],dh
   140046cfc:	jae    0x140046cfe
   140046cfe:	push   rax
   140046cff:	add    BYTE PTR [rdx+0x0],dh
   140046d02:	outs   dx,DWORD PTR ds:[rsi]
   140046d03:	add    BYTE PTR [rsi+0x0],ah
   140046d06:	imul   eax,DWORD PTR [rax],0x65006c
   140046d0c:	add    BYTE PTR [rax],al
   140046d0e:	add    BYTE PTR [rax],al
   140046d10:	fs gs data16 (bad) 
   140046d14:	jne    0x140046d82
   140046d16:	je     0x140046d18
   140046d18:	push   rsp
   140046d19:	add    BYTE PTR [rax+0x0],ch
   140046d1c:	jb     0x140046d1e
   140046d1e:	add    BYTE PTR gs:[rcx+0x0],ah
   140046d22:	add    BYTE PTR fs:[rax+0x0],dl
   140046d26:	jb     0x140046d28
   140046d28:	outs   dx,DWORD PTR ds:[rsi]
   140046d29:	add    BYTE PTR [rsi+0x0],ah
   140046d2c:	imul   eax,DWORD PTR [rax],0x65006c
   140046d32:	add    BYTE PTR [rax],al
   140046d34:	add    BYTE PTR [rax],al
   140046d36:	add    BYTE PTR [rax],al
   140046d38:	rex.W add BYTE PTR [rbx+0x0],cl
   140046d3c:	add    BYTE PTR [r9+0x0],r11b
   140046d40:	pop    rdi
   140046d41:	add    BYTE PTR [rax+rax*1+0x4f],cl
   140046d45:	add    BYTE PTR [rbx+0x0],al
   140046d48:	add    BYTE PTR [r8+rax*1+0x5f],cl
   140046d4d:	add    BYTE PTR [rbp+0x0],cl
   140046d50:	add    BYTE PTR [r11+0x0],al
   140046d54:	rex.W add BYTE PTR [rcx+0x0],cl
   140046d58:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   140046d5c:	add    BYTE PTR [rax],al
   140046d5e:	add    BYTE PTR [rax],al
   140046d60:	push   rbx
   140046d61:	add    BYTE PTR [rdi+0x0],cl
   140046d64:	add    BYTE PTR [rax+r8*1+0x57],r10b
   140046d69:	add    BYTE PTR [rcx+0x0],al
   140046d6c:	push   rdx
   140046d6d:	add    BYTE PTR [rbp+0x0],al
   140046d70:	pop    rsp
   140046d71:	add    BYTE PTR [rbp+0x0],cl
   140046d74:	imul   eax,DWORD PTR [rax],0x720063
   140046d7a:	outs   dx,DWORD PTR ds:[rsi]
   140046d7b:	add    BYTE PTR [rbx+0x0],dh
   140046d7e:	outs   dx,DWORD PTR ds:[rsi]
   140046d7f:	add    BYTE PTR [rsi+0x0],ah
   140046d82:	je     0x140046d84
   140046d84:	pop    rsp
   140046d85:	add    BYTE PTR [rsi+0x0],dl
   140046d88:	imul   eax,DWORD PTR [rax],0x750073
   140046d8e:	(bad)  
   140046d8f:	add    BYTE PTR [rax+rax*1+0x53],ch
   140046d93:	add    BYTE PTR [rax+rax*1+0x75],dh
   140046d97:	add    BYTE PTR [rax+rax*1+0x69],ah
   140046d9b:	add    BYTE PTR [rdi+0x0],ch
   140046d9e:	pop    rsp
   140046d9f:	add    BYTE PTR [rcx],dh
   140046da1:	add    BYTE PTR [rcx],dh
   140046da3:	add    BYTE PTR [rsi],ch
   140046da5:	add    BYTE PTR [rax],dh
   140046da7:	add    BYTE PTR [rax+rax*1+0x56],bl
   140046dab:	add    BYTE PTR [rbx+0x0],dl
   140046dae:	push   rax
   140046daf:	add    BYTE PTR [rbp+0x0],ah
   140046db2:	jb     0x140046db4
   140046db4:	data16 add BYTE PTR [rax+rax*1+0x4d],bl
   140046db9:	add    BYTE PTR [rdi+0x0],ch
   140046dbc:	outs   dx,BYTE PTR ds:[rsi]
   140046dbd:	add    BYTE PTR [rcx+0x0],ch
   140046dc0:	je     0x140046dc2
   140046dc2:	outs   dx,DWORD PTR ds:[rsi]
   140046dc3:	add    BYTE PTR [rdx+0x0],dh
   140046dc6:	pop    rsp
   140046dc7:	add    BYTE PTR [rbx+0x0],dl
   140046dca:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   140046dcf:	add    BYTE PTR [rcx+0x0],ch
   140046dd2:	outs   dx,BYTE PTR ds:[rsi]
   140046dd3:	add    BYTE PTR [rdi+0x0],ah
   140046dd6:	jae    0x140046dd8
	...
   140046de0:	rex.W add BYTE PTR [rbx+0x0],cl
   140046de4:	add    BYTE PTR [r9+0x0],r11b
   140046de8:	pop    rdi
   140046de9:	add    BYTE PTR [rbx+0x0],al
   140046dec:	push   rbp
   140046ded:	add    BYTE PTR [rdx+0x0],dl
   140046df0:	push   rdx
   140046df1:	add    BYTE PTR [rbp+0x0],al
   140046df4:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   140046df9:	add    BYTE PTR [rbp+0x0],dl
   140046dfc:	push   rbx
   140046dfd:	add    BYTE PTR [rbp+0x0],al
   140046e00:	push   rdx
   140046e01:	add    BYTE PTR [rax],al
   140046e03:	add    BYTE PTR [rax],al
   140046e05:	add    BYTE PTR [rax],al
   140046e07:	add    BYTE PTR [rbx+0x6c],al
   140046e0a:	gs (bad) 
   140046e0c:	jb     0x140046e5e
   140046e0e:	jb     0x140046e7f
   140046e10:	movsxd esp,DWORD PTR [rbp+0x73]
   140046e13:	jae    0x140046e68
   140046e15:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140046e19:	imul   esi,DWORD PTR [rcx+rdi*2+0x41],0x69006c63
   140046e21:	ins    DWORD PTR es:[rdi],dx
   140046e22:	jo     0x140046e89
   140046e24:	jb     0x140046e99
   140046e26:	outs   dx,DWORD PTR ds:[rsi]
   140046e27:	outs   dx,BYTE PTR ds:[rsi]
   140046e28:	(bad)  
   140046e29:	je     0x140046e94
   140046e2b:	outs   dx,BYTE PTR ds:[rsi]
   140046e2c:	add    BYTE PTR [eax],al
   140046e2f:	add    BYTE PTR [rbx+0x74],dh
   140046e32:	(bad)  
   140046e33:	outs   dx,BYTE PTR ds:[rsi]
   140046e34:	fs (bad) 
   140046e36:	jb     0x140046e9c
	...
   140046e40:	add    BYTE PTR [r8+r8*1+0x65],bpl
   140046e45:	add    BYTE PTR [rcx+0x0],ah
   140046e48:	jb     0x140046e4a
   140046e4a:	push   rax
   140046e4b:	add    BYTE PTR [rdx+0x0],dh
   140046e4e:	outs   dx,DWORD PTR ds:[rsi]
   140046e4f:	add    BYTE PTR [rbx+0x0],ah
   140046e52:	add    BYTE PTR gs:[rbx+0x0],dh
   140046e56:	jae    0x140046e58
   140046e58:	push   rbx
   140046e59:	add    BYTE PTR [rbp+0x0],ah
   140046e5c:	movsxd eax,DWORD PTR [rax]
   140046e5e:	jne    0x140046e60
   140046e60:	jb     0x140046e62
   140046e62:	imul   eax,DWORD PTR [rax],0x790074
   140046e68:	add    BYTE PTR [r11+0x0],spl
   140046e6c:	ins    BYTE PTR es:[rdi],dx
   140046e6d:	add    BYTE PTR [rax],al
   140046e6f:	add    BYTE PTR [rdx],ah
   140046e71:	add    BYTE PTR [rbx+0x0],dl
   140046e74:	je     0x140046e76
   140046e76:	(bad)  
   140046e77:	add    BYTE PTR [rsi+0x0],ch
   140046e7a:	add    BYTE PTR fs:[rcx+0x0],ah
   140046e7e:	jb     0x140046e80
   140046e80:	add    BYTE PTR fs:[rdx],ah
   140046e83:	add    BYTE PTR [rax],ah
   140046e85:	add    BYTE PTR [rdi+0x0],ch
   140046e88:	jb     0x140046e8a
   140046e8a:	and    BYTE PTR [rax],al
   140046e8c:	and    al,BYTE PTR [rax]
   140046e8e:	rex.WB add BYTE PTR [r13+0x0],bpl
   140046e92:	jo     0x140046e94
   140046e94:	add    BYTE PTR gs:[rdx+0x0],dh
   140046e98:	jae    0x140046e9a
   140046e9a:	outs   dx,DWORD PTR ds:[rsi]
   140046e9b:	add    BYTE PTR [rsi+0x0],ch
   140046e9e:	(bad)  
   140046e9f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140046ea3:	add    BYTE PTR [rsi+0x0],ch
   140046ea6:	add    BYTE PTR [edx],ah
   140046ea9:	add    BYTE PTR [rax],al
   140046eab:	add    BYTE PTR [rax],al
   140046ead:	add    BYTE PTR [rax],al
   140046eaf:	add    BYTE PTR [rax+0x14004bd],ch
   140046eb5:	add    BYTE PTR [rax],al
   140046eb7:	add    BYTE PTR [rax-0x69],bh
   140046eba:	add    DWORD PTR [rax+0x1],eax
   140046ebd:	add    BYTE PTR [rax],al
   140046ebf:	add    ah,dl
   140046ec1:	xchg   edi,eax
   140046ec2:	add    DWORD PTR [rax+0x1],eax
   140046ec5:	add    BYTE PTR [rax],al
   140046ec7:	add    BYTE PTR [rbx+rdx*4],cl
   140046eca:	add    DWORD PTR [rax+0x1],eax
   140046ecd:	add    BYTE PTR [rax],al
   140046ecf:	add    BYTE PTR [rax+0x14004be],al
   140046ed5:	add    BYTE PTR [rax],al
   140046ed7:	add    BYTE PTR [rax+0x140019e],dh
   140046edd:	add    BYTE PTR [rax],al
   140046edf:	add    al,al
   140046ee1:	sahf   
   140046ee2:	add    DWORD PTR [rax+0x1],eax
   140046ee5:	add    BYTE PTR [rax],al
   140046ee7:	add    al,ch
   140046ee9:	mov    esi,0x14004
   140046eee:	add    BYTE PTR [rax],al
   140046ef0:	sbb    BYTE PTR [rax+0x14001],ah
   140046ef6:	add    BYTE PTR [rax],al
   140046ef8:	xor    al,0xa0
   140046efa:	add    DWORD PTR [rax+0x1],eax
   140046efd:	add    BYTE PTR [rax],al
   140046eff:	add    BYTE PTR [rax+0x14004bf],al
   140046f05:	add    BYTE PTR [rax],al
   140046f07:	add    BYTE PTR [rax-0x5c],ch
   140046f0a:	add    DWORD PTR [rax+0x1],eax
   140046f0d:	add    BYTE PTR [rax],al
   140046f0f:	add    ah,al
   140046f11:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046f12:	add    DWORD PTR [rax+0x1],eax
   140046f15:	add    BYTE PTR [rax],al
   140046f17:	add    BYTE PTR [rax+0x14004bf],ch
   140046f1d:	add    BYTE PTR [rax],al
   140046f1f:	add    BYTE PTR [rax+rbp*4+0x14001],dl
   140046f26:	add    BYTE PTR [rax],al
   140046f28:	lock test al,0x1
   140046f2b:	rex add DWORD PTR [rax],eax
   140046f2e:	add    BYTE PTR [rax],al
   140046f30:	and    BYTE PTR [rax],al
   140046f32:	push   rax
   140046f33:	add    BYTE PTR [rax+0x0],al
   140046f36:	and    BYTE PTR [rax],al
   140046f38:	and    eax,0x3a007000
   140046f3d:	add    BYTE PTR [rip+0x6900],ah        # 0x14004d843
   140046f43:	add    BYTE PTR [rax],al
   140046f45:	add    BYTE PTR [rax],al
   140046f47:	add    BYTE PTR [rax],ah
   140046f49:	add    BYTE PTR [rax+0x0],dl
   140046f4c:	jb     0x140046f4e
   140046f4e:	outs   dx,DWORD PTR ds:[rsi]
   140046f4f:	add    BYTE PTR [rsi+0x0],ah
   140046f52:	imul   eax,DWORD PTR [rax],0x65006c
   140046f58:	push   rdx
   140046f59:	add    BYTE PTR [rbp+0x0],dh
   140046f5c:	outs   dx,BYTE PTR ds:[rsi]
   140046f5d:	add    BYTE PTR [rax],ah
	...
   140046f67:	add    BYTE PTR [rax+rax*1+0x52],dl
   140046f6b:	add    BYTE PTR [rcx+0x0],al
   140046f6e:	rex.XB add BYTE PTR [r13+0x0],al
   140046f72:	and    BYTE PTR [rax],al
   140046f74:	(bad)  
   140046f75:	add    BYTE PTR [rax],ah
   140046f77:	add    BYTE PTR [rbx+0x0],dl
   140046f7a:	add    BYTE PTR [r13+0x0],cl
   140046f7e:	push   rax
   140046f7f:	add    BYTE PTR [rax+rax*1+0x45],cl
   140046f83:	add    BYTE PTR [rax],al
   140046f85:	add    BYTE PTR [rax],al
   140046f87:	add    BYTE PTR [rbx+0x6c],al
   140046f8a:	imul   esp,DWORD PTR [rbp+0x6e],0x25282074
   140046f91:	xor    BYTE PTR [rdx],dh
   140046f93:	fs cs and eax,0x2e643230
   140046f9a:	and    eax,0x29643430
   140046f9f:	and    BYTE PTR [rbp+0x6f],cl
   140046fa2:	outs   dx,BYTE PTR ds:[rsi]
   140046fa3:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x30252820
   140046fab:	xor    ah,BYTE PTR [rsi+rbp*1+0x25]
   140046faf:	xor    BYTE PTR [rdx],dh
   140046fb1:	fs cs and eax,0x29643430
	...
   140046fc0:	rex.XB add BYTE PTR [r15+0x0],cl
   140046fc4:	rex.WRX add BYTE PTR [rax+r8*1+0x45],r10b
   140046fc9:	add    BYTE PTR [rsi+0x0],cl
   140046fcc:	push   rsp
   140046fcd:	add    BYTE PTR [rcx+0x0],cl
   140046fd0:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140046fd4:	add    BYTE PTR [rax],al
   140046fd6:	add    BYTE PTR [rax],al
   140046fd8:	js     0x140046f9a
   140046fda:	add    al,0x40
   140046fdc:	add    DWORD PTR [rax],eax
   140046fde:	add    BYTE PTR [rax],al
   140046fe0:	test   BYTE PTR [rcx+rax*1+0x140],ch
   140046fe7:	add    al,bh
   140046fe9:	rol    BYTE PTR [rax+rax*2],0x1
   140046fed:	add    BYTE PTR [rax],al
   140046fef:	add    al,bl
   140046ff1:	mov    eax,0x14001
   140046ff6:	add    BYTE PTR [rax],al
   140046ff8:	hlt    
   140046ff9:	mov    eax,0x14001
   140046ffe:	add    BYTE PTR [rax],al
   140047000:	js     0x140046fc3
   140047002:	add    al,0x40
   140047004:	add    DWORD PTR [rax],eax
   140047006:	add    BYTE PTR [rax],al
   140047008:	fs mov edx,0x14001
   14004700e:	add    BYTE PTR [rax],al
   140047010:	xor    al,0xbb
   140047012:	add    DWORD PTR [rax+0x1],eax
   140047015:	add    BYTE PTR [rax],al
   140047017:	add    BYTE PTR [rax-0x47],ah
   14004701a:	add    DWORD PTR [rax+0x1],eax
   14004701d:	add    BYTE PTR [rax],al
   14004701f:	add    BYTE PTR [rbx+rdx*1+0x14001],dl
   140047026:	add    BYTE PTR [rax],al
   140047028:	xchg   esp,eax
   140047029:	adc    eax,DWORD PTR [rcx]
   14004702b:	rex add DWORD PTR [rax],eax
   14004702e:	add    BYTE PTR [rax],al
   140047030:	lods   al,BYTE PTR ds:[rsi]
   140047031:	mov    esp,0x14001
   140047036:	add    BYTE PTR [rax],al
   140047038:	movabs al,ds:0xd8000000014004c1
   140047041:	ret    
   140047042:	add    DWORD PTR [rax+0x1],eax
   140047045:	add    BYTE PTR [rax],al
   140047047:	add    BYTE PTR [rax-0x3c],dh
   14004704a:	add    DWORD PTR [rax+0x1],eax
   14004704d:	add    BYTE PTR [rax],al
   14004704f:	add    BYTE PTR [rax],bh
   140047051:	ret    0x4004
   140047054:	add    DWORD PTR [rax],eax
   140047056:	add    BYTE PTR [rax],al
   140047058:	xchg   esp,eax
   140047059:	test   al,0x1
   14004705b:	rex add DWORD PTR [rax],eax
   14004705e:	add    BYTE PTR [rax],al
   140047060:	lock test al,0x1
   140047063:	rex add DWORD PTR [rax],eax
   140047066:	add    BYTE PTR [rax],al
   140047068:	add    bl,al
   14004706a:	add    al,0x40
   14004706c:	add    DWORD PTR [rax],eax
   14004706e:	add    BYTE PTR [rax],al
   140047070:	add    bl,cl
   140047072:	add    DWORD PTR [rax+0x1],eax
   140047075:	add    BYTE PTR [rax],al
   140047077:	add    BYTE PTR [rax-0x35],ah
   14004707a:	add    DWORD PTR [rax+0x1],eax
   14004707d:	add    BYTE PTR [rax],al
   14004707f:	add    BYTE PTR [rax-0x3d],bl
   140047082:	add    al,0x40
   140047084:	add    DWORD PTR [rax],eax
   140047086:	add    BYTE PTR [rax],al
   140047088:	mov    ch,cl
   14004708a:	add    DWORD PTR [rax+0x1],eax
   14004708d:	add    BYTE PTR [rax],al
   14004708f:	add    ah,ah
   140047091:	int    0x1
   140047093:	rex add DWORD PTR [rax],eax
   140047096:	add    BYTE PTR [rax],al
   140047098:	call   0x141447560
   14004709d:	add    BYTE PTR [rax],al
   14004709f:	add    al,bl
   1400470a1:	mov    eax,0x14001
   1400470a6:	add    BYTE PTR [rax],al
   1400470a8:	hlt    
   1400470a9:	mov    eax,0x14001
   1400470ae:	add    BYTE PTR [rax],al
   1400470b0:	push   rsi
   1400470b1:	add    BYTE PTR [rbx+0x0],dl
   1400470b4:	push   rax
   1400470b5:	add    BYTE PTR [rbp+0x0],ah
   1400470b8:	jb     0x1400470ba
   1400470ba:	data16 add BYTE PTR [rax],ah
   1400470bd:	add    BYTE PTR [rax+0x0],dl
   1400470c0:	jb     0x1400470c2
   1400470c2:	outs   dx,DWORD PTR ds:[rsi]
   1400470c3:	add    BYTE PTR [rsi+0x0],ah
   1400470c6:	imul   eax,DWORD PTR [rax],0x65006c
   1400470cc:	and    BYTE PTR [rax],al
   1400470ce:	rex.WRB add BYTE PTR [r15+0x0],r13b
   1400470d2:	outs   dx,BYTE PTR ds:[rsi]
   1400470d3:	add    BYTE PTR [rcx+0x0],ch
   1400470d6:	je     0x1400470d8
   1400470d8:	outs   dx,DWORD PTR ds:[rsi]
   1400470d9:	add    BYTE PTR [rdx+0x0],dh
   1400470dc:	and    BYTE PTR [rax],al
   1400470de:	add    BYTE PTR [rdx+0x0],r14b
   1400470e2:	imul   eax,DWORD PTR [rax],0x650076
   1400470e8:	jb     0x1400470ea
   1400470ea:	and    BYTE PTR [rax],al
   1400470ec:	xor    DWORD PTR [rax],eax
   1400470ee:	xor    DWORD PTR [rax],eax
   1400470f0:	add    BYTE PTR cs:[rax],dh
   1400470f3:	add    BYTE PTR [rax],al
   1400470f5:	add    BYTE PTR [rax],al
   1400470f7:	add    BYTE PTR [rsi+0x0],dl
   1400470fa:	push   rbx
   1400470fb:	add    BYTE PTR [rax+0x0],dl
   1400470fe:	add    BYTE PTR gs:[rdx+0x0],dh
   140047102:	data16 add BYTE PTR [rax+rax*1+0x72],al
   140047107:	add    BYTE PTR [rsi+0x0],dh
   14004710a:	xor    DWORD PTR [rax],eax
   14004710c:	xor    DWORD PTR [rax],eax
   14004710e:	xor    BYTE PTR [rax],al
   140047110:	add    BYTE PTR cs:[rbx+0x0],dh
   140047114:	jns    0x140047116
   140047116:	jae    0x140047118
	...
   140047120:	push   rsi
   140047121:	add    BYTE PTR [rbx+0x0],dl
   140047124:	push   rax
   140047125:	add    BYTE PTR [rbp+0x0],ah
   140047128:	jb     0x14004712a
   14004712a:	data16 add BYTE PTR [rax],ah
   14004712d:	add    BYTE PTR [rax+rax*1+0x72],al
   140047131:	add    BYTE PTR [rcx+0x0],ch
   140047134:	jbe    0x140047136
   140047136:	add    BYTE PTR gs:[rdx+0x0],dh
   14004713a:	add    BYTE PTR [rax],al
   14004713c:	add    BYTE PTR [rax],al
   14004713e:	add    BYTE PTR [rax],al
   140047140:	push   rbx
   140047141:	add    BYTE PTR [rcx+0x0],ah
   140047144:	ins    DWORD PTR es:[rdi],dx
   140047145:	add    BYTE PTR [rax+0x0],dh
   140047148:	ins    BYTE PTR es:[rdi],dx
   140047149:	add    BYTE PTR [rcx+0x0],ch
   14004714c:	outs   dx,BYTE PTR ds:[rsi]
   14004714d:	add    BYTE PTR [rdi+0x0],ah
   140047150:	push   rdx
   140047151:	add    BYTE PTR [rbp+0x0],dh
   140047154:	outs   dx,BYTE PTR ds:[rsi]
   140047155:	add    BYTE PTR [rax+rax*1+0x69],dh
   140047159:	add    BYTE PTR [rbp+0x0],ch
   14004715c:	add    BYTE PTR gs:[rsi],ch
   14004715f:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140047163:	add    BYTE PTR [rax+rax*1+0x0],ch
   140047167:	add    BYTE PTR [rbp+0x73],ch
   14004716a:	movsxd ebp,DWORD PTR [rdi+0x72]
   14004716d:	gs gs cs fs ins BYTE PTR es:[rdi],dx
   140047172:	ins    BYTE PTR es:[rdi],dx
   140047173:	add    BYTE PTR [rax],al
   140047175:	add    BYTE PTR [rax],al
   140047177:	add    BYTE PTR [rsi+0x0],cl
   14004717a:	outs   dx,DWORD PTR ds:[rsi]
   14004717b:	add    BYTE PTR [rsi+0x0],ch
   14004717e:	rex.W add BYTE PTR [rcx+0x0],spl
   140047182:	ins    BYTE PTR es:[rdi],dx
   140047183:	add    BYTE PTR [rax+rax*1+0x65],dh
   140047187:	add    BYTE PTR [rax+rax*1+0x43],ah
   14004718b:	add    BYTE PTR [rcx+0x0],bh
   14004718e:	movsxd eax,DWORD PTR [rax]
   140047190:	ins    BYTE PTR es:[rdi],dx
   140047191:	add    BYTE PTR [rbp+0x0],ah
   140047194:	jae    0x140047196
   140047196:	add    BYTE PTR [rax],al
   140047198:	ja     0x14004719a
   14004719a:	js     0x14004719c
   14004719c:	jbe    0x14004719e
   14004719e:	(bad)  
   14004719f:	add    BYTE PTR [rbp+0x0],dh
   1400471a2:	ins    BYTE PTR es:[rdi],dx
   1400471a3:	add    BYTE PTR [rax+rax*1+0x2e],dh
   1400471a7:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1400471ab:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400471af:	add    BYTE PTR [rcx],dh
   1400471b1:	add    BYTE PTR [rax],al
   1400471b3:	add    BYTE PTR [rax],al
   1400471b5:	add    BYTE PTR [rax],al
   1400471b7:	add    BYTE PTR [rsi+0x0],dh
   1400471ba:	add    BYTE PTR gs:[rdx+0x0],dh
   1400471be:	imul   eax,DWORD PTR [rax],0x690066
   1400471c4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400471c8:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400471cd:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400471d1:	add    BYTE PTR [rax],al
   1400471d3:	add    BYTE PTR [rax],al
   1400471d5:	add    BYTE PTR [rax],al
   1400471d7:	add    BYTE PTR [rsi+0x0],dh
   1400471da:	add    BYTE PTR gs:[rdx+0x0],dh
   1400471de:	imul   eax,DWORD PTR [rax],0x690066
   1400471e4:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   1400471f0:	rex.XB add BYTE PTR [r15+0x0],cl
   1400471f4:	push   rdx
   1400471f5:	add    BYTE PTR [rdi+0x0],bl
   1400471f8:	push   rax
   1400471f9:	add    BYTE PTR [rdx+0x0],dl
   1400471fc:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140047200:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   140047205:	add    BYTE PTR [rdx+0x0],dl
	...
   140047210:	movsxd eax,DWORD PTR [rax]
   140047212:	outs   dx,DWORD PTR ds:[rsi]
   140047213:	add    BYTE PTR [rbp+0x0],ch
   140047216:	jo     0x140047218
   140047218:	ins    BYTE PTR es:[rdi],dx
   140047219:	add    BYTE PTR [rbp+0x0],dh
   14004721c:	jae    0x14004721e
   14004721e:	pop    rdi
   14004721f:	add    BYTE PTR [rbp+0x0],al
   140047222:	push   rsp
   140047223:	add    BYTE PTR [rdi+0x0],dl
   140047226:	add    BYTE PTR [r14+0x0],r13b
   14004722a:	(bad)  
   14004722b:	add    BYTE PTR [rdx+0x0],ah
   14004722e:	ins    BYTE PTR es:[rdi],dx
   14004722f:	add    BYTE PTR [rbp+0x0],ah
   140047232:	add    BYTE PTR fs:[rax],al
   140047235:	add    BYTE PTR [rax],al
   140047237:	add    BYTE PTR [rbx+0x0],al
   14004723a:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14004723e:	pop    rdi
   14004723f:	add    BYTE PTR [rbp+0x0],al
   140047242:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   140047246:	add    BYTE PTR [rax+r8*1+0x45],cl
   14004724b:	add    BYTE PTR [rdi+0x0],bl
   14004724e:	push   rax
   14004724f:	add    BYTE PTR [rdx+0x0],dl
   140047252:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140047256:	rex.WB add BYTE PTR [r8+rax*1+0x49],cl
   14004725b:	add    BYTE PTR [rsi+0x0],cl
   14004725e:	rex.RXB add BYTE PTR [r8],r8b
	...
   14004726d:	add    BYTE PTR [rax],al
   14004726f:	add    BYTE PTR [rbx+0x0],bh
   140047272:	xor    al,0x0
   140047274:	xor    al,0x0
   140047276:	(bad)  
   140047277:	add    BYTE PTR [rax],bh
   140047279:	add    BYTE PTR [rsi],dh
   14004727b:	add    BYTE PTR [rbx+0x0],ah
   14004727e:	(bad)  
   14004727f:	add    BYTE PTR [rax+rax*1+0x2d],ah
   140047283:	add    BYTE PTR [rsi+0x0],ah
   140047286:	(bad)  
   140047287:	add    BYTE PTR [rbp+0x0],ah
   14004728a:	add    BYTE PTR gs:[rip+0x32003400],ch        # 0x17204a691
   140047291:	add    BYTE PTR [rcx],bh
   140047293:	add    BYTE PTR [rbx+0x0],ah
   140047296:	sub    eax,0x33003800
   14004729b:	add    BYTE PTR [rbp+0x0],ah
   14004729e:	(bad)  
   14004729f:	add    BYTE PTR [rip+0x33006600],ch        # 0x17304d8a5
   1400472a5:	add    BYTE PTR [rbx+0x0],ah
   1400472a8:	add    BYTE PTR fs:[rbp+0x0],ah
   1400472ac:	xor    eax,DWORD PTR [rax]
   1400472ae:	(bad)  
   1400472af:	add    BYTE PTR [rax],bh
   1400472b1:	add    BYTE PTR [rdi],dh
   1400472b3:	add    BYTE PTR [rdx+0x0],ah
   1400472b6:	(bad)  
   1400472b7:	add    BYTE PTR [rax],dh
   1400472b9:	add    BYTE PTR [rbp+0x0],bh
   1400472bc:	add    BYTE PTR [rax],al
   1400472be:	add    BYTE PTR [rax],al
   1400472c0:	rex.XB add BYTE PTR [r15+0x0],cl
   1400472c4:	push   rdx
   1400472c5:	add    BYTE PTR [rbp+0x0],al
   1400472c8:	add    BYTE PTR [r8+r8*1+0x52],cl
   1400472cd:	add    BYTE PTR [rdi+0x0],bl
   1400472d0:	add    BYTE PTR [r14+0x0],r9b
   1400472d4:	add    BYTE PTR [r10+0x0],al
   1400472d8:	rex.WR add BYTE PTR [rbp+0x0],r8b
   1400472dc:	pop    rdi
   1400472dd:	add    BYTE PTR [rax+0x0],dl
   1400472e0:	push   rdx
   1400472e1:	add    BYTE PTR [rdi+0x0],cl
   1400472e4:	rex.RX add BYTE PTR [rcx+0x0],r9b
   1400472e8:	rex.WR add BYTE PTR [rcx+0x0],r9b
   1400472ec:	rex.WRX add BYTE PTR [rdi+0x0],r8b
	...
   1400472f8:	rex.XB add BYTE PTR [r15+0x0],cl
   1400472fc:	push   rdx
   1400472fd:	add    BYTE PTR [rbp+0x0],al
   140047300:	add    BYTE PTR [r8+r8*1+0x52],cl
   140047305:	add    BYTE PTR [rdi+0x0],bl
   140047308:	push   rax
   140047309:	add    BYTE PTR [rdx+0x0],dl
   14004730c:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140047310:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   140047315:	add    BYTE PTR [rdx+0x0],dl
	...
   140047320:	rex.XB add BYTE PTR [r15+0x0],cl
   140047324:	push   rdx
   140047325:	add    BYTE PTR [rdi+0x0],bl
   140047328:	push   rax
   140047329:	add    BYTE PTR [rdx+0x0],dl
   14004732c:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140047330:	pop    rdi
   140047331:	add    BYTE PTR [rax+rax*1+0x41],dl
   140047335:	add    BYTE PTR [rdx+0x0],dl
   140047338:	rex.RXB add BYTE PTR [r13+0x0],r8b
   14004733c:	push   rsp
   14004733d:	add    BYTE PTR [rbx+0x0],al
   140047340:	rex.WR add BYTE PTR [rdx+0x0],r10b
   140047344:	push   rsi
   140047345:	add    BYTE PTR [rbp+0x0],al
   140047348:	push   rdx
   140047349:	add    BYTE PTR [rbx+0x0],dl
   14004734c:	rex.WB add BYTE PTR [r15+0x0],cl
   140047350:	rex.WRX add BYTE PTR [rax],r8b
   140047353:	add    BYTE PTR [rax],al
   140047355:	add    BYTE PTR [rax],al
   140047357:	add    BYTE PTR [rbx+0x0],al
   14004735a:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14004735e:	pop    rdi
   14004735f:	add    BYTE PTR [rax+0x0],dl
   140047362:	push   rdx
   140047363:	add    BYTE PTR [rdi+0x0],cl
   140047366:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14004736a:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14004736e:	push   rdx
   14004736f:	add    BYTE PTR [rdi+0x0],bl
   140047372:	push   rax
   140047373:	add    BYTE PTR [rcx+0x0],al
   140047376:	push   rsp
   140047377:	add    BYTE PTR [rax+0x0],cl
   14004737a:	add    BYTE PTR [rax],al
   14004737c:	add    BYTE PTR [rax],al
   14004737e:	add    BYTE PTR [rax],al
   140047380:	rex.XB add BYTE PTR [r15+0x0],cl
   140047384:	push   rdx
   140047385:	add    BYTE PTR [rdi+0x0],bl
   140047388:	rex.WR add BYTE PTR [rcx+0x0],r9b
   14004738c:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   140047390:	pop    rdi
   140047391:	add    BYTE PTR [rax+0x0],dl
   140047394:	push   rdx
   140047395:	add    BYTE PTR [rdi+0x0],cl
   140047398:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14004739c:	rex.WR add BYTE PTR [rcx+0x0],r9b
   1400473a0:	rex.WRX add BYTE PTR [rdi+0x0],r8b
   1400473a4:	add    BYTE PTR [rax],al
   1400473a6:	add    BYTE PTR [rax],al
   1400473a8:	and    al,BYTE PTR [rax]
   1400473aa:	and    eax,0x22007300
   1400473af:	add    BYTE PTR [rax],al
   1400473b1:	add    BYTE PTR [rax],al
   1400473b3:	add    BYTE PTR [rax],dh
   1400473b5:	add    BYTE PTR [rax],al
   1400473b7:	add    BYTE PTR [rbx+0x0],al
   1400473ba:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   1400473be:	pop    rdi
   1400473bf:	add    BYTE PTR [rdi+0x0],al
   1400473c2:	rex.XB add BYTE PTR [r15+0x0],bl
   1400473c6:	push   rax
   1400473c7:	add    BYTE PTR [rdx+0x0],dl
   1400473ca:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   1400473ce:	rex.WB add BYTE PTR [r8+rax*1+0x49],cl
   1400473d3:	add    BYTE PTR [rsi+0x0],cl
   1400473d6:	rex.RXB add BYTE PTR [r8],r8b
   1400473d9:	add    BYTE PTR [rax],al
   1400473db:	add    BYTE PTR [rax],al
   1400473dd:	add    BYTE PTR [rax],al
   1400473df:	add    BYTE PTR [rdx],ah
   1400473e1:	add    BYTE PTR [rip+0x22007300],ah        # 0x16204e6e7
   1400473e7:	add    BYTE PTR [rax],ah
   1400473e9:	add    BYTE PTR [rip+0x7300],ah        # 0x14004e6ef
   1400473ef:	add    BYTE PTR [rsi+0x0],dl
   1400473f2:	push   rbx
   1400473f3:	add    BYTE PTR [rax+0x0],dl
   1400473f6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400473fa:	data16 add BYTE PTR [rbx+0x0],al
   1400473fe:	outs   dx,DWORD PTR ds:[rsi]
   1400473ff:	add    BYTE PTR [rdx+0x0],dh
   140047402:	push   rax
   140047403:	add    BYTE PTR [rdx+0x0],dh
   140047406:	outs   dx,DWORD PTR ds:[rsi]
   140047407:	add    BYTE PTR [rsi+0x0],ah
   14004740a:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14004740f:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   14004741f:	add    BYTE PTR [rax-0x3c],bh
   140047422:	add    al,0x40
   140047424:	add    DWORD PTR [rax],eax
   140047426:	add    BYTE PTR [rax],al
   140047428:	xor    al,0xf6
   14004742a:	add    DWORD PTR [rax+0x1],eax
   14004742d:	add    BYTE PTR [rax],al
   14004742f:	add    BYTE PTR [rsi+rsi*8+0x1],ch
   140047433:	rex add DWORD PTR [rax],eax
   140047436:	add    BYTE PTR [rax],al
   140047438:	jl     0x140047430
   14004743a:	add    DWORD PTR [rax+0x1],eax
   14004743d:	add    BYTE PTR [rax],al
   14004743f:	add    BYTE PTR [rax+0x14001f7],al
   140047445:	add    BYTE PTR [rax],al
   140047447:	add    BYTE PTR [rax-0x9],bh
   14004744a:	add    DWORD PTR [rax+0x1],eax
   14004744d:	add    BYTE PTR [rax],al
   14004744f:	add    BYTE PTR [rax+0x14001f7],ch
   140047455:	add    BYTE PTR [rax],al
   140047457:	add    BYTE PTR [rax+0x14001f7],ah
   14004745d:	add    BYTE PTR [rax],al
   14004745f:	add    BYTE PTR [rax+rdi*8+0x1],dh
   140047463:	rex add DWORD PTR [rax],eax
   140047466:	add    BYTE PTR [rax],al
   140047468:	ins    BYTE PTR es:[rdi],dx
   140047469:	clc    
   14004746a:	add    DWORD PTR [rax+0x1],eax
   14004746d:	add    BYTE PTR [rax],al
   14004746f:	add    BYTE PTR [rax+rdi*8+0x14001],bl
   140047476:	add    BYTE PTR [rax],al
   140047478:	xchg   esp,eax
   140047479:	clc    
   14004747a:	add    DWORD PTR [rax+0x1],eax
   14004747d:	add    BYTE PTR [rax],al
   14004747f:	add    ah,al
   140047481:	clc    
   140047482:	add    DWORD PTR [rax+0x1],eax
   140047485:	add    BYTE PTR [rax],al
   140047487:	add    BYTE PTR [rax+rdi*8+0x14001],bh
   14004748e:	add    BYTE PTR [rax],al
   140047490:	enter  0x1f7,0x40
   140047494:	add    DWORD PTR [rax],eax
   140047496:	add    BYTE PTR [rax],al
   140047498:	in     al,0xf8
   14004749a:	add    DWORD PTR [rax+0x1],eax
   14004749d:	add    BYTE PTR [rax],al
   14004749f:	add    BYTE PTR [rdx+rdi*8+0x14001],dl
   1400474a6:	add    BYTE PTR [rax],al
   1400474a8:	pushf  
   1400474a9:	sti    
   1400474aa:	add    DWORD PTR [rax+0x1],eax
   1400474ad:	add    BYTE PTR [rax],al
   1400474af:	add    BYTE PTR [rax-0x3],cl
   1400474b2:	add    DWORD PTR [rax+0x1],eax
   1400474b5:	add    BYTE PTR [rax],al
   1400474b7:	add    BYTE PTR [rdi+0x65],al
   1400474ba:	je     0x140047510
   1400474bc:	ja     0x140047530
   1400474be:	je     0x140047507
   1400474c0:	ins    BYTE PTR es:[rdi],dx
   1400474c1:	outs   dx,DWORD PTR ds:[rsi]
   1400474c2:	(bad)
   1400474c7:	add    BYTE PTR [rsp+rbx*2+0x2e],bl
   1400474cb:	pop    rsp
   1400474cc:	rex.RXB ins BYTE PTR es:[rdi],dx
   1400474ce:	outs   dx,DWORD PTR ds:[rsi]
   1400474cf:	(bad)
   1400474d4:	push   rdx
   1400474d5:	push   rsp
   1400474d6:	xor    esi,DWORD PTR [rax]
	...
   1400474e0:	rex.WRX je 0x140047534
   1400474e3:	jne    0x14004754a
   1400474e5:	jb     0x140047560
   1400474e7:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400474e9:	outs   dx,WORD PTR ds:[rsi]
   1400474eb:	jb     0x14004755a
   1400474ed:	(bad)  
   1400474ee:	je     0x140047559
   1400474f0:	outs   dx,DWORD PTR ds:[rsi]
   1400474f1:	outs   dx,BYTE PTR ds:[rsi]
   1400474f2:	push   rsp
   1400474f3:	push   0x64616572
	...
   140047500:	rex.RXB
   140047501:	gs je  0x140047554
   140047504:	jb     0x140047575
   140047506:	movsxd eax,DWORD PTR [rcx+0x64]
   140047509:	fs jb  0x140047571
   14004750c:	jae    0x140047581
   14004750e:	sub    BYTE PTR [rsi+0x74],cl
   140047511:	push   rcx
   140047512:	jne    0x140047579
   140047514:	jb     0x14004758f
   140047516:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140047518:	outs   dx,WORD PTR ds:[rsi]
   14004751a:	jb     0x140047589
   14004751c:	(bad)  
   14004751d:	je     0x140047588
   14004751f:	outs   dx,DWORD PTR ds:[rsi]
   140047520:	outs   dx,BYTE PTR ds:[rsi]
   140047521:	push   rsp
   140047522:	push   0x64616572
   140047527:	sub    DWORD PTR [rax],esp
   140047529:	data16 (bad) 
   14004752b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x64746e00
   140047533:	ins    BYTE PTR es:[rdi],dx
   140047534:	ins    BYTE PTR es:[rdi],dx
   140047535:	add    BYTE PTR [rax],al
   140047537:	add    BYTE PTR [rdi+0x65],al
   14004753a:	je     0x140047589
   14004753c:	outs   dx,DWORD PTR ds:[rsi]
   14004753d:	fs jne 0x1400475ac
   140047540:	gs rex.W (bad) 
   140047543:	outs   dx,BYTE PTR ds:[rsi]
   140047544:	fs ins BYTE PTR es:[rdi],dx
   140047546:	sub    BYTE PTR gs:[rsi+0x74],ch
   14004754a:	fs ins BYTE PTR es:[rdi],dx
   14004754c:	ins    BYTE PTR es:[rdi],dx
   14004754d:	sub    DWORD PTR [rax],esp
   14004754f:	data16 (bad) 
   140047551:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x5a000000
   140047559:	ja     0x14004759e
   14004755b:	(bad)  
   14004755c:	ins    BYTE PTR es:[rdi],dx
   14004755d:	ins    BYTE PTR es:[rdi],dx
   14004755e:	(bad)  
   140047560:	movsxd ebp,DWORD PTR [rbx+0x52]
   140047563:	gs je  0x1400475db
   140047566:	jb     0x1400475d6
	...
   140047570:	rex.RXB
   140047571:	gs je  0x1400475c9
   140047574:	ins    DWORD PTR es:[rdi],dx
   140047575:	jae    0x1400475ca
   140047577:	jns    0x1400475ec
   140047579:	je     0x1400475e0
   14004757b:	ins    DWORD PTR es:[rdi],dx
   14004757c:	push   rsp
   14004757d:	push   0x64616572
   140047582:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140047584:	outs   dx,WORD PTR ds:[rsi]
   140047586:	jb     0x1400475f5
   140047588:	(bad)  
   140047589:	je     0x1400475f4
   14004758b:	outs   dx,DWORD PTR ds:[rsi]
   14004758c:	outs   dx,BYTE PTR ds:[rsi]
   14004758d:	add    BYTE PTR [rax],al
   14004758f:	add    BYTE PTR [rdx+0x74],dl
   140047592:	ins    BYTE PTR es:[rdi],dx
   140047593:	rex.RXB
   140047594:	gs je  0x1400475dd
   140047597:	jne    0x140047607
   140047599:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004759d:	outs   dx,BYTE PTR ds:[rsi]
   14004759e:	push   rsp
   14004759f:	(bad)  
   1400475a0:	(bad)  
   1400475a1:	ins    BYTE PTR es:[rdi],dx
   1400475a2:	imul   r14,QWORD PTR gs:[rbx+0x74],0x64616548
   1400475ab:	add    BYTE PTR [rax],al
   1400475ad:	add    BYTE PTR [rax],al
   1400475af:	add    BYTE PTR [rdi+0x65],al
   1400475b2:	je     0x140047604
   1400475b4:	jb     0x140047625
   1400475b6:	movsxd eax,DWORD PTR [rcx+0x64]
   1400475b9:	fs jb  0x140047621
   1400475bc:	jae    0x140047631
   1400475be:	sub    BYTE PTR [rdx+0x74],dl
   1400475c1:	ins    BYTE PTR es:[rdi],dx
   1400475c2:	rex.RXB
   1400475c3:	gs je  0x14004760c
   1400475c6:	jne    0x140047636
   1400475c8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400475cc:	outs   dx,BYTE PTR ds:[rsi]
   1400475cd:	push   rsp
   1400475ce:	(bad)  
   1400475cf:	(bad)  
   1400475d0:	ins    BYTE PTR es:[rdi],dx
   1400475d1:	imul   r14,QWORD PTR gs:[rbx+0x74],0x64616548
   1400475da:	sub    DWORD PTR [rax],esp
   1400475dc:	data16 (bad) 
   1400475de:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   1400475e6:	add    BYTE PTR [rax],al
   1400475e8:	rex.RX xor DWORD PTR [rsi],r13d
   1400475eb:	rex.XB
   1400475ec:	rex.WR push rdx
   1400475ee:	pop    rdi
   1400475ef:	push   rbx
   1400475f0:	push   rdi
   1400475f1:	add    BYTE PTR [rax],al
   1400475f3:	add    BYTE PTR [rax],al
   1400475f5:	add    BYTE PTR [rax],al
   1400475f7:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   1400475fb:	imul   r12,QWORD PTR fs:[rdx+0x72],0x20797261
   140047604:	data16 (bad) 
   140047606:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14004760e:	add    BYTE PTR [rax],al
   140047610:	rex.WXB add BYTE PTR [r13+0x0],al
   140047614:	push   rdx
   140047615:	add    BYTE PTR [rsi+0x0],cl
   140047618:	add    BYTE PTR [r8+rax*1+0x33],r9b
   14004761d:	add    BYTE PTR [rdx],dh
	...
   140047627:	add    BYTE PTR [rbx+0x59],dl
   14004762a:	push   rbx
   14004762b:	push   rsp
   14004762c:	rex.RB
   14004762d:	rex.WRB pop r12
   14004762f:	rex.XB jne 0x1400476a4
   140047632:	jb     0x140047699
   140047634:	outs   dx,BYTE PTR ds:[rsi]
   140047635:	je     0x14004767a
   140047637:	outs   dx,DWORD PTR ds:[rsi]
   140047638:	outs   dx,BYTE PTR ds:[rsi]
   140047639:	je     0x1400476ad
   14004763b:	outs   dx,DWORD PTR ds:[rsi]
   14004763c:	ins    BYTE PTR es:[rdi],dx
   14004763d:	push   rbx
   14004763e:	gs je  0x14004769d
   140047641:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140047643:	outs   dx,BYTE PTR ds:[rsi]
   140047644:	je     0x1400476b8
   140047646:	outs   dx,DWORD PTR ds:[rsi]
   140047647:	ins    BYTE PTR es:[rdi],dx
   140047648:	pop    rsp
   140047649:	push   rbx
   14004764a:	gs jae 0x1400476c0
   14004764d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e614d20
   140047654:	(bad)  
   140047655:	addr32 gs jb 0x1400476b5
   140047659:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004765b:	jbe    0x1400476c6
   14004765d:	jb     0x1400476ce
   14004765f:	outs   dx,BYTE PTR ds:[rsi]
   140047660:	ins    DWORD PTR es:[rdi],dx
   140047661:	outs   dx,BYTE PTR gs:[rsi]
   140047663:	je     0x140047665
   140047665:	add    BYTE PTR [rax],al
   140047667:	add    BYTE PTR [rsi+0x72],al
   14004766a:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x20797261
   140047674:	data16 (bad) 
   140047676:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14004767e:	add    BYTE PTR [rax],al
   140047680:	push   rdx
   140047681:	gs ins DWORD PTR es:[rdi],dx
   140047683:	outs   dx,DWORD PTR ds:[rsi]
   140047684:	je     0x1400476eb
   140047686:	rex.RX jb 0x1400476ee
   140047689:	imul   r12,QWORD PTR gs:[rdx+0x72],0x20797261
   140047692:	data16 (bad) 
   140047694:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14004769c:	add    BYTE PTR [rax],al
   14004769e:	add    BYTE PTR [rax],al
   1400476a0:	rex.XB jb 0x140047708
   1400476a3:	(bad)  
   1400476a4:	je     0x14004770b
   1400476a6:	push   rsp
   1400476a7:	outs   dx,DWORD PTR ds:[rsi]
   1400476a8:	outs   dx,DWORD PTR ds:[rsi]
   1400476a9:	ins    BYTE PTR es:[rdi],dx
   1400476aa:	push   0x33706c65
   1400476af:	xor    dl,BYTE PTR [rbx+0x6e]
   1400476b2:	(bad)  
   1400476b3:	jo     0x140047728
   1400476b5:	push   0x6620746f
   1400476ba:	(bad)  
   1400476bb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x534c4300
   1400476c3:	rex.WB
   1400476c4:	rex.R pop rsp
   1400476c6:	and    eax,0x6e495c73
   1400476cb:	jo     0x14004773f
   1400476cd:	outs   dx,DWORD PTR ds:[rsi]
   1400476ce:	movsxd edx,DWORD PTR [rbx+0x65]
   1400476d1:	jb     0x140047749
   1400476d3:	gs jb  0x140047709
   1400476d6:	xor    al,BYTE PTR [rax]
   1400476d8:	jnp    0x14004773e
   1400476da:	cmp    DWORD PTR [rdx+riz*2+0x38],esp
   1400476de:	xor    DWORD PTR [rdx+riz*2+0x2d],esp
   1400476e2:	cmp    BYTE PTR [rcx],dh
   1400476e4:	gs sub ax,0x3634
   1400476e9:	xor    DWORD PTR [rcx],esi
   1400476eb:	sub    eax,0x64353138
   1400476f0:	sub    eax,0x61343431
   1400476f5:	fs xor eax,0x31653232
   1400476fb:	(bad)  
   140047700:	rex.RXB
   140047701:	gs je  0x140047749
   140047704:	js     0x14004776f
   140047706:	je     0x14004774b
   140047708:	outs   dx,DWORD PTR ds:[rsi]
   140047709:	fs gs push rax
   14004770c:	jb     0x14004777d
   14004770e:	movsxd esp,DWORD PTR [rbp+0x73]
   140047711:	jae    0x140047733
   140047713:	rex.RX (bad) 
   140047715:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14004771d:	add    BYTE PTR [rax],al
   14004771f:	add    BYTE PTR [rbx+0x34],bh
   140047722:	xor    al,0x61
   140047724:	cmp    BYTE PTR [rsi],dh
   140047726:	movsxd esp,DWORD PTR [rcx+0x64]
   140047729:	sub    eax,0x65653766
   14004772e:	sub    eax,0x63393234
   140047733:	sub    eax,0x62653338
   140047738:	sub    eax,0x64633366
   14004773d:	xor    esp,DWORD PTR gs:[rdx+0x38]
   140047741:	(bad)  
   140047742:	(bad)  
   140047743:	(bad)  
   140047744:	xor    BYTE PTR [rbp+0x0],bh
   140047747:	add    BYTE PTR [rsp+rbp*2+0x6c],al
   14004774b:	push   rdx
   14004774c:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65537265
   140047755:	jb     0x1400477cd
   140047757:	gs jb  0x14004775a
   14004775a:	add    BYTE PTR [rax],al
   14004775c:	add    BYTE PTR [rax],al
   14004775e:	add    BYTE PTR [rax],al
   140047760:	(bad)
   140047764:	add    DWORD PTR [rax],eax
   140047766:	add    BYTE PTR [rax],al
   140047768:	(bad)  
   140047769:	sub    BYTE PTR [rdx],al
   14004776b:	rex add DWORD PTR [rax],eax
   14004776e:	add    BYTE PTR [rax],al
   140047770:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140047772:	(bad)  
   140047773:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14004777c:	add    BYTE PTR [rax],al
   14004777e:	add    BYTE PTR [rax],al
   140047780:	rex.RXB
   140047781:	gs je  0x1400477d4
   140047784:	jb     0x1400477f5
   140047786:	movsxd eax,DWORD PTR [rcx+0x64]
   140047789:	fs jb  0x1400477f1
   14004778c:	jae    0x140047801
   14004778e:	add    BYTE PTR [rax],al
   140047790:	rex.WXB
   140047791:	gs jb  0x140047802
   140047794:	gs ins BYTE PTR es:[rdi],dx
   140047796:	xor    esi,DWORD PTR [rdx]
	...
   1400477a0:	push   rbx
   1400477a1:	gs je  0x1400477f8
   1400477a4:	ja     0x140047818
   1400477a6:	je     0x1400477ef
   1400477a8:	ins    BYTE PTR es:[rdi],dx
   1400477a9:	outs   dx,DWORD PTR ds:[rsi]
   1400477aa:	(bad)
   1400477af:	add    BYTE PTR [rdi+0x65],al
   1400477b2:	je     0x140047801
   1400477b4:	outs   dx,DWORD PTR ds:[rsi]
   1400477b5:	fs jne 0x140047824
   1400477b8:	gs rex.W (bad) 
   1400477bb:	outs   dx,BYTE PTR ds:[rsi]
   1400477bc:	fs ins BYTE PTR es:[rdi],dx
   1400477be:	gs push rdi
   1400477c0:	add    BYTE PTR [rax],al
   1400477c2:	add    BYTE PTR [rax],al
   1400477c4:	rex.WRX push rsp
   1400477c6:	rex.R
   1400477c7:	rex.WR
   1400477c8:	rex.WR add BYTE PTR [rax],r8b
   1400477cb:	add    BYTE PTR [rax],al
   1400477cd:	add    BYTE PTR [rax],al
   1400477cf:	add    BYTE PTR [rsi+0x72],al
   1400477d2:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   1400477dc:	add    BYTE PTR [rax],al
   1400477de:	add    BYTE PTR [rax],al
   1400477e0:	imul   r14d,DWORD PTR [rbx+0x61],0x43656c62
   1400477e8:	rex.WR push rdx
   1400477ea:	push   rax
   1400477eb:	jb     0x14004785c
   1400477ed:	imul   bp,WORD PTR [rcx+rbp*2+0x6e],0x67
   1400477f4:	add    BYTE PTR [rax],al
   1400477f6:	add    BYTE PTR [rax],al
   1400477f8:	rex.RXB
   1400477f9:	gs je  0x140047841
   1400477fc:	outs   dx,BYTE PTR ds:[rsi]
   1400477fd:	jbe    0x140047868
   1400477ff:	jb     0x140047870
   140047801:	outs   dx,BYTE PTR ds:[rsi]
   140047802:	ins    DWORD PTR es:[rdi],dx
   140047803:	outs   dx,BYTE PTR gs:[rsi]
   140047805:	je     0x14004785d
   140047807:	(bad)  
   140047808:	jb     0x140047873
   14004780a:	(bad)  
   14004780b:	(bad)  
   14004780c:	ins    BYTE PTR es:[rdi],dx
   14004780d:	gs push rdi
   14004780f:	add    BYTE PTR [rdx+0x75],dl
   140047812:	outs   dx,BYTE PTR ds:[rsi]
   140047813:	push   rsp
   140047814:	imul   ebp,DWORD PTR [rbp+0x65],0x74696e49
   14004781b:	add    BYTE PTR [rax],al
   14004781d:	add    BYTE PTR [rax],al
   14004781f:	add    BYTE PTR [rdx+0x75],dl
   140047822:	outs   dx,BYTE PTR ds:[rsi]
   140047823:	push   rsp
   140047824:	imul   ebp,DWORD PTR [rbp+0x65],0x6e496e55
   14004782b:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x6f005300
   140047833:	add    BYTE PTR [rsi+0x0],ah
   140047836:	je     0x140047838
   140047838:	ja     0x14004783a
   14004783a:	(bad)  
   14004783b:	add    BYTE PTR [rdx+0x0],dh
   14004783e:	add    BYTE PTR gs:[rax+rax*1+0x57],bl
   140047843:	add    BYTE PTR [rdi+0x0],ch
   140047846:	ja     0x140047848
   140047848:	add    BYTE PTR ss:[rax+rax*1],dh
   14004784c:	xor    eax,DWORD PTR [rax]
   14004784e:	xor    al,BYTE PTR [rax]
   140047850:	outs   dx,BYTE PTR ds:[rsi]
   140047851:	add    BYTE PTR [rdi+0x0],ch
   140047854:	add    BYTE PTR fs:[rbp+0x0],ah
   140047858:	pop    rsp
   140047859:	add    BYTE PTR [rbp+0x0],cl
   14004785c:	imul   eax,DWORD PTR [rax],0x720063
   140047862:	outs   dx,DWORD PTR ds:[rsi]
   140047863:	add    BYTE PTR [rbx+0x0],dh
   140047866:	outs   dx,DWORD PTR ds:[rsi]
   140047867:	add    BYTE PTR [rsi+0x0],ah
   14004786a:	je     0x14004786c
   14004786c:	pop    rsp
   14004786d:	add    BYTE PTR [rax+0x0],dl
   140047870:	rex.XB add BYTE PTR [r8+0x0],cl
   140047874:	add    BYTE PTR gs:[rcx+0x0],ah
   140047878:	ins    BYTE PTR es:[rdi],dx
   140047879:	add    BYTE PTR [rax+rax*1+0x68],dh
   14004787d:	add    BYTE PTR [rax+rax*1+0x45],bl
   140047881:	add    BYTE PTR [rdx+0x0],dh
   140047884:	jb     0x140047886
   140047886:	outs   dx,DWORD PTR ds:[rsi]
   140047887:	add    BYTE PTR [rdx+0x0],dh
   14004788a:	push   rdx
   14004788b:	add    BYTE PTR [rbp+0x0],ah
   14004788e:	jo     0x140047890
   140047890:	outs   dx,DWORD PTR ds:[rsi]
   140047891:	add    BYTE PTR [rdx+0x0],dh
   140047894:	je     0x140047896
   140047896:	imul   eax,DWORD PTR [rax],0x67006e
   14004789c:	pop    rsp
   14004789d:	add    BYTE PTR [rax+rax*1+0x57],al
   1400478a1:	add    BYTE PTR [rax+rax*1+0x49],bl
   1400478a5:	add    BYTE PTR [rsi+0x0],ch
   1400478a8:	jae    0x1400478aa
   1400478aa:	je     0x1400478ac
   1400478ac:	(bad)  
   1400478ad:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400478b1:	add    BYTE PTR [rbp+0x0],ah
   1400478b4:	add    BYTE PTR fs:[rax],al
   1400478b7:	add    BYTE PTR [rax+rax*1+0x57],al
   1400478bb:	add    BYTE PTR [rax],dh
   1400478bd:	add    BYTE PTR [rdx],dh
   1400478bf:	add    BYTE PTR [rax],dh
   1400478c1:	add    BYTE PTR [rcx],dh
	...
   1400478cf:	add    BYTE PTR [rbx+0x0],dl
   1400478d2:	outs   dx,DWORD PTR ds:[rsi]
   1400478d3:	add    BYTE PTR [rsi+0x0],ah
   1400478d6:	je     0x1400478d8
   1400478d8:	ja     0x1400478da
   1400478da:	(bad)  
   1400478db:	add    BYTE PTR [rdx+0x0],dh
   1400478de:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   1400478e3:	add    BYTE PTR [rcx+0x0],ch
   1400478e6:	movsxd eax,DWORD PTR [rax]
   1400478e8:	jb     0x1400478ea
   1400478ea:	outs   dx,DWORD PTR ds:[rsi]
   1400478eb:	add    BYTE PTR [rbx+0x0],dh
   1400478ee:	outs   dx,DWORD PTR ds:[rsi]
   1400478ef:	add    BYTE PTR [rsi+0x0],ah
   1400478f2:	je     0x1400478f4
   1400478f4:	pop    rsp
   1400478f5:	add    BYTE PTR [rsi+0x0],dl
   1400478f8:	imul   eax,DWORD PTR [rax],0x750073
   1400478fe:	(bad)  
   1400478ff:	add    BYTE PTR [rax+rax*1+0x53],ch
   140047903:	add    BYTE PTR [rax+rax*1+0x75],dh
   140047907:	add    BYTE PTR [rax+rax*1+0x69],ah
   14004790b:	add    BYTE PTR [rdi+0x0],ch
   14004790e:	pop    rsp
   14004790f:	add    BYTE PTR [rcx],bh
   140047911:	add    BYTE PTR [rsi],ch
   140047913:	add    BYTE PTR [rax],dh
   140047915:	add    BYTE PTR [rax+rax*1+0x47],bl
   140047919:	add    BYTE PTR [rbp+0x0],ah
   14004791c:	outs   dx,BYTE PTR ds:[rsi]
   14004791d:	add    BYTE PTR [rbp+0x0],ah
   140047920:	jb     0x140047922
   140047922:	(bad)  
   140047923:	add    BYTE PTR [rax+rax*1+0x0],ch
   140047927:	add    BYTE PTR [rbp+0x0],dl
   14004792a:	jae    0x14004792c
   14004792c:	add    BYTE PTR gs:[rdx+0x0],dh
   140047930:	rex.XB add BYTE PTR [r9+0x0],spl
   140047934:	outs   dx,BYTE PTR ds:[rsi]
   140047935:	add    BYTE PTR [rcx+0x0],al
   140047938:	jne    0x14004793a
   14004793a:	je     0x14004793c
   14004793c:	outs   dx,DWORD PTR ds:[rsi]
   14004793d:	add    BYTE PTR [rbx+0x0],dl
   140047940:	add    BYTE PTR gs:[rsi+0x0],ch
   140047944:	add    BYTE PTR fs:[rbp+0x0],al
   140047948:	jb     0x14004794a
   14004794a:	jb     0x14004794c
   14004794c:	outs   dx,DWORD PTR ds:[rsi]
   14004794d:	add    BYTE PTR [rdx+0x0],dh
   140047950:	push   rdx
   140047951:	add    BYTE PTR [rbp+0x0],ah
   140047954:	jo     0x140047956
   140047956:	outs   dx,DWORD PTR ds:[rsi]
   140047957:	add    BYTE PTR [rdx+0x0],dh
   14004795a:	je     0x14004795c
   14004795c:	add    BYTE PTR [rax],al
   14004795e:	add    BYTE PTR [rax],al
   140047960:	rex.W
   140047961:	rex.WXB
   140047962:	rex.WR
   140047963:	rex.WRB pop r12
   140047965:	push   rbx
   140047966:	outs   dx,DWORD PTR ds:[rsi]
   140047967:	data16 je 0x1400479e1
   14004796a:	(bad)  
   14004796b:	jb     0x1400479d2
   14004796d:	pop    rsp
   14004796e:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140047976:	je     0x1400479d4
   140047978:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004797a:	je     0x1400479e1
   14004797c:	jb     0x1400479ec
   14004797e:	gs je  0x1400479a1
   140047981:	rex.RB js 0x1400479f4
   140047984:	ins    BYTE PTR es:[rdi],dx
   140047985:	outs   dx,DWORD PTR ds:[rsi]
   140047986:	jb     0x1400479ed
   140047988:	jb     0x1400479e6
   14004798a:	push   rdx
   14004798b:	imul   esi,DWORD PTR gs:[ebx+0x74],0x69746172
   140047994:	outs   dx,DWORD PTR ds:[rsi]
   140047995:	outs   dx,BYTE PTR ds:[rsi]
   140047996:	pop    rsp
   140047997:	imul   r12d,DWORD PTR [rdi+0x69],0x506c6174
   14004799f:	jb     0x140047a10
   1400479a1:	fs jne 0x140047a07
   1400479a4:	je     0x1400479ef
   1400479a6:	add    BYTE PTR [rax+rax*1+0x77],r12b
   1400479ab:	add    BYTE PTR [rdx],dh
   1400479ad:	add    BYTE PTR [rax],dh
   1400479af:	add    BYTE PTR [rsi],ch
   1400479b1:	add    BYTE PTR [rbp+0x0],ah
   1400479b4:	js     0x1400479b6
   1400479b6:	add    BYTE PTR gs:[rax],ah
   1400479b9:	add    BYTE PTR [rip+0x20007800],ch        # 0x16004f1bf
   1400479bf:	add    BYTE PTR [rip+0x20007300],ch        # 0x16004ecc5
   1400479c5:	add    BYTE PTR [rip+0x36004900],ah        # 0x17604c2cb
   1400479cb:	add    BYTE PTR [rax+rax*1],dh
   1400479ce:	jne    0x1400479d0
	...
   1400479e0:	rex.WRXB add BYTE PTR [r10],r15b
   1400479e3:	add    BYTE PTR [rbx+0x0],dl
   1400479e6:	pop    rcx
   1400479e7:	add    BYTE PTR [rdi+0x0],al
   1400479ea:	cmp    al,BYTE PTR [rax]
   1400479ec:	rex.X add BYTE PTR [rcx+0x0],al
   1400479f0:	add    BYTE PTR [rdx],r15b
   1400479f3:	add    BYTE PTR [rax+0x0],dl
   1400479f6:	sub    BYTE PTR [rax],al
   1400479f8:	add    BYTE PTR [r11],dil
   1400479fb:	add    BYTE PTR [rbx],bh
   1400479fd:	add    BYTE PTR [rdi+0x0],al
   140047a00:	add    BYTE PTR [r11],dil
   140047a03:	add    BYTE PTR [rbx],bh
   140047a05:	add    BYTE PTR [rbx],bh
   140047a07:	add    BYTE PTR [rbx+0x0],dl
   140047a0a:	pop    rcx
   140047a0b:	add    BYTE PTR [rcx],ch
   140047a0d:	add    BYTE PTR [rax],ch
   140047a0f:	add    BYTE PTR [rcx+0x0],al
   140047a12:	cmp    eax,DWORD PTR [rax]
   140047a14:	cmp    eax,DWORD PTR [rax]
   140047a16:	rex.RXB add BYTE PTR [r9+0x0],r8b
   140047a1a:	cmp    eax,DWORD PTR [rax]
   140047a1c:	cmp    eax,DWORD PTR [rax]
   140047a1e:	cmp    eax,DWORD PTR [rax]
   140047a20:	rex.X add BYTE PTR [rcx+0x0],al
   140047a24:	sub    DWORD PTR [rax],eax
   140047a26:	add    BYTE PTR [rax],al
   140047a28:	pop    rsp
   140047a29:	add    BYTE PTR [rax+0x0],dl
   140047a2c:	jb     0x140047a2e
   140047a2e:	outs   dx,DWORD PTR ds:[rsi]
   140047a2f:	add    BYTE PTR [rax+0x0],dh
   140047a32:	add    BYTE PTR gs:[rdx+0x0],dh
   140047a36:	je     0x140047a38
   140047a38:	imul   eax,DWORD PTR [rax],0x730065
   140047a3e:	add    BYTE PTR [rax],al
   140047a40:	push   rax
   140047a41:	add    BYTE PTR [rdx+0x0],dh
   140047a44:	outs   dx,DWORD PTR ds:[rsi]
   140047a45:	add    BYTE PTR [rsi+0x0],ah
   140047a48:	imul   eax,DWORD PTR [rax],0x69006c
   140047a4e:	outs   dx,BYTE PTR ds:[rsi]
   140047a4f:	add    BYTE PTR [rdi+0x0],ah
   140047a52:	and    BYTE PTR [rax],al
   140047a54:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140047a58:	outs   dx,BYTE PTR ds:[rsi]
   140047a59:	add    BYTE PTR [rcx+0x0],ch
   140047a5c:	je     0x140047a5e
   140047a5e:	outs   dx,DWORD PTR ds:[rsi]
   140047a5f:	add    BYTE PTR [rdx+0x0],dh
   140047a62:	and    BYTE PTR [rax],al
   140047a64:	push   rbx
   140047a65:	add    BYTE PTR [rbp+0x0],ah
   140047a68:	jb     0x140047a6a
   140047a6a:	jbe    0x140047a6c
   140047a6c:	imul   eax,DWORD PTR [rax],0x650063
   140047a72:	add    BYTE PTR [rax],al
   140047a74:	add    BYTE PTR [rax],al
   140047a76:	add    BYTE PTR [rax],al
   140047a78:	push   rsi
   140047a79:	push   rbx
   140047a7a:	push   rax
   140047a7b:	gs jb  0x140047ae4
   140047a7e:	push   rbx
   140047a7f:	jb     0x140047af7
   140047a81:	and    BYTE PTR [rbx+0x44],dl
   140047a84:	and    BYTE PTR [rcx+0x6e],ch
   140047a87:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   140047a8f:	je     0x140047afa
   140047a91:	outs   dx,DWORD PTR ds:[rsi]
   140047a92:	outs   dx,BYTE PTR ds:[rsi]
   140047a93:	and    BYTE PTR [rsi+0x61],ah
   140047a96:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65
   140047a9e:	add    BYTE PTR [rax],al
   140047aa0:	push   rbx
   140047aa1:	add    BYTE PTR [rbp+0x0],ah
   140047aa4:	movsxd eax,DWORD PTR [rax]
   140047aa6:	jne    0x140047aa8
   140047aa8:	jb     0x140047aaa
   140047aaa:	imul   eax,DWORD PTR [rax],0x790074
	...
   140047ab8:	pop    rsp
   140047ab9:	pop    rsp
   140047aba:	cs pop rsp
   140047abc:	jo     0x140047b27
   140047abe:	jo     0x140047b25
   140047ac0:	pop    rsp
   140047ac1:	push   rsi
   140047ac2:	push   rbx
   140047ac3:	push   rax
   140047ac4:	gs jb  0x140047b2d
   140047ac7:	push   rax
   140047ac8:	imul   esi,DWORD PTR [rax+0x65],0x0
   140047acf:	add    BYTE PTR [rax+0x0],dl
   140047ad2:	jb     0x140047ad4
   140047ad4:	outs   dx,DWORD PTR ds:[rsi]
   140047ad5:	add    BYTE PTR [rsi+0x0],ah
   140047ad8:	imul   eax,DWORD PTR [rax],0x65006c
   140047ade:	and    BYTE PTR [rax],al
   140047ae0:	add    BYTE PTR [r11+0x0],spl
   140047ae4:	jb     0x140047ae6
   140047ae6:	outs   dx,DWORD PTR ds:[rsi]
   140047ae7:	add    BYTE PTR [rbx+0x0],dh
   140047aea:	jae    0x140047aec
   140047aec:	and    BYTE PTR [rax],al
   140047aee:	push   rsp
   140047aef:	add    BYTE PTR [rbx+0x0],dl
   140047af2:	and    BYTE PTR [rax],al
   140047af4:	push   rbx
   140047af5:	add    BYTE PTR [rbp+0x0],ah
   140047af8:	jae    0x140047afa
   140047afa:	jae    0x140047afc
   140047afc:	imul   eax,DWORD PTR [rax],0x6e006f
   140047b02:	jae    0x140047b04
   140047b04:	add    BYTE PTR [rax],al
   140047b06:	add    BYTE PTR [rax],al
   140047b08:	add    BYTE PTR [r8+rax*1+0x6c],bpl
   140047b0d:	add    BYTE PTR [rax],ah
   140047b0f:	add    BYTE PTR [rcx+0x0],al
   140047b12:	movsxd eax,DWORD PTR [rax]
   140047b14:	movsxd eax,DWORD PTR [rax]
   140047b16:	add    BYTE PTR gs:[rbx+0x0],dh
   140047b1a:	jae    0x140047b1c
   140047b1c:	add    BYTE PTR [rax],al
   140047b1e:	add    BYTE PTR [rax],al
   140047b20:	rex.WB add BYTE PTR [r14+0x0],bpl
   140047b24:	je     0x140047b26
   140047b26:	add    BYTE PTR gs:[rdx+0x0],dh
   140047b2a:	jbe    0x140047b2c
   140047b2c:	(bad)  
   140047b2d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140047b31:	add    BYTE PTR [rbx+0x0],dl
   140047b34:	(bad)  
   140047b35:	add    BYTE PTR [rbp+0x0],ch
   140047b38:	jo     0x140047b3a
   140047b3a:	ins    BYTE PTR es:[rdi],dx
   140047b3b:	add    BYTE PTR [rcx+0x0],ch
   140047b3e:	outs   dx,BYTE PTR ds:[rsi]
   140047b3f:	add    BYTE PTR [rdi+0x0],ah
   140047b42:	add    BYTE PTR [rax],al
   140047b44:	add    BYTE PTR [rax],al
   140047b46:	add    BYTE PTR [rax],al
   140047b48:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140047b4c:	movsxd eax,DWORD PTR [rax]
   140047b4e:	imul   eax,DWORD PTR [rax],0x20
   140047b51:	add    BYTE PTR [rax+0x0],dl
   140047b54:	jb     0x140047b56
   140047b56:	outs   dx,DWORD PTR ds:[rsi]
   140047b57:	add    BYTE PTR [rsi+0x0],ah
   140047b5a:	imul   eax,DWORD PTR [rax],0x65006c
   140047b60:	jb     0x140047b62
   140047b62:	and    BYTE PTR [rax],al
   140047b64:	rex.WRB add BYTE PTR [r13+0x0],r12b
   140047b68:	ins    DWORD PTR es:[rdi],dx
   140047b69:	add    BYTE PTR [rdi+0x0],ch
   140047b6c:	jb     0x140047b6e
   140047b6e:	jns    0x140047b70
	...
   140047b80:	add    ch,0x4
   140047b83:	rex add DWORD PTR [rax],eax
   140047b86:	add    BYTE PTR [rax],al
   140047b88:	mov    eax,0x1400243
   140047b8d:	add    BYTE PTR [rax],al
   140047b8f:	add    al,al
   140047b91:	rex.XB add al,BYTE PTR [r8+0x1]
   140047b95:	add    BYTE PTR [rax],al
   140047b97:	add    ah,dh
   140047b99:	rex.XB add al,BYTE PTR [r8+0x1]
   140047b9d:	add    BYTE PTR [rax],al
   140047b9f:	add    BYTE PTR [rax+0x140023b],al
   140047ba5:	add    BYTE PTR [rax],al
   140047ba7:	add    al,dl
   140047ba9:	cmp    eax,DWORD PTR [rdx]
   140047bab:	rex add DWORD PTR [rax],eax
   140047bae:	add    BYTE PTR [rax],al
   140047bb0:	mov    al,0x3d
   140047bb2:	add    al,BYTE PTR [rax+0x1]
   140047bb5:	add    BYTE PTR [rax],al
   140047bb7:	add    BYTE PTR [rdi+rdi*1+0x14002],ah
   140047bbe:	add    BYTE PTR [rax],al
   140047bc0:	int3   
   140047bc1:	(bad)  
   140047bc2:	add    al,BYTE PTR [rax+0x1]
   140047bc5:	add    BYTE PTR [rax],al
   140047bc7:	add    al,ch
   140047bc9:	(bad)  
   140047bca:	add    al,BYTE PTR [rax+0x1]
   140047bcd:	add    BYTE PTR [rax],al
   140047bcf:	add    BYTE PTR [rdx+rsi*2+0x1],ch
   140047bd3:	rex add DWORD PTR [rax],eax
   140047bd6:	add    BYTE PTR [rax],al
   140047bd8:	add    BYTE PTR [rax],dl
   140047bda:	add    BYTE PTR [rax+0x1],al
   140047bdd:	add    BYTE PTR [rax],al
   140047bdf:	add    ah,bh
   140047be1:	add    al,BYTE PTR [r8+0x1]
   140047be5:	add    BYTE PTR [rax],al
   140047be7:	add    al,bh
   140047be9:	(bad)  
   140047bea:	add    al,BYTE PTR [rax+0x1]
   140047bed:	add    BYTE PTR [rax],al
   140047bef:	add    BYTE PTR [rax],bh
   140047bf1:	mov    BYTE PTR [rax+rax*2],0x1
   140047bf5:	add    BYTE PTR [rax],al
   140047bf7:	add    BYTE PTR [rax+0x1400243],bh
   140047bfd:	add    BYTE PTR [rax],al
   140047bff:	add    al,al
   140047c01:	rex.XB add al,BYTE PTR [r8+0x1]
   140047c05:	add    BYTE PTR [rax],al
   140047c07:	add    ah,dh
   140047c09:	rex.XB add al,BYTE PTR [r8+0x1]
   140047c0d:	add    BYTE PTR [rax],al
   140047c0f:	add    BYTE PTR [rsp+rbp*2],ah
   140047c12:	add    al,BYTE PTR [rax+0x1]
   140047c15:	add    BYTE PTR [rax],al
   140047c17:	add    BYTE PTR [rsp+rbp*2],ah
   140047c1a:	add    al,BYTE PTR [rax+0x1]
   140047c1d:	add    BYTE PTR [rax],al
   140047c1f:	add    BYTE PTR [rsp+rbp*2],ah
   140047c22:	add    al,BYTE PTR [rax+0x1]
   140047c25:	add    BYTE PTR [rax],al
   140047c27:	add    BYTE PTR [rsp+rbp*2],ah
   140047c2a:	add    al,BYTE PTR [rax+0x1]
   140047c2d:	add    BYTE PTR [rax],al
   140047c2f:	add    BYTE PTR [rsp+rbp*2],ah
   140047c32:	add    al,BYTE PTR [rax+0x1]
   140047c35:	add    BYTE PTR [rax],al
   140047c37:	add    BYTE PTR [rsp+rbp*2],ah
   140047c3a:	add    al,BYTE PTR [rax+0x1]
   140047c3d:	add    BYTE PTR [rax],al
   140047c3f:	add    BYTE PTR [rsp+rbp*2],ah
   140047c42:	add    al,BYTE PTR [rax+0x1]
   140047c45:	add    BYTE PTR [rax],al
   140047c47:	add    BYTE PTR [rax],al
   140047c49:	adc    BYTE PTR [rax],al
   140047c4b:	rex add DWORD PTR [rax],eax
   140047c4e:	add    BYTE PTR [rax],al
   140047c50:	adc    al,0x46
   140047c52:	add    al,BYTE PTR [rax+0x1]
   140047c55:	add    BYTE PTR [rax],al
   140047c57:	add    BYTE PTR [rax+0x44],bh
   140047c5a:	add    al,BYTE PTR [rax+0x1]
   140047c5d:	add    BYTE PTR [rax],al
   140047c5f:	add    BYTE PTR [rdi+0x70],ch
   140047c62:	gs jb  0x140047cc6
   140047c65:	je     0x140047cd6
   140047c67:	jb     0x140047c89
   140047c69:	push   rbx
   140047c6a:	rex.XB
   140047c6b:	rex.WRB pop r15
   140047c6d:	rex.W
   140047c6e:	rex.B
   140047c6f:	rex.WRX
   140047c70:	rex.R
   140047c71:	rex.WR
   140047c72:	sub    BYTE PTR [r9],r13b
   140047c75:	add    BYTE PTR [rax],al
   140047c77:	add    BYTE PTR [rsi+0x0],dl
   140047c7a:	push   rbx
   140047c7b:	add    BYTE PTR [rax+0x0],dl
   140047c7e:	add    BYTE PTR gs:[rdx+0x0],dh
   140047c82:	data16 add BYTE PTR [rbx+0x0],dl
   140047c86:	jb     0x140047c88
   140047c88:	jbe    0x140047c8a
   140047c8a:	add    BYTE PTR cs:[rbp+0x0],ah
   140047c8e:	js     0x140047c90
   140047c90:	add    BYTE PTR gs:[rax],al
   140047c93:	add    BYTE PTR [rax],al
   140047c95:	add    BYTE PTR [rax],al
   140047c97:	add    BYTE PTR [rax],bl
   140047c99:	leave  
   140047c9a:	add    al,0x40
   140047c9c:	add    DWORD PTR [rax],eax
   140047c9e:	add    BYTE PTR [rax],al
   140047ca0:	push   0x1400256
   140047ca5:	add    BYTE PTR [rax],al
   140047ca7:	add    BYTE PTR [rax+0x14004c9],al
   140047cad:	add    BYTE PTR [rax],al
   140047caf:	add    BYTE PTR [rdi+rax*1+0x1],ah
   140047cb3:	rex add DWORD PTR [rax],eax
   140047cb6:	add    BYTE PTR [rax],al
   140047cb8:	jl     0x140047cc1
   140047cba:	add    DWORD PTR [rax+0x1],eax
   140047cbd:	add    BYTE PTR [rax],al
   140047cbf:	add    ah,bh
   140047cc1:	push   rdi
   140047cc2:	add    al,BYTE PTR [rax+0x1]
   140047cc5:	add    BYTE PTR [rax],al
   140047cc7:	add    BYTE PTR [rax],ch
   140047cc9:	retf   0x4004
   140047ccc:	add    DWORD PTR [rax],eax
   140047cce:	add    BYTE PTR [rax],al
   140047cd0:	fs (bad) 
   140047cd2:	add    DWORD PTR [rax+0x1],eax
   140047cd5:	add    BYTE PTR [rax],al
   140047cd7:	add    BYTE PTR [rdi+rax*1+0x1],bh
   140047cdb:	rex add DWORD PTR [rax],eax
   140047cde:	add    BYTE PTR [rax],al
   140047ce0:	and    al,0x5a
   140047ce2:	add    al,BYTE PTR [rax+0x1]
   140047ce5:	add    BYTE PTR [rax],al
   140047ce7:	add    BYTE PTR [rax],dh
   140047ce9:	add    BYTE PTR [rax+0x0],bh
   140047cec:	and    eax,0x78006c00
   140047cf1:	add    BYTE PTR [rax],al
   140047cf3:	add    BYTE PTR [rsi],ch
   140047cf5:	jbe    0x140047d6a
   140047cf7:	movsxd ebp,DWORD PTR [rdi+0x76]
   140047cfa:	add    BYTE PTR [rax],al
   140047cfc:	add    BYTE PTR [rax],al
   140047cfe:	add    BYTE PTR [rax],al
   140047d00:	cs jbe 0x140047d76
   140047d03:	movsxd ebp,DWORD PTR [rdi+0x76]
   140047d06:	ins    DWORD PTR es:[rdi],dx
   140047d07:	jo     0x140047d09
   140047d09:	add    BYTE PTR [rax],al
   140047d0b:	add    BYTE PTR [rax],al
   140047d0d:	add    BYTE PTR [rax],al
   140047d0f:	add    BYTE PTR [rsi],ch
   140047d11:	push   rsi
   140047d12:	push   rbx
   140047d13:	rex.WB
   140047d14:	rex.WRX push rbx
   140047d16:	push   rsp
   140047d17:	push   rdx
	...
   140047d20:	and    al,BYTE PTR [rip+0x11993]        # 0x1400596b9
   140047d26:	add    BYTE PTR [rax],al
   140047d28:	enter  0x4d8,0x0
	...
   140047d34:	add    DWORD PTR [rax],eax
   140047d36:	add    BYTE PTR [rax],al
   140047d38:	loopne 0x140047d11
   140047d3a:	add    al,0x0
	...
   140047d50:	and    al,BYTE PTR [rip+0x21993]        # 0x1400696e9
   140047d56:	add    BYTE PTR [rax],al
   140047d58:	clc    
   140047d59:	xlat   BYTE PTR ds:[rbx]
   140047d5a:	add    al,0x0
	...
   140047d64:	add    DWORD PTR [rax],eax
   140047d66:	add    BYTE PTR [rax],al
   140047d68:	or     al,bl
   140047d6a:	add    al,0x0
	...
   140047d80:	and    al,BYTE PTR [rip+0x21993]        # 0x140069719
   140047d86:	add    BYTE PTR [rax],al
   140047d88:	and    al,bl
   140047d8a:	add    al,0x0
	...
   140047d94:	add    DWORD PTR [rax],eax
   140047d96:	add    BYTE PTR [rax],al
   140047d98:	xor    al,bl
   140047d9a:	add    al,0x0
	...
   140047db0:	and    al,BYTE PTR [rip+0x21993]        # 0x140069749
   140047db6:	add    BYTE PTR [rax],al
   140047db8:	rex.W fadd DWORD PTR [rax+rax*1]
	...
   140047dc4:	add    al,0x0
   140047dc6:	add    BYTE PTR [rax],al
   140047dc8:	pop    rax
   140047dc9:	fadd   DWORD PTR [rax+rax*1]
   140047dcc:	and    BYTE PTR [rax],al
	...
   140047dde:	add    BYTE PTR [rax],al
   140047de0:	and    al,BYTE PTR [rip+0x21993]        # 0x140069779
   140047de6:	add    BYTE PTR [rax],al
   140047de8:	mov    al,bl
   140047dea:	add    al,0x0
	...
   140047df4:	add    al,0x0
   140047df6:	add    BYTE PTR [rax],al
   140047df8:	cwde   
   140047df9:	fadd   DWORD PTR [rax+rax*1]
   140047dfc:	and    BYTE PTR [rax],al
	...
   140047e0e:	add    BYTE PTR [rax],al
   140047e10:	and    al,BYTE PTR [rip+0x11993]        # 0x1400597a9
   140047e16:	add    BYTE PTR [rax],al
   140047e18:	enter  0x4d8,0x0
	...
   140047e24:	add    eax,DWORD PTR [rax]
   140047e26:	add    BYTE PTR [rax],al
   140047e28:	rcr    al,1
   140047e2a:	add    al,0x0
   140047e2c:	and    BYTE PTR [rax],al
	...
   140047e3e:	add    BYTE PTR [rax],al
   140047e40:	and    al,BYTE PTR [rip+0x51993]        # 0x1400997d9
   140047e46:	add    BYTE PTR [rax],al
   140047e48:	add    cl,bl
   140047e4a:	add    al,0x0
   140047e4c:	add    al,BYTE PTR [rax]
   140047e4e:	add    BYTE PTR [rax],al
   140047e50:	sub    cl,bl
   140047e52:	add    al,0x0
   140047e54:	or     al,0x0
   140047e56:	add    BYTE PTR [rax],al
   140047e58:	js     0x140047e33
   140047e5a:	add    al,0x0
   140047e5c:	sub    BYTE PTR [rax],al
	...
   140047e6e:	add    BYTE PTR [rax],al
   140047e70:	and    al,BYTE PTR [rip+0x21993]        # 0x140069809
   140047e76:	add    BYTE PTR [rax],al
   140047e78:	sbb    al,0xf3
   140047e7a:	add    al,0x0
   140047e7c:	add    DWORD PTR [rax],eax
   140047e7e:	add    BYTE PTR [rax],al
   140047e80:	sbb    dl,bl
   140047e82:	add    al,0x0
   140047e84:	add    eax,0x40000000
   140047e89:	fiadd  DWORD PTR [rax+rax*1]
   140047e8c:	and    BYTE PTR [rax],al
	...
   140047e9e:	add    BYTE PTR [rax],al
   140047ea0:	and    al,BYTE PTR [rip+0x21993]        # 0x140069839
   140047ea6:	add    BYTE PTR [rax],al
   140047ea8:	sbb    al,0xf3
   140047eaa:	add    al,0x0
   140047eac:	add    DWORD PTR [rax],eax
   140047eae:	add    BYTE PTR [rax],al
   140047eb0:	xchg   esp,eax
   140047eb1:	fiadd  DWORD PTR [rax+rax*1]
   140047eb4:	add    eax,0xbc000000
   140047eb9:	fiadd  DWORD PTR [rax+rax*1]
   140047ebc:	and    BYTE PTR [rax],al
	...
   140047ece:	add    BYTE PTR [rax],al
   140047ed0:	and    al,BYTE PTR [rip+0x51993]        # 0x140099869
   140047ed6:	add    BYTE PTR [rax],al
   140047ed8:	or     al,0xdb
   140047eda:	add    al,0x0
   140047edc:	add    al,BYTE PTR [rax]
   140047ede:	add    BYTE PTR [rax],al
   140047ee0:	xor    al,0xdb
   140047ee2:	add    al,0x0
   140047ee4:	or     al,0x0
   140047ee6:	add    BYTE PTR [rax],al
   140047ee8:	test   bl,bl
   140047eea:	add    al,0x0
   140047eec:	sub    BYTE PTR [rax],al
	...
   140047efe:	add    BYTE PTR [rax],al
   140047f00:	and    al,BYTE PTR [rip+0x21993]        # 0x140069899
   140047f06:	add    BYTE PTR [rax],al
   140047f08:	sbb    al,0xf3
   140047f0a:	add    al,0x0
   140047f0c:	add    DWORD PTR [rax],eax
   140047f0e:	add    BYTE PTR [rax],al
   140047f10:	sub    al,0xdc
   140047f12:	add    al,0x0
   140047f14:	add    eax,0x54000000
   140047f19:	fadd   QWORD PTR [rax+rax*1]
   140047f1c:	and    BYTE PTR [rax],al
	...
   140047f2e:	add    BYTE PTR [rax],al
   140047f30:	and    al,BYTE PTR [rip+0x21993]        # 0x1400698c9
   140047f36:	add    BYTE PTR [rax],al
   140047f38:	sbb    al,0xf3
   140047f3a:	add    al,0x0
   140047f3c:	add    DWORD PTR [rax],eax
   140047f3e:	add    BYTE PTR [rax],al
   140047f40:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140047f41:	fadd   QWORD PTR [rax+rax*1]
   140047f44:	add    eax,0xcc000000
   140047f49:	fadd   QWORD PTR [rax+rax*1]
   140047f4c:	and    BYTE PTR [rax],al
	...
   140047f5e:	add    BYTE PTR [rax],al
   140047f60:	and    al,BYTE PTR [rip+0x21993]        # 0x1400698f9
   140047f66:	add    BYTE PTR [rax],al
   140047f68:	sbb    al,0xf3
   140047f6a:	add    al,0x0
   140047f6c:	add    DWORD PTR [rax],eax
   140047f6e:	add    BYTE PTR [rax],al
   140047f70:	and    ch,bl
   140047f72:	add    al,0x0
   140047f74:	add    eax,0x48000000
   140047f79:	fld    QWORD PTR [rax+rax*1]
   140047f7c:	xor    BYTE PTR [rax],al
	...
   140047f8e:	add    BYTE PTR [rax],al
   140047f90:	and    al,BYTE PTR [rip+0x71993]        # 0x1400b9929
   140047f96:	add    BYTE PTR [rax],al
   140047f98:	rcr    ch,0x4
	...
   140047fa3:	add    BYTE PTR [rip+0xfffffffff8000000],cl        # 0x138047fa9
   140047fa9:	fld    QWORD PTR [rax+rax*1]
   140047fac:	movabs al,ds:0x0
	...
   140047fbd:	add    BYTE PTR [rax],al
   140047fbf:	add    BYTE PTR [rdx],ah
   140047fc1:	add    eax,0xd1993
   140047fc6:	add    BYTE PTR [rax],al
   140047fc8:	mov    dh,bl
   140047fca:	add    al,0x0
	...
   140047fd4:	adc    eax,DWORD PTR [rax]
   140047fd6:	add    BYTE PTR [rax],al
   140047fd8:	lock fiadd WORD PTR [rax+rax*1]
   140047fdc:	cmp    BYTE PTR [rax],al
	...
   140047fee:	add    BYTE PTR [rax],al
   140047ff0:	and    al,BYTE PTR [rip+0xb1993]        # 0x1400f9989
   140047ff6:	add    BYTE PTR [rax],al
   140047ff8:	mov    al,0xdf
   140047ffa:	add    al,0x0
	...
   140048004:	adc    eax,DWORD PTR [rax]
   140048006:	add    BYTE PTR [rax],al
   140048008:	or     al,ah
   14004800a:	add    al,0x0
   14004800c:	js     0x14004800e
	...
   14004801e:	add    BYTE PTR [rax],al
   140048020:	and    al,BYTE PTR [rip+0x11993]        # 0x1400599b9
   140048026:	add    BYTE PTR [rax],al
   140048028:	enter  0x4e0,0x0
	...
   140048034:	add    DWORD PTR [rax],eax
   140048036:	add    BYTE PTR [rax],al
   140048038:	mov    al,0xe0
   14004803a:	add    al,0x0
   14004803c:	and    BYTE PTR [rax],al
	...
   14004804e:	add    BYTE PTR [rax],al
   140048050:	and    al,BYTE PTR [rip+0x11993]        # 0x1400599e9
   140048056:	add    BYTE PTR [rax],al
   140048058:	enter  0x4e0,0x0
	...
   140048064:	add    DWORD PTR [rax],eax
   140048066:	add    BYTE PTR [rax],al
   140048068:	shl    al,1
   14004806a:	add    al,0x0
   14004806c:	and    BYTE PTR [rax],al
	...
   14004807e:	add    BYTE PTR [rax],al
   140048080:	and    al,BYTE PTR [rip+0xc1993]        # 0x140109a19
   140048086:	add    BYTE PTR [rax],al
   140048088:	add    cl,ah
   14004808a:	add    al,0x0
	...
   140048094:	adc    eax,0x60000000
   140048099:	loope  0x14004809f
   14004809b:	add    BYTE PTR [rax+0x0],dh
	...
   1400480ae:	add    BYTE PTR [rax],al
   1400480b0:	and    al,BYTE PTR [rip+0x11993]        # 0x140059a49
   1400480b6:	add    BYTE PTR [rax],al
   1400480b8:	sbb    dl,ah
   1400480ba:	add    al,0x0
	...
   1400480c4:	add    DWORD PTR [rax],eax
   1400480c6:	add    BYTE PTR [rax],al
   1400480c8:	and    dl,ah
   1400480ca:	add    al,0x0
   1400480cc:	and    BYTE PTR [rax],al
	...
   1400480de:	add    BYTE PTR [rax],al
   1400480e0:	and    al,BYTE PTR [rip+0x81993]        # 0x1400c9a79
   1400480e6:	add    BYTE PTR [rax],al
   1400480e8:	push   rax
   1400480e9:	loop   0x1400480ef
	...
   1400480f3:	add    BYTE PTR [rax+rax*1],cl
   1400480f6:	add    BYTE PTR [rax],al
   1400480f8:	nop
   1400480f9:	loop   0x1400480ff
   1400480fb:	add    BYTE PTR [rax+0x0],dh
	...
   14004810e:	add    BYTE PTR [rax],al
   140048110:	and    al,BYTE PTR [rip+0x31993]        # 0x140079aa9
   140048116:	add    BYTE PTR [rax],al
   140048118:	add    bl,ah
   14004811a:	add    al,0x0
	...
   140048124:	add    al,0x0
   140048126:	add    BYTE PTR [rax],al
   140048128:	sbb    bl,ah
   14004812a:	add    al,0x0
   14004812c:	and    BYTE PTR [rax],al
	...
   14004813e:	add    BYTE PTR [rax],al
   140048140:	and    al,BYTE PTR [rip+0x11993]        # 0x140059ad9
   140048146:	add    BYTE PTR [rax],al
   140048148:	clc    
   140048149:	jrcxz  0x14004814f
	...
   140048153:	add    BYTE PTR [rdx],al
   140048155:	add    BYTE PTR [rax],al
   140048157:	add    BYTE PTR [rbx+riz*8+0x4],cl
   14004815b:	add    BYTE PTR [rax],ch
	...
   14004816d:	add    BYTE PTR [rax],al
   14004816f:	add    BYTE PTR [rdx],ah
   140048171:	add    eax,0x21993
   140048176:	add    BYTE PTR [rax],al
   140048178:	ins    BYTE PTR es:[rdi],dx
   140048179:	jrcxz  0x14004817f
	...
   140048183:	add    BYTE PTR [rcx],al
   140048185:	add    BYTE PTR [rax],al
   140048187:	add    BYTE PTR [rbx+riz*8+0x4],bh
   14004818b:	add    BYTE PTR [rax],ah
	...
   14004819d:	add    BYTE PTR [rax],al
   14004819f:	add    BYTE PTR [rdx],ah
   1400481a1:	add    eax,0x11993
   1400481a6:	add    BYTE PTR [rax],al
   1400481a8:	clc    
   1400481a9:	jrcxz  0x1400481af
	...
   1400481b3:	add    BYTE PTR [rdx],al
   1400481b5:	add    BYTE PTR [rax],al
   1400481b7:	add    BYTE PTR [rbx+riz*8+0x280004],dl
	...
   1400481ce:	add    BYTE PTR [rax],al
   1400481d0:	and    al,BYTE PTR [rip+0x11993]        # 0x140059b69
   1400481d6:	add    BYTE PTR [rax],al
   1400481d8:	mov    ah,0xe3
   1400481da:	add    al,0x0
	...
   1400481e4:	add    DWORD PTR [rax],eax
   1400481e6:	add    BYTE PTR [rax],al
   1400481e8:	mov    esp,0x4e3
	...
   1400481fd:	add    BYTE PTR [rax],al
   1400481ff:	add    BYTE PTR [rdx],ah
   140048201:	add    eax,0x11993
   140048206:	add    BYTE PTR [rax],al
   140048208:	(bad)  
   140048209:	jrcxz  0x14004820f
	...
   140048213:	add    BYTE PTR [rcx],al
   140048215:	add    BYTE PTR [rax],al
   140048217:	add    ah,bl
   140048219:	jrcxz  0x14004821f
   14004821b:	add    BYTE PTR [rax],ah
	...
   14004822d:	add    BYTE PTR [rax],al
   14004822f:	add    BYTE PTR [rdx],ah
   140048231:	add    eax,0x11993
   140048236:	add    BYTE PTR [rax],al
   140048238:	clc    
   140048239:	jrcxz  0x14004823f
	...
   140048243:	add    BYTE PTR [rdx],al
   140048245:	add    BYTE PTR [rax],al
   140048247:	add    BYTE PTR [rax],al
   140048249:	in     al,0x4
   14004824b:	add    BYTE PTR [rax],ch
	...
   14004825d:	rex pop QWORD PTR [rax+0x0]
   140048261:	add    BYTE PTR [rax],al
   140048263:	pop    rdi
   140048264:	add    BYTE PTR [rax],al
   140048266:	sbb    BYTE PTR [rdi+0x0],0x0
   14004826a:	add    BYTE PTR [rax],al
   14004826c:	add    BYTE PTR [rax],al
   14004826e:	add    BYTE PTR [rax],al
   140048270:	and    al,BYTE PTR [rip+0x61993]        # 0x1400a9c09
   140048276:	add    BYTE PTR [rax],al
   140048278:	xor    ah,ah
   14004827a:	add    al,0x0
	...
   140048284:	(bad)  
   140048285:	add    BYTE PTR [rax],al
   140048287:	add    BYTE PTR [rax-0x1c],ah
   14004828a:	add    al,0x0
   14004828c:	pop    rax
	...
   14004829d:	add    BYTE PTR [rax],al
   14004829f:	add    BYTE PTR [rdx],ah
   1400482a1:	add    eax,0x31993
   1400482a6:	add    BYTE PTR [rax],al
   1400482a8:	lods   al,BYTE PTR ds:[rsi]
   1400482a9:	in     al,0x4
	...
   1400482b3:	add    BYTE PTR [rbx],al
   1400482b5:	add    BYTE PTR [rax],al
   1400482b7:	add    ah,al
   1400482b9:	in     al,0x4
   1400482bb:	add    BYTE PTR [rax],ch
	...
   1400482cd:	add    BYTE PTR [rax],al
   1400482cf:	add    BYTE PTR [rdx],ah
   1400482d1:	add    eax,0x41993
   1400482d6:	add    BYTE PTR [rax],al
   1400482d8:	cld    
   1400482d9:	in     al,0x4
	...
   1400482e3:	add    BYTE PTR [rbx],al
   1400482e5:	add    BYTE PTR [rax],al
   1400482e7:	add    BYTE PTR [riz*8+0x200004],bl
	...
   1400482fe:	add    BYTE PTR [rax],al
   140048300:	and    al,BYTE PTR [rip+0x11993]        # 0x140059c99
   140048306:	add    BYTE PTR [rax],al
   140048308:	shr    ch,1
   14004830a:	add    al,0x0
	...
   140048314:	add    DWORD PTR [rax],eax
   140048316:	add    BYTE PTR [rax],al
   140048318:	rex.WR in eax,0x4
   14004831b:	add    BYTE PTR [rax],ah
	...
   14004832d:	add    BYTE PTR [rax],al
   14004832f:	add    BYTE PTR [rdx],ah
   140048331:	add    eax,0x21993
   140048336:	add    BYTE PTR [rax],al
   140048338:	jl     0x14004831f
   14004833a:	add    al,0x0
	...
   140048344:	add    eax,DWORD PTR [rax]
   140048346:	add    BYTE PTR [rax],al
   140048348:	mov    ebp,fs
   14004834a:	add    al,0x0
   14004834c:	and    BYTE PTR [rax],al
	...
   14004835e:	add    BYTE PTR [rax],al
   140048360:	and    al,BYTE PTR [rip+0x11993]        # 0x140059cf9
   140048366:	add    BYTE PTR [rax],al
   140048368:	shr    ch,1
   14004836a:	add    al,0x0
	...
   140048374:	add    eax,DWORD PTR [rax]
   140048376:	add    BYTE PTR [rax],al
   140048378:	mov    esp,0x200004e5
	...
   14004838d:	add    BYTE PTR [rax],al
   14004838f:	add    BYTE PTR [rdx],ah
   140048391:	add    eax,0x11993
   140048396:	add    BYTE PTR [rax],al
   140048398:	shr    ch,1
   14004839a:	add    al,0x0
	...
   1400483a4:	add    DWORD PTR [rax],eax
   1400483a6:	add    BYTE PTR [rax],al
   1400483a8:	in     al,dx
   1400483a9:	in     eax,0x4
   1400483ab:	add    BYTE PTR [rax],ah
	...
   1400483bd:	add    BYTE PTR [rax],al
   1400483bf:	add    BYTE PTR [rdx],ah
   1400483c1:	add    eax,0x11993
   1400483c6:	add    BYTE PTR [rax],al
   1400483c8:	shr    ch,1
   1400483ca:	add    al,0x0
	...
   1400483d4:	add    DWORD PTR [rax],eax
   1400483d6:	add    BYTE PTR [rax],al
   1400483d8:	add    al,0xe6
   1400483da:	add    al,0x0
   1400483dc:	and    BYTE PTR [rax],al
	...
   1400483ee:	add    BYTE PTR [rax],al
   1400483f0:	and    al,BYTE PTR [rip+0x11993]        # 0x140059d89
   1400483f6:	add    BYTE PTR [rax],al
   1400483f8:	sbb    al,0xe6
   1400483fa:	add    al,0x0
	...
   140048404:	add    DWORD PTR [rax],eax
   140048406:	add    BYTE PTR [rax],al
   140048408:	and    al,0xe6
   14004840a:	add    al,0x0
   14004840c:	and    BYTE PTR [rax],al
	...
   14004841e:	add    BYTE PTR [rax],al
   140048420:	and    al,BYTE PTR [rip+0x21993]        # 0x140069db9
   140048426:	add    BYTE PTR [rax],al
   140048428:	rex.W out 0x4,al
	...
   140048433:	add    BYTE PTR [rbx],al
   140048435:	add    BYTE PTR [rax],al
   140048437:	add    BYTE PTR [rax-0x1a],bl
   14004843a:	add    al,0x0
   14004843c:	and    BYTE PTR [rax],al
	...
   14004844e:	add    BYTE PTR [rax],al
   140048450:	and    al,BYTE PTR [rip+0x71993]        # 0x1400b9de9
   140048456:	add    BYTE PTR [rax],al
   140048458:	cwde   
   140048459:	out    0x4,al
	...
   140048463:	add    BYTE PTR [rbx],cl
   140048465:	add    BYTE PTR [rax],al
   140048467:	add    al,dl
   140048469:	out    0x4,al
   14004846b:	add    BYTE PTR [rax+0x0],al
	...
   14004847d:	add    BYTE PTR [rax],al
   14004847f:	add    BYTE PTR [rdx],ah
   140048481:	add    eax,0x21993
   140048486:	add    BYTE PTR [rax],al
   140048488:	rex.W out 0x4,eax
	...
   140048493:	add    BYTE PTR [rbx],al
   140048495:	add    BYTE PTR [rax],al
   140048497:	add    BYTE PTR [rax-0x19],bl
   14004849a:	add    al,0x0
   14004849c:	push   0x1
	...
   1400484ad:	add    BYTE PTR [rax],al
   1400484af:	add    BYTE PTR [rdx],ah
   1400484b1:	add    eax,0x2e1993
   1400484b6:	add    BYTE PTR [rax],al
   1400484b8:	test   al,0xe7
   1400484ba:	add    al,0x0
	...
   1400484c4:	or     eax,0x18000000
   1400484c9:	jmp    0x140f484d2
	...
   1400484de:	add    BYTE PTR [rax],al
   1400484e0:	and    al,BYTE PTR [rip+0x141993]        # 0x140189e79
   1400484e6:	add    BYTE PTR [rax],al
   1400484e8:	xchg   esp,eax
   1400484e9:	jmp    0x1400484f2
   1400484ee:	add    BYTE PTR [rax],al
   1400484f0:	add    BYTE PTR [rax],al
   1400484f2:	add    BYTE PTR [rax],al
   1400484f4:	adc    BYTE PTR [rax],al
   1400484f6:	add    BYTE PTR [rax],al
   1400484f8:	xor    al,0xea
   1400484fa:	add    al,0x0
   1400484fc:	and    BYTE PTR [rax],al
	...
   14004850e:	add    BYTE PTR [rax],al
   140048510:	and    al,BYTE PTR [rip+0x161993]        # 0x1401a9ea9
   140048516:	add    BYTE PTR [rax],al
   140048518:	int3   
   140048519:	(bad)  
   14004851a:	add    al,0x0
	...
   140048524:	adc    DWORD PTR [rax],eax
   140048526:	add    BYTE PTR [rax],al
   140048528:	jl     0x140048515
   14004852a:	add    al,0x0
   14004852c:	and    BYTE PTR [rax],al
	...
   14004853e:	add    BYTE PTR [rax],al
   140048540:	and    al,BYTE PTR [rip+0x21993]        # 0x140069ed9
   140048546:	add    BYTE PTR [rax],al
   140048548:	pop    rsp
   140048549:	in     al,dx
   14004854a:	add    al,0x0
	...
   140048554:	(bad)  
   140048555:	add    BYTE PTR [rax],al
   140048557:	add    BYTE PTR [rsp+rbp*8+0x4],ch
   14004855b:	add    BYTE PTR [rax],ch
	...
   14004856d:	add    BYTE PTR [rax],al
   14004856f:	add    BYTE PTR [rdx],ah
   140048571:	add    eax,0x21993
   140048576:	add    BYTE PTR [rax],al
   140048578:	shr    ah,0x4
	...
   140048583:	add    BYTE PTR [rdx],al
   140048585:	add    BYTE PTR [rax],al
   140048587:	add    al,dl
   140048589:	in     al,dx
   14004858a:	add    al,0x0
   14004858c:	cmp    BYTE PTR [rax],al
	...
   14004859e:	add    BYTE PTR [rax],al
   1400485a0:	and    al,BYTE PTR [rip+0x21993]        # 0x140069f39
   1400485a6:	add    BYTE PTR [rax],al
   1400485a8:	shr    ah,0x4
	...
   1400485b3:	add    BYTE PTR [rdx],al
   1400485b5:	add    BYTE PTR [rax],al
   1400485b7:	add    al,bh
   1400485b9:	in     al,dx
   1400485ba:	add    al,0x0
   1400485bc:	cmp    BYTE PTR [rax],al
	...
   1400485ce:	add    BYTE PTR [rax],al
   1400485d0:	and    al,BYTE PTR [rip+0x21993]        # 0x140069f69
   1400485d6:	add    BYTE PTR [rax],al
   1400485d8:	and    al,0xed
   1400485da:	add    al,0x0
	...
   1400485e4:	add    al,BYTE PTR [rax]
   1400485e6:	add    BYTE PTR [rax],al
   1400485e8:	xor    al,0xed
   1400485ea:	add    al,0x0
   1400485ec:	sub    BYTE PTR [rax],al
	...
   1400485fe:	add    BYTE PTR [rax],al
   140048600:	and    al,BYTE PTR [rip+0x31993]        # 0x140079f99
   140048606:	add    BYTE PTR [rax],al
   140048608:	fs in  eax,dx
   14004860a:	add    al,0x0
	...
   140048614:	add    al,BYTE PTR [rax]
   140048616:	add    BYTE PTR [rax],al
   140048618:	jl     0x140048607
   14004861a:	add    al,0x0
   14004861c:	sub    BYTE PTR [rax],al
	...
   14004862e:	add    BYTE PTR [rax],al
   140048630:	and    al,BYTE PTR [rip+0x11993]        # 0x140059fc9
   140048636:	add    BYTE PTR [rax],al
   140048638:	shr    ch,1
   14004863a:	add    al,0x0
	...
   140048644:	add    eax,DWORD PTR [rax]
   140048646:	add    BYTE PTR [rax],al
   140048648:	fsubr  st,st(5)
   14004864a:	add    al,0x0
   14004864c:	and    BYTE PTR [rax],al
	...
   14004865e:	add    BYTE PTR [rax],al
   140048660:	and    al,BYTE PTR [rip+0x151993]        # 0x140199ff9
   140048666:	add    BYTE PTR [rax],al
   140048668:	or     al,0xee
   14004866a:	add    al,0x0
	...
   140048674:	or     eax,DWORD PTR [rax]
   140048676:	add    BYTE PTR [rax],al
   140048678:	mov    ah,0xee
   14004867a:	add    al,0x0
   14004867c:	rex.W add BYTE PTR [rax],al
	...
   14004868f:	add    BYTE PTR [rdx],ah
   140048691:	add    eax,0x111993
   140048696:	add    BYTE PTR [rax],al
   140048698:	xor    al,0xef
   14004869a:	add    al,0x0
	...
   1400486a4:	or     eax,0xbc000000
   1400486a9:	out    dx,eax
   1400486aa:	add    al,0x0
   1400486ac:	push   rax
	...
   1400486bd:	add    BYTE PTR [rax],al
   1400486bf:	add    BYTE PTR [rdx],ah
   1400486c1:	add    eax,0x11993
   1400486c6:	add    BYTE PTR [rax],al
   1400486c8:	cmp    al,0xf0
   1400486ca:	add    al,0x0
	...
   1400486d4:	add    al,BYTE PTR [rax]
   1400486d6:	add    BYTE PTR [rax],al
   1400486d8:	rex.R
   1400486d9:	lock add al,0x0
   1400486dc:	sub    BYTE PTR [rax],al
	...
   1400486ee:	add    BYTE PTR [rax],al
   1400486f0:	and    al,BYTE PTR [rip+0x81993]        # 0x1400ca089
   1400486f6:	add    BYTE PTR [rax],al
   1400486f8:	jo     0x1400486ea
   1400486fa:	add    al,0x0
	...
   140048704:	or     eax,DWORD PTR [rax]
   140048706:	add    BYTE PTR [rax],al
   140048708:	mov    al,0xf0
   14004870a:	add    al,0x0
   14004870c:	sub    BYTE PTR [rax],al
	...
   14004871e:	add    BYTE PTR [rax],al
   140048720:	and    al,BYTE PTR [rip+0x171993]        # 0x1401ba0b9
   140048726:	add    BYTE PTR [rax],al
   140048728:	xor    cl,dh
   14004872a:	add    al,0x0
   14004872c:	add    DWORD PTR [rax],eax
   14004872e:	add    BYTE PTR [rax],al
   140048730:	call   0x15d048c26
   140048735:	add    BYTE PTR [rax],al
   140048737:	add    BYTE PTR [rax],dl
   140048739:	repnz add al,0x0
   14004873c:	test   al,0x0
	...
   14004874e:	add    BYTE PTR [rax],al
   140048750:	and    al,BYTE PTR [rip+0x21993]        # 0x14006a0e9
   140048756:	add    BYTE PTR [rax],al
   140048758:	sbb    al,0xf3
   14004875a:	add    al,0x0
   14004875c:	add    DWORD PTR [rax],eax
   14004875e:	add    BYTE PTR [rax],al
   140048760:	sub    al,0xf3
   140048762:	add    al,0x0
   140048764:	(bad)  
   140048765:	add    BYTE PTR [rax],al
   140048767:	add    BYTE PTR [rbx+rsi*8+0x4],dl
   14004876b:	add    BYTE PTR [rax],ch
	...
   14004877d:	add    BYTE PTR [rax],al
   14004877f:	add    BYTE PTR [rdx],ah
   140048781:	add    eax,0x1f1993
   140048786:	add    BYTE PTR [rax],al
   140048788:	mov    esp,0x10004f3
   14004878d:	add    BYTE PTR [rax],al
   14004878f:	add    BYTE PTR [rsp+rsi*8+0x2a0004],dh
   140048796:	add    BYTE PTR [rax],al
   140048798:	fdivr  st(4),st
   14004879a:	add    al,0x0
   14004879c:	and    BYTE PTR [rcx],al
	...
   1400487ae:	add    BYTE PTR [rax],al
   1400487b0:	and    al,BYTE PTR [rip+0x11993]        # 0x14005a149
   1400487b6:	add    BYTE PTR [rax],al
   1400487b8:	push   rax
   1400487b9:	test   BYTE PTR [rax+rax*1],0x0
   1400487bd:	add    BYTE PTR [rax],al
   1400487bf:	add    BYTE PTR [rax],al
   1400487c1:	add    BYTE PTR [rax],al
   1400487c3:	add    BYTE PTR [rcx],al
   1400487c5:	add    BYTE PTR [rax],al
   1400487c7:	add    BYTE PTR [rax-0xa],bl
   1400487ca:	add    al,0x0
   1400487cc:	and    BYTE PTR [rax],al
	...
   1400487de:	add    BYTE PTR [rax],al
   1400487e0:	and    al,BYTE PTR [rip+0x91993]        # 0x1400da179
   1400487e6:	add    BYTE PTR [rax],al
   1400487e8:	mov    dh,dh
   1400487ea:	add    al,0x0
	...
   1400487f4:	or     DWORD PTR [rax],eax
   1400487f6:	add    BYTE PTR [rax],al
   1400487f8:	shl    dh,1
   1400487fa:	add    al,0x0
   1400487fc:	pop    rax
	...
   14004880d:	add    BYTE PTR [rax],al
   14004880f:	add    BYTE PTR [rdx],ah
   140048811:	add    eax,0x21993
   140048816:	add    BYTE PTR [rax],al
   140048818:	xor    al,0xf7
   14004881a:	add    al,0x0
	...
   140048824:	add    eax,0x44000000
   140048829:	test   DWORD PTR [rax+rax*1],0x20
	...
   140048840:	and    al,BYTE PTR [rip+0x11993]        # 0x14005a1d9
   140048846:	add    BYTE PTR [rax],al
   140048848:	mov    al,0xf7
   14004884a:	add    al,0x0
	...
   140048854:	add    eax,DWORD PTR [rax]
   140048856:	add    BYTE PTR [rax],al
   140048858:	mov    eax,0x480004f7
	...
   14004886d:	add    BYTE PTR [rax],al
   14004886f:	add    BYTE PTR [rdx],ah
   140048871:	add    eax,0x41993
   140048876:	add    BYTE PTR [rax],al
   140048878:	clc    
   140048879:	test   DWORD PTR [rax+rax*1],0x0
   140048880:	add    BYTE PTR [rax],al
   140048882:	add    BYTE PTR [rax],al
   140048884:	(bad)  
   140048885:	add    BYTE PTR [rax],al
   140048887:	add    BYTE PTR [rax],bl
   140048889:	clc    
   14004888a:	add    al,0x0
   14004888c:	xor    BYTE PTR [rax],al
	...
   14004889e:	add    BYTE PTR [rax],al
   1400488a0:	and    al,BYTE PTR [rip+0x71993]        # 0x1400ba239
   1400488a6:	add    BYTE PTR [rax],al
   1400488a8:	js     0x1400488a2
   1400488aa:	add    al,0x0
	...
   1400488b4:	or     eax,DWORD PTR [rax]
   1400488b6:	add    BYTE PTR [rax],al
   1400488b8:	mov    al,0xf8
   1400488ba:	add    al,0x0
   1400488bc:	add    BYTE PTR [rax],al
	...
   1400488cf:	add    BYTE PTR [rdx],ah
   1400488d1:	add    eax,0x71993
   1400488d6:	add    BYTE PTR [rax],al
   1400488d8:	xor    al,0xf9
   1400488da:	add    al,0x0
	...
   1400488e4:	or     eax,DWORD PTR [rax]
   1400488e6:	add    BYTE PTR [rax],al
   1400488e8:	ins    BYTE PTR es:[rdi],dx
   1400488e9:	stc    
   1400488ea:	add    al,0x0
   1400488ec:	add    BYTE PTR [rax],al
	...
   1400488ff:	add    BYTE PTR [rdx],ah
   140048901:	add    eax,0x91993
   140048906:	add    BYTE PTR [rax],al
   140048908:	clc    
   140048909:	stc    
   14004890a:	add    al,0x0
   14004890c:	add    DWORD PTR [rax],eax
   14004890e:	add    BYTE PTR [rax],al
   140048910:	rex cli 
   140048912:	add    al,0x0
   140048914:	sldt   WORD PTR [rax]
   140048917:	add    BYTE PTR [rax-0x6],ch
   14004891a:	add    al,0x0
   14004891c:	push   rax
	...
   14004892d:	add    BYTE PTR [rax],al
   14004892f:	add    BYTE PTR [rdx],ah
   140048931:	add    eax,0x31993
   140048936:	add    BYTE PTR [rax],al
   140048938:	adc    al,0xfb
   14004893a:	add    al,0x0
   14004893c:	add    DWORD PTR [rax],eax
   14004893e:	add    BYTE PTR [rax],al
   140048940:	sub    al,0xfb
   140048942:	add    al,0x0
   140048944:	or     BYTE PTR [rax],al
   140048946:	add    BYTE PTR [rax],al
   140048948:	push   rsp
   140048949:	sti    
   14004894a:	add    al,0x0
   14004894c:	mov    BYTE PTR [rax],al
	...
   14004895e:	add    BYTE PTR [rax],al
   140048960:	and    al,BYTE PTR [rip+0x21993]        # 0x14006a2f9
   140048966:	add    BYTE PTR [rax],al
   140048968:	sar    bl,0x4
	...
   140048973:	add    BYTE PTR [rax+rax*1],al
   140048976:	add    BYTE PTR [rax],al
   140048978:	sar    bl,1
   14004897a:	add    al,0x0
   14004897c:	xor    BYTE PTR [rax],al
	...
   14004898e:	add    BYTE PTR [rax],al
   140048990:	and    al,BYTE PTR [rip+0x211993]        # 0x14025a329
   140048996:	add    BYTE PTR [rax],al
   140048998:	sbb    ah,bh
   14004899a:	add    al,0x0
	...
   1400489a4:	and    al,0x0
   1400489a6:	add    BYTE PTR [rax],al
   1400489a8:	and    ch,bh
   1400489aa:	add    al,0x0
   1400489ac:	rol    BYTE PTR [rcx],0x0
	...
   1400489bf:	add    BYTE PTR [rdx],ah
   1400489c1:	add    eax,0x81993
   1400489c6:	add    BYTE PTR [rax],al
   1400489c8:	inc    BYTE PTR fs:[rax+rax*1]
   1400489cc:	add    DWORD PTR [rax],eax
   1400489ce:	add    BYTE PTR [rax],al
   1400489d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400489d1:	inc    BYTE PTR [rax+rax*1]
   1400489d4:	and    DWORD PTR [rax],eax
   1400489d6:	add    BYTE PTR [rax],al
   1400489d8:	int3   
   1400489d9:	inc    BYTE PTR [rax+rax*1]
   1400489dc:	mov    BYTE PTR [rax],al
	...
   1400489ee:	add    BYTE PTR [rax],al
   1400489f0:	and    al,BYTE PTR [rip+0x21993]        # 0x14006a389
   1400489f6:	add    BYTE PTR [rax],al
   1400489f8:	sbb    al,0xf3
   1400489fa:	add    al,0x0
   1400489fc:	add    DWORD PTR [rax],eax
   1400489fe:	add    BYTE PTR [rax],al
   140048a00:	hlt    
   140048a01:	inc    DWORD PTR [rax+rax*1]
   140048a04:	or     BYTE PTR [rax],al
   140048a06:	add    BYTE PTR [rax],al
   140048a08:	sbb    al,0x0
   140048a0a:	add    eax,0x4000
	...
   140048a1f:	add    BYTE PTR [rdx],ah
   140048a21:	add    eax,0x41993
   140048a26:	add    BYTE PTR [rax],al
   140048a28:	mov    WORD PTR [rax],es
   140048a2a:	add    eax,0x0
   140048a2f:	add    BYTE PTR [rax],al
   140048a31:	add    BYTE PTR [rax],al
   140048a33:	add    BYTE PTR [rdi],al
   140048a35:	add    BYTE PTR [rax],al
   140048a37:	add    BYTE PTR [rax+rax*1+0x200005],ch
	...
   140048a4e:	add    BYTE PTR [rax],al
   140048a50:	and    al,BYTE PTR [rip+0x11993]        # 0x14005a3e9
   140048a56:	add    BYTE PTR [rax],al
   140048a58:	movabs al,ds:0x549
   140048a61:	add    BYTE PTR [rax],al
   140048a63:	add    BYTE PTR [rdx],al
   140048a65:	add    BYTE PTR [rax],al
   140048a67:	add    ah,dh
   140048a69:	add    BYTE PTR [rip+0x2800],al        # 0x14004b26f
	...
   140048a7f:	add    BYTE PTR [rdx],ah
   140048a81:	add    eax,0x11993
   140048a86:	add    BYTE PTR [rax],al
   140048a88:	xor    al,0x1
   140048a8a:	add    eax,0x0
   140048a8f:	add    BYTE PTR [rax],al
   140048a91:	add    BYTE PTR [rax],al
   140048a93:	add    BYTE PTR [rdx],al
   140048a95:	add    BYTE PTR [rax],al
   140048a97:	add    BYTE PTR [rcx+rax*1],dl
   140048a9a:	add    eax,0x2800
	...
   140048aaf:	add    BYTE PTR [rdx],ah
   140048ab1:	add    eax,0x11993
   140048ab6:	add    BYTE PTR [rax],al
   140048ab8:	xor    al,0x1
   140048aba:	add    eax,0x0
   140048abf:	add    BYTE PTR [rax],al
   140048ac1:	add    BYTE PTR [rax],al
   140048ac3:	add    BYTE PTR [rdx],al
   140048ac5:	add    BYTE PTR [rax],al
   140048ac7:	add    BYTE PTR [rcx+rax*1],bh
   140048aca:	add    eax,0x2800
	...
   140048adf:	add    BYTE PTR [rdx],ah
   140048ae1:	add    eax,0x11993
   140048ae6:	add    BYTE PTR [rax],al
   140048ae8:	xor    al,0x1
   140048aea:	add    eax,0x0
   140048aef:	add    BYTE PTR [rax],al
   140048af1:	add    BYTE PTR [rax],al
   140048af3:	add    BYTE PTR [rdx],al
   140048af5:	add    BYTE PTR [rax],al
   140048af7:	add    BYTE PTR [rcx+rax*1+0x5],bl
   140048afb:	add    BYTE PTR [rax],ch
	...
   140048b0d:	add    BYTE PTR [rax],al
   140048b0f:	add    BYTE PTR [rdx],ah
   140048b11:	add    eax,0x11993
   140048b16:	add    BYTE PTR [rax],al
   140048b18:	xor    al,0x1
   140048b1a:	add    eax,0x0
   140048b1f:	add    BYTE PTR [rax],al
   140048b21:	add    BYTE PTR [rax],al
   140048b23:	add    BYTE PTR [rdx],al
   140048b25:	add    BYTE PTR [rax],al
   140048b27:	add    BYTE PTR [rcx+rax*1+0x5],bh
   140048b2b:	add    BYTE PTR [rax],ch
	...
   140048b3d:	add    BYTE PTR [rax],al
   140048b3f:	add    BYTE PTR [rdx],ah
   140048b41:	add    eax,0xa1993
   140048b46:	add    BYTE PTR [rax],al
   140048b48:	enter  0x501,0x0
	...
   140048b54:	adc    BYTE PTR [rax],al
   140048b56:	add    BYTE PTR [rax],al
   140048b58:	sbb    BYTE PTR [rdx],al
   140048b5a:	add    eax,0x4000
	...
   140048b6f:	add    BYTE PTR [rdx],ah
   140048b71:	add    eax,0x41993
   140048b76:	add    BYTE PTR [rax],al
   140048b78:	mov    al,0x2
   140048b7a:	add    eax,0x0
   140048b7f:	add    BYTE PTR [rax],al
   140048b81:	add    BYTE PTR [rax],al
   140048b83:	add    BYTE PTR [rip+0xffffffffd0000000],al        # 0x110048b89
   140048b89:	add    al,BYTE PTR [rip+0x3000]        # 0x14004bb8f
	...
   140048b9f:	add    BYTE PTR [rdx],ah
   140048ba1:	add    eax,0x11993
   140048ba6:	add    BYTE PTR [rax],al
   140048ba8:	sbb    al,0x3
   140048baa:	add    eax,0x0
   140048baf:	add    BYTE PTR [rax],al
   140048bb1:	add    BYTE PTR [rax],al
   140048bb3:	add    BYTE PTR [rbx],al
   140048bb5:	add    BYTE PTR [rax],al
   140048bb7:	add    BYTE PTR [rbx+rax*1],ah
   140048bba:	add    eax,0x8800
	...
   140048bcf:	add    BYTE PTR [rdx],ah
   140048bd1:	add    eax,0x11993
   140048bd6:	add    BYTE PTR [rax],al
   140048bd8:	push   rax
   140048bd9:	add    eax,DWORD PTR [rip+0x0]        # 0x140048bdf
   140048bdf:	add    BYTE PTR [rax],al
   140048be1:	add    BYTE PTR [rax],al
   140048be3:	add    BYTE PTR [rbx],al
   140048be5:	add    BYTE PTR [rax],al
   140048be7:	add    BYTE PTR [rax+0x3],bl
   140048bea:	add    eax,0x2800
	...
   140048bff:	add    BYTE PTR [rdx],ah
   140048c01:	add    eax,0x31993
   140048c06:	add    BYTE PTR [rax],al
   140048c08:	mov    al,0x3
   140048c0a:	add    eax,0x100
   140048c0f:	add    al,cl
   140048c11:	add    eax,DWORD PTR [rip+0x700]        # 0x140049317
   140048c17:	add    al,dh
   140048c19:	add    eax,DWORD PTR [rip+0x2000]        # 0x14004ac1f
	...
   140048c2f:	add    BYTE PTR [rdx],ah
   140048c31:	add    eax,0x11993
   140048c36:	add    BYTE PTR [rax],al
   140048c38:	nop
   140048c39:	add    al,0x5
	...
   140048c43:	add    BYTE PTR [rbx],al
   140048c45:	add    BYTE PTR [rax],al
   140048c47:	add    BYTE PTR [rax+0x4],bl
   140048c4a:	add    eax,0x3800
	...
   140048c5f:	add    BYTE PTR [rdx],ah
   140048c61:	add    eax,0x11993
   140048c66:	add    BYTE PTR [rax],al
   140048c68:	nop
   140048c69:	add    al,0x5
	...
   140048c73:	add    BYTE PTR [rbx],al
   140048c75:	add    BYTE PTR [rax],al
   140048c77:	add    BYTE PTR [rax+0x38000504],bl
	...
   140048c8d:	add    BYTE PTR [rax],al
   140048c8f:	add    BYTE PTR [rdx],ah
   140048c91:	add    eax,0x21993
   140048c96:	add    BYTE PTR [rax],al
   140048c98:	fadd   DWORD PTR [rax*1+0x0]
   140048c9f:	add    BYTE PTR [rax],al
   140048ca1:	add    BYTE PTR [rax],al
   140048ca3:	add    BYTE PTR [rip+0xffffffffe8000000],al        # 0x128048ca9
   140048ca9:	add    al,0x5
   140048cab:	add    BYTE PTR [rax],bh
	...
   140048cbd:	add    BYTE PTR [rax],al
   140048cbf:	add    BYTE PTR [rdx],ah
   140048cc1:	add    eax,0x71993
   140048cc6:	add    BYTE PTR [rax],al
   140048cc8:	xor    BYTE PTR [rip+0x5],al        # 0x140048cd3
   140048cce:	add    BYTE PTR [rax],al
   140048cd0:	add    BYTE PTR [rax],al
   140048cd2:	add    BYTE PTR [rax],al
   140048cd4:	or     DWORD PTR [rax],eax
   140048cd6:	add    BYTE PTR [rax],al
   140048cd8:	push   0x30000505
	...
   140048ced:	add    BYTE PTR [rax],al
   140048cef:	add    BYTE PTR [rdx],ah
   140048cf1:	add    eax,0x51993
   140048cf6:	add    BYTE PTR [rax],al
   140048cf8:	or     al,0x6
   140048cfa:	add    eax,0x100
   140048cff:	add    BYTE PTR [rsi+rax*1],dh
   140048d02:	add    eax,0xe00
   140048d07:	add    BYTE PTR [rax+0x6],dh
   140048d0a:	add    eax,0xb800
	...
   140048d1f:	add    BYTE PTR [rdx],ah
   140048d21:	add    eax,0x21993
   140048d26:	add    BYTE PTR [rax],al
   140048d28:	movabs al,ds:0x507
   140048d31:	add    BYTE PTR [rax],al
   140048d33:	add    BYTE PTR [rax+rax*1],al
   140048d36:	add    BYTE PTR [rax],al
   140048d38:	mov    al,0x7
   140048d3a:	add    eax,0x2000
	...
   140048d4f:	add    BYTE PTR [rdx],ah
   140048d51:	add    eax,0x21993
   140048d56:	add    BYTE PTR [rax],al
   140048d58:	movabs al,ds:0x507
   140048d61:	add    BYTE PTR [rax],al
   140048d63:	add    BYTE PTR [rax+rax*1],al
   140048d66:	add    BYTE PTR [rax],al
   140048d68:	call   0x160049274
	...
   140048d7d:	add    BYTE PTR [rax],al
   140048d7f:	add    BYTE PTR [rdx],ah
   140048d81:	add    eax,0x11993
   140048d86:	add    BYTE PTR [rax],al
   140048d88:	or     BYTE PTR [rip+0x0],al        # 0x140048d8f
   140048d8f:	add    BYTE PTR [rax],al
   140048d91:	add    BYTE PTR [rax],al
   140048d93:	add    BYTE PTR [rbx],al
   140048d95:	add    BYTE PTR [rax],al
   140048d97:	add    BYTE PTR [rax+0x8],cl
   140048d9a:	add    eax,0x6800
	...
   140048daf:	add    BYTE PTR [rdx],ah
   140048db1:	add    eax,0x41993
   140048db6:	add    BYTE PTR [rax],al
   140048db8:	movabs al,ds:0x508
   140048dc1:	add    BYTE PTR [rax],al
   140048dc3:	add    BYTE PTR [rip+0xffffffffc0000000],al        # 0x100048dc9
   140048dc9:	or     BYTE PTR [rip+0x2000],al        # 0x14004adcf
	...
   140048ddf:	add    BYTE PTR [rdx],ah
   140048de1:	add    eax,0x41993
   140048de6:	add    BYTE PTR [rax],al
   140048de8:	movabs al,ds:0x508
   140048df1:	add    BYTE PTR [rax],al
   140048df3:	add    BYTE PTR [rsi],al
   140048df5:	add    BYTE PTR [rax],al
   140048df7:	add    al,bh
   140048df9:	or     BYTE PTR [rip+0x2000],al        # 0x14004adff
	...
   140048e0f:	add    BYTE PTR [rdx],ah
   140048e11:	add    eax,0x61993
   140048e16:	add    BYTE PTR [rax],al
   140048e18:	cmp    al,0x9
   140048e1a:	add    eax,0x100
   140048e1f:	add    BYTE PTR [rcx+rcx*1+0x5],ch
   140048e23:	add    BYTE PTR [rdx],cl
   140048e25:	add    BYTE PTR [rax],al
   140048e27:	add    BYTE PTR [rcx+rcx*1+0x280005],dl
	...
   140048e3e:	add    BYTE PTR [rax],al
   140048e40:	and    al,BYTE PTR [rip+0x21993]        # 0x14006a7d9
   140048e46:	add    BYTE PTR [rax],al
   140048e48:	or     BYTE PTR [rdx],cl
   140048e4a:	add    eax,0x0
   140048e4f:	add    BYTE PTR [rax],al
   140048e51:	add    BYTE PTR [rax],al
   140048e53:	add    BYTE PTR [rip+0x18000000],al        # 0x158048e59
   140048e59:	or     al,BYTE PTR [rip+0x2000]        # 0x14004ae5f
	...
   140048e6f:	add    BYTE PTR [rdx],ah
   140048e71:	add    eax,0x21993
   140048e76:	add    BYTE PTR [rax],al
   140048e78:	sbb    al,0xf3
   140048e7a:	add    al,0x0
   140048e7c:	add    DWORD PTR [rax],eax
   140048e7e:	add    BYTE PTR [rax],al
   140048e80:	push   rsp
   140048e81:	or     al,BYTE PTR [rip+0x500]        # 0x140049387
   140048e87:	add    BYTE PTR [rdx+rcx*1+0x5],bh
   140048e8b:	add    BYTE PTR [rax],ah
	...
   140048e9d:	add    BYTE PTR [rax],al
   140048e9f:	add    BYTE PTR [rdx],ah
   140048ea1:	add    eax,0x11993
   140048ea6:	add    BYTE PTR [rax],al
   140048ea8:	ror    BYTE PTR [rdx],1
   140048eaa:	add    eax,0x0
   140048eaf:	add    BYTE PTR [rax],al
   140048eb1:	add    BYTE PTR [rax],al
   140048eb3:	add    BYTE PTR [rbx],al
   140048eb5:	add    BYTE PTR [rax],al
   140048eb7:	add    al,bl
   140048eb9:	or     al,BYTE PTR [rip+0x2000]        # 0x14004aebf
	...
   140048ecf:	add    BYTE PTR [rdx],ah
   140048ed1:	add    eax,0x31993
   140048ed6:	add    BYTE PTR [rax],al
   140048ed8:	add    BYTE PTR [rbx],cl
   140048eda:	add    eax,0x100
   140048edf:	add    BYTE PTR [rax],bl
   140048ee1:	or     eax,DWORD PTR [rip+0x700]        # 0x1400495e7
   140048ee7:	add    BYTE PTR [rax+0xb],al
   140048eea:	add    eax,0x2000
	...
   140048eff:	add    BYTE PTR [rdx],ah
   140048f01:	add    eax,0x21993
   140048f06:	add    BYTE PTR [rax],al
   140048f08:	sbb    al,0xf3
   140048f0a:	add    al,0x0
   140048f0c:	add    DWORD PTR [rax],eax
   140048f0e:	add    BYTE PTR [rax],al
   140048f10:	lods   al,BYTE PTR ds:[rsi]
   140048f11:	or     eax,DWORD PTR [rip+0x500]        # 0x140049417
   140048f17:	add    ah,dl
   140048f19:	or     eax,DWORD PTR [rip+0x3000]        # 0x14004bf1f
	...
   140048f2f:	add    BYTE PTR [rdx],ah
   140048f31:	add    eax,0x21993
   140048f36:	add    BYTE PTR [rax],al
   140048f38:	sbb    al,0xf3
   140048f3a:	add    al,0x0
   140048f3c:	add    DWORD PTR [rax],eax
   140048f3e:	add    BYTE PTR [rax],al
   140048f40:	cmp    BYTE PTR [rax*1+0x500],cl
   140048f47:	add    BYTE PTR [rax+0xc],ah
   140048f4a:	add    eax,0x3000
	...
   140048f5f:	add    BYTE PTR [rdx],ah
   140048f61:	add    eax,0x21993
   140048f66:	add    BYTE PTR [rax],al
   140048f68:	sbb    al,0xf3
   140048f6a:	add    al,0x0
   140048f6c:	add    DWORD PTR [rax],eax
   140048f6e:	add    BYTE PTR [rax],al
   140048f70:	mov    eax,0x500050c
   140048f75:	add    BYTE PTR [rax],al
   140048f77:	add    al,ah
   140048f79:	or     al,0x5
   140048f7b:	add    BYTE PTR [rax],dh
	...
   140048f8d:	add    BYTE PTR [rax],al
   140048f8f:	add    BYTE PTR [rdx],ah
   140048f91:	add    eax,0x21993
   140048f96:	add    BYTE PTR [rax],al
   140048f98:	pop    rsp
   140048f99:	or     eax,0x5
   140048f9e:	add    BYTE PTR [rax],al
   140048fa0:	add    BYTE PTR [rax],al
   140048fa2:	add    BYTE PTR [rax],al
   140048fa4:	add    eax,DWORD PTR [rax]
   140048fa6:	add    BYTE PTR [rax],al
   140048fa8:	xor    al,0xd
   140048faa:	add    eax,0x2000
	...
   140048fbf:	add    BYTE PTR [rdx],ah
   140048fc1:	add    eax,0x21993
   140048fc6:	add    BYTE PTR [rax],al
   140048fc8:	pop    rsp
   140048fc9:	or     eax,0x5
   140048fce:	add    BYTE PTR [rax],al
   140048fd0:	add    BYTE PTR [rax],al
   140048fd2:	add    BYTE PTR [rax],al
   140048fd4:	add    al,0x0
   140048fd6:	add    BYTE PTR [rax],al
   140048fd8:	ins    BYTE PTR es:[rdi],dx
   140048fd9:	or     eax,0x200005
	...
   140048fee:	add    BYTE PTR [rax],al
   140048ff0:	and    al,BYTE PTR [rip+0x21993]        # 0x14006a989
   140048ff6:	add    BYTE PTR [rax],al
   140048ff8:	lods   al,BYTE PTR ds:[rsi]
   140048ff9:	or     eax,0x5
   140048ffe:	add    BYTE PTR [rax],al
   140049000:	add    BYTE PTR [rax],al
   140049002:	add    BYTE PTR [rax],al
   140049004:	add    al,0x0
   140049006:	add    BYTE PTR [rax],al
   140049008:	mov    esp,0x2000050d
	...
   14004901d:	add    BYTE PTR [rax],al
   14004901f:	add    BYTE PTR [rdx],ah
   140049021:	add    eax,0x31993
   140049026:	add    BYTE PTR [rax],al
   140049028:	sbb    BYTE PTR [rsi],cl
   14004902a:	add    eax,0x100
   14004902f:	add    BYTE PTR [rax],dh
   140049031:	(bad)  
   140049032:	add    eax,0x800
   140049037:	add    BYTE PTR [rax+0xe],bl
   14004903a:	add    eax,0x4000
	...
   14004904f:	add    BYTE PTR [rdx],ah
   140049051:	add    eax,0x31993
   140049056:	add    BYTE PTR [rax],al
   140049058:	(bad)  
   140049059:	(bad)  
   14004905a:	add    eax,0x100
   14004905f:	add    ah,bl
   140049061:	(bad)  
   140049062:	add    eax,0x800
   140049067:	add    BYTE PTR [rdi+rcx*1],al
   14004906a:	add    eax,0x5800
	...
   14004907f:	add    BYTE PTR [rdx],ah
   140049081:	add    eax,0x11993
   140049086:	add    BYTE PTR [rax],al
   140049088:	push   0x50f
   14004908d:	add    BYTE PTR [rax],al
   14004908f:	add    BYTE PTR [rax],al
   140049091:	add    BYTE PTR [rax],al
   140049093:	add    BYTE PTR [rcx],al
   140049095:	add    BYTE PTR [rax],al
   140049097:	add    BYTE PTR [rax+0xf],dh
   14004909a:	add    eax,0x2000
	...
   1400490af:	add    BYTE PTR [rdx],ah
   1400490b1:	add    eax,0x21993
   1400490b6:	add    BYTE PTR [rax],al
   1400490b8:	ror    BYTE PTR [rdi],1
   1400490ba:	add    eax,0x0
   1400490bf:	add    BYTE PTR [rax],al
   1400490c1:	add    BYTE PTR [rax],al
   1400490c3:	add    BYTE PTR [rip+0xffffffffe0000000],al        # 0x1200490c9
   1400490c9:	syscall 
   1400490cb:	add    BYTE PTR [rax],ah
	...
   1400490dd:	add    BYTE PTR [rax],al
   1400490df:	add    BYTE PTR [rdx],ah
   1400490e1:	add    eax,0x61993
   1400490e6:	add    BYTE PTR [rax],al
   1400490e8:	je     0x1400490fa
   1400490ea:	add    eax,0x0
   1400490ef:	add    BYTE PTR [rax],al
   1400490f1:	add    BYTE PTR [rax],al
   1400490f3:	add    BYTE PTR [rip+0xffffffffa4000000],cl        # 0xe40490f9
   1400490f9:	adc    BYTE PTR [rip+0x5000],al        # 0x14004e0ff
	...
   14004910f:	add    BYTE PTR [rdx],ah
   140049111:	add    eax,0x41993
   140049116:	add    BYTE PTR [rax],al
   140049118:	nop
   140049119:	adc    DWORD PTR [rip+0x0],eax        # 0x14004911f
   14004911f:	add    BYTE PTR [rax],al
   140049121:	add    BYTE PTR [rax],al
   140049123:	add    BYTE PTR [rbx],al
   140049125:	add    BYTE PTR [rax],al
   140049127:	add    BYTE PTR [rax+0x20000511],dh
	...
   14004913d:	add    BYTE PTR [rax],al
   14004913f:	add    BYTE PTR [rdx],ah
   140049141:	add    eax,0x51993
   140049146:	add    BYTE PTR [rax],al
   140049148:	fcom   QWORD PTR [rcx]
   14004914a:	add    eax,0x0
   14004914f:	add    BYTE PTR [rax],al
   140049151:	add    BYTE PTR [rax],al
   140049153:	add    BYTE PTR [rbx],al
   140049155:	add    BYTE PTR [rax],al
   140049157:	add    BYTE PTR [rdx+rdx*1],al
   14004915a:	add    eax,0x2000
	...
   14004916f:	add    BYTE PTR [rdx],ah
   140049171:	add    eax,0x71993
   140049176:	add    BYTE PTR [rax],al
   140049178:	cmp    BYTE PTR [rdx],dl
   14004917a:	add    eax,0x100
   14004917f:	add    BYTE PTR [rax+0x12],dh
   140049182:	add    eax,0x800
   140049187:	add    BYTE PTR [rax+0x28000512],bl
	...
   14004919d:	add    BYTE PTR [rax],al
   14004919f:	add    BYTE PTR [rdx],ah
   1400491a1:	add    eax,0x21993
   1400491a6:	add    BYTE PTR [rax],al
   1400491a8:	sbb    al,0xf3
   1400491aa:	add    al,0x0
   1400491ac:	add    DWORD PTR [rax],eax
   1400491ae:	add    BYTE PTR [rax],al
   1400491b0:	add    BYTE PTR [rbx],dl
   1400491b2:	add    eax,0x400
   1400491b7:	add    BYTE PTR [rax],ch
   1400491b9:	adc    eax,DWORD PTR [rip+0x2800]        # 0x14004b9bf
	...
   1400491cf:	add    BYTE PTR [rdx],ah
   1400491d1:	add    eax,0x21993
   1400491d6:	add    BYTE PTR [rax],al
   1400491d8:	sbb    al,0xf3
   1400491da:	add    al,0x0
   1400491dc:	add    DWORD PTR [rax],eax
   1400491de:	add    BYTE PTR [rax],al
   1400491e0:	je     0x1400491f5
   1400491e2:	add    eax,0x500
   1400491e7:	add    BYTE PTR [rbx+rdx*1+0x380005],bl
	...
   1400491fe:	add    BYTE PTR [rax],al
   140049200:	and    al,BYTE PTR [rip+0x21993]        # 0x14006ab99
   140049206:	add    BYTE PTR [rax],al
   140049208:	pop    rsp
   140049209:	in     al,dx
   14004920a:	add    al,0x0
	...
   140049214:	add    al,BYTE PTR [rax]
   140049216:	add    BYTE PTR [rax],al
   140049218:	lock adc eax,DWORD PTR [rip+0x2800]        # 0x14004ba1f
	...
   14004922f:	add    BYTE PTR [rdx],ah
   140049231:	add    eax,0x131993
   140049236:	add    BYTE PTR [rax],al
   140049238:	and    BYTE PTR [rax*1+0x0],dl
   14004923f:	add    BYTE PTR [rax],al
   140049241:	add    BYTE PTR [rax],al
   140049243:	add    BYTE PTR [rdi],cl
   140049245:	add    BYTE PTR [rax],al
   140049247:	add    BYTE PTR [rax+0x30000514],bh
	...
   14004925d:	add    BYTE PTR [rax],al
   14004925f:	add    BYTE PTR [rdx],ah
   140049261:	add    eax,0x81993
   140049266:	add    BYTE PTR [rax],al
   140049268:	adc    rax,0x5
   14004926e:	add    BYTE PTR [rax],al
   140049270:	add    BYTE PTR [rax],al
   140049272:	add    BYTE PTR [rax],al
   140049274:	(bad)  
   140049275:	add    BYTE PTR [rax],al
   140049277:	add    BYTE PTR [rax+0x20000515],cl
	...
   14004928d:	add    BYTE PTR [rax],al
   14004928f:	add    BYTE PTR [rdx],ah
   140049291:	add    eax,0x41993
   140049296:	add    BYTE PTR [rax],al
   140049298:	fcom   DWORD PTR [rip+0x5]        # 0x1400492a3
   14004929e:	add    BYTE PTR [rax],al
   1400492a0:	add    BYTE PTR [rax],al
   1400492a2:	add    BYTE PTR [rax],al
   1400492a4:	add    eax,0xf8000000
   1400492a9:	adc    eax,0x200005
	...
   1400492be:	add    BYTE PTR [rax],al
   1400492c0:	and    al,BYTE PTR [rip+0x181993]        # 0x1401cac59
   1400492c6:	add    BYTE PTR [rax],al
   1400492c8:	rex (bad) 
   1400492ca:	add    eax,0x0
   1400492cf:	add    BYTE PTR [rax],al
   1400492d1:	add    BYTE PTR [rax],al
   1400492d3:	add    BYTE PTR [rcx],bl
   1400492d5:	add    BYTE PTR [rax],al
   1400492d7:	add    BYTE PTR [rax],al
   1400492d9:	(bad)  
   1400492da:	add    eax,0x3000
	...
   1400492ef:	add    BYTE PTR [rdx],ah
   1400492f1:	add    eax,0x31993
   1400492f6:	add    BYTE PTR [rax],al
   1400492f8:	sbb    al,0x18
   1400492fa:	add    eax,0x0
   1400492ff:	add    BYTE PTR [rax],al
   140049301:	add    BYTE PTR [rax],al
   140049303:	add    BYTE PTR [rax+rax*1],al
   140049306:	add    BYTE PTR [rax],al
   140049308:	fcom   QWORD PTR [rdi]
   14004930a:	add    eax,0x2000
	...
   14004931f:	add    BYTE PTR [rdx],ah
   140049321:	add    eax,0x31993
   140049326:	add    BYTE PTR [rax],al
   140049328:	sbb    al,0x18
   14004932a:	add    eax,0x0
   14004932f:	add    BYTE PTR [rax],al
   140049331:	add    BYTE PTR [rax],al
   140049333:	add    BYTE PTR [rip+0x34000000],al        # 0x174049339
   140049339:	sbb    BYTE PTR [rip+0x2000],al        # 0x14004b33f
	...
   14004934f:	add    BYTE PTR [rdx],ah
   140049351:	add    eax,0x11993
   140049356:	add    BYTE PTR [rax],al
   140049358:	shr    ch,1
   14004935a:	add    al,0x0
	...
   140049364:	add    eax,DWORD PTR [rax]
   140049366:	add    BYTE PTR [rax],al
   140049368:	js     0x140049382
   14004936a:	add    eax,0x2000
	...
   14004937f:	add    BYTE PTR [rdx],ah
   140049381:	add    eax,0x61993
   140049386:	add    BYTE PTR [rax],al
   140049388:	loopne 0x1400493a2
   14004938a:	add    eax,0x0
   14004938f:	add    BYTE PTR [rax],al
   140049391:	add    BYTE PTR [rax],al
   140049393:	add    BYTE PTR [rdi],al
   140049395:	add    BYTE PTR [rax],al
   140049397:	add    BYTE PTR [rax],dl
   140049399:	sbb    DWORD PTR [rip+0x3000],eax        # 0x14004c39f
	...
   1400493af:	add    BYTE PTR [rdx],ah
   1400493b1:	add    eax,0x71993
   1400493b6:	add    BYTE PTR [rax],al
   1400493b8:	push   0x519
   1400493bd:	add    BYTE PTR [rax],al
   1400493bf:	add    BYTE PTR [rax],al
   1400493c1:	add    BYTE PTR [rax],al
   1400493c3:	add    BYTE PTR [rbx],cl
   1400493c5:	add    BYTE PTR [rax],al
   1400493c7:	add    BYTE PTR [rax+0x60000519],ah
	...
   1400493dd:	add    BYTE PTR [rax],al
   1400493df:	add    BYTE PTR [rdx],ah
   1400493e1:	add    eax,0x21993
   1400493e6:	add    BYTE PTR [rax],al
   1400493e8:	rex.W sbb al,BYTE PTR [rip+0x0]        # 0x1400493ef
   1400493ef:	add    BYTE PTR [rax],al
   1400493f1:	add    BYTE PTR [rax],al
   1400493f3:	add    BYTE PTR [rcx],al
   1400493f5:	add    BYTE PTR [rax],al
   1400493f7:	add    BYTE PTR [rax+0x1a],bl
   1400493fa:	add    eax,0x2000
	...
   14004940f:	add    BYTE PTR [rdx],ah
   140049411:	add    eax,0x21993
   140049416:	add    BYTE PTR [rax],al
   140049418:	je     0x140049434
   14004941a:	add    eax,0x0
   14004941f:	add    BYTE PTR [rax],al
   140049421:	add    BYTE PTR [rax],al
   140049423:	add    BYTE PTR [rbx],al
   140049425:	add    BYTE PTR [rax],al
   140049427:	add    BYTE PTR [rdx+rbx*1+0x580005],al
	...
   14004943e:	add    BYTE PTR [rax],al
   140049440:	and    al,BYTE PTR [rip+0x21993]        # 0x14006add9
   140049446:	add    BYTE PTR [rax],al
   140049448:	call   0x140049967
   14004944d:	add    BYTE PTR [rax],al
   14004944f:	add    BYTE PTR [rax],al
   140049451:	add    BYTE PTR [rax],al
   140049453:	add    BYTE PTR [rax+rax*1],al
   140049456:	add    BYTE PTR [rax],al
   140049458:	clc    
   140049459:	sbb    al,BYTE PTR [rip+0x2000]        # 0x14004b45f
	...
   14004946f:	add    BYTE PTR [rdx],ah
   140049471:	add    eax,0x21993
   140049476:	add    BYTE PTR [rax],al
   140049478:	sub    BYTE PTR [rbx],bl
   14004947a:	add    eax,0x0
   14004947f:	add    BYTE PTR [rax],al
   140049481:	add    BYTE PTR [rax],al
   140049483:	add    BYTE PTR [rax+rax*1],al
   140049486:	add    BYTE PTR [rax],al
   140049488:	cmp    BYTE PTR [rbx],bl
   14004948a:	add    eax,0x0
	...
   14004949f:	add    BYTE PTR [rdx],ah
   1400494a1:	add    eax,0x21993
   1400494a6:	add    BYTE PTR [rax],al
   1400494a8:	sbb    al,0xf3
   1400494aa:	add    al,0x0
   1400494ac:	add    DWORD PTR [rax],eax
   1400494ae:	add    BYTE PTR [rax],al
   1400494b0:	jl     0x1400494cd
   1400494b2:	add    eax,0x400
   1400494b7:	add    BYTE PTR [rbx+rbx*1+0x200005],ah
	...
   1400494ce:	add    BYTE PTR [rax],al
   1400494d0:	and    al,BYTE PTR [rip+0x11993]        # 0x14005ae69
   1400494d6:	add    BYTE PTR [rax],al
   1400494d8:	hlt    
   1400494d9:	pop    rdx
   1400494da:	add    eax,0x0
   1400494df:	add    BYTE PTR [rax],al
   1400494e1:	add    BYTE PTR [rax],al
   1400494e3:	add    BYTE PTR [rbx],al
   1400494e5:	add    BYTE PTR [rax],al
   1400494e7:	add    ah,ah
   1400494e9:	sbb    eax,DWORD PTR [rip+0x2000]        # 0x14004b4ef
	...
   1400494ff:	add    BYTE PTR [rdx],ah
   140049501:	add    eax,0x11993
   140049506:	add    BYTE PTR [rax],al
   140049508:	shr    ch,1
   14004950a:	add    al,0x0
	...
   140049514:	add    DWORD PTR [rax],eax
   140049516:	add    BYTE PTR [rax],al
   140049518:	push   rax
   140049519:	sbb    al,0x5
   14004951b:	add    BYTE PTR [rax],ah
	...
   14004952d:	add    BYTE PTR [rax],al
   14004952f:	add    BYTE PTR [rdx],ah
   140049531:	add    eax,0x31993
   140049536:	add    BYTE PTR [rax],al
   140049538:	jo     0x140049556
   14004953a:	add    eax,0x0
   14004953f:	add    BYTE PTR [rax],al
   140049541:	add    BYTE PTR [rax],al
   140049543:	add    BYTE PTR [rip+0xffffffff88000000],al        # 0xc8049549
   140049549:	sbb    al,0x5
   14004954b:	add    BYTE PTR [rax],ah
	...
   14004955d:	add    BYTE PTR [rax],al
   14004955f:	add    BYTE PTR [rdx],ah
   140049561:	add    eax,0x21993
   140049566:	add    BYTE PTR [rax],al
   140049568:	shr    ah,0x4
	...
   140049573:	add    BYTE PTR [rdx],al
   140049575:	add    BYTE PTR [rax],al
   140049577:	add    ah,al
   140049579:	sbb    al,0x5
   14004957b:	add    BYTE PTR [rax],bh
	...
   14004958d:	add    BYTE PTR [rax],al
   14004958f:	add    BYTE PTR [rdx],ah
   140049591:	add    eax,0x21993
   140049596:	add    BYTE PTR [rax],al
   140049598:	shr    ah,0x4
	...
   1400495a3:	add    BYTE PTR [rdx],al
   1400495a5:	add    BYTE PTR [rax],al
   1400495a7:	add    al,dh
   1400495a9:	sbb    al,0x5
   1400495ab:	add    BYTE PTR [rax],bh
	...
   1400495bd:	add    BYTE PTR [rax],al
   1400495bf:	add    BYTE PTR [rdx],ah
   1400495c1:	add    eax,0x41993
   1400495c6:	add    BYTE PTR [rax],al
   1400495c8:	adc    al,0x1d
   1400495ca:	add    eax,0x0
   1400495cf:	add    BYTE PTR [rax],al
   1400495d1:	add    BYTE PTR [rax],al
   1400495d3:	add    BYTE PTR [rbx],al
   1400495d5:	add    BYTE PTR [rax],al
   1400495d7:	add    BYTE PTR [rbx*1+0x200005],dh
	...
   1400495ee:	add    BYTE PTR [rax],al
   1400495f0:	and    al,BYTE PTR [rip+0x41993]        # 0x14008af89
   1400495f6:	add    BYTE PTR [rax],al
   1400495f8:	push   0x51d
   1400495fd:	add    BYTE PTR [rax],al
   1400495ff:	add    BYTE PTR [rax],al
   140049601:	add    BYTE PTR [rax],al
   140049603:	add    BYTE PTR [rip+0xffffffff88000000],al        # 0xc8049609
   140049609:	sbb    eax,0x200005
	...
   14004961e:	add    BYTE PTR [rax],al
   140049620:	and    al,BYTE PTR [rip+0x3e1993]        # 0x14042afb9
   140049626:	add    BYTE PTR [rax],al
   140049628:	(bad)  
   140049629:	sbb    eax,0x5
   14004962e:	add    BYTE PTR [rax],al
   140049630:	add    BYTE PTR [rax],al
   140049632:	add    BYTE PTR [rax],al
   140049634:	xor    BYTE PTR [rax],al
   140049636:	add    BYTE PTR [rax],al
   140049638:	(bad)  
   140049639:	(bad)  
   14004963a:	add    eax,0xf800
	...
   14004964f:	add    BYTE PTR [rdx],ah
   140049651:	add    eax,0x21993
   140049656:	add    BYTE PTR [rax],al
   140049658:	sbb    al,0xf3
   14004965a:	add    al,0x0
   14004965c:	add    DWORD PTR [rax],eax
   14004965e:	add    BYTE PTR [rax],al
   140049660:	je     0x140049683
   140049662:	add    eax,0x400
   140049667:	add    BYTE PTR [rcx+riz*1+0x280005],bl
	...
   14004967e:	add    BYTE PTR [rax],al
   140049680:	and    al,BYTE PTR [rip+0xd1993]        # 0x14011b019
   140049686:	add    BYTE PTR [rax],al
   140049688:	in     al,0x21
   14004968a:	add    eax,0x0
   14004968f:	add    BYTE PTR [rax],al
   140049691:	add    BYTE PTR [rax],al
   140049693:	add    BYTE PTR [rcx],cl
   140049695:	add    BYTE PTR [rax],al
   140049697:	add    BYTE PTR [rdx+riz*1+0x5],cl
   14004969b:	add    BYTE PTR [rax],dh
	...
   1400496ad:	add    BYTE PTR [rax],al
   1400496af:	add    BYTE PTR [rdx],ah
   1400496b1:	add    eax,0x21993
   1400496b6:	add    BYTE PTR [rax],al
   1400496b8:	sbb    al,0xf3
   1400496ba:	add    al,0x0
   1400496bc:	add    DWORD PTR [rax],eax
   1400496be:	add    BYTE PTR [rax],al
   1400496c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400496c1:	and    al,BYTE PTR [rip+0x600]        # 0x140049cc7
   1400496c7:	add    ah,cl
   1400496c9:	and    al,BYTE PTR [rip+0x2000]        # 0x14004b6cf
	...
   1400496df:	add    BYTE PTR [rdx],ah
   1400496e1:	add    eax,0x21993
   1400496e6:	add    BYTE PTR [rax],al
   1400496e8:	sbb    al,0x23
   1400496ea:	add    eax,0x0
   1400496ef:	add    BYTE PTR [rax],al
   1400496f1:	add    BYTE PTR [rax],al
   1400496f3:	add    BYTE PTR [rax+rax*1],al
   1400496f6:	add    BYTE PTR [rax],al
   1400496f8:	sub    al,0x23
   1400496fa:	add    eax,0x2000
	...
   14004970f:	add    BYTE PTR [rdx],ah
   140049711:	add    eax,0x21993
   140049716:	add    BYTE PTR [rax],al
   140049718:	pop    rsp
   140049719:	and    eax,DWORD PTR [rip+0x0]        # 0x14004971f
   14004971f:	add    BYTE PTR [rax],al
   140049721:	add    BYTE PTR [rax],al
   140049723:	add    BYTE PTR [rax+rax*1],al
   140049726:	add    BYTE PTR [rax],al
   140049728:	ins    BYTE PTR es:[rdi],dx
   140049729:	and    eax,DWORD PTR [rip+0x2000]        # 0x14004b72f
	...
   14004973f:	add    BYTE PTR [rdx],ah
   140049741:	add    eax,0x21993
   140049746:	add    BYTE PTR [rax],al
   140049748:	mov    eax,0x523
   14004974d:	add    BYTE PTR [rax],al
   14004974f:	add    BYTE PTR [rax],al
   140049751:	add    BYTE PTR [rax],al
   140049753:	add    BYTE PTR [rcx],al
   140049755:	add    BYTE PTR [rax],al
   140049757:	add    al,cl
   140049759:	and    eax,DWORD PTR [rip+0x2000]        # 0x14004b75f
	...
   14004976f:	add    BYTE PTR [rdx],ah
   140049771:	add    eax,0x21993
   140049776:	add    BYTE PTR [rax],al
   140049778:	hlt    
   140049779:	and    eax,DWORD PTR [rip+0x0]        # 0x14004977f
   14004977f:	add    BYTE PTR [rax],al
   140049781:	add    BYTE PTR [rax],al
   140049783:	add    BYTE PTR [rbx],al
   140049785:	add    BYTE PTR [rax],al
   140049787:	add    BYTE PTR [rsp],al
   14004978a:	add    eax,0xb800
	...
   14004979f:	add    BYTE PTR [rdx],ah
   1400497a1:	add    eax,0x31993
   1400497a6:	add    BYTE PTR [rax],al
   1400497a8:	push   rsp
   1400497a9:	and    al,0x5
	...
   1400497b3:	add    BYTE PTR [rax+rax*1],al
   1400497b6:	add    BYTE PTR [rax],al
   1400497b8:	ins    BYTE PTR es:[rdi],dx
   1400497b9:	and    al,0x5
   1400497bb:	add    BYTE PTR [rax],ah
	...
   1400497cd:	add    BYTE PTR [rax],al
   1400497cf:	add    BYTE PTR [rdx],ah
   1400497d1:	add    eax,0x21993
   1400497d6:	add    BYTE PTR [rax],al
   1400497d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400497d9:	and    al,0x5
	...
   1400497e3:	add    BYTE PTR [rax+rax*1],al
   1400497e6:	add    BYTE PTR [rax],al
   1400497e8:	mov    ah,0x24
   1400497ea:	add    eax,0x2000
	...
   1400497ff:	add    BYTE PTR [rdx],ah
   140049801:	add    eax,0x1b1993
   140049806:	add    BYTE PTR [rax],al
   140049808:	hlt    
   140049809:	and    al,0x5
	...
   140049813:	add    BYTE PTR [rip+0xffffffffcc000000],dl        # 0x10c049819
   140049819:	and    eax,0x400005
	...
   14004982e:	add    BYTE PTR [rax],al
   140049830:	and    al,BYTE PTR [rip+0x21993]        # 0x14006b1c9
   140049836:	add    BYTE PTR [rax],al
   140049838:	push   rsp
   140049839:	sub    BYTE PTR [rip+0x0],al        # 0x14004983f
   14004983f:	add    BYTE PTR [rax],al
   140049841:	add    BYTE PTR [rax],al
   140049843:	add    BYTE PTR [rcx],al
   140049845:	add    BYTE PTR [rax],al
   140049847:	add    BYTE PTR [rax+0x20000526],ch
	...
   14004985d:	add    BYTE PTR [rax],al
   14004985f:	add    BYTE PTR [rdx],ah
   140049861:	add    eax,0x81993
   140049866:	add    BYTE PTR [rax],al
   140049868:	enter  0x526,0x0
	...
   140049874:	(bad)  
   140049875:	add    BYTE PTR [rax],al
   140049877:	add    BYTE PTR [rax],cl
   140049879:	(bad)  
   14004987a:	add    eax,0x3000
	...
   14004988f:	add    BYTE PTR [rdx],ah
   140049891:	add    eax,0x31993
   140049896:	add    BYTE PTR [rax],al
   140049898:	push   rsp
   140049899:	(bad)  
   14004989a:	add    eax,0x0
   14004989f:	add    BYTE PTR [rax],al
   1400498a1:	add    BYTE PTR [rax],al
   1400498a3:	add    BYTE PTR [rax+rax*1],al
   1400498a6:	add    BYTE PTR [rax],al
   1400498a8:	ins    BYTE PTR es:[rdi],dx
   1400498a9:	(bad)  
   1400498aa:	add    eax,0x2000
	...
   1400498bf:	add    BYTE PTR [rdx],ah
   1400498c1:	add    eax,0x91993
   1400498c6:	add    BYTE PTR [rax],al
   1400498c8:	mov    ah,0x27
   1400498ca:	add    eax,0x0
   1400498cf:	add    BYTE PTR [rax],al
   1400498d1:	add    BYTE PTR [rax],al
   1400498d3:	add    BYTE PTR [rcx],cl
   1400498d5:	add    BYTE PTR [rax],al
   1400498d7:	add    ah,bh
   1400498d9:	(bad)  
   1400498da:	add    eax,0xb800
	...
   1400498ef:	add    BYTE PTR [rdx],ah
   1400498f1:	add    eax,0x21993
   1400498f6:	add    BYTE PTR [rax],al
   1400498f8:	push   rsp
   1400498f9:	sub    BYTE PTR [rip+0x0],al        # 0x1400498ff
   1400498ff:	add    BYTE PTR [rax],al
   140049901:	add    BYTE PTR [rax],al
   140049903:	add    BYTE PTR [rcx],al
   140049905:	add    BYTE PTR [rax],al
   140049907:	add    BYTE PTR [rax+rbp*1+0x5],ah
   14004990b:	add    BYTE PTR [rax],ah
	...
   14004991d:	add    BYTE PTR [rax],al
   14004991f:	add    BYTE PTR [rdx],ah
   140049921:	add    eax,0x61993
   140049926:	add    BYTE PTR [rax],al
   140049928:	mov    WORD PTR [rax],gs
   14004992a:	add    eax,0x0
   14004992f:	add    BYTE PTR [rax],al
   140049931:	add    BYTE PTR [rax],al
   140049933:	add    BYTE PTR [rax],cl
   140049935:	add    BYTE PTR [rax],al
   140049937:	add    BYTE PTR [rax+rbp*1+0x200005],bh
	...
   14004994e:	add    BYTE PTR [rax],al
   140049950:	and    al,BYTE PTR [rip+0x41993]        # 0x14008b2e9
   140049956:	add    BYTE PTR [rax],al
   140049958:	sbb    al,0x29
   14004995a:	add    eax,0x0
   14004995f:	add    BYTE PTR [rax],al
   140049961:	add    BYTE PTR [rax],al
   140049963:	add    BYTE PTR [rdi],al
   140049965:	add    BYTE PTR [rax],al
   140049967:	add    BYTE PTR [rcx+rbp*1],bh
   14004996a:	add    eax,0x2000
	...
   14004997f:	add    BYTE PTR [rdx],ah
   140049981:	add    eax,0x21993
   140049986:	add    BYTE PTR [rax],al
   140049988:	nop
   140049989:	sub    DWORD PTR [rip+0x0],eax        # 0x14004998f
   14004998f:	add    BYTE PTR [rax],al
   140049991:	add    BYTE PTR [rax],al
   140049993:	add    BYTE PTR [rax+rax*1],al
   140049996:	add    BYTE PTR [rax],al
   140049998:	movabs al,ds:0x20000529
	...
   1400499ad:	add    BYTE PTR [rax],al
   1400499af:	add    BYTE PTR [rdx],ah
   1400499b1:	add    eax,0x51993
   1400499b6:	add    BYTE PTR [rax],al
   1400499b8:	in     al,0x29
   1400499ba:	add    eax,0x100
   1400499bf:	add    BYTE PTR [rdx+rbp*1],cl
   1400499c2:	add    eax,0x900
   1400499c7:	add    BYTE PTR [rdx+rbp*1],dh
   1400499ca:	add    eax,0x6000
	...
   1400499df:	add    BYTE PTR [rdx],ah
   1400499e1:	add    eax,0x21993
   1400499e6:	add    BYTE PTR [rax],al
   1400499e8:	in     al,dx
   1400499e9:	cs add eax,0x0
   1400499ef:	add    BYTE PTR [rax],al
   1400499f1:	add    BYTE PTR [rax],al
   1400499f3:	add    BYTE PTR [rbx],al
   1400499f5:	add    BYTE PTR [rax],al
   1400499f7:	add    BYTE PTR [rax+0x2000052a],ah
	...
   140049a0d:	add    BYTE PTR [rax],al
   140049a0f:	add    BYTE PTR [rdx],ah
   140049a11:	add    eax,0x21993
   140049a16:	add    BYTE PTR [rax],al
   140049a18:	sbb    BYTE PTR [rbx],ch
   140049a1a:	add    eax,0x0
   140049a1f:	add    BYTE PTR [rax],al
   140049a21:	add    BYTE PTR [rax],al
   140049a23:	add    BYTE PTR [rip+0x28000000],al        # 0x168049a29
   140049a29:	sub    eax,DWORD PTR [rip+0x6000]        # 0x14004fa2f
	...
   140049a3f:	add    BYTE PTR [rdx],ah
   140049a41:	add    eax,0x11993
   140049a46:	add    BYTE PTR [rax],al
   140049a48:	mov    BYTE PTR [rbx],ch
   140049a4a:	add    eax,0x0
   140049a4f:	add    BYTE PTR [rax],al
   140049a51:	add    BYTE PTR [rax],al
   140049a53:	add    BYTE PTR [rbx],al
   140049a55:	add    BYTE PTR [rax],al
   140049a57:	add    BYTE PTR [rax+0x4000052b],dl
	...
   140049a6d:	add    BYTE PTR [rax],al
   140049a6f:	add    BYTE PTR [rdx],ah
   140049a71:	add    eax,0x51993
   140049a76:	add    BYTE PTR [rax],al
   140049a78:	mov    eax,0x52b
   140049a7d:	add    BYTE PTR [rax],al
   140049a7f:	add    BYTE PTR [rax],al
   140049a81:	add    BYTE PTR [rax],al
   140049a83:	add    BYTE PTR [rip+0xffffffffe0000000],al        # 0x120049a89
   140049a89:	sub    eax,DWORD PTR [rip+0x2000]        # 0x14004ba8f
	...
   140049a9f:	add    BYTE PTR [rdx],ah
   140049aa1:	add    eax,0xb1993
   140049aa6:	add    BYTE PTR [rax],al
   140049aa8:	sbb    al,0x2c
   140049aaa:	add    eax,0x0
   140049aaf:	add    BYTE PTR [rax],al
   140049ab1:	add    BYTE PTR [rax],al
   140049ab3:	add    BYTE PTR [rip+0x74000000],cl        # 0x1b4049ab9
   140049ab9:	sub    al,0x5
	...
   140049acf:	add    BYTE PTR [rdx],ah
   140049ad1:	add    eax,0x21993
   140049ad6:	add    BYTE PTR [rax],al
   140049ad8:	cld    
   140049ad9:	sub    al,0x5
	...
   140049ae3:	add    BYTE PTR [rax+rax*1],al
   140049ae6:	add    BYTE PTR [rax],al
   140049ae8:	or     al,0x2d
   140049aea:	add    eax,0x2800
	...
   140049aff:	add    BYTE PTR [rdx],ah
   140049b01:	add    eax,0x11993
   140049b06:	add    BYTE PTR [rax],al
   140049b08:	fs sub eax,0x5
   140049b0e:	add    BYTE PTR [rax],al
   140049b10:	add    BYTE PTR [rax],al
   140049b12:	add    BYTE PTR [rax],al
   140049b14:	add    eax,DWORD PTR [rax]
   140049b16:	add    BYTE PTR [rax],al
   140049b18:	ins    BYTE PTR es:[rdi],dx
   140049b19:	sub    eax,0x400005
	...
   140049b2e:	add    BYTE PTR [rax],al
   140049b30:	and    al,BYTE PTR [rip+0x41993]        # 0x14008b4c9
   140049b36:	add    BYTE PTR [rax],al
   140049b38:	cwde   
   140049b39:	sub    eax,0x5
   140049b3e:	add    BYTE PTR [rax],al
   140049b40:	add    BYTE PTR [rax],al
   140049b42:	add    BYTE PTR [rax],al
   140049b44:	add    eax,0xb8000000
   140049b49:	sub    eax,0x200005
	...
   140049b5e:	add    BYTE PTR [rax],al
   140049b60:	and    al,BYTE PTR [rip+0x91993]        # 0x1400db4f9
   140049b66:	add    BYTE PTR [rax],al
   140049b68:	lock sub eax,0x5
   140049b6e:	add    BYTE PTR [rax],al
   140049b70:	add    BYTE PTR [rax],al
   140049b72:	add    BYTE PTR [rax],al
   140049b74:	or     eax,DWORD PTR [rax]
   140049b76:	add    BYTE PTR [rax],al
   140049b78:	cmp    BYTE PTR [rsi],ch
   140049b7a:	add    eax,0x0
	...
   140049b8f:	add    BYTE PTR [rdx],ah
   140049b91:	add    eax,0x11993
   140049b96:	add    BYTE PTR [rax],al
   140049b98:	fs sub eax,0x5
   140049b9e:	add    BYTE PTR [rax],al
   140049ba0:	add    BYTE PTR [rax],al
   140049ba2:	add    BYTE PTR [rax],al
   140049ba4:	add    eax,DWORD PTR [rax]
   140049ba6:	add    BYTE PTR [rax],al
   140049ba8:	shr    BYTE PTR [rsi],0x5
   140049bab:	add    BYTE PTR [rax+0x0],al
	...
   140049bbe:	add    BYTE PTR [rax],al
   140049bc0:	and    al,BYTE PTR [rip+0x21993]        # 0x14006b559
   140049bc6:	add    BYTE PTR [rax],al
   140049bc8:	in     al,dx
   140049bc9:	cs add eax,0x0
   140049bcf:	add    BYTE PTR [rax],al
   140049bd1:	add    BYTE PTR [rax],al
   140049bd3:	add    BYTE PTR [rbx],al
   140049bd5:	add    BYTE PTR [rax],al
   140049bd7:	add    ah,bh
   140049bd9:	cs add eax,0x2000
	...
   140049bef:	add    BYTE PTR [rdx],ah
   140049bf1:	add    eax,0x31993
   140049bf6:	add    BYTE PTR [rax],al
   140049bf8:	and    al,0x2f
   140049bfa:	add    eax,0x0
   140049bff:	add    BYTE PTR [rax],al
   140049c01:	add    BYTE PTR [rax],al
   140049c03:	add    BYTE PTR [rip+0x3c000000],al        # 0x17c049c09
   140049c09:	(bad)  
   140049c0a:	add    eax,0x0
	...
   140049c1f:	add    BYTE PTR [rdx],ah
   140049c21:	add    eax,0x81993
   140049c26:	add    BYTE PTR [rax],al
   140049c28:	shr    BYTE PTR [rdi],1
   140049c2a:	add    eax,0x100
   140049c2f:	add    BYTE PTR [rax],dl
   140049c31:	xor    BYTE PTR [rip+0x800],al        # 0x14004a437
   140049c37:	add    BYTE PTR [rax],bh
   140049c39:	xor    BYTE PTR [rip+0xa000],al        # 0x140053c3f
	...
   140049c4f:	add    BYTE PTR [rdx],ah
   140049c51:	add    eax,0x71993
   140049c56:	add    BYTE PTR [rax],al
   140049c58:	cwde   
   140049c59:	xor    BYTE PTR [rip+0x0],al        # 0x140049c5f
   140049c5f:	add    BYTE PTR [rax],al
   140049c61:	add    BYTE PTR [rax],al
   140049c63:	add    BYTE PTR [rdi],al
   140049c65:	add    BYTE PTR [rax],al
   140049c67:	add    al,dl
   140049c69:	xor    BYTE PTR [rip+0x2000],al        # 0x14004bc6f
	...
   140049c7f:	add    BYTE PTR [rdx],ah
   140049c81:	add    eax,0x21993
   140049c86:	add    BYTE PTR [rax],al
   140049c88:	sbb    al,0xf3
   140049c8a:	add    al,0x0
   140049c8c:	add    DWORD PTR [rax],eax
   140049c8e:	add    BYTE PTR [rax],al
   140049c90:	sbb    al,0x31
   140049c92:	add    eax,0x400
   140049c97:	add    BYTE PTR [rcx+rsi*1+0x5],al
   140049c9b:	add    BYTE PTR [rax],bh
	...
   140049cad:	add    BYTE PTR [rax],al
   140049caf:	add    BYTE PTR [rdx],ah
   140049cb1:	add    eax,0xc1993
   140049cb6:	add    BYTE PTR [rax],al
   140049cb8:	pushf  
   140049cb9:	xor    DWORD PTR [rip+0x200],eax        # 0x140049ebf
   140049cbf:	add    ah,bh
   140049cc1:	xor    DWORD PTR [rip+0xf00],eax        # 0x14004abc7
   140049cc7:	add    BYTE PTR [rdx+rsi*1+0x5],cl
   140049ccb:	add    BYTE PTR [rax+0x0],al
	...
   140049cdd:	add    BYTE PTR [rax],al
   140049cdf:	add    BYTE PTR [rdx],ah
   140049ce1:	add    eax,0x251993
   140049ce6:	add    BYTE PTR [rax],al
   140049ce8:	lock xor al,BYTE PTR [rip+0x0]        # 0x140049cef
   140049cef:	add    BYTE PTR [rax],al
   140049cf1:	add    BYTE PTR [rax],al
   140049cf3:	add    BYTE PTR [rip+0x18000000],ah        # 0x158049cf9
   140049cf9:	xor    al,0x5
   140049cfb:	add    BYTE PTR [rax],ah
	...
   140049d0d:	add    BYTE PTR [rax],al
   140049d0f:	add    BYTE PTR [rdx],ah
   140049d11:	add    eax,0x11993
   140049d16:	add    BYTE PTR [rax],al
   140049d18:	push   rax
   140049d19:	xor    eax,0x5
   140049d1e:	add    BYTE PTR [rax],al
   140049d20:	add    BYTE PTR [rax],al
   140049d22:	add    BYTE PTR [rax],al
   140049d24:	add    DWORD PTR [rax],eax
   140049d26:	add    BYTE PTR [rax],al
   140049d28:	pop    rax
   140049d29:	xor    eax,0x200005
	...
   140049d3e:	add    BYTE PTR [rax],al
   140049d40:	and    al,BYTE PTR [rip+0x11993]        # 0x14005b6d9
   140049d46:	add    BYTE PTR [rax],al
   140049d48:	xor    BYTE PTR [rip+0x5],0x0        # 0x140049d54
   140049d4f:	add    BYTE PTR [rax],al
   140049d51:	add    BYTE PTR [rax],al
   140049d53:	add    BYTE PTR [rbx],al
   140049d55:	add    BYTE PTR [rax],al
   140049d57:	add    BYTE PTR [rax+0x20000535],cl
	...
   140049d6d:	add    BYTE PTR [rax],al
   140049d6f:	add    BYTE PTR [rdx],ah
   140049d71:	add    eax,0x11993
   140049d76:	add    BYTE PTR [rax],al
   140049d78:	shl    BYTE PTR [rip+0x5],0x0        # 0x140049d84
   140049d7f:	add    BYTE PTR [rax],al
   140049d81:	add    BYTE PTR [rax],al
   140049d83:	add    BYTE PTR [rbx],al
   140049d85:	add    BYTE PTR [rax],al
   140049d87:	add    al,cl
   140049d89:	xor    eax,0x300005
	...
   140049d9e:	add    BYTE PTR [rax],al
   140049da0:	and    al,BYTE PTR [rip+0x11993]        # 0x14005b739
   140049da6:	add    BYTE PTR [rax],al
   140049da8:	xor    BYTE PTR [rip+0x5],0x0        # 0x140049db4
   140049daf:	add    BYTE PTR [rax],al
   140049db1:	add    BYTE PTR [rax],al
   140049db3:	add    BYTE PTR [rbx],al
   140049db5:	add    BYTE PTR [rax],al
   140049db7:	add    ah,bh
   140049db9:	xor    eax,0x200005
	...
   140049dce:	add    BYTE PTR [rax],al
   140049dd0:	and    al,BYTE PTR [rip+0x11993]        # 0x14005b769
   140049dd6:	add    BYTE PTR [rax],al
   140049dd8:	xor    BYTE PTR [rsi],dh
   140049dda:	add    eax,0x0
   140049ddf:	add    BYTE PTR [rax],al
   140049de1:	add    BYTE PTR [rax],al
   140049de3:	add    BYTE PTR [rbx],al
   140049de5:	add    BYTE PTR [rax],al
   140049de7:	add    BYTE PTR [rax],bh
   140049de9:	ss add eax,0x2000
	...
   140049dff:	add    BYTE PTR [rdx],ah
   140049e01:	add    eax,0x21993
   140049e06:	add    BYTE PTR [rax],al
   140049e08:	push   0x536
   140049e0d:	add    BYTE PTR [rax],al
   140049e0f:	add    BYTE PTR [rax],al
   140049e11:	add    BYTE PTR [rax],al
   140049e13:	add    BYTE PTR [rax+rax*1],al
   140049e16:	add    BYTE PTR [rax],al
   140049e18:	js     0x140049e50
   140049e1a:	add    eax,0x2000
	...
   140049e2f:	add    BYTE PTR [rdx],ah
   140049e31:	add    eax,0x61993
   140049e36:	add    BYTE PTR [rax],al
   140049e38:	fdiv   DWORD PTR [rsi]
   140049e3a:	add    eax,0x0
   140049e3f:	add    BYTE PTR [rax],al
   140049e41:	add    BYTE PTR [rax],al
   140049e43:	add    BYTE PTR [rax],cl
   140049e45:	add    BYTE PTR [rax],al
   140049e47:	add    BYTE PTR [rax],cl
   140049e49:	(bad)  
   140049e4a:	add    eax,0x2000
	...
   140049e5f:	add    BYTE PTR [rdx],ah
   140049e61:	add    eax,0x11993
   140049e66:	add    BYTE PTR [rax],al
   140049e68:	mov    WORD PTR [rdi],?
   140049e6a:	add    eax,0x0
   140049e6f:	add    BYTE PTR [rax],al
   140049e71:	add    BYTE PTR [rax],al
   140049e73:	add    BYTE PTR [rcx],al
   140049e75:	add    BYTE PTR [rax],al
   140049e77:	add    BYTE PTR [rdi+rsi*1+0x200005],dl
	...
   140049e8e:	add    BYTE PTR [rax],al
   140049e90:	and    al,BYTE PTR [rip+0x31993]        # 0x14007b829
   140049e96:	add    BYTE PTR [rax],al
   140049e98:	enter  0x537,0x0
	...
   140049ea4:	add    eax,0xe0000000
   140049ea9:	(bad)  
   140049eaa:	add    eax,0x2000
	...
   140049ebf:	add    BYTE PTR [rdx],ah
   140049ec1:	add    eax,0x21993
   140049ec6:	add    BYTE PTR [rax],al
   140049ec8:	sub    BYTE PTR [rax],bh
   140049eca:	add    eax,0x0
   140049ecf:	add    BYTE PTR [rax],al
   140049ed1:	add    BYTE PTR [rax],al
   140049ed3:	add    BYTE PTR [rip+0x38000000],al        # 0x178049ed9
   140049ed9:	cmp    BYTE PTR [rip+0x4000],al        # 0x14004dedf
	...
   140049eef:	add    BYTE PTR [rdx],ah
   140049ef1:	add    eax,0x31993
   140049ef6:	add    BYTE PTR [rax],al
   140049ef8:	jo     0x140049f32
   140049efa:	add    eax,0x0
   140049eff:	add    BYTE PTR [rax],al
   140049f01:	add    BYTE PTR [rax],al
   140049f03:	add    BYTE PTR [rax+rax*1],al
   140049f06:	add    BYTE PTR [rax],al
   140049f08:	mov    BYTE PTR [rax],bh
   140049f0a:	add    eax,0x2000
	...
   140049f1f:	add    BYTE PTR [rdx],ah
   140049f21:	add    eax,0x11993
   140049f26:	add    BYTE PTR [rax],al
   140049f28:	push   rax
   140049f29:	xor    eax,0x5
   140049f2e:	add    BYTE PTR [rax],al
   140049f30:	add    BYTE PTR [rax],al
   140049f32:	add    BYTE PTR [rax],al
   140049f34:	add    DWORD PTR [rax],eax
   140049f36:	add    BYTE PTR [rax],al
   140049f38:	mov    eax,0x20000538
	...
   140049f4d:	add    BYTE PTR [rax],al
   140049f4f:	add    BYTE PTR [rdx],ah
   140049f51:	add    eax,0x81993
   140049f56:	add    BYTE PTR [rax],al
   140049f58:	adc    BYTE PTR [rcx],bh
   140049f5a:	add    eax,0x0
   140049f5f:	add    BYTE PTR [rax],al
   140049f61:	add    BYTE PTR [rax],al
   140049f63:	add    BYTE PTR [rip+0x50000000],al        # 0x190049f69
   140049f69:	cmp    DWORD PTR [rip+0x2800],eax        # 0x14004c76f
	...
   140049f7f:	add    BYTE PTR [rdx],ah
   140049f81:	add    eax,0x31993
   140049f86:	add    BYTE PTR [rax],al
   140049f88:	cwde   
   140049f89:	cmp    DWORD PTR [rip+0x0],eax        # 0x140049f8f
   140049f8f:	add    BYTE PTR [rax],al
   140049f91:	add    BYTE PTR [rax],al
   140049f93:	add    BYTE PTR [rbx],al
   140049f95:	add    BYTE PTR [rax],al
   140049f97:	add    BYTE PTR [rax+0x30000539],dh
	...
   140049fad:	add    BYTE PTR [rax],al
   140049faf:	add    BYTE PTR [rdx],ah
   140049fb1:	add    eax,0x51993
   140049fb6:	add    BYTE PTR [rax],al
   140049fb8:	in     al,0x39
   140049fba:	add    eax,0x0
   140049fbf:	add    BYTE PTR [rax],al
   140049fc1:	add    BYTE PTR [rax],al
   140049fc3:	add    BYTE PTR [rsi],al
   140049fc5:	add    BYTE PTR [rax],al
   140049fc7:	add    BYTE PTR [rdx+rdi*1],cl
   140049fca:	add    eax,0x4800
	...
   140049fdf:	add    BYTE PTR [rdx],ah
   140049fe1:	add    eax,0x71993
   140049fe6:	add    BYTE PTR [rax],al
   140049fe8:	cmp    al,BYTE PTR fs:[rip+0x100]        # 0x14004a0ef
   140049fef:	add    BYTE PTR [rdx+rdi*1+0xd0005],bl
   140049ff6:	add    BYTE PTR [rax],al
   140049ff8:	(bad)  
   140049ff9:	cmp    al,BYTE PTR [rip+0x8800]        # 0x1400527ff
	...
   14004a00f:	add    BYTE PTR [rdx],ah
   14004a011:	add    eax,0x21993
   14004a016:	add    BYTE PTR [rax],al
   14004a018:	push   0x53b
   14004a01d:	add    BYTE PTR [rax],al
   14004a01f:	add    BYTE PTR [rax],al
   14004a021:	add    BYTE PTR [rax],al
   14004a023:	add    BYTE PTR [rbx],al
   14004a025:	add    BYTE PTR [rax],al
   14004a027:	add    BYTE PTR [rax+0x3b],bh
   14004a02a:	add    eax,0x2000
	...
   14004a03f:	add    BYTE PTR [rdx],ah
   14004a041:	add    eax,0x21993
   14004a046:	add    BYTE PTR [rax],al
   14004a048:	sbb    al,0xf3
   14004a04a:	add    al,0x0
   14004a04c:	add    DWORD PTR [rax],eax
   14004a04e:	add    BYTE PTR [rax],al
   14004a050:	mov    ah,0x3b
   14004a052:	add    eax,0x600
   14004a057:	add    ah,bl
   14004a059:	cmp    eax,DWORD PTR [rip+0x4800]        # 0x14004e85f
	...
   14004a06f:	add    BYTE PTR [rdx],ah
   14004a071:	add    eax,0x21993
   14004a076:	add    BYTE PTR [rax],al
   14004a078:	sbb    al,0xf3
   14004a07a:	add    al,0x0
   14004a07c:	add    DWORD PTR [rax],eax
   14004a07e:	add    BYTE PTR [rax],al
   14004a080:	cmp    al,0x5
   14004a083:	add    BYTE PTR [rsi],al
   14004a085:	add    BYTE PTR [rax],al
   14004a087:	add    BYTE PTR [rax+0x3c],ch
   14004a08a:	add    eax,0x4800
	...
   14004a09f:	add    BYTE PTR [rdx],ah
   14004a0a1:	add    eax,0x21993
   14004a0a6:	add    BYTE PTR [rax],al
   14004a0a8:	sbb    al,0xf3
   14004a0aa:	add    al,0x0
   14004a0ac:	add    DWORD PTR [rax],eax
   14004a0ae:	add    BYTE PTR [rax],al
   14004a0b0:	sar    BYTE PTR [rax*1+0x600],0x0
   14004a0b8:	call   0x17004a5f9
	...
   14004a0cd:	add    BYTE PTR [rax],al
   14004a0cf:	add    BYTE PTR [rdx],ah
   14004a0d1:	add    eax,0x21993
   14004a0d6:	add    BYTE PTR [rax],al
   14004a0d8:	sbb    al,0xf3
   14004a0da:	add    al,0x0
   14004a0dc:	add    DWORD PTR [rax],eax
   14004a0de:	add    BYTE PTR [rax],al
   14004a0e0:	cmp    rax,0x60005
   14004a0e6:	add    BYTE PTR [rax],al
   14004a0e8:	jo     0x14004a127
   14004a0ea:	add    eax,0x3800
	...
   14004a0ff:	add    BYTE PTR [rdx],ah
   14004a101:	add    eax,0x21993
   14004a106:	add    BYTE PTR [rax],al
   14004a108:	sbb    al,0xf3
   14004a10a:	add    al,0x0
   14004a10c:	add    DWORD PTR [rax],eax
   14004a10e:	add    BYTE PTR [rax],al
   14004a110:	sar    BYTE PTR [rip+0x40005],0x0        # 0x14008a11c
   14004a117:	add    al,ch
   14004a119:	cmp    eax,0x5
	...
   14004a12e:	add    BYTE PTR [rax],al
   14004a130:	and    al,BYTE PTR [rip+0x21993]        # 0x14006bac9
   14004a136:	add    BYTE PTR [rax],al
   14004a138:	sbb    al,0xf3
   14004a13a:	add    al,0x0
   14004a13c:	add    DWORD PTR [rax],eax
   14004a13e:	add    BYTE PTR [rax],al
   14004a140:	sub    BYTE PTR [rsi],bh
   14004a142:	add    eax,0x400
   14004a147:	add    BYTE PTR [rax+0x3e],dl
   14004a14a:	add    eax,0x0
	...
   14004a15f:	add    BYTE PTR [rdx],ah
   14004a161:	add    eax,0x21993
   14004a166:	add    BYTE PTR [rax],al
   14004a168:	sbb    al,0xf3
   14004a16a:	add    al,0x0
   14004a16c:	add    DWORD PTR [rax],eax
   14004a16e:	add    BYTE PTR [rax],al
   14004a170:	nop
   14004a171:	ds add eax,0x400
   14004a177:	add    BYTE PTR [rax+0x53e],bh
	...
   14004a18d:	add    BYTE PTR [rax],al
   14004a18f:	add    BYTE PTR [rdx],ah
   14004a191:	add    eax,0x21993
   14004a196:	add    BYTE PTR [rax],al
   14004a198:	sbb    al,0xf3
   14004a19a:	add    al,0x0
   14004a19c:	add    DWORD PTR [rax],eax
   14004a19e:	add    BYTE PTR [rax],al
   14004a1a0:	add    BYTE PTR [rdi],bh
   14004a1a2:	add    eax,0x600
   14004a1a7:	add    BYTE PTR [rdi+rdi*1],bh
   14004a1aa:	add    eax,0x2000
	...
   14004a1bf:	add    BYTE PTR [rdx],ah
   14004a1c1:	add    eax,0x21993
   14004a1c6:	add    BYTE PTR [rax],al
   14004a1c8:	sbb    al,0xf3
   14004a1ca:	add    al,0x0
   14004a1cc:	add    DWORD PTR [rax],eax
   14004a1ce:	add    BYTE PTR [rax],al
   14004a1d0:	movabs al,ds:0xc80000000400053f
   14004a1d9:	(bad)  
   14004a1da:	add    eax,0x0
	...
   14004a1ef:	add    BYTE PTR [rdx],ah
   14004a1f1:	add    eax,0x21993
   14004a1f6:	add    BYTE PTR [rax],al
   14004a1f8:	sbb    al,0xf3
   14004a1fa:	add    al,0x0
   14004a1fc:	add    DWORD PTR [rax],eax
   14004a1fe:	add    BYTE PTR [rax],al
   14004a200:	or     BYTE PTR [rax+0x5],al
   14004a203:	add    BYTE PTR [rax+rax*1],al
   14004a206:	add    BYTE PTR [rax],al
   14004a208:	xor    BYTE PTR [rax+0x5],al
	...
   14004a21f:	add    BYTE PTR [rdx],ah
   14004a221:	add    eax,0x81993
   14004a226:	add    BYTE PTR [rax],al
   14004a228:	js     0x14004a26a
   14004a22a:	add    eax,0x0
   14004a22f:	add    BYTE PTR [rax],al
   14004a231:	add    BYTE PTR [rax],al
   14004a233:	add    BYTE PTR [rip+0xffffffffb8000000],al        # 0xf804a239
   14004a239:	rex add eax,0x2000
	...
   14004a24f:	add    BYTE PTR [rdx],ah
   14004a251:	add    eax,0x251993
   14004a256:	add    BYTE PTR [rax],al
   14004a258:	sub    BYTE PTR [rcx+0x5],al
   14004a25b:	add    BYTE PTR [rcx],al
   14004a25d:	add    BYTE PTR [rax],al
   14004a25f:	add    BYTE PTR [rax+0x42],dl
   14004a262:	add    eax,0x3200
   14004a267:	add    BYTE PTR [rdx+rax*2+0x1a80005],cl
	...
   14004a27e:	add    BYTE PTR [rax],al
   14004a280:	and    al,BYTE PTR [rip+0x81993]        # 0x1400cbc19
   14004a286:	add    BYTE PTR [rax],al
   14004a288:	push   rax
   14004a289:	rex.R add eax,0x0
   14004a28f:	add    BYTE PTR [rax],al
   14004a291:	add    BYTE PTR [rax],al
   14004a293:	add    BYTE PTR [rbx],al
   14004a295:	add    BYTE PTR [rax],al
   14004a297:	add    BYTE PTR [rax-0x6ffffabc],dl
	...
   14004a2ad:	add    BYTE PTR [rax],al
   14004a2af:	add    BYTE PTR [rdx],ah
   14004a2b1:	add    eax,0x1a1993
   14004a2b6:	add    BYTE PTR [rax],al
   14004a2b8:	int3   
   14004a2b9:	rex.R add eax,0x0
   14004a2bf:	add    BYTE PTR [rax],al
   14004a2c1:	add    BYTE PTR [rax],al
   14004a2c3:	add    BYTE PTR [rip+0xffffffff9c000000],dl        # 0xdc04a2c9
   14004a2c9:	rex.RB add eax,0x9800
	...
   14004a2df:	add    BYTE PTR [rdx],ah
   14004a2e1:	add    eax,0x11993
   14004a2e6:	add    BYTE PTR [rax],al
   14004a2e8:	fs rex.RX add eax,0x0
   14004a2ef:	add    BYTE PTR [rax],al
   14004a2f1:	add    BYTE PTR [rax],al
   14004a2f3:	add    BYTE PTR [rbx],al
   14004a2f5:	add    BYTE PTR [rax],al
   14004a2f7:	add    BYTE PTR [rsi+rax*2+0x5],ch
   14004a2fb:	add    BYTE PTR [rax+0x0],cl
	...
   14004a30e:	add    BYTE PTR [rax],al
   14004a310:	and    al,BYTE PTR [rip+0x91993]        # 0x1400dbca9
   14004a316:	add    BYTE PTR [rax],al
   14004a318:	enter  0x546,0x0
   14004a31c:	add    DWORD PTR [rax],eax
   14004a31e:	add    BYTE PTR [rax],al
   14004a320:	adc    BYTE PTR [rdi+0x5],al
   14004a323:	add    BYTE PTR [rbx],cl
   14004a325:	add    BYTE PTR [rax],al
   14004a327:	add    BYTE PTR [rax],bh
   14004a329:	rex.RXB add eax,0xb000
	...
   14004a33f:	add    BYTE PTR [rdx],ah
   14004a341:	add    eax,0x11993
   14004a346:	add    BYTE PTR [rax],al
   14004a348:	cmp    al,0x48
   14004a34a:	add    eax,0x0
   14004a34f:	add    BYTE PTR [rax],al
   14004a351:	add    BYTE PTR [rax],al
   14004a353:	add    BYTE PTR [rbx],al
   14004a355:	add    BYTE PTR [rax],al
   14004a357:	add    ah,cl
   14004a359:	rex.RXB add eax,0x3000
	...
   14004a36f:	add    BYTE PTR [rdx],ah
   14004a371:	add    eax,0x11993
   14004a376:	add    BYTE PTR [rax],al
   14004a378:	or     BYTE PTR [rax+0x5],cl
	...
   14004a383:	add    BYTE PTR [rbx],al
   14004a385:	add    BYTE PTR [rax],al
   14004a387:	add    BYTE PTR [rax],dl
   14004a389:	add    rax,0x5000
	...
   14004a39f:	add    BYTE PTR [rdx],ah
   14004a3a1:	add    eax,0x11993
   14004a3a6:	add    BYTE PTR [rax],al
   14004a3a8:	cmp    al,0x48
   14004a3aa:	add    eax,0x0
   14004a3af:	add    BYTE PTR [rax],al
   14004a3b1:	add    BYTE PTR [rax],al
   14004a3b3:	add    BYTE PTR [rbx],al
   14004a3b5:	add    BYTE PTR [rax],al
   14004a3b7:	add    BYTE PTR [rax+rcx*2+0x5],al
   14004a3bb:	add    BYTE PTR [rax],ah
	...
   14004a3cd:	add    BYTE PTR [rax],al
   14004a3cf:	add    BYTE PTR [rdx],ah
   14004a3d1:	add    eax,0xa1993
   14004a3d6:	add    BYTE PTR [rax],al
   14004a3d8:	or     BYTE PTR [rax+0x5],0x0
	...
   14004a3e4:	or     BYTE PTR [rax],al
   14004a3e6:	add    BYTE PTR [rax],al
   14004a3e8:	ror    BYTE PTR [rax+0x5],1
   14004a3eb:	add    BYTE PTR [rax],dh
	...
   14004a3fd:	add    BYTE PTR [rax],al
   14004a3ff:	add    BYTE PTR [rdx],ah
   14004a401:	add    eax,0x11993
   14004a406:	add    BYTE PTR [rax],al
   14004a408:	and    BYTE PTR [rcx+0x5],cl
	...
   14004a413:	add    BYTE PTR [rcx],al
   14004a415:	add    BYTE PTR [rax],al
   14004a417:	add    BYTE PTR [rax],ch
   14004a419:	rex.WB add rax,0x2000
	...
   14004a42f:	add    BYTE PTR [rdx],ah
   14004a431:	add    eax,0x11993
   14004a436:	add    BYTE PTR [rax],al
   14004a438:	rex
   14004a439:	rex.WB add rax,0x0
   14004a43f:	add    BYTE PTR [rax],al
   14004a441:	add    BYTE PTR [rax],al
   14004a443:	add    BYTE PTR [rcx],al
   14004a445:	add    BYTE PTR [rax],al
   14004a447:	add    BYTE PTR [rax+0x49],cl
   14004a44a:	add    eax,0x2000
	...
   14004a45f:	add    BYTE PTR [rdx],ah
   14004a461:	add    eax,0x11993
   14004a466:	add    BYTE PTR [rax],al
   14004a468:	(bad)  
   14004a469:	rex.WB add rax,0x0
   14004a46f:	add    BYTE PTR [rax],al
   14004a471:	add    BYTE PTR [rax],al
   14004a473:	add    BYTE PTR [rcx],al
   14004a475:	add    BYTE PTR [rax],al
   14004a477:	add    BYTE PTR [rax+0x49],ch
   14004a47a:	add    eax,0x2000
	...
   14004a48f:	add    BYTE PTR [rdx],ah
   14004a491:	add    eax,0x11993
   14004a496:	add    BYTE PTR [rax],al
   14004a498:	or     BYTE PTR [rcx+0x5],0x0
	...
   14004a4a4:	add    DWORD PTR [rax],eax
   14004a4a6:	add    BYTE PTR [rax],al
   14004a4a8:	mov    BYTE PTR [rcx+0x5],cl
   14004a4ab:	add    BYTE PTR [rax],ah
	...
   14004a4bd:	add    BYTE PTR [rax],al
   14004a4bf:	add    BYTE PTR [rdx],ah
   14004a4c1:	add    eax,0x11993
   14004a4c6:	add    BYTE PTR [rax],al
   14004a4c8:	movabs al,ds:0x549
   14004a4d1:	add    BYTE PTR [rax],al
   14004a4d3:	add    BYTE PTR [rdx],al
   14004a4d5:	add    BYTE PTR [rax],al
   14004a4d7:	add    BYTE PTR [rax+0x28000549],ch
	...
   14004a4ed:	add    BYTE PTR [rax],al
   14004a4ef:	add    BYTE PTR [rdx],ah
   14004a4f1:	add    eax,0x21993
   14004a4f6:	add    BYTE PTR [rax],al
   14004a4f8:	enter  0x549,0x0
	...
   14004a504:	add    eax,DWORD PTR [rax]
   14004a506:	add    BYTE PTR [rax],al
   14004a508:	fmul   DWORD PTR [rcx+0x5]
   14004a50b:	add    BYTE PTR [rax],ah
	...
   14004a51d:	add    BYTE PTR [rax],al
   14004a51f:	add    BYTE PTR [rdx],ah
   14004a521:	add    eax,0x11993
   14004a526:	add    BYTE PTR [rax],al
   14004a528:	or     al,0x4a
   14004a52a:	add    eax,0x0
   14004a52f:	add    BYTE PTR [rax],al
   14004a531:	add    BYTE PTR [rax],al
   14004a533:	add    BYTE PTR [rip+0x14000000],al        # 0x15404a539
   14004a539:	rex.WX add rax,0x2000
	...
   14004a54f:	add    BYTE PTR [rdx],ah
   14004a551:	add    eax,0x41993
   14004a556:	add    BYTE PTR [rax],al
   14004a558:	pop    rax
   14004a559:	rex.WX add rax,0x0
   14004a55f:	add    BYTE PTR [rax],al
   14004a561:	add    BYTE PTR [rax],al
   14004a563:	add    BYTE PTR [rcx],cl
   14004a565:	add    BYTE PTR [rax],al
   14004a567:	add    BYTE PTR [rax+0x4a],bh
   14004a56a:	add    eax,0x3000
	...
   14004a57f:	add    BYTE PTR [rdx],ah
   14004a581:	add    eax,0x21993
   14004a586:	add    BYTE PTR [rax],al
   14004a588:	fmul   QWORD PTR [rdx+0x5]
	...
   14004a593:	add    BYTE PTR [rbx],al
   14004a595:	add    BYTE PTR [rax],al
   14004a597:	add    ah,ch
   14004a599:	rex.WX add rax,0x4800
	...
   14004a5af:	add    BYTE PTR [rdx],ah
   14004a5b1:	add    eax,0x21993
   14004a5b6:	add    BYTE PTR [rax],al
   14004a5b8:	adc    al,0x4b
   14004a5ba:	add    eax,0x0
   14004a5bf:	add    BYTE PTR [rax],al
   14004a5c1:	add    BYTE PTR [rax],al
   14004a5c3:	add    BYTE PTR [rip+0x24000000],al        # 0x16404a5c9
   14004a5c9:	rex.WXB add rax,0x2000
	...
   14004a5df:	add    BYTE PTR [rdx],ah
   14004a5e1:	add    eax,0x21993
   14004a5e6:	add    BYTE PTR [rax],al
   14004a5e8:	adc    al,0x4b
   14004a5ea:	add    eax,0x0
   14004a5ef:	add    BYTE PTR [rax],al
   14004a5f1:	add    BYTE PTR [rax],al
   14004a5f3:	add    BYTE PTR [rip+0x5c000000],al        # 0x19c04a5f9
   14004a5f9:	rex.WXB add rax,0x2000
	...
   14004a60f:	add    BYTE PTR [rdx],ah
   14004a611:	add    eax,0x11993
   14004a616:	add    BYTE PTR [rax],al
   14004a618:	xchg   esp,eax
   14004a619:	rex.WXB add rax,0x0
   14004a61f:	add    BYTE PTR [rax],al
   14004a621:	add    BYTE PTR [rax],al
   14004a623:	add    BYTE PTR [rbx],al
   14004a625:	add    BYTE PTR [rax],al
   14004a627:	add    BYTE PTR [rbx+rcx*2+0x200005],bl
	...
   14004a63e:	add    BYTE PTR [rax],al
   14004a640:	and    al,BYTE PTR [rip+0x51993]        # 0x14009bfd9
   14004a646:	add    BYTE PTR [rax],al
   14004a648:	loopne 0x14004a695
   14004a64a:	add    eax,0x0
   14004a64f:	add    BYTE PTR [rax],al
   14004a651:	add    BYTE PTR [rax],al
   14004a653:	add    BYTE PTR [rbx],al
   14004a655:	add    BYTE PTR [rax],al
   14004a657:	add    BYTE PTR [rax],cl
   14004a659:	rex.WR add rax,0x3000
	...
   14004a66f:	add    BYTE PTR [rdx],ah
   14004a671:	add    eax,0x11993
   14004a676:	add    BYTE PTR [rax],al
   14004a678:	pop    rax
   14004a679:	rex.WR add rax,0x0
   14004a67f:	add    BYTE PTR [rax],al
   14004a681:	add    BYTE PTR [rax],al
   14004a683:	add    BYTE PTR [rbx],al
   14004a685:	add    BYTE PTR [rax],al
   14004a687:	add    BYTE PTR [rax+0x4c],ah
   14004a68a:	add    eax,0x2000
	...
   14004a69f:	add    BYTE PTR [rdx],ah
   14004a6a1:	add    eax,0x11993
   14004a6a6:	add    BYTE PTR [rax],al
   14004a6a8:	(bad)  
   14004a6a9:	rex.WR add rax,0x0
   14004a6af:	add    BYTE PTR [rax],al
   14004a6b1:	add    BYTE PTR [rax],al
   14004a6b3:	add    BYTE PTR [rbx],al
   14004a6b5:	add    BYTE PTR [rax],al
   14004a6b7:	add    ah,bl
   14004a6b9:	rex.WR add rax,0x2800
	...
   14004a6cf:	add    BYTE PTR [rdx],ah
   14004a6d1:	add    eax,0x31993
   14004a6d6:	add    BYTE PTR [rax],al
   14004a6d8:	or     al,0x4d
   14004a6da:	add    eax,0x100
   14004a6df:	add    BYTE PTR [rcx*2+0x80005],ah
   14004a6e6:	add    BYTE PTR [rax],al
   14004a6e8:	(bad)  
   14004a6e9:	rex.WRB add rax,0x4000
	...
   14004a6ff:	add    BYTE PTR [rdx],ah
   14004a701:	add    eax,0x11993
   14004a706:	add    BYTE PTR [rax],al
   14004a708:	ror    BYTE PTR [rbp+0x5],1
	...
   14004a713:	add    BYTE PTR [rbx],al
   14004a715:	add    BYTE PTR [rax],al
   14004a717:	add    al,bl
   14004a719:	rex.WRB add rax,0x4800
	...
   14004a72f:	add    BYTE PTR [rdx],ah
   14004a731:	add    eax,0x31993
   14004a736:	add    BYTE PTR [rax],al
   14004a738:	cld    
   14004a739:	rex.WRX add rax,0x100
   14004a73f:	add    BYTE PTR [rdi+rcx*2],dl
   14004a742:	add    eax,0x700
   14004a747:	add    BYTE PTR [rdi+rcx*2],bh
   14004a74a:	add    eax,0x2000
	...
   14004a75f:	add    BYTE PTR [rdx],ah
   14004a761:	add    eax,0x21993
   14004a766:	add    BYTE PTR [rax],al
   14004a768:	sbb    al,0xf3
   14004a76a:	add    al,0x0
   14004a76c:	add    DWORD PTR [rax],eax
   14004a76e:	add    BYTE PTR [rax],al
   14004a770:	xchg   esp,eax
   14004a771:	rex.WRXB add rax,0x500
   14004a777:	add    BYTE PTR [rdi+rcx*2+0x200005],bh
	...
   14004a78e:	add    BYTE PTR [rax],al
   14004a790:	and    al,BYTE PTR [rip+0x21993]        # 0x14006c129
   14004a796:	add    BYTE PTR [rax],al
   14004a798:	sbb    al,0xf3
   14004a79a:	add    al,0x0
   14004a79c:	add    DWORD PTR [rax],eax
   14004a79e:	add    BYTE PTR [rax],al
   14004a7a0:	adc    BYTE PTR [rax+0x5],dl
   14004a7a3:	add    BYTE PTR [rip+0x38000000],al        # 0x17804a7a9
   14004a7a9:	push   rax
   14004a7aa:	add    eax,0x3000
	...
   14004a7bf:	add    BYTE PTR [rdx],ah
   14004a7c1:	add    eax,0x11993
   14004a7c6:	add    BYTE PTR [rax],al
   14004a7c8:	ror    BYTE PTR [rdx],1
   14004a7ca:	add    eax,0x0
   14004a7cf:	add    BYTE PTR [rax],al
   14004a7d1:	add    BYTE PTR [rax],al
   14004a7d3:	add    BYTE PTR [rbx],al
   14004a7d5:	add    BYTE PTR [rax],al
   14004a7d7:	add    BYTE PTR [rax+rdx*2+0x200005],al
	...
   14004a7ee:	add    BYTE PTR [rax],al
   14004a7f0:	and    al,BYTE PTR [rip+0x21993]        # 0x14006c189
   14004a7f6:	add    BYTE PTR [rax],al
   14004a7f8:	sbb    al,0xf3
   14004a7fa:	add    al,0x0
   14004a7fc:	add    DWORD PTR [rax],eax
   14004a7fe:	add    BYTE PTR [rax],al
   14004a800:	mov    ah,0x50
   14004a802:	add    eax,0x500
   14004a807:	add    ah,bl
   14004a809:	push   rax
   14004a80a:	add    eax,0x3000
	...
   14004a81f:	add    BYTE PTR [rdx],ah
   14004a821:	add    eax,0x41993
   14004a826:	add    BYTE PTR [rax],al
   14004a828:	xor    BYTE PTR [rcx+0x5],dl
	...
   14004a833:	add    BYTE PTR [rip+0x50000000],al        # 0x19004a839
   14004a839:	push   rcx
   14004a83a:	add    eax,0x2000
	...
   14004a84f:	add    BYTE PTR [rdx],ah
   14004a851:	add    eax,0x51993
   14004a856:	add    BYTE PTR [rax],al
   14004a858:	xchg   esp,eax
   14004a859:	push   rcx
   14004a85a:	add    eax,0x0
   14004a85f:	add    BYTE PTR [rax],al
   14004a861:	add    BYTE PTR [rax],al
   14004a863:	add    BYTE PTR [rax],cl
   14004a865:	add    BYTE PTR [rax],al
   14004a867:	add    BYTE PTR [rcx+rdx*2+0x200005],bh
	...
   14004a87e:	add    BYTE PTR [rax],al
   14004a880:	and    al,BYTE PTR [rip+0x11993]        # 0x14005c219
   14004a886:	add    BYTE PTR [rax],al
   14004a888:	sbb    al,0x52
   14004a88a:	add    eax,0x0
   14004a88f:	add    BYTE PTR [rax],al
   14004a891:	add    BYTE PTR [rax],al
   14004a893:	add    BYTE PTR [rbx],al
   14004a895:	add    BYTE PTR [rax],al
   14004a897:	add    BYTE PTR [rdx+rdx*2],ah
   14004a89a:	add    eax,0x8800
	...
   14004a8af:	add    BYTE PTR [rdx],ah
   14004a8b1:	add    eax,0x11993
   14004a8b6:	add    BYTE PTR [rax],al
   14004a8b8:	pop    rax
   14004a8b9:	push   rdx
   14004a8ba:	add    eax,0x0
   14004a8bf:	add    BYTE PTR [rax],al
   14004a8c1:	add    BYTE PTR [rax],al
   14004a8c3:	add    BYTE PTR [rbx],al
   14004a8c5:	add    BYTE PTR [rax],al
   14004a8c7:	add    BYTE PTR [rax+0x52],ah
   14004a8ca:	add    eax,0x7000
	...
   14004a8df:	add    BYTE PTR [rdx],ah
   14004a8e1:	add    eax,0x21993
   14004a8e6:	add    BYTE PTR [rax],al
   14004a8e8:	pushf  
   14004a8e9:	push   rdx
   14004a8ea:	add    eax,0x0
   14004a8ef:	add    BYTE PTR [rax],al
   14004a8f1:	add    BYTE PTR [rax],al
   14004a8f3:	add    BYTE PTR [rip+0xffffffffac000000],al        # 0xec04a8f9
   14004a8f9:	push   rdx
   14004a8fa:	add    eax,0x8000
	...
   14004a90f:	add    BYTE PTR [rdx],ah
   14004a911:	add    eax,0x51993
   14004a916:	add    BYTE PTR [rax],al
   14004a918:	clc    
   14004a919:	push   rdx
   14004a91a:	add    eax,0x0
   14004a91f:	add    BYTE PTR [rax],al
   14004a921:	add    BYTE PTR [rax],al
   14004a923:	add    BYTE PTR [rax],cl
   14004a925:	add    BYTE PTR [rax],al
   14004a927:	add    BYTE PTR [rax],ah
   14004a929:	push   rbx
   14004a92a:	add    eax,0x7800
	...
   14004a93f:	add    BYTE PTR [rdx],ah
   14004a941:	add    eax,0x11993
   14004a946:	add    BYTE PTR [rax],al
   14004a948:	test   BYTE PTR [rbx+0x5],dl
	...
   14004a953:	add    BYTE PTR [rbx],al
   14004a955:	add    BYTE PTR [rax],al
   14004a957:	add    BYTE PTR [rbx+rdx*2+0x700005],cl
	...
   14004a96e:	add    BYTE PTR [rax],al
   14004a970:	and    al,BYTE PTR [rip+0x11993]        # 0x14005c309
   14004a976:	add    BYTE PTR [rax],al
   14004a978:	(bad)  
   14004a979:	push   rbx
   14004a97a:	add    eax,0x0
   14004a97f:	add    BYTE PTR [rax],al
   14004a981:	add    BYTE PTR [rax],al
   14004a983:	add    BYTE PTR [rbx],al
   14004a985:	add    BYTE PTR [rax],al
   14004a987:	add    ah,cl
   14004a989:	push   rbx
   14004a98a:	add    eax,0x4000
	...
   14004a99f:	add    BYTE PTR [rdx],ah
   14004a9a1:	add    eax,0x11993
   14004a9a6:	add    BYTE PTR [rax],al
   14004a9a8:	hlt    
   14004a9a9:	push   rbx
   14004a9aa:	add    eax,0x0
   14004a9af:	add    BYTE PTR [rax],al
   14004a9b1:	add    BYTE PTR [rax],al
   14004a9b3:	add    BYTE PTR [rbx],al
   14004a9b5:	add    BYTE PTR [rax],al
   14004a9b7:	add    ah,bh
   14004a9b9:	push   rbx
   14004a9ba:	add    eax,0x2000
	...
   14004a9cf:	add    BYTE PTR [rdx],ah
   14004a9d1:	add    eax,0x11993
   14004a9d6:	add    BYTE PTR [rax],al
   14004a9d8:	hlt    
   14004a9d9:	push   rbx
   14004a9da:	add    eax,0x0
   14004a9df:	add    BYTE PTR [rax],al
   14004a9e1:	add    BYTE PTR [rax],al
   14004a9e3:	add    BYTE PTR [rcx],al
   14004a9e5:	add    BYTE PTR [rax],al
   14004a9e7:	add    BYTE PTR [rsp+rdx*2],ah
   14004a9ea:	add    eax,0x2000
	...
   14004a9ff:	add    BYTE PTR [rdx],ah
   14004aa01:	add    eax,0x11993
   14004aa06:	add    BYTE PTR [rax],al
   14004aa08:	hlt    
   14004aa09:	push   rbx
   14004aa0a:	add    eax,0x0
   14004aa0f:	add    BYTE PTR [rax],al
   14004aa11:	add    BYTE PTR [rax],al
   14004aa13:	add    BYTE PTR [rcx],al
   14004aa15:	add    BYTE PTR [rax],al
   14004aa17:	add    BYTE PTR [rax+0x54],al
   14004aa1a:	add    eax,0x2000
	...
   14004aa2f:	add    BYTE PTR [rdx],ah
   14004aa31:	add    eax,0x31993
   14004aa36:	add    BYTE PTR [rax],al
   14004aa38:	pop    rsp
   14004aa39:	push   rsp
   14004aa3a:	add    eax,0x100
   14004aa3f:	add    BYTE PTR [rsp+rdx*2+0x5],dh
   14004aa43:	add    BYTE PTR [rsi],al
   14004aa45:	add    BYTE PTR [rax],al
   14004aa47:	add    BYTE PTR [rsp+rdx*2+0x300005],bl
	...
   14004aa5e:	add    BYTE PTR [rax],al
   14004aa60:	and    al,BYTE PTR [rip+0x61993]        # 0x1400ac3f9
   14004aa66:	add    BYTE PTR [rax],al
   14004aa68:	adc    al,0x55
   14004aa6a:	add    eax,0x0
   14004aa6f:	add    BYTE PTR [rax],al
   14004aa71:	add    BYTE PTR [rax],al
   14004aa73:	add    BYTE PTR [rax+rax*1],al
   14004aa76:	add    BYTE PTR [rax],al
   14004aa78:	rex.R push rbp
   14004aa7a:	add    eax,0x2800
	...
   14004aa8f:	add    BYTE PTR [rdx],ah
   14004aa91:	add    eax,0x11993
   14004aa96:	add    BYTE PTR [rax],al
   14004aa98:	je     0x14004aaef
   14004aa9a:	add    eax,0x0
   14004aa9f:	add    BYTE PTR [rax],al
   14004aaa1:	add    BYTE PTR [rax],al
   14004aaa3:	add    BYTE PTR [rdx],al
   14004aaa5:	add    BYTE PTR [rax],al
   14004aaa7:	add    BYTE PTR [rbp+rdx*2+0x5],bh
   14004aaab:	add    BYTE PTR [rax],ch
	...
   14004aabd:	add    BYTE PTR [rax],al
   14004aabf:	add    BYTE PTR [rdx],ah
   14004aac1:	add    eax,0x11993
   14004aac6:	add    BYTE PTR [rax],al
   14004aac8:	hlt    
   14004aac9:	push   rbx
   14004aaca:	add    eax,0x0
   14004aacf:	add    BYTE PTR [rax],al
   14004aad1:	add    BYTE PTR [rax],al
   14004aad3:	add    BYTE PTR [rbx],al
   14004aad5:	add    BYTE PTR [rax],al
   14004aad7:	add    BYTE PTR [rbp+rdx*2+0x200005],bl
	...
   14004aaee:	add    BYTE PTR [rax],al
   14004aaf0:	and    al,BYTE PTR [rip+0x21993]        # 0x14006c489
   14004aaf6:	add    BYTE PTR [rax],al
   14004aaf8:	(bad)  
   14004aaf9:	push   rbp
   14004aafa:	add    eax,0x0
   14004aaff:	add    BYTE PTR [rax],al
   14004ab01:	add    BYTE PTR [rax],al
   14004ab03:	add    BYTE PTR [rax+rax*1],al
   14004ab06:	add    BYTE PTR [rax],al
   14004ab08:	(bad)  
   14004ab09:	push   rbp
   14004ab0a:	add    eax,0x2000
	...
   14004ab1f:	add    BYTE PTR [rdx],ah
   14004ab21:	add    eax,0x21993
   14004ab26:	add    BYTE PTR [rax],al
   14004ab28:	and    BYTE PTR [rsi+0x5],dl
	...
   14004ab33:	add    BYTE PTR [rcx],al
   14004ab35:	add    BYTE PTR [rax],al
   14004ab37:	add    BYTE PTR [rsi+rdx*2],al
   14004ab3a:	add    eax,0x2000
	...
   14004ab4f:	add    BYTE PTR [rdx],ah
   14004ab51:	add    eax,0x21993
   14004ab56:	add    BYTE PTR [rax],al
   14004ab58:	and    BYTE PTR [rsi+0x5],dl
	...
   14004ab63:	add    BYTE PTR [rcx],al
   14004ab65:	add    BYTE PTR [rax],al
   14004ab67:	add    BYTE PTR [rax],dh
   14004ab69:	push   rsi
   14004ab6a:	add    eax,0x2000
	...
   14004ab7f:	add    BYTE PTR [rdx],ah
   14004ab81:	add    eax,0xa1993
   14004ab86:	add    BYTE PTR [rax],al
   14004ab88:	(bad)  
   14004ab89:	push   rsi
   14004ab8a:	add    eax,0x0
   14004ab8f:	add    BYTE PTR [rax],al
   14004ab91:	add    BYTE PTR [rax],al
   14004ab93:	add    BYTE PTR [rdx],cl
   14004ab95:	add    BYTE PTR [rax],al
   14004ab97:	add    BYTE PTR [rax-0x4ffffaaa],dh
	...
   14004abad:	add    BYTE PTR [rax],al
   14004abaf:	add    BYTE PTR [rdx],ah
   14004abb1:	add    eax,0xa1993
   14004abb6:	add    BYTE PTR [rax],al
   14004abb8:	adc    al,0x57
   14004abba:	add    eax,0x0
   14004abbf:	add    BYTE PTR [rax],al
   14004abc1:	add    BYTE PTR [rax],al
   14004abc3:	add    BYTE PTR [rbx],cl
   14004abc5:	add    BYTE PTR [rax],al
   14004abc7:	add    BYTE PTR [rdi+rdx*2+0x5],ah
   14004abcb:	add    BYTE PTR [rax],ah
	...
   14004abdd:	add    BYTE PTR [rax],al
   14004abdf:	add    BYTE PTR [rdx],ah
   14004abe1:	add    eax,0xa1993
   14004abe6:	add    BYTE PTR [rax],al
   14004abe8:	fcom   QWORD PTR [rdi+0x5]
	...
   14004abf3:	add    BYTE PTR [rbx],cl
   14004abf5:	add    BYTE PTR [rax],al
   14004abf7:	add    BYTE PTR [rax+rbx*2],ch
   14004abfa:	add    eax,0x7000
	...
   14004ac0f:	add    BYTE PTR [rdx],ah
   14004ac11:	add    eax,0xa1993
   14004ac16:	add    BYTE PTR [rax],al
   14004ac18:	pushf  
   14004ac19:	pop    rax
   14004ac1a:	add    eax,0x0
   14004ac1f:	add    BYTE PTR [rax],al
   14004ac21:	add    BYTE PTR [rax],al
   14004ac23:	add    BYTE PTR [rbx],cl
   14004ac25:	add    BYTE PTR [rax],al
   14004ac27:	add    ah,ch
   14004ac29:	pop    rax
   14004ac2a:	add    eax,0x6800
	...
   14004ac3f:	add    BYTE PTR [rdx],ah
   14004ac41:	add    eax,0xc1993
   14004ac46:	add    BYTE PTR [rax],al
   14004ac48:	push   0x559
   14004ac4d:	add    BYTE PTR [rax],al
   14004ac4f:	add    BYTE PTR [rax],al
   14004ac51:	add    BYTE PTR [rax],al
   14004ac53:	add    BYTE PTR [rsi],cl
   14004ac55:	add    BYTE PTR [rax],al
   14004ac57:	add    al,cl
   14004ac59:	pop    rcx
   14004ac5a:	add    eax,0xb800
	...
   14004ac6f:	add    BYTE PTR [rdx],ah
   14004ac71:	add    eax,0xa1993
   14004ac76:	add    BYTE PTR [rax],al
   14004ac78:	fcom   QWORD PTR [rdi+0x5]
	...
   14004ac83:	add    BYTE PTR [rbx],cl
   14004ac85:	add    BYTE PTR [rax],al
   14004ac87:	add    BYTE PTR [rdx+rbx*2+0x5],dl
   14004ac8b:	add    BYTE PTR [rax+0x0],dh
	...
   14004ac9e:	add    BYTE PTR [rax],al
   14004aca0:	and    al,BYTE PTR [rip+0x11993]        # 0x14005c639
   14004aca6:	add    BYTE PTR [rax],al
   14004aca8:	(bad)  
   14004aca9:	pop    rdx
   14004acaa:	add    eax,0x0
   14004acaf:	add    BYTE PTR [rax],al
   14004acb1:	add    BYTE PTR [rax],al
   14004acb3:	add    BYTE PTR [rbx],al
   14004acb5:	add    BYTE PTR [rax],al
   14004acb7:	add    ah,cl
   14004acb9:	pop    rdx
   14004acba:	add    eax,0x4800
	...
   14004accf:	add    BYTE PTR [rdx],ah
   14004acd1:	add    eax,0x11993
   14004acd6:	add    BYTE PTR [rax],al
   14004acd8:	hlt    
   14004acd9:	pop    rdx
   14004acda:	add    eax,0x0
   14004acdf:	add    BYTE PTR [rax],al
   14004ace1:	add    BYTE PTR [rax],al
   14004ace3:	add    BYTE PTR [rbx],al
   14004ace5:	add    BYTE PTR [rax],al
   14004ace7:	add    ah,bh
   14004ace9:	pop    rdx
   14004acea:	add    eax,0x2000
	...
   14004acff:	add    BYTE PTR [rdx],ah
   14004ad01:	add    eax,0x11993
   14004ad06:	add    BYTE PTR [rax],al
   14004ad08:	hlt    
   14004ad09:	pop    rdx
   14004ad0a:	add    eax,0x0
   14004ad0f:	add    BYTE PTR [rax],al
   14004ad11:	add    BYTE PTR [rax],al
   14004ad13:	add    BYTE PTR [rbx],al
   14004ad15:	add    BYTE PTR [rax],al
   14004ad17:	add    BYTE PTR [rbx+rbx*2],ah
   14004ad1a:	add    eax,0x2000
	...
   14004ad2f:	add    BYTE PTR [rdx],ah
   14004ad31:	add    eax,0x11993
   14004ad36:	add    BYTE PTR [rax],al
   14004ad38:	movabs al,ds:0x549
   14004ad41:	add    BYTE PTR [rax],al
   14004ad43:	add    BYTE PTR [rdx],al
   14004ad45:	add    BYTE PTR [rax],al
   14004ad47:	add    BYTE PTR [rbx+rbx*2+0x5],cl
   14004ad4b:	add    BYTE PTR [rax],ch
	...
   14004ad5d:	add    BYTE PTR [rax],al
   14004ad5f:	add    BYTE PTR [rdx],ah
   14004ad61:	add    eax,0xd1993
   14004ad66:	add    BYTE PTR [rax],al
   14004ad68:	test   BYTE PTR [rbx+0x5],bl
	...
   14004ad73:	add    BYTE PTR [rdi],cl
   14004ad75:	add    BYTE PTR [rax],al
   14004ad77:	add    ah,ch
   14004ad79:	pop    rbx
   14004ad7a:	add    eax,0xd800
	...
   14004ad8f:	add    BYTE PTR [rdx],ah
   14004ad91:	add    eax,0x21993
   14004ad96:	add    BYTE PTR [rax],al
   14004ad98:	mov    BYTE PTR [rbp+rax*1+0x0],bl
	...
   14004ada4:	add    eax,0x98000000
   14004ada9:	pop    rsp
   14004adaa:	add    eax,0x4000
	...
   14004adbf:	add    BYTE PTR [rdx],ah
   14004adc1:	add    eax,0x21993
   14004adc6:	add    BYTE PTR [rax],al
   14004adc8:	fcomp  DWORD PTR [rbp+rax*1+0x0]
	...
   14004add4:	add    eax,DWORD PTR [rax]
   14004add6:	add    BYTE PTR [rax],al
   14004add8:	call   0x16804b339
	...
   14004ade5:	add    BYTE PTR [rax],al
   14004ade7:	add    BYTE PTR [rsp+rcx*4],cl
   14004adea:	add    eax,DWORD PTR [rax+0x1]
   14004aded:	add    BYTE PTR [rax],al
   14004adef:	add    BYTE PTR [rbp+0x2b],ah
   14004adf2:	xor    BYTE PTR [rax],dh
   14004adf4:	xor    BYTE PTR [rax],al
	...
   14004adfe:	add    BYTE PTR [rax],al
   14004ae00:	xor    DWORD PTR [rbx],esp
   14004ae02:	push   rbx
   14004ae03:	rex.WRX
   14004ae04:	rex.B
   14004ae05:	rex.WRX add BYTE PTR [rax],r8b
   14004ae08:	xor    DWORD PTR [rbx],esp
   14004ae0a:	rex.WB
   14004ae0b:	rex.WRX
   14004ae0c:	add    BYTE PTR [rax],r8b
   14004ae0f:	add    BYTE PTR [rcx],dh
   14004ae11:	and    ecx,DWORD PTR [rcx+0x4e]
   14004ae14:	rex.RX add BYTE PTR [rax],r8b
   14004ae17:	add    BYTE PTR [rcx],dh
   14004ae19:	and    edx,DWORD PTR [rcx+0x4e]
   14004ae1c:	rex.B
   14004ae1d:	rex.WRX add BYTE PTR [rax],r8b
   14004ae20:	jo     0x14004ae22
	...
   14004ae76:	add    BYTE PTR [rax],al
   14004ae78:	mov    BYTE PTR [rax+0x14005],dl
	...
   14004ae8e:	add    BYTE PTR [rax],al
   14004ae90:	push   rdx
   14004ae91:	push   rbx
   14004ae92:	rex.R push rbx
   14004ae94:	pop    rsi
   14004ae95:	jge    0x14004aea5
   14004ae97:	xchg   edx,eax
   14004ae98:	rex.WRXB jmp 0xc5befc17
   14004ae9e:	(bad)  
   14004ae9f:	(bad)  
   14004aea0:	mov    ebx,0x29ba607
   14004aea5:	add    BYTE PTR [rax],al
   14004aea7:	add    BYTE PTR [rsi+0x53],dl
   14004aeaa:	push   rax
   14004aeab:	gs jb  0x14004af14
   14004aeae:	rex.XB ins DWORD PTR es:[rdi],dx
   14004aeb0:	fs cs jo 0x14004af18
   14004aeb4:	(bad)  
   14004aeb5:	add    BYTE PTR [rax],al
   14004aeb7:	add    BYTE PTR [rbx],al
   14004aeb9:	add    BYTE PTR [rax],al
   14004aebb:	add    BYTE PTR [rax],cl
   14004aebd:	add    DWORD PTR [rax],eax
   14004aebf:	add    BYTE PTR [rax],cl
   14004aec1:	add    DWORD PTR [rax],eax
   14004aec3:	add    BYTE PTR [rax],al
   14004aec5:	add    BYTE PTR [rax],al
   14004aec7:	add    BYTE PTR [rcx],al
	...
   14004aed5:	nop
   14004aed6:	add    eax,0x4aef000
   14004aedb:	add    al,cl
   14004aedd:	scas   al,BYTE PTR es:[rdi]
   14004aede:	add    al,0x0
	...
   14004aef8:	add    DWORD PTR [rax],eax
   14004aefa:	add    BYTE PTR [rax],al
   14004aefc:	or     BYTE PTR [rdi+0x4],ch
   14004af02:	add    BYTE PTR [rax],al
   14004af04:	add    BYTE PTR [rax],al
   14004af06:	add    BYTE PTR [rax],al
   14004af08:	sbb    BYTE PTR [rdi+0x4],ch
	...
   14004af16:	add    BYTE PTR [rax],al
   14004af18:	add    BYTE PTR [rax+0x5],dl
   14004af1e:	add    BYTE PTR [rax],al
   14004af20:	add    BYTE PTR [rax],al
   14004af22:	add    BYTE PTR [rax],al
   14004af24:	(bad)  
   14004af25:	(bad)  
   14004af26:	(bad)  
   14004af27:	inc    DWORD PTR [rax]
   14004af29:	add    BYTE PTR [rax],al
   14004af2b:	add    BYTE PTR [rax+0x0],al
   14004af2e:	add    BYTE PTR [rax],al
   14004af30:	lock scas al,BYTE PTR es:[rdi]
   14004af32:	add    al,0x0
	...
   14004af40:	add    DWORD PTR [rax],eax
	...
   14004af4a:	add    BYTE PTR [rax],al
   14004af4c:	mov    bl,0x5
   14004af4f:	add    BYTE PTR [rax-0x51],ch
   14004af52:	add    al,0x0
   14004af54:	rex scas eax,DWORD PTR es:[rdi]
   14004af56:	add    al,0x0
	...
   14004af70:	add    al,BYTE PTR [rax]
   14004af72:	add    BYTE PTR [rax],al
   14004af74:	sub    BYTE PTR [rdi+0x4],0x0
   14004af7b:	add    BYTE PTR [rax],al
   14004af7d:	add    BYTE PTR [rax],al
   14004af7f:	add    BYTE PTR [rax-0x2ffffb51],bl
   14004af85:	(bad)
	...
   14004af98:	mov    bl,0x5
   14004af9b:	add    BYTE PTR [rcx],al
   14004af9d:	add    BYTE PTR [rax],al
   14004af9f:	add    BYTE PTR [rax],al
   14004afa1:	add    BYTE PTR [rax],al
   14004afa3:	add    bh,bh
   14004afa5:	(bad)  
   14004afa6:	(bad)  
   14004afa7:	inc    DWORD PTR [rax]
   14004afa9:	add    BYTE PTR [rax],al
   14004afab:	add    BYTE PTR [rax+0x0],al
   14004afae:	add    BYTE PTR [rax],al
   14004afb0:	push   0x4af
	...
   14004afbd:	add    BYTE PTR [rax],al
   14004afbf:	add    BYTE PTR [rcx],al
	...
   14004afc9:	add    BYTE PTR [rax],al
   14004afcb:	add    BYTE PTR [rax-0x4e],dl
   14004afce:	add    eax,0x4c76800
   14004afd3:	add    al,al
   14004afd5:	scas   eax,DWORD PTR es:[rdi]
   14004afd6:	add    al,0x0
	...
   14004afe8:	add    DWORD PTR [rax],eax
	...
   14004aff2:	add    BYTE PTR [rax],al
   14004aff4:	fsub   DWORD PTR [rdx-0x4feffffb]
   14004affa:	add    al,0x0
   14004affc:	call   0x14004b4b0
	...
   14004b015:	add    BYTE PTR [rax],al
   14004b017:	add    BYTE PTR [rbx],al
   14004b019:	add    BYTE PTR [rax],al
   14004b01b:	add    BYTE PTR [rax],ch
   14004b01d:	mov    al,0x4
	...
   14004b027:	add    BYTE PTR [rax-0x50],cl
   14004b02a:	add    al,0x0
   14004b02c:	rol    bh,0x4
   14004b02f:	add    al,dl
   14004b031:	(bad)
	...
   14004b048:	fsub   DWORD PTR [rdx+0x20005]
   14004b04e:	add    BYTE PTR [rax],al
   14004b050:	add    BYTE PTR [rax],al
   14004b052:	add    BYTE PTR [rax],al
   14004b054:	(bad)  
   14004b055:	(bad)  
   14004b056:	(bad)  
   14004b057:	inc    DWORD PTR [rax]
   14004b059:	add    BYTE PTR [rax],al
   14004b05b:	add    BYTE PTR [rax+0x0],al
   14004b05e:	add    BYTE PTR [rax],al
   14004b060:	adc    BYTE PTR [rax+0x4],dh
	...
   14004b06e:	add    BYTE PTR [rax],al
   14004b070:	add    DWORD PTR [rax],eax
	...
   14004b07a:	add    BYTE PTR [rax],al
   14004b07c:	add    BYTE PTR [rbx-0x4f67fffb],ah
   14004b082:	add    al,0x0
   14004b084:	jo     0x14004b036
   14004b086:	add    al,0x0
	...
   14004b0a0:	add    eax,DWORD PTR [rax]
   14004b0a2:	add    BYTE PTR [rax],al
   14004b0a4:	mov    al,0xb0
   14004b0a6:	add    al,0x0
	...
   14004b0b0:	shl    BYTE PTR [rax-0x383ffffc],1
   14004b0b6:	add    al,0x0
   14004b0b8:	rol    ch,1
   14004b0ba:	add    al,0x0
	...
   14004b0d0:	add    BYTE PTR [rbx+0x20005],ah
   14004b0d6:	add    BYTE PTR [rax],al
   14004b0d8:	add    BYTE PTR [rax],al
   14004b0da:	add    BYTE PTR [rax],al
   14004b0dc:	(bad)  
   14004b0dd:	(bad)  
   14004b0de:	(bad)  
   14004b0df:	inc    DWORD PTR [rax]
   14004b0e1:	add    BYTE PTR [rax],al
   14004b0e3:	add    BYTE PTR [rax+0x0],al
   14004b0e6:	add    BYTE PTR [rax],al
   14004b0e8:	cwde   
   14004b0e9:	mov    al,0x4
	...
   14004b0f7:	add    BYTE PTR [rcx],al
	...
   14004b101:	add    BYTE PTR [rax],al
   14004b103:	add    BYTE PTR [rax-0x5d],ah
   14004b106:	add    eax,0x4b12000
   14004b10b:	add    al,bh
   14004b10d:	mov    al,0x4
	...
   14004b127:	add    BYTE PTR [rdx],al
   14004b129:	add    BYTE PTR [rax],al
   14004b12b:	add    BYTE PTR [rax],bh
   14004b12d:	mov    cl,0x4
	...
   14004b137:	add    BYTE PTR [rax-0x4f],dl
   14004b13a:	add    al,0x0
   14004b13c:	rol    ch,1
   14004b13e:	add    al,0x0
	...
   14004b150:	(bad)  
   14004b151:	movabs ds:0x10005,eax
   14004b15a:	add    BYTE PTR [rax],al
   14004b15c:	(bad)  
   14004b15d:	(bad)  
   14004b15e:	(bad)  
   14004b15f:	inc    DWORD PTR [rax]
   14004b161:	add    BYTE PTR [rax],al
   14004b163:	add    BYTE PTR [rax+0x0],al
   14004b166:	add    BYTE PTR [rax],al
   14004b168:	and    BYTE PTR [rcx+0x4],dh
	...
   14004b17e:	add    BYTE PTR [rax],al
   14004b180:	add    DWORD PTR [rax],eax
   14004b182:	add    BYTE PTR [rax],al
   14004b184:	test   al,0xb3
   14004b186:	add    al,0x0
	...
   14004b194:	add    DWORD PTR [rax],eax
   14004b196:	add    BYTE PTR [rax],al
   14004b198:	add    eax,DWORD PTR [rax]
   14004b19a:	add    BYTE PTR [rax],al
   14004b19c:	xor    BYTE PTR [rdx+0x4],dh
   14004b1a2:	add    BYTE PTR [rax],al
   14004b1a4:	add    BYTE PTR [rax],al
   14004b1a6:	add    BYTE PTR [rax],al
   14004b1a8:	js     0x14004b14f
   14004b1aa:	add    eax,0x0
   14004b1af:	add    BYTE PTR [rax],al
   14004b1b1:	add    BYTE PTR [rax],al
   14004b1b3:	add    bh,bh
   14004b1b5:	(bad)  
   14004b1b6:	(bad)  
   14004b1b7:	inc    DWORD PTR [rax]
   14004b1b9:	add    BYTE PTR [rax],al
   14004b1bb:	add    BYTE PTR [rax+0x0],al
   14004b1be:	add    BYTE PTR [rax],al
   14004b1c0:	js     0x14004b173
   14004b1c2:	add    al,0x0
	...
   14004b1d0:	or     BYTE PTR [rsi+0x5],ah
   14004b1d6:	add    BYTE PTR [rax],al
   14004b1d8:	or     BYTE PTR [rax],al
   14004b1da:	add    BYTE PTR [rax],al
   14004b1dc:	(bad)  
   14004b1dd:	(bad)  
   14004b1de:	(bad)  
   14004b1df:	inc    DWORD PTR [rax]
   14004b1e1:	add    BYTE PTR [rax],al
   14004b1e3:	add    BYTE PTR [rax+0x0],al
   14004b1e6:	add    BYTE PTR [rax],al
   14004b1e8:	nop
   14004b1e9:	mov    bl,0x4
	...
   14004b1ff:	add    BYTE PTR [rbx],al
   14004b201:	add    BYTE PTR [rax],al
   14004b203:	add    BYTE PTR [rax],dl
   14004b205:	mov    dl,0x4
	...
   14004b20f:	add    BYTE PTR [rax-0x37fffb4d],bh
   14004b215:	mov    dl,0x4
   14004b217:	add    BYTE PTR [rax+0x4b1],ch
	...
   14004b22d:	add    BYTE PTR [rax],al
   14004b22f:	add    BYTE PTR [rax-0x2ffffb4e],ah
   14004b235:	mov    cl,0x4
   14004b237:	add    BYTE PTR [rax-0x4d],al
   14004b23a:	add    al,0x0
	...
   14004b250:	or     BYTE PTR [rsi+0x5],ah
   14004b256:	add    BYTE PTR [rax],al
   14004b258:	add    BYTE PTR [rax],al
   14004b25a:	add    BYTE PTR [rax],al
   14004b25c:	(bad)  
   14004b25d:	(bad)  
   14004b25e:	(bad)  
   14004b25f:	inc    DWORD PTR [rax]
   14004b261:	add    BYTE PTR [rax],al
   14004b263:	add    BYTE PTR [rax+0x0],al
   14004b266:	add    BYTE PTR [rax],al
   14004b268:	nop
   14004b269:	mov    bl,0x4
	...
   14004b277:	add    BYTE PTR [rcx],al
	...
   14004b281:	add    BYTE PTR [rax],al
   14004b283:	add    al,dl
   14004b285:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b286:	add    eax,0x4b4e800
   14004b28b:	add    BYTE PTR [rax-0x4e],bh
   14004b28e:	add    al,0x0
	...
   14004b2a0:	sub    BYTE PTR [rbp+0x20005],ah
   14004b2a6:	add    BYTE PTR [rax],al
   14004b2a8:	add    BYTE PTR [rax],al
   14004b2aa:	add    BYTE PTR [rax],al
   14004b2ac:	(bad)  
   14004b2ad:	(bad)  
   14004b2ae:	(bad)  
   14004b2af:	inc    DWORD PTR [rax]
   14004b2b1:	add    BYTE PTR [rax],al
   14004b2b3:	add    BYTE PTR [rax+0x0],al
   14004b2b6:	add    BYTE PTR [rax],al
   14004b2b8:	nop
   14004b2b9:	mov    cl,0x4
	...
   14004b2c7:	add    al,dl
   14004b2c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b2ca:	add    eax,0x100
   14004b2cf:	add    BYTE PTR [rax],al
   14004b2d1:	add    BYTE PTR [rax],al
   14004b2d3:	add    bh,bh
   14004b2d5:	(bad)  
   14004b2d6:	(bad)  
   14004b2d7:	inc    DWORD PTR [rax]
   14004b2d9:	add    BYTE PTR [rax],al
   14004b2db:	add    BYTE PTR [rax+0x0],al
   14004b2de:	add    BYTE PTR [rax],al
   14004b2e0:	call   0x14004b799
	...
   14004b2ed:	add    BYTE PTR [rax],al
   14004b2ef:	add    BYTE PTR [rax+0x20005a4],bh
   14004b2f5:	add    BYTE PTR [rax],al
   14004b2f7:	add    BYTE PTR [rax],al
   14004b2f9:	add    BYTE PTR [rax],al
   14004b2fb:	add    bh,bh
   14004b2fd:	(bad)  
   14004b2fe:	(bad)  
   14004b2ff:	inc    DWORD PTR [rax]
   14004b301:	add    BYTE PTR [rax],al
   14004b303:	add    BYTE PTR [rax+0x0],al
   14004b306:	add    BYTE PTR [rax],al
   14004b308:	loopne 0x14004b2bd
   14004b30a:	add    al,0x0
	...
   14004b318:	add    DWORD PTR [rax],eax
	...
   14004b322:	add    BYTE PTR [rax],al
   14004b324:	js     0x14004b2cb
   14004b326:	add    eax,0x4b17800
   14004b32b:	add    BYTE PTR [rax],bl
   14004b32d:	mov    bl,0x4
	...
   14004b33f:	add    BYTE PTR [rax-0x5b],dl
   14004b342:	add    eax,0x0
   14004b347:	add    BYTE PTR [rax],al
   14004b349:	add    BYTE PTR [rax],al
   14004b34b:	add    bh,bh
   14004b34d:	(bad)  
   14004b34e:	(bad)  
   14004b34f:	inc    DWORD PTR [rax]
   14004b351:	add    BYTE PTR [rax],al
   14004b353:	add    BYTE PTR [rbp+0x0],cl
   14004b356:	add    BYTE PTR [rax],al
   14004b358:	mov    spl,0x4
	...
   14004b367:	add    BYTE PTR [rcx],al
	...
   14004b371:	add    BYTE PTR [rax],al
   14004b373:	add    BYTE PTR [rax-0x1ffffa5c],bh
   14004b379:	mov    bl,0x4
   14004b37b:	add    BYTE PTR [rax-0x4d],ch
   14004b37e:	add    al,0x0
	...
   14004b398:	add    DWORD PTR [rax],eax
   14004b39a:	add    BYTE PTR [rax],al
   14004b39c:	or     BYTE PTR [rsp+rax*1+0x0],dh
   14004b3a3:	add    BYTE PTR [rax],al
   14004b3a5:	add    BYTE PTR [rax],al
   14004b3a7:	add    BYTE PTR [rax+0x4b1],ch
	...
   14004b3b5:	add    BYTE PTR [rax],al
   14004b3b7:	add    al,dh
   14004b3b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004b3ba:	add    eax,0x200
   14004b3bf:	add    BYTE PTR [rax],al
   14004b3c1:	add    BYTE PTR [rax],al
   14004b3c3:	add    bh,bh
   14004b3c5:	(bad)  
   14004b3c6:	(bad)  
   14004b3c7:	inc    DWORD PTR [rax]
   14004b3c9:	add    BYTE PTR [rax],al
   14004b3cb:	add    BYTE PTR [rax+0x0],al
   14004b3ce:	add    BYTE PTR [rax],al
   14004b3d0:	clc    
   14004b3d1:	mov    cl,0x4
	...
   14004b3e7:	add    BYTE PTR [rbx],al
   14004b3e9:	add    BYTE PTR [rax],al
   14004b3eb:	add    BYTE PTR [rax],al
   14004b3ed:	mov    ch,0x4
	...
   14004b3f7:	add    al,al
   14004b3f9:	mov    ah,0x4
	...
   14004b407:	add    BYTE PTR [rax-0x4e],dl
   14004b40a:	add    al,0x0
	...
   14004b418:	add    DWORD PTR [rax],eax
	...
   14004b422:	add    BYTE PTR [rax],al
   14004b424:	push   rax
   14004b425:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b426:	add    eax,0x4b44000
   14004b42b:	add    BYTE PTR [rax],bl
   14004b42d:	mov    ah,0x4
	...
   14004b447:	add    BYTE PTR [rcx],al
   14004b449:	add    BYTE PTR [rax],al
   14004b44b:	add    al,bh
   14004b44d:	mov    bl,0x4
	...
   14004b457:	add    BYTE PTR [rcx],al
	...
   14004b461:	add    BYTE PTR [rax],al
   14004b463:	add    al,dh
   14004b465:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004b466:	add    eax,0x4b1f800
   14004b46b:	add    BYTE PTR [rax-0x4c],bl
   14004b46e:	add    al,0x0
	...
   14004b480:	add    DWORD PTR [rax],eax
	...
   14004b48a:	add    BYTE PTR [rax],al
   14004b48c:	sub    BYTE PTR [rbp-0x4e6ffffb],ah
   14004b492:	add    al,0x0
   14004b494:	xor    BYTE PTR [rsp+rax*1+0x0],0x0
	...
   14004b4a8:	enter  0x4b2,0x0
   14004b4ac:	test   al,0xb1
   14004b4ae:	add    al,0x0
	...
   14004b4c0:	push   rax
   14004b4c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b4c2:	add    eax,0x0
   14004b4c7:	add    BYTE PTR [rax],al
   14004b4c9:	add    BYTE PTR [rax],al
   14004b4cb:	add    bh,bh
   14004b4cd:	(bad)  
   14004b4ce:	(bad)  
   14004b4cf:	inc    DWORD PTR [rax]
   14004b4d1:	add    BYTE PTR [rax],al
   14004b4d3:	add    BYTE PTR [rax+0x0],al
   14004b4d6:	add    BYTE PTR [rax],al
   14004b4d8:	mov    spl,0x4
	...
   14004b4ef:	add    BYTE PTR [rdx],al
   14004b4f1:	add    BYTE PTR [rax],al
   14004b4f3:	add    BYTE PTR [rax+0x4b4],ch
   14004b4f9:	add    BYTE PTR [rax],al
   14004b4fb:	add    BYTE PTR [rax],al
   14004b4fd:	add    BYTE PTR [rax],al
   14004b4ff:	add    al,dh
   14004b501:	mov    dl,0x4
   14004b503:	add    al,cl
   14004b505:	mov    dl,0x4
   14004b507:	add    BYTE PTR [rax+0x4b1],ch
	...
   14004b51d:	add    BYTE PTR [rax],al
   14004b51f:	add    BYTE PTR [rax+0x780004b5],ah
   14004b525:	mov    ch,0x4
	...
   14004b537:	add    BYTE PTR [rcx],al
	...
   14004b541:	add    BYTE PTR [rax],al
   14004b543:	add    BYTE PTR [rax-0x55],ah
   14004b546:	add    eax,0x4b56000
   14004b54b:	add    BYTE PTR [rax],bh
   14004b54d:	mov    ch,0x4
	...
   14004b567:	add    BYTE PTR [rdx],al
   14004b569:	add    BYTE PTR [rax],al
   14004b56b:	add    BYTE PTR [rax],ah
   14004b56d:	mov    ch,0x4
	...
   14004b577:	add    BYTE PTR [rax+0x5ab],cl
   14004b57d:	add    BYTE PTR [rax],al
   14004b57f:	add    BYTE PTR [rax],al
   14004b581:	add    BYTE PTR [rax],al
   14004b583:	add    bh,bh
   14004b585:	(bad)  
   14004b586:	(bad)  
   14004b587:	inc    DWORD PTR [rax]
   14004b589:	add    BYTE PTR [rax],al
   14004b58b:	add    BYTE PTR [rax+0x0],al
   14004b58e:	add    BYTE PTR [rax],al
   14004b590:	enter  0x4b5,0x0
	...
   14004b5a0:	(bad)  
   14004b5a1:	stos   DWORD PTR es:[rdi],eax
   14004b5a2:	add    eax,0x100
   14004b5a7:	add    BYTE PTR [rax],al
   14004b5a9:	add    BYTE PTR [rax],al
   14004b5ab:	add    bh,bh
   14004b5ad:	(bad)  
   14004b5ae:	(bad)  
   14004b5af:	inc    DWORD PTR [rax]
   14004b5b1:	add    BYTE PTR [rax],al
   14004b5b3:	add    BYTE PTR [rax+0x0],al
   14004b5b6:	add    BYTE PTR [rax],al
   14004b5b8:	(bad)  
   14004b5b9:	mov    ch,0x4
	...
   14004b5cf:	add    BYTE PTR [rcx],al
   14004b5d1:	add    BYTE PTR [rax],al
   14004b5d3:	add    al,ah
   14004b5d5:	mov    ch,0x4
	...
   14004b5df:	add    BYTE PTR [rax-0x4b],bh
   14004b5e2:	add    al,0x0
	...
   14004b5f0:	and    BYTE PTR [rbp+rax*1+0x100],ch
   14004b5f7:	add    BYTE PTR [rax],al
   14004b5f9:	add    BYTE PTR [rax],al
   14004b5fb:	add    bh,bh
   14004b5fd:	(bad)  
   14004b5fe:	(bad)  
   14004b5ff:	inc    DWORD PTR [rax]
   14004b601:	add    BYTE PTR [rax],al
   14004b603:	add    BYTE PTR [rax+0x0],al
   14004b606:	add    BYTE PTR [rax],al
   14004b608:	pop    rax
   14004b609:	mov    dh,0x4
	...
   14004b617:	add    al,dh
   14004b619:	mov    ch,0x4
   14004b61b:	add    al,al
   14004b61d:	mov    ah,0x4
	...
   14004b62f:	add    BYTE PTR [rcx],al
	...
   14004b639:	add    BYTE PTR [rax],al
   14004b63b:	add    BYTE PTR [rax],ah
   14004b63d:	lods   al,BYTE PTR ds:[rsi]
   14004b63e:	add    eax,0x4b65800
   14004b643:	add    BYTE PTR [rax],dh
   14004b645:	mov    dh,0x4
	...
   14004b65f:	add    BYTE PTR [rdx],al
   14004b661:	add    BYTE PTR [rax],al
   14004b663:	add    BYTE PTR [rax],bl
   14004b665:	mov    dh,0x4
	...
   14004b66f:	add    BYTE PTR [rax+0x5ac],al
   14004b675:	add    BYTE PTR [rax],al
   14004b677:	add    BYTE PTR [rax],al
   14004b679:	add    BYTE PTR [rax],al
   14004b67b:	add    bh,bh
   14004b67d:	(bad)  
   14004b67e:	(bad)  
   14004b67f:	inc    DWORD PTR [rax]
   14004b681:	add    BYTE PTR [rax],al
   14004b683:	add    BYTE PTR [rax+0x0],al
   14004b686:	add    BYTE PTR [rax],al
   14004b688:	adc    BYTE PTR [rdi+0x4],dh
	...
   14004b696:	add    BYTE PTR [rax],al
   14004b698:	push   rax
   14004b699:	lods   al,BYTE PTR ds:[rsi]
   14004b69a:	add    eax,0x100
   14004b69f:	add    BYTE PTR [rax],al
   14004b6a1:	add    BYTE PTR [rax],al
   14004b6a3:	add    bh,bh
   14004b6a5:	(bad)  
   14004b6a6:	(bad)  
   14004b6a7:	inc    DWORD PTR [rax]
   14004b6a9:	add    BYTE PTR [rax],al
   14004b6ab:	add    BYTE PTR [rax+0x0],al
   14004b6ae:	add    BYTE PTR [rax],al
   14004b6b0:	sub    BYTE PTR [rdi+0x4],dh
	...
   14004b6be:	add    BYTE PTR [rax],al
   14004b6c0:	jo     0x14004b678
   14004b6c2:	add    al,0x0
	...
   14004b6d0:	add    DWORD PTR [rax],eax
	...
   14004b6da:	add    BYTE PTR [rax],al
   14004b6dc:	sub    BYTE PTR [rbp+rax*1+0x4b71000],0x0
   14004b6e4:	shl    BYTE PTR [rsi+0x4],1
	...
   14004b6f6:	add    BYTE PTR [rax],al
   14004b6f8:	cwde   
   14004b6f9:	mov    dh,0x4
   14004b6fb:	add    BYTE PTR [rax-0x4a],dh
   14004b6fe:	add    al,0x0
	...
   14004b718:	add    DWORD PTR [rax],eax
   14004b71a:	add    BYTE PTR [rax],al
   14004b71c:	shl    BYTE PTR [rsi+0x4],0x0
	...
   14004b72f:	add    BYTE PTR [rdx],al
   14004b731:	add    BYTE PTR [rax],al
   14004b733:	add    al,bh
   14004b735:	mov    dh,0x4
	...
   14004b73f:	add    BYTE PTR [rcx],al
	...
   14004b749:	add    BYTE PTR [rax],al
   14004b74b:	add    BYTE PTR [rax-0x54],dl
   14004b74e:	add    eax,0x4b72800
   14004b753:	add    BYTE PTR [rax-0x49],al
   14004b756:	add    al,0x0
	...
   14004b768:	add    DWORD PTR [rax],eax
	...
   14004b772:	add    BYTE PTR [rax],al
   14004b774:	test   al,0xac
   14004b776:	add    eax,0x4b7c800
   14004b77b:	add    BYTE PTR [rax-0x49],ch
   14004b77e:	add    al,0x0
	...
   14004b790:	test   al,0xac
   14004b792:	add    eax,0x0
   14004b797:	add    BYTE PTR [rax],al
   14004b799:	add    BYTE PTR [rax],al
   14004b79b:	add    bh,bh
   14004b79d:	(bad)  
   14004b79e:	(bad)  
   14004b79f:	inc    DWORD PTR [rax]
   14004b7a1:	add    BYTE PTR [rax],al
   14004b7a3:	add    BYTE PTR [rax+0x0],al
   14004b7a6:	add    BYTE PTR [rax],al
   14004b7a8:	enter  0x4b7,0x0
	...
   14004b7b8:	nop
   14004b7b9:	mov    bh,0x4
	...
   14004b7cf:	add    BYTE PTR [rcx],al
   14004b7d1:	add    BYTE PTR [rax],al
   14004b7d3:	add    BYTE PTR [rax+0x4b7],bh
   14004b7d9:	add    BYTE PTR [rax],al
   14004b7db:	add    BYTE PTR [rax],al
   14004b7dd:	add    BYTE PTR [rax],al
   14004b7df:	add    BYTE PTR [rax],dh
   14004b7e1:	mov    eax,0x4
	...
   14004b7ee:	add    BYTE PTR [rax],al
   14004b7f0:	add    DWORD PTR [rax],eax
	...
   14004b7fa:	add    BYTE PTR [rax],al
   14004b7fc:	shr    BYTE PTR [rbp+rax*1+0x4b81800],1
   14004b803:	add    al,dh
   14004b805:	mov    bh,0x4
	...
   14004b81f:	add    BYTE PTR [rcx],al
   14004b821:	add    BYTE PTR [rax],al
   14004b823:	add    al,ah
   14004b825:	mov    bh,0x4
	...
   14004b82f:	add    al,dl
   14004b831:	lods   al,BYTE PTR ds:[rsi]
   14004b832:	add    eax,0x0
   14004b837:	add    BYTE PTR [rax],al
   14004b839:	add    BYTE PTR [rax],al
   14004b83b:	add    bh,bh
   14004b83d:	(bad)  
   14004b83e:	(bad)  
   14004b83f:	inc    DWORD PTR [rax]
   14004b841:	add    BYTE PTR [rax],al
   14004b843:	add    BYTE PTR [rax+0x0],al
   14004b846:	add    BYTE PTR [rax],al
   14004b848:	sbb    BYTE PTR [rax+0x4],bh
	...
   14004b856:	add    BYTE PTR [rax],al
   14004b858:	add    DWORD PTR [rax],eax
	...
   14004b862:	add    BYTE PTR [rax],al
   14004b864:	mov    BYTE PTR [rbx-0x4a37fffb],ch
   14004b86a:	add    al,0x0
   14004b86c:	pop    rax
   14004b86d:	mov    eax,0x4
	...
   14004b87e:	add    BYTE PTR [rax],al
   14004b880:	add    DWORD PTR [rax],eax
	...
   14004b88a:	add    BYTE PTR [rax],al
   14004b88c:	sub    BYTE PTR [rbp-0x472ffffb],ch
   14004b892:	add    al,0x0
   14004b894:	cmp    BYTE PTR [rax+0x4],0x0
	...
   14004b8a7:	add    BYTE PTR [rax],ch
   14004b8a9:	lods   eax,DWORD PTR ds:[rsi]
   14004b8aa:	add    eax,0x300
   14004b8af:	add    BYTE PTR [rax],al
   14004b8b1:	add    BYTE PTR [rax],al
   14004b8b3:	add    bh,bh
   14004b8b5:	(bad)  
   14004b8b6:	(bad)  
   14004b8b7:	inc    DWORD PTR [rax]
   14004b8b9:	add    BYTE PTR [rax],al
   14004b8bb:	add    BYTE PTR [rax+0x0],al
   14004b8be:	add    BYTE PTR [rax],al
   14004b8c0:	sar    BYTE PTR [rax+0x4],1
	...
   14004b8d2:	add    BYTE PTR [rax],al
   14004b8d4:	add    DWORD PTR [rax],eax
   14004b8d6:	add    BYTE PTR [rax],al
   14004b8d8:	add    al,0x0
   14004b8da:	add    BYTE PTR [rax],al
   14004b8dc:	adc    BYTE PTR [rcx+0x4],bh
   14004b8e2:	add    BYTE PTR [rax],al
   14004b8e4:	add    BYTE PTR [rax],al
   14004b8e6:	add    BYTE PTR [rax],al
   14004b8e8:	add    DWORD PTR [rax],eax
   14004b8ea:	add    BYTE PTR [rax],al
   14004b8ec:	or     BYTE PTR [rax],al
   14004b8ee:	add    BYTE PTR [rax],al
   14004b8f0:	add    BYTE PTR [rax],al
   14004b8f2:	add    BYTE PTR [rax],al
   14004b8f4:	sub    BYTE PTR [rbp-0x472ffffb],ch
   14004b8fa:	add    al,0x0
   14004b8fc:	call   0x14004bdb9
	...
   14004b90d:	add    BYTE PTR [rax],al
   14004b90f:	add    BYTE PTR [rax+0x300004b8],ch
   14004b915:	mov    eax,0xb9600004
   14004b91a:	add    al,0x0
   14004b91c:	cmp    BYTE PTR [rcx+0x4],bh
	...
   14004b936:	add    BYTE PTR [rax],al
   14004b938:	push   rax
   14004b939:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b93a:	add    eax,0x0
   14004b93f:	add    BYTE PTR [rax],cl
   14004b941:	add    BYTE PTR [rax],al
   14004b943:	add    bh,bh
   14004b945:	(bad)  
   14004b946:	(bad)  
   14004b947:	inc    DWORD PTR [rax]
   14004b949:	add    BYTE PTR [rax],al
   14004b94b:	add    BYTE PTR [rax+0x0],al
   14004b94e:	add    BYTE PTR [rax],al
   14004b950:	mov    spl,0x4
	...
   14004b95f:	add    BYTE PTR [rax],ah
   14004b961:	lods   al,BYTE PTR ds:[rsi]
   14004b962:	add    eax,0x100
   14004b967:	add    BYTE PTR [rax],cl
   14004b969:	add    BYTE PTR [rax],al
   14004b96b:	add    bh,bh
   14004b96d:	(bad)  
   14004b96e:	(bad)  
   14004b96f:	inc    DWORD PTR [rax]
   14004b971:	add    BYTE PTR [rax],al
   14004b973:	add    BYTE PTR [rax+0x0],al
   14004b976:	add    BYTE PTR [rax],al
   14004b978:	pop    rax
   14004b979:	mov    dh,0x4
	...
   14004b987:	add    BYTE PTR [rax-0x53],dl
   14004b98a:	add    eax,0x200
   14004b98f:	add    BYTE PTR [rax],al
   14004b991:	add    BYTE PTR [rax],al
   14004b993:	add    bh,bh
   14004b995:	(bad)  
   14004b996:	(bad)  
   14004b997:	inc    DWORD PTR [rax]
   14004b999:	add    BYTE PTR [rax],al
   14004b99b:	add    BYTE PTR [rax+0x0],al
   14004b99e:	add    BYTE PTR [rax],al
   14004b9a0:	clc    
   14004b9a1:	mov    ecx,0x4
	...
   14004b9ae:	add    BYTE PTR [rax],al
   14004b9b0:	add    DWORD PTR [rax],eax
	...
   14004b9ba:	add    BYTE PTR [rax],al
   14004b9bc:	push   rax
   14004b9bd:	lods   eax,DWORD PTR ds:[rsi]
   14004b9be:	add    eax,0x4b9f800
   14004b9c3:	add    BYTE PTR [rax+0x4b9],dh
	...
   14004b9d5:	add    BYTE PTR [rax],al
   14004b9d7:	add    BYTE PTR [rax-0xffffb47],cl
   14004b9dd:	mov    ch,0x4
   14004b9df:	add    al,al
   14004b9e1:	mov    ah,0x4
	...
   14004b9ff:	add    BYTE PTR [rbx],al
   14004ba01:	add    BYTE PTR [rax],al
   14004ba03:	add    al,bl
   14004ba05:	mov    ecx,0x4
	...
   14004ba16:	add    BYTE PTR [rax],al
   14004ba18:	add    al,BYTE PTR [rax]
   14004ba1a:	add    BYTE PTR [rax],al
   14004ba1c:	js     0x14004b9d8
   14004ba1e:	add    al,0x0
	...
   14004ba28:	add    DWORD PTR [rax],eax
	...
   14004ba32:	add    BYTE PTR [rax],al
   14004ba34:	jo     0x14004b9e3
   14004ba36:	add    eax,0x4bac800
   14004ba3b:	add    BYTE PTR [rax],ch
   14004ba3d:	mov    edx,0x4
	...
   14004ba4e:	add    BYTE PTR [rax],al
   14004ba50:	jo     0x14004b9ff
   14004ba52:	add    eax,0x0
   14004ba57:	add    BYTE PTR [rax],al
   14004ba59:	add    BYTE PTR [rax],al
   14004ba5b:	add    bh,bh
   14004ba5d:	(bad)  
   14004ba5e:	(bad)  
   14004ba5f:	inc    DWORD PTR [rax]
   14004ba61:	add    BYTE PTR [rax],al
   14004ba63:	add    BYTE PTR [rax+0x0],al
   14004ba66:	add    BYTE PTR [rax],al
   14004ba68:	enter  0x4ba,0x0
	...
   14004ba78:	loopne 0x14004ba34
   14004ba7a:	add    al,0x0
   14004ba7c:	push   rax
   14004ba7d:	mov    edx,0x4
	...
   14004ba8e:	add    BYTE PTR [rax],al
   14004ba90:	add    DWORD PTR [rax],eax
	...
   14004ba9a:	add    BYTE PTR [rax],al
   14004ba9c:	cwde   
   14004ba9d:	lods   eax,DWORD PTR ds:[rsi]
   14004ba9e:	add    eax,0x4ba1000
   14004baa3:	add    BYTE PTR [rax+0x4ba],dl
	...
   14004bab5:	add    BYTE PTR [rax],al
   14004bab7:	add    BYTE PTR [rax-0x46],dl
   14004baba:	add    al,0x0
	...
   14004bad0:	add    DWORD PTR [rax],eax
   14004bad2:	add    BYTE PTR [rax],al
   14004bad4:	mov    eax,0x4ba
   14004bad9:	add    BYTE PTR [rax],al
   14004badb:	add    BYTE PTR [rax],al
   14004badd:	add    BYTE PTR [rax],al
   14004badf:	add    BYTE PTR [rax+0x10005ad],bl
   14004bae5:	add    BYTE PTR [rax],al
   14004bae7:	add    BYTE PTR [rax],al
   14004bae9:	add    BYTE PTR [rax],al
   14004baeb:	add    bh,bh
   14004baed:	(bad)  
   14004baee:	(bad)  
   14004baef:	inc    DWORD PTR [rax]
   14004baf1:	add    BYTE PTR [rax],al
   14004baf3:	add    BYTE PTR [rax+0x0],al
   14004baf6:	add    BYTE PTR [rax],al
   14004baf8:	adc    BYTE PTR [rdx+0x4],bh
	...
   14004bb06:	add    BYTE PTR [rax],al
   14004bb08:	lock lods eax,DWORD PTR ds:[rsi]
   14004bb0a:	add    eax,0x100
   14004bb0f:	add    BYTE PTR [rax],al
   14004bb11:	add    BYTE PTR [rax],al
   14004bb13:	add    bh,bh
   14004bb15:	(bad)  
   14004bb16:	(bad)  
   14004bb17:	inc    DWORD PTR [rax]
   14004bb19:	add    BYTE PTR [rax],al
   14004bb1b:	add    BYTE PTR [rax+0x0],al
   14004bb1e:	add    BYTE PTR [rax],al
   14004bb20:	add    BYTE PTR [rsp+rax*1+0x0],bh
	...
   14004bb2f:	add    al,al
   14004bb31:	lods   eax,DWORD PTR ds:[rsi]
   14004bb32:	add    eax,0x200
   14004bb37:	add    BYTE PTR [rax],al
   14004bb39:	add    BYTE PTR [rax],al
   14004bb3b:	add    bh,bh
   14004bb3d:	(bad)  
   14004bb3e:	(bad)  
   14004bb3f:	inc    DWORD PTR [rax]
   14004bb41:	add    BYTE PTR [rax],al
   14004bb43:	add    BYTE PTR [rax+0x0],al
   14004bb46:	add    BYTE PTR [rax],al
   14004bb48:	sar    BYTE PTR [rbx+0x4],0x0
	...
   14004bb57:	add    BYTE PTR [rax],cl
   14004bb59:	mov    ebx,0xbb700004
   14004bb5e:	add    al,0x0
	...
   14004bb70:	sbb    BYTE PTR [rsi+0x5],ch
   14004bb76:	add    BYTE PTR [rax],al
   14004bb78:	add    BYTE PTR [rax],al
   14004bb7a:	add    BYTE PTR [rax],al
   14004bb7c:	(bad)  
   14004bb7d:	(bad)  
   14004bb7e:	(bad)  
   14004bb7f:	inc    DWORD PTR [rax]
   14004bb81:	add    BYTE PTR [rax],al
   14004bb83:	add    BYTE PTR [rax+0x0],al
   14004bb86:	add    BYTE PTR [rax],al
   14004bb88:	cwde   
   14004bb89:	mov    ebx,0x4
	...
   14004bb9e:	add    BYTE PTR [rax],al
   14004bba0:	add    DWORD PTR [rax],eax
   14004bba2:	add    BYTE PTR [rax],al
   14004bba4:	mov    al,0xbb
   14004bba6:	add    al,0x0
	...
   14004bbb0:	jo     0x14004bb6d
   14004bbb2:	add    al,0x0
	...
   14004bbc8:	add    eax,DWORD PTR [rax]
   14004bbca:	add    BYTE PTR [rax],al
   14004bbcc:	sbb    BYTE PTR [rsp+rax*1+0x0],bh
   14004bbd3:	add    BYTE PTR [rax],al
   14004bbd5:	add    BYTE PTR [rax],al
   14004bbd7:	add    BYTE PTR [rcx],al
	...
   14004bbe1:	add    BYTE PTR [rax],al
   14004bbe3:	add    al,al
   14004bbe5:	lods   eax,DWORD PTR ds:[rsi]
   14004bbe6:	add    eax,0x4bbc000
   14004bbeb:	add    al,bl
   14004bbed:	mov    ebx,0x4
	...
   14004bc06:	add    BYTE PTR [rax],al
   14004bc08:	add    al,BYTE PTR [rax]
   14004bc0a:	add    BYTE PTR [rax],al
   14004bc0c:	pop    rax
   14004bc0d:	mov    ebx,0x4
   14004bc12:	add    BYTE PTR [rax],al
   14004bc14:	add    BYTE PTR [rax],al
   14004bc16:	add    BYTE PTR [rax],al
   14004bc18:	xor    BYTE PTR [rbx-0x44f7fffc],bh
   14004bc1e:	add    al,0x0
   14004bc20:	jo     0x14004bbdd
   14004bc22:	add    al,0x0
	...
   14004bc38:	pop    rax
   14004bc39:	scas   al,BYTE PTR es:[rdi]
   14004bc3a:	add    eax,0x200
   14004bc3f:	add    BYTE PTR [rax],al
   14004bc41:	add    BYTE PTR [rax],al
   14004bc43:	add    bh,bh
   14004bc45:	(bad)  
   14004bc46:	(bad)  
   14004bc47:	inc    DWORD PTR [rax]
   14004bc49:	add    BYTE PTR [rax],al
   14004bc4b:	add    BYTE PTR [rax+0x0],al
   14004bc4e:	add    BYTE PTR [rax],al
   14004bc50:	mov    al,0xbc
   14004bc52:	add    al,0x0
	...
   14004bc60:	add    DWORD PTR [rax],eax
	...
   14004bc6a:	add    BYTE PTR [rax],al
   14004bc6c:	cmp    BYTE PTR [rsi-0x4337fffb],ch
   14004bc72:	add    al,0x0
   14004bc74:	(bad)  
   14004bc75:	mov    esp,0x4
	...
   14004bc86:	add    BYTE PTR [rax],al
   14004bc88:	mov    BYTE PTR [rsi+0x10005],ch
   14004bc8e:	add    BYTE PTR [rax],al
   14004bc90:	add    BYTE PTR [rax],al
   14004bc92:	add    BYTE PTR [rax],al
   14004bc94:	(bad)  
   14004bc95:	(bad)  
   14004bc96:	(bad)  
   14004bc97:	inc    DWORD PTR [rax]
   14004bc99:	add    BYTE PTR [rax],al
   14004bc9b:	add    BYTE PTR [rax+0x0],al
   14004bc9e:	add    BYTE PTR [rax],al
   14004bca0:	push   rax
   14004bca1:	mov    ebp,0x4
	...
   14004bcb6:	add    BYTE PTR [rax],al
   14004bcb8:	add    eax,DWORD PTR [rax]
   14004bcba:	add    BYTE PTR [rax],al
   14004bcbc:	xor    BYTE PTR [rbp+0x4],bh
	...
   14004bcce:	add    BYTE PTR [rax],al
   14004bcd0:	add    al,0x0
   14004bcd2:	add    BYTE PTR [rax],al
   14004bcd4:	or     BYTE PTR [rbp+0x4],bh
   14004bcda:	add    BYTE PTR [rax],al
   14004bcdc:	add    BYTE PTR [rax],al
   14004bcde:	add    BYTE PTR [rax],al
   14004bce0:	cmp    BYTE PTR [rsi+0x30005],ch
   14004bce6:	add    BYTE PTR [rax],al
   14004bce8:	add    BYTE PTR [rax],al
   14004bcea:	add    BYTE PTR [rax],al
   14004bcec:	(bad)  
   14004bced:	(bad)  
   14004bcee:	(bad)  
   14004bcef:	inc    DWORD PTR [rax]
   14004bcf1:	add    BYTE PTR [rax],al
   14004bcf3:	add    BYTE PTR [rax+0x0],al
   14004bcf6:	add    BYTE PTR [rax],al
   14004bcf8:	enter  0x4bc,0x0
	...
   14004bd08:	loopne 0x14004bcc6
   14004bd0a:	add    al,0x0
   14004bd0c:	cmp    BYTE PTR [rsp+rax*1+0x4bc8800],bh
   14004bd13:	add    BYTE PTR [rax-0x45],dh
   14004bd16:	add    al,0x0
	...
   14004bd30:	cmp    BYTE PTR [rsp+rax*1+0x4bc8800],bh
   14004bd37:	add    BYTE PTR [rax-0x45],dh
   14004bd3a:	add    al,0x0
	...
   14004bd58:	add    al,BYTE PTR [rax]
   14004bd5a:	add    BYTE PTR [rax],al
   14004bd5c:	push   0x4bd
   14004bd61:	add    BYTE PTR [rax],al
   14004bd63:	add    BYTE PTR [rax],al
   14004bd65:	add    BYTE PTR [rax],al
   14004bd67:	add    BYTE PTR [rax+0x700004bc],cl
   14004bd6d:	mov    ebx,0x4
	...
   14004bd7e:	add    BYTE PTR [rax],al
   14004bd80:	add    DWORD PTR [rax],eax
	...
   14004bd8a:	add    BYTE PTR [rax],al
   14004bd8c:	pop    rax
   14004bd8d:	scas   al,BYTE PTR es:[rdi]
   14004bd8e:	add    eax,0x4bcb000
   14004bd93:	add    BYTE PTR [rax+0x4bd],al
	...
   14004bda5:	add    BYTE PTR [rax],al
   14004bda7:	add    BYTE PTR [rcx],al
	...
   14004bdb1:	add    BYTE PTR [rax],al
   14004bdb3:	add    BYTE PTR [rax+0x100005ae],bh
   14004bdb9:	mov    esi,0xbda80004
   14004bdbe:	add    al,0x0
	...
   14004bdd0:	mov    eax,0x10005ae
   14004bdd5:	add    BYTE PTR [rax],al
   14004bdd7:	add    BYTE PTR [rax],al
   14004bdd9:	add    BYTE PTR [rax],al
   14004bddb:	add    bh,bh
   14004bddd:	(bad)  
   14004bdde:	(bad)  
   14004bddf:	inc    DWORD PTR [rax]
   14004bde1:	add    BYTE PTR [rax],al
   14004bde3:	add    BYTE PTR [rax+0x0],al
   14004bde6:	add    BYTE PTR [rax],al
   14004bde8:	adc    BYTE PTR [rsi+0x4],bh
	...
   14004bdf6:	add    BYTE PTR [rax],al
   14004bdf8:	sar    BYTE PTR [rbp-0x4b3ffffc],1
   14004bdfe:	add    al,0x0
	...
   14004be18:	add    al,BYTE PTR [rax]
   14004be1a:	add    BYTE PTR [rax],al
   14004be1c:	clc    
   14004be1d:	mov    ebp,0x4
   14004be22:	add    BYTE PTR [rax],al
   14004be24:	add    BYTE PTR [rax],al
   14004be26:	add    BYTE PTR [rax],al
   14004be28:	rex mov esi,0xb4c00004
   14004be2e:	add    al,0x0
	...
   14004be40:	call   0x14104c3f3
   14004be45:	add    BYTE PTR [rax],al
   14004be47:	add    BYTE PTR [rax],al
   14004be49:	add    BYTE PTR [rax],al
   14004be4b:	add    bh,bh
   14004be4d:	(bad)  
   14004be4e:	(bad)  
   14004be4f:	inc    DWORD PTR [rax]
   14004be51:	add    BYTE PTR [rax],al
   14004be53:	add    BYTE PTR [rax+0x0],al
   14004be56:	add    BYTE PTR [rax],al
   14004be58:	push   0x4be
	...
   14004be6d:	add    BYTE PTR [rax],al
   14004be6f:	add    BYTE PTR [rdx],al
   14004be71:	add    BYTE PTR [rax],al
   14004be73:	add    BYTE PTR [rax],ch
   14004be75:	mov    esi,0x4
   14004be7a:	add    BYTE PTR [rax],al
   14004be7c:	add    BYTE PTR [rax],al
   14004be7e:	add    BYTE PTR [rax],al
   14004be80:	add    DWORD PTR [rax],eax
	...
   14004be8a:	add    BYTE PTR [rax],al
   14004be8c:	call   0x1a804c43f
   14004be91:	mov    esi,0xbe800004
   14004be96:	add    al,0x0
	...
   14004bea8:	sar    BYTE PTR [rsi-0x4b3ffffc],0x4
	...
   14004bebf:	add    BYTE PTR [rax-0x51],cl
   14004bec2:	add    eax,0x100
   14004bec7:	add    BYTE PTR [rax],al
   14004bec9:	add    BYTE PTR [rax],al
   14004becb:	add    bh,bh
   14004becd:	(bad)  
   14004bece:	(bad)  
   14004becf:	inc    DWORD PTR [rax]
   14004bed1:	add    BYTE PTR [rax],al
   14004bed3:	add    BYTE PTR [rax+0x0],al
   14004bed6:	add    BYTE PTR [rax],al
   14004bed8:	adc    BYTE PTR [rdi+0x4],bh
	...
   14004bee6:	add    BYTE PTR [rax],al
   14004bee8:	add    DWORD PTR [rax],eax
	...
   14004bef2:	add    BYTE PTR [rax],al
   14004bef4:	scas   rax,QWORD PTR es:[rdi]
   14004bef6:	add    eax,0x4bf1000
   14004befb:	add    al,ch
   14004befd:	mov    esi,0x4
	...
   14004bf16:	add    BYTE PTR [rax],al
   14004bf18:	add    al,BYTE PTR [rax]
   14004bf1a:	add    BYTE PTR [rax],al
   14004bf1c:	test   al,0xbe
   14004bf1e:	add    al,0x0
	...
   14004bf30:	add    al,BYTE PTR [rax]
   14004bf32:	add    BYTE PTR [rax],al
   14004bf34:	rex mov edi,0x4
   14004bf3a:	add    BYTE PTR [rax],al
   14004bf3c:	add    BYTE PTR [rax],al
   14004bf3e:	add    BYTE PTR [rax],al
   14004bf40:	pop    rax
   14004bf41:	mov    edi,0xb4c00004
   14004bf46:	add    al,0x0
	...
   14004bf58:	jo     0x14004bf09
   14004bf5a:	add    eax,0x100
   14004bf5f:	add    BYTE PTR [rax],al
   14004bf61:	add    BYTE PTR [rax],al
   14004bf63:	add    bh,bh
   14004bf65:	(bad)  
   14004bf66:	(bad)  
   14004bf67:	inc    DWORD PTR [rax]
   14004bf69:	add    BYTE PTR [rax],al
   14004bf6b:	add    BYTE PTR [rax+0x0],al
   14004bf6e:	add    BYTE PTR [rax],al
   14004bf70:	sub    BYTE PTR [rdi+0x4],bh
	...
   14004bf7e:	add    BYTE PTR [rax],al
   14004bf80:	add    DWORD PTR [rax],eax
	...
   14004bf8a:	add    BYTE PTR [rax],al
   14004bf8c:	jo     0x14004bf3d
   14004bf8e:	add    eax,0x4bf2800
   14004bf93:	add    BYTE PTR [rax+0x4bf],al
	...
   14004bfa5:	add    BYTE PTR [rax],al
   14004bfa7:	add    BYTE PTR [rcx],al
	...
   14004bfb1:	add    BYTE PTR [rax],al
   14004bfb3:	add    BYTE PTR [rax-0x7fffa51],bl
   14004bfb9:	mov    edi,0xbfa80004
   14004bfbe:	add    al,0x0
	...
   14004bfd0:	cwde   
   14004bfd1:	scas   eax,DWORD PTR es:[rdi]
   14004bfd2:	add    eax,0x100
   14004bfd7:	add    BYTE PTR [rax],al
   14004bfd9:	add    BYTE PTR [rax],al
   14004bfdb:	add    bh,bh
   14004bfdd:	(bad)  
   14004bfde:	(bad)  
   14004bfdf:	inc    DWORD PTR [rax]
   14004bfe1:	add    BYTE PTR [rax],al
   14004bfe3:	add    BYTE PTR [rax+0x0],al
   14004bfe6:	add    BYTE PTR [rax],al
   14004bfe8:	clc    
   14004bfe9:	mov    edi,0x4
	...
   14004bffe:	add    BYTE PTR [rax],al
   14004c000:	add    al,BYTE PTR [rax]
   14004c002:	add    BYTE PTR [rax],al
   14004c004:	adc    al,al
   14004c006:	add    al,0x0
	...
   14004c010:	sar    BYTE PTR [rdi-0x4b3ffffc],1
   14004c016:	add    al,0x0
	...
   14004c028:	push   rax
   14004c029:	rol    BYTE PTR [rax+rax*1],0x0
	...
   14004c03d:	add    BYTE PTR [rax],al
   14004c03f:	add    BYTE PTR [rcx],al
   14004c041:	add    BYTE PTR [rax],al
   14004c043:	add    BYTE PTR [rax],ch
   14004c045:	rol    BYTE PTR [rax+rax*1],0x0
   14004c049:	add    BYTE PTR [rax],al
   14004c04b:	add    BYTE PTR [rax],al
   14004c04d:	add    BYTE PTR [rax],al
   14004c04f:	add    al,al
   14004c051:	scas   eax,DWORD PTR es:[rdi]
   14004c052:	add    eax,0x0
   14004c057:	add    BYTE PTR [rax],al
   14004c059:	add    BYTE PTR [rax],al
   14004c05b:	add    bh,bh
   14004c05d:	(bad)  
   14004c05e:	(bad)  
   14004c05f:	inc    DWORD PTR [rax]
   14004c061:	add    BYTE PTR [rax],al
   14004c063:	add    BYTE PTR [rax+0x0],al
   14004c066:	add    BYTE PTR [rax],al
   14004c068:	cmp    al,al
   14004c06a:	add    al,0x0
	...
   14004c078:	add    DWORD PTR [rax],eax
	...
   14004c082:	add    BYTE PTR [rax],al
   14004c084:	shr    BYTE PTR [rdi-0x3fc7fffb],0x4
   14004c08b:	add    BYTE PTR [rax-0x40],bh
   14004c08e:	add    al,0x0
	...
   14004c0a0:	mov    eax,0xc00004c0
   14004c0a5:	mov    ah,0x4
	...
   14004c0b7:	add    al,dh
   14004c0b9:	scas   eax,DWORD PTR es:[rdi]
   14004c0ba:	add    eax,0x100
   14004c0bf:	add    BYTE PTR [rax],al
   14004c0c1:	add    BYTE PTR [rax],al
   14004c0c3:	add    bh,bh
   14004c0c5:	(bad)  
   14004c0c6:	(bad)  
   14004c0c7:	inc    DWORD PTR [rax]
   14004c0c9:	add    BYTE PTR [rax],al
   14004c0cb:	add    BYTE PTR [rax+0x0],al
   14004c0ce:	add    BYTE PTR [rax],al
   14004c0d0:	loopne 0x14004c092
   14004c0d2:	add    al,0x0
	...
   14004c0e8:	add    al,BYTE PTR [rax]
   14004c0ea:	add    BYTE PTR [rax],al
   14004c0ec:	movabs al,ds:0x4c0
   14004c0f5:	add    BYTE PTR [rax],al
   14004c0f7:	add    BYTE PTR [rcx],al
	...
   14004c101:	add    BYTE PTR [rax],al
   14004c103:	add    al,dh
   14004c105:	scas   eax,DWORD PTR es:[rdi]
   14004c106:	add    eax,0x4c0e000
   14004c10b:	add    al,bh
   14004c10d:	rol    BYTE PTR [rax+rax*1],0x0
	...
   14004c11d:	add    BYTE PTR [rax],al
   14004c11f:	add    BYTE PTR [rax],bh
   14004c121:	rol    DWORD PTR [rax+rax*1],0x70
   14004c125:	mov    dh,0x4
	...
   14004c137:	add    BYTE PTR [rax],ah
   14004c139:	mov    al,0x5
   14004c13b:	add    BYTE PTR [rcx],al
   14004c13d:	add    BYTE PTR [rax],al
   14004c13f:	add    BYTE PTR [rax],al
   14004c141:	add    BYTE PTR [rax],al
   14004c143:	add    bh,bh
   14004c145:	(bad)  
   14004c146:	(bad)  
   14004c147:	inc    DWORD PTR [rax]
   14004c149:	add    BYTE PTR [rax],al
   14004c14b:	add    BYTE PTR [rax+0x0],al
   14004c14e:	add    BYTE PTR [rax],al
   14004c150:	(bad)  
   14004c151:	rol    DWORD PTR [rax+rax*1],0x0
	...
   14004c165:	add    BYTE PTR [rax],al
   14004c167:	add    BYTE PTR [rdx],al
   14004c169:	add    BYTE PTR [rax],al
   14004c16b:	add    BYTE PTR [rax],ah
   14004c16d:	rol    DWORD PTR [rax+rax*1],0x0
   14004c171:	add    BYTE PTR [rax],al
   14004c173:	add    BYTE PTR [rax],al
   14004c175:	add    BYTE PTR [rax],al
   14004c177:	add    BYTE PTR [rcx],al
	...
   14004c181:	add    BYTE PTR [rax],al
   14004c183:	add    BYTE PTR [rax],ah
   14004c185:	mov    al,0x5
   14004c187:	add    BYTE PTR [rax-0x3f],ah
   14004c18a:	add    al,0x0
   14004c18c:	js     0x14004c14f
   14004c18e:	add    al,0x0
	...
   14004c1a0:	add    DWORD PTR [rax],eax
	...
   14004c1aa:	add    BYTE PTR [rax],al
   14004c1ac:	push   rax
   14004c1ad:	mov    al,0x5
   14004c1af:	add    al,dh
   14004c1b1:	rol    DWORD PTR [rax+rax*1],0xa0
   14004c1b5:	rol    DWORD PTR [rax+rax*1],0x0
	...
   14004c1c5:	add    BYTE PTR [rax],al
   14004c1c7:	add    BYTE PTR [rax-0x50],dl
   14004c1ca:	add    eax,0x100
   14004c1cf:	add    BYTE PTR [rax],al
   14004c1d1:	add    BYTE PTR [rax],al
   14004c1d3:	add    bh,bh
   14004c1d5:	(bad)  
   14004c1d6:	(bad)  
   14004c1d7:	inc    DWORD PTR [rax]
   14004c1d9:	add    BYTE PTR [rax],al
   14004c1db:	add    BYTE PTR [rax+0x0],al
   14004c1de:	add    BYTE PTR [rax],al
   14004c1e0:	lock rol DWORD PTR [rax+rax*1],0x0
	...
   14004c1f5:	add    BYTE PTR [rax],al
   14004c1f7:	add    BYTE PTR [rdx],al
   14004c1f9:	add    BYTE PTR [rax],al
   14004c1fb:	add    BYTE PTR [rax],cl
   14004c1fd:	ret    0x4
	...
   14004c208:	enter  0x4c1,0x0
   14004c20c:	shl    BYTE PTR [rsp+rax*1+0x0],0x0
	...
   14004c228:	add    eax,DWORD PTR [rax]
   14004c22a:	add    BYTE PTR [rax],al
   14004c22c:	(bad)  
   14004c22d:	ret    0x4
	...
   14004c238:	add    DWORD PTR [rax],eax
	...
   14004c242:	add    BYTE PTR [rax],al
   14004c244:	js     0x14004c1f6
   14004c246:	add    eax,0x4c22000
   14004c24b:	add    BYTE PTR [rax],bh
   14004c24d:	ret    0x4
	...
   14004c260:	add    dl,0x4
   14004c263:	add    al,dl
   14004c265:	mov    edi,0xb4c00004
   14004c26a:	add    al,0x0
	...
   14004c280:	js     0x14004c232
   14004c282:	add    eax,0x200
   14004c287:	add    BYTE PTR [rax],al
   14004c289:	add    BYTE PTR [rax],al
   14004c28b:	add    bh,bh
   14004c28d:	(bad)  
   14004c28e:	(bad)  
   14004c28f:	inc    DWORD PTR [rax]
   14004c291:	add    BYTE PTR [rax],al
   14004c293:	add    BYTE PTR [rax+0x0],al
   14004c296:	add    BYTE PTR [rax],al
   14004c298:	and    dl,al
   14004c29a:	add    al,0x0
	...
   14004c2a8:	fadd   st,st(2)
   14004c2aa:	add    al,0x0
   14004c2ac:	shl    BYTE PTR [rsp+rax*1+0x0],0x0
	...
   14004c2c8:	add    al,BYTE PTR [rax]
   14004c2ca:	add    BYTE PTR [rax],al
   14004c2cc:	test   al,0xc2
   14004c2ce:	add    al,0x0
	...
   14004c2d8:	shl    BYTE PTR [rax+0x10005],1
   14004c2de:	add    BYTE PTR [rax],al
   14004c2e0:	add    BYTE PTR [rax],al
   14004c2e2:	add    BYTE PTR [rax],al
   14004c2e4:	(bad)  
   14004c2e5:	(bad)  
   14004c2e6:	(bad)  
   14004c2e7:	inc    DWORD PTR [rax]
   14004c2e9:	add    BYTE PTR [rax],al
   14004c2eb:	add    BYTE PTR [rax+0x0],al
   14004c2ee:	add    BYTE PTR [rax],al
   14004c2f0:	rol    dl,0x4
	...
   14004c2ff:	add    BYTE PTR [rcx],al
	...
   14004c309:	add    BYTE PTR [rax],al
   14004c30b:	add    al,dl
   14004c30d:	mov    al,0x5
   14004c30f:	add    al,al
   14004c311:	ret    0x4
   14004c314:	add    bl,al
   14004c316:	add    al,0x0
	...
   14004c328:	add    bl,0x4
   14004c32b:	add    al,al
   14004c32d:	mov    ah,0x4
	...
   14004c347:	add    BYTE PTR [rdx],al
   14004c349:	add    BYTE PTR [rax],al
   14004c34b:	add    BYTE PTR [rax],ch
   14004c34d:	ret    
   14004c34e:	add    al,0x0
	...
   14004c358:	add    DWORD PTR [rax],eax
	...
   14004c362:	add    BYTE PTR [rax],al
   14004c364:	clc    
   14004c365:	mov    al,0x5
   14004c367:	add    BYTE PTR [rax-0x3d],al
   14004c36a:	add    al,0x0
   14004c36c:	pop    rax
   14004c36d:	ret    
   14004c36e:	add    al,0x0
	...
   14004c380:	clc    
   14004c381:	mov    al,0x5
   14004c383:	add    BYTE PTR [rcx],al
   14004c385:	add    BYTE PTR [rax],al
   14004c387:	add    BYTE PTR [rax],al
   14004c389:	add    BYTE PTR [rax],al
   14004c38b:	add    bh,bh
   14004c38d:	(bad)  
   14004c38e:	(bad)  
   14004c38f:	inc    DWORD PTR [rax]
   14004c391:	add    BYTE PTR [rax],al
   14004c393:	add    BYTE PTR [rax+0x0],al
   14004c396:	add    BYTE PTR [rax],al
   14004c398:	rex ret 
   14004c39a:	add    al,0x0
	...
   14004c3b0:	add    al,BYTE PTR [rax]
   14004c3b2:	add    BYTE PTR [rax],al
   14004c3b4:	adc    ah,al
   14004c3b6:	add    al,0x0
	...
   14004c3c0:	and    BYTE PTR [rcx+0x10005],dh
   14004c3c6:	add    BYTE PTR [rax],al
   14004c3c8:	add    BYTE PTR [rax],al
   14004c3ca:	add    BYTE PTR [rax],al
   14004c3cc:	(bad)  
   14004c3cd:	(bad)  
   14004c3ce:	(bad)  
   14004c3cf:	inc    DWORD PTR [rax]
   14004c3d1:	add    BYTE PTR [rax],al
   14004c3d3:	add    BYTE PTR [rax+0x0],al
   14004c3d6:	add    BYTE PTR [rax],al
   14004c3d8:	test   al,0xc3
   14004c3da:	add    al,0x0
	...
   14004c3e8:	add    DWORD PTR [rax],eax
	...
   14004c3f2:	add    BYTE PTR [rax],al
   14004c3f4:	and    BYTE PTR [rcx-0x3c57fffb],dh
   14004c3fa:	add    al,0x0
   14004c3fc:	call   0x14004c8c4
	...
   14004c40d:	add    BYTE PTR [rax],al
   14004c40f:	add    al,al
   14004c411:	ret    
   14004c412:	add    al,0x0
   14004c414:	shl    BYTE PTR [rsp+rax*1+0x0],0x0
	...
   14004c430:	add    al,BYTE PTR [rax]
   14004c432:	add    BYTE PTR [rax],al
   14004c434:	rex (bad) 
   14004c436:	add    al,0x0
	...
   14004c440:	movabs al,ds:0x4bb700004c4
	...
   14004c455:	add    BYTE PTR [rax],al
   14004c457:	add    al,cl
   14004c459:	(bad)  
   14004c45a:	add    al,0x0
   14004c45c:	movabs al,ds:0x4bb700004c4
	...
   14004c475:	add    BYTE PTR [rax],al
   14004c477:	add    BYTE PTR [rcx],al
	...
   14004c481:	add    BYTE PTR [rax],al
   14004c483:	add    BYTE PTR [rax-0xffffa4f],bl
   14004c489:	(bad)  
   14004c48a:	add    al,0x0
   14004c48c:	js     0x14004c452
   14004c48e:	add    al,0x0
	...
   14004c4a0:	jo     0x14004c453
   14004c4a2:	add    eax,0x100
   14004c4a7:	add    BYTE PTR [rax],al
   14004c4a9:	add    BYTE PTR [rax],al
   14004c4ab:	add    bh,bh
   14004c4ad:	(bad)  
   14004c4ae:	(bad)  
   14004c4af:	inc    DWORD PTR [rax]
   14004c4b1:	add    BYTE PTR [rax],al
   14004c4b3:	add    BYTE PTR [rax+0x0],al
   14004c4b6:	add    BYTE PTR [rax],al
   14004c4b8:	sub    ah,al
   14004c4ba:	add    al,0x0
	...
   14004c4c8:	cwde   
   14004c4c9:	mov    cl,0x5
   14004c4cb:	add    BYTE PTR [rdx],al
   14004c4cd:	add    BYTE PTR [rax],al
   14004c4cf:	add    BYTE PTR [rax],al
   14004c4d1:	add    BYTE PTR [rax],al
   14004c4d3:	add    bh,bh
   14004c4d5:	(bad)  
   14004c4d6:	(bad)  
   14004c4d7:	inc    DWORD PTR [rax]
   14004c4d9:	add    BYTE PTR [rax],al
   14004c4db:	add    BYTE PTR [rax+0x0],al
   14004c4de:	add    BYTE PTR [rax],al
   14004c4e0:	lock (bad) 
   14004c4e2:	add    al,0x0
	...
   14004c4f8:	add    eax,DWORD PTR [rax]
   14004c4fa:	add    BYTE PTR [rax],al
   14004c4fc:	pop    rax
   14004c4fd:	(bad)  
   14004c4fe:	add    al,0x0
	...
   14004c508:	xor    BYTE PTR [rdx+0x5],dh
   14004c50e:	add    BYTE PTR [rax],al
   14004c510:	add    BYTE PTR [rax],al
   14004c512:	add    BYTE PTR [rax],al
   14004c514:	(bad)  
   14004c515:	(bad)  
   14004c516:	(bad)  
   14004c517:	inc    DWORD PTR [rax]
   14004c519:	add    BYTE PTR [rax],al
   14004c51b:	add    BYTE PTR [rax+0x0],al
   14004c51e:	add    BYTE PTR [rax],al
   14004c520:	push   0x4c5
	...
   14004c52d:	add    BYTE PTR [rax],al
   14004c52f:	add    BYTE PTR [rax],cl
   14004c531:	(bad)
	...
   14004c540:	add    DWORD PTR [rax],eax
	...
   14004c54a:	add    BYTE PTR [rax],al
   14004c54c:	xor    BYTE PTR [rdx-0x3a97fffb],dh
   14004c552:	add    al,0x0
   14004c554:	(bad)
	...
   14004c570:	add    DWORD PTR [rax],eax
   14004c572:	add    BYTE PTR [rax],al
   14004c574:	xor    ch,al
   14004c576:	add    al,0x0
	...
   14004c580:	add    DWORD PTR [rax],eax
	...
   14004c58a:	add    BYTE PTR [rax],al
   14004c58c:	movabs al,ds:0x800004c6c00005b2
   14004c595:	(bad)
	...
   14004c5a8:	shl    BYTE PTR [rdx+0x10005],1
   14004c5ae:	add    BYTE PTR [rax],al
   14004c5b0:	add    BYTE PTR [rax],al
   14004c5b2:	add    BYTE PTR [rax],al
   14004c5b4:	(bad)  
   14004c5b5:	(bad)  
   14004c5b6:	(bad)  
   14004c5b7:	inc    DWORD PTR [rax]
   14004c5b9:	add    BYTE PTR [rax],al
   14004c5bb:	add    BYTE PTR [rax+0x0],al
   14004c5be:	add    BYTE PTR [rax],al
   14004c5c0:	add    bh,al
   14004c5c2:	add    al,0x0
	...
   14004c5d0:	push   rax
   14004c5d1:	mov    dl,0x5
	...
   14004c5db:	add    bh,bh
   14004c5dd:	(bad)  
   14004c5de:	(bad)  
   14004c5df:	inc    DWORD PTR [rax]
   14004c5e1:	add    BYTE PTR [rax],al
   14004c5e3:	add    BYTE PTR [rax+0x0],al
   14004c5e6:	add    BYTE PTR [rax],al
   14004c5e8:	push   0x4c7
	...
   14004c5f5:	add    BYTE PTR [rax],al
   14004c5f7:	add    BYTE PTR [rax-0x39],al
   14004c5fa:	add    al,0x0
   14004c5fc:	rol    ch,1
   14004c5fe:	add    al,0x0
	...
   14004c610:	(bad)  
   14004c611:	mov    BYTE PTR [rax+rax*1],0xd8
   14004c615:	mov    BYTE PTR [rax+rax*1],0xa8
   14004c619:	(bad)
   14004c61c:	jo     0x14004c5d9
   14004c61e:	add    al,0x0
	...
   14004c638:	add    DWORD PTR [rax],eax
	...
   14004c642:	add    BYTE PTR [rax],al
   14004c644:	add    BYTE PTR [rbx-0x38e7fffb],dh
   14004c64a:	add    al,0x0
   14004c64c:	cmp    dh,al
   14004c64e:	add    al,0x0
	...
   14004c660:	movabs al,ds:0x30005b2
   14004c669:	add    BYTE PTR [rax],al
   14004c66b:	add    bh,bh
   14004c66d:	(bad)  
   14004c66e:	(bad)  
   14004c66f:	inc    DWORD PTR [rax]
   14004c671:	add    BYTE PTR [rax],al
   14004c673:	add    BYTE PTR [rax+0x0],al
   14004c676:	add    BYTE PTR [rax],al
   14004c678:	rol    dh,0x4
	...
   14004c68f:	add    BYTE PTR [rdx],al
   14004c691:	add    BYTE PTR [rax],al
   14004c693:	add    al,bh
   14004c695:	(bad)
	...
   14004c6a0:	fadd   st,st(6)
   14004c6a2:	add    al,0x0
   14004c6a4:	test   al,0xc5
   14004c6a6:	add    al,0x0
   14004c6a8:	jo     0x14004c665
   14004c6aa:	add    al,0x0
	...
   14004c6c8:	add    al,0x0
   14004c6ca:	add    BYTE PTR [rax],al
   14004c6cc:	adc    dh,al
   14004c6ce:	add    al,0x0
	...
   14004c6d8:	add    BYTE PTR [rbx+0x20005],dh
   14004c6de:	add    BYTE PTR [rax],al
   14004c6e0:	add    BYTE PTR [rax],al
   14004c6e2:	add    BYTE PTR [rax],al
   14004c6e4:	(bad)  
   14004c6e5:	(bad)  
   14004c6e6:	(bad)  
   14004c6e7:	inc    DWORD PTR [rax]
   14004c6e9:	add    BYTE PTR [rax],al
   14004c6eb:	add    BYTE PTR [rax+0x0],al
   14004c6ee:	add    BYTE PTR [rax],al
   14004c6f0:	sbb    bh,al
   14004c6f2:	add    al,0x0
	...
   14004c708:	add    al,BYTE PTR [rax]
   14004c70a:	add    BYTE PTR [rax],al
   14004c70c:	add    bh,0x4
	...
   14004c71f:	add    BYTE PTR [rbx],al
   14004c721:	add    BYTE PTR [rax],al
   14004c723:	add    BYTE PTR [rax+0x4c6],ah
   14004c729:	add    BYTE PTR [rax],al
   14004c72b:	add    BYTE PTR [rax],al
   14004c72d:	add    BYTE PTR [rax],al
   14004c72f:	add    al,dl
   14004c731:	(bad)
	...
   14004c740:	js     0x14004c6f4
   14004c742:	add    eax,0x100
   14004c747:	add    BYTE PTR [rax],al
   14004c749:	add    BYTE PTR [rax],al
   14004c74b:	add    bh,bh
   14004c74d:	(bad)  
   14004c74e:	(bad)  
   14004c74f:	inc    DWORD PTR [rax]
   14004c751:	add    BYTE PTR [rax],al
   14004c753:	add    BYTE PTR [rax+0x0],al
   14004c756:	add    BYTE PTR [rax],al
   14004c758:	mov    dh,al
   14004c75a:	add    al,0x0
	...
   14004c770:	add    DWORD PTR [rax],eax
   14004c772:	add    BYTE PTR [rax],al
   14004c774:	xor    bh,al
   14004c776:	add    al,0x0
	...
   14004c780:	test   al,0xc5
   14004c782:	add    al,0x0
   14004c784:	jo     0x14004c741
   14004c786:	add    al,0x0
	...
   14004c798:	add    DWORD PTR [rax],eax
	...
   14004c7a2:	add    BYTE PTR [rax],al
   14004c7a4:	js     0x14004c758
   14004c7a6:	add    eax,0x4c68800
   14004c7ab:	add    BYTE PTR [rax+0x4c7],bl
	...
   14004c7bd:	add    BYTE PTR [rax],al
   14004c7bf:	add    BYTE PTR [rax+0x10005b3],al
   14004c7c5:	add    BYTE PTR [rax],al
   14004c7c7:	add    BYTE PTR [rax],al
   14004c7c9:	add    BYTE PTR [rax],al
   14004c7cb:	add    bh,bh
   14004c7cd:	(bad)  
   14004c7ce:	(bad)  
   14004c7cf:	inc    DWORD PTR [rax]
   14004c7d1:	add    BYTE PTR [rax],al
   14004c7d3:	add    BYTE PTR [rax+0x0],al
   14004c7d6:	add    BYTE PTR [rax],al
   14004c7d8:	push   0x4c8
	...
   14004c7ed:	add    BYTE PTR [rax],al
   14004c7ef:	add    BYTE PTR [rbx],al
   14004c7f1:	add    BYTE PTR [rax],al
   14004c7f3:	add    BYTE PTR [rax+0x4c8],ch
   14004c7f9:	add    BYTE PTR [rax],al
   14004c7fb:	add    BYTE PTR [rax],al
   14004c7fd:	add    BYTE PTR [rax],al
   14004c7ff:	add    BYTE PTR [rcx],al
	...
   14004c809:	add    BYTE PTR [rax],al
   14004c80b:	add    BYTE PTR [rax-0x17fffa4d],ch
   14004c811:	mov    DWORD PTR [rax+rax*1],0x4c800
	...
   14004c828:	add    DWORD PTR [rax],eax
	...
   14004c832:	add    BYTE PTR [rax],al
   14004c834:	xor    BYTE PTR [rbx-0x3797fffb],0x4
   14004c83b:	add    BYTE PTR [rax],ch
   14004c83d:	enter  0x4,0x0
	...
   14004c84d:	add    BYTE PTR [rax],al
   14004c84f:	add    al,al
   14004c851:	mov    DWORD PTR [rax+rax*1],0x4c5d0
	...
   14004c870:	add    al,BYTE PTR [rax]
   14004c872:	add    BYTE PTR [rax],al
   14004c874:	push   rax
   14004c875:	enter  0x4,0x0
   14004c879:	add    BYTE PTR [rax],al
   14004c87b:	add    BYTE PTR [rax],al
   14004c87d:	add    BYTE PTR [rax],al
   14004c87f:	add    BYTE PTR [rax+0x20005b3],ch
   14004c885:	add    BYTE PTR [rax],al
   14004c887:	add    BYTE PTR [rax],al
   14004c889:	add    BYTE PTR [rax],al
   14004c88b:	add    bh,bh
   14004c88d:	(bad)  
   14004c88e:	(bad)  
   14004c88f:	inc    DWORD PTR [rax]
   14004c891:	add    BYTE PTR [rax],al
   14004c893:	add    BYTE PTR [rax+0x0],al
   14004c896:	add    BYTE PTR [rax],al
   14004c898:	call   0x14004cd64
	...
   14004c8a5:	add    BYTE PTR [rax],al
   14004c8a7:	add    BYTE PTR [rax-0x3ffffb38],al
   14004c8ad:	mov    DWORD PTR [rax+rax*1],0x4c5d0
	...
   14004c8c8:	fmul   st,st(0)
   14004c8ca:	add    al,0x0
	...
   14004c8d8:	fdiv   DWORD PTR [rbx+0x5]
   14004c8de:	add    BYTE PTR [rax],al
   14004c8e0:	add    BYTE PTR [rax],al
   14004c8e2:	add    BYTE PTR [rax],al
   14004c8e4:	(bad)  
   14004c8e5:	(bad)  
   14004c8e6:	(bad)  
   14004c8e7:	inc    DWORD PTR [rax]
   14004c8e9:	add    BYTE PTR [rax],al
   14004c8eb:	add    BYTE PTR [rax+0x0],al
   14004c8ee:	add    BYTE PTR [rax],al
   14004c8f0:	add    cl,cl
   14004c8f2:	add    al,0x0
	...
   14004c908:	add    DWORD PTR [rax],eax
   14004c90a:	add    BYTE PTR [rax],al
   14004c90c:	enter  0x4c8,0x0
	...
   14004c918:	add    DWORD PTR [rax],eax
	...
   14004c922:	add    BYTE PTR [rax],al
   14004c924:	fdiv   DWORD PTR [rbx-0x36fffffb]
   14004c92a:	add    al,0x0
   14004c92c:	sbb    cl,cl
   14004c92e:	add    al,0x0
	...
   14004c940:	clc    
   14004c941:	mov    bl,0x5
   14004c943:	add    BYTE PTR [rdx],al
   14004c945:	add    BYTE PTR [rax],al
   14004c947:	add    BYTE PTR [rax],al
   14004c949:	add    BYTE PTR [rax],al
   14004c94b:	add    bh,bh
   14004c94d:	(bad)  
   14004c94e:	(bad)  
   14004c94f:	inc    DWORD PTR [rax]
   14004c951:	add    BYTE PTR [rax],al
   14004c953:	add    BYTE PTR [rax+0x0],al
   14004c956:	add    BYTE PTR [rax],al
   14004c958:	push   0x4c9
	...
   14004c96d:	add    BYTE PTR [rax],al
   14004c96f:	add    BYTE PTR [rbx],al
   14004c971:	add    BYTE PTR [rax],al
   14004c973:	add    BYTE PTR [rax+0x4c9],ch
   14004c979:	add    BYTE PTR [rax],al
   14004c97b:	add    BYTE PTR [rax],al
   14004c97d:	add    BYTE PTR [rax],al
   14004c97f:	add    BYTE PTR [rcx],al
	...
   14004c989:	add    BYTE PTR [rax],al
   14004c98b:	add    al,bh
   14004c98d:	mov    bl,0x5
   14004c98f:	add    BYTE PTR [rax-0x37],ch
   14004c992:	add    al,0x0
   14004c994:	or     cl,0x4
	...
   14004c9a7:	add    BYTE PTR [rax-0x37],al
   14004c9aa:	add    al,0x0
   14004c9ac:	lock mov ch,0x4
   14004c9af:	add    al,al
   14004c9b1:	mov    ah,0x4
	...
   14004c9cf:	add    BYTE PTR [rbx],al
   14004c9d1:	add    BYTE PTR [rax],al
   14004c9d3:	add    al,ah
   14004c9d5:	leave  
   14004c9d6:	add    al,0x0
	...
   14004c9e0:	add    dl,cl
   14004c9e2:	add    al,0x0
   14004c9e4:	lock mov ch,0x4
   14004c9e7:	add    al,al
   14004c9e9:	mov    ah,0x4
	...
   14004c9ff:	add    BYTE PTR [rax],bl
   14004ca01:	mov    ah,0x5
   14004ca03:	add    BYTE PTR [rdx],al
   14004ca05:	add    BYTE PTR [rax],al
   14004ca07:	add    BYTE PTR [rax],al
   14004ca09:	add    BYTE PTR [rax],al
   14004ca0b:	add    bh,bh
   14004ca0d:	(bad)  
   14004ca0e:	(bad)  
   14004ca0f:	inc    DWORD PTR [rax]
   14004ca11:	add    BYTE PTR [rax],al
   14004ca13:	add    BYTE PTR [rax+0x0],al
   14004ca16:	add    BYTE PTR [rax],al
   14004ca18:	enter  0x4c9,0x0
	...
   14004ca28:	add    DWORD PTR [rax],eax
	...
   14004ca32:	add    BYTE PTR [rax],al
   14004ca34:	sbb    BYTE PTR [rbp+rax*1+0x4c9c800],dh
   14004ca3b:	add    BYTE PTR [rax],ch
   14004ca3d:	retf   0x4
	...
   14004ca70:	or     DWORD PTR [rdx],ecx
   14004ca72:	add    al,0x0
   14004ca74:	or     dh,BYTE PTR [rcx+rcx*1]
   14004ca77:	add    BYTE PTR [rdx],cl
   14004ca79:	push   rdx
   14004ca7a:	(bad)  
   14004ca7b:	jo     0x14004ca3d
   14004ca7d:	xchg   ebx,eax
   14004ca7e:	add    al,BYTE PTR [rax]
   14004ca80:	add    DWORD PTR [rax],eax
   14004ca82:	add    BYTE PTR [rax],al
   14004ca84:	mov    ah,0x64
   14004ca86:	add    al,BYTE PTR [rax]
   14004ca88:	rex.X
   14004ca89:	add    al,BYTE PTR gs:[rax]
   14004ca8c:	rex mov edi,0x65420003
   14004ca92:	add    al,BYTE PTR [rax]
   14004ca94:	add    BYTE PTR [rax],al
   14004ca96:	add    BYTE PTR [rax],al
   14004ca98:	add    DWORD PTR [rax],eax
   14004ca9a:	add    BYTE PTR [rax],al
   14004ca9c:	add    BYTE PTR [rax],al
   14004ca9e:	add    BYTE PTR [rax],al
   14004caa0:	add    DWORD PTR [rax],eax
   14004caa2:	add    BYTE PTR [rax],al
   14004caa4:	adc    DWORD PTR [rcx],ebx
   14004caa6:	or     al,BYTE PTR [rax]
   14004caa8:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14004caac:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14004cab0:	sbb    DWORD PTR [rax+rcx*1],esi
   14004cab3:	add    BYTE PTR [rcx],bl
   14004cab5:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e4deab
   14004cabb:	rol    al,0x93
   14004cabe:	add    al,BYTE PTR [rax]
   14004cac0:	add    DWORD PTR [rax],eax
   14004cac2:	add    BYTE PTR [rax],al
   14004cac4:	sbb    ch,BYTE PTR [rbx+0x2]
   14004cac7:	add    al,ah
   14004cac9:	imul   eax,DWORD PTR [rdx],0x0
   14004cacc:	pop    rsi
   14004cacd:	mov    edi,0x3
   14004cad2:	add    BYTE PTR [rax],al
   14004cad4:	add    DWORD PTR [rsi],eax
   14004cad6:	add    al,BYTE PTR [rax]
   14004cad8:	(bad)  
   14004cad9:	xor    al,BYTE PTR [rdx]
   14004cadb:	xor    BYTE PTR [rcx],al
   14004cadd:	add    al,0x1
   14004cadf:	add    BYTE PTR [rdx+riz*1],al
   14004cae2:	add    BYTE PTR [rax],al
   14004cae4:	add    DWORD PTR [rcx],ebx
   14004cae6:	or     al,BYTE PTR [rax]
   14004cae8:	sbb    DWORD PTR [rsi+rcx*1],esi
   14004caeb:	add    BYTE PTR [rcx],bl
   14004caed:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e4dee3
   14004caf3:	ror    BYTE PTR [rdi],1
   14004caf5:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b64d76c
   14004cafc:	add    DWORD PTR [rsi],eax
   14004cafe:	add    al,BYTE PTR [rax]
   14004cb00:	(bad)  
   14004cb01:	xor    al,BYTE PTR [rdx]
   14004cb03:	jo     0x14004cb06
   14004cb05:	or     al,BYTE PTR [rdx]
   14004cb07:	add    BYTE PTR [rdx],cl
   14004cb09:	xor    al,BYTE PTR [rsi]
   14004cb0b:	xor    BYTE PTR [rcx],al
   14004cb0d:	sbb    ecx,DWORD PTR [rdx]
   14004cb0f:	add    BYTE PTR [rbx],bl
   14004cb11:	in     al,0xf
   14004cb13:	add    BYTE PTR [rbx],bl
   14004cb15:	je     0x14004cb25
   14004cb17:	add    BYTE PTR [rbx],bl
   14004cb19:	fs or  eax,0xc341b00
   14004cb1f:	add    BYTE PTR [rbx],bl
   14004cb21:	xchg   edx,eax
   14004cb22:	adc    al,0x50
   14004cb24:	add    DWORD PTR [rdi],ecx
   14004cb26:	(bad)  
   14004cb27:	add    BYTE PTR [rdi],cl
   14004cb29:	fs add eax,0x4340f00
   14004cb2f:	add    BYTE PTR [rdi],cl
   14004cb31:	adc    cl,BYTE PTR [rbx]
   14004cb33:	jo     0x14004cb36
   14004cb35:	or     BYTE PTR [rcx],al
   14004cb37:	add    BYTE PTR [rax],cl
   14004cb39:	rex.X add BYTE PTR [rax],al
   14004cb3c:	adc    DWORD PTR [rbx],edx
   14004cb3e:	add    al,0x0
   14004cb40:	adc    esi,DWORD PTR [rdi+rax*1]
   14004cb43:	add    BYTE PTR [rbx],dl
   14004cb45:	xor    cl,BYTE PTR [rdi]
   14004cb47:	jo     0x14004cb09
   14004cb49:	xchg   ebx,eax
   14004cb4a:	add    al,BYTE PTR [rax]
   14004cb4c:	add    al,BYTE PTR [rax]
   14004cb4e:	add    BYTE PTR [rax],al
   14004cb50:	mov    eax,0xe5000280
   14004cb55:	add    BYTE PTR [rdx],0x0
   14004cb58:	jb     0x14004cb19
   14004cb5a:	add    eax,DWORD PTR [rax]
   14004cb5c:	add    BYTE PTR [rax],al
   14004cb5e:	add    BYTE PTR [rax],al
   14004cb60:	test   DWORD PTR [rax-0x7ed1fffe],0xbf8b0002
   14004cb6a:	add    eax,DWORD PTR [rax]
   14004cb6c:	add    BYTE PTR [rax],al
   14004cb6e:	add    BYTE PTR [rax],al
   14004cb70:	adc    DWORD PTR [rdx],ecx
   14004cb72:	add    al,0x0
   14004cb74:	or     dh,BYTE PTR [rsi+rax*1]
   14004cb77:	add    BYTE PTR [rdx],cl
   14004cb79:	xor    al,BYTE PTR [rsi]
   14004cb7b:	jo     0x14004cb3d
   14004cb7d:	xchg   ebx,eax
   14004cb7e:	add    al,BYTE PTR [rax]
   14004cb80:	add    al,BYTE PTR [rax]
   14004cb82:	add    BYTE PTR [rax],al
   14004cb84:	push   rbx
   14004cb85:	(bad)  
   14004cb86:	add    al,BYTE PTR [rax]
   14004cb88:	pop    rbp
   14004cb89:	(bad)  
   14004cb8a:	add    al,BYTE PTR [rax]
   14004cb8c:	jb     0x14004cb4d
   14004cb8e:	add    eax,DWORD PTR [rax]
   14004cb90:	add    BYTE PTR [rax],al
   14004cb92:	add    BYTE PTR [rax],al
   14004cb94:	jb     0x14004cb18
   14004cb96:	add    al,BYTE PTR [rax]
   14004cb98:	cdq    
   14004cb99:	(bad)  
   14004cb9a:	add    al,BYTE PTR [rax]
   14004cb9c:	mov    edi,DWORD PTR [rdi+0x3]
   14004cba2:	add    BYTE PTR [rax],al
   14004cba4:	add    DWORD PTR [rdi],ecx
   14004cba6:	add    al,0x0
   14004cba8:	sysenter 
   14004cbaa:	(bad)  
   14004cbab:	add    BYTE PTR [rdi],cl
   14004cbad:	xor    cl,BYTE PTR [rbx]
   14004cbaf:	jo     0x14004cbc2
   14004cbb1:	sbb    al,0xa
   14004cbb3:	add    BYTE PTR [rsp+riz*2],bl
   14004cbb6:	ltr    WORD PTR [rsp+rsi*1]
   14004cbba:	(bad)  
   14004cbbb:	add    BYTE PTR [rdx+rsi*2],bl
   14004cbbe:	sbb    al,dh
   14004cbc0:	(bad)  
   14004cbc1:	loopne 0x14004cbd7
   14004cbc3:	rcl    BYTE PTR [rdx],1
   14004cbc5:	rcl    BYTE PTR [rax],0x70
   14004cbc8:	rcl    BYTE PTR [rbx+0x10002],0x0
   14004cbcf:	add    bl,ch
   14004cbd1:	test   DWORD PTR [rdx],eax
   14004cbd3:	add    bh,bh
   14004cbd5:	xchg   BYTE PTR [rdx],al
   14004cbd7:	add    BYTE PTR [rdi+rdi*4+0x3],ah
   14004cbde:	add    BYTE PTR [rax],al
   14004cbe0:	sbb    DWORD PTR [rip+0x641b000b],ebp        # 0x1a41fcbf1
   14004cbe6:	push   rcx
   14004cbe7:	add    BYTE PTR [rbx],bl
   14004cbe9:	push   rsp
   14004cbea:	push   rax
   14004cbeb:	add    BYTE PTR [rbx],bl
   14004cbed:	xor    al,0x4f
   14004cbef:	add    BYTE PTR [rbx],bl
   14004cbf1:	add    DWORD PTR [rdx+0x0],ecx
   14004cbf4:	adc    al,0xf0
   14004cbf6:	adc    ah,al
   14004cbf8:	adc    BYTE PTR [rax+0x0],dh
   14004cbfb:	add    BYTE PTR [riz*8+0x2400002],bh
   14004cc02:	add    BYTE PTR [rax],al
   14004cc04:	adc    DWORD PTR [rax],esp
   14004cc06:	or     eax,0x1fc42000
   14004cc0b:	add    BYTE PTR [rax],ah
   14004cc0d:	je     0x14004cc2d
   14004cc0f:	add    BYTE PTR [rax],ah
   14004cc11:	fs sbb eax,0x1c342000
   14004cc17:	add    BYTE PTR [rax],ah
   14004cc19:	add    DWORD PTR [rax],ebx
   14004cc1b:	add    BYTE PTR [rcx],bl
   14004cc1d:	lock (bad) 
   14004cc1f:	loopne 0x14004cc36
   14004cc21:	rol    BYTE PTR [rax],1
   14004cc23:	add    al,al
   14004cc25:	xchg   ebx,eax
   14004cc26:	add    al,BYTE PTR [rax]
   14004cc28:	add    eax,DWORD PTR [rax]
   14004cc2a:	add    BYTE PTR [rax],al
   14004cc2c:	call   0x14404cebb
   14004cc31:	mov    eax,DWORD PTR [rdx]
   14004cc33:	add    al,cl
   14004cc35:	mov    edi,0x3
   14004cc3a:	add    BYTE PTR [rax],al
   14004cc3c:	jnp    0xcb45cc44
   14004cc42:	add    al,BYTE PTR [rax]
   14004cc44:	enter  0x3bf,0x0
   14004cc48:	add    BYTE PTR [rax],al
   14004cc4a:	add    BYTE PTR [rax],al
   14004cc4c:	mov    rax,QWORD PTR [r10]
   14004cc4f:	add    bl,bl
   14004cc51:	lea    eax,[rdx]
   14004cc53:	add    al,cl
   14004cc55:	mov    edi,0x3
   14004cc5a:	add    BYTE PTR [rax],al
   14004cc5c:	add    DWORD PTR [rsi+rax*1],ecx
   14004cc5f:	add    BYTE PTR [rsp+rsi*1],cl
   14004cc62:	or     al,0x0
   14004cc64:	or     al,0x52
   14004cc66:	or     BYTE PTR [rax+0x7],dh
   14004cc69:	(bad)  
   14004cc6a:	(bad)  
   14004cc6b:	push   rax
   14004cc6c:	add    DWORD PTR [rip+0xffffffffc4150009],edx        # 0x10419cc7b
   14004cc72:	add    eax,0x4741500
   14004cc77:	add    BYTE PTR [rip+0x15000364],dl        # 0x15504cfe1
   14004cc7d:	xor    al,0x2
   14004cc7f:	add    BYTE PTR [rip+0x10000f0],dl        # 0x14104cd75
   14004cc85:	or     eax,0x340d0004
   14004cc8a:	or     DWORD PTR [rax],eax
   14004cc8c:	or     eax,0x1500632
   14004cc91:	adc    al,0x8
   14004cc93:	add    BYTE PTR [rsp+riz*2],dl
   14004cc96:	or     BYTE PTR [rax],al
   14004cc98:	adc    al,0x54
   14004cc9a:	(bad)  
   14004cc9b:	add    BYTE PTR [rsp+rsi*1],dl
   14004cc9e:	(bad)  
   14004cc9f:	add    BYTE PTR [rdx+rsi*1],dl
   14004cca2:	adc    BYTE PTR [rax+0x1],dh
   14004cca5:	sbb    al,0xc
   14004cca7:	add    BYTE PTR [rsp+riz*2],bl
   14004ccaa:	adc    BYTE PTR [rax],al
   14004ccac:	sbb    al,0x54
   14004ccae:	ltr    WORD PTR [rsp+rsi*1]
   14004ccb2:	(bad)  
   14004ccb3:	add    BYTE PTR [rdx+rsi*2],bl
   14004ccb6:	sbb    al,dh
   14004ccb8:	(bad)  
   14004ccb9:	loopne 0x14004cccf
   14004ccbb:	rcl    BYTE PTR [rdx],1
   14004ccbd:	rcl    BYTE PTR [rax],0x70
   14004ccc0:	add    DWORD PTR [rsi],eax
   14004ccc2:	add    al,BYTE PTR [rax]
   14004ccc4:	(bad)  
   14004ccc5:	adc    al,BYTE PTR [rdx]
   14004ccc7:	xor    BYTE PTR [rcx],cl
   14004ccc9:	add    al,0x1
   14004cccb:	add    BYTE PTR [rdx+rax*2],al
   14004ccce:	add    BYTE PTR [rax],al
   14004ccd0:	rcl    BYTE PTR [rbx+0x10002],0x0
   14004ccd7:	add    ch,bl
   14004ccd9:	xchg   esi,eax
   14004ccda:	add    al,BYTE PTR [rax]
   14004ccdc:	loope  0x14004cc74
   14004ccde:	add    al,BYTE PTR [rax]
   14004cce0:	add    DWORD PTR [rax],eax
   14004cce2:	add    BYTE PTR [rax],al
   14004cce4:	loope  0x14004cc7c
   14004cce6:	add    al,BYTE PTR [rax]
   14004cce8:	or     DWORD PTR [rcx+rax*1],eax
   14004cceb:	add    BYTE PTR [rdx+rax*2],al
   14004ccee:	add    BYTE PTR [rax],al
   14004ccf0:	rcl    BYTE PTR [rbx+0x10002],0x0
   14004ccf7:	add    BYTE PTR [rsi-0x3dfffd6a],bh
   14004ccfd:	xchg   esi,eax
   14004ccfe:	add    al,BYTE PTR [rax]
   14004cd00:	add    DWORD PTR [rax],eax
   14004cd02:	add    BYTE PTR [rax],al
   14004cd04:	ret    0x296
   14004cd07:	add    BYTE PTR [rcx],al
   14004cd09:	sbb    BYTE PTR [rdx],cl
   14004cd0b:	add    BYTE PTR [rax],bl
   14004cd0d:	or     al,BYTE PTR fs:[rax]
   14004cd10:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14004cd14:	sbb    BYTE PTR [rax+rcx*1],dh
   14004cd17:	add    BYTE PTR [rax],bl
   14004cd19:	xor    dl,BYTE PTR [rax+rsi*8]
   14004cd1c:	adc    ah,al
   14004cd1e:	adc    BYTE PTR [rax+0x19],dh
   14004cd21:	(bad)  
   14004cd22:	or     DWORD PTR [rax],eax
   14004cd24:	(bad)  
   14004cd25:	je     0x14004cce2
   14004cd27:	add    BYTE PTR [rsi],bl
   14004cd29:	fs mov edx,0xb9341e00
   14004cd2f:	add    BYTE PTR [rsi],bl
   14004cd31:	add    DWORD PTR [rsi+0x501000],esi
   14004cd37:	add    BYTE PTR [riz*8+0x5a00002],bh
   14004cd3e:	add    BYTE PTR [rax],al
   14004cd40:	add    DWORD PTR [rax+rcx*1],edx
   14004cd43:	add    BYTE PTR [rsp+riz*2],dl
   14004cd46:	or     al,BYTE PTR [rax]
   14004cd48:	adc    al,0x54
   14004cd4a:	or     DWORD PTR [rax],eax
   14004cd4c:	adc    al,0x34
   14004cd4e:	or     BYTE PTR [rax],al
   14004cd50:	adc    al,0x52
   14004cd52:	adc    BYTE PTR [rax+0x0],dh
   14004cd55:	add    BYTE PTR [rax],al
   14004cd57:	add    BYTE PTR [rcx],al
   14004cd59:	add    BYTE PTR [rax],al
   14004cd5b:	add    BYTE PTR [rcx],dl
   14004cd5d:	(bad)  
   14004cd5e:	add    al,BYTE PTR [rax]
   14004cd60:	(bad)  
   14004cd61:	push   rdx
   14004cd62:	add    dh,BYTE PTR [rax]
   14004cd64:	rcl    BYTE PTR [rbx+0x10002],0x0
   14004cd6b:	add    ah,bh
   14004cd6d:	pushf  
   14004cd6e:	add    al,BYTE PTR [rax]
   14004cd70:	rex.R popf 
   14004cd72:	add    al,BYTE PTR [rax]
   14004cd74:	jrcxz  0x14004cd35
   14004cd76:	add    eax,DWORD PTR [rax]
   14004cd78:	add    BYTE PTR [rax],al
   14004cd7a:	add    BYTE PTR [rax],al
   14004cd7c:	add    DWORD PTR [rsi+rax*1],edx
   14004cd7f:	add    BYTE PTR [rsp+riz*2],dl
   14004cd82:	(bad)  
   14004cd83:	add    BYTE PTR [rsp+rsi*1],dl
   14004cd86:	(bad)  
   14004cd87:	add    BYTE PTR [rdx+rsi*1],dl
   14004cd8a:	adc    BYTE PTR [rax+0x1],dh
   14004cd8d:	or     eax,0x340d0004
   14004cd92:	str    WORD PTR [rip+0x115006b2]        # 0x15154d44b
   14004cd99:	(bad)  
   14004cd9a:	add    al,BYTE PTR [rax]
   14004cd9c:	(bad)  
   14004cd9d:	xor    al,BYTE PTR [rdx]
   14004cd9f:	xor    al,al
   14004cda1:	xchg   ebx,eax
   14004cda2:	add    al,BYTE PTR [rax]
   14004cda4:	add    DWORD PTR [rax],eax
   14004cda6:	add    BYTE PTR [rax],al
   14004cda8:	iret   
   14004cda9:	movabs ds:0xbffc0002a3e50002,eax
   14004cdb2:	add    eax,DWORD PTR [rax]
   14004cdb4:	add    BYTE PTR [rax],al
   14004cdb6:	add    BYTE PTR [rax],al
   14004cdb8:	adc    DWORD PTR [rdx],ecx
   14004cdba:	add    al,0x0
   14004cdbc:	or     dh,BYTE PTR [rdi+rax*1]
   14004cdbf:	add    BYTE PTR [rdx],cl
   14004cdc1:	xor    al,BYTE PTR [rsi]
   14004cdc3:	jo     0x14004cd85
   14004cdc5:	xchg   ebx,eax
   14004cdc6:	add    al,BYTE PTR [rax]
   14004cdc8:	add    DWORD PTR [rax],eax
   14004cdca:	add    BYTE PTR [rax],al
   14004cdcc:	(bad)  
   14004cdcd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004cdce:	add    al,BYTE PTR [rax]
   14004cdd0:	sbb    eax,0x150002a8
   14004cdd5:	rol    BYTE PTR [rbx],0x0
   14004cdd8:	add    BYTE PTR [rax],al
   14004cdda:	add    BYTE PTR [rax],al
   14004cddc:	adc    DWORD PTR [rcx],ebx
   14004cdde:	or     al,BYTE PTR [rax]
   14004cde0:	sbb    esp,esp
   14004cde2:	or     eax,DWORD PTR [rax]
   14004cde4:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14004cde8:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14004cdec:	sbb    DWORD PTR [rax+rcx*1],esi
   14004cdef:	add    BYTE PTR [rcx],bl
   14004cdf1:	push   rdx
   14004cdf2:	adc    eax,0x293c0f0
   14004cdf7:	add    BYTE PTR [rcx],al
   14004cdf9:	add    BYTE PTR [rax],al
   14004cdfb:	add    BYTE PTR [rdi+0x4e0002a9],dl
   14004ce01:	stos   BYTE PTR es:[rdi],al
   14004ce02:	add    al,BYTE PTR [rax]
   14004ce04:	adc    eax,0x3c0
   14004ce09:	add    BYTE PTR [rax],al
   14004ce0b:	add    BYTE PTR [rcx],bl
   14004ce0d:	and    eax,0x5416000a
   14004ce12:	adc    DWORD PTR [rax],eax
   14004ce14:	(bad)  
   14004ce15:	xor    al,0x10
   14004ce17:	add    BYTE PTR [rsi],dl
   14004ce19:	jb     0x14004ce2d
   14004ce1b:	lock adc al,ah
   14004ce1e:	(bad)  
   14004ce1f:	ror    BYTE PTR [rax+rsi*2],0xb
   14004ce23:	(bad)  
   14004ce24:	cmp    al,0xe5
   14004ce26:	add    al,BYTE PTR [rax]
   14004ce28:	cmp    BYTE PTR [rax],al
   14004ce2a:	add    BYTE PTR [rax],al
   14004ce2c:	add    DWORD PTR [rsi],eax
   14004ce2e:	add    al,BYTE PTR [rax]
   14004ce30:	(bad)  
   14004ce31:	jb     0x14004ce35
   14004ce33:	xor    BYTE PTR [rcx],bl
   14004ce35:	sub    eax,DWORD PTR [rdi]
   14004ce37:	add    BYTE PTR [rdx],bl
   14004ce39:	je     0x14004cdef
   14004ce3b:	add    BYTE PTR [rdx],bl
   14004ce3d:	xor    al,0xb3
   14004ce3f:	add    BYTE PTR [rdx],bl
   14004ce41:	add    DWORD PTR [rax+0x500b00],esi
   14004ce47:	add    BYTE PTR [riz*8+0x5700002],bh
   14004ce4e:	add    BYTE PTR [rax],al
   14004ce50:	add    DWORD PTR [rdx],edx
   14004ce52:	add    al,0x0
   14004ce54:	adc    dh,BYTE PTR [rcx*1+0xb921200]
   14004ce5b:	push   rax
   14004ce5c:	adc    DWORD PTR [rsi],eax
   14004ce5e:	add    al,BYTE PTR [rax]
   14004ce60:	(bad)  
   14004ce61:	xor    al,BYTE PTR [rdx]
   14004ce63:	jo     0x14004ce25
   14004ce65:	xchg   ebx,eax
   14004ce66:	add    al,BYTE PTR [rax]
   14004ce68:	add    DWORD PTR [rax],eax
   14004ce6a:	add    BYTE PTR [rax],al
   14004ce6c:	cmp    eax,0x530002ae
   14004ce71:	scas   al,BYTE PTR es:[rdi]
   14004ce72:	add    al,BYTE PTR [rax]
   14004ce74:	cld    
   14004ce75:	mov    edi,0x3
   14004ce7a:	add    BYTE PTR [rax],al
   14004ce7c:	add    DWORD PTR [rdi],edx
   14004ce7e:	or     BYTE PTR [rax],al
   14004ce80:	(bad)  
   14004ce81:	or     DWORD PTR fs:[rax],eax
   14004ce84:	(bad)  
   14004ce85:	push   rsp
   14004ce86:	or     BYTE PTR [rax],al
   14004ce88:	(bad)  
   14004ce89:	xor    al,0x7
   14004ce8b:	add    BYTE PTR [rdi],dl
   14004ce8d:	xor    dl,BYTE PTR [rbx]
   14004ce8f:	jo     0x14004ce92
   14004ce91:	add    BYTE PTR [rax],al
   14004ce93:	add    BYTE PTR [rcx],bl
   14004ce95:	xor    BYTE PTR [rbx],cl
   14004ce97:	add    BYTE PTR [rdi],bl
   14004ce99:	xor    al,0xa6
   14004ce9b:	add    BYTE PTR [rdi],bl
   14004ce9d:	add    DWORD PTR [rax+rax*1-0x1ff10ff0],ebx
   14004cea4:	or     al,0xd0
   14004cea6:	or     al,al
   14004cea8:	or     BYTE PTR [rax+0x7],dh
   14004ceab:	(bad)  
   14004ceac:	(bad)  
   14004cead:	push   rax
   14004ceae:	add    BYTE PTR [rax],al
   14004ceb0:	cmp    al,0xe5
   14004ceb2:	add    al,BYTE PTR [rax]
   14004ceb4:	rol    BYTE PTR [rax+rax*1],1
   14004ceb7:	add    BYTE PTR [rcx],al
   14004ceb9:	sbb    BYTE PTR [rax],cl
   14004cebb:	add    BYTE PTR [rax],bl
   14004cebd:	or     BYTE PTR fs:[rax],al
   14004cec0:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   14004cec4:	sbb    BYTE PTR [rsi+rax*1],dh
   14004cec7:	add    BYTE PTR [rax],bl
   14004cec9:	xor    dl,BYTE PTR [rax+rsi*2]
   14004cecc:	add    DWORD PTR [rcx+rax*1],eax
   14004cecf:	add    BYTE PTR [rdx+rax*2],al
   14004ced2:	add    BYTE PTR [rax],al
   14004ced4:	add    DWORD PTR [rax],edx
   14004ced6:	(bad)  
   14004ced7:	add    BYTE PTR [rax],dl
   14004ced9:	je     0x14004cee2
   14004cedb:	add    BYTE PTR [rax],dl
   14004cedd:	xor    al,0x6
   14004cedf:	add    BYTE PTR [rax],dl
   14004cee1:	xor    cl,BYTE PTR [rax+riz*8]
   14004cee4:	add    DWORD PTR [rcx],ecx
   14004cee6:	add    al,BYTE PTR [rax]
   14004cee8:	or     DWORD PTR [rdx],esi
   14004ceea:	add    eax,0xb301930
   14004ceef:	add    BYTE PTR [rdi],bl
   14004cef1:	xor    al,0x66
   14004cef3:	add    BYTE PTR [rdi],bl
   14004cef5:	add    DWORD PTR [rax+rax*1+0x10],ebx
   14004cef9:	lock (bad) 
   14004cefb:	loopne 0x14004cf09
   14004cefd:	ror    BYTE PTR [rdx],1
   14004ceff:	ror    BYTE PTR [rax],0x70
   14004cf02:	(bad)  
   14004cf03:	(bad)  
   14004cf04:	(bad)  
   14004cf05:	push   rax
   14004cf06:	add    BYTE PTR [rax],al
   14004cf08:	cmp    al,0xe5
   14004cf0a:	add    al,BYTE PTR [rax]
   14004cf0c:	fadd   DWORD PTR [rdx]
   14004cf0e:	add    BYTE PTR [rax],al
   14004cf10:	add    DWORD PTR [rax],ecx
   14004cf12:	add    al,0x0
   14004cf14:	or     BYTE PTR [rdx+0x4],dh
   14004cf17:	jo     0x14004cf1c
   14004cf19:	(bad)  
   14004cf1a:	add    dh,BYTE PTR [rax]
   14004cf1c:	add    DWORD PTR [rdx],ecx
   14004cf1e:	add    al,0x0
   14004cf20:	or     dh,BYTE PTR [rcx*1+0x6720a00]
   14004cf27:	jo     0x14004cf3a
   14004cf29:	adc    BYTE PTR [rsi],al
   14004cf2b:	add    BYTE PTR [rax],dl
   14004cf2d:	je     0x14004cf36
   14004cf2f:	add    BYTE PTR [rax],dl
   14004cf31:	xor    al,0x6
   14004cf33:	add    BYTE PTR [rax],dl
   14004cf35:	xor    cl,BYTE PTR [rax+riz*8]
   14004cf38:	rcl    BYTE PTR [rbx+0x10002],0x0
   14004cf3f:	add    BYTE PTR [rdx-0x4cfffd24],dl
   14004cf45:	fadd   QWORD PTR [rdx]
   14004cf47:	add    BYTE PTR [rsi],ch
   14004cf49:	rol    BYTE PTR [rbx],0x0
   14004cf4c:	add    BYTE PTR [rax],al
   14004cf4e:	add    BYTE PTR [rax],al
   14004cf50:	or     DWORD PTR [rdx],ecx
   14004cf52:	add    al,0x0
   14004cf54:	or     dh,BYTE PTR [rsi+rax*1]
   14004cf57:	add    BYTE PTR [rdx],cl
   14004cf59:	xor    al,BYTE PTR [rsi]
   14004cf5b:	jo     0x14004cf1d
   14004cf5d:	xchg   ebx,eax
   14004cf5e:	add    al,BYTE PTR [rax]
   14004cf60:	add    DWORD PTR [rax],eax
   14004cf62:	add    BYTE PTR [rax],al
   14004cf64:	lods   eax,DWORD PTR ds:[rsi]
   14004cf65:	fld    QWORD PTR [rdx]
   14004cf67:	add    al,ah
   14004cf69:	fld    QWORD PTR [rdx]
   14004cf6b:	add    BYTE PTR [rax-0x40],dl
   14004cf6e:	add    eax,DWORD PTR [rax]
   14004cf70:	loopne 0x14004cf4f
   14004cf72:	add    al,BYTE PTR [rax]
   14004cf74:	adc    DWORD PTR [rcx],edx
   14004cf76:	or     BYTE PTR [rax],al
   14004cf78:	adc    DWORD PTR [rsi+rcx*1],esi
   14004cf7b:	add    BYTE PTR [rcx],dl
   14004cf7d:	push   rdx
   14004cf7e:	or     eax,0x9e00bf0
   14004cf83:	rol    BYTE PTR [rdi],0x70
   14004cf86:	(bad)  
   14004cf87:	(bad)  
   14004cf88:	rcl    BYTE PTR [rbx+0x10002],0x0
   14004cf8f:	add    dh,al
   14004cf91:	fild   WORD PTR [rdx]
   14004cf93:	add    BYTE PTR [rbp-0x20],cl
   14004cf96:	add    al,BYTE PTR [rax]
   14004cf98:	jo     0x14004cf5a
   14004cf9a:	add    eax,DWORD PTR [rax]
   14004cf9c:	add    BYTE PTR [rax],al
   14004cf9e:	add    BYTE PTR [rax],al
   14004cfa0:	add    DWORD PTR [rax],eax
   14004cfa2:	add    BYTE PTR [rax],al
   14004cfa4:	sbb    DWORD PTR [rsi],ebx
   14004cfa6:	or     BYTE PTR [rax],al
   14004cfa8:	setb   BYTE PTR [rbx]
   14004cfab:	lock or eax,esp
   14004cfae:	(bad)  
   14004cfaf:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14364d426
   14004cfb6:	add    dh,BYTE PTR [rax]
   14004cfb8:	cmp    al,0xe5
   14004cfba:	add    al,BYTE PTR [rax]
   14004cfbc:	rex.W add BYTE PTR [rax],al
   14004cfbf:	add    BYTE PTR [rcx],al
   14004cfc1:	(bad)  
   14004cfc2:	add    al,BYTE PTR [rax]
   14004cfc4:	(bad)  
   14004cfc5:	add    DWORD PTR [rbx+0x100],ebx
   14004cfcb:	add    BYTE PTR [rcx],al
   14004cfcd:	add    BYTE PTR [rax],al
   14004cfcf:	add    BYTE PTR [rcx],al
   14004cfd1:	add    BYTE PTR [rax],al
   14004cfd3:	add    BYTE PTR [rcx],al
   14004cfd5:	(bad)  
   14004cfd6:	add    al,BYTE PTR [rax]
   14004cfd8:	(bad)  
   14004cfd9:	xor    cl,BYTE PTR [rdx]
   14004cfdb:	xor    BYTE PTR [rcx],al
   14004cfdd:	clts   
   14004cfdf:	add    BYTE PTR [rdi],cl
   14004cfe1:	adc    DWORD PTR fs:[rax],eax
   14004cfe4:	sysenter 
   14004cfe6:	adc    BYTE PTR [rax],al
   14004cfe8:	psrld  mm1,QWORD PTR [rbx]
   14004cfeb:	jo     0x14004d006
   14004cfed:	sub    eax,0x741f450d
   14004cff2:	adc    al,BYTE PTR [rax]
   14004cff4:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   14004cff8:	(bad)  
   14004cff9:	xor    al,0x10
   14004cffb:	add    BYTE PTR [rbx],dl
   14004cffd:	rex.XB (bad) 
   14004cfff:	xchg   edx,eax
   14004d000:	or     dh,al
   14004d002:	or     al,ah
   14004d004:	(bad)  
   14004d005:	rol    BYTE PTR [rax+rax*8],1
   14004d008:	add    dl,BYTE PTR [rax+0x0]
   14004d00b:	add    BYTE PTR [riz*8+0x480002],bh
   14004d012:	add    BYTE PTR [rax],al
   14004d014:	add    DWORD PTR [rdi],ecx
   14004d016:	(bad)  
   14004d017:	add    BYTE PTR [rdi],cl
   14004d019:	str    WORD PTR fs:[rdi]
   14004d01d:	xor    al,0xe
   14004d01f:	add    BYTE PTR [rdi],cl
   14004d021:	mov    dl,0xb
   14004d023:	jo     0x14004d03e
   14004d025:	sub    eax,0x741f350d
   14004d02a:	adc    BYTE PTR [rax],al
   14004d02c:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   14004d030:	(bad)  
   14004d031:	xor    al,0xe
   14004d033:	add    BYTE PTR [rbx],dl
   14004d035:	xor    ecx,DWORD PTR [rsi]
   14004d037:	jb     0x14004d043
   14004d039:	lock or al,ah
   14004d03c:	(bad)  
   14004d03d:	rol    BYTE PTR [rax+rax*8],1
   14004d040:	add    dl,BYTE PTR [rax+0x0]
   14004d043:	add    BYTE PTR [riz*8+0x300002],bh
   14004d04a:	add    BYTE PTR [rax],al
   14004d04c:	add    BYTE PTR [rax],al
   14004d04e:	add    BYTE PTR [rax],al
   14004d050:	add    DWORD PTR [rax],eax
   14004d052:	add    BYTE PTR [rax],al
   14004d054:	adc    DWORD PTR [rip+0x34150008],edx        # 0x17419d062
   14004d05a:	or     eax,DWORD PTR [rax]
   14004d05c:	adc    eax,0xff01132
   14004d061:	loopne 0x14004d070
   14004d063:	ror    BYTE PTR [rbx],0x70
   14004d066:	or     ah,BYTE PTR [rax-0x40]
   14004d069:	xchg   ebx,eax
   14004d06a:	add    al,BYTE PTR [rax]
   14004d06c:	add    DWORD PTR [rax],eax
   14004d06e:	add    BYTE PTR [rax],al
   14004d070:	shl    ah,cl
   14004d072:	add    al,BYTE PTR [rax]
   14004d074:	add    al,0xf5
   14004d076:	add    al,BYTE PTR [rax]
   14004d078:	mov    es,eax
   14004d07a:	add    eax,DWORD PTR [rax]
   14004d07c:	add    BYTE PTR [rax],al
   14004d07e:	add    BYTE PTR [rax],al
   14004d080:	sbb    DWORD PTR [rsi],esi
   14004d082:	or     eax,DWORD PTR [rax]
   14004d084:	and    eax,0x25037134
   14004d089:	add    DWORD PTR [rsi+0x3],esp
   14004d08c:	adc    al,dh
   14004d08e:	(bad)  
   14004d08f:	loopne 0x14004d09d
   14004d091:	ror    BYTE PTR [rdx],1
   14004d093:	ror    BYTE PTR [rax],0x70
   14004d096:	(bad)  
   14004d097:	(bad)  
   14004d098:	(bad)  
   14004d099:	push   rax
   14004d09a:	add    BYTE PTR [rax],al
   14004d09c:	cmp    al,0xe5
   14004d09e:	add    al,BYTE PTR [rax]
   14004d0a0:	and    BYTE PTR [rbx],bl
   14004d0a2:	add    BYTE PTR [rax],al
   14004d0a4:	adc    DWORD PTR [rip+0x34150008],edx        # 0x17419d0b2
   14004d0aa:	or     eax,DWORD PTR [rax]
   14004d0ac:	adc    eax,0xff01132
   14004d0b1:	loopne 0x14004d0c0
   14004d0b3:	ror    BYTE PTR [rbx],0x70
   14004d0b6:	or     ah,BYTE PTR [rax-0x40]
   14004d0b9:	xchg   ebx,eax
   14004d0ba:	add    al,BYTE PTR [rax]
   14004d0bc:	add    DWORD PTR [rax],eax
   14004d0be:	add    BYTE PTR [rax],al
   14004d0c0:	xor    bh,ch
   14004d0c2:	add    al,BYTE PTR [rax]
   14004d0c4:	data16 std 
   14004d0c6:	add    al,BYTE PTR [rax]
   14004d0c8:	mov    es,eax
   14004d0ca:	add    eax,DWORD PTR [rax]
   14004d0cc:	add    BYTE PTR [rax],al
   14004d0ce:	add    BYTE PTR [rax],al
   14004d0d0:	sbb    DWORD PTR [rcx],esp
   14004d0d2:	or     BYTE PTR [rax],al
   14004d0d4:	adc    dl,BYTE PTR [rdi+rcx*1+0x0]
   14004d0d8:	adc    dh,BYTE PTR [rsi+rcx*1]
   14004d0db:	add    BYTE PTR [rdx],dl
   14004d0dd:	jb     0x14004d0ed
   14004d0df:	loopne 0x14004d0ed
   14004d0e1:	jo     0x14004d0ee
   14004d0e3:	(bad)  
   14004d0e4:	cmp    al,0xe5
   14004d0e6:	add    al,BYTE PTR [rax]
   14004d0e8:	xor    BYTE PTR [rax],al
   14004d0ea:	add    BYTE PTR [rax],al
   14004d0ec:	add    DWORD PTR [rcx],ebx
   14004d0ee:	or     al,BYTE PTR [rax]
   14004d0f0:	sbb    DWORD PTR [rdi+rcx*1+0x0],esi
   14004d0f4:	sbb    DWORD PTR [rsi+rcx*1+0x0],esp
   14004d0f8:	sbb    DWORD PTR [rbp+rcx*1+0x0],edx
   14004d0fc:	sbb    DWORD PTR [rsp+rcx*1],esi
   14004d0ff:	add    BYTE PTR [rcx],bl
   14004d101:	xchg   edx,eax
   14004d102:	adc    eax,0x60f11e0
   14004d107:	add    BYTE PTR [rdi],cl
   14004d109:	or     DWORD PTR fs:[rax],eax
   14004d10c:	sysenter 
   14004d10e:	or     BYTE PTR [rax],al
   14004d110:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14004d113:	jo     0x14004d0d5
   14004d115:	xchg   ebx,eax
   14004d116:	add    al,BYTE PTR [rax]
   14004d118:	add    DWORD PTR [rax],eax
   14004d11a:	add    BYTE PTR [rax],al
   14004d11c:	fimul  DWORD PTR [rip+0xe4c0003]        # 0x14e50d125
   14004d122:	add    eax,DWORD PTR [rax]
   14004d124:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004d125:	rol    BYTE PTR [rbx],0x0
   14004d128:	add    BYTE PTR [rax],al
   14004d12a:	add    BYTE PTR [rax],al
   14004d12c:	adc    DWORD PTR [rcx],ebx
   14004d12e:	or     al,BYTE PTR [rax]
   14004d130:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   14004d134:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   14004d138:	sbb    DWORD PTR [rdx+rcx*1],esi
   14004d13b:	add    BYTE PTR [rcx],bl
   14004d13d:	push   rdx
   14004d13e:	adc    eax,0x11e013f0
   14004d143:	rol    al,1
   14004d145:	xchg   ebx,eax
   14004d146:	add    al,BYTE PTR [rax]
   14004d148:	add    al,BYTE PTR [rax]
   14004d14a:	add    BYTE PTR [rax],al
   14004d14c:	cwde   
   14004d14d:	lsl    eax,WORD PTR [rax]
   14004d150:	fmul   QWORD PTR [rdi]
   14004d152:	add    eax,DWORD PTR [rax]
   14004d154:	mov    esi,0x3c0
   14004d159:	add    BYTE PTR [rax],al
   14004d15b:	add    BYTE PTR [rbp+0xf],ah
   14004d15e:	add    eax,DWORD PTR [rax]
   14004d160:	cmc    
   14004d161:	lsl    eax,WORD PTR [rax]
   14004d164:	out    0xc0,al
   14004d166:	add    eax,DWORD PTR [rax]
   14004d168:	add    BYTE PTR [rax],al
   14004d16a:	add    BYTE PTR [rax],al
   14004d16c:	add    DWORD PTR [rip+0x64150006],edx        # 0x1a419d178
   14004d172:	adc    BYTE PTR [rax],al
   14004d174:	adc    eax,0x15000e34
   14004d179:	mov    dl,0x11
   14004d17b:	jo     0x14004d17d
   14004d17d:	add    BYTE PTR [rax],al
   14004d17f:	add    BYTE PTR [rcx],al
   14004d181:	add    al,0x1
   14004d183:	add    BYTE PTR [rdx+rdx*1],al
   14004d186:	add    BYTE PTR [rax],al
   14004d188:	add    DWORD PTR [rcx],ebx
   14004d18a:	or     al,BYTE PTR [rax]
   14004d18c:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   14004d190:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   14004d194:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   14004d198:	sbb    DWORD PTR [rdx+rcx*1],esi
   14004d19b:	add    BYTE PTR [rcx],bl
   14004d19d:	jb     0x14004d1b4
   14004d19f:	loopne 0x14004d1b2
   14004d1a1:	adc    eax,0x74150008
   14004d1a6:	or     BYTE PTR [rax],al
   14004d1a8:	adc    eax,0x15000764
   14004d1ad:	xor    al,0x6
   14004d1af:	add    BYTE PTR [rip+0xffffffffc0f01132],dl        # 0x100f4e2e7
   14004d1b5:	xchg   ebx,eax
   14004d1b6:	add    al,BYTE PTR [rax]
   14004d1b8:	add    DWORD PTR [rax],eax
   14004d1ba:	add    BYTE PTR [rax],al
   14004d1bc:	jnp    0x14004d1d3
   14004d1be:	add    eax,DWORD PTR [rax]
   14004d1c0:	cwde   
   14004d1c1:	adc    eax,0xc0ff0003
   14004d1c6:	add    eax,DWORD PTR [rax]
   14004d1c8:	add    BYTE PTR [rax],al
   14004d1ca:	add    BYTE PTR [rax],al
   14004d1cc:	add    DWORD PTR [rcx],ecx
   14004d1ce:	add    DWORD PTR [rax],eax
   14004d1d0:	or     DWORD PTR [rdx+0x0],esp
   14004d1d3:	add    BYTE PTR [rcx],al
   14004d1d5:	adc    cl,BYTE PTR [rax]
   14004d1d7:	add    BYTE PTR [rdx],dl
   14004d1d9:	push   rsp
   14004d1da:	or     DWORD PTR [rax],eax
   14004d1dc:	adc    dh,BYTE PTR [rax+rcx*1]
   14004d1df:	add    BYTE PTR [rdx],dl
   14004d1e1:	xor    cl,BYTE PTR [rsi]
   14004d1e3:	loopne 0x14004d1f1
   14004d1e5:	jo     0x14004d1f2
   14004d1e7:	(bad)  
   14004d1e8:	adc    DWORD PTR [rdi],ecx
   14004d1ea:	add    al,0x0
   14004d1ec:	sysenter 
   14004d1ee:	(bad)  
   14004d1ef:	add    BYTE PTR [rdi],cl
   14004d1f1:	xor    cl,BYTE PTR [rbx]
   14004d1f3:	jo     0x14004d1b5
   14004d1f5:	xchg   ebx,eax
   14004d1f6:	add    al,BYTE PTR [rax]
   14004d1f8:	add    DWORD PTR [rax],eax
   14004d1fa:	add    BYTE PTR [rax],al
   14004d1fc:	jmp    0x14004d217
   14004d1fe:	add    eax,DWORD PTR [rax]
   14004d200:	cmc    
   14004d201:	sbb    DWORD PTR [rbx],eax
   14004d203:	add    BYTE PTR [rbp+0x3c1],cl
   14004d209:	add    BYTE PTR [rax],al
   14004d20b:	add    BYTE PTR [rcx],dl
   14004d20d:	adc    DWORD PTR [rsi],eax
   14004d20f:	add    BYTE PTR [rcx],dl
   14004d211:	xor    al,0xa
   14004d213:	add    BYTE PTR [rcx],dl
   14004d215:	xor    cl,BYTE PTR [rip+0xa700be0]        # 0x14a74ddfb
   14004d21b:	(bad)  
   14004d21c:	rcl    BYTE PTR [rbx+0x10002],0x0
   14004d223:	add    BYTE PTR [rsi-0x35fffce6],al
   14004d229:	sbb    al,BYTE PTR [rbx]
   14004d22b:	add    BYTE PTR [rax],bl
   14004d22d:	rol    DWORD PTR [rbx],0x0
   14004d230:	add    BYTE PTR [rax],al
   14004d232:	add    BYTE PTR [rax],al
   14004d234:	add    DWORD PTR [rax],edx
   14004d236:	(bad)  
   14004d237:	add    BYTE PTR [rax],dl
   14004d239:	adc    DWORD PTR fs:[rax],eax
   14004d23c:	adc    BYTE PTR [rdx+0x7007e009],dh
   14004d242:	(bad)  
   14004d243:	push   rax
   14004d244:	adc    DWORD PTR [rcx],edx
   14004d246:	(bad)  
   14004d247:	add    BYTE PTR [rcx],dl
   14004d249:	xor    al,0xa
   14004d24b:	add    BYTE PTR [rcx],dl
   14004d24d:	xor    cl,BYTE PTR [rip+0xa700be0]        # 0x14a74de33
   14004d253:	(bad)  
   14004d254:	rcl    BYTE PTR [rbx+0x10002],0x0
   14004d25b:	add    BYTE PTR [rax-0x33fffce4],ch
   14004d261:	sbb    al,0x3
   14004d263:	add    BYTE PTR [rax],bl
   14004d265:	rol    DWORD PTR [rbx],0x0
	...
   14004d270:	add    DWORD PTR [rcx],eax
   14004d272:	add    DWORD PTR [rax],eax
   14004d274:	add    DWORD PTR [rax],esi
   14004d276:	add    BYTE PTR [rax],al
   14004d278:	add    DWORD PTR [rax],eax
   14004d27a:	add    BYTE PTR [rax],al
   14004d27c:	add    DWORD PTR [rcx],eax
   14004d27e:	add    DWORD PTR [rax],eax
   14004d280:	add    DWORD PTR [rax],esi
   14004d282:	add    BYTE PTR [rax],al
   14004d284:	add    DWORD PTR [rcx+rcx*1],edx
   14004d287:	add    BYTE PTR [rdx+riz*8],dl
   14004d28a:	or     eax,0x9e00bf0
   14004d28f:	rol    BYTE PTR [rdi],1
   14004d291:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14364d708
   14004d298:	add    dl,BYTE PTR [rax+0x0]
   14004d29b:	add    BYTE PTR [rcx],bl
   14004d29d:	xor    ecx,DWORD PTR [rbx]
   14004d29f:	add    BYTE PTR [rdx],ah
   14004d2a1:	je     0x14004d260
   14004d2a3:	add    BYTE PTR [rdx],ah
   14004d2a5:	fs mov esp,0xbb342200
   14004d2ab:	add    BYTE PTR [rdx],ah
   14004d2ad:	add    DWORD PTR [rsi+0x12f01400],esi
   14004d2b3:	loopne 0x14004d2c5
   14004d2b5:	push   rax
   14004d2b6:	add    BYTE PTR [rax],al
   14004d2b8:	cmp    al,0xe5
   14004d2ba:	add    al,BYTE PTR [rax]
   14004d2bc:	movabs al,ds:0x1800021809000005
   14004d2c5:	mov    dl,0x14
   14004d2c7:	xor    al,al
   14004d2c9:	xchg   ebx,eax
   14004d2ca:	add    al,BYTE PTR [rax]
   14004d2cc:	add    DWORD PTR [rax],eax
   14004d2ce:	add    BYTE PTR [rax],al
   14004d2d0:	mov    edi,0xdf000329
   14004d2d5:	sub    DWORD PTR [rbx],eax
   14004d2d7:	add    BYTE PTR [rdi],ch
   14004d2d9:	rol    DWORD PTR [rbx],0x0
   14004d2dc:	fild   QWORD PTR [rcx]
   14004d2de:	add    eax,DWORD PTR [rax]
   14004d2e0:	add    DWORD PTR [rsi],eax
   14004d2e2:	add    al,BYTE PTR [rax]
   14004d2e4:	(bad)  
   14004d2e5:	jb     0x14004d2e9
   14004d2e7:	push   rax
   14004d2e8:	add    DWORD PTR [rsi],edx
   14004d2ea:	or     al,BYTE PTR [rax]
   14004d2ec:	(bad)  
   14004d2ed:	push   rsp
   14004d2ee:	or     al,0x0
   14004d2f0:	(bad)  
   14004d2f1:	xor    al,0xb
   14004d2f3:	add    BYTE PTR [rsi],dl
   14004d2f5:	xor    dl,BYTE PTR [rdx]
   14004d2f7:	lock adc al,ah
   14004d2fa:	(bad)  
   14004d2fb:	ror    BYTE PTR [rax+rsi*2],0xb
   14004d2ff:	(bad)  
   14004d300:	add    DWORD PTR [rdi],ecx
   14004d302:	(bad)  
   14004d303:	add    BYTE PTR [rdi],cl
   14004d305:	fs or  al,0x0
   14004d308:	sysenter 
   14004d30a:	or     eax,DWORD PTR [rax]
   14004d30c:	(bad)  
   14004d30e:	or     esi,DWORD PTR [rax+0x1]
   14004d311:	add    al,0x1
   14004d313:	add    BYTE PTR [rdx+riz*2],al
   14004d316:	add    BYTE PTR [rax],al
   14004d318:	add    DWORD PTR [rcx],ebx
   14004d31a:	or     al,BYTE PTR [rax]
   14004d31c:	sbb    DWORD PTR [rsi+rcx*1+0x0],esi
   14004d320:	sbb    DWORD PTR [rbp+rcx*1+0x0],esp
   14004d324:	sbb    DWORD PTR [rsp+rcx*1],esi
   14004d327:	add    BYTE PTR [rcx],bl
   14004d329:	jb     0x14004d340
   14004d32b:	lock adc esp,eax
   14004d32e:	adc    eax,eax
   14004d330:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b421d342
   14004d336:	adc    DWORD PTR [rax],eax
   14004d338:	sbb    eax,0x1d001064
   14004d33d:	push   rsp
   14004d33e:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d04e179
   14004d345:	xchg   edx,eax
   14004d346:	sbb    eax,esi
   14004d348:	(bad)  
   14004d349:	loopne 0x14004d360
   14004d34b:	rcl    BYTE PTR [rcx],0x19
   14004d34e:	or     BYTE PTR [rax],al
   14004d350:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14004d354:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14004d358:	sbb    DWORD PTR [rsi+rax*1],esi
   14004d35b:	add    BYTE PTR [rcx],bl
   14004d35d:	xor    dl,BYTE PTR [rip+0x293c0e0]        # 0x142989443
   14004d363:	add    BYTE PTR [rcx],al
   14004d365:	add    BYTE PTR [rax],al
   14004d367:	add    BYTE PTR [rbx],bh
   14004d369:	xor    DWORD PTR [rbx],eax
   14004d36b:	add    BYTE PTR [rsi+0x31],ah
   14004d36e:	add    eax,DWORD PTR [rax]
   14004d370:	jne    0x14004d333
   14004d372:	add    eax,DWORD PTR [rax]
   14004d374:	add    BYTE PTR [rax],al
   14004d376:	add    BYTE PTR [rax],al
   14004d378:	adc    DWORD PTR [rdi],ecx
   14004d37a:	add    al,0x0
   14004d37c:	sysenter 
   14004d37e:	(bad)  
   14004d37f:	add    BYTE PTR [rdi],cl
   14004d381:	xor    cl,BYTE PTR [rbx]
   14004d383:	jo     0x14004d345
   14004d385:	xchg   ebx,eax
   14004d386:	add    al,BYTE PTR [rax]
   14004d388:	add    DWORD PTR [rax],eax
   14004d38a:	add    BYTE PTR [rax],al
   14004d38c:	mov    bh,0x34
   14004d38e:	add    eax,DWORD PTR [rax]
   14004d390:	ret    0x334
   14004d393:	add    BYTE PTR [rbp+0x3c1],cl
   14004d399:	add    BYTE PTR [rax],al
   14004d39b:	add    BYTE PTR [rcx],al
   14004d39d:	or     eax,0x340d0006
   14004d3a2:	or     BYTE PTR [rax],al
   14004d3a4:	or     eax,0x7e00932
   14004d3a9:	jo     0x14004d3b1
   14004d3ab:	(bad)  
   14004d3ac:	adc    DWORD PTR [rax],ebx
   14004d3ae:	or     BYTE PTR [rax],al
   14004d3b0:	sbb    BYTE PTR [rbp+rcx*1+0x0],ah
   14004d3b4:	sbb    BYTE PTR [rsp+rcx*1],dh
   14004d3b7:	add    BYTE PTR [rax],bl
   14004d3b9:	push   rdx
   14004d3ba:	adc    al,0xf0
   14004d3bc:	adc    ah,al
   14004d3be:	adc    BYTE PTR [rax-0x40],dh
   14004d3c1:	xchg   ebx,eax
   14004d3c2:	add    al,BYTE PTR [rax]
   14004d3c4:	add    DWORD PTR [rax],eax
   14004d3c6:	add    BYTE PTR [rax],al
   14004d3c8:	cmp    BYTE PTR [rip+0x356e0003],dh        # 0x17572d3d1
   14004d3ce:	add    eax,DWORD PTR [rax]
   14004d3d0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004d3d1:	rol    DWORD PTR [rbx],0x0
   14004d3d4:	add    BYTE PTR [rax],al
   14004d3d6:	add    BYTE PTR [rax],al
   14004d3d8:	adc    DWORD PTR [rdi],edx
   14004d3da:	or     BYTE PTR [rax],al
   14004d3dc:	(bad)  
   14004d3dd:	or     eax,DWORD PTR fs:[rax]
   14004d3e0:	(bad)  
   14004d3e1:	xor    al,0xa
   14004d3e3:	add    BYTE PTR [rdi],dl
   14004d3e5:	xor    dl,BYTE PTR [rbx]
   14004d3e7:	lock adc eax,esp
   14004d3ea:	pshufw mm0,mm0,0x93
   14004d3ee:	add    al,BYTE PTR [rax]
   14004d3f0:	add    DWORD PTR [rax],eax
   14004d3f2:	add    BYTE PTR [rax],al
   14004d3f4:	cmp    BYTE PTR [rsi],dh
   14004d3f6:	add    eax,DWORD PTR [rax]
   14004d3f8:	pop    rsi
   14004d3f9:	add    eax,DWORD PTR ss:[rax]
   14004d3fc:	sbb    cl,al
   14004d3fe:	add    eax,DWORD PTR [rax]
   14004d400:	add    BYTE PTR [rax],al
   14004d402:	add    BYTE PTR [rax],al
   14004d404:	add    DWORD PTR [rdx],ecx
   14004d406:	add    al,0x0
   14004d408:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   14004d40c:	add    eax,0x1000134
   14004d411:	sbb    DWORD PTR [rdx],ecx
   14004d413:	add    BYTE PTR [rcx],bl
   14004d415:	xor    al,0xd
   14004d417:	add    BYTE PTR [rcx],bl
   14004d419:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e4e80f
   14004d41f:	ror    BYTE PTR [rdi],1
   14004d421:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b64e098
   14004d428:	add    DWORD PTR [rdx],ecx
   14004d42a:	add    al,0x0
   14004d42c:	or     dh,BYTE PTR [rdx+rcx*1]
   14004d42f:	add    BYTE PTR [rdx],cl
   14004d431:	jb     0x14004d439
   14004d433:	jo     0x14004d44e
   14004d435:	sub    eax,0xc41f350d
   14004d43a:	ltr    WORD PTR [rbx]
   14004d43d:	je     0x14004d44d
   14004d43f:	add    BYTE PTR [rdi],dl
   14004d441:	fs or  eax,0xc341300
   14004d447:	add    BYTE PTR [rdi],cl
   14004d449:	xor    ecx,DWORD PTR [rdx]
   14004d44b:	jb     0x14004d453
   14004d44d:	lock add al,0xe0
   14004d450:	add    dl,BYTE PTR [rax+0x0]
   14004d453:	add    BYTE PTR [riz*8+0x300002],bh
   14004d45a:	add    BYTE PTR [rax],al
   14004d45c:	add    DWORD PTR [rbx],edx
   14004d45e:	add    DWORD PTR [rax],eax
   14004d460:	adc    esp,DWORD PTR [rdx+0x0]
   14004d463:	add    BYTE PTR [rcx],al
   14004d465:	adc    al,0x8
   14004d467:	add    BYTE PTR [rsp+riz*2],dl
   14004d46a:	(bad)  
   14004d46b:	add    BYTE PTR [rsp+rdx*2],dl
   14004d46e:	or     eax,0xc341400
   14004d473:	add    BYTE PTR [rdx+rdx*4],dl
   14004d476:	adc    BYTE PTR [rax+0x1],dh
   14004d479:	add    BYTE PTR [rax],al
   14004d47b:	add    BYTE PTR [rcx],al
   14004d47d:	sgdt   [rax]
   14004d480:	punpckldq mm0,DWORD PTR [rax]
   14004d483:	add    BYTE PTR [rcx],al
   14004d485:	sbb    ecx,DWORD PTR [rdx]
   14004d487:	add    BYTE PTR [rbx],bl
   14004d489:	je     0x14004d49b
   14004d48b:	add    BYTE PTR [rbx],bl
   14004d48d:	ltr    WORD PTR fs:[rbx]
   14004d491:	xor    al,0xe
   14004d493:	add    BYTE PTR [rbx],bl
   14004d495:	xchg   edx,eax
   14004d496:	adc    al,0xf0
   14004d498:	adc    ah,al
   14004d49a:	adc    BYTE PTR [rax+0x19],dl
   14004d49d:	adc    ecx,DWORD PTR [rcx]
   14004d49f:	add    BYTE PTR [rbx],dl
   14004d4a1:	add    DWORD PTR [rdx],edx
   14004d4a3:	add    BYTE PTR [rax+rsi*8],cl
   14004d4a6:	or     ah,al
   14004d4a8:	or     al,dl
   14004d4aa:	(bad)  
   14004d4ab:	rol    BYTE PTR [rax+rsi*2],0x3
   14004d4af:	(bad)  
   14004d4b0:	add    dh,BYTE PTR [rax]
   14004d4b2:	add    BYTE PTR [rax],al
   14004d4b4:	rcl    BYTE PTR [rbx+0x20002],0x0
   14004d4bb:	add    dl,ch
   14004d4bd:	push   rsp
   14004d4be:	add    eax,DWORD PTR [rax]
   14004d4c0:	andnps xmm0,XMMWORD PTR [rbx]
   14004d4c3:	add    BYTE PTR [rbp+0xf0003c1],bh
   14004d4c9:	push   rbp
   14004d4ca:	add    eax,DWORD PTR [rax]
   14004d4cc:	(bad)  
   14004d4cd:	push   rsp
   14004d4ce:	add    eax,DWORD PTR [rax]
   14004d4d0:	mov    dl,BYTE PTR [rbp+0x3]
   14004d4d3:	add    BYTE PTR [rcx+0x3c2],dh
   14004d4d9:	add    BYTE PTR [rax],al
   14004d4db:	add    BYTE PTR [rcx],al
   14004d4dd:	(bad)  
   14004d4de:	add    eax,DWORD PTR [rax]
   14004d4e0:	(bad)  
   14004d4e1:	rex.X add edx,DWORD PTR [rax+0x2]
   14004d4e5:	xor    BYTE PTR [rax],al
   14004d4e7:	add    BYTE PTR [rcx],al
   14004d4e9:	or     al,BYTE PTR [rax+rax*1]
   14004d4ec:	or     dh,BYTE PTR [rsi+rax*1]
   14004d4ef:	add    BYTE PTR [rdx],cl
   14004d4f1:	xor    al,BYTE PTR [rsi]
   14004d4f3:	jo     0x14004d50e
   14004d4f5:	and    cl,BYTE PTR [rax]
   14004d4f7:	add    BYTE PTR [rdx],ah
   14004d4f9:	push   rdx
   14004d4fa:	(bad)  
   14004d4fb:	lock sbb al,0xe0
   14004d4fe:	sbb    dl,al
   14004d500:	sbb    al,al
   14004d502:	(bad)  
   14004d503:	jo     0x14004d51a
   14004d505:	(bad)  
   14004d506:	adc    al,0x30
   14004d508:	rcl    BYTE PTR [rbx+0x20002],0x0
   14004d50f:	add    bl,ch
   14004d511:	push   rsi
   14004d512:	add    eax,DWORD PTR [rax]
   14004d514:	(bad)  
   14004d515:	push   rdi
   14004d516:	add    eax,DWORD PTR [rax]
   14004d518:	rex.RXB ret 
   14004d51a:	add    eax,DWORD PTR [rax]
   14004d51c:	(bad)  
   14004d51d:	push   rdi
   14004d51e:	add    eax,DWORD PTR [rax]
   14004d520:	mov    bl,0x56
   14004d522:	add    eax,DWORD PTR [rax]
   14004d524:	test   eax,0x5d000357
   14004d529:	ret    
   14004d52a:	add    eax,DWORD PTR [rax]
   14004d52c:	add    BYTE PTR [rax],al
   14004d52e:	add    BYTE PTR [rax],al
   14004d530:	add    DWORD PTR [rcx],esp
   14004d532:	or     eax,DWORD PTR [rax]
   14004d534:	and    DWORD PTR [rdi+rbx*1],esi
   14004d537:	add    BYTE PTR [rcx],ah
   14004d539:	add    DWORD PTR [rsi],edx
   14004d53b:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e4e931
   14004d541:	ror    BYTE PTR [rdi],1
   14004d543:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b64e1ba
   14004d54a:	add    BYTE PTR [rax],al
   14004d54c:	add    DWORD PTR [rdi],edx
   14004d54e:	or     al,BYTE PTR [rax]
   14004d550:	(bad)  
   14004d551:	push   rsp
   14004d552:	adc    al,BYTE PTR [rax]
   14004d554:	(bad)  
   14004d555:	xor    al,0x10
   14004d557:	add    BYTE PTR [rdi],dl
   14004d559:	xchg   edx,eax
   14004d55a:	adc    esi,eax
   14004d55c:	adc    eax,esp
   14004d55e:	xadd   BYTE PTR [rip+0x9600c70],cl        # 0x14964e1d5
   14004d565:	adc    eax,0x74150008
   14004d56a:	or     BYTE PTR [rax],al
   14004d56c:	adc    eax,0x15000764
   14004d571:	xor    al,0x6
   14004d573:	add    BYTE PTR [rip+0xffffffffc0e01132],dl        # 0x100e4e6ab
   14004d579:	xchg   ebx,eax
   14004d57a:	add    al,BYTE PTR [rax]
   14004d57c:	add    DWORD PTR [rax],eax
   14004d57e:	add    BYTE PTR [rax],al
   14004d580:	adc    BYTE PTR [rcx+0x3],0x0
   14004d584:	(bad)  
   14004d585:	push   rcx
   14004d586:	add    eax,DWORD PTR [rax]
   14004d588:	add    DWORD PTR [rax],eax
   14004d58a:	add    BYTE PTR [rax],al
   14004d58c:	(bad)  
   14004d58d:	push   rcx
   14004d58e:	add    eax,DWORD PTR [rax]
   14004d590:	add    DWORD PTR [rcx],ebx
   14004d592:	or     al,BYTE PTR [rax]
   14004d594:	sbb    DWORD PTR [rdi+rdx*1],esi
   14004d597:	add    BYTE PTR [rcx],bl
   14004d599:	rcl    BYTE PTR [rip+0x11e013f0],cl        # 0x151e4e98f
   14004d59f:	ror    BYTE PTR [rdi],1
   14004d5a1:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b64e218
   14004d5a8:	or     DWORD PTR [rip+0x420d0001],ecx        # 0x18211d5af
   14004d5ae:	add    BYTE PTR [rax],al
   14004d5b0:	rcl    BYTE PTR [rbx+0x10002],0x0
   14004d5b7:	add    ch,cl
   14004d5b9:	rex.RXB add r8d,DWORD PTR [r8]
   14004d5bc:	fiadd  WORD PTR [rdi+0x3]
   14004d5bf:	add    BYTE PTR [rdi],ch
   14004d5c1:	ret    
   14004d5c2:	add    eax,DWORD PTR [rax]
   14004d5c4:	loopne 0x14004d60d
   14004d5c6:	add    eax,DWORD PTR [rax]
   14004d5c8:	add    DWORD PTR [rsp+rcx*1],ebx
   14004d5cb:	add    BYTE PTR [rsp+riz*2],bl
   14004d5ce:	or     al,0x0
   14004d5d0:	sbb    al,0x54
   14004d5d2:	or     eax,DWORD PTR [rax]
   14004d5d4:	sbb    al,0x34
   14004d5d6:	or     al,BYTE PTR [rax]
   14004d5d8:	sbb    al,0x32
   14004d5da:	sbb    al,dh
   14004d5dc:	(bad)  
   14004d5dd:	loopne 0x14004d5f3
   14004d5df:	rcl    BYTE PTR [rdx],1
   14004d5e1:	rcl    BYTE PTR [rax],0x70
   14004d5e4:	add    DWORD PTR [rax],ebx
   14004d5e6:	or     al,BYTE PTR [rax]
   14004d5e8:	sbb    BYTE PTR [rsi+rcx*1+0x0],ah
   14004d5ec:	sbb    BYTE PTR [rbp+rcx*1+0x0],dl
   14004d5f0:	sbb    BYTE PTR [rsp+rcx*1],dh
   14004d5f3:	add    BYTE PTR [rax],bl
   14004d5f5:	jb     0x14004d60b
   14004d5f7:	loopne 0x14004d60b
   14004d5f9:	rcl    BYTE PTR [rax],0x70
   14004d5fc:	or     DWORD PTR [rcx],ebx
   14004d5fe:	or     al,BYTE PTR [rax]
   14004d600:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   14004d604:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   14004d608:	sbb    DWORD PTR [rdx+rcx*1],esi
   14004d60b:	add    BYTE PTR [rcx],bl
   14004d60d:	push   rdx
   14004d60e:	adc    eax,0x11e013f0
   14004d613:	rol    al,1
   14004d615:	xchg   ebx,eax
   14004d616:	add    al,BYTE PTR [rax]
   14004d618:	add    DWORD PTR [rax],eax
   14004d61a:	add    BYTE PTR [rax],al
   14004d61c:	cwde   
   14004d61d:	push   rdx
   14004d61e:	add    eax,DWORD PTR [rax]
   14004d620:	fist   WORD PTR [rbx+0x3]
   14004d623:	add    BYTE PTR [rcx],al
   14004d625:	add    BYTE PTR [rax],al
   14004d627:	add    bl,ah
   14004d629:	push   rbx
   14004d62a:	add    eax,DWORD PTR [rax]
   14004d62c:	add    DWORD PTR [rax],esp
   14004d62e:	or     al,0x0
   14004d630:	and    BYTE PTR [rbp+rcx*1+0x0],ah
   14004d634:	and    BYTE PTR [rbx+rcx*1+0x0],dl
   14004d638:	and    BYTE PTR [rdx+rcx*1],dh
   14004d63b:	add    BYTE PTR [rax],ah
   14004d63d:	xor    bl,BYTE PTR [rax+rsi*8]
   14004d640:	sbb    ah,al
   14004d642:	sbb    al,dl
   14004d644:	(bad)  
   14004d645:	rcl    BYTE PTR [rax+rsi*2],0x11
   14004d649:	(bad)  
   14004d64b:	add    BYTE PTR [rdi],cl
   14004d64d:	xor    al,0x6
   14004d64f:	add    BYTE PTR [rdi],cl
   14004d651:	xor    cl,BYTE PTR [rbx]
   14004d653:	jo     0x14004d615
   14004d655:	xchg   ebx,eax
   14004d656:	add    al,BYTE PTR [rax]
   14004d658:	add    DWORD PTR [rax],eax
   14004d65a:	add    BYTE PTR [rax],al
   14004d65c:	fwait
   14004d65d:	(bad)  
   14004d65e:	add    eax,DWORD PTR [rax]
   14004d660:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d661:	(bad)  
   14004d662:	add    eax,DWORD PTR [rax]
   14004d664:	jne    0x14004d627
   14004d666:	add    eax,DWORD PTR [rax]
   14004d668:	add    BYTE PTR [rax],al
   14004d66a:	add    BYTE PTR [rax],al
   14004d66c:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a208d673
   14004d672:	add    BYTE PTR [rax],al
   14004d674:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d675:	sub    al,0x3
   14004d677:	add    BYTE PTR [rax],cl
   14004d679:	push   rbp
   14004d67a:	add    al,0x0
	...
   14004d684:	add    DWORD PTR [rax],eax
   14004d686:	add    BYTE PTR [rax],al
   14004d688:	add    DWORD PTR [rax],eax
   14004d68a:	add    BYTE PTR [rax],al
   14004d68c:	nop
   14004d68d:	(bad)  
   14004d68e:	add    al,0x0
   14004d690:	add    BYTE PTR [rax],al
	...
   14004d69b:	add    BYTE PTR [rsi+0x380003c3],al
   14004d6a1:	add    BYTE PTR [rax],al
   14004d6a3:	add    BYTE PTR [rdx+riz*2-0xfffd],ah
   14004d6aa:	(bad)  
   14004d6ab:	push   QWORD PTR [rcx+0x362]
   14004d6b1:	add    BYTE PTR [rax],al
   14004d6b3:	add    BYTE PTR [rdi-0xfffc9e],dh
   14004d6b9:	(bad)  
   14004d6ba:	(bad)  
   14004d6bb:	inc    DWORD PTR [rsi+0x3c3]
   14004d6c1:	add    BYTE PTR [rax],al
   14004d6c3:	add    BYTE PTR [rbx+0x10003c3],dl
   14004d6c9:	add    BYTE PTR [rax],al
   14004d6cb:	add    BYTE PTR [rax+0x3c3],bl
   14004d6d1:	add    BYTE PTR [rax],al
   14004d6d3:	add    BYTE PTR [rcx],bl
   14004d6d5:	or     al,BYTE PTR [rdx]
   14004d6d7:	add    BYTE PTR [rdx],cl
   14004d6d9:	xor    al,BYTE PTR [rsi]
   14004d6db:	push   rax
   14004d6dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d6dd:	sub    al,0x3
   14004d6df:	add    BYTE PTR [rax],cl
   14004d6e1:	push   rbp
   14004d6e2:	add    al,0x0
   14004d6e4:	sbb    DWORD PTR [rax],esi
   14004d6e6:	or     eax,DWORD PTR [rax]
   14004d6e8:	(bad)  
   14004d6e9:	xor    al,0x82
   14004d6eb:	add    BYTE PTR [rdi],bl
   14004d6ed:	add    DWORD PTR [rax+0x0],edi
   14004d6f0:	adc    al,dh
   14004d6f2:	(bad)  
   14004d6f3:	loopne 0x14004d701
   14004d6f5:	ror    BYTE PTR [rdx],1
   14004d6f7:	ror    BYTE PTR [rax],0x70
   14004d6fa:	(bad)  
   14004d6fb:	(bad)  
   14004d6fc:	(bad)  
   14004d6fd:	push   rax
   14004d6fe:	add    BYTE PTR [rax],al
   14004d700:	cmp    al,0xe5
   14004d702:	add    al,BYTE PTR [rax]
   14004d704:	mov    al,0x3
   14004d706:	add    BYTE PTR [rax],al
   14004d708:	add    DWORD PTR [rdx],edx
   14004d70a:	(bad)  
   14004d70b:	add    BYTE PTR [rdx],dl
   14004d70d:	in     al,0x13
   14004d70f:	add    BYTE PTR [rdx],dl
   14004d711:	je     0x14004d724
   14004d713:	add    BYTE PTR [rdx],dl
   14004d715:	ror    BYTE PTR [rbx],cl
   14004d717:	push   rax
   14004d718:	add    DWORD PTR [rcx+rax*1],eax
   14004d71b:	add    BYTE PTR [rdx+rax*2],al
   14004d71e:	add    BYTE PTR [rax],al
   14004d720:	adc    DWORD PTR [rbx],ebx
   14004d722:	or     al,BYTE PTR [rax]
   14004d724:	sbb    esp,DWORD PTR [rsp+rcx*1+0x0]
   14004d728:	sbb    esi,DWORD PTR [rbx+rcx*1]
   14004d72b:	add    BYTE PTR [rbx],bl
   14004d72d:	xor    dl,BYTE PTR [rdi]
   14004d72f:	lock adc eax,0x11d013e0
   14004d735:	ror    BYTE PTR [rdi],0x70
   14004d738:	rcl    BYTE PTR [rbx+0x10002],0x0
   14004d73f:	add    al,dh
   14004d741:	jns    0x14004d746
   14004d743:	add    BYTE PTR [rdx],ah
   14004d745:	jp     0x14004d74a
   14004d747:	add    BYTE PTR [rsi+0x3c0],cl
   14004d74d:	add    BYTE PTR [rax],al
   14004d74f:	add    BYTE PTR [rcx],al
   14004d751:	sbb    al,0x9
   14004d753:	add    BYTE PTR [rdx+riz*4],bl
   14004d756:	adc    eax,0x11e013f0
   14004d75b:	ror    BYTE PTR [rdi],1
   14004d75d:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b64e3d4
   14004d764:	or     dl,BYTE PTR [rax+0x0]
   14004d767:	add    BYTE PTR [rcx],bl
   14004d769:	and    eax,0x5416000a
   14004d76e:	adc    DWORD PTR [rax],eax
   14004d770:	(bad)  
   14004d771:	xor    al,0x10
   14004d773:	add    BYTE PTR [rsi],dl
   14004d775:	jb     0x14004d789
   14004d777:	lock adc al,ah
   14004d77a:	(bad)  
   14004d77b:	ror    BYTE PTR [rax+rsi*2],1
   14004d77e:	or     esp,DWORD PTR [rax+0x3c]
   14004d781:	in     eax,0x2
   14004d783:	add    BYTE PTR [rax],dh
   14004d785:	add    BYTE PTR [rax],al
   14004d787:	add    BYTE PTR [rcx],al
   14004d789:	adc    eax,0x74150008
   14004d78e:	or     BYTE PTR [rax],al
   14004d790:	adc    eax,0x15000764
   14004d795:	xor    al,0x6
   14004d797:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e4e8cf
   14004d79d:	sub    BYTE PTR [rdx],cl
   14004d79f:	add    BYTE PTR [rdx],bl
   14004d7a1:	xor    al,0x1b
   14004d7a3:	add    BYTE PTR [rdx],bl
   14004d7a5:	repnz adc al,dh
   14004d7a8:	(bad)  
   14004d7a9:	loopne 0x14004d7b7
   14004d7ab:	ror    BYTE PTR [rdx],1
   14004d7ad:	ror    BYTE PTR [rax],0x70
   14004d7b0:	(bad)  
   14004d7b1:	(bad)  
   14004d7b2:	(bad)  
   14004d7b3:	push   rax
   14004d7b4:	cmp    al,0xe5
   14004d7b6:	add    al,BYTE PTR [rax]
   14004d7b8:	jo     0x14004d7ba
   14004d7ba:	add    BYTE PTR [rax],al
   14004d7bc:	add    DWORD PTR [rax+rcx*1],edx
   14004d7bf:	add    BYTE PTR [rsp+riz*2],dl
   14004d7c2:	or     al,0x0
   14004d7c4:	adc    al,0x54
   14004d7c6:	or     eax,DWORD PTR [rax]
   14004d7c8:	adc    al,0x34
   14004d7ca:	or     al,BYTE PTR [rax]
   14004d7cc:	adc    al,0x72
   14004d7ce:	adc    BYTE PTR [rax+0x11],dh
   14004d7d1:	or     al,0x1
   14004d7d3:	add    BYTE PTR [rdx+riz*1],al
   14004d7d6:	add    BYTE PTR [rax],al
   14004d7d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d7d9:	sub    al,0x3
   14004d7db:	add    BYTE PTR [rax],ah
   14004d7dd:	jge    0x14004d7e3
   14004d7df:	add    BYTE PTR [rax-0xfffbfb],cl
   14004d7e5:	(bad)  
   14004d7e6:	(bad)  
   14004d7e7:	call   QWORD PTR [rcx]
   14004d7e9:	or     al,0x1
   14004d7eb:	add    BYTE PTR [rdx+riz*1],al
   14004d7ee:	add    BYTE PTR [rax],al
   14004d7f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d7f1:	sub    al,0x3
   14004d7f3:	add    BYTE PTR [rax+0x7d],dl
   14004d7f6:	add    al,0x0
   14004d7f8:	(bad)  
   14004d7f9:	(bad)  
   14004d7fa:	(bad)  
   14004d7fb:	call   FWORD PTR [rdx-0x3c]
   14004d7fe:	add    eax,DWORD PTR [rax]
   14004d800:	(bad)  
   14004d801:	(bad)  
   14004d802:	(bad)  
   14004d803:	jmp    QWORD PTR [rsi-0x3c]
   14004d806:	add    eax,DWORD PTR [rax]
   14004d808:	push   0xffffffffff000405
   14004d80d:	(bad)  
   14004d80e:	(bad)  
   14004d80f:	call   QWORD PTR [rcx]
   14004d811:	or     al,0x1
   14004d813:	add    BYTE PTR [rdx+riz*1],al
   14004d816:	add    BYTE PTR [rax],al
   14004d818:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d819:	sub    al,0x3
   14004d81b:	add    BYTE PTR [rax-0xfffb83],al
   14004d821:	(bad)  
   14004d822:	(bad)  
   14004d823:	push   QWORD PTR [rdx-0x3c]
   14004d826:	add    eax,DWORD PTR [rax]
   14004d828:	(bad)  
   14004d829:	(bad)  
   14004d82a:	(bad)  
   14004d82b:	(bad)  
   14004d82c:	jle    0x14004d7f2
   14004d82e:	add    eax,DWORD PTR [rax]
   14004d830:	add    rax,0xffffffffffff0004
   14004d836:	(bad)  
   14004d837:	call   QWORD PTR [rcx]
   14004d839:	or     eax,0x62040001
   14004d83e:	add    BYTE PTR [rax],al
   14004d840:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d841:	sub    al,0x3
   14004d843:	add    BYTE PTR [rax-0xfffb83],dh
   14004d849:	(bad)  
   14004d84a:	(bad)  
   14004d84b:	push   QWORD PTR [rsi]
   14004d84d:	(bad)
   14004d851:	(bad)  
   14004d852:	(bad)  
   14004d853:	inc    DWORD PTR [rdx-0x3c]
   14004d856:	add    eax,DWORD PTR [rax]
   14004d858:	je     0x14004d85c
   14004d85a:	add    al,0x0
   14004d85c:	(bad)  
   14004d85d:	(bad)  
   14004d85e:	(bad)  
   14004d85f:	inc    DWORD PTR [rcx+0x402]
   14004d865:	add    BYTE PTR [rax],al
   14004d867:	add    BYTE PTR [rdi+0x1000402],cl
   14004d86d:	add    BYTE PTR [rax],al
   14004d86f:	add    BYTE PTR [rbp-0xfffbfe],bl
   14004d875:	(bad)  
   14004d876:	(bad)  
   14004d877:	call   QWORD PTR [rcx]
   14004d879:	or     eax,0x62040001
   14004d87e:	add    BYTE PTR [rax],al
   14004d880:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d881:	sub    al,0x3
   14004d883:	add    al,ah
   14004d885:	jge    0x14004d88b
   14004d887:	add    bh,bh
   14004d889:	(bad)  
   14004d88a:	(bad)  
   14004d88b:	call   FWORD PTR [rsi]
   14004d88d:	(bad)
   14004d891:	(bad)  
   14004d892:	(bad)  
   14004d893:	jmp    FWORD PTR [rdx]
   14004d895:	(bad)
   14004d899:	add    al,BYTE PTR [rax+rax*1]
   14004d89c:	(bad)  
   14004d89d:	(bad)  
   14004d89e:	(bad)  
   14004d89f:	inc    DWORD PTR [rbp+0x2]
   14004d8a2:	add    al,0x0
   14004d8a4:	add    BYTE PTR [rax],al
   14004d8a6:	add    BYTE PTR [rax],al
   14004d8a8:	push   rbx
   14004d8a9:	add    al,BYTE PTR [rax+rax*1]
   14004d8ac:	add    DWORD PTR [rax],eax
   14004d8ae:	add    BYTE PTR [rax],al
   14004d8b0:	(bad)  
   14004d8b1:	add    al,BYTE PTR [rax+rax*1]
   14004d8b4:	(bad)  
   14004d8b5:	(bad)  
   14004d8b6:	(bad)  
   14004d8b7:	call   QWORD PTR [rcx]
   14004d8b9:	or     eax,0x62040001
   14004d8be:	add    BYTE PTR [rax],al
   14004d8c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d8c1:	sub    al,0x3
   14004d8c3:	add    BYTE PTR [rax],dl
   14004d8c5:	jle    0x14004d8cb
   14004d8c7:	add    bh,bh
   14004d8c9:	(bad)  
   14004d8ca:	(bad)  
   14004d8cb:	dec    DWORD PTR [rsi-0x3c]
   14004d8ce:	add    eax,DWORD PTR [rax]
   14004d8d0:	or     al,0x2
   14004d8d2:	add    al,0x0
   14004d8d4:	(bad)  
   14004d8d5:	(bad)  
   14004d8d6:	(bad)  
   14004d8d7:	call   FWORD PTR [rcx]
   14004d8d9:	add    al,BYTE PTR [rax+rax*1]
   14004d8dc:	add    BYTE PTR [rax],al
   14004d8de:	add    BYTE PTR [rax],al
   14004d8e0:	(bad)  
   14004d8e1:	add    al,BYTE PTR [rax+rax*1]
   14004d8e4:	(bad)  
   14004d8e5:	(bad)  
   14004d8e6:	(bad)  
   14004d8e7:	call   FWORD PTR [rcx]
   14004d8e9:	and    BYTE PTR [rip+0x14621800],al        # 0x15466f0ef
   14004d8ef:	loopne 0x14004d903
   14004d8f1:	jo     0x14004d904
   14004d8f3:	(bad)  
   14004d8f4:	adc    BYTE PTR [rax],dh
   14004d8f6:	add    BYTE PTR [rax],al
   14004d8f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d8f9:	sub    al,0x3
   14004d8fb:	add    BYTE PTR [rax+0x7e],al
   14004d8fe:	add    al,0x0
   14004d900:	(bad)  
   14004d901:	(bad)  
   14004d902:	(bad)  
   14004d903:	inc    DWORD PTR [rax]
   14004d905:	add    BYTE PTR [rax],al
   14004d907:	add    bh,bh
   14004d909:	(bad)  
   14004d90a:	(bad)  
   14004d90b:	inc    DWORD PTR [rax]
   14004d90d:	add    BYTE PTR [rax],al
   14004d90f:	add    BYTE PTR [rcx],al
   14004d911:	add    BYTE PTR [rax],al
   14004d913:	add    BYTE PTR [rax],al
   14004d915:	add    BYTE PTR [rax],al
   14004d917:	add    BYTE PTR [rcx],al
   14004d919:	add    BYTE PTR [rax],al
   14004d91b:	add    BYTE PTR [rax],al
   14004d91d:	add    BYTE PTR [rax],al
   14004d91f:	add    bh,bh
   14004d921:	(bad)  
   14004d922:	(bad)  
   14004d923:	(bad)  
   14004d924:	ffreep st(7)
   14004d926:	add    eax,DWORD PTR [rax]
	...
   14004d930:	add    eax,DWORD PTR [rax]
   14004d932:	add    BYTE PTR [rax],al
   14004d934:	add    DWORD PTR [rax],eax
   14004d936:	add    BYTE PTR [rax],al
   14004d938:	push   rax
   14004d939:	fld    DWORD PTR [rax+rax*1]
   14004d93c:	add    al,BYTE PTR [rax]
   14004d93e:	add    BYTE PTR [rax],al
   14004d940:	add    al,BYTE PTR [rax]
   14004d942:	add    BYTE PTR [rax],al
   14004d944:	add    eax,DWORD PTR [rax]
   14004d946:	add    BYTE PTR [rax],al
   14004d948:	add    DWORD PTR [rax],eax
   14004d94a:	add    BYTE PTR [rax],al
   14004d94c:	fld    DWORD PTR fs:[rax+rax*1]
	...
   14004d95c:	pop    rsp
   14004d95d:	mov    DWORD PTR [rbx],0x3800
	...
   14004d96f:	add    BYTE PTR [rdi+rax*8+0x480003],ah
   14004d976:	add    BYTE PTR [rax],al
   14004d978:	cmp    al,0x3e
   14004d97a:	add    BYTE PTR [rax],al
   14004d97c:	(bad)  
   14004d97d:	(bad)  
   14004d97e:	(bad)  
   14004d97f:	jmp    FWORD PTR [rbx+0x3e]
   14004d985:	add    BYTE PTR [rax],al
   14004d987:	add    ah,dl
   14004d989:	add    BYTE PTR ds:[rax],al
   14004d98c:	(bad)  
   14004d98d:	(bad)  
   14004d98e:	(bad)  
   14004d98f:	push   QWORD PTR [rdi]
   14004d991:	(bad)  
   14004d992:	add    BYTE PTR [rax],al
   14004d994:	add    al,0x0
   14004d996:	add    BYTE PTR [rax],al
   14004d998:	cmp    bh,BYTE PTR [rdi]
   14004d99a:	add    BYTE PTR [rax],al
   14004d99c:	(bad)  
   14004d99d:	(bad)  
   14004d99e:	(bad)  
   14004d99f:	call   FWORD PTR [rdi+rax*8+0x3]
   14004d9a3:	add    BYTE PTR [rax],al
   14004d9a5:	add    BYTE PTR [rax],al
   14004d9a7:	add    BYTE PTR [rcx-0x39],ch
   14004d9aa:	add    eax,DWORD PTR [rax]
   14004d9ac:	add    DWORD PTR [rax],eax
   14004d9ae:	add    BYTE PTR [rax],al
   14004d9b0:	jno    0x14004d979
   14004d9b2:	add    eax,DWORD PTR [rax]
   14004d9b4:	add    al,BYTE PTR [rax]
   14004d9b6:	add    BYTE PTR [rax],al
   14004d9b8:	mov    es,edi
   14004d9ba:	add    eax,DWORD PTR [rax]
   14004d9bc:	add    BYTE PTR [rax],al
   14004d9be:	add    BYTE PTR [rax],al
   14004d9c0:	xchg   edi,eax
   14004d9c1:	mov    DWORD PTR [rbx],0x200
   14004d9c7:	add    BYTE PTR [rbp+0x3c7],bl
   14004d9cd:	add    BYTE PTR [rax],al
   14004d9cf:	add    BYTE PTR [rdx+0x30003c7],dh
   14004d9d5:	add    BYTE PTR [rax],al
   14004d9d7:	add    BYTE PTR [rcx],bl
   14004d9d9:	or     al,BYTE PTR [rdx]
   14004d9db:	add    BYTE PTR [rdx],cl
   14004d9dd:	xor    al,BYTE PTR [rsi]
   14004d9df:	push   rax
   14004d9e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d9e1:	sub    al,0x3
   14004d9e3:	add    BYTE PTR [rax+0x7e],al
   14004d9e6:	add    al,0x0
   14004d9e8:	sbb    DWORD PTR [rbx],ecx
   14004d9ea:	add    eax,DWORD PTR [rax]
   14004d9ec:	or     eax,DWORD PTR [rdx+0x7]
   14004d9ef:	push   rax
   14004d9f0:	(bad)  
   14004d9f1:	xor    BYTE PTR [rax],al
   14004d9f3:	add    BYTE PTR [rsp+rbp*1+0x7e400003],ah
   14004d9fa:	add    al,0x0
   14004d9fc:	sbb    DWORD PTR [rip+0x741d0008],ebx        # 0x1b421da0a
   14004da02:	or     eax,DWORD PTR [rax]
   14004da04:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   14004da08:	adc    eax,0x9000834
   14004da0d:	push   rdx
   14004da0e:	add    eax,0x32ca4e0
   14004da13:	add    BYTE PTR [rax+0x7e],dh
   14004da16:	add    al,0x0
	...
   14004da20:	add    DWORD PTR [rax],eax
   14004da22:	add    BYTE PTR [rax],al
   14004da24:	add    DWORD PTR [rax],eax
   14004da26:	add    BYTE PTR [rax],al
   14004da28:	sub    al,0xda
   14004da2a:	add    al,0x0
	...
   14004da38:	test   al,0xc8
   14004da3a:	add    eax,DWORD PTR [rax]
   14004da3c:	cmp    BYTE PTR [rax],al
   14004da3e:	add    BYTE PTR [rax],al
   14004da40:	add    BYTE PTR [rip+0xffffffffffff0000],bh        # 0x14003da46
   14004da46:	(bad)  
   14004da47:	call   QWORD PTR [rax+0x3d]
   14004da4a:	add    BYTE PTR [rax],al
   14004da4c:	add    BYTE PTR [rax],al
   14004da4e:	add    BYTE PTR [rax],al
   14004da50:	movsxd edi,DWORD PTR [rip+0xffffffffffff0000]        # 0x14003da56
   14004da56:	(bad)  
   14004da57:	jmp    FWORD PTR [rax+0x3c8]
   14004da5d:	add    BYTE PTR [rax],al
   14004da5f:	add    BYTE PTR [rbp+0x10003c8],dh
   14004da65:	add    BYTE PTR [rax],al
   14004da67:	add    BYTE PTR [rcx],bl
   14004da69:	or     al,BYTE PTR [rdx]
   14004da6b:	add    BYTE PTR [rdx],cl
   14004da6d:	xor    al,BYTE PTR [rsi]
   14004da6f:	push   rax
   14004da70:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004da71:	sub    al,0x3
   14004da73:	add    BYTE PTR [rax+0x7e],dh
   14004da76:	add    al,0x0
   14004da78:	sbb    DWORD PTR [rip+0x741d0008],ebx        # 0x1b421da86
   14004da7e:	or     eax,DWORD PTR [rax]
   14004da80:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   14004da84:	adc    eax,0x9000834
   14004da89:	push   rdx
   14004da8a:	add    eax,0x32ca4e0
   14004da8f:	add    BYTE PTR [rax+0x47e],ah
   14004da95:	add    BYTE PTR [rax],al
   14004da97:	add    BYTE PTR [rax],al
   14004da99:	add    BYTE PTR [rax],al
   14004da9b:	add    BYTE PTR [rcx],al
   14004da9d:	add    BYTE PTR [rax],al
   14004da9f:	add    BYTE PTR [rcx],al
   14004daa1:	add    BYTE PTR [rax],al
   14004daa3:	add    BYTE PTR [rax+0x4da],ch
	...
   14004dab1:	add    BYTE PTR [rax],al
   14004dab3:	add    al,cl
   14004dab5:	enter  0x3,0x38
   14004dab9:	add    BYTE PTR [rax],al
   14004dabb:	add    BYTE PTR [rsp+rdi*1+0x0],cl
   14004dabf:	add    bh,bh
   14004dac1:	(bad)  
   14004dac2:	(bad)  
   14004dac3:	jmp    QWORD PTR [rsi+0x3c]
   14004dac9:	add    BYTE PTR [rax],al
   14004dacb:	add    BYTE PTR [rdi-0xffffc4],bh
   14004dad1:	(bad)  
   14004dad2:	(bad)  
   14004dad3:	dec    eax
   14004dad5:	enter  0x3,0x0
   14004dad9:	add    BYTE PTR [rax],al
   14004dadb:	add    ch,dl
   14004dadd:	enter  0x3,0x1
   14004dae1:	add    BYTE PTR [rax],al
   14004dae3:	add    BYTE PTR [rcx],bl
   14004dae5:	or     al,BYTE PTR [rdx]
   14004dae7:	add    BYTE PTR [rdx],cl
   14004dae9:	xor    al,BYTE PTR [rsi]
   14004daeb:	push   rax
   14004daec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004daed:	sub    al,0x3
   14004daef:	add    BYTE PTR [rax+0x1900047e],ah
   14004daf5:	and    al,BYTE PTR [rsi]
   14004daf7:	add    BYTE PTR [rdx],bl
   14004daf9:	push   rdx
   14004dafa:	(bad)  
   14004dafb:	lock adc al,0xe0
   14004dafe:	adc    dh,BYTE PTR [rax+0x11]
   14004db01:	(bad)  
   14004db02:	adc    BYTE PTR [rax],dh
   14004db04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004db05:	sub    al,0x3
   14004db07:	add    al,dl
   14004db09:	jle    0x14004db0f
   14004db0b:	add    bh,bh
   14004db0d:	(bad)  
   14004db0e:	(bad)  
   14004db0f:	inc    DWORD PTR [rax]
   14004db11:	add    BYTE PTR [rax],al
   14004db13:	add    bh,bh
   14004db15:	(bad)  
   14004db16:	(bad)  
   14004db17:	inc    DWORD PTR [rax]
   14004db19:	add    BYTE PTR [rax],al
   14004db1b:	add    BYTE PTR [rcx],al
   14004db1d:	add    BYTE PTR [rax],al
   14004db1f:	add    BYTE PTR [rax],al
   14004db21:	add    BYTE PTR [rax],al
   14004db23:	add    BYTE PTR [rcx],al
   14004db25:	add    BYTE PTR [rax],al
   14004db27:	add    BYTE PTR [rax],al
   14004db29:	add    BYTE PTR [rax],al
   14004db2b:	add    bh,bh
   14004db2d:	(bad)  
   14004db2e:	(bad)  
   14004db2f:	dec    DWORD PTR [rax+rcx*8+0x3]
   14004db36:	add    BYTE PTR [rax],al
   14004db38:	add    BYTE PTR [rax],al
   14004db3a:	add    BYTE PTR [rax],al
   14004db3c:	add    eax,DWORD PTR [rax]
   14004db3e:	add    BYTE PTR [rax],al
   14004db40:	add    DWORD PTR [rax],eax
   14004db42:	add    BYTE PTR [rax],al
   14004db44:	pop    rsp
   14004db45:	fild   DWORD PTR [rax+rax*1]
   14004db48:	add    al,BYTE PTR [rax]
   14004db4a:	add    BYTE PTR [rax],al
   14004db4c:	add    al,BYTE PTR [rax]
   14004db4e:	add    BYTE PTR [rax],al
   14004db50:	add    eax,DWORD PTR [rax]
   14004db52:	add    BYTE PTR [rax],al
   14004db54:	add    DWORD PTR [rax],eax
   14004db56:	add    BYTE PTR [rax],al
   14004db58:	jo     0x14004db35
   14004db5a:	add    al,0x0
	...
   14004db68:	sti    
   14004db69:	mov    DWORD PTR [rbx],0x3800
	...
   14004db7b:	add    BYTE PTR [rdi-0x38],cl
   14004db7e:	add    eax,DWORD PTR [rax]
   14004db80:	rex.W add BYTE PTR [rax],al
   14004db83:	add    BYTE PTR [rbx+rdi*1],dl
   14004db86:	add    BYTE PTR [rax],al
   14004db88:	(bad)  
   14004db89:	(bad)  
   14004db8a:	(bad)  
   14004db8b:	dec    DWORD PTR [rax+0x3b]
   14004db91:	add    BYTE PTR [rax],al
   14004db93:	add    BYTE PTR [rdi-0xffffc5],bh
   14004db99:	(bad)  
   14004db9a:	(bad)  
   14004db9b:	jmp    QWORD PTR [rsp+rdi*1]
   14004db9e:	add    BYTE PTR [rax],al
   14004dba0:	add    al,0x0
   14004dba2:	add    BYTE PTR [rax],al
   14004dba4:	(bad)  
   14004dba5:	cmp    al,0x0
   14004dba7:	add    bh,bh
   14004dba9:	(bad)  
   14004dbaa:	(bad)  
   14004dbab:	(bad)  
   14004dbac:	sti    
   14004dbad:	mov    DWORD PTR [rbx],0x0
   14004dbb3:	add    BYTE PTR [rax],cl
   14004dbb5:	enter  0x3,0x1
   14004dbb9:	add    BYTE PTR [rax],al
   14004dbbb:	add    BYTE PTR [rax],dl
   14004dbbd:	enter  0x3,0x2
   14004dbc1:	add    BYTE PTR [rax],al
   14004dbc3:	add    BYTE PTR [rcx],bh
   14004dbc5:	enter  0x3,0x0
   14004dbc9:	add    BYTE PTR [rax],al
   14004dbcb:	add    BYTE PTR [rdx-0x38],al
   14004dbce:	add    eax,DWORD PTR [rax]
   14004dbd0:	add    al,BYTE PTR [rax]
   14004dbd2:	add    BYTE PTR [rax],al
   14004dbd4:	rex.W enter 0x3,0x0
   14004dbd9:	add    BYTE PTR [rax],al
   14004dbdb:	add    BYTE PTR [rbp-0x38],bl
   14004dbde:	add    eax,DWORD PTR [rax]
   14004dbe0:	add    eax,DWORD PTR [rax]
   14004dbe2:	add    BYTE PTR [rax],al
   14004dbe4:	sbb    DWORD PTR [rdx],ecx
   14004dbe6:	add    al,BYTE PTR [rax]
   14004dbe8:	or     dh,BYTE PTR [rdx]
   14004dbea:	(bad)  
   14004dbeb:	push   rax
   14004dbec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004dbed:	sub    al,0x3
   14004dbef:	add    al,dl
   14004dbf1:	jle    0x14004dbf7
   14004dbf3:	add    BYTE PTR [rcx],bl
   14004dbf5:	or     eax,DWORD PTR [rbx]
   14004dbf7:	add    BYTE PTR [rbx],cl
   14004dbf9:	rex.X (bad) 
   14004dbfb:	push   rax
   14004dbfc:	(bad)  
   14004dbfd:	xor    BYTE PTR [rax],al
   14004dbff:	add    BYTE PTR [rsp+rbp*1+0x7ed00003],ah
   14004dc06:	add    al,0x0
   14004dc08:	add    DWORD PTR [rsi],eax
   14004dc0a:	add    al,BYTE PTR [rax]
   14004dc0c:	(bad)  
   14004dc0d:	xor    al,BYTE PTR [rdx]
   14004dc0f:	push   rax
   14004dc10:	sbb    DWORD PTR [rip+0x741d0008],ebx        # 0x1b421dc1e
   14004dc16:	or     eax,DWORD PTR [rax]
   14004dc18:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   14004dc1c:	adc    eax,0x9000834
   14004dc21:	push   rdx
   14004dc22:	add    eax,0x32ca4e0
   14004dc27:	add    BYTE PTR [rax],al
   14004dc29:	jg     0x14004dc2f
	...
   14004dc33:	add    BYTE PTR [rcx],al
   14004dc35:	add    BYTE PTR [rax],al
   14004dc37:	add    BYTE PTR [rcx],al
   14004dc39:	add    BYTE PTR [rax],al
   14004dc3b:	add    BYTE PTR [rax-0x24],al
   14004dc3e:	add    al,0x0
	...
   14004dc4c:	call   0x17804e019
   14004dc51:	add    BYTE PTR [rax],al
   14004dc53:	add    al,bh
   14004dc55:	(bad)  
   14004dc56:	add    BYTE PTR [rax],al
   14004dc58:	(bad)  
   14004dc59:	(bad)  
   14004dc5a:	(bad)  
   14004dc5b:	call   QWORD PTR [rbp+0x38]
   14004dc5e:	add    BYTE PTR [rax],al
   14004dc60:	add    BYTE PTR [rax],al
   14004dc62:	add    BYTE PTR [rax],al
   14004dc64:	ins    BYTE PTR es:[rdi],dx
   14004dc65:	cmp    BYTE PTR [rax],al
   14004dc67:	add    bh,bh
   14004dc69:	(bad)  
   14004dc6a:	(bad)  
   14004dc6b:	(bad)  
   14004dc6c:	call   0x14004e039
   14004dc71:	add    BYTE PTR [rax],al
   14004dc73:	add    ch,dh
   14004dc75:	enter  0x3,0x1
   14004dc79:	add    BYTE PTR [rax],al
   14004dc7b:	add    BYTE PTR [rcx],bl
   14004dc7d:	or     al,BYTE PTR [rdx]
   14004dc7f:	add    BYTE PTR [rdx],cl
   14004dc81:	xor    al,BYTE PTR [rsi]
   14004dc83:	push   rax
   14004dc84:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004dc85:	sub    al,0x3
   14004dc87:	add    BYTE PTR [rax],al
   14004dc89:	jg     0x14004dc8f
   14004dc8b:	add    BYTE PTR [rcx],bl
   14004dc8d:	sbb    al,0x6
   14004dc8f:	add    BYTE PTR [rsp+riz*2],bl
   14004dc92:	or     al,BYTE PTR [rax]
   14004dc94:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004dc97:	add    BYTE PTR [rdx+rdx*2],cl
   14004dc9a:	or     BYTE PTR [rax-0x5c],dh
   14004dc9d:	sub    al,0x3
   14004dc9f:	add    BYTE PTR [rax],dh
   14004dca1:	jg     0x14004dca7
	...
   14004dcab:	add    BYTE PTR [rcx],al
   14004dcad:	add    BYTE PTR [rax],al
   14004dcaf:	add    BYTE PTR [rcx],al
   14004dcb1:	add    BYTE PTR [rax],al
   14004dcb3:	add    BYTE PTR [rax+0x4dc],bh
	...
   14004dcc1:	add    BYTE PTR [rax],al
   14004dcc3:	add    BYTE PTR [rsi],ch
   14004dcc5:	leave  
   14004dcc6:	add    eax,DWORD PTR [rax]
   14004dcc8:	rex.W add BYTE PTR [rax],al
   14004dccb:	add    ah,al
   14004dccd:	xor    al,0x0
   14004dccf:	add    bh,bh
   14004dcd1:	(bad)  
   14004dcd2:	(bad)  
   14004dcd3:	call   QWORD PTR [rbp+rsi*1+0x0]
   14004dcda:	add    BYTE PTR [rax],al
   14004dcdc:	test   eax,0xff000035
   14004dce1:	(bad)  
   14004dce2:	(bad)  
   14004dce3:	jmp    FWORD PTR [rsi]
   14004dce5:	leave  
   14004dce6:	add    eax,DWORD PTR [rax]
   14004dce8:	add    BYTE PTR [rax],al
   14004dcea:	add    BYTE PTR [rax],al
   14004dcec:	cmp    al,0xc9
   14004dcee:	add    eax,DWORD PTR [rax]
   14004dcf0:	add    DWORD PTR [rax],eax
   14004dcf2:	add    BYTE PTR [rax],al
   14004dcf4:	sbb    DWORD PTR [rbx],ecx
   14004dcf6:	add    eax,DWORD PTR [rax]
   14004dcf8:	or     eax,DWORD PTR [rdx+0x7]
   14004dcfb:	push   rax
   14004dcfc:	(bad)  
   14004dcfd:	xor    BYTE PTR [rax],al
   14004dcff:	add    BYTE PTR [rsp+rbp*1+0x7f300003],ah
   14004dd06:	add    al,0x0
   14004dd08:	sbb    DWORD PTR [rsi+rax*1],ebx
   14004dd0b:	add    BYTE PTR [rsp+riz*2],bl
   14004dd0e:	or     al,0x0
   14004dd10:	sbb    BYTE PTR [rbx+rcx*1],dh
   14004dd13:	add    BYTE PTR [rdx+rsi*2],cl
   14004dd16:	or     BYTE PTR [rax-0x5c],dh
   14004dd19:	sub    al,0x3
   14004dd1b:	add    BYTE PTR [rax+0x7f],ah
   14004dd1e:	add    al,0x0
	...
   14004dd28:	add    DWORD PTR [rax],eax
   14004dd2a:	add    BYTE PTR [rax],al
   14004dd2c:	add    DWORD PTR [rax],eax
   14004dd2e:	add    BYTE PTR [rax],al
   14004dd30:	xor    al,0xdd
   14004dd32:	add    al,0x0
	...
   14004dd40:	gs leave 
   14004dd42:	add    eax,DWORD PTR [rax]
   14004dd44:	rex.W add BYTE PTR [rax],al
   14004dd47:	add    BYTE PTR [rbx+rsi*1+0x0],bh
   14004dd4b:	add    bh,bh
   14004dd4d:	(bad)  
   14004dd4e:	(bad)  
   14004dd4f:	jmp    FWORD PTR [rsp+rsi*1+0x0]
   14004dd53:	add    BYTE PTR [rax],al
   14004dd55:	add    BYTE PTR [rax],al
   14004dd57:	add    BYTE PTR [rdx-0xffffcc],bl
   14004dd5d:	(bad)  
   14004dd5e:	(bad)  
   14004dd5f:	jmp    QWORD PTR [rbp-0x37]
   14004dd62:	add    eax,DWORD PTR [rax]
   14004dd64:	add    BYTE PTR [rax],al
   14004dd66:	add    BYTE PTR [rax],al
   14004dd68:	jae    0x14004dd33
   14004dd6a:	add    eax,DWORD PTR [rax]
   14004dd6c:	add    DWORD PTR [rax],eax
   14004dd6e:	add    BYTE PTR [rax],al
   14004dd70:	sbb    DWORD PTR [rbx],ecx
   14004dd72:	add    eax,DWORD PTR [rax]
   14004dd74:	or     eax,DWORD PTR [rdx+0x7]
   14004dd77:	push   rax
   14004dd78:	(bad)  
   14004dd79:	xor    BYTE PTR [rax],al
   14004dd7b:	add    BYTE PTR [rsp+rbp*1+0x7f600003],ah
   14004dd82:	add    al,0x0
   14004dd84:	add    DWORD PTR [rcx],ebx
   14004dd86:	or     al,BYTE PTR [rax]
   14004dd88:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14004dd8c:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14004dd90:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14004dd94:	sbb    DWORD PTR [rsi+rax*1],esi
   14004dd97:	add    BYTE PTR [rcx],bl
   14004dd99:	xor    dl,BYTE PTR [rip+0xb2511e0]        # 0x14b29ef7f
   14004dd9f:	add    BYTE PTR [rip+0x19001e34],ah        # 0x15904fbd9
   14004dda5:	add    DWORD PTR [rsi],edx
   14004dda7:	add    BYTE PTR [rsi],cl
   14004dda9:	lock or al,0xe0
   14004ddac:	or     dl,al
   14004ddae:	or     al,al
   14004ddb0:	(bad)  
   14004ddb1:	jo     0x14004ddb8
   14004ddb3:	(bad)  
   14004ddb4:	add    al,0x50
   14004ddb6:	add    BYTE PTR [rax],al
   14004ddb8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ddb9:	sub    al,0x3
   14004ddbb:	add    BYTE PTR [rax-0xfffb81],dl
   14004ddc1:	(bad)  
   14004ddc2:	(bad)  
   14004ddc3:	dec    DWORD PTR [rdx+0x3c4]
   14004ddc9:	add    BYTE PTR [rax],al
   14004ddcb:	add    BYTE PTR [rsi+0x10003c4],dl
   14004ddd1:	add    BYTE PTR [rax],al
   14004ddd3:	add    BYTE PTR [rdx+0x10003c4],ah
   14004ddd9:	add    BYTE PTR [rax],al
   14004dddb:	add    ah,al
   14004dddd:	(bad)
   14004dde1:	add    BYTE PTR [rax],al
   14004dde3:	add    ah,dl
   14004dde5:	(bad)
   14004dde9:	add    BYTE PTR [rax],al
   14004ddeb:	add    ah,ah
   14004dded:	(bad)
   14004ddf1:	add    BYTE PTR [rax],al
   14004ddf3:	add    ah,dh
   14004ddf5:	(bad)
   14004ddf9:	sub    al,0x0
   14004ddfb:	add    bh,bh
   14004ddfd:	(bad)  
   14004ddfe:	(bad)  
   14004ddff:	push   QWORD PTR [rsi]
   14004de01:	sub    eax,0x0
   14004de06:	add    BYTE PTR [rax],al
   14004de08:	(bad)  
   14004de09:	sub    eax,0x10000
   14004de0e:	add    BYTE PTR [rax],al
   14004de10:	sub    ch,BYTE PTR [rsi]
   14004de12:	add    BYTE PTR [rax],al
   14004de14:	add    al,BYTE PTR [rax]
   14004de16:	add    BYTE PTR [rax],al
   14004de18:	ss add BYTE PTR cs:[rax],al
   14004de1c:	add    DWORD PTR [rax],eax
   14004de1e:	add    BYTE PTR [rax],al
   14004de20:	cli    
   14004de21:	add    BYTE PTR cs:[rax],al
   14004de24:	add    eax,DWORD PTR [rax]
   14004de26:	add    BYTE PTR [rax],al
   14004de28:	(bad)  
   14004de29:	(bad)  
   14004de2a:	add    BYTE PTR [rax],al
   14004de2c:	add    DWORD PTR [rax],eax
   14004de2e:	add    BYTE PTR [rax],al
   14004de30:	push   rbp
   14004de31:	(bad)  
   14004de32:	add    BYTE PTR [rax],al
   14004de34:	add    BYTE PTR [rax],al
   14004de36:	add    BYTE PTR [rax],al
   14004de38:	outs   dx,DWORD PTR ds:[rsi]
   14004de39:	(bad)  
   14004de3a:	add    BYTE PTR [rax],al
   14004de3c:	(bad)  
   14004de3d:	(bad)  
   14004de3e:	(bad)  
   14004de3f:	dec    DWORD PTR [rdi+0x100002f]
   14004de45:	add    BYTE PTR [rax],al
   14004de47:	add    BYTE PTR [rax],dl
   14004de49:	xor    BYTE PTR [rax],al
   14004de4b:	add    BYTE PTR [rip+0x1c000000],al        # 0x15c04de51
   14004de51:	xor    BYTE PTR [rax],al
   14004de53:	add    BYTE PTR [rcx],al
   14004de55:	add    BYTE PTR [rax],al
   14004de57:	add    BYTE PTR [rip+0xffffffffff000030],ch        # 0x13f04de8d
   14004de5d:	(bad)  
   14004de5e:	(bad)  
   14004de5f:	call   FWORD PTR [rcx]
   14004de61:	xor    al,0xb
   14004de63:	add    BYTE PTR [rsi],ah
   14004de65:	xor    al,0x32
   14004de67:	add    BYTE PTR [rcx],bl
   14004de69:	add    DWORD PTR [rax],ebp
   14004de6b:	add    BYTE PTR [rsi],cl
   14004de6d:	lock or al,0xe0
   14004de70:	or     dl,al
   14004de72:	or     al,al
   14004de74:	(bad)  
   14004de75:	jo     0x14004de7c
   14004de77:	(bad)  
   14004de78:	add    al,0x50
   14004de7a:	add    BYTE PTR [rax],al
   14004de7c:	jl     0x14004de09
   14004de7e:	add    eax,DWORD PTR [rax]
   14004de80:	sar    BYTE PTR [rdi+0x4],0x0
   14004de84:	xor    al,BYTE PTR [rcx]
   14004de86:	add    BYTE PTR [rax],al
   14004de88:	(bad)  
   14004de89:	(bad)  
   14004de8a:	(bad)  
   14004de8b:	inc    DWORD PTR [rax*8+0x3]
   14004de92:	add    BYTE PTR [rax],al
   14004de94:	adc    al,0xc5
   14004de96:	add    eax,DWORD PTR [rax]
   14004de98:	(bad)  
   14004de99:	(bad)  
   14004de9a:	(bad)  
   14004de9b:	jmp    QWORD PTR [rax*8-0xfffd]
   14004dea2:	(bad)  
   14004dea3:	push   QWORD PTR [rax*8+0x30003]
   14004deaa:	add    BYTE PTR [rax],al
   14004deac:	(bad)
   14004deb0:	add    al,0x0
   14004deb2:	add    BYTE PTR [rax],al
   14004deb4:	push   rax
   14004deb5:	(bad)
   14004deb8:	add    eax,DWORD PTR [rax]
   14004deba:	add    BYTE PTR [rax],al
   14004debc:	(bad)  
   14004debd:	(bad)
   14004dec0:	(bad)  
   14004dec1:	(bad)  
   14004dec2:	(bad)  
   14004dec3:	jmp    FWORD PTR [rbp+rax*8+0x3]
   14004dec7:	add    bh,bh
   14004dec9:	(bad)  
   14004deca:	(bad)  
   14004decb:	(bad)  
   14004decc:	jl     0x14004de93
   14004dece:	add    eax,DWORD PTR [rax]
   14004ded0:	(bad)  
   14004ded1:	(bad)  
   14004ded2:	(bad)  
   14004ded3:	dec    DWORD PTR [rbp+rax*8-0xfffd]
   14004deda:	(bad)  
   14004dedb:	call   FWORD PTR [rbp+rax*8-0xfffd]
   14004dee2:	(bad)  
   14004dee3:	jmp    FWORD PTR [rbp+rax*8-0xfffd]
   14004deea:	(bad)  
   14004deeb:	inc    DWORD PTR [rax]
   14004deed:	add    BYTE PTR [rax],al
   14004deef:	add    al,ch
   14004def1:	sub    BYTE PTR [rax],al
   14004def3:	add    bh,bh
   14004def5:	(bad)  
   14004def6:	(bad)  
   14004def7:	call   QWORD PTR [rdx+0x29]
   14004defa:	add    BYTE PTR [rax],al
   14004defc:	add    BYTE PTR [rax],al
   14004defe:	add    BYTE PTR [rax],al
   14004df00:	pop    rsi
   14004df01:	sub    DWORD PTR [rax],eax
   14004df03:	add    bh,bh
   14004df05:	(bad)  
   14004df06:	(bad)  
   14004df07:	dec    DWORD PTR [rax+0x2000029]
   14004df0d:	add    BYTE PTR [rax],al
   14004df0f:	add    BYTE PTR [rsi+0x3000029],bl
   14004df15:	add    BYTE PTR [rax],al
   14004df17:	add    BYTE PTR [rdi+0x2a],al
   14004df1a:	add    BYTE PTR [rax],al
   14004df1c:	add    al,0x0
   14004df1e:	add    BYTE PTR [rax],al
   14004df20:	push   rbx
   14004df21:	sub    al,BYTE PTR [rax]
   14004df23:	add    BYTE PTR [rbx],al
   14004df25:	add    BYTE PTR [rax],al
   14004df27:	add    BYTE PTR [rdx],cl
   14004df29:	sub    eax,DWORD PTR [rax]
   14004df2b:	add    BYTE PTR [rsi],al
   14004df2d:	add    BYTE PTR [rax],al
   14004df2f:	add    BYTE PTR [rbx+rbp*1+0x0],ah
   14004df33:	add    bh,bh
   14004df35:	(bad)  
   14004df36:	(bad)  
   14004df37:	push   QWORD PTR [rbx+rbp*1+0x0]
   14004df3b:	add    BYTE PTR [rbx],al
   14004df3d:	add    BYTE PTR [rax],al
   14004df3f:	add    bh,bl
   14004df41:	sub    eax,DWORD PTR [rax]
   14004df43:	add    bh,bh
   14004df45:	(bad)  
   14004df46:	(bad)  
   14004df47:	jmp    rcx
   14004df49:	sub    eax,DWORD PTR [rax]
   14004df4b:	add    BYTE PTR [rbx],al
   14004df4d:	add    BYTE PTR [rax],al
   14004df4f:	add    BYTE PTR [rsi],dl
   14004df51:	sub    al,0x0
   14004df53:	add    bh,bh
   14004df55:	(bad)  
   14004df56:	(bad)  
   14004df57:	call   FWORD PTR [rbx]
   14004df59:	sub    al,0x0
   14004df5b:	add    BYTE PTR [rbx],al
   14004df5d:	add    BYTE PTR [rax],al
   14004df5f:	add    BYTE PTR [rax+0x2c],dl
   14004df62:	add    BYTE PTR [rax],al
   14004df64:	(bad)  
   14004df65:	(bad)  
   14004df66:	(bad)  
   14004df67:	call   QWORD PTR [rbp+0x2c]
   14004df6a:	add    BYTE PTR [rax],al
   14004df6c:	add    eax,DWORD PTR [rax]
   14004df6e:	add    BYTE PTR [rax],al
   14004df70:	lea    ebp,[rax+rax*1]
   14004df73:	add    bh,bh
   14004df75:	(bad)  
   14004df76:	(bad)  
   14004df77:	call   QWORD PTR [rdx+0x300002c]
   14004df7d:	add    BYTE PTR [rax],al
   14004df7f:	add    BYTE PTR [rcx-0xffffd4],bh
   14004df85:	(bad)  
   14004df86:	(bad)  
   14004df87:	call   FWORD PTR [rcx]
   14004df89:	xor    ecx,DWORD PTR [rbx]
   14004df8b:	add    BYTE PTR [rip+0x19002234],ah        # 0x1590501c5
   14004df91:	add    DWORD PTR [rax],ebx
   14004df93:	add    BYTE PTR [rsi],cl
   14004df95:	lock or al,0xe0
   14004df98:	or     dl,al
   14004df9a:	or     al,al
   14004df9c:	(bad)  
   14004df9d:	jo     0x14004dfa4
   14004df9f:	(bad)  
   14004dfa0:	add    al,0x50
   14004dfa2:	add    BYTE PTR [rax],al
   14004dfa4:	jl     0x14004df31
   14004dfa6:	add    eax,DWORD PTR [rax]
   14004dfa8:	lock jg 0x14004dfaf
   14004dfab:	add    BYTE PTR [rdx-0x1000000],bh
   14004dfb1:	(bad)  
   14004dfb2:	(bad)  
   14004dfb3:	dec    eax
   14004dfb5:	mov    BYTE PTR [rbx],0x0
   14004dfb8:	add    BYTE PTR [rax],al
   14004dfba:	add    BYTE PTR [rax],al
   14004dfbc:	fadd   st,st(6)
   14004dfbe:	add    eax,DWORD PTR [rax]
   14004dfc0:	(bad)  
   14004dfc1:	(bad)  
   14004dfc2:	(bad)  
   14004dfc3:	(bad)  
   14004dfc4:	call   0x14204e38f
   14004dfc9:	add    BYTE PTR [rax],al
   14004dfcb:	add    al,bh
   14004dfcd:	mov    BYTE PTR [rbx],0x0
   14004dfd0:	(bad)  
   14004dfd1:	(bad)  
   14004dfd2:	(bad)  
   14004dfd3:	dec    DWORD PTR [rax]
   14004dfd5:	mov    DWORD PTR [rbx],0xffffff00
   14004dfdb:	call   QWORD PTR [rdi+rax*8]
   14004dfde:	add    eax,DWORD PTR [rax]
   14004dfe0:	(bad)  
   14004dfe1:	(bad)  
   14004dfe2:	(bad)  
   14004dfe3:	jmp    QWORD PTR [rax]
   14004dfe5:	mov    DWORD PTR [rbx],0xffffff00
   14004dfeb:	jmp    FWORD PTR [rdi+rax*8]
   14004dfee:	add    eax,DWORD PTR [rax]
   14004dff0:	(bad)  
   14004dff1:	(bad)  
   14004dff2:	(bad)  
   14004dff3:	(bad)  
   14004dff4:	cmp    bh,al
   14004dff6:	add    eax,DWORD PTR [rax]
   14004dff8:	(bad)  
   14004dff9:	(bad)  
   14004dffa:	(bad)  
   14004dffb:	inc    DWORD PTR [rdi+rax*8+0x3]
   14004dfff:	add    bh,bh
   14004e001:	(bad)  
   14004e002:	(bad)  
   14004e003:	call   QWORD PTR [rax-0x39]
   14004e006:	add    eax,DWORD PTR [rax]
   14004e008:	cwde   
   14004e009:	and    BYTE PTR [rax],al
   14004e00b:	add    bh,bh
   14004e00d:	(bad)  
   14004e00e:	(bad)  
   14004e00f:	inc    DWORD PTR [rsi]
   14004e011:	and    DWORD PTR [rax],eax
   14004e013:	add    BYTE PTR [rax],al
   14004e015:	add    BYTE PTR [rax],al
   14004e017:	add    BYTE PTR [rdx],dl
   14004e019:	and    DWORD PTR [rax],eax
   14004e01b:	add    bh,bh
   14004e01d:	(bad)  
   14004e01e:	(bad)  
   14004e01f:	dec    DWORD PTR [rax+0x2000021]
   14004e025:	add    BYTE PTR [rax],al
   14004e027:	add    BYTE PTR [rcx+riz*1-0x10000],dl
   14004e02e:	(bad)  
   14004e02f:	call   FWORD PTR [rcx+0x22]
   14004e032:	add    BYTE PTR [rax],al
   14004e034:	add    al,0x0
   14004e036:	add    BYTE PTR [rax],al
   14004e038:	mov    ah,0x22
   14004e03a:	add    BYTE PTR [rax],al
   14004e03c:	(bad)  
   14004e03d:	(bad)  
   14004e03e:	(bad)  
   14004e03f:	inc    edx
   14004e041:	and    eax,DWORD PTR [rax]
   14004e043:	add    BYTE PTR [rip+0x21000000],al        # 0x16104e049
   14004e049:	and    al,0x0
   14004e04b:	add    bh,bh
   14004e04d:	(bad)  
   14004e04e:	(bad)  
   14004e04f:	call   FWORD PTR [rdx+0x24]
   14004e052:	add    BYTE PTR [rax],al
   14004e054:	(bad)  
   14004e055:	add    BYTE PTR [rax],al
   14004e057:	add    BYTE PTR [rdx-0xffffdc],bh
   14004e05d:	(bad)  
   14004e05e:	(bad)  
   14004e05f:	push   QWORD PTR [rbp+0x25]
   14004e062:	add    BYTE PTR [rax],al
   14004e064:	(bad)  
   14004e065:	add    BYTE PTR [rax],al
   14004e067:	add    bh,cl
   14004e069:	and    eax,0xffff0000
   14004e06e:	(bad)  
   14004e06f:	push   QWORD PTR [rcx+0x26]
   14004e072:	add    BYTE PTR [rax],al
   14004e074:	or     BYTE PTR [rax],al
   14004e076:	add    BYTE PTR [rax],al
   14004e078:	shl    DWORD PTR [rsi],1
   14004e07a:	add    BYTE PTR [rax],al
   14004e07c:	(bad)  
   14004e07d:	(bad)  
   14004e07e:	(bad)  
   14004e07f:	inc    DWORD PTR [rbp+0x9000027]
   14004e085:	add    BYTE PTR [rax],al
   14004e087:	add    bh,bl
   14004e089:	(bad)  
   14004e08a:	add    BYTE PTR [rax],al
   14004e08c:	(bad)  
   14004e08d:	(bad)  
   14004e08e:	(bad)  
   14004e08f:	push   QWORD PTR [rsi]
   14004e091:	sub    BYTE PTR [rax],al
   14004e093:	add    BYTE PTR [rdx],cl
   14004e095:	add    BYTE PTR [rax],al
   14004e097:	add    BYTE PTR [rax-0xffffd8],dl
   14004e09d:	(bad)  
   14004e09e:	(bad)  
   14004e09f:	call   QWORD PTR [rcx]
   14004e0a1:	adc    eax,DWORD PTR [rdx]
   14004e0a3:	add    BYTE PTR [rdx],cl
   14004e0a5:	push   rdx
   14004e0a6:	(bad)  
   14004e0a7:	xor    BYTE PTR [rsp+rbp*1-0x7fdffffd],ah
   14004e0ae:	add    al,0x0
   14004e0b0:	jo     0x14004e0d2
   14004e0b2:	add    BYTE PTR [rax],al
   14004e0b4:	(bad)  
   14004e0b5:	(bad)  
   14004e0b6:	(bad)  
   14004e0b7:	call   QWORD PTR [rcx]
   14004e0b9:	adc    al,BYTE PTR [rcx]
   14004e0bb:	add    BYTE PTR [rcx],cl
   14004e0bd:	(bad)  
   14004e0be:	add    BYTE PTR [rax],al
   14004e0c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e0c1:	sub    al,0x3
   14004e0c3:	add    BYTE PTR [rax-0x80],dl
   14004e0c6:	add    al,0x0
   14004e0c8:	(bad)  
   14004e0c9:	(bad)  
   14004e0ca:	(bad)  
   14004e0cb:	(bad)  
   14004e0cc:	out    dx,al
   14004e0cd:	ret    
   14004e0ce:	add    eax,DWORD PTR [rax]
   14004e0d0:	push   rsp
   14004e0d1:	and    BYTE PTR [rax],al
   14004e0d3:	add    bh,bh
   14004e0d5:	(bad)  
   14004e0d6:	(bad)  
   14004e0d7:	call   FWORD PTR [rcx]
   14004e0d9:	cmp    cl,BYTE PTR [rbx]
   14004e0db:	add    BYTE PTR [rcx],ch
   14004e0dd:	xor    al,0x5a
   14004e0df:	add    BYTE PTR [rcx+rax*1],bl
   14004e0e2:	push   rax
   14004e0e3:	add    BYTE PTR [rsi],cl
   14004e0e5:	lock or al,0xe0
   14004e0e8:	or     dl,al
   14004e0ea:	or     al,al
   14004e0ec:	(bad)  
   14004e0ed:	jo     0x14004e0f4
   14004e0ef:	(bad)  
   14004e0f0:	add    al,0x50
   14004e0f2:	add    BYTE PTR [rax],al
   14004e0f4:	jl     0x14004e081
   14004e0f6:	add    eax,DWORD PTR [rax]
   14004e0f8:	add    BYTE PTR [rax+0x2720004],0x0
   14004e0ff:	add    bh,bh
   14004e101:	(bad)  
   14004e102:	(bad)  
   14004e103:	(bad)  
   14004e104:	mov    esp,0x3c5
   14004e109:	add    BYTE PTR [rax],al
   14004e10b:	add    ah,cl
   14004e10d:	(bad)
   14004e110:	(bad)  
   14004e111:	(bad)  
   14004e112:	(bad)  
   14004e113:	(bad)  
   14004e114:	fadd   st(5),st
   14004e116:	add    eax,DWORD PTR [rax]
   14004e118:	add    al,BYTE PTR [rax]
   14004e11a:	add    BYTE PTR [rax],al
   14004e11c:	in     al,dx
   14004e11d:	(bad)
   14004e120:	(bad)  
   14004e121:	(bad)  
   14004e122:	(bad)  
   14004e123:	(bad)  
   14004e124:	cld    
   14004e125:	(bad)
   14004e128:	add    al,0x0
   14004e12a:	add    BYTE PTR [rax],al
   14004e12c:	or     dh,al
   14004e12e:	add    eax,DWORD PTR [rax]
   14004e130:	add    al,0x0
   14004e132:	add    BYTE PTR [rax],al
   14004e134:	adc    al,0xc6
   14004e136:	add    eax,DWORD PTR [rax]
   14004e138:	add    al,0x0
   14004e13a:	add    BYTE PTR [rax],al
   14004e13c:	and    dh,al
   14004e13e:	add    eax,DWORD PTR [rax]
   14004e140:	(bad)  
   14004e141:	add    BYTE PTR [rax],al
   14004e143:	add    BYTE PTR [rsi+rax*8],ch
   14004e146:	add    eax,DWORD PTR [rax]
   14004e148:	(bad)  
   14004e149:	add    BYTE PTR [rax],al
   14004e14b:	add    BYTE PTR [rax],bh
   14004e14d:	mov    BYTE PTR [rbx],0x0
   14004e150:	or     DWORD PTR [rax],eax
   14004e152:	add    BYTE PTR [rax],al
   14004e154:	rex.R mov BYTE PTR [rbx],0x0
   14004e158:	or     DWORD PTR [rax],eax
   14004e15a:	add    BYTE PTR [rax],al
   14004e15c:	push   rax
   14004e15d:	mov    BYTE PTR [rbx],0x0
   14004e160:	sbb    BYTE PTR [rax],al
   14004e163:	add    bh,bh
   14004e165:	(bad)  
   14004e166:	(bad)  
   14004e167:	push   QWORD PTR [rsi+0x18]
   14004e16d:	add    BYTE PTR [rax],al
   14004e16f:	add    dl,al
   14004e171:	sbb    BYTE PTR [rax],al
   14004e173:	add    bh,bh
   14004e175:	(bad)  
   14004e176:	(bad)  
   14004e177:	push   QWORD PTR [rax]
   14004e179:	sbb    al,BYTE PTR [rax]
   14004e17b:	add    BYTE PTR [rdx],al
   14004e17d:	add    BYTE PTR [rax],al
   14004e17f:	add    BYTE PTR [rdx+rbx*1],bh
   14004e182:	add    BYTE PTR [rax],al
   14004e184:	(bad)  
   14004e185:	(bad)  
   14004e186:	(bad)  
   14004e187:	inc    DWORD PTR [rsp+rbx*1]
   14004e18a:	add    BYTE PTR [rax],al
   14004e18c:	add    al,0x0
   14004e18e:	add    BYTE PTR [rax],al
   14004e190:	sub    bl,BYTE PTR [rax+rax*1]
   14004e193:	add    BYTE PTR [rip+0x79000000],al        # 0x1b904e199
   14004e199:	sbb    al,0x0
   14004e19b:	add    BYTE PTR [rax+rax*1],al
   14004e19e:	add    BYTE PTR [rax],al
   14004e1a0:	mov    edx,0x600001c
   14004e1a5:	add    BYTE PTR [rax],al
   14004e1a7:	add    BYTE PTR [rcx],cl
   14004e1a9:	sbb    eax,0x40000
   14004e1ae:	add    BYTE PTR [rax],al
   14004e1b0:	sbb    BYTE PTR [rip+0x70000],bl        # 0x1400be1b6
   14004e1b6:	add    BYTE PTR [rax],al
   14004e1b8:	sbb    eax,0x800001e
   14004e1bd:	add    BYTE PTR [rax],al
   14004e1bf:	add    BYTE PTR [rsi+rbx*1+0x0],ch
   14004e1c3:	add    BYTE PTR [rdi],al
   14004e1c5:	add    BYTE PTR [rax],al
   14004e1c7:	add    BYTE PTR [rsi+0x900001e],cl
   14004e1cd:	add    BYTE PTR [rax],al
   14004e1cf:	add    bh,dh
   14004e1d1:	(bad)  
   14004e1d2:	add    BYTE PTR [rax],al
   14004e1d4:	or     al,BYTE PTR [rax]
   14004e1d6:	add    BYTE PTR [rax],al
   14004e1d8:	rex.RX (bad) 
   14004e1da:	add    BYTE PTR [rax],al
   14004e1dc:	or     DWORD PTR [rax],eax
   14004e1de:	add    BYTE PTR [rax],al
   14004e1e0:	xchg   ebp,eax
   14004e1e1:	(bad)  
   14004e1e2:	add    BYTE PTR [rax],al
   14004e1e4:	or     eax,DWORD PTR [rax]
   14004e1e6:	add    BYTE PTR [rax],al
   14004e1e8:	in     al,0x1f
   14004e1ea:	add    BYTE PTR [rax],al
   14004e1ec:	or     DWORD PTR [rax],eax
   14004e1ee:	add    BYTE PTR [rax],al
   14004e1f0:	out    dx,al
   14004e1f1:	(bad)  
   14004e1f2:	add    BYTE PTR [rax],al
   14004e1f4:	(bad)  
   14004e1f5:	add    BYTE PTR [rax],al
   14004e1f7:	add    BYTE PTR [rdi],al
   14004e1f9:	and    BYTE PTR [rax],al
   14004e1fb:	add    BYTE PTR [rax+rax*1],al
   14004e1fe:	add    BYTE PTR [rax],al
   14004e200:	adc    DWORD PTR [rax],esp
   14004e202:	add    BYTE PTR [rax],al
   14004e204:	(bad)  
   14004e205:	(bad)  
   14004e206:	(bad)  
   14004e207:	call   QWORD PTR [rcx]
   14004e209:	adc    al,BYTE PTR [rcx]
   14004e20b:	add    BYTE PTR [rcx],cl
   14004e20d:	(bad)  
   14004e20e:	add    BYTE PTR [rax],al
   14004e210:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e211:	sub    al,0x3
   14004e213:	add    BYTE PTR [rax-0xfffb80],dh
   14004e219:	(bad)  
   14004e21a:	(bad)  
   14004e21b:	call   rdx
   14004e21d:	ret    
   14004e21e:	add    eax,DWORD PTR [rax]
   14004e220:	and    BYTE PTR [rax],bl
   14004e222:	add    BYTE PTR [rax],al
   14004e224:	(bad)  
   14004e225:	(bad)  
   14004e226:	(bad)  
   14004e227:	call   FWORD PTR [rcx]
   14004e229:	cmp    al,0xb
   14004e22b:	add    BYTE PTR [rbx],ch
   14004e22d:	je     0x14004e274
   14004e22f:	add    BYTE PTR [rdi],ah
   14004e231:	add    BYTE PTR fs:[rbx],r12b
   14004e235:	xor    al,0x43
   14004e237:	add    BYTE PTR [rsi],dl
   14004e239:	add    DWORD PTR [rsi],edi
   14004e23b:	add    BYTE PTR [rax],cl
   14004e23d:	lock (bad) 
   14004e23f:	rol    BYTE PTR [rax+rdx*2],0x0
   14004e243:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   14004e247:	add    al,ah
   14004e249:	add    BYTE PTR [rax+rax*1],0xe2
   14004e24d:	add    DWORD PTR [rax],eax
   14004e24f:	add    bh,bh
   14004e251:	(bad)  
   14004e252:	(bad)  
   14004e253:	call   FWORD PTR [rsi+rax*8+0x3]
   14004e257:	add    bh,bh
   14004e259:	(bad)  
   14004e25a:	(bad)  
   14004e25b:	jmp    FWORD PTR [rsi+rax*8+0x3]
   14004e25f:	add    BYTE PTR [rcx],al
   14004e261:	add    BYTE PTR [rax],al
   14004e263:	add    BYTE PTR [rax-0x3a],bh
   14004e266:	add    eax,DWORD PTR [rax]
   14004e268:	add    DWORD PTR [rax],eax
   14004e26a:	add    BYTE PTR [rax],al
   14004e26c:	test   dh,al
   14004e26e:	add    eax,DWORD PTR [rax]
   14004e270:	(bad)  
   14004e271:	(bad)  
   14004e272:	(bad)  
   14004e273:	call   QWORD PTR [rax+0x10003c6]
   14004e279:	add    BYTE PTR [rax],al
   14004e27b:	add    BYTE PTR [rax+0x50003c6],ah
   14004e281:	add    BYTE PTR [rax],al
   14004e283:	add    BYTE PTR [rsi+rax*8-0xfffd],ch
   14004e28a:	(bad)  
   14004e28b:	(bad)  
   14004e28c:	mov    eax,0xa00003c6
   14004e291:	adc    eax,DWORD PTR [rax]
   14004e293:	add    bh,bh
   14004e295:	(bad)  
   14004e296:	(bad)  
   14004e297:	call   FWORD PTR [rbp+0x14]
   14004e29d:	add    BYTE PTR [rax],al
   14004e29f:	add    BYTE PTR [rbx+0x1000014],dh
   14004e2a5:	add    BYTE PTR [rax],al
   14004e2a7:	add    BYTE PTR [rdx+0x15],bh
   14004e2aa:	add    BYTE PTR [rax],al
   14004e2ac:	add    al,BYTE PTR [rax]
   14004e2ae:	add    BYTE PTR [rax],al
   14004e2b0:	retf   
   14004e2b1:	adc    eax,0x10000
   14004e2b6:	add    BYTE PTR [rax],al
   14004e2b8:	or     eax,0x3000016
   14004e2bd:	add    BYTE PTR [rax],al
   14004e2bf:	add    BYTE PTR [rsi+0x16],bl
   14004e2c2:	add    BYTE PTR [rax],al
   14004e2c4:	add    DWORD PTR [rax],eax
   14004e2c6:	add    BYTE PTR [rax],al
   14004e2c8:	(bad)  
   14004e2c9:	(bad)  
   14004e2ca:	add    BYTE PTR [rax],al
   14004e2cc:	add    eax,0x55000000
   14004e2d1:	(bad)  
   14004e2d2:	add    BYTE PTR [rax],al
   14004e2d4:	(bad)  
   14004e2d5:	add    BYTE PTR [rax],al
   14004e2d7:	add    BYTE PTR [rsi+0x5000017],ah
   14004e2dd:	add    BYTE PTR [rax],al
   14004e2df:	add    BYTE PTR [rax+0x1000017],dh
   14004e2e5:	add    BYTE PTR [rax],al
   14004e2e7:	add    cl,ch
   14004e2e9:	(bad)  
   14004e2ea:	add    BYTE PTR [rax],al
   14004e2ec:	(bad)  
   14004e2ed:	(bad)  
   14004e2ee:	(bad)  
   14004e2ef:	call   QWORD PTR [rcx]
   14004e2f1:	sbb    al,0x2
   14004e2f3:	add    BYTE PTR [rdx+rdx*2],dl
   14004e2f6:	adc    BYTE PTR [rax],dh
   14004e2f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e2f9:	sub    al,0x3
   14004e2fb:	add    BYTE PTR [rax],dl
   14004e2fd:	add    DWORD PTR [rax+rax*1],0xffffffff
   14004e304:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e305:	ret    
   14004e306:	add    eax,DWORD PTR [rax]
   14004e308:	add    BYTE PTR [rax],al
   14004e30a:	add    BYTE PTR [rax],al
   14004e30c:	mov    dh,0xc3
   14004e30e:	add    eax,DWORD PTR [rax]
   14004e310:	(bad)  
   14004e311:	(bad)  
   14004e312:	(bad)  
   14004e313:	inc    esi
   14004e315:	ret    
   14004e316:	add    eax,DWORD PTR [rax]
   14004e318:	rex adc eax,DWORD PTR [rax]
   14004e31b:	add    bh,bh
   14004e31d:	(bad)  
   14004e31e:	(bad)  
   14004e31f:	push   QWORD PTR [rsi+0x13]
   14004e322:	add    BYTE PTR [rax],al
   14004e324:	add    BYTE PTR [rax],al
   14004e326:	add    BYTE PTR [rax],al
   14004e328:	(bad)  
   14004e329:	adc    eax,DWORD PTR [rax]
   14004e32b:	add    BYTE PTR [rdx],al
   14004e32d:	add    BYTE PTR [rax],al
   14004e32f:	add    BYTE PTR [rbx+rdx*1-0x10000],dl
   14004e336:	(bad)  
   14004e337:	call   QWORD PTR [rcx]
   14004e339:	sbb    BYTE PTR [rax+rax*1],al
   14004e33c:	sbb    BYTE PTR [rax+rcx*1],dh
   14004e33f:	add    BYTE PTR [rdx+rdx*2],cl
   14004e342:	or     BYTE PTR [rax-0x5c],dh
   14004e345:	sub    al,0x3
   14004e347:	add    BYTE PTR [rax-0x7f],al
   14004e34a:	add    al,0x0
   14004e34c:	test   BYTE PTR [rdx],dl
   14004e34e:	add    BYTE PTR [rax],al
   14004e350:	(bad)  
   14004e351:	(bad)  
   14004e352:	(bad)  
   14004e353:	jmp    rdi
   14004e355:	adc    al,BYTE PTR [rax]
   14004e357:	add    BYTE PTR [rax],al
   14004e359:	add    BYTE PTR [rax],al
   14004e35b:	add    BYTE PTR [rcx],dl
   14004e35d:	adc    eax,DWORD PTR [rdx]
   14004e35f:	add    BYTE PTR [rdx],cl
   14004e361:	push   rdx
   14004e362:	(bad)  
   14004e363:	xor    BYTE PTR [rsp+rbp*1-0x7e8ffffd],ah
   14004e36a:	add    al,0x0
   14004e36c:	(bad)  
   14004e36d:	(bad)  
   14004e36e:	(bad)  
   14004e36f:	inc    DWORD PTR [rsi]
   14004e371:	(bad)
   14004e375:	(bad)  
   14004e376:	(bad)  
   14004e377:	call   QWORD PTR [rdx]
   14004e379:	(bad)
   14004e37d:	adc    al,BYTE PTR [rax]
   14004e37f:	add    bh,bh
   14004e381:	(bad)  
   14004e382:	(bad)  
   14004e383:	call   QWORD PTR [rcx]
   14004e385:	adc    eax,DWORD PTR [rdx]
   14004e387:	add    BYTE PTR [rdx],cl
   14004e389:	push   rdx
   14004e38a:	(bad)  
   14004e38b:	xor    BYTE PTR [rsp+rbp*1-0x7e5ffffd],ah
   14004e392:	add    al,0x0
   14004e394:	call   0x13f04e3aa
   14004e399:	(bad)  
   14004e39a:	(bad)  
   14004e39b:	push   QWORD PTR [rbx]
   14004e39d:	adc    al,BYTE PTR [rax]
   14004e39f:	add    BYTE PTR [rax],al
   14004e3a1:	add    BYTE PTR [rax],al
   14004e3a3:	add    BYTE PTR [rcx],dl
   14004e3a5:	adc    DWORD PTR [rcx],eax
   14004e3a7:	add    BYTE PTR [rcx],cl
   14004e3a9:	and    al,BYTE PTR [rax]
   14004e3ab:	add    BYTE PTR [rsp+rbp*1-0x7e2ffffd],ah
   14004e3b2:	add    al,0x0
   14004e3b4:	(bad)  
   14004e3b5:	(bad)  
   14004e3b6:	(bad)  
   14004e3b7:	jmp    rdx
   14004e3b9:	ret    
   14004e3ba:	add    eax,DWORD PTR [rax]
   14004e3bc:	rcl    BYTE PTR [rcx],0x0
   14004e3bf:	add    bh,bh
   14004e3c1:	(bad)  
   14004e3c2:	(bad)  
   14004e3c3:	call   QWORD PTR [rcx]
   14004e3c5:	adc    eax,DWORD PTR [rdx]
   14004e3c7:	add    BYTE PTR [rdx],cl
   14004e3c9:	push   rdx
   14004e3ca:	(bad)  
   14004e3cb:	xor    BYTE PTR [rsp+rbp*1-0x7dfffffd],ah
   14004e3d2:	add    al,0x0
   14004e3d4:	(bad)  
   14004e3d5:	(bad)  
   14004e3d6:	(bad)  
   14004e3d7:	(bad)  
   14004e3d8:	cli    
   14004e3d9:	ret    
   14004e3da:	add    eax,DWORD PTR [rax]
   14004e3dc:	mov    WORD PTR [rcx],ss
   14004e3de:	add    BYTE PTR [rax],al
   14004e3e0:	(bad)  
   14004e3e1:	(bad)  
   14004e3e2:	(bad)  
   14004e3e3:	call   QWORD PTR [rcx]
   14004e3e5:	sbb    BYTE PTR [rax+rax*1],al
   14004e3e8:	sbb    BYTE PTR [rax+rcx*1],dh
   14004e3eb:	add    BYTE PTR [rdx+rdx*2],cl
   14004e3ee:	or     BYTE PTR [rax-0x5c],dh
   14004e3f1:	sub    al,0x3
   14004e3f3:	add    BYTE PTR [rax],dh
   14004e3f5:	(bad)  
   14004e3f6:	add    al,0x0
   14004e3f8:	(bad)  
   14004e3f9:	(bad)  
   14004e3fa:	(bad)  
   14004e3fb:	dec    DWORD PTR [rax]
   14004e3fd:	leave  
   14004e3fe:	add    eax,DWORD PTR [rax]
   14004e400:	adc    BYTE PTR [rcx],dl
   14004e402:	add    BYTE PTR [rax],al
   14004e404:	(bad)  
   14004e405:	(bad)  
   14004e406:	(bad)  
   14004e407:	push   QWORD PTR [rbx+0x11]
   14004e40a:	add    BYTE PTR [rax],al
   14004e40c:	add    BYTE PTR [rax],al
   14004e40e:	add    BYTE PTR [rax],al
   14004e410:	sbb    DWORD PTR [rcx],esi
   14004e412:	or     BYTE PTR [rax],al
   14004e414:	sbb    edx,edx
   14004e416:	adc    al,0xf0
   14004e418:	adc    ah,al
   14004e41a:	adc    al,al
   14004e41c:	(bad)  
   14004e41d:	jo     0x14004e42c
   14004e41f:	(bad)  
   14004e420:	or     al,0x30
   14004e422:	or     edx,DWORD PTR [rax+0x7c]
   14004e425:	mov    eax,DWORD PTR [rbx]
   14004e427:	add    BYTE PTR [rax-0x7e],dh
   14004e42a:	add    al,0x0
   14004e42c:	push   0x0
   14004e42e:	add    BYTE PTR [rax],al
   14004e430:	(bad)  
   14004e431:	(bad)  
   14004e432:	(bad)  
   14004e433:	inc    DWORD PTR [rdx]
   14004e435:	retf   0x3
   14004e438:	add    BYTE PTR [rax],al
   14004e43a:	add    BYTE PTR [rax],al
   14004e43c:	(bad)  
   14004e43d:	retf   0x3
   14004e440:	add    BYTE PTR [rax],al
   14004e442:	add    BYTE PTR [rax],al
   14004e444:	(bad)  
   14004e445:	retf   0x3
   14004e448:	add    BYTE PTR [rax],al
   14004e44a:	add    BYTE PTR [rax],al
   14004e44c:	sub    cl,dl
   14004e44e:	add    eax,DWORD PTR [rax]
   14004e450:	add    BYTE PTR [rax],al
   14004e452:	add    BYTE PTR [rax],al
   14004e454:	ss retf 0x3
   14004e458:	(bad)  
   14004e459:	(bad)  
   14004e45a:	(bad)  
   14004e45b:	inc    DWORD PTR [rsi-0x36]
   14004e45e:	add    eax,DWORD PTR [rax]
   14004e460:	cmp    BYTE PTR [rbp+0x0],dh
   14004e463:	add    bh,bh
   14004e465:	(bad)  
   14004e466:	(bad)  
   14004e467:	push   QWORD PTR [rax+0x75]
   14004e46a:	add    BYTE PTR [rax],al
   14004e46c:	add    BYTE PTR [rax],al
   14004e46e:	add    BYTE PTR [rax],al
   14004e470:	mov    cl,0x75
   14004e472:	add    BYTE PTR [rax],al
   14004e474:	add    al,BYTE PTR [rax]
   14004e476:	add    BYTE PTR [rax],al
   14004e478:	mov    ecx,0x3000075
   14004e47d:	add    BYTE PTR [rax],al
   14004e47f:	add    BYTE PTR [rsi+rsi*2],bh
   14004e482:	add    BYTE PTR [rax],al
   14004e484:	add    BYTE PTR [rax],al
   14004e486:	add    BYTE PTR [rax],al
   14004e488:	(bad)  
   14004e489:	jbe    0x14004e48b
   14004e48b:	add    bh,bh
   14004e48d:	(bad)  
   14004e48e:	(bad)  
   14004e48f:	call   FWORD PTR [rcx]
   14004e491:	(bad)  
   14004e492:	(bad)  
   14004e493:	add    BYTE PTR [rcx],bl
   14004e495:	xor    al,0x11
   14004e497:	add    BYTE PTR [rip+0x57006b2],cl        # 0x14574eb4f
   14004e49d:	(bad)  
   14004e49e:	add    al,0x50
   14004e4a0:	jl     0x14004e42d
   14004e4a2:	add    eax,DWORD PTR [rax]
   14004e4a4:	movabs al,ds:0xff0000005a000482
   14004e4ad:	(bad)  
   14004e4ae:	(bad)  
   14004e4af:	(bad)  
   14004e4b0:	fmul   st(1),st
   14004e4b2:	add    eax,DWORD PTR [rax]
   14004e4b4:	add    BYTE PTR [rax],al
   14004e4b6:	add    BYTE PTR [rax],al
   14004e4b8:	ror    cl,0x3
   14004e4bb:	add    BYTE PTR [rcx],al
   14004e4bd:	add    BYTE PTR [rax],al
   14004e4bf:	add    ah,cl
   14004e4c1:	leave  
   14004e4c2:	add    eax,DWORD PTR [rax]
   14004e4c4:	jl     0x14004e53a
   14004e4c6:	add    BYTE PTR [rax],al
   14004e4c8:	(bad)  
   14004e4c9:	(bad)  
   14004e4ca:	(bad)  
   14004e4cb:	call   rbx
   14004e4cd:	je     0x14004e4cf
   14004e4cf:	add    BYTE PTR [rcx],al
   14004e4d1:	add    BYTE PTR [rax],al
   14004e4d3:	add    dl,bh
   14004e4d5:	je     0x14004e4d7
   14004e4d7:	add    BYTE PTR [rax],al
   14004e4d9:	add    BYTE PTR [rax],al
   14004e4db:	add    BYTE PTR [rcx],dl
   14004e4dd:	and    BYTE PTR [rdx],cl
   14004e4df:	add    BYTE PTR [rax],ah
   14004e4e1:	fs or  eax,0xc541c00
   14004e4e7:	add    BYTE PTR [rax],bl
   14004e4e9:	xor    al,0xb
   14004e4eb:	add    BYTE PTR [rdx+rdx*2],cl
   14004e4ee:	or     al,dh
   14004e4f0:	(bad)  
   14004e4f1:	loopne 0x14004e4f7
   14004e4f3:	jo     0x14004e499
   14004e4f5:	sub    al,0x3
   14004e4f7:	add    al,dl
   14004e4f9:	(bad)  
   14004e4fa:	add    al,0x0
   14004e4fc:	(bad)  
   14004e4fd:	(bad)  
   14004e4fe:	(bad)  
   14004e4ff:	call   FWORD PTR [rcx+rcx*8-0xfffd]
   14004e506:	(bad)  
   14004e507:	jmp    FWORD PTR [rax-0xfffc37]
   14004e50d:	(bad)  
   14004e50e:	(bad)  
   14004e50f:	inc    DWORD PTR [rax]
   14004e511:	add    BYTE PTR [rax],al
   14004e513:	add    bh,bh
   14004e515:	(bad)  
   14004e516:	(bad)  
   14004e517:	push   QWORD PTR [rcx+rcx*8+0x73680003]
   14004e51e:	add    BYTE PTR [rax],al
   14004e520:	(bad)  
   14004e521:	(bad)  
   14004e522:	(bad)  
   14004e523:	(bad)  
   14004e524:	(bad)  
   14004e525:	jae    0x14004e527
   14004e527:	add    BYTE PTR [rcx],al
   14004e529:	add    BYTE PTR [rax],al
   14004e52b:	add    BYTE PTR [rax],dh
   14004e52d:	je     0x14004e52f
   14004e52f:	add    bh,bh
   14004e531:	(bad)  
   14004e532:	(bad)  
   14004e533:	call   QWORD PTR [rcx]
   14004e535:	sbb    DWORD PTR [rsi],eax
   14004e537:	add    BYTE PTR [rcx],bl
   14004e539:	or     al,BYTE PTR fs:[rax]
   14004e53c:	adc    al,0x34
   14004e53e:	or     DWORD PTR [rax],eax
   14004e540:	(bad)  
   14004e541:	push   rdx
   14004e542:	add    dh,BYTE PTR [rax-0x5c]
   14004e545:	sub    al,0x3
   14004e547:	add    BYTE PTR [rax],al
   14004e549:	add    DWORD PTR [rax+rax*1],0xffffffec
   14004e54d:	jb     0x14004e54f
   14004e54f:	add    bh,bh
   14004e551:	(bad)  
   14004e552:	(bad)  
   14004e553:	inc    DWORD PTR [rcx]
   14004e555:	sbb    eax,0x321d0008
   14004e55a:	sbb    eax,esi
   14004e55c:	(bad)  
   14004e55d:	loopne 0x14004e574
   14004e55f:	rcl    BYTE PTR [rbx],0x70
   14004e562:	adc    ah,BYTE PTR [rax+0x11]
   14004e565:	push   rax
   14004e566:	adc    BYTE PTR [rax],dh
   14004e568:	adc    DWORD PTR [rip+0x520c0004],edx        # 0x19210e572
   14004e56e:	or     BYTE PTR [rax+0x7],dh
   14004e571:	(bad)  
   14004e572:	(bad)  
   14004e573:	xor    BYTE PTR [rsp+rbp*1-0x7ccffffd],ah
   14004e57a:	add    al,0x0
   14004e57c:	(bad)  
   14004e57d:	(bad)  
   14004e57e:	(bad)  
   14004e57f:	push   QWORD PTR [rdx]
   14004e581:	int    0x3
   14004e583:	add    BYTE PTR [rax],al
   14004e585:	add    BYTE PTR [rax],al
   14004e587:	add    BYTE PTR [rbp+rcx*8+0x3],bl
   14004e58b:	add    BYTE PTR [rax],ch
   14004e58d:	ins    BYTE PTR es:[rdi],dx
   14004e58e:	add    BYTE PTR [rax],al
   14004e590:	(bad)  
   14004e591:	(bad)  
   14004e592:	(bad)  
   14004e593:	(bad)  
   14004e594:	mov    esp,0x6c
   14004e599:	add    BYTE PTR [rax],al
   14004e59b:	add    dl,cl
   14004e59d:	ins    BYTE PTR es:[rdi],dx
   14004e59e:	add    BYTE PTR [rax],al
   14004e5a0:	(bad)  
   14004e5a1:	(bad)  
   14004e5a2:	(bad)  
   14004e5a3:	call   QWORD PTR [rcx]
   14004e5a5:	sbb    al,0x6
   14004e5a7:	add    BYTE PTR [rsp+riz*2],bl
   14004e5aa:	or     al,BYTE PTR [rax]
   14004e5ac:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004e5af:	add    BYTE PTR [rdx+rdx*2],cl
   14004e5b2:	or     BYTE PTR [rax-0x5c],dh
   14004e5b5:	sub    al,0x3
   14004e5b7:	add    BYTE PTR [rax-0x7d],ah
   14004e5ba:	add    al,0x0
   14004e5bc:	mov    WORD PTR [rbx+0x0],gs
   14004e5bf:	add    bh,bh
   14004e5c1:	(bad)  
   14004e5c2:	(bad)  
   14004e5c3:	inc    esi
   14004e5c5:	imul   eax,DWORD PTR [rax],0x0
   14004e5c8:	add    BYTE PTR [rax],al
   14004e5ca:	add    BYTE PTR [rax],al
   14004e5cc:	adc    eax,0xff00006c
   14004e5d1:	(bad)  
   14004e5d2:	(bad)  
   14004e5d3:	call   QWORD PTR [rcx]
   14004e5d5:	sbb    al,0x6
   14004e5d7:	add    BYTE PTR [rsp+riz*2],bl
   14004e5da:	or     al,BYTE PTR [rax]
   14004e5dc:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004e5df:	add    BYTE PTR [rdx+rdx*2],cl
   14004e5e2:	or     BYTE PTR [rax-0x5c],dh
   14004e5e5:	sub    al,0x3
   14004e5e7:	add    BYTE PTR [rax-0xffffb7d],dl
   14004e5ed:	push   0x0
   14004e5ef:	add    bh,bh
   14004e5f1:	(bad)  
   14004e5f2:	(bad)  
   14004e5f3:	call   QWORD PTR [rcx]
   14004e5f5:	adc    al,BYTE PTR [rcx]
   14004e5f7:	add    BYTE PTR [rcx],cl
   14004e5f9:	(bad)  
   14004e5fa:	add    BYTE PTR [rax],al
   14004e5fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e5fd:	sub    al,0x3
   14004e5ff:	add    al,al
   14004e601:	add    DWORD PTR [rax+rax*1],0xffffffc0
   14004e605:	push   0x0
   14004e607:	add    bh,bh
   14004e609:	(bad)  
   14004e60a:	(bad)  
   14004e60b:	call   QWORD PTR [rcx]
   14004e60d:	adc    eax,DWORD PTR [rdx]
   14004e60f:	add    BYTE PTR [rdx],cl
   14004e611:	push   rdx
   14004e612:	(bad)  
   14004e613:	xor    BYTE PTR [rsp+rbp*1-0x7c0ffffd],ah
   14004e61a:	add    al,0x0
   14004e61c:	(bad)  
   14004e61d:	(bad)  
   14004e61e:	(bad)  
   14004e61f:	call   rax
   14004e621:	retf   
   14004e622:	add    eax,DWORD PTR [rax]
   14004e624:	or     BYTE PTR [rdx+0x0],ch
   14004e627:	add    bh,bh
   14004e629:	(bad)  
   14004e62a:	(bad)  
   14004e62b:	call   QWORD PTR [rcx]
   14004e62d:	(bad)  
   14004e62e:	or     BYTE PTR [rax],al
   14004e630:	(bad)  
   14004e631:	fs adc eax,0x12341a00
   14004e637:	add    BYTE PTR [rsi],cl
   14004e639:	rol    BYTE PTR [rdi],cl
   14004e63b:	loopne 0x14004e642
   14004e63d:	jo     0x14004e643
   14004e63f:	push   rax
   14004e640:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e641:	sub    al,0x3
   14004e643:	add    BYTE PTR [rax],ah
   14004e645:	test   BYTE PTR [rax+rax*1],al
   14004e648:	(bad)  
   14004e649:	(bad)  
   14004e64a:	(bad)  
   14004e64b:	jmp    FWORD PTR [rax-0x33]
   14004e64e:	add    eax,DWORD PTR [rax]
   14004e650:	add    BYTE PTR [rax],al
   14004e652:	add    BYTE PTR [rax],al
   14004e654:	je     0x14004e623
   14004e656:	add    eax,DWORD PTR [rax]
   14004e658:	loopne 0x14004e6c2
   14004e65a:	add    BYTE PTR [rax],al
   14004e65c:	(bad)  
   14004e65d:	(bad)  
   14004e65e:	(bad)  
   14004e65f:	jmp    QWORD PTR [rbp+0x69]
   14004e662:	add    BYTE PTR [rax],al
   14004e664:	add    BYTE PTR [rax],al
   14004e666:	add    BYTE PTR [rax],al
   14004e668:	(bad)
   14004e66b:	add    bh,bh
   14004e66d:	(bad)  
   14004e66e:	(bad)  
   14004e66f:	call   FWORD PTR [rcx]
   14004e671:	cmp    DWORD PTR [rbx],ecx
   14004e673:	add    BYTE PTR [rax],ch
   14004e675:	xor    al,0x69
   14004e677:	add    BYTE PTR [rcx+rax*1],bl
   14004e67a:	pop    rsi
   14004e67b:	add    BYTE PTR [rsi],cl
   14004e67d:	lock or al,0xe0
   14004e680:	or     dl,al
   14004e682:	or     al,al
   14004e684:	(bad)  
   14004e685:	jo     0x14004e68c
   14004e687:	(bad)  
   14004e688:	add    al,0x50
   14004e68a:	add    BYTE PTR [rax],al
   14004e68c:	jl     0x14004e619
   14004e68e:	add    eax,DWORD PTR [rax]
   14004e690:	push   rax
   14004e691:	test   BYTE PTR [rax+rax*1],al
   14004e694:	loop   0x14004e698
   14004e696:	add    BYTE PTR [rax],al
   14004e698:	(bad)  
   14004e699:	(bad)  
   14004e69a:	(bad)  
   14004e69b:	inc    DWORD PTR [rax+0x3cd]
   14004e6a1:	add    BYTE PTR [rax],al
   14004e6a3:	add    BYTE PTR [rbp+rcx*8+0x10003],cl
   14004e6aa:	add    BYTE PTR [rax],al
   14004e6ac:	cwde   
   14004e6ad:	int    0x3
   14004e6af:	add    BYTE PTR [rcx],al
   14004e6b1:	add    BYTE PTR [rax],al
   14004e6b3:	add    BYTE PTR [rbp+rcx*8+0x10003],ah
   14004e6ba:	add    BYTE PTR [rax],al
   14004e6bc:	mov    al,0xcd
   14004e6be:	add    eax,DWORD PTR [rax]
   14004e6c0:	add    BYTE PTR [rax],al
   14004e6c2:	add    BYTE PTR [rax],al
   14004e6c4:	loopne 0x14004e693
   14004e6c6:	add    eax,DWORD PTR [rax]
   14004e6c8:	(bad)  
   14004e6c9:	(bad)  
   14004e6ca:	(bad)  
   14004e6cb:	(bad)  
   14004e6cc:	in     al,dx
   14004e6cd:	int    0x3
   14004e6cf:	add    al,ch
   14004e6d1:	add    BYTE PTR fs:[rax],al
   14004e6d4:	(bad)  
   14004e6d5:	(bad)  
   14004e6d6:	(bad)  
   14004e6d7:	call   rdx
   14004e6d9:	add    BYTE PTR gs:[rax],al
   14004e6dc:	add    BYTE PTR [rax],al
   14004e6de:	add    BYTE PTR [rax],al
   14004e6e0:	in     al,0x65
   14004e6e2:	add    BYTE PTR [rax],al
   14004e6e4:	add    DWORD PTR [rax],eax
   14004e6e6:	add    BYTE PTR [rax],al
   14004e6e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e6e9:	data16 add BYTE PTR [rax],al
   14004e6ec:	add    al,BYTE PTR [rax]
   14004e6ee:	add    BYTE PTR [rax],al
   14004e6f0:	adc    BYTE PTR [rdi+0x0],ah
   14004e6f3:	add    BYTE PTR [rcx],al
   14004e6f5:	add    BYTE PTR [rax],al
   14004e6f7:	add    bh,ah
   14004e6f9:	add    BYTE PTR [eax],al
   14004e6fc:	add    al,0x0
   14004e6fe:	add    BYTE PTR [rax],al
   14004e700:	out    dx,eax
   14004e701:	add    BYTE PTR [eax],al
   14004e704:	add    DWORD PTR [rax],eax
   14004e706:	add    BYTE PTR [rax],al
   14004e708:	and    DWORD PTR [rax+0x0],ebp
   14004e70b:	add    BYTE PTR [rax],al
   14004e70d:	add    BYTE PTR [rax],al
   14004e70f:	add    BYTE PTR [rbx+0x68],al
   14004e712:	add    BYTE PTR [rax],al
   14004e714:	(bad)  
   14004e715:	(bad)  
   14004e716:	(bad)  
   14004e717:	push   QWORD PTR [rbp+0x68]
   14004e71a:	add    BYTE PTR [rax],al
   14004e71c:	add    DWORD PTR [rax],eax
   14004e71e:	add    BYTE PTR [rax],al
   14004e720:	xchg   esp,eax
   14004e721:	push   0xffffffffffff0000
   14004e726:	(bad)  
   14004e727:	call   QWORD PTR [rcx]
   14004e729:	and    DWORD PTR [rdx],ecx
   14004e72b:	add    BYTE PTR [rcx],bl
   14004e72d:	add    DWORD PTR [rdi],ebp
   14004e72f:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e4f325
   14004e735:	rol    BYTE PTR [rdi],1
   14004e737:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14364ebae
   14004e73e:	add    dl,BYTE PTR [rax-0x5c]
   14004e741:	sub    al,0x3
   14004e743:	add    BYTE PTR [rax-0xfffb7c],al
   14004e749:	(bad)  
   14004e74a:	(bad)  
   14004e74b:	call   rax
   14004e74d:	(bad)  
   14004e74e:	add    eax,DWORD PTR [rax]
   14004e750:	(bad)  
   14004e751:	(bad)  
   14004e752:	(bad)  
   14004e753:	(bad)  
   14004e754:	fmul   st(6),st
   14004e756:	add    eax,DWORD PTR [rax]
   14004e758:	call   0x13f04e7b8
   14004e75d:	(bad)  
   14004e75e:	(bad)  
   14004e75f:	jmp    FWORD PTR [rbp+0x61]
   14004e762:	add    BYTE PTR [rax],al
   14004e764:	add    BYTE PTR [rax],al
   14004e766:	add    BYTE PTR [rax],al
   14004e768:	fisub  DWORD PTR [rcx+0x0]
   14004e76b:	add    bh,bh
   14004e76d:	(bad)  
   14004e76e:	(bad)  
   14004e76f:	inc    DWORD PTR [rcx]
   14004e771:	adc    BYTE PTR [rsi],al
   14004e773:	add    BYTE PTR [rax],dl
   14004e775:	or     DWORD PTR fs:[rax],eax
   14004e778:	adc    BYTE PTR [rax+rcx*1],dh
   14004e77b:	add    BYTE PTR [rax],dl
   14004e77d:	push   rdx
   14004e77e:	or     al,0x70
   14004e780:	sbb    DWORD PTR [rcx],edi
   14004e782:	or     eax,DWORD PTR [rax]
   14004e784:	sub    BYTE PTR [rdx*2+0x4a011c00],dh
   14004e78b:	add    BYTE PTR [rsi],cl
   14004e78d:	lock or al,0xe0
   14004e790:	or     dl,al
   14004e792:	or     al,al
   14004e794:	(bad)  
   14004e795:	jo     0x14004e79c
   14004e797:	(bad)  
   14004e798:	add    al,0x50
   14004e79a:	add    BYTE PTR [rax],al
   14004e79c:	jl     0x14004e729
   14004e79e:	add    eax,DWORD PTR [rax]
   14004e7a0:	mov    al,0x84
   14004e7a2:	add    al,0x0
   14004e7a4:	rex.X add al,BYTE PTR [rax]
   14004e7a7:	add    bh,bh
   14004e7a9:	(bad)  
   14004e7aa:	(bad)  
   14004e7ab:	(bad)  
   14004e7ac:	clc    
   14004e7ad:	int    0x3
   14004e7af:	add    bh,bh
   14004e7b1:	(bad)  
   14004e7b2:	(bad)  
   14004e7b3:	inc    DWORD PTR [rsi+rcx*8]
   14004e7b6:	add    eax,DWORD PTR [rax]
   14004e7b8:	(bad)  
   14004e7b9:	(bad)  
   14004e7ba:	(bad)  
   14004e7bb:	inc    DWORD PTR [rax]
   14004e7bd:	add    BYTE PTR [rax],al
   14004e7bf:	add    bh,bh
   14004e7c1:	(bad)  
   14004e7c2:	(bad)  
   14004e7c3:	inc    DWORD PTR [rax]
   14004e7c5:	add    BYTE PTR [rax],al
   14004e7c7:	add    bh,bh
   14004e7c9:	(bad)  
   14004e7ca:	(bad)  
   14004e7cb:	inc    DWORD PTR [rax]
   14004e7cd:	add    BYTE PTR [rax],al
   14004e7cf:	add    bh,bh
   14004e7d1:	(bad)  
   14004e7d2:	(bad)  
   14004e7d3:	inc    DWORD PTR [rax]
   14004e7d5:	add    BYTE PTR [rax],al
   14004e7d7:	add    bh,bh
   14004e7d9:	(bad)  
   14004e7da:	(bad)  
   14004e7db:	inc    DWORD PTR [rax]
   14004e7dd:	add    BYTE PTR [rax],al
   14004e7df:	add    bh,bh
   14004e7e1:	(bad)  
   14004e7e2:	(bad)  
   14004e7e3:	inc    DWORD PTR [rax]
   14004e7e5:	add    BYTE PTR [rax],al
   14004e7e7:	add    bh,bh
   14004e7e9:	(bad)  
   14004e7ea:	(bad)  
   14004e7eb:	inc    DWORD PTR [rax]
   14004e7ed:	add    BYTE PTR [rax],al
   14004e7ef:	add    bh,bh
   14004e7f1:	(bad)  
   14004e7f2:	(bad)  
   14004e7f3:	inc    DWORD PTR [rax]
   14004e7f5:	add    BYTE PTR [rax],al
   14004e7f7:	add    bh,bh
   14004e7f9:	(bad)  
   14004e7fa:	(bad)  
   14004e7fb:	inc    DWORD PTR [rax]
   14004e7fd:	add    BYTE PTR [rax],al
   14004e7ff:	add    bh,bh
   14004e801:	(bad)  
   14004e802:	(bad)  
   14004e803:	inc    DWORD PTR [rax]
   14004e805:	add    BYTE PTR [rax],al
   14004e807:	add    bh,bh
   14004e809:	(bad)  
   14004e80a:	(bad)  
   14004e80b:	inc    DWORD PTR [rax]
   14004e80d:	add    BYTE PTR [rax],al
   14004e80f:	add    bh,bh
   14004e811:	(bad)  
   14004e812:	(bad)  
   14004e813:	inc    DWORD PTR [rax]
   14004e815:	add    BYTE PTR [rax],al
   14004e817:	add    bh,bh
   14004e819:	(bad)  
   14004e81a:	(bad)  
   14004e81b:	inc    DWORD PTR [rax]
   14004e81d:	add    BYTE PTR [rax],al
   14004e81f:	add    bh,bh
   14004e821:	(bad)  
   14004e822:	(bad)  
   14004e823:	inc    DWORD PTR [rax]
   14004e825:	add    BYTE PTR [rax],al
   14004e827:	add    bh,bh
   14004e829:	(bad)  
   14004e82a:	(bad)  
   14004e82b:	inc    DWORD PTR [rax]
   14004e82d:	add    BYTE PTR [rax],al
   14004e82f:	add    bh,bh
   14004e831:	(bad)  
   14004e832:	(bad)  
   14004e833:	inc    DWORD PTR [rax]
   14004e835:	add    BYTE PTR [rax],al
   14004e837:	add    bh,bh
   14004e839:	(bad)  
   14004e83a:	(bad)  
   14004e83b:	inc    DWORD PTR [rax]
   14004e83d:	add    BYTE PTR [rax],al
   14004e83f:	add    bh,bh
   14004e841:	(bad)  
   14004e842:	(bad)  
   14004e843:	inc    DWORD PTR [rax]
   14004e845:	add    BYTE PTR [rax],al
   14004e847:	add    bh,bh
   14004e849:	(bad)  
   14004e84a:	(bad)  
   14004e84b:	inc    DWORD PTR [rax]
   14004e84d:	add    BYTE PTR [rax],al
   14004e84f:	add    bh,bh
   14004e851:	(bad)  
   14004e852:	(bad)  
   14004e853:	inc    DWORD PTR [rax]
   14004e855:	add    BYTE PTR [rax],al
   14004e857:	add    bh,bh
   14004e859:	(bad)  
   14004e85a:	(bad)  
   14004e85b:	inc    DWORD PTR [rax]
   14004e85d:	add    BYTE PTR [rax],al
   14004e85f:	add    bh,bh
   14004e861:	(bad)  
   14004e862:	(bad)  
   14004e863:	inc    DWORD PTR [rax]
   14004e865:	add    BYTE PTR [rax],al
   14004e867:	add    bh,bh
   14004e869:	(bad)  
   14004e86a:	(bad)  
   14004e86b:	inc    DWORD PTR [rax]
   14004e86d:	add    BYTE PTR [rax],al
   14004e86f:	add    bh,bh
   14004e871:	(bad)  
   14004e872:	(bad)  
   14004e873:	inc    DWORD PTR [rax]
   14004e875:	add    BYTE PTR [rax],al
   14004e877:	add    bh,bh
   14004e879:	(bad)  
   14004e87a:	(bad)  
   14004e87b:	inc    DWORD PTR [rax]
   14004e87d:	add    BYTE PTR [rax],al
   14004e87f:	add    bh,bh
   14004e881:	(bad)  
   14004e882:	(bad)  
   14004e883:	inc    DWORD PTR [rax]
   14004e885:	add    BYTE PTR [rax],al
   14004e887:	add    BYTE PTR [rcx],al
   14004e889:	add    BYTE PTR [rax],al
   14004e88b:	add    BYTE PTR [rax],dl
   14004e88d:	(bad)  
   14004e88e:	add    eax,DWORD PTR [rax]
   14004e890:	add    DWORD PTR [rax],eax
   14004e892:	add    BYTE PTR [rax],al
   14004e894:	sbb    al,0xce
   14004e896:	add    eax,DWORD PTR [rax]
   14004e898:	add    DWORD PTR [rax],eax
   14004e89a:	add    BYTE PTR [rax],al
   14004e89c:	sub    dh,cl
   14004e89e:	add    eax,DWORD PTR [rax]
   14004e8a0:	add    DWORD PTR [rax],eax
   14004e8a2:	add    BYTE PTR [rax],al
   14004e8a4:	xor    al,0xce
   14004e8a6:	add    eax,DWORD PTR [rax]
   14004e8a8:	add    DWORD PTR [rax],eax
   14004e8aa:	add    BYTE PTR [rax],al
   14004e8ac:	rex (bad) 
   14004e8ae:	add    eax,DWORD PTR [rax]
   14004e8b0:	add    DWORD PTR [rax],eax
   14004e8b2:	add    BYTE PTR [rax],al
   14004e8b4:	rex.WR (bad) 
   14004e8b6:	add    eax,DWORD PTR [rax]
   14004e8b8:	add    DWORD PTR [rax],eax
   14004e8ba:	add    BYTE PTR [rax],al
   14004e8bc:	pop    rax
   14004e8bd:	(bad)  
   14004e8be:	add    eax,DWORD PTR [rax]
   14004e8c0:	add    DWORD PTR [rax],eax
   14004e8c2:	add    BYTE PTR [rax],al
   14004e8c4:	fs (bad) 
   14004e8c6:	add    eax,DWORD PTR [rax]
   14004e8c8:	add    DWORD PTR [rax],eax
   14004e8ca:	add    BYTE PTR [rax],al
   14004e8cc:	jo     0x14004e89c
   14004e8ce:	add    eax,DWORD PTR [rax]
   14004e8d0:	add    DWORD PTR [rax],eax
   14004e8d2:	add    BYTE PTR [rax],al
   14004e8d4:	jl     0x14004e8a4
   14004e8d6:	add    eax,DWORD PTR [rax]
   14004e8d8:	add    DWORD PTR [rax],eax
   14004e8da:	add    BYTE PTR [rax],al
   14004e8dc:	mov    dh,cl
   14004e8de:	add    eax,DWORD PTR [rax]
   14004e8e0:	add    DWORD PTR [rax],eax
   14004e8e2:	add    BYTE PTR [rax],al
   14004e8e4:	xchg   esp,eax
   14004e8e5:	(bad)  
   14004e8e6:	add    eax,DWORD PTR [rax]
   14004e8e8:	(bad)  
   14004e8e9:	(bad)  
   14004e8ea:	(bad)  
   14004e8eb:	inc    DWORD PTR [rax]
   14004e8ed:	add    BYTE PTR [rax],al
   14004e8ef:	add    BYTE PTR [rcx],al
   14004e8f1:	add    BYTE PTR [rax],al
   14004e8f3:	add    BYTE PTR [rax+0x10003ce],ah
   14004e8f9:	add    BYTE PTR [rax],al
   14004e8fb:	add    BYTE PTR [rsi+rcx*8+0x10003],ch
   14004e902:	add    BYTE PTR [rax],al
   14004e904:	mov    eax,0xff0003ce
   14004e909:	(bad)  
   14004e90a:	(bad)  
   14004e90b:	inc    DWORD PTR [rax]
   14004e90d:	add    BYTE PTR [rax],al
   14004e90f:	add    bh,bh
   14004e911:	(bad)  
   14004e912:	(bad)  
   14004e913:	inc    esp
   14004e915:	(bad)  
   14004e916:	add    eax,DWORD PTR [rax]
   14004e918:	xchg   esp,eax
   14004e919:	rex.RXB add BYTE PTR [r8],r8b
   14004e91c:	(bad)  
   14004e91d:	(bad)  
   14004e91e:	(bad)  
   14004e91f:	push   rsi
   14004e921:	rex.RXB add BYTE PTR [r8],r8b
   14004e924:	add    DWORD PTR [rax],eax
   14004e926:	add    BYTE PTR [rax],al
   14004e928:	pop    rsp
   14004e929:	push   rdx
   14004e92a:	add    BYTE PTR [rax],al
   14004e92c:	sbb    eax,0xa1000000
   14004e931:	push   rdx
   14004e932:	add    BYTE PTR [rax],al
   14004e934:	add    DWORD PTR [rax],eax
   14004e936:	add    BYTE PTR [rax],al
   14004e938:	jmp    0x14004e98c
   14004e93a:	add    BYTE PTR [rax],al
   14004e93c:	and    BYTE PTR [rax],al
   14004e93e:	add    BYTE PTR [rax],al
   14004e940:	xor    BYTE PTR [rbx+0x0],dl
   14004e943:	add    BYTE PTR [rcx],al
   14004e945:	add    BYTE PTR [rax],al
   14004e947:	add    BYTE PTR [rbx+0x23000053],ch
   14004e94d:	add    BYTE PTR [rax],al
   14004e94f:	add    al,dh
   14004e951:	push   rbx
   14004e952:	add    BYTE PTR [rax],al
   14004e954:	add    DWORD PTR [rax],eax
   14004e956:	add    BYTE PTR [rax],al
   14004e958:	cmp    dl,BYTE PTR [rax+rax*1+0x0]
   14004e95c:	add    BYTE PTR es:[rax],al
   14004e95f:	add    BYTE PTR [rdi+0x54],bh
   14004e962:	add    BYTE PTR [rax],al
   14004e964:	add    DWORD PTR [rax],eax
   14004e966:	add    BYTE PTR [rax],al
   14004e968:	test   DWORD PTR [rbp+0x0],edx
   14004e96b:	add    BYTE PTR [rdx],ch
   14004e96d:	add    BYTE PTR [rax],al
   14004e96f:	add    dl,cl
   14004e971:	push   rbp
   14004e972:	add    BYTE PTR [rax],al
   14004e974:	add    DWORD PTR [rax],eax
   14004e976:	add    BYTE PTR [rax],al
   14004e978:	outs   dx,DWORD PTR ds:[rsi]
   14004e979:	push   rsi
   14004e97a:	add    BYTE PTR [rax],al
   14004e97c:	(bad)  
   14004e97d:	(bad)  
   14004e97e:	(bad)  
   14004e97f:	call   QWORD PTR [rcx]
   14004e981:	sbb    BYTE PTR [rax+rax*1],al
   14004e984:	sbb    BYTE PTR [rdx+rcx*1],dh
   14004e987:	add    BYTE PTR [rdx+rdx*2],cl
   14004e98a:	or     BYTE PTR [rax-0x5c],ah
   14004e98d:	sub    al,0x3
   14004e98f:	add    al,ah
   14004e991:	test   BYTE PTR [rax+rax*1],al
   14004e994:	(bad)  
   14004e995:	(bad)  
   14004e996:	(bad)  
   14004e997:	jmp    rax
   14004e999:	retf   
   14004e99a:	add    eax,DWORD PTR [rax]
   14004e99c:	add    BYTE PTR [rax],al
   14004e99e:	add    BYTE PTR [rax],al
   14004e9a0:	in     al,dx
   14004e9a1:	retf   
   14004e9a2:	add    eax,DWORD PTR [rax]
   14004e9a4:	add    DWORD PTR [rax],eax
   14004e9a6:	add    BYTE PTR [rax],al
   14004e9a8:	dec    ebx
   14004e9aa:	add    eax,DWORD PTR [rax]
   14004e9ac:	add    al,BYTE PTR [rax]
   14004e9ae:	add    BYTE PTR [rax],al
   14004e9b0:	adc    cl,ah
   14004e9b2:	add    eax,DWORD PTR [rax]
   14004e9b4:	add    eax,DWORD PTR [rax]
   14004e9b6:	add    BYTE PTR [rax],al
   14004e9b8:	and    eax,0x40003cc
   14004e9bd:	add    BYTE PTR [rax],al
   14004e9bf:	add    BYTE PTR [rax],bh
   14004e9c1:	int3   
   14004e9c2:	add    eax,DWORD PTR [rax]
   14004e9c4:	add    eax,0x4b000000
   14004e9c9:	int3   
   14004e9ca:	add    eax,DWORD PTR [rax]
   14004e9cc:	(bad)  
   14004e9cd:	add    BYTE PTR [rax],al
   14004e9cf:	add    BYTE PTR [rsi-0x34],bl
   14004e9d2:	add    eax,DWORD PTR [rax]
   14004e9d4:	(bad)  
   14004e9d5:	add    BYTE PTR [rax],al
   14004e9d7:	add    BYTE PTR [rcx-0x34],dh
   14004e9da:	add    eax,DWORD PTR [rax]
   14004e9dc:	or     BYTE PTR [rax],al
   14004e9de:	add    BYTE PTR [rax],al
   14004e9e0:	test   ah,cl
   14004e9e2:	add    eax,DWORD PTR [rax]
   14004e9e4:	or     DWORD PTR [rax],eax
   14004e9e6:	add    BYTE PTR [rax],al
   14004e9e8:	xchg   edi,eax
   14004e9e9:	int3   
   14004e9ea:	add    eax,DWORD PTR [rax]
   14004e9ec:	or     al,BYTE PTR [rax]
   14004e9ee:	add    BYTE PTR [rax],al
   14004e9f0:	stos   BYTE PTR es:[rdi],al
   14004e9f1:	int3   
   14004e9f2:	add    eax,DWORD PTR [rax]
   14004e9f4:	or     eax,DWORD PTR [rax]
   14004e9f6:	add    BYTE PTR [rax],al
   14004e9f8:	mov    ebp,0xc0003cc
   14004e9fd:	add    BYTE PTR [rax],al
   14004e9ff:	add    al,dl
   14004ea01:	int3   
   14004ea02:	add    eax,DWORD PTR [rax]
   14004ea04:	or     eax,0xe3000000
   14004ea09:	int3   
   14004ea0a:	add    eax,DWORD PTR [rax]
   14004ea0c:	or     eax,0xf6000000
   14004ea11:	int3   
   14004ea12:	add    eax,DWORD PTR [rax]
   14004ea14:	or     al,0x0
   14004ea16:	add    BYTE PTR [rax],al
   14004ea18:	add    cl,ch
   14004ea1a:	add    eax,DWORD PTR [rax]
   14004ea1c:	or     eax,DWORD PTR [rax]
   14004ea1e:	add    BYTE PTR [rax],al
   14004ea20:	(bad)  
   14004ea21:	int    0x3
   14004ea23:	add    BYTE PTR [rcx],cl
   14004ea25:	add    BYTE PTR [rax],al
   14004ea27:	add    BYTE PTR [rdx],bl
   14004ea29:	int    0x3
   14004ea2b:	add    BYTE PTR [rax],al
   14004ea2d:	add    BYTE PTR [rax],al
   14004ea2f:	add    BYTE PTR [rsi],ah
   14004ea31:	int    0x3
   14004ea33:	add    BYTE PTR [rbp+rax*2-0x10000],ch
   14004ea3a:	(bad)  
   14004ea3b:	call   rcx
   14004ea3d:	add    BYTE PTR [r8],r8b
   14004ea40:	or     eax,0xfd000000
   14004ea45:	add    BYTE PTR [r8],r8b
   14004ea48:	or     al,0x0
   14004ea4a:	add    BYTE PTR [rax],al
   14004ea4c:	(bad)  
   14004ea4d:	rex.RX add BYTE PTR [rax],r8b
   14004ea50:	or     eax,DWORD PTR [rax]
   14004ea52:	add    BYTE PTR [rax],al
   14004ea54:	push   rcx
   14004ea55:	rex.RX add BYTE PTR [rax],r8b
   14004ea58:	or     al,BYTE PTR [rax]
   14004ea5a:	add    BYTE PTR [rax],al
   14004ea5c:	pop    rsi
   14004ea5d:	rex.RX add BYTE PTR [rax],r8b
   14004ea60:	or     DWORD PTR [rax],eax
   14004ea62:	add    BYTE PTR [rax],al
   14004ea64:	mov    BYTE PTR [rsi+0x0],al
   14004ea67:	add    BYTE PTR [rax],cl
   14004ea69:	add    BYTE PTR [rax],al
   14004ea6b:	add    BYTE PTR [rbp+0x7000046],dl
   14004ea71:	add    BYTE PTR [rax],al
   14004ea73:	add    BYTE PTR [rdx+0x6000046],ah
   14004ea79:	add    BYTE PTR [rax],al
   14004ea7b:	add    BYTE PTR [rdi+0x5000046],ch
   14004ea81:	add    BYTE PTR [rax],al
   14004ea83:	add    BYTE PTR [rsi+rax*2+0x40000],bh
   14004ea8a:	add    BYTE PTR [rax],al
   14004ea8c:	leave  
   14004ea8d:	rex.RX add BYTE PTR [rax],r8b
   14004ea90:	add    eax,DWORD PTR [rax]
   14004ea92:	add    BYTE PTR [rax],al
   14004ea94:	lock rex.RX add BYTE PTR [rax],r8b
   14004ea98:	add    al,BYTE PTR [rax]
   14004ea9a:	add    BYTE PTR [rax],al
   14004ea9c:	std    
   14004ea9d:	rex.RX add BYTE PTR [rax],r8b
   14004eaa0:	add    DWORD PTR [rax],eax
   14004eaa2:	add    BYTE PTR [rax],al
   14004eaa4:	and    al,0x47
   14004eaa6:	add    BYTE PTR [rax],al
   14004eaa8:	add    BYTE PTR [rax],al
   14004eaaa:	add    BYTE PTR [rax],al
   14004eaac:	rex.WRX
   14004eaad:	rex.RXB add BYTE PTR [r8],r8b
   14004eab0:	(bad)  
   14004eab1:	(bad)  
   14004eab2:	(bad)  
   14004eab3:	call   QWORD PTR [rcx]
   14004eab5:	sbb    al,BYTE PTR [rsi]
   14004eab7:	add    BYTE PTR [rdx],bl
   14004eab9:	xor    al,0xb
   14004eabb:	add    BYTE PTR [rsi],cl
   14004eabd:	push   rdx
   14004eabe:	or     dh,BYTE PTR [rax+0x9]
   14004eac1:	(bad)  
   14004eac2:	or     BYTE PTR [rax-0x5c],dl
   14004eac5:	sub    al,0x3
   14004eac7:	add    BYTE PTR [rax],dl
   14004eac9:	test   DWORD PTR [rax+rax*1],eax
   14004eacc:	(bad)  
   14004eacd:	(bad)  
   14004eace:	(bad)  
   14004eacf:	call   QWORD PTR [rsi-0x36]
   14004ead2:	add    eax,DWORD PTR [rax]
   14004ead4:	(bad)  
   14004ead5:	(bad)  
   14004ead6:	(bad)  
   14004ead7:	jmp    QWORD PTR [rdx-0x36]
   14004eada:	add    eax,DWORD PTR [rax]
   14004eadc:	(bad)  
   14004eadd:	(bad)  
   14004eade:	(bad)  
   14004eadf:	push   QWORD PTR [rdx-0x36]
   14004eae2:	add    eax,DWORD PTR [rax]
   14004eae4:	add    al,BYTE PTR [rax]
   14004eae6:	add    BYTE PTR [rax],al
   14004eae8:	jle    0x14004eab4
   14004eaea:	add    eax,DWORD PTR [rax]
   14004eaec:	add    al,BYTE PTR [rax]
   14004eaee:	add    BYTE PTR [rax],al
   14004eaf0:	mov    cl,dl
   14004eaf2:	add    eax,DWORD PTR [rax]
   14004eaf4:	add    al,0x0
   14004eaf6:	add    BYTE PTR [rax],al
   14004eaf8:	popf   
   14004eaf9:	retf   0x3
   14004eafc:	add    eax,0xb0000000
   14004eb01:	retf   0x3
   14004eb04:	(bad)  
   14004eb05:	add    BYTE PTR [rax],al
   14004eb07:	add    bl,al
   14004eb09:	retf   0x3
   14004eb0c:	(bad)  
   14004eb0d:	add    BYTE PTR [rax],al
   14004eb0f:	add    dh,dl
   14004eb11:	retf   0x3
   14004eb14:	or     BYTE PTR [rax],al
   14004eb16:	add    BYTE PTR [rax],al
   14004eb18:	jmp    0x14904eee7
   14004eb1d:	add    BYTE PTR [rax],al
   14004eb1f:	add    ah,bh
   14004eb21:	retf   0x3
   14004eb24:	or     al,BYTE PTR [rax]
   14004eb26:	add    BYTE PTR [rax],al
   14004eb28:	bswap  ebx
   14004eb2a:	add    eax,DWORD PTR [rax]
   14004eb2c:	or     eax,DWORD PTR [rax]
   14004eb2e:	add    BYTE PTR [rax],al
   14004eb30:	and    cl,bl
   14004eb32:	add    eax,DWORD PTR [rax]
   14004eb34:	or     al,0x0
   14004eb36:	add    BYTE PTR [rax],al
   14004eb38:	xor    eax,0xc0003cb
   14004eb3d:	add    BYTE PTR [rax],al
   14004eb3f:	add    BYTE PTR [rcx-0x35],al
   14004eb42:	add    eax,DWORD PTR [rax]
   14004eb44:	(bad)  
   14004eb45:	add    BYTE PTR [rax],al
   14004eb47:	add    BYTE PTR [rbx+rcx*8+0x3],dl
   14004eb4b:	add    BYTE PTR [rdi],cl
   14004eb4d:	add    BYTE PTR [rax],al
   14004eb4f:	add    BYTE PTR [rdi-0x35],ah
   14004eb52:	add    eax,DWORD PTR [rax]
   14004eb54:	sldt   WORD PTR [rax]
   14004eb57:	add    BYTE PTR [rbx-0x35],dh
   14004eb5a:	add    eax,DWORD PTR [rax]
   14004eb5c:	adc    DWORD PTR [rax],eax
   14004eb5e:	add    BYTE PTR [rax],al
   14004eb60:	xchg   bl,cl
   14004eb62:	add    eax,DWORD PTR [rax]
   14004eb64:	adc    DWORD PTR [rax],eax
   14004eb66:	add    BYTE PTR [rax],al
   14004eb68:	xchg   edx,eax
   14004eb69:	retf   
   14004eb6a:	add    eax,DWORD PTR [rax]
   14004eb6c:	adc    eax,DWORD PTR [rax]
   14004eb6e:	add    BYTE PTR [rax],al
   14004eb70:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004eb71:	retf   
   14004eb72:	add    eax,DWORD PTR [rax]
   14004eb74:	adc    eax,DWORD PTR [rax]
   14004eb76:	add    BYTE PTR [rax],al
   14004eb78:	mov    cl,0xcb
   14004eb7a:	add    eax,DWORD PTR [rax]
   14004eb7c:	push   rsp
   14004eb7d:	rex.XB add BYTE PTR [r8],al
   14004eb80:	(bad)  
   14004eb81:	(bad)  
   14004eb82:	(bad)  
   14004eb83:	jmp    QWORD PTR [rcx+0x2000043]
   14004eb89:	add    BYTE PTR [rax],al
   14004eb8b:	add    bh,cl
   14004eb8d:	rex.XB add BYTE PTR [r8],al
   14004eb90:	add    al,0x0
   14004eb92:	add    BYTE PTR [rax],al
   14004eb94:	fild   WORD PTR [rbx+0x0]
   14004eb97:	add    BYTE PTR [rip+0xffffffffed000000],al        # 0x12d04eb9d
   14004eb9d:	rex.XB add BYTE PTR [r8],al
   14004eba0:	(bad)  
   14004eba1:	add    BYTE PTR [rax],al
   14004eba3:	add    bl,bh
   14004eba5:	rex.XB add BYTE PTR [r8],al
   14004eba8:	(bad)  
   14004eba9:	add    BYTE PTR [rax],al
   14004ebab:	add    BYTE PTR [rcx],cl
   14004ebad:	add    BYTE PTR [rax],r8b
   14004ebb0:	or     BYTE PTR [rax],al
   14004ebb2:	add    BYTE PTR [rax],al
   14004ebb4:	(bad)  
   14004ebb5:	add    BYTE PTR [rax],r8b
   14004ebb8:	or     DWORD PTR [rax],eax
   14004ebba:	add    BYTE PTR [rax],al
   14004ebbc:	and    eax,0xa000044
   14004ebc1:	add    BYTE PTR [rax],al
   14004ebc3:	add    BYTE PTR [rbx],dh
   14004ebc5:	add    BYTE PTR [rax],r8b
   14004ebc8:	or     eax,DWORD PTR [rax]
   14004ebca:	add    BYTE PTR [rax],al
   14004ebcc:	rex.B
   14004ebcd:	add    BYTE PTR [rax],r8b
   14004ebd0:	or     al,0x0
   14004ebd2:	add    BYTE PTR [rax],al
   14004ebd4:	(bad)  
   14004ebd5:	add    BYTE PTR [rax],r8b
   14004ebd8:	(bad)  
   14004ebd9:	add    BYTE PTR [rax],al
   14004ebdb:	add    BYTE PTR [rdi+0x44],ch
   14004ebde:	add    BYTE PTR [rax],al
   14004ebe0:	sldt   WORD PTR [rax]
   14004ebe3:	add    BYTE PTR [rdi+0x11000044],cl
   14004ebe9:	add    BYTE PTR [rax],al
   14004ebeb:	add    BYTE PTR [rdi+0x13000044],ch
   14004ebf1:	add    BYTE PTR [rax],al
   14004ebf3:	add    bh,cl
   14004ebf5:	add    BYTE PTR [rax],r8b
   14004ebf8:	adc    eax,0x6c000000
   14004ebfd:	add    BYTE PTR [r8],r8b
   14004ec00:	(bad)  
   14004ec01:	(bad)  
   14004ec02:	(bad)  
   14004ec03:	call   FWORD PTR [rcx]
   14004ec05:	sbb    eax,DWORD PTR [rax+rax*1]
   14004ec08:	or     al,0x34
   14004ec0a:	adc    eax,DWORD PTR [rax]
   14004ec0c:	or     al,0xd2
   14004ec0e:	or     BYTE PTR [rax+0x3c],dh
   14004ec11:	in     eax,0x2
   14004ec13:	add    BYTE PTR [rax+0x0],ch
   14004ec16:	add    BYTE PTR [rax],al
   14004ec18:	add    DWORD PTR [rcx],ebx
   14004ec1a:	(bad)  
   14004ec1b:	add    BYTE PTR [rcx],bl
   14004ec1d:	xor    dl,BYTE PTR [rip+0x127013e0]        # 0x152750003
   14004ec23:	(bad)  
   14004ec24:	adc    DWORD PTR [rax+0x10],edx
   14004ec27:	xor    BYTE PTR [rcx],al
   14004ec29:	sbb    DWORD PTR [rdx],ecx
   14004ec2b:	add    BYTE PTR [rcx],bl
   14004ec2d:	je     0x14004ec3c
   14004ec2f:	add    BYTE PTR [rcx],bl
   14004ec31:	fs or  al,0x0
   14004ec34:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   14004ec38:	sbb    DWORD PTR [rdx+rcx*1],esi
   14004ec3b:	add    BYTE PTR [rcx],bl
   14004ec3d:	jb     0x14004ec54
   14004ec3f:	lock adc DWORD PTR [rdi],ebx
   14004ec42:	or     BYTE PTR [rax],al
   14004ec44:	(bad)  
   14004ec45:	push   rsp
   14004ec46:	or     al,0x0
   14004ec48:	sbb    esi,DWORD PTR [rdx+rcx*1]
   14004ec4b:	add    BYTE PTR [rdi],cl
   14004ec4d:	push   rdx
   14004ec4e:	or     esp,eax
   14004ec50:	or     DWORD PTR [rax+0x8],esi
   14004ec53:	(bad)  
   14004ec54:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ec55:	sub    al,0x3
   14004ec57:	add    BYTE PTR [rax-0x7b],al
   14004ec5a:	add    al,0x0
   14004ec5c:	(bad)  
   14004ec5d:	(bad)  
   14004ec5e:	(bad)  
   14004ec5f:	(bad)  
   14004ec60:	(bad)  
   14004ec61:	rol    BYTE PTR [rbx],1
   14004ec63:	add    BYTE PTR [rax],al
   14004ec65:	add    BYTE PTR [rax],al
   14004ec67:	add    BYTE PTR [rcx+rdx*8],ah
   14004ec6a:	add    eax,DWORD PTR [rax]
   14004ec6c:	pop    rsp
   14004ec6d:	fld    DWORD PTR [rax]
   14004ec6f:	add    bh,bh
   14004ec71:	(bad)  
   14004ec72:	(bad)  
   14004ec73:	dec    ebp
   14004ec75:	fld    DWORD PTR [rax]
   14004ec77:	add    BYTE PTR [rax],al
   14004ec79:	add    BYTE PTR [rax],al
   14004ec7b:	add    dl,bl
   14004ec7d:	fld    DWORD PTR [rax]
   14004ec7f:	add    bh,bh
   14004ec81:	(bad)  
   14004ec82:	(bad)  
   14004ec83:	call   FWORD PTR [rip+0xda]        # 0x14004ed63
   14004ec89:	add    BYTE PTR [rax],al
   14004ec8b:	add    BYTE PTR [rdi],bl
   14004ec8d:	fiadd  DWORD PTR [rax]
   14004ec8f:	add    bh,bh
   14004ec91:	(bad)  
   14004ec92:	(bad)  
   14004ec93:	jmp    FWORD PTR [rdx]
   14004ec95:	fiadd  DWORD PTR [rax]
   14004ec97:	add    BYTE PTR [rax],al
   14004ec99:	add    BYTE PTR [rax],al
   14004ec9b:	add    BYTE PTR [rcx],al
   14004ec9d:	clts   
   14004ec9f:	add    BYTE PTR [rdi],cl
   14004eca1:	fs (bad) 
   14004eca3:	add    BYTE PTR [rdi],cl
   14004eca5:	xor    al,0x6
   14004eca7:	add    BYTE PTR [rdi],cl
   14004eca9:	xor    cl,BYTE PTR [rbx]
   14004ecab:	jo     0x14004ecbe
   14004ecad:	sbb    eax,DWORD PTR [rax+rax*1]
   14004ecb0:	sbb    esi,DWORD PTR [rsp+rcx*1]
   14004ecb3:	add    BYTE PTR [rdi],cl
   14004ecb5:	jb     0x14004ecc2
   14004ecb7:	jo     0x14004ec5d
   14004ecb9:	sub    al,0x3
   14004ecbb:	add    BYTE PTR [rax-0x7b],dh
   14004ecbe:	add    al,0x0
   14004ecc0:	(bad)  
   14004ecc1:	(bad)  
   14004ecc2:	(bad)  
   14004ecc3:	inc    DWORD PTR [rax]
   14004ecc5:	iret   
   14004ecc6:	add    eax,DWORD PTR [rax]
   14004ecc8:	add    BYTE PTR [rax],al
   14004ecca:	add    BYTE PTR [rax],al
   14004eccc:	hlt    
   14004eccd:	(bad)  
   14004ecce:	add    eax,DWORD PTR [rax]
   14004ecd0:	(bad)  
   14004ecd1:	(bad)  
   14004ecd2:	add    BYTE PTR [rax],al
   14004ecd4:	(bad)  
   14004ecd5:	(bad)  
   14004ecd6:	(bad)  
   14004ecd7:	jmp    rbp
   14004ecd9:	(bad)  
   14004ecda:	add    BYTE PTR [rax],al
   14004ecdc:	add    BYTE PTR [rax],al
   14004ecde:	add    BYTE PTR [rax],al
   14004ece0:	adc    DWORD PTR [rsi+rax*1],ebx
   14004ece3:	add    BYTE PTR [rsp+riz*2],bl
   14004ece6:	or     al,0x0
   14004ece8:	sbb    BYTE PTR [rbx+rcx*1],dh
   14004eceb:	add    BYTE PTR [rdx+rsi*2],cl
   14004ecee:	or     BYTE PTR [rax-0x5c],dh
   14004ecf1:	sub    al,0x3
   14004ecf3:	add    BYTE PTR [rax+0xc000485],ah
   14004ecf9:	(bad)  
   14004ecfa:	add    BYTE PTR [rax],al
   14004ecfc:	(bad)  
   14004ecfd:	(bad)  
   14004ecfe:	(bad)  
   14004ecff:	push   QWORD PTR [rcx]
   14004ed01:	(bad)  
   14004ed02:	add    BYTE PTR [rax],al
   14004ed04:	add    BYTE PTR [rax],al
   14004ed06:	add    BYTE PTR [rax],al
   14004ed08:	adc    DWORD PTR [rax],esp
   14004ed0a:	or     BYTE PTR [rax],al
   14004ed0c:	and    BYTE PTR [rbx+rcx*1+0x0],ah
   14004ed10:	sbb    al,0x54
   14004ed12:	or     al,BYTE PTR [rax]
   14004ed14:	sbb    BYTE PTR [rax+rcx*1],dh
   14004ed17:	add    BYTE PTR [rdx+rdx*2],cl
   14004ed1a:	or     BYTE PTR [rax-0x5c],dh
   14004ed1d:	sub    al,0x3
   14004ed1f:	add    al,dl
   14004ed21:	test   DWORD PTR [rax+rax*1],eax
   14004ed24:	(bad)  
   14004ed25:	(bad)  
   14004ed26:	(bad)  
   14004ed27:	dec    esp
   14004ed29:	rol    BYTE PTR [rbx],1
   14004ed2b:	add    BYTE PTR [rax],al
   14004ed2d:	add    BYTE PTR [rax],al
   14004ed2f:	add    dl,dh
   14004ed31:	rol    BYTE PTR [rbx],1
   14004ed33:	add    BYTE PTR [rbp+rdx*8+0x0],ah
   14004ed37:	add    bh,bh
   14004ed39:	(bad)  
   14004ed3a:	(bad)  
   14004ed3b:	(bad)  
   14004ed3c:	jmp    0x14004ee16
   14004ed41:	add    BYTE PTR [rax],al
   14004ed43:	add    BYTE PTR [rcx],dl
   14004ed45:	and    al,0xa
   14004ed47:	add    BYTE PTR [rsp+riz*2],ah
   14004ed4a:	or     eax,0xc542000
   14004ed4f:	add    BYTE PTR [rsp+rsi*1],bl
   14004ed52:	or     al,BYTE PTR [rax]
   14004ed54:	adc    BYTE PTR [rdx+0xc],dl
   14004ed57:	lock or ah,al
   14004ed5a:	or     BYTE PTR [rax-0x5c],dh
   14004ed5d:	sub    al,0x3
   14004ed5f:	add    BYTE PTR [rax],al
   14004ed61:	xchg   BYTE PTR [rax+rax*1],al
   14004ed64:	(bad)  
   14004ed65:	(bad)  
   14004ed66:	(bad)  
   14004ed67:	inc    DWORD PTR [rax]
	...
   14004ed75:	add    BYTE PTR [rax],al
   14004ed77:	add    BYTE PTR [rdi+0x400003d9],dh
   14004ed7d:	(bad)  
   14004ed7e:	add    BYTE PTR [rax],al
   14004ed80:	(bad)  
   14004ed81:	(bad)  
   14004ed82:	(bad)  
   14004ed83:	(bad)  
   14004ed84:	cmp    eax,0xd5
   14004ed89:	add    BYTE PTR [rax],al
   14004ed8b:	add    BYTE PTR [rcx],al
   14004ed8d:	sbb    cl,BYTE PTR [rcx]
   14004ed8f:	add    BYTE PTR [rdx],bl
   14004ed91:	movabs ds:0xc010d012e014f016,al
   14004ed9a:	(bad)  
   14004ed9b:	jo     0x14004edaa
   14004ed9d:	(bad)  
   14004ed9e:	or     al,0x50
   14004eda0:	or     esi,DWORD PTR [rax]
   14004eda2:	add    BYTE PTR [rax],al
   14004eda4:	add    DWORD PTR [rcx],ebx
   14004eda6:	or     al,BYTE PTR [rax]
   14004eda8:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   14004edac:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   14004edb0:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14004edb4:	sbb    DWORD PTR [rax+rcx*1],esi
   14004edb7:	add    BYTE PTR [rcx],bl
   14004edb9:	push   rdx
   14004edba:	adc    eax,0x41811e0
   14004edbf:	add    BYTE PTR [rax],bl
   14004edc1:	xor    al,0x9
   14004edc3:	add    BYTE PTR [rdx],cl
   14004edc5:	push   rdx
   14004edc6:	(bad)  
   14004edc7:	jo     0x14004ed6d
   14004edc9:	sub    al,0x3
   14004edcb:	add    BYTE PTR [rax],dh
   14004edcd:	xchg   BYTE PTR [rax+rax*1],al
   14004edd0:	(bad)  
   14004edd1:	(bad)  
   14004edd2:	(bad)  
   14004edd3:	inc    esp
   14004edd5:	retf   
   14004edd6:	add    eax,DWORD PTR [rax]
   14004edd8:	sub    al,0xcd
   14004edda:	add    BYTE PTR [rax],al
   14004eddc:	(bad)  
   14004eddd:	(bad)  
   14004edde:	(bad)  
   14004eddf:	jmp    QWORD PTR [rdx-0x33]
   14004ede2:	add    BYTE PTR [rax],al
   14004ede4:	add    BYTE PTR [rax],al
   14004ede6:	add    BYTE PTR [rax],al
   14004ede8:	fwait
   14004ede9:	int    0x0
   14004edeb:	add    bh,bh
   14004eded:	(bad)  
   14004edee:	(bad)  
   14004edef:	call   QWORD PTR [rcx]
   14004edf1:	(bad)  
   14004edf2:	or     BYTE PTR [rax],al
   14004edf4:	(bad)  
   14004edf5:	ltr    WORD PTR fs:[rcx]
   14004edf9:	xor    al,0xe
   14004edfb:	add    BYTE PTR [rdx+rdx*4],cl
   14004edfe:	add    eax,0x27003e0
   14004ee03:	push   rax
   14004ee04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ee05:	sub    al,0x3
   14004ee07:	add    BYTE PTR [rax-0x7a],ah
   14004ee0a:	add    al,0x0
   14004ee0c:	(bad)  
   14004ee0d:	(bad)  
   14004ee0e:	(bad)  
   14004ee0f:	jmp    QWORD PTR [rax+rdx*8]
   14004ee12:	add    eax,DWORD PTR [rax]
   14004ee14:	(bad)  
   14004ee15:	(bad)  
   14004ee16:	(bad)  
   14004ee17:	push   QWORD PTR [rax]
   14004ee19:	rol    BYTE PTR [rbx],1
   14004ee1b:	add    BYTE PTR [rcx],al
   14004ee1d:	add    BYTE PTR [rax],al
   14004ee1f:	add    BYTE PTR [rax+rdx*8],bh
   14004ee22:	add    eax,DWORD PTR [rax]
   14004ee24:	add    DWORD PTR [rax],eax
   14004ee26:	add    BYTE PTR [rax],al
   14004ee28:	rex.W rol BYTE PTR [rbx],1
   14004ee2b:	add    BYTE PTR [rbx],al
   14004ee2d:	add    BYTE PTR [rax],al
   14004ee2f:	add    BYTE PTR [rax+rdx*8+0x3],dl
   14004ee33:	add    BYTE PTR [rbx],al
   14004ee35:	add    BYTE PTR [rax],al
   14004ee37:	add    BYTE PTR [rax-0x30],ah
   14004ee3a:	add    eax,DWORD PTR [rax]
   14004ee3c:	add    eax,DWORD PTR [rax]
   14004ee3e:	add    BYTE PTR [rax],al
   14004ee40:	add    BYTE PTR [rax],al
   14004ee42:	add    BYTE PTR [rax],al
   14004ee44:	add    DWORD PTR [rax],eax
   14004ee46:	add    BYTE PTR [rax],al
   14004ee48:	add    BYTE PTR [rax],al
   14004ee4a:	add    BYTE PTR [rax],al
   14004ee4c:	(bad)  
   14004ee4d:	(bad)  
   14004ee4e:	(bad)  
   14004ee4f:	inc    DWORD PTR [rax]
   14004ee51:	add    BYTE PTR [rax],al
   14004ee53:	add    BYTE PTR [rip+0x6c000000],al        # 0x1ac04ee59
   14004ee59:	rol    BYTE PTR [rbx],1
   14004ee5b:	add    BYTE PTR [rip+0x78000000],al        # 0x1b804ee61
   14004ee61:	rol    BYTE PTR [rbx],1
   14004ee63:	add    BYTE PTR [rip+0x0],al        # 0x14004ee69
   14004ee69:	add    BYTE PTR [rax],al
   14004ee6b:	add    BYTE PTR [rbx],al
   14004ee6d:	add    BYTE PTR [rax],al
   14004ee6f:	add    BYTE PTR [rax],al
   14004ee71:	add    BYTE PTR [rax],al
   14004ee73:	add    BYTE PTR [rcx],al
   14004ee75:	add    BYTE PTR [rax],al
   14004ee77:	add    BYTE PTR [rax],al
   14004ee79:	add    BYTE PTR [rax],al
   14004ee7b:	add    bh,bh
   14004ee7d:	(bad)  
   14004ee7e:	(bad)  
   14004ee7f:	inc    DWORD PTR [rax]
   14004ee81:	add    BYTE PTR [rax],al
   14004ee83:	add    BYTE PTR [rdx],cl
   14004ee85:	add    BYTE PTR [rax],al
   14004ee87:	add    BYTE PTR [rax+rdx*8+0xa0003],al
   14004ee8e:	add    BYTE PTR [rax],al
   14004ee90:	nop
   14004ee91:	rol    BYTE PTR [rbx],1
   14004ee93:	add    BYTE PTR [rip+0xffffffff9c000000],al        # 0xdc04ee99
   14004ee99:	rol    BYTE PTR [rbx],1
   14004ee9b:	add    BYTE PTR [rbx],al
   14004ee9d:	add    BYTE PTR [rax],al
   14004ee9f:	add    BYTE PTR [rax+0x10003d0],ch
   14004eea5:	add    BYTE PTR [rax],al
   14004eea7:	add    BYTE PTR [rax+rdx*8-0xfffd],dh
   14004eeae:	(bad)  
   14004eeaf:	inc    eax
   14004eeb1:	rol    BYTE PTR [rbx],1
   14004eeb3:	add    BYTE PTR [rax-0x36],ch
   14004eeb6:	add    BYTE PTR [rax],al
   14004eeb8:	(bad)  
   14004eeb9:	(bad)  
   14004eeba:	(bad)  
   14004eebb:	jmp    QWORD PTR [rbp+0x10000ca]
   14004eec1:	add    BYTE PTR [rax],al
   14004eec3:	add    BYTE PTR [rsi+0x30000ca],bh
   14004eec9:	add    BYTE PTR [rax],al
   14004eecb:	add    al,dl
   14004eecd:	retf   0x0
   14004eed0:	add    eax,0x78000000
   14004eed5:	retf   
   14004eed6:	add    BYTE PTR [rax],al
   14004eed8:	or     al,BYTE PTR [rax]
   14004eeda:	add    BYTE PTR [rax],al
   14004eedc:	sub    eax,0xf0000cc
   14004eee1:	add    BYTE PTR [rax],al
   14004eee3:	add    BYTE PTR [rdx],bh
   14004eee5:	int3   
   14004eee6:	add    BYTE PTR [rax],al
   14004eee8:	or     al,BYTE PTR [rax]
   14004eeea:	add    BYTE PTR [rax],al
   14004eeec:	ror    esp,0x0
   14004eeef:	add    BYTE PTR [rip+0xffffffffd1000000],al        # 0x11104eef5
   14004eef5:	int3   
   14004eef6:	add    BYTE PTR [rax],al
   14004eef8:	add    eax,DWORD PTR [rax]
   14004eefa:	add    BYTE PTR [rax],al
   14004eefc:	loope  0x14004eeca
   14004eefe:	add    BYTE PTR [rax],al
   14004ef00:	add    DWORD PTR [rax],eax
   14004ef02:	add    BYTE PTR [rax],al
   14004ef04:	cli    
   14004ef05:	int3   
   14004ef06:	add    BYTE PTR [rax],al
   14004ef08:	(bad)  
   14004ef09:	(bad)  
   14004ef0a:	(bad)  
   14004ef0b:	call   FWORD PTR [rcx]
   14004ef0d:	cmp    ecx,DWORD PTR [rbx]
   14004ef0f:	add    BYTE PTR [rdx],ch
   14004ef11:	outs   dx,DWORD PTR fs:[rsi]
   14004ef13:	add    BYTE PTR [rsi],ah
   14004ef15:	xor    al,0x6c
   14004ef17:	add    BYTE PTR [rcx],bl
   14004ef19:	add    DWORD PTR [rsi+0x0],esp
   14004ef1c:	or     esi,eax
   14004ef1e:	or     eax,esp
   14004ef20:	(bad)  
   14004ef21:	rol    BYTE PTR [rip+0x500470],0x0        # 0x14054f398
   14004ef28:	jl     0x14004eeb5
   14004ef2a:	add    eax,DWORD PTR [rax]
   14004ef2c:	nop
   14004ef2d:	xchg   BYTE PTR [rax+rax*1],al
   14004ef30:	and    al,BYTE PTR [rbx]
   14004ef32:	add    BYTE PTR [rax],al
   14004ef34:	(bad)  
   14004ef35:	(bad)  
   14004ef36:	(bad)  
   14004ef37:	call   QWORD PTR [rsi-0x31]
   14004ef3a:	add    eax,DWORD PTR [rax]
   14004ef3c:	add    BYTE PTR [rax],al
   14004ef3e:	add    BYTE PTR [rax],al
   14004ef40:	(bad)  
   14004ef41:	iret   
   14004ef42:	add    eax,DWORD PTR [rax]
   14004ef44:	add    BYTE PTR [rax],al
   14004ef46:	add    BYTE PTR [rax],al
   14004ef48:	outs   dx,BYTE PTR ds:[rsi]
   14004ef49:	iret   
   14004ef4a:	add    eax,DWORD PTR [rax]
   14004ef4c:	add    al,BYTE PTR [rax]
   14004ef4e:	add    BYTE PTR [rax],al
   14004ef50:	jp     0x14004ef21
   14004ef52:	add    eax,DWORD PTR [rax]
   14004ef54:	add    al,BYTE PTR [rax]
   14004ef56:	add    BYTE PTR [rax],al
   14004ef58:	xchg   bh,cl
   14004ef5a:	add    eax,DWORD PTR [rax]
   14004ef5c:	add    al,0x0
   14004ef5e:	add    BYTE PTR [rax],al
   14004ef60:	xchg   edx,eax
   14004ef61:	iret   
   14004ef62:	add    eax,DWORD PTR [rax]
   14004ef64:	add    al,0x0
   14004ef66:	add    BYTE PTR [rax],al
   14004ef68:	sahf   
   14004ef69:	iret   
   14004ef6a:	add    eax,DWORD PTR [rax]
   14004ef6c:	add    al,0x0
   14004ef6e:	add    BYTE PTR [rax],al
   14004ef70:	stos   BYTE PTR es:[rdi],al
   14004ef71:	iret   
   14004ef72:	add    eax,DWORD PTR [rax]
   14004ef74:	add    al,0x0
   14004ef76:	add    BYTE PTR [rax],al
   14004ef78:	mov    dh,0xcf
   14004ef7a:	add    eax,DWORD PTR [rax]
   14004ef7c:	add    al,BYTE PTR [rax]
	...
   14004ef8a:	add    BYTE PTR [rax],al
   14004ef8c:	(bad)  
   14004ef8d:	(bad)  
   14004ef8e:	(bad)  
   14004ef8f:	inc    DWORD PTR [rax]
   14004ef91:	add    BYTE PTR [rax],al
   14004ef93:	add    BYTE PTR [rax+rax*1],al
   14004ef96:	add    BYTE PTR [rax],al
   14004ef98:	ret    0x3cf
   14004ef9b:	add    BYTE PTR [rax+rax*1],al
   14004ef9e:	add    BYTE PTR [rax],al
   14004efa0:	(bad)  
   14004efa1:	iret   
   14004efa2:	add    eax,DWORD PTR [rax]
   14004efa4:	add    al,BYTE PTR [rax]
   14004efa6:	add    BYTE PTR [rax],al
   14004efa8:	fcmove st,st(7)
   14004efaa:	add    eax,DWORD PTR [rax]
   14004efac:	add    BYTE PTR [rax],al
   14004efae:	add    BYTE PTR [rax],al
   14004efb0:	out    0xcf,al
   14004efb2:	add    eax,DWORD PTR [rax]
   14004efb4:	(bad)  
   14004efb5:	(bad)  
   14004efb6:	(bad)  
   14004efb7:	push   rdx
   14004efb9:	iret   
   14004efba:	add    eax,DWORD PTR [rax]
   14004efbc:	sbb    al,0xc7
   14004efbe:	add    BYTE PTR [rax],al
   14004efc0:	(bad)  
   14004efc1:	(bad)  
   14004efc2:	(bad)  
   14004efc3:	jmp    FWORD PTR [rdi-0x39]
   14004efc6:	add    BYTE PTR [rax],al
   14004efc8:	add    BYTE PTR [rax],al
   14004efca:	add    BYTE PTR [rax],al
   14004efcc:	mov    edi,eax
   14004efce:	add    BYTE PTR [rax],al
   14004efd0:	add    al,BYTE PTR [rax]
   14004efd2:	add    BYTE PTR [rax],al
   14004efd4:	movabs ds:0xdc000000040000c7,eax
   14004efdd:	mov    DWORD PTR [rax],0x500
   14004efe3:	add    dl,ch
   14004efe5:	mov    DWORD PTR [rax],0x400
   14004efeb:	add    BYTE PTR [rbp-0x38],al
   14004efee:	add    BYTE PTR [rax],al
   14004eff0:	(bad)  
   14004eff1:	add    BYTE PTR [rax],al
   14004eff3:	add    BYTE PTR [rbx-0x38],dl
   14004eff6:	add    BYTE PTR [rax],al
   14004eff8:	add    al,0x0
   14004effa:	add    BYTE PTR [rax],al
   14004effc:	sbb    eax,0xc0000c9
   14004f001:	add    BYTE PTR [rax],al
   14004f003:	add    BYTE PTR [rip+0x40000c9],ch        # 0x14404f0d2
   14004f009:	add    BYTE PTR [rax],al
   14004f00b:	add    ch,bl
   14004f00d:	leave  
   14004f00e:	add    BYTE PTR [rax],al
   14004f010:	add    al,BYTE PTR [rax]
   14004f012:	add    BYTE PTR [rax],al
   14004f014:	cli    
   14004f015:	leave  
   14004f016:	add    BYTE PTR [rax],al
   14004f018:	add    BYTE PTR [rax],al
   14004f01a:	add    BYTE PTR [rax],al
   14004f01c:	sbb    al,0xca
   14004f01e:	add    BYTE PTR [rax],al
   14004f020:	(bad)  
   14004f021:	(bad)  
   14004f022:	(bad)  
   14004f023:	call   FWORD PTR [rcx]
   14004f025:	sub    al,BYTE PTR [rbx]
   14004f027:	add    BYTE PTR [rdi],cl
   14004f029:	add    DWORD PTR [rdx],ecx
   14004f02b:	add    al,BYTE PTR [rdx]
   14004f02d:	xor    BYTE PTR [rax],al
   14004f02f:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   14004f033:	add    al,al
   14004f035:	xchg   BYTE PTR [rax+rax*1],al
   14004f038:	rex.X adc BYTE PTR [rax],al
   14004f03b:	add    bh,bh
   14004f03d:	(bad)  
   14004f03e:	(bad)  
   14004f03f:	(bad)  
   14004f040:	dec    bh
   14004f042:	add    eax,DWORD PTR [rax]
   14004f044:	rex.WR mov BYTE PTR [rax],0x0
   14004f048:	(bad)  
   14004f049:	(bad)  
   14004f04a:	(bad)  
   14004f04b:	(bad)  
   14004f04c:	jns    0x14004f014
   14004f04e:	add    BYTE PTR [rax],al
   14004f050:	add    BYTE PTR [rax],al
   14004f052:	add    BYTE PTR [rax],al
   14004f054:	adc    DWORD PTR [rax],ebx
   14004f056:	(bad)  
   14004f057:	add    BYTE PTR [rax],dl
   14004f059:	movabs ds:0x60047005e007f009,al
   14004f062:	add    esi,DWORD PTR [rax]
   14004f064:	add    dl,BYTE PTR [rax+0x0]
   14004f067:	add    BYTE PTR [rsp+rbp*1-0x790ffffd],ah
   14004f06e:	add    al,0x0
   14004f070:	(bad)  
   14004f071:	(bad)  
   14004f072:	(bad)  
   14004f073:	call   QWORD PTR [rbp+0x3d5]
   14004f079:	add    BYTE PTR [rax],al
   14004f07b:	add    BYTE PTR [rcx+0x10003d5],ah
   14004f081:	add    BYTE PTR [rax],al
   14004f083:	add    BYTE PTR [rbp+0x20003d5],ch
   14004f089:	add    BYTE PTR [rax],al
   14004f08b:	add    BYTE PTR [rcx+0x30003d5],bh
   14004f091:	add    BYTE PTR [rax],al
   14004f093:	add    ch,al
   14004f095:	(bad)  
   14004f096:	add    eax,DWORD PTR [rax]
   14004f098:	add    eax,DWORD PTR [rax]
   14004f09a:	add    BYTE PTR [rax],al
   14004f09c:	rcl    ebp,1
   14004f09e:	add    eax,DWORD PTR [rax]
   14004f0a0:	add    al,BYTE PTR [rax]
   14004f0a2:	add    BYTE PTR [rax],al
   14004f0a4:	fst    st(5)
   14004f0a6:	add    eax,DWORD PTR [rax]
   14004f0a8:	add    DWORD PTR [rax],eax
   14004f0aa:	add    BYTE PTR [rax],al
   14004f0ac:	jmp    0x14404f486
   14004f0b1:	(bad)  
   14004f0b2:	add    BYTE PTR [rax],al
   14004f0b4:	(bad)  
   14004f0b5:	(bad)  
   14004f0b6:	(bad)  
   14004f0b7:	inc    DWORD PTR [rbx-0x3c]
   14004f0ba:	add    BYTE PTR [rax],al
   14004f0bc:	add    BYTE PTR [rax],al
   14004f0be:	add    BYTE PTR [rax],al
   14004f0c0:	push   rax
   14004f0c1:	(bad)  
   14004f0c2:	add    BYTE PTR [rax],al
   14004f0c4:	add    DWORD PTR [rax],eax
   14004f0c6:	add    BYTE PTR [rax],al
   14004f0c8:	mov    al,ah
   14004f0ca:	add    BYTE PTR [rax],al
   14004f0cc:	add    al,BYTE PTR [rax]
   14004f0ce:	add    BYTE PTR [rax],al
   14004f0d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f0d1:	(bad)  
   14004f0d2:	add    BYTE PTR [rax],al
   14004f0d4:	add    eax,DWORD PTR [rax]
   14004f0d6:	add    BYTE PTR [rax],al
   14004f0d8:	mov    ecx,0x40000c4
   14004f0dd:	add    BYTE PTR [rax],al
   14004f0df:	add    dh,al
   14004f0e1:	(bad)  
   14004f0e2:	add    BYTE PTR [rax],al
   14004f0e4:	add    eax,DWORD PTR [rax]
   14004f0e6:	add    BYTE PTR [rax],al
   14004f0e8:	call   0x14204f1b1
   14004f0ed:	add    BYTE PTR [rax],al
   14004f0ef:	add    BYTE PTR [rdx],bl
   14004f0f1:	(bad)
   14004f0f4:	add    DWORD PTR [rax],eax
   14004f0f6:	add    BYTE PTR [rax],al
   14004f0f8:	sub    al,dh
   14004f0fa:	add    BYTE PTR [rax],al
   14004f0fc:	add    BYTE PTR [rax],al
   14004f0fe:	add    BYTE PTR [rax],al
   14004f100:	xor    al,0xc6
   14004f102:	add    BYTE PTR [rax],al
   14004f104:	(bad)  
   14004f105:	(bad)  
   14004f106:	(bad)  
   14004f107:	call   FWORD PTR [rcx]
   14004f109:	xor    eax,0x6423000b
   14004f10e:	(bad)  
   14004f10f:	add    BYTE PTR [rdi],bl
   14004f111:	xor    al,0x26
   14004f113:	add    BYTE PTR [rbx],dl
   14004f115:	add    DWORD PTR [rsi],ebx
   14004f117:	add    BYTE PTR [rax+rsi*8],cl
   14004f11a:	or     ah,al
   14004f11c:	or     al,dl
   14004f11e:	(bad)  
   14004f11f:	rol    BYTE PTR [rax+rsi*2],0x0
   14004f123:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   14004f127:	add    BYTE PTR [rax],ah
   14004f129:	xchg   DWORD PTR [rax+rax*1],eax
   14004f12c:	jmp    0x14004f12e
   14004f12e:	add    BYTE PTR [rax],al
   14004f130:	(bad)  
   14004f131:	(bad)  
   14004f132:	(bad)  
   14004f133:	call   FWORD PTR [rcx+rdx*8+0x3]
   14004f13a:	add    BYTE PTR [rax],al
   14004f13c:	test   al,0xd1
   14004f13e:	add    eax,DWORD PTR [rax]
   14004f140:	add    DWORD PTR [rax],eax
   14004f142:	add    BYTE PTR [rax],al
   14004f144:	mov    ah,0xd1
   14004f146:	add    eax,DWORD PTR [rax]
   14004f148:	add    DWORD PTR [rax],eax
   14004f14a:	add    BYTE PTR [rax],al
   14004f14c:	rcl    cl,0x3
   14004f14f:	add    BYTE PTR [rcx],al
   14004f151:	add    BYTE PTR [rax],al
   14004f153:	add    ah,cl
   14004f155:	rol    DWORD PTR [rbx],1
   14004f157:	add    BYTE PTR [rax],al
   14004f159:	add    BYTE PTR [rax],al
   14004f15b:	add    al,bl
   14004f15d:	rol    DWORD PTR [rbx],1
   14004f15f:	add    BYTE PTR [rcx],al
   14004f161:	add    BYTE PTR [rax],al
   14004f163:	add    ah,ah
   14004f165:	rol    DWORD PTR [rbx],1
   14004f167:	add    BYTE PTR [rcx],al
   14004f169:	add    BYTE PTR [rax],al
   14004f16b:	add    al,dh
   14004f16d:	rol    DWORD PTR [rbx],1
   14004f16f:	add    BYTE PTR [rcx],al
   14004f171:	add    BYTE PTR [rax],al
   14004f173:	add    ah,bh
   14004f175:	rol    DWORD PTR [rbx],1
   14004f177:	add    BYTE PTR [rcx],al
   14004f179:	add    BYTE PTR [rax],al
   14004f17b:	add    BYTE PTR [rax],cl
   14004f17d:	rol    BYTE PTR [rbx],cl
   14004f17f:	add    BYTE PTR [rcx],al
   14004f181:	add    BYTE PTR [rax],al
   14004f183:	add    BYTE PTR [rdx+rdx*8],dl
   14004f186:	add    eax,DWORD PTR [rax]
   14004f188:	add    DWORD PTR [rax],eax
   14004f18a:	add    BYTE PTR [rax],al
   14004f18c:	and    dl,dl
   14004f18e:	add    eax,DWORD PTR [rax]
   14004f190:	add    DWORD PTR [rax],eax
   14004f192:	add    BYTE PTR [rax],al
   14004f194:	sub    al,0xd2
   14004f196:	add    eax,DWORD PTR [rax]
   14004f198:	add    DWORD PTR [rax],eax
   14004f19a:	add    BYTE PTR [rax],al
   14004f19c:	cmp    dl,dl
   14004f19e:	add    eax,DWORD PTR [rax]
   14004f1a0:	add    DWORD PTR [rax],eax
   14004f1a2:	add    BYTE PTR [rax],al
   14004f1a4:	rex.R rol BYTE PTR [rbx],cl
   14004f1a7:	add    BYTE PTR [rcx],al
   14004f1a9:	add    BYTE PTR [rax],al
   14004f1ab:	add    BYTE PTR [rax-0x2e],dl
   14004f1ae:	add    eax,DWORD PTR [rax]
   14004f1b0:	add    DWORD PTR [rax],eax
   14004f1b2:	add    BYTE PTR [rax],al
   14004f1b4:	pop    rsp
   14004f1b5:	rol    BYTE PTR [rbx],cl
   14004f1b7:	add    BYTE PTR [rcx],al
   14004f1b9:	add    BYTE PTR [rax],al
   14004f1bb:	add    BYTE PTR [rax-0x2e],ch
   14004f1be:	add    eax,DWORD PTR [rax]
   14004f1c0:	add    DWORD PTR [rax],eax
   14004f1c2:	add    BYTE PTR [rax],al
   14004f1c4:	je     0x14004f198
   14004f1c6:	add    eax,DWORD PTR [rax]
   14004f1c8:	add    BYTE PTR [rax],al
   14004f1ca:	add    BYTE PTR [rax],al
   14004f1cc:	sahf   
   14004f1cd:	rol    BYTE PTR [rbx],cl
   14004f1cf:	add    BYTE PTR [rax],al
   14004f1d1:	add    BYTE PTR [rax],al
   14004f1d3:	add    BYTE PTR [rdx+0x3d2],ch
	...
   14004f1e5:	add    BYTE PTR [rax],al
   14004f1e7:	add    BYTE PTR [rip+0x15000000],dl        # 0x15504f1ed
   14004f1ed:	add    BYTE PTR [rax],al
   14004f1ef:	add    BYTE PTR [rsi],dl
   14004f1f1:	add    BYTE PTR [rax],al
   14004f1f3:	add    BYTE PTR [rcx],al
   14004f1f5:	add    BYTE PTR [rax],al
   14004f1f7:	add    ah,bh
   14004f1f9:	icebp  
   14004f1fa:	add    al,0x0
	...
   14004f208:	mov    dh,0xd2
   14004f20a:	add    eax,DWORD PTR [rax]
   14004f20c:	pop    rax
   14004f20d:	add    BYTE PTR [rax],al
   14004f20f:	add    al,dh
   14004f211:	mov    ebx,0xffff0000
   14004f216:	(bad)  
   14004f217:	push   QWORD PTR [rcx+0xbc]
   14004f21d:	add    BYTE PTR [rax],al
   14004f21f:	add    cl,ch
   14004f221:	mov    esp,0x10000
   14004f226:	add    BYTE PTR [rax],al
   14004f228:	loopne 0x14004f1e7
   14004f22a:	add    BYTE PTR [rax],al
   14004f22c:	(bad)  
   14004f22d:	add    BYTE PTR [rax],al
   14004f22f:	add    BYTE PTR [rax-0x42],dl
   14004f232:	add    BYTE PTR [rax],al
   14004f234:	add    DWORD PTR [rax],eax
   14004f236:	add    BYTE PTR [rax],al
   14004f238:	lock mov esi,0x90000
   14004f23e:	add    BYTE PTR [rax],al
   14004f240:	std    
   14004f241:	mov    esi,0xa0000
   14004f246:	add    BYTE PTR [rax],al
   14004f248:	and    DWORD PTR [rdi+0x10000],edi
   14004f24e:	add    BYTE PTR [rax],al
   14004f250:	(bad)
   14004f253:	add    BYTE PTR [rax],dl
   14004f255:	add    BYTE PTR [rax],al
   14004f257:	add    bl,bh
   14004f259:	mov    edi,0x10000
   14004f25e:	add    BYTE PTR [rax],al
   14004f260:	lods   eax,DWORD PTR ds:[rsi]
   14004f261:	rol    BYTE PTR [rax],0x0
   14004f264:	adc    al,BYTE PTR [rax]
   14004f266:	add    BYTE PTR [rax],al
   14004f268:	hlt    
   14004f269:	rol    BYTE PTR [rax],0x0
   14004f26c:	add    DWORD PTR [rax],eax
   14004f26e:	add    BYTE PTR [rax],al
   14004f270:	cld    
   14004f271:	rol    BYTE PTR [rax],0x0
   14004f274:	add    BYTE PTR [rax],al
   14004f276:	add    BYTE PTR [rax],al
   14004f278:	cmp    al,cl
   14004f27a:	add    BYTE PTR [rax],al
   14004f27c:	add    DWORD PTR [rax],eax
   14004f27e:	add    BYTE PTR [rax],al
   14004f280:	pop    rdi
   14004f281:	rol    DWORD PTR [rax],0x0
   14004f284:	add    eax,DWORD PTR [rax]
   14004f286:	add    BYTE PTR [rax],al
   14004f288:	xchg   ebx,eax
   14004f289:	rol    DWORD PTR [rax],0x0
   14004f28c:	add    DWORD PTR [rax],eax
   14004f28e:	add    BYTE PTR [rax],al
   14004f290:	sub    dl,al
   14004f292:	add    BYTE PTR [rax],al
   14004f294:	add    BYTE PTR [rax],al
   14004f296:	add    BYTE PTR [rax],al
   14004f298:	rex.X ret 0x0
   14004f29c:	(bad)  
   14004f29d:	(bad)  
   14004f29e:	(bad)  
   14004f29f:	inc    DWORD PTR [rdi-0x3e]
   14004f2a2:	add    BYTE PTR [rax],al
   14004f2a4:	add    DWORD PTR [rax],eax
   14004f2a6:	add    BYTE PTR [rax],al
   14004f2a8:	pop    rbx
   14004f2a9:	ret    0x0
   14004f2ac:	add    BYTE PTR [rax],al
   14004f2ae:	add    BYTE PTR [rax],al
   14004f2b0:	jle    0x14004f274
   14004f2b2:	add    BYTE PTR [rax],al
   14004f2b4:	adc    al,0x0
   14004f2b6:	add    BYTE PTR [rax],al
   14004f2b8:	cwde   
   14004f2b9:	ret    0x0
   14004f2bc:	add    BYTE PTR [rax],al
   14004f2be:	add    BYTE PTR [rax],al
   14004f2c0:	mov    ah,0xc2
   14004f2c2:	add    BYTE PTR [rax],al
   14004f2c4:	(bad)  
   14004f2c5:	(bad)  
   14004f2c6:	(bad)  
   14004f2c7:	inc    ebp
   14004f2c9:	ret    0x0
   14004f2cc:	adc    eax,0xda000000
   14004f2d1:	ret    0x0
   14004f2d4:	add    BYTE PTR [rax],al
   14004f2d6:	add    BYTE PTR [rax],al
   14004f2d8:	mov    ecx,0xff0000c3
   14004f2dd:	(bad)  
   14004f2de:	(bad)  
   14004f2df:	push   QWORD PTR [rsi+0x3d2]
   14004f2e5:	add    BYTE PTR [rax],al
   14004f2e7:	add    ah,al
   14004f2e9:	rol    BYTE PTR [rbx],cl
   14004f2eb:	add    BYTE PTR [rsi],dl
   14004f2ed:	add    BYTE PTR [rax],al
   14004f2ef:	add    bl,dh
   14004f2f1:	rol    BYTE PTR [rbx],cl
   14004f2f3:	add    BYTE PTR [rax],al
   14004f2f5:	add    BYTE PTR [rax],al
   14004f2f7:	add    BYTE PTR [rcx],bl
   14004f2f9:	or     eax,DWORD PTR [rbx]
   14004f2fb:	add    BYTE PTR [rbx],cl
   14004f2fd:	(bad)  
   14004f2fe:	(bad)  
   14004f2ff:	push   rax
   14004f300:	(bad)  
   14004f301:	xor    BYTE PTR [rax],al
   14004f303:	add    BYTE PTR [rsp+rbp*1-0x78dffffd],ah
   14004f30a:	add    al,0x0
   14004f30c:	sbb    DWORD PTR [rdi],ecx
   14004f30e:	add    al,BYTE PTR [rax]
   14004f310:	(bad)  
   14004f311:	push   rdx
   14004f312:	add    dh,BYTE PTR [rax]
   14004f314:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f315:	sub    al,0x3
   14004f317:	add    BYTE PTR [rax-0x79],dl
   14004f31a:	add    al,0x0
   14004f31c:	(bad)  
   14004f31d:	(bad)  
   14004f31e:	(bad)  
   14004f31f:	inc    DWORD PTR [rax]
   14004f321:	add    BYTE PTR [rax],al
   14004f323:	add    bh,bh
   14004f325:	(bad)  
   14004f326:	(bad)  
   14004f327:	inc    DWORD PTR [rax]
	...
   14004f331:	add    BYTE PTR [rax],al
   14004f333:	add    BYTE PTR [rcx],al
   14004f335:	add    BYTE PTR [rax],al
   14004f337:	add    BYTE PTR [rcx],al
   14004f339:	add    BYTE PTR [rax],al
   14004f33b:	add    BYTE PTR [rax-0xd],al
   14004f33e:	add    al,0x0
	...
   14004f34c:	ret    
   14004f34d:	fld    DWORD PTR [rbx]
   14004f34f:	add    BYTE PTR [rax],bh
   14004f351:	add    BYTE PTR [rax],al
   14004f353:	add    BYTE PTR [rdx+rdi*4-0x10000],bh
   14004f35a:	(bad)  
   14004f35b:	call   rdi
   14004f35d:	mov    edx,0x0
   14004f362:	add    BYTE PTR [rax],al
   14004f364:	cmc    
   14004f365:	mov    edx,0xffff0000
   14004f36a:	(bad)  
   14004f36b:	inc    ebx
   14004f36d:	fld    DWORD PTR [rbx]
   14004f36f:	add    BYTE PTR [rax],al
   14004f371:	add    BYTE PTR [rax],al
   14004f373:	add    al,dl
   14004f375:	fld    DWORD PTR [rbx]
   14004f377:	add    BYTE PTR [rcx],al
   14004f379:	add    BYTE PTR [rax],al
   14004f37b:	add    dl,ah
   14004f37d:	fld    DWORD PTR [rbx]
   14004f37f:	add    BYTE PTR [rax],al
   14004f381:	add    BYTE PTR [rax],al
   14004f383:	add    BYTE PTR [rcx],bl
   14004f385:	or     al,BYTE PTR [rdx]
   14004f387:	add    BYTE PTR [rdx],cl
   14004f389:	xor    al,BYTE PTR [rsi]
   14004f38b:	push   rax
   14004f38c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f38d:	sub    al,0x3
   14004f38f:	add    BYTE PTR [rax-0x79],dl
   14004f392:	add    al,0x0
   14004f394:	sbb    DWORD PTR [rax],edi
   14004f396:	or     eax,DWORD PTR [rax]
   14004f398:	es fs (bad) 
   14004f39b:	add    DWORD PTR [rdx],esp
   14004f39d:	xor    al,0x26
   14004f39f:	add    DWORD PTR [rbx],edx
   14004f3a1:	add    DWORD PTR [rsi],ebx
   14004f3a3:	add    DWORD PTR [rax+rsi*8],ecx
   14004f3a6:	or     ah,al
   14004f3a8:	or     al,dl
   14004f3aa:	(bad)  
   14004f3ab:	rol    BYTE PTR [rax+rsi*2],0x0
   14004f3af:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   14004f3b3:	add    BYTE PTR [rax-0x1cfffb79],al
   14004f3b9:	or     BYTE PTR [rax],al
   14004f3bb:	add    bh,bh
   14004f3bd:	(bad)  
   14004f3be:	(bad)  
   14004f3bf:	inc    DWORD PTR [rdx]
   14004f3c1:	rol    DWORD PTR [rbx],cl
   14004f3c3:	add    BYTE PTR [rax],al
   14004f3c5:	add    BYTE PTR [rax],al
   14004f3c7:	add    BYTE PTR [rsi],cl
   14004f3c9:	rol    DWORD PTR [rbx],cl
   14004f3cb:	add    bh,bh
   14004f3cd:	(bad)  
   14004f3ce:	(bad)  
   14004f3cf:	push   QWORD PTR [rdi]
   14004f3d1:	rol    DWORD PTR [rbx],cl
   14004f3d3:	add    bh,bh
   14004f3d5:	(bad)  
   14004f3d6:	(bad)  
   14004f3d7:	inc    DWORD PTR [rbx-0x2d]
   14004f3da:	add    eax,DWORD PTR [rax]
   14004f3dc:	(bad)  
   14004f3dd:	(bad)  
   14004f3de:	(bad)  
   14004f3df:	dec    DWORD PTR [rdi-0x2d]
   14004f3e2:	add    eax,DWORD PTR [rax]
   14004f3e4:	add    eax,DWORD PTR [rax]
   14004f3e6:	add    BYTE PTR [rax],al
   14004f3e8:	pop    rbx
   14004f3e9:	rol    DWORD PTR [rbx],cl
   14004f3eb:	add    BYTE PTR [rbx],al
   14004f3ed:	add    BYTE PTR [rax],al
   14004f3ef:	add    BYTE PTR [rdi-0x2d],ah
   14004f3f2:	add    eax,DWORD PTR [rax]
   14004f3f4:	(bad)  
   14004f3f5:	add    BYTE PTR [rax],al
   14004f3f7:	add    BYTE PTR [rbx-0x2d],dh
   14004f3fa:	add    eax,DWORD PTR [rax]
   14004f3fc:	(bad)  
   14004f3fd:	add    BYTE PTR [rax],al
   14004f3ff:	add    BYTE PTR [rdi-0x2d],bh
   14004f402:	add    eax,DWORD PTR [rax]
   14004f404:	add    eax,DWORD PTR [rax]
   14004f406:	add    BYTE PTR [rax],al
   14004f408:	jg     0x14004f3dd
   14004f40a:	add    eax,DWORD PTR [rax]
   14004f40c:	or     DWORD PTR [rax],eax
   14004f40e:	add    BYTE PTR [rax],al
   14004f410:	add    BYTE PTR [rax],al
   14004f412:	add    BYTE PTR [rax],al
   14004f414:	or     DWORD PTR [rax],eax
   14004f416:	add    BYTE PTR [rax],al
   14004f418:	add    BYTE PTR [rax],al
   14004f41a:	add    BYTE PTR [rax],al
   14004f41c:	add    eax,DWORD PTR [rax]
   14004f41e:	add    BYTE PTR [rax],al
   14004f420:	leave  
   14004f421:	rol    DWORD PTR [rbx],cl
   14004f423:	add    bh,bh
   14004f425:	(bad)  
   14004f426:	(bad)  
   14004f427:	call   rbp
   14004f429:	rol    DWORD PTR [rbx],cl
   14004f42b:	add    BYTE PTR [rbx],al
   14004f42d:	add    BYTE PTR [rax],al
   14004f42f:	add    cl,ah
   14004f431:	rol    DWORD PTR [rbx],cl
   14004f433:	add    bh,bh
   14004f435:	(bad)  
   14004f436:	(bad)  
   14004f437:	(bad)  
   14004f438:	in     eax,dx
   14004f439:	rol    DWORD PTR [rbx],cl
   14004f43b:	add    BYTE PTR [rbx],al
   14004f43d:	add    BYTE PTR [rax],al
   14004f43f:	add    cl,bh
   14004f441:	rol    DWORD PTR [rbx],cl
   14004f443:	add    BYTE PTR [rbx],al
   14004f445:	add    BYTE PTR [rax],al
   14004f447:	add    BYTE PTR [rip+0x30003d4],al        # 0x14304f821
   14004f44d:	add    BYTE PTR [rax],al
   14004f44f:	add    BYTE PTR [rcx],dl
   14004f451:	(bad)  
   14004f452:	add    eax,DWORD PTR [rax]
   14004f454:	add    eax,DWORD PTR [rax]
   14004f456:	add    BYTE PTR [rax],al
   14004f458:	sbb    eax,0x30003d4
   14004f45d:	add    BYTE PTR [rax],al
   14004f45f:	add    BYTE PTR [rcx],ch
   14004f461:	(bad)  
   14004f462:	add    eax,DWORD PTR [rax]
   14004f464:	adc    al,0x0
   14004f466:	add    BYTE PTR [rax],al
   14004f468:	push   rdx
   14004f469:	(bad)  
   14004f46a:	add    eax,DWORD PTR [rax]
   14004f46c:	adc    al,0x0
   14004f46e:	add    BYTE PTR [rax],al
   14004f470:	pop    rsi
   14004f471:	(bad)  
   14004f472:	add    eax,DWORD PTR [rax]
   14004f474:	adc    al,0x0
   14004f476:	add    BYTE PTR [rax],al
   14004f478:	xchg   esp,edx
   14004f47a:	add    eax,DWORD PTR [rax]
   14004f47c:	add    eax,DWORD PTR [rax]
   14004f47e:	add    BYTE PTR [rax],al
   14004f480:	xchg   ebx,eax
   14004f481:	(bad)  
   14004f482:	add    eax,DWORD PTR [rax]
   14004f484:	add    eax,DWORD PTR [rax]
   14004f486:	add    BYTE PTR [rax],al
   14004f488:	lahf   
   14004f489:	(bad)  
   14004f48a:	add    eax,DWORD PTR [rax]
   14004f48c:	sbb    DWORD PTR [rax],eax
   14004f48e:	add    BYTE PTR [rax],al
   14004f490:	enter  0x3d4,0x0
   14004f494:	sbb    DWORD PTR [rax],eax
   14004f496:	add    BYTE PTR [rax],al
   14004f498:	(bad)  
   14004f499:	(bad)  
   14004f49a:	add    eax,DWORD PTR [rax]
   14004f49c:	sbb    DWORD PTR [rax],eax
   14004f49e:	add    BYTE PTR [rax],al
   14004f4a0:	std    
   14004f4a1:	(bad)  
   14004f4a2:	add    eax,DWORD PTR [rax]
   14004f4a4:	add    eax,DWORD PTR [rax]
   14004f4a6:	add    BYTE PTR [rax],al
   14004f4a8:	or     ebp,edx
   14004f4aa:	add    eax,DWORD PTR [rax]
   14004f4ac:	(bad)  
   14004f4ad:	(bad)  
   14004f4ae:	(bad)  
   14004f4af:	call   QWORD PTR [rip+0xa0003d5]        # 0x14a04f88a
   14004f4b5:	add    BYTE PTR [rax],al
   14004f4b7:	add    BYTE PTR [rdx],cl
   14004f4b9:	add    BYTE PTR [rax],al
   14004f4bb:	add    BYTE PTR [rbx],cl
   14004f4bd:	add    BYTE PTR [rax],al
   14004f4bf:	add    BYTE PTR [rcx],al
   14004f4c1:	add    BYTE PTR [rax],al
   14004f4c3:	add    al,cl
   14004f4c5:	hlt    
   14004f4c6:	add    al,0x0
	...
   14004f4d4:	mov    edx,ebx
   14004f4d6:	add    eax,DWORD PTR [rax]
   14004f4d8:	push   0x2c000000
   14004f4dd:	mov    al,0x0
   14004f4df:	add    bh,bh
   14004f4e1:	(bad)  
   14004f4e2:	(bad)  
   14004f4e3:	push   QWORD PTR [rax]
   14004f4e5:	mov    cl,0x0
   14004f4e7:	add    BYTE PTR [rax],al
   14004f4e9:	add    BYTE PTR [rax],al
   14004f4eb:	add    BYTE PTR [rcx+0x10000b1],al
   14004f4f1:	add    BYTE PTR [rax],al
   14004f4f3:	add    BYTE PTR [rdi+0xb1],bl
   14004f4f9:	add    BYTE PTR [rax],al
   14004f4fb:	add    al,bl
   14004f4fd:	mov    cl,0x0
   14004f4ff:	add    bh,bh
   14004f501:	(bad)  
   14004f502:	(bad)  
   14004f503:	call   QWORD PTR [rdx+rsi*4]
   14004f506:	add    BYTE PTR [rax],al
   14004f508:	add    eax,DWORD PTR [rax]
   14004f50a:	add    BYTE PTR [rax],al
   14004f50c:	cmp    al,0xb2
   14004f50e:	add    BYTE PTR [rax],al
   14004f510:	(bad)  
   14004f511:	(bad)  
   14004f512:	(bad)  
   14004f513:	call   QWORD PTR [rbp-0x4e]
   14004f516:	add    BYTE PTR [rax],al
   14004f518:	add    eax,DWORD PTR [rax]
   14004f51a:	add    BYTE PTR [rax],al
   14004f51c:	mov    dh,0xb2
   14004f51e:	add    BYTE PTR [rax],al
   14004f520:	add    eax,0xbd000000
   14004f525:	mov    dl,0x0
   14004f527:	add    BYTE PTR [rbx],al
   14004f529:	add    BYTE PTR [rax],al
   14004f52b:	add    bl,ah
   14004f52d:	mov    dl,0x0
   14004f52f:	add    BYTE PTR [rsi],al
   14004f531:	add    BYTE PTR [rax],al
   14004f533:	add    BYTE PTR [rip+0x70000b3],bl        # 0x14704f5ec
   14004f539:	add    BYTE PTR [rax],al
   14004f53b:	add    BYTE PTR [rsi-0x4d],bl
   14004f53e:	add    BYTE PTR [rax],al
   14004f540:	or     DWORD PTR [rax],eax
   14004f542:	add    BYTE PTR [rax],al
   14004f544:	ins    BYTE PTR es:[rdi],dx
   14004f545:	mov    bl,0x0
   14004f547:	add    BYTE PTR [rdx],cl
   14004f549:	add    BYTE PTR [rax],al
   14004f54b:	add    dh,bl
   14004f54d:	mov    bl,0x0
   14004f54f:	add    BYTE PTR [rcx],cl
   14004f551:	add    BYTE PTR [rax],al
   14004f553:	add    BYTE PTR [rdi],dl
   14004f555:	mov    ah,0x0
   14004f557:	add    BYTE PTR [rbx],al
   14004f559:	add    BYTE PTR [rax],al
   14004f55b:	add    BYTE PTR [rsp+rsi*4],dh
   14004f55e:	add    BYTE PTR [rax],al
   14004f560:	(bad)  
   14004f561:	(bad)  
   14004f562:	(bad)  
   14004f563:	(bad)  
   14004f564:	ds mov ah,0x0
   14004f567:	add    BYTE PTR [rbx],al
   14004f569:	add    BYTE PTR [rax],al
   14004f56b:	add    BYTE PTR [rbx-0x4c],ch
   14004f56e:	add    BYTE PTR [rax],al
   14004f570:	or     al,BYTE PTR [rax]
   14004f572:	add    BYTE PTR [rax],al
   14004f574:	jno    0x14004f52a
   14004f576:	add    BYTE PTR [rax],al
   14004f578:	add    eax,DWORD PTR [rax]
   14004f57a:	add    BYTE PTR [rax],al
   14004f57c:	xchg   edi,eax
   14004f57d:	mov    ah,0x0
   14004f57f:	add    bh,bh
   14004f581:	(bad)  
   14004f582:	(bad)  
   14004f583:	call   FWORD PTR [rsp+rsi*4+0x30000]
   14004f58a:	add    BYTE PTR [rax],al
   14004f58c:	xor    esi,DWORD PTR [rbp+0x120000]
   14004f592:	add    BYTE PTR [rax],al
   14004f594:	mov    BYTE PTR [rbp+0x30000],dh
   14004f59a:	add    BYTE PTR [rax],al
   14004f59c:	sbb    BYTE PTR [rsi+0x140000],dh
   14004f5a2:	add    BYTE PTR [rax],al
   14004f5a4:	and    DWORD PTR [rsi+0x30000],esi
   14004f5aa:	add    BYTE PTR [rax],al
   14004f5ac:	ds mov dh,0x0
   14004f5af:	add    BYTE PTR [rip+0xffffffffa5000000],dl        # 0xe504f5b5
   14004f5b5:	mov    dh,0x0
   14004f5b7:	add    BYTE PTR [rax+rax*1],dl
   14004f5ba:	add    BYTE PTR [rax],al
   14004f5bc:	lods   eax,DWORD PTR ds:[rsi]
   14004f5bd:	mov    dh,0x0
   14004f5bf:	add    BYTE PTR [rsi],dl
   14004f5c1:	add    BYTE PTR [rax],al
   14004f5c3:	add    dl,cl
   14004f5c5:	mov    dh,0x0
   14004f5c7:	add    BYTE PTR [rax+rax*1],dl
   14004f5ca:	add    BYTE PTR [rax],al
   14004f5cc:	(bad)  
   14004f5cd:	mov    bh,0x0
   14004f5cf:	add    BYTE PTR [rbx],al
   14004f5d1:	add    BYTE PTR [rax],al
   14004f5d3:	add    BYTE PTR [rax+0x190000b8],ah
   14004f5d9:	add    BYTE PTR [rax],al
   14004f5db:	add    BYTE PTR [rcx+0x30000b8],ch
   14004f5e1:	add    BYTE PTR [rax],al
   14004f5e3:	add    dh,al
   14004f5e5:	mov    eax,0x1a0000
   14004f5ea:	add    BYTE PTR [rax],al
   14004f5ec:	sub    eax,0x190000b9
   14004f5f1:	add    BYTE PTR [rax],al
   14004f5f3:	add    BYTE PTR [rip+0x1b0000b9],dh        # 0x15b04f6b2
   14004f5f9:	add    BYTE PTR [rax],al
   14004f5fb:	add    BYTE PTR [rcx-0x47],cl
   14004f5fe:	add    BYTE PTR [rax],al
   14004f600:	sbb    DWORD PTR [rax],eax
   14004f602:	add    BYTE PTR [rax],al
   14004f604:	xchg   BYTE PTR [rcx+0x30000],bh
   14004f60a:	add    BYTE PTR [rax],al
   14004f60c:	je     0x14004f5c8
   14004f60e:	add    BYTE PTR [rax],al
   14004f610:	(bad)  
   14004f611:	(bad)  
   14004f612:	(bad)  
   14004f613:	dec    DWORD PTR [rbx+0x3d3]
   14004f619:	add    BYTE PTR [rax],al
   14004f61b:	add    BYTE PTR [rcx+0xb0003d3],bl
   14004f621:	add    BYTE PTR [rax],al
   14004f623:	add    BYTE PTR [rdx+0x3d3],bh
   14004f629:	add    BYTE PTR [rax],al
   14004f62b:	add    BYTE PTR [rcx],bl
   14004f62d:	or     eax,DWORD PTR [rbx]
   14004f62f:	add    BYTE PTR [rbx],cl
   14004f631:	(bad)  
   14004f632:	(bad)  
   14004f633:	push   rax
   14004f634:	(bad)  
   14004f635:	xor    BYTE PTR [rax],al
   14004f637:	add    BYTE PTR [rsp+rbp*1-0x787ffffd],ah
   14004f63e:	add    al,0x0
   14004f640:	adc    DWORD PTR [rdx],edx
   14004f642:	add    DWORD PTR [rax],eax
   14004f644:	or     DWORD PTR [rdx+0x0],esp
   14004f647:	add    BYTE PTR [rsp+rbp*1-0x784ffffd],ah
   14004f64e:	add    al,0x0
   14004f650:	(bad)  
   14004f651:	(bad)  
   14004f652:	(bad)  
   14004f653:	(bad)  
   14004f654:	call   0x14404fa27
   14004f659:	mov    al,0x0
   14004f65b:	add    bh,bh
   14004f65d:	(bad)  
   14004f65e:	(bad)  
   14004f65f:	call   FWORD PTR [rcx]
   14004f661:	cmp    cl,BYTE PTR [rbx]
   14004f663:	add    BYTE PTR [rcx],ch
   14004f665:	xor    al,0x62
   14004f667:	add    BYTE PTR [rcx+rax*1],bl
   14004f66a:	pop    rax
   14004f66b:	add    BYTE PTR [rsi],cl
   14004f66d:	lock or al,0xe0
   14004f670:	or     dl,al
   14004f672:	or     al,al
   14004f674:	(bad)  
   14004f675:	jo     0x14004f67c
   14004f677:	(bad)  
   14004f678:	add    al,0x50
   14004f67a:	add    BYTE PTR [rax],al
   14004f67c:	jl     0x14004f609
   14004f67e:	add    eax,DWORD PTR [rax]
   14004f680:	loopne 0x14004f609
   14004f682:	add    al,0x0
   14004f684:	mov    dl,0x2
   14004f686:	add    BYTE PTR [rax],al
   14004f688:	(bad)  
   14004f689:	(bad)  
   14004f68a:	(bad)  
   14004f68b:	(bad)  
   14004f68c:	cmp    al,0xd1
   14004f68e:	add    eax,DWORD PTR [rax]
   14004f690:	(bad)  
   14004f691:	(bad)  
   14004f692:	(bad)  
   14004f693:	dec    DWORD PTR [rax-0x2f]
   14004f696:	add    eax,DWORD PTR [rax]
   14004f698:	(bad)  
   14004f699:	(bad)  
   14004f69a:	(bad)  
   14004f69b:	inc    DWORD PTR [rax]
   14004f69d:	add    BYTE PTR [rax],al
   14004f69f:	add    bh,bh
   14004f6a1:	(bad)  
   14004f6a2:	(bad)  
   14004f6a3:	call   QWORD PTR [rcx+rdx*8+0x3]
   14004f6a7:	add    bh,bh
   14004f6a9:	(bad)  
   14004f6aa:	(bad)  
   14004f6ab:	jmp    QWORD PTR [rax-0x2f]
   14004f6ae:	add    eax,DWORD PTR [rax]
   14004f6b0:	(bad)  
   14004f6b1:	(bad)  
   14004f6b2:	(bad)  
   14004f6b3:	jmp    FWORD PTR [rcx+rdx*8+0x3]
   14004f6b7:	add    bh,bh
   14004f6b9:	(bad)  
   14004f6ba:	(bad)  
   14004f6bb:	(bad)  
   14004f6bc:	js     0x14004f68f
   14004f6be:	add    eax,DWORD PTR [rax]
   14004f6c0:	(bad)  
   14004f6c1:	(bad)  
   14004f6c2:	(bad)  
   14004f6c3:	inc    DWORD PTR [rcx+rdx*8-0xfffd]
   14004f6ca:	(bad)  
   14004f6cb:	call   QWORD PTR [rax+0x500003d1]
   14004f6d1:	lods   eax,DWORD PTR ds:[rsi]
   14004f6d2:	add    BYTE PTR [rax],al
   14004f6d4:	(bad)  
   14004f6d5:	(bad)  
   14004f6d6:	(bad)  
   14004f6d7:	(bad)  
   14004f6d8:	std    
   14004f6d9:	lods   eax,DWORD PTR ds:[rsi]
   14004f6da:	add    BYTE PTR [rax],al
   14004f6dc:	add    DWORD PTR [rax],eax
   14004f6de:	add    BYTE PTR [rax],al
   14004f6e0:	rex.R scas al,BYTE PTR es:[rdi]
   14004f6e2:	add    BYTE PTR [rax],al
   14004f6e4:	(bad)  
   14004f6e5:	(bad)  
   14004f6e6:	(bad)  
   14004f6e7:	call   FWORD PTR [rax-0x52]
   14004f6ea:	add    BYTE PTR [rax],al
   14004f6ec:	add    DWORD PTR [rax],eax
   14004f6ee:	add    BYTE PTR [rax],al
   14004f6f0:	ins    DWORD PTR es:[rdi],dx
   14004f6f1:	scas   al,BYTE PTR es:[rdi]
   14004f6f2:	add    BYTE PTR [rax],al
   14004f6f4:	(bad)  
   14004f6f5:	(bad)  
   14004f6f6:	(bad)  
   14004f6f7:	dec    DWORD PTR [rcx+0x60000ae]
   14004f6fd:	add    BYTE PTR [rax],al
   14004f6ff:	add    BYTE PTR [rax-0x51],ch
   14004f702:	add    BYTE PTR [rax],al
   14004f704:	(bad)  
   14004f705:	(bad)  
   14004f706:	(bad)  
   14004f707:	inc    DWORD PTR [rbx+0x60000af]
   14004f70d:	add    BYTE PTR [rax],al
   14004f70f:	add    al,cl
   14004f711:	scas   eax,DWORD PTR es:[rdi]
   14004f712:	add    BYTE PTR [rax],al
   14004f714:	(bad)  
   14004f715:	(bad)  
   14004f716:	(bad)  
   14004f717:	call   QWORD PTR [rcx]
   14004f719:	sbb    al,0x8
   14004f71b:	add    BYTE PTR [rsp+riz*2],bl
   14004f71e:	or     eax,0xc541800
   14004f723:	add    BYTE PTR [rsp+rsi*1],dl
   14004f726:	or     al,BYTE PTR [rax]
   14004f728:	or     BYTE PTR [rdx+0x4],dh
   14004f72b:	jo     0x14004f6d1
   14004f72d:	sub    al,0x3
   14004f72f:	add    BYTE PTR [rax],dl
   14004f731:	mov    BYTE PTR [rax+rax*1],al
   14004f734:	(bad)  
   14004f735:	(bad)  
   14004f736:	(bad)  
   14004f737:	jmp    QWORD PTR [rcx]
   14004f739:	(bad)  
   14004f73a:	add    eax,DWORD PTR [rax]
   14004f73c:	add    BYTE PTR [rax],al
   14004f73e:	add    BYTE PTR [rax],al
   14004f740:	sub    eax,0x740003d5
   14004f745:	lods   al,BYTE PTR ds:[rsi]
   14004f746:	add    BYTE PTR [rax],al
   14004f748:	(bad)  
   14004f749:	(bad)  
   14004f74a:	(bad)  
   14004f74b:	inc    eax
   14004f74d:	lods   al,BYTE PTR ds:[rsi]
   14004f74e:	add    BYTE PTR [rax],al
   14004f750:	add    BYTE PTR [rax],al
   14004f752:	add    BYTE PTR [rax],al
   14004f754:	fld    TBYTE PTR [rax+rax*1+0x100]
   14004f75b:	add    ch,bh
   14004f75d:	lods   al,BYTE PTR ds:[rsi]
   14004f75e:	add    BYTE PTR [rax],al
   14004f760:	add    BYTE PTR [rax],al
   14004f762:	add    BYTE PTR [rax],al
   14004f764:	or     BYTE PTR [rbp-0x10000],ch
   14004f76a:	(bad)  
   14004f76b:	call   FWORD PTR [rcx]
   14004f76d:	sbb    BYTE PTR [rdx],al
   14004f76f:	add    BYTE PTR [rcx],cl
   14004f771:	repnz add dh,BYTE PTR [rax]
   14004f774:	cmp    al,0xe5
   14004f776:	add    al,BYTE PTR [rax]
   14004f778:	jo     0x14004f77a
   14004f77a:	add    BYTE PTR [rax],al
   14004f77c:	sbb    DWORD PTR [rdi],ebx
   14004f77e:	(bad)  
   14004f77f:	add    BYTE PTR [rcx],dl
   14004f781:	add    DWORD PTR [rbx],edx
   14004f783:	add    BYTE PTR [rip+0x3600470],al        # 0x14364fbf9
   14004f789:	xor    BYTE PTR [rdx],al
   14004f78b:	push   rax
   14004f78c:	cmp    al,0xe5
   14004f78e:	add    al,BYTE PTR [rax]
   14004f790:	add    BYTE PTR [rax],0x0
   14004f793:	add    BYTE PTR [rcx],bl
   14004f795:	es add eax,0x74010b00
   14004f79b:	add    BYTE PTR [rax+rsi*2],al
   14004f79e:	add    esp,DWORD PTR [rax+0x2]
   14004f7a1:	xor    BYTE PTR [rax],al
   14004f7a3:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   14004f7a7:	add    BYTE PTR [rax-0x78],al
   14004f7aa:	add    al,0x0
   14004f7ac:	xchg   edx,eax
   14004f7ad:	add    eax,DWORD PTR [rax]
   14004f7af:	add    bh,bh
   14004f7b1:	(bad)  
   14004f7b2:	(bad)  
   14004f7b3:	push   QWORD PTR [rax]
   14004f7b5:	rol    DWORD PTR [rbx],1
   14004f7b7:	add    BYTE PTR [rax-0xffff58],dh
   14004f7bd:	(bad)  
   14004f7be:	(bad)  
   14004f7bf:	push   rsp
   14004f7c1:	test   al,0x0
   14004f7c3:	add    BYTE PTR [rax],al
   14004f7c5:	add    BYTE PTR [rax],al
   14004f7c7:	add    BYTE PTR [rdx-0xffff57],ch
   14004f7cd:	(bad)  
   14004f7ce:	(bad)  
   14004f7cf:	call   FWORD PTR [rcx]
   14004f7d1:	cmp    cl,BYTE PTR [rbx]
   14004f7d3:	add    BYTE PTR [rcx],ch
   14004f7d5:	xor    al,0x6d
   14004f7d7:	add    BYTE PTR [rcx+rax*1],bl
   14004f7da:	(bad)  
   14004f7db:	add    BYTE PTR [rsi],cl
   14004f7dd:	lock or al,0xe0
   14004f7e0:	or     dl,al
   14004f7e2:	or     al,al
   14004f7e4:	(bad)  
   14004f7e5:	jo     0x14004f7ec
   14004f7e7:	(bad)  
   14004f7e8:	add    al,0x50
   14004f7ea:	add    BYTE PTR [rax],al
   14004f7ec:	jl     0x14004f779
   14004f7ee:	add    eax,DWORD PTR [rax]
   14004f7f0:	jo     0x14004f77a
   14004f7f2:	add    al,0x0
   14004f7f4:	add    al,BYTE PTR [rbx]
   14004f7f6:	add    BYTE PTR [rax],al
   14004f7f8:	(bad)  
   14004f7f9:	(bad)  
   14004f7fa:	(bad)  
   14004f7fb:	call   FWORD PTR [rcx-0x28]
   14004f7fe:	add    eax,DWORD PTR [rax]
   14004f800:	add    BYTE PTR [rax],al
   14004f802:	add    BYTE PTR [rax],al
   14004f804:	fadd   DWORD PTR gs:[rbx]
   14004f807:	add    bh,bh
   14004f809:	(bad)  
   14004f80a:	(bad)  
   14004f80b:	push   QWORD PTR [rbp-0x28]
   14004f80e:	add    eax,DWORD PTR [rax]
   14004f810:	add    al,BYTE PTR [rax]
   14004f812:	add    BYTE PTR [rax],al
   14004f814:	sbb    eax,0xa5bc0003
   14004f81a:	add    BYTE PTR [rax],al
   14004f81c:	(bad)  
   14004f81d:	(bad)  
   14004f81e:	(bad)  
   14004f81f:	inc    DWORD PTR [rdi-0x5a]
   14004f822:	add    BYTE PTR [rax],al
   14004f824:	add    BYTE PTR [rax],al
   14004f826:	add    BYTE PTR [rax],al
   14004f828:	data16 cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f82a:	add    BYTE PTR [rax],al
   14004f82c:	add    DWORD PTR [rax],eax
   14004f82e:	add    BYTE PTR [rax],al
   14004f830:	xchg   ebp,eax
   14004f831:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f832:	add    BYTE PTR [rax],al
   14004f834:	add    al,BYTE PTR [rax]
   14004f836:	add    BYTE PTR [rax],al
   14004f838:	repnz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f83a:	add    BYTE PTR [rax],al
   14004f83c:	add    eax,DWORD PTR [rax]
   14004f83e:	add    BYTE PTR [rax],al
   14004f840:	outs   dx,DWORD PTR ds:[rsi]
   14004f841:	test   al,0x0
   14004f843:	add    BYTE PTR [rdx],al
   14004f845:	add    BYTE PTR [rax],al
   14004f847:	add    BYTE PTR [rax+rbp*4+0x0],bh
   14004f84b:	add    bh,bh
   14004f84d:	(bad)  
   14004f84e:	(bad)  
   14004f84f:	call   FWORD PTR [rcx]
   14004f851:	cmp    cl,BYTE PTR [rbx]
   14004f853:	add    BYTE PTR [rcx],ch
   14004f855:	xor    al,0x97
   14004f857:	add    BYTE PTR [rcx+rax*1],bl
   14004f85a:	mov    WORD PTR [rax],es
   14004f85c:	(bad)  
   14004f85d:	lock or al,0xe0
   14004f860:	or     dl,al
   14004f862:	or     al,al
   14004f864:	(bad)  
   14004f865:	jo     0x14004f86c
   14004f867:	(bad)  
   14004f868:	add    al,0x50
   14004f86a:	add    BYTE PTR [rax],al
   14004f86c:	jl     0x14004f7f9
   14004f86e:	add    eax,DWORD PTR [rax]
   14004f870:	movabs al,ds:0xff00000452000488
   14004f879:	(bad)  
   14004f87a:	(bad)  
   14004f87b:	(bad)  
   14004f87c:	cmp    ebp,edx
   14004f87e:	add    eax,DWORD PTR [rax]
   14004f880:	add    BYTE PTR [rax],al
   14004f882:	add    BYTE PTR [rax],al
   14004f884:	rex.RB (bad) 
   14004f886:	add    eax,DWORD PTR [rax]
   14004f888:	(bad)  
   14004f889:	(bad)  
   14004f88a:	(bad)  
   14004f88b:	call   QWORD PTR [rbp-0x2b]
   14004f88e:	add    eax,DWORD PTR [rax]
   14004f890:	add    al,BYTE PTR [rax]
   14004f892:	add    BYTE PTR [rax],al
   14004f894:	(bad)  
   14004f895:	(bad)  
   14004f896:	add    eax,DWORD PTR [rax]
   14004f898:	add    eax,DWORD PTR [rax]
   14004f89a:	add    BYTE PTR [rax],al
   14004f89c:	ins    DWORD PTR es:[rdi],dx
   14004f89d:	(bad)  
   14004f89e:	add    eax,DWORD PTR [rax]
   14004f8a0:	add    al,BYTE PTR [rax]
   14004f8a2:	add    BYTE PTR [rax],al
   14004f8a4:	jge    0x14004f87b
   14004f8a6:	add    eax,DWORD PTR [rax]
   14004f8a8:	add    eax,0x89000000
   14004f8ad:	(bad)  
   14004f8ae:	add    eax,DWORD PTR [rax]
   14004f8b0:	in     al,dx
   14004f8b1:	movabs eax,ds:0xa279ffffffff0000
   14004f8ba:	add    BYTE PTR [rax],al
   14004f8bc:	add    BYTE PTR [rax],al
   14004f8be:	add    BYTE PTR [rax],al
   14004f8c0:	sahf   
   14004f8c1:	movabs ds:0xa2dc000000010000,al
   14004f8ca:	add    BYTE PTR [rax],al
   14004f8cc:	add    al,BYTE PTR [rax]
   14004f8ce:	add    BYTE PTR [rax],al
   14004f8d0:	sub    eax,0x30000a3
   14004f8d5:	add    BYTE PTR [rax],al
   14004f8d7:	add    BYTE PTR [rbx+riz*4],bh
   14004f8da:	add    BYTE PTR [rax],al
   14004f8dc:	add    al,0x0
   14004f8de:	add    BYTE PTR [rax],al
   14004f8e0:	push   0xffffffffffffffa3
   14004f8e2:	add    BYTE PTR [rax],al
   14004f8e4:	add    eax,0xd9000000
   14004f8e9:	movabs ds:0xa56b000000060000,eax
   14004f8f2:	add    BYTE PTR [rax],al
   14004f8f4:	add    eax,0x78000000
   14004f8f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f8fa:	add    BYTE PTR [rax],al
   14004f8fc:	add    al,BYTE PTR [rax]
   14004f8fe:	add    BYTE PTR [rax],al
   14004f900:	and    DWORD PTR [rbp-0x10000],0xffffffff
   14004f907:	call   FWORD PTR [rcx]
   14004f909:	rex or eax,0x95742f00
   14004f90f:	add    BYTE PTR [rbx],ch
   14004f911:	fs xchg esp,eax
   14004f913:	add    BYTE PTR [rdi],ah
   14004f915:	xor    al,0x93
   14004f917:	add    BYTE PTR [rdx],bl
   14004f919:	add    DWORD PTR [rax+rax*1-0x1ff50ff4],ecx
   14004f920:	or     al,dl
   14004f922:	(bad)  
   14004f923:	rol    BYTE PTR [rax+rdx*2],0x0
   14004f927:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   14004f92b:	add    al,dl
   14004f92d:	mov    BYTE PTR [rax+rax*1],al
   14004f930:	push   rdx
   14004f931:	add    al,0x0
   14004f933:	add    bh,bh
   14004f935:	(bad)  
   14004f936:	(bad)  
   14004f937:	call   FWORD PTR [rdi]
   14004f939:	fld    DWORD PTR [rbx]
   14004f93b:	add    BYTE PTR [rax],al
   14004f93d:	add    BYTE PTR [rax],al
   14004f93f:	add    BYTE PTR [rbx],ch
   14004f941:	fld    DWORD PTR [rbx]
   14004f943:	add    bh,bh
   14004f945:	(bad)  
   14004f946:	(bad)  
   14004f947:	(bad)  
   14004f948:	cmp    ebx,ecx
   14004f94a:	add    eax,DWORD PTR [rax]
   14004f94c:	add    al,BYTE PTR [rax]
   14004f94e:	add    BYTE PTR [rax],al
   14004f950:	rex.RXB fld DWORD PTR [r11]
   14004f953:	add    BYTE PTR [rbx],al
   14004f955:	add    BYTE PTR [rax],al
   14004f957:	add    BYTE PTR [rbx-0x27],dl
   14004f95a:	add    eax,DWORD PTR [rax]
   14004f95c:	add    al,0x0
   14004f95e:	add    BYTE PTR [rax],al
   14004f960:	pop    rdi
   14004f961:	fld    DWORD PTR [rbx]
   14004f963:	add    BYTE PTR [rbx],al
   14004f965:	add    BYTE PTR [rax],al
   14004f967:	add    BYTE PTR [rdi-0x27],ch
   14004f96a:	add    eax,DWORD PTR [rax]
   14004f96c:	mov    al,0x9e
   14004f96e:	add    BYTE PTR [rax],al
   14004f970:	(bad)  
   14004f971:	(bad)  
   14004f972:	(bad)  
   14004f973:	inc    DWORD PTR [rdi+rbx*4]
   14004f976:	add    BYTE PTR [rax],al
   14004f978:	add    BYTE PTR [rax],al
   14004f97a:	add    BYTE PTR [rax],al
   14004f97c:	sub    DWORD PTR [rdi+0x10000],ebx
   14004f982:	add    BYTE PTR [rax],al
   14004f984:	data16 lahf 
   14004f986:	add    BYTE PTR [rax],al
   14004f988:	add    al,BYTE PTR [rax]
   14004f98a:	add    BYTE PTR [rax],al
   14004f98c:	mov    esp,0x300009f
   14004f991:	add    BYTE PTR [rax],al
   14004f993:	add    BYTE PTR [rcx],ah
   14004f995:	movabs al,ds:0xa030000000040000
   14004f99e:	add    BYTE PTR [rax],al
   14004f9a0:	add    eax,0x56000000
   14004f9a5:	movabs al,ds:0xa195000000060000
   14004f9ae:	add    BYTE PTR [rax],al
   14004f9b0:	add    eax,DWORD PTR [rax]
   14004f9b2:	add    BYTE PTR [rax],al
   14004f9b4:	movabs al,ds:0xad000000020000a1
   14004f9bd:	movabs eax,ds:0xa01ffffffff0000
   14004f9c6:	add    al,0x0
   14004f9c8:	or     dh,BYTE PTR [rsp+rcx*1]
   14004f9cb:	add    BYTE PTR [rdx],cl
   14004f9cd:	xchg   edx,eax
   14004f9ce:	(bad)  
   14004f9cf:	jo     0x14004f9ea
   14004f9d1:	or     eax,DWORD PTR ss:[rax]
   14004f9d4:	and    al,0x64
   14004f9d6:	pushf  
   14004f9d7:	add    BYTE PTR [rax],ah
   14004f9d9:	xor    al,0x9b
   14004f9db:	add    BYTE PTR [rbx],dl
   14004f9dd:	add    DWORD PTR [rax+rax*1-0x1ff50ff4],edx
   14004f9e4:	or     al,dl
   14004f9e6:	(bad)  
   14004f9e7:	rol    BYTE PTR [rax+rsi*2],0x0
   14004f9eb:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   14004f9ef:	add    BYTE PTR [rax],al
   14004f9f1:	mov    DWORD PTR [rax+rax*1],eax
   14004f9f4:	xchg   ebx,eax
   14004f9f5:	add    al,0x0
   14004f9f7:	add    bh,bh
   14004f9f9:	(bad)  
   14004f9fa:	(bad)  
   14004f9fb:	push   rbp
   14004f9fd:	(bad)  
   14004f9fe:	add    eax,DWORD PTR [rax]
   14004fa00:	add    BYTE PTR [rax],al
   14004fa02:	add    BYTE PTR [rax],al
   14004fa04:	add    esi,edx
   14004fa06:	add    eax,DWORD PTR [rax]
   14004fa08:	(bad)  
   14004fa09:	(bad)  
   14004fa0a:	(bad)  
   14004fa0b:	call   QWORD PTR [rcx]
   14004fa0d:	(bad)  
   14004fa0e:	add    eax,DWORD PTR [rax]
   14004fa10:	add    al,BYTE PTR [rax]
   14004fa12:	add    BYTE PTR [rax],al
   14004fa14:	sbb    eax,0x30003d6
   14004fa19:	add    BYTE PTR [rax],al
   14004fa1b:	add    BYTE PTR [rcx],ch
   14004fa1d:	(bad)  
   14004fa1e:	add    eax,DWORD PTR [rax]
   14004fa20:	add    al,BYTE PTR [rax]
   14004fa22:	add    BYTE PTR [rax],al
   14004fa24:	cmp    esi,edx
   14004fa26:	add    eax,DWORD PTR [rax]
   14004fa28:	add    eax,0x45000000
   14004fa2d:	(bad)  
   14004fa2e:	add    eax,DWORD PTR [rax]
   14004fa30:	(bad)  
   14004fa31:	add    BYTE PTR [rax],al
   14004fa33:	add    BYTE PTR [rax],al
   14004fa35:	add    BYTE PTR [rax],al
   14004fa37:	add    BYTE PTR [rsi],al
   14004fa39:	add    BYTE PTR [rax],al
   14004fa3b:	add    BYTE PTR [rax],al
   14004fa3d:	add    BYTE PTR [rax],al
   14004fa3f:	add    BYTE PTR [rdi],al
   14004fa41:	add    BYTE PTR [rax],al
   14004fa43:	add    BYTE PTR [rdi],al
   14004fa45:	add    BYTE PTR [rax],al
   14004fa47:	add    BYTE PTR [rax],cl
   14004fa49:	add    BYTE PTR [rax],al
   14004fa4b:	add    BYTE PTR [rcx],al
   14004fa4d:	add    BYTE PTR [rax],al
   14004fa4f:	add    BYTE PTR [rdx+rdi*8+0x4],dl
   14004fa53:	add    BYTE PTR [rax],al
   14004fa55:	add    BYTE PTR [rax],al
   14004fa57:	add    al,bl
   14004fa59:	stos   DWORD PTR es:[rdi],eax
   14004fa5a:	add    eax,0x0
   14004fa5f:	add    BYTE PTR [rcx-0x2a],dl
   14004fa62:	add    eax,DWORD PTR [rax]
   14004fa64:	pop    rax
   14004fa65:	add    BYTE PTR [rax],al
   14004fa67:	add    BYTE PTR [rax],cl
   14004fa69:	xchg   ebp,eax
   14004fa6a:	add    BYTE PTR [rax],al
   14004fa6c:	(bad)  
   14004fa6d:	(bad)  
   14004fa6e:	(bad)  
   14004fa6f:	jmp    FWORD PTR [rcx+0x95]
   14004fa75:	add    BYTE PTR [rax],al
   14004fa77:	add    bh,cl
   14004fa79:	xchg   ebp,eax
   14004fa7a:	add    BYTE PTR [rax],al
   14004fa7c:	add    DWORD PTR [rax],eax
   14004fa7e:	add    BYTE PTR [rax],al
   14004fa80:	adc    eax,0x2000096
   14004fa85:	add    BYTE PTR [rax],al
   14004fa87:	add    BYTE PTR [rax],bh
   14004fa89:	xchg   esi,eax
   14004fa8a:	add    BYTE PTR [rax],al
   14004fa8c:	add    eax,DWORD PTR [rax]
   14004fa8e:	add    BYTE PTR [rax],al
   14004fa90:	push   rax
   14004fa91:	xchg   esi,eax
   14004fa92:	add    BYTE PTR [rax],al
   14004fa94:	add    al,0x0
   14004fa96:	add    BYTE PTR [rax],al
   14004fa98:	xchg   esi,eax
   14004fa99:	xchg   esi,eax
   14004fa9a:	add    BYTE PTR [rax],al
   14004fa9c:	add    eax,0x2b000000
   14004faa1:	cdq    
   14004faa2:	add    BYTE PTR [rax],al
   14004faa4:	(bad)  
   14004faa5:	add    BYTE PTR [rax],al
   14004faa7:	add    BYTE PTR [rdi-0x67],al
   14004faaa:	add    BYTE PTR [rax],al
   14004faac:	(bad)  
   14004faad:	add    BYTE PTR [rax],al
   14004faaf:	add    BYTE PTR [rax],ah
   14004fab1:	popf   
   14004fab2:	add    BYTE PTR [rax],al
   14004fab4:	add    eax,0x2e000000
   14004fab9:	popf   
   14004faba:	add    BYTE PTR [rax],al
   14004fabc:	add    al,BYTE PTR [rax]
   14004fabe:	add    BYTE PTR [rax],al
   14004fac0:	cmp    al,0x9d
   14004fac2:	add    BYTE PTR [rax],al
   14004fac4:	(bad)  
   14004fac5:	(bad)  
   14004fac6:	(bad)  
   14004fac7:	call   QWORD PTR [rcx-0x2a]
   14004faca:	add    eax,DWORD PTR [rax]
   14004facc:	add    BYTE PTR [rax],al
   14004face:	add    BYTE PTR [rax],al
   14004fad0:	pop    rsi
   14004fad1:	(bad)  
   14004fad2:	add    eax,DWORD PTR [rax]
   14004fad4:	or     BYTE PTR [rax],al
   14004fad6:	add    BYTE PTR [rax],al
   14004fad8:	ja     0x14004fab0
   14004fada:	add    eax,DWORD PTR [rax]
   14004fadc:	add    BYTE PTR [rax],al
   14004fade:	add    BYTE PTR [rax],al
   14004fae0:	sbb    DWORD PTR [rdx],ecx
   14004fae2:	add    al,BYTE PTR [rax]
   14004fae4:	or     dh,BYTE PTR [rdx+0x6]
   14004fae7:	push   rax
   14004fae8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004fae9:	sub    al,0x3
   14004faeb:	add    BYTE PTR [rax],al
   14004faed:	mov    DWORD PTR [rax+rax*1],eax
   14004faf0:	sbb    DWORD PTR [rip+0xffffffffe4230009],esi        # 0x12427faff
   14004faf6:	sub    eax,DWORD PTR [rax]
   14004faf8:	(bad)  
   14004faf9:	sub    al,BYTE PTR fs:[rax]
   14004fafc:	sbb    esi,DWORD PTR [rcx+rbp*1]
   14004faff:	add    BYTE PTR [rcx+rax*1],cl
   14004fb02:	add    BYTE PTR es:[rip+0x7c0000f0],al        # 0x1bc04fbf9
   14004fb09:	mov    eax,DWORD PTR [rbx]
   14004fb0b:	add    BYTE PTR [rax],dh
   14004fb0d:	mov    DWORD PTR [rax+rax*1],eax
   14004fb10:	and    eax,DWORD PTR [rcx]
   14004fb12:	add    BYTE PTR [rax],al
   14004fb14:	(bad)  
   14004fb15:	(bad)  
   14004fb16:	(bad)  
   14004fb17:	inc    DWORD PTR [rax]
   14004fb19:	add    BYTE PTR [rax],al
   14004fb1b:	add    BYTE PTR [rax],al
   14004fb1d:	add    BYTE PTR [rax],al
   14004fb1f:	add    BYTE PTR [rbx-0x27],bh
   14004fb22:	add    eax,DWORD PTR [rax]
   14004fb24:	(bad)  
   14004fb25:	(bad)  
   14004fb26:	(bad)  
   14004fb27:	inc    DWORD PTR [rax]
   14004fb29:	add    BYTE PTR [rax],al
   14004fb2b:	add    BYTE PTR [rax],al
   14004fb2d:	add    BYTE PTR [rax],al
   14004fb2f:	add    BYTE PTR [rcx],al
   14004fb31:	add    BYTE PTR [rax],al
   14004fb33:	add    BYTE PTR [rdx],al
   14004fb35:	add    BYTE PTR [rax],al
   14004fb37:	add    BYTE PTR [rcx],al
   14004fb39:	add    BYTE PTR [rax],al
   14004fb3b:	add    BYTE PTR [rax-0x5],al
   14004fb3e:	add    al,0x0
   14004fb40:	or     BYTE PTR [rax],al
   14004fb42:	add    BYTE PTR [rax],al
   14004fb44:	nop
   14004fb45:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004fb46:	add    eax,0x9000
   14004fb4b:	add    BYTE PTR [rdi+0x580003d9],al
   14004fb51:	add    BYTE PTR [rax],al
   14004fb53:	add    BYTE PTR [rdx+rdx*4+0x0],bh
   14004fb57:	add    bh,bh
   14004fb59:	(bad)  
   14004fb5a:	(bad)  
   14004fb5b:	inc    DWORD PTR [rax]
   14004fb5d:	xchg   esp,eax
   14004fb5e:	add    BYTE PTR [rax],al
   14004fb60:	add    BYTE PTR [rax],al
   14004fb62:	add    BYTE PTR [rax],al
   14004fb64:	adc    dl,BYTE PTR [rax+rax*1+0x100]
   14004fb6b:	add    BYTE PTR [rbp-0x6c],ch
   14004fb6e:	add    BYTE PTR [rax],al
   14004fb70:	add    BYTE PTR [rax],al
   14004fb72:	add    BYTE PTR [rax],al
   14004fb74:	jnp    0x14004fb0a
   14004fb76:	add    BYTE PTR [rax],al
   14004fb78:	(bad)  
   14004fb79:	(bad)  
   14004fb7a:	(bad)  
   14004fb7b:	inc    DWORD PTR [rdi+0x3d9]
   14004fb81:	add    BYTE PTR [rax],al
   14004fb83:	add    BYTE PTR [rcx+rbx*8+0x20003],dl
   14004fb8a:	add    BYTE PTR [rax],al
   14004fb8c:	test   eax,0x3d9
   14004fb91:	add    BYTE PTR [rax],al
   14004fb93:	add    BYTE PTR [rcx],bl
   14004fb95:	or     al,BYTE PTR [rdx]
   14004fb97:	add    BYTE PTR [rdx],cl
   14004fb99:	jb     0x14004fba1
   14004fb9b:	push   rax
   14004fb9c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004fb9d:	sub    al,0x3
   14004fb9f:	add    BYTE PTR [rax],dh
   14004fba1:	mov    DWORD PTR [rax+rax*1],eax
   14004fba4:	adc    DWORD PTR [rbx],ebx
   14004fba6:	or     BYTE PTR [rax],al
   14004fba8:	sbb    edx,DWORD PTR [rax+rdx*1+0x0]
   14004fbac:	(bad)  
   14004fbad:	xor    al,0xe
   14004fbaf:	add    BYTE PTR [rbx],cl
   14004fbb1:	xchg   edx,eax
   14004fbb2:	(bad)  
   14004fbb3:	loopne 0x14004fbba
   14004fbb5:	jo     0x14004fbbb
   14004fbb7:	(bad)  
   14004fbb8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004fbb9:	sub    al,0x3
   14004fbbb:	add    BYTE PTR [rax-0x77],ah
   14004fbbe:	add    al,0x0
   14004fbc0:	(bad)  
   14004fbc1:	(bad)  
   14004fbc2:	(bad)  
   14004fbc3:	dec    DWORD PTR [rbp-0xfffc28]
   14004fbc9:	(bad)  
   14004fbca:	(bad)  
   14004fbcb:	call   FWORD PTR [rcx+0x700003d8]
   14004fbd1:	nop
   14004fbd2:	add    BYTE PTR [rax],al
   14004fbd4:	(bad)  
   14004fbd5:	(bad)  
   14004fbd6:	(bad)  
   14004fbd7:	call   QWORD PTR [rdx-0x6f]
   14004fbda:	add    BYTE PTR [rax],al
   14004fbdc:	add    BYTE PTR [rax],al
   14004fbde:	add    BYTE PTR [rax],al
   14004fbe0:	movsxd edx,DWORD PTR [rcx+0x10000]
   14004fbe6:	add    BYTE PTR [rax],al
   14004fbe8:	(bad)  
   14004fbe9:	xchg   ecx,eax
   14004fbea:	add    BYTE PTR [rax],al
   14004fbec:	(bad)  
   14004fbed:	(bad)  
   14004fbee:	(bad)  
   14004fbef:	call   FWORD PTR [rcx]
   14004fbf1:	cmp    al,0xb
   14004fbf3:	add    BYTE PTR [rbx],ch
   14004fbf5:	xor    al,0x96
   14004fbf7:	add    BYTE PTR [rcx+rax*1],bl
   14004fbfa:	mov    WORD PTR [rax],es
   14004fbfc:	(bad)  
   14004fbfd:	lock or al,0xe0
   14004fc00:	or     dl,al
   14004fc02:	or     al,al
   14004fc04:	(bad)  
   14004fc05:	jo     0x14004fc0c
   14004fc07:	(bad)  
   14004fc08:	add    al,0x50
   14004fc0a:	add    BYTE PTR [rax],al
   14004fc0c:	jl     0x14004fb99
   14004fc0e:	add    eax,DWORD PTR [rax]
   14004fc10:	nop
   14004fc11:	mov    DWORD PTR [rax+rax*1],eax
   14004fc14:	push   rdx
   14004fc15:	add    al,0x0
   14004fc17:	add    bh,bh
   14004fc19:	(bad)  
   14004fc1a:	(bad)  
   14004fc1b:	(bad)  
   14004fc1c:	std    
   14004fc1d:	(bad)  
   14004fc1e:	add    eax,DWORD PTR [rax]
   14004fc20:	(bad)  
   14004fc21:	(bad)  
   14004fc22:	(bad)  
   14004fc23:	dec    DWORD PTR [rcx]
   14004fc25:	xlat   BYTE PTR ds:[rbx]
   14004fc26:	add    eax,DWORD PTR [rax]
   14004fc28:	(bad)  
   14004fc29:	(bad)  
   14004fc2a:	(bad)  
   14004fc2b:	inc    DWORD PTR [rax]
   14004fc2d:	add    BYTE PTR [rax],al
   14004fc2f:	add    bh,bh
   14004fc31:	(bad)  
   14004fc32:	(bad)  
   14004fc33:	inc    DWORD PTR [rax]
   14004fc35:	add    BYTE PTR [rax],al
   14004fc37:	add    bh,bh
   14004fc39:	(bad)  
   14004fc3a:	(bad)  
   14004fc3b:	inc    DWORD PTR [rax]
   14004fc3d:	add    BYTE PTR [rax],al
   14004fc3f:	add    BYTE PTR [rcx],al
   14004fc41:	add    BYTE PTR [rax],al
   14004fc43:	add    BYTE PTR [rip+0x50003d7],dl        # 0x145050020
   14004fc49:	add    BYTE PTR [rax],al
   14004fc4b:	add    BYTE PTR [rcx],ah
   14004fc4d:	xlat   BYTE PTR ds:[rbx]
   14004fc4e:	add    eax,DWORD PTR [rax]
   14004fc50:	add    eax,0x2d000000
   14004fc55:	xlat   BYTE PTR ds:[rbx]
   14004fc56:	add    eax,DWORD PTR [rax]
   14004fc58:	add    eax,0x39000000
   14004fc5d:	xlat   BYTE PTR ds:[rbx]
   14004fc5e:	add    eax,DWORD PTR [rax]
   14004fc60:	add    DWORD PTR [rax],eax
   14004fc62:	add    BYTE PTR [rax],al
   14004fc64:	rex.RB xlat BYTE PTR ds:[rbx]
   14004fc66:	add    eax,DWORD PTR [rax]
   14004fc68:	or     DWORD PTR [rax],eax
   14004fc6a:	add    BYTE PTR [rax],al
   14004fc6c:	push   rcx
   14004fc6d:	xlat   BYTE PTR ds:[rbx]
   14004fc6e:	add    eax,DWORD PTR [rax]
   14004fc70:	or     DWORD PTR [rax],eax
   14004fc72:	add    BYTE PTR [rax],al
   14004fc74:	pop    rbp
   14004fc75:	xlat   BYTE PTR ds:[rbx]
   14004fc76:	add    eax,DWORD PTR [rax]
   14004fc78:	or     DWORD PTR [rax],eax
   14004fc7a:	add    BYTE PTR [rax],al
   14004fc7c:	imul   edx,edi,0x90003
   14004fc82:	add    BYTE PTR [rax],al
   14004fc84:	jne    0x14004fc5d
   14004fc86:	add    eax,DWORD PTR [rax]
   14004fc88:	or     eax,0x81000000
   14004fc8d:	xlat   BYTE PTR ds:[rbx]
   14004fc8e:	add    eax,DWORD PTR [rax]
   14004fc90:	or     eax,0x8d000000
   14004fc95:	xlat   BYTE PTR ds:[rbx]
   14004fc96:	add    eax,DWORD PTR [rax]
   14004fc98:	or     eax,0x99000000
   14004fc9d:	xlat   BYTE PTR ds:[rbx]
   14004fc9e:	add    eax,DWORD PTR [rax]
   14004fca0:	adc    BYTE PTR [rax],al
   14004fca2:	add    BYTE PTR [rax],al
   14004fca4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004fca5:	xlat   BYTE PTR ds:[rbx]
   14004fca6:	add    eax,DWORD PTR [rax]
   14004fca8:	adc    DWORD PTR [rax],eax
   14004fcaa:	add    BYTE PTR [rax],al
   14004fcac:	mov    cl,0xd7
   14004fcae:	add    eax,DWORD PTR [rax]
   14004fcb0:	adc    DWORD PTR [rax],eax
   14004fcb2:	add    BYTE PTR [rax],al
   14004fcb4:	mov    ebp,0x110003d7
   14004fcb9:	add    BYTE PTR [rax],al
   14004fcbb:	add    cl,cl
   14004fcbd:	xlat   BYTE PTR ds:[rbx]
   14004fcbe:	add    eax,DWORD PTR [rax]
   14004fcc0:	adc    DWORD PTR [rax],eax
   14004fcc2:	add    BYTE PTR [rax],al
   14004fcc4:	(bad)  
   14004fcc5:	xlat   BYTE PTR ds:[rbx]
   14004fcc6:	add    eax,DWORD PTR [rax]
   14004fcc8:	adc    DWORD PTR [rax],eax
   14004fcca:	add    BYTE PTR [rax],al
   14004fccc:	loope  0x14004fca5
   14004fcce:	add    eax,DWORD PTR [rax]
   14004fcd0:	adc    DWORD PTR [rax],eax
   14004fcd2:	add    BYTE PTR [rax],al
   14004fcd4:	in     eax,dx
   14004fcd5:	xlat   BYTE PTR ds:[rbx]
   14004fcd6:	add    eax,DWORD PTR [rax]
   14004fcd8:	adc    DWORD PTR [rax],eax
   14004fcda:	add    BYTE PTR [rax],al
   14004fcdc:	stc    
   14004fcdd:	xlat   BYTE PTR ds:[rbx]
   14004fcde:	add    eax,DWORD PTR [rax]
   14004fce0:	adc    DWORD PTR [rax],eax
   14004fce2:	add    BYTE PTR [rax],al
   14004fce4:	add    eax,0xd0003d8
   14004fce9:	add    BYTE PTR [rax],al
   14004fceb:	add    BYTE PTR [rcx],dl
   14004fced:	fadd   DWORD PTR [rbx]
   14004fcef:	add    BYTE PTR [rcx],cl
   14004fcf1:	add    BYTE PTR [rax],al
   14004fcf3:	add    BYTE PTR [rip+0x90003d8],bl        # 0x1490500d1
   14004fcf9:	add    BYTE PTR [rax],al
   14004fcfb:	add    BYTE PTR [rcx],ch
   14004fcfd:	fadd   DWORD PTR [rbx]
   14004fcff:	add    BYTE PTR [rcx],cl
   14004fd01:	add    BYTE PTR [rax],al
   14004fd03:	add    BYTE PTR [rip+0x90003d8],dh        # 0x1490500e1
   14004fd09:	add    BYTE PTR [rax],al
   14004fd0b:	add    BYTE PTR [rcx-0x28],al
   14004fd0e:	add    eax,DWORD PTR [rax]
   14004fd10:	(bad)  
   14004fd11:	(bad)  
   14004fd12:	(bad)  
   14004fd13:	inc    DWORD PTR [rax]
   14004fd15:	add    BYTE PTR [rax],al
   14004fd17:	add    bh,bh
   14004fd19:	(bad)  
   14004fd1a:	(bad)  
   14004fd1b:	dec    DWORD PTR [rbp-0x28]
   14004fd1e:	add    eax,DWORD PTR [rax]
   14004fd20:	in     al,dx
   14004fd21:	add    DWORD PTR [rax],0x0
   14004fd24:	(bad)  
   14004fd25:	(bad)  
   14004fd26:	(bad)  
   14004fd27:	call   QWORD PTR [rbp-0x7c]
   14004fd2a:	add    BYTE PTR [rax],al
   14004fd2c:	add    DWORD PTR [rax],eax
   14004fd2e:	add    BYTE PTR [rax],al
   14004fd30:	pop    QWORD PTR [rbp+0x50000]
   14004fd36:	add    BYTE PTR [rax],al
   14004fd38:	mov    dh,0x85
   14004fd3a:	add    BYTE PTR [rax],al
   14004fd3c:	(bad)  
   14004fd3d:	add    BYTE PTR [rax],al
   14004fd3f:	add    ch,dh
   14004fd41:	test   DWORD PTR [rax],eax
   14004fd43:	add    BYTE PTR [rip+0x1e000000],al        # 0x15e04fd49
   14004fd49:	xchg   BYTE PTR [rax],al
   14004fd4b:	add    BYTE PTR [rdi],al
   14004fd4d:	add    BYTE PTR [rax],al
   14004fd4f:	add    BYTE PTR [rsi+rax*4],dh
   14004fd52:	add    BYTE PTR [rax],al
   14004fd54:	add    DWORD PTR [rax],eax
   14004fd56:	add    BYTE PTR [rax],al
   14004fd58:	rex.WX xchg BYTE PTR [rax],al
   14004fd5b:	add    BYTE PTR [rcx],cl
   14004fd5d:	add    BYTE PTR [rax],al
   14004fd5f:	add    BYTE PTR [rcx-0x7a],dh
   14004fd62:	add    BYTE PTR [rax],al
   14004fd64:	or     eax,DWORD PTR [rax]
   14004fd66:	add    BYTE PTR [rax],al
   14004fd68:	mov    al,0x86
   14004fd6a:	add    BYTE PTR [rax],al
   14004fd6c:	or     DWORD PTR [rax],eax
   14004fd6e:	add    BYTE PTR [rax],al
   14004fd70:	fld    DWORD PTR [rsi+0xb0000]
   14004fd76:	add    BYTE PTR [rax],al
   14004fd78:	out    dx,eax
   14004fd79:	xchg   BYTE PTR [rax],al
   14004fd7b:	add    BYTE PTR [rcx],cl
   14004fd7d:	add    BYTE PTR [rax],al
   14004fd7f:	add    BYTE PTR [rdi+rax*4],ch
   14004fd82:	add    BYTE PTR [rax],al
   14004fd84:	or     eax,0x4a000000
   14004fd89:	xchg   DWORD PTR [rax],eax
   14004fd8b:	add    BYTE PTR [rsi],cl
   14004fd8d:	add    BYTE PTR [rax],al
   14004fd8f:	add    BYTE PTR [rcx-0x79],bl
   14004fd92:	add    BYTE PTR [rax],al
   14004fd94:	or     eax,0x89000000
   14004fd99:	xchg   DWORD PTR [rax],eax
   14004fd9b:	add    BYTE PTR [rax],dl
   14004fd9d:	add    BYTE PTR [rax],al
   14004fd9f:	add    BYTE PTR [rbx+0x11000087],dl
   14004fda5:	add    BYTE PTR [rax],al
   14004fda7:	add    ah,dh
   14004fda9:	mov    BYTE PTR [rax],al
   14004fdab:	add    BYTE PTR [rdx],dl
   14004fdad:	add    BYTE PTR [rax],al
   14004fdaf:	add    BYTE PTR [rax],dl
   14004fdb1:	mov    DWORD PTR [rax],eax
   14004fdb3:	add    BYTE PTR [rcx],dl
   14004fdb5:	add    BYTE PTR [rax],al
   14004fdb7:	add    BYTE PTR [rsi-0x77],al
   14004fdba:	add    BYTE PTR [rax],al
   14004fdbc:	adc    eax,0x86000000
   14004fdc1:	mov    DWORD PTR [rax],eax
   14004fdc3:	add    BYTE PTR [rcx],dl
   14004fdc5:	add    BYTE PTR [rax],al
   14004fdc7:	add    ch,al
   14004fdc9:	mov    DWORD PTR [rax],eax
   14004fdcb:	add    BYTE PTR [rdx],dl
   14004fdcd:	add    BYTE PTR [rax],al
   14004fdcf:	add    bl,bl
   14004fdd1:	mov    DWORD PTR [rax],eax
   14004fdd3:	add    BYTE PTR [rcx],dl
   14004fdd5:	add    BYTE PTR [rax],al
   14004fdd7:	add    BYTE PTR [rip+0x1500008a],bl        # 0x15504fe67
   14004fddd:	add    BYTE PTR [rax],al
   14004fddf:	add    BYTE PTR [rbx],dh
   14004fde1:	mov    al,BYTE PTR [rax]
   14004fde3:	add    BYTE PTR [rcx],dl
   14004fde5:	add    BYTE PTR [rax],al
   14004fde7:	add    BYTE PTR [rdx+0x1800008a],dl
   14004fded:	add    BYTE PTR [rax],al
   14004fdef:	add    dl,al
   14004fdf1:	mov    al,BYTE PTR [rax]
   14004fdf3:	add    BYTE PTR [rcx],dl
   14004fdf5:	add    BYTE PTR [rax],al
   14004fdf7:	add    al,ah
   14004fdf9:	mov    al,BYTE PTR [rax]
   14004fdfb:	add    BYTE PTR [rax],dl
   14004fdfd:	add    BYTE PTR [rax],al
   14004fdff:	add    bl,ch
   14004fe01:	mov    al,BYTE PTR [rax]
   14004fe03:	add    BYTE PTR [rip+0xb000000],cl        # 0x14b04fe09
   14004fe09:	mov    eax,DWORD PTR [rax]
   14004fe0b:	add    BYTE PTR [rcx],cl
   14004fe0d:	add    BYTE PTR [rax],al
   14004fe0f:	add    BYTE PTR [rdx],bh
   14004fe11:	mov    eax,DWORD PTR [rax]
   14004fe13:	add    BYTE PTR [rax+rax*1],bl
   14004fe16:	add    BYTE PTR [rax],al
   14004fe18:	jne    0x14004fda5
   14004fe1a:	add    BYTE PTR [rax],al
   14004fe1c:	or     DWORD PTR [rax],eax
   14004fe1e:	add    BYTE PTR [rax],al
   14004fe20:	leave  
   14004fe21:	mov    WORD PTR [rax],es
   14004fe23:	add    BYTE PTR [rsi],bl
   14004fe25:	add    BYTE PTR [rax],al
   14004fe27:	add    bl,dh
   14004fe29:	pop    QWORD PTR [rax]
   14004fe2b:	add    BYTE PTR [rcx],cl
   14004fe2d:	add    BYTE PTR [rax],al
   14004fe2f:	add    BYTE PTR [rip+0x1000090],ah        # 0x14104fec5
   14004fe35:	add    BYTE PTR [rax],al
   14004fe37:	add    BYTE PTR [rdi],ch
   14004fe39:	nop
   14004fe3a:	add    BYTE PTR [rax],al
   14004fe3c:	(bad)  
   14004fe3d:	(bad)  
   14004fe3e:	(bad)  
   14004fe3f:	call   FWORD PTR [rcx]
   14004fe41:	xor    DWORD PTR [rcx],ecx
   14004fe43:	add    BYTE PTR [rbx],dl
   14004fe45:	add    esp,esi
   14004fe47:	add    BYTE PTR [rax+rsi*8],cl
   14004fe4a:	or     ah,al
   14004fe4c:	or     al,dl
   14004fe4e:	(bad)  
   14004fe4f:	rol    BYTE PTR [rax+rsi*2],0x3
   14004fe53:	(bad)  
   14004fe54:	add    dh,BYTE PTR [rax]
   14004fe56:	add    BYTE PTR [rax],al
   14004fe58:	jl     0x14004fde5
   14004fe5a:	add    eax,DWORD PTR [rax]
   14004fe5c:	ror    BYTE PTR [rcx+0x7930004],0x0
   14004fe63:	add    bh,bh
   14004fe65:	(bad)  
   14004fe66:	(bad)  
   14004fe67:	inc    DWORD PTR [rbp+0x3d6]
   14004fe6d:	add    BYTE PTR [rax],al
   14004fe6f:	add    BYTE PTR [rcx-0xfffc2a],dl
   14004fe75:	(bad)  
   14004fe76:	(bad)  
   14004fe77:	jmp    QWORD PTR [rcx+0x20003d6]
   14004fe7d:	add    BYTE PTR [rax],al
   14004fe7f:	add    BYTE PTR [rax],al
   14004fe81:	add    BYTE PTR [rax],al
   14004fe83:	add    BYTE PTR [rbx],al
   14004fe85:	add    BYTE PTR [rax],al
   14004fe87:	add    BYTE PTR [rbp+0x40003d6],ch
   14004fe8d:	add    BYTE PTR [rax],al
   14004fe8f:	add    BYTE PTR [rcx+0x50003d6],bh
   14004fe95:	add    BYTE PTR [rax],al
   14004fe97:	add    ch,al
   14004fe99:	(bad)  
   14004fe9a:	add    eax,DWORD PTR [rax]
   14004fe9c:	add    al,BYTE PTR [rax]
   14004fe9e:	add    BYTE PTR [rax],al
   14004fea0:	add    BYTE PTR [rax],al
   14004fea2:	add    BYTE PTR [rax],al
   14004fea4:	add    eax,DWORD PTR [rax]
   14004fea6:	add    BYTE PTR [rax],al
   14004fea8:	(bad)  
   14004fea9:	add    BYTE PTR [rax],al
   14004feab:	add    BYTE PTR [rdi],al
   14004fead:	add    BYTE PTR [rax],al
   14004feaf:	add    BYTE PTR [rcx],al
   14004feb1:	add    BYTE PTR [rax],al
   14004feb3:	add    BYTE PTR [rax+0x80004fe],bh
   14004feb9:	add    BYTE PTR [rax],al
   14004febb:	add    BYTE PTR [rax-0x7ffffa5b],ch
   14004fec1:	add    BYTE PTR [rax],al
   14004fec3:	add    cl,dl
   14004fec5:	(bad)  
   14004fec6:	add    eax,DWORD PTR [rax]
   14004fec8:	pop    rax
   14004fec9:	add    BYTE PTR [rax],al
   14004fecb:	add    ah,ch
   14004fecd:	jnp    0x14004fecf
   14004fecf:	add    bh,bh
   14004fed1:	(bad)  
   14004fed2:	(bad)  
   14004fed3:	dec    DWORD PTR [rcx+0x7d]
   14004fed6:	add    BYTE PTR [rax],al
   14004fed8:	add    BYTE PTR [rax],al
   14004feda:	add    BYTE PTR [rax],al
   14004fedc:	outs   dx,DWORD PTR ds:[rsi]
   14004fedd:	jge    0x14004fedf
   14004fedf:	add    BYTE PTR [rcx],al
   14004fee1:	add    BYTE PTR [rax],al
   14004fee3:	add    BYTE PTR [rbp+0x200007d],dh
   14004fee9:	add    BYTE PTR [rax],al
   14004feeb:	add    ch,dl
   14004feed:	jge    0x14004feef
   14004feef:	add    BYTE PTR [rbx],al
   14004fef1:	add    BYTE PTR [rax],al
   14004fef3:	add    cl,ch
   14004fef5:	jge    0x14004fef7
   14004fef7:	add    bh,bh
   14004fef9:	(bad)  
   14004fefa:	(bad)  
   14004fefb:	(bad)  
   14004fefc:	sti    
   14004fefd:	jge    0x14004feff
   14004feff:	add    BYTE PTR [rbx],al
   14004ff01:	add    BYTE PTR [rax],al
   14004ff03:	add    BYTE PTR [rsi+rdi*2+0x0],al
   14004ff07:	add    bh,bh
   14004ff09:	(bad)  
   14004ff0a:	(bad)  
   14004ff0b:	call   QWORD PTR [rsi+0x7e]
   14004ff0e:	add    BYTE PTR [rax],al
   14004ff10:	add    eax,DWORD PTR [rax]
   14004ff12:	add    BYTE PTR [rax],al
   14004ff14:	jp     0x14004ff94
   14004ff16:	add    BYTE PTR [rax],al
   14004ff18:	(bad)  
   14004ff19:	(bad)  
   14004ff1a:	(bad)  
   14004ff1b:	dec    DWORD PTR [rsi+rdi*2+0x30000]
   14004ff22:	add    BYTE PTR [rax],al
   14004ff24:	(bad)  
   14004ff25:	jle    0x14004ff27
   14004ff27:	add    BYTE PTR [rax+rax*1],al
   14004ff2a:	add    BYTE PTR [rax],al
   14004ff2c:	(bad)  
   14004ff2d:	add    BYTE PTR [rax],0x0
   14004ff30:	add    eax,DWORD PTR [rax]
   14004ff32:	add    BYTE PTR [rax],al
   14004ff34:	xor    eax,0xff000080
   14004ff39:	(bad)  
   14004ff3a:	(bad)  
   14004ff3b:	inc    DWORD PTR [rdi-0x80]
   14004ff3e:	add    BYTE PTR [rax],al
   14004ff40:	add    al,0x0
   14004ff42:	add    BYTE PTR [rax],al
   14004ff44:	push   0x3000080
   14004ff49:	add    BYTE PTR [rax],al
   14004ff4b:	add    BYTE PTR [rsi-0x80],dh
   14004ff4e:	add    BYTE PTR [rax],al
   14004ff50:	(bad)  
   14004ff51:	(bad)  
   14004ff52:	(bad)  
   14004ff53:	dec    DWORD PTR [rax+0x4000080]
   14004ff59:	add    BYTE PTR [rax],al
   14004ff5b:	add    BYTE PTR [rdx+0x3000080],bh
   14004ff61:	add    BYTE PTR [rax],al
   14004ff63:	add    al,cl
   14004ff65:	add    BYTE PTR [rax],0x0
   14004ff68:	(bad)  
   14004ff69:	(bad)  
   14004ff6a:	(bad)  
   14004ff6b:	(bad)  
   14004ff6c:	fiadd  DWORD PTR [rax+0x40000]
   14004ff72:	add    BYTE PTR [rax],al
   14004ff74:	add    DWORD PTR es:[rax],0x300
   14004ff7b:	add    BYTE PTR [rcx+rax*4],dh
   14004ff7e:	add    BYTE PTR [rax],al
   14004ff80:	(bad)  
   14004ff81:	(bad)  
   14004ff82:	(bad)  
   14004ff83:	inc    DWORD PTR [rsi-0x7f]
   14004ff86:	add    BYTE PTR [rax],al
   14004ff88:	add    al,0x0
   14004ff8a:	add    BYTE PTR [rax],al
   14004ff8c:	jo     0x14004ff0f
   14004ff8e:	add    BYTE PTR [rax],al
   14004ff90:	add    eax,0xe4000000
   14004ff95:	add    DWORD PTR [rax],0x600
   14004ff9b:	add    BYTE PTR [rcx+0x5000083],dl
   14004ffa1:	add    BYTE PTR [rax],al
   14004ffa3:	add    BYTE PTR [rdi+0x4000083],bl
   14004ffa9:	add    BYTE PTR [rax],al
   14004ffab:	add    BYTE PTR [rbp+0x3000083],ch
   14004ffb1:	add    BYTE PTR [rax],al
   14004ffb3:	add    BYTE PTR [rbx-0xffff7d],bh
   14004ffb9:	(bad)  
   14004ffba:	(bad)  
   14004ffbb:	call   rcx
   14004ffbd:	(bad)  
   14004ffbe:	add    eax,DWORD PTR [rax]
   14004ffc0:	add    BYTE PTR [rax],al
   14004ffc2:	add    BYTE PTR [rax],al
   14004ffc4:	(bad)  
   14004ffc6:	add    eax,DWORD PTR [rax]
   14004ffc8:	(bad)  
   14004ffc9:	add    BYTE PTR [rax],al
   14004ffcb:	add    bh,ch
   14004ffcd:	(bad)  
   14004ffce:	add    eax,DWORD PTR [rax]
   14004ffd0:	add    BYTE PTR [rax],al
   14004ffd2:	add    BYTE PTR [rax],al
   14004ffd4:	sbb    DWORD PTR [rdx],ecx
   14004ffd6:	add    al,BYTE PTR [rax]
   14004ffd8:	or     dh,BYTE PTR [rdx+0x6]
   14004ffdb:	push   rax
   14004ffdc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ffdd:	sub    al,0x3
   14004ffdf:	add    al,al
   14004ffe1:	mov    DWORD PTR [rax+rax*1],eax
   14004ffe4:	sbb    DWORD PTR [rbx],edx
   14004ffe6:	add    DWORD PTR [rax],eax
   14004ffe8:	or     esp,DWORD PTR [rdx+0x2ca40000]
   14004ffee:	add    eax,DWORD PTR [rax]
   14004fff0:	lock mov DWORD PTR [rax+rax*1],eax
	...
   14004fffc:	add    DWORD PTR [rax],eax
   14004fffe:	add    BYTE PTR [rax],al
   140050000:	add    DWORD PTR [rax],eax
   140050002:	add    BYTE PTR [rax],al
   140050004:	or     BYTE PTR [rax],al
   140050006:	add    eax,0x800
   14005000b:	add    BYTE PTR [rax+0x480005a5],ch
   140050011:	add    BYTE PTR [rax],al
   140050013:	add    BYTE PTR [rbp+0x580003d8],ah
   140050019:	add    BYTE PTR [rax],al
   14005001b:	add    BYTE PTR [rbx+rdi*2-0x10000],ah
   140050022:	(bad)  
   140050023:	(bad)  
   140050024:	mov    edx,0x7b
   140050029:	add    BYTE PTR [rax],al
   14005002b:	add    dh,bl
   14005002d:	jnp    0x14005002f
   14005002f:	add    bh,bh
   140050031:	(bad)  
   140050032:	(bad)  
   140050033:	jmp    QWORD PTR [rbp+0x3d8]
   140050039:	add    BYTE PTR [rax],al
   14005003b:	add    BYTE PTR [rdx+0x10003d8],dh
   140050041:	add    BYTE PTR [rax],al
   140050043:	add    al,bl
   140050045:	fadd   DWORD PTR [rbx]
   140050047:	add    BYTE PTR [rax],al
   140050049:	add    BYTE PTR [rax],al
   14005004b:	add    cl,ah
   14005004d:	fadd   DWORD PTR [rbx]
   14005004f:	add    BYTE PTR [rcx],al
   140050051:	add    BYTE PTR [rax],al
   140050053:	add    bl,ch
   140050055:	fadd   DWORD PTR [rbx]
   140050057:	add    BYTE PTR [rax],al
   140050059:	add    BYTE PTR [rax],al
   14005005b:	add    BYTE PTR [rcx],bl
   14005005d:	or     al,BYTE PTR [rdx]
   14005005f:	add    BYTE PTR [rdx],cl
   140050061:	jb     0x140050069
   140050063:	push   rax
   140050064:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050065:	sub    al,0x3
   140050067:	add    al,dh
   140050069:	mov    DWORD PTR [rax+rax*1],eax
   14005006c:	adc    DWORD PTR [rdi],ebx
   14005006e:	or     al,BYTE PTR [rax]
   140050070:	(bad)  
   140050071:	push   rsp
   140050072:	adc    eax,DWORD PTR [rax]
   140050074:	sbb    esi,DWORD PTR [rax+rdx*1]
   140050077:	add    BYTE PTR [rdi],cl
   140050079:	xchg   edx,eax
   14005007a:	or     esi,eax
   14005007c:	or     eax,esp
   14005007e:	(bad)  
   14005007f:	rol    BYTE PTR [rip+0xffffffffa4600470],0x2c        # 0xe46504f6
   140050086:	add    eax,DWORD PTR [rax]
   140050088:	and    BYTE PTR [rdx-0xfffc],cl
   14005008e:	(bad)  
   14005008f:	jmp    QWORD PTR [rsi]
   140050091:	iret   
   140050092:	add    eax,DWORD PTR [rax]
   140050094:	(bad)  
   140050095:	(bad)  
   140050096:	(bad)  
   140050097:	push   QWORD PTR [rdx]
   140050099:	iret   
   14005009a:	add    eax,DWORD PTR [rax]
   14005009c:	(bad)  
   14005009d:	(bad)  
   14005009e:	(bad)  
   14005009f:	(bad)  
   1400500a0:	ds iret 
   1400500a2:	add    eax,DWORD PTR [rax]
   1400500a4:	(bad)  
   1400500a5:	(bad)  
   1400500a6:	(bad)  
   1400500a7:	dec    DWORD PTR [rdx-0x31]
   1400500aa:	add    eax,DWORD PTR [rax]
   1400500ac:	rex.WR js 0x1400500af
   1400500af:	add    bh,bh
   1400500b1:	(bad)  
   1400500b2:	(bad)  
   1400500b3:	call   QWORD PTR [rcx+rdi*2+0x0]
   1400500ba:	add    BYTE PTR [rax],al
   1400500bc:	xchg   edi,eax
   1400500bd:	jns    0x1400500bf
   1400500bf:	add    bh,bh
   1400500c1:	(bad)  
   1400500c2:	(bad)  
   1400500c3:	push   QWORD PTR [rbx+0x1000079]
   1400500c9:	add    BYTE PTR [rax],al
   1400500cb:	add    BYTE PTR [rdi-0xffff87],bh
   1400500d1:	(bad)  
   1400500d2:	(bad)  
   1400500d3:	push   QWORD PTR [rdx+rdi*2+0x0]
   1400500d7:	add    BYTE PTR [rdx],al
   1400500d9:	add    BYTE PTR [rax],al
   1400500db:	add    BYTE PTR [rdx-0xffff86],al
   1400500e1:	(bad)  
   1400500e2:	(bad)  
   1400500e3:	call   QWORD PTR [rcx]
   1400500e5:	adc    eax,DWORD PTR [rdx]
   1400500e7:	add    BYTE PTR [rdx],cl
   1400500e9:	push   rdx
   1400500ea:	(bad)  
   1400500eb:	xor    BYTE PTR [rsp+rbp*1-0x75affffd],ah
   1400500f2:	add    al,0x0
   1400500f4:	or     al,0x78
   1400500f6:	add    BYTE PTR [rax],al
   1400500f8:	(bad)  
   1400500f9:	(bad)  
   1400500fa:	(bad)  
   1400500fb:	push   QWORD PTR [rdi]
   1400500fd:	js     0x1400500ff
   1400500ff:	add    BYTE PTR [rax],al
   140050101:	add    BYTE PTR [rax],al
   140050103:	add    BYTE PTR [rcx],dl
   140050105:	adc    eax,DWORD PTR [rdx]
   140050107:	add    BYTE PTR [rdx],cl
   140050109:	push   rdx
   14005010a:	(bad)  
   14005010b:	xor    BYTE PTR [rsp+rbp*1-0x757ffffd],ah
   140050112:	add    al,0x0
   140050114:	int3   
   140050115:	ja     0x140050117
   140050117:	add    bh,bh
   140050119:	(bad)  
   14005011a:	(bad)  
   14005011b:	push   rdi
   14005011d:	ja     0x14005011f
   14005011f:	add    BYTE PTR [rax],al
   140050121:	add    BYTE PTR [rax],al
   140050123:	add    BYTE PTR [rcx],dl
   140050125:	adc    eax,DWORD PTR [rdx]
   140050127:	add    BYTE PTR [rdx],cl
   140050129:	push   rdx
   14005012a:	(bad)  
   14005012b:	xor    BYTE PTR [rsp+rbp*1-0x754ffffd],ah
   140050132:	add    al,0x0
   140050134:	(bad)  
   140050135:	(bad)  
   140050136:	(bad)  
   140050137:	(bad)  
   140050138:	stc    
   140050139:	fadd   DWORD PTR [rbx]
   14005013b:	add    BYTE PTR [rdi+rsi*2-0x10000],cl
   140050142:	(bad)  
   140050143:	push   QWORD PTR [rdi+0x77]
   140050149:	add    BYTE PTR [rax],al
   14005014b:	add    BYTE PTR [rcx],dl
   14005014d:	adc    eax,DWORD PTR [rdx]
   14005014f:	add    BYTE PTR [rdx],cl
   140050151:	push   rdx
   140050152:	(bad)  
   140050153:	xor    BYTE PTR [rsp+rbp*1-0x751ffffd],ah
   14005015a:	add    al,0x0
   14005015c:	rex.WR ja 0x14005015f
   14005015f:	add    bh,bh
   140050161:	(bad)  
   140050162:	(bad)  
   140050163:	push   QWORD PTR [rdi+0x77]
   140050166:	add    BYTE PTR [rax],al
   140050168:	add    BYTE PTR [rax],al
   14005016a:	add    BYTE PTR [rax],al
   14005016c:	adc    DWORD PTR [rbx],edx
   14005016e:	add    al,BYTE PTR [rax]
   140050170:	or     dl,BYTE PTR [rdx+0x6]
   140050173:	xor    BYTE PTR [rsp+rbp*1-0x74effffd],ah
   14005017a:	add    al,0x0
   14005017c:	or     al,0x77
   14005017e:	add    BYTE PTR [rax],al
   140050180:	(bad)  
   140050181:	(bad)  
   140050182:	(bad)  
   140050183:	push   QWORD PTR [rdi]
   140050185:	ja     0x140050187
   140050187:	add    BYTE PTR [rax],al
   140050189:	add    BYTE PTR [rax],al
   14005018b:	add    BYTE PTR [rcx],bl
   14005018d:	sbb    eax,DWORD PTR [rax+rax*1]
   140050190:	or     al,0x1
   140050192:	adc    DWORD PTR [rax],eax
   140050194:	add    eax,0x3c300470
   140050199:	in     eax,0x2
   14005019b:	add    BYTE PTR [rax+0x0],dh
   14005019e:	add    BYTE PTR [rax],al
   1400501a0:	sbb    DWORD PTR [rip+0x6427000b],esi        # 0x1a42c01b1
   1400501a6:	xor    eax,DWORD PTR [rax]
   1400501a8:	and    esi,DWORD PTR [rax+rsi*1]
   1400501ab:	add    BYTE PTR [rsi],dl
   1400501ad:	add    DWORD PTR [rdx],ebp
   1400501af:	add    BYTE PTR [rbx],cl
   1400501b1:	lock or eax,esp
   1400501b4:	(bad)  
   1400501b5:	rol    BYTE PTR [rip+0x500470],0x0        # 0x14055062c
   1400501bc:	jl     0x140050149
   1400501be:	add    eax,DWORD PTR [rax]
   1400501c0:	rex mov eax,DWORD PTR [rax+rax*1]
   1400501c4:	rex.X add DWORD PTR [rax],eax
   1400501c7:	add    bh,bh
   1400501c9:	(bad)  
   1400501ca:	(bad)  
   1400501cb:	(bad)  
   1400501cc:	(bad)  
   1400501cd:	fiadd  DWORD PTR [rbx]
   1400501cf:	add    bh,bh
   1400501d1:	(bad)  
   1400501d2:	(bad)  
   1400501d3:	dec    DWORD PTR [rdi]
   1400501d5:	fild   DWORD PTR [rbx]
   1400501d7:	add    bh,bh
   1400501d9:	(bad)  
   1400501da:	(bad)  
   1400501db:	call   FWORD PTR [rbx]
   1400501dd:	fild   DWORD PTR [rbx]
   1400501df:	add    bh,bh
   1400501e1:	(bad)  
   1400501e2:	(bad)  
   1400501e3:	jmp    FWORD PTR [rbx]
   1400501e5:	fild   DWORD PTR [rbx]
   1400501e7:	add    bh,bh
   1400501e9:	(bad)  
   1400501ea:	(bad)  
   1400501eb:	(bad)  
   1400501ec:	cmp    ebx,ebx
   1400501ee:	add    eax,DWORD PTR [rax]
   1400501f0:	(bad)  
   1400501f1:	(bad)  
   1400501f2:	(bad)  
   1400501f3:	dec    DWORD PTR [rbx-0x25]
   1400501f6:	add    eax,DWORD PTR [rax]
   1400501f8:	(bad)  
   1400501f9:	(bad)  
   1400501fa:	(bad)  
   1400501fb:	call   FWORD PTR [rbx-0x25]
   1400501fe:	add    eax,DWORD PTR [rax]
   140050200:	(bad)  
   140050201:	(bad)  
   140050202:	(bad)  
   140050203:	jmp    FWORD PTR [rbx-0x25]
   140050206:	add    eax,DWORD PTR [rax]
   140050208:	(bad)  
   140050209:	(bad)  
   14005020a:	(bad)  
   14005020b:	(bad)  
   14005020c:	jnp    0x1400501e9
   14005020e:	add    eax,DWORD PTR [rax]
   140050210:	(bad)  
   140050211:	(bad)  
   140050212:	(bad)  
   140050213:	inc    DWORD PTR [rax]
   140050215:	add    BYTE PTR [rax],al
   140050217:	add    BYTE PTR [rbp+rbp*8+0x0],dl
   14005021b:	add    bh,bh
   14005021d:	(bad)  
   14005021e:	(bad)  
   14005021f:	push   QWORD PTR [rbp+0xed]
   140050225:	add    BYTE PTR [rax],al
   140050227:	add    bl,cl
   140050229:	in     eax,dx
   14005022a:	add    BYTE PTR [rax],al
   14005022c:	add    DWORD PTR [rax],eax
   14005022e:	add    BYTE PTR [rax],al
   140050230:	in     al,dx
   140050231:	out    dx,al
   140050232:	add    BYTE PTR [rax],al
   140050234:	(bad)  
   140050235:	(bad)  
   140050236:	(bad)  
   140050237:	push   rcx
   140050239:	out    dx,al
   14005023a:	add    BYTE PTR [rax],al
   14005023c:	add    DWORD PTR [rax],eax
   14005023e:	add    BYTE PTR [rax],al
   140050240:	mov    dh,0xef
   140050242:	add    BYTE PTR [rax],al
   140050244:	(bad)  
   140050245:	(bad)  
   140050246:	(bad)  
   140050247:	(bad)  
   140050248:	mov    ebx,0x10000ef
   14005024d:	add    BYTE PTR [rax],al
   14005024f:	add    bh,cl
   140050251:	out    dx,eax
   140050252:	add    BYTE PTR [rax],al
   140050254:	(bad)  
   140050255:	(bad)  
   140050256:	(bad)  
   140050257:	call   rcx
   140050259:	out    dx,eax
   14005025a:	add    BYTE PTR [rax],al
   14005025c:	add    DWORD PTR [rax],eax
   14005025e:	add    BYTE PTR [rax],al
   140050260:	or     al,0xf0
   140050262:	add    BYTE PTR [rax],al
   140050264:	(bad)  
   140050265:	(bad)  
   140050266:	(bad)  
   140050267:	dec    DWORD PTR [rsi]
   140050269:	lock add BYTE PTR [rax],al
   14005026c:	add    DWORD PTR [rax],eax
   14005026e:	add    BYTE PTR [rax],al
   140050270:	and    eax,esi
   140050272:	add    BYTE PTR [rax],al
   140050274:	(bad)  
   140050275:	(bad)  
   140050276:	(bad)  
   140050277:	jmp    QWORD PTR [rbx]
   140050279:	lock add BYTE PTR [rax],al
   14005027c:	add    DWORD PTR [rax],eax
   14005027e:	add    BYTE PTR [rax],al
   140050280:	lock add BYTE PTR ss:[rax],al
   140050284:	(bad)  
   140050285:	(bad)  
   140050286:	(bad)  
   140050287:	(bad)  
   140050288:	cmp    al,dh
   14005028a:	add    BYTE PTR [rax],al
   14005028c:	add    DWORD PTR [rax],eax
   14005028e:	add    BYTE PTR [rax],al
   140050290:	rex.W
   140050291:	lock add BYTE PTR [rax],al
   140050294:	(bad)  
   140050295:	(bad)  
   140050296:	(bad)  
   140050297:	call   FWORD PTR [rcx]
   140050299:	and    al,0x3
   14005029b:	add    BYTE PTR [rcx],cl
   14005029d:	add    DWORD PTR [rax],ebp
   14005029f:	add    BYTE PTR [rdx],al
   1400502a1:	xor    BYTE PTR [rax],al
   1400502a3:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   1400502a7:	add    BYTE PTR [rax-0x75],dh
   1400502aa:	add    al,0x0
   1400502ac:	xor    al,BYTE PTR [rcx]
   1400502ae:	add    BYTE PTR [rax],al
   1400502b0:	(bad)  
   1400502b1:	(bad)  
   1400502b2:	(bad)  
   1400502b3:	inc    edi
   1400502b5:	fiadd  DWORD PTR [rbx]
   1400502b7:	add    bh,bh
   1400502b9:	(bad)  
   1400502ba:	(bad)  
   1400502bb:	call   rdi
   1400502bd:	fiadd  DWORD PTR [rbx]
   1400502bf:	add    BYTE PTR [rcx],al
   1400502c1:	add    BYTE PTR [rax],al
   1400502c3:	add    bl,ah
   1400502c5:	fiadd  DWORD PTR [rbx]
   1400502c7:	add    bh,bh
   1400502c9:	(bad)  
   1400502ca:	(bad)  
   1400502cb:	(bad)  
   1400502cc:	out    dx,eax
   1400502cd:	fiadd  DWORD PTR [rbx]
   1400502cf:	add    BYTE PTR [rsp+rbp*8+0x0],cl
   1400502d3:	add    bh,bh
   1400502d5:	(bad)  
   1400502d6:	(bad)  
   1400502d7:	dec    DWORD PTR [rsi+0xec]
   1400502dd:	add    BYTE PTR [rax],al
   1400502df:	add    BYTE PTR [rsp+rbp*8+0x10000],ch
   1400502e6:	add    BYTE PTR [rax],al
   1400502e8:	add    al,0xed
   1400502ea:	add    BYTE PTR [rax],al
   1400502ec:	add    al,BYTE PTR [rax]
   1400502ee:	add    BYTE PTR [rax],al
   1400502f0:	cs in  eax,dx
   1400502f2:	add    BYTE PTR [rax],al
   1400502f4:	(bad)  
   1400502f5:	(bad)  
   1400502f6:	(bad)  
   1400502f7:	call   FWORD PTR [rcx]
   1400502f9:	xor    BYTE PTR [rcx],cl
   1400502fb:	add    BYTE PTR [rdx],ah
   1400502fd:	sub    eax,DWORD PTR fs:[rax]
   140050300:	(bad)  
   140050301:	xor    al,0x2a
   140050303:	add    BYTE PTR [rdx],dl
   140050305:	add    DWORD PTR [rax+rax*1],esp
   140050308:	(bad)  
   140050309:	loopne 0x140050310
   14005030b:	jo     0x140050311
   14005030d:	push   rax
   14005030e:	add    BYTE PTR [rax],al
   140050310:	jl     0x14005029d
   140050312:	add    eax,DWORD PTR [rax]
   140050314:	movabs al,ds:0xff0000011200048b
   14005031d:	(bad)  
   14005031e:	(bad)  
   14005031f:	dec    DWORD PTR [rbx-0x13fffc25]
   140050325:	jmp    0x14004032a
   14005032a:	(bad)  
   14005032b:	dec    DWORD PTR [rdx+0xeb]
   140050331:	add    BYTE PTR [rax],al
   140050333:	add    cl,cl
   140050335:	jmp    0x140050337
   140050337:	add    bh,bh
   140050339:	(bad)  
   14005033a:	(bad)  
   14005033b:	call   QWORD PTR [rcx]
   14005033d:	adc    al,BYTE PTR [rbx]
   14005033f:	add    BYTE PTR [rdx],cl
   140050341:	loop   0x140050346
   140050343:	xor    BYTE PTR [rdx],al
   140050345:	push   rax
   140050346:	add    BYTE PTR [rax],al
   140050348:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050349:	sub    al,0x3
   14005034b:	add    al,dl
   14005034d:	mov    eax,DWORD PTR [rax+rax*1]
   140050350:	(bad)  
   140050351:	(bad)  
   140050352:	(bad)  
   140050353:	call   QWORD PTR [rdi+0x1c0003db]
   140050359:	jmp    0x14004035e
   14005035e:	(bad)  
   14005035f:	dec    DWORD PTR [rbp-0x17]
   140050362:	add    BYTE PTR [rax],al
   140050364:	add    BYTE PTR [rax],al
   140050366:	add    BYTE PTR [rax],al
   140050368:	fucompp 
   14005036a:	add    BYTE PTR [rax],al
   14005036c:	(bad)  
   14005036d:	(bad)  
   14005036e:	(bad)  
   14005036f:	inc    DWORD PTR [rcx]
   140050371:	adc    al,0x8
   140050373:	add    BYTE PTR [rsp+riz*2],dl
   140050376:	or     eax,DWORD PTR [rax]
   140050378:	adc    al,0x54
   14005037a:	or     al,BYTE PTR [rax]
   14005037c:	adc    al,0x34
   14005037e:	or     DWORD PTR [rax],eax
   140050380:	adc    al,0x52
   140050382:	adc    BYTE PTR [rax+0x1],dh
   140050385:	sbb    BYTE PTR [rdx],cl
   140050387:	add    BYTE PTR [rax],bl
   140050389:	fs adc al,0x0
   14005038c:	sbb    BYTE PTR [rbx+rdx*1+0x0],dl
   140050390:	sbb    BYTE PTR [rdx+rdx*1],dh
   140050393:	add    BYTE PTR [rax],bl
   140050395:	rcl    BYTE PTR [rax+rsi*8],cl
   140050398:	adc    ah,al
   14005039a:	adc    BYTE PTR [rax+0x19],dh
   14005039d:	sbb    BYTE PTR [rax+rax*1],al
   1400503a0:	sbb    BYTE PTR [rsi+rcx*1],dh
   1400503a3:	add    BYTE PTR [rdx+rsi*4],cl
   1400503a6:	or     BYTE PTR [rax-0x5c],dh
   1400503a9:	sub    al,0x3
   1400503ab:	add    BYTE PTR [rax],al
   1400503ad:	mov    WORD PTR [rax+rax*1],es
   1400503b0:	(bad)  
   1400503b1:	(bad)  
   1400503b2:	(bad)  
   1400503b3:	inc    DWORD PTR [rax]
   1400503b5:	add    BYTE PTR [rax],al
   1400503b7:	add    bh,bh
   1400503b9:	(bad)  
   1400503ba:	(bad)  
   1400503bb:	inc    DWORD PTR [rax]
   1400503bd:	add    BYTE PTR [rax],al
   1400503bf:	add    BYTE PTR [rcx],al
   1400503c1:	add    BYTE PTR [rax],al
   1400503c3:	add    BYTE PTR [rbx],ch
   1400503c5:	fiadd  DWORD PTR [rbx]
	...
   1400503cf:	add    BYTE PTR [rdx],al
   1400503d1:	add    BYTE PTR [rax],al
   1400503d3:	add    BYTE PTR [rcx],al
   1400503d5:	add    BYTE PTR [rax],al
   1400503d7:	add    ah,bl
   1400503d9:	add    eax,DWORD PTR [rip+0x0]        # 0x1400503df
   1400503df:	add    BYTE PTR [rax+0x280005a4],dl
   1400503e5:	add    BYTE PTR [rax],al
   1400503e7:	add    al,dh
   1400503e9:	fld    DWORD PTR [rbx]
   1400503eb:	add    BYTE PTR [rax],bh
   1400503ed:	add    BYTE PTR [rax],al
   1400503ef:	add    BYTE PTR [rax+rsi*8-0x10000],ch
   1400503f6:	(bad)  
   1400503f7:	dec    ecx
   1400503f9:	lock add BYTE PTR [rax],al
   1400503fc:	add    BYTE PTR [rax],al
   1400503fe:	add    BYTE PTR [rax],al
   140050400:	in     eax,0xf0
   140050402:	add    BYTE PTR [rax],al
   140050404:	(bad)  
   140050405:	(bad)  
   140050406:	(bad)  
   140050407:	push   rax
   140050409:	fld    DWORD PTR [rbx]
   14005040b:	add    BYTE PTR [rax],al
   14005040d:	add    BYTE PTR [rax],al
   14005040f:	add    ch,bh
   140050411:	fld    DWORD PTR [rbx]
   140050413:	add    BYTE PTR [rdx],al
   140050415:	add    BYTE PTR [rax],al
   140050417:	add    BYTE PTR [rbx],dl
   140050419:	fiadd  DWORD PTR [rbx]
   14005041b:	add    BYTE PTR [rcx],al
   14005041d:	add    BYTE PTR [rax],al
   14005041f:	add    BYTE PTR [rip+0x3da],bl        # 0x1400507ff
   140050425:	add    BYTE PTR [rax],al
   140050427:	add    BYTE PTR [rcx],bl
   140050429:	or     al,BYTE PTR [rdx]
   14005042b:	add    BYTE PTR [rdx],cl
   14005042d:	xor    al,BYTE PTR [rsi]
   14005042f:	push   rax
   140050430:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050431:	sub    al,0x3
   140050433:	add    BYTE PTR [rax],al
   140050435:	mov    WORD PTR [rax+rax*1],es
   140050438:	sbb    DWORD PTR [rbx],ebp
   14005043a:	(bad)  
   14005043b:	add    BYTE PTR [rip+0x11001e34],bl        # 0x151052275
   140050441:	add    DWORD PTR [rax],ebx
   140050443:	add    BYTE PTR [rsi],al
   140050445:	jo     0x14005044c
   140050447:	(bad)  
   140050448:	add    al,0x50
   14005044a:	add    BYTE PTR [rax],al
   14005044c:	jl     0x1400503d9
   14005044e:	add    eax,DWORD PTR [rax]
   140050450:	xor    BYTE PTR [rsp+rax*1+0xb200],cl
   140050457:	add    ah,bl
   140050459:	fiadd  WORD PTR [rax]
   14005045b:	add    bh,bh
   14005045d:	(bad)  
   14005045e:	(bad)  
   14005045f:	inc    DWORD PTR [rcx+0xdf]
   140050465:	add    BYTE PTR [rax],al
   140050467:	add    bh,bl
   140050469:	fild   WORD PTR [rax]
   14005046b:	add    bh,bh
   14005046d:	(bad)  
   14005046e:	(bad)  
   14005046f:	call   FWORD PTR [rcx]
   140050471:	sub    eax,DWORD PTR [rdi]
   140050473:	add    BYTE PTR [rip+0x11001e34],bl        # 0x1510522ad
   140050479:	add    DWORD PTR [rax],ebx
   14005047b:	add    BYTE PTR [rsi],al
   14005047d:	jo     0x140050484
   14005047f:	(bad)  
   140050480:	add    al,0x50
   140050482:	add    BYTE PTR [rax],al
   140050484:	jl     0x140050411
   140050486:	add    eax,DWORD PTR [rax]
   140050488:	(bad)  
   140050489:	mov    WORD PTR [rax+rax*1],es
   14005048c:	mov    dl,0x0
   14005048e:	add    BYTE PTR [rax],al
   140050490:	(bad)  
   140050491:	(bad)  
   140050492:	(bad)  
   140050493:	(bad)  
   140050494:	mov    ebx,0x900003da
   140050499:	in     al,0x0
   14005049b:	add    bh,bh
   14005049d:	(bad)  
   14005049e:	(bad)  
   14005049f:	dec    DWORD PTR [rcx-0x1b]
   1400504a2:	add    BYTE PTR [rax],al
   1400504a4:	add    BYTE PTR [rax],al
   1400504a6:	add    BYTE PTR [rax],al
   1400504a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400504a9:	in     eax,0x0
   1400504ab:	add    bh,bh
   1400504ad:	(bad)  
   1400504ae:	(bad)  
   1400504af:	call   QWORD PTR [rcx]
   1400504b1:	sub    ecx,DWORD PTR [rip+0x1e742b00]        # 0x15e792fb7
   1400504b7:	add    BYTE PTR [rdi],ah
   1400504b9:	fs sbb eax,0x1c342300
   1400504bf:	add    BYTE PTR [rdi],dl
   1400504c1:	add    DWORD PTR [rsi],edx
   1400504c3:	add    BYTE PTR [rax+rsi*8],cl
   1400504c6:	or     ah,al
   1400504c8:	or     al,dl
   1400504ca:	(bad)  
   1400504cb:	rol    BYTE PTR [rax+rdx*2],0x0
   1400504cf:	add    BYTE PTR [rsp+rbp*1-0x736ffffd],ah
   1400504d6:	add    al,0x0
   1400504d8:	(bad)  
   1400504d9:	(bad)  
   1400504da:	(bad)  
   1400504db:	push   QWORD PTR [rdi]
   1400504dd:	fiadd  DWORD PTR [rbx]
   1400504df:	add    bh,bh
   1400504e1:	(bad)  
   1400504e2:	(bad)  
   1400504e3:	inc    DWORD PTR [rbx-0x26]
   1400504e6:	add    eax,DWORD PTR [rax]
   1400504e8:	and    al,ah
   1400504ea:	add    BYTE PTR [rax],al
   1400504ec:	(bad)  
   1400504ed:	(bad)  
   1400504ee:	(bad)  
   1400504ef:	call   rsi
   1400504f1:	loopne 0x1400504f3
   1400504f3:	add    BYTE PTR [rax],al
   1400504f5:	add    BYTE PTR [rax],al
   1400504f7:	add    ah,dh
   1400504f9:	loopne 0x1400504fb
   1400504fb:	add    bh,bh
   1400504fd:	(bad)  
   1400504fe:	(bad)  
   1400504ff:	jmp    QWORD PTR [rdi+0x10000e1]
   140050505:	add    BYTE PTR [rax],al
   140050507:	add    dh,cl
   140050509:	loope  0x14005050b
   14005050b:	add    bh,bh
   14005050d:	(bad)  
   14005050e:	(bad)  
   14005050f:	call   FWORD PTR [rcx]
   140050511:	sub    eax,DWORD PTR [rdi]
   140050513:	add    BYTE PTR [rip+0x11001e34],bl        # 0x15105234d
   140050519:	add    DWORD PTR [rax],ebx
   14005051b:	add    BYTE PTR [rsi],al
   14005051d:	jo     0x140050524
   14005051f:	(bad)  
   140050520:	add    al,0x50
   140050522:	add    BYTE PTR [rax],al
   140050524:	jl     0x1400504b1
   140050526:	add    eax,DWORD PTR [rax]
   140050528:	ror    BYTE PTR [rsp+rax*1+0xba00],0x0
   140050530:	(bad)  
   140050531:	(bad)  
   140050532:	(bad)  
   140050533:	dec    DWORD PTR [rdi-0x26]
   140050536:	add    eax,DWORD PTR [rax]
   140050538:	add    BYTE PTR [rax],al
   14005053a:	add    BYTE PTR [rax],al
   14005053c:	pop    rdi
   14005053d:	fiadd  DWORD PTR [rbx]
   14005053f:	add    bh,bh
   140050541:	(bad)  
   140050542:	(bad)  
   140050543:	jmp    FWORD PTR [rdi-0x26]
   140050546:	add    eax,DWORD PTR [rax]
   140050548:	add    al,BYTE PTR [rax]
   14005054a:	add    BYTE PTR [rax],al
   14005054c:	jg     0x140050528
   14005054e:	add    eax,DWORD PTR [rax]
   140050550:	(bad)  
   140050551:	(bad)  
   140050552:	(bad)  
   140050553:	dec    DWORD PTR [rdi+0x40003da]
   140050559:	add    BYTE PTR [rax],al
   14005055b:	add    BYTE PTR [rdi-0xfffc26],bl
   140050561:	(bad)  
   140050562:	(bad)  
   140050563:	jmp    FWORD PTR [rdi+0x280003da]
   140050569:	loop   0x14005056b
   14005056b:	add    bh,bh
   14005056d:	(bad)  
   14005056e:	(bad)  
   14005056f:	(bad)  
   140050570:	mov    esi,0xe2
   140050575:	add    BYTE PTR [rax],al
   140050577:	add    dl,cl
   140050579:	loop   0x14005057b
   14005057b:	add    bh,bh
   14005057d:	(bad)  
   14005057e:	(bad)  
   14005057f:	inc    DWORD PTR [rbp-0x1d]
   140050582:	add    BYTE PTR [rax],al
   140050584:	add    al,BYTE PTR [rax]
   140050586:	add    BYTE PTR [rax],al
   140050588:	push   rcx
   140050589:	jrcxz  0x14005058b
   14005058b:	add    bh,bh
   14005058d:	(bad)  
   14005058e:	(bad)  
   14005058f:	inc    DWORD PTR [rdi+0x40000e3]
   140050595:	add    BYTE PTR [rax],al
   140050597:	add    BYTE PTR [rbx-0xffff1d],dl
   14005059d:	(bad)  
   14005059e:	(bad)  
   14005059f:	push   rax
   1400505a1:	jrcxz  0x1400505a3
   1400505a3:	add    BYTE PTR [rsi],al
   1400505a5:	add    BYTE PTR [rax],al
   1400505a7:	add    BYTE PTR [rsi-0x1c],cl
   1400505aa:	add    BYTE PTR [rax],al
   1400505ac:	(bad)  
   1400505ad:	(bad)  
   1400505ae:	(bad)  
   1400505af:	dec    DWORD PTR [rcx]
   1400505b1:	adc    eax,0xe4150008
   1400505b6:	or     al,BYTE PTR [rax]
   1400505b8:	adc    eax,0x15000974
   1400505bd:	or     BYTE PTR fs:[rax],al
   1400505c0:	adc    eax,0xc0f01152
   1400505c5:	xchg   ebx,eax
   1400505c6:	add    al,BYTE PTR [rax]
   1400505c8:	add    DWORD PTR [rax],eax
   1400505ca:	add    BYTE PTR [rax],al
   1400505cc:	stos   DWORD PTR es:[rdi],eax
   1400505cd:	cmc    
   1400505ce:	add    BYTE PTR [rax],al
   1400505d0:	mov    eax,0x2f0000f5
   1400505d5:	fadd   QWORD PTR [rbx]
   1400505d7:	add    BYTE PTR [rax+0x10000f5],bh
   1400505dd:	(bad)  
   1400505de:	add    al,BYTE PTR [rax]
   1400505e0:	(bad)  
   1400505e1:	push   rdx
   1400505e2:	add    dl,BYTE PTR [rax+0x19]
   1400505e5:	cmp    DWORD PTR [rbx],ecx
   1400505e7:	add    BYTE PTR [rdi],ah
   1400505e9:	je     0x14005065e
   1400505eb:	add    DWORD PTR [rbx],esp
   1400505ed:	fs jb  0x1400505f1
   1400505f0:	(bad)  
   1400505f1:	xor    al,0x70
   1400505f3:	add    DWORD PTR [rax],edx
   1400505f5:	add    DWORD PTR [rcx+rax*1+0x9],ebp
   1400505f9:	lock (bad) 
   1400505fb:	loopne 0x140050602
   1400505fd:	rol    BYTE PTR [rax],1
   1400505ff:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   140050603:	add    al,dh
   140050605:	mov    WORD PTR [rax+rax*1],es
   140050608:	push   rbx
   140050609:	or     eax,DWORD PTR [rax]
   14005060b:	add    bh,bh
   14005060d:	(bad)  
   14005060e:	(bad)  
   14005060f:	jmp    QWORD PTR [rbx+0x3db]
   140050615:	add    BYTE PTR [rax],al
   140050617:	add    BYTE PTR [rdi+0x10003db],ch
   14005061d:	add    BYTE PTR [rax],al
   14005061f:	add    BYTE PTR [rbx+0x20003db],bh
   140050625:	add    BYTE PTR [rax],al
   140050627:	add    BYTE PTR [rax],al
   140050629:	add    BYTE PTR [rax],al
   14005062b:	add    BYTE PTR [rdx],al
   14005062d:	add    BYTE PTR [rax],al
   14005062f:	add    BYTE PTR [rax],al
   140050631:	add    BYTE PTR [rax],al
   140050633:	add    BYTE PTR [rbx],al
   140050635:	add    BYTE PTR [rax],al
   140050637:	add    BYTE PTR [rbx],al
   140050639:	add    BYTE PTR [rax],al
   14005063b:	add    BYTE PTR [rax+rax*1],al
   14005063e:	add    BYTE PTR [rax],al
   140050640:	add    al,BYTE PTR [rax]
   140050642:	add    BYTE PTR [rax],al
   140050644:	rex.W (bad) 
   140050646:	add    eax,0x800
   14005064b:	add    BYTE PTR [rax],dh
   14005064d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005064e:	add    eax,0xa800
   140050653:	add    bh,al
   140050655:	fild   DWORD PTR [rbx]
   140050657:	add    BYTE PTR [rax+0x0],cl
   14005065a:	add    BYTE PTR [rax],al
   14005065c:	or     BYTE PTR [rax],al
   14005065e:	add    BYTE PTR [rax],al
   140050660:	nop
   140050661:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050662:	add    eax,0xb000
   140050667:	add    cl,bh
   140050669:	fild   DWORD PTR [rbx]
   14005066b:	add    BYTE PTR [rax+0x0],bl
   14005066e:	add    BYTE PTR [rax],al
   140050670:	cld    
   140050671:	lock add BYTE PTR [rax],al
   140050674:	(bad)  
   140050675:	(bad)  
   140050676:	(bad)  
   140050677:	dec    DWORD PTR [rbx-0xf]
   14005067a:	add    BYTE PTR [rax],al
   14005067c:	add    BYTE PTR [rax],al
   14005067e:	add    BYTE PTR [rax],al
   140050680:	sbb    esi,edx
   140050682:	add    BYTE PTR [rax],al
   140050684:	add    DWORD PTR [rax],eax
   140050686:	add    BYTE PTR [rax],al
   140050688:	adc    ebx,esi
   14005068a:	add    BYTE PTR [rax],al
   14005068c:	add    al,BYTE PTR [rax]
   14005068e:	add    BYTE PTR [rax],al
   140050690:	in     al,0xf3
   140050692:	add    BYTE PTR [rax],al
   140050694:	add    eax,DWORD PTR [rax]
   140050696:	add    BYTE PTR [rax],al
   140050698:	(bad)  
   140050699:	hlt    
   14005069a:	add    BYTE PTR [rax],al
   14005069c:	add    al,BYTE PTR [rax]
   14005069e:	add    BYTE PTR [rax],al
   1400506a0:	sub    dh,ah
   1400506a2:	add    BYTE PTR [rax],al
   1400506a4:	add    DWORD PTR [rax],eax
   1400506a6:	add    BYTE PTR [rax],al
   1400506a8:	cmp    ah,dh
   1400506aa:	add    BYTE PTR [rax],al
   1400506ac:	add    BYTE PTR [rax],al
   1400506ae:	add    BYTE PTR [rax],al
   1400506b0:	rex.RX hlt 
   1400506b2:	add    BYTE PTR [rax],al
   1400506b4:	(bad)  
   1400506b5:	(bad)  
   1400506b6:	(bad)  
   1400506b7:	inc    edi
   1400506b9:	fild   DWORD PTR [rbx]
   1400506bb:	add    BYTE PTR [rax],al
   1400506bd:	add    BYTE PTR [rax],al
   1400506bf:	add    ah,dl
   1400506c1:	fild   DWORD PTR [rbx]
   1400506c3:	add    BYTE PTR [rax+rax*1],al
   1400506c6:	add    BYTE PTR [rax],al
   1400506c8:	jmp    0x1400506a5
   1400506ca:	add    eax,DWORD PTR [rax]
   1400506cc:	add    BYTE PTR [rax],al
   1400506ce:	add    BYTE PTR [rax],al
   1400506d0:	(bad)  
   1400506d1:	fadd   QWORD PTR [rbx]
   1400506d3:	add    BYTE PTR [rax+rax*1],al
   1400506d6:	add    BYTE PTR [rax],al
   1400506d8:	and    ah,bl
   1400506da:	add    eax,DWORD PTR [rax]
   1400506dc:	add    BYTE PTR [rax],al
   1400506de:	add    BYTE PTR [rax],al
   1400506e0:	sbb    DWORD PTR [rdx],ecx
   1400506e2:	add    al,BYTE PTR [rax]
   1400506e4:	or     dl,BYTE PTR [rdx+0x6]
   1400506e7:	push   rax
   1400506e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400506e9:	sub    al,0x3
   1400506eb:	add    al,dh
   1400506ed:	mov    WORD PTR [rax+rax*1],es
   1400506f0:	sbb    DWORD PTR [rbx],ecx
   1400506f2:	add    eax,DWORD PTR [rax]
   1400506f4:	or     esp,DWORD PTR [rdx+0x7]
   1400506f7:	push   rax
   1400506f8:	(bad)  
   1400506f9:	xor    BYTE PTR [rax],al
   1400506fb:	add    BYTE PTR [rsp+rbp*1-0x730ffffd],ah
   140050702:	add    al,0x0
   140050704:	add    DWORD PTR [rax],ecx
   140050706:	add    al,BYTE PTR [rax]
   140050708:	or     BYTE PTR [rdx+0x27193004],dh
   14005070e:	or     DWORD PTR [rax],eax
   140050710:	adc    eax,0x15006154
   140050715:	xor    al,0x60
   140050717:	add    BYTE PTR [rip+0xe005a01],dl        # 0x14e05611e
   14005071d:	loopne 0x14005072b
   14005071f:	jo     0x14005072c
   140050721:	(bad)  
   140050722:	add    BYTE PTR [rax],al
   140050724:	cmp    al,0xe5
   140050726:	add    al,BYTE PTR [rax]
   140050728:	rol    BYTE PTR [rdx],0x0
   14005072b:	add    BYTE PTR [rcx],al
   14005072d:	adc    cl,BYTE PTR [rax]
   14005072f:	add    BYTE PTR [rdx],dl
   140050731:	push   rsp
   140050732:	or     al,BYTE PTR [rax]
   140050734:	adc    dh,BYTE PTR [rcx+rcx*1]
   140050737:	add    BYTE PTR [rdx],dl
   140050739:	xor    cl,BYTE PTR [rsi]
   14005073b:	loopne 0x140050749
   14005073d:	jo     0x14005074a
   14005073f:	(bad)  
   140050740:	sbb    DWORD PTR [rbx],esp
   140050742:	or     BYTE PTR [rax],al
   140050744:	adc    al,0x64
   140050746:	lldt   WORD PTR [rsp+rdx*2]
   14005074a:	(bad)  
   14005074b:	add    BYTE PTR [rsp+rsi*1],dl
   14005074e:	or     eax,0x10921400
   140050753:	jo     0x140050791
   140050755:	in     eax,0x2
   140050757:	add    BYTE PTR [rax+0x0],al
   14005075a:	add    BYTE PTR [rax],al
   14005075c:	add    DWORD PTR [rcx],ebx
   14005075e:	or     al,BYTE PTR [rax]
   140050760:	sbb    DWORD PTR [rcx+rdx*1+0x0],esi
   140050764:	sbb    DWORD PTR [rax+rdx*1+0x0],esp
   140050768:	sbb    DWORD PTR [rdi+rcx*1+0x0],edx
   14005076c:	sbb    DWORD PTR [rsi+rcx*1],esi
   14005076f:	add    BYTE PTR [rcx],bl
   140050771:	mov    dl,0x15
   140050773:	loopne 0x14005078e
   140050775:	sbb    DWORD PTR [rip+0x6a20a00],eax        # 0x146a7117b
   14005077b:	loopne 0x140050781
   14005077d:	jo     0x140050782
   14005077f:	(bad)  
   140050780:	add    dh,BYTE PTR [rax]
   140050782:	add    BYTE PTR [rax],al
   140050784:	cmp    al,0xe5
   140050786:	add    al,BYTE PTR [rax]
   140050788:	add    BYTE PTR [rax],al
   14005078b:	add    BYTE PTR [rcx],dl
   14005078d:	sbb    BYTE PTR [rax+rax*1],al
   140050790:	sbb    BYTE PTR [rcx+rcx*1],dh
   140050793:	add    BYTE PTR [rdx],cl
   140050795:	push   rdx
   140050796:	(bad)  
   140050797:	jo     0x14005073d
   140050799:	sub    al,0x3
   14005079b:	add    BYTE PTR [rax],ah
   14005079d:	lea    eax,[rax+rax*1]
   1400507a0:	(bad)  
   1400507a1:	(bad)  
   1400507a2:	(bad)  
   1400507a3:	call   FWORD PTR [rsp+rbx*8+0x3]
   1400507a7:	add    BYTE PTR [rax],al
   1400507a9:	add    BYTE PTR [rax],al
   1400507ab:	add    BYTE PTR [rsp+rbx*8+0x3],ch
   1400507af:	add    BYTE PTR [rax],ah
   1400507b1:	std    
   1400507b2:	add    BYTE PTR [rax],al
   1400507b4:	(bad)  
   1400507b5:	(bad)  
   1400507b6:	(bad)  
   1400507b7:	(bad)  
   1400507b8:	cmp    edi,ebp
   1400507ba:	add    BYTE PTR [rax],al
   1400507bc:	add    DWORD PTR [rax],eax
   1400507be:	add    BYTE PTR [rax],al
   1400507c0:	pop    rcx
   1400507c1:	std    
   1400507c2:	add    BYTE PTR [rax],al
   1400507c4:	add    BYTE PTR [rax],al
   1400507c6:	add    BYTE PTR [rax],al
   1400507c8:	jnp    0x1400507c7
   1400507ca:	add    BYTE PTR [rax],al
   1400507cc:	(bad)  
   1400507cd:	(bad)  
   1400507ce:	(bad)  
   1400507cf:	call   QWORD PTR [rcx]
   1400507d1:	sbb    al,0x6
   1400507d3:	add    BYTE PTR [rsp+rdx*2],bl
   1400507d6:	or     al,BYTE PTR [rax]
   1400507d8:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400507db:	add    BYTE PTR [rdx+rdx*2],cl
   1400507de:	or     BYTE PTR [rax-0x5c],dh
   1400507e1:	sub    al,0x3
   1400507e3:	add    BYTE PTR [rax-0x73],dl
   1400507e6:	add    al,0x0
   1400507e8:	movabs al,ds:0xe4ffffffff0000fc
   1400507f1:	cld    
   1400507f2:	add    BYTE PTR [rax],al
   1400507f4:	add    BYTE PTR [rax],al
   1400507f6:	add    BYTE PTR [rax],al
   1400507f8:	add    ch,bh
   1400507fa:	add    BYTE PTR [rax],al
   1400507fc:	add    DWORD PTR [rax],eax
   1400507fe:	add    BYTE PTR [rax],al
   140050800:	or     edi,ebp
   140050802:	add    BYTE PTR [rax],al
   140050804:	(bad)  
   140050805:	(bad)  
   140050806:	(bad)  
   140050807:	inc    DWORD PTR [rcx]
   140050809:	(bad)  
   14005080a:	or     BYTE PTR [rax],al
   14005080c:	(bad)  
   14005080d:	xor    al,0x17
   14005080f:	add    BYTE PTR [rsi],dl
   140050811:	repnz or al,0xf0
   140050814:	or     ah,al
   140050816:	or     BYTE PTR [rax+0x7],dh
   140050819:	(bad)  
   14005081a:	(bad)  
   14005081b:	push   rax
   14005081c:	adc    DWORD PTR [rsi],esp
   14005081e:	or     eax,DWORD PTR [rax]
   140050820:	es fs sbb eax,0x1c342200
   140050827:	add    BYTE PTR [rsi],dl
   140050829:	add    DWORD PTR [rsi],edx
   14005082b:	add    BYTE PTR [rbx],cl
   14005082d:	lock or eax,esp
   140050830:	(bad)  
   140050831:	rol    BYTE PTR [rip+0x500470],0x0        # 0x140550ca8
   140050838:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050839:	sub    al,0x3
   14005083b:	add    BYTE PTR [rax-0xfffb73],al
   140050841:	(bad)  
   140050842:	(bad)  
   140050843:	call   QWORD PTR [rip+0x300003dd]        # 0x170050c26
   140050849:	add    eax,DWORD PTR [rcx]
   14005084b:	add    bh,bh
   14005084d:	(bad)  
   14005084e:	(bad)  
   14005084f:	dec    ebp
   140050851:	add    al,0x1
   140050853:	add    BYTE PTR [rax],al
   140050855:	add    BYTE PTR [rax],al
   140050857:	add    BYTE PTR [rcx+0x5],bl
   14005085a:	add    DWORD PTR [rax],eax
   14005085c:	(bad)  
   14005085d:	(bad)  
   14005085e:	(bad)  
   14005085f:	inc    DWORD PTR [rcx]
   140050861:	(bad)  
   140050862:	or     al,BYTE PTR [rax]
   140050864:	(bad)  
   140050865:	push   rsp
   140050866:	adc    eax,DWORD PTR [rax]
   140050868:	(bad)  
   140050869:	xor    al,0x12
   14005086b:	add    BYTE PTR [rsi],dl
   14005086d:	mov    dl,0x12
   14005086f:	lock adc al,ah
   140050872:	(bad)  
   140050873:	ror    BYTE PTR [rax+rsi*2],0xb
   140050877:	(bad)  
   140050878:	sbb    DWORD PTR [rcx],ebx
   14005087a:	add    al,0x0
   14005087c:	or     dh,BYTE PTR [rsp+rcx*1]
   14005087f:	add    BYTE PTR [rdx],cl
   140050881:	jb     0x140050889
   140050883:	jo     0x1400508c1
   140050885:	in     eax,0x2
   140050887:	add    BYTE PTR [rax],dh
   140050889:	add    BYTE PTR [rax],al
   14005088b:	add    BYTE PTR [rcx],dl
   14005088d:	sbb    BYTE PTR [rax+rax*1],al
   140050890:	sbb    BYTE PTR [rcx+rcx*1],dh
   140050893:	add    BYTE PTR [rdx],cl
   140050895:	push   rdx
   140050896:	(bad)  
   140050897:	jo     0x14005083d
   140050899:	sub    al,0x3
   14005089b:	add    BYTE PTR [rax-0xfffb73],dh
   1400508a1:	(bad)  
   1400508a2:	(bad)  
   1400508a3:	(bad)  
   1400508a4:	(bad)  
   1400508a6:	add    eax,DWORD PTR [rax]
   1400508a8:	add    BYTE PTR [rax],al
   1400508aa:	add    BYTE PTR [rax],al
   1400508ac:	in     eax,0xdc
   1400508ae:	add    eax,DWORD PTR [rax]
   1400508b0:	add    DWORD PTR [rax],eax
   1400508b2:	add    BYTE PTR [rax],al
   1400508b4:	cmc    
   1400508b5:	fadd   QWORD PTR [rbx]
   1400508b7:	add    BYTE PTR [rdx],al
   1400508b9:	add    BYTE PTR [rax],al
   1400508bb:	add    BYTE PTR [rip+0xffffffff940003dd],al        # 0xd4050c9e
   1400508c1:	add    al,BYTE PTR [rcx]
   1400508c3:	add    bh,bh
   1400508c5:	(bad)  
   1400508c6:	(bad)  
   1400508c7:	jmp    FWORD PTR [rdi+0x2000102]
   1400508cd:	add    BYTE PTR [rax],al
   1400508cf:	add    cl,dl
   1400508d1:	add    al,BYTE PTR [rcx]
   1400508d3:	add    BYTE PTR [rcx],al
   1400508d5:	add    BYTE PTR [rax],al
   1400508d7:	add    cl,dh
   1400508d9:	add    al,BYTE PTR [rcx]
   1400508db:	add    BYTE PTR [rax],al
   1400508dd:	add    BYTE PTR [rax],al
   1400508df:	add    BYTE PTR [rbx],cl
   1400508e1:	add    eax,DWORD PTR [rcx]
   1400508e3:	add    bh,bh
   1400508e5:	(bad)  
   1400508e6:	(bad)  
   1400508e7:	call   QWORD PTR [rcx]
   1400508e9:	adc    eax,DWORD PTR [rdx]
   1400508eb:	add    BYTE PTR [rdx],cl
   1400508ed:	push   rdx
   1400508ee:	(bad)  
   1400508ef:	xor    BYTE PTR [rsp+rbp*1-0x721ffffd],ah
   1400508f6:	add    al,0x0
   1400508f8:	ins    BYTE PTR es:[rdi],dx
   1400508f9:	add    DWORD PTR [rcx],eax
   1400508fb:	add    bh,bh
   1400508fd:	(bad)  
   1400508fe:	(bad)  
   1400508ff:	dec    DWORD PTR [rdi+0x101]
   140050905:	add    BYTE PTR [rax],al
   140050907:	add    BYTE PTR [rbx+0x1000101],bl
   14005090d:	add    BYTE PTR [rax],al
   14005090f:	add    BYTE PTR [rdx+0x2000101],ch
   140050915:	add    BYTE PTR [rax],al
   140050917:	add    BYTE PTR [rsi+0x3000101],dh
   14005091d:	add    BYTE PTR [rax],al
   14005091f:	add    dl,al
   140050921:	add    DWORD PTR [rcx],eax
   140050923:	add    bh,bh
   140050925:	(bad)  
   140050926:	(bad)  
   140050927:	call   FWORD PTR [rcx]
   140050929:	adc    eax,0x520c0004
   14005092e:	or     BYTE PTR [rax+0x7],dh
   140050931:	(bad)  
   140050932:	(bad)  
   140050933:	xor    BYTE PTR [rsp+rbp*1-0x71effffd],ah
   14005093a:	add    al,0x0
   14005093c:	(bad)  
   14005093d:	(bad)  
   14005093e:	(bad)  
   14005093f:	(bad)  
   140050940:	jl     0x14005091e
   140050942:	add    eax,DWORD PTR [rax]
   140050944:	add    BYTE PTR [rax],al
   140050946:	add    BYTE PTR [rax],al
   140050948:	mov    ah,bl
   14005094a:	add    eax,DWORD PTR [rax]
   14005094c:	add    DWORD PTR [rax],eax
   14005094e:	add    BYTE PTR [rax],al
   140050950:	cwde   
   140050951:	fadd   QWORD PTR [rbx]
   140050953:	add    BYTE PTR [rdx],al
   140050955:	add    BYTE PTR [rax],al
   140050957:	add    BYTE PTR [rax+0x30003dc],ch
   14005095d:	add    BYTE PTR [rax],al
   14005095f:	add    BYTE PTR [rax],al
   140050961:	add    BYTE PTR [rax],al
   140050963:	add    BYTE PTR [rbx],al
   140050965:	add    BYTE PTR [rax],al
   140050967:	add    BYTE PTR [rax],al
   140050969:	add    BYTE PTR [rax],al
   14005096b:	add    BYTE PTR [rax+rax*1],al
   14005096e:	add    BYTE PTR [rax],al
   140050970:	add    al,0x0
   140050972:	add    BYTE PTR [rax],al
   140050974:	add    eax,0x1000000
   140050979:	add    BYTE PTR [rax],al
   14005097b:	add    BYTE PTR [rax+0x509],al
   140050981:	add    BYTE PTR [rax],al
   140050983:	add    BYTE PTR [rax+0x5a5],ch
   140050989:	add    BYTE PTR [rax],al
   14005098b:	add    BYTE PTR [rax+0x380003dc],bh
   140050991:	add    BYTE PTR [rax],al
   140050993:	add    ah,cl
   140050995:	add    DWORD PTR [rcx],eax
   140050997:	add    bh,bh
   140050999:	(bad)  
   14005099a:	(bad)  
   14005099b:	push   rsp
   14005099d:	add    DWORD PTR [rcx],eax
   14005099f:	add    BYTE PTR [rax],al
   1400509a1:	add    BYTE PTR [rax],al
   1400509a3:	add    BYTE PTR [rax],al
   1400509a5:	add    al,BYTE PTR [rcx]
   1400509a7:	add    BYTE PTR [rcx],al
   1400509a9:	add    BYTE PTR [rax],al
   1400509ab:	add    BYTE PTR [rdi],cl
   1400509ad:	add    al,BYTE PTR [rcx]
   1400509af:	add    BYTE PTR [rdx],al
   1400509b1:	add    BYTE PTR [rax],al
   1400509b3:	add    BYTE PTR [rbx],bl
   1400509b5:	add    al,BYTE PTR [rcx]
   1400509b7:	add    BYTE PTR [rbx],al
   1400509b9:	add    BYTE PTR [rax],al
   1400509bb:	add    BYTE PTR [rcx+0x2],ah
   1400509be:	add    DWORD PTR [rax],eax
   1400509c0:	add    al,0x0
   1400509c2:	add    BYTE PTR [rax],al
   1400509c4:	jp     0x1400509c8
   1400509c6:	add    DWORD PTR [rax],eax
   1400509c8:	add    eax,DWORD PTR [rax]
   1400509ca:	add    BYTE PTR [rax],al
   1400509cc:	mov    BYTE PTR [rdx],al
   1400509ce:	add    DWORD PTR [rax],eax
   1400509d0:	(bad)  
   1400509d1:	(bad)  
   1400509d2:	(bad)  
   1400509d3:	(bad)  
   1400509d4:	mov    eax,0x3dc
   1400509d9:	add    BYTE PTR [rax],al
   1400509db:	add    ch,al
   1400509dd:	fadd   QWORD PTR [rbx]
   1400509df:	add    BYTE PTR [rip+0x19000000],al        # 0x1590509e5
   1400509e5:	or     al,BYTE PTR [rdx]
   1400509e7:	add    BYTE PTR [rdx],cl
   1400509e9:	xor    al,BYTE PTR [rsi]
   1400509eb:	push   rax
   1400509ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400509ed:	sub    al,0x3
   1400509ef:	add    BYTE PTR [rax],dl
   1400509f1:	mov    es,WORD PTR [rax+rax*1]
   1400509f4:	adc    DWORD PTR [rdx],ebx
   1400509f6:	add    al,0x0
   1400509f8:	adc    dl,BYTE PTR [rdx+0xe]
   1400509fb:	jo     0x140050a0a
   1400509fd:	(bad)  
   1400509fe:	or     al,0x30
   140050a00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050a01:	sub    al,0x3
   140050a03:	add    BYTE PTR [rax-0x72],al
   140050a06:	add    al,0x0
   140050a08:	(bad)  
   140050a09:	(bad)  
   140050a0a:	(bad)  
   140050a0b:	dec    edi
   140050a0d:	fld    QWORD PTR [rbx]
   140050a0f:	add    BYTE PTR [rax],al
   140050a11:	add    BYTE PTR [rax],al
   140050a13:	add    bl,ch
   140050a15:	fld    QWORD PTR [rbx]
   140050a17:	add    BYTE PTR [rax-0xfffeee],al
   140050a1d:	(bad)  
   140050a1e:	(bad)  
   140050a1f:	jmp    QWORD PTR [rdx+rdx*1+0x1]
   140050a26:	add    BYTE PTR [rax],al
   140050a28:	in     al,0x12
   140050a2a:	add    DWORD PTR [rax],eax
   140050a2c:	add    DWORD PTR [rax],eax
   140050a2e:	add    BYTE PTR [rax],al
   140050a30:	(bad)  
   140050a31:	adc    al,BYTE PTR [rcx]
   140050a33:	add    BYTE PTR [rax],al
   140050a35:	add    BYTE PTR [rax],al
   140050a37:	add    BYTE PTR [rbx+rdx*1],cl
   140050a3a:	add    DWORD PTR [rax],eax
   140050a3c:	(bad)  
   140050a3d:	(bad)  
   140050a3e:	(bad)  
   140050a3f:	call   FWORD PTR [rcx]
   140050a41:	sbb    al,BYTE PTR [rax+rax*1]
   140050a44:	adc    DWORD PTR [rdx+0xd],edx
   140050a47:	jo     0x140050a55
   140050a49:	(bad)  
   140050a4a:	or     esi,DWORD PTR [rax]
   140050a4c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050a4d:	sub    al,0x3
   140050a4f:	add    BYTE PTR [rax-0x72],dh
   140050a52:	add    al,0x0
	...
   140050a5c:	add    DWORD PTR [rax],eax
   140050a5e:	add    BYTE PTR [rax],al
   140050a60:	add    DWORD PTR [rax],eax
   140050a62:	add    BYTE PTR [rax],al
   140050a64:	push   0x50a
	...
   140050a71:	add    BYTE PTR [rax],al
   140050a73:	add    BYTE PTR [rsi+0x480003dd],al
   140050a79:	add    BYTE PTR [rax],al
   140050a7b:	add    BYTE PTR [rax],ch
   140050a7d:	adc    al,BYTE PTR [rcx]
   140050a7f:	add    bh,bh
   140050a81:	(bad)  
   140050a82:	(bad)  
   140050a83:	call   QWORD PTR [rax+0x12]
   140050a86:	add    DWORD PTR [rax],eax
   140050a88:	add    BYTE PTR [rax],al
   140050a8a:	add    BYTE PTR [rax],al
   140050a8c:	je     0x140050aa0
   140050a8e:	add    DWORD PTR [rax],eax
   140050a90:	(bad)  
   140050a91:	(bad)  
   140050a92:	(bad)  
   140050a93:	inc    DWORD PTR [rsi+0x3dd]
   140050a99:	add    BYTE PTR [rax],al
   140050a9b:	add    BYTE PTR [rbp+rbx*8+0x10003],dl
   140050aa2:	add    BYTE PTR [rax],al
   140050aa4:	sbb    DWORD PTR [rbx],ecx
   140050aa6:	add    eax,DWORD PTR [rax]
   140050aa8:	or     eax,DWORD PTR [rdx+0x7]
   140050aab:	push   rax
   140050aac:	(bad)  
   140050aad:	xor    BYTE PTR [rax],al
   140050aaf:	add    BYTE PTR [rsp+rbp*1-0x718ffffd],ah
   140050ab6:	add    al,0x0
   140050ab8:	adc    DWORD PTR [rcx],ebx
   140050aba:	(bad)  
   140050abb:	add    BYTE PTR [rcx],bl
   140050abd:	or     eax,DWORD PTR fs:[rax]
   140050ac0:	adc    al,0x34
   140050ac2:	or     al,BYTE PTR [rax]
   140050ac4:	(bad)  
   140050ac5:	push   rdx
   140050ac6:	add    dh,BYTE PTR [rax-0x5c]
   140050ac9:	sub    al,0x3
   140050acb:	add    BYTE PTR [rax-0xfffb72],ah
   140050ad1:	(bad)  
   140050ad2:	(bad)  
   140050ad3:	inc    DWORD PTR [rdi-0x22]
   140050ad6:	add    eax,DWORD PTR [rax]
   140050ad8:	jl     0x140050aeb
   140050ada:	add    DWORD PTR [rax],eax
   140050adc:	(bad)  
   140050add:	(bad)  
   140050ade:	(bad)  
   140050adf:	(bad)  
   140050ae0:	(bad)  
   140050ae1:	adc    DWORD PTR [rcx],eax
   140050ae3:	add    BYTE PTR [rax],al
   140050ae5:	add    BYTE PTR [rax],al
   140050ae7:	add    al,dh
   140050ae9:	adc    DWORD PTR [rcx],eax
   140050aeb:	add    bh,bh
   140050aed:	(bad)  
   140050aee:	(bad)  
   140050aef:	call   FWORD PTR [rcx]
   140050af1:	sbb    eax,DWORD PTR [rcx]
   140050af3:	add    BYTE PTR [rbx],dl
   140050af5:	(bad)  
   140050af6:	add    BYTE PTR [rax],al
   140050af8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050af9:	sub    al,0x3
   140050afb:	add    al,dl
   140050afd:	mov    es,WORD PTR [rax+rax*1]
   140050b00:	(bad)  
   140050b01:	(bad)  
   140050b02:	(bad)  
   140050b03:	inc    DWORD PTR [rax]
   140050b05:	add    BYTE PTR [rax],al
   140050b07:	add    BYTE PTR [rax],al
   140050b09:	add    BYTE PTR [rax],al
   140050b0b:	add    BYTE PTR [rcx],ah
   140050b0d:	fld    QWORD PTR [rbx]
   140050b0f:	add    bh,bh
   140050b11:	(bad)  
   140050b12:	(bad)  
   140050b13:	inc    DWORD PTR [rax]
   140050b15:	add    BYTE PTR [rax],al
   140050b17:	add    BYTE PTR [rax],al
   140050b19:	add    BYTE PTR [rax],al
   140050b1b:	add    BYTE PTR [rcx],al
   140050b1d:	add    BYTE PTR [rax],al
   140050b1f:	add    BYTE PTR [rdx],al
   140050b21:	add    BYTE PTR [rax],al
   140050b23:	add    BYTE PTR [rcx],al
   140050b25:	add    BYTE PTR [rax],al
   140050b27:	add    BYTE PTR [rbx+rcx*1],ch
   140050b2a:	add    eax,0x0
	...
   140050b37:	add    BYTE PTR [rip+0x480003dd],bh        # 0x188050f1a
   140050b3d:	add    BYTE PTR [rax],al
   140050b3f:	add    BYTE PTR [rax],cl
   140050b41:	adc    DWORD PTR [rcx],eax
   140050b43:	add    bh,bh
   140050b45:	(bad)  
   140050b46:	(bad)  
   140050b47:	jmp    FWORD PTR [rax]
   140050b49:	adc    DWORD PTR [rcx],eax
   140050b4b:	add    BYTE PTR [rax],al
   140050b4d:	add    BYTE PTR [rax],al
   140050b4f:	add    BYTE PTR [rip+0x1000111],dh        # 0x141050c66
   140050b55:	add    BYTE PTR [rax],al
   140050b57:	add    BYTE PTR [rcx+0x11],ah
   140050b5a:	add    DWORD PTR [rax],eax
   140050b5c:	add    BYTE PTR [rax],al
   140050b5e:	add    BYTE PTR [rax],al
   140050b60:	je     0x140050b73
   140050b62:	add    DWORD PTR [rax],eax
   140050b64:	(bad)  
   140050b65:	(bad)  
   140050b66:	(bad)  
   140050b67:	(bad)  
   140050b68:	cmp    eax,0x3dd
   140050b6d:	add    BYTE PTR [rax],al
   140050b6f:	add    BYTE PTR [rbx-0x23],cl
   140050b72:	add    eax,DWORD PTR [rax]
   140050b74:	add    al,BYTE PTR [rax]
   140050b76:	add    BYTE PTR [rax],al
   140050b78:	sbb    DWORD PTR [rbx],ecx
   140050b7a:	add    eax,DWORD PTR [rax]
   140050b7c:	or     eax,DWORD PTR [rdx+0x7]
   140050b7f:	push   rax
   140050b80:	(bad)  
   140050b81:	xor    BYTE PTR [rax],al
   140050b83:	add    BYTE PTR [rsp+rbp*1-0x712ffffd],ah
   140050b8a:	add    al,0x0
   140050b8c:	sbb    DWORD PTR [rax],esp
   140050b8e:	or     al,BYTE PTR [rax]
   140050b90:	and    BYTE PTR [rax+rdx*1+0x0],ah
   140050b94:	sbb    al,0x34
   140050b96:	(bad)  
   140050b97:	add    BYTE PTR [rax],dl
   140050b99:	jb     0x140050ba7
   140050b9b:	lock or ah,al
   140050b9e:	or     al,dl
   140050ba0:	(bad)  
   140050ba1:	rol    BYTE PTR [rax+rsi*2],0xa4
   140050ba5:	sub    al,0x3
   140050ba7:	add    BYTE PTR [rax],al
   140050ba9:	pop    QWORD PTR [rax+rax*1]
	...
   140050bb4:	add    DWORD PTR [rax],eax
   140050bb6:	add    BYTE PTR [rax],al
   140050bb8:	add    DWORD PTR [rax],eax
   140050bba:	add    BYTE PTR [rax],al
   140050bbc:	ror    BYTE PTR [rbx],0x5
	...
   140050bcb:	add    BYTE PTR [rbx-0x22],ah
   140050bce:	add    eax,DWORD PTR [rax]
   140050bd0:	rex.W add BYTE PTR [rax],al
   140050bd3:	add    BYTE PTR [rax+rdx*1],bl
   140050bd6:	add    DWORD PTR [rax],eax
   140050bd8:	(bad)  
   140050bd9:	(bad)  
   140050bda:	(bad)  
   140050bdb:	inc    DWORD PTR [rax+0x110]
   140050be1:	add    BYTE PTR [rax],al
   140050be3:	add    BYTE PTR [rax-0xfffef0],dl
   140050be9:	(bad)  
   140050bea:	(bad)  
   140050beb:	jmp    QWORD PTR [rbx-0x22]
   140050bee:	add    eax,DWORD PTR [rax]
   140050bf0:	add    BYTE PTR [rax],al
   140050bf2:	add    BYTE PTR [rax],al
   140050bf4:	jo     0x140050bd4
   140050bf6:	add    eax,DWORD PTR [rax]
   140050bf8:	add    DWORD PTR [rax],eax
   140050bfa:	add    BYTE PTR [rax],al
   140050bfc:	sbb    DWORD PTR [rdx],ecx
   140050bfe:	add    al,BYTE PTR [rax]
   140050c00:	or     dl,BYTE PTR [rdx+0x6]
   140050c03:	push   rax
   140050c04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050c05:	sub    al,0x3
   140050c07:	add    BYTE PTR [rax],al
   140050c09:	pop    QWORD PTR [rax+rax*1]
   140050c0c:	add    DWORD PTR [rdx+rcx*1],ebx
   140050c0f:	add    BYTE PTR [rsp+riz*2],bl
   140050c12:	or     eax,DWORD PTR [rax]
   140050c14:	sbb    al,0x54
   140050c16:	or     DWORD PTR [rax],eax
   140050c18:	sbb    al,0x34
   140050c1a:	or     BYTE PTR [rax],al
   140050c1c:	sbb    al,0x32
   140050c1e:	sbb    al,dh
   140050c20:	(bad)  
   140050c21:	loopne 0x140050c37
   140050c23:	jo     0x140050c3e
   140050c25:	sbb    BYTE PTR [rax+rax*1],al
   140050c28:	sbb    BYTE PTR [rbx+rcx*1],dh
   140050c2b:	add    BYTE PTR [rdx+rsi*2],cl
   140050c2e:	or     BYTE PTR [rax-0x5c],dh
   140050c31:	sub    al,0x3
   140050c33:	add    BYTE PTR [rax],dh
   140050c35:	pop    QWORD PTR [rax+rax*1]
	...
   140050c40:	add    DWORD PTR [rax],eax
   140050c42:	add    BYTE PTR [rax],al
   140050c44:	add    DWORD PTR [rax],eax
   140050c46:	add    BYTE PTR [rax],al
   140050c48:	rex.WR or al,0x5
	...
   140050c57:	add    BYTE PTR [rdx+0x680003de],bh
   140050c5d:	add    BYTE PTR [rax],al
   140050c5f:	add    BYTE PTR [rsi+rcx*1],bl
   140050c62:	add    DWORD PTR [rax],eax
   140050c64:	(bad)  
   140050c65:	(bad)  
   140050c66:	(bad)  
   140050c67:	(bad)  
   140050c68:	fisttp DWORD PTR [rsi]
   140050c6a:	add    DWORD PTR [rax],eax
   140050c6c:	add    BYTE PTR [rax],al
   140050c6e:	add    BYTE PTR [rax],al
   140050c70:	cmc    
   140050c71:	(bad)  
   140050c72:	add    DWORD PTR [rax],eax
   140050c74:	(bad)  
   140050c75:	(bad)  
   140050c76:	(bad)  
   140050c77:	(bad)  
   140050c78:	mov    edx,0x3de
   140050c7d:	add    BYTE PTR [rax],al
   140050c7f:	add    dl,cl
   140050c81:	fiadd  WORD PTR [rbx]
   140050c83:	add    BYTE PTR [rcx],al
   140050c85:	add    BYTE PTR [rax],al
   140050c87:	add    BYTE PTR [rcx],bl
   140050c89:	or     eax,0x620d0005
   140050c8e:	or     DWORD PTR [rax+0x8],esi
   140050c91:	(bad)  
   140050c92:	(bad)  
   140050c93:	push   rax
   140050c94:	(bad)  
   140050c95:	xor    BYTE PTR [rax],al
   140050c97:	add    BYTE PTR [rsp+rbp*1-0x70cffffd],ah
   140050c9e:	add    al,0x0
   140050ca0:	sbb    DWORD PTR [rsi+rax*1],ebx
   140050ca3:	add    BYTE PTR [rsp+riz*2],bl
   140050ca6:	or     al,0x0
   140050ca8:	sbb    BYTE PTR [rbx+rcx*1],dh
   140050cab:	add    BYTE PTR [rdx+rsi*2],cl
   140050cae:	or     BYTE PTR [rax-0x5c],dh
   140050cb1:	sub    al,0x3
   140050cb3:	add    BYTE PTR [rax-0x71],ah
   140050cb6:	add    al,0x0
	...
   140050cc0:	add    DWORD PTR [rax],eax
   140050cc2:	add    BYTE PTR [rax],al
   140050cc4:	add    DWORD PTR [rax],eax
   140050cc6:	add    BYTE PTR [rax],al
   140050cc8:	int3   
   140050cc9:	or     al,0x5
	...
   140050cd7:	add    BYTE PTR [rbx+0x480003de],al
   140050cdd:	add    BYTE PTR [rax],al
   140050cdf:	add    al,bl
   140050ce1:	or     al,0x1
   140050ce3:	add    bh,bh
   140050ce5:	(bad)  
   140050ce6:	(bad)  
   140050ce7:	inc    ecx
   140050ce9:	or     eax,0x1
   140050cee:	add    BYTE PTR [rax],al
   140050cf0:	icebp  
   140050cf1:	or     eax,0xffff0001
   140050cf6:	(bad)  
   140050cf7:	inc    DWORD PTR [rbx+0x3de]
   140050cfd:	add    BYTE PTR [rax],al
   140050cff:	add    BYTE PTR [rcx+0x10003de],dl
   140050d05:	add    BYTE PTR [rax],al
   140050d07:	add    BYTE PTR [rcx],bl
   140050d09:	or     eax,DWORD PTR [rbx]
   140050d0b:	add    BYTE PTR [rbx],cl
   140050d0d:	rex.X (bad) 
   140050d0f:	push   rax
   140050d10:	(bad)  
   140050d11:	xor    BYTE PTR [rax],al
   140050d13:	add    BYTE PTR [rsp+rbp*1-0x709ffffd],ah
   140050d1a:	add    al,0x0
   140050d1c:	add    DWORD PTR [rsi],eax
   140050d1e:	add    al,BYTE PTR [rax]
   140050d20:	(bad)  
   140050d21:	push   rdx
   140050d22:	add    dh,BYTE PTR [rax]
   140050d24:	adc    DWORD PTR [rbx],edx
   140050d26:	add    al,BYTE PTR [rax]
   140050d28:	or     dl,BYTE PTR [rdx+0x6]
   140050d2b:	xor    BYTE PTR [rsp+rbp*1-0x706ffffd],ah
   140050d32:	add    al,0x0
   140050d34:	add    BYTE PTR [rcx+rax*1],cl
   140050d37:	add    bh,bh
   140050d39:	(bad)  
   140050d3a:	(bad)  
   140050d3b:	call   QWORD PTR [rsi]
   140050d3d:	or     al,0x1
   140050d3f:	add    BYTE PTR [rax],al
   140050d41:	add    BYTE PTR [rax],al
   140050d43:	add    BYTE PTR [rax],ah
   140050d45:	or     al,0x1
   140050d47:	add    bh,bh
   140050d49:	(bad)  
   140050d4a:	(bad)  
   140050d4b:	call   QWORD PTR [rcx]
   140050d4d:	sbb    al,0x2
   140050d4f:	add    BYTE PTR [rdx+rdx*2],dl
   140050d52:	adc    BYTE PTR [rax],dh
   140050d54:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050d55:	sub    al,0x3
   140050d57:	add    al,al
   140050d59:	pop    QWORD PTR [rax+rax*1]
   140050d5c:	(bad)  
   140050d5d:	(bad)  
   140050d5e:	(bad)  
   140050d5f:	jmp    QWORD PTR [rdi]
   140050d61:	fiadd  WORD PTR [rbx]
   140050d63:	add    BYTE PTR [rax],al
   140050d65:	add    BYTE PTR [rax],al
   140050d67:	add    BYTE PTR [rdi],dh
   140050d69:	fiadd  WORD PTR [rbx]
   140050d6b:	add    BYTE PTR [rdx+rcx*1-0xffff],bl
   140050d72:	(bad)  
   140050d73:	call   rdx
   140050d75:	or     al,BYTE PTR [rcx]
   140050d77:	add    BYTE PTR [rax],al
   140050d79:	add    BYTE PTR [rax],al
   140050d7b:	add    dh,bl
   140050d7d:	or     al,BYTE PTR [rcx]
   140050d7f:	add    BYTE PTR [rcx],al
   140050d81:	add    BYTE PTR [rax],al
   140050d83:	add    al,dh
   140050d85:	or     al,BYTE PTR [rcx]
   140050d87:	add    bh,bh
   140050d89:	(bad)  
   140050d8a:	(bad)  
   140050d8b:	call   QWORD PTR [rcx]
   140050d8d:	and    ecx,DWORD PTR [rdx]
   140050d8f:	add    BYTE PTR [rbx],ah
   140050d91:	push   rsp
   140050d92:	(bad)  
   140050d93:	add    BYTE PTR [rdi],bl
   140050d95:	xor    al,0xd
   140050d97:	add    BYTE PTR [rbx],dl
   140050d99:	push   rdx
   140050d9a:	(bad)  
   140050d9c:	or     eax,0x9c00be0
   140050da1:	jo     0x140050dab
   140050da3:	(bad)  
   140050da4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050da5:	sub    al,0x3
   140050da7:	add    al,dh
   140050da9:	pop    QWORD PTR [rax+rax*1]
   140050dac:	(bad)  
   140050dad:	(bad)  
   140050dae:	(bad)  
   140050daf:	inc    DWORD PTR [rdi]
   140050db1:	fiadd  WORD PTR [rbx]
   140050db3:	add    BYTE PTR [rax],al
   140050db5:	add    BYTE PTR [rax],al
   140050db7:	add    BYTE PTR [rdi],dl
   140050db9:	fiadd  WORD PTR [rbx]
   140050dbb:	add    ah,bh
   140050dbd:	or     al,BYTE PTR [rcx]
   140050dbf:	add    bh,bh
   140050dc1:	(bad)  
   140050dc2:	(bad)  
   140050dc3:	inc    DWORD PTR [rbp+0xb]
   140050dc6:	add    DWORD PTR [rax],eax
   140050dc8:	add    BYTE PTR [rax],al
   140050dca:	add    BYTE PTR [rax],al
   140050dcc:	push   rsp
   140050dcd:	or     eax,DWORD PTR [rcx]
   140050dcf:	add    BYTE PTR [rcx],al
   140050dd1:	add    BYTE PTR [rax],al
   140050dd3:	add    ah,ah
   140050dd5:	or     eax,DWORD PTR [rcx]
   140050dd7:	add    bh,bh
   140050dd9:	(bad)  
   140050dda:	(bad)  
   140050ddb:	inc    DWORD PTR [rcx]
   140050ddd:	sbb    BYTE PTR [rdx],cl
   140050ddf:	add    BYTE PTR [rax],bl
   140050de1:	fs (bad) 
   140050de3:	add    BYTE PTR [rax],bl
   140050de5:	push   rsp
   140050de6:	or     eax,0xc341800
   140050deb:	add    BYTE PTR [rax],bl
   140050ded:	jb     0x140050e03
   140050def:	lock adc ah,al
   140050df2:	adc    BYTE PTR [rax+0x19],dh
   140050df5:	or     DWORD PTR cs:[rax],eax
   140050df8:	adc    eax,DWORD PTR [rcx]
   140050dfa:	(bad)  
   140050dfb:	add    BYTE PTR [rax+rsi*8],cl
   140050dfe:	or     ah,al
   140050e00:	or     al,dl
   140050e02:	(bad)  
   140050e03:	rol    BYTE PTR [rax+rsi*2],0x3
   140050e07:	(bad)  
   140050e08:	add    dh,BYTE PTR [rax]
   140050e0a:	add    BYTE PTR [rax],al
   140050e0c:	jl     0x140050d99
   140050e0e:	add    eax,DWORD PTR [rax]
   140050e10:	and    BYTE PTR [rax+0xe30004],dl
   140050e16:	add    BYTE PTR [rax],al
   140050e18:	(bad)  
   140050e19:	(bad)  
   140050e1a:	(bad)  
   140050e1b:	inc    DWORD PTR [rax]
   140050e1d:	add    BYTE PTR [rax],al
   140050e1f:	add    BYTE PTR [rax],al
   140050e21:	add    BYTE PTR [rax],al
   140050e23:	add    BYTE PTR [rdx-0xfffc21],ch
   140050e29:	(bad)  
   140050e2a:	(bad)  
   140050e2b:	inc    DWORD PTR [rax]
   140050e2d:	add    BYTE PTR [rax],al
   140050e2f:	add    BYTE PTR [rax],al
   140050e31:	add    BYTE PTR [rax],al
   140050e33:	add    BYTE PTR [rcx],al
   140050e35:	add    BYTE PTR [rax],al
   140050e37:	add    BYTE PTR [rdx],al
   140050e39:	add    BYTE PTR [rax],al
   140050e3b:	add    BYTE PTR [rcx],al
   140050e3d:	add    BYTE PTR [rax],al
   140050e3f:	add    BYTE PTR [rsi+rcx*1+0x5],al
   140050e43:	add    BYTE PTR [rax],al
   140050e45:	add    BYTE PTR [rax],al
   140050e47:	add    BYTE PTR [rax+0x5ab],dh
   140050e4d:	add    BYTE PTR [rax],al
   140050e4f:	add    BYTE PTR [rsi+0x480003df],dh
   140050e55:	add    BYTE PTR [rax],al
   140050e57:	add    BYTE PTR [rax-0xfffee7],ch
   140050e5d:	(bad)  
   140050e5e:	(bad)  
   140050e5f:	call   QWORD PTR [rip+0x11c]        # 0x140050f81
   140050e65:	add    BYTE PTR [rax],al
   140050e67:	add    BYTE PTR [rbx],ah
   140050e69:	sbb    al,0x1
   140050e6b:	add    BYTE PTR [rcx],al
   140050e6d:	add    BYTE PTR [rax],al
   140050e6f:	add    BYTE PTR [rcx],dh
   140050e71:	sbb    al,0x1
   140050e73:	add    BYTE PTR [rax],al
   140050e75:	add    BYTE PTR [rax],al
   140050e77:	add    BYTE PTR [rsi+0x1c],al
   140050e7a:	add    DWORD PTR [rax],eax
   140050e7c:	(bad)  
   140050e7d:	(bad)  
   140050e7e:	(bad)  
   140050e7f:	push   QWORD PTR [rsi+0x3df]
   140050e85:	add    BYTE PTR [rax],al
   140050e87:	add    bl,al
   140050e89:	fild   WORD PTR [rbx]
   140050e8b:	add    BYTE PTR [rdx],al
   140050e8d:	add    BYTE PTR [rax],al
   140050e8f:	add    cl,dl
   140050e91:	fild   WORD PTR [rbx]
   140050e93:	add    BYTE PTR [rax],al
   140050e95:	add    BYTE PTR [rax],al
   140050e97:	add    BYTE PTR [rcx],bl
   140050e99:	or     al,BYTE PTR [rdx]
   140050e9b:	add    BYTE PTR [rdx],cl
   140050e9d:	push   rdx
   140050e9e:	(bad)  
   140050e9f:	push   rax
   140050ea0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050ea1:	sub    al,0x3
   140050ea3:	add    BYTE PTR [rax],ah
   140050ea5:	nop
   140050ea6:	add    al,0x0
   140050ea8:	sbb    DWORD PTR [rsi],esp
   140050eaa:	add    eax,0x32010b00
   140050eaf:	add    BYTE PTR [rax+rsi*2],al
   140050eb2:	add    esp,DWORD PTR [rax+0x2]
   140050eb5:	xor    BYTE PTR [rax],al
   140050eb7:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   140050ebb:	add    BYTE PTR [rax-0x70],dl
   140050ebe:	add    al,0x0
   140050ec0:	add    DWORD PTR [rcx],0x0
   140050ec3:	add    bh,bh
   140050ec5:	(bad)  
   140050ec6:	(bad)  
   140050ec7:	inc    DWORD PTR [rax]
   140050ec9:	add    BYTE PTR [rax],al
   140050ecb:	add    BYTE PTR [rax],al
   140050ecd:	add    BYTE PTR [rax],al
   140050ecf:	add    BYTE PTR [rdx-0x21],cl
   140050ed2:	add    eax,DWORD PTR [rax]
   140050ed4:	(bad)  
   140050ed5:	(bad)  
   140050ed6:	(bad)  
   140050ed7:	inc    DWORD PTR [rax]
   140050ed9:	add    BYTE PTR [rax],al
   140050edb:	add    BYTE PTR [rax],al
   140050edd:	add    BYTE PTR [rax],al
   140050edf:	add    BYTE PTR [rcx],al
   140050ee1:	add    BYTE PTR [rax],al
   140050ee3:	add    BYTE PTR [rdx],al
   140050ee5:	add    BYTE PTR [rax],al
   140050ee7:	add    BYTE PTR [rcx],al
   140050ee9:	add    BYTE PTR [rax],al
   140050eeb:	add    al,dh
   140050eed:	(bad)  
   140050eee:	add    eax,0x800
   140050ef3:	add    BYTE PTR [rax+0x600005ab],dh
   140050ef9:	add    BYTE PTR [rax],al
   140050efb:	add    BYTE PTR [rsi-0x21],dl
   140050efe:	add    eax,DWORD PTR [rax]
   140050f00:	pop    rax
   140050f01:	add    BYTE PTR [rax],al
   140050f03:	add    ah,dl
   140050f05:	(bad)  
   140050f06:	add    DWORD PTR [rax],eax
   140050f08:	(bad)  
   140050f09:	(bad)  
   140050f0a:	(bad)  
   140050f0b:	call   FWORD PTR [rbx+0x19]
   140050f0e:	add    DWORD PTR [rax],eax
   140050f10:	add    BYTE PTR [rax],al
   140050f12:	add    BYTE PTR [rax],al
   140050f14:	imul   ebx,DWORD PTR [rcx],0x10001
   140050f1a:	add    BYTE PTR [rax],al
   140050f1c:	ja     0x140050f37
   140050f1e:	add    DWORD PTR [rax],eax
   140050f20:	add    BYTE PTR [rax],al
   140050f22:	add    BYTE PTR [rax],al
   140050f24:	mov    WORD PTR [rcx],ds
   140050f26:	add    DWORD PTR [rax],eax
   140050f28:	(bad)  
   140050f29:	(bad)  
   140050f2a:	(bad)  
   140050f2b:	call   QWORD PTR [rsi-0x21]
   140050f2e:	add    eax,DWORD PTR [rax]
   140050f30:	add    BYTE PTR [rax],al
   140050f32:	add    BYTE PTR [rax],al
   140050f34:	fild   WORD PTR fs:[rbx]
   140050f37:	add    BYTE PTR [rdx],al
   140050f39:	add    BYTE PTR [rax],al
   140050f3b:	add    BYTE PTR [rbx+0x3df],bl
   140050f41:	add    BYTE PTR [rax],al
   140050f43:	add    BYTE PTR [rcx],bl
   140050f45:	or     eax,DWORD PTR [rbx]
   140050f47:	add    BYTE PTR [rbx],cl
   140050f49:	(bad)  
   140050f4a:	(bad)  
   140050f4b:	push   rax
   140050f4c:	(bad)  
   140050f4d:	xor    BYTE PTR [rax],al
   140050f4f:	add    BYTE PTR [rsp+rbp*1-0x6faffffd],ah
   140050f56:	add    al,0x0
   140050f58:	adc    DWORD PTR [rbx],edx
   140050f5a:	add    al,BYTE PTR [rax]
   140050f5c:	or     dl,BYTE PTR [rdx+0x6]
   140050f5f:	xor    BYTE PTR [rsp+rbp*1-0x6f7ffffd],ah
   140050f66:	add    al,0x0
   140050f68:	(bad)  
   140050f69:	(bad)  
   140050f6a:	(bad)  
   140050f6b:	jmp    QWORD PTR [rsi]
   140050f6d:	fild   WORD PTR [rbx]
   140050f6f:	add    BYTE PTR [rax-0xfffeea],ah
   140050f75:	(bad)  
   140050f76:	(bad)  
   140050f77:	call   FWORD PTR [rcx]
   140050f79:	(bad)  
   140050f7a:	(bad)  
   140050f7b:	add    BYTE PTR [rdi],cl
   140050f7d:	str    WORD PTR fs:[rdi]
   140050f81:	xor    al,0xe
   140050f83:	add    BYTE PTR [rdi],cl
   140050f85:	xchg   edx,eax
   140050f86:	or     esi,DWORD PTR [rax+0x3c]
   140050f89:	in     eax,0x2
   140050f8b:	add    BYTE PTR [rax+0x0],al
   140050f8e:	add    BYTE PTR [rax],al
   140050f90:	sbb    DWORD PTR [rdi],ebx
   140050f92:	or     BYTE PTR [rax],al
   140050f94:	adc    BYTE PTR [rax+rdx*1],dh
   140050f97:	add    BYTE PTR [rax],dl
   140050f99:	jb     0x140050fa7
   140050f9b:	lock or ah,al
   140050f9e:	or     BYTE PTR [rax+0x7],dh
   140050fa1:	(bad)  
   140050fa2:	(bad)  
   140050fa3:	push   rax
   140050fa4:	cmp    al,0xe5
   140050fa6:	add    al,BYTE PTR [rax]
   140050fa8:	cmp    BYTE PTR [rax],al
   140050faa:	add    BYTE PTR [rax],al
   140050fac:	add    DWORD PTR [rcx],edx
   140050fae:	add    al,0x0
   140050fb0:	adc    DWORD PTR [rdx],esi
   140050fb2:	or     eax,0xb600c70
   140050fb7:	xor    BYTE PTR [rcx],dl
   140050fb9:	sbb    DWORD PTR [rsi],eax
   140050fbb:	add    BYTE PTR [rcx],bl
   140050fbd:	or     al,BYTE PTR fs:[rax]
   140050fc0:	adc    al,0x34
   140050fc2:	or     DWORD PTR [rax],eax
   140050fc4:	(bad)  
   140050fc5:	push   rdx
   140050fc6:	add    dh,BYTE PTR [rax-0x5c]
   140050fc9:	sub    al,0x3
   140050fcb:	add    BYTE PTR [rax-0xfffb70],dh
   140050fd1:	(bad)  
   140050fd2:	(bad)  
   140050fd3:	push   QWORD PTR [rdx]
   140050fd5:	fild   WORD PTR [rbx]
   140050fd7:	add    BYTE PTR [rax],al
   140050fd9:	add    BYTE PTR [rax],al
   140050fdb:	add    BYTE PTR [rsi],bh
   140050fdd:	fild   WORD PTR [rbx]
   140050fdf:	add    BYTE PTR [rsp+rbx*1+0x1],ch
   140050fe3:	add    bh,bh
   140050fe5:	(bad)  
   140050fe6:	(bad)  
   140050fe7:	call   QWORD PTR [rdi+0x11c]
   140050fed:	add    BYTE PTR [rax],al
   140050fef:	add    BYTE PTR [rsp+rbx*1+0x10001],bh
   140050ff6:	add    BYTE PTR [rax],al
   140050ff8:	(bad)  
   140050ff9:	sbb    eax,0x1
   140050ffe:	add    BYTE PTR [rax],al
   140051000:	xor    ebx,DWORD PTR [rip+0xffffffffffff0001]        # 0x140041007
   140051006:	(bad)  
   140051007:	call   FWORD PTR [rcx]
   140051009:	adc    eax,0x92060002
   14005100e:	add    dh,BYTE PTR [rax]
   140051010:	cmp    al,0xe5
   140051012:	add    al,BYTE PTR [rax]
   140051014:	add    BYTE PTR [rax],al
   140051017:	add    BYTE PTR [rcx],bl
   140051019:	(bad)  
   14005101a:	add    eax,0x1f340d00
   14005101f:	add    BYTE PTR [rip+0x6001c01],cl        # 0x146052c26
   140051025:	jo     0x140051027
   140051027:	add    BYTE PTR [riz*8+0xd00002],bh
   14005102e:	add    BYTE PTR [rax],al
   140051030:	sbb    DWORD PTR [rdi+rax*1],esp
   140051033:	add    BYTE PTR [rdx],dl
   140051035:	adc    al,BYTE PTR fs:[rcx]
   140051038:	adc    dh,BYTE PTR [rcx+rdx*1]
   14005103b:	add    DWORD PTR [rdx],edx
   14005103d:	add    DWORD PTR [rsi],ecx
   14005103f:	add    DWORD PTR [rbx],ecx
   140051041:	jo     0x140051043
   140051043:	add    BYTE PTR [riz*8+0x8600002],bh
   14005104a:	add    BYTE PTR [rax],al
   14005104c:	sbb    DWORD PTR [rbx+rcx*1],esi
   14005104f:	add    BYTE PTR [rsi],ah
   140051051:	and    DWORD PTR fs:[rax],eax
   140051054:	and    dh,BYTE PTR [rax+riz*1]
   140051057:	add    BYTE PTR [rsi],dl
   140051059:	add    DWORD PTR [rax],ebx
   14005105b:	add    BYTE PTR [rbx],cl
   14005105d:	lock or eax,esp
   140051060:	(bad)  
   140051061:	rol    BYTE PTR [rip+0x500470],0x0        # 0x1405514d8
   140051068:	jl     0x140050ff5
   14005106a:	add    eax,DWORD PTR [rax]
   14005106c:	loopne 0x140050ffe
   14005106e:	add    al,0x0
   140051070:	mov    edx,0xff000000
   140051075:	(bad)  
   140051076:	(bad)  
   140051077:	(bad)  
   140051078:	(bad)  
   14005107a:	add    eax,DWORD PTR [rax]
   14005107c:	add    BYTE PTR [rax],al
   14005107e:	add    BYTE PTR [rax],al
   140051080:	jmp    0x140051061
   140051082:	add    eax,DWORD PTR [rax]
   140051084:	add    DWORD PTR [rax],eax
   140051086:	add    BYTE PTR [rax],al
   140051088:	neg    edi
   14005108a:	add    eax,DWORD PTR [rax]
   14005108c:	add    al,BYTE PTR [rax]
   14005108e:	add    BYTE PTR [rax],al
   140051090:	add    esp,eax
   140051092:	add    eax,DWORD PTR [rax]
   140051094:	add    eax,DWORD PTR [rax]
   140051096:	add    BYTE PTR [rax],al
   140051098:	pavgb  mm0,QWORD PTR [rbx]
   14005109b:	add    BYTE PTR [rax+rax*1],al
   14005109e:	add    BYTE PTR [rax],al
   1400510a0:	sbb    esp,eax
   1400510a2:	add    eax,DWORD PTR [rax]
   1400510a4:	jo     0x1400510cb
   1400510a6:	add    DWORD PTR [rax],eax
   1400510a8:	(bad)  
   1400510a9:	(bad)  
   1400510aa:	(bad)  
   1400510ab:	(bad)  
   1400510ac:	sti    
   1400510ad:	and    eax,0x1
   1400510b2:	add    BYTE PTR [rax],al
   1400510b4:	and    DWORD PTR [rsi],esp
   1400510b6:	add    DWORD PTR [rax],eax
   1400510b8:	add    DWORD PTR [rax],eax
   1400510ba:	add    BYTE PTR [rax],al
   1400510bc:	rex.B
   1400510bd:	add    DWORD PTR es:[rax],eax
   1400510c0:	add    al,BYTE PTR [rax]
   1400510c2:	add    BYTE PTR [rax],al
   1400510c4:	jno    0x1400510ec
   1400510c6:	add    DWORD PTR [rax],eax
   1400510c8:	add    eax,DWORD PTR [rax]
   1400510ca:	add    BYTE PTR [rax],al
   1400510cc:	jg     0x1400510f4
   1400510ce:	add    DWORD PTR [rax],eax
   1400510d0:	add    al,0x0
   1400510d2:	add    BYTE PTR [rax],al
   1400510d4:	xlat   BYTE PTR ds:[rbx]
   1400510d5:	add    DWORD PTR es:[rax],eax
   1400510d8:	add    eax,0xe4000000
   1400510dd:	add    DWORD PTR es:[rax],eax
   1400510e0:	add    al,0x0
   1400510e2:	add    BYTE PTR [rax],al
   1400510e4:	adc    al,0x27
   1400510e6:	add    DWORD PTR [rax],eax
   1400510e8:	add    eax,DWORD PTR [rax]
   1400510ea:	add    BYTE PTR [rax],al
   1400510ec:	rex.X (bad) 
   1400510ee:	add    DWORD PTR [rax],eax
   1400510f0:	add    al,BYTE PTR [rax]
   1400510f2:	add    BYTE PTR [rax],al
   1400510f4:	push   rbp
   1400510f5:	(bad)  
   1400510f6:	add    DWORD PTR [rax],eax
   1400510f8:	add    DWORD PTR [rax],eax
   1400510fa:	add    BYTE PTR [rax],al
   1400510fc:	push   0x127
   140051101:	add    BYTE PTR [rax],al
   140051103:	add    BYTE PTR [rbx+0x27],bh
   140051106:	add    DWORD PTR [rax],eax
   140051108:	(bad)  
   140051109:	(bad)  
   14005110a:	(bad)  
   14005110b:	dec    DWORD PTR [rcx]
   14005110d:	add    al,0x1
   14005110f:	add    BYTE PTR [rdx+riz*2],al
   140051112:	add    BYTE PTR [rax],al
   140051114:	rcl    BYTE PTR [rbx+0x10002],0x0
   14005111b:	add    BYTE PTR [rsi+rbp*1+0x2e8e0001],al
   140051122:	add    DWORD PTR [rax],eax
   140051124:	add    DWORD PTR [rax],eax
   140051126:	add    BYTE PTR [rax],al
   140051128:	mov    gs,WORD PTR [rsi]
   14005112a:	add    DWORD PTR [rax],eax
   14005112c:	sbb    DWORD PTR [rip+0x74170008],esp        # 0x1b41c113a
   140051132:	lldt   WORD PTR [rdi]
   140051135:	fs (bad) 
   140051137:	add    BYTE PTR [rdi],dl
   140051139:	xor    al,0xd
   14005113b:	add    BYTE PTR [rdi],dl
   14005113d:	xchg   edx,eax
   14005113e:	adc    BYTE PTR [rax+0x3c],dl
   140051141:	in     eax,0x2
   140051143:	add    BYTE PTR [rax+0x0],al
   140051146:	add    BYTE PTR [rax],al
   140051148:	sbb    DWORD PTR [rcx],ebx
   14005114a:	add    al,0x0
   14005114c:	or     dh,BYTE PTR [rdx+rcx*1]
   14005114f:	add    BYTE PTR [rdx],cl
   140051151:	jb     0x140051159
   140051153:	jo     0x140051191
   140051155:	in     eax,0x2
   140051157:	add    BYTE PTR [rax],dh
   140051159:	add    BYTE PTR [rax],al
   14005115b:	add    BYTE PTR [rcx],bl
   14005115d:	sub    eax,0xe41f000b
   140051162:	sub    eax,DWORD PTR [rax]
   140051164:	(bad)  
   140051165:	je     0x140051191
   140051167:	add    BYTE PTR [rdi],bl
   140051169:	sub    DWORD PTR fs:[rax],eax
   14005116c:	(bad)  
   14005116d:	xor    al,0x28
   14005116f:	add    BYTE PTR [rdi],bl
   140051171:	add    DWORD PTR [rsi],esp
   140051173:	add    BYTE PTR [rax+rdx*2],dl
   140051176:	add    BYTE PTR [rax],al
   140051178:	cmp    al,0xe5
   14005117a:	add    al,BYTE PTR [rax]
   14005117c:	and    BYTE PTR [rcx],al
   14005117e:	add    BYTE PTR [rax],al
   140051180:	adc    DWORD PTR [rbx],edx
   140051182:	add    al,BYTE PTR [rax]
   140051184:	or     dl,BYTE PTR [rdx+0x6]
   140051187:	xor    BYTE PTR [rsp+rbp*1-0x6eeffffd],ah
   14005118e:	add    al,0x0
   140051190:	(bad)  
   140051191:	(bad)  
   140051192:	(bad)  
   140051193:	jmp    QWORD PTR [rsi-0x1f]
   140051196:	add    eax,DWORD PTR [rax]
   140051198:	add    BYTE PTR [rax],al
   14005119a:	add    BYTE PTR [rax],al
   14005119c:	jb     0x14005117f
   14005119e:	add    eax,DWORD PTR [rax]
   1400511a0:	add    BYTE PTR [rax],al
   1400511a2:	add    BYTE PTR [rax],al
   1400511a4:	(bad)  
   1400511a5:	loope  0x1400511aa
   1400511a7:	add    bh,bh
   1400511a9:	(bad)  
   1400511aa:	(bad)  
   1400511ab:	dec    DWORD PTR [rsi-0x2bfffc1f]
   1400511b1:	(bad)  
   1400511b2:	add    DWORD PTR [rax],eax
   1400511b4:	(bad)  
   1400511b5:	(bad)  
   1400511b6:	(bad)  
   1400511b7:	(bad)  
   1400511b8:	(bad)  
   1400511b9:	(bad)  
   1400511ba:	add    DWORD PTR [rax],eax
   1400511bc:	add    BYTE PTR [rax],al
   1400511be:	add    BYTE PTR [rax],al
   1400511c0:	or     eax,DWORD PTR [rax+0x1]
   1400511c3:	add    bh,bh
   1400511c5:	(bad)  
   1400511c6:	(bad)  
   1400511c7:	call   QWORD PTR [rcx]
   1400511c9:	sbb    BYTE PTR [rax+rax*1],al
   1400511cc:	sbb    BYTE PTR [rax+rcx*1],dh
   1400511cf:	add    BYTE PTR [rdx],cl
   1400511d1:	push   rdx
   1400511d2:	(bad)  
   1400511d3:	jo     0x140051179
   1400511d5:	sub    al,0x3
   1400511d7:	add    BYTE PTR [rax-0x6f],al
   1400511da:	add    al,0x0
   1400511dc:	(bad)  
   1400511dd:	(bad)  
   1400511de:	(bad)  
   1400511df:	inc    esi
   1400511e1:	loope  0x1400511e6
   1400511e3:	add    bh,bh
   1400511e5:	(bad)  
   1400511e6:	(bad)  
   1400511e7:	call   rdx
   1400511e9:	loope  0x1400511ee
   1400511eb:	add    BYTE PTR [rcx],al
   1400511ed:	add    BYTE PTR [rax],al
   1400511ef:	add    dh,bl
   1400511f1:	loope  0x1400511f6
   1400511f3:	add    BYTE PTR [rcx],al
   1400511f5:	add    BYTE PTR [rax],al
   1400511f7:	add    dh,ch
   1400511f9:	loope  0x1400511fe
   1400511fb:	add    bh,bh
   1400511fd:	(bad)  
   1400511fe:	(bad)  
   1400511ff:	(bad)  
   140051200:	cli    
   140051201:	loope  0x140051206
   140051203:	add    BYTE PTR [rax-0xfffec2],cl
   140051209:	(bad)  
   14005120a:	(bad)  
   14005120b:	(bad)  
   14005120c:	mov    ebp,0x100013e
   140051211:	add    BYTE PTR [rax],al
   140051213:	add    dh,bl
   140051215:	add    DWORD PTR ds:[rax],eax
   140051218:	(bad)  
   140051219:	(bad)  
   14005121a:	(bad)  
   14005121b:	call   FWORD PTR [rcx]
   14005121d:	and    BYTE PTR [rax],cl
   14005121f:	add    BYTE PTR [rax],ah
   140051221:	fs (bad) 
   140051223:	add    BYTE PTR [rsp+rsi*1],bl
   140051226:	or     eax,0xc721000
   14005122b:	lock or ah,al
   14005122e:	or     BYTE PTR [rax-0x5c],dh
   140051231:	sub    al,0x3
   140051233:	add    BYTE PTR [rax-0x6f],dh
   140051236:	add    al,0x0
   140051238:	(bad)  
   140051239:	(bad)  
   14005123a:	(bad)  
   14005123b:	inc    DWORD PTR [rax]
   14005123d:	add    BYTE PTR [rax],al
   14005123f:	add    BYTE PTR [rax],al
   140051241:	add    BYTE PTR [rax],al
   140051243:	add    BYTE PTR [rdx-0x1d],cl
   140051246:	add    eax,DWORD PTR [rax]
   140051248:	add    DWORD PTR [rax],eax
   14005124a:	add    BYTE PTR [rax],al
   14005124c:	data16 jrcxz 0x140051252
   14005124f:	add    BYTE PTR [rdx],al
   140051251:	add    BYTE PTR [rax],al
   140051253:	add    BYTE PTR [rdx-0x1d],dh
   140051256:	add    eax,DWORD PTR [rax]
   140051258:	add    al,BYTE PTR [rax]
   14005125a:	add    BYTE PTR [rax],al
   14005125c:	jle    0x140051241
   14005125e:	add    eax,DWORD PTR [rax]
   140051260:	add    DWORD PTR [rax],eax
   140051262:	add    BYTE PTR [rax],al
   140051264:	mov    fs,ebx
   140051266:	add    eax,DWORD PTR [rax]
   140051268:	(bad)  
   140051269:	(bad)  
   14005126a:	(bad)  
   14005126b:	inc    DWORD PTR [rax]
   14005126d:	add    BYTE PTR [rax],al
   14005126f:	add    BYTE PTR [rax],al
   140051271:	add    BYTE PTR [rax],al
   140051273:	add    BYTE PTR [rip+0x6000000],al        # 0x146051279
   140051279:	add    BYTE PTR [rax],al
   14005127b:	add    BYTE PTR [rcx],al
   14005127d:	add    BYTE PTR [rax],al
   14005127f:	add    BYTE PTR [rdx+rdx*1+0x5],al
	...
   14005128e:	add    BYTE PTR [rax],al
   140051290:	(bad)  
   140051291:	jrcxz  0x140051296
   140051293:	add    BYTE PTR [rax],bh
   140051295:	add    BYTE PTR [rax],al
   140051297:	add    BYTE PTR [rax],bl
   140051299:	cmp    eax,0xffff0001
   14005129e:	(bad)  
   14005129f:	inc    DWORD PTR [rbx]
   1400512a1:	add    DWORD PTR ds:[rax],eax
   1400512a4:	add    BYTE PTR [rax],al
   1400512a6:	add    BYTE PTR [rax],al
   1400512a8:	or     BYTE PTR [rsi],bh
   1400512aa:	add    DWORD PTR [rax],eax
   1400512ac:	add    DWORD PTR [rax],eax
   1400512ae:	add    BYTE PTR [rax],al
   1400512b0:	adc    al,0x3e
   1400512b2:	add    DWORD PTR [rax],eax
   1400512b4:	add    al,BYTE PTR [rax]
   1400512b6:	add    BYTE PTR [rax],al
   1400512b8:	xor    eax,0x500013e
   1400512bd:	add    BYTE PTR [rax],al
   1400512bf:	add    BYTE PTR [rcx],bh
   1400512c1:	add    DWORD PTR ds:[rax],eax
   1400512c4:	(bad)  
   1400512c5:	(bad)  
   1400512c6:	(bad)  
   1400512c7:	call   FWORD PTR [rdx+0x3e3]
   1400512cd:	add    BYTE PTR [rax],al
   1400512cf:	add    BYTE PTR [rdi+0x60003e3],ah
   1400512d5:	add    BYTE PTR [rax],al
   1400512d7:	add    BYTE PTR [rcx],bl
   1400512d9:	or     al,BYTE PTR [rdx]
   1400512db:	add    BYTE PTR [rdx],cl
   1400512dd:	xor    al,BYTE PTR [rsi]
   1400512df:	push   rax
   1400512e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400512e1:	sub    al,0x3
   1400512e3:	add    BYTE PTR [rax-0x6f],dh
   1400512e6:	add    al,0x0
   1400512e8:	sbb    DWORD PTR [rcx],ebx
   1400512ea:	(bad)  
   1400512eb:	add    BYTE PTR [rcx],bl
   1400512ed:	or     DWORD PTR fs:[rax],eax
   1400512f0:	adc    al,0x34
   1400512f2:	or     BYTE PTR [rax],al
   1400512f4:	(bad)  
   1400512f5:	push   rdx
   1400512f6:	add    dh,BYTE PTR [rax-0x5c]
   1400512f9:	sub    al,0x3
   1400512fb:	add    BYTE PTR [rax+0x491],ah
   140051301:	add    BYTE PTR [rax],al
   140051303:	add    BYTE PTR [rax],al
   140051305:	add    BYTE PTR [rax],al
   140051307:	add    BYTE PTR [rcx],al
   140051309:	add    BYTE PTR [rax],al
   14005130b:	add    BYTE PTR [rcx],al
   14005130d:	add    BYTE PTR [rax],al
   14005130f:	add    BYTE PTR [rbx+rdx*1],dl
   140051312:	add    eax,0x0
	...
   14005131f:	add    BYTE PTR [rbx-0x1f],cl
   140051322:	add    eax,DWORD PTR [rax]
   140051324:	cmp    BYTE PTR [rax],al
   140051326:	add    BYTE PTR [rax],al
   140051328:	cmp    BYTE PTR [rcx],0x1
   14005132b:	add    bh,bh
   14005132d:	(bad)  
   14005132e:	(bad)  
   14005132f:	call   FWORD PTR [rcx+rdi*1+0x1]
   140051336:	add    BYTE PTR [rax],al
   140051338:	and    eax,0xff00013a
   14005133d:	(bad)  
   14005133e:	(bad)  
   14005133f:	dec    DWORD PTR [rbx-0x1f]
   140051342:	add    eax,DWORD PTR [rax]
   140051344:	add    BYTE PTR [rax],al
   140051346:	add    BYTE PTR [rax],al
   140051348:	sbb    DWORD PTR [rdx],ecx
   14005134a:	add    al,BYTE PTR [rax]
   14005134c:	or     dh,BYTE PTR [rdx]
   14005134e:	(bad)  
   14005134f:	push   rax
   140051350:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051351:	sub    al,0x3
   140051353:	add    BYTE PTR [rax+0x19000491],ah
   140051359:	and    BYTE PTR [rax],cl
   14005135b:	add    BYTE PTR [rax],ah
   14005135d:	adc    BYTE PTR fs:[rax],al
   140051360:	sbb    al,0x34
   140051362:	lldt   WORD PTR [rax]
   140051365:	xchg   edx,eax
   140051366:	or     al,0xf0
   140051368:	or     ah,al
   14005136a:	or     BYTE PTR [rax-0x5c],dh
   14005136d:	sub    al,0x3
   14005136f:	add    al,dl
   140051371:	xchg   ecx,eax
   140051372:	add    al,0x0
	...
   14005137c:	add    DWORD PTR [rax],eax
   14005137e:	add    BYTE PTR [rax],al
   140051380:	add    DWORD PTR [rax],eax
   140051382:	add    BYTE PTR [rax],al
   140051384:	mov    BYTE PTR [rbx],dl
   140051386:	add    eax,0x0
	...
   140051393:	add    ch,dh
   140051395:	jrcxz  0x14005139a
   140051397:	add    BYTE PTR [rax+0x0],cl
   14005139a:	add    BYTE PTR [rax],al
   14005139c:	sbb    BYTE PTR [rax],bh
   14005139e:	add    DWORD PTR [rax],eax
   1400513a0:	(bad)  
   1400513a1:	(bad)  
   1400513a2:	(bad)  
   1400513a3:	jmp    QWORD PTR [rsi+0x138]
   1400513a9:	add    BYTE PTR [rax],al
   1400513ab:	add    dl,cl
   1400513ad:	cmp    BYTE PTR [rcx],al
   1400513af:	add    bh,bh
   1400513b1:	(bad)  
   1400513b2:	(bad)  
   1400513b3:	push   rbp
   1400513b5:	jrcxz  0x1400513ba
   1400513b7:	add    BYTE PTR [rax],al
   1400513b9:	add    BYTE PTR [rax],al
   1400513bb:	add    BYTE PTR [rdx],al
   1400513bd:	in     al,0x3
   1400513bf:	add    BYTE PTR [rcx],al
   1400513c1:	add    BYTE PTR [rax],al
   1400513c3:	add    BYTE PTR [rcx],bl
   1400513c5:	or     al,BYTE PTR [rdx]
   1400513c7:	add    BYTE PTR [rdx],cl
   1400513c9:	push   rdx
   1400513ca:	(bad)  
   1400513cb:	push   rax
   1400513cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400513cd:	sub    al,0x3
   1400513cf:	add    al,dl
   1400513d1:	xchg   ecx,eax
   1400513d2:	add    al,0x0
   1400513d4:	adc    DWORD PTR [rdi],ebx
   1400513d6:	or     BYTE PTR [rax],al
   1400513d8:	(bad)  
   1400513d9:	push   rsp
   1400513da:	or     al,0x0
   1400513dc:	sbb    esi,DWORD PTR [rdx+rcx*1]
   1400513df:	add    BYTE PTR [rdi],cl
   1400513e1:	push   rdx
   1400513e2:	or     esp,eax
   1400513e4:	or     DWORD PTR [rax+0x8],esi
   1400513e7:	(bad)  
   1400513e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400513e9:	sub    al,0x3
   1400513eb:	add    BYTE PTR [rax],al
   1400513ed:	xchg   edx,eax
   1400513ee:	add    al,0x0
   1400513f0:	(bad)  
   1400513f1:	(bad)  
   1400513f2:	add    DWORD PTR [rax],eax
   1400513f4:	(bad)  
   1400513f5:	(bad)  
   1400513f6:	(bad)  
   1400513f7:	push   rdi
   1400513f9:	(bad)  
   1400513fa:	add    DWORD PTR [rax],eax
   1400513fc:	add    BYTE PTR [rax],al
   1400513fe:	add    BYTE PTR [rax],al
   140051400:	adc    DWORD PTR [rcx+rcx*1],ebx
   140051403:	add    BYTE PTR [rdx+rax*4],dl
   140051406:	or     eax,0x9e00bf0
   14005140b:	rol    BYTE PTR [rdi],1
   14005140d:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143651884
   140051414:	add    dl,BYTE PTR [rax+0x0]
   140051417:	add    BYTE PTR [rsp+rbp*1-0x6dcffffd],ah
   14005141e:	add    al,0x0
   140051420:	(bad)  
   140051421:	(bad)  
   140051422:	(bad)  
   140051423:	inc    DWORD PTR [rsi]
   140051425:	loop   0x14005142a
   140051427:	add    bh,bh
   140051429:	(bad)  
   14005142a:	(bad)  
   14005142b:	call   QWORD PTR [rdx]
   14005142d:	loop   0x140051432
   14005142f:	add    BYTE PTR [rcx],al
   140051431:	add    BYTE PTR [rax],al
   140051433:	add    BYTE PTR [rsi],bl
   140051435:	loop   0x14005143a
   140051437:	add    BYTE PTR [rcx],al
   140051439:	add    BYTE PTR [rax],al
   14005143b:	add    BYTE PTR [rdx],ch
   14005143d:	loop   0x140051442
   14005143f:	add    BYTE PTR [rcx],al
   140051441:	add    BYTE PTR [rax],al
   140051443:	add    BYTE PTR [rsi],dh
   140051445:	loop   0x14005144a
   140051447:	add    bh,bh
   140051449:	(bad)  
   14005144a:	(bad)  
   14005144b:	inc    DWORD PTR [rdx-0x1e]
   14005144e:	add    eax,DWORD PTR [rax]
   140051450:	add    DWORD PTR [rax],eax
   140051452:	add    BYTE PTR [rax],al
   140051454:	rex.WRX loop 0x14005145a
   140051457:	add    bh,bh
   140051459:	(bad)  
   14005145a:	(bad)  
   14005145b:	call   FWORD PTR [rdx-0x1e]
   14005145e:	add    eax,DWORD PTR [rax]
   140051460:	(bad)  
   140051461:	(bad)  
   140051462:	(bad)  
   140051463:	jmp    QWORD PTR [rsi-0x1e]
   140051466:	add    eax,DWORD PTR [rax]
   140051468:	(bad)  
   140051469:	(bad)  
   14005146a:	(bad)  
   14005146b:	push   QWORD PTR [rdx-0x1e]
   14005146e:	add    eax,DWORD PTR [rax]
   140051470:	or     DWORD PTR [rax],eax
   140051472:	add    BYTE PTR [rax],al
   140051474:	jle    0x140051458
   140051476:	add    eax,DWORD PTR [rax]
   140051478:	or     DWORD PTR [rax],eax
   14005147a:	add    BYTE PTR [rax],al
   14005147c:	mov    ah,dl
   14005147e:	add    eax,DWORD PTR [rax]
   140051480:	or     DWORD PTR [rax],eax
   140051482:	add    BYTE PTR [rax],al
   140051484:	xchg   esi,eax
   140051485:	loop   0x14005148a
   140051487:	add    bh,bh
   140051489:	(bad)  
   14005148a:	(bad)  
   14005148b:	jmp    QWORD PTR [rdx+0xb0003e2]
   140051491:	add    BYTE PTR [rax],al
   140051493:	add    BYTE PTR [rsi+0xb0003e2],ch
   140051499:	add    BYTE PTR [rax],al
   14005149b:	add    BYTE PTR [rdx+0xb0003e2],bh
   1400514a1:	add    BYTE PTR [rax],al
   1400514a3:	add    dh,al
   1400514a5:	loop   0x1400514aa
   1400514a7:	add    BYTE PTR [rcx],cl
   1400514a9:	add    BYTE PTR [rax],al
   1400514ab:	add    dl,dl
   1400514ad:	loop   0x1400514b2
   1400514af:	add    bh,bh
   1400514b1:	(bad)  
   1400514b2:	(bad)  
   1400514b3:	(bad)  
   1400514b4:	fsubrp st(2),st
   1400514b6:	add    eax,DWORD PTR [rax]
   1400514b8:	push   rax
   1400514b9:	xor    al,0x1
   1400514bb:	add    bh,bh
   1400514bd:	(bad)  
   1400514be:	(bad)  
   1400514bf:	jmp    rbx
   1400514c1:	xor    al,0x1
   1400514c3:	add    BYTE PTR [rcx],al
   1400514c5:	add    BYTE PTR [rax],al
   1400514c7:	add    ah,bh
   1400514c9:	xor    al,0x1
   1400514cb:	add    BYTE PTR [rbx],al
   1400514cd:	add    BYTE PTR [rax],al
   1400514cf:	add    BYTE PTR [rcx],dh
   1400514d1:	xor    eax,0x10001
   1400514d6:	add    BYTE PTR [rax],al
   1400514d8:	rex.WRX xor rax,0xffffffffffff0001
   1400514de:	(bad)  
   1400514df:	call   QWORD PTR [rax+0x35]
   1400514e2:	add    DWORD PTR [rax],eax
   1400514e4:	add    DWORD PTR [rax],eax
   1400514e6:	add    BYTE PTR [rax],al
   1400514e8:	ins    DWORD PTR es:[rdi],dx
   1400514e9:	xor    eax,0xffff0001
   1400514ee:	(bad)  
   1400514ef:	call   QWORD PTR [rsi+rsi*1]
   1400514f2:	add    DWORD PTR [rax],eax
   1400514f4:	or     DWORD PTR [rax],eax
   1400514f6:	add    BYTE PTR [rax],al
   1400514f8:	sub    eax,0xb000136
   1400514fd:	add    BYTE PTR [rax],al
   1400514ff:	add    BYTE PTR [rsi+0x36],dh
   140051502:	add    DWORD PTR [rax],eax
   140051504:	sldt   WORD PTR [rax]
   140051507:	add    BYTE PTR [rdx+0xb000136],dh
   14005150d:	add    BYTE PTR [rax],al
   14005150f:	add    bh,cl
   140051511:	add    DWORD PTR ss:[rax],eax
   140051514:	or     DWORD PTR [rax],eax
   140051516:	add    BYTE PTR [rax],al
   140051518:	lock add DWORD PTR ss:[rax],eax
   14005151c:	(bad)  
   14005151d:	(bad)  
   14005151e:	(bad)  
   14005151f:	push   rdx
   140051521:	add    DWORD PTR ss:[rax],eax
   140051524:	or     DWORD PTR [rax],eax
   140051526:	add    BYTE PTR [rax],al
   140051528:	getsec 
   14005152a:	add    DWORD PTR [rax],eax
   14005152c:	(bad)  
   14005152d:	(bad)  
   14005152e:	(bad)  
   14005152f:	call   QWORD PTR [rcx]
   140051531:	(bad)  
   140051532:	(bad)  
   140051533:	add    BYTE PTR [rdi],dl
   140051535:	xor    al,0xd
   140051537:	add    BYTE PTR [rcx],cl
   140051539:	push   rdx
   14005153a:	add    eax,0x27003e0
   14005153f:	(bad)  
   140051540:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051541:	sub    al,0x3
   140051543:	add    BYTE PTR [rax-0x6e],ah
   140051546:	add    al,0x0
   140051548:	(bad)  
   140051549:	(bad)  
   14005154a:	(bad)  
   14005154b:	(bad)  
   14005154c:	(bad)  
   14005154d:	loop   0x140051552
   14005154f:	add    bh,bh
   140051551:	(bad)  
   140051552:	(bad)  
   140051553:	push   rsi
   140051555:	loop   0x14005155a
   140051557:	add    BYTE PTR [rcx],al
   140051559:	add    BYTE PTR [rax],al
   14005155b:	add    BYTE PTR [rdx],al
   14005155d:	jrcxz  0x140051562
   14005155f:	add    BYTE PTR [rcx],al
   140051561:	add    BYTE PTR [rax],al
   140051563:	add    BYTE PTR [rsi],cl
   140051565:	jrcxz  0x14005156a
   140051567:	add    BYTE PTR [rcx],al
   140051569:	add    BYTE PTR [rax],al
   14005156b:	add    BYTE PTR [rdx],bl
   14005156d:	jrcxz  0x140051572
   14005156f:	add    bh,bh
   140051571:	(bad)  
   140051572:	(bad)  
   140051573:	jmp    QWORD PTR [rsi]
   140051575:	jrcxz  0x14005157a
   140051577:	add    BYTE PTR [rcx],al
   140051579:	add    BYTE PTR [rax],al
   14005157b:	add    BYTE PTR [rdx],dh
   14005157d:	jrcxz  0x140051582
   14005157f:	add    bh,bh
   140051581:	(bad)  
   140051582:	(bad)  
   140051583:	(bad)  
   140051584:	ds jrcxz 0x14005158a
   140051587:	add    BYTE PTR [rbx+rsi*1],cl
   14005158a:	add    DWORD PTR [rax],eax
   14005158c:	(bad)  
   14005158d:	(bad)  
   14005158e:	(bad)  
   14005158f:	inc    DWORD PTR [rbx+0x1000133]
   140051595:	add    BYTE PTR [rax],al
   140051597:	add    BYTE PTR [rbp+0x3000133],bl
   14005159d:	add    BYTE PTR [rax],al
   14005159f:	add    dh,dl
   1400515a1:	xor    eax,DWORD PTR [rcx]
   1400515a3:	add    BYTE PTR [rcx],al
   1400515a5:	add    BYTE PTR [rax],al
   1400515a7:	add    bl,dh
   1400515a9:	xor    eax,DWORD PTR [rcx]
   1400515ab:	add    bh,bh
   1400515ad:	(bad)  
   1400515ae:	(bad)  
   1400515af:	push   rbp
   1400515b1:	xor    eax,DWORD PTR [rcx]
   1400515b3:	add    BYTE PTR [rcx],al
   1400515b5:	add    BYTE PTR [rax],al
   1400515b7:	add    BYTE PTR [rdx],dl
   1400515b9:	xor    al,0x1
   1400515bb:	add    bh,bh
   1400515bd:	(bad)  
   1400515be:	(bad)  
   1400515bf:	call   QWORD PTR [rcx]
   1400515c1:	sbb    BYTE PTR [rsi],al
   1400515c3:	add    BYTE PTR [rax],bl
   1400515c5:	or     al,BYTE PTR fs:[rax]
   1400515c8:	adc    al,0x34
   1400515ca:	or     DWORD PTR [rax],eax
   1400515cc:	or     BYTE PTR [rdx+0x4],dl
   1400515cf:	jo     0x140051575
   1400515d1:	sub    al,0x3
   1400515d3:	add    BYTE PTR [rax-0xfffb6e],dl
   1400515d9:	(bad)  
   1400515da:	(bad)  
   1400515db:	inc    ebp
   1400515dd:	jrcxz  0x1400515e2
   1400515df:	add    BYTE PTR [rax],al
   1400515e1:	add    BYTE PTR [rax],al
   1400515e3:	add    cl,dl
   1400515e5:	jrcxz  0x1400515ea
   1400515e7:	add    BYTE PTR [rax],al
   1400515e9:	add    BYTE PTR [rax],al
   1400515eb:	add    ch,bl
   1400515ed:	jrcxz  0x1400515f2
   1400515ef:	add    bh,bh
   1400515f1:	(bad)  
   1400515f2:	(bad)  
   1400515f3:	(bad)  
   1400515f4:	jmp    0x1a80519dc
   1400515f9:	xor    al,BYTE PTR [rcx]
   1400515fb:	add    bh,bh
   1400515fd:	(bad)  
   1400515fe:	(bad)  
   1400515ff:	call   FWORD PTR [rcx+0x132]
   140051605:	add    BYTE PTR [rax],al
   140051607:	add    BYTE PTR [rdi+0x1000132],ah
   14005160d:	add    BYTE PTR [rax],al
   14005160f:	add    BYTE PTR [rdi+0x132],dh
   140051615:	add    BYTE PTR [rax],al
   140051617:	add    dl,bl
   140051619:	xor    al,BYTE PTR [rcx]
   14005161b:	add    bh,bh
   14005161d:	(bad)  
   14005161e:	(bad)  
   14005161f:	call   QWORD PTR [rcx]
   140051621:	and    BYTE PTR [rcx],cl
   140051623:	add    BYTE PTR [rax],bl
   140051625:	(bad)  
   140051626:	adc    eax,esi
   140051628:	pavgb  mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c521ff
   14005162f:	jo     0x140051639
   140051631:	(bad)  
   140051632:	(bad)  
   140051633:	xor    BYTE PTR [rsi],al
   140051635:	push   rax
   140051636:	add    BYTE PTR [rax],al
   140051638:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051639:	sub    al,0x3
   14005163b:	add    al,al
   14005163d:	xchg   edx,eax
   14005163e:	add    al,0x0
   140051640:	(bad)  
   140051641:	(bad)  
   140051642:	(bad)  
   140051643:	jmp    QWORD PTR [rdi]
   140051645:	loopne 0x14005164a
   140051647:	add    BYTE PTR [rax],al
   140051649:	add    BYTE PTR [rax],al
   14005164b:	add    BYTE PTR [rbx],dh
   14005164d:	loopne 0x140051652
   14005164f:	add    BYTE PTR [rcx],al
   140051651:	add    BYTE PTR [rax],al
   140051653:	add    BYTE PTR [rbx-0x20],al
   140051656:	add    eax,DWORD PTR [rax]
   140051658:	add    DWORD PTR [rax],eax
   14005165a:	add    BYTE PTR [rax],al
   14005165c:	rex.WRXB loopne 0x140051662
   14005165f:	add    BYTE PTR [rbx],al
   140051661:	add    BYTE PTR [rax],al
   140051663:	add    BYTE PTR [rbx-0x20],bl
   140051666:	add    eax,DWORD PTR [rax]
   140051668:	add    eax,DWORD PTR [rax]
   14005166a:	add    BYTE PTR [rax],al
   14005166c:	addr32 loopne 0x140051672
   14005166f:	add    BYTE PTR [rip+0x73000000],al        # 0x1b3051675
   140051675:	loopne 0x14005167a
   140051677:	add    BYTE PTR [rip+0x7f000000],al        # 0x1bf05167d
   14005167d:	loopne 0x140051682
   14005167f:	add    BYTE PTR [rip+0xffffffff8b000000],al        # 0xcb051685
   140051685:	loopne 0x14005168a
   140051687:	add    BYTE PTR [rbx],al
   140051689:	add    BYTE PTR [rax],al
   14005168b:	add    BYTE PTR [rdi+0x10003e0],dl
   140051691:	add    BYTE PTR [rax],al
   140051693:	add    BYTE PTR [rbx+0x50003e0],ah
   140051699:	add    BYTE PTR [rax],al
   14005169b:	add    BYTE PTR [rdi+0x30003e0],ch
   1400516a1:	add    BYTE PTR [rax],al
   1400516a3:	add    BYTE PTR [rbx+0x10003e0],bh
   1400516a9:	add    BYTE PTR [rax],al
   1400516ab:	add    bh,al
   1400516ad:	loopne 0x1400516b2
   1400516af:	add    BYTE PTR [rip+0xffffffffd3000000],al        # 0x1130516b5
   1400516b5:	loopne 0x1400516ba
   1400516b7:	add    BYTE PTR [rbx],al
   1400516b9:	add    BYTE PTR [rax],al
   1400516bb:	add    bh,bl
   1400516bd:	loopne 0x1400516c2
   1400516bf:	add    BYTE PTR [rcx],al
   1400516c1:	add    BYTE PTR [rax],al
   1400516c3:	add    bl,ch
   1400516c5:	loopne 0x1400516ca
   1400516c7:	add    BYTE PTR [rdi],al
   1400516c9:	add    BYTE PTR [rax],al
   1400516cb:	add    bh,dh
   1400516cd:	loopne 0x1400516d2
   1400516cf:	add    BYTE PTR [rdi],al
   1400516d1:	add    BYTE PTR [rax],al
   1400516d3:	add    BYTE PTR [rbx],al
   1400516d5:	loope  0x1400516da
   1400516d7:	add    BYTE PTR [rdi],al
   1400516d9:	add    BYTE PTR [rax],al
   1400516db:	add    BYTE PTR [rdi],cl
   1400516dd:	loope  0x1400516e2
   1400516df:	add    BYTE PTR [rdi],al
   1400516e1:	add    BYTE PTR [rax],al
   1400516e3:	add    BYTE PTR [rbx],bl
   1400516e5:	loope  0x1400516ea
   1400516e7:	add    BYTE PTR [rip+0x27000000],al        # 0x1670516ed
   1400516ed:	loope  0x1400516f2
   1400516ef:	add    BYTE PTR [rbx],al
   1400516f1:	add    BYTE PTR [rax],al
   1400516f3:	add    BYTE PTR [rbx],dh
   1400516f5:	loope  0x1400516fa
   1400516f7:	add    BYTE PTR [rcx],al
   1400516f9:	add    BYTE PTR [rax],al
   1400516fb:	add    BYTE PTR [rdi],bh
   1400516fd:	loope  0x140051702
   1400516ff:	add    BYTE PTR [rdi+rbp*1],ch
   140051702:	add    DWORD PTR [rax],eax
   140051704:	(bad)  
   140051705:	(bad)  
   140051706:	(bad)  
   140051707:	jmp    QWORD PTR [rax+0x2f]
   14005170a:	add    DWORD PTR [rax],eax
   14005170c:	add    BYTE PTR [rax],al
   14005170e:	add    BYTE PTR [rax],al
   140051710:	mov    ah,0x2f
   140051712:	add    DWORD PTR [rax],eax
   140051714:	add    DWORD PTR [rax],eax
   140051716:	add    BYTE PTR [rax],al
   140051718:	in     eax,0x2f
   14005171a:	add    DWORD PTR [rax],eax
   14005171c:	add    eax,DWORD PTR [rax]
   14005171e:	add    BYTE PTR [rax],al
   140051720:	(bad)  
   140051721:	(bad)  
   140051722:	add    DWORD PTR [rax],eax
   140051724:	add    eax,0x17000000
   140051729:	xor    BYTE PTR [rcx],al
   14005172b:	add    BYTE PTR [rdi],al
   14005172d:	add    BYTE PTR [rax],al
   14005172f:	add    BYTE PTR [rax+rsi*1+0x50001],al
   140051736:	add    BYTE PTR [rax],al
   140051738:	movabs ds:0xc200000003000130,eax
   140051741:	xor    BYTE PTR [rcx],al
   140051743:	add    BYTE PTR [rcx],al
   140051745:	add    BYTE PTR [rax],al
   140051747:	add    bh,al
   140051749:	xor    BYTE PTR [rcx],al
   14005174b:	add    BYTE PTR [rdi],al
   14005174d:	add    BYTE PTR [rax],al
   14005174f:	add    al,bl
   140051751:	xor    BYTE PTR [rcx],al
   140051753:	add    BYTE PTR [rcx],dl
   140051755:	add    BYTE PTR [rax],al
   140051757:	add    ch,ah
   140051759:	xor    BYTE PTR [rcx],al
   14005175b:	add    BYTE PTR [rdi],al
   14005175d:	add    BYTE PTR [rax],al
   14005175f:	add    BYTE PTR [rdx],dl
   140051761:	xor    DWORD PTR [rcx],eax
   140051763:	add    BYTE PTR [rbx],dl
   140051765:	add    BYTE PTR [rax],al
   140051767:	add    BYTE PTR [rdi],bl
   140051769:	xor    DWORD PTR [rcx],eax
   14005176b:	add    BYTE PTR [rdi],al
   14005176d:	add    BYTE PTR [rax],al
   14005176f:	add    BYTE PTR [rdx+0x31],dl
   140051772:	add    DWORD PTR [rax],eax
   140051774:	add    eax,0x71000000
   140051779:	xor    DWORD PTR [rcx],eax
   14005177b:	add    BYTE PTR [rbx],al
   14005177d:	add    BYTE PTR [rax],al
   14005177f:	add    BYTE PTR [rax+0x1000131],dl
   140051785:	add    BYTE PTR [rax],al
   140051787:	add    BYTE PTR [rdx+0x7000131],dl
   14005178d:	add    BYTE PTR [rax],al
   14005178f:	add    BYTE PTR [rsi+0x5000131],dl
   140051795:	add    BYTE PTR [rax],al
   140051797:	add    BYTE PTR [rcx+0x3000131],dh
   14005179d:	add    BYTE PTR [rax],al
   14005179f:	add    al,dl
   1400517a1:	xor    DWORD PTR [rcx],eax
   1400517a3:	add    BYTE PTR [rcx],al
   1400517a5:	add    BYTE PTR [rax],al
   1400517a7:	add    bl,bh
   1400517a9:	xor    DWORD PTR [rcx],eax
   1400517ab:	add    BYTE PTR [rip+0x16000000],al        # 0x1560517b1
   1400517b1:	xor    al,BYTE PTR [rcx]
   1400517b3:	add    BYTE PTR [rbx],al
   1400517b5:	add    BYTE PTR [rax],al
   1400517b7:	add    BYTE PTR [rip+0x1000132],dh        # 0x1410518ef
   1400517bd:	add    BYTE PTR [rax],al
   1400517bf:	add    BYTE PTR [rdx+rsi*1+0x1],dl
   1400517c3:	add    bh,bh
   1400517c5:	(bad)  
   1400517c6:	(bad)  
   1400517c7:	call   QWORD PTR [rcx]
   1400517c9:	adc    al,0x4
   1400517cb:	add    BYTE PTR [rsp+rsi*1],dl
   1400517ce:	or     BYTE PTR [rax],al
   1400517d0:	(bad)  
   1400517d1:	push   rdx
   1400517d2:	add    dh,BYTE PTR [rax-0x5c]
   1400517d5:	sub    al,0x3
   1400517d7:	add    al,dh
   1400517d9:	xchg   edx,eax
   1400517da:	add    al,0x0
   1400517dc:	mov    eax,0xff000405
   1400517e1:	(bad)  
   1400517e2:	(bad)  
   1400517e3:	dec    esp
   1400517e5:	add    eax,0x10004
   1400517ea:	add    BYTE PTR [rax],al
   1400517ec:	inc    BYTE PTR [rip+0x4]        # 0x1400517f6
   1400517f2:	add    BYTE PTR [rax],al
   1400517f4:	sub    DWORD PTR [rsi],eax
   1400517f6:	add    al,0x0
   1400517f8:	(bad)  
   1400517f9:	(bad)  
   1400517fa:	(bad)  
   1400517fb:	call   FWORD PTR [rcx]
   1400517fd:	cs (bad) 
   1400517ff:	add    BYTE PTR [rsp+riz*2],bl
   140051802:	rex.WXB add BYTE PTR [r8],bl
   140051805:	xor    al,0x4a
   140051807:	add    BYTE PTR [rbx],cl
   140051809:	add    DWORD PTR [rax+0x0],ecx
   14005180c:	add    al,0x70
   14005180e:	add    BYTE PTR [rax],al
   140051810:	jl     0x14005179d
   140051812:	add    eax,DWORD PTR [rax]
   140051814:	and    BYTE PTR [rbx+0x2320004],dl
   14005181a:	add    BYTE PTR [rax],al
   14005181c:	(bad)  
   14005181d:	(bad)  
   14005181e:	(bad)  
   14005181f:	call   FWORD PTR [rdx+0x3e1]
   140051825:	add    BYTE PTR [rax],al
   140051827:	add    BYTE PTR [rsi+0x10003e1],ah
   14005182d:	add    BYTE PTR [rax],al
   14005182f:	add    BYTE PTR [rsi-0x43fffc1f],dh
   140051835:	add    al,BYTE PTR [rax+rax*1]
   140051838:	(bad)  
   140051839:	(bad)  
   14005183a:	(bad)  
   14005183b:	(bad)  
   14005183c:	(bad)  
   14005183d:	add    al,BYTE PTR [rax+rax*1]
   140051840:	add    BYTE PTR [rax],al
   140051842:	add    BYTE PTR [rax],al
   140051844:	adc    al,BYTE PTR [rbx]
   140051846:	add    al,0x0
   140051848:	add    DWORD PTR [rax],eax
   14005184a:	add    BYTE PTR [rax],al
   14005184c:	xor    eax,0x2000403
   140051851:	add    BYTE PTR [rax],al
   140051853:	add    dh,bl
   140051855:	add    eax,DWORD PTR [rax+rax*1]
   140051858:	(bad)  
   140051859:	(bad)  
   14005185a:	(bad)  
   14005185b:	call   QWORD PTR [rcx]
   14005185d:	and    BYTE PTR [rax],cl
   14005185f:	add    BYTE PTR [rax],ah
   140051861:	or     eax,DWORD PTR fs:[rax]
   140051864:	sbb    al,0x54
   140051866:	or     al,BYTE PTR [rax]
   140051868:	sbb    BYTE PTR [rcx+rcx*1],dh
   14005186b:	add    BYTE PTR [rdx+rdx*2],cl
   14005186e:	or     BYTE PTR [rax-0x5c],dh
   140051871:	sub    al,0x3
   140051873:	add    BYTE PTR [rax-0x6d],dl
   140051876:	add    al,0x0
   140051878:	test   BYTE PTR [rbp+0x1],cl
   14005187b:	add    bh,bh
   14005187d:	(bad)  
   14005187e:	(bad)  
   14005187f:	inc    edx
   140051881:	add    QWORD PTR [r8],r8
   140051884:	add    BYTE PTR [rax],al
   140051886:	add    BYTE PTR [rax],al
   140051888:	sbb    BYTE PTR [rsi+0x1],cl
   14005188b:	add    bh,bh
   14005188d:	(bad)  
   14005188e:	(bad)  
   14005188f:	inc    DWORD PTR [rcx]
   140051891:	sbb    BYTE PTR [rdx],cl
   140051893:	add    BYTE PTR [rax],bl
   140051895:	or     eax,DWORD PTR fs:[rax]
   140051898:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14005189c:	sbb    BYTE PTR [rax+rcx*1],dh
   14005189f:	add    BYTE PTR [rax],bl
   1400518a1:	xor    dl,BYTE PTR [rax+rsi*8]
   1400518a4:	adc    ah,al
   1400518a6:	adc    BYTE PTR [rax+0x1],dh
   1400518a9:	(bad)  
   1400518aa:	or     al,BYTE PTR [rax]
   1400518ac:	(bad)  
   1400518ad:	push   rsp
   1400518ae:	or     al,0x0
   1400518b0:	(bad)  
   1400518b1:	xor    al,0xa
   1400518b3:	add    BYTE PTR [rsi],dl
   1400518b5:	xor    dl,BYTE PTR [rdx]
   1400518b7:	lock adc al,ah
   1400518ba:	(bad)  
   1400518bb:	ror    BYTE PTR [rax+rsi*2],1
   1400518be:	or     esp,DWORD PTR [rax+0x11]
   1400518c1:	and    DWORD PTR [rdx],ecx
   1400518c3:	add    BYTE PTR [rcx],ah
   1400518c5:	xor    al,0x10
   1400518c7:	add    BYTE PTR [rip+0xcf00e72],dl        # 0x14cf5273f
   1400518cd:	loopne 0x1400518d9
   1400518cf:	ror    BYTE PTR [rax],1
   1400518d1:	rol    BYTE PTR [rsi],0x70
   1400518d4:	add    eax,0xa4500460
   1400518d9:	sub    al,0x3
   1400518db:	add    BYTE PTR [rax-0xfffb6d],al
   1400518e1:	(bad)  
   1400518e2:	(bad)  
   1400518e3:	dec    DWORD PTR [rsp+riz*8+0x3]
   1400518ea:	add    BYTE PTR [rax],al
   1400518ec:	cwde   
   1400518ed:	in     al,0x3
   1400518ef:	add    BYTE PTR [rcx],al
   1400518f1:	add    BYTE PTR [rax],al
   1400518f3:	add    BYTE PTR [rsp+riz*8+0x10003],ah
   1400518fa:	add    BYTE PTR [rax],al
   1400518fc:	mov    al,0xe4
   1400518fe:	add    eax,DWORD PTR [rax]
   140051900:	add    BYTE PTR [rax],al
   140051902:	add    BYTE PTR [rax],al
   140051904:	mov    esp,0xff0003e4
   140051909:	(bad)  
   14005190a:	(bad)  
   14005190b:	dec    eax
   14005190d:	in     al,0x3
   14005190f:	add    ah,cl
   140051911:	add    DWORD PTR [r8],r8d
   140051914:	(bad)  
   140051915:	(bad)  
   140051916:	(bad)  
   140051917:	dec    DWORD PTR [rsi+rax*2]
   14005191a:	add    DWORD PTR [rax],eax
   14005191c:	add    BYTE PTR [rax],al
   14005191e:	add    BYTE PTR [rax],al
   140051920:	and    DWORD PTR [rsi+0x1],eax
   140051923:	add    BYTE PTR [rcx],al
   140051925:	add    BYTE PTR [rax],al
   140051927:	add    BYTE PTR [rsi],ch
   140051929:	rex.RX add DWORD PTR [rax],r8d
   14005192c:	add    al,BYTE PTR [rax]
   14005192e:	add    BYTE PTR [rax],al
   140051930:	and    eax,0x1000147
   140051935:	add    BYTE PTR [rax],al
   140051937:	add    BYTE PTR [rdi+rax*2+0x1],al
   14005193b:	add    BYTE PTR [rax],al
   14005193d:	add    BYTE PTR [rax],al
   14005193f:	add    BYTE PTR [rbx+0x47],ah
   140051942:	add    DWORD PTR [rax],eax
   140051944:	(bad)  
   140051945:	(bad)  
   140051946:	(bad)  
   140051947:	call   QWORD PTR [rcx]
   140051949:	and    DWORD PTR [rdx],ecx
   14005194b:	add    BYTE PTR [rcx],ah
   14005194d:	xor    al,0x16
   14005194f:	add    BYTE PTR [rip+0xcf00ed2],dl        # 0x14cf52827
   140051955:	loopne 0x140051961
   140051957:	ror    BYTE PTR [rax],1
   140051959:	rol    BYTE PTR [rsi],0x70
   14005195c:	add    eax,0xa4500460
   140051961:	sub    al,0x3
   140051963:	add    BYTE PTR [rax-0xfffb6d],dh
   140051969:	(bad)  
   14005196a:	(bad)  
   14005196b:	call   rsp
   14005196d:	in     al,0x3
   14005196f:	add    BYTE PTR [rax],al
   140051971:	add    BYTE PTR [rax],al
   140051973:	add    al,ah
   140051975:	in     al,0x3
   140051977:	add    BYTE PTR [rcx],al
   140051979:	add    BYTE PTR [rax],al
   14005197b:	add    ah,ch
   14005197d:	in     al,0x3
   14005197f:	add    BYTE PTR [rcx],al
   140051981:	add    BYTE PTR [rax],al
   140051983:	add    al,bh
   140051985:	in     al,0x3
   140051987:	add    BYTE PTR [rcx],al
   140051989:	add    BYTE PTR [rax],al
   14005198b:	add    BYTE PTR [rax],al
   14005198d:	add    BYTE PTR [rax],al
   14005198f:	add    BYTE PTR [rcx],al
   140051991:	add    BYTE PTR [rax],al
   140051993:	add    BYTE PTR [riz*8+0x10003],al
   14005199a:	add    BYTE PTR [rax],al
   14005199c:	adc    ch,ah
   14005199e:	add    eax,DWORD PTR [rax]
   1400519a0:	je     0x1400519e3
   1400519a2:	add    DWORD PTR [rax],eax
   1400519a4:	(bad)  
   1400519a5:	(bad)  
   1400519a6:	(bad)  
   1400519a7:	inc    DWORD PTR [rdx+rax*2]
   1400519aa:	add    DWORD PTR [rax],eax
   1400519ac:	add    BYTE PTR [rax],al
   1400519ae:	add    BYTE PTR [rax],al
   1400519b0:	pushf  
   1400519b1:	rex.X add DWORD PTR [rax],eax
   1400519b4:	add    DWORD PTR [rax],eax
   1400519b6:	add    BYTE PTR [rax],al
   1400519b8:	mov    dl,0x43
   1400519ba:	add    DWORD PTR [rax],eax
   1400519bc:	add    al,BYTE PTR [rax]
   1400519be:	add    BYTE PTR [rax],al
   1400519c0:	fild   WORD PTR [rbx+0x1]
   1400519c3:	add    BYTE PTR [rcx],al
   1400519c5:	add    BYTE PTR [rax],al
   1400519c7:	add    BYTE PTR [rax],ch
   1400519c9:	add    DWORD PTR [rax],r8d
   1400519cc:	add    eax,DWORD PTR [rax]
   1400519ce:	add    BYTE PTR [rax],al
   1400519d0:	add    al,BYTE PTR [rbp+0x1]
   1400519d3:	add    BYTE PTR [rcx],al
   1400519d5:	add    BYTE PTR [rax],al
   1400519d7:	add    BYTE PTR [rax],ch
   1400519d9:	add    DWORD PTR [r8],r8d
   1400519dc:	add    eax,DWORD PTR [rax]
   1400519de:	add    BYTE PTR [rax],al
   1400519e0:	add    DWORD PTR ds:[r8],r8d
   1400519e4:	add    DWORD PTR [rax],eax
   1400519e6:	add    BYTE PTR [rax],al
   1400519e8:	xchg   ebx,eax
   1400519e9:	add    DWORD PTR [r8],r8d
   1400519ec:	add    BYTE PTR [rax],al
   1400519ee:	add    BYTE PTR [rax],al
   1400519f0:	popf   
   1400519f1:	add    DWORD PTR [r8],r8d
   1400519f4:	(bad)  
   1400519f5:	(bad)  
   1400519f6:	(bad)  
   1400519f7:	call   FWORD PTR [rcx]
   1400519f9:	and    eax,0x34130009
   1400519fe:	sbb    DWORD PTR [rax],eax
   140051a00:	adc    eax,DWORD PTR [rcx]
   140051a02:	adc    al,BYTE PTR [rax]
   140051a04:	or     al,0xf0
   140051a06:	or     ah,al
   140051a08:	or     BYTE PTR [rax+0x7],dh
   140051a0b:	(bad)  
   140051a0c:	(bad)  
   140051a0d:	push   rax
   140051a0e:	add    BYTE PTR [rax],al
   140051a10:	cmp    al,0xe5
   140051a12:	add    al,BYTE PTR [rax]
   140051a14:	add    BYTE PTR [rax],0x0
   140051a17:	add    BYTE PTR [rcx],al
   140051a19:	or     al,BYTE PTR [rax+rax*1]
   140051a1c:	or     dh,BYTE PTR [rax+rcx*1]
   140051a1f:	add    BYTE PTR [rdx],cl
   140051a21:	push   rdx
   140051a22:	(bad)  
   140051a23:	jo     0x140051a26
   140051a25:	adc    cl,BYTE PTR [rax]
   140051a27:	add    BYTE PTR [rdx],dl
   140051a29:	push   rsp
   140051a2a:	or     al,0x0
   140051a2c:	adc    dh,BYTE PTR [rdx+rcx*1]
   140051a2f:	add    BYTE PTR [rdx],dl
   140051a31:	push   rdx
   140051a32:	(bad)  
   140051a33:	loopne 0x140051a41
   140051a35:	jo     0x140051a42
   140051a37:	(bad)  
   140051a38:	adc    DWORD PTR [rdx],edx
   140051a3a:	add    DWORD PTR [rax],eax
   140051a3c:	or     DWORD PTR [rdx+0x0],esp
   140051a3f:	add    BYTE PTR [rsp+rbp*1-0x6c1ffffd],ah
   140051a46:	add    al,0x0
   140051a48:	(bad)  
   140051a49:	(bad)  
   140051a4a:	(bad)  
   140051a4b:	push   QWORD PTR [rax-0x1c]
   140051a4e:	add    eax,DWORD PTR [rax]
   140051a50:	(bad)  
   140051a51:	(bad)  
   140051a52:	(bad)  
   140051a53:	inc    DWORD PTR [rax+0x680003e4]
   140051a59:	rex add DWORD PTR [rax],eax
   140051a5c:	(bad)  
   140051a5d:	(bad)  
   140051a5e:	(bad)  
   140051a5f:	call   QWORD PTR [rcx]
   140051a61:	sbb    al,BYTE PTR [rbx]
   140051a63:	add    BYTE PTR [rcx],dl
   140051a65:	add    DWORD PTR [rdx],esi
   140051a67:	add    BYTE PTR [rdx],al
   140051a69:	push   rax
   140051a6a:	add    BYTE PTR [rax],al
   140051a6c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051a6d:	sub    al,0x3
   140051a6f:	add    BYTE PTR [rax],dl
   140051a71:	xchg   esp,eax
   140051a72:	add    al,0x0
   140051a74:	(bad)  
   140051a75:	(bad)  
   140051a76:	(bad)  
   140051a77:	call   QWORD PTR [rbp+riz*8+0x3]
   140051a7b:	add    BYTE PTR [rax],al
   140051a7d:	add    BYTE PTR [rax],al
   140051a7f:	add    BYTE PTR [rbp+riz*8+0x3],ah
   140051a83:	add    BYTE PTR [rax],bh
   140051a85:	push   rsp
   140051a86:	add    DWORD PTR [rax],eax
   140051a88:	(bad)  
   140051a89:	(bad)  
   140051a8a:	(bad)  
   140051a8b:	jmp    FWORD PTR [rdx]
   140051a8d:	push   rbp
   140051a8e:	add    DWORD PTR [rax],eax
   140051a90:	add    BYTE PTR [rax],al
   140051a92:	add    BYTE PTR [rax],al
   140051a94:	cmp    al,0x55
   140051a96:	add    DWORD PTR [rax],eax
   140051a98:	(bad)  
   140051a99:	(bad)  
   140051a9a:	(bad)  
   140051a9b:	call   FWORD PTR [rcx]
   140051a9d:	(bad)  
   140051a9e:	or     eax,0x57742600
   140051aa3:	add    BYTE PTR [rsi],ah
   140051aa5:	fs push rsi
   140051aa7:	add    BYTE PTR [rsi],ah
   140051aa9:	xor    al,0x55
   140051aab:	add    BYTE PTR [rsi],ah
   140051aad:	add    DWORD PTR [rsi+0x0],ecx
   140051ab0:	sbb    al,dh
   140051ab2:	(bad)  
   140051ab3:	loopne 0x140051ac9
   140051ab5:	rcl    BYTE PTR [rdx],1
   140051ab7:	rcl    BYTE PTR [rax],0x50
   140051aba:	add    BYTE PTR [rax],al
   140051abc:	cmp    al,0xe5
   140051abe:	add    al,BYTE PTR [rax]
   140051ac0:	(bad)  
   140051ac1:	add    al,BYTE PTR [rax]
   140051ac3:	add    BYTE PTR [rcx],al
   140051ac5:	adc    al,0x8
   140051ac7:	add    BYTE PTR [rsp+riz*2],dl
   140051aca:	or     DWORD PTR [rax],eax
   140051acc:	adc    al,0x54
   140051ace:	or     BYTE PTR [rax],al
   140051ad0:	adc    al,0x34
   140051ad2:	(bad)  
   140051ad3:	add    BYTE PTR [rdx+rsi*1],dl
   140051ad6:	adc    BYTE PTR [rax+0x11],dh
   140051ad9:	adc    eax,DWORD PTR [rdx]
   140051adb:	add    BYTE PTR [rdx],cl
   140051add:	push   rdx
   140051ade:	(bad)  
   140051adf:	xor    BYTE PTR [rsp+rbp*1-0x6bbffffd],ah
   140051ae6:	add    al,0x0
   140051ae8:	(bad)  
   140051ae9:	(bad)  
   140051aea:	(bad)  
   140051aeb:	(bad)  
   140051aec:	cmp    ch,ah
   140051aee:	add    eax,DWORD PTR [rax]
   140051af0:	add    BYTE PTR [rax],al
   140051af2:	add    BYTE PTR [rax],al
   140051af4:	rex.R in eax,0x3
   140051af7:	add    ah,bh
   140051af9:	rex.WRXB add QWORD PTR [r8],r8
   140051afc:	(bad)  
   140051afd:	(bad)  
   140051afe:	(bad)  
   140051aff:	jmp    QWORD PTR [rdi]
   140051b01:	push   rax
   140051b02:	add    DWORD PTR [rax],eax
   140051b04:	add    DWORD PTR [rax],eax
   140051b06:	add    BYTE PTR [rax],al
   140051b08:	xchg   ecx,eax
   140051b09:	push   rax
   140051b0a:	add    DWORD PTR [rax],eax
   140051b0c:	add    BYTE PTR [rax],al
   140051b0e:	add    BYTE PTR [rax],al
   140051b10:	pushf  
   140051b11:	push   rax
   140051b12:	add    DWORD PTR [rax],eax
   140051b14:	(bad)  
   140051b15:	(bad)  
   140051b16:	(bad)  
   140051b17:	call   QWORD PTR [rcx]
   140051b19:	adc    DWORD PTR [rcx],eax
   140051b1b:	add    BYTE PTR [rcx],cl
   140051b1d:	and    al,BYTE PTR [rax]
   140051b1f:	add    BYTE PTR [rsp+rbp*1-0x6b8ffffd],ah
   140051b26:	add    al,0x0
   140051b28:	(bad)  
   140051b29:	(bad)  
   140051b2a:	(bad)  
   140051b2b:	call   FWORD PTR [riz*8+0x3]
   140051b32:	add    BYTE PTR [rax],al
   140051b34:	sub    ch,ah
   140051b36:	add    eax,DWORD PTR [rax]
   140051b38:	jo     0x140051b89
   140051b3a:	add    DWORD PTR [rax],eax
   140051b3c:	(bad)  
   140051b3d:	(bad)  
   140051b3e:	(bad)  
   140051b3f:	dec    DWORD PTR [rbx+0x14f]
   140051b45:	add    BYTE PTR [rax],al
   140051b47:	add    BYTE PTR [rdi+rcx*2+0x10001],bl
   140051b4e:	add    BYTE PTR [rax],al
   140051b50:	ret    
   140051b51:	rex.WRXB add QWORD PTR [r8],r8
   140051b54:	(bad)  
   140051b55:	(bad)  
   140051b56:	(bad)  
   140051b57:	inc    DWORD PTR [rcx]
   140051b59:	or     DWORD PTR [rdx],eax
   140051b5b:	add    BYTE PTR [rcx],cl
   140051b5d:	push   rdx
   140051b5e:	add    eax,0x52a1930
   140051b63:	add    BYTE PTR [rdi],cl
   140051b65:	add    DWORD PTR [rdx],edx
   140051b67:	add    BYTE PTR [rax],cl
   140051b69:	jo     0x140051b72
   140051b6b:	(bad)  
   140051b6c:	(bad)  
   140051b6d:	xor    BYTE PTR [rax],al
   140051b6f:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   140051b73:	add    BYTE PTR [rax-0x7cfffb6c],ah
	...
   140051b81:	add    BYTE PTR [rax],al
   140051b83:	add    BYTE PTR [rcx],al
   140051b85:	add    BYTE PTR [rax],al
   140051b87:	add    BYTE PTR [rcx],al
   140051b89:	add    BYTE PTR [rax],al
   140051b8b:	add    BYTE PTR [rax+0x51b],dl
	...
   140051b99:	add    BYTE PTR [rax],al
   140051b9b:	add    BYTE PTR [rbp+riz*8+0x3],dh
   140051b9f:	add    BYTE PTR [rax],bh
   140051ba1:	add    BYTE PTR [rax],al
   140051ba3:	add    BYTE PTR [rax],bl
   140051ba5:	push   rsi
   140051ba6:	add    DWORD PTR [rax],eax
   140051ba8:	(bad)  
   140051ba9:	(bad)  
   140051baa:	(bad)  
   140051bab:	call   QWORD PTR [rbp+0x56]
   140051bae:	add    DWORD PTR [rax],eax
   140051bb0:	add    BYTE PTR [rax],al
   140051bb2:	add    BYTE PTR [rax],al
   140051bb4:	fcom   DWORD PTR [rsi+0x1]
   140051bb7:	add    bh,bh
   140051bb9:	(bad)  
   140051bba:	(bad)  
   140051bbb:	push   QWORD PTR [rbp+riz*8+0x3]
   140051bbf:	add    BYTE PTR [rax],al
   140051bc1:	add    BYTE PTR [rax],al
   140051bc3:	add    BYTE PTR [rcx],bl
   140051bc5:	or     al,BYTE PTR [rdx]
   140051bc7:	add    BYTE PTR [rdx],cl
   140051bc9:	xor    al,BYTE PTR [rsi]
   140051bcb:	push   rax
   140051bcc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051bcd:	sub    al,0x3
   140051bcf:	add    BYTE PTR [rax+0x11000494],ah
   140051bd5:	adc    eax,DWORD PTR [rdx]
   140051bd7:	add    BYTE PTR [rdx],cl
   140051bd9:	push   rdx
   140051bda:	(bad)  
   140051bdb:	xor    BYTE PTR [rsp+rbp*1-0x6b2ffffd],ah
   140051be2:	add    al,0x0
   140051be4:	je     0x140051c3d
   140051be6:	add    DWORD PTR [rax],eax
   140051be8:	(bad)  
   140051be9:	(bad)  
   140051bea:	(bad)  
   140051beb:	call   QWORD PTR [rdi+rdx*2+0x1]
   140051bf2:	add    BYTE PTR [rax],al
   140051bf4:	mov    bl,0x57
   140051bf6:	add    DWORD PTR [rax],eax
   140051bf8:	(bad)  
   140051bf9:	(bad)  
   140051bfa:	(bad)  
   140051bfb:	call   FWORD PTR [rcx]
   140051bfd:	sub    al,0x9
   140051bff:	add    BYTE PTR [rbx],bl
   140051c01:	xor    al,0xa5
   140051c03:	add    BYTE PTR [rbx],bl
   140051c05:	add    DWORD PTR [rax+rax*1-0x1ff50ff4],ebx
   140051c0c:	or     BYTE PTR [rax+0x7],dh
   140051c0f:	(bad)  
   140051c10:	(bad)  
   140051c11:	push   rax
   140051c12:	add    BYTE PTR [rax],al
   140051c14:	cmp    al,0xe5
   140051c16:	add    al,BYTE PTR [rax]
   140051c18:	rol    BYTE PTR [rax+rax*1],1
   140051c1b:	add    BYTE PTR [rcx],al
   140051c1d:	clts   
   140051c1f:	add    BYTE PTR [rdi],cl
   140051c21:	or     DWORD PTR fs:[rax],eax
   140051c24:	sysenter 
   140051c26:	or     BYTE PTR [rax],al
   140051c28:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140051c2b:	jo     0x140051c2e
   140051c2d:	or     eax,DWORD PTR [rax+rax*1]
   140051c30:	or     edx,DWORD PTR [rdx+0x4]
   140051c33:	jo     0x140051c38
   140051c35:	xor    BYTE PTR [rdx],al
   140051c37:	push   rax
   140051c38:	adc    DWORD PTR [rcx],ebx
   140051c3a:	(bad)  
   140051c3b:	add    BYTE PTR [rcx],bl
   140051c3d:	or     al,BYTE PTR fs:[rax]
   140051c40:	adc    al,0x34
   140051c42:	or     DWORD PTR [rax],eax
   140051c44:	(bad)  
   140051c45:	push   rdx
   140051c46:	add    dh,BYTE PTR [rax-0x5c]
   140051c49:	sub    al,0x3
   140051c4b:	add    BYTE PTR [rax],al
   140051c4d:	xchg   ebp,eax
   140051c4e:	add    al,0x0
   140051c50:	mov    BYTE PTR [rax+0x1],dh
   140051c53:	add    bh,bh
   140051c55:	(bad)  
   140051c56:	(bad)  
   140051c57:	call   QWORD PTR [rcx]
   140051c59:	sbb    al,BYTE PTR [rsi]
   140051c5b:	add    BYTE PTR [rdx],bl
   140051c5d:	xor    al,0xb
   140051c5f:	add    BYTE PTR [rdx+rdx*2],cl
   140051c62:	or     BYTE PTR [rax+0x7],dh
   140051c65:	(bad)  
   140051c66:	(bad)  
   140051c67:	push   rax
   140051c68:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051c69:	sub    al,0x3
   140051c6b:	add    BYTE PTR [rax],dh
   140051c6d:	xchg   ebp,eax
   140051c6e:	add    al,0x0
   140051c70:	(bad)  
   140051c71:	(bad)  
   140051c72:	(bad)  
   140051c73:	inc    edi
   140051c75:	in     eax,0x3
   140051c77:	add    BYTE PTR [rax],al
   140051c79:	add    BYTE PTR [rax],al
   140051c7b:	add    cl,dh
   140051c7d:	in     eax,0x3
   140051c7f:	add    bh,bh
   140051c81:	(bad)  
   140051c82:	(bad)  
   140051c83:	(bad)  
   140051c84:	std    
   140051c85:	in     eax,0x3
   140051c87:	add    BYTE PTR [rax-0xfffe91],cl
   140051c8d:	(bad)  
   140051c8e:	(bad)  
   140051c8f:	inc    DWORD PTR [rdi]
   140051c91:	jo     0x140051c94
   140051c93:	add    BYTE PTR [rax],al
   140051c95:	add    BYTE PTR [rax],al
   140051c97:	add    BYTE PTR [rip+0xffffffffff000170],dl        # 0x13f051e0d
   140051c9d:	(bad)  
   140051c9e:	(bad)  
   140051c9f:	jmp    QWORD PTR [rsi]
   140051ca1:	jo     0x140051ca4
   140051ca3:	add    BYTE PTR [rdx],al
   140051ca5:	add    BYTE PTR [rax],al
   140051ca7:	add    BYTE PTR [rcx+0x70],dh
   140051caa:	add    DWORD PTR [rax],eax
   140051cac:	(bad)  
   140051cad:	(bad)  
   140051cae:	(bad)  
   140051caf:	call   QWORD PTR [rcx]
   140051cb1:	sbb    BYTE PTR [rax+rax*1],al
   140051cb4:	sbb    BYTE PTR [rbx+rcx*1],dh
   140051cb7:	add    BYTE PTR [rdx+rsi*2],cl
   140051cba:	or     BYTE PTR [rax-0x5c],dh
   140051cbd:	sub    al,0x3
   140051cbf:	add    BYTE PTR [rax-0x6b],ah
   140051cc2:	add    al,0x0
   140051cc4:	int3   
   140051cc5:	outs   dx,BYTE PTR ds:[rsi]
   140051cc6:	add    DWORD PTR [rax],eax
   140051cc8:	(bad)  
   140051cc9:	(bad)  
   140051cca:	(bad)  
   140051ccb:	(bad)  
   140051ccc:	(bad)  
   140051ccd:	outs   dx,BYTE PTR ds:[rsi]
   140051cce:	add    DWORD PTR [rax],eax
   140051cd0:	add    BYTE PTR [rax],al
   140051cd2:	add    BYTE PTR [rax],al
   140051cd4:	adc    DWORD PTR [rcx],esp
   140051cd6:	or     BYTE PTR [rax],al
   140051cd8:	and    DWORD PTR [rbp+rcx*1+0x0],esi
   140051cdc:	sbb    eax,0x19000c64
   140051ce1:	xor    al,0xb
   140051ce3:	add    BYTE PTR [rip+0xffffffffa4e00972],cl        # 0xe4e5265b
   140051ce9:	sub    al,0x3
   140051ceb:	add    BYTE PTR [rax-0xbfffb6b],dl
   140051cf1:	ins    DWORD PTR es:[rdi],dx
   140051cf2:	add    DWORD PTR [rax],eax
   140051cf4:	(bad)  
   140051cf5:	(bad)  
   140051cf6:	(bad)  
   140051cf7:	call   FWORD PTR [rsi]
   140051cf9:	outs   dx,BYTE PTR ds:[rsi]
   140051cfa:	add    DWORD PTR [rax],eax
   140051cfc:	add    BYTE PTR [rax],al
   140051cfe:	add    BYTE PTR [rax],al
   140051d00:	adc    DWORD PTR [rsp+rax*1],edx
   140051d03:	add    BYTE PTR [rsp+rsi*1],dl
   140051d06:	or     DWORD PTR [rax],eax
   140051d08:	(bad)  
   140051d09:	push   rdx
   140051d0a:	add    dh,BYTE PTR [rax-0x5c]
   140051d0d:	sub    al,0x3
   140051d0f:	add    al,al
   140051d11:	xchg   ebp,eax
   140051d12:	add    al,0x0
   140051d14:	(bad)  
   140051d15:	(bad)  
   140051d16:	(bad)  
   140051d17:	call   FWORD PTR [rsi-0x1a]
   140051d1a:	add    eax,DWORD PTR [rax]
   140051d1c:	(bad)  
   140051d1d:	(bad)  
   140051d1e:	(bad)  
   140051d1f:	inc    DWORD PTR [rax]
   140051d21:	add    BYTE PTR [rax],al
   140051d23:	add    bh,bh
   140051d25:	(bad)  
   140051d26:	(bad)  
   140051d27:	inc    DWORD PTR [rax]
   140051d29:	add    BYTE PTR [rax],al
   140051d2b:	add    bh,bh
   140051d2d:	(bad)  
   140051d2e:	(bad)  
   140051d2f:	jmp    FWORD PTR [rdx-0x1a]
   140051d32:	add    eax,DWORD PTR [rax]
   140051d34:	je     0x140051da2
   140051d36:	add    DWORD PTR [rax],eax
   140051d38:	(bad)  
   140051d39:	(bad)  
   140051d3a:	(bad)  
   140051d3b:	call   QWORD PTR [rsi+0x16c]
   140051d41:	add    BYTE PTR [rax],al
   140051d43:	add    BYTE PTR [rax+0x6d],cl
   140051d46:	add    DWORD PTR [rax],eax
   140051d48:	(bad)  
   140051d49:	(bad)  
   140051d4a:	(bad)  
   140051d4b:	call   QWORD PTR [rcx]
   140051d4d:	sbb    al,0x8
   140051d4f:	add    BYTE PTR [rsp+rdx*2],bl
   140051d52:	(bad)  
   140051d53:	add    BYTE PTR [rax],bl
   140051d55:	xor    al,0xc
   140051d57:	add    BYTE PTR [rdx+rsi*2],cl
   140051d5a:	or     al,dh
   140051d5c:	(bad)  
   140051d5d:	loopne 0x140051d63
   140051d5f:	jo     0x140051d05
   140051d61:	sub    al,0x3
   140051d63:	add    al,dh
   140051d65:	xchg   ebp,eax
   140051d66:	add    al,0x0
   140051d68:	(bad)  
   140051d69:	(bad)  
   140051d6a:	(bad)  
   140051d6b:	jmp    FWORD PTR [rbx]
   140051d6d:	out    0x3,al
   140051d6f:	add    bh,bh
   140051d71:	(bad)  
   140051d72:	(bad)  
   140051d73:	inc    DWORD PTR [rax]
   140051d75:	add    BYTE PTR [rax],al
   140051d77:	add    bh,bh
   140051d79:	(bad)  
   140051d7a:	(bad)  
   140051d7b:	inc    DWORD PTR [rax]
   140051d7d:	add    BYTE PTR [rax],al
   140051d7f:	add    bh,bh
   140051d81:	(bad)  
   140051d82:	(bad)  
   140051d83:	push   QWORD PTR [rdi]
   140051d85:	out    0x3,al
   140051d87:	add    BYTE PTR [rax+0x6a],bh
   140051d8a:	add    DWORD PTR [rax],eax
   140051d8c:	(bad)  
   140051d8d:	(bad)  
   140051d8e:	(bad)  
   140051d8f:	(bad)  
   140051d90:	mov    esi,0x16a
   140051d95:	add    BYTE PTR [rax],al
   140051d97:	add    cl,ah
   140051d99:	imul   eax,DWORD PTR [rcx],0x0
   140051d9c:	(bad)  
   140051d9d:	(bad)  
   140051d9e:	(bad)  
   140051d9f:	(bad)  
   140051da0:	jmp    FWORD PTR [rbx+0x1]
   140051da3:	add    BYTE PTR [rax],al
   140051da5:	add    BYTE PTR [rax],al
   140051da7:	add    BYTE PTR [rbx],dl
   140051da9:	ins    BYTE PTR es:[rdi],dx
   140051daa:	add    DWORD PTR [rax],eax
   140051dac:	(bad)  
   140051dad:	(bad)  
   140051dae:	(bad)  
   140051daf:	call   FWORD PTR [rcx]
   140051db1:	xor    eax,0x11c000a
   140051db6:	mov    DWORD PTR [rax],0xe00bf00d
   140051dbc:	or     eax,edx
   140051dbe:	(bad)  
   140051dbf:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143652236
   140051dc6:	add    dl,BYTE PTR [rax+0x7c]
   140051dc9:	mov    eax,DWORD PTR [rbx]
   140051dcb:	add    BYTE PTR [rax],ah
   140051dcd:	xchg   esi,eax
   140051dce:	add    al,0x0
   140051dd0:	and    al,BYTE PTR [rsi]
   140051dd2:	add    BYTE PTR [rax],al
   140051dd4:	(bad)  
   140051dd5:	(bad)  
   140051dd6:	(bad)  
   140051dd7:	push   QWORD PTR [rsi-0x1a]
   140051dda:	add    eax,DWORD PTR [rax]
   140051ddc:	(bad)  
   140051ddd:	(bad)  
   140051dde:	(bad)  
   140051ddf:	inc    DWORD PTR [rax]
   140051de1:	add    BYTE PTR [rax],al
   140051de3:	add    bh,bh
   140051de5:	(bad)  
   140051de6:	(bad)  
   140051de7:	inc    DWORD PTR [rax]
   140051de9:	add    BYTE PTR [rax],al
   140051deb:	add    BYTE PTR [rax],al
   140051ded:	add    BYTE PTR [rax],al
   140051def:	add    BYTE PTR [rdx+0x3e6],al
   140051df5:	add    BYTE PTR [rax],al
   140051df7:	add    BYTE PTR [rsi+0x40003e6],cl
   140051dfd:	add    BYTE PTR [rax],al
   140051dff:	add    BYTE PTR [rdx+0x40003e6],bl
   140051e05:	add    BYTE PTR [rax],al
   140051e07:	add    BYTE PTR [rsi+0x3e6],ah
   140051e0d:	add    BYTE PTR [rax],al
   140051e0f:	add    BYTE PTR [rax],al
   140051e11:	add    BYTE PTR [rax],al
   140051e13:	add    bh,bh
   140051e15:	(bad)  
   140051e16:	(bad)  
   140051e17:	inc    DWORD PTR [rax]
   140051e19:	add    BYTE PTR [rax],al
   140051e1b:	add    BYTE PTR [rax+rax*1],al
   140051e1e:	add    BYTE PTR [rax],al
   140051e20:	mov    dl,0xe6
   140051e22:	add    eax,DWORD PTR [rax]
   140051e24:	or     DWORD PTR [rax],eax
   140051e26:	add    BYTE PTR [rax],al
   140051e28:	mov    esi,0xa0003e6
   140051e2d:	add    BYTE PTR [rax],al
   140051e2f:	add    dl,cl
   140051e31:	out    0x3,al
   140051e33:	add    BYTE PTR [rbx],cl
   140051e35:	add    BYTE PTR [rax],al
   140051e37:	add    dh,dl
   140051e39:	out    0x3,al
   140051e3b:	add    BYTE PTR [rax+rax*1],cl
   140051e3e:	add    BYTE PTR [rax],al
   140051e40:	loop   0x140051e28
   140051e42:	add    eax,DWORD PTR [rax]
   140051e44:	or     eax,0xee000000
   140051e49:	out    0x3,al
   140051e4b:	add    BYTE PTR [rsi],cl
   140051e4d:	add    BYTE PTR [rax],al
   140051e4f:	add    dl,bh
   140051e51:	out    0x3,al
   140051e53:	add    BYTE PTR [rip+0xfffffffffa000000],cl        # 0x13a051e59
   140051e59:	out    0x3,al
   140051e5b:	add    BYTE PTR [rax],dl
   140051e5d:	add    BYTE PTR [rax],al
   140051e5f:	add    BYTE PTR [rsi],al
   140051e61:	out    0x3,eax
   140051e63:	add    BYTE PTR [rax+rax*1],cl
   140051e66:	add    BYTE PTR [rax],al
   140051e68:	cli    
   140051e69:	out    0x3,al
   140051e6b:	add    BYTE PTR [rdx],dl
   140051e6d:	add    BYTE PTR [rax],al
   140051e6f:	add    BYTE PTR [rdx],dl
   140051e71:	out    0x3,eax
   140051e73:	add    BYTE PTR [rbx],cl
   140051e75:	add    BYTE PTR [rax],al
   140051e77:	add    dl,bh
   140051e79:	out    0x3,al
   140051e7b:	add    BYTE PTR [rax+rax*1],dl
   140051e7e:	add    BYTE PTR [rax],al
   140051e80:	(bad)  
   140051e81:	out    0x3,eax
   140051e83:	add    BYTE PTR [rdx],cl
   140051e85:	add    BYTE PTR [rax],al
   140051e87:	add    dl,bh
   140051e89:	out    0x3,al
   140051e8b:	add    BYTE PTR [rsi],dl
   140051e8d:	add    BYTE PTR [rax],al
   140051e8f:	add    BYTE PTR [rdx],ch
   140051e91:	out    0x3,eax
   140051e93:	add    BYTE PTR [rcx],cl
   140051e95:	add    BYTE PTR [rax],al
   140051e97:	add    dl,bh
   140051e99:	out    0x3,al
   140051e9b:	add    BYTE PTR [rax],bl
   140051e9d:	add    BYTE PTR [rax],al
   140051e9f:	add    BYTE PTR [rsi],dh
   140051ea1:	out    0x3,eax
   140051ea3:	add    BYTE PTR [rax+rax*1],al
   140051ea6:	add    BYTE PTR [rax],al
   140051ea8:	cli    
   140051ea9:	out    0x3,al
   140051eab:	add    BYTE PTR [rdx],bl
   140051ead:	add    BYTE PTR [rax],al
   140051eaf:	add    BYTE PTR [rdx-0x19],al
   140051eb2:	add    eax,DWORD PTR [rax]
   140051eb4:	sbb    al,BYTE PTR [rax]
   140051eb6:	add    BYTE PTR [rax],al
   140051eb8:	rex.WRX out 0x3,eax
   140051ebb:	add    BYTE PTR [rdx],bl
   140051ebd:	add    BYTE PTR [rax],al
   140051ebf:	add    BYTE PTR [rdx-0x19],bl
   140051ec2:	add    eax,DWORD PTR [rax]
   140051ec4:	sbb    al,BYTE PTR [rax]
   140051ec6:	add    BYTE PTR [rax],al
   140051ec8:	out    0x3,ax
   140051ecb:	add    BYTE PTR [rsi],bl
   140051ecd:	add    BYTE PTR [rax],al
   140051ecf:	add    BYTE PTR [rdx-0x19],dh
   140051ed2:	add    eax,DWORD PTR [rax]
   140051ed4:	(bad)  
   140051ed5:	add    BYTE PTR [rax],al
   140051ed7:	add    BYTE PTR [rsi-0x19],bh
   140051eda:	add    eax,DWORD PTR [rax]
   140051edc:	and    BYTE PTR [rax],al
   140051ede:	add    BYTE PTR [rax],al
   140051ee0:	mov    ah,bh
   140051ee2:	add    eax,DWORD PTR [rax]
   140051ee4:	and    DWORD PTR [rax],eax
   140051ee6:	add    BYTE PTR [rax],al
   140051ee8:	xchg   esi,eax
   140051ee9:	out    0x3,eax
   140051eeb:	add    BYTE PTR [rcx],ah
   140051eed:	add    BYTE PTR [rax],al
   140051eef:	add    BYTE PTR [rdx+0x200003e7],ah
   140051ef5:	add    BYTE PTR [rax],al
   140051ef7:	add    BYTE PTR [rsi+0x1f0003e7],ch
   140051efd:	add    BYTE PTR [rax],al
   140051eff:	add    BYTE PTR [rdx+0x1e0003e7],bh
   140051f05:	add    BYTE PTR [rax],al
   140051f07:	add    dh,al
   140051f09:	out    0x3,eax
   140051f0b:	add    BYTE PTR [rdx],bl
   140051f0d:	add    BYTE PTR [rax],al
   140051f0f:	add    dl,dl
   140051f11:	out    0x3,eax
   140051f13:	add    BYTE PTR [rdx],bl
   140051f15:	add    BYTE PTR [rax],al
   140051f17:	add    dh,bl
   140051f19:	out    0x3,eax
   140051f1b:	add    BYTE PTR [rdx],bl
   140051f1d:	add    BYTE PTR [rax],al
   140051f1f:	add    dl,ch
   140051f21:	out    0x3,eax
   140051f23:	add    BYTE PTR [rdx],bl
   140051f25:	add    BYTE PTR [rax],al
   140051f27:	add    dh,dh
   140051f29:	out    0x3,eax
   140051f2b:	add    BYTE PTR [rdx],ch
   140051f2d:	add    BYTE PTR [rax],al
   140051f2f:	add    BYTE PTR [rdx],al
   140051f31:	call   0x140301f39
   140051f36:	add    BYTE PTR [rax],al
   140051f38:	(bad)  
   140051f39:	call   0x140301f41
   140051f3e:	add    BYTE PTR [rax],al
   140051f40:	sbb    ch,al
   140051f42:	add    eax,DWORD PTR [rax]
   140051f44:	sub    al,BYTE PTR [rax]
   140051f46:	add    BYTE PTR [rax],al
   140051f48:	es call 0x1401f1f51
   140051f4e:	add    BYTE PTR [rax],al
   140051f50:	xor    ch,al
   140051f52:	add    eax,DWORD PTR [rax]
   140051f54:	sbb    al,BYTE PTR [rax]
   140051f56:	add    BYTE PTR [rax],al
   140051f58:	ds call 0x140351f61
   140051f5e:	add    BYTE PTR [rax],al
   140051f60:	rex.WX call 0x140361f69
   140051f66:	add    BYTE PTR [rax],al
   140051f68:	push   rsi
   140051f69:	call   0x140361f71
   140051f6e:	add    BYTE PTR [rax],al
   140051f70:	(bad)  
   140051f71:	call   0x140351f79
   140051f76:	add    BYTE PTR [rax],al
   140051f78:	outs   dx,BYTE PTR ds:[rsi]
   140051f79:	call   0x1401f1f81
   140051f7e:	add    BYTE PTR [rax],al
   140051f80:	jp     0x140051f6a
   140051f82:	add    eax,DWORD PTR [rax]
   140051f84:	sbb    al,BYTE PTR [rax]
   140051f86:	add    BYTE PTR [rax],al
   140051f88:	xchg   al,ch
   140051f8a:	add    eax,DWORD PTR [rax]
   140051f8c:	sbb    al,BYTE PTR [rax]
   140051f8e:	add    BYTE PTR [rax],al
   140051f90:	xchg   edx,eax
   140051f91:	call   0x140091f99
	...
   140051fa2:	add    BYTE PTR [rax],al
   140051fa4:	(bad)  
   140051fa5:	(bad)  
   140051fa6:	(bad)  
   140051fa7:	inc    DWORD PTR [rax]
   140051fa9:	add    BYTE PTR [rax],al
   140051fab:	add    BYTE PTR [rax+rax*1],al
   140051fae:	add    BYTE PTR [rax],al
   140051fb0:	sahf   
   140051fb1:	call   0x140051fb9
   140051fb6:	add    BYTE PTR [rax],al
   140051fb8:	stos   BYTE PTR es:[rdi],al
   140051fb9:	call   0x140041fc1
   140051fbe:	(bad)  
   140051fbf:	push   QWORD PTR [rsi+0x3c0003e8]
   140051fc5:	(bad)  
   140051fc7:	add    bh,bh
   140051fc9:	(bad)  
   140051fca:	(bad)  
   140051fcb:	dec    DWORD PTR [rdi+0x162]
   140051fd1:	add    BYTE PTR [rax],al
   140051fd3:	add    al,bl
   140051fd5:	movsxd eax,DWORD PTR [rcx]
   140051fd7:	add    BYTE PTR [rax+rax*1],al
   140051fda:	add    BYTE PTR [rax],al
   140051fdc:	out    dx,al
   140051fdd:	movsxd eax,DWORD PTR [rcx]
   140051fdf:	add    BYTE PTR [rip+0xfffffffffa000000],al        # 0x13a051fe5
   140051fe5:	movsxd eax,DWORD PTR [rcx]
   140051fe7:	add    BYTE PTR [rax+rax*1],al
   140051fea:	add    BYTE PTR [rax],al
   140051fec:	frstor [rcx+rax*1+0x0]
   140051ff0:	or     DWORD PTR [rax],eax
   140051ff2:	add    BYTE PTR [rax],al
   140051ff4:	in     al,dx
   140051ff5:	add    DWORD PTR fs:[rax],eax
   140051ff8:	or     al,BYTE PTR [rax]
   140051ffa:	add    BYTE PTR [rax],al
   140051ffc:	add    BYTE PTR [rbp+0x1],ah
   140051fff:	add    BYTE PTR [rbx],cl
   140052001:	add    BYTE PTR [rax],al
   140052003:	add    BYTE PTR [rcx],dl
   140052005:	add    DWORD PTR gs:[rax],eax
   140052008:	or     al,0x0
   14005200a:	add    BYTE PTR [rax],al
   14005200c:	and    eax,0xd000165
   140052011:	add    BYTE PTR [rax],al
   140052013:	add    BYTE PTR [rcx],bh
   140052015:	add    DWORD PTR gs:[rax],eax
   140052018:	(bad)  
   140052019:	add    BYTE PTR [rax],al
   14005201b:	add    BYTE PTR [rbp+riz*2+0x1],cl
   14005201f:	add    BYTE PTR [rax],dl
   140052021:	add    BYTE PTR [rax],al
   140052023:	add    BYTE PTR [rbp+0x65],ch
   140052026:	add    DWORD PTR [rax],eax
   140052028:	adc    al,BYTE PTR [rax]
   14005202a:	add    BYTE PTR [rax],al
   14005202c:	mov    fs,WORD PTR [rbp+0x1]
   14005202f:	add    BYTE PTR [rax+rax*1],dl
   140052032:	add    BYTE PTR [rax],al
   140052034:	scas   eax,DWORD PTR es:[rdi]
   140052035:	add    DWORD PTR gs:[rax],eax
   140052038:	(bad)  
   140052039:	add    BYTE PTR [rax],al
   14005203b:	add    al,dl
   14005203d:	add    DWORD PTR gs:[rax],eax
   140052040:	sbb    BYTE PTR [rax],al
   140052042:	add    BYTE PTR [rax],al
   140052044:	icebp  
   140052045:	add    DWORD PTR gs:[rax],eax
   140052048:	sbb    al,BYTE PTR [rax]
   14005204a:	add    BYTE PTR [rax],al
   14005204c:	(bad)  
   14005204d:	add    WORD PTR [rax],ax
   140052050:	sbb    al,0x0
   140052052:	add    BYTE PTR [rax],al
   140052054:	xor    esp,DWORD PTR [rsi+0x1]
   140052057:	add    BYTE PTR [rdx],bl
   140052059:	add    BYTE PTR [rax],al
   14005205b:	add    BYTE PTR [rsi+0x66],dh
   14005205e:	add    DWORD PTR [rax],eax
   140052060:	(bad)  
   140052061:	add    BYTE PTR [rax],al
   140052063:	add    BYTE PTR [rbp+0x1f000166],al
   140052069:	add    BYTE PTR [rax],al
   14005206b:	add    BYTE PTR [rcx+0x20000166],bl
   140052071:	add    BYTE PTR [rax],al
   140052073:	add    BYTE PTR [rdx+0x21000166],ch
   140052079:	add    BYTE PTR [rax],al
   14005207b:	add    BYTE PTR [rsi+riz*2+0x220001],bh
   140052082:	add    BYTE PTR [rax],al
   140052084:	retf   0x166
   140052087:	add    BYTE PTR [rcx],ah
   140052089:	add    BYTE PTR [rax],al
   14005208b:	add    bl,ch
   14005208d:	add    WORD PTR [rax],ax
   140052090:	and    BYTE PTR [rax],al
   140052092:	add    BYTE PTR [rax],al
   140052094:	or     al,0x67
   140052096:	add    DWORD PTR [rax],eax
   140052098:	(bad)  
   140052099:	add    BYTE PTR [rax],al
   14005209b:	add    BYTE PTR [rip+0x1e000167],ch        # 0x15e052208
   1400520a1:	add    BYTE PTR [rax],al
   1400520a3:	add    BYTE PTR [rsi+0x67],cl
   1400520a6:	add    DWORD PTR [rax],eax
   1400520a8:	sbb    al,BYTE PTR [rax]
   1400520aa:	add    BYTE PTR [rax],al
   1400520ac:	test   BYTE PTR [rdi+0x1],ah
   1400520af:	add    BYTE PTR [rax],ch
   1400520b1:	add    BYTE PTR [rax],al
   1400520b3:	add    BYTE PTR [rax+0x1a000167],dl
   1400520b9:	add    BYTE PTR [rax],al
   1400520bb:	add    BYTE PTR [rip+0x2a000168],bh        # 0x16a052229
   1400520c1:	add    BYTE PTR [rax],al
   1400520c3:	add    BYTE PTR [rax+rbp*2+0x1],cl
   1400520c7:	add    BYTE PTR [rbx],ch
   1400520c9:	add    BYTE PTR [rax],al
   1400520cb:	add    BYTE PTR [rdi+0x68],bl
   1400520ce:	add    DWORD PTR [rax],eax
   1400520d0:	sub    al,0x0
   1400520d2:	add    BYTE PTR [rax],al
   1400520d4:	ins    DWORD PTR es:[rdi],dx
   1400520d5:	push   0x2b0001
   1400520da:	add    BYTE PTR [rax],al
   1400520dc:	(bad)
   1400520e0:	sub    al,BYTE PTR [rax]
   1400520e2:	add    BYTE PTR [rax],al
   1400520e4:	mov    al,0x68
   1400520e6:	add    DWORD PTR [rax],eax
   1400520e8:	sbb    al,BYTE PTR [rax]
   1400520ea:	add    BYTE PTR [rax],al
   1400520ec:	int3   
   1400520ed:	push   0x300001
   1400520f2:	add    BYTE PTR [rax],al
   1400520f4:	fld    TBYTE PTR [rax+0x1]
   1400520f7:	add    BYTE PTR [rcx],dh
   1400520f9:	add    BYTE PTR [rax],al
   1400520fb:	add    ch,ch
   1400520fd:	push   0x320001
   140052102:	add    BYTE PTR [rax],al
   140052104:	sti    
   140052105:	push   0x310001
   14005210a:	add    BYTE PTR [rax],al
   14005210c:	sbb    al,0x69
   14005210e:	add    DWORD PTR [rax],eax
   140052110:	xor    BYTE PTR [rax],al
   140052112:	add    BYTE PTR [rax],al
   140052114:	cmp    eax,0x1a000169
   140052119:	add    BYTE PTR [rax],al
   14005211b:	add    BYTE PTR [rdx+0x69],dh
   14005211e:	add    DWORD PTR [rax],eax
   140052120:	add    BYTE PTR ss:[rax],al
   140052123:	add    BYTE PTR [rsi+0x69],bh
   140052126:	add    DWORD PTR [rax],eax
   140052128:	sbb    al,BYTE PTR [rax]
   14005212a:	add    BYTE PTR [rax],al
   14005212c:	shr    BYTE PTR [rcx+0x1],cl
   14005212f:	add    BYTE PTR [rax+rax*1],al
   140052132:	add    BYTE PTR [rax],al
   140052134:	hlt    
   140052135:	imul   eax,DWORD PTR [rcx],0x0
   14005213b:	add    BYTE PTR [rax],dh
   14005213d:	push   0x1
   14005213f:	add    bh,bh
   140052141:	(bad)  
   140052142:	(bad)  
   140052143:	call   FWORD PTR [rcx]
   140052145:	sbb    DWORD PTR [rdx],eax
   140052147:	add    BYTE PTR [rdi],al
   140052149:	add    DWORD PTR [rcx+0x0],edx
   14005214c:	cmp    al,0xe5
   14005214e:	add    al,BYTE PTR [rax]
   140052150:	jo     0x140052154
   140052152:	add    BYTE PTR [rax],al
   140052154:	sbb    DWORD PTR [rcx],esp
   140052156:	or     al,BYTE PTR [rax]
   140052158:	and    esp,esp
   14005215a:	or     eax,DWORD PTR [rax]
   14005215c:	sbb    eax,0x19000a74
   140052161:	or     DWORD PTR fs:[rax],eax
   140052164:	adc    eax,0x9000834
   140052169:	push   rdx
   14005216a:	add    eax,0x32ca4f0
   14005216f:	add    BYTE PTR [rax-0x6a],dl
   140052172:	add    al,0x0
	...
   14005217c:	add    DWORD PTR [rax],eax
   14005217e:	add    BYTE PTR [rax],al
   140052180:	add    DWORD PTR [rax],eax
   140052182:	add    BYTE PTR [rax],al
   140052184:	mov    BYTE PTR [rcx],ah
   140052186:	add    eax,0x0
	...
   140052193:	add    BYTE PTR [rbx-0x1a],al
   140052196:	add    eax,DWORD PTR [rax]
   140052198:	cmp    BYTE PTR [rax],al
   14005219a:	add    BYTE PTR [rax],al
   14005219c:	xor    BYTE PTR [rcx+0x1],ah
   14005219f:	add    bh,bh
   1400521a1:	(bad)  
   1400521a2:	(bad)  
   1400521a3:	call   QWORD PTR [rcx+riz*2+0x1]
   1400521a7:	add    BYTE PTR [rax],al
   1400521a9:	add    BYTE PTR [rax],al
   1400521ab:	add    dl,al
   1400521ad:	(bad)  
   1400521ae:	add    DWORD PTR [rax],eax
   1400521b0:	(bad)  
   1400521b1:	(bad)  
   1400521b2:	(bad)  
   1400521b3:	inc    DWORD PTR [rbx-0x1a]
   1400521b6:	add    eax,DWORD PTR [rax]
   1400521b8:	add    BYTE PTR [rax],al
   1400521ba:	add    BYTE PTR [rax],al
   1400521bc:	sbb    DWORD PTR [rdx],ecx
   1400521be:	add    al,BYTE PTR [rax]
   1400521c0:	or     dh,BYTE PTR [rdx]
   1400521c2:	(bad)  
   1400521c3:	push   rax
   1400521c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400521c5:	sub    al,0x3
   1400521c7:	add    BYTE PTR [rax-0x6a],dl
   1400521ca:	add    al,0x0
   1400521cc:	adc    DWORD PTR [rsi],edx
   1400521ce:	(bad)  
   1400521cf:	add    BYTE PTR [rsi],cl
   1400521d1:	jb     0x1400521da
   1400521d3:	loopne 0x1400521da
   1400521d5:	jo     0x1400521db
   1400521d7:	(bad)  
   1400521d8:	add    esi,DWORD PTR [rax]
   1400521da:	add    dl,BYTE PTR [rax-0x5c]
   1400521dd:	sub    al,0x3
   1400521df:	add    BYTE PTR [rax-0xfffb6a],al
   1400521e5:	(bad)  
   1400521e6:	(bad)  
   1400521e7:	jmp    rsp
   1400521e9:	call   0x1400421f1
   1400521ee:	(bad)  
   1400521ef:	push   rax
   1400521f1:	call   0x1400621f9
   1400521f6:	add    BYTE PTR [rax],al
   1400521f8:	cld    
   1400521f9:	call   0x140062201
   1400521fe:	add    BYTE PTR [rax],al
   140052200:	or     cl,ch
   140052202:	add    eax,DWORD PTR [rax]
   140052204:	add    DWORD PTR [rax],eax
   140052206:	add    BYTE PTR [rax],al
   140052208:	add    BYTE PTR [rax],al
   14005220a:	add    BYTE PTR [rax],al
   14005220c:	(bad)  
   14005220d:	(bad)  
   14005220e:	(bad)  
   14005220f:	inc    DWORD PTR [rax]
   140052211:	add    BYTE PTR [rax],al
   140052213:	add    BYTE PTR [rcx],al
   140052215:	add    BYTE PTR [rax],al
   140052217:	add    BYTE PTR [rax],al
   140052219:	add    BYTE PTR [rax],al
   14005221b:	add    bh,bh
   14005221d:	(bad)  
   14005221e:	(bad)  
   14005221f:	inc    DWORD PTR [rax]
   140052221:	add    BYTE PTR [rax],al
   140052223:	add    BYTE PTR [rbx],al
   140052225:	add    BYTE PTR [rax],al
   140052227:	add    BYTE PTR [rcx+rbp*8],dl
   14005222a:	add    eax,DWORD PTR [rax]
   14005222c:	add    eax,DWORD PTR [rax]
   14005222e:	add    BYTE PTR [rax],al
   140052230:	and    cl,ch
   140052232:	add    eax,DWORD PTR [rax]
   140052234:	or     DWORD PTR [rax],eax
   140052236:	add    BYTE PTR [rax],al
   140052238:	sub    al,0xe9
   14005223a:	add    eax,DWORD PTR [rax]
   14005223c:	add    DWORD PTR [rax],eax
   14005223e:	add    BYTE PTR [rax],al
   140052240:	cmp    al,0xe9
   140052242:	add    eax,DWORD PTR [rax]
   140052244:	(bad)  
   140052245:	(bad)  
   140052246:	(bad)  
   140052247:	dec    DWORD PTR [rax-0x17]
   14005224a:	add    eax,DWORD PTR [rax]
   14005224c:	add    al,0x5f
   14005224e:	add    DWORD PTR [rax],eax
   140052250:	(bad)  
   140052251:	(bad)  
   140052252:	(bad)  
   140052253:	inc    DWORD PTR [rax+0x5f]
   140052256:	add    DWORD PTR [rax],eax
   140052258:	add    DWORD PTR [rax],eax
   14005225a:	add    BYTE PTR [rax],al
   14005225c:	pop    rcx
   14005225d:	pop    rdi
   14005225e:	add    DWORD PTR [rax],eax
   140052260:	add    eax,DWORD PTR [rax]
   140052262:	add    BYTE PTR [rax],al
   140052264:	retf   
   140052265:	pop    rdi
   140052266:	add    DWORD PTR [rax],eax
   140052268:	or     BYTE PTR [rax],al
   14005226a:	add    BYTE PTR [rax],al
   14005226c:	in     eax,0x5f
   14005226e:	add    DWORD PTR [rax],eax
   140052270:	add    eax,DWORD PTR [rax]
   140052272:	add    BYTE PTR [rax],al
   140052274:	or     eax,0x9000160
   140052279:	add    BYTE PTR [rax],al
   14005227b:	add    BYTE PTR [rcx],bh
   14005227d:	(bad)  
   14005227e:	add    DWORD PTR [rax],eax
   140052280:	add    eax,DWORD PTR [rax]
   140052282:	add    BYTE PTR [rax],al
   140052284:	loope  0x1400522e6
   140052286:	add    DWORD PTR [rax],eax
   140052288:	add    DWORD PTR [rax],eax
   14005228a:	add    BYTE PTR [rax],al
   14005228c:	add    esp,DWORD PTR [rcx+0x1]
   14005228f:	add    bh,bh
   140052291:	(bad)  
   140052292:	(bad)  
   140052293:	call   FWORD PTR [rcx]
   140052295:	or     eax,0x62040001
   14005229a:	add    BYTE PTR [rax],al
   14005229c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005229d:	sub    al,0x3
   14005229f:	add    BYTE PTR [rax+0x496],dh
   1400522a5:	add    BYTE PTR [rax],al
   1400522a7:	add    BYTE PTR [rax],al
   1400522a9:	add    BYTE PTR [rax],al
   1400522ab:	add    BYTE PTR [rcx],al
   1400522ad:	add    BYTE PTR [rax],al
   1400522af:	add    BYTE PTR [rcx],al
   1400522b1:	add    BYTE PTR [rax],al
   1400522b3:	add    BYTE PTR [rax+0x522],bh
	...
   1400522c1:	add    BYTE PTR [rax],al
   1400522c3:	add    dl,al
   1400522c5:	call   0x1403d22cd
   1400522ca:	add    BYTE PTR [rax],al
   1400522cc:	lods   al,BYTE PTR ds:[rsi]
   1400522cd:	pop    rsi
   1400522ce:	add    DWORD PTR [rax],eax
   1400522d0:	(bad)  
   1400522d1:	(bad)  
   1400522d2:	(bad)  
   1400522d3:	dec    ebx
   1400522d5:	pop    rsi
   1400522d6:	add    DWORD PTR [rax],eax
   1400522d8:	add    BYTE PTR [rax],al
   1400522da:	add    BYTE PTR [rax],al
   1400522dc:	in     al,dx
   1400522dd:	pop    rsi
   1400522de:	add    DWORD PTR [rax],eax
   1400522e0:	(bad)  
   1400522e1:	(bad)  
   1400522e2:	(bad)  
   1400522e3:	(bad)  
   1400522e4:	(bad)  
   1400522e5:	pop    rsi
   1400522e6:	add    DWORD PTR [rax],eax
   1400522e8:	add    BYTE PTR [rax],al
   1400522ea:	add    BYTE PTR [rax],al
   1400522ec:	iret   
   1400522ed:	call   0x1400622f5
   1400522f2:	add    BYTE PTR [rax],al
   1400522f4:	(bad)  
   1400522f5:	call   0x1400522fd
   1400522fa:	add    BYTE PTR [rax],al
   1400522fc:	sbb    DWORD PTR [rdx],ecx
   1400522fe:	add    al,BYTE PTR [rax]
   140052300:	or     dh,BYTE PTR [rdx]
   140052302:	(bad)  
   140052303:	push   rax
   140052304:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052305:	sub    al,0x3
   140052307:	add    BYTE PTR [rax+0x11000496],dh
   14005230d:	adc    eax,DWORD PTR [rdx]
   14005230f:	add    BYTE PTR [rdx],cl
   140052311:	push   rdx
   140052312:	(bad)  
   140052313:	xor    BYTE PTR [rsp+rbp*1-0x691ffffd],ah
   14005231a:	add    al,0x0
   14005231c:	(bad)  
   14005231d:	(bad)  
   14005231e:	(bad)  
   14005231f:	dec    DWORD PTR [rdi+0x3e5]
   140052325:	add    BYTE PTR [rax],al
   140052327:	add    BYTE PTR [rbx+0x6c0003e5],bl
   14005232d:	pop    rsi
   14005232e:	add    DWORD PTR [rax],eax
   140052330:	(bad)  
   140052331:	(bad)  
   140052332:	(bad)  
   140052333:	dec    DWORD PTR [rsi+rbx*2+0x10001]
   14005233a:	add    BYTE PTR [rax],al
   14005233c:	xchg   edx,eax
   14005233d:	pop    rsi
   14005233e:	add    DWORD PTR [rax],eax
   140052340:	add    BYTE PTR [rax],al
   140052342:	add    BYTE PTR [rax],al
   140052344:	pushf  
   140052345:	pop    rsi
   140052346:	add    DWORD PTR [rax],eax
   140052348:	(bad)  
   140052349:	(bad)  
   14005234a:	(bad)  
   14005234b:	call   QWORD PTR [rcx]
   14005234d:	or     eax,0x62040001
   140052352:	add    BYTE PTR [rax],al
   140052354:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052355:	sub    al,0x3
   140052357:	add    BYTE PTR [rax],dl
   140052359:	xchg   edi,eax
   14005235a:	add    al,0x0
   14005235c:	(bad)  
   14005235d:	(bad)  
   14005235e:	(bad)  
   14005235f:	jmp    FWORD PTR [rbx+0x3e5]
   140052365:	add    BYTE PTR [rax],al
   140052367:	add    BYTE PTR [rdi+0x100003e5],dh
   14005236d:	add    al,0x4
   14005236f:	add    bh,bh
   140052371:	(bad)  
   140052372:	(bad)  
   140052373:	call   FWORD PTR [rip+0x404]        # 0x14005277d
   140052379:	add    BYTE PTR [rax],al
   14005237b:	add    BYTE PTR [rax+0x4],cl
   14005237e:	add    al,0x0
   140052380:	add    DWORD PTR [rax],eax
   140052382:	add    BYTE PTR [rax],al
   140052384:	rex.WRX add al,0x4
   140052387:	add    bh,bh
   140052389:	(bad)  
   14005238a:	(bad)  
   14005238b:	call   FWORD PTR [rcx]
   14005238d:	and    al,BYTE PTR [rdi]
   14005238f:	add    BYTE PTR [rsp+rsi*1],dl
   140052392:	and    eax,DWORD PTR [rax]
   140052394:	adc    al,0x1
   140052396:	sbb    al,0x0
   140052398:	or     BYTE PTR [rax+0x7],dh
   14005239b:	(bad)  
   14005239c:	(bad)  
   14005239d:	push   rax
   14005239e:	add    BYTE PTR [rax],al
   1400523a0:	cmp    al,0xe5
   1400523a2:	add    al,BYTE PTR [rax]
   1400523a4:	rol    BYTE PTR [rax],1
   1400523a6:	add    BYTE PTR [rax],al
   1400523a8:	adc    DWORD PTR [rdx],edx
   1400523aa:	add    DWORD PTR [rax],eax
   1400523ac:	or     DWORD PTR [rdx+0x0],esp
   1400523af:	add    BYTE PTR [rsp+rbp*1-0x68bffffd],ah
   1400523b6:	add    al,0x0
   1400523b8:	(bad)  
   1400523b9:	(bad)  
   1400523ba:	(bad)  
   1400523bb:	call   QWORD PTR [rcx+rbp*8+0x3]
   1400523bf:	add    bh,bh
   1400523c1:	(bad)  
   1400523c2:	(bad)  
   1400523c3:	jmp    QWORD PTR [rcx+rbp*8+0x3]
   1400523c7:	add    BYTE PTR [rax+0x71],dl
   1400523ca:	add    DWORD PTR [rax],eax
   1400523cc:	(bad)  
   1400523cd:	(bad)  
   1400523ce:	(bad)  
   1400523cf:	call   QWORD PTR [rcx]
   1400523d1:	or     eax,DWORD PTR es:[rax]
   1400523d4:	es and DWORD PTR fs:[rax],eax
   1400523d8:	and    dh,BYTE PTR [rax+riz*1]
   1400523db:	add    BYTE PTR [rsi],dl
   1400523dd:	add    DWORD PTR [rax],ebx
   1400523df:	add    BYTE PTR [rbx],cl
   1400523e1:	lock or eax,esp
   1400523e4:	(bad)  
   1400523e5:	rol    BYTE PTR [rip+0x500470],1        # 0x14055285b
   1400523eb:	add    BYTE PTR [rsp+rbp*1-0x688ffffd],ah
   1400523f2:	add    al,0x0
   1400523f4:	(bad)  
   1400523f5:	(bad)  
   1400523f6:	(bad)  
   1400523f7:	push   QWORD PTR [rcx+rbp*8-0xfffd]
   1400523fe:	(bad)  
   1400523ff:	inc    eax
   140052401:	jmp    0x1b7fd2409
   140052406:	add    DWORD PTR [rax],eax
   140052408:	(bad)  
   140052409:	(bad)  
   14005240a:	(bad)  
   14005240b:	(bad)  
   14005240c:	mov    ebp,0x17b
   140052411:	add    BYTE PTR [rax],al
   140052413:	add    BYTE PTR [rcx+0x7c],ch
   140052416:	add    DWORD PTR [rax],eax
   140052418:	(bad)  
   140052419:	(bad)  
   14005241a:	(bad)  
   14005241b:	inc    DWORD PTR [rcx]
   14005241d:	or     al,BYTE PTR [rax+rax*1]
   140052420:	or     dh,BYTE PTR [rdi+rax*1]
   140052423:	add    BYTE PTR [rdx],cl
   140052425:	xor    al,BYTE PTR [rsi]
   140052427:	jo     0x14005242a
   140052429:	or     al,BYTE PTR [rax+rax*1]
   14005242c:	or     dh,BYTE PTR [rbx+rcx*1]
   14005242f:	add    BYTE PTR [rdx],cl
   140052431:	jb     0x140052439
   140052433:	jo     0x140052436
   140052435:	clts   
   140052437:	add    BYTE PTR [rdi],cl
   140052439:	or     eax,DWORD PTR fs:[rax]
   14005243c:	sysenter 
   14005243e:	or     al,BYTE PTR [rax]
   140052440:	(bad)  
   140052442:	or     esi,DWORD PTR [rax+0x11]
   140052445:	adc    eax,DWORD PTR [rdx]
   140052447:	add    BYTE PTR [rdx],cl
   140052449:	push   rdx
   14005244a:	(bad)  
   14005244b:	xor    BYTE PTR [rsp+rbp*1-0x685ffffd],ah
   140052452:	add    al,0x0
   140052454:	(bad)  
   140052455:	(bad)  
   140052456:	(bad)  
   140052457:	dec    DWORD PTR [rcx+rbp*8+0x3]
   14005245e:	add    BYTE PTR [rax],al
   140052460:	cwde   
   140052461:	jmp    0x140052469
   140052466:	add    BYTE PTR [rax],al
   140052468:	test   al,0xe9
   14005246a:	add    eax,DWORD PTR [rax]
   14005246c:	xchg   esp,eax
   14005246d:	jae    0x140052470
   14005246f:	add    bh,bh
   140052471:	(bad)  
   140052472:	(bad)  
   140052473:	push   QWORD PTR [rbx+rsi*2+0x10001]
   14005247a:	add    BYTE PTR [rax],al
   14005247c:	mov    esi,0x173
   140052481:	add    BYTE PTR [rax],al
   140052483:	add    bh,bl
   140052485:	jae    0x140052488
   140052487:	add    bh,bh
   140052489:	(bad)  
   14005248a:	(bad)  
   14005248b:	call   QWORD PTR [rcx]
   14005248d:	sbb    al,0x6
   14005248f:	add    BYTE PTR [rsp+riz*2],bl
   140052492:	or     al,BYTE PTR [rax]
   140052494:	sbb    BYTE PTR [rcx+rcx*1],dh
   140052497:	add    BYTE PTR [rdx+rdx*2],cl
   14005249a:	or     BYTE PTR [rax-0x5c],dh
   14005249d:	sub    al,0x3
   14005249f:	add    al,dl
   1400524a1:	xchg   edi,eax
   1400524a2:	add    al,0x0
   1400524a4:	(bad)  
   1400524a5:	(bad)  
   1400524a6:	(bad)  
   1400524a7:	push   QWORD PTR [rax-0x17]
   1400524aa:	add    eax,DWORD PTR [rax]
   1400524ac:	add    BYTE PTR [rax],al
   1400524ae:	add    BYTE PTR [rax],al
   1400524b0:	jl     0x14005249b
   1400524b2:	add    eax,DWORD PTR [rax]
   1400524b4:	xor    BYTE PTR [rdx+0x1],0x0
   1400524b8:	(bad)  
   1400524b9:	(bad)  
   1400524ba:	(bad)  
   1400524bb:	jmp    FWORD PTR [rdx+rsi*2+0x1]
   1400524c2:	add    BYTE PTR [rax],al
   1400524c4:	(bad)  
   1400524c5:	jb     0x1400524c8
   1400524c7:	add    BYTE PTR [rcx],al
   1400524c9:	add    BYTE PTR [rax],al
   1400524cb:	add    BYTE PTR [rax+0x73],dl
   1400524ce:	add    DWORD PTR [rax],eax
   1400524d0:	(bad)  
   1400524d1:	(bad)  
   1400524d2:	(bad)  
   1400524d3:	call   QWORD PTR [rcx]
   1400524d5:	and    DWORD PTR [rdx],ecx
   1400524d7:	add    BYTE PTR [rcx],ah
   1400524d9:	xor    al,0x13
   1400524db:	add    BYTE PTR [rip+0xcf00e92],dl        # 0x14cf53373
   1400524e1:	loopne 0x1400524ed
   1400524e3:	ror    BYTE PTR [rax],1
   1400524e5:	rol    BYTE PTR [rsi],0x70
   1400524e8:	add    eax,0xa4500460
   1400524ed:	sub    al,0x3
   1400524ef:	add    BYTE PTR [rax],al
   1400524f1:	cwde   
   1400524f2:	add    al,0x0
   1400524f4:	(bad)  
   1400524f5:	(bad)  
   1400524f6:	(bad)  
   1400524f7:	(bad)  
   1400524f8:	cmp    dl,ch
   1400524fa:	add    eax,DWORD PTR [rax]
   1400524fc:	(bad)  
   1400524fd:	(bad)  
   1400524fe:	(bad)  
   1400524ff:	inc    DWORD PTR [rdx+rbp*8+0x3]
   140052503:	add    BYTE PTR [rcx],al
   140052505:	add    BYTE PTR [rax],al
   140052507:	add    BYTE PTR [rax-0x16],dl
   14005250a:	add    eax,DWORD PTR [rax]
   14005250c:	add    DWORD PTR [rax],eax
   14005250e:	add    BYTE PTR [rax],al
   140052510:	pop    rsp
   140052511:	(bad)  
   140052512:	add    eax,DWORD PTR [rax]
   140052514:	(bad)  
   140052515:	(bad)  
   140052516:	(bad)  
   140052517:	inc    DWORD PTR [rax]
   140052519:	add    BYTE PTR [rax],al
   14005251b:	add    BYTE PTR [rcx],al
   14005251d:	add    BYTE PTR [rax],al
   14005251f:	add    BYTE PTR [rax-0x16],ch
   140052522:	add    eax,DWORD PTR [rax]
   140052524:	add    DWORD PTR [rax],eax
   140052526:	add    BYTE PTR [rax],al
   140052528:	add    BYTE PTR [rax],al
   14005252a:	add    BYTE PTR [rax],al
   14005252c:	(bad)  
   14005252d:	(bad)  
   14005252e:	(bad)  
   14005252f:	inc    DWORD PTR [rax]
   140052531:	add    BYTE PTR [rax],al
   140052533:	add    BYTE PTR [rcx],al
   140052535:	add    BYTE PTR [rax],al
   140052537:	add    BYTE PTR [rdx+rbp*8+0x3],dh
   14005253b:	add    BYTE PTR [rip+0xffffffff80000000],al        # 0xc0052541
   140052541:	(bad)  
   140052542:	add    eax,DWORD PTR [rax]
   140052544:	add    eax,0x8c000000
   140052549:	(bad)  
   14005254a:	add    eax,DWORD PTR [rax]
   14005254c:	add    DWORD PTR [rax],eax
   14005254e:	add    BYTE PTR [rax],al
   140052550:	cwde   
   140052551:	(bad)  
   140052552:	add    eax,DWORD PTR [rax]
   140052554:	add    eax,0xa4000000
   140052559:	(bad)  
   14005255a:	add    eax,DWORD PTR [rax]
   14005255c:	add    DWORD PTR [rax],eax
   14005255e:	add    BYTE PTR [rax],al
   140052560:	mov    al,0xea
   140052562:	add    eax,DWORD PTR [rax]
   140052564:	add    eax,0xbc000000
   140052569:	(bad)  
   14005256a:	add    eax,DWORD PTR [rax]
   14005256c:	add    DWORD PTR [rax],eax
   14005256e:	add    BYTE PTR [rax],al
   140052570:	enter  0x3ea,0x0
   140052574:	(bad)  
   140052575:	(bad)  
   140052576:	(bad)  
   140052577:	inc    DWORD PTR [rax]
   140052579:	add    BYTE PTR [rax],al
   14005257b:	add    bh,bh
   14005257d:	(bad)  
   14005257e:	(bad)  
   14005257f:	inc    DWORD PTR [rax]
   140052581:	add    BYTE PTR [rax],al
   140052583:	add    BYTE PTR [rcx],al
   140052585:	add    BYTE PTR [rax],al
   140052587:	add    ah,dl
   140052589:	(bad)  
   14005258a:	add    eax,DWORD PTR [rax]
   14005258c:	add    DWORD PTR [rax],eax
   14005258e:	add    BYTE PTR [rax],al
   140052590:	add    BYTE PTR [rax],al
   140052592:	add    BYTE PTR [rax],al
   140052594:	(bad)  
   140052595:	(bad)  
   140052596:	(bad)  
   140052597:	inc    DWORD PTR [rax]
   140052599:	add    BYTE PTR [rax],al
   14005259b:	add    BYTE PTR [rcx],al
   14005259d:	add    BYTE PTR [rax],al
   14005259f:	add    al,ah
   1400525a1:	(bad)  
   1400525a2:	add    eax,DWORD PTR [rax]
   1400525a4:	(bad)  
   1400525a5:	(bad)  
   1400525a6:	(bad)  
   1400525a7:	inc    DWORD PTR [rax]
   1400525a9:	add    BYTE PTR [rax],al
   1400525ab:	add    BYTE PTR [rcx],al
   1400525ad:	add    BYTE PTR [rax],al
   1400525af:	add    ah,ch
   1400525b1:	(bad)  
   1400525b2:	add    eax,DWORD PTR [rax]
   1400525b4:	(bad)  
   1400525b5:	(bad)  
   1400525b6:	(bad)  
   1400525b7:	inc    DWORD PTR [rax]
   1400525b9:	add    BYTE PTR [rax],al
   1400525bb:	add    bh,bh
   1400525bd:	(bad)  
   1400525be:	(bad)  
   1400525bf:	inc    DWORD PTR [rax]
   1400525c1:	add    BYTE PTR [rax],al
   1400525c3:	add    bh,bh
   1400525c5:	(bad)  
   1400525c6:	(bad)  
   1400525c7:	(bad)  
   1400525c8:	clc    
   1400525c9:	(bad)  
   1400525ca:	add    eax,DWORD PTR [rax]
   1400525cc:	sar    BYTE PTR [rsi+0x1],1
   1400525cf:	add    bh,bh
   1400525d1:	(bad)  
   1400525d2:	(bad)  
   1400525d3:	(bad)  
   1400525d4:	cmp    DWORD PTR [rdi+0x1],edi
   1400525d7:	add    BYTE PTR [rcx],al
   1400525d9:	add    BYTE PTR [rax],al
   1400525db:	add    BYTE PTR [rcx+0x7f],dl
   1400525de:	add    DWORD PTR [rax],eax
   1400525e0:	add    al,BYTE PTR [rax]
   1400525e2:	add    BYTE PTR [rax],al
   1400525e4:	pop    rsi
   1400525e5:	jg     0x1400525e8
   1400525e7:	add    BYTE PTR [rcx],al
   1400525e9:	add    BYTE PTR [rax],al
   1400525eb:	add    dl,bh
   1400525ed:	jg     0x1400525f0
   1400525ef:	add    BYTE PTR [rdx],dl
   1400525f1:	add    BYTE PTR [rax],al
   1400525f3:	add    BYTE PTR [rcx],bh
   1400525f5:	add    BYTE PTR [rcx],0x0
   1400525f8:	add    DWORD PTR [rax],eax
   1400525fa:	add    BYTE PTR [rax],al
   1400525fc:	mov    DWORD PTR [rax+0x50001],eax
   140052602:	add    BYTE PTR [rax],al
   140052604:	adc    BYTE PTR [rcx+0x10001],al
   14005260a:	add    BYTE PTR [rax],al
   14005260c:	adc    eax,0x5000181
   140052611:	add    BYTE PTR [rax],al
   140052613:	add    BYTE PTR [rbx],ah
   140052615:	add    DWORD PTR [rcx],0x900
   14005261b:	add    BYTE PTR [rbx],ch
   14005261d:	(bad)  
   14005261e:	add    DWORD PTR [rax],eax
   140052620:	add    eax,0x50000000
   140052625:	(bad)  
   140052626:	add    DWORD PTR [rax],eax
   140052628:	add    DWORD PTR [rax],eax
   14005262a:	add    BYTE PTR [rax],al
   14005262c:	push   rdx
   14005262d:	(bad)  
   14005262e:	add    DWORD PTR [rax],eax
   140052630:	or     DWORD PTR [rax],eax
   140052632:	add    BYTE PTR [rax],al
   140052634:	ja     0x1400525b8
   140052636:	add    DWORD PTR [rax],eax
   140052638:	add    eax,0x9c000000
   14005263d:	(bad)  
   14005263e:	add    DWORD PTR [rax],eax
   140052640:	add    DWORD PTR [rax],eax
   140052642:	add    BYTE PTR [rax],al
   140052644:	adc    eax,0x9000183
   140052649:	add    BYTE PTR [rax],al
   14005264b:	add    BYTE PTR [rbx+rax*4+0x1],cl
   14005264f:	add    BYTE PTR [rip+0x71000000],al        # 0x1b1052655
   140052655:	add    DWORD PTR [rcx],0x0
   140052658:	add    DWORD PTR [rax],eax
   14005265a:	add    BYTE PTR [rax],al
   14005265c:	fwait
   14005265d:	add    DWORD PTR [rcx],0x0
   140052660:	add    eax,0xa1000000
   140052665:	add    DWORD PTR [rcx],0x0
   140052668:	add    DWORD PTR [rax],eax
   14005266a:	add    BYTE PTR [rax],al
   14005266c:	stos   DWORD PTR es:[rdi],eax
   14005266d:	add    DWORD PTR [rcx],0x0
   140052670:	(bad)  
   140052671:	(bad)  
   140052672:	(bad)  
   140052673:	call   FWORD PTR [rcx]
   140052675:	and    eax,0x74170007
   14005267a:	and    al,BYTE PTR [rax]
   14005267c:	(bad)  
   14005267d:	xor    al,0x21
   14005267f:	add    BYTE PTR [rdi],dl
   140052681:	add    DWORD PTR [rsi],ebx
   140052683:	add    BYTE PTR [rbx],cl
   140052685:	push   rax
   140052686:	add    BYTE PTR [rax],al
   140052688:	cmp    al,0xe5
   14005268a:	add    al,BYTE PTR [rax]
   14005268c:	loopne 0x14005268e
   14005268e:	add    BYTE PTR [rax],al
   140052690:	adc    DWORD PTR [rcx],ebx
   140052692:	(bad)  
   140052693:	add    BYTE PTR [rcx],bl
   140052695:	or     al,BYTE PTR fs:[rax]
   140052698:	adc    al,0x34
   14005269a:	or     DWORD PTR [rax],eax
   14005269c:	(bad)  
   14005269d:	push   rdx
   14005269e:	add    dh,BYTE PTR [rax-0x5c]
   1400526a1:	sub    al,0x3
   1400526a3:	add    BYTE PTR [rax],dh
   1400526a5:	cwde   
   1400526a6:	add    al,0x0
   1400526a8:	ins    BYTE PTR es:[rdi],dx
   1400526a9:	(bad)  
   1400526aa:	add    al,0x0
   1400526ac:	(bad)  
   1400526ad:	(bad)  
   1400526ae:	(bad)  
   1400526af:	call   QWORD PTR [rcx]
   1400526b1:	sbb    BYTE PTR [rsi],al
   1400526b3:	add    BYTE PTR [rax],bl
   1400526b5:	xor    al,0xc
   1400526b7:	add    BYTE PTR [rbx],cl
   1400526b9:	jb     0x1400526bf
   1400526bb:	jo     0x1400526c0
   1400526bd:	(bad)  
   1400526be:	add    dl,BYTE PTR [rax-0x5c]
   1400526c1:	sub    al,0x3
   1400526c3:	add    BYTE PTR [rax-0x68],ah
   1400526c6:	add    al,0x0
   1400526c8:	(bad)  
   1400526c9:	(bad)  
   1400526ca:	(bad)  
   1400526cb:	jmp    rsp
   1400526cd:	jmp    0x1400426d5
   1400526d2:	(bad)  
   1400526d3:	push   rax
   1400526d5:	jmp    0x1400626dd
   1400526da:	add    BYTE PTR [rax],al
   1400526dc:	cld    
   1400526dd:	jmp    0x1400626e5
   1400526e2:	add    BYTE PTR [rax],al
   1400526e4:	or     dl,ch
   1400526e6:	add    eax,DWORD PTR [rax]
   1400526e8:	add    DWORD PTR [rax],eax
   1400526ea:	add    BYTE PTR [rax],al
   1400526ec:	adc    al,0xea
   1400526ee:	add    eax,DWORD PTR [rax]
   1400526f0:	add    DWORD PTR [rax],eax
   1400526f2:	add    BYTE PTR [rax],al
   1400526f4:	and    dl,ch
   1400526f6:	add    eax,DWORD PTR [rax]
   1400526f8:	(bad)  
   1400526f9:	(bad)  
   1400526fa:	(bad)  
   1400526fb:	inc    DWORD PTR [rax]
   1400526fd:	add    BYTE PTR [rax],al
   1400526ff:	add    bh,bh
   140052701:	(bad)  
   140052702:	(bad)  
   140052703:	jmp    FWORD PTR [rdx+rbp*8]
   140052706:	add    eax,DWORD PTR [rax]
   140052708:	in     al,0x83
   14005270a:	add    DWORD PTR [rax],eax
   14005270c:	(bad)  
   14005270d:	(bad)  
   14005270e:	(bad)  
   14005270f:	call   FWORD PTR [rdi]
   140052711:	test   BYTE PTR [rcx],al
   140052713:	add    BYTE PTR [rcx],al
   140052715:	add    BYTE PTR [rax],al
   140052717:	add    BYTE PTR [rax],dh
   140052719:	test   BYTE PTR [rcx],al
   14005271b:	add    BYTE PTR [rdx],al
   14005271d:	add    BYTE PTR [rax],al
   14005271f:	add    BYTE PTR [rip+0x1000184],bh        # 0x1410528a9
   140052725:	add    BYTE PTR [rax],al
   140052727:	add    BYTE PTR [rax-0x7c],dh
   14005272a:	add    DWORD PTR [rax],eax
   14005272c:	add    al,0x0
   14005272e:	add    BYTE PTR [rax],al
   140052730:	jge    0x1400526b6
   140052732:	add    DWORD PTR [rax],eax
   140052734:	add    DWORD PTR [rax],eax
   140052736:	add    BYTE PTR [rax],al
   140052738:	mov    ah,0x84
   14005273a:	add    DWORD PTR [rax],eax
   14005273c:	(bad)  
   14005273d:	(bad)  
   14005273e:	(bad)  
   14005273f:	call   QWORD PTR [rcx]
   140052741:	adc    eax,0x520c0004
   140052746:	or     BYTE PTR [rax+0x7],dh
   140052749:	(bad)  
   14005274a:	(bad)  
   14005274b:	xor    BYTE PTR [rsp+rbp*1-0x676ffffd],ah
   140052752:	add    al,0x0
   140052754:	(bad)  
   140052755:	(bad)  
   140052756:	(bad)  
   140052757:	inc    DWORD PTR [rbx+rbp*8]
   14005275a:	add    eax,DWORD PTR [rax]
   14005275c:	add    BYTE PTR [rax],al
   14005275e:	add    BYTE PTR [rax],al
   140052760:	cs jmp 0x140052766
   140052763:	add    BYTE PTR [rax],al
   140052765:	add    BYTE PTR [rax],al
   140052767:	add    BYTE PTR [rdx],bh
   140052769:	jmp    0x14005276e
   14005276b:	add    ah,bl
   14005276d:	mov    DWORD PTR [rcx],eax
   14005276f:	add    bh,bh
   140052771:	(bad)  
   140052772:	(bad)  
   140052773:	push   QWORD PTR [rdx-0x76]
   140052776:	add    DWORD PTR [rax],eax
   140052778:	add    BYTE PTR [rax],al
   14005277a:	add    BYTE PTR [rax],al
   14005277c:	mov    BYTE PTR [rdx+0x10001],cl
   140052782:	add    BYTE PTR [rax],al
   140052784:	xchg   ecx,eax
   140052785:	mov    al,BYTE PTR [rcx]
   140052787:	add    bh,bh
   140052789:	(bad)  
   14005278a:	(bad)  
   14005278b:	call   FWORD PTR [rcx]
   14005278d:	xor    eax,0xe427000b
   140052792:	(bad)  
   140052793:	add    BYTE PTR [rbx],ah
   140052795:	je     0x1400527bd
   140052797:	add    BYTE PTR [rdi],bl
   140052799:	fs and eax,0x24341b00
   14005279f:	add    BYTE PTR [rdi],cl
   1400527a1:	add    DWORD PTR [rdx],esp
   1400527a3:	add    BYTE PTR [rax+rdx*2],al
   1400527a6:	add    BYTE PTR [rax],al
   1400527a8:	jl     0x140052735
   1400527aa:	add    eax,DWORD PTR [rax]
   1400527ac:	rcr    BYTE PTR [rax+0x1020004],0x0
   1400527b3:	add    bh,bh
   1400527b5:	(bad)  
   1400527b6:	(bad)  
   1400527b7:	dec    DWORD PTR [rsi-0xfffc15]
   1400527bd:	(bad)  
   1400527be:	(bad)  
   1400527bf:	call   FWORD PTR [rdx-0xfffc15]
   1400527c5:	(bad)  
   1400527c6:	(bad)  
   1400527c7:	jmp    QWORD PTR [rsi-0xfffc15]
   1400527cd:	(bad)  
   1400527ce:	(bad)  
   1400527cf:	push   QWORD PTR [rdx-0xfffc15]
   1400527d5:	(bad)  
   1400527d6:	(bad)  
   1400527d7:	(bad)  
   1400527d8:	mov    esi,0xff0003eb
   1400527dd:	(bad)  
   1400527de:	(bad)  
   1400527df:	dec    edx
   1400527e1:	jmp    0x1400527e6
   1400527e3:	add    bh,bh
   1400527e5:	(bad)  
   1400527e6:	(bad)  
   1400527e7:	call   rsi
   1400527e9:	jmp    0x1400527ee
   1400527eb:	add    bh,bh
   1400527ed:	(bad)  
   1400527ee:	(bad)  
   1400527ef:	jmp    rdx
   1400527f1:	jmp    0x1400527f6
   1400527f3:	add    bh,bh
   1400527f5:	(bad)  
   1400527f6:	(bad)  
   1400527f7:	(bad)  
   1400527f8:	out    dx,al
   1400527f9:	jmp    0x1400527fe
   1400527fb:	add    BYTE PTR [rax-0xfffe7a],cl
   140052801:	(bad)  
   140052802:	(bad)  
   140052803:	(bad)  
   140052804:	fiadd  DWORD PTR [rsi+0x1]
   14005280a:	add    BYTE PTR [rax],al
   14005280c:	jmp    0x140052794
   14005280e:	add    DWORD PTR [rax],eax
   140052810:	(bad)  
   140052811:	(bad)  
   140052812:	(bad)  
   140052813:	inc    DWORD PTR [rbx]
   140052815:	xchg   DWORD PTR [rcx],eax
   140052817:	add    BYTE PTR [rcx],al
   140052819:	add    BYTE PTR [rax],al
   14005281b:	add    BYTE PTR [rdi],cl
   14005281d:	xchg   DWORD PTR [rcx],eax
   14005281f:	add    BYTE PTR [rdx],al
   140052821:	add    BYTE PTR [rax],al
   140052823:	add    BYTE PTR [rax],ah
   140052825:	xchg   DWORD PTR [rcx],eax
   140052827:	add    bh,bh
   140052829:	(bad)  
   14005282a:	(bad)  
   14005282b:	call   QWORD PTR [rcx]
   14005282d:	mov    DWORD PTR [rcx],eax
   14005282f:	add    BYTE PTR [rip+0x1a000000],al        # 0x15a052835
   140052835:	mov    DWORD PTR [rcx],eax
   140052837:	add    BYTE PTR [rsi],al
   140052839:	add    BYTE PTR [rax],al
   14005283b:	add    BYTE PTR [rbx],ch
   14005283d:	mov    DWORD PTR [rcx],eax
   14005283f:	add    bh,bh
   140052841:	(bad)  
   140052842:	(bad)  
   140052843:	call   QWORD PTR [rcx]
   140052845:	adc    al,BYTE PTR [rcx]
   140052847:	add    BYTE PTR [rcx],cl
   140052849:	(bad)  
   14005284a:	add    BYTE PTR [rax],al
   14005284c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005284d:	sub    al,0x3
   14005284f:	add    al,dh
   140052851:	cwde   
   140052852:	add    al,0x0
   140052854:	(bad)  
   140052855:	(bad)  
   140052856:	(bad)  
   140052857:	dec    esp
   140052859:	jmp    0x140042861
   14005285e:	(bad)  
   14005285f:	(bad)  
   140052860:	fsubr  st,st(1)
   140052862:	add    eax,DWORD PTR [rax]
   140052864:	push   rsp
   140052865:	xchg   BYTE PTR [rcx],al
   140052867:	add    bh,bh
   140052869:	(bad)  
   14005286a:	(bad)  
   14005286b:	call   QWORD PTR [rcx]
   14005286d:	and    BYTE PTR [rdx],cl
   14005286f:	add    BYTE PTR [rax],ah
   140052871:	push   rsp
   140052872:	ltr    WORD PTR [rbx]
   140052875:	xor    al,0xe
   140052877:	add    BYTE PTR [rip+0x7f00972],cl        # 0x147f531ef
   14005287d:	loopne 0x140052884
   14005287f:	rol    BYTE PTR [rbx],0x70
   140052882:	add    ah,BYTE PTR [rax-0x5c]
   140052885:	sub    al,0x3
   140052887:	add    BYTE PTR [rax],ah
   140052889:	cdq    
   14005288a:	add    al,0x0
   14005288c:	(bad)  
   14005288d:	(bad)  
   14005288e:	(bad)  
   14005288f:	inc    DWORD PTR [rsi-0x15]
   140052892:	add    eax,DWORD PTR [rax]
   140052894:	(bad)  
   140052895:	(bad)  
   140052896:	(bad)  
   140052897:	call   QWORD PTR [rdx-0x15]
   14005289a:	add    eax,DWORD PTR [rax]
   14005289c:	(bad)  
   14005289d:	(bad)  
   14005289e:	(bad)  
   14005289f:	call   FWORD PTR [rsi-0x15]
   1400528a2:	add    eax,DWORD PTR [rax]
   1400528a4:	(bad)  
   1400528a5:	(bad)  
   1400528a6:	(bad)  
   1400528a7:	jmp    FWORD PTR [rdx-0x15]
   1400528aa:	add    eax,DWORD PTR [rax]
   1400528ac:	(bad)  
   1400528ad:	(bad)  
   1400528ae:	(bad)  
   1400528af:	push   QWORD PTR [rsi-0x15]
   1400528b2:	add    eax,DWORD PTR [rax]
   1400528b4:	(bad)  
   1400528b5:	(bad)  
   1400528b6:	(bad)  
   1400528b7:	inc    DWORD PTR [rdx-0x27fffc15]
   1400528bd:	test   BYTE PTR [rcx],al
   1400528bf:	add    bh,bh
   1400528c1:	(bad)  
   1400528c2:	(bad)  
   1400528c3:	push   QWORD PTR [rdx-0x7b]
   1400528c6:	add    DWORD PTR [rax],eax
   1400528c8:	add    BYTE PTR [rax],al
   1400528ca:	add    BYTE PTR [rax],al
   1400528cc:	jl     0x140052853
   1400528ce:	add    DWORD PTR [rax],eax
   1400528d0:	add    DWORD PTR [rax],eax
   1400528d2:	add    BYTE PTR [rax],al
   1400528d4:	popf   
   1400528d5:	test   DWORD PTR [rcx],eax
   1400528d7:	add    bh,bh
   1400528d9:	(bad)  
   1400528da:	(bad)  
   1400528db:	jmp    rsp
   1400528dd:	test   DWORD PTR [rcx],eax
   1400528df:	add    BYTE PTR [rcx],al
   1400528e1:	add    BYTE PTR [rax],al
   1400528e3:	add    bh,ch
   1400528e5:	test   DWORD PTR [rcx],eax
   1400528e7:	add    bh,bh
   1400528e9:	(bad)  
   1400528ea:	(bad)  
   1400528eb:	call   FWORD PTR [rdx]
   1400528ed:	xchg   BYTE PTR [rcx],al
   1400528ef:	add    BYTE PTR [rcx],al
   1400528f1:	add    BYTE PTR [rax],al
   1400528f3:	add    BYTE PTR [rip+0xffffffffff000186],ah        # 0x13f052a7f
   1400528f9:	(bad)  
   1400528fa:	(bad)  
   1400528fb:	call   QWORD PTR [rcx]
   1400528fd:	and    ecx,DWORD PTR [rdx]
   1400528ff:	add    BYTE PTR [rbx],ah
   140052901:	je     0x140052917
   140052903:	add    BYTE PTR [rdi],bl
   140052905:	adc    eax,DWORD PTR fs:[rax]
   140052908:	sbb    esi,DWORD PTR [rdx+rdx*1]
   14005290b:	add    BYTE PTR [rdi],cl
   14005290d:	ror    BYTE PTR [rax],cl
   14005290f:	lock (bad) 
   140052911:	loopne 0x140052917
   140052913:	push   rax
   140052914:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052915:	sub    al,0x3
   140052917:	add    BYTE PTR [rax-0x67],dl
   14005291a:	add    al,0x0
   14005291c:	(bad)  
   14005291d:	(bad)  
   14005291e:	(bad)  
   14005291f:	push   QWORD PTR [rax-0x14]
   140052922:	add    eax,DWORD PTR [rax]
   140052924:	(bad)  
   140052925:	(bad)  
   140052926:	(bad)  
   140052927:	(bad)  
   140052928:	jl     0x140052916
   14005292a:	add    eax,DWORD PTR [rax]
   14005292c:	add    DWORD PTR [rax],eax
   14005292e:	add    BYTE PTR [rax],al
   140052930:	mov    ah,ch
   140052932:	add    eax,DWORD PTR [rax]
   140052934:	add    DWORD PTR [rax],eax
   140052936:	add    BYTE PTR [rax],al
   140052938:	xchg   esp,eax
   140052939:	in     al,dx
   14005293a:	add    eax,DWORD PTR [rax]
   14005293c:	or     BYTE PTR [rcx+rax*1-0x100],0xff
   140052944:	(bad)  
   140052945:	mov    WORD PTR [rcx],es
   140052947:	add    BYTE PTR [rax],al
   140052949:	add    BYTE PTR [rax],al
   14005294b:	add    ah,bl
   14005294d:	mov    WORD PTR [rcx],es
   14005294f:	add    BYTE PTR [rcx],al
   140052951:	add    BYTE PTR [rax],al
   140052953:	add    BYTE PTR [rbp+0x200018d],ah
   140052959:	add    BYTE PTR [rax],al
   14005295b:	add    BYTE PTR [rbx+0x300018d],dh
   140052961:	add    BYTE PTR [rax],al
   140052963:	add    ah,ah
   140052965:	lea    eax,[rcx]
   140052967:	add    BYTE PTR [rcx],al
   140052969:	add    BYTE PTR [rax],al
   14005296b:	add    dh,ch
   14005296d:	lea    eax,[rcx]
   14005296f:	add    bh,bh
   140052971:	(bad)  
   140052972:	(bad)  
   140052973:	call   QWORD PTR [rcx]
   140052975:	and    BYTE PTR [rax],cl
   140052977:	add    BYTE PTR [rax],ah
   140052979:	je     0x140052987
   14005297b:	add    BYTE PTR [rbx],bl
   14005297d:	or     eax,DWORD PTR fs:[rax]
   140052980:	(bad)  
   140052981:	xor    al,0xa
   140052983:	add    BYTE PTR [rcx],cl
   140052985:	jb     0x140052989
   140052987:	push   rax
   140052988:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052989:	sub    al,0x3
   14005298b:	add    BYTE PTR [rax-0xfffb67],al
   140052991:	(bad)  
   140052992:	(bad)  
   140052993:	call   FWORD PTR [rax-0x14]
   140052996:	add    eax,DWORD PTR [rax]
   140052998:	(bad)  
   140052999:	(bad)  
   14005299a:	(bad)  
   14005299b:	jmp    QWORD PTR [rsp+rbp*8+0x3]
   14005299f:	add    BYTE PTR [rbx+rcx*4+0x1],ch
   1400529a3:	add    bh,bh
   1400529a5:	(bad)  
   1400529a6:	(bad)  
   1400529a7:	(bad)  
   1400529a8:	mov    eax,0x18b
   1400529ad:	add    BYTE PTR [rax],al
   1400529af:	add    dh,al
   1400529b1:	mov    eax,DWORD PTR [rcx]
   1400529b3:	add    BYTE PTR [rcx],al
   1400529b5:	add    BYTE PTR [rax],al
   1400529b7:	add    BYTE PTR [rbp-0x74],bl
   1400529ba:	add    DWORD PTR [rax],eax
   1400529bc:	(bad)  
   1400529bd:	(bad)  
   1400529be:	(bad)  
   1400529bf:	call   FWORD PTR [rcx]
   1400529c1:	or     DWORD PTR cs:[rax],eax
   1400529c4:	adc    eax,DWORD PTR [rcx]
   1400529c6:	cmp    BYTE PTR [rax],al
   1400529c8:	or     al,0xf0
   1400529ca:	or     ah,al
   1400529cc:	or     al,dl
   1400529ce:	(bad)  
   1400529cf:	rol    BYTE PTR [rax+rsi*2],0x3
   1400529d3:	(bad)  
   1400529d4:	add    dh,BYTE PTR [rax]
   1400529d6:	add    BYTE PTR [rax],al
   1400529d8:	jl     0x140052965
   1400529da:	add    eax,DWORD PTR [rax]
   1400529dc:	mov    al,0x99
   1400529de:	add    al,0x0
   1400529e0:	mov    bl,0x1
   1400529e2:	add    BYTE PTR [rax],al
   1400529e4:	(bad)  
   1400529e5:	(bad)  
   1400529e6:	(bad)  
   1400529e7:	(bad)  
   1400529e8:	cli    
   1400529e9:	jmp    0x1400529ee
   1400529eb:	add    BYTE PTR [rax],al
   1400529ed:	add    BYTE PTR [rax],al
   1400529ef:	add    BYTE PTR [rsi],al
   1400529f1:	in     al,dx
   1400529f2:	add    eax,DWORD PTR [rax]
   1400529f4:	(bad)  
   1400529f5:	(bad)  
   1400529f6:	(bad)  
   1400529f7:	call   QWORD PTR [rsi]
   1400529f9:	in     al,dx
   1400529fa:	add    eax,DWORD PTR [rax]
   1400529fc:	add    al,BYTE PTR [rax]
   1400529fe:	add    BYTE PTR [rax],al
   140052a00:	add    BYTE PTR [rax],al
   140052a02:	add    BYTE PTR [rax],al
   140052a04:	add    al,BYTE PTR [rax]
   140052a06:	add    BYTE PTR [rax],al
   140052a08:	add    BYTE PTR [rax],al
   140052a0a:	add    BYTE PTR [rax],al
   140052a0c:	add    eax,DWORD PTR [rax]
   140052a0e:	add    BYTE PTR [rax],al
   140052a10:	add    eax,DWORD PTR [rax]
   140052a12:	add    BYTE PTR [rax],al
   140052a14:	add    al,0x0
   140052a16:	add    BYTE PTR [rax],al
   140052a18:	add    DWORD PTR [rax],eax
   140052a1a:	add    BYTE PTR [rax],al
   140052a1c:	and    BYTE PTR [rdx],ch
   140052a1e:	add    eax,0x800
   140052a23:	add    BYTE PTR [rax+0x680005a5],ch
   140052a29:	add    BYTE PTR [rax],al
   140052a2b:	add    BYTE PTR [rdx],ah
   140052a2d:	in     al,dx
   140052a2e:	add    eax,DWORD PTR [rax]
   140052a30:	push   0x14000000
   140052a35:	mov    es,WORD PTR [rcx]
   140052a37:	add    bh,bh
   140052a39:	(bad)  
   140052a3a:	(bad)  
   140052a3b:	call   QWORD PTR [rdx]
   140052a3d:	pop    QWORD PTR [rcx]
   140052a3f:	add    BYTE PTR [rax],al
   140052a41:	add    BYTE PTR [rax],al
   140052a43:	add    BYTE PTR [rdx],dh
   140052a45:	pop    QWORD PTR [rcx]
   140052a47:	add    BYTE PTR [rcx],al
   140052a49:	add    BYTE PTR [rax],al
   140052a4b:	add    BYTE PTR [rdx-0x71],dh
   140052a4e:	add    DWORD PTR [rax],eax
   140052a50:	add    eax,DWORD PTR [rax]
   140052a52:	add    BYTE PTR [rax],al
   140052a54:	mov    bl,0x8f
   140052a56:	add    DWORD PTR [rax],eax
   140052a58:	add    al,BYTE PTR [rax]
   140052a5a:	add    BYTE PTR [rax],al
   140052a5c:	mov    ecx,0xff00018f
   140052a61:	(bad)  
   140052a62:	(bad)  
   140052a63:	jmp    QWORD PTR [rdx]
   140052a65:	in     al,dx
   140052a66:	add    eax,DWORD PTR [rax]
   140052a68:	add    BYTE PTR [rax],al
   140052a6a:	add    BYTE PTR [rax],al
   140052a6c:	(bad)  
   140052a6d:	in     al,dx
   140052a6e:	add    eax,DWORD PTR [rax]
   140052a70:	add    al,0x0
   140052a72:	add    BYTE PTR [rax],al
   140052a74:	rex.WX in al,dx
   140052a76:	add    eax,DWORD PTR [rax]
   140052a78:	add    BYTE PTR [rax],al
   140052a7a:	add    BYTE PTR [rax],al
   140052a7c:	sbb    DWORD PTR [rdx],ecx
   140052a7e:	add    al,BYTE PTR [rax]
   140052a80:	or     dl,BYTE PTR [rdx+0x2ca45006]
   140052a86:	add    eax,DWORD PTR [rax]
   140052a88:	mov    al,0x99
   140052a8a:	add    al,0x0
   140052a8c:	adc    DWORD PTR [rax],ebx
   140052a8e:	add    al,0x0
   140052a90:	sbb    BYTE PTR [rdx+rcx*1],dh
   140052a93:	add    BYTE PTR [rdx+rdx*2],cl
   140052a96:	or     BYTE PTR [rax-0x5c],dh
   140052a99:	sub    al,0x3
   140052a9b:	add    al,ah
   140052a9d:	cdq    
   140052a9e:	add    al,0x0
   140052aa0:	adc    al,0x97
   140052aa2:	add    DWORD PTR [rax],eax
   140052aa4:	(bad)  
   140052aa5:	(bad)  
   140052aa6:	(bad)  
   140052aa7:	(bad)  
   140052aa8:	cmp    DWORD PTR [rdi+0x1],edx
   140052aae:	add    BYTE PTR [rax],al
   140052ab0:	gs xchg edi,eax
   140052ab2:	add    DWORD PTR [rax],eax
   140052ab4:	(bad)  
   140052ab5:	(bad)  
   140052ab6:	(bad)  
   140052ab7:	call   FWORD PTR [rcx]
   140052ab9:	and    BYTE PTR [rax],cl
   140052abb:	add    BYTE PTR [rdx],dl
   140052abd:	xchg   edx,eax
   140052abe:	or     esi,eax
   140052ac0:	or     eax,esp
   140052ac2:	(bad)  
   140052ac3:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143652f3a
   140052aca:	add    dl,BYTE PTR [rax+0x3c]
   140052acd:	in     eax,0x2
   140052acf:	add    BYTE PTR [rax+0x0],al
   140052ad2:	add    BYTE PTR [rax],al
   140052ad4:	add    DWORD PTR [rbx],ebx
   140052ad6:	or     al,BYTE PTR [rax]
   140052ad8:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140052adc:	sbb    edx,DWORD PTR [rsi+rcx*1+0x0]
   140052ae0:	sbb    esi,DWORD PTR [rsp+rcx*1]
   140052ae3:	add    BYTE PTR [rbx],bl
   140052ae5:	jb     0x140052afe
   140052ae7:	lock adc eax,0x17013e0
   140052aed:	(bad)  
   140052aee:	add    DWORD PTR [rax],eax
   140052af0:	(bad)  
   140052af1:	movabs ds:0x3425000936190000,al
   140052afa:	rex.RXB add BYTE PTR [r8],r11b
   140052afd:	add    DWORD PTR [rax+0x0],eax
   140052b00:	or     dh,al
   140052b02:	or     al,al
   140052b04:	(bad)  
   140052b05:	jo     0x140052b0c
   140052b07:	(bad)  
   140052b08:	add    al,0x50
   140052b0a:	add    BYTE PTR [rax],al
   140052b0c:	jl     0x140052a99
   140052b0e:	add    eax,DWORD PTR [rax]
   140052b10:	adc    BYTE PTR [rdx+0x1f20004],bl
   140052b16:	add    BYTE PTR [rax],al
   140052b18:	(bad)  
   140052b19:	(bad)  
   140052b1a:	(bad)  
   140052b1b:	jmp    QWORD PTR [rax-0xfffc14]
   140052b21:	(bad)  
   140052b22:	(bad)  
   140052b23:	jmp    FWORD PTR [rsp+rbp*8-0x6cc3fffd]
   140052b2a:	add    DWORD PTR [rax],eax
   140052b2c:	(bad)  
   140052b2d:	(bad)  
   140052b2e:	(bad)  
   140052b2f:	dec    ebp
   140052b31:	xchg   ebx,eax
   140052b32:	add    DWORD PTR [rax],eax
   140052b34:	add    BYTE PTR [rax],al
   140052b36:	add    BYTE PTR [rax],al
   140052b38:	in     eax,dx
   140052b39:	xchg   ebx,eax
   140052b3a:	add    DWORD PTR [rax],eax
   140052b3c:	(bad)  
   140052b3d:	(bad)  
   140052b3e:	(bad)  
   140052b3f:	(bad)  
   140052b40:	(bad)  
   140052b41:	xchg   esp,eax
   140052b42:	add    DWORD PTR [rax],eax
   140052b44:	add    DWORD PTR [rax],eax
   140052b46:	add    BYTE PTR [rax],al
   140052b48:	retf   
   140052b49:	xchg   esi,eax
   140052b4a:	add    DWORD PTR [rax],eax
   140052b4c:	(bad)  
   140052b4d:	(bad)  
   140052b4e:	(bad)  
   140052b4f:	inc    DWORD PTR [rcx]
   140052b51:	(bad)  
   140052b52:	or     al,BYTE PTR [rax]
   140052b54:	(bad)  
   140052b55:	push   rsp
   140052b56:	or     eax,0xc341600
   140052b5b:	add    BYTE PTR [rsi],dl
   140052b5d:	xor    dl,BYTE PTR [rdx]
   140052b5f:	loopne 0x140052b71
   140052b61:	ror    BYTE PTR [rsi],1
   140052b63:	ror    BYTE PTR [rax+rsi*2],0xb
   140052b67:	(bad)  
   140052b68:	adc    DWORD PTR [rdi],ebx
   140052b6a:	or     al,BYTE PTR [rax]
   140052b6c:	(bad)  
   140052b6d:	push   rsp
   140052b6e:	adc    eax,DWORD PTR [rax]
   140052b70:	sbb    esi,DWORD PTR [rdx+rdx*1]
   140052b73:	add    BYTE PTR [rdi],cl
   140052b75:	xchg   edx,eax
   140052b76:	or     esi,eax
   140052b78:	or     eax,esp
   140052b7a:	(bad)  
   140052b7b:	rol    BYTE PTR [rip+0xffffffffa4600470],0x2c        # 0xe4652ff2
   140052b82:	add    eax,DWORD PTR [rax]
   140052b84:	rex (bad) 
   140052b86:	add    al,0x0
   140052b88:	(bad)  
   140052b89:	(bad)  
   140052b8a:	(bad)  
   140052b8b:	(bad)  
   140052b8c:	mov    edx,0xc40003ed
   140052b91:	cdq    
   140052b92:	add    DWORD PTR [rax],eax
   140052b94:	(bad)  
   140052b95:	(bad)  
   140052b96:	(bad)  
   140052b97:	inc    DWORD PTR [rdi]
   140052b99:	fwait
   140052b9a:	add    DWORD PTR [rax],eax
   140052b9c:	add    BYTE PTR [rax],al
   140052b9e:	add    BYTE PTR [rax],al
   140052ba0:	sub    al,0x9b
   140052ba2:	add    DWORD PTR [rax],eax
   140052ba4:	(bad)  
   140052ba5:	(bad)  
   140052ba6:	(bad)  
   140052ba7:	call   QWORD PTR [rcx]
   140052ba9:	adc    eax,DWORD PTR [rdx]
   140052bab:	add    BYTE PTR [rdx],cl
   140052bad:	push   rdx
   140052bae:	(bad)  
   140052baf:	xor    BYTE PTR [rsp+rbp*1-0x658ffffd],ah
   140052bb6:	add    al,0x0
   140052bb8:	(bad)  
   140052bb9:	(bad)  
   140052bba:	(bad)  
   140052bbb:	jmp    QWORD PTR [rcx-0x13]
   140052bbe:	add    eax,DWORD PTR [rax]
   140052bc0:	add    BYTE PTR [rax],al
   140052bc2:	add    BYTE PTR [rax],al
   140052bc4:	jno    0x140052bb3
   140052bc6:	add    eax,DWORD PTR [rax]
   140052bc8:	add    DWORD PTR [rax],eax
   140052bca:	add    BYTE PTR [rax],al
   140052bcc:	test   ch,ch
   140052bce:	add    eax,DWORD PTR [rax]
   140052bd0:	add    al,BYTE PTR [rax]
   140052bd2:	add    BYTE PTR [rax],al
   140052bd4:	xchg   edi,eax
   140052bd5:	in     eax,dx
   140052bd6:	add    eax,DWORD PTR [rax]
   140052bd8:	add    BYTE PTR [rax],al
   140052bda:	add    BYTE PTR [rax],al
   140052bdc:	stos   BYTE PTR es:[rdi],al
   140052bdd:	in     eax,dx
   140052bde:	add    eax,DWORD PTR [rax]
   140052be0:	pop    rsp
   140052be1:	cdq    
   140052be2:	add    DWORD PTR [rax],eax
   140052be4:	(bad)  
   140052be5:	(bad)  
   140052be6:	(bad)  
   140052be7:	(bad)  
   140052be8:	jl     0x140052b83
   140052bea:	add    DWORD PTR [rax],eax
   140052bec:	add    al,BYTE PTR [rax]
   140052bee:	add    BYTE PTR [rax],al
   140052bf0:	mov    DWORD PTR [rcx+0x10001],ebx
   140052bf6:	add    BYTE PTR [rax],al
   140052bf8:	xchg   esi,eax
   140052bf9:	cdq    
   140052bfa:	add    DWORD PTR [rax],eax
   140052bfc:	add    BYTE PTR [rax],al
   140052bfe:	add    BYTE PTR [rax],al
   140052c00:	mov    dh,0x99
   140052c02:	add    DWORD PTR [rax],eax
   140052c04:	(bad)  
   140052c05:	(bad)  
   140052c06:	(bad)  
   140052c07:	call   QWORD PTR [rcx]
   140052c09:	(bad)  
   140052c0a:	add    al,0x0
   140052c0c:	(bad)  
   140052c0d:	xor    al,0x5
   140052c0f:	add    BYTE PTR [rdx],cl
   140052c11:	adc    al,BYTE PTR [rsi]
   140052c13:	jo     0x140052bb9
   140052c15:	sub    al,0x3
   140052c17:	add    BYTE PTR [rax-0xfffb66],ah
   140052c1d:	(bad)  
   140052c1e:	(bad)  
   140052c1f:	(bad)  
   140052c20:	mov    eax,0x3ec
   140052c25:	add    BYTE PTR [rax],al
   140052c27:	add    ah,al
   140052c29:	in     al,dx
   140052c2a:	add    eax,DWORD PTR [rax]
   140052c2c:	(bad)  
   140052c2d:	(bad)  
   140052c2e:	(bad)  
   140052c2f:	call   rsp
   140052c31:	in     al,dx
   140052c32:	add    eax,DWORD PTR [rax]
   140052c34:	add    al,BYTE PTR [rax]
   140052c36:	add    BYTE PTR [rax],al
   140052c38:	in     al,0xec
   140052c3a:	add    eax,DWORD PTR [rax]
   140052c3c:	add    eax,DWORD PTR [rax]
   140052c3e:	add    BYTE PTR [rax],al
   140052c40:	lock in al,dx
   140052c42:	add    eax,DWORD PTR [rax]
   140052c44:	add    al,BYTE PTR [rax]
   140052c46:	add    BYTE PTR [rax],al
   140052c48:	add    ch,ch
   140052c4a:	add    eax,DWORD PTR [rax]
   140052c4c:	add    al,BYTE PTR [rax]
   140052c4e:	add    BYTE PTR [rax],al
   140052c50:	adc    ch,ch
   140052c52:	add    eax,DWORD PTR [rax]
   140052c54:	(bad)  
   140052c55:	add    BYTE PTR [rax],al
   140052c57:	add    BYTE PTR [rbx],ah
   140052c59:	in     eax,dx
   140052c5a:	add    eax,DWORD PTR [rax]
   140052c5c:	(bad)  
   140052c5d:	add    BYTE PTR [rax],al
   140052c5f:	add    BYTE PTR [rdi],ch
   140052c61:	in     eax,dx
   140052c62:	add    eax,DWORD PTR [rax]
   140052c64:	or     BYTE PTR [rax],al
   140052c66:	add    BYTE PTR [rax],al
   140052c68:	rex.X in eax,dx
   140052c6a:	add    eax,DWORD PTR [rax]
   140052c6c:	or     BYTE PTR [rax],al
   140052c6e:	add    BYTE PTR [rax],al
   140052c70:	rex.WRX in eax,dx
   140052c72:	add    eax,DWORD PTR [rax]
   140052c74:	xor    BYTE PTR [rax-0xffff],bl
   140052c7a:	(bad)  
   140052c7b:	push   QWORD PTR [rcx-0x68]
   140052c7e:	add    DWORD PTR [rax],eax
   140052c80:	add    BYTE PTR [rax],al
   140052c82:	add    BYTE PTR [rax],al
   140052c84:	(bad)  
   140052c85:	cwde   
   140052c86:	add    DWORD PTR [rax],eax
   140052c88:	add    DWORD PTR [rax],eax
   140052c8a:	add    BYTE PTR [rax],al
   140052c8c:	stos   BYTE PTR es:[rdi],al
   140052c8d:	cwde   
   140052c8e:	add    DWORD PTR [rax],eax
   140052c90:	add    al,BYTE PTR [rax]
   140052c92:	add    BYTE PTR [rax],al
   140052c94:	rcr    BYTE PTR [rax+0x30001],1
   140052c9a:	add    BYTE PTR [rax],al
   140052c9c:	fcomp  DWORD PTR [rax+0x40001]
   140052ca2:	add    BYTE PTR [rax],al
   140052ca4:	repnz cwde 
   140052ca6:	add    DWORD PTR [rax],eax
   140052ca8:	add    eax,0xff000000
   140052cad:	cwde   
   140052cae:	add    DWORD PTR [rax],eax
   140052cb0:	(bad)  
   140052cb1:	add    BYTE PTR [rax],al
   140052cb3:	add    BYTE PTR [rdx],dl
   140052cb5:	cdq    
   140052cb6:	add    DWORD PTR [rax],eax
   140052cb8:	(bad)  
   140052cb9:	add    BYTE PTR [rax],al
   140052cbb:	add    BYTE PTR [rdi],bl
   140052cbd:	cdq    
   140052cbe:	add    DWORD PTR [rax],eax
   140052cc0:	or     BYTE PTR [rax],al
   140052cc2:	add    BYTE PTR [rax],al
   140052cc4:	xor    bl,BYTE PTR [rcx+0x90001]
   140052cca:	add    BYTE PTR [rax],al
   140052ccc:	cmp    BYTE PTR [rcx+0xa0001],bl
   140052cd2:	add    BYTE PTR [rax],al
   140052cd4:	rex.WR cqo 
   140052cd6:	add    DWORD PTR [rax],eax
   140052cd8:	(bad)  
   140052cd9:	(bad)  
   140052cda:	(bad)  
   140052cdb:	call   FWORD PTR [rcx]
   140052cdd:	cs (bad) 
   140052cdf:	add    BYTE PTR [rsp+riz*2],bl
   140052ce2:	push   rbx
   140052ce3:	add    BYTE PTR [rax],bl
   140052ce5:	xor    al,0x52
   140052ce7:	add    BYTE PTR [rbx],cl
   140052ce9:	add    DWORD PTR [rsi+0x0],ecx
   140052cec:	add    al,0x70
   140052cee:	add    BYTE PTR [rax],al
   140052cf0:	jl     0x140052c7d
   140052cf2:	add    eax,DWORD PTR [rax]
   140052cf4:	rcr    BYTE PTR [rdx+0x2620004],1
   140052cfa:	add    BYTE PTR [rax],al
   140052cfc:	(bad)  
   140052cfd:	(bad)  
   140052cfe:	(bad)  
   140052cff:	(bad)  
   140052d00:	fsub   st(5),st
   140052d02:	add    eax,DWORD PTR [rax]
   140052d04:	(bad)  
   140052d05:	(bad)  
   140052d06:	(bad)  
   140052d07:	(bad)  
   140052d08:	call   0x1100530fa
   140052d0d:	sahf   
   140052d0e:	add    DWORD PTR [rax],eax
   140052d10:	(bad)  
   140052d11:	(bad)  
   140052d12:	(bad)  
   140052d13:	jmp    FWORD PTR [rbx]
   140052d15:	lahf   
   140052d16:	add    DWORD PTR [rax],eax
   140052d18:	add    BYTE PTR [rax],al
   140052d1a:	add    BYTE PTR [rax],al
   140052d1c:	xor    eax,0x100019f
   140052d21:	add    BYTE PTR [rax],al
   140052d23:	add    ah,al
   140052d25:	lahf   
   140052d26:	add    DWORD PTR [rax],eax
   140052d28:	(bad)  
   140052d29:	(bad)  
   140052d2a:	(bad)  
   140052d2b:	inc    DWORD PTR [rcx]
   140052d2d:	sbb    eax,0x741d000c
   140052d32:	or     eax,DWORD PTR [rax]
   140052d34:	sbb    eax,0x1d000a64
   140052d39:	push   rsp
   140052d3a:	or     DWORD PTR [rax],eax
   140052d3c:	sbb    eax,0x1d000834
   140052d41:	xor    bl,BYTE PTR [rcx]
   140052d43:	lock (bad) 
   140052d45:	loopne 0x140052d5c
   140052d47:	rcl    BYTE PTR [rcx],0x1b
   140052d4a:	or     BYTE PTR [rax],al
   140052d4c:	sbb    edx,DWORD PTR [rax+rdx*1+0x0]
   140052d50:	(bad)  
   140052d51:	xor    al,0xf
   140052d53:	add    BYTE PTR [rbx],cl
   140052d55:	xchg   edx,eax
   140052d56:	(bad)  
   140052d57:	loopne 0x140052d5e
   140052d59:	jo     0x140052d5f
   140052d5b:	(bad)  
   140052d5c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052d5d:	sub    al,0x3
   140052d5f:	add    BYTE PTR [rax],al
   140052d61:	fwait
   140052d62:	add    al,0x0
   140052d64:	(bad)  
   140052d65:	(bad)  
   140052d66:	(bad)  
   140052d67:	call   QWORD PTR [rdi+rbp*8]
   140052d6a:	add    eax,DWORD PTR [rax]
   140052d6c:	shl    BYTE PTR [rcx-0xffff],1
   140052d72:	(bad)  
   140052d73:	(bad)  
   140052d74:	jns    0x140052d18
   140052d76:	add    DWORD PTR [rax],eax
   140052d78:	add    BYTE PTR [rax],al
   140052d7a:	add    BYTE PTR [rax],al
   140052d7c:	cdq    
   140052d7d:	movabs ds:0x1811ffffffff0001,al
   140052d86:	add    al,0x0
   140052d88:	sbb    BYTE PTR [rdx+rcx*1],dh
   140052d8b:	add    BYTE PTR [rdx+rdx*2],cl
   140052d8e:	or     BYTE PTR [rax-0x5c],dh
   140052d91:	sub    al,0x3
   140052d93:	add    BYTE PTR [rax],dh
   140052d95:	fwait
   140052d96:	add    al,0x0
   140052d98:	(bad)  
   140052d99:	(bad)  
   140052d9a:	(bad)  
   140052d9b:	inc    DWORD PTR [rdx+0x3ee]
   140052da1:	add    BYTE PTR [rax],al
   140052da3:	add    BYTE PTR [rdx+0x10003ee],dl
   140052da9:	add    BYTE PTR [rax],al
   140052dab:	add    BYTE PTR [rbp+0x20003ee],ah
   140052db1:	add    BYTE PTR [rax],al
   140052db3:	add    BYTE PTR [rax+0x440003ee],bh
   140052db9:	movabs eax,ds:0xa169ffffffff0001
   140052dc2:	add    DWORD PTR [rax],eax
   140052dc4:	add    al,BYTE PTR [rax]
   140052dc6:	add    BYTE PTR [rax],al
   140052dc8:	movabs eax,ds:0xae000000010001a1
   140052dd1:	movabs eax,ds:0xa1bb000000000001
   140052dda:	add    DWORD PTR [rax],eax
   140052ddc:	(bad)  
   140052ddd:	(bad)  
   140052dde:	(bad)  
   140052ddf:	call   QWORD PTR [rcx]
   140052de1:	adc    DWORD PTR [rcx],eax
   140052de3:	add    BYTE PTR [rcx],cl
   140052de5:	and    al,BYTE PTR [rax]
   140052de7:	add    BYTE PTR [rsp+rbp*1-0x649ffffd],ah
   140052dee:	add    al,0x0
   140052df0:	(bad)  
   140052df1:	(bad)  
   140052df2:	(bad)  
   140052df3:	(bad)  
   140052df4:	clc    
   140052df5:	in     eax,dx
   140052df6:	add    eax,DWORD PTR [rax]
   140052df8:	add    BYTE PTR [rax],al
   140052dfa:	add    BYTE PTR [rax],al
   140052dfc:	add    al,0xee
   140052dfe:	add    eax,DWORD PTR [rax]
   140052e00:	(bad)  
   140052e01:	(bad)  
   140052e02:	(bad)  
   140052e03:	call   QWORD PTR [rsi+rbp*8]
   140052e06:	add    eax,DWORD PTR [rax]
   140052e08:	add    al,BYTE PTR [rax]
   140052e0a:	add    BYTE PTR [rax],al
   140052e0c:	and    al,0xee
   140052e0e:	add    eax,DWORD PTR [rax]
   140052e10:	add    eax,DWORD PTR [rax]
   140052e12:	add    BYTE PTR [rax],al
   140052e14:	xor    dh,ch
   140052e16:	add    eax,DWORD PTR [rax]
   140052e18:	add    al,BYTE PTR [rax]
   140052e1a:	add    BYTE PTR [rax],al
   140052e1c:	out    dx,al
   140052e1e:	add    eax,DWORD PTR [rax]
   140052e20:	add    eax,0x53000000
   140052e25:	out    dx,al
   140052e26:	add    eax,DWORD PTR [rax]
   140052e28:	(bad)  
   140052e29:	add    BYTE PTR [rax],al
   140052e2b:	add    BYTE PTR [rdi-0x12],bl
   140052e2e:	add    eax,DWORD PTR [rax]
   140052e30:	add    eax,0x6f000000
   140052e35:	out    dx,al
   140052e36:	add    eax,DWORD PTR [rax]
   140052e38:	movabs al,ds:0xa07fffffffff0001
   140052e42:	add    DWORD PTR [rax],eax
   140052e44:	add    BYTE PTR [rax],al
   140052e46:	add    BYTE PTR [rax],al
   140052e48:	mov    fs,WORD PTR [rax+0x10001]
   140052e4e:	add    BYTE PTR [rax],al
   140052e50:	mov    bh,0xa0
   140052e52:	add    DWORD PTR [rax],eax
   140052e54:	add    al,BYTE PTR [rax]
   140052e56:	add    BYTE PTR [rax],al
   140052e58:	(bad)  
   140052e59:	movabs al,ds:0xa0ce000000030001
   140052e62:	add    DWORD PTR [rax],eax
   140052e64:	add    al,0x0
   140052e66:	add    BYTE PTR [rax],al
   140052e68:	jmp    0x14505300d
   140052e6d:	add    BYTE PTR [rax],al
   140052e6f:	add    BYTE PTR [rsi],al
   140052e71:	movabs eax,ds:0xa123000000060001
   140052e7a:	add    DWORD PTR [rax],eax
   140052e7c:	(bad)  
   140052e7d:	add    BYTE PTR [rax],al
   140052e7f:	add    BYTE PTR [rdx],dh
   140052e81:	movabs eax,ds:0xa139000000080001
   140052e8a:	add    DWORD PTR [rax],eax
   140052e8c:	(bad)  
   140052e8d:	(bad)  
   140052e8e:	(bad)  
   140052e8f:	inc    DWORD PTR [rcx]
   140052e91:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e474097
   140052e97:	jo     0x140052ea6
   140052e99:	(bad)  
   140052e9a:	or     al,0x50
   140052e9c:	or     esi,DWORD PTR [rax]
   140052e9e:	add    BYTE PTR [rax],al
   140052ea0:	adc    DWORD PTR [rax],esp
   140052ea2:	or     al,BYTE PTR [rax]
   140052ea4:	and    BYTE PTR [rcx+rdx*1+0x0],ah
   140052ea8:	sbb    al,0x54
   140052eaa:	adc    BYTE PTR [rax],al
   140052eac:	sbb    BYTE PTR [rdi+rcx*1],dh
   140052eaf:	add    BYTE PTR [rdx+rdx*4],cl
   140052eb2:	or     al,dh
   140052eb4:	(bad)  
   140052eb5:	loopne 0x140052ebb
   140052eb7:	jo     0x140052e5d
   140052eb9:	sub    al,0x3
   140052ebb:	add    BYTE PTR [rax-0x4ffffb65],dl
   140052ec1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052ec2:	add    DWORD PTR [rax],eax
   140052ec4:	(bad)  
   140052ec5:	(bad)  
   140052ec6:	(bad)  
   140052ec7:	call   rbp
   140052ec9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052eca:	add    DWORD PTR [rax],eax
   140052ecc:	add    BYTE PTR [rax],al
   140052ece:	add    BYTE PTR [rax],al
   140052ed0:	add    eax,0xff0001a8
   140052ed5:	(bad)  
   140052ed6:	(bad)  
   140052ed7:	call   QWORD PTR [rcx]
   140052ed9:	sbb    BYTE PTR [rax+rax*1],al
   140052edc:	sbb    BYTE PTR [rdx+rcx*1],dh
   140052edf:	add    BYTE PTR [rdx+rdx*2],cl
   140052ee2:	or     BYTE PTR [rax-0x5c],dh
   140052ee5:	sub    al,0x3
   140052ee7:	add    al,al
   140052ee9:	fwait
   140052eea:	add    al,0x0
   140052eec:	(bad)  
   140052eed:	(bad)  
   140052eee:	(bad)  
   140052eef:	push   rsp
   140052ef1:	out    dx,al
   140052ef2:	add    eax,DWORD PTR [rax]
   140052ef4:	add    BYTE PTR [rax],al
   140052ef6:	add    BYTE PTR [rax],al
   140052ef8:	add    al,0xef
   140052efa:	add    eax,DWORD PTR [rax]
   140052efc:	xor    al,0xa6
   140052efe:	add    DWORD PTR [rax],eax
   140052f00:	(bad)  
   140052f01:	(bad)  
   140052f02:	(bad)  
   140052f03:	call   FWORD PTR [rcx-0x5a]
   140052f06:	add    DWORD PTR [rax],eax
   140052f08:	add    BYTE PTR [rax],al
   140052f0a:	add    BYTE PTR [rax],al
   140052f0c:	pushf  
   140052f0d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052f0e:	add    DWORD PTR [rax],eax
   140052f10:	(bad)  
   140052f11:	(bad)  
   140052f12:	(bad)  
   140052f13:	call   QWORD PTR [rcx]
   140052f15:	adc    DWORD PTR [rcx],eax
   140052f17:	add    BYTE PTR [rcx],cl
   140052f19:	and    al,BYTE PTR [rax]
   140052f1b:	add    BYTE PTR [rsp+rbp*1-0x640ffffd],ah
   140052f22:	add    al,0x0
   140052f24:	(bad)  
   140052f25:	(bad)  
   140052f26:	(bad)  
   140052f27:	dec    eax
   140052f29:	out    dx,al
   140052f2a:	add    eax,DWORD PTR [rax]
   140052f2c:	add    BYTE PTR [rax],al
   140052f2e:	add    BYTE PTR [rax],al
   140052f30:	(bad)  
   140052f31:	out    dx,al
   140052f32:	add    eax,DWORD PTR [rax]
   140052f34:	(bad)  
   140052f35:	(bad)  
   140052f36:	(bad)  
   140052f37:	jmp    rsp
   140052f39:	out    dx,al
   140052f3a:	add    eax,DWORD PTR [rax]
   140052f3c:	cwde   
   140052f3d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052f3e:	add    DWORD PTR [rax],eax
   140052f40:	(bad)  
   140052f41:	(bad)  
   140052f42:	(bad)  
   140052f43:	dec    ebp
   140052f45:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052f46:	add    DWORD PTR [rax],eax
   140052f48:	add    BYTE PTR [rax],al
   140052f4a:	add    BYTE PTR [rax],al
   140052f4c:	fbld   TBYTE PTR [rbp+0x10001]
   140052f52:	add    BYTE PTR [rax],al
   140052f54:	or     BYTE PTR [rsi+0x20001],ah
   140052f5a:	add    BYTE PTR [rax],al
   140052f5c:	sub    esp,DWORD PTR [rsi-0xffff]
   140052f62:	(bad)  
   140052f63:	inc    DWORD PTR [rcx]
   140052f65:	(bad)  
   140052f66:	add    eax,0x13421700
   140052f6b:	jo     0x140052f7f
   140052f6d:	(bad)  
   140052f6e:	adc    DWORD PTR [rax+0x10],edx
   140052f71:	xor    BYTE PTR [rax],al
   140052f73:	add    BYTE PTR [rcx],bl
   140052f75:	es add eax,0x1e341500
   140052f7b:	add    DWORD PTR [rip+0x6011a01],edx        # 0x146064982
   140052f81:	push   rax
   140052f82:	add    BYTE PTR [rax],al
   140052f84:	cmp    al,0xe5
   140052f86:	add    al,BYTE PTR [rax]
   140052f88:	ror    BYTE PTR [rax],0x0
   140052f8b:	add    BYTE PTR [rcx],bl
   140052f8d:	and    DWORD PTR [rdi],eax
   140052f8f:	add    BYTE PTR [rdi],cl
   140052f91:	xor    al,0x21
   140052f93:	add    DWORD PTR [rdi],ecx
   140052f95:	add    DWORD PTR [rdx],ebx
   140052f97:	add    DWORD PTR [rax],ecx
   140052f99:	jo     0x140052fa2
   140052f9b:	(bad)  
   140052f9c:	(bad)  
   140052f9d:	push   rax
   140052f9e:	add    BYTE PTR [rax],al
   140052fa0:	cmp    al,0xe5
   140052fa2:	add    al,BYTE PTR [rax]
   140052fa4:	ror    BYTE PTR [rax],0x0
   140052fa7:	add    BYTE PTR [rcx],bl
   140052fa9:	cmp    BYTE PTR [rbx],cl
   140052fab:	add    BYTE PTR [rsi],ah
   140052fad:	add    DWORD PTR fs:[r10],esp
   140052fb1:	xor    al,0x40
   140052fb3:	add    DWORD PTR [rbx],edx
   140052fb5:	add    DWORD PTR [rax],edi
   140052fb7:	add    DWORD PTR [rax+rsi*8],ecx
   140052fba:	or     ah,al
   140052fbc:	or     al,dl
   140052fbe:	(bad)  
   140052fbf:	rol    BYTE PTR [rax+rsi*2],0x0
   140052fc3:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   140052fc7:	add    BYTE PTR [rax],ah
   140052fc9:	pushf  
   140052fca:	add    al,0x0
   140052fcc:	mov    bl,0x9
   140052fce:	add    BYTE PTR [rax],al
   140052fd0:	(bad)  
   140052fd1:	(bad)  
   140052fd2:	(bad)  
   140052fd3:	inc    DWORD PTR [rax]
   140052fd5:	add    BYTE PTR [rax],al
   140052fd7:	add    bh,bh
   140052fd9:	(bad)  
   140052fda:	(bad)  
   140052fdb:	inc    DWORD PTR [rax]
   140052fdd:	add    BYTE PTR [rax],al
   140052fdf:	add    bh,bh
   140052fe1:	(bad)  
   140052fe2:	(bad)  
   140052fe3:	push   QWORD PTR [rdx+rsi*8-0xfffd]
   140052fea:	(bad)  
   140052feb:	inc    eax
   140052fed:	repnz add eax,DWORD PTR [rax]
   140052ff0:	add    eax,DWORD PTR [rax]
   140052ff2:	add    BYTE PTR [rax],al
   140052ff4:	int3   
   140052ff5:	repnz add eax,DWORD PTR [rax]
   140052ff8:	add    eax,DWORD PTR [rax]
   140052ffa:	add    BYTE PTR [rax],al
   140052ffc:	fdiv   st,st(2)
   140052ffe:	add    eax,DWORD PTR [rax]
   140053000:	add    eax,DWORD PTR [rax]
   140053002:	add    BYTE PTR [rax],al
   140053004:	in     al,0xf2
   140053006:	add    eax,DWORD PTR [rax]
   140053008:	(bad)  
   140053009:	(bad)  
   14005300a:	(bad)  
   14005300b:	push   rax
   14005300d:	repnz add eax,DWORD PTR [rax]
	...
   140053018:	add    DWORD PTR [rax],eax
   14005301a:	add    BYTE PTR [rax],al
   14005301c:	add    DWORD PTR [rax],eax
   14005301e:	add    BYTE PTR [rax],al
   140053020:	and    al,0x30
   140053022:	add    eax,0x0
	...
   14005302f:	add    BYTE PTR [rcx+0x580003f2],bl
   140053035:	add    BYTE PTR [rax],al
   140053037:	add    al,dh
   140053039:	scas   eax,DWORD PTR es:[rdi]
   14005303a:	add    DWORD PTR [rax],eax
   14005303c:	(bad)  
   14005303d:	(bad)  
   14005303e:	(bad)  
   14005303f:	jmp    QWORD PTR [rdx+0x1b0]
   140053045:	add    BYTE PTR [rax],al
   140053047:	add    cl,al
   140053049:	mov    al,0x1
   14005304b:	add    bh,bh
   14005304d:	(bad)  
   14005304e:	(bad)  
   14005304f:	call   QWORD PTR [rdi-0x4f]
   140053052:	add    DWORD PTR [rax],eax
   140053054:	add    eax,DWORD PTR [rax]
   140053056:	add    BYTE PTR [rax],al
   140053058:	je     0x14005300b
   14005305a:	add    DWORD PTR [rax],eax
   14005305c:	add    eax,0xe0000000
   140053061:	mov    cl,0x1
   140053063:	add    BYTE PTR [rbx],al
   140053065:	add    BYTE PTR [rax],al
   140053067:	add    dh,bh
   140053069:	mov    cl,0x1
   14005306b:	add    bh,bh
   14005306d:	(bad)  
   14005306e:	(bad)  
   14005306f:	call   FWORD PTR [rcx+0x3f2]
   140053075:	add    BYTE PTR [rax],al
   140053077:	add    BYTE PTR [rcx],bl
   140053079:	or     al,BYTE PTR [rdx]
   14005307b:	add    BYTE PTR [rdx],cl
   14005307d:	jb     0x140053085
   14005307f:	push   rax
   140053080:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053081:	sub    al,0x3
   140053083:	add    BYTE PTR [rax],ah
   140053085:	pushf  
   140053086:	add    al,0x0
   140053088:	adc    DWORD PTR [rbx],edx
   14005308a:	add    al,BYTE PTR [rax]
   14005308c:	or     dl,BYTE PTR [rdx+0x6]
   14005308f:	xor    BYTE PTR [rsp+rbp*1-0x63affffd],ah
   140053096:	add    al,0x0
   140053098:	(bad)  
   140053099:	(bad)  
   14005309a:	(bad)  
   14005309b:	jmp    FWORD PTR [rdx-0xf]
   14005309e:	add    eax,DWORD PTR [rax]
   1400530a0:	add    BYTE PTR [rax],al
   1400530a2:	add    BYTE PTR [rax],al
   1400530a4:	jge    0x140053097
   1400530a6:	add    eax,DWORD PTR [rax]
   1400530a8:	add    DWORD PTR [rax],eax
   1400530aa:	add    BYTE PTR [rax],al
   1400530ac:	nop
   1400530ad:	icebp  
   1400530ae:	add    eax,DWORD PTR [rax]
   1400530b0:	add    al,BYTE PTR [rax]
   1400530b2:	add    BYTE PTR [rax],al
   1400530b4:	movabs ds:0xb6000000030003f1,eax
   1400530bd:	icebp  
   1400530be:	add    eax,DWORD PTR [rax]
   1400530c0:	add    al,0x0
   1400530c2:	add    BYTE PTR [rax],al
   1400530c4:	leave  
   1400530c5:	icebp  
   1400530c6:	add    eax,DWORD PTR [rax]
   1400530c8:	add    DWORD PTR [rax],eax
   1400530ca:	add    BYTE PTR [rax],al
   1400530cc:	fdivr  st(1),st
   1400530ce:	add    eax,DWORD PTR [rax]
   1400530d0:	mov    ah,0xac
   1400530d2:	add    DWORD PTR [rax],eax
   1400530d4:	(bad)  
   1400530d5:	(bad)  
   1400530d6:	(bad)  
   1400530d7:	call   rsp
   1400530d9:	lods   al,BYTE PTR ds:[rsi]
   1400530da:	add    DWORD PTR [rax],eax
   1400530dc:	add    al,0x0
   1400530de:	add    BYTE PTR [rax],al
   1400530e0:	loope  0x14005308e
   1400530e2:	add    DWORD PTR [rax],eax
   1400530e4:	add    eax,DWORD PTR [rax]
   1400530e6:	add    BYTE PTR [rax],al
   1400530e8:	out    dx,al
   1400530e9:	lods   al,BYTE PTR ds:[rsi]
   1400530ea:	add    DWORD PTR [rax],eax
   1400530ec:	add    al,BYTE PTR [rax]
   1400530ee:	add    BYTE PTR [rax],al
   1400530f0:	sti    
   1400530f1:	lods   al,BYTE PTR ds:[rsi]
   1400530f2:	add    DWORD PTR [rax],eax
   1400530f4:	add    DWORD PTR [rax],eax
   1400530f6:	add    BYTE PTR [rax],al
   1400530f8:	(bad)  
   1400530f9:	lods   eax,DWORD PTR ds:[rsi]
   1400530fa:	add    DWORD PTR [rax],eax
   1400530fc:	add    BYTE PTR [rax],al
   1400530fe:	add    BYTE PTR [rax],al
   140053100:	and    al,0xad
   140053102:	add    DWORD PTR [rax],eax
   140053104:	(bad)  
   140053105:	(bad)  
   140053106:	(bad)  
   140053107:	call   FWORD PTR [rcx]
   140053109:	and    al,BYTE PTR [rdx]
   14005310b:	add    BYTE PTR [rdi],al
   14005310d:	add    DWORD PTR [rbx],ebx
   14005310f:	add    DWORD PTR [rbx+rcx*4+0x3],edi
   140053113:	add    BYTE PTR [rax-0x3cfffb64],al
   140053119:	or     BYTE PTR [rax],al
	...
   140053123:	add    BYTE PTR [rcx],al
   140053125:	add    BYTE PTR [rax],al
   140053127:	add    BYTE PTR [rcx],al
   140053129:	add    BYTE PTR [rax],al
   14005312b:	add    BYTE PTR [rax],dh
   14005312d:	xor    DWORD PTR [rip+0x0],eax        # 0x140053133
	...
   14005313b:	add    al,ch
   14005313d:	icebp  
   14005313e:	add    eax,DWORD PTR [rax]
   140053140:	rex.W add BYTE PTR [rax],al
   140053143:	add    BYTE PTR [rdi+rsi*4+0x1],al
   140053147:	add    bh,bh
   140053149:	(bad)  
   14005314a:	(bad)  
   14005314b:	jmp    FWORD PTR [rsi-0x49]
   14005314e:	add    DWORD PTR [rax],eax
   140053150:	add    BYTE PTR [rax],al
   140053152:	add    BYTE PTR [rax],al
   140053154:	sahf   
   140053155:	mov    bh,0x1
   140053157:	add    bh,bh
   140053159:	(bad)  
   14005315a:	(bad)  
   14005315b:	(bad)  
   14005315c:	call   0x140053552
   140053161:	add    BYTE PTR [rax],al
   140053163:	add    BYTE PTR [rcx],bl
   140053165:	or     al,BYTE PTR [rdx]
   140053167:	add    BYTE PTR [rdx],cl
   140053169:	push   rdx
   14005316a:	(bad)  
   14005316b:	push   rax
   14005316c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005316d:	sub    al,0x3
   14005316f:	add    BYTE PTR [rax+0x1900049c],al
   140053175:	cmp    BYTE PTR [rbx],cl
   140053177:	add    BYTE PTR [rsi],ah
   140053179:	fs sub eax,0x2c342200
   14005317f:	add    BYTE PTR [rbx],dl
   140053181:	add    DWORD PTR [rax+rax*1],esp
   140053184:	or     al,0xf0
   140053186:	or     ah,al
   140053188:	or     al,dl
   14005318a:	(bad)  
   14005318b:	rol    BYTE PTR [rax+rsi*2],0x0
   14005318f:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   140053193:	add    BYTE PTR [rax+0x1300049c],dh
   140053199:	add    DWORD PTR [rax],eax
   14005319b:	add    bh,bh
   14005319d:	(bad)  
   14005319e:	(bad)  
   14005319f:	inc    DWORD PTR [rbx]
   1400531a1:	repnz add eax,DWORD PTR [rax]
   1400531a4:	(bad)  
   1400531a5:	(bad)  
   1400531a6:	(bad)  
   1400531a7:	dec    DWORD PTR [rdi]
   1400531a9:	repnz add eax,DWORD PTR [rax]
   1400531ac:	add    DWORD PTR [rax],eax
   1400531ae:	add    BYTE PTR [rax],al
   1400531b0:	add    BYTE PTR [rax],al
   1400531b2:	add    BYTE PTR [rax],al
   1400531b4:	add    DWORD PTR [rax],eax
   1400531b6:	add    BYTE PTR [rax],al
   1400531b8:	add    BYTE PTR [rax],al
   1400531ba:	add    BYTE PTR [rax],al
   1400531bc:	add    DWORD PTR [rax],eax
   1400531be:	add    BYTE PTR [rax],al
   1400531c0:	repnz add eax,DWORD PTR ss:[rax]
   1400531c4:	add    DWORD PTR [rax],eax
   1400531c6:	add    BYTE PTR [rax],al
   1400531c8:	rex.X
   1400531c9:	repnz add eax,DWORD PTR [rax]
   1400531cc:	add    eax,0x4e000000
   1400531d1:	repnz add eax,DWORD PTR [rax]
   1400531d4:	add    eax,0x5a000000
   1400531d9:	repnz add eax,DWORD PTR [rax]
   1400531dc:	add    eax,0x66000000
   1400531e1:	repnz add eax,DWORD PTR [rax]
   1400531e4:	add    DWORD PTR [rax],eax
   1400531e6:	add    BYTE PTR [rax],al
   1400531e8:	jb     0x1400531dc
   1400531ea:	add    eax,DWORD PTR [rax]
   1400531ec:	add    DWORD PTR [rax],eax
   1400531ee:	add    BYTE PTR [rax],al
   1400531f0:	add    BYTE PTR [rax],al
   1400531f2:	add    BYTE PTR [rax],al
   1400531f4:	add    DWORD PTR [rax],eax
   1400531f6:	add    BYTE PTR [rax],al
   1400531f8:	add    BYTE PTR [rax],al
   1400531fa:	add    BYTE PTR [rax],al
   1400531fc:	add    al,BYTE PTR [rax]
   1400531fe:	add    BYTE PTR [rax],al
   140053200:	add    al,BYTE PTR [rax]
   140053202:	add    BYTE PTR [rax],al
   140053204:	add    eax,DWORD PTR [rax]
   140053206:	add    BYTE PTR [rax],al
   140053208:	add    DWORD PTR [rax],eax
   14005320a:	add    BYTE PTR [rax],al
   14005320c:	and    al,0x32
   14005320e:	add    eax,0xa00
   140053213:	add    BYTE PTR [rdx],cl
   140053215:	add    BYTE PTR [rax],al
   140053217:	add    BYTE PTR [rbx],cl
   140053219:	add    BYTE PTR [rax],al
   14005321b:	add    BYTE PTR [rcx],al
   14005321d:	add    BYTE PTR [rax],al
   14005321f:	add    BYTE PTR [rax],bh
   140053221:	xor    al,BYTE PTR [rip+0x0]        # 0x140053227
   140053227:	add    BYTE PTR [rax+0x780005a5],ch
   14005322d:	add    BYTE PTR [rax],al
   14005322f:	add    BYTE PTR [rbx],bl
   140053231:	repnz add eax,DWORD PTR [rax]
   140053234:	pop    rax
   140053235:	add    BYTE PTR [rax],al
   140053237:	add    BYTE PTR [rax],al
   140053239:	add    BYTE PTR [rax],al
   14005323b:	add    BYTE PTR [rax-0x77fffa5b],ch
   140053241:	add    BYTE PTR [rax],al
   140053243:	add    BYTE PTR [rsi-0xe],bh
   140053246:	add    eax,DWORD PTR [rax]
   140053248:	pop    rax
   140053249:	add    BYTE PTR [rax],al
   14005324b:	add    BYTE PTR [rax],bh
   14005324d:	lods   eax,DWORD PTR ds:[rsi]
   14005324e:	add    DWORD PTR [rax],eax
   140053250:	(bad)  
   140053251:	(bad)  
   140053252:	(bad)  
   140053253:	call   QWORD PTR [rbp+rbp*4+0x1]
   14005325a:	add    BYTE PTR [rax],al
   14005325c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005325d:	lods   eax,DWORD PTR ds:[rsi]
   14005325e:	add    DWORD PTR [rax],eax
   140053260:	add    DWORD PTR [rax],eax
   140053262:	add    BYTE PTR [rax],al
   140053264:	fld    TBYTE PTR [rbp+0x20001]
   14005326a:	add    BYTE PTR [rax],al
   14005326c:	cld    
   14005326d:	lods   eax,DWORD PTR ds:[rsi]
   14005326e:	add    DWORD PTR [rax],eax
   140053270:	add    DWORD PTR [rax],eax
   140053272:	add    BYTE PTR [rax],al
   140053274:	js     0x140053224
   140053276:	add    DWORD PTR [rax],eax
   140053278:	add    eax,0x92000000
   14005327d:	scas   al,BYTE PTR es:[rdi]
   14005327e:	add    DWORD PTR [rax],eax
   140053280:	(bad)  
   140053281:	add    BYTE PTR [rax],al
   140053283:	add    bl,bh
   140053285:	scas   al,BYTE PTR es:[rdi]
   140053286:	add    DWORD PTR [rax],eax
   140053288:	add    eax,0x19000000
   14005328d:	scas   eax,DWORD PTR es:[rdi]
   14005328e:	add    DWORD PTR [rax],eax
   140053290:	add    DWORD PTR [rax],eax
   140053292:	add    BYTE PTR [rax],al
   140053294:	cmp    al,0xaf
   140053296:	add    DWORD PTR [rax],eax
   140053298:	or     al,BYTE PTR [rax]
   14005329a:	add    BYTE PTR [rax],al
   14005329c:	jg     0x14005324d
   14005329e:	add    DWORD PTR [rax],eax
   1400532a0:	add    DWORD PTR [rax],eax
   1400532a2:	add    BYTE PTR [rax],al
   1400532a4:	mov    DWORD PTR [rdi-0xffff],ebp
   1400532aa:	(bad)  
   1400532ab:	call   QWORD PTR [rdi+0x10001af]
   1400532b1:	add    BYTE PTR [rax],al
   1400532b3:	add    BYTE PTR [rdi+rbp*4-0xffff],ah
   1400532ba:	(bad)  
   1400532bb:	call   FWORD PTR [rbx]
   1400532bd:	repnz add eax,DWORD PTR [rax]
   1400532c0:	add    BYTE PTR [rax],al
   1400532c2:	add    BYTE PTR [rax],al
   1400532c4:	sbb    DWORD PTR [rdx],ecx
   1400532c6:	add    al,BYTE PTR [rax]
   1400532c8:	or     dh,BYTE PTR [rdx+0x6]
   1400532cb:	push   rax
   1400532cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400532cd:	sub    al,0x3
   1400532cf:	add    BYTE PTR [rax+0x1100049c],dh
   1400532d5:	(bad)  
   1400532d6:	or     BYTE PTR [rax],al
   1400532d8:	(bad)  
   1400532d9:	push   rdx
   1400532da:	adc    al,dh
   1400532dc:	(bad)  
   1400532dd:	loopne 0x1400532eb
   1400532df:	ror    BYTE PTR [rdx],1
   1400532e1:	ror    BYTE PTR [rax],0x60
   1400532e4:	(bad)  
   1400532e5:	xor    BYTE PTR [rsi],al
   1400532e7:	push   rax
   1400532e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400532e9:	sub    al,0x3
   1400532eb:	add    al,ah
   1400532ed:	pushf  
   1400532ee:	add    al,0x0
   1400532f0:	(bad)  
   1400532f1:	(bad)  
   1400532f2:	(bad)  
   1400532f3:	jmp    QWORD PTR [rax]
   1400532f5:	out    dx,eax
   1400532f6:	add    eax,DWORD PTR [rax]
   1400532f8:	add    BYTE PTR [rax],al
   1400532fa:	add    BYTE PTR [rax],al
   1400532fc:	sub    al,0xef
   1400532fe:	add    eax,DWORD PTR [rax]
   140053300:	(bad)  
   140053301:	(bad)  
   140053302:	(bad)  
   140053303:	(bad)  
   140053304:	cmp    al,0xef
   140053306:	add    eax,DWORD PTR [rax]
   140053308:	add    al,BYTE PTR [rax]
   14005330a:	add    BYTE PTR [rax],al
   14005330c:	rex.WR out dx,eax
   14005330e:	add    eax,DWORD PTR [rax]
   140053310:	add    eax,DWORD PTR [rax]
   140053312:	add    BYTE PTR [rax],al
   140053314:	pop    rax
   140053315:	out    dx,eax
   140053316:	add    eax,DWORD PTR [rax]
   140053318:	add    al,BYTE PTR [rax]
   14005331a:	add    BYTE PTR [rax],al
   14005331c:	push   0x50003ef
   140053321:	add    BYTE PTR [rax],al
   140053323:	add    BYTE PTR [rbx-0x11],bh
   140053326:	add    eax,DWORD PTR [rax]
   140053328:	add    eax,0x87000000
   14005332d:	out    dx,eax
   14005332e:	add    eax,DWORD PTR [rax]
   140053330:	(bad)  
   140053331:	add    BYTE PTR [rax],al
   140053333:	add    BYTE PTR [rdx+0x70003ef],bl
   140053339:	add    BYTE PTR [rax],al
   14005333b:	add    BYTE PTR [rsi+0x90003ef],ah
   140053341:	add    BYTE PTR [rax],al
   140053343:	add    BYTE PTR [rcx+0x90003ef],bh
   140053349:	add    BYTE PTR [rax],al
   14005334b:	add    ch,al
   14005334d:	out    dx,eax
   14005334e:	add    eax,DWORD PTR [rax]
   140053350:	or     eax,DWORD PTR [rax]
   140053352:	add    BYTE PTR [rax],al
   140053354:	fsubr  st,st(7)
   140053356:	add    eax,DWORD PTR [rax]
   140053358:	or     eax,DWORD PTR [rax]
   14005335a:	add    BYTE PTR [rax],al
   14005335c:	in     al,0xef
   14005335e:	add    eax,DWORD PTR [rax]
   140053360:	(bad)  
   140053361:	(bad)  
   140053362:	(bad)  
   140053363:	push   rdi
   140053365:	out    dx,eax
   140053366:	add    eax,DWORD PTR [rax]
   140053368:	(bad)  
   140053369:	add    BYTE PTR [rax],al
   14005336b:	add    BYTE PTR [rdx],cl
   14005336d:	lock add eax,DWORD PTR [rax]
   140053370:	sldt   WORD PTR [rax]
   140053373:	add    BYTE PTR [rsi],dl
   140053375:	lock add eax,DWORD PTR [rax]
   140053378:	(bad)  
   140053379:	add    BYTE PTR [rax],al
   14005337b:	add    BYTE PTR [rsi],ah
   14005337d:	lock add eax,DWORD PTR [rax]
   140053380:	adc    DWORD PTR [rax],eax
   140053382:	add    BYTE PTR [rax],al
   140053384:	lock add eax,DWORD PTR ss:[rax]
   140053388:	adc    DWORD PTR [rax],eax
   14005338a:	add    BYTE PTR [rax],al
   14005338c:	rex.X
   14005338d:	lock add eax,DWORD PTR [rax]
   140053390:	adc    eax,DWORD PTR [rax]
   140053392:	add    BYTE PTR [rax],al
   140053394:	push   rbp
   140053395:	lock add eax,DWORD PTR [rax]
   140053398:	adc    al,0x0
   14005339a:	add    BYTE PTR [rax],al
   14005339c:	(bad)  
   14005339d:	lock add eax,DWORD PTR [rax]
   1400533a0:	adc    eax,DWORD PTR [rax]
   1400533a2:	add    BYTE PTR [rax],al
   1400533a4:	jno    0x140053396
   1400533a6:	add    eax,DWORD PTR [rax]
   1400533a8:	(bad)  
   1400533a9:	add    BYTE PTR [rax],al
   1400533ab:	add    BYTE PTR [rcx+0x170003f0],al
   1400533b1:	add    BYTE PTR [rax],al
   1400533b3:	add    BYTE PTR [rbp+0x160003f0],cl
   1400533b9:	add    BYTE PTR [rax],al
   1400533bb:	add    BYTE PTR [rbp+0x160003f0],bl
   1400533c1:	add    BYTE PTR [rax],al
   1400533c3:	add    BYTE PTR [rbp+0x130003f0],ch
   1400533c9:	add    BYTE PTR [rax],al
   1400533cb:	add    al,al
   1400533cd:	lock add eax,DWORD PTR [rax]
   1400533d0:	(bad)  
   1400533d1:	add    BYTE PTR [rax],al
   1400533d3:	add    bl,dl
   1400533d5:	lock add eax,DWORD PTR [rax]
   1400533d8:	sbb    al,0x0
   1400533da:	add    BYTE PTR [rax],al
   1400533dc:	out    0xf0,al
   1400533de:	add    eax,DWORD PTR [rax]
   1400533e0:	sbb    al,0x0
   1400533e2:	add    BYTE PTR [rax],al
   1400533e4:	repnz lock add eax,DWORD PTR [rax]
   1400533e8:	(bad)  
   1400533e9:	add    BYTE PTR [rax],al
   1400533eb:	add    BYTE PTR [rip+0x1f0003f1],al        # 0x15f0537e2
   1400533f1:	add    BYTE PTR [rax],al
   1400533f3:	add    BYTE PTR [rax],bl
   1400533f5:	icebp  
   1400533f6:	add    eax,DWORD PTR [rax]
   1400533f8:	and    BYTE PTR [rax],al
   1400533fa:	add    BYTE PTR [rax],al
   1400533fc:	sub    esi,ecx
   1400533fe:	add    eax,DWORD PTR [rax]
   140053400:	and    DWORD PTR [rax],eax
   140053402:	add    BYTE PTR [rax],al
   140053404:	(bad)  
   140053405:	icebp  
   140053406:	add    eax,DWORD PTR [rax]
   140053408:	and    BYTE PTR [rax],al
   14005340a:	add    BYTE PTR [rax],al
   14005340c:	rex.RXB icebp 
   14005340e:	add    eax,DWORD PTR [rax]
   140053410:	and    BYTE PTR [rax],al
   140053412:	add    BYTE PTR [rax],al
   140053414:	push   rdi
   140053415:	icebp  
   140053416:	add    eax,DWORD PTR [rax]
   140053418:	rex.WR test rax,0xffffffffffff0001
   14005341e:	(bad)  
   14005341f:	(bad)  
   140053420:	mov    ecx,0x1a9
   140053425:	add    BYTE PTR [rax],al
   140053427:	add    al,cl
   140053429:	test   eax,0x10001
   14005342e:	add    BYTE PTR [rax],al
   140053430:	icebp  
   140053431:	test   eax,0x20001
   140053436:	add    BYTE PTR [rax],al
   140053438:	jmp    FWORD PTR [rcx+0x30001]
   14005343e:	add    BYTE PTR [rax],al
   140053440:	(bad)  
   140053441:	stos   BYTE PTR es:[rdi],al
   140053442:	add    DWORD PTR [rax],eax
   140053444:	add    al,0x0
   140053446:	add    BYTE PTR [rax],al
   140053448:	and    ch,BYTE PTR [rdx+0x50001]
   14005344e:	add    BYTE PTR [rax],al
   140053450:	xor    al,0xaa
   140053452:	add    DWORD PTR [rax],eax
   140053454:	(bad)  
   140053455:	add    BYTE PTR [rax],al
   140053457:	add    BYTE PTR [rdx-0x56],al
   14005345a:	add    DWORD PTR [rax],eax
   14005345c:	(bad)  
   14005345d:	add    BYTE PTR [rax],al
   14005345f:	add    BYTE PTR [rdx+rbp*4+0x1],dl
   140053463:	add    BYTE PTR [rax],cl
   140053465:	add    BYTE PTR [rax],al
   140053467:	add    BYTE PTR [rbx-0x56],bl
   14005346a:	add    DWORD PTR [rax],eax
   14005346c:	or     DWORD PTR [rax],eax
   14005346e:	add    BYTE PTR [rax],al
   140053470:	ins    DWORD PTR es:[rdi],dx
   140053471:	stos   BYTE PTR es:[rdi],al
   140053472:	add    DWORD PTR [rax],eax
   140053474:	or     al,BYTE PTR [rax]
   140053476:	add    BYTE PTR [rax],al
   140053478:	ja     0x140053424
   14005347a:	add    DWORD PTR [rax],eax
   14005347c:	or     eax,DWORD PTR [rax]
   14005347e:	add    BYTE PTR [rax],al
   140053480:	mov    DWORD PTR [rdx+0xc0001],ebp
   140053486:	add    BYTE PTR [rax],al
   140053488:	mov    WORD PTR [rdx+0xd0001],gs
   14005348e:	add    BYTE PTR [rax],al
   140053490:	(bad)  
   140053491:	stos   BYTE PTR es:[rdi],al
   140053492:	add    DWORD PTR [rax],eax
   140053494:	(bad)  
   140053495:	add    BYTE PTR [rax],al
   140053497:	add    dh,al
   140053499:	stos   BYTE PTR es:[rdi],al
   14005349a:	add    DWORD PTR [rax],eax
   14005349c:	sldt   WORD PTR [rax]
   14005349f:	add    dh,cl
   1400534a1:	stos   BYTE PTR es:[rdi],al
   1400534a2:	add    DWORD PTR [rax],eax
   1400534a4:	adc    BYTE PTR [rax],al
   1400534a6:	add    BYTE PTR [rax],al
   1400534a8:	jmp    0x151053657
   1400534ad:	add    BYTE PTR [rax],al
   1400534af:	add    BYTE PTR [rcx],cl
   1400534b1:	stos   DWORD PTR es:[rdi],eax
   1400534b2:	add    DWORD PTR [rax],eax
   1400534b4:	adc    al,BYTE PTR [rax]
   1400534b6:	add    BYTE PTR [rax],al
   1400534b8:	adc    ebp,DWORD PTR [rbx+0x130001]
   1400534be:	add    BYTE PTR [rax],al
   1400534c0:	(bad)  
   1400534c1:	stos   DWORD PTR es:[rdi],eax
   1400534c2:	add    DWORD PTR [rax],eax
   1400534c4:	adc    al,0x0
   1400534c6:	add    BYTE PTR [rax],al
   1400534c8:	(bad)  
   1400534c9:	stos   DWORD PTR es:[rdi],eax
   1400534ca:	add    DWORD PTR [rax],eax
   1400534cc:	adc    eax,0x5a000000
   1400534d1:	stos   DWORD PTR es:[rdi],eax
   1400534d2:	add    DWORD PTR [rax],eax
   1400534d4:	(bad)  
   1400534d5:	add    BYTE PTR [rax],al
   1400534d7:	add    BYTE PTR [rsi-0x55],bh
   1400534da:	add    DWORD PTR [rax],eax
   1400534dc:	(bad)  
   1400534dd:	add    BYTE PTR [rax],al
   1400534df:	add    BYTE PTR [rsi+0x180001ab],al
   1400534e5:	add    BYTE PTR [rax],al
   1400534e7:	add    BYTE PTR [rcx+0x1a0001ab],ah
   1400534ed:	add    BYTE PTR [rax],al
   1400534ef:	add    BYTE PTR [rax+0x1c0001ab],ch
   1400534f5:	add    BYTE PTR [rax],al
   1400534f7:	add    BYTE PTR [rcx+0x1d0001ab],bh
   1400534fd:	add    BYTE PTR [rax],al
   1400534ff:	add    ah,dl
   140053501:	stos   DWORD PTR es:[rdi],eax
   140053502:	add    DWORD PTR [rax],eax
   140053504:	(bad)  
   140053505:	add    BYTE PTR [rax],al
   140053507:	add    cl,ah
   140053509:	stos   DWORD PTR es:[rdi],eax
   14005350a:	add    DWORD PTR [rax],eax
   14005350c:	(bad)  
   14005350d:	add    BYTE PTR [rax],al
   14005350f:	add    dh,ch
   140053511:	stos   DWORD PTR es:[rdi],eax
   140053512:	add    DWORD PTR [rax],eax
   140053514:	and    BYTE PTR [rax],al
   140053516:	add    BYTE PTR [rax],al
   140053518:	adc    ch,BYTE PTR [rcx+rax*1+0x2100]
   14005351f:	add    BYTE PTR [rsp+rbp*4],bl
   140053522:	add    DWORD PTR [rax],eax
   140053524:	and    al,BYTE PTR [rax]
   140053526:	add    BYTE PTR [rax],al
   140053528:	xor    eax,0x230001ac
   14005352d:	add    BYTE PTR [rax],al
   14005352f:	add    BYTE PTR [rdx-0x54],cl
   140053532:	add    DWORD PTR [rax],eax
   140053534:	and    al,0x0
   140053536:	add    BYTE PTR [rax],al
   140053538:	jno    0x1400534e6
   14005353a:	add    DWORD PTR [rax],eax
   14005353c:	(bad)  
   14005353d:	(bad)  
   14005353e:	(bad)  
   14005353f:	call   QWORD PTR [rcx]
   140053541:	adc    al,BYTE PTR [rcx]
   140053543:	add    BYTE PTR [rcx],cl
   140053545:	(bad)  
   140053546:	add    BYTE PTR [rax],al
   140053548:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053549:	sub    al,0x3
   14005354b:	add    BYTE PTR [rax],dl
   14005354d:	popf   
   14005354e:	add    al,0x0
   140053550:	(bad)  
   140053551:	(bad)  
   140053552:	(bad)  
   140053553:	(bad)  
   140053554:	cld    
   140053555:	repnz add eax,DWORD PTR [rax]
   140053558:	lods   al,BYTE PTR ds:[rsi]
   140053559:	mov    eax,0xffff0001
   14005355e:	(bad)  
   14005355f:	call   QWORD PTR [rcx]
   140053561:	and    BYTE PTR [rdx],cl
   140053563:	add    BYTE PTR [rax],ah
   140053565:	fs or  eax,0xc541c00
   14005356b:	add    BYTE PTR [rax],bl
   14005356d:	xor    al,0xb
   14005356f:	add    BYTE PTR [rdx+rdx*2],cl
   140053572:	or     al,dh
   140053574:	(bad)  
   140053575:	loopne 0x14005357b
   140053577:	jo     0x14005351d
   140053579:	sub    al,0x3
   14005357b:	add    BYTE PTR [rax-0x63],al
   14005357e:	add    al,0x0
   140053580:	(bad)  
   140053581:	(bad)  
   140053582:	(bad)  
   140053583:	push   QWORD PTR [rbx+rsi*8]
   140053586:	add    eax,DWORD PTR [rax]
   140053588:	lods   al,BYTE PTR ds:[rsi]
   140053589:	mov    esp,0xffff0001
   14005358e:	(bad)  
   14005358f:	push   rsp
   140053591:	mov    esp,0x1
   140053596:	add    BYTE PTR [rax],al
   140053598:	test   BYTE PTR [rbp-0xffff],bh
   14005359e:	(bad)  
   14005359f:	call   QWORD PTR [rcx]
   1400535a1:	and    ecx,DWORD PTR [rdx]
   1400535a3:	add    BYTE PTR [rbx],ah
   1400535a5:	push   rsp
   1400535a6:	adc    BYTE PTR [rax],al
   1400535a8:	(bad)  
   1400535a9:	xor    al,0xf
   1400535ab:	add    BYTE PTR [rbx],dl
   1400535ad:	jb     0x1400535be
   1400535af:	lock or eax,0x9c00be0
   1400535b5:	jo     0x1400535bf
   1400535b7:	(bad)  
   1400535b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400535b9:	sub    al,0x3
   1400535bb:	add    BYTE PTR [rax-0x63],dh
   1400535be:	add    al,0x0
   1400535c0:	(bad)  
   1400535c1:	(bad)  
   1400535c2:	(bad)  
   1400535c3:	jmp    FWORD PTR [rax]
   1400535c5:	repz add eax,DWORD PTR [rax]
   1400535c8:	xor    al,0xbb
   1400535ca:	add    DWORD PTR [rax],eax
   1400535cc:	(bad)  
   1400535cd:	(bad)  
   1400535ce:	(bad)  
   1400535cf:	inc    DWORD PTR [rax-0x44]
   1400535d2:	add    DWORD PTR [rax],eax
   1400535d4:	add    BYTE PTR [rax],al
   1400535d6:	add    BYTE PTR [rax],al
   1400535d8:	pop    rcx
   1400535d9:	mov    esp,0xffff0001
   1400535de:	(bad)  
   1400535df:	call   QWORD PTR [rcx]
   1400535e1:	sbb    al,0x8
   1400535e3:	add    BYTE PTR [rsp+rdx*2],bl
   1400535e6:	or     al,0x0
   1400535e8:	(bad)  
   1400535e9:	xor    al,0xb
   1400535eb:	add    BYTE PTR [rcx],cl
   1400535ed:	push   rdx
   1400535ee:	add    eax,0x27003e0
   1400535f3:	(bad)  
   1400535f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400535f5:	sub    al,0x3
   1400535f7:	add    BYTE PTR [rax+0x6400049d],ah
   1400535fd:	mov    edx,0xffff0001
   140053602:	(bad)  
   140053603:	dec    esp
   140053605:	mov    edx,0x1
   14005360a:	add    BYTE PTR [rax],al
   14005360c:	in     eax,0xba
   14005360e:	add    DWORD PTR [rax],eax
   140053610:	(bad)  
   140053611:	(bad)  
   140053612:	(bad)  
   140053613:	call   QWORD PTR [rcx]
   140053615:	sbb    al,0x8
   140053617:	add    BYTE PTR [rsp+riz*2],bl
   14005361a:	or     eax,DWORD PTR [rax]
   14005361c:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140053620:	adc    al,0x34
   140053622:	or     DWORD PTR [rax],eax
   140053624:	or     BYTE PTR [rdx+0x4],dl
   140053627:	jo     0x1400535cd
   140053629:	sub    al,0x3
   14005362b:	add    al,dl
   14005362d:	popf   
   14005362e:	add    al,0x0
   140053630:	(bad)  
   140053631:	(bad)  
   140053632:	(bad)  
   140053633:	inc    DWORD PTR [rax-0xd]
   140053636:	add    eax,DWORD PTR [rax]
   140053638:	fdivr  DWORD PTR [rbp-0xffff]
   14005363e:	(bad)  
   14005363f:	call   FWORD PTR [rbx]
   140053641:	mov    esi,0x1
   140053646:	add    BYTE PTR [rax],al
   140053648:	rex.WX movabs rsi,0x1c11ffffffff0001
   140053652:	(bad)  
   140053653:	add    BYTE PTR [rsp+riz*2],bl
   140053656:	or     al,BYTE PTR [rax]
   140053658:	sbb    BYTE PTR [rcx+rcx*1],dh
   14005365b:	add    BYTE PTR [rdx+rdx*2],cl
   14005365e:	or     BYTE PTR [rax-0x5c],dh
   140053661:	sub    al,0x3
   140053663:	add    BYTE PTR [rax],al
   140053665:	sahf   
   140053666:	add    al,0x0
   140053668:	(bad)  
   140053669:	(bad)  
   14005366a:	(bad)  
   14005366b:	dec    DWORD PTR [rbx+rsi*8]
   14005366e:	add    eax,DWORD PTR [rax]
   140053670:	add    BYTE PTR [rax],al
   140053672:	add    BYTE PTR [rax],al
   140053674:	sbb    bl,dh
   140053676:	add    eax,DWORD PTR [rax]
   140053678:	fdivr  DWORD PTR [rcx-0xffff]
   14005367e:	(bad)  
   14005367f:	inc    DWORD PTR [rcx]
   140053681:	mov    edx,0x10001
   140053686:	add    BYTE PTR [rax],al
   140053688:	sub    eax,0x1ba
   14005368d:	add    BYTE PTR [rax],al
   14005368f:	add    BYTE PTR [rax-0x46],cl
   140053692:	add    DWORD PTR [rax],eax
   140053694:	(bad)  
   140053695:	(bad)  
   140053696:	(bad)  
   140053697:	call   FWORD PTR [rcx]
   140053699:	sbb    DWORD PTR [rax+rax*1],eax
   14005369c:	or     dh,BYTE PTR [rsp+rcx*1]
   14005369f:	add    BYTE PTR [rdx],cl
   1400536a1:	jb     0x1400536a9
   1400536a3:	jo     0x1400536e1
   1400536a5:	in     eax,0x2
   1400536a7:	add    BYTE PTR [rax],bh
   1400536a9:	add    BYTE PTR [rax],al
   1400536ab:	add    BYTE PTR [rcx],bl
   1400536ad:	and    al,0x7
   1400536af:	add    BYTE PTR [rdx],dl
   1400536b1:	fs push rdx
   1400536b3:	add    BYTE PTR [rdx],dl
   1400536b5:	xor    al,0x51
   1400536b7:	add    BYTE PTR [rdx],dl
   1400536b9:	add    DWORD PTR [rsi+0x0],ecx
   1400536bc:	or     esi,DWORD PTR [rax+0x0]
   1400536bf:	add    BYTE PTR [riz*8+0x2600002],bh
   1400536c6:	add    BYTE PTR [rax],al
   1400536c8:	adc    DWORD PTR [rbx],edx
   1400536ca:	add    al,BYTE PTR [rax]
   1400536cc:	or     dl,BYTE PTR [rdx+0x6]
   1400536cf:	xor    BYTE PTR [rsp+rbp*1-0x61cffffd],ah
   1400536d6:	add    al,0x0
   1400536d8:	(bad)  
   1400536d9:	(bad)  
   1400536da:	(bad)  
   1400536db:	dec    DWORD PTR [rbx+rsi*8+0x3]
   1400536df:	add    BYTE PTR [rax],al
   1400536e1:	add    BYTE PTR [rax],al
   1400536e3:	add    BYTE PTR [rbx+rsi*8+0x3],bl
   1400536e7:	add    BYTE PTR [rcx],al
   1400536e9:	add    BYTE PTR [rax],al
   1400536eb:	add    BYTE PTR [rdi-0xd],ch
   1400536ee:	add    eax,DWORD PTR [rax]
   1400536f0:	add    al,BYTE PTR [rax]
   1400536f2:	add    BYTE PTR [rax],al
   1400536f4:	(bad)  
   1400536f5:	repz add eax,DWORD PTR [rax]
   1400536f8:	add    eax,DWORD PTR [rax]
   1400536fa:	add    BYTE PTR [rax],al
   1400536fc:	xchg   ebp,eax
   1400536fd:	repz add eax,DWORD PTR [rax]
   140053700:	add    al,0x0
   140053702:	add    BYTE PTR [rax],al
   140053704:	test   al,0xf3
   140053706:	add    eax,DWORD PTR [rax]
   140053708:	pushf  
   140053709:	mov    esi,0xffff0001
   14005370e:	(bad)  
   14005370f:	(bad)  
   140053710:	mov    esp,0x50001be
   140053715:	add    BYTE PTR [rax],al
   140053717:	add    ah,cl
   140053719:	mov    esi,0x40001
   14005371e:	add    BYTE PTR [rax],al
   140053720:	fnstcw WORD PTR [rsi+0x30001]
   140053726:	add    BYTE PTR [rax],al
   140053728:	out    0xbe,al
   14005372a:	add    DWORD PTR [rax],eax
   14005372c:	add    al,BYTE PTR [rax]
   14005372e:	add    BYTE PTR [rax],al
   140053730:	repz mov esi,0x10001
   140053736:	add    BYTE PTR [rax],al
   140053738:	add    BYTE PTR [rdi+0x1],bh
   14005373e:	add    BYTE PTR [rax],al
   140053740:	or     eax,0xff0001bf
   140053745:	(bad)  
   140053746:	(bad)  
   140053747:	inc    DWORD PTR [rcx]
   140053749:	sbb    BYTE PTR [rdx],cl
   14005374b:	add    BYTE PTR [rax],bl
   14005374d:	adc    BYTE PTR fs:[rax],al
   140053750:	sbb    BYTE PTR [rdi+rcx*1+0x0],dl
   140053754:	sbb    BYTE PTR [rsi+rcx*1],dh
   140053757:	add    BYTE PTR [rax],bl
   140053759:	xchg   edx,eax
   14005375a:	adc    al,0xf0
   14005375c:	adc    ah,al
   14005375e:	adc    BYTE PTR [rax+0x1],dh
   140053761:	sbb    eax,0x741d000c
   140053766:	or     eax,0xc641d00
   14005376b:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d0542c5
   140053771:	xor    al,0xa
   140053773:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f550cb
   140053779:	loopne 0x140053790
   14005377b:	rcl    BYTE PTR [rcx],0x12
   14005377e:	add    DWORD PTR [rax],eax
   140053780:	or     DWORD PTR [rdx+0x0],esp
   140053783:	add    BYTE PTR [rsp+rbp*1-0x619ffffd],ah
   14005378a:	add    al,0x0
   14005378c:	(bad)  
   14005378d:	(bad)  
   14005378e:	(bad)  
   14005378f:	(bad)  
   140053790:	mov    ebx,0xb40003f3
   140053795:	(bad)
   140053798:	(bad)  
   140053799:	(bad)  
   14005379a:	(bad)  
   14005379b:	call   FWORD PTR [rcx]
   14005379d:	and    DWORD PTR [rdi],eax
   14005379f:	add    BYTE PTR [rdi],cl
   1400537a1:	xor    al,0x55
   1400537a3:	add    BYTE PTR [rdi],cl
   1400537a5:	add    DWORD PTR [rax+0x0],edx
   1400537a8:	or     BYTE PTR [rax+0x7],dh
   1400537ab:	(bad)  
   1400537ac:	(bad)  
   1400537ad:	push   rax
   1400537ae:	add    BYTE PTR [rax],al
   1400537b0:	cmp    al,0xe5
   1400537b2:	add    al,BYTE PTR [rax]
   1400537b4:	jo     0x1400537b8
   1400537b6:	add    BYTE PTR [rax],al
   1400537b8:	adc    DWORD PTR [rbx],edx
   1400537ba:	add    al,BYTE PTR [rax]
   1400537bc:	or     dl,BYTE PTR [rdx+0x6]
   1400537bf:	xor    BYTE PTR [rsp+rbp*1-0x616ffffd],ah
   1400537c6:	add    al,0x0
   1400537c8:	(bad)  
   1400537c9:	(bad)  
   1400537ca:	(bad)  
   1400537cb:	inc    edi
   1400537cd:	repz add eax,DWORD PTR [rax]
   1400537d0:	add    BYTE PTR [rax],al
   1400537d2:	add    BYTE PTR [rax],al
   1400537d4:	xlat   BYTE PTR ds:[rbx]
   1400537d5:	repz add eax,DWORD PTR [rax]
   1400537d8:	add    DWORD PTR [rax],eax
   1400537da:	add    BYTE PTR [rax],al
   1400537dc:	(bad)  
   1400537dd:	repz add eax,DWORD PTR [rax]
   1400537e0:	sbb    al,0xc9
   1400537e2:	add    DWORD PTR [rax],eax
   1400537e4:	(bad)  
   1400537e5:	(bad)  
   1400537e6:	(bad)  
   1400537e7:	(bad)  
   1400537e8:	cmp    al,0xc9
   1400537ea:	add    DWORD PTR [rax],eax
   1400537ec:	add    al,BYTE PTR [rax]
   1400537ee:	add    BYTE PTR [rax],al
   1400537f0:	rex.WR leave 
   1400537f2:	add    DWORD PTR [rax],eax
   1400537f4:	add    DWORD PTR [rax],eax
   1400537f6:	add    BYTE PTR [rax],al
   1400537f8:	pop    rcx
   1400537f9:	leave  
   1400537fa:	add    DWORD PTR [rax],eax
   1400537fc:	add    BYTE PTR [rax],al
   1400537fe:	add    BYTE PTR [rax],al
   140053800:	leavew 
   140053802:	add    DWORD PTR [rax],eax
   140053804:	(bad)  
   140053805:	(bad)  
   140053806:	(bad)  
   140053807:	call   QWORD PTR [rcx]
   140053809:	(bad)  
   14005380a:	or     al,BYTE PTR [rax]
   14005380c:	(bad)  
   14005380d:	xor    al,0x14
   14005380f:	add    BYTE PTR [rdx],dl
   140053811:	xchg   edx,eax
   140053812:	(bad)  
   140053813:	lock or al,0xe0
   140053816:	or     dl,al
   140053818:	or     al,al
   14005381a:	(bad)  
   14005381b:	jo     0x140053822
   14005381d:	(bad)  
   14005381e:	add    al,0x50
   140053820:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053821:	sub    al,0x3
   140053823:	add    al,al
   140053825:	sahf   
   140053826:	add    al,0x0
   140053828:	(bad)  
   140053829:	(bad)  
   14005382a:	(bad)  
   14005382b:	push   QWORD PTR [rax]
   14005382d:	hlt    
   14005382e:	add    eax,DWORD PTR [rax]
   140053830:	(bad)  
   140053831:	(bad)  
   140053832:	(bad)  
   140053833:	(bad)  
   140053834:	cmp    al,0xf4
   140053836:	add    eax,DWORD PTR [rax]
   140053838:	sbb    ah,cl
   14005383a:	add    DWORD PTR [rax],eax
   14005383c:	(bad)  
   14005383d:	(bad)  
   14005383e:	(bad)  
   14005383f:	call   QWORD PTR [rbp-0x34]
   140053842:	add    DWORD PTR [rax],eax
   140053844:	add    BYTE PTR [rax],al
   140053846:	add    BYTE PTR [rax],al
   140053848:	xlat   BYTE PTR ds:[rbx]
   140053849:	int3   
   14005384a:	add    DWORD PTR [rax],eax
   14005384c:	(bad)  
   14005384d:	(bad)  
   14005384e:	(bad)  
   14005384f:	inc    DWORD PTR [rbx-0x33]
   140053852:	add    DWORD PTR [rax],eax
   140053854:	add    DWORD PTR [rax],eax
   140053856:	add    BYTE PTR [rax],al
   140053858:	pop    rdx
   140053859:	int    0x1
   14005385b:	add    bh,bh
   14005385d:	(bad)  
   14005385e:	(bad)  
   14005385f:	call   QWORD PTR [rcx]
   140053861:	adc    eax,DWORD PTR [rdx]
   140053863:	add    BYTE PTR [rdx],cl
   140053865:	push   rdx
   140053866:	(bad)  
   140053867:	xor    BYTE PTR [rsp+rbp*1-0x610ffffd],ah
   14005386e:	add    al,0x0
   140053870:	(bad)  
   140053871:	(bad)  
   140053872:	(bad)  
   140053873:	(bad)  
   140053874:	std    
   140053875:	repz add eax,DWORD PTR [rax]
   140053878:	add    BYTE PTR [rax],al
   14005387a:	add    BYTE PTR [rax],al
   14005387c:	or     eax,0x3f4
   140053881:	add    BYTE PTR [rax],al
   140053883:	add    BYTE PTR [rax],ah
   140053885:	hlt    
   140053886:	add    eax,DWORD PTR [rax]
   140053888:	ror    bl,0x1
   14005388b:	add    bh,bh
   14005388d:	(bad)  
   14005388e:	(bad)  
   14005388f:	jmp    rax
   140053891:	retf   
   140053892:	add    DWORD PTR [rax],eax
   140053894:	add    DWORD PTR [rax],eax
   140053896:	add    BYTE PTR [rax],al
   140053898:	call   0x140053a68
   14005389d:	add    BYTE PTR [rax],al
   14005389f:	add    BYTE PTR [rax],cl
   1400538a1:	int3   
   1400538a2:	add    DWORD PTR [rax],eax
   1400538a4:	(bad)  
   1400538a5:	(bad)  
   1400538a6:	(bad)  
   1400538a7:	call   QWORD PTR [rcx]
   1400538a9:	adc    al,BYTE PTR [rcx]
   1400538ab:	add    BYTE PTR [rcx],cl
   1400538ad:	(bad)  
   1400538ae:	add    BYTE PTR [rax],al
   1400538b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400538b1:	sub    al,0x3
   1400538b3:	add    BYTE PTR [rax],ah
   1400538b5:	lahf   
   1400538b6:	add    al,0x0
   1400538b8:	rex (bad) 
   1400538ba:	add    DWORD PTR [rax],eax
   1400538bc:	(bad)  
   1400538bd:	(bad)  
   1400538be:	(bad)  
   1400538bf:	inc    DWORD PTR [rcx]
   1400538c1:	sbb    BYTE PTR [rax],cl
   1400538c3:	add    BYTE PTR [rax],bl
   1400538c5:	fs (bad) 
   1400538c7:	add    BYTE PTR [rax],bl
   1400538c9:	xor    al,0x15
   1400538cb:	add    BYTE PTR [rax],bl
   1400538cd:	repnz (bad) 
   1400538cf:	loopne 0x1400538dd
   1400538d1:	jo     0x1400538de
   1400538d3:	push   rax
   1400538d4:	add    DWORD PTR [rcx],ebx
   1400538d6:	or     al,BYTE PTR [rax]
   1400538d8:	sbb    DWORD PTR [rbx+rdx*1+0x0],esi
   1400538dc:	sbb    DWORD PTR [rdx+rdx*1+0x0],esp
   1400538e0:	sbb    DWORD PTR [rcx+rdx*1+0x0],edx
   1400538e4:	sbb    DWORD PTR [rax+rdx*1],esi
   1400538e7:	add    BYTE PTR [rcx],bl
   1400538e9:	rcl    BYTE PTR [rip+0x93719e0],cl        # 0x1493c52cf
   1400538ef:	add    BYTE PTR [rsi],ah
   1400538f1:	fs push rdx
   1400538f3:	add    BYTE PTR [rdx],ah
   1400538f5:	xor    al,0x51
   1400538f7:	add    BYTE PTR [rip+0x7004c01],dl        # 0x1470584fe
   1400538fd:	loopne 0x140053904
   1400538ff:	jo     0x140053905
   140053901:	push   rax
   140053902:	add    BYTE PTR [rax],al
   140053904:	jl     0x140053891
   140053906:	add    eax,DWORD PTR [rax]
   140053908:	push   rax
   140053909:	lahf   
   14005390a:	add    al,0x0
   14005390c:	push   rdx
   14005390d:	add    al,BYTE PTR [rax]
   14005390f:	add    bh,bh
   140053911:	(bad)  
   140053912:	(bad)  
   140053913:	call   FWORD PTR [rsi-0xc]
   140053916:	add    eax,DWORD PTR [rax]
   140053918:	(bad)  
   140053919:	(bad)  
   14005391a:	(bad)  
   14005391b:	jmp    FWORD PTR [rdx-0xc]
   14005391e:	add    eax,DWORD PTR [rax]
   140053920:	(bad)  
   140053921:	(bad)  
   140053922:	(bad)  
   140053923:	inc    DWORD PTR [rax]
   140053925:	add    BYTE PTR [rax],al
   140053927:	add    bh,bh
   140053929:	(bad)  
   14005392a:	(bad)  
   14005392b:	inc    DWORD PTR [rax]
   14005392d:	add    BYTE PTR [rax],al
   14005392f:	add    bh,bh
   140053931:	(bad)  
   140053932:	(bad)  
   140053933:	push   QWORD PTR [rsi-0xc]
   140053936:	add    eax,DWORD PTR [rax]
   140053938:	(bad)  
   140053939:	(bad)  
   14005393a:	(bad)  
   14005393b:	inc    DWORD PTR [rdx-0xfffc0c]
   140053941:	(bad)  
   140053942:	(bad)  
   140053943:	inc    DWORD PTR [rax]
   140053945:	add    BYTE PTR [rax],al
   140053947:	add    bh,bh
   140053949:	(bad)  
   14005394a:	(bad)  
   14005394b:	inc    DWORD PTR [rax]
   14005394d:	add    BYTE PTR [rax],al
   14005394f:	add    BYTE PTR [rsi+rcx*8+0x1],ch
   140053953:	add    bh,bh
   140053955:	(bad)  
   140053956:	(bad)  
   140053957:	call   rsi
   140053959:	(bad)  
   14005395a:	add    DWORD PTR [rax],eax
   14005395c:	add    DWORD PTR [rax],eax
   14005395e:	add    BYTE PTR [rax],al
   140053960:	rex.X rol BYTE PTR [rcx],1
   140053963:	add    bh,bh
   140053965:	(bad)  
   140053966:	(bad)  
   140053967:	jmp    FWORD PTR [rcx-0x30]
   14005396a:	add    DWORD PTR [rax],eax
   14005396c:	add    DWORD PTR [rax],eax
   14005396e:	add    BYTE PTR [rax],al
   140053970:	je     0x140053942
   140053972:	add    DWORD PTR [rax],eax
   140053974:	(bad)  
   140053975:	(bad)  
   140053976:	(bad)  
   140053977:	call   FWORD PTR [rcx]
   140053979:	xor    al,0x7
   14005397b:	add    BYTE PTR [rbx],ah
   14005397d:	je     0x140053955
   14005397f:	add    BYTE PTR [rdi],bl
   140053981:	fs (bad) 
   140053983:	add    BYTE PTR [rdx],dl
   140053985:	add    edx,edx
   140053987:	add    BYTE PTR [rax+rdx*2],al
   14005398a:	add    BYTE PTR [rax],al
   14005398c:	jl     0x140053919
   14005398e:	add    eax,DWORD PTR [rax]
   140053990:	sbb    BYTE PTR [rdi+0x6820004],0x0
   140053997:	add    bh,bh
   140053999:	(bad)  
   14005399a:	(bad)  
   14005399b:	push   rdi
   14005399d:	cli    
   14005399e:	add    eax,DWORD PTR [rax]
   1400539a0:	(bad)  
   1400539a1:	(bad)  
   1400539a2:	(bad)  
   1400539a3:	inc    DWORD PTR [rbx]
   1400539a5:	sti    
   1400539a6:	add    eax,DWORD PTR [rax]
   1400539a8:	(bad)  
   1400539a9:	(bad)  
   1400539aa:	(bad)  
   1400539ab:	dec    DWORD PTR [rdi]
   1400539ad:	sti    
   1400539ae:	add    eax,DWORD PTR [rax]
   1400539b0:	lods   al,BYTE PTR ds:[rsi]
   1400539b1:	add    al,0x2
   1400539b3:	add    bh,bh
   1400539b5:	(bad)  
   1400539b6:	(bad)  
   1400539b7:	call   FWORD PTR [rbp+0x6]
   1400539ba:	add    al,BYTE PTR [rax]
   1400539bc:	add    DWORD PTR [rax],eax
   1400539be:	add    BYTE PTR [rax],al
   1400539c0:	ins    BYTE PTR es:[rdi],dx
   1400539c1:	(bad)  
   1400539c2:	add    al,BYTE PTR [rax]
   1400539c4:	(bad)  
   1400539c5:	(bad)  
   1400539c6:	(bad)  
   1400539c7:	call   FWORD PTR [rcx]
   1400539c9:	sub    eax,0x1130005
   1400539ce:	mov    es,WORD PTR [rax]
   1400539d0:	add    al,0x70
   1400539d2:	add    esi,DWORD PTR [rax]
   1400539d4:	add    dl,BYTE PTR [rax+0x0]
   1400539d7:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   1400539db:	add    BYTE PTR [rax+0x6200049f],dh
   1400539e1:	add    al,0x0
   1400539e3:	add    bh,bh
   1400539e5:	(bad)  
   1400539e6:	(bad)  
   1400539e7:	call   QWORD PTR [rdi]
   1400539e9:	test   DWORD PTR [rbx],0xffffff00
   1400539ef:	jmp    QWORD PTR [rbx]
   1400539f1:	test   DWORD PTR [rbx],0xffffff00
   1400539f7:	jmp    FWORD PTR [rdi]
   1400539f9:	test   DWORD PTR [rbx],0xffffff00
   1400539ff:	(bad)  
   140053a00:	cmp    esi,edi
   140053a02:	add    eax,DWORD PTR [rax]
   140053a04:	(bad)  
   140053a05:	(bad)  
   140053a06:	(bad)  
   140053a07:	inc    DWORD PTR [rdi-0x9]
   140053a0a:	add    eax,DWORD PTR [rax]
   140053a0c:	mov    eax,0xff000202
   140053a11:	(bad)  
   140053a12:	(bad)  
   140053a13:	call   FWORD PTR [rsi]
   140053a15:	add    eax,DWORD PTR [rdx]
   140053a17:	add    BYTE PTR [rax],al
   140053a19:	add    BYTE PTR [rax],al
   140053a1b:	add    BYTE PTR [rdi],dh
   140053a1d:	add    eax,DWORD PTR [rdx]
   140053a1f:	add    bh,bh
   140053a21:	(bad)  
   140053a22:	(bad)  
   140053a23:	push   QWORD PTR [rcx+0x1000203]
   140053a29:	add    BYTE PTR [rax],al
   140053a2b:	add    dl,dh
   140053a2d:	add    eax,DWORD PTR [rdx]
   140053a2f:	add    BYTE PTR [rdx],al
   140053a31:	add    BYTE PTR [rax],al
   140053a33:	add    BYTE PTR [rcx],bh
   140053a35:	add    al,0x2
   140053a37:	add    bh,bh
   140053a39:	(bad)  
   140053a3a:	(bad)  
   140053a3b:	call   FWORD PTR [rcx]
   140053a3d:	cmp    DWORD PTR [rbx],ecx
   140053a3f:	add    BYTE PTR [rdi],ah
   140053a41:	in     al,0x43
   140053a43:	add    BYTE PTR [rbx],ah
   140053a45:	je     0x140053a89
   140053a47:	add    BYTE PTR [rdi],bl
   140053a49:	add    BYTE PTR fs:[r11],bl
   140053a4d:	xor    al,0x40
   140053a4f:	add    BYTE PTR [rcx+rax*1],cl
   140053a52:	add    BYTE PTR ds:[rip+0x7c0000f0],al        # 0x1bc053b49
   140053a59:	mov    eax,DWORD PTR [rbx]
   140053a5b:	add    al,ah
   140053a5d:	lahf   
   140053a5e:	add    al,0x0
   140053a60:	jrcxz  0x140053a63
   140053a62:	add    BYTE PTR [rax],al
   140053a64:	(bad)  
   140053a65:	(bad)  
   140053a66:	(bad)  
   140053a67:	jmp    QWORD PTR [rdx-0xb]
   140053a6a:	add    eax,DWORD PTR [rax]
   140053a6c:	add    BYTE PTR [rax],al
   140053a6e:	add    BYTE PTR [rax],al
   140053a70:	outs   dx,BYTE PTR ds:[rsi]
   140053a71:	cmc    
   140053a72:	add    eax,DWORD PTR [rax]
   140053a74:	(bad)  
   140053a75:	(bad)  
   140053a76:	(bad)  
   140053a77:	(bad)  
   140053a78:	jle    0x140053a6f
   140053a7a:	add    eax,DWORD PTR [rax]
   140053a7c:	add    al,BYTE PTR [rax]
   140053a7e:	add    BYTE PTR [rax],al
   140053a80:	add    BYTE PTR [rax],al
   140053a82:	add    BYTE PTR [rax],al
   140053a84:	add    al,BYTE PTR [rax]
   140053a86:	add    BYTE PTR [rax],al
   140053a88:	add    BYTE PTR [rax],al
   140053a8a:	add    BYTE PTR [rax],al
   140053a8c:	add    al,BYTE PTR [rax]
   140053a8e:	add    BYTE PTR [rax],al
   140053a90:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140053a91:	cmc    
   140053a92:	add    eax,DWORD PTR [rax]
   140053a94:	add    eax,0xb1000000
   140053a99:	cmc    
   140053a9a:	add    eax,DWORD PTR [rax]
   140053a9c:	add    eax,DWORD PTR [rax]
   140053a9e:	add    BYTE PTR [rax],al
   140053aa0:	add    eax,DWORD PTR [rax]
   140053aa2:	add    BYTE PTR [rax],al
   140053aa4:	add    al,0x0
   140053aa6:	add    BYTE PTR [rax],al
   140053aa8:	add    DWORD PTR [rax],eax
   140053aaa:	add    BYTE PTR [rax],al
   140053aac:	mov    al,0x3a
   140053aae:	add    eax,0x0
   140053ab3:	add    BYTE PTR [rax-0x6ffffa5b],ch
   140053ab9:	add    BYTE PTR [rax],al
   140053abb:	add    BYTE PTR [rdx+0x580003f5],cl
   140053ac1:	add    BYTE PTR [rax],al
   140053ac3:	add    BYTE PTR [rax+rax*1-0xfffe],dh
   140053aca:	(bad)  
   140053acb:	(bad)  
   140053acc:	inc    BYTE PTR [rax]
   140053ace:	add    al,BYTE PTR [rax]
   140053ad0:	add    BYTE PTR [rax],al
   140053ad2:	add    BYTE PTR [rax],al
   140053ad4:	and    eax,DWORD PTR [rcx]
   140053ad6:	add    al,BYTE PTR [rax]
   140053ad8:	add    DWORD PTR [rax],eax
   140053ada:	add    BYTE PTR [rax],al
   140053adc:	(bad)  
   140053ade:	add    al,BYTE PTR [rax]
   140053ae0:	add    eax,DWORD PTR [rax]
   140053ae2:	add    BYTE PTR [rax],al
   140053ae4:	mov    eax,DWORD PTR [rcx]
   140053ae6:	add    al,BYTE PTR [rax]
   140053ae8:	add    al,BYTE PTR [rax]
   140053aea:	add    BYTE PTR [rax],al
   140053aec:	mov    bh,0x1
   140053aee:	add    al,BYTE PTR [rax]
   140053af0:	(bad)  
   140053af1:	(bad)  
   140053af2:	(bad)  
   140053af3:	dec    ebx
   140053af5:	add    DWORD PTR [rdx],eax
   140053af7:	add    BYTE PTR [rdx],al
   140053af9:	add    BYTE PTR [rax],al
   140053afb:	add    ah,bh
   140053afd:	add    DWORD PTR [rdx],eax
   140053aff:	add    BYTE PTR [rip+0x14000000],al        # 0x154053b05
   140053b05:	add    al,BYTE PTR [rdx]
   140053b07:	add    BYTE PTR [rsi],al
   140053b09:	add    BYTE PTR [rax],al
   140053b0b:	add    BYTE PTR [rdx+0x2],ah
   140053b0e:	add    al,BYTE PTR [rax]
   140053b10:	add    eax,0x67000000
   140053b15:	add    al,BYTE PTR [rdx]
   140053b17:	add    BYTE PTR [rdx],al
   140053b19:	add    BYTE PTR [rax],al
   140053b1b:	add    BYTE PTR [rsi+0x2],dh
   140053b1e:	add    al,BYTE PTR [rax]
   140053b20:	(bad)  
   140053b21:	(bad)  
   140053b22:	(bad)  
   140053b23:	dec    DWORD PTR [rdx+0x3f5]
   140053b29:	add    BYTE PTR [rax],al
   140053b2b:	add    BYTE PTR [rcx],bl
   140053b2d:	or     al,BYTE PTR [rdx]
   140053b2f:	add    BYTE PTR [rdx],cl
   140053b31:	jb     0x140053b39
   140053b33:	push   rax
   140053b34:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053b35:	sub    al,0x3
   140053b37:	add    al,ah
   140053b39:	lahf   
   140053b3a:	add    al,0x0
   140053b3c:	add    DWORD PTR [rsp+rcx*1],ebx
   140053b3f:	add    BYTE PTR [rsp+riz*2],bl
   140053b42:	adc    DWORD PTR [rax],eax
   140053b44:	sbb    al,0x54
   140053b46:	adc    BYTE PTR [rax],al
   140053b48:	sbb    al,0x34
   140053b4a:	ltr    WORD PTR [rdx+rsi*2]
   140053b4e:	sbb    al,dh
   140053b50:	(bad)  
   140053b51:	loopne 0x140053b67
   140053b53:	rcl    BYTE PTR [rdx],1
   140053b55:	rcl    BYTE PTR [rax],0x70
   140053b58:	adc    DWORD PTR [rdi],ecx
   140053b5a:	add    al,BYTE PTR [rax]
   140053b5c:	(bad)  
   140053b5d:	push   rdx
   140053b5e:	add    dh,BYTE PTR [rax]
   140053b60:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053b61:	sub    al,0x3
   140053b63:	add    BYTE PTR [rax],dl
   140053b65:	movabs al,ds:0xf797ffffffff0004
   140053b6e:	add    eax,DWORD PTR [rax]
   140053b70:	(bad)  
   140053b71:	(bad)  
   140053b72:	(bad)  
   140053b73:	jmp    QWORD PTR [rbx-0xffffc09]
   140053b79:	inc    BYTE PTR [rcx]
   140053b7b:	add    bh,bh
   140053b7d:	(bad)  
   140053b7e:	(bad)  
   140053b7f:	dec    DWORD PTR [rip+0x1ff]        # 0x140053d84
   140053b85:	add    BYTE PTR [rax],al
   140053b87:	add    BYTE PTR [rcx],bl
   140053b89:	inc    DWORD PTR [rcx]
   140053b8b:	add    bh,bh
   140053b8d:	(bad)  
   140053b8e:	(bad)  
   140053b8f:	call   FWORD PTR [rcx]
   140053b91:	xor    cl,BYTE PTR [rcx]
   140053b93:	add    BYTE PTR [rax],ah
   140053b95:	and    al,BYTE PTR fs:[rcx]
   140053b98:	sbb    al,0x34
   140053b9a:	and    DWORD PTR [rcx],eax
   140053b9c:	lidt   [rcx+rax*1]
   140053ba0:	or     al,dh
   140053ba2:	(bad)  
   140053ba3:	loopne 0x140053ba9
   140053ba5:	jo     0x140053ba7
   140053ba7:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   140053bab:	add    BYTE PTR [rax-0x60],al
   140053bae:	add    al,0x0
   140053bb0:	ror    DWORD PTR [rax],cl
	...
   140053bba:	add    BYTE PTR [rax],al
   140053bbc:	add    DWORD PTR [rax],eax
   140053bbe:	add    BYTE PTR [rax],al
   140053bc0:	add    DWORD PTR [rax],eax
   140053bc2:	add    BYTE PTR [rax],al
   140053bc4:	enter  0x53b,0x0
	...
   140053bd4:	push   rbx
   140053bd5:	test   DWORD PTR [rbx],0x4800
   140053bdb:	add    BYTE PTR [rax-0x3],cl
   140053bde:	add    DWORD PTR [rax],eax
   140053be0:	(bad)  
   140053be1:	(bad)  
   140053be2:	(bad)  
   140053be3:	inc    DWORD PTR [rdx+0x1fd]
   140053be9:	add    BYTE PTR [rax],al
   140053beb:	add    BYTE PTR [rdi-0xfffe02],bl
   140053bf1:	(bad)  
   140053bf2:	(bad)  
   140053bf3:	inc    esp
   140053bf5:	inc    BYTE PTR [rcx]
   140053bf7:	add    BYTE PTR [rax],al
   140053bf9:	add    BYTE PTR [rax],al
   140053bfb:	add    BYTE PTR [rax-0x9],ah
   140053bfe:	add    eax,DWORD PTR [rax]
   140053c00:	add    DWORD PTR [rax],eax
   140053c02:	add    BYTE PTR [rax],al
   140053c04:	test   DWORD PTR [ebx],0x0
   140053c0b:	add    BYTE PTR [rcx],bl
   140053c0d:	or     al,BYTE PTR [rdx]
   140053c0f:	add    BYTE PTR [rdx],cl
   140053c11:	push   rdx
   140053c12:	(bad)  
   140053c13:	push   rax
   140053c14:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053c15:	sub    al,0x3
   140053c17:	add    BYTE PTR [rax-0x60],al
   140053c1a:	add    al,0x0
   140053c1c:	sbb    DWORD PTR [rcx],esi
   140053c1e:	or     DWORD PTR [rax],eax
   140053c20:	(bad)  
   140053c21:	xor    al,0x24
   140053c23:	add    DWORD PTR [rdx],edx
   140053c25:	add    DWORD PTR [rcx+rax*1],ebx
   140053c28:	or     esi,eax
   140053c2a:	or     eax,esp
   140053c2c:	(bad)  
   140053c2d:	rol    BYTE PTR [rip+0x600470],0x0        # 0x1406540a4
   140053c34:	jl     0x140053bc1
   140053c36:	add    eax,DWORD PTR [rax]
   140053c38:	jo     0x140053bda
   140053c3a:	add    al,0x0
   140053c3c:	ror    DWORD PTR [rax],cl
	...
   140053c46:	add    BYTE PTR [rax],al
   140053c48:	add    DWORD PTR [rax],eax
   140053c4a:	add    BYTE PTR [rax],al
   140053c4c:	add    DWORD PTR [rax],eax
   140053c4e:	add    BYTE PTR [rax],al
   140053c50:	push   rsp
   140053c51:	cmp    al,0x5
	...
   140053c5f:	add    BYTE PTR [rbp-0x9],dh
   140053c62:	add    eax,DWORD PTR [rax]
   140053c64:	rex.W add BYTE PTR [rax],al
   140053c67:	add    BYTE PTR [rbx+rdi*8-0xffff],bl
   140053c6e:	(bad)  
   140053c6f:	(bad)  
   140053c70:	fdivr  st,st(3)
   140053c72:	add    DWORD PTR [rax],eax
   140053c74:	add    BYTE PTR [rax],al
   140053c76:	add    BYTE PTR [rax],al
   140053c78:	stc    
   140053c79:	cld    
   140053c7a:	add    DWORD PTR [rax],eax
   140053c7c:	(bad)  
   140053c7d:	(bad)  
   140053c7e:	(bad)  
   140053c7f:	call   FWORD PTR [rsi]
   140053c81:	std    
   140053c82:	add    DWORD PTR [rax],eax
   140053c84:	add    BYTE PTR [rax],al
   140053c86:	add    BYTE PTR [rax],al
   140053c88:	(bad)  
   140053c89:	test   DWORD PTR [rbx],0x100
   140053c8f:	add    BYTE PTR [rcx+0x3f7],cl
   140053c95:	add    BYTE PTR [rax],al
   140053c97:	add    BYTE PTR [rcx],bl
   140053c99:	or     al,BYTE PTR [rdx]
   140053c9b:	add    BYTE PTR [rdx],cl
   140053c9d:	push   rdx
   140053c9e:	(bad)  
   140053c9f:	push   rax
   140053ca0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053ca1:	sub    al,0x3
   140053ca3:	add    BYTE PTR [rax-0x60],dh
   140053ca6:	add    al,0x0
   140053ca8:	sbb    DWORD PTR [rbx],ebx
   140053caa:	(bad)  
   140053cab:	add    BYTE PTR [rbx],bl
   140053cad:	xor    al,0xd
   140053caf:	add    BYTE PTR [rdi],cl
   140053cb1:	jb     0x140053cbe
   140053cb3:	loopne 0x140053cbe
   140053cb5:	jo     0x140053cbf
   140053cb7:	(bad)  
   140053cb8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053cb9:	sub    al,0x3
   140053cbb:	add    BYTE PTR [rax+0x4a0],ah
   140053cc1:	add    BYTE PTR [rax],al
   140053cc3:	add    BYTE PTR [rax],al
   140053cc5:	add    BYTE PTR [rax],al
   140053cc7:	add    BYTE PTR [rcx],al
   140053cc9:	add    BYTE PTR [rax],al
   140053ccb:	add    BYTE PTR [rcx],al
   140053ccd:	add    BYTE PTR [rax],al
   140053ccf:	add    ah,dl
   140053cd1:	cmp    al,0x5
	...
   140053cdf:	add    BYTE PTR [rbp+0x380003f5],bh
   140053ce5:	add    BYTE PTR [rax],al
   140053ce7:	add    BYTE PTR [rdx+rdi*8-0xffff],dl
   140053cee:	(bad)  
   140053cef:	inc    DWORD PTR [rbx]
   140053cf1:	sti    
   140053cf2:	add    DWORD PTR [rax],eax
   140053cf4:	add    BYTE PTR [rax],al
   140053cf6:	add    BYTE PTR [rax],al
   140053cf8:	data16 sti 
   140053cfa:	add    DWORD PTR [rax],eax
   140053cfc:	(bad)  
   140053cfd:	(bad)  
   140053cfe:	(bad)  
   140053cff:	(bad)  
   140053d00:	mov    ebp,0x3f5
   140053d05:	add    BYTE PTR [rax],al
   140053d07:	add    dl,cl
   140053d09:	cmc    
   140053d0a:	add    eax,DWORD PTR [rax]
   140053d0c:	add    DWORD PTR [rax],eax
   140053d0e:	add    BYTE PTR [rax],al
   140053d10:	shl    ebp,1
   140053d12:	add    eax,DWORD PTR [rax]
   140053d14:	add    BYTE PTR [rax],al
   140053d16:	add    BYTE PTR [rax],al
   140053d18:	sbb    DWORD PTR [rdx],ecx
   140053d1a:	add    al,BYTE PTR [rax]
   140053d1c:	or     dh,BYTE PTR [rdx]
   140053d1e:	(bad)  
   140053d1f:	push   rax
   140053d20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053d21:	sub    al,0x3
   140053d23:	add    BYTE PTR [rax+0x190004a0],ah
   140053d29:	and    eax,0x7425000a
   140053d2e:	adc    eax,0x14642100
   140053d33:	add    BYTE PTR [rip+0x11001334],bl        # 0x15105506d
   140053d39:	ror    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e5492f
   140053d3f:	shl    BYTE PTR [rsp+rbp*1-0x5f2ffffd],0x4
	...
   140053d4f:	add    BYTE PTR [rcx],al
   140053d51:	add    BYTE PTR [rax],al
   140053d53:	add    BYTE PTR [rcx],al
   140053d55:	add    BYTE PTR [rax],al
   140053d57:	add    BYTE PTR [rbp+rdi*1+0x5],bl
	...
   140053d67:	add    BYTE PTR [rbx],dl
   140053d69:	cli    
   140053d6a:	add    eax,DWORD PTR [rax]
   140053d6c:	rex.W add BYTE PTR [rax],al
   140053d6f:	add    ah,ah
   140053d71:	clc    
   140053d72:	add    DWORD PTR [rax],eax
   140053d74:	(bad)  
   140053d75:	(bad)  
   140053d76:	(bad)  
   140053d77:	jmp    QWORD PTR [rsi]
   140053d79:	stc    
   140053d7a:	add    DWORD PTR [rax],eax
   140053d7c:	add    BYTE PTR [rax],al
   140053d7e:	add    BYTE PTR [rax],al
   140053d80:	rex.RB cli 
   140053d82:	add    DWORD PTR [rax],eax
   140053d84:	(bad)  
   140053d85:	(bad)  
   140053d86:	(bad)  
   140053d87:	push   QWORD PTR [rbp-0x6]
   140053d8a:	add    DWORD PTR [rax],eax
   140053d8c:	add    BYTE PTR [rax],al
   140053d8e:	add    BYTE PTR [rax],al
   140053d90:	and    dl,bh
   140053d92:	add    eax,DWORD PTR [rax]
   140053d94:	add    DWORD PTR [rax],eax
   140053d96:	add    BYTE PTR [rax],al
   140053d98:	(bad)  
   140053d99:	cli    
   140053d9a:	add    eax,DWORD PTR [rax]
   140053d9c:	add    BYTE PTR [rax],al
   140053d9e:	add    BYTE PTR [rax],al
   140053da0:	sbb    DWORD PTR [rdx],ecx
   140053da2:	add    al,BYTE PTR [rax]
   140053da4:	or     dl,BYTE PTR [rdx+0x6]
   140053da7:	push   rax
   140053da8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053da9:	sub    al,0x3
   140053dab:	add    al,dl
   140053dad:	movabs al,ds:0x220400010c190004
   140053db6:	add    BYTE PTR [rax],al
   140053db8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053db9:	sub    al,0x3
   140053dbb:	add    BYTE PTR [rax],al
   140053dbd:	movabs eax,ds:0x4
   140053dc6:	add    BYTE PTR [rax],al
   140053dc8:	add    DWORD PTR [rax],eax
   140053dca:	add    BYTE PTR [rax],al
   140053dcc:	add    DWORD PTR [rax],eax
   140053dce:	add    BYTE PTR [rax],al
   140053dd0:	(bad)  
   140053dd1:	cmp    eax,0x5
	...
   140053dde:	add    BYTE PTR [rax],al
   140053de0:	scas   al,BYTE PTR es:[rdi]
   140053de1:	sti    
   140053de2:	add    eax,DWORD PTR [rax]
   140053de4:	sbb    BYTE PTR [rax],al
   140053de6:	add    BYTE PTR [rax],al
   140053de8:	(bad)  
   140053de9:	clc    
   140053dea:	add    DWORD PTR [rax],eax
   140053dec:	(bad)  
   140053ded:	(bad)  
   140053dee:	(bad)  
   140053def:	call   rax
   140053df1:	clc    
   140053df2:	add    DWORD PTR [rax],eax
   140053df4:	add    BYTE PTR [rax],al
   140053df6:	add    BYTE PTR [rax],al
   140053df8:	fprem  
   140053dfa:	add    DWORD PTR [rax],eax
   140053dfc:	(bad)  
   140053dfd:	(bad)  
   140053dfe:	(bad)  
   140053dff:	(bad)  
   140053e00:	fdivp  st(0),st
   140053e02:	add    DWORD PTR [rax],eax
   140053e04:	add    BYTE PTR [rax],al
   140053e06:	add    BYTE PTR [rax],al
   140053e08:	sbb    DWORD PTR [rsi],eax
   140053e0a:	add    DWORD PTR [rax],eax
   140053e0c:	(bad)  
   140053e0d:	push   rax
   140053e0e:	add    BYTE PTR [rax],al
   140053e10:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053e11:	sub    al,0x3
   140053e13:	add    BYTE PTR [rax],al
   140053e15:	movabs eax,ds:0x220400010c190004
   140053e1e:	add    BYTE PTR [rax],al
   140053e20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053e21:	sub    al,0x3
   140053e23:	add    BYTE PTR [rax],dh
   140053e25:	movabs eax,ds:0x4
   140053e2e:	add    BYTE PTR [rax],al
   140053e30:	add    DWORD PTR [rax],eax
   140053e32:	add    BYTE PTR [rax],al
   140053e34:	add    DWORD PTR [rax],eax
   140053e36:	add    BYTE PTR [rax],al
   140053e38:	cmp    al,0x3e
   140053e3a:	add    eax,0x0
	...
   140053e47:	add    dl,bh
   140053e49:	sti    
   140053e4a:	add    eax,DWORD PTR [rax]
   140053e4c:	sbb    BYTE PTR [rax],al
   140053e4e:	add    BYTE PTR [rax],al
   140053e50:	pushf  
   140053e51:	clc    
   140053e52:	add    DWORD PTR [rax],eax
   140053e54:	(bad)  
   140053e55:	(bad)  
   140053e56:	(bad)  
   140053e57:	jmp    FWORD PTR [rax+0x1f8]
   140053e5d:	add    BYTE PTR [rax],al
   140053e5f:	add    BYTE PTR [rcx-0xfffe08],dh
   140053e65:	(bad)  
   140053e66:	(bad)  
   140053e67:	push   QWORD PTR [rsi+0x1f8]
   140053e6d:	add    BYTE PTR [rax],al
   140053e6f:	add    BYTE PTR [rcx],bl
   140053e71:	(bad)  
   140053e72:	add    DWORD PTR [rax],eax
   140053e74:	(bad)  
   140053e75:	push   rax
   140053e76:	add    BYTE PTR [rax],al
   140053e78:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053e79:	sub    al,0x3
   140053e7b:	add    BYTE PTR [rax],dh
   140053e7d:	movabs eax,ds:0x220400010c190004
   140053e86:	add    BYTE PTR [rax],al
   140053e88:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053e89:	sub    al,0x3
   140053e8b:	add    BYTE PTR [rax-0x5f],ah
   140053e8e:	add    al,0x0
	...
   140053e98:	add    DWORD PTR [rax],eax
   140053e9a:	add    BYTE PTR [rax],al
   140053e9c:	add    DWORD PTR [rax],eax
   140053e9e:	add    BYTE PTR [rax],al
   140053ea0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053ea1:	ds add eax,0x0
	...
   140053eaf:	add    cl,al
   140053eb1:	sti    
   140053eb2:	add    eax,DWORD PTR [rax]
   140053eb4:	sbb    BYTE PTR [rax],al
   140053eb6:	add    BYTE PTR [rax],al
   140053eb8:	je     0x140053eb2
   140053eba:	add    DWORD PTR [rax],eax
   140053ebc:	(bad)  
   140053ebd:	(bad)  
   140053ebe:	(bad)  
   140053ebf:	inc    DWORD PTR [rax+0x1f8]
   140053ec5:	add    BYTE PTR [rax],al
   140053ec7:	add    BYTE PTR [rcx-0xfffe08],cl
   140053ecd:	(bad)  
   140053ece:	(bad)  
   140053ecf:	dec    DWORD PTR [rsi+0x1f8]
   140053ed5:	add    BYTE PTR [rax],al
   140053ed7:	add    BYTE PTR [rcx],bl
   140053ed9:	(bad)  
   140053eda:	add    DWORD PTR [rax],eax
   140053edc:	(bad)  
   140053edd:	push   rax
   140053ede:	add    BYTE PTR [rax],al
   140053ee0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053ee1:	sub    al,0x3
   140053ee3:	add    BYTE PTR [rax-0x5f],ah
   140053ee6:	add    al,0x0
   140053ee8:	sbb    DWORD PTR [rbx],ebx
   140053eea:	(bad)  
   140053eeb:	add    BYTE PTR [rbx],bl
   140053eed:	xor    al,0xb
   140053eef:	add    BYTE PTR [rip+0x7e00952],cl        # 0x147e54847
   140053ef5:	jo     0x140053efd
   140053ef7:	(bad)  
   140053ef8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053ef9:	sub    al,0x3
   140053efb:	add    BYTE PTR [rax+0x4a1],dl
   140053f01:	add    BYTE PTR [rax],al
   140053f03:	add    BYTE PTR [rax],al
   140053f05:	add    BYTE PTR [rax],al
   140053f07:	add    BYTE PTR [rcx],al
   140053f09:	add    BYTE PTR [rax],al
   140053f0b:	add    BYTE PTR [rdx],al
   140053f0d:	add    BYTE PTR [rax],al
   140053f0f:	add    BYTE PTR [rdi+rdi*1],dl
   140053f12:	add    eax,0x800
   140053f17:	add    BYTE PTR [rax+0x280005a4],dl
   140053f1d:	add    BYTE PTR [rax],al
   140053f1f:	add    BYTE PTR [rbp+0x480003fa],ah
	...
   140053f31:	add    BYTE PTR [rax],al
   140053f33:	add    ah,bl
   140053f35:	cli    
   140053f36:	add    eax,DWORD PTR [rax]
   140053f38:	cmp    BYTE PTR [rax],al
   140053f3a:	add    BYTE PTR [rax],al
   140053f3c:	enter  0x1f7,0x0
   140053f40:	(bad)  
   140053f41:	(bad)  
   140053f42:	(bad)  
   140053f43:	(bad)  
   140053f44:	(bad)  
   140053f45:	test   DWORD PTR [rcx],0x0
   140053f4b:	add    BYTE PTR [rax-0x8],dl
   140053f4e:	add    DWORD PTR [rax],eax
   140053f50:	(bad)  
   140053f51:	(bad)  
   140053f52:	(bad)  
   140053f53:	call   FWORD PTR [rbx-0x8]
   140053f56:	add    DWORD PTR [rax],eax
   140053f58:	add    BYTE PTR [rax],al
   140053f5a:	add    BYTE PTR [rax],al
   140053f5c:	mov    bl,0xfa
   140053f5e:	add    eax,DWORD PTR [rax]
   140053f60:	add    DWORD PTR [rax],eax
   140053f62:	add    BYTE PTR [rax],al
   140053f64:	int    0xfa
   140053f66:	add    eax,DWORD PTR [rax]
   140053f68:	add    BYTE PTR [rax],al
   140053f6a:	add    BYTE PTR [rax],al
   140053f6c:	sbb    DWORD PTR [rbx],ecx
   140053f6e:	add    eax,DWORD PTR [rax]
   140053f70:	or     eax,DWORD PTR [rdx+0x7]
   140053f73:	push   rax
   140053f74:	(bad)  
   140053f75:	xor    BYTE PTR [rax],al
   140053f77:	add    BYTE PTR [rsp+rbp*1-0x5e6ffffd],ah
   140053f7e:	add    al,0x0
   140053f80:	sbb    DWORD PTR [rdx],ecx
   140053f82:	add    al,BYTE PTR [rax]
   140053f84:	or     dh,BYTE PTR [rdx]
   140053f86:	(bad)  
   140053f87:	push   rax
   140053f88:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053f89:	sub    al,0x3
   140053f8b:	add    BYTE PTR [rax+0x190004a1],dl
   140053f91:	or     al,0x1
   140053f93:	add    BYTE PTR [rdx+riz*1],al
   140053f96:	add    BYTE PTR [rax],al
   140053f98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053f99:	sub    al,0x3
   140053f9b:	add    al,al
   140053f9d:	movabs eax,ds:0x4
   140053fa6:	add    BYTE PTR [rax],al
   140053fa8:	add    DWORD PTR [rax],eax
   140053faa:	add    BYTE PTR [rax],al
   140053fac:	add    DWORD PTR [rax],eax
   140053fae:	add    BYTE PTR [rax],al
   140053fb0:	mov    ah,0x3f
   140053fb2:	add    eax,0x0
	...
   140053fbf:	add    ah,dl
   140053fc1:	sti    
   140053fc2:	add    eax,DWORD PTR [rax]
   140053fc4:	sbb    BYTE PTR [rax],al
   140053fc6:	add    BYTE PTR [rax],al
   140053fc8:	test   al,0xf7
   140053fca:	add    DWORD PTR [rax],eax
   140053fcc:	(bad)  
   140053fcd:	(bad)  
   140053fce:	(bad)  
   140053fcf:	push   QWORD PTR [rdi+rsi*8+0x1]
   140053fd6:	add    BYTE PTR [rax],al
   140053fd8:	mov    ebp,0xff0001f7
   140053fdd:	(bad)  
   140053fde:	(bad)  
   140053fdf:	inc    edx
   140053fe1:	test   DWORD PTR [rcx],0x0
   140053fe7:	add    BYTE PTR [rcx],bl
   140053fe9:	(bad)  
   140053fea:	add    DWORD PTR [rax],eax
   140053fec:	(bad)  
   140053fed:	push   rax
   140053fee:	add    BYTE PTR [rax],al
   140053ff0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053ff1:	sub    al,0x3
   140053ff3:	add    al,al
   140053ff5:	movabs eax,ds:0x220400010c190004
   140053ffe:	add    BYTE PTR [rax],al
   140054000:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054001:	sub    al,0x3
   140054003:	add    al,dh
   140054005:	movabs eax,ds:0x4
   14005400e:	add    BYTE PTR [rax],al
   140054010:	add    DWORD PTR [rax],eax
   140054012:	add    BYTE PTR [rax],al
   140054014:	add    DWORD PTR [rax],eax
   140054016:	add    BYTE PTR [rax],al
   140054018:	sbb    al,0x40
   14005401a:	add    eax,0x0
	...
   140054027:	add    bh,ah
   140054029:	sti    
   14005402a:	add    eax,DWORD PTR [rax]
   14005402c:	sbb    BYTE PTR [rax],al
   14005402e:	add    BYTE PTR [rax],al
   140054030:	xor    bh,0x1
   140054033:	add    bh,bh
   140054035:	(bad)  
   140054036:	(bad)  
   140054037:	dec    DWORD PTR [rdi+rsi*8+0x1]
   14005403e:	add    BYTE PTR [rax],al
   140054040:	xchg   ebp,eax
   140054041:	test   DWORD PTR [rcx],0xffffff00
   140054047:	call   FWORD PTR [rdx+0x1f7]
   14005404d:	add    BYTE PTR [rax],al
   14005404f:	add    BYTE PTR [rcx],bl
   140054051:	(bad)  
   140054052:	add    DWORD PTR [rax],eax
   140054054:	(bad)  
   140054055:	push   rax
   140054056:	add    BYTE PTR [rax],al
   140054058:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054059:	sub    al,0x3
   14005405b:	add    al,dh
   14005405d:	movabs eax,ds:0x6418000618110004
   140054066:	or     eax,DWORD PTR [rax]
   140054068:	adc    al,0x34
   14005406a:	or     al,BYTE PTR [rax]
   14005406c:	or     BYTE PTR [rdx+0x4],dl
   14005406f:	jo     0x140054015
   140054071:	sub    al,0x3
   140054073:	add    BYTE PTR [rax],ah
   140054075:	movabs ds:0xfa35ffffffff0004,al
   14005407e:	add    eax,DWORD PTR [rax]
   140054080:	add    BYTE PTR [rax],al
   140054082:	add    BYTE PTR [rax],al
   140054084:	rex.RB cli 
   140054086:	add    eax,DWORD PTR [rax]
   140054088:	add    DWORD PTR [rax],eax
   14005408a:	add    BYTE PTR [rax],al
   14005408c:	push   rbp
   14005408d:	cli    
   14005408e:	add    eax,DWORD PTR [rax]
   140054090:	add    al,BYTE PTR [rax]
   140054092:	add    BYTE PTR [rax],al
   140054094:	gs cli 
   140054096:	add    eax,DWORD PTR [rax]
   140054098:	add    al,BYTE PTR [rax]
   14005409a:	add    BYTE PTR [rax],al
   14005409c:	jne    0x140054098
   14005409e:	add    eax,DWORD PTR [rax]
   1400540a0:	add    DWORD PTR [rax],eax
   1400540a2:	add    BYTE PTR [rax],al
   1400540a4:	cmp    edx,0x3
   1400540aa:	add    BYTE PTR [rax],al
   1400540ac:	(bad)  
   1400540ad:	cli    
   1400540ae:	add    eax,DWORD PTR [rax]
   1400540b0:	(bad)  
   1400540b1:	(bad)  
   1400540b2:	(bad)  
   1400540b3:	call   FWORD PTR [rcx+0x7c0003fa]
   1400540b9:	test   BYTE PTR [rcx],0x0
   1400540bc:	(bad)  
   1400540bd:	(bad)  
   1400540be:	(bad)  
   1400540bf:	inc    ebx
   1400540c1:	test   BYTE PTR [rcx],0x0
   1400540c4:	add    al,BYTE PTR [rax]
   1400540c6:	add    BYTE PTR [rax],al
   1400540c8:	jmp    0x1410542c3
   1400540cd:	add    BYTE PTR [rax],al
   1400540cf:	add    BYTE PTR [rax],dl
   1400540d1:	test   DWORD PTR [rcx],0x0
   1400540d7:	add    BYTE PTR [rdi],dh
   1400540d9:	test   DWORD PTR [rcx],0xffffff00
   1400540df:	call   FWORD PTR [rcx]
   1400540e1:	xor    BYTE PTR [rbx],cl
   1400540e3:	add    BYTE PTR [rdi],bl
   1400540e5:	xor    al,0x44
   1400540e7:	add    DWORD PTR [rdi],ebx
   1400540e9:	add    DWORD PTR [rdx],edi
   1400540eb:	add    DWORD PTR [rax],edx
   1400540ed:	lock (bad) 
   1400540ef:	loopne 0x1400540fd
   1400540f1:	ror    BYTE PTR [rdx],1
   1400540f3:	ror    BYTE PTR [rax],0x70
   1400540f6:	(bad)  
   1400540f7:	(bad)  
   1400540f8:	(bad)  
   1400540f9:	push   rax
   1400540fa:	add    BYTE PTR [rax],al
   1400540fc:	cmp    al,0xe5
   1400540fe:	add    al,BYTE PTR [rax]
   140054100:	ror    BYTE PTR [rcx],0x0
   140054103:	add    BYTE PTR [rcx],bl
   140054105:	xor    ecx,DWORD PTR [rcx]
   140054107:	add    BYTE PTR [rcx],ah
   140054109:	xor    al,0x57
   14005410b:	add    BYTE PTR [rdx],dl
   14005410d:	add    DWORD PTR [rsi+0x0],ecx
   140054110:	or     esi,eax
   140054112:	or     eax,edx
   140054114:	(bad)  
   140054115:	rol    BYTE PTR [rip+0x600470],0x0        # 0x14065458c
   14005411c:	jl     0x1400540a9
   14005411e:	add    eax,DWORD PTR [rax]
   140054120:	push   rax
   140054121:	movabs ds:0xffff000002630004,al
   14005412a:	(bad)  
   14005412b:	(bad)  
   14005412c:	fcomip st,st(7)
   14005412e:	add    eax,DWORD PTR [rax]
   140054130:	add    BYTE PTR [rax],al
   140054132:	add    BYTE PTR [rax],al
   140054134:	jmp    0x14005412d
   140054136:	add    eax,DWORD PTR [rax]
   140054138:	add    DWORD PTR [rax],eax
   14005413a:	add    BYTE PTR [rax],al
   14005413c:	div    edi
   14005413e:	add    eax,DWORD PTR [rax]
   140054140:	add    DWORD PTR [rax],eax
   140054142:	add    BYTE PTR [rax],al
   140054144:	add    edi,eax
   140054146:	add    eax,DWORD PTR [rax]
   140054148:	add    eax,DWORD PTR [rax]
   14005414a:	add    BYTE PTR [rax],al
   14005414c:	psubb  mm0,QWORD PTR [rbx]
   14005414f:	add    BYTE PTR [rbx],al
   140054151:	add    BYTE PTR [rax],al
   140054153:	add    BYTE PTR [rbx],bl
   140054155:	clc    
   140054156:	add    eax,DWORD PTR [rax]
   140054158:	add    eax,0x27000000
   14005415d:	clc    
   14005415e:	add    eax,DWORD PTR [rax]
   140054160:	add    DWORD PTR [rax],eax
   140054162:	add    BYTE PTR [rax],al
   140054164:	(bad)  
   140054165:	clc    
   140054166:	add    eax,DWORD PTR [rax]
   140054168:	add    BYTE PTR [rax],al
   14005416a:	add    BYTE PTR [rax],al
   14005416c:	rex.XB clc 
   14005416e:	add    eax,DWORD PTR [rax]
   140054170:	or     BYTE PTR [rax],al
   140054172:	add    BYTE PTR [rax],al
   140054174:	rex.WRXB clc 
   140054176:	add    eax,DWORD PTR [rax]
   140054178:	add    eax,DWORD PTR [rax]
   14005417a:	add    BYTE PTR [rax],al
   14005417c:	pop    rdi
   14005417d:	clc    
   14005417e:	add    eax,DWORD PTR [rax]
   140054180:	or     al,BYTE PTR [rax]
   140054182:	add    BYTE PTR [rax],al
   140054184:	imul   edi,eax,0x3
   140054187:	add    BYTE PTR [rcx],al
   140054189:	add    BYTE PTR [rax],al
   14005418b:	add    BYTE PTR [rbx-0x8],bh
   14005418e:	add    eax,DWORD PTR [rax]
   140054190:	add    BYTE PTR [rax],al
   140054192:	add    BYTE PTR [rax],al
   140054194:	xchg   eax,edi
   140054196:	add    eax,DWORD PTR [rax]
   140054198:	or     eax,0x93000000
   14005419d:	clc    
   14005419e:	add    eax,DWORD PTR [rax]
   1400541a0:	add    eax,DWORD PTR [rax]
   1400541a2:	add    BYTE PTR [rax],al
   1400541a4:	movabs ds:0xaf0000000f0003f8,eax
   1400541ad:	clc    
   1400541ae:	add    eax,DWORD PTR [rax]
   1400541b0:	add    DWORD PTR [rax],eax
   1400541b2:	add    BYTE PTR [rax],al
   1400541b4:	mov    edi,0x3f8
   1400541b9:	add    BYTE PTR [rax],al
   1400541bb:	add    bl,cl
   1400541bd:	clc    
   1400541be:	add    eax,DWORD PTR [rax]
   1400541c0:	adc    al,BYTE PTR [rax]
   1400541c2:	add    BYTE PTR [rax],al
   1400541c4:	xlat   BYTE PTR ds:[rbx]
   1400541c5:	clc    
   1400541c6:	add    eax,DWORD PTR [rax]
   1400541c8:	add    eax,DWORD PTR [rax]
   1400541ca:	add    BYTE PTR [rax],al
   1400541cc:	out    0xf8,eax
   1400541ce:	add    eax,DWORD PTR [rax]
   1400541d0:	adc    al,0x0
   1400541d2:	add    BYTE PTR [rax],al
   1400541d4:	repz clc 
   1400541d6:	add    eax,DWORD PTR [rax]
   1400541d8:	add    DWORD PTR [rax],eax
   1400541da:	add    BYTE PTR [rax],al
   1400541dc:	add    edi,ecx
   1400541de:	add    eax,DWORD PTR [rax]
   1400541e0:	add    BYTE PTR [rax],al
   1400541e2:	add    BYTE PTR [rax],al
   1400541e4:	psubw  mm0,QWORD PTR [rbx]
   1400541e7:	add    BYTE PTR [rdi],dl
   1400541e9:	add    BYTE PTR [rax],al
   1400541eb:	add    BYTE PTR [rbx],bl
   1400541ed:	stc    
   1400541ee:	add    eax,DWORD PTR [rax]
   1400541f0:	add    al,0x0
   1400541f2:	add    BYTE PTR [rax],al
   1400541f4:	add    BYTE PTR [rax],al
   1400541f6:	add    BYTE PTR [rax],al
   1400541f8:	add    al,0x0
   1400541fa:	add    BYTE PTR [rax],al
   1400541fc:	add    BYTE PTR [rax],al
   1400541fe:	add    BYTE PTR [rax],al
   140054200:	add    eax,DWORD PTR [rax]
   140054202:	add    BYTE PTR [rax],al
   140054204:	mov    edi,ecx
   140054206:	add    eax,DWORD PTR [rax]
   140054208:	sbb    eax,DWORD PTR [rax]
   14005420a:	add    BYTE PTR [rax],al
   14005420c:	xchg   edi,eax
   14005420d:	stc    
   14005420e:	add    eax,DWORD PTR [rax]
   140054210:	add    DWORD PTR [rax],eax
   140054212:	add    BYTE PTR [rax],al
   140054214:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140054215:	stc    
   140054216:	add    eax,DWORD PTR [rax]
   140054218:	add    BYTE PTR [rax],al
   14005421a:	add    BYTE PTR [rax],al
   14005421c:	mov    bl,0xf9
   14005421e:	add    eax,DWORD PTR [rax]
   140054220:	(bad)  
   140054221:	add    BYTE PTR [rax],al
   140054223:	add    BYTE PTR [rdi+0x30003f9],bh
   140054229:	add    BYTE PTR [rax],al
   14005422b:	add    bh,cl
   14005422d:	stc    
   14005422e:	add    eax,DWORD PTR [rax]
   140054230:	and    BYTE PTR [rax],al
   140054232:	add    BYTE PTR [rax],al
   140054234:	(bad)  
   140054236:	add    eax,DWORD PTR [rax]
   140054238:	add    DWORD PTR [rax],eax
   14005423a:	add    BYTE PTR [rax],al
   14005423c:	jmp    0x140054237
   14005423e:	add    eax,DWORD PTR [rax]
   140054240:	add    BYTE PTR [rax],al
   140054242:	add    BYTE PTR [rax],al
   140054244:	idiv   ecx
   140054246:	add    eax,DWORD PTR [rax]
   140054248:	and    eax,DWORD PTR [rax]
   14005424a:	add    BYTE PTR [rax],al
   14005424c:	add    edi,edx
   14005424e:	add    eax,DWORD PTR [rax]
   140054250:	sbb    DWORD PTR [rax],eax
   140054252:	add    BYTE PTR [rax],al
   140054254:	sbb    DWORD PTR [rax],eax
   140054256:	add    BYTE PTR [rax],al
   140054258:	sbb    al,BYTE PTR [rax]
   14005425a:	add    BYTE PTR [rax],al
   14005425c:	add    al,BYTE PTR [rax]
   14005425e:	add    BYTE PTR [rax],al
   140054260:	fs rex.X add eax,0x800
   140054267:	add    BYTE PTR [rax-0x5ffffa5b],ch
   14005426d:	add    DWORD PTR [rax],eax
   14005426f:	add    BYTE PTR [rbx],ch
   140054271:	stc    
   140054272:	add    eax,DWORD PTR [rax]
   140054274:	push   0x0
	...
   140054281:	add    BYTE PTR [rax],al
   140054283:	add    BYTE PTR [rcx-0x7],ch
   140054286:	add    eax,DWORD PTR [rax]
   140054288:	push   0xffffffffec000000
   14005428d:	jmp    0x140044293
   140054292:	(bad)  
   140054293:	call   QWORD PTR [rbx-0x15]
   140054296:	add    DWORD PTR [rax],eax
   140054298:	add    BYTE PTR [rax],al
   14005429a:	add    BYTE PTR [rax],al
   14005429c:	mov    bl,ch
   14005429e:	add    DWORD PTR [rax],eax
   1400542a0:	add    DWORD PTR [rax],eax
   1400542a2:	add    BYTE PTR [rax],al
   1400542a4:	sbb    eax,0x30001ec
   1400542a9:	add    BYTE PTR [rax],al
   1400542ab:	add    BYTE PTR [rdx],cl
   1400542ad:	in     eax,dx
   1400542ae:	add    DWORD PTR [rax],eax
   1400542b0:	add    al,0x0
   1400542b2:	add    BYTE PTR [rax],al
   1400542b4:	leave  
   1400542b5:	in     eax,dx
   1400542b6:	add    DWORD PTR [rax],eax
   1400542b8:	sldt   WORD PTR [rax]
   1400542bb:	add    bh,dl
   1400542bd:	in     eax,dx
   1400542be:	add    DWORD PTR [rax],eax
   1400542c0:	add    eax,DWORD PTR [rax]
   1400542c2:	add    BYTE PTR [rax],al
   1400542c4:	std    
   1400542c5:	in     eax,dx
   1400542c6:	add    DWORD PTR [rax],eax
   1400542c8:	add    DWORD PTR [rax],eax
   1400542ca:	add    BYTE PTR [rax],al
   1400542cc:	adc    ch,dh
   1400542ce:	add    DWORD PTR [rax],eax
   1400542d0:	adc    al,BYTE PTR [rax]
   1400542d2:	add    BYTE PTR [rax],al
   1400542d4:	and    dh,ch
   1400542d6:	add    DWORD PTR [rax],eax
   1400542d8:	add    BYTE PTR [rax],al
   1400542da:	add    BYTE PTR [rax],al
   1400542dc:	rex.RX out dx,al
   1400542de:	add    DWORD PTR [rax],eax
   1400542e0:	(bad)  
   1400542e1:	(bad)  
   1400542e2:	(bad)  
   1400542e3:	jmp    FWORD PTR [rsi-0x12]
   1400542e6:	add    DWORD PTR [rax],eax
   1400542e8:	or     al,BYTE PTR [rax]
   1400542ea:	add    BYTE PTR [rax],al
   1400542ec:	jl     0x1400542dc
   1400542ee:	add    DWORD PTR [rax],eax
   1400542f0:	add    eax,DWORD PTR [rax]
   1400542f2:	add    BYTE PTR [rax],al
   1400542f4:	movabs ds:0xb7000000010001ee,al
   1400542fd:	out    dx,al
   1400542fe:	add    DWORD PTR [rax],eax
   140054300:	or     eax,0xc5000000
   140054305:	out    dx,al
   140054306:	add    DWORD PTR [rax],eax
   140054308:	add    BYTE PTR [rax],al
   14005430a:	add    BYTE PTR [rax],al
   14005430c:	jmp    0x1400542fc
   14005430e:	add    DWORD PTR [rax],eax
   140054310:	(bad)  
   140054311:	(bad)  
   140054312:	(bad)  
   140054313:	call   QWORD PTR [rbx]
   140054315:	out    dx,eax
   140054316:	add    DWORD PTR [rax],eax
   140054318:	add    eax,0x21000000
   14005431d:	out    dx,eax
   14005431e:	add    DWORD PTR [rax],eax
   140054320:	add    eax,DWORD PTR [rax]
   140054322:	add    BYTE PTR [rax],al
   140054324:	rex.RXB out dx,eax
   140054326:	add    DWORD PTR [rax],eax
   140054328:	add    DWORD PTR [rax],eax
   14005432a:	add    BYTE PTR [rax],al
   14005432c:	pop    rsp
   14005432d:	out    dx,eax
   14005432e:	add    DWORD PTR [rax],eax
   140054330:	or     BYTE PTR [rax],al
   140054332:	add    BYTE PTR [rax],al
   140054334:	push   0xffffffffffffffef
   140054336:	add    DWORD PTR [rax],eax
   140054338:	add    BYTE PTR [rax],al
   14005433a:	add    BYTE PTR [rax],al
   14005433c:	nop
   14005433d:	out    dx,eax
   14005433e:	add    DWORD PTR [rax],eax
   140054340:	(bad)  
   140054341:	(bad)  
   140054342:	(bad)  
   140054343:	(bad)  
   140054344:	mov    eax,0x140001ef
   140054349:	add    BYTE PTR [rax],al
   14005434b:	add    dh,al
   14005434d:	out    dx,eax
   14005434e:	add    DWORD PTR [rax],eax
   140054350:	add    eax,DWORD PTR [rax]
   140054352:	add    BYTE PTR [rax],al
   140054354:	in     al,dx
   140054355:	out    dx,eax
   140054356:	add    DWORD PTR [rax],eax
   140054358:	add    DWORD PTR [rax],eax
   14005435a:	add    BYTE PTR [rax],al
   14005435c:	add    eax,esi
   14005435e:	add    DWORD PTR [rax],eax
   140054360:	(bad)  
   140054361:	add    BYTE PTR [rax],al
   140054363:	add    BYTE PTR [rdi],cl
   140054365:	lock add DWORD PTR [rax],eax
   140054368:	add    BYTE PTR [rax],al
   14005436a:	add    BYTE PTR [rax],al
   14005436c:	xor    eax,0xff0001f0
   140054371:	(bad)  
   140054372:	(bad)  
   140054373:	call   FWORD PTR [rax+rsi*8+0x1]
   140054377:	add    BYTE PTR [rax+rax*1],al
   14005437a:	add    BYTE PTR [rax],al
   14005437c:	jbe    0x14005436e
   14005437e:	add    DWORD PTR [rax],eax
   140054380:	sbb    DWORD PTR [rax],eax
   140054382:	add    BYTE PTR [rax],al
   140054384:	(bad)  
   140054385:	lock add DWORD PTR [rax],eax
   140054388:	add    al,0x0
   14005438a:	add    BYTE PTR [rax],al
   14005438c:	iret   
   14005438d:	lock add DWORD PTR [rax],eax
   140054390:	sbb    eax,DWORD PTR [rax]
   140054392:	add    BYTE PTR [rax],al
   140054394:	(bad)  
   140054396:	add    DWORD PTR [rax],eax
   140054398:	add    eax,DWORD PTR [rax]
   14005439a:	add    BYTE PTR [rax],al
   14005439c:	add    esi,ecx
   14005439e:	add    DWORD PTR [rax],eax
   1400543a0:	add    DWORD PTR [rax],eax
   1400543a2:	add    BYTE PTR [rax],al
   1400543a4:	sbb    cl,dh
   1400543a6:	add    DWORD PTR [rax],eax
   1400543a8:	(bad)  
   1400543a9:	add    BYTE PTR [rax],al
   1400543ab:	add    BYTE PTR [rsi],ah
   1400543ad:	icebp  
   1400543ae:	add    DWORD PTR [rax],eax
   1400543b0:	add    BYTE PTR [rax],al
   1400543b2:	add    BYTE PTR [rax],al
   1400543b4:	rex.WR icebp 
   1400543b6:	add    DWORD PTR [rax],eax
   1400543b8:	(bad)  
   1400543b9:	(bad)  
   1400543ba:	(bad)  
   1400543bb:	push   QWORD PTR [rax-0xf]
   1400543be:	add    DWORD PTR [rax],eax
   1400543c0:	add    al,0x0
   1400543c2:	add    BYTE PTR [rax],al
   1400543c4:	(bad)  
   1400543c5:	icebp  
   1400543c6:	add    DWORD PTR [rax],eax
   1400543c8:	and    BYTE PTR [rax],al
   1400543ca:	add    BYTE PTR [rax],al
   1400543cc:	fwait
   1400543cd:	icebp  
   1400543ce:	add    DWORD PTR [rax],eax
   1400543d0:	add    eax,DWORD PTR [rax]
   1400543d2:	add    BYTE PTR [rax],al
   1400543d4:	shl    ecx,0x1
   1400543d7:	add    BYTE PTR [rcx],al
   1400543d9:	add    BYTE PTR [rax],al
   1400543db:	add    dh,dl
   1400543dd:	icebp  
   1400543de:	add    DWORD PTR [rax],eax
   1400543e0:	and    eax,DWORD PTR [rax]
   1400543e2:	add    BYTE PTR [rax],al
   1400543e4:	in     al,0xf1
   1400543e6:	add    DWORD PTR [rax],eax
   1400543e8:	add    BYTE PTR [rax],al
   1400543ea:	add    BYTE PTR [rax],al
   1400543ec:	jmp    0x13f0545e2
   1400543f1:	(bad)  
   1400543f2:	(bad)  
   1400543f3:	jmp    FWORD PTR [rbx]
   1400543f5:	stc    
   1400543f6:	add    eax,DWORD PTR [rax]
   1400543f8:	add    BYTE PTR [rax],al
   1400543fa:	add    BYTE PTR [rax],al
   1400543fc:	cmp    cl,bh
   1400543fe:	add    eax,DWORD PTR [rax]
   140054400:	sbb    al,BYTE PTR [rax]
   140054402:	add    BYTE PTR [rax],al
   140054404:	pop    rbx
   140054405:	stc    
   140054406:	add    eax,DWORD PTR [rax]
   140054408:	add    BYTE PTR [rax],al
   14005440a:	add    BYTE PTR [rax],al
   14005440c:	jbe    0x140054407
   14005440e:	add    eax,DWORD PTR [rax]
   140054410:	sbb    al,BYTE PTR [rax]
   140054412:	add    BYTE PTR [rax],al
   140054414:	jge    0x14005440f
   140054416:	add    eax,DWORD PTR [rax]
   140054418:	add    BYTE PTR [rax],al
   14005441a:	add    BYTE PTR [rax],al
   14005441c:	sbb    DWORD PTR [rdx],ecx
   14005441e:	add    al,BYTE PTR [rax]
   140054420:	or     dl,BYTE PTR [rdx+0x2ca45006]
   140054426:	add    eax,DWORD PTR [rax]
   140054428:	push   rax
   140054429:	movabs ds:0x122000a3b190004,al
   140054432:	add    DWORD PTR [rdx],eax
   140054434:	or     eax,0x9e00bf0
   140054439:	rol    BYTE PTR [rdi],1
   14005443b:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436548b2
   140054442:	add    dl,BYTE PTR [rax+0x7c]
   140054445:	mov    eax,DWORD PTR [rbx]
   140054447:	add    BYTE PTR [rax-0xdfffb5e],al
   14005444d:	sldt   WORD PTR [rax]
   140054450:	(bad)  
   140054451:	(bad)  
   140054452:	(bad)  
   140054453:	(bad)  
   140054454:	mov    ebx,0xff0003f7
   140054459:	(bad)  
   14005445a:	(bad)  
   14005445b:	inc    edi
   14005445d:	test   DWORD PTR [rbx],0xffffff00
   140054463:	inc    DWORD PTR [rax]
   140054465:	add    BYTE PTR [rax],al
   140054467:	add    bh,bh
   140054469:	(bad)  
   14005446a:	(bad)  
   14005446b:	inc    DWORD PTR [rax]
   14005446d:	add    BYTE PTR [rax],al
   14005446f:	add    bh,bh
   140054471:	(bad)  
   140054472:	(bad)  
   140054473:	inc    DWORD PTR [rax]
   140054475:	add    BYTE PTR [rax],al
   140054477:	add    bh,bh
   140054479:	(bad)  
   14005447a:	(bad)  
   14005447b:	inc    DWORD PTR [rax]
   14005447d:	add    BYTE PTR [rax],al
   14005447f:	add    bh,bh
   140054481:	(bad)  
   140054482:	(bad)  
   140054483:	inc    DWORD PTR [rax]
   140054485:	add    BYTE PTR [rax],al
   140054487:	add    bh,bh
   140054489:	(bad)  
   14005448a:	(bad)  
   14005448b:	call   rbx
   14005448d:	test   DWORD PTR [rbx],0x1e2ec00
   140054493:	add    bh,bh
   140054495:	(bad)  
   140054496:	(bad)  
   140054497:	(bad)  
   140054498:	fsubr  st(3),st
   14005449a:	add    DWORD PTR [rax],eax
   14005449c:	add    DWORD PTR [rax],eax
   14005449e:	add    BYTE PTR [rax],al
   1400544a0:	stos   DWORD PTR es:[rdi],eax
   1400544a1:	jmp    0x1400444a7
   1400544a6:	(bad)  
   1400544a7:	call   FWORD PTR [rcx]
   1400544a9:	(bad)  
   1400544aa:	or     al,BYTE PTR [rax]
   1400544ac:	sbb    DWORD PTR [rcx],eax
   1400544ae:	(bad)  
   1400544af:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e550a5
   1400544b5:	rol    BYTE PTR [rdi],1
   1400544b7:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14365492e
   1400544be:	add    dl,BYTE PTR [rax+0x7c]
   1400544c1:	mov    eax,DWORD PTR [rbx]
   1400544c3:	add    BYTE PTR [rax-0x1dfffb5e],dh
   1400544c9:	add    BYTE PTR [rax],al
   1400544cb:	add    bh,bh
   1400544cd:	(bad)  
   1400544ce:	(bad)  
   1400544cf:	(bad)  
   1400544d0:	fcomip st,st(5)
   1400544d2:	add    eax,DWORD PTR [rax]
   1400544d4:	(bad)  
   1400544d5:	(bad)  
   1400544d6:	(bad)  
   1400544d7:	(bad)  
   1400544d8:	jmp    0x1400544cf
   1400544da:	add    eax,DWORD PTR [rax]
   1400544dc:	(bad)  
   1400544dd:	(bad)  
   1400544de:	(bad)  
   1400544df:	push   rdi
   1400544e1:	cmc    
   1400544e2:	add    eax,DWORD PTR [rax]
   1400544e4:	(bad)  
   1400544e5:	(bad)  
   1400544e6:	(bad)  
   1400544e7:	inc    DWORD PTR [rbx]
   1400544e9:	test   BYTE PTR [rbx],0x0
   1400544ec:	(bad)  
   1400544ed:	(bad)  
   1400544ee:	(bad)  
   1400544ef:	dec    DWORD PTR [rdi]
   1400544f1:	test   BYTE PTR [rbx],0x0
   1400544f4:	(bad)  
   1400544f5:	(bad)  
   1400544f6:	(bad)  
   1400544f7:	call   FWORD PTR [rbx]
   1400544f9:	test   BYTE PTR [rbx],0x0
   1400544fc:	(bad)  
   1400544fd:	(bad)  
   1400544fe:	(bad)  
   1400544ff:	jmp    QWORD PTR [rdi]
   140054501:	test   BYTE PTR [rbx],0x0
   140054504:	(bad)  
   140054505:	(bad)  
   140054506:	(bad)  
   140054507:	push   QWORD PTR [rbx]
   140054509:	test   BYTE PTR [rbx],0x0
   14005450c:	(bad)  
   14005450d:	(bad)  
   14005450e:	(bad)  
   14005450f:	inc    DWORD PTR [rax]
   140054511:	add    BYTE PTR [rax],al
   140054513:	add    BYTE PTR [rdi],al
   140054515:	add    BYTE PTR [rax],al
   140054517:	add    BYTE PTR [rdi],bh
   140054519:	test   BYTE PTR [rbx],0x0
   14005451c:	(bad)  
   14005451d:	add    BYTE PTR [rax],al
   14005451f:	add    BYTE PTR [rbx-0xa],cl
   140054522:	add    eax,DWORD PTR [rax]
   140054524:	or     al,BYTE PTR [rax]
   140054526:	add    BYTE PTR [rax],al
   140054528:	push   rdi
   140054529:	test   BYTE PTR [rbx],0x0
   14005452c:	or     al,BYTE PTR [rax]
   14005452e:	add    BYTE PTR [rax],al
   140054530:	movsxd esi,esi
   140054532:	add    eax,DWORD PTR [rax]
   140054534:	or     al,BYTE PTR [rax]
   140054536:	add    BYTE PTR [rax],al
   140054538:	outs   dx,DWORD PTR ds:[rsi]
   140054539:	test   BYTE PTR [rbx],0x0
   14005453c:	or     al,0x0
   14005453e:	add    BYTE PTR [rax],al
   140054540:	jnp    0x140054538
   140054542:	add    eax,DWORD PTR [rax]
   140054544:	or     al,0x0
   140054546:	add    BYTE PTR [rax],al
   140054548:	xchg   esi,esi
   14005454a:	add    eax,DWORD PTR [rax]
   14005454c:	sldt   WORD PTR [rax]
   14005454f:	add    BYTE PTR [rbx+0xf0003f6],dl
   140054555:	add    BYTE PTR [rax],al
   140054557:	add    BYTE PTR [rdi+0xf0003f6],bl
   14005455d:	add    BYTE PTR [rax],al
   14005455f:	add    BYTE PTR [rbx+0xc0003f6],ch
   140054565:	add    BYTE PTR [rax],al
   140054567:	add    BYTE PTR [rdi+0xa0003f6],dh
   14005456d:	add    BYTE PTR [rax],al
   14005456f:	add    bl,al
   140054571:	test   BYTE PTR [rbx],0x0
   140054574:	sldt   WORD PTR [rax]
   140054577:	add    bh,cl
   140054579:	test   BYTE PTR [rbx],0x0
   14005457c:	or     al,0x0
   14005457e:	add    BYTE PTR [rax],al
   140054580:	fcomi  st,st(6)
   140054582:	add    eax,DWORD PTR [rax]
   140054584:	or     al,BYTE PTR [rax]
   140054586:	add    BYTE PTR [rax],al
   140054588:	out    0xf6,eax
   14005458a:	add    eax,DWORD PTR [rax]
   14005458c:	(bad)  
   14005458d:	add    BYTE PTR [rax],al
   14005458f:	add    bl,dh
   140054591:	test   BYTE PTR [rbx],0x0
   140054594:	(bad)  
   140054595:	(bad)  
   140054596:	(bad)  
   140054597:	(bad)  
   140054598:	push   rsi
   14005459a:	add    eax,DWORD PTR [rax]
   14005459c:	cld    
   14005459d:	fiadd  WORD PTR [rcx]
   14005459f:	add    bh,bh
   1400545a1:	(bad)  
   1400545a2:	(bad)  
   1400545a3:	call   FWORD PTR [rcx+0x10001df]
   1400545a9:	add    BYTE PTR [rax],al
   1400545ab:	add    ch,al
   1400545ad:	fild   WORD PTR [rcx]
   1400545af:	add    bh,bh
   1400545b1:	(bad)  
   1400545b2:	(bad)  
   1400545b3:	inc    DWORD PTR [rax+riz*8+0x1]
   1400545b7:	add    BYTE PTR [rax+rax*1],al
   1400545ba:	add    BYTE PTR [rax],al
   1400545bc:	jbe    0x14005459e
   1400545be:	add    DWORD PTR [rax],eax
   1400545c0:	(bad)  
   1400545c1:	(bad)  
   1400545c2:	(bad)  
   1400545c3:	jmp    FWORD PTR [rcx+0x70001e0]
   1400545c9:	add    BYTE PTR [rax],al
   1400545cb:	add    bh,al
   1400545cd:	loopne 0x1400545d0
   1400545cf:	add    BYTE PTR [rdx],cl
   1400545d1:	add    BYTE PTR [rax],al
   1400545d3:	add    ah,ch
   1400545d5:	loopne 0x1400545d8
   1400545d7:	add    BYTE PTR [rax+rax*1],cl
   1400545da:	add    BYTE PTR [rax],al
   1400545dc:	(bad)  
   1400545dd:	loope  0x1400545e0
   1400545df:	add    BYTE PTR [rdx],cl
   1400545e1:	add    BYTE PTR [rax],al
   1400545e3:	add    BYTE PTR [rbx],ah
   1400545e5:	loope  0x1400545e8
   1400545e7:	add    BYTE PTR [rax+rax*1],cl
   1400545ea:	add    BYTE PTR [rax],al
   1400545ec:	jle    0x1400545cf
   1400545ee:	add    DWORD PTR [rax],eax
   1400545f0:	sldt   WORD PTR [rax]
   1400545f3:	add    BYTE PTR [rsi+0x110001e1],dh
   1400545f9:	add    BYTE PTR [rax],al
   1400545fb:	add    dh,al
   1400545fd:	loope  0x140054600
   1400545ff:	add    BYTE PTR [rdi],cl
   140054601:	add    BYTE PTR [rax],al
   140054603:	add    bh,bl
   140054605:	loope  0x140054608
   140054607:	add    BYTE PTR [rax+rax*1],cl
   14005460a:	add    BYTE PTR [rax],al
   14005460c:	add    al,0xe2
   14005460e:	add    DWORD PTR [rax],eax
   140054610:	or     al,BYTE PTR [rax]
   140054612:	add    BYTE PTR [rax],al
   140054614:	sub    eax,0x110001e2
   140054619:	add    BYTE PTR [rax],al
   14005461b:	add    BYTE PTR [rcx-0x1e],dh
   14005461e:	add    DWORD PTR [rax],eax
   140054620:	sldt   WORD PTR [rax]
   140054623:	add    BYTE PTR [rsi+0xc0001e2],al
   140054629:	add    BYTE PTR [rax],al
   14005462b:	add    BYTE PTR [rsi+0xa0001e2],dl
   140054631:	add    BYTE PTR [rax],al
   140054633:	add    BYTE PTR [rdi+0x70001e2],ah
   140054639:	add    BYTE PTR [rax],al
   14005463b:	add    BYTE PTR [rax-0xfffe1e],bh
   140054641:	(bad)  
   140054642:	(bad)  
   140054643:	call   FWORD PTR [rcx]
   140054645:	cs (bad) 
   140054647:	add    BYTE PTR [rsp+riz*2],bl
   14005464a:	ins    DWORD PTR es:[rdi],dx
   14005464b:	add    BYTE PTR [rax],bl
   14005464d:	xor    al,0x6c
   14005464f:	add    BYTE PTR [rbx],cl
   140054651:	add    DWORD PTR [rax+0x0],ebp
   140054654:	add    al,0x70
   140054656:	add    BYTE PTR [rax],al
   140054658:	jl     0x1400545e5
   14005465a:	add    eax,DWORD PTR [rax]
   14005465c:	loopne 0x140054600
   14005465e:	add    al,0x0
   140054660:	xor    al,BYTE PTR [rbx]
   140054662:	add    BYTE PTR [rax],al
   140054664:	(bad)  
   140054665:	(bad)  
   140054666:	(bad)  
   140054667:	jmp    QWORD PTR [rdx+0x280003fb]
   14005466d:	fiadd  WORD PTR [rcx]
   14005466f:	add    bh,bh
   140054671:	(bad)  
   140054672:	(bad)  
   140054673:	push   QWORD PTR [rdi-0x22]
   140054676:	add    DWORD PTR [rax],eax
   140054678:	add    BYTE PTR [rax],al
   14005467a:	add    BYTE PTR [rax],al
   14005467c:	mov    esi,ds
   14005467e:	add    DWORD PTR [rax],eax
   140054680:	(bad)  
   140054681:	(bad)  
   140054682:	(bad)  
   140054683:	inc    DWORD PTR [rcx]
   140054685:	or     al,BYTE PTR [rax+rax*1]
   140054688:	or     dh,BYTE PTR [rax+rdx*1]
   14005468b:	add    BYTE PTR [rdx],cl
   14005468d:	rol    BYTE PTR [rsi],cl
   14005468f:	jo     0x140054692
   140054691:	adc    al,0x8
   140054693:	add    BYTE PTR [rsp+riz*2],dl
   140054696:	adc    al,BYTE PTR [rax]
   140054698:	adc    al,0x54
   14005469a:	adc    DWORD PTR [rax],eax
   14005469c:	adc    al,0x34
   14005469e:	adc    BYTE PTR [rax],al
   1400546a0:	adc    al,0xd2
   1400546a2:	adc    BYTE PTR [rax+0x19],dh
   1400546a5:	sub    BYTE PTR [rbx],cl
   1400546a7:	add    BYTE PTR [rax],ch
   1400546a9:	(bad)  
   1400546aa:	(bad)  
   1400546ab:	add    BYTE PTR [rsp+riz*2],ah
   1400546ae:	(bad)  
   1400546af:	add    BYTE PTR [rax],ah
   1400546b1:	xor    al,0x1d
   1400546b3:	add    BYTE PTR [rcx+rax*1],dl
   1400546b6:	sbb    BYTE PTR [rax],al
   1400546b8:	or     eax,0x9e00bf0
   1400546bd:	rol    BYTE PTR [rax],1
   1400546bf:	add    BYTE PTR [rsp+rbp*1-0x5ceffffd],ah
   1400546c6:	add    al,0x0
   1400546c8:	(bad)  
   1400546c9:	(bad)  
   1400546ca:	(bad)  
   1400546cb:	call   FWORD PTR [rbx]
   1400546cd:	sti    
   1400546ce:	add    eax,DWORD PTR [rax]
   1400546d0:	(bad)  
   1400546d1:	(bad)  
   1400546d2:	(bad)  
   1400546d3:	jmp    QWORD PTR [rdi]
   1400546d5:	sti    
   1400546d6:	add    eax,DWORD PTR [rax]
   1400546d8:	add    DWORD PTR [rax],eax
   1400546da:	add    BYTE PTR [rax],al
   1400546dc:	add    BYTE PTR [rax],al
   1400546de:	add    BYTE PTR [rax],al
   1400546e0:	add    al,BYTE PTR [rax]
   1400546e2:	add    BYTE PTR [rax],al
   1400546e4:	xor    edi,ebx
   1400546e6:	add    eax,DWORD PTR [rax]
   1400546e8:	add    al,BYTE PTR [rax]
   1400546ea:	add    BYTE PTR [rax],al
   1400546ec:	(bad)  
   1400546ed:	sti    
   1400546ee:	add    eax,DWORD PTR [rax]
   1400546f0:	add    al,BYTE PTR [rax]
   1400546f2:	add    BYTE PTR [rax],al
   1400546f4:	rex.WXB sti 
   1400546f6:	add    eax,DWORD PTR [rax]
   1400546f8:	add    DWORD PTR [rax],eax
   1400546fa:	add    BYTE PTR [rax],al
   1400546fc:	add    BYTE PTR [rax],al
   1400546fe:	add    BYTE PTR [rax],al
   140054700:	(bad)  
   140054701:	(bad)  
   140054702:	(bad)  
   140054703:	dec    DWORD PTR [rdx-0xfffc05]
   140054709:	(bad)  
   14005470a:	(bad)  
   14005470b:	call   QWORD PTR [rsi+0x20003fb]
   140054711:	add    BYTE PTR [rax],al
   140054713:	add    BYTE PTR [rip+0x6000000],al        # 0x146054719
   140054719:	add    BYTE PTR [rax],al
   14005471b:	add    BYTE PTR [rcx],al
   14005471d:	add    BYTE PTR [rax],al
   14005471f:	add    BYTE PTR [rdi+rax*2],ah
   140054722:	add    eax,0x800
   140054727:	add    BYTE PTR [rax-0x6ffffa5c],dl
   14005472d:	add    BYTE PTR [rax],al
   14005472f:	add    BYTE PTR [rdi-0x5],dl
   140054732:	add    eax,DWORD PTR [rax]
   140054734:	rex.W add BYTE PTR [rax],al
   140054737:	add    BYTE PTR [rdx+rbx*8],ch
   14005473a:	add    DWORD PTR [rax],eax
   14005473c:	(bad)  
   14005473d:	(bad)  
   14005473e:	(bad)  
   14005473f:	(bad)  
   140054740:	jns    0x14005471d
   140054742:	add    DWORD PTR [rax],eax
   140054744:	add    DWORD PTR [rax],eax
   140054746:	add    BYTE PTR [rax],al
   140054748:	xchg   bl,bl
   14005474a:	add    DWORD PTR [rax],eax
   14005474c:	add    al,BYTE PTR [rax]
   14005474e:	add    BYTE PTR [rax],al
   140054750:	test   al,0xdb
   140054752:	add    DWORD PTR [rax],eax
   140054754:	add    al,0x0
   140054756:	add    BYTE PTR [rax],al
   140054758:	out    0xdb,eax
   14005475a:	add    DWORD PTR [rax],eax
   14005475c:	add    al,BYTE PTR [rax]
   14005475e:	add    BYTE PTR [rax],al
   140054760:	adc    esp,ebx
   140054762:	add    DWORD PTR [rax],eax
   140054764:	(bad)  
   140054765:	(bad)  
   140054766:	(bad)  
   140054767:	push   QWORD PTR [rsp+rbx*8]
   14005476a:	add    DWORD PTR [rax],eax
   14005476c:	add    DWORD PTR [rax],eax
   14005476e:	add    BYTE PTR [rax],al
   140054770:	(bad)  
   140054771:	fadd   QWORD PTR [rcx]
   140054773:	add    bh,bh
   140054775:	(bad)  
   140054776:	(bad)  
   140054777:	call   QWORD PTR [rdi-0x5]
   14005477a:	add    eax,DWORD PTR [rax]
   14005477c:	add    BYTE PTR [rax],al
   14005477e:	add    BYTE PTR [rax],al
   140054780:	fs sti 
   140054782:	add    eax,DWORD PTR [rax]
   140054784:	(bad)  
   140054785:	add    BYTE PTR [rax],al
   140054787:	add    BYTE PTR [rbx+rdi*8+0x3],bh
   14005478b:	add    BYTE PTR [rax],al
   14005478d:	add    BYTE PTR [rax],al
   14005478f:	add    BYTE PTR [rcx],bl
   140054791:	or     al,BYTE PTR [rdx]
   140054793:	add    BYTE PTR [rdx],cl
   140054795:	push   rdx
   140054796:	(bad)  
   140054797:	push   rax
   140054798:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054799:	sub    al,0x3
   14005479b:	add    BYTE PTR [rax],dl
   14005479d:	movabs ds:0x6414000614010004,eax
   1400547a6:	(bad)  
   1400547a7:	add    BYTE PTR [rsp+rsi*1],dl
   1400547aa:	or     eax,0x10921400
   1400547af:	jo     0x1400547b2
   1400547b1:	(bad)  
   1400547b3:	add    BYTE PTR [rdi],cl
   1400547b5:	xor    al,0xb
   1400547b7:	add    BYTE PTR [rdi],cl
   1400547b9:	jb     0x1400547c6
   1400547bb:	jo     0x1400547ce
   1400547bd:	lar    eax,WORD PTR [rax]
   1400547c0:	(bad)  
   1400547c1:	jb     0x1400547c5
   1400547c3:	xor    BYTE PTR [rsp+rbp*1-0x5cbffffd],ah
   1400547ca:	add    al,0x0
   1400547cc:	and    al,0xd8
   1400547ce:	add    DWORD PTR [rax],eax
   1400547d0:	(bad)  
   1400547d1:	(bad)  
   1400547d2:	(bad)  
   1400547d3:	call   QWORD PTR [rbp-0x28]
   1400547d6:	add    DWORD PTR [rax],eax
   1400547d8:	add    BYTE PTR [rax],al
   1400547da:	add    BYTE PTR [rax],al
   1400547dc:	jo     0x1400547b6
   1400547de:	add    DWORD PTR [rax],eax
   1400547e0:	(bad)  
   1400547e1:	(bad)  
   1400547e2:	(bad)  
   1400547e3:	call   FWORD PTR [rcx]
   1400547e5:	xor    DWORD PTR [rcx],ecx
   1400547e7:	add    BYTE PTR [rdi],bl
   1400547e9:	push   rsp
   1400547ea:	jo     0x1400547ec
   1400547ec:	sbb    esi,DWORD PTR [rdi+rbp*2]
   1400547ef:	add    BYTE PTR [rsi],cl
   1400547f1:	add    DWORD PTR [rdx+0x0],ebp
   1400547f4:	(bad)  
   1400547f5:	loopne 0x1400547fc
   1400547f7:	jo     0x1400547fd
   1400547f9:	(bad)  
   1400547fa:	add    BYTE PTR [rax],al
   1400547fc:	jl     0x140054789
   1400547fe:	add    eax,DWORD PTR [rax]
   140054800:	jo     0x1400547a5
   140054802:	add    al,0x0
   140054804:	rex.X add eax,DWORD PTR [rax]
   140054807:	add    bh,bh
   140054809:	(bad)  
   14005480a:	(bad)  
   14005480b:	jmp    FWORD PTR [rdi+0x80003f7]
   140054811:	xlat   BYTE PTR ds:[rbx]
   140054812:	add    DWORD PTR [rax],eax
   140054814:	(bad)  
   140054815:	(bad)  
   140054816:	(bad)  
   140054817:	jmp    QWORD PTR [rdi-0x29]
   14005481a:	add    DWORD PTR [rax],eax
   14005481c:	add    BYTE PTR [rax],al
   14005481e:	add    BYTE PTR [rax],al
   140054820:	jl     0x1400547f9
   140054822:	add    DWORD PTR [rax],eax
   140054824:	(bad)  
   140054825:	(bad)  
   140054826:	(bad)  
   140054827:	call   QWORD PTR [rcx]
   140054829:	adc    al,0x4
   14005482b:	add    BYTE PTR [rsp+rsi*1],dl
   14005482e:	or     BYTE PTR [rax],al
   140054830:	(bad)  
   140054831:	push   rdx
   140054832:	add    dh,BYTE PTR [rax-0x5c]
   140054835:	sub    al,0x3
   140054837:	add    BYTE PTR [rax-0xfffb5d],ah
   14005483d:	(bad)  
   14005483e:	(bad)  
   14005483f:	dec    DWORD PTR [rbx]
   140054841:	test   DWORD PTR [rbx],0x1d68800
   140054847:	add    bh,bh
   140054849:	(bad)  
   14005484a:	(bad)  
   14005484b:	(bad)  
   14005484c:	(bad)  
   14005484e:	add    DWORD PTR [rax],eax
   140054850:	add    BYTE PTR [rax],al
   140054852:	add    BYTE PTR [rax],al
   140054854:	in     al,dx
   140054855:	(bad)  
   140054856:	add    DWORD PTR [rax],eax
   140054858:	(bad)  
   140054859:	(bad)  
   14005485a:	(bad)  
   14005485b:	call   FWORD PTR [rcx]
   14005485d:	(bad)  
   14005485e:	or     DWORD PTR [rax],eax
   140054860:	es fs push rsp
   140054863:	add    BYTE PTR [rdx],ah
   140054865:	xor    al,0x53
   140054867:	add    BYTE PTR [rip+0x7004e01],dl        # 0x14705966e
   14005486d:	lock add eax,0x500470
   140054873:	add    BYTE PTR [rbx+rcx*4+0x3],bh
   140054877:	add    al,dl
   140054879:	movabs ds:0xffff000002620004,eax
   140054882:	(bad)  
   140054883:	dec    DWORD PTR [rsi-0xfffc0c]
   140054889:	(bad)  
   14005488a:	(bad)  
   14005488b:	call   FWORD PTR [rdx+0x10003f4]
   140054891:	add    BYTE PTR [rax],al
   140054893:	add    BYTE PTR [rdx+0x10003f4],ch
   140054899:	add    BYTE PTR [rax],al
   14005489b:	add    BYTE PTR [rsi+0x30003f4],dh
   1400548a1:	add    BYTE PTR [rax],al
   1400548a3:	add    dh,al
   1400548a5:	hlt    
   1400548a6:	add    eax,DWORD PTR [rax]
   1400548a8:	add    eax,DWORD PTR [rax]
   1400548aa:	add    BYTE PTR [rax],al
   1400548ac:	shl    ah,cl
   1400548ae:	add    eax,DWORD PTR [rax]
   1400548b0:	add    eax,0xe2000000
   1400548b5:	hlt    
   1400548b6:	add    eax,DWORD PTR [rax]
   1400548b8:	add    eax,0xee000000
   1400548bd:	hlt    
   1400548be:	add    eax,DWORD PTR [rax]
   1400548c0:	(bad)  
   1400548c1:	add    BYTE PTR [rax],al
   1400548c3:	add    dh,bh
   1400548c5:	hlt    
   1400548c6:	add    eax,DWORD PTR [rax]
   1400548c8:	(bad)  
   1400548c9:	add    BYTE PTR [rax],al
   1400548cb:	add    BYTE PTR [rdx],cl
   1400548cd:	cmc    
   1400548ce:	add    eax,DWORD PTR [rax]
   1400548d0:	rex.R (bad) 
   1400548d2:	add    DWORD PTR [rax],eax
   1400548d4:	(bad)  
   1400548d5:	(bad)  
   1400548d6:	(bad)  
   1400548d7:	inc    ebp
   1400548d9:	(bad)  
   1400548da:	add    DWORD PTR [rax],eax
   1400548dc:	add    DWORD PTR [rax],eax
   1400548de:	add    BYTE PTR [rax],al
   1400548e0:	stc    
   1400548e1:	(bad)  
   1400548e2:	add    DWORD PTR [rax],eax
   1400548e4:	add    eax,DWORD PTR [rax]
   1400548e6:	add    BYTE PTR [rax],al
   1400548e8:	sbb    dl,ch
   1400548ea:	add    DWORD PTR [rax],eax
   1400548ec:	add    eax,0x3b000000
   1400548f1:	(bad)  
   1400548f2:	add    DWORD PTR [rax],eax
   1400548f4:	(bad)  
   1400548f5:	add    BYTE PTR [rax],al
   1400548f7:	add    BYTE PTR [rax-0x2b],bl
   1400548fa:	add    DWORD PTR [rax],eax
   1400548fc:	or     BYTE PTR [rax],al
   1400548fe:	add    BYTE PTR [rax],al
   140054900:	fs (bad) 
   140054902:	add    DWORD PTR [rax],eax
   140054904:	(bad)  
   140054905:	add    BYTE PTR [rax],al
   140054907:	add    BYTE PTR [rbp-0x2a],bl
   14005490a:	add    DWORD PTR [rax],eax
   14005490c:	(bad)  
   14005490d:	(bad)  
   14005490e:	(bad)  
   14005490f:	call   QWORD PTR [rcx]
   140054911:	adc    eax,DWORD PTR [rdx]
   140054913:	add    BYTE PTR [rdx],cl
   140054915:	push   rdx
   140054916:	(bad)  
   140054917:	xor    BYTE PTR [rsp+rbp*1-0x5bfffffd],ah
   14005491e:	add    al,0x0
   140054920:	(bad)  
   140054921:	(bad)  
   140054922:	(bad)  
   140054923:	call   QWORD PTR [rsi]
   140054925:	cmc    
   140054926:	add    eax,DWORD PTR [rax]
   140054928:	or     al,0xd4
   14005492a:	add    DWORD PTR [rax],eax
   14005492c:	(bad)  
   14005492d:	(bad)  
   14005492e:	(bad)  
   14005492f:	call   QWORD PTR [rcx]
   140054931:	or     eax,0x62040001
   140054936:	add    BYTE PTR [rax],al
   140054938:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054939:	sub    al,0x3
   14005493b:	add    BYTE PTR [rax],dh
   14005493d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005493e:	add    al,0x0
   140054940:	(bad)  
   140054941:	(bad)  
   140054942:	(bad)  
   140054943:	dec    DWORD PTR [rdx-0xb]
   140054946:	add    eax,DWORD PTR [rax]
   140054948:	xor    BYTE PTR [rdi],al
   14005494a:	add    al,0x0
   14005494c:	(bad)  
   14005494d:	(bad)  
   14005494e:	(bad)  
   14005494f:	call   QWORD PTR [rcx]
   140054951:	adc    eax,DWORD PTR [rdx]
   140054953:	add    BYTE PTR [rdx],cl
   140054955:	push   rdx
   140054956:	(bad)  
   140054957:	xor    BYTE PTR [rsp+rbp*1-0x5b9ffffd],ah
   14005495e:	add    al,0x0
   140054960:	(bad)  
   140054961:	(bad)  
   140054962:	(bad)  
   140054963:	(bad)  
   140054964:	ds cmc 
   140054966:	add    eax,DWORD PTR [rax]
   140054968:	(bad)  
   140054969:	rol    DWORD PTR [rcx],cl
   14005496b:	add    bh,bh
   14005496d:	(bad)  
   14005496e:	(bad)  
   14005496f:	call   QWORD PTR [rcx]
   140054971:	or     eax,0x62040001
   140054976:	add    BYTE PTR [rax],al
   140054978:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054979:	sub    al,0x3
   14005497b:	add    BYTE PTR [rax-0xfffb5c],dl
   140054981:	(bad)  
   140054982:	(bad)  
   140054983:	call   QWORD PTR [rsi-0xb]
   140054986:	add    eax,DWORD PTR [rax]
   140054988:	add    BYTE PTR [rdi],al
   14005498a:	add    al,0x0
   14005498c:	(bad)  
   14005498d:	(bad)  
   14005498e:	(bad)  
   14005498f:	call   QWORD PTR [rcx]
   140054991:	adc    eax,DWORD PTR [rdx]
   140054993:	add    BYTE PTR [rdx],cl
   140054995:	push   rdx
   140054996:	(bad)  
   140054997:	xor    BYTE PTR [rsp+rbp*1-0x5b3ffffd],ah
   14005499e:	add    al,0x0
   1400549a0:	(bad)  
   1400549a1:	(bad)  
   1400549a2:	(bad)  
   1400549a3:	(bad)  
   1400549a4:	cmp    al,BYTE PTR [rcx]
   1400549a6:	add    al,0x0
   1400549a8:	and    al,0xd3
   1400549aa:	add    DWORD PTR [rax],eax
   1400549ac:	(bad)  
   1400549ad:	(bad)  
   1400549ae:	(bad)  
   1400549af:	dec    DWORD PTR [rbx+rdx*8+0x1]
   1400549b3:	add    BYTE PTR [rax],al
   1400549b5:	add    BYTE PTR [rax],al
   1400549b7:	add    BYTE PTR [rcx],dl
   1400549b9:	adc    eax,DWORD PTR [rdx]
   1400549bb:	add    BYTE PTR [rdx],cl
   1400549bd:	push   rdx
   1400549be:	(bad)  
   1400549bf:	xor    BYTE PTR [rsp+rbp*1-0x5b0ffffd],ah
   1400549c6:	add    al,0x0
   1400549c8:	(bad)  
   1400549c9:	(bad)  
   1400549ca:	(bad)  
   1400549cb:	jmp    QWORD PTR [rdx]
   1400549cd:	cmc    
   1400549ce:	add    eax,DWORD PTR [rax]
   1400549d0:	add    BYTE PTR [rax],al
   1400549d2:	add    BYTE PTR [rax],al
   1400549d4:	cs cmc 
   1400549d6:	add    eax,DWORD PTR [rax]
   1400549d8:	loopne 0x1400549ac
   1400549da:	add    DWORD PTR [rax],eax
   1400549dc:	(bad)  
   1400549dd:	(bad)  
   1400549de:	(bad)  
   1400549df:	push   rsi
   1400549e1:	rol    BYTE PTR [rcx],cl
   1400549e3:	add    BYTE PTR [rax],al
   1400549e5:	add    BYTE PTR [rax],al
   1400549e7:	add    BYTE PTR [rax],al
   1400549e9:	rol    DWORD PTR [rcx],cl
   1400549eb:	add    bh,bh
   1400549ed:	(bad)  
   1400549ee:	(bad)  
   1400549ef:	call   QWORD PTR [rcx]
   1400549f1:	(bad)  
   1400549f2:	or     BYTE PTR [rax],al
   1400549f4:	(bad)  
   1400549f5:	push   rsp
   1400549f6:	or     al,0x0
   1400549f8:	sbb    esi,DWORD PTR [rbx+rcx*1]
   1400549fb:	add    BYTE PTR [rdi],cl
   1400549fd:	push   rdx
   1400549fe:	or     esp,eax
   140054a00:	or     DWORD PTR [rax+0x8],esi
   140054a03:	(bad)  
   140054a04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054a05:	sub    al,0x3
   140054a07:	add    BYTE PTR [rax],ah
   140054a09:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140054a0a:	add    al,0x0
   140054a0c:	(bad)  
   140054a0d:	(bad)  
   140054a0e:	(bad)  
   140054a0f:	dec    DWORD PTR [rip+0x200003fc]        # 0x160054e11
   140054a15:	sbb    DWORD PTR [rdx],eax
   140054a17:	add    bh,bh
   140054a19:	(bad)  
   140054a1a:	(bad)  
   140054a1b:	jmp    QWORD PTR [rcx+0x19]
   140054a1e:	add    al,BYTE PTR [rax]
   140054a20:	add    BYTE PTR [rax],al
   140054a22:	add    BYTE PTR [rax],al
   140054a24:	(bad)  
   140054a25:	sbb    DWORD PTR [rdx],eax
   140054a27:	add    bh,bh
   140054a29:	(bad)  
   140054a2a:	(bad)  
   140054a2b:	(bad)  
   140054a2c:	out    dx,eax
   140054a2d:	sbb    DWORD PTR [rdx],eax
   140054a2f:	add    BYTE PTR [rax],al
   140054a31:	add    BYTE PTR [rax],al
   140054a33:	add    dl,bh
   140054a35:	sbb    DWORD PTR [rdx],eax
   140054a37:	add    bh,bh
   140054a39:	(bad)  
   140054a3a:	(bad)  
   140054a3b:	call   QWORD PTR [rcx]
   140054a3d:	sbb    al,0x7
   140054a3f:	add    BYTE PTR [rbx],dl
   140054a41:	add    DWORD PTR [rsi],ebx
   140054a43:	add    BYTE PTR [rdi],al
   140054a45:	loopne 0x140054a4c
   140054a47:	jo     0x140054a4d
   140054a49:	(bad)  
   140054a4a:	add    esi,DWORD PTR [rax]
   140054a4c:	add    dl,BYTE PTR [rax+0x0]
   140054a4f:	add    BYTE PTR [rsp+rbp*1-0x5aaffffd],ah
   140054a56:	add    al,0x0
   140054a58:	(bad)  
   140054a59:	(bad)  
   140054a5a:	(bad)  
   140054a5b:	call   rax
   140054a5d:	cld    
   140054a5e:	add    eax,DWORD PTR [rax]
   140054a60:	(bad)  
   140054a61:	(bad)  
   140054a62:	(bad)  
   140054a63:	(bad)  
   140054a64:	fdiv   st(4),st
   140054a66:	add    eax,DWORD PTR [rax]
   140054a68:	(bad)  
   140054a69:	(bad)  
   140054a6a:	(bad)  
   140054a6b:	(bad)  
   140054a6c:	call   0x13f054e6d
   140054a71:	(bad)  
   140054a72:	(bad)  
   140054a73:	push   rsp
   140054a75:	cld    
   140054a76:	add    eax,DWORD PTR [rax]
   140054a78:	lock or al,0x2
   140054a7b:	add    bh,bh
   140054a7d:	(bad)  
   140054a7e:	(bad)  
   140054a7f:	push   QWORD PTR [rip+0x20d]        # 0x140054c92
   140054a85:	add    BYTE PTR [rax],al
   140054a87:	add    BYTE PTR [rbx-0xfffdf3],cl
   140054a8d:	(bad)  
   140054a8e:	(bad)  
   140054a8f:	(bad)  
   140054a90:	fmul   QWORD PTR [rip+0x10002]        # 0x140064a98
   140054a96:	add    BYTE PTR [rax],al
   140054a98:	xor    ecx,DWORD PTR [rsi]
   140054a9a:	add    al,BYTE PTR [rax]
   140054a9c:	(bad)  
   140054a9d:	(bad)  
   140054a9e:	(bad)  
   140054a9f:	dec    ecx
   140054aa1:	(bad)  
   140054aa2:	add    al,BYTE PTR [rax]
   140054aa4:	add    al,BYTE PTR [rax]
   140054aa6:	add    BYTE PTR [rax],al
   140054aa8:	and    BYTE PTR [rdi],cl
   140054aaa:	add    al,BYTE PTR [rax]
   140054aac:	(bad)  
   140054aad:	(bad)  
   140054aae:	(bad)  
   140054aaf:	dec    DWORD PTR [rbp+0xf]
   140054ab2:	add    al,BYTE PTR [rax]
   140054ab4:	add    eax,DWORD PTR [rax]
   140054ab6:	add    BYTE PTR [rax],al
   140054ab8:	movabs ds:0x19ffffffff00020f,eax
   140054ac1:	(bad)  
   140054ac2:	(bad)  
   140054ac3:	add    BYTE PTR [rcx],bl
   140054ac5:	xor    al,0x14
   140054ac7:	add    BYTE PTR [rip+0x57006d2],cl        # 0x14575519f
   140054acd:	(bad)  
   140054ace:	add    al,0x50
   140054ad0:	jl     0x140054a5d
   140054ad2:	add    eax,DWORD PTR [rax]
   140054ad4:	and    BYTE PTR [rbp+0x620004],0x0
   140054adb:	add    bh,bh
   140054add:	(bad)  
   140054ade:	(bad)  
   140054adf:	call   FWORD PTR [rsi-0x1a]
   140054ae2:	add    eax,DWORD PTR [rax]
   140054ae4:	(bad)  
   140054ae5:	(bad)  
   140054ae6:	(bad)  
   140054ae7:	jmp    FWORD PTR [rdx-0x1a]
   140054aea:	add    eax,DWORD PTR [rax]
   140054aec:	lods   al,BYTE PTR ds:[rsi]
   140054aed:	or     al,BYTE PTR [rdx]
   140054aef:	add    bh,bh
   140054af1:	(bad)  
   140054af2:	(bad)  
   140054af3:	jmp    FWORD PTR [rdi+0x20b]
   140054af9:	add    BYTE PTR [rax],al
   140054afb:	add    BYTE PTR [rax-0xfffdf4],dh
   140054b01:	(bad)  
   140054b02:	(bad)  
   140054b03:	call   QWORD PTR [rcx]
   140054b05:	or     eax,0x62040001
   140054b0a:	add    BYTE PTR [rax],al
   140054b0c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054b0d:	sub    al,0x3
   140054b0f:	add    BYTE PTR [rax-0xfffb5b],dh
   140054b15:	(bad)  
   140054b16:	(bad)  
   140054b17:	push   QWORD PTR [rcx]
   140054b19:	cld    
   140054b1a:	add    eax,DWORD PTR [rax]
   140054b1c:	(bad)  
   140054b1d:	(bad)  
   140054b1e:	(bad)  
   140054b1f:	(bad)  
   140054b20:	cmp    eax,0x940003fc
   140054b25:	or     BYTE PTR [rdx],al
   140054b27:	add    bh,bh
   140054b29:	(bad)  
   140054b2a:	(bad)  
   140054b2b:	dec    ecx
   140054b2d:	or     BYTE PTR [rdx],al
   140054b2f:	add    BYTE PTR [rax],al
   140054b31:	add    BYTE PTR [rax],al
   140054b33:	add    BYTE PTR [rax],ah
   140054b35:	or     DWORD PTR [rdx],eax
   140054b37:	add    bh,bh
   140054b39:	(bad)  
   140054b3a:	(bad)  
   140054b3b:	jmp    QWORD PTR [rdx+0x9]
   140054b3e:	add    al,BYTE PTR [rax]
   140054b40:	add    DWORD PTR [rax],eax
   140054b42:	add    BYTE PTR [rax],al
   140054b44:	mov    ecx,0xff000209
   140054b49:	(bad)  
   140054b4a:	(bad)  
   140054b4b:	call   QWORD PTR [rcx]
   140054b4d:	or     eax,0x62040001
   140054b52:	add    BYTE PTR [rax],al
   140054b54:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054b55:	sub    al,0x3
   140054b57:	add    al,ah
   140054b59:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140054b5a:	add    al,0x0
   140054b5c:	push   rax
   140054b5d:	(bad)  
   140054b5e:	add    al,BYTE PTR [rax]
   140054b60:	(bad)  
   140054b61:	(bad)  
   140054b62:	(bad)  
   140054b63:	inc    DWORD PTR [rbp+0x207]
   140054b69:	add    BYTE PTR [rax],al
   140054b6b:	add    ah,bl
   140054b6d:	(bad)  
   140054b6e:	add    al,BYTE PTR [rax]
   140054b70:	(bad)  
   140054b71:	(bad)  
   140054b72:	(bad)  
   140054b73:	call   FWORD PTR [rsi]
   140054b75:	or     BYTE PTR [rdx],al
   140054b77:	add    BYTE PTR [rcx],al
   140054b79:	add    BYTE PTR [rax],al
   140054b7b:	add    BYTE PTR [rbp+0x8],dh
   140054b7e:	add    al,BYTE PTR [rax]
   140054b80:	(bad)  
   140054b81:	(bad)  
   140054b82:	(bad)  
   140054b83:	call   QWORD PTR [rcx]
   140054b85:	lar    eax,WORD PTR [rax]
   140054b88:	(bad)  
   140054b89:	push   rdx
   140054b8a:	add    dh,BYTE PTR [rax]
   140054b8c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054b8d:	sub    al,0x3
   140054b8f:	add    BYTE PTR [rax],dl
   140054b91:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140054b92:	add    al,0x0
   140054b94:	(bad)  
   140054b95:	(bad)  
   140054b96:	(bad)  
   140054b97:	call   FWORD PTR [rcx]
   140054b99:	cld    
   140054b9a:	add    eax,DWORD PTR [rax]
   140054b9c:	adc    BYTE PTR [rbx],0x2
   140054b9f:	add    bh,bh
   140054ba1:	(bad)  
   140054ba2:	(bad)  
   140054ba3:	push   QWORD PTR [rsi+0x213]
   140054ba9:	add    BYTE PTR [rax],al
   140054bab:	add    BYTE PTR [rsp+rdx*1],cl
   140054bae:	add    al,BYTE PTR [rax]
   140054bb0:	(bad)  
   140054bb1:	(bad)  
   140054bb2:	(bad)  
   140054bb3:	inc    DWORD PTR [rcx]
   140054bb5:	sbb    BYTE PTR [rdx],cl
   140054bb7:	add    BYTE PTR [rax],bl
   140054bb9:	ltr    WORD PTR fs:[rax]
   140054bbd:	push   rsp
   140054bbe:	(bad)  
   140054bbf:	add    BYTE PTR [rax],bl
   140054bc1:	xor    al,0xc
   140054bc3:	add    BYTE PTR [rax],bl
   140054bc5:	jb     0x140054bdb
   140054bc7:	loopne 0x140054bdb
   140054bc9:	rcl    BYTE PTR [rax],0x70
   140054bcc:	adc    DWORD PTR [rsp+rax*1],edx
   140054bcf:	add    BYTE PTR [rsp+rsi*1],dl
   140054bd2:	or     al,0x0
   140054bd4:	(bad)  
   140054bd5:	jb     0x140054bd9
   140054bd7:	jo     0x140054b7d
   140054bd9:	sub    al,0x3
   140054bdb:	add    BYTE PTR [rax-0x5a],al
   140054bde:	add    al,0x0
   140054be0:	(bad)  
   140054be1:	(bad)  
   140054be2:	(bad)  
   140054be3:	call   FWORD PTR [rcx+rcx*8-0xfffd]
   140054bea:	(bad)  
   140054beb:	jmp    FWORD PTR [rax-0xfffc37]
   140054bf1:	(bad)  
   140054bf2:	(bad)  
   140054bf3:	inc    DWORD PTR [rax]
   140054bf5:	add    BYTE PTR [rax],al
   140054bf7:	add    bh,bh
   140054bf9:	(bad)  
   140054bfa:	(bad)  
   140054bfb:	inc    DWORD PTR [rax]
   140054bfd:	add    BYTE PTR [rax],al
   140054bff:	add    bh,bh
   140054c01:	(bad)  
   140054c02:	(bad)  
   140054c03:	push   QWORD PTR [rcx+rcx*8+0x153c0003]
   140054c0a:	add    al,BYTE PTR [rax]
   140054c0c:	(bad)  
   140054c0d:	(bad)  
   140054c0e:	(bad)  
   140054c0f:	jmp    FWORD PTR [rdx+0x15]
   140054c12:	add    al,BYTE PTR [rax]
   140054c14:	add    DWORD PTR [rax],eax
   140054c16:	add    BYTE PTR [rax],al
   140054c18:	movhps xmm0,QWORD PTR [rdx]
   140054c1b:	add    bh,bh
   140054c1d:	(bad)  
   140054c1e:	(bad)  
   140054c1f:	call   FWORD PTR [rcx]
   140054c21:	and    al,0x7
   140054c23:	add    BYTE PTR [rdx],dl
   140054c25:	rex.WXB add BYTE PTR fs:[r10],dl
   140054c29:	xor    al,0x4a
   140054c2b:	add    BYTE PTR [rdx],dl
   140054c2d:	add    DWORD PTR [rax+0x0],ecx
   140054c30:	or     esi,DWORD PTR [rax+0x0]
   140054c33:	add    BYTE PTR [riz*8+0x2300002],bh
   140054c3a:	add    BYTE PTR [rax],al
   140054c3c:	adc    DWORD PTR [rax+rcx*1],ebx
   140054c3f:	add    BYTE PTR [rsp+riz*2],bl
   140054c42:	or     eax,DWORD PTR [rax]
   140054c44:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140054c48:	adc    al,0x34
   140054c4a:	or     DWORD PTR [rax],eax
   140054c4c:	or     BYTE PTR [rdx+0x4],dl
   140054c4f:	jo     0x140054bf5
   140054c51:	sub    al,0x3
   140054c53:	add    BYTE PTR [rax-0x5a],dh
   140054c56:	add    al,0x0
   140054c58:	(bad)  
   140054c59:	(bad)  
   140054c5a:	(bad)  
   140054c5b:	jmp    QWORD PTR [rip+0xffffffffcc0003fc]        # 0x10c05505d
   140054c61:	lar    eax,WORD PTR [rax]
   140054c64:	(bad)  
   140054c65:	(bad)  
   140054c66:	(bad)  
   140054c67:	dec    DWORD PTR [rcx+0x210]
   140054c6d:	add    BYTE PTR [rax],al
   140054c6f:	add    al,ah
   140054c71:	adc    BYTE PTR [rdx],al
   140054c73:	add    bh,bh
   140054c75:	(bad)  
   140054c76:	(bad)  
   140054c77:	call   FWORD PTR [rcx]
   140054c79:	and    ecx,DWORD PTR [rax]
   140054c7b:	add    BYTE PTR [rsp+riz*2],dl
   140054c7e:	(bad)  
   140054c7f:	add    BYTE PTR [rsp+rdx*2],dl
   140054c82:	or     eax,0xc341400
   140054c87:	add    BYTE PTR [rdx+rdx*4],dl
   140054c8a:	adc    BYTE PTR [rax+0x3c],dh
   140054c8d:	in     eax,0x2
   140054c8f:	add    BYTE PTR [rax+0x0],al
   140054c92:	add    BYTE PTR [rax],al
   140054c94:	sbb    DWORD PTR [rcx],esp
   140054c96:	(bad)  
   140054c97:	add    BYTE PTR [rdi],cl
   140054c99:	xor    al,0x94
   140054c9b:	add    BYTE PTR [rdi],cl
   140054c9d:	add    DWORD PTR [rsi+0x7700800],ecx
   140054ca3:	(bad)  
   140054ca4:	(bad)  
   140054ca5:	push   rax
   140054ca6:	add    BYTE PTR [rax],al
   140054ca8:	cmp    al,0xe5
   140054caa:	add    al,BYTE PTR [rax]
   140054cac:	(bad)  
   140054cad:	add    al,0x0
   140054caf:	add    BYTE PTR [rcx],bl
   140054cb1:	xor    BYTE PTR [rcx],cl
   140054cb3:	add    BYTE PTR [rsi],bl
   140054cb5:	xor    al,0x58
   140054cb7:	add    BYTE PTR [rcx],dl
   140054cb9:	add    DWORD PTR [rdx+0x0],edx
   140054cbc:	or     dh,al
   140054cbe:	or     al,ah
   140054cc0:	(bad)  
   140054cc1:	jo     0x140054cc8
   140054cc3:	(bad)  
   140054cc4:	add    al,0x50
   140054cc6:	add    BYTE PTR [rax],al
   140054cc8:	jl     0x140054c55
   140054cca:	add    eax,DWORD PTR [rax]
   140054ccc:	movabs al,ds:0xff000002820004a6
   140054cd5:	(bad)  
   140054cd6:	(bad)  
   140054cd7:	inc    esp
   140054cd9:	cld    
   140054cda:	add    eax,DWORD PTR [rax]
   140054cdc:	adc    BYTE PTR [rcx],dl
   140054cde:	add    al,BYTE PTR [rax]
   140054ce0:	(bad)  
   140054ce1:	(bad)  
   140054ce2:	(bad)  
   140054ce3:	push   QWORD PTR [rbp+0x11]
   140054ce6:	add    al,BYTE PTR [rax]
   140054ce8:	add    BYTE PTR [rax],al
   140054cea:	add    BYTE PTR [rax],al
   140054cec:	int    0x11
   140054cee:	add    al,BYTE PTR [rax]
   140054cf0:	(bad)  
   140054cf1:	(bad)  
   140054cf2:	(bad)  
   140054cf3:	call   FWORD PTR [rcx]
   140054cf5:	(bad)  
   140054cf6:	(bad)  
   140054cf7:	add    BYTE PTR [rdi],bl
   140054cf9:	adc    eax,DWORD PTR fs:[rax]
   140054cfc:	sbb    esi,DWORD PTR [rdx+rdx*1]
   140054cff:	add    BYTE PTR [rdi],cl
   140054d01:	repnz or BYTE PTR [rax-0x5c],dh
   140054d05:	sub    al,0x3
   140054d07:	add    al,dl
   140054d09:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140054d0a:	add    al,0x0
   140054d0c:	(bad)  
   140054d0d:	(bad)  
   140054d0e:	(bad)  
   140054d0f:	inc    DWORD PTR [rax]
   140054d11:	add    BYTE PTR [rax],al
   140054d13:	add    BYTE PTR [rax],al
   140054d15:	add    BYTE PTR [rax],al
   140054d17:	add    BYTE PTR [rcx-0x4],cl
   140054d1a:	add    eax,DWORD PTR [rax]
   140054d1c:	(bad)  
   140054d1d:	(bad)  
   140054d1e:	(bad)  
   140054d1f:	inc    DWORD PTR [rax]
   140054d21:	add    BYTE PTR [rax],al
   140054d23:	add    BYTE PTR [rax],al
   140054d25:	add    BYTE PTR [rax],al
   140054d27:	add    BYTE PTR [rcx],al
   140054d29:	add    BYTE PTR [rax],al
   140054d2b:	add    BYTE PTR [rdx],al
   140054d2d:	add    BYTE PTR [rax],al
   140054d2f:	add    BYTE PTR [rdx],al
   140054d31:	add    BYTE PTR [rax],al
   140054d33:	add    BYTE PTR [rax],bh
   140054d35:	rex.WRB add rax,0x800
   140054d3b:	add    BYTE PTR [rax-0x4f],cl
   140054d3e:	add    eax,0x4800
   140054d43:	add    BYTE PTR [rbp-0x4],dl
   140054d46:	add    eax,DWORD PTR [rax]
   140054d48:	pop    rax
	...
   140054d55:	add    BYTE PTR [rax],al
   140054d57:	add    BYTE PTR [rcx+0x580003fc],ch
   140054d5d:	add    BYTE PTR [rax],al
   140054d5f:	add    BYTE PTR [rax],dh
   140054d61:	(bad)  
   140054d62:	add    al,BYTE PTR [rax]
   140054d64:	(bad)  
   140054d65:	(bad)  
   140054d66:	(bad)  
   140054d67:	jmp    QWORD PTR [rsi+0x17]
   140054d6a:	add    al,BYTE PTR [rax]
   140054d6c:	add    BYTE PTR [rax],al
   140054d6e:	add    BYTE PTR [rax],al
   140054d70:	stc    
   140054d71:	(bad)  
   140054d72:	add    al,BYTE PTR [rax]
   140054d74:	add    DWORD PTR [rax],eax
   140054d76:	add    BYTE PTR [rax],al
   140054d78:	or     al,0x18
   140054d7a:	add    al,BYTE PTR [rax]
   140054d7c:	add    BYTE PTR [rax],al
   140054d7e:	add    BYTE PTR [rax],al
   140054d80:	and    ebx,DWORD PTR [rax]
   140054d82:	add    al,BYTE PTR [rax]
   140054d84:	(bad)  
   140054d85:	(bad)  
   140054d86:	(bad)  
   140054d87:	push   QWORD PTR [rcx]
   140054d89:	sbb    BYTE PTR [rdx],al
   140054d8b:	add    BYTE PTR [rax],al
   140054d8d:	add    BYTE PTR [rax],al
   140054d8f:	add    BYTE PTR [rdx-0x4],ah
   140054d92:	add    eax,DWORD PTR [rax]
   140054d94:	add    al,BYTE PTR [rax]
   140054d96:	add    BYTE PTR [rax],al
   140054d98:	fwait
   140054d99:	cld    
   140054d9a:	add    eax,DWORD PTR [rax]
   140054d9c:	add    BYTE PTR [rax],al
   140054d9e:	add    BYTE PTR [rax],al
   140054da0:	sbb    DWORD PTR [rdx],ecx
   140054da2:	add    al,BYTE PTR [rax]
   140054da4:	or     dh,BYTE PTR [rdx+0x6]
   140054da7:	push   rax
   140054da8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054da9:	sub    al,0x3
   140054dab:	add    al,dl
   140054dad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140054dae:	add    al,0x0
   140054db0:	adc    DWORD PTR [rip+0x3425000a],esp        # 0x1742a4dc0
   140054db6:	(bad)  
   140054db7:	add    BYTE PTR [rcx],bl
   140054db9:	rcl    BYTE PTR [rdx],cl
   140054dbb:	lock adc al,ah
   140054dbe:	(bad)  
   140054dbf:	ror    BYTE PTR [rax+rax*8],1
   140054dc2:	or     dh,BYTE PTR [rax+0x9]
   140054dc5:	(bad)  
   140054dc6:	or     BYTE PTR [rax-0x5c],dl
   140054dc9:	sub    al,0x3
   140054dcb:	add    BYTE PTR [rax],al
   140054dcd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140054dce:	add    al,0x0
   140054dd0:	(bad)  
   140054dd1:	(bad)  
   140054dd2:	(bad)  
   140054dd3:	inc    DWORD PTR [rax]
   140054dd5:	std    
   140054dd6:	add    eax,DWORD PTR [rax]
   140054dd8:	cmp    al,0x29
   140054dda:	add    al,BYTE PTR [rax]
   140054ddc:	(bad)  
   140054ddd:	(bad)  
   140054dde:	(bad)  
   140054ddf:	dec    DWORD PTR [rax+0x229]
   140054de5:	add    BYTE PTR [rax],al
   140054de7:	add    BYTE PTR [rdx],al
   140054de9:	sub    eax,DWORD PTR [rdx]
   140054deb:	add    bh,bh
   140054ded:	(bad)  
   140054dee:	(bad)  
   140054def:	call   FWORD PTR [rcx]
   140054df1:	sub    BYTE PTR [rdi],al
   140054df3:	add    BYTE PTR [rdi],dl
   140054df5:	xor    al,0x87
   140054df7:	add    BYTE PTR [rdi],dl
   140054df9:	add    DWORD PTR [rdx+0x7700800],eax
   140054dff:	(bad)  
   140054e00:	(bad)  
   140054e01:	push   rax
   140054e02:	add    BYTE PTR [rax],al
   140054e04:	cmp    al,0xe5
   140054e06:	add    al,BYTE PTR [rax]
   140054e08:	add    BYTE PTR [rax+rax*1],al
   140054e0b:	add    BYTE PTR [rcx],bl
   140054e0d:	(bad)  
   140054e0e:	add    eax,0x43340d00
   140054e13:	add    BYTE PTR [rip+0x6004001],cl        # 0x146058e1a
   140054e19:	jo     0x140054e1b
   140054e1b:	add    BYTE PTR [riz*8+0x1f00002],bh
   140054e22:	add    BYTE PTR [rax],al
   140054e24:	sbb    DWORD PTR [rax],ebp
   140054e26:	(bad)  
   140054e27:	add    BYTE PTR [rdi],dl
   140054e29:	xor    al,0x85
   140054e2b:	add    BYTE PTR [rdi],dl
   140054e2d:	add    DWORD PTR [rax+0x7700800],eax
   140054e33:	(bad)  
   140054e34:	(bad)  
   140054e35:	push   rax
   140054e36:	add    BYTE PTR [rax],al
   140054e38:	cmp    al,0xe5
   140054e3a:	add    al,BYTE PTR [rax]
   140054e3c:	lock add eax,DWORD PTR [rax]
   140054e3f:	add    BYTE PTR [rcx],bl
   140054e41:	sub    eax,DWORD PTR [rdi]
   140054e43:	add    BYTE PTR [rdx],bl
   140054e45:	je     0x140054eb7
   140054e47:	add    BYTE PTR [rdx],bl
   140054e49:	xor    al,0x6f
   140054e4b:	add    BYTE PTR [rdx],bl
   140054e4d:	add    DWORD PTR [rax+rax*1+0xb],ebp
   140054e51:	push   rax
   140054e52:	add    BYTE PTR [rax],al
   140054e54:	cmp    al,0xe5
   140054e56:	add    al,BYTE PTR [rax]
   140054e58:	push   rax
   140054e59:	add    eax,DWORD PTR [rax]
   140054e5b:	add    BYTE PTR [rcx],al
   140054e5d:	or     BYTE PTR [rdx],al
   140054e5f:	add    BYTE PTR [rax],cl
   140054e61:	jb     0x140054e67
   140054e63:	xor    BYTE PTR [rcx],bl
   140054e65:	(bad)  
   140054e66:	or     DWORD PTR [rax],eax
   140054e68:	(bad)  
   140054e69:	je     0x140054edc
   140054e6b:	add    BYTE PTR [rsi],bl
   140054e6d:	fs jo  0x140054e70
   140054e70:	(bad)  
   140054e71:	xor    al,0x6f
   140054e73:	add    BYTE PTR [rsi],bl
   140054e75:	add    DWORD PTR [rax+rax*1+0x10],ebp
   140054e79:	push   rax
   140054e7a:	add    BYTE PTR [rax],al
   140054e7c:	cmp    al,0xe5
   140054e7e:	add    al,BYTE PTR [rax]
   140054e80:	push   rax
   140054e81:	add    eax,DWORD PTR [rax]
   140054e83:	add    BYTE PTR [rcx],bl
   140054e85:	sub    ecx,DWORD PTR [rcx]
   140054e87:	add    BYTE PTR [rdx],bl
   140054e89:	add    DWORD PTR [rax+rax*1-0x1ff60ff5],ebx
   140054e90:	(bad)  
   140054e91:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143655308
   140054e98:	add    dl,BYTE PTR [rax+0x0]
   140054e9b:	add    BYTE PTR [riz*8+0x4d00002],bh
   140054ea2:	add    BYTE PTR [rax],al
   140054ea4:	add    DWORD PTR [rax],ecx
   140054ea6:	add    al,0x0
   140054ea8:	or     BYTE PTR [rdx+0x4],dl
   140054eab:	jo     0x140054eb0
   140054ead:	(bad)  
   140054eae:	add    dh,BYTE PTR [rax]
   140054eb0:	add    DWORD PTR [rdi],eax
   140054eb2:	add    eax,DWORD PTR [rax]
   140054eb4:	(bad)  
   140054eb5:	(bad)  
   140054eb7:	jo     0x140054ebb
   140054eb9:	xor    BYTE PTR [rax],al
   140054ebb:	add    BYTE PTR [rcx],bl
   140054ebd:	xor    DWORD PTR [rip+0x1fd42300],ecx        # 0x15fd971c3
   140054ec3:	add    BYTE PTR [rbx],ah
   140054ec5:	je     0x140054ee5
   140054ec7:	add    BYTE PTR [rbx],ah
   140054ec9:	fs sbb eax,0x1c342300
   140054ecf:	add    BYTE PTR [rbx],ah
   140054ed1:	add    DWORD PTR [rax],ebx
   140054ed3:	add    BYTE PTR [rax],bl
   140054ed5:	lock (bad) 
   140054ed7:	loopne 0x140054eed
   140054ed9:	push   rax
   140054eda:	add    BYTE PTR [rax],al
   140054edc:	cmp    al,0xe5
   140054ede:	add    al,BYTE PTR [rax]
   140054ee0:	mov    al,0x0
   140054ee2:	add    BYTE PTR [rax],al
   140054ee4:	add    DWORD PTR [rcx+rax*1],eax
   140054ee7:	add    BYTE PTR [rdx+rax*4],al
   140054eea:	add    BYTE PTR [rax],al
   140054eec:	sbb    DWORD PTR [rdi],edx
   140054eee:	add    DWORD PTR [rax],eax
   140054ef0:	(bad)  
   140054ef1:	(bad)  
   140054ef2:	add    BYTE PTR [rax],al
   140054ef4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054ef5:	sub    al,0x3
   140054ef7:	add    BYTE PTR [rax],dh
   140054ef9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140054efa:	add    al,0x0
   140054efc:	(bad)  
   140054efd:	(bad)  
   140054efe:	(bad)  
   140054eff:	inc    DWORD PTR [rax]
   140054f01:	add    BYTE PTR [rax],al
   140054f03:	add    BYTE PTR [rax],al
   140054f05:	add    BYTE PTR [rax],al
   140054f07:	add    BYTE PTR [rbx],ah
   140054f09:	std    
   140054f0a:	add    eax,DWORD PTR [rax]
   140054f0c:	(bad)  
   140054f0d:	(bad)  
   140054f0e:	(bad)  
   140054f0f:	inc    DWORD PTR [rax]
   140054f11:	add    BYTE PTR [rax],al
   140054f13:	add    BYTE PTR [rax],al
   140054f15:	add    BYTE PTR [rax],al
   140054f17:	add    BYTE PTR [rcx],al
   140054f19:	add    BYTE PTR [rax],al
   140054f1b:	add    BYTE PTR [rdx],al
   140054f1d:	add    BYTE PTR [rax],al
   140054f1f:	add    BYTE PTR [rcx],al
   140054f21:	add    BYTE PTR [rax],al
   140054f23:	add    BYTE PTR [rax],ch
   140054f25:	rex.WRXB add rax,0x0
	...
   140054f33:	add    BYTE PTR [rdi],bh
   140054f35:	std    
   140054f36:	add    eax,DWORD PTR [rax]
   140054f38:	cmp    BYTE PTR [rax],al
   140054f3a:	add    BYTE PTR [rax],al
   140054f3c:	cmp    BYTE PTR [rdi+0x2],al
   140054f3f:	add    bh,bh
   140054f41:	(bad)  
   140054f42:	(bad)  
   140054f43:	dec    DWORD PTR [rdi+0x47]
   140054f46:	add    al,BYTE PTR [rax]
   140054f48:	add    BYTE PTR [rax],al
   140054f4a:	add    BYTE PTR [rax],al
   140054f4c:	pop    rcx
   140054f4d:	rex.RXB add r8b,BYTE PTR [r8]
   140054f50:	add    DWORD PTR [rax],eax
   140054f52:	add    BYTE PTR [rax],al
   140054f54:	jl     0x140054f9d
   140054f56:	add    al,BYTE PTR [rax]
   140054f58:	add    BYTE PTR [rax],al
   140054f5a:	add    BYTE PTR [rax],al
   140054f5c:	nop
   140054f5d:	rex.RXB add r8b,BYTE PTR [r8]
   140054f60:	(bad)  
   140054f61:	(bad)  
   140054f62:	(bad)  
   140054f63:	(bad)  
   140054f64:	(bad)  
   140054f65:	std    
   140054f66:	add    eax,DWORD PTR [rax]
   140054f68:	add    BYTE PTR [rax],al
   140054f6a:	add    BYTE PTR [rax],al
   140054f6c:	rex.WR std 
   140054f6e:	add    eax,DWORD PTR [rax]
   140054f70:	add    al,BYTE PTR [rax]
   140054f72:	add    BYTE PTR [rax],al
   140054f74:	sbb    DWORD PTR [rdx],ecx
   140054f76:	add    al,BYTE PTR [rax]
   140054f78:	or     dh,BYTE PTR [rdx]
   140054f7a:	(bad)  
   140054f7b:	push   rax
   140054f7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054f7d:	sub    al,0x3
   140054f7f:	add    BYTE PTR [rax],dh
   140054f81:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140054f82:	add    al,0x0
   140054f84:	sbb    DWORD PTR [rdi],edx
   140054f86:	add    DWORD PTR [rax],eax
   140054f88:	punpckldq mm0,DWORD PTR [rax]
   140054f8b:	add    BYTE PTR [rsp+rbp*1-0x589ffffd],ah
   140054f92:	add    al,0x0
	...
   140054f9c:	add    DWORD PTR [rax],eax
   140054f9e:	add    BYTE PTR [rax],al
   140054fa0:	add    DWORD PTR [rax],eax
   140054fa2:	add    BYTE PTR [rax],al
   140054fa4:	test   al,0x4f
   140054fa6:	add    eax,0x0
	...
   140054fb3:	add    BYTE PTR [rdi*8+0x380003],cl
   140054fba:	add    BYTE PTR [rax],al
   140054fbc:	in     al,dx
   140054fbd:	rex.RX add r8b,BYTE PTR [rax]
   140054fc0:	(bad)  
   140054fc1:	(bad)  
   140054fc2:	(bad)  
   140054fc3:	inc    DWORD PTR [rbx]
   140054fc5:	rex.RXB add r8b,BYTE PTR [r8]
   140054fc8:	add    BYTE PTR [rax],al
   140054fca:	add    BYTE PTR [rax],al
   140054fcc:	(bad)  
   140054fcd:	rex.RXB add r8b,BYTE PTR [r8]
   140054fd0:	(bad)  
   140054fd1:	(bad)  
   140054fd2:	(bad)  
   140054fd3:	dec    DWORD PTR [rdi*8+0x3]
   140054fda:	add    BYTE PTR [rax],al
   140054fdc:	sbb    ebp,edi
   140054fde:	add    eax,DWORD PTR [rax]
   140054fe0:	add    DWORD PTR [rax],eax
   140054fe2:	add    BYTE PTR [rax],al
   140054fe4:	sbb    DWORD PTR [rdx],ecx
   140054fe6:	add    al,BYTE PTR [rax]
   140054fe8:	or     dh,BYTE PTR [rdx]
   140054fea:	(bad)  
   140054feb:	push   rax
   140054fec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140054fed:	sub    al,0x3
   140054fef:	add    BYTE PTR [rax-0x59],ah
   140054ff2:	add    al,0x0
   140054ff4:	sbb    DWORD PTR [rip+0x741d0008],ebx        # 0x1b4225002
   140054ffa:	or     eax,0xc641900
   140054fff:	add    BYTE PTR [rip+0x9000a34],dl        # 0x149055a39
   140055005:	jb     0x14005500c
   140055007:	loopne 0x140054fad
   140055009:	sub    al,0x3
   14005500b:	add    BYTE PTR [rax+0x4a7],dl
   140055011:	add    BYTE PTR [rax],al
   140055013:	add    BYTE PTR [rax],al
   140055015:	add    BYTE PTR [rax],al
   140055017:	add    BYTE PTR [rcx],al
   140055019:	add    BYTE PTR [rax],al
   14005501b:	add    BYTE PTR [rcx],al
   14005501d:	add    BYTE PTR [rax],al
   14005501f:	add    BYTE PTR [rax+rdx*2],ah
   140055022:	add    eax,0x0
	...
   14005502f:	add    al,dl
   140055031:	inc    BYTE PTR [rbx]
   140055033:	add    BYTE PTR [rax+0x0],cl
   140055036:	add    BYTE PTR [rax],al
   140055038:	cmp    al,0x46
   14005503a:	add    al,BYTE PTR [rax]
   14005503c:	(bad)  
   14005503d:	(bad)  
   14005503e:	(bad)  
   14005503f:	call   FWORD PTR [rcx+0x246]
   140055045:	add    BYTE PTR [rax],al
   140055047:	add    BYTE PTR [rcx-0xfffdba],ch
   14005504d:	(bad)  
   14005504e:	(bad)  
   14005504f:	call   rax
   140055051:	inc    BYTE PTR [rbx]
   140055053:	add    BYTE PTR [rax],al
   140055055:	add    BYTE PTR [rax],al
   140055057:	add    ch,bl
   140055059:	inc    BYTE PTR [rbx]
   14005505b:	add    BYTE PTR [rcx],al
   14005505d:	add    BYTE PTR [rax],al
   14005505f:	add    BYTE PTR [rcx],bl
   140055061:	or     al,BYTE PTR [rdx]
   140055063:	add    BYTE PTR [rdx],cl
   140055065:	push   rdx
   140055066:	(bad)  
   140055067:	push   rax
   140055068:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055069:	sub    al,0x3
   14005506b:	add    BYTE PTR [rax+0x110004a7],dl
   140055071:	adc    al,0x4
   140055073:	add    BYTE PTR [rsp+rsi*1],dl
   140055076:	or     al,BYTE PTR [rax]
   140055078:	(bad)  
   140055079:	push   rdx
   14005507a:	add    dh,BYTE PTR [rax-0x5c]
   14005507d:	sub    al,0x3
   14005507f:	add    al,al
   140055081:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055082:	add    al,0x0
   140055084:	mov    BYTE PTR [rdx+rax*1+0x0],al
   140055088:	(bad)  
   140055089:	(bad)  
   14005508a:	(bad)  
   14005508b:	inc    DWORD PTR [rcx+0x45]
   14005508e:	add    al,BYTE PTR [rax]
   140055090:	add    BYTE PTR [rax],al
   140055092:	add    BYTE PTR [rax],al
   140055094:	add    r8b,BYTE PTR fs:[r8]
   140055098:	(bad)  
   140055099:	(bad)  
   14005509a:	(bad)  
   14005509b:	call   FWORD PTR [rcx]
   14005509d:	sbb    al,0x6
   14005509f:	add    BYTE PTR [rsp+riz*2],bl
   1400550a2:	or     al,0x0
   1400550a4:	sbb    BYTE PTR [rbx+rcx*1],dh
   1400550a7:	add    BYTE PTR [rdx+rsi*2],cl
   1400550aa:	or     BYTE PTR [rax-0x5c],dh
   1400550ad:	sub    al,0x3
   1400550af:	add    al,dh
   1400550b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400550b2:	add    al,0x0
	...
   1400550bc:	add    DWORD PTR [rax],eax
   1400550be:	add    BYTE PTR [rax],al
   1400550c0:	add    DWORD PTR [rax],eax
   1400550c2:	add    BYTE PTR [rax],al
   1400550c4:	enter  0x550,0x0
	...
   1400550d4:	push   rsi
   1400550d5:	std    
   1400550d6:	add    eax,DWORD PTR [rax]
   1400550d8:	pop    rax
   1400550d9:	add    BYTE PTR [rax],al
   1400550db:	add    BYTE PTR [rbx+rax*2],cl
   1400550de:	add    al,BYTE PTR [rax]
   1400550e0:	(bad)  
   1400550e1:	(bad)  
   1400550e2:	(bad)  
   1400550e3:	dec    DWORD PTR [rdx+0x243]
   1400550e9:	add    BYTE PTR [rax],al
   1400550eb:	add    BYTE PTR [rbp-0xfffdbd],bl
   1400550f1:	(bad)  
   1400550f2:	(bad)  
   1400550f3:	call   QWORD PTR [rsi-0x3]
   1400550f6:	add    eax,DWORD PTR [rax]
   1400550f8:	add    BYTE PTR [rax],al
   1400550fa:	add    BYTE PTR [rax],al
   1400550fc:	fs std 
   1400550fe:	add    eax,DWORD PTR [rax]
   140055100:	add    DWORD PTR [rax],eax
   140055102:	add    BYTE PTR [rax],al
   140055104:	sbb    DWORD PTR [rbx],ecx
   140055106:	add    eax,DWORD PTR [rax]
   140055108:	or     esp,DWORD PTR [rdx+0x7]
   14005510b:	push   rax
   14005510c:	(bad)  
   14005510d:	xor    BYTE PTR [rax],al
   14005510f:	add    BYTE PTR [rsp+rbp*1-0x580ffffd],ah
   140055116:	add    al,0x0
   140055118:	adc    DWORD PTR [rsi+rax*1],ebx
   14005511b:	add    BYTE PTR [rsp+riz*2],bl
   14005511e:	or     al,BYTE PTR [rax]
   140055120:	sbb    BYTE PTR [rcx+rcx*1],dh
   140055123:	add    BYTE PTR [rdx+rdx*2],cl
   140055126:	or     BYTE PTR [rax-0x5c],dh
   140055129:	sub    al,0x3
   14005512b:	add    BYTE PTR [rax],ah
   14005512d:	test   al,0x4
   14005512f:	add    bh,bh
   140055131:	(bad)  
   140055132:	(bad)  
   140055133:	call   rbp
   140055135:	std    
   140055136:	add    eax,DWORD PTR [rax]
   140055138:	add    BYTE PTR [rax],al
   14005513a:	add    BYTE PTR [rax],al
   14005513c:	loope  0x14005513b
   14005513e:	add    eax,DWORD PTR [rax]
   140055140:	add    DWORD PTR [rax],eax
   140055142:	add    BYTE PTR [rax],al
   140055144:	icebp  
   140055145:	std    
   140055146:	add    eax,DWORD PTR [rax]
   140055148:	add    al,BYTE PTR [rax]
   14005514a:	add    BYTE PTR [rax],al
   14005514c:	add    esi,edi
   14005514e:	add    eax,DWORD PTR [rax]
   140055150:	cld    
   140055151:	add    al,BYTE PTR [r8]
   140055154:	(bad)  
   140055155:	(bad)  
   140055156:	(bad)  
   140055157:	call   FWORD PTR [rip+0x2000242]        # 0x14205539f
   14005515d:	add    BYTE PTR [rax],al
   14005515f:	add    BYTE PTR [rdi],bh
   140055161:	rex.X add al,BYTE PTR [rax]
   140055164:	add    DWORD PTR [rax],eax
   140055166:	add    BYTE PTR [rax],al
   140055168:	pop    rcx
   140055169:	rex.X add al,BYTE PTR [rax]
   14005516c:	add    BYTE PTR [rax],al
   14005516e:	add    BYTE PTR [rax],al
   140055170:	jae    0x1400551b4
   140055172:	add    al,BYTE PTR [rax]
   140055174:	(bad)  
   140055175:	(bad)  
   140055176:	(bad)  
   140055177:	call   QWORD PTR [rcx]
   140055179:	or     BYTE PTR es:[rax],al
   14005517c:	es adc al,BYTE PTR fs:[rax]
   140055180:	and    dh,BYTE PTR [rcx+rdx*1]
   140055183:	add    BYTE PTR [rsi],dl
   140055185:	mov    dl,0xf
   140055187:	loopne 0x140055196
   140055189:	jo     0x140055197
   14005518b:	push   rax
   14005518c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005518d:	sub    al,0x3
   14005518f:	add    BYTE PTR [rax-0x58],dl
   140055192:	add    al,0x0
   140055194:	(bad)  
   140055195:	(bad)  
   140055196:	(bad)  
   140055197:	dec    DWORD PTR [rbp+0x3fd]
   14005519d:	add    BYTE PTR [rax],al
   14005519f:	add    BYTE PTR [rcx+0x10003fd],bl
   1400551a5:	add    BYTE PTR [rax],al
   1400551a7:	add    BYTE PTR [rcx+0x20003fd],ch
   1400551ad:	add    BYTE PTR [rax],al
   1400551af:	add    BYTE PTR [rcx+0x30003fd],bh
   1400551b5:	add    BYTE PTR [rax],al
   1400551b7:	add    cl,cl
   1400551b9:	std    
   1400551ba:	add    eax,DWORD PTR [rax]
   1400551bc:	nop
   1400551bd:	add    al,BYTE PTR [rax]
   1400551c0:	(bad)  
   1400551c1:	(bad)  
   1400551c2:	(bad)  
   1400551c3:	dec    edx
   1400551c5:	add    al,BYTE PTR [rax]
   1400551c8:	add    BYTE PTR [rax],al
   1400551ca:	add    BYTE PTR [rax],al
   1400551cc:	loopne 0x14005520e
   1400551ce:	add    al,BYTE PTR [rax]
   1400551d0:	add    DWORD PTR [rax],eax
   1400551d2:	add    BYTE PTR [rax],al
   1400551d4:	out    dx,eax
   1400551d5:	add    al,BYTE PTR [rax]
   1400551d8:	add    al,BYTE PTR [rax]
   1400551da:	add    BYTE PTR [rax],al
   1400551dc:	adc    BYTE PTR [rcx+0x2],al
   1400551df:	add    BYTE PTR [rbx],al
   1400551e1:	add    BYTE PTR [rax],al
   1400551e3:	add    BYTE PTR [rsi],dh
   1400551e5:	add    al,BYTE PTR [r8]
   1400551e8:	add    al,0x0
   1400551ea:	add    BYTE PTR [rax],al
   1400551ec:	rex.B
   1400551ed:	add    al,BYTE PTR [r8]
   1400551f0:	add    eax,DWORD PTR [rax]
   1400551f2:	add    BYTE PTR [rax],al
   1400551f4:	in     al,0x41
   1400551f6:	add    al,BYTE PTR [rax]
   1400551f8:	(bad)  
   1400551f9:	(bad)  
   1400551fa:	(bad)  
   1400551fb:	call   QWORD PTR [rcx]
   1400551fd:	and    ecx,DWORD PTR [rcx]
   1400551ff:	add    BYTE PTR [rbx],ah
   140055201:	in     al,0x16
   140055203:	add    BYTE PTR [rdi],bl
   140055205:	je     0x14005521c
   140055207:	add    BYTE PTR [rbx],bl
   140055209:	xor    al,0x14
   14005520b:	add    BYTE PTR [rdi],cl
   14005520d:	add    DWORD PTR [rdx],edx
   14005520f:	add    BYTE PTR [rax+rdx*2],al
   140055212:	add    BYTE PTR [rax],al
   140055214:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055215:	sub    al,0x3
   140055217:	add    BYTE PTR [rax-0xfffb58],al
   14005521d:	(bad)  
   14005521e:	(bad)  
   14005521f:	jmp    FWORD PTR [rsi+rdi*8+0x3db00003]
   140055226:	add    al,BYTE PTR [rax]
   140055228:	(bad)  
   140055229:	(bad)  
   14005522a:	(bad)  
   14005522b:	call   QWORD PTR [rdi]
   14005522d:	add    al,BYTE PTR ds:[rax]
   140055230:	add    BYTE PTR [rax],al
   140055232:	add    BYTE PTR [rax],al
   140055234:	push   0xffffffffff00023f
   140055239:	(bad)  
   14005523a:	(bad)  
   14005523b:	call   QWORD PTR [rcx]
   14005523d:	and    DWORD PTR [rax],ecx
   14005523f:	add    BYTE PTR [rcx],ah
   140055241:	fs (bad) 
   140055243:	add    BYTE PTR [rip+0x11001534],bl        # 0x15105677d
   140055249:	repnz (bad) 
   14005524b:	loopne 0x140055252
   14005524d:	jo     0x140055253
   14005524f:	push   rax
   140055250:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055251:	sub    al,0x3
   140055253:	add    BYTE PTR [rax-0xfffb58],dh
   140055259:	(bad)  
   14005525a:	(bad)  
   14005525b:	jmp    FWORD PTR [rbp-0x2]
   14005525e:	add    eax,DWORD PTR [rax]
   140055260:	sar    BYTE PTR [rbx],1
   140055262:	add    al,BYTE PTR [rax]
   140055264:	(bad)  
   140055265:	(bad)  
   140055266:	(bad)  
   140055267:	dec    DWORD PTR [rax]
   140055269:	cmp    al,0x2
   14005526b:	add    BYTE PTR [rax],al
   14005526d:	add    BYTE PTR [rax],al
   14005526f:	add    BYTE PTR [rdi+0x3d],dh
   140055272:	add    al,BYTE PTR [rax]
   140055274:	(bad)  
   140055275:	(bad)  
   140055276:	(bad)  
   140055277:	call   FWORD PTR [rcx]
   140055279:	xor    BYTE PTR [rcx],cl
   14005527b:	add    BYTE PTR [rdx],ah
   14005527d:	fs sbb al,0x0
   140055280:	(bad)  
   140055281:	xor    al,0x1b
   140055283:	add    BYTE PTR [rdx],dl
   140055285:	add    DWORD PTR [rsi],edx
   140055287:	add    BYTE PTR [rdi],al
   140055289:	loopne 0x140055290
   14005528b:	jo     0x140055291
   14005528d:	push   rax
   14005528e:	add    BYTE PTR [rax],al
   140055290:	jl     0x14005521d
   140055292:	add    eax,DWORD PTR [rax]
   140055294:	loopne 0x14005523e
   140055296:	add    al,0x0
   140055298:	stos   BYTE PTR es:[rdi],al
   140055299:	add    BYTE PTR [rax],al
   14005529b:	add    bh,bh
   14005529d:	(bad)  
   14005529e:	(bad)  
   14005529f:	(bad)  
   1400552a0:	mov    eax,0x3fe
   1400552a5:	add    BYTE PTR [rax],al
   1400552a7:	add    ah,al
   1400552a9:	inc    BYTE PTR [rbx]
   1400552ab:	add    BYTE PTR [rcx+rdi*1+0x2],cl
   1400552af:	add    bh,bh
   1400552b1:	(bad)  
   1400552b2:	(bad)  
   1400552b3:	inc    ecx
   1400552b5:	cmp    DWORD PTR [rdx],eax
   1400552b7:	add    BYTE PTR [rax],al
   1400552b9:	add    BYTE PTR [rax],al
   1400552bb:	add    BYTE PTR [rbx+0x3a],ah
   1400552be:	add    al,BYTE PTR [rax]
   1400552c0:	add    DWORD PTR [rax],eax
   1400552c2:	add    BYTE PTR [rax],al
   1400552c4:	(bad)  
   1400552c5:	cmp    eax,DWORD PTR [rdx]
   1400552c7:	add    BYTE PTR [rax],al
   1400552c9:	add    BYTE PTR [rax],al
   1400552cb:	add    BYTE PTR [rdi],bh
   1400552cd:	cmp    eax,DWORD PTR [rdx]
   1400552cf:	add    bh,bh
   1400552d1:	(bad)  
   1400552d2:	(bad)  
   1400552d3:	call   FWORD PTR [rcx]
   1400552d5:	xor    cl,BYTE PTR [rcx]
   1400552d7:	add    BYTE PTR [rsp+rsi*2],ah
   1400552da:	xor    DWORD PTR [rax],eax
   1400552dc:	and    BYTE PTR [rax+rsi*1+0x0],ah
   1400552e0:	sbb    al,0x34
   1400552e2:	(bad)  
   1400552e3:	add    BYTE PTR [rdi],cl
   1400552e5:	add    DWORD PTR [rax+rax*1],ebp
   1400552e8:	add    al,0x50
   1400552ea:	add    BYTE PTR [rax],al
   1400552ec:	jl     0x140055279
   1400552ee:	add    eax,DWORD PTR [rax]
   1400552f0:	adc    BYTE PTR [rcx+0x1520004],ch
   1400552f6:	add    BYTE PTR [rax],al
   1400552f8:	(bad)  
   1400552f9:	(bad)  
   1400552fa:	(bad)  
   1400552fb:	call   FWORD PTR [rip+0x3fe]        # 0x1400556ff
   140055301:	add    BYTE PTR [rax],al
   140055303:	add    BYTE PTR [rcx],ch
   140055305:	inc    BYTE PTR [rbx]
   140055307:	add    BYTE PTR [rcx],al
   140055309:	add    BYTE PTR [rax],al
   14005530b:	add    BYTE PTR [rip+0x10003fe],dh        # 0x14105570f
   140055311:	add    BYTE PTR [rax],al
   140055313:	add    BYTE PTR [rbp-0x2],al
   140055316:	add    eax,DWORD PTR [rax]
   140055318:	add    DWORD PTR [rax],eax
   14005531a:	add    BYTE PTR [rax],al
   14005531c:	push   rcx
   14005531d:	inc    BYTE PTR [rbx]
   14005531f:	add    BYTE PTR [rsi+rsi*1-0xfffe],bh
   140055326:	(bad)  
   140055327:	call   QWORD PTR [rdi+0x37]
   14005532a:	add    al,BYTE PTR [rax]
   14005532c:	add    BYTE PTR [rax],al
   14005532e:	add    BYTE PTR [rax],al
   140055330:	sbb    bh,BYTE PTR [rax]
   140055332:	add    al,BYTE PTR [rax]
   140055334:	add    DWORD PTR [rax],eax
   140055336:	add    BYTE PTR [rax],al
   140055338:	js     0x140055372
   14005533a:	add    al,BYTE PTR [rax]
   14005533c:	add    al,BYTE PTR [rax]
   14005533e:	add    BYTE PTR [rax],al
   140055340:	mov    ?,WORD PTR [rax]
   140055342:	add    al,BYTE PTR [rax]
   140055344:	add    eax,DWORD PTR [rax]
   140055346:	add    BYTE PTR [rax],al
   140055348:	repnz cmp BYTE PTR [rdx],al
   14005534b:	add    BYTE PTR [rcx],al
   14005534d:	add    BYTE PTR [rax],al
   14005534f:	add    ah,bh
   140055351:	cmp    BYTE PTR [rdx],al
   140055353:	add    BYTE PTR [rax],al
   140055355:	add    BYTE PTR [rax],al
   140055357:	add    BYTE PTR [rsi],al
   140055359:	cmp    DWORD PTR [rdx],eax
   14005535b:	add    bh,bh
   14005535d:	(bad)  
   14005535e:	(bad)  
   14005535f:	call   FWORD PTR [rcx]
   140055361:	xor    DWORD PTR [rcx],ecx
   140055363:	add    BYTE PTR [rbx],ah
   140055365:	je     0x14005537e
   140055367:	add    BYTE PTR [rdi],bl
   140055369:	fs (bad) 
   14005536b:	add    BYTE PTR [rbx],bl
   14005536d:	xor    al,0x15
   14005536f:	add    BYTE PTR [rdi],cl
   140055371:	add    DWORD PTR [rdx],edx
   140055373:	add    BYTE PTR [rax+rdx*2],al
   140055376:	add    BYTE PTR [rax],al
   140055378:	jl     0x140055305
   14005537a:	add    eax,DWORD PTR [rax]
   14005537c:	rex test eax,0x8a0004
   140055382:	add    BYTE PTR [rax],al
   140055384:	(bad)  
   140055385:	(bad)  
   140055386:	(bad)  
   140055387:	jmp    QWORD PTR [rcx-0x2]
   14005538a:	add    eax,DWORD PTR [rax]
   14005538c:	ins    BYTE PTR es:[rdi],dx
   14005538d:	xor    eax,0xffff0002
   140055392:	(bad)  
   140055393:	push   rdx
   140055395:	xor    eax,0x2
   14005539a:	add    BYTE PTR [rax],al
   14005539c:	nop
   14005539d:	add    al,BYTE PTR ss:[rax]
   1400553a0:	(bad)  
   1400553a1:	(bad)  
   1400553a2:	(bad)  
   1400553a3:	call   FWORD PTR [rcx]
   1400553a5:	sub    eax,0x741f0008
   1400553aa:	adc    eax,DWORD PTR [rax]
   1400553ac:	sbb    esp,DWORD PTR [rdx+rdx*1+0x0]
   1400553b0:	(bad)  
   1400553b1:	xor    al,0x11
   1400553b3:	add    BYTE PTR [rbx],cl
   1400553b5:	rol    BYTE PTR [rax+rdx*2],cl
   1400553b8:	jl     0x140055345
   1400553ba:	add    eax,DWORD PTR [rax]
   1400553bc:	jo     0x140055367
   1400553be:	add    al,0x0
   1400553c0:	push   0x0
   1400553c2:	add    BYTE PTR [rax],al
   1400553c4:	(bad)  
   1400553c5:	(bad)  
   1400553c6:	(bad)  
   1400553c7:	(bad)  
   1400553c8:	jns    0x1400553c8
   1400553ca:	add    eax,DWORD PTR [rax]
   1400553cc:	loopne 0x140055401
   1400553ce:	add    al,BYTE PTR [rax]
   1400553d0:	(bad)  
   1400553d1:	(bad)  
   1400553d2:	(bad)  
   1400553d3:	inc    DWORD PTR [rdx+0x34]
   1400553d6:	add    al,BYTE PTR [rax]
   1400553d8:	add    BYTE PTR [rax],al
   1400553da:	add    BYTE PTR [rax],al
   1400553dc:	es xor eax,0xffff0002
   1400553e2:	(bad)  
   1400553e3:	call   QWORD PTR [rcx]
   1400553e5:	adc    eax,DWORD PTR [rdx]
   1400553e7:	add    BYTE PTR [rdx],cl
   1400553e9:	push   rdx
   1400553ea:	(bad)  
   1400553eb:	xor    BYTE PTR [rsp+rbp*1-0x565ffffd],ah
   1400553f2:	add    al,0x0
   1400553f4:	(bad)  
   1400553f5:	(bad)  
   1400553f6:	(bad)  
   1400553f7:	call   QWORD PTR [rcx]
   1400553f9:	inc    BYTE PTR [rbx]
   1400553fb:	add    BYTE PTR [rax+0x33],cl
   1400553fe:	add    al,BYTE PTR [rax]
   140055400:	(bad)  
   140055401:	(bad)  
   140055402:	(bad)  
   140055403:	jmp    QWORD PTR [rbx+rsi*1+0x2]
   140055407:	add    BYTE PTR [rax],al
   140055409:	add    BYTE PTR [rax],al
   14005540b:	add    BYTE PTR [rsi+0x33],ch
   14005540e:	add    al,BYTE PTR [rax]
   140055410:	(bad)  
   140055411:	(bad)  
   140055412:	(bad)  
   140055413:	call   QWORD PTR [rcx]
   140055415:	adc    al,BYTE PTR [rcx]
   140055417:	add    BYTE PTR [rcx],cl
   140055419:	(bad)  
   14005541a:	add    BYTE PTR [rax],al
   14005541c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005541d:	sub    al,0x3
   14005541f:	add    al,dl
   140055421:	test   eax,0x332c0004
   140055426:	add    al,BYTE PTR [rax]
   140055428:	(bad)  
   140055429:	(bad)  
   14005542a:	(bad)  
   14005542b:	call   QWORD PTR [rcx]
   14005542d:	sbb    BYTE PTR [rax+rax*1],al
   140055430:	sbb    BYTE PTR [rcx+rcx*1],dh
   140055433:	add    BYTE PTR [rdx],cl
   140055435:	push   rdx
   140055436:	(bad)  
   140055437:	jo     0x1400553dd
   140055439:	sub    al,0x3
   14005543b:	add    BYTE PTR [rax],al
   14005543d:	stos   BYTE PTR es:[rdi],al
   14005543e:	add    al,0x0
   140055440:	in     al,dx
   140055441:	xor    al,BYTE PTR [rdx]
   140055443:	add    bh,bh
   140055445:	(bad)  
   140055446:	(bad)  
   140055447:	call   FWORD PTR [rcx]
   140055449:	sbb    BYTE PTR [rax+rax*1],al
   14005544c:	sbb    BYTE PTR [rdx+rcx*1],dh
   14005544f:	add    BYTE PTR [rdx],cl
   140055451:	jb     0x140055459
   140055453:	jo     0x1400553f9
   140055455:	sub    al,0x3
   140055457:	add    BYTE PTR [rax],dh
   140055459:	stos   BYTE PTR es:[rdi],al
   14005545a:	add    al,0x0
   14005545c:	(bad)  
   14005545d:	(bad)  
   14005545e:	(bad)  
   14005545f:	inc    DWORD PTR [rax]
   140055461:	add    BYTE PTR [rax],al
   140055463:	add    BYTE PTR [rax],al
   140055465:	add    BYTE PTR [rax],al
   140055467:	add    BYTE PTR [rbp-0xfffc02],al
   14005546d:	(bad)  
   14005546e:	(bad)  
   14005546f:	inc    DWORD PTR [rax]
   140055471:	add    BYTE PTR [rax],al
   140055473:	add    BYTE PTR [rax],al
   140055475:	add    BYTE PTR [rax],al
   140055477:	add    BYTE PTR [rcx],al
   140055479:	add    BYTE PTR [rax],al
   14005547b:	add    BYTE PTR [rdx],al
   14005547d:	add    BYTE PTR [rax],al
   14005547f:	add    BYTE PTR [rcx],al
   140055481:	add    BYTE PTR [rax],al
   140055483:	add    BYTE PTR [rax+0x8000554],cl
   140055489:	add    BYTE PTR [rax],al
   14005548b:	add    BYTE PTR [rax-0x4d],al
   14005548e:	add    eax,0x0
   140055493:	add    BYTE PTR [rcx+0x480003fe],dl
   140055499:	add    BYTE PTR [rax],al
   14005549b:	add    BYTE PTR [rax-0xfffdbe],ah
   1400554a1:	(bad)  
   1400554a2:	(bad)  
   1400554a3:	dec    ecx
   1400554a5:	rex.X add al,BYTE PTR [rax]
   1400554a8:	add    BYTE PTR [rax],al
   1400554aa:	add    BYTE PTR [rax],al
   1400554ac:	fild   DWORD PTR [rdx+0x2]
   1400554af:	add    BYTE PTR [rcx],al
   1400554b1:	add    BYTE PTR [rax],al
   1400554b3:	add    bl,ch
   1400554b5:	rex.X add al,BYTE PTR [rax]
   1400554b8:	add    BYTE PTR [rax],al
   1400554ba:	add    BYTE PTR [rax],al
   1400554bc:	sti    
   1400554bd:	rex.X add al,BYTE PTR [rax]
   1400554c0:	(bad)  
   1400554c1:	(bad)  
   1400554c2:	(bad)  
   1400554c3:	inc    DWORD PTR [rax]
   1400554c5:	rex.XB add al,BYTE PTR [r8]
   1400554c8:	add    BYTE PTR [rax],al
   1400554ca:	add    BYTE PTR [rax],al
   1400554cc:	sbb    DWORD PTR [rdx],ecx
   1400554ce:	add    al,BYTE PTR [rax]
   1400554d0:	or     dl,BYTE PTR [rdx+0x6]
   1400554d3:	push   rax
   1400554d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400554d5:	sub    al,0x3
   1400554d7:	add    BYTE PTR [rax],dh
   1400554d9:	stos   BYTE PTR es:[rdi],al
   1400554da:	add    al,0x0
   1400554dc:	add    DWORD PTR [rdi],ecx
   1400554de:	(bad)  
   1400554df:	add    BYTE PTR [rdi],cl
   1400554e1:	or     al,BYTE PTR fs:[rax]
   1400554e4:	sysenter 
   1400554e6:	or     DWORD PTR [rax],eax
   1400554e8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400554eb:	jo     0x1400554ee
   1400554ed:	or     al,0x4
   1400554ef:	add    BYTE PTR [rsp+rsi*1],cl
   1400554f2:	or     al,BYTE PTR [rax]
   1400554f4:	or     al,0x72
   1400554f6:	or     BYTE PTR [rax+0x19],dh
   1400554f9:	sub    DWORD PTR [rip+0x1a341b00],eax        # 0x15a396fff
   1400554ff:	add    BYTE PTR [rdi],cl
   140055501:	add    DWORD PTR [rax],ebx
   140055503:	add    BYTE PTR [rax+rdx*2],al
   140055506:	add    BYTE PTR [rax],al
   140055508:	jl     0x140055495
   14005550a:	add    eax,DWORD PTR [rax]
   14005550c:	(bad)  
   14005550d:	stos   BYTE PTR es:[rdi],al
   14005550e:	add    al,0x0
   140055510:	mov    dl,0x0
   140055512:	add    BYTE PTR [rax],al
   140055514:	(bad)  
   140055515:	(bad)  
   140055516:	(bad)  
   140055517:	push   rax
   140055519:	inc    BYTE PTR [rbx]
   14005551b:	add    bh,bh
   14005551d:	(bad)  
   14005551e:	(bad)  
   14005551f:	inc    DWORD PTR [rax]
   140055521:	inc    DWORD PTR [rbx]
   140055523:	add    bh,bh
   140055525:	(bad)  
   140055526:	(bad)  
   140055527:	inc    DWORD PTR [rax]
   140055529:	add    BYTE PTR [rax],al
   14005552b:	add    bh,bh
   14005552d:	(bad)  
   14005552e:	(bad)  
   14005552f:	inc    DWORD PTR [rax]
   140055531:	add    BYTE PTR [rax],al
   140055533:	add    bh,bh
   140055535:	(bad)  
   140055536:	(bad)  
   140055537:	inc    DWORD PTR [rax]
   140055539:	add    BYTE PTR [rax],al
   14005553b:	add    bh,bh
   14005553d:	(bad)  
   14005553e:	(bad)  
   14005553f:	dec    DWORD PTR [rdi+rdi*8]
   140055542:	add    eax,DWORD PTR [rax]
   140055544:	cwde   
   140055545:	rex.RXB add r8b,BYTE PTR [r8]
   140055548:	(bad)  
   140055549:	(bad)  
   14005554a:	(bad)  
   14005554b:	(bad)  
   14005554c:	fld    DWORD PTR [rdi+0x2]
   14005554f:	add    BYTE PTR [rax],al
   140055551:	add    BYTE PTR [rax],al
   140055553:	add    bh,ch
   140055555:	rex.RXB add r8b,BYTE PTR [r8]
   140055558:	add    DWORD PTR [rax],eax
   14005555a:	add    BYTE PTR [rax],al
   14005555c:	ins    DWORD PTR es:[rdi],dx
   14005555d:	rex.W add al,BYTE PTR [rax]
   140055560:	(bad)  
   140055561:	(bad)  
   140055562:	(bad)  
   140055563:	call   QWORD PTR [rcx]
   140055565:	adc    eax,DWORD PTR [rdx]
   140055567:	add    BYTE PTR [rdx],cl
   140055569:	push   rdx
   14005556a:	(bad)  
   14005556b:	xor    BYTE PTR [rsp+rbp*1-0x556ffffd],ah
   140055572:	add    al,0x0
   140055574:	(bad)  
   140055575:	(bad)  
   140055576:	(bad)  
   140055577:	dec    esp
   140055579:	add    BYTE PTR [rax+rax*1],al
   14005557c:	(bad)  
   14005557d:	push   rbp
   14005557e:	add    al,BYTE PTR [rax]
   140055580:	(bad)  
   140055581:	(bad)  
   140055582:	(bad)  
   140055583:	dec    DWORD PTR [rsi]
   140055585:	push   rsi
   140055586:	add    al,BYTE PTR [rax]
   140055588:	add    BYTE PTR [rax],al
   14005558a:	add    BYTE PTR [rax],al
   14005558c:	adc    DWORD PTR [rbx],edx
   14005558e:	add    al,BYTE PTR [rax]
   140055590:	or     dl,BYTE PTR [rdx+0x6]
   140055593:	xor    BYTE PTR [rsp+rbp*1-0x553ffffd],ah
   14005559a:	add    al,0x0
   14005559c:	ror    BYTE PTR [rdx+0x2],1
   14005559f:	add    bh,bh
   1400555a1:	(bad)  
   1400555a2:	(bad)  
   1400555a3:	(bad)  
   1400555a4:	in     al,dx
   1400555a5:	rex.WX add al,BYTE PTR [rax]
   1400555a8:	add    BYTE PTR [rax],al
   1400555aa:	add    BYTE PTR [rax],al
   1400555ac:	test   BYTE PTR [rdx+0x2],0x0
   1400555b0:	(bad)  
   1400555b1:	(bad)  
   1400555b2:	(bad)  
   1400555b3:	call   QWORD PTR [rcx]
   1400555b5:	adc    eax,DWORD PTR [rdx]
   1400555b7:	add    BYTE PTR [rdx],cl
   1400555b9:	push   rdx
   1400555ba:	(bad)  
   1400555bb:	xor    BYTE PTR [rsp+rbp*1-0x550ffffd],ah
   1400555c2:	add    al,0x0
   1400555c4:	(bad)  
   1400555c5:	(bad)  
   1400555c6:	(bad)  
   1400555c7:	call   FWORD PTR [rdi+rdi*8]
   1400555ca:	add    eax,DWORD PTR [rax]
   1400555cc:	(bad)  
   1400555cd:	(bad)  
   1400555ce:	(bad)  
   1400555cf:	jmp    FWORD PTR [rax]
   1400555d1:	inc    DWORD PTR [rbx]
   1400555d3:	add    BYTE PTR [rdx+rcx*2-0xfffe],dl
   1400555da:	(bad)  
   1400555db:	push   QWORD PTR [rax+0x24a]
   1400555e1:	add    BYTE PTR [rax],al
   1400555e3:	add    BYTE PTR [rdx+0x100024a],bh
   1400555e9:	add    BYTE PTR [rax],al
   1400555eb:	add    ah,al
   1400555ed:	rex.WX add al,BYTE PTR [rax]
   1400555f0:	(bad)  
   1400555f1:	(bad)  
   1400555f2:	(bad)  
   1400555f3:	call   QWORD PTR [rcx]
   1400555f5:	adc    al,BYTE PTR [rcx]
   1400555f7:	add    BYTE PTR [rcx],cl
   1400555f9:	(bad)  
   1400555fa:	add    BYTE PTR [rax],al
   1400555fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400555fd:	sub    al,0x3
   1400555ff:	add    BYTE PTR [rax],ah
   140055601:	stos   DWORD PTR es:[rdi],eax
   140055602:	add    al,0x0
   140055604:	pop    rsp
   140055605:	rex.WX add al,BYTE PTR [rax]
   140055608:	(bad)  
   140055609:	(bad)  
   14005560a:	(bad)  
   14005560b:	call   QWORD PTR [rcx]
   14005560d:	sbb    BYTE PTR [rax+rax*1],al
   140055610:	sbb    BYTE PTR [rcx+rcx*1],dh
   140055613:	add    BYTE PTR [rdx],cl
   140055615:	push   rdx
   140055616:	(bad)  
   140055617:	jo     0x1400555bd
   140055619:	sub    al,0x3
   14005561b:	add    BYTE PTR [rax-0x55],dl
   14005561e:	add    al,0x0
   140055620:	(bad)  
   140055621:	(bad)  
   140055622:	(bad)  
   140055623:	push   QWORD PTR [rdi+rdi*8]
   140055626:	add    eax,DWORD PTR [rax]
   140055628:	(bad)  
   140055629:	(bad)  
   14005562a:	(bad)  
   14005562b:	inc    DWORD PTR [rax-0x1]
   14005562e:	add    eax,DWORD PTR [rax]
   140055630:	sbb    al,0x4a
   140055632:	add    al,BYTE PTR [rax]
   140055634:	(bad)  
   140055635:	(bad)  
   140055636:	(bad)  
   140055637:	call   FWORD PTR [rcx]
   140055639:	xor    eax,0x7427000b
   14005563e:	add    BYTE PTR es:[rbx],ah
   140055641:	fs and eax,0x24341f00
   140055647:	add    BYTE PTR [rbx],dl
   140055649:	add    DWORD PTR [rax],esp
   14005564b:	add    BYTE PTR [rax],cl
   14005564d:	lock (bad) 
   14005564f:	loopne 0x140055655
   140055651:	push   rax
   140055652:	add    BYTE PTR [rax],al
   140055654:	jl     0x1400555e1
   140055656:	add    eax,DWORD PTR [rax]
   140055658:	sub    BYTE PTR [rbx+0xfa0004],0x0
   14005565f:	add    bh,bh
   140055661:	(bad)  
   140055662:	(bad)  
   140055663:	inc    DWORD PTR [rax]
   140055665:	add    BYTE PTR [rax],al
   140055667:	add    bh,bh
   140055669:	(bad)  
   14005566a:	(bad)  
   14005566b:	inc    DWORD PTR [rax]
   14005566d:	add    BYTE PTR [rax],al
   14005566f:	add    bh,bh
   140055671:	(bad)  
   140055672:	(bad)  
   140055673:	call   QWORD PTR [rdi+rdi*8+0x20003]
   14005567a:	add    BYTE PTR [rax],al
   14005567c:	movabs al,ds:0xac000000030003ff
   140055685:	inc    DWORD PTR [rbx]
   140055687:	add    BYTE PTR [rbx],al
   140055689:	add    BYTE PTR [rax],al
   14005568b:	add    BYTE PTR [rax+0x30003ff],bh
   140055691:	add    BYTE PTR [rax],al
   140055693:	add    ah,al
   140055695:	inc    DWORD PTR [rbx]
   140055697:	add    BYTE PTR [rbx],al
   140055699:	add    BYTE PTR [rax],al
   14005569b:	add    BYTE PTR [rax],al
   14005569d:	add    BYTE PTR [rax],al
   14005569f:	add    BYTE PTR [rbx],al
   1400556a1:	add    BYTE PTR [rax],al
   1400556a3:	add    BYTE PTR [rax],al
   1400556a5:	add    BYTE PTR [rax],al
   1400556a7:	add    BYTE PTR [rbx],al
   1400556a9:	add    BYTE PTR [rax],al
   1400556ab:	add    al,dl
   1400556ad:	inc    DWORD PTR [rbx]
   1400556af:	add    BYTE PTR [rax+0x4c],cl
   1400556b2:	add    al,BYTE PTR [rax]
   1400556b4:	(bad)  
   1400556b5:	(bad)  
   1400556b6:	(bad)  
   1400556b7:	jmp    QWORD PTR [rcx+0x200024c]
   1400556bd:	add    BYTE PTR [rax],al
   1400556bf:	add    BYTE PTR [rbx+0x300024c],bh
   1400556c5:	add    BYTE PTR [rax],al
   1400556c7:	add    BYTE PTR [rdx+0x400024d],bl
   1400556cd:	add    BYTE PTR [rax],al
   1400556cf:	add    BYTE PTR [rdi+0x300024d],ah
   1400556d5:	add    BYTE PTR [rax],al
   1400556d7:	add    BYTE PTR [rbx],dl
   1400556d9:	rex.WRX add r8b,BYTE PTR [rax]
   1400556dc:	add    eax,0x1e000000
   1400556e1:	rex.WRX add r8b,BYTE PTR [rax]
   1400556e4:	(bad)  
   1400556e5:	add    BYTE PTR [rax],al
   1400556e7:	add    BYTE PTR [rcx],ch
   1400556e9:	rex.WRX add r8b,BYTE PTR [rax]
   1400556ec:	add    eax,DWORD PTR [rax]
   1400556ee:	add    BYTE PTR [rax],al
   1400556f0:	movabs eax,ds:0xbd0000000200024e
   1400556f9:	rex.WRX add r8b,BYTE PTR [rax]
   1400556fc:	(bad)  
   1400556fd:	(bad)  
   1400556fe:	(bad)  
   1400556ff:	call   QWORD PTR [rcx]
   140055701:	adc    al,BYTE PTR [rbx]
   140055703:	add    BYTE PTR [rdx],cl
   140055705:	ret    0x3003
   140055708:	add    dl,BYTE PTR [rax+0x0]
   14005570b:	add    BYTE PTR [rsp+rbp*1-0x544ffffd],ah
   140055712:	add    al,0x0
   140055714:	(bad)  
   140055715:	(bad)  
   140055716:	(bad)  
   140055717:	inc    DWORD PTR [rax]
   140055719:	add    BYTE PTR [rax],al
   14005571b:	add    bh,bh
   14005571d:	(bad)  
   14005571e:	(bad)  
   14005571f:	inc    DWORD PTR [rax]
   140055721:	add    BYTE PTR [rax],al
   140055723:	add    bh,bh
   140055725:	(bad)  
   140055726:	(bad)  
   140055727:	inc    DWORD PTR [rax+rax*1+0x20004]
   14005572e:	add    BYTE PTR [rax],al
   140055730:	nop
   140055731:	add    BYTE PTR [rax+rax*1],al
   140055734:	add    al,BYTE PTR [rax]
   140055736:	add    BYTE PTR [rax],al
   140055738:	pushf  
   140055739:	add    BYTE PTR [rax+rax*1],al
   14005573c:	add    al,BYTE PTR [rax]
   14005573e:	add    BYTE PTR [rax],al
   140055740:	add    BYTE PTR [rax],al
   140055742:	add    BYTE PTR [rax],al
   140055744:	add    al,BYTE PTR [rax]
   140055746:	add    BYTE PTR [rax],al
   140055748:	add    BYTE PTR [rax],al
   14005574a:	add    BYTE PTR [rax],al
   14005574c:	add    al,BYTE PTR [rax]
   14005574e:	add    BYTE PTR [rax],al
   140055750:	test   al,0x0
   140055752:	add    al,0x0
   140055754:	(bad)  
   140055755:	add    BYTE PTR [rax],al
   140055757:	add    BYTE PTR [rax+rax*1+0x70004],dh
   14005575e:	add    BYTE PTR [rax],al
   140055760:	rol    BYTE PTR [rax],0x4
   140055763:	add    ah,bh
   140055765:	push   rdx
   140055766:	add    al,BYTE PTR [rax]
   140055768:	(bad)  
   140055769:	(bad)  
   14005576a:	(bad)  
   14005576b:	push   QWORD PTR [rax]
   14005576d:	push   rbx
   14005576e:	add    al,BYTE PTR [rax]
   140055770:	add    al,BYTE PTR [rax]
   140055772:	add    BYTE PTR [rax],al
   140055774:	push   rdx
   140055775:	push   rbx
   140055776:	add    al,BYTE PTR [rax]
   140055778:	add    eax,DWORD PTR [rax]
   14005577a:	add    BYTE PTR [rax],al
   14005577c:	pop    rbp
   14005577d:	push   rbx
   14005577e:	add    al,BYTE PTR [rax]
   140055780:	add    al,0x0
   140055782:	add    BYTE PTR [rax],al
   140055784:	push   0x2000253
   140055789:	add    BYTE PTR [rax],al
   14005578b:	add    BYTE PTR [rcx+0x7000253],bl
   140055791:	add    BYTE PTR [rax],al
   140055793:	add    BYTE PTR [rbx+0x8000253],bh
   140055799:	add    BYTE PTR [rax],al
   14005579b:	add    dh,al
   14005579d:	push   rbx
   14005579e:	add    al,BYTE PTR [rax]
   1400557a0:	or     DWORD PTR [rax],eax
   1400557a2:	add    BYTE PTR [rax],al
   1400557a4:	rcl    DWORD PTR [rbx+0x2],1
   1400557a7:	add    BYTE PTR [rdi],al
   1400557a9:	add    BYTE PTR [rax],al
   1400557ab:	add    dl,ch
   1400557ad:	push   rbx
   1400557ae:	add    al,BYTE PTR [rax]
   1400557b0:	add    al,BYTE PTR [rax]
   1400557b2:	add    BYTE PTR [rax],al
   1400557b4:	cld    
   1400557b5:	push   rbx
   1400557b6:	add    al,BYTE PTR [rax]
   1400557b8:	(bad)  
   1400557b9:	(bad)  
   1400557ba:	(bad)  
   1400557bb:	call   FWORD PTR [rcx]
   1400557bd:	sub    eax,DWORD PTR [rdi]
   1400557bf:	add    BYTE PTR [rip+0x11001a34],bl        # 0x1510571f9
   1400557c5:	add    DWORD PTR [rax+rax*1],edx
   1400557c8:	(bad)  
   1400557c9:	jo     0x1400557d0
   1400557cb:	(bad)  
   1400557cc:	add    al,0x50
   1400557ce:	add    BYTE PTR [rax],al
   1400557d0:	jl     0x14005575d
   1400557d2:	add    eax,DWORD PTR [rax]
   1400557d4:	loopne 0x140055781
   1400557d6:	add    al,0x0
   1400557d8:	(bad)  
   1400557d9:	add    BYTE PTR [rax],al
   1400557db:	add    bh,bh
   1400557dd:	(bad)  
   1400557de:	(bad)  
   1400557df:	inc    DWORD PTR [rax]
   1400557e1:	add    BYTE PTR [rax],al
   1400557e3:	add    bh,bh
   1400557e5:	(bad)  
   1400557e6:	(bad)  
   1400557e7:	inc    DWORD PTR [rax]
   1400557e9:	add    BYTE PTR [rax],al
   1400557eb:	add    bh,bh
   1400557ed:	(bad)  
   1400557ee:	(bad)  
   1400557ef:	(bad)  
   1400557f0:	cmp    al,0x0
   1400557f2:	add    al,0x0
   1400557f4:	add    al,BYTE PTR [rax]
   1400557f6:	add    BYTE PTR [rax],al
   1400557f8:	rex.W add BYTE PTR [rax+rax*1],al
   1400557fc:	add    al,BYTE PTR [rax]
   1400557fe:	add    BYTE PTR [rax],al
   140055800:	push   rsp
   140055801:	add    BYTE PTR [rax+rax*1],al
   140055804:	add    al,BYTE PTR [rax]
   140055806:	add    BYTE PTR [rax],al
   140055808:	add    BYTE PTR [rax],al
   14005580a:	add    BYTE PTR [rax],al
   14005580c:	add    al,BYTE PTR [rax]
   14005580e:	add    BYTE PTR [rax],al
   140055810:	add    BYTE PTR [rax],al
   140055812:	add    BYTE PTR [rax],al
   140055814:	add    al,BYTE PTR [rax]
   140055816:	add    BYTE PTR [rax],al
   140055818:	(bad)  
   140055819:	add    BYTE PTR [rax+rax*1],al
   14005581c:	(bad)  
   14005581d:	add    BYTE PTR [rax],al
   14005581f:	add    BYTE PTR [rax+rax*1+0x4],ch
   140055823:	add    BYTE PTR [rdi],al
   140055825:	add    BYTE PTR [rax],al
   140055827:	add    BYTE PTR [rax+0x0],bh
   14005582a:	add    al,0x0
   14005582c:	add    BYTE PTR [rbx+0x2],cl
   14005582f:	add    bh,bh
   140055831:	(bad)  
   140055832:	(bad)  
   140055833:	push   QWORD PTR [rip+0x200024b]        # 0x142055a84
   140055839:	add    BYTE PTR [rax],al
   14005583b:	add    BYTE PTR [rdi+0x4b],dl
   14005583e:	add    al,BYTE PTR [rax]
   140055840:	add    eax,DWORD PTR [rax]
   140055842:	add    BYTE PTR [rax],al
   140055844:	(bad)  
   140055845:	rex.WXB add al,BYTE PTR [r8]
   140055848:	add    al,0x0
   14005584a:	add    BYTE PTR [rax],al
   14005584c:	ins    DWORD PTR es:[rdi],dx
   14005584d:	rex.WXB add al,BYTE PTR [r8]
   140055850:	add    al,BYTE PTR [rax]
   140055852:	add    BYTE PTR [rax],al
   140055854:	sahf   
   140055855:	rex.WXB add al,BYTE PTR [r8]
   140055858:	(bad)  
   140055859:	add    BYTE PTR [rax],al
   14005585b:	add    bh,al
   14005585d:	rex.WXB add al,BYTE PTR [r8]
   140055860:	or     BYTE PTR [rax],al
   140055862:	add    BYTE PTR [rax],al
   140055864:	ror    BYTE PTR [rbx+0x2],cl
   140055867:	add    BYTE PTR [rcx],cl
   140055869:	add    BYTE PTR [rax],al
   14005586b:	add    ch,bl
   14005586d:	rex.WXB add al,BYTE PTR [r8]
   140055870:	(bad)  
   140055871:	add    BYTE PTR [rax],al
   140055873:	add    BYTE PTR [rsp+rcx*2],al
   140055876:	add    al,BYTE PTR [rax]
   140055878:	add    al,BYTE PTR [rax]
   14005587a:	add    BYTE PTR [rax],al
   14005587c:	(bad)  
   14005587d:	rex.WR add r8b,BYTE PTR [rax]
   140055880:	(bad)  
   140055881:	(bad)  
   140055882:	(bad)  
   140055883:	call   QWORD PTR [rcx]
   140055885:	sbb    eax,DWORD PTR [rip+0x16341b00]        # 0x15639738b
   14005588b:	add    BYTE PTR [rdi],cl
   14005588d:	add    DWORD PTR [rax+rax*1],edx
   140055890:	add    al,0x50
   140055892:	add    BYTE PTR [rax],al
   140055894:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055895:	sub    al,0x3
   140055897:	add    BYTE PTR [rax],dl
   140055899:	lods   al,BYTE PTR ds:[rsi]
   14005589a:	add    al,0x0
   14005589c:	(bad)  
   14005589d:	(bad)  
   14005589e:	(bad)  
   14005589f:	inc    DWORD PTR [rax]
   1400558a1:	add    BYTE PTR [rax],al
   1400558a3:	add    bh,bh
   1400558a5:	(bad)  
   1400558a6:	(bad)  
   1400558a7:	inc    DWORD PTR [rax]
   1400558a9:	add    BYTE PTR [rax],al
   1400558ab:	add    bh,bh
   1400558ad:	(bad)  
   1400558ae:	(bad)  
   1400558af:	dec    DWORD PTR [rdi+rdi*8+0x3]
   1400558b3:	add    BYTE PTR [rdx],al
   1400558b5:	add    BYTE PTR [rax],al
   1400558b7:	add    BYTE PTR [rax-0x1],bl
   1400558ba:	add    eax,DWORD PTR [rax]
   1400558bc:	add    al,BYTE PTR [rax]
   1400558be:	add    BYTE PTR [rax],al
   1400558c0:	inc    DWORD PTR fs:[rbx]
   1400558c3:	add    BYTE PTR [rdx],al
   1400558c5:	add    BYTE PTR [rax],al
   1400558c7:	add    BYTE PTR [rax],al
   1400558c9:	add    BYTE PTR [rax],al
   1400558cb:	add    BYTE PTR [rdx],al
   1400558cd:	add    BYTE PTR [rax],al
   1400558cf:	add    BYTE PTR [rax],al
   1400558d1:	add    BYTE PTR [rax],al
   1400558d3:	add    BYTE PTR [rdx],al
   1400558d5:	add    BYTE PTR [rax],al
   1400558d7:	add    BYTE PTR [rax-0x1],dh
   1400558da:	add    eax,DWORD PTR [rax]
   1400558dc:	(bad)  
   1400558dd:	add    BYTE PTR [rax],al
   1400558df:	add    BYTE PTR [rdi+rdi*8+0x3],bh
   1400558e3:	add    BYTE PTR [rdi],al
   1400558e5:	add    BYTE PTR [rax],al
   1400558e7:	add    BYTE PTR [rax+0x180003ff],cl
   1400558ed:	push   rsp
   1400558ee:	add    al,BYTE PTR [rax]
   1400558f0:	(bad)  
   1400558f1:	(bad)  
   1400558f2:	(bad)  
   1400558f3:	(bad)  
   1400558f4:	jg     0x14005594a
   1400558f6:	add    al,BYTE PTR [rax]
   1400558f8:	add    al,BYTE PTR [rax]
   1400558fa:	add    BYTE PTR [rax],al
   1400558fc:	movabs eax,ds:0xac00000003000254
   140055905:	push   rsp
   140055906:	add    al,BYTE PTR [rax]
   140055908:	add    al,0x0
   14005590a:	add    BYTE PTR [rax],al
   14005590c:	mov    bh,0x54
   14005590e:	add    al,BYTE PTR [rax]
   140055910:	add    al,BYTE PTR [rax]
   140055912:	add    BYTE PTR [rax],al
   140055914:	std    
   140055915:	push   rsp
   140055916:	add    al,BYTE PTR [rax]
   140055918:	(bad)  
   140055919:	add    BYTE PTR [rax],al
   14005591b:	add    BYTE PTR [rdi],bl
   14005591d:	push   rbp
   14005591e:	add    al,BYTE PTR [rax]
   140055920:	or     BYTE PTR [rax],al
   140055922:	add    BYTE PTR [rax],al
   140055924:	sub    dl,BYTE PTR [rbp+0x2]
   140055927:	add    BYTE PTR [rcx],cl
   140055929:	add    BYTE PTR [rax],al
   14005592b:	add    BYTE PTR [rip+0x7000255],dh        # 0x147055b86
   140055931:	add    BYTE PTR [rax],al
   140055933:	add    BYTE PTR [rbx+0x2000255],bl
   140055939:	add    BYTE PTR [rax],al
   14005593b:	add    BYTE PTR [rbp-0xfffdab],ch
   140055941:	(bad)  
   140055942:	(bad)  
   140055943:	call   FWORD PTR [rcx]
   140055945:	xor    DWORD PTR [rcx],ecx
   140055947:	add    BYTE PTR [rbx],ah
   140055949:	je     0x14005596d
   14005594b:	add    BYTE PTR [rdi],bl
   14005594d:	and    DWORD PTR fs:[rax],eax
   140055950:	sbb    esi,DWORD PTR [rax+riz*1]
   140055953:	add    BYTE PTR [rdi],cl
   140055955:	add    DWORD PTR [rsi],ebx
   140055957:	add    BYTE PTR [rax+rdx*2],al
   14005595a:	add    BYTE PTR [rax],al
   14005595c:	jl     0x1400558e9
   14005595e:	add    eax,DWORD PTR [rax]
   140055960:	lods   al,BYTE PTR ds:[rsi]
   140055962:	add    al,0x0
   140055964:	loop   0x140055966
   140055966:	add    BYTE PTR [rax],al
   140055968:	(bad)  
   140055969:	(bad)  
   14005596a:	(bad)  
   14005596b:	inc    DWORD PTR [rax]
   14005596d:	add    BYTE PTR [rax],al
   14005596f:	add    bh,bh
   140055971:	(bad)  
   140055972:	(bad)  
   140055973:	inc    DWORD PTR [rax]
   140055975:	add    BYTE PTR [rax],al
   140055977:	add    bh,bh
   140055979:	(bad)  
   14005597a:	(bad)  
   14005597b:	(bad)  
   14005597c:	fdiv   st(7),st
   14005597e:	add    eax,DWORD PTR [rax]
   140055980:	add    al,BYTE PTR [rax]
   140055982:	add    BYTE PTR [rax],al
   140055984:	call   0x142055d88
   140055989:	add    BYTE PTR [rax],al
   14005598b:	add    ah,dh
   14005598d:	inc    DWORD PTR [rbx]
   14005598f:	add    BYTE PTR [rdx],al
   140055991:	add    BYTE PTR [rax],al
   140055993:	add    BYTE PTR [rax],al
   140055995:	add    BYTE PTR [rax],al
   140055997:	add    BYTE PTR [rdx],al
   140055999:	add    BYTE PTR [rax],al
   14005599b:	add    BYTE PTR [rax],al
   14005599d:	add    BYTE PTR [rax],al
   14005599f:	add    BYTE PTR [rdx],al
   1400559a1:	add    BYTE PTR [rax],al
   1400559a3:	add    BYTE PTR [rax],al
   1400559a5:	add    BYTE PTR [rax+rax*1],al
   1400559a8:	(bad)  
   1400559a9:	add    BYTE PTR [rax],al
   1400559ab:	add    BYTE PTR [rax+rax*1],cl
   1400559ae:	add    al,0x0
   1400559b0:	(bad)  
   1400559b1:	add    BYTE PTR [rax],al
   1400559b3:	add    BYTE PTR [rax],bl
   1400559b5:	add    BYTE PTR [rax+rax*1],al
   1400559b8:	(bad)  
   1400559b9:	add    BYTE PTR [rax],al
   1400559bb:	add    BYTE PTR [rax+rax*1],ah
   1400559be:	add    al,0x0
   1400559c0:	(bad)  
   1400559c1:	add    BYTE PTR [rax],al
   1400559c3:	add    BYTE PTR [rax],dh
   1400559c5:	add    BYTE PTR [rax+rax*1],al
   1400559c8:	cld    
   1400559c9:	rex.WRX add r8b,BYTE PTR [rax]
   1400559cc:	(bad)  
   1400559cd:	(bad)  
   1400559ce:	(bad)  
   1400559cf:	jmp    QWORD PTR [rsi+0x200024f]
   1400559d5:	add    BYTE PTR [rax],al
   1400559d7:	add    al,cl
   1400559d9:	rex.WRXB add r8b,BYTE PTR [r8]
   1400559dc:	add    eax,DWORD PTR [rax]
   1400559de:	add    BYTE PTR [rax],al
   1400559e0:	ror    DWORD PTR [rdi+0x2],cl
   1400559e3:	add    BYTE PTR [rax+rax*1],al
   1400559e6:	add    BYTE PTR [rax],al
   1400559e8:	fimul  WORD PTR [rdi+0x2]
   1400559eb:	add    BYTE PTR [rdx],al
   1400559ed:	add    BYTE PTR [rax],al
   1400559ef:	add    BYTE PTR [rdx],dl
   1400559f1:	push   rax
   1400559f2:	add    al,BYTE PTR [rax]
   1400559f4:	(bad)  
   1400559f5:	add    BYTE PTR [rax],al
   1400559f7:	add    BYTE PTR [rax+rdx*2],dh
   1400559fa:	add    al,BYTE PTR [rax]
   1400559fc:	or     BYTE PTR [rax],al
   1400559fe:	add    BYTE PTR [rax],al
   140055a00:	(bad)  
   140055a01:	push   rax
   140055a02:	add    al,BYTE PTR [rax]
   140055a04:	or     DWORD PTR [rax],eax
   140055a06:	add    BYTE PTR [rax],al
   140055a08:	rex.WX push rax
   140055a0a:	add    al,BYTE PTR [rax]
   140055a0c:	(bad)  
   140055a0d:	add    BYTE PTR [rax],al
   140055a0f:	add    BYTE PTR [rax+0xa000250],dl
   140055a15:	add    BYTE PTR [rax],al
   140055a17:	add    BYTE PTR [rbx+0xb000250],bl
   140055a1d:	add    BYTE PTR [rax],al
   140055a1f:	add    BYTE PTR [rsi+0x7000250],ah
   140055a25:	add    BYTE PTR [rax],al
   140055a27:	add    BYTE PTR [rax+0x51],ah
   140055a2a:	add    al,BYTE PTR [rax]
   140055a2c:	add    al,BYTE PTR [rax]
   140055a2e:	add    BYTE PTR [rax],al
   140055a30:	jb     0x140055a83
   140055a32:	add    al,BYTE PTR [rax]
   140055a34:	(bad)  
   140055a35:	(bad)  
   140055a36:	(bad)  
   140055a37:	call   FWORD PTR [rcx]
   140055a39:	sub    DWORD PTR [rip+0x16341b00],eax        # 0x15639753f
   140055a3f:	add    BYTE PTR [rdi],cl
   140055a41:	add    DWORD PTR [rax+rax*1],edx
   140055a44:	add    al,0x50
   140055a46:	add    BYTE PTR [rax],al
   140055a48:	jl     0x1400559d5
   140055a4a:	add    eax,DWORD PTR [rax]
   140055a4c:	jo     0x1400559fa
   140055a4e:	add    al,0x0
   140055a50:	(bad)  
   140055a51:	add    BYTE PTR [rax],al
   140055a53:	add    BYTE PTR [rcx+rdx*2-0xfffe],ch
   140055a5a:	(bad)  
   140055a5b:	(bad)  
   140055a5c:	stc    
   140055a5d:	push   rcx
   140055a5e:	add    al,BYTE PTR [rax]
   140055a60:	add    al,BYTE PTR [rax]
   140055a62:	add    BYTE PTR [rax],al
   140055a64:	sbb    edx,DWORD PTR [rdx+0x2]
   140055a67:	add    BYTE PTR [rbx],al
   140055a69:	add    BYTE PTR [rax],al
   140055a6b:	add    BYTE PTR [rsi],ah
   140055a6d:	push   rdx
   140055a6e:	add    al,BYTE PTR [rax]
   140055a70:	add    al,0x0
   140055a72:	add    BYTE PTR [rax],al
   140055a74:	xor    DWORD PTR [rdx+0x2],edx
   140055a77:	add    BYTE PTR [rdx],al
   140055a79:	add    BYTE PTR [rax],al
   140055a7b:	add    BYTE PTR [rdx+0x52],ah
   140055a7e:	add    al,BYTE PTR [rax]
   140055a80:	(bad)  
   140055a81:	add    BYTE PTR [rax],al
   140055a83:	add    BYTE PTR [rdx+rdx*2+0x80002],al
   140055a8a:	add    BYTE PTR [rax],al
   140055a8c:	(bad)  
   140055a8d:	push   rdx
   140055a8e:	add    al,BYTE PTR [rax]
   140055a90:	or     DWORD PTR [rax],eax
   140055a92:	add    BYTE PTR [rax],al
   140055a94:	(bad)  
   140055a95:	push   rdx
   140055a96:	add    al,BYTE PTR [rax]
   140055a98:	(bad)  
   140055a99:	add    BYTE PTR [rax],al
   140055a9b:	add    BYTE PTR [rcx+0x2000252],bh
   140055aa1:	add    BYTE PTR [rax],al
   140055aa3:	add    bl,cl
   140055aa5:	push   rdx
   140055aa6:	add    al,BYTE PTR [rax]
   140055aa8:	(bad)  
   140055aa9:	(bad)  
   140055aaa:	(bad)  
   140055aab:	call   QWORD PTR [rcx]
   140055aad:	(bad)  
   140055aae:	(bad)  
   140055aaf:	add    BYTE PTR [rsi],cl
   140055ab1:	rol    BYTE PTR [rdi],cl
   140055ab3:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143655f2a
   140055aba:	add    dl,BYTE PTR [rax-0x5c]
   140055abd:	sub    al,0x3
   140055abf:	add    BYTE PTR [rax-0xfffb54],ah
   140055ac5:	(bad)  
   140055ac6:	(bad)  
   140055ac7:	push   rdx
   140055ac9:	add    BYTE PTR [rax+rax*1],al
   140055acc:	int3   
   140055acd:	push   rsi
   140055ace:	add    al,BYTE PTR [rax]
   140055ad0:	(bad)  
   140055ad1:	(bad)  
   140055ad2:	(bad)  
   140055ad3:	inc    DWORD PTR [rax]
   140055ad5:	push   rdi
   140055ad6:	add    al,BYTE PTR [rax]
   140055ad8:	add    BYTE PTR [rax],al
   140055ada:	add    BYTE PTR [rax],al
   140055adc:	fist   DWORD PTR [rdi+0x2]
   140055adf:	add    bh,bh
   140055ae1:	(bad)  
   140055ae2:	(bad)  
   140055ae3:	call   QWORD PTR [rcx]
   140055ae5:	adc    eax,DWORD PTR [rdx]
   140055ae7:	add    BYTE PTR [rdx],cl
   140055ae9:	push   rdx
   140055aea:	(bad)  
   140055aeb:	xor    BYTE PTR [rsp+rbp*1-0x532ffffd],ah
   140055af2:	add    al,0x0
   140055af4:	(bad)  
   140055af5:	(bad)  
   140055af6:	(bad)  
   140055af7:	(bad)  
   140055af8:	inc    BYTE PTR [rax]
   140055afa:	add    al,0x0
   140055afc:	sub    al,0x58
   140055afe:	add    al,BYTE PTR [rax]
   140055b00:	(bad)  
   140055b01:	(bad)  
   140055b02:	(bad)  
   140055b03:	dec    DWORD PTR [rax+rbx*2+0x2]
   140055b07:	add    BYTE PTR [rax],al
   140055b09:	add    BYTE PTR [rax],al
   140055b0b:	add    BYTE PTR [rbx+0x58],bl
   140055b0e:	add    al,BYTE PTR [rax]
   140055b10:	(bad)  
   140055b11:	(bad)  
   140055b12:	(bad)  
   140055b13:	call   QWORD PTR [rcx]
   140055b15:	adc    eax,DWORD PTR [rdx]
   140055b17:	add    BYTE PTR [rdx],cl
   140055b19:	push   rdx
   140055b1a:	(bad)  
   140055b1b:	xor    BYTE PTR [rsp+rbp*1-0x52fffffd],ah
   140055b22:	add    al,0x0
   140055b24:	push   rsp
   140055b25:	pop    rdx
   140055b26:	add    al,BYTE PTR [rax]
   140055b28:	(bad)  
   140055b29:	(bad)  
   140055b2a:	(bad)  
   140055b2b:	push   QWORD PTR [rdx+rbx*2+0x2]
   140055b2f:	add    BYTE PTR [rax],al
   140055b31:	add    BYTE PTR [rax],al
   140055b33:	add    BYTE PTR [rax-0xfffda6],cl
   140055b39:	(bad)  
   140055b3a:	(bad)  
   140055b3b:	call   QWORD PTR [rcx]
   140055b3d:	adc    eax,DWORD PTR [rdx]
   140055b3f:	add    BYTE PTR [rdx],cl
   140055b41:	push   rdx
   140055b42:	(bad)  
   140055b43:	xor    BYTE PTR [rsp+rbp*1-0x52cffffd],ah
   140055b4a:	add    al,0x0
   140055b4c:	and    al,0x61
   140055b4e:	add    al,BYTE PTR [rax]
   140055b50:	(bad)  
   140055b51:	(bad)  
   140055b52:	(bad)  
   140055b53:	dec    DWORD PTR [rdi+0x61]
   140055b56:	add    al,BYTE PTR [rax]
   140055b58:	add    BYTE PTR [rax],al
   140055b5a:	add    BYTE PTR [rax],al
   140055b5c:	adc    DWORD PTR [rdi],ebp
   140055b5e:	or     eax,0x2c742f00
   140055b63:	add    BYTE PTR [rbx],ch
   140055b65:	sub    eax,DWORD PTR fs:[rax]
   140055b68:	(bad)  
   140055b69:	xor    al,0x2a
   140055b6b:	add    BYTE PTR [rbx],bl
   140055b6d:	add    DWORD PTR [rax+rax*1],esp
   140055b70:	adc    al,dh
   140055b72:	(bad)  
   140055b73:	loopne 0x140055b81
   140055b75:	ror    BYTE PTR [rdx],1
   140055b77:	ror    BYTE PTR [rax],0x50
   140055b7a:	add    BYTE PTR [rax],al
   140055b7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055b7d:	sub    al,0x3
   140055b7f:	add    BYTE PTR [rax-0x53],ah
   140055b82:	add    al,0x0
   140055b84:	(bad)  
   140055b85:	(bad)  
   140055b86:	(bad)  
   140055b87:	jmp    QWORD PTR [rax+0x1]
   140055b8a:	add    al,0x0
   140055b8c:	add    BYTE PTR [rax],al
   140055b8e:	add    BYTE PTR [rax],al
   140055b90:	jo     0x140055b93
   140055b92:	add    al,0x0
   140055b94:	(bad)  
   140055b95:	(bad)  
   140055b96:	(bad)  
   140055b97:	inc    DWORD PTR [rax+0x2000401]
   140055b9d:	add    BYTE PTR [rax],al
   140055b9f:	add    BYTE PTR [rax-0xfffbff],dl
   140055ba5:	(bad)  
   140055ba6:	(bad)  
   140055ba7:	jmp    QWORD PTR [rax+0x4000401]
   140055bad:	add    BYTE PTR [rax],al
   140055baf:	add    BYTE PTR [rcx+rax*1+0x40004],ch
   140055bb6:	add    BYTE PTR [rax],al
   140055bb8:	mov    eax,0x4000401
   140055bbd:	add    BYTE PTR [rax],al
   140055bbf:	add    ah,al
   140055bc1:	add    DWORD PTR [rax+rax*1],eax
   140055bc4:	add    al,0x0
   140055bc6:	add    BYTE PTR [rax],al
   140055bc8:	rol    BYTE PTR [rcx],1
   140055bca:	add    al,0x0
   140055bcc:	add    al,0x0
   140055bce:	add    BYTE PTR [rax],al
   140055bd0:	fadd   QWORD PTR [rcx]
   140055bd2:	add    al,0x0
   140055bd4:	add    al,0x0
   140055bd6:	add    BYTE PTR [rax],al
   140055bd8:	call   0x144055fde
   140055bdd:	add    BYTE PTR [rax],al
   140055bdf:	add    ah,dh
   140055be1:	add    DWORD PTR [rax+rax*1],eax
   140055be4:	add    al,0x0
   140055be6:	add    BYTE PTR [rax],al
   140055be8:	add    BYTE PTR [rdx],al
   140055bea:	add    al,0x0
   140055bec:	sbb    al,0x5c
   140055bee:	add    al,BYTE PTR [rax]
   140055bf0:	(bad)  
   140055bf1:	(bad)  
   140055bf2:	(bad)  
   140055bf3:	(bad)  
   140055bf4:	jp     0x140055c52
   140055bf6:	add    al,BYTE PTR [rax]
   140055bf8:	add    BYTE PTR [rax],al
   140055bfa:	add    BYTE PTR [rax],al
   140055bfc:	xchg   BYTE PTR [rdx+rax*1+0x0],bl
   140055c00:	(bad)  
   140055c01:	(bad)  
   140055c02:	(bad)  
   140055c03:	call   FWORD PTR [rsi]
   140055c05:	pop    rbp
   140055c06:	add    al,BYTE PTR [rax]
   140055c08:	add    al,BYTE PTR [rax]
   140055c0a:	add    BYTE PTR [rax],al
   140055c0c:	sub    bl,BYTE PTR [rbp+0x2]
   140055c0f:	add    bh,bh
   140055c11:	(bad)  
   140055c12:	(bad)  
   140055c13:	dec    DWORD PTR [rax+0x5d]
   140055c16:	add    al,BYTE PTR [rax]
   140055c18:	add    al,0x0
   140055c1a:	add    BYTE PTR [rax],al
   140055c1c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055c1d:	pop    rbp
   140055c1e:	add    al,BYTE PTR [rax]
   140055c20:	(bad)  
   140055c21:	add    BYTE PTR [rax],al
   140055c23:	add    BYTE PTR [rbx+0x400025d],dh
   140055c29:	add    BYTE PTR [rax],al
   140055c2b:	add    al,ch
   140055c2d:	pop    rbp
   140055c2e:	add    al,BYTE PTR [rax]
   140055c30:	or     DWORD PTR [rax],eax
   140055c32:	add    BYTE PTR [rax],al
   140055c34:	neg    BYTE PTR [rbp+0x2]
   140055c37:	add    BYTE PTR [rax+rax*1],al
   140055c3a:	add    BYTE PTR [rax],al
   140055c3c:	sub    DWORD PTR [rsi+0x2],ebx
   140055c3f:	add    BYTE PTR [rip+0x37000000],al        # 0x177055c45
   140055c45:	pop    rsi
   140055c46:	add    al,BYTE PTR [rax]
   140055c48:	add    al,0x0
   140055c4a:	add    BYTE PTR [rax],al
   140055c4c:	xor    eax,0xb00025f
   140055c51:	add    BYTE PTR [rax],al
   140055c53:	add    BYTE PTR [rbx+0x60],ch
   140055c56:	add    al,BYTE PTR [rax]
   140055c58:	add    al,0x0
   140055c5a:	add    BYTE PTR [rax],al
   140055c5c:	lea    esp,[rax+0x2]
   140055c5f:	add    bh,bh
   140055c61:	(bad)  
   140055c62:	(bad)  
   140055c63:	call   FWORD PTR [rcx]
   140055c65:	xor    DWORD PTR [rcx],ecx
   140055c67:	add    BYTE PTR [rbx],ah
   140055c69:	sub    DWORD PTR fs:[rax],eax
   140055c6c:	(bad)  
   140055c6d:	xor    al,0x28
   140055c6f:	add    BYTE PTR [rdx],dl
   140055c71:	add    DWORD PTR [rdx],esp
   140055c73:	add    BYTE PTR [rdi],al
   140055c75:	loopne 0x140055c7c
   140055c77:	jo     0x140055c7d
   140055c79:	push   rax
   140055c7a:	add    BYTE PTR [rax],al
   140055c7c:	jl     0x140055c09
   140055c7e:	add    eax,DWORD PTR [rax]
   140055c80:	nop
   140055c81:	lods   eax,DWORD PTR ds:[rsi]
   140055c82:	add    al,0x0
   140055c84:	or     al,BYTE PTR [rcx]
   140055c86:	add    BYTE PTR [rax],al
   140055c88:	(bad)  
   140055c89:	(bad)  
   140055c8a:	(bad)  
   140055c8b:	dec    DWORD PTR [rdx]
   140055c8d:	add    DWORD PTR [rax+rax*1],eax
   140055c90:	(bad)  
   140055c91:	(bad)  
   140055c92:	(bad)  
   140055c93:	call   QWORD PTR [rsi]
   140055c95:	add    DWORD PTR [rax+rax*1],eax
   140055c98:	cwde   
   140055c99:	pop    rdx
   140055c9a:	add    al,BYTE PTR [rax]
   140055c9c:	(bad)  
   140055c9d:	(bad)  
   140055c9e:	(bad)  
   140055c9f:	jmp    rax
   140055ca1:	pop    rdx
   140055ca2:	add    al,BYTE PTR [rax]
   140055ca4:	add    BYTE PTR [rax],al
   140055ca6:	add    BYTE PTR [rax],al
   140055ca8:	push   rax
   140055ca9:	pop    rbx
   140055caa:	add    al,BYTE PTR [rax]
   140055cac:	(bad)  
   140055cad:	(bad)  
   140055cae:	(bad)  
   140055caf:	push   QWORD PTR [rdx+0x5b]
   140055cb2:	add    al,BYTE PTR [rax]
   140055cb4:	add    BYTE PTR [rax],al
   140055cb6:	add    BYTE PTR [rax],al
   140055cb8:	neg    DWORD PTR [rbx+0x2]
   140055cbb:	add    bh,bh
   140055cbd:	(bad)  
   140055cbe:	(bad)  
   140055cbf:	call   QWORD PTR [rcx]
   140055cc1:	sbb    BYTE PTR [rsi],al
   140055cc3:	add    BYTE PTR [rax],bl
   140055cc5:	or     DWORD PTR fs:[rax],eax
   140055cc8:	adc    al,0x34
   140055cca:	or     BYTE PTR [rax],al
   140055ccc:	or     BYTE PTR [rdx+0x4],dl
   140055ccf:	jo     0x140055c75
   140055cd1:	sub    al,0x3
   140055cd3:	add    al,al
   140055cd5:	lods   eax,DWORD PTR ds:[rsi]
   140055cd6:	add    al,0x0
   140055cd8:	(bad)  
   140055cd9:	(bad)  
   140055cda:	(bad)  
   140055cdb:	jmp    QWORD PTR [rdx]
   140055cdd:	add    DWORD PTR [rax+rax*1],eax
   140055ce0:	(bad)  
   140055ce1:	(bad)  
   140055ce2:	(bad)  
   140055ce3:	jmp    FWORD PTR [rsi]
   140055ce5:	add    DWORD PTR [rax+rax*1],eax
   140055ce8:	mov    eax,0xff000260
   140055ced:	(bad)  
   140055cee:	(bad)  
   140055cef:	jmp    rsi
   140055cf1:	(bad)  
   140055cf2:	add    al,BYTE PTR [rax]
   140055cf4:	add    BYTE PTR [rax],al
   140055cf6:	add    BYTE PTR [rax],al
   140055cf8:	clc    
   140055cf9:	(bad)  
   140055cfa:	add    al,BYTE PTR [rax]
   140055cfc:	(bad)  
   140055cfd:	(bad)  
   140055cfe:	(bad)  
   140055cff:	inc    DWORD PTR [rcx]
   140055d01:	adc    eax,0x74150008
   140055d06:	or     al,0x0
   140055d08:	adc    eax,0x15000b64
   140055d0d:	xor    al,0xa
   140055d0f:	add    BYTE PTR [rip+0x1e01172],dl        # 0x141e56e87
   140055d15:	(bad)  
   140055d16:	add    eax,DWORD PTR [rax]
   140055d18:	(bad)  
   140055d19:	(bad)  
   140055d1a:	add    esi,DWORD PTR [rax+0x2]
   140055d1d:	xor    BYTE PTR [rax],al
   140055d1f:	add    BYTE PTR [rcx],al
   140055d21:	sbb    eax,0x741d000c
   140055d26:	adc    DWORD PTR [rax],eax
   140055d28:	sbb    eax,0x1d001064
   140055d2d:	push   rsp
   140055d2e:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d056b69
   140055d35:	xchg   edx,eax
   140055d36:	sbb    eax,esi
   140055d38:	(bad)  
   140055d39:	loopne 0x140055d50
   140055d3b:	rcr    BYTE PTR [rcx],1
   140055d3d:	sbb    eax,DWORD PTR [rsi]
   140055d3f:	add    BYTE PTR [rcx+rax*1],cl
   140055d42:	adc    DWORD PTR [rax],eax
   140055d44:	add    eax,0x3600470
   140055d49:	push   rax
   140055d4a:	add    dh,BYTE PTR [rax]
   140055d4c:	cmp    al,0xe5
   140055d4e:	add    al,BYTE PTR [rax]
   140055d50:	jo     0x140055d52
   140055d52:	add    BYTE PTR [rax],al
   140055d54:	add    DWORD PTR [rsp+rcx*1],ebx
   140055d57:	add    BYTE PTR [rsp+riz*2],bl
   140055d5a:	adc    al,BYTE PTR [rax]
   140055d5c:	sbb    al,0x54
   140055d5e:	adc    DWORD PTR [rax],eax
   140055d60:	sbb    al,0x34
   140055d62:	adc    BYTE PTR [rax],al
   140055d64:	sbb    al,0x92
   140055d66:	sbb    al,dh
   140055d68:	(bad)  
   140055d69:	loopne 0x140055d7f
   140055d6b:	rcl    BYTE PTR [rdx],1
   140055d6d:	rcl    BYTE PTR [rax],0x70
   140055d70:	sbb    DWORD PTR [rax],ebx
   140055d72:	add    eax,0x5e20900
   140055d77:	jo     0x140055d7d
   140055d79:	(bad)  
   140055d7a:	add    edx,DWORD PTR [rax+0x2]
   140055d7d:	xor    BYTE PTR [rax],al
   140055d7f:	add    BYTE PTR [riz*8+0x600002],bh
   140055d86:	add    BYTE PTR [rax],al
   140055d88:	sbb    DWORD PTR [rip+0xfffffffff20e0006],ebx        # 0x132135d94
   140055d8e:	(bad)  
   140055d8f:	loopne 0x140055d96
   140055d91:	jo     0x140055d97
   140055d93:	(bad)  
   140055d94:	add    edx,DWORD PTR [rax+0x2]
   140055d97:	xor    BYTE PTR [riz*8+0x700002],bh
   140055d9e:	add    BYTE PTR [rax],al
   140055da0:	sbb    DWORD PTR [rsp+rax*1],ebx
   140055da3:	add    BYTE PTR [rip+0xd001434],cl        # 0x14d0571dd
   140055da9:	repnz (bad) 
   140055dab:	jo     0x140055de9
   140055dad:	in     eax,0x2
   140055daf:	add    BYTE PTR [rax+0x0],bh
   140055db2:	add    BYTE PTR [rax],al
   140055db4:	sbb    DWORD PTR [rdi],ebx
   140055db6:	(bad)  
   140055db7:	add    BYTE PTR [rcx],dl
   140055db9:	add    DWORD PTR [rcx],edx
   140055dbb:	add    BYTE PTR [rip+0x3600470],al        # 0x143656231
   140055dc1:	xor    BYTE PTR [rdx],al
   140055dc3:	push   rax
   140055dc4:	cmp    al,0xe5
   140055dc6:	add    al,BYTE PTR [rax]
   140055dc8:	jo     0x140055dca
   140055dca:	add    BYTE PTR [rax],al
   140055dcc:	add    DWORD PTR [rip+0x34050002],eax        # 0x1740a5dd4
   140055dd2:	add    DWORD PTR [rax],eax
   140055dd4:	sbb    DWORD PTR [rip+0x741f000c],ebp        # 0x1b4245de6
   140055dda:	adc    eax,0x14641f00
   140055ddf:	add    BYTE PTR [rdi],bl
   140055de1:	xor    al,0x12
   140055de3:	add    BYTE PTR [rdi],bl
   140055de5:	mov    dl,0x18
   140055de7:	lock (bad) 
   140055de9:	loopne 0x140055dff
   140055deb:	rcl    BYTE PTR [rdx],1
   140055ded:	rcl    BYTE PTR [rax],0x50
   140055df0:	cmp    al,0xe5
   140055df2:	add    al,BYTE PTR [rax]
   140055df4:	pop    rax
   140055df5:	add    BYTE PTR [rax],al
   140055df7:	add    BYTE PTR [rcx],bl
   140055df9:	sub    cl,BYTE PTR [rbx]
   140055dfb:	add    BYTE PTR [rsp+rsi*1],bl
   140055dfe:	(bad)  
   140055dff:	add    BYTE PTR [rcx+rax*1],bl
   140055e02:	adc    al,0x0
   140055e04:	adc    al,dh
   140055e06:	(bad)  
   140055e07:	loopne 0x140055e15
   140055e09:	ror    BYTE PTR [rdx],1
   140055e0b:	ror    BYTE PTR [rax],0x70
   140055e0e:	(bad)  
   140055e0f:	(bad)  
   140055e10:	(bad)  
   140055e11:	push   rax
   140055e12:	add    BYTE PTR [rax],al
   140055e14:	cmp    al,0xe5
   140055e16:	add    al,BYTE PTR [rax]
   140055e18:	cwde   
   140055e19:	add    BYTE PTR [rax],al
   140055e1b:	add    BYTE PTR [rcx],bl
   140055e1d:	sub    cl,BYTE PTR [rbx]
   140055e1f:	add    BYTE PTR [rsp+rsi*1],bl
   140055e22:	and    DWORD PTR [rax],eax
   140055e24:	sbb    al,0x1
   140055e26:	sbb    BYTE PTR [rax],al
   140055e28:	adc    al,dh
   140055e2a:	(bad)  
   140055e2b:	loopne 0x140055e39
   140055e2d:	ror    BYTE PTR [rdx],1
   140055e2f:	ror    BYTE PTR [rax],0x70
   140055e32:	(bad)  
   140055e33:	(bad)  
   140055e34:	(bad)  
   140055e35:	push   rax
   140055e36:	add    BYTE PTR [rax],al
   140055e38:	cmp    al,0xe5
   140055e3a:	add    al,BYTE PTR [rax]
   140055e3c:	mov    al,0x0
   140055e3e:	add    BYTE PTR [rax],al
   140055e40:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b4225e52
   140055e46:	or     DWORD PTR [rax],eax
   140055e48:	sbb    eax,0x1d000864
   140055e4d:	push   rsp
   140055e4e:	(bad)  
   140055e4f:	add    BYTE PTR [rip+0x1d000634],bl        # 0x15d056489
   140055e55:	adc    bl,BYTE PTR [rcx]
   140055e57:	lock (bad) 
   140055e59:	loopne 0x140055e70
   140055e5b:	rol    BYTE PTR [rax],1
   140055e5d:	add    BYTE PTR [rax],al
   140055e5f:	add    BYTE PTR [rax],al
   140055e61:	add    BYTE PTR [rax],al
   140055e63:	add    BYTE PTR [rax+0x26d],bl
   140055e69:	add    BYTE PTR [rax],al
   140055e6b:	add    BYTE PTR [rax+0x55e],al
	...
   140055e7d:	add    BYTE PTR [rax],al
   140055e7f:	add    BYTE PTR [rdx],al
   140055e81:	add    BYTE PTR [rax],al
   140055e83:	add    BYTE PTR [rax-0x6ffffaa2],bl
   140055e89:	fs add eax,0x0
	...
   140055e9b:	add    BYTE PTR [rax-0x4d],al
   140055e9e:	add    eax,0x0
   140055ea3:	add    bh,bh
   140055ea5:	(bad)  
   140055ea6:	(bad)  
   140055ea7:	inc    DWORD PTR [rax]
   140055ea9:	add    BYTE PTR [rax],al
   140055eab:	add    BYTE PTR [rax],bl
   140055ead:	add    BYTE PTR [rax],al
   140055eaf:	add    BYTE PTR [rbp+rbp*2+0x2],dh
	...
   140055ec3:	add    BYTE PTR [rsi+rbx*1+0x3],bl
   140055eca:	add    BYTE PTR [rax],al
   140055ecc:	loopne 0x140055f2c
   140055ece:	add    eax,0x0
	...
   140055edf:	add    BYTE PTR [rbx],al
   140055ee1:	add    BYTE PTR [rax],al
   140055ee3:	add    BYTE PTR [rax],al
   140055ee5:	pop    rdi
   140055ee6:	add    eax,0x5653800
   140055eeb:	add    BYTE PTR [rax+0x564],dl
	...
   140055f01:	add    BYTE PTR [rax],al
   140055f03:	add    al,bl
   140055f05:	movabs ds:0xffff000000000005,al
   140055f0e:	(bad)  
   140055f0f:	inc    DWORD PTR [rax]
   140055f11:	add    BYTE PTR [rax],al
   140055f13:	add    BYTE PTR [rax],bl
   140055f15:	add    BYTE PTR [rax],al
   140055f17:	add    BYTE PTR [rsi+rbx*1+0x3],dl
	...
   140055f2b:	add    BYTE PTR [rsi+rbx*1+0x3],bl
   140055f32:	add    BYTE PTR [rax],al
   140055f34:	rex.W pop rdi
   140055f36:	add    eax,0x0
	...
   140055f47:	add    BYTE PTR [rbx],al
   140055f49:	add    BYTE PTR [rax],al
   140055f4b:	add    BYTE PTR [rax+0x5f],ch
   140055f4e:	add    eax,0x5653800
   140055f53:	add    BYTE PTR [rax+0x564],dl
	...
   140055f6d:	movabs ds:0xffff000000000005,eax
   140055f76:	(bad)  
   140055f77:	inc    DWORD PTR [rax]
   140055f79:	add    BYTE PTR [rax],al
   140055f7b:	add    BYTE PTR [rax],bl
   140055f7d:	add    BYTE PTR [rax],al
   140055f7f:	add    BYTE PTR [rax+0x1e],bh
   140055f82:	add    eax,DWORD PTR [rax]
	...
   140055f94:	sub    BYTE PTR [rax+0x3],cl
   140055f97:	add    BYTE PTR [rax],al
   140055f99:	add    BYTE PTR [rax],al
   140055f9b:	add    BYTE PTR [rax+0x55f],dh
	...
   140055fad:	add    BYTE PTR [rax],al
   140055faf:	add    BYTE PTR [rdx],al
   140055fb1:	add    BYTE PTR [rax],al
   140055fb3:	add    al,cl
   140055fb5:	pop    rdi
   140055fb6:	add    eax,0x5649000
	...
   140055fcb:	add    BYTE PTR [rax-0x5d],ah
   140055fce:	add    eax,0x0
   140055fd3:	add    bh,bh
   140055fd5:	(bad)  
   140055fd6:	(bad)  
   140055fd7:	inc    DWORD PTR [rax]
   140055fd9:	add    BYTE PTR [rax],al
   140055fdb:	add    BYTE PTR [rax],bl
   140055fdd:	add    BYTE PTR [rax],al
   140055fdf:	add    BYTE PTR [rax+rcx*2],al
   140055fe2:	add    eax,DWORD PTR [rax]
	...
   140055ff4:	add    BYTE PTR [rcx+rax*1],cl
   140055ff7:	add    BYTE PTR [rax],al
   140055ff9:	add    BYTE PTR [rax],al
   140055ffb:	add    BYTE PTR [rax],dl
   140055ffd:	(bad)  
   140055ffe:	add    eax,0x0
	...
   14005600f:	add    BYTE PTR [rdx],al
   140056011:	add    BYTE PTR [rax],al
   140056013:	add    BYTE PTR [rax+0x60],dh
   140056016:	add    eax,0x560b800
	...
   14005602b:	add    BYTE PTR [rax+riz*1+0x0],dl
   14005602f:	add    BYTE PTR [rax],al
   140056031:	add    BYTE PTR [rax],al
   140056033:	add    BYTE PTR [rax+0x560],bl
	...
   140056049:	add    BYTE PTR [rax],al
   14005604b:	add    BYTE PTR [rax],dh
   14005604d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005604e:	add    eax,0x0
   140056053:	add    bh,bh
   140056055:	(bad)  
   140056056:	(bad)  
   140056057:	inc    DWORD PTR [rax]
   140056059:	add    BYTE PTR [rax],al
   14005605b:	add    BYTE PTR [rax],bh
   14005605d:	add    BYTE PTR [rax],al
   14005605f:	add    BYTE PTR [rax+0x20],dh
	...
   140056072:	add    BYTE PTR [rax],al
   140056074:	nop
   140056075:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056076:	add    eax,0x0
   14005607b:	add    bh,bh
   14005607d:	(bad)  
   14005607e:	(bad)  
   14005607f:	inc    DWORD PTR [rax]
   140056081:	add    BYTE PTR [rax],al
   140056083:	add    BYTE PTR [rax],bh
   140056085:	add    BYTE PTR [rax],al
   140056087:	add    ah,bh
   140056089:	or     al,BYTE PTR [rcx]
	...
   140056097:	add    BYTE PTR [rbx],al
   140056099:	add    BYTE PTR [rax],al
   14005609b:	add    BYTE PTR [rax+0x60],cl
   14005609e:	add    eax,0x5607000
   1400560a3:	add    BYTE PTR [rax+0x560],bh
	...
   1400560b9:	add    BYTE PTR [rax],al
   1400560bb:	add    BYTE PTR [rax+0x5a5],ch
   1400560c1:	add    BYTE PTR [rax],al
   1400560c3:	add    bh,bh
   1400560c5:	(bad)  
   1400560c6:	(bad)  
   1400560c7:	inc    DWORD PTR [rax]
   1400560c9:	add    BYTE PTR [rax],al
   1400560cb:	add    BYTE PTR [rax],cl
	...
   1400560dd:	add    BYTE PTR [rax],al
   1400560df:	add    BYTE PTR [rcx],al
   1400560e1:	add    BYTE PTR [rax],al
   1400560e3:	add    BYTE PTR [rax],dl
   1400560e5:	(bad)  
   1400560e6:	add    eax,0x0
	...
   1400560fb:	add    al,ah
   1400560fd:	(bad)  
   1400560fe:	add    eax,0x0
	...
   140056113:	add    BYTE PTR [rax+0x5ab],dh
   140056119:	add    BYTE PTR [rax],al
   14005611b:	add    bh,bh
   14005611d:	(bad)  
   14005611e:	(bad)  
   14005611f:	inc    DWORD PTR [rax]
   140056121:	add    BYTE PTR [rax],al
   140056123:	add    BYTE PTR [rax+rax*1],al
	...
   140056136:	add    BYTE PTR [rax],al
   140056138:	add    DWORD PTR [rax],eax
   14005613a:	add    BYTE PTR [rax],al
   14005613c:	or     BYTE PTR [rbp+rax*1+0x0],ch
   140056143:	add    bh,bh
   140056145:	(bad)  
   140056146:	(bad)  
   140056147:	inc    DWORD PTR [rax]
   140056149:	add    BYTE PTR [rax],al
   14005614b:	add    BYTE PTR [rax+rax*1],al
	...
   14005616a:	add    BYTE PTR [rax],al
   14005616c:	and    BYTE PTR [rcx+0x5],0x0
	...
   140056180:	add    DWORD PTR [rax],eax
   140056182:	add    BYTE PTR [rax],al
   140056184:	cmp    BYTE PTR [rcx+0x5],ah
	...
   14005619b:	add    BYTE PTR [rax+0x561],dh
	...
   1400561ad:	add    BYTE PTR [rax],al
   1400561af:	add    BYTE PTR [rcx],al
   1400561b1:	add    BYTE PTR [rax],al
   1400561b3:	add    BYTE PTR [rax+0x560],bh
   1400561b9:	add    BYTE PTR [rax],al
   1400561bb:	add    BYTE PTR [rax],al
   1400561bd:	add    BYTE PTR [rax],al
   1400561bf:	add    BYTE PTR [rdx],al
   1400561c1:	add    BYTE PTR [rax],al
   1400561c3:	add    al,bh
   1400561c5:	(bad)  
   1400561c6:	add    eax,0x560b800
	...
   1400561e3:	add    BYTE PTR [rax+0x62],ch
   1400561e6:	add    eax,0x0
	...
   1400561fb:	add    al,bl
   1400561fd:	stos   DWORD PTR es:[rdi],eax
   1400561fe:	add    eax,0x0
   140056203:	add    bh,bh
   140056205:	(bad)  
   140056206:	(bad)  
   140056207:	inc    DWORD PTR [rax]
   140056209:	add    BYTE PTR [rax],al
   14005620b:	add    BYTE PTR [rax],cl
	...
   140056221:	add    BYTE PTR [rax],al
   140056223:	add    al,bh
   140056225:	lods   al,BYTE PTR ds:[rsi]
   140056226:	add    eax,0x0
   14005622b:	add    bh,bh
   14005622d:	(bad)  
   14005622e:	(bad)  
   14005622f:	inc    DWORD PTR [rax]
   140056231:	add    BYTE PTR [rax],al
   140056233:	add    BYTE PTR [rdx+rax*1],dl
   140056236:	add    BYTE PTR [rax],al
   140056238:	mov    eax,0x109
	...
   140056251:	add    BYTE PTR [rax],al
   140056253:	add    al,al
   140056255:	(bad)  
   140056256:	add    eax,0x0
	...
   140056267:	add    BYTE PTR [rdx],al
   140056269:	add    BYTE PTR [rax],al
   14005626b:	add    BYTE PTR [rax],ah
   14005626d:	(bad)  
   14005626e:	add    eax,0x560b800
	...
   140056283:	add    BYTE PTR [rax],bl
   140056285:	scas   eax,DWORD PTR es:[rdi]
   140056286:	add    eax,0x0
   14005628b:	add    bh,bh
   14005628d:	(bad)  
   14005628e:	(bad)  
   14005628f:	inc    DWORD PTR [rax]
   140056291:	add    BYTE PTR [rax],al
   140056293:	add    BYTE PTR [rax],cl
	...
   1400562b1:	add    BYTE PTR [rax],al
   1400562b3:	add    al,cl
   1400562b5:	(bad)  
   1400562b6:	add    eax,0x0
	...
   1400562c7:	add    BYTE PTR [rdx],al
   1400562c9:	add    BYTE PTR [rax],al
   1400562cb:	add    BYTE PTR [rax-0x47fffa9e],al
   1400562d1:	(bad)  
   1400562d2:	add    eax,0x0
	...
   1400562df:	add    BYTE PTR [rdx],al
   1400562e1:	add    BYTE PTR [rax],al
   1400562e3:	add    BYTE PTR [rax],bl
   1400562e5:	movsxd eax,DWORD PTR [rip+0x560b800]        # 0x145661aeb
	...
   140056303:	add    al,ah
   140056305:	(bad)  
   140056306:	add    eax,0x0
	...
   14005631b:	add    BYTE PTR [rax+0x5b0],ah
   140056321:	add    BYTE PTR [rax],al
   140056323:	add    bh,bh
   140056325:	(bad)  
   140056326:	(bad)  
   140056327:	inc    DWORD PTR [rax]
   140056329:	add    BYTE PTR [rax],al
   14005632b:	add    BYTE PTR [rax],cl
	...
   14005633d:	add    BYTE PTR [rax],al
   14005633f:	add    BYTE PTR [rdx],al
   140056341:	add    BYTE PTR [rax],al
   140056343:	add    BYTE PTR [rax+0x63],bl
   140056346:	add    eax,0x560b800
	...
   14005635b:	add    BYTE PTR [rax-0x4f],cl
   14005635e:	add    eax,0x0
   140056363:	add    bh,bh
   140056365:	(bad)  
   140056366:	(bad)  
   140056367:	inc    DWORD PTR [rax]
   140056369:	add    BYTE PTR [rax],al
   14005636b:	add    BYTE PTR [rcx+rax*1],cl
	...
   14005638a:	add    BYTE PTR [rax],al
   14005638c:	rex movsxd eax,DWORD PTR [rip+0x0]        # 0x140056393
	...
   14005639f:	add    BYTE PTR [rcx],al
   1400563a1:	add    BYTE PTR [rax],al
   1400563a3:	add    al,al
   1400563a5:	mov    cl,0x5
   1400563a7:	add    BYTE PTR [rax],al
   1400563a9:	add    BYTE PTR [rax],al
   1400563ab:	add    bh,bh
   1400563ad:	(bad)  
   1400563ae:	(bad)  
   1400563af:	inc    DWORD PTR [rax]
   1400563b1:	add    BYTE PTR [rax],al
   1400563b3:	add    BYTE PTR [rax],cl
	...
   1400563c5:	add    BYTE PTR [rax],al
   1400563c7:	add    BYTE PTR [rbx],al
   1400563c9:	add    BYTE PTR [rax],al
   1400563cb:	add    BYTE PTR [rax],dh
   1400563cd:	fs add eax,0x563e800
   1400563d3:	add    BYTE PTR [rax+0x563],ah
	...
   1400563e5:	add    BYTE PTR [rax],al
   1400563e7:	add    BYTE PTR [rcx],al
   1400563e9:	add    BYTE PTR [rax],al
   1400563eb:	add    al,bl
   1400563ed:	mov    cl,0x5
   1400563ef:	add    BYTE PTR [rax],al
   1400563f1:	add    BYTE PTR [rax],al
   1400563f3:	add    bh,bh
   1400563f5:	(bad)  
   1400563f6:	(bad)  
   1400563f7:	inc    DWORD PTR [rax]
   1400563f9:	add    BYTE PTR [rax],al
   1400563fb:	add    BYTE PTR [rax],cl
	...
   140056419:	add    BYTE PTR [rax],al
   14005641b:	add    al,cl
   14005641d:	movsxd eax,DWORD PTR [rip+0x0]        # 0x140056423
	...
   14005642f:	add    BYTE PTR [rcx],al
   140056431:	add    BYTE PTR [rax],al
   140056433:	add    BYTE PTR [rax],al
   140056435:	mov    dl,0x5
   140056437:	add    BYTE PTR [rax],al
   140056439:	add    BYTE PTR [rax],al
   14005643b:	add    bh,bh
   14005643d:	(bad)  
   14005643e:	(bad)  
   14005643f:	inc    DWORD PTR [rax]
   140056441:	add    BYTE PTR [rax],al
   140056443:	add    BYTE PTR [rax],cl
	...
   140056459:	add    BYTE PTR [rax],al
   14005645b:	add    BYTE PTR [rbx+rsi*1],ch
   14005645e:	add    al,BYTE PTR [rax]
   140056460:	add    BYTE PTR [rax],al
   140056462:	add    BYTE PTR [rax],al
   140056464:	js     0x1400564ca
   140056466:	add    eax,0x0
	...
   140056477:	add    BYTE PTR [rdx],al
   140056479:	add    BYTE PTR [rax],al
   14005647b:	add    BYTE PTR [rax],dl
   14005647d:	gs add eax,0x5649000
	...
   140056493:	add    BYTE PTR [rax-0x4e],dl
   140056496:	add    eax,0x0
   14005649b:	add    bh,bh
   14005649d:	(bad)  
   14005649e:	(bad)  
   14005649f:	inc    DWORD PTR [rax]
   1400564a1:	add    BYTE PTR [rax],al
   1400564a3:	add    BYTE PTR [rax],bl
   1400564a5:	add    BYTE PTR [rax],al
   1400564a7:	add    BYTE PTR [rax-0x62],bl
   1400564aa:	add    al,BYTE PTR [rax]
	...
   1400564b8:	add    DWORD PTR [rax],eax
   1400564ba:	add    BYTE PTR [rax],al
   1400564bc:	push   0x5b3
   1400564c1:	add    BYTE PTR [rax],al
   1400564c3:	add    bh,bh
   1400564c5:	(bad)  
   1400564c6:	(bad)  
   1400564c7:	inc    DWORD PTR [rax]
   1400564c9:	add    BYTE PTR [rax],al
   1400564cb:	add    BYTE PTR [rax+rax*1],al
	...
   1400564ea:	add    BYTE PTR [rax],al
   1400564ec:	add    BYTE PTR [rbp+0x5],ah
	...
   1400564ff:	add    BYTE PTR [rcx],al
   140056501:	add    BYTE PTR [rax],al
   140056503:	add    BYTE PTR [rax+0x564],bh
	...
   140056511:	add    BYTE PTR [rax],al
   140056513:	add    BYTE PTR [rax-0x4e],bh
   140056516:	add    eax,0x0
   14005651b:	add    bh,bh
   14005651d:	(bad)  
   14005651e:	(bad)  
   14005651f:	inc    DWORD PTR [rax]
   140056521:	add    BYTE PTR [rax],al
   140056523:	add    BYTE PTR [rax],bl
   140056525:	add    BYTE PTR [rax],al
   140056527:	add    BYTE PTR [rax+0x33],cl
   14005652a:	add    al,BYTE PTR [rax]
	...
   14005653c:	xor    BYTE PTR [rbx+0x5],0x0
   140056543:	add    bh,bh
   140056545:	(bad)  
   140056546:	(bad)  
   140056547:	inc    DWORD PTR [rax]
   140056549:	add    BYTE PTR [rax],al
   14005654b:	add    BYTE PTR [rax],bl
   14005654d:	add    BYTE PTR [rax],al
   14005654f:	add    al,dl
   140056551:	rex.WX add al,BYTE PTR [rax]
	...
   140056564:	test   al,0xb3
   140056566:	add    eax,0x0
   14005656b:	add    bh,bh
   14005656d:	(bad)  
   14005656e:	(bad)  
   14005656f:	inc    DWORD PTR [rax]
   140056571:	add    BYTE PTR [rax],al
   140056573:	add    BYTE PTR [rax],bl
   140056575:	add    BYTE PTR [rax],al
   140056577:	add    BYTE PTR [rdx+rcx*2+0x2],dl
	...
   14005658a:	add    BYTE PTR [rax],al
   14005658c:	pop    rsp
   14005658d:	rex.WX add al,BYTE PTR [rax]
   140056590:	add    BYTE PTR [rax],al
   140056592:	add    BYTE PTR [rax],al
   140056594:	test   al,0x65
   140056596:	add    eax,0x0
	...
   1400565a7:	add    BYTE PTR [rbx],al
   1400565a9:	add    BYTE PTR [rax],al
   1400565ab:	add    BYTE PTR [rax+0x65],ah
   1400565ae:	add    eax,0x5653800
   1400565b3:	add    BYTE PTR [rax+0x564],dl
	...
   1400565c5:	add    BYTE PTR [rax],al
   1400565c7:	add    BYTE PTR [rax+0x566],ch
   1400565cd:	add    BYTE PTR [rax],al
   1400565cf:	add    BYTE PTR [rax],al
   1400565d1:	add    BYTE PTR [rax],al
   1400565d3:	add    BYTE PTR [rsi+0x6f],ah
   1400565d6:	add    eax,0x4100000
   1400565db:	add    BYTE PTR [rax+0x568],cl
   1400565e1:	add    BYTE PTR [rax],al
   1400565e3:	add    BYTE PTR [rax],al
   1400565e5:	add    BYTE PTR [rax],al
   1400565e7:	add    dl,ch
   1400565e9:	jno    0x1400565f0
   1400565eb:	add    al,ah
   1400565ed:	adc    DWORD PTR [rax+rax*1],eax
   1400565f0:	call   0x140056b62
   1400565f5:	add    BYTE PTR [rax],al
   1400565f7:	add    BYTE PTR [rax],al
   1400565f9:	add    BYTE PTR [rax],al
   1400565fb:	add    BYTE PTR [rax],ch
   1400565fd:	jb     0x140056604
   1400565ff:	add    BYTE PTR [rax+0x17],al
   140056602:	add    al,0x0
   140056604:	adc    BYTE PTR [rsi+0x5],ch
	...
   14005660f:	add    BYTE PTR [rsi+0x68000572],cl
   140056615:	(bad)  
   140056616:	add    al,0x0
   140056618:	js     0x140056687
   14005661a:	add    eax,0x0
   14005661f:	add    BYTE PTR [rax],al
   140056621:	add    BYTE PTR [rax],al
   140056623:	add    BYTE PTR [rax-0x2ffffa8e],bl
   140056629:	(bad)  
   14005662a:	add    al,0x0
   14005662c:	cwde   
   14005662d:	ins    DWORD PTR es:[rdi],dx
   14005662e:	add    eax,0x0
   140056633:	add    BYTE PTR [rax],al
   140056635:	add    BYTE PTR [rax],al
   140056637:	add    BYTE PTR [rdx+rsi*2+0x16f00005],bh
   14005663e:	add    al,0x0
   140056640:	test   al,0x6d
   140056642:	add    eax,0x0
   140056647:	add    BYTE PTR [rax],al
   140056649:	add    BYTE PTR [rax],al
   14005664b:	add    BYTE PTR [rsi],cl
   14005664d:	jae    0x140056654
   14005664f:	add    BYTE PTR [rax],al
   140056651:	(bad)  
   140056652:	add    al,0x0
   140056654:	shr    BYTE PTR [rbp+0x5],0x0
	...
   140056660:	ins    BYTE PTR es:[rdi],dx
   140056661:	jae    0x140056668
   140056663:	add    BYTE PTR [rax],bl
   140056665:	(bad)  
   140056666:	add    al,0x0
   140056668:	rex outs dx,BYTE PTR ds:[rsi]
   14005666a:	add    eax,0x0
   14005666f:	add    BYTE PTR [rax],al
   140056671:	add    BYTE PTR [rax],al
   140056673:	add    BYTE PTR [rbx+rsi*2+0x17980005],dl
   14005667a:	add    al,0x0
   14005667c:	add    BYTE PTR [rsi+0x5],ch
	...
   140056687:	add    BYTE PTR [rsi+0x58000573],ch
   14005668d:	(bad)  
   14005668e:	add    al,0x0
	...
   1400566a8:	push   rax
   1400566a9:	outs   dx,BYTE PTR ds:[rsi]
   1400566aa:	add    eax,0x0
   1400566af:	add    BYTE PTR [rsi+rbp*2+0x5],ah
   1400566b3:	add    BYTE PTR [rax],al
   1400566b5:	add    BYTE PTR [rax],al
   1400566b7:	add    BYTE PTR [rsi+0x6e],ch
   1400566ba:	add    eax,0x0
   1400566bf:	add    BYTE PTR [rdx+0x56e],cl
   1400566c5:	add    BYTE PTR [rax],al
   1400566c7:	add    BYTE PTR [rsi+0x56e],bl
   1400566cd:	add    BYTE PTR [rax],al
   1400566cf:	add    BYTE PTR [rsi+0x56e],ch
   1400566d5:	add    BYTE PTR [rax],al
   1400566d7:	add    al,al
   1400566d9:	outs   dx,BYTE PTR ds:[rsi]
   1400566da:	add    eax,0x0
   1400566df:	add    dh,cl
   1400566e1:	outs   dx,BYTE PTR ds:[rsi]
   1400566e2:	add    eax,0x0
   1400566e7:	add    ah,bl
   1400566e9:	outs   dx,BYTE PTR ds:[rsi]
   1400566ea:	add    eax,0x0
   1400566ef:	add    dl,bh
   1400566f1:	outs   dx,BYTE PTR ds:[rsi]
   1400566f2:	add    eax,0x0
   1400566f7:	add    BYTE PTR [rdx],dl
   1400566f9:	outs   dx,DWORD PTR ds:[rsi]
   1400566fa:	add    eax,0x0
   1400566ff:	add    BYTE PTR [rdx+0x6f],cl
   140056702:	add    eax,0x0
   140056707:	add    BYTE PTR [rdi+rsi*2+0x5],dh
   14005670e:	add    BYTE PTR [rax],al
   140056710:	movabs ds:0x8600000000000577,al
   140056719:	ja     0x140056720
   14005671b:	add    BYTE PTR [rax],al
   14005671d:	add    BYTE PTR [rax],al
   14005671f:	add    BYTE PTR [rdx+0x77],ch
   140056722:	add    eax,0x0
   140056727:	add    BYTE PTR [rdi+rsi*2+0x5],cl
   14005672b:	add    BYTE PTR [rax],al
   14005672d:	add    BYTE PTR [rax],al
   14005672f:	add    BYTE PTR [rsi],ch
   140056731:	ja     0x140056738
   140056733:	add    BYTE PTR [rax],al
   140056735:	add    BYTE PTR [rax],al
   140056737:	add    BYTE PTR [rsi],cl
   140056739:	ja     0x140056740
   14005673b:	add    BYTE PTR [rax],al
   14005673d:	add    BYTE PTR [rax],al
   14005673f:	add    ah,bh
   140056741:	jbe    0x140056748
   140056743:	add    BYTE PTR [rax],al
   140056745:	add    BYTE PTR [rax],al
   140056747:	add    dl,ch
   140056749:	jbe    0x140056750
   14005674b:	add    BYTE PTR [rax],al
   14005674d:	add    BYTE PTR [rax],al
   14005674f:	add    ah,cl
   140056751:	jbe    0x140056758
   140056753:	add    BYTE PTR [rax],al
   140056755:	add    BYTE PTR [rax],al
   140056757:	add    BYTE PTR [rax+0x576],bh
   14005675d:	add    BYTE PTR [rax],al
   14005675f:	add    BYTE PTR [rax+0x576],ch
   140056765:	add    BYTE PTR [rax],al
   140056767:	add    BYTE PTR [rax+0x576],dl
   14005676d:	add    BYTE PTR [rax],al
   14005676f:	add    BYTE PTR [rax+0x76],bh
   140056772:	add    eax,0x0
   140056777:	add    BYTE PTR [rdx+0x76],ah
   14005677a:	add    eax,0x0
   14005677f:	add    BYTE PTR [rsi+0x76],cl
   140056782:	add    eax,0x0
   140056787:	add    BYTE PTR [rax],bh
   140056789:	jbe    0x140056790
   14005678b:	add    BYTE PTR [rax],al
   14005678d:	add    BYTE PTR [rax],al
   14005678f:	add    BYTE PTR [rdx],ah
   140056791:	jbe    0x140056798
   140056793:	add    BYTE PTR [rax],al
   140056795:	add    BYTE PTR [rax],al
   140056797:	add    BYTE PTR [rsi+rsi*2],dl
   14005679a:	add    eax,0x0
   14005679f:	add    ah,bh
   1400567a1:	jne    0x1400567a8
   1400567a3:	add    BYTE PTR [rax],al
   1400567a5:	add    BYTE PTR [rax],al
   1400567a7:	add    dh,ah
   1400567a9:	jne    0x1400567b0
   1400567ab:	add    BYTE PTR [rax],al
   1400567ad:	add    BYTE PTR [rax],al
   1400567af:	add    dh,dl
   1400567b1:	jne    0x1400567b8
   1400567b3:	add    BYTE PTR [rax],al
   1400567b5:	add    BYTE PTR [rax],al
   1400567b7:	add    al,al
   1400567b9:	jne    0x1400567c0
   1400567bb:	add    BYTE PTR [rax],al
   1400567bd:	add    BYTE PTR [rax],al
   1400567bf:	add    BYTE PTR [rax+0x575],ch
   1400567c5:	add    BYTE PTR [rax],al
   1400567c7:	add    BYTE PTR [rsi+0x575],dl
   1400567cd:	add    BYTE PTR [rax],al
   1400567cf:	add    BYTE PTR [rbp+rsi*2+0x5],al
   1400567d6:	add    BYTE PTR [rax],al
   1400567d8:	jo     0x14005684f
   1400567da:	add    eax,0x0
   1400567df:	add    BYTE PTR [rdx+0x75],dl
   1400567e2:	add    eax,0x0
   1400567e7:	add    BYTE PTR [rdx],bh
   1400567e9:	jne    0x1400567f0
   1400567eb:	add    BYTE PTR [rax],al
   1400567ed:	add    BYTE PTR [rax],al
   1400567ef:	add    BYTE PTR [rsi],bl
   1400567f1:	jne    0x1400567f8
   1400567f3:	add    BYTE PTR [rax],al
   1400567f5:	add    BYTE PTR [rax],al
   1400567f7:	add    BYTE PTR [rax],cl
   1400567f9:	jne    0x140056800
   1400567fb:	add    BYTE PTR [rax],al
   1400567fd:	add    BYTE PTR [rax],al
   1400567ff:	add    al,ch
   140056801:	je     0x140056808
   140056803:	add    BYTE PTR [rax],al
   140056805:	add    BYTE PTR [rax],al
   140056807:	add    dh,cl
   140056809:	je     0x140056810
   14005680b:	add    BYTE PTR [rax],al
   14005680d:	add    BYTE PTR [rax],al
   14005680f:	add    BYTE PTR [rdx+0x574],bh
   140056815:	add    BYTE PTR [rax],al
   140056817:	add    BYTE PTR [rsp+rsi*2+0x5],ah
   14005681e:	add    BYTE PTR [rax],al
   140056820:	xchg   esi,eax
   140056821:	je     0x140056828
   140056823:	add    BYTE PTR [rax],al
   140056825:	add    BYTE PTR [rax],al
   140056827:	add    BYTE PTR [rdx+0x74],bh
   14005682a:	add    eax,0x0
   14005682f:	add    BYTE PTR [rax+0x74],ch
   140056832:	add    eax,0x0
   140056837:	add    BYTE PTR [rdx+0x74],dl
   14005683a:	add    eax,0x0
   14005683f:	add    BYTE PTR [rax+0x74],al
   140056842:	add    eax,0x0
   140056847:	add    BYTE PTR [rdx],ch
   140056849:	je     0x140056850
   14005684b:	add    BYTE PTR [rax],al
   14005684d:	add    BYTE PTR [rax],al
   14005684f:	add    BYTE PTR [rdx],dl
   140056851:	je     0x140056858
   140056853:	add    BYTE PTR [rax],al
   140056855:	add    BYTE PTR [rax],al
   140056857:	add    BYTE PTR [rdx],al
   140056859:	je     0x140056860
   14005685b:	add    BYTE PTR [rax],al
   14005685d:	add    BYTE PTR [rax],al
   14005685f:	add    dl,dh
   140056861:	jae    0x140056868
   140056863:	add    BYTE PTR [rax],al
   140056865:	add    BYTE PTR [rax],al
   140056867:	add    dl,ah
   140056869:	jae    0x140056870
   14005686b:	add    BYTE PTR [rax],al
   14005686d:	add    BYTE PTR [rax],al
   14005686f:	add    ah,cl
   140056871:	jae    0x140056878
   140056873:	add    BYTE PTR [rax],al
   140056875:	add    BYTE PTR [rax],al
   140056877:	add    BYTE PTR [rdx+0x573],bh
	...
   140056885:	add    BYTE PTR [rax],al
   140056887:	add    BYTE PTR [rax+0x57f],cl
   14005688d:	add    BYTE PTR [rax],al
   14005688f:	add    BYTE PTR [rsi+0x7f],dh
   140056892:	add    eax,0x0
   140056897:	add    BYTE PTR [rdi+rdi*2+0x5],bl
   14005689e:	add    BYTE PTR [rax],al
   1400568a0:	push   rax
   1400568a1:	jg     0x1400568a8
   1400568a3:	add    BYTE PTR [rax],al
   1400568a5:	add    BYTE PTR [rax],al
   1400568a7:	add    BYTE PTR [rax+0x7f],al
   1400568aa:	add    eax,0x0
   1400568af:	add    BYTE PTR [rdi+rdi*2],ah
   1400568b2:	add    eax,0x0
   1400568b7:	add    BYTE PTR [rdx],dl
   1400568b9:	jg     0x1400568c0
   1400568bb:	add    BYTE PTR [rax],al
   1400568bd:	add    BYTE PTR [rax],al
   1400568bf:	add    BYTE PTR [rax],al
   1400568c1:	jg     0x1400568c8
   1400568c3:	add    BYTE PTR [rax],al
   1400568c5:	add    BYTE PTR [rax],al
   1400568c7:	add    dl,dh
   1400568c9:	jle    0x1400568d0
   1400568cb:	add    BYTE PTR [rax],al
   1400568cd:	add    BYTE PTR [rax],al
   1400568cf:	add    al,ah
   1400568d1:	jle    0x1400568d8
   1400568d3:	add    BYTE PTR [rax],al
   1400568d5:	add    BYTE PTR [rax],al
   1400568d7:	add    al,dl
   1400568d9:	jle    0x1400568e0
   1400568db:	add    BYTE PTR [rax],al
   1400568dd:	add    BYTE PTR [rax],al
   1400568df:	add    BYTE PTR [rdx+0x57e],bh
   1400568e5:	add    BYTE PTR [rax],al
   1400568e7:	add    BYTE PTR [rsi+0x57e],ah
   1400568ed:	add    BYTE PTR [rax],al
   1400568ef:	add    BYTE PTR [rsi+0x57e],dl
   1400568f5:	add    BYTE PTR [rax],al
   1400568f7:	add    BYTE PTR [rax+0x57e],cl
   1400568fd:	add    BYTE PTR [rax],al
   1400568ff:	add    BYTE PTR [rax+0x7e],bh
   140056902:	add    eax,0x0
   140056907:	add    BYTE PTR [rax+0x7e],ch
   14005690a:	add    eax,0x0
   14005690f:	add    BYTE PTR [rsi+0x57f],ch
   140056915:	add    BYTE PTR [rax],al
   140056917:	add    BYTE PTR [rsi+0x57f],bh
   14005691d:	add    BYTE PTR [rax],al
   14005691f:	add    ah,dl
   140056921:	jg     0x140056928
   140056923:	add    BYTE PTR [rax],al
   140056925:	add    BYTE PTR [rax],al
   140056927:	add    ah,ah
   140056929:	jg     0x140056930
   14005692b:	add    BYTE PTR [rax],al
   14005692d:	add    BYTE PTR [rax],al
   14005692f:	add    ah,dh
   140056931:	jg     0x140056938
   140056933:	add    BYTE PTR [rax],al
   140056935:	add    BYTE PTR [rax],al
   140056937:	add    BYTE PTR [rdx],al
   140056939:	add    BYTE PTR [rip+0x0],0x0        # 0x140056940
   140056940:	(bad)  
   140056941:	add    BYTE PTR [rip+0x0],0x0        # 0x140056948
   140056948:	xor    BYTE PTR [rax+0x5],al
   14005694e:	add    BYTE PTR [rax],al
   140056950:	rex.WX add BYTE PTR [rip+0x0],0x0        # 0x140056958
   140056958:	pop    rsp
   140056959:	add    BYTE PTR [rip+0x0],0x0        # 0x140056960
   140056960:	ins    BYTE PTR es:[rdi],dx
   140056961:	add    BYTE PTR [rip+0x0],0x0        # 0x140056968
   140056968:	jl     0x1400568ea
   14005696a:	add    eax,0x0
   14005696f:	add    BYTE PTR [rsi+0x580],cl
   140056975:	add    BYTE PTR [rax],al
   140056977:	add    ah,dl
   140056979:	jno    0x140056980
   14005697b:	add    BYTE PTR [rax],al
   14005697d:	add    BYTE PTR [rax],al
   14005697f:	add    BYTE PTR [rsi+0x571],dh
   140056985:	add    BYTE PTR [rax],al
   140056987:	add    BYTE PTR [rax+0x571],ch
   14005698d:	add    BYTE PTR [rax],al
   14005698f:	add    BYTE PTR [rsi+0x571],dl
   140056995:	add    BYTE PTR [rax],al
   140056997:	add    BYTE PTR [rcx+rsi*2+0x5],al
   14005699e:	add    BYTE PTR [rax],al
   1400569a0:	outs   dx,BYTE PTR ds:[rsi]
   1400569a1:	jno    0x1400569a8
   1400569a3:	add    BYTE PTR [rax],al
   1400569a5:	add    BYTE PTR [rax],al
   1400569a7:	add    BYTE PTR [rcx+rsi*2+0x5],bl
   1400569ab:	add    BYTE PTR [rax],al
   1400569ad:	add    BYTE PTR [rax],al
   1400569af:	add    BYTE PTR [rsi+0x71],cl
   1400569b2:	add    eax,0x0
   1400569b7:	add    BYTE PTR [rsi],dh
   1400569b9:	jno    0x1400569c0
   1400569bb:	add    BYTE PTR [rax],al
   1400569bd:	add    BYTE PTR [rax],al
   1400569bf:	add    BYTE PTR [rax],ch
   1400569c1:	jno    0x1400569c8
   1400569c3:	add    BYTE PTR [rax],al
   1400569c5:	add    BYTE PTR [rax],al
   1400569c7:	add    BYTE PTR [rax],bl
   1400569c9:	jno    0x1400569d0
   1400569cb:	add    BYTE PTR [rax],al
   1400569cd:	add    BYTE PTR [rax],al
   1400569cf:	add    BYTE PTR [rdx],al
   1400569d1:	jno    0x1400569d8
   1400569d3:	add    BYTE PTR [rax],al
   1400569d5:	add    BYTE PTR [rax],al
   1400569d7:	add    ah,dh
   1400569d9:	jo     0x1400569e0
   1400569db:	add    BYTE PTR [rax],al
   1400569dd:	add    BYTE PTR [rax],al
   1400569df:	add    dh,bl
   1400569e1:	jo     0x1400569e8
   1400569e3:	add    BYTE PTR [rax],al
   1400569e5:	add    BYTE PTR [rax],al
   1400569e7:	add    dh,dl
   1400569e9:	jo     0x1400569f0
   1400569eb:	add    BYTE PTR [rax],al
   1400569ed:	add    BYTE PTR [rax],al
   1400569ef:	add    ah,al
   1400569f1:	jo     0x1400569f8
   1400569f3:	add    BYTE PTR [rax],al
   1400569f5:	add    BYTE PTR [rax],al
   1400569f7:	add    BYTE PTR [rsi+0x570],ch
   1400569fd:	add    BYTE PTR [rax],al
   1400569ff:	add    BYTE PTR [rax+0x570],ah
   140056a05:	add    BYTE PTR [rax],al
   140056a07:	add    BYTE PTR [rax+0x570],dl
   140056a0d:	add    BYTE PTR [rax],al
   140056a0f:	add    BYTE PTR [rax+rsi*2+0x5],bh
   140056a13:	add    BYTE PTR [rax],al
   140056a15:	add    BYTE PTR [rax],al
   140056a17:	add    BYTE PTR [rax+rsi*2+0x5],ah
   140056a1b:	add    BYTE PTR [rax],al
   140056a1d:	add    BYTE PTR [rax],al
   140056a1f:	add    BYTE PTR [rsi+0x70],cl
   140056a22:	add    eax,0x0
   140056a27:	add    BYTE PTR [rdx],bh
   140056a29:	jo     0x140056a30
   140056a2b:	add    BYTE PTR [rax],al
   140056a2d:	add    BYTE PTR [rax],al
   140056a2f:	add    BYTE PTR [rax+rsi*2],ch
   140056a32:	add    eax,0x0
   140056a37:	add    BYTE PTR [rax],bl
   140056a39:	jo     0x140056a40
   140056a3b:	add    BYTE PTR [rax],al
   140056a3d:	add    BYTE PTR [rax],al
   140056a3f:	add    BYTE PTR [rax],cl
   140056a41:	jo     0x140056a48
   140056a43:	add    BYTE PTR [rax],al
   140056a45:	add    BYTE PTR [rax],al
   140056a47:	add    dh,dh
   140056a49:	outs   dx,DWORD PTR ds:[rsi]
   140056a4a:	add    eax,0x0
   140056a4f:	add    ah,ah
   140056a51:	outs   dx,DWORD PTR ds:[rsi]
   140056a52:	add    eax,0x0
   140056a57:	add    ah,dl
   140056a59:	outs   dx,DWORD PTR ds:[rsi]
   140056a5a:	add    eax,0x0
   140056a5f:	add    ah,al
   140056a61:	outs   dx,DWORD PTR ds:[rsi]
   140056a62:	add    eax,0x0
   140056a67:	add    BYTE PTR [rdx+0x56f],dh
   140056a6d:	add    BYTE PTR [rax],al
   140056a6f:	add    BYTE PTR [rsi+0x56f],ah
   140056a75:	add    BYTE PTR [rax],al
   140056a77:	add    BYTE PTR [rsi+0x56f],dl
   140056a7d:	add    BYTE PTR [rax],al
   140056a7f:	add    BYTE PTR [rsi+0x56f],al
   140056a85:	add    BYTE PTR [rax],al
   140056a87:	add    BYTE PTR [rdi+rbp*2+0x5],dh
   140056a8b:	add    BYTE PTR [rax],al
   140056a8d:	add    BYTE PTR [rax],al
   140056a8f:	add    BYTE PTR [rsi+0x7f],ah
   140056a92:	add    eax,0x0
   140056a97:	add    dl,dl
   140056a99:	ja     0x140056aa0
   140056a9b:	add    BYTE PTR [rax],al
   140056a9d:	add    BYTE PTR [rax],al
   140056a9f:	add    ah,ah
   140056aa1:	ja     0x140056aa8
   140056aa3:	add    BYTE PTR [rax],al
   140056aa5:	add    BYTE PTR [rax],al
   140056aa7:	add    ah,dh
   140056aa9:	ja     0x140056ab0
   140056aab:	add    BYTE PTR [rax],al
   140056aad:	add    BYTE PTR [rax],al
   140056aaf:	add    BYTE PTR [rax+rdi*2],al
   140056ab2:	add    eax,0x0
   140056ab7:	add    BYTE PTR [rax],dl
   140056ab9:	js     0x140056ac0
   140056abb:	add    BYTE PTR [rax],al
   140056abd:	add    BYTE PTR [rax],al
   140056abf:	add    BYTE PTR [rax+rdi*2],ah
   140056ac2:	add    eax,0x0
   140056ac7:	add    BYTE PTR [rax+0x78],al
   140056aca:	add    eax,0x0
   140056acf:	add    BYTE PTR [rsi+0x78],dl
   140056ad2:	add    eax,0x0
   140056ad7:	add    BYTE PTR [rax+rdi*2+0x5],ah
   140056adb:	add    BYTE PTR [rax],al
   140056add:	add    BYTE PTR [rax],al
   140056adf:	add    BYTE PTR [rdx+0x78],bh
   140056ae2:	add    eax,0x0
   140056ae7:	add    BYTE PTR [rdx+0x578],cl
   140056aed:	add    BYTE PTR [rax],al
   140056aef:	add    BYTE PTR [rsi+0x578],dl
   140056af5:	add    BYTE PTR [rax],al
   140056af7:	add    BYTE PTR [rax+0x578],ch
   140056afd:	add    BYTE PTR [rax],al
   140056aff:	add    BYTE PTR [rsi+0x578],dh
   140056b05:	add    BYTE PTR [rax],al
   140056b07:	add    dh,bl
   140056b09:	js     0x140056b10
   140056b0b:	add    BYTE PTR [rax],al
   140056b0d:	add    BYTE PTR [rax],al
   140056b0f:	add    dh,dh
   140056b11:	js     0x140056b18
   140056b13:	add    BYTE PTR [rax],al
   140056b15:	add    BYTE PTR [rax],al
   140056b17:	add    BYTE PTR [rcx+rdi*2],cl
   140056b1a:	add    eax,0x0
   140056b1f:	add    BYTE PTR [rsi],bl
   140056b21:	jns    0x140056b28
   140056b23:	add    BYTE PTR [rax],al
   140056b25:	add    BYTE PTR [rax],al
   140056b27:	add    BYTE PTR [rax],bh
   140056b29:	jns    0x140056b30
   140056b2b:	add    BYTE PTR [rax],al
   140056b2d:	add    BYTE PTR [rax],al
   140056b2f:	add    BYTE PTR [rdx+0x79],dl
   140056b32:	add    eax,0x0
   140056b37:	add    BYTE PTR [rcx+rdi*2+0x5],ah
   140056b3b:	add    BYTE PTR [rax],al
   140056b3d:	add    BYTE PTR [rax],al
   140056b3f:	add    BYTE PTR [rsi+0x79],bh
   140056b42:	add    eax,0x0
   140056b47:	add    BYTE PTR [rax+0x579],bl
   140056b4d:	add    BYTE PTR [rax],al
   140056b4f:	add    BYTE PTR [rsi+0x579],ah
   140056b55:	add    BYTE PTR [rax],al
   140056b57:	add    BYTE PTR [rdx+0x579],dh
   140056b5d:	add    BYTE PTR [rax],al
   140056b5f:	add    BYTE PTR [rsi+0x579],bh
   140056b65:	add    BYTE PTR [rax],al
   140056b67:	add    dl,dl
   140056b69:	jns    0x140056b70
   140056b6b:	add    BYTE PTR [rax],al
   140056b6d:	add    BYTE PTR [rax],al
   140056b6f:	add    ah,ah
   140056b71:	jns    0x140056b78
   140056b73:	add    BYTE PTR [rax],al
   140056b75:	add    BYTE PTR [rax],al
   140056b77:	add    dh,ch
   140056b79:	jns    0x140056b80
   140056b7b:	add    BYTE PTR [rax],al
   140056b7d:	add    BYTE PTR [rax],al
   140056b7f:	add    dl,bh
   140056b81:	jns    0x140056b88
   140056b83:	add    BYTE PTR [rax],al
   140056b85:	add    BYTE PTR [rax],al
   140056b87:	add    BYTE PTR [rsi],al
   140056b89:	jp     0x140056b90
   140056b8b:	add    BYTE PTR [rax],al
   140056b8d:	add    BYTE PTR [rax],al
   140056b8f:	add    BYTE PTR [rax],bl
   140056b91:	jp     0x140056b98
   140056b93:	add    BYTE PTR [rax],al
   140056b95:	add    BYTE PTR [rax],al
   140056b97:	add    BYTE PTR [rsi],ah
   140056b99:	jp     0x140056ba0
   140056b9b:	add    BYTE PTR [rax],al
   140056b9d:	add    BYTE PTR [rax],al
   140056b9f:	add    BYTE PTR [rsi],bh
   140056ba1:	jp     0x140056ba8
   140056ba3:	add    BYTE PTR [rax],al
   140056ba5:	add    BYTE PTR [rax],al
   140056ba7:	add    BYTE PTR [rsi+0x7a],dl
   140056baa:	add    eax,0x0
   140056baf:	add    BYTE PTR [rdx+0x7a],ch
   140056bb2:	add    eax,0x0
   140056bb7:	add    BYTE PTR [rdx+rdi*2+0x5],al
   140056bbe:	add    BYTE PTR [rax],al
   140056bc0:	cwde   
   140056bc1:	jp     0x140056bc8
   140056bc3:	add    BYTE PTR [rax],al
   140056bc5:	add    BYTE PTR [rax],al
   140056bc7:	add    BYTE PTR [rdx+rdi*2+0x5],dh
   140056bce:	add    BYTE PTR [rax],al
   140056bd0:	sar    BYTE PTR [rdx+0x5],0x0
   140056bd4:	add    BYTE PTR [rax],al
   140056bd6:	add    BYTE PTR [rax],al
   140056bd8:	(bad)  
   140056bd9:	jp     0x140056be0
   140056bdb:	add    BYTE PTR [rax],al
   140056bdd:	add    BYTE PTR [rax],al
   140056bdf:	add    ah,bl
   140056be1:	jp     0x140056be8
   140056be3:	add    BYTE PTR [rax],al
   140056be5:	add    BYTE PTR [rax],al
   140056be7:	add    dh,ah
   140056be9:	jp     0x140056bf0
   140056beb:	add    BYTE PTR [rax],al
   140056bed:	add    BYTE PTR [rax],al
   140056bef:	add    dl,bh
   140056bf1:	jp     0x140056bf8
   140056bf3:	add    BYTE PTR [rax],al
   140056bf5:	add    BYTE PTR [rax],al
   140056bf7:	add    BYTE PTR [rsi],cl
   140056bf9:	jnp    0x140056c00
   140056bfb:	add    BYTE PTR [rax],al
   140056bfd:	add    BYTE PTR [rax],al
   140056bff:	add    BYTE PTR [rbx+rdi*2],bl
   140056c02:	add    eax,0x0
   140056c07:	add    BYTE PTR [rsi],ch
   140056c09:	jnp    0x140056c10
   140056c0b:	add    BYTE PTR [rax],al
   140056c0d:	add    BYTE PTR [rax],al
   140056c0f:	add    BYTE PTR [rbx+rdi*2+0x5],al
   140056c13:	add    BYTE PTR [rax],al
   140056c15:	add    BYTE PTR [rax],al
   140056c17:	add    BYTE PTR [rbx+rdi*2+0x5],dl
   140056c1b:	add    BYTE PTR [rax],al
   140056c1d:	add    BYTE PTR [rax],al
   140056c1f:	add    BYTE PTR [rbx+rdi*2+0x5],ah
   140056c23:	add    BYTE PTR [rax],al
   140056c25:	add    BYTE PTR [rax],al
   140056c27:	add    BYTE PTR [rbx+rdi*2+0x5],dh
   140056c2b:	add    BYTE PTR [rax],al
   140056c2d:	add    BYTE PTR [rax],al
   140056c2f:	add    BYTE PTR [rsi+0x57b],al
   140056c35:	add    BYTE PTR [rax],al
   140056c37:	add    BYTE PTR [rdx+0x57b],bl
   140056c3d:	add    BYTE PTR [rax],al
   140056c3f:	add    BYTE PTR [rdx+0x57b],ch
   140056c45:	add    BYTE PTR [rax],al
   140056c47:	add    BYTE PTR [rdx+0x57b],bh
   140056c4d:	add    BYTE PTR [rax],al
   140056c4f:	add    dh,cl
   140056c51:	jnp    0x140056c58
   140056c53:	add    BYTE PTR [rax],al
   140056c55:	add    BYTE PTR [rax],al
   140056c57:	add    ah,ch
   140056c59:	jnp    0x140056c60
   140056c5b:	add    BYTE PTR [rax],al
   140056c5d:	add    BYTE PTR [rax],al
   140056c5f:	add    dl,bh
   140056c61:	jnp    0x140056c68
   140056c63:	add    BYTE PTR [rax],al
   140056c65:	add    BYTE PTR [rax],al
   140056c67:	add    BYTE PTR [rsp+rdi*2],cl
   140056c6a:	add    eax,0x0
   140056c6f:	add    BYTE PTR [rax],ch
   140056c71:	jl     0x140056c78
   140056c73:	add    BYTE PTR [rax],al
   140056c75:	add    BYTE PTR [rax],al
   140056c77:	add    BYTE PTR [rsp+rdi*2],dh
   140056c7a:	add    eax,0x0
   140056c7f:	add    BYTE PTR [rsi+0x7c],al
   140056c82:	add    eax,0x0
   140056c87:	add    BYTE PTR [rax+0x7c],bl
   140056c8a:	add    eax,0x0
   140056c8f:	add    BYTE PTR [rax+0x7c],ch
   140056c92:	add    eax,0x0
   140056c97:	add    BYTE PTR [rsi+0x57c],al
   140056c9d:	add    BYTE PTR [rax],al
   140056c9f:	add    BYTE PTR [rsi+0x57c],dl
   140056ca5:	add    BYTE PTR [rax],al
   140056ca7:	add    BYTE PTR [rsp+rdi*2+0x5],ch
   140056cae:	add    BYTE PTR [rax],al
   140056cb0:	mov    esp,0x57c
   140056cb5:	add    BYTE PTR [rax],al
   140056cb7:	add    ah,cl
   140056cb9:	jl     0x140056cc0
   140056cbb:	add    BYTE PTR [rax],al
   140056cbd:	add    BYTE PTR [rax],al
   140056cbf:	add    al,ch
   140056cc1:	jl     0x140056cc8
   140056cc3:	add    BYTE PTR [rax],al
   140056cc5:	add    BYTE PTR [rax],al
   140056cc7:	add    dh,dh
   140056cc9:	jl     0x140056cd0
   140056ccb:	add    BYTE PTR [rax],al
   140056ccd:	add    BYTE PTR [rax],al
   140056ccf:	add    BYTE PTR [rdx],al
   140056cd1:	jge    0x140056cd8
   140056cd3:	add    BYTE PTR [rax],al
   140056cd5:	add    BYTE PTR [rax],al
   140056cd7:	add    BYTE PTR [rdx],dl
   140056cd9:	jge    0x140056ce0
   140056cdb:	add    BYTE PTR [rax],al
   140056cdd:	add    BYTE PTR [rax],al
   140056cdf:	add    BYTE PTR [rdi*2+0x5],ah
   140056ce6:	add    BYTE PTR [rax],al
   140056ce8:	xor    al,0x7d
   140056cea:	add    eax,0x0
   140056cef:	add    BYTE PTR [rbp+rdi*2+0x5],al
   140056cf3:	add    BYTE PTR [rax],al
   140056cf5:	add    BYTE PTR [rax],al
   140056cf7:	add    BYTE PTR [rdx+0x7d],bl
   140056cfa:	add    eax,0x0
   140056cff:	add    BYTE PTR [rax+0x7d],ch
   140056d02:	add    eax,0x0
   140056d07:	add    BYTE PTR [rbp+rdi*2+0x5],bh
   140056d0b:	add    BYTE PTR [rax],al
   140056d0d:	add    BYTE PTR [rax],al
   140056d0f:	add    BYTE PTR [rbp+rdi*2+0x5],cl
   140056d16:	add    BYTE PTR [rax],al
   140056d18:	(bad)  
   140056d19:	jge    0x140056d20
   140056d1b:	add    BYTE PTR [rax],al
   140056d1d:	add    BYTE PTR [rax],al
   140056d1f:	add    BYTE PTR [rsi+0x57d],ah
   140056d25:	add    BYTE PTR [rax],al
   140056d27:	add    BYTE PTR [rdx+0x57d],dh
   140056d2d:	add    BYTE PTR [rax],al
   140056d2f:	add    dl,al
   140056d31:	jge    0x140056d38
   140056d33:	add    BYTE PTR [rax],al
   140056d35:	add    BYTE PTR [rax],al
   140056d37:	add    al,dl
   140056d39:	jge    0x140056d40
   140056d3b:	add    BYTE PTR [rax],al
   140056d3d:	add    BYTE PTR [rax],al
   140056d3f:	add    dl,ah
   140056d41:	jge    0x140056d48
   140056d43:	add    BYTE PTR [rax],al
   140056d45:	add    BYTE PTR [rax],al
   140056d47:	add    al,bh
   140056d49:	jge    0x140056d50
   140056d4b:	add    BYTE PTR [rax],al
   140056d4d:	add    BYTE PTR [rax],al
   140056d4f:	add    BYTE PTR [rsi+rdi*2],dl
   140056d52:	add    eax,0x0
   140056d57:	add    BYTE PTR [rsi],ah
   140056d59:	jle    0x140056d60
   140056d5b:	add    BYTE PTR [rax],al
   140056d5d:	add    BYTE PTR [rax],al
   140056d5f:	add    BYTE PTR [rax+0x7e],al
   140056d62:	add    eax,0x0
   140056d67:	add    BYTE PTR [rdx+0x7e],dl
   140056d6a:	add    eax,0x0
	...
   140056d77:	add    BYTE PTR [rsi],al
   140056d79:	add    BYTE PTR [rax],al
   140056d7b:	add    BYTE PTR [rax],al
   140056d7d:	add    BYTE PTR [rax],al
   140056d7f:	add    BYTE PTR [rax+rax*1],0x0
   140056d83:	add    BYTE PTR [rax],al
   140056d85:	add    BYTE PTR [rax],al
   140056d87:	add    BYTE PTR [rdx],0x0
   140056d8a:	add    BYTE PTR [rax],al
   140056d8c:	add    BYTE PTR [rax],al
   140056d8e:	add    BYTE PTR [rax+0x0],al
   140056d94:	add    BYTE PTR [rax],al
   140056d96:	add    BYTE PTR [rax],al
   140056d98:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056d99:	jb     0x140056da0
	...
   140056da7:	add    dl,ch
   140056da9:	jb     0x140056db0
   140056dab:	add    BYTE PTR [rax],al
   140056dad:	add    BYTE PTR [rax],al
   140056daf:	add    dh,al
   140056db1:	jb     0x140056db8
	...
   140056dbf:	add    BYTE PTR [rdx+0x73],cl
   140056dc2:	add    eax,0x0
   140056dc7:	add    BYTE PTR [rsi+0x73],bl
   140056dca:	add    eax,0x0
   140056dcf:	add    BYTE PTR [rbx+rsi*2],bl
   140056dd2:	add    eax,0x0
   140056dd7:	add    BYTE PTR [rbx+rsi*2],dh
   140056dda:	add    eax,0x0
	...
   140056de7:	add    BYTE PTR [rax],dl
   140056de9:	jb     0x140056df0
   140056deb:	add    BYTE PTR [rax],al
   140056ded:	add    BYTE PTR [rax],al
   140056def:	add    al,bh
   140056df1:	jno    0x140056df8
	...
   140056dff:	add    BYTE PTR [rbx+rsi*2+0x5],bl
	...
   140056e0e:	add    BYTE PTR [rax],al
   140056e10:	rex.RX jb 0x140056e18
   140056e13:	add    BYTE PTR [rax],al
   140056e15:	add    BYTE PTR [rax],al
   140056e17:	add    BYTE PTR [rax+0x72],bl
   140056e1a:	add    eax,0x0
   140056e1f:	add    BYTE PTR [rdx+rsi*2+0x5],ch
   140056e23:	add    BYTE PTR [rax],al
   140056e25:	add    BYTE PTR [rax],al
   140056e27:	add    BYTE PTR [rsi+0x72],bh
   140056e2a:	add    eax,0x0
   140056e2f:	add    BYTE PTR [rdx+rsi*2],dh
   140056e32:	add    eax,0x0
	...
   140056e3f:	add    BYTE PTR [rax+0x73],bh
   140056e42:	add    eax,0x0
	...
   140056e4f:	add    BYTE PTR [rdi],dh
   140056e51:	add    DWORD PTR [rdi+0x65],eax
   140056e54:	je     0x140056e97
   140056e56:	movsxd ebp,DWORD PTR [rcx+rcx*2+0x6e]
   140056e5a:	outs   dx,WORD PTR ds:[rsi]
   140056e5c:	jb     0x140056ecb
   140056e5e:	(bad)  
   140056e5f:	je     0x140056eca
   140056e61:	outs   dx,DWORD PTR ds:[rsi]
   140056e62:	outs   dx,BYTE PTR ds:[rsi]
   140056e63:	add    BYTE PTR [rsi],dh
   140056e65:	add    DWORD PTR [rdi+0x65],eax
   140056e68:	je     0x140056eab
   140056e6a:	movsxd esp,DWORD PTR [rbp+0x0]
   140056e6d:	add    BYTE PTR [rcx+rax*1+0x47],bl
   140056e71:	gs je  0x140056ec7
   140056e74:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140056e78:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140056e80:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   140056e87:	movsxd ebp,DWORD PTR [rax+rax*1-0x6b]
   140056e8b:	add    dl,BYTE PTR [rdx+0x65]
   140056e8e:	addr32 push rcx
   140056e90:	jne    0x140056ef7
   140056e92:	jb     0x140056f0d
   140056e94:	push   rsi
   140056e95:	(bad)  
   140056e96:	ins    BYTE PTR es:[rdi],dx
   140056e97:	jne    0x140056efe
   140056e99:	rex.RB js 0x140056edd
   140056e9c:	add    BYTE PTR [rax],al
   140056e9e:	mov    BYTE PTR [rdx],al
   140056ea0:	push   rdx
   140056ea1:	gs addr32 rex.WRXB jo 0x140056f0b
   140056ea6:	outs   dx,BYTE PTR ds:[rsi]
   140056ea7:	rex.WXB
   140056ea8:	gs jns 0x140056ef0
   140056eab:	js     0x140056eee
   140056ead:	add    BYTE PTR [rdx+0x1],ah
   140056eb0:	rex.RXB
   140056eb1:	gs je  0x140056f07
   140056eb4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140056eb8:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
   140056ec0:	pushf  
   140056ec1:	add    DWORD PTR [rcx+0x73],ecx
   140056ec4:	push   rsi
   140056ec5:	(bad)  
   140056ec6:	ins    BYTE PTR es:[rdi],dx
   140056ec7:	imul   esp,DWORD PTR [rbx+rdx*2+0x69],0x58000064
   140056ecf:	add    dl,BYTE PTR [rdx+0x65]
   140056ed2:	rex.XB ins BYTE PTR es:[edi],dx
   140056ed5:	outs   dx,DWORD PTR ds:[rsi]
   140056ed6:	jae    0x140056f3d
   140056ed8:	rex.WXB
   140056ed9:	gs jns 0x140056edc
   140056edc:	add    DWORD PTR [r15+0x65],eax
   140056ee0:	je     0x140056f27
   140056ee2:	js     0x140056f54
   140056ee4:	ins    BYTE PTR es:[rdi],dx
   140056ee5:	imul   esp,DWORD PTR [rbx+0x69],0x746e4574
   140056eec:	jb     0x140056f57
   140056eee:	gs jae 0x140056f37
   140056ef1:	jb     0x140056f62
   140056ef3:	ins    DWORD PTR es:[rdi],dx
   140056ef4:	movsxd ebp,DWORD PTR [r9+rax*2+0x0]
   140056ef9:	add    BYTE PTR [rsi+0x1],dl
   140056efc:	rex.RXB
   140056efd:	gs je  0x140056f4e
   140056f00:	(bad)  
   140056f01:	ins    DWORD PTR es:[rdi],dx
   140056f02:	gs fs push rbx
   140056f05:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140056f09:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x576f666e
   140056f11:	add    BYTE PTR [rcx+0x6e6f4300],al
   140056f17:	jbe    0x140056f7e
   140056f19:	jb     0x140056f8f
   140056f1b:	push   rbx
   140056f1c:	je     0x140056f90
   140056f1e:	imul   ebp,DWORD PTR [rsi+0x67],0x75636553
   140056f25:	jb     0x140056f90
   140056f27:	je     0x140056fa2
   140056f29:	rex.R
   140056f2a:	gs jae 0x140056f90
   140056f2d:	jb     0x140056f98
   140056f2f:	jo     0x140056fa5
   140056f31:	outs   dx,DWORD PTR ds:[rsi]
   140056f32:	jb     0x140056f88
   140056f34:	outs   dx,DWORD PTR ds:[rsi]
   140056f35:	push   rbx
   140056f36:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140056f3a:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140056f42:	imul   esi,DWORD PTR [rax+0x74],0x57726f
   140056f49:	add    BYTE PTR [rbx+0x56734901],bl
   140056f4f:	(bad)  
   140056f50:	ins    BYTE PTR es:[rdi],dx
   140056f51:	imul   esp,DWORD PTR [rbx+rdx*2+0x65],0x69727563
   140056f59:	je     0x140056fd4
   140056f5b:	rex.R
   140056f5c:	gs jae 0x140056fc2
   140056f5f:	jb     0x140056fca
   140056f61:	jo     0x140056fd7
   140056f63:	outs   dx,DWORD PTR ds:[rsi]
   140056f64:	jb     0x140056f66
   140056f66:	rex.B
   140056f67:	rex.R push rsi
   140056f69:	push   r8
   140056f6b:	xor    rsi,QWORD PTR [r10]
   140056f6e:	cs fs ins BYTE PTR es:[rdi],dx
   140056f71:	ins    BYTE PTR es:[rdi],dx
   140056f72:	add    BYTE PTR [rax],al
   140056f74:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056f75:	add    BYTE PTR [rbx+0x6f],al
   140056f78:	ins    DWORD PTR es:[rdi],dx
   140056f79:	jo     0x140056fdc
   140056f7b:	jb     0x140056fe2
   140056f7d:	push   rbx
   140056f7e:	je     0x140056ff2
   140056f80:	imul   ebp,DWORD PTR [rsi+0x67],0x70000057
   140056f87:	add    al,BYTE PTR [rdi+0x65]
   140056f8a:	je     0x140056fd8
   140056f8c:	(bad)  
   140056f8d:	jae    0x140057003
   140056f8f:	rex.RB jb 0x140057004
   140056f92:	outs   dx,DWORD PTR ds:[rsi]
   140056f93:	jb     0x140056f95
   140056f95:	add    BYTE PTR [rbx],ch
   140056f97:	add    eax,DWORD PTR [rdi+0x65]
   140056f9a:	je     0x140056ff2
   140056f9c:	gs jb  0x140057012
   140056f9f:	imul   ebp,DWORD PTR [rdi+0x6e],0x417845
   140056fa6:	rol    BYTE PTR [rbx],1
   140056fa8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140056faa:	movsxd esp,DWORD PTR [rcx+0x6c]
   140056fad:	rex.RX jb 0x140057015
   140056fb0:	add    BYTE PTR gs:[rcx+0x6e694601],ch
   140056fb7:	fs push rdx
   140056fb9:	gs jae 0x14005702b
   140056fbc:	jne    0x140057030
   140056fbe:	movsxd esp,DWORD PTR [rbp+0x45]
   140056fc1:	js     0x14005701a
   140056fc3:	add    BYTE PTR [rdx+0x6e694601],ch
   140056fc9:	fs push rdx
   140056fcb:	gs jae 0x14005703d
   140056fce:	jne    0x140057042
   140056fd0:	movsxd esp,DWORD PTR [rbp+0x57]
   140056fd3:	add    cl,cl
   140056fd5:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140056fd9:	fs push rdx
   140056fdb:	gs jae 0x14005704d
   140056fde:	jne    0x140057052
   140056fe0:	movsxd esp,DWORD PTR [rbp+0x0]
   140056fe3:	add    BYTE PTR [rbp+0x5],ch
   140056fe6:	push   rbx
   140056fe7:	imul   edi,DWORD PTR [rdx+0x65],0x6552666f
   140056fee:	jae    0x14005705f
   140056ff0:	jne    0x140057064
   140056ff2:	movsxd esp,DWORD PTR [rbp+0x0]
   140056ff5:	add    BYTE PTR [rsp+rax*1+0x52],cl
   140056ff9:	(bad)  
   140056ffa:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140057001:	jo     0x140057077
   140057003:	imul   ebp,DWORD PTR [rdi+0x6e],0x3db0000
   14005700a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14005700c:	movsxd ebp,DWORD PTR [rbx+0x52]
   14005700f:	gs jae 0x140057081
   140057012:	jne    0x140057086
   140057014:	movsxd esp,DWORD PTR [rbp+0x0]
   140057017:	add    BYTE PTR [rdx+rax*1+0x4d746547],al
   14005701e:	outs   dx,DWORD PTR ds:[rsi]
   14005701f:	fs jne 0x14005708e
   140057022:	gs rex.W (bad) 
   140057025:	outs   dx,BYTE PTR ds:[rsi]
   140057026:	fs ins BYTE PTR es:[rdi],dx
   140057028:	add    BYTE PTR gs:[r8],al
   14005702c:	mov    es,WORD PTR [rax]
   14005702e:	rex.XB ins BYTE PTR es:[rdi],dx
   140057030:	outs   dx,DWORD PTR ds:[rsi]
   140057031:	jae    0x140057098
   140057033:	rex.W (bad) 
   140057035:	outs   dx,BYTE PTR ds:[rsi]
   140057036:	fs ins BYTE PTR es:[rdi],dx
   140057038:	add    BYTE PTR gs:[rcx+0x2],ch
   14005703c:	rex.RXB
   14005703d:	gs je  0x140057086
   140057040:	jne    0x1400570ae
   140057042:	ins    BYTE PTR es:[rdi],dx
   140057043:	push   rax
   140057044:	(bad)  
   140057045:	je     0x1400570af
   140057047:	rex.WRX (bad) 
   140057049:	ins    DWORD PTR es:[rdi],dx
   14005704a:	gs push rdi
   14005704c:	add    BYTE PTR [rax],al
   14005704e:	retf   
   14005704f:	add    eax,0x74696157
   140057054:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140057056:	jb     0x1400570ab
   140057058:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   14005705f:	push   0x65
   140057061:	movsxd esi,DWORD PTR [rax+rax*1-0x13]
   140057065:	add    al,BYTE PTR [rdi+0x65]
   140057068:	je     0x1400570bd
   14005706a:	jns    0x1400570df
   14005706c:	je     0x1400570d3
   14005706e:	ins    DWORD PTR es:[rdi],dx
   14005706f:	rex.R
   140057070:	gs data16 (bad) 
   140057073:	jne    0x1400570e1
   140057075:	je     0x1400570c3
   140057077:	rex.XB
   140057078:	rex.WB
   140057079:	add    BYTE PTR [rax],r8b
   14005707c:	xchg   DWORD PTR [rdx],eax
   14005707e:	rex.RXB
   14005707f:	gs je  0x1400570cf
   140057082:	outs   dx,DWORD PTR ds:[rsi]
   140057083:	fs jne 0x1400570f2
   140057086:	gs rex.W (bad) 
   140057089:	outs   dx,BYTE PTR ds:[rsi]
   14005708a:	fs ins BYTE PTR es:[rdi],dx
   14005708c:	gs push rdi
   14005708e:	add    BYTE PTR [rax],al
   140057090:	(bad)  
   140057091:	add    eax,DWORD PTR [rdi+0x65]
   140057094:	je     0x1400570ea
   140057096:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14005709d:	je     0x14005709f
   14005709f:	add    BYTE PTR [rbx],cl
   1400570a1:	add    al,0x4f
   1400570a3:	jo     0x14005710a
   1400570a5:	outs   dx,BYTE PTR ds:[rsi]
   1400570a6:	push   rax
   1400570a7:	jb     0x140057118
   1400570a9:	movsxd esp,DWORD PTR [rbp+0x73]
   1400570ac:	jae    0x1400570ae
   1400570ae:	in     eax,dx
   1400570af:	add    eax,0x65646957
   1400570b4:	rex.XB push 0x6f547261
   1400570ba:	rex.WRB jne 0x140057129
   1400570bd:	je     0x140057128
   1400570bf:	rex.X jns 0x140057136
   1400570c2:	add    BYTE PTR gs:[rdx+rax*1+0x47],dh
   1400570c7:	gs je  0x140057116
   1400570ca:	outs   dx,DWORD PTR ds:[rsi]
   1400570cb:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400570ce:	rex.WB outs dx,BYTE PTR gs:[rsi]
   1400570d1:	outs   dx,WORD PTR ds:[rsi]
   1400570d3:	push   rdi
   1400570d4:	add    BYTE PTR [rax],al
   1400570d6:	outs   dx,BYTE PTR ds:[rsi]
   1400570d7:	add    eax,0x65656c53
   1400570dc:	jo     0x1400570de
   1400570de:	add    DWORD PTR [rdx],0x47
   1400570e1:	gs je  0x140057131
   1400570e4:	outs   dx,DWORD PTR ds:[rsi]
   1400570e5:	fs jne 0x140057154
   1400570e8:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   1400570f2:	add    BYTE PTR [rax],al
   1400570f4:	(bad)  
   1400570f5:	add    BYTE PTR [rbx+0x72],al
   1400570f8:	gs (bad) 
   1400570fa:	je     0x140057161
   1400570fc:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4d03ef00
   140057105:	jne    0x140057173
   140057107:	je     0x140057172
   140057109:	rex.X jns 0x140057180
   14005710c:	gs push rsp
   14005710e:	outs   dx,DWORD PTR ds:[rsi]
   14005710f:	push   rdi
   140057110:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140057118:	and    eax,0x74655305
   14005711d:	rex.WR (bad) 
   14005711f:	jae    0x140057195
   140057121:	rex.RB jb 0x140057196
   140057124:	outs   dx,DWORD PTR ds:[rsi]
   140057125:	jb     0x140057127
   140057127:	add    BYTE PTR [rsi],al
   140057129:	add    al,0x4f
   14005712b:	jo     0x140057192
   14005712d:	outs   dx,BYTE PTR ds:[rsi]
   14005712e:	rex.WRB jne 0x1400571a5
   140057131:	gs js  0x140057175
   140057134:	add    BYTE PTR [rax],al
   140057136:	cs add al,0x50
   140057139:	jb     0x1400571aa
   14005713b:	movsxd esp,DWORD PTR [rbp+0x73]
   14005713e:	jae    0x140057189
   140057140:	fs push rsp
   140057142:	outs   dx,DWORD PTR ds:[rsi]
   140057143:	push   rbx
   140057144:	gs jae 0x1400571ba
   140057147:	imul   ebp,DWORD PTR [rdi+0x6e],0x6449
   14005714e:	inc    BYTE PTR [rbx]
   140057150:	rex.WRXB jo 0x1400571b8
   140057153:	outs   dx,BYTE PTR ds:[rsi]
   140057154:	rex.RB jbe 0x1400571bc
   140057157:	outs   dx,BYTE PTR ds:[rsi]
   140057158:	je     0x14005719b
   14005715a:	add    BYTE PTR [rax],al
   14005715c:	xor    DWORD PTR [rcx],eax
   14005715e:	rex.R
   14005715f:	gs jbe 0x1400571cb
   140057162:	movsxd esp,DWORD PTR [rbp+0x49]
   140057165:	outs   dx,DWORD PTR ds:[rsi]
   140057166:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140057168:	outs   dx,BYTE PTR ds:[rsi]
   140057169:	je     0x1400571dd
   14005716b:	outs   dx,DWORD PTR ds:[rsi]
   14005716c:	ins    BYTE PTR es:[rdi],dx
   14005716d:	add    BYTE PTR [rdx],ch
   14005716f:	add    al,BYTE PTR [rdi+0x65]
   140057172:	je     0x1400571b7
   140057174:	jne    0x1400571e8
   140057176:	jb     0x1400571dd
   140057178:	outs   dx,BYTE PTR ds:[rsi]
   140057179:	je     0x1400571cb
   14005717b:	jb     0x1400571ec
   14005717d:	movsxd esp,DWORD PTR [rbp+0x73]
   140057180:	jae    0x1400571cb
   140057182:	add    BYTE PTR fs:[rcx+0x5],bh
   140057186:	push   rbx
   140057187:	ja     0x1400571f2
   140057189:	je     0x1400571ee
   14005718b:	push   0x68546f54
   140057190:	jb     0x1400571f7
   140057192:	(bad)  
   140057193:	add    BYTE PTR fs:[rax],al
   140057196:	mov    esp,0x74654702
   14005719b:	push   rax
   14005719c:	jb     0x14005720d
   14005719e:	movsxd eax,DWORD PTR [rcx+0x64]
   1400571a1:	fs jb  0x140057209
   1400571a4:	jae    0x140057219
   1400571a6:	add    BYTE PTR [rax],al
   1400571a8:	int3   
   1400571a9:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   1400571ad:	(bad)  
   1400571ae:	ins    BYTE PTR es:[rdi],dx
   1400571af:	rex.B ins BYTE PTR es:[rdi],dx
   1400571b1:	ins    BYTE PTR es:[rdi],dx
   1400571b2:	outs   dx,DWORD PTR ds:[rsi]
   1400571b3:	movsxd eax,DWORD PTR [rax]
   1400571b5:	add    BYTE PTR [rdi+0x5],bl
   1400571b8:	push   rbx
   1400571b9:	gs je  0x140057211
   1400571bc:	outs   dx,BYTE PTR ds:[rsi]
   1400571bd:	push   0x6c646e61
   1400571c2:	gs fs rex.RB js 0x14005722a
   1400571c7:	gs jo  0x14005723e
   1400571ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400571d1:	gs jb  0x1400571d4
   1400571d4:	pop    rsi
   1400571d5:	add    ecx,DWORD PTR [rax+0x65]
   1400571d8:	(bad)  
   1400571d9:	jo     0x14005722e
   1400571db:	gs je  0x140057227
   1400571de:	outs   dx,BYTE PTR ds:[rsi]
   1400571df:	outs   dx,WORD PTR ds:[rsi]
   1400571e1:	jb     0x140057250
   1400571e3:	(bad)  
   1400571e4:	je     0x14005724f
   1400571e6:	outs   dx,DWORD PTR ds:[rsi]
   1400571e7:	outs   dx,BYTE PTR ds:[rsi]
   1400571e8:	add    BYTE PTR [rax],al
   1400571ea:	rex.WXB
   1400571eb:	rex.RB push r10
   1400571ed:	rex.WRX
   1400571ee:	rex.RB
   1400571ef:	xor    r14,QWORD PTR [rdx]
   1400571f2:	cs fs ins BYTE PTR es:[rdi],dx
   1400571f5:	ins    BYTE PTR es:[rdi],dx
   1400571f6:	add    BYTE PTR [rax],al
   1400571f8:	add    BYTE PTR [rax],al
   1400571fa:	rex.RXB
   1400571fb:	gs je  0x140057243
   1400571fe:	jb     0x140057272
   140057200:	outs   dx,DWORD PTR ds:[rsi]
   140057201:	jb     0x140057250
   140057203:	gs jae 0x140057279
   140057206:	(bad)  
   140057207:	rex.WRB outs dx,DWORD PTR gs:[esi]
   14005720b:	fs jne 0x14005727a
   14005720e:	add    BYTE PTR gs:[rcx],al
   140057211:	add    BYTE PTR [rbx+0x65],dl
   140057214:	je     0x14005725b
   140057216:	jb     0x14005728a
   140057218:	outs   dx,DWORD PTR ds:[rsi]
   140057219:	jb     0x140057268
   14005721b:	gs jae 0x140057291
   14005721e:	(bad)  
   14005721f:	rex.WRB outs dx,DWORD PTR gs:[esi]
   140057223:	fs jne 0x140057292
   140057226:	add    BYTE PTR gs:[rsi+0x53],dl
   14005722a:	push   rax
   14005722b:	rex.WRB jae 0x140057295
   14005722e:	cs fs ins BYTE PTR es:[rdi],dx
   140057231:	ins    BYTE PTR es:[rdi],dx
   140057232:	add    BYTE PTR [rax],al
   140057234:	add    DWORD PTR [rax],0x6e556f43
   14005723a:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140057241:	imul   edi,DWORD PTR [rdx+0x65],0x530000
   140057248:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14005724a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14005724c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140057254:	rex.RB js 0x140057257
   140057257:	add    BYTE PTR [rip+0x436f4300],bl        # 0x18374b55d
   14005725d:	jb     0x1400572c4
   14005725f:	(bad)  
   140057260:	je     0x1400572c7
   140057262:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140057264:	jae    0x1400572da
   140057266:	(bad)  
   140057267:	outs   dx,BYTE PTR ds:[rsi]
   140057268:	movsxd esp,DWORD PTR [rbp+0x0]
   14005726b:	add    BYTE PTR [rax],dl
   14005726d:	add    BYTE PTR [rbx+0x4c],al
   140057270:	push   rbx
   140057271:	rex.WB
   140057272:	rex.R
   140057273:	rex.RX jb 0x1400572e5
   140057276:	ins    DWORD PTR es:[rdi],dx
   140057277:	push   rbx
   140057278:	je     0x1400572ec
   14005727a:	imul   ebp,DWORD PTR [rsi+0x67],0x43005200
   140057281:	outs   dx,DWORD PTR ds:[rsi]
   140057282:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140057284:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14005728c:	add    BYTE PTR [rax],al
   14005728e:	outs   dx,DWORD PTR ds:[rsi]
   14005728f:	ins    BYTE PTR es:[rdi],dx
   140057290:	xor    esi,DWORD PTR gs:[rdx]
   140057293:	cs fs ins BYTE PTR es:[rdi],dx
   140057296:	ins    BYTE PTR es:[rdi],dx
   140057297:	add    BYTE PTR [rdi+0x4c],cl
   14005729a:	rex.RB
   14005729b:	push   r13
   14005729d:	push   rsp
   14005729e:	xor    esi,DWORD PTR [rdx]
   1400572a0:	cs fs ins BYTE PTR es:[rdi],dx
   1400572a3:	ins    BYTE PTR es:[rdi],dx
   1400572a4:	add    BYTE PTR [rax],al
   1400572a6:	(bad)  
   1400572a7:	add    BYTE PTR [rdi+0x65],al
   1400572aa:	je     0x1400572f9
   1400572ac:	outs   dx,DWORD PTR ds:[rsi]
   1400572ad:	fs jne 0x14005731c
   1400572b0:	gs rex.X (bad) 
   1400572b3:	jae    0x14005731a
   1400572b5:	rex.WRX (bad) 
   1400572b7:	ins    DWORD PTR es:[rdi],dx
   1400572b8:	gs push rdi
   1400572ba:	add    BYTE PTR [rax],al
   1400572bc:	push   rax
   1400572bd:	push   rbx
   1400572be:	push   r8
   1400572c0:	rex.WB
   1400572c1:	cs rex.R
   1400572c3:	rex.WR
   1400572c4:	rex.WR add al,r15b
   1400572c7:	add    DWORD PTR [rbx+0x65],edx
   1400572ca:	je     0x140057341
   1400572cc:	jo     0x140057312
   1400572ce:	imul   edx,DWORD PTR [rbx+0x65],0x616c4374
   1400572d5:	jae    0x14005734a
   1400572d7:	push   rdx
   1400572d8:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72507972
   1400572e1:	outs   dx,DWORD PTR ds:[rsi]
   1400572e2:	jo     0x140057349
   1400572e4:	jb     0x14005735a
   1400572e6:	jns    0x140057329
   1400572e8:	add    BYTE PTR [rax],al
   1400572ea:	scas   al,BYTE PTR es:[rdi]
   1400572eb:	add    DWORD PTR [rbx+0x65],edx
   1400572ee:	je     0x140057365
   1400572f0:	jo     0x140057336
   1400572f2:	imul   eax,DWORD PTR [rdi+0x65],0x616c4374
   1400572f9:	jae    0x14005736e
   1400572fb:	push   rdx
   1400572fc:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72507972
   140057305:	outs   dx,DWORD PTR ds:[rsi]
   140057306:	jo     0x14005736d
   140057308:	jb     0x14005737e
   14005730a:	jns    0x14005734d
   14005730c:	add    BYTE PTR [rax],al
   14005730e:	push   rbx
   14005730f:	rex.RB push r12
   140057311:	push   rbp
   140057312:	push   rax
   140057313:	push   r8
   140057315:	rex.WB
   140057316:	cs fs ins BYTE PTR es:[rdi],dx
   140057319:	ins    BYTE PTR es:[rdi],dx
   14005731a:	add    BYTE PTR [rax],al
   14005731c:	mov    al,0x0
   14005731e:	push   rbx
   14005731f:	rex.W
   140057320:	rex.XB jb 0x140057388
   140057323:	(bad)  
   140057324:	je     0x14005738b
   140057326:	push   rbx
   140057327:	je     0x14005739b
   140057329:	gs (bad) 
   14005732b:	ins    DWORD PTR es:[rdi],dx
   14005732c:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14005732e:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x50009000
   140057337:	(bad)  
   140057338:	je     0x1400573a2
   14005733a:	push   rdx
   14005733b:	gs ins DWORD PTR es:[rdi],dx
   14005733d:	outs   dx,DWORD PTR ds:[rsi]
   14005733e:	jbe    0x1400573a5
   140057340:	imul   r13d,DWORD PTR [rbp+r12*2+0x53],0x57636570
   140057349:	add    BYTE PTR [rax+rax*1],dh
   14005734c:	push   rax
   14005734d:	(bad)  
   14005734e:	je     0x1400573b8
   140057350:	rex.B
   140057351:	fs fs rex.X (bad) 
   140057355:	movsxd ebp,DWORD PTR [rbx+0x73]
   140057358:	ins    BYTE PTR es:[rdi],dx
   140057359:	(bad)  
   14005735a:	jae    0x1400573c4
   14005735c:	push   rdi
   14005735d:	add    BYTE PTR [rax],bh
   14005735f:	add    BYTE PTR [rax+0x61],dl
   140057362:	je     0x1400573cc
   140057364:	rex.B jo 0x1400573d7
   140057367:	outs   dx,BYTE PTR gs:[rsi]
   140057369:	fs push rdi
   14005736b:	add    BYTE PTR [rbx+0x48],dl
   14005736e:	rex.WR push rdi
   140057370:	push   r8
   140057372:	rex.WB
   140057373:	cs fs ins BYTE PTR es:[rdi],dx
   140057376:	ins    BYTE PTR es:[rdi],dx
   140057377:	add    BYTE PTR [rdi+0x0],cl
   14005737a:	push   rax
   14005737b:	fs push 0x6b6f6f4c
   140057381:	jne    0x1400573f3
   140057383:	push   rax
   140057384:	gs jb  0x1400573ed
   140057387:	rex.WRX (bad) 
   140057389:	ins    DWORD PTR es:[rdi],dx
   14005738a:	gs rex.X jns 0x1400573d7
   14005738e:	outs   dx,BYTE PTR ds:[rsi]
   14005738f:	fs gs js 0x1400573ea
   140057393:	add    BYTE PTR [rax+0x64],dh
   140057396:	push   0x6c6c642e
   14005739b:	add    BYTE PTR [rax],al
   14005739d:	add    BYTE PTR [rbx+0x72],al
   1400573a0:	gs (bad) 
   1400573a2:	je     0x140057409
   1400573a4:	pop    rax
   1400573a5:	ins    DWORD PTR es:[rdi],dx
   1400573a6:	ins    BYTE PTR es:[rdi],dx
   1400573a7:	push   rdx
   1400573a8:	gs (bad) 
   1400573aa:	fs gs jb 0x1400573ae
   1400573ae:	pop    rax
   1400573af:	ins    DWORD PTR es:[rdi],dx
   1400573b0:	ins    BYTE PTR es:[rdi],dx
   1400573b1:	imul   r14,QWORD PTR [rbp+riz*2+0x2e],0x6c6c64
   1400573ba:	nop
   1400573bb:	add    BYTE PTR [rbx+0x72],al
   1400573be:	gs (bad) 
   1400573c0:	je     0x140057427
   1400573c2:	push   rbx
   1400573c3:	gs jb  0x14005743c
   1400573c6:	imul   esp,DWORD PTR [rbx+0x65],0x65000057
   1400573cd:	add    BYTE PTR [rbx+0x6c],al
   1400573d0:	outs   dx,DWORD PTR ds:[rsi]
   1400573d1:	jae    0x140057438
   1400573d3:	push   rbx
   1400573d4:	gs jb  0x14005744d
   1400573d7:	imul   esp,DWORD PTR [rbx+0x65],0x646e6148
   1400573de:	ins    BYTE PTR es:[rdi],dx
   1400573df:	add    BYTE PTR gs:[rax],al
   1400573e2:	(bad)  
   1400573e3:	add    BYTE PTR [rbp+riz*2+0x6c],al
   1400573e7:	gs je  0x14005744f
   1400573ea:	push   rbx
   1400573eb:	gs jb  0x140057464
   1400573ee:	imul   esp,DWORD PTR [rbx+0x65],0x4f021600
   1400573f5:	jo     0x14005745c
   1400573f7:	outs   dx,BYTE PTR ds:[rsi]
   1400573f8:	push   rbx
   1400573f9:	gs jb  0x140057472
   1400573fc:	imul   esp,DWORD PTR [rbx+0x65],0xf3000057
   140057403:	add    dl,BYTE PTR [rbx+0x74]
   140057406:	(bad)  
   140057407:	jb     0x14005747d
   140057409:	push   rbx
   14005740a:	gs jb  0x140057483
   14005740d:	imul   esp,DWORD PTR [rbx+0x65],0x5c0041
   140057414:	rex.XB push 0x65676e61
   14005741a:	push   rbx
   14005741b:	gs jb  0x140057494
   14005741e:	imul   esp,DWORD PTR [rbx+0x65],0x666e6f43
   140057425:	imul   esp,DWORD PTR [rdi+0x41],0x2500000
   14005742c:	push   rcx
   14005742d:	jne    0x140057494
   14005742f:	jb     0x1400574aa
   140057431:	push   rbx
   140057432:	gs jb  0x1400574ab
   140057435:	imul   esp,DWORD PTR [rbx+0x65],0x74617453
   14005743c:	jne    0x1400574b1
   14005743e:	add    BYTE PTR [rax],al
   140057440:	adc    eax,DWORD PTR [rdx]
   140057442:	rex.WRXB jo 0x1400574aa
   140057445:	outs   dx,BYTE PTR ds:[rsi]
   140057446:	push   rbx
   140057447:	rex.XB
   140057448:	rex.WRB (bad) 
   14005744a:	outs   dx,BYTE PTR ds:[rsi]
   14005744b:	(bad)  
   14005744c:	addr32 gs jb 0x140057491
   140057450:	add    BYTE PTR [rax],al
   140057452:	rex.WX add dl,BYTE PTR [rcx+0x75]
   140057456:	gs jb  0x1400574d2
   140057459:	push   rbx
   14005745a:	gs jb  0x1400574d3
   14005745d:	imul   esp,DWORD PTR [rbx+0x65],0x666e6f43
   140057464:	imul   esp,DWORD PTR [rdi+0x41],0x43006a00
   14005746b:	outs   dx,DWORD PTR ds:[rsi]
   14005746c:	outs   dx,BYTE PTR ds:[rsi]
   14005746d:	je     0x1400574e1
   14005746f:	outs   dx,DWORD PTR ds:[rsi]
   140057470:	ins    BYTE PTR es:[rdi],dx
   140057471:	push   rbx
   140057472:	gs jb  0x1400574eb
   140057475:	imul   esp,DWORD PTR [rbx+0x65],0x1690000
   14005747c:	rex.RXB
   14005747d:	gs je  0x1400574d3
   140057480:	imul   esp,DWORD PTR [rcx+rcx*2+0x64],0x69746e65
   140057488:	imul   sp,WORD PTR [rbp+0x72],0x7541
   14005748e:	je     0x1400574f8
   140057490:	outs   dx,DWORD PTR ds:[rsi]
   140057491:	jb     0x1400574fc
   140057493:	je     0x14005750e
   140057495:	add    BYTE PTR [rcx+0x56734901],bl
   14005749b:	(bad)  
   14005749c:	ins    BYTE PTR es:[rdi],dx
   14005749d:	imul   esp,DWORD PTR [rcx+rax*2+0x63],0x6b00006c
   1400574a5:	add    DWORD PTR [rdi+0x65],eax
   1400574a8:	je     0x1400574fd
   1400574aa:	imul   esp,DWORD PTR [rbx+rdx*2+0x75],0x74754162
   1400574b2:	push   0x7469726f
   1400574b7:	jns    0x1400574b9
   1400574b9:	add    dl,dl
   1400574bb:	add    dl,BYTE PTR [rbx+0x65]
   1400574be:	je     0x140057505
   1400574c0:	outs   dx,BYTE PTR ds:[rsi]
   1400574c1:	je     0x140057535
   1400574c3:	imul   esp,DWORD PTR [rbp+0x73],0x63416e49
   1400574ca:	ins    BYTE PTR es:[rdi],dx
   1400574cb:	add    BYTE PTR [r8],al
   1400574ce:	ins    BYTE PTR es:[rdi],dx
   1400574cf:	add    DWORD PTR [rdi+0x65],eax
   1400574d2:	je     0x140057527
   1400574d4:	imul   esp,DWORD PTR [rbx+rdx*2+0x75],0x74754162
   1400574dc:	push   0x7469726f
   1400574e1:	jns    0x140057526
   1400574e3:	outs   dx,DWORD PTR ds:[rsi]
   1400574e4:	jne    0x140057554
   1400574e6:	je     0x1400574e8
   1400574e8:	pop    rbx
   1400574e9:	add    DWORD PTR [rdi+0x65],eax
   1400574ec:	je     0x140057541
   1400574ee:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400574f2:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   1400574fa:	imul   esi,DWORD PTR [rax+0x74],0x6f43726f
   140057501:	outs   dx,BYTE PTR ds:[rsi]
   140057502:	je     0x140057576
   140057504:	outs   dx,DWORD PTR ds:[rsi]
   140057505:	ins    BYTE PTR es:[rdi],dx
   140057506:	add    BYTE PTR [rax],al
   140057508:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140057509:	add    DWORD PTR [rdi+rbp*2+0x6f],ecx
   14005750d:	imul   esi,DWORD PTR [rbp+0x70],0x41
   140057511:	movsxd esp,DWORD PTR [rbx+0x6f]
   140057514:	jne    0x140057584
   140057516:	je     0x140057566
   140057518:	(bad)  
   140057519:	ins    DWORD PTR es:[rdi],dx
   14005751a:	gs push rdi
   14005751c:	add    BYTE PTR [rax],al
   14005751e:	jrcxz  0x140057522
   140057520:	push   rbx
   140057521:	gs je  0x140057577
   140057524:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140057528:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140057530:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   140057537:	movsxd ebp,DWORD PTR [rax+rax*1-0x22]
   14005753b:	add    dl,BYTE PTR [rbx+0x65]
   14005753e:	je     0x14005758e
   140057540:	(bad)  
   140057541:	ins    DWORD PTR es:[rdi],dx
   140057542:	gs fs push rbx
   140057545:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140057549:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x576f666e
   140057551:	add    BYTE PTR [rsi+0x1],bl
   140057554:	rex.RXB
   140057555:	gs je  0x1400575ab
   140057558:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14005755c:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140057564:	imul   esi,DWORD PTR [rax+0x74],0x654c726f
   14005756b:	outs   dx,BYTE PTR ds:[rsi]
   14005756c:	addr32 je 0x1400575d7
   14005756f:	add    BYTE PTR [rdi+0x6f6f4c01],ah
   140057575:	imul   esi,DWORD PTR [rbp+0x70],0x41
   140057579:	movsxd esp,DWORD PTR [rbx+0x6f]
   14005757c:	jne    0x1400575ec
   14005757e:	je     0x1400575d3
   140057580:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x614d01fb
   140057588:	imul   esp,DWORD PTR [rbp+0x41],0x62
   14005758c:	jae    0x1400575fd
   14005758e:	ins    BYTE PTR es:[rdi],dx
   14005758f:	jne    0x140057605
   140057591:	gs push rbx
   140057593:	add    BYTE PTR [rax],r8b
   140057596:	call   0x1b46ac89d
   14005759b:	push   rbx
   14005759c:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400575a0:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
   1400575a8:	push   0x1
   1400575aa:	rex.RXB
   1400575ab:	gs je  0x140057601
   1400575ae:	imul   esp,DWORD PTR [rsp+rcx*2+0x65],0x6874676e
   1400575b6:	push   rdx
   1400575b7:	gs jno 0x14005762f
   1400575ba:	imul   esi,DWORD PTR [rdx+0x65],0xfd000064
   1400575c1:	add    DWORD PTR [rbp+0x61],ecx
   1400575c4:	imul   esp,DWORD PTR [rbp+0x53],0x65
   1400575c8:	ins    BYTE PTR es:[rdi],dx
   1400575c9:	push   dx
   1400575cb:	gs ins BYTE PTR es:[rdi],dx
   1400575cd:	(bad)  
   1400575ce:	je     0x140057639
   1400575d0:	jbe    0x140057637
   1400575d2:	push   rbx
   1400575d3:	add    BYTE PTR [rax],r8b
   1400575d6:	xchg   esi,eax
   1400575d7:	add    DWORD PTR [rcx+0x73],ecx
   1400575da:	push   rsp
   1400575db:	gs js  0x140057652
   1400575de:	push   rbp
   1400575df:	outs   dx,BYTE PTR ds:[rsi]
   1400575e0:	imul   esp,DWORD PTR [rbx+0x6f],0x70006564
   1400575e7:	add    DWORD PTR [rdi+0x65],eax
   1400575ea:	je     0x140057640
   1400575ec:	jb     0x14005764f
   1400575ee:	movsxd esp,DWORD PTR [rbp+0x45]
   1400575f1:	outs   dx,BYTE PTR ds:[rsi]
   1400575f2:	(bad)  
   1400575f3:	(bad)  
   1400575f4:	ins    BYTE PTR es:[rdi],dx
   1400575f5:	gs rex.RX ins BYTE PTR es:[rdi],dx
   1400575f8:	(bad)  
   1400575f9:	addr32 jae 0x1400575fc
   1400575fc:	jb     0x1400575ff
   1400575fe:	rex.RXB
   1400575ff:	gs je  0x140057656
   140057602:	jb     0x140057665
   140057604:	movsxd esp,DWORD PTR [rbp+0x4c]
   140057607:	outs   dx,DWORD PTR ds:[rsi]
   140057608:	addr32 addr32 gs jb 0x140057655
   14005760d:	(bad)  
   14005760e:	outs   dx,BYTE PTR ds:[rsi]
   14005760f:	fs ins BYTE PTR es:[rdi],dx
   140057611:	add    BYTE PTR gs:[rax],al
   140057614:	and    DWORD PTR [rbx],eax
   140057616:	push   rsp
   140057617:	jb     0x14005767a
   140057619:	movsxd esp,DWORD PTR [rbp+0x45]
   14005761c:	jbe    0x140057683
   14005761e:	outs   dx,BYTE PTR ds:[rsi]
   14005761f:	je     0x140057621
   140057621:	add    BYTE PTR [rcx+0x67655202],dh
   140057627:	imul   esi,DWORD PTR [rbx+0x74],0x72547265
   14005762e:	(bad)  
   14005762f:	movsxd esp,DWORD PTR [rbp+0x47]
   140057632:	jne    0x14005769d
   140057634:	fs jae 0x140057678
   140057637:	add    BYTE PTR [rcx+0x1],dh
   14005763a:	rex.RXB
   14005763b:	gs je  0x140057692
   14005763e:	jb     0x1400576a1
   140057640:	movsxd esp,DWORD PTR [rbp+0x45]
   140057643:	outs   dx,BYTE PTR ds:[rsi]
   140057644:	(bad)  
   140057645:	(bad)  
   140057646:	ins    BYTE PTR es:[rdi],dx
   140057647:	gs rex.WR
   140057649:	gs jbe 0x1400576b1
   14005764c:	ins    BYTE PTR es:[rdi],dx
   14005764d:	add    BYTE PTR [rdx],dl
   14005764f:	add    cl,BYTE PTR [rdi+0x70]
   140057652:	outs   dx,BYTE PTR gs:[rsi]
   140057654:	push   rax
   140057655:	jb     0x1400576c6
   140057657:	movsxd esp,DWORD PTR [rbp+0x73]
   14005765a:	jae    0x1400576b0
   14005765c:	outs   dx,DWORD PTR ds:[rsi]
   14005765d:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140057661:	add    BYTE PTR [rdi+0x1],ch
   140057664:	rex.RXB
   140057665:	gs je  0x1400576bc
   140057668:	outs   dx,DWORD PTR ds:[rsi]
   140057669:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14005766d:	outs   dx,BYTE PTR ds:[rsi]
   14005766e:	outs   dx,WORD PTR ds:[rsi]
   140057670:	jb     0x1400576df
   140057672:	(bad)  
   140057673:	je     0x1400576de
   140057675:	outs   dx,DWORD PTR ds:[rsi]
   140057676:	outs   dx,BYTE PTR ds:[rsi]
   140057677:	add    BYTE PTR [rcx+rax*1+0x6b6f6f4c],ch
   14005767e:	jne    0x1400576f0
   140057680:	push   rax
   140057681:	jb     0x1400576ec
   140057683:	jbe    0x1400576ee
   140057685:	ins    BYTE PTR es:[rdi],dx
   140057686:	gs addr32 gs push rsi
   14005768a:	(bad)  
   14005768b:	ins    BYTE PTR es:[rdi],dx
   14005768c:	jne    0x1400576f3
   14005768e:	add    BYTE PTR [r15],bl
   140057691:	add    BYTE PTR [rcx+0x64],al
   140057694:	push   0x75
   140057696:	jae    0x14005770c
   140057698:	push   rsp
   140057699:	outs   dx,DWORD PTR ds:[rsi]
   14005769a:	imul   esp,DWORD PTR [rbp+0x6e],0x50
   14005769e:	jb     0x140057709
   1400576a0:	jbe    0x14005770b
   1400576a2:	ins    BYTE PTR es:[rdi],dx
   1400576a3:	gs addr32 gs jae 0x1400576a8
   1400576a8:	mov    DWORD PTR [rdx],eax
   1400576aa:	push   rdx
   1400576ab:	gs addr32 rex.WRXB jo 0x140057715
   1400576b0:	outs   dx,BYTE PTR ds:[rsi]
   1400576b1:	rex.WXB
   1400576b2:	gs jns 0x1400576fa
   1400576b5:	js     0x14005770e
   1400576b7:	add    BYTE PTR [rsi+0x67655202],dl
   1400576bd:	push   rcx
   1400576be:	jne    0x140057725
   1400576c0:	jb     0x14005773b
   1400576c2:	push   rsi
   1400576c3:	(bad)  
   1400576c4:	ins    BYTE PTR es:[rdi],dx
   1400576c5:	jne    0x14005772c
   1400576c7:	rex.RB js 0x140057721
   1400576ca:	add    BYTE PTR [rax],al
   1400576cc:	in     al,0x2
   1400576ce:	push   rbx
   1400576cf:	gs je  0x140057725
   1400576d2:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400576d6:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   1400576de:	imul   esi,DWORD PTR [rax+0x74],0x7247726f
   1400576e5:	outs   dx,DWORD PTR ds:[rsi]
   1400576e6:	jne    0x140057758
   1400576e8:	add    BYTE PTR [rax],al
   1400576ea:	inc    BYTE PTR [rcx]
   1400576ec:	rex.WRB (bad) 
   1400576ee:	jo     0x140057737
   1400576f0:	outs   dx,BYTE PTR gs:[rsi]
   1400576f2:	gs jb  0x14005775e
   1400576f5:	movsxd ecx,DWORD PTR [rbp+0x61]
   1400576f8:	jae    0x140057765
   1400576fa:	add    BYTE PTR [rax],al
   1400576fc:	(bad)  
   1400576fd:	add    dl,BYTE PTR [rdx+0x65]
   140057700:	addr32 rex.XB jb 0x140057769
   140057704:	(bad)  
   140057705:	je     0x14005776c
   140057707:	rex.WXB
   140057708:	gs jns 0x140057750
   14005770b:	js     0x140057764
   14005770d:	add    BYTE PTR [rbp+0x696e4901],cl
   140057713:	je     0x14005777e
   140057715:	(bad)  
   140057716:	ins    BYTE PTR es:[rdi],dx
   140057717:	imul   edi,DWORD PTR [rdx+0x65],0x75636553
   14005771e:	jb     0x140057789
   140057720:	je     0x14005779b
   140057722:	rex.R
   140057723:	gs jae 0x140057789
   140057726:	jb     0x140057791
   140057728:	jo     0x14005779e
   14005772a:	outs   dx,DWORD PTR ds:[rsi]
   14005772b:	jb     0x14005772d
   14005772d:	add    ch,ah
   14005772f:	add    dl,BYTE PTR [rbx+0x65]
   140057732:	je     0x140057787
   140057734:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140057738:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140057740:	imul   esi,DWORD PTR [rax+0x74],0x774f726f
   140057747:	outs   dx,BYTE PTR ds:[rsi]
   140057748:	gs jb  0x14005774b
   14005774b:	add    BYTE PTR [rdi+0x1],bl
   14005774e:	rex.RXB
   14005774f:	gs je  0x1400577a5
   140057752:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140057756:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14005775e:	imul   esi,DWORD PTR [rax+0x74],0x774f726f
   140057765:	outs   dx,BYTE PTR ds:[rsi]
   140057766:	gs jb  0x140057769
   140057769:	add    BYTE PTR [rcx+0x1],ah
   14005776c:	rex.RXB
   14005776d:	gs je  0x1400577c3
   140057770:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140057774:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14005777c:	imul   esi,DWORD PTR [rax+0x74],0x6153726f
   140057783:	movsxd ebp,DWORD PTR [rax+rax*1-0x19]
   140057787:	add    dl,BYTE PTR [rbx+0x65]
   14005778a:	je     0x1400577df
   14005778c:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140057790:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140057798:	imul   esi,DWORD PTR [rax+0x74],0x6153726f
   14005779f:	movsxd ebp,DWORD PTR [rax+rax*1-0x5a]
   1400577a3:	add    dl,BYTE PTR [rdx+0x65]
   1400577a6:	addr32 push rbx
   1400577a8:	gs je  0x140057801
   1400577ab:	(bad)  
   1400577ac:	ins    BYTE PTR es:[rdi],dx
   1400577ad:	jne    0x140057814
   1400577af:	rex.RB js 0x140057809
   1400577b2:	add    BYTE PTR [rax],al
   1400577b4:	pop    rbp
   1400577b5:	add    DWORD PTR [rdi+0x65],eax
   1400577b8:	je     0x14005780d
   1400577ba:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400577be:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   1400577c6:	imul   esi,DWORD PTR [rax+0x74],0x7247726f
   1400577cd:	outs   dx,DWORD PTR ds:[rsi]
   1400577ce:	jne    0x140057840
   1400577d0:	add    BYTE PTR [rax],al
   1400577d2:	jmp    0x1b46abed8
   1400577d7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400577d9:	ins    DWORD PTR es:[rdi],dx
   1400577da:	ins    DWORD PTR es:[rdi],dx
   1400577db:	(bad)  
   1400577dc:	outs   dx,BYTE PTR ds:[rsi]
   1400577dd:	imul   r13,QWORD PTR fs:[rsi+0x65],0x1400057
   1400577e6:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400577e8:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400577eb:	gs push rax
   1400577ed:	outs   dx,DWORD PTR ds:[rsi]
   1400577ee:	imul   ebp,DWORD PTR [rsi+0x74],0x18007265
   1400577f5:	add    DWORD PTR [rbp+riz*2+0x63],eax
   1400577f9:	outs   dx,DWORD PTR ds:[rsi]
   1400577fa:	fs gs push rax
   1400577fd:	outs   dx,DWORD PTR ds:[rsi]
   1400577fe:	imul   ebp,DWORD PTR [rsi+0x74],0x5a007265
   140057805:	add    ecx,DWORD PTR [rax+0x65]
   140057808:	(bad)  
   140057809:	jo     0x140057851
   14005780b:	jb     0x140057872
   14005780d:	add    BYTE PTR gs:[rax],al
   140057810:	xchg   BYTE PTR [rbx],al
   140057812:	rex.WB jae 0x140057859
   140057815:	gs (bad) 
   140057817:	jne    0x140057880
   140057819:	addr32 gs jb 0x14005786d
   14005781d:	jb     0x140057884
   14005781f:	jae    0x140057886
   140057821:	outs   dx,BYTE PTR ds:[rsi]
   140057822:	je     0x140057824
   140057824:	mov    eax,DWORD PTR [rbx]
   140057826:	rex.WB jae 0x140057879
   140057829:	jb     0x14005789a
   14005782b:	movsxd esp,DWORD PTR [rbp+0x73]
   14005782e:	jae    0x14005789f
   140057830:	jb     0x140057878
   140057832:	gs (bad) 
   140057834:	je     0x1400578ab
   140057836:	jb     0x14005789d
   140057838:	push   rax
   140057839:	jb     0x1400578a0
   14005783b:	jae    0x1400578a2
   14005783d:	outs   dx,BYTE PTR ds:[rsi]
   14005783e:	je     0x140057840
   140057840:	add    al,BYTE PTR cs:[rdi+0x65]
   140057844:	je     0x140057889
   140057846:	jne    0x1400578ba
   140057848:	jb     0x1400578af
   14005784a:	outs   dx,BYTE PTR ds:[rsi]
   14005784b:	je     0x1400578a1
   14005784d:	push   0x64616572
   140057852:	rex.WB
   140057853:	add    BYTE PTR fs:[rax],al
   140057856:	jae    0x140057859
   140057858:	rex.RB js 0x1400578c4
   14005785b:	je     0x1400578ad
   14005785d:	jb     0x1400578ce
   14005785f:	movsxd esp,DWORD PTR [rbp+0x73]
   140057862:	jae    0x140057864
   140057864:	xchg   BYTE PTR [rdx],al
   140057866:	rex.RXB
   140057867:	gs je  0x1400578b7
   14005786a:	outs   dx,DWORD PTR ds:[rsi]
   14005786b:	fs jne 0x1400578da
   14005786e:	gs rex.W (bad) 
   140057871:	outs   dx,BYTE PTR ds:[rsi]
   140057872:	fs ins BYTE PTR es:[rdi],dx
   140057874:	gs rex.RB js 0x1400578cf
   140057878:	add    BYTE PTR [rax],al
   14005787a:	in     al,0x2
   14005787c:	rex.RXB
   14005787d:	gs je  0x1400578d3
   140057880:	je     0x1400578e6
   140057882:	rex.W (bad) 
   140057884:	outs   dx,BYTE PTR ds:[rsi]
   140057885:	fs ins BYTE PTR es:[rdi],dx
   140057887:	add    BYTE PTR gs:[rax],al
   14005788a:	add    DWORD PTR [rsi],eax
   14005788c:	push   rdi
   14005788d:	jb     0x1400578f8
   14005788f:	je     0x1400578f6
   140057891:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x654702c1
   14005789a:	je     0x1400578ec
   14005789c:	jb     0x14005790d
   14005789e:	movsxd esp,DWORD PTR [rbp+0x73]
   1400578a1:	jae    0x1400578eb
   1400578a3:	gs (bad) 
   1400578a5:	jo     0x1400578a7
   1400578a7:	add    BYTE PTR [rsi+0x2],bl
   1400578aa:	rex.RXB
   1400578ab:	gs je  0x1400578f4
   1400578ae:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   1400578b6:	outs   dx,DWORD PTR ds:[rsi]
   1400578b7:	add    ecx,DWORD PTR [rcx+0x6e]
   1400578ba:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400578c2:	rex.XB jb 0x14005792e
   1400578c5:	je     0x140057930
   1400578c7:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400578ca:	push   rbx
   1400578cb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400578d0:	outs   dx,BYTE PTR ds:[rsi]
   1400578d1:	rex.B outs dx,BYTE PTR ds:[rsi]
   1400578d3:	fs push rbx
   1400578d5:	jo     0x140057940
   1400578d7:	outs   dx,BYTE PTR ds:[rsi]
   1400578d8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400578da:	jne    0x14005794a
   1400578dc:	je     0x1400578de
   1400578de:	(bad)  
   1400578df:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   1400578e3:	gs je  0x14005794b
   1400578e6:	rex.XB jb 0x140057952
   1400578e9:	je     0x140057954
   1400578eb:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400578ee:	push   rbx
   1400578ef:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400578f4:	outs   dx,BYTE PTR ds:[rsi]
   1400578f5:	add    BYTE PTR [rdx+0x3],ch
   1400578f8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400578fa:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x78456563
   140057902:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   140057906:	rex.WRXB outs dx,BYTE PTR gs:[rsi]
   140057909:	movsxd esp,DWORD PTR [rbp+0x0]
   14005790c:	fiadd  WORD PTR [rdx]
   14005790e:	rex.RXB
   14005790f:	gs je  0x140057965
   140057912:	je     0x140057975
   140057914:	jb     0x14005798a
   140057916:	jne    0x140057988
   140057918:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14005791a:	outs   dx,WORD PTR ds:[rsi]
   14005791c:	push   rdi
   14005791d:	add    BYTE PTR [rdi],bh
   14005791f:	add    al,0x51
   140057921:	jne    0x140057988
   140057923:	jb     0x14005799e
   140057925:	push   rax
   140057926:	gs jb  0x14005798f
   140057929:	outs   dx,DWORD PTR ds:[rsi]
   14005792a:	jb     0x140057999
   14005792c:	(bad)  
   14005792d:	outs   dx,BYTE PTR ds:[rsi]
   14005792e:	movsxd esp,DWORD PTR [rbp+0x43]
   140057931:	outs   dx,DWORD PTR ds:[rsi]
   140057932:	jne    0x1400579a2
   140057934:	je     0x14005799b
   140057936:	jb     0x140057938
   140057938:	sti    
   140057939:	add    al,BYTE PTR [rdi+0x65]
   14005793c:	je     0x140057991
   14005793e:	jns    0x1400579b3
   140057940:	je     0x1400579a7
   140057942:	ins    DWORD PTR es:[rdi],dx
   140057943:	push   rsp
   140057944:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14005794b:	ins    BYTE PTR es:[rdi],dx
   14005794c:	gs push rsp
   14005794e:	imul   ebp,DWORD PTR [rbp+0x65],0x47031800
   140057955:	gs je  0x1400579ac
   140057958:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14005795f:	je     0x140057997
   140057961:	xor    al,0x0
   140057963:	add    BYTE PTR [rdi+0x2],al
   140057966:	rex.RXB
   140057967:	gs je  0x1400579af
   14005796a:	outs   dx,BYTE PTR ds:[rsi]
   14005796b:	jbe    0x1400579d6
   14005796d:	jb     0x1400579de
   14005796f:	outs   dx,BYTE PTR ds:[rsi]
   140057970:	ins    DWORD PTR es:[rdi],dx
   140057971:	outs   dx,BYTE PTR gs:[rsi]
   140057973:	je     0x1400579c8
   140057975:	je     0x1400579e9
   140057977:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   14005797e:	mov    ebp,0x65724601
   140057983:	rex.RB outs dx,BYTE PTR gs:[rsi]
   140057986:	jbe    0x1400579f1
   140057988:	jb     0x1400579f9
   14005798a:	outs   dx,BYTE PTR ds:[rsi]
   14005798b:	ins    DWORD PTR es:[rdi],dx
   14005798c:	outs   dx,BYTE PTR gs:[rsi]
   14005798e:	je     0x1400579e3
   140057990:	je     0x140057a04
   140057992:	imul   ebp,DWORD PTR [rsi+0x67],0xc8005773
   140057999:	add    al,0x52
   14005799b:	je     0x140057a09
   14005799d:	push   rbp
   14005799e:	outs   dx,BYTE PTR ds:[rsi]
   14005799f:	ja     0x140057a0a
   1400579a1:	outs   dx,BYTE PTR ds:[rsi]
   1400579a2:	fs rex.RB js 0x1400579a6
   1400579a6:	pop    rdi
   1400579a7:	add    ecx,DWORD PTR [rax+0x65]
   1400579aa:	(bad)  
   1400579ab:	jo     0x140057a00
   1400579ad:	imul   edi,DWORD PTR [rdx+0x65],0x3560000
   1400579b4:	rex.W
   1400579b5:	gs (bad) 
   1400579b7:	jo     0x1400579fa
   1400579b9:	ins    BYTE PTR es:[rdi],dx
   1400579ba:	ins    BYTE PTR es:[rdi],dx
   1400579bb:	outs   dx,DWORD PTR ds:[rsi]
   1400579bc:	movsxd eax,DWORD PTR [rax]
   1400579be:	(bad)  
   1400579bf:	add    al,0x52
   1400579c1:	je     0x140057a2f
   1400579c3:	push   rax
   1400579c4:	movsxd edx,DWORD PTR [rdi+rbp*2+0x46]
   1400579c8:	imul   ebp,DWORD PTR [rbp+riz*2+0x48],0x65646165
   1400579d0:	jb     0x1400579d2
   1400579d2:	nop
   1400579d3:	add    ecx,DWORD PTR [rcx+0x73]
   1400579d6:	push   rsi
   1400579d7:	(bad)  
   1400579d8:	ins    BYTE PTR es:[rdi],dx
   1400579d9:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   1400579e1:	addr32 gs add ah,al
   1400579e5:	add    DWORD PTR [rdi+0x65],eax
   1400579e8:	je     0x140057a2b
   1400579ea:	rex.XB push r8
   1400579ec:	add    BYTE PTR [rax],al
   1400579ee:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400579ef:	add    al,BYTE PTR [rdi+0x65]
   1400579f2:	je     0x140057a43
   1400579f4:	rex.RB
   1400579f5:	rex.WRB
   1400579f6:	rex.XB push r8
   1400579f8:	add    BYTE PTR [rax],al
   1400579fa:	rol    DWORD PTR [rcx],cl
   1400579fc:	rex.RXB
   1400579fd:	gs je  0x140057a43
   140057a00:	push   rax
   140057a01:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140057a03:	outs   dx,WORD PTR ds:[rsi]
   140057a05:	add    cl,ch
   140057a07:	add    al,BYTE PTR [rdi+0x65]
   140057a0a:	je     0x140057a5f
   140057a0c:	je     0x140057a80
   140057a0e:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   140057a15:	push   rdi
   140057a16:	add    BYTE PTR [rax],al
   140057a18:	pop    rbp
   140057a19:	add    ecx,DWORD PTR [rax+0x65]
   140057a1c:	(bad)  
   140057a1d:	jo     0x140057a71
   140057a1f:	gs rex.B ins BYTE PTR es:[rdi],dx
   140057a22:	ins    BYTE PTR es:[rdi],dx
   140057a23:	outs   dx,DWORD PTR ds:[rsi]
   140057a24:	movsxd eax,DWORD PTR [rax]
   140057a26:	add    DWORD PTR [rbp+0x6e],r8d
   140057a2a:	je     0x140057a91
   140057a2c:	jb     0x140057a71
   140057a2e:	jb     0x140057a99
   140057a30:	je     0x140057a9b
   140057a32:	movsxd esp,DWORD PTR [rcx+0x6c]
   140057a35:	push   rbx
   140057a36:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140057a3b:	outs   dx,BYTE PTR ds:[rsi]
   140057a3c:	add    BYTE PTR [rax],al
   140057a3e:	rol    BYTE PTR [rbx],0x4c
   140057a41:	gs (bad) 
   140057a43:	jbe    0x140057aaa
   140057a45:	rex.XB jb 0x140057ab1
   140057a48:	je     0x140057ab3
   140057a4a:	movsxd esp,DWORD PTR [rcx+0x6c]
   140057a4d:	push   rbx
   140057a4e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140057a53:	outs   dx,BYTE PTR ds:[rsi]
   140057a54:	add    BYTE PTR [rax],al
   140057a56:	mov    ebx,0x6c745204
   140057a5b:	rex.XB (bad) 
   140057a5d:	jo     0x140057ad3
   140057a5f:	jne    0x140057ad3
   140057a61:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140057a64:	outs   dx,BYTE PTR ds:[rsi]
   140057a65:	je     0x140057acc
   140057a67:	js     0x140057add
   140057a69:	add    dl,al
   140057a6b:	add    al,0x52
   140057a6d:	je     0x140057adb
   140057a6f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140057a71:	outs   dx,DWORD PTR ds:[rsi]
   140057a72:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140057a76:	jne    0x140057ae6
   140057a78:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140057a7c:	outs   dx,BYTE PTR ds:[rsi]
   140057a7d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140057a7f:	je     0x140057af3
   140057a81:	jns    0x140057a83
   140057a83:	add    cl,cl
   140057a85:	add    al,0x52
   140057a87:	je     0x140057af5
   140057a89:	push   rsi
   140057a8a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140057a91:	outs   dx,BYTE PTR ds:[rsi]
   140057a92:	ja     0x140057afd
   140057a94:	outs   dx,BYTE PTR ds:[rsi]
   140057a95:	add    BYTE PTR fs:[rax],al
   140057a98:	movabs al,ds:0x6c646e61686e5505
   140057aa1:	gs fs rex.RB js 0x140057b09
   140057aa6:	gs jo  0x140057b1d
   140057aa9:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140057ab0:	gs jb  0x140057ab3
   140057ab3:	add    BYTE PTR [rsi+0x736c4601],ch
   140057ab9:	rex.B ins BYTE PTR es:[rdi],dx
   140057abb:	ins    BYTE PTR es:[rdi],dx
   140057abc:	outs   dx,DWORD PTR ds:[rsi]
   140057abd:	movsxd eax,DWORD PTR [rax]
   140057abf:	add    BYTE PTR [rax+0x736c4601],dh
   140057ac5:	rex.RXB
   140057ac6:	gs je  0x140057b1f
   140057ac9:	(bad)  
   140057aca:	ins    BYTE PTR es:[rdi],dx
   140057acb:	jne    0x140057b32
   140057acd:	add    BYTE PTR [rcx+0x736c4601],dh
   140057ad3:	push   rbx
   140057ad4:	gs je  0x140057b2d
   140057ad7:	(bad)  
   140057ad8:	ins    BYTE PTR es:[rdi],dx
   140057ad9:	jne    0x140057b40
   140057adb:	add    BYTE PTR [rdi+0x736c4601],ch
   140057ae1:	rex.RX jb 0x140057b49
   140057ae4:	add    BYTE PTR gs:[rcx],ch
   140057ae7:	add    al,BYTE PTR [rdi+0x65]
   140057aea:	je     0x140057b2f
   140057aec:	jne    0x140057b60
   140057aee:	jb     0x140057b55
   140057af0:	outs   dx,BYTE PTR ds:[rsi]
   140057af1:	je     0x140057b43
   140057af3:	jb     0x140057b64
   140057af5:	movsxd esp,DWORD PTR [rbp+0x73]
   140057af8:	jae    0x140057afa
   140057afa:	jle    0x140057b01
   140057afc:	push   rsp
   140057afd:	gs jb  0x140057b6d
   140057b00:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140057b07:	outs   dx,DWORD PTR ds:[rsi]
   140057b08:	movsxd esp,DWORD PTR [rbp+0x73]
   140057b0b:	jae    0x140057b0d
   140057b0d:	add    BYTE PTR [rsi+0x65724601],bh
   140057b13:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   140057b1c:	(bad)
   140057b1f:	outs   dx,DWORD PTR ds:[rsi]
   140057b20:	(bad)  
   140057b21:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140057b2a:	js     0x140057b83
   140057b2c:	add    BYTE PTR [rax],al
   140057b2e:	sbb    BYTE PTR [rdi+rcx*2],al
   140057b31:	jne    0x140057ba7
   140057b33:	jo     0x140057baa
   140057b35:	je     0x140057b7b
   140057b37:	gs (bad) 
   140057b39:	jne    0x140057ba2
   140057b3b:	push   rbx
   140057b3c:	je     0x140057bb0
   140057b3e:	imul   ebp,DWORD PTR [rsi+0x67],0xc6000057
   140057b45:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140057b49:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140057b52:	add    BYTE PTR [rax],al
   140057b54:	mov    bl,0x3
   140057b56:	rex.WR
   140057b57:	rex.XB
   140057b58:	rex.WRB (bad) 
   140057b5a:	jo     0x140057baf
   140057b5c:	je     0x140057bd0
   140057b5e:	imul   ebp,DWORD PTR [rsi+0x67],0xfc007845
   140057b65:	add    DWORD PTR [rdi+0x65],eax
   140057b68:	je     0x140057bad
   140057b6a:	outs   dx,DWORD PTR ds:[rsi]
   140057b6b:	outs   dx,BYTE PTR ds:[rsi]
   140057b6c:	jae    0x140057bdd
   140057b6e:	ins    BYTE PTR es:[rdi],dx
   140057b6f:	gs rex.XB push r8
   140057b72:	add    BYTE PTR [rax],al
   140057b74:	(bad)  
   140057b75:	add    al,BYTE PTR [rdi+0x65]
   140057b78:	je     0x140057bbd
   140057b7a:	outs   dx,DWORD PTR ds:[rsi]
   140057b7b:	outs   dx,BYTE PTR ds:[rsi]
   140057b7c:	jae    0x140057bed
   140057b7e:	ins    BYTE PTR es:[rdi],dx
   140057b7f:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140057b82:	fs add BYTE PTR gs:[rax],al
   140057b86:	sbb    BYTE PTR [rip+0x46746553],al        # 0x18679e0df
   140057b8c:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   140057b94:	gs jb  0x140057bdc
   140057b97:	js     0x140057b99
   140057b99:	add    BYTE PTR [rip+0x74655305],bh        # 0x1b46acea4
   140057b9f:	push   rbx
   140057ba0:	je     0x140057c06
   140057ba2:	rex.W (bad) 
   140057ba4:	outs   dx,BYTE PTR ds:[rsi]
   140057ba5:	fs ins BYTE PTR es:[rdi],dx
   140057ba7:	add    BYTE PTR gs:[rax],al
   140057baa:	add    BYTE PTR [rsi],al
   140057bac:	push   rdi
   140057bad:	jb     0x140057c18
   140057baf:	je     0x140057c16
   140057bb1:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140057bb3:	outs   dx,BYTE PTR ds:[rsi]
   140057bb4:	jae    0x140057c25
   140057bb6:	ins    BYTE PTR es:[rdi],dx
   140057bb7:	gs push rdi
   140057bb9:	add    BYTE PTR [rbx+0x756c4601],dh
   140057bbf:	jae    0x140057c29
   140057bc1:	imul   r13d,DWORD PTR [rbp+r12*2+0x42],0x65666675
   140057bca:	jb     0x140057c3f
   140057bcc:	add    BYTE PTR [rax],al
   140057bce:	jo     0x140057bd3
   140057bd0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140057bd2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140057bda:	rex.XB jb 0x140057c46
   140057bdd:	je     0x140057c48
   140057bdf:	movsxd esp,DWORD PTR [rcx+0x6c]
   140057be2:	push   rbx
   140057be3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140057be8:	outs   dx,BYTE PTR ds:[rsi]
   140057be9:	rex.RB js 0x140057bec
   140057bec:	pop    rcx
   140057bed:	add    ecx,DWORD PTR [rax+0x65]
   140057bf0:	(bad)  
   140057bf1:	jo     0x140057c37
   140057bf3:	gs jae 0x140057c6a
   140057bf6:	jb     0x140057c67
   140057bf8:	jns    0x140057bfa
   140057bfa:	xchg   ebp,eax
   140057bfb:	add    DWORD PTR [rsi+0x69],eax
   140057bfe:	outs   dx,BYTE PTR ds:[rsi]
   140057bff:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   140057c08:	gs push rdi
   140057c0a:	add    BYTE PTR [rax],al
   140057c0c:	outs   dx,BYTE PTR ds:[rsi]
   140057c0d:	add    ecx,DWORD PTR [rcx+0x6e]
   140057c10:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140057c18:	rex.XB jb 0x140057c84
   140057c1b:	je     0x140057c86
   140057c1d:	movsxd esp,DWORD PTR [rcx+0x6c]
   140057c20:	push   rbx
   140057c21:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140057c26:	outs   dx,BYTE PTR ds:[rsi]
   140057c27:	add    BYTE PTR [rdx+0x6e694601],cl
   140057c2d:	fs rex.XB ins BYTE PTR es:[rdi],dx
   140057c30:	outs   dx,DWORD PTR ds:[rsi]
   140057c31:	jae    0x140057c98
   140057c33:	add    BYTE PTR [rcx+0x726f4601],bh
   140057c39:	ins    DWORD PTR es:[rdi],dx
   140057c3a:	(bad)  
   140057c3b:	je     0x140057c8a
   140057c3d:	gs jae 0x140057cb3
   140057c40:	(bad)  
   140057c41:	add    BYTE PTR gs:[r8d],al
   140057c46:	mov    edx,0x726f4601
   140057c4b:	ins    DWORD PTR es:[rdi],dx
   140057c4c:	(bad)  
   140057c4d:	je     0x140057c9c
   140057c4f:	gs jae 0x140057cc5
   140057c52:	(bad)  
   140057c53:	addr32 gs push rdi
   140057c56:	add    BYTE PTR [rax],al
   140057c58:	test   BYTE PTR [rip+0x74697257],0x65        # 0x1b46eeeb6
   140057c5f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140057c61:	outs   dx,BYTE PTR ds:[rsi]
   140057c62:	jae    0x140057cd3
   140057c64:	ins    BYTE PTR es:[rdi],dx
   140057c65:	add    BYTE PTR gs:[r10+rax*1],dl
   140057c6a:	rex.RXB
   140057c6b:	gs je  0x140057cb1
   140057c6e:	outs   dx,DWORD PTR ds:[rsi]
   140057c6f:	outs   dx,BYTE PTR ds:[rsi]
   140057c70:	jae    0x140057ce1
   140057c72:	ins    BYTE PTR es:[rdi],dx
   140057c73:	gs push rbx
   140057c75:	movsxd esi,DWORD PTR [rdx+0x65]
   140057c78:	outs   dx,BYTE PTR gs:[rsi]
   140057c7a:	rex.X jne 0x140057ce3
   140057c7d:	data16 gs jb 0x140057cca
   140057c81:	outs   dx,BYTE PTR ds:[rsi]
   140057c82:	outs   dx,WORD PTR ds:[rsi]
   140057c84:	add    BYTE PTR [rax],al
   140057c86:	add    al,BYTE PTR [rdi+0x65]
   140057c8a:	je     0x140057cd0
   140057c8c:	jb     0x140057cf7
   140057c8e:	jbe    0x140057cf5
   140057c90:	push   rsp
   140057c91:	jns    0x140057d03
   140057c93:	gs push rdi
   140057c95:	add    BYTE PTR [rbp+0x2],dl
   140057c98:	rex.RXB
   140057c99:	gs je  0x140057ce2
   140057c9c:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140057ca4:	(bad)  
   140057ca5:	jne    0x140057d1b
   140057ca7:	gs jae 0x140057d01
   140057caa:	add    BYTE PTR [rax],al
   140057cac:	ret    
   140057cad:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140057cb1:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   140057cba:	add    BYTE PTR [rax],al
   140057cbc:	cmc    
   140057cbd:	add    al,BYTE PTR [rdi+0x65]
   140057cc0:	je     0x140057d15
   140057cc2:	jns    0x140057d37
   140057cc4:	je     0x140057d2b
   140057cc6:	ins    DWORD PTR es:[rdi],dx
   140057cc7:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140057cc9:	outs   dx,WORD PTR ds:[rsi]
   140057ccb:	add    BYTE PTR [rax+0x4],al
   140057cce:	push   rcx
   140057ccf:	jne    0x140057d36
   140057cd1:	jb     0x140057d4c
   140057cd3:	push   rax
   140057cd4:	gs jb  0x140057d3d
   140057cd7:	outs   dx,DWORD PTR ds:[rsi]
   140057cd8:	jb     0x140057d47
   140057cda:	(bad)  
   140057cdb:	outs   dx,BYTE PTR ds:[rsi]
   140057cdc:	movsxd esp,DWORD PTR [rbp+0x46]
   140057cdf:	jb     0x140057d46
   140057ce1:	jno    0x140057d58
   140057ce3:	outs   dx,BYTE PTR gs:[rsi]
   140057ce5:	movsxd edi,DWORD PTR [rcx+0x0]
   140057ce8:	pop    rbx
   140057ce9:	add    al,BYTE PTR [rdi+0x65]
   140057cec:	je     0x140057d34
   140057cee:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   140057cf6:	pop    rsp
   140057cf7:	add    al,0x52
   140057cf9:	gs (bad) 
   140057cfb:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x4d03de00
   140057d05:	(bad)  
   140057d06:	jo     0x140057d5e
   140057d08:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140057d0f:	ins    BYTE PTR es:[rdi],dx
   140057d10:	add    BYTE PTR gs:[rbx+0x6d6e5505],ah
   140057d17:	(bad)  
   140057d18:	jo     0x140057d70
   140057d1a:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140057d21:	ins    BYTE PTR es:[rdi],dx
   140057d22:	gs add ch,al
   140057d25:	add    eax,0x74726956
   140057d2a:	jne    0x140057d8d
   140057d2c:	ins    BYTE PTR es:[rdi],dx
   140057d2d:	push   rbp
   140057d2e:	outs   dx,BYTE PTR ds:[rsi]
   140057d2f:	ins    BYTE PTR es:[rdi],dx
   140057d30:	outs   dx,DWORD PTR ds:[rsi]
   140057d31:	movsxd ebp,DWORD PTR [rbx+0x0]
   140057d34:	mov    ebx,0x72695605
   140057d39:	je     0x140057db0
   140057d3b:	(bad)  
   140057d3c:	ins    BYTE PTR es:[rdi],dx
   140057d3d:	rex.B ins BYTE PTR es:[rdi],dx
   140057d3f:	ins    BYTE PTR es:[rdi],dx
   140057d40:	outs   dx,DWORD PTR ds:[rsi]
   140057d41:	movsxd eax,DWORD PTR [rax]
   140057d43:	add    bh,cl
   140057d45:	add    BYTE PTR [rbx+0x72],al
   140057d48:	gs (bad) 
   140057d4a:	je     0x140057db1
   140057d4c:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   140057d55:	outs   dx,BYTE PTR ds:[rsi]
   140057d56:	add    BYTE PTR [r8d],al
   140057d5a:	rol    BYTE PTR [rip+0x74726956],0x75        # 0x1b477e6b7
   140057d61:	(bad)  
   140057d62:	ins    BYTE PTR es:[rdi],dx
   140057d63:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140057d65:	movsxd ebp,DWORD PTR [rbx+0x0]
   140057d68:	add    al,BYTE PTR [rdi+rcx*2]
   140057d6b:	jo     0x140057dd2
   140057d6d:	outs   dx,BYTE PTR ds:[rsi]
   140057d6e:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   140057d77:	outs   dx,BYTE PTR ds:[rsi]
   140057d78:	add    BYTE PTR [r8d],al
   140057d7c:	and    DWORD PTR [rax+rdx*2],eax
   140057d7f:	gs imul ecx,DWORD PTR gs:[rsi+0x61],0x6d
   140057d85:	gs fs push rax
   140057d88:	imul   esi,DWORD PTR [rax+0x65],0x4300e800
   140057d8f:	jb     0x140057df6
   140057d91:	(bad)  
   140057d92:	je     0x140057df9
   140057d94:	push   rax
   140057d95:	imul   esi,DWORD PTR [rax+0x65],0x6310000
   140057d9c:	ins    BYTE PTR es:[rdi],dx
   140057d9d:	jae    0x140057e13
   140057d9f:	jb     0x140057e0d
   140057da1:	outs   dx,BYTE PTR gs:[rsi]
   140057da3:	push   rdi
   140057da4:	add    BYTE PTR [rax],al
   140057da6:	or     eax,DWORD PTR [rip+0x45746553]        # 0x18579e2ff
   140057dac:	jbe    0x140057e13
   140057dae:	outs   dx,BYTE PTR ds:[rsi]
   140057daf:	je     0x140057db1
   140057db1:	add    bh,al
   140057db3:	add    BYTE PTR [rbx+0x72],al
   140057db6:	gs (bad) 
   140057db8:	je     0x140057e1f
   140057dba:	rex.RB jbe 0x140057e22
   140057dbd:	outs   dx,BYTE PTR ds:[rsi]
   140057dbe:	je     0x140057e01
   140057dc0:	add    BYTE PTR [rax],al
   140057dc2:	mov    dl,0x4
   140057dc4:	push   rdx
   140057dc5:	gs jae 0x140057e2d
   140057dc8:	je     0x140057e0f
   140057dca:	jbe    0x140057e31
   140057dcc:	outs   dx,BYTE PTR ds:[rsi]
   140057dcd:	je     0x140057dcf
   140057dcf:	add    BYTE PTR [rsi+0x6e694601],cl
   140057dd5:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   140057dde:	add    BYTE PTR gs:[r8],al
   140057de2:	(bad)  
   140057de3:	add    al,BYTE PTR [rdi+0x65]
   140057de6:	je     0x140057e35
   140057de8:	outs   dx,DWORD PTR ds:[rsi]
   140057de9:	fs jne 0x140057e58
   140057dec:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   140057df6:	add    BYTE PTR [rax],al
   140057df8:	add    eax,DWORD PTR es:[rdi+0x65]
   140057dfc:	je     0x140057e53
   140057dfe:	jae    0x140057e65
   140057e00:	jb     0x140057e46
   140057e02:	gs data16 (bad) 
   140057e05:	jne    0x140057e73
   140057e07:	je     0x140057e5e
   140057e09:	rex.WB
   140057e0a:	rex.WR (bad) 
   140057e0c:	outs   dx,BYTE PTR ds:[rsi]
   140057e0d:	addr32 jne 0x140057e71
   140057e10:	add    BYTE PTR gs:[eax],al
   140057e14:	out    dx,eax
   140057e15:	add    BYTE PTR [rbx+0x72],al
   140057e18:	gs (bad) 
   140057e1a:	je     0x140057e81
   140057e1c:	push   rax
   140057e1d:	jb     0x140057e8e
   140057e1f:	movsxd esp,DWORD PTR [rbp+0x73]
   140057e22:	jae    0x140057e7b
   140057e24:	add    BYTE PTR [rax],al
   140057e26:	leave  
   140057e27:	add    eax,0x74696157
   140057e2c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140057e2e:	jb     0x140057e7d
   140057e30:	jne    0x140057e9e
   140057e32:	je     0x140057e9d
   140057e34:	jo     0x140057ea2
   140057e36:	gs rex.WRXB (bad) 
   140057e39:	push   0x65
   140057e3b:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   140057e3f:	add    BYTE PTR [rip+0x70754401],bh        # 0x1b07ac246
   140057e45:	ins    BYTE PTR es:[rdi],dx
   140057e46:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   140057e4d:	outs   dx,BYTE PTR ds:[rsi]
   140057e4e:	fs ins BYTE PTR es:[rdi],dx
   140057e50:	add    BYTE PTR gs:[rdx],cl
   140057e53:	(bad)  
   140057e54:	push   rdi
   140057e55:	jb     0x140057ec0
   140057e57:	je     0x140057ebe
   140057e59:	push   rax
   140057e5a:	jb     0x140057ecb
   140057e5c:	movsxd esp,DWORD PTR [rbp+0x73]
   140057e5f:	jae    0x140057eae
   140057e61:	gs ins DWORD PTR es:[rdi],dx
   140057e63:	outs   dx,DWORD PTR ds:[rsi]
   140057e64:	jb     0x140057edf
   140057e66:	add    BYTE PTR [rax],al
   140057e68:	ja     0x140057e6f
   140057e6a:	push   rbx
   140057e6b:	jne    0x140057ee0
   140057e6d:	jo     0x140057ed4
   140057e6f:	outs   dx,BYTE PTR ds:[rsi]
   140057e70:	fs push rsp
   140057e72:	push   0x64616572
   140057e77:	add    BYTE PTR [rcx+0x73655204],bh
   140057e7d:	jne    0x140057eec
   140057e7f:	gs push rsp
   140057e81:	push   0x64616572
   140057e86:	add    BYTE PTR [rax],al
   140057e88:	(bad)  
   140057e89:	add    BYTE PTR [rbx+0x72],al
   140057e8c:	gs (bad) 
   140057e8e:	je     0x140057ef5
   140057e90:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x54058e00
   140057e99:	push   0x64616572
   140057e9e:	xor    esi,DWORD PTR [rdx]
   140057ea0:	rex.RX imul r14d,DWORD PTR [rdx+0x73],0x45f0074
   140057ea8:	push   rdx
   140057ea9:	gs (bad) 
   140057eab:	fs push rax
   140057ead:	jb     0x140057f1e
   140057eaf:	movsxd esp,DWORD PTR [rbp+0x73]
   140057eb2:	jae    0x140057f01
   140057eb4:	gs ins DWORD PTR es:[rdi],dx
   140057eb6:	outs   dx,DWORD PTR ds:[rsi]
   140057eb7:	jb     0x140057f32
   140057eb9:	add    BYTE PTR [rdx+rax*1+0x47],cl
   140057ebd:	gs je  0x140057f05
   140057ec0:	js     0x140057f2b
   140057ec2:	je     0x140057f07
   140057ec4:	outs   dx,DWORD PTR ds:[rsi]
   140057ec5:	fs gs push rax
   140057ec8:	jb     0x140057f39
   140057eca:	movsxd esp,DWORD PTR [rbp+0x73]
   140057ecd:	jae    0x140057ecf
   140057ecf:	add    BYTE PTR [rdi+0x72685405],cl
   140057ed5:	gs (bad) 
   140057ed7:	xor    esi,DWORD PTR fs:[rdx]
   140057eda:	rex.WRX
   140057edb:	gs js  0x140057f52
   140057ede:	add    BYTE PTR [rax],al
   140057ee0:	sub    eax,DWORD PTR [rax+rdx*2]
   140057ee3:	jb     0x140057f54
   140057ee5:	movsxd esp,DWORD PTR [rbp+0x73]
   140057ee8:	jae    0x140057f1d
   140057eea:	xor    al,BYTE PTR [rsi+0x69]
   140057eed:	jb     0x140057f62
   140057eef:	je     0x140057f48
   140057ef1:	add    BYTE PTR [rbx],dl
   140057ef3:	add    al,0x4f
   140057ef5:	jo     0x140057f5c
   140057ef7:	outs   dx,BYTE PTR ds:[rsi]
   140057ef8:	push   rsp
   140057ef9:	push   0x64616572
   140057efe:	add    BYTE PTR [rax],al
   140057f00:	jrcxz  0x140057f05
   140057f02:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140057f04:	fs jne 0x140057f73
   140057f07:	xor    esi,DWORD PTR gs:[rdx]
   140057f0a:	rex.RX imul r14d,DWORD PTR [rdx+0x73],0x5774
   140057f12:	sub    eax,0x6f725004
   140057f17:	movsxd esp,DWORD PTR [rbp+0x73]
   140057f1a:	jae    0x140057f4f
   140057f1c:	xor    cl,BYTE PTR [rsi+0x65]
   140057f1f:	js     0x140057f95
   140057f21:	push   rdi
   140057f22:	add    BYTE PTR [rax],al
   140057f24:	or     DWORD PTR [rcx],eax
   140057f26:	rex.XB jb 0x140057f8e
   140057f29:	(bad)  
   140057f2a:	je     0x140057f91
   140057f2c:	push   rsp
   140057f2d:	outs   dx,DWORD PTR ds:[rsi]
   140057f2e:	outs   dx,DWORD PTR ds:[rsi]
   140057f2f:	ins    BYTE PTR es:[rdi],dx
   140057f30:	push   0x33706c65
   140057f35:	xor    dl,BYTE PTR [rbx+0x6e]
   140057f38:	(bad)  
   140057f39:	jo     0x140057fae
   140057f3b:	push   0x746f
   140057f40:	in     eax,0x3
   140057f42:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140057f44:	fs jne 0x140057fb3
   140057f47:	xor    esi,DWORD PTR gs:[rdx]
   140057f4a:	rex.WRX
   140057f4b:	gs js  0x140057fc2
   140057f4e:	push   rdi
   140057f4f:	add    al,dh
   140057f51:	add    BYTE PTR [rbx+0x72],al
   140057f54:	gs (bad) 
   140057f56:	je     0x140057fbd
   140057f58:	push   rdx
   140057f59:	gs ins DWORD PTR es:[rdi],dx
   140057f5b:	outs   dx,DWORD PTR ds:[rsi]
   140057f5c:	je     0x140057fc3
   140057f5e:	push   rsp
   140057f5f:	push   0x64616572
   140057f64:	add    BYTE PTR [rax],al
   140057f66:	mov    edi,0x72695605
   140057f6b:	je     0x140057fe2
   140057f6d:	(bad)  
   140057f6e:	ins    BYTE PTR es:[rdi],dx
   140057f6f:	rex.RX jb 0x140057fd7
   140057f72:	gs rex.RB js 0x140057f76
   140057f76:	jg     0x140057f7d
   140057f78:	push   rsp
   140057f79:	gs jb  0x140057fe9
   140057f7c:	imul   ebp,DWORD PTR [rsi+0x61],0x68546574
   140057f83:	jb     0x140057fea
   140057f85:	(bad)  
   140057f86:	add    BYTE PTR fs:[rax+0x5],dl
   140057f8a:	push   rbx
   140057f8b:	gs je  0x140057fe2
   140057f8e:	push   0x64616572
   140057f93:	push   rax
   140057f94:	jb     0x140057fff
   140057f96:	outs   dx,DWORD PTR ds:[rsi]
   140057f97:	jb     0x140058002
   140057f99:	je     0x140058014
   140057f9b:	add    BYTE PTR [rbp+rax*1+0x74726956],bh
   140057fa2:	jne    0x140058005
   140057fa4:	ins    BYTE PTR es:[rdi],dx
   140057fa5:	rex.B ins BYTE PTR es:[rdi],dx
   140057fa7:	ins    BYTE PTR es:[rdi],dx
   140057fa8:	outs   dx,DWORD PTR ds:[rsi]
   140057fa9:	movsxd eax,DWORD PTR [rbp+0x78]
   140057fac:	add    BYTE PTR [rax],al
   140057fae:	in     eax,0x0
   140057fb0:	rex.XB jb 0x140058018
   140057fb3:	(bad)  
   140057fb4:	je     0x14005801b
   140057fb6:	rex.WRB jne 0x14005802d
   140057fb9:	gs js  0x140058013
   140057fbc:	add    BYTE PTR [rax],al
   140057fbe:	rol    DWORD PTR [rax],cl
   140057fc0:	rex.XB jb 0x140058028
   140057fc3:	(bad)  
   140057fc4:	je     0x14005802b
   140057fc6:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   140057fcf:	outs   dx,BYTE PTR ds:[rsi]
   140057fd0:	addr32 push rdi
   140057fd2:	add    BYTE PTR [rax],al
   140057fd4:	retf   0x4300
   140057fd7:	jb     0x14005803e
   140057fd9:	(bad)  
   140057fda:	je     0x140058041
   140057fdc:	rex.RB jbe 0x140058044
   140057fdf:	outs   dx,BYTE PTR ds:[rsi]
   140057fe0:	je     0x140058039
   140057fe2:	add    BYTE PTR [rax],al
   140057fe4:	fwait
   140057fe5:	add    al,0x52
   140057fe7:	gs ins BYTE PTR es:[rdi],dx
   140057fe9:	gs (bad) 
   140057feb:	jae    0x140058052
   140057fed:	rex.WRB jne 0x140058064
   140057ff0:	gs js  0x140057ff3
   140057ff3:	add    BYTE PTR [rdx],ch
   140057ff5:	add    eax,DWORD PTR [rdi+0x65]
   140057ff8:	je     0x140058050
   140057ffa:	gs jb  0x140058070
   140057ffd:	imul   ebp,DWORD PTR [rdi+0x6e],0x1770000
   140058004:	rex.RB js 0x140058077
   140058007:	(bad)  
   140058008:	outs   dx,BYTE PTR ds:[rsi]
   140058009:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14005800c:	jbe    0x140058077
   14005800e:	jb     0x14005807f
   140058010:	outs   dx,BYTE PTR ds:[rsi]
   140058011:	ins    DWORD PTR es:[rdi],dx
   140058012:	outs   dx,BYTE PTR gs:[rsi]
   140058014:	je     0x140058069
   140058016:	je     0x14005808a
   140058018:	imul   ebp,DWORD PTR [rsi+0x67],0xd1005773
   14005801f:	add    eax,0x74696157
   140058024:	rex.WRX (bad) 
   140058026:	ins    DWORD PTR es:[rdi],dx
   140058027:	gs fs push rax
   14005802a:	imul   esi,DWORD PTR [rax+0x65],0x2e000041
   140058031:	add    eax,0x4e746553
   140058036:	(bad)  
   140058037:	ins    DWORD PTR es:[rdi],dx
   140058038:	gs fs push rax
   14005803b:	imul   esi,DWORD PTR [rax+0x65],0x646e6148
   140058042:	ins    BYTE PTR es:[rdi],dx
   140058043:	gs push rbx
   140058045:	je     0x1400580a8
   140058047:	je     0x1400580ae
   140058049:	add    ah,al
   14005804b:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14005804f:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140058058:	js     0x14005809b
   14005805a:	add    BYTE PTR [rax],al
   14005805c:	pop    rdx
   14005805d:	add    al,0x52
   14005805f:	gs (bad) 
   140058061:	rex.XB outs dx,DWORD PTR fs:[rsi]
   140058064:	outs   dx,BYTE PTR ds:[rsi]
   140058065:	jae    0x1400580d6
   140058067:	ins    BYTE PTR es:[rdi],dx
   140058068:	gs push rdi
   14005806a:	add    BYTE PTR [rax],al
   14005806c:	loop   0x14005806e
   14005806e:	rex.XB jb 0x1400580d6
   140058071:	(bad)  
   140058072:	je     0x1400580d9
   140058074:	rex.WRB jne 0x1400580eb
   140058077:	gs js  0x1400580bb
   14005807a:	add    BYTE PTR [rax],al
   14005807c:	(bad)  
   14005807d:	add    al,0x4f
   14005807f:	jo     0x1400580e6
   140058081:	outs   dx,BYTE PTR ds:[rsi]
   140058082:	push   rbx
   140058083:	gs ins DWORD PTR es:[rdi],dx
   140058085:	(bad)  
   140058086:	jo     0x1400580f0
   140058088:	outs   dx,DWORD PTR ds:[rsi]
   140058089:	jb     0x1400580f0
   14005808b:	add    BYTE PTR [r8],al
   14005808e:	repnz add BYTE PTR [rbx+0x72],al
   140058092:	gs (bad) 
   140058094:	je     0x1400580fb
   140058096:	push   rbx
   140058097:	gs ins DWORD PTR es:[rdi],dx
   140058099:	(bad)  
   14005809a:	jo     0x140058104
   14005809c:	outs   dx,DWORD PTR ds:[rsi]
   14005809d:	jb     0x140058104
   14005809f:	add    BYTE PTR [r8],al

Disassembly of section .data:

0000000140059000 <.data>:
   140059000:	rcr    BYTE PTR [rax],1
   140059002:	add    al,0x40
   140059004:	add    DWORD PTR [rax],eax
	...
   14005900e:	add    BYTE PTR [rax],al
   140059010:	cs (bad) 
   140059012:	push   r14
   140059014:	je     0x14005908f
   140059016:	jo     0x14005907d
   140059018:	pop    rdi
   140059019:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140059020:	(bad)  
   140059021:	(bad)  
   140059022:	(bad)  
   140059023:	inc    DWORD PTR [rax]
	...
   14005902d:	add    BYTE PTR [rax],al
   14005902f:	add    bh,bh
   140059031:	(bad)  
   140059032:	(bad)  
   140059033:	(bad)  
   140059034:	(bad)  
   140059035:	(bad)  
   140059036:	(bad)  
   140059037:	inc    DWORD PTR [rax+0xa]
	...
   140059085:	add    BYTE PTR [rax],al
   140059087:	add    BYTE PTR [rdx],dh
   140059089:	movabs ds:0x5dcd00002b992ddf,al
   140059092:	and    dl,dl
   140059094:	data16 (bad) 
   140059096:	(bad)  
   140059097:	inc    DWORD PTR [rcx]
   140059099:	add    BYTE PTR [rax],al
   14005909b:	add    BYTE PTR [rdx],al
   14005909d:	add    BYTE PTR [rax],al
   14005909f:	add    BYTE PTR [rdx],al
	...
   1400590ad:	add    BYTE PTR [rax],al
   1400590af:	add    BYTE PTR [rcx],al
   1400590b1:	add    BYTE PTR [rax],al
   1400590b3:	add    BYTE PTR [rsi],dl
   1400590b5:	add    BYTE PTR [rax],al
   1400590b7:	add    BYTE PTR [rdx],al
   1400590b9:	add    BYTE PTR [rax],al
   1400590bb:	add    BYTE PTR [rdx],al
   1400590bd:	add    BYTE PTR [rax],al
   1400590bf:	add    BYTE PTR [rbx],al
   1400590c1:	add    BYTE PTR [rax],al
   1400590c3:	add    BYTE PTR [rdx],al
   1400590c5:	add    BYTE PTR [rax],al
   1400590c7:	add    BYTE PTR [rax+rax*1],al
   1400590ca:	add    BYTE PTR [rax],al
   1400590cc:	sbb    BYTE PTR [rax],al
   1400590ce:	add    BYTE PTR [rax],al
   1400590d0:	add    eax,0xd000000
   1400590d5:	add    BYTE PTR [rax],al
   1400590d7:	add    BYTE PTR [rsi],al
   1400590d9:	add    BYTE PTR [rax],al
   1400590db:	add    BYTE PTR [rcx],cl
   1400590dd:	add    BYTE PTR [rax],al
   1400590df:	add    BYTE PTR [rdi],al
   1400590e1:	add    BYTE PTR [rax],al
   1400590e3:	add    BYTE PTR [rax+rax*1],cl
   1400590e6:	add    BYTE PTR [rax],al
   1400590e8:	or     BYTE PTR [rax],al
   1400590ea:	add    BYTE PTR [rax],al
   1400590ec:	or     al,0x0
   1400590ee:	add    BYTE PTR [rax],al
   1400590f0:	or     DWORD PTR [rax],eax
   1400590f2:	add    BYTE PTR [rax],al
   1400590f4:	or     al,0x0
   1400590f6:	add    BYTE PTR [rax],al
   1400590f8:	or     al,BYTE PTR [rax]
   1400590fa:	add    BYTE PTR [rax],al
   1400590fc:	(bad)  
   1400590fd:	add    BYTE PTR [rax],al
   1400590ff:	add    BYTE PTR [rbx],cl
   140059101:	add    BYTE PTR [rax],al
   140059103:	add    BYTE PTR [rax],cl
   140059105:	add    BYTE PTR [rax],al
   140059107:	add    BYTE PTR [rax+rax*1],cl
   14005910a:	add    BYTE PTR [rax],al
   14005910c:	(bad)  
   14005910d:	add    BYTE PTR [rax],al
   14005910f:	add    BYTE PTR [rip+0x16000000],cl        # 0x156059115
   140059115:	add    BYTE PTR [rax],al
   140059117:	add    BYTE PTR [rdi],cl
   140059119:	add    BYTE PTR [rax],al
   14005911b:	add    BYTE PTR [rdx],al
   14005911d:	add    BYTE PTR [rax],al
   14005911f:	add    BYTE PTR [rax],dl
   140059121:	add    BYTE PTR [rax],al
   140059123:	add    BYTE PTR [rip+0x11000000],cl        # 0x151059129
   140059129:	add    BYTE PTR [rax],al
   14005912b:	add    BYTE PTR [rdx],dl
   14005912d:	add    BYTE PTR [rax],al
   14005912f:	add    BYTE PTR [rdx],dl
   140059131:	add    BYTE PTR [rax],al
   140059133:	add    BYTE PTR [rdx],al
   140059135:	add    BYTE PTR [rax],al
   140059137:	add    BYTE PTR [rcx],ah
   140059139:	add    BYTE PTR [rax],al
   14005913b:	add    BYTE PTR [rip+0x35000000],cl        # 0x175059141
   140059141:	add    BYTE PTR [rax],al
   140059143:	add    BYTE PTR [rdx],al
   140059145:	add    BYTE PTR [rax],al
   140059147:	add    BYTE PTR [rcx+0x0],al
   14005914a:	add    BYTE PTR [rax],al
   14005914c:	or     eax,0x43000000
   140059151:	add    BYTE PTR [rax],al
   140059153:	add    BYTE PTR [rdx],al
   140059155:	add    BYTE PTR [rax],al
   140059157:	add    BYTE PTR [rax+0x0],dl
   14005915a:	add    BYTE PTR [rax],al
   14005915c:	adc    DWORD PTR [rax],eax
   14005915e:	add    BYTE PTR [rax],al
   140059160:	push   rdx
   140059161:	add    BYTE PTR [rax],al
   140059163:	add    BYTE PTR [rip+0x53000000],cl        # 0x193059169
   140059169:	add    BYTE PTR [rax],al
   14005916b:	add    BYTE PTR [rip+0x57000000],cl        # 0x197059171
   140059171:	add    BYTE PTR [rax],al
   140059173:	add    BYTE PTR [rsi],dl
   140059175:	add    BYTE PTR [rax],al
   140059177:	add    BYTE PTR [rcx+0x0],bl
   14005917a:	add    BYTE PTR [rax],al
   14005917c:	or     eax,DWORD PTR [rax]
   14005917e:	add    BYTE PTR [rax],al
   140059180:	ins    BYTE PTR es:[rdi],dx
   140059181:	add    BYTE PTR [rax],al
   140059183:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad059189
   140059189:	add    BYTE PTR [rax],al
   14005918b:	add    BYTE PTR [rax],ah
   14005918d:	add    BYTE PTR [rax],al
   14005918f:	add    BYTE PTR [rax+0x0],dh
   140059192:	add    BYTE PTR [rax],al
   140059194:	sbb    al,0x0
   140059196:	add    BYTE PTR [rax],al
   140059198:	jb     0x14005919a
   14005919a:	add    BYTE PTR [rax],al
   14005919c:	or     DWORD PTR [rax],eax
   14005919e:	add    BYTE PTR [rax],al
   1400591a0:	(bad)  
   1400591a1:	add    BYTE PTR [rax],al
   1400591a3:	add    BYTE PTR [rsi],dl
   1400591a5:	add    BYTE PTR [rax],al
   1400591a7:	add    BYTE PTR [rax+0xa000000],al
   1400591ad:	add    BYTE PTR [rax],al
   1400591af:	add    BYTE PTR [rcx+0xa000000],al
   1400591b5:	add    BYTE PTR [rax],al
   1400591b7:	add    BYTE PTR [rdx+0x9000000],al
   1400591bd:	add    BYTE PTR [rax],al
   1400591bf:	add    BYTE PTR [rbx+0x16000000],al
   1400591c5:	add    BYTE PTR [rax],al
   1400591c7:	add    BYTE PTR [rax+rax*1+0xd0000],al
   1400591ce:	add    BYTE PTR [rax],al
   1400591d0:	xchg   ecx,eax
   1400591d1:	add    BYTE PTR [rax],al
   1400591d3:	add    BYTE PTR [rcx],ch
   1400591d5:	add    BYTE PTR [rax],al
   1400591d7:	add    BYTE PTR [rsi+0xd000000],bl
   1400591dd:	add    BYTE PTR [rax],al
   1400591df:	add    BYTE PTR [rcx+0x2000000],ah
   1400591e5:	add    BYTE PTR [rax],al
   1400591e7:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   1400591ee:	add    BYTE PTR [rax],al
   1400591f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400591f1:	add    BYTE PTR [rax],al
   1400591f3:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf70591f9
   1400591f9:	add    BYTE PTR [rax],al
   1400591fb:	add    BYTE PTR [rcx],dl
   1400591fd:	add    BYTE PTR [rax],al
   1400591ff:	add    dh,cl
   140059201:	add    BYTE PTR [rax],al
   140059203:	add    BYTE PTR [rdx],al
   140059205:	add    BYTE PTR [rax],al
   140059207:	add    bh,dl
   140059209:	add    BYTE PTR [rax],al
   14005920b:	add    BYTE PTR [rbx],cl
   14005920d:	add    BYTE PTR [rax],al
   14005920f:	add    BYTE PTR [rax],bl
   140059211:	(bad)  
   140059212:	add    BYTE PTR [rax],al
   140059214:	or     al,0x0
   140059216:	add    BYTE PTR [rax],al
   140059218:	or     al,0x0
   14005921a:	add    BYTE PTR [rax],al
   14005921c:	or     BYTE PTR [rax],al
   14005921e:	add    BYTE PTR [rax],al
   140059220:	add    DWORD PTR [rdx],eax
   140059222:	add    al,0x8
	...
   140059230:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059231:	add    eax,DWORD PTR [rax]
   140059233:	add    BYTE PTR [rax-0x7e],ah
   140059236:	jns    0x1400591ba
   140059238:	and    DWORD PTR [rax],eax
   14005923a:	add    BYTE PTR [rax],al
   14005923c:	add    BYTE PTR [rax],al
   14005923e:	add    BYTE PTR [rax],al
   140059240:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059241:	fild   WORD PTR [rax]
   140059243:	add    BYTE PTR [rax],al
   140059245:	add    BYTE PTR [rax],al
   140059247:	add    BYTE PTR [rcx+0xa5],ah
   14005924d:	add    BYTE PTR [rax],al
   14005924f:	add    BYTE PTR [rcx+0xfce09f],al
   140059255:	add    BYTE PTR [rax],al
   140059257:	add    BYTE PTR [rax+0x7e],al
   14005925a:	cmp    ah,0x0
   14005925d:	add    BYTE PTR [rax],al
   14005925f:	add    BYTE PTR [rax-0x3efffffd],ch
   140059265:	movabs ds:0x20a3da,eax
	...
   14005927e:	add    BYTE PTR [rax],al
   140059280:	cmp    esi,0x0
   140059286:	add    BYTE PTR [rax],al
   140059288:	rex inc BYTE PTR [rax]
   14005928b:	add    BYTE PTR [rax],al
   14005928d:	add    BYTE PTR [rax],al
   14005928f:	add    BYTE PTR [rbp-0x3efffffd],dh
   140059295:	movabs ds:0x20a3da,eax
	...
   1400592ae:	add    BYTE PTR [rax],al
   1400592b0:	cmp    esi,0x0
   1400592b6:	add    BYTE PTR [rax],al
   1400592b8:	inc    BYTE PTR [r8]
   1400592bb:	add    BYTE PTR [rax],al
   1400592bd:	add    BYTE PTR [rax],al
   1400592bf:	add    BYTE PTR [rsi-0x30fffffd],dh
   1400592c5:	movabs ds:0xa2e8a2e5001aa2e4,al
   1400592ce:	pop    rbx
	...
   1400592df:	add    BYTE PTR [rcx+0xfe],al
   1400592e5:	add    BYTE PTR [rax],al
   1400592e7:	add    BYTE PTR [rax+0x7e],al
   1400592ea:	movabs eax,ds:0x55100000000fe
   1400592f3:	add    BYTE PTR [rcx-0x26],dl
   1400592f6:	pop    rsi
   1400592f7:	fisub  DWORD PTR [rax]
   1400592f9:	add    BYTE PTR [rdi-0x26],bl
   1400592fc:	push   0xffffffffffffffda
   1400592fe:	xor    al,BYTE PTR [rax]
	...
   140059310:	adc    ebx,0xf9e0ded8
   140059316:	add    BYTE PTR [rax],al
   140059318:	xor    DWORD PTR [rsi-0x7f],edi
   14005931b:	inc    BYTE PTR [rax]
	...
   140059361:	add    BYTE PTR [rax],dl
   140059363:	adc    BYTE PTR [rax],dl
   140059365:	adc    BYTE PTR [rax],dl
   140059367:	adc    BYTE PTR [rax],dl
   140059369:	adc    BYTE PTR [rax],dl
   14005936b:	adc    BYTE PTR [rax],dl
   14005936d:	adc    BYTE PTR [rax],dl
   14005936f:	adc    BYTE PTR [rax],dl
   140059371:	adc    BYTE PTR [rax],dl
   140059373:	adc    BYTE PTR [rax],dl
   140059375:	adc    BYTE PTR [rax],dl
   140059377:	adc    BYTE PTR [rax],dl
   140059379:	adc    BYTE PTR [rax],dl
   14005937b:	adc    BYTE PTR [rax],al
   14005937d:	add    BYTE PTR [rax],al
   14005937f:	add    BYTE PTR [rax],al
   140059381:	add    BYTE PTR [rax],ah
   140059383:	and    BYTE PTR [rax],ah
   140059385:	and    BYTE PTR [rax],ah
   140059387:	and    BYTE PTR [rax],ah
   140059389:	and    BYTE PTR [rax],ah
   14005938b:	and    BYTE PTR [rax],ah
   14005938d:	and    BYTE PTR [rax],ah
   14005938f:	and    BYTE PTR [rax],ah
   140059391:	and    BYTE PTR [rax],ah
   140059393:	and    BYTE PTR [rax],ah
   140059395:	and    BYTE PTR [rax],ah
   140059397:	and    BYTE PTR [rax],ah
   140059399:	and    BYTE PTR [rax],ah
   14005939b:	and    BYTE PTR [rax],al
	...
   140059425:	add    BYTE PTR [rax],al
   140059427:	add    BYTE PTR [rax],dh
   140059429:	xchg   ebp,eax
   14005942a:	add    eax,0x140
	...
   14005946f:	add    BYTE PTR [rax],al
   140059471:	(bad)  
   140059472:	(bad)
   140059477:	addr32 push 0x6c6b6a69
   14005947d:	ins    DWORD PTR es:[rdi],dx
   14005947e:	outs   dx,BYTE PTR ds:[rsi]
   14005947f:	outs   dx,DWORD PTR ds:[rsi]
   140059480:	jo     0x1400594f3
   140059482:	jb     0x1400594f7
   140059484:	je     0x1400594fb
   140059486:	jbe    0x1400594ff
   140059488:	js     0x140059503
   14005948a:	jp     0x14005948c
   14005948c:	add    BYTE PTR [rax],al
   14005948e:	add    BYTE PTR [rax],al
   140059490:	add    BYTE PTR [rcx+0x42],al
   140059493:	rex.XB
   140059494:	rex.R
   140059495:	rex.RB
   140059496:	rex.RX
   140059497:	rex.RXB
   140059498:	rex.W
   140059499:	rex.WB
   14005949a:	rex.WX
   14005949b:	rex.WXB
   14005949c:	rex.WR
   14005949d:	rex.WRB
   14005949e:	rex.WRX
   14005949f:	rex.WRXB push r8
   1400594a1:	push   rcx
   1400594a2:	push   rdx
   1400594a3:	push   rbx
   1400594a4:	push   rsp
   1400594a5:	push   rbp
   1400594a6:	push   rsi
   1400594a7:	push   rdi
   1400594a8:	pop    rax
   1400594a9:	pop    rcx
   1400594aa:	pop    rdx
	...
   140059587:	add    BYTE PTR [rax],al
   140059589:	add    BYTE PTR [rax],dl
   14005958b:	adc    BYTE PTR [rax],dl
   14005958d:	adc    BYTE PTR [rax],dl
   14005958f:	adc    BYTE PTR [rax],dl
   140059591:	adc    BYTE PTR [rax],dl
   140059593:	adc    BYTE PTR [rax],dl
   140059595:	adc    BYTE PTR [rax],dl
   140059597:	adc    BYTE PTR [rax],dl
   140059599:	adc    BYTE PTR [rax],dl
   14005959b:	adc    BYTE PTR [rax],dl
   14005959d:	adc    BYTE PTR [rax],dl
   14005959f:	adc    BYTE PTR [rax],dl
   1400595a1:	adc    BYTE PTR [rax],dl
   1400595a3:	adc    BYTE PTR [rax],al
   1400595a5:	add    BYTE PTR [rax],al
   1400595a7:	add    BYTE PTR [rax],al
   1400595a9:	add    BYTE PTR [rax],ah
   1400595ab:	and    BYTE PTR [rax],ah
   1400595ad:	and    BYTE PTR [rax],ah
   1400595af:	and    BYTE PTR [rax],ah
   1400595b1:	and    BYTE PTR [rax],ah
   1400595b3:	and    BYTE PTR [rax],ah
   1400595b5:	and    BYTE PTR [rax],ah
   1400595b7:	and    BYTE PTR [rax],ah
   1400595b9:	and    BYTE PTR [rax],ah
   1400595bb:	and    BYTE PTR [rax],ah
   1400595bd:	and    BYTE PTR [rax],ah
   1400595bf:	and    BYTE PTR [rax],ah
   1400595c1:	and    BYTE PTR [rax],ah
   1400595c3:	and    BYTE PTR [rax],al
	...
   140059689:	add    BYTE PTR [rcx+0x62],ah
   14005968c:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140059690:	addr32 push 0x6c6b6a69
   140059696:	ins    DWORD PTR es:[rdi],dx
   140059697:	outs   dx,BYTE PTR ds:[rsi]
   140059698:	outs   dx,DWORD PTR ds:[rsi]
   140059699:	jo     0x14005970c
   14005969b:	jb     0x140059710
   14005969d:	je     0x140059714
   14005969f:	jbe    0x140059718
   1400596a1:	js     0x14005971c
   1400596a3:	jp     0x1400596a5
   1400596a5:	add    BYTE PTR [rax],al
   1400596a7:	add    BYTE PTR [rax],al
   1400596a9:	add    BYTE PTR [rcx+0x42],al
   1400596ac:	rex.XB
   1400596ad:	rex.R
   1400596ae:	rex.RB
   1400596af:	rex.RX
   1400596b0:	rex.RXB
   1400596b1:	rex.W
   1400596b2:	rex.WB
   1400596b3:	rex.WX
   1400596b4:	rex.WXB
   1400596b5:	rex.WR
   1400596b6:	rex.WRB
   1400596b7:	rex.WRX
   1400596b8:	rex.WRXB push r8
   1400596ba:	push   rcx
   1400596bb:	push   rdx
   1400596bc:	push   rbx
   1400596bd:	push   rsp
   1400596be:	push   rbp
   1400596bf:	push   rsi
   1400596c0:	push   rdi
   1400596c1:	pop    rax
   1400596c2:	pop    rcx
   1400596c3:	pop    rdx
	...
   140059758:	rex.XB add BYTE PTR [r8],al
   14005975b:	add    BYTE PTR [rax],al
   14005975d:	add    BYTE PTR [rax],al
   14005975f:	add    BYTE PTR [rsi+riz*1],ch
   140059762:	add    al,0x40
   140059764:	add    DWORD PTR [rax],eax
   140059766:	add    BYTE PTR [rax],al
   140059768:	xor    BYTE PTR [rsi],ah
   14005976a:	add    al,0x40
   14005976c:	add    DWORD PTR [rax],eax
   14005976e:	add    BYTE PTR [rax],al
   140059770:	xor    al,0x26
   140059772:	add    al,0x40
   140059774:	add    DWORD PTR [rax],eax
   140059776:	add    BYTE PTR [rax],al
   140059778:	cmp    BYTE PTR [rsi],ah
   14005977a:	add    al,0x40
   14005977c:	add    DWORD PTR [rax],eax
   14005977e:	add    BYTE PTR [rax],al
   140059780:	cmp    al,0x26
   140059782:	add    al,0x40
   140059784:	add    DWORD PTR [rax],eax
   140059786:	add    BYTE PTR [rax],al
   140059788:	rex
   140059789:	es add al,0x40
   14005978c:	add    DWORD PTR [rax],eax
   14005978e:	add    BYTE PTR [rax],al
   140059790:	rex.R
   140059791:	es add al,0x40
   140059794:	add    DWORD PTR [rax],eax
   140059796:	add    BYTE PTR [rax],al
   140059798:	rex.W
   140059799:	es add al,0x40
   14005979c:	add    DWORD PTR [rax],eax
   14005979e:	add    BYTE PTR [rax],al
   1400597a0:	push   rax
   1400597a1:	es add al,0x40
   1400597a4:	add    DWORD PTR [rax],eax
   1400597a6:	add    BYTE PTR [rax],al
   1400597a8:	pop    rax
   1400597a9:	es add al,0x40
   1400597ac:	add    DWORD PTR [rax],eax
   1400597ae:	add    BYTE PTR [rax],al
   1400597b0:	(bad)  
   1400597b1:	es add al,0x40
   1400597b4:	add    DWORD PTR [rax],eax
   1400597b6:	add    BYTE PTR [rax],al
   1400597b8:	jo     0x1400597e0
   1400597ba:	add    al,0x40
   1400597bc:	add    DWORD PTR [rax],eax
   1400597be:	add    BYTE PTR [rax],al
   1400597c0:	jl     0x1400597e8
   1400597c2:	add    al,0x40
   1400597c4:	add    DWORD PTR [rax],eax
   1400597c6:	add    BYTE PTR [rax],al
   1400597c8:	mov    BYTE PTR [rsi],ah
   1400597ca:	add    al,0x40
   1400597cc:	add    DWORD PTR [rax],eax
   1400597ce:	add    BYTE PTR [rax],al
   1400597d0:	xchg   esp,eax
   1400597d1:	es add al,0x40
   1400597d4:	add    DWORD PTR [rax],eax
   1400597d6:	add    BYTE PTR [rax],al
   1400597d8:	cwde   
   1400597d9:	es add al,0x40
   1400597dc:	add    DWORD PTR [rax],eax
   1400597de:	add    BYTE PTR [rax],al
   1400597e0:	pushf  
   1400597e1:	es add al,0x40
   1400597e4:	add    DWORD PTR [rax],eax
   1400597e6:	add    BYTE PTR [rax],al
   1400597e8:	movabs al,ds:0xa400000001400426
   1400597f1:	es add al,0x40
   1400597f4:	add    DWORD PTR [rax],eax
   1400597f6:	add    BYTE PTR [rax],al
   1400597f8:	test   al,0x26
   1400597fa:	add    al,0x40
   1400597fc:	add    DWORD PTR [rax],eax
   1400597fe:	add    BYTE PTR [rax],al
   140059800:	lods   al,BYTE PTR ds:[rsi]
   140059801:	es add al,0x40
   140059804:	add    DWORD PTR [rax],eax
   140059806:	add    BYTE PTR [rax],al
   140059808:	mov    al,0x26
   14005980a:	add    al,0x40
   14005980c:	add    DWORD PTR [rax],eax
   14005980e:	add    BYTE PTR [rax],al
   140059810:	mov    ah,0x26
   140059812:	add    al,0x40
   140059814:	add    DWORD PTR [rax],eax
   140059816:	add    BYTE PTR [rax],al
   140059818:	mov    eax,0x1400426
   14005981d:	add    BYTE PTR [rax],al
   14005981f:	add    BYTE PTR [rsi+riz*1+0x14004],bh
   140059826:	add    BYTE PTR [rax],al
   140059828:	shl    BYTE PTR [rsi],0x4
   14005982b:	rex add DWORD PTR [rax],eax
   14005982e:	add    BYTE PTR [rax],al
   140059830:	enter  0x426,0x40
   140059834:	add    DWORD PTR [rax],eax
   140059836:	add    BYTE PTR [rax],al
   140059838:	shl    BYTE PTR [rsi],1
   14005983a:	add    al,0x40
   14005983c:	add    DWORD PTR [rax],eax
   14005983e:	add    BYTE PTR [rax],al
   140059840:	fsub   QWORD PTR [rsi]
   140059842:	add    al,0x40
   140059844:	add    DWORD PTR [rax],eax
   140059846:	add    BYTE PTR [rax],al
   140059848:	in     al,0x26
   14005984a:	add    al,0x40
   14005984c:	add    DWORD PTR [rax],eax
   14005984e:	add    BYTE PTR [rax],al
   140059850:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059851:	es add al,0x40
   140059854:	add    DWORD PTR [rax],eax
   140059856:	add    BYTE PTR [rax],al
   140059858:	in     al,dx
   140059859:	es add al,0x40
   14005985c:	add    DWORD PTR [rax],eax
   14005985e:	add    BYTE PTR [rax],al
   140059860:	hlt    
   140059861:	es add al,0x40
   140059864:	add    DWORD PTR [rax],eax
   140059866:	add    BYTE PTR [rax],al
   140059868:	cld    
   140059869:	es add al,0x40
   14005986c:	add    DWORD PTR [rax],eax
   14005986e:	add    BYTE PTR [rax],al
   140059870:	or     BYTE PTR [rdi],ah
   140059872:	add    al,0x40
   140059874:	add    DWORD PTR [rax],eax
   140059876:	add    BYTE PTR [rax],al
   140059878:	sbb    BYTE PTR [rdi],ah
   14005987a:	add    al,0x40
   14005987c:	add    DWORD PTR [rax],eax
   14005987e:	add    BYTE PTR [rax],al
   140059880:	and    BYTE PTR [rdi],ah
   140059882:	add    al,0x40
   140059884:	add    DWORD PTR [rax],eax
   140059886:	add    BYTE PTR [rax],al
   140059888:	xor    BYTE PTR [rdi],ah
   14005988a:	add    al,0x40
   14005988c:	add    DWORD PTR [rax],eax
   14005988e:	add    BYTE PTR [rax],al
   140059890:	cmp    al,0x27
   140059892:	add    al,0x40
   140059894:	add    DWORD PTR [rax],eax
   140059896:	add    BYTE PTR [rax],al
   140059898:	rex (bad) 
   14005989a:	add    al,0x40
   14005989c:	add    DWORD PTR [rax],eax
   14005989e:	add    BYTE PTR [rax],al
   1400598a0:	rex.W (bad) 
   1400598a2:	add    al,0x40
   1400598a4:	add    DWORD PTR [rax],eax
   1400598a6:	add    BYTE PTR [rax],al
   1400598a8:	pop    rax
   1400598a9:	(bad)  
   1400598aa:	add    al,0x40
   1400598ac:	add    DWORD PTR [rax],eax
   1400598ae:	add    BYTE PTR [rax],al
   1400598b0:	jo     0x1400598d9
   1400598b2:	add    al,0x40
   1400598b4:	add    DWORD PTR [rax],eax
   1400598b6:	add    BYTE PTR [rax],al
   1400598b8:	add    DWORD PTR [rax],eax
   1400598ba:	add    BYTE PTR [rax],al
   1400598bc:	add    BYTE PTR [rax],al
   1400598be:	add    BYTE PTR [rax],al
   1400598c0:	and    BYTE PTR [rdi],0x4
   1400598c3:	rex add DWORD PTR [rax],eax
   1400598c6:	add    BYTE PTR [rax],al
   1400598c8:	mov    BYTE PTR [rdi],ah
   1400598ca:	add    al,0x40
   1400598cc:	add    DWORD PTR [rax],eax
   1400598ce:	add    BYTE PTR [rax],al
   1400598d0:	nop
   1400598d1:	(bad)  
   1400598d2:	add    al,0x40
   1400598d4:	add    DWORD PTR [rax],eax
   1400598d6:	add    BYTE PTR [rax],al
   1400598d8:	cwde   
   1400598d9:	(bad)  
   1400598da:	add    al,0x40
   1400598dc:	add    DWORD PTR [rax],eax
   1400598de:	add    BYTE PTR [rax],al
   1400598e0:	movabs al,ds:0xa800000001400427
   1400598e9:	(bad)  
   1400598ea:	add    al,0x40
   1400598ec:	add    DWORD PTR [rax],eax
   1400598ee:	add    BYTE PTR [rax],al
   1400598f0:	mov    al,0x27
   1400598f2:	add    al,0x40
   1400598f4:	add    DWORD PTR [rax],eax
   1400598f6:	add    BYTE PTR [rax],al
   1400598f8:	mov    eax,0x1400427
   1400598fd:	add    BYTE PTR [rax],al
   1400598ff:	add    al,cl
   140059901:	(bad)  
   140059902:	add    al,0x40
   140059904:	add    DWORD PTR [rax],eax
   140059906:	add    BYTE PTR [rax],al
   140059908:	fsub   DWORD PTR [rdi]
   14005990a:	add    al,0x40
   14005990c:	add    DWORD PTR [rax],eax
   14005990e:	add    BYTE PTR [rax],al
   140059910:	call   0x141459d3c
   140059915:	add    BYTE PTR [rax],al
   140059917:	add    BYTE PTR [rax],al
   140059919:	sub    BYTE PTR [rax+rax*2],al
   14005991c:	add    DWORD PTR [rax],eax
   14005991e:	add    BYTE PTR [rax],al
   140059920:	sbb    BYTE PTR [rax],ch
   140059922:	add    al,0x40
   140059924:	add    DWORD PTR [rax],eax
   140059926:	add    BYTE PTR [rax],al
   140059928:	sub    BYTE PTR [rax],ch
   14005992a:	add    al,0x40
   14005992c:	add    DWORD PTR [rax],eax
   14005992e:	add    BYTE PTR [rax],al
   140059930:	sub    BYTE PTR [rax+rax*2],al
   140059934:	add    DWORD PTR [rax],eax
   140059936:	add    BYTE PTR [rax],al
   140059938:	rex.W sub BYTE PTR [rax+rax*2],al
   14005993c:	add    DWORD PTR [rax],eax
   14005993e:	add    BYTE PTR [rax],al
   140059940:	push   rax
   140059941:	sub    BYTE PTR [rax+rax*2],al
   140059944:	add    DWORD PTR [rax],eax
   140059946:	add    BYTE PTR [rax],al
   140059948:	pop    rax
   140059949:	sub    BYTE PTR [rax+rax*2],al
   14005994c:	add    DWORD PTR [rax],eax
   14005994e:	add    BYTE PTR [rax],al
   140059950:	(bad)  
   140059951:	sub    BYTE PTR [rax+rax*2],al
   140059954:	add    DWORD PTR [rax],eax
   140059956:	add    BYTE PTR [rax],al
   140059958:	push   0x1400428
   14005995d:	add    BYTE PTR [rax],al
   14005995f:	add    BYTE PTR [rax+0x28],dh
   140059962:	add    al,0x40
   140059964:	add    DWORD PTR [rax],eax
   140059966:	add    BYTE PTR [rax],al
   140059968:	js     0x140059992
   14005996a:	add    al,0x40
   14005996c:	add    DWORD PTR [rax],eax
   14005996e:	add    BYTE PTR [rax],al
   140059970:	sub    BYTE PTR [rax],0x4
   140059973:	rex add DWORD PTR [rax],eax
   140059976:	add    BYTE PTR [rax],al
   140059978:	mov    BYTE PTR [rax],ch
   14005997a:	add    al,0x40
   14005997c:	add    DWORD PTR [rax],eax
   14005997e:	add    BYTE PTR [rax],al
   140059980:	nop
   140059981:	sub    BYTE PTR [rax+rax*2],al
   140059984:	add    DWORD PTR [rax],eax
   140059986:	add    BYTE PTR [rax],al
   140059988:	cwde   
   140059989:	sub    BYTE PTR [rax+rax*2],al
   14005998c:	add    DWORD PTR [rax],eax
   14005998e:	add    BYTE PTR [rax],al
   140059990:	movabs al,ds:0xb000000001400428
   140059999:	sub    BYTE PTR [rax+rax*2],al
   14005999c:	add    DWORD PTR [rax],eax
   14005999e:	add    BYTE PTR [rax],al
   1400599a0:	enter  0x428,0x40
   1400599a4:	add    DWORD PTR [rax],eax
   1400599a6:	add    BYTE PTR [rax],al
   1400599a8:	fsubr  DWORD PTR [rax]
   1400599aa:	add    al,0x40
   1400599ac:	add    DWORD PTR [rax],eax
   1400599ae:	add    BYTE PTR [rax],al
   1400599b0:	(bad)  
   1400599b1:	sub    BYTE PTR [rax+rax*2],al
   1400599b4:	add    DWORD PTR [rax],eax
   1400599b6:	add    BYTE PTR [rax],al
   1400599b8:	call   0x141459de5
   1400599bd:	add    BYTE PTR [rax],al
   1400599bf:	add    al,bh
   1400599c1:	sub    BYTE PTR [rax+rax*2],al
   1400599c4:	add    DWORD PTR [rax],eax
   1400599c6:	add    BYTE PTR [rax],al
   1400599c8:	or     BYTE PTR [rcx],ch
   1400599ca:	add    al,0x40
   1400599cc:	add    DWORD PTR [rax],eax
   1400599ce:	add    BYTE PTR [rax],al
   1400599d0:	sbb    BYTE PTR [rcx],ch
   1400599d2:	add    al,0x40
   1400599d4:	add    DWORD PTR [rax],eax
   1400599d6:	add    BYTE PTR [rax],al
   1400599d8:	xor    BYTE PTR [rcx],ch
   1400599da:	add    al,0x40
   1400599dc:	add    DWORD PTR [rax],eax
   1400599de:	add    BYTE PTR [rax],al
   1400599e0:	rex sub DWORD PTR [rax+rax*2],eax
   1400599e4:	add    DWORD PTR [rax],eax
   1400599e6:	add    BYTE PTR [rax],al
   1400599e8:	pop    rax
   1400599e9:	sub    DWORD PTR [rax+rax*2],eax
   1400599ec:	add    DWORD PTR [rax],eax
   1400599ee:	add    BYTE PTR [rax],al
   1400599f0:	ins    BYTE PTR es:[rdi],dx
   1400599f1:	sub    DWORD PTR [rax+rax*2],eax
   1400599f4:	add    DWORD PTR [rax],eax
   1400599f6:	add    BYTE PTR [rax],al
   1400599f8:	je     0x140059a23
   1400599fa:	add    al,0x40
   1400599fc:	add    DWORD PTR [rax],eax
   1400599fe:	add    BYTE PTR [rax],al
   140059a00:	sub    BYTE PTR [rcx],0x4
   140059a03:	rex add DWORD PTR [rax],eax
   140059a06:	add    BYTE PTR [rax],al
   140059a08:	cwde   
   140059a09:	sub    DWORD PTR [rax+rax*2],eax
   140059a0c:	add    DWORD PTR [rax],eax
   140059a0e:	add    BYTE PTR [rax],al
   140059a10:	shr    BYTE PTR [rcx],0x4
   140059a13:	rex add DWORD PTR [rax],eax
   140059a16:	add    BYTE PTR [rax],al
   140059a18:	fsubr  DWORD PTR [rcx]
   140059a1a:	add    al,0x40
   140059a1c:	add    DWORD PTR [rax],eax
   140059a1e:	add    BYTE PTR [rax],al
   140059a20:	xor    BYTE PTR [rdx+0x14005],bl
	...
   140059a2e:	add    BYTE PTR [rax],al
   140059a30:	add    DWORD PTR [rax],eax
	...
   140059a66:	add    BYTE PTR [rax],al
   140059a68:	pop    rax
   140059a69:	xchg   edi,eax
   140059a6a:	add    eax,0x140
	...
   140059a87:	add    BYTE PTR [rax-0x69],bl
   140059a8a:	add    eax,0x140
	...
   140059aa7:	add    BYTE PTR [rax-0x69],bl
   140059aaa:	add    eax,0x140
	...
   140059ac7:	add    BYTE PTR [rax-0x69],bl
   140059aca:	add    eax,0x140
	...
   140059ae7:	add    BYTE PTR [rax-0x69],bl
   140059aea:	add    eax,0x140
	...
   140059aff:	add    BYTE PTR [rcx],al
   140059b01:	add    BYTE PTR [rax],al
   140059b03:	add    BYTE PTR [rcx],al
	...
   140059b1d:	add    BYTE PTR [rax],al
   140059b1f:	add    BYTE PTR [rax],ah
   140059b21:	movabs ds:0x14005,al
	...
   140059b36:	add    BYTE PTR [rax],al
   140059b38:	add    BYTE PTR [rsi],dh
   140059b3a:	add    al,0x40
   140059b3c:	add    DWORD PTR [rax],eax
   140059b3e:	add    BYTE PTR [rax],al
   140059b40:	nop
   140059b41:	cmp    al,BYTE PTR [rax+rax*2]
   140059b44:	add    DWORD PTR [rax],eax
   140059b46:	add    BYTE PTR [rax],al
   140059b48:	adc    BYTE PTR [rsp+rax*1],bh
   140059b4b:	rex add DWORD PTR [rax],eax
   140059b4e:	add    BYTE PTR [rax],al
   140059b50:	(bad)  
   140059b51:	xchg   edi,eax
   140059b52:	add    eax,0x140
	...
   140059b87:	add    BYTE PTR [rcx],al
   140059b89:	add    BYTE PTR [rax],al
   140059b8b:	add    dh,bh
   140059b8d:	(bad)  
   140059b8e:	(bad)  
   140059b8f:	inc    DWORD PTR [rax+rdi*1]
   140059b92:	add    al,0x40
   140059b94:	add    DWORD PTR [rax],eax
	...
   140059b9e:	add    BYTE PTR [rax],al
   140059ba0:	rex fld DWORD PTR [rip+0x140]        # 0x140059ce7
	...
   140059baf:	add    BYTE PTR [rax-0x27],al
   140059bb2:	add    eax,0x140
   140059bb7:	add    BYTE PTR [rcx],al
   140059bb9:	add    DWORD PTR [rax],eax
	...
   140059bc3:	add    BYTE PTR [rax],al
   140059bc5:	adc    BYTE PTR [rax],al
	...
   140059be7:	add    BYTE PTR [rdx],al
   140059be9:	add    BYTE PTR [rax],al
   140059beb:	add    BYTE PTR [rcx],al
	...
   140059c15:	add    BYTE PTR [rax],al
   140059c17:	add    BYTE PTR [rdx],al
   140059c19:	add    BYTE PTR [rax],al
   140059c1b:	add    BYTE PTR [rdx],al
	...
   140059f5d:	add    BYTE PTR [rax],al
   140059f5f:	add    BYTE PTR [rax+0x2a],dh
   140059f62:	add    al,0x40
   140059f64:	add    DWORD PTR [rax],eax
   140059f66:	add    BYTE PTR [rax],al
   140059f68:	js     0x140059f94
   140059f6a:	add    al,0x40
   140059f6c:	add    DWORD PTR [rax],eax
   140059f6e:	add    BYTE PTR [rax],al
   140059f70:	(bad)  
   140059f71:	(bad)  
   140059f72:	(bad)  
   140059f73:	inc    DWORD PTR [rax]
	...
   140059f85:	add    BYTE PTR [rax],al
   140059f87:	add    BYTE PTR [rcx],al
	...
   140059f95:	add    BYTE PTR [rax],al
   140059f97:	add    BYTE PTR [rcx],al
	...
   140059fb5:	add    BYTE PTR [rax],al
   140059fb7:	add    BYTE PTR [rcx],al
	...
   140059fc5:	add    BYTE PTR [rax],al
   140059fc7:	add    BYTE PTR [rcx],al
	...
   140059fe5:	add    BYTE PTR [rax],al
   140059fe7:	add    BYTE PTR [rcx],al
	...
   140059ff5:	add    BYTE PTR [rax],al
   140059ff7:	add    BYTE PTR [rcx],al
	...
   14005a005:	add    BYTE PTR [rax],al
   14005a007:	add    BYTE PTR [rcx],al
	...
   14005a025:	add    BYTE PTR [rax],al
   14005a027:	add    BYTE PTR [rcx],al
	...
   14005a045:	add    BYTE PTR [rax],al
   14005a047:	add    BYTE PTR [rcx],al
	...
   14005a055:	add    BYTE PTR [rax],al
   14005a057:	add    BYTE PTR [rcx],al
	...
   14005a065:	add    BYTE PTR [rax],al
   14005a067:	add    BYTE PTR [rcx],al
	...
   14005a085:	add    BYTE PTR [rax],al
   14005a087:	add    BYTE PTR [rcx],al
	...
   14005a095:	add    BYTE PTR [rax],al
   14005a097:	add    BYTE PTR [rcx],al
	...
   14005a0a5:	add    BYTE PTR [rax],al
   14005a0a7:	add    BYTE PTR [rcx],al
	...
   14005a1bd:	add    BYTE PTR [rax],al
   14005a1bf:	add    ah,al
   14005a1c1:	adc    DWORD PTR [rbx],eax
   14005a1c3:	rex add DWORD PTR [rax],eax
   14005a1c6:	add    BYTE PTR [rax],al
   14005a1c8:	(bad)  
   14005a1c9:	adc    DWORD PTR [rbx],eax
   14005a1cb:	rex add DWORD PTR [rax],eax
   14005a1ce:	add    BYTE PTR [rax],al
   14005a1d0:	(bad)  
   14005a1d1:	adc    DWORD PTR [rbx],eax
   14005a1d3:	rex add DWORD PTR [rax],eax
   14005a1d6:	add    BYTE PTR [rax],al
   14005a1d8:	(bad)  
   14005a1d9:	adc    DWORD PTR [rbx],eax
   14005a1db:	rex add DWORD PTR [rax],eax
   14005a1de:	add    BYTE PTR [rax],al
   14005a1e0:	(bad)  
   14005a1e1:	adc    DWORD PTR [rbx],eax
   14005a1e3:	rex add DWORD PTR [rax],eax
   14005a1e6:	add    BYTE PTR [rax],al
   14005a1e8:	(bad)  
   14005a1e9:	adc    DWORD PTR [rbx],eax
   14005a1eb:	rex add DWORD PTR [rax],eax
   14005a1ee:	add    BYTE PTR [rax],al
   14005a1f0:	(bad)  
   14005a1f1:	adc    DWORD PTR [rbx],eax
   14005a1f3:	rex add DWORD PTR [rax],eax
   14005a1f6:	add    BYTE PTR [rax],al
   14005a1f8:	(bad)  
   14005a1f9:	adc    DWORD PTR [rbx],eax
   14005a1fb:	rex add DWORD PTR [rax],eax
   14005a1fe:	add    BYTE PTR [rax],al
   14005a200:	(bad)  
   14005a201:	adc    DWORD PTR [rbx],eax
   14005a203:	rex add DWORD PTR [rax],eax
   14005a206:	add    BYTE PTR [rax],al
   14005a208:	(bad)  
   14005a209:	adc    DWORD PTR [rbx],eax
   14005a20b:	rex add DWORD PTR [rax],eax
   14005a20e:	add    BYTE PTR [rax],al
   14005a210:	add    BYTE PTR cs:[rax],al
   14005a213:	add    BYTE PTR [rsi],ch
   14005a215:	add    BYTE PTR [rax],al
   14005a217:	add    BYTE PTR [rax],ah
   14005a219:	movabs ds:0xa210000000014005,al
   14005a222:	add    eax,0x140
   14005a227:	add    BYTE PTR [rcx+rcx*8],ch
   14005a22a:	add    eax,0x140
   14005a22f:	add    BYTE PTR [rcx+rcx*8],ch
   14005a232:	add    eax,0x140
   14005a237:	add    BYTE PTR [rcx+rcx*8],ch
   14005a23a:	add    eax,0x140
   14005a23f:	add    BYTE PTR [rcx+rcx*8],ch
   14005a242:	add    eax,0x140
   14005a247:	add    BYTE PTR [rcx+rcx*8],ch
   14005a24a:	add    eax,0x140
   14005a24f:	add    BYTE PTR [rcx+rcx*8],ch
   14005a252:	add    eax,0x140
   14005a257:	add    BYTE PTR [rcx+rcx*8],ch
   14005a25a:	add    eax,0x140
   14005a25f:	add    BYTE PTR [rcx+rcx*8],ch
   14005a262:	add    eax,0x140
   14005a267:	add    BYTE PTR [rcx+rcx*8],ch
   14005a26a:	add    eax,0x140
   14005a26f:	add    BYTE PTR [rdi+0x7f],bh
   14005a272:	jg     0x14005a2f3
   14005a274:	jg     0x14005a2f5
   14005a276:	jg     0x14005a2f7
   14005a278:	adc    al,0xa2
   14005a27a:	add    eax,0x140
   14005a27f:	add    BYTE PTR [rax],dh
   14005a281:	leave  
   14005a282:	add    eax,0x140
   14005a287:	add    BYTE PTR [rax],dh
   14005a289:	leave  
   14005a28a:	add    eax,0x140
   14005a28f:	add    BYTE PTR [rax],dh
   14005a291:	leave  
   14005a292:	add    eax,0x140
   14005a297:	add    BYTE PTR [rax],dh
   14005a299:	leave  
   14005a29a:	add    eax,0x140
   14005a29f:	add    BYTE PTR [rax],dh
   14005a2a1:	leave  
   14005a2a2:	add    eax,0x140
   14005a2a7:	add    BYTE PTR [rax],dh
   14005a2a9:	leave  
   14005a2aa:	add    eax,0x140
   14005a2af:	add    BYTE PTR [rax],dh
   14005a2b1:	leave  
   14005a2b2:	add    eax,0x140
   14005a2b7:	add    BYTE PTR [rax],al
   14005a2b9:	ss add al,0x40
   14005a2bc:	add    DWORD PTR [rax],eax
   14005a2be:	add    BYTE PTR [rax],al
   14005a2c0:	add    bh,BYTE PTR [rax]
   14005a2c2:	add    al,0x40
   14005a2c4:	add    DWORD PTR [rax],eax
	...
   14005a2ce:	add    BYTE PTR [rax],al
   14005a2d0:	(bad)  
   14005a2d1:	(bad)  
   14005a2d2:	(bad)  
   14005a2d3:	(bad)  
   14005a2d4:	(bad)  
   14005a2d5:	(bad)  
   14005a2d6:	(bad)  
   14005a2d7:	call   rax
   14005a2d9:	sbb    BYTE PTR [rax+rax*2],al
   14005a2dc:	add    DWORD PTR [rax],eax
	...
   14005a2e6:	add    BYTE PTR [rax],al
   14005a2e8:	cs (bad) 
   14005a2ea:	push   r14
   14005a2ec:	ins    BYTE PTR es:[rdi],dx
   14005a2ed:	outs   dx,BYTE PTR gs:[rsi]
   14005a2ef:	addr32 je 0x14005a35a
   14005a2f2:	pop    rdi
   14005a2f3:	gs jb  0x14005a368
   14005a2f6:	outs   dx,DWORD PTR ds:[rsi]
   14005a2f7:	jb     0x14005a339
   14005a2f9:	jae    0x14005a36f
   14005a2fb:	fs rex
   14005a2fd:	add    BYTE PTR [rax],al
   14005a300:	rcr    BYTE PTR [rax],1
   14005a302:	add    al,0x40
   14005a304:	add    DWORD PTR [rax],eax
	...
   14005a30e:	add    BYTE PTR [rax],al
   14005a310:	cs (bad) 
   14005a312:	push   r14
   14005a314:	outs   dx,DWORD PTR ds:[rsi]
   14005a315:	jne    0x14005a38b
   14005a317:	pop    rdi
   14005a318:	outs   dx,DWORD PTR ds:[rsi]
   14005a319:	pop    di
   14005a31b:	jb     0x14005a37e
   14005a31d:	outs   dx,BYTE PTR ds:[rsi]
   14005a31e:	addr32 gs rex jae 0x14005a397
   14005a323:	fs rex
   14005a325:	add    BYTE PTR [rax],al
   14005a328:	add    BYTE PTR [rdx+0x4],dl
   14005a32b:	rex add DWORD PTR [rax],eax
   14005a32e:	add    BYTE PTR [rax],al
   14005a330:	mov    al,0xc9
   14005a332:	add    eax,0x140
   14005a337:	add    BYTE PTR [rax],ch
   14005a339:	movabs ds:0x14005,eax
   14005a342:	add    BYTE PTR [rax],al
   14005a344:	add    BYTE PTR [rax],al
   14005a346:	add    BYTE PTR [rax],al
   14005a348:	add    al,BYTE PTR [rax]
	...
   14005a35e:	add    BYTE PTR [rax],al
   14005a360:	rcr    BYTE PTR [rax],1
   14005a362:	add    al,0x40
   14005a364:	add    DWORD PTR [rax],eax
	...
   14005a36e:	add    BYTE PTR [rax],al
   14005a370:	cs (bad) 
   14005a372:	push   r14
   14005a374:	(bad)
   14005a379:	js     0x14005a3de
   14005a37b:	gs jo  0x14005a3f2
   14005a37e:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14005a385:	rex
   14005a386:	add    BYTE PTR [rax],al
	...
   14005a44d:	add    BYTE PTR [rax],al
   14005a44f:	add    BYTE PTR [rcx],al
   14005a451:	add    DWORD PTR [rcx],eax
   14005a453:	add    DWORD PTR [rcx],eax
   14005a455:	add    DWORD PTR [rcx],eax
   14005a457:	add    DWORD PTR [rcx],eax
   14005a459:	add    DWORD PTR [rcx],eax
   14005a45b:	add    DWORD PTR [rcx],eax
   14005a45d:	add    DWORD PTR [rcx],eax
   14005a45f:	add    DWORD PTR [rcx],eax
   14005a461:	add    DWORD PTR [rcx],eax
   14005a463:	add    DWORD PTR [rcx],eax
   14005a465:	add    DWORD PTR [rcx],eax
   14005a467:	add    DWORD PTR [rcx],eax
   14005a469:	add    DWORD PTR [rcx],eax
   14005a46b:	add    DWORD PTR [rcx],eax
   14005a46d:	add    DWORD PTR [rcx],eax
   14005a46f:	add    DWORD PTR [rdx],eax
   14005a471:	add    al,BYTE PTR [rdx]
   14005a473:	add    al,BYTE PTR [rdx]
   14005a475:	add    al,BYTE PTR [rdx]
   14005a477:	add    al,BYTE PTR [rdx]
   14005a479:	add    al,BYTE PTR [rdx]
   14005a47b:	add    al,BYTE PTR [rdx]
   14005a47d:	add    al,BYTE PTR [rdx]
   14005a47f:	add    al,BYTE PTR [rbx]
   14005a481:	add    eax,DWORD PTR [rbx]
   14005a483:	add    eax,DWORD PTR [rbx]
   14005a485:	add    eax,DWORD PTR [rbx]
   14005a487:	add    eax,DWORD PTR [rax]
   14005a489:	add    BYTE PTR [rax],al
   14005a48b:	add    BYTE PTR [rax],al
   14005a48d:	add    BYTE PTR [rax],al
   14005a48f:	add    al,dl
   14005a491:	sbb    BYTE PTR [rax+rax*2],al
   14005a494:	add    DWORD PTR [rax],eax
	...
   14005a49e:	add    BYTE PTR [rax],al
   14005a4a0:	cs (bad) 
   14005a4a2:	push   r14
   14005a4a4:	js     0x14005a4f3
   14005a4a6:	gs jae 0x14005a51c
   14005a4a9:	(bad)  
   14005a4aa:	addr32 gs rex.RB js 0x14005a512
   14005a4af:	gs jo  0x14005a526
   14005a4b2:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0004040
   14005a4b9:	sbb    BYTE PTR [rax+rax*2],al
   14005a4bc:	add    DWORD PTR [rax],eax
	...
   14005a4c6:	add    BYTE PTR [rax],al
   14005a4c8:	cs (bad) 
   14005a4ca:	push   r14
   14005a4cc:	pop    rdi
   14005a4cd:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14005a4cf:	jae    0x14005a545
   14005a4d1:	jb     0x14005a538
   14005a4d3:	(bad)  
   14005a4d4:	ins    DWORD PTR es:[rdi],dx
   14005a4d5:	pop    rdi
   14005a4d6:	gs jb  0x14005a54b
   14005a4d9:	outs   dx,DWORD PTR ds:[rsi]
   14005a4da:	jb     0x14005a53b
   14005a4dc:	movsxd esp,DWORD PTR [rcx+0x74]
   14005a4df:	outs   dx,DWORD PTR gs:[esi]
   14005a4e2:	jb     0x14005a55d
   14005a4e4:	rex jae 0x14005a55b
   14005a4e7:	fs rex
   14005a4e9:	add    BYTE PTR [rax],al
   14005a4ec:	add    BYTE PTR [rax],al
   14005a4ee:	add    BYTE PTR [rax],al
   14005a4f0:	rcr    BYTE PTR [rax],1
   14005a4f2:	add    al,0x40
   14005a4f4:	add    DWORD PTR [rax],eax
	...
   14005a4fe:	add    BYTE PTR [rax],al
   14005a500:	cs (bad) 
   14005a502:	push   r14
   14005a504:	pop    rdi
   14005a505:	push   rbx
   14005a506:	jns    0x14005a57b
   14005a508:	je     0x14005a56f
   14005a50a:	ins    DWORD PTR es:[rdi],dx
   14005a50b:	pop    rdi
   14005a50c:	gs jb  0x14005a581
   14005a50f:	outs   dx,DWORD PTR ds:[rsi]
   14005a510:	jb     0x14005a571
   14005a512:	movsxd esp,DWORD PTR [rcx+0x74]
   14005a515:	outs   dx,DWORD PTR gs:[esi]
   14005a518:	jb     0x14005a593
   14005a51a:	rex jae 0x14005a591
   14005a51d:	fs rex
   14005a51f:	add    BYTE PTR [rax],al
   14005a522:	add    BYTE PTR [rax],al
   14005a524:	add    BYTE PTR [rax],al
   14005a526:	add    BYTE PTR [rax],al
   14005a528:	rcr    BYTE PTR [rax],1
   14005a52a:	add    al,0x40
   14005a52c:	add    DWORD PTR [rax],eax
	...
   14005a536:	add    BYTE PTR [rax],al
   14005a538:	cs (bad) 
   14005a53a:	push   r14
   14005a53c:	rex.XB push r8
   14005a53e:	gs jb  0x14005a5a7
   14005a541:	rex.R jb 0x14005a5ad
   14005a544:	jbe    0x14005a5ab
   14005a546:	jb     0x14005a588
   14005a548:	add    BYTE PTR [rax],al
   14005a54b:	add    BYTE PTR [rax],al
   14005a54d:	add    BYTE PTR [rax],al
   14005a54f:	add    al,dl
   14005a551:	sbb    BYTE PTR [rax+rax*2],al
   14005a554:	add    DWORD PTR [rax],eax
	...
   14005a55e:	add    BYTE PTR [rax],al
   14005a560:	cs (bad) 
   14005a562:	push   r14
   14005a564:	rex.WB push r11
   14005a566:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14005a56a:	(bad)  
   14005a56b:	(bad)  
   14005a56c:	ins    BYTE PTR es:[rdi],dx
   14005a56d:	gs rex
   14005a56f:	add    BYTE PTR [rax],al
   14005a572:	add    BYTE PTR [rax],al
   14005a574:	add    BYTE PTR [rax],al
   14005a576:	add    BYTE PTR [rax],al
   14005a578:	rcr    BYTE PTR [rax],1
   14005a57a:	add    al,0x40
   14005a57c:	add    DWORD PTR [rax],eax
	...
   14005a586:	add    BYTE PTR [rax],al
   14005a588:	cs (bad) 
   14005a58a:	push   r14
   14005a58c:	gs jb  0x14005a601
   14005a58f:	outs   dx,DWORD PTR ds:[rsi]
   14005a590:	jb     0x14005a5f1
   14005a592:	movsxd esp,DWORD PTR [rcx+0x74]
   14005a595:	outs   dx,DWORD PTR gs:[esi]
   14005a598:	jb     0x14005a613
   14005a59a:	rex jae 0x14005a611
   14005a59d:	fs rex
   14005a59f:	add    BYTE PTR [rax],al
   14005a5a2:	add    BYTE PTR [rax],al
   14005a5a4:	add    BYTE PTR [rax],al
   14005a5a6:	add    BYTE PTR [rax],al
   14005a5a8:	rcr    BYTE PTR [rax],1
   14005a5aa:	add    al,0x40
   14005a5ac:	add    DWORD PTR [rax],eax
	...
   14005a5b6:	add    BYTE PTR [rax],al
   14005a5b8:	cs (bad) 
   14005a5ba:	push   r14
   14005a5bc:	js     0x14005a603
   14005a5be:	js     0x14005a623
   14005a5c0:	gs jo  0x14005a637
   14005a5c3:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14005a5ca:	add    BYTE PTR [rax],al
   14005a5cc:	add    BYTE PTR [rax],al
   14005a5ce:	add    BYTE PTR [rax],al
   14005a5d0:	rcr    BYTE PTR [rax],1
   14005a5d2:	add    al,0x40
   14005a5d4:	add    DWORD PTR [rax],eax
	...
   14005a5de:	add    BYTE PTR [rax],al
   14005a5e0:	cs (bad) 
   14005a5e2:	push   r14
   14005a5e4:	pop    rdi
   14005a5e5:	rex.RXB
   14005a5e6:	outs   dx,BYTE PTR gs:[rsi]
   14005a5e8:	gs jb  0x14005a654
   14005a5eb:	movsxd ebx,DWORD PTR [rdi+0x65]
   14005a5ee:	jb     0x14005a662
   14005a5f0:	outs   dx,DWORD PTR ds:[rsi]
   14005a5f1:	jb     0x14005a652
   14005a5f3:	movsxd esp,DWORD PTR [rcx+0x74]
   14005a5f6:	outs   dx,DWORD PTR gs:[esi]
   14005a5f9:	jb     0x14005a674
   14005a5fb:	rex jae 0x14005a672
   14005a5fe:	fs rex
   14005a600:	add    BYTE PTR [rax],al
   14005a603:	add    BYTE PTR [rax],al
   14005a605:	add    BYTE PTR [rax],al
   14005a607:	add    al,dl
   14005a609:	sbb    BYTE PTR [rax+rax*2],al
   14005a60c:	add    DWORD PTR [rax],eax
	...
   14005a616:	add    BYTE PTR [rax],al
   14005a618:	cs (bad) 
   14005a61a:	push   r14
   14005a61c:	rex.XB
   14005a61d:	rex.R jb 0x14005a689
   14005a620:	jbe    0x14005a687
   14005a622:	jb     0x14005a667
   14005a624:	outs   dx,DWORD PTR ds:[rsi]
   14005a625:	outs   dx,BYTE PTR ds:[rsi]
   14005a626:	je     0x14005a69a
   14005a628:	outs   dx,DWORD PTR ds:[rsi]
   14005a629:	ins    BYTE PTR es:[rdi],dx
   14005a62a:	rex
   14005a62b:	add    BYTE PTR [rax],al
   14005a62e:	add    BYTE PTR [rax],al
   14005a630:	rcr    BYTE PTR [rax],1
   14005a632:	add    al,0x40
   14005a634:	add    DWORD PTR [rax],eax
	...
   14005a63e:	add    BYTE PTR [rax],al
   14005a640:	cs (bad) 
   14005a642:	push   r14
   14005a644:	js     0x14005a69b
   14005a646:	rex.B
   14005a647:	rex.XB
   14005a648:	rex.RB js 0x14005a6ae
   14005a64b:	gs jo  0x14005a6c2
   14005a64e:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
	...
   14005a65d:	add    BYTE PTR [rax],al
   14005a65f:	add    BYTE PTR [rax+0x1400459],ch
   14005a665:	add    BYTE PTR [rax],al
   14005a667:	add    BYTE PTR [rax+0x5b],ah
   14005a66a:	add    al,0x40
   14005a66c:	add    DWORD PTR [rax],eax
   14005a66e:	add    BYTE PTR [rax],al
   14005a670:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005a671:	pop    rbx
   14005a672:	add    al,0x40
   14005a674:	add    DWORD PTR [rax],eax
   14005a676:	add    BYTE PTR [rax],al
   14005a678:	cmp    BYTE PTR [rdx+0x4],bl
   14005a67b:	rex add DWORD PTR [rax],eax
   14005a67e:	add    BYTE PTR [rax],al
   14005a680:	fcomp  DWORD PTR [rdx+0x4]
   14005a683:	rex add DWORD PTR [rax],eax
   14005a686:	add    BYTE PTR [rax],al
   14005a688:	and    BYTE PTR [rsp+rax*1+0x40],bl
   14005a68c:	add    DWORD PTR [rax],eax
   14005a68e:	add    BYTE PTR [rax],al
   14005a690:	js     0x14005a6ed
   14005a692:	add    al,0x40
   14005a694:	add    DWORD PTR [rax],eax
   14005a696:	add    BYTE PTR [rax],al
   14005a698:	enter  0x45a,0x40
   14005a69c:	add    DWORD PTR [rax],eax
   14005a69e:	add    BYTE PTR [rax],al
   14005a6a0:	rex.R push rsi
   14005a6a2:	add    al,0x40
   14005a6a4:	add    DWORD PTR [rax],eax
   14005a6a6:	add    BYTE PTR [rax],al
   14005a6a8:	or     BYTE PTR [rbx+0x4],bl
   14005a6ab:	rex add DWORD PTR [rax],eax
   14005a6ae:	add    BYTE PTR [rax],al
   14005a6b0:	cmp    BYTE PTR [rbx+0x4],bl
   14005a6b3:	rex add DWORD PTR [rax],eax
   14005a6b6:	add    BYTE PTR [rax],al
   14005a6b8:	mov    BYTE PTR [rbx+0x4],bl
   14005a6bb:	rex add DWORD PTR [rax],eax
   14005a6be:	add    BYTE PTR [rax],al
   14005a6c0:	and    al,0x56
   14005a6c2:	add    al,0x40
   14005a6c4:	add    DWORD PTR [rax],eax
   14005a6c6:	add    BYTE PTR [rax],al
   14005a6c8:	xor    BYTE PTR [rsp+rax*1+0x40],bl
   14005a6cc:	add    DWORD PTR [rax],eax
   14005a6ce:	add    BYTE PTR [rax],al
   14005a6d0:	rcr    BYTE PTR [rcx+0x4],0x40
   14005a6d4:	add    DWORD PTR [rax],eax
   14005a6d6:	add    BYTE PTR [rax],al
   14005a6d8:	adc    BYTE PTR [rdx+0x4],bl
   14005a6db:	rex add DWORD PTR [rax],eax
   14005a6de:	add    BYTE PTR [rax],al
   14005a6e0:	test   al,0x5a
   14005a6e2:	add    al,0x40
   14005a6e4:	add    DWORD PTR [rax],eax
   14005a6e6:	add    BYTE PTR [rax],al
   14005a6e8:	nop
   14005a6e9:	pop    rsp
   14005a6ea:	add    al,0x40
   14005a6ec:	add    DWORD PTR [rax],eax
   14005a6ee:	add    BYTE PTR [rax],al
   14005a6f0:	push   0x140045a
   14005a6f5:	add    BYTE PTR [rax],al
   14005a6f7:	add    BYTE PTR [rax],cl
   14005a6f9:	pop    rsp
   14005a6fa:	add    al,0x40
   14005a6fc:	add    DWORD PTR [rax],eax
   14005a6fe:	add    BYTE PTR [rax],al
   14005a700:	clc    
   14005a701:	pop    rdx
   14005a702:	add    al,0x40
   14005a704:	add    DWORD PTR [rax],eax
   14005a706:	add    BYTE PTR [rax],al
   14005a708:	push   rax
   14005a709:	pop    rsp
   14005a70a:	add    al,0x40
   14005a70c:	add    DWORD PTR [rax],eax
   14005a70e:	add    BYTE PTR [rax],al
   14005a710:	rex pop rsp
   14005a712:	add    al,0x40
   14005a714:	add    DWORD PTR [rax],eax
   14005a716:	add    BYTE PTR [rax],al
   14005a718:	movabs al,ds:0x780000000140045b
   14005a721:	pop    rcx
   14005a722:	add    al,0x40
   14005a724:	add    DWORD PTR [rax],eax
   14005a726:	add    BYTE PTR [rax],al
   14005a728:	lock pop rcx
   14005a72a:	add    al,0x40
   14005a72c:	add    DWORD PTR [rax],eax
   14005a72e:	add    BYTE PTR [rax],al
   14005a730:	push   0x140045c
   14005a735:	add    BYTE PTR [rax],al
   14005a737:	add    BYTE PTR [rax],ch
   14005a739:	pop    rdx
   14005a73a:	add    al,0x40
   14005a73c:	add    DWORD PTR [rax],eax
   14005a73e:	add    BYTE PTR [rax],al
   14005a740:	mov    al,0x5b
   14005a742:	add    al,0x40
   14005a744:	add    DWORD PTR [rax],eax
   14005a746:	add    BYTE PTR [rax],al
   14005a748:	(bad)  
   14005a749:	pop    rcx
   14005a74a:	add    al,0x40
   14005a74c:	add    DWORD PTR [rax],eax
   14005a74e:	add    BYTE PTR [rax],al
   14005a750:	lock pop rdx
   14005a752:	add    al,0x40
   14005a754:	add    DWORD PTR [rax],eax
   14005a756:	add    BYTE PTR [rax],al
   14005a758:	lock pop rbx
   14005a75a:	add    al,0x40
   14005a75c:	add    DWORD PTR [rax],eax
   14005a75e:	add    BYTE PTR [rax],al
   14005a760:	and    BYTE PTR [rbx+0x4],bl
   14005a763:	rex add DWORD PTR [rax],eax
   14005a766:	add    BYTE PTR [rax],al
   14005a768:	push   rax
   14005a769:	pop    rbx
   14005a76a:	add    al,0x40
   14005a76c:	add    DWORD PTR [rax],eax
   14005a76e:	add    BYTE PTR [rax],al
   14005a770:	rex.W pop rcx
   14005a772:	add    al,0x40
   14005a774:	add    DWORD PTR [rax],eax
   14005a776:	add    BYTE PTR [rax],al
   14005a778:	nop
   14005a779:	pop    rcx
   14005a77a:	add    al,0x40
   14005a77c:	add    DWORD PTR [rax],eax
   14005a77e:	add    BYTE PTR [rax],al
   14005a780:	rcr    BYTE PTR [rbx+0x4],0x40
   14005a784:	add    DWORD PTR [rax],eax
   14005a786:	add    BYTE PTR [rax],al
   14005a788:	fcomp  DWORD PTR [rcx+0x4]
   14005a78b:	rex add DWORD PTR [rax],eax
   14005a78e:	add    BYTE PTR [rax],al
   14005a790:	sbb    BYTE PTR [rbx+0x4],bl
   14005a793:	rex add DWORD PTR [rax],eax
   14005a796:	add    BYTE PTR [rax],al
   14005a798:	rex.W pop rdx
   14005a79a:	add    al,0x40
   14005a79c:	add    DWORD PTR [rax],eax
   14005a79e:	add    BYTE PTR [rax],al
   14005a7a0:	rcr    BYTE PTR [rbx+0x4],1
   14005a7a3:	rex add DWORD PTR [rax],eax
   14005a7a6:	add    BYTE PTR [rax],al
   14005a7a8:	mov    BYTE PTR [rdx+0x4],bl
   14005a7ab:	rex add DWORD PTR [rax],eax
   14005a7ae:	add    BYTE PTR [rax],al
   14005a7b0:	js     0x14005a80e
   14005a7b2:	add    al,0x40
   14005a7b4:	add    DWORD PTR [rax],eax
   14005a7b6:	add    BYTE PTR [rax],al
   14005a7b8:	js     0x14005a814
   14005a7ba:	add    al,0x40
   14005a7bc:	add    DWORD PTR [rax],eax
   14005a7be:	add    BYTE PTR [rax],al
   14005a7c0:	pop    rax
   14005a7c1:	pop    rdx
   14005a7c2:	add    al,0x40
   14005a7c4:	add    DWORD PTR [rax],eax
   14005a7c6:	add    BYTE PTR [rax],al
   14005a7c8:	call   0x14145ac27
   14005a7cd:	add    BYTE PTR [rax],al
   14005a7cf:	add    BYTE PTR [rax+0x140045a],bl
   14005a7d5:	add    BYTE PTR [rax],al
   14005a7d7:	add    BYTE PTR [rax+0x5b],ah
   14005a7da:	add    al,0x40
   14005a7dc:	add    DWORD PTR [rax],eax
   14005a7de:	add    BYTE PTR [rax],al
   14005a7e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005a7e1:	pop    rbx
   14005a7e2:	add    al,0x40
   14005a7e4:	add    DWORD PTR [rax],eax
   14005a7e6:	add    BYTE PTR [rax],al
   14005a7e8:	and    BYTE PTR [rsp+rax*1+0x40],bl
   14005a7ec:	add    DWORD PTR [rax],eax
   14005a7ee:	add    BYTE PTR [rax],al
   14005a7f0:	js     0x14005a84d
   14005a7f2:	add    al,0x40
   14005a7f4:	add    DWORD PTR [rax],eax
   14005a7f6:	add    BYTE PTR [rax],al
   14005a7f8:	or     BYTE PTR [rbx+0x4],bl
   14005a7fb:	rex add DWORD PTR [rax],eax
   14005a7fe:	add    BYTE PTR [rax],al
   14005a800:	mov    BYTE PTR [rbx+0x4],bl
   14005a803:	rex add DWORD PTR [rax],eax
   14005a806:	add    BYTE PTR [rax],al
   14005a808:	and    ecx,DWORD PTR [rip+0xffffffffccbce13c]        # 0x10cc2894a
   14005a80e:	adc    cl,BYTE PTR [rsi-0x6d]
   14005a811:	sbb    ebx,ecx
   14005a813:	int3   
   14005a814:	cs out dx,al
   14005a816:	(bad)  
   14005a817:	in     al,0x8
   14005a819:	pop    rsp
   14005a81a:	add    al,0x40
   14005a81c:	add    DWORD PTR [rax],eax
   14005a81e:	add    BYTE PTR [rax],al
   14005a820:	lock pop rbx
   14005a822:	add    al,0x40
   14005a824:	add    DWORD PTR [rax],eax
   14005a826:	add    BYTE PTR [rax],al
   14005a828:	push   rax
   14005a829:	pop    rbx
   14005a82a:	add    al,0x40
   14005a82c:	add    DWORD PTR [rax],eax
   14005a82e:	add    BYTE PTR [rax],al
   14005a830:	rcr    BYTE PTR [rbx+0x4],0x40
   14005a834:	add    DWORD PTR [rax],eax
   14005a836:	add    BYTE PTR [rax],al
   14005a838:	and    BYTE PTR [rcx+0x4],0x40
   14005a83c:	add    DWORD PTR [rax],eax
   14005a83e:	add    BYTE PTR [rax],al
   14005a840:	add    DWORD PTR [rax],eax
   14005a842:	add    BYTE PTR [rax],al
   14005a844:	add    BYTE PTR [rax],al
   14005a846:	add    BYTE PTR [rax],al
   14005a848:	rcl    BYTE PTR [rsi+0x4],0x40
   14005a84c:	add    DWORD PTR [rax],eax
   14005a84e:	add    BYTE PTR [rax],al
   14005a850:	add    al,BYTE PTR [rax]
   14005a852:	add    BYTE PTR [rax],al
   14005a854:	add    BYTE PTR [rax],al
   14005a856:	add    BYTE PTR [rax],al
   14005a858:	rcl    BYTE PTR [rsi+0x4],1
   14005a85b:	rex add DWORD PTR [rax],eax
   14005a85e:	add    BYTE PTR [rax],al
   14005a860:	add    eax,DWORD PTR [rax]
   14005a862:	add    BYTE PTR [rax],al
   14005a864:	add    BYTE PTR [rax],al
   14005a866:	add    BYTE PTR [rax],al
   14005a868:	movabs al,ds:0x400000001400456
   14005a871:	add    BYTE PTR [rax],al
   14005a873:	add    BYTE PTR [rax],al
   14005a875:	add    BYTE PTR [rax],al
   14005a877:	add    BYTE PTR [rax+0x1400456],dh
   14005a87d:	add    BYTE PTR [rax],al
   14005a87f:	add    BYTE PTR [rip+0x0],al        # 0x14005a885
   14005a885:	add    BYTE PTR [rax],al
   14005a887:	add    BYTE PTR [rax+0x1400460],cl
   14005a88d:	add    BYTE PTR [rax],al
   14005a88f:	add    BYTE PTR [rsi],al
   14005a891:	add    BYTE PTR [rax],al
   14005a893:	add    BYTE PTR [rax],al
   14005a895:	add    BYTE PTR [rax],al
   14005a897:	add    BYTE PTR [rax+0x1400460],bl
   14005a89d:	add    BYTE PTR [rax],al
   14005a89f:	add    BYTE PTR [rdi],al
   14005a8a1:	add    BYTE PTR [rax],al
   14005a8a3:	add    BYTE PTR [rax],al
   14005a8a5:	add    BYTE PTR [rax],al
   14005a8a7:	add    BYTE PTR [rax+0x1400460],dh
   14005a8ad:	add    BYTE PTR [rax],al
   14005a8af:	add    BYTE PTR [rax],cl
   14005a8b1:	add    BYTE PTR [rax],al
   14005a8b3:	add    BYTE PTR [rax],al
   14005a8b5:	add    BYTE PTR [rax],al
   14005a8b7:	add    BYTE PTR [rax+0x1400456],al
	...
   14005a8cd:	add    BYTE PTR [rax],al
   14005a8cf:	add    BYTE PTR [rax-0x56],dh
   14005a8d2:	add    eax,0x140
   14005a8d7:	add    BYTE PTR [rcx],al
   14005a8d9:	add    BYTE PTR [rax],al
   14005a8db:	add    BYTE PTR [rcx],al
   14005a8dd:	add    BYTE PTR [rax],al
   14005a8df:	add    BYTE PTR [rax],dl
   14005a8e1:	add    BYTE PTR [rax],al
   14005a8e3:	add    BYTE PTR [rdx+0x0],dh
   14005a8e6:	outs   dx,DWORD PTR ds:[rsi]
   14005a8e7:	add    BYTE PTR [rdi+0x0],ch
   14005a8ea:	je     0x14005a8ec
   14005a8ec:	pop    rsp
   14005a8ed:	add    BYTE PTR [rdi+0x0],dh
   14005a8f0:	ins    DWORD PTR es:[rdi],dx
   14005a8f1:	add    BYTE PTR [rcx+0x0],ch
	...
   14005a908:	adc    BYTE PTR [rax],al
   14005a90a:	add    BYTE PTR [rax],al
   14005a90c:	jb     0x14005a90e
   14005a90e:	outs   dx,DWORD PTR ds:[rsi]
   14005a90f:	add    BYTE PTR [rdi+0x0],ch
   14005a912:	je     0x14005a914
   14005a914:	pop    rsp
   14005a915:	add    BYTE PTR [rdi+0x0],dh
   14005a918:	ins    DWORD PTR es:[rdi],dx
   14005a919:	add    BYTE PTR [rcx+0x0],ch
	...
   14005a930:	(bad)  
   14005a931:	push   0x4
   14005a933:	rex add DWORD PTR [rax],eax
   14005a936:	add    BYTE PTR [rax],al
   14005a938:	nop
   14005a939:	push   0x4
   14005a93b:	rex add DWORD PTR [rax],eax
   14005a93e:	add    BYTE PTR [rax],al
   14005a940:	js     0x14005a9ac
   14005a942:	add    al,0x40
   14005a944:	add    DWORD PTR [rax],eax
   14005a946:	add    BYTE PTR [rax],al
   14005a948:	enter  0x46a,0x40
   14005a94c:	add    DWORD PTR [rax],eax
   14005a94e:	add    BYTE PTR [rax],al
   14005a950:	mov    al,0x6a
   14005a952:	add    al,0x40
   14005a954:	add    DWORD PTR [rax],eax
   14005a956:	add    BYTE PTR [rax],al
   14005a958:	clc    
   14005a959:	push   0x4
   14005a95b:	rex add DWORD PTR [rax],eax
   14005a95e:	add    BYTE PTR [rax],al
   14005a960:	loopne 0x14005a9cc
   14005a962:	add    al,0x40
   14005a964:	add    DWORD PTR [rax],eax
   14005a966:	add    BYTE PTR [rax],al
   14005a968:	and    BYTE PTR [rbx+0x4],ch
   14005a96b:	rex add DWORD PTR [rax],eax
   14005a96e:	add    BYTE PTR [rax],al
   14005a970:	or     BYTE PTR [rbx+0x4],ch
   14005a973:	rex add DWORD PTR [rax],eax
   14005a976:	add    BYTE PTR [rax],al
   14005a978:	cmp    BYTE PTR [rbx+0x4],ch
   14005a97b:	rex add DWORD PTR [rax],eax
   14005a97e:	add    BYTE PTR [rax],al
   14005a980:	sub    al,0x6b
   14005a982:	add    al,0x40
   14005a984:	add    DWORD PTR [rax],eax
   14005a986:	add    BYTE PTR [rax],al
   14005a988:	pop    rax
   14005a989:	imul   eax,DWORD PTR [rax+rax*2],0x1
   14005a98d:	add    BYTE PTR [rax],al
   14005a98f:	add    BYTE PTR [rax+0x6b],cl
   14005a992:	add    al,0x40
   14005a994:	add    DWORD PTR [rax],eax
   14005a996:	add    BYTE PTR [rax],al
   14005a998:	sub    BYTE PTR [rbx+0x4],0x40
   14005a99c:	add    DWORD PTR [rax],eax
   14005a99e:	add    BYTE PTR [rax],al
   14005a9a0:	push   0x140046b
   14005a9a5:	add    BYTE PTR [rax],al
   14005a9a7:	add    BYTE PTR [rax+0x140046b],bl
   14005a9ad:	add    BYTE PTR [rax],al
   14005a9af:	add    BYTE PTR [rax+0x140046b],cl
   14005a9b5:	add    BYTE PTR [rax],al
   14005a9b7:	add    al,cl
   14005a9b9:	imul   eax,DWORD PTR [rax+rax*2],0x1
   14005a9bd:	add    BYTE PTR [rax],al
   14005a9bf:	add    BYTE PTR [rax+0x140046b],dh
   14005a9c5:	add    BYTE PTR [rax],al
   14005a9c7:	add    al,dh
   14005a9c9:	imul   eax,DWORD PTR [rax+rax*2],0x1
   14005a9cd:	add    BYTE PTR [rax],al
   14005a9cf:	add    al,ah
   14005a9d1:	imul   eax,DWORD PTR [rax+rax*2],0x1
   14005a9d5:	add    BYTE PTR [rax],al
   14005a9d7:	add    BYTE PTR [rax],ah
   14005a9d9:	ins    BYTE PTR es:[rdi],dx
   14005a9da:	add    al,0x40
   14005a9dc:	add    DWORD PTR [rax],eax
   14005a9de:	add    BYTE PTR [rax],al
   14005a9e0:	cmp    BYTE PTR [rbp+0x4],ch
   14005a9e3:	rex add DWORD PTR [rax],eax
   14005a9e6:	add    BYTE PTR [rax],al
   14005a9e8:	(bad)  
   14005a9e9:	ins    DWORD PTR es:[rdi],dx
   14005a9ea:	add    al,0x40
   14005a9ec:	add    DWORD PTR [rax],eax
   14005a9ee:	add    BYTE PTR [rax],al
   14005a9f0:	loopne 0x14005aa5f
   14005a9f2:	add    al,0x40
   14005a9f4:	add    DWORD PTR [rax],eax
   14005a9f6:	add    BYTE PTR [rax],al
   14005a9f8:	adc    BYTE PTR [rbp+0x4],ch
   14005a9fb:	rex add DWORD PTR [rax],eax
   14005a9fe:	add    BYTE PTR [rax],al
   14005aa00:	mov    esi,DWORD PTR [rip+0xffffffffa8919ba1]        # 0xe89745a7
   14005aa06:	rex.X
   14005aa07:	rex.WRX lods al,BYTE PTR ds:[rsi]
   14005aa09:	push   rsi
   14005aa0a:	(bad)
   14005aa0d:	sahf   
   14005aa0e:	xor    esp,DWORD PTR [rbp+0x40045530]
   14005aa14:	add    DWORD PTR [rax],eax
   14005aa16:	add    BYTE PTR [rax],al
   14005aa18:	xor    BYTE PTR [rbp+0x4],dl
   14005aa1b:	rex add DWORD PTR [rax],eax
   14005aa1e:	add    BYTE PTR [rax],al
   14005aa20:	xor    BYTE PTR [rbp+0x4],bl
   14005aa23:	rex add DWORD PTR [rax],eax
   14005aa26:	add    BYTE PTR [rax],al
   14005aa28:	add    BYTE PTR [rbp+0x4],bl
   14005aa2b:	rex add DWORD PTR [rax],eax
   14005aa2e:	add    BYTE PTR [rax],al
   14005aa30:	test   al,0x63
   14005aa32:	add    al,0x40
   14005aa34:	add    DWORD PTR [rax],eax
	...
   14005aa86:	add    BYTE PTR [rax],al
   14005aa88:	(bad)  
	...
   14005aacd:	add    BYTE PTR [rax],al
   14005aacf:	add    BYTE PTR [rax+0x1400466],dl
	...
   14005aafd:	add    BYTE PTR [rax],al
   14005aaff:	add    BYTE PTR [rax+0x1400470],dh
   14005ab05:	add    BYTE PTR [rax],al
   14005ab07:	add    BYTE PTR [rax+0x60],ch
   14005ab0a:	add    al,0x40
   14005ab0c:	add    DWORD PTR [rax],eax
   14005ab0e:	add    BYTE PTR [rax],al
   14005ab10:	mov    BYTE PTR [rsi+0x44],ah
   14005ab13:	and    cl,bl
   14005ab15:	(bad)  
   14005ab16:	jle    0x14005ab67
   14005ab18:	mov    al,0xb5
   14005ab1a:	xchg   BYTE PTR [rdx+0x5b],ah
   14005ab1d:	(bad)
   14005ab20:	mov    ah,BYTE PTR [rsi+0x44]
   14005ab23:	and    cl,bl
   14005ab25:	(bad)  
   14005ab26:	jle    0x14005ab77
   14005ab28:	mov    al,0xb5
   14005ab2a:	xchg   BYTE PTR [rdx+0x5b],ah
   14005ab2d:	(bad)
	...
   14005ab60:	rcr    BYTE PTR [rax],1
   14005ab62:	add    al,0x40
   14005ab64:	add    DWORD PTR [rax],eax
	...
   14005ab6e:	add    BYTE PTR [rax],al
   14005ab70:	cs (bad) 
   14005ab72:	push   r14
   14005ab74:	rex.XB push r8
   14005ab76:	jb     0x14005abe7
   14005ab78:	rex.XB ins WORD PTR es:[rdi],dx
   14005ab7b:	fs push rbx
   14005ab7d:	gs je  0x14005abf4
   14005ab80:	imul   ebp,DWORD PTR [rsi+0x67],0x404073
   14005ab87:	add    al,dl
   14005ab89:	sbb    BYTE PTR [rax+rax*2],al
   14005ab8c:	add    DWORD PTR [rax],eax
	...
   14005ab96:	add    BYTE PTR [rax],al
   14005ab98:	cs (bad) 
   14005ab9a:	push   r14
   14005ab9c:	rex.XB
   14005ab9d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14005ab9f:	ins    DWORD PTR es:[rdi],dx
   14005aba0:	ins    DWORD PTR es:[rdi],dx
   14005aba1:	(bad)  
   14005aba2:	outs   dx,BYTE PTR ds:[rsi]
   14005aba3:	imul   r13,QWORD PTR fs:[rsi+0x65],0x404057
   14005abac:	add    BYTE PTR [rax],al
   14005abae:	add    BYTE PTR [rax],al
   14005abb0:	rcr    BYTE PTR [rax],1
   14005abb2:	add    al,0x40
   14005abb4:	add    DWORD PTR [rax],eax
	...
   14005abbe:	add    BYTE PTR [rax],al
   14005abc0:	cs (bad) 
   14005abc2:	push   r14
   14005abc4:	rex.XB
   14005abc5:	rex.B je 0x14005ac34
   14005abc8:	rex.RB js 0x14005ac2e
   14005abcb:	gs jo  0x14005ac42
   14005abce:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14005abd5:	rex
   14005abd6:	add    al,dl
   14005abd9:	sbb    BYTE PTR [rax+rax*2],al
   14005abdc:	add    DWORD PTR [rax],eax
	...
   14005abe6:	add    BYTE PTR [rax],al
   14005abe8:	cs (bad) 
   14005abea:	push   r14
   14005abec:	js     0x14005ac41
   14005abee:	push   0x64657261
   14005abf3:	rex.WRB
   14005abf4:	gs ins DWORD PTR es:[rdi],dx
   14005abf6:	outs   dx,DWORD PTR ds:[rsi]
   14005abf7:	jb     0x14005ac72
   14005abf9:	rex.RB js 0x14005ac5f
   14005abfc:	gs jo  0x14005ac73
   14005abff:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14005ac06:	add    BYTE PTR [rax],al
   14005ac08:	rcr    BYTE PTR [rax],1
   14005ac0a:	add    al,0x40
   14005ac0c:	add    DWORD PTR [rax],eax
	...
   14005ac16:	add    BYTE PTR [rax],al
   14005ac18:	rex.W add BYTE PTR cs:[rax],al
   14005ac1c:	add    BYTE PTR [rax],al
   14005ac1e:	add    BYTE PTR [rax],al
   14005ac20:	rcr    BYTE PTR [rax],1
   14005ac22:	add    al,0x40
   14005ac24:	add    DWORD PTR [rax],eax
	...
   14005ac2e:	add    BYTE PTR [rax],al
   14005ac30:	cs (bad) 
   14005ac32:	push   r14
   14005ac34:	rex.XB push r11
   14005ac36:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14005ac3a:	(bad)  
   14005ac3b:	(bad)  
   14005ac3c:	ins    BYTE PTR es:[rdi],dx
   14005ac3d:	gs rex.WXB
   14005ac3f:	gs jb  0x14005acb0
   14005ac42:	gs ins BYTE PTR es:[rdi],dx
   14005ac44:	rex.WRXB (bad) 
   14005ac46:	push   0x65
   14005ac48:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14005ac4c:	add    BYTE PTR [rax],al
   14005ac4e:	add    BYTE PTR [rax],al
   14005ac50:	rcr    BYTE PTR [rax],1
   14005ac52:	add    al,0x40
   14005ac54:	add    DWORD PTR [rax],eax
	...
   14005ac5e:	add    BYTE PTR [rax],al
   14005ac60:	cs (bad) 
   14005ac62:	push   r14
   14005ac64:	rex.XB
   14005ac65:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x726f7272
   14005ac6e:	push   rdx
   14005ac6f:	gs jo  0x14005ace1
   14005ac72:	jb     0x14005ace8
   14005ac74:	gs jb  0x14005acb7
   14005ac77:	add    BYTE PTR [rax],al
   14005ac7a:	add    BYTE PTR [rax],al
   14005ac7c:	add    BYTE PTR [rax],al
   14005ac7e:	add    BYTE PTR [rax],al
   14005ac80:	rcr    BYTE PTR [rax],1
   14005ac82:	add    al,0x40
   14005ac84:	add    DWORD PTR [rax],eax
	...
   14005ac8e:	add    BYTE PTR [rax],al
   14005ac90:	cs (bad) 
   14005ac92:	push   r14
   14005ac94:	rex.WB
   14005ac95:	rex.RB jb 0x14005ad0a
   14005ac98:	outs   dx,DWORD PTR ds:[rsi]
   14005ac99:	jb     0x14005aced
   14005ac9b:	gs jo  0x14005ad0d
   14005ac9e:	jb     0x14005ad14
   14005aca0:	gs jb  0x14005ace3
   14005aca3:	add    BYTE PTR [rax],al
   14005aca6:	add    BYTE PTR [rax],al
   14005aca8:	rcr    BYTE PTR [rax],1
   14005acaa:	add    al,0x40
   14005acac:	add    DWORD PTR [rax],eax
	...
   14005acb6:	add    BYTE PTR [rax],al
   14005acb8:	cs (bad) 
   14005acba:	push   r14
   14005acbc:	rex.XB push r11
   14005acbe:	jns    0x14005ad33
   14005acc0:	je     0x14005ad27
   14005acc2:	ins    DWORD PTR es:[rdi],dx
   14005acc3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14005acc5:	outs   dx,WORD PTR ds:[rsi]
   14005acc7:	rex
   14005acc8:	add    BYTE PTR [rax],al
   14005accb:	add    BYTE PTR [rax],al
   14005accd:	add    BYTE PTR [rax],al
   14005accf:	add    al,dl
   14005acd1:	sbb    BYTE PTR [rax+rax*2],al
   14005acd4:	add    DWORD PTR [rax],eax
	...
   14005acde:	add    BYTE PTR [rax],al
   14005ace0:	cs (bad) 
   14005ace2:	push   r14
   14005ace4:	rex.XB
   14005ace5:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14005ace7:	jbe    0x14005ad52
   14005ace9:	jb     0x14005ad5a
   14005aceb:	outs   dx,BYTE PTR ds:[rsi]
   14005acec:	ins    DWORD PTR es:[rdi],dx
   14005aced:	outs   dx,BYTE PTR gs:[rsi]
   14005acef:	je     0x14005ad31
   14005acf1:	add    BYTE PTR [rax],al
   14005acf4:	add    BYTE PTR [rax],al
   14005acf6:	add    BYTE PTR [rax],al
   14005acf8:	rcr    BYTE PTR [rax],1
   14005acfa:	add    al,0x40
   14005acfc:	add    DWORD PTR [rax],eax
	...
   14005ad06:	add    BYTE PTR [rax],al
   14005ad08:	cs (bad) 
   14005ad0a:	push   r14
   14005ad0c:	js     0x14005ad5c
   14005ad0e:	(bad)  
   14005ad0f:	ins    DWORD PTR es:[rdi],dx
   14005ad10:	gs fs rex.WRXB (bad) 
   14005ad14:	push   0x65
   14005ad16:	movsxd esi,DWORD PTR [rbx+rax*2+0x72]
   14005ad1a:	gs (bad) 
   14005ad1c:	je     0x14005ad83
   14005ad1e:	rex.RX (bad) 
   14005ad20:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4040
   14005ad28:	rcr    BYTE PTR [rax],1
   14005ad2a:	add    al,0x40
   14005ad2c:	add    DWORD PTR [rax],eax
	...
   14005ad36:	add    BYTE PTR [rax],al
   14005ad38:	cs (bad) 
   14005ad3a:	push   r14
   14005ad3c:	rex.XB push r11
   14005ad3e:	push   0x64657261
   14005ad43:	rex.WRB
   14005ad44:	gs ins DWORD PTR es:[rdi],dx
   14005ad46:	outs   dx,DWORD PTR ds:[rsi]
   14005ad47:	jb     0x14005adc2
   14005ad49:	rex
   14005ad4a:	add    BYTE PTR [rax],al
   14005ad4d:	add    BYTE PTR [rax],al
   14005ad4f:	add    al,dl
   14005ad51:	sbb    BYTE PTR [rax+rax*2],al
   14005ad54:	add    DWORD PTR [rax],eax
	...
   14005ad5e:	add    BYTE PTR [rax],al
   14005ad60:	cs (bad) 
   14005ad62:	push   r14
   14005ad64:	rex.XB
   14005ad65:	rex.WRXB push r11
   14005ad67:	rex.RB jbe 0x14005adcf
   14005ad6a:	outs   dx,BYTE PTR ds:[rsi]
   14005ad6b:	je     0x14005adad
   14005ad6d:	add    BYTE PTR [rax],al
   14005ad70:	rcr    BYTE PTR [rax],1
   14005ad72:	add    al,0x40
   14005ad74:	add    DWORD PTR [rax],eax
	...
   14005ad7e:	add    BYTE PTR [rax],al
   14005ad80:	cs (bad) 
   14005ad82:	push   r14
   14005ad84:	pop    rax
   14005ad85:	ins    DWORD PTR es:[rdi],dx
   14005ad86:	ins    BYTE PTR es:[rdi],dx
   14005ad87:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14005ad89:	jne    0x14005adf9
   14005ad8b:	je     0x14005adf2
   14005ad8d:	jb     0x14005ae02
   14005ad8f:	rex.R
   14005ad90:	rex.X
   14005ad91:	rex
   14005ad92:	add    BYTE PTR [rax],al
   14005ad95:	add    BYTE PTR [rax],al
   14005ad97:	add    al,dl
   14005ad99:	sbb    BYTE PTR [rax+rax*2],al
   14005ad9c:	add    DWORD PTR [rax],eax
	...
   14005ada6:	add    BYTE PTR [rax],al
   14005ada8:	cs (bad) 
   14005adaa:	push   r14
   14005adac:	pop    rax
   14005adad:	ins    DWORD PTR es:[rdi],dx
   14005adae:	ins    BYTE PTR es:[rdi],dx
   14005adaf:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14005adb1:	jne    0x14005ae21
   14005adb3:	je     0x14005ae1a
   14005adb5:	jb     0x14005ae2a
   14005adb7:	rex.R
   14005adb8:	rex.X
   14005adb9:	rex.WB ins DWORD PTR es:[rdi],dx
   14005adbb:	jo     0x14005ae29
   14005adbd:	rex
   14005adbe:	add    al,dl
   14005adc1:	sbb    BYTE PTR [rax+rax*2],al
   14005adc4:	add    DWORD PTR [rax],eax
	...
   14005adce:	add    BYTE PTR [rax],al
   14005add0:	cs (bad) 
   14005add2:	push   r14
   14005add4:	push   rbx
   14005add5:	pop    r8
   14005add7:	rex.RB jb 0x14005ae4c
   14005adda:	outs   dx,DWORD PTR ds:[rsi]
   14005addb:	jb     0x14005ae25
   14005addd:	(bad)  
   14005adde:	outs   dx,BYTE PTR ds:[rsi]
   14005addf:	fs ins BYTE PTR es:[rdi],dx
   14005ade1:	gs jb  0x14005ae2d
   14005ade4:	ins    DWORD PTR es:[rdi],dx
   14005ade5:	jo     0x14005ae53
   14005ade7:	rex
   14005ade8:	add    BYTE PTR [rax],al
   14005adeb:	add    BYTE PTR [rax],al
   14005aded:	add    BYTE PTR [rax],al
   14005adef:	add    al,dl
   14005adf1:	sbb    BYTE PTR [rax+rax*2],al
   14005adf4:	add    DWORD PTR [rax],eax
	...
   14005adfe:	add    BYTE PTR [rax],al
   14005ae00:	cs (bad) 
   14005ae02:	push   r13
   14005ae04:	rex.WB push r11
   14005ae06:	pop    r8
   14005ae08:	rex.RB jb 0x14005ae7d
   14005ae0b:	outs   dx,DWORD PTR ds:[rsi]
   14005ae0c:	jb     0x14005ae56
   14005ae0e:	(bad)  
   14005ae0f:	outs   dx,BYTE PTR ds:[rsi]
   14005ae10:	fs ins BYTE PTR es:[rdi],dx
   14005ae12:	gs jb  0x14005ae55
   14005ae15:	add    BYTE PTR [rax],al
   14005ae18:	rcr    BYTE PTR [rax],1
   14005ae1a:	add    al,0x40
   14005ae1c:	add    DWORD PTR [rax],eax
	...
   14005ae26:	add    BYTE PTR [rax],al
   14005ae28:	cs (bad) 
   14005ae2a:	push   r13
   14005ae2c:	rex.WB push r13
   14005ae2e:	outs   dx,BYTE PTR ds:[rsi]
   14005ae2f:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14005ae33:	outs   dx,BYTE PTR ds:[rsi]
   14005ae34:	rex
   14005ae35:	add    BYTE PTR [rax],al
   14005ae38:	rcr    BYTE PTR [rax],1
   14005ae3a:	add    al,0x40
   14005ae3c:	add    DWORD PTR [rax],eax
	...
   14005ae46:	add    BYTE PTR [rax],al
   14005ae48:	cs (bad) 
   14005ae4a:	push   r14
   14005ae4c:	rex.WRB jns 0x14005ae92
   14005ae4f:	outs   dx,DWORD PTR ds:[rsi]
   14005ae50:	outs   dx,BYTE PTR ds:[rsi]
   14005ae51:	je     0x14005aeb8
   14005ae53:	outs   dx,BYTE PTR ds:[rsi]
   14005ae54:	je     0x14005ae96
   14005ae56:	add    al,dl
   14005ae59:	sbb    BYTE PTR [rax+rax*2],al
   14005ae5c:	add    DWORD PTR [rax],eax
	...
   14005ae66:	add    BYTE PTR [rax],al
   14005ae68:	cs (bad) 
   14005ae6a:	push   r14
   14005ae6c:	push   rbx
   14005ae6d:	pop    r8
   14005ae6f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14005ae71:	outs   dx,BYTE PTR ds:[rsi]
   14005ae72:	je     0x14005aed9
   14005ae74:	outs   dx,BYTE PTR ds:[rsi]
   14005ae75:	je     0x14005aebf
   14005ae77:	(bad)  
   14005ae78:	outs   dx,BYTE PTR ds:[rsi]
   14005ae79:	fs ins BYTE PTR es:[rdi],dx
   14005ae7b:	gs jb  0x14005aec7
   14005ae7e:	ins    DWORD PTR es:[rdi],dx
   14005ae7f:	jo     0x14005aeed
   14005ae81:	rex
   14005ae82:	add    BYTE PTR [rax],al
   14005ae85:	add    BYTE PTR [rax],al
   14005ae87:	add    al,dl
   14005ae89:	sbb    BYTE PTR [rax+rax*2],al
   14005ae8c:	add    DWORD PTR [rax],eax
	...
   14005ae96:	add    BYTE PTR [rax],al
   14005ae98:	cs (bad) 
   14005ae9a:	push   r13
   14005ae9c:	rex.WB push r11
   14005ae9e:	pop    r8
   14005aea0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14005aea2:	outs   dx,BYTE PTR ds:[rsi]
   14005aea3:	je     0x14005af0a
   14005aea5:	outs   dx,BYTE PTR ds:[rsi]
   14005aea6:	je     0x14005aef0
   14005aea8:	(bad)  
   14005aea9:	outs   dx,BYTE PTR ds:[rsi]
   14005aeaa:	fs ins BYTE PTR es:[rdi],dx
   14005aeac:	gs jb  0x14005aeef
   14005aeaf:	add    BYTE PTR [rax],al
   14005aeb2:	add    BYTE PTR [rax],al
   14005aeb4:	add    BYTE PTR [rax],al
   14005aeb6:	add    BYTE PTR [rax],al
   14005aeb8:	rcr    BYTE PTR [rax],1
   14005aeba:	add    al,0x40
   14005aebc:	add    DWORD PTR [rax],eax
	...
   14005aec6:	add    BYTE PTR [rax],al
   14005aec8:	cs (bad) 
   14005aeca:	push   r14
   14005aecc:	rex.XB
   14005aecd:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14005aecf:	ins    BYTE PTR es:[rdi],dx
   14005aed0:	ins    BYTE PTR es:[rdi],dx
   14005aed1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14005aed6:	outs   dx,BYTE PTR ds:[rsi]
   14005aed7:	push   rbx
   14005aed8:	gs je  0x14005af4f
   14005aedb:	imul   ebp,DWORD PTR [rsi+0x67],0x404073
   14005aee2:	add    BYTE PTR [rax],al
   14005aee4:	add    BYTE PTR [rax],al
   14005aee6:	add    BYTE PTR [rax],al
   14005aee8:	rcr    BYTE PTR [rax],1
   14005aeea:	add    al,0x40
   14005aeec:	add    DWORD PTR [rax],eax
	...
   14005aef6:	add    BYTE PTR [rax],al
   14005aef8:	cs (bad) 
   14005aefa:	push   r14
   14005aefc:	rex.XB push r8
   14005aefe:	jb     0x14005af6f
   14005af00:	imul   bp,WORD PTR [rbp+riz*2+0x45],0x6576
   14005af07:	outs   dx,BYTE PTR ds:[rsi]
   14005af08:	je     0x14005af57
   14005af0a:	(bad)  
   14005af0b:	outs   dx,BYTE PTR ds:[rsi]
   14005af0c:	(bad)  
   14005af0d:	addr32 gs jb 0x14005af51
   14005af11:	add    BYTE PTR [rax],al
   14005af14:	add    BYTE PTR [rax],al
   14005af16:	add    BYTE PTR [rax],al
   14005af18:	rcr    BYTE PTR [rax],1
   14005af1a:	add    al,0x40
   14005af1c:	add    DWORD PTR [rax],eax
	...
   14005af26:	add    BYTE PTR [rax],al
   14005af28:	cs (bad) 
   14005af2a:	push   r14
   14005af2c:	js     0x14005af81
   14005af2e:	push   0x64657261
   14005af33:	push   rbx
   14005af34:	jo     0x14005af9f
   14005af36:	outs   dx,BYTE PTR ds:[rsi]
   14005af37:	ins    BYTE PTR es:[rdi],dx
   14005af38:	outs   dx,DWORD PTR ds:[rsi]
   14005af39:	movsxd ebp,DWORD PTR [rbx+0x45]
   14005af3c:	js     0x14005afa1
   14005af3e:	gs jo  0x14005afb5
   14005af41:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14005af48:	rcr    BYTE PTR [rax],1
   14005af4a:	add    al,0x40
   14005af4c:	add    DWORD PTR [rax],eax
	...
   14005af56:	add    BYTE PTR [rax],al
   14005af58:	cs (bad) 
   14005af5a:	push   r14
   14005af5c:	rex.XB push r11
   14005af5e:	push   0x64657261
   14005af63:	push   rbx
   14005af64:	jo     0x14005afcf
   14005af66:	outs   dx,BYTE PTR ds:[rsi]
   14005af67:	ins    BYTE PTR es:[rdi],dx
   14005af68:	outs   dx,DWORD PTR ds:[rsi]
   14005af69:	movsxd ebp,DWORD PTR [rbx+0x40]
   14005af6c:	add    BYTE PTR [rax],al
   14005af6f:	add    al,dl
   14005af71:	sbb    BYTE PTR [rax+rax*2],al
   14005af74:	add    DWORD PTR [rax],eax
	...
   14005af7e:	add    BYTE PTR [rax],al
   14005af80:	cs (bad) 
   14005af82:	push   r14
   14005af84:	rex.XB
   14005af85:	imul   r13d,DWORD PTR [rbp+r12*2+0x48],0x65646165
   14005af8e:	jb     0x14005afd0
   14005af90:	add    BYTE PTR [rax],al
   14005af93:	add    BYTE PTR [rax],al
   14005af95:	add    BYTE PTR [rax],al
   14005af97:	add    al,dl
   14005af99:	sbb    BYTE PTR [rax+rax*2],al
   14005af9c:	add    DWORD PTR [rax],eax
	...
   14005afa6:	add    BYTE PTR [rax],al
   14005afa8:	cs (bad) 
   14005afaa:	push   r14
   14005afac:	rex.XB
   14005afad:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14005afaf:	outs   dx,BYTE PTR ds:[rsi]
   14005afb0:	je     0x14005b024
   14005afb2:	outs   dx,DWORD PTR ds:[rsi]
   14005afb3:	ins    BYTE PTR es:[rdi],dx
   14005afb4:	rex.X ins BYTE PTR es:[rdi],dx
   14005afb6:	outs   dx,DWORD PTR ds:[rsi]
   14005afb7:	movsxd ebp,DWORD PTR [rbx+0x73]
   14005afba:	rex
   14005afbb:	add    BYTE PTR [rax],al
   14005afbe:	add    BYTE PTR [rax],al
   14005afc0:	rcr    BYTE PTR [rax],1
   14005afc2:	add    al,0x40
   14005afc4:	add    DWORD PTR [rax],eax
	...
   14005afce:	add    BYTE PTR [rax],al
   14005afd0:	cs (bad) 
   14005afd2:	push   r14
   14005afd4:	rex.XB push r8
   14005afd6:	jb     0x14005b047
   14005afd8:	imul   bp,WORD PTR [rbp+riz*2+0x4d],0x6e6f
   14005afdf:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x746e6f43
   14005afe7:	jb     0x14005b058
   14005afe9:	ins    BYTE PTR es:[rdi],dx
   14005afea:	rex
   14005afeb:	add    BYTE PTR [rax],al
   14005afee:	add    BYTE PTR [rax],al
   14005aff0:	rcr    BYTE PTR [rax],1
   14005aff2:	add    al,0x40
   14005aff4:	add    DWORD PTR [rax],eax
	...
   14005affe:	add    BYTE PTR [rax],al
   14005b000:	cs (bad) 
   14005b002:	push   r14
   14005b004:	rex.XB push r8
   14005b006:	jb     0x14005b077
   14005b008:	imul   bp,WORD PTR [rbp+riz*2+0x45],0x6576
   14005b00f:	outs   dx,BYTE PTR ds:[rsi]
   14005b010:	je     0x14005b053
   14005b012:	jb     0x14005b086
   14005b014:	(bad)  
   14005b015:	jns    0x14005b057
   14005b017:	add    BYTE PTR [rax],al
   14005b01a:	add    BYTE PTR [rax],al
   14005b01c:	add    BYTE PTR [rax],al
   14005b01e:	add    BYTE PTR [rax],al
   14005b020:	rcr    BYTE PTR [rax],1
   14005b022:	add    al,0x40
   14005b024:	add    DWORD PTR [rax],eax
	...
   14005b02e:	add    BYTE PTR [rax],al
   14005b030:	cs (bad) 
   14005b032:	push   r14
   14005b034:	rex.XB
   14005b035:	rex.RB jb 0x14005b0aa
   14005b038:	outs   dx,DWORD PTR ds:[rsi]
   14005b039:	jb     0x14005b08f
   14005b03b:	jb     0x14005b09e
   14005b03d:	outs   dx,BYTE PTR ds:[rsi]
   14005b03e:	jae    0x14005b0a6
   14005b040:	gs jb  0x14005b084
   14005b043:	outs   dx,BYTE PTR gs:[esi]
   14005b046:	je     0x14005b088
   14005b048:	add    BYTE PTR [rax],al
   14005b04b:	add    BYTE PTR [rax],al
   14005b04d:	add    BYTE PTR [rax],al
   14005b04f:	add    al,dl
   14005b051:	sbb    BYTE PTR [rax+rax*2],al
   14005b054:	add    DWORD PTR [rax],eax
	...
   14005b05e:	add    BYTE PTR [rax],al
   14005b060:	cs (bad) 
   14005b062:	push   r14
   14005b064:	rex.XB push r11
   14005b066:	push   0x64657261
   14005b06b:	push   rax
   14005b06c:	imul   esi,DWORD PTR [rax+0x65],0x4040
   14005b073:	add    BYTE PTR [rax],al
   14005b075:	add    BYTE PTR [rax],al
   14005b077:	add    al,dl
   14005b079:	sbb    BYTE PTR [rax+rax*2],al
   14005b07c:	add    DWORD PTR [rax],eax
	...
   14005b086:	add    BYTE PTR [rax],al
   14005b088:	cs (bad) 
   14005b08a:	push   r14
   14005b08c:	rex.XB push r8
   14005b08e:	jb     0x14005b0ff
   14005b090:	imul   bp,WORD PTR [rbp+riz*2+0x43],0x6e6f
   14005b097:	je     0x14005b10b
   14005b099:	outs   dx,DWORD PTR ds:[rsi]
   14005b09a:	ins    BYTE PTR es:[rdi],dx
   14005b09b:	rex
   14005b09c:	add    BYTE PTR [rax],al
   14005b09f:	add    al,dl
   14005b0a1:	sbb    BYTE PTR [rax+rax*2],al
   14005b0a4:	add    DWORD PTR [rax],eax
	...
   14005b0ae:	add    BYTE PTR [rax],al
   14005b0b0:	cs (bad) 
   14005b0b2:	push   r14
   14005b0b4:	js     0x14005b107
   14005b0b6:	jne    0x14005b11d
   14005b0b8:	jne    0x14005b11f
   14005b0ba:	rex.WRB (bad) 
   14005b0bc:	outs   dx,BYTE PTR ds:[rsi]
   14005b0bd:	(bad)  
   14005b0be:	addr32 gs jb 0x14005b107
   14005b0c2:	js     0x14005b127
   14005b0c4:	gs jo  0x14005b13b
   14005b0c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14005b0ce:	add    BYTE PTR [rax],al
   14005b0d0:	rcr    BYTE PTR [rax],1
   14005b0d2:	add    al,0x40
   14005b0d4:	add    DWORD PTR [rax],eax
	...
   14005b0de:	add    BYTE PTR [rax],al
   14005b0e0:	cs (bad) 
   14005b0e2:	push   r14
   14005b0e4:	rex.XB push r9
   14005b0e6:	jne    0x14005b14d
   14005b0e8:	jne    0x14005b14f
   14005b0ea:	rex.WRB (bad) 
   14005b0ec:	outs   dx,BYTE PTR ds:[rsi]
   14005b0ed:	(bad)  
   14005b0ee:	addr32 gs jb 0x14005b132
   14005b0f2:	add    BYTE PTR [rax],al
   14005b0f5:	add    BYTE PTR [rax],al
   14005b0f7:	add    al,dl
   14005b0f9:	sbb    BYTE PTR [rax+rax*2],al
   14005b0fc:	add    DWORD PTR [rax],eax
	...
   14005b106:	add    BYTE PTR [rax],al
   14005b108:	cs (bad) 
   14005b10a:	push   r14
   14005b10c:	rex.XB
   14005b10d:	rex.B jb 0x14005b182
   14005b110:	(bad)  
   14005b111:	jns    0x14005b160
   14005b113:	(bad)  
   14005b114:	outs   dx,BYTE PTR ds:[rsi]
   14005b115:	(bad)  
   14005b116:	addr32 gs jb 0x14005b15a
   14005b11a:	add    BYTE PTR [rax],al
   14005b11d:	add    BYTE PTR [rax],al
   14005b11f:	add    al,dl
   14005b121:	sbb    BYTE PTR [rax+rax*2],al
   14005b124:	add    DWORD PTR [rax],eax
	...
   14005b12e:	add    BYTE PTR [rax],al
   14005b130:	cs (bad) 
   14005b132:	push   r14
   14005b134:	rex.XB
   14005b135:	rex.X jne 0x14005b19e
   14005b138:	data16 gs jb 0x14005b18c
   14005b13c:	outs   dx,DWORD PTR ds:[rsi]
   14005b13d:	outs   dx,DWORD PTR ds:[rsi]
   14005b13e:	ins    BYTE PTR es:[rdi],dx
   14005b13f:	rex
   14005b140:	add    BYTE PTR [rax],al
   14005b143:	add    BYTE PTR [rax],al
   14005b145:	add    BYTE PTR [rax],al
   14005b147:	add    al,dl
   14005b149:	sbb    BYTE PTR [rax+rax*2],al
   14005b14c:	add    DWORD PTR [rax],eax
	...
   14005b156:	add    BYTE PTR [rax],al
   14005b158:	cs (bad) 
   14005b15a:	push   r14
   14005b15c:	js     0x14005b1b1
   14005b15e:	(bad)  
   14005b15f:	ins    DWORD PTR es:[rdi],dx
   14005b160:	jo     0x14005b1ce
   14005b162:	gs jb  0x14005b1aa
   14005b165:	js     0x14005b1ca
   14005b167:	gs jo  0x14005b1de
   14005b16a:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0004040
   14005b171:	sbb    BYTE PTR [rax+rax*2],al
   14005b174:	add    DWORD PTR [rax],eax
	...
   14005b17e:	add    BYTE PTR [rax],al
   14005b180:	cs (bad) 
   14005b182:	push   r13
   14005b184:	rex.WB push r11
   14005b186:	(bad)  
   14005b187:	ins    DWORD PTR es:[rdi],dx
   14005b188:	jo     0x14005b1f6
   14005b18a:	imul   ebp,DWORD PTR [rsi+0x67],0x746e6f43
   14005b191:	jb     0x14005b202
   14005b193:	ins    BYTE PTR es:[rdi],dx
   14005b194:	rex
   14005b195:	add    BYTE PTR [rax],al
   14005b198:	rcr    BYTE PTR [rax],1
   14005b19a:	add    al,0x40
   14005b19c:	add    DWORD PTR [rax],eax
	...
   14005b1a6:	add    BYTE PTR [rax],al
   14005b1a8:	cs (bad) 
   14005b1aa:	push   r14
   14005b1ac:	rex.XB push r11
   14005b1ae:	(bad)  
   14005b1af:	ins    DWORD PTR es:[rdi],dx
   14005b1b0:	jo     0x14005b21e
   14005b1b2:	imul   ebp,DWORD PTR [rsi+0x67],0x746e6f43
   14005b1b9:	jb     0x14005b22a
   14005b1bb:	ins    BYTE PTR es:[rdi],dx
   14005b1bc:	rex
   14005b1bd:	add    BYTE PTR [rax],al
   14005b1c0:	rcr    BYTE PTR [rax],1
   14005b1c2:	add    al,0x40
   14005b1c4:	add    DWORD PTR [rax],eax
	...
   14005b1ce:	add    BYTE PTR [rax],al
   14005b1d0:	cs push rax
   14005b1d2:	rex.RB
   14005b1d3:	pop    r8
   14005b1d5:	add    BYTE PTR [rax],al
   14005b1d7:	add    al,dl
   14005b1d9:	sbb    BYTE PTR [rax+rax*2],al
   14005b1dc:	add    DWORD PTR [rax],eax
	...
   14005b1e6:	add    BYTE PTR [rax],al
   14005b1e8:	cs push rax
   14005b1ea:	rex.RB
   14005b1eb:	push   r14
   14005b1ed:	js     0x14005b234
   14005b1ef:	js     0x14005b254
   14005b1f1:	gs jo  0x14005b268
   14005b1f4:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14005b1fb:	add    BYTE PTR [rax],al
   14005b1fd:	add    BYTE PTR [rax],al
   14005b1ff:	add    al,dl
   14005b201:	sbb    BYTE PTR [rax+rax*2],al
   14005b204:	add    DWORD PTR [rax],eax
	...
   14005b20e:	add    BYTE PTR [rax],al
   14005b210:	cs push rax
   14005b212:	rex.RB
   14005b213:	push   r14
   14005b215:	js     0x14005b26a
   14005b217:	(bad)  
   14005b218:	ins    DWORD PTR es:[rdi],dx
   14005b219:	jo     0x14005b287
   14005b21b:	gs jb  0x14005b263
   14005b21e:	js     0x14005b283
   14005b220:	gs jo  0x14005b297
   14005b223:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14005b22a:	add    BYTE PTR [rax],al
   14005b22c:	add    BYTE PTR [rax],al
   14005b22e:	add    BYTE PTR [rax],al
   14005b230:	rcr    BYTE PTR [rax],1
   14005b232:	add    al,0x40
   14005b234:	add    DWORD PTR [rax],eax
	...
   14005b23e:	add    BYTE PTR [rax],al
   14005b240:	cs (bad) 
   14005b242:	push   r13
   14005b244:	push   rbx
   14005b245:	rex.XB ins BYTE PTR es:[rdi],dx
   14005b247:	gs (bad) 
   14005b249:	outs   dx,BYTE PTR ds:[rsi]
   14005b24a:	gs jb  0x14005b28d
   14005b24d:	add    BYTE PTR [rax],al
   14005b250:	rcr    BYTE PTR [rax],1
   14005b252:	add    al,0x40
   14005b254:	add    DWORD PTR [rax],eax
	...
   14005b25e:	add    BYTE PTR [rax],al
   14005b260:	cs (bad) 
   14005b262:	push   r14
   14005b264:	gs js  0x14005b2ca
   14005b267:	gs jo  0x14005b2de
   14005b26a:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14005b271:	rex
   14005b272:	add    BYTE PTR [rax],al
   14005b275:	add    BYTE PTR [rax],al
   14005b277:	add    al,dl
   14005b279:	sbb    BYTE PTR [rax+rax*2],al
   14005b27c:	add    DWORD PTR [rax],eax
	...
   14005b286:	add    BYTE PTR [rax],al
   14005b288:	cs (bad) 
   14005b28a:	push   r14
   14005b28c:	jb     0x14005b303
   14005b28e:	outs   dx,BYTE PTR ds:[rsi]
   14005b28f:	je     0x14005b2fa
   14005b291:	ins    DWORD PTR es:[rdi],dx
   14005b292:	gs pop rdi
   14005b294:	gs jb  0x14005b309
   14005b297:	outs   dx,DWORD PTR ds:[rsi]
   14005b298:	jb     0x14005b2da
   14005b29a:	jae    0x14005b310
   14005b29c:	fs rex
   14005b29e:	add    al,dl
   14005b2a1:	sbb    BYTE PTR [rax+rax*2],al
   14005b2a4:	add    DWORD PTR [rax],eax
	...
   14005b2ae:	add    BYTE PTR [rax],al
   14005b2b0:	cs (bad) 
   14005b2b2:	push   r14
   14005b2b4:	rex.XB push r11
   14005b2b6:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14005b2ba:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x726f666e
   14005b2c2:	ins    DWORD PTR es:[rdi],dx
   14005b2c3:	(bad)  
   14005b2c4:	je     0x14005b32f
   14005b2c6:	outs   dx,DWORD PTR ds:[rsi]
   14005b2c7:	outs   dx,BYTE PTR ds:[rsi]
   14005b2c8:	rex
   14005b2c9:	add    BYTE PTR [rax],al
   14005b2cc:	add    BYTE PTR [rax],al
   14005b2ce:	add    BYTE PTR [rax],al
   14005b2d0:	rcr    BYTE PTR [rax],1
   14005b2d2:	add    al,0x40
   14005b2d4:	add    DWORD PTR [rax],eax
	...
   14005b2de:	add    BYTE PTR [rax],al
   14005b2e0:	cs (bad) 
   14005b2e2:	push   r13
   14005b2e4:	rex.WB push r11
   14005b2e6:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14005b2ea:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x726f666e
   14005b2f2:	ins    DWORD PTR es:[rdi],dx
   14005b2f3:	(bad)  
   14005b2f4:	je     0x14005b35f
   14005b2f6:	outs   dx,DWORD PTR ds:[rsi]
   14005b2f7:	outs   dx,BYTE PTR ds:[rsi]
   14005b2f8:	rex
   14005b2f9:	add    BYTE PTR [rax],al
   14005b2fc:	add    BYTE PTR [rax],al
   14005b2fe:	add    BYTE PTR [rax],al
   14005b300:	rcr    BYTE PTR [rax],1
   14005b302:	add    al,0x40
   14005b304:	add    DWORD PTR [rax],eax
	...
   14005b30e:	add    BYTE PTR [rax],al
   14005b310:	cs (bad) 
   14005b312:	push   r14
   14005b314:	(bad)  
   14005b315:	and    al,0x50
   14005b317:	jae    0x14005b37e
   14005b319:	jne    0x14005b37f
   14005b31b:	outs   dx,DWORD PTR ds:[rsi]
   14005b31c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14005b31e:	ins    DWORD PTR es:[rdi],dx
   14005b31f:	rex.WRXB (bad) 
   14005b321:	push   0x65
   14005b323:	movsxd esi,DWORD PTR [rax+rax*2+0x55]
   14005b327:	rex.WB push r11
   14005b329:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14005b32d:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x726f666e
   14005b335:	ins    DWORD PTR es:[rdi],dx
   14005b336:	(bad)  
   14005b337:	je     0x14005b3a2
   14005b339:	outs   dx,DWORD PTR ds:[rsi]
   14005b33a:	outs   dx,BYTE PTR ds:[rsi]
   14005b33b:	rex
   14005b33c:	rex
   14005b33d:	rex
   14005b33e:	add    al,dl
   14005b341:	sbb    BYTE PTR [rax+rax*2],al
   14005b344:	add    DWORD PTR [rax],eax
	...
   14005b34e:	add    BYTE PTR [rax],al
   14005b350:	cs (bad) 
   14005b352:	push   r14
   14005b354:	(bad)
   14005b359:	ins    BYTE PTR es:[rdi],dx
   14005b35a:	ins    BYTE PTR es:[rdi],dx
   14005b35b:	outs   dx,DWORD PTR ds:[rsi]
   14005b35c:	movsxd eax,DWORD PTR [rax+0x73]
   14005b35f:	je     0x14005b3c5
   14005b361:	rex
   14005b362:	add    BYTE PTR [rax],al
   14005b365:	add    BYTE PTR [rax],al
   14005b367:	add    al,dl
   14005b369:	sbb    BYTE PTR [rax+rax*2],al
   14005b36c:	add    DWORD PTR [rax],eax
	...
   14005b376:	add    BYTE PTR [rax],al
   14005b378:	rex.WX add BYTE PTR cs:[rax],al
   14005b37c:	add    BYTE PTR [rax],al
   14005b37e:	add    BYTE PTR [rax],al
   14005b380:	rcr    BYTE PTR [rax],1
   14005b382:	add    al,0x40
   14005b384:	add    DWORD PTR [rax],eax
	...
   14005b38e:	add    BYTE PTR [rax],al
   14005b390:	cs (bad) 
   14005b392:	push   r14
   14005b394:	ins    BYTE PTR es:[rdi],dx
   14005b395:	outs   dx,DWORD PTR ds:[rsi]
   14005b396:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14005b39e:	jb     0x14005b3e0
   14005b3a0:	jae    0x14005b416
   14005b3a2:	fs rex
   14005b3a4:	add    BYTE PTR [rax],al
   14005b3a7:	add    al,dl
   14005b3a9:	sbb    BYTE PTR [rax+rax*2],al
   14005b3ac:	add    DWORD PTR [rax],eax
	...
   14005b3b6:	add    BYTE PTR [rax],al
   14005b3b8:	cs (bad) 
   14005b3ba:	push   r14
   14005b3bc:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14005b3c3:	pop    rdi
   14005b3c4:	(bad)  
   14005b3c5:	jb     0x14005b42e
   14005b3c7:	jne    0x14005b436
   14005b3c9:	outs   dx,BYTE PTR gs:[rsi]
   14005b3cb:	je     0x14005b40d
   14005b3cd:	jae    0x14005b443
   14005b3cf:	fs rex
   14005b3d1:	add    BYTE PTR [rax],al
   14005b3d4:	add    BYTE PTR [rax],al
   14005b3d6:	add    BYTE PTR [rax],al
   14005b3d8:	rcr    BYTE PTR [rax],1
   14005b3da:	add    al,0x40
   14005b3dc:	add    DWORD PTR [rax],eax
	...
   14005b3e6:	add    BYTE PTR [rax],al
   14005b3e8:	cs (bad) 
   14005b3ea:	push   r14
   14005b3ec:	rex.XB
   14005b3ed:	rex.XB ins BYTE PTR es:[rdi],dx
   14005b3ef:	gs (bad) 
   14005b3f1:	outs   dx,BYTE PTR ds:[rsi]
   14005b3f2:	gs jb  0x14005b435
   14005b3f5:	add    BYTE PTR [rax],al
   14005b3f8:	rcr    BYTE PTR [rax],1
   14005b3fa:	add    al,0x40
   14005b3fc:	add    DWORD PTR [rax],eax
	...
   14005b406:	add    BYTE PTR [rax],al
   14005b408:	cs (bad) 
   14005b40a:	push   r14
   14005b40c:	rex.XB
   14005b40d:	rex.WRXB push r11
   14005b40f:	rex.WRB jne 0x14005b486
   14005b412:	gs js  0x14005b455
   14005b415:	add    BYTE PTR [rax],al
   14005b418:	rcr    BYTE PTR [rax],1
   14005b41a:	add    al,0x40
   14005b41c:	add    DWORD PTR [rax],eax
	...
   14005b426:	add    BYTE PTR [rax],al
   14005b428:	cs (bad) 
   14005b42a:	push   r14
   14005b42c:	rex.XB
   14005b42d:	rex.WRXB push r11
   14005b42f:	push   rbx
   14005b430:	gs ins DWORD PTR es:[rdi],dx
   14005b432:	(bad)  
   14005b433:	jo     0x14005b49d
   14005b435:	outs   dx,DWORD PTR ds:[rsi]
   14005b436:	jb     0x14005b49d
   14005b438:	rex
   14005b439:	add    BYTE PTR [rax],al
   14005b43c:	add    BYTE PTR [rax],al
   14005b43e:	add    BYTE PTR [rax],al
   14005b440:	js     0x14005b492
   14005b442:	add    al,0x40
   14005b444:	add    DWORD PTR [rax],eax
   14005b446:	add    BYTE PTR [rax],al
   14005b448:	js     0x14005b49a
   14005b44a:	add    al,0x40
   14005b44c:	add    DWORD PTR [rax],eax
   14005b44e:	add    BYTE PTR [rax],al
   14005b450:	js     0x14005b4a2
   14005b452:	add    al,0x40
   14005b454:	add    DWORD PTR [rax],eax
   14005b456:	add    BYTE PTR [rax],al
   14005b458:	jne    0x14005b3f2
   14005b45a:	add    BYTE PTR [rax],al
   14005b45c:	jae    0x14005b3f6
   14005b45e:	add    BYTE PTR [rax],al
   14005b460:	add    BYTE PTR [rax+rax*1],al
   14005b463:	add    BYTE PTR [rcx],al
   14005b465:	cld    
   14005b466:	(bad)  
   14005b467:	push   QWORD PTR [rip+0xb000000]        # 0x14b05b46d
   14005b46d:	add    BYTE PTR [rax],al
   14005b46f:	add    BYTE PTR [rax+0x0],al
   14005b472:	add    BYTE PTR [rax],al
   14005b474:	inc    DWORD PTR [rbx]
   14005b476:	add    BYTE PTR [rax],al
   14005b478:	add    BYTE PTR [rax],0x0
   14005b47b:	add    BYTE PTR [rcx+0x18ffffff],al
   14005b481:	add    BYTE PTR [rax],al
   14005b483:	add    BYTE PTR [rax],cl
   14005b485:	add    BYTE PTR [rax],al
   14005b487:	add    BYTE PTR [rax],ah
   14005b489:	add    BYTE PTR [rax],al
   14005b48b:	add    BYTE PTR [rdi+0x0],bh
	...
   14005b496:	add    BYTE PTR [rax],al
   14005b498:	add    BYTE PTR [rax+0x4002],ah
   14005b49e:	add    BYTE PTR [rax],al
   14005b4a0:	add    BYTE PTR [rax],al
   14005b4a2:	add    BYTE PTR [rax],al
   14005b4a4:	add    al,cl
   14005b4a6:	add    eax,0x40
   14005b4ab:	add    BYTE PTR [rax],al
   14005b4ad:	add    BYTE PTR [rax],al
   14005b4af:	add    BYTE PTR [rax],al
   14005b4b1:	cli    
   14005b4b2:	or     BYTE PTR [rax+0x0],al
   14005b4b5:	add    BYTE PTR [rax],al
   14005b4b7:	add    BYTE PTR [rax],al
   14005b4b9:	add    BYTE PTR [rax],al
   14005b4bb:	add    BYTE PTR [rax-0x64],al
   14005b4be:	or     al,0x40
	...
   14005b4c8:	push   rax
   14005b4c9:	ret    
   14005b4ca:	cmovo  eax,DWORD PTR [rax]
   14005b4cd:	add    BYTE PTR [rax],al
   14005b4cf:	add    BYTE PTR [rax],al
   14005b4d1:	add    BYTE PTR [rax],al
   14005b4d3:	add    BYTE PTR [rsp+rsi*8],ah
   14005b4d6:	adc    al,BYTE PTR [rax+0x0]
   14005b4d9:	add    BYTE PTR [rax],al
   14005b4db:	add    BYTE PTR [rax],al
   14005b4dd:	add    BYTE PTR [rax],al
   14005b4df:	adc    BYTE PTR [rsi+0x401698],0x0
   14005b4e6:	add    BYTE PTR [rax],al
   14005b4e8:	add    BYTE PTR [rax],al
   14005b4ea:	add    BYTE PTR [rax],ah
   14005b4ec:	mov    esp,0x4019be
   14005b4f1:	add    BYTE PTR [rax],al
   14005b4f3:	add    BYTE PTR [rax],al
   14005b4f5:	add    al,0xbf
   14005b4f7:	leave  
   14005b4f8:	sbb    ecx,DWORD PTR [rsi+0x4034]
   14005b4fe:	add    BYTE PTR [rcx+0x1bcecced],ah
   14005b504:	ret    0x4ed3
   14005b507:	and    al,sil
   14005b50a:	sahf   
   14005b50b:	mov    ch,0x70
   14005b50d:	sub    ebp,DWORD PTR [rax+0x699dc5ad]
   14005b513:	rex rcr BYTE PTR [rbp-0x3],1
   14005b517:	and    eax,0x4f8e1ae5
   14005b51c:	sbb    ebx,ebp
   14005b51e:	add    DWORD PTR [rax+0x71],0xffffff96
   14005b522:	xlat   BYTE PTR ds:[rbx]
   14005b523:	xchg   ebp,eax
   14005b524:	rex.XB (bad) 
   14005b526:	add    eax,0x9eaf298d
   14005b52b:	rex stc 
   14005b52d:	mov    edi,0x81ed44a0
   14005b532:	adc    cl,BYTE PTR [rdi+0x40b98281]
   14005b538:	mov    edi,0xcfa6d53c
   14005b53d:	dec    DWORD PTR [rcx+0x1f]
   14005b540:	js     0x14005b504
   14005b542:	rol    DWORD PTR [rax+0x6f],cl
   14005b545:	(bad)  
   14005b546:	loopne 0x14005b4d4
   14005b548:	jmp    0xfa4d7ecd
   14005b54d:	xchg   ebx,eax
   14005b54e:	test   al,0x41
   14005b550:	mov    esp,0x27556b85
   14005b555:	cmp    DWORD PTR [rbp+0x7ce070f7],ecx
   14005b55b:	rex.X mov esp,0xf9de8edd
   14005b561:	popf   
   14005b562:	sti    
   14005b563:	jmp    0x14005b5e3
   14005b565:	stos   BYTE PTR es:[rdi],al
   14005b566:	push   rcx
   14005b567:	rex.XB movabs eax,ds:0x842f29f2cce376e6
   14005b571:	and    DWORD PTR [rsi],0x17102844
   14005b577:	stos   BYTE PTR es:[rdi],al
   14005b578:	clc    
   14005b579:	scas   al,BYTE PTR es:[rdi]
   14005b57a:	adc    bl,ah
   14005b57c:	(bad)
   14005b57f:	rex.R jmp 0x14005b529
   14005b582:	(bad)  
   14005b583:	repz imul ebx
   14005b586:	loope  0x14005b5d2
   14005b588:	jp     0x14005b51f
   14005b58a:	iret   
   14005b58b:	rex.RB
   14005b58c:	gs int3 
   14005b58e:	(bad)  
   14005b58f:	xchg   ecx,eax
   14005b590:	(bad)  
   14005b591:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005b592:	scas   al,BYTE PTR es:[rdi]
   14005b593:	movabs al,ds:0xc17650d46a3e319
   14005b59c:	jne    0x14005b51f
   14005b59e:	xchg   BYTE PTR [rbp+0x76],dh
   14005b5a1:	leave  
   14005b5a2:	rex.W
   14005b5a3:	rex.WRB pop r8
   14005b5a5:	rex.X in al,0xa7
   14005b5a8:	xchg   ebx,eax
   14005b5a9:	cmp    DWORD PTR [rbx],edi
   14005b5ab:	xor    eax,0x53edb2b8
   14005b5b0:	rex.WRB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14005b5b2:	in     eax,0x5d
   14005b5b4:	cmp    eax,0x8b3b5dc5
   14005b5b9:	sahf   
   14005b5ba:	xchg   edx,eax
   14005b5bb:	pop    rdx
   14005b5bc:	call   FWORD PTR [rbp-0x5a]
   14005b5bf:	lock movabs eax,ds:0xd161378ca554c020
   14005b5c9:	std    
   14005b5ca:	mov    ebx,DWORD PTR [rdx-0x75]
   14005b5cd:	fsub   DWORD PTR [rip+0xffffffffdbf9895d]        # 0x11bff3f30
   14005b5d3:	stos   BYTE PTR es:[edi],al
   14005b5d5:	xchg   ebp,eax
   14005b5d6:	clc    
   14005b5d7:	repz (bad) 
   14005b5d9:	mov    edi,0xdd5dc8a2
   14005b5de:	sub    BYTE PTR [rsi+0x4c],0xc9
   14005b5e2:	fwait
   14005b5e3:	xchg   edi,eax
   14005b5e4:	and    BYTE PTR [rdx-0x3b9fadfe],cl
   14005b5ea:	and    eax,0x75
   14005b5ef:	add    ch,cl
   14005b5f1:	int3   
   14005b5f2:	int    0xcc
   14005b5f4:	int3   
   14005b5f5:	int3   
   14005b5f6:	int3   
   14005b5f7:	int3   
   14005b5f8:	int3   
   14005b5f9:	int3   
   14005b5fa:	sti    
   14005b5fb:	(bad)  
   14005b5fc:	jno    0x14005b63b
   14005b5fe:	or     dl,bh
   14005b600:	movabs ds:0x5a3ff8a3d70a3d70,eax
   14005b609:	fs cmp ebx,edi
   14005b60c:	rex.WRXB lea r10,[r15-0xa7ced92]
   14005b613:	(bad)  
   14005b614:	ret    
   14005b615:	shr    DWORD PTR [riz*2+0x1758e219],cl
   14005b61c:	mov    bh,0xd1
   14005b61e:	icebp  
   14005b61f:	(bad)  
   14005b620:	ror    BYTE PTR [rdi],1
   14005b622:	and    eax,DWORD PTR [rdi+rax*2-0x3a53b8e5]
   14005b629:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005b62a:	out    dx,al
   14005b62b:	(bad)  
   14005b62c:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005b62e:	mov    dh,0x69
   14005b630:	ins    BYTE PTR es:[rdi],dx
   14005b631:	scas   eax,DWORD PTR es:[rdi]
   14005b632:	add    eax,0xeb8637bd
   14005b637:	(bad)  
   14005b638:	xor    edi,DWORD PTR [rip+0xffffffffe57a42bc]        # 0x1257ff8fa
   14005b63e:	(bad)  
   14005b63f:	xchg   esp,eax
   14005b640:	mov    edi,0xc23fe7d6
   14005b645:	std    
   14005b646:	std    
   14005b647:	(bad)  
   14005b648:	(bad)  
   14005b649:	test   BYTE PTR [rcx],dl
   14005b64b:	ja     0x14005b619
   14005b64d:	stos   DWORD PTR es:[rdi],eax
   14005b64e:	in     al,0x3f
   14005b650:	(bad)  
   14005b651:	rex.WR pop rbx
   14005b653:	loope  0x14005b6a2
   14005b655:	(bad)  
   14005b656:	mov    esi,0xc9e69594
   14005b65b:	(bad)  
   14005b65c:	xchg   edx,eax
   14005b65d:	(bad)  
   14005b65e:	push   rbx
   14005b65f:	cmp    esi,DWORD PTR [rbp+0x44]
   14005b662:	int    0x14
   14005b664:	mov    esi,0xde3faf9a
   14005b669:	addr32 mov edx,0xad453994
   14005b66f:	(bad)  
   14005b670:	mov    cl,0xcf
   14005b672:	xchg   esp,eax
   14005b673:	(bad)  
   14005b674:	and    al,0x23
   14005b676:	(bad)  
   14005b677:	loop   0x14005b635
   14005b679:	mov    edx,0x8b61313b
   14005b67e:	jp     0x14005b6bf
   14005b680:	(bad)  
   14005b681:	push   rbp
   14005b682:	pop    rcx
   14005b683:	sar    DWORD PTR [rsi-0x4f],0x53
   14005b687:	jl     0x14005b69b
   14005b689:	mov    ebx,0xeed73f5f
   14005b68e:	(bad)  
   14005b68f:	lea    eax,[rsi]
   14005b691:	mov    esi,0xfb158592
   14005b696:	rex.R (bad) 
   14005b698:	and    al,0x3f
   14005b69a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005b69b:	jmp    0x12a2d5bd9
   14005b6a0:	jg     0x14005b64a
   14005b6a2:	sub    bh,BYTE PTR [rdi]
   14005b6a4:	jge    0x14005b652
   14005b6a6:	movabs eax,ds:0x55ddd0467c64bce4
   14005b6af:	movsxd edi,DWORD PTR ds:[rbx+0x6]
   14005b6b3:	int3   
   14005b6b4:	and    edx,DWORD PTR [rdi+rsi*2-0x7d]
   14005b6b8:	call   QWORD PTR [rcx-0x56ec27f]
   14005b6be:	cmp    bl,BYTE PTR [rcx]
   14005b6c0:	jp     0x14005b725
   14005b6c2:	and    eax,0xacc03143
   14005b6c7:	cmp    al,0x21
   14005b6c9:	mov    ecx,edx
   14005b6cb:	cmp    BYTE PTR [rdx+0xb89747],al
   14005b6d1:	std    
   14005b6d2:	xlat   BYTE PTR ds:[rbx]
   14005b6d3:	cmp    ebx,esp
   14005b6d5:	mov    BYTE PTR [rax+0x8],bl
   14005b6d8:	sbb    esi,DWORD PTR [rcx-0x59791c18]
   14005b6de:	add    edi,DWORD PTR [rbx]
   14005b6e0:	mov    BYTE PTR [rbp+rax*2-0x6649f8be],0x75
   14005b6e8:	(bad)  
   14005b6e9:	fld    TBYTE PTR [rsi]
   14005b6eb:	cmp    dh,BYTE PTR [rbx]
   14005b6ed:	jno    0x14005b70b
   14005b6ef:	shl    BYTE PTR [rbx],cl
   14005b6f1:	(bad)  [rdx]
   14005b6f3:	out    dx,al
   14005b6f4:	xchg   r8,rax
   14005b6f6:	pop    rdx
   14005b6f7:	cmp    DWORD PTR [rsi+0x57c0be87],esp
   14005b6fd:	fisub  DWORD PTR [rbp-0x4a5d597e]
   14005b703:	xor    ah,dl
   14005b705:	push   0x52a711b2
   14005b70a:	lahf   
   14005b70b:	rex.R pop rcx
   14005b70d:	mov    bh,0x10
   14005b70f:	sub    al,0x25
   14005b711:	rex.WB in al,0x2d
   14005b714:	ss xor al,0x4f
   14005b717:	push   rbx
   14005b718:	scas   al,BYTE PTR es:[rdi]
   14005b719:	(bad)  
   14005b71a:	imul   esp,DWORD PTR [rip+0xffffffffa404598f],0xffffffc0        # 0xe40a10b0
   14005b721:	faddp  st(2),st
   14005b723:	jge    0x14005b720
   14005b725:	call   0x127a3d5f0
   14005b72a:	mov    BYTE PTR [rdx+0x57],bl
   14005b72d:	xchg   ecx,eax
   14005b72e:	cmp    al,0xbf
   14005b730:	push   rax
   14005b731:	and    DWORD PTR [rdx],0x18
   14005b734:	rex.WRX
   14005b735:	rex.WXB
   14005b736:	gs (bad) 
   14005b738:	std    
   14005b739:	or     DWORD PTR [rdi+0x7d9406af],0x11
   14005b740:	in     al,0x2d
   14005b742:	ficomp WORD PTR [rdi+0x4c8d2ce]
   14005b748:	frstor [rsi+0xad8]
	...

Disassembly of section .pdata:

000000014005f000 <.pdata>:
   14005f000:	add    al,0x10
   14005f002:	add    BYTE PTR [rax],al
   14005f004:	jns    0x14005f016
   14005f006:	add    BYTE PTR [rax],al
   14005f008:	int3   
   14005f009:	pop    rbp
   14005f00a:	add    eax,0x108800
   14005f00f:	add    BYTE PTR [rsi-0x2bfffff0],ch
   14005f015:	retf   0x4
   14005f018:	mov    esp,0xf2000010
   14005f01d:	adc    BYTE PTR [rax],al
   14005f01f:	add    BYTE PTR [rcx*1+0x11100005],bl
   14005f026:	add    BYTE PTR [rax],al
   14005f028:	mov    dl,BYTE PTR [rcx]
   14005f02a:	add    BYTE PTR [rax],al
   14005f02c:	in     al,0xe3
   14005f02e:	add    al,0x0
   14005f030:	mov    WORD PTR [rcx],ss
   14005f032:	add    BYTE PTR [rax],al
   14005f034:	mov    edi,0xc4000011
   14005f039:	jrcxz  0x14005f03f
   14005f03b:	add    al,al
   14005f03d:	adc    DWORD PTR [rax],eax
   14005f03f:	add    al,ah
   14005f041:	adc    DWORD PTR [rax],eax
   14005f043:	add    BYTE PTR [rbx+riz*8+0x11e80004],ah
   14005f04a:	add    BYTE PTR [rax],al
   14005f04c:	adc    r8b,BYTE PTR [r8]
   14005f04f:	add    BYTE PTR [rbx+riz*8+0x12480004],al
   14005f056:	add    BYTE PTR [rax],al
   14005f058:	jnp    0x14005f06c
   14005f05a:	add    BYTE PTR [rax],al
   14005f05c:	pop    rsp
   14005f05d:	jrcxz  0x14005f063
   14005f05f:	add    BYTE PTR [rdx+rdx*1+0x12fe0000],al
   14005f066:	add    BYTE PTR [rax],al
   14005f068:	cmp    bl,ah
   14005f06a:	add    al,0x0
   14005f06c:	add    BYTE PTR [rbx],dl
   14005f06e:	add    BYTE PTR [rax],al
   14005f070:	(bad)  
   14005f071:	adc    eax,DWORD PTR [rax]
   14005f073:	add    al,ch
   14005f075:	(bad)  
   14005f076:	add    al,0x0
   14005f078:	rex adc eax,DWORD PTR [rax]
   14005f07b:	add    BYTE PTR [rbp-0xfffffed],bl
   14005f081:	loop   0x14005f087
   14005f083:	add    BYTE PTR [rax+0x20000013],ah
   14005f089:	sbb    BYTE PTR [rax],al
   14005f08b:	add    BYTE PTR [rax],ch
   14005f08d:	loop   0x14005f093
   14005f08f:	add    BYTE PTR [rax],ah
   14005f091:	sbb    BYTE PTR [rax],al
   14005f093:	add    BYTE PTR [rdi],bh
   14005f095:	sbb    BYTE PTR [rax],al
   14005f097:	add    BYTE PTR [rax],cl
   14005f099:	loop   0x14005f09f
   14005f09b:	add    BYTE PTR [rax+0x18],al
   14005f09e:	add    BYTE PTR [rax],al
   14005f0a0:	push   rbx
   14005f0a1:	and    BYTE PTR [rax],al
   14005f0a3:	add    al,bl
   14005f0a5:	loopne 0x14005f0ab
   14005f0a7:	add    BYTE PTR [rax+riz*1+0x0],dl
   14005f0ab:	add    BYTE PTR [rdi+0x20],ch
   14005f0ae:	add    BYTE PTR [rax],al
   14005f0b0:	mov    eax,0x700004e0
   14005f0b5:	and    BYTE PTR [rax],al
   14005f0b7:	add    BYTE PTR [rbp-0x5fffffe0],dl
   14005f0bd:	loopne 0x14005f0c3
   14005f0bf:	add    BYTE PTR [rax-0x19ffffe0],bl
   14005f0c5:	sub    BYTE PTR [rax],al
   14005f0c7:	add    BYTE PTR [rax-0x17fffb21],cl
   14005f0cd:	sub    BYTE PTR [rax],al
   14005f0cf:	add    al,ah
   14005f0d1:	sub    al,0x0
   14005f0d3:	add    BYTE PTR [rax-0x22],ah
   14005f0d6:	add    al,0x0
   14005f0d8:	loopne 0x14005f106
   14005f0da:	add    BYTE PTR [rax],al
   14005f0dc:	rex.W xor BYTE PTR [rax],al
   14005f0df:	add    BYTE PTR [rbp+rbx*8+0x30480004],bl
   14005f0e6:	add    BYTE PTR [rax],al
   14005f0e8:	jbe    0x14005f11a
   14005f0ea:	add    BYTE PTR [rax],al
   14005f0ec:	(bad)  
   14005f0ed:	retf   0x4
   14005f0f0:	js     0x14005f122
   14005f0f2:	add    BYTE PTR [rax],al
   14005f0f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005f0f5:	xor    BYTE PTR [rax],al
   14005f0f7:	add    ah,dl
   14005f0f9:	retf   0x4
   14005f0fc:	test   al,0x30
   14005f0fe:	add    BYTE PTR [rax],al
   14005f100:	sbb    eax,0x84000032
   14005f105:	fld    QWORD PTR [rax+rax*1]
   14005f108:	and    BYTE PTR [rdx],dh
   14005f10a:	add    BYTE PTR [rax],al
   14005f10c:	rex.WX xor al,BYTE PTR [rax]
   14005f10f:	add    ah,dl
   14005f111:	retf   0x4
   14005f114:	rex.WR xor r8b,BYTE PTR [rax]
   14005f117:	add    BYTE PTR [rcx+0x33],bh
   14005f11a:	add    BYTE PTR [rax],al
   14005f11c:	nop
   14005f11d:	int3   
   14005f11e:	add    al,0x0
   14005f120:	jl     0x14005f155
   14005f122:	add    BYTE PTR [rax],al
   14005f124:	ret    
   14005f125:	xor    al,0x0
   14005f127:	add    BYTE PTR [rax],cl
   14005f129:	fld    QWORD PTR [rax+rax*1]
   14005f12c:	(bad)  
   14005f12d:	xor    al,0x0
   14005f12f:	add    bl,al
   14005f131:	xor    eax,0xdc8c0000
   14005f136:	add    al,0x0
   14005f138:	(bad)  
   14005f139:	xor    eax,0x36c40000
   14005f13e:	add    BYTE PTR [rax],al
   14005f140:	pushf  
   14005f141:	in     al,dx
   14005f142:	add    al,0x0
   14005f144:	(bad)  
   14005f145:	add    BYTE PTR ss:[rax],al
   14005f148:	cmc    
   14005f149:	(bad)  
   14005f14a:	add    BYTE PTR [rax],al
   14005f14c:	or     ch,cl
   14005f14e:	add    al,0x0
   14005f150:	clc    
   14005f151:	(bad)  
   14005f152:	add    BYTE PTR [rax],al
   14005f154:	lods   eax,DWORD PTR ds:[rsi]
   14005f155:	cmp    BYTE PTR [rax],al
   14005f157:	add    BYTE PTR [rax],dl
   14005f159:	fadd   QWORD PTR [rax+rax*1]
   14005f15c:	mov    al,0x38
   14005f15e:	add    BYTE PTR [rax],al
   14005f160:	sar    DWORD PTR [rcx],cl
   14005f162:	add    BYTE PTR [rax],al
   14005f164:	nop
   14005f165:	int3   
   14005f166:	add    al,0x0
   14005f168:	(bad)  
   14005f169:	cmp    DWORD PTR [rax],eax
   14005f16b:	add    BYTE PTR [rbx],dl
   14005f16d:	cmp    eax,DWORD PTR [rax]
   14005f16f:	add    BYTE PTR [rbp+rbx*8+0x3b140004],al
   14005f176:	add    BYTE PTR [rax],al
   14005f178:	rex.WB cmp al,0x0
   14005f17b:	add    ah,dh
   14005f17d:	fiadd  DWORD PTR [rax+rax*1]
   14005f180:	rex.WR cmp al,0x0
   14005f183:	add    bh,bh
   14005f185:	cmp    al,0x0
   14005f187:	add    BYTE PTR [rax-0x26],bh
   14005f18a:	add    al,0x0
   14005f18c:	add    BYTE PTR [rip+0x3da00000],bh        # 0x17da5f192
   14005f192:	add    BYTE PTR [rax],al
   14005f194:	cld    
   14005f195:	fld    DWORD PTR [rax+rax*1]
   14005f198:	movabs al,ds:0xe800003e3b00003d
   14005f1a1:	(bad)  
   14005f1a2:	add    al,0x0
   14005f1a4:	cmp    al,0x3e
   14005f1a6:	add    BYTE PTR [rax],al
   14005f1a8:	pop    rcx
   14005f1a9:	(bad)  
   14005f1aa:	add    BYTE PTR [rax],al
   14005f1ac:	call   0x19c05f689
   14005f1b1:	(bad)  
   14005f1b2:	add    BYTE PTR [rax],al
   14005f1b4:	or     al,0x40
   14005f1b6:	add    BYTE PTR [rax],al
   14005f1b8:	pushf  
   14005f1b9:	in     al,dx
   14005f1ba:	add    al,0x0
   14005f1bc:	or     al,0x40
   14005f1be:	add    BYTE PTR [rax],al
   14005f1c0:	add    BYTE PTR es:[rax],al
   14005f1c4:	int3   
   14005f1c5:	(bad)  
   14005f1c6:	add    al,0x0
   14005f1c8:	sub    BYTE PTR [rax+0x0],al
   14005f1cb:	add    BYTE PTR [rbp-0x6fffffc0],dh
   14005f1d1:	int3   
   14005f1d2:	add    al,0x0
   14005f1d4:	mov    eax,0x62000040
   14005f1d9:	add    BYTE PTR [r8],al
   14005f1dc:	test   ch,bl
   14005f1de:	add    al,0x0
   14005f1e0:	add    BYTE PTR fs:[r8],al
   14005f1e4:	fld    QWORD PTR [rcx+0x0]
   14005f1e7:	add    BYTE PTR [rax-0x1ffffad2],dl
   14005f1ed:	add    BYTE PTR [r8],al
   14005f1f0:	push   rax
   14005f1f1:	rex.X add BYTE PTR [rax],al
   14005f1f4:	add    al,0xec
   14005f1f6:	add    al,0x0
   14005f1f8:	push   rax
   14005f1f9:	rex.X add BYTE PTR [rax],al
   14005f1fc:	push   rbx
   14005f1fd:	rex.XB add BYTE PTR [r8],al
   14005f200:	call   0x19405f6d9
   14005f205:	rex.XB add BYTE PTR [r8],al
   14005f208:	jl     0x14005f24f
   14005f20a:	add    BYTE PTR [rax],al
   14005f20c:	mov    ah,0xea
   14005f20e:	add    al,0x0
   14005f210:	jl     0x14005f257
   14005f212:	add    BYTE PTR [rax],al
   14005f214:	stos   DWORD PTR es:[rdi],eax
   14005f215:	add    BYTE PTR [r8],r8b
   14005f218:	call   0xec05f6f1
   14005f21d:	add    BYTE PTR [r8],r8b
   14005f220:	(bad)  
   14005f221:	rex.RXB add BYTE PTR [r8],r8b
   14005f224:	sub    cl,0x4
   14005f227:	add    BYTE PTR [rax+0x47],ah
   14005f22a:	add    BYTE PTR [rax],al
   14005f22c:	xchg   ebx,eax
   14005f22d:	rex.RXB add BYTE PTR [r8],r8b
   14005f230:	call   0xd405f709
   14005f235:	rex.RXB add BYTE PTR [r8],r8b
   14005f238:	mov    esp,0x80000056
   14005f23d:	out    0x4,eax
   14005f23f:	add    BYTE PTR [rsi+rdx*2+0x56e50000],bh
   14005f246:	add    BYTE PTR [rax],al
   14005f248:	int3   
   14005f249:	(bad)  
   14005f24a:	add    al,0x0
   14005f24c:	call   0x15105f2a7
   14005f251:	push   rdi
   14005f252:	add    BYTE PTR [rax],al
   14005f254:	int3   
   14005f255:	(bad)  
   14005f256:	add    al,0x0
   14005f258:	adc    al,0x57
   14005f25a:	add    BYTE PTR [rax],al
   14005f25c:	push   r15
   14005f25e:	add    BYTE PTR [rax],al
   14005f260:	int3   
   14005f261:	(bad)  
   14005f262:	add    al,0x0
   14005f264:	rex.R push rdi
   14005f266:	add    BYTE PTR [rax],al
   14005f268:	jmp    0x14005f2c4
   14005f26a:	add    BYTE PTR [rax],al
   14005f26c:	(bad)  
   14005f26d:	retf   0x4
   14005f270:	in     al,dx
   14005f271:	pop    rdx
   14005f272:	add    BYTE PTR [rax],al
   14005f274:	or     ebx,DWORD PTR [rbx+0x0]
   14005f277:	add    ah,cl
   14005f279:	(bad)  
   14005f27a:	add    al,0x0
   14005f27c:	or     al,0x5b
   14005f27e:	add    BYTE PTR [rax],al
   14005f280:	out    0x5b,al
   14005f282:	add    BYTE PTR [rax],al
   14005f284:	jo     0x14005f26d
   14005f286:	add    al,0x0
   14005f288:	call   0x12505f2e8
   14005f28d:	add    BYTE PTR fs:[rax],al
   14005f290:	sub    bh,ah
   14005f292:	add    al,0x0
   14005f294:	call   0x11e05f2fd
   14005f299:	push   0xffffffffe6700000
   14005f29e:	add    al,0x0
   14005f2a0:	loopne 0x14005f30a
   14005f2a2:	add    BYTE PTR [rax],al
   14005f2a4:	(bad)  
   14005f2a5:	push   0x0
   14005f2a7:	add    BYTE PTR [rsi+riz*8],ch
   14005f2aa:	add    al,0x0
   14005f2ac:	or     BYTE PTR [rdx+0x0],ch
   14005f2af:	add    BYTE PTR [rsi+0x6a],al
   14005f2b2:	add    BYTE PTR [rax],al
   14005f2b4:	or     al,0xe6
   14005f2b6:	add    al,0x0
   14005f2b8:	rex.W push 0x0
   14005f2bb:	add    BYTE PTR [rsi-0x6fffff96],bh
   14005f2c1:	int3   
   14005f2c2:	add    al,0x0
   14005f2c4:	shr    BYTE PTR [rdx+0x0],0x0
   14005f2c8:	out    dx,al
   14005f2c9:	push   0x0
   14005f2cb:	add    ah,dh
   14005f2cd:	in     eax,0x4
   14005f2cf:	add    al,dh
   14005f2d1:	push   0x0
   14005f2d3:	add    BYTE PTR [rbx+rbp*2-0x1a2c0000],cl
   14005f2da:	add    al,0x0
   14005f2dc:	mov    WORD PTR [rbx+0x0],gs
   14005f2df:	add    BYTE PTR [rax],ch
   14005f2e1:	ins    BYTE PTR es:[rdi],dx
   14005f2e2:	add    BYTE PTR [rax],al
   14005f2e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f2e5:	in     eax,0x4
   14005f2e7:	add    BYTE PTR [rax],ch
   14005f2e9:	ins    BYTE PTR es:[rdi],dx
   14005f2ea:	add    BYTE PTR [rax],al
   14005f2ec:	fisubr DWORD PTR [rax+rax*1+0x0]
   14005f2f0:	push   0xffffffffdc0004e5
   14005f2f5:	ins    BYTE PTR es:[rdi],dx
   14005f2f6:	add    BYTE PTR [rax],al
   14005f2f8:	cld    
   14005f2f9:	ins    BYTE PTR es:[rdi],dx
   14005f2fa:	add    BYTE PTR [rax],al
   14005f2fc:	int3   
   14005f2fd:	(bad)  
   14005f2fe:	add    al,0x0
   14005f300:	cld    
   14005f301:	ins    BYTE PTR es:[rdi],dx
   14005f302:	add    BYTE PTR [rax],al
   14005f304:	movd   mm0,DWORD PTR [rax]
   14005f307:	add    BYTE PTR [rbp*1+0x6e100005],ch
   14005f30e:	add    BYTE PTR [rax],al
   14005f310:	push   rsp
   14005f311:	outs   dx,DWORD PTR ds:[rsi]
   14005f312:	add    BYTE PTR [rax],al
   14005f314:	test   ch,bl
   14005f316:	add    al,0x0
   14005f318:	push   rsp
   14005f319:	outs   dx,DWORD PTR ds:[rsi]
   14005f31a:	add    BYTE PTR [rax],al
   14005f31c:	test   DWORD PTR [rax+0x0],esi
   14005f31f:	add    BYTE PTR [rax],cl
   14005f321:	int    0x4
   14005f323:	add    BYTE PTR [rax-0x68ffff90],cl
   14005f329:	jo     0x14005f32b
   14005f32b:	add    ah,cl
   14005f32d:	(bad)  
   14005f32e:	add    al,0x0
   14005f330:	cwde   
   14005f331:	jo     0x14005f333
   14005f333:	add    dh,dh
   14005f335:	jo     0x14005f337
   14005f337:	add    ah,cl
   14005f339:	(bad)  
   14005f33a:	add    al,0x0
   14005f33c:	clc    
   14005f33d:	jo     0x14005f33f
   14005f33f:	add    BYTE PTR [rsi-0x7bffff8f],bl
   14005f345:	fld    QWORD PTR [rax+rax*1]
   14005f348:	movabs al,ds:0xd4000071eb000071
   14005f351:	retf   0x4
   14005f354:	in     al,dx
   14005f355:	jno    0x14005f357
   14005f357:	add    dl,al
   14005f359:	jb     0x14005f35b
   14005f35b:	add    BYTE PTR [rbp+riz*8+0x4],dl
   14005f35f:	add    ah,al
   14005f361:	jb     0x14005f363
   14005f363:	add    ah,ch
   14005f365:	jb     0x14005f367
   14005f367:	add    ah,dl
   14005f369:	retf   0x4
   14005f36c:	in     al,dx
   14005f36d:	jb     0x14005f36f
   14005f36f:	add    BYTE PTR [rax+0x73],ch
   14005f372:	add    BYTE PTR [rax],al
   14005f374:	xor    al,0xe5
   14005f376:	add    al,0x0
   14005f378:	push   0x7a000073
   14005f37d:	je     0x14005f37f
   14005f37f:	add    ah,bl
   14005f381:	in     al,0x4
   14005f383:	add    BYTE PTR [rsp+rsi*2+0x0],bh
   14005f387:	add    BYTE PTR [rsi],dh
   14005f389:	jne    0x14005f38b
   14005f38b:	add    BYTE PTR [rax+0x380004e4],dl
   14005f391:	jne    0x14005f393
   14005f393:	add    BYTE PTR [rcx+0x10000076],bl
   14005f399:	in     al,0x4
   14005f39b:	add    BYTE PTR [rsi+rsi*2+0x770c0000],bl
   14005f3a2:	add    BYTE PTR [rax],al
   14005f3a4:	mov    WORD PTR [rcx],es
   14005f3a6:	add    eax,0x770c00
   14005f3ab:	add    BYTE PTR [rcx+0x77],cl
   14005f3ae:	add    BYTE PTR [rax],al
   14005f3b0:	ins    BYTE PTR es:[rdi],dx
   14005f3b1:	add    DWORD PTR [rip+0x774c00],eax        # 0x1407d3fb7
   14005f3b7:	add    BYTE PTR [rcx+0x4c000077],cl
   14005f3bd:	add    DWORD PTR [rip+0x778c00],eax        # 0x1407d7fc3
   14005f3c3:	add    cl,cl
   14005f3c5:	ja     0x14005f3c7
   14005f3c7:	add    BYTE PTR [rcx+rax*1],ah
   14005f3ca:	add    eax,0x77cc00
   14005f3cf:	add    BYTE PTR [rcx],cl
   14005f3d1:	js     0x14005f3d3
   14005f3d3:	add    BYTE PTR [rcx+rax*1],al
   14005f3d6:	add    eax,0x780c00
   14005f3db:	add    BYTE PTR [rcx+0x78],cl
   14005f3de:	add    BYTE PTR [rax],al
   14005f3e0:	in     al,0x0
   14005f3e2:	add    eax,0x784c00
   14005f3e7:	add    BYTE PTR [rdx+0x6c00007b],ah
   14005f3ed:	add    BYTE PTR [rip+0x7ba400],al        # 0x1408197f3
   14005f3f3:	add    cl,ch
   14005f3f5:	jnp    0x14005f3f7
   14005f3f7:	add    ah,ah
   14005f3f9:	inc    DWORD PTR [rax+rax*1]
   14005f3fc:	in     al,dx
   14005f3fd:	jnp    0x14005f3ff
   14005f3ff:	add    bl,ch
   14005f401:	add    DWORD PTR [rax],0x0
   14005f404:	rex inc BYTE PTR [rax+rax*1]
   14005f408:	in     al,dx
   14005f409:	add    DWORD PTR [rax],0x0
   14005f40c:	ins    DWORD PTR es:[rdi],dx
   14005f40d:	nop
   14005f40e:	add    BYTE PTR [rax],al
   14005f410:	lock sti 
   14005f412:	add    al,0x0
   14005f414:	jo     0x14005f3a6
   14005f416:	add    BYTE PTR [rax],al
   14005f418:	jrcxz  0x14005f3ab
   14005f41a:	add    BYTE PTR [rax],al
   14005f41c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f41d:	sti    
   14005f41e:	add    al,0x0
   14005f420:	in     al,0x91
   14005f422:	add    BYTE PTR [rax],al
   14005f424:	jns    0x14005f3b8
   14005f426:	add    BYTE PTR [rax],al
   14005f428:	nop
   14005f429:	int3   
   14005f42a:	add    al,0x0
   14005f42c:	jl     0x14005f3c0
   14005f42e:	add    BYTE PTR [rax],al
   14005f430:	add    eax,0xf0000095
   14005f435:	cli    
   14005f436:	add    al,0x0
   14005f438:	or     BYTE PTR [rbp-0x628a0000],dl
   14005f43e:	add    BYTE PTR [rax],al
   14005f440:	sar    cl,1
   14005f442:	add    al,0x0
   14005f444:	js     0x14005f3e3
   14005f446:	add    BYTE PTR [rax],al
   14005f448:	stc    
   14005f449:	popf   
   14005f44a:	add    BYTE PTR [rax],al
   14005f44c:	sbb    BYTE PTR [rdx],bl
   14005f44e:	add    eax,0x9dfc00
   14005f453:	add    BYTE PTR [rax-0x3bffff62],dh
   14005f459:	stc    
   14005f45a:	add    al,0x0
   14005f45c:	mov    al,0x9e
   14005f45e:	add    BYTE PTR [rax],al
   14005f460:	jmp    0x14005f403
   14005f462:	add    BYTE PTR [rax],al
   14005f464:	or     cl,bh
   14005f466:	add    al,0x0
   14005f468:	in     al,dx
   14005f469:	movabs eax,ds:0xf8500000a5b90000
   14005f472:	add    al,0x0
   14005f474:	mov    esp,0xb00000a5
   14005f479:	test   al,0x0
   14005f47b:	add    al,dl
   14005f47d:	test   DWORD PTR [rax+rax*1],0xa8b0
   14005f484:	iret   
   14005f485:	test   eax,0xf7940000
   14005f48a:	add    al,0x0
   14005f48c:	shr    BYTE PTR [rcx-0x558a0000],1
   14005f492:	add    BYTE PTR [rax],al
   14005f494:	xor    al,0x24
   14005f496:	add    eax,0xaa7800
   14005f49b:	add    BYTE PTR [rdx-0x55],cl
   14005f49e:	add    BYTE PTR [rax],al
   14005f4a0:	jl     0x14005f499
   14005f4a2:	add    al,0x0
   14005f4a4:	rex.WR stos QWORD PTR es:[rdi],rax
   14005f4a6:	add    BYTE PTR [rax],al
   14005f4a8:	(bad)  
   14005f4a9:	stos   DWORD PTR es:[rdi],eax
   14005f4aa:	add    BYTE PTR [rax],al
   14005f4ac:	sub    ah,dl
   14005f4ae:	add    al,0x0
   14005f4b0:	enter  0xab,0x0
   14005f4b4:	in     al,dx
   14005f4b5:	stos   DWORD PTR es:[rdi],eax
   14005f4b6:	add    BYTE PTR [rax],al
   14005f4b8:	(bad)  
   14005f4b9:	retf   0x4
   14005f4bc:	in     al,dx
   14005f4bd:	stos   DWORD PTR es:[rdi],eax
   14005f4be:	add    BYTE PTR [rax],al
   14005f4c0:	je     0x14005f46e
   14005f4c2:	add    BYTE PTR [rax],al
   14005f4c4:	ins    BYTE PTR es:[rdi],dx
   14005f4c5:	test   DWORD PTR [rax+rax*1],0xac74
   14005f4cc:	rex.WRB lods rax,QWORD PTR ds:[rsi]
   14005f4ce:	add    BYTE PTR [rax],al
   14005f4d0:	sbb    bh,dh
   14005f4d2:	add    al,0x0
   14005f4d4:	push   rax
   14005f4d5:	lods   eax,DWORD PTR ds:[rsi]
   14005f4d6:	add    BYTE PTR [rax],al
   14005f4d8:	add    dh,BYTE PTR [rax-0x9a00000]
   14005f4de:	add    al,0x0
   14005f4e0:	add    al,0xb0
   14005f4e2:	add    BYTE PTR [rax],al
   14005f4e4:	sub    DWORD PTR [rax-0x9c00000],esi
   14005f4ea:	add    al,0x0
   14005f4ec:	sub    al,0xb0
   14005f4ee:	add    BYTE PTR [rax],al
   14005f4f0:	mov    edx,0x940000ba
   14005f4f5:	repz add al,0x0
   14005f4f8:	mov    esp,0x10000ba
   14005f4fd:	mov    ebx,0xf30c0000
   14005f502:	add    al,0x0
   14005f504:	add    al,0xbb
   14005f506:	add    BYTE PTR [rax],al
   14005f508:	mov    bx,0x0
   14005f50c:	call   0x1a805f9e5
   14005f511:	mov    ebx,0xbbed0000
   14005f516:	add    BYTE PTR [rax],al
   14005f518:	nop
   14005f519:	int3   
   14005f51a:	add    al,0x0
   14005f51c:	lock mov ebx,0xc4010000
   14005f522:	add    BYTE PTR [rax],al
   14005f524:	or     cl,dh
   14005f526:	add    al,0x0
   14005f528:	add    al,0xc4
   14005f52a:	add    BYTE PTR [rax],al
   14005f52c:	rex.WX mov BYTE PTR [rax],0x0
   14005f530:	push   rsp
   14005f531:	lock add al,0x0
   14005f534:	rex.WR mov BYTE PTR [rax],0x0
   14005f538:	sbb    al,bh
   14005f53a:	add    BYTE PTR [rax],al
   14005f53c:	and    al,0xf0
   14005f53e:	add    al,0x0
   14005f540:	sbb    al,0xc7
   14005f542:	add    BYTE PTR [rax],al
   14005f544:	push   0xc0000ca
   14005f549:	out    dx,eax
   14005f54a:	add    al,0x0
   14005f54c:	push   0x290000ca
   14005f551:	int    0x0
   14005f553:	add    al,dh
   14005f555:	in     eax,dx
   14005f556:	add    al,0x0
   14005f558:	sub    al,0xcd
   14005f55a:	add    BYTE PTR [rax],al
   14005f55c:	test   eax,0xbc0000cd
   14005f561:	in     eax,dx
   14005f562:	add    al,0x0
   14005f564:	lods   al,BYTE PTR ds:[rsi]
   14005f565:	int    0x0
   14005f567:	add    BYTE PTR [rdx-0x6fffff32],al
   14005f56d:	int3   
   14005f56e:	add    al,0x0
   14005f570:	test   dh,cl
   14005f572:	add    BYTE PTR [rax],al
   14005f574:	movabs al,ds:0xa00004eda40000cf
   14005f57d:	iret   
   14005f57e:	add    BYTE PTR [rax],al
   14005f580:	adc    al,0xd1
   14005f582:	add    BYTE PTR [rax],al
   14005f584:	or     ch,cl
   14005f586:	add    al,0x0
   14005f588:	adc    al,0xd1
   14005f58a:	add    BYTE PTR [rax],al
   14005f58c:	(bad)  
   14005f58d:	(bad)  
   14005f58e:	add    BYTE PTR [rax],al
   14005f590:	mov    ebp,gs
   14005f592:	add    al,0x0
   14005f594:	rex (bad) 
   14005f596:	add    BYTE PTR [rax],al
   14005f598:	(bad)  
   14005f599:	(bad)  
   14005f59a:	add    BYTE PTR [rax],al
   14005f59c:	rex.R in eax,dx
   14005f59e:	add    al,0x0
   14005f5a0:	fs (bad) 
   14005f5a2:	add    BYTE PTR [rax],al
   14005f5a4:	or     dl,dh
   14005f5a6:	add    BYTE PTR [rax],al
   14005f5a8:	or     ch,ch
   14005f5aa:	add    al,0x0
   14005f5ac:	or     al,0xd6
   14005f5ae:	add    BYTE PTR [rax],al
   14005f5b0:	(bad)  
   14005f5b1:	(bad)  
   14005f5b2:	add    BYTE PTR [rax],al
   14005f5b4:	loopne 0x14005f5a2
   14005f5b6:	add    al,0x0
   14005f5b8:	(bad)  
   14005f5b9:	(bad)  
   14005f5ba:	add    BYTE PTR [rax],al
   14005f5bc:	jge    0x14005f595
   14005f5be:	add    BYTE PTR [rax],al
   14005f5c0:	lods   al,BYTE PTR ds:[rsi]
   14005f5c1:	in     al,dx
   14005f5c2:	add    al,0x0
   14005f5c4:	adc    bh,0x0
   14005f5c7:	add    BYTE PTR [rax],bl
   14005f5c9:	fadd   DWORD PTR [rax]
   14005f5cb:	add    BYTE PTR [rsp+rbp*8-0x27e7fffc],bl
   14005f5d2:	add    BYTE PTR [rax],al
   14005f5d4:	(bad)  
   14005f5d5:	fadd   DWORD PTR [rax]
   14005f5d7:	add    ah,cl
   14005f5d9:	(bad)  
   14005f5da:	add    al,0x0
   14005f5dc:	xor    al,bl
   14005f5de:	add    BYTE PTR [rax],al
   14005f5e0:	pop    rsp
   14005f5e1:	fld    DWORD PTR [rax]
   14005f5e3:	add    BYTE PTR [rax+0x5c0004d1],cl
   14005f5e9:	fld    DWORD PTR [rax]
   14005f5eb:	add    BYTE PTR [rsi],bh
   14005f5ed:	fiadd  DWORD PTR [rax]
   14005f5ef:	add    BYTE PTR [rax-0x14],al
   14005f5f2:	add    al,0x0
   14005f5f4:	rex fiadd DWORD PTR [rax]
   14005f5f7:	add    BYTE PTR [rcx],cl
   14005f5f9:	fild   DWORD PTR [rax]
   14005f5fb:	add    al,cl
   14005f5fd:	(bad)  
   14005f5fe:	add    al,0x0
   14005f600:	or     al,0xdb
   14005f602:	add    BYTE PTR [rax],al
   14005f604:	mov    edx,0x900000db
   14005f609:	int3   
   14005f60a:	add    al,0x0
   14005f60c:	mov    esp,0xe30000db
   14005f611:	fadd   QWORD PTR [rax]
   14005f613:	add    BYTE PTR [rax],ch
   14005f615:	in     al,dx
   14005f616:	add    al,0x0
   14005f618:	in     al,0xdc
   14005f61a:	add    BYTE PTR [rax],al
   14005f61c:	rex.X fld QWORD PTR [rax]
   14005f61f:	add    ah,cl
   14005f621:	(bad)  
   14005f622:	add    al,0x0
   14005f624:	rex.R fld QWORD PTR [rax]
   14005f627:	add    ah,ah
   14005f629:	fld    QWORD PTR [rax]
   14005f62b:	add    BYTE PTR [rbp+rbx*8-0x221bfffc],al
   14005f632:	add    BYTE PTR [rax],al
   14005f634:	(bad)  
   14005f635:	fiadd  WORD PTR [rax]
   14005f637:	add    ah,dl
   14005f639:	retf   0x4
   14005f63c:	xor    dh,bl
   14005f63e:	add    BYTE PTR [rax],al
   14005f640:	fcmovu st,st(6)
   14005f642:	add    BYTE PTR [rax],al
   14005f644:	sbb    ah,ch
   14005f646:	add    al,0x0
   14005f648:	(bad)  
   14005f64a:	add    BYTE PTR [rax],al
   14005f64c:	and    al,ah
   14005f64e:	add    BYTE PTR [rax],al
   14005f650:	cmp    BYTE PTR [rax*1+0xe02000],al
   14005f657:	add    BYTE PTR [rdi],ah
   14005f659:	loop   0x14005f65b
   14005f65b:	add    BYTE PTR [rax+0x28000504],dh
   14005f661:	loop   0x14005f663
   14005f663:	add    BYTE PTR [rdi+0x100000e4],cl
   14005f669:	add    eax,0xe4900005
   14005f66e:	add    BYTE PTR [rax],al
   14005f670:	in     eax,dx
   14005f671:	in     eax,0x0
   14005f673:	add    BYTE PTR [rax+0x4],dh
   14005f676:	add    eax,0xe5f000
   14005f67b:	add    BYTE PTR [rdi+riz*8+0x3840000],dl
   14005f682:	add    eax,0xe79400
   14005f687:	add    BYTE PTR [rax-0x18],ch
   14005f68a:	add    BYTE PTR [rax],al
   14005f68c:	in     al,dx
   14005f68d:	push   rsp
   14005f68e:	add    eax,0xe86800
   14005f693:	add    BYTE PTR [rcx+rbp*8],bl
   14005f696:	add    BYTE PTR [rax],al
   14005f698:	jo     0x14005f69d
   14005f69a:	add    eax,0xe91c00
   14005f69f:	add    ah,ch
   14005f6a1:	jmp    0x14341f6a6
   14005f6a6:	add    eax,0xe9ec00
   14005f6ab:	add    BYTE PTR [rcx-0x14],cl
   14005f6ae:	add    BYTE PTR [rax],al
   14005f6b0:	clc    
   14005f6b1:	add    al,BYTE PTR [rip+0xec4c00]        # 0x140f242b7
   14005f6b7:	add    BYTE PTR [rbp+rbp*8+0x0],dl
   14005f6bb:	add    BYTE PTR [rax+0x54000502],bl
   14005f6c1:	in     eax,dx
   14005f6c2:	add    BYTE PTR [rax],al
   14005f6c4:	test   eax,0xa00000f0
   14005f6c9:	add    DWORD PTR [rip+0xf0ac00],eax        # 0x140f6a2cf
   14005f6cf:	add    bl,bh
   14005f6d1:	lock add BYTE PTR [rax],al
   14005f6d4:	pushf  
   14005f6d5:	add    eax,DWORD PTR [rip+0xf0fc00]        # 0x140f6f2db
   14005f6db:	add    BYTE PTR [rax-0x1bffff0c],al
   14005f6e1:	add    eax,0xf4940005
   14005f6e6:	add    BYTE PTR [rax],al
   14005f6e8:	shl    ebp,cl
   14005f6ea:	add    BYTE PTR [rax],al
   14005f6ec:	mov    al,0x5
   14005f6ee:	add    eax,0xf5d400
   14005f6f3:	add    BYTE PTR [rdx-0xa],ch
   14005f6f6:	add    BYTE PTR [rax],al
   14005f6f8:	je     0x14005f701
   14005f6fa:	add    eax,0xf66c00
   14005f6ff:	add    BYTE PTR [rcx+0xc0000f7],bl
   14005f705:	(bad)  
   14005f706:	add    eax,0xf79c00
   14005f70b:	add    BYTE PTR [rax+rdi*8+0x7400000],ah
   14005f712:	add    eax,0xf8a400
   14005f717:	add    BYTE PTR [rcx+rdi*8+0x7400000],cl
   14005f71e:	add    eax,0xf98c00
   14005f723:	add    BYTE PTR [rbx],bl
   14005f725:	cli    
   14005f726:	add    BYTE PTR [rax],al
   14005f728:	mov    cl,dl
   14005f72a:	add    al,0x0
   14005f72c:	sbb    al,0xfa
   14005f72e:	add    BYTE PTR [rax],al
   14005f730:	(bad)  
   14005f731:	cli    
   14005f732:	add    BYTE PTR [rax],al
   14005f734:	call   0x1a005fc0d
   14005f739:	cli    
   14005f73a:	add    BYTE PTR [rax],al
   14005f73c:	and    ebx,edi
   14005f73e:	add    BYTE PTR [rax],al
   14005f740:	sub    al,0x7
   14005f742:	add    eax,0xfb2400
   14005f747:	add    BYTE PTR [rsi],ch
   14005f749:	cld    
   14005f74a:	add    BYTE PTR [rax],al
   14005f74c:	pop    rsp
   14005f74d:	(bad)  
   14005f74e:	add    eax,0xfc3000
   14005f753:	add    BYTE PTR [rax+0x40000fc],ah
   14005f759:	(bad)  
   14005f75a:	add    eax,0xfca000
   14005f75f:	add    BYTE PTR [rsi],bl
   14005f761:	std    
   14005f762:	add    BYTE PTR [rax],al
   14005f764:	rol    BYTE PTR [rdi],1
   14005f766:	add    eax,0xfd2000
   14005f76b:	add    BYTE PTR [rsi-0x73ffff03],ah
   14005f771:	(bad)  
   14005f772:	add    eax,0xfdb400
   14005f777:	add    dl,bl
   14005f779:	std    
   14005f77a:	add    BYTE PTR [rax],al
   14005f77c:	(bad)  
   14005f77d:	retf   0x4
   14005f780:	fdiv   st(5),st
   14005f782:	add    BYTE PTR [rax],al
   14005f784:	data16 inc BYTE PTR [rax]
   14005f787:	add    ah,dl
   14005f789:	retf   0x4
   14005f78c:	push   0xffffffffce0000fe
   14005f791:	inc    BYTE PTR [rax]
   14005f793:	add    al,ch
   14005f795:	(bad)  
   14005f796:	add    al,0x0
   14005f798:	sar    dh,1
   14005f79a:	add    BYTE PTR [rax],al
   14005f79c:	and    bh,bh
   14005f79e:	add    BYTE PTR [rax],al
   14005f7a0:	(bad)  
   14005f7a1:	retf   0x4
   14005f7a4:	and    al,0xff
   14005f7a6:	add    BYTE PTR [rax],al
   14005f7a8:	iret   
   14005f7a9:	add    BYTE PTR [rcx],al
   14005f7ab:	add    BYTE PTR [rax+0x8],ah
   14005f7ae:	add    eax,0x100d000
   14005f7b3:	add    BYTE PTR [rdx+0x1],ch
   14005f7b6:	add    DWORD PTR [rax],eax
   14005f7b8:	js     0x14005f7c2
   14005f7ba:	add    eax,0x1016c00
   14005f7bf:	add    bl,cl
   14005f7c1:	add    DWORD PTR [rcx],eax
   14005f7c3:	add    al,ch
   14005f7c5:	or     BYTE PTR [rip+0x101cc00],al        # 0x14107c3cb
   14005f7cb:	add    BYTE PTR [rbx+0x28000102],dl
   14005f7d1:	or     DWORD PTR [rip+0x1029400],eax        # 0x141088bd7
   14005f7d7:	add    BYTE PTR [rsi],ch
   14005f7d9:	add    eax,DWORD PTR [rcx]
   14005f7db:	add    BYTE PTR [rax+rcx*1+0x3300005],cl
   14005f7e2:	add    DWORD PTR [rax],eax
   14005f7e4:	mov    es,WORD PTR [rip+0x81c0001]        # 0x14821f7eb
   14005f7ea:	add    eax,0x1059000
   14005f7ef:	add    BYTE PTR [rdi+rax*1+0x1],ah
   14005f7f3:	add    BYTE PTR [rax],cl
   14005f7f5:	or     BYTE PTR [rip+0x1076400],al        # 0x1410d5bfb
   14005f7fb:	add    BYTE PTR [rdx+0x7],bh
   14005f7fe:	add    DWORD PTR [rax],eax
   14005f800:	adc    bl,dl
   14005f802:	add    al,0x0
   14005f804:	jl     0x14005f80d
   14005f806:	add    DWORD PTR [rax],eax
   14005f808:	xchg   edx,eax
   14005f809:	(bad)  
   14005f80a:	add    DWORD PTR [rax],eax
   14005f80c:	adc    bl,dl
   14005f80e:	add    al,0x0
   14005f810:	xchg   esp,eax
   14005f811:	(bad)  
   14005f812:	add    DWORD PTR [rax],eax
   14005f814:	mov    dh,0x8
   14005f816:	add    DWORD PTR [rax],eax
   14005f818:	sar    BYTE PTR [rax],0x5
   14005f81b:	add    BYTE PTR [rax+0x30000108],bh
   14005f821:	or     DWORD PTR [rcx],eax
   14005f823:	add    ah,cl
   14005f825:	pop    rbp
   14005f826:	add    eax,0x1093000
   14005f82b:	add    BYTE PTR [rsi+0x1c000109],dh
   14005f831:	or     eax,0x9b80005
   14005f836:	add    DWORD PTR [rax],eax
   14005f838:	out    dx,al
   14005f839:	or     DWORD PTR [rcx],eax
   14005f83b:	add    ah,dl
   14005f83d:	retf   0x4
   14005f840:	lock or DWORD PTR [rcx],eax
   14005f843:	add    BYTE PTR [rdx+0x2c00010a],bl
   14005f849:	sub    eax,0xa9c0005
   14005f84e:	add    DWORD PTR [rax],eax
   14005f850:	stc    
   14005f851:	or     al,BYTE PTR [rcx]
   14005f853:	add    BYTE PTR [rbp+rcx*1+0x5],cl
   14005f857:	add    ah,bh
   14005f859:	or     al,BYTE PTR [rcx]
   14005f85b:	add    dh,bh
   14005f85d:	or     eax,DWORD PTR [rcx]
   14005f85f:	add    BYTE PTR [rbp+rcx*1+0xc000005],cl
   14005f866:	add    DWORD PTR [rax],eax
   14005f868:	rex.XB or al,0x1
   14005f86b:	add    BYTE PTR [rcx*1+0xc440005],ah
   14005f872:	add    DWORD PTR [rax],eax
   14005f874:	xlat   BYTE PTR ds:[rbx]
   14005f875:	or     al,0x1
   14005f877:	add    BYTE PTR [rdi+rsi*8+0x4],ch
   14005f87b:	add    al,bl
   14005f87d:	or     al,0x1
   14005f87f:	add    BYTE PTR [rbx],bl
   14005f881:	(bad)  
   14005f882:	add    DWORD PTR [rax],eax
   14005f884:	movabs al,ds:0x1600010e1c00050c
   14005f88d:	sgdt   [rax]
   14005f890:	and    al,0xc
   14005f892:	add    eax,0x10f1800
   14005f897:	add    BYTE PTR [rcx],bl
   14005f899:	adc    BYTE PTR [rcx],al
   14005f89b:	add    BYTE PTR [rsp+rcx*1],cl
   14005f89e:	add    eax,0x1101c00
   14005f8a3:	add    BYTE PTR [rdi],al
   14005f8a5:	adc    DWORD PTR [rcx],eax
   14005f8a7:	add    BYTE PTR [rbx+rcx*1+0x11080005],cl
   14005f8ae:	add    DWORD PTR [rax],eax
   14005f8b0:	jns    0x14005f8c3
   14005f8b2:	add    DWORD PTR [rax],eax
   14005f8b4:	lock or al,BYTE PTR [rip+0x1117c00]        # 0x1411774bb
   14005f8bb:	add    BYTE PTR [rip+0xffffffffb8000112],ah        # 0xf805f9d3
   14005f8c1:	or     al,BYTE PTR [rip+0x1122800]        # 0x1411820c7
   14005f8c7:	add    BYTE PTR [rdi+0x12],bh
   14005f8ca:	add    DWORD PTR [rax],eax
   14005f8cc:	or     al,BYTE PTR [rip+0x1128000]        # 0x1411878d3
   14005f8d3:	add    BYTE PTR [rbx+rdx*1],dl
   14005f8d6:	add    DWORD PTR [rax],eax
   14005f8d8:	hlt    
   14005f8d9:	or     DWORD PTR [rip+0x1131400],eax        # 0x141190cdf
   14005f8df:	add    BYTE PTR [rsi-0x53fffeed],al
   14005f8e5:	syscall 
   14005f8e7:	add    BYTE PTR [rax-0x41fffeed],bl
   14005f8ed:	adc    eax,DWORD PTR [rcx]
   14005f8ef:	add    ah,dl
   14005f8f1:	retf   0x4
   14005f8f4:	rcl    BYTE PTR [rbx],0x1
   14005f8f7:	add    dh,bl
   14005f8f9:	adc    eax,DWORD PTR [rcx]
   14005f8fb:	add    ah,cl
   14005f8fd:	(bad)  
   14005f8fe:	add    al,0x0
   14005f900:	loopne 0x14005f915
   14005f902:	add    DWORD PTR [rax],eax
   14005f904:	xchg   edx,eax
   14005f905:	adc    al,0x1
   14005f907:	add    BYTE PTR [rax],cl
   14005f909:	int    0x4
   14005f90b:	add    BYTE PTR [rsp+rdx*1+0x159f0001],dl
   14005f912:	add    DWORD PTR [rax],eax
   14005f914:	nop
   14005f915:	syscall 
   14005f917:	add    BYTE PTR [rbp+rdx*1+0x169e0001],ah
   14005f91e:	add    DWORD PTR [rax],eax
   14005f920:	js     0x14005f931
   14005f922:	add    eax,0x116a000
   14005f927:	add    bl,dl
   14005f929:	(bad)  
   14005f92a:	add    DWORD PTR [rax],eax
   14005f92c:	pop    rax
   14005f92d:	syscall 
   14005f92f:	add    ah,dl
   14005f931:	(bad)  
   14005f932:	add    DWORD PTR [rax],eax
   14005f934:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005f935:	sbb    DWORD PTR [rcx],eax
   14005f937:	add    BYTE PTR [rax-0x57fffaf2],ch
   14005f93d:	sbb    DWORD PTR [rcx],eax
   14005f93f:	add    BYTE PTR [rcx+0x1c],ch
   14005f942:	add    DWORD PTR [rax],eax
   14005f944:	hlt    
   14005f945:	or     eax,0x1c6c0005
   14005f94a:	add    DWORD PTR [rax],eax
   14005f94c:	rex.RX sbb eax,0xfb80001
   14005f952:	add    eax,0x11d4800
   14005f957:	add    BYTE PTR [rbx+0x2800011d],bl
   14005f95d:	(bad)  
   14005f95e:	add    al,0x0
   14005f960:	pushf  
   14005f961:	sbb    eax,0x1def0001
   14005f966:	add    DWORD PTR [rax],eax
   14005f968:	sub    ah,dl
   14005f96a:	add    al,0x0
   14005f96c:	lock sbb eax,0x1e6d0001
   14005f972:	add    DWORD PTR [rax],eax
   14005f974:	or     BYTE PTR [rax],dl
   14005f976:	add    eax,0x11e7000
   14005f97b:	add    BYTE PTR [rbp+0x1f],cl
   14005f97e:	add    DWORD PTR [rax],eax
   14005f980:	sbb    BYTE PTR [rax],dl
   14005f982:	add    eax,0x11f5000
   14005f987:	add    BYTE PTR [rdx+0x20],al
   14005f98a:	add    DWORD PTR [rax],eax
   14005f98c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f98d:	in     eax,dx
   14005f98e:	add    al,0x0
   14005f990:	and    BYTE PTR [rcx],r8b
   14005f993:	add    BYTE PTR [rsi+0x20],bl
   14005f996:	add    DWORD PTR [rax],eax
   14005f998:	int3   
   14005f999:	(bad)  
   14005f99a:	add    al,0x0
   14005f99c:	(bad)  
   14005f99d:	and    BYTE PTR [rcx],al
   14005f99f:	add    BYTE PTR [rdi+0x21],dh
   14005f9a2:	add    DWORD PTR [rax],eax
   14005f9a4:	fmul   QWORD PTR [rip+0x21780005]        # 0x1617df9af
   14005f9aa:	add    DWORD PTR [rax],eax
   14005f9ac:	sub    ah,BYTE PTR [rdx]
   14005f9ae:	add    DWORD PTR [rax],eax
   14005f9b0:	call   0x16c05fe89
   14005f9b5:	and    al,BYTE PTR [rcx]
   14005f9b7:	add    dh,bl
   14005f9b9:	and    al,BYTE PTR [rcx]
   14005f9bb:	add    al,ch
   14005f9bd:	(bad)  
   14005f9be:	add    al,0x0
   14005f9c0:	loopne 0x14005f9e4
   14005f9c2:	add    DWORD PTR [rax],eax
   14005f9c4:	shl    DWORD PTR [rbx],cl
   14005f9c6:	add    DWORD PTR [rax],eax
   14005f9c8:	(bad)  
   14005f9c9:	retf   0x4
   14005f9cc:	(bad)  
   14005f9cd:	and    eax,DWORD PTR [rcx]
   14005f9cf:	add    dl,bh
   14005f9d1:	and    eax,DWORD PTR [rcx]
   14005f9d3:	add    ah,dl
   14005f9d5:	retf   0x4
   14005f9d8:	cld    
   14005f9d9:	and    eax,DWORD PTR [rcx]
   14005f9db:	add    BYTE PTR [rdi],cl
   14005f9dd:	and    eax,0x10300001
   14005f9e2:	add    eax,0x1251000
   14005f9e7:	add    BYTE PTR [rsi+0x25],ch
   14005f9ea:	add    DWORD PTR [rax],eax
   14005f9ec:	call   0x1b005fec5
   14005f9f1:	and    eax,0x27b50001
   14005f9f6:	add    DWORD PTR [rax],eax
   14005f9f8:	rex.WR adc BYTE PTR [rip+0x127b800],r8b        # 0x1412db1ff
   14005f9ff:	add    ah,ah
   14005fa01:	sub    BYTE PTR [rcx],al
   14005fa03:	add    al,ch
   14005fa05:	(bad)  
   14005fa06:	add    al,0x0
   14005fa08:	in     al,0x28
   14005fa0a:	add    DWORD PTR [rax],eax
   14005fa0c:	add    eax,0xd4000129
   14005fa11:	retf   0x4
   14005fa14:	or     BYTE PTR [rcx],ch
   14005fa16:	add    DWORD PTR [rax],eax
   14005fa18:	sub    DWORD PTR [rcx],ebp
   14005fa1a:	add    DWORD PTR [rax],eax
   14005fa1c:	(bad)  
   14005fa1d:	retf   0x4
   14005fa20:	sub    al,0x29
   14005fa22:	add    DWORD PTR [rax],eax
   14005fa24:	sub    QWORD PTR [r9],r8
   14005fa27:	add    ah,dl
   14005fa29:	retf   0x4
   14005fa2c:	push   rax
   14005fa2d:	sub    DWORD PTR [rcx],eax
   14005fa2f:	add    BYTE PTR [rip+0x2c00012b],cl        # 0x16c05fb60
   14005fa35:	adc    DWORD PTR [rip+0x12b1000],eax        # 0x141310a3b
   14005fa3b:	add    BYTE PTR [rbp+0x2d],dl
   14005fa3e:	add    DWORD PTR [rax],eax
   14005fa40:	pop    rsp
   14005fa41:	adc    DWORD PTR [rip+0x12d5800],eax        # 0x141335247
   14005fa47:	add    BYTE PTR [rax+0x4800012e],al
   14005fa4d:	adc    DWORD PTR [rip+0x12e8000],eax        # 0x141347a53
   14005fa53:	add    BYTE PTR [rdx+0xc00012e],ah
   14005fa59:	adc    DWORD PTR [rip+0x12ea400],eax        # 0x141349e5f
   14005fa5f:	add    dl,cl
   14005fa61:	add    DWORD PTR cs:[rax],eax
   14005fa64:	(bad)  
   14005fa65:	retf   0x4
   14005fa68:	fsubr  DWORD PTR [rsi]
   14005fa6a:	add    DWORD PTR [rax],eax
   14005fa6c:	sub    al,0x2f
   14005fa6e:	add    DWORD PTR [rax],eax
   14005fa70:	(bad)  
   14005fa71:	retf   0x4
   14005fa74:	sub    al,0x2f
   14005fa76:	add    DWORD PTR [rax],eax
   14005fa78:	push   0x20000132
   14005fa7d:	(bad)  
   14005fa7e:	add    eax,0x1326800
   14005fa83:	add    BYTE PTR [rcx],cl
   14005fa85:	xor    eax,DWORD PTR [rcx]
   14005fa87:	add    al,al
   14005fa89:	adc    eax,0x330c0005
   14005fa8e:	add    DWORD PTR [rax],eax
   14005fa90:	rex.WRB xor al,0x1
   14005fa93:	add    BYTE PTR [rax],dh
   14005fa95:	adc    eax,0x34500005
   14005fa9a:	add    DWORD PTR [rax],eax
   14005fa9c:	pop    rbp
   14005fa9d:	(bad)  
   14005fa9e:	add    DWORD PTR [rax],eax
   14005faa0:	add    BYTE PTR [rax*1+0x1376000],dl
   14005faa7:	add    BYTE PTR [rsi],dl
   14005faa9:	cmp    BYTE PTR [rcx],al
   14005faab:	add    ah,dl
   14005faad:	adc    eax,DWORD PTR [rip+0x1381800]        # 0x1413e12b3
   14005fab3:	add    BYTE PTR [rax],cl
   14005fab5:	cmp    DWORD PTR [rcx],eax
   14005fab7:	add    BYTE PTR [rax+0x13],bl
   14005faba:	add    eax,0x1390800
   14005fabf:	add    BYTE PTR [rsi+0x39],bh
   14005fac2:	add    DWORD PTR [rax],eax
   14005fac4:	call   0xc005ff9d
   14005fac9:	cmp    DWORD PTR [rcx],eax
   14005facb:	add    BYTE PTR [rip+0xffffffffe800013a],dh        # 0x12805fc0b
   14005fad1:	adc    al,BYTE PTR [rip+0x13a3800]        # 0x1414032d7
   14005fad7:	add    ch,dh
   14005fad9:	cmp    al,BYTE PTR [rcx]
   14005fadb:	add    BYTE PTR [rsp+rbp*8+0x3af80004],bl
   14005fae2:	add    DWORD PTR [rax],eax
   14005fae4:	nop
   14005fae5:	cmp    eax,DWORD PTR [rcx]
   14005fae7:	add    BYTE PTR [rsp+rbp*8+0x3b900004],bl
   14005faee:	add    DWORD PTR [rax],eax
   14005faf0:	xchg   edi,eax
   14005faf1:	cmp    al,0x1
   14005faf3:	add    BYTE PTR [rax+0x180004cc],dl
   14005faf9:	cmp    eax,0x3e880001
   14005fafe:	add    DWORD PTR [rax],eax
   14005fb00:	sbb    al,0x12
   14005fb02:	add    eax,0x13e8800
   14005fb07:	add    BYTE PTR [rax+0x3f],ah
   14005fb0a:	add    DWORD PTR [rax],eax
   14005fb0c:	enter  0x511,0x0
   14005fb10:	(bad)  
   14005fb11:	(bad)  
   14005fb12:	add    DWORD PTR [rax],eax
   14005fb14:	sub    eax,0x80000140
   14005fb19:	adc    DWORD PTR [rip+0x1403800],eax        # 0x14146331f
   14005fb1f:	add    BYTE PTR [rdi+0x40],ah
   14005fb22:	add    DWORD PTR [rax],eax
   14005fb24:	call   0x1a805fffd
   14005fb29:	rex add DWORD PTR [rax],eax
   14005fb2c:	test   eax,0x38000140
   14005fb31:	sbb    al,BYTE PTR [rip+0x140ac00]        # 0x14146a737
   14005fb37:	add    BYTE PTR [rbx+0x41],dh
   14005fb3a:	add    DWORD PTR [rax],eax
   14005fb3c:	or     ch,cl
   14005fb3e:	add    al,0x0
   14005fb40:	je     0x14005fb83
   14005fb42:	add    DWORD PTR [rax],eax
   14005fb44:	retf   0x145
   14005fb47:	add    BYTE PTR [rax+0x19],cl
   14005fb4a:	add    eax,0x145cc00
   14005fb4f:	add    BYTE PTR [rdi+rax*2+0x18c00001],bl
   14005fb56:	add    eax,0x1479c00
   14005fb5b:	add    BYTE PTR [rsi],ch
   14005fb5d:	add    QWORD PTR [r8],rax
   14005fb60:	test   al,0x18
   14005fb62:	add    eax,0x1493000
   14005fb67:	add    BYTE PTR [rip+0x2400014a],ah        # 0x16405fcb7
   14005fb6d:	sbb    al,BYTE PTR [rip+0x14a2800]        # 0x141502373
   14005fb73:	add    BYTE PTR [rax],dl
   14005fb75:	rex.WXB add QWORD PTR [r8],rax
   14005fb78:	sbb    BYTE PTR [rdx],bl
   14005fb7a:	add    eax,0x14b1000
   14005fb7f:	add    BYTE PTR [rip+0xffffffff9000014c],ah        # 0xd005fcd1
   14005fb85:	sbb    BYTE PTR [rip+0x14c2800],al        # 0x14152238b
   14005fb8b:	add    BYTE PTR [rdx-0x7fffeb3],al
   14005fb91:	sbb    DWORD PTR [rip+0x14d8400],eax        # 0x141537f97
   14005fb97:	add    BYTE PTR [rax],dh
   14005fb99:	rex.WRX add QWORD PTR [rax],r8
   14005fb9c:	pop    rsp
   14005fb9d:	sbb    BYTE PTR [rip+0x14e3000],al        # 0x141542ba3
   14005fba3:	add    BYTE PTR [rdi+rcx*2+0x1],al
   14005fba7:	add    BYTE PTR [rax+0x4c0004cc],dl
   14005fbad:	rex.WRXB add QWORD PTR [r8],r8
   14005fbb0:	outs   dx,BYTE PTR ds:[rsi]
   14005fbb1:	rex.WRXB add QWORD PTR [r8],r8
   14005fbb4:	(bad)  
   14005fbb5:	retf   0x4
   14005fbb8:	jo     0x14005fc09
   14005fbba:	add    DWORD PTR [rax],eax
   14005fbbc:	retf   
   14005fbbd:	rex.WRXB add QWORD PTR [r8],r8
   14005fbc0:	sbb    BYTE PTR [rbx],bl
   14005fbc2:	add    eax,0x14fcc00
   14005fbc7:	add    bl,bh
   14005fbc9:	rex.WRXB add QWORD PTR [r8],r8
   14005fbcc:	call   0x13c0600a5
   14005fbd1:	rex.WRXB add QWORD PTR [r8],r8
   14005fbd4:	lods   al,BYTE PTR ds:[rsi]
   14005fbd5:	push   rax
   14005fbd6:	add    DWORD PTR [rax],eax
   14005fbd8:	fcomp  DWORD PTR [rdx]
   14005fbda:	add    eax,0x150ac00
   14005fbdf:	add    BYTE PTR [rdx-0x3bfffeaf],ch
   14005fbe5:	sbb    al,BYTE PTR [rip+0x151ac00]        # 0x14157a7eb
   14005fbeb:	add    BYTE PTR [rsi],dh
   14005fbed:	push   rsp
   14005fbee:	add    DWORD PTR [rax],eax
   14005fbf0:	pushf  
   14005fbf1:	sbb    al,BYTE PTR [rip+0x1543800]        # 0x1415a33f7
   14005fbf7:	add    BYTE PTR [rdi+0x55],dl
   14005fbfa:	add    DWORD PTR [rax],eax
   14005fbfc:	(bad)  
   14005fbfd:	sbb    al,BYTE PTR [rip+0x1556c00]        # 0x1415b6803
   14005fc03:	add    BYTE PTR [rbx-0x17fffeab],dh
   14005fc09:	(bad)  
   14005fc0a:	add    al,0x0
   14005fc0c:	mov    ah,0x55
   14005fc0e:	add    DWORD PTR [rax],eax
   14005fc10:	(bad)  
   14005fc11:	push   rsi
   14005fc12:	add    DWORD PTR [rax],eax
   14005fc14:	pop    rax
   14005fc15:	sbb    eax,DWORD PTR [rip+0x1561800]        # 0x1415c141b
   14005fc1b:	add    bl,dh
   14005fc1d:	push   rsi
   14005fc1e:	add    DWORD PTR [rax],eax
   14005fc20:	(bad)  
   14005fc21:	sbb    eax,DWORD PTR [rip+0x156f400]        # 0x1415cf027
   14005fc27:	add    BYTE PTR [rbx+0x57],al
   14005fc2a:	add    DWORD PTR [rax],eax
   14005fc2c:	(bad)  
   14005fc2d:	retf   0x4
   14005fc30:	rex.R push rdi
   14005fc32:	add    DWORD PTR [rax],eax
   14005fc34:	jae    0x14005fc8d
   14005fc36:	add    DWORD PTR [rax],eax
   14005fc38:	call   0x1b4060111
   14005fc3d:	push   rdi
   14005fc3e:	add    DWORD PTR [rax],eax
   14005fc40:	ret    
   14005fc41:	push   rdi
   14005fc42:	add    DWORD PTR [rax],eax
   14005fc44:	(bad)  
   14005fc45:	sbb    eax,DWORD PTR [rip+0x157c400]        # 0x1415dc04b
   14005fc4b:	add    BYTE PTR [rax],dh
   14005fc4d:	pop    rax
   14005fc4e:	add    DWORD PTR [rax],eax
   14005fc50:	pushf  
   14005fc51:	in     al,dx
   14005fc52:	add    al,0x0
   14005fc54:	xor    BYTE PTR [rax+0x1],bl
   14005fc57:	add    BYTE PTR [rbx+0x58],bl
   14005fc5a:	add    DWORD PTR [rax],eax
   14005fc5c:	(bad)  
   14005fc5d:	retf   0x4
   14005fc60:	pop    rsp
   14005fc61:	pop    rax
   14005fc62:	add    DWORD PTR [rax],eax
   14005fc64:	stos   DWORD PTR es:[rdi],eax
   14005fc65:	pop    rax
   14005fc66:	add    DWORD PTR [rax],eax
   14005fc68:	(bad)  
   14005fc69:	retf   0x4
   14005fc6c:	mov    ah,0x58
   14005fc6e:	add    DWORD PTR [rax],eax
   14005fc70:	repnz pop rax
   14005fc72:	add    DWORD PTR [rax],eax
   14005fc74:	(bad)  
   14005fc75:	retf   0x4
   14005fc78:	hlt    
   14005fc79:	pop    rax
   14005fc7a:	add    DWORD PTR [rax],eax
   14005fc7c:	outs   dx,DWORD PTR ds:[rsi]
   14005fc7d:	pop    rbx
   14005fc7e:	add    DWORD PTR [rax],eax
   14005fc80:	cld    
   14005fc81:	sbb    eax,DWORD PTR [rip+0x15b7000]        # 0x141616c87
   14005fc87:	add    BYTE PTR [rsp+rbx*2],ch
   14005fc8a:	add    DWORD PTR [rax],eax
   14005fc8c:	sbb    al,0x1c
   14005fc8e:	add    eax,0x15c2c00
   14005fc93:	add    dl,cl
   14005fc95:	pop    rsp
   14005fc96:	add    DWORD PTR [rax],eax
   14005fc98:	sbb    BYTE PTR [rdx],bl
   14005fc9a:	add    eax,0x15ccc00
   14005fc9f:	add    BYTE PTR [rbx],dl
   14005fca1:	pop    rbp
   14005fca2:	add    DWORD PTR [rax],eax
   14005fca4:	(bad)  
   14005fca5:	retf   0x4
   14005fca8:	adc    al,0x5d
   14005fcaa:	add    DWORD PTR [rax],eax
   14005fcac:	add    eax,0x2c00015e
   14005fcb1:	sbb    al,0x5
   14005fcb3:	add    BYTE PTR [rsi+rbx*2],dl
   14005fcb6:	add    DWORD PTR [rax],eax
   14005fcb8:	cmp    bl,BYTE PTR [rsi+0x1]
   14005fcbb:	add    ah,dl
   14005fcbd:	retf   0x4
   14005fcc0:	cmp    al,0x5e
   14005fcc2:	add    DWORD PTR [rax],eax
   14005fcc4:	imul   ebx,DWORD PTR [rsi+0x1],0x0
   14005fcc8:	call   0x1ac0601a1
   14005fccd:	pop    rsi
   14005fcce:	add    DWORD PTR [rax],eax
   14005fcd0:	lods   al,BYTE PTR ds:[rsi]
   14005fcd1:	pop    rsi
   14005fcd2:	add    DWORD PTR [rax],eax
   14005fcd4:	or     al,0x23
   14005fcd6:	add    eax,0x15eac00
   14005fcdb:	add    BYTE PTR [rdi+rbx*2],al
   14005fcde:	add    DWORD PTR [rax],eax
   14005fce0:	xchg   esp,eax
   14005fce1:	and    al,BYTE PTR [rip+0x15f0400]        # 0x1416500e7
   14005fce7:	add    BYTE PTR [rsi],ch
   14005fce9:	(bad)  
   14005fcea:	add    DWORD PTR [rax],eax
   14005fcec:	int3   
   14005fced:	and    DWORD PTR [rip+0x1613000],eax        # 0x141672cf3
   14005fcf3:	add    dh,ah
   14005fcf5:	(bad)  
   14005fcf6:	add    DWORD PTR [rax],eax
   14005fcf8:	push   rsp
   14005fcf9:	and    DWORD PTR [rip+0x161e800],eax        # 0x14167e4ff
   14005fcff:	add    BYTE PTR [rdx+riz*2],bh
   14005fd02:	add    DWORD PTR [rax],eax
   14005fd04:	and    DWORD PTR [rip+0x1623c00],r8d        # 0x14168390b
   14005fd0b:	add    BYTE PTR [rdi+0x6a],dh
   14005fd0e:	add    DWORD PTR [rax],eax
   14005fd10:	mov    al,0x1d
   14005fd12:	add    eax,0x16a7800
   14005fd17:	add    BYTE PTR [rcx],ch
   14005fd19:	ins    BYTE PTR es:[rdi],dx
   14005fd1a:	add    DWORD PTR [rax],eax
   14005fd1c:	rex.WR sbb rax,0x6c300005
   14005fd22:	add    DWORD PTR [rax],eax
   14005fd24:	jae    0x14005fd92
   14005fd26:	add    DWORD PTR [rax],eax
   14005fd28:	int3   
   14005fd29:	(bad)  
   14005fd2a:	add    al,0x0
   14005fd2c:	je     0x14005fd9a
   14005fd2e:	add    DWORD PTR [rax],eax
   14005fd30:	jo     0x14005fd9f
   14005fd32:	add    DWORD PTR [rax],eax
   14005fd34:	add    BYTE PTR [rip+0x6d700005],bl        # 0x1ad75fd3f
   14005fd3a:	add    DWORD PTR [rax],eax
   14005fd3c:	icebp  
   14005fd3d:	ins    DWORD PTR es:[rdi],dx
   14005fd3e:	add    DWORD PTR [rax],eax
   14005fd40:	pushf  
   14005fd41:	in     al,dx
   14005fd42:	add    al,0x0
   14005fd44:	hlt    
   14005fd45:	ins    DWORD PTR es:[rdi],dx
   14005fd46:	add    DWORD PTR [rax],eax
   14005fd48:	leave  
   14005fd49:	outs   dx,BYTE PTR ds:[rsi]
   14005fd4a:	add    DWORD PTR [rax],eax
   14005fd4c:	(bad)  
   14005fd4d:	sbb    al,0x5
   14005fd4f:	add    ah,cl
   14005fd51:	outs   dx,BYTE PTR ds:[rsi]
   14005fd52:	add    DWORD PTR [rax],eax
   14005fd54:	jle    0x14005fdc5
   14005fd56:	add    DWORD PTR [rax],eax
   14005fd58:	mov    al,0x1c
   14005fd5a:	add    eax,0x16f8800
   14005fd5f:	add    BYTE PTR [rsi+0x58000170],al
   14005fd65:	sbb    al,0x5
   14005fd67:	add    BYTE PTR [rax+0x13000170],cl
   14005fd6d:	jno    0x14005fd70
   14005fd6f:	add    BYTE PTR [rax],bh
   14005fd71:	sbb    al,0x5
   14005fd73:	add    BYTE PTR [rax],ah
   14005fd75:	jno    0x14005fd78
   14005fd77:	add    BYTE PTR [rdi+0x71],cl
   14005fd7a:	add    DWORD PTR [rax],eax
   14005fd7c:	call   0x190060255
   14005fd81:	jno    0x14005fd84
   14005fd83:	add    BYTE PTR [rcx-0x57fffe8f],dl
   14005fd89:	and    eax,DWORD PTR [rip+0x1719400]        # 0x14177918f
   14005fd8f:	add    BYTE PTR [rbx+0x72],bl
   14005fd92:	add    DWORD PTR [rax],eax
   14005fd94:	mov    WORD PTR [rbx],fs
   14005fd96:	add    eax,0x1725c00
   14005fd9b:	add    BYTE PTR [rdx+rsi*2+0x1],ch
   14005fd9f:	add    ah,cl
   14005fda1:	(bad)  
   14005fda2:	add    al,0x0
   14005fda4:	xor    BYTE PTR [rdx+0x1],0x0
   14005fda8:	movsxd esi,DWORD PTR [rbx+0x1]
   14005fdab:	add    BYTE PTR [rsp+0x73640005],cl
   14005fdb2:	add    DWORD PTR [rax],eax
   14005fdb4:	xchg   ebx,eax
   14005fdb5:	jae    0x14005fdb8
   14005fdb7:	add    al,ch
   14005fdb9:	(bad)  
   14005fdba:	add    al,0x0
   14005fdbc:	xchg   esp,eax
   14005fdbd:	jae    0x14005fdc0
   14005fdbf:	add    bh,ch
   14005fdc1:	jae    0x14005fdc4
   14005fdc3:	add    BYTE PTR [rsp+0x5],al
   14005fdc7:	add    al,dh
   14005fdc9:	jae    0x14005fdcc
   14005fdcb:	add    BYTE PTR [rip+0xffffffffcc000174],bl        # 0x10c05ff45
   14005fdd1:	(bad)  
   14005fdd2:	add    al,0x0
   14005fdd4:	and    BYTE PTR [rcx+rax*1+0x0],dh
   14005fdd8:	mov    ebp,0x1c000174
   14005fddd:	sbb    al,0x5
   14005fddf:	add    al,al
   14005fde1:	je     0x14005fde4
   14005fde3:	add    BYTE PTR [rsi*2-0x336fffff],ch
   14005fdea:	add    al,0x0
   14005fdec:	sub    al,0x75
   14005fdee:	add    DWORD PTR [rax],eax
   14005fdf0:	push   0x75
   14005fdf2:	add    DWORD PTR [rax],eax
   14005fdf4:	call   0x1ac0602cd
   14005fdf9:	jne    0x14005fdfc
   14005fdfb:	add    ch,dl
   14005fdfd:	jne    0x14005fe00
   14005fdff:	add    BYTE PTR [rsp],dh
   14005fe02:	add    eax,0x175d800
   14005fe07:	add    BYTE PTR [rcx+0x76],dl
   14005fe0a:	add    DWORD PTR [rax],eax
   14005fe0c:	sub    ah,dl
   14005fe0e:	add    al,0x0
   14005fe10:	push   rsp
   14005fe11:	jbe    0x14005fe14
   14005fe13:	add    BYTE PTR [rip+0x28000177],ch        # 0x16805ff90
   14005fe19:	and    al,0x5
   14005fe1b:	add    BYTE PTR [rax],dh
   14005fe1d:	ja     0x14005fe20
   14005fe1f:	add    ch,dh
   14005fe21:	ja     0x14005fe24
   14005fe23:	add    BYTE PTR [rsp],bl
   14005fe26:	add    eax,0x177f800
   14005fe2b:	add    BYTE PTR [rdi-0x2ffffe84],ah
   14005fe31:	and    eax,DWORD PTR [rip+0x17ca800]        # 0x14182a637
   14005fe37:	add    BYTE PTR [rax+0x7d],dl
   14005fe3a:	add    DWORD PTR [rax],eax
   14005fe3c:	pushf  
   14005fe3d:	in     al,dx
   14005fe3e:	add    al,0x0
   14005fe40:	push   rax
   14005fe41:	jge    0x14005fe44
   14005fe43:	add    BYTE PTR [rsi+0x7d],dh
   14005fe46:	add    DWORD PTR [rax],eax
   14005fe48:	(bad)  
   14005fe49:	retf   0x4
   14005fe4c:	test   BYTE PTR [rbp+0x1],bh
   14005fe4f:	add    ch,cl
   14005fe51:	jle    0x14005fe54
   14005fe53:	add    BYTE PTR [rsi+riz*1+0x5],dh
   14005fe57:	add    al,dl
   14005fe59:	jle    0x14005fe5c
   14005fe5b:	add    dl,ah
   14005fe5d:	add    DWORD PTR [rcx],0x0
   14005fe60:	(bad)  
   14005fe61:	and    al,0x5
   14005fe63:	add    ah,ah
   14005fe65:	add    DWORD PTR [rcx],0x0
   14005fe68:	fadd   DWORD PTR [rcx+rax*1+0x526b000]
   14005fe6f:	add    al,bl
   14005fe71:	test   BYTE PTR [rcx],al
   14005fe73:	add    BYTE PTR [rsi+rax*4+0x1],dl
   14005fe77:	add    BYTE PTR [rax+rbp*1+0x5],ch
   14005fe7b:	add    BYTE PTR [rsi+rax*4+0x1],dl
   14005fe7f:	add    BYTE PTR [rdi+0x44000186],al
   14005fe85:	sub    BYTE PTR [rip+0x1868800],al        # 0x1418c868b
   14005fe8b:	add    ah,bl
   14005fe8d:	mov    DWORD PTR [rcx],eax
   14005fe8f:	add    BYTE PTR [rdi+riz*1-0x7623fffb],cl
   14005fe96:	add    DWORD PTR [rax],eax
   14005fe98:	movabs eax,ds:0xa40005274000018a
   14005fea1:	mov    al,BYTE PTR [rcx]
   14005fea3:	add    BYTE PTR [rbx+rcx*4+0x1],ch
   14005fea7:	add    BYTE PTR [rax+0x37],ah
   14005feaa:	add    eax,0x18b6c00
   14005feaf:	add    BYTE PTR [rbp-0x74],bh
   14005feb2:	add    DWORD PTR [rax],eax
   14005feb4:	je     0x14005fedf
   14005feb6:	add    eax,0x18c8000
   14005febb:	add    BYTE PTR [rbx],dl
   14005febd:	mov    es,WORD PTR [rcx]
   14005febf:	add    ah,bh
   14005fec1:	sub    BYTE PTR [rip+0x18e1400],al        # 0x1419412c7
   14005fec7:	add    bh,ch
   14005fec9:	pop    QWORD PTR [rcx]
   14005fecb:	add    al,al
   14005fecd:	sub    DWORD PTR [rip+0x18ff000],eax        # 0x14195eed3
   14005fed3:	add    BYTE PTR [rbx],dh
   14005fed5:	nop
   14005fed6:	add    DWORD PTR [rax],eax
   14005fed8:	in     al,dx
   14005fed9:	sub    al,BYTE PTR [rip+0x1903400]        # 0x1419632df
   14005fedf:	add    BYTE PTR [rdi],cl
   14005fee1:	xchg   ecx,eax
   14005fee2:	add    DWORD PTR [rax],eax
   14005fee4:	(bad)  
   14005fee5:	sub    al,BYTE PTR [rip+0x1911000]        # 0x141970eeb
   14005feeb:	add    BYTE PTR [rbx+rdx*4],cl
   14005feee:	add    DWORD PTR [rax],eax
   14005fef0:	mov    eax,0xc00052a
   14005fef5:	xchg   ebx,eax
   14005fef6:	add    DWORD PTR [rax],eax
   14005fef8:	cmp    edx,DWORD PTR [rbx-0x2b17ffff]
   14005fefe:	add    al,0x0
   14005ff00:	cmp    al,0x93
   14005ff02:	add    DWORD PTR [rax],eax
   14005ff04:	adc    al,0x97
   14005ff06:	add    DWORD PTR [rax],eax
   14005ff08:	hlt    
   14005ff09:	sub    al,BYTE PTR [rip+0x1971400]        # 0x1419d130f
   14005ff0f:	add    BYTE PTR [rax-0x69],bh
   14005ff12:	add    DWORD PTR [rax],eax
   14005ff14:	mov    WORD PTR [rdx],gs
   14005ff16:	add    eax,0x1977800
   14005ff1b:	add    dl,dl
   14005ff1d:	xchg   edi,eax
   14005ff1e:	add    DWORD PTR [rax],eax
   14005ff20:	pushf  
   14005ff21:	in     al,dx
   14005ff22:	add    al,0x0
   14005ff24:	(bad)  
   14005ff25:	xchg   edi,eax
   14005ff26:	add    DWORD PTR [rax],eax
   14005ff28:	(bad)  
   14005ff29:	cwde   
   14005ff2a:	add    DWORD PTR [rax],eax
   14005ff2c:	sbb    al,0x24
   14005ff2e:	add    eax,0x1983000
   14005ff33:	add    BYTE PTR [rdx-0x67],bl
   14005ff36:	add    DWORD PTR [rax],eax
   14005ff38:	or     BYTE PTR [rax*1+0x1995c00],ch
   14005ff3f:	add    ah,al
   14005ff41:	cdq    
   14005ff42:	add    DWORD PTR [rax],eax
   14005ff44:	test   al,0x2b
   14005ff46:	add    eax,0x199c400
   14005ff4b:	add    BYTE PTR [rcx+0x6800019b],ah
   14005ff51:	sub    eax,DWORD PTR [rip+0x19ba400]        # 0x141a1a357
   14005ff57:	add    dl,ch
   14005ff59:	fwait
   14005ff5a:	add    DWORD PTR [rax],eax
   14005ff5c:	call   0x12c060435
   14005ff61:	fwait
   14005ff62:	add    DWORD PTR [rax],eax
   14005ff64:	push   rcx
   14005ff65:	pushf  
   14005ff66:	add    DWORD PTR [rax],eax
   14005ff68:	nop
   14005ff69:	int3   
   14005ff6a:	add    al,0x0
   14005ff6c:	push   rsp
   14005ff6d:	pushf  
   14005ff6e:	add    DWORD PTR [rax],eax
   14005ff70:	scas   al,BYTE PTR es:[rdi]
   14005ff71:	sahf   
   14005ff72:	add    DWORD PTR [rax],eax
   14005ff74:	push   rax
   14005ff75:	sub    eax,DWORD PTR [rip+0x19ed000]        # 0x141a4cf7b
   14005ff7b:	add    ah,ch
   14005ff7d:	lahf   
   14005ff7e:	add    DWORD PTR [rax],eax
   14005ff80:	fsubr  QWORD PTR [rax*1+0x19fec00]
   14005ff87:	add    BYTE PTR [rsi],dl
   14005ff89:	movabs al,ds:0xa0400004cad40001
   14005ff92:	add    DWORD PTR [rax],eax
   14005ff94:	rex.B movabs eax,ds:0xa14400052de00001
   14005ff9e:	add    DWORD PTR [rax],eax
   14005ffa0:	(bad)  
   14005ffa1:	movabs eax,ds:0xa1d000052d840001
   14005ffaa:	add    DWORD PTR [rax],eax
   14005ffac:	in     al,dx
   14005ffad:	movabs ds:0xa2ec00052d480001,al
   14005ffb6:	add    DWORD PTR [rax],eax
   14005ffb8:	rex.WX movabs ds:0xa34c0004d4280001,rax
   14005ffc2:	add    DWORD PTR [rax],eax
   14005ffc4:	data16 movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005ffc6:	add    DWORD PTR [rax],eax
   14005ffc8:	sub    al,0x2d
   14005ffca:	add    eax,0x1a46800
   14005ffcf:	add    dl,al
   14005ffd1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005ffd2:	add    DWORD PTR [rax],eax
   14005ffd4:	pushf  
   14005ffd5:	in     al,dx
   14005ffd6:	add    al,0x0
   14005ffd8:	(bad)  
   14005ffd9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005ffda:	add    DWORD PTR [rax],eax
   14005ffdc:	(bad)  
   14005ffdd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005ffde:	add    DWORD PTR [rax],eax
   14005ffe0:	sbb    al,0x24
   14005ffe2:	add    eax,0x1a52000
   14005ffe7:	add    BYTE PTR [rsi-0x6ffffe5b],dl
   14005ffed:	cs add eax,0x1a59800
   14005fff3:	add    BYTE PTR [rbx],dh
   14005fff5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005fff6:	add    DWORD PTR [rax],eax
   14005fff8:	adc    al,0x2f
   14005fffa:	add    eax,0x1a63400
   14005ffff:	add    BYTE PTR [rdi-0x27fffe5a],ch
   140060005:	cs add eax,0x1a6b000
   14006000b:	add    BYTE PTR [rsi],ah
   14006000d:	test   al,0x1
   14006000f:	add    BYTE PTR [rax+0x2800052e],ah
   140060015:	test   al,0x1
   140060017:	add    BYTE PTR [rbp-0x58],bl
   14006001a:	add    DWORD PTR [rax],eax
   14006001c:	(bad)  
   14006001d:	retf   0x4
   140060020:	(bad)  
   140060021:	test   al,0x1
   140060023:	add    BYTE PTR [rbx-0x2bfffe58],dl
   140060029:	retf   0x4
   14006002c:	xchg   esp,eax
   14006002d:	test   al,0x1
   14006002f:	add    dh,ch
   140060031:	test   al,0x1
   140060033:	add    BYTE PTR [rsp+rbp*8-0x570ffffc],bl
   14006003a:	add    DWORD PTR [rax],eax
   14006003c:	rex.WXB test rax,0x241c0001
   140060042:	add    eax,0x1a94c00
   140060047:	add    BYTE PTR [rsp+rbp*4+0x32d40001],al
   14006004e:	add    eax,0x1ac8400
   140060053:	add    BYTE PTR [rbx-0x17fffe54],dh
   140060059:	(bad)  
   14006005a:	add    al,0x0
   14006005c:	mov    ah,0xac
   14006005e:	add    DWORD PTR [rax],eax
   140060060:	xor    eax,0x880001ad
   140060065:	xor    BYTE PTR [rip+0x1ad3800],al        # 0x141b3386b
   14006006b:	add    dh,ch
   14006006d:	scas   eax,DWORD PTR es:[rdi]
   14006006e:	add    DWORD PTR [rax],eax
   140060070:	je     0x1400600a3
   140060072:	add    eax,0x1aff000
   140060077:	add    ah,dh
   140060079:	mov    ah,0x1
   14006007b:	add    BYTE PTR [rax-0xbfffad1],ch
   140060081:	mov    ah,0x1
   140060083:	add    BYTE PTR [rcx-0x73fffe4b],bl
   140060089:	(bad)  
   14006008a:	add    eax,0x1b59c00
   14006008f:	add    BYTE PTR [rcx-0x49],al
   140060092:	add    DWORD PTR [rax],eax
   140060094:	je     0x1400600c5
   140060096:	add    eax,0x1b74400
   14006009b:	add    BYTE PTR [rdx],al
   14006009d:	mov    eax,0x31080001
   1400600a2:	add    eax,0x1b80400
   1400600a7:	add    BYTE PTR [rdx+0x640001b8],ch
   1400600ad:	(bad)  
   1400600ae:	add    eax,0x1b8ac00
   1400600b3:	add    ch,dl
   1400600b5:	mov    eax,0x35400001
   1400600ba:	add    eax,0x1b90000
   1400600bf:	add    BYTE PTR [rsi],dh
   1400600c1:	mov    ecx,0xcecc0001
   1400600c6:	add    al,0x0
   1400600c8:	cmp    BYTE PTR [rcx-0x46a0ffff],bh
   1400600ce:	add    DWORD PTR [rax],eax
   1400600d0:	(bad)  
   1400600d1:	retf   0x4
   1400600d4:	(bad)  
   1400600d5:	mov    ecx,0xb98f0001
   1400600da:	add    DWORD PTR [rax],eax
   1400600dc:	call   0xd00605b5
   1400600e1:	mov    ecx,0xb9d70001
   1400600e6:	add    DWORD PTR [rax],eax
   1400600e8:	pushf  
   1400600e9:	in     al,dx
   1400600ea:	add    al,0x0
   1400600ec:	fdivr  DWORD PTR [rcx-0x459dffff]
   1400600f2:	add    DWORD PTR [rax],eax
   1400600f4:	push   rax
   1400600f5:	ss add eax,0x1ba6400
   1400600fb:	add    BYTE PTR [rcx],dh
   1400600fd:	mov    ebx,0x35e00001
   140060102:	add    eax,0x1bb3400
   140060107:	add    BYTE PTR [rbx-0x5ffffe44],ch
   14006010d:	xor    eax,0xbcac0005
   140060112:	add    DWORD PTR [rax],eax
   140060114:	(bad)  
   140060115:	mov    ebp,0x35600001
   14006011a:	add    eax,0x1bdd800
   14006011f:	add    BYTE PTR [rdx+0x140001be],bl
   140060125:	ss add eax,0x1be9c00
   14006012b:	add    BYTE PTR [rbx],bl
   14006012d:	mov    edi,0x36c80001
   140060132:	add    eax,0x1bf1c00
   140060137:	add    BYTE PTR [rax-0x53fffe3f],ch
   14006013d:	ss add eax,0x1c1a800
   140060143:	add    BYTE PTR [rax],dh
   140060145:	ret    0x1
   140060148:	test   ch,bl
   14006014a:	add    al,0x0
   14006014c:	xor    dl,al
   14006014e:	add    DWORD PTR [rax],eax
   140060150:	fadd   st,st(3)
   140060152:	add    DWORD PTR [rax],eax
   140060154:	rex.W (bad) 
   140060156:	add    eax,0x1c3d800
   14006015b:	add    BYTE PTR [rdi-0x3c],ch
   14006015e:	add    DWORD PTR [rax],eax
   140060160:	call   0x1b0060639
   140060165:	(bad)
   140060169:	(bad)
   14006016c:	cwde   
   14006016d:	ss add eax,0x1c52400
   140060173:	add    BYTE PTR [rbp+rax*8+0x5dcc0001],dh
   14006017a:	add    eax,0x1c5b400
   14006017f:	add    cl,bl
   140060181:	(bad)
   140060184:	jl     0x1400601bd
   140060186:	add    eax,0x1c5dc00
   14006018b:	add    BYTE PTR [rcx-0x39],dh
   14006018e:	add    DWORD PTR [rax],eax
   140060190:	(bad)  
   140060191:	(bad)  
   140060192:	add    eax,0x1c77400
   140060197:	add    BYTE PTR [rdx+0x2c0001c8],cl
   14006019d:	sub    eax,0xc88c0005
   1400601a2:	add    DWORD PTR [rax],eax
   1400601a4:	sbb    ecx,ecx
   1400601a6:	add    DWORD PTR [rax],eax
   1400601a8:	nop
   1400601a9:	int3   
   1400601aa:	add    al,0x0
   1400601ac:	sbb    al,0xc9
   1400601ae:	add    DWORD PTR [rax],eax
   1400601b0:	je     0x14006017b
   1400601b2:	add    DWORD PTR [rax],eax
   1400601b4:	mov    eax,0x74000537
   1400601b9:	leave  
   1400601ba:	add    DWORD PTR [rax],eax
   1400601bc:	dec    dl
   1400601be:	add    DWORD PTR [rax],eax
   1400601c0:	pushf  
   1400601c1:	(bad)  
   1400601c2:	add    eax,0x1cb0000
   1400601c7:	add    BYTE PTR [rbp-0x35],bl
   1400601ca:	add    DWORD PTR [rax],eax
   1400601cc:	pushf  
   1400601cd:	in     al,dx
   1400601ce:	add    al,0x0
   1400601d0:	(bad)  
   1400601d1:	retf   
   1400601d2:	add    DWORD PTR [rax],eax
   1400601d4:	mov    esi,0x1c0001cb
   1400601d9:	and    al,0x5
   1400601db:	add    al,al
   1400601dd:	retf   
   1400601de:	add    DWORD PTR [rax],eax
   1400601e0:	(bad)  
   1400601e1:	int3   
   1400601e2:	add    DWORD PTR [rax],eax
   1400601e4:	(bad)  
   1400601e5:	cmp    BYTE PTR [rip+0x1cc1800],al        # 0x141d219eb
   1400601eb:	add    BYTE PTR [rbp+0x80001cd],al
   1400601f1:	cmp    BYTE PTR [rip+0x1cd8800],al        # 0x141d389f7
   1400601f7:	add    dl,ah
   1400601f9:	int    0x1
   1400601fb:	add    BYTE PTR [rsp+rbp*8-0x321bfffc],bl
   140060202:	add    DWORD PTR [rax],eax
   140060204:	(bad)  
   140060205:	(bad)  
   140060206:	add    DWORD PTR [rax],eax
   140060208:	sbb    al,0x24
   14006020a:	add    eax,0x1ce4000
   14006020f:	add    BYTE PTR [rcx-0x32],ch
   140060212:	add    DWORD PTR [rax],eax
   140060214:	test   al,0x38
   140060216:	add    eax,0x1ce6c00
   14006021b:	add    BYTE PTR [rbp-0x13fffe30],bl
   140060221:	cmp    BYTE PTR [rip+0x1d0a000],al        # 0x141d6a227
   140060227:	add    BYTE PTR [rdi-0x2bfffe2f],ah
   14006022d:	cmp    BYTE PTR [rip+0x1d1cc00],al        # 0x141d7ce33
   140060233:	add    al,ah
   140060235:	rol    BYTE PTR [rcx],cl
   140060237:	add    al,al
   140060239:	cmp    BYTE PTR [rip+0x1d2e000],al        # 0x141d8e23f
   14006023f:	add    BYTE PTR [rcx],ah
   140060241:	rol    DWORD PTR [rcx],cl
   140060243:	add    BYTE PTR [rax+0x24000549],bh
   140060249:	rol    DWORD PTR [rcx],cl
   14006024b:	add    BYTE PTR [rsi-0x2d],bl
   14006024e:	add    DWORD PTR [rax],eax
   140060250:	nop
   140060251:	rex.WB add rax,0x1d36000
   140060257:	add    bl,dl
   140060259:	rol    DWORD PTR [rcx],cl
   14006025b:	add    ah,dl
   14006025d:	retf   0x4
   140060260:	(bad)  
   140060261:	rol    DWORD PTR [rcx],cl
   140060263:	add    BYTE PTR [rbx],cl
   140060265:	(bad)  
   140060266:	add    DWORD PTR [rax],eax
   140060268:	push   rax
   140060269:	rex.WB add rax,0x1d40c00
   14006026f:	add    BYTE PTR [rbx-0x2c],al
   140060272:	add    DWORD PTR [rax],eax
   140060274:	adc    BYTE PTR [rcx+0x5],cl
   140060277:	add    BYTE PTR [rsp+rdx*8+0x1],al
   14006027b:	add    BYTE PTR [rdi+0x5c0001d6],al
   140060281:	add    rax,0x1d68800
   140060287:	add    BYTE PTR [rdi],al
   140060289:	xlat   BYTE PTR ds:[rbx]
   14006028a:	add    DWORD PTR [rax],eax
   14006028c:	sub    BYTE PTR [rax+0x5],cl
   14006028f:	add    BYTE PTR [rax],cl
   140060291:	xlat   BYTE PTR ds:[rbx]
   140060292:	add    DWORD PTR [rax],eax
   140060294:	and    ebx,eax
   140060296:	add    DWORD PTR [rax],eax
   140060298:	in     al,0x47
   14006029a:	add    eax,0x1d82400
   14006029f:	add    BYTE PTR [rcx-0x43fffe28],ah
   1400602a5:	rex.RXB add eax,0x1d8a400
   1400602ab:	add    BYTE PTR [rdx],cl
   1400602ad:	fld    DWORD PTR [rcx]
   1400602af:	add    BYTE PTR [rax+0xc000547],dh
   1400602b5:	fld    DWORD PTR [rcx]
   1400602b7:	add    BYTE PTR [rdx+rbx*8],ch
   1400602ba:	add    DWORD PTR [rax],eax
   1400602bc:	movabs al,ds:0x130001da2c000547
   1400602c5:	fld    QWORD PTR [rcx]
   1400602c7:	add    BYTE PTR [rsi+rax*2-0x22ebfffb],ah
   1400602ce:	add    DWORD PTR [rax],eax
   1400602d0:	retf   
   1400602d1:	fld    QWORD PTR [rcx]
   1400602d3:	add    BYTE PTR [rax-0x33fffaba],dl
   1400602d9:	fld    QWORD PTR [rcx]
   1400602db:	add    BYTE PTR [rdi],ah
   1400602dd:	fiadd  WORD PTR [rcx]
   1400602df:	add    BYTE PTR [rsi+rax*2-0x21d7fffb],al
   1400602e6:	add    DWORD PTR [rax],eax
   1400602e8:	cli    
   1400602e9:	fiadd  WORD PTR [rcx]
   1400602eb:	add    BYTE PTR [rsi+rax*2+0x5],al
   1400602ef:	add    ah,bh
   1400602f1:	fiadd  WORD PTR [rcx]
   1400602f3:	add    cl,ch
   1400602f5:	loop   0x1400602f8
   1400602f7:	add    BYTE PTR [rax-0x13fffabc],ch
   1400602fd:	loop   0x140060300
   1400602ff:	add    dl,ch
   140060301:	jmp    0x184320307
   140060306:	add    eax,0x1e9ec00
   14006030b:	add    BYTE PTR [rsi],dl
   14006030d:	repnz add DWORD PTR [rax],eax
   140060310:	add    al,0x41
   140060312:	add    eax,0x1f21800
   140060317:	add    BYTE PTR [rsi+rsi*8],dh
   14006031a:	add    DWORD PTR [rax],eax
   14006031c:	loopne 0x14006035e
   14006031e:	add    eax,0x1f63400
   140060323:	add    BYTE PTR [rsi+rsi*8+0x1],ch
   140060327:	add    ah,cl
   140060329:	(bad)  
   14006032a:	add    al,0x0
   14006032c:	jl     0x140060324
   14006032e:	add    DWORD PTR [rax],eax
   140060330:	js     0x140060329
   140060332:	add    DWORD PTR [rax],eax
   140060334:	(bad)  
   140060335:	rex add eax,0x1f78000
   14006033b:	add    BYTE PTR [rax-0x7fffe09],ah
   140060341:	(bad)  
   140060342:	add    eax,0x1f7a800
   140060347:	add    al,cl
   140060349:	test   DWORD PTR [rcx],0x53f9000
   14006034f:	add    al,cl
   140060351:	test   DWORD PTR [rcx],0x1f86a00
   140060357:	add    al,ch
   140060359:	ds add eax,0x1f87400
   14006035f:	add    BYTE PTR [rax+rdi*8+0x3e800001],dl
   140060366:	add    eax,0x1f89c00
   14006036b:	add    BYTE PTR [rax+rdi*8+0x3e180001],bh
   140060372:	add    eax,0x1f8c400
   140060377:	add    ah,ah
   140060379:	clc    
   14006037a:	add    DWORD PTR [rax],eax
   14006037c:	mov    al,0x3d
   14006037e:	add    eax,0x1f8e400
   140060383:	add    BYTE PTR [rcx+0x280001fa],dl
   140060389:	cmp    eax,0xfa940005
   14006038e:	add    DWORD PTR [rax],eax
   140060390:	cdq    
   140060391:	sti    
   140060392:	add    DWORD PTR [rax],eax
   140060394:	test   al,0x3c
   140060396:	add    eax,0x1fb9c00
   14006039b:	add    BYTE PTR [rdi-0x3],al
   14006039e:	add    DWORD PTR [rax],eax
   1400603a0:	sbb    al,0x3c
   1400603a2:	add    eax,0x1fd4800
   1400603a7:	add    dh,ch
   1400603a9:	inc    BYTE PTR [rcx]
   1400603ab:	add    BYTE PTR [rax-0xffffac5],dl
   1400603b1:	inc    BYTE PTR [rcx]
   1400603b3:	add    BYTE PTR [rdi+rdi*8+0x1],cl
   1400603b7:	add    BYTE PTR [rax+0x3b],bl
   1400603ba:	add    eax,0x1ff4c00
   1400603bf:	add    BYTE PTR [rbx+0x3c000200],dh
   1400603c5:	cmp    eax,DWORD PTR [rip+0x200b400]        # 0x14206b7cb
   1400603cb:	add    BYTE PTR [rax+0x3c000202],bh
   1400603d1:	cmp    al,BYTE PTR [rip+0x202b800]        # 0x14208bbd7
   1400603d7:	add    BYTE PTR [rbx-0x37fffdfc],ch
   1400603dd:	cmp    DWORD PTR [rip+0x204ac00],eax        # 0x1420aafe3
   1400603e3:	add    BYTE PTR [rcx+0x78000206],ch
   1400603e9:	cmp    DWORD PTR [rip+0x206ac00],eax        # 0x1420cafef
   1400603ef:	add    dh,dl
   1400603f1:	(bad)  
   1400603f2:	add    al,BYTE PTR [rax]
   1400603f4:	(bad)  
   1400603f5:	retf   0x4
   1400603f8:	fadd   DWORD PTR [rsi]
   1400603fa:	add    al,BYTE PTR [rax]
   1400603fc:	cli    
   1400603fd:	(bad)  
   1400603fe:	add    al,BYTE PTR [rax]
   140060400:	(bad)  
   140060401:	retf   0x4
   140060404:	cld    
   140060405:	(bad)  
   140060406:	add    al,BYTE PTR [rax]
   140060408:	and    al,BYTE PTR [rdi]
   14006040a:	add    al,BYTE PTR [rax]
   14006040c:	int3   
   14006040d:	(bad)  
   14006040e:	add    al,0x0
   140060410:	and    al,0x7
   140060412:	add    al,BYTE PTR [rax]
   140060414:	rex.WRX (bad) 
   140060416:	add    al,BYTE PTR [rax]
   140060418:	(bad)  
   140060419:	retf   0x4
   14006041c:	push   rax
   14006041d:	(bad)  
   14006041e:	add    al,BYTE PTR [rax]
   140060420:	xchg   ecx,eax
   140060421:	or     BYTE PTR [rdx],al
   140060423:	add    BYTE PTR [rbx+rcx*2+0x5],cl
   140060427:	add    BYTE PTR [rax+rcx*1+0x9d70002],dl
   14006042e:	add    al,BYTE PTR [rax]
   140060430:	add    al,0x4b
   140060432:	add    eax,0x209d800
   140060437:	add    BYTE PTR [rbx-0x2bfffdf6],ch
   14006043d:	retf   0x4
   140060440:	lods   al,BYTE PTR ds:[rsi]
   140060441:	or     al,BYTE PTR [rdx]
   140060443:	add    dh,ch
   140060445:	or     al,0x2
   140060447:	add    al,al
   140060449:	rex.WX add rax,0x20cf000
   14006044f:	add    dl,cl
   140060451:	lar    eax,WORD PTR [rax]
   140060454:	cmp    al,0x4a
   140060456:	add    eax,0x20fcc00
   14006045b:	add    BYTE PTR [rsi],cl
   14006045d:	adc    DWORD PTR [rdx],eax
   14006045f:	add    BYTE PTR [rsp+rcx*2],bh
   140060462:	add    eax,0x2111000
   140060467:	add    BYTE PTR [rdx+0x12],dh
   14006046a:	add    al,BYTE PTR [rax]
   14006046c:	mov    al,0x4c
   14006046e:	add    eax,0x2127400
   140060473:	add    BYTE PTR [rsi+0x13],bh
   140060476:	add    al,BYTE PTR [rax]
   140060478:	js     0x1400604c6
   14006047a:	add    eax,0x2138000
   14006047f:	add    BYTE PTR [rsp+rdx*1],dh
   140060482:	add    al,BYTE PTR [rax]
   140060484:	test   BYTE PTR [rbx+0x5],cl
   140060487:	add    BYTE PTR [rsp+rdx*1],dh
   14006048a:	add    al,BYTE PTR [rax]
   14006048c:	cmp    edx,DWORD PTR [rip+0x4bb40002]        # 0x18bba0494
   140060492:	add    eax,0x2153c00
   140060497:	add    BYTE PTR [rdx],dh
   140060499:	(bad)  
   14006049a:	add    al,BYTE PTR [rax]
   14006049c:	int3   
   14006049d:	rex.WXB add rax,0x2163400
   1400604a3:	add    BYTE PTR [rsi],ch
   1400604a5:	(bad)  
   1400604a6:	add    al,BYTE PTR [rax]
   1400604a8:	and    BYTE PTR [rbp+rax*1+0x0],cl
   1400604ac:	xor    BYTE PTR [rdi],dl
   1400604ae:	add    al,BYTE PTR [rax]
   1400604b0:	rex.RXB sbb BYTE PTR [r10],r8b
   1400604b3:	add    ah,dh
   1400604b5:	rex.WR add rax,0x2184800
   1400604bb:	add    BYTE PTR [rax],ah
   1400604bd:	sbb    DWORD PTR [rdx],eax
   1400604bf:	add    BYTE PTR [rsp+rcx*2+0x19200005],dl
   1400604c6:	add    al,BYTE PTR [rax]
   1400604c8:	or     eax,0xf000021a
   1400604cd:	rex.WB add rax,0x21a1000
   1400604d3:	add    BYTE PTR [rbx-0x2bfffde6],bh
   1400604d9:	retf   0x4
   1400604dc:	mov    esp,0xef00021a
   1400604e1:	sbb    al,BYTE PTR [rdx]
   1400604e3:	add    ah,dl
   1400604e5:	retf   0x4
   1400604e8:	lock sbb al,BYTE PTR [rdx]
   1400604eb:	add    BYTE PTR [rbx+rbx*1+0x2],cl
   1400604ef:	add    ah,dl
   1400604f1:	retf   0x4
   1400604f4:	sbb    r8,QWORD PTR [rdx]
   1400604f7:	add    bh,bl
   1400604f9:	sbb    eax,DWORD PTR [rdx]
   1400604fb:	add    ah,dl
   1400604fd:	retf   0x4
   140060500:	loopne 0x14006051d
   140060502:	add    al,BYTE PTR [rax]
   140060504:	xor    eax,0xd400021c
   140060509:	retf   0x4
   14006050c:	cmp    BYTE PTR [rdx+rax*1],bl
   14006050f:	add    BYTE PTR [rsp+rbx*1-0x352bfffe],cl
   140060516:	add    al,0x0
   140060518:	mov    WORD PTR [rdx+rax*1],ds
   14006051b:	add    BYTE PTR [rax+0x1d],dl
   14006051e:	add    al,BYTE PTR [rax]
   140060520:	mov    bh,dl
   140060522:	add    al,0x0
   140060524:	push   rax
   140060525:	sbb    eax,0x1fb50002
   14006052a:	add    al,BYTE PTR [rax]
   14006052c:	lock rex.WRB add rax,0x21fb800
   140060533:	add    BYTE PTR [rax+0x20],cl
   140060536:	add    al,BYTE PTR [rax]
   140060538:	pop    rsp
   140060539:	rex.WRX add rax,0x2204800
   14006053f:	add    BYTE PTR [rdx+0x22],cl
   140060542:	add    al,BYTE PTR [rax]
   140060544:	and    al,0x4e
   140060546:	add    eax,0x2224c00
   14006054b:	add    BYTE PTR [rbp+0xc000223],al
   140060551:	rex.WRX add rax,0x2238800
   140060557:	add    BYTE PTR [rcx],dl
   140060559:	and    eax,0x4e640002
   14006055e:	add    eax,0x2251400
   140060563:	add    BYTE PTR [rsi+0x40000226],al
   140060569:	rex.WRX add rax,0x2268800
   14006056f:	add    BYTE PTR [rbp-0x7bfffdd8],al
   140060575:	rex.WRX add rax,0x2288800
   14006057b:	add    cl,dl
   14006057d:	sub    BYTE PTR [rdx],al
   14006057f:	add    ah,dl
   140060581:	retf   0x4
   140060584:	(bad)  
   140060585:	sub    BYTE PTR [rdx],al
   140060587:	add    BYTE PTR [rcx],bh
   140060589:	sub    DWORD PTR [rdx],eax
   14006058b:	add    al,ch
   14006058d:	(bad)  
   14006058e:	add    al,0x0
   140060590:	cmp    al,0x29
   140060592:	add    al,BYTE PTR [rax]
   140060594:	push   rsp
   140060595:	sub    eax,DWORD PTR [rdx]
   140060597:	add    BYTE PTR [rax+0x5400054d],dh
   14006059d:	sub    eax,DWORD PTR [rdx]
   14006059f:	add    bh,bh
   1400605a1:	sub    eax,DWORD PTR [rdx]
   1400605a3:	add    BYTE PTR [rax+0x54e],dh
   1400605a9:	sub    al,0x2
   1400605ab:	add    BYTE PTR [rdx-0x5bfffdd4],bh
   1400605b1:	rex.WRX add rax,0x22cbc00
   1400605b7:	add    BYTE PTR [rcx],bh
   1400605b9:	sub    eax,0xd3100002
   1400605be:	add    al,0x0
   1400605c0:	cmp    al,0x2d
   1400605c2:	add    al,BYTE PTR [rax]
   1400605c4:	rex.WB xor al,BYTE PTR [r10]
   1400605c7:	add    BYTE PTR [rsi+rcx*2+0x324c0005],bh
   1400605ce:	add    al,BYTE PTR [rax]
   1400605d0:	xchg   ebp,eax
   1400605d1:	xor    al,BYTE PTR [rdx]
   1400605d3:	add    ah,ah
   1400605d5:	rex.WRX add rax,0x2329800
   1400605db:	add    dl,ch
   1400605dd:	xor    al,BYTE PTR [rdx]
   1400605df:	add    ah,ah
   1400605e1:	rex.WRX add rax,0x232ec00
   1400605e7:	add    BYTE PTR [rcx],ch
   1400605e9:	xor    eax,DWORD PTR [rdx]
   1400605eb:	add    BYTE PTR [rsp+rdx*2],ch
   1400605ee:	add    eax,0x2332c00
   1400605f3:	add    BYTE PTR [rdi+0x33],al
   1400605f6:	add    al,BYTE PTR [rax]
   1400605f8:	adc    al,0x54
   1400605fa:	add    eax,0x2334800
   1400605ff:	add    BYTE PTR [rdi+0x33],dh
   140060602:	add    al,BYTE PTR [rax]
   140060604:	in     al,0x53
   140060606:	add    eax,0x2337800
   14006060b:	add    dh,bl
   14006060d:	xor    eax,DWORD PTR [rdx]
   14006060f:	add    ah,dl
   140060611:	retf   0x4
   140060614:	loopne 0x140060649
   140060616:	add    al,BYTE PTR [rax]
   140060618:	push   0x35
   14006061a:	add    al,BYTE PTR [rax]
   14006061c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006061d:	push   rbx
   14006061e:	add    eax,0x2356c00
   140060623:	add    BYTE PTR [rbx+0x60000236],bh
   140060629:	push   rbx
   14006062a:	add    eax,0x236bc00
   14006062f:	add    BYTE PTR [rcx+0x39],cl
   140060632:	add    al,BYTE PTR [rax]
   140060634:	(bad)  
   140060635:	push   rdx
   140060636:	add    eax,0x2394c00
   14006063b:	add    BYTE PTR [rsi+0x3b],bh
   14006063e:	add    al,BYTE PTR [rax]
   140060640:	js     0x140060694
   140060642:	add    eax,0x23b8000
   140060647:	add    bh,cl
   140060649:	cmp    eax,DWORD PTR [rdx]
   14006064b:	add    al,ch
   14006064d:	(bad)  
   14006064e:	add    al,0x0
   140060650:	sar    BYTE PTR [rbx],1
   140060652:	add    al,BYTE PTR [rax]
   140060654:	lods   eax,DWORD PTR ds:[rsi]
   140060655:	cmp    eax,0x523c0002
   14006065a:	add    eax,0x23db000
   14006065f:	add    BYTE PTR [rdx-0x3fffdc1],ah
   140060665:	push   rcx
   140060666:	add    eax,0x23fcc00
   14006066b:	add    bh,ah
   14006066d:	(bad)  
   14006066e:	add    al,BYTE PTR [rax]
   140060670:	int3   
   140060671:	(bad)  
   140060672:	add    al,0x0
   140060674:	clc    
   140060675:	(bad)  
   140060676:	add    al,BYTE PTR [rax]
   140060678:	lea    eax,[rax+0x2]
   14006067b:	add    ah,cl
   14006067d:	(bad)  
   14006067e:	add    al,0x0
   140060680:	nop
   140060681:	add    al,BYTE PTR [rax]
   140060684:	cld    
   140060685:	add    al,BYTE PTR [r8]
   140060688:	js     0x1400606db
   14006068a:	add    eax,0x241fc00
   14006068f:	add    BYTE PTR [rsi+0x18000242],bl
   140060695:	push   rcx
   140060696:	add    eax,0x242a000
   14006069b:	add    BYTE PTR [rbx+rax*2],cl
   14006069e:	add    al,BYTE PTR [rax]
   1400606a0:	rex.W push rsp
   1400606a2:	add    eax,0x2430c00
   1400606a7:	add    BYTE PTR [rax-0x63fffdbd],bh
   1400606ad:	push   rax
   1400606ae:	add    eax,0x243c000
   1400606b3:	add    cl,dh
   1400606b5:	rex.XB add al,BYTE PTR [r8]
   1400606b8:	int3   
   1400606b9:	(bad)  
   1400606ba:	add    al,0x0
   1400606bc:	hlt    
   1400606bd:	rex.XB add al,BYTE PTR [r8]
   1400606c0:	imul   eax,DWORD PTR [rdx+rax*1+0x0],0x4cad4
   1400606c8:	mov    BYTE PTR [rdx+rax*1+0x0],al
   1400606cc:	adc    DWORD PTR [rsi+0x2],eax
   1400606cf:	add    BYTE PTR [rax+0x50],dh
   1400606d2:	add    eax,0x2461400
   1400606d7:	add    BYTE PTR [rdx],bh
   1400606d9:	rex.RX add r8b,BYTE PTR [rax]
   1400606dc:	(bad)  
   1400606dd:	retf   0x4
   1400606e0:	cmp    al,0x46
   1400606e2:	add    al,BYTE PTR [rax]
   1400606e4:	in     al,dx
   1400606e5:	rex.RX add r8b,BYTE PTR [rax]
   1400606e8:	hlt    
   1400606e9:	rex.WRXB add rax,0x246ec00
   1400606ef:	add    BYTE PTR [rdi],dh
   1400606f1:	rex.RXB add r8b,BYTE PTR [r8]
   1400606f4:	test   BYTE PTR [rdi+0x5],cl
   1400606f7:	add    BYTE PTR [rax],bh
   1400606f9:	rex.RXB add r8b,BYTE PTR [r8]
   1400606fc:	cwde   
   1400606fd:	rex.RXB add r8b,BYTE PTR [r8]
   140060700:	in     al,dx
   140060701:	rex.WRX add rax,0x2479800
   140060707:	add    BYTE PTR [rbp-0x7fffdb8],dl
   14006070d:	push   rsp
   14006070e:	add    eax,0x2489800
   140060713:	add    BYTE PTR [rcx+rcx*2+0x2],ch
   140060717:	add    ah,ch
   140060719:	push   rsp
   14006071a:	add    eax,0x2496c00
   14006071f:	add    BYTE PTR [rdx+rcx*2],bl
   140060722:	add    al,BYTE PTR [rax]
   140060724:	fcom   QWORD PTR [rbp+rax*1+0x0]
   140060728:	sbb    al,0x4a
   14006072a:	add    al,BYTE PTR [rax]
   14006072c:	pop    rcx
   14006072d:	rex.WX add al,BYTE PTR [rax]
   140060730:	or     al,0x56
   140060732:	add    eax,0x24a5c00
   140060737:	add    BYTE PTR [rdi+0x4a],dh
   14006073a:	add    al,BYTE PTR [rax]
   14006073c:	hlt    
   14006073d:	push   rbp
   14006073e:	add    eax,0x24a7800
   140060743:	add    BYTE PTR [rdx+rcx*2-0x3133fffe],dl
   14006074a:	add    al,0x0
   14006074c:	xchg   esp,eax
   14006074d:	rex.WX add al,BYTE PTR [rax]
   140060750:	int    0x4a
   140060752:	add    al,BYTE PTR [rax]
   140060754:	mov    ah,0x55
   140060756:	add    eax,0x24ad000
   14006075b:	add    bh,bh
   14006075d:	rex.WX add al,BYTE PTR [rax]
   140060760:	mov    WORD PTR [rbp+0x5],ss
   140060763:	add    BYTE PTR [rax],al
   140060765:	rex.WXB add al,BYTE PTR [r8]
   140060768:	rex.W
   140060769:	rex.WR add r8b,BYTE PTR [rax]
   14006076c:	mov    esp,0x48000557
   140060771:	rex.WR add r8b,BYTE PTR [rax]
   140060774:	cli    
   140060775:	rex.WRX add r8b,BYTE PTR [rax]
   140060778:	cmp    BYTE PTR [rsi+0x5],dl
   14006077b:	add    ah,bh
   14006077d:	rex.WRX add r8b,BYTE PTR [rax]
   140060780:	stos   BYTE PTR es:[rdi],al
   140060781:	push   rcx
   140060782:	add    al,BYTE PTR [rax]
   140060784:	rex.R pop rcx
   140060786:	add    eax,0x251ac00
   14006078b:	add    bl,bh
   14006078d:	push   rdx
   14006078e:	add    al,BYTE PTR [rax]
   140060790:	cmp    BYTE PTR [rdx+0x5],bl
   140060793:	add    ah,bh
   140060795:	push   rdx
   140060796:	add    al,BYTE PTR [rax]
   140060798:	(bad)  
   140060799:	push   rsp
   14006079a:	add    al,BYTE PTR [rax]
   14006079c:	add    BYTE PTR [rdi+0x5],dl
   14006079f:	add    BYTE PTR [rax],bl
   1400607a1:	push   rsp
   1400607a2:	add    al,BYTE PTR [rax]
   1400607a4:	rcl    DWORD PTR [rbp+0x2],1
   1400607a7:	add    BYTE PTR [rax+rbx*2+0x55d40005],al
   1400607ae:	add    al,BYTE PTR [rax]
   1400607b0:	and    BYTE PTR [rsi+0x2],dl
   1400607b3:	add    BYTE PTR [rbp+rdx*2+0x5],ah
   1400607b7:	add    BYTE PTR [rax],ah
   1400607b9:	push   rsi
   1400607ba:	add    al,BYTE PTR [rax]
   1400607bc:	push   si
   1400607be:	add    al,BYTE PTR [rax]
   1400607c0:	(bad)  
   1400607c1:	retf   0x4
   1400607c4:	push   0xffffffffca000256
   1400607c9:	push   rsi
   1400607ca:	add    al,BYTE PTR [rax]
   1400607cc:	call   0x10c060ca5
   1400607d1:	push   rsi
   1400607d2:	add    al,BYTE PTR [rax]
   1400607d4:	cli    
   1400607d5:	push   rdi
   1400607d6:	add    al,BYTE PTR [rax]
   1400607d8:	lods   al,BYTE PTR ds:[rsi]
   1400607d9:	pop    rdx
   1400607da:	add    eax,0x257fc00
   1400607df:	add    BYTE PTR [rbx],ch
   1400607e1:	pop    rax
   1400607e2:	add    al,BYTE PTR [rax]
   1400607e4:	call   0x16c060cbd
   1400607e9:	pop    rax
   1400607ea:	add    al,BYTE PTR [rax]
   1400607ec:	imul   ebx,DWORD PTR [rax+0x2],0x0
   1400607f0:	in     al,0x5a
   1400607f2:	add    eax,0x2586c00
   1400607f7:	add    BYTE PTR [rbp-0x17fffda8],dh
   1400607fd:	(bad)  
   1400607fe:	add    al,0x0
   140060800:	mov    eax,0x63000258
   140060805:	pop    rcx
   140060806:	add    al,BYTE PTR [rax]
   140060808:	(bad)  
   140060809:	retf   0x4
   14006080c:	fs pop rcx
   14006080e:	add    al,BYTE PTR [rax]
   140060810:	and    DWORD PTR [rdx+0x2],ebx
   140060813:	add    BYTE PTR [rbp*1+0x5a240005],ch
   14006081a:	add    al,BYTE PTR [rax]
   14006081c:	push   rbx
   14006081d:	pop    rdx
   14006081e:	add    al,BYTE PTR [rax]
   140060820:	call   0x194060cf9
   140060825:	pop    rdx
   140060826:	add    al,BYTE PTR [rax]
   140060828:	cwde   
   140060829:	pop    rdx
   14006082a:	add    al,BYTE PTR [rax]
   14006082c:	adc    al,0x5b
   14006082e:	add    eax,0x25a9800
   140060833:	add    BYTE PTR [rbx],bl
   140060835:	pop    rsp
   140060836:	add    al,BYTE PTR [rax]
   140060838:	fs pop rsp
   14006083a:	add    eax,0x25c1c00
   14006083f:	add    BYTE PTR [rax+0x5c000260],bh
   140060845:	pop    rbx
   140060846:	add    eax,0x260b800
   14006084b:	add    BYTE PTR [rcx],ah
   14006084d:	(bad)  
   14006084e:	add    al,BYTE PTR [rax]
   140060850:	rcr    BYTE PTR [rbp+rax*1+0x0],0x24
   140060855:	(bad)  
   140060856:	add    al,BYTE PTR [rax]
   140060858:	(bad)  
   140060859:	(bad)  
   14006085a:	add    al,BYTE PTR [rax]
   14006085c:	cmp    al,0x5b
   14006085e:	add    eax,0x2616400
   140060863:	add    al,dh
   140060865:	(bad)  
   140060866:	add    al,BYTE PTR [rax]
   140060868:	test   ch,bl
   14006086a:	add    al,0x0
   14006086c:	lock (bad) 
   14006086e:	add    al,BYTE PTR [rax]
   140060870:	cld    
   140060871:	(bad)  
   140060873:	add    BYTE PTR [rax],al
   140060875:	pop    rbp
   140060876:	add    eax,0x262fc00
   14006087b:	add    cl,dh
   14006087d:	movsxd eax,DWORD PTR [rdx]
   14006087f:	add    BYTE PTR [rbx*2+0x63f40005],dl
   140060886:	add    al,BYTE PTR [rax]
   140060888:	data16 add al,BYTE PTR gs:[rax]
   14006088c:	jo     0x140060858
   14006088e:	add    al,0x0
   140060890:	push   0x7a000265
   140060895:	add    al,BYTE PTR gs:[rax]
   140060898:	int3   
   140060899:	(bad)  
   14006089a:	add    al,0x0
   14006089c:	movabs al,ds:0x98000265bf000265
   1400608a5:	retf   0x4
   1400608a8:	shl    BYTE PTR [rbp+0x2],1
   1400608ab:	add    BYTE PTR [rdx+rbp*2-0x355ffffe],dh
   1400608b2:	add    al,0x0
   1400608b4:	mov    ah,0x6a
   1400608b6:	add    al,BYTE PTR [rax]
   1400608b8:	imul   DWORD PTR [rdx+0x2]
   1400608bb:	add    ah,dl
   1400608bd:	retf   0x4
   1400608c0:	clc    
   1400608c1:	push   0x2
   1400608c3:	add    BYTE PTR [rdx],al
   1400608c5:	ins    BYTE PTR es:[rdi],dx
   1400608c6:	add    al,BYTE PTR [rax]
   1400608c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400608c9:	retf   0x4
   1400608cc:	add    al,0x6c
   1400608ce:	add    al,BYTE PTR [rax]
   1400608d0:	sbb    ebp,DWORD PTR [rdx+rax*1+0x0]
   1400608d4:	int3   
   1400608d5:	(bad)  
   1400608d6:	add    al,0x0
   1400608d8:	and    al,0x6c
   1400608da:	add    al,BYTE PTR [rax]
   1400608dc:	pop    rax
   1400608dd:	ins    BYTE PTR es:[rdi],dx
   1400608de:	add    al,BYTE PTR [rax]
   1400608e0:	int3   
   1400608e1:	(bad)  
   1400608e2:	add    al,0x0
   1400608e4:	pop    rax
   1400608e5:	ins    BYTE PTR es:[rdi],dx
   1400608e6:	add    al,BYTE PTR [rax]
   1400608e8:	(bad)  
   1400608e9:	ins    DWORD PTR es:[rdi],dx
   1400608ea:	add    al,BYTE PTR [rax]
   1400608ec:	int3   
   1400608ed:	(bad)  
   1400608ee:	add    al,0x0
   1400608f0:	sbb    BYTE PTR [rbp+0x2],ch
   1400608f3:	add    BYTE PTR [rsi],dh
   1400608f5:	ins    DWORD PTR es:[rdi],dx
   1400608f6:	add    al,BYTE PTR [rax]
   1400608f8:	int3   
   1400608f9:	(bad)  
   1400608fa:	add    al,0x0
   1400608fc:	cmp    BYTE PTR [rbp+0x2],ch
   1400608ff:	add    BYTE PTR [rcx+0x6d],dh
   140060902:	add    al,BYTE PTR [rax]
   140060904:	call   0x1b4060ddd
   140060909:	ins    DWORD PTR es:[rdi],dx
   14006090a:	add    al,BYTE PTR [rax]
   14006090c:	xchg   ebp,eax
   14006090d:	ins    DWORD PTR es:[rdi],dx
   14006090e:	add    al,BYTE PTR [rax]
   140060910:	(bad)  
   140060911:	retf   0x4
   140060914:	test   al,0x6d
   140060916:	add    al,BYTE PTR [rax]
   140060918:	adc    DWORD PTR [rsi+0x2],ebp
   14006091b:	add    BYTE PTR [rsi+rcx*8],ch
   14006091e:	add    al,0x0
   140060920:	adc    al,0x6e
   140060922:	add    al,BYTE PTR [rax]
   140060924:	rex.WRB outs dx,BYTE PTR ds:[rsi]
   140060926:	add    al,BYTE PTR [rax]
   140060928:	call   0x190060e01
   14006092d:	outs   dx,BYTE PTR ds:[rsi]
   14006092e:	add    al,BYTE PTR [rax]
   140060930:	fsubr  QWORD PTR [rsi+0x2]
   140060933:	add    ah,bl
   140060935:	retf   0x4
   140060938:	fsubr  QWORD PTR [rsi+0x2]
   14006093b:	add    BYTE PTR [rip+0xffffffffd400026f],ch        # 0x114060bb0
   140060941:	retf   0x4
   140060944:	xor    BYTE PTR [rdi+0x2],ch
   140060947:	add    al,bl
   140060949:	outs   dx,DWORD PTR ds:[rsi]
   14006094a:	add    al,BYTE PTR [rax]
   14006094c:	(bad)  
   14006094d:	retf   0x4
   140060950:	fsubr  DWORD PTR [rdi+0x2]
   140060953:	add    BYTE PTR [rax+rsi*2+0x2],bl
   140060957:	add    ah,cl
   140060959:	(bad)  
   14006095a:	add    al,0x0
   14006095c:	pop    rsp
   14006095d:	jo     0x140060961
   14006095f:	add    BYTE PTR [rcx+0x71],cl
   140060962:	add    al,BYTE PTR [rax]
   140060964:	mov    esp,0x640004d7
   140060969:	jno    0x14006096d
   14006096b:	add    BYTE PTR [rbx+rsi*2+0x2],cl
   14006096f:	add    ah,ah
   140060971:	retf   0x4
   140060974:	(bad)  
   140060975:	jae    0x140060979
   140060977:	add    dl,bl
   140060979:	jae    0x14006097d
   14006097b:	add    ah,bh
   14006097d:	retf   0x4
   140060980:	fdiv   QWORD PTR [rbx+0x2]
   140060983:	add    BYTE PTR [rcx],bl
   140060985:	je     0x140060989
   140060987:	add    BYTE PTR [rbx+rcx*8],al
   14006098a:	add    al,0x0
   14006098c:	cmp    al,0x74
   14006098e:	add    al,BYTE PTR [rax]
   140060990:	push   rsi
   140060991:	jne    0x140060995
   140060993:	add    BYTE PTR [rsp+rdx*8+0x75580004],al
   14006099a:	add    al,BYTE PTR [rax]
   14006099c:	shl    DWORD PTR [rbp+0x2],1
   14006099f:	add    BYTE PTR [rax],bl
   1400609a1:	sbb    al,BYTE PTR [rip+0x275d400]        # 0x1427bdda7
   1400609a7:	add    dl,ch
   1400609a9:	jne    0x1400609ad
   1400609ab:	add    BYTE PTR [rax],dl
   1400609ad:	rol    DWORD PTR [rax+rax*1],cl
   1400609b0:	in     al,dx
   1400609b1:	jne    0x1400609b5
   1400609b3:	add    BYTE PTR [rdx+0x76],dh
   1400609b6:	add    al,BYTE PTR [rax]
   1400609b8:	pushf  
   1400609b9:	in     al,dx
   1400609ba:	add    al,0x0
   1400609bc:	je     0x140060a34
   1400609be:	add    al,BYTE PTR [rax]
   1400609c0:	mov    dh,BYTE PTR [rsi+0x2]
   1400609c3:	add    BYTE PTR [rax],dl
   1400609c5:	rol    DWORD PTR [rax+rax*1],cl
   1400609c8:	mov    WORD PTR [rsi+0x2],?
   1400609cb:	add    BYTE PTR [rax+0xc000277],cl
   1400609d1:	retf   
   1400609d2:	add    al,0x0
   1400609d4:	mov    BYTE PTR [rdi+0x2],dh
   1400609d7:	add    BYTE PTR [rdi],cl
   1400609d9:	js     0x1400609dd
   1400609db:	add    BYTE PTR [rsp+rbp*8+0x78100004],bl
   1400609e2:	add    al,BYTE PTR [rax]
   1400609e4:	test   DWORD PTR [rax+0x2],edi
   1400609e7:	add    BYTE PTR [rsp+rbx*1],bl
   1400609ea:	add    eax,0x2789000
   1400609ef:	add    cl,dl
   1400609f1:	js     0x1400609f5
   1400609f3:	add    ah,dl
   1400609f5:	retf   0x4
   1400609f8:	test   BYTE PTR [rcx+0x2],bh
   1400609fb:	add    BYTE PTR [rax+0x2400027b],al
   140060a01:	retf   
   140060a02:	add    al,0x0
   140060a04:	cwde   
   140060a05:	jnp    0x140060a09
   140060a07:	add    cl,ah
   140060a09:	jnp    0x140060a0d
   140060a0b:	add    ah,dl
   140060a0d:	retf   0x4
   140060a10:	in     al,0x7b
   140060a12:	add    al,BYTE PTR [rax]
   140060a14:	mov    ch,0x7c
   140060a16:	add    al,BYTE PTR [rax]
   140060a18:	int3   
   140060a19:	rol    DWORD PTR [rax+rax*1],1
   140060a1c:	mov    eax,0xcb00027c
   140060a21:	jl     0x140060a25
   140060a23:	add    ah,cl
   140060a25:	(bad)  
   140060a26:	add    al,0x0
   140060a28:	int3   
   140060a29:	jl     0x140060a2d
   140060a2b:	add    BYTE PTR [rdi+0x7d],ah
   140060a2e:	add    al,BYTE PTR [rax]
   140060a30:	xor    al,0xcb
   140060a32:	add    al,0x0
   140060a34:	push   0xffffffffbb00027d
   140060a39:	jge    0x140060a3d
   140060a3b:	add    ah,cl
   140060a3d:	pop    rbp
   140060a3e:	add    eax,0x27dfc00
   140060a43:	add    BYTE PTR [rsi+rdi*2],dh
   140060a46:	add    al,BYTE PTR [rax]
   140060a48:	int3   
   140060a49:	(bad)  
   140060a4a:	add    al,0x0
   140060a4c:	xor    al,0x7e
   140060a4e:	add    al,BYTE PTR [rax]
   140060a50:	rex.WXB jle 0x140060a55
   140060a53:	add    ah,cl
   140060a55:	(bad)  
   140060a56:	add    al,0x0
   140060a58:	rex.WR jle 0x140060a5d
   140060a5b:	add    BYTE PTR [rax],bl
   140060a5d:	add    BYTE PTR [rdx],0x0
   140060a60:	nop
   140060a61:	int3   
   140060a62:	add    al,0x0
   140060a64:	sbb    BYTE PTR [rax-0x7eb4fffe],al
   140060a6a:	add    al,BYTE PTR [rax]
   140060a6c:	cmp    al,0xcb
   140060a6e:	add    al,0x0
   140060a70:	rex.WR add QWORD PTR [rdx],0x2817000
   140060a77:	add    ah,dl
   140060a79:	retf   0x4
   140060a7c:	jo     0x1400609ff
   140060a7e:	add    al,BYTE PTR [rax]
   140060a80:	repnz add DWORD PTR [rdx],0x4d4e800
   140060a87:	add    ah,dh
   140060a89:	add    DWORD PTR [rdx],0x282ae00
   140060a8f:	add    BYTE PTR [rax-0x35],dh
   140060a92:	add    al,0x0
   140060a94:	mov    al,0x82
   140060a96:	add    al,BYTE PTR [rax]
   140060a98:	(bad)  
   140060a99:	add    DWORD PTR [rdx],0x0
   140060a9c:	(bad)  
   140060a9d:	retf   0x4
   140060aa0:	xor    BYTE PTR [rbx-0x7cabfffe],al
   140060aa6:	add    al,BYTE PTR [rax]
   140060aa8:	int3   
   140060aa9:	(bad)  
   140060aaa:	add    al,0x0
   140060aac:	push   rsp
   140060aad:	add    DWORD PTR [rdx],0x0
   140060ab0:	xchg   ebp,eax
   140060ab1:	add    DWORD PTR [rdx],0x0
   140060ab4:	(bad)  
   140060ab5:	retf   0x4
   140060ab8:	cwde   
   140060ab9:	add    DWORD PTR [rdx],0x0
   140060abc:	scas   al,BYTE PTR es:[rdi]
   140060abd:	add    DWORD PTR [rdx],0x0
   140060ac0:	(bad)  
   140060ac1:	retf   0x4
   140060ac4:	mov    al,0x83
   140060ac6:	add    al,BYTE PTR [rax]
   140060ac8:	(bad)  
   140060ac9:	add    DWORD PTR [rdx],0x0
   140060acc:	(bad)  
   140060acd:	retf   0x4
   140060ad0:	clc    
   140060ad1:	add    DWORD PTR [rdx],0x0
   140060ad4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060ad5:	test   BYTE PTR [rdx],al
   140060ad7:	add    al,ch
   140060ad9:	(bad)  
   140060ada:	add    al,0x0
   140060adc:	mov    ah,0x84
   140060ade:	add    al,BYTE PTR [rax]
   140060ae0:	(bad)  
   140060ae1:	test   BYTE PTR [rdx],al
   140060ae3:	add    ah,cl
   140060ae5:	(bad)  
   140060ae6:	add    al,0x0
   140060ae8:	in     al,dx
   140060ae9:	test   BYTE PTR [rdx],al
   140060aeb:	add    BYTE PTR [rdx],dh
   140060aed:	test   DWORD PTR [rdx],eax
   140060aef:	add    ah,dl
   140060af1:	retf   0x4
   140060af4:	xor    al,0x85
   140060af6:	add    al,BYTE PTR [rax]
   140060af8:	test   DWORD PTR [edx],eax
   140060afb:	add    BYTE PTR [rbx+rcx*8-0x7a97fffc],ah
   140060b02:	add    al,BYTE PTR [rax]
   140060b04:	movabs eax,ds:0xbc0004d4e8000285
   140060b0d:	test   DWORD PTR [rdx],eax
   140060b0f:	add    BYTE PTR [rcx-0x79],dl
   140060b12:	add    al,BYTE PTR [rax]
   140060b14:	mov    al,0xcb
   140060b16:	add    al,0x0
   140060b18:	(bad)  
   140060b19:	xchg   DWORD PTR [rdx],eax
   140060b1b:	add    BYTE PTR [rbx-0x33fffd79],ah
   140060b21:	(bad)  
   140060b22:	add    al,0x0
   140060b24:	(bad)  
   140060b25:	xchg   DWORD PTR [rdx],eax
   140060b27:	add    BYTE PTR [rbx-0x76],al
   140060b2a:	add    al,BYTE PTR [rax]
   140060b2c:	loopne 0x140060af9
   140060b2e:	add    al,0x0
   140060b30:	mov    r8b,BYTE PTR [rdx]
   140060b33:	add    BYTE PTR [rdx+rcx*4+0x2],ah
   140060b37:	add    ah,cl
   140060b39:	(bad)  
   140060b3a:	add    al,0x0
   140060b3c:	mov    al,BYTE PTR fs:[rdx]
   140060b3f:	add    BYTE PTR [rdi-0x33fffd76],cl
   140060b45:	(bad)  
   140060b46:	add    al,0x0
   140060b48:	nop
   140060b49:	mov    al,BYTE PTR [rdx]
   140060b4b:	add    BYTE PTR [rdi-0x33fffd76],dh
   140060b51:	(bad)  
   140060b52:	add    al,0x0
   140060b54:	mov    eax,0xc00028a
   140060b59:	mov    es,WORD PTR [rdx]
   140060b5b:	add    BYTE PTR [rsp+rcx*8],al
   140060b5e:	add    al,0x0
   140060b60:	or     al,0x8e
   140060b62:	add    al,BYTE PTR [rax]
   140060b64:	stc    
   140060b65:	mov    es,WORD PTR [rdx]
   140060b67:	add    BYTE PTR [rsp+rcx*8+0x4],bl
   140060b6b:	add    ah,bh
   140060b6d:	mov    es,WORD PTR [rdx]
   140060b6f:	add    BYTE PTR [rax+rdx*4-0x3393fffe],dl
   140060b76:	add    al,0x0
   140060b78:	xchg   esp,eax
   140060b79:	nop
   140060b7a:	add    al,BYTE PTR [rax]
   140060b7c:	int3   
   140060b7d:	xchg   ecx,eax
   140060b7e:	add    al,BYTE PTR [rax]
   140060b80:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140060b81:	in     eax,dx
   140060b82:	add    al,0x0
   140060b84:	(bad)  
   140060b85:	xchg   ecx,eax
   140060b86:	add    al,BYTE PTR [rax]
   140060b88:	adc    al,0x92
   140060b8a:	add    al,BYTE PTR [rax]
   140060b8c:	int3   
   140060b8d:	(bad)  
   140060b8e:	add    al,0x0
   140060b90:	adc    al,0x92
   140060b92:	add    al,BYTE PTR [rax]
   140060b94:	int3   
   140060b95:	xchg   edx,eax
   140060b96:	add    al,BYTE PTR [rax]
   140060b98:	test   ah,cl
   140060b9a:	add    al,0x0
   140060b9c:	int3   
   140060b9d:	xchg   edx,eax
   140060b9e:	add    al,BYTE PTR [rax]
   140060ba0:	add    al,0x93
   140060ba2:	add    al,BYTE PTR [rax]
   140060ba4:	call   0x14406107d
   140060ba9:	xchg   ebx,eax
   140060baa:	add    al,BYTE PTR [rax]
   140060bac:	cmp    al,0x93
   140060bae:	add    al,BYTE PTR [rax]
   140060bb0:	call   0x17c061089
   140060bb5:	xchg   ebx,eax
   140060bb6:	add    al,BYTE PTR [rax]
   140060bb8:	mov    esi,0x90000293
   140060bbd:	int3   
   140060bbe:	add    al,0x0
   140060bc0:	rcl    BYTE PTR [rbx-0x6a61fffe],0x2
   140060bc7:	add    BYTE PTR [rsp+rcx*8-0x6a5ffffc],ah
   140060bce:	add    al,BYTE PTR [rax]
   140060bd0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140060bd1:	xchg   esi,eax
   140060bd2:	add    al,BYTE PTR [rax]
   140060bd4:	ror    ah,0x4
   140060bd7:	add    BYTE PTR [rax-0x37fffd6a],ch
   140060bdd:	xchg   esi,eax
   140060bde:	add    al,BYTE PTR [rax]
   140060be0:	call   0x1080610b1
   140060be5:	xchg   esi,eax
   140060be6:	add    al,BYTE PTR [rax]
   140060be8:	out    0x96,eax
   140060bea:	add    al,BYTE PTR [rax]
   140060bec:	enter  0x4cc,0x0
   140060bf0:	call   0x145060e8b
   140060bf5:	xchg   edi,eax
   140060bf6:	add    al,BYTE PTR [rax]
   140060bf8:	int3   
   140060bf9:	(bad)  
   140060bfa:	add    al,0x0
   140060bfc:	or     BYTE PTR [rdi-0x68befffe],dl
   140060c02:	add    al,BYTE PTR [rax]
   140060c04:	int3   
   140060c05:	(bad)  
   140060c06:	add    al,0x0
   140060c08:	rex.R xchg edi,eax
   140060c0a:	add    al,BYTE PTR [rax]
   140060c0c:	(bad)  
   140060c0d:	xchg   edi,eax
   140060c0e:	add    al,BYTE PTR [rax]
   140060c10:	test   ch,bl
   140060c12:	add    al,0x0
   140060c14:	(bad)  
   140060c15:	xchg   edi,eax
   140060c16:	add    al,BYTE PTR [rax]
   140060c18:	(bad)  
   140060c19:	cwde   
   140060c1a:	add    al,BYTE PTR [rax]
   140060c1c:	test   ch,bl
   140060c1e:	add    al,0x0
   140060c20:	rex cwde 
   140060c22:	add    al,BYTE PTR [rax]
   140060c24:	ret    0x298
   140060c27:	add    BYTE PTR [rbp+rbx*8-0x673bfffc],al
   140060c2e:	add    al,BYTE PTR [rax]
   140060c30:	rex.WB cqo 
   140060c32:	add    al,BYTE PTR [rax]
   140060c34:	or     ch,cl
   140060c36:	add    al,0x0
   140060c38:	push   0xffffffffbd000299
   140060c3d:	cdq    
   140060c3e:	add    al,BYTE PTR [rax]
   140060c40:	int3   
   140060c41:	(bad)  
   140060c42:	add    al,0x0
   140060c44:	enter  0x299,0x0
   140060c48:	mov    edx,0x2000029a
   140060c4d:	int    0x4
   140060c4f:	add    ah,al
   140060c51:	(bad)  
   140060c52:	add    al,BYTE PTR [rax]
   140060c54:	sub    DWORD PTR [rbx-0x32bffffe],ebx
   140060c5a:	add    al,0x0
   140060c5c:	sub    al,0x9b
   140060c5e:	add    al,BYTE PTR [rax]
   140060c60:	rex.WX
   140060c61:	fwait
   140060c62:	add    al,BYTE PTR [rax]
   140060c64:	adc    bl,dl
   140060c66:	add    al,0x0
   140060c68:	rex.WR
   140060c69:	fwait
   140060c6a:	add    al,BYTE PTR [rax]
   140060c6c:	xchg   DWORD PTR [rbx-0x3133fffe],ebx
   140060c72:	add    al,0x0
   140060c74:	mov    BYTE PTR [rbx-0x6457fffe],bl
   140060c7a:	add    al,BYTE PTR [rax]
   140060c7c:	int3   
   140060c7d:	(bad)  
   140060c7e:	add    al,0x0
   140060c80:	test   al,0x9b
   140060c82:	add    al,BYTE PTR [rax]
   140060c84:	neg    BYTE PTR [rbx-0x2b17fffe]
   140060c8a:	add    al,0x0
   140060c8c:	clc    
   140060c8d:	fwait
   140060c8e:	add    al,BYTE PTR [rax]
   140060c90:	sbb    BYTE PTR [rdx+rax*1+0x4cecc00],bl
   140060c97:	add    BYTE PTR [rax-0x18fffd64],al
   140060c9d:	pushf  
   140060c9e:	add    al,BYTE PTR [rax]
   140060ca0:	pop    rax
   140060ca1:	int    0x4
   140060ca3:	add    al,ch
   140060ca5:	pushf  
   140060ca6:	add    al,BYTE PTR [rax]
   140060ca8:	push   rsp
   140060ca9:	popf   
   140060caa:	add    al,BYTE PTR [rax]
   140060cac:	pop    rsp
   140060cad:	int    0x4
   140060caf:	add    BYTE PTR [rbp+rbx*4+0x2],dl
   140060cb3:	add    BYTE PTR [rdx],cl
   140060cb5:	sahf   
   140060cb6:	add    al,BYTE PTR [rax]
   140060cb8:	pushf  
   140060cb9:	in     al,dx
   140060cba:	add    al,0x0
   140060cbc:	or     al,0x9e
   140060cbe:	add    al,BYTE PTR [rax]
   140060cc0:	cmp    DWORD PTR [rsi-0x352bfffe],ebx
   140060cc6:	add    al,0x0
   140060cc8:	pop    rax
   140060cc9:	sahf   
   140060cca:	add    al,BYTE PTR [rax]
   140060ccc:	(bad)  
   140060ccd:	sahf   
   140060cce:	add    al,BYTE PTR [rax]
   140060cd0:	(bad)  
   140060cd1:	retf   0x4
   140060cd4:	xchg   esp,eax
   140060cd5:	sahf   
   140060cd6:	add    al,BYTE PTR [rax]
   140060cd8:	fcomp  DWORD PTR [rsi-0x2b17fffe]
   140060cde:	add    al,0x0
   140060ce0:	fcomp  DWORD PTR [rsi-0x60eefffe]
   140060ce6:	add    al,BYTE PTR [rax]
   140060ce8:	call   0x1540611c1
   140060ced:	lahf   
   140060cee:	add    al,BYTE PTR [rax]
   140060cf0:	outs   dx,BYTE PTR ds:[rsi]
   140060cf1:	lahf   
   140060cf2:	add    al,BYTE PTR [rax]
   140060cf4:	jl     0x140060cc3
   140060cf6:	add    al,0x0
   140060cf8:	jo     0x140060c99
   140060cfa:	add    al,BYTE PTR [rax]
   140060cfc:	xchg   edi,eax
   140060cfd:	lahf   
   140060cfe:	add    al,BYTE PTR [rax]
   140060d00:	(bad)  
   140060d01:	retf   0x4
   140060d04:	lods   al,BYTE PTR ds:[rsi]
   140060d05:	lahf   
   140060d06:	add    al,BYTE PTR [rax]
   140060d08:	fistp  WORD PTR [rdi-0x352bfffe]
   140060d0e:	add    al,0x0
   140060d10:	call   0x107060fb4
   140060d15:	movabs al,ds:0xa1540004cd8c0002
   140060d1e:	add    al,BYTE PTR [rax]
   140060d20:	(bad)  
   140060d21:	movabs ds:0xa3900004cc900002,al
   140060d2a:	add    al,BYTE PTR [rax]
   140060d2c:	add    eax,0x980002a4
   140060d31:	int    0x4
   140060d33:	add    BYTE PTR [rax],cl
   140060d35:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140060d36:	add    al,BYTE PTR [rax]
   140060d38:	push   0xffffffffffffffa4
   140060d3a:	add    al,BYTE PTR [rax]
   140060d3c:	call   0x1ac061215
   140060d41:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140060d42:	add    al,BYTE PTR [rax]
   140060d44:	xchg   esp,eax
   140060d45:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140060d46:	add    al,BYTE PTR [rax]
   140060d48:	int3   
   140060d49:	(bad)  
   140060d4a:	add    al,0x0
   140060d4c:	xchg   esp,eax
   140060d4d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140060d4e:	add    al,BYTE PTR [rax]
   140060d50:	adc    DWORD PTR [rbp-0x31d3fffe],esp
   140060d56:	add    al,0x0
   140060d58:	adc    al,0xa5
   140060d5a:	add    al,BYTE PTR [rax]
   140060d5c:	movabs ds:0xa40004cc900002a5,al
   140060d65:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140060d66:	add    al,BYTE PTR [rax]
   140060d68:	test   DWORD PTR [rdi-0x31cbfffe],esp
   140060d6e:	add    al,0x0
   140060d70:	mov    BYTE PTR [rdi-0x57bdfffe],ah
   140060d76:	add    al,BYTE PTR [rax]
   140060d78:	mov    eax,0x440004cd
   140060d7d:	test   al,0x2
   140060d7f:	add    BYTE PTR [rax-0x23fffd56],ah
   140060d85:	int    0x4
   140060d87:	add    BYTE PTR [rax+0x4e0002aa],ah
   140060d8d:	lods   eax,DWORD PTR ds:[rsi]
   140060d8e:	add    al,BYTE PTR [rax]
   140060d90:	or     al,0xce
   140060d92:	add    al,0x0
   140060d94:	push   rax
   140060d95:	lods   eax,DWORD PTR ds:[rsi]
   140060d96:	add    al,BYTE PTR [rax]
   140060d98:	sbb    ch,BYTE PTR [rsi-0x31affffe]
   140060d9e:	add    al,0x0
   140060da0:	sbb    al,0xae
   140060da2:	add    al,BYTE PTR [rax]
   140060da4:	movsxd ebp,DWORD PTR [rsi-0x31a3fffe]
   140060daa:	add    al,0x0
   140060dac:	fs scas al,BYTE PTR es:[rdi]
   140060dae:	add    al,BYTE PTR [rax]
   140060db0:	cli    
   140060db1:	scas   eax,DWORD PTR es:[rdi]
   140060db2:	add    al,BYTE PTR [rax]
   140060db4:	jl     0x140060d84
   140060db6:	add    al,0x0
   140060db8:	cld    
   140060db9:	scas   eax,DWORD PTR es:[rdi]
   140060dba:	add    al,BYTE PTR [rax]
   140060dbc:	movabs ds:0xa40004ce940002ba,eax
   140060dc5:	mov    edx,0xbadb0002
   140060dca:	add    al,BYTE PTR [rax]
   140060dcc:	(bad)  
   140060dcd:	retf   0x4
   140060dd0:	fdivr  QWORD PTR [rdx-0x448afffe]
   140060dd6:	add    al,BYTE PTR [rax]
   140060dd8:	or     ch,cl
   140060dda:	add    al,0x0
   140060ddc:	nop
   140060ddd:	mov    ebx,0xbc9a0002
   140060de2:	add    al,BYTE PTR [rax]
   140060de4:	nop
   140060de5:	(bad)  
   140060de6:	add    al,0x0
   140060de8:	pushf  
   140060de9:	mov    esp,0xbd020002
   140060dee:	add    al,BYTE PTR [rax]
   140060df0:	add    al,0xcb
   140060df2:	add    al,0x0
   140060df4:	pushf  
   140060df5:	mov    esi,0xc99e0002
   140060dfa:	add    al,BYTE PTR [rax]
   140060dfc:	xchg   esp,eax
   140060dfd:	(bad)  
   140060dfe:	add    al,0x0
   140060e00:	movabs al,ds:0xb80002c9f10002c9
   140060e09:	(bad)  
   140060e0a:	add    al,0x0
   140060e0c:	hlt    
   140060e0d:	leave  
   140060e0e:	add    al,BYTE PTR [rax]
   140060e10:	(bad)  
   140060e11:	retf   0x2
   140060e14:	pushf  
   140060e15:	in     al,dx
   140060e16:	add    al,0x0
   140060e18:	enter  0x2ca,0x0
   140060e1c:	xor    ecx,ebx
   140060e1e:	add    al,BYTE PTR [rax]
   140060e20:	(bad)  
   140060e21:	retf   0x4
   140060e24:	push   rax
   140060e25:	retf   
   140060e26:	add    al,BYTE PTR [rax]
   140060e28:	(bad)  
   140060e29:	retf   
   140060e2a:	add    al,BYTE PTR [rax]
   140060e2c:	call   0x12c061305
   140060e31:	retf   
   140060e32:	add    al,BYTE PTR [rax]
   140060e34:	test   ah,cl
   140060e36:	add    al,BYTE PTR [rax]
   140060e38:	call   0xc4061311
   140060e3d:	int3   
   140060e3e:	add    al,BYTE PTR [rax]
   140060e40:	mov    ah,0xcc
   140060e42:	add    al,BYTE PTR [rax]
   140060e44:	int3   
   140060e45:	(bad)  
   140060e46:	add    al,0x0
   140060e48:	mov    esp,0x210002cc
   140060e4d:	int    0x2
   140060e4f:	add    ah,dl
   140060e51:	retf   0x4
   140060e54:	and    al,0xcd
   140060e56:	add    al,BYTE PTR [rax]
   140060e58:	push   rbp
   140060e59:	int    0x2
   140060e5b:	add    ah,dl
   140060e5d:	retf   0x4
   140060e60:	enter  0x2cd,0x0
   140060e64:	dec    ebp
   140060e66:	add    al,BYTE PTR [rax]
   140060e68:	in     al,0xce
   140060e6a:	add    al,0x0
   140060e6c:	add    dh,cl
   140060e6e:	add    al,BYTE PTR [rax]
   140060e70:	iret   
   140060e71:	(bad)  
   140060e72:	add    al,BYTE PTR [rax]
   140060e74:	(bad)  
   140060e75:	(bad)  
   140060e76:	add    al,0x0
   140060e78:	ror    dh,1
   140060e7a:	add    al,BYTE PTR [rax]
   140060e7c:	rex.WRX fld DWORD PTR [rdx]
   140060e7f:	add    ah,ch
   140060e81:	(bad)  
   140060e82:	add    al,0x0
   140060e84:	push   rax
   140060e85:	fld    DWORD PTR [rdx]
   140060e87:	add    BYTE PTR [rsi-0x2bfffd27],dl
   140060e8d:	retf   0x4
   140060e90:	movabs al,ds:0x1c0002da0d0002d9
   140060e99:	iret   
   140060e9a:	add    al,0x0
   140060e9c:	adc    dl,bl
   140060e9e:	add    al,BYTE PTR [rax]
   140060ea0:	sbb    edx,0xcf100002
   140060ea6:	add    al,0x0
   140060ea8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140060ea9:	fiadd  DWORD PTR [rdx]
   140060eab:	add    BYTE PTR [rdx],al
   140060ead:	fild   DWORD PTR [rdx]
   140060eaf:	add    ah,dl
   140060eb1:	retf   0x4
   140060eb4:	or     al,0xdb
   140060eb6:	add    al,BYTE PTR [rax]
   140060eb8:	sub    ebx,ebx
   140060eba:	add    al,BYTE PTR [rax]
   140060ebc:	(bad)  
   140060ebd:	retf   0x4
   140060ec0:	sub    al,0xdb
   140060ec2:	add    al,BYTE PTR [rax]
   140060ec4:	rex.WR fild DWORD PTR [rdx]
   140060ec7:	add    ah,dl
   140060ec9:	retf   0x4
   140060ecc:	rex.WR fild DWORD PTR [rdx]
   140060ecf:	add    BYTE PTR [rax-0x17fffd25],dl
   140060ed5:	(bad)  
   140060ed6:	add    al,0x0
   140060ed8:	nop
   140060ed9:	fild   DWORD PTR [rdx]
   140060edb:	add    BYTE PTR [rdi],dl
   140060edd:	fadd   QWORD PTR [rdx]
   140060edf:	add    BYTE PTR [rax+0x180004cc],dl
   140060ee5:	fadd   QWORD PTR [rdx]
   140060ee7:	add    bl,dl
   140060ee9:	fadd   QWORD PTR [rdx]
   140060eeb:	add    BYTE PTR [rax],ch
   140060eed:	iret   
   140060eee:	add    al,0x0
   140060ef0:	(bad)  
   140060ef1:	fadd   QWORD PTR [rdx]
   140060ef3:	add    BYTE PTR [rbx],dh
   140060ef5:	fld    QWORD PTR [rdx]
   140060ef7:	add    BYTE PTR [rsp+rbp*8-0x225ffffc],bl
   140060efe:	add    al,BYTE PTR [rax]
   140060f00:	in     eax,dx
   140060f01:	fld    QWORD PTR [rdx]
   140060f03:	add    BYTE PTR [rax-0x31],dl
   140060f06:	add    al,0x0
   140060f08:	and    dh,bl
   140060f0a:	add    al,BYTE PTR [rax]
   140060f0c:	pop    rcx
   140060f0d:	fiadd  WORD PTR [rdx]
   140060f0f:	add    al,ch
   140060f11:	(bad)  
   140060f12:	add    al,0x0
   140060f14:	xchg   esp,eax
   140060f15:	fiadd  WORD PTR [rdx]
   140060f17:	add    BYTE PTR [rax+0x740002e0],bh
   140060f1d:	iret   
   140060f1e:	add    al,0x0
   140060f20:	shl    al,1
   140060f22:	add    al,BYTE PTR [rax]
   140060f24:	js     0x140060f07
   140060f26:	add    al,BYTE PTR [rax]
   140060f28:	movabs al,ds:0xfd0002e1780004cf
   140060f31:	loope  0x140060f35
   140060f33:	add    ah,dl
   140060f35:	retf   0x4
   140060f38:	add    dl,ah
   140060f3a:	add    al,BYTE PTR [rax]
   140060f3c:	int3   
   140060f3d:	loop   0x140060f41
   140060f3f:	add    ah,dl
   140060f41:	retf   0x4
   140060f44:	int3   
   140060f45:	loop   0x140060f49
   140060f47:	add    BYTE PTR [rdx],bh
   140060f49:	in     eax,0x2
   140060f4b:	add    BYTE PTR [rdi+rcx*8-0x1ac3fffc],ah
   140060f52:	add    al,BYTE PTR [rax]
   140060f54:	pop    rcx
   140060f55:	in     eax,0x2
   140060f57:	add    ah,cl
   140060f59:	(bad)  
   140060f5a:	add    al,0x0
   140060f5c:	pop    rsp
   140060f5d:	in     eax,0x2
   140060f5f:	add    BYTE PTR [rdi-0x2bfffd1b],bh
   140060f65:	retf   0x4
   140060f68:	shl    ch,1
   140060f6a:	add    al,BYTE PTR [rax]
   140060f6c:	hlt    
   140060f6d:	in     eax,0x2
   140060f6f:	add    al,al
   140060f71:	iret   
   140060f72:	add    al,0x0
   140060f74:	add    dh,ah
   140060f76:	add    al,BYTE PTR [rax]
   140060f78:	sbb    dh,ah
   140060f7a:	add    al,BYTE PTR [rax]
   140060f7c:	enter  0x4cf,0x0
   140060f80:	and    dh,ah
   140060f82:	add    al,BYTE PTR [rax]
   140060f84:	and    esi,esp
   140060f86:	add    al,BYTE PTR [rax]
   140060f88:	int3   
   140060f89:	iret   
   140060f8a:	add    al,0x0
   140060f8c:	xor    dh,ah
   140060f8e:	add    al,BYTE PTR [rax]
   140060f90:	xor    esi,esp
   140060f92:	add    al,BYTE PTR [rax]
   140060f94:	ror    bh,1
   140060f96:	add    al,0x0
   140060f98:	xor    al,0xe6
   140060f9a:	add    al,BYTE PTR [rax]
   140060f9c:	lock out 0x2,al
   140060f9f:	add    ah,dl
   140060fa1:	retf   0x4
   140060fa4:	lock out 0x2,al
   140060fa7:	add    BYTE PTR [rdi],ah
   140060fa9:	out    0x2,eax
   140060fab:	add    ah,ch
   140060fad:	sub    al,BYTE PTR [rip+0x2e72800]        # 0x142ed37b3
   140060fb3:	add    BYTE PTR [rcx-0x2bfffd19],cl
   140060fb9:	retf   0x4
   140060fbc:	mov    edi,fs
   140060fbe:	add    al,BYTE PTR [rax]
   140060fc0:	xchg   esi,eax
   140060fc1:	call   0x10fda0fc8
   140060fc6:	add    al,0x0
   140060fc8:	cwde   
   140060fc9:	call   0x1290a0fd0
   140060fce:	add    al,BYTE PTR [rax]
   140060fd0:	add    al,0xcb
   140060fd2:	add    al,0x0
   140060fd4:	add    al,0xe9
   140060fd6:	add    al,BYTE PTR [rax]
   140060fd8:	(bad)  
   140060fd9:	in     al,dx
   140060fda:	add    al,BYTE PTR [rax]
   140060fdc:	(bad)  
   140060fdd:	iret   
   140060fde:	add    al,0x0
   140060fe0:	add    ch,ch
   140060fe2:	add    al,BYTE PTR [rax]
   140060fe4:	(bad)  
   140060fe5:	out    dx,eax
   140060fe6:	add    al,BYTE PTR [rax]
   140060fe8:	in     al,dx
   140060fe9:	iret   
   140060fea:	add    al,0x0
   140060fec:	shr    bh,1
   140060fee:	add    al,BYTE PTR [rax]
   140060ff0:	data16 lock add al,BYTE PTR [rax]
   140060ff4:	fmul   st(7),st
   140060ff6:	add    al,0x0
   140060ff8:	push   0xffffffffcd0002f0
   140060ffd:	icebp  
   140060ffe:	add    al,BYTE PTR [rax]
   140061000:	and    al,0xd0
   140061002:	add    al,0x0
   140061004:	shl    cl,1
   140061006:	add    al,BYTE PTR [rax]
   140061008:	rex.WR
   140061009:	repnz add al,BYTE PTR [rax]
   14006100c:	adc    al,0xd0
   14006100e:	add    al,0x0
   140061010:	rex.WR
   140061011:	repnz add al,BYTE PTR [rax]
   140061014:	xchg   ebp,eax
   140061015:	repnz add al,BYTE PTR [rax]
   140061018:	sbb    al,0x1c
   14006101a:	add    eax,0x2f2b000
   14006101f:	add    BYTE PTR [rdi-0xd],dh
   140061022:	add    al,BYTE PTR [rax]
   140061024:	push   rax
   140061025:	rol    BYTE PTR [rax+rax*1],1
   140061028:	mov    ah,0xf3
   14006102a:	add    al,BYTE PTR [rax]
   14006102c:	(bad)  
   14006102e:	add    al,BYTE PTR [rax]
   140061030:	int3   
   140061031:	(bad)  
   140061032:	add    al,0x0
   140061034:	fdivr  st(3),st
   140061036:	add    al,BYTE PTR [rax]
   140061038:	rex.WRXB hlt 
   14006103a:	add    al,BYTE PTR [rax]
   14006103c:	(bad)  
   14006103d:	retf   0x4
   140061040:	push   rax
   140061041:	hlt    
   140061042:	add    al,BYTE PTR [rax]
   140061044:	cmp    al,0xf5
   140061046:	add    al,BYTE PTR [rax]
   140061048:	push   rsp
   140061049:	rol    BYTE PTR [rax+rax*1],1
   14006104c:	cmp    al,0xf5
   14006104e:	add    al,BYTE PTR [rax]
   140061050:	mov    al,0xfc
   140061052:	add    al,BYTE PTR [rax]
   140061054:	adc    al,0x4
   140061057:	add    BYTE PTR [rax-0x5ffffd04],dh
   14006105d:	std    
   14006105e:	add    al,BYTE PTR [rax]
   140061060:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140061061:	rol    BYTE PTR [rax+rax*1],1
   140061064:	movabs al,ds:0x9c0002fe330002fd
   14006106d:	in     al,dx
   14006106e:	add    al,0x0
   140061070:	xor    al,0xfe
   140061072:	add    al,BYTE PTR [rax]
   140061074:	xchg   esi,edi
   140061076:	add    al,BYTE PTR [rax]
   140061078:	(bad)  
   140061079:	retf   0x4
   14006107c:	mov    dh,bh
   14006107e:	add    al,BYTE PTR [rax]
   140061080:	retf   
   140061081:	inc    BYTE PTR [rdx]
   140061083:	add    BYTE PTR [rsi+rcx*8],ch
   140061086:	add    al,0x0
   140061088:	int3   
   140061089:	inc    BYTE PTR [rdx]
   14006108b:	add    BYTE PTR [rcx],dl
   14006108d:	inc    DWORD PTR [rdx]
   14006108f:	add    BYTE PTR [rsi+rcx*8],ch
   140061092:	add    al,0x0
   140061094:	and    bh,bh
   140061096:	add    al,BYTE PTR [rax]
   140061098:	test   DWORD PTR [rax],0xd0d00003
   14006109e:	add    al,0x0
   1400610a0:	clc    
   1400610a1:	add    BYTE PTR [rbx],al
   1400610a3:	add    BYTE PTR [rcx+0x2],cl
   1400610a6:	add    eax,DWORD PTR [rax]
   1400610a8:	in     al,dx
   1400610a9:	rol    BYTE PTR [rax+rax*1],1
   1400610ac:	push   rsp
   1400610ad:	add    al,BYTE PTR [rbx]
   1400610af:	add    dh,dl
   1400610b1:	or     al,0x3
   1400610b3:	add    ah,ch
   1400610b5:	(bad)  
   1400610b6:	add    al,0x0
   1400610b8:	fmul   DWORD PTR [rbx+rax*1]
   1400610bb:	add    BYTE PTR [rcx],ch
   1400610bd:	or     eax,0xceb80003
   1400610c2:	add    al,0x0
   1400610c4:	sub    al,0xd
   1400610c6:	add    eax,DWORD PTR [rax]
   1400610c8:	ror    BYTE PTR [rip+0xffffffffcd080003],0x4        # 0x10d0e10d2
   1400610cf:	add    al,al
   1400610d1:	or     eax,0xe680003
   1400610d6:	add    eax,DWORD PTR [rax]
   1400610d8:	add    al,0xd1
   1400610da:	add    al,0x0
   1400610dc:	push   0xffffffffb400030e
   1400610e1:	(bad)  
   1400610e2:	add    eax,DWORD PTR [rax]
   1400610e4:	(bad)  
   1400610e5:	retf   0x4
   1400610e8:	mov    ah,0xe
   1400610ea:	add    eax,DWORD PTR [rax]
   1400610ec:	sub    eax,0x9c00030f
   1400610f1:	in     al,dx
   1400610f2:	add    al,0x0
   1400610f4:	cmp    al,0xf
   1400610f6:	add    eax,DWORD PTR [rax]
   1400610f8:	and    dl,BYTE PTR [rax]
   1400610fa:	add    eax,DWORD PTR [rax]
   1400610fc:	sub    al,0xd1
   1400610fe:	add    al,0x0
   140061100:	and    al,0x10
   140061102:	add    eax,DWORD PTR [rax]
   140061104:	scas   al,BYTE PTR es:[rdi]
   140061105:	adc    DWORD PTR [rbx],eax
   140061107:	add    BYTE PTR [rcx+rdx*8+0x4],ch
   14006110b:	add    BYTE PTR [rax-0x3bfffcef],dh
   140061111:	adc    DWORD PTR [rbx],eax
   140061113:	add    BYTE PTR [rax],dl
   140061115:	rol    DWORD PTR [rax+rax*1],cl
   140061118:	loopne 0x14006112b
   14006111a:	add    eax,DWORD PTR [rax]
   14006111c:	adc    al,BYTE PTR cs:[rbx]
   14006111f:	add    BYTE PTR [rax+0x300004d1],al
   140061125:	adc    al,BYTE PTR [rbx]
   140061127:	add    BYTE PTR [rdi+0x12],dl
   14006112a:	add    eax,DWORD PTR [rax]
   14006112c:	adc    bl,dl
   14006112e:	add    al,0x0
   140061130:	pop    rax
   140061131:	adc    al,BYTE PTR [rbx]
   140061133:	add    BYTE PTR [rbx+0x12],ch
   140061136:	add    eax,DWORD PTR [rax]
   140061138:	adc    bl,dl
   14006113a:	add    al,0x0
   14006113c:	ins    BYTE PTR es:[rdi],dx
   14006113d:	adc    al,BYTE PTR [rbx]
   14006113f:	add    BYTE PTR [rbx+rdx*1+0x3],bh
   140061143:	add    BYTE PTR [rax-0x77fffb34],dl
   140061149:	adc    eax,DWORD PTR [rbx]
   14006114b:	add    BYTE PTR [rdi],bl
   14006114d:	adc    al,0x3
   14006114f:	add    ah,cl
   140061151:	(bad)  
   140061152:	add    al,0x0
   140061154:	and    BYTE PTR [rbx+rax*1],dl
   140061157:	add    BYTE PTR [rsi],dh
   140061159:	adc    eax,0xd1880003
   14006115e:	add    al,0x0
   140061160:	cmp    BYTE PTR [rip+0x15ce0003],dl        # 0x155d41169
   140061166:	add    eax,DWORD PTR [rax]
   140061168:	movabs al,ds:0x7a000315d00004d1
   140061171:	(bad)  
   140061172:	add    eax,DWORD PTR [rax]
   140061174:	(bad)  
   140061175:	(bad)  
   140061176:	add    al,0x0
   140061178:	jl     0x140061190
   14006117a:	add    eax,DWORD PTR [rax]
   14006117c:	call   QWORD PTR [rsi]
   14006117e:	add    eax,DWORD PTR [rax]
   140061180:	(bad)  
   140061181:	retf   0x4
   140061184:	sub    al,0x17
   140061186:	add    eax,DWORD PTR [rax]
   140061188:	test   DWORD PTR [rdi],edx
   14006118a:	add    eax,DWORD PTR [rax]
   14006118c:	int3   
   14006118d:	rol    DWORD PTR [rax+rax*1],1
   140061190:	mov    BYTE PTR [rdi],dl
   140061192:	add    eax,DWORD PTR [rax]
   140061194:	sbb    DWORD PTR es:[rbx],eax
   140061197:	add    ah,dl
   140061199:	rol    DWORD PTR [rax+rax*1],1
   14006119c:	sub    BYTE PTR [rcx],bl
   14006119e:	add    eax,DWORD PTR [rax]
   1400611a0:	movabs ds:0xa40004d4e8000319,al
   1400611a9:	sbb    DWORD PTR [rbx],eax
   1400611ab:	add    BYTE PTR [rdx],cl
   1400611ad:	sbb    al,BYTE PTR [rbx]
   1400611af:	add    al,ch
   1400611b1:	rol    DWORD PTR [rax+rax*1],1
   1400611b4:	or     al,0x1a
   1400611b6:	add    eax,DWORD PTR [rax]
   1400611b8:	neg    BYTE PTR [rdx]
   1400611ba:	add    eax,DWORD PTR [rax]
   1400611bc:	or     al,0xd2
   1400611be:	add    al,0x0
   1400611c0:	clc    
   1400611c1:	sbb    al,BYTE PTR [rbx]
   1400611c3:	add    BYTE PTR [rax],bl
   1400611c5:	sbb    eax,DWORD PTR [rbx]
   1400611c7:	add    ah,cl
   1400611c9:	(bad)  
   1400611ca:	add    al,0x0
   1400611cc:	sbb    BYTE PTR [rbx],bl
   1400611ce:	add    eax,DWORD PTR [rax]
   1400611d0:	push   rbx
   1400611d1:	sbb    eax,DWORD PTR [rbx]
   1400611d3:	add    ah,ah
   1400611d5:	rex.WRX add rax,0x31b5400
   1400611db:	add    BYTE PTR [rdi],ch
   1400611dd:	sbb    al,0x3
   1400611df:	add    BYTE PTR [rdx+rdx*8],dh
   1400611e2:	add    al,0x0
   1400611e4:	xor    BYTE PTR [rbx+rax*1],bl
   1400611e7:	add    BYTE PTR [rax],al
   1400611e9:	sbb    eax,0xd2440003
   1400611ee:	add    al,0x0
   1400611f0:	add    BYTE PTR [rip+0x1dcb0003],bl        # 0x15dd111f9
   1400611f6:	add    eax,DWORD PTR [rax]
   1400611f8:	call   0x10c0616d1
   1400611fd:	sbb    eax,0x1e030003
   140061202:	add    eax,DWORD PTR [rax]
   140061204:	(bad)  
   140061205:	retf   0x4
   140061208:	push   rsp
   140061209:	(bad)  
   14006120a:	add    eax,DWORD PTR [rax]
   14006120c:	jne    0x14006122c
   14006120e:	add    eax,DWORD PTR [rax]
   140061210:	(bad)  
   140061211:	retf   0x4
   140061214:	js     0x140061234
   140061216:	add    eax,DWORD PTR [rax]
   140061218:	cdq    
   140061219:	(bad)  
   14006121a:	add    eax,DWORD PTR [rax]
   14006121c:	(bad)  
   14006121d:	retf   0x4
   140061220:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140061221:	(bad)  
   140061222:	add    eax,DWORD PTR [rax]
   140061224:	rcr    DWORD PTR [rsi],cl
   140061226:	add    eax,DWORD PTR [rax]
   140061228:	call   0x114061701
   14006122d:	(bad)  
   14006122e:	add    eax,DWORD PTR [rax]
   140061230:	(bad)  
   140061231:	(bad)  
   140061232:	add    eax,DWORD PTR [rax]
   140061234:	in     al,0x4e
   140061236:	add    eax,0x31f1800
   14006123b:	add    BYTE PTR [rsi+0x1f],cl
   14006123e:	add    eax,DWORD PTR [rax]
   140061240:	in     al,0x4e
   140061242:	add    eax,0x31f5000
   140061247:	add    BYTE PTR [rsi-0x1bfffce1],al
   14006124d:	rex.WRX add rax,0x31f8800
   140061253:	add    BYTE PTR [rbx],ah
   140061255:	and    BYTE PTR [rbx],al
   140061257:	add    al,ch
   140061259:	(bad)  
   14006125a:	add    al,0x0
   14006125c:	and    al,0x20
   14006125e:	add    eax,DWORD PTR [rax]
   140061260:	pop    rax
   140061261:	and    BYTE PTR [rbx],al
   140061263:	add    ah,dl
   140061265:	retf   0x4
   140061268:	pop    rax
   140061269:	and    BYTE PTR [rbx],al
   14006126b:	add    ah,dl
   14006126d:	and    BYTE PTR [rbx],al
   14006126f:	add    BYTE PTR [rax-0x2bfffb34],dl
   140061275:	and    BYTE PTR [rbx],al
   140061277:	add    dl,bh
   140061279:	and    BYTE PTR [rbx],al
   14006127b:	add    ah,dl
   14006127d:	retf   0x4
   140061280:	cld    
   140061281:	and    BYTE PTR [rbx],al
   140061283:	add    BYTE PTR [rsi+0x21],al
   140061286:	add    eax,DWORD PTR [rax]
   140061288:	call   0x188061761
   14006128d:	and    DWORD PTR [rbx],eax
   14006128f:	add    BYTE PTR [rbx-0x17fffcdf],bh
   140061295:	(bad)  
   140061296:	add    al,0x0
   140061298:	fsub   QWORD PTR [rcx]
   14006129a:	add    eax,DWORD PTR [rax]
   14006129c:	stc    
   14006129d:	and    DWORD PTR [rbx],eax
   14006129f:	add    ah,cl
   1400612a1:	(bad)  
   1400612a2:	add    al,0x0
   1400612a4:	sbb    BYTE PTR [rdx],ah
   1400612a6:	add    eax,DWORD PTR [rax]
   1400612a8:	imul   esp,DWORD PTR [rdx],0xcad40003
   1400612ae:	add    al,0x0
   1400612b0:	ins    BYTE PTR es:[rdi],dx
   1400612b1:	and    al,BYTE PTR [rbx]
   1400612b3:	add    BYTE PTR [rbx-0x33fffcde],ch
   1400612b9:	(bad)  
   1400612ba:	add    al,0x0
   1400612bc:	mov    al,0x22
   1400612be:	add    eax,DWORD PTR [rax]
   1400612c0:	and    r8,QWORD PTR [r11]
   1400612c3:	add    ah,cl
   1400612c5:	pop    rbp
   1400612c6:	add    eax,0x3235000
   1400612cb:	add    dl,al
   1400612cd:	and    eax,DWORD PTR [rbx]
   1400612cf:	add    BYTE PTR [rsp+rbp*8+0x23c40004],bl
   1400612d6:	add    eax,DWORD PTR [rax]
   1400612d8:	pop    rbx
   1400612d9:	add    eax,DWORD PTR es:[rax]
   1400612dc:	test   dl,dl
   1400612de:	add    al,0x0
   1400612e0:	push   0x31000326
   1400612e5:	(bad)  
   1400612e6:	add    eax,DWORD PTR [rax]
   1400612e8:	call   0x1740617bf
   1400612ed:	(bad)  
   1400612ee:	add    eax,DWORD PTR [rax]
   1400612f0:	(bad)  
   1400612f1:	sub    BYTE PTR [rbx],al
   1400612f3:	add    BYTE PTR [rbp*1+0x28600005],ch
   1400612fa:	add    eax,DWORD PTR [rax]
   1400612fc:	hlt    
   1400612fd:	sub    BYTE PTR [rbx],al
   1400612ff:	add    ah,dl
   140061301:	rol    DWORD PTR [rax+rax*1],1
   140061304:	hlt    
   140061305:	sub    BYTE PTR [rbx],al
   140061307:	add    BYTE PTR [rbp-0x43fffcd7],dl
   14006130d:	xlat   BYTE PTR ds:[rbx]
   14006130e:	add    al,0x0
   140061310:	cwde   
   140061311:	sub    DWORD PTR [rbx],eax
   140061313:	add    cl,ch
   140061315:	sub    DWORD PTR [rbx],eax
   140061317:	add    al,al
   140061319:	rol    BYTE PTR [rax+rax*1],cl
   14006131c:	in     al,dx
   14006131d:	sub    DWORD PTR [rbx],eax
   14006131f:	add    BYTE PTR [rdi],ch
   140061321:	sub    al,BYTE PTR [rbx]
   140061323:	add    ah,dl
   140061325:	retf   0x4
   140061328:	xor    BYTE PTR [rdx],ch
   14006132a:	add    eax,DWORD PTR [rax]
   14006132c:	mov    gs,WORD PTR [rdx]
   14006132e:	add    eax,DWORD PTR [rax]
   140061330:	call   0xd0061809
   140061335:	sub    al,BYTE PTR [rbx]
   140061337:	add    BYTE PTR [rbp-0x33fffcd6],ah
   14006133d:	(bad)  
   14006133e:	add    al,0x0
   140061340:	test   al,0x2a
   140061342:	add    eax,DWORD PTR [rax]
   140061344:	mov    ebp,0xcc00032a
   140061349:	(bad)  
   14006134a:	add    al,0x0
   14006134c:	shr    BYTE PTR [rdx],0x3
   14006134f:	add    dl,dh
   140061351:	sub    al,BYTE PTR [rbx]
   140061353:	add    ah,dl
   140061355:	retf   0x4
   140061358:	hlt    
   140061359:	sub    al,BYTE PTR [rbx]
   14006135b:	add    BYTE PTR [rdi],cl
   14006135d:	sub    eax,DWORD PTR [rbx]
   14006135f:	add    ah,dl
   140061361:	retf   0x4
   140061364:	adc    BYTE PTR [rbx],ch
   140061366:	add    eax,DWORD PTR [rax]
   140061368:	sub    ebp,DWORD PTR [rbx]
   14006136a:	add    eax,DWORD PTR [rax]
   14006136c:	(bad)  
   14006136d:	retf   0x4
   140061370:	sub    al,0x2b
   140061372:	add    eax,DWORD PTR [rax]
   140061374:	movabs eax,ds:0xa40004d29c00032c
   14006137d:	sub    al,0x3
   14006137f:	add    BYTE PTR [rbx],ch
   140061381:	sub    eax,0xd3000003
   140061386:	add    al,0x0
   140061388:	sub    al,0x2d
   14006138a:	add    eax,DWORD PTR [rax]
   14006138c:	or     BYTE PTR [rdi],ch
   14006138e:	add    eax,DWORD PTR [rax]
   140061390:	xor    bl,dl
   140061392:	add    al,0x0
   140061394:	or     BYTE PTR [rdi],ch
   140061396:	add    eax,DWORD PTR [rax]
   140061398:	cmp    BYTE PTR [rax],dh
   14006139a:	add    eax,DWORD PTR [rax]
   14006139c:	sbb    bl,dl
   14006139e:	add    al,0x0
   1400613a0:	cmp    BYTE PTR [rax],dh
   1400613a2:	add    eax,DWORD PTR [rax]
   1400613a4:	push   rsi
   1400613a5:	xor    BYTE PTR [rbx],al
   1400613a7:	add    BYTE PTR [rax],dl
   1400613a9:	rol    DWORD PTR [rax+rax*1],cl
   1400613ac:	pop    rax
   1400613ad:	xor    BYTE PTR [rbx],al
   1400613af:	add    BYTE PTR [rcx+rsi*1-0x2cb3fffd],cl
   1400613b6:	add    al,0x0
   1400613b8:	mov    WORD PTR [rcx],?
   1400613ba:	add    eax,DWORD PTR [rax]
   1400613bc:	movabs ds:0xa40004d310000331,al
   1400613c5:	xor    DWORD PTR [rbx],eax
   1400613c7:	add    BYTE PTR [rdi+0x32],ch
   1400613ca:	add    eax,DWORD PTR [rax]
   1400613cc:	fs (bad) 
   1400613ce:	add    al,0x0
   1400613d0:	jo     0x140061404
   1400613d2:	add    eax,DWORD PTR [rax]
   1400613d4:	jns    0x14006140a
   1400613d6:	add    eax,DWORD PTR [rax]
   1400613d8:	pushf  
   1400613d9:	rol    DWORD PTR [rax+rax*1],cl
   1400613dc:	jl     0x140061412
   1400613de:	add    eax,DWORD PTR [rax]
   1400613e0:	fdiv   DWORD PTR [rbx+rax*1]
   1400613e3:	add    BYTE PTR [rax-0x2d],bh
   1400613e6:	add    al,0x0
   1400613e8:	fdiv   DWORD PTR [rbx+rax*1]
   1400613eb:	add    BYTE PTR [rbp+rsi*1-0x2c53fffd],cl
   1400613f2:	add    al,0x0
   1400613f4:	mov    WORD PTR [rip+0x36900003],?        # 0x1769613fd
   1400613fa:	add    eax,DWORD PTR [rax]
   1400613fc:	fcom   st(3)
   1400613fe:	add    al,0x0
   140061400:	nop
   140061401:	add    eax,DWORD PTR ss:[rax]
   140061404:	ins    DWORD PTR es:[rdi],dx
   140061405:	(bad)  
   140061406:	add    eax,DWORD PTR [rax]
   140061408:	add    al,0xd4
   14006140a:	add    al,0x0
   14006140c:	jo     0x140061445
   14006140e:	add    eax,DWORD PTR [rax]
   140061410:	and    BYTE PTR [rdx],bh
   140061412:	add    eax,DWORD PTR [rax]
   140061414:	adc    ah,dl
   140061416:	add    al,0x0
   140061418:	and    BYTE PTR [rdx],bh
   14006141a:	add    eax,DWORD PTR [rax]
   14006141c:	mov    edi,0x1000033c
   140061421:	(bad)  
   140061422:	add    al,0x0
   140061424:	enter  0x33c,0x0
   140061428:	mov    edx,0x3400033e
   14006142d:	(bad)  
   14006142e:	add    al,0x0
   140061430:	(bad)  
   140061431:	add    eax,DWORD PTR ds:[rax]
   140061434:	(bad)  
   140061436:	add    eax,DWORD PTR [rax]
   140061438:	sub    ah,dl
   14006143a:	add    al,0x0
   14006143c:	adc    BYTE PTR [rdi],bh
   14006143e:	add    eax,DWORD PTR [rax]
   140061440:	rex.RB (bad) 
   140061442:	add    eax,DWORD PTR [rax]
   140061444:	pop    rsp
   140061445:	(bad)  
   140061446:	add    al,0x0
   140061448:	rex.W (bad) 
   14006144a:	add    eax,DWORD PTR [rax]
   14006144c:	idiv   DWORD PTR [rdi]
   14006144e:	add    eax,DWORD PTR [rax]
   140061450:	fs (bad) 
   140061452:	add    al,0x0
   140061454:	adc    BYTE PTR [rax+0x3],al
   140061457:	add    BYTE PTR [rbp+0x78000340],cl
   14006145d:	(bad)  
   14006145e:	add    al,0x0
   140061460:	nop
   140061461:	rex add eax,DWORD PTR [rax]
   140061464:	fadd   DWORD PTR [rcx+0x3]
   140061467:	add    BYTE PTR [rax-0x27fffb29],cl
   14006146d:	add    eax,DWORD PTR [r8]
   140061470:	retf   0x343
   140061473:	add    BYTE PTR [rsp+rdx*8],dh
   140061476:	add    al,0x0
   140061478:	(bad)  
   140061479:	rex.XB add eax,DWORD PTR [r8]
   14006147c:	(bad)  
   14006147d:	add    r8d,DWORD PTR [rax]
   140061480:	sub    ah,dl
   140061482:	add    al,0x0
   140061484:	and    BYTE PTR [rbx+rax*1+0x0],al
   140061488:	rex.R
   140061489:	add    r8d,DWORD PTR [rax]
   14006148c:	jl     0x140061462
   14006148e:	add    al,0x0
   140061490:	add    BYTE PTR [rbx+rax*1+0x0],0xc6
   140061495:	add    r8d,DWORD PTR [rax]
   140061498:	int3   
   140061499:	(bad)  
   14006149a:	add    al,0x0
   14006149c:	enter  0x344,0x0
   1400614a0:	jnp    0x1400614e7
   1400614a2:	add    eax,DWORD PTR [rax]
   1400614a4:	xor    al,0x24
   1400614a6:	add    eax,0x3457c00
   1400614ab:	add    BYTE PTR [rdx+0x46],ah
   1400614ae:	add    eax,DWORD PTR [rax]
   1400614b0:	test   ah,dl
   1400614b2:	add    al,0x0
   1400614b4:	rex.RX add r8d,DWORD PTR fs:[rax]
   1400614b8:	rol    BYTE PTR [rsi+0x3],cl
   1400614bb:	add    BYTE PTR [rcx*1+0x46d40005],bl
   1400614c2:	add    eax,DWORD PTR [rax]
   1400614c4:	(bad)  
   1400614c5:	rex.RX add r8d,DWORD PTR [rax]
   1400614c8:	adc    bl,dl
   1400614ca:	add    al,0x0
   1400614cc:	add    al,0x47
   1400614ce:	add    eax,DWORD PTR [rax]
   1400614d0:	xchg   ebx,eax
   1400614d1:	rex.RXB add r8d,DWORD PTR [r8]
   1400614d4:	fs (bad) 
   1400614d6:	add    al,0x0
   1400614d8:	xchg   esp,eax
   1400614d9:	rex.RXB add r8d,DWORD PTR [r8]
   1400614dc:	add    cl,BYTE PTR [rax+0x3]
   1400614df:	add    BYTE PTR [rax+0x40004d5],ch
   1400614e5:	add    rax,QWORD PTR [rax]
   1400614e8:	and    eax,0xd4000348
   1400614ed:	retf   0x4
   1400614f0:	cmp    BYTE PTR [rax+0x3],cl
   1400614f3:	add    BYTE PTR [rcx+0x48],dh
   1400614f6:	add    eax,DWORD PTR [rax]
   1400614f8:	call   0x1b40619d1
   1400614fd:	add    rax,QWORD PTR [rax]
   140061500:	xor    eax,0x4c000349
   140061505:	(bad)  
   140061506:	add    al,0x0
   140061508:	cmp    BYTE PTR [rcx+0x3],cl
   14006150b:	add    ah,ch
   14006150d:	add    r8,QWORD PTR [r8]
   140061510:	xor    ch,dl
   140061512:	add    al,0x0
   140061514:	in     al,dx
   140061515:	add    r8,QWORD PTR [r8]
   140061518:	push   rcx
   140061519:	push   rax
   14006151a:	add    eax,DWORD PTR [rax]
   14006151c:	nop
   14006151d:	(bad)  
   14006151e:	add    al,0x0
   140061520:	push   rsp
   140061521:	push   rax
   140061522:	add    eax,DWORD PTR [rax]
   140061524:	sub    edx,DWORD PTR [rcx+0x3]
   140061527:	add    al,cl
   140061529:	(bad)  
   14006152a:	add    al,0x0
   14006152c:	push   rax
   14006152d:	push   rcx
   14006152e:	add    eax,DWORD PTR [rax]
   140061530:	(bad)  
   140061531:	push   rdx
   140061532:	add    eax,DWORD PTR [rax]
   140061534:	fs (bad) 
   140061536:	add    al,0x0
   140061538:	or     BYTE PTR [rdx+0x3],dl
   14006153b:	add    BYTE PTR [rip+0xfffffffffc000354],al        # 0x13c061895
   140061541:	(bad)  
   140061542:	add    al,0x0
   140061544:	or     BYTE PTR [rbx+rax*1+0x0],dl
   140061548:	or     edx,DWORD PTR [rsi+0x3]
   14006154b:	add    BYTE PTR [rsp+rdx*8+0x560c0004],bl
   140061552:	add    eax,DWORD PTR [rax]
   140061554:	pop    rdi
   140061555:	push   rsi
   140061556:	add    eax,DWORD PTR [rax]
   140061558:	int3   
   140061559:	(bad)  
   14006155a:	add    al,0x0
   14006155c:	(bad)  
   14006155d:	push   rsi
   14006155e:	add    eax,DWORD PTR [rax]
   140061560:	repnz push rdi
   140061562:	add    eax,DWORD PTR [rax]
   140061564:	hlt    
   140061565:	(bad)  
   140061566:	add    al,0x0
   140061568:	hlt    
   140061569:	push   rdi
   14006156a:	add    eax,DWORD PTR [rax]
   14006156c:	sbb    BYTE PTR [rdx+0x3],bl
   14006156f:	add    ah,ah
   140061571:	(bad)  
   140061572:	add    al,0x0
   140061574:	sbb    BYTE PTR [rdx+0x3],bl
   140061577:	add    BYTE PTR [rsi],dh
   140061579:	pop    rbx
   14006157a:	add    eax,DWORD PTR [rax]
   14006157c:	test   ch,bl
   14006157e:	add    al,0x0
   140061580:	cmp    BYTE PTR [rbx+0x3],bl
   140061583:	add    BYTE PTR [rdi+0x5b],bl
   140061586:	add    eax,DWORD PTR [rax]
   140061588:	int3   
   140061589:	(bad)  
   14006158a:	add    al,0x0
   14006158c:	(bad)  
   14006158d:	pop    rbx
   14006158e:	add    eax,DWORD PTR [rax]
   140061590:	mov    DWORD PTR [rbx+0x3],ebx
   140061593:	add    ah,dl
   140061595:	retf   0x4
   140061598:	cwde   
   140061599:	pop    rbx
   14006159a:	add    eax,DWORD PTR [rax]
   14006159c:	rcr    DWORD PTR [rbx+0x3],cl
   14006159f:	add    al,ch
   1400615a1:	(bad)  
   1400615a2:	add    al,0x0
   1400615a4:	fcomp  QWORD PTR [rbx+0x3]
   1400615a7:	add    BYTE PTR [rbp+0x5c],ah
   1400615aa:	add    eax,DWORD PTR [rax]
   1400615ac:	nop
   1400615ad:	int3   
   1400615ae:	add    al,0x0
   1400615b0:	push   0xfffffffff600035c
   1400615b5:	pop    rbp
   1400615b6:	add    eax,DWORD PTR [rax]
   1400615b8:	sub    al,0xd6
   1400615ba:	add    al,0x0
   1400615bc:	clc    
   1400615bd:	pop    rbp
   1400615be:	add    eax,DWORD PTR [rax]
   1400615c0:	rex.WXB pop r15
   1400615c2:	add    eax,DWORD PTR [rax]
   1400615c4:	pushf  
   1400615c5:	in     al,dx
   1400615c6:	add    al,0x0
   1400615c8:	rex.WR pop rdi
   1400615ca:	add    eax,DWORD PTR [rax]
   1400615cc:	push   rsp
   1400615cd:	(bad)  
   1400615ce:	add    eax,DWORD PTR [rax]
   1400615d0:	call   0x194061aa9
   1400615d5:	(bad)  
   1400615d6:	add    eax,DWORD PTR [rax]
   1400615d8:	mov    esp,0x48000360
   1400615dd:	(bad)  
   1400615de:	add    al,0x0
   1400615e0:	mov    esp,0x13000360
   1400615e5:	(bad)  
   1400615e7:	add    BYTE PTR [rsp+rbp*8+0x62140004],bl
   1400615ee:	add    eax,DWORD PTR [rax]
   1400615f0:	lea    esp,[rdx+0x3]
   1400615f3:	add    BYTE PTR [rsp],dh
   1400615f6:	add    eax,0x362a400
   1400615fb:	add    bl,al
   1400615fd:	(bad)  
   1400615ff:	add    BYTE PTR [rsi+rdx*8+0x4],ch
   140061603:	add    ah,al
   140061605:	(bad)  
   140061607:	add    BYTE PTR [rbp+0x63],bl
   14006160a:	add    eax,DWORD PTR [rax]
   14006160c:	pushf  
   14006160d:	in     al,dx
   14006160e:	add    al,0x0
   140061610:	(bad)  
   140061611:	movsxd eax,DWORD PTR [rbx]
   140061613:	add    BYTE PTR [rax-0x63fffc9d],dh
   140061619:	in     al,dx
   14006161a:	add    al,0x0
   14006161c:	mov    al,0x63
   14006161e:	add    eax,DWORD PTR [rax]
   140061620:	mov    dh,0x76
   140061622:	add    eax,DWORD PTR [rax]
   140061624:	in     al,0xd6
   140061626:	add    al,0x0
   140061628:	shl    BYTE PTR [rsi+0x3],0x0
   14006162c:	push   rsi
   14006162d:	ja     0x140061632
   14006162f:	add    BYTE PTR [rax],ch
   140061631:	(bad)  
   140061632:	add    al,0x0
   140061634:	pop    rax
   140061635:	ja     0x14006163a
   140061637:	add    BYTE PTR [rdx+0x8000378],ch
   14006163d:	xlat   BYTE PTR ds:[rbx]
   14006163e:	add    al,0x0
   140061640:	lock js 0x140061646
   140061643:	add    BYTE PTR [rax],dh
   140061645:	jns    0x14006164a
   140061647:	add    BYTE PTR [rax],bl
   140061649:	xlat   BYTE PTR ds:[rbx]
   14006164a:	add    al,0x0
   14006164c:	cmp    BYTE PTR [rcx+0x3],bh
   14006164f:	add    BYTE PTR [rdi+0x7a],bl
   140061652:	add    eax,DWORD PTR [rax]
   140061654:	and    bh,dl
   140061656:	add    al,0x0
   140061658:	(bad)  
   140061659:	jp     0x14006165e
   14006165b:	add    dl,cl
   14006165d:	(bad)  
   14006165e:	add    eax,DWORD PTR [rax]
   140061660:	push   rax
   140061661:	xlat   BYTE PTR ds:[rbx]
   140061662:	add    al,0x0
   140061664:	int3   
   140061665:	(bad)  
   140061666:	add    eax,DWORD PTR [rax]
   140061668:	rol    BYTE PTR [rbx+rax*1+0x4d76800],1
   14006166f:	add    al,dl
   140061671:	test   BYTE PTR [rbx],al
   140061673:	add    BYTE PTR [rdx-0x7b],cl
   140061676:	add    eax,DWORD PTR [rax]
   140061678:	sub    al,0xce
   14006167a:	add    al,0x0
   14006167c:	test   QWORD PTR [rbx],r8
   14006167f:	add    bl,cl
   140061681:	test   DWORD PTR [rbx],eax
   140061683:	add    BYTE PTR [rsi+rcx*8],ch
   140061686:	add    al,0x0
   140061688:	int3   
   140061689:	test   DWORD PTR [rbx],eax
   14006168b:	add    dl,bh
   14006168d:	mov    BYTE PTR [rbx],al
   14006168f:	add    BYTE PTR [rdi+rdx*8-0x7703fffc],bl
   140061696:	add    eax,DWORD PTR [rax]
   140061698:	call   0xc8061a26
   14006169d:	xlat   BYTE PTR ds:[rbx]
   14006169e:	add    al,0x0
   1400616a0:	call   0x146061a2e
   1400616a5:	mov    al,BYTE PTR [rbx]
   1400616a7:	add    BYTE PTR [rax],dl
   1400616a9:	rol    DWORD PTR [rax+rax*1],cl
   1400616ac:	push   rax
   1400616ad:	mov    al,BYTE PTR [rbx]
   1400616af:	add    BYTE PTR [rdi-0x33fffc76],bl
   1400616b5:	(bad)  
   1400616b6:	add    al,0x0
   1400616b8:	movabs al,ds:0xbc00038b7900038a
   1400616c1:	xlat   BYTE PTR ds:[rbx]
   1400616c2:	add    al,0x0
   1400616c4:	jl     0x140061651
   1400616c6:	add    eax,DWORD PTR [rax]
   1400616c8:	or     ecx,DWORD PTR [rbx+rax*1+0x4dd8400]
   1400616cf:	add    BYTE PTR [rsp+rcx*4-0x733ffffd],bl
   1400616d6:	add    eax,DWORD PTR [rax]
   1400616d8:	in     al,0x4e
   1400616da:	add    eax,0x38cc000
   1400616df:	add    BYTE PTR [rsi],bh
   1400616e1:	lea    eax,[rbx]
   1400616e3:	add    BYTE PTR [rax],dl
   1400616e5:	rol    DWORD PTR [rax+rax*1],cl
   1400616e8:	rex lea eax,[rbx]
   1400616eb:	add    al,dh
   1400616ed:	nop
   1400616ee:	add    eax,DWORD PTR [rax]
   1400616f0:	push   rsp
   1400616f1:	pop    rbp
   1400616f2:	add    eax,0x390f000
   1400616f7:	add    cl,ch
   1400616f9:	xchg   edx,eax
   1400616fa:	add    eax,DWORD PTR [rax]
   1400616fc:	and    BYTE PTR [rbp+0x5],bl
   1400616ff:	add    ah,ch
   140061701:	xchg   edx,eax
   140061702:	add    eax,DWORD PTR [rax]
   140061704:	jrcxz  0x140061699
   140061706:	add    eax,DWORD PTR [rax]
   140061708:	cmp    al,0x5d
   14006170a:	add    eax,0x393e400
   14006170f:	add    BYTE PTR [rbp-0x6b],al
   140061712:	add    eax,DWORD PTR [rax]
   140061714:	mov    cl,dl
   140061716:	add    al,0x0
   140061718:	xchg   rbp,rax
   14006171a:	add    eax,DWORD PTR [rax]
   14006171c:	sbb    DWORD PTR [rsi+0x5d700003],edx
   140061722:	add    eax,0x3961c00
   140061727:	add    BYTE PTR [rax-0x69],dl
   14006172a:	add    eax,DWORD PTR [rax]
   14006172c:	mov    BYTE PTR [rbp+0x5],bl
   14006172f:	add    BYTE PTR [rax-0x69],bl
   140061732:	add    eax,DWORD PTR [rax]
   140061734:	out    dx,al
   140061735:	xchg   edi,eax
   140061736:	add    eax,DWORD PTR [rax]
   140061738:	sub    al,0xce
   14006173a:	add    al,0x0
   14006173c:	clc    
   14006173d:	xchg   edi,eax
   14006173e:	add    eax,DWORD PTR [rax]
   140061740:	cmp    BYTE PTR [rax+0xd1c0003],bl
   140061746:	add    eax,0x3984000
   14006174b:	add    BYTE PTR [rdi+0x2c000398],bh
   140061751:	(bad)  
   140061752:	add    al,0x0
   140061754:	(bad)  
   140061755:	cwde   
   140061756:	add    eax,DWORD PTR [rax]
   140061758:	sbb    BYTE PTR [rdx-0x3523fffd],bl
   14006175e:	add    al,0x0
   140061760:	sbb    BYTE PTR [rdx-0x651cfffd],bl
   140061766:	add    eax,DWORD PTR [rax]
   140061768:	call   0x124061c41
   14006176d:	(bad)  
   14006176e:	add    eax,DWORD PTR [rax]
   140061770:	stos   DWORD PTR es:[rdi],eax
   140061771:	fwait
   140061772:	add    eax,DWORD PTR [rax]
   140061774:	movabs al,ds:0x7300039bac00055d
   14006177d:	pushf  
   14006177e:	add    eax,DWORD PTR [rax]
   140061780:	movabs al,ds:0x4100039c7400055d
   140061789:	popf   
   14006178a:	add    eax,DWORD PTR [rax]
   14006178c:	int3   
   14006178d:	pop    rbp
   14006178e:	add    eax,0x39d4400
   140061793:	add    cl,bh
   140061795:	popf   
   140061796:	add    eax,DWORD PTR [rax]
   140061798:	mov    ah,0x5d
   14006179a:	add    eax,0x39dfc00
   14006179f:	add    BYTE PTR [rdx-0x2bfffc5d],ch
   1400617a5:	pop    rbp
   1400617a6:	add    eax,0x3a3ac00
   1400617ab:	add    BYTE PTR [rdx-0x57],bl
   1400617ae:	add    eax,DWORD PTR [rax]
   1400617b0:	(bad)  
   1400617b1:	pop    rbp
   1400617b2:	add    eax,0x3a95c00
   1400617b7:	add    BYTE PTR [rbp-0x7fffc4f],ch
   1400617bd:	pop    rbp
   1400617be:	add    eax,0x3b1b000
   1400617c3:	add    BYTE PTR [rsp+rdi*4+0x3],bh
   1400617c7:	add    BYTE PTR [rsi+rbx*2],bl
   1400617ca:	add    eax,0x3bc7c00
   1400617cf:	add    BYTE PTR [rdi+0x400003be],ah
   1400617d5:	pop    rsi
   1400617d6:	add    eax,0x3bec000
   1400617db:	add    dh,bl
   1400617dd:	mov    esi,0xd2700003
   1400617e2:	add    al,0x0
   1400617e4:	lock mov esi,0xbefd0003
   1400617ea:	add    eax,DWORD PTR [rax]
   1400617ec:	js     0x1400617c0
   1400617ee:	add    al,0x0
   1400617f0:	adc    BYTE PTR [rdi-0x40c1fffd],bh
   1400617f6:	add    eax,DWORD PTR [rax]
   1400617f8:	jl     0x1400617cc
   1400617fa:	add    al,0x0
   1400617fc:	rex mov edi,0xbf5e0003
   140061802:	add    eax,DWORD PTR [rax]
   140061804:	or     ah,bl
   140061806:	add    al,0x0
   140061808:	pop    rsi
   140061809:	mov    edi,0xbf720003
   14006180e:	add    eax,DWORD PTR [rax]
   140061810:	or     ah,bl
   140061812:	add    al,0x0
   140061814:	jb     0x1400617d5
   140061816:	add    eax,DWORD PTR [rax]
   140061818:	mov    edi,DWORD PTR [rdi-0x23f7fffd]
   14006181e:	add    al,0x0
   140061820:	mov    edi,DWORD PTR [rdi-0x405bfffd]
   140061826:	add    eax,DWORD PTR [rax]
   140061828:	or     ah,bl
   14006182a:	add    al,0x0
   14006182c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006182d:	mov    edi,0xbfc80003
   140061832:	add    eax,DWORD PTR [rax]
   140061834:	or     ah,bl
   140061836:	add    al,0x0
   140061838:	enter  0x3bf,0x0
   14006183c:	jrcxz  0x1400617fd
   14006183e:	add    eax,DWORD PTR [rax]
   140061840:	or     ah,bl
   140061842:	add    al,0x0
   140061844:	jrcxz  0x140061805
   140061846:	add    eax,DWORD PTR [rax]
   140061848:	cld    
   140061849:	mov    edi,0xdc080003
   14006184e:	add    al,0x0
   140061850:	cld    
   140061851:	mov    edi,0xc0150003
   140061856:	add    eax,DWORD PTR [rax]
   140061858:	or     ah,bl
   14006185a:	add    al,0x0
   14006185c:	adc    eax,0x2e0003c0
   140061861:	rol    BYTE PTR [rbx],0x0
   140061864:	or     ah,bl
   140061866:	add    al,0x0
   140061868:	rol    BYTE PTR cs:[rbx],0x0
   14006186c:	rex.WXB rol BYTE PTR [r11],0x0
   140061870:	or     ah,bl
   140061872:	add    al,0x0
   140061874:	push   rax
   140061875:	rol    BYTE PTR [rbx],0x0
   140061878:	jo     0x14006183a
   14006187a:	add    eax,DWORD PTR [rax]
   14006187c:	or     ah,bl
   14006187e:	add    al,0x0
   140061880:	jo     0x140061842
   140061882:	add    eax,DWORD PTR [rax]
   140061884:	mov    es,eax
   140061886:	add    eax,DWORD PTR [rax]
   140061888:	or     ah,bl
   14006188a:	add    al,0x0
   14006188c:	mov    es,eax
   14006188e:	add    eax,DWORD PTR [rax]
   140061890:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140061891:	rol    BYTE PTR [rbx],0x0
   140061894:	or     ah,bl
   140061896:	add    al,0x0
   140061898:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140061899:	rol    BYTE PTR [rbx],0x0
   14006189c:	mov    esi,0x80003c0
   1400618a1:	fadd   QWORD PTR [rax+rax*1]
   1400618a4:	mov    esi,0xe60003c0
   1400618a9:	rol    BYTE PTR [rbx],0x0
   1400618ac:	or     ah,bl
   1400618ae:	add    al,0x0
   1400618b0:	out    0xc0,al
   1400618b2:	add    eax,DWORD PTR [rax]
   1400618b4:	inc    eax
   1400618b6:	add    eax,DWORD PTR [rax]
   1400618b8:	or     ah,bl
   1400618ba:	add    al,0x0
   1400618bc:	inc    eax
   1400618be:	add    eax,DWORD PTR [rax]
   1400618c0:	sbb    cl,al
   1400618c2:	add    eax,DWORD PTR [rax]
   1400618c4:	or     ah,bl
   1400618c6:	add    al,0x0
   1400618c8:	sbb    cl,al
   1400618ca:	add    eax,DWORD PTR [rax]
   1400618cc:	(bad)  
   1400618cd:	rol    DWORD PTR [rbx],0x0
   1400618d0:	or     ah,bl
   1400618d2:	add    al,0x0
   1400618d4:	(bad)  
   1400618d5:	rol    DWORD PTR [rbx],0x0
   1400618d8:	jne    0x14006189b
   1400618da:	add    eax,DWORD PTR [rax]
   1400618dc:	loopne 0x1400618b0
   1400618de:	add    al,0x0
   1400618e0:	jne    0x1400618a3
   1400618e2:	add    eax,DWORD PTR [rax]
   1400618e4:	(bad)  
   1400618e5:	rol    DWORD PTR [rbx],0x0
   1400618e8:	or     ah,bl
   1400618ea:	add    al,0x0
   1400618ec:	(bad)  
   1400618ed:	rol    DWORD PTR [rbx],0x0
   1400618f0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400618f1:	rol    DWORD PTR [rbx],0x0
   1400618f4:	or     ah,bl
   1400618f6:	add    al,0x0
   1400618f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400618f9:	rol    DWORD PTR [rbx],0x0
   1400618fc:	mov    ebp,0x80003c1
   140061901:	fadd   QWORD PTR [rax+rax*1]
   140061904:	mov    ebp,0xb10003c1
   140061909:	ret    0x3
   14006190c:	or     ah,bl
   14006190e:	add    al,0x0
   140061910:	mov    cl,0xc2
   140061912:	add    eax,DWORD PTR [rax]
   140061914:	(bad)  
   140061915:	ret    
   140061916:	add    eax,DWORD PTR [rax]
   140061918:	(bad)  
   14006191a:	add    al,0x0
   14006191c:	(bad)  
   14006191d:	ret    
   14006191e:	add    eax,DWORD PTR [rax]
   140061920:	rex.RXB ret 
   140061922:	add    eax,DWORD PTR [rax]
   140061924:	or     ah,bl
   140061926:	add    al,0x0
   140061928:	rex.RXB ret 
   14006192a:	add    eax,DWORD PTR [rax]
   14006192c:	pop    rbp
   14006192d:	ret    
   14006192e:	add    eax,DWORD PTR [rax]
   140061930:	or     ah,bl
   140061932:	add    al,0x0
   140061934:	pop    rbp
   140061935:	ret    
   140061936:	add    eax,DWORD PTR [rax]
   140061938:	xchg   bl,al
   14006193a:	add    eax,DWORD PTR [rax]
   14006193c:	or     ah,bl
   14006193e:	add    al,0x0
   140061940:	xchg   bl,al
   140061942:	add    eax,DWORD PTR [rax]
   140061944:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140061945:	ret    
   140061946:	add    eax,DWORD PTR [rax]
   140061948:	(bad)  
   140061949:	(bad)  
   14006194a:	add    al,0x0
   14006194c:	movabs ds:0x80003c4c40003c4,al
   140061955:	fadd   QWORD PTR [rax+rax*1]
   140061958:	pop    rsp
   140061959:	mov    DWORD PTR [rbx],0x3c7a400
   14006195f:	add    al,bl
   140061961:	fld    DWORD PTR [rax+rax*1]
   140061964:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140061965:	mov    DWORD PTR [rbx],0x3c7df00
   14006196b:	add    al,ch
   14006196d:	fld    DWORD PTR [rax+rax*1]
   140061970:	ffreep st(7)
   140061972:	add    eax,DWORD PTR [rax]
   140061974:	sti    
   140061975:	mov    DWORD PTR [rbx],0x4dc0800
   14006197b:	add    bl,bh
   14006197d:	mov    DWORD PTR [rbx],0x3c84f00
   140061983:	add    ah,ah
   140061985:	fild   DWORD PTR [rax+rax*1]
   140061988:	rex.WRXB enter 0x3,0x8c
   14006198d:	enter  0x3,0xf4
   140061991:	fild   DWORD PTR [rax+rax*1]
   140061994:	mov    eax,cs
   140061996:	add    eax,DWORD PTR [rax]
   140061998:	test   al,0xc8
   14006199a:	add    eax,DWORD PTR [rax]
   14006199c:	or     ah,bl
   14006199e:	add    al,0x0
   1400619a0:	test   al,0xc8
   1400619a2:	add    eax,DWORD PTR [rax]
   1400619a4:	enter  0x3c8,0x0
   1400619a8:	push   0xffffffffc80004da
   1400619ad:	enter  0x3,0xe8
   1400619b1:	enter  0x3,0xe4
   1400619b5:	fiadd  DWORD PTR [rax+rax*1]
   1400619b8:	call   0x148061d85
   1400619bd:	leave  
   1400619be:	add    eax,DWORD PTR [rax]
   1400619c0:	jl     0x14006199e
   1400619c2:	add    al,0x0
   1400619c4:	or     cl,cl
   1400619c6:	add    eax,DWORD PTR [rax]
   1400619c8:	cs leave 
   1400619ca:	add    eax,DWORD PTR [rax]
   1400619cc:	or     ah,bl
   1400619ce:	add    al,0x0
   1400619d0:	cs leave 
   1400619d2:	add    eax,DWORD PTR [rax]
   1400619d4:	gs leave 
   1400619d6:	add    eax,DWORD PTR [rax]
   1400619d8:	hlt    
   1400619d9:	fadd   QWORD PTR [rax+rax*1]
   1400619dc:	gs leave 
   1400619de:	add    eax,DWORD PTR [rax]
   1400619e0:	pushf  
   1400619e1:	leave  
   1400619e2:	add    eax,DWORD PTR [rax]
   1400619e4:	jo     0x1400619c3
   1400619e6:	add    al,0x0
   1400619e8:	fmul   st(1),st
   1400619ea:	add    eax,DWORD PTR [rax]
   1400619ec:	add    cl,dl
   1400619ee:	add    eax,DWORD PTR [rax]
   1400619f0:	or     ah,bl
   1400619f2:	add    al,0x0
   1400619f4:	xor    cl,ch
   1400619f6:	add    eax,DWORD PTR [rax]
   1400619f8:	pop    rsp
   1400619f9:	int    0x3
   1400619fb:	add    BYTE PTR [rax],cl
   1400619fd:	fadd   QWORD PTR [rax+rax*1]
   140061a00:	mov    al,0xcd
   140061a02:	add    eax,DWORD PTR [rax]
   140061a04:	loopne 0x1400619d3
   140061a06:	add    eax,DWORD PTR [rax]
   140061a08:	or     ah,bl
   140061a0a:	add    al,0x0
   140061a0c:	add    bh,cl
   140061a0e:	add    eax,DWORD PTR [rax]
   140061a10:	es iret 
   140061a12:	add    eax,DWORD PTR [rax]
   140061a14:	or     ah,bl
   140061a16:	add    al,0x0
   140061a18:	dec    bh
   140061a1a:	add    eax,DWORD PTR [rax]
   140061a1c:	and    al,0xd0
   140061a1e:	add    eax,DWORD PTR [rax]
   140061a20:	or     ah,bl
   140061a22:	add    al,0x0
   140061a24:	int3   
   140061a25:	rol    BYTE PTR [rbx],1
   140061a27:	add    dl,dh
   140061a29:	rol    BYTE PTR [rbx],1
   140061a2b:	add    BYTE PTR [rax],cl
   140061a2d:	fadd   QWORD PTR [rax+rax*1]
   140061a30:	(bad)  
   140061a31:	rol    BYTE PTR [rbx],1
   140061a33:	add    BYTE PTR [rcx+rdx*8],ah
   140061a36:	add    eax,DWORD PTR [rax]
   140061a38:	or     ah,bl
   140061a3a:	add    al,0x0
   140061a3c:	je     0x140061a10
   140061a3e:	add    eax,DWORD PTR [rax]
   140061a40:	sahf   
   140061a41:	rol    BYTE PTR [rbx],cl
   140061a43:	add    BYTE PTR [rax],cl
   140061a45:	fadd   QWORD PTR [rax+rax*1]
   140061a48:	mov    dh,0xd2
   140061a4a:	add    eax,DWORD PTR [rax]
   140061a4c:	add    dl,bl
   140061a4e:	add    eax,DWORD PTR [rax]
   140061a50:	clc    
   140061a51:	repnz add al,0x0
   140061a54:	(bad)  
   140061a55:	rol    DWORD PTR [rbx],cl
   140061a57:	add    BYTE PTR [rdi],dh
   140061a59:	rol    DWORD PTR [rbx],cl
   140061a5b:	add    BYTE PTR [rax],cl
   140061a5d:	fadd   QWORD PTR [rax+rax*1]
   140061a60:	mov    edx,ebx
   140061a62:	add    eax,DWORD PTR [rax]
   140061a64:	leave  
   140061a65:	rol    DWORD PTR [rbx],cl
   140061a67:	add    BYTE PTR [rsi+rsi*8],ch
   140061a6a:	add    al,0x0
   140061a6c:	sub    esp,edx
   140061a6e:	add    eax,DWORD PTR [rax]
   140061a70:	push   rdx
   140061a71:	(bad)  
   140061a72:	add    eax,DWORD PTR [rax]
   140061a74:	or     ah,bl
   140061a76:	add    al,0x0
   140061a78:	pop    rsi
   140061a79:	(bad)  
   140061a7a:	add    eax,DWORD PTR [rax]
   140061a7c:	xchg   esp,edx
   140061a7e:	add    eax,DWORD PTR [rax]
   140061a80:	or     ah,bl
   140061a82:	add    al,0x0
   140061a84:	lahf   
   140061a85:	(bad)  
   140061a86:	add    eax,DWORD PTR [rax]
   140061a88:	enter  0x3d4,0x0
   140061a8c:	or     ah,bl
   140061a8e:	add    al,0x0
   140061a90:	(bad)  
   140061a91:	(bad)  
   140061a92:	add    eax,DWORD PTR [rax]
   140061a94:	std    
   140061a95:	(bad)  
   140061a96:	add    eax,DWORD PTR [rax]
   140061a98:	or     ah,bl
   140061a9a:	add    al,0x0
   140061a9c:	push   rcx
   140061a9d:	(bad)  
   140061a9e:	add    eax,DWORD PTR [rax]
   140061aa0:	test   esi,edx
   140061aa2:	add    eax,DWORD PTR [rax]
   140061aa4:	loopne 0x140061aa0
   140061aa6:	add    al,0x0
   140061aa8:	rcl    esi,1
   140061aaa:	add    eax,DWORD PTR [rax]
   140061aac:	std    
   140061aad:	(bad)  
   140061aae:	add    eax,DWORD PTR [rax]
   140061ab0:	(bad)  
   140061ab1:	inc    DWORD PTR [rax+rax*1]
   140061ab4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140061ab5:	fadd   DWORD PTR [rbx]
   140061ab7:	add    cl,bh
   140061ab9:	fadd   DWORD PTR [rbx]
   140061abb:	add    BYTE PTR [rax+rax*1+0x5],bl
   140061abf:	add    cl,bh
   140061ac1:	fadd   DWORD PTR [rbx]
   140061ac3:	add    BYTE PTR [rdi],bl
   140061ac5:	fld    DWORD PTR [rbx]
   140061ac7:	add    BYTE PTR [rax],cl
   140061ac9:	fadd   QWORD PTR [rax+rax*1]
   140061acc:	xchg   ecx,ebx
   140061ace:	add    eax,DWORD PTR [rax]
   140061ad0:	mov    bh,0xd9
   140061ad2:	add    eax,DWORD PTR [rax]
   140061ad4:	xchg   esp,eax
   140061ad5:	sti    
   140061ad6:	add    al,0x0
   140061ad8:	ret    
   140061ad9:	fld    DWORD PTR [rbx]
   140061adb:	add    al,dh
   140061add:	fld    DWORD PTR [rbx]
   140061adf:	add    BYTE PTR [rbx+rsi*8-0x260ffffc],al
   140061ae6:	add    eax,DWORD PTR [rax]
   140061ae8:	sub    ebx,edx
   140061aea:	add    eax,DWORD PTR [rax]
   140061aec:	sub    BYTE PTR [rax*1+0x3dbc700],al
   140061af3:	add    cl,bh
   140061af5:	fild   DWORD PTR [rbx]
   140061af7:	add    al,ah
   140061af9:	(bad)  
   140061afa:	add    eax,0x3dbf900
   140061aff:	add    BYTE PTR [rdi],ch
   140061b01:	fadd   QWORD PTR [rbx]
   140061b03:	add    al,dh
   140061b05:	(bad)  
   140061b06:	add    eax,0x3dc2f00
   140061b0b:	add    BYTE PTR [rsp+rbx*8+0x3],bl
   140061b0f:	add    ah,bl
   140061b11:	add    eax,0xdcb80005
   140061b16:	add    eax,DWORD PTR [rax]
   140061b18:	(bad)  
   140061b1a:	add    eax,DWORD PTR [rax]
   140061b1c:	in     al,0x9
   140061b1e:	add    eax,0x3dd2100
   140061b23:	add    BYTE PTR [rip+0x80003dd],bh        # 0x148061f06
   140061b29:	fadd   QWORD PTR [rax+rax*1]
   140061b2c:	cmp    eax,0x860003dd
   140061b31:	fld    QWORD PTR [rbx]
   140061b33:	add    BYTE PTR [rax+0xb],bh
   140061b36:	add    eax,0x3dd8600
   140061b3b:	add    bh,cl
   140061b3d:	fld    QWORD PTR [rbx]
   140061b3f:	add    BYTE PTR [rdx+rcx*1-0x2230fffb],ah
   140061b46:	add    eax,DWORD PTR [rax]
   140061b48:	jmp    0x140061b27
   140061b4a:	add    eax,DWORD PTR [rax]
   140061b4c:	or     ah,bl
   140061b4e:	add    al,0x0
   140061b50:	jmp    0x140061b2f
   140061b52:	add    eax,DWORD PTR [rax]
   140061b54:	(bad)  
   140061b55:	fiadd  WORD PTR [rbx]
   140061b57:	add    BYTE PTR [rax],cl
   140061b59:	fadd   QWORD PTR [rax+rax*1]
   140061b5c:	rex.RXB fiadd WORD PTR [r11]
   140061b5f:	add    BYTE PTR [rbx-0x22],ah
   140061b62:	add    eax,DWORD PTR [rax]
   140061b64:	or     ah,bl
   140061b66:	add    al,0x0
   140061b68:	movsxd ebx,esi
   140061b6a:	add    eax,DWORD PTR [rax]
   140061b6c:	sbb    esi,0x3
   140061b6f:	add    ah,bh
   140061b71:	or     eax,DWORD PTR [rip+0x3de8300]        # 0x143e49e77
   140061b77:	add    BYTE PTR [rdx+0x80003de],bh
   140061b7d:	or     eax,0xdeba0005
   140061b82:	add    eax,DWORD PTR [rax]
   140061b84:	fild   WORD PTR es:[rbx]
   140061b87:	add    BYTE PTR [rax+0x5600050c],cl
   140061b8d:	fild   WORD PTR [rbx]
   140061b8f:	add    BYTE PTR [rdx+0x440003df],ch
   140061b95:	syscall 
   140061b97:	add    BYTE PTR [rsi-0x20fffc21],dh
   140061b9d:	fild   WORD PTR [rbx]
   140061b9f:	add    BYTE PTR [rax+0x4b00050e],bl
   140061ba5:	loope  0x140061baa
   140061ba7:	add    BYTE PTR [rsi-0x1f],ah
   140061baa:	add    eax,DWORD PTR [rax]
   140061bac:	adc    rax,QWORD PTR [rip+0x3e34a00]        # 0x143e965b3
   140061bb3:	add    BYTE PTR [rsi-0x1d],ah
   140061bb6:	add    eax,DWORD PTR [rax]
   140061bb8:	or     ah,bl
   140061bba:	add    al,0x0
   140061bbc:	(bad)  
   140061bbd:	jrcxz  0x140061bc2
   140061bbf:	add    ch,al
   140061bc1:	jrcxz  0x140061bc6
   140061bc3:	add    al,bl
   140061bc5:	adc    al,BYTE PTR [rip+0x3e3f500]        # 0x143ea10cb
   140061bcb:	add    BYTE PTR [rax-0x1c],dh
   140061bce:	add    eax,DWORD PTR [rax]
   140061bd0:	(bad)  
   140061bd1:	adc    eax,DWORD PTR [rip+0x3e57400]        # 0x143eb8fd7
   140061bd7:	add    BYTE PTR [rdi-0x3bfffc1b],cl
   140061bdd:	sbb    eax,DWORD PTR [rip+0x3e5c700]        # 0x143ebe2e3
   140061be3:	add    cl,dh
   140061be5:	in     eax,0x3
   140061be7:	add    BYTE PTR [rax],cl
   140061be9:	fadd   QWORD PTR [rax+rax*1]
   140061bec:	std    
   140061bed:	in     eax,0x3
   140061bef:	add    BYTE PTR [rbx],ch
   140061bf1:	out    0x3,al
   140061bf3:	add    BYTE PTR [rax],cl
   140061bf5:	fadd   QWORD PTR [rax+rax*1]
   140061bf8:	rex.XB out 0x3,al
   140061bfb:	add    BYTE PTR [rsi-0x1a],bl
   140061bfe:	add    eax,DWORD PTR [rax]
   140061c00:	mov    esp,0xc2000521
   140061c05:	call   0x128ea1c0d
   140061c0a:	add    eax,DWORD PTR [rax]
   140061c0c:	cld    
   140061c0d:	and    al,BYTE PTR [rip+0x3eb0400]        # 0x143f12013
   140061c13:	add    BYTE PTR [rsi],ch
   140061c15:	jmp    0x140061c1a
   140061c17:	add    BYTE PTR [rax],cl
   140061c19:	fadd   QWORD PTR [rax+rax*1]
   140061c1c:	and    ch,ah
   140061c1e:	add    eax,DWORD PTR [rax]
   140061c20:	pop    rax
   140061c21:	in     al,dx
   140061c22:	add    eax,DWORD PTR [rax]
   140061c24:	jl     0x140061c50
   140061c26:	add    eax,0x3edba00
   140061c2b:	add    ah,bl
   140061c2d:	in     eax,dx
   140061c2e:	add    eax,DWORD PTR [rax]
   140061c30:	or     ah,bl
   140061c32:	add    al,0x0
   140061c34:	call   0x14306202a
   140061c39:	repnz add eax,DWORD PTR [rax]
   140061c3c:	xor    DWORD PTR fs:[rip+0x3f21b00],eax        # 0x143f83743
   140061c43:	add    BYTE PTR [rsi],dh
   140061c45:	repnz add eax,DWORD PTR [rax]
   140061c48:	(bad)  
   140061c49:	xor    al,BYTE PTR [rip+0x3f27e00]        # 0x143f89a4f
   140061c4f:	add    BYTE PTR [rcx-0x3bfffc0e],bl
   140061c55:	xor    al,BYTE PTR [rip+0x3f29900]        # 0x143f8b55b
   140061c5b:	add    BYTE PTR [rdx+rsi*8+0x30780003],dh
   140061c62:	add    eax,0x3f43c00
   140061c67:	add    BYTE PTR [rsi-0xc],bl
   140061c6a:	add    eax,DWORD PTR [rax]
   140061c6c:	or     ah,bl
   140061c6e:	add    al,0x0
   140061c70:	mov    dh,ch
   140061c72:	add    eax,DWORD PTR [rax]
   140061c74:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140061c75:	cmc    
   140061c76:	add    eax,DWORD PTR [rax]
   140061c78:	sub    al,0x3b
   140061c7a:	add    eax,0x3f5bd00
   140061c7f:	add    bh,bl
   140061c81:	cmc    
   140061c82:	add    eax,DWORD PTR [rax]
   140061c84:	sbb    BYTE PTR [rip+0xfffffffff7530005],bh        # 0x137591c8f
   140061c8a:	add    eax,DWORD PTR [rax]
   140061c8c:	jne    0x140061c85
   140061c8e:	add    eax,DWORD PTR [rax]
   140061c90:	or     al,0x3c
   140061c92:	add    eax,0x3f77500
   140061c97:	add    BYTE PTR [rdi-0x67fffc09],dl
   140061c9d:	cmp    al,0x5
   140061c9f:	add    BYTE PTR [rbx],ch
   140061ca1:	stc    
   140061ca2:	add    eax,DWORD PTR [rax]
   140061ca4:	imul   edi,ecx,0x441c0003
   140061caa:	add    eax,0x3f96900
   140061caf:	add    BYTE PTR [rbx+0x1c0003f9],cl
   140061cb5:	rex.R add eax,0x3fa1300
   140061cbb:	add    BYTE PTR [rip+0xffffffffa00003fa],dh        # 0xe00620bb
   140061cc1:	cmp    eax,0xfaa50005
   140061cc6:	add    eax,DWORD PTR [rax]
   140061cc8:	fdiv   st(2),st
   140061cca:	add    eax,DWORD PTR [rax]
   140061ccc:	ins    BYTE PTR es:[rdi],dx
   140061ccd:	(bad)  
   140061cce:	add    eax,0x3fadc00
   140061cd3:	add    bh,dh
   140061cd5:	cli    
   140061cd6:	add    eax,DWORD PTR [rax]
   140061cd8:	cmp    BYTE PTR [rdi],0x5
   140061cdb:	add    BYTE PTR [rdi-0x5],dl
   140061cde:	add    eax,DWORD PTR [rax]
   140061ce0:	mov    bh,bl
   140061ce2:	add    eax,DWORD PTR [rax]
   140061ce4:	nop
   140061ce5:	rex.RXB add eax,0x3fbae00
   140061ceb:	add    cl,al
   140061ced:	sti    
   140061cee:	add    eax,DWORD PTR [rax]
   140061cf0:	or     BYTE PTR [rsi],bh
   140061cf2:	add    eax,0x3fbc100
   140061cf7:	add    ah,dl
   140061cf9:	sti    
   140061cfa:	add    eax,DWORD PTR [rax]
   140061cfc:	fdivr  DWORD PTR [rsi]
   140061cfe:	add    eax,0x3fbd400
   140061d03:	add    bh,ah
   140061d05:	sti    
   140061d06:	add    eax,DWORD PTR [rax]
   140061d08:	call   0x12706224c
   140061d0d:	sti    
   140061d0e:	add    eax,DWORD PTR [rax]
   140061d10:	cli    
   140061d11:	sti    
   140061d12:	add    eax,DWORD PTR [rax]
   140061d14:	push   rax
   140061d15:	rex add eax,0x3fbfa00
   140061d1b:	add    BYTE PTR [rip+0x700003fc],cl        # 0x1b006211d
   140061d21:	ds add eax,0x3fc5500
   140061d27:	add    BYTE PTR [rcx-0x5ffffc04],ch
   140061d2d:	rex.WRB add rax,0x3fca900
   140061d33:	add    ah,al
   140061d35:	cld    
   140061d36:	add    eax,DWORD PTR [rax]
   140061d38:	movabs al,ds:0x230003fd0c00054d
   140061d41:	std    
   140061d42:	add    eax,DWORD PTR [rax]
   140061d44:	in     al,0x4f
   140061d46:	add    eax,0x3fd2300
   140061d4b:	add    BYTE PTR [rdi],bh
   140061d4d:	std    
   140061d4e:	add    eax,DWORD PTR [rax]
   140061d50:	or     ah,bl
   140061d52:	add    al,0x0
   140061d54:	(bad)  
   140061d55:	std    
   140061d56:	add    eax,DWORD PTR [rax]
   140061d58:	push   rsi
   140061d59:	std    
   140061d5a:	add    eax,DWORD PTR [rax]
   140061d5c:	je     0x140061dad
   140061d5e:	add    eax,0x3fd5600
   140061d63:	add    BYTE PTR [rbp+0x40003fd],cl
   140061d69:	push   rcx
   140061d6a:	add    eax,0x3fe9100
   140061d6f:	add    BYTE PTR [rsi+rdi*8+0x54cc0003],ch
   140061d76:	add    eax,0x3fed000
   140061d7b:	add    al,dh
   140061d7d:	inc    BYTE PTR [rbx]
   140061d7f:	add    BYTE PTR [rax+0x50],ah
   140061d82:	add    eax,0x400cc00
   140061d87:	add    dl,dh
   140061d89:	add    BYTE PTR [rax+rax*1],al
   140061d8c:	or     ah,bl
   140061d8e:	add    al,0x0
   140061d90:	cmp    al,BYTE PTR [rcx]
   140061d92:	add    al,0x0
   140061d94:	(bad)  
   140061d95:	add    DWORD PTR [rax+rax*1],eax
   140061d98:	or     ah,bl
   140061d9a:	add    al,0x0
   140061d9c:	or     al,0x2
   140061d9e:	add    al,0x0
   140061da0:	(bad)  
   140061da1:	add    al,BYTE PTR [rax+rax*1]
   140061da4:	mov    eax,0x380004d8
   140061da9:	add    al,BYTE PTR [rax+rax*1]
   140061dac:	jno    0x140061db0
   140061dae:	add    al,0x0
   140061db0:	js     0x140061d8a
   140061db2:	add    al,0x0
   140061db4:	je     0x140061db8
   140061db6:	add    al,0x0
   140061db8:	lods   eax,DWORD PTR ds:[rsi]
   140061db9:	add    al,BYTE PTR [rax+rax*1]
   140061dbc:	cmp    al,bl
   140061dbe:	add    al,0x0
   140061dc0:	mov    esp,0xf000402
   140061dc5:	add    al,0x4
   140061dc7:	add    ah,bh
   140061dc9:	(bad)  
   140061dca:	add    eax,0x4041000
   140061dcf:	add    BYTE PTR [rsi+0x4],bl
   140061dd2:	add    al,0x0
   140061dd4:	and    r8,QWORD PTR [rip+0x4048400]        # 0x1440aa1db
   140061ddb:	add    dl,ah
   140061ddd:	add    al,0x4
   140061ddf:	add    ah,ch
   140061de1:	sub    al,BYTE PTR [rip+0x404e400]        # 0x1440b01e7
   140061de7:	add    BYTE PTR [rax*1-0x3133fffc],al
   140061dee:	add    al,0x0
   140061df0:	add    al,0x5
   140061df2:	add    al,0x0
   140061df4:	cmp    al,BYTE PTR [rip+0xffffffffcecc0004]        # 0x10ed21dfe
   140061dfa:	add    al,0x0
   140061dfc:	add    rax,0x5670004
   140061e02:	add    al,0x0
   140061e04:	adc    al,bl
   140061e06:	add    al,0x0
   140061e08:	push   0xffffffff87000405
   140061e0d:	add    eax,0xd7e80004
   140061e12:	add    al,0x0
   140061e14:	mov    BYTE PTR [rip+0x5a70004],al        # 0x145ad1e1e
   140061e1a:	add    al,0x0
   140061e1c:	rcl    bh,1
   140061e1e:	add    al,0x0
   140061e20:	mov    eax,0x5f000405
   140061e25:	(bad)  
   140061e26:	add    al,0x0
   140061e28:	enter  0x517,0x0
   140061e2c:	ins    BYTE PTR es:[rdi],dx
   140061e2d:	(bad)  
   140061e2e:	add    al,0x0
   140061e30:	inc    BYTE PTR [rsi]
   140061e32:	add    al,0x0
   140061e34:	nop
   140061e35:	es add eax,0x4070000
   140061e3b:	add    BYTE PTR [rdi],ch
   140061e3d:	(bad)  
   140061e3e:	add    al,0x0
   140061e40:	jo     0x140061e8b
   140061e42:	add    eax,0x4073000
   140061e47:	add    BYTE PTR [rdi+0x7],bl
   140061e4a:	add    al,0x0
   140061e4c:	xor    BYTE PTR [rcx+0x5],cl
   140061e4f:	add    BYTE PTR [rax+0x7],dh
   140061e52:	add    al,0x0
   140061e54:	.byte 0xa2
   140061e55:	(bad)  
   140061e56:	add    al,0x0
   140061e58:	int3   
   140061e59:	(bad)  
   140061e5a:	add    al,0x0

Disassembly of section .rsrc:

0000000140062000 <.rsrc>:
	...
   140062008:	add    al,0x0
   14006200a:	add    BYTE PTR [rax],al
   14006200c:	add    BYTE PTR [rax],al
   14006200e:	add    al,BYTE PTR [rax]
   140062010:	adc    BYTE PTR [rax],al
   140062012:	add    BYTE PTR [rax],al
   140062014:	and    BYTE PTR [rax],al
   140062016:	add    BYTE PTR [rax+0x18],al
   14006201c:	cmp    BYTE PTR [rax],al
   14006201e:	add    BYTE PTR [rax+0x0],al
   140062024:	add    BYTE PTR [rax],al
   140062026:	add    BYTE PTR [rax],al
   140062028:	add    al,0x0
   14006202a:	add    BYTE PTR [rax],al
   14006202c:	add    BYTE PTR [rax],al
   14006202e:	add    DWORD PTR [rax],eax
   140062030:	add    DWORD PTR [rax],eax
   140062032:	add    BYTE PTR [rax],al
   140062034:	push   rax
   140062035:	add    BYTE PTR [rax],al
   140062037:	add    BYTE PTR [rax],0x0
   14006203a:	add    BYTE PTR [rax],al
   14006203c:	add    BYTE PTR [rax],al
   14006203e:	add    BYTE PTR [rax],al
   140062040:	add    al,0x0
   140062042:	add    BYTE PTR [rax],al
   140062044:	add    BYTE PTR [rax],al
   140062046:	add    DWORD PTR [rax],eax
   140062048:	add    DWORD PTR [rax],eax
   14006204a:	add    BYTE PTR [rax],al
   14006204c:	push   0x800000
   140062051:	add    BYTE PTR [rax],al
   140062053:	add    BYTE PTR [rax],al
   140062055:	add    BYTE PTR [rax],al
   140062057:	add    BYTE PTR [rax+rax*1],al
   14006205a:	add    BYTE PTR [rax],al
   14006205c:	add    BYTE PTR [rax],al
   14006205e:	add    DWORD PTR [rax],eax
   140062060:	or     DWORD PTR [rax+rax*1],eax
   140062063:	add    BYTE PTR [rax+0x0],al
   140062069:	add    BYTE PTR [rax],al
   14006206b:	add    BYTE PTR [rax],al
   14006206d:	add    BYTE PTR [rax],al
   14006206f:	add    BYTE PTR [rax+rax*1],al
   140062072:	add    BYTE PTR [rax],al
   140062074:	add    BYTE PTR [rax],al
   140062076:	add    DWORD PTR [rax],eax
   140062078:	or     DWORD PTR [rax+rax*1],eax
   14006207b:	add    BYTE PTR [rax-0x60000000],dl
   140062081:	and    BYTE PTR [rsi],al
   140062083:	add    BYTE PTR [rbx+rax*1+0x4e40000],dl
   14006208a:	add    BYTE PTR [rax],al
   14006208c:	add    BYTE PTR [rax],al
   14006208e:	add    BYTE PTR [rax],al
   140062090:	xor    al,0x24
   140062092:	(bad)  
   140062093:	add    BYTE PTR [rbx-0x1bffffff],bl
   140062099:	add    al,0x0
   14006209b:	add    BYTE PTR [rax],al
   14006209d:	add    BYTE PTR [rax],al
   14006209f:	add    BYTE PTR [rbx+rax*1+0x34],dl
   1400620a6:	push   rsi
   1400620a7:	add    BYTE PTR [rbx+0x0],dl
   1400620aa:	pop    rdi
   1400620ab:	add    BYTE PTR [rsi+0x0],dl
   1400620ae:	add    BYTE PTR [r10+0x0],r10b
   1400620b2:	push   rbx
   1400620b3:	add    BYTE PTR [rcx+0x0],cl
   1400620b6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400620ba:	pop    rdi
   1400620bb:	add    BYTE PTR [rcx+0x0],cl
   1400620be:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400620c2:	rex.WRXB add BYTE PTR [r8],r8b
   1400620c5:	add    BYTE PTR [rax],al
   1400620c7:	add    BYTE PTR [rbp+0xfeef04],bh
   1400620cd:	add    BYTE PTR [rcx],al
   1400620cf:	add    BYTE PTR [rax],al
   1400620d1:	add    BYTE PTR [rbx],cl
   1400620d3:	add    BYTE PTR [rcx],al
   1400620d5:	add    BYTE PTR [rdi],ah
   1400620d7:	mov    BYTE PTR [rax],0x0
   1400620da:	or     eax,DWORD PTR [rax]
   1400620dc:	add    DWORD PTR [rax],eax
   1400620de:	(bad)  
   1400620df:	(bad)  
   1400620e0:	(bad)  
   1400620e1:	add    BYTE PTR [rax],al
   1400620e3:	add    BYTE PTR [rax],al
   1400620e5:	add    BYTE PTR [rax],al
   1400620e7:	add    BYTE PTR [rax+rax*1],al
   1400620ea:	add    BYTE PTR [rax],al
   1400620ec:	add    al,BYTE PTR [rax]
	...
   1400620fa:	add    BYTE PTR [rax],al
   1400620fc:	repnz add al,BYTE PTR [rax]
   1400620ff:	add    BYTE PTR [rcx],al
   140062101:	add    BYTE PTR [rbx+0x0],dl
   140062104:	je     0x140062106
   140062106:	jb     0x140062108
   140062108:	imul   eax,DWORD PTR [rax],0x67006e
   14006210e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140062112:	ins    BYTE PTR es:[rdi],dx
   140062113:	add    BYTE PTR [rbp+0x0],ah
   140062116:	rex.WB add BYTE PTR [r14+0x0],bpl
   14006211a:	data16 add BYTE PTR [rdi+0x0],ch
   14006211e:	add    BYTE PTR [rax],al
   140062120:	(bad)  
   140062121:	add    al,BYTE PTR [rax]
   140062123:	add    BYTE PTR [rcx],al
   140062125:	add    BYTE PTR [rax],dh
   140062127:	add    BYTE PTR [rax+rax*1],dh
   14006212a:	xor    BYTE PTR [rax],al
   14006212c:	cmp    DWORD PTR [rax],eax
   14006212e:	xor    BYTE PTR [rax],al
   140062130:	xor    al,0x0
   140062132:	(bad)  
   140062133:	add    BYTE PTR [rax],dh
   140062135:	add    BYTE PTR [rax],al
   140062137:	add    BYTE PTR [rax+rax*1+0x16],cl
   14006213b:	add    BYTE PTR [rcx],al
   14006213d:	add    BYTE PTR [rbx+0x0],al
   140062140:	outs   dx,DWORD PTR ds:[rsi]
   140062141:	add    BYTE PTR [rbp+0x0],ch
   140062144:	jo     0x140062146
   140062146:	(bad)  
   140062147:	add    BYTE PTR [rsi+0x0],ch
   14006214a:	jns    0x14006214c
   14006214c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140062150:	ins    DWORD PTR es:[rdi],dx
   140062151:	add    BYTE PTR [rbp+0x0],ah
   140062154:	add    BYTE PTR [rax],al
   140062156:	add    BYTE PTR [rax],al
   140062158:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14006215c:	movsxd eax,DWORD PTR [rax]
   14006215e:	jb     0x140062160
   140062160:	outs   dx,DWORD PTR ds:[rsi]
   140062161:	add    BYTE PTR [rbx+0x0],dh
   140062164:	outs   dx,DWORD PTR ds:[rsi]
   140062165:	add    BYTE PTR [rsi+0x0],ah
   140062168:	je     0x14006216a
   14006216a:	and    BYTE PTR [rax],al
   14006216c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140062170:	jb     0x140062172
   140062172:	jo     0x140062174
   140062174:	outs   dx,DWORD PTR ds:[rsi]
   140062175:	add    BYTE PTR [rdx+0x0],dh
   140062178:	(bad)  
   140062179:	add    BYTE PTR [rax+rax*1+0x69],dh
   14006217d:	add    BYTE PTR [rdi+0x0],ch
   140062180:	outs   dx,BYTE PTR ds:[rsi]
   140062181:	add    BYTE PTR [rax],al
   140062183:	add    BYTE PTR [rax+0x0],ch
   140062186:	and    BYTE PTR [rax],al
   140062188:	add    DWORD PTR [rax],eax
   14006218a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14006218e:	ins    BYTE PTR es:[rdi],dx
   14006218f:	add    BYTE PTR [rbp+0x0],ah
   140062192:	add    BYTE PTR [rbp+0x0],r12b
   140062196:	jae    0x140062198
   140062198:	movsxd eax,DWORD PTR [rax]
   14006219a:	jb     0x14006219c
   14006219c:	imul   eax,DWORD PTR [rax],0x740070
   1400621a2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400621a8:	add    BYTE PTR [rax],al
   1400621aa:	add    BYTE PTR [rax],al
   1400621ac:	push   rsi
   1400621ad:	add    BYTE PTR [rbx+0x0],dl
   1400621b0:	push   rax
   1400621b1:	add    BYTE PTR [rbp+0x0],ah
   1400621b4:	jb     0x1400621b6
   1400621b6:	data16 add BYTE PTR [rax],ah
   1400621b9:	add    BYTE PTR [rax+0x0],dl
   1400621bc:	add    BYTE PTR gs:[rdx+0x0],dh
   1400621c0:	data16 add BYTE PTR [rdi+0x0],ch
   1400621c4:	jb     0x1400621c6
   1400621c6:	ins    DWORD PTR es:[rdi],dx
   1400621c7:	add    BYTE PTR [rcx+0x0],ah
   1400621ca:	outs   dx,BYTE PTR ds:[rsi]
   1400621cb:	add    BYTE PTR [rbx+0x0],ah
   1400621ce:	add    BYTE PTR gs:[rax],ah
   1400621d1:	add    BYTE PTR [rbx+0x0],al
   1400621d4:	outs   dx,DWORD PTR ds:[rsi]
   1400621d5:	add    BYTE PTR [rsi+0x0],ch
   1400621d8:	je     0x1400621da
   1400621da:	jb     0x1400621dc
   1400621dc:	outs   dx,DWORD PTR ds:[rsi]
   1400621dd:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400621e1:	add    BYTE PTR [rax+rax*1+0x6f],dl
   1400621e5:	add    BYTE PTR [rdi+0x0],ch
   1400621e8:	ins    BYTE PTR es:[rdi],dx
   1400621e9:	add    BYTE PTR [rax],al
   1400621eb:	add    BYTE PTR [rax+rax*1+0x1e],bl
   1400621ef:	add    BYTE PTR [rcx],al
   1400621f1:	add    BYTE PTR [rsi+0x0],al
   1400621f4:	imul   eax,DWORD PTR [rax],0x65006c
   1400621fa:	push   rsi
   1400621fb:	add    BYTE PTR [rbp+0x0],ah
   1400621fe:	jb     0x140062200
   140062200:	jae    0x140062202
   140062202:	imul   eax,DWORD PTR [rax],0x6e006f
   140062208:	add    BYTE PTR [rax],al
   14006220a:	add    BYTE PTR [rax],al
   14006220c:	xor    DWORD PTR [rax],eax
   14006220e:	xor    DWORD PTR [rax],eax
   140062210:	add    BYTE PTR cs:[rax],dh
   140062213:	add    BYTE PTR [rsi],ch
   140062215:	add    BYTE PTR [rip+0x37003000],dh        # 0x17706521b
   14006221b:	add    BYTE PTR [rdx],dh
   14006221d:	add    BYTE PTR [rdi],dh
   14006221f:	add    BYTE PTR [rsi],ch
   140062221:	add    BYTE PTR [rcx],dh
   140062223:	add    BYTE PTR [rax],ah
   140062225:	add    BYTE PTR [rdx+0x0],ah
   140062228:	jne    0x14006222a
   14006222a:	imul   eax,DWORD PTR [rax],0x74006c
   140062230:	and    BYTE PTR [rax],al
   140062232:	(bad)  
   140062233:	add    BYTE PTR [rcx+0x0],bh
   140062236:	cmp    al,BYTE PTR [rax]
   140062238:	and    BYTE PTR [rax],al
   14006223a:	push   rdx
   14006223b:	add    BYTE PTR [rax+rax*1+0x4d],dl
   14006223f:	add    BYTE PTR [rdx+0x0],dl
   140062242:	add    BYTE PTR [r8+rax*1+0x0],r9b
   140062247:	add    BYTE PTR [rax+0x0],al
   14006224a:	adc    BYTE PTR [rax],al
   14006224c:	add    DWORD PTR [rax],eax
   14006224e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140062252:	je     0x140062254
   140062254:	add    BYTE PTR gs:[rdx+0x0],dh
   140062258:	outs   dx,BYTE PTR ds:[rsi]
   140062259:	add    BYTE PTR [rcx+0x0],ah
   14006225c:	ins    BYTE PTR es:[rdi],dx
   14006225d:	add    BYTE PTR [rsi+0x0],cl
   140062260:	(bad)  
   140062261:	add    BYTE PTR [rbp+0x0],ch
   140062264:	add    BYTE PTR gs:[rax],al
   140062267:	add    BYTE PTR [rsi+0x0],dl
   14006226a:	push   rbx
   14006226b:	add    BYTE PTR [rax+0x0],dl
   14006226e:	add    BYTE PTR gs:[rdx+0x0],dh
   140062272:	data16 add BYTE PTR [rbx+0x0],al
   140062276:	ins    DWORD PTR es:[rdi],dx
   140062277:	add    BYTE PTR [rax+rax*1+0x55],ah
   14006227b:	add    BYTE PTR [rcx+0x0],cl
   14006227e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140062283:	add    BYTE PTR [rax+rax*1+0x0],ch
   140062287:	add    BYTE PTR [rax+0x1002e00],al
   14006228d:	add    BYTE PTR [rax+rax*1+0x65],cl
   140062291:	add    BYTE PTR [rdi+0x0],ah
   140062294:	(bad)  
   140062295:	add    BYTE PTR [rax+rax*1+0x43],ch
   140062299:	add    BYTE PTR [rdi+0x0],ch
   14006229c:	jo     0x14006229e
   14006229e:	jns    0x1400622a0
   1400622a0:	jb     0x1400622a2
   1400622a2:	imul   eax,DWORD PTR [rax],0x680067
   1400622a8:	je     0x1400622aa
   1400622aa:	add    BYTE PTR [rax],al
   1400622ac:	test   eax,0x4d002000
   1400622b1:	add    BYTE PTR [rcx+0x0],ch
   1400622b4:	movsxd eax,DWORD PTR [rax]
   1400622b6:	jb     0x1400622b8
   1400622b8:	outs   dx,DWORD PTR ds:[rsi]
   1400622b9:	add    BYTE PTR [rbx+0x0],dh
   1400622bc:	outs   dx,DWORD PTR ds:[rsi]
   1400622bd:	add    BYTE PTR [rsi+0x0],ah
   1400622c0:	je     0x1400622c2
   1400622c2:	and    BYTE PTR [rax],al
   1400622c4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400622c8:	jb     0x1400622ca
   1400622ca:	jo     0x1400622cc
   1400622cc:	outs   dx,DWORD PTR ds:[rsi]
   1400622cd:	add    BYTE PTR [rdx+0x0],dh
   1400622d0:	(bad)  
   1400622d1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400622d5:	add    BYTE PTR [rdi+0x0],ch
   1400622d8:	outs   dx,BYTE PTR ds:[rsi]
   1400622d9:	add    BYTE PTR [rsi],ch
   1400622db:	add    BYTE PTR [rax],ah
   1400622dd:	add    BYTE PTR [rcx+0x0],al
   1400622e0:	ins    BYTE PTR es:[rdi],dx
   1400622e1:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400622e5:	add    BYTE PTR [rdx+0x0],dh
   1400622e8:	imul   eax,DWORD PTR [rax],0x680067
   1400622ee:	je     0x1400622f0
   1400622f0:	jae    0x1400622f2
   1400622f2:	and    BYTE PTR [rax],al
   1400622f4:	jb     0x1400622f6
   1400622f6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400622fa:	add    BYTE PTR gs:[rdx+0x0],dh
   1400622fe:	jbe    0x140062300
   140062300:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140062305:	add    BYTE PTR [rax],al
   140062307:	add    BYTE PTR [rax+0x0],cl
   14006230a:	adc    BYTE PTR [rax],al
   14006230c:	add    DWORD PTR [rax],eax
   14006230e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140062312:	imul   eax,DWORD PTR [rax],0x690067
   140062318:	outs   dx,BYTE PTR ds:[rsi]
   140062319:	add    BYTE PTR [rcx+0x0],ah
   14006231c:	ins    BYTE PTR es:[rdi],dx
   14006231d:	add    BYTE PTR [rsi+0x0],al
   140062320:	imul   eax,DWORD PTR [rax],0x65006c
   140062326:	outs   dx,BYTE PTR ds:[rsi]
   140062327:	add    BYTE PTR [rcx+0x0],ah
   14006232a:	ins    DWORD PTR es:[rdi],dx
   14006232b:	add    BYTE PTR [rbp+0x0],ah
   14006232e:	add    BYTE PTR [rax],al
   140062330:	push   rsi
   140062331:	add    BYTE PTR [rbx+0x0],dl
   140062334:	push   rax
   140062335:	add    BYTE PTR [rbp+0x0],ah
   140062338:	jb     0x14006233a
   14006233a:	data16 add BYTE PTR [rbx+0x0],al
   14006233e:	ins    DWORD PTR es:[rdi],dx
   14006233f:	add    BYTE PTR [rax+rax*1+0x55],ah
   140062343:	add    BYTE PTR [rcx+0x0],cl
   140062346:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14006234b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14006234f:	add    BYTE PTR [rsi+0x0],bl
   140062352:	(bad)  
   140062353:	add    BYTE PTR [rcx],al
   140062355:	add    BYTE PTR [rax+0x0],dl
   140062358:	jb     0x14006235a
   14006235a:	outs   dx,DWORD PTR ds:[rsi]
   14006235b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14006235f:	add    BYTE PTR [rbx+0x0],ah
   140062362:	je     0x140062364
   140062364:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140062368:	ins    DWORD PTR es:[rdi],dx
   140062369:	add    BYTE PTR [rbp+0x0],ah
   14006236c:	add    BYTE PTR [rax],al
   14006236e:	add    BYTE PTR [rax],al
   140062370:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140062374:	movsxd eax,DWORD PTR [rax]
   140062376:	jb     0x140062378
   140062378:	outs   dx,DWORD PTR ds:[rsi]
   140062379:	add    BYTE PTR [rbx+0x0],dh
   14006237c:	outs   dx,DWORD PTR ds:[rsi]
   14006237d:	add    BYTE PTR [rsi+0x0],ah
   140062380:	je     0x140062382
   140062382:	scas   al,BYTE PTR es:[rdi]
   140062383:	add    BYTE PTR [rax],ah
   140062385:	add    BYTE PTR [rsi+0x0],dl
   140062388:	imul   eax,DWORD PTR [rax],0x750073
   14006238e:	(bad)  
   14006238f:	add    BYTE PTR [rax+rax*1+0x20],ch
   140062393:	add    BYTE PTR [rbx+0x0],dl
   140062396:	je     0x140062398
   140062398:	jne    0x14006239a
   14006239a:	add    BYTE PTR fs:[rcx+0x0],ch
   14006239e:	outs   dx,DWORD PTR ds:[rsi]
   14006239f:	add    BYTE PTR [rsi+0x32002000],ch
   1400623a5:	add    BYTE PTR [rax],dh
   1400623a7:	add    BYTE PTR [rcx],dh
   1400623a9:	add    BYTE PTR [rdx],dh
   1400623ab:	add    BYTE PTR [rax],al
   1400623ad:	add    BYTE PTR [rax],al
   1400623af:	add    BYTE PTR [rsi],bh
   1400623b1:	add    BYTE PTR [rip+0x50000100],cl        # 0x1900624b7
   1400623b7:	add    BYTE PTR [rdx+0x0],dh
   1400623ba:	outs   dx,DWORD PTR ds:[rsi]
   1400623bb:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400623bf:	add    BYTE PTR [rbx+0x0],ah
   1400623c2:	je     0x1400623c4
   1400623c4:	push   rsi
   1400623c5:	add    BYTE PTR [rbp+0x0],ah
   1400623c8:	jb     0x1400623ca
   1400623ca:	jae    0x1400623cc
   1400623cc:	imul   eax,DWORD PTR [rax],0x6e006f
   1400623d2:	add    BYTE PTR [rax],al
   1400623d4:	xor    DWORD PTR [rax],eax
   1400623d6:	xor    DWORD PTR [rax],eax
   1400623d8:	add    BYTE PTR cs:[rax],dh
   1400623db:	add    BYTE PTR [rsi],ch
   1400623dd:	add    BYTE PTR [rip+0x37003000],dh        # 0x1770653e3
   1400623e3:	add    BYTE PTR [rdx],dh
   1400623e5:	add    BYTE PTR [rdi],dh
   1400623e7:	add    BYTE PTR [rsi],ch
   1400623e9:	add    BYTE PTR [rcx],dh
   1400623eb:	add    BYTE PTR [rax],al
   1400623ed:	add    BYTE PTR [rax],al
   1400623ef:	add    BYTE PTR [rax+rax*1+0x0],al
   1400623f3:	add    BYTE PTR [rcx],al
   1400623f5:	add    BYTE PTR [rsi+0x0],dl
   1400623f8:	(bad)  
   1400623f9:	add    BYTE PTR [rdx+0x0],dh
   1400623fc:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140062400:	ins    BYTE PTR es:[rdi],dx
   140062401:	add    BYTE PTR [rbp+0x0],ah
   140062404:	rex.WB add BYTE PTR [r14+0x0],bpl
   140062408:	data16 add BYTE PTR [rdi+0x0],ch
   14006240c:	add    BYTE PTR [rax],al
   14006240e:	add    BYTE PTR [rax],al
   140062410:	and    al,0x0
   140062412:	add    al,0x0
   140062414:	add    BYTE PTR [rax],al
   140062416:	push   rsp
   140062417:	add    BYTE PTR [rdx+0x0],dh
   14006241a:	(bad)  
   14006241b:	add    BYTE PTR [rsi+0x0],ch
   14006241e:	jae    0x140062420
   140062420:	ins    BYTE PTR es:[rdi],dx
   140062421:	add    BYTE PTR [rcx+0x0],ah
   140062424:	je     0x140062426
   140062426:	imul   eax,DWORD PTR [rax],0x6e006f
   14006242c:	add    BYTE PTR [rax],al
   14006242e:	add    BYTE PTR [rax],al
   140062430:	or     DWORD PTR [rax+rsi*4],eax
   140062433:	add    al,0x3c
   140062435:	(bad)  
   140062436:	jae    0x1400624ab
   140062438:	gs ins DWORD PTR es:[rdi],dx
   14006243a:	(bad)  
   14006243b:	ins    BYTE PTR es:[rdi],dx
   14006243c:	jns    0x14006245e
   14006243e:	js     0x1400624ad
   140062440:	ins    BYTE PTR es:[rdi],dx
   140062441:	outs   dx,BYTE PTR ds:[rsi]
   140062442:	jae    0x140062481
   140062444:	and    dh,BYTE PTR [rbp+0x72]
   140062447:	outs   dx,BYTE PTR ds:[rsi]
   140062448:	cmp    dh,BYTE PTR [rbx+0x63]
   14006244b:	push   0x73616d65
   140062450:	sub    eax,0x7263696d
   140062455:	outs   dx,DWORD PTR ds:[rsi]
   140062456:	jae    0x1400624c7
   140062458:	data16 je 0x140062488
   14006245b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14006245e:	cmp    ah,BYTE PTR [rcx+0x73]
   140062461:	ins    DWORD PTR es:[rdi],dx
   140062462:	cs jbe 0x140062496
   140062465:	and    ah,BYTE PTR [rax]
   140062467:	ins    DWORD PTR es:[rdi],dx
   140062468:	(bad)  
   140062469:	outs   dx,BYTE PTR ds:[rsi]
   14006246a:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140062471:	jb     0x1400624e6
   140062473:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14006247a:	xor    BYTE PTR [rdx],ah
   14006247c:	ds cmp al,0x61
   14006247f:	jae    0x1400624f4
   140062481:	gs ins DWORD PTR es:[rdi],dx
   140062483:	(bad)  
   140062484:	ins    BYTE PTR es:[rdi],dx
   140062485:	jns    0x1400624d0
   140062487:	fs outs dx,BYTE PTR gs:[rsi]
   14006248a:	je     0x1400624f5
   14006248c:	je     0x140062507
   14006248e:	and    BYTE PTR [rsi+0x65],dh
   140062491:	jb     0x140062506
   140062493:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14006249a:	xor    BYTE PTR [rsi],ch
   14006249c:	xor    BYTE PTR [rsi],ch
   14006249e:	xor    BYTE PTR [rdx],ah
   1400624a0:	and    BYTE PTR [rax+0x72],dh
   1400624a3:	outs   dx,DWORD PTR ds:[rsi]
   1400624a4:	movsxd esp,DWORD PTR [rbp+0x73]
   1400624a7:	jae    0x140062518
   1400624a9:	jb     0x1400624ec
   1400624ab:	jb     0x140062510
   1400624ad:	push   0x63657469
   1400624b2:	je     0x140062529
   1400624b4:	jb     0x14006251b
   1400624b6:	cmp    eax,0x36385822
   1400624bb:	and    ah,BYTE PTR [rax]
   1400624bd:	outs   dx,BYTE PTR ds:[rsi]
   1400624be:	(bad)  
   1400624bf:	ins    DWORD PTR es:[rdi],dx
   1400624c0:	gs cmp eax,0x50535622
   1400624c6:	gs jb  0x14006252f
   1400624c9:	rex.XB ins DWORD PTR es:[rdi],dx
   1400624cb:	and    ah,BYTE PTR fs:[rax]
   1400624ce:	je     0x140062549
   1400624d0:	jo     0x140062537
   1400624d2:	cmp    eax,0x6e697722
   1400624d7:	xor    esi,DWORD PTR [rdx]
   1400624d9:	and    bh,BYTE PTR [rsi]
   1400624db:	cmp    al,0x2f
   1400624dd:	(bad)  
   1400624de:	jae    0x140062553
   1400624e0:	gs ins DWORD PTR es:[rdi],dx
   1400624e2:	(bad)  
   1400624e3:	ins    BYTE PTR es:[rdi],dx
   1400624e4:	jns    0x14006252f
   1400624e6:	fs outs dx,BYTE PTR gs:[rsi]
   1400624e9:	je     0x140062554
   1400624eb:	je     0x140062566
   1400624ed:	ds cmp al,0x74
   1400624f0:	jb     0x140062567
   1400624f2:	jae    0x140062568
   1400624f4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400624f6:	outs   dx,WORD PTR ds:[rsi]
   1400624f8:	and    BYTE PTR [rax+0x6d],bh
   1400624fb:	ins    BYTE PTR es:[rdi],dx
   1400624fc:	outs   dx,BYTE PTR ds:[rsi]
   1400624fd:	jae    0x14006253c
   1400624ff:	and    dh,BYTE PTR [rbp+0x72]
   140062502:	outs   dx,BYTE PTR ds:[rsi]
   140062503:	cmp    dh,BYTE PTR [rbx+0x63]
   140062506:	push   0x73616d65
   14006250b:	sub    eax,0x7263696d
   140062510:	outs   dx,DWORD PTR ds:[rsi]
   140062511:	jae    0x140062582
   140062513:	data16 je 0x140062543
   140062516:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140062519:	cmp    ah,BYTE PTR [rcx+0x73]
   14006251c:	ins    DWORD PTR es:[rdi],dx
   14006251d:	cs jbe 0x140062553
   140062520:	and    bh,BYTE PTR [rsi]
   140062522:	cmp    al,0x73
   140062524:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140062528:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x7165723c
   140062530:	jne    0x140062597
   140062532:	jae    0x1400625a8
   140062534:	gs fs push rax
   140062537:	jb     0x1400625a2
   140062539:	jbe    0x1400625a4
   14006253b:	ins    BYTE PTR es:[rdi],dx
   14006253c:	gs addr32 gs jae 0x14006257f
   140062541:	cmp    al,0x72
   140062543:	gs jno 0x1400625bb
   140062546:	gs jae 0x1400625bd
   140062549:	gs fs rex.RB js 0x1400625b3
   14006254e:	movsxd esi,DWORD PTR [rbp+0x74]
   140062551:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140062558:	ins    BYTE PTR es:[rdi],dx
   140062559:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14006255d:	gs ins BYTE PTR es:[rdi],dx
   14006255f:	cmp    eax,0x49736122
   140062564:	outs   dx,BYTE PTR ds:[rsi]
   140062565:	jbe    0x1400625d6
   140062567:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14006256b:	and    BYTE PTR [rbp+0x69],dh
   14006256e:	movsxd esp,DWORD PTR [r11+0x65]
   140062572:	jae    0x1400625e7
   140062574:	cmp    eax,0x6c616622
   140062579:	jae    0x1400625e0
   14006257b:	and    bh,BYTE PTR [rsi]
   14006257d:	cmp    al,0x2f
   14006257f:	jb     0x1400625e6
   140062581:	jno    0x1400625f8
   140062583:	gs jae 0x1400625fa
   140062586:	gs fs rex.RB js 0x1400625f0
   14006258b:	movsxd esi,DWORD PTR [rbp+0x74]
   14006258e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140062595:	ins    BYTE PTR es:[rdi],dx
   140062596:	ds cmp al,0x2f
   140062599:	jb     0x140062600
   14006259b:	jno    0x140062612
   14006259d:	gs jae 0x140062614
   1400625a0:	gs fs push rax
   1400625a3:	jb     0x14006260e
   1400625a5:	jbe    0x140062610
   1400625a7:	ins    BYTE PTR es:[rdi],dx
   1400625a8:	gs addr32 gs jae 0x1400625eb
   1400625ad:	cmp    al,0x2f
   1400625af:	jae    0x140062616
   1400625b1:	movsxd esi,DWORD PTR [rbp+0x72]
   1400625b4:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x72742f3c
   1400625bc:	jne    0x140062631
   1400625be:	je     0x140062609
   1400625c0:	outs   dx,BYTE PTR ds:[rsi]
   1400625c1:	outs   dx,WORD PTR ds:[rsi]
   1400625c3:	ds cmp al,0x2f
   1400625c6:	(bad)  
   1400625c7:	jae    0x14006263c
   1400625c9:	gs ins DWORD PTR es:[rdi],dx
   1400625cb:	(bad)  
   1400625cc:	ins    BYTE PTR es:[rdi],dx
   1400625cd:	jns    0x14006260d
   1400625cf:	push   rax

Disassembly of section .reloc:

0000000140063000 <.reloc>:
   140063000:	add    BYTE PTR [rax],dl
   140063002:	add    al,0x0
   140063004:	jo     0x140063006
   140063006:	add    BYTE PTR [rax],al
   140063008:	mov    al,0xa7
   14006300a:	mov    eax,0xc8a7c0a7
   14006300f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140063010:	shl    BYTE PTR [rdi-0x581f5828],1
   140063016:	call   0x138ae20c2
   14006301b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006301c:	add    BYTE PTR [rax-0x57ef57f8],ch
   140063022:	sub    BYTE PTR [rax-0x57c757d0],ch
   140063028:	test   al,0x48
   14006302b:	test   al,0x60
   14006302d:	test   al,0x68
   14006302f:	test   al,0x70
   140063031:	test   al,0xc8
   140063033:	test   al,0xd0
   140063035:	test   al,0xd8
   140063037:	test   al,0xe0
   140063039:	test   al,0xe8
   14006303b:	test   al,0x0
   14006303d:	test   eax,0xa9f8a908
   140063042:	or     BYTE PTR [rdx-0x55d755e8],ch
   140063048:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   14006304e:	push   0xffffffff88aa78aa
   140063053:	stos   BYTE PTR es:[rdi],al
   140063054:	cwde   
   140063055:	stos   BYTE PTR es:[rdi],al
   140063056:	test   al,0xaa
   140063058:	mov    eax,0xd8aac8aa
   14006305d:	stos   BYTE PTR es:[rdi],al
   14006305e:	call   0x148b1290d
   140063063:	stos   DWORD PTR es:[rdi],eax
   140063064:	sbb    BYTE PTR [rbx-0x54c754d8],ch
   14006306a:	stos   QWORD PTR es:[rdi],rax
   14006306c:	pop    rax
   14006306d:	stos   DWORD PTR es:[rdi],eax
   14006306e:	add    BYTE PTR [rax],al
   140063070:	add    BYTE PTR [rax],ah
   140063072:	add    al,0x0
   140063074:	fadd   QWORD PTR [rax]
   140063076:	add    BYTE PTR [rax],al
   140063078:	(bad)  
   140063079:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14006307a:	push   0xffffffffd0a570a5
   14006307f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140063080:	fsub   DWORD PTR [rbp-0x5a175a20]
   140063086:	mov    al,0xab
   140063088:	mov    eax,0xc8abc0ab
   14006308d:	stos   DWORD PTR es:[rdi],eax
   14006308e:	shr    BYTE PTR [rbx-0x541f5428],1
   140063094:	call   0x138b22144
   140063099:	stos   DWORD PTR es:[rdi],eax
   14006309a:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   1400630a1:	lods   al,BYTE PTR ds:[rsi]
   1400630a2:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   1400630a9:	lods   al,BYTE PTR ds:[rsi]
   1400630aa:	lods   al,BYTE PTR ds:[rsi]
   1400630ac:	rex.W lods al,BYTE PTR ds:[rsi]
   1400630ae:	push   rax
   1400630af:	lods   al,BYTE PTR ds:[rsi]
   1400630b0:	pop    rax
   1400630b1:	lods   al,BYTE PTR ds:[rsi]
   1400630b2:	(bad)  
   1400630b3:	lods   al,BYTE PTR ds:[rsi]
   1400630b4:	push   0x78ac70ac
   1400630b9:	lods   al,BYTE PTR ds:[rsi]
   1400630ba:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400630c2:	movabs al,ds:0xc0acb8acb0aca8ac
   1400630cb:	lods   al,BYTE PTR ds:[rsi]
   1400630cc:	enter  0xd0ac,0xac
   1400630d0:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   1400630d7:	lods   al,BYTE PTR ds:[rsi]
   1400630d8:	clc    
   1400630d9:	lods   al,BYTE PTR ds:[rsi]
   1400630da:	add    BYTE PTR [rbp-0x52ef52f8],ch
   1400630e0:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   1400630e6:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   1400630ec:	lods   rax,QWORD PTR ds:[rsi]
   1400630ee:	push   rax
   1400630ef:	lods   eax,DWORD PTR ds:[rsi]
   1400630f0:	pop    rax
   1400630f1:	lods   eax,DWORD PTR ds:[rsi]
   1400630f2:	(bad)  
   1400630f3:	lods   eax,DWORD PTR ds:[rsi]
   1400630f4:	push   0x78ad70ad
   1400630f9:	lods   eax,DWORD PTR ds:[rsi]
   1400630fa:	sub    BYTE PTR [rbp-0x526f5278],0x98
   140063101:	lods   eax,DWORD PTR ds:[rsi]
   140063102:	movabs al,ds:0xc0adb8adb0ada8ad
   14006310b:	lods   eax,DWORD PTR ds:[rsi]
   14006310c:	enter  0xd0ad,0xad
   140063110:	fsubr  DWORD PTR [rbp-0x52175220]
   140063116:	lock lods eax,DWORD PTR ds:[rsi]
   140063118:	clc    
   140063119:	lods   eax,DWORD PTR ds:[rsi]
   14006311a:	add    BYTE PTR [rsi-0x51ef51f8],ch
   140063120:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   140063126:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14006312c:	rex.W scas al,BYTE PTR es:[rdi]
   14006312e:	push   rax
   14006312f:	scas   al,BYTE PTR es:[rdi]
   140063130:	pop    rax
   140063131:	scas   al,BYTE PTR es:[rdi]
   140063132:	(bad)  
   140063133:	scas   al,BYTE PTR es:[rdi]
   140063134:	push   0x78ae70ae
   140063139:	scas   al,BYTE PTR es:[rdi]
   14006313a:	sub    BYTE PTR [rsi-0x516f5178],0x98
   140063141:	scas   al,BYTE PTR es:[rdi]
   140063142:	movabs al,ds:0xaeb8aeb0aea8ae
   14006314b:	add    BYTE PTR [rax],al
   14006314d:	xor    BYTE PTR [rax+rax*1],al
   140063150:	pop    rax
   140063151:	add    BYTE PTR [rax],al
   140063153:	add    BYTE PTR [rax-0x57526753],cl
   140063159:	lods   eax,DWORD PTR ds:[rsi]
   14006315a:	mov    eax,0xd8adc8ad
   14006315f:	lods   eax,DWORD PTR ds:[rsi]
   140063160:	call   0x148b42a12
   140063165:	scas   al,BYTE PTR es:[rdi]
   140063166:	sbb    BYTE PTR [rsi-0x51c751d8],ch
   14006316c:	rex.W scas al,BYTE PTR es:[rdi]
   14006316e:	pop    rax
   14006316f:	scas   al,BYTE PTR es:[rdi]
   140063170:	push   0xffffffff88ae78ae
   140063175:	scas   al,BYTE PTR es:[rdi]
   140063176:	cwde   
   140063177:	scas   al,BYTE PTR es:[rdi]
   140063178:	test   al,0xae
   14006317a:	mov    eax,0xd8aec8ae
   14006317f:	scas   al,BYTE PTR es:[rdi]
   140063180:	call   0x148b52a33
   140063185:	scas   eax,DWORD PTR es:[rdi]
   140063186:	sbb    BYTE PTR [rdi-0x50c750d8],ch
   14006318c:	scas   rax,QWORD PTR es:[rdi]
   14006318e:	pop    rax
   14006318f:	scas   eax,DWORD PTR es:[rdi]
   140063190:	push   0xffffffff88af78af
   140063195:	scas   eax,DWORD PTR es:[rdi]
   140063196:	cwde   
   140063197:	scas   eax,DWORD PTR es:[rdi]
   140063198:	test   al,0xaf
   14006319a:	mov    eax,0xd8afc8af
   14006319f:	scas   eax,DWORD PTR es:[rdi]
   1400631a0:	call   0x140b62a54
   1400631a5:	add    al,0x0
   1400631a8:	call   0x1480631ad
   1400631ad:	movabs al,ds:0xa048a038a028a018
   1400631b6:	pop    rax
   1400631b7:	movabs al,ds:0xa098a088a078a068
   1400631c0:	test   al,0xa0
   1400631c2:	mov    eax,0xd8a0c8a0
   1400631c7:	movabs al,ds:0xa118a108a0f8a0e8
   1400631d0:	sub    BYTE PTR [rcx-0x5eb75ec8],ah
   1400631d6:	pop    rax
   1400631d7:	movabs eax,ds:0xa198a188a178a168
   1400631e0:	test   al,0xa1
   1400631e2:	mov    eax,0xd8a1c8a1
   1400631e7:	movabs eax,ds:0xa218a208a1f8a1e8
   1400631f0:	cmp    BYTE PTR [rdx-0x5da75db8],ah
   1400631f6:	push   0xffffffff88a278a2
   1400631fb:	movabs ds:0xa2c8a2b8a2a8a298,al
   140063204:	fsub   DWORD PTR [rdx-0x5d075d18]
   14006320a:	or     BYTE PTR [rbx-0x5cd75ce8],ah
   140063210:	cmp    BYTE PTR [rbx-0x5ca75cb8],ah
   140063216:	push   0xffffffff88a378a3
   14006321b:	movabs ds:0xa3c8a3b8a3a8a398,eax
   140063224:	fsub   DWORD PTR [rbx-0x5c075c18]
   14006322a:	or     BYTE PTR [rax+rbx*1+0x38a428a4],ah
   140063231:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140063232:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140063234:	pop    rax
   140063235:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140063236:	push   0xffffffff88a478a4
   14006323b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006323c:	cwde   
   14006323d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006323e:	test   al,0xa4
   140063240:	mov    eax,0xd8a4c8a4
   140063245:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140063246:	call   0x148ab2aef
   14006324b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14006324c:	sbb    BYTE PTR [rbp-0x5ac75ad8],ah
   140063252:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140063254:	pop    rax
   140063255:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140063256:	push   0xffffffff88a578a5
   14006325b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14006325c:	cwde   
   14006325d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14006325e:	test   al,0xa5
   140063260:	mov    eax,0xd8a5c8a5
   140063265:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140063266:	call   0x148ac2b10
   14006326b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006326c:	sbb    BYTE PTR [rsi-0x59c759d8],ah
   140063272:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140063274:	pop    rax
   140063275:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140063276:	push   0xffffffff88a678a6
   14006327b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006327c:	cwde   
   14006327d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006327e:	test   al,0xa6
   140063280:	mov    eax,0xd8a6c8a6
   140063285:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140063286:	call   0x148ad2b31
   14006328b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006328c:	add    BYTE PTR [rax+0x4],dl
   14006328f:	add    BYTE PTR [rax+rax*1-0x5f900000],ah
   140063296:	js     0x140063238
   140063298:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14006329f:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   1400632a8:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   1400632af:	movabs al,ds:0xa0f8a0f0a0e8a0e0
   1400632b8:	add    BYTE PTR [rcx-0x5eef5ef8],ah
   1400632be:	sbb    BYTE PTR [rcx-0x5ed75ee0],ah
   1400632c4:	xor    BYTE PTR [rcx-0x5ebf5ec8],ah
   1400632ca:	movabs rax,ds:0xa168a160a158a150
   1400632d4:	jo     0x140063277
   1400632d6:	js     0x140063279
   1400632d8:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   1400632df:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   1400632e8:	shl    BYTE PTR [rcx-0x5e1f5e28],0xe8
   1400632ef:	movabs eax,ds:0xa208a200a1f8a1f0
   1400632f8:	adc    BYTE PTR [rdx-0x5ddf5de8],ah
   1400632fe:	sub    BYTE PTR [rdx-0x5b1f5b28],ah
   140063304:	call   0xc8ab23ad
   140063309:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006330a:	nop
   14006330b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006330c:	cwde   
   14006330d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006330e:	movabs al,ds:0xf8a8f0a7b0a7a8a7
   140063317:	test   al,0x0
   140063319:	test   eax,0xa910a908
   14006331e:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140063324:	xor    BYTE PTR [rcx-0x506f56c8],ch
   14006332a:	cwde   
   14006332b:	scas   eax,DWORD PTR es:[rdi]
   14006332c:	clc    
   14006332d:	scas   eax,DWORD PTR es:[rdi]
   14006332e:	add    BYTE PTR [rax],al
   140063330:	add    BYTE PTR [rax+0x4],ah
   140063333:	add    ah,bh
   140063335:	add    BYTE PTR [rax],al
   140063337:	add    BYTE PTR [rax],al
   140063339:	movabs al,ds:0xa020a018a010a008
   140063342:	sub    BYTE PTR [rax-0x5dcf5dd8],ah
   140063348:	cmp    BYTE PTR [rdx-0x5d5f5dc0],ah
   14006334e:	test   al,0xa2
   140063350:	mov    al,0xa2
   140063352:	mov    eax,0xc8a2c0a2
   140063357:	movabs ds:0xa2e8a2e0a2d8a2d0,al
   140063360:	lock movabs ds:0xa468a3a8a3a0a2f8,al
   14006336a:	jo     0x140063310
   14006336c:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   140063374:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14006337d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006337e:	enter  0xe8a4,0xa4
   140063382:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140063384:	clc    
   140063385:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140063386:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14006338c:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   140063392:	xor    BYTE PTR [rbp-0x59bf5ac8],ah
   140063398:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006339a:	push   rax
   14006339b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006339c:	pop    rax
   14006339d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006339e:	(bad)  
   14006339f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400633a0:	mov    BYTE PTR [rsi-0x59675970],ah
   1400633a6:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   1400633af:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400633b0:	enter  0xd0a6,0xa6
   1400633b4:	fsub   DWORD PTR [rsi-0x59175920]
   1400633ba:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400633bc:	and    BYTE PTR [rax-0x57cf57d8],ch
   1400633c2:	cmp    BYTE PTR [rax-0x57b757c0],ch
   1400633c8:	push   rax
   1400633c9:	test   al,0x58
   1400633cb:	test   al,0x60
   1400633cd:	test   al,0x68
   1400633cf:	test   al,0x70
   1400633d1:	test   al,0x78
   1400633d3:	test   al,0x80
   1400633d5:	test   al,0x88
   1400633d7:	test   al,0x90
   1400633d9:	test   al,0x98
   1400633db:	test   al,0xa0
   1400633dd:	test   al,0xa8
   1400633df:	test   al,0xb0
   1400633e1:	test   al,0xb8
   1400633e3:	test   al,0xc0
   1400633e5:	test   al,0xc8
   1400633e7:	test   al,0xd0
   1400633e9:	test   al,0xd8
   1400633eb:	test   al,0xe0
   1400633ed:	test   al,0xe8
   1400633ef:	test   al,0xf0
   1400633f1:	test   al,0xf8
   1400633f3:	test   al,0x0
   1400633f5:	test   eax,0xa910a908
   1400633fa:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140063400:	mov    al,0xae
   140063402:	mov    eax,0xc8aec0ae
   140063407:	scas   al,BYTE PTR es:[rdi]
   140063408:	shr    BYTE PTR [rsi-0x511f5128],1
   14006340e:	call   0x138b524c1
   140063413:	scas   al,BYTE PTR es:[rdi]
   140063414:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14006341a:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   140063420:	fsubr  DWORD PTR [rdi-0x50175020]
   140063426:	lock scas eax,DWORD PTR es:[rdi]
   140063428:	clc    
   140063429:	scas   eax,DWORD PTR es:[rdi]
   14006342a:	add    BYTE PTR [rax],al
   14006342c:	add    BYTE PTR [rax+0x4],dh
   14006342f:	add    BYTE PTR [rax+rax*1-0x60000000],ch
   140063436:	or     BYTE PTR [rax-0x5fe75ff0],ah
   14006343c:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   140063442:	cmp    BYTE PTR [rax-0x5fb75fc0],ah
   140063448:	push   rax
   140063449:	movabs al,ds:0xa070a068a060a058
   140063452:	js     0x1400633f4
   140063454:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14006345b:	movabs al,ds:0xa428a420a0a8a0a0
   140063464:	xor    BYTE PTR [rax+rdi*1+0x48a440a4],ah
   14006346b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006346c:	push   rax
   14006346d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006346e:	pop    rax
   14006346f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140063470:	(bad)  
   140063471:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140063472:	push   0x78a470a4
   140063477:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140063478:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   140063480:	movabs al,ds:0x68a760a4b0a4a8a4
   140063489:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006348a:	sub    BYTE PTR [rbx-0x546f5478],0x98
   140063491:	stos   DWORD PTR es:[rdi],eax
   140063492:	movabs al,ds:0xc0abb8abb0aba8ab
   14006349b:	stos   DWORD PTR es:[rdi],eax
   14006349c:	enter  0xd0ab,0xab
   1400634a0:	fsubr  DWORD PTR [rbx-0x54175420]
   1400634a6:	lock stos DWORD PTR es:[rdi],eax
   1400634a8:	clc    
   1400634a9:	stos   DWORD PTR es:[rdi],eax
   1400634aa:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   1400634b1:	lods   al,BYTE PTR ds:[rsi]
   1400634b2:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   1400634b9:	lods   al,BYTE PTR ds:[rsi]
   1400634ba:	lods   al,BYTE PTR ds:[rsi]
   1400634bc:	rex.W lods al,BYTE PTR ds:[rsi]
   1400634be:	push   rax
   1400634bf:	lods   al,BYTE PTR ds:[rsi]
   1400634c0:	pop    rax
   1400634c1:	lods   al,BYTE PTR ds:[rsi]
   1400634c2:	cwde   
   1400634c3:	lods   al,BYTE PTR ds:[rsi]
   1400634c4:	movabs al,ds:0xc0acb8acb0aca8ac
   1400634cd:	lods   al,BYTE PTR ds:[rsi]
   1400634ce:	enter  0xd0ac,0xac
   1400634d2:	fsubr  DWORD PTR [rax+riz*8+0xac]
   1400634d9:	movabs al,ds:0xade80000000c0004
   1400634e2:	js     0x140063492
   1400634e4:	add    BYTE PTR [rax+0xdc0005],dl
   1400634ea:	add    BYTE PTR [rax],al
   1400634ec:	add    BYTE PTR [rax-0x589f5bd8],ah
   1400634f2:	push   0x78a770a7
   1400634f7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400634f8:	and    BYTE PTR [rdi-0x586f5878],0x98
   1400634ff:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140063500:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140063509:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006350a:	enter  0xd0a7,0xa7
   14006350e:	fsub   DWORD PTR [rdi-0x58175820]
   140063514:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140063516:	clc    
   140063517:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140063518:	add    BYTE PTR [rax-0x57ef57f8],ch
   14006351e:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140063524:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14006352a:	rex.W test al,0x50
   14006352d:	test   al,0x58
   14006352f:	test   al,0x60
   140063531:	test   al,0x68
   140063533:	test   al,0x70
   140063535:	test   al,0x78
   140063537:	test   al,0x80
   140063539:	test   al,0x88
   14006353b:	test   al,0x90
   14006353d:	test   al,0x98
   14006353f:	test   al,0xa0
   140063541:	test   al,0xa8
   140063543:	test   al,0xb0
   140063545:	test   al,0xc0
   140063547:	test   al,0xc8
   140063549:	test   al,0xd0
   14006354b:	test   al,0xd8
   14006354d:	test   al,0xe0
   14006354f:	test   al,0xe8
   140063551:	test   al,0xf0
   140063553:	test   al,0xf8
   140063555:	test   al,0x0
   140063557:	test   eax,0xa910a908
   14006355c:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140063562:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140063568:	test   rax,0xffffffffa958a950
   14006356e:	(bad)  
   14006356f:	test   eax,0xa970a968
   140063574:	js     0x14006351f
   140063576:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14006357d:	test   eax,0xa9a8a9a0
   140063582:	mov    al,0xa9
   140063584:	mov    eax,0xc8a9c0a9
   140063589:	test   eax,0xa9d8a9d0
   14006358e:	loopne 0x140063539
   140063590:	call   0x138b0263e
   140063595:	test   eax,0xaa08aa00
   14006359a:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400635a0:	push   0xffffffffa8aa88aa
   1400635a5:	stos   BYTE PTR es:[rdi],al
   1400635a6:	enter  0xe8aa,0xaa
   1400635aa:	and    BYTE PTR [rbx-0x54bf54c8],ch
   1400635b0:	stos   QWORD PTR es:[rdi],rax
   1400635b2:	push   rax
   1400635b3:	stos   DWORD PTR es:[rdi],eax
   1400635b4:	nop
   1400635b5:	stos   DWORD PTR es:[rdi],eax
   1400635b6:	movabs al,ds:0xaf68af60abb0ab
   1400635bf:	add    BYTE PTR [rax],al
   1400635c1:	movabs al,ds:0xa1c00000016c0005
   1400635ca:	enter  0xd0a1,0xa1
   1400635ce:	fsub   DWORD PTR [rcx-0x5e175e20]
   1400635d4:	lock movabs eax,ds:0xa218a208a200a1f8
   1400635de:	and    BYTE PTR [rdx-0x5dcf5dd8],ah
   1400635e4:	cmp    BYTE PTR [rdx-0x5db75dc0],ah
   1400635ea:	push   rax
   1400635eb:	movabs ds:0xa278a268a260a258,al
   1400635f4:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   1400635fb:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   140063604:	shl    BYTE PTR [rdx-0x5cff5d28],0x28
   14006360b:	movabs ds:0xa490a360a338a330,eax
   140063614:	mov    eax,0x28a4f0a4
   140063619:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14006361a:	push   rax
   14006361b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14006361c:	js     0x1400635c3
   14006361e:	test   al,0xa5
   140063620:	shl    BYTE PTR [rbp-0x59cf59f8],1
   140063626:	(bad)  
   140063627:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140063628:	push   0x78a670a6
   14006362d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006362e:	and    BYTE PTR [rsi-0x596f5978],0x98
   140063635:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140063636:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14006363f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140063640:	enter  0xd0a6,0xa6
   140063644:	fsub   DWORD PTR [rsi-0x59175920]
   14006364a:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006364c:	clc    
   14006364d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006364e:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140063654:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14006365a:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140063660:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140063662:	push   rax
   140063663:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140063664:	pop    rax
   140063665:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140063666:	(bad)  
   140063667:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140063668:	push   0x78a770a7
   14006366d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006366e:	and    BYTE PTR [rdi-0x586f5878],0x98
   140063675:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140063676:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14006367f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140063680:	enter  0xd0a7,0xa7
   140063684:	fsub   DWORD PTR [rdi-0x58175820]
   14006368a:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006368c:	clc    
   14006368d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006368e:	add    BYTE PTR [rax-0x57df57e8],ch
   140063694:	sub    BYTE PTR [rax-0x57c757d0],ch
   14006369a:	rex.W test al,0x58
   14006369d:	test   al,0x68
   14006369f:	test   al,0x78
   1400636a1:	test   al,0x88
   1400636a3:	test   al,0x98
   1400636a5:	test   al,0xa8
   1400636a7:	test   al,0xb8
   1400636a9:	test   al,0xd0
   1400636ab:	test   al,0x30
   1400636ad:	test   eax,0xa940a938
   1400636b2:	test   rax,0xffffffffa958a950
   1400636b8:	(bad)  
   1400636b9:	test   eax,0xa970a968
   1400636be:	js     0x140063669
   1400636c0:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400636c7:	test   eax,0xa9a8a9a0
   1400636cc:	mov    al,0xa9
   1400636ce:	mov    eax,0xc8a9c0a9
   1400636d3:	test   eax,0xa9d8a9d0
   1400636d8:	loopne 0x140063683
   1400636da:	call   0x138b02788
   1400636df:	test   eax,0xaa18aa10
   1400636e4:	and    BYTE PTR [rdx-0x55cf55d8],ch
   1400636ea:	shr    BYTE PTR [rdx-0x54f75500],1
   1400636f0:	(bad)  
   1400636f1:	stos   DWORD PTR es:[rdi],eax
   1400636f2:	mov    BYTE PTR [rbx-0x54275450],ch
   1400636f8:	or     BYTE PTR [rax+riz*1-0x7f53af54],ch
   1400636ff:	lods   al,BYTE PTR ds:[rsi]
   140063700:	test   al,0xac
   140063702:	shr    BYTE PTR [rax+rdi*8+0x50ad28ac],1
   140063709:	lods   eax,DWORD PTR ds:[rsi]
   14006370a:	jo     0x1400636b9
   14006370c:	cwde   
   14006370d:	lods   eax,DWORD PTR ds:[rsi]
   14006370e:	shr    BYTE PTR [rbp-0x51e75210],0x38
   140063715:	scas   al,BYTE PTR es:[rdi]
   140063716:	pop    rax
   140063717:	scas   al,BYTE PTR es:[rdi]
   140063718:	mov    BYTE PTR [rsi-0x51175148],ch
   14006371e:	sbb    BYTE PTR [rdi-0x508f50b8],ch
   140063724:	cwde   
   140063725:	scas   eax,DWORD PTR es:[rdi]
   140063726:	shr    BYTE PTR [rdi+0xaff0],0x0
   14006372d:	mov    al,0x5
   14006372f:	add    BYTE PTR [rax+rax*1+0x0],al
   140063733:	add    BYTE PTR [rax],ah
   140063735:	movabs al,ds:0xa0d0a0a0a078a050
   14006373e:	clc    
   14006373f:	movabs al,ds:0xa198a170a148a120
   140063748:	shl    BYTE PTR [rcx-0x5dff5e28],0x30
   14006374f:	movabs ds:0xa2d0a2a0a278a250,al
   140063758:	add    BYTE PTR [rbx-0x5c975cc0],ah
   14006375e:	and    BYTE PTR [rbx-0x5c275c58],0xf8
   140063765:	movabs ds:0xa450a448a440a418,eax
	...
