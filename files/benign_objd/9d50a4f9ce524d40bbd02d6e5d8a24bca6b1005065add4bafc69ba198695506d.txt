
9d50a4f9ce524d40bbd02d6e5d8a24bca6b1005065add4bafc69ba198695506d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x4525]        # 0x405540
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x4526]        # 0x405550
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x4529]        # 0x405560
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x44ec]        # 0x405530
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x439f]        # 0x4053f0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x44c1]        # 0x405520
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402be0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401ba0
  401081:	mov    rdx,QWORD PTR [rip+0x43f8]        # 0x405480
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x43de]        # 0x405470
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x4444]        # 0x4054e0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x437b]        # 0x405420
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401780
  4010af:	mov    rax,QWORD PTR [rip+0x42ea]        # 0x4053a0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402be0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x959]        # 0x401a80
  401127:	call   0x401a70
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x43a5]        # 0x405510
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x4335]        # 0x4054d0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402bf8
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x435a]        # 0x405520
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x425b]        # 0x405450
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x823e]        # 0x409440
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x4237]        # 0x405460
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x417c]        # 0x4053e0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401d90
  40127d:	lea    rcx,[rip+0x10ac]        # 0x402330
  401284:	call   QWORD PTR [rip+0x81ae]        # 0x409438
  40128a:	mov    rdx,QWORD PTR [rip+0x41af]        # 0x405440
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402240
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402c20
  4012a5:	call   0x401b80
  4012aa:	mov    rax,QWORD PTR [rip+0x413f]        # 0x4053f0
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x4151]        # 0x405410
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402b68
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402b50
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402b68
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402b60
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401750
  4013bb:	mov    rax,QWORD PTR [rip+0x403e]        # 0x405400
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x402cf0
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402bc8
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x4029]        # 0x405460
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402bd0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x403d]        # 0x4054a0
  401463:	mov    rcx,QWORD PTR [rip+0x4026]        # 0x405490
  40146a:	call   0x402bb8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7f4f]        # 0x4093e8
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x4019]        # 0x4054c0
  4014a7:	mov    rcx,QWORD PTR [rip+0x4002]        # 0x4054b0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402bb8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402b88
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x4045]        # 0x405520
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401790
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x4015]        # 0x405520
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401790
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	jmp    QWORD PTR [rip+0x7e72]        # 0x4093a8
  401536:	nop
  401537:	nop
  401538:	jmp    QWORD PTR [rip+0x7e5a]        # 0x409398
  40153e:	nop
  40153f:	nop
  401540:	jmp    QWORD PTR [rip+0x7e4a]        # 0x409390
  401546:	nop
  401547:	nop
  401548:	jmp    QWORD PTR [rip+0x7e3a]        # 0x409388
  40154e:	nop
  40154f:	nop
  401550:	jmp    QWORD PTR [rip+0x7e2a]        # 0x409380
  401556:	nop
  401557:	nop
  401558:	jmp    QWORD PTR [rip+0x7e12]        # 0x409370
  40155e:	nop
  40155f:	nop
  401560:	jmp    QWORD PTR [rip+0x7e02]        # 0x409368
  401566:	nop
  401567:	nop
  401568:	jmp    QWORD PTR [rip+0x7df2]        # 0x409360
  40156e:	nop
  40156f:	nop
  401570:	jmp    QWORD PTR [rip+0x7de2]        # 0x409358
  401576:	nop
  401577:	nop
  401578:	jmp    QWORD PTR [rip+0x7dd2]        # 0x409350
  40157e:	nop
  40157f:	nop
  401580:	jmp    QWORD PTR [rip+0x7dc2]        # 0x409348
  401586:	nop
  401587:	nop
  401588:	jmp    QWORD PTR [rip+0x7db2]        # 0x409340
  40158e:	nop
  40158f:	nop
  401590:	jmp    QWORD PTR [rip+0x7da2]        # 0x409338
  401596:	nop
  401597:	nop
  401598:	jmp    QWORD PTR [rip+0x7d92]        # 0x409330
  40159e:	nop
  40159f:	nop
  4015a0:	jmp    QWORD PTR [rip+0x7d82]        # 0x409328
  4015a6:	nop
  4015a7:	nop
  4015a8:	jmp    QWORD PTR [rip+0x7d72]        # 0x409320
  4015ae:	nop
  4015af:	nop
  4015b0:	jmp    QWORD PTR [rip+0x7d62]        # 0x409318
  4015b6:	nop
  4015b7:	nop
  4015b8:	jmp    QWORD PTR [rip+0x7d52]        # 0x409310
  4015be:	nop
  4015bf:	nop
  4015c0:	jmp    QWORD PTR [rip+0x7d42]        # 0x409308
  4015c6:	nop
  4015c7:	nop
  4015c8:	jmp    QWORD PTR [rip+0x7d32]        # 0x409300
  4015ce:	nop
  4015cf:	nop
  4015d0:	jmp    QWORD PTR [rip+0x7d22]        # 0x4092f8
  4015d6:	nop
  4015d7:	nop
  4015d8:	jmp    QWORD PTR [rip+0x7d12]        # 0x4092f0
  4015de:	nop
  4015df:	nop
  4015e0:	push   rbx
  4015e1:	sub    rsp,0x30
  4015e5:	mov    rbx,rcx
  4015e8:	mov    rcx,QWORD PTR [rip+0x7421]        # 0x408a10
  4015ef:	call   0x401b90
  4015f4:	cmp    rax,0xffffffffffffffff
  4015f8:	mov    QWORD PTR [rsp+0x20],rax
  4015fd:	je     0x401675
  4015ff:	mov    ecx,0x8
  401604:	call   0x402bb0
  401609:	mov    rcx,QWORD PTR [rip+0x7400]        # 0x408a10
  401610:	call   0x401b90
  401615:	mov    rcx,QWORD PTR [rip+0x73fc]        # 0x408a18
  40161c:	mov    QWORD PTR [rsp+0x20],rax
  401621:	call   0x401b90
  401626:	lea    rdx,[rsp+0x20]
  40162b:	lea    r8,[rsp+0x28]
  401630:	mov    rcx,rbx
  401633:	mov    QWORD PTR [rsp+0x28],rax
  401638:	call   0x402c00
  40163d:	mov    rcx,QWORD PTR [rsp+0x20]
  401642:	mov    rbx,rax
  401645:	call   0x401ba0
  40164a:	mov    rcx,QWORD PTR [rsp+0x28]
  40164f:	mov    QWORD PTR [rip+0x73ba],rax        # 0x408a10
  401656:	call   0x401ba0
  40165b:	mov    ecx,0x8
  401660:	mov    QWORD PTR [rip+0x73b1],rax        # 0x408a18
  401667:	call   0x402ba0
  40166c:	mov    rax,rbx
  40166f:	add    rsp,0x30
  401673:	pop    rbx
  401674:	ret    
  401675:	mov    rax,QWORD PTR [rip+0x3db4]        # 0x405430
  40167c:	mov    rcx,rbx
  40167f:	call   QWORD PTR [rax]
  401681:	add    rsp,0x30
  401685:	pop    rbx
  401686:	ret    
  401687:	nop    WORD PTR [rax+rax*1+0x0]
  401690:	sub    rsp,0x28
  401694:	call   0x4015e0
  401699:	test   rax,rax
  40169c:	sete   al
  40169f:	movzx  eax,al
  4016a2:	neg    eax
  4016a4:	add    rsp,0x28
  4016a8:	ret    
  4016a9:	nop
  4016aa:	nop
  4016ab:	nop
  4016ac:	nop
  4016ad:	nop
  4016ae:	nop
  4016af:	nop
  4016b0:	sub    rsp,0x28
  4016b4:	mov    rax,QWORD PTR [rip+0x2955]        # 0x404010
  4016bb:	mov    rax,QWORD PTR [rax]
  4016be:	test   rax,rax
  4016c1:	je     0x4016e0
  4016c3:	call   rax
  4016c5:	mov    rax,QWORD PTR [rip+0x2944]        # 0x404010
  4016cc:	lea    rdx,[rax+0x8]
  4016d0:	mov    rax,QWORD PTR [rax+0x8]
  4016d4:	mov    QWORD PTR [rip+0x2935],rdx        # 0x404010
  4016db:	test   rax,rax
  4016de:	jne    0x4016c3
  4016e0:	add    rsp,0x28
  4016e4:	ret    
  4016e5:	nop
  4016e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016f0:	push   rsi
  4016f1:	push   rbx
  4016f2:	sub    rsp,0x28
  4016f6:	mov    rsi,QWORD PTR [rip+0x3cb3]        # 0x4053b0
  4016fd:	mov    rax,QWORD PTR [rsi]
  401700:	cmp    eax,0xffffffff
  401703:	mov    ebx,eax
  401705:	je     0x401730
  401707:	test   ebx,ebx
  401709:	je     0x40171a
  40170b:	nop    DWORD PTR [rax+rax*1+0x0]
  401710:	mov    eax,ebx
  401712:	call   QWORD PTR [rsi+rax*8]
  401715:	sub    ebx,0x1
  401718:	jne    0x401710
  40171a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4016b0
  401721:	add    rsp,0x28
  401725:	pop    rbx
  401726:	pop    rsi
  401727:	jmp    0x401690
  40172c:	nop    DWORD PTR [rax+0x0]
  401730:	xor    ebx,ebx
  401732:	jmp    0x401736
  401734:	mov    ebx,eax
  401736:	lea    edx,[rbx+0x1]
  401739:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40173e:	mov    rax,rdx
  401741:	jne    0x401734
  401743:	jmp    0x401707
  401745:	nop
  401746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401750:	mov    eax,DWORD PTR [rip+0x68da]        # 0x408030
  401756:	test   eax,eax
  401758:	je     0x401760
  40175a:	repz ret 
  40175c:	nop    DWORD PTR [rax+0x0]
  401760:	mov    DWORD PTR [rip+0x68c6],0x1        # 0x408030
  40176a:	jmp    0x4016f0
  40176c:	nop
  40176d:	nop
  40176e:	nop
  40176f:	nop
  401770:	mov    rax,QWORD PTR [rip+0x7d29]        # 0x4094a0
  401777:	rex.W jmp rax
  40177a:	nop
  40177b:	nop
  40177c:	nop
  40177d:	nop
  40177e:	nop
  40177f:	nop
  401780:	xor    eax,eax
  401782:	ret    
  401783:	nop
  401784:	nop
  401785:	nop
  401786:	nop
  401787:	nop
  401788:	nop
  401789:	nop
  40178a:	nop
  40178b:	nop
  40178c:	nop
  40178d:	nop
  40178e:	nop
  40178f:	nop
  401790:	push   r12
  401792:	push   rbp
  401793:	push   rdi
  401794:	push   rsi
  401795:	push   rbx
  401796:	sub    rsp,0x40
  40179a:	mov    rbx,QWORD PTR [rip+0x28cf]        # 0x404070
  4017a1:	movabs rax,0x2b992ddfa232
  4017ab:	mov    QWORD PTR [rsp+0x20],0x0
  4017b4:	cmp    rbx,rax
  4017b7:	je     0x4017d0
  4017b9:	not    rbx
  4017bc:	mov    QWORD PTR [rip+0x28bd],rbx        # 0x404080
  4017c3:	add    rsp,0x40
  4017c7:	pop    rbx
  4017c8:	pop    rsi
  4017c9:	pop    rdi
  4017ca:	pop    rbp
  4017cb:	pop    r12
  4017cd:	ret    
  4017ce:	xchg   ax,ax
  4017d0:	lea    rcx,[rsp+0x20]
  4017d5:	call   QWORD PTR [rip+0x7c15]        # 0x4093f0
  4017db:	mov    r12,QWORD PTR [rsp+0x20]
  4017e0:	call   QWORD PTR [rip+0x7bea]        # 0x4093d0
  4017e6:	mov    ebp,eax
  4017e8:	call   QWORD PTR [rip+0x7bea]        # 0x4093d8
  4017ee:	mov    edi,eax
  4017f0:	call   QWORD PTR [rip+0x7c02]        # 0x4093f8
  4017f6:	lea    rcx,[rsp+0x30]
  4017fb:	mov    esi,eax
  4017fd:	call   QWORD PTR [rip+0x7c0d]        # 0x409410
  401803:	xor    r12,QWORD PTR [rsp+0x30]
  401808:	mov    edx,edi
  40180a:	movabs rax,0xffffffffffff
  401814:	xor    rbp,r12
  401817:	mov    rdi,rbp
  40181a:	xor    rdi,rdx
  40181d:	mov    edx,esi
  40181f:	xor    rdi,rdx
  401822:	mov    rsi,rdi
  401825:	and    rsi,rax
  401828:	cmp    rsi,rbx
  40182b:	je     0x401850
  40182d:	mov    rax,rsi
  401830:	not    rax
  401833:	mov    QWORD PTR [rip+0x2836],rsi        # 0x404070
  40183a:	mov    QWORD PTR [rip+0x283f],rax        # 0x404080
  401841:	add    rsp,0x40
  401845:	pop    rbx
  401846:	pop    rsi
  401847:	pop    rdi
  401848:	pop    rbp
  401849:	pop    r12
  40184b:	ret    
  40184c:	nop    DWORD PTR [rax+0x0]
  401850:	movabs rax,0xffffd466d2205dcc
  40185a:	movabs rsi,0x2b992ddfa233
  401864:	jmp    0x401833
  401866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401870:	push   rbp
  401871:	push   rsi
  401872:	push   rbx
  401873:	mov    rbp,rsp
  401876:	sub    rsp,0x70
  40187a:	mov    rsi,rcx
  40187d:	lea    rcx,[rip+0x67fc]        # 0x408080
  401884:	call   QWORD PTR [rip+0x7b96]        # 0x409420
  40188a:	mov    rbx,QWORD PTR [rip+0x68e7]        # 0x408178
  401891:	xor    r8d,r8d
  401894:	lea    rdx,[rbp-0x28]
  401898:	mov    rcx,rbx
  40189b:	call   QWORD PTR [rip+0x7b87]        # 0x409428
  4018a1:	test   rax,rax
  4018a4:	mov    r9,rax
  4018a7:	je     0x401950
  4018ad:	lea    rax,[rbp-0x20]
  4018b1:	mov    QWORD PTR [rsp+0x38],0x0
  4018ba:	mov    r8,rbx
  4018bd:	mov    rdx,QWORD PTR [rbp-0x28]
  4018c1:	xor    ecx,ecx
  4018c3:	mov    QWORD PTR [rsp+0x30],rax
  4018c8:	lea    rax,[rbp-0x18]
  4018cc:	mov    QWORD PTR [rsp+0x28],rax
  4018d1:	lea    rax,[rip+0x67a8]        # 0x408080
  4018d8:	mov    QWORD PTR [rsp+0x20],rax
  4018dd:	call   QWORD PTR [rip+0x7b4d]        # 0x409430
  4018e3:	mov    rax,QWORD PTR [rip+0x688e]        # 0x408178
  4018ea:	xor    ecx,ecx
  4018ec:	mov    QWORD PTR [rip+0x680d],rsi        # 0x408100
  4018f3:	mov    DWORD PTR [rip+0x6c83],0xc0000409        # 0x408580
  4018fd:	mov    DWORD PTR [rip+0x6c7d],0x1        # 0x408584
  401907:	mov    QWORD PTR [rip+0x6c82],rax        # 0x408590
  40190e:	mov    rax,QWORD PTR [rip+0x275b]        # 0x404070
  401915:	mov    QWORD PTR [rbp-0x10],rax
  401919:	mov    rax,QWORD PTR [rip+0x2760]        # 0x404080
  401920:	mov    QWORD PTR [rbp-0x8],rax
  401924:	call   QWORD PTR [rip+0x7b0e]        # 0x409438
  40192a:	lea    rcx,[rip+0x37df]        # 0x405110
  401931:	call   QWORD PTR [rip+0x7b21]        # 0x409458
  401937:	call   QWORD PTR [rip+0x7a8b]        # 0x4093c8
  40193d:	mov    edx,0xc0000409
  401942:	mov    rcx,rax
  401945:	call   QWORD PTR [rip+0x7afd]        # 0x409448
  40194b:	call   0x402b98
  401950:	mov    rax,QWORD PTR [rbp+0x18]
  401954:	mov    QWORD PTR [rip+0x681d],rax        # 0x408178
  40195b:	lea    rax,[rbp+0x8]
  40195f:	mov    QWORD PTR [rip+0x67b2],rax        # 0x408118
  401966:	jmp    0x4018e3
  40196b:	nop
  40196c:	nop
  40196d:	nop
  40196e:	nop
  40196f:	nop
  401970:	sub    rsp,0x28
  401974:	test   edx,edx
  401976:	je     0x401990
  401978:	cmp    edx,0x3
  40197b:	je     0x401990
  40197d:	mov    eax,0x1
  401982:	add    rsp,0x28
  401986:	ret    
  401987:	nop    WORD PTR [rax+rax*1+0x0]
  401990:	call   0x402680
  401995:	mov    eax,0x1
  40199a:	add    rsp,0x28
  40199e:	ret    
  40199f:	nop
  4019a0:	push   rsi
  4019a1:	push   rbx
  4019a2:	sub    rsp,0x28
  4019a6:	mov    rax,QWORD PTR [rip+0x39e3]        # 0x405390
  4019ad:	cmp    DWORD PTR [rax],0x2
  4019b0:	je     0x4019b8
  4019b2:	mov    DWORD PTR [rax],0x2
  4019b8:	cmp    edx,0x2
  4019bb:	je     0x4019d0
  4019bd:	cmp    edx,0x1
  4019c0:	je     0x401a02
  4019c2:	mov    eax,0x1
  4019c7:	add    rsp,0x28
  4019cb:	pop    rbx
  4019cc:	pop    rsi
  4019cd:	ret    
  4019ce:	xchg   ax,ax
  4019d0:	lea    rbx,[rip+0x8689]        # 0x40a060
  4019d7:	lea    rsi,[rip+0x8682]        # 0x40a060
  4019de:	cmp    rbx,rsi
  4019e1:	je     0x4019c2
  4019e3:	mov    rax,QWORD PTR [rbx]
  4019e6:	test   rax,rax
  4019e9:	je     0x4019ed
  4019eb:	call   rax
  4019ed:	add    rbx,0x8
  4019f1:	cmp    rbx,rsi
  4019f4:	jne    0x4019e3
  4019f6:	mov    eax,0x1
  4019fb:	add    rsp,0x28
  4019ff:	pop    rbx
  401a00:	pop    rsi
  401a01:	ret    
  401a02:	call   0x402680
  401a07:	jmp    0x4019c2
  401a09:	nop    DWORD PTR [rax+0x0]
  401a10:	xor    eax,eax
  401a12:	ret    
  401a13:	nop
  401a14:	nop
  401a15:	nop
  401a16:	nop
  401a17:	nop
  401a18:	nop
  401a19:	nop
  401a1a:	nop
  401a1b:	nop
  401a1c:	nop
  401a1d:	nop
  401a1e:	nop
  401a1f:	nop
  401a20:	sub    rsp,0x58
  401a24:	mov    rax,QWORD PTR [rip+0x6c35]        # 0x408660
  401a2b:	test   rax,rax
  401a2e:	je     0x401a5c
  401a30:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401a39:	mov    DWORD PTR [rsp+0x20],ecx
  401a3d:	lea    rcx,[rsp+0x20]
  401a42:	mov    QWORD PTR [rsp+0x28],rdx
  401a47:	movsd  QWORD PTR [rsp+0x30],xmm2
  401a4d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401a53:	movsd  QWORD PTR [rsp+0x40],xmm0
  401a59:	call   rax
  401a5b:	nop
  401a5c:	add    rsp,0x58
  401a60:	ret    
  401a61:	nop    DWORD PTR [rax+rax*1+0x0]
  401a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a70:	mov    QWORD PTR [rip+0x6be9],rcx        # 0x408660
  401a77:	jmp    0x402bd8
  401a7c:	nop    DWORD PTR [rax+0x0]
  401a80:	push   rsi
  401a81:	push   rbx
  401a82:	sub    rsp,0x78
  401a86:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401a8b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401a90:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401a96:	cmp    DWORD PTR [rcx],0x6
  401a99:	ja     0x401b70
  401a9f:	mov    edx,DWORD PTR [rcx]
  401aa1:	lea    rax,[rip+0x37ac]        # 0x405254
  401aa8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401aac:	add    rax,rdx
  401aaf:	jmp    rax
  401ab1:	lea    rbx,[rip+0x3678]        # 0x405130
  401ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ac0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401ac6:	mov    rsi,QWORD PTR [rcx+0x8]
  401aca:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401acf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401ad4:	call   0x402bf0
  401ad9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401ae0:	lea    rcx,[rax+0x60]
  401ae4:	lea    rdx,[rip+0x373d]        # 0x405228
  401aeb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401af1:	mov    r9,rsi
  401af4:	mov    r8,rbx
  401af7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401afd:	call   0x402b80
  401b02:	nop
  401b03:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401b08:	xor    eax,eax
  401b0a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401b0f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401b15:	add    rsp,0x78
  401b19:	pop    rbx
  401b1a:	pop    rsi
  401b1b:	ret    
  401b1c:	nop    DWORD PTR [rax+0x0]
  401b20:	lea    rbx,[rip+0x3628]        # 0x40514f
  401b27:	jmp    0x401ac0
  401b29:	nop    DWORD PTR [rax+0x0]
  401b30:	lea    rbx,[rip+0x3639]        # 0x405170
  401b37:	jmp    0x401ac0
  401b39:	nop    DWORD PTR [rax+0x0]
  401b40:	lea    rbx,[rip+0x3699]        # 0x4051e0
  401b47:	jmp    0x401ac0
  401b4c:	nop    DWORD PTR [rax+0x0]
  401b50:	lea    rbx,[rip+0x3661]        # 0x4051b8
  401b57:	jmp    0x401ac0
  401b5c:	nop    DWORD PTR [rax+0x0]
  401b60:	lea    rbx,[rip+0x3629]        # 0x405190
  401b67:	jmp    0x401ac0
  401b6c:	nop    DWORD PTR [rax+0x0]
  401b70:	lea    rbx,[rip+0x369f]        # 0x405216
  401b77:	jmp    0x401ac0
  401b7c:	nop
  401b7d:	nop
  401b7e:	nop
  401b7f:	nop
  401b80:	fninit 
  401b82:	ret    
  401b83:	nop
  401b84:	nop
  401b85:	nop
  401b86:	nop
  401b87:	nop
  401b88:	nop
  401b89:	nop
  401b8a:	nop
  401b8b:	nop
  401b8c:	nop
  401b8d:	nop
  401b8e:	nop
  401b8f:	nop
  401b90:	mov    rax,rcx
  401b93:	ret    
  401b94:	xchg   ax,ax
  401b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ba0:	mov    rax,rcx
  401ba3:	ret    
  401ba4:	nop
  401ba5:	nop
  401ba6:	nop
  401ba7:	nop
  401ba8:	nop
  401ba9:	nop
  401baa:	nop
  401bab:	nop
  401bac:	nop
  401bad:	nop
  401bae:	nop
  401baf:	nop
  401bb0:	push   rsi
  401bb1:	push   rbx
  401bb2:	sub    rsp,0x38
  401bb6:	lea    rax,[rsp+0x58]
  401bbb:	mov    rbx,rcx
  401bbe:	mov    QWORD PTR [rsp+0x58],rdx
  401bc3:	mov    QWORD PTR [rsp+0x60],r8
  401bc8:	mov    QWORD PTR [rsp+0x68],r9
  401bcd:	mov    QWORD PTR [rsp+0x28],rax
  401bd2:	call   0x402bf0
  401bd7:	lea    rcx,[rip+0x3692]        # 0x405270
  401bde:	lea    r9,[rax+0x60]
  401be2:	mov    r8d,0x1b
  401be8:	mov    edx,0x1
  401bed:	call   0x402b70
  401bf2:	mov    rsi,QWORD PTR [rsp+0x28]
  401bf7:	call   0x402bf0
  401bfc:	lea    rcx,[rax+0x60]
  401c00:	mov    rdx,rbx
  401c03:	mov    r8,rsi
  401c06:	call   0x402b40
  401c0b:	call   0x402b98
  401c10:	nop
  401c11:	nop    DWORD PTR [rax+rax*1+0x0]
  401c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c20:	push   r13
  401c22:	push   r12
  401c24:	push   rbp
  401c25:	push   rdi
  401c26:	push   rsi
  401c27:	push   rbx
  401c28:	sub    rsp,0x58
  401c2c:	movsxd rbp,DWORD PTR [rip+0x6a51]        # 0x408684
  401c33:	mov    rbx,rcx
  401c36:	mov    rsi,rdx
  401c39:	mov    rdi,r8
  401c3c:	test   ebp,ebp
  401c3e:	jle    0x401d3a
  401c44:	mov    rax,QWORD PTR [rip+0x6a3d]        # 0x408688
  401c4b:	xor    r9d,r9d
  401c4e:	add    rax,0x8
  401c52:	mov    r10,QWORD PTR [rax]
  401c55:	cmp    rbx,r10
  401c58:	jb     0x401c6e
  401c5a:	mov    rdx,QWORD PTR [rax+0x8]
  401c5e:	mov    r11d,DWORD PTR [rdx+0x8]
  401c62:	add    r10,r11
  401c65:	cmp    rbx,r10
  401c68:	jb     0x401d20
  401c6e:	add    r9d,0x1
  401c72:	add    rax,0x18
  401c76:	cmp    r9d,ebp
  401c79:	jne    0x401c52
  401c7b:	mov    rcx,rbx
  401c7e:	call   0x402890
  401c83:	test   rax,rax
  401c86:	mov    r12,rax
  401c89:	je     0x401d72
  401c8f:	lea    rbp,[rbp+rbp*2+0x0]
  401c94:	shl    rbp,0x3
  401c98:	mov    r13,rbp
  401c9b:	add    r13,QWORD PTR [rip+0x69e6]        # 0x408688
  401ca2:	mov    QWORD PTR [r13+0x10],rax
  401ca6:	mov    DWORD PTR [r13+0x0],0x0
  401cae:	call   0x4029b0
  401cb3:	mov    edx,DWORD PTR [r12+0xc]
  401cb8:	mov    r8d,0x30
  401cbe:	add    rax,rdx
  401cc1:	lea    rdx,[rsp+0x20]
  401cc6:	mov    QWORD PTR [r13+0x8],rax
  401cca:	mov    rax,QWORD PTR [rip+0x69b7]        # 0x408688
  401cd1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401cd6:	call   QWORD PTR [rip+0x778c]        # 0x409468
  401cdc:	test   rax,rax
  401cdf:	je     0x401d55
  401ce1:	mov    eax,DWORD PTR [rsp+0x44]
  401ce5:	lea    edx,[rax-0x4]
  401ce8:	and    edx,0xfffffffb
  401ceb:	je     0x401d19
  401ced:	sub    eax,0x40
  401cf0:	and    eax,0xffffffbf
  401cf3:	je     0x401d19
  401cf5:	mov    r9,rbp
  401cf8:	add    r9,QWORD PTR [rip+0x6989]        # 0x408688
  401cff:	mov    r8d,0x40
  401d05:	mov    rdx,QWORD PTR [rsp+0x38]
  401d0a:	mov    rcx,QWORD PTR [rsp+0x20]
  401d0f:	call   QWORD PTR [rip+0x774b]        # 0x409460
  401d15:	test   eax,eax
  401d17:	je     0x401d41
  401d19:	add    DWORD PTR [rip+0x6964],0x1        # 0x408684
  401d20:	mov    r8,rdi
  401d23:	mov    rdx,rsi
  401d26:	mov    rcx,rbx
  401d29:	add    rsp,0x58
  401d2d:	pop    rbx
  401d2e:	pop    rsi
  401d2f:	pop    rdi
  401d30:	pop    rbp
  401d31:	pop    r12
  401d33:	pop    r13
  401d35:	jmp    0x402b60
  401d3a:	xor    ebp,ebp
  401d3c:	jmp    0x401c7b
  401d41:	call   QWORD PTR [rip+0x7699]        # 0x4093e0
  401d47:	lea    rcx,[rip+0x359a]        # 0x4052e8
  401d4e:	mov    edx,eax
  401d50:	call   0x401bb0
  401d55:	mov    rax,QWORD PTR [rip+0x692c]        # 0x408688
  401d5c:	mov    edx,DWORD PTR [r12+0x8]
  401d61:	lea    rcx,[rip+0x3548]        # 0x4052b0
  401d68:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401d6d:	call   0x401bb0
  401d72:	lea    rcx,[rip+0x3517]        # 0x405290
  401d79:	mov    rdx,rbx
  401d7c:	call   0x401bb0
  401d81:	nop
  401d82:	nop    DWORD PTR [rax+0x0]
  401d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d90:	push   rbp
  401d91:	push   r14
  401d93:	push   r13
  401d95:	push   r12
  401d97:	push   rdi
  401d98:	push   rsi
  401d99:	push   rbx
  401d9a:	mov    rbp,rsp
  401d9d:	sub    rsp,0x60
  401da1:	mov    ebx,DWORD PTR [rip+0x68d9]        # 0x408680
  401da7:	test   ebx,ebx
  401da9:	je     0x401dc0
  401dab:	mov    rsp,rbp
  401dae:	pop    rbx
  401daf:	pop    rsi
  401db0:	pop    rdi
  401db1:	pop    r12
  401db3:	pop    r13
  401db5:	pop    r14
  401db7:	pop    rbp
  401db8:	ret    
  401db9:	nop    DWORD PTR [rax+0x0]
  401dc0:	mov    DWORD PTR [rip+0x68b6],0x1        # 0x408680
  401dca:	call   0x4028e0
  401dcf:	cdqe   
  401dd1:	lea    rax,[rax+rax*2]
  401dd5:	lea    rax,[rax*8+0x1e]
  401ddd:	and    rax,0xfffffffffffffff0
  401de1:	call   0x402b00
  401de6:	mov    rsi,QWORD PTR [rip+0x35d3]        # 0x4053c0
  401ded:	mov    rbx,QWORD PTR [rip+0x35dc]        # 0x4053d0
  401df4:	sub    rsp,rax
  401df7:	mov    DWORD PTR [rip+0x6883],0x0        # 0x408684
  401e01:	lea    rax,[rsp+0x20]
  401e06:	mov    QWORD PTR [rip+0x687b],rax        # 0x408688
  401e0d:	mov    rax,rsi
  401e10:	sub    rax,rbx
  401e13:	cmp    rax,0x7
  401e17:	jle    0x401dab
  401e19:	cmp    rax,0xb
  401e1d:	jle    0x401e45
  401e1f:	mov    r11d,DWORD PTR [rbx]
  401e22:	test   r11d,r11d
  401e25:	jne    0x401f70
  401e2b:	mov    r10d,DWORD PTR [rbx+0x4]
  401e2f:	test   r10d,r10d
  401e32:	jne    0x401f70
  401e38:	mov    r9d,DWORD PTR [rbx+0x8]
  401e3c:	test   r9d,r9d
  401e3f:	jne    0x401e5c
  401e41:	add    rbx,0xc
  401e45:	mov    r8d,DWORD PTR [rbx]
  401e48:	test   r8d,r8d
  401e4b:	jne    0x401f70
  401e51:	mov    ecx,DWORD PTR [rbx+0x4]
  401e54:	test   ecx,ecx
  401e56:	jne    0x401f70
  401e5c:	mov    edx,DWORD PTR [rbx+0x8]
  401e5f:	cmp    edx,0x1
  401e62:	jne    0x40207c
  401e68:	add    rbx,0xc
  401e6c:	cmp    rbx,rsi
  401e6f:	jae    0x401dab
  401e75:	mov    r12,QWORD PTR [rip+0x3574]        # 0x4053f0
  401e7c:	lea    r13,[rbp-0x30]
  401e80:	movabs r14,0xffffffff00000000
  401e8a:	mov    ecx,DWORD PTR [rbx+0x4]
  401e8d:	mov    eax,DWORD PTR [rbx]
  401e8f:	movzx  edx,BYTE PTR [rbx+0x8]
  401e93:	add    rax,r12
  401e96:	add    rcx,r12
  401e99:	cmp    edx,0x10
  401e9c:	mov    r8,QWORD PTR [rax]
  401e9f:	je     0x401fe6
  401ea5:	jbe    0x401fad
  401eab:	cmp    edx,0x20
  401eae:	je     0x40202f
  401eb4:	cmp    edx,0x40
  401eb7:	jne    0x40201b
  401ebd:	sub    r8,rax
  401ec0:	mov    rdx,r13
  401ec3:	mov    rdi,r13
  401ec6:	mov    rax,r8
  401ec9:	add    rax,QWORD PTR [rcx]
  401ecc:	mov    r8d,0x8
  401ed2:	mov    QWORD PTR [rbp-0x30],rax
  401ed6:	call   0x401c20
  401edb:	add    rbx,0xc
  401edf:	cmp    rbx,rsi
  401ee2:	jb     0x401e8a
  401ee4:	mov    eax,DWORD PTR [rip+0x679a]        # 0x408684
  401eea:	xor    ebx,ebx
  401eec:	xor    esi,esi
  401eee:	test   eax,eax
  401ef0:	jle    0x401dab
  401ef6:	mov    r14,QWORD PTR [rip+0x756b]        # 0x409468
  401efd:	lea    r13,[rbp-0x34]
  401f01:	mov    r12,QWORD PTR [rip+0x7558]        # 0x409460
  401f08:	jmp    0x401f23
  401f0a:	nop    WORD PTR [rax+rax*1+0x0]
  401f10:	add    esi,0x1
  401f13:	add    rbx,0x18
  401f17:	cmp    esi,DWORD PTR [rip+0x6767]        # 0x408684
  401f1d:	jge    0x401dab
  401f23:	mov    rax,rbx
  401f26:	add    rax,QWORD PTR [rip+0x675b]        # 0x408688
  401f2d:	mov    edx,DWORD PTR [rax]
  401f2f:	test   edx,edx
  401f31:	je     0x401f10
  401f33:	mov    rcx,QWORD PTR [rax+0x8]
  401f37:	mov    r8d,0x30
  401f3d:	mov    rdx,rdi
  401f40:	call   r14
  401f43:	test   rax,rax
  401f46:	je     0x40205e
  401f4c:	mov    rax,QWORD PTR [rip+0x6735]        # 0x408688
  401f53:	mov    r9,r13
  401f56:	mov    rdx,QWORD PTR [rbp-0x18]
  401f5a:	mov    rcx,QWORD PTR [rbp-0x30]
  401f5e:	mov    r8d,DWORD PTR [rax+rbx*1]
  401f62:	call   r12
  401f65:	jmp    0x401f10
  401f67:	nop    WORD PTR [rax+rax*1+0x0]
  401f70:	cmp    rbx,rsi
  401f73:	jae    0x401dab
  401f79:	mov    r12,QWORD PTR [rip+0x3470]        # 0x4053f0
  401f80:	lea    rdi,[rbp-0x30]
  401f84:	mov    ecx,DWORD PTR [rbx+0x4]
  401f87:	mov    eax,DWORD PTR [rbx]
  401f89:	mov    r8d,0x4
  401f8f:	mov    rdx,rdi
  401f92:	add    rbx,0x8
  401f96:	add    rcx,r12
  401f99:	add    eax,DWORD PTR [rcx]
  401f9b:	mov    DWORD PTR [rbp-0x30],eax
  401f9e:	call   0x401c20
  401fa3:	cmp    rbx,rsi
  401fa6:	jb     0x401f84
  401fa8:	jmp    0x401ee4
  401fad:	cmp    edx,0x8
  401fb0:	jne    0x40201b
  401fb2:	movzx  edx,BYTE PTR [rcx]
  401fb5:	mov    rdi,r13
  401fb8:	mov    r10,rdx
  401fbb:	or     r10,0xffffffffffffff00
  401fc2:	test   dl,dl
  401fc4:	cmovs  rdx,r10
  401fc8:	sub    rdx,rax
  401fcb:	lea    rax,[r8+rdx*1]
  401fcf:	mov    r8d,0x1
  401fd5:	mov    rdx,r13
  401fd8:	mov    QWORD PTR [rbp-0x30],rax
  401fdc:	call   0x401c20
  401fe1:	jmp    0x401edb
  401fe6:	movzx  edx,WORD PTR [rcx]
  401fe9:	mov    rdi,r13
  401fec:	mov    r10,rdx
  401fef:	or     r10,0xffffffffffff0000
  401ff6:	test   dx,dx
  401ff9:	cmovs  rdx,r10
  401ffd:	sub    rdx,rax
  402000:	lea    rax,[r8+rdx*1]
  402004:	mov    r8d,0x2
  40200a:	mov    rdx,r13
  40200d:	mov    QWORD PTR [rbp-0x30],rax
  402011:	call   0x401c20
  402016:	jmp    0x401edb
  40201b:	lea    rcx,[rip+0x3326]        # 0x405348
  402022:	mov    QWORD PTR [rbp-0x30],0x0
  40202a:	call   0x401bb0
  40202f:	mov    edx,DWORD PTR [rcx]
  402031:	mov    rdi,r13
  402034:	mov    r10,rdx
  402037:	or     r10,r14
  40203a:	test   edx,edx
  40203c:	cmovs  rdx,r10
  402040:	sub    rdx,rax
  402043:	lea    rax,[r8+rdx*1]
  402047:	mov    r8d,0x4
  40204d:	mov    rdx,r13
  402050:	mov    QWORD PTR [rbp-0x30],rax
  402054:	call   0x401c20
  402059:	jmp    0x401edb
  40205e:	add    rbx,QWORD PTR [rip+0x6623]        # 0x408688
  402065:	lea    rcx,[rip+0x3244]        # 0x4052b0
  40206c:	mov    rax,QWORD PTR [rbx+0x10]
  402070:	mov    r8,QWORD PTR [rbx+0x8]
  402074:	mov    edx,DWORD PTR [rax+0x8]
  402077:	call   0x401bb0
  40207c:	lea    rcx,[rip+0x328d]        # 0x405310
  402083:	call   0x401bb0
  402088:	nop
  402089:	nop
  40208a:	nop
  40208b:	nop
  40208c:	nop
  40208d:	nop
  40208e:	nop
  40208f:	nop
  402090:	sub    rsp,0x28
  402094:	mov    eax,DWORD PTR [rcx]
  402096:	cmp    eax,0xc0000091
  40209b:	ja     0x402100
  40209d:	cmp    eax,0xc000008d
  4020a2:	jae    0x40211f
  4020a4:	cmp    eax,0xc0000008
  4020a9:	je     0x4021c0
  4020af:	ja     0x402190
  4020b5:	cmp    eax,0x80000002
  4020ba:	je     0x4021c0
  4020c0:	cmp    eax,0xc0000005
  4020c5:	jne    0x40219e
  4020cb:	xor    edx,edx
  4020cd:	mov    ecx,0xb
  4020d2:	call   0x402b58
  4020d7:	cmp    rax,0x1
  4020db:	je     0x402220
  4020e1:	test   rax,rax
  4020e4:	je     0x402200
  4020ea:	mov    ecx,0xb
  4020ef:	call   rax
  4020f1:	xor    eax,eax
  4020f3:	add    rsp,0x28
  4020f7:	ret    
  4020f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402100:	cmp    eax,0xc0000094
  402105:	je     0x4021d0
  40210b:	ja     0x402150
  40210d:	cmp    eax,0xc0000092
  402112:	je     0x4021c0
  402118:	cmp    eax,0xc0000093
  40211d:	jne    0x40219e
  40211f:	xor    edx,edx
  402121:	mov    ecx,0x8
  402126:	call   0x402b58
  40212b:	cmp    rax,0x1
  40212f:	mov    rdx,rax
  402132:	je     0x4021a8
  402134:	test   rdx,rdx
  402137:	mov    eax,0x1
  40213c:	je     0x4020f3
  40213e:	mov    ecx,0x8
  402143:	call   rdx
  402145:	xor    eax,eax
  402147:	add    rsp,0x28
  40214b:	ret    
  40214c:	nop    DWORD PTR [rax+0x0]
  402150:	cmp    eax,0xc0000095
  402155:	je     0x4021c0
  402157:	cmp    eax,0xc0000096
  40215c:	jne    0x40219e
  40215e:	xor    edx,edx
  402160:	mov    ecx,0x4
  402165:	call   0x402b58
  40216a:	cmp    rax,0x1
  40216e:	je     0x40220a
  402174:	test   rax,rax
  402177:	je     0x402200
  40217d:	mov    ecx,0x4
  402182:	call   rax
  402184:	xor    eax,eax
  402186:	jmp    0x4020f3
  40218b:	nop    DWORD PTR [rax+rax*1+0x0]
  402190:	cmp    eax,0xc000001d
  402195:	je     0x40215e
  402197:	cmp    eax,0xc000008c
  40219c:	je     0x4021c0
  40219e:	mov    eax,0x1
  4021a3:	add    rsp,0x28
  4021a7:	ret    
  4021a8:	mov    edx,0x1
  4021ad:	mov    ecx,0x8
  4021b2:	call   0x402b58
  4021b7:	call   0x401b80
  4021bc:	nop    DWORD PTR [rax+0x0]
  4021c0:	xor    eax,eax
  4021c2:	add    rsp,0x28
  4021c6:	ret    
  4021c7:	nop    WORD PTR [rax+rax*1+0x0]
  4021d0:	xor    edx,edx
  4021d2:	mov    ecx,0x8
  4021d7:	call   0x402b58
  4021dc:	cmp    rax,0x1
  4021e0:	mov    rdx,rax
  4021e3:	jne    0x402134
  4021e9:	mov    edx,0x1
  4021ee:	mov    ecx,0x8
  4021f3:	call   0x402b58
  4021f8:	xor    eax,eax
  4021fa:	jmp    0x4020f3
  4021ff:	nop
  402200:	mov    eax,0x4
  402205:	add    rsp,0x28
  402209:	ret    
  40220a:	mov    edx,0x1
  40220f:	mov    ecx,0x4
  402214:	call   0x402b58
  402219:	xor    eax,eax
  40221b:	jmp    0x4020f3
  402220:	mov    edx,0x1
  402225:	mov    ecx,0xb
  40222a:	call   0x402b58
  40222f:	xor    eax,eax
  402231:	jmp    0x4020f3
  402236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402240:	push   r12
  402242:	push   rbp
  402243:	push   rdi
  402244:	push   rsi
  402245:	push   rbx
  402246:	sub    rsp,0x20
  40224a:	call   0x4029b0
  40224f:	mov    rbp,rax
  402252:	mov    eax,DWORD PTR [rip+0x6470]        # 0x4086c8
  402258:	test   eax,eax
  40225a:	jne    0x402281
  40225c:	test   rbp,rbp
  40225f:	je     0x402281
  402261:	lea    rcx,[rip+0x3118]        # 0x405380
  402268:	mov    DWORD PTR [rip+0x6456],0x1        # 0x4086c8
  402272:	call   0x4027f0
  402277:	test   rax,rax
  40227a:	je     0x402290
  40227c:	mov    eax,0x1
  402281:	add    rsp,0x20
  402285:	pop    rbx
  402286:	pop    rsi
  402287:	pop    rdi
  402288:	pop    rbp
  402289:	pop    r12
  40228b:	ret    
  40228c:	nop    DWORD PTR [rax+0x0]
  402290:	lea    rbx,[rip+0x6569]        # 0x408800
  402297:	mov    ecx,0x30
  40229c:	lea    rdx,[rip+0x645d]        # 0x408700
  4022a3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402090
  4022aa:	xor    esi,esi
  4022ac:	mov    rdi,rbx
  4022af:	rep stos QWORD PTR es:[rdi],rax
  4022b2:	mov    rdi,rdx
  4022b5:	sub    r12,rbp
  4022b8:	mov    cl,0x20
  4022ba:	rep stos QWORD PTR es:[rdi],rax
  4022bd:	mov    rdi,rdx
  4022c0:	jmp    0x4022f0
  4022c2:	mov    BYTE PTR [rdi],0x9
  4022c5:	mov    DWORD PTR [rdi+0x4],r12d
  4022c9:	add    rsi,0x1
  4022cd:	mov    edx,DWORD PTR [rax+0xc]
  4022d0:	add    rbx,0xc
  4022d4:	mov    DWORD PTR [rbx-0xc],edx
  4022d7:	add    edx,DWORD PTR [rax+0x8]
  4022da:	mov    rax,rdi
  4022dd:	sub    rax,rbp
  4022e0:	add    rdi,0x8
  4022e4:	mov    DWORD PTR [rbx-0x4],eax
  4022e7:	mov    DWORD PTR [rbx-0x8],edx
  4022ea:	cmp    rsi,0x20
  4022ee:	je     0x402325
  4022f0:	mov    rcx,rsi
  4022f3:	call   0x402920
  4022f8:	test   rax,rax
  4022fb:	jne    0x4022c2
  4022fd:	test   rsi,rsi
  402300:	je     0x40227c
  402306:	mov    edx,esi
  402308:	nop    DWORD PTR [rax+rax*1+0x0]
  402310:	mov    r8,rbp
  402313:	lea    rcx,[rip+0x64e6]        # 0x408800
  40231a:	call   QWORD PTR [rip+0x70f8]        # 0x409418
  402320:	jmp    0x40227c
  402325:	mov    edx,0x20
  40232a:	jmp    0x402310
  40232c:	nop    DWORD PTR [rax+0x0]
  402330:	push   rbx
  402331:	sub    rsp,0x20
  402335:	mov    rdx,QWORD PTR [rcx]
  402338:	mov    eax,DWORD PTR [rdx]
  40233a:	mov    r8d,eax
  40233d:	and    r8d,0x20ffffff
  402344:	cmp    r8d,0x20474343
  40234b:	je     0x402450
  402351:	cmp    eax,0xc0000091
  402356:	mov    rbx,rcx
  402359:	ja     0x4023e0
  40235f:	cmp    eax,0xc000008d
  402364:	jae    0x4023f7
  40236a:	cmp    eax,0xc0000008
  40236f:	je     0x4023a3
  402371:	ja     0x4023b0
  402373:	cmp    eax,0x80000002
  402378:	je     0x4023a3
  40237a:	cmp    eax,0xc0000005
  40237f:	jne    0x4023c2
  402381:	xor    edx,edx
  402383:	mov    ecx,0xb
  402388:	call   0x402b58
  40238d:	cmp    rax,0x1
  402391:	je     0x4024c0
  402397:	test   rax,rax
  40239a:	je     0x4023c2
  40239c:	mov    ecx,0xb
  4023a1:	call   rax
  4023a3:	mov    eax,0xffffffff
  4023a8:	add    rsp,0x20
  4023ac:	pop    rbx
  4023ad:	ret    
  4023ae:	xchg   ax,ax
  4023b0:	cmp    eax,0xc000001d
  4023b5:	je     0x402476
  4023bb:	cmp    eax,0xc000008c
  4023c0:	je     0x4023a3
  4023c2:	mov    rax,QWORD PTR [rip+0x62f7]        # 0x4086c0
  4023c9:	test   rax,rax
  4023cc:	je     0x4023a8
  4023ce:	mov    rcx,rbx
  4023d1:	add    rsp,0x20
  4023d5:	pop    rbx
  4023d6:	rex.W jmp rax
  4023d9:	nop    DWORD PTR [rax+0x0]
  4023e0:	cmp    eax,0xc0000094
  4023e5:	je     0x402422
  4023e7:	ja     0x402460
  4023e9:	cmp    eax,0xc0000092
  4023ee:	je     0x4023a3
  4023f0:	cmp    eax,0xc0000093
  4023f5:	jne    0x4023c2
  4023f7:	xor    edx,edx
  4023f9:	mov    ecx,0x8
  4023fe:	call   0x402b58
  402403:	cmp    rax,0x1
  402407:	jne    0x402434
  402409:	mov    edx,0x1
  40240e:	mov    ecx,0x8
  402413:	call   0x402b58
  402418:	call   0x401b80
  40241d:	jmp    0x4023a3
  402422:	xor    edx,edx
  402424:	mov    ecx,0x8
  402429:	call   0x402b58
  40242e:	cmp    rax,0x1
  402432:	je     0x4024a2
  402434:	test   rax,rax
  402437:	je     0x4023c2
  402439:	mov    ecx,0x8
  40243e:	call   rax
  402440:	mov    eax,0xffffffff
  402445:	jmp    0x4023a8
  40244a:	nop    WORD PTR [rax+rax*1+0x0]
  402450:	test   BYTE PTR [rdx+0x4],0x1
  402454:	jne    0x402351
  40245a:	jmp    0x4023a3
  40245f:	nop
  402460:	cmp    eax,0xc0000095
  402465:	je     0x4023a3
  40246b:	cmp    eax,0xc0000096
  402470:	jne    0x4023c2
  402476:	xor    edx,edx
  402478:	mov    ecx,0x4
  40247d:	call   0x402b58
  402482:	cmp    rax,0x1
  402486:	je     0x4024d4
  402488:	test   rax,rax
  40248b:	je     0x4023c2
  402491:	mov    ecx,0x4
  402496:	call   rax
  402498:	mov    eax,0xffffffff
  40249d:	jmp    0x4023a8
  4024a2:	mov    edx,0x1
  4024a7:	mov    ecx,0x8
  4024ac:	call   0x402b58
  4024b1:	jmp    0x4023a3
  4024b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024c0:	mov    edx,0x1
  4024c5:	mov    ecx,0xb
  4024ca:	call   0x402b58
  4024cf:	jmp    0x4023a3
  4024d4:	mov    edx,0x1
  4024d9:	mov    ecx,0x4
  4024de:	call   0x402b58
  4024e3:	jmp    0x4023a3
  4024e8:	nop
  4024e9:	nop
  4024ea:	nop
  4024eb:	nop
  4024ec:	nop
  4024ed:	nop
  4024ee:	nop
  4024ef:	nop
  4024f0:	push   rbp
  4024f1:	push   rdi
  4024f2:	push   rsi
  4024f3:	push   rbx
  4024f4:	sub    rsp,0x28
  4024f8:	lea    rcx,[rip+0x64a1]        # 0x4089a0
  4024ff:	call   QWORD PTR [rip+0x6ebb]        # 0x4093c0
  402505:	mov    rbx,QWORD PTR [rip+0x6474]        # 0x408980
  40250c:	test   rbx,rbx
  40250f:	je     0x402544
  402511:	mov    rbp,QWORD PTR [rip+0x6f38]        # 0x409450
  402518:	mov    rdi,QWORD PTR [rip+0x6ec1]        # 0x4093e0
  40251f:	nop
  402520:	mov    ecx,DWORD PTR [rbx]
  402522:	call   rbp
  402524:	mov    rsi,rax
  402527:	call   rdi
  402529:	test   eax,eax
  40252b:	jne    0x40253b
  40252d:	test   rsi,rsi
  402530:	je     0x40253b
  402532:	mov    rax,QWORD PTR [rbx+0x8]
  402536:	mov    rcx,rsi
  402539:	call   rax
  40253b:	mov    rbx,QWORD PTR [rbx+0x10]
  40253f:	test   rbx,rbx
  402542:	jne    0x402520
  402544:	mov    rax,QWORD PTR [rip+0x6ebd]        # 0x409408
  40254b:	lea    rcx,[rip+0x644e]        # 0x4089a0
  402552:	add    rsp,0x28
  402556:	pop    rbx
  402557:	pop    rsi
  402558:	pop    rdi
  402559:	pop    rbp
  40255a:	rex.W jmp rax
  40255d:	nop    DWORD PTR [rax]
  402560:	push   rdi
  402561:	push   rsi
  402562:	push   rbx
  402563:	sub    rsp,0x20
  402567:	mov    eax,DWORD PTR [rip+0x641b]        # 0x408988
  40256d:	test   eax,eax
  40256f:	jne    0x402580
  402571:	add    rsp,0x20
  402575:	pop    rbx
  402576:	pop    rsi
  402577:	pop    rdi
  402578:	ret    
  402579:	nop    DWORD PTR [rax+0x0]
  402580:	mov    rsi,rdx
  402583:	mov    edi,ecx
  402585:	mov    edx,0x18
  40258a:	mov    ecx,0x1
  40258f:	call   0x402b90
  402594:	test   rax,rax
  402597:	mov    rbx,rax
  40259a:	je     0x4025d8
  40259c:	mov    DWORD PTR [rax],edi
  40259e:	mov    QWORD PTR [rax+0x8],rsi
  4025a2:	lea    rcx,[rip+0x63f7]        # 0x4089a0
  4025a9:	call   QWORD PTR [rip+0x6e11]        # 0x4093c0
  4025af:	mov    rax,QWORD PTR [rip+0x63ca]        # 0x408980
  4025b6:	lea    rcx,[rip+0x63e3]        # 0x4089a0
  4025bd:	mov    QWORD PTR [rip+0x63bc],rbx        # 0x408980
  4025c4:	mov    QWORD PTR [rbx+0x10],rax
  4025c8:	call   QWORD PTR [rip+0x6e3a]        # 0x409408
  4025ce:	xor    eax,eax
  4025d0:	add    rsp,0x20
  4025d4:	pop    rbx
  4025d5:	pop    rsi
  4025d6:	pop    rdi
  4025d7:	ret    
  4025d8:	mov    eax,0xffffffff
  4025dd:	jmp    0x402571
  4025df:	nop
  4025e0:	push   rbx
  4025e1:	sub    rsp,0x20
  4025e5:	mov    eax,DWORD PTR [rip+0x639d]        # 0x408988
  4025eb:	test   eax,eax
  4025ed:	jne    0x402600
  4025ef:	xor    eax,eax
  4025f1:	add    rsp,0x20
  4025f5:	pop    rbx
  4025f6:	ret    
  4025f7:	nop    WORD PTR [rax+rax*1+0x0]
  402600:	mov    ebx,ecx
  402602:	lea    rcx,[rip+0x6397]        # 0x4089a0
  402609:	call   QWORD PTR [rip+0x6db1]        # 0x4093c0
  40260f:	mov    rdx,QWORD PTR [rip+0x636a]        # 0x408980
  402616:	test   rdx,rdx
  402619:	je     0x402637
  40261b:	mov    eax,DWORD PTR [rdx]
  40261d:	cmp    eax,ebx
  40261f:	jne    0x40262e
  402621:	jmp    0x40266f
  402623:	mov    r8d,DWORD PTR [rax]
  402626:	cmp    r8d,ebx
  402629:	je     0x402650
  40262b:	mov    rdx,rax
  40262e:	mov    rax,QWORD PTR [rdx+0x10]
  402632:	test   rax,rax
  402635:	jne    0x402623
  402637:	lea    rcx,[rip+0x6362]        # 0x4089a0
  40263e:	call   QWORD PTR [rip+0x6dc4]        # 0x409408
  402644:	xor    eax,eax
  402646:	add    rsp,0x20
  40264a:	pop    rbx
  40264b:	ret    
  40264c:	nop    DWORD PTR [rax+0x0]
  402650:	mov    rcx,rax
  402653:	mov    rax,QWORD PTR [rax+0x10]
  402657:	mov    QWORD PTR [rdx+0x10],rax
  40265b:	call   0x402b78
  402660:	lea    rcx,[rip+0x6339]        # 0x4089a0
  402667:	call   QWORD PTR [rip+0x6d9b]        # 0x409408
  40266d:	jmp    0x402644
  40266f:	mov    rax,QWORD PTR [rdx+0x10]
  402673:	mov    rcx,rdx
  402676:	mov    QWORD PTR [rip+0x6303],rax        # 0x408980
  40267d:	jmp    0x40265b
  40267f:	nop
  402680:	push   rbx
  402681:	sub    rsp,0x20
  402685:	cmp    edx,0x1
  402688:	je     0x402720
  40268e:	jb     0x4026c0
  402690:	cmp    edx,0x2
  402693:	je     0x4026b0
  402695:	cmp    edx,0x3
  402698:	jne    0x4026b5
  40269a:	mov    eax,DWORD PTR [rip+0x62e8]        # 0x408988
  4026a0:	test   eax,eax
  4026a2:	je     0x4026b5
  4026a4:	call   0x4024f0
  4026a9:	jmp    0x4026b5
  4026ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4026b0:	call   0x401b80
  4026b5:	mov    eax,0x1
  4026ba:	add    rsp,0x20
  4026be:	pop    rbx
  4026bf:	ret    
  4026c0:	mov    eax,DWORD PTR [rip+0x62c2]        # 0x408988
  4026c6:	test   eax,eax
  4026c8:	jne    0x402750
  4026ce:	mov    eax,DWORD PTR [rip+0x62b4]        # 0x408988
  4026d4:	cmp    eax,0x1
  4026d7:	jne    0x4026b5
  4026d9:	mov    rcx,QWORD PTR [rip+0x62a0]        # 0x408980
  4026e0:	test   rcx,rcx
  4026e3:	je     0x4026f6
  4026e5:	mov    rbx,QWORD PTR [rcx+0x10]
  4026e9:	call   0x402b78
  4026ee:	test   rbx,rbx
  4026f1:	mov    rcx,rbx
  4026f4:	jne    0x4026e5
  4026f6:	lea    rcx,[rip+0x62a3]        # 0x4089a0
  4026fd:	mov    QWORD PTR [rip+0x6278],0x0        # 0x408980
  402708:	mov    DWORD PTR [rip+0x6276],0x0        # 0x408988
  402712:	call   QWORD PTR [rip+0x6ca0]        # 0x4093b8
  402718:	jmp    0x4026b5
  40271a:	nop    WORD PTR [rax+rax*1+0x0]
  402720:	mov    eax,DWORD PTR [rip+0x6262]        # 0x408988
  402726:	test   eax,eax
  402728:	je     0x402740
  40272a:	mov    eax,0x1
  40272f:	mov    DWORD PTR [rip+0x624f],0x1        # 0x408988
  402739:	add    rsp,0x20
  40273d:	pop    rbx
  40273e:	ret    
  40273f:	nop
  402740:	lea    rcx,[rip+0x6259]        # 0x4089a0
  402747:	call   QWORD PTR [rip+0x6cb3]        # 0x409400
  40274d:	jmp    0x40272a
  40274f:	nop
  402750:	call   0x4024f0
  402755:	jmp    0x4026ce
  40275a:	nop
  40275b:	nop
  40275c:	nop
  40275d:	nop
  40275e:	nop
  40275f:	nop
  402760:	movsxd rax,DWORD PTR [rcx+0x3c]
  402764:	add    rcx,rax
  402767:	xor    eax,eax
  402769:	cmp    DWORD PTR [rcx],0x4550
  40276f:	je     0x402773
  402771:	repz ret 
  402773:	xor    eax,eax
  402775:	cmp    WORD PTR [rcx+0x18],0x20b
  40277b:	sete   al
  40277e:	ret    
  40277f:	nop
  402780:	cmp    WORD PTR [rcx],0x5a4d
  402785:	je     0x402790
  402787:	xor    eax,eax
  402789:	ret    
  40278a:	nop    WORD PTR [rax+rax*1+0x0]
  402790:	jmp    0x402760
  402792:	nop    DWORD PTR [rax+0x0]
  402796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027a0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4027a4:	add    rcx,rax
  4027a7:	movzx  eax,WORD PTR [rcx+0x14]
  4027ab:	lea    rax,[rcx+rax*1+0x18]
  4027b0:	movzx  ecx,WORD PTR [rcx+0x6]
  4027b4:	test   ecx,ecx
  4027b6:	je     0x4027e1
  4027b8:	sub    ecx,0x1
  4027bb:	lea    rcx,[rcx+rcx*4]
  4027bf:	lea    r9,[rax+rcx*8+0x28]
  4027c4:	mov    r8d,DWORD PTR [rax+0xc]
  4027c8:	cmp    r8,rdx
  4027cb:	mov    rcx,r8
  4027ce:	ja     0x4027d8
  4027d0:	add    ecx,DWORD PTR [rax+0x8]
  4027d3:	cmp    rdx,rcx
  4027d6:	jb     0x4027e3
  4027d8:	add    rax,0x28
  4027dc:	cmp    rax,r9
  4027df:	jne    0x4027c4
  4027e1:	xor    eax,eax
  4027e3:	repz ret 
  4027e5:	nop
  4027e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027f0:	push   rdi
  4027f1:	push   rsi
  4027f2:	push   rbx
  4027f3:	sub    rsp,0x20
  4027f7:	mov    rsi,rcx
  4027fa:	call   0x402b50
  4027ff:	cmp    rax,0x8
  402803:	ja     0x402820
  402805:	mov    rbx,QWORD PTR [rip+0x2be4]        # 0x4053f0
  40280c:	xor    edi,edi
  40280e:	cmp    WORD PTR [rbx],0x5a4d
  402813:	je     0x402830
  402815:	mov    rax,rdi
  402818:	add    rsp,0x20
  40281c:	pop    rbx
  40281d:	pop    rsi
  40281e:	pop    rdi
  40281f:	ret    
  402820:	xor    edi,edi
  402822:	mov    rax,rdi
  402825:	add    rsp,0x20
  402829:	pop    rbx
  40282a:	pop    rsi
  40282b:	pop    rdi
  40282c:	ret    
  40282d:	nop    DWORD PTR [rax]
  402830:	mov    rcx,rbx
  402833:	call   0x402760
  402838:	test   eax,eax
  40283a:	je     0x402815
  40283c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402840:	add    rdx,rbx
  402843:	movzx  eax,WORD PTR [rdx+0x14]
  402847:	lea    rbx,[rdx+rax*1+0x18]
  40284c:	movzx  eax,WORD PTR [rdx+0x6]
  402850:	test   eax,eax
  402852:	je     0x402815
  402854:	sub    eax,0x1
  402857:	lea    rax,[rax+rax*4]
  40285b:	lea    rdi,[rbx+rax*8+0x28]
  402860:	jmp    0x40286b
  402862:	add    rbx,0x28
  402866:	cmp    rbx,rdi
  402869:	je     0x402820
  40286b:	mov    r8d,0x8
  402871:	mov    rdx,rsi
  402874:	mov    rcx,rbx
  402877:	call   0x402b48
  40287c:	test   eax,eax
  40287e:	jne    0x402862
  402880:	mov    rdi,rbx
  402883:	mov    rax,rdi
  402886:	add    rsp,0x20
  40288a:	pop    rbx
  40288b:	pop    rsi
  40288c:	pop    rdi
  40288d:	ret    
  40288e:	xchg   ax,ax
  402890:	push   rsi
  402891:	push   rbx
  402892:	sub    rsp,0x28
  402896:	mov    rbx,QWORD PTR [rip+0x2b53]        # 0x4053f0
  40289d:	cmp    WORD PTR [rbx],0x5a4d
  4028a2:	je     0x4028b0
  4028a4:	xor    eax,eax
  4028a6:	add    rsp,0x28
  4028aa:	pop    rbx
  4028ab:	pop    rsi
  4028ac:	ret    
  4028ad:	nop    DWORD PTR [rax]
  4028b0:	mov    rsi,rcx
  4028b3:	mov    rcx,rbx
  4028b6:	call   0x402760
  4028bb:	test   eax,eax
  4028bd:	je     0x4028a4
  4028bf:	sub    rsi,rbx
  4028c2:	mov    rcx,rbx
  4028c5:	mov    rdx,rsi
  4028c8:	add    rsp,0x28
  4028cc:	pop    rbx
  4028cd:	pop    rsi
  4028ce:	jmp    0x4027a0
  4028d3:	nop    DWORD PTR [rax]
  4028d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028e0:	push   rbx
  4028e1:	sub    rsp,0x20
  4028e5:	mov    rbx,QWORD PTR [rip+0x2b04]        # 0x4053f0
  4028ec:	xor    eax,eax
  4028ee:	cmp    WORD PTR [rbx],0x5a4d
  4028f3:	je     0x402900
  4028f5:	add    rsp,0x20
  4028f9:	pop    rbx
  4028fa:	ret    
  4028fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402900:	mov    rcx,rbx
  402903:	call   0x402760
  402908:	test   eax,eax
  40290a:	je     0x4028f5
  40290c:	movsxd rax,DWORD PTR [rbx+0x3c]
  402910:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402915:	add    rsp,0x20
  402919:	pop    rbx
  40291a:	ret    
  40291b:	nop    DWORD PTR [rax+rax*1+0x0]
  402920:	push   rdi
  402921:	push   rsi
  402922:	push   rbx
  402923:	sub    rsp,0x20
  402927:	mov    rsi,QWORD PTR [rip+0x2ac2]        # 0x4053f0
  40292e:	xor    edi,edi
  402930:	mov    rbx,rcx
  402933:	cmp    WORD PTR [rsi],0x5a4d
  402938:	je     0x402945
  40293a:	mov    rax,rdi
  40293d:	add    rsp,0x20
  402941:	pop    rbx
  402942:	pop    rsi
  402943:	pop    rdi
  402944:	ret    
  402945:	mov    rcx,rsi
  402948:	call   0x402760
  40294d:	test   eax,eax
  40294f:	je     0x40293a
  402951:	movsxd rax,DWORD PTR [rsi+0x3c]
  402955:	add    rsi,rax
  402958:	movzx  eax,WORD PTR [rsi+0x14]
  40295c:	lea    rdx,[rsi+rax*1+0x18]
  402961:	movzx  eax,WORD PTR [rsi+0x6]
  402965:	test   eax,eax
  402967:	je     0x40293a
  402969:	sub    eax,0x1
  40296c:	lea    rax,[rax+rax*4]
  402970:	lea    rax,[rdx+rax*8+0x28]
  402975:	test   BYTE PTR [rdx+0x27],0x20
  402979:	je     0x402984
  40297b:	test   rbx,rbx
  40297e:	je     0x4029a0
  402980:	sub    rbx,0x1
  402984:	add    rdx,0x28
  402988:	cmp    rdx,rax
  40298b:	jne    0x402975
  40298d:	xor    edi,edi
  40298f:	mov    rax,rdi
  402992:	add    rsp,0x20
  402996:	pop    rbx
  402997:	pop    rsi
  402998:	pop    rdi
  402999:	ret    
  40299a:	nop    WORD PTR [rax+rax*1+0x0]
  4029a0:	mov    rdi,rdx
  4029a3:	mov    rax,rdi
  4029a6:	add    rsp,0x20
  4029aa:	pop    rbx
  4029ab:	pop    rsi
  4029ac:	pop    rdi
  4029ad:	ret    
  4029ae:	xchg   ax,ax
  4029b0:	push   rsi
  4029b1:	push   rbx
  4029b2:	sub    rsp,0x28
  4029b6:	mov    rsi,QWORD PTR [rip+0x2a33]        # 0x4053f0
  4029bd:	xor    ebx,ebx
  4029bf:	cmp    WORD PTR [rsi],0x5a4d
  4029c4:	je     0x4029d0
  4029c6:	mov    rax,rbx
  4029c9:	add    rsp,0x28
  4029cd:	pop    rbx
  4029ce:	pop    rsi
  4029cf:	ret    
  4029d0:	mov    rcx,rsi
  4029d3:	call   0x402760
  4029d8:	test   eax,eax
  4029da:	cmovne rbx,rsi
  4029de:	mov    rax,rbx
  4029e1:	add    rsp,0x28
  4029e5:	pop    rbx
  4029e6:	pop    rsi
  4029e7:	ret    
  4029e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029f0:	push   rsi
  4029f1:	push   rbx
  4029f2:	sub    rsp,0x28
  4029f6:	mov    rbx,QWORD PTR [rip+0x29f3]        # 0x4053f0
  4029fd:	xor    eax,eax
  4029ff:	cmp    WORD PTR [rbx],0x5a4d
  402a04:	je     0x402a10
  402a06:	add    rsp,0x28
  402a0a:	pop    rbx
  402a0b:	pop    rsi
  402a0c:	ret    
  402a0d:	nop    DWORD PTR [rax]
  402a10:	mov    rsi,rcx
  402a13:	mov    rcx,rbx
  402a16:	call   0x402760
  402a1b:	test   eax,eax
  402a1d:	je     0x402a06
  402a1f:	sub    rsi,rbx
  402a22:	mov    rcx,rbx
  402a25:	mov    rdx,rsi
  402a28:	call   0x4027a0
  402a2d:	test   rax,rax
  402a30:	je     0x402a41
  402a32:	mov    eax,DWORD PTR [rax+0x24]
  402a35:	not    eax
  402a37:	shr    eax,0x1f
  402a3a:	add    rsp,0x28
  402a3e:	pop    rbx
  402a3f:	pop    rsi
  402a40:	ret    
  402a41:	xor    eax,eax
  402a43:	jmp    0x402a06
  402a45:	nop
  402a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a50:	push   rbp
  402a51:	push   rdi
  402a52:	push   rsi
  402a53:	push   rbx
  402a54:	sub    rsp,0x28
  402a58:	mov    rdi,QWORD PTR [rip+0x2991]        # 0x4053f0
  402a5f:	xor    ebp,ebp
  402a61:	mov    esi,ecx
  402a63:	cmp    WORD PTR [rdi],0x5a4d
  402a68:	je     0x402a80
  402a6a:	mov    rax,rbp
  402a6d:	add    rsp,0x28
  402a71:	pop    rbx
  402a72:	pop    rsi
  402a73:	pop    rdi
  402a74:	pop    rbp
  402a75:	ret    
  402a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a80:	mov    rcx,rdi
  402a83:	call   0x402760
  402a88:	test   eax,eax
  402a8a:	je     0x402a6a
  402a8c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402a90:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402a97:	test   edx,edx
  402a99:	je     0x402a6a
  402a9b:	mov    ebx,edx
  402a9d:	mov    rcx,rdi
  402aa0:	mov    rdx,rbx
  402aa3:	call   0x4027a0
  402aa8:	test   rax,rax
  402aab:	je     0x402a6a
  402aad:	add    rbx,rdi
  402ab0:	mov    rdx,rbx
  402ab3:	jne    0x402ac7
  402ab5:	jmp    0x402a6a
  402ab7:	nop    WORD PTR [rax+rax*1+0x0]
  402ac0:	sub    esi,0x1
  402ac3:	add    rdx,0x14
  402ac7:	mov    ecx,DWORD PTR [rdx+0x4]
  402aca:	test   ecx,ecx
  402acc:	jne    0x402ad5
  402ace:	mov    eax,DWORD PTR [rdx+0xc]
  402ad1:	test   eax,eax
  402ad3:	je     0x402af0
  402ad5:	test   esi,esi
  402ad7:	jg     0x402ac0
  402ad9:	mov    ebp,DWORD PTR [rdx+0xc]
  402adc:	add    rbp,rdi
  402adf:	mov    rax,rbp
  402ae2:	add    rsp,0x28
  402ae6:	pop    rbx
  402ae7:	pop    rsi
  402ae8:	pop    rdi
  402ae9:	pop    rbp
  402aea:	ret    
  402aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	xor    ebp,ebp
  402af2:	mov    rax,rbp
  402af5:	add    rsp,0x28
  402af9:	pop    rbx
  402afa:	pop    rsi
  402afb:	pop    rdi
  402afc:	pop    rbp
  402afd:	ret    
  402afe:	nop
  402aff:	nop
  402b00:	push   rcx
  402b01:	push   rax
  402b02:	cmp    rax,0x1000
  402b08:	lea    rcx,[rsp+0x18]
  402b0d:	jb     0x402b28
  402b0f:	sub    rcx,0x1000
  402b16:	or     QWORD PTR [rcx],0x0
  402b1a:	sub    rax,0x1000
  402b20:	cmp    rax,0x1000
  402b26:	ja     0x402b0f
  402b28:	sub    rcx,rax
  402b2b:	or     QWORD PTR [rcx],0x0
  402b2f:	pop    rax
  402b30:	pop    rcx
  402b31:	ret    
  402b32:	nop
  402b33:	nop
  402b34:	nop
  402b35:	nop
  402b36:	nop
  402b37:	nop
  402b38:	nop
  402b39:	nop
  402b3a:	nop
  402b3b:	nop
  402b3c:	nop
  402b3d:	nop
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0x6a12]        # 0x409558
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0x6a02]        # 0x409550
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0x69f2]        # 0x409548
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0x69e2]        # 0x409540
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0x69d2]        # 0x409538
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0x69c2]        # 0x409530
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0x69b2]        # 0x409528
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0x69a2]        # 0x409520
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0x6992]        # 0x409518
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0x6982]        # 0x409510
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0x6972]        # 0x409508
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0x6962]        # 0x409500
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0x6952]        # 0x4094f8
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0x6942]        # 0x4094f0
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0x6932]        # 0x4094e8
  402bb6:	nop
  402bb7:	nop
  402bb8:	jmp    QWORD PTR [rip+0x6922]        # 0x4094e0
  402bbe:	nop
  402bbf:	nop
  402bc0:	jmp    QWORD PTR [rip+0x690a]        # 0x4094d0
  402bc6:	nop
  402bc7:	nop
  402bc8:	jmp    QWORD PTR [rip+0x68fa]        # 0x4094c8
  402bce:	nop
  402bcf:	nop
  402bd0:	jmp    QWORD PTR [rip+0x68ea]        # 0x4094c0
  402bd6:	nop
  402bd7:	nop
  402bd8:	jmp    QWORD PTR [rip+0x68d2]        # 0x4094b0
  402bde:	nop
  402bdf:	nop
  402be0:	jmp    QWORD PTR [rip+0x68c2]        # 0x4094a8
  402be6:	nop
  402be7:	nop
  402be8:	jmp    QWORD PTR [rip+0x68b2]        # 0x4094a0
  402bee:	nop
  402bef:	nop
  402bf0:	jmp    QWORD PTR [rip+0x68a2]        # 0x409498
  402bf6:	nop
  402bf7:	nop
  402bf8:	jmp    QWORD PTR [rip+0x688a]        # 0x409488
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x687a]        # 0x409480
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x686a]        # 0x409478
  402c0e:	nop
  402c0f:	nop
  402c10:	mov    rax,QWORD PTR [rip+0x5dd9]        # 0x4089f0
  402c17:	ret    
  402c18:	nop    DWORD PTR [rax+rax*1+0x0]
  402c20:	mov    rax,rcx
  402c23:	xchg   QWORD PTR [rip+0x5dc6],rax        # 0x4089f0
  402c2a:	ret    
  402c2b:	nop
  402c2c:	nop
  402c2d:	nop
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x6832]        # 0x409468
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x6822]        # 0x409460
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0x6812]        # 0x409458
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0x6802]        # 0x409450
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0x67f2]        # 0x409448
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0x67e2]        # 0x409440
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x67d2]        # 0x409438
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x67c2]        # 0x409430
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0x67b2]        # 0x409428
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0x67a2]        # 0x409420
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0x6792]        # 0x409418
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0x6782]        # 0x409410
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x6772]        # 0x409408
  402c96:	nop
  402c97:	nop
  402c98:	jmp    QWORD PTR [rip+0x6762]        # 0x409400
  402c9e:	nop
  402c9f:	nop
  402ca0:	jmp    QWORD PTR [rip+0x6752]        # 0x4093f8
  402ca6:	nop
  402ca7:	nop
  402ca8:	jmp    QWORD PTR [rip+0x6742]        # 0x4093f0
  402cae:	nop
  402caf:	nop
  402cb0:	jmp    QWORD PTR [rip+0x6732]        # 0x4093e8
  402cb6:	nop
  402cb7:	nop
  402cb8:	jmp    QWORD PTR [rip+0x6722]        # 0x4093e0
  402cbe:	nop
  402cbf:	nop
  402cc0:	jmp    QWORD PTR [rip+0x6712]        # 0x4093d8
  402cc6:	nop
  402cc7:	nop
  402cc8:	jmp    QWORD PTR [rip+0x6702]        # 0x4093d0
  402cce:	nop
  402ccf:	nop
  402cd0:	jmp    QWORD PTR [rip+0x66f2]        # 0x4093c8
  402cd6:	nop
  402cd7:	nop
  402cd8:	jmp    QWORD PTR [rip+0x66e2]        # 0x4093c0
  402cde:	nop
  402cdf:	nop
  402ce0:	jmp    QWORD PTR [rip+0x66d2]        # 0x4093b8
  402ce6:	nop
  402ce7:	nop
  402ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cf0:	push   r15
  402cf2:	push   r14
  402cf4:	push   r13
  402cf6:	push   r12
  402cf8:	push   rbp
  402cf9:	push   rdi
  402cfa:	push   rsi
  402cfb:	push   rbx
  402cfc:	sub    rsp,0x68
  402d00:	mov    ebx,ecx
  402d02:	mov    rdi,rdx
  402d05:	call   0x401750
  402d0a:	cmp    ebx,0x1
  402d0d:	je     0x402fc1
  402d13:	mov    ecx,0x50
  402d18:	call   0x401530
  402d1d:	cmp    ebx,0x1
  402d20:	jle    0x402f4c
  402d26:	call   0x401540
  402d2b:	mov    DWORD PTR [rsp+0x3c],eax
  402d2f:	lea    eax,[rbx-0x2]
  402d32:	lea    rsi,[rdi+0x8]
  402d36:	lea    rax,[rdi+rax*8+0x10]
  402d3b:	mov    QWORD PTR [rsp+0x30],rax
  402d40:	lea    rax,[rsp+0x58]
  402d45:	mov    QWORD PTR [rsp+0x48],rax
  402d4a:	lea    rax,[rsp+0x50]
  402d4f:	mov    QWORD PTR [rsp+0x40],rax
  402d54:	jmp    0x402d6f
  402d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d60:	add    rsi,0x8
  402d64:	cmp    rsi,QWORD PTR [rsp+0x30]
  402d69:	je     0x402f4c
  402d6f:	mov    edx,DWORD PTR [rsp+0x3c]
  402d73:	mov    rax,QWORD PTR [rsi]
  402d76:	test   edx,edx
  402d78:	mov    QWORD PTR [rsp+0x28],rax
  402d7d:	je     0x402d60
  402d7f:	mov    r8,QWORD PTR [rsp+0x48]
  402d84:	xor    edx,edx
  402d86:	mov    rcx,rax
  402d89:	mov    QWORD PTR [rsp+0x58],0x0
  402d92:	call   0x4015c8
  402d97:	test   rax,rax
  402d9a:	mov    r12,rax
  402d9d:	je     0x402f98
  402da3:	lea    rcx,[rip+0x2256]        # 0x405000
  402daa:	lea    r13,[rip+0x2250]        # 0x405001
  402db1:	call   0x401560
  402db6:	mov    rdi,rax
  402db9:	nop    DWORD PTR [rax+0x0]
  402dc0:	mov    rcx,r12
  402dc3:	call   0x4015c0
  402dc8:	test   rax,rax
  402dcb:	mov    rbx,rax
  402dce:	je     0x402ec0
  402dd4:	lea    rdx,[rip+0x22c6]        # 0x4050a1
  402ddb:	mov    rcx,rbx
  402dde:	call   0x401590
  402de3:	test   eax,eax
  402de5:	je     0x402dc0
  402de7:	mov    rcx,QWORD PTR [rsp+0x28]
  402dec:	xor    r8d,r8d
  402def:	mov    rdx,rbx
  402df2:	call   0x4015d8
  402df7:	mov    edx,0x3
  402dfc:	mov    rbp,rax
  402dff:	mov    rcx,rax
  402e02:	call   0x401548
  402e07:	mov    rcx,rbp
  402e0a:	mov    r14,rax
  402e0d:	call   0x4015a8
  402e12:	test   r14,r14
  402e15:	je     0x402dc0
  402e17:	mov    r8,QWORD PTR [rsp+0x40]
  402e1c:	lea    rdx,[rip+0x2283]        # 0x4050a6
  402e23:	mov    rcx,r14
  402e26:	call   0x401538
  402e2b:	mov    rax,QWORD PTR [rsp+0x50]
  402e30:	test   rax,rax
  402e33:	je     0x402ea1
  402e35:	call   rax
  402e37:	test   rax,rax
  402e3a:	mov    rbp,rax
  402e3d:	je     0x402ea1
  402e3f:	lea    rdx,[rip+0x2272]        # 0x4050b8
  402e46:	mov    r8,rbx
  402e49:	mov    rcx,rdi
  402e4c:	xor    ebx,ebx
  402e4e:	lea    r15,[rip+0x21ab]        # 0x405000
  402e55:	call   0x401570
  402e5a:	mov    r9,QWORD PTR [rbp+0x0]
  402e5e:	test   r9,r9
  402e61:	je     0x402e8a
  402e63:	test   rbx,rbx
  402e66:	mov    r8,r15
  402e69:	lea    rdx,[rip+0x224f]        # 0x4050bf
  402e70:	cmovne r8,r13
  402e74:	mov    rcx,rdi
  402e77:	add    rbx,0x1
  402e7b:	call   0x401570
  402e80:	mov    r9,QWORD PTR [rbp+rbx*8+0x0]
  402e85:	test   r9,r9
  402e88:	jne    0x402e63
  402e8a:	lea    rdx,[rip+0x222c]        # 0x4050bd
  402e91:	mov    rcx,rdi
  402e94:	call   0x401578
  402e99:	mov    rcx,rbp
  402e9c:	call   0x401580
  402ea1:	mov    rcx,r14
  402ea4:	call   0x401550
  402ea9:	mov    rcx,r12
  402eac:	call   0x4015c0
  402eb1:	test   rax,rax
  402eb4:	mov    rbx,rax
  402eb7:	jne    0x402dd4
  402ebd:	nop    DWORD PTR [rax]
  402ec0:	mov    rcx,r12
  402ec3:	call   0x4015d0
  402ec8:	mov    rcx,QWORD PTR [rsp+0x28]
  402ecd:	lea    rdx,[rip+0x21f0]        # 0x4050c4
  402ed4:	xor    r8d,r8d
  402ed7:	call   0x4015d8
  402edc:	mov    r8,QWORD PTR [rdi+0x8]
  402ee0:	mov    rbx,rax
  402ee3:	test   r8,r8
  402ee6:	je     0x402f60
  402ee8:	mov    r9,QWORD PTR [rsp+0x48]
  402eed:	mov    rdx,QWORD PTR [rdi]
  402ef0:	mov    rcx,rax
  402ef3:	mov    QWORD PTR [rsp+0x58],0x0
  402efc:	call   0x4015b0
  402f01:	test   eax,eax
  402f03:	jne    0x402f30
  402f05:	mov    rax,QWORD PTR [rsp+0x58]
  402f0a:	lea    rcx,[rip+0x21c3]        # 0x4050d4
  402f11:	mov    rdx,rbx
  402f14:	mov    r8,QWORD PTR [rax+0x8]
  402f18:	call   0x401598
  402f1d:	mov    rcx,QWORD PTR [rsp+0x58]
  402f22:	call   0x4015b8
  402f27:	nop    WORD PTR [rax+rax*1+0x0]
  402f30:	mov    edx,0x1
  402f35:	mov    rcx,rdi
  402f38:	add    rsi,0x8
  402f3c:	call   0x401568
  402f41:	cmp    rsi,QWORD PTR [rsp+0x30]
  402f46:	jne    0x402d6f
  402f4c:	xor    eax,eax
  402f4e:	add    rsp,0x68
  402f52:	pop    rbx
  402f53:	pop    rsi
  402f54:	pop    rdi
  402f55:	pop    rbp
  402f56:	pop    r12
  402f58:	pop    r13
  402f5a:	pop    r14
  402f5c:	pop    r15
  402f5e:	ret    
  402f5f:	nop
  402f60:	mov    rcx,rax
  402f63:	call   0x401558
  402f68:	test   eax,eax
  402f6a:	je     0x402f30
  402f6c:	call   QWORD PTR [rip+0x655e]        # 0x4094d0
  402f72:	cmp    DWORD PTR [rax],0x2
  402f75:	je     0x402f30
  402f77:	call   QWORD PTR [rip+0x6553]        # 0x4094d0
  402f7d:	mov    ecx,DWORD PTR [rax]
  402f7f:	call   0x401588
  402f84:	lea    rcx,[rip+0x2162]        # 0x4050ed
  402f8b:	mov    r8,rax
  402f8e:	mov    rdx,rbx
  402f91:	call   0x401598
  402f96:	jmp    0x402f30
  402f98:	mov    rax,QWORD PTR [rsp+0x58]
  402f9d:	mov    rdx,QWORD PTR [rsp+0x28]
  402fa2:	lea    rcx,[rip+0x20d7]        # 0x405080
  402fa9:	mov    r8,QWORD PTR [rax+0x8]
  402fad:	call   0x401598
  402fb2:	mov    rcx,QWORD PTR [rsp+0x58]
  402fb7:	call   0x4015b8
  402fbc:	jmp    0x402d60
  402fc1:	lea    rcx,[rip+0x2040]        # 0x405008
  402fc8:	call   0x4015a0
  402fcd:	lea    rcx,[rip+0x2074]        # 0x405048
  402fd4:	call   0x4015a0
  402fd9:	mov    eax,0x1
  402fde:	jmp    0x402f4e
  402fe3:	nop
  402fe4:	nop
  402fe5:	nop
  402fe6:	nop
  402fe7:	nop
  402fe8:	nop
  402fe9:	nop
  402fea:	nop
  402feb:	nop
  402fec:	nop
  402fed:	nop
  402fee:	nop
  402fef:	nop
  402ff0:	(bad)  
  402ff1:	(bad)  
  402ff2:	(bad)  
  402ff3:	(bad)  
  402ff4:	(bad)  
  402ff5:	(bad)  
  402ff6:	(bad)  
  402ff7:	inc    DWORD PTR [rax]
  402ff9:	add    BYTE PTR [rax],al
  402ffb:	add    BYTE PTR [rax],al
  402ffd:	add    BYTE PTR [rax],al
  402fff:	add    bh,bh
  403001:	(bad)  
  403002:	(bad)  
  403003:	(bad)  
  403004:	(bad)  
  403005:	(bad)  
  403006:	(bad)  
  403007:	inc    DWORD PTR [rax]
  403009:	add    BYTE PTR [rax],al
  40300b:	add    BYTE PTR [rax],al
  40300d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	or     BYTE PTR [rax],dh
  404012:	add    BYTE PTR [rax],al
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    BYTE PTR [rax],dl
  404061:	sub    al,0x40
  404063:	add    BYTE PTR [rax],al
  404065:	add    BYTE PTR [rax],al
  404067:	add    BYTE PTR [rax],ah
  404069:	sub    al,0x40
  40406b:	add    BYTE PTR [rax],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rdx],dh
  404071:	movabs ds:0x2b992ddf,al
  40407a:	add    BYTE PTR [rax],al
  40407c:	add    BYTE PTR [rax],al
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
  404089:	add    BYTE PTR [rax],al
  40408b:	add    BYTE PTR [rax],al
  40408d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	add    BYTE PTR [rax+rax*1],ch
  405003:	add    BYTE PTR [rax],al
  405005:	add    BYTE PTR [rax],al
  405007:	add    BYTE PTR [rbp+0x73],dl
  40500a:	(bad)  
  40500b:	cmp    ah,BYTE PTR gs:[eax]
  40500f:	imul   ebp,DWORD PTR [edi+0x2d],0x72657571
  405017:	jns    0x405086
  405019:	outs   dx,DWORD PTR ds:[rsi]
  40501a:	fs jne 0x405089
  40501d:	gs jae 0x405040
  405020:	cmp    al,0x64
  405022:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
  405029:	jns    0x40505c
  40502b:	and    BYTE PTR ds:[rbx+0x3c],bl
  40502f:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  405037:	jns    0x40506b
  405039:	and    BYTE PTR ds:[rsi],ch
  40503c:	cs cs pop rbp
  40503f:	or     al,BYTE PTR [rax]
  405041:	add    BYTE PTR [rax],al
  405043:	add    BYTE PTR [rax],al
  405045:	add    BYTE PTR [rax],al
  405047:	add    BYTE PTR [rdi+0x69],dl
  40504a:	ins    BYTE PTR es:[rdi],dx
  40504b:	ins    BYTE PTR es:[rdi],dx
  40504c:	and    BYTE PTR [rbp+0x70],dh
  40504f:	fs (bad) 
  405051:	je     0x4050b8
  405053:	and    BYTE PTR [rdi+0x69],ah
  405056:	outs   dx,DWORD PTR ds:[rsi]
  405057:	ins    DWORD PTR es:[rdi],dx
  405058:	outs   dx,DWORD PTR ds:[rsi]
  405059:	fs jne 0x4050c8
  40505c:	gs movsxd esp,DWORD PTR cs:[rcx+0x63]
  405061:	push   0x6e692065
  405066:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40506a:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  40506e:	je     0x4050d5
  405070:	and    BYTE PTR fs:[rcx+rbp*2+0x72],ah
  405075:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  40507a:	imul   esp,DWORD PTR [rbp+0x73],0x5500000a
  405081:	outs   dx,BYTE PTR ds:[rsi]
  405082:	(bad)  
  405083:	(bad)  
  405084:	ins    BYTE PTR es:[rdi],dx
  405085:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40508a:	outs   dx,DWORD PTR ds:[rsi]
  40508b:	jo     0x4050f2
  40508d:	outs   dx,BYTE PTR ds:[rsi]
  40508e:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  405092:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  405097:	jns    0x4050b9
  405099:	and    eax,0x25203a73
  40509e:	jae    0x4050aa
  4050a0:	add    BYTE PTR [rsi],ch
  4050a2:	fs ins BYTE PTR es:[rdi],dx
  4050a4:	ins    BYTE PTR es:[rdi],dx
  4050a5:	add    BYTE PTR [rdi+0x5f],ah
  4050a8:	imul   ebp,DWORD PTR [rdi+0x5f],0x75646f6d
  4050af:	ins    BYTE PTR es:[rdi],dx
  4050b0:	gs pop rdi
  4050b2:	jno    0x405129
  4050b4:	gs jb  0x405130
  4050b7:	add    BYTE PTR [rip+0x203a73],ah        # 0x608b30
  4050bd:	or     al,BYTE PTR [rax]
  4050bf:	and    eax,0x732573
  4050c4:	imul   ebp,DWORD PTR [edi+0x6d],0x6c75646f
  4050cc:	gs movsxd esp,DWORD PTR cs:[rcx+0x63]
  4050d1:	push   0x6e550065
  4050d6:	(bad)  
  4050d7:	(bad)  
  4050d8:	ins    BYTE PTR es:[rdi],dx
  4050d9:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4050de:	movsxd esi,DWORD PTR [rdx+0x65]
  4050e1:	(bad)  
  4050e2:	je     0x405149
  4050e4:	and    BYTE PTR [rip+0x25203a73],ah        # 0x25608b5d
  4050ea:	jae    0x4050f6
  4050ec:	add    BYTE PTR [rbp+0x6e],dl
  4050ef:	(bad)  
  4050f0:	(bad)  
  4050f1:	ins    BYTE PTR es:[rdi],dx
  4050f2:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4050f7:	jne    0x405167
  4050f9:	ins    BYTE PTR es:[rdi],dx
  4050fa:	imul   ebp,DWORD PTR [rsi+0x6b],0x3a732520
  405101:	and    BYTE PTR [rip+0xa73],ah        # 0x405b7a
	...
  40510f:	add    BYTE PTR [rax+0x4085],al
  405115:	add    BYTE PTR [rax],al
  405117:	add    BYTE PTR [rax+0x4080],al
  40511d:	add    BYTE PTR [rax],al
  40511f:	add    BYTE PTR [rax+0x4019],ah
	...
  40512d:	add    BYTE PTR [rax],al
  40512f:	add    BYTE PTR [rcx+0x72],al
  405132:	addr32 jne 0x4051a2
  405135:	outs   dx,BYTE PTR gs:[rsi]
  405137:	je     0x405159
  405139:	outs   dx,DWORD PTR fs:[rsi]
  40513b:	ins    DWORD PTR es:[rdi],dx
  40513c:	(bad)  
  40513d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  405144:	jb     0x405166
  405146:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40514a:	rex.B
  40514b:	rex.WB
  40514c:	rex.WRX sub QWORD PTR [rax],r8
  40514f:	rex.B jb 0x4051b9
  405152:	jne    0x4051c1
  405154:	outs   dx,BYTE PTR gs:[rsi]
  405156:	je     0x405178
  405158:	jae    0x4051c3
  40515a:	outs   dx,BYTE PTR ds:[rsi]
  40515b:	addr32 jne 0x4051ca
  40515e:	(bad)  
  40515f:	jb     0x4051ca
  405161:	je     0x4051dc
  405163:	and    BYTE PTR [rax],ch
  405165:	push   rbx
  405166:	rex.WB
  405167:	rex.RXB
  405168:	rex.WRX sub QWORD PTR [rax],r8
  40516b:	add    BYTE PTR [rax],al
  40516d:	add    BYTE PTR [rax],al
  40516f:	add    BYTE PTR [rdi+0x76],cl
  405172:	gs jb  0x4051db
  405175:	ins    BYTE PTR es:[rdi],dx
  405176:	outs   dx,DWORD PTR ds:[rsi]
  405177:	ja     0x405199
  405179:	jb     0x4051dc
  40517b:	outs   dx,BYTE PTR ds:[rsi]
  40517c:	and    BYTE PTR gs:[ebp+0x72],ah
  405181:	jb     0x4051f2
  405183:	jb     0x4051a5
  405185:	sub    BYTE PTR [rdi+0x56],cl
  405188:	rex.RB push r10
  40518a:	rex.RX
  40518b:	rex.WR
  40518c:	rex.WRXB push r15
  40518e:	sub    DWORD PTR [rax],eax
  405190:	push   rax
  405191:	(bad)  
  405192:	jb     0x405208
  405194:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40519b:	jae    0x4051bd
  40519d:	outs   dx,DWORD PTR ds:[rsi]
  40519e:	data16 and BYTE PTR [rbx+0x69],dh
  4051a2:	outs   dx,BYTE PTR ds:[esi]
  4051a4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4051ab:	and    BYTE PTR gs:[rax],ch
  4051ae:	push   rax
  4051af:	rex.WR
  4051b0:	rex.WRXB push r11
  4051b2:	push   rbx
  4051b3:	sub    DWORD PTR [rax],eax
  4051b5:	add    BYTE PTR [rax],al
  4051b7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  4051bb:	(bad)  
  4051bc:	ins    BYTE PTR es:[rdi],dx
  4051bd:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4051c1:	jae    0x4051e3
  4051c3:	outs   dx,DWORD PTR ds:[rsi]
  4051c4:	data16 and BYTE PTR [rbx+0x69],dh
  4051c8:	outs   dx,BYTE PTR ds:[esi]
  4051ca:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4051d1:	and    BYTE PTR gs:[rax],ch
  4051d4:	push   rsp
  4051d5:	rex.WR
  4051d6:	rex.WRXB push r11
  4051d8:	push   rbx
  4051d9:	sub    DWORD PTR [rax],eax
  4051db:	add    BYTE PTR [rax],al
  4051dd:	add    BYTE PTR [rax],al
  4051df:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4051e3:	and    BYTE PTR [rdx+0x65],dh
  4051e6:	jae    0x40525d
  4051e8:	ins    BYTE PTR es:[rdi],dx
  4051e9:	je     0x40520b
  4051eb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4051f2:	jae    0x405261
  4051f4:	(bad)  
  4051f5:	ins    BYTE PTR es:[rdi],dx
  4051f6:	ins    BYTE PTR es:[rdi],dx
  4051f7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4051fb:	(bad)  
  4051fc:	and    BYTE PTR gs:[rdx+0x65],dh
  405200:	jo     0x405274
  405202:	gs jae 0x40526a
  405205:	outs   dx,BYTE PTR ds:[rsi]
  405206:	je     0x40526d
  405208:	and    BYTE PTR fs:[rax],ch
  40520b:	push   rbp
  40520c:	rex.WRX
  40520d:	rex.R
  40520e:	rex.RB push r10
  405210:	rex.RX
  405211:	rex.WR
  405212:	rex.WRXB push r15
  405214:	sub    DWORD PTR [rax],eax
  405216:	push   rbp
  405217:	outs   dx,BYTE PTR ds:[rsi]
  405218:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40521c:	outs   dx,BYTE PTR ds:[rsi]
  40521d:	and    BYTE PTR [rbp+0x72],ah
  405220:	jb     0x405291
  405222:	jb     0x405224
  405224:	add    BYTE PTR [rax],al
  405226:	add    BYTE PTR [rax],al
  405228:	pop    rdi
  405229:	ins    DWORD PTR es:[rdi],dx
  40522a:	(bad)  
  40522b:	je     0x405295
  40522d:	gs jb  0x4052a2
  405230:	sub    BYTE PTR [rcx],ch
  405232:	cmp    ah,BYTE PTR [rax]
  405234:	and    eax,0x6e692073
  405239:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657ab2
  40523f:	sub    al,0x20
  405241:	and    eax,0x20202967
  405246:	sub    BYTE PTR [rdx+0x65],dh
  405249:	je     0x4052c1
  40524b:	(bad)  
  40524c:	ins    BYTE PTR es:[rdi],dx
  40524d:	cmp    eax,0xa296725
  405252:	add    BYTE PTR [rax],al
  405254:	sbb    al,0xc9
  405256:	(bad)  
  405257:	call   FWORD PTR [rbp-0x38]
  40525a:	(bad)  
  40525b:	dec    esp
  40525d:	enter  0xffff,0xdc
  405261:	enter  0xffff,0xec
  405265:	enter  0xffff,0xfc
  405269:	enter  0xffff,0xc
  40526d:	leave  
  40526e:	(bad)  
  40526f:	dec    DWORD PTR [rbp+0x69]
  405272:	outs   dx,BYTE PTR ds:[rsi]
  405273:	addr32 ja 0x4052a3
  405276:	ja     0x4052ae
  405278:	xor    al,0x20
  40527a:	jb     0x4052f1
  40527c:	outs   dx,BYTE PTR ds:[rsi]
  40527d:	je     0x4052e8
  40527f:	ins    DWORD PTR es:[rdi],dx
  405280:	and    BYTE PTR gs:[rsi+0x61],ah
  405284:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40528c:	add    BYTE PTR [rax],al
  40528e:	add    BYTE PTR [rax],al
  405290:	rex.B
  405291:	fs fs jb 0x4052fa
  405295:	jae    0x40530a
  405297:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8730d
  40529d:	jae    0x4052bf
  40529f:	outs   dx,BYTE PTR ds:[rsi]
  4052a0:	outs   dx,DWORD PTR ds:[rsi]
  4052a1:	and    BYTE PTR [rcx+0x6d],ch
  4052a4:	(bad)  
  4052a5:	addr32 gs sub eax,0x74636573
  4052ac:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  4052b3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4052ba:	jne    0x405321
  4052bc:	jb     0x405337
  4052be:	and    BYTE PTR [rsi+0x61],ah
  4052c1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4052c9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a27333
  4052cf:	je     0x405336
  4052d1:	jae    0x4052f3
  4052d3:	(bad)  
  4052d4:	je     0x4052f6
  4052d6:	(bad)  
  4052d7:	fs fs jb 0x405340
  4052db:	jae    0x405350
  4052dd:	and    BYTE PTR [rip+0x70],ah        # 0x405353
  4052e3:	add    BYTE PTR [rax],al
  4052e5:	add    BYTE PTR [rax],al
  4052e7:	add    BYTE PTR [rax],ah
  4052e9:	and    BYTE PTR [rsi+0x69],dl
  4052ec:	jb     0x405362
  4052ee:	jne    0x405351
  4052f0:	ins    BYTE PTR es:[rdi],dx
  4052f1:	push   rax
  4052f2:	jb     0x405363
  4052f4:	je     0x40535b
  4052f6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4052fa:	(bad)  
  4052fb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405303:	push   0x646f6320
  405308:	and    BYTE PTR gs:[rax],dh
  40530b:	js     0x405332
  40530d:	js     0x40530f
  40530f:	add    BYTE PTR [rax],ah
  405311:	and    BYTE PTR [rbp+0x6e],dl
  405314:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405318:	outs   dx,BYTE PTR ds:[rsi]
  405319:	and    BYTE PTR [rax+0x73],dh
  40531c:	gs jne 0x405383
  40531f:	outs   dx,DWORD PTR ds:[rsi]
  405320:	and    BYTE PTR [rdx+0x65],dh
  405323:	ins    BYTE PTR es:[rdi],dx
  405324:	outs   dx,DWORD PTR ds:[rsi]
  405325:	movsxd esp,DWORD PTR [rcx+0x74]
  405328:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40532f:	je     0x4053a0
  405331:	movsxd ebp,DWORD PTR [rdi+0x6c]
  405334:	and    BYTE PTR [rsi+0x65],dh
  405337:	jb     0x4053ac
  405339:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  405340:	or     al,BYTE PTR [rax]
  405342:	add    BYTE PTR [rax],al
  405344:	add    BYTE PTR [rax],al
  405346:	add    BYTE PTR [rax],al
  405348:	and    BYTE PTR [rax],ah
  40534a:	push   rbp
  40534b:	outs   dx,BYTE PTR ds:[rsi]
  40534c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405350:	outs   dx,BYTE PTR ds:[rsi]
  405351:	and    BYTE PTR [rax+0x73],dh
  405354:	gs jne 0x4053bb
  405357:	outs   dx,DWORD PTR ds:[rsi]
  405358:	and    BYTE PTR [rdx+0x65],dh
  40535b:	ins    BYTE PTR es:[rdi],dx
  40535c:	outs   dx,DWORD PTR ds:[rsi]
  40535d:	movsxd esp,DWORD PTR [rcx+0x74]
  405360:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405367:	and    BYTE PTR [rbx+0x69],dh
  40536a:	jp     0x4053d1
  40536c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a81d6
	...
  40537e:	add    BYTE PTR [rax],al
  405380:	cs jo  0x4053e7
  405383:	(bad)  
  405384:	je     0x4053e7
	...
  40538e:	add    BYTE PTR [rax],al
  405390:	rex
  405391:	rex
  405392:	add    BYTE PTR [rax],al
	...
  40539d:	add    BYTE PTR [rax],al
  40539f:	add    BYTE PTR [rax+0x40],dl
  4053a2:	add    BYTE PTR [rax],al
	...
  4053ad:	add    BYTE PTR [rax],al
  4053af:	add    al,dh
  4053b1:	(bad)  
  4053b2:	add    BYTE PTR [rax],al
	...
  4053bd:	add    BYTE PTR [rax],al
  4053bf:	add    al,dl
  4053c1:	pop    rax
  4053c2:	add    BYTE PTR [rax],al
	...
  4053cd:	add    BYTE PTR [rax],al
  4053cf:	add    al,dl
  4053d1:	pop    rax
  4053d2:	add    BYTE PTR [rax],al
	...
  4053dd:	add    BYTE PTR [rax],al
  4053df:	add    BYTE PTR [rax],ah
  4053e1:	push   rcx
  4053e2:	add    BYTE PTR [rax],al
	...
  4053f1:	add    BYTE PTR [rax+0x0],al
	...
  405400:	nop
  405401:	xchg   esp,eax
  405402:	add    BYTE PTR [rax],al
	...
  40540d:	add    BYTE PTR [rax],al
  40540f:	add    BYTE PTR [rax+0x4094],bh
	...
  40541d:	add    BYTE PTR [rax],al
  40541f:	add    al,bl
  405421:	xchg   esp,eax
  405422:	add    BYTE PTR [rax],al
	...
  40542d:	add    BYTE PTR [rax],al
  40542f:	add    al,dh
  405431:	xchg   esp,eax
  405432:	add    BYTE PTR [rax],al
	...
  40543d:	add    BYTE PTR [rax],al
  40543f:	add    al,al
  405441:	xchg   BYTE PTR [rax+0x0],al
	...
  405450:	sub    BYTE PTR [rdx+0x40],cl
	...
  40545e:	add    BYTE PTR [rax],al
  405460:	and    BYTE PTR [rdx+0x40],cl
	...
  40546e:	add    BYTE PTR [rax],al
  405470:	adc    BYTE PTR [rdx+0x40],cl
	...
  40547e:	add    BYTE PTR [rax],al
  405480:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40548e:	add    BYTE PTR [rax],al
  405490:	add    BYTE PTR [rax+0x40],ah
	...
  40549e:	add    BYTE PTR [rax],al
  4054a0:	adc    BYTE PTR [rax+0x40],ah
	...
  4054ae:	add    BYTE PTR [rax],al
  4054b0:	sbb    BYTE PTR [rax+0x40],ah
	...
  4054be:	add    BYTE PTR [rax],al
  4054c0:	xor    BYTE PTR [rax+0x40],ah
	...
  4054ce:	add    BYTE PTR [rax],al
  4054d0:	rex add BYTE PTR [rax+0x0],0x0
	...
  4054dd:	add    BYTE PTR [rax],al
  4054df:	add    BYTE PTR [rax+0x4086],dl
	...
  4054ed:	add    BYTE PTR [rax],al
  4054ef:	add    BYTE PTR [rax],dh
  4054f1:	and    eax,DWORD PTR [rax+0x0]
	...
  405500:	sbb    BYTE PTR [rdx],0x40
	...
  40550f:	add    BYTE PTR [rax-0x7a],al
  405512:	add    BYTE PTR [rax],al
	...
  40551d:	add    BYTE PTR [rax],al
  40551f:	add    BYTE PTR [rax-0x7a],dh
  405522:	add    BYTE PTR [rax],al
	...
  40552d:	add    BYTE PTR [rax],al
  40552f:	add    BYTE PTR [rax-0x80],dl
  405532:	add    BYTE PTR [rax],al
	...
  40553d:	add    BYTE PTR [rax],al
  40553f:	add    BYTE PTR [rax-0x7a],bl
  405542:	add    BYTE PTR [rax],al
	...
  40554d:	add    BYTE PTR [rax],al
  40554f:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  40555f:	add    BYTE PTR [rax-0x7a],dl
  405562:	add    BYTE PTR [rax],al
	...
  40556d:	add    BYTE PTR [rax],al
  40556f:	add    BYTE PTR [rdi+0x43],al
  405572:	rex.XB cmp spl,BYTE PTR [r8]
  405575:	sub    BYTE PTR [rdi+0x4e],al
  405578:	push   rbp
  405579:	sub    DWORD PTR [rax],esp
  40557b:	xor    al,0x2e
  40557d:	cmp    DWORD PTR [rsi],ebp
  40557f:	xor    al,0x0
	...
  40558d:	add    BYTE PTR [rax],al
  40558f:	add    BYTE PTR [rdi+0x43],al
  405592:	rex.XB cmp spl,BYTE PTR [r8]
  405595:	sub    BYTE PTR [rdi+0x4e],al
  405598:	push   rbp
  405599:	sub    DWORD PTR [rax],esp
  40559b:	xor    al,0x2e
  40559d:	cmp    DWORD PTR [rsi],ebp
  40559f:	xor    al,0x0
	...
  4055ad:	add    BYTE PTR [rax],al
  4055af:	add    BYTE PTR [rdi+0x43],al
  4055b2:	rex.XB cmp spl,BYTE PTR [r8]
  4055b5:	sub    BYTE PTR [rdi+0x4e],al
  4055b8:	push   rbp
  4055b9:	sub    DWORD PTR [rax],esp
  4055bb:	xor    al,0x2e
  4055bd:	cmp    DWORD PTR [rsi],ebp
  4055bf:	xor    al,0x0
	...
  4055cd:	add    BYTE PTR [rax],al
  4055cf:	add    BYTE PTR [rdi+0x43],al
  4055d2:	rex.XB cmp spl,BYTE PTR [r8]
  4055d5:	sub    BYTE PTR [rdi+0x4e],al
  4055d8:	push   rbp
  4055d9:	sub    DWORD PTR [rax],esp
  4055db:	xor    al,0x2e
  4055dd:	cmp    DWORD PTR [rsi],ebp
  4055df:	xor    al,0x0
	...
  4055ed:	add    BYTE PTR [rax],al
  4055ef:	add    BYTE PTR [rdi+0x43],al
  4055f2:	rex.XB cmp spl,BYTE PTR [r8]
  4055f5:	sub    BYTE PTR [rdi+0x4e],al
  4055f8:	push   rbp
  4055f9:	sub    DWORD PTR [rax],esp
  4055fb:	xor    al,0x2e
  4055fd:	cmp    DWORD PTR [rsi],ebp
  4055ff:	xor    al,0x0
	...
  40560d:	add    BYTE PTR [rax],al
  40560f:	add    BYTE PTR [rdi+0x43],al
  405612:	rex.XB cmp spl,BYTE PTR [r8]
  405615:	sub    BYTE PTR [rdi+0x4e],al
  405618:	push   rbp
  405619:	sub    DWORD PTR [rax],esp
  40561b:	xor    al,0x2e
  40561d:	cmp    DWORD PTR [rsi],ebp
  40561f:	xor    al,0x0
	...
  40562d:	add    BYTE PTR [rax],al
  40562f:	add    BYTE PTR [rdi+0x43],al
  405632:	rex.XB cmp spl,BYTE PTR [r8]
  405635:	sub    BYTE PTR [rdi+0x4e],al
  405638:	push   rbp
  405639:	sub    DWORD PTR [rax],esp
  40563b:	xor    al,0x2e
  40563d:	cmp    DWORD PTR [rsi],ebp
  40563f:	xor    al,0x0
	...
  40564d:	add    BYTE PTR [rax],al
  40564f:	add    BYTE PTR [rdi+0x43],al
  405652:	rex.XB cmp spl,BYTE PTR [r8]
  405655:	sub    BYTE PTR [rdi+0x4e],al
  405658:	push   rbp
  405659:	sub    DWORD PTR [rax],esp
  40565b:	xor    al,0x2e
  40565d:	cmp    DWORD PTR [rsi],ebp
  40565f:	xor    al,0x0
	...
  40566d:	add    BYTE PTR [rax],al
  40566f:	add    BYTE PTR [rdi+0x43],al
  405672:	rex.XB cmp spl,BYTE PTR [r8]
  405675:	sub    BYTE PTR [rdi+0x4e],al
  405678:	push   rbp
  405679:	sub    DWORD PTR [rax],esp
  40567b:	xor    al,0x2e
  40567d:	cmp    DWORD PTR [rsi],ebp
  40567f:	xor    al,0x0
	...
  40568d:	add    BYTE PTR [rax],al
  40568f:	add    BYTE PTR [rdi+0x43],al
  405692:	rex.XB cmp spl,BYTE PTR [r8]
  405695:	sub    BYTE PTR [rdi+0x4e],al
  405698:	push   rbp
  405699:	sub    DWORD PTR [rax],esp
  40569b:	xor    al,0x2e
  40569d:	cmp    DWORD PTR [rsi],ebp
  40569f:	xor    al,0x0
	...
  4056ad:	add    BYTE PTR [rax],al
  4056af:	add    BYTE PTR [rdi+0x43],al
  4056b2:	rex.XB cmp spl,BYTE PTR [r8]
  4056b5:	sub    BYTE PTR [rdi+0x4e],al
  4056b8:	push   rbp
  4056b9:	sub    DWORD PTR [rax],esp
  4056bb:	xor    al,0x2e
  4056bd:	cmp    DWORD PTR [rsi],ebp
  4056bf:	xor    al,0x0
	...
  4056cd:	add    BYTE PTR [rax],al
  4056cf:	add    BYTE PTR [rdi+0x43],al
  4056d2:	rex.XB cmp spl,BYTE PTR [r8]
  4056d5:	sub    BYTE PTR [rdi+0x4e],al
  4056d8:	push   rbp
  4056d9:	sub    DWORD PTR [rax],esp
  4056db:	xor    al,0x2e
  4056dd:	cmp    DWORD PTR [rsi],ebp
  4056df:	xor    al,0x0
	...
  4056ed:	add    BYTE PTR [rax],al
  4056ef:	add    BYTE PTR [rdi+0x43],al
  4056f2:	rex.XB cmp spl,BYTE PTR [r8]
  4056f5:	sub    BYTE PTR [rdi+0x4e],al
  4056f8:	push   rbp
  4056f9:	sub    DWORD PTR [rax],esp
  4056fb:	xor    al,0x2e
  4056fd:	cmp    DWORD PTR [rsi],ebp
  4056ff:	xor    al,0x0
	...
  40570d:	add    BYTE PTR [rax],al
  40570f:	add    BYTE PTR [rdi+0x43],al
  405712:	rex.XB cmp spl,BYTE PTR [r8]
  405715:	sub    BYTE PTR [rdi+0x4e],al
  405718:	push   rbp
  405719:	sub    DWORD PTR [rax],esp
  40571b:	xor    al,0x2e
  40571d:	cmp    DWORD PTR [rsi],ebp
  40571f:	xor    al,0x0
	...
  40572d:	add    BYTE PTR [rax],al
  40572f:	add    BYTE PTR [rdi+0x43],al
  405732:	rex.XB cmp spl,BYTE PTR [r8]
  405735:	sub    BYTE PTR [rdi+0x4e],al
  405738:	push   rbp
  405739:	sub    DWORD PTR [rax],esp
  40573b:	xor    al,0x2e
  40573d:	cmp    DWORD PTR [rsi],ebp
  40573f:	xor    al,0x0
	...
  40574d:	add    BYTE PTR [rax],al
  40574f:	add    BYTE PTR [rdi+0x43],al
  405752:	rex.XB cmp spl,BYTE PTR [r8]
  405755:	sub    BYTE PTR [rdi+0x4e],al
  405758:	push   rbp
  405759:	sub    DWORD PTR [rax],esp
  40575b:	xor    al,0x2e
  40575d:	cmp    DWORD PTR [rsi],ebp
  40575f:	xor    al,0x0
	...
  40576d:	add    BYTE PTR [rax],al
  40576f:	add    BYTE PTR [rdi+0x43],al
  405772:	rex.XB cmp spl,BYTE PTR [r8]
  405775:	sub    BYTE PTR [rdi+0x4e],al
  405778:	push   rbp
  405779:	sub    DWORD PTR [rax],esp
  40577b:	xor    al,0x2e
  40577d:	cmp    DWORD PTR [rsi],ebp
  40577f:	xor    al,0x0
	...
  40578d:	add    BYTE PTR [rax],al
  40578f:	add    BYTE PTR [rdi+0x43],al
  405792:	rex.XB cmp spl,BYTE PTR [r8]
  405795:	sub    BYTE PTR [rdi+0x4e],al
  405798:	push   rbp
  405799:	sub    DWORD PTR [rax],esp
  40579b:	xor    al,0x2e
  40579d:	cmp    DWORD PTR [rsi],ebp
  40579f:	xor    al,0x0
	...
  4057ad:	add    BYTE PTR [rax],al
  4057af:	add    BYTE PTR [rdi+0x43],al
  4057b2:	rex.XB cmp spl,BYTE PTR [r8]
  4057b5:	sub    BYTE PTR [rdi+0x4e],al
  4057b8:	push   rbp
  4057b9:	sub    DWORD PTR [rax],esp
  4057bb:	xor    al,0x2e
  4057bd:	cmp    DWORD PTR [rsi],ebp
  4057bf:	xor    al,0x0
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    BYTE PTR [rdi+0x43],al
  4057d2:	rex.XB cmp spl,BYTE PTR [r8]
  4057d5:	sub    BYTE PTR [rdi+0x4e],al
  4057d8:	push   rbp
  4057d9:	sub    DWORD PTR [rax],esp
  4057db:	xor    al,0x2e
  4057dd:	cmp    DWORD PTR [rsi],ebp
  4057df:	xor    al,0x0
	...
  4057ed:	add    BYTE PTR [rax],al
  4057ef:	add    BYTE PTR [rdi+0x43],al
  4057f2:	rex.XB cmp spl,BYTE PTR [r8]
  4057f5:	sub    BYTE PTR [rdi+0x4e],al
  4057f8:	push   rbp
  4057f9:	sub    DWORD PTR [rax],esp
  4057fb:	xor    al,0x2e
  4057fd:	cmp    DWORD PTR [rsi],ebp
  4057ff:	xor    al,0x0
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rdi+0x43],al
  405812:	rex.XB cmp spl,BYTE PTR [r8]
  405815:	sub    BYTE PTR [rdi+0x4e],al
  405818:	push   rbp
  405819:	sub    DWORD PTR [rax],esp
  40581b:	xor    al,0x2e
  40581d:	cmp    DWORD PTR [rsi],ebp
  40581f:	xor    al,0x0
	...
  40582d:	add    BYTE PTR [rax],al
  40582f:	add    BYTE PTR [rdi+0x43],al
  405832:	rex.XB cmp spl,BYTE PTR [r8]
  405835:	sub    BYTE PTR [rdi+0x4e],al
  405838:	push   rbp
  405839:	sub    DWORD PTR [rax],esp
  40583b:	xor    al,0x2e
  40583d:	cmp    DWORD PTR [rsi],ebp
  40583f:	xor    al,0x0
	...
  40584d:	add    BYTE PTR [rax],al
  40584f:	add    BYTE PTR [rdi+0x43],al
  405852:	rex.XB cmp spl,BYTE PTR [r8]
  405855:	sub    BYTE PTR [rdi+0x4e],al
  405858:	push   rbp
  405859:	sub    DWORD PTR [rax],esp
  40585b:	xor    al,0x2e
  40585d:	cmp    DWORD PTR [rsi],ebp
  40585f:	xor    al,0x0
	...
  40586d:	add    BYTE PTR [rax],al
  40586f:	add    BYTE PTR [rdi+0x43],al
  405872:	rex.XB cmp spl,BYTE PTR [r8]
  405875:	sub    BYTE PTR [rdi+0x4e],al
  405878:	push   rbp
  405879:	sub    DWORD PTR [rax],esp
  40587b:	xor    al,0x2e
  40587d:	cmp    DWORD PTR [rsi],ebp
  40587f:	xor    al,0x0
	...
  40588d:	add    BYTE PTR [rax],al
  40588f:	add    BYTE PTR [rdi+0x43],al
  405892:	rex.XB cmp spl,BYTE PTR [r8]
  405895:	sub    BYTE PTR [rdi+0x4e],al
  405898:	push   rbp
  405899:	sub    DWORD PTR [rax],esp
  40589b:	xor    al,0x2e
  40589d:	cmp    DWORD PTR [rsi],ebp
  40589f:	xor    al,0x0
	...
  4058ad:	add    BYTE PTR [rax],al
  4058af:	add    BYTE PTR [rdi+0x43],al
  4058b2:	rex.XB cmp spl,BYTE PTR [r8]
  4058b5:	sub    BYTE PTR [rdi+0x4e],al
  4058b8:	push   rbp
  4058b9:	sub    DWORD PTR [rax],esp
  4058bb:	xor    al,0x2e
  4058bd:	cmp    DWORD PTR [rsi],ebp
  4058bf:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    al,ah
  406049:	adc    eax,0x16870000
  40604e:	add    BYTE PTR [rax],al
  406050:	xor    BYTE PTR [rax+0x0],0x0
  406054:	nop
  406055:	(bad)  
  406056:	add    BYTE PTR [rax],al
  406058:	test   eax,0x88000016
  40605d:	jo     0x40605f
  40605f:	add    BYTE PTR [rax-0x1affffea],dh
  406065:	(bad)  
  406066:	add    BYTE PTR [rax],al
  406068:	nop
  406069:	jo     0x40606b
  40606b:	add    al,dh
  40606d:	(bad)  
  40606e:	add    BYTE PTR [rax],al
  406070:	rex.RB (bad) 
  406072:	add    BYTE PTR [rax],al
  406074:	cwde   
  406075:	jo     0x406077
  406077:	add    BYTE PTR [rax+0x17],dl
  40607a:	add    BYTE PTR [rax],al
  40607c:	ins    BYTE PTR es:[rdi],dx
  40607d:	(bad)  
  40607e:	add    BYTE PTR [rax],al
  406080:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  406081:	jo     0x406083
  406083:	add    BYTE PTR [rax+0x17],dh
  406086:	add    BYTE PTR [rax],al
  406088:	jp     0x4060a1
  40608a:	add    BYTE PTR [rax],al
  40608c:	test   al,0x70
  40608e:	add    BYTE PTR [rax],al
  406090:	adc    BYTE PTR [rdi],0x0
  406093:	add    BYTE PTR [rbx-0x53ffffe9],al
  406099:	jo     0x40609b
  40609b:	add    BYTE PTR [rax+0x66000017],dl
  4060a1:	sbb    BYTE PTR [rax],al
  4060a3:	add    BYTE PTR [rax+0x70000070],dh
  4060a9:	sbb    BYTE PTR [rax],al
  4060ab:	add    BYTE PTR [rbx+0x19],ch
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	shl    BYTE PTR [rax+0x0],0x0
  4060b4:	jo     0x4060cf
  4060b6:	add    BYTE PTR [rax],al
  4060b8:	lahf   
  4060b9:	sbb    DWORD PTR [rax],eax
  4060bb:	add    al,dl
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax+0x9000019],ah
  4060c5:	sbb    al,BYTE PTR [rax]
  4060c7:	add    al,bl
  4060c9:	jo     0x4060cb
  4060cb:	add    BYTE PTR [rax],dl
  4060cd:	sbb    al,BYTE PTR [rax]
  4060cf:	add    BYTE PTR [rbx],dl
  4060d1:	sbb    al,BYTE PTR [rax]
  4060d3:	add    ah,ah
  4060d5:	jo     0x4060d7
  4060d7:	add    BYTE PTR [rax],ah
  4060d9:	sbb    al,BYTE PTR [rax]
  4060db:	add    BYTE PTR [rcx+0x1a],ah
  4060de:	add    BYTE PTR [rax],al
  4060e0:	call   0x70406155
  4060e5:	sbb    al,BYTE PTR [rax]
  4060e7:	add    BYTE PTR [rdx+rbx*1+0x0],bh
  4060eb:	add    al,dh
  4060ed:	jo     0x4060ef
  4060ef:	add    BYTE PTR [rax+0x7c00001a],al
  4060f5:	sbb    eax,DWORD PTR [rax]
  4060f7:	add    ah,dh
  4060f9:	jo     0x4060fb
  4060fb:	add    BYTE PTR [rax-0x7cffffe5],al
  406101:	sbb    eax,DWORD PTR [rax]
  406103:	add    BYTE PTR [rcx+rsi*2],cl
  406106:	add    BYTE PTR [rax],al
  406108:	nop
  406109:	sbb    eax,DWORD PTR [rax]
  40610b:	add    BYTE PTR [rbx+rbx*1+0x71100000],dl
  406112:	add    BYTE PTR [rax],al
  406114:	movabs al,ds:0x1400001ba400001b
  40611d:	jno    0x40611f
  40611f:	add    BYTE PTR [rax+0x1100001b],dh
  406125:	sbb    al,0x0
  406127:	add    BYTE PTR [rax],bl
  406129:	jno    0x40612b
  40612b:	add    BYTE PTR [rax],ah
  40612d:	sbb    al,0x0
  40612f:	add    BYTE PTR [rdx+0x2400001d],al
  406135:	jno    0x406137
  406137:	add    BYTE PTR [rax-0x76ffffe3],dl
  40613d:	and    BYTE PTR [rax],al
  40613f:	add    BYTE PTR [rax],bh
  406141:	jno    0x406143
  406143:	add    BYTE PTR [rax+0x36000020],dl
  406149:	and    al,BYTE PTR [rax]
  40614b:	add    BYTE PTR [rax+0x71],dl
  40614e:	add    BYTE PTR [rax],al
  406150:	and    al,BYTE PTR [rax]
  406153:	add    BYTE PTR [rbx+riz*1],ch
  406156:	add    BYTE PTR [rax],al
  406158:	pop    rax
  406159:	jno    0x40615b
  40615b:	add    BYTE PTR [rax],dh
  40615d:	and    eax,DWORD PTR [rax]
  40615f:	add    al,ch
  406161:	and    al,0x0
  406163:	add    BYTE PTR [rax+0x71],ch
  406166:	add    BYTE PTR [rax],al
  406168:	lock and al,0x0
  40616b:	add    BYTE PTR [rbp+0x25],bl
  40616e:	add    BYTE PTR [rax],al
  406170:	jo     0x4061e3
  406172:	add    BYTE PTR [rax],al
  406174:	(bad)  
  406175:	and    eax,0x25df0000
  40617a:	add    BYTE PTR [rax],al
  40617c:	xor    BYTE PTR [rcx+0x0],0x0
  406180:	loopne 0x4061a7
  406182:	add    BYTE PTR [rax],al
  406184:	jg     0x4061ac
  406186:	add    BYTE PTR [rax],al
  406188:	mov    WORD PTR [rcx+0x0],?
  40618b:	add    BYTE PTR [rax+0x5a000026],al
  406191:	(bad)  
  406192:	add    BYTE PTR [rax],al
  406194:	xchg   esp,eax
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax+0x27],ah
  40619a:	add    BYTE PTR [rax],al
  40619c:	jg     0x4061c5
  40619e:	add    BYTE PTR [rax],al
  4061a0:	pushf  
  4061a1:	jno    0x4061a3
  4061a3:	add    BYTE PTR [rax-0x6dffffd9],al
  4061a9:	(bad)  
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	movabs al,ds:0xe5000027a0000071
  4061b5:	(bad)  
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4061b9:	jno    0x4061bb
  4061bb:	add    al,dh
  4061bd:	(bad)  
  4061be:	add    BYTE PTR [rax],al
  4061c0:	mov    gs,WORD PTR [rax]
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	test   al,0x71
  4061c6:	add    BYTE PTR [rax],al
  4061c8:	nop
  4061c9:	sub    BYTE PTR [rax],al
  4061cb:	add    bl,dl
  4061cd:	sub    BYTE PTR [rax],al
  4061cf:	add    BYTE PTR [rcx+rsi*2+0x28e00000],dh
  4061d6:	add    BYTE PTR [rax],al
  4061d8:	sbb    ebp,DWORD PTR [rcx]
  4061da:	add    BYTE PTR [rax],al
  4061dc:	shl    BYTE PTR [rcx+0x0],0x0
  4061e0:	and    BYTE PTR [rcx],ch
  4061e2:	add    BYTE PTR [rax],al
  4061e4:	scas   al,BYTE PTR es:[rdi]
  4061e5:	sub    DWORD PTR [rax],eax
  4061e7:	add    al,cl
  4061e9:	jno    0x4061eb
  4061eb:	add    BYTE PTR [rax-0x17ffffd7],dh
  4061f1:	sub    DWORD PTR [rax],eax
  4061f3:	add    ah,dl
  4061f5:	jno    0x4061f7
  4061f7:	add    al,dh
  4061f9:	sub    DWORD PTR [rax],eax
  4061fb:	add    BYTE PTR [rbp+0x2a],al
  4061fe:	add    BYTE PTR [rax],al
  406200:	loopne 0x406273
  406202:	add    BYTE PTR [rax],al
  406204:	push   rax
  406205:	sub    al,BYTE PTR [rax]
  406207:	add    dh,bh
  406209:	sub    al,BYTE PTR [rax]
  40620b:	add    ah,ch
  40620d:	jno    0x40620f
  40620f:	add    BYTE PTR [rax],dl
  406211:	sub    al,0x0
  406213:	add    BYTE PTR [rax],bl
  406215:	sub    al,0x0
  406217:	add    ah,bh
  406219:	jno    0x40621b
  40621b:	add    BYTE PTR [rax],ah
  40621d:	sub    al,0x0
  40621f:	add    BYTE PTR [rbx],ch
  406221:	sub    al,0x0
  406223:	add    BYTE PTR [rax],al
  406225:	jb     0x406227
  406227:	add    al,dh
  406229:	sub    al,0x0
  40622b:	add    bl,ah
  40622d:	(bad)  
  40622e:	add    BYTE PTR [rax],al
  406230:	.byte 0x68
  406231:	jo     0x406233
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	or     BYTE PTR [rax+rax*1],ch
  407033:	add    BYTE PTR [rcx],al
  407035:	add    BYTE PTR [rax],al
  407037:	add    ah,dl
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax],dh
  407041:	and    eax,DWORD PTR [rax]
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	or     BYTE PTR [rax+rax*1],ch
  407053:	add    BYTE PTR [rcx],al
  407055:	add    BYTE PTR [rax],al
  407057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40705e:	add    BYTE PTR [rax],al
  407060:	xor    BYTE PTR [rbx],ah
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rax],edx
  40706a:	or     DWORD PTR [rax],eax
  40706c:	adc    dl,al
  40706e:	or     al,0x30
  407070:	or     esp,DWORD PTR [rax+0xa]
  407073:	jo     0x40707e
  407075:	push   rax
  407076:	or     al,al
  407078:	(bad)  
  407079:	rol    BYTE PTR [rax+riz*8],1
  40707c:	add    dh,al
  40707e:	add    BYTE PTR [rax],al
  407080:	add    DWORD PTR [rip+0x52050002],eax        # 0x52457088
  407086:	add    DWORD PTR [rax],esi
  407088:	add    DWORD PTR [rcx+rax*1],eax
  40708b:	add    BYTE PTR [rdx+rax*2],al
  40708e:	add    BYTE PTR [rax],al
  407090:	add    DWORD PTR [rcx+rax*1],eax
  407093:	add    BYTE PTR [rdx+rax*2],al
  407096:	add    BYTE PTR [rax],al
  407098:	add    DWORD PTR [rsi],eax
  40709a:	add    eax,DWORD PTR [rax]
  40709c:	(bad)  
  40709d:	rex.X add sil,BYTE PTR [rax]
  4070a0:	add    DWORD PTR [rax+0x0],esp
  4070a3:	add    BYTE PTR [rcx],al
  4070a5:	add    BYTE PTR [rax],al
  4070a7:	add    BYTE PTR [rcx],al
  4070a9:	add    BYTE PTR [rax],al
  4070ab:	add    BYTE PTR [rcx],al
  4070ad:	add    BYTE PTR [rax],al
  4070af:	add    BYTE PTR [rcx],al
  4070b1:	or     al,BYTE PTR [rsi]
  4070b3:	add    BYTE PTR [rdx],cl
  4070b5:	jb     0x4070bd
  4070b7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0751d
  4070bd:	push   rax
  4070be:	add    al,al
  4070c0:	add    DWORD PTR [rdx],ecx
  4070c2:	add    eax,0x6d20a05
  4070c7:	add    eax,DWORD PTR [rbx]
  4070c9:	xor    BYTE PTR [rdx],al
  4070cb:	(bad)  
  4070cc:	add    DWORD PTR [rax+0x0],edx
  4070cf:	add    BYTE PTR [rcx],al
  4070d1:	add    al,0x1
  4070d3:	add    BYTE PTR [rdx+rax*2],al
  4070d6:	add    BYTE PTR [rax],al
  4070d8:	add    DWORD PTR [rsi],eax
  4070da:	add    eax,DWORD PTR [rax]
  4070dc:	(bad)  
  4070dd:	rex.X add sil,BYTE PTR [rax]
  4070e0:	add    DWORD PTR [rax+0x0],esp
  4070e3:	add    BYTE PTR [rcx],al
  4070e5:	add    BYTE PTR [rax],al
  4070e7:	add    BYTE PTR [rcx],al
  4070e9:	add    al,0x1
  4070eb:	add    BYTE PTR [rdx+riz*4],al
  4070ee:	add    BYTE PTR [rax],al
  4070f0:	add    DWORD PTR [rax],eax
  4070f2:	add    BYTE PTR [rax],al
  4070f4:	add    DWORD PTR [rsi],edx
  4070f6:	or     DWORD PTR [rax],eax
  4070f8:	(bad)  
  4070f9:	mov    BYTE PTR [rsi],al
  4070fb:	add    BYTE PTR [rax],dl
  4070fd:	js     0x407104
  4070ff:	add    BYTE PTR [rbx],cl
  407101:	push   0xffffffffe2060004
  407106:	add    dh,BYTE PTR [rax]
  407108:	add    DWORD PTR [rax+0x0],esp
  40710b:	add    BYTE PTR [rcx],al
  40710d:	add    BYTE PTR [rax],al
  40710f:	add    BYTE PTR [rcx],al
  407111:	add    BYTE PTR [rax],al
  407113:	add    BYTE PTR [rcx],al
  407115:	add    BYTE PTR [rax],al
  407117:	add    BYTE PTR [rcx],al
  407119:	(bad)  
  40711a:	add    eax,DWORD PTR [rax]
  40711c:	(bad)  
  40711d:	(bad)  
  40711f:	xor    BYTE PTR [rcx],al
  407121:	(bad)  
  407122:	add    BYTE PTR [rax],al
  407124:	add    DWORD PTR [rdi+rax*1],ecx
  407127:	add    BYTE PTR [rdx+riz*4],cl
  40712a:	or     BYTE PTR [rax],dh
  40712c:	(bad)  
  40712d:	(bad)  
  40712e:	(bad)  
  40712f:	jo     0x407136
  407131:	push   rax
  407132:	add    al,0xc0
  407134:	add    dl,al
  407136:	add    BYTE PTR [rax],al
  407138:	add    DWORD PTR [rcx],edx
  40713a:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e2351
  407140:	or     dh,BYTE PTR [rax]
  407142:	or     DWORD PTR [rax+0x8],esp
  407145:	jo     0x40714e
  407147:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220751e
  40714e:	add    BYTE PTR [rax],al
  407150:	add    DWORD PTR [rcx+rax*1],eax
  407153:	add    BYTE PTR [rdx+rax*2],al
  407156:	add    BYTE PTR [rax],al
  407158:	add    DWORD PTR [rdx],ecx
  40715a:	(bad)  
  40715b:	add    BYTE PTR [rdx],cl
  40715d:	xor    al,BYTE PTR [rsi]
  40715f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075c5
  407165:	push   rax
  407166:	add    al,al
  407168:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457170
  40716e:	add    DWORD PTR [rax],esi
  407170:	add    DWORD PTR [rax],ecx
  407172:	add    eax,0x4420800
  407177:	xor    BYTE PTR [rbx],al
  407179:	(bad)  
  40717a:	add    dh,BYTE PTR [rax+0x1]
  40717d:	push   rax
  40717e:	add    BYTE PTR [rax],al
  407180:	add    DWORD PTR [rdi],eax
  407182:	add    al,0x0
  407184:	(bad)  
  407185:	xor    al,BYTE PTR [rbx]
  407187:	xor    BYTE PTR [rdx],al
  407189:	(bad)  
  40718a:	add    DWORD PTR [rax+0x1],esi
  40718d:	add    eax,0x32050002
  407192:	add    DWORD PTR [rax],esi
  407194:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245719c
  40719a:	add    DWORD PTR [rax],esi
  40719c:	add    DWORD PTR [rax],eax
  40719e:	add    BYTE PTR [rax],al
  4071a0:	add    DWORD PTR [rax],eax
  4071a2:	add    BYTE PTR [rax],al
  4071a4:	add    DWORD PTR [rax],eax
  4071a6:	add    BYTE PTR [rax],al
  4071a8:	add    DWORD PTR [rdi],eax
  4071aa:	add    al,0x0
  4071ac:	(bad)  
  4071ad:	xor    al,BYTE PTR [rbx]
  4071af:	xor    BYTE PTR [rdx],al
  4071b1:	(bad)  
  4071b2:	add    DWORD PTR [rax+0x1],esi
  4071b5:	(bad)  
  4071b6:	add    eax,DWORD PTR [rax]
  4071b8:	(bad)  
  4071b9:	rex.X add sil,BYTE PTR [rax]
  4071bc:	add    DWORD PTR [rax+0x0],esp
  4071bf:	add    BYTE PTR [rcx],al
  4071c1:	add    eax,0x32050002
  4071c6:	add    DWORD PTR [rax],esi
  4071c8:	add    DWORD PTR [rdi],eax
  4071ca:	add    al,0x0
  4071cc:	(bad)  
  4071cd:	xor    al,BYTE PTR [rbx]
  4071cf:	xor    BYTE PTR [rdx],al
  4071d1:	(bad)  
  4071d2:	add    DWORD PTR [rax+0x1],esi
  4071d5:	(bad)  
  4071d6:	add    eax,DWORD PTR [rax]
  4071d8:	(bad)  
  4071d9:	rex.X add sil,BYTE PTR [rax]
  4071dc:	add    DWORD PTR [rax+0x0],esp
  4071df:	add    BYTE PTR [rcx],al
  4071e1:	(bad)  
  4071e2:	add    eax,DWORD PTR [rax]
  4071e4:	(bad)  
  4071e5:	rex.X add sil,BYTE PTR [rax]
  4071e8:	add    DWORD PTR [rax+0x0],esp
  4071eb:	add    BYTE PTR [rcx],al
  4071ed:	or     BYTE PTR [rip+0x4420800],al        # 0x48279f3
  4071f3:	xor    BYTE PTR [rbx],al
  4071f5:	(bad)  
  4071f6:	add    dh,BYTE PTR [rax+0x1]
  4071f9:	push   rax
  4071fa:	add    BYTE PTR [rax],al
  4071fc:	add    DWORD PTR [rax],eax
  4071fe:	add    BYTE PTR [rax],al
  407200:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	js     0x408f92
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	test   BYTE PTR [rdx-0x6d100000],bl
  409012:	add    BYTE PTR [rax],al
  409014:	or     BYTE PTR [rcx+0x0],dl
  40901a:	add    BYTE PTR [rax],al
  40901c:	add    BYTE PTR [rax],al
  40901e:	add    BYTE PTR [rax],al
  409020:	test   al,0x9a
  409022:	add    BYTE PTR [rax],al
  409024:	adc    BYTE PTR [rbx-0x6ed00000],0x0
	...
  409033:	add    ah,al
  409035:	(bad)  
  409036:	add    BYTE PTR [rax],al
  409038:	test   al,0x93
  40903a:	add    BYTE PTR [rax],al
  40903c:	rex xchg ecx,eax
	...
  409046:	add    BYTE PTR [rax],al
  409048:	cmp    BYTE PTR [rbx-0x6c480000],bl
  40904e:	add    BYTE PTR [rax],al
  409050:	add    BYTE PTR [rdx+0x0],dl
  409056:	add    BYTE PTR [rax],al
  409058:	add    BYTE PTR [rax],al
  40905a:	add    BYTE PTR [rax],al
  40905c:	mov    esp,0x7800009b
  409061:	xchg   esp,eax
	...
  409076:	add    BYTE PTR [rax],al
  409078:	push   0x95
  40907d:	add    BYTE PTR [rax],al
  40907f:	add    BYTE PTR [rbp+rdx*4+0x0],bh
  409083:	add    BYTE PTR [rax],al
  409085:	add    BYTE PTR [rax],al
  409087:	add    BYTE PTR [rbp+rdx*4+0x0],cl
  40908e:	add    BYTE PTR [rax],al
  409090:	movabs al,ds:0xb800000000000095
  409099:	xchg   ebp,eax
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	enter  0x95,0x0
  4090a4:	add    BYTE PTR [rax],al
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	loopne 0x40903f
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	add    BYTE PTR [rax],al
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	in     al,dx
  4090b1:	xchg   ebp,eax
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	add    BYTE PTR [rax],al
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	clc    
  4090b9:	xchg   ebp,eax
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	add    BYTE PTR [rax],al
  4090be:	add    BYTE PTR [rax],al
  4090c0:	or     BYTE PTR [rsi+0x0],dl
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	sbb    al,0x96
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    BYTE PTR [rax],al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	sub    al,0x96
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	add    BYTE PTR [rax],al
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	cmp    al,0x96
  4090da:	add    BYTE PTR [rax],al
  4090dc:	add    BYTE PTR [rax],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	push   rax
  4090e1:	xchg   esi,eax
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	ins    BYTE PTR es:[rdi],dx
  4090e9:	xchg   esi,eax
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	add    BYTE PTR [rax],al
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	jl     0x409088
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	mov    WORD PTR [rsi+0x0],ss
	...
  409106:	add    BYTE PTR [rax],al
  409108:	cwde   
  409109:	xchg   esi,eax
  40910a:	add    BYTE PTR [rax],al
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	lods   al,BYTE PTR ds:[rsi]
  409111:	xchg   esi,eax
  409112:	add    BYTE PTR [rax],al
  409114:	add    BYTE PTR [rax],al
  409116:	add    BYTE PTR [rax],al
  409118:	(bad)  
  409119:	xchg   esi,eax
  40911a:	add    BYTE PTR [rax],al
  40911c:	add    BYTE PTR [rax],al
  40911e:	add    BYTE PTR [rax],al
  409120:	fcom   QWORD PTR [rsi+0x0]
	...
  40912e:	add    BYTE PTR [rax],al
  409130:	lock xchg esi,eax
	...
  40913e:	add    BYTE PTR [rax],al
  409140:	add    BYTE PTR [rdi+0x0],dl
  409146:	add    BYTE PTR [rax],al
  409148:	sbb    BYTE PTR [rdi+0x0],dl
  40914e:	add    BYTE PTR [rax],al
  409150:	xor    BYTE PTR [rdi+0x0],dl
  409156:	add    BYTE PTR [rax],al
  409158:	rex.R xchg edi,eax
  40915a:	add    BYTE PTR [rax],al
  40915c:	add    BYTE PTR [rax],al
  40915e:	add    BYTE PTR [rax],al
  409160:	pop    rdx
  409161:	xchg   edi,eax
  409162:	add    BYTE PTR [rax],al
  409164:	add    BYTE PTR [rax],al
  409166:	add    BYTE PTR [rax],al
  409168:	jo     0x409101
  40916a:	add    BYTE PTR [rax],al
  40916c:	add    BYTE PTR [rax],al
  40916e:	add    BYTE PTR [rax],al
  409170:	adc    BYTE PTR [rdi+0x0],0x0
  409177:	add    BYTE PTR [rdx+0x97],dl
  40917d:	add    BYTE PTR [rax],al
  40917f:	add    BYTE PTR [rdi+rdx*4+0x0],ch
  409186:	add    BYTE PTR [rax],al
  409188:	mov    esp,0x97
  40918d:	add    BYTE PTR [rax],al
  40918f:	add    al,bl
  409191:	xchg   edi,eax
  409192:	add    BYTE PTR [rax],al
  409194:	add    BYTE PTR [rax],al
  409196:	add    BYTE PTR [rax],al
  409198:	lock xchg edi,eax
  40919a:	add    BYTE PTR [rax],al
  40919c:	add    BYTE PTR [rax],al
  40919e:	add    BYTE PTR [rax],al
  4091a0:	or     bl,BYTE PTR [rax+0x0]
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	and    BYTE PTR [rax+0x0],bl
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	xor    al,0x98
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	add    BYTE PTR [rax],al
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	rex.WRX cdqe 
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	add    BYTE PTR [rax],al
  4091be:	add    BYTE PTR [rax],al
  4091c0:	(bad)  
  4091c1:	cwde   
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	sbb    BYTE PTR [rax+0x0],0x0
  4091cf:	add    BYTE PTR [rax+0x98],cl
  4091d5:	add    BYTE PTR [rax],al
  4091d7:	add    BYTE PTR [rax+rbx*4+0x0],bl
  4091de:	add    BYTE PTR [rax],al
  4091e0:	stos   BYTE PTR es:[rdi],al
  4091e1:	cwde   
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	add    BYTE PTR [rax],al
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	(bad)  
  4091e9:	cwde   
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	add    BYTE PTR [rax],al
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	fcomp  DWORD PTR [rax+0x0]
	...
  4091fe:	add    BYTE PTR [rax],al
  409200:	call   0x40929d
  409205:	add    BYTE PTR [rax],al
  409207:	add    BYTE PTR [rax],al
  409209:	cdq    
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	(bad)  
  409211:	cdq    
  409212:	add    BYTE PTR [rax],al
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	(bad)  
  409219:	cdq    
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    BYTE PTR [rax],al
  40921e:	add    BYTE PTR [rax],al
  409220:	sub    bl,BYTE PTR [rcx+0x0]
  409226:	add    BYTE PTR [rax],al
  409228:	cmp    BYTE PTR [rcx+0x0],bl
  40922e:	add    BYTE PTR [rax],al
  409230:	cqo    
  409232:	add    BYTE PTR [rax],al
  409234:	add    BYTE PTR [rax],al
  409236:	add    BYTE PTR [rax],al
  409238:	pop    rdx
  409239:	cdq    
  40923a:	add    BYTE PTR [rax],al
  40923c:	add    BYTE PTR [rax],al
  40923e:	add    BYTE PTR [rax],al
  409240:	outs   dx,BYTE PTR ds:[rsi]
  409241:	cdq    
  409242:	add    BYTE PTR [rax],al
  409244:	add    BYTE PTR [rax],al
  409246:	add    BYTE PTR [rax],al
  409248:	js     0x4091e3
  40924a:	add    BYTE PTR [rax],al
  40924c:	add    BYTE PTR [rax],al
  40924e:	add    BYTE PTR [rax],al
  409250:	xchg   BYTE PTR [rcx+0x0],bl
  409256:	add    BYTE PTR [rax],al
  409258:	nop
  409259:	cdq    
  40925a:	add    BYTE PTR [rax],al
  40925c:	add    BYTE PTR [rax],al
  40925e:	add    BYTE PTR [rax],al
  409260:	(bad)  
  409261:	cdq    
  409262:	add    BYTE PTR [rax],al
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409269:	cdq    
  40926a:	add    BYTE PTR [rax],al
  40926c:	add    BYTE PTR [rax],al
  40926e:	add    BYTE PTR [rax],al
  409270:	mov    al,0x99
  409272:	add    BYTE PTR [rax],al
  409274:	add    BYTE PTR [rax],al
  409276:	add    BYTE PTR [rax],al
  409278:	mov    eax,0x99
  40927d:	add    BYTE PTR [rax],al
  40927f:	add    dl,al
  409281:	cdq    
  409282:	add    BYTE PTR [rax],al
  409284:	add    BYTE PTR [rax],al
  409286:	add    BYTE PTR [rax],al
  409288:	int3   
  409289:	cdq    
  40928a:	add    BYTE PTR [rax],al
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	(bad)  
  409291:	cdq    
  409292:	add    BYTE PTR [rax],al
  409294:	add    BYTE PTR [rax],al
  409296:	add    BYTE PTR [rax],al
  409298:	ficomp WORD PTR [rcx+0x0]
  40929e:	add    BYTE PTR [rax],al
  4092a0:	out    0x99,al
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	add    BYTE PTR [rax],al
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	lock cdq 
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	add    BYTE PTR [rax],al
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	clc    
  4092b1:	cdq    
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	add    BYTE PTR [rax],al
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	add    bl,BYTE PTR [rdx+0x0]
  4092be:	add    BYTE PTR [rax],al
  4092c0:	or     al,0x9a
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	(bad)  
  4092c9:	(bad)  
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	add    BYTE PTR [rax],al
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	and    BYTE PTR [rdx+0x0],bl
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	sub    bl,BYTE PTR [rdx+0x0]
  4092de:	add    BYTE PTR [rax],al
  4092e0:	xor    al,0x9a
	...
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	push   0x95
  4092f5:	add    BYTE PTR [rax],al
  4092f7:	add    BYTE PTR [rbp+rdx*4+0x0],bh
  4092fb:	add    BYTE PTR [rax],al
  4092fd:	add    BYTE PTR [rax],al
  4092ff:	add    BYTE PTR [rbp+rdx*4+0x0],cl
  409306:	add    BYTE PTR [rax],al
  409308:	movabs al,ds:0xb800000000000095
  409311:	xchg   ebp,eax
  409312:	add    BYTE PTR [rax],al
  409314:	add    BYTE PTR [rax],al
  409316:	add    BYTE PTR [rax],al
  409318:	enter  0x95,0x0
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	loopne 0x4092b7
  409322:	add    BYTE PTR [rax],al
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	in     al,dx
  409329:	xchg   ebp,eax
  40932a:	add    BYTE PTR [rax],al
  40932c:	add    BYTE PTR [rax],al
  40932e:	add    BYTE PTR [rax],al
  409330:	clc    
  409331:	xchg   ebp,eax
  409332:	add    BYTE PTR [rax],al
  409334:	add    BYTE PTR [rax],al
  409336:	add    BYTE PTR [rax],al
  409338:	or     BYTE PTR [rsi+0x0],dl
  40933e:	add    BYTE PTR [rax],al
  409340:	sbb    al,0x96
  409342:	add    BYTE PTR [rax],al
  409344:	add    BYTE PTR [rax],al
  409346:	add    BYTE PTR [rax],al
  409348:	sub    al,0x96
  40934a:	add    BYTE PTR [rax],al
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	cmp    al,0x96
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rax],al
  409356:	add    BYTE PTR [rax],al
  409358:	push   rax
  409359:	xchg   esi,eax
  40935a:	add    BYTE PTR [rax],al
  40935c:	add    BYTE PTR [rax],al
  40935e:	add    BYTE PTR [rax],al
  409360:	ins    BYTE PTR es:[rdi],dx
  409361:	xchg   esi,eax
  409362:	add    BYTE PTR [rax],al
  409364:	add    BYTE PTR [rax],al
  409366:	add    BYTE PTR [rax],al
  409368:	jl     0x409300
  40936a:	add    BYTE PTR [rax],al
  40936c:	add    BYTE PTR [rax],al
  40936e:	add    BYTE PTR [rax],al
  409370:	mov    WORD PTR [rsi+0x0],ss
	...
  40937e:	add    BYTE PTR [rax],al
  409380:	cwde   
  409381:	xchg   esi,eax
  409382:	add    BYTE PTR [rax],al
  409384:	add    BYTE PTR [rax],al
  409386:	add    BYTE PTR [rax],al
  409388:	lods   al,BYTE PTR ds:[rsi]
  409389:	xchg   esi,eax
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	(bad)  
  409391:	xchg   esi,eax
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rax],al
  409396:	add    BYTE PTR [rax],al
  409398:	fcom   QWORD PTR [rsi+0x0]
	...
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	lock xchg esi,eax
	...
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	add    BYTE PTR [rdi+0x0],dl
  4093be:	add    BYTE PTR [rax],al
  4093c0:	sbb    BYTE PTR [rdi+0x0],dl
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	xor    BYTE PTR [rdi+0x0],dl
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	rex.R xchg edi,eax
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	add    BYTE PTR [rax],al
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	pop    rdx
  4093d9:	xchg   edi,eax
  4093da:	add    BYTE PTR [rax],al
  4093dc:	add    BYTE PTR [rax],al
  4093de:	add    BYTE PTR [rax],al
  4093e0:	jo     0x409379
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	add    BYTE PTR [rax],al
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	adc    BYTE PTR [rdi+0x0],0x0
  4093ef:	add    BYTE PTR [rdx+0x97],dl
  4093f5:	add    BYTE PTR [rax],al
  4093f7:	add    BYTE PTR [rdi+rdx*4+0x0],ch
  4093fe:	add    BYTE PTR [rax],al
  409400:	mov    esp,0x97
  409405:	add    BYTE PTR [rax],al
  409407:	add    al,bl
  409409:	xchg   edi,eax
  40940a:	add    BYTE PTR [rax],al
  40940c:	add    BYTE PTR [rax],al
  40940e:	add    BYTE PTR [rax],al
  409410:	lock xchg edi,eax
  409412:	add    BYTE PTR [rax],al
  409414:	add    BYTE PTR [rax],al
  409416:	add    BYTE PTR [rax],al
  409418:	or     bl,BYTE PTR [rax+0x0]
  40941e:	add    BYTE PTR [rax],al
  409420:	and    BYTE PTR [rax+0x0],bl
  409426:	add    BYTE PTR [rax],al
  409428:	xor    al,0x98
  40942a:	add    BYTE PTR [rax],al
  40942c:	add    BYTE PTR [rax],al
  40942e:	add    BYTE PTR [rax],al
  409430:	rex.WRX cdqe 
  409432:	add    BYTE PTR [rax],al
  409434:	add    BYTE PTR [rax],al
  409436:	add    BYTE PTR [rax],al
  409438:	(bad)  
  409439:	cwde   
  40943a:	add    BYTE PTR [rax],al
  40943c:	add    BYTE PTR [rax],al
  40943e:	add    BYTE PTR [rax],al
  409440:	sbb    BYTE PTR [rax+0x0],0x0
  409447:	add    BYTE PTR [rax+0x98],cl
  40944d:	add    BYTE PTR [rax],al
  40944f:	add    BYTE PTR [rax+rbx*4+0x0],bl
  409456:	add    BYTE PTR [rax],al
  409458:	stos   BYTE PTR es:[rdi],al
  409459:	cwde   
  40945a:	add    BYTE PTR [rax],al
  40945c:	add    BYTE PTR [rax],al
  40945e:	add    BYTE PTR [rax],al
  409460:	(bad)  
  409461:	cwde   
  409462:	add    BYTE PTR [rax],al
  409464:	add    BYTE PTR [rax],al
  409466:	add    BYTE PTR [rax],al
  409468:	fcomp  DWORD PTR [rax+0x0]
	...
  409476:	add    BYTE PTR [rax],al
  409478:	call   0x409515
  40947d:	add    BYTE PTR [rax],al
  40947f:	add    BYTE PTR [rax],al
  409481:	cdq    
  409482:	add    BYTE PTR [rax],al
  409484:	add    BYTE PTR [rax],al
  409486:	add    BYTE PTR [rax],al
  409488:	(bad)  
  409489:	cdq    
  40948a:	add    BYTE PTR [rax],al
  40948c:	add    BYTE PTR [rax],al
  40948e:	add    BYTE PTR [rax],al
  409490:	(bad)  
  409491:	cdq    
  409492:	add    BYTE PTR [rax],al
  409494:	add    BYTE PTR [rax],al
  409496:	add    BYTE PTR [rax],al
  409498:	sub    bl,BYTE PTR [rcx+0x0]
  40949e:	add    BYTE PTR [rax],al
  4094a0:	cmp    BYTE PTR [rcx+0x0],bl
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	cqo    
  4094aa:	add    BYTE PTR [rax],al
  4094ac:	add    BYTE PTR [rax],al
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	pop    rdx
  4094b1:	cdq    
  4094b2:	add    BYTE PTR [rax],al
  4094b4:	add    BYTE PTR [rax],al
  4094b6:	add    BYTE PTR [rax],al
  4094b8:	outs   dx,BYTE PTR ds:[rsi]
  4094b9:	cdq    
  4094ba:	add    BYTE PTR [rax],al
  4094bc:	add    BYTE PTR [rax],al
  4094be:	add    BYTE PTR [rax],al
  4094c0:	js     0x40945b
  4094c2:	add    BYTE PTR [rax],al
  4094c4:	add    BYTE PTR [rax],al
  4094c6:	add    BYTE PTR [rax],al
  4094c8:	xchg   BYTE PTR [rcx+0x0],bl
  4094ce:	add    BYTE PTR [rax],al
  4094d0:	nop
  4094d1:	cdq    
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	add    BYTE PTR [rax],al
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	(bad)  
  4094d9:	cdq    
  4094da:	add    BYTE PTR [rax],al
  4094dc:	add    BYTE PTR [rax],al
  4094de:	add    BYTE PTR [rax],al
  4094e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4094e1:	cdq    
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	add    BYTE PTR [rax],al
  4094e6:	add    BYTE PTR [rax],al
  4094e8:	mov    al,0x99
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	add    BYTE PTR [rax],al
  4094ee:	add    BYTE PTR [rax],al
  4094f0:	mov    eax,0x99
  4094f5:	add    BYTE PTR [rax],al
  4094f7:	add    dl,al
  4094f9:	cdq    
  4094fa:	add    BYTE PTR [rax],al
  4094fc:	add    BYTE PTR [rax],al
  4094fe:	add    BYTE PTR [rax],al
  409500:	int3   
  409501:	cdq    
  409502:	add    BYTE PTR [rax],al
  409504:	add    BYTE PTR [rax],al
  409506:	add    BYTE PTR [rax],al
  409508:	(bad)  
  409509:	cdq    
  40950a:	add    BYTE PTR [rax],al
  40950c:	add    BYTE PTR [rax],al
  40950e:	add    BYTE PTR [rax],al
  409510:	ficomp WORD PTR [rcx+0x0]
  409516:	add    BYTE PTR [rax],al
  409518:	out    0x99,al
  40951a:	add    BYTE PTR [rax],al
  40951c:	add    BYTE PTR [rax],al
  40951e:	add    BYTE PTR [rax],al
  409520:	lock cdq 
  409522:	add    BYTE PTR [rax],al
  409524:	add    BYTE PTR [rax],al
  409526:	add    BYTE PTR [rax],al
  409528:	clc    
  409529:	cdq    
  40952a:	add    BYTE PTR [rax],al
  40952c:	add    BYTE PTR [rax],al
  40952e:	add    BYTE PTR [rax],al
  409530:	add    bl,BYTE PTR [rdx+0x0]
  409536:	add    BYTE PTR [rax],al
  409538:	or     al,0x9a
  40953a:	add    BYTE PTR [rax],al
  40953c:	add    BYTE PTR [rax],al
  40953e:	add    BYTE PTR [rax],al
  409540:	(bad)  
  409541:	(bad)  
  409542:	add    BYTE PTR [rax],al
  409544:	add    BYTE PTR [rax],al
  409546:	add    BYTE PTR [rax],al
  409548:	and    BYTE PTR [rdx+0x0],bl
  40954e:	add    BYTE PTR [rax],al
  409550:	sub    bl,BYTE PTR [rdx+0x0]
  409556:	add    BYTE PTR [rax],al
  409558:	xor    al,0x9a
	...
  409566:	add    BYTE PTR [rax],al
  409568:	lea    eax,[rax]
  40956a:	addr32 pop rdi
  40956c:	(bad)  
  40956d:	jne    0x4095d8
  40956f:	ins    BYTE PTR es:[rdi],dx
  409570:	fs pop rdi
  409572:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  409579:	add    BYTE PTR gs:[rax],al
  40957c:	push   rdx
  40957d:	add    DWORD PTR [rdi+0x5f],esp
  409580:	imul   esi,DWORD PTR fs:[rdx+0x5f],0x736f6c63
  409588:	add    BYTE PTR gs:[rax],al
  40958b:	add    BYTE PTR [rcx+rax*1+0x67],dl
  40958f:	pop    rdi
  409590:	imul   esi,DWORD PTR fs:[rdx+0x5f],0x6e65706f
  409598:	pop    rdi
  409599:	jne    0x40960f
  40959b:	data16 cmp BYTE PTR [rax],al
  40959e:	add    BYTE PTR [rax],al
  4095a0:	push   rbp
  4095a1:	add    DWORD PTR [rdi+0x5f],esp
  4095a4:	imul   esi,DWORD PTR fs:[rdx+0x5f],0x64616572
  4095ac:	pop    rdi
  4095ad:	outs   dx,BYTE PTR ds:[rsi]
  4095ae:	(bad)  
  4095af:	ins    DWORD PTR es:[rdi],dx
  4095b0:	gs pop rdi
  4095b2:	jne    0x409628
  4095b4:	data16 cmp BYTE PTR [rax],al
  4095b7:	add    BYTE PTR [rdx+0x1],ah
  4095ba:	addr32 pop rdi
  4095bc:	gs jb  0x409631
  4095bf:	outs   dx,DWORD PTR ds:[rsi]
  4095c0:	jb     0x409621
  4095c2:	data16 jb 0x40962a
  4095c5:	add    BYTE PTR gs:[rax],al
  4095c8:	ins    BYTE PTR es:[rdi],dx
  4095c9:	add    DWORD PTR [rdi+0x5f],esp
  4095cc:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6573
  4095d3:	je     0x409634
  4095d5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4095d8:	je     0x40963f
  4095da:	outs   dx,BYTE PTR ds:[rsi]
  4095db:	je     0x409650
  4095dd:	add    BYTE PTR [rax],al
  4095df:	add    BYTE PTR [rdx+0x1],bh
  4095e2:	addr32 pop rdi
  4095e4:	data16 jb 0x40964c
  4095e7:	add    BYTE PTR gs:[rax],al
  4095ea:	add    BYTE PTR [rax],al
  4095ec:	(bad)  
  4095ed:	add    esp,DWORD PTR [rdi+0x5f]
  4095f0:	jo     0x409664
  4095f2:	imul   ebp,DWORD PTR [rsi+0x74],0x30000000
  4095f9:	add    esp,DWORD PTR [rdi+0x5f]
  4095fc:	jo     0x409670
  4095fe:	imul   ebp,DWORD PTR [rsi+0x74],0x727265
  409605:	add    BYTE PTR [rax],al
  409607:	add    BYTE PTR [rax+0x4],dh
  40960a:	addr32 pop rdi
  40960c:	jae    0x409682
  40960e:	jb     0x40966f
  409610:	push   0x735f7361
  409615:	jne    0x40967d
  409617:	imul   di,WORD PTR [rax+0x0],0x8300
  40961d:	add    al,0x67
  40961f:	pop    rdi
  409620:	jae    0x409696
  409622:	jb     0x409689
  409624:	jb     0x409698
  409626:	outs   dx,DWORD PTR ds:[rsi]
  409627:	jb     0x409629
  409629:	add    BYTE PTR [rax],al
  40962b:	add    BYTE PTR [rbp+0x735f6704],al
  409631:	je     0x4096a5
  409633:	data16 jb 0x40969b
  409636:	gs jbe 0x409639
  409639:	add    BYTE PTR [rax],al
  40963b:	add    BYTE PTR [rsi+0x735f6704],al
  409641:	je     0x4096b5
  409643:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  40964a:	outs   dx,BYTE PTR gs:[rsi]
  40964c:	add    BYTE PTR fs:[rax],al
  40964f:	add    BYTE PTR [rcx+0x735f6704],cl
  409655:	je     0x4096c9
  409657:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  40965e:	outs   dx,BYTE PTR gs:[rsi]
  409660:	fs pop rdi
  409662:	jo     0x4096d6
  409664:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40966b:	add    BYTE PTR [rcx+0x735f6704],bl
  409671:	je     0x4096e5
  409673:	imul   ebp,DWORD PTR [rsi+0x67],0x6572665f
  40967a:	add    BYTE PTR gs:[rax+0x735f6704],ah
  409681:	je     0x4096f5
  409683:	imul   ebp,DWORD PTR [rsi+0x67],0x77656e5f
  40968a:	add    BYTE PTR [rax],al
  40968c:	jae    0x409693
  40968e:	addr32 pop rdi
  409690:	jne    0x409700
  409692:	ins    BYTE PTR es:[rdi],dx
  409693:	imul   ebp,DWORD PTR [rsi+0x6b],0x10000
  40969a:	addr32 pop rdi
  40969c:	ins    DWORD PTR es:[rdi],dx
  40969d:	outs   dx,DWORD PTR ds:[rsi]
  40969e:	fs jne 0x40970d
  4096a1:	gs pop rdi
  4096a3:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4096a7:	add    BYTE PTR gs:[rax],al
  4096aa:	add    BYTE PTR [rax],al
  4096ac:	add    eax,0x6d5f6700
  4096b1:	outs   dx,DWORD PTR ds:[rsi]
  4096b2:	fs jne 0x409721
  4096b5:	gs pop rdi
  4096b7:	outs   dx,DWORD PTR ds:[rsi]
  4096b8:	jo     0x40971f
  4096ba:	outs   dx,BYTE PTR ds:[rsi]
  4096bb:	pop    rdi
  4096bc:	jne    0x409732
  4096be:	data16 cmp BYTE PTR [rax],al
  4096c1:	add    BYTE PTR [rax],al
  4096c3:	add    BYTE PTR [rsi],al
  4096c5:	add    BYTE PTR [rdi+0x5f],ah
  4096c8:	ins    DWORD PTR es:[rdi],dx
  4096c9:	outs   dx,DWORD PTR ds:[rsi]
  4096ca:	fs jne 0x409739
  4096cd:	gs pop rdi
  4096cf:	jae    0x409746
  4096d1:	jo     0x409743
  4096d3:	outs   dx,DWORD PTR ds:[rsi]
  4096d4:	jb     0x40974a
  4096d6:	gs add BYTE PTR fs:[rax],al
  4096da:	add    BYTE PTR [rax],al
  4096dc:	(bad)  
  4096dd:	add    BYTE PTR [rdi+0x5f],ah
  4096e0:	ins    DWORD PTR es:[rdi],dx
  4096e1:	outs   dx,DWORD PTR ds:[rsi]
  4096e2:	fs jne 0x409751
  4096e5:	gs pop rdi
  4096e7:	jae    0x409762
  4096e9:	ins    DWORD PTR es:[rdi],dx
  4096ea:	(bad)  
  4096eb:	outs   dx,DWORD PTR ds:[rsi]
  4096ec:	ins    BYTE PTR es:[rdi],dx
  4096ed:	add    BYTE PTR [rax],al
  4096ef:	add    BYTE PTR [rip+0x745f6701],ah        # 0x749ffdf6
  4096f5:	jns    0x409767
  4096f7:	gs pop rdi
  4096f9:	outs   dx,BYTE PTR gs:[rsi]
  4096fb:	jae    0x409772
  4096fd:	jb     0x409764
  4096ff:	add    al,bl
  409701:	add    BYTE PTR [rbp+riz*2+0x6c],al
  409705:	gs je  0x40976d
  409708:	rex.XB jb 0x409774
  40970b:	je     0x409776
  40970d:	movsxd esp,DWORD PTR [rcx+0x6c]
  409710:	push   rbx
  409711:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409716:	outs   dx,BYTE PTR ds:[rsi]
  409717:	add    al,bh
  409719:	add    BYTE PTR [rbp+0x6e],al
  40971c:	je     0x409783
  40971e:	jb     0x409763
  409720:	jb     0x40978b
  409722:	je     0x40978d
  409724:	movsxd esp,DWORD PTR [rcx+0x6c]
  409727:	push   rbx
  409728:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40972d:	outs   dx,BYTE PTR ds:[rsi]
  40972e:	add    BYTE PTR [rax],al
  409730:	int    0x1
  409732:	rex.RXB
  409733:	gs je  0x409779
  409736:	jne    0x4097aa
  409738:	jb     0x40979f
  40973a:	outs   dx,BYTE PTR ds:[rsi]
  40973b:	je     0x40978d
  40973d:	jb     0x4097ae
  40973f:	movsxd esp,DWORD PTR [rbp+0x73]
  409742:	jae    0x409744
  409744:	(bad)  
  409745:	add    DWORD PTR [rdi+0x65],eax
  409748:	je     0x40978d
  40974a:	jne    0x4097be
  40974c:	jb     0x4097b3
  40974e:	outs   dx,BYTE PTR ds:[rsi]
  40974f:	je     0x4097a1
  409751:	jb     0x4097c2
  409753:	movsxd esp,DWORD PTR [rbp+0x73]
  409756:	jae    0x4097a1
  409758:	fs add dl,dl
  40975b:	add    DWORD PTR [rdi+0x65],eax
  40975e:	je     0x4097a3
  409760:	jne    0x4097d4
  409762:	jb     0x4097c9
  409764:	outs   dx,BYTE PTR ds:[rsi]
  409765:	je     0x4097bb
  409767:	push   0x64616572
  40976c:	rex.WB
  40976d:	add    BYTE PTR fs:[rax],al
  409770:	adc    BYTE PTR [rdx],al
  409772:	rex.RXB
  409773:	gs je  0x4097c2
  409776:	(bad)  
  409777:	jae    0x4097ed
  409779:	rex.RB jb 0x4097ee
  40977c:	outs   dx,DWORD PTR ds:[rsi]
  40977d:	jb     0x40977f
  40977f:	add    BYTE PTR [rbx+0x2],dh
  409782:	rex.RXB
  409783:	gs je  0x4097d9
  409786:	je     0x4097e9
  409788:	jb     0x4097fe
  40978a:	jne    0x4097fc
  40978c:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40978e:	outs   dx,WORD PTR ds:[rsi]
  409790:	add    BYTE PTR [r10+0x74654702],cl
  409797:	push   rbx
  409798:	jns    0x40980d
  40979a:	je     0x409801
  40979c:	ins    DWORD PTR es:[rdi],dx
  40979d:	push   rsp
  40979e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4097a5:	ins    BYTE PTR es:[rdi],dx
  4097a6:	gs push rsp
  4097a8:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4097af:	gs je  0x409806
  4097b2:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4097b9:	je     0x4097bb
  4097bb:	add    cl,bh
  4097bd:	add    cl,BYTE PTR [rcx+0x6e]
  4097c0:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4097c8:	rex.XB jb 0x409834
  4097cb:	je     0x409836
  4097cd:	movsxd esp,DWORD PTR [rcx+0x6c]
  4097d0:	push   rbx
  4097d1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4097d6:	outs   dx,BYTE PTR ds:[rsi]
  4097d7:	add    BYTE PTR [rbx+0x3],cl
  4097da:	rex.WR
  4097db:	gs (bad) 
  4097dd:	jbe    0x409844
  4097df:	rex.XB jb 0x40984b
  4097e2:	je     0x40984d
  4097e4:	movsxd esp,DWORD PTR [rcx+0x6c]
  4097e7:	push   rbx
  4097e8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4097ed:	outs   dx,BYTE PTR ds:[rsi]
  4097ee:	add    BYTE PTR [rax],al
  4097f0:	mov    ebx,0x65755103
  4097f5:	jb     0x409870
  4097f7:	push   rax
  4097f8:	gs jb  0x409861
  4097fb:	outs   dx,DWORD PTR ds:[rsi]
  4097fc:	jb     0x40986b
  4097fe:	(bad)  
  4097ff:	outs   dx,BYTE PTR ds:[rsi]
  409800:	movsxd esp,DWORD PTR [rbp+0x43]
  409803:	outs   dx,DWORD PTR ds:[rsi]
  409804:	jne    0x409874
  409806:	je     0x40986d
  409808:	jb     0x40980a
  40980a:	add    DWORD PTR [rdx+rdx*2],eax
  40980d:	je     0x40987b
  40980f:	rex.B
  409810:	fs fs rex.RX jne 0x409883
  409815:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409819:	outs   dx,BYTE PTR ds:[rsi]
  40981a:	push   rsp
  40981b:	(bad)  
  40981c:	(bad)  
  40981d:	ins    BYTE PTR es:[rdi],dx
  40981e:	add    BYTE PTR gs:[rdx],al
  409821:	add    al,0x52
  409823:	je     0x409891
  409825:	rex.XB (bad) 
  409827:	jo     0x40989d
  409829:	jne    0x40989d
  40982b:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40982e:	outs   dx,BYTE PTR ds:[rsi]
  40982f:	je     0x409896
  409831:	js     0x4098a7
  409833:	add    BYTE PTR [rcx],cl
  409835:	add    al,0x52
  409837:	je     0x4098a5
  409839:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40983b:	outs   dx,DWORD PTR ds:[rsi]
  40983c:	imul   esi,DWORD PTR [rbp+0x70],0x46
  409840:	jne    0x4098b0
  409842:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409846:	outs   dx,BYTE PTR ds:[rsi]
  409847:	rex.RB outs dx,BYTE PTR ds:[rsi]
  409849:	je     0x4098bd
  40984b:	jns    0x40984d
  40984d:	add    BYTE PTR [rax],dl
  40984f:	add    al,0x52
  409851:	je     0x4098bf
  409853:	push   rsi
  409854:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40985b:	outs   dx,BYTE PTR ds:[rsi]
  40985c:	ja     0x4098c7
  40985e:	outs   dx,BYTE PTR ds:[rsi]
  40985f:	add    BYTE PTR fs:[rax],al
  409862:	lahf   
  409863:	add    al,0x53
  409865:	gs je  0x4098bd
  409868:	outs   dx,BYTE PTR ds:[rsi]
  409869:	push   0x6c646e61
  40986e:	gs fs rex.RB js 0x4098d6
  409873:	gs jo  0x4098ea
  409876:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40987d:	gs jb  0x409880
  409880:	lods   al,BYTE PTR ds:[rsi]
  409881:	add    al,0x53
  409883:	ins    BYTE PTR es:[rdi],dx
  409884:	gs gs jo 0x409888
  409888:	mov    edx,0x72655404
  40988d:	ins    DWORD PTR es:[rdi],dx
  40988e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  409895:	outs   dx,DWORD PTR ds:[rsi]
  409896:	movsxd esp,DWORD PTR [rbp+0x73]
  409899:	jae    0x40989b
  40989b:	add    cl,al
  40989d:	add    al,0x54
  40989f:	ins    BYTE PTR es:[rdi],dx
  4098a0:	jae    0x4098e9
  4098a2:	gs je  0x4098fb
  4098a5:	(bad)  
  4098a6:	ins    BYTE PTR es:[rdi],dx
  4098a7:	jne    0x40990e
  4098a9:	add    dh,cl
  4098ab:	add    al,0x55
  4098ad:	outs   dx,BYTE PTR ds:[rsi]
  4098ae:	push   0x6c646e61
  4098b3:	gs fs rex.RB js 0x40991b
  4098b8:	gs jo  0x40992f
  4098bb:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4098c2:	gs jb  0x4098c5
  4098c5:	add    ah,ch
  4098c7:	add    al,0x56
  4098c9:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4098d0:	jb     0x409941
  4098d2:	je     0x409939
  4098d4:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  4098d8:	out    dx,al
  4098d9:	add    al,0x56
  4098db:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4098e2:	jne    0x409949
  4098e4:	jb     0x40995f
  4098e6:	add    BYTE PTR [rax],al
  4098e8:	(bad)  
  4098e9:	add    BYTE PTR [rdi+0x5f],bl
  4098ec:	rex.XB pop r15
  4098ee:	jae    0x409960
  4098f0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4098f4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  4098fb:	ins    BYTE PTR es:[rdi],dx
  4098fc:	gs jb  0x4098ff
  4098ff:	add    BYTE PTR [rsi+0x0],cl
  409902:	pop    rdi
  409903:	pop    rdi
  409904:	fs ins BYTE PTR es:[rdi],dx
  409906:	ins    BYTE PTR es:[rdi],dx
  409907:	outs   dx,DWORD PTR ds:[rsi]
  409908:	outs   dx,BYTE PTR ds:[rsi]
  409909:	gs js  0x409975
  40990c:	je     0x40990e
  40990e:	push   rcx
  40990f:	add    BYTE PTR [rdi+0x5f],bl
  409912:	addr32 gs je 0x409983
  409916:	(bad)  
  409917:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40991e:	push   rdx
  40991f:	add    BYTE PTR [rdi+0x5f],bl
  409922:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  409929:	add    BYTE PTR [rbx+0x0],dl
  40992c:	pop    rdi
  40992d:	pop    rdi
  40992e:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  409935:	movsxd eax,DWORD PTR [rax]
  409937:	add    BYTE PTR [rdx+0x0],bl
  40993a:	pop    rdi
  40993b:	pop    rdi
  40993c:	ins    BYTE PTR es:[rdi],dx
  40993d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409940:	jbe    0x4099a1
  409942:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  409949:	add    BYTE PTR [rdi+0x5f],bl
  40994c:	jae    0x4099b3
  40994e:	je     0x4099af
  409950:	(bad)  
  409951:	jo     0x4099c3
  409953:	pop    rdi
  409954:	je     0x4099cf
  409956:	jo     0x4099bd
  409958:	add    BYTE PTR [rax],al
  40995a:	(bad)  
  40995b:	add    BYTE PTR [rdi+0x5f],bl
  40995e:	jae    0x4099c5
  409960:	je     0x4099d7
  409962:	jae    0x4099c9
  409964:	jb     0x4099d3
  409966:	(bad)  
  409967:	je     0x4099d1
  409969:	gs jb  0x4099de
  40996c:	add    BYTE PTR [rax],al
  40996e:	jno    0x409970
  409970:	pop    rdi
  409971:	(bad)  
  409972:	movsxd ebp,DWORD PTR [rbp+0x64]
  409975:	ins    BYTE PTR es:[rdi],dx
  409976:	outs   dx,BYTE PTR ds:[rsi]
  409977:	add    BYTE PTR [rax+0x0],bh
  40997a:	pop    rdi
  40997b:	(bad)  
  40997c:	ins    DWORD PTR es:[rdi],dx
  40997d:	jae    0x4099e6
  40997f:	pop    rdi
  409980:	gs js  0x4099ec
  409983:	je     0x409985
  409985:	add    BYTE PTR [rdx+0x65635f00],cl
  40998b:	js     0x4099f6
  40998d:	je     0x40998f
  40998f:	add    BYTE PTR [rdx+0x72655f00],bh
  409995:	jb     0x409a05
  409997:	outs   dx,DWORD PTR ds:[rsi]
  409998:	add    BYTE PTR [rax],al
  40999a:	fiadd  DWORD PTR [rax]
  40999c:	pop    rdi
  40999d:	ins    WORD PTR es:[rdi],dx
  40999f:	outs   dx,DWORD PTR ds:[rsi]
  4099a0:	fs add BYTE PTR gs:[rax],al
  4099a4:	sbb    al,BYTE PTR [rcx]
  4099a6:	pop    rdi
  4099a7:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4099ae:	ins    DWORD PTR es:[rdi],dx
  4099af:	add    BYTE PTR [rax+0x6f6c5f01],al
  4099b5:	movsxd ebp,DWORD PTR [rbx+0x0]
  4099b8:	and    eax,0x6e6f5f02
  4099bd:	gs js  0x409a29
  4099c0:	je     0x4099c2
  4099c2:	(bad)
  4099c6:	outs   dx,BYTE PTR ds:[rsi]
  4099c7:	ins    BYTE PTR es:[rdi],dx
  4099c8:	outs   dx,DWORD PTR ds:[rsi]
  4099c9:	movsxd ebp,DWORD PTR [rbx+0x0]
  4099cc:	jg     0x4099d1
  4099ce:	(bad)  
  4099cf:	(bad)  
  4099d0:	outs   dx,DWORD PTR ds:[rsi]
  4099d1:	jb     0x409a47
  4099d3:	add    BYTE PTR [rax+0x6c616303],dl
  4099d9:	ins    BYTE PTR es:[rdi],dx
  4099da:	outs   dx,DWORD PTR ds:[rsi]
  4099db:	movsxd eax,DWORD PTR [rax]
  4099dd:	add    BYTE PTR [rbp+0x69786503],bl
  4099e3:	je     0x4099e5
  4099e5:	add    BYTE PTR [rax+0x72706603],dh
  4099eb:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  4099f2:	data16 jb 0x409a5a
  4099f5:	add    BYTE PTR gs:[rax],al
  4099f8:	ret    0x6603
  4099fb:	ja     0x409a6f
  4099fd:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  409a05:	(bad)  
  409a06:	ins    BYTE PTR es:[rdi],dx
  409a07:	ins    BYTE PTR es:[rdi],dx
  409a08:	outs   dx,DWORD PTR ds:[rsi]
  409a09:	movsxd eax,DWORD PTR [rax]
  409a0b:	add    al,bh
  409a0d:	add    ebp,DWORD PTR [rbp+0x65]
  409a10:	ins    DWORD PTR es:[rdi],dx
  409a11:	movsxd esi,DWORD PTR [rax+0x79]
  409a14:	add    BYTE PTR [rax],al
  409a16:	(bad)  
  409a17:	add    al,0x73
  409a19:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409a20:	sub    eax,DWORD PTR [rbx+rsi*2]
  409a23:	je     0x409a97
  409a25:	ins    BYTE PTR es:[rdi],dx
  409a26:	outs   dx,BYTE PTR gs:[rsi]
  409a28:	add    BYTE PTR [rax],al
  409a2a:	cs add al,0x73
  409a2d:	je     0x409aa1
  409a2f:	outs   dx,BYTE PTR ds:[rsi]
  409a30:	movsxd ebp,DWORD PTR [rbp+0x70]
  409a33:	add    BYTE PTR [rsi+0x4],cl
  409a36:	jbe    0x409a9e
  409a38:	jo     0x409aac
  409a3a:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  409a41:	nop
  409a42:	add    BYTE PTR [rax],al
  409a44:	add    BYTE PTR [rax-0x70000000],dl
  409a4a:	add    BYTE PTR [rax],al
  409a4c:	add    BYTE PTR [rax-0x70000000],dl
  409a52:	add    BYTE PTR [rax],al
  409a54:	add    BYTE PTR [rax-0x70000000],dl
  409a5a:	add    BYTE PTR [rax],al
  409a5c:	add    BYTE PTR [rax-0x70000000],dl
  409a62:	add    BYTE PTR [rax],al
  409a64:	add    BYTE PTR [rax-0x70000000],dl
  409a6a:	add    BYTE PTR [rax],al
  409a6c:	add    BYTE PTR [rax-0x70000000],dl
  409a72:	add    BYTE PTR [rax],al
  409a74:	add    BYTE PTR [rax-0x70000000],dl
  409a7a:	add    BYTE PTR [rax],al
  409a7c:	add    BYTE PTR [rax-0x70000000],dl
  409a82:	add    BYTE PTR [rax],al
  409a84:	ins    BYTE PTR es:[rdi],dx
  409a85:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  409a8c:	xor    ch,BYTE PTR [rsi]
  409a8e:	xor    BYTE PTR [rip+0x6c642e30],ch        # 0x6ca4c8c4
  409a94:	ins    BYTE PTR es:[rdi],dx
  409a95:	add    BYTE PTR [rax],al
  409a97:	add    BYTE PTR [rax+rdx*4],dl
  409a9a:	add    BYTE PTR [rax],al
  409a9c:	adc    al,0x90
  409a9e:	add    BYTE PTR [rax],al
  409aa0:	adc    al,0x90
  409aa2:	add    BYTE PTR [rax],al
  409aa4:	adc    al,0x90
  409aa6:	add    BYTE PTR [rax],al
  409aa8:	ins    BYTE PTR es:[rdi],dx
  409aa9:	imul   esp,DWORD PTR [rdx+0x67],0x75646f6d
  409ab0:	ins    BYTE PTR es:[rdi],dx
  409ab1:	gs sub eax,0x2d302e32
  409ab7:	xor    BYTE PTR [rsi],ch
  409ab9:	fs ins BYTE PTR es:[rdi],dx
  409abb:	ins    BYTE PTR es:[rdi],dx
  409abc:	add    BYTE PTR [rax],al
  409abe:	add    BYTE PTR [rax],al
  409ac0:	sub    BYTE PTR [rax+0x696c0000],dl
  409ac6:	(bad)  
  409ac7:	outs   dx,DWORD PTR ds:[esi]
  409ac9:	(bad)  
  409aca:	push   0x65
  409acc:	movsxd esi,DWORD PTR [rbp+rbp*1+0x32]
  409ad0:	xor    BYTE PTR cs:[rip+0x6c642e30],ch        # 0x6ca4c907
  409ad7:	ins    BYTE PTR es:[rdi],dx
  409ad8:	add    BYTE PTR [rax],al
  409ada:	add    BYTE PTR [rax],al
  409adc:	cmp    al,0x90
  409ade:	add    BYTE PTR [rax],al
  409ae0:	cmp    al,0x90
  409ae2:	add    BYTE PTR [rax],al
  409ae4:	cmp    al,0x90
  409ae6:	add    BYTE PTR [rax],al
  409ae8:	cmp    al,0x90
  409aea:	add    BYTE PTR [rax],al
  409aec:	cmp    al,0x90
  409aee:	add    BYTE PTR [rax],al
  409af0:	cmp    al,0x90
  409af2:	add    BYTE PTR [rax],al
  409af4:	cmp    al,0x90
  409af6:	add    BYTE PTR [rax],al
  409af8:	cmp    al,0x90
  409afa:	add    BYTE PTR [rax],al
  409afc:	cmp    al,0x90
  409afe:	add    BYTE PTR [rax],al
  409b00:	cmp    al,0x90
  409b02:	add    BYTE PTR [rax],al
  409b04:	cmp    al,0x90
  409b06:	add    BYTE PTR [rax],al
  409b08:	cmp    al,0x90
  409b0a:	add    BYTE PTR [rax],al
  409b0c:	cmp    al,0x90
  409b0e:	add    BYTE PTR [rax],al
  409b10:	cmp    al,0x90
  409b12:	add    BYTE PTR [rax],al
  409b14:	cmp    al,0x90
  409b16:	add    BYTE PTR [rax],al
  409b18:	cmp    al,0x90
  409b1a:	add    BYTE PTR [rax],al
  409b1c:	cmp    al,0x90
  409b1e:	add    BYTE PTR [rax],al
  409b20:	cmp    al,0x90
  409b22:	add    BYTE PTR [rax],al
  409b24:	cmp    al,0x90
  409b26:	add    BYTE PTR [rax],al
  409b28:	cmp    al,0x90
  409b2a:	add    BYTE PTR [rax],al
  409b2c:	cmp    al,0x90
  409b2e:	add    BYTE PTR [rax],al
  409b30:	cmp    al,0x90
  409b32:	add    BYTE PTR [rax],al
  409b34:	cmp    al,0x90
  409b36:	add    BYTE PTR [rax],al
  409b38:	rex.WXB
  409b39:	rex.RB push r10
  409b3b:	rex.WRX
  409b3c:	rex.RB
  409b3d:	xor    r14,QWORD PTR [rdx]
  409b40:	cs fs ins BYTE PTR es:[rdi],dx
  409b43:	ins    BYTE PTR es:[rdi],dx
  409b44:	add    BYTE PTR [rax],al
  409b46:	add    BYTE PTR [rax],al
  409b48:	push   rax
  409b49:	nop
  409b4a:	add    BYTE PTR [rax],al
  409b4c:	push   rax
  409b4d:	nop
  409b4e:	add    BYTE PTR [rax],al
  409b50:	push   rax
  409b51:	nop
  409b52:	add    BYTE PTR [rax],al
  409b54:	push   rax
  409b55:	nop
  409b56:	add    BYTE PTR [rax],al
  409b58:	push   rax
  409b59:	nop
  409b5a:	add    BYTE PTR [rax],al
  409b5c:	push   rax
  409b5d:	nop
  409b5e:	add    BYTE PTR [rax],al
  409b60:	push   rax
  409b61:	nop
  409b62:	add    BYTE PTR [rax],al
  409b64:	push   rax
  409b65:	nop
  409b66:	add    BYTE PTR [rax],al
  409b68:	push   rax
  409b69:	nop
  409b6a:	add    BYTE PTR [rax],al
  409b6c:	push   rax
  409b6d:	nop
  409b6e:	add    BYTE PTR [rax],al
  409b70:	push   rax
  409b71:	nop
  409b72:	add    BYTE PTR [rax],al
  409b74:	push   rax
  409b75:	nop
  409b76:	add    BYTE PTR [rax],al
  409b78:	push   rax
  409b79:	nop
  409b7a:	add    BYTE PTR [rax],al
  409b7c:	push   rax
  409b7d:	nop
  409b7e:	add    BYTE PTR [rax],al
  409b80:	push   rax
  409b81:	nop
  409b82:	add    BYTE PTR [rax],al
  409b84:	push   rax
  409b85:	nop
  409b86:	add    BYTE PTR [rax],al
  409b88:	push   rax
  409b89:	nop
  409b8a:	add    BYTE PTR [rax],al
  409b8c:	push   rax
  409b8d:	nop
  409b8e:	add    BYTE PTR [rax],al
  409b90:	push   rax
  409b91:	nop
  409b92:	add    BYTE PTR [rax],al
  409b94:	push   rax
  409b95:	nop
  409b96:	add    BYTE PTR [rax],al
  409b98:	push   rax
  409b99:	nop
  409b9a:	add    BYTE PTR [rax],al
  409b9c:	push   rax
  409b9d:	nop
  409b9e:	add    BYTE PTR [rax],al
  409ba0:	push   rax
  409ba1:	nop
  409ba2:	add    BYTE PTR [rax],al
  409ba4:	push   rax
  409ba5:	nop
  409ba6:	add    BYTE PTR [rax],al
  409ba8:	push   rax
  409ba9:	nop
  409baa:	add    BYTE PTR [rax],al
  409bac:	push   rax
  409bad:	nop
  409bae:	add    BYTE PTR [rax],al
  409bb0:	push   rax
  409bb1:	nop
  409bb2:	add    BYTE PTR [rax],al
  409bb4:	push   rax
  409bb5:	nop
  409bb6:	add    BYTE PTR [rax],al
  409bb8:	push   rax
  409bb9:	nop
  409bba:	add    BYTE PTR [rax],al
  409bbc:	ins    DWORD PTR es:[rdi],dx
  409bbd:	jae    0x409c35
  409bbf:	movsxd esi,DWORD PTR [rdx+0x74]
  409bc2:	cs fs ins BYTE PTR es:[rdi],dx
  409bc5:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax+0x17],dh
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x4019],ah
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax+0x19],dh
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
