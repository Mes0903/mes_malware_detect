
dc4a4aabaa2db2cd79d01d12e35ae7402a4aa8193660141c30ee216cf27f189a.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x506b5]        # 0x4516d0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x506b6]        # 0x4516e0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x506b9]        # 0x4516f0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x5067c]        # 0x4516c0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x5040f]        # 0x451460
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x50651]        # 0x4516b0
  40105f:	mov    DWORD PTR [rip+0x57fa3],edx        # 0x459008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x43f208
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x438d70
  401081:	mov    rdx,QWORD PTR [rip+0x50478]        # 0x451500
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x5045e]        # 0x4514f0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x504f4]        # 0x451590
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x503fb]        # 0x4514a0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x438950
  4010af:	mov    rax,QWORD PTR [rip+0x5035a]        # 0x451410
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x43f208
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x37b29]        # 0x438c50
  401127:	call   0x438c40
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x50465]        # 0x4515d0
  40116b:	lea    r8,[rip+0x57ea6]        # 0x459018
  401172:	lea    rdx,[rip+0x57ea7]        # 0x459020
  401179:	lea    rcx,[rip+0x57ea8]        # 0x459028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x57e78],eax        # 0x459000
  401188:	lea    rax,[rip+0x57e71]        # 0x459000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x503e5]        # 0x451580
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x43f220
  4011a3:	mov    DWORD PTR [rip+0x57e67],eax        # 0x459010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x504ea]        # 0x4516b0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x502db]        # 0x4514d0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x5a3b2]        # 0x45b5b4
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x502b7]        # 0x4514e0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x57dba],0x1        # 0x459004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x501ec]        # 0x451450
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x438f60
  40127d:	lea    rcx,[rip+0x3827c]        # 0x439500
  401284:	call   QWORD PTR [rip+0x5a322]        # 0x45b5ac
  40128a:	mov    rdx,QWORD PTR [rip+0x5022f]        # 0x4514c0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x439410
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x43f250
  4012a5:	call   0x438d50
  4012aa:	mov    rax,QWORD PTR [rip+0x501af]        # 0x451460
  4012b1:	mov    QWORD PTR [rip+0x596c0],rax        # 0x45a978
  4012b8:	mov    rax,QWORD PTR [rip+0x501d1]        # 0x451490
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x59659],rax        # 0x45a970
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x40cca],eax        # 0x442000
  401336:	mov    r12d,DWORD PTR [rip+0x57ceb]        # 0x459028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x43f0c0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x57cc2]        # 0x459020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x43f028
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x43f0c0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x43f0a8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x57c6a],rbp        # 0x459020
  4013b6:	call   0x438920
  4013bb:	mov    rax,QWORD PTR [rip+0x500ae]        # 0x451470
  4013c2:	mov    rdx,QWORD PTR [rip+0x57c4f]        # 0x459018
  4013c9:	mov    ecx,DWORD PTR [rip+0x57c59]        # 0x459028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x57c3c]        # 0x459018
  4013dc:	mov    rdx,QWORD PTR [rip+0x57c3d]        # 0x459020
  4013e3:	call   0x43f4e0
  4013e8:	mov    ecx,DWORD PTR [rip+0x57c1a]        # 0x459008
  4013ee:	mov    DWORD PTR [rip+0x57c18],eax        # 0x45900c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x57c02]        # 0x459004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x43f1f0
  40140b:	mov    eax,DWORD PTR [rip+0x57bfb]        # 0x45900c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x500a9]        # 0x4514e0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x43f1f8
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x500cd]        # 0x451530
  401463:	mov    rcx,QWORD PTR [rip+0x500b6]        # 0x451520
  40146a:	call   0x43f1c0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x5a0b3]        # 0x45b54c
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x500a9]        # 0x451550
  4014a7:	mov    rcx,QWORD PTR [rip+0x50092]        # 0x451540
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x43f1c0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x43f158
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x501d5]        # 0x4516b0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x438960
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x501a5]        # 0x4516b0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x438960
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x28
  401536:	test   ecx,ecx
  401538:	je     0x401678
  40153e:	call   QWORD PTR [rip+0x5a0d8]        # 0x45b61c
  401544:	lea    rbx,[rax+0x60]
  401548:	mov    esi,0x1
  40154d:	lea    rdx,[rip+0x41aac]        # 0x443000
  401554:	mov    rcx,rbx
  401557:	call   0x403990
  40155c:	lea    rdx,[rip+0x41ac5]        # 0x443028
  401563:	mov    rcx,rbx
  401566:	call   0x403990
  40156b:	lea    rdx,[rip+0x41ade]        # 0x443050
  401572:	mov    rcx,rbx
  401575:	call   0x403990
  40157a:	lea    rdx,[rip+0x41b0f]        # 0x443090
  401581:	mov    rcx,rbx
  401584:	call   0x403990
  401589:	lea    rdx,[rip+0x41b50]        # 0x4430e0
  401590:	mov    rcx,rbx
  401593:	call   0x403990
  401598:	lea    rdx,[rip+0x41b91]        # 0x443130
  40159f:	mov    rcx,rbx
  4015a2:	call   0x403990
  4015a7:	lea    rdx,[rip+0x41c02]        # 0x4431b0
  4015ae:	mov    rcx,rbx
  4015b1:	call   0x403990
  4015b6:	lea    rdx,[rip+0x41c33]        # 0x4431f0
  4015bd:	mov    rcx,rbx
  4015c0:	call   0x403990
  4015c5:	lea    rdx,[rip+0x41c6c]        # 0x443238
  4015cc:	mov    rcx,rbx
  4015cf:	call   0x403990
  4015d4:	lea    rdx,[rip+0x41cb5]        # 0x443290
  4015db:	mov    rcx,rbx
  4015de:	call   0x403990
  4015e3:	lea    rdx,[rip+0x41d26]        # 0x443310
  4015ea:	mov    rcx,rbx
  4015ed:	call   0x403990
  4015f2:	lea    rdx,[rip+0x41d5f]        # 0x443358
  4015f9:	mov    rcx,rbx
  4015fc:	call   0x403990
  401601:	lea    rdx,[rip+0x41d90]        # 0x443398
  401608:	mov    rcx,rbx
  40160b:	call   0x403990
  401610:	lea    rdx,[rip+0x41dd9]        # 0x4433f0
  401617:	mov    rcx,rbx
  40161a:	call   0x403990
  40161f:	lea    rdx,[rip+0x41e12]        # 0x443438
  401626:	mov    rcx,rbx
  401629:	call   0x403990
  40162e:	lea    rdx,[rip+0x41e4b]        # 0x443480
  401635:	mov    rcx,rbx
  401638:	call   0x403990
  40163d:	lea    rdx,[rip+0x41e7c]        # 0x4434c0
  401644:	mov    rcx,rbx
  401647:	call   0x403990
  40164c:	lea    rdx,[rip+0x41eb5]        # 0x443508
  401653:	mov    rcx,rbx
  401656:	call   0x403990
  40165b:	mov    r8,QWORD PTR [rip+0x4ff9e]        # 0x451600
  401662:	lea    rdx,[rip+0x41ee7]        # 0x443550
  401669:	mov    rcx,rbx
  40166c:	call   0x403990
  401671:	mov    ecx,esi
  401673:	call   0x43f158
  401678:	call   QWORD PTR [rip+0x59f9e]        # 0x45b61c
  40167e:	xor    esi,esi
  401680:	lea    rbx,[rax+0x30]
  401684:	jmp    0x40154d
  401689:	nop    DWORD PTR [rax+0x0]
  401690:	push   rbp
  401691:	push   rdi
  401692:	push   rsi
  401693:	push   rbx
  401694:	sub    rsp,0x28
  401698:	mov    edx,DWORD PTR [rcx+0x28]
  40169b:	mov    rsi,QWORD PTR [rcx+0x20]
  40169f:	mov    rbp,rcx
  4016a2:	test   edx,edx
  4016a4:	lea    eax,[rdx-0x1]
  4016a7:	je     0x40171c
  4016a9:	lea    rax,[rax+rax*8+0x9]
  4016ae:	lea    rdi,[rsi+rax*8]
  4016b2:	mov    rcx,QWORD PTR [rsi]
  4016b5:	test   rcx,rcx
  4016b8:	je     0x4016d1
  4016ba:	nop    WORD PTR [rax+rax*1+0x0]
  4016c0:	mov    rbx,QWORD PTR [rcx+0x30]
  4016c4:	call   0x43f100
  4016c9:	test   rbx,rbx
  4016cc:	mov    rcx,rbx
  4016cf:	jne    0x4016c0
  4016d1:	add    rsi,0x48
  4016d5:	cmp    rsi,rdi
  4016d8:	jne    0x4016b2
  4016da:	mov    rcx,QWORD PTR [rbp+0x20]
  4016de:	call   0x43f100
  4016e3:	mov    rcx,QWORD PTR [rbp+0x30]
  4016e7:	call   0x43f100
  4016ec:	mov    eax,DWORD PTR [rip+0x579aa]        # 0x45909c
  4016f2:	test   eax,eax
  4016f4:	je     0x40170b
  4016f6:	mov    rax,QWORD PTR [rbp+0x8]
  4016fa:	mov    rcx,QWORD PTR [rbp+0x0]
  4016fe:	cmp    rax,rcx
  401701:	je     0x40170f
  401703:	mov    rcx,rax
  401706:	call   0x43f100
  40170b:	mov    rcx,QWORD PTR [rbp+0x0]
  40170f:	add    rsp,0x28
  401713:	pop    rbx
  401714:	pop    rsi
  401715:	pop    rdi
  401716:	pop    rbp
  401717:	jmp    0x43f100
  40171c:	mov    rcx,rsi
  40171f:	jmp    0x4016de
  401721:	nop    DWORD PTR [rax+rax*1+0x0]
  401726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401730:	push   rsi
  401731:	push   rbx
  401732:	sub    rsp,0x28
  401736:	mov    edx,DWORD PTR [rip+0x579f0]        # 0x45912c
  40173c:	mov    ebx,DWORD PTR [rip+0x579ee]        # 0x459130
  401742:	mov    eax,DWORD PTR [rip+0x579f4]        # 0x45913c
  401748:	mov    esi,ecx
  40174a:	sub    ebx,edx
  40174c:	test   eax,eax
  40174e:	jle    0x40184e
  401754:	cmp    ebx,ecx
  401756:	jb     0x401774
  401758:	mov    rax,QWORD PTR [rip+0x579f1]        # 0x459150
  40175f:	mov    ecx,edx
  401761:	add    esi,edx
  401763:	mov    DWORD PTR [rip+0x579c3],esi        # 0x45912c
  401769:	lea    rax,[rax+rcx*4]
  40176d:	add    rsp,0x28
  401771:	pop    rbx
  401772:	pop    rsi
  401773:	ret    
  401774:	mov    r9,QWORD PTR [rip+0x579d5]        # 0x459150
  40177b:	add    DWORD PTR [rip+0x579a7],edx        # 0x459128
  401781:	lea    r8d,[rbx*4+0x0]
  401789:	lea    rdx,[r9+rdx*4]
  40178d:	mov    rcx,r9
  401790:	call   0x43f0a0
  401795:	mov    r8,QWORD PTR [rip+0x579ac]        # 0x459148
  40179c:	mov    r9,rax
  40179f:	lea    eax,[rsi+rbx*1]
  4017a2:	mov    DWORD PTR [rip+0x57980],0x0        # 0x45912c
  4017ac:	mov    DWORD PTR [rip+0x5797e],ebx        # 0x459130
  4017b2:	cmp    rax,r8
  4017b5:	ja     0x4017f2
  4017b7:	lea    rcx,[r9+rbx*4]
  4017bb:	mov    r9,QWORD PTR [rip+0x5795e]        # 0x459120
  4017c2:	sub    r8d,ebx
  4017c5:	shl    r8d,0x2
  4017c9:	mov    edx,0x1
  4017ce:	call   0x43f108
  4017d3:	shr    rax,0x2
  4017d7:	add    eax,DWORD PTR [rip+0x57953]        # 0x459130
  4017dd:	cmp    esi,eax
  4017df:	mov    DWORD PTR [rip+0x5794b],eax        # 0x459130
  4017e5:	ja     0x401835
  4017e7:	mov    edx,DWORD PTR [rip+0x5793f]        # 0x45912c
  4017ed:	jmp    0x401758
  4017f2:	test   r8,r8
  4017f5:	mov    edx,0x400
  4017fa:	mov    rcx,r9
  4017fd:	cmove  r8,rdx
  401801:	add    r8,rax
  401804:	lea    rax,[r8+r8*1]
  401808:	lea    rdx,[r8*8+0x0]
  401810:	mov    QWORD PTR [rip+0x57931],rax        # 0x459148
  401817:	call   0x438650
  40181c:	mov    r8,QWORD PTR [rip+0x57925]        # 0x459148
  401823:	mov    QWORD PTR [rip+0x57926],rax        # 0x459150
  40182a:	mov    r9,rax
  40182d:	mov    ebx,DWORD PTR [rip+0x578fd]        # 0x459130
  401833:	jmp    0x4017b7
  401835:	sub    esi,eax
  401837:	mov    DWORD PTR [rip+0x578ef],0x0        # 0x459130
  401841:	add    DWORD PTR [rip+0x578ed],esi        # 0x459134
  401847:	xor    eax,eax
  401849:	jmp    0x40176d
  40184e:	lea    r8,[rip+0x4254b]        # 0x443da0
  401855:	lea    rcx,[rip+0x41d2c]        # 0x443588
  40185c:	mov    edx,0x1ea
  401861:	call   0x4039c0
  401866:	nop
  401867:	nop    WORD PTR [rax+rax*1+0x0]
  401870:	push   r14
  401872:	push   r13
  401874:	push   r12
  401876:	push   rbp
  401877:	push   rdi
  401878:	push   rsi
  401879:	push   rbx
  40187a:	sub    rsp,0x30
  40187e:	mov    rdx,rcx
  401881:	mov    QWORD PTR [rsp+0x28],rdx
  401886:	call   0x43f028
  40188b:	lea    rcx,[rax+0x1]
  40188f:	call   0x4385d0
  401894:	mov    rdx,QWORD PTR [rsp+0x28]
  401899:	mov    rbx,rax
  40189c:	mov    rdi,rax
  40189f:	movzx  ecx,BYTE PTR [rdx]
  4018a2:	test   cl,cl
  4018a4:	je     0x4019b0
  4018aa:	cmp    BYTE PTR [rdx+0x1],0x3a
  4018ae:	mov    rsi,rax
  4018b1:	je     0x401a11
  4018b7:	mov    r13d,ecx
  4018ba:	mov    rdi,rsi
  4018bd:	xor    eax,eax
  4018bf:	nop
  4018c0:	cmp    r13b,0x5c
  4018c4:	sete   r12b
  4018c8:	cmp    r13b,0x2f
  4018cc:	sete   r8b
  4018d0:	or     r12b,r8b
  4018d3:	jne    0x4019c5
  4018d9:	mov    r10,rdx
  4018dc:	jmp    0x4018f9
  4018de:	xchg   ax,ax
  4018e0:	cmp    r9b,0x5c
  4018e4:	sete   r11b
  4018e8:	cmp    r9b,0x2f
  4018ec:	sete   r8b
  4018f0:	or     r8b,r11b
  4018f3:	jne    0x401984
  4018f9:	add    r10,0x1
  4018fd:	movzx  r9d,BYTE PTR [r10]
  401901:	test   r9b,r9b
  401904:	jne    0x4018e0
  401906:	mov    r14,r10
  401909:	xor    r13d,r13d
  40190c:	mov    rbp,r10
  40190f:	sub    r14,rdx
  401912:	cmp    r14,0x1
  401916:	je     0x40199d
  40191c:	cmp    r14,0x2
  401920:	jne    0x401931
  401922:	cmp    cl,0x2e
  401925:	jne    0x401931
  401927:	cmp    BYTE PTR [rdx+0x1],0x2e
  40192b:	je     0x4019d3
  401931:	test   eax,eax
  401933:	je     0x40193c
  401935:	mov    BYTE PTR [rdi],0x2f
  401938:	add    rdi,0x1
  40193c:	mov    rcx,rdi
  40193f:	mov    r8,r14
  401942:	add    rdi,r14
  401945:	call   0x43f0a8
  40194a:	mov    rdx,rbp
  40194d:	mov    eax,0x1
  401952:	test   r12b,r12b
  401955:	je     0x401977
  401957:	nop    WORD PTR [rax+rax*1+0x0]
  401960:	add    rdx,0x1
  401964:	movzx  r9d,BYTE PTR [rdx]
  401968:	cmp    r9b,0x5c
  40196c:	je     0x401960
  40196e:	cmp    r9b,0x2f
  401972:	je     0x401960
  401974:	mov    r13d,r9d
  401977:	test   r13b,r13b
  40197a:	je     0x4019b0
  40197c:	mov    ecx,r13d
  40197f:	jmp    0x4018c0
  401984:	mov    r14,r10
  401987:	mov    rbp,r10
  40198a:	mov    r13d,r9d
  40198d:	sub    r14,rdx
  401990:	mov    r12d,r8d
  401993:	cmp    r14,0x1
  401997:	jne    0x40191c
  40199d:	cmp    cl,0x2e
  4019a0:	jne    0x401931
  4019a2:	mov    rdx,r10
  4019a5:	jmp    0x401952
  4019a7:	mov    rdi,rsi
  4019aa:	nop    WORD PTR [rax+rax*1+0x0]
  4019b0:	mov    rax,rbx
  4019b3:	mov    BYTE PTR [rdi],0x0
  4019b6:	add    rsp,0x30
  4019ba:	pop    rbx
  4019bb:	pop    rsi
  4019bc:	pop    rdi
  4019bd:	pop    rbp
  4019be:	pop    r12
  4019c0:	pop    r13
  4019c2:	pop    r14
  4019c4:	ret    
  4019c5:	mov    r13d,ecx
  4019c8:	mov    rbp,rdx
  4019cb:	xor    r14d,r14d
  4019ce:	jmp    0x401931
  4019d3:	cmp    rsi,rdi
  4019d6:	mov    BYTE PTR [rdi],0x0
  4019d9:	mov    rcx,rdi
  4019dc:	jne    0x4019f5
  4019de:	movsxd rcx,eax
  4019e1:	lea    rsi,[rsi+rcx*1+0x2]
  4019e6:	jmp    0x401931
  4019eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4019f0:	cmp    BYTE PTR [rcx],0x2f
  4019f3:	je     0x401a2f
  4019f5:	sub    rcx,0x1
  4019f9:	cmp    rsi,rcx
  4019fc:	jne    0x4019f0
  4019fe:	mov    rdi,rsi
  401a01:	xor    eax,eax
  401a03:	cmp    rbx,rcx
  401a06:	mov    rdx,r10
  401a09:	setne  al
  401a0c:	jmp    0x401952
  401a11:	mov    BYTE PTR [rax],cl
  401a13:	movzx  ecx,BYTE PTR [rdx+0x2]
  401a17:	lea    rsi,[rbx+0x2]
  401a1b:	mov    BYTE PTR [rax+0x1],0x3a
  401a1f:	lea    rax,[rdx+0x2]
  401a23:	test   cl,cl
  401a25:	je     0x4019a7
  401a27:	mov    rdx,rax
  401a2a:	jmp    0x4018b7
  401a2f:	mov    rdi,rcx
  401a32:	jmp    0x401a01
  401a34:	xchg   ax,ax
  401a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a40:	push   rdi
  401a41:	push   rsi
  401a42:	push   rbx
  401a43:	sub    rsp,0x20
  401a47:	mov    eax,DWORD PTR [rip+0x5761f]        # 0x45906c
  401a4d:	mov    rdi,rdx
  401a50:	test   eax,eax
  401a52:	je     0x401b19
  401a58:	movzx  eax,BYTE PTR [rcx]
  401a5b:	xor    edx,edx
  401a5d:	test   al,al
  401a5f:	jne    0x401af0
  401a65:	test   dl,dl
  401a67:	je     0x401b46
  401a6d:	cmp    dl,0x2f
  401a70:	je     0x401b12
  401a76:	mov    rax,rcx
  401a79:	jmp    0x401a86
  401a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  401a80:	cmp    r8b,0x2f
  401a84:	je     0x401a93
  401a86:	add    rax,0x1
  401a8a:	movzx  r8d,BYTE PTR [rax]
  401a8e:	test   r8b,r8b
  401a91:	jne    0x401a80
  401a93:	mov    rsi,rax
  401a96:	mov    rbx,rax
  401a99:	sub    rsi,rcx
  401a9c:	cmp    rsi,0x2
  401aa0:	jne    0x401aa7
  401aa2:	cmp    dl,0x2e
  401aa5:	je     0x401ae1
  401aa7:	mov    rdx,rcx
  401aaa:	mov    r8,rsi
  401aad:	mov    rcx,rdi
  401ab0:	call   0x43f0a8
  401ab5:	lea    rax,[rdi+rsi*1]
  401ab9:	cmp    BYTE PTR [rbx],0x0
  401abc:	jne    0x401ad0
  401abe:	add    rsp,0x20
  401ac2:	pop    rbx
  401ac3:	pop    rsi
  401ac4:	pop    rdi
  401ac5:	ret    
  401ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ad0:	mov    BYTE PTR [rax],0x23
  401ad3:	lea    rdi,[rax+0x1]
  401ad7:	lea    rcx,[rbx+0x1]
  401adb:	movzx  edx,BYTE PTR [rbx+0x1]
  401adf:	jmp    0x401a65
  401ae1:	cmp    BYTE PTR [rcx+0x1],0x2e
  401ae5:	jne    0x401aa7
  401ae7:	lea    rax,[rdi+0x1]
  401aeb:	mov    BYTE PTR [rdi],0x5e
  401aee:	jmp    0x401ab9
  401af0:	cmp    BYTE PTR [rcx+0x1],0x3a
  401af4:	mov    edx,eax
  401af6:	jne    0x401a65
  401afc:	mov    BYTE PTR [rdi],al
  401afe:	mov    BYTE PTR [rdi+0x1],0x7e
  401b02:	add    rcx,0x2
  401b06:	movzx  edx,BYTE PTR [rcx]
  401b09:	add    rdi,0x2
  401b0d:	jmp    0x401a65
  401b12:	mov    rbx,rcx
  401b15:	xor    esi,esi
  401b17:	jmp    0x401aa7
  401b19:	call   0x438060
  401b1e:	mov    rbx,rax
  401b21:	mov    rcx,rax
  401b24:	call   0x43f028
  401b29:	mov    rdx,rbx
  401b2c:	mov    rsi,rax
  401b2f:	mov    r8,rax
  401b32:	mov    rcx,rdi
  401b35:	call   0x43f0a8
  401b3a:	lea    rax,[rdi+rsi*1]
  401b3e:	add    rsp,0x20
  401b42:	pop    rbx
  401b43:	pop    rsi
  401b44:	pop    rdi
  401b45:	ret    
  401b46:	mov    rax,rdi
  401b49:	jmp    0x401abe
  401b4e:	xchg   ax,ax
  401b50:	mov    rax,QWORD PTR [rip+0x59b55]        # 0x45b6ac
  401b57:	mov    rdx,QWORD PTR [rdx]
  401b5a:	rex.W jmp rax
  401b5d:	nop    DWORD PTR [rax]
  401b60:	push   r14
  401b62:	push   r13
  401b64:	push   r12
  401b66:	push   rbp
  401b67:	push   rdi
  401b68:	push   rsi
  401b69:	push   rbx
  401b6a:	sub    rsp,0x70
  401b6e:	lea    rax,[rip+0x41a5f]        # 0x4435d4
  401b75:	mov    r8d,DWORD PTR [rip+0x57570]        # 0x4590ec
  401b7c:	mov    rdx,QWORD PTR [rip+0x5756d]        # 0x4590f0
  401b83:	test   rcx,rcx
  401b86:	mov    rbx,rcx
  401b89:	mov    r9d,0x10
  401b8f:	cmove  rbx,rax
  401b93:	lea    rax,[rip+0xffffffffffffffb6]        # 0x401b50
  401b9a:	mov    rcx,rbx
  401b9d:	mov    QWORD PTR [rsp+0x20],rax
  401ba2:	call   0x43f168
  401ba7:	test   rax,rax
  401baa:	je     0x401c30
  401bb0:	mov    edx,DWORD PTR [rax+0x8]
  401bb3:	lea    rsi,[rdx+rdx*4]
  401bb7:	mov    rbp,rdx
  401bba:	shl    rsi,0x4
  401bbe:	mov    rdx,QWORD PTR [rip+0x5753b]        # 0x459100
  401bc5:	mov    rax,QWORD PTR [rip+0x57504]        # 0x4590d0
  401bcc:	cmp    QWORD PTR [rdx+rsi*1+0x8],rax
  401bd1:	jg     0x401be4
  401bd3:	mov    eax,ebp
  401bd5:	add    rsp,0x70
  401bd9:	pop    rbx
  401bda:	pop    rsi
  401bdb:	pop    rdi
  401bdc:	pop    rbp
  401bdd:	pop    r12
  401bdf:	pop    r13
  401be1:	pop    r14
  401be3:	ret    
  401be4:	mov    r12,QWORD PTR [rip+0x574dd]        # 0x4590c8
  401beb:	mov    rdi,QWORD PTR [rip+0x59a2a]        # 0x45b61c
  401bf2:	call   rdi
  401bf4:	lea    rdx,[rip+0x419e5]        # 0x4435e0
  401bfb:	lea    rcx,[rax+0x60]
  401bff:	mov    r8,rbx
  401c02:	mov    r9,r12
  401c05:	call   0x403990
  401c0a:	mov    eax,DWORD PTR [rip+0x57454]        # 0x459064
  401c10:	test   eax,eax
  401c12:	je     0x401cd0
  401c18:	mov    rax,QWORD PTR [rip+0x574e1]        # 0x459100
  401c1f:	mov    QWORD PTR [rax+rsi*1+0x8],0x0
  401c28:	jmp    0x401bd3
  401c2a:	nop    WORD PTR [rax+rax*1+0x0]
  401c30:	mov    edi,DWORD PTR [rip+0x574b6]        # 0x4590ec
  401c36:	mov    eax,DWORD PTR [rip+0x574ac]        # 0x4590e8
  401c3c:	lea    edx,[rdi+0x2]
  401c3f:	cmp    edx,eax
  401c41:	ja     0x401cf1
  401c47:	mov    rcx,rbx
  401c4a:	call   0x401870
  401c4f:	mov    r8d,DWORD PTR [rip+0x57496]        # 0x4590ec
  401c56:	mov    r13,rax
  401c59:	mov    rdx,QWORD PTR [rip+0x57490]        # 0x4590f0
  401c60:	lea    rax,[rip+0xfffffffffffffee9]        # 0x401b50
  401c67:	mov    r9d,0x10
  401c6d:	mov    rcx,r13
  401c70:	mov    QWORD PTR [rsp+0x20],rax
  401c75:	call   0x43f168
  401c7a:	test   rax,rax
  401c7d:	mov    r12,rax
  401c80:	je     0x401d70
  401c86:	mov    eax,DWORD PTR [rax+0x8]
  401c89:	lea    rsi,[rax+rax*4]
  401c8d:	mov    rbp,rax
  401c90:	shl    rsi,0x4
  401c94:	mov    rdx,QWORD PTR [r12]
  401c98:	mov    rcx,rbx
  401c9b:	call   QWORD PTR [rip+0x59a0b]        # 0x45b6ac
  401ca1:	test   eax,eax
  401ca3:	jne    0x401d40
  401ca9:	mov    edx,DWORD PTR [rip+0x5743d]        # 0x4590ec
  401caf:	mov    rcx,QWORD PTR [rip+0x5743a]        # 0x4590f0
  401cb6:	lea    r9,[rip+0x1f3]        # 0x401eb0
  401cbd:	mov    r8d,0x10
  401cc3:	call   0x43f088
  401cc8:	jmp    0x401bbe
  401ccd:	nop    DWORD PTR [rax]
  401cd0:	call   rdi
  401cd2:	lea    rdx,[rip+0x41937]        # 0x443610
  401cd9:	lea    rcx,[rax+0x60]
  401cdd:	call   0x403990
  401ce2:	mov    DWORD PTR [rip+0x57378],0x1        # 0x459064
  401cec:	jmp    0x401c18
  401cf1:	lea    ecx,[rax+rax*1]
  401cf4:	mov    DWORD PTR [rip+0x573ee],ecx        # 0x4590e8
  401cfa:	shl    rcx,0x4
  401cfe:	call   0x4385d0
  401d03:	mov    r8d,DWORD PTR [rip+0x573e2]        # 0x4590ec
  401d0a:	mov    rdi,QWORD PTR [rip+0x573df]        # 0x4590f0
  401d11:	mov    rcx,rax
  401d14:	mov    rsi,rax
  401d17:	mov    rdx,rdi
  401d1a:	shl    r8,0x4
  401d1e:	call   0x43f0a8
  401d23:	mov    rcx,rdi
  401d26:	call   0x43f100
  401d2b:	mov    QWORD PTR [rip+0x573be],rsi        # 0x4590f0
  401d32:	jmp    0x401c47
  401d37:	nop    WORD PTR [rax+rax*1+0x0]
  401d40:	mov    eax,DWORD PTR [rip+0x573a6]        # 0x4590ec
  401d46:	mov    rcx,rbx
  401d49:	lea    edx,[rax+0x1]
  401d4c:	shl    rax,0x4
  401d50:	add    rax,QWORD PTR [rip+0x57399]        # 0x4590f0
  401d57:	mov    DWORD PTR [rip+0x5738f],edx        # 0x4590ec
  401d5d:	mov    rdi,rax
  401d60:	call   0x4386d0
  401d65:	mov    DWORD PTR [rdi+0x8],ebp
  401d68:	mov    QWORD PTR [rdi],rax
  401d6b:	jmp    0x401ca9
  401d70:	mov    ebp,DWORD PTR [rip+0x57386]        # 0x4590fc
  401d76:	cmp    ebp,DWORD PTR [rip+0x5737c]        # 0x4590f8
  401d7c:	je     0x401e4a
  401d82:	mov    edx,ebp
  401d84:	mov    r14,QWORD PTR [rip+0x57375]        # 0x459100
  401d8b:	lea    rsi,[rdx+rdx*4]
  401d8f:	shl    rsi,0x4
  401d93:	mov    edx,DWORD PTR [rip+0x57353]        # 0x4590ec
  401d99:	add    r14,rsi
  401d9c:	lea    rdi,[r14+0x8]
  401da0:	mov    rcx,r14
  401da3:	and    rdi,0xfffffffffffffff8
  401da7:	lea    eax,[rdx+0x1]
  401daa:	shl    rdx,0x4
  401dae:	add    rdx,QWORD PTR [rip+0x5733b]        # 0x4590f0
  401db5:	sub    rcx,rdi
  401db8:	mov    DWORD PTR [rip+0x5732e],eax        # 0x4590ec
  401dbe:	lea    eax,[rbp+0x1]
  401dc1:	add    ecx,0x50
  401dc4:	shr    ecx,0x3
  401dc7:	mov    DWORD PTR [rip+0x5732f],eax        # 0x4590fc
  401dcd:	xor    eax,eax
  401dcf:	mov    QWORD PTR [rdx],r13
  401dd2:	mov    DWORD PTR [rdx+0x8],ebp
  401dd5:	mov    QWORD PTR [r14+0x48],0x0
  401ddd:	mov    r12,rdx
  401de0:	rep stos QWORD PTR es:[rdi],rax
  401de3:	mov    QWORD PTR [r14],r13
  401de6:	mov    QWORD PTR [r14+0x40],r13
  401dea:	mov    rcx,r13
  401ded:	mov    r8,QWORD PTR [rip+0x57284]        # 0x459078
  401df4:	test   r8,r8
  401df7:	jne    0x401e1a
  401df9:	lea    rdx,[rsp+0x30]
  401dfe:	call   QWORD PTR [rip+0x59a80]        # 0x45b884
  401e04:	test   eax,eax
  401e06:	jne    0x401c94
  401e0c:	mov    rax,QWORD PTR [rsp+0x58]
  401e11:	mov    QWORD PTR [r14+0x8],rax
  401e15:	jmp    0x401c94
  401e1a:	mov    rdx,r13
  401e1d:	mov    rcx,QWORD PTR [rip+0x5725c]        # 0x459080
  401e24:	call   QWORD PTR [rip+0x5988a]        # 0x45b6b4
  401e2a:	test   eax,eax
  401e2c:	jne    0x401e45
  401e2e:	mov    rcx,QWORD PTR [r14+0x40]
  401e32:	mov    rdx,QWORD PTR [rip+0x5723f]        # 0x459078
  401e39:	movzx  eax,BYTE PTR [rcx+rdx*1]
  401e3d:	cmp    al,0x5c
  401e3f:	je     0x401e9e
  401e41:	cmp    al,0x2f
  401e43:	je     0x401e9e
  401e45:	mov    rcx,QWORD PTR [r14]
  401e48:	jmp    0x401df9
  401e4a:	lea    eax,[rbp+rbp*1+0x0]
  401e4e:	lea    rcx,[rax+rax*4]
  401e52:	mov    DWORD PTR [rip+0x572a0],eax        # 0x4590f8
  401e58:	shl    rcx,0x4
  401e5c:	call   0x4385d0
  401e61:	mov    r14,rax
  401e64:	mov    eax,DWORD PTR [rip+0x57292]        # 0x4590fc
  401e6a:	mov    rdi,QWORD PTR [rip+0x5728f]        # 0x459100
  401e71:	mov    rcx,r14
  401e74:	mov    rdx,rdi
  401e77:	lea    rsi,[rax+rax*4]
  401e7b:	mov    rbp,rax
  401e7e:	shl    rsi,0x4
  401e82:	mov    r8,rsi
  401e85:	call   0x43f0a8
  401e8a:	mov    rcx,rdi
  401e8d:	call   0x43f100
  401e92:	mov    QWORD PTR [rip+0x57267],r14        # 0x459100
  401e99:	jmp    0x401d93
  401e9e:	lea    rax,[rcx+rdx*1+0x1]
  401ea3:	mov    rcx,QWORD PTR [r14]
  401ea6:	mov    QWORD PTR [r14+0x40],rax
  401eaa:	jmp    0x401df9
  401eaf:	nop
  401eb0:	mov    rax,QWORD PTR [rip+0x597f5]        # 0x45b6ac
  401eb7:	mov    rdx,QWORD PTR [rdx]
  401eba:	mov    rcx,QWORD PTR [rcx]
  401ebd:	rex.W jmp rax
  401ec0:	sub    rsp,0x28
  401ec4:	mov    rcx,QWORD PTR [rip+0x57255]        # 0x459120
  401ecb:	test   rcx,rcx
  401ece:	je     0x401eea
  401ed0:	call   0x43f150
  401ed5:	mov    QWORD PTR [rip+0x57240],0x0        # 0x459120
  401ee0:	mov    DWORD PTR [rip+0x57246],0x0        # 0x459130
  401eea:	mov    rcx,QWORD PTR [rip+0x5725f]        # 0x459150
  401ef1:	call   0x43f100
  401ef6:	mov    eax,DWORD PTR [rip+0x5723c]        # 0x459138
  401efc:	mov    QWORD PTR [rip+0x57241],0x0        # 0x459148
  401f07:	mov    QWORD PTR [rip+0x5723e],0x0        # 0x459150
  401f12:	mov    DWORD PTR [rip+0x57220],0x0        # 0x45913c
  401f1c:	add    rsp,0x28
  401f20:	ret    
  401f21:	nop    DWORD PTR [rax+rax*1+0x0]
  401f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f30:	push   rdi
  401f31:	push   rsi
  401f32:	push   rbx
  401f33:	sub    rsp,0x20
  401f37:	mov    rdx,QWORD PTR [rip+0x5710a]        # 0x459048
  401f3e:	mov    rsi,rcx
  401f41:	test   rdx,rdx
  401f44:	je     0x401fd2
  401f4a:	mov    rax,QWORD PTR [rip+0x570ef]        # 0x459040
  401f51:	xor    edi,edi
  401f53:	jmp    0x401f9e
  401f55:	mov    rbx,QWORD PTR [rip+0x570e4]        # 0x459040
  401f5c:	lea    rcx,[rbx+rdi*1]
  401f60:	call   0x43f028
  401f65:	add    rdi,rax
  401f68:	lea    rax,[rbx+rdi*1-0x1]
  401f6d:	cmp    BYTE PTR [rax],0xa
  401f70:	je     0x401fc4
  401f72:	mov    rax,QWORD PTR [rip+0x570cf]        # 0x459048
  401f79:	mov    rcx,rbx
  401f7c:	lea    rdx,[rax+rax*1]
  401f80:	call   0x438650
  401f85:	mov    rbx,QWORD PTR [rip+0x570bc]        # 0x459048
  401f8c:	mov    QWORD PTR [rip+0x570ad],rax        # 0x459040
  401f93:	lea    rdx,[rbx+rbx*1]
  401f97:	mov    QWORD PTR [rip+0x570aa],rdx        # 0x459048
  401f9e:	lea    rcx,[rax+rdi*1]
  401fa2:	sub    edx,edi
  401fa4:	mov    r8,rsi
  401fa7:	call   0x43f130
  401fac:	test   rax,rax
  401faf:	jne    0x401f55
  401fb1:	test   rdi,rdi
  401fb4:	cmovne rax,QWORD PTR [rip+0x57084]        # 0x459040
  401fbc:	add    rsp,0x20
  401fc0:	pop    rbx
  401fc1:	pop    rsi
  401fc2:	pop    rdi
  401fc3:	ret    
  401fc4:	mov    BYTE PTR [rax],0x0
  401fc7:	mov    rax,rbx
  401fca:	add    rsp,0x20
  401fce:	pop    rbx
  401fcf:	pop    rsi
  401fd0:	pop    rdi
  401fd1:	ret    
  401fd2:	mov    ecx,0xc8
  401fd7:	mov    QWORD PTR [rip+0x57066],0xc8        # 0x459048
  401fe2:	call   0x4385d0
  401fe7:	mov    rdx,QWORD PTR [rip+0x5705a]        # 0x459048
  401fee:	mov    QWORD PTR [rip+0x5704b],rax        # 0x459040
  401ff5:	jmp    0x401f51
  401ffa:	nop    WORD PTR [rax+rax*1+0x0]
  402000:	sub    rsp,0x28
  402004:	mov    ecx,0x1
  402009:	call   0x401730
  40200e:	test   rax,rax
  402011:	je     0x402030
  402013:	mov    edx,DWORD PTR [rax]
  402015:	mov    ecx,DWORD PTR [rip+0x57125]        # 0x459140
  40201b:	mov    eax,edx
  40201d:	test   ecx,ecx
  40201f:	bswap  eax
  402021:	cmove  eax,edx
  402024:	add    rsp,0x28
  402028:	ret    
  402029:	nop    DWORD PTR [rax+0x0]
  402030:	xor    eax,eax
  402032:	add    rsp,0x28
  402036:	ret    
  402037:	nop    WORD PTR [rax+rax*1+0x0]
  402040:	sub    rsp,0x28
  402044:	call   0x402000
  402049:	test   eax,eax
  40204b:	je     0x402060
  40204d:	mov    ecx,eax
  40204f:	add    rsp,0x28
  402053:	jmp    0x401730
  402058:	nop    DWORD PTR [rax+rax*1+0x0]
  402060:	xor    eax,eax
  402062:	add    rsp,0x28
  402066:	ret    
  402067:	nop    WORD PTR [rax+rax*1+0x0]
  402070:	movzx  eax,BYTE PTR [rdx+0x20]
  402074:	test   al,0x20
  402076:	je     0x402090
  402078:	mov    rax,QWORD PTR [rdx]
  40207b:	add    DWORD PTR [rcx+0x14],0x1
  40207f:	cmp    QWORD PTR [rax+0x20],0x0
  402084:	je     0x4020b1
  402086:	add    DWORD PTR [rcx+0x18],0x1
  40208a:	ret    
  40208b:	nop    DWORD PTR [rax+rax*1+0x0]
  402090:	test   al,al
  402092:	js     0x4020b1
  402094:	mov    rax,QWORD PTR [rdx]
  402097:	add    DWORD PTR [rcx+0x8],0x1
  40209b:	cmp    QWORD PTR [rax+0x20],0x0
  4020a0:	je     0x4020a6
  4020a2:	add    DWORD PTR [rcx+0xc],0x1
  4020a6:	cmp    QWORD PTR [rdx+0x10],0x0
  4020ab:	je     0x4020b1
  4020ad:	add    DWORD PTR [rcx+0x10],0x1
  4020b1:	repz ret 
  4020b3:	nop    DWORD PTR [rax]
  4020b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020c0:	sub    rsp,0x28
  4020c4:	mov    eax,DWORD PTR [rip+0x57072]        # 0x45913c
  4020ca:	test   eax,eax
  4020cc:	jle    0x402130
  4020ce:	add    edx,ecx
  4020d0:	mov    eax,edx
  4020d2:	sub    eax,DWORD PTR [rip+0x57050]        # 0x459128
  4020d8:	cmp    eax,DWORD PTR [rip+0x57052]        # 0x459130
  4020de:	ja     0x4020f0
  4020e0:	mov    DWORD PTR [rip+0x57046],eax        # 0x45912c
  4020e6:	add    rsp,0x28
  4020ea:	ret    
  4020eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4020f0:	mov    rcx,QWORD PTR [rip+0x57029]        # 0x459120
  4020f7:	shl    edx,0x2
  4020fa:	xor    r8d,r8d
  4020fd:	mov    DWORD PTR [rip+0x57029],0x0        # 0x459130
  402107:	mov    DWORD PTR [rip+0x5701b],0x0        # 0x45912c
  402111:	call   0x43f0f0
  402116:	mov    rcx,QWORD PTR [rip+0x57003]        # 0x459120
  40211d:	call   0x43f0e8
  402122:	sar    eax,0x2
  402125:	mov    DWORD PTR [rip+0x56ffd],eax        # 0x459128
  40212b:	add    rsp,0x28
  40212f:	ret    
  402130:	lea    r8,[rip+0x41c5b]        # 0x443d92
  402137:	lea    rcx,[rip+0x4144a]        # 0x443588
  40213e:	mov    edx,0x28b
  402143:	call   0x4039c0
  402148:	nop
  402149:	nop    DWORD PTR [rax+0x0]
  402150:	push   rbp
  402151:	mov    rbp,rsp
  402154:	mov    eax,edx
  402156:	lea    rax,[rax*8+0x1e]
  40215e:	shr    rax,0x4
  402162:	shl    rax,0x4
  402166:	call   0x439cf0
  40216b:	sub    rsp,rax
  40216e:	test   edx,edx
  402170:	lea    eax,[rdx-0x1]
  402173:	mov    r9,rsp
  402176:	je     0x402193
  402178:	nop    DWORD PTR [rax+rax*1+0x0]
  402180:	mov    edx,eax
  402182:	sub    eax,0x1
  402185:	lea    rdx,[rdx+rdx*8]
  402189:	or     BYTE PTR [rcx+rdx*8+0x29],0x80
  40218e:	cmp    eax,0xffffffff
  402191:	jne    0x402180
  402193:	mov    QWORD PTR [r9],rcx
  402196:	and    BYTE PTR [rcx+0x29],0x7f
  40219a:	mov    r8d,0x1
  4021a0:	lea    eax,[r8-0x1]
  4021a4:	mov    r8,rax
  4021a7:	mov    rax,QWORD PTR [r9+rax*8]
  4021ab:	mov    rax,QWORD PTR [rax]
  4021ae:	test   rax,rax
  4021b1:	je     0x4021df
  4021b3:	test   BYTE PTR [rax+0x20],0x14
  4021b7:	jne    0x4021d6
  4021b9:	mov    rcx,QWORD PTR [rax+0x8]
  4021bd:	movzx  edx,BYTE PTR [rcx+0x29]
  4021c1:	test   dl,dl
  4021c3:	jns    0x4021d6
  4021c5:	and    edx,0x7f
  4021c8:	mov    BYTE PTR [rcx+0x29],dl
  4021cb:	mov    edx,r8d
  4021ce:	add    r8d,0x1
  4021d2:	mov    QWORD PTR [r9+rdx*8],rcx
  4021d6:	mov    rax,QWORD PTR [rax+0x30]
  4021da:	test   rax,rax
  4021dd:	jne    0x4021b3
  4021df:	test   r8d,r8d
  4021e2:	jne    0x4021a0
  4021e4:	mov    rsp,rbp
  4021e7:	pop    rbp
  4021e8:	ret    
  4021e9:	nop    DWORD PTR [rax+0x0]
  4021f0:	sub    rsp,0x28
  4021f4:	cmp    QWORD PTR [rip+0x56f24],0x0        # 0x459120
  4021fc:	jne    0x402277
  4021fe:	lea    rdx,[rip+0x41440]        # 0x443645
  402205:	mov    DWORD PTR [rip+0x56f19],0x0        # 0x459128
  40220f:	mov    DWORD PTR [rip+0x56f17],0x0        # 0x459130
  402219:	mov    DWORD PTR [rip+0x56f09],0x0        # 0x45912c
  402223:	mov    DWORD PTR [rip+0x56f07],0xffffffff        # 0x459134
  40222d:	mov    DWORD PTR [rip+0x56f01],0x0        # 0x459138
  402237:	mov    DWORD PTR [rip+0x56eff],0x0        # 0x459140
  402241:	call   0x43f128
  402246:	test   rax,rax
  402249:	mov    QWORD PTR [rip+0x56ed0],rax        # 0x459120
  402250:	je     0x402270
  402252:	mov    rcx,rax
  402255:	xor    edx,edx
  402257:	mov    DWORD PTR [rip+0x56edb],0x1        # 0x45913c
  402261:	call   0x43f078
  402266:	mov    eax,0x1
  40226b:	add    rsp,0x28
  40226f:	ret    
  402270:	xor    eax,eax
  402272:	add    rsp,0x28
  402276:	ret    
  402277:	lea    r8,[rip+0x41b40]        # 0x443dbe
  40227e:	lea    rcx,[rip+0x41303]        # 0x443588
  402285:	mov    edx,0x88
  40228a:	call   0x4039c0
  40228f:	nop
  402290:	sub    rsp,0x28
  402294:	mov    ecx,0x2
  402299:	call   0x401730
  40229e:	test   rax,rax
  4022a1:	je     0x4022d0
  4022a3:	mov    ecx,DWORD PTR [rip+0x56e97]        # 0x459140
  4022a9:	mov    edx,DWORD PTR [rax]
  4022ab:	test   ecx,ecx
  4022ad:	jne    0x4022c0
  4022af:	mov    eax,DWORD PTR [rax+0x4]
  4022b2:	shl    rax,0x20
  4022b6:	or     rax,rdx
  4022b9:	add    rsp,0x28
  4022bd:	ret    
  4022be:	xchg   ax,ax
  4022c0:	mov    eax,DWORD PTR [rax+0x4]
  4022c3:	bswap  edx
  4022c5:	mov    edx,edx
  4022c7:	bswap  eax
  4022c9:	jmp    0x4022b2
  4022cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4022d0:	xor    eax,eax
  4022d2:	add    rsp,0x28
  4022d6:	ret    
  4022d7:	nop    WORD PTR [rax+rax*1+0x0]
  4022e0:	push   r15
  4022e2:	push   r14
  4022e4:	mov    eax,0x1848
  4022e9:	push   r13
  4022eb:	push   r12
  4022ed:	push   rbp
  4022ee:	push   rdi
  4022ef:	push   rsi
  4022f0:	push   rbx
  4022f1:	call   0x439cf0
  4022f6:	sub    rsp,rax
  4022f9:	mov    QWORD PTR [rsp+0x1890],rcx
  402301:	mov    rcx,QWORD PTR [rip+0x56db0]        # 0x4590b8
  402308:	call   0x4021f0
  40230d:	test   eax,eax
  40230f:	mov    ebx,eax
  402311:	je     0x402414
  402317:	call   0x402000
  40231c:	cmp    eax,0x67636461
  402321:	je     0x402374
  402323:	cmp    eax,0x61646367
  402328:	je     0x40236a
  40232a:	mov    rbx,QWORD PTR [rip+0x56d87]        # 0x4590b8
  402331:	call   QWORD PTR [rip+0x592e5]        # 0x45b61c
  402337:	lea    rdx,[rip+0x413ed]        # 0x44372b
  40233e:	lea    rcx,[rax+0x60]
  402342:	mov    r8,rbx
  402345:	call   0x403990
  40234a:	mov    ebx,0x1
  40234f:	call   0x401ec0
  402354:	mov    eax,ebx
  402356:	add    rsp,0x1848
  40235d:	pop    rbx
  40235e:	pop    rsi
  40235f:	pop    rdi
  402360:	pop    rbp
  402361:	pop    r12
  402363:	pop    r13
  402365:	pop    r14
  402367:	pop    r15
  402369:	ret    
  40236a:	mov    DWORD PTR [rip+0x56dcc],0x1        # 0x459140
  402374:	call   0x402000
  402379:	cmp    eax,0x3430392a
  40237e:	je     0x4023e2
  402380:	mov    edx,eax
  402382:	mov    rbx,QWORD PTR [rip+0x56d2f]        # 0x4590b8
  402389:	mov    BYTE PTR [rsp+0x53],al
  40238d:	shr    edx,0x18
  402390:	mov    BYTE PTR [rsp+0x70],0x34
  402395:	mov    BYTE PTR [rsp+0x71],0x30
  40239a:	mov    BYTE PTR [rsp+0x50],dl
  40239e:	mov    edx,eax
  4023a0:	mov    BYTE PTR [rsp+0x72],0x39
  4023a5:	shr    edx,0x10
  4023a8:	mov    BYTE PTR [rsp+0x73],0x2a
  4023ad:	mov    BYTE PTR [rsp+0x51],dl
  4023b1:	mov    edx,eax
  4023b3:	shr    edx,0x8
  4023b6:	mov    BYTE PTR [rsp+0x52],dl
  4023ba:	call   QWORD PTR [rip+0x5925c]        # 0x45b61c
  4023c0:	lea    rcx,[rax+0x60]
  4023c4:	lea    rax,[rsp+0x70]
  4023c9:	lea    r9,[rsp+0x50]
  4023ce:	lea    rdx,[rip+0x412cb]        # 0x4436a0
  4023d5:	mov    r8,rbx
  4023d8:	mov    QWORD PTR [rsp+0x20],rax
  4023dd:	call   0x403990
  4023e2:	call   0x402000
  4023e7:	cmp    eax,DWORD PTR [rip+0x56cd3]        # 0x4590c0
  4023ed:	je     0x402443
  4023ef:	mov    rbx,QWORD PTR [rip+0x56cc2]        # 0x4590b8
  4023f6:	call   QWORD PTR [rip+0x59220]        # 0x45b61c
  4023fc:	lea    rdx,[rip+0x412cd]        # 0x4436d0
  402403:	lea    rcx,[rax+0x60]
  402407:	mov    r8,rbx
  40240a:	call   0x403990
  40240f:	jmp    0x40234a
  402414:	mov    rsi,QWORD PTR [rip+0x56c9d]        # 0x4590b8
  40241b:	call   QWORD PTR [rip+0x591fb]        # 0x45b61c
  402421:	lea    rdx,[rip+0x41240]        # 0x443668
  402428:	lea    rcx,[rax+0x60]
  40242c:	mov    r8,rsi
  40242f:	call   0x403990
  402434:	mov    DWORD PTR [rip+0x56c76],0x1        # 0x4590b4
  40243e:	jmp    0x402354
  402443:	lea    rax,[rsp+0x98]
  40244b:	xor    esi,esi
  40244d:	mov    QWORD PTR [rsp+0x38],rax
  402452:	lea    rax,[rsp+0x50]
  402457:	mov    QWORD PTR [rsp+0x40],rax
  40245c:	lea    rax,[rsp+0x70]
  402461:	mov    QWORD PTR [rsp+0x48],rax
  402466:	jmp    0x40249a
  402468:	nop    DWORD PTR [rax+rax*1+0x0]
  402470:	test   al,al
  402472:	je     0x4024e1
  402474:	mov    edx,r12d
  402477:	mov    ecx,ebp
  402479:	call   0x4020c0
  40247e:	cmp    QWORD PTR [rip+0x56c9a],0x0        # 0x459120
  402486:	je     0x402700
  40248c:	mov    eax,DWORD PTR [rip+0x56ca6]        # 0x459138
  402492:	test   eax,eax
  402494:	jne    0x4027cd
  40249a:	call   0x402000
  40249f:	test   eax,eax
  4024a1:	mov    ebx,eax
  4024a3:	je     0x402728
  4024a9:	call   0x402000
  4024ae:	mov    edx,DWORD PTR [rip+0x56c88]        # 0x45913c
  4024b4:	mov    r12d,eax
  4024b7:	test   edx,edx
  4024b9:	jle    0x40279d
  4024bf:	mov    ebp,DWORD PTR [rip+0x56c63]        # 0x459128
  4024c5:	add    ebp,DWORD PTR [rip+0x56c61]        # 0x45912c
  4024cb:	cmp    ebx,0xa3000000
  4024d1:	je     0x402540
  4024d3:	cmp    ebx,0x1000000
  4024d9:	sete   al
  4024dc:	test   r12d,r12d
  4024df:	je     0x402470
  4024e1:	cmp    r12d,0x3
  4024e5:	jne    0x4024ef
  4024e7:	test   al,al
  4024e9:	jne    0x402681
  4024ef:	test   rsi,rsi
  4024f2:	je     0x402474
  4024f4:	cmp    ebx,0x1a10000
  4024fa:	jne    0x402474
  402500:	mov    eax,DWORD PTR [rsi+0x38]
  402503:	lea    edx,[rax+rax*1]
  402506:	cmp    edx,r12d
  402509:	jne    0x4026cb
  40250f:	cmp    QWORD PTR [rsi+0x30],0x0
  402514:	je     0x402772
  40251a:	test   eax,eax
  40251c:	je     0x402474
  402522:	xor    ebx,ebx
  402524:	call   0x402290
  402529:	mov    rdx,QWORD PTR [rsi+0x30]
  40252d:	mov    ecx,ebx
  40252f:	add    ebx,0x1
  402532:	add    QWORD PTR [rdx+rcx*8],rax
  402536:	cmp    DWORD PTR [rsi+0x38],ebx
  402539:	jne    0x402524
  40253b:	jmp    0x402474
  402540:	call   0x402000
  402545:	mov    DWORD PTR [rsp+0x70],eax
  402549:	xor    r15d,r15d
  40254c:	call   0x402000
  402551:	mov    DWORD PTR [rsp+0x78],eax
  402555:	call   0x402000
  40255a:	mov    DWORD PTR [rsp+0x34],eax
  40255e:	mov    DWORD PTR [rsp+0x7c],eax
  402562:	call   0x402290
  402567:	mov    QWORD PTR [rsp+0x80],rax
  40256f:	call   0x402290
  402574:	mov    QWORD PTR [rsp+0x88],rax
  40257c:	call   0x402290
  402581:	mov    rdi,QWORD PTR [rsp+0x38]
  402586:	mov    QWORD PTR [rsp+0x90],rax
  40258e:	mov    ecx,0x2f4
  402593:	xor    eax,eax
  402595:	mov    rbx,QWORD PTR [rsp+0x40]
  40259a:	rep stos QWORD PTR es:[rdi],rax
  40259d:	mov    rdi,QWORD PTR [rsp+0x48]
  4025a2:	call   0x402000
  4025a7:	add    rbx,0x4
  4025ab:	mov    DWORD PTR [rbx-0x4],eax
  4025ae:	mov    ecx,eax
  4025b0:	call   0x439cd0
  4025b5:	add    r15d,eax
  4025b8:	cmp    rbx,rdi
  4025bb:	jne    0x4025a2
  4025bd:	test   r15d,r15d
  4025c0:	je     0x40266b
  4025c6:	xor    ebx,ebx
  4025c8:	xor    r13d,r13d
  4025cb:	xor    r14d,r14d
  4025ce:	xchg   ax,ax
  4025d0:	test   ebx,ebx
  4025d2:	jne    0x402618
  4025d4:	mov    r14d,r13d
  4025d7:	shl    r14d,0x5
  4025db:	cmp    r13d,0x8
  4025df:	je     0x40275a
  4025e5:	mov    eax,r13d
  4025e8:	jmp    0x402601
  4025ea:	nop    WORD PTR [rax+rax*1+0x0]
  4025f0:	add    r14d,0x20
  4025f4:	cmp    r13d,0x8
  4025f8:	mov    eax,r13d
  4025fb:	je     0x40275a
  402601:	mov    ebx,DWORD PTR [rsp+rax*4+0x50]
  402605:	add    r13d,0x1
  402609:	test   ebx,ebx
  40260b:	je     0x4025f0
  40260d:	test   bl,0x1
  402610:	jne    0x40261d
  402612:	add    r14d,0x1
  402616:	shr    ebx,1
  402618:	test   bl,0x1
  40261b:	je     0x402612
  40261d:	cmp    r14d,0xfb
  402624:	ja     0x4027b5
  40262a:	call   0x402000
  40262f:	mov    edx,r14d
  402632:	shr    ebx,1
  402634:	add    r14d,0x1
  402638:	lea    rdi,[rdx+rdx*2]
  40263c:	shl    rdi,0x3
  402640:	mov    DWORD PTR [rsp+rdi*1+0x98],eax
  402647:	call   0x402290
  40264c:	mov    QWORD PTR [rsp+rdi*1+0xa0],rax
  402654:	call   0x402290
  402659:	sub    r15d,0x1
  40265d:	mov    QWORD PTR [rsp+rdi*1+0xa8],rax
  402665:	jne    0x4025d0
  40266b:	mov    eax,DWORD PTR [rsp+0x34]
  40266f:	add    DWORD PTR [rip+0x56a6a],0x1        # 0x4590e0
  402676:	add    DWORD PTR [rip+0x56a68],eax        # 0x4590e4
  40267c:	jmp    0x402474
  402681:	call   0x402000
  402686:	test   rsi,rsi
  402689:	mov    ebx,eax
  40268b:	je     0x402691
  40268d:	mov    rsi,QWORD PTR [rsi+0x50]
  402691:	mov    rax,QWORD PTR [rsp+0x1890]
  402699:	jmp    0x4026a9
  40269b:	nop    DWORD PTR [rax+rax*1+0x0]
  4026a0:	cmp    DWORD PTR [rsi+0x10],ebx
  4026a3:	je     0x4026bd
  4026a5:	mov    rsi,QWORD PTR [rsi+0x50]
  4026a9:	test   rsi,rsi
  4026ac:	jne    0x4026a0
  4026ae:	test   rax,rax
  4026b1:	je     0x402732
  4026b3:	mov    rsi,rax
  4026b6:	xor    eax,eax
  4026b8:	cmp    DWORD PTR [rsi+0x10],ebx
  4026bb:	jne    0x4026a5
  4026bd:	call   0x402000
  4026c2:	cmp    eax,DWORD PTR [rsi+0x14]
  4026c5:	je     0x40278a
  4026cb:	mov    rsi,QWORD PTR [rsi]
  4026ce:	mov    rbx,QWORD PTR [rip+0x569e3]        # 0x4590b8
  4026d5:	call   QWORD PTR [rip+0x58f41]        # 0x45b61c
  4026db:	lea    rdx,[rip+0x4102b]        # 0x44370d
  4026e2:	lea    rcx,[rax+0x60]
  4026e6:	mov    r9,rsi
  4026e9:	mov    r8,rbx
  4026ec:	call   0x403990
  4026f1:	jmp    0x40234a
  4026f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402700:	mov    rsi,QWORD PTR [rip+0x569b1]        # 0x4590b8
  402707:	lea    rbx,[rip+0x40f49]        # 0x443657
  40270e:	call   QWORD PTR [rip+0x58f08]        # 0x45b61c
  402714:	lea    rcx,[rax+0x60]
  402718:	mov    r8,rsi
  40271b:	mov    rdx,rbx
  40271e:	call   0x403990
  402723:	jmp    0x40234a
  402728:	call   0x401ec0
  40272d:	jmp    0x402354
  402732:	mov    rdi,QWORD PTR [rip+0x5697f]        # 0x4590b8
  402739:	call   QWORD PTR [rip+0x58edd]        # 0x45b61c
  40273f:	lea    rdx,[rip+0x40fad]        # 0x4436f3
  402746:	lea    rcx,[rax+0x60]
  40274a:	mov    r9d,ebx
  40274d:	mov    r8,rdi
  402750:	call   0x403990
  402755:	jmp    0x402474
  40275a:	lea    r8,[rip+0x4161f]        # 0x443d80
  402761:	lea    rcx,[rip+0x40e20]        # 0x443588
  402768:	mov    edx,0x26f
  40276d:	call   0x4039c0
  402772:	mov    ecx,eax
  402774:	mov    edx,0x8
  402779:	call   0x438600
  40277e:	mov    QWORD PTR [rsi+0x30],rax
  402782:	mov    eax,DWORD PTR [rsi+0x38]
  402785:	jmp    0x40251a
  40278a:	call   0x402000
  40278f:	cmp    eax,DWORD PTR [rsi+0x18]
  402792:	jne    0x4026cb
  402798:	jmp    0x402474
  40279d:	lea    r8,[rip+0x4160c]        # 0x443db0
  4027a4:	lea    rcx,[rip+0x40ddd]        # 0x443588
  4027ab:	mov    edx,0x46
  4027b0:	call   0x4039c0
  4027b5:	lea    r8,[rip+0x415c4]        # 0x443d80
  4027bc:	lea    rcx,[rip+0x40dc5]        # 0x443588
  4027c3:	mov    edx,0x277
  4027c8:	call   0x4039c0
  4027cd:	lea    rbx,[rip+0x40e83]        # 0x443657
  4027d4:	lea    rax,[rip+0x40e6d]        # 0x443648
  4027db:	mov    rsi,QWORD PTR [rip+0x568d6]        # 0x4590b8
  4027e2:	cmovs  rbx,rax
  4027e6:	jmp    0x40270e
  4027eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4027f0:	push   rbx
  4027f1:	sub    rsp,0x20
  4027f5:	test   r8d,r8d
  4027f8:	js     0x402920
  4027fe:	test   rdx,rdx
  402801:	pxor   xmm0,xmm0
  402805:	jne    0x402880
  402807:	test   r8d,r8d
  40280a:	lea    r10d,[r8-0x1]
  40280e:	je     0x402943
  402814:	mov    eax,0x64
  402819:	nop    DWORD PTR [rax+0x0]
  402820:	lea    r9d,[rax+rax*4]
  402824:	sub    r10d,0x1
  402828:	add    r9d,r9d
  40282b:	cmp    r10d,0xffffffff
  40282f:	mov    eax,r9d
  402832:	jne    0x402820
  402834:	pxor   xmm1,xmm1
  402838:	cvtsi2ss xmm1,rax
  40283d:	mulss  xmm0,xmm1
  402841:	addss  xmm0,DWORD PTR [rip+0x418fb]        # 0x444144
  402849:	cvttss2si rax,xmm0
  40284e:	test   eax,eax
  402850:	jne    0x4028a0
  402852:	test   rcx,rcx
  402855:	je     0x4028a0
  402857:	lea    ebx,[r8+0x1]
  40285b:	lea    rdx,[rip+0x40ee7]        # 0x443749
  402862:	lea    rcx,[rip+0x567e7]        # 0x459050
  402869:	mov    r9d,0x1
  40286f:	mov    r8d,ebx
  402872:	call   0x43f490
  402877:	jmp    0x4028d0
  402879:	nop    DWORD PTR [rax+0x0]
  402880:	pxor   xmm0,xmm0
  402884:	pxor   xmm1,xmm1
  402888:	cvtsi2ss xmm0,rcx
  40288d:	cvtsi2ss xmm1,rdx
  402892:	divss  xmm0,xmm1
  402896:	jmp    0x402807
  40289b:	nop    DWORD PTR [rax+rax*1+0x0]
  4028a0:	cmp    r9d,eax
  4028a3:	ja     0x402983
  4028a9:	cmp    rcx,rdx
  4028ac:	je     0x402983
  4028b2:	lea    ebx,[r8+0x1]
  4028b6:	lea    rdx,[rip+0x40e8c]        # 0x443749
  4028bd:	lea    rcx,[rip+0x5678c]        # 0x459050
  4028c4:	sub    r9d,0x1
  4028c8:	mov    r8d,ebx
  4028cb:	call   0x43f490
  4028d0:	lea    r11d,[rax-0x1]
  4028d4:	lea    r9,[rip+0x56775]        # 0x459050
  4028db:	mov    edx,eax
  4028dd:	sub    r11d,ebx
  4028e0:	movsxd rcx,edx
  4028e3:	movzx  r10d,BYTE PTR [r9+rcx*1]
  4028e8:	lea    ecx,[rdx+0x1]
  4028eb:	sub    edx,0x1
  4028ee:	cmp    edx,r11d
  4028f1:	movsxd rcx,ecx
  4028f4:	mov    BYTE PTR [r9+rcx*1],r10b
  4028f8:	jne    0x4028e0
  4028fa:	sub    eax,ebx
  4028fc:	lea    rdx,[rip+0x5674d]        # 0x459050
  402903:	cdqe   
  402905:	mov    BYTE PTR [rdx+rax*1],0x2e
  402909:	lea    rax,[rip+0x56740]        # 0x459050
  402910:	add    rsp,0x20
  402914:	pop    rbx
  402915:	ret    
  402916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402920:	mov    r8,rcx
  402923:	lea    rdx,[rip+0x40e1a]        # 0x443744
  40292a:	lea    rcx,[rip+0x5671f]        # 0x459050
  402931:	call   0x43f490
  402936:	lea    rax,[rip+0x56713]        # 0x459050
  40293d:	add    rsp,0x20
  402941:	pop    rbx
  402942:	ret    
  402943:	mulss  xmm0,DWORD PTR [rip+0x417f5]        # 0x444140
  40294b:	addss  xmm0,DWORD PTR [rip+0x417f1]        # 0x444144
  402953:	cvttss2si r9,xmm0
  402958:	test   r9d,r9d
  40295b:	jne    0x4029a5
  40295d:	test   rcx,rcx
  402960:	je     0x4029a5
  402962:	lea    rdx,[rip+0x40de0]        # 0x443749
  402969:	lea    rcx,[rip+0x566e0]        # 0x459050
  402970:	mov    r9d,0x1
  402976:	mov    r8d,0x1
  40297c:	call   0x43f490
  402981:	jmp    0x402909
  402983:	lea    ebx,[r8+0x1]
  402987:	lea    rdx,[rip+0x40dbb]        # 0x443749
  40298e:	lea    rcx,[rip+0x566bb]        # 0x459050
  402995:	mov    r9d,eax
  402998:	mov    r8d,ebx
  40299b:	call   0x43f490
  4029a0:	jmp    0x4028d0
  4029a5:	cmp    r9d,0x63
  4029a9:	jbe    0x4029b6
  4029ab:	cmp    rcx,rdx
  4029ae:	je     0x4029b6
  4029b0:	mov    r9d,0x63
  4029b6:	lea    rdx,[rip+0x40d8c]        # 0x443749
  4029bd:	lea    rcx,[rip+0x5668c]        # 0x459050
  4029c4:	mov    r8d,0x1
  4029ca:	call   0x43f490
  4029cf:	jmp    0x402909
  4029d4:	xchg   ax,ax
  4029d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029e0:	push   rdi
  4029e1:	push   rsi
  4029e2:	push   rbx
  4029e3:	sub    rsp,0x30
  4029e7:	movzx  eax,BYTE PTR [r8+0x20]
  4029ec:	mov    rbx,rcx
  4029ef:	mov    esi,edx
  4029f1:	test   al,0x20
  4029f3:	je     0x402a21
  4029f5:	mov    rax,QWORD PTR [r8]
  4029f8:	mov    rdx,QWORD PTR [rax+0x20]
  4029fc:	test   rdx,rdx
  4029ff:	jne    0x402ad3
  402a05:	lea    rdx,[rip+0x40d75]        # 0x443781
  402a0c:	mov    r8d,esi
  402a0f:	call   0x403990
  402a14:	mov    eax,0x1
  402a19:	add    rsp,0x30
  402a1d:	pop    rbx
  402a1e:	pop    rsi
  402a1f:	pop    rdi
  402a20:	ret    
  402a21:	test   al,al
  402a23:	js     0x402a90
  402a25:	mov    rdx,QWORD PTR [r8]
  402a28:	mov    rdx,QWORD PTR [rdx+0x20]
  402a2c:	test   rdx,rdx
  402a2f:	je     0x402b10
  402a35:	test   al,0x8
  402a37:	lea    rdi,[rip+0x40d13]        # 0x443751
  402a3e:	jne    0x402a54
  402a40:	test   al,0x10
  402a42:	lea    rdi,[rip+0x40d07]        # 0x443750
  402a49:	lea    rax,[rip+0x40d10]        # 0x443760
  402a50:	cmovne rdi,rax
  402a54:	mov    rcx,QWORD PTR [r8+0x10]
  402a58:	mov    r8d,DWORD PTR [rip+0x56609]        # 0x459068
  402a5f:	neg    r8d
  402a62:	call   0x4027f0
  402a67:	lea    rdx,[rip+0x40d2e]        # 0x44379c
  402a6e:	mov    r9,rax
  402a71:	mov    QWORD PTR [rsp+0x20],rdi
  402a76:	mov    r8d,esi
  402a79:	mov    rcx,rbx
  402a7c:	call   0x403990
  402a81:	mov    eax,0x1
  402a86:	add    rsp,0x30
  402a8a:	pop    rbx
  402a8b:	pop    rsi
  402a8c:	pop    rdi
  402a8d:	ret    
  402a8e:	xchg   ax,ax
  402a90:	mov    eax,DWORD PTR [rip+0x56612]        # 0x4590a8
  402a96:	test   eax,eax
  402a98:	je     0x402a19
  402a9e:	mov    rdx,QWORD PTR [r8+0x8]
  402aa2:	xor    eax,eax
  402aa4:	test   BYTE PTR [rdx+0x2a],0x2
  402aa8:	jne    0x402a19
  402aae:	mov    rax,QWORD PTR [r8]
  402ab1:	mov    rdx,QWORD PTR [rax+0x20]
  402ab5:	test   rdx,rdx
  402ab8:	jne    0x402b30
  402aba:	lea    rdx,[rip+0x40d2f]        # 0x4437f0
  402ac1:	mov    r8d,esi
  402ac4:	call   0x403990
  402ac9:	mov    eax,0x1
  402ace:	jmp    0x402a19
  402ad3:	mov    rcx,rdx
  402ad6:	sub    rcx,QWORD PTR [r8+0x10]
  402ada:	mov    r8d,DWORD PTR [rip+0x56587]        # 0x459068
  402ae1:	neg    r8d
  402ae4:	call   0x4027f0
  402ae9:	lea    rdx,[rip+0x40c79]        # 0x443769
  402af0:	mov    r9,rax
  402af3:	mov    r8d,esi
  402af6:	mov    rcx,rbx
  402af9:	call   0x403990
  402afe:	mov    eax,0x1
  402b03:	add    rsp,0x30
  402b07:	pop    rbx
  402b08:	pop    rsi
  402b09:	pop    rdi
  402b0a:	ret    
  402b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b10:	lea    rdx,[rip+0x40c9c]        # 0x4437b3
  402b17:	mov    r8d,esi
  402b1a:	call   0x403990
  402b1f:	mov    eax,0x1
  402b24:	jmp    0x402a19
  402b29:	nop    DWORD PTR [rax+0x0]
  402b30:	mov    rcx,QWORD PTR [r8+0x10]
  402b34:	mov    r8d,DWORD PTR [rip+0x5652d]        # 0x459068
  402b3b:	neg    r8d
  402b3e:	call   0x4027f0
  402b43:	lea    rdx,[rip+0x40c84]        # 0x4437ce
  402b4a:	mov    r9,rax
  402b4d:	mov    r8d,esi
  402b50:	mov    rcx,rbx
  402b53:	call   0x403990
  402b58:	mov    eax,0x1
  402b5d:	jmp    0x402a19
  402b62:	nop    DWORD PTR [rax+0x0]
  402b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b70:	push   rsi
  402b71:	push   rbx
  402b72:	sub    rsp,0x28
  402b76:	test   ecx,ecx
  402b78:	mov    ebx,ecx
  402b7a:	jne    0x402ba0
  402b7c:	call   QWORD PTR [rip+0x58a9a]        # 0x45b61c
  402b82:	lea    rdx,[rip+0x40ca2]        # 0x44382b
  402b89:	lea    rcx,[rax+0x30]
  402b8d:	add    rsp,0x28
  402b91:	pop    rbx
  402b92:	pop    rsi
  402b93:	jmp    0x403990
  402b98:	nop    DWORD PTR [rax+rax*1+0x0]
  402ba0:	mov    eax,ecx
  402ba2:	mov    r8d,0x2
  402ba8:	mov    ecx,edx
  402baa:	mov    rdx,rax
  402bad:	call   0x4027f0
  402bb2:	mov    rsi,rax
  402bb5:	call   QWORD PTR [rip+0x58a61]        # 0x45b61c
  402bbb:	lea    rdx,[rip+0x40c50]        # 0x443812
  402bc2:	lea    rcx,[rax+0x30]
  402bc6:	mov    r9d,ebx
  402bc9:	mov    r8,rsi
  402bcc:	add    rsp,0x28
  402bd0:	pop    rbx
  402bd1:	pop    rsi
  402bd2:	jmp    0x403990
  402bd7:	nop    WORD PTR [rax+rax*1+0x0]
  402be0:	push   rbp
  402be1:	push   rdi
  402be2:	push   rsi
  402be3:	push   rbx
  402be4:	sub    rsp,0x28
  402be8:	mov    rbp,QWORD PTR [rcx+0x20]
  402bec:	mov    rsi,QWORD PTR [rip+0x58a29]        # 0x45b61c
  402bf3:	mov    rbx,rcx
  402bf6:	mov    rdi,rdx
  402bf9:	call   rsi
  402bfb:	lea    rdx,[rip+0x40c3e]        # 0x443840
  402c02:	lea    rcx,[rax+0x30]
  402c06:	mov    r9,rbp
  402c09:	mov    r8,rdi
  402c0c:	call   0x403990
  402c11:	mov    edx,DWORD PTR [rbx+0x4]
  402c14:	mov    ecx,DWORD PTR [rbx]
  402c16:	call   0x402b70
  402c1b:	mov    eax,DWORD PTR [rip+0x5648b]        # 0x4590ac
  402c21:	test   eax,eax
  402c23:	je     0x402d00
  402c29:	mov    edi,DWORD PTR [rbx+0x8]
  402c2c:	test   edi,edi
  402c2e:	jne    0x402c63
  402c30:	call   rsi
  402c32:	lea    rdx,[rip+0x40c4a]        # 0x443883
  402c39:	lea    rcx,[rax+0x30]
  402c3d:	call   0x403990
  402c42:	mov    edi,DWORD PTR [rbx+0x14]
  402c45:	test   edi,edi
  402c47:	jne    0x402cc8
  402c49:	call   rsi
  402c4b:	lea    rdx,[rip+0x40c57]        # 0x4438a9
  402c52:	lea    rcx,[rax+0x30]
  402c56:	add    rsp,0x28
  402c5a:	pop    rbx
  402c5b:	pop    rsi
  402c5c:	pop    rdi
  402c5d:	pop    rbp
  402c5e:	jmp    0x403990
  402c63:	movsxd rcx,DWORD PTR [rbx+0xc]
  402c67:	movsxd rdx,edi
  402c6a:	mov    r8d,0x2
  402c70:	call   0x4027f0
  402c75:	mov    rbp,rax
  402c78:	call   rsi
  402c7a:	lea    rdx,[rip+0x40bc8]        # 0x443849
  402c81:	lea    rcx,[rax+0x30]
  402c85:	mov    r9d,edi
  402c88:	mov    r8,rbp
  402c8b:	call   0x403990
  402c90:	movsxd rdx,DWORD PTR [rbx+0x8]
  402c94:	movsxd rcx,DWORD PTR [rbx+0x10]
  402c98:	mov    r8d,0x2
  402c9e:	mov    rdi,rdx
  402ca1:	call   0x4027f0
  402ca6:	mov    rbp,rax
  402ca9:	call   rsi
  402cab:	lea    rdx,[rip+0x40bb3]        # 0x443865
  402cb2:	lea    rcx,[rax+0x30]
  402cb6:	mov    r9d,edi
  402cb9:	mov    r8,rbp
  402cbc:	call   0x403990
  402cc1:	mov    edi,DWORD PTR [rbx+0x14]
  402cc4:	test   edi,edi
  402cc6:	je     0x402c49
  402cc8:	movsxd rcx,DWORD PTR [rbx+0x18]
  402ccc:	movsxd rdx,edi
  402ccf:	mov    r8d,0x2
  402cd5:	call   0x4027f0
  402cda:	mov    rbx,rax
  402cdd:	call   rsi
  402cdf:	lea    rdx,[rip+0x40baa]        # 0x443890
  402ce6:	lea    rcx,[rax+0x30]
  402cea:	mov    r9d,edi
  402ced:	mov    r8,rbx
  402cf0:	add    rsp,0x28
  402cf4:	pop    rbx
  402cf5:	pop    rsi
  402cf6:	pop    rdi
  402cf7:	pop    rbp
  402cf8:	jmp    0x403990
  402cfd:	nop    DWORD PTR [rax]
  402d00:	add    rsp,0x28
  402d04:	pop    rbx
  402d05:	pop    rsi
  402d06:	pop    rdi
  402d07:	pop    rbp
  402d08:	ret    
  402d09:	nop
  402d0a:	nop
  402d0b:	nop
  402d0c:	nop
  402d0d:	nop
  402d0e:	nop
  402d0f:	nop
  402d10:	ret    
  402d11:	nop    DWORD PTR [rax+rax*1+0x0]
  402d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d20:	sub    rsp,0x38
  402d24:	mov    QWORD PTR [rsp+0x48],rdx
  402d29:	mov    QWORD PTR [rsp+0x50],r8
  402d2e:	mov    rdx,rcx
  402d31:	lea    r8,[rsp+0x48]
  402d36:	lea    rcx,[rsp+0x20]
  402d3b:	mov    QWORD PTR [rsp+0x58],r9
  402d40:	mov    QWORD PTR [rsp+0x28],r8
  402d45:	call   0x43a3d0
  402d4a:	mov    rax,QWORD PTR [rsp+0x20]
  402d4f:	add    rsp,0x38
  402d53:	ret    
  402d54:	xchg   ax,ax
  402d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d60:	push   r15
  402d62:	push   r14
  402d64:	push   r13
  402d66:	push   r12
  402d68:	push   rbp
  402d69:	push   rdi
  402d6a:	push   rsi
  402d6b:	push   rbx
  402d6c:	sub    rsp,0x48
  402d70:	mov    rbx,QWORD PTR [rsp+0xb0]
  402d78:	test   r8,r8
  402d7b:	mov    r15,rcx
  402d7e:	mov    r13,rdx
  402d81:	mov    rbp,r8
  402d84:	mov    r14d,r9d
  402d87:	jne    0x402da1
  402d89:	test   rbx,rbx
  402d8c:	jne    0x402da1
  402d8e:	xor    eax,eax
  402d90:	add    rsp,0x48
  402d94:	pop    rbx
  402d95:	pop    rsi
  402d96:	pop    rdi
  402d97:	pop    rbp
  402d98:	pop    r12
  402d9a:	pop    r13
  402d9c:	pop    r14
  402d9e:	pop    r15
  402da0:	ret    
  402da1:	mov    eax,DWORD PTR [r15]
  402da4:	test   rbp,rbp
  402da7:	setne  r12b
  402dab:	test   eax,eax
  402dad:	jne    0x402dd2
  402daf:	test   r12b,r12b
  402db2:	je     0x402dd2
  402db4:	mov    rcx,rbp
  402db7:	lea    rdi,[rip+0x413c6]        # 0x444184
  402dbe:	call   0x438060
  402dc3:	mov    ecx,0xd
  402dc8:	mov    rsi,rax
  402dcb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402dcd:	je     0x402d8e
  402dcf:	mov    eax,DWORD PTR [r15]
  402dd2:	cmp    eax,0x13
  402dd5:	jg     0x402ea0
  402ddb:	add    eax,0x1
  402dde:	test   rbx,rbx
  402de1:	mov    DWORD PTR [r15],eax
  402de4:	je     0x402eb0
  402dea:	mov    rcx,rbx
  402ded:	mov    edx,0x400b
  402df2:	call   0x434680
  402df7:	test   rax,rax
  402dfa:	mov    r15,rax
  402dfd:	cmovne rbx,rax
  402e01:	xor    esi,esi
  402e03:	lea    rax,[rip+0x419d6]        # 0x4447e0
  402e0a:	mov    rdx,QWORD PTR [rax+rsi*8]
  402e0e:	mov    rcx,rdx
  402e11:	mov    QWORD PTR [rsp+0x38],rdx
  402e16:	call   0x43f028
  402e1b:	mov    rdx,QWORD PTR [rsp+0x38]
  402e20:	mov    r8,rax
  402e23:	mov    rcx,rbx
  402e26:	mov    rdi,rax
  402e29:	call   0x43f018
  402e2e:	test   eax,eax
  402e30:	jne    0x402e3e
  402e32:	movzx  eax,BYTE PTR [rbx+rdi*1]
  402e36:	cmp    al,0x28
  402e38:	je     0x402e90
  402e3a:	test   al,al
  402e3c:	je     0x402e90
  402e3e:	add    rsi,0x1
  402e42:	cmp    rsi,0x4
  402e46:	jne    0x402e03
  402e48:	test   r12b,r12b
  402e4b:	je     0x402ee4
  402e51:	call   QWORD PTR [rip+0x587c5]        # 0x45b61c
  402e57:	lea    rdx,[rip+0x41333]        # 0x444191
  402e5e:	lea    rcx,[rax+0x60]
  402e62:	mov    DWORD PTR [rsp+0x28],r14d
  402e67:	mov    QWORD PTR [rsp+0x20],rbp
  402e6c:	mov    r9,rbx
  402e6f:	mov    r8d,r13d
  402e72:	call   0x43f460
  402e77:	test   r15,r15
  402e7a:	je     0x402d8e
  402e80:	mov    rcx,r15
  402e83:	call   0x43f100
  402e88:	jmp    0x402d8e
  402e8d:	nop    DWORD PTR [rax]
  402e90:	test   r15,r15
  402e93:	je     0x402ea0
  402e95:	mov    rcx,r15
  402e98:	call   0x43f100
  402e9d:	nop    DWORD PTR [rax]
  402ea0:	mov    eax,0x1
  402ea5:	jmp    0x402d90
  402eaa:	nop    WORD PTR [rax+rax*1+0x0]
  402eb0:	test   r12b,r12b
  402eb3:	je     0x402f00
  402eb5:	call   QWORD PTR [rip+0x58761]        # 0x45b61c
  402ebb:	lea    r9,[rip+0x412be]        # 0x444180
  402ec2:	lea    rcx,[rax+0x60]
  402ec6:	lea    rdx,[rip+0x412c4]        # 0x444191
  402ecd:	mov    DWORD PTR [rsp+0x28],r14d
  402ed2:	mov    QWORD PTR [rsp+0x20],rbp
  402ed7:	mov    r8d,r13d
  402eda:	call   0x43f460
  402edf:	jmp    0x402d8e
  402ee4:	test   rbx,rbx
  402ee7:	jne    0x402f05
  402ee9:	lea    rbp,[rip+0x41290]        # 0x444180
  402ef0:	mov    rbx,rbp
  402ef3:	jmp    0x402e51
  402ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  402f00:	xor    r15d,r15d
  402f03:	jmp    0x402ee9
  402f05:	lea    rbp,[rip+0x41274]        # 0x444180
  402f0c:	jmp    0x402e51
  402f11:	nop    DWORD PTR [rax+rax*1+0x0]
  402f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f20:	push   rdi
  402f21:	push   rsi
  402f22:	push   rbx
  402f23:	sub    rsp,0x30
  402f27:	test   r8d,r8d
  402f2a:	js     0x402f60
  402f2c:	lea    rsi,[rip+0x4126f]        # 0x4441a2
  402f33:	mov    ecx,r8d
  402f36:	mov    rbx,rdx
  402f39:	mov    rdi,rsi
  402f3c:	jne    0x402f70
  402f3e:	call   QWORD PTR [rip+0x586d8]        # 0x45b61c
  402f44:	lea    rdx,[rip+0x4125b]        # 0x4441a6
  402f4b:	lea    rcx,[rax+0x60]
  402f4f:	mov    QWORD PTR [rsp+0x20],rsi
  402f54:	mov    r9,rdi
  402f57:	mov    r8,rbx
  402f5a:	call   0x43f460
  402f5f:	nop
  402f60:	add    rsp,0x30
  402f64:	pop    rbx
  402f65:	pop    rsi
  402f66:	pop    rdi
  402f67:	ret    
  402f68:	nop    DWORD PTR [rax+rax*1+0x0]
  402f70:	call   0x438700
  402f75:	lea    rdi,[rip+0x41227]        # 0x4441a3
  402f7c:	mov    rsi,rax
  402f7f:	jmp    0x402f3e
  402f81:	nop    DWORD PTR [rax+rax*1+0x0]
  402f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f90:	push   rdi
  402f91:	push   rsi
  402f92:	push   rbx
  402f93:	sub    rsp,0x20
  402f97:	mov    rax,QWORD PTR [rcx]
  402f9a:	mov    r8d,0x5
  402fa0:	mov    rbx,rcx
  402fa3:	mov    rdi,rdx
  402fa6:	lea    rdx,[rip+0x41201]        # 0x4441ae
  402fad:	movzx  ecx,BYTE PTR [rax+0x3b]
  402fb1:	call   0x4049f0
  402fb6:	mov    rsi,rax
  402fb9:	mov    rax,QWORD PTR [rbx]
  402fbc:	movzx  ecx,BYTE PTR [rax+0x3b]
  402fc0:	call   0x404a60
  402fc5:	lea    rcx,[rip+0x411e8]        # 0x4441b4
  402fcc:	mov    r9,rax
  402fcf:	mov    r8,rdi
  402fd2:	mov    rdx,rsi
  402fd5:	add    rsp,0x20
  402fd9:	pop    rbx
  402fda:	pop    rsi
  402fdb:	pop    rdi
  402fdc:	jmp    0x402d20
  402fe1:	nop    DWORD PTR [rax+rax*1+0x0]
  402fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ff0:	push   rbx
  402ff1:	sub    rsp,0x20
  402ff5:	test   edx,edx
  402ff7:	mov    rbx,rcx
  402ffa:	je     0x403012
  402ffc:	sub    edx,0x1
  402fff:	test   edx,edx
  403001:	mov    eax,0x7fffffff
  403006:	cmovle edx,eax
  403009:	mov    DWORD PTR [rbx+0x70],edx
  40300c:	add    rsp,0x20
  403010:	pop    rbx
  403011:	ret    
  403012:	mov    rax,QWORD PTR [rcx]
  403015:	mov    rax,QWORD PTR [rax+0x8]
  403019:	mov    rcx,QWORD PTR [rax+0xc0]
  403020:	call   0x43ef90
  403025:	mov    ecx,eax
  403027:	call   0x43ef98
  40302c:	test   eax,eax
  40302e:	mov    edx,0x7fffffff
  403033:	je     0x403009
  403035:	lea    rcx,[rip+0x41181]        # 0x4441bd
  40303c:	call   0x43f0d0
  403041:	test   rax,rax
  403044:	mov    edx,0x7ffffffe
  403049:	je     0x403009
  40304b:	mov    rcx,rax
  40304e:	call   0x43f170
  403053:	test   eax,eax
  403055:	mov    edx,0x7ffffffe
  40305a:	jle    0x403009
  40305c:	lea    edx,[rax-0x1]
  40305f:	jmp    0x402fff
  403061:	nop    DWORD PTR [rax+rax*1+0x0]
  403066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403070:	push   rdi
  403071:	push   rsi
  403072:	push   rbx
  403073:	sub    rsp,0x20
  403077:	mov    rbx,rcx
  40307a:	mov    ecx,0x40
  40307f:	mov    esi,edx
  403081:	lea    rdi,[rbx+0x10]
  403085:	call   0x4385d0
  40308a:	xor    edx,edx
  40308c:	xor    r8d,r8d
  40308f:	mov    rcx,rax
  403092:	mov    QWORD PTR [rbx],rax
  403095:	and    rdi,0xfffffffffffffff8
  403099:	call   0x404e00
  40309e:	mov    eax,ebx
  4030a0:	mov    QWORD PTR [rbx+0x8],0x0
  4030a8:	mov    QWORD PTR [rbx+0x34],0x0
  4030b0:	sub    eax,edi
  4030b2:	lea    ecx,[rax+0x3c]
  4030b5:	xor    eax,eax
  4030b7:	shr    ecx,0x3
  4030ba:	rep stos QWORD PTR es:[rdi],rax
  4030bd:	movsxd rcx,esi
  4030c0:	mov    BYTE PTR [rbx+0x3c],0x0
  4030c4:	mov    BYTE PTR [rbx+0x3d],0x0
  4030c8:	shl    rcx,0x2
  4030cc:	mov    DWORD PTR [rbx+0x40],esi
  4030cf:	call   0x4385d0
  4030d4:	lea    edx,[rsi-0x1]
  4030d7:	test   esi,esi
  4030d9:	mov    QWORD PTR [rbx+0x48],rax
  4030dd:	lea    rdx,[rax+rdx*4+0x4]
  4030e2:	jle    0x4030f3
  4030e4:	mov    DWORD PTR [rax],0x0
  4030ea:	add    rax,0x4
  4030ee:	cmp    rax,rdx
  4030f1:	jne    0x4030e4
  4030f3:	mov    rax,QWORD PTR [rbx]
  4030f6:	mov    BYTE PTR [rbx+0x6c],0x0
  4030fa:	mov    rcx,rbx
  4030fd:	mov    edx,DWORD PTR [rax+0x28]
  403100:	call   0x402ff0
  403105:	lea    rax,[rip+0xaa4]        # 0x403bb0
  40310c:	mov    BYTE PTR [rbx+0x74],0x0
  403110:	mov    BYTE PTR [rbx+0x75],0x0
  403114:	mov    BYTE PTR [rbx+0x76],0x0
  403118:	mov    BYTE PTR [rbx+0x77],0x0
  40311c:	mov    QWORD PTR [rbx+0x88],rax
  403123:	lea    rax,[rip+0xfffffffffffffbe6]        # 0x402d10
  40312a:	mov    BYTE PTR [rbx+0x78],0x0
  40312e:	mov    DWORD PTR [rbx+0x7c],0x0
  403135:	mov    BYTE PTR [rbx+0x80],0x0
  40313c:	mov    BYTE PTR [rbx+0x81],0x0
  403143:	mov    BYTE PTR [rbx+0x82],0x0
  40314a:	mov    DWORD PTR [rbx+0x84],0x0
  403154:	mov    QWORD PTR [rbx+0x98],0x0
  40315f:	mov    QWORD PTR [rbx+0x90],rax
  403166:	mov    QWORD PTR [rbx+0xa0],0x0
  403171:	mov    QWORD PTR [rbx+0xa8],0x0
  40317c:	mov    QWORD PTR [rbx+0xb0],0x0
  403187:	mov    DWORD PTR [rbx+0xc0],0x0
  403191:	mov    QWORD PTR [rbx+0xc8],0x0
  40319c:	mov    QWORD PTR [rbx+0xb8],0x0
  4031a7:	mov    DWORD PTR [rbx+0xd0],0x0
  4031b1:	mov    BYTE PTR [rbx+0xd4],0x0
  4031b8:	add    rsp,0x20
  4031bc:	pop    rbx
  4031bd:	pop    rsi
  4031be:	pop    rdi
  4031bf:	ret    
  4031c0:	push   rbx
  4031c1:	sub    rsp,0x20
  4031c5:	cmp    BYTE PTR [rcx+0x3c],0x0
  4031c9:	je     0x4031f3
  4031cb:	cmp    BYTE PTR [rcx+0x3d],0x0
  4031cf:	mov    rbx,rcx
  4031d2:	mov    r8,QWORD PTR [rip+0x55fa7]        # 0x459180
  4031d9:	jne    0x403200
  4031db:	mov    rcx,QWORD PTR [rcx]
  4031de:	lea    rdx,[rip+0x41013]        # 0x4441f8
  4031e5:	call   0x406770
  4031ea:	mov    rcx,QWORD PTR [rbx]
  4031ed:	call   0x406880
  4031f2:	nop
  4031f3:	add    rsp,0x20
  4031f7:	pop    rbx
  4031f8:	jmp    0x4072e0
  4031fd:	nop    DWORD PTR [rax]
  403200:	mov    rcx,QWORD PTR [rcx]
  403203:	lea    rdx,[rip+0x40fbe]        # 0x4441c8
  40320a:	call   0x406770
  40320f:	jmp    0x4031ea
  403211:	nop    DWORD PTR [rax+rax*1+0x0]
  403216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403220:	push   rbp
  403221:	push   rdi
  403222:	push   rsi
  403223:	push   rbx
  403224:	sub    rsp,0x28
  403228:	mov    rbx,rcx
  40322b:	mov    rdi,rdx
  40322e:	mov    rbp,r8
  403231:	mov    esi,r9d
  403234:	call   QWORD PTR [rip+0x58422]        # 0x45b65c
  40323a:	mov    eax,DWORD PTR [rax]
  40323c:	mov    QWORD PTR [rbx+0x8],rbp
  403240:	mov    QWORD PTR [rbx],rdi
  403243:	mov    DWORD PTR [rbx+0x28],esi
  403246:	mov    DWORD PTR [rbx+0x2c],0x0
  40324d:	mov    DWORD PTR [rbx+0x3c],0x0
  403254:	mov    DWORD PTR [rbx+0x10],eax
  403257:	mov    eax,DWORD PTR [rsp+0x70]
  40325b:	mov    DWORD PTR [rbx+0x38],eax
  40325e:	add    rsp,0x28
  403262:	pop    rbx
  403263:	pop    rsi
  403264:	pop    rdi
  403265:	pop    rbp
  403266:	ret    
  403267:	nop    WORD PTR [rax+rax*1+0x0]
  403270:	push   rbp
  403271:	push   rdi
  403272:	push   rsi
  403273:	push   rbx
  403274:	sub    rsp,0x28
  403278:	mov    rbx,rcx
  40327b:	mov    rdi,rdx
  40327e:	mov    rbp,r8
  403281:	mov    esi,r9d
  403284:	call   QWORD PTR [rip+0x583d2]        # 0x45b65c
  40328a:	mov    eax,DWORD PTR [rax]
  40328c:	mov    QWORD PTR [rbx+0x8],rbp
  403290:	mov    QWORD PTR [rbx],rdi
  403293:	mov    DWORD PTR [rbx+0x28],esi
  403296:	mov    DWORD PTR [rbx+0x2c],0x0
  40329d:	mov    DWORD PTR [rbx+0x3c],0x0
  4032a4:	mov    DWORD PTR [rbx+0x10],eax
  4032a7:	mov    eax,DWORD PTR [rsp+0x70]
  4032ab:	mov    DWORD PTR [rbx+0x38],eax
  4032ae:	add    rsp,0x28
  4032b2:	pop    rbx
  4032b3:	pop    rsi
  4032b4:	pop    rdi
  4032b5:	pop    rbp
  4032b6:	ret    
  4032b7:	nop    WORD PTR [rax+rax*1+0x0]
  4032c0:	push   rbp
  4032c1:	push   r14
  4032c3:	push   r13
  4032c5:	push   r12
  4032c7:	push   rdi
  4032c8:	push   rsi
  4032c9:	push   rbx
  4032ca:	mov    rbp,rsp
  4032cd:	sub    rsp,0x90
  4032d4:	cmp    BYTE PTR [rcx+0x6c],0x0
  4032d8:	je     0x403490
  4032de:	mov    edx,DWORD PTR [rdx+0x28]
  4032e1:	cmp    edx,0x1
  4032e4:	jbe    0x403490
  4032ea:	cmp    edx,DWORD PTR [rcx+0xc0]
  4032f0:	je     0x403490
  4032f6:	mov    DWORD PTR [rcx+0xc0],edx
  4032fc:	mov    rsi,rcx
  4032ff:	lea    rcx,[rbp-0x20]
  403303:	call   0x4077d0
  403308:	mov    rax,QWORD PTR [rbp-0x20]
  40330c:	lea    rdx,[rbp-0x24]
  403310:	lea    rcx,[rbp-0x50]
  403314:	mov    r12d,DWORD PTR [rbp-0x14]
  403318:	mov    QWORD PTR [rbp-0x50],rax
  40331c:	mov    rax,QWORD PTR [rbp-0x18]
  403320:	mov    QWORD PTR [rbp-0x48],rax
  403324:	mov    rax,QWORD PTR [rbp-0x10]
  403328:	mov    QWORD PTR [rbp-0x40],rax
  40332c:	mov    rax,QWORD PTR [rbp-0x8]
  403330:	mov    QWORD PTR [rbp-0x38],rax
  403334:	call   0x407350
  403339:	test   rax,rax
  40333c:	mov    rbx,rax
  40333f:	je     0x403490
  403345:	mov    edx,DWORD PTR [rbp-0x24]
  403348:	mov    edi,DWORD PTR [rsi+0x70]
  40334b:	mov    ecx,0xa
  403350:	mov    eax,edx
  403352:	sub    eax,r12d
  403355:	cmp    eax,0xa
  403358:	cmovg  eax,ecx
  40335b:	mov    ecx,edi
  40335d:	sub    ecx,eax
  40335f:	cmp    r12d,ecx
  403362:	jle    0x403374
  403364:	cmp    edi,edx
  403366:	jg     0x403374
  403368:	sub    r12d,ecx
  40336b:	movsxd r12,r12d
  40336e:	add    rbx,r12
  403371:	mov    r12d,ecx
  403374:	mov    rcx,QWORD PTR [rsi]
  403377:	call   0x405080
  40337c:	mov    rcx,QWORD PTR [rsi]
  40337f:	xor    edx,edx
  403381:	mov    r13,QWORD PTR [rcx+0x10]
  403385:	call   0x404da0
  40338a:	mov    rcx,QWORD PTR [rsi]
  40338d:	mov    edx,0x20
  403392:	call   0x4050e0
  403397:	test   edi,edi
  403399:	jle    0x4033e8
  40339b:	mov    eax,DWORD PTR [rbp-0x24]
  40339e:	test   eax,eax
  4033a0:	jle    0x4033e8
  4033a2:	lea    eax,[rdi-0x1]
  4033a5:	lea    rdi,[rbx+rax*1+0x1]
  4033aa:	jmp    0x4033b5
  4033ac:	nop    DWORD PTR [rax+0x0]
  4033b0:	test   r8d,r8d
  4033b3:	jle    0x4033e8
  4033b5:	movzx  edx,BYTE PTR [rbx]
  4033b8:	mov    eax,0x20
  4033bd:	cmp    dl,0x9
  4033c0:	je     0x4033ca
  4033c2:	movsx  ecx,dl
  4033c5:	test   dl,dl
  4033c7:	cmovne eax,ecx
  4033ca:	mov    rcx,QWORD PTR [rsi]
  4033cd:	mov    edx,eax
  4033cf:	add    rbx,0x1
  4033d3:	call   0x4050e0
  4033d8:	mov    eax,DWORD PTR [rbp-0x24]
  4033db:	cmp    rbx,rdi
  4033de:	lea    r8d,[rax-0x1]
  4033e2:	mov    DWORD PTR [rbp-0x24],r8d
  4033e6:	jne    0x4033b0
  4033e8:	mov    rcx,QWORD PTR [rsi]
  4033eb:	call   0x405080
  4033f0:	mov    rax,QWORD PTR [rsi]
  4033f3:	lea    rdx,[rip+0x40e28]        # 0x444222
  4033fa:	mov    r8d,0x5
  403400:	movzx  ecx,BYTE PTR [rax+0x3b]
  403404:	call   0x4049f0
  403409:	mov    rbx,rax
  40340c:	mov    rax,QWORD PTR [rsi]
  40340f:	movzx  ecx,BYTE PTR [rax+0x3b]
  403413:	call   0x404a60
  403418:	mov    rcx,rbx
  40341b:	mov    rdi,rax
  40341e:	call   0x43f028
  403423:	mov    rcx,rdi
  403426:	mov    r14,rax
  403429:	call   0x43f028
  40342e:	lea    edx,[r12+0x3]
  403433:	add    rax,r14
  403436:	movsxd rdx,edx
  403439:	add    rdx,rax
  40343c:	lea    rax,[rdx+0x1e]
  403440:	and    rax,0xfffffffffffffff0
  403444:	call   0x439cf0
  403449:	lea    r8,[rip+0x40dd8]        # 0x444228
  403450:	sub    rsp,rax
  403453:	mov    r9,rbx
  403456:	lea    r14,[rsp+0x40]
  40345b:	mov    QWORD PTR [rsp+0x30],rdi
  403460:	mov    DWORD PTR [rsp+0x28],0x5e
  403468:	mov    DWORD PTR [rsp+0x20],r12d
  40346d:	mov    rcx,r14
  403470:	call   0x43f4c0
  403475:	mov    rcx,QWORD PTR [rsi]
  403478:	mov    rdx,r14
  40347b:	call   0x405310
  403480:	mov    rcx,QWORD PTR [rsi]
  403483:	mov    rdx,r13
  403486:	call   0x404da0
  40348b:	nop
  40348c:	nop    DWORD PTR [rax+0x0]
  403490:	mov    rsp,rbp
  403493:	pop    rbx
  403494:	pop    rsi
  403495:	pop    rdi
  403496:	pop    r12
  403498:	pop    r13
  40349a:	pop    r14
  40349c:	pop    rbp
  40349d:	ret    
  40349e:	xchg   ax,ax
  4034a0:	push   rdi
  4034a1:	push   rsi
  4034a2:	push   rbx
  4034a3:	sub    rsp,0x50
  4034a7:	mov    rbx,rcx
  4034aa:	mov    rcx,QWORD PTR [rcx]
  4034ad:	mov    QWORD PTR [rsp+0x48],0x0
  4034b6:	cmp    BYTE PTR [rcx+0x39],0x0
  4034ba:	jne    0x403600
  4034c0:	cmp    edx,0x1
  4034c3:	jbe    0x4035f3
  4034c9:	mov    rsi,QWORD PTR [rip+0x4e1c0]        # 0x451690
  4034d0:	lea    r9,[rsp+0x48]
  4034d5:	mov    r8d,0x2
  4034db:	mov    rcx,QWORD PTR [rsi]
  4034de:	call   0x408dc0
  4034e3:	mov    rax,QWORD PTR [rsp+0x48]
  4034e8:	test   rax,rax
  4034eb:	je     0x4035f3
  4034f1:	cmp    rax,QWORD PTR [rbx+0xc8]
  4034f8:	je     0x4035f3
  4034fe:	mov    QWORD PTR [rbx+0xc8],rax
  403505:	movsxd rax,DWORD PTR [rax+0x14]
  403509:	test   eax,eax
  40350b:	js     0x4035f3
  403511:	mov    rcx,QWORD PTR [rsi]
  403514:	lea    rdx,[rax+rax*4]
  403518:	cmp    BYTE PTR [rbx+0x76],0x0
  40351c:	mov    rax,QWORD PTR [rcx]
  40351f:	lea    rdx,[rax+rdx*8]
  403523:	mov    QWORD PTR [rsp+0x48],rdx
  403528:	movzx  ecx,BYTE PTR [rdx+0x1c]
  40352c:	jne    0x403620
  403532:	mov    eax,0xffffffff
  403537:	mov    r9,QWORD PTR [rdx+0x8]
  40353b:	shl    eax,cl
  40353d:	mov    r8d,eax
  403540:	mov    eax,DWORD PTR [rdx+0x28]
  403543:	sub    eax,0x1
  403546:	sub    eax,DWORD PTR [rdx]
  403548:	and    eax,r8d
  40354b:	lea    r8,[rip+0x40c5c]        # 0x4441ae
  403552:	shr    eax,cl
  403554:	add    eax,DWORD PTR [rdx+0x10]
  403557:	mov    rcx,QWORD PTR [rbx]
  40355a:	lea    rdx,[rip+0x40cff]        # 0x444260
  403561:	mov    DWORD PTR [rsp+0x20],eax
  403565:	call   0x406770
  40356a:	mov    rax,QWORD PTR [rsp+0x48]
  40356f:	mov    edi,0x1
  403574:	movsxd rax,DWORD PTR [rax+0x14]
  403578:	test   eax,eax
  40357a:	js     0x4035db
  40357c:	nop    DWORD PTR [rax+0x0]
  403580:	mov    rcx,QWORD PTR [rsi]
  403583:	lea    rdx,[rax+rax*4]
  403587:	mov    rax,QWORD PTR [rcx]
  40358a:	lea    rdx,[rax+rdx*8]
  40358e:	mov    eax,edi
  403590:	movzx  ecx,BYTE PTR [rdx+0x1c]
  403594:	mov    r9,QWORD PTR [rdx+0x8]
  403598:	mov    QWORD PTR [rsp+0x48],rdx
  40359d:	shl    eax,cl
  40359f:	neg    eax
  4035a1:	mov    r8d,eax
  4035a4:	mov    eax,DWORD PTR [rdx+0x28]
  4035a7:	sub    eax,0x1
  4035aa:	sub    eax,DWORD PTR [rdx]
  4035ac:	and    eax,r8d
  4035af:	lea    r8,[rip+0x40bf8]        # 0x4441ae
  4035b6:	shr    eax,cl
  4035b8:	add    eax,DWORD PTR [rdx+0x10]
  4035bb:	mov    rcx,QWORD PTR [rbx]
  4035be:	lea    rdx,[rip+0x40cc3]        # 0x444288
  4035c5:	mov    DWORD PTR [rsp+0x20],eax
  4035c9:	call   0x406770
  4035ce:	mov    rax,QWORD PTR [rsp+0x48]
  4035d3:	movsxd rax,DWORD PTR [rax+0x14]
  4035d7:	test   eax,eax
  4035d9:	jns    0x403580
  4035db:	mov    rcx,QWORD PTR [rbx]
  4035de:	lea    rdx,[rip+0x40c9b]        # 0x444280
  4035e5:	call   0x406770
  4035ea:	mov    rcx,QWORD PTR [rbx]
  4035ed:	call   0x405080
  4035f2:	nop
  4035f3:	add    rsp,0x50
  4035f7:	pop    rbx
  4035f8:	pop    rsi
  4035f9:	pop    rdi
  4035fa:	ret    
  4035fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403600:	mov    DWORD PTR [rsp+0x3c],edx
  403604:	call   0x405080
  403609:	mov    rax,QWORD PTR [rbx]
  40360c:	mov    edx,DWORD PTR [rsp+0x3c]
  403610:	mov    BYTE PTR [rax+0x39],0x0
  403614:	jmp    0x4034c0
  403619:	nop    DWORD PTR [rax+0x0]
  403620:	mov    eax,DWORD PTR [rdx+0x28]
  403623:	mov    r8d,0x1
  403629:	shl    r8d,cl
  40362c:	mov    r9d,r8d
  40362f:	sub    r8d,0x1
  403633:	sub    eax,0x1
  403636:	sub    eax,DWORD PTR [rdx]
  403638:	neg    r9d
  40363b:	and    eax,r9d
  40363e:	mov    r9,QWORD PTR [rdx+0x8]
  403642:	and    r8d,eax
  403645:	shr    eax,cl
  403647:	mov    rcx,QWORD PTR [rbx]
  40364a:	mov    DWORD PTR [rsp+0x28],r8d
  40364f:	add    eax,DWORD PTR [rdx+0x10]
  403652:	lea    r8,[rip+0x40b55]        # 0x4441ae
  403659:	lea    rdx,[rip+0x40bd8]        # 0x444238
  403660:	mov    DWORD PTR [rsp+0x20],eax
  403664:	call   0x406770
  403669:	jmp    0x40356a
  40366e:	xchg   ax,ax
  403670:	push   r14
  403672:	push   r13
  403674:	push   r12
  403676:	push   rbp
  403677:	push   rdi
  403678:	push   rsi
  403679:	push   rbx
  40367a:	sub    rsp,0x20
  40367e:	xor    eax,eax
  403680:	test   edx,edx
  403682:	js     0x403741
  403688:	cmp    edx,DWORD PTR [rcx+0x40]
  40368b:	jge    0x403741
  403691:	cmp    r8d,0xc
  403695:	jg     0x403741
  40369b:	mov    rax,QWORD PTR [rcx+0x48]
  40369f:	movsxd r10,edx
  4036a2:	test   r9d,r9d
  4036a5:	lea    rax,[rax+r10*4]
  4036a9:	mov    ebx,DWORD PTR [rax]
  4036ab:	je     0x403750
  4036b1:	mov    esi,DWORD PTR [rcx+0x58]
  4036b4:	mov    rdi,QWORD PTR [rcx+0x50]
  4036b8:	mov    ebp,esi
  4036ba:	sub    ebp,0x1
  4036bd:	js     0x403702
  4036bf:	movsxd r11,ebp
  4036c2:	lea    r10,[r11+r11*2]
  4036c6:	shl    r10,0x2
  4036ca:	lea    rax,[rdi+r10*1]
  4036ce:	cmp    DWORD PTR [rax+0x4],edx
  4036d1:	je     0x403764
  4036d7:	mov    ebp,ebp
  4036d9:	lea    r10,[rdi+r10*1-0xc]
  4036de:	sub    r11,rbp
  4036e1:	lea    rax,[r11+r11*2]
  4036e5:	lea    r11,[rdi+rax*4-0xc]
  4036ea:	jmp    0x4036fd
  4036ec:	nop    DWORD PTR [rax+0x0]
  4036f0:	mov    rax,r10
  4036f3:	sub    r10,0xc
  4036f7:	cmp    DWORD PTR [r10+0x10],edx
  4036fb:	je     0x403764
  4036fd:	cmp    r10,r11
  403700:	jne    0x4036f0
  403702:	add    esi,0x1
  403705:	mov    rbp,rcx
  403708:	mov    r14d,edx
  40370b:	movsxd rsi,esi
  40370e:	mov    rcx,rdi
  403711:	mov    r12d,r9d
  403714:	lea    rsi,[rsi+rsi*2]
  403718:	mov    r13d,r8d
  40371b:	shl    rsi,0x2
  40371f:	mov    rdx,rsi
  403722:	call   0x438650
  403727:	mov    QWORD PTR [rbp+0x50],rax
  40372b:	lea    rax,[rax+rsi*1-0xc]
  403730:	mov    DWORD PTR [rax],r12d
  403733:	mov    DWORD PTR [rax+0x4],r14d
  403737:	mov    DWORD PTR [rax+0x8],r13d
  40373b:	add    DWORD PTR [rbp+0x58],0x1
  40373f:	mov    eax,ebx
  403741:	add    rsp,0x20
  403745:	pop    rbx
  403746:	pop    rsi
  403747:	pop    rdi
  403748:	pop    rbp
  403749:	pop    r12
  40374b:	pop    r13
  40374d:	pop    r14
  40374f:	ret    
  403750:	mov    DWORD PTR [rax],r8d
  403753:	mov    eax,ebx
  403755:	add    rsp,0x20
  403759:	pop    rbx
  40375a:	pop    rsi
  40375b:	pop    rdi
  40375c:	pop    rbp
  40375d:	pop    r12
  40375f:	pop    r13
  403761:	pop    r14
  403763:	ret    
  403764:	mov    ebx,DWORD PTR [rax+0x8]
  403767:	jmp    0x403702
  403769:	nop    DWORD PTR [rax+0x0]
  403770:	push   rbx
  403771:	sub    rsp,0x20
  403775:	mov    eax,DWORD PTR [rcx+0x68]
  403778:	mov    rbx,rcx
  40377b:	mov    rcx,QWORD PTR [rcx+0x60]
  40377f:	lea    edx,[rax+0x1]
  403782:	movsxd rdx,edx
  403785:	shl    rdx,0x2
  403789:	call   0x438650
  40378e:	movsxd rdx,DWORD PTR [rbx+0x68]
  403792:	mov    QWORD PTR [rbx+0x60],rax
  403796:	lea    ecx,[rdx+0x1]
  403799:	mov    DWORD PTR [rbx+0x68],ecx
  40379c:	mov    ecx,DWORD PTR [rbx+0x58]
  40379f:	mov    DWORD PTR [rax+rdx*4],ecx
  4037a2:	add    rsp,0x20
  4037a6:	pop    rbx
  4037a7:	ret    
  4037a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4037b0:	push   rbp
  4037b1:	push   rdi
  4037b2:	push   rsi
  4037b3:	push   rbx
  4037b4:	sub    rsp,0x28
  4037b8:	mov    eax,DWORD PTR [rcx+0x68]
  4037bb:	xor    edi,edi
  4037bd:	mov    rbx,rcx
  4037c0:	mov    ebp,edx
  4037c2:	test   eax,eax
  4037c4:	je     0x4037d5
  4037c6:	mov    rdx,QWORD PTR [rcx+0x60]
  4037ca:	sub    eax,0x1
  4037cd:	mov    DWORD PTR [rcx+0x68],eax
  4037d0:	cdqe   
  4037d2:	mov    edi,DWORD PTR [rdx+rax*4]
  4037d5:	mov    eax,DWORD PTR [rbx+0x58]
  4037d8:	mov    rcx,QWORD PTR [rbx+0x50]
  4037dc:	add    eax,0x1
  4037df:	cdqe   
  4037e1:	lea    rsi,[rax+rax*2]
  4037e5:	shl    rsi,0x2
  4037e9:	mov    rdx,rsi
  4037ec:	call   0x438650
  4037f1:	mov    QWORD PTR [rbx+0x50],rax
  4037f5:	lea    rax,[rax+rsi*1-0xc]
  4037fa:	mov    DWORD PTR [rax],ebp
  4037fc:	mov    DWORD PTR [rax+0x4],edi
  4037ff:	mov    DWORD PTR [rax+0x8],0xe
  403806:	add    DWORD PTR [rbx+0x58],0x1
  40380a:	add    rsp,0x28
  40380e:	pop    rbx
  40380f:	pop    rsi
  403810:	pop    rdi
  403811:	pop    rbp
  403812:	ret    
  403813:	nop    DWORD PTR [rax]
  403816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403820:	movzx  edx,BYTE PTR [rcx]
  403823:	mov    rax,rcx
  403826:	cmp    dl,0x2e
  403829:	jne    0x4038f2
  40382f:	cmp    BYTE PTR [rcx+0x1],0x2e
  403833:	jne    0x4038ed
  403839:	movzx  edx,BYTE PTR [rcx+0x2]
  40383d:	cmp    dl,0x5c
  403840:	je     0x40384b
  403842:	cmp    dl,0x2f
  403845:	jne    0x4038ed
  40384b:	mov    rdx,rax
  40384e:	xchg   ax,ax
  403850:	add    rdx,0x3
  403854:	movzx  r8d,BYTE PTR [rdx]
  403858:	cmp    r8b,0x2e
  40385c:	jne    0x4038b4
  40385e:	cmp    BYTE PTR [rdx+0x1],0x2e
  403862:	jne    0x403875
  403864:	movzx  r8d,BYTE PTR [rdx+0x2]
  403869:	cmp    r8b,0x5c
  40386d:	je     0x403850
  40386f:	cmp    r8b,0x2f
  403873:	je     0x403850
  403875:	cmp    rax,rdx
  403878:	jae    0x4038b0
  40387a:	movzx  ecx,BYTE PTR [rdx-0x1]
  40387e:	cmp    cl,0x5c
  403881:	je     0x4038b0
  403883:	cmp    cl,0x2f
  403886:	jne    0x4038a1
  403888:	jmp    0x4038b0
  40388a:	nop    WORD PTR [rax+rax*1+0x0]
  403890:	movzx  r8d,BYTE PTR [rdx-0x1]
  403895:	cmp    r8b,0x5c
  403899:	je     0x4038b0
  40389b:	cmp    r8b,0x2f
  40389f:	je     0x4038b0
  4038a1:	sub    rdx,0x1
  4038a5:	cmp    rdx,rax
  4038a8:	jne    0x403890
  4038aa:	repz ret 
  4038ac:	nop    DWORD PTR [rax+0x0]
  4038b0:	mov    rax,rdx
  4038b3:	ret    
  4038b4:	cmp    r8b,0x2f
  4038b8:	jne    0x403875
  4038ba:	lea    r8,[rip+0x40c7f]        # 0x444540
  4038c1:	jmp    0x4038c8
  4038c3:	test   r10b,r10b
  4038c6:	je     0x403875
  4038c8:	add    rdx,0x1
  4038cc:	add    r8,0x1
  4038d0:	movzx  r9d,BYTE PTR [rdx]
  4038d4:	movzx  r10d,BYTE PTR [r8]
  4038d8:	cmp    r9b,r10b
  4038db:	sete   r11b
  4038df:	test   r9b,r9b
  4038e2:	setne  r9b
  4038e6:	test   r11b,r9b
  4038e9:	jne    0x4038c3
  4038eb:	jmp    0x403875
  4038ed:	mov    rdx,rax
  4038f0:	jmp    0x403875
  4038f2:	cmp    dl,0x2f
  4038f5:	jne    0x4038aa
  4038f7:	mov    rdx,rax
  4038fa:	jmp    0x4038ba
  4038fc:	nop    DWORD PTR [rax+0x0]
  403900:	push   rbx
  403901:	sub    rsp,0x60
  403905:	lea    rax,[rsp+0x78]
  40390a:	mov    QWORD PTR [rsp+0x80],r8
  403912:	mov    QWORD PTR [rsp+0x88],r9
  40391a:	mov    rbx,rcx
  40391d:	mov    QWORD PTR [rsp+0x78],rdx
  403922:	mov    QWORD PTR [rsp+0x28],rax
  403927:	call   QWORD PTR [rip+0x57d2f]        # 0x45b65c
  40392d:	mov    eax,DWORD PTR [rax]
  40392f:	lea    rdx,[rsp+0x30]
  403934:	mov    QWORD PTR [rsp+0x30],rbx
  403939:	mov    QWORD PTR [rsp+0x48],0x0
  403942:	mov    QWORD PTR [rsp+0x50],0x0
  40394b:	mov    DWORD PTR [rsp+0x40],eax
  40394f:	lea    rax,[rsp+0x28]
  403954:	mov    QWORD PTR [rsp+0x38],rax
  403959:	mov    rax,QWORD PTR [rip+0x3e6c0]        # 0x442020
  403960:	mov    rcx,QWORD PTR [rax]
  403963:	call   0x406730
  403968:	mov    rax,QWORD PTR [rip+0x3e6b1]        # 0x442020
  40396f:	mov    rcx,QWORD PTR [rax]
  403972:	call   0x406880
  403977:	nop
  403978:	add    rsp,0x60
  40397c:	pop    rbx
  40397d:	ret    
  40397e:	xchg   ax,ax
  403980:	mov    rax,QWORD PTR [rip+0x3e699]        # 0x442020
  403987:	cmp    QWORD PTR [rax+0x18],0x0
  40398c:	setne  al
  40398f:	ret    
  403990:	sub    rsp,0x38
  403994:	mov    QWORD PTR [rsp+0x50],r8
  403999:	lea    r8,[rsp+0x50]
  40399e:	mov    QWORD PTR [rsp+0x58],r9
  4039a3:	mov    QWORD PTR [rsp+0x28],r8
  4039a8:	call   0x43a2d0
  4039ad:	nop
  4039ae:	add    rsp,0x38
  4039b2:	ret    
  4039b3:	nop    DWORD PTR [rax]
  4039b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039c0:	push   rsi
  4039c1:	push   rbx
  4039c2:	sub    rsp,0x28
  4039c6:	mov    esi,edx
  4039c8:	mov    rbx,r8
  4039cb:	call   0x403820
  4039d0:	lea    rcx,[rip+0x408d3]        # 0x4442aa
  4039d7:	mov    r8,rax
  4039da:	mov    r9d,esi
  4039dd:	mov    rdx,rbx
  4039e0:	call   0x404950
  4039e5:	nop
  4039e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039f0:	push   r15
  4039f2:	push   r14
  4039f4:	push   r13
  4039f6:	push   r12
  4039f8:	push   rbp
  4039f9:	push   rdi
  4039fa:	push   rsi
  4039fb:	push   rbx
  4039fc:	sub    rsp,0x88
  403a03:	movsxd rax,DWORD PTR [rdx+0x38]
  403a07:	mov    rsi,QWORD PTR [rcx]
  403a0a:	mov    rbx,rdx
  403a0d:	lea    rdx,[rip+0x40d2c]        # 0x444740
  403a14:	mov    rbp,rcx
  403a17:	mov    r13,QWORD PTR [rdx+rax*8]
  403a1b:	lea    rdx,[rip+0x40bde]        # 0x444600
  403a22:	mov    rdi,QWORD PTR [rdx+rax*8]
  403a26:	test   rdi,rdi
  403a29:	je     0x403b30
  403a2f:	mov    rcx,rdi
  403a32:	call   0x43f028
  403a37:	movzx  ecx,BYTE PTR [rsi+0x3b]
  403a3b:	mov    r8,rax
  403a3e:	mov    rdx,rdi
  403a41:	call   0x4049f0
  403a46:	movzx  ecx,BYTE PTR [rsi+0x3b]
  403a4a:	mov    r14,rax
  403a4d:	call   0x404a60
  403a52:	mov    r15,rax
  403a55:	movzx  ecx,BYTE PTR [rsi+0x3b]
  403a59:	lea    rdx,[rip+0x4074e]        # 0x4441ae
  403a60:	mov    r8d,0x5
  403a66:	call   0x4049f0
  403a6b:	movzx  ecx,BYTE PTR [rsi+0x3b]
  403a6f:	mov    r12,rax
  403a72:	call   0x404a60
  403a77:	mov    edx,DWORD PTR [rbx+0x28]
  403a7a:	lea    rcx,[rsp+0x60]
  403a7f:	mov    QWORD PTR [rsp+0x58],rax
  403a84:	call   0x4077d0
  403a89:	mov    edx,DWORD PTR [rbx+0x2c]
  403a8c:	mov    r8,QWORD PTR [rsp+0x60]
  403a91:	mov    r9d,DWORD PTR [rsp+0x68]
  403a96:	mov    rax,QWORD PTR [rsp+0x58]
  403a9b:	test   edx,edx
  403a9d:	cmove  edx,DWORD PTR [rsp+0x6c]
  403aa2:	cmp    DWORD PTR [rbx+0x38],0xc
  403aa6:	jg     0x403b90
  403aac:	test   r8,r8
  403aaf:	je     0x403b63
  403ab5:	lea    rdi,[rip+0x40862]        # 0x44431e
  403abc:	mov    ecx,0xb
  403ac1:	mov    rsi,r8
  403ac4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403ac6:	je     0x403b40
  403ac8:	cmp    BYTE PTR [rbp+0x76],0x0
  403acc:	jne    0x403b05
  403ace:	lea    rcx,[rip+0x40869]        # 0x44433e
  403ad5:	mov    QWORD PTR [rsp+0x38],r15
  403ada:	mov    QWORD PTR [rsp+0x30],r13
  403adf:	mov    QWORD PTR [rsp+0x28],r14
  403ae4:	mov    QWORD PTR [rsp+0x20],rax
  403ae9:	mov    rdx,r12
  403aec:	call   0x402d20
  403af1:	add    rsp,0x88
  403af8:	pop    rbx
  403af9:	pop    rsi
  403afa:	pop    rdi
  403afb:	pop    rbp
  403afc:	pop    r12
  403afe:	pop    r13
  403b00:	pop    r14
  403b02:	pop    r15
  403b04:	ret    
  403b05:	lea    rcx,[rip+0x4081d]        # 0x444329
  403b0c:	mov    DWORD PTR [rsp+0x20],edx
  403b10:	mov    QWORD PTR [rsp+0x40],r15
  403b15:	mov    QWORD PTR [rsp+0x38],r13
  403b1a:	mov    QWORD PTR [rsp+0x30],r14
  403b1f:	mov    rdx,r12
  403b22:	mov    QWORD PTR [rsp+0x28],rax
  403b27:	call   0x402d20
  403b2c:	jmp    0x403af1
  403b2e:	xchg   ax,ax
  403b30:	lea    r15,[rip+0x4066b]        # 0x4441a2
  403b37:	mov    r14,r15
  403b3a:	jmp    0x403a55
  403b3f:	nop
  403b40:	lea    rcx,[rip+0x407c8]        # 0x44430f
  403b47:	mov    QWORD PTR [rsp+0x30],r15
  403b4c:	mov    QWORD PTR [rsp+0x28],r13
  403b51:	mov    QWORD PTR [rsp+0x20],r14
  403b56:	mov    r9,rax
  403b59:	mov    rdx,r12
  403b5c:	call   0x402d20
  403b61:	jmp    0x403af1
  403b63:	mov    r8,QWORD PTR [rip+0x55616]        # 0x459180
  403b6a:	lea    rcx,[rip+0x4079e]        # 0x44430f
  403b71:	mov    QWORD PTR [rsp+0x30],r15
  403b76:	mov    QWORD PTR [rsp+0x28],r13
  403b7b:	mov    QWORD PTR [rsp+0x20],r14
  403b80:	mov    r9,rax
  403b83:	mov    rdx,r12
  403b86:	call   0x402d20
  403b8b:	jmp    0x403af1
  403b90:	lea    r8,[rip+0x40a19]        # 0x4445b0
  403b97:	lea    rcx,[rip+0x40722]        # 0x4442c0
  403b9e:	mov    edx,0xf4
  403ba3:	call   0x4039c0
  403ba8:	nop
  403ba9:	nop    DWORD PTR [rax+0x0]
  403bb0:	push   rsi
  403bb1:	push   rbx
  403bb2:	sub    rsp,0x28
  403bb6:	mov    rsi,rdx
  403bb9:	mov    edx,DWORD PTR [rdx+0x28]
  403bbc:	mov    rbx,rcx
  403bbf:	call   0x4034a0
  403bc4:	mov    rdx,rsi
  403bc7:	mov    rcx,rbx
  403bca:	call   0x4039f0
  403bcf:	mov    rcx,QWORD PTR [rbx]
  403bd2:	mov    rdx,rax
  403bd5:	add    rsp,0x28
  403bd9:	pop    rbx
  403bda:	pop    rsi
  403bdb:	jmp    0x404da0
  403be0:	push   rdi
  403be1:	push   rsi
  403be2:	push   rbx
  403be3:	sub    rsp,0x70
  403be7:	lea    rax,[rsp+0xa8]
  403bef:	mov    rbx,rcx
  403bf2:	mov    esi,edx
  403bf4:	mov    rdi,r8
  403bf7:	mov    QWORD PTR [rsp+0xa8],r9
  403bff:	mov    QWORD PTR [rsp+0x28],rax
  403c04:	call   QWORD PTR [rip+0x57a52]        # 0x45b65c
  403c0a:	mov    eax,DWORD PTR [rax]
  403c0c:	cmp    BYTE PTR [rbx+0xd4],0x0
  403c13:	mov    QWORD PTR [rsp+0x30],rdi
  403c18:	mov    DWORD PTR [rsp+0x58],esi
  403c1c:	mov    DWORD PTR [rsp+0x5c],0x0
  403c24:	mov    DWORD PTR [rsp+0x68],0x8
  403c2c:	mov    DWORD PTR [rsp+0x40],eax
  403c30:	lea    rax,[rsp+0x28]
  403c35:	mov    DWORD PTR [rsp+0x6c],0x0
  403c3d:	mov    QWORD PTR [rsp+0x38],rax
  403c42:	jne    0x403ca0
  403c44:	lea    rsi,[rsp+0x30]
  403c49:	mov    rax,QWORD PTR [rbx]
  403c4c:	mov    rcx,rbx
  403c4f:	mov    rdx,rsi
  403c52:	mov    rdi,QWORD PTR [rax+0x10]
  403c56:	call   0x4039f0
  403c5b:	mov    rcx,QWORD PTR [rbx]
  403c5e:	mov    rdx,rax
  403c61:	call   0x404da0
  403c66:	mov    rcx,QWORD PTR [rbx]
  403c69:	call   0x405080
  403c6e:	mov    rcx,QWORD PTR [rbx]
  403c71:	mov    rdx,rsi
  403c74:	call   0x405460
  403c79:	mov    rcx,QWORD PTR [rbx]
  403c7c:	call   0x406660
  403c81:	mov    rcx,QWORD PTR [rbx]
  403c84:	call   0x404dd0
  403c89:	mov    rcx,QWORD PTR [rbx]
  403c8c:	mov    rdx,rdi
  403c8f:	call   0x404da0
  403c94:	mov    rdx,rsi
  403c97:	mov    rcx,rbx
  403c9a:	call   0x4032c0
  403c9f:	nop
  403ca0:	add    rsp,0x70
  403ca4:	pop    rbx
  403ca5:	pop    rsi
  403ca6:	pop    rdi
  403ca7:	ret    
  403ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  403cb0:	push   rsi
  403cb1:	push   rbx
  403cb2:	sub    rsp,0x48
  403cb6:	cmp    edx,0x9
  403cb9:	mov    rbx,rcx
  403cbc:	ja     0x403dc0
  403cc2:	lea    rax,[rip+0x407a7]        # 0x444470
  403cc9:	mov    edx,edx
  403ccb:	movsxd rdx,DWORD PTR [rax+rdx*4]
  403ccf:	add    rax,rdx
  403cd2:	jmp    rax
  403cd4:	cmp    BYTE PTR [rcx+0x75],0x0
  403cd8:	jne    0x403db7
  403cde:	cmp    BYTE PTR [rcx+0x80],0x0
  403ce5:	jne    0x403e05
  403ceb:	mov    esi,DWORD PTR [rcx+0x84]
  403cf1:	test   esi,esi
  403cf3:	je     0x403d03
  403cf5:	mov    eax,DWORD PTR [rcx+0x1c]
  403cf8:	add    eax,DWORD PTR [rcx+0x18]
  403cfb:	cmp    esi,eax
  403cfd:	jbe    0x403e2d
  403d03:	add    rsp,0x48
  403d07:	pop    rbx
  403d08:	pop    rsi
  403d09:	ret    
  403d0a:	nop    WORD PTR [rax+rax*1+0x0]
  403d10:	lea    r8,[rip+0xfffffffffffff209]        # 0x402f20
  403d17:	xor    r9d,r9d
  403d1a:	xor    edx,edx
  403d1c:	xor    ecx,ecx
  403d1e:	call   0x424b40
  403d23:	test   rax,rax
  403d26:	mov    DWORD PTR [rsp+0x3c],0x0
  403d2e:	je     0x403d55
  403d30:	lea    rdx,[rsp+0x3c]
  403d35:	lea    r9,[rip+0xfffffffffffff1e4]        # 0x402f20
  403d3c:	lea    r8,[rip+0xfffffffffffff01d]        # 0x402d60
  403d43:	mov    rcx,rax
  403d46:	mov    QWORD PTR [rsp+0x20],rdx
  403d4b:	mov    edx,0x2
  403d50:	call   0x424c40
  403d55:	cmp    BYTE PTR [rbx+0x75],0x0
  403d59:	jne    0x403db7
  403d5b:	mov    rbx,QWORD PTR [rip+0x578ba]        # 0x45b61c
  403d62:	call   rbx
  403d64:	lea    rdx,[rip+0x40645]        # 0x4443b0
  403d6b:	lea    rcx,[rax+0x60]
  403d6f:	call   0x403990
  403d74:	mov    eax,DWORD PTR [rsp+0x3c]
  403d78:	test   eax,eax
  403d7a:	jle    0x403d8e
  403d7c:	call   rbx
  403d7e:	lea    rdx,[rip+0x4067b]        # 0x444400
  403d85:	lea    rcx,[rax+0x60]
  403d89:	call   0x403990
  403d8e:	call   rbx
  403d90:	mov    r8,QWORD PTR [rip+0x4d869]        # 0x451600
  403d97:	lea    rcx,[rax+0x60]
  403d9b:	lea    rdx,[rip+0x4069a]        # 0x44443c
  403da2:	call   0x403990
  403da7:	mov    ecx,0x4
  403dac:	call   0x43f158
  403db1:	cmp    BYTE PTR [rcx+0x75],0x0
  403db5:	je     0x403de0
  403db7:	call   0x43f180
  403dbc:	nop    DWORD PTR [rax+0x0]
  403dc0:	lea    r8,[rip+0x407c9]        # 0x444590
  403dc7:	lea    rcx,[rip+0x404f2]        # 0x4442c0
  403dce:	mov    edx,0x1f2
  403dd3:	call   0x4039c0
  403dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  403de0:	call   0x4031c0
  403de5:	call   QWORD PTR [rip+0x57831]        # 0x45b61c
  403deb:	lea    rdx,[rip+0x40664]        # 0x444456
  403df2:	lea    rcx,[rax+0x60]
  403df6:	call   0x403990
  403dfb:	mov    ecx,0x1
  403e00:	call   0x43f158
  403e05:	call   QWORD PTR [rip+0x57811]        # 0x45b61c
  403e0b:	lea    rdx,[rip+0x4053e]        # 0x444350
  403e12:	lea    rcx,[rax+0x60]
  403e16:	call   0x403990
  403e1b:	mov    rcx,rbx
  403e1e:	call   0x4031c0
  403e23:	mov    ecx,0x1
  403e28:	call   0x43f158
  403e2d:	call   QWORD PTR [rip+0x577e9]        # 0x45b61c
  403e33:	lea    rdx,[rip+0x40546]        # 0x444380
  403e3a:	lea    rcx,[rax+0x60]
  403e3e:	mov    r8d,esi
  403e41:	call   0x403990
  403e46:	mov    rcx,rbx
  403e49:	call   0x4031c0
  403e4e:	mov    ecx,0x1
  403e53:	call   0x43f158
  403e58:	nop
  403e59:	nop    DWORD PTR [rax+0x0]
  403e60:	push   rbp
  403e61:	push   r15
  403e63:	push   r14
  403e65:	push   r13
  403e67:	push   r12
  403e69:	push   rdi
  403e6a:	push   rsi
  403e6b:	push   rbx
  403e6c:	sub    rsp,0x58
  403e70:	lea    rbp,[rsp+0x80]
  403e78:	mov    edi,DWORD PTR [rdx+0x38]
  403e7b:	mov    r13d,DWORD PTR [rdx+0x28]
  403e7f:	mov    rbx,rcx
  403e82:	mov    rsi,rdx
  403e85:	lea    eax,[rdi-0x6]
  403e88:	and    eax,0xfffffffb
  403e8b:	jne    0x403eb0
  403e8d:	cmp    BYTE PTR [rcx+0x81],0x0
  403e94:	je     0x4040d0
  403e9a:	xor    eax,eax
  403e9c:	lea    rsp,[rbp-0x28]
  403ea0:	pop    rbx
  403ea1:	pop    rsi
  403ea2:	pop    rdi
  403ea3:	pop    r12
  403ea5:	pop    r13
  403ea7:	pop    r14
  403ea9:	pop    r15
  403eab:	pop    rbp
  403eac:	ret    
  403ead:	nop    DWORD PTR [rax]
  403eb0:	mov    eax,edi
  403eb2:	cmp    eax,0xa
  403eb5:	je     0x4040b1
  403ebb:	cmp    eax,0x8
  403ebe:	je     0x404110
  403ec4:	mov    edx,DWORD PTR [rbx+0xd0]
  403eca:	test   edx,edx
  403ecc:	jle    0x403ee8
  403ece:	cmp    eax,0x3
  403ed1:	jne    0x40412b
  403ed7:	cmp    edx,0x1
  403eda:	jne    0x40412b
  403ee0:	mov    rcx,QWORD PTR [rbx]
  403ee3:	call   0x406880
  403ee8:	cmp    BYTE PTR [rbx+0x3d],0x0
  403eec:	je     0x403ef8
  403eee:	cmp    DWORD PTR [rsi+0x38],0x6
  403ef2:	je     0x404100
  403ef8:	mov    ecx,DWORD PTR [rsi+0x3c]
  403efb:	test   ecx,ecx
  403efd:	je     0x403fa0
  403f03:	cmp    ecx,DWORD PTR [rbx+0x7c]
  403f06:	je     0x403fa0
  403f0c:	mov    rdx,QWORD PTR [rbx+0xa8]
  403f13:	call   QWORD PTR [rbx+0xa0]
  403f19:	test   eax,eax
  403f1b:	je     0x403e9a
  403f21:	mov    r12d,DWORD PTR [rbx+0x58]
  403f25:	test   r12d,r12d
  403f28:	jle    0x404235
  403f2e:	sub    r12d,0x1
  403f32:	mov    r14,QWORD PTR [rip+0x4d757]        # 0x451690
  403f39:	jmp    0x403f5e
  403f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  403f40:	mov    eax,DWORD PTR [rax+0x4]
  403f43:	test   eax,eax
  403f45:	je     0x404230
  403f4b:	cmp    DWORD PTR [rsi+0x3c],eax
  403f4e:	je     0x404230
  403f54:	sub    r12d,0x1
  403f58:	js     0x404235
  403f5e:	mov    rdx,QWORD PTR [rbx+0x50]
  403f62:	movsxd rax,r12d
  403f65:	mov    rcx,QWORD PTR [r14]
  403f68:	lea    rax,[rax+rax*2]
  403f6c:	mov    r8d,r13d
  403f6f:	mov    edx,DWORD PTR [rdx+rax*4]
  403f72:	lea    r15,[rax*4+0x0]
  403f7a:	call   0x408ee0
  403f7f:	test   eax,eax
  403f81:	js     0x403f54
  403f83:	mov    rax,r15
  403f86:	add    rax,QWORD PTR [rbx+0x50]
  403f8a:	mov    r9d,DWORD PTR [rax+0x8]
  403f8e:	cmp    r9d,0xe
  403f92:	jne    0x403f40
  403f94:	mov    r12d,DWORD PTR [rax+0x4]
  403f98:	jmp    0x403f54
  403f9a:	nop    WORD PTR [rax+rax*1+0x0]
  403fa0:	mov    r9d,DWORD PTR [rsi+0x38]
  403fa4:	cmp    edi,0x6
  403fa7:	je     0x404210
  403fad:	add    DWORD PTR [rbx+0xd0],0x1
  403fb4:	cmp    r9d,0x3
  403fb8:	je     0x404060
  403fbe:	movsxd rax,r9d
  403fc1:	add    DWORD PTR [rbx+rax*4+0x8],0x1
  403fc6:	cmp    BYTE PTR [rbx+0x74],0x0
  403fca:	mov    r12,QWORD PTR [rsi]
  403fcd:	jne    0x404160
  403fd3:	lea    rax,[rsi+0x28]
  403fd7:	mov    rcx,QWORD PTR [rbx]
  403fda:	mov    rdx,rsi
  403fdd:	mov    QWORD PTR [rsi+0x30],0x0
  403fe5:	mov    QWORD PTR [rsi+0x18],rax
  403fe9:	lea    rax,[rsi+0x30]
  403fed:	mov    QWORD PTR [rsi+0x20],rax
  403ff1:	call   0x405460
  403ff6:	mov    rdx,rsi
  403ff9:	mov    rcx,rbx
  403ffc:	call   QWORD PTR [rbx+0x88]
  404002:	mov    rcx,QWORD PTR [rbx]
  404005:	call   0x406660
  40400a:	mov    rdx,rsi
  40400d:	mov    rcx,rbx
  404010:	call   0x4032c0
  404015:	mov    rdx,rsi
  404018:	mov    rcx,rbx
  40401b:	call   QWORD PTR [rbx+0x90]
  404021:	mov    rcx,QWORD PTR [rbx]
  404024:	call   0x404dd0
  404029:	mov    rcx,QWORD PTR [rbx]
  40402c:	call   0x406880
  404031:	mov    edx,DWORD PTR [rsi+0x38]
  404034:	mov    rcx,rbx
  404037:	call   0x403cb0
  40403c:	mov    QWORD PTR [rsi],r12
  40403f:	mov    QWORD PTR [rsi+0x30],0x0
  404047:	mov    eax,0x1
  40404c:	sub    DWORD PTR [rbx+0xd0],0x1
  404053:	jmp    0x403e9c
  404058:	nop    DWORD PTR [rax+rax*1+0x0]
  404060:	mov    edx,DWORD PTR [rbx+0x18]
  404063:	test   edx,edx
  404065:	jle    0x404260
  40406b:	cmp    BYTE PTR [rbx+0x75],0x0
  40406f:	je     0x40428c
  404075:	mov    rax,QWORD PTR [rbx+0x98]
  40407c:	test   rax,rax
  40407f:	je     0x404283
  404085:	mov    r8,QWORD PTR [rsi+0x8]
  404089:	mov    rdx,QWORD PTR [rsi]
  40408c:	mov    rcx,rbx
  40408f:	call   rax
  404091:	mov    r9d,DWORD PTR [rsi+0x38]
  404095:	cmp    r9d,0x4
  404099:	jne    0x403fbe
  40409f:	cmp    edi,0x6
  4040a2:	jne    0x403fbe
  4040a8:	add    DWORD PTR [rbx+0x38],0x1
  4040ac:	jmp    0x403fc6
  4040b1:	cmp    BYTE PTR [rbx+0x77],0x1
  4040b5:	sbb    edi,edi
  4040b7:	and    edi,0x2
  4040ba:	add    edi,0x4
  4040bd:	mov    DWORD PTR [rsi+0x38],edi
  4040c0:	mov    eax,edi
  4040c2:	jmp    0x403ec4
  4040c7:	nop    WORD PTR [rax+rax*1+0x0]
  4040d0:	mov    r14,QWORD PTR [rip+0x4d5b9]        # 0x451690
  4040d7:	mov    edx,r13d
  4040da:	mov    rcx,QWORD PTR [r14]
  4040dd:	call   0x408d20
  4040e2:	test   eax,eax
  4040e4:	je     0x4040f3
  4040e6:	cmp    BYTE PTR [rbx+0x82],0x0
  4040ed:	je     0x403e9a
  4040f3:	mov    eax,DWORD PTR [rsi+0x38]
  4040f6:	jmp    0x403eb2
  4040fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404100:	mov    DWORD PTR [rsi+0x38],0x4
  404107:	jmp    0x403ef8
  40410c:	nop    DWORD PTR [rax+0x0]
  404110:	cmp    BYTE PTR [rbx+0xd4],0x0
  404117:	jne    0x403e9a
  40411d:	mov    edx,DWORD PTR [rbx+0xd0]
  404123:	test   edx,edx
  404125:	jle    0x403ee8
  40412b:	cmp    edx,0x2
  40412e:	jle    0x404276
  404134:	call   QWORD PTR [rip+0x574e2]        # 0x45b61c
  40413a:	lea    rdx,[rip+0x40357]        # 0x444498
  404141:	lea    rcx,[rax+0x60]
  404145:	call   0x403990
  40414a:	mov    edx,0x3
  40414f:	mov    rcx,rbx
  404152:	call   0x403cb0
  404157:	call   0x43f180
  40415c:	nop    DWORD PTR [rax+0x0]
  404160:	mov    r8d,edi
  404163:	mov    edx,DWORD PTR [rsi+0x3c]
  404166:	mov    rcx,rbx
  404169:	call   QWORD PTR [rbx+0xb0]
  40416f:	test   rax,rax
  404172:	mov    rdi,rax
  404175:	je     0x403fd3
  40417b:	lea    rax,[rip+0x4038a]        # 0x44450c
  404182:	mov    QWORD PTR [rsp+0x28],0x0
  40418b:	lea    r8,[rip+0x40376]        # 0x444508
  404192:	lea    rdx,[rip+0x40371]        # 0x44450a
  404199:	mov    r9,rdi
  40419c:	mov    QWORD PTR [rsp+0x20],rax
  4041a1:	mov    rcx,QWORD PTR [rsi]
  4041a4:	call   0x435ba0
  4041a9:	lea    edx,[rax+0x1]
  4041ac:	add    rdx,0x1e
  4041b0:	shr    rdx,0x4
  4041b4:	mov    rax,rdx
  4041b7:	shl    rax,0x4
  4041bb:	call   0x439cf0
  4041c0:	lea    r8,[rip+0x40341]        # 0x444508
  4041c7:	sub    rsp,rax
  4041ca:	mov    rax,QWORD PTR [rip+0x4d4af]        # 0x451680
  4041d1:	mov    r9,rdi
  4041d4:	lea    rdx,[rsp+0x30]
  4041d9:	mov    QWORD PTR [rax],rdx
  4041dc:	lea    rax,[rip+0x40329]        # 0x44450c
  4041e3:	mov    QWORD PTR [rsp+0x28],0x0
  4041ec:	lea    rdx,[rip+0x40317]        # 0x44450a
  4041f3:	mov    QWORD PTR [rsp+0x20],rax
  4041f8:	mov    rcx,QWORD PTR [rsi]
  4041fb:	call   0x435c60
  404200:	mov    rcx,rdi
  404203:	mov    QWORD PTR [rsi],rax
  404206:	call   0x43f100
  40420b:	jmp    0x403fd3
  404210:	cmp    r9d,0x4
  404214:	jne    0x403fad
  40421a:	mov    BYTE PTR [rbx+0x3c],0x1
  40421e:	add    DWORD PTR [rbx+0xd0],0x1
  404225:	jmp    0x404095
  40422a:	nop    WORD PTR [rax+rax*1+0x0]
  404230:	test   r9d,r9d
  404233:	jne    0x404246
  404235:	movsxd rdx,DWORD PTR [rsi+0x3c]
  404239:	mov    rax,QWORD PTR [rbx+0x48]
  40423d:	mov    r9d,DWORD PTR [rax+rdx*4]
  404241:	test   r9d,r9d
  404244:	je     0x404270
  404246:	mov    DWORD PTR [rsi+0x38],r9d
  40424a:	cmp    r9d,0x1
  40424e:	jne    0x403fa4
  404254:	jmp    0x403e9a
  404259:	nop    DWORD PTR [rax+0x0]
  404260:	mov    eax,DWORD PTR [rbx+0x1c]
  404263:	test   eax,eax
  404265:	jg     0x40406b
  40426b:	jmp    0x404075
  404270:	mov    r9d,DWORD PTR [rsi+0x38]
  404274:	jmp    0x40424a
  404276:	mov    rcx,QWORD PTR [rbx]
  404279:	call   0x406880
  40427e:	jmp    0x404134
  404283:	mov    r9d,DWORD PTR [rsi+0x38]
  404287:	jmp    0x403fbe
  40428c:	mov    edx,DWORD PTR [rsi+0x28]
  40428f:	lea    rcx,[rbp-0x50]
  404293:	call   0x4077b0
  404298:	mov    esi,DWORD PTR [rbp-0x48]
  40429b:	mov    rbx,QWORD PTR [rbp-0x50]
  40429f:	call   QWORD PTR [rip+0x57377]        # 0x45b61c
  4042a5:	lea    rdx,[rip+0x4022c]        # 0x4444d8
  4042ac:	lea    rcx,[rax+0x60]
  4042b0:	mov    r9d,esi
  4042b3:	mov    r8,rbx
  4042b6:	call   0x403990
  4042bb:	mov    ecx,0x4
  4042c0:	call   0x43f158
  4042c5:	nop
  4042c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042d0:	push   rbp
  4042d1:	push   rdi
  4042d2:	push   rsi
  4042d3:	push   rbx
  4042d4:	sub    rsp,0x78
  4042d8:	lea    rax,[rsp+0xc0]
  4042e0:	cmp    ecx,0xb
  4042e3:	mov    ebx,ecx
  4042e5:	mov    esi,edx
  4042e7:	mov    ebp,r8d
  4042ea:	mov    rdi,r9
  4042ed:	mov    QWORD PTR [rsp+0x28],rax
  4042f2:	je     0x404350
  4042f4:	call   QWORD PTR [rip+0x57362]        # 0x45b65c
  4042fa:	mov    eax,DWORD PTR [rax]
  4042fc:	mov    DWORD PTR [rsp+0x68],ebx
  404300:	sub    ebx,0x6
  404303:	and    ebx,0xfffffffb
  404306:	mov    QWORD PTR [rsp+0x30],rdi
  40430b:	mov    DWORD PTR [rsp+0x58],esi
  40430f:	mov    DWORD PTR [rsp+0x5c],0x0
  404317:	mov    DWORD PTR [rsp+0x6c],0x0
  40431f:	mov    DWORD PTR [rsp+0x40],eax
  404323:	lea    rax,[rsp+0x28]
  404328:	mov    QWORD PTR [rsp+0x38],rax
  40432d:	jne    0x404333
  40432f:	mov    DWORD PTR [rsp+0x6c],ebp
  404333:	mov    rcx,QWORD PTR [rip+0x3dce6]        # 0x442020
  40433a:	lea    rdx,[rsp+0x30]
  40433f:	call   0x403e60
  404344:	add    rsp,0x78
  404348:	pop    rbx
  404349:	pop    rsi
  40434a:	pop    rdi
  40434b:	pop    rbp
  40434c:	ret    
  40434d:	nop    DWORD PTR [rax]
  404350:	mov    rax,QWORD PTR [rip+0x3dcc9]        # 0x442020
  404357:	cmp    BYTE PTR [rax+0x78],0x1
  40435b:	sbb    ebx,ebx
  40435d:	call   QWORD PTR [rip+0x572f9]        # 0x45b65c
  404363:	mov    eax,DWORD PTR [rax]
  404365:	mov    rcx,QWORD PTR [rip+0x3dcb4]        # 0x442020
  40436c:	and    ebx,0xfffffffe
  40436f:	add    ebx,0x6
  404372:	mov    QWORD PTR [rsp+0x30],rdi
  404377:	mov    DWORD PTR [rsp+0x58],esi
  40437b:	mov    DWORD PTR [rsp+0x5c],0x0
  404383:	mov    DWORD PTR [rsp+0x68],ebx
  404387:	mov    DWORD PTR [rsp+0x40],eax
  40438b:	lea    rax,[rsp+0x28]
  404390:	mov    QWORD PTR [rsp+0x38],rax
  404395:	mov    eax,DWORD PTR [rcx+0x7c]
  404398:	mov    DWORD PTR [rsp+0x6c],eax
  40439c:	jmp    0x40433a
  40439e:	xchg   ax,ax
  4043a0:	push   rsi
  4043a1:	push   rbx
  4043a2:	sub    rsp,0x78
  4043a6:	lea    rax,[rsp+0xa0]
  4043ae:	mov    ebx,ecx
  4043b0:	mov    rsi,rdx
  4043b3:	mov    QWORD PTR [rsp+0xa0],r8
  4043bb:	mov    QWORD PTR [rsp+0xa8],r9
  4043c3:	mov    QWORD PTR [rsp+0x28],rax
  4043c8:	call   QWORD PTR [rip+0x5728e]        # 0x45b65c
  4043ce:	mov    eax,DWORD PTR [rax]
  4043d0:	mov    rcx,QWORD PTR [rip+0x3dc49]        # 0x442020
  4043d7:	lea    rdx,[rsp+0x30]
  4043dc:	mov    QWORD PTR [rsp+0x30],rsi
  4043e1:	mov    DWORD PTR [rsp+0x58],ebx
  4043e5:	mov    DWORD PTR [rsp+0x5c],0x0
  4043ed:	mov    DWORD PTR [rsp+0x68],0x8
  4043f5:	mov    DWORD PTR [rsp+0x40],eax
  4043f9:	lea    rax,[rsp+0x28]
  4043fe:	mov    DWORD PTR [rsp+0x6c],0x0
  404406:	mov    QWORD PTR [rsp+0x38],rax
  40440b:	call   0x403e60
  404410:	nop
  404411:	add    rsp,0x78
  404415:	pop    rbx
  404416:	pop    rsi
  404417:	ret    
  404418:	nop    DWORD PTR [rax+rax*1+0x0]
  404420:	push   rsi
  404421:	push   rbx
  404422:	sub    rsp,0x78
  404426:	lea    rax,[rsp+0xb0]
  40442e:	mov    ebx,ecx
  404430:	mov    rcx,r8
  404433:	mov    r8d,edx
  404436:	mov    rdx,r9
  404439:	mov    QWORD PTR [rsp+0x28],rax
  40443e:	call   0x406a90
  404443:	mov    rsi,rax
  404446:	call   QWORD PTR [rip+0x57210]        # 0x45b65c
  40444c:	mov    eax,DWORD PTR [rax]
  40444e:	mov    rcx,QWORD PTR [rip+0x3dbcb]        # 0x442020
  404455:	lea    rdx,[rsp+0x30]
  40445a:	mov    QWORD PTR [rsp+0x30],rsi
  40445f:	mov    DWORD PTR [rsp+0x58],ebx
  404463:	mov    DWORD PTR [rsp+0x5c],0x0
  40446b:	mov    DWORD PTR [rsp+0x68],0x8
  404473:	mov    DWORD PTR [rsp+0x40],eax
  404477:	lea    rax,[rsp+0x28]
  40447c:	mov    DWORD PTR [rsp+0x6c],0x0
  404484:	mov    QWORD PTR [rsp+0x38],rax
  404489:	call   0x403e60
  40448e:	nop
  40448f:	add    rsp,0x78
  404493:	pop    rbx
  404494:	pop    rsi
  404495:	ret    
  404496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044a0:	push   rdi
  4044a1:	push   rsi
  4044a2:	push   rbx
  4044a3:	sub    rsp,0x70
  4044a7:	lea    rax,[rsp+0xa0]
  4044af:	mov    ebx,ecx
  4044b1:	mov    QWORD PTR [rsp+0xa0],r8
  4044b9:	mov    QWORD PTR [rsp+0xa8],r9
  4044c1:	mov    rdi,rdx
  4044c4:	mov    QWORD PTR [rsp+0x28],rax
  4044c9:	mov    rax,QWORD PTR [rip+0x4d1a0]        # 0x451670
  4044d0:	mov    esi,DWORD PTR [rax]
  4044d2:	call   QWORD PTR [rip+0x57184]        # 0x45b65c
  4044d8:	mov    eax,DWORD PTR [rax]
  4044da:	mov    rcx,QWORD PTR [rip+0x3db3f]        # 0x442020
  4044e1:	lea    rdx,[rsp+0x30]
  4044e6:	mov    QWORD PTR [rsp+0x30],rdi
  4044eb:	mov    DWORD PTR [rsp+0x58],esi
  4044ef:	mov    DWORD PTR [rsp+0x5c],0x0
  4044f7:	mov    DWORD PTR [rsp+0x68],0x6
  4044ff:	mov    DWORD PTR [rsp+0x40],eax
  404503:	lea    rax,[rsp+0x28]
  404508:	mov    DWORD PTR [rsp+0x6c],ebx
  40450c:	mov    QWORD PTR [rsp+0x38],rax
  404511:	call   0x403e60
  404516:	add    rsp,0x70
  40451a:	pop    rbx
  40451b:	pop    rsi
  40451c:	pop    rdi
  40451d:	ret    
  40451e:	xchg   ax,ax
  404520:	push   rdi
  404521:	push   rsi
  404522:	push   rbx
  404523:	sub    rsp,0x70
  404527:	lea    rax,[rsp+0xa8]
  40452f:	mov    esi,ecx
  404531:	mov    ebx,edx
  404533:	mov    rdi,r8
  404536:	mov    QWORD PTR [rsp+0xa8],r9
  40453e:	mov    QWORD PTR [rsp+0x28],rax
  404543:	call   QWORD PTR [rip+0x57113]        # 0x45b65c
  404549:	mov    eax,DWORD PTR [rax]
  40454b:	mov    rcx,QWORD PTR [rip+0x3dace]        # 0x442020
  404552:	lea    rdx,[rsp+0x30]
  404557:	mov    QWORD PTR [rsp+0x30],rdi
  40455c:	mov    DWORD PTR [rsp+0x58],esi
  404560:	mov    DWORD PTR [rsp+0x5c],0x0
  404568:	mov    DWORD PTR [rsp+0x68],0x6
  404570:	mov    DWORD PTR [rsp+0x40],eax
  404574:	lea    rax,[rsp+0x28]
  404579:	mov    DWORD PTR [rsp+0x6c],ebx
  40457d:	mov    QWORD PTR [rsp+0x38],rax
  404582:	call   0x403e60
  404587:	add    rsp,0x70
  40458b:	pop    rbx
  40458c:	pop    rsi
  40458d:	pop    rdi
  40458e:	ret    
  40458f:	nop
  404590:	push   rdi
  404591:	push   rsi
  404592:	push   rbx
  404593:	sub    rsp,0x70
  404597:	lea    rax,[rsp+0xa8]
  40459f:	mov    esi,ecx
  4045a1:	mov    ebx,edx
  4045a3:	mov    rdi,r8
  4045a6:	mov    QWORD PTR [rsp+0xa8],r9
  4045ae:	mov    QWORD PTR [rsp+0x28],rax
  4045b3:	call   QWORD PTR [rip+0x570a3]        # 0x45b65c
  4045b9:	mov    eax,DWORD PTR [rax]
  4045bb:	mov    rcx,QWORD PTR [rip+0x3da5e]        # 0x442020
  4045c2:	lea    rdx,[rsp+0x30]
  4045c7:	mov    QWORD PTR [rsp+0x30],rdi
  4045cc:	mov    DWORD PTR [rsp+0x58],esi
  4045d0:	mov    DWORD PTR [rsp+0x5c],0x0
  4045d8:	mov    DWORD PTR [rsp+0x68],0xa
  4045e0:	mov    DWORD PTR [rsp+0x40],eax
  4045e4:	lea    rax,[rsp+0x28]
  4045e9:	mov    DWORD PTR [rsp+0x6c],ebx
  4045ed:	mov    QWORD PTR [rsp+0x38],rax
  4045f2:	call   0x403e60
  4045f7:	add    rsp,0x70
  4045fb:	pop    rbx
  4045fc:	pop    rsi
  4045fd:	pop    rdi
  4045fe:	ret    
  4045ff:	nop
  404600:	push   rdi
  404601:	push   rsi
  404602:	push   rbx
  404603:	sub    rsp,0x70
  404607:	lea    rax,[rsp+0xa0]
  40460f:	mov    QWORD PTR [rsp+0xa0],r8
  404617:	mov    QWORD PTR [rsp+0xa8],r9
  40461f:	mov    esi,ecx
  404621:	mov    rdi,rdx
  404624:	mov    QWORD PTR [rsp+0x28],rax
  404629:	mov    rax,QWORD PTR [rip+0x3d9f0]        # 0x442020
  404630:	cmp    BYTE PTR [rax+0x78],0x1
  404634:	sbb    ebx,ebx
  404636:	call   QWORD PTR [rip+0x57020]        # 0x45b65c
  40463c:	mov    eax,DWORD PTR [rax]
  40463e:	mov    rcx,QWORD PTR [rip+0x3d9db]        # 0x442020
  404645:	and    ebx,0xfffffffe
  404648:	lea    rdx,[rsp+0x30]
  40464d:	add    ebx,0x6
  404650:	mov    QWORD PTR [rsp+0x30],rdi
  404655:	mov    DWORD PTR [rsp+0x58],esi
  404659:	mov    DWORD PTR [rsp+0x5c],0x0
  404661:	mov    DWORD PTR [rsp+0x40],eax
  404665:	lea    rax,[rsp+0x28]
  40466a:	mov    DWORD PTR [rsp+0x68],ebx
  40466e:	mov    QWORD PTR [rsp+0x38],rax
  404673:	mov    eax,DWORD PTR [rcx+0x7c]
  404676:	mov    DWORD PTR [rsp+0x6c],eax
  40467a:	call   0x403e60
  40467f:	add    rsp,0x70
  404683:	pop    rbx
  404684:	pop    rsi
  404685:	pop    rdi
  404686:	ret    
  404687:	nop    WORD PTR [rax+rax*1+0x0]
  404690:	push   rsi
  404691:	push   rbx
  404692:	sub    rsp,0x78
  404696:	lea    rax,[rsp+0x98]
  40469e:	mov    QWORD PTR [rsp+0x98],rdx
  4046a6:	mov    QWORD PTR [rsp+0xa0],r8
  4046ae:	mov    QWORD PTR [rsp+0xa8],r9
  4046b6:	mov    rsi,rcx
  4046b9:	mov    QWORD PTR [rsp+0x28],rax
  4046be:	mov    rax,QWORD PTR [rip+0x4cfab]        # 0x451670
  4046c5:	mov    ebx,DWORD PTR [rax]
  4046c7:	call   QWORD PTR [rip+0x56f8f]        # 0x45b65c
  4046cd:	mov    eax,DWORD PTR [rax]
  4046cf:	mov    rcx,QWORD PTR [rip+0x3d94a]        # 0x442020
  4046d6:	lea    rdx,[rsp+0x30]
  4046db:	mov    QWORD PTR [rsp+0x30],rsi
  4046e0:	mov    DWORD PTR [rsp+0x58],ebx
  4046e4:	mov    DWORD PTR [rsp+0x5c],0x0
  4046ec:	mov    DWORD PTR [rsp+0x68],0x4
  4046f4:	mov    DWORD PTR [rsp+0x40],eax
  4046f8:	lea    rax,[rsp+0x28]
  4046fd:	mov    DWORD PTR [rsp+0x6c],0x0
  404705:	mov    QWORD PTR [rsp+0x38],rax
  40470a:	call   0x403e60
  40470f:	nop
  404710:	add    rsp,0x78
  404714:	pop    rbx
  404715:	pop    rsi
  404716:	ret    
  404717:	nop    WORD PTR [rax+rax*1+0x0]
  404720:	push   rsi
  404721:	push   rbx
  404722:	sub    rsp,0x78
  404726:	lea    rax,[rsp+0xb0]
  40472e:	mov    ebx,ecx
  404730:	mov    rcx,r8
  404733:	mov    r8d,edx
  404736:	mov    rdx,r9
  404739:	mov    QWORD PTR [rsp+0x28],rax
  40473e:	call   0x406a90
  404743:	mov    rsi,rax
  404746:	call   QWORD PTR [rip+0x56f10]        # 0x45b65c
  40474c:	mov    eax,DWORD PTR [rax]
  40474e:	mov    rcx,QWORD PTR [rip+0x3d8cb]        # 0x442020
  404755:	lea    rdx,[rsp+0x30]
  40475a:	mov    QWORD PTR [rsp+0x30],rsi
  40475f:	mov    DWORD PTR [rsp+0x58],ebx
  404763:	mov    DWORD PTR [rsp+0x5c],0x0
  40476b:	mov    DWORD PTR [rsp+0x68],0x4
  404773:	mov    DWORD PTR [rsp+0x40],eax
  404777:	lea    rax,[rsp+0x28]
  40477c:	mov    DWORD PTR [rsp+0x6c],0x0
  404784:	mov    QWORD PTR [rsp+0x38],rax
  404789:	call   0x403e60
  40478e:	nop
  40478f:	add    rsp,0x78
  404793:	pop    rbx
  404794:	pop    rsi
  404795:	ret    
  404796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047a0:	push   rsi
  4047a1:	push   rbx
  4047a2:	sub    rsp,0x78
  4047a6:	lea    rax,[rsp+0xa0]
  4047ae:	mov    ebx,ecx
  4047b0:	mov    rsi,rdx
  4047b3:	mov    QWORD PTR [rsp+0xa0],r8
  4047bb:	mov    QWORD PTR [rsp+0xa8],r9
  4047c3:	mov    QWORD PTR [rsp+0x28],rax
  4047c8:	call   QWORD PTR [rip+0x56e8e]        # 0x45b65c
  4047ce:	mov    eax,DWORD PTR [rax]
  4047d0:	mov    rcx,QWORD PTR [rip+0x3d849]        # 0x442020
  4047d7:	lea    rdx,[rsp+0x30]
  4047dc:	mov    QWORD PTR [rsp+0x30],rsi
  4047e1:	mov    DWORD PTR [rsp+0x58],ebx
  4047e5:	mov    DWORD PTR [rsp+0x5c],0x0
  4047ed:	mov    DWORD PTR [rsp+0x68],0x4
  4047f5:	mov    DWORD PTR [rsp+0x40],eax
  4047f9:	lea    rax,[rsp+0x28]
  4047fe:	mov    DWORD PTR [rsp+0x6c],0x0
  404806:	mov    QWORD PTR [rsp+0x38],rax
  40480b:	call   0x403e60
  404810:	nop
  404811:	add    rsp,0x78
  404815:	pop    rbx
  404816:	pop    rsi
  404817:	ret    
  404818:	nop    DWORD PTR [rax+rax*1+0x0]
  404820:	push   rsi
  404821:	push   rbx
  404822:	sub    rsp,0x78
  404826:	lea    rax,[rsp+0x98]
  40482e:	mov    QWORD PTR [rsp+0x98],rdx
  404836:	mov    QWORD PTR [rsp+0xa0],r8
  40483e:	mov    QWORD PTR [rsp+0xa8],r9
  404846:	mov    rsi,rcx
  404849:	mov    QWORD PTR [rsp+0x28],rax
  40484e:	mov    rax,QWORD PTR [rip+0x4ce1b]        # 0x451670
  404855:	mov    ebx,DWORD PTR [rax]
  404857:	call   QWORD PTR [rip+0x56dff]        # 0x45b65c
  40485d:	mov    eax,DWORD PTR [rax]
  40485f:	mov    rcx,QWORD PTR [rip+0x3d7ba]        # 0x442020
  404866:	lea    rdx,[rsp+0x30]
  40486b:	mov    QWORD PTR [rsp+0x30],rsi
  404870:	mov    DWORD PTR [rsp+0x58],ebx
  404874:	mov    DWORD PTR [rsp+0x5c],0x0
  40487c:	mov    DWORD PTR [rsp+0x68],0x5
  404884:	mov    DWORD PTR [rsp+0x40],eax
  404888:	lea    rax,[rsp+0x28]
  40488d:	mov    DWORD PTR [rsp+0x6c],0x0
  404895:	mov    QWORD PTR [rsp+0x38],rax
  40489a:	call   0x403e60
  40489f:	nop
  4048a0:	add    rsp,0x78
  4048a4:	pop    rbx
  4048a5:	pop    rsi
  4048a6:	ret    
  4048a7:	nop    WORD PTR [rax+rax*1+0x0]
  4048b0:	push   rsi
  4048b1:	push   rbx
  4048b2:	sub    rsp,0x78
  4048b6:	lea    rax,[rsp+0x98]
  4048be:	mov    QWORD PTR [rsp+0xa0],r8
  4048c6:	mov    QWORD PTR [rsp+0x98],rdx
  4048ce:	mov    QWORD PTR [rsp+0xa8],r9
  4048d6:	mov    rsi,rcx
  4048d9:	mov    QWORD PTR [rsp+0x28],rax
  4048de:	mov    rax,QWORD PTR [rip+0x4cd8b]        # 0x451670
  4048e5:	mov    ebx,DWORD PTR [rax]
  4048e7:	call   QWORD PTR [rip+0x56d6f]        # 0x45b65c
  4048ed:	mov    eax,DWORD PTR [rax]
  4048ef:	mov    rcx,QWORD PTR [rip+0x3d72a]        # 0x442020
  4048f6:	lea    rdx,[rsp+0x30]
  4048fb:	mov    QWORD PTR [rsp+0x30],rsi
  404900:	mov    DWORD PTR [rsp+0x58],ebx
  404904:	mov    DWORD PTR [rsp+0x5c],0x0
  40490c:	mov    DWORD PTR [rsp+0x68],0x2
  404914:	mov    DWORD PTR [rsp+0x40],eax
  404918:	lea    rax,[rsp+0x28]
  40491d:	mov    DWORD PTR [rsp+0x6c],0x0
  404925:	mov    QWORD PTR [rsp+0x38],rax
  40492a:	call   0x403e60
  40492f:	lea    r8,[rip+0x3fbe7]        # 0x44451d
  404936:	lea    rcx,[rip+0x3f983]        # 0x4442c0
  40493d:	mov    edx,0x461
  404942:	call   0x4039c0
  404947:	nop
  404948:	nop    DWORD PTR [rax+rax*1+0x0]
  404950:	push   rsi
  404951:	push   rbx
  404952:	sub    rsp,0x78
  404956:	lea    rax,[rsp+0x98]
  40495e:	mov    QWORD PTR [rsp+0xa0],r8
  404966:	mov    QWORD PTR [rsp+0x98],rdx
  40496e:	mov    QWORD PTR [rsp+0xa8],r9
  404976:	mov    rsi,rcx
  404979:	mov    QWORD PTR [rsp+0x28],rax
  40497e:	mov    rax,QWORD PTR [rip+0x4cceb]        # 0x451670
  404985:	mov    ebx,DWORD PTR [rax]
  404987:	call   QWORD PTR [rip+0x56ccf]        # 0x45b65c
  40498d:	mov    eax,DWORD PTR [rax]
  40498f:	mov    rcx,QWORD PTR [rip+0x3d68a]        # 0x442020
  404996:	lea    rdx,[rsp+0x30]
  40499b:	mov    QWORD PTR [rsp+0x30],rsi
  4049a0:	mov    DWORD PTR [rsp+0x58],ebx
  4049a4:	mov    DWORD PTR [rsp+0x5c],0x0
  4049ac:	mov    DWORD PTR [rsp+0x68],0x3
  4049b4:	mov    DWORD PTR [rsp+0x40],eax
  4049b8:	lea    rax,[rsp+0x28]
  4049bd:	mov    DWORD PTR [rsp+0x6c],0x0
  4049c5:	mov    QWORD PTR [rsp+0x38],rax
  4049ca:	call   0x403e60
  4049cf:	lea    r8,[rip+0x3fb38]        # 0x44450e
  4049d6:	lea    rcx,[rip+0x3f8e3]        # 0x4442c0
  4049dd:	mov    edx,0x473
  4049e2:	call   0x4039c0
  4049e7:	nop
  4049e8:	nop
  4049e9:	nop
  4049ea:	nop
  4049eb:	nop
  4049ec:	nop
  4049ed:	nop
  4049ee:	nop
  4049ef:	nop
  4049f0:	push   rdi
  4049f1:	push   rsi
  4049f2:	push   rbx
  4049f3:	sub    rsp,0x20
  4049f7:	lea    rax,[rip+0x3fe02]        # 0x444800
  4049fe:	test   cl,cl
  404a00:	mov    rdi,rdx
  404a03:	mov    rsi,r8
  404a06:	je     0x404a48
  404a08:	mov    rcx,QWORD PTR [rip+0x3d631]        # 0x442040
  404a0f:	test   rcx,rcx
  404a12:	je     0x404a48
  404a14:	lea    rbx,[rip+0x3d625]        # 0x442040
  404a1b:	jmp    0x404a2c
  404a1d:	nop    DWORD PTR [rax]
  404a20:	add    rbx,0x18
  404a24:	mov    rcx,QWORD PTR [rbx]
  404a27:	test   rcx,rcx
  404a2a:	je     0x404a50
  404a2c:	movzx  eax,BYTE PTR [rbx+0x10]
  404a30:	cmp    rax,rsi
  404a33:	jne    0x404a20
  404a35:	mov    r8,rsi
  404a38:	mov    rdx,rdi
  404a3b:	call   0x43f0b0
  404a40:	test   eax,eax
  404a42:	jne    0x404a20
  404a44:	mov    rax,QWORD PTR [rbx+0x8]
  404a48:	add    rsp,0x20
  404a4c:	pop    rbx
  404a4d:	pop    rsi
  404a4e:	pop    rdi
  404a4f:	ret    
  404a50:	lea    rax,[rip+0x3fda9]        # 0x444800
  404a57:	add    rsp,0x20
  404a5b:	pop    rbx
  404a5c:	pop    rsi
  404a5d:	pop    rdi
  404a5e:	ret    
  404a5f:	nop
  404a60:	lea    rdx,[rip+0x3fd99]        # 0x444800
  404a67:	lea    rax,[rip+0x3fd93]        # 0x444801
  404a6e:	test   cl,cl
  404a70:	cmove  rax,rdx
  404a74:	ret    
  404a75:	nop
  404a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a80:	xor    eax,eax
  404a82:	ret    
  404a83:	nop
  404a84:	nop
  404a85:	nop
  404a86:	nop
  404a87:	nop
  404a88:	nop
  404a89:	nop
  404a8a:	nop
  404a8b:	nop
  404a8c:	nop
  404a8d:	nop
  404a8e:	nop
  404a8f:	nop
  404a90:	push   rbx
  404a91:	sub    rsp,0x20
  404a95:	movzx  r10d,BYTE PTR [rcx]
  404a99:	test   rdx,rdx
  404a9c:	mov    rbx,rcx
  404a9f:	mov    eax,r10d
  404aa2:	je     0x404b7f
  404aa8:	test   r10b,r10b
  404aab:	jns    0x404b62
  404ab1:	xor    r9d,r9d
  404ab4:	add    eax,eax
  404ab6:	add    r9,0x1
  404aba:	test   al,0x80
  404abc:	jne    0x404ab4
  404abe:	lea    rax,[r9-0x2]
  404ac2:	cmp    rax,0x4
  404ac6:	ja     0x404b70
  404acc:	cmp    rdx,r9
  404acf:	jb     0x404b70
  404ad5:	mov    ecx,0x7
  404ada:	mov    eax,0x1
  404adf:	sub    ecx,r9d
  404ae2:	shl    eax,cl
  404ae4:	sub    eax,0x1
  404ae7:	and    eax,r10d
  404aea:	mov    r10d,0x1
  404af0:	movzx  edx,BYTE PTR [rbx+r10*1]
  404af5:	mov    r11d,edx
  404af8:	and    r11d,0xffffffc0
  404afc:	cmp    r11b,0x80
  404b00:	jne    0x404b70
  404b02:	shl    eax,0x6
  404b05:	and    edx,0x3f
  404b08:	add    r10,0x1
  404b0c:	or     eax,edx
  404b0e:	cmp    r10,r9
  404b11:	jb     0x404af0
  404b13:	cmp    eax,0x7f
  404b16:	jbe    0x404b70
  404b18:	cmp    eax,0x7ff
  404b1d:	ja     0x404b25
  404b1f:	cmp    r9,0x2
  404b23:	ja     0x404b70
  404b25:	cmp    eax,0xffff
  404b2a:	ja     0x404b32
  404b2c:	cmp    r9,0x3
  404b30:	ja     0x404b70
  404b32:	cmp    eax,0x1fffff
  404b37:	ja     0x404b3f
  404b39:	cmp    r9,0x4
  404b3d:	ja     0x404b70
  404b3f:	cmp    eax,0x3ffffff
  404b44:	ja     0x404b4c
  404b46:	cmp    r9,0x5
  404b4a:	ja     0x404b70
  404b4c:	lea    edx,[rax-0xd800]
  404b52:	cmp    edx,0x7ff
  404b58:	jbe    0x404b70
  404b5a:	mov    DWORD PTR [r8],eax
  404b5d:	mov    eax,r9d
  404b60:	jmp    0x404b6a
  404b62:	mov    DWORD PTR [r8],r10d
  404b65:	mov    eax,0x1
  404b6a:	add    rsp,0x20
  404b6e:	pop    rbx
  404b6f:	ret    
  404b70:	xor    eax,eax
  404b72:	mov    DWORD PTR [r8],0xffffffff
  404b79:	add    rsp,0x20
  404b7d:	pop    rbx
  404b7e:	ret    
  404b7f:	lea    r8,[rip+0x3feca]        # 0x444a50
  404b86:	lea    rcx,[rip+0x3fce3]        # 0x444870
  404b8d:	mov    dx,0x3c3
  404b91:	call   0x4039c0
  404b96:	nop
  404b97:	nop    WORD PTR [rax+rax*1+0x0]
  404ba0:	push   rsi
  404ba1:	push   rbx
  404ba2:	sub    rsp,0x28
  404ba6:	mov    esi,DWORD PTR [rcx+0x28]
  404ba9:	test   esi,esi
  404bab:	jle    0x404be0
  404bad:	cmp    DWORD PTR [rcx+0x24],0x1
  404bb1:	jbe    0x404be0
  404bb3:	mov    rbx,rcx
  404bb6:	mov    rcx,QWORD PTR [rcx+0x10]
  404bba:	test   rcx,rcx
  404bbd:	je     0x404bf0
  404bbf:	call   0x43f028
  404bc4:	mov    edx,esi
  404bc6:	sub    edx,eax
  404bc8:	cmp    edx,0x1f
  404bcb:	jle    0x404bf4
  404bcd:	mov    DWORD PTR [rbx+0x1c],esi
  404bd0:	add    rsp,0x28
  404bd4:	pop    rbx
  404bd5:	pop    rsi
  404bd6:	ret    
  404bd7:	nop    WORD PTR [rax+rax*1+0x0]
  404be0:	mov    DWORD PTR [rcx+0x1c],esi
  404be3:	add    rsp,0x28
  404be7:	pop    rbx
  404be8:	pop    rsi
  404be9:	ret    
  404bea:	nop    WORD PTR [rax+rax*1+0x0]
  404bf0:	xor    eax,eax
  404bf2:	jmp    0x404bc4
  404bf4:	add    esi,0x20
  404bf7:	mov    DWORD PTR [rbx+0x1c],esi
  404bfa:	add    rsp,0x28
  404bfe:	pop    rbx
  404bff:	pop    rsi
  404c00:	ret    
  404c01:	nop
  404c02:	nop    DWORD PTR [rax+0x0]
  404c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c10:	push   rdi
  404c11:	push   rsi
  404c12:	push   rbx
  404c13:	sub    rsp,0x30
  404c17:	xor    eax,eax
  404c19:	mov    rbx,rcx
  404c1c:	mov    ecx,0xb
  404c21:	mov    rdi,rbx
  404c24:	lea    rsi,[rbx+0x58]
  404c28:	rep stos QWORD PTR es:[rdi],rax
  404c2b:	mov    rdi,rsi
  404c2e:	mov    cl,0xb
  404c30:	rep stos QWORD PTR es:[rdi],rax
  404c33:	mov    QWORD PTR [rbx+0xb0],rbx
  404c3a:	mov    QWORD PTR [rbx+0xb8],0x0
  404c45:	call   QWORD PTR [rip+0x569d1]        # 0x45b61c
  404c4b:	add    rax,0x60
  404c4f:	lea    rdx,[rbx+0x14c]
  404c56:	mov    DWORD PTR [rbx+0xc8],0x0
  404c60:	mov    QWORD PTR [rbx+0xc0],rax
  404c67:	lea    rax,[rbx+0xcc]
  404c6e:	xchg   ax,ax
  404c70:	mov    BYTE PTR [rax],0x0
  404c73:	add    rax,0x1
  404c77:	cmp    rax,rdx
  404c7a:	jne    0x404c70
  404c7c:	mov    rdi,QWORD PTR [rip+0x4c9ad]        # 0x451630
  404c83:	lea    r9,[rip+0x33946]        # 0x4385d0
  404c8a:	xor    r8d,r8d
  404c8d:	xor    edx,edx
  404c8f:	mov    rcx,rbx
  404c92:	mov    QWORD PTR [rsp+0x20],rdi
  404c97:	call   0x438120
  404c9c:	lea    r9,[rip+0x3392d]        # 0x4385d0
  404ca3:	mov    QWORD PTR [rsp+0x20],rdi
  404ca8:	xor    r8d,r8d
  404cab:	xor    edx,edx
  404cad:	mov    rcx,rsi
  404cb0:	call   0x438120
  404cb5:	nop
  404cb6:	add    rsp,0x30
  404cba:	pop    rbx
  404cbb:	pop    rsi
  404cbc:	pop    rdi
  404cbd:	ret    
  404cbe:	xchg   ax,ax
  404cc0:	push   rbx
  404cc1:	sub    rsp,0x20
  404cc5:	xor    edx,edx
  404cc7:	mov    rbx,rcx
  404cca:	lea    rcx,[rcx+0x58]
  404cce:	call   0x438480
  404cd3:	xor    edx,edx
  404cd5:	mov    rcx,rbx
  404cd8:	add    rsp,0x20
  404cdc:	pop    rbx
  404cdd:	jmp    0x438480
  404ce2:	nop    DWORD PTR [rax+0x0]
  404ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404cf0:	push   rbx
  404cf1:	sub    rsp,0x20
  404cf5:	lea    rax,[rip+0x4cad4]        # 0x4517d0
  404cfc:	mov    rbx,rcx
  404cff:	mov    QWORD PTR [rcx],rax
  404d02:	mov    rcx,QWORD PTR [rcx+0x8]
  404d06:	call   0x404cc0
  404d0b:	mov    rcx,QWORD PTR [rbx+0x8]
  404d0f:	add    rsp,0x20
  404d13:	pop    rbx
  404d14:	jmp    0x43f100
  404d19:	nop
  404d1a:	nop    WORD PTR [rax+rax*1+0x0]
  404d20:	push   rbx
  404d21:	sub    rsp,0x20
  404d25:	mov    rbx,rcx
  404d28:	call   0x404cf0
  404d2d:	mov    rcx,rbx
  404d30:	add    rsp,0x20
  404d34:	pop    rbx
  404d35:	jmp    0x438798
  404d3a:	nop    WORD PTR [rax+rax*1+0x0]
  404d40:	mov    DWORD PTR [rcx+0x28],edx
  404d43:	jmp    0x404ba0
  404d48:	nop    DWORD PTR [rax+rax*1+0x0]
  404d50:	push   rbx
  404d51:	sub    rsp,0x20
  404d55:	mov    r8,QWORD PTR [rcx+0x8]
  404d59:	mov    rax,QWORD PTR [r8+0xb0]
  404d60:	mov    rdx,QWORD PTR [rax+0x10]
  404d64:	cmp    rdx,QWORD PTR [rax+0x8]
  404d68:	jbe    0x404d70
  404d6a:	cmp    rdx,QWORD PTR [rax+0x20]
  404d6e:	jb     0x404d90
  404d70:	mov    rbx,rcx
  404d73:	mov    rcx,rax
  404d76:	call   0x438480
  404d7b:	mov    r8,QWORD PTR [rbx+0x8]
  404d7f:	mov    DWORD PTR [r8+0xc8],0x0
  404d8a:	add    rsp,0x20
  404d8e:	pop    rbx
  404d8f:	ret    
  404d90:	mov    QWORD PTR [rax+0x18],rdx
  404d94:	jmp    0x404d7f
  404d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404da0:	push   rbx
  404da1:	sub    rsp,0x20
  404da5:	mov    rbx,rcx
  404da8:	mov    QWORD PTR [rcx+0x10],rdx
  404dac:	call   0x404ba0
  404db1:	mov    BYTE PTR [rbx+0x38],0x0
  404db5:	mov    DWORD PTR [rbx+0x20],0x0
  404dbc:	add    rsp,0x20
  404dc0:	pop    rbx
  404dc1:	ret    
  404dc2:	nop    DWORD PTR [rax+0x0]
  404dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dd0:	push   rbx
  404dd1:	sub    rsp,0x20
  404dd5:	mov    rax,rcx
  404dd8:	mov    rcx,QWORD PTR [rcx+0x10]
  404ddc:	test   rcx,rcx
  404ddf:	je     0x404df1
  404de1:	mov    rbx,rax
  404de4:	call   0x43f100
  404de9:	mov    QWORD PTR [rbx+0x10],0x0
  404df1:	add    rsp,0x20
  404df5:	pop    rbx
  404df6:	ret    
  404df7:	nop
  404df8:	nop    DWORD PTR [rax+rax*1+0x0]
  404e00:	push   rbp
  404e01:	push   rdi
  404e02:	push   rsi
  404e03:	push   rbx
  404e04:	sub    rsp,0x28
  404e08:	lea    rax,[rip+0x4c9c1]        # 0x4517d0
  404e0f:	mov    rbx,rcx
  404e12:	mov    rdi,rdx
  404e15:	mov    edx,0x150
  404e1a:	mov    QWORD PTR [rcx],rax
  404e1d:	mov    ecx,0x1
  404e22:	mov    ebp,r8d
  404e25:	call   0x438600
  404e2a:	mov    rsi,rax
  404e2d:	mov    rcx,rax
  404e30:	call   0x404c10
  404e35:	mov    QWORD PTR [rbx+0x8],rsi
  404e39:	mov    DWORD PTR [rbx+0x18],0x0
  404e40:	mov    rcx,rbx
  404e43:	mov    DWORD PTR [rbx+0x1c],0x0
  404e4a:	mov    DWORD PTR [rbx+0x20],0x0
  404e51:	mov    DWORD PTR [rbx+0x24],0x0
  404e58:	mov    QWORD PTR [rbx+0x30],0x0
  404e60:	mov    BYTE PTR [rbx+0x38],0x0
  404e64:	mov    BYTE PTR [rbx+0x39],0x0
  404e68:	mov    BYTE PTR [rbx+0x3a],0x1
  404e6c:	mov    BYTE PTR [rbx+0x3b],0x0
  404e70:	mov    DWORD PTR [rbx+0x28],ebp
  404e73:	mov    QWORD PTR [rbx+0x10],rdi
  404e77:	call   0x404ba0
  404e7c:	mov    BYTE PTR [rbx+0x38],0x0
  404e80:	mov    DWORD PTR [rbx+0x20],0x0
  404e87:	add    rsp,0x28
  404e8b:	pop    rbx
  404e8c:	pop    rsi
  404e8d:	pop    rdi
  404e8e:	pop    rbp
  404e8f:	ret    
  404e90:	push   rsi
  404e91:	push   rbx
  404e92:	sub    rsp,0x28
  404e96:	mov    rax,QWORD PTR [rcx+0x8]
  404e9a:	mov    rsi,rcx
  404e9d:	mov    rbx,QWORD PTR [rax+0xb0]
  404ea4:	mov    rax,QWORD PTR [rbx+0x18]
  404ea8:	lea    rdx,[rax+0x1]
  404eac:	cmp    rdx,QWORD PTR [rbx+0x20]
  404eb0:	jbe    0x404ec7
  404eb2:	mov    edx,0x1
  404eb7:	mov    rcx,rbx
  404eba:	call   0x438250
  404ebf:	mov    rax,QWORD PTR [rbx+0x18]
  404ec3:	lea    rdx,[rax+0x1]
  404ec7:	mov    QWORD PTR [rbx+0x18],rdx
  404ecb:	mov    BYTE PTR [rax],0x0
  404ece:	mov    rax,QWORD PTR [rsi+0x8]
  404ed2:	mov    rax,QWORD PTR [rax+0xb0]
  404ed9:	mov    rax,QWORD PTR [rax+0x10]
  404edd:	add    rsp,0x28
  404ee1:	pop    rbx
  404ee2:	pop    rsi
  404ee3:	ret    
  404ee4:	xchg   ax,ax
  404ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ef0:	push   rbx
  404ef1:	sub    rsp,0x20
  404ef5:	mov    rbx,rcx
  404ef8:	call   0x404e90
  404efd:	mov    rdx,QWORD PTR [rbx+0x8]
  404f01:	mov    rcx,rax
  404f04:	mov    rdx,QWORD PTR [rdx+0xc0]
  404f0b:	call   0x43f110
  404f10:	mov    rcx,rbx
  404f13:	add    rsp,0x20
  404f17:	pop    rbx
  404f18:	jmp    0x404d50
  404f1d:	nop    DWORD PTR [rax]
  404f20:	push   rbx
  404f21:	sub    rsp,0x20
  404f25:	mov    rbx,rcx
  404f28:	call   0x404ef0
  404f2d:	mov    rax,QWORD PTR [rbx+0x8]
  404f31:	mov    BYTE PTR [rbx+0x38],0x0
  404f35:	mov    DWORD PTR [rbx+0x20],0x0
  404f3c:	mov    rcx,QWORD PTR [rax+0xc0]
  404f43:	add    rsp,0x20
  404f47:	pop    rbx
  404f48:	jmp    0x43f138
  404f4d:	nop    DWORD PTR [rax]
  404f50:	push   rbp
  404f51:	push   rdi
  404f52:	push   rsi
  404f53:	push   rbx
  404f54:	sub    rsp,0x28
  404f58:	mov    rbp,rcx
  404f5b:	mov    edi,edx
  404f5d:	call   0x404e90
  404f62:	mov    rbx,rax
  404f65:	mov    rax,QWORD PTR [rbp+0x8]
  404f69:	movzx  r8d,BYTE PTR [rbx]
  404f6d:	mov    rsi,QWORD PTR [rax+0xc0]
  404f74:	test   r8b,r8b
  404f77:	jne    0x404fc1
  404f79:	jmp    0x404ff4
  404f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f80:	cmp    r8b,0x20
  404f84:	je     0x405010
  404f8a:	cmp    r8b,0x22
  404f8e:	je     0x405010
  404f94:	cmp    r8b,0xa
  404f98:	jne    0x404fdc
  404f9a:	lea    rcx,[rip+0x3f920]        # 0x4448c1
  404fa1:	mov    r8d,0x4
  404fa7:	add    rbx,0x1
  404fab:	mov    r9,rsi
  404fae:	mov    edx,0x1
  404fb3:	call   0x43f0e0
  404fb8:	movzx  r8d,BYTE PTR [rbx]
  404fbc:	test   r8b,r8b
  404fbf:	je     0x404ff4
  404fc1:	cmp    r8b,0x3c
  404fc5:	je     0x405010
  404fc7:	jle    0x404f80
  404fc9:	cmp    r8b,0x7b
  404fcd:	je     0x405010
  404fcf:	jle    0x405004
  404fd1:	cmp    r8b,0x7c
  404fd5:	jne    0x405020
  404fd7:	test   dil,dil
  404fda:	jne    0x405010
  404fdc:	movsx  ecx,BYTE PTR [rbx]
  404fdf:	mov    rdx,rsi
  404fe2:	add    rbx,0x1
  404fe6:	call   0x43f118
  404feb:	movzx  r8d,BYTE PTR [rbx]
  404fef:	test   r8b,r8b
  404ff2:	jne    0x404fc1
  404ff4:	mov    rcx,rbp
  404ff7:	add    rsp,0x28
  404ffb:	pop    rbx
  404ffc:	pop    rsi
  404ffd:	pop    rdi
  404ffe:	pop    rbp
  404fff:	jmp    0x404d50
  405004:	cmp    r8b,0x3e
  405008:	jne    0x404fdc
  40500a:	nop    WORD PTR [rax+rax*1+0x0]
  405010:	mov    rdx,rsi
  405013:	mov    ecx,0x5c
  405018:	call   0x43f118
  40501d:	jmp    0x404fdc
  40501f:	nop
  405020:	cmp    r8b,0x7d
  405024:	jne    0x404fdc
  405026:	mov    rdx,rsi
  405029:	mov    ecx,0x5c
  40502e:	call   0x43f118
  405033:	jmp    0x404fdc
  405035:	nop
  405036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405040:	mov    rax,QWORD PTR [rcx+0x8]
  405044:	mov    rdx,QWORD PTR [rax+0xb0]
  40504b:	mov    rax,QWORD PTR [rdx+0x18]
  40504f:	cmp    QWORD PTR [rdx+0x10],rax
  405053:	je     0x405060
  405055:	sub    rax,0x1
  405059:	ret    
  40505a:	nop    WORD PTR [rax+rax*1+0x0]
  405060:	xor    eax,eax
  405062:	ret    
  405063:	nop    DWORD PTR [rax]
  405066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405070:	mov    rdx,QWORD PTR [rcx+0x8]
  405074:	mov    eax,DWORD PTR [rcx+0x1c]
  405077:	sub    eax,DWORD PTR [rdx+0xc8]
  40507d:	ret    
  40507e:	xchg   ax,ax
  405080:	push   rsi
  405081:	push   rbx
  405082:	sub    rsp,0x28
  405086:	mov    rax,QWORD PTR [rcx+0x8]
  40508a:	mov    rsi,rcx
  40508d:	mov    rbx,QWORD PTR [rax+0xb0]
  405094:	mov    rax,QWORD PTR [rbx+0x18]
  405098:	lea    rdx,[rax+0x1]
  40509c:	cmp    rdx,QWORD PTR [rbx+0x20]
  4050a0:	jbe    0x4050b7
  4050a2:	mov    edx,0x1
  4050a7:	mov    rcx,rbx
  4050aa:	call   0x438250
  4050af:	mov    rax,QWORD PTR [rbx+0x18]
  4050b3:	lea    rdx,[rax+0x1]
  4050b7:	mov    QWORD PTR [rbx+0x18],rdx
  4050bb:	mov    BYTE PTR [rax],0xa
  4050be:	mov    rax,QWORD PTR [rsi+0x8]
  4050c2:	mov    BYTE PTR [rsi+0x39],0x0
  4050c6:	mov    DWORD PTR [rax+0xc8],0x0
  4050d0:	add    rsp,0x28
  4050d4:	pop    rbx
  4050d5:	pop    rsi
  4050d6:	ret    
  4050d7:	nop    WORD PTR [rax+rax*1+0x0]
  4050e0:	push   rdi
  4050e1:	push   rsi
  4050e2:	push   rbx
  4050e3:	sub    rsp,0x20
  4050e7:	mov    eax,DWORD PTR [rcx+0x28]
  4050ea:	mov    rbx,rcx
  4050ed:	mov    edi,edx
  4050ef:	mov    rcx,QWORD PTR [rcx+0x8]
  4050f3:	test   eax,eax
  4050f5:	jle    0x405104
  4050f7:	mov    eax,DWORD PTR [rbx+0x1c]
  4050fa:	sub    eax,DWORD PTR [rcx+0xc8]
  405100:	test   eax,eax
  405102:	jle    0x405150
  405104:	mov    rsi,QWORD PTR [rcx+0xb0]
  40510b:	mov    rax,QWORD PTR [rsi+0x18]
  40510f:	lea    rcx,[rax+0x1]
  405113:	cmp    rcx,QWORD PTR [rsi+0x20]
  405117:	ja     0x405133
  405119:	mov    QWORD PTR [rsi+0x18],rcx
  40511d:	mov    BYTE PTR [rax],dil
  405120:	mov    rax,QWORD PTR [rbx+0x8]
  405124:	add    DWORD PTR [rax+0xc8],0x1
  40512b:	add    rsp,0x20
  40512f:	pop    rbx
  405130:	pop    rsi
  405131:	pop    rdi
  405132:	ret    
  405133:	mov    rcx,rsi
  405136:	mov    edx,0x1
  40513b:	call   0x438250
  405140:	mov    rax,QWORD PTR [rsi+0x18]
  405144:	lea    rcx,[rax+0x1]
  405148:	jmp    0x405119
  40514a:	nop    WORD PTR [rax+rax*1+0x0]
  405150:	mov    rcx,rbx
  405153:	call   0x405080
  405158:	mov    rax,QWORD PTR [rip+0x4c481]        # 0x4515e0
  40515f:	movzx  edx,dil
  405163:	test   BYTE PTR [rax+rdx*2],0x40
  405167:	jne    0x40512b
  405169:	mov    rcx,QWORD PTR [rbx+0x8]
  40516d:	jmp    0x405104
  40516f:	nop
  405170:	push   rdi
  405171:	push   rsi
  405172:	push   rbx
  405173:	sub    rsp,0x20
  405177:	mov    esi,DWORD PTR [rcx+0x20]
  40517a:	xor    ebx,ebx
  40517c:	mov    rdi,rcx
  40517f:	test   esi,esi
  405181:	jle    0x405197
  405183:	mov    edx,0x20
  405188:	mov    rcx,rdi
  40518b:	add    ebx,0x1
  40518e:	call   0x4050e0
  405193:	cmp    ebx,esi
  405195:	jne    0x405183
  405197:	add    rsp,0x20
  40519b:	pop    rbx
  40519c:	pop    rsi
  40519d:	pop    rdi
  40519e:	ret    
  40519f:	nop
  4051a0:	push   r12
  4051a2:	push   rbp
  4051a3:	push   rdi
  4051a4:	push   rsi
  4051a5:	push   rbx
  4051a6:	sub    rsp,0x20
  4051aa:	mov    rsi,QWORD PTR [rcx+0x10]
  4051ae:	test   rsi,rsi
  4051b1:	je     0x405216
  4051b3:	mov    eax,DWORD PTR [rcx+0x24]
  4051b6:	mov    rbx,rcx
  4051b9:	test   eax,eax
  4051bb:	je     0x405221
  4051bd:	cmp    eax,0x2
  4051c0:	jne    0x405216
  4051c2:	mov    rcx,rsi
  4051c5:	call   0x43f028
  4051ca:	mov    r12,rax
  4051cd:	mov    rax,QWORD PTR [rbx+0x8]
  4051d1:	movsxd rbp,r12d
  4051d4:	mov    rdi,QWORD PTR [rax+0xb0]
  4051db:	mov    rcx,QWORD PTR [rdi+0x18]
  4051df:	lea    rax,[rcx+rbp*1]
  4051e3:	cmp    QWORD PTR [rdi+0x20],rax
  4051e7:	jae    0x4051f8
  4051e9:	mov    rcx,rdi
  4051ec:	mov    edx,r12d
  4051ef:	call   0x438250
  4051f4:	mov    rcx,QWORD PTR [rdi+0x18]
  4051f8:	mov    r8,rbp
  4051fb:	mov    rdx,rsi
  4051fe:	call   0x43f0a8
  405203:	add    QWORD PTR [rdi+0x18],rbp
  405207:	mov    rax,QWORD PTR [rbx+0x8]
  40520b:	add    DWORD PTR [rax+0xc8],r12d
  405212:	mov    BYTE PTR [rbx+0x38],0x1
  405216:	add    rsp,0x20
  40521a:	pop    rbx
  40521b:	pop    rsi
  40521c:	pop    rdi
  40521d:	pop    rbp
  40521e:	pop    r12
  405220:	ret    
  405221:	cmp    BYTE PTR [rcx+0x38],0x0
  405225:	je     0x405250
  405227:	mov    edi,DWORD PTR [rcx+0x20]
  40522a:	test   edi,edi
  40522c:	jle    0x405216
  40522e:	xor    esi,esi
  405230:	mov    edx,0x20
  405235:	mov    rcx,rbx
  405238:	add    esi,0x1
  40523b:	call   0x4050e0
  405240:	cmp    esi,edi
  405242:	jne    0x405230
  405244:	add    rsp,0x20
  405248:	pop    rbx
  405249:	pop    rsi
  40524a:	pop    rdi
  40524b:	pop    rbp
  40524c:	pop    r12
  40524e:	ret    
  40524f:	nop
  405250:	add    DWORD PTR [rcx+0x20],0x3
  405254:	jmp    0x4051c2
  405259:	nop    DWORD PTR [rax+0x0]
  405260:	push   r12
  405262:	push   rbp
  405263:	push   rdi
  405264:	push   rsi
  405265:	push   rbx
  405266:	sub    rsp,0x30
  40526a:	mov    rax,QWORD PTR [rcx+0x8]
  40526e:	mov    rbx,rdx
  405271:	mov    rbp,rcx
  405274:	mov    edx,DWORD PTR [rax+0xc8]
  40527a:	test   edx,edx
  40527c:	je     0x4052d0
  40527e:	mov    rdi,QWORD PTR [rax+0xb0]
  405285:	mov    rsi,r8
  405288:	sub    rsi,rbx
  40528b:	movsxd r12,esi
  40528e:	mov    rcx,QWORD PTR [rdi+0x18]
  405292:	lea    rax,[rcx+r12*1]
  405296:	cmp    QWORD PTR [rdi+0x20],rax
  40529a:	jae    0x4052aa
  40529c:	mov    rcx,rdi
  40529f:	mov    edx,esi
  4052a1:	call   0x438250
  4052a6:	mov    rcx,QWORD PTR [rdi+0x18]
  4052aa:	mov    r8,r12
  4052ad:	mov    rdx,rbx
  4052b0:	call   0x43f0a8
  4052b5:	add    QWORD PTR [rdi+0x18],r12
  4052b9:	mov    rax,QWORD PTR [rbp+0x8]
  4052bd:	add    DWORD PTR [rax+0xc8],esi
  4052c3:	add    rsp,0x30
  4052c7:	pop    rbx
  4052c8:	pop    rsi
  4052c9:	pop    rdi
  4052ca:	pop    rbp
  4052cb:	pop    r12
  4052cd:	ret    
  4052ce:	xchg   ax,ax
  4052d0:	mov    QWORD PTR [rsp+0x28],r8
  4052d5:	call   0x4051a0
  4052da:	mov    eax,DWORD PTR [rbp+0x28]
  4052dd:	mov    r8,QWORD PTR [rsp+0x28]
  4052e2:	test   eax,eax
  4052e4:	jle    0x4052fe
  4052e6:	cmp    rbx,r8
  4052e9:	jne    0x4052f9
  4052eb:	jmp    0x4052fe
  4052ed:	nop    DWORD PTR [rax]
  4052f0:	add    rbx,0x1
  4052f4:	cmp    r8,rbx
  4052f7:	je     0x4052fe
  4052f9:	cmp    BYTE PTR [rbx],0x20
  4052fc:	je     0x4052f0
  4052fe:	mov    rax,QWORD PTR [rbp+0x8]
  405302:	jmp    0x40527e
  405307:	nop    WORD PTR [rax+rax*1+0x0]
  405310:	push   r12
  405312:	push   rbp
  405313:	push   rdi
  405314:	push   rsi
  405315:	push   rbx
  405316:	sub    rsp,0x20
  40531a:	test   rdx,rdx
  40531d:	mov    r12,rcx
  405320:	mov    rbp,rdx
  405323:	je     0x40543b
  405329:	mov    rcx,rdx
  40532c:	call   0x43f028
  405331:	mov    edx,DWORD PTR [r12+0x28]
  405336:	lea    rsi,[rbp+rax*1+0x0]
  40533b:	test   edx,edx
  40533d:	jle    0x405398
  40533f:	cmp    rbp,rsi
  405342:	je     0x405442
  405348:	movzx  eax,BYTE PTR [rbp+0x0]
  40534c:	mov    rdi,QWORD PTR [rip+0x4c28d]        # 0x4515e0
  405353:	mov    rbx,rbp
  405356:	jmp    0x405363
  405358:	nop    DWORD PTR [rax+rax*1+0x0]
  405360:	movzx  eax,BYTE PTR [rbx]
  405363:	movzx  r9d,al
  405367:	test   BYTE PTR [rdi+r9*2],0x1
  40536c:	jne    0x4053b0
  40536e:	cmp    al,0xa
  405370:	je     0x4053b0
  405372:	add    rbx,0x1
  405376:	cmp    rsi,rbx
  405379:	jne    0x405360
  40537b:	mov    rcx,QWORD PTR [r12+0x8]
  405380:	mov    eax,DWORD PTR [r12+0x1c]
  405385:	mov    rdx,rsi
  405388:	sub    rdx,rbp
  40538b:	sub    eax,DWORD PTR [rcx+0xc8]
  405391:	cdqe   
  405393:	cmp    rdx,rax
  405396:	jge    0x4053cd
  405398:	mov    r8,rsi
  40539b:	mov    rdx,rbp
  40539e:	mov    rcx,r12
  4053a1:	add    rsp,0x20
  4053a5:	pop    rbx
  4053a6:	pop    rsi
  4053a7:	pop    rdi
  4053a8:	pop    rbp
  4053a9:	pop    r12
  4053ab:	jmp    0x405260
  4053b0:	mov    rcx,QWORD PTR [r12+0x8]
  4053b5:	mov    eax,DWORD PTR [r12+0x1c]
  4053ba:	mov    rdx,rbx
  4053bd:	sub    rdx,rbp
  4053c0:	sub    eax,DWORD PTR [rcx+0xc8]
  4053c6:	cdqe   
  4053c8:	cmp    rdx,rax
  4053cb:	jl     0x4053d5
  4053cd:	mov    rcx,r12
  4053d0:	call   0x405080
  4053d5:	mov    r8,rbx
  4053d8:	mov    rdx,rbp
  4053db:	mov    rcx,r12
  4053de:	call   0x405260
  4053e3:	cmp    rsi,rbx
  4053e6:	je     0x405442
  4053e8:	movzx  edx,BYTE PTR [rbx]
  4053eb:	test   BYTE PTR [rdi+rdx*2],0x1
  4053ef:	mov    rax,rdx
  4053f2:	jne    0x405400
  4053f4:	cmp    al,0xa
  4053f6:	je     0x405421
  4053f8:	mov    rbp,rbx
  4053fb:	jmp    0x405353
  405400:	mov    edx,0x20
  405405:	mov    rcx,r12
  405408:	call   0x4050e0
  40540d:	lea    rdx,[rbx+0x1]
  405411:	cmp    rsi,rdx
  405414:	je     0x405442
  405416:	movzx  eax,BYTE PTR [rbx+0x1]
  40541a:	mov    rbx,rdx
  40541d:	cmp    al,0xa
  40541f:	jne    0x4053f8
  405421:	mov    rcx,r12
  405424:	call   0x405080
  405429:	lea    rdx,[rbx+0x1]
  40542d:	cmp    rsi,rdx
  405430:	je     0x405442
  405432:	movzx  eax,BYTE PTR [rbx+0x1]
  405436:	mov    rbx,rdx
  405439:	jmp    0x4053f8
  40543b:	mov    eax,DWORD PTR [rcx+0x28]
  40543e:	test   eax,eax
  405440:	jle    0x40544d
  405442:	add    rsp,0x20
  405446:	pop    rbx
  405447:	pop    rsi
  405448:	pop    rdi
  405449:	pop    rbp
  40544a:	pop    r12
  40544c:	ret    
  40544d:	xor    esi,esi
  40544f:	jmp    0x405398
  405454:	xchg   ax,ax
  405456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405460:	push   r15
  405462:	push   r14
  405464:	push   r13
  405466:	push   r12
  405468:	push   rbp
  405469:	push   rdi
  40546a:	push   rsi
  40546b:	push   rbx
  40546c:	sub    rsp,0x178
  405473:	mov    r13,QWORD PTR [rcx+0x8]
  405477:	mov    QWORD PTR [rsp+0x1c8],rdx
  40547f:	mov    rbp,rcx
  405482:	mov    r8,QWORD PTR [r13+0x78]
  405486:	mov    rax,QWORD PTR [r13+0x70]
  40548a:	lea    rbx,[r13+0x58]
  40548e:	mov    rdx,r8
  405491:	sub    rdx,rax
  405494:	cmp    rdx,0x1e7
  40549b:	jle    0x405b21
  4054a1:	mov    rcx,QWORD PTR [r13+0x68]
  4054a5:	add    rax,0x1e8
  4054ab:	mov    QWORD PTR [r13+0x70],rax
  4054af:	cmp    rax,rcx
  4054b2:	je     0x406154
  4054b8:	movsxd r9,DWORD PTR [r13+0x88]
  4054bf:	mov    rdi,r8
  4054c2:	mov    rdx,r9
  4054c5:	add    r9,rax
  4054c8:	not    edx
  4054ca:	movsxd rax,edx
  4054cd:	mov    rdx,QWORD PTR [r13+0x60]
  4054d1:	and    rax,r9
  4054d4:	mov    r9,rax
  4054d7:	mov    QWORD PTR [r13+0x70],rax
  4054db:	sub    r9,rdx
  4054de:	sub    rdi,rdx
  4054e1:	cmp    r9,rdi
  4054e4:	jle    0x4054ed
  4054e6:	mov    QWORD PTR [r13+0x70],r8
  4054ea:	mov    rax,r8
  4054ed:	mov    QWORD PTR [r13+0x68],rax
  4054f1:	mov    rax,QWORD PTR [r13+0xb8]
  4054f8:	lea    rdx,[rsp+0x80]
  405500:	mov    BYTE PTR [rsp+0x57],0x0
  405505:	mov    BYTE PTR [rsp+0x56],0x0
  40550a:	xor    r12d,r12d
  40550d:	mov    rdi,rdx
  405510:	mov    QWORD PTR [rcx],rax
  405513:	lea    rax,[rcx+0x8]
  405517:	mov    QWORD PTR [r13+0xb8],rcx
  40551e:	mov    ecx,0x1e
  405523:	mov    QWORD PTR [rsp+0x48],rax
  405528:	xor    eax,eax
  40552a:	rep stos QWORD PTR es:[rdi],rax
  40552d:	mov    rax,QWORD PTR [rsp+0x1c8]
  405535:	xor    edi,edi
  405537:	mov    rsi,QWORD PTR [rax]
  40553a:	lea    rax,[rsp+0x78]
  40553f:	mov    QWORD PTR [rsp+0x60],rax
  405544:	movzx  eax,BYTE PTR [rsi]
  405547:	test   al,al
  405549:	je     0x40579f
  40554f:	cmp    al,0x25
  405551:	jne    0x40556d
  405553:	jmp    0x40559a
  405555:	mov    QWORD PTR [r13+0x70],rdx
  405559:	movzx  edx,BYTE PTR [rsi]
  40555c:	add    rsi,0x1
  405560:	mov    BYTE PTR [rax],dl
  405562:	movzx  eax,BYTE PTR [rsi]
  405565:	cmp    al,0x25
  405567:	je     0x405592
  405569:	test   al,al
  40556b:	je     0x405592
  40556d:	mov    rax,QWORD PTR [r13+0x70]
  405571:	lea    rdx,[rax+0x1]
  405575:	cmp    rdx,QWORD PTR [r13+0x78]
  405579:	jbe    0x405555
  40557b:	mov    edx,0x1
  405580:	mov    rcx,rbx
  405583:	call   0x438250
  405588:	mov    rax,QWORD PTR [r13+0x70]
  40558c:	lea    rdx,[rax+0x1]
  405590:	jmp    0x405555
  405592:	test   al,al
  405594:	je     0x40579f
  40559a:	movzx  eax,BYTE PTR [rsi+0x1]
  40559e:	cmp    al,0x3c
  4055a0:	je     0x405a20
  4055a6:	jg     0x405700
  4055ac:	cmp    al,0x25
  4055ae:	je     0x405940
  4055b4:	cmp    al,0x27
  4055b6:	je     0x405980
  4055bc:	test   al,al
  4055be:	je     0x405962
  4055c4:	mov    rax,QWORD PTR [r13+0x70]
  4055c8:	lea    rdx,[rax+0x1]
  4055cc:	cmp    rdx,QWORD PTR [r13+0x78]
  4055d0:	ja     0x405c46
  4055d6:	cmp    edi,0x3b
  4055d9:	mov    QWORD PTR [r13+0x70],rdx
  4055dd:	mov    BYTE PTR [rax],0x0
  4055e0:	ja     0x4065f1
  4055e6:	lea    eax,[rdi+0x1]
  4055e9:	mov    rcx,QWORD PTR [rsp+0x48]
  4055ee:	mov    r8,QWORD PTR [r13+0x68]
  4055f2:	mov    DWORD PTR [rsp+0x40],eax
  4055f6:	mov    eax,edi
  4055f8:	lea    r10,[rcx+rax*8]
  4055fc:	mov    rax,QWORD PTR [r13+0x70]
  405600:	cmp    rax,r8
  405603:	je     0x406161
  405609:	movsxd rdx,DWORD PTR [r13+0x88]
  405610:	mov    ecx,edx
  405612:	add    rax,rdx
  405615:	mov    rdx,QWORD PTR [r13+0x60]
  405619:	not    ecx
  40561b:	movsxd rcx,ecx
  40561e:	and    rax,rcx
  405621:	mov    rcx,QWORD PTR [r13+0x78]
  405625:	mov    r9,rax
  405628:	mov    QWORD PTR [r13+0x70],rax
  40562c:	sub    r9,rdx
  40562f:	mov    r11,rcx
  405632:	sub    r11,rdx
  405635:	cmp    r9,r11
  405638:	jg     0x405a84
  40563e:	mov    QWORD PTR [r13+0x68],rax
  405642:	mov    QWORD PTR [r10],r8
  405645:	lea    r15,[rsi+0x1]
  405649:	movzx  eax,BYTE PTR [rsi+0x1]
  40564d:	mov    rcx,QWORD PTR [rip+0x4bf8c]        # 0x4515e0
  405654:	test   BYTE PTR [rcx+rax*2],0x4
  405658:	jne    0x405c8d
  40565e:	cmp    BYTE PTR [rsp+0x57],0x0
  405663:	lea    eax,[r12+0x1]
  405668:	mov    DWORD PTR [rsp+0x58],eax
  40566c:	jne    0x406609
  405672:	mov    BYTE PTR [rsp+0x56],0x1
  405677:	cmp    r12d,0x1d
  40567b:	ja     0x406441
  405681:	mov    eax,r12d
  405684:	cmp    QWORD PTR [rsp+rax*8+0x80],0x0
  40568d:	jne    0x406429
  405693:	mov    edx,DWORD PTR [rsp+0x40]
  405697:	mov    rcx,QWORD PTR [rsp+0x48]
  40569c:	lea    r14,[rcx+rdx*8]
  4056a0:	mov    QWORD PTR [rsp+rax*8+0x80],r14
  4056a8:	jmp    0x4056da
  4056aa:	nop    WORD PTR [rax+rax*1+0x0]
  4056b0:	mov    QWORD PTR [r13+0x70],rdx
  4056b4:	movzx  edx,BYTE PTR [r15]
  4056b8:	add    r15,0x1
  4056bc:	lea    rcx,[rip+0x3f209]        # 0x4448cc
  4056c3:	mov    BYTE PTR [rax],dl
  4056c5:	movsx  edx,BYTE PTR [r15-0x1]
  4056ca:	mov    esi,edx
  4056cc:	call   0x43f050
  4056d1:	test   rax,rax
  4056d4:	je     0x405990
  4056da:	mov    rax,QWORD PTR [r13+0x70]
  4056de:	lea    rdx,[rax+0x1]
  4056e2:	cmp    rdx,QWORD PTR [r13+0x78]
  4056e6:	jbe    0x4056b0
  4056e8:	mov    edx,0x1
  4056ed:	mov    rcx,rbx
  4056f0:	call   0x438250
  4056f5:	mov    rax,QWORD PTR [r13+0x70]
  4056f9:	lea    rdx,[rax+0x1]
  4056fd:	jmp    0x4056b0
  4056ff:	nop
  405700:	cmp    al,0x52
  405702:	je     0x405930
  405708:	cmp    al,0x6d
  40570a:	je     0x4058e1
  405710:	cmp    al,0x3e
  405712:	jne    0x4055c4
  405718:	movzx  ecx,BYTE PTR [rbp+0x3b]
  40571c:	call   0x404a60
  405721:	mov    rcx,rax
  405724:	mov    r15,rax
  405727:	call   0x43f028
  40572c:	mov    rcx,QWORD PTR [r13+0x70]
  405730:	movsxd r14,eax
  405733:	lea    rdx,[rcx+r14*1]
  405737:	cmp    QWORD PTR [r13+0x78],rdx
  40573b:	jb     0x405c60
  405741:	mov    r8,r14
  405744:	mov    rdx,r15
  405747:	call   0x43f0a8
  40574c:	add    r14,QWORD PTR [r13+0x70]
  405750:	mov    QWORD PTR [r13+0x70],r14
  405754:	mov    rax,QWORD PTR [rip+0x4bec5]        # 0x451620
  40575b:	mov    rdx,QWORD PTR [rax]
  40575e:	mov    rcx,rdx
  405761:	mov    QWORD PTR [rsp+0x40],rdx
  405766:	call   0x43f028
  40576b:	movsxd r15,eax
  40576e:	mov    rdx,QWORD PTR [rsp+0x40]
  405773:	lea    rcx,[r14+r15*1]
  405777:	cmp    QWORD PTR [r13+0x78],rcx
  40577b:	jb     0x405b04
  405781:	mov    r8,r15
  405784:	mov    rcx,r14
  405787:	add    rsi,0x2
  40578b:	call   0x43f0a8
  405790:	add    QWORD PTR [r13+0x70],r15
  405794:	movzx  eax,BYTE PTR [rsi]
  405797:	test   al,al
  405799:	jne    0x40554f
  40579f:	mov    rax,QWORD PTR [r13+0x70]
  4057a3:	lea    rdx,[rax+0x1]
  4057a7:	cmp    rdx,QWORD PTR [r13+0x78]
  4057ab:	ja     0x405e38
  4057b1:	cmp    edi,0x3b
  4057b4:	mov    QWORD PTR [r13+0x70],rdx
  4057b8:	mov    BYTE PTR [rax],0x0
  4057bb:	ja     0x406471
  4057c1:	mov    rax,QWORD PTR [rsp+0x48]
  4057c6:	mov    r9,QWORD PTR [r13+0x68]
  4057ca:	lea    ecx,[rdi+0x1]
  4057cd:	lea    r11,[rax+rdi*8]
  4057d1:	mov    rax,QWORD PTR [r13+0x70]
  4057d5:	cmp    rax,r9
  4057d8:	je     0x406264
  4057de:	movsxd rdx,DWORD PTR [r13+0x88]
  4057e5:	mov    r8d,edx
  4057e8:	add    rax,rdx
  4057eb:	mov    rdx,QWORD PTR [r13+0x60]
  4057ef:	not    r8d
  4057f2:	movsxd r8,r8d
  4057f5:	and    rax,r8
  4057f8:	mov    r8,QWORD PTR [r13+0x78]
  4057fc:	mov    rsi,rax
  4057ff:	mov    QWORD PTR [r13+0x70],rax
  405803:	sub    rsi,rdx
  405806:	mov    rdi,r8
  405809:	sub    rdi,rdx
  40580c:	cmp    rsi,rdi
  40580f:	jg     0x405e2c
  405815:	mov    rdi,QWORD PTR [rsp+0x48]
  40581a:	mov    QWORD PTR [r13+0x68],rax
  40581e:	mov    eax,ecx
  405820:	mov    QWORD PTR [r11],r9
  405823:	mov    r10,QWORD PTR [rsp+0x80]
  40582b:	xor    r12d,r12d
  40582e:	mov    QWORD PTR [rdi+rax*8],0x0
  405836:	mov    QWORD PTR [r13+0xb0],rbx
  40583d:	mov    eax,DWORD PTR [rbp+0x24]
  405840:	test   r10,r10
  405843:	mov    DWORD PTR [rbp+0x24],0x1
  40584a:	mov    DWORD PTR [rsp+0x40],eax
  40584e:	mov    eax,DWORD PTR [rbp+0x28]
  405851:	mov    DWORD PTR [rbp+0x28],0x0
  405858:	mov    DWORD PTR [rsp+0x48],eax
  40585c:	je     0x405bea
  405862:	lea    rax,[rsp+0x78]
  405867:	mov    r15,QWORD PTR [rsp+0x1c8]
  40586f:	mov    QWORD PTR [rsp+0x60],rbx
  405874:	mov    QWORD PTR [rsp+0x68],rax
  405879:	mov    rbx,QWORD PTR [r10]
  40587c:	xor    edi,edi
  40587e:	xor    r11d,r11d
  405881:	xor    r9d,r9d
  405884:	xor    r14d,r14d
  405887:	xor    esi,esi
  405889:	jmp    0x4058b3
  40588b:	nop    DWORD PTR [rax+rax*1+0x0]
  405890:	cmp    al,0x23
  405892:	je     0x405af0
  405898:	cmp    al,0x2b
  40589a:	jne    0x405ab4
  4058a0:	test   r9b,r9b
  4058a3:	jne    0x406579
  4058a9:	mov    r9d,0x1
  4058af:	add    rbx,0x1
  4058b3:	movzx  eax,BYTE PTR [rbx]
  4058b6:	cmp    al,0x6c
  4058b8:	je     0x405a90
  4058be:	jle    0x405890
  4058c0:	cmp    al,0x71
  4058c2:	je     0x405aa1
  4058c8:	cmp    al,0x77
  4058ca:	jne    0x405ab4
  4058d0:	test   r14b,r14b
  4058d3:	jne    0x406591
  4058d9:	mov    r14d,0x1
  4058df:	jmp    0x4058af
  4058e1:	mov    rax,QWORD PTR [rsp+0x1c8]
  4058e9:	mov    ecx,DWORD PTR [rax+0x10]
  4058ec:	call   0x438700
  4058f1:	mov    rcx,rax
  4058f4:	mov    r15,rax
  4058f7:	call   0x43f028
  4058fc:	mov    rcx,QWORD PTR [r13+0x70]
  405900:	movsxd r14,eax
  405903:	lea    rdx,[rcx+r14*1]
  405907:	cmp    QWORD PTR [r13+0x78],rdx
  40590b:	jb     0x405a71
  405911:	mov    r8,r14
  405914:	mov    rdx,r15
  405917:	add    rsi,0x2
  40591b:	call   0x43f0a8
  405920:	add    QWORD PTR [r13+0x70],r14
  405924:	jmp    0x405544
  405929:	nop    DWORD PTR [rax+0x0]
  405930:	movzx  ecx,BYTE PTR [rbp+0x3b]
  405934:	call   0x404a60
  405939:	jmp    0x4058f1
  40593b:	nop    DWORD PTR [rax+rax*1+0x0]
  405940:	mov    rax,QWORD PTR [r13+0x70]
  405944:	lea    rdx,[rax+0x1]
  405948:	cmp    rdx,QWORD PTR [r13+0x78]
  40594c:	ja     0x405c73
  405952:	mov    QWORD PTR [r13+0x70],rdx
  405956:	add    rsi,0x2
  40595a:	mov    BYTE PTR [rax],0x25
  40595d:	jmp    0x405544
  405962:	lea    r8,[rip+0x3f120]        # 0x444a89
  405969:	lea    rcx,[rip+0x3ef00]        # 0x444870
  405970:	mov    edx,0x143
  405975:	call   0x4039c0
  40597a:	nop    WORD PTR [rax+rax*1+0x0]
  405980:	mov    r14,QWORD PTR [r13+0x70]
  405984:	jmp    0x405754
  405989:	nop    DWORD PTR [rax+0x0]
  405990:	cmp    sil,0x2e
  405994:	je     0x405ced
  40599a:	cmp    BYTE PTR [r15],0x0
  40599e:	je     0x4063f0
  4059a4:	mov    rax,QWORD PTR [r13+0x70]
  4059a8:	lea    rdx,[rax+0x1]
  4059ac:	cmp    rdx,QWORD PTR [r13+0x78]
  4059b0:	ja     0x405cd3
  4059b6:	mov    QWORD PTR [r13+0x70],rdx
  4059ba:	mov    BYTE PTR [rax],0x0
  4059bd:	add    edi,0x2
  4059c0:	mov    r8,QWORD PTR [r13+0x68]
  4059c4:	mov    rax,QWORD PTR [r13+0x70]
  4059c8:	cmp    rax,r8
  4059cb:	je     0x40616e
  4059d1:	movsxd rdx,DWORD PTR [r13+0x88]
  4059d8:	mov    ecx,edx
  4059da:	add    rax,rdx
  4059dd:	mov    rdx,QWORD PTR [r13+0x78]
  4059e1:	not    ecx
  4059e3:	movsxd rcx,ecx
  4059e6:	and    rax,rcx
  4059e9:	mov    rcx,QWORD PTR [r13+0x60]
  4059ed:	mov    rsi,rdx
  4059f0:	mov    r10,rax
  4059f3:	mov    QWORD PTR [r13+0x70],rax
  4059f7:	sub    r10,rcx
  4059fa:	sub    rsi,rcx
  4059fd:	cmp    r10,rsi
  405a00:	jle    0x405a09
  405a02:	mov    QWORD PTR [r13+0x70],rdx
  405a06:	mov    rax,rdx
  405a09:	mov    QWORD PTR [r13+0x68],rax
  405a0d:	mov    r12d,DWORD PTR [rsp+0x58]
  405a12:	mov    rsi,r15
  405a15:	mov    QWORD PTR [r14],r8
  405a18:	jmp    0x405544
  405a1d:	nop    DWORD PTR [rax]
  405a20:	mov    rax,QWORD PTR [rip+0x4bcf9]        # 0x451720
  405a27:	mov    r15,QWORD PTR [rax]
  405a2a:	mov    rcx,r15
  405a2d:	call   0x43f028
  405a32:	mov    rcx,QWORD PTR [r13+0x70]
  405a36:	movsxd r14,eax
  405a39:	lea    rdx,[rcx+r14*1]
  405a3d:	cmp    QWORD PTR [r13+0x78],rdx
  405a41:	jb     0x405c29
  405a47:	mov    r8,r14
  405a4a:	mov    rdx,r15
  405a4d:	call   0x43f0a8
  405a52:	add    QWORD PTR [r13+0x70],r14
  405a56:	movzx  ecx,BYTE PTR [rbp+0x3b]
  405a5a:	lea    rdx,[rip+0x3ee65]        # 0x4448c6
  405a61:	mov    r8d,0x5
  405a67:	call   0x4049f0
  405a6c:	jmp    0x4058f1
  405a71:	mov    rcx,rbx
  405a74:	mov    edx,eax
  405a76:	call   0x438250
  405a7b:	mov    rcx,QWORD PTR [r13+0x70]
  405a7f:	jmp    0x405911
  405a84:	mov    QWORD PTR [r13+0x70],rcx
  405a88:	mov    rax,rcx
  405a8b:	jmp    0x40563e
  405a90:	cmp    esi,0x1
  405a93:	jg     0x406519
  405a99:	add    esi,0x1
  405a9c:	jmp    0x4058af
  405aa1:	test   dil,dil
  405aa4:	jne    0x406531
  405aaa:	mov    edi,0x1
  405aaf:	jmp    0x4058af
  405ab4:	test   esi,esi
  405ab6:	je     0x405ac1
  405ab8:	test   r14b,r14b
  405abb:	jne    0x406501
  405ac1:	test   dil,dil
  405ac4:	jne    0x405dd1
  405aca:	sub    eax,0x2e
  405acd:	cmp    al,0x4a
  405acf:	ja     0x406112
  405ad5:	lea    rcx,[rip+0x3ee30]        # 0x44490c
  405adc:	movzx  eax,al
  405adf:	movsxd rax,DWORD PTR [rcx+rax*4]
  405ae3:	add    rax,rcx
  405ae6:	jmp    rax
  405ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  405af0:	test   r11b,r11b
  405af3:	jne    0x406459
  405af9:	mov    r11d,0x1
  405aff:	jmp    0x4058af
  405b04:	mov    edx,eax
  405b06:	mov    rcx,rbx
  405b09:	call   0x438250
  405b0e:	mov    rax,QWORD PTR [rip+0x4bb0b]        # 0x451620
  405b15:	mov    r14,QWORD PTR [r13+0x70]
  405b19:	mov    rdx,QWORD PTR [rax]
  405b1c:	jmp    0x405781
  405b21:	mov    edx,0x1e8
  405b26:	mov    rcx,rbx
  405b29:	call   0x438250
  405b2e:	mov    rax,QWORD PTR [r13+0x70]
  405b32:	mov    r8,QWORD PTR [r13+0x78]
  405b36:	jmp    0x4054a1
  405b3b:	mov    rdx,QWORD PTR [r15+0x8]
  405b3f:	mov    rax,QWORD PTR [rdx]
  405b42:	lea    rcx,[rax+0x8]
  405b46:	mov    QWORD PTR [rdx],rcx
  405b49:	mov    rdx,QWORD PTR [rax]
  405b4c:	mov    rcx,rbp
  405b4f:	call   0x405310
  405b54:	mov    eax,r12d
  405b57:	mov    rbx,QWORD PTR [rsp+rax*8+0x80]
  405b5f:	test   dil,dil
  405b62:	jne    0x405f81
  405b68:	mov    rax,QWORD PTR [r13+0x70]
  405b6c:	lea    rdx,[rax+0x1]
  405b70:	cmp    rdx,QWORD PTR [r13+0x78]
  405b74:	ja     0x405fb9
  405b7a:	mov    QWORD PTR [r13+0x70],rdx
  405b7e:	mov    BYTE PTR [rax],0x0
  405b81:	mov    r8,QWORD PTR [r13+0x68]
  405b85:	mov    rax,QWORD PTR [r13+0x70]
  405b89:	cmp    rax,r8
  405b8c:	je     0x40617b
  405b92:	movsxd rdx,DWORD PTR [r13+0x88]
  405b99:	mov    ecx,edx
  405b9b:	add    rax,rdx
  405b9e:	mov    rdx,QWORD PTR [r13+0x78]
  405ba2:	not    ecx
  405ba4:	movsxd rcx,ecx
  405ba7:	and    rax,rcx
  405baa:	mov    rcx,QWORD PTR [r13+0x60]
  405bae:	mov    rdi,rdx
  405bb1:	mov    r9,rax
  405bb4:	mov    QWORD PTR [r13+0x70],rax
  405bb8:	sub    r9,rcx
  405bbb:	sub    rdi,rcx
  405bbe:	cmp    r9,rdi
  405bc1:	jle    0x405bca
  405bc3:	mov    QWORD PTR [r13+0x70],rdx
  405bc7:	mov    rax,rdx
  405bca:	mov    QWORD PTR [r13+0x68],rax
  405bce:	lea    eax,[r12+0x1]
  405bd3:	mov    QWORD PTR [rbx],r8
  405bd6:	mov    r10,QWORD PTR [rsp+rax*8+0x80]
  405bde:	mov    r12,rax
  405be1:	test   r10,r10
  405be4:	jne    0x405879
  405bea:	mov    eax,DWORD PTR [rsp+0x40]
  405bee:	mov    QWORD PTR [r13+0xb0],r13
  405bf5:	mov    DWORD PTR [r13+0xc8],0x0
  405c00:	mov    BYTE PTR [rbp+0x38],0x0
  405c04:	mov    DWORD PTR [rbp+0x20],0x0
  405c0b:	mov    DWORD PTR [rbp+0x24],eax
  405c0e:	mov    eax,DWORD PTR [rsp+0x48]
  405c12:	mov    DWORD PTR [rbp+0x28],eax
  405c15:	add    rsp,0x178
  405c1c:	pop    rbx
  405c1d:	pop    rsi
  405c1e:	pop    rdi
  405c1f:	pop    rbp
  405c20:	pop    r12
  405c22:	pop    r13
  405c24:	pop    r14
  405c26:	pop    r15
  405c28:	ret    
  405c29:	mov    edx,eax
  405c2b:	mov    rcx,rbx
  405c2e:	call   0x438250
  405c33:	mov    rax,QWORD PTR [rip+0x4bae6]        # 0x451720
  405c3a:	mov    rcx,QWORD PTR [r13+0x70]
  405c3e:	mov    r15,QWORD PTR [rax]
  405c41:	jmp    0x405a47
  405c46:	mov    edx,0x1
  405c4b:	mov    rcx,rbx
  405c4e:	call   0x438250
  405c53:	mov    rax,QWORD PTR [r13+0x70]
  405c57:	lea    rdx,[rax+0x1]
  405c5b:	jmp    0x4055d6
  405c60:	mov    rcx,rbx
  405c63:	mov    edx,eax
  405c65:	call   0x438250
  405c6a:	mov    rcx,QWORD PTR [r13+0x70]
  405c6e:	jmp    0x405741
  405c73:	mov    edx,0x1
  405c78:	mov    rcx,rbx
  405c7b:	call   0x438250
  405c80:	mov    rax,QWORD PTR [r13+0x70]
  405c84:	lea    rdx,[rax+0x1]
  405c88:	jmp    0x405952
  405c8d:	mov    rdx,QWORD PTR [rsp+0x60]
  405c92:	mov    r8d,0xa
  405c98:	mov    rcx,r15
  405c9b:	call   0x43efe8
  405ca0:	mov    r9,QWORD PTR [rsp+0x78]
  405ca5:	sub    eax,0x1
  405ca8:	cmp    BYTE PTR [r9],0x24
  405cac:	jne    0x406549
  405cb2:	cmp    BYTE PTR [rsp+0x56],0x0
  405cb7:	lea    r15,[r9+0x1]
  405cbb:	jne    0x406561
  405cc1:	mov    DWORD PTR [rsp+0x58],r12d
  405cc6:	mov    BYTE PTR [rsp+0x57],0x1
  405ccb:	mov    r12d,eax
  405cce:	jmp    0x405677
  405cd3:	mov    edx,0x1
  405cd8:	mov    rcx,rbx
  405cdb:	call   0x438250
  405ce0:	mov    rax,QWORD PTR [r13+0x70]
  405ce4:	lea    rdx,[rax+0x1]
  405ce8:	jmp    0x4059b6
  405ced:	movzx  edx,BYTE PTR [r15]
  405cf1:	mov    rcx,QWORD PTR [rip+0x4b8e8]        # 0x4515e0
  405cf8:	test   BYTE PTR [rcx+rdx*2],0x4
  405cfc:	jne    0x405dc1
  405d02:	cmp    dl,0x2a
  405d05:	jne    0x406489
  405d0b:	mov    rax,QWORD PTR [r13+0x70]
  405d0f:	lea    rdx,[rax+0x1]
  405d13:	cmp    rdx,QWORD PTR [r13+0x78]
  405d17:	ja     0x406354
  405d1d:	mov    QWORD PTR [r13+0x70],rdx
  405d21:	mov    BYTE PTR [rax],0x2a
  405d24:	lea    rsi,[r15+0x1]
  405d28:	movzx  edx,BYTE PTR [r15+0x1]
  405d2d:	mov    rcx,QWORD PTR [rip+0x4b8ac]        # 0x4515e0
  405d34:	test   BYTE PTR [rcx+rdx*2],0x4
  405d38:	mov    rax,rdx
  405d3b:	jne    0x406303
  405d41:	cmp    BYTE PTR [rsp+0x57],0x0
  405d46:	jne    0x4065a9
  405d4c:	add    DWORD PTR [rsp+0x58],0x1
  405d51:	lea    edx,[r12+0x1]
  405d56:	mov    QWORD PTR [rsp+rdx*8+0x80],r14
  405d5e:	cmp    al,0x73
  405d60:	jne    0x406621
  405d66:	mov    rax,QWORD PTR [r13+0x70]
  405d6a:	lea    rdx,[rax+0x1]
  405d6e:	cmp    rdx,QWORD PTR [r13+0x78]
  405d72:	ja     0x4062e9
  405d78:	mov    QWORD PTR [r13+0x70],rdx
  405d7c:	lea    r15,[rsi+0x1]
  405d80:	mov    BYTE PTR [rax],0x73
  405d83:	jmp    0x40599a
  405d88:	mov    edx,0x1
  405d8d:	mov    rcx,rbx
  405d90:	call   0x438250
  405d95:	mov    rax,QWORD PTR [r13+0x70]
  405d99:	lea    rdx,[rax+0x1]
  405d9d:	mov    QWORD PTR [r13+0x70],rdx
  405da1:	movzx  edx,BYTE PTR [r15]
  405da5:	add    r15,0x1
  405da9:	mov    rcx,QWORD PTR [rip+0x4b830]        # 0x4515e0
  405db0:	mov    BYTE PTR [rax],dl
  405db2:	movzx  edx,BYTE PTR [r15-0x1]
  405db7:	test   BYTE PTR [rcx+rdx*2],0x4
  405dbb:	je     0x406188
  405dc1:	mov    rax,QWORD PTR [r13+0x70]
  405dc5:	lea    rdx,[rax+0x1]
  405dc9:	cmp    rdx,QWORD PTR [r13+0x78]
  405dcd:	jbe    0x405d9d
  405dcf:	jmp    0x405d88
  405dd1:	mov    rax,QWORD PTR [rip+0x4b948]        # 0x451720
  405dd8:	mov    rcx,rbp
  405ddb:	mov    QWORD PTR [rsp+0x58],r10
  405de0:	mov    BYTE PTR [rsp+0x57],r11b
  405de5:	mov    BYTE PTR [rsp+0x56],r9b
  405dea:	mov    rdx,QWORD PTR [rax]
  405ded:	call   0x405310
  405df2:	movzx  ecx,BYTE PTR [rbp+0x3b]
  405df6:	lea    rdx,[rip+0x3eac9]        # 0x4448c6
  405dfd:	mov    r8d,0x5
  405e03:	call   0x4049f0
  405e08:	mov    rcx,rbp
  405e0b:	mov    rdx,rax
  405e0e:	call   0x405310
  405e13:	movzx  eax,BYTE PTR [rbx]
  405e16:	mov    r10,QWORD PTR [rsp+0x58]
  405e1b:	movzx  r11d,BYTE PTR [rsp+0x57]
  405e21:	movzx  r9d,BYTE PTR [rsp+0x56]
  405e27:	jmp    0x405aca
  405e2c:	mov    QWORD PTR [r13+0x70],r8
  405e30:	mov    rax,r8
  405e33:	jmp    0x405815
  405e38:	mov    edx,0x1
  405e3d:	mov    rcx,rbx
  405e40:	call   0x438250
  405e45:	mov    rax,QWORD PTR [r13+0x70]
  405e49:	lea    rdx,[rax+0x1]
  405e4d:	jmp    0x4057b1
  405e52:	test   r14b,r14b
  405e55:	jne    0x40636e
  405e5b:	cmp    esi,0x1
  405e5e:	je     0x406237
  405e64:	cmp    esi,0x2
  405e67:	je     0x4063c8
  405e6d:	test   esi,esi
  405e6f:	jne    0x406144
  405e75:	mov    rdx,QWORD PTR [r15+0x8]
  405e79:	mov    rax,QWORD PTR [rdx]
  405e7c:	lea    rcx,[rax+0x8]
  405e80:	mov    r8d,DWORD PTR [rax]
  405e83:	mov    QWORD PTR [rdx],rcx
  405e86:	mov    rbx,QWORD PTR [rbp+0x8]
  405e8a:	lea    rdx,[rip+0x3ea6e]        # 0x4448ff
  405e91:	lea    rcx,[rbx+0xcc]
  405e98:	call   0x43f490
  405e9d:	jmp    0x405f5a
  405ea2:	test   r14b,r14b
  405ea5:	jne    0x4062c1
  405eab:	cmp    esi,0x1
  405eae:	je     0x40620a
  405eb4:	cmp    esi,0x2
  405eb7:	je     0x4062c1
  405ebd:	test   esi,esi
  405ebf:	jne    0x406144
  405ec5:	mov    rdx,QWORD PTR [r15+0x8]
  405ec9:	mov    rax,QWORD PTR [rdx]
  405ecc:	lea    rcx,[rax+0x8]
  405ed0:	mov    r8d,DWORD PTR [rax]
  405ed3:	mov    QWORD PTR [rdx],rcx
  405ed6:	mov    rbx,QWORD PTR [rbp+0x8]
  405eda:	lea    rdx,[rip+0x3ea11]        # 0x4448f2
  405ee1:	lea    rcx,[rbx+0xcc]
  405ee8:	call   0x43f490
  405eed:	jmp    0x405f5a
  405eef:	mov    rdx,QWORD PTR [r15+0x8]
  405ef3:	mov    rax,QWORD PTR [rdx]
  405ef6:	lea    rcx,[rax+0x8]
  405efa:	mov    QWORD PTR [rdx],rcx
  405efd:	mov    rbx,QWORD PTR [rax]
  405f00:	mov    rcx,rbx
  405f03:	call   0x43f028
  405f08:	movzx  ecx,BYTE PTR [rbp+0x3b]
  405f0c:	mov    rdx,rbx
  405f0f:	mov    r8,rax
  405f12:	call   0x4049f0
  405f17:	mov    rcx,rbp
  405f1a:	mov    rdx,rax
  405f1d:	call   0x405310
  405f22:	mov    eax,r12d
  405f25:	mov    rbx,QWORD PTR [rsp+rax*8+0x80]
  405f2d:	jmp    0x405b5f
  405f32:	mov    rdx,QWORD PTR [r15+0x8]
  405f36:	mov    rax,QWORD PTR [rdx]
  405f39:	lea    rcx,[rax+0x8]
  405f3d:	mov    QWORD PTR [rdx],rcx
  405f40:	mov    rbx,QWORD PTR [rbp+0x8]
  405f44:	lea    rdx,[rip+0x3e99f]        # 0x4448ea
  405f4b:	mov    r8,QWORD PTR [rax]
  405f4e:	lea    rcx,[rbx+0xcc]
  405f55:	call   0x43f490
  405f5a:	mov    rax,QWORD PTR [rbp+0x8]
  405f5e:	mov    rcx,rbp
  405f61:	lea    rdx,[rax+0xcc]
  405f68:	call   0x405310
  405f6d:	mov    eax,r12d
  405f70:	test   dil,dil
  405f73:	mov    rbx,QWORD PTR [rsp+rax*8+0x80]
  405f7b:	je     0x405b68
  405f81:	movzx  ecx,BYTE PTR [rbp+0x3b]
  405f85:	call   0x404a60
  405f8a:	mov    rcx,rbp
  405f8d:	mov    rdx,rax
  405f90:	call   0x405310
  405f95:	mov    rax,QWORD PTR [rip+0x4b684]        # 0x451620
  405f9c:	mov    rcx,rbp
  405f9f:	mov    rdx,QWORD PTR [rax]
  405fa2:	call   0x405310
  405fa7:	mov    rax,QWORD PTR [r13+0x70]
  405fab:	lea    rdx,[rax+0x1]
  405faf:	cmp    rdx,QWORD PTR [r13+0x78]
  405fb3:	jbe    0x405b7a
  405fb9:	mov    rcx,QWORD PTR [rsp+0x60]
  405fbe:	mov    edx,0x1
  405fc3:	call   0x438250
  405fc8:	mov    rax,QWORD PTR [r13+0x70]
  405fcc:	lea    rdx,[rax+0x1]
  405fd0:	jmp    0x405b7a
  405fd5:	test   r14b,r14b
  405fd8:	jne    0x406299
  405fde:	cmp    esi,0x1
  405fe1:	je     0x4061dd
  405fe7:	cmp    esi,0x2
  405fea:	je     0x406299
  405ff0:	test   esi,esi
  405ff2:	jne    0x406144
  405ff8:	mov    rdx,QWORD PTR [r15+0x8]
  405ffc:	mov    rax,QWORD PTR [rdx]
  405fff:	lea    rcx,[rax+0x8]
  406003:	mov    r8d,DWORD PTR [rax]
  406006:	mov    QWORD PTR [rdx],rcx
  406009:	mov    rbx,QWORD PTR [rbp+0x8]
  40600d:	lea    rdx,[rip+0x3e8cf]        # 0x4448e3
  406014:	lea    rcx,[rbx+0xcc]
  40601b:	call   0x43f490
  406020:	jmp    0x405f5a
  406025:	test   r14b,r14b
  406028:	jne    0x406271
  40602e:	cmp    esi,0x1
  406031:	je     0x4061b0
  406037:	cmp    esi,0x2
  40603a:	je     0x406271
  406040:	test   esi,esi
  406042:	jne    0x406144
  406048:	mov    rdx,QWORD PTR [r15+0x8]
  40604c:	mov    rax,QWORD PTR [rdx]
  40604f:	lea    rcx,[rax+0x8]
  406053:	mov    r8d,DWORD PTR [rax]
  406056:	mov    QWORD PTR [rdx],rcx
  406059:	mov    rbx,QWORD PTR [rbp+0x8]
  40605d:	lea    rdx,[rip+0x3e873]        # 0x4448d7
  406064:	lea    rcx,[rbx+0xcc]
  40606b:	call   0x43f490
  406070:	jmp    0x405f5a
  406075:	mov    rdx,QWORD PTR [r15+0x8]
  406079:	mov    rax,QWORD PTR [rdx]
  40607c:	lea    rcx,[rax+0x8]
  406080:	mov    QWORD PTR [rdx],rcx
  406083:	mov    edx,DWORD PTR [rax]
  406085:	mov    rcx,rbp
  406088:	call   0x4050e0
  40608d:	mov    eax,r12d
  406090:	mov    rbx,QWORD PTR [rsp+rax*8+0x80]
  406098:	jmp    0x405b5f
  40609d:	movzx  edx,BYTE PTR [rbx+0x1]
  4060a1:	mov    rcx,QWORD PTR [rip+0x4b538]        # 0x4515e0
  4060a8:	test   BYTE PTR [rcx+rdx*2],0x4
  4060ac:	jne    0x406396
  4060b2:	cmp    dl,0x2a
  4060b5:	jne    0x4064e9
  4060bb:	cmp    BYTE PTR [rbx+0x2],0x73
  4060bf:	jne    0x406411
  4060c5:	mov    rdx,QWORD PTR [r15+0x8]
  4060c9:	mov    rax,QWORD PTR [rdx]
  4060cc:	lea    rcx,[rax+0x8]
  4060d0:	mov    eax,DWORD PTR [rax]
  4060d2:	mov    QWORD PTR [rdx],rcx
  4060d5:	lea    edx,[r12+0x1]
  4060da:	mov    rbx,QWORD PTR [rsp+rdx*8+0x80]
  4060e2:	mov    r12,rdx
  4060e5:	cmp    r10,rbx
  4060e8:	jne    0x4063f9
  4060ee:	mov    rcx,QWORD PTR [r15+0x8]
  4060f2:	mov    rdx,QWORD PTR [rcx]
  4060f5:	lea    r8,[rdx+0x8]
  4060f9:	mov    QWORD PTR [rcx],r8
  4060fc:	mov    rdx,QWORD PTR [rdx]
  4060ff:	movsxd r8,eax
  406102:	mov    rcx,rbp
  406105:	add    r8,rdx
  406108:	call   0x405260
  40610d:	jmp    0x405b5f
  406112:	mov    rax,QWORD PTR [rbp+0x30]
  406116:	test   rax,rax
  406119:	je     0x4065d9
  40611f:	mov    DWORD PTR [rsp+0x28],r9d
  406124:	mov    DWORD PTR [rsp+0x30],r11d
  406129:	mov    r9d,esi
  40612c:	mov    DWORD PTR [rsp+0x20],r14d
  406131:	mov    r8,rbx
  406134:	mov    rdx,r15
  406137:	mov    rcx,rbp
  40613a:	call   rax
  40613c:	test   al,al
  40613e:	je     0x4065c1
  406144:	mov    eax,r12d
  406147:	mov    rbx,QWORD PTR [rsp+rax*8+0x80]
  40614f:	jmp    0x405b5f
  406154:	or     BYTE PTR [r13+0xa8],0x2
  40615c:	jmp    0x4054b8
  406161:	or     BYTE PTR [r13+0xa8],0x2
  406169:	jmp    0x405609
  40616e:	or     BYTE PTR [r13+0xa8],0x2
  406176:	jmp    0x4059d1
  40617b:	or     BYTE PTR [r13+0xa8],0x2
  406183:	jmp    0x405b92
  406188:	cmp    dl,0x73
  40618b:	je     0x40599a
  406191:	lea    r8,[rip+0x3e8f1]        # 0x444a89
  406198:	lea    rcx,[rip+0x3e6d1]        # 0x444870
  40619f:	mov    edx,0x1a1
  4061a4:	call   0x4039c0
  4061a9:	nop    DWORD PTR [rax+0x0]
  4061b0:	mov    rdx,QWORD PTR [r15+0x8]
  4061b4:	mov    rax,QWORD PTR [rdx]
  4061b7:	lea    rcx,[rax+0x8]
  4061bb:	mov    r8d,DWORD PTR [rax]
  4061be:	mov    QWORD PTR [rdx],rcx
  4061c1:	mov    rbx,QWORD PTR [rbp+0x8]
  4061c5:	lea    rdx,[rip+0x3e70e]        # 0x4448da
  4061cc:	lea    rcx,[rbx+0xcc]
  4061d3:	call   0x43f490
  4061d8:	jmp    0x405f5a
  4061dd:	mov    rdx,QWORD PTR [r15+0x8]
  4061e1:	mov    rax,QWORD PTR [rdx]
  4061e4:	lea    rcx,[rax+0x8]
  4061e8:	mov    r8d,DWORD PTR [rax]
  4061eb:	mov    QWORD PTR [rdx],rcx
  4061ee:	mov    rbx,QWORD PTR [rbp+0x8]
  4061f2:	lea    rdx,[rip+0x3e6ed]        # 0x4448e6
  4061f9:	lea    rcx,[rbx+0xcc]
  406200:	call   0x43f490
  406205:	jmp    0x405f5a
  40620a:	mov    rdx,QWORD PTR [r15+0x8]
  40620e:	mov    rax,QWORD PTR [rdx]
  406211:	lea    rcx,[rax+0x8]
  406215:	mov    r8d,DWORD PTR [rax]
  406218:	mov    QWORD PTR [rdx],rcx
  40621b:	mov    rbx,QWORD PTR [rbp+0x8]
  40621f:	lea    rdx,[rip+0x3e6cf]        # 0x4448f5
  406226:	lea    rcx,[rbx+0xcc]
  40622d:	call   0x43f490
  406232:	jmp    0x405f5a
  406237:	mov    rdx,QWORD PTR [r15+0x8]
  40623b:	mov    rax,QWORD PTR [rdx]
  40623e:	lea    rcx,[rax+0x8]
  406242:	mov    r8d,DWORD PTR [rax]
  406245:	mov    QWORD PTR [rdx],rcx
  406248:	mov    rbx,QWORD PTR [rbp+0x8]
  40624c:	lea    rdx,[rip+0x3e6af]        # 0x444902
  406253:	lea    rcx,[rbx+0xcc]
  40625a:	call   0x43f490
  40625f:	jmp    0x405f5a
  406264:	or     BYTE PTR [r13+0xa8],0x2
  40626c:	jmp    0x4057de
  406271:	mov    rdx,QWORD PTR [r15+0x8]
  406275:	mov    rax,QWORD PTR [rdx]
  406278:	lea    rcx,[rax+0x8]
  40627c:	mov    r8,QWORD PTR [rax]
  40627f:	mov    QWORD PTR [rdx],rcx
  406282:	mov    rbx,QWORD PTR [rbp+0x8]
  406286:	lea    rdx,[rip+0x3e645]        # 0x4448d2
  40628d:	lea    rcx,[rbx+0xcc]
  406294:	jmp    0x405f55
  406299:	mov    rdx,QWORD PTR [r15+0x8]
  40629d:	mov    rax,QWORD PTR [rdx]
  4062a0:	lea    rcx,[rax+0x8]
  4062a4:	mov    r8,QWORD PTR [rax]
  4062a7:	mov    QWORD PTR [rdx],rcx
  4062aa:	mov    rbx,QWORD PTR [rbp+0x8]
  4062ae:	lea    rdx,[rip+0x3e629]        # 0x4448de
  4062b5:	lea    rcx,[rbx+0xcc]
  4062bc:	jmp    0x405f55
  4062c1:	mov    rdx,QWORD PTR [r15+0x8]
  4062c5:	mov    rax,QWORD PTR [rdx]
  4062c8:	lea    rcx,[rax+0x8]
  4062cc:	mov    r8,QWORD PTR [rax]
  4062cf:	mov    QWORD PTR [rdx],rcx
  4062d2:	mov    rbx,QWORD PTR [rbp+0x8]
  4062d6:	lea    rdx,[rip+0x3e610]        # 0x4448ed
  4062dd:	lea    rcx,[rbx+0xcc]
  4062e4:	jmp    0x405f55
  4062e9:	mov    edx,0x1
  4062ee:	mov    rcx,rbx
  4062f1:	call   0x438250
  4062f6:	mov    rax,QWORD PTR [r13+0x70]
  4062fa:	lea    rdx,[rax+0x1]
  4062fe:	jmp    0x405d78
  406303:	mov    rdx,QWORD PTR [rsp+0x60]
  406308:	mov    r8d,0xa
  40630e:	mov    rcx,rsi
  406311:	sub    r12d,0x1
  406315:	call   0x43efe8
  40631a:	sub    eax,0x1
  40631d:	mov    rdx,QWORD PTR [rsp+0x78]
  406322:	cmp    r12d,eax
  406325:	jne    0x4064d1
  40632b:	cmp    BYTE PTR [rsp+0x56],0x0
  406330:	jne    0x4064b9
  406336:	cmp    BYTE PTR [rdx],0x24
  406339:	jne    0x4064a1
  40633f:	lea    rsi,[rdx+0x1]
  406343:	mov    QWORD PTR [rsp+r12*8+0x80],r14
  40634b:	movzx  eax,BYTE PTR [rdx+0x1]
  40634f:	jmp    0x405d5e
  406354:	mov    edx,0x1
  406359:	mov    rcx,rbx
  40635c:	call   0x438250
  406361:	mov    rax,QWORD PTR [r13+0x70]
  406365:	lea    rdx,[rax+0x1]
  406369:	jmp    0x405d1d
  40636e:	mov    rdx,QWORD PTR [r15+0x8]
  406372:	mov    rax,QWORD PTR [rdx]
  406375:	lea    rcx,[rax+0x8]
  406379:	mov    r8,QWORD PTR [rax]
  40637c:	mov    QWORD PTR [rdx],rcx
  40637f:	mov    rbx,QWORD PTR [rbp+0x8]
  406383:	lea    rdx,[rip+0x3e56f]        # 0x4448f9
  40638a:	lea    rcx,[rbx+0xcc]
  406391:	jmp    0x405f55
  406396:	mov    rdx,QWORD PTR [rsp+0x68]
  40639b:	lea    rcx,[rbx+0x1]
  40639f:	mov    r8d,0xa
  4063a5:	call   0x43efe8
  4063aa:	mov    rdx,QWORD PTR [rsp+0x78]
  4063af:	cmp    BYTE PTR [rdx],0x73
  4063b2:	jne    0x406639
  4063b8:	mov    edx,r12d
  4063bb:	mov    rbx,QWORD PTR [rsp+rdx*8+0x80]
  4063c3:	jmp    0x4060ee
  4063c8:	mov    rdx,QWORD PTR [r15+0x8]
  4063cc:	mov    rax,QWORD PTR [rdx]
  4063cf:	lea    rcx,[rax+0x8]
  4063d3:	mov    r8,QWORD PTR [rax]
  4063d6:	mov    QWORD PTR [rdx],rcx
  4063d9:	mov    rbx,QWORD PTR [rbp+0x8]
  4063dd:	lea    rdx,[rip+0x3e522]        # 0x444906
  4063e4:	lea    rcx,[rbx+0xcc]
  4063eb:	jmp    0x405f55
  4063f0:	mov    edi,DWORD PTR [rsp+0x40]
  4063f4:	jmp    0x40579f
  4063f9:	lea    r8,[rip+0x3e689]        # 0x444a89
  406400:	lea    rcx,[rip+0x3e469]        # 0x444870
  406407:	mov    edx,0x259
  40640c:	call   0x4039c0
  406411:	lea    r8,[rip+0x3e671]        # 0x444a89
  406418:	lea    rcx,[rip+0x3e451]        # 0x444870
  40641f:	mov    edx,0x255
  406424:	call   0x4039c0
  406429:	lea    r8,[rip+0x3e659]        # 0x444a89
  406430:	lea    rcx,[rip+0x3e439]        # 0x444870
  406437:	mov    edx,0x18c
  40643c:	call   0x4039c0
  406441:	lea    r8,[rip+0x3e641]        # 0x444a89
  406448:	lea    rcx,[rip+0x3e421]        # 0x444870
  40644f:	mov    edx,0x18b
  406454:	call   0x4039c0
  406459:	lea    r8,[rip+0x3e629]        # 0x444a89
  406460:	lea    rcx,[rip+0x3e409]        # 0x444870
  406467:	mov    edx,0x1ef
  40646c:	call   0x4039c0
  406471:	lea    r8,[rip+0x3e611]        # 0x444a89
  406478:	lea    rcx,[rip+0x3e3f1]        # 0x444870
  40647f:	mov    edx,0x1c9
  406484:	call   0x4039c0
  406489:	lea    r8,[rip+0x3e5f9]        # 0x444a89
  406490:	lea    rcx,[rip+0x3e3d9]        # 0x444870
  406497:	mov    edx,0x1a5
  40649c:	call   0x4039c0
  4064a1:	lea    r8,[rip+0x3e5e1]        # 0x444a89
  4064a8:	lea    rcx,[rip+0x3e3c1]        # 0x444870
  4064af:	mov    edx,0x1b0
  4064b4:	call   0x4039c0
  4064b9:	lea    r8,[rip+0x3e5c9]        # 0x444a89
  4064c0:	lea    rcx,[rip+0x3e3a9]        # 0x444870
  4064c7:	mov    edx,0x1af
  4064cc:	call   0x4039c0
  4064d1:	lea    r8,[rip+0x3e5b1]        # 0x444a89
  4064d8:	lea    rcx,[rip+0x3e391]        # 0x444870
  4064df:	mov    edx,0x1ae
  4064e4:	call   0x4039c0
  4064e9:	lea    r8,[rip+0x3e599]        # 0x444a89
  4064f0:	lea    rcx,[rip+0x3e379]        # 0x444870
  4064f7:	mov    edx,0x253
  4064fc:	call   0x4039c0
  406501:	lea    r8,[rip+0x3e581]        # 0x444a89
  406508:	lea    rcx,[rip+0x3e361]        # 0x444870
  40650f:	mov    edx,0x201
  406514:	call   0x4039c0
  406519:	lea    r8,[rip+0x3e569]        # 0x444a89
  406520:	lea    rcx,[rip+0x3e349]        # 0x444870
  406527:	mov    edx,0x1fa
  40652c:	call   0x4039c0
  406531:	lea    r8,[rip+0x3e551]        # 0x444a89
  406538:	lea    rcx,[rip+0x3e331]        # 0x444870
  40653f:	mov    edx,0x1e5
  406544:	call   0x4039c0
  406549:	lea    r8,[rip+0x3e539]        # 0x444a89
  406550:	lea    rcx,[rip+0x3e319]        # 0x444870
  406557:	mov    edx,0x17f
  40655c:	call   0x4039c0
  406561:	lea    r8,[rip+0x3e521]        # 0x444a89
  406568:	lea    rcx,[rip+0x3e301]        # 0x444870
  40656f:	mov    edx,0x183
  406574:	call   0x4039c0
  406579:	lea    r8,[rip+0x3e509]        # 0x444a89
  406580:	lea    rcx,[rip+0x3e2e9]        # 0x444870
  406587:	mov    edx,0x1ea
  40658c:	call   0x4039c0
  406591:	lea    r8,[rip+0x3e4f1]        # 0x444a89
  406598:	lea    rcx,[rip+0x3e2d1]        # 0x444870
  40659f:	mov    edx,0x1f4
  4065a4:	call   0x4039c0
  4065a9:	lea    r8,[rip+0x3e4d9]        # 0x444a89
  4065b0:	lea    rcx,[rip+0x3e2b9]        # 0x444870
  4065b7:	mov    edx,0x1b7
  4065bc:	call   0x4039c0
  4065c1:	lea    r8,[rip+0x3e4c1]        # 0x444a89
  4065c8:	lea    rcx,[rip+0x3e2a1]        # 0x444870
  4065cf:	mov    edx,0x269
  4065d4:	call   0x4039c0
  4065d9:	lea    r8,[rip+0x3e4a9]        # 0x444a89
  4065e0:	lea    rcx,[rip+0x3e289]        # 0x444870
  4065e7:	mov    edx,0x266
  4065ec:	call   0x4039c0
  4065f1:	lea    r8,[rip+0x3e491]        # 0x444a89
  4065f8:	lea    rcx,[rip+0x3e271]        # 0x444870
  4065ff:	mov    edx,0x175
  406604:	call   0x4039c0
  406609:	lea    r8,[rip+0x3e479]        # 0x444a89
  406610:	lea    rcx,[rip+0x3e259]        # 0x444870
  406617:	mov    edx,0x189
  40661c:	call   0x4039c0
  406621:	lea    r8,[rip+0x3e461]        # 0x444a89
  406628:	lea    rcx,[rip+0x3e241]        # 0x444870
  40662f:	mov    edx,0x1bb
  406634:	call   0x4039c0
  406639:	lea    r8,[rip+0x3e449]        # 0x444a89
  406640:	lea    rcx,[rip+0x3e229]        # 0x444870
  406647:	mov    edx,0x24f
  40664c:	call   0x4039c0
  406651:	nop
  406652:	nop    DWORD PTR [rax+0x0]
  406656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406660:	push   r12
  406662:	push   rbp
  406663:	push   rdi
  406664:	push   rsi
  406665:	push   rbx
  406666:	sub    rsp,0x20
  40666a:	mov    rbp,QWORD PTR [rcx+0x8]
  40666e:	mov    rsi,rcx
  406671:	cmp    QWORD PTR [rbp+0xb0],rbp
  406678:	mov    r12,QWORD PTR [rbp+0xb8]
  40667f:	lea    rdi,[r12+0x8]
  406684:	jne    0x40670f
  40668a:	mov    eax,DWORD PTR [rbp+0xc8]
  406690:	test   eax,eax
  406692:	jne    0x4066f7
  406694:	mov    rdx,QWORD PTR [r12+0x8]
  406699:	xor    ebx,ebx
  40669b:	test   rdx,rdx
  40669e:	je     0x4066b7
  4066a0:	mov    rcx,rsi
  4066a3:	call   0x405310
  4066a8:	lea    eax,[rbx+0x1]
  4066ab:	mov    rdx,QWORD PTR [rdi+rax*8]
  4066af:	mov    rbx,rax
  4066b2:	test   rdx,rdx
  4066b5:	jne    0x4066a0
  4066b7:	cmp    r12,QWORD PTR [rbp+0x60]
  4066bb:	mov    rax,QWORD PTR [r12]
  4066bf:	mov    QWORD PTR [rbp+0xb8],rax
  4066c6:	jbe    0x4066ce
  4066c8:	cmp    r12,QWORD PTR [rbp+0x78]
  4066cc:	jb     0x4066e4
  4066ce:	lea    rcx,[rbp+0x58]
  4066d2:	mov    rdx,r12
  4066d5:	add    rsp,0x20
  4066d9:	pop    rbx
  4066da:	pop    rsi
  4066db:	pop    rdi
  4066dc:	pop    rbp
  4066dd:	pop    r12
  4066df:	jmp    0x438480
  4066e4:	mov    QWORD PTR [rbp+0x68],r12
  4066e8:	mov    QWORD PTR [rbp+0x70],r12
  4066ec:	add    rsp,0x20
  4066f0:	pop    rbx
  4066f1:	pop    rsi
  4066f2:	pop    rdi
  4066f3:	pop    rbp
  4066f4:	pop    r12
  4066f6:	ret    
  4066f7:	lea    r8,[rip+0x3e372]        # 0x444a70
  4066fe:	lea    rcx,[rip+0x3e16b]        # 0x444870
  406705:	mov    edx,0x28d
  40670a:	call   0x4039c0
  40670f:	lea    r8,[rip+0x3e35a]        # 0x444a70
  406716:	lea    rcx,[rip+0x3e153]        # 0x444870
  40671d:	mov    edx,0x28c
  406722:	call   0x4039c0
  406727:	nop
  406728:	nop    DWORD PTR [rax+rax*1+0x0]
  406730:	push   rdi
  406731:	push   rsi
  406732:	push   rbx
  406733:	sub    rsp,0x20
  406737:	mov    edi,DWORD PTR [rcx+0x24]
  40673a:	mov    esi,DWORD PTR [rcx+0x28]
  40673d:	mov    rbx,rcx
  406740:	mov    DWORD PTR [rcx+0x28],0x0
  406747:	mov    DWORD PTR [rcx+0x24],0x1
  40674e:	call   0x405460
  406753:	mov    rcx,rbx
  406756:	call   0x406660
  40675b:	mov    DWORD PTR [rbx+0x24],edi
  40675e:	mov    DWORD PTR [rbx+0x28],esi
  406761:	add    rsp,0x20
  406765:	pop    rbx
  406766:	pop    rsi
  406767:	pop    rdi
  406768:	ret    
  406769:	nop    DWORD PTR [rax+0x0]
  406770:	push   rsi
  406771:	push   rbx
  406772:	sub    rsp,0x68
  406776:	lea    rax,[rsp+0x90]
  40677e:	mov    rsi,rdx
  406781:	mov    rbx,rcx
  406784:	mov    QWORD PTR [rsp+0x90],r8
  40678c:	mov    QWORD PTR [rsp+0x98],r9
  406794:	mov    QWORD PTR [rsp+0x28],rax
  406799:	call   QWORD PTR [rip+0x54ebd]        # 0x45b65c
  40679f:	mov    eax,DWORD PTR [rax]
  4067a1:	lea    rdx,[rsp+0x30]
  4067a6:	mov    rcx,rbx
  4067a9:	mov    QWORD PTR [rsp+0x30],rsi
  4067ae:	mov    QWORD PTR [rsp+0x48],0x0
  4067b7:	mov    DWORD PTR [rsp+0x40],eax
  4067bb:	lea    rax,[rsp+0x28]
  4067c0:	mov    QWORD PTR [rsp+0x38],rax
  4067c5:	call   0x406730
  4067ca:	nop
  4067cb:	add    rsp,0x68
  4067cf:	pop    rbx
  4067d0:	pop    rsi
  4067d1:	ret    
  4067d2:	nop    DWORD PTR [rax+0x0]
  4067d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067e0:	push   rsi
  4067e1:	push   rbx
  4067e2:	sub    rsp,0x68
  4067e6:	lea    rax,[rsp+0x90]
  4067ee:	mov    rbx,rcx
  4067f1:	mov    QWORD PTR [rsp+0x90],r8
  4067f9:	mov    QWORD PTR [rsp+0x98],r9
  406801:	mov    rsi,rdx
  406804:	mov    QWORD PTR [rsp+0x28],rax
  406809:	call   QWORD PTR [rip+0x54e4d]        # 0x45b65c
  40680f:	mov    eax,DWORD PTR [rax]
  406811:	lea    rdx,[rsp+0x30]
  406816:	mov    rcx,rbx
  406819:	mov    QWORD PTR [rsp+0x30],rsi
  40681e:	mov    QWORD PTR [rsp+0x48],0x0
  406827:	mov    DWORD PTR [rsp+0x40],eax
  40682b:	lea    rax,[rsp+0x28]
  406830:	mov    QWORD PTR [rsp+0x38],rax
  406835:	call   0x405460
  40683a:	mov    rcx,rbx
  40683d:	call   0x406660
  406842:	nop
  406843:	add    rsp,0x68
  406847:	pop    rbx
  406848:	pop    rsi
  406849:	ret    
  40684a:	nop    WORD PTR [rax+rax*1+0x0]
  406850:	push   rbx
  406851:	sub    rsp,0x20
  406855:	mov    eax,DWORD PTR [rcx+0x18]
  406858:	test   eax,eax
  40685a:	je     0x406870
  40685c:	mov    rbx,rcx
  40685f:	mov    edx,0x20
  406864:	call   0x4050e0
  406869:	mov    DWORD PTR [rbx+0x18],0x0
  406870:	add    rsp,0x20
  406874:	pop    rbx
  406875:	ret    
  406876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406880:	push   rbx
  406881:	sub    rsp,0x20
  406885:	mov    rbx,rcx
  406888:	call   0x405080
  40688d:	mov    rcx,rbx
  406890:	call   0x404f20
  406895:	mov    BYTE PTR [rbx+0x39],0x0
  406899:	add    rsp,0x20
  40689d:	pop    rbx
  40689e:	ret    
  40689f:	nop
  4068a0:	push   rdi
  4068a1:	push   rsi
  4068a2:	push   rbx
  4068a3:	sub    rsp,0x20
  4068a7:	add    DWORD PTR [rcx+0x20],edx
  4068aa:	xor    ebx,ebx
  4068ac:	mov    rsi,rcx
  4068af:	call   0x405080
  4068b4:	mov    edi,DWORD PTR [rsi+0x20]
  4068b7:	test   edi,edi
  4068b9:	jle    0x4068d4
  4068bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4068c0:	mov    edx,0x20
  4068c5:	mov    rcx,rsi
  4068c8:	add    ebx,0x1
  4068cb:	call   0x4050e0
  4068d0:	cmp    ebx,edi
  4068d2:	jne    0x4068c0
  4068d4:	mov    BYTE PTR [rsi+0x39],0x0
  4068d8:	add    rsp,0x20
  4068dc:	pop    rbx
  4068dd:	pop    rsi
  4068de:	pop    rdi
  4068df:	ret    
  4068e0:	push   rbx
  4068e1:	sub    rsp,0x20
  4068e5:	mov    rbx,rcx
  4068e8:	movsx  edx,dl
  4068eb:	call   0x4050e0
  4068f0:	mov    edx,0x20
  4068f5:	mov    rcx,rbx
  4068f8:	add    rsp,0x20
  4068fc:	pop    rbx
  4068fd:	jmp    0x4050e0
  406902:	nop    DWORD PTR [rax+0x0]
  406906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406910:	push   r15
  406912:	push   r14
  406914:	push   r13
  406916:	push   r12
  406918:	push   rbp
  406919:	push   rdi
  40691a:	push   rsi
  40691b:	push   rbx
  40691c:	sub    rsp,0x38
  406920:	mov    rdi,rcx
  406923:	call   0x43f028
  406928:	test   rax,rax
  40692b:	mov    rsi,rax
  40692e:	je     0x4069f2
  406934:	xor    ebx,ebx
  406936:	mov    ebp,0x1
  40693b:	lea    r12,[rsp+0x2c]
  406940:	xor    r13d,r13d
  406943:	jmp    0x406966
  406945:	mov    eax,DWORD PTR [rsp+0x2c]
  406949:	cmp    eax,0x1f
  40694c:	jbe    0x406980
  40694e:	sub    eax,0x7f
  406951:	cmp    eax,0x20
  406954:	jbe    0x406980
  406956:	cmp    rdx,0x2
  40695a:	cmovae ebp,r13d
  40695e:	add    rbx,rdx
  406961:	cmp    rsi,rbx
  406964:	jbe    0x4069e1
  406966:	mov    rdx,rsi
  406969:	lea    rcx,[rdi+rbx*1]
  40696d:	mov    r8,r12
  406970:	sub    rdx,rbx
  406973:	call   0x404a90
  406978:	movsxd rdx,eax
  40697b:	test   rdx,rdx
  40697e:	jne    0x406945
  406980:	lea    rcx,[rsi*4+0x1]
  406988:	add    rsi,rdi
  40698b:	call   QWORD PTR [rip+0x3b777]        # 0x442108
  406991:	mov    rbp,rax
  406994:	mov    rbx,rax
  406997:	jmp    0x4069b0
  406999:	nop    DWORD PTR [rax+0x0]
  4069a0:	add    rdi,0x1
  4069a4:	mov    BYTE PTR [rbx],r8b
  4069a7:	add    rbx,0x1
  4069ab:	cmp    rdi,rsi
  4069ae:	je     0x4069d9
  4069b0:	movzx  r8d,BYTE PTR [rdi]
  4069b4:	lea    edx,[r8-0x20]
  4069b8:	cmp    dl,0x5e
  4069bb:	jbe    0x4069a0
  4069bd:	lea    rdx,[rip+0x3e074]        # 0x444a38
  4069c4:	mov    rcx,rbx
  4069c7:	add    rdi,0x1
  4069cb:	add    rbx,0x4
  4069cf:	call   0x43f490
  4069d4:	cmp    rdi,rsi
  4069d7:	jne    0x4069b0
  4069d9:	mov    BYTE PTR [rbx],0x0
  4069dc:	mov    rax,rbp
  4069df:	jmp    0x4069f5
  4069e1:	test   bpl,bpl
  4069e4:	jne    0x4069f2
  4069e6:	mov    rax,QWORD PTR [rip+0x4acb3]        # 0x4516a0
  4069ed:	cmp    BYTE PTR [rax],0x0
  4069f0:	je     0x406a10
  4069f2:	mov    rax,rdi
  4069f5:	add    rsp,0x38
  4069f9:	pop    rbx
  4069fa:	pop    rsi
  4069fb:	pop    rdi
  4069fc:	pop    rbp
  4069fd:	pop    r12
  4069ff:	pop    r13
  406a01:	pop    r14
  406a03:	pop    r15
  406a05:	ret    
  406a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a10:	lea    rax,[rsi+rsi*4]
  406a14:	xor    ebx,ebx
  406a16:	lea    rcx,[rax+rax*1+0x1]
  406a1b:	call   QWORD PTR [rip+0x3b6e7]        # 0x442108
  406a21:	mov    r14,rax
  406a24:	mov    r13,rax
  406a27:	jmp    0x406a44
  406a29:	nop    DWORD PTR [rax+0x0]
  406a30:	movzx  eax,BYTE PTR [r15]
  406a34:	add    rbx,rbp
  406a37:	add    r13,0x1
  406a3b:	mov    BYTE PTR [r13-0x1],al
  406a3f:	cmp    rsi,rbx
  406a42:	jbe    0x406a82
  406a44:	lea    r15,[rdi+rbx*1]
  406a48:	mov    rdx,rsi
  406a4b:	mov    r8,r12
  406a4e:	sub    rdx,rbx
  406a51:	mov    rcx,r15
  406a54:	call   0x404a90
  406a59:	movsxd rbp,eax
  406a5c:	cmp    rbp,0x1
  406a60:	je     0x406a30
  406a62:	mov    r8d,DWORD PTR [rsp+0x2c]
  406a67:	lea    rdx,[rip+0x3dfd0]        # 0x444a3e
  406a6e:	mov    rcx,r13
  406a71:	add    rbx,rbp
  406a74:	add    r13,0xa
  406a78:	call   0x43f490
  406a7d:	cmp    rsi,rbx
  406a80:	ja     0x406a44
  406a82:	mov    BYTE PTR [r13+0x0],0x0
  406a87:	mov    rax,r14
  406a8a:	jmp    0x4069f5
  406a8f:	nop
  406a90:	cmp    r8d,0x1
  406a94:	mov    rax,rdx
  406a97:	cmove  rax,rcx
  406a9b:	ret    
  406a9c:	nop    DWORD PTR [rax+0x0]
  406aa0:	push   rbx
  406aa1:	sub    rsp,0x20
  406aa5:	call   0x43f028
  406aaa:	lea    rcx,[rax+0x1]
  406aae:	mov    rbx,rax
  406ab1:	call   0x4385d0
  406ab6:	mov    r8,rbx
  406ab9:	mov    edx,0x20
  406abe:	mov    rcx,rax
  406ac1:	call   0x43f098
  406ac6:	mov    BYTE PTR [rax+rbx*1],0x0
  406aca:	add    rsp,0x20
  406ace:	pop    rbx
  406acf:	ret    
  406ad0:	push   rsi
  406ad1:	push   rbx
  406ad2:	sub    rsp,0x28
  406ad6:	mov    rax,QWORD PTR [rcx+0x28]
  406ada:	test   rax,rax
  406add:	je     0x406b00
  406adf:	cmp    rax,QWORD PTR [rcx+0x20]
  406ae3:	je     0x406b00
  406ae5:	sub    rax,0x1
  406ae9:	cmp    QWORD PTR [rcx+0x30],rax
  406aed:	jae    0x406b00
  406aef:	xor    eax,eax
  406af1:	add    rsp,0x28
  406af5:	pop    rbx
  406af6:	pop    rsi
  406af7:	ret    
  406af8:	nop    DWORD PTR [rax+rax*1+0x0]
  406b00:	mov    rbx,rcx
  406b03:	mov    rcx,QWORD PTR [rcx+0x10]
  406b07:	call   0x43f148
  406b0c:	test   eax,eax
  406b0e:	jne    0x406aef
  406b10:	mov    rcx,QWORD PTR [rbx+0x10]
  406b14:	call   0x43f140
  406b19:	test   eax,eax
  406b1b:	jne    0x406aef
  406b1d:	mov    r8,QWORD PTR [rbx+0x20]
  406b21:	mov    rdx,QWORD PTR [rbx+0x28]
  406b25:	cmp    r8,rdx
  406b28:	je     0x406b60
  406b2a:	mov    rax,QWORD PTR [rbx+0x18]
  406b2e:	mov    r9,QWORD PTR [rbx+0x10]
  406b32:	lea    rcx,[rax+rdx*1]
  406b36:	sub    r8,rdx
  406b39:	mov    edx,0x1
  406b3e:	call   0x43f108
  406b43:	mov    rcx,QWORD PTR [rbx+0x10]
  406b47:	mov    rsi,rax
  406b4a:	call   0x43f140
  406b4f:	test   eax,eax
  406b51:	jne    0x406aef
  406b53:	add    QWORD PTR [rbx+0x28],rsi
  406b57:	test   rsi,rsi
  406b5a:	setne  al
  406b5d:	jmp    0x406af1
  406b5f:	nop
  406b60:	test   r8,r8
  406b63:	jne    0x406b90
  406b65:	mov    edx,0x1001
  406b6a:	mov    esi,0x1000
  406b6f:	mov    rcx,QWORD PTR [rbx+0x18]
  406b73:	call   0x438650
  406b78:	mov    QWORD PTR [rbx+0x20],rsi
  406b7c:	mov    QWORD PTR [rbx+0x18],rax
  406b80:	mov    r8,rsi
  406b83:	mov    rdx,QWORD PTR [rbx+0x28]
  406b87:	jmp    0x406b2e
  406b89:	nop    DWORD PTR [rax+0x0]
  406b90:	lea    rsi,[r8+r8*1]
  406b94:	lea    rdx,[rsi+0x1]
  406b98:	jmp    0x406b6f
  406b9a:	nop    WORD PTR [rax+rax*1+0x0]
  406ba0:	push   rbp
  406ba1:	push   rdi
  406ba2:	push   rsi
  406ba3:	push   rbx
  406ba4:	sub    rsp,0x48
  406ba8:	xor    edi,edi
  406baa:	mov    eax,edx
  406bac:	mov    rsi,rcx
  406baf:	mov    ebx,edx
  406bb1:	and    eax,0x7fffffff
  406bb6:	mov    ebp,r8d
  406bb9:	cmp    eax,edx
  406bbb:	je     0x406bdc
  406bbd:	mov    rcx,QWORD PTR [rip+0x5270c]        # 0x4592d0
  406bc4:	call   0x408310
  406bc9:	mov    rcx,QWORD PTR [rip+0x52700]        # 0x4592d0
  406bd0:	mov    edx,ebx
  406bd2:	mov    rdi,rax
  406bd5:	call   0x408330
  406bda:	mov    ebx,eax
  406bdc:	cmp    ebx,0x1
  406bdf:	mov    QWORD PTR [rsi],0x0
  406be6:	mov    QWORD PTR [rsi+0x8],0x0
  406bee:	mov    QWORD PTR [rsi+0x10],0x0
  406bf6:	mov    QWORD PTR [rsi+0x18],0x0
  406bfe:	jbe    0x406c50
  406c00:	xor    r8d,r8d
  406c03:	test   bpl,bpl
  406c06:	lea    r9,[rsp+0x38]
  406c0b:	je     0x406c75
  406c0d:	mov    rcx,QWORD PTR [rip+0x526bc]        # 0x4592d0
  406c14:	mov    edx,ebx
  406c16:	call   0x408dc0
  406c1b:	mov    r8,QWORD PTR [rsp+0x38]
  406c20:	mov    rdx,QWORD PTR [rip+0x526a9]        # 0x4592d0
  406c27:	mov    ebx,eax
  406c29:	mov    r9d,eax
  406c2c:	mov    rcx,rsi
  406c2f:	call   0x409210
  406c34:	cmp    ebx,0x1
  406c37:	mov    QWORD PTR [rsi+0x10],rdi
  406c3b:	jbe    0x406c54
  406c3d:	mov    rax,rsi
  406c40:	add    rsp,0x48
  406c44:	pop    rbx
  406c45:	pop    rsi
  406c46:	pop    rdi
  406c47:	pop    rbp
  406c48:	ret    
  406c49:	nop    DWORD PTR [rax+0x0]
  406c50:	mov    QWORD PTR [rsi+0x10],rdi
  406c54:	lea    rax,[rip+0x3de55]        # 0x444ab0
  406c5b:	test   ebx,ebx
  406c5d:	mov    edx,0x0
  406c62:	cmove  rax,rdx
  406c66:	mov    QWORD PTR [rsi],rax
  406c69:	mov    rax,rsi
  406c6c:	add    rsp,0x48
  406c70:	pop    rbx
  406c71:	pop    rsi
  406c72:	pop    rdi
  406c73:	pop    rbp
  406c74:	ret    
  406c75:	mov    rcx,QWORD PTR [rip+0x52654]        # 0x4592d0
  406c7c:	mov    r8,r9
  406c7f:	mov    edx,ebx
  406c81:	mov    QWORD PTR [rsp+0x28],r9
  406c86:	call   0x409120
  406c8b:	mov    r8d,0x1
  406c91:	mov    ebx,eax
  406c93:	mov    r9,QWORD PTR [rsp+0x28]
  406c98:	jmp    0x406c0d
  406c9d:	nop    DWORD PTR [rax]
  406ca0:	sub    rsp,0x28
  406ca4:	mov    ecx,0x508
  406ca9:	call   0x438790
  406cae:	lea    rcx,[rax+0x8]
  406cb2:	mov    QWORD PTR [rax],0x10
  406cb9:	add    rax,0x508
  406cbf:	mov    rdx,rcx
  406cc2:	mov    DWORD PTR [rdx],0x0
  406cc8:	mov    QWORD PTR [rdx+0x8],0x0
  406cd0:	add    rdx,0x50
  406cd4:	mov    QWORD PTR [rdx-0x40],0x0
  406cdc:	mov    QWORD PTR [rdx-0x38],0x0
  406ce4:	mov    QWORD PTR [rdx-0x30],0x0
  406cec:	mov    QWORD PTR [rdx-0x28],0x0
  406cf4:	mov    QWORD PTR [rdx-0x20],0x0
  406cfc:	mov    QWORD PTR [rdx-0x18],0x0
  406d04:	mov    QWORD PTR [rdx-0x10],0x0
  406d0c:	mov    QWORD PTR [rdx-0x8],0x0
  406d14:	cmp    rdx,rax
  406d17:	jne    0x406cc2
  406d19:	mov    QWORD PTR [rip+0x525d0],rcx        # 0x4592f0
  406d20:	add    rsp,0x28
  406d24:	ret    
  406d25:	nop
  406d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d30:	push   r15
  406d32:	push   r14
  406d34:	push   r13
  406d36:	push   r12
  406d38:	push   rbp
  406d39:	push   rdi
  406d3a:	push   rsi
  406d3b:	push   rbx
  406d3c:	sub    rsp,0x48
  406d40:	mov    rbx,rcx
  406d43:	mov    rbp,r8
  406d46:	mov    r12,rdx
  406d49:	call   0x406ad0
  406d4e:	mov    rsi,QWORD PTR [rbx+0x30]
  406d52:	mov    r8,QWORD PTR [rbx+0x28]
  406d56:	sub    r8,rsi
  406d59:	je     0x406e70
  406d5f:	add    rsi,QWORD PTR [rbx+0x18]
  406d63:	mov    edx,0xa
  406d68:	mov    rcx,rsi
  406d6b:	call   0x43f0b8
  406d70:	test   rax,rax
  406d73:	mov    rdi,rax
  406d76:	lea    r13,[rax+0x1]
  406d7a:	je     0x406e08
  406d80:	mov    rcx,QWORD PTR [rbx+0x10]
  406d84:	call   0x43f140
  406d89:	test   eax,eax
  406d8b:	jne    0x406e50
  406d91:	mov    r15,rdi
  406d94:	mov    r14,QWORD PTR [rbx+0x30]
  406d98:	sub    r15,rsi
  406d9b:	cmp    r14,QWORD PTR [rbx+0x28]
  406d9f:	jae    0x406da5
  406da1:	mov    QWORD PTR [r12],rsi
  406da5:	mov    rax,QWORD PTR [rbx+0x38]
  406da9:	mov    rcx,QWORD PTR [rbx+0x40]
  406dad:	lea    rsi,[rax+0x1]
  406db1:	cmp    rsi,rcx
  406db4:	mov    QWORD PTR [rbx+0x38],rsi
  406db8:	jbe    0x406e74
  406dbe:	test   r13,r13
  406dc1:	je     0x4070b0
  406dc7:	sub    r13,QWORD PTR [rbx+0x18]
  406dcb:	mov    QWORD PTR [rbx+0x30],r13
  406dcf:	mov    QWORD PTR [rbp+0x0],r15
  406dd3:	mov    eax,0x1
  406dd8:	jmp    0x406e55
  406dda:	nop    WORD PTR [rax+rax*1+0x0]
  406de0:	mov    rax,QWORD PTR [rbx+0x30]
  406de4:	mov    r8,QWORD PTR [rbx+0x28]
  406de8:	mov    edx,0xa
  406ded:	mov    rsi,rax
  406df0:	add    rsi,QWORD PTR [rbx+0x18]
  406df4:	sub    r8,rax
  406df7:	mov    rcx,rsi
  406dfa:	call   0x43f0b8
  406dff:	test   rax,rax
  406e02:	jne    0x4070c0
  406e08:	mov    rcx,rbx
  406e0b:	call   0x406ad0
  406e10:	test   al,al
  406e12:	jne    0x406de0
  406e14:	mov    rcx,QWORD PTR [rbx+0x10]
  406e18:	mov    rdi,QWORD PTR [rbx+0x28]
  406e1c:	add    rdi,QWORD PTR [rbx+0x18]
  406e20:	call   0x43f140
  406e25:	test   eax,eax
  406e27:	jne    0x406e50
  406e29:	test   rdi,rdi
  406e2c:	je     0x4071f6
  406e32:	mov    r15,rdi
  406e35:	xor    r13d,r13d
  406e38:	mov    r14,QWORD PTR [rbx+0x30]
  406e3c:	sub    r15,rsi
  406e3f:	cmp    r14,QWORD PTR [rbx+0x28]
  406e43:	jae    0x406da5
  406e49:	jmp    0x406da1
  406e4e:	xchg   ax,ax
  406e50:	mov    eax,0x1
  406e55:	add    rsp,0x48
  406e59:	pop    rbx
  406e5a:	pop    rsi
  406e5b:	pop    rdi
  406e5c:	pop    rbp
  406e5d:	pop    r12
  406e5f:	pop    r13
  406e61:	pop    r14
  406e63:	pop    r15
  406e65:	ret    
  406e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e70:	xor    eax,eax
  406e72:	jmp    0x406e55
  406e74:	mov    r12,QWORD PTR [rbx+0x48]
  406e78:	test   r12,r12
  406e7b:	je     0x4070d0
  406e81:	cmp    DWORD PTR [r12+0x4],0x63
  406e87:	ja     0x406dbe
  406e8d:	cmp    rcx,0x64
  406e91:	ja     0x406fb0
  406e97:	mov    eax,DWORD PTR [r12+0x4]
  406e9c:	cmp    rsi,rax
  406e9f:	jbe    0x406dbe
  406ea5:	mov    r9d,DWORD PTR [r12]
  406ea9:	mov    edx,DWORD PTR [r12+0x4]
  406eae:	sub    rdi,QWORD PTR [rbx+0x18]
  406eb2:	and    r9d,0x7fffffff
  406eb9:	cmp    r9d,edx
  406ebc:	jne    0x406f86
  406ec2:	cmp    BYTE PTR [r12+0x3],0x0
  406ec8:	jns    0x407110
  406ece:	lea    eax,[r9+0x1]
  406ed2:	mov    QWORD PTR [rbx+0x48],0x0
  406eda:	mov    r10d,0x1
  406ee0:	cmp    eax,0x4
  406ee3:	mov    r8d,0x4
  406ee9:	mov    BYTE PTR [rsp+0x38],r10b
  406eee:	cmovae r8d,eax
  406ef2:	xor    ecx,ecx
  406ef4:	mov    DWORD PTR [rsp+0x30],r9d
  406ef9:	mov    eax,r8d
  406efc:	mov    DWORD PTR [rsp+0x28],r8d
  406f01:	lea    rax,[rax+rax*2]
  406f05:	lea    rdx,[rax*8+0x8]
  406f0d:	call   0x438650
  406f12:	mov    r8d,DWORD PTR [rsp+0x28]
  406f17:	mov    edx,DWORD PTR [rax]
  406f19:	movzx  r10d,BYTE PTR [rsp+0x38]
  406f1f:	mov    QWORD PTR [rbx+0x48],rax
  406f23:	mov    r9d,DWORD PTR [rsp+0x30]
  406f28:	mov    DWORD PTR [rax+0x4],0x0
  406f2f:	and    r8d,0x7fffffff
  406f36:	and    edx,0x80000000
  406f3c:	or     r8d,edx
  406f3f:	mov    DWORD PTR [rax],r8d
  406f42:	shr    r8d,0x18
  406f46:	and    r8d,0x7f
  406f4a:	test   r10b,r10b
  406f4d:	mov    BYTE PTR [rax+0x3],r8b
  406f51:	je     0x40720e
  406f57:	mov    edx,r9d
  406f5a:	lea    rcx,[rax+0x8]
  406f5e:	mov    DWORD PTR [rsp+0x28],r9d
  406f63:	lea    r8,[rdx+rdx*2]
  406f67:	lea    rdx,[r12+0x8]
  406f6c:	shl    r8,0x3
  406f70:	call   0x43f0a8
  406f75:	mov    r9d,DWORD PTR [rsp+0x28]
  406f7a:	mov    r12,QWORD PTR [rbx+0x48]
  406f7e:	mov    edx,r9d
  406f81:	mov    DWORD PTR [r12+0x4],r9d
  406f86:	lea    eax,[rdx+0x1]
  406f89:	mov    DWORD PTR [r12+0x4],eax
  406f8e:	mov    eax,edx
  406f90:	lea    rax,[rax+rax*2]
  406f94:	lea    rdx,[r12+rax*8]
  406f98:	mov    QWORD PTR [rdx+0x8],rsi
  406f9c:	mov    QWORD PTR [rdx+0x10],r14
  406fa0:	mov    QWORD PTR [rdx+0x18],rdi
  406fa4:	jmp    0x406dbe
  406fa9:	nop    DWORD PTR [rax+0x0]
  406fb0:	mov    r8d,DWORD PTR [r12+0x4]
  406fb5:	test   r8d,r8d
  406fb8:	je     0x406fd7
  406fba:	lea    rax,[rsi+rsi*4]
  406fbe:	xor    edx,edx
  406fc0:	lea    rax,[rax+rax*4]
  406fc4:	shl    rax,0x2
  406fc8:	div    rcx
  406fcb:	mov    edx,r8d
  406fce:	cmp    rax,rdx
  406fd1:	jb     0x406dbe
  406fd7:	sub    rdi,QWORD PTR [rbx+0x18]
  406fdb:	mov    r9,rdi
  406fde:	mov    edi,DWORD PTR [r12]
  406fe2:	and    edi,0x7fffffff
  406fe8:	cmp    r8d,edi
  406feb:	jne    0x407087
  406ff1:	cmp    BYTE PTR [r12+0x3],0x0
  406ff7:	jns    0x407181
  406ffd:	lea    eax,[rdi+0x1]
  407000:	mov    QWORD PTR [rbx+0x48],0x0
  407008:	mov    r10d,0x1
  40700e:	cmp    eax,0x4
  407011:	mov    edx,0x4
  407016:	cmovae edx,eax
  407019:	xor    ecx,ecx
  40701b:	xor    r8d,r8d
  40701e:	mov    eax,edx
  407020:	mov    DWORD PTR [rsp+0x3c],edx
  407024:	lea    rax,[rax+rax*2]
  407028:	lea    rdx,[rax*8+0x8]
  407030:	mov    DWORD PTR [rsp+0x38],r8d
  407035:	mov    QWORD PTR [rsp+0x30],r9
  40703a:	mov    BYTE PTR [rsp+0x28],r10b
  40703f:	call   0x438650
  407044:	mov    edx,DWORD PTR [rsp+0x3c]
  407048:	mov    ecx,DWORD PTR [rax]
  40704a:	movzx  r10d,BYTE PTR [rsp+0x28]
  407050:	mov    r8d,DWORD PTR [rsp+0x38]
  407055:	mov    QWORD PTR [rbx+0x48],rax
  407059:	mov    r9,QWORD PTR [rsp+0x30]
  40705e:	and    edx,0x7fffffff
  407064:	and    ecx,0x80000000
  40706a:	or     edx,ecx
  40706c:	mov    DWORD PTR [rax],edx
  40706e:	shr    edx,0x18
  407071:	mov    DWORD PTR [rax+0x4],r8d
  407075:	and    edx,0x7f
  407078:	test   r10b,r10b
  40707b:	mov    BYTE PTR [rax+0x3],dl
  40707e:	jne    0x4071c3
  407084:	mov    r12,rax
  407087:	lea    eax,[r8+0x1]
  40708b:	mov    DWORD PTR [r12+0x4],eax
  407090:	lea    rax,[r8+r8*2]
  407094:	lea    rdx,[r12+rax*8]
  407098:	mov    QWORD PTR [rdx+0x8],rsi
  40709c:	mov    QWORD PTR [rdx+0x10],r14
  4070a0:	mov    QWORD PTR [rdx+0x18],r9
  4070a4:	jmp    0x406dbe
  4070a9:	nop    DWORD PTR [rax+0x0]
  4070b0:	mov    rax,QWORD PTR [rbx+0x28]
  4070b4:	mov    QWORD PTR [rbx+0x30],rax
  4070b8:	jmp    0x406dcf
  4070bd:	nop    DWORD PTR [rax]
  4070c0:	mov    rdi,rax
  4070c3:	lea    r13,[rax+0x1]
  4070c7:	jmp    0x406d80
  4070cc:	nop    DWORD PTR [rax+0x0]
  4070d0:	cmp    rcx,0x64
  4070d4:	jbe    0x4070f0
  4070d6:	sub    rdi,QWORD PTR [rbx+0x18]
  4070da:	mov    eax,0x1
  4070df:	xor    r10d,r10d
  4070e2:	mov    r9,rdi
  4070e5:	xor    edi,edi
  4070e7:	jmp    0x40700e
  4070ec:	nop    DWORD PTR [rax+0x0]
  4070f0:	test   rsi,rsi
  4070f3:	je     0x406dbe
  4070f9:	sub    rdi,QWORD PTR [rbx+0x18]
  4070fd:	xor    r10d,r10d
  407100:	xor    r9d,r9d
  407103:	mov    eax,0x1
  407108:	jmp    0x406ee0
  40710d:	nop    DWORD PTR [rax]
  407110:	lea    edx,[r9+0x1]
  407114:	mov    ecx,r9d
  407117:	call   0x407f70
  40711c:	mov    rcx,QWORD PTR [rbx+0x48]
  407120:	mov    eax,eax
  407122:	mov    r12,rax
  407125:	lea    rax,[rax+rax*2]
  407129:	test   rcx,rcx
  40712c:	lea    rdx,[rax*8+0x8]
  407134:	je     0x407218
  40713a:	mov    r8d,DWORD PTR [rcx+0x4]
  40713e:	mov    DWORD PTR [rsp+0x28],r8d
  407143:	call   0x438650
  407148:	mov    edx,r12d
  40714b:	mov    r12d,DWORD PTR [rax]
  40714e:	mov    r8d,DWORD PTR [rsp+0x28]
  407153:	and    edx,0x7fffffff
  407159:	mov    QWORD PTR [rbx+0x48],rax
  40715d:	and    r12d,0x80000000
  407164:	mov    DWORD PTR [rax+0x4],r8d
  407168:	or     edx,r12d
  40716b:	mov    r12,rax
  40716e:	mov    DWORD PTR [rax],edx
  407170:	shr    edx,0x18
  407173:	and    edx,0x7f
  407176:	mov    BYTE PTR [rax+0x3],dl
  407179:	mov    edx,r8d
  40717c:	jmp    0x406f86
  407181:	mov    eax,DWORD PTR [r12+0x4]
  407186:	mov    ecx,edi
  407188:	mov    QWORD PTR [rsp+0x28],r9
  40718d:	lea    edx,[rax+0x1]
  407190:	call   0x407f70
  407195:	mov    rcx,QWORD PTR [rbx+0x48]
  407199:	mov    DWORD PTR [rsp+0x3c],eax
  40719d:	mov    eax,eax
  40719f:	lea    rax,[rax+rax*2]
  4071a3:	mov    r9,QWORD PTR [rsp+0x28]
  4071a8:	test   rcx,rcx
  4071ab:	lea    rdx,[rax*8+0x8]
  4071b3:	je     0x407220
  4071b5:	mov    r8d,DWORD PTR [rcx+0x4]
  4071b9:	xor    edi,edi
  4071bb:	xor    r10d,r10d
  4071be:	jmp    0x407030
  4071c3:	mov    edx,edi
  4071c5:	lea    rcx,[rax+0x8]
  4071c9:	mov    QWORD PTR [rsp+0x28],r9
  4071ce:	lea    r8,[rdx+rdx*2]
  4071d2:	lea    rdx,[r12+0x8]
  4071d7:	shl    r8,0x3
  4071db:	call   0x43f0a8
  4071e0:	mov    r12,QWORD PTR [rbx+0x48]
  4071e4:	mov    r8d,edi
  4071e7:	mov    r9,QWORD PTR [rsp+0x28]
  4071ec:	mov    DWORD PTR [r12+0x4],edi
  4071f1:	jmp    0x407087
  4071f6:	lea    r8,[rip+0x3dbca]        # 0x444dc7
  4071fd:	lea    rcx,[rip+0x3d8bc]        # 0x444ac0
  407204:	mov    edx,0x1e9
  407209:	call   0x4039c0
  40720e:	mov    r12,rax
  407211:	xor    edx,edx
  407213:	jmp    0x406f86
  407218:	xor    r8d,r8d
  40721b:	jmp    0x40713e
  407220:	xor    edi,edi
  407222:	xor    r10d,r10d
  407225:	xor    r8d,r8d
  407228:	jmp    0x407030
  40722d:	nop
  40722e:	xchg   ax,ax
  407230:	mov    DWORD PTR [rcx],0x0
  407236:	mov    QWORD PTR [rcx+0x8],0x0
  40723e:	mov    QWORD PTR [rcx+0x10],0x0
  407246:	mov    QWORD PTR [rcx+0x18],0x0
  40724e:	mov    QWORD PTR [rcx+0x20],0x0
  407256:	mov    QWORD PTR [rcx+0x28],0x0
  40725e:	mov    QWORD PTR [rcx+0x30],0x0
  407266:	mov    QWORD PTR [rcx+0x38],0x0
  40726e:	mov    QWORD PTR [rcx+0x40],0x0
  407276:	mov    QWORD PTR [rcx+0x48],0x0
  40727e:	ret    
  40727f:	nop
  407280:	push   rbx
  407281:	sub    rsp,0x20
  407285:	mov    rbx,rcx
  407288:	mov    rcx,QWORD PTR [rcx+0x10]
  40728c:	test   rcx,rcx
  40728f:	je     0x40729e
  407291:	call   0x43f150
  407296:	mov    QWORD PTR [rbx+0x10],0x0
  40729e:	mov    rcx,QWORD PTR [rbx+0x18]
  4072a2:	test   rcx,rcx
  4072a5:	je     0x4072b4
  4072a7:	call   0x43f100
  4072ac:	mov    QWORD PTR [rbx+0x18],0x0
  4072b4:	mov    rcx,QWORD PTR [rbx+0x48]
  4072b8:	test   rcx,rcx
  4072bb:	je     0x4072d7
  4072bd:	cmp    BYTE PTR [rcx+0x3],0x0
  4072c1:	js     0x4072d0
  4072c3:	add    rsp,0x20
  4072c7:	pop    rbx
  4072c8:	jmp    0x43f100
  4072cd:	nop    DWORD PTR [rax]
  4072d0:	mov    DWORD PTR [rcx+0x4],0x0
  4072d7:	add    rsp,0x20
  4072db:	pop    rbx
  4072dc:	ret    
  4072dd:	nop    DWORD PTR [rax]
  4072e0:	push   rsi
  4072e1:	push   rbx
  4072e2:	sub    rsp,0x28
  4072e6:	mov    rax,QWORD PTR [rip+0x52003]        # 0x4592f0
  4072ed:	test   rax,rax
  4072f0:	je     0x40733c
  4072f2:	mov    rdx,QWORD PTR [rax-0x8]
  4072f6:	lea    rsi,[rdx+rdx*4]
  4072fa:	shl    rsi,0x4
  4072fe:	add    rsi,rax
  407301:	cmp    rax,rsi
  407304:	je     0x407328
  407306:	lea    rbx,[rsi-0x50]
  40730a:	nop    WORD PTR [rax+rax*1+0x0]
  407310:	mov    rcx,rbx
  407313:	mov    rsi,rbx
  407316:	sub    rbx,0x50
  40731a:	call   0x407280
  40731f:	cmp    QWORD PTR [rip+0x51fca],rsi        # 0x4592f0
  407326:	jne    0x407310
  407328:	lea    rcx,[rsi-0x8]
  40732c:	call   0x4387a0
  407331:	mov    QWORD PTR [rip+0x51fb4],0x0        # 0x4592f0
  40733c:	add    rsp,0x28
  407340:	pop    rbx
  407341:	pop    rsi
  407342:	ret    
  407343:	nop    DWORD PTR [rax]
  407346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407350:	push   r14
  407352:	push   r13
  407354:	push   r12
  407356:	push   rbp
  407357:	push   rdi
  407358:	push   rsi
  407359:	push   rbx
  40735a:	sub    rsp,0x50
  40735e:	mov    ebp,DWORD PTR [rcx+0x8]
  407361:	test   ebp,ebp
  407363:	je     0x407480
  407369:	mov    r12,QWORD PTR [rcx]
  40736c:	mov    rdi,rdx
  40736f:	test   r12,r12
  407372:	je     0x407523
  407378:	mov    rbx,QWORD PTR [rip+0x51f71]        # 0x4592f0
  40737f:	test   rbx,rbx
  407382:	je     0x40769e
  407388:	lea    r13,[rbx+0x500]
  40738f:	xor    esi,esi
  407391:	mov    rcx,QWORD PTR [rbx+0x8]
  407395:	test   rcx,rcx
  407398:	je     0x4073ac
  40739a:	mov    rdx,r12
  40739d:	call   0x43f048
  4073a2:	test   eax,eax
  4073a4:	jne    0x4073ac
  4073a6:	add    DWORD PTR [rbx],0x1
  4073a9:	mov    rsi,rbx
  4073ac:	add    rbx,0x50
  4073b0:	cmp    rbx,r13
  4073b3:	jne    0x407391
  4073b5:	test   rsi,rsi
  4073b8:	je     0x407523
  4073be:	add    DWORD PTR [rsi],0x1
  4073c1:	mov    rax,QWORD PTR [rsi+0x38]
  4073c5:	movsxd rbx,ebp
  4073c8:	cmp    rbx,rax
  4073cb:	jbe    0x407491
  4073d1:	sub    rbx,0x1
  4073d5:	lea    rbp,[rsp+0x28]
  4073da:	lea    r12,[rsp+0x30]
  4073df:	jmp    0x4073fb
  4073e1:	mov    r8,r12
  4073e4:	mov    rdx,rbp
  4073e7:	mov    rcx,rsi
  4073ea:	call   0x406d30
  4073ef:	test   al,al
  4073f1:	je     0x407480
  4073f7:	mov    rax,QWORD PTR [rsi+0x38]
  4073fb:	cmp    rax,rbx
  4073fe:	jb     0x4073e1
  407400:	mov    rdx,rbp
  407403:	mov    r8,r12
  407406:	mov    rcx,rsi
  407409:	mov    QWORD PTR [rsp+0x28],0x0
  407412:	mov    QWORD PTR [rsp+0x30],0x0
  40741b:	call   0x406d30
  407420:	mov    edx,eax
  407422:	xor    eax,eax
  407424:	test   dl,dl
  407426:	je     0x407482
  407428:	mov    rcx,QWORD PTR [rip+0x51eb9]        # 0x4592e8
  40742f:	test   rcx,rcx
  407432:	je     0x40774e
  407438:	mov    r8,QWORD PTR [rsp+0x30]
  40743d:	cmp    QWORD PTR [rip+0x51e9c],r8        # 0x4592e0
  407444:	jl     0x407507
  40744a:	mov    rdx,QWORD PTR [rsp+0x28]
  40744f:	call   0x43f0a8
  407454:	mov    rax,QWORD PTR [rsp+0x30]
  407459:	test   rdi,rdi
  40745c:	mov    QWORD PTR [rip+0x51e7d],rax        # 0x4592e0
  407463:	je     0x407467
  407465:	mov    DWORD PTR [rdi],eax
  407467:	mov    rax,QWORD PTR [rip+0x51e7a]        # 0x4592e8
  40746e:	add    rsp,0x50
  407472:	pop    rbx
  407473:	pop    rsi
  407474:	pop    rdi
  407475:	pop    rbp
  407476:	pop    r12
  407478:	pop    r13
  40747a:	pop    r14
  40747c:	ret    
  40747d:	nop    DWORD PTR [rax]
  407480:	xor    eax,eax
  407482:	add    rsp,0x50
  407486:	pop    rbx
  407487:	pop    rsi
  407488:	pop    rdi
  407489:	pop    rbp
  40748a:	pop    r12
  40748c:	pop    r13
  40748e:	pop    r14
  407490:	ret    
  407491:	mov    rcx,QWORD PTR [rsi+0x48]
  407495:	test   rcx,rcx
  407498:	je     0x4074f0
  40749a:	mov    r8d,DWORD PTR [rcx+0x4]
  40749e:	test   r8d,r8d
  4074a1:	je     0x4074f0
  4074a3:	mov    r9,QWORD PTR [rsi+0x40]
  4074a7:	cmp    r9,0x64
  4074ab:	ja     0x407656
  4074b1:	cmp    rbx,r9
  4074b4:	jbe    0x4076c2
  4074ba:	lea    eax,[r9-0x1]
  4074be:	lea    rax,[rax+rax*2]
  4074c2:	lea    rbp,[rcx+rax*8+0x8]
  4074c7:	mov    rax,QWORD PTR [rbp+0x0]
  4074cb:	cmp    rbx,rax
  4074ce:	jae    0x407684
  4074d4:	lea    r8,[rip+0x3d8fa]        # 0x444dd5
  4074db:	lea    rcx,[rip+0x3d5de]        # 0x444ac0
  4074e2:	mov    edx,0x278
  4074e7:	call   0x4039c0
  4074ec:	nop    DWORD PTR [rax+0x0]
  4074f0:	mov    QWORD PTR [rsi+0x30],0x0
  4074f8:	mov    QWORD PTR [rsi+0x38],0x0
  407500:	xor    eax,eax
  407502:	jmp    0x4073d1
  407507:	mov    rdx,r8
  40750a:	call   0x438650
  40750f:	mov    r8,QWORD PTR [rsp+0x30]
  407514:	mov    QWORD PTR [rip+0x51dcd],rax        # 0x4592e8
  40751b:	mov    rcx,rax
  40751e:	jmp    0x40744a
  407523:	lea    rdx,[rip+0x3d5e0]        # 0x444b0a
  40752a:	mov    rcx,r12
  40752d:	call   0x43f128
  407532:	test   rax,rax
  407535:	mov    r14,rax
  407538:	je     0x407480
  40753e:	mov    rsi,QWORD PTR [rip+0x51dab]        # 0x4592f0
  407545:	test   rsi,rsi
  407548:	je     0x40776c
  40754e:	mov    ebx,DWORD PTR [rsi]
  407550:	lea    rdx,[rsi+0x50]
  407554:	lea    r10,[rsi+0x500]
  40755b:	mov    r9d,ebx
  40755e:	xchg   ax,ax
  407560:	cmp    QWORD PTR [rdx+0x8],0x0
  407565:	mov    ecx,DWORD PTR [rdx]
  407567:	mov    r13,rdx
  40756a:	sete   r8b
  40756e:	cmp    ecx,r9d
  407571:	jb     0x407630
  407577:	test   r8b,r8b
  40757a:	je     0x407633
  407580:	cmp    QWORD PTR [rsi+0x8],0x0
  407585:	je     0x407633
  40758b:	cmp    ebx,ecx
  40758d:	mov    rsi,rdx
  407590:	cmovb  ebx,ecx
  407593:	mov    rcx,QWORD PTR [r13+0x10]
  407597:	mov    QWORD PTR [r13+0x8],r12
  40759b:	test   rcx,rcx
  40759e:	je     0x4075a5
  4075a0:	call   0x43f150
  4075a5:	mov    rax,QWORD PTR [r13+0x48]
  4075a9:	mov    QWORD PTR [r13+0x10],r14
  4075ad:	mov    QWORD PTR [r13+0x28],0x0
  4075b5:	mov    QWORD PTR [r13+0x30],0x0
  4075bd:	mov    QWORD PTR [r13+0x38],0x0
  4075c5:	test   rax,rax
  4075c8:	je     0x4075d1
  4075ca:	mov    DWORD PTR [rax+0x4],0x0
  4075d1:	mov    rcx,QWORD PTR [rip+0x51cf8]        # 0x4592d0
  4075d8:	add    ebx,0x1
  4075db:	lea    r8,[rsp+0x28]
  4075e0:	mov    DWORD PTR [r13+0x0],ebx
  4075e4:	mov    rdx,r12
  4075e7:	mov    DWORD PTR [rsp+0x28],0x0
  4075ef:	call   0x409600
  4075f4:	test   al,al
  4075f6:	je     0x4076d3
  4075fc:	mov    edx,DWORD PTR [rsp+0x28]
  407600:	cmp    edx,0x1
  407603:	jbe    0x40777d
  407609:	lea    r12,[rsp+0x30]
  40760e:	mov    r8d,0x1
  407614:	mov    rcx,r12
  407617:	call   0x406ba0
  40761c:	movsxd rax,DWORD PTR [rsp+0x38]
  407621:	mov    QWORD PTR [r13+0x40],rax
  407625:	jmp    0x4073c1
  40762a:	nop    WORD PTR [rax+rax*1+0x0]
  407630:	mov    rsi,rdx
  407633:	cmp    ebx,ecx
  407635:	cmovb  ebx,ecx
  407638:	test   r8b,r8b
  40763b:	jne    0x4076da
  407641:	add    rdx,0x50
  407645:	cmp    rdx,r10
  407648:	je     0x4076da
  40764e:	mov    r9d,DWORD PTR [rsi]
  407651:	jmp    0x407560
  407656:	cmp    rbx,r9
  407659:	lea    eax,[r8-0x1]
  40765d:	jbe    0x4076af
  40765f:	cmp    rax,r8
  407662:	jae    0x4074f0
  407668:	mov    eax,eax
  40766a:	lea    rax,[rax+rax*2]
  40766e:	lea    rax,[rcx+rax*8]
  407672:	cmp    rbx,QWORD PTR [rax+0x8]
  407676:	lea    rbp,[rax+0x8]
  40767a:	jb     0x407795
  407680:	mov    rax,QWORD PTR [rax+0x8]
  407684:	cmp    rbx,rax
  407687:	mov    rdx,QWORD PTR [rbp+0x8]
  40768b:	je     0x4076e2
  40768d:	sub    rax,0x1
  407691:	mov    QWORD PTR [rsi+0x30],rdx
  407695:	mov    QWORD PTR [rsi+0x38],rax
  407699:	jmp    0x4073d1
  40769e:	call   0x406ca0
  4076a3:	mov    rbx,QWORD PTR [rip+0x51c46]        # 0x4592f0
  4076aa:	jmp    0x407388
  4076af:	lea    rax,[rbx+rbx*4]
  4076b3:	xor    edx,edx
  4076b5:	lea    rax,[rax+rax*4]
  4076b9:	shl    rax,0x2
  4076bd:	div    r9
  4076c0:	jmp    0x40765f
  4076c2:	lea    eax,[rbp-0x1]
  4076c5:	lea    rax,[rax+rax*2]
  4076c9:	lea    rbp,[rcx+rax*8+0x8]
  4076ce:	jmp    0x4074c7
  4076d3:	xor    eax,eax
  4076d5:	jmp    0x407621
  4076da:	mov    r13,rsi
  4076dd:	jmp    0x407593
  4076e2:	mov    r12,QWORD PTR [rbp+0x10]
  4076e6:	sub    r12,rdx
  4076e9:	lea    rbx,[r12+0x1]
  4076ee:	cmp    rbx,QWORD PTR [rip+0x51beb]        # 0x4592e0
  4076f5:	jg     0x40772f
  4076f7:	mov    rcx,QWORD PTR [rip+0x51bea]        # 0x4592e8
  4076fe:	add    rdx,QWORD PTR [rsi+0x18]
  407702:	mov    r8,rbx
  407705:	call   0x43f0a0
  40770a:	mov    rax,QWORD PTR [rip+0x51bd7]        # 0x4592e8
  407711:	test   rdi,rdi
  407714:	mov    BYTE PTR [rax+r12*1],0x0
  407719:	lea    rax,[rbx-0x1]
  40771d:	mov    QWORD PTR [rip+0x51bbc],rax        # 0x4592e0
  407724:	jne    0x407465
  40772a:	jmp    0x407467
  40772f:	mov    rcx,QWORD PTR [rip+0x51bb2]        # 0x4592e8
  407736:	mov    rdx,rbx
  407739:	call   0x438650
  40773e:	mov    rdx,QWORD PTR [rbp+0x8]
  407742:	mov    QWORD PTR [rip+0x51b9f],rax        # 0x4592e8
  407749:	mov    rcx,rax
  40774c:	jmp    0x4076fe
  40774e:	mov    rcx,QWORD PTR [rsp+0x30]
  407753:	call   0x4385d0
  407758:	mov    r8,QWORD PTR [rsp+0x30]
  40775d:	mov    QWORD PTR [rip+0x51b84],rax        # 0x4592e8
  407764:	mov    rcx,rax
  407767:	jmp    0x40744a
  40776c:	call   0x406ca0
  407771:	mov    rsi,QWORD PTR [rip+0x51b78]        # 0x4592f0
  407778:	jmp    0x40754e
  40777d:	lea    r8,[rip+0x3d66c]        # 0x444df0
  407784:	lea    rcx,[rip+0x3d335]        # 0x444ac0
  40778b:	mov    edx,0xd2
  407790:	call   0x4039c0
  407795:	lea    r8,[rip+0x3d639]        # 0x444dd5
  40779c:	lea    rcx,[rip+0x3d31d]        # 0x444ac0
  4077a3:	mov    edx,0x287
  4077a8:	call   0x4039c0
  4077ad:	nop
  4077ae:	xchg   ax,ax
  4077b0:	push   rbx
  4077b1:	sub    rsp,0x20
  4077b5:	mov    r8d,0x1
  4077bb:	mov    rbx,rcx
  4077be:	call   0x406ba0
  4077c3:	mov    rax,rbx
  4077c6:	add    rsp,0x20
  4077ca:	pop    rbx
  4077cb:	ret    
  4077cc:	nop    DWORD PTR [rax+0x0]
  4077d0:	push   rbx
  4077d1:	sub    rsp,0x20
  4077d5:	xor    r8d,r8d
  4077d8:	mov    rbx,rcx
  4077db:	call   0x406ba0
  4077e0:	mov    rax,rbx
  4077e3:	add    rsp,0x20
  4077e7:	pop    rbx
  4077e8:	ret    
  4077e9:	nop    DWORD PTR [rax+0x0]
  4077f0:	push   rbx
  4077f1:	sub    rsp,0x20
  4077f5:	mov    edx,ecx
  4077f7:	mov    ebx,ecx
  4077f9:	mov    rcx,QWORD PTR [rip+0x51ad0]        # 0x4592d0
  407800:	call   0x408d20
  407805:	test   eax,eax
  407807:	jne    0x407811
  407809:	mov    eax,ebx
  40780b:	add    rsp,0x20
  40780f:	pop    rbx
  407810:	ret    
  407811:	mov    rcx,QWORD PTR [rip+0x51ab8]        # 0x4592d0
  407818:	xor    r9d,r9d
  40781b:	xor    r8d,r8d
  40781e:	mov    edx,ebx
  407820:	add    rsp,0x20
  407824:	pop    rbx
  407825:	jmp    0x408dc0
  40782a:	nop    WORD PTR [rax+rax*1+0x0]
  407830:	push   r13
  407832:	push   r12
  407834:	push   rbp
  407835:	push   rdi
  407836:	push   rsi
  407837:	push   rbx
  407838:	sub    rsp,0x58
  40783c:	xor    eax,eax
  40783e:	mov    ecx,0x5
  407843:	lea    rdx,[rsp+0x20]
  407848:	mov    rdi,rdx
  40784b:	rep stos QWORD PTR es:[rdi],rax
  40784e:	mov    rcx,QWORD PTR [rip+0x51a7b]        # 0x4592d0
  407855:	mov    DWORD PTR [rdi],0x0
  40785b:	call   0x4096b0
  407860:	mov    esi,DWORD PTR [rsp+0x44]
  407864:	mov    eax,DWORD PTR [rsp+0x40]
  407868:	mov    edi,DWORD PTR [rsp+0x3c]
  40786c:	add    edi,DWORD PTR [rsp+0x28]
  407870:	mov    r12d,DWORD PTR [rsp+0x30]
  407875:	mov    rbx,QWORD PTR [rip+0x53da0]        # 0x45b61c
  40787c:	lea    ebp,[rax+rsi*1]
  40787f:	add    eax,DWORD PTR [rsp+0x2c]
  407883:	add    edi,esi
  407885:	add    esi,eax
  407887:	call   rbx
  407889:	lea    rdx,[rip+0x3d280]        # 0x444b10
  407890:	lea    rcx,[rax+0x60]
  407894:	mov    r8d,r12d
  407897:	call   0x43f460
  40789c:	mov    ecx,DWORD PTR [rsp+0x30]
  4078a0:	test   ecx,ecx
  4078a2:	jne    0x407cd2
  4078a8:	call   rbx
  4078aa:	lea    rdx,[rip+0x3d2cf]        # 0x444b80
  4078b1:	lea    rcx,[rax+0x60]
  4078b5:	call   0x43f460
  4078ba:	mov    r8d,DWORD PTR [rsp+0x24]
  4078bf:	cmp    r8d,0x27ff
  4078c6:	jle    0x4078e4
  4078c8:	cmp    r8d,0x9fffff
  4078cf:	jg     0x407cc0
  4078d5:	sar    r8d,0xa
  4078d9:	mov    r13d,0x6b
  4078df:	mov    r12d,r8d
  4078e2:	jmp    0x4078ed
  4078e4:	mov    r12d,r8d
  4078e7:	mov    r13d,0x20
  4078ed:	call   rbx
  4078ef:	lea    rdx,[rip+0x3d2c2]        # 0x444bb8
  4078f6:	lea    rcx,[rax+0x60]
  4078fa:	mov    r8d,r12d
  4078fd:	mov    r9d,r13d
  407900:	call   0x43f460
  407905:	mov    r8d,DWORD PTR [rsp+0x2c]
  40790a:	cmp    r8d,0x27ff
  407911:	jle    0x407930
  407913:	cmp    r8d,0x9fffff
  40791a:	jg     0x407ca4
  407920:	sar    r8d,0xa
  407924:	mov    r13d,0x6b
  40792a:	mov    r12d,r8d
  40792d:	jmp    0x407939
  40792f:	nop
  407930:	mov    r12d,r8d
  407933:	mov    r13d,0x20
  407939:	call   rbx
  40793b:	lea    rdx,[rip+0x3d2a6]        # 0x444be8
  407942:	lea    rcx,[rax+0x60]
  407946:	mov    r8d,r12d
  407949:	mov    r9d,r13d
  40794c:	call   0x43f460
  407951:	mov    r8d,DWORD PTR [rsp+0x20]
  407956:	cmp    r8d,0x27ff
  40795d:	jle    0x407980
  40795f:	cmp    r8d,0x9fffff
  407966:	jg     0x407c92
  40796c:	sar    r8d,0xa
  407970:	mov    r13d,0x6b
  407976:	mov    r12d,r8d
  407979:	jmp    0x407989
  40797b:	nop    DWORD PTR [rax+rax*1+0x0]
  407980:	mov    r12d,r8d
  407983:	mov    r13d,0x20
  407989:	call   rbx
  40798b:	lea    rdx,[rip+0x3d286]        # 0x444c18
  407992:	lea    rcx,[rax+0x60]
  407996:	mov    r8d,r12d
  407999:	mov    r9d,r13d
  40799c:	call   0x43f460
  4079a1:	mov    r8d,DWORD PTR [rsp+0x28]
  4079a6:	cmp    r8d,0x27ff
  4079ad:	jle    0x4079d0
  4079af:	cmp    r8d,0x9fffff
  4079b6:	jg     0x407c80
  4079bc:	sar    r8d,0xa
  4079c0:	mov    r13d,0x6b
  4079c6:	mov    r12d,r8d
  4079c9:	jmp    0x4079d9
  4079cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4079d0:	mov    r12d,r8d
  4079d3:	mov    r13d,0x20
  4079d9:	call   rbx
  4079db:	lea    rdx,[rip+0x3d266]        # 0x444c48
  4079e2:	lea    rcx,[rax+0x60]
  4079e6:	mov    r8d,r12d
  4079e9:	mov    r9d,r13d
  4079ec:	call   0x43f460
  4079f1:	mov    r8d,DWORD PTR [rsp+0x38]
  4079f6:	cmp    r8d,0x27ff
  4079fd:	jle    0x407a20
  4079ff:	cmp    r8d,0x9fffff
  407a06:	jg     0x407c64
  407a0c:	sar    r8d,0xa
  407a10:	mov    r13d,0x6b
  407a16:	mov    r12d,r8d
  407a19:	jmp    0x407a29
  407a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a20:	mov    r12d,r8d
  407a23:	mov    r13d,0x20
  407a29:	call   rbx
  407a2b:	lea    rdx,[rip+0x3d246]        # 0x444c78
  407a32:	lea    rcx,[rax+0x60]
  407a36:	mov    r8d,r12d
  407a39:	mov    r9d,r13d
  407a3c:	call   0x43f460
  407a41:	mov    r8d,DWORD PTR [rsp+0x40]
  407a46:	cmp    r8d,0x27ff
  407a4d:	jle    0x407a70
  407a4f:	cmp    r8d,0x9fffff
  407a56:	jg     0x407c52
  407a5c:	sar    r8d,0xa
  407a60:	mov    r13d,0x6b
  407a66:	mov    r12d,r8d
  407a69:	jmp    0x407a79
  407a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a70:	mov    r12d,r8d
  407a73:	mov    r13d,0x20
  407a79:	call   rbx
  407a7b:	lea    rdx,[rip+0x3d226]        # 0x444ca8
  407a82:	lea    rcx,[rax+0x60]
  407a86:	mov    r8d,r12d
  407a89:	mov    r9d,r13d
  407a8c:	call   0x43f460
  407a91:	mov    r8d,DWORD PTR [rsp+0x44]
  407a96:	cmp    r8d,0x27ff
  407a9d:	jle    0x407ac0
  407a9f:	cmp    r8d,0x9fffff
  407aa6:	jg     0x407c40
  407aac:	sar    r8d,0xa
  407ab0:	mov    r13d,0x6b
  407ab6:	mov    r12d,r8d
  407ab9:	jmp    0x407ac9
  407abb:	nop    DWORD PTR [rax+rax*1+0x0]
  407ac0:	mov    r12d,r8d
  407ac3:	mov    r13d,0x20
  407ac9:	call   rbx
  407acb:	lea    rdx,[rip+0x3d206]        # 0x444cd8
  407ad2:	lea    rcx,[rax+0x60]
  407ad6:	mov    r8d,r12d
  407ad9:	mov    r9d,r13d
  407adc:	mov    r12d,0x20
  407ae2:	call   0x43f460
  407ae7:	cmp    ebp,0x27ff
  407aed:	jle    0x407b04
  407aef:	cmp    ebp,0x9fffff
  407af5:	jg     0x407c32
  407afb:	sar    ebp,0xa
  407afe:	mov    r12d,0x6b
  407b04:	call   rbx
  407b06:	lea    rdx,[rip+0x3d1fb]        # 0x444d08
  407b0d:	lea    rcx,[rax+0x60]
  407b11:	mov    r8d,ebp
  407b14:	mov    r9d,r12d
  407b17:	call   0x43f460
  407b1c:	mov    r8d,DWORD PTR [rsp+0x48]
  407b21:	cmp    r8d,0x27ff
  407b28:	jle    0x407b50
  407b2a:	cmp    r8d,0x9fffff
  407b31:	jg     0x407c20
  407b37:	sar    r8d,0xa
  407b3b:	mov    r12d,0x6b
  407b41:	mov    ebp,r8d
  407b44:	jmp    0x407b59
  407b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b50:	mov    ebp,r8d
  407b53:	mov    r12d,0x20
  407b59:	call   rbx
  407b5b:	lea    rdx,[rip+0x3d1d6]        # 0x444d38
  407b62:	lea    rcx,[rax+0x60]
  407b66:	mov    r8d,ebp
  407b69:	mov    r9d,r12d
  407b6c:	mov    ebp,0x20
  407b71:	call   0x43f460
  407b76:	cmp    edi,0x27ff
  407b7c:	jle    0x407b92
  407b7e:	cmp    edi,0x9fffff
  407b84:	jg     0x407c10
  407b8a:	sar    edi,0xa
  407b8d:	mov    ebp,0x6b
  407b92:	call   rbx
  407b94:	lea    rdx,[rip+0x3d1cd]        # 0x444d68
  407b9b:	lea    rcx,[rax+0x60]
  407b9f:	mov    r8d,edi
  407ba2:	mov    r9d,ebp
  407ba5:	mov    edi,0x20
  407baa:	call   0x43f460
  407baf:	cmp    esi,0x27ff
  407bb5:	jle    0x407bc7
  407bb7:	cmp    esi,0x9fffff
  407bbd:	jg     0x407c00
  407bbf:	sar    esi,0xa
  407bc2:	mov    edi,0x6b
  407bc7:	call   rbx
  407bc9:	lea    rdx,[rip+0x3d1c8]        # 0x444d98
  407bd0:	lea    rcx,[rax+0x60]
  407bd4:	mov    r9d,edi
  407bd7:	mov    r8d,esi
  407bda:	call   0x43f460
  407bdf:	call   rbx
  407be1:	lea    rdx,[rip+0x3d1dd]        # 0x444dc5
  407be8:	lea    rcx,[rax+0x60]
  407bec:	call   0x43f460
  407bf1:	nop
  407bf2:	add    rsp,0x58
  407bf6:	pop    rbx
  407bf7:	pop    rsi
  407bf8:	pop    rdi
  407bf9:	pop    rbp
  407bfa:	pop    r12
  407bfc:	pop    r13
  407bfe:	ret    
  407bff:	nop
  407c00:	sar    esi,0x14
  407c03:	mov    edi,0x4d
  407c08:	jmp    0x407bc7
  407c0a:	nop    WORD PTR [rax+rax*1+0x0]
  407c10:	sar    edi,0x14
  407c13:	mov    ebp,0x4d
  407c18:	jmp    0x407b92
  407c1d:	nop    DWORD PTR [rax]
  407c20:	sar    r8d,0x14
  407c24:	mov    r12d,0x4d
  407c2a:	mov    ebp,r8d
  407c2d:	jmp    0x407b59
  407c32:	sar    ebp,0x14
  407c35:	mov    r12d,0x4d
  407c3b:	jmp    0x407b04
  407c40:	sar    r8d,0x14
  407c44:	mov    r13d,0x4d
  407c4a:	mov    r12d,r8d
  407c4d:	jmp    0x407ac9
  407c52:	sar    r8d,0x14
  407c56:	mov    r13d,0x4d
  407c5c:	mov    r12d,r8d
  407c5f:	jmp    0x407a79
  407c64:	sar    r8d,0x14
  407c68:	mov    r13d,0x4d
  407c6e:	mov    r12d,r8d
  407c71:	jmp    0x407a29
  407c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c80:	sar    r8d,0x14
  407c84:	mov    r13d,0x4d
  407c8a:	mov    r12d,r8d
  407c8d:	jmp    0x4079d9
  407c92:	sar    r8d,0x14
  407c96:	mov    r13d,0x4d
  407c9c:	mov    r12d,r8d
  407c9f:	jmp    0x407989
  407ca4:	sar    r8d,0x14
  407ca8:	mov    r13d,0x4d
  407cae:	mov    r12d,r8d
  407cb1:	jmp    0x407939
  407cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407cc0:	sar    r8d,0x14
  407cc4:	mov    r13d,0x4d
  407cca:	mov    r12d,r8d
  407ccd:	jmp    0x4078ed
  407cd2:	mov    eax,DWORD PTR [rsp+0x34]
  407cd6:	cdq    
  407cd7:	idiv   ecx
  407cd9:	mov    r12d,eax
  407cdc:	call   rbx
  407cde:	lea    rdx,[rip+0x3ce63]        # 0x444b48
  407ce5:	lea    rcx,[rax+0x60]
  407ce9:	mov    r8d,r12d
  407cec:	call   0x43f460
  407cf1:	jmp    0x4078a8
  407cf6:	nop
  407cf7:	nop
  407cf8:	nop
  407cf9:	nop
  407cfa:	nop
  407cfb:	nop
  407cfc:	nop
  407cfd:	nop
  407cfe:	nop
  407cff:	nop
  407d00:	push   rbx
  407d01:	sub    rsp,0x20
  407d05:	mov    rax,QWORD PTR [rip+0x49944]        # 0x451650
  407d0c:	mov    rbx,rcx
  407d0f:	mov    rcx,QWORD PTR [rcx+0x8]
  407d13:	call   QWORD PTR [rax]
  407d15:	add    eax,DWORD PTR [rbx+0x10]
  407d18:	add    rsp,0x20
  407d1c:	pop    rbx
  407d1d:	ret    
  407d1e:	xchg   ax,ax
  407d20:	xor    eax,eax
  407d22:	mov    r8,QWORD PTR [rdx+0x8]
  407d26:	cmp    QWORD PTR [rcx+0x8],r8
  407d2a:	je     0x407d30
  407d2c:	repz ret 
  407d2e:	xchg   ax,ax
  407d30:	mov    r9,QWORD PTR [rdx]
  407d33:	cmp    QWORD PTR [rcx],r9
  407d36:	jne    0x407d2c
  407d38:	mov    eax,DWORD PTR [rdx+0x10]
  407d3b:	cmp    DWORD PTR [rcx+0x10],eax
  407d3e:	sete   al
  407d41:	movzx  eax,al
  407d44:	ret    
  407d45:	nop
  407d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d50:	mov    rax,QWORD PTR [rip+0x498f9]        # 0x451650
  407d57:	mov    rcx,QWORD PTR [rcx]
  407d5a:	mov    rax,QWORD PTR [rax]
  407d5d:	rex.W jmp rax
  407d60:	xor    eax,eax
  407d62:	cmp    QWORD PTR [rcx],rdx
  407d65:	sete   al
  407d68:	ret    
  407d69:	nop
  407d6a:	nop    WORD PTR [rax+rax*1+0x0]
  407d70:	push   r14
  407d72:	push   r13
  407d74:	push   r12
  407d76:	push   rbp
  407d77:	push   rdi
  407d78:	push   rsi
  407d79:	push   rbx
  407d7a:	sub    rsp,0x50
  407d7e:	mov    r12,QWORD PTR [rsp+0xb0]
  407d86:	mov    rbp,rcx
  407d89:	mov    rcx,QWORD PTR [rip+0x51580]        # 0x459310
  407d90:	mov    rsi,rdx
  407d93:	mov    r14,r8
  407d96:	mov    r13d,r9d
  407d99:	mov    QWORD PTR [rsp+0x28],r8
  407d9e:	mov    DWORD PTR [rsp+0x30],r9d
  407da3:	mov    QWORD PTR [rsp+0x20],r12
  407da8:	test   rcx,rcx
  407dab:	je     0x407ed0
  407db1:	lea    rdx,[rsp+0x20]
  407db6:	mov    r8d,0x1
  407dbc:	call   0x437a90
  407dc1:	mov    rbx,QWORD PTR [rax]
  407dc4:	mov    rdi,rax
  407dc7:	test   rbx,rbx
  407dca:	je     0x407e60
  407dd0:	mov    ecx,0x18
  407dd5:	call   0x4385d0
  407dda:	cmp    QWORD PTR [rip+0x51526],0x0        # 0x459308
  407de2:	mov    rdi,rax
  407de5:	mov    QWORD PTR [rax],rbp
  407de8:	mov    QWORD PTR [rax+0x8],rbx
  407dec:	mov    QWORD PTR [rax+0x10],rsi
  407df0:	je     0x407ea0
  407df6:	mov    rax,QWORD PTR [rip+0x49853]        # 0x451650
  407dfd:	mov    rcx,rbp
  407e00:	call   QWORD PTR [rax]
  407e02:	mov    rcx,QWORD PTR [rip+0x514ff]        # 0x459308
  407e09:	mov    r8d,eax
  407e0c:	mov    r9d,0x1
  407e12:	mov    rdx,rbp
  407e15:	call   0x437890
  407e1a:	cmp    QWORD PTR [rax],0x0
  407e1e:	jne    0x407ef7
  407e24:	add    rsi,QWORD PTR [rbx+0x18]
  407e28:	mov    QWORD PTR [rax],rdi
  407e2b:	mov    rax,QWORD PTR [rbx+0x28]
  407e2f:	cmp    rsi,rax
  407e32:	mov    rdx,rsi
  407e35:	mov    QWORD PTR [rbx+0x18],rsi
  407e39:	jbe    0x407e42
  407e3b:	add    rdx,rax
  407e3e:	mov    QWORD PTR [rbx+0x28],rdx
  407e42:	add    QWORD PTR [rbx+0x20],0x1
  407e47:	add    rsp,0x50
  407e4b:	pop    rbx
  407e4c:	pop    rsi
  407e4d:	pop    rdi
  407e4e:	pop    rbp
  407e4f:	pop    r12
  407e51:	pop    r13
  407e53:	pop    r14
  407e55:	ret    
  407e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e60:	mov    edx,0x30
  407e65:	mov    ecx,0x1
  407e6a:	call   0x438600
  407e6f:	mov    QWORD PTR [rdi],rax
  407e72:	mov    QWORD PTR [rax+0x8],r14
  407e76:	mov    rax,QWORD PTR [rdi]
  407e79:	mov    QWORD PTR [rax],r12
  407e7c:	mov    rbx,QWORD PTR [rdi]
  407e7f:	mov    DWORD PTR [rax+0x10],r13d
  407e83:	mov    QWORD PTR [rbx+0x18],0x0
  407e8b:	mov    QWORD PTR [rbx+0x28],0x0
  407e93:	jmp    0x407dd0
  407e98:	nop    DWORD PTR [rax+rax*1+0x0]
  407ea0:	lea    r8,[rip+0xfffffffffffffeb9]        # 0x407d60
  407ea7:	lea    rdx,[rip+0xfffffffffffffea2]        # 0x407d50
  407eae:	xor    r9d,r9d
  407eb1:	mov    ecx,0xa
  407eb6:	call   0x437510
  407ebb:	mov    QWORD PTR [rip+0x51446],rax        # 0x459308
  407ec2:	jmp    0x407df6
  407ec7:	nop    WORD PTR [rax+rax*1+0x0]
  407ed0:	lea    r8,[rip+0xfffffffffffffe49]        # 0x407d20
  407ed7:	lea    rdx,[rip+0xfffffffffffffe22]        # 0x407d00
  407ede:	mov    cl,0xa
  407ee0:	xor    r9d,r9d
  407ee3:	call   0x437510
  407ee8:	mov    rcx,rax
  407eeb:	mov    QWORD PTR [rip+0x5141e],rax        # 0x459310
  407ef2:	jmp    0x407db1
  407ef7:	lea    r8,[rip+0x3cfa2]        # 0x444ea0
  407efe:	lea    rcx,[rip+0x3cf2b]        # 0x444e30
  407f05:	mov    edx,0x94
  407f0a:	call   0x4039c0
  407f0f:	nop
  407f10:	push   rbx
  407f11:	sub    rsp,0x20
  407f15:	mov    rax,QWORD PTR [rip+0x49734]        # 0x451650
  407f1c:	mov    rbx,rcx
  407f1f:	call   QWORD PTR [rax]
  407f21:	mov    rcx,QWORD PTR [rip+0x513e0]        # 0x459308
  407f28:	mov    r8d,eax
  407f2b:	xor    r9d,r9d
  407f2e:	mov    rdx,rbx
  407f31:	call   0x437890
  407f36:	mov    rbx,QWORD PTR [rax]
  407f39:	mov    rdx,QWORD PTR [rbx+0x8]
  407f3d:	mov    rcx,QWORD PTR [rbx+0x10]
  407f41:	sub    QWORD PTR [rdx+0x18],rcx
  407f45:	mov    rcx,QWORD PTR [rip+0x513bc]        # 0x459308
  407f4c:	mov    rdx,rax
  407f4f:	call   0x437b30
  407f54:	mov    rcx,rbx
  407f57:	add    rsp,0x20
  407f5b:	pop    rbx
  407f5c:	jmp    0x43f100
  407f61:	nop
  407f62:	nop    DWORD PTR [rax+0x0]
  407f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f70:	sub    rsp,0x28
  407f74:	cmp    ecx,edx
  407f76:	jae    0x407fa2
  407f78:	test   ecx,ecx
  407f7a:	mov    eax,0x4
  407f7f:	je     0x407f89
  407f81:	cmp    ecx,0xf
  407f84:	ja     0x407f93
  407f86:	lea    eax,[rcx+rcx*1]
  407f89:	cmp    eax,edx
  407f8b:	cmovb  eax,edx
  407f8e:	add    rsp,0x28
  407f92:	ret    
  407f93:	lea    eax,[rcx+rcx*2]
  407f96:	shr    eax,1
  407f98:	cmp    eax,edx
  407f9a:	cmovb  eax,edx
  407f9d:	add    rsp,0x28
  407fa1:	ret    
  407fa2:	lea    r8,[rip+0x3ced7]        # 0x444e80
  407fa9:	lea    rcx,[rip+0x3ce80]        # 0x444e30
  407fb0:	mov    edx,0xb4
  407fb5:	call   0x4039c0
  407fba:	nop
  407fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  407fc0:	ret    
  407fc1:	nop
  407fc2:	nop
  407fc3:	nop
  407fc4:	nop
  407fc5:	nop
  407fc6:	nop
  407fc7:	nop
  407fc8:	nop
  407fc9:	nop
  407fca:	nop
  407fcb:	nop
  407fcc:	nop
  407fcd:	nop
  407fce:	nop
  407fcf:	nop
  407fd0:	mov    eax,DWORD PTR [rcx]
  407fd2:	add    eax,DWORD PTR [rcx+0x8]
  407fd5:	ret    
  407fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407fe0:	xor    eax,eax
  407fe2:	mov    r8d,DWORD PTR [rdx]
  407fe5:	cmp    DWORD PTR [rcx],r8d
  407fe8:	je     0x407ff0
  407fea:	repz ret 
  407fec:	nop    DWORD PTR [rax+0x0]
  407ff0:	mov    rax,QWORD PTR [rdx+0x8]
  407ff4:	cmp    QWORD PTR [rcx+0x8],rax
  407ff8:	sete   al
  407ffb:	movzx  eax,al
  407ffe:	ret    
  407fff:	nop
  408000:	mov    rax,QWORD PTR [rdx]
  408003:	add    QWORD PTR [rcx],rax
  408006:	mov    eax,0x1
  40800b:	ret    
  40800c:	nop    DWORD PTR [rax+0x0]
  408010:	push   rbp
  408011:	push   rdi
  408012:	push   rsi
  408013:	push   rbx
  408014:	sub    rsp,0x28
  408018:	cmp    edx,0x4
  40801b:	mov    rbx,rcx
  40801e:	mov    edi,edx
  408020:	sete   bpl
  408024:	jne    0x408040
  408026:	mov    eax,DWORD PTR [rcx+0x24]
  408029:	cmp    eax,DWORD PTR [rcx+0x20]
  40802c:	je     0x4080f0
  408032:	mov    rdx,QWORD PTR [rcx+0x18]
  408036:	jmp    0x40804b
  408038:	nop    DWORD PTR [rax+rax*1+0x0]
  408040:	mov    eax,DWORD PTR [rcx+0xc]
  408043:	cmp    eax,DWORD PTR [rcx+0x8]
  408046:	je     0x408072
  408048:	mov    rdx,QWORD PTR [rcx]
  40804b:	lea    rax,[rax+rax*4]
  40804f:	lea    rsi,[rdx+rax*8]
  408053:	lea    r8,[rbx+0x18]
  408057:	test   bpl,bpl
  40805a:	mov    rax,rsi
  40805d:	cmovne rbx,r8
  408061:	add    DWORD PTR [rbx+0xc],0x1
  408065:	mov    BYTE PTR [rsi+0x4],dil
  408069:	add    rsp,0x28
  40806d:	pop    rbx
  40806e:	pop    rsi
  40806f:	pop    rdi
  408070:	pop    rbp
  408071:	ret    
  408072:	mov    rsi,QWORD PTR [rcx+0x48]
  408076:	mov    rdx,QWORD PTR [rcx+0x50]
  40807a:	test   rsi,rsi
  40807d:	je     0x408152
  408083:	mov    eax,DWORD PTR [rbx+0x8]
  408086:	lea    eax,[rax+rax*1+0x100]
  40808d:	lea    rcx,[rax+rax*4]
  408091:	shl    rcx,0x3
  408095:	call   rdx
  408097:	movabs rdx,0xcccccccccccccccd
  4080a1:	mov    rcx,QWORD PTR [rbx]
  4080a4:	mul    rdx
  4080a7:	shr    rdx,0x5
  4080ab:	mov    DWORD PTR [rbx+0x8],edx
  4080ae:	mov    edx,edx
  4080b0:	lea    rdx,[rdx+rdx*4]
  4080b4:	shl    rdx,0x3
  4080b8:	call   rsi
  4080ba:	mov    ecx,DWORD PTR [rbx+0xc]
  4080bd:	mov    QWORD PTR [rbx],rax
  4080c0:	mov    rdx,rcx
  4080c3:	lea    rcx,[rcx+rcx*4]
  4080c7:	lea    rsi,[rax+rcx*8]
  4080cb:	mov    eax,DWORD PTR [rbx+0x8]
  4080ce:	sub    eax,edx
  4080d0:	mov    rcx,rsi
  4080d3:	xor    edx,edx
  4080d5:	lea    r8,[rax+rax*4]
  4080d9:	shl    r8,0x3
  4080dd:	call   0x43f098
  4080e2:	jmp    0x408053
  4080e7:	nop    WORD PTR [rax+rax*1+0x0]
  4080f0:	mov    rsi,QWORD PTR [rcx+0x48]
  4080f4:	test   rsi,rsi
  4080f7:	je     0x408160
  4080f9:	mov    rdx,QWORD PTR [rbx+0x50]
  4080fd:	nop    DWORD PTR [rax]
  408100:	mov    eax,DWORD PTR [rbx+0x20]
  408103:	lea    eax,[rax+rax*1+0x100]
  40810a:	lea    rcx,[rax+rax*4]
  40810e:	shl    rcx,0x3
  408112:	call   rdx
  408114:	movabs rdx,0xcccccccccccccccd
  40811e:	mov    rcx,QWORD PTR [rbx+0x18]
  408122:	mul    rdx
  408125:	shr    rdx,0x5
  408129:	mov    DWORD PTR [rbx+0x20],edx
  40812c:	mov    edx,edx
  40812e:	lea    rdx,[rdx+rdx*4]
  408132:	shl    rdx,0x3
  408136:	call   rsi
  408138:	mov    ecx,DWORD PTR [rbx+0x24]
  40813b:	mov    QWORD PTR [rbx+0x18],rax
  40813f:	mov    rdx,rcx
  408142:	lea    rcx,[rcx+rcx*4]
  408146:	lea    rsi,[rax+rcx*8]
  40814a:	mov    eax,DWORD PTR [rbx+0x20]
  40814d:	jmp    0x4080ce
  408152:	lea    rsi,[rip+0x304f7]        # 0x438650
  408159:	jmp    0x408083
  40815e:	xchg   ax,ax
  408160:	mov    rdx,QWORD PTR [rcx+0x50]
  408164:	lea    rsi,[rip+0x304e5]        # 0x438650
  40816b:	jmp    0x408100
  40816d:	nop    DWORD PTR [rax]
  408170:	push   rsi
  408171:	push   rbx
  408172:	sub    rsp,0x28
  408176:	lea    r8,[rip+0xfffffffffffffe63]        # 0x407fe0
  40817d:	lea    rdx,[rip+0xfffffffffffffe4c]        # 0x407fd0
  408184:	xor    r9d,r9d
  408187:	mov    rsi,rcx
  40818a:	mov    ecx,0x64
  40818f:	call   0x437510
  408194:	mov    rcx,rax
  408197:	mov    QWORD PTR [rsi+0x58],rax
  40819b:	mov    eax,DWORD PTR [rsi+0x60]
  40819e:	test   eax,eax
  4081a0:	je     0x4081d1
  4081a2:	xor    ebx,ebx
  4081a4:	jmp    0x4081b4
  4081a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081b0:	mov    rcx,QWORD PTR [rsi+0x58]
  4081b4:	mov    edx,ebx
  4081b6:	mov    r8d,0x1
  4081bc:	add    ebx,0x1
  4081bf:	shl    rdx,0x4
  4081c3:	add    rdx,QWORD PTR [rsi+0x68]
  4081c7:	call   0x437a90
  4081cc:	cmp    DWORD PTR [rsi+0x60],ebx
  4081cf:	ja     0x4081b0
  4081d1:	add    rsp,0x28
  4081d5:	pop    rbx
  4081d6:	pop    rsi
  4081d7:	ret    
  4081d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4081e0:	push   rdi
  4081e1:	push   rsi
  4081e2:	push   rbx
  4081e3:	sub    rsp,0x40
  4081e7:	mov    eax,edx
  4081e9:	mov    rbx,rcx
  4081ec:	and    eax,0x7fffffff
  4081f1:	cmp    eax,edx
  4081f3:	je     0x4081ff
  4081f5:	shl    rax,0x4
  4081f9:	add    rax,QWORD PTR [rcx+0x68]
  4081fd:	mov    edx,DWORD PTR [rax]
  4081ff:	test   edx,edx
  408201:	jne    0x408212
  408203:	xor    eax,eax
  408205:	test   r8,r8
  408208:	jne    0x408212
  40820a:	add    rsp,0x40
  40820e:	pop    rbx
  40820f:	pop    rsi
  408210:	pop    rdi
  408211:	ret    
  408212:	mov    rcx,QWORD PTR [rbx+0x58]
  408216:	mov    DWORD PTR [rsp+0x30],edx
  40821a:	lea    rdx,[rsp+0x30]
  40821f:	mov    QWORD PTR [rsp+0x38],r8
  408224:	mov    r8d,0x1
  40822a:	call   0x437a90
  40822f:	mov    rdx,QWORD PTR [rax]
  408232:	mov    rsi,rax
  408235:	test   rdx,rdx
  408238:	je     0x408255
  40823a:	mov    rax,QWORD PTR [rbx+0x68]
  40823e:	sub    rdx,rax
  408241:	mov    rax,rdx
  408244:	sar    rax,0x4
  408248:	or     eax,0x80000000
  40824d:	add    rsp,0x40
  408251:	pop    rbx
  408252:	pop    rsi
  408253:	pop    rdi
  408254:	ret    
  408255:	mov    edx,DWORD PTR [rbx+0x60]
  408258:	mov    eax,DWORD PTR [rbx+0x64]
  40825b:	cmp    edx,eax
  40825d:	jb     0x4082b0
  40825f:	mov    r8,QWORD PTR [rbx+0x48]
  408263:	lea    rdx,[rip+0x303e6]        # 0x438650
  40826a:	mov    rdi,QWORD PTR [rbx+0x68]
  40826e:	test   r8,r8
  408271:	cmove  r8,rdx
  408275:	test   eax,eax
  408277:	jne    0x4082e5
  408279:	mov    DWORD PTR [rbx+0x64],0x80
  408280:	mov    edx,0x800
  408285:	mov    rcx,rdi
  408288:	call   r8
  40828b:	mov    rdx,rax
  40828e:	mov    QWORD PTR [rbx+0x68],rax
  408292:	sub    rdx,rdi
  408295:	cmp    DWORD PTR [rbx+0x64],0x80
  40829c:	mov    QWORD PTR [rsp+0x28],rdx
  4082a1:	ja     0x4082f1
  4082a3:	mov    edx,DWORD PTR [rbx+0x60]
  4082a6:	jmp    0x4082b4
  4082a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4082b0:	mov    rax,QWORD PTR [rbx+0x68]
  4082b4:	mov    ecx,edx
  4082b6:	add    edx,0x1
  4082b9:	shl    rcx,0x4
  4082bd:	add    rax,rcx
  4082c0:	mov    QWORD PTR [rsi],rax
  4082c3:	mov    rax,QWORD PTR [rbx+0x68]
  4082c7:	mov    r9,QWORD PTR [rsp+0x30]
  4082cc:	mov    r10,QWORD PTR [rsp+0x38]
  4082d1:	mov    DWORD PTR [rbx+0x60],edx
  4082d4:	mov    QWORD PTR [rax+rcx*1],r9
  4082d8:	mov    QWORD PTR [rax+rcx*1+0x8],r10
  4082dd:	mov    rdx,QWORD PTR [rsi]
  4082e0:	jmp    0x40823e
  4082e5:	lea    edx,[rax+rax*1]
  4082e8:	mov    DWORD PTR [rbx+0x64],edx
  4082eb:	shl    rdx,0x4
  4082ef:	jmp    0x408285
  4082f1:	mov    rcx,QWORD PTR [rbx+0x58]
  4082f5:	lea    r8,[rsp+0x28]
  4082fa:	lea    rdx,[rip+0xfffffffffffffcff]        # 0x408000
  408301:	call   0x437bd0
  408306:	mov    rax,QWORD PTR [rbx+0x68]
  40830a:	jmp    0x4082a3
  40830c:	nop    DWORD PTR [rax+0x0]
  408310:	and    edx,0x7fffffff
  408316:	shl    rdx,0x4
  40831a:	add    rdx,QWORD PTR [rcx+0x68]
  40831e:	mov    rax,QWORD PTR [rdx+0x8]
  408322:	ret    
  408323:	nop    DWORD PTR [rax]
  408326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408330:	and    edx,0x7fffffff
  408336:	shl    rdx,0x4
  40833a:	add    rdx,QWORD PTR [rcx+0x68]
  40833e:	mov    eax,DWORD PTR [rdx]
  408340:	ret    
  408341:	nop    DWORD PTR [rax+rax*1+0x0]
  408346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408350:	mov    rcx,QWORD PTR [rcx+0x58]
  408354:	jmp    0x437570
  408359:	nop    DWORD PTR [rax+0x0]
  408360:	push   rdi
  408361:	push   rbx
  408362:	sub    rsp,0x28
  408366:	xor    eax,eax
  408368:	lea    r8,[rip+0xfffffffffffffc71]        # 0x407fe0
  40836f:	xor    r9d,r9d
  408372:	lea    rdi,[rcx+0x8]
  408376:	mov    rdx,rcx
  408379:	mov    rbx,rcx
  40837c:	mov    QWORD PTR [rcx],0x0
  408383:	mov    QWORD PTR [rcx+0x68],0x0
  40838b:	and    rdi,0xfffffffffffffff8
  40838f:	sub    rdx,rdi
  408392:	add    edx,0x70
  408395:	shr    edx,0x3
  408398:	mov    ecx,edx
  40839a:	lea    rdx,[rip+0xfffffffffffffc2f]        # 0x407fd0
  4083a1:	rep stos QWORD PTR es:[rdi],rax
  4083a4:	mov    DWORD PTR [rbx+0x38],0x1
  4083ab:	mov    DWORD PTR [rbx+0x3c],0x1
  4083b2:	mov    cl,0x64
  4083b4:	call   0x437510
  4083b9:	mov    QWORD PTR [rbx+0x58],rax
  4083bd:	add    rsp,0x28
  4083c1:	pop    rbx
  4083c2:	pop    rdi
  4083c3:	ret    
  4083c4:	xchg   ax,ax
  4083c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083d0:	push   rbp
  4083d1:	push   rdi
  4083d2:	push   rsi
  4083d3:	push   rbx
  4083d4:	sub    rsp,0x28
  4083d8:	mov    eax,DWORD PTR [rcx+0xc]
  4083db:	mov    rdi,QWORD PTR [rip+0x5323a]        # 0x45b61c
  4083e2:	mov    rbp,rcx
  4083e5:	sub    eax,0x1
  4083e8:	lea    rdx,[rax+rax*4]
  4083ec:	mov    rax,QWORD PTR [rcx]
  4083ef:	lea    rbx,[rax+rdx*8]
  4083f3:	mov    eax,DWORD PTR [rbx+0x14]
  4083f6:	test   eax,eax
  4083f8:	js     0x408431
  4083fa:	mov    rsi,QWORD PTR [rbx+0x8]
  4083fe:	call   rdi
  408400:	lea    rdx,[rip+0x3cab9]        # 0x444ec0
  408407:	lea    rcx,[rax+0x60]
  40840b:	mov    r8,rsi
  40840e:	call   0x43f460
  408413:	movsxd rax,DWORD PTR [rbx+0x14]
  408417:	xor    ebx,ebx
  408419:	cmp    eax,0xffffffff
  40841c:	je     0x4083f3
  40841e:	lea    rdx,[rax+rax*4]
  408422:	mov    rax,QWORD PTR [rbp+0x0]
  408426:	lea    rbx,[rax+rdx*8]
  40842a:	mov    eax,DWORD PTR [rbx+0x14]
  40842d:	test   eax,eax
  40842f:	jns    0x4083fa
  408431:	add    rsp,0x28
  408435:	pop    rbx
  408436:	pop    rsi
  408437:	pop    rdi
  408438:	pop    rbp
  408439:	ret    
  40843a:	nop    WORD PTR [rax+rax*1+0x0]
  408440:	push   r15
  408442:	push   r14
  408444:	push   r13
  408446:	push   r12
  408448:	push   rbp
  408449:	push   rdi
  40844a:	push   rsi
  40844b:	push   rbx
  40844c:	sub    rsp,0x28
  408450:	mov    eax,DWORD PTR [rcx+0x38]
  408453:	mov    r13d,DWORD PTR [rsp+0x90]
  40845b:	cmp    edx,0x1
  40845e:	mov    rbx,rcx
  408461:	mov    edi,edx
  408463:	mov    r14d,r8d
  408466:	mov    r12,r9
  408469:	lea    ebp,[rax+0x1]
  40846c:	je     0x408555
  408472:	call   0x408010
  408477:	test   r12,r12
  40847a:	mov    rsi,rax
  40847d:	je     0x408610
  408483:	cmp    BYTE PTR [r12],0x0
  408488:	jne    0x408511
  40848e:	cmp    edi,0x3
  408491:	je     0x408516
  408497:	lea    r12,[rip+0x3ca4e]        # 0x444eec
  40849e:	cmp    edi,0x1
  4084a1:	je     0x408594
  4084a7:	mov    BYTE PTR [rsi+0x18],r14b
  4084ab:	mov    QWORD PTR [rsi+0x8],r12
  4084af:	mov    DWORD PTR [rsi+0x10],r13d
  4084b3:	mov    eax,DWORD PTR [rbx+0xc]
  4084b6:	mov    DWORD PTR [rsi],ebp
  4084b8:	sub    eax,0x1
  4084bb:	test   edi,edi
  4084bd:	mov    DWORD PTR [rbx+0x10],eax
  4084c0:	mov    BYTE PTR [rsi+0x1c],0x0
  4084c4:	mov    DWORD PTR [rbx+0x38],ebp
  4084c7:	mov    DWORD PTR [rbx+0x3c],ebp
  4084ca:	mov    DWORD PTR [rbx+0x40],0x0
  4084d1:	jne    0x408520
  4084d3:	mov    r8d,DWORD PTR [rbx+0x30]
  4084d7:	mov    eax,0xffffffff
  4084dc:	test   r8d,r8d
  4084df:	je     0x4084e7
  4084e1:	mov    eax,DWORD PTR [rbx+0xc]
  4084e4:	sub    eax,0x2
  4084e7:	mov    DWORD PTR [rsi+0x14],eax
  4084ea:	mov    edi,DWORD PTR [rbx+0x30]
  4084ed:	cmp    BYTE PTR [rbx+0x34],0x0
  4084f1:	lea    eax,[rdi+0x1]
  4084f4:	mov    DWORD PTR [rbx+0x30],eax
  4084f7:	mov    rax,rsi
  4084fa:	jne    0x408620
  408500:	add    rsp,0x28
  408504:	pop    rbx
  408505:	pop    rsi
  408506:	pop    rdi
  408507:	pop    rbp
  408508:	pop    r12
  40850a:	pop    r13
  40850c:	pop    r14
  40850e:	pop    r15
  408510:	ret    
  408511:	cmp    edi,0x3
  408514:	jne    0x40849e
  408516:	mov    edi,0x2
  40851b:	jmp    0x4084a7
  40851d:	nop    DWORD PTR [rax]
  408520:	cmp    edi,0x2
  408523:	je     0x408670
  408529:	cmp    edi,0x1
  40852c:	mov    rax,rsi
  40852f:	jne    0x408500
  408531:	sub    DWORD PTR [rbx+0x30],0x1
  408535:	movsxd rdx,DWORD PTR [rsi-0x14]
  408539:	cmp    edx,0xffffffff
  40853c:	je     0x4086a0
  408542:	mov    rcx,QWORD PTR [rbx]
  408545:	lea    rdx,[rdx+rdx*4]
  408549:	lea    rdx,[rcx+rdx*8]
  40854d:	mov    edx,DWORD PTR [rdx+0x14]
  408550:	mov    DWORD PTR [rsi+0x14],edx
  408553:	jmp    0x408500
  408555:	mov    eax,DWORD PTR [rcx+0xc]
  408558:	mov    r9,QWORD PTR [rcx]
  40855b:	sub    eax,0x1
  40855e:	lea    rax,[rax+rax*4]
  408562:	lea    rax,[r9+rax*8]
  408566:	mov    r10d,DWORD PTR [rax+0x14]
  40856a:	test   r10d,r10d
  40856d:	js     0x408680
  408573:	mov    edx,0x1
  408578:	call   0x408010
  40857d:	test   r12,r12
  408580:	mov    rsi,rax
  408583:	je     0x4086b0
  408589:	cmp    BYTE PTR [r12],0x0
  40858e:	je     0x408497
  408594:	movsxd rax,DWORD PTR [rsi-0x14]
  408598:	test   eax,eax
  40859a:	js     0x4086c0
  4085a0:	lea    rdx,[rax+rax*4]
  4085a4:	mov    rax,QWORD PTR [rbx]
  4085a7:	test   r12,r12
  4085aa:	lea    r15,[rax+rdx*8]
  4085ae:	je     0x4086e0
  4085b4:	mov    rcx,QWORD PTR [r15+0x8]
  4085b8:	mov    rdx,r12
  4085bb:	mov    edi,0x1
  4085c0:	call   0x435e60
  4085c5:	test   eax,eax
  4085c7:	je     0x4084a7
  4085cd:	call   QWORD PTR [rip+0x53049]        # 0x45b61c
  4085d3:	lea    rdx,[rip+0x3c926]        # 0x444f00
  4085da:	lea    rcx,[rax+0x60]
  4085de:	mov    r8,r12
  4085e1:	call   0x43f460
  4085e6:	mov    r13d,DWORD PTR [r15+0x28]
  4085ea:	movzx  ecx,BYTE PTR [r15+0x1c]
  4085ef:	sub    r13d,DWORD PTR [r15]
  4085f2:	mov    r12,QWORD PTR [r15+0x8]
  4085f6:	movzx  r14d,BYTE PTR [r15+0x18]
  4085fb:	shr    r13d,cl
  4085fe:	add    r13d,DWORD PTR [r15+0x10]
  408602:	jmp    0x4084a7
  408607:	nop    WORD PTR [rax+rax*1+0x0]
  408610:	cmp    edi,0x3
  408613:	jne    0x4084a7
  408619:	jmp    0x408516
  40861e:	xchg   ax,ax
  408620:	test   edi,edi
  408622:	mov    rbx,QWORD PTR [rip+0x52ff3]        # 0x45b61c
  408629:	je     0x408649
  40862b:	nop    DWORD PTR [rax+rax*1+0x0]
  408630:	call   rbx
  408632:	lea    rdx,[rax+0x60]
  408636:	mov    ecx,0x2e
  40863b:	call   0x43f090
  408640:	sub    edi,0x1
  408643:	jne    0x408630
  408645:	mov    r12,QWORD PTR [rsi+0x8]
  408649:	call   rbx
  40864b:	lea    rdx,[rip+0x3c8a2]        # 0x444ef4
  408652:	lea    rcx,[rax+0x60]
  408656:	mov    r8,r12
  408659:	call   0x43f460
  40865e:	mov    rax,rsi
  408661:	jmp    0x408500
  408666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408670:	mov    eax,DWORD PTR [rsi-0x14]
  408673:	mov    DWORD PTR [rsi+0x14],eax
  408676:	mov    rax,rsi
  408679:	jmp    0x408500
  40867e:	xchg   ax,ax
  408680:	test   r12,r12
  408683:	je     0x4086ea
  408685:	mov    edx,0x1
  40868a:	call   0x408010
  40868f:	mov    rsi,rax
  408692:	jmp    0x408589
  408697:	nop    WORD PTR [rax+rax*1+0x0]
  4086a0:	mov    eax,DWORD PTR ds:0x14
  4086a7:	ud2    
  4086a9:	nop    DWORD PTR [rax+0x0]
  4086b0:	mov    eax,DWORD PTR [rax-0x14]
  4086b3:	test   eax,eax
  4086b5:	jns    0x4086ce
  4086b7:	nop    WORD PTR [rax+rax*1+0x0]
  4086c0:	lea    r15,[rsi-0x28]
  4086c4:	mov    edi,0x2
  4086c9:	jmp    0x4085cd
  4086ce:	movsxd r15,eax
  4086d1:	imul   r15,r15,0x28
  4086d5:	add    r15,QWORD PTR [rbx]
  4086d8:	jmp    0x4085e6
  4086dd:	nop    DWORD PTR [rax]
  4086e0:	mov    edi,0x1
  4086e5:	jmp    0x4085e6
  4086ea:	sub    DWORD PTR [rcx+0x30],0x1
  4086ee:	xor    eax,eax
  4086f0:	jmp    0x408500
  4086f5:	nop
  4086f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408700:	cmp    QWORD PTR [rcx+0x18],0x0
  408705:	setne  al
  408708:	ret    
  408709:	nop    DWORD PTR [rax+0x0]
  408710:	push   r14
  408712:	push   r13
  408714:	push   r12
  408716:	push   rbp
  408717:	push   rdi
  408718:	push   rsi
  408719:	push   rbx
  40871a:	sub    rsp,0x20
  40871e:	mov    rdi,QWORD PTR [rcx+0x48]
  408722:	lea    rax,[rip+0x2ff27]        # 0x438650
  408729:	test   rdi,rdi
  40872c:	cmove  rdi,rax
  408730:	mov    eax,DWORD PTR [rcx+0x24]
  408733:	test   eax,eax
  408735:	je     0x4087d0
  40873b:	sub    eax,0x1
  40873e:	mov    r10,QWORD PTR [rcx+0x18]
  408742:	lea    rax,[rax+rax*4]
  408746:	lea    rax,[r10+rax*8]
  40874a:	mov    r10d,DWORD PTR [rax]
  40874d:	mov    ebp,r10d
  408750:	sub    ebp,r9d
  408753:	cmp    DWORD PTR [rcx+0x3c],ebp
  408756:	jae    0x4087f0
  40875c:	xor    eax,eax
  40875e:	cmp    r10d,ebp
  408761:	jb     0x4087b9
  408763:	mov    esi,r9d
  408766:	mov    r14,rdx
  408769:	mov    edx,0x4
  40876e:	mov    r13d,r8d
  408771:	mov    r12,rcx
  408774:	call   0x408010
  408779:	lea    edx,[rsi+rsi*1]
  40877c:	mov    rbx,rax
  40877f:	xor    ecx,ecx
  408781:	mov    DWORD PTR [rax],ebp
  408783:	mov    QWORD PTR [rax+0x8],r14
  408787:	shl    rdx,0x2
  40878b:	mov    DWORD PTR [rax+0x10],esi
  40878e:	call   rdi
  408790:	mov    r8d,esi
  408793:	mov    QWORD PTR [rbx+0x18],rax
  408797:	mov    DWORD PTR [rbx+0x20],r13d
  40879b:	shl    r8,0x2
  40879f:	xor    edx,edx
  4087a1:	mov    rcx,rax
  4087a4:	call   0x43f098
  4087a9:	mov    eax,DWORD PTR [r12+0x24]
  4087ae:	sub    eax,0x1
  4087b1:	mov    DWORD PTR [r12+0x28],eax
  4087b6:	mov    rax,rbx
  4087b9:	add    rsp,0x20
  4087bd:	pop    rbx
  4087be:	pop    rsi
  4087bf:	pop    rdi
  4087c0:	pop    rbp
  4087c1:	pop    r12
  4087c3:	pop    r13
  4087c5:	pop    r14
  4087c7:	ret    
  4087c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4087d0:	mov    ebp,0x7fffffff
  4087d5:	sub    ebp,r9d
  4087d8:	cmp    DWORD PTR [rcx+0x3c],ebp
  4087db:	jae    0x4087f0
  4087dd:	mov    r10d,0x7fffffff
  4087e3:	jmp    0x40875c
  4087e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4087f0:	xor    eax,eax
  4087f2:	add    rsp,0x20
  4087f6:	pop    rbx
  4087f7:	pop    rsi
  4087f8:	pop    rdi
  4087f9:	pop    rbp
  4087fa:	pop    r12
  4087fc:	pop    r13
  4087fe:	pop    r14
  408800:	ret    
  408801:	nop    DWORD PTR [rax+rax*1+0x0]
  408806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408810:	mov    r10,QWORD PTR [rcx+0x18]
  408814:	lea    r11d,[rdx+rdx*1]
  408818:	mov    DWORD PTR [r10+r11*4],r8d
  40881c:	mov    rax,QWORD PTR [rcx+0x18]
  408820:	lea    r8d,[r11+0x1]
  408824:	mov    DWORD PTR [rax+r8*4],r9d
  408828:	mov    eax,DWORD PTR [rcx]
  40882a:	add    eax,edx
  40882c:	ret    
  40882d:	nop    DWORD PTR [rax]
  408830:	push   r15
  408832:	push   r14
  408834:	push   r13
  408836:	push   r12
  408838:	push   rbp
  408839:	push   rdi
  40883a:	push   rsi
  40883b:	push   rbx
  40883c:	sub    rsp,0x38
  408840:	mov    eax,DWORD PTR [rcx+0xc]
  408843:	mov    r9d,DWORD PTR [rcx+0x3c]
  408847:	mov    r12d,edx
  40884a:	mov    rbx,rcx
  40884d:	mov    r14d,DWORD PTR [rcx+0x38]
  408851:	mov    r10d,r12d
  408854:	sub    eax,0x1
  408857:	lea    rdx,[rax+rax*4]
  40885b:	mov    rax,QWORD PTR [rcx]
  40885e:	lea    r11,[rax+rdx*8]
  408862:	movzx  eax,BYTE PTR [r11+0x1c]
  408867:	mov    edx,DWORD PTR [r11]
  40886a:	mov    r15d,DWORD PTR [r11+0x10]
  40886e:	sub    r9d,edx
  408871:	mov    ecx,eax
  408873:	mov    ebp,eax
  408875:	shr    r9d,cl
  408878:	add    r9d,r15d
  40887b:	sub    r10d,r9d
  40887e:	js     0x408899
  408880:	cmp    r10d,0xa
  408884:	jle    0x408970
  40888a:	imul   eax,r10d
  40888e:	cmp    eax,0x3e8
  408893:	jle    0x408970
  408899:	cmp    r8d,0x186a0
  4088a0:	ja     0x4089c0
  4088a6:	cmp    r14d,0x60000000
  4088ad:	ja     0x4089c0
  4088b3:	cmp    r8d,0x7f
  4088b7:	mov    esi,0x7
  4088bc:	mov    eax,0x1
  4088c1:	mov    r13d,0x7
  4088c7:	mov    edi,0x80
  4088cc:	jbe    0x4088e1
  4088ce:	xchg   ax,ax
  4088d0:	add    esi,0x1
  4088d3:	mov    edi,eax
  4088d5:	mov    ecx,esi
  4088d7:	shl    edi,cl
  4088d9:	cmp    r8d,edi
  4088dc:	jae    0x4088d0
  4088de:	mov    r13d,esi
  4088e1:	shr    r10d,0x1f
  4088e5:	test   r10b,r10b
  4088e8:	jne    0x4088f3
  4088ea:	cmp    r15d,r9d
  4088ed:	je     0x4089e0
  4088f3:	movzx  r8d,BYTE PTR [r11+0x18]
  4088f8:	mov    r9,QWORD PTR [r11+0x8]
  4088fc:	mov    edx,0x2
  408901:	mov    DWORD PTR [rsp+0x20],r12d
  408906:	mov    rcx,rbx
  408909:	call   0x408440
  40890e:	mov    edx,DWORD PTR [rax]
  408910:	mov    r15d,DWORD PTR [rax+0x10]
  408914:	mov    r11,rax
  408917:	mov    eax,r12d
  40891a:	mov    ecx,esi
  40891c:	mov    BYTE PTR [r11+0x1c],r13b
  408920:	sub    eax,r15d
  408923:	shl    eax,cl
  408925:	add    eax,edx
  408927:	mov    ecx,DWORD PTR [rbx+0x24]
  40892a:	mov    edx,0x7fffffff
  40892f:	test   ecx,ecx
  408931:	je     0x408944
  408933:	lea    edx,[rcx-0x1]
  408936:	mov    rcx,QWORD PTR [rbx+0x18]
  40893a:	lea    rdx,[rdx+rdx*4]
  40893e:	lea    rdx,[rcx+rdx*8]
  408942:	mov    edx,DWORD PTR [rdx]
  408944:	cmp    eax,edx
  408946:	jae    0x4089d5
  40894c:	cmp    eax,DWORD PTR [rbx+0x38]
  40894f:	mov    DWORD PTR [rbx+0x3c],eax
  408952:	jbe    0x408957
  408954:	mov    DWORD PTR [rbx+0x38],eax
  408957:	mov    DWORD PTR [rbx+0x40],edi
  40895a:	add    rsp,0x38
  40895e:	pop    rbx
  40895f:	pop    rsi
  408960:	pop    rdi
  408961:	pop    rbp
  408962:	pop    r12
  408964:	pop    r13
  408966:	pop    r14
  408968:	pop    r15
  40896a:	ret    
  40896b:	nop    DWORD PTR [rax+rax*1+0x0]
  408970:	mov    eax,0x1
  408975:	mov    ecx,ebp
  408977:	shl    eax,cl
  408979:	cmp    eax,r8d
  40897c:	jbe    0x408899
  408982:	cmp    r8d,0x50
  408986:	ja     0x408992
  408988:	cmp    bpl,0x9
  40898c:	ja     0x408899
  408992:	cmp    r14d,0x60000000
  408999:	ja     0x408a05
  40899b:	mov    edi,DWORD PTR [rbx+0x40]
  40899e:	mov    ecx,ebp
  4089a0:	mov    eax,0x1
  4089a5:	mov    esi,r14d
  4089a8:	shl    eax,cl
  4089aa:	sub    esi,edx
  4089ac:	shl    r10d,cl
  4089af:	sub    eax,0x1
  4089b2:	and    eax,esi
  4089b4:	sub    r14d,eax
  4089b7:	lea    eax,[r14+r10*1]
  4089bb:	jmp    0x408927
  4089c0:	cmp    r14d,0x70000000
  4089c7:	ja     0x4089d5
  4089c9:	xor    r13d,r13d
  4089cc:	xor    esi,esi
  4089ce:	xor    edi,edi
  4089d0:	jmp    0x4088e1
  4089d5:	xor    eax,eax
  4089d7:	jmp    0x40895a
  4089dc:	nop    DWORD PTR [rax+0x0]
  4089e0:	mov    ecx,ebp
  4089e2:	mov    eax,0x1
  4089e7:	sub    r14d,edx
  4089ea:	shl    eax,cl
  4089ec:	mov    ecx,esi
  4089ee:	sub    eax,0x1
  4089f1:	and    r14d,eax
  4089f4:	shr    r14d,cl
  4089f7:	test   r14d,r14d
  4089fa:	je     0x408917
  408a00:	jmp    0x4088f3
  408a05:	mov    r8d,DWORD PTR [rbx+0x40]
  408a09:	test   r8d,r8d
  408a0c:	jne    0x4089c0
  408a0e:	cmp    r14d,0x70000000
  408a15:	ja     0x4089c0
  408a17:	xor    edi,edi
  408a19:	jmp    0x40899e
  408a1e:	xchg   ax,ax
  408a20:	push   rsi
  408a21:	push   rbx
  408a22:	sub    rsp,0x28
  408a26:	cmp    DWORD PTR [rcx+0x40],edx
  408a29:	mov    eax,DWORD PTR [rcx+0x3c]
  408a2c:	mov    rbx,rcx
  408a2f:	mov    esi,edx
  408a31:	ja     0x408a6c
  408a33:	cmp    edx,0x186a0
  408a39:	ja     0x408a76
  408a3b:	cmp    eax,0xbffffff
  408a40:	ja     0x408a76
  408a42:	mov    edx,DWORD PTR [rcx+0xc]
  408a45:	lea    r8d,[rsi+0x32]
  408a49:	sub    edx,0x1
  408a4c:	lea    rcx,[rdx+rdx*4]
  408a50:	mov    rdx,QWORD PTR [rbx]
  408a53:	lea    rdx,[rdx+rcx*8]
  408a57:	movzx  ecx,BYTE PTR [rdx+0x1c]
  408a5b:	sub    eax,DWORD PTR [rdx]
  408a5d:	shr    eax,cl
  408a5f:	add    eax,DWORD PTR [rdx+0x10]
  408a62:	mov    rcx,rbx
  408a65:	mov    edx,eax
  408a67:	call   0x408830
  408a6c:	add    eax,esi
  408a6e:	cmp    eax,DWORD PTR [rbx+0x38]
  408a71:	jb     0x408a76
  408a73:	mov    DWORD PTR [rbx+0x38],eax
  408a76:	add    rsp,0x28
  408a7a:	pop    rbx
  408a7b:	pop    rsi
  408a7c:	ret    
  408a7d:	nop    DWORD PTR [rax]
  408a80:	mov    r9d,0x1
  408a86:	mov    r10,rcx
  408a89:	movzx  ecx,BYTE PTR [rcx+0x1c]
  408a8d:	mov    eax,edx
  408a8f:	sub    eax,DWORD PTR [r10+0x10]
  408a93:	shl    r9d,cl
  408a96:	sub    r9d,0x1
  408a9a:	shl    eax,cl
  408a9c:	and    r8d,r9d
  408a9f:	add    eax,r8d
  408aa2:	add    eax,DWORD PTR [r10]
  408aa5:	ret    
  408aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ab0:	mov    eax,edx
  408ab2:	and    eax,0x7fffffff
  408ab7:	cmp    eax,edx
  408ab9:	je     0x408b61
  408abf:	mov    r8,QWORD PTR [rcx+0x68]
  408ac3:	shl    rax,0x4
  408ac7:	mov    edx,DWORD PTR [r8+rax*1]
  408acb:	mov    eax,edx
  408acd:	and    eax,0x7fffffff
  408ad2:	cmp    edx,eax
  408ad4:	je     0x408b68
  408ada:	shl    rax,0x4
  408ade:	mov    edx,DWORD PTR [r8+rax*1]
  408ae2:	cmp    edx,DWORD PTR [rcx+0x38]
  408ae5:	ja     0x408b71
  408aeb:	cmp    edx,0x1
  408aee:	jbe    0x408bed
  408af4:	test   rcx,rcx
  408af7:	je     0x408bed
  408afd:	mov    eax,DWORD PTR [rcx+0x10]
  408b00:	mov    r11,QWORD PTR [rcx]
  408b03:	mov    r10d,DWORD PTR [rcx+0xc]
  408b07:	mov    r9,rax
  408b0a:	lea    rax,[rax+rax*4]
  408b0e:	lea    rax,[r11+rax*8]
  408b12:	cmp    edx,DWORD PTR [rax]
  408b14:	jb     0x408bd0
  408b1a:	lea    r8d,[r9+0x1]
  408b1e:	cmp    r10d,r8d
  408b21:	je     0x408b2e
  408b23:	cmp    edx,DWORD PTR [rax+0x28]
  408b26:	mov    r8d,r9d
  408b29:	mov    r9d,r10d
  408b2c:	jae    0x408b49
  408b2e:	repz ret 
  408b30:	lea    eax,[r9+r8*1]
  408b34:	shr    eax,1
  408b36:	mov    r10d,eax
  408b39:	lea    r10,[r10+r10*4]
  408b3d:	cmp    edx,DWORD PTR [r11+r10*8]
  408b41:	cmovae r8,rax
  408b45:	cmovb  r9d,eax
  408b49:	mov    eax,r9d
  408b4c:	sub    eax,r8d
  408b4f:	cmp    eax,0x1
  408b52:	ja     0x408b30
  408b54:	lea    rax,[r8+r8*4]
  408b58:	mov    DWORD PTR [rcx+0x10],r8d
  408b5c:	lea    rax,[r11+rax*8]
  408b60:	ret    
  408b61:	xor    eax,eax
  408b63:	test   rcx,rcx
  408b66:	je     0x408b2e
  408b68:	cmp    edx,DWORD PTR [rcx+0x38]
  408b6b:	jbe    0x408aeb
  408b71:	mov    eax,DWORD PTR [rcx+0x28]
  408b74:	mov    r11,QWORD PTR [rcx+0x18]
  408b78:	mov    r9d,DWORD PTR [rcx+0x24]
  408b7c:	mov    r8,rax
  408b7f:	lea    rax,[rax+rax*4]
  408b83:	lea    r10,[r11+rax*8]
  408b87:	cmp    DWORD PTR [r10],edx
  408b8a:	ja     0x408ba7
  408b8c:	test   r8d,r8d
  408b8f:	mov    rax,r10
  408b92:	je     0x408b2e
  408b94:	cmp    DWORD PTR [r10-0x28],edx
  408b98:	ja     0x408b2e
  408b9a:	lea    r9d,[r8-0x1]
  408b9e:	xor    r8d,r8d
  408ba1:	jmp    0x408ba7
  408ba3:	lea    r8d,[rax+0x1]
  408ba7:	cmp    r9d,r8d
  408baa:	jbe    0x408be0
  408bac:	lea    eax,[r8+r9*1]
  408bb0:	shr    eax,1
  408bb2:	mov    r10d,eax
  408bb5:	lea    r10,[r10+r10*4]
  408bb9:	cmp    DWORD PTR [r11+r10*8],edx
  408bbd:	ja     0x408ba3
  408bbf:	cmp    r8d,eax
  408bc2:	mov    r9d,eax
  408bc5:	jae    0x408be0
  408bc7:	add    eax,r8d
  408bca:	jmp    0x408bb0
  408bcc:	nop    DWORD PTR [rax+0x0]
  408bd0:	xor    r8d,r8d
  408bd3:	jmp    0x408b49
  408bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  408be0:	lea    rax,[r9+r9*4]
  408be4:	mov    DWORD PTR [rcx+0x28],r9d
  408be8:	lea    rax,[r11+rax*8]
  408bec:	ret    
  408bed:	xor    eax,eax
  408bef:	ret    
  408bf0:	push   rdi
  408bf1:	push   rsi
  408bf2:	push   rbx
  408bf3:	sub    rsp,0x20
  408bf7:	mov    eax,edx
  408bf9:	mov    rsi,rcx
  408bfc:	mov    ebx,edx
  408bfe:	and    eax,0x7fffffff
  408c03:	mov    rdi,r8
  408c06:	cmp    eax,edx
  408c08:	je     0x408c29
  408c0a:	shl    rax,0x4
  408c0e:	add    rax,QWORD PTR [rcx+0x68]
  408c12:	mov    ebx,DWORD PTR [rax]
  408c14:	jmp    0x408c29
  408c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c20:	cmp    BYTE PTR [rax+0x4],0x4
  408c24:	jne    0x408c38
  408c26:	mov    ebx,DWORD PTR [rax+0x20]
  408c29:	mov    edx,ebx
  408c2b:	mov    rcx,rsi
  408c2e:	call   0x408ab0
  408c33:	test   rax,rax
  408c36:	jne    0x408c20
  408c38:	test   rdi,rdi
  408c3b:	je     0x408c40
  408c3d:	mov    QWORD PTR [rdi],rax
  408c40:	mov    eax,ebx
  408c42:	add    rsp,0x20
  408c46:	pop    rbx
  408c47:	pop    rsi
  408c48:	pop    rdi
  408c49:	ret    
  408c4a:	nop    WORD PTR [rax+rax*1+0x0]
  408c50:	test   rcx,rcx
  408c53:	je     0x408c60
  408c55:	cmp    BYTE PTR [rcx+0x4],0x4
  408c59:	sete   al
  408c5c:	ret    
  408c5d:	nop    DWORD PTR [rax]
  408c60:	xor    eax,eax
  408c62:	ret    
  408c63:	nop    DWORD PTR [rax]
  408c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c70:	sub    rsp,0x38
  408c74:	mov    eax,edx
  408c76:	mov    QWORD PTR [rsp+0x28],0x0
  408c7f:	and    eax,0x7fffffff
  408c84:	cmp    eax,edx
  408c86:	je     0x408c92
  408c88:	shl    rax,0x4
  408c8c:	add    rax,QWORD PTR [rcx+0x68]
  408c90:	mov    edx,DWORD PTR [rax]
  408c92:	xor    eax,eax
  408c94:	cmp    edx,0x1
  408c97:	jbe    0x408cb3
  408c99:	lea    r8,[rsp+0x28]
  408c9e:	call   0x408bf0
  408ca3:	mov    rdx,QWORD PTR [rsp+0x28]
  408ca8:	sub    eax,DWORD PTR [rdx]
  408caa:	movzx  ecx,BYTE PTR [rdx+0x1c]
  408cae:	shr    eax,cl
  408cb0:	add    eax,DWORD PTR [rdx+0x10]
  408cb3:	add    rsp,0x38
  408cb7:	ret    
  408cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  408cc0:	sub    rsp,0x38
  408cc4:	mov    eax,edx
  408cc6:	mov    QWORD PTR [rsp+0x28],0x0
  408ccf:	and    eax,0x7fffffff
  408cd4:	cmp    eax,edx
  408cd6:	je     0x408ce2
  408cd8:	shl    rax,0x4
  408cdc:	add    rax,QWORD PTR [rcx+0x68]
  408ce0:	mov    edx,DWORD PTR [rax]
  408ce2:	cmp    edx,0x1
  408ce5:	jbe    0x408d00
  408ce7:	lea    r8,[rsp+0x28]
  408cec:	call   0x408bf0
  408cf1:	mov    rax,QWORD PTR [rsp+0x28]
  408cf6:	mov    rax,QWORD PTR [rax+0x8]
  408cfa:	add    rsp,0x38
  408cfe:	ret    
  408cff:	nop
  408d00:	xor    eax,eax
  408d02:	jmp    0x408cfa
  408d04:	xchg   ax,ax
  408d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d10:	mov    rax,QWORD PTR [rcx+0x8]
  408d14:	mov    rax,QWORD PTR [rax]
  408d17:	ret    
  408d18:	nop    DWORD PTR [rax+rax*1+0x0]
  408d20:	push   rsi
  408d21:	push   rbx
  408d22:	sub    rsp,0x28
  408d26:	mov    eax,edx
  408d28:	mov    rsi,rcx
  408d2b:	mov    ebx,edx
  408d2d:	and    eax,0x7fffffff
  408d32:	cmp    eax,edx
  408d34:	je     0x408d40
  408d36:	shl    rax,0x4
  408d3a:	add    rax,QWORD PTR [rcx+0x68]
  408d3e:	mov    ebx,DWORD PTR [rax]
  408d40:	cmp    ebx,0x1
  408d43:	jbe    0x408d80
  408d45:	mov    edx,ebx
  408d47:	mov    rcx,rsi
  408d4a:	call   0x408ab0
  408d4f:	test   rax,rax
  408d52:	je     0x408d80
  408d54:	cmp    BYTE PTR [rax+0x4],0x4
  408d58:	jne    0x408d89
  408d5a:	sub    ebx,DWORD PTR [rax]
  408d5c:	mov    rdx,QWORD PTR [rax+0x18]
  408d60:	add    ebx,ebx
  408d62:	mov    ebx,DWORD PTR [rdx+rbx*4]
  408d65:	cmp    ebx,0x1
  408d68:	ja     0x408d45
  408d6a:	mov    ebx,DWORD PTR [rax+0x20]
  408d6d:	mov    rcx,rsi
  408d70:	mov    edx,ebx
  408d72:	call   0x408ab0
  408d77:	test   rax,rax
  408d7a:	jne    0x408d54
  408d7c:	nop    DWORD PTR [rax+0x0]
  408d80:	xor    eax,eax
  408d82:	add    rsp,0x28
  408d86:	pop    rbx
  408d87:	pop    rsi
  408d88:	ret    
  408d89:	movzx  eax,BYTE PTR [rax+0x18]
  408d8d:	jmp    0x408d82
  408d8f:	nop
  408d90:	mov    r8d,edx
  408d93:	and    r8d,0x7fffffff
  408d9a:	cmp    r8d,edx
  408d9d:	je     0x408db2
  408d9f:	shl    r8,0x4
  408da3:	add    r8,QWORD PTR [rcx+0x68]
  408da7:	mov    r8d,DWORD PTR [r8]
  408daa:	cmp    DWORD PTR [rcx+0x38],r8d
  408dae:	setb   al
  408db1:	ret    
  408db2:	xor    eax,eax
  408db4:	test   rcx,rcx
  408db7:	jne    0x408daa
  408db9:	repz ret 
  408dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  408dc0:	push   rdi
  408dc1:	push   rsi
  408dc2:	push   rbx
  408dc3:	sub    rsp,0x20
  408dc7:	mov    eax,edx
  408dc9:	mov    rsi,rcx
  408dcc:	mov    ebx,edx
  408dce:	and    eax,0x7fffffff
  408dd3:	mov    rdi,r9
  408dd6:	cmp    eax,edx
  408dd8:	je     0x408de4
  408dda:	shl    rax,0x4
  408dde:	add    rax,QWORD PTR [rcx+0x68]
  408de2:	mov    ebx,DWORD PTR [rax]
  408de4:	cmp    ebx,0x1
  408de7:	jbe    0x408e03
  408de9:	cmp    r8d,0x1
  408ded:	je     0x408e90
  408df3:	cmp    r8d,0x2
  408df7:	je     0x408e20
  408df9:	test   r8d,r8d
  408dfc:	je     0x408e74
  408dfe:	call   0x43f180
  408e03:	test   rdi,rdi
  408e06:	je     0x408e0f
  408e08:	mov    QWORD PTR [rdi],0x0
  408e0f:	mov    eax,ebx
  408e11:	add    rsp,0x20
  408e15:	pop    rbx
  408e16:	pop    rsi
  408e17:	pop    rdi
  408e18:	ret    
  408e19:	nop    DWORD PTR [rax+0x0]
  408e20:	mov    eax,ebx
  408e22:	and    eax,0x7fffffff
  408e27:	cmp    ebx,eax
  408e29:	je     0x408e53
  408e2b:	shl    rax,0x4
  408e2f:	add    rax,QWORD PTR [rsi+0x68]
  408e33:	mov    ebx,DWORD PTR [rax]
  408e35:	jmp    0x408e53
  408e37:	nop    WORD PTR [rax+rax*1+0x0]
  408e40:	cmp    BYTE PTR [rax+0x4],0x4
  408e44:	jne    0x408e62
  408e46:	sub    ebx,DWORD PTR [rax]
  408e48:	mov    rax,QWORD PTR [rax+0x18]
  408e4c:	lea    edx,[rbx+rbx*1+0x1]
  408e50:	mov    ebx,DWORD PTR [rax+rdx*4]
  408e53:	mov    edx,ebx
  408e55:	mov    rcx,rsi
  408e58:	call   0x408ab0
  408e5d:	test   rax,rax
  408e60:	jne    0x408e40
  408e62:	test   rdi,rdi
  408e65:	je     0x408e0f
  408e67:	mov    QWORD PTR [rdi],rax
  408e6a:	mov    eax,ebx
  408e6c:	add    rsp,0x20
  408e70:	pop    rbx
  408e71:	pop    rsi
  408e72:	pop    rdi
  408e73:	ret    
  408e74:	mov    r8,rdi
  408e77:	mov    edx,ebx
  408e79:	mov    rcx,rsi
  408e7c:	add    rsp,0x20
  408e80:	pop    rbx
  408e81:	pop    rsi
  408e82:	pop    rdi
  408e83:	jmp    0x408bf0
  408e88:	nop    DWORD PTR [rax+rax*1+0x0]
  408e90:	mov    eax,ebx
  408e92:	and    eax,0x7fffffff
  408e97:	cmp    ebx,eax
  408e99:	je     0x408ec1
  408e9b:	shl    rax,0x4
  408e9f:	add    rax,QWORD PTR [rsi+0x68]
  408ea3:	mov    ebx,DWORD PTR [rax]
  408ea5:	jmp    0x408ec1
  408ea7:	nop    WORD PTR [rax+rax*1+0x0]
  408eb0:	cmp    BYTE PTR [rax+0x4],0x4
  408eb4:	jne    0x408e62
  408eb6:	sub    ebx,DWORD PTR [rax]
  408eb8:	mov    rax,QWORD PTR [rax+0x18]
  408ebc:	add    ebx,ebx
  408ebe:	mov    ebx,DWORD PTR [rax+rbx*4]
  408ec1:	mov    edx,ebx
  408ec3:	mov    rcx,rsi
  408ec6:	call   0x408ab0
  408ecb:	test   rax,rax
  408ece:	jne    0x408eb0
  408ed0:	jmp    0x408e62
  408ed2:	nop    DWORD PTR [rax+0x0]
  408ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ee0:	push   r13
  408ee2:	push   r12
  408ee4:	push   rbp
  408ee5:	push   rdi
  408ee6:	push   rsi
  408ee7:	push   rbx
  408ee8:	sub    rsp,0x28
  408eec:	mov    esi,edx
  408eee:	mov    rdi,rcx
  408ef1:	mov    r12d,edx
  408ef4:	and    esi,0x7fffffff
  408efa:	mov    r13d,r8d
  408efd:	cmp    edx,esi
  408eff:	je     0x408f0b
  408f01:	shl    rsi,0x4
  408f05:	add    rsi,QWORD PTR [rcx+0x68]
  408f09:	mov    esi,DWORD PTR [rsi]
  408f0b:	mov    ebx,r13d
  408f0e:	and    ebx,0x7fffffff
  408f14:	cmp    r13d,ebx
  408f17:	je     0x408f23
  408f19:	shl    rbx,0x4
  408f1d:	add    rbx,QWORD PTR [rdi+0x68]
  408f21:	mov    ebx,DWORD PTR [rbx]
  408f23:	cmp    esi,ebx
  408f25:	je     0x4090a0
  408f2b:	mov    ecx,esi
  408f2d:	and    ecx,0x7fffffff
  408f33:	cmp    esi,ecx
  408f35:	je     0x409070
  408f3b:	shl    rcx,0x4
  408f3f:	add    rcx,QWORD PTR [rdi+0x68]
  408f43:	mov    eax,DWORD PTR [rcx]
  408f45:	xor    ebp,ebp
  408f47:	cmp    DWORD PTR [rdi+0x38],eax
  408f4a:	jb     0x409002
  408f50:	mov    edx,ebx
  408f52:	and    edx,0x7fffffff
  408f58:	cmp    edx,ebx
  408f5a:	mov    eax,edx
  408f5c:	je     0x408f68
  408f5e:	shl    rax,0x4
  408f62:	add    rax,QWORD PTR [rdi+0x68]
  408f66:	mov    edx,DWORD PTR [rax]
  408f68:	cmp    DWORD PTR [rdi+0x38],edx
  408f6b:	jb     0x408f80
  408f6d:	mov    eax,ebx
  408f6f:	sub    eax,esi
  408f71:	add    rsp,0x28
  408f75:	pop    rbx
  408f76:	pop    rsi
  408f77:	pop    rdi
  408f78:	pop    rbp
  408f79:	pop    r12
  408f7b:	pop    r13
  408f7d:	ret    
  408f7e:	xchg   ax,ax
  408f80:	xor    r9d,r9d
  408f83:	xor    r8d,r8d
  408f86:	mov    edx,ebx
  408f88:	mov    rcx,rdi
  408f8b:	call   0x408dc0
  408f90:	cmp    eax,esi
  408f92:	mov    ebx,eax
  408f94:	jne    0x408f6d
  408f96:	test   bpl,bpl
  408f99:	je     0x408f6d
  408f9b:	mov    edx,r12d
  408f9e:	mov    rcx,rdi
  408fa1:	call   0x408ab0
  408fa6:	mov    edx,r13d
  408fa9:	mov    rcx,rdi
  408fac:	mov    rsi,rax
  408faf:	call   0x408ab0
  408fb4:	mov    rbp,rax
  408fb7:	nop    WORD PTR [rax+rax*1+0x0]
  408fc0:	test   rsi,rsi
  408fc3:	je     0x408ffd
  408fc5:	cmp    BYTE PTR [rsi+0x4],0x4
  408fc9:	jne    0x409050
  408fcf:	test   rbp,rbp
  408fd2:	je     0x408ffd
  408fd4:	cmp    rsi,rbp
  408fd7:	je     0x409050
  408fd9:	cmp    BYTE PTR [rbp+0x4],0x4
  408fdd:	jne    0x409050
  408fdf:	mov    eax,DWORD PTR [rbp+0x0]
  408fe2:	cmp    DWORD PTR [rsi],eax
  408fe4:	jae    0x409030
  408fe6:	mov    r12d,DWORD PTR [rsi+0x20]
  408fea:	mov    rcx,rdi
  408fed:	mov    edx,r12d
  408ff0:	call   0x408ab0
  408ff5:	mov    rsi,rax
  408ff8:	test   rsi,rsi
  408ffb:	jne    0x408fc5
  408ffd:	call   0x43f180
  409002:	mov    edx,esi
  409004:	xor    r9d,r9d
  409007:	xor    r8d,r8d
  40900a:	mov    rcx,rdi
  40900d:	mov    ebp,0x1
  409012:	call   0x408dc0
  409017:	mov    edx,ebx
  409019:	mov    esi,eax
  40901b:	and    edx,0x7fffffff
  409021:	cmp    edx,ebx
  409023:	mov    eax,edx
  409025:	jne    0x408f5e
  40902b:	jmp    0x408f68
  409030:	mov    r13d,DWORD PTR [rbp+0x20]
  409034:	mov    rcx,rdi
  409037:	mov    edx,r13d
  40903a:	call   0x408ab0
  40903f:	mov    rbp,rax
  409042:	jmp    0x408fc0
  409047:	nop    WORD PTR [rax+rax*1+0x0]
  409050:	mov    eax,r13d
  409053:	sub    eax,r12d
  409056:	cmp    rsi,rbp
  409059:	jne    0x408ffd
  40905b:	add    rsp,0x28
  40905f:	pop    rbx
  409060:	pop    rsi
  409061:	pop    rdi
  409062:	pop    rbp
  409063:	pop    r12
  409065:	pop    r13
  409067:	ret    
  409068:	nop    DWORD PTR [rax+rax*1+0x0]
  409070:	test   rdi,rdi
  409073:	jne    0x409090
  409075:	mov    eax,ebx
  409077:	xor    ebp,ebp
  409079:	and    eax,0x7fffffff
  40907e:	cmp    eax,ebx
  409080:	jne    0x408f5e
  409086:	jmp    0x408f6d
  40908b:	nop    DWORD PTR [rax+rax*1+0x0]
  409090:	mov    eax,esi
  409092:	jmp    0x408f45
  409097:	nop    WORD PTR [rax+rax*1+0x0]
  4090a0:	xor    eax,eax
  4090a2:	add    rsp,0x28
  4090a6:	pop    rbx
  4090a7:	pop    rsi
  4090a8:	pop    rdi
  4090a9:	pop    rbp
  4090aa:	pop    r12
  4090ac:	pop    r13
  4090ae:	ret    
  4090af:	nop
  4090b0:	push   rdi
  4090b1:	push   rsi
  4090b2:	push   rbx
  4090b3:	sub    rsp,0x20
  4090b7:	mov    eax,edx
  4090b9:	mov    rsi,rcx
  4090bc:	mov    rdi,r8
  4090bf:	and    eax,0x7fffffff
  4090c4:	cmp    eax,edx
  4090c6:	je     0x4090d2
  4090c8:	shl    rax,0x4
  4090cc:	add    rax,QWORD PTR [rcx+0x68]
  4090d0:	mov    edx,DWORD PTR [rax]
  4090d2:	mov    rax,QWORD PTR [rdi]
  4090d5:	mov    rcx,rsi
  4090d8:	sub    edx,DWORD PTR [rax]
  4090da:	mov    rax,QWORD PTR [rax+0x18]
  4090de:	add    edx,edx
  4090e0:	mov    ebx,DWORD PTR [rax+rdx*4]
  4090e3:	mov    edx,ebx
  4090e5:	call   0x408ab0
  4090ea:	test   rax,rax
  4090ed:	je     0x409102
  4090ef:	cmp    BYTE PTR [rax+0x4],0x4
  4090f3:	jne    0x409102
  4090f5:	mov    QWORD PTR [rdi],rax
  4090f8:	mov    eax,ebx
  4090fa:	add    rsp,0x20
  4090fe:	pop    rbx
  4090ff:	pop    rsi
  409100:	pop    rdi
  409101:	ret    
  409102:	mov    rax,QWORD PTR [rdi]
  409105:	mov    rcx,rsi
  409108:	mov    ebx,DWORD PTR [rax+0x20]
  40910b:	mov    edx,ebx
  40910d:	call   0x408ab0
  409112:	mov    QWORD PTR [rdi],rax
  409115:	mov    eax,ebx
  409117:	add    rsp,0x20
  40911b:	pop    rbx
  40911c:	pop    rsi
  40911d:	pop    rdi
  40911e:	ret    
  40911f:	nop
  409120:	push   r12
  409122:	push   rbp
  409123:	push   rdi
  409124:	push   rsi
  409125:	push   rbx
  409126:	sub    rsp,0x30
  40912a:	mov    eax,edx
  40912c:	mov    rsi,rcx
  40912f:	mov    ebx,edx
  409131:	and    eax,0x7fffffff
  409136:	mov    rdi,r8
  409139:	mov    QWORD PTR [rsp+0x20],0x0
  409142:	cmp    eax,edx
  409144:	mov    QWORD PTR [rsp+0x28],0x0
  40914d:	je     0x409159
  40914f:	shl    rax,0x4
  409153:	add    rax,QWORD PTR [rcx+0x68]
  409157:	mov    ebx,DWORD PTR [rax]
  409159:	mov    edx,ebx
  40915b:	mov    rcx,rsi
  40915e:	call   0x408ab0
  409163:	test   rax,rax
  409166:	mov    QWORD PTR [rsp+0x20],rax
  40916b:	je     0x409173
  40916d:	cmp    BYTE PTR [rax+0x4],0x4
  409171:	je     0x409180
  409173:	mov    eax,ebx
  409175:	add    rsp,0x30
  409179:	pop    rbx
  40917a:	pop    rsi
  40917b:	pop    rdi
  40917c:	pop    rbp
  40917d:	pop    r12
  40917f:	ret    
  409180:	lea    rbp,[rsp+0x28]
  409185:	mov    r8d,0x1
  40918b:	mov    edx,ebx
  40918d:	mov    rcx,rsi
  409190:	mov    r9,rbp
  409193:	call   0x408dc0
  409198:	cmp    eax,0x1
  40919b:	jbe    0x4091a8
  40919d:	mov    rdx,QWORD PTR [rsp+0x28]
  4091a2:	cmp    BYTE PTR [rdx+0x18],0x0
  4091a6:	je     0x409173
  4091a8:	lea    r12,[rsp+0x20]
  4091ad:	jmp    0x4091dd
  4091af:	nop
  4091b0:	cmp    BYTE PTR [rdx+0x4],0x4
  4091b4:	jne    0x4091e7
  4091b6:	cmp    eax,0x1
  4091b9:	ja     0x409200
  4091bb:	mov    edx,ebx
  4091bd:	mov    r8,r12
  4091c0:	mov    rcx,rsi
  4091c3:	call   0x4090b0
  4091c8:	mov    r9,rbp
  4091cb:	mov    r8d,0x1
  4091d1:	mov    edx,eax
  4091d3:	mov    rcx,rsi
  4091d6:	mov    ebx,eax
  4091d8:	call   0x408dc0
  4091dd:	mov    rdx,QWORD PTR [rsp+0x20]
  4091e2:	test   rdx,rdx
  4091e5:	jne    0x4091b0
  4091e7:	test   rdi,rdi
  4091ea:	je     0x409173
  4091ec:	mov    eax,ebx
  4091ee:	mov    QWORD PTR [rdi],rdx
  4091f1:	add    rsp,0x30
  4091f5:	pop    rbx
  4091f6:	pop    rsi
  4091f7:	pop    rdi
  4091f8:	pop    rbp
  4091f9:	pop    r12
  4091fb:	ret    
  4091fc:	nop    DWORD PTR [rax+0x0]
  409200:	mov    rax,QWORD PTR [rsp+0x28]
  409205:	cmp    BYTE PTR [rax+0x18],0x0
  409209:	jne    0x4091bb
  40920b:	jmp    0x4091e7
  40920d:	nop    DWORD PTR [rax]
  409210:	sub    rsp,0x28
  409214:	mov    rax,rcx
  409217:	mov    QWORD PTR [rcx],0x0
  40921e:	mov    QWORD PTR [rcx+0x8],0x0
  409226:	mov    QWORD PTR [rcx+0x10],0x0
  40922e:	mov    QWORD PTR [rcx+0x18],0x0
  409236:	mov    ecx,r9d
  409239:	and    ecx,0x7fffffff
  40923f:	cmp    ecx,r9d
  409242:	je     0x409266
  409244:	mov    r10,QWORD PTR [rdx+0x68]
  409248:	shl    rcx,0x4
  40924c:	mov    r9d,DWORD PTR [r10+rcx*1]
  409250:	mov    ecx,r9d
  409253:	and    ecx,0x7fffffff
  409259:	shl    rcx,0x4
  40925d:	mov    rcx,QWORD PTR [r10+rcx*1+0x8]
  409262:	mov    QWORD PTR [rax+0x10],rcx
  409266:	cmp    r9d,0x1
  40926a:	jbe    0x4092c3
  40926c:	test   r8,r8
  40926f:	je     0x4092da
  409271:	mov    ecx,r9d
  409274:	and    ecx,0x7fffffff
  40927a:	cmp    r9d,ecx
  40927d:	je     0x4092d0
  40927f:	shl    rcx,0x4
  409283:	add    rcx,QWORD PTR [rdx+0x68]
  409287:	mov    ecx,DWORD PTR [rcx]
  409289:	cmp    DWORD PTR [rdx+0x38],ecx
  40928c:	jb     0x4092da
  40928e:	sub    r9d,DWORD PTR [r8]
  409291:	mov    rdx,QWORD PTR [r8+0x8]
  409295:	movzx  ecx,BYTE PTR [r8+0x1c]
  40929a:	mov    QWORD PTR [rax],rdx
  40929d:	mov    edx,r9d
  4092a0:	shr    edx,cl
  4092a2:	add    edx,DWORD PTR [r8+0x10]
  4092a6:	mov    DWORD PTR [rax+0x8],edx
  4092a9:	mov    edx,0x1
  4092ae:	shl    edx,cl
  4092b0:	sub    edx,0x1
  4092b3:	and    r9d,edx
  4092b6:	cmp    BYTE PTR [r8+0x18],0x0
  4092bb:	mov    DWORD PTR [rax+0xc],r9d
  4092bf:	setne  BYTE PTR [rax+0x18]
  4092c3:	add    rsp,0x28
  4092c7:	ret    
  4092c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4092d0:	test   rdx,rdx
  4092d3:	je     0x40928e
  4092d5:	mov    ecx,r9d
  4092d8:	jmp    0x409289
  4092da:	call   0x43f180
  4092df:	nop
  4092e0:	push   rbp
  4092e1:	push   rdi
  4092e2:	push   rsi
  4092e3:	push   rbx
  4092e4:	sub    rsp,0x88
  4092eb:	lea    rax,[rip+0x3bc43]        # 0x444f35
  4092f2:	test   rcx,rcx
  4092f5:	mov    rbx,rcx
  4092f8:	mov    rdi,rdx
  4092fb:	mov    QWORD PTR [rsp+0x50],rax
  409300:	lea    rax,[rip+0x3bc37]        # 0x444f3e
  409307:	mov    QWORD PTR [rsp+0x58],rax
  40930c:	lea    rax,[rip+0x3bc34]        # 0x444f47
  409313:	mov    QWORD PTR [rsp+0x60],rax
  409318:	lea    rax,[rip+0x3bc32]        # 0x444f51
  40931f:	mov    QWORD PTR [rsp+0x68],rax
  409324:	lea    rax,[rip+0x3bc39]        # 0x444f64
  40932b:	mov    QWORD PTR [rsp+0x70],rax
  409330:	je     0x4094a3
  409336:	mov    eax,r8d
  409339:	test   r9b,r9b
  40933c:	lea    rdx,[rax+rax*4]
  409340:	jne    0x4093f0
  409346:	mov    rax,QWORD PTR [rdi]
  409349:	lea    rsi,[rax+rdx*8]
  40934d:	movzx  eax,BYTE PTR [rsi+0x4]
  409351:	cmp    al,0x4
  409353:	jbe    0x409470
  409359:	lea    rax,[rip+0x3bbcc]        # 0x444f2c
  409360:	cmp    BYTE PTR [rsi+0x18],0x0
  409364:	lea    rcx,[rip+0x3bc65]        # 0x444fd0
  40936b:	jne    0x409374
  40936d:	lea    rcx,[rip+0x3bc60]        # 0x444fd4
  409374:	mov    QWORD PTR [rsp+0x30],rcx
  409379:	mov    QWORD PTR [rsp+0x28],rax
  40937e:	lea    rdx,[rip+0x3bc1b]        # 0x444fa0
  409385:	mov    eax,DWORD PTR [rsi]
  409387:	mov    r9,rsi
  40938a:	mov    rcx,rbx
  40938d:	mov    DWORD PTR [rsp+0x20],eax
  409391:	call   0x43f460
  409396:	mov    ebp,DWORD PTR [rsi+0x14]
  409399:	cmp    ebp,DWORD PTR [rdi+0xc]
  40939c:	jae    0x409480
  4093a2:	mov    eax,ebp
  4093a4:	mov    r9d,DWORD PTR [rsi+0x10]
  4093a8:	mov    r8,QWORD PTR [rsi+0x8]
  4093ac:	lea    rdx,[rax+rax*4]
  4093b0:	mov    rax,QWORD PTR [rdi]
  4093b3:	mov    rcx,rbx
  4093b6:	lea    rdi,[rax+rdx*8]
  4093ba:	lea    rdx,[rip+0x3bbb2]        # 0x444f73
  4093c1:	call   0x43f460
  4093c6:	test   rdi,rdi
  4093c9:	je     0x4094c6
  4093cf:	mov    r9,QWORD PTR [rdi+0x8]
  4093d3:	lea    rdx,[rip+0x3bba6]        # 0x444f80
  4093da:	mov    r8d,ebp
  4093dd:	mov    rcx,rbx
  4093e0:	call   0x43f460
  4093e5:	jmp    0x40944a
  4093e7:	nop    WORD PTR [rax+rax*1+0x0]
  4093f0:	mov    rax,QWORD PTR [rdi+0x18]
  4093f4:	lea    rsi,[rax+rdx*8]
  4093f8:	movzx  eax,BYTE PTR [rsi+0x4]
  4093fc:	cmp    al,0x4
  4093fe:	jbe    0x409464
  409400:	lea    rax,[rip+0x3bb25]        # 0x444f2c
  409407:	lea    rdi,[rip+0x3bbc6]        # 0x444fd4
  40940e:	mov    QWORD PTR [rsp+0x28],rax
  409413:	lea    rdx,[rip+0x3bb86]        # 0x444fa0
  40941a:	mov    r9,rsi
  40941d:	mov    rcx,rbx
  409420:	mov    QWORD PTR [rsp+0x30],rdi
  409425:	mov    eax,DWORD PTR [rsi]
  409427:	mov    DWORD PTR [rsp+0x20],eax
  40942b:	call   0x43f460
  409430:	mov    rax,QWORD PTR [rsi+0x8]
  409434:	mov    r9d,DWORD PTR [rsi+0x10]
  409438:	lea    rdx,[rip+0x3bb98]        # 0x444fd7
  40943f:	mov    rcx,rbx
  409442:	mov    r8,QWORD PTR [rax]
  409445:	call   0x43f460
  40944a:	lea    rdx,[rip+0x3bb47]        # 0x444f98
  409451:	mov    rcx,rbx
  409454:	add    rsp,0x88
  40945b:	pop    rbx
  40945c:	pop    rsi
  40945d:	pop    rdi
  40945e:	pop    rbp
  40945f:	jmp    0x43f460
  409464:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  409469:	jmp    0x409407
  40946b:	nop    DWORD PTR [rax+rax*1+0x0]
  409470:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  409475:	jmp    0x409360
  40947a:	nop    WORD PTR [rax+rax*1+0x0]
  409480:	mov    r9d,DWORD PTR [rsi+0x10]
  409484:	mov    r8,QWORD PTR [rsi+0x8]
  409488:	lea    rdx,[rip+0x3bae4]        # 0x444f73
  40948f:	mov    rcx,rbx
  409492:	call   0x43f460
  409497:	lea    r9,[rip+0x3ba92]        # 0x444f30
  40949e:	jmp    0x4093d3
  4094a3:	mov    DWORD PTR [rsp+0x4c],r9d
  4094a8:	mov    DWORD PTR [rsp+0x48],r8d
  4094ad:	call   QWORD PTR [rip+0x52169]        # 0x45b61c
  4094b3:	mov    r9d,DWORD PTR [rsp+0x4c]
  4094b8:	lea    rbx,[rax+0x60]
  4094bc:	mov    r8d,DWORD PTR [rsp+0x48]
  4094c1:	jmp    0x409336
  4094c6:	lea    r9,[rip+0x3ba63]        # 0x444f30
  4094cd:	jmp    0x4093d3
  4094d2:	nop    DWORD PTR [rax+0x0]
  4094d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094e0:	push   rbp
  4094e1:	push   rdi
  4094e2:	push   rsi
  4094e3:	push   rbx
  4094e4:	sub    rsp,0x78
  4094e8:	mov    eax,edx
  4094ea:	mov    rsi,rcx
  4094ed:	mov    ebx,edx
  4094ef:	and    eax,0x7fffffff
  4094f4:	mov    rdi,r8
  4094f7:	cmp    eax,edx
  4094f9:	je     0x409505
  4094fb:	shl    rax,0x4
  4094ff:	add    rax,QWORD PTR [rcx+0x68]
  409503:	mov    ebx,DWORD PTR [rax]
  409505:	test   ebx,ebx
  409507:	jne    0x409512
  409509:	add    rsp,0x78
  40950d:	pop    rbx
  40950e:	pop    rsi
  40950f:	pop    rdi
  409510:	pop    rbp
  409511:	ret    
  409512:	lea    r9,[rsp+0x68]
  409517:	mov    edx,ebx
  409519:	mov    r8d,0x2
  40951f:	mov    rcx,rsi
  409522:	call   0x408dc0
  409527:	mov    rdx,QWORD PTR [rsp+0x68]
  40952c:	test   rdx,rdx
  40952f:	je     0x4095e0
  409535:	movzx  ecx,BYTE PTR [rdx+0x1c]
  409539:	mov    r10d,eax
  40953c:	sub    r10d,DWORD PTR [rdx]
  40953f:	mov    r9d,0x1
  409545:	xor    ebp,ebp
  409547:	mov    r8,QWORD PTR [rdx+0x8]
  40954b:	shl    r9d,cl
  40954e:	mov    r11d,r10d
  409551:	sub    r9d,0x1
  409555:	shr    r11d,cl
  409558:	add    r11d,DWORD PTR [rdx+0x10]
  40955c:	and    r10d,r9d
  40955f:	cmp    BYTE PTR [rdx+0x18],0x0
  409563:	setne  bpl
  409567:	cmp    ebx,eax
  409569:	jne    0x4095c2
  40956b:	movsxd rcx,DWORD PTR [rdx+0x14]
  40956f:	cmp    ecx,0xffffffff
  409572:	je     0x4095d0
  409574:	lea    r9,[rcx+rcx*4]
  409578:	mov    rcx,QWORD PTR [rsi]
  40957b:	lea    rcx,[rcx+r9*8]
  40957f:	test   rcx,rcx
  409582:	je     0x4095d0
  409584:	mov    r9,QWORD PTR [rcx+0x8]
  409588:	xor    ecx,ecx
  40958a:	mov    QWORD PTR [rsp+0x38],rdx
  40958f:	lea    rdx,[rip+0x3ba6a]        # 0x445000
  409596:	mov    DWORD PTR [rsp+0x40],ecx
  40959a:	mov    DWORD PTR [rsp+0x50],eax
  40959e:	mov    DWORD PTR [rsp+0x48],ebx
  4095a2:	mov    rcx,rdi
  4095a5:	mov    DWORD PTR [rsp+0x30],ebp
  4095a9:	mov    DWORD PTR [rsp+0x28],r10d
  4095ae:	mov    DWORD PTR [rsp+0x20],r11d
  4095b3:	call   0x43f460
  4095b8:	nop
  4095b9:	add    rsp,0x78
  4095bd:	pop    rbx
  4095be:	pop    rsi
  4095bf:	pop    rdi
  4095c0:	pop    rbp
  4095c1:	ret    
  4095c2:	mov    ecx,0x1
  4095c7:	lea    r9,[rip+0x3ba21]        # 0x444fef
  4095ce:	jmp    0x40958a
  4095d0:	xor    ecx,ecx
  4095d2:	lea    r9,[rip+0x3ba1a]        # 0x444ff3
  4095d9:	jmp    0x40958a
  4095db:	nop    DWORD PTR [rax+rax*1+0x0]
  4095e0:	lea    r9,[rip+0x3ba07]        # 0x444fee
  4095e7:	mov    ecx,0xffffffff
  4095ec:	mov    ebp,ecx
  4095ee:	mov    r10d,ecx
  4095f1:	mov    r11d,ecx
  4095f4:	mov    r8,r9
  4095f7:	jmp    0x40958a
  4095f9:	nop    DWORD PTR [rax+0x0]
  409600:	push   r13
  409602:	push   r12
  409604:	push   rbp
  409605:	push   rdi
  409606:	push   rsi
  409607:	push   rbx
  409608:	sub    rsp,0x28
  40960c:	test   rcx,rcx
  40960f:	je     0x409690
  409611:	mov    ebx,DWORD PTR [rcx+0xc]
  409614:	test   ebx,ebx
  409616:	je     0x409690
  409618:	sub    ebx,0x1
  40961b:	js     0x409690
  40961d:	movsxd rdi,ebx
  409620:	mov    r12,r8
  409623:	mov    rbp,rdx
  409626:	lea    rsi,[rdi+rdi*4]
  40962a:	mov    r13,rcx
  40962d:	shl    rsi,0x3
  409631:	jmp    0x409643
  409633:	sub    ebx,0x1
  409636:	sub    rsi,0x28
  40963a:	sub    rdi,0x1
  40963e:	cmp    ebx,0xffffffff
  409641:	je     0x409690
  409643:	mov    rax,QWORD PTR [r13+0x0]
  409647:	mov    rcx,QWORD PTR [rax+rsi*1+0x8]
  40964c:	test   rcx,rcx
  40964f:	je     0x409633
  409651:	mov    rdx,rbp
  409654:	call   0x435e60
  409659:	test   eax,eax
  40965b:	jne    0x409633
  40965d:	mov    eax,DWORD PTR [r13+0xc]
  409661:	sub    eax,0x1
  409664:	cmp    eax,ebx
  409666:	je     0x4096a0
  409668:	mov    rdx,QWORD PTR [r13+0x0]
  40966c:	lea    rax,[rdi+rdi*4+0x5]
  409671:	lea    rax,[rdx+rax*8]
  409675:	mov    eax,DWORD PTR [rax]
  409677:	sub    eax,0x1
  40967a:	mov    DWORD PTR [r12],eax
  40967e:	mov    eax,0x1
  409683:	add    rsp,0x28
  409687:	pop    rbx
  409688:	pop    rsi
  409689:	pop    rdi
  40968a:	pop    rbp
  40968b:	pop    r12
  40968d:	pop    r13
  40968f:	ret    
  409690:	xor    eax,eax
  409692:	add    rsp,0x28
  409696:	pop    rbx
  409697:	pop    rsi
  409698:	pop    rdi
  409699:	pop    rbp
  40969a:	pop    r12
  40969c:	pop    r13
  40969e:	ret    
  40969f:	nop
  4096a0:	mov    eax,DWORD PTR [r13+0x38]
  4096a4:	jmp    0x40967a
  4096a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096b0:	push   r15
  4096b2:	push   r14
  4096b4:	push   r13
  4096b6:	push   r12
  4096b8:	push   rbp
  4096b9:	push   rdi
  4096ba:	push   rsi
  4096bb:	push   rbx
  4096bc:	sub    rsp,0x18
  4096c0:	mov    r14d,DWORD PTR [rcx+0xc]
  4096c4:	mov    r15d,DWORD PTR [rcx+0x8]
  4096c8:	xor    r8d,r8d
  4096cb:	mov    rsi,QWORD PTR [rcx+0x18]
  4096cf:	xor    edi,edi
  4096d1:	mov    r12d,DWORD PTR [rcx+0x24]
  4096d5:	lea    eax,[r14+r14*4]
  4096d9:	lea    r13d,[r15+r15*4]
  4096dd:	shl    eax,0x3
  4096e0:	shl    r13d,0x3
  4096e4:	mov    DWORD PTR [rsp+0x8],eax
  4096e8:	mov    eax,DWORD PTR [rcx+0x20]
  4096eb:	lea    eax,[rax+rax*4]
  4096ee:	shl    eax,0x3
  4096f1:	test   rsi,rsi
  4096f4:	mov    DWORD PTR [rsp+0xc],eax
  4096f8:	je     0x409749
  4096fa:	lea    eax,[r12-0x1]
  4096ff:	xor    r8d,r8d
  409702:	xor    edi,edi
  409704:	lea    rax,[rax+rax*4]
  409708:	lea    rbp,[rsi+rax*8]
  40970c:	nop    DWORD PTR [rax+0x0]
  409710:	cmp    rsi,rbp
  409713:	ja     0x409749
  409715:	mov    ebx,DWORD PTR [rsi+0x10]
  409718:	lea    edi,[rdi+rbx*8]
  40971b:	add    ebx,ebx
  40971d:	je     0x409743
  40971f:	mov    rcx,QWORD PTR [rsi+0x18]
  409723:	xor    eax,eax
  409725:	lea    r9d,[rax+0x1]
  409729:	mov    r10d,eax
  40972c:	lea    r11d,[r8+0x4]
  409730:	mov    r9d,DWORD PTR [rcx+r9*4]
  409734:	cmp    DWORD PTR [rcx+r10*4],r9d
  409738:	cmove  r8d,r11d
  40973c:	add    eax,0x2
  40973f:	cmp    eax,ebx
  409741:	jb     0x409725
  409743:	add    rsi,0x28
  409747:	jne    0x409710
  409749:	mov    eax,DWORD PTR [rsp+0x8]
  40974d:	mov    DWORD PTR [rdx],r15d
  409750:	mov    DWORD PTR [rdx+0x4],r14d
  409754:	mov    DWORD PTR [rdx+0x8],r13d
  409758:	mov    DWORD PTR [rdx+0x18],r12d
  40975c:	mov    DWORD PTR [rdx+0x24],edi
  40975f:	mov    DWORD PTR [rdx+0xc],eax
  409762:	mov    rax,QWORD PTR [rip+0x47f97]        # 0x451700
  409769:	mov    DWORD PTR [rdx+0x28],r8d
  40976d:	mov    eax,DWORD PTR [rax]
  40976f:	mov    DWORD PTR [rdx+0x10],eax
  409772:	mov    rax,QWORD PTR [rip+0x47f97]        # 0x451710
  409779:	mov    eax,DWORD PTR [rax]
  40977b:	mov    DWORD PTR [rdx+0x14],eax
  40977e:	mov    eax,DWORD PTR [rsp+0xc]
  409782:	mov    DWORD PTR [rdx+0x1c],eax
  409785:	lea    eax,[r12+r12*4]
  409789:	shl    eax,0x3
  40978c:	mov    DWORD PTR [rdx+0x20],eax
  40978f:	add    rsp,0x18
  409793:	pop    rbx
  409794:	pop    rsi
  409795:	pop    rdi
  409796:	pop    rbp
  409797:	pop    r12
  409799:	pop    r13
  40979b:	pop    r14
  40979d:	pop    r15
  40979f:	ret    
  4097a0:	push   r12
  4097a2:	push   rbp
  4097a3:	push   rdi
  4097a4:	push   rsi
  4097a5:	push   rbx
  4097a6:	sub    rsp,0x20
  4097aa:	test   rdx,rdx
  4097ad:	mov    rdi,rcx
  4097b0:	mov    rbx,rdx
  4097b3:	mov    r12d,r8d
  4097b6:	mov    ebp,r9d
  4097b9:	je     0x409819
  4097bb:	test   rcx,rcx
  4097be:	je     0x4098d2
  4097c4:	mov    r8d,DWORD PTR [rbx+0xc]
  4097c8:	lea    rdx,[rip+0x3b862]        # 0x445031
  4097cf:	mov    rcx,rdi
  4097d2:	call   0x43f460
  4097d7:	mov    r8d,DWORD PTR [rbx+0x24]
  4097db:	lea    rdx,[rip+0x3b868]        # 0x44504a
  4097e2:	mov    rcx,rdi
  4097e5:	call   0x43f460
  4097ea:	mov    r8d,DWORD PTR [rbx+0x30]
  4097ee:	lea    rdx,[rip+0x3b86e]        # 0x445063
  4097f5:	mov    rcx,rdi
  4097f8:	call   0x43f460
  4097fd:	mov    r8d,DWORD PTR [rbx+0x38]
  409801:	lea    rdx,[rip+0x3b874]        # 0x44507c
  409808:	mov    rcx,rdi
  40980b:	call   0x43f460
  409810:	test   r12d,r12d
  409813:	jne    0x409880
  409815:	test   ebp,ebp
  409817:	jne    0x409824
  409819:	add    rsp,0x20
  40981d:	pop    rbx
  40981e:	pop    rsi
  40981f:	pop    rdi
  409820:	pop    rbp
  409821:	pop    r12
  409823:	ret    
  409824:	lea    rdx,[rip+0x3b87f]        # 0x4450aa
  40982b:	mov    rcx,rdi
  40982e:	xor    esi,esi
  409830:	call   0x43f460
  409835:	mov    eax,DWORD PTR [rbx+0x24]
  409838:	test   eax,eax
  40983a:	jne    0x409845
  40983c:	jmp    0x409860
  40983e:	xchg   ax,ax
  409840:	cmp    DWORD PTR [rbx+0x24],esi
  409843:	jbe    0x409860
  409845:	mov    r8d,esi
  409848:	mov    r9d,0x1
  40984e:	mov    rdx,rbx
  409851:	mov    rcx,rdi
  409854:	add    esi,0x1
  409857:	call   0x4092e0
  40985c:	cmp    ebp,esi
  40985e:	ja     0x409840
  409860:	lea    rdx,[rip+0x3b731]        # 0x444f98
  409867:	mov    rcx,rdi
  40986a:	add    rsp,0x20
  40986e:	pop    rbx
  40986f:	pop    rsi
  409870:	pop    rdi
  409871:	pop    rbp
  409872:	pop    r12
  409874:	jmp    0x43f460
  409879:	nop    DWORD PTR [rax+0x0]
  409880:	lea    rdx,[rip+0x3b80e]        # 0x445095
  409887:	mov    rcx,rdi
  40988a:	xor    esi,esi
  40988c:	call   0x43f460
  409891:	mov    edx,DWORD PTR [rbx+0xc]
  409894:	test   edx,edx
  409896:	jne    0x4098a5
  409898:	jmp    0x4098be
  40989a:	nop    WORD PTR [rax+rax*1+0x0]
  4098a0:	cmp    DWORD PTR [rbx+0xc],esi
  4098a3:	jbe    0x4098be
  4098a5:	xor    r9d,r9d
  4098a8:	mov    r8d,esi
  4098ab:	mov    rdx,rbx
  4098ae:	mov    rcx,rdi
  4098b1:	add    esi,0x1
  4098b4:	call   0x4092e0
  4098b9:	cmp    r12d,esi
  4098bc:	ja     0x4098a0
  4098be:	lea    rdx,[rip+0x3b6d3]        # 0x444f98
  4098c5:	mov    rcx,rdi
  4098c8:	call   0x43f460
  4098cd:	jmp    0x409815
  4098d2:	call   QWORD PTR [rip+0x51d44]        # 0x45b61c
  4098d8:	lea    rdi,[rax+0x60]
  4098dc:	jmp    0x4097c4
  4098e1:	nop
  4098e2:	nop
  4098e3:	nop
  4098e4:	nop
  4098e5:	nop
  4098e6:	nop
  4098e7:	nop
  4098e8:	nop
  4098e9:	nop
  4098ea:	nop
  4098eb:	nop
  4098ec:	nop
  4098ed:	nop
  4098ee:	nop
  4098ef:	nop
  4098f0:	cmp    r8d,0x1
  4098f4:	je     0x409950
  4098f6:	cmp    r8d,0x2
  4098fa:	je     0x409942
  4098fc:	test   r8d,r8d
  4098ff:	je     0x409904
  409901:	xor    eax,eax
  409903:	ret    
  409904:	mov    rax,QWORD PTR [rcx]
  409907:	test   rax,rax
  40990a:	je     0x409901
  40990c:	test   r9,r9
  40990f:	je     0x40996b
  409911:	test   r8d,r8d
  409914:	jne    0x409930
  409916:	mov    rcx,QWORD PTR [rcx+0x20]
  40991a:	lea    rax,[rax+rdx*8]
  40991e:	lea    rcx,[rcx+rdx*4]
  409922:	mov    QWORD PTR [r9],rcx
  409925:	ret    
  409926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409930:	cmp    r8d,0x2
  409934:	je     0x409960
  409936:	cmp    r8d,0x1
  40993a:	lea    rax,[rax+rdx*8]
  40993e:	je     0x409970
  409940:	repz ret 
  409942:	mov    rax,QWORD PTR [rcx+0x8]
  409946:	jmp    0x409907
  409948:	nop    DWORD PTR [rax+rax*1+0x0]
  409950:	lea    rax,[rcx+0x10]
  409954:	jmp    0x409907
  409956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409960:	mov    rcx,QWORD PTR [rcx+0x28]
  409964:	lea    rcx,[rcx+rdx*4]
  409968:	mov    QWORD PTR [r9],rcx
  40996b:	lea    rax,[rax+rdx*8]
  40996f:	ret    
  409970:	mov    rdx,QWORD PTR [rax]
  409973:	mov    QWORD PTR [r9],rdx
  409976:	ret    
  409977:	nop    WORD PTR [rax+rax*1+0x0]
  409980:	push   rsi
  409981:	push   rbx
  409982:	sub    rsp,0x38
  409986:	cmp    BYTE PTR [rsp+0x78],0x0
  40998b:	lea    rax,[rsp+0x28]
  409990:	mov    esi,r8d
  409993:	mov    r8d,DWORD PTR [rsp+0x70]
  409998:	mov    rbx,rdx
  40999b:	mov    rdx,r9
  40999e:	mov    r9d,0x0
  4099a4:	mov    QWORD PTR [rsp+0x28],0x0
  4099ad:	cmovne r9,rax
  4099b1:	call   0x4098f0
  4099b6:	mov    QWORD PTR [rax],rbx
  4099b9:	mov    rax,QWORD PTR [rsp+0x28]
  4099be:	test   rax,rax
  4099c1:	je     0x4099c5
  4099c3:	mov    DWORD PTR [rax],esi
  4099c5:	add    rsp,0x38
  4099c9:	pop    rbx
  4099ca:	pop    rsi
  4099cb:	ret    
  4099cc:	nop    DWORD PTR [rax+0x0]
  4099d0:	sub    rsp,0x38
  4099d4:	lea    r9,[rsp+0x28]
  4099d9:	mov    r8d,edx
  4099dc:	xor    edx,edx
  4099de:	mov    QWORD PTR [rsp+0x28],0x0
  4099e7:	call   0x4098f0
  4099ec:	test   rax,rax
  4099ef:	je     0x409a00
  4099f1:	mov    rax,QWORD PTR [rsp+0x28]
  4099f6:	add    rsp,0x38
  4099fa:	ret    
  4099fb:	nop    DWORD PTR [rax+rax*1+0x0]
  409a00:	xor    eax,eax
  409a02:	jmp    0x4099f6
  409a04:	xchg   ax,ax
  409a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a10:	push   rdi
  409a11:	push   rsi
  409a12:	push   rbx
  409a13:	sub    rsp,0x20
  409a17:	test   r8,r8
  409a1a:	mov    rsi,rcx
  409a1d:	mov    rbx,r8
  409a20:	lea    rdi,[rdx*8+0x0]
  409a28:	je     0x409a39
  409a2a:	mov    rcx,rdx
  409a2d:	shl    rcx,0x4
  409a31:	call   0x4385d0
  409a36:	mov    QWORD PTR [rbx],rax
  409a39:	mov    rdx,rdi
  409a3c:	mov    rcx,rsi
  409a3f:	add    rsp,0x20
  409a43:	pop    rbx
  409a44:	pop    rsi
  409a45:	pop    rdi
  409a46:	jmp    0x41a9c0
  409a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  409a50:	push   rbp
  409a51:	push   rdi
  409a52:	push   rsi
  409a53:	push   rbx
  409a54:	sub    rsp,0x28
  409a58:	mov    rsi,rcx
  409a5b:	mov    rbp,r8
  409a5e:	mov    rcx,QWORD PTR [rsp+0x78]
  409a63:	mov    rbx,QWORD PTR [rsi+0x10]
  409a67:	mov    r8d,r9d
  409a6a:	mov    r10,rbx
  409a6d:	sub    r10,QWORD PTR [rsi+0x8]
  409a71:	shr    r10,0x3
  409a75:	cmp    rbx,QWORD PTR [rsi+0x18]
  409a79:	ja     0x409abc
  409a7b:	test   rdx,rdx
  409a7e:	je     0x409aa8
  409a80:	mov    r10d,r10d
  409a83:	lea    rdi,[rdx+r10*4]
  409a87:	test   rdi,rdi
  409a8a:	je     0x409aa8
  409a8c:	test   rcx,rcx
  409a8f:	je     0x409aa5
  409a91:	mov    r9d,DWORD PTR [rsp+0x70]
  409a96:	mov    edx,DWORD PTR [rsp+0x80]
  409a9d:	call   0x408810
  409aa2:	mov    r8d,eax
  409aa5:	mov    DWORD PTR [rdi],r8d
  409aa8:	lea    rax,[rbx+0x8]
  409aac:	mov    QWORD PTR [rbx],rbp
  409aaf:	mov    QWORD PTR [rsi+0x10],rax
  409ab3:	add    rsp,0x28
  409ab7:	pop    rbx
  409ab8:	pop    rsi
  409ab9:	pop    rdi
  409aba:	pop    rbp
  409abb:	ret    
  409abc:	call   0x43f180
  409ac1:	nop
  409ac2:	nop    DWORD PTR [rax+0x0]
  409ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ad0:	push   rdi
  409ad1:	push   rbx
  409ad2:	sub    rsp,0x28
  409ad6:	mov    rax,QWORD PTR [rcx]
  409ad9:	mov    rbx,rcx
  409adc:	mov    rdx,QWORD PTR [rax]
  409adf:	test   rdx,rdx
  409ae2:	je     0x409af1
  409ae4:	mov    rax,rdx
  409ae7:	mov    QWORD PTR [rbx],rdx
  409aea:	add    rsp,0x28
  409aee:	pop    rbx
  409aef:	pop    rdi
  409af0:	ret    
  409af1:	mov    ecx,0x38
  409af6:	call   0x4385d0
  409afb:	lea    rdi,[rax+0x8]
  409aff:	mov    rcx,rax
  409b02:	mov    QWORD PTR [rax],0x0
  409b09:	mov    rdx,rax
  409b0c:	mov    QWORD PTR [rax+0x30],0x0
  409b14:	xor    eax,eax
  409b16:	and    rdi,0xfffffffffffffff8
  409b1a:	sub    rcx,rdi
  409b1d:	add    ecx,0x38
  409b20:	shr    ecx,0x3
  409b23:	rep stos QWORD PTR es:[rdi],rax
  409b26:	mov    QWORD PTR [rdx],0x0
  409b2d:	mov    rax,QWORD PTR [rbx]
  409b30:	mov    QWORD PTR [rdx+0x8],rax
  409b34:	mov    QWORD PTR [rax],rdx
  409b37:	mov    rax,rdx
  409b3a:	mov    QWORD PTR [rbx],rdx
  409b3d:	add    rsp,0x28
  409b41:	pop    rbx
  409b42:	pop    rdi
  409b43:	ret    
  409b44:	xchg   ax,ax
  409b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b50:	push   r12
  409b52:	push   rbp
  409b53:	push   rdi
  409b54:	push   rsi
  409b55:	push   rbx
  409b56:	sub    rsp,0x20
  409b5a:	mov    rdi,QWORD PTR [rsp+0x70]
  409b5f:	test   rdx,rdx
  409b62:	mov    rsi,rdx
  409b65:	mov    r12,r8
  409b68:	mov    rbp,r9
  409b6b:	je     0x409bc0
  409b6d:	add    rcx,0x88
  409b74:	call   0x409ad0
  409b79:	mov    ecx,0x18
  409b7e:	mov    rbx,rax
  409b81:	mov    QWORD PTR [rax+0x20],r12
  409b85:	mov    DWORD PTR [rax+0x30],0x2
  409b8c:	call   0x4385d0
  409b91:	mov    QWORD PTR [rax],rsi
  409b94:	mov    QWORD PTR [rax+0x8],rbp
  409b98:	mov    QWORD PTR [rax+0x10],rbp
  409b9c:	mov    QWORD PTR [rbx+0x28],rax
  409ba0:	mov    eax,DWORD PTR [rsp+0x78]
  409ba4:	mov    QWORD PTR [rbx+0x10],rdi
  409ba8:	lea    rax,[rdi+rax*8]
  409bac:	mov    QWORD PTR [rbx+0x18],rax
  409bb0:	add    rsp,0x20
  409bb4:	pop    rbx
  409bb5:	pop    rsi
  409bb6:	pop    rdi
  409bb7:	pop    rbp
  409bb8:	pop    r12
  409bba:	ret    
  409bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  409bc0:	mov    rax,QWORD PTR [rcx+0x88]
  409bc7:	test   rax,rax
  409bca:	je     0x409b6d
  409bcc:	cmp    DWORD PTR [rax+0x30],0x2
  409bd0:	je     0x409be0
  409bd2:	mov    rsi,QWORD PTR [rax+0x28]
  409bd6:	jmp    0x409b6d
  409bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  409be0:	mov    rax,QWORD PTR [rax+0x28]
  409be4:	mov    rsi,QWORD PTR [rax]
  409be7:	jmp    0x409b6d
  409be9:	nop    DWORD PTR [rax+0x0]
  409bf0:	push   rsi
  409bf1:	push   rbx
  409bf2:	sub    rsp,0x28
  409bf6:	mov    eax,DWORD PTR [rdx]
  409bf8:	mov    rsi,rcx
  409bfb:	mov    rcx,QWORD PTR [rcx+0x38]
  409bff:	mov    rbx,rdx
  409c02:	lea    edx,[rax+0x1]
  409c05:	mov    r10,QWORD PTR [rcx+0x10]
  409c09:	mov    r9,QWORD PTR [rcx+0x18]
  409c0d:	mov    ecx,edx
  409c0f:	lea    r8,[rcx+rcx*2]
  409c13:	sub    r9,r10
  409c16:	shl    r8,0x3
  409c1a:	cmp    r9,r8
  409c1d:	jae    0x409c3e
  409c1f:	lea    rdx,[rsi+0x38]
  409c23:	mov    r8d,0x18
  409c29:	mov    rcx,rsi
  409c2c:	call   0x41ab60
  409c31:	mov    rax,QWORD PTR [rsi+0x38]
  409c35:	mov    r10,QWORD PTR [rax+0x10]
  409c39:	mov    eax,DWORD PTR [rbx]
  409c3b:	lea    edx,[rax+0x1]
  409c3e:	lea    rax,[rax+rax*2]
  409c42:	mov    DWORD PTR [rbx],edx
  409c44:	lea    rax,[r10+rax*8]
  409c48:	add    rsp,0x28
  409c4c:	pop    rbx
  409c4d:	pop    rsi
  409c4e:	ret    
  409c4f:	nop
  409c50:	push   r15
  409c52:	push   r14
  409c54:	push   r13
  409c56:	push   r12
  409c58:	push   rbp
  409c59:	push   rdi
  409c5a:	push   rsi
  409c5b:	push   rbx
  409c5c:	sub    rsp,0x48
  409c60:	mov    rbx,QWORD PTR [rcx+0x1a8]
  409c67:	mov    QWORD PTR [rsp+0x98],rdx
  409c6f:	lea    rdx,[rdx+0x14]
  409c73:	mov    r15,rcx
  409c76:	call   0x409bf0
  409c7b:	mov    rcx,r15
  409c7e:	mov    QWORD PTR [r15+0x1a8],rax
  409c85:	call   0x41bb80
  409c8a:	mov    QWORD PTR [rsp+0x38],rax
  409c8f:	movzx  eax,BYTE PTR [rax+0x4]
  409c93:	mov    QWORD PTR [r15+0x1a8],rbx
  409c9a:	cmp    al,0x35
  409c9c:	je     0x409e3a
  409ca2:	cmp    BYTE PTR [r15+0x429],0x0
  409caa:	je     0x409e60
  409cb0:	mov    rcx,QWORD PTR [rsp+0x98]
  409cb8:	movzx  r12d,WORD PTR [rcx+0x18]
  409cbd:	test   r12w,r12w
  409cc1:	je     0x409e60
  409cc7:	cmp    al,0x38
  409cc9:	je     0x409cd3
  409ccb:	cmp    al,0x3d
  409ccd:	jne    0x409e60
  409cd3:	mov    rax,QWORD PTR [rsp+0x38]
  409cd8:	mov    rbx,QWORD PTR [rax+0x10]
  409cdc:	mov    eax,DWORD PTR [rax+0x8]
  409cdf:	lea    rdi,[rbx+rax*1-0x1]
  409ce4:	add    rbx,0x1
  409ce8:	cmp    rdi,rbx
  409ceb:	jbe    0x409e60
  409cf1:	cmp    rdi,rbx
  409cf4:	mov    rbp,QWORD PTR [rip+0x478e5]        # 0x4515e0
  409cfb:	ja     0x409d0f
  409cfd:	jmp    0x409e30
  409d02:	add    rbx,0x1
  409d06:	cmp    rbx,rdi
  409d09:	je     0x409e30
  409d0f:	movzx  edx,BYTE PTR [rbx]
  409d12:	mov    rax,rdx
  409d15:	movzx  edx,WORD PTR [rbp+rdx*2+0x0]
  409d1a:	test   dh,0x2
  409d1d:	jne    0x409d41
  409d1f:	cmp    al,0x24
  409d21:	jne    0x409d02
  409d23:	cmp    BYTE PTR [r15+0x430],0x0
  409d2b:	je     0x409d02
  409d2d:	cmp    rdi,rbx
  409d30:	jbe    0x409eab
  409d36:	movzx  edx,BYTE PTR [rbx]
  409d39:	mov    rax,rdx
  409d3c:	movzx  edx,WORD PTR [rbp+rdx*2+0x0]
  409d41:	mov    r10,rbx
  409d44:	jmp    0x409d5b
  409d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d50:	movzx  edx,BYTE PTR [rbx]
  409d53:	mov    rax,rdx
  409d56:	movzx  edx,WORD PTR [rbp+rdx*2+0x0]
  409d5b:	test   dx,0x204
  409d60:	jne    0x409d78
  409d62:	cmp    al,0x24
  409d64:	jne    0x409e94
  409d6a:	cmp    BYTE PTR [r15+0x430],0x0
  409d72:	je     0x409e94
  409d78:	add    rbx,0x1
  409d7c:	cmp    rdi,rbx
  409d7f:	ja     0x409d50
  409d81:	mov    rax,rbx
  409d84:	sub    rax,r10
  409d87:	mov    r14d,eax
  409d8a:	test   r12d,r12d
  409d8d:	je     0x409e60
  409d93:	mov    rcx,QWORD PTR [rsp+0x98]
  409d9b:	mov    eax,eax
  409d9d:	mov    QWORD PTR [rsp+0x20],rdi
  409da2:	mov    QWORD PTR [rsp+0x28],rbx
  409da7:	mov    edi,r14d
  409daa:	mov    QWORD PTR [rsp+0x30],r15
  409daf:	xor    esi,esi
  409db1:	mov    ebx,r12d
  409db4:	mov    r14,rax
  409db7:	mov    r13,QWORD PTR [rcx]
  409dba:	mov    r15,r13
  409dbd:	mov    r13,r10
  409dc0:	jmp    0x409dce
  409dc2:	add    rsi,0x1
  409dc6:	cmp    ebx,esi
  409dc8:	jbe    0x409e80
  409dce:	mov    rax,QWORD PTR [r15+rsi*8]
  409dd2:	cmp    edi,DWORD PTR [rax+0x8]
  409dd5:	jne    0x409dc2
  409dd7:	mov    r12,QWORD PTR [rax]
  409dda:	mov    r8,r14
  409ddd:	mov    rcx,r13
  409de0:	mov    rdx,r12
  409de3:	call   0x43f0b0
  409de8:	test   eax,eax
  409dea:	jne    0x409dc2
  409dec:	mov    r15,QWORD PTR [rsp+0x30]
  409df1:	lea    r8,[rip+0x3b2c8]        # 0x4450c0
  409df8:	mov    r9,r12
  409dfb:	xor    edx,edx
  409dfd:	mov    rdi,QWORD PTR [rsp+0x20]
  409e02:	mov    rbx,QWORD PTR [rsp+0x28]
  409e07:	mov    rcx,r15
  409e0a:	call   0x412660
  409e0f:	cmp    rdi,rbx
  409e12:	jbe    0x409e60
  409e14:	mov    rax,QWORD PTR [rsp+0x98]
  409e1c:	cmp    rdi,rbx
  409e1f:	movzx  r12d,WORD PTR [rax+0x18]
  409e24:	ja     0x409d0f
  409e2a:	nop    WORD PTR [rax+rax*1+0x0]
  409e30:	mov    r10,rbx
  409e33:	xor    r14d,r14d
  409e36:	xor    eax,eax
  409e38:	jmp    0x409e9d
  409e3a:	mov    rcx,QWORD PTR [rsp+0x38]
  409e3f:	mov    rdx,QWORD PTR [rcx+0x8]
  409e43:	test   BYTE PTR [rdx+0x19],0x10
  409e47:	je     0x409ca2
  409e4d:	mov    BYTE PTR [rcx+0x4],0x4e
  409e51:	movzx  eax,WORD PTR [rdx+0x20]
  409e55:	mov    DWORD PTR [rcx+0x8],eax
  409e58:	nop    DWORD PTR [rax+rax*1+0x0]
  409e60:	mov    rax,QWORD PTR [rsp+0x38]
  409e65:	add    rsp,0x48
  409e69:	pop    rbx
  409e6a:	pop    rsi
  409e6b:	pop    rdi
  409e6c:	pop    rbp
  409e6d:	pop    r12
  409e6f:	pop    r13
  409e71:	pop    r14
  409e73:	pop    r15
  409e75:	ret    
  409e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e80:	mov    rdi,QWORD PTR [rsp+0x20]
  409e85:	mov    rbx,QWORD PTR [rsp+0x28]
  409e8a:	mov    r15,QWORD PTR [rsp+0x30]
  409e8f:	jmp    0x409e0f
  409e94:	mov    rax,rbx
  409e97:	sub    rax,r10
  409e9a:	mov    r14d,eax
  409e9d:	test   r12d,r12d
  409ea0:	jne    0x409d93
  409ea6:	jmp    0x409e0f
  409eab:	mov    r10,rbx
  409eae:	xor    eax,eax
  409eb0:	xor    r14d,r14d
  409eb3:	jmp    0x409d8a
  409eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  409ec0:	push   rdi
  409ec1:	push   rsi
  409ec2:	push   rbx
  409ec3:	sub    rsp,0x30
  409ec7:	movzx  eax,BYTE PTR [rdx+0x18]
  409ecb:	and    eax,0x3f
  409ece:	cmp    al,0x1
  409ed0:	je     0x409ee0
  409ed2:	mov    eax,0x1
  409ed7:	add    rsp,0x30
  409edb:	pop    rbx
  409edc:	pop    rsi
  409edd:	pop    rdi
  409ede:	ret    
  409edf:	nop
  409ee0:	test   BYTE PTR [rdx+0x19],0x1
  409ee4:	jne    0x409ed2
  409ee6:	mov    rdi,QWORD PTR [rdx+0x20]
  409eea:	test   BYTE PTR [rdi+0x1c],0x8
  409eee:	jne    0x409ed2
  409ef0:	mov    rbx,rdx
  409ef3:	mov    rsi,rcx
  409ef6:	mov    edx,DWORD PTR [rdi+0x10]
  409ef9:	mov    rcx,QWORD PTR [rcx+0x28]
  409efd:	call   0x408ab0
  409f02:	mov    eax,DWORD PTR [rax+0x14]
  409f05:	test   eax,eax
  409f07:	jns    0x409ed2
  409f09:	mov    rax,QWORD PTR [rbx]
  409f0c:	mov    r8d,DWORD PTR [rdi+0x10]
  409f10:	xor    r9d,r9d
  409f13:	mov    edx,0xe
  409f18:	mov    rcx,rsi
  409f1b:	mov    QWORD PTR [rsp+0x28],rax
  409f20:	lea    rax,[rip+0x3b1d3]        # 0x4450fa
  409f27:	mov    QWORD PTR [rsp+0x20],rax
  409f2c:	call   0x412780
  409f31:	jmp    0x409ed2
  409f33:	nop    DWORD PTR [rax]
  409f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f40:	push   r12
  409f42:	push   rbp
  409f43:	push   rdi
  409f44:	push   rsi
  409f45:	push   rbx
  409f46:	sub    rsp,0x40
  409f4a:	mov    rsi,rcx
  409f4d:	mov    ecx,DWORD PTR [rdx+0x20]
  409f50:	mov    rbx,rdx
  409f53:	cmp    ecx,0x9
  409f56:	ja     0x40a180
  409f5c:	lea    rax,[rip+0x3b2dd]        # 0x445240
  409f63:	mov    r8d,ecx
  409f66:	movsxd rdx,DWORD PTR [rax+r8*4]
  409f6a:	add    rax,rdx
  409f6d:	jmp    rax
  409f6f:	nop
  409f70:	cmp    BYTE PTR [rsi+0x494],0x0
  409f77:	je     0x409f83
  409f79:	cmp    BYTE PTR [rsi+0x10],0x0
  409f7d:	jne    0x40a1c4
  409f83:	mov    ebx,DWORD PTR [rsi+0x510]
  409f89:	lea    eax,[rbx+0x1]
  409f8c:	mov    DWORD PTR [rsi+0x510],eax
  409f92:	jmp    0x409faf
  409f94:	cmp    BYTE PTR [rsi+0x43d],0x0
  409f9b:	je     0x40a1b1
  409fa1:	mov    rcx,QWORD PTR [rsi+0x28]
  409fa5:	mov    edx,DWORD PTR [rcx+0x3c]
  409fa8:	call   0x408c70
  409fad:	mov    ebx,eax
  409faf:	mov    edx,0x15
  409fb4:	mov    rcx,rsi
  409fb7:	call   0x41abe0
  409fbc:	lea    rdx,[rip+0x3b27a]        # 0x44523d
  409fc3:	mov    r8d,ebx
  409fc6:	mov    rcx,rax
  409fc9:	mov    rdi,rax
  409fcc:	call   0x43f490
  409fd1:	mov    rax,rdi
  409fd4:	add    rsp,0x40
  409fd8:	pop    rbx
  409fd9:	pop    rsi
  409fda:	pop    rdi
  409fdb:	pop    rbp
  409fdc:	pop    r12
  409fde:	ret    
  409fdf:	nop
  409fe0:	cmp    BYTE PTR [rsi+0x425],0x0
  409fe7:	jne    0x40a200
  409fed:	cmp    QWORD PTR [rsi+0x268],0x0
  409ff5:	je     0x40a244
  409ffb:	cmp    DWORD PTR [rbx+0x20],0x1
  409fff:	je     0x40a220
  40a005:	mov    rdi,QWORD PTR [rsi+0x270]
  40a00c:	test   rdi,rdi
  40a00f:	jne    0x409fd1
  40a011:	mov    ebx,0x1
  40a016:	jmp    0x409faf
  40a018:	nop    DWORD PTR [rax+rax*1+0x0]
  40a020:	cmp    ecx,0x2
  40a023:	je     0x40a230
  40a029:	mov    rcx,QWORD PTR [rsi+0x108]
  40a030:	call   0x418880
  40a035:	test   rax,rax
  40a038:	mov    rbx,rax
  40a03b:	je     0x40a365
  40a041:	mov    rcx,rbx
  40a044:	call   0x43f028
  40a049:	lea    edx,[rax+rax*1+0x3]
  40a04d:	mov    rbp,rax
  40a050:	mov    rcx,rsi
  40a053:	call   0x41abe0
  40a058:	mov    rdi,rax
  40a05b:	mov    BYTE PTR [rax],0x22
  40a05e:	lea    rdx,[rax+0x1]
  40a062:	mov    eax,ebp
  40a064:	add    rax,rbx
  40a067:	nop    WORD PTR [rax+rax*1+0x0]
  40a070:	cmp    rbx,rax
  40a073:	je     0x40a09e
  40a075:	add    rbx,0x1
  40a079:	movzx  r8d,BYTE PTR [rbx-0x1]
  40a07e:	cmp    r8b,0x22
  40a082:	je     0x40a1a1
  40a088:	cmp    r8b,0x5c
  40a08c:	je     0x40a1a1
  40a092:	mov    BYTE PTR [rdx],r8b
  40a095:	add    rdx,0x1
  40a099:	cmp    rbx,rax
  40a09c:	jne    0x40a075
  40a09e:	mov    rax,rdi
  40a0a1:	mov    BYTE PTR [rdx],0x22
  40a0a4:	mov    BYTE PTR [rdx+0x1],0x0
  40a0a8:	add    rsp,0x40
  40a0ac:	pop    rbx
  40a0ad:	pop    rsi
  40a0ae:	pop    rdi
  40a0af:	pop    rbp
  40a0b0:	pop    r12
  40a0b2:	ret    
  40a0b3:	mov    rax,QWORD PTR [rsi+0x28]
  40a0b7:	mov    ebx,DWORD PTR [rax+0x30]
  40a0ba:	sub    ebx,0x1
  40a0bd:	jmp    0x409faf
  40a0c2:	mov    rax,QWORD PTR [rsi]
  40a0c5:	test   rax,rax
  40a0c8:	je     0x40a011
  40a0ce:	xor    ebx,ebx
  40a0d0:	cmp    BYTE PTR [rax+0x6d],0x0
  40a0d4:	sete   bl
  40a0d7:	jmp    0x409faf
  40a0dc:	nop    DWORD PTR [rax+0x0]
  40a0e0:	cmp    BYTE PTR [rsi+0x425],0x0
  40a0e7:	jne    0x40a1e0
  40a0ed:	mov    rcx,rsi
  40a0f0:	call   0x418930
  40a0f5:	mov    rdi,QWORD PTR [rax+0x58]
  40a0f9:	mov    rbx,rax
  40a0fc:	test   rdi,rdi
  40a0ff:	jne    0x40a00c
  40a105:	mov    rcx,rax
  40a108:	call   0x418940
  40a10d:	test   rax,rax
  40a110:	je     0x40a2fa
  40a116:	mov    rcx,rax
  40a119:	call   0x418890
  40a11e:	test   rax,rax
  40a121:	je     0x40a303
  40a127:	lea    rcx,[rax+0x28]
  40a12b:	call   QWORD PTR [rip+0x51563]        # 0x45b694
  40a131:	test   rax,rax
  40a134:	mov    rcx,rax
  40a137:	je     0x40a303
  40a13d:	call   0x43f178
  40a142:	mov    rcx,rax
  40a145:	mov    r12,rax
  40a148:	call   0x43f028
  40a14d:	lea    rdx,[rax+0x2]
  40a151:	mov    rcx,rsi
  40a154:	mov    rbp,rax
  40a157:	call   0x41abe0
  40a15c:	lea    rcx,[rax+0x1]
  40a160:	mov    rdi,rax
  40a163:	mov    BYTE PTR [rax],0x22
  40a166:	mov    rdx,r12
  40a169:	call   0x43f040
  40a16e:	mov    BYTE PTR [rdi+rbp*1],0x22
  40a172:	mov    QWORD PTR [rbx+0x58],rdi
  40a176:	jmp    0x40a00c
  40a17b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a180:	mov    r9,QWORD PTR [rbx]
  40a183:	lea    r8,[rip+0x3afa2]        # 0x44512c
  40a18a:	mov    edx,0x4
  40a18f:	mov    rcx,rsi
  40a192:	mov    ebx,0x1
  40a197:	call   0x412660
  40a19c:	jmp    0x409faf
  40a1a1:	mov    BYTE PTR [rdx],0x5c
  40a1a4:	mov    BYTE PTR [rdx+0x1],r8b
  40a1a8:	add    rdx,0x2
  40a1ac:	jmp    0x40a070
  40a1b1:	mov    rax,QWORD PTR [rsi+0x1a8]
  40a1b8:	mov    rcx,QWORD PTR [rsi+0x28]
  40a1bc:	mov    edx,DWORD PTR [rax-0x18]
  40a1bf:	jmp    0x409fa8
  40a1c4:	lea    r8,[rip+0x3b035]        # 0x445200
  40a1cb:	mov    edx,0x3
  40a1d0:	mov    rcx,rsi
  40a1d3:	call   0x412660
  40a1d8:	jmp    0x409f83
  40a1dd:	nop    DWORD PTR [rax]
  40a1e0:	mov    r9,QWORD PTR [rbx]
  40a1e3:	lea    r8,[rip+0x3af5e]        # 0x445148
  40a1ea:	mov    edx,0x14
  40a1ef:	mov    rcx,rsi
  40a1f2:	call   0x412690
  40a1f7:	jmp    0x40a0ed
  40a1fc:	nop    DWORD PTR [rax+0x0]
  40a200:	mov    r9,QWORD PTR [rbx]
  40a203:	lea    r8,[rip+0x3af3e]        # 0x445148
  40a20a:	mov    edx,0x14
  40a20f:	mov    rcx,rsi
  40a212:	call   0x412690
  40a217:	jmp    0x409fed
  40a21c:	nop    DWORD PTR [rax+0x0]
  40a220:	mov    rdi,QWORD PTR [rsi+0x268]
  40a227:	jmp    0x40a00c
  40a22c:	nop    DWORD PTR [rax+0x0]
  40a230:	mov    rcx,QWORD PTR [rsi+0x28]
  40a234:	mov    edx,DWORD PTR [rcx+0x3c]
  40a237:	call   0x408cc0
  40a23c:	mov    rbx,rax
  40a23f:	jmp    0x40a041
  40a244:	mov    rdi,QWORD PTR [rip+0x51411]        # 0x45b65c
  40a24b:	call   rdi
  40a24d:	xor    ecx,ecx
  40a24f:	mov    DWORD PTR [rax],0x0
  40a255:	call   QWORD PTR [rip+0x51461]        # 0x45b6bc
  40a25b:	cmp    rax,0xffffffffffffffff
  40a25f:	mov    QWORD PTR [rsp+0x38],rax
  40a264:	je     0x40a327
  40a26a:	lea    rcx,[rsp+0x38]
  40a26f:	call   QWORD PTR [rip+0x5141f]        # 0x45b694
  40a275:	test   rax,rax
  40a278:	mov    rdi,rax
  40a27b:	je     0x40a333
  40a281:	mov    rcx,rsi
  40a284:	mov    edx,0xe
  40a289:	call   0x41abe0
  40a28e:	movsxd rcx,DWORD PTR [rdi+0x10]
  40a292:	lea    rdx,[rip+0x3b567]        # 0x445800
  40a299:	mov    r9d,DWORD PTR [rdi+0xc]
  40a29d:	mov    QWORD PTR [rsi+0x268],rax
  40a2a4:	mov    r8,QWORD PTR [rdx+rcx*8]
  40a2a8:	mov    ecx,DWORD PTR [rdi+0x14]
  40a2ab:	lea    edx,[rcx+0x76c]
  40a2b1:	mov    rcx,rax
  40a2b4:	mov    DWORD PTR [rsp+0x20],edx
  40a2b8:	lea    rdx,[rip+0x3aedc]        # 0x44519b
  40a2bf:	call   0x43f490
  40a2c4:	mov    rcx,rsi
  40a2c7:	mov    edx,0xb
  40a2cc:	call   0x41abe0
  40a2d1:	mov    edx,DWORD PTR [rdi]
  40a2d3:	mov    r9d,DWORD PTR [rdi+0x4]
  40a2d7:	mov    rcx,rax
  40a2da:	mov    r8d,DWORD PTR [rdi+0x8]
  40a2de:	mov    QWORD PTR [rsi+0x270],rax
  40a2e5:	mov    DWORD PTR [rsp+0x20],edx
  40a2e9:	lea    rdx,[rip+0x3aeb8]        # 0x4451a8
  40a2f0:	call   0x43f490
  40a2f5:	jmp    0x409ffb
  40a2fa:	mov    rdi,QWORD PTR [rbx+0x58]
  40a2fe:	jmp    0x40a00c
  40a303:	lea    r8,[rip+0x3ae6e]        # 0x445178
  40a30a:	xor    edx,edx
  40a30c:	mov    rcx,rsi
  40a30f:	call   0x412860
  40a314:	lea    rax,[rip+0x3adf6]        # 0x445111
  40a31b:	mov    QWORD PTR [rbx+0x58],rax
  40a31f:	mov    rdi,rax
  40a322:	jmp    0x409fd1
  40a327:	call   rdi
  40a329:	mov    eax,DWORD PTR [rax]
  40a32b:	test   eax,eax
  40a32d:	je     0x40a26a
  40a333:	lea    r8,[rip+0x3ae86]        # 0x4451c0
  40a33a:	xor    edx,edx
  40a33c:	mov    rcx,rsi
  40a33f:	call   0x412860
  40a344:	lea    rax,[rip+0x3ae97]        # 0x4451e2
  40a34b:	mov    QWORD PTR [rsi+0x268],rax
  40a352:	lea    rax,[rip+0x3ae97]        # 0x4451f0
  40a359:	mov    QWORD PTR [rsi+0x270],rax
  40a360:	jmp    0x409ffb
  40a365:	call   0x43f180
  40a36a:	nop
  40a36b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a370:	mov    r8d,r8d
  40a373:	mov    rax,rcx
  40a376:	add    r8,rdx
  40a379:	nop    DWORD PTR [rax+0x0]
  40a380:	cmp    rdx,r8
  40a383:	je     0x40a3a6
  40a385:	add    rdx,0x1
  40a389:	movzx  r9d,BYTE PTR [rdx-0x1]
  40a38e:	cmp    r9b,0x22
  40a392:	je     0x40a3b0
  40a394:	cmp    r9b,0x5c
  40a398:	je     0x40a3b0
  40a39a:	mov    BYTE PTR [rax],r9b
  40a39d:	add    rax,0x1
  40a3a1:	cmp    rdx,r8
  40a3a4:	jne    0x40a385
  40a3a6:	ret    
  40a3a7:	nop    WORD PTR [rax+rax*1+0x0]
  40a3b0:	mov    BYTE PTR [rax],0x5c
  40a3b3:	mov    BYTE PTR [rax+0x1],r9b
  40a3b7:	add    rax,0x2
  40a3bb:	jmp    0x40a380
  40a3bd:	nop    DWORD PTR [rax]
  40a3c0:	push   rbx
  40a3c1:	sub    rsp,0x30
  40a3c5:	movzx  eax,WORD PTR [rdx+0x18]
  40a3c9:	cmp    eax,r9d
  40a3cc:	je     0x40a470
  40a3d2:	jbe    0x40a440
  40a3d4:	lea    r10d,[r9+0x1]
  40a3d8:	cmp    eax,r10d
  40a3db:	jne    0x40a410
  40a3dd:	movzx  edx,BYTE PTR [rdx+0x1c]
  40a3e1:	test   dl,0x2
  40a3e4:	je     0x40a410
  40a3e6:	cmp    BYTE PTR [rcx+0x437],0x0
  40a3ed:	mov    ebx,0x1
  40a3f2:	je     0x40a42f
  40a3f4:	and    edx,0x4
  40a3f7:	jne    0x40a42f
  40a3f9:	lea    r8,[rip+0x3ae68]        # 0x445268
  40a400:	mov    edx,0x2
  40a405:	call   0x412660
  40a40a:	jmp    0x40a42f
  40a40c:	nop    DWORD PTR [rax+0x0]
  40a410:	mov    DWORD PTR [rsp+0x28],r9d
  40a415:	mov    DWORD PTR [rsp+0x20],eax
  40a419:	mov    edx,0x3
  40a41e:	mov    r9,QWORD PTR [r8]
  40a421:	lea    r8,[rip+0x3ae70]        # 0x445298
  40a428:	xor    ebx,ebx
  40a42a:	call   0x412660
  40a42f:	mov    eax,ebx
  40a431:	add    rsp,0x30
  40a435:	pop    rbx
  40a436:	ret    
  40a437:	nop    WORD PTR [rax+rax*1+0x0]
  40a440:	mov    DWORD PTR [rsp+0x28],eax
  40a444:	mov    DWORD PTR [rsp+0x20],r9d
  40a449:	mov    edx,0x3
  40a44e:	mov    r9,QWORD PTR [r8]
  40a451:	lea    r8,[rip+0x3ae78]        # 0x4452d0
  40a458:	xor    ebx,ebx
  40a45a:	call   0x412660
  40a45f:	mov    eax,ebx
  40a461:	add    rsp,0x30
  40a465:	pop    rbx
  40a466:	ret    
  40a467:	nop    WORD PTR [rax+rax*1+0x0]
  40a470:	mov    ebx,0x1
  40a475:	mov    eax,ebx
  40a477:	add    rsp,0x30
  40a47b:	pop    rbx
  40a47c:	ret    
  40a47d:	nop    DWORD PTR [rax]
  40a480:	push   rdi
  40a481:	push   rsi
  40a482:	push   rbx
  40a483:	sub    rsp,0x20
  40a487:	test   rdx,rdx
  40a48a:	mov    rsi,rdx
  40a48d:	mov    rdi,r8
  40a490:	mov    ebx,r9d
  40a493:	je     0x40a4d0
  40a495:	add    rcx,0x88
  40a49c:	call   0x409ad0
  40a4a1:	mov    r9d,ebx
  40a4a4:	mov    DWORD PTR [rax+0x30],0x1
  40a4ab:	mov    QWORD PTR [rax+0x28],rsi
  40a4af:	lea    rdx,[r9+r9*2]
  40a4b3:	mov    QWORD PTR [rax+0x20],0x0
  40a4bb:	mov    QWORD PTR [rax+0x10],rdi
  40a4bf:	lea    rdx,[rdi+rdx*8]
  40a4c3:	mov    QWORD PTR [rax+0x18],rdx
  40a4c7:	add    rsp,0x20
  40a4cb:	pop    rbx
  40a4cc:	pop    rsi
  40a4cd:	pop    rdi
  40a4ce:	ret    
  40a4cf:	nop
  40a4d0:	mov    rax,QWORD PTR [rcx+0x88]
  40a4d7:	test   rax,rax
  40a4da:	je     0x40a495
  40a4dc:	cmp    DWORD PTR [rax+0x30],0x2
  40a4e0:	je     0x40a4f0
  40a4e2:	mov    rsi,QWORD PTR [rax+0x28]
  40a4e6:	jmp    0x40a495
  40a4e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a4f0:	mov    rax,QWORD PTR [rax+0x28]
  40a4f4:	mov    rsi,QWORD PTR [rax]
  40a4f7:	jmp    0x40a495
  40a4f9:	nop    DWORD PTR [rax+0x0]
  40a500:	push   rbp
  40a501:	push   r12
  40a503:	push   rdi
  40a504:	push   rsi
  40a505:	push   rbx
  40a506:	mov    rbp,rsp
  40a509:	sub    rsp,0x20
  40a50d:	cmp    DWORD PTR [rdx+0x20],0x7
  40a511:	mov    rbx,rcx
  40a514:	mov    rsi,rdx
  40a517:	je     0x40a5e0
  40a51d:	call   0x409f40
  40a522:	mov    rcx,rax
  40a525:	mov    r12,rax
  40a528:	call   0x43f028
  40a52d:	lea    r9,[rax+0x1f]
  40a531:	mov    rdi,rax
  40a534:	mov    rax,r9
  40a537:	and    rax,0xfffffffffffffff0
  40a53b:	call   0x439cf0
  40a540:	sub    rsp,rax
  40a543:	mov    r8,rdi
  40a546:	mov    rdx,r12
  40a549:	lea    r10,[rsp+0x20]
  40a54e:	mov    rcx,r10
  40a551:	call   0x43f0a8
  40a556:	mov    r8,rdi
  40a559:	mov    r9d,0x1
  40a55f:	mov    rdx,rax
  40a562:	mov    BYTE PTR [rax+rdi*1],0xa
  40a566:	mov    rcx,rbx
  40a569:	call   0x4119b0
  40a56e:	mov    rcx,rbx
  40a571:	call   0x4195a0
  40a576:	mov    rcx,rbx
  40a579:	call   0x419f10
  40a57e:	mov    rcx,rbx
  40a581:	mov    QWORD PTR [rbx+0x1a8],rax
  40a588:	call   0x41bb80
  40a58d:	xor    edx,edx
  40a58f:	mov    r8,rax
  40a592:	mov    r9d,0x1
  40a598:	mov    rcx,rbx
  40a59b:	call   0x40a480
  40a5a0:	mov    rax,QWORD PTR [rbx]
  40a5a3:	mov    rdi,QWORD PTR [rax+0x20]
  40a5a7:	cmp    QWORD PTR [rax],rdi
  40a5aa:	je     0x40a5c3
  40a5ac:	mov    r9,QWORD PTR [rsi]
  40a5af:	lea    r8,[rip+0x3ab76]        # 0x44512c
  40a5b6:	mov    edx,0x4
  40a5bb:	mov    rcx,rbx
  40a5be:	call   0x412660
  40a5c3:	mov    rcx,rbx
  40a5c6:	call   0x411b00
  40a5cb:	mov    eax,0x1
  40a5d0:	mov    rsp,rbp
  40a5d3:	pop    rbx
  40a5d4:	pop    rsi
  40a5d5:	pop    rdi
  40a5d6:	pop    r12
  40a5d8:	pop    rbp
  40a5d9:	ret    
  40a5da:	nop    WORD PTR [rax+rax*1+0x0]
  40a5e0:	xor    eax,eax
  40a5e2:	cmp    BYTE PTR [rcx+0x10],0x0
  40a5e6:	jne    0x40a5d0
  40a5e8:	call   0x4121b0
  40a5ed:	mov    rsp,rbp
  40a5f0:	pop    rbx
  40a5f1:	pop    rsi
  40a5f2:	pop    rdi
  40a5f3:	pop    r12
  40a5f5:	pop    rbp
  40a5f6:	ret    
  40a5f7:	nop    WORD PTR [rax+rax*1+0x0]
  40a600:	push   rdi
  40a601:	push   rsi
  40a602:	push   rbx
  40a603:	sub    rsp,0x20
  40a607:	mov    rdi,r8
  40a60a:	mov    rsi,r9
  40a60d:	mov    rbx,rdx
  40a610:	add    rcx,0x88
  40a617:	add    rsi,rdi
  40a61a:	call   0x409ad0
  40a61f:	mov    DWORD PTR [rax+0x30],0x1
  40a626:	mov    QWORD PTR [rax+0x28],rbx
  40a62a:	mov    QWORD PTR [rax+0x20],0x0
  40a632:	mov    QWORD PTR [rax+0x10],rdi
  40a636:	mov    QWORD PTR [rax+0x18],rsi
  40a63a:	or     WORD PTR [rbx+0x18],0x800
  40a640:	add    rsp,0x20
  40a644:	pop    rbx
  40a645:	pop    rsi
  40a646:	pop    rdi
  40a647:	ret    
  40a648:	nop    DWORD PTR [rax+rax*1+0x0]
  40a650:	push   rbp
  40a651:	push   rdi
  40a652:	push   rsi
  40a653:	push   rbx
  40a654:	sub    rsp,0x28
  40a658:	mov    rbx,QWORD PTR [rcx+0x88]
  40a65f:	lea    rax,[rcx+0x50]
  40a663:	mov    rdi,rcx
  40a666:	cmp    rbx,rax
  40a669:	je     0x40a70a
  40a66f:	mov    rsi,QWORD PTR [rbx+0x28]
  40a673:	test   rsi,rsi
  40a676:	je     0x40a69c
  40a678:	cmp    DWORD PTR [rbx+0x30],0x2
  40a67c:	je     0x40a6d0
  40a67e:	mov    rax,QWORD PTR [rbx+0x8]
  40a682:	test   rax,rax
  40a685:	je     0x40a696
  40a687:	cmp    DWORD PTR [rax+0x30],0x2
  40a68b:	mov    rax,QWORD PTR [rax+0x28]
  40a68f:	je     0x40a705
  40a691:	cmp    rsi,rax
  40a694:	je     0x40a69c
  40a696:	and    WORD PTR [rsi+0x18],0xf7ff
  40a69c:	mov    rcx,QWORD PTR [rbx+0x20]
  40a6a0:	test   rcx,rcx
  40a6a3:	je     0x40a6aa
  40a6a5:	call   0x41abb0
  40a6aa:	mov    rax,QWORD PTR [rbx+0x8]
  40a6ae:	mov    rcx,rbx
  40a6b1:	mov    QWORD PTR [rdi+0x88],rax
  40a6b8:	mov    QWORD PTR [rax],0x0
  40a6bf:	add    rsp,0x28
  40a6c3:	pop    rbx
  40a6c4:	pop    rsi
  40a6c5:	pop    rdi
  40a6c6:	pop    rbp
  40a6c7:	jmp    0x43f100
  40a6cc:	nop    DWORD PTR [rax+0x0]
  40a6d0:	cmp    QWORD PTR [rbx+0x20],0x0
  40a6d5:	mov    rbp,QWORD PTR [rsi]
  40a6d8:	je     0x40a6e8
  40a6da:	mov    rcx,QWORD PTR [rsi+0x8]
  40a6de:	test   rcx,rcx
  40a6e1:	je     0x40a6e8
  40a6e3:	call   0x43f100
  40a6e8:	mov    rcx,rsi
  40a6eb:	call   0x43f100
  40a6f0:	test   rbp,rbp
  40a6f3:	mov    QWORD PTR [rbx+0x28],0x0
  40a6fb:	je     0x40a69c
  40a6fd:	mov    rsi,rbp
  40a700:	jmp    0x40a67e
  40a705:	mov    rax,QWORD PTR [rax]
  40a708:	jmp    0x40a691
  40a70a:	call   0x43f180
  40a70f:	nop
  40a710:	mov    rax,QWORD PTR [rcx+0x88]
  40a717:	cmp    DWORD PTR [rax+0x30],0x2
  40a71b:	mov    rax,QWORD PTR [rax+0x28]
  40a71f:	je     0x40a740
  40a721:	test   rax,rax
  40a724:	je     0x40a750
  40a726:	mov    rax,QWORD PTR [rax+0x20]
  40a72a:	test   rax,rax
  40a72d:	je     0x40a750
  40a72f:	movzx  eax,BYTE PTR [rax+0x1c]
  40a733:	shr    al,0x2
  40a736:	and    eax,0x1
  40a739:	ret    
  40a73a:	nop    WORD PTR [rax+rax*1+0x0]
  40a740:	mov    rax,QWORD PTR [rax]
  40a743:	test   rax,rax
  40a746:	jne    0x40a726
  40a748:	nop    DWORD PTR [rax+rax*1+0x0]
  40a750:	xor    eax,eax
  40a752:	ret    
  40a753:	nop    DWORD PTR [rax]
  40a756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a760:	add    DWORD PTR [rcx+0x1d8],edx
  40a766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a770:	sub    edx,0x1
  40a773:	cmp    edx,0xffffffff
  40a776:	je     0x40a7c0
  40a778:	mov    rax,QWORD PTR [rcx+0x1a8]
  40a77f:	mov    r8,QWORD PTR [rcx+0x1d0]
  40a786:	sub    rax,0x18
  40a78a:	cmp    rax,QWORD PTR [r8+0x10]
  40a78e:	mov    QWORD PTR [rcx+0x1a8],rax
  40a795:	jne    0x40a770
  40a797:	mov    rax,QWORD PTR [r8+0x8]
  40a79b:	test   rax,rax
  40a79e:	je     0x40a770
  40a7a0:	mov    QWORD PTR [rcx+0x1d0],rax
  40a7a7:	mov    rax,QWORD PTR [rax+0x18]
  40a7ab:	sub    edx,0x1
  40a7ae:	cmp    edx,0xffffffff
  40a7b1:	mov    QWORD PTR [rcx+0x1a8],rax
  40a7b8:	jne    0x40a778
  40a7ba:	nop    WORD PTR [rax+rax*1+0x0]
  40a7c0:	ret    
  40a7c1:	nop    DWORD PTR [rax+rax*1+0x0]
  40a7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7d0:	sub    rsp,0x28
  40a7d4:	mov    rax,QWORD PTR [rcx+0x88]
  40a7db:	cmp    QWORD PTR [rax+0x8],0x0
  40a7e0:	je     0x40a840
  40a7e2:	cmp    edx,0x1
  40a7e5:	jne    0x40a849
  40a7e7:	mov    edx,DWORD PTR [rax+0x30]
  40a7ea:	cmp    edx,0x1
  40a7ed:	je     0x40a830
  40a7ef:	test   edx,edx
  40a7f1:	je     0x40a820
  40a7f3:	cmp    edx,0x2
  40a7f6:	jne    0x40a849
  40a7f8:	sub    QWORD PTR [rax+0x10],0x8
  40a7fd:	mov    rax,QWORD PTR [rcx+0x88]
  40a804:	mov    rax,QWORD PTR [rax+0x28]
  40a808:	test   rax,rax
  40a80b:	je     0x40a849
  40a80d:	sub    QWORD PTR [rax+0x10],0x4
  40a812:	add    rsp,0x28
  40a816:	ret    
  40a817:	nop    WORD PTR [rax+rax*1+0x0]
  40a820:	sub    QWORD PTR [rax+0x10],0x8
  40a825:	add    rsp,0x28
  40a829:	ret    
  40a82a:	nop    WORD PTR [rax+rax*1+0x0]
  40a830:	sub    QWORD PTR [rax+0x10],0x18
  40a835:	add    rsp,0x28
  40a839:	ret    
  40a83a:	nop    WORD PTR [rax+rax*1+0x0]
  40a840:	add    rsp,0x28
  40a844:	jmp    0x40a760
  40a849:	call   0x43f180
  40a84e:	nop
  40a84f:	nop
  40a850:	push   rbp
  40a851:	push   r15
  40a853:	push   r14
  40a855:	push   r13
  40a857:	push   r12
  40a859:	push   rdi
  40a85a:	push   rsi
  40a85b:	push   rbx
  40a85c:	sub    rsp,0x48
  40a860:	lea    rbp,[rsp+0x80]
  40a868:	mov    rbx,rcx
  40a86b:	mov    rcx,QWORD PTR [r8]
  40a86e:	mov    rdi,r9
  40a871:	mov    DWORD PTR [rbp+0x18],edx
  40a874:	mov    rsi,r8
  40a877:	call   0x41a050
  40a87c:	mov    rcx,rdi
  40a87f:	mov    r13d,eax
  40a882:	call   0x41a050
  40a887:	lea    eax,[r13+rax*1+0x1]
  40a88c:	add    rax,0x1e
  40a890:	shr    rax,0x4
  40a894:	shl    rax,0x4
  40a898:	call   0x439cf0
  40a89d:	mov    rdx,QWORD PTR [rsi]
  40a8a0:	xor    r9d,r9d
  40a8a3:	sub    rsp,rax
  40a8a6:	mov    rcx,rbx
  40a8a9:	lea    r14,[rsp+0x40]
  40a8ae:	mov    r8,r14
  40a8b1:	call   0x41a090
  40a8b6:	mov    r15,rax
  40a8b9:	mov    rax,QWORD PTR [rsi]
  40a8bc:	mov    r8,r15
  40a8bf:	cmp    BYTE PTR [rax+0x4],0x7
  40a8c3:	je     0x40a9b4
  40a8c9:	cmp    BYTE PTR [rdi+0x4],0x51
  40a8cd:	jne    0x40a9bd
  40a8d3:	mov    rdx,r14
  40a8d6:	mov    r9d,0x1
  40a8dc:	mov    BYTE PTR [r8],0xa
  40a8e0:	mov    rcx,rbx
  40a8e3:	sub    r8,r14
  40a8e6:	call   0x4119b0
  40a8eb:	mov    rcx,rbx
  40a8ee:	call   0x4195a0
  40a8f3:	mov    rcx,rbx
  40a8f6:	call   0x419f10
  40a8fb:	mov    rcx,rbx
  40a8fe:	mov    QWORD PTR [rbx+0x1a8],rax
  40a905:	call   0x41bb80
  40a90a:	mov    r13,rax
  40a90d:	mov    rax,QWORD PTR [rbx]
  40a910:	mov    rdx,QWORD PTR [rax+0x20]
  40a914:	cmp    QWORD PTR [rax],rdx
  40a917:	je     0x40a9e0
  40a91d:	mov    rcx,rbx
  40a920:	mov    r12d,DWORD PTR [r13+0x0]
  40a924:	call   0x411b00
  40a929:	mov    edx,0x1
  40a92e:	mov    rcx,rbx
  40a931:	call   0x40a7d0
  40a936:	mov    BYTE PTR [r15],0x0
  40a93a:	mov    rax,QWORD PTR [rsi]
  40a93d:	mov    rdx,QWORD PTR [rax]
  40a940:	mov    QWORD PTR [r13+0x0],rdx
  40a944:	mov    rdx,QWORD PTR [rax+0x8]
  40a948:	mov    QWORD PTR [r13+0x8],rdx
  40a94c:	mov    rax,QWORD PTR [rax+0x10]
  40a950:	mov    QWORD PTR [r13+0x10],rax
  40a954:	mov    QWORD PTR [rsi],r13
  40a957:	xor    esi,esi
  40a959:	and    WORD PTR [r13+0x6],0xfff7
  40a95f:	cmp    DWORD PTR [rbx+0x414],0xd
  40a966:	mov    DWORD PTR [r13+0x0],r12d
  40a96a:	je     0x40a9a1
  40a96c:	mov    rdx,rdi
  40a96f:	mov    rcx,rbx
  40a972:	call   0x41cb80
  40a977:	mov    r8d,DWORD PTR [rbp+0x18]
  40a97b:	mov    QWORD PTR [rsp+0x30],rax
  40a980:	lea    rax,[rip+0x3a981]        # 0x445308
  40a987:	mov    QWORD PTR [rsp+0x28],r14
  40a98c:	xor    r9d,r9d
  40a98f:	mov    edx,0x3
  40a994:	mov    QWORD PTR [rsp+0x20],rax
  40a999:	mov    rcx,rbx
  40a99c:	call   0x412740
  40a9a1:	mov    eax,esi
  40a9a3:	lea    rsp,[rbp-0x38]
  40a9a7:	pop    rbx
  40a9a8:	pop    rsi
  40a9a9:	pop    rdi
  40a9aa:	pop    r12
  40a9ac:	pop    r13
  40a9ae:	pop    r14
  40a9b0:	pop    r15
  40a9b2:	pop    rbp
  40a9b3:	ret    
  40a9b4:	cmp    BYTE PTR [rdi+0x4],0x0
  40a9b8:	jne    0x40a9d3
  40a9ba:	mov    r8,r15
  40a9bd:	xor    r9d,r9d
  40a9c0:	mov    rdx,rdi
  40a9c3:	mov    rcx,rbx
  40a9c6:	call   0x41a090
  40a9cb:	mov    r8,rax
  40a9ce:	jmp    0x40a8d3
  40a9d3:	lea    r8,[r15+0x1]
  40a9d7:	mov    BYTE PTR [r15],0x20
  40a9db:	jmp    0x40a8c9
  40a9e0:	mov    QWORD PTR [rsi],r13
  40a9e3:	mov    rcx,rbx
  40a9e6:	mov    esi,0x1
  40a9eb:	call   0x411b00
  40a9f0:	jmp    0x40a9a1
  40a9f2:	nop    DWORD PTR [rax+0x0]
  40a9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa00:	push   r15
  40aa02:	push   r14
  40aa04:	push   r13
  40aa06:	push   r12
  40aa08:	push   rbp
  40aa09:	push   rdi
  40aa0a:	push   rsi
  40aa0b:	push   rbx
  40aa0c:	sub    rsp,0xd8
  40aa13:	mov    BYTE PTR [rcx+0x1a0],0x0
  40aa1a:	mov    BYTE PTR [rcx+0x13],0x0
  40aa1e:	mov    rsi,rcx
  40aa21:	mov    BYTE PTR [rcx+0xb4],0x1
  40aa28:	mov    QWORD PTR [rsp+0x128],rdx
  40aa30:	movzx  edx,WORD PTR [rdx+0x18]
  40aa34:	mov    QWORD PTR [rsp+0x130],r8
  40aa3c:	mov    DWORD PTR [rsp+0x138],r9d
  40aa44:	mov    eax,edx
  40aa46:	shr    ax,0x6
  40aa4a:	mov    ecx,eax
  40aa4c:	and    cx,0x84
  40aa51:	cmp    cx,0x4
  40aa55:	je     0x40acd0
  40aa5b:	test   al,0x4
  40aa5d:	jne    0x40acb0
  40aa63:	mov    rbx,QWORD PTR [rsp+0x128]
  40aa6b:	mov    rbx,QWORD PTR [rbx+0x20]
  40aa6f:	mov    rdi,rbx
  40aa72:	mov    QWORD PTR [rsp+0x58],rbx
  40aa77:	xor    ebx,ebx
  40aa79:	test   BYTE PTR [rdi+0x1c],0x1
  40aa7d:	jne    0x40ad25
  40aa83:	test   al,0x80
  40aa85:	je     0x40ac60
  40aa8b:	mov    rdi,QWORD PTR [rsp+0x128]
  40aa93:	or     eax,0x20
  40aa96:	shl    eax,0x6
  40aa99:	movzx  edi,WORD PTR [rdi+0x18]
  40aa9d:	mov    edx,edi
  40aa9f:	mov    WORD PTR [rsp+0x48],di
  40aaa4:	mov    rdi,QWORD PTR [rsp+0x128]
  40aaac:	and    edx,0x3f
  40aaaf:	or     eax,edx
  40aab1:	mov    WORD PTR [rdi+0x18],ax
  40aab5:	mov    rax,QWORD PTR [rsi+0x3e8]
  40aabc:	test   rax,rax
  40aabf:	je     0x40aad5
  40aac1:	mov    r8,QWORD PTR [rsp+0x128]
  40aac9:	mov    edx,DWORD PTR [rsp+0x138]
  40aad0:	mov    rcx,rsi
  40aad3:	call   rax
  40aad5:	mov    rdi,QWORD PTR [rsp+0x58]
  40aada:	movzx  eax,BYTE PTR [rdi+0x1c]
  40aade:	mov    BYTE PTR [rsp+0x48],al
  40aae2:	or     eax,0x8
  40aae5:	cmp    WORD PTR [rdi+0x18],0x0
  40aaea:	mov    BYTE PTR [rdi+0x1c],al
  40aaed:	jne    0x40abc1
  40aaf3:	test   al,0x20
  40aaf5:	jne    0x40b2d2
  40aafb:	mov    rax,QWORD PTR [rsp+0x58]
  40ab00:	mov    ebp,DWORD PTR [rax+0x14]
  40ab03:	mov    rdi,QWORD PTR [rax+0x8]
  40ab07:	cmp    BYTE PTR [rsi+0x43a],0x0
  40ab0e:	je     0x40add0
  40ab14:	lea    r8,[rsp+0xc8]
  40ab1c:	mov    edx,ebp
  40ab1e:	mov    rcx,rsi
  40ab21:	mov    QWORD PTR [rsp+0xc8],0x0
  40ab2d:	xor    r14d,r14d
  40ab30:	call   0x409a10
  40ab35:	mov    rcx,QWORD PTR [rsi+0x28]
  40ab39:	mov    r8d,DWORD PTR [rsp+0x138]
  40ab41:	mov    r9d,ebp
  40ab44:	mov    rdx,QWORD PTR [rsp+0x128]
  40ab4c:	mov    r12,rax
  40ab4f:	call   0x408710
  40ab54:	test   ebp,ebp
  40ab56:	mov    r13,rax
  40ab59:	je     0x40ab92
  40ab5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab60:	mov    r9d,DWORD PTR [rdi]
  40ab63:	mov    rdx,QWORD PTR [rsp+0xc8]
  40ab6b:	mov    r8,rdi
  40ab6e:	mov    DWORD PTR [rsp+0x30],r14d
  40ab73:	mov    QWORD PTR [rsp+0x28],r13
  40ab78:	mov    rcx,r12
  40ab7b:	add    r14d,0x1
  40ab7f:	add    rdi,0x18
  40ab83:	mov    DWORD PTR [rsp+0x20],r9d
  40ab88:	call   0x409a50
  40ab8d:	cmp    r14d,ebp
  40ab90:	jne    0x40ab60
  40ab92:	mov    DWORD PTR [rsp+0x28],ebp
  40ab96:	mov    rax,QWORD PTR [r12+0x8]
  40ab9b:	mov    r8,r12
  40ab9e:	mov    r9,QWORD PTR [rsp+0xc8]
  40aba6:	mov    rdx,QWORD PTR [rsp+0x128]
  40abae:	mov    rcx,rsi
  40abb1:	mov    QWORD PTR [rsp+0x20],rax
  40abb6:	call   0x409b50
  40abbb:	add    DWORD PTR [rip+0x4e75f],ebp        # 0x459320
  40abc1:	test   rbx,rbx
  40abc4:	je     0x40adf5
  40abca:	cmp    BYTE PTR [rsi+0x10],0x0
  40abce:	je     0x40ae4a
  40abd4:	lea    r13,[rsi+0x88]
  40abdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40abe0:	mov    rbp,QWORD PTR [rbx+0x8]
  40abe4:	mov    rdi,QWORD PTR [rbx+0x10]
  40abe8:	mov    rcx,r13
  40abeb:	mov    r12,QWORD PTR [rbx]
  40abee:	mov    QWORD PTR [rbx],0x0
  40abf5:	call   0x409ad0
  40abfa:	sub    rdi,rbp
  40abfd:	mov    DWORD PTR [rax+0x30],0x0
  40ac04:	mov    QWORD PTR [rax+0x28],0x0
  40ac0c:	sar    rdi,0x3
  40ac10:	mov    QWORD PTR [rax+0x20],rbx
  40ac14:	mov    QWORD PTR [rax+0x10],rbp
  40ac18:	mov    edx,edi
  40ac1a:	lea    rdx,[rbp+rdx*8+0x0]
  40ac1f:	mov    QWORD PTR [rax+0x18],rdx
  40ac23:	cmp    BYTE PTR [rsi+0x43a],0x0
  40ac2a:	jne    0x40ac32
  40ac2c:	add    DWORD PTR [rip+0x4e6ee],edi        # 0x459320
  40ac32:	test   r12,r12
  40ac35:	mov    rbx,r12
  40ac38:	jne    0x40abe0
  40ac3a:	mov    BYTE PTR [rsi+0xb4],0x0
  40ac41:	mov    eax,0x2
  40ac46:	add    rsp,0xd8
  40ac4d:	pop    rbx
  40ac4e:	pop    rsi
  40ac4f:	pop    rdi
  40ac50:	pop    rbp
  40ac51:	pop    r12
  40ac53:	pop    r13
  40ac55:	pop    r14
  40ac57:	pop    r15
  40ac59:	ret    
  40ac5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ac60:	mov    rdi,QWORD PTR [rsp+0x128]
  40ac68:	or     al,0xa0
  40ac6a:	shl    eax,0x6
  40ac6d:	movzx  edi,WORD PTR [rdi+0x18]
  40ac71:	mov    edx,edi
  40ac73:	mov    WORD PTR [rsp+0x48],di
  40ac78:	mov    rdi,QWORD PTR [rsp+0x128]
  40ac80:	and    edx,0x3f
  40ac83:	or     eax,edx
  40ac85:	mov    WORD PTR [rdi+0x18],ax
  40ac89:	mov    rax,QWORD PTR [rsi+0x3d0]
  40ac90:	test   rax,rax
  40ac93:	je     0x40aab5
  40ac99:	mov    edx,DWORD PTR [rsi+0x30]
  40ac9c:	mov    r8,rdi
  40ac9f:	mov    rcx,rsi
  40aca2:	call   rax
  40aca4:	jmp    0x40aab5
  40aca9:	nop    DWORD PTR [rax+0x0]
  40acb0:	mov    rdx,QWORD PTR [rsp+0x128]
  40acb8:	mov    BYTE PTR [rsi+0xb4],0x0
  40acbf:	mov    rcx,rsi
  40acc2:	call   0x40a500
  40acc7:	jmp    0x40ac46
  40accc:	nop    DWORD PTR [rax+0x0]
  40acd0:	or     al,0x80
  40acd2:	mov    rbx,QWORD PTR [rsp+0x128]
  40acda:	and    edx,0x3f
  40acdd:	shl    eax,0x6
  40ace0:	or     eax,edx
  40ace2:	mov    WORD PTR [rbx+0x18],ax
  40ace6:	mov    rax,QWORD PTR [rsi+0x3f0]
  40aced:	test   rax,rax
  40acf0:	je     0x40ae10
  40acf6:	mov    rdx,QWORD PTR [rsp+0x128]
  40acfe:	mov    rcx,rsi
  40ad01:	call   rax
  40ad03:	test   al,al
  40ad05:	je     0x40ae10
  40ad0b:	mov    rax,QWORD PTR [rsp+0x128]
  40ad13:	movzx  eax,WORD PTR [rax+0x18]
  40ad17:	mov    WORD PTR [rsp+0x48],ax
  40ad1c:	shr    ax,0x6
  40ad20:	jmp    0x40aa5b
  40ad25:	add    BYTE PTR [rsi+0x18],0x1
  40ad29:	add    DWORD PTR [rsi+0x1dc],0x1
  40ad30:	mov    BYTE PTR [rsi+0x19],0x1
  40ad34:	mov    rcx,rsi
  40ad37:	call   0x40c760
  40ad3c:	movzx  edx,BYTE PTR [rax+0x4]
  40ad40:	cmp    dl,0x51
  40ad43:	jne    0x40ad65
  40ad45:	test   rbx,rbx
  40ad48:	je     0x40ad60
  40ad4a:	test   BYTE PTR [rbx+0x6],0x1
  40ad4e:	jne    0x40ad34
  40ad50:	cmp    QWORD PTR [rax+0x8],0x0
  40ad55:	cmove  rbx,rax
  40ad59:	jmp    0x40ad34
  40ad5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad60:	mov    rbx,rax
  40ad63:	jmp    0x40ad34
  40ad65:	cmp    dl,0x14
  40ad68:	je     0x40aed1
  40ad6e:	cmp    dl,0x16
  40ad71:	jne    0x40ad7f
  40ad73:	lea    rdx,[rsi+0x290]
  40ad7a:	cmp    rax,rdx
  40ad7d:	jne    0x40ada4
  40ad7f:	mov    edx,0x1
  40ad84:	mov    rcx,rsi
  40ad87:	call   0x40a7d0
  40ad8c:	test   rbx,rbx
  40ad8f:	je     0x40ada4
  40ad91:	mov    r9d,0x1
  40ad97:	mov    r8,rbx
  40ad9a:	xor    edx,edx
  40ad9c:	mov    rcx,rsi
  40ad9f:	call   0x40a480
  40ada4:	sub    DWORD PTR [rsi+0x1dc],0x1
  40adab:	sub    BYTE PTR [rsi+0x18],0x1
  40adaf:	cmp    BYTE PTR [rsi+0x429],0x0
  40adb6:	mov    BYTE PTR [rsi+0x19],0x0
  40adba:	jne    0x40ae81
  40adc0:	mov    BYTE PTR [rsi+0xb4],0x0
  40adc7:	xor    eax,eax
  40adc9:	jmp    0x40ac46
  40adce:	xchg   ax,ax
  40add0:	mov    rdx,QWORD PTR [rsp+0x128]
  40add8:	mov    r9d,ebp
  40addb:	mov    r8,rdi
  40adde:	mov    rcx,rsi
  40ade1:	call   0x40a480
  40ade6:	add    DWORD PTR [rip+0x4e534],ebp        # 0x459320
  40adec:	test   rbx,rbx
  40adef:	jne    0x40abca
  40adf5:	mov    BYTE PTR [rsi+0xb4],0x0
  40adfc:	mov    eax,0x1
  40ae01:	jmp    0x40ac46
  40ae06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae10:	mov    rax,QWORD PTR [rsi+0x3d0]
  40ae17:	test   rax,rax
  40ae1a:	je     0x40ad0b
  40ae20:	mov    edx,DWORD PTR [rsi+0x30]
  40ae23:	mov    r8,QWORD PTR [rsp+0x128]
  40ae2b:	mov    rcx,rsi
  40ae2e:	call   rax
  40ae30:	mov    rax,QWORD PTR [rsp+0x128]
  40ae38:	movzx  eax,WORD PTR [rax+0x18]
  40ae3c:	mov    WORD PTR [rsp+0x48],ax
  40ae41:	shr    ax,0x6
  40ae45:	jmp    0x40aa5b
  40ae4a:	mov    rcx,rsi
  40ae4d:	call   0x419f10
  40ae52:	mov    r8,rax
  40ae55:	mov    BYTE PTR [rax+0x4],0x51
  40ae59:	mov    rax,QWORD PTR [rsp+0x130]
  40ae61:	mov    r9d,0x1
  40ae67:	xor    edx,edx
  40ae69:	mov    rcx,rsi
  40ae6c:	mov    QWORD PTR [r8+0x8],rax
  40ae70:	xor    eax,eax
  40ae72:	mov    WORD PTR [r8+0x6],ax
  40ae77:	call   0x40a480
  40ae7c:	jmp    0x40abd4
  40ae81:	mov    rax,QWORD PTR [rsp+0x128]
  40ae89:	mov    rax,QWORD PTR [rax+0x20]
  40ae8d:	test   BYTE PTR [rax+0x1c],0x4
  40ae91:	jne    0x40adc0
  40ae97:	xor    ebx,ebx
  40ae99:	mov    rax,QWORD PTR [rsp+0x128]
  40aea1:	lea    r8,[rip+0x3a4d0]        # 0x445378
  40aea8:	mov    edx,0x6
  40aead:	mov    rcx,rsi
  40aeb0:	mov    r9,QWORD PTR [rax]
  40aeb3:	call   0x412690
  40aeb8:	test   rbx,rbx
  40aebb:	je     0x40adc0
  40aec1:	mov    rdx,rbx
  40aec4:	mov    rcx,rsi
  40aec7:	call   0x41a9a0
  40aecc:	jmp    0x40adc0
  40aed1:	mov    rax,QWORD PTR [rsp+0x128]
  40aed9:	mov    BYTE PTR [rsi+0x19],0x2
  40aedd:	cmp    BYTE PTR [rsi+0x43a],0x0
  40aee4:	mov    rax,QWORD PTR [rax+0x20]
  40aee8:	setne  BYTE PTR [rsp+0x48]
  40aeed:	mov    QWORD PTR [rsp+0x60],rax
  40aef2:	movzx  eax,WORD PTR [rax+0x18]
  40aef6:	test   ax,ax
  40aef9:	je     0x40be37
  40aeff:	mov    rcx,rax
  40af02:	mov    rdx,rax
  40af05:	lea    rbx,[rax+rax*2]
  40af09:	shl    rcx,0x6
  40af0d:	shl    rdx,0x9
  40af11:	sub    rdx,rcx
  40af14:	shl    rbx,0x4
  40af18:	mov    rcx,rsi
  40af1b:	lea    r15,[rsp+0xc8]
  40af23:	call   0x41a9c0
  40af28:	mov    r13,rax
  40af2b:	mov    QWORD PTR [rsp+0x78],rax
  40af30:	mov    rax,QWORD PTR [rax+0x8]
  40af34:	mov    r8,rbx
  40af37:	xor    edx,edx
  40af39:	mov    r12,rax
  40af3c:	mov    rcx,rax
  40af3f:	mov    QWORD PTR [rsp+0x88],rax
  40af47:	call   0x43f098
  40af4c:	mov    rax,r12
  40af4f:	mov    DWORD PTR [rsp+0x68],0x0
  40af57:	add    rax,rbx
  40af5a:	lea    rbx,[rsi+0x290]
  40af61:	mov    QWORD PTR [r13+0x10],rax
  40af65:	mov    QWORD PTR [rsp+0x80],rbx
  40af6d:	xor    ebx,ebx
  40af6f:	nop
  40af70:	add    DWORD PTR [rsp+0x68],0x1
  40af75:	cmp    BYTE PTR [rsp+0x48],0x0
  40af7a:	mov    QWORD PTR [r12],rax
  40af7e:	jne    0x40b2ba
  40af84:	mov    r14d,0x32
  40af8a:	xor    edi,edi
  40af8c:	mov    DWORD PTR [rsp+0x50],0x0
  40af94:	mov    ebp,0x2
  40af99:	jmp    0x40b036
  40af9e:	xchg   ax,ax
  40afa0:	cmp    ebp,r14d
  40afa3:	jbe    0x40afb0
  40afa5:	cmp    BYTE PTR [rsp+0x48],0x0
  40afaa:	jne    0x40b0b0
  40afb0:	mov    rdx,r15
  40afb3:	mov    rcx,rsi
  40afb6:	call   0x40c230
  40afbb:	movzx  ecx,BYTE PTR [rax+0x4]
  40afbf:	mov    rdx,rax
  40afc2:	cmp    cl,0x51
  40afc5:	je     0x40b070
  40afcb:	cmp    cl,0x14
  40afce:	je     0x40b080
  40afd4:	cmp    cl,0x15
  40afd7:	je     0x40b090
  40afdd:	cmp    cl,0x13
  40afe0:	je     0x40b0d2
  40afe6:	cmp    cl,0x16
  40afe9:	je     0x40b100
  40afef:	cmp    cl,0x25
  40aff2:	je     0x40b1d0
  40aff8:	cmp    cl,0x4f
  40affb:	je     0x40b1e0
  40b001:	xor    eax,eax
  40b003:	cmp    BYTE PTR [rsi+0x43a],0x0
  40b00a:	mov    r9d,edi
  40b00d:	mov    r8d,DWORD PTR [rsp+0xc8]
  40b015:	mov    DWORD PTR [rsp+0x20],0x0
  40b01d:	mov    rcx,r12
  40b020:	setne  al
  40b023:	add    edi,0x1
  40b026:	lea    ebp,[rdi+0x2]
  40b029:	mov    DWORD PTR [rsp+0x28],eax
  40b02d:	call   0x409980
  40b032:	mov    rax,QWORD PTR [r12]
  40b036:	mov    edx,ebp
  40b038:	lea    rax,[rax+rdx*8]
  40b03c:	cmp    QWORD PTR [r13+0x18],rax
  40b040:	jae    0x40afa0
  40b046:	mov    rdx,r13
  40b049:	mov    r8d,0x1f40
  40b04f:	mov    rcx,rsi
  40b052:	call   0x41aa70
  40b057:	mov    r13,rax
  40b05a:	mov    rax,QWORD PTR [rax+0x10]
  40b05e:	mov    QWORD PTR [r12],rax
  40b062:	jmp    0x40afa0
  40b067:	nop    WORD PTR [rax+rax*1+0x0]
  40b070:	test   edi,edi
  40b072:	je     0x40b032
  40b074:	jmp    0x40b001
  40b076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b080:	add    DWORD PTR [rsp+0x50],0x1
  40b085:	jmp    0x40b001
  40b08a:	nop    WORD PTR [rax+rax*1+0x0]
  40b090:	mov    ecx,DWORD PTR [rsp+0x50]
  40b094:	mov    eax,ecx
  40b096:	sub    eax,0x1
  40b099:	test   ecx,ecx
  40b09b:	je     0x40b100
  40b09d:	mov    DWORD PTR [rsp+0x50],eax
  40b0a1:	jmp    0x40b001
  40b0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b0b0:	lea    edx,[r14+0x3e8]
  40b0b7:	mov    rcx,QWORD PTR [r12+0x20]
  40b0bc:	mov    r14,rdx
  40b0bf:	shl    rdx,0x2
  40b0c3:	call   0x438650
  40b0c8:	mov    QWORD PTR [r12+0x20],rax
  40b0cd:	jmp    0x40afb0
  40b0d2:	mov    eax,DWORD PTR [rsp+0x50]
  40b0d6:	test   eax,eax
  40b0d8:	jne    0x40b001
  40b0de:	mov    rax,QWORD PTR [rsp+0x60]
  40b0e3:	test   BYTE PTR [rax+0x1c],0x2
  40b0e7:	je     0x40b100
  40b0e9:	mov    rax,QWORD PTR [rsp+0x60]
  40b0ee:	movzx  eax,WORD PTR [rax+0x18]
  40b0f2:	cmp    DWORD PTR [rsp+0x68],eax
  40b0f6:	je     0x40b001
  40b0fc:	nop    DWORD PTR [rax+0x0]
  40b100:	mov    r10,rdx
  40b103:	test   edi,edi
  40b105:	je     0x40be46
  40b10b:	mov    rcx,QWORD PTR [r12]
  40b10f:	lea    eax,[rdi-0x1]
  40b112:	mov    rbp,rax
  40b115:	mov    rax,QWORD PTR [rcx+rax*8]
  40b119:	cmp    BYTE PTR [rax+0x4],0x51
  40b11d:	je     0x40b13a
  40b11f:	jmp    0x40be89
  40b124:	lea    edx,[rbp-0x1]
  40b127:	mov    rax,rdx
  40b12a:	mov    rdx,QWORD PTR [rcx+rdx*8]
  40b12e:	cmp    BYTE PTR [rdx+0x4],0x51
  40b132:	jne    0x40b2b2
  40b138:	mov    ebp,eax
  40b13a:	test   ebp,ebp
  40b13c:	jne    0x40b124
  40b13e:	xor    r9d,r9d
  40b141:	mov    DWORD PTR [r12+0x18],ebp
  40b146:	xor    eax,eax
  40b148:	cmp    BYTE PTR [rsi+0x43a],0x0
  40b14f:	mov    rdx,QWORD PTR [rsp+0x80]
  40b157:	mov    DWORD PTR [rsp+0x20],0x0
  40b15f:	mov    rcx,r12
  40b162:	mov    QWORD PTR [rsp+0x50],r10
  40b167:	setne  al
  40b16a:	mov    DWORD PTR [rsp+0x28],eax
  40b16e:	mov    r8d,DWORD PTR [rsi+0x290]
  40b175:	call   0x409980
  40b17a:	mov    rax,QWORD PTR [rsp+0x60]
  40b17f:	mov    r10,QWORD PTR [rsp+0x50]
  40b184:	movzx  eax,WORD PTR [rax+0x18]
  40b188:	cmp    DWORD PTR [rsp+0x68],eax
  40b18c:	mov    edx,eax
  40b18e:	ja     0x40b1ad
  40b190:	mov    rcx,QWORD PTR [r12]
  40b194:	lea    r8d,[rbp+0x1]
  40b198:	cmp    DWORD PTR [rsp+0x68],eax
  40b19c:	lea    rcx,[rcx+r8*8]
  40b1a0:	mov    QWORD PTR [r13+0x10],rcx
  40b1a4:	lea    rcx,[r12+0x30]
  40b1a9:	cmovne r12,rcx
  40b1ad:	movzx  eax,BYTE PTR [r10+0x4]
  40b1b2:	lea    ecx,[rax-0x15]
  40b1b5:	cmp    cl,0x1
  40b1b8:	jbe    0x40b310
  40b1be:	mov    rax,QWORD PTR [r13+0x10]
  40b1c2:	jmp    0x40af70
  40b1c7:	nop    WORD PTR [rax+rax*1+0x0]
  40b1d0:	test   BYTE PTR [rax+0x6],0x40
  40b1d4:	je     0x40b001
  40b1da:	jmp    0x40b100
  40b1df:	nop
  40b1e0:	mov    rcx,rsi
  40b1e3:	mov    QWORD PTR [rsp+0x70],rax
  40b1e8:	call   0x419f10
  40b1ed:	mov    rdx,QWORD PTR [rsp+0x70]
  40b1f2:	mov    r8,rax
  40b1f5:	mov    DWORD PTR [rsp+0x70],edi
  40b1f9:	mov    rdi,r8
  40b1fc:	mov    rax,QWORD PTR [rdx]
  40b1ff:	mov    QWORD PTR [r8],rax
  40b202:	mov    rax,QWORD PTR [rdx+0x8]
  40b206:	mov    QWORD PTR [r8+0x8],rax
  40b20a:	mov    rax,QWORD PTR [rdx+0x10]
  40b20e:	mov    QWORD PTR [r8+0x10],rax
  40b212:	jmp    0x40b260
  40b214:	mov    rdx,QWORD PTR [rbx+0x10]
  40b218:	mov    rax,QWORD PTR [rbx+0x18]
  40b21c:	sub    rax,rdx
  40b21f:	cmp    rax,0x7
  40b223:	ja     0x40b23e
  40b225:	sub    rdx,QWORD PTR [rbx+0x8]
  40b229:	mov    rcx,rsi
  40b22c:	add    rdx,rdx
  40b22f:	call   0x41a9c0
  40b234:	mov    rdx,QWORD PTR [rax+0x10]
  40b238:	mov    QWORD PTR [rax],rbx
  40b23b:	mov    rbx,rax
  40b23e:	mov    QWORD PTR [rdx],rdi
  40b241:	add    QWORD PTR [rbx+0x10],0x8
  40b246:	cmp    BYTE PTR [rdi+0x4],0x50
  40b24a:	je     0x40b290
  40b24c:	mov    rdx,r15
  40b24f:	mov    rcx,rsi
  40b252:	call   0x40c230
  40b257:	cmp    BYTE PTR [rax+0x4],0x16
  40b25b:	mov    rdi,rax
  40b25e:	je     0x40b290
  40b260:	test   rbx,rbx
  40b263:	jne    0x40b214
  40b265:	mov    edx,0x100
  40b26a:	mov    rcx,rsi
  40b26d:	call   0x41a9c0
  40b272:	mov    rdx,QWORD PTR [rax+0x10]
  40b276:	mov    rbx,rax
  40b279:	mov    QWORD PTR [rdx],rdi
  40b27c:	add    QWORD PTR [rbx+0x10],0x8
  40b281:	cmp    BYTE PTR [rdi+0x4],0x50
  40b285:	jne    0x40b24c
  40b287:	nop    WORD PTR [rax+rax*1+0x0]
  40b290:	mov    r8,rdi
  40b293:	mov    BYTE PTR [rsi+0x19],0x2
  40b297:	mov    BYTE PTR [rsi+0x18],0x1
  40b29b:	cmp    BYTE PTR [r8+0x4],0x16
  40b2a0:	mov    edi,DWORD PTR [rsp+0x70]
  40b2a4:	jne    0x40b032
  40b2aa:	mov    r10,r8
  40b2ad:	jmp    0x40b103
  40b2b2:	mov    r9d,ebp
  40b2b5:	jmp    0x40b141
  40b2ba:	mov    ecx,0xc8
  40b2bf:	call   0x4385d0
  40b2c4:	mov    QWORD PTR [r12+0x20],rax
  40b2c9:	mov    rax,QWORD PTR [r12]
  40b2cd:	jmp    0x40af84
  40b2d2:	mov    ecx,DWORD PTR [rdi+0x14]
  40b2d5:	test   ecx,ecx
  40b2d7:	je     0x40b308
  40b2d9:	mov    rdi,QWORD PTR [rdi+0x8]
  40b2dd:	xor    ebp,ebp
  40b2df:	cmp    BYTE PTR [rdi+0x4],0x26
  40b2e3:	lea    rax,[rdi+0x18]
  40b2e7:	jne    0x40b301
  40b2e9:	jmp    0x40c00c
  40b2ee:	xchg   ax,ax
  40b2f0:	movzx  edx,BYTE PTR [rax+0x4]
  40b2f4:	add    rax,0x18
  40b2f8:	cmp    dl,0x26
  40b2fb:	je     0x40ab07
  40b301:	add    ebp,0x1
  40b304:	cmp    ebp,ecx
  40b306:	jne    0x40b2f0
  40b308:	call   0x43f180
  40b30d:	nop    DWORD PTR [rax]
  40b310:	mov    edi,DWORD PTR [rsp+0x68]
  40b314:	cmp    al,0x16
  40b316:	mov    DWORD PTR [rsp+0x80],edi
  40b31d:	je     0x40bf8a
  40b323:	cmp    DWORD PTR [rsp+0x68],0x1
  40b328:	je     0x40bec9
  40b32e:	mov    rdi,QWORD PTR [rsp+0x60]
  40b333:	mov    r9d,DWORD PTR [rsp+0x68]
  40b338:	mov    rcx,rsi
  40b33b:	mov    r8,QWORD PTR [rsp+0x128]
  40b343:	mov    rdx,rdi
  40b346:	call   0x40a3c0
  40b34b:	test   al,al
  40b34d:	je     0x40bfc8
  40b353:	test   BYTE PTR [rdi+0x1c],0x2
  40b357:	je     0x40b37a
  40b359:	mov    rax,QWORD PTR [rsp+0x60]
  40b35e:	movzx  edx,WORD PTR [rax+0x18]
  40b362:	cmp    DWORD PTR [rsp+0x68],edx
  40b366:	mov    rax,rdx
  40b369:	jb     0x40bf6c
  40b36f:	cmp    DWORD PTR [rsp+0x68],0x1
  40b374:	je     0x40bf4a
  40b37a:	mov    rax,QWORD PTR [rsp+0x58]
  40b37f:	sub    BYTE PTR [rsi+0x18],0x1
  40b383:	mov    BYTE PTR [rsi+0x19],0x0
  40b387:	sub    DWORD PTR [rsi+0x1dc],0x1
  40b38e:	cmp    WORD PTR [rax+0x18],0x0
  40b393:	jne    0x40b43f
  40b399:	mov    ecx,DWORD PTR [rsp+0x80]
  40b3a0:	mov    rax,QWORD PTR [rsp+0x78]
  40b3a5:	test   ecx,ecx
  40b3a7:	mov    rdx,QWORD PTR [rax+0x8]
  40b3ab:	je     0x40b41b
  40b3ad:	mov    eax,DWORD PTR [rsp+0x80]
  40b3b4:	lea    rbp,[rdx+0x8]
  40b3b8:	sub    eax,0x1
  40b3bb:	lea    rax,[rax+rax*2]
  40b3bf:	shl    rax,0x4
  40b3c3:	lea    rdi,[rdx+rax*1+0x38]
  40b3c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b3d0:	mov    rcx,QWORD PTR [rbp+0x0]
  40b3d4:	test   rcx,rcx
  40b3d7:	je     0x40b3e6
  40b3d9:	call   0x43f100
  40b3de:	mov    QWORD PTR [rbp+0x0],0x0
  40b3e6:	mov    rcx,QWORD PTR [rbp+0x18]
  40b3ea:	test   rcx,rcx
  40b3ed:	je     0x40b3fc
  40b3ef:	call   0x43f100
  40b3f4:	mov    QWORD PTR [rbp+0x18],0x0
  40b3fc:	mov    rcx,QWORD PTR [rbp+0x20]
  40b400:	test   rcx,rcx
  40b403:	je     0x40b412
  40b405:	call   0x43f100
  40b40a:	mov    QWORD PTR [rbp+0x20],0x0
  40b412:	add    rbp,0x30
  40b416:	cmp    rbp,rdi
  40b419:	jne    0x40b3d0
  40b41b:	mov    rcx,QWORD PTR [rsp+0x78]
  40b420:	call   0x41abb0
  40b425:	mov    rax,QWORD PTR [rsp+0x128]
  40b42d:	movzx  eax,WORD PTR [rax+0x18]
  40b431:	mov    WORD PTR [rsp+0x48],ax
  40b436:	shr    ax,0x6
  40b43a:	jmp    0x40aa83
  40b43f:	mov    rax,QWORD PTR [rsp+0x78]
  40b444:	mov    rax,QWORD PTR [rax+0x8]
  40b448:	mov    QWORD PTR [rsp+0xc8],0x0
  40b454:	mov    QWORD PTR [rsp+0x88],rax
  40b45c:	mov    rax,QWORD PTR [rsp+0x58]
  40b461:	test   BYTE PTR [rax+0x1c],0x20
  40b465:	jne    0x40beef
  40b46b:	mov    rax,QWORD PTR [rsp+0x58]
  40b470:	mov    edx,DWORD PTR [rax+0x14]
  40b473:	mov    r11,QWORD PTR [rax+0x8]
  40b477:	lea    rax,[rdx+rdx*2]
  40b47b:	mov    r13,rdx
  40b47e:	lea    rax,[r11+rax*8]
  40b482:	mov    QWORD PTR [rsp+0x70],rax
  40b487:	mov    rax,QWORD PTR [rsp+0x70]
  40b48c:	mov    r14,r11
  40b48f:	mov    DWORD PTR [rsp+0x48],r13d
  40b494:	cmp    r11,rax
  40b497:	jae    0x40b76b
  40b49d:	lea    rdi,[rsi+0x88]
  40b4a4:	mov    QWORD PTR [rsp+0x68],rbx
  40b4a9:	mov    QWORD PTR [rsp+0x90],r15
  40b4b1:	mov    QWORD PTR [rsp+0x98],rdi
  40b4b9:	lea    rdi,[rsp+0xc4]
  40b4c1:	mov    QWORD PTR [rsp+0xa0],rdi
  40b4c9:	lea    rdi,[rsi+0x40]
  40b4cd:	mov    QWORD PTR [rsp+0x60],rdi
  40b4d2:	mov    rdi,rax
  40b4d5:	jmp    0x40b4ed
  40b4d7:	nop    WORD PTR [rax+rax*1+0x0]
  40b4e0:	add    r14,0x18
  40b4e4:	cmp    r14,rdi
  40b4e7:	jae    0x40b75b
  40b4ed:	cmp    BYTE PTR [r14+0x4],0x4e
  40b4f2:	jne    0x40b4e0
  40b4f4:	mov    eax,DWORD PTR [r14+0x8]
  40b4f8:	add    r13d,0x2
  40b4fc:	add    DWORD PTR [rsp+0x48],0x2
  40b501:	sub    eax,0x1
  40b504:	lea    r10,[rax+rax*2]
  40b508:	mov    rax,QWORD PTR [rsp+0x88]
  40b510:	shl    r10,0x4
  40b514:	lea    r15,[rax+r10*1]
  40b518:	movzx  eax,WORD PTR [r14+0x6]
  40b51d:	test   al,0x4
  40b51f:	je     0x40b724
  40b525:	cmp    QWORD PTR [r15+0x10],0x0
  40b52a:	jne    0x40b4e0
  40b52c:	mov    rdx,QWORD PTR [rsi+0x40]
  40b530:	mov    rax,QWORD PTR [rdx+0x10]
  40b534:	mov    rdx,QWORD PTR [rdx+0x18]
  40b538:	sub    rdx,rax
  40b53b:	cmp    rdx,0x2
  40b53f:	ja     0x40b55c
  40b541:	mov    rdx,QWORD PTR [rsp+0x60]
  40b546:	mov    r8d,0x3
  40b54c:	mov    rcx,rsi
  40b54f:	call   0x41ab60
  40b554:	mov    rax,QWORD PTR [rsi+0x40]
  40b558:	mov    rax,QWORD PTR [rax+0x10]
  40b55c:	mov    BYTE PTR [rax],0x22
  40b55f:	mov    ebp,DWORD PTR [r15+0x18]
  40b563:	lea    rbx,[rax+0x1]
  40b567:	test   ebp,ebp
  40b569:	je     0x40b6ca
  40b56f:	xor    ebp,ebp
  40b571:	xor    eax,eax
  40b573:	mov    DWORD PTR [rsp+0xa8],r13d
  40b57b:	mov    QWORD PTR [rsp+0xb0],rdi
  40b583:	mov    r13,rbp
  40b586:	mov    rdi,rsi
  40b589:	mov    DWORD PTR [rsp+0x50],0x0
  40b591:	mov    rbp,rbx
  40b594:	mov    esi,eax
  40b596:	mov    rdx,QWORD PTR [r15]
  40b599:	mov    eax,esi
  40b59b:	mov    r12,QWORD PTR [rdx+rax*8]
  40b59f:	movzx  eax,BYTE PTR [r12+0x4]
  40b5a5:	cmp    al,0x51
  40b5a7:	je     0x40bddb
  40b5ad:	lea    edx,[rax-0x38]
  40b5b0:	cmp    dl,0x3
  40b5b3:	setbe  bl
  40b5b6:	sub    eax,0x3d
  40b5b9:	cmp    al,0x4
  40b5bb:	setbe  al
  40b5be:	or     bl,al
  40b5c0:	jne    0x40bc60
  40b5c6:	mov    rcx,r12
  40b5c9:	call   0x41a050
  40b5ce:	mov    eax,eax
  40b5d0:	mov    rcx,QWORD PTR [rdi+0x40]
  40b5d4:	add    rax,0x3
  40b5d8:	mov    rdx,QWORD PTR [rcx+0x18]
  40b5dc:	sub    rdx,rbp
  40b5df:	cmp    rax,rdx
  40b5e2:	ja     0x40be03
  40b5e8:	mov    rdx,QWORD PTR [rcx+0x10]
  40b5ec:	lea    rcx,[rbp-0x1]
  40b5f0:	cmp    rdx,rcx
  40b5f3:	je     0x40b60b
  40b5f5:	test   r13,r13
  40b5f8:	cmove  r13,r12
  40b5fc:	test   BYTE PTR [r13+0x6],0x1
  40b601:	je     0x40b60b
  40b603:	mov    BYTE PTR [rbp+0x0],0x20
  40b607:	add    rbp,0x1
  40b60b:	test   bl,bl
  40b60d:	je     0x40bdbf
  40b613:	mov    rdx,rax
  40b616:	mov    rcx,rdi
  40b619:	call   0x41a9c0
  40b61e:	mov    rbx,QWORD PTR [rax+0x10]
  40b622:	mov    rdx,r12
  40b625:	mov    r9d,0x1
  40b62b:	mov    rcx,rdi
  40b62e:	mov    r13,rax
  40b631:	mov    r8,rbx
  40b634:	call   0x41a090
  40b639:	mov    edx,eax
  40b63b:	sub    edx,ebx
  40b63d:	add    rdx,rbx
  40b640:	cmp    rbx,rdx
  40b643:	je     0x40b669
  40b645:	add    rbx,0x1
  40b649:	movzx  eax,BYTE PTR [rbx-0x1]
  40b64d:	cmp    al,0x22
  40b64f:	je     0x40b714
  40b655:	cmp    al,0x5c
  40b657:	je     0x40b714
  40b65d:	mov    BYTE PTR [rbp+0x0],al
  40b660:	add    rbp,0x1
  40b664:	cmp    rbx,rdx
  40b667:	jne    0x40b645
  40b669:	mov    rdx,r13
  40b66c:	mov    rcx,rdi
  40b66f:	call   0x41a9a0
  40b674:	cmp    BYTE PTR [r12+0x4],0x3c
  40b67a:	je     0x40be65
  40b680:	xor    r13d,r13d
  40b683:	mov    DWORD PTR [rsp+0x50],0x0
  40b68b:	add    esi,0x1
  40b68e:	cmp    esi,DWORD PTR [r15+0x18]
  40b692:	jb     0x40b596
  40b698:	test   BYTE PTR [rsp+0x50],0x1
  40b69d:	mov    rsi,rdi
  40b6a0:	mov    r13d,DWORD PTR [rsp+0xa8]
  40b6a8:	mov    rbx,rbp
  40b6ab:	mov    rdi,QWORD PTR [rsp+0xb0]
  40b6b3:	je     0x40b6ca
  40b6b5:	lea    r8,[rip+0x39d04]        # 0x4453c0
  40b6bc:	xor    edx,edx
  40b6be:	mov    rcx,rsi
  40b6c1:	sub    rbx,0x1
  40b6c5:	call   0x412660
  40b6ca:	mov    BYTE PTR [rbx],0x22
  40b6cd:	mov    rcx,QWORD PTR [rsi+0x40]
  40b6d1:	lea    rdx,[rbx+0x1]
  40b6d5:	lea    rax,[rbx+0x2]
  40b6d9:	mov    rbp,rdx
  40b6dc:	mov    rbx,rdx
  40b6df:	sub    rbp,QWORD PTR [rcx+0x10]
  40b6e3:	mov    QWORD PTR [rcx+0x10],rax
  40b6e7:	mov    rcx,rsi
  40b6ea:	call   0x419f10
  40b6ef:	xor    r11d,r11d
  40b6f2:	sub    rbx,rbp
  40b6f5:	mov    edx,ebp
  40b6f7:	mov    BYTE PTR [rbx+rdx*1],0x0
  40b6fb:	mov    BYTE PTR [rax+0x4],0x3d
  40b6ff:	mov    DWORD PTR [rax+0x8],ebp
  40b702:	mov    QWORD PTR [rax+0x10],rbx
  40b706:	mov    WORD PTR [rax+0x6],r11w
  40b70b:	mov    QWORD PTR [r15+0x10],rax
  40b70f:	jmp    0x40b4e0
  40b714:	mov    BYTE PTR [rbp+0x0],0x5c
  40b718:	mov    BYTE PTR [rbp+0x1],al
  40b71b:	add    rbp,0x2
  40b71f:	jmp    0x40b640
  40b724:	test   al,0x8
  40b726:	jne    0x40bb77
  40b72c:	mov    rax,QWORD PTR [rsp+0x58]
  40b731:	cmp    QWORD PTR [rax+0x8],r14
  40b735:	jae    0x40b742
  40b737:	test   BYTE PTR [r14-0x12],0x8
  40b73c:	jne    0x40bb77
  40b742:	cmp    QWORD PTR [r15+0x8],0x0
  40b747:	je     0x40c013
  40b74d:	mov    eax,DWORD PTR [r15+0x1c]
  40b751:	lea    r13d,[r13+rax*1-0x1]
  40b756:	jmp    0x40b4e0
  40b75b:	mov    rbx,QWORD PTR [rsp+0x68]
  40b760:	mov    r15,QWORD PTR [rsp+0x90]
  40b768:	mov    edx,r13d
  40b76b:	movzx  eax,BYTE PTR [rsi+0x43a]
  40b772:	test   eax,eax
  40b774:	mov    DWORD PTR [rsp+0x60],eax
  40b778:	je     0x40bcc6
  40b77e:	mov    r8,r15
  40b781:	mov    rcx,rsi
  40b784:	call   0x409a10
  40b789:	cmp    DWORD PTR [rsp+0x60],0x1
  40b78e:	mov    r9d,DWORD PTR [rsp+0x48]
  40b793:	mov    r14,rax
  40b796:	mov    rcx,QWORD PTR [rsi+0x28]
  40b79a:	mov    rax,QWORD PTR [rax+0x8]
  40b79e:	mov    r8d,DWORD PTR [rsp+0x138]
  40b7a6:	mov    rdx,QWORD PTR [rsp+0x128]
  40b7ae:	cmovne r9d,r13d
  40b7b2:	mov    QWORD PTR [rsp+0xa0],rax
  40b7ba:	call   0x408710
  40b7bf:	mov    rdi,rax
  40b7c2:	mov    rax,QWORD PTR [rsp+0x58]
  40b7c7:	mov    r13,QWORD PTR [rax+0x8]
  40b7cb:	cmp    r13,QWORD PTR [rsp+0x70]
  40b7d0:	jae    0x40bd03
  40b7d6:	lea    rax,[rsi+0x278]
  40b7dd:	xor    r12d,r12d
  40b7e0:	mov    QWORD PTR [rsp+0xa8],rbx
  40b7e8:	mov    QWORD PTR [rsp+0x48],r14
  40b7ed:	mov    QWORD PTR [rsp+0xb0],rax
  40b7f5:	jmp    0x40b84a
  40b7f7:	nop    WORD PTR [rax+rax*1+0x0]
  40b800:	cmp    BYTE PTR [rsi+0x43a],0x1
  40b807:	mov    eax,r12d
  40b80a:	jbe    0x40b9e0
  40b810:	mov    r9d,DWORD PTR [r13+0x0]
  40b814:	mov    rdx,QWORD PTR [rsp+0xc8]
  40b81c:	mov    r8,r13
  40b81f:	mov    rcx,QWORD PTR [rsp+0x48]
  40b824:	mov    DWORD PTR [rsp+0x30],eax
  40b828:	add    r12d,0x1
  40b82c:	mov    QWORD PTR [rsp+0x28],rdi
  40b831:	mov    DWORD PTR [rsp+0x20],r9d
  40b836:	call   0x409a50
  40b83b:	add    r13,0x18
  40b83f:	cmp    r13,QWORD PTR [rsp+0x70]
  40b844:	jae    0x40bafd
  40b84a:	cmp    BYTE PTR [r13+0x4],0x4e
  40b84f:	jne    0x40b800
  40b851:	mov    eax,DWORD PTR [r13+0x8]
  40b855:	sub    eax,0x1
  40b858:	lea    rcx,[rax+rax*2]
  40b85c:	movzx  eax,WORD PTR [r13+0x6]
  40b861:	shl    rcx,0x4
  40b865:	add    rcx,QWORD PTR [rsp+0x88]
  40b86d:	test   al,0x4
  40b86f:	je     0x40ba94
  40b875:	cmp    BYTE PTR [rsi+0x43a],0x0
  40b87c:	lea    r14,[rcx+0x10]
  40b880:	setne  BYTE PTR [rsp+0x90]
  40b888:	jne    0x40bd40
  40b88e:	mov    QWORD PTR [rsp+0x68],0x0
  40b897:	mov    ebx,0x1
  40b89c:	xor    ebp,ebp
  40b89e:	mov    r15d,0x1
  40b8a4:	cmp    BYTE PTR [rsi+0x10],0x0
  40b8a8:	je     0x40b8b0
  40b8aa:	cmp    BYTE PTR [rsi+0x11],0x0
  40b8ae:	je     0x40b8c6
  40b8b0:	mov    rax,QWORD PTR [rsp+0x58]
  40b8b5:	cmp    r13,QWORD PTR [rax+0x8]
  40b8b9:	je     0x40b8c6
  40b8bb:	test   BYTE PTR [r13-0x12],0x8
  40b8c0:	je     0x40bc73
  40b8c6:	test   r15d,r15d
  40b8c9:	je     0x40b9fb
  40b8cf:	lea    eax,[r15+r12*1]
  40b8d3:	mov    QWORD PTR [rsp+0x98],rbp
  40b8db:	mov    r15d,r12d
  40b8de:	movzx  ebp,BYTE PTR [rsp+0x90]
  40b8e6:	mov    DWORD PTR [rsp+0x50],eax
  40b8ea:	jmp    0x40b943
  40b8ec:	nop    DWORD PTR [rax+0x0]
  40b8f0:	mov    rcx,QWORD PTR [rsp+0x68]
  40b8f5:	test   r14,r14
  40b8f8:	mov    r9d,DWORD PTR [rcx]
  40b8fb:	mov    DWORD PTR [rsp+0x30],eax
  40b8ff:	mov    QWORD PTR [rsp+0x28],rdi
  40b904:	mov    DWORD PTR [rsp+0x20],edx
  40b908:	je     0x40b9ad
  40b90e:	mov    r8,QWORD PTR [r14]
  40b911:	mov    rdx,QWORD PTR [rsp+0xc8]
  40b919:	mov    rcx,QWORD PTR [rsp+0x48]
  40b91e:	call   0x409a50
  40b923:	test   ebx,ebx
  40b925:	je     0x40c21e
  40b92b:	cmp    ebx,0x2
  40b92e:	je     0x40c21e
  40b934:	add    r15d,0x1
  40b938:	cmp    r15d,DWORD PTR [rsp+0x50]
  40b93d:	je     0x40baca
  40b943:	cmp    DWORD PTR [rsp+0x60],0x1
  40b948:	mov    eax,r12d
  40b94b:	cmovg  eax,r15d
  40b94f:	cmp    BYTE PTR [rsi+0x43a],0x1
  40b956:	jbe    0x40b995
  40b958:	test   bpl,bpl
  40b95b:	mov    edx,DWORD PTR [r13+0x0]
  40b95f:	jne    0x40b8f0
  40b961:	mov    r8,QWORD PTR [r14]
  40b964:	mov    rcx,QWORD PTR [rsp+0x48]
  40b969:	mov    DWORD PTR [rsp+0x20],edx
  40b96d:	mov    DWORD PTR [rsp+0x30],eax
  40b971:	mov    QWORD PTR [rsp+0x28],rdi
  40b976:	mov    rdx,QWORD PTR [rsp+0xc8]
  40b97e:	mov    r9d,DWORD PTR [r8]
  40b981:	call   0x409a50
  40b986:	test   ebx,ebx
  40b988:	je     0x40b98f
  40b98a:	cmp    ebx,0x2
  40b98d:	jne    0x40b934
  40b98f:	add    r14,0x8
  40b993:	jmp    0x40b934
  40b995:	mov    rcx,QWORD PTR [rsp+0x58]
  40b99a:	mov    rax,r13
  40b99d:	sub    rax,QWORD PTR [rcx+0x8]
  40b9a1:	sar    rax,0x3
  40b9a5:	imul   eax,eax,0xaaaaaaab
  40b9ab:	jmp    0x40b958
  40b9ad:	mov    rdx,QWORD PTR [rsp+0xc8]
  40b9b5:	mov    rcx,QWORD PTR [rsp+0x48]
  40b9ba:	xor    r8d,r8d
  40b9bd:	call   0x409a50
  40b9c2:	test   ebx,ebx
  40b9c4:	je     0x40b9cf
  40b9c6:	cmp    ebx,0x2
  40b9c9:	jne    0x40b934
  40b9cf:	mov    r14d,0x8
  40b9d5:	add    QWORD PTR [rsp+0x68],0x4
  40b9db:	jmp    0x40b934
  40b9e0:	mov    rbx,QWORD PTR [rsp+0x58]
  40b9e5:	mov    rax,r13
  40b9e8:	sub    rax,QWORD PTR [rbx+0x8]
  40b9ec:	sar    rax,0x3
  40b9f0:	imul   eax,eax,0xaaaaaaab
  40b9f6:	jmp    0x40b810
  40b9fb:	cmp    BYTE PTR [rsi+0x437],0x0
  40ba02:	je     0x40ba2e
  40ba04:	mov    rax,QWORD PTR [rsp+0x58]
  40ba09:	test   BYTE PTR [rax+0x1c],0x4
  40ba0d:	jne    0x40ba2e
  40ba0f:	cmp    BYTE PTR [rsi+0x435],0x0
  40ba16:	jne    0x40ba2e
  40ba18:	mov    rax,QWORD PTR [rsi]
  40ba1b:	test   rax,rax
  40ba1e:	je     0x40bd61
  40ba24:	cmp    BYTE PTR [rax+0x6d],0x0
  40ba28:	je     0x40bd61
  40ba2e:	cmp    BYTE PTR [rsi+0x10],0x0
  40ba32:	mov    DWORD PTR [rsp+0x50],r12d
  40ba37:	jne    0x40ba44
  40ba39:	test   BYTE PTR [r13+0x6],0x8
  40ba3e:	je     0x40bb8f
  40ba44:	test   rbp,rbp
  40ba47:	je     0x40ba8a
  40ba49:	mov    rcx,rsi
  40ba4c:	call   0x419f10
  40ba51:	mov    rdx,QWORD PTR [rbp+0x0]
  40ba55:	movzx  edx,BYTE PTR [rdx+0x4]
  40ba59:	mov    BYTE PTR [rax+0x4],dl
  40ba5c:	mov    rdx,QWORD PTR [rbp+0x0]
  40ba60:	test   BYTE PTR [r13+0x6],0x8
  40ba65:	mov    rcx,QWORD PTR [rdx+0x8]
  40ba69:	mov    rbx,QWORD PTR [rdx+0x10]
  40ba6d:	mov    QWORD PTR [rax+0x8],rcx
  40ba71:	mov    QWORD PTR [rax+0x10],rbx
  40ba75:	mov    rdx,QWORD PTR [rbp+0x0]
  40ba79:	movzx  edx,WORD PTR [rdx+0x6]
  40ba7d:	je     0x40baf4
  40ba7f:	or     edx,0x8
  40ba82:	mov    WORD PTR [rax+0x6],dx
  40ba86:	mov    QWORD PTR [rbp+0x0],rax
  40ba8a:	mov    r12d,DWORD PTR [rsp+0x50]
  40ba8f:	jmp    0x40b83b
  40ba94:	test   al,0x8
  40ba96:	je     0x40bbcb
  40ba9c:	cmp    BYTE PTR [rsi+0x43a],0x0
  40baa3:	mov    r15d,DWORD PTR [rcx+0x18]
  40baa7:	mov    r14,QWORD PTR [rcx]
  40baaa:	setne  BYTE PTR [rsp+0x90]
  40bab2:	jne    0x40be50
  40bab8:	mov    QWORD PTR [rsp+0x68],0x0
  40bac1:	xor    ebx,ebx
  40bac3:	xor    ebp,ebp
  40bac5:	jmp    0x40b8a4
  40baca:	test   BYTE PTR [r13+0x6],0x8
  40bacf:	mov    rbp,QWORD PTR [rsp+0x98]
  40bad7:	je     0x40bb85
  40badd:	mov    rax,QWORD PTR [rsp+0x48]
  40bae2:	mov    rax,QWORD PTR [rax+0x10]
  40bae6:	mov    QWORD PTR [rsp+0x68],rax
  40baeb:	lea    rbp,[rax-0x8]
  40baef:	jmp    0x40ba44
  40baf4:	and    edx,0xfffffff7
  40baf7:	mov    WORD PTR [rax+0x6],dx
  40bafb:	jmp    0x40ba86
  40bafd:	mov    r8d,DWORD PTR [rsp+0x60]
  40bb02:	mov    rbx,QWORD PTR [rsp+0xa8]
  40bb0a:	mov    r14,QWORD PTR [rsp+0x48]
  40bb0f:	test   r8d,r8d
  40bb12:	jne    0x40bd03
  40bb18:	mov    rax,QWORD PTR [r14+0x8]
  40bb1c:	mov    rdi,QWORD PTR [r14+0x10]
  40bb20:	lea    rcx,[rsi+0x88]
  40bb27:	sub    rdi,rax
  40bb2a:	call   0x409ad0
  40bb2f:	mov    rcx,QWORD PTR [rsp+0x128]
  40bb37:	shr    rdi,0x3
  40bb3b:	mov    DWORD PTR [rax+0x30],0x0
  40bb42:	mov    edi,edi
  40bb44:	mov    QWORD PTR [rax+0x20],r14
  40bb48:	mov    QWORD PTR [rax+0x28],rcx
  40bb4c:	mov    rcx,QWORD PTR [rsp+0xa0]
  40bb54:	lea    rdx,[rcx+rdi*8]
  40bb58:	mov    QWORD PTR [rax+0x10],rcx
  40bb5c:	mov    QWORD PTR [rax+0x18],rdx
  40bb60:	mov    rax,QWORD PTR [r14+0x10]
  40bb64:	sub    rax,QWORD PTR [r14+0x8]
  40bb68:	shr    rax,0x3
  40bb6c:	add    DWORD PTR [rip+0x4d7ae],eax        # 0x459320
  40bb72:	jmp    0x40b399
  40bb77:	mov    eax,DWORD PTR [r15+0x18]
  40bb7b:	lea    r13d,[r13+rax*1-0x1]
  40bb80:	jmp    0x40b4e0
  40bb85:	cmp    BYTE PTR [rsi+0x10],0x0
  40bb89:	jne    0x40ba44
  40bb8f:	mov    r9d,DWORD PTR [rsi+0x278]
  40bb96:	mov    r8,QWORD PTR [rsp+0xb0]
  40bb9e:	mov    rdx,QWORD PTR [rsp+0xc8]
  40bba6:	mov    rcx,QWORD PTR [rsp+0x48]
  40bbab:	mov    DWORD PTR [rsp+0x30],0x0
  40bbb3:	mov    QWORD PTR [rsp+0x28],0x0
  40bbbc:	mov    DWORD PTR [rsp+0x20],r9d
  40bbc1:	call   0x409a50
  40bbc6:	jmp    0x40ba44
  40bbcb:	mov    rax,QWORD PTR [rsp+0x58]
  40bbd0:	cmp    r13,QWORD PTR [rax+0x8]
  40bbd4:	je     0x40bd8d
  40bbda:	test   BYTE PTR [r13-0x12],0x8
  40bbdf:	je     0x40bd8d
  40bbe5:	cmp    BYTE PTR [rsi+0x43a],0x0
  40bbec:	mov    r15d,DWORD PTR [rcx+0x18]
  40bbf0:	mov    r14,QWORD PTR [rcx]
  40bbf3:	mov    QWORD PTR [rsp+0x68],0x0
  40bbfc:	setne  BYTE PTR [rsp+0x90]
  40bc04:	movzx  eax,BYTE PTR [rsp+0x90]
  40bc0c:	test   al,al
  40bc0e:	je     0x40bc1c
  40bc10:	xor    edx,edx
  40bc12:	call   0x4099d0
  40bc17:	mov    QWORD PTR [rsp+0x68],rax
  40bc1c:	mov    rax,QWORD PTR [rsp+0x48]
  40bc21:	mov    rcx,QWORD PTR [rax+0x8]
  40bc25:	mov    rax,QWORD PTR [rax+0x10]
  40bc29:	mov    rdx,rax
  40bc2c:	sub    rdx,rcx
  40bc2f:	shr    rdx,0x3
  40bc33:	test   edx,edx
  40bc35:	je     0x40be80
  40bc3b:	mov    rdx,QWORD PTR [rax-0x8]
  40bc3f:	lea    rbp,[rax-0x8]
  40bc43:	cmp    BYTE PTR [rdx+0x4],0x13
  40bc47:	je     0x40c10a
  40bc4d:	xor    ebx,ebx
  40bc4f:	mov    eax,0x0
  40bc54:	test   r15d,r15d
  40bc57:	cmovne rbp,rax
  40bc5b:	jmp    0x40b8a4
  40bc60:	mov    rcx,r12
  40bc63:	call   0x41a050
  40bc68:	mov    eax,eax
  40bc6a:	shl    rax,0x2
  40bc6e:	jmp    0x40b5d0
  40bc73:	mov    rcx,rsi
  40bc76:	call   0x419f10
  40bc7b:	xor    r9d,r9d
  40bc7e:	mov    BYTE PTR [rax+0x4],0x51
  40bc82:	mov    QWORD PTR [rax+0x8],r13
  40bc86:	mov    WORD PTR [rax+0x6],r9w
  40bc8b:	cmp    BYTE PTR [rsi+0x43a],0x1
  40bc92:	mov    r8,rax
  40bc95:	mov    edx,r12d
  40bc98:	jbe    0x40beae
  40bc9e:	mov    r9d,DWORD PTR [r8]
  40bca1:	mov    rcx,QWORD PTR [rsp+0x48]
  40bca6:	mov    DWORD PTR [rsp+0x30],edx
  40bcaa:	mov    rdx,QWORD PTR [rsp+0xc8]
  40bcb2:	mov    QWORD PTR [rsp+0x28],rdi
  40bcb7:	mov    DWORD PTR [rsp+0x20],r9d
  40bcbc:	call   0x409a50
  40bcc1:	jmp    0x40b8c6
  40bcc6:	xor    r8d,r8d
  40bcc9:	mov    rcx,rsi
  40bccc:	xor    edi,edi
  40bcce:	call   0x409a10
  40bcd3:	mov    r14,rax
  40bcd6:	mov    rax,QWORD PTR [rax+0x8]
  40bcda:	mov    QWORD PTR [rsp+0xa0],rax
  40bce2:	mov    rax,QWORD PTR [rsp+0x58]
  40bce7:	mov    r13,QWORD PTR [rax+0x8]
  40bceb:	cmp    r13,QWORD PTR [rsp+0x70]
  40bcf0:	mov    rax,QWORD PTR [rsp+0xa0]
  40bcf8:	jb     0x40b7d6
  40bcfe:	jmp    0x40bb1c
  40bd03:	mov    rax,QWORD PTR [r14+0x10]
  40bd07:	sub    rax,QWORD PTR [r14+0x8]
  40bd0b:	mov    r8,r14
  40bd0e:	mov    r9,QWORD PTR [rsp+0xc8]
  40bd16:	mov    rdx,QWORD PTR [rsp+0x128]
  40bd1e:	mov    rcx,rsi
  40bd21:	shr    rax,0x3
  40bd25:	mov    DWORD PTR [rsp+0x28],eax
  40bd29:	mov    rax,QWORD PTR [rsp+0xa0]
  40bd31:	mov    QWORD PTR [rsp+0x20],rax
  40bd36:	call   0x409b50
  40bd3b:	jmp    0x40bb60
  40bd40:	mov    edx,0x1
  40bd45:	mov    ebx,0x1
  40bd4a:	xor    ebp,ebp
  40bd4c:	call   0x4099d0
  40bd51:	mov    r15d,0x1
  40bd57:	mov    QWORD PTR [rsp+0x68],rax
  40bd5c:	jmp    0x40b8a4
  40bd61:	mov    eax,DWORD PTR [r13+0x8]
  40bd65:	lea    r8,[rip+0x39684]        # 0x4453f0
  40bd6c:	mov    edx,0x2
  40bd71:	mov    rcx,rsi
  40bd74:	mov    DWORD PTR [rsp+0x20],eax
  40bd78:	mov    rax,QWORD PTR [rsp+0x128]
  40bd80:	mov    r9,QWORD PTR [rax]
  40bd83:	call   0x412660
  40bd88:	jmp    0x40ba2e
  40bd8d:	cmp    BYTE PTR [rsi+0x43a],0x0
  40bd94:	mov    r15d,DWORD PTR [rcx+0x1c]
  40bd98:	mov    r14,QWORD PTR [rcx+0x8]
  40bd9c:	setne  BYTE PTR [rsp+0x90]
  40bda4:	jne    0x40be93
  40bdaa:	mov    QWORD PTR [rsp+0x68],0x0
  40bdb3:	mov    ebx,0x2
  40bdb8:	xor    ebp,ebp
  40bdba:	jmp    0x40b8a4
  40bdbf:	mov    r8,rbp
  40bdc2:	mov    r9d,0x1
  40bdc8:	mov    rdx,r12
  40bdcb:	mov    rcx,rdi
  40bdce:	call   0x41a090
  40bdd3:	mov    rbp,rax
  40bdd6:	jmp    0x40b674
  40bddb:	test   r13,r13
  40bdde:	je     0x40c100
  40bde4:	test   BYTE PTR [r13+0x6],0x1
  40bde9:	jne    0x40b68b
  40bdef:	cmp    QWORD PTR [r12+0x8],0x0
  40bdf5:	mov    eax,0x0
  40bdfa:	cmove  r13,rax
  40bdfe:	jmp    0x40b68b
  40be03:	mov    rdx,QWORD PTR [rsp+0x60]
  40be08:	sub    rbp,QWORD PTR [rcx+0x10]
  40be0c:	mov    r8,rax
  40be0f:	mov    rcx,rdi
  40be12:	mov    QWORD PTR [rsp+0xb8],rax
  40be1a:	call   0x41ab60
  40be1f:	mov    rdx,QWORD PTR [rdi+0x40]
  40be23:	mov    rax,QWORD PTR [rsp+0xb8]
  40be2b:	mov    rdx,QWORD PTR [rdx+0x10]
  40be2f:	add    rbp,rdx
  40be32:	jmp    0x40b5ec
  40be37:	mov    ebx,0x30
  40be3c:	mov    edx,0x1c0
  40be41:	jmp    0x40af18
  40be46:	xor    ebp,ebp
  40be48:	xor    r9d,r9d
  40be4b:	jmp    0x40b141
  40be50:	xor    edx,edx
  40be52:	xor    ebx,ebx
  40be54:	xor    ebp,ebp
  40be56:	call   0x4099d0
  40be5b:	mov    QWORD PTR [rsp+0x68],rax
  40be60:	jmp    0x40b8a4
  40be65:	mov    rax,QWORD PTR [r12+0x10]
  40be6a:	cmp    BYTE PTR [rax],0x5c
  40be6d:	jne    0x40b680
  40be73:	add    DWORD PTR [rsp+0x50],0x1
  40be78:	xor    r13d,r13d
  40be7b:	jmp    0x40b68b
  40be80:	xor    ebx,ebx
  40be82:	xor    ebp,ebp
  40be84:	jmp    0x40b8a4
  40be89:	mov    r9d,edi
  40be8c:	mov    ebp,edi
  40be8e:	jmp    0x40b141
  40be93:	mov    edx,0x2
  40be98:	mov    ebx,0x2
  40be9d:	xor    ebp,ebp
  40be9f:	call   0x4099d0
  40bea4:	mov    QWORD PTR [rsp+0x68],rax
  40bea9:	jmp    0x40b8a4
  40beae:	mov    rax,QWORD PTR [rsp+0x58]
  40beb3:	mov    rdx,r13
  40beb6:	sub    rdx,QWORD PTR [rax+0x8]
  40beba:	sar    rdx,0x3
  40bebe:	imul   edx,edx,0xaaaaaaab
  40bec4:	jmp    0x40bc9e
  40bec9:	test   dx,dx
  40becc:	jne    0x40b32e
  40bed2:	mov    rax,QWORD PTR [rsp+0x88]
  40beda:	mov    r13d,DWORD PTR [rax+0x18]
  40bede:	xor    eax,eax
  40bee0:	test   r13d,r13d
  40bee3:	setne  al
  40bee6:	mov    DWORD PTR [rsp+0x68],eax
  40beea:	jmp    0x40b32e
  40beef:	mov    r9d,DWORD PTR [rax+0x14]
  40bef3:	test   r9d,r9d
  40bef6:	je     0x40b308
  40befc:	mov    rax,QWORD PTR [rsp+0x58]
  40bf01:	mov    edx,0x1
  40bf06:	mov    r11,QWORD PTR [rax+0x8]
  40bf0a:	cmp    BYTE PTR [r11+0x4],0x26
  40bf0f:	lea    rax,[r11+0x18]
  40bf13:	jne    0x40bf23
  40bf15:	jmp    0x40c167
  40bf1a:	nop    WORD PTR [rax+rax*1+0x0]
  40bf20:	mov    rdx,r8
  40bf23:	cmp    edx,r9d
  40bf26:	mov    r13d,edx
  40bf29:	jae    0x40b308
  40bf2f:	mov    rcx,rax
  40bf32:	add    rax,0x18
  40bf36:	lea    r8,[rdx+0x1]
  40bf3a:	cmp    BYTE PTR [rcx+0x4],0x26
  40bf3e:	jne    0x40bf20
  40bf40:	mov    QWORD PTR [rsp+0x70],rcx
  40bf45:	jmp    0x40b487
  40bf4a:	mov    rdi,QWORD PTR [rsp+0x88]
  40bf52:	mov    r12d,DWORD PTR [rdi+0x18]
  40bf56:	test   r12d,r12d
  40bf59:	jne    0x40b37a
  40bf5f:	cmp    BYTE PTR [rsi+0x436],0x0
  40bf66:	jne    0x40b37a
  40bf6c:	lea    rax,[rax+rax*2]
  40bf70:	mov    rdi,QWORD PTR [rsp+0x88]
  40bf78:	shl    rax,0x4
  40bf7c:	mov    QWORD PTR [rdi+rax*1-0x30],0x0
  40bf85:	jmp    0x40b37a
  40bf8a:	mov    rax,QWORD PTR [rsi+0x88]
  40bf91:	cmp    QWORD PTR [rax+0x8],0x0
  40bf96:	je     0x40c176
  40bf9c:	mov    edx,0x1
  40bfa1:	mov    rcx,rsi
  40bfa4:	call   0x40a7d0
  40bfa9:	mov    rax,QWORD PTR [rsp+0x128]
  40bfb1:	lea    r8,[rip+0x39390]        # 0x445348
  40bfb8:	mov    edx,0x3
  40bfbd:	mov    rcx,rsi
  40bfc0:	mov    r9,QWORD PTR [rax]
  40bfc3:	call   0x412660
  40bfc8:	mov    rdx,QWORD PTR [rsp+0x78]
  40bfcd:	mov    rcx,rsi
  40bfd0:	call   0x41a9a0
  40bfd5:	sub    DWORD PTR [rsi+0x1dc],0x1
  40bfdc:	sub    BYTE PTR [rsi+0x18],0x1
  40bfe0:	cmp    BYTE PTR [rsi+0x429],0x0
  40bfe7:	mov    BYTE PTR [rsi+0x19],0x0
  40bfeb:	je     0x40aeb8
  40bff1:	mov    rax,QWORD PTR [rsp+0x128]
  40bff9:	mov    rax,QWORD PTR [rax+0x20]
  40bffd:	test   BYTE PTR [rax+0x1c],0x4
  40c001:	jne    0x40aeb8
  40c007:	jmp    0x40ae99
  40c00c:	xor    ebp,ebp
  40c00e:	jmp    0x40ab07
  40c013:	mov    r10d,DWORD PTR [r15+0x18]
  40c017:	movzx  ebx,BYTE PTR [rsi+0x43a]
  40c01e:	test   r10d,r10d
  40c021:	je     0x40b74d
  40c027:	cmp    BYTE PTR [rsi+0x429],0x0
  40c02e:	mov    ecx,0x800
  40c033:	mov    BYTE PTR [rsi+0x429],0x0
  40c03a:	setne  bpl
  40c03e:	call   0x4385d0
  40c043:	mov    QWORD PTR [r15+0x8],rax
  40c047:	cmp    BYTE PTR [rsi+0x43a],0x0
  40c04e:	je     0x40c05e
  40c050:	mov    ecx,0x400
  40c055:	call   0x4385d0
  40c05a:	mov    QWORD PTR [r15+0x28],rax
  40c05e:	test   bl,bl
  40c060:	je     0x40c1c9
  40c066:	mov    eax,DWORD PTR [r15+0x18]
  40c06a:	mov    r9,QWORD PTR [r15+0x20]
  40c06e:	xor    r8d,r8d
  40c071:	xor    edx,edx
  40c073:	mov    rcx,rsi
  40c076:	add    eax,0x1
  40c079:	mov    DWORD PTR [rsp+0x28],eax
  40c07d:	mov    rax,QWORD PTR [r15]
  40c080:	mov    QWORD PTR [rsp+0x20],rax
  40c085:	call   0x409b50
  40c08a:	mov    eax,DWORD PTR [r15+0x1c]
  40c08e:	mov    ebx,0x100
  40c093:	lea    r12d,[rax+0x1]
  40c097:	cmp    rbx,r12
  40c09a:	jb     0x40c185
  40c0a0:	mov    rdx,QWORD PTR [rsp+0xa0]
  40c0a8:	mov    rcx,rsi
  40c0ab:	call   0x40c230
  40c0b0:	cmp    BYTE PTR [rax+0x4],0x16
  40c0b4:	je     0x40c153
  40c0ba:	xor    edx,edx
  40c0bc:	cmp    BYTE PTR [rsi+0x43a],0x0
  40c0c3:	mov    r9d,DWORD PTR [r15+0x1c]
  40c0c7:	mov    r8d,DWORD PTR [rsp+0xc4]
  40c0cf:	mov    DWORD PTR [rsp+0x20],0x2
  40c0d7:	mov    rcx,r15
  40c0da:	setne  dl
  40c0dd:	mov    DWORD PTR [rsp+0x28],edx
  40c0e1:	mov    rdx,rax
  40c0e4:	call   0x409980
  40c0e9:	mov    eax,DWORD PTR [r15+0x1c]
  40c0ed:	add    eax,0x1
  40c0f0:	mov    DWORD PTR [r15+0x1c],eax
  40c0f4:	jmp    0x40c093
  40c0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c100:	mov    r13,QWORD PTR [r12+0x8]
  40c105:	jmp    0x40b68b
  40c10a:	mov    rbx,QWORD PTR [rsp+0x58]
  40c10f:	test   BYTE PTR [rbx+0x1c],0x2
  40c113:	je     0x40bc4d
  40c119:	movzx  edx,WORD PTR [rbx+0x18]
  40c11d:	cmp    DWORD PTR [r13+0x8],edx
  40c121:	jne    0x40bc4d
  40c127:	test   r14,r14
  40c12a:	je     0x40c138
  40c12c:	xor    ebx,ebx
  40c12e:	cmp    QWORD PTR [r14],0x0
  40c132:	jne    0x40b8a4
  40c138:	cmp    rcx,rax
  40c13b:	jae    0x40be80
  40c141:	mov    rax,QWORD PTR [rsp+0x48]
  40c146:	xor    ebx,ebx
  40c148:	mov    QWORD PTR [rax+0x10],rbp
  40c14c:	xor    ebp,ebp
  40c14e:	jmp    0x40b8a4
  40c153:	mov    rcx,rsi
  40c156:	call   0x40a650
  40c15b:	mov    BYTE PTR [rsi+0x429],bpl
  40c162:	jmp    0x40b74d
  40c167:	mov    QWORD PTR [rsp+0x70],r11
  40c16c:	xor    edx,edx
  40c16e:	xor    r13d,r13d
  40c171:	jmp    0x40b487
  40c176:	cmp    BYTE PTR [rsi+0x10],0x0
  40c17a:	je     0x40bfa9
  40c180:	jmp    0x40bf9c
  40c185:	mov    rcx,QWORD PTR [r15+0x8]
  40c189:	mov    rdx,r12
  40c18c:	lea    rbx,[r12+r12*1]
  40c190:	shl    rdx,0x4
  40c194:	call   0x438650
  40c199:	mov    QWORD PTR [r15+0x8],rax
  40c19d:	cmp    BYTE PTR [rsi+0x43a],0x0
  40c1a4:	je     0x40c0a0
  40c1aa:	mov    rcx,QWORD PTR [r15+0x28]
  40c1ae:	test   rcx,rcx
  40c1b1:	je     0x40c208
  40c1b3:	lea    rdx,[r12*8+0x0]
  40c1bb:	call   0x438650
  40c1c0:	mov    QWORD PTR [r15+0x28],rax
  40c1c4:	jmp    0x40c0a0
  40c1c9:	mov    eax,DWORD PTR [r15+0x18]
  40c1cd:	mov    r12,QWORD PTR [r15]
  40c1d0:	mov    rcx,QWORD PTR [rsp+0x98]
  40c1d8:	lea    ebx,[rax+0x1]
  40c1db:	call   0x409ad0
  40c1e0:	lea    rdx,[r12+rbx*8]
  40c1e4:	mov    DWORD PTR [rax+0x30],0x0
  40c1eb:	mov    QWORD PTR [rax+0x28],0x0
  40c1f3:	mov    QWORD PTR [rax+0x20],0x0
  40c1fb:	mov    QWORD PTR [rax+0x10],r12
  40c1ff:	mov    QWORD PTR [rax+0x18],rdx
  40c203:	jmp    0x40c08a
  40c208:	lea    rcx,[r12*8+0x0]
  40c210:	call   0x4385d0
  40c215:	mov    QWORD PTR [r15+0x28],rax
  40c219:	jmp    0x40c0a0
  40c21e:	add    r14,0x8
  40c222:	jmp    0x40b9d5
  40c227:	nop    WORD PTR [rax+rax*1+0x0]
  40c230:	push   r15
  40c232:	push   r14
  40c234:	push   r13
  40c236:	push   r12
  40c238:	push   rbp
  40c239:	push   rdi
  40c23a:	push   rsi
  40c23b:	push   rbx
  40c23c:	sub    rsp,0x78
  40c240:	movzx  eax,BYTE PTR [rcx+0xb4]
  40c247:	xor    ebp,ebp
  40c249:	lea    rdi,[rsp+0x60]
  40c24e:	mov    rbx,rcx
  40c251:	mov    r12,rdx
  40c254:	mov    BYTE PTR [rsp+0x4f],al
  40c258:	lea    rax,[rsp+0x68]
  40c25d:	mov    QWORD PTR [rsp+0x50],rax
  40c262:	mov    rcx,QWORD PTR [rbx+0x88]
  40c269:	cmp    QWORD PTR [rcx+0x8],0x0
  40c26e:	je     0x40c580
  40c274:	mov    eax,DWORD PTR [rcx+0x30]
  40c277:	cmp    eax,0x1
  40c27a:	je     0x40c492
  40c280:	test   eax,0xfffffffd
  40c285:	jne    0x40c754
  40c28b:	mov    rdx,QWORD PTR [rcx+0x10]
  40c28f:	cmp    rdx,QWORD PTR [rcx+0x18]
  40c293:	jne    0x40c340
  40c299:	cmp    QWORD PTR [rcx+0x28],0x0
  40c29e:	je     0x40c2a7
  40c2a0:	add    DWORD PTR [rip+0x4d07d],0x1        # 0x459324
  40c2a7:	mov    rcx,rbx
  40c2aa:	call   0x40a650
  40c2af:	cmp    BYTE PTR [rbx+0x10],0x0
  40c2b3:	jne    0x40c262
  40c2b5:	lea    rsi,[rbx+0x278]
  40c2bc:	nop    DWORD PTR [rax+0x0]
  40c2c0:	test   r12,r12
  40c2c3:	je     0x40c31e
  40c2c5:	test   ebp,ebp
  40c2c7:	jne    0x40c2cb
  40c2c9:	mov    ebp,DWORD PTR [rsi]
  40c2cb:	mov    DWORD PTR [r12],ebp
  40c2cf:	cmp    BYTE PTR [rbx+0x43a],0x0
  40c2d6:	mov    eax,ebp
  40c2d8:	jne    0x40c307
  40c2da:	mov    rdx,QWORD PTR [rbx+0x88]
  40c2e1:	test   rdx,rdx
  40c2e4:	je     0x40c307
  40c2e6:	cmp    DWORD PTR [rdx+0x30],0x2
  40c2ea:	mov    rax,QWORD PTR [rdx+0x28]
  40c2ee:	je     0x40c745
  40c2f4:	test   rax,rax
  40c2f7:	je     0x40c74d
  40c2fd:	mov    eax,DWORD PTR [rbx+0xb0]
  40c303:	mov    DWORD PTR [r12],eax
  40c307:	cmp    BYTE PTR [rbx+0x43d],0x0
  40c30e:	mov    edx,DWORD PTR [rbx+0x30]
  40c311:	je     0x40c31a
  40c313:	cmp    BYTE PTR [rbx+0x10],0x0
  40c317:	cmovne eax,edx
  40c31a:	mov    DWORD PTR [r12],eax
  40c31e:	movzx  eax,BYTE PTR [rsp+0x4f]
  40c323:	mov    BYTE PTR [rbx+0xb4],al
  40c329:	mov    rax,rsi
  40c32c:	add    rsp,0x78
  40c330:	pop    rbx
  40c331:	pop    rsi
  40c332:	pop    rdi
  40c333:	pop    rbp
  40c334:	pop    r12
  40c336:	pop    r13
  40c338:	pop    r14
  40c33a:	pop    r15
  40c33c:	ret    
  40c33d:	nop    DWORD PTR [rax]
  40c340:	test   eax,eax
  40c342:	je     0x40c5a0
  40c348:	cmp    eax,0x2
  40c34b:	jne    0x40c754
  40c351:	mov    r8,QWORD PTR [rcx+0x28]
  40c355:	mov    rsi,QWORD PTR [rdx]
  40c358:	cmp    QWORD PTR [r8+0x8],0x0
  40c35d:	je     0x40c660
  40c363:	mov    rax,QWORD PTR [r8+0x10]
  40c367:	mov    ebp,DWORD PTR [rax]
  40c369:	add    rax,0x4
  40c36d:	mov    QWORD PTR [r8+0x10],rax
  40c371:	add    rdx,0x8
  40c375:	mov    QWORD PTR [rcx+0x10],rdx
  40c379:	test   BYTE PTR [rsi+0x6],0x8
  40c37d:	jne    0x40c4b4
  40c383:	cmp    BYTE PTR [rbx+0x10],0x0
  40c387:	movzx  eax,BYTE PTR [rsi+0x4]
  40c38b:	je     0x40c395
  40c38d:	cmp    al,0x4d
  40c38f:	je     0x40c262
  40c395:	cmp    al,0x35
  40c397:	jne    0x40c2c0
  40c39d:	mov    rdx,QWORD PTR [rsi+0x8]
  40c3a1:	movzx  eax,BYTE PTR [rdx+0x18]
  40c3a5:	and    eax,0x3f
  40c3a8:	cmp    al,0x1
  40c3aa:	jne    0x40c2c0
  40c3b0:	test   BYTE PTR [rsi+0x6],0x20
  40c3b4:	jne    0x40c2c0
  40c3ba:	test   BYTE PTR [rdx+0x19],0x8
  40c3be:	jne    0x40c710
  40c3c4:	cmp    BYTE PTR [rbx+0xb4],0x0
  40c3cb:	jne    0x40c3f4
  40c3cd:	mov    rax,QWORD PTR [rbx+0x88]
  40c3d4:	test   rax,rax
  40c3d7:	je     0x40c592
  40c3dd:	cmp    DWORD PTR [rax+0x30],0x2
  40c3e1:	mov    rax,QWORD PTR [rax+0x28]
  40c3e5:	je     0x40c654
  40c3eb:	test   rax,rax
  40c3ee:	je     0x40c592
  40c3f4:	cmp    BYTE PTR [rbx+0x18],0x0
  40c3f8:	jne    0x40c2c0
  40c3fe:	test   BYTE PTR [rdx+0x19],0x40
  40c402:	je     0x40c5b2
  40c408:	cmp    QWORD PTR [rbx+0x3c0],0x0
  40c410:	je     0x40c2c0
  40c416:	xor    edx,edx
  40c418:	mov    rcx,rbx
  40c41b:	call   0x41cab0
  40c420:	cmp    BYTE PTR [rax+0x4],0x51
  40c424:	mov    rdx,rsi
  40c427:	mov    rcx,rbx
  40c42a:	je     0x40c436
  40c42c:	test   BYTE PTR [rax+0x6],0x1
  40c430:	je     0x40c565
  40c436:	call   QWORD PTR [rbx+0x3c0]
  40c43c:	test   rax,rax
  40c43f:	je     0x40c605
  40c445:	mov    r9d,ebp
  40c448:	mov    r8,rsi
  40c44b:	mov    rdx,rax
  40c44e:	mov    rcx,rbx
  40c451:	call   0x40aa00
  40c456:	test   eax,eax
  40c458:	je     0x40c2c0
  40c45e:	cmp    eax,0x2
  40c461:	je     0x40c262
  40c467:	cmp    BYTE PTR [rbx+0x10],0x0
  40c46b:	jne    0x40c262
  40c471:	mov    rdi,rsi
  40c474:	mov    rcx,rbx
  40c477:	call   0x419f10
  40c47c:	mov    rsi,rax
  40c47f:	mov    BYTE PTR [rax+0x4],0x51
  40c483:	mov    QWORD PTR [rax+0x8],rdi
  40c487:	xor    eax,eax
  40c489:	mov    WORD PTR [rsi+0x6],ax
  40c48d:	jmp    0x40c2c0
  40c492:	mov    rsi,QWORD PTR [rcx+0x10]
  40c496:	cmp    rsi,QWORD PTR [rcx+0x18]
  40c49a:	je     0x40c299
  40c4a0:	lea    rax,[rsi+0x18]
  40c4a4:	mov    ebp,DWORD PTR [rsi]
  40c4a6:	mov    QWORD PTR [rcx+0x10],rax
  40c4aa:	test   BYTE PTR [rsi+0x6],0x8
  40c4ae:	je     0x40c383
  40c4b4:	mov    r14,QWORD PTR [rbx+0x88]
  40c4bb:	mov    QWORD PTR [rsp+0x60],rsi
  40c4c0:	test   r14,r14
  40c4c3:	je     0x40c754
  40c4c9:	mov    eax,DWORD PTR [r14+0x30]
  40c4cd:	cmp    eax,0x2
  40c4d0:	je     0x40c670
  40c4d6:	cmp    QWORD PTR [r14+0x28],0x0
  40c4db:	je     0x40c754
  40c4e1:	mov    r15d,DWORD PTR [rbx+0xb0]
  40c4e8:	xor    r13d,r13d
  40c4eb:	jmp    0x40c539
  40c4ed:	nop    DWORD PTR [rax]
  40c4f0:	mov    rax,QWORD PTR [r14+0x10]
  40c4f4:	lea    rdx,[rax+0x8]
  40c4f8:	mov    QWORD PTR [r14+0x10],rdx
  40c4fc:	mov    r13,QWORD PTR [rax]
  40c4ff:	cmp    BYTE PTR [r13+0x4],0x51
  40c504:	jne    0x40c511
  40c506:	test   BYTE PTR [r13+0x6],0x8
  40c50b:	jne    0x40c754
  40c511:	mov    r9,r13
  40c514:	mov    r8,rdi
  40c517:	mov    edx,r15d
  40c51a:	mov    rcx,rbx
  40c51d:	call   0x40a850
  40c522:	test   al,al
  40c524:	je     0x40c5e0
  40c52a:	test   BYTE PTR [r13+0x6],0x8
  40c52f:	je     0x40c5e0
  40c535:	mov    eax,DWORD PTR [r14+0x30]
  40c539:	cmp    eax,0x1
  40c53c:	je     0x40c5c5
  40c542:	test   eax,eax
  40c544:	je     0x40c4f0
  40c546:	cmp    eax,0x2
  40c549:	jne    0x40c4ff
  40c54b:	mov    rax,QWORD PTR [r14+0x10]
  40c54f:	lea    rdx,[rax+0x8]
  40c553:	mov    QWORD PTR [r14+0x10],rdx
  40c557:	mov    r13,QWORD PTR [rax]
  40c55a:	mov    rax,QWORD PTR [r14+0x28]
  40c55e:	add    QWORD PTR [rax+0x10],0x4
  40c563:	jmp    0x40c4ff
  40c565:	call   QWORD PTR [rbx+0x3c0]
  40c56b:	test   rax,rax
  40c56e:	jne    0x40c445
  40c574:	jmp    0x40c2c0
  40c579:	nop    DWORD PTR [rax+0x0]
  40c580:	mov    rcx,rbx
  40c583:	call   0x41c950
  40c588:	mov    rsi,rax
  40c58b:	mov    ebp,DWORD PTR [rax]
  40c58d:	jmp    0x40c383
  40c592:	mov    eax,DWORD PTR [rsi]
  40c594:	mov    DWORD PTR [rbx+0xb0],eax
  40c59a:	jmp    0x40c3f4
  40c59f:	nop
  40c5a0:	mov    rsi,QWORD PTR [rdx]
  40c5a3:	add    rdx,0x8
  40c5a7:	mov    ebp,DWORD PTR [rsi]
  40c5a9:	mov    QWORD PTR [rcx+0x10],rdx
  40c5ad:	jmp    0x40c379
  40c5b2:	mov    r9d,ebp
  40c5b5:	mov    r8,rsi
  40c5b8:	mov    rcx,rbx
  40c5bb:	call   0x40aa00
  40c5c0:	jmp    0x40c456
  40c5c5:	mov    r13,QWORD PTR [r14+0x10]
  40c5c9:	lea    rax,[r13+0x18]
  40c5cd:	mov    QWORD PTR [r14+0x10],rax
  40c5d1:	jmp    0x40c4ff
  40c5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c5e0:	cmp    DWORD PTR [r14+0x30],0x2
  40c5e5:	je     0x40c690
  40c5eb:	mov    r8,QWORD PTR [rsp+0x60]
  40c5f0:	mov    r9d,0x1
  40c5f6:	xor    edx,edx
  40c5f8:	mov    rcx,rbx
  40c5fb:	call   0x40a480
  40c600:	jmp    0x40c467
  40c605:	xor    edx,edx
  40c607:	mov    rcx,rbx
  40c60a:	call   0x41cab0
  40c60f:	cmp    BYTE PTR [rax+0x4],0x51
  40c613:	mov    rdi,rax
  40c616:	je     0x40c2c0
  40c61c:	test   BYTE PTR [rax+0x6],0x1
  40c620:	jne    0x40c2c0
  40c626:	mov    rcx,rbx
  40c629:	call   0x419f10
  40c62e:	xor    edx,edx
  40c630:	mov    r8,rax
  40c633:	mov    BYTE PTR [rax+0x4],0x51
  40c637:	mov    WORD PTR [rax+0x6],dx
  40c63b:	mov    QWORD PTR [rax+0x8],rdi
  40c63f:	mov    r9d,0x1
  40c645:	xor    edx,edx
  40c647:	mov    rcx,rbx
  40c64a:	call   0x40a480
  40c64f:	jmp    0x40c2c0
  40c654:	mov    rax,QWORD PTR [rax]
  40c657:	jmp    0x40c3eb
  40c65c:	nop    DWORD PTR [rax+0x0]
  40c660:	mov    ebp,DWORD PTR [rsi]
  40c662:	jmp    0x40c371
  40c667:	nop    WORD PTR [rax+rax*1+0x0]
  40c670:	mov    rdx,QWORD PTR [r14+0x28]
  40c674:	cmp    QWORD PTR [rdx],0x0
  40c678:	je     0x40c754
  40c67e:	mov    rdx,QWORD PTR [rdx+0x10]
  40c682:	mov    r15d,DWORD PTR [rdx-0x4]
  40c686:	jmp    0x40c4e8
  40c68b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c690:	mov    r8,QWORD PTR [rsp+0x50]
  40c695:	mov    rcx,rbx
  40c698:	mov    edx,0x1
  40c69d:	mov    QWORD PTR [rsp+0x68],0x0
  40c6a6:	call   0x409a10
  40c6ab:	mov    r8,QWORD PTR [rsp+0x60]
  40c6b0:	mov    rdx,QWORD PTR [rsp+0x68]
  40c6b5:	mov    r9d,r15d
  40c6b8:	mov    DWORD PTR [rsp+0x30],0x0
  40c6c0:	mov    QWORD PTR [rsp+0x28],0x0
  40c6c9:	mov    rcx,rax
  40c6cc:	mov    DWORD PTR [rsp+0x20],0x0
  40c6d4:	mov    QWORD PTR [rsp+0x58],rax
  40c6d9:	call   0x409a50
  40c6de:	mov    r10,QWORD PTR [rsp+0x58]
  40c6e3:	mov    rax,QWORD PTR [r14+0x28]
  40c6e7:	mov    rcx,rbx
  40c6ea:	mov    DWORD PTR [rsp+0x28],0x1
  40c6f2:	mov    r9,QWORD PTR [rsp+0x68]
  40c6f7:	mov    rdx,QWORD PTR [r10+0x8]
  40c6fb:	mov    r8,r10
  40c6fe:	mov    QWORD PTR [rsp+0x20],rdx
  40c703:	mov    rdx,QWORD PTR [rax]
  40c706:	call   0x409b50
  40c70b:	jmp    0x40c467
  40c710:	mov    rdi,rsi
  40c713:	mov    rcx,rbx
  40c716:	call   0x419f10
  40c71b:	mov    rsi,rax
  40c71e:	movzx  eax,BYTE PTR [rdi+0x4]
  40c722:	mov    rdx,QWORD PTR [rdi+0x10]
  40c726:	mov    BYTE PTR [rsi+0x4],al
  40c729:	movzx  eax,WORD PTR [rdi+0x6]
  40c72d:	or     eax,0x20
  40c730:	mov    WORD PTR [rsi+0x6],ax
  40c734:	mov    rax,QWORD PTR [rdi+0x8]
  40c738:	mov    QWORD PTR [rsi+0x10],rdx
  40c73c:	mov    QWORD PTR [rsi+0x8],rax
  40c740:	jmp    0x40c2c0
  40c745:	mov    rax,QWORD PTR [rax]
  40c748:	jmp    0x40c2f4
  40c74d:	mov    eax,ebp
  40c74f:	jmp    0x40c307
  40c754:	call   0x43f180
  40c759:	nop
  40c75a:	nop    WORD PTR [rax+rax*1+0x0]
  40c760:	xor    edx,edx
  40c762:	jmp    0x40c230
  40c767:	nop    WORD PTR [rax+rax*1+0x0]
  40c770:	push   rbx
  40c771:	sub    rsp,0x20
  40c775:	mov    rax,QWORD PTR [rcx]
  40c778:	mov    rbx,rcx
  40c77b:	or     BYTE PTR [rax+0x6c],0x4
  40c77f:	add    BYTE PTR [rcx+0x1b],0x1
  40c783:	add    BYTE PTR [rcx+0x18],0x1
  40c787:	cmp    BYTE PTR [rcx+0x43d],0x0
  40c78e:	je     0x40c7b0
  40c790:	mov    rcx,rbx
  40c793:	call   0x40e730
  40c798:	test   al,al
  40c79a:	jne    0x40c790
  40c79c:	sub    BYTE PTR [rbx+0x1b],0x1
  40c7a0:	sub    BYTE PTR [rbx+0x18],0x1
  40c7a4:	add    rsp,0x20
  40c7a8:	pop    rbx
  40c7a9:	ret    
  40c7aa:	nop    WORD PTR [rax+rax*1+0x0]
  40c7b0:	xor    edx,edx
  40c7b2:	mov    rcx,rbx
  40c7b5:	call   0x40c230
  40c7ba:	cmp    BYTE PTR [rax+0x4],0x16
  40c7be:	je     0x40c79c
  40c7c0:	xor    edx,edx
  40c7c2:	mov    rcx,rbx
  40c7c5:	call   0x40c230
  40c7ca:	cmp    BYTE PTR [rax+0x4],0x16
  40c7ce:	jne    0x40c7b0
  40c7d0:	jmp    0x40c79c
  40c7d2:	nop    DWORD PTR [rax+0x0]
  40c7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c7e0:	jmp    0x40c230
  40c7e5:	nop
  40c7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c7f0:	and    BYTE PTR [rcx+0x18],0xc0
  40c7f4:	and    WORD PTR [rcx+0x18],0xd6ff
  40c7fa:	ret    
  40c7fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c800:	push   rbp
  40c801:	push   rdi
  40c802:	push   rsi
  40c803:	push   rbx
  40c804:	sub    rsp,0x28
  40c808:	test   BYTE PTR [r8+0x19],0x10
  40c80d:	mov    rsi,rcx
  40c810:	mov    rdi,rdx
  40c813:	mov    rbx,r8
  40c816:	jne    0x40c8c5
  40c81c:	mov    rdx,QWORD PTR [rcx+0x38]
  40c820:	movzx  r8d,WORD PTR [rdi+0x18]
  40c825:	mov    rcx,QWORD PTR [rdx+0x10]
  40c829:	mov    rdx,QWORD PTR [rdx+0x18]
  40c82d:	mov    rax,r8
  40c830:	lea    r8,[r8*8+0x8]
  40c838:	sub    rdx,rcx
  40c83b:	cmp    rdx,r8
  40c83e:	jb     0x40c884
  40c840:	lea    edx,[rax+0x1]
  40c843:	mov    WORD PTR [rdi+0x18],dx
  40c847:	mov    QWORD PTR [rcx+rax*8],rbx
  40c84b:	or     WORD PTR [rbx+0x18],0x1000
  40c851:	movzx  ebp,WORD PTR [rdi+0x18]
  40c855:	mov    edx,ebp
  40c857:	shl    ebp,0x3
  40c85a:	cmp    ebp,DWORD PTR [rsi+0x1e8]
  40c860:	ja     0x40c8a4
  40c862:	mov    rax,QWORD PTR [rsi+0x1e0]
  40c869:	mov    r8,QWORD PTR [rbx+0x20]
  40c86d:	movzx  ecx,dx
  40c870:	mov    QWORD PTR [rax+rcx*8-0x8],r8
  40c875:	xor    eax,eax
  40c877:	mov    WORD PTR [rbx+0x20],dx
  40c87b:	add    rsp,0x28
  40c87f:	pop    rbx
  40c880:	pop    rsi
  40c881:	pop    rdi
  40c882:	pop    rbp
  40c883:	ret    
  40c884:	lea    rdx,[rsi+0x38]
  40c888:	mov    rcx,rsi
  40c88b:	mov    r8d,0x8
  40c891:	call   0x41ab60
  40c896:	mov    rax,QWORD PTR [rsi+0x38]
  40c89a:	mov    rcx,QWORD PTR [rax+0x10]
  40c89e:	movzx  eax,WORD PTR [rdi+0x18]
  40c8a2:	jmp    0x40c840
  40c8a4:	mov    rcx,QWORD PTR [rsi+0x1e0]
  40c8ab:	mov    edx,ebp
  40c8ad:	call   0x438650
  40c8b2:	mov    DWORD PTR [rsi+0x1e8],ebp
  40c8b8:	mov    QWORD PTR [rsi+0x1e0],rax
  40c8bf:	movzx  edx,WORD PTR [rdi+0x18]
  40c8c3:	jmp    0x40c869
  40c8c5:	mov    r9,QWORD PTR [r8]
  40c8c8:	lea    r8,[rip+0x38b81]        # 0x445450
  40c8cf:	mov    edx,0x3
  40c8d4:	call   0x412660
  40c8d9:	mov    eax,0x1
  40c8de:	add    rsp,0x28
  40c8e2:	pop    rbx
  40c8e3:	pop    rsi
  40c8e4:	pop    rdi
  40c8e5:	pop    rbp
  40c8e6:	ret    
  40c8e7:	nop    WORD PTR [rax+rax*1+0x0]
  40c8f0:	push   r13
  40c8f2:	push   r12
  40c8f4:	push   rbp
  40c8f5:	push   rdi
  40c8f6:	push   rsi
  40c8f7:	push   rbx
  40c8f8:	sub    rsp,0x38
  40c8fc:	mov    rax,QWORD PTR [rcx+0x3f8]
  40c903:	mov    rsi,rcx
  40c906:	mov    rbp,rdx
  40c909:	mov    rax,QWORD PTR [rax+0x68]
  40c90d:	test   rax,rax
  40c910:	je     0x40cee0
  40c916:	mov    ecx,0x20
  40c91b:	call   rax
  40c91d:	mov    rbx,rax
  40c920:	mov    eax,DWORD PTR [rsi+0x30]
  40c923:	mov    QWORD PTR [rbx],0x0
  40c92a:	mov    DWORD PTR [rbx+0x10],eax
  40c92d:	xor    eax,eax
  40c92f:	mov    WORD PTR [rbx+0x18],ax
  40c933:	movzx  eax,BYTE PTR [rbx+0x1c]
  40c937:	mov    edx,eax
  40c939:	and    edx,0xfffffffd
  40c93c:	mov    BYTE PTR [rbx+0x1c],dl
  40c93f:	cmp    BYTE PTR [rsi+0x434],0x0
  40c946:	mov    DWORD PTR [rbx+0x14],0x0
  40c94d:	sete   dl
  40c950:	and    eax,0xffffffd4
  40c953:	shl    edx,0x3
  40c956:	or     eax,edx
  40c958:	mov    BYTE PTR [rbx+0x1c],al
  40c95b:	mov    rax,QWORD PTR [rsi]
  40c95e:	test   rax,rax
  40c961:	je     0x40cef2
  40c967:	cmp    BYTE PTR [rax+0x6d],0x0
  40c96b:	setne  al
  40c96e:	movzx  edx,BYTE PTR [rbx+0x1c]
  40c972:	shl    eax,0x2
  40c975:	and    edx,0xfffffffb
  40c978:	or     eax,edx
  40c97a:	mov    BYTE PTR [rbx+0x1c],al
  40c97d:	cmp    BYTE PTR [rsi+0x43d],0x0
  40c984:	je     0x40caa5
  40c98a:	mov    rdx,rbx
  40c98d:	mov    rcx,rsi
  40c990:	call   0x40e8a0
  40c995:	mov    r12d,eax
  40c998:	movzx  eax,WORD PTR [rbx+0x18]
  40c99c:	test   eax,eax
  40c99e:	lea    r8d,[rax-0x1]
  40c9a2:	je     0x40c9ce
  40c9a4:	mov    rax,QWORD PTR [rbx]
  40c9a7:	mov    edx,r8d
  40c9aa:	sub    r8d,0x1
  40c9ae:	mov    r9,QWORD PTR [rax+rdx*8]
  40c9b2:	and    WORD PTR [r9+0x18],0xefff
  40c9b9:	cmp    r8d,0xffffffff
  40c9bd:	mov    rax,QWORD PTR [rsi+0x1e0]
  40c9c4:	mov    rdx,QWORD PTR [rax+rdx*8]
  40c9c8:	mov    QWORD PTR [r9+0x20],rdx
  40c9cc:	jne    0x40c9a4
  40c9ce:	test   r12b,r12b
  40c9d1:	je     0x40ca95
  40c9d7:	movzx  eax,BYTE PTR [rbp+0x18]
  40c9db:	and    eax,0x3f
  40c9de:	cmp    al,0x1
  40c9e0:	je     0x40cd90
  40c9e6:	movzx  edx,WORD PTR [rbp+0x18]
  40c9ea:	shr    dx,0x6
  40c9ee:	test   al,al
  40c9f0:	je     0x40ca09
  40c9f2:	movzx  ecx,WORD PTR [rbp+0x18]
  40c9f6:	and    dx,0x35b
  40c9fb:	mov    eax,edx
  40c9fd:	shl    eax,0x6
  40ca00:	and    ecx,0x3f
  40ca03:	or     eax,ecx
  40ca05:	mov    WORD PTR [rbp+0x18],ax
  40ca09:	movzx  eax,BYTE PTR [rbp+0x18]
  40ca0d:	lea    rdi,[rip+0x38c7c]        # 0x445690
  40ca14:	mov    QWORD PTR [rbp+0x20],rbx
  40ca18:	mov    ecx,0x7
  40ca1d:	and    eax,0xffffffc0
  40ca20:	or     eax,0x1
  40ca23:	mov    BYTE PTR [rbp+0x18],al
  40ca26:	mov    rax,QWORD PTR [rbp+0x0]
  40ca2a:	mov    rsi,rax
  40ca2d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ca2f:	jne    0x40ca80
  40ca31:	lea    rdi,[rip+0x38c60]        # 0x445698
  40ca38:	mov    ecx,0x15
  40ca3d:	mov    rsi,rax
  40ca40:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ca42:	je     0x40ca80
  40ca44:	lea    rdi,[rip+0x38c62]        # 0x4456ad
  40ca4b:	mov    ecx,0x14
  40ca50:	mov    rsi,rax
  40ca53:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ca55:	je     0x40ca80
  40ca57:	lea    rdi,[rip+0x38c63]        # 0x4456c1
  40ca5e:	mov    ecx,0x17
  40ca63:	mov    rsi,rax
  40ca66:	mov    eax,edx
  40ca68:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ca6a:	seta   r8b
  40ca6e:	setb   cl
  40ca71:	or     eax,0x10
  40ca74:	cmp    r8b,cl
  40ca77:	cmovne edx,eax
  40ca7a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca80:	movzx  eax,WORD PTR [rbp+0x18]
  40ca84:	and    dx,0x2ff
  40ca89:	shl    edx,0x6
  40ca8c:	and    eax,0x3f
  40ca8f:	or     edx,eax
  40ca91:	mov    WORD PTR [rbp+0x18],dx
  40ca95:	mov    eax,r12d
  40ca98:	add    rsp,0x38
  40ca9c:	pop    rbx
  40ca9d:	pop    rsi
  40ca9e:	pop    rdi
  40ca9f:	pop    rbp
  40caa0:	pop    r12
  40caa2:	pop    r13
  40caa4:	ret    
  40caa5:	mov    rcx,rsi
  40caa8:	call   0x41c950
  40caad:	mov    rdi,rax
  40cab0:	movzx  eax,BYTE PTR [rax+0x4]
  40cab4:	cmp    al,0x14
  40cab6:	je     0x40ce73
  40cabc:	cmp    al,0x16
  40cabe:	je     0x40cb14
  40cac0:	test   BYTE PTR [rdi+0x6],0x1
  40cac4:	jne    0x40cb14
  40cac6:	cmp    BYTE PTR [rsi+0x435],0x0
  40cacd:	jne    0x40d150
  40cad3:	cmp    al,0x36
  40cad5:	je     0x40d104
  40cadb:	jbe    0x40d0fc
  40cae1:	cmp    al,0x3c
  40cae3:	jne    0x40cf28
  40cae9:	mov    rax,QWORD PTR [rdi+0x10]
  40caed:	lea    rcx,[rip+0x38aad]        # 0x4455a1
  40caf4:	movzx  edx,BYTE PTR [rax]
  40caf7:	call   0x43f050
  40cafc:	cmp    rax,0x1
  40cb00:	sbb    edx,edx
  40cb02:	and    edx,0x2
  40cb05:	lea    r8,[rip+0x38ab4]        # 0x4455c0
  40cb0c:	mov    rcx,rsi
  40cb0f:	call   0x412660
  40cb14:	test   BYTE PTR [rbx+0x1c],0x1
  40cb18:	je     0x40cd40
  40cb1e:	mov    rdx,rbx
  40cb21:	mov    rcx,rsi
  40cb24:	call   0x409c50
  40cb29:	xor    r12d,r12d
  40cb2c:	xor    edi,edi
  40cb2e:	jmp    0x40cb53
  40cb30:	sub    r8d,0x1
  40cb34:	or     BYTE PTR [rbx+0x1c],0x20
  40cb38:	add    r12d,0x1
  40cb3c:	mov    DWORD PTR [rax+0x8],r8d
  40cb40:	cmp    r9b,0x26
  40cb44:	mov    rdx,rbx
  40cb47:	mov    rcx,rsi
  40cb4a:	sete   dil
  40cb4e:	call   0x409c50
  40cb53:	mov    r8d,DWORD PTR [rbx+0x14]
  40cb57:	cmp    r8d,0x1
  40cb5b:	jbe    0x40cb63
  40cb5d:	cmp    BYTE PTR [rax-0x14],0x25
  40cb61:	je     0x40cbc0
  40cb63:	movzx  r9d,BYTE PTR [rax+0x4]
  40cb68:	cmp    r9b,0x16
  40cb6c:	je     0x40cc00
  40cb72:	cmp    r9b,0x26
  40cb76:	jne    0x40cb40
  40cb78:	cmp    r8d,0x1
  40cb7c:	je     0x40cd70
  40cb82:	movzx  edx,WORD PTR [rax-0x12]
  40cb86:	test   dl,0x8
  40cb89:	jne    0x40cb30
  40cb8b:	mov    ecx,edx
  40cb8d:	sub    r8d,0x1
  40cb91:	or     ecx,0x8
  40cb94:	mov    DWORD PTR [rbx+0x14],r8d
  40cb98:	mov    WORD PTR [rax-0x12],cx
  40cb9c:	movzx  ecx,WORD PTR [rax+0x6]
  40cba0:	test   cl,0x2
  40cba3:	je     0x40cbae
  40cba5:	or     dx,0x108
  40cbaa:	mov    WORD PTR [rax-0x12],dx
  40cbae:	and    ecx,0x1
  40cbb1:	je     0x40cb40
  40cbb3:	or     WORD PTR [rax-0x12],0x200
  40cbb9:	jmp    0x40cb40
  40cbbb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbc0:	test   BYTE PTR [rbx+0x1c],0x1
  40cbc4:	movzx  r9d,BYTE PTR [rax+0x4]
  40cbc9:	je     0x40cb68
  40cbcb:	cmp    r9b,0x4e
  40cbcf:	je     0x40cce0
  40cbd5:	cmp    DWORD PTR [rsi+0x414],0xd
  40cbdc:	je     0x40cb68
  40cbde:	lea    r8,[rip+0x38a03]        # 0x4455e8
  40cbe5:	mov    edx,0x3
  40cbea:	mov    rcx,rsi
  40cbed:	xor    r12d,r12d
  40cbf0:	call   0x412660
  40cbf5:	jmp    0x40cd87
  40cbfa:	nop    WORD PTR [rax+rax*1+0x0]
  40cc00:	test   dil,dil
  40cc03:	jne    0x40cd70
  40cc09:	mov    rax,QWORD PTR [rsi+0x38]
  40cc0d:	sub    r8d,0x1
  40cc11:	mov    rax,QWORD PTR [rax+0x10]
  40cc15:	and    BYTE PTR [rbx+0x1c],0xef
  40cc19:	test   r8d,r8d
  40cc1c:	mov    DWORD PTR [rbx+0x14],r8d
  40cc20:	mov    QWORD PTR [rbx+0x8],rax
  40cc24:	je     0x40cc2b
  40cc26:	and    WORD PTR [rax+0x6],0xfffe
  40cc2b:	mov    rdx,QWORD PTR [rsi+0x3f8]
  40cc32:	mov    rdx,QWORD PTR [rdx+0x68]
  40cc36:	test   rdx,rdx
  40cc39:	je     0x40ceab
  40cc3f:	lea    rcx,[r8+r8*2]
  40cc43:	shl    rcx,0x3
  40cc47:	call   rdx
  40cc49:	test   r12d,r12d
  40cc4c:	mov    r11,rax
  40cc4f:	mov    eax,DWORD PTR [rbx+0x14]
  40cc52:	je     0x40cf0c
  40cc58:	mov    rcx,rax
  40cc5b:	sub    rax,r12
  40cc5e:	lea    rax,[rax+rax*2]
  40cc62:	test   ecx,ecx
  40cc64:	lea    r9,[r11+rax*8]
  40cc68:	je     0x40ccd0
  40cc6a:	lea    eax,[rcx-0x1]
  40cc6d:	mov    rdx,QWORD PTR [rbx+0x8]
  40cc71:	mov    r8,r11
  40cc74:	lea    rax,[rax+rax*2+0x3]
  40cc79:	lea    rcx,[rdx+rax*8]
  40cc7d:	jmp    0x40cca0
  40cc7f:	nop
  40cc80:	mov    QWORD PTR [r8],rax
  40cc83:	mov    r10,QWORD PTR [rdx+0x8]
  40cc87:	add    rdx,0x18
  40cc8b:	add    r8,0x18
  40cc8f:	mov    QWORD PTR [r8-0x10],r10
  40cc93:	mov    r10,QWORD PTR [rdx-0x8]
  40cc97:	mov    QWORD PTR [r8-0x8],r10
  40cc9b:	cmp    rdx,rcx
  40cc9e:	je     0x40ccd0
  40cca0:	cmp    BYTE PTR [rdx+0x4],0x26
  40cca4:	mov    rax,QWORD PTR [rdx]
  40cca7:	jne    0x40cc80
  40cca9:	mov    QWORD PTR [r9],rax
  40ccac:	mov    rax,QWORD PTR [rdx+0x8]
  40ccb0:	add    rdx,0x18
  40ccb4:	add    r9,0x18
  40ccb8:	mov    QWORD PTR [r9-0x10],rax
  40ccbc:	mov    rax,QWORD PTR [rdx-0x8]
  40ccc0:	mov    QWORD PTR [r9-0x8],rax
  40ccc4:	cmp    rdx,rcx
  40ccc7:	jne    0x40cca0
  40ccc9:	nop    DWORD PTR [rax+0x0]
  40ccd0:	mov    QWORD PTR [rbx+0x8],r11
  40ccd4:	mov    r12d,0x1
  40ccda:	jmp    0x40cd87
  40ccdf:	nop
  40cce0:	movzx  edx,WORD PTR [rax+0x6]
  40cce4:	test   dl,0x1
  40cce7:	je     0x40ccf0
  40cce9:	or     dh,0x2
  40ccec:	mov    WORD PTR [rax+0x6],dx
  40ccf0:	movzx  ecx,WORD PTR [rax-0x12]
  40ccf4:	mov    r10d,edx
  40ccf7:	or     r10w,0x100
  40ccfd:	test   cl,0x2
  40cd00:	cmovne edx,r10d
  40cd04:	and    ecx,0x1
  40cd07:	sub    r8d,0x1
  40cd0b:	and    edx,0xfffffffe
  40cd0e:	or     edx,0x4
  40cd11:	or     edx,ecx
  40cd13:	mov    WORD PTR [rax+0x6],dx
  40cd17:	mov    rdx,QWORD PTR [rax]
  40cd1a:	mov    QWORD PTR [rax-0x18],rdx
  40cd1e:	mov    rdx,QWORD PTR [rax+0x8]
  40cd22:	mov    QWORD PTR [rax-0x10],rdx
  40cd26:	mov    rdx,QWORD PTR [rax+0x10]
  40cd2a:	mov    QWORD PTR [rax-0x8],rdx
  40cd2e:	mov    DWORD PTR [rbx+0x14],r8d
  40cd32:	jmp    0x40cb40
  40cd37:	nop    WORD PTR [rax+rax*1+0x0]
  40cd40:	lea    rdx,[rbx+0x14]
  40cd44:	mov    rcx,rsi
  40cd47:	call   0x409bf0
  40cd4c:	mov    rdx,QWORD PTR [rdi]
  40cd4f:	mov    QWORD PTR [rax],rdx
  40cd52:	mov    rdx,QWORD PTR [rdi+0x8]
  40cd56:	mov    QWORD PTR [rax+0x8],rdx
  40cd5a:	mov    rdx,QWORD PTR [rdi+0x10]
  40cd5e:	mov    QWORD PTR [rax+0x10],rdx
  40cd62:	jmp    0x40cb29
  40cd67:	nop    WORD PTR [rax+rax*1+0x0]
  40cd70:	lea    r8,[rip+0x388a1]        # 0x445618
  40cd77:	mov    edx,0x3
  40cd7c:	mov    rcx,rsi
  40cd7f:	xor    r12d,r12d
  40cd82:	call   0x412660
  40cd87:	mov    BYTE PTR [rsi+0x16],0x0
  40cd8b:	jmp    0x40c998
  40cd90:	cmp    BYTE PTR [rsi+0x434],0x0
  40cd97:	jne    0x40cef9
  40cd9d:	movzx  edx,WORD PTR [rbp+0x18]
  40cda1:	shr    dx,0x6
  40cda5:	test   dl,0x10
  40cda8:	jne    0x40cdf2
  40cdaa:	test   dl,0x4
  40cdad:	je     0x40cdd7
  40cdaf:	mov    rax,QWORD PTR [rsi+0x3f0]
  40cdb6:	test   rax,rax
  40cdb9:	je     0x40cece
  40cdbf:	mov    rdx,rbp
  40cdc2:	mov    rcx,rsi
  40cdc5:	call   rax
  40cdc7:	movzx  edx,WORD PTR [rbp+0x18]
  40cdcb:	shr    dx,0x6
  40cdcf:	test   al,al
  40cdd1:	je     0x40cece
  40cdd7:	test   dh,0x1
  40cdda:	jne    0x40cece
  40cde0:	mov    rdi,QWORD PTR [rbp+0x20]
  40cde4:	movzx  eax,WORD PTR [rdi+0x18]
  40cde8:	cmp    ax,WORD PTR [rbx+0x18]
  40cdec:	je     0x40d040
  40cdf2:	mov    rax,QWORD PTR [rbp+0x0]
  40cdf6:	shl    edx,0x1d
  40cdf9:	xor    r9d,r9d
  40cdfc:	sar    edx,0x1f
  40cdff:	mov    rcx,rsi
  40ce02:	and    edx,0xb
  40ce05:	mov    QWORD PTR [rsp+0x28],rax
  40ce0a:	lea    rax,[rip+0x3883d]        # 0x44564e
  40ce11:	mov    QWORD PTR [rsp+0x20],rax
  40ce16:	mov    r8d,DWORD PTR [rsi+0x30]
  40ce1a:	call   0x4127c0
  40ce1f:	test   al,al
  40ce21:	movzx  eax,BYTE PTR [rbp+0x18]
  40ce25:	je     0x40ce6b
  40ce27:	movzx  edx,WORD PTR [rbp+0x18]
  40ce2b:	and    eax,0x3f
  40ce2e:	shr    dx,0x6
  40ce32:	cmp    al,0x1
  40ce34:	jne    0x40c9ee
  40ce3a:	test   dl,0x4
  40ce3d:	jne    0x40c9f2
  40ce43:	mov    rax,QWORD PTR [rbp+0x20]
  40ce47:	xor    r9d,r9d
  40ce4a:	mov    edx,0x5
  40ce4f:	mov    rcx,rsi
  40ce52:	mov    r8d,DWORD PTR [rax+0x10]
  40ce56:	lea    rax,[rip+0x38803]        # 0x445660
  40ce5d:	mov    QWORD PTR [rsp+0x20],rax
  40ce62:	call   0x412740
  40ce67:	movzx  eax,BYTE PTR [rbp+0x18]
  40ce6b:	and    eax,0x3f
  40ce6e:	jmp    0x40c9e6
  40ce73:	test   BYTE PTR [rdi+0x6],0x1
  40ce77:	jne    0x40cb14
  40ce7d:	lea    r12,[rip+0x38854]        # 0x4456d8
  40ce84:	xor    r13d,r13d
  40ce87:	mov    rcx,rsi
  40ce8a:	call   0x41c950
  40ce8f:	movzx  edx,BYTE PTR [rax+0x4]
  40ce93:	lea    ecx,[rdx-0x13]
  40ce96:	cmp    cl,0x22
  40ce99:	ja     0x40d10e
  40ce9f:	movzx  ecx,cl
  40cea2:	movsxd rcx,DWORD PTR [r12+rcx*4]
  40cea6:	add    rcx,r12
  40cea9:	jmp    rcx
  40ceab:	lea    rcx,[r8+r8*2]
  40ceaf:	mov    rdx,QWORD PTR [rsi+0x38]
  40ceb3:	mov    r12d,0x1
  40ceb9:	lea    rax,[rax+rcx*8]
  40cebd:	mov    QWORD PTR [rdx+0x10],rax
  40cec1:	jmp    0x40cd87
  40cec6:	movzx  edx,WORD PTR [rbp+0x18]
  40ceca:	shr    dx,0x6
  40cece:	movzx  eax,BYTE PTR [rbp+0x18]
  40ced2:	and    eax,0x3f
  40ced5:	jmp    0x40c9ee
  40ceda:	nop    WORD PTR [rax+rax*1+0x0]
  40cee0:	mov    edx,0x20
  40cee5:	call   0x41cbf0
  40ceea:	mov    rbx,rax
  40ceed:	jmp    0x40c920
  40cef2:	xor    eax,eax
  40cef4:	jmp    0x40c96e
  40cef9:	xor    r8d,r8d
  40cefc:	mov    rdx,rbp
  40ceff:	mov    rcx,rsi
  40cf02:	call   0x409ec0
  40cf07:	jmp    0x40cd9d
  40cf0c:	lea    r8,[rax+rax*2]
  40cf10:	mov    rdx,QWORD PTR [rbx+0x8]
  40cf14:	mov    rcx,r11
  40cf17:	shl    r8,0x3
  40cf1b:	call   0x43f0a8
  40cf20:	mov    r11,rax
  40cf23:	jmp    0x40ccd0
  40cf28:	cmp    al,0x42
  40cf2a:	je     0x40d104
  40cf30:	xor    edx,edx
  40cf32:	jmp    0x40cb05
  40cf37:	lea    r8,[rip+0x3860a]        # 0x445548
  40cf3e:	mov    edx,0x3
  40cf43:	mov    rcx,rsi
  40cf46:	call   0x412660
  40cf4b:	mov    rax,QWORD PTR [rsi+0x38]
  40cf4f:	xor    r12d,r12d
  40cf52:	mov    rax,QWORD PTR [rax+0x10]
  40cf56:	mov    QWORD PTR [rbx],rax
  40cf59:	jmp    0x40cd87
  40cf5e:	test   r13d,r13d
  40cf61:	jne    0x40d1e8
  40cf67:	mov    r8,QWORD PTR [rax+0x8]
  40cf6b:	mov    rdx,rbx
  40cf6e:	mov    rcx,rsi
  40cf71:	call   0x40c800
  40cf76:	test   al,al
  40cf78:	jne    0x40cf4b
  40cf7a:	mov    r13d,0x1
  40cf80:	jmp    0x40ce87
  40cf85:	or     BYTE PTR [rbx+0x1c],0x2
  40cf89:	test   r13d,r13d
  40cf8c:	je     0x40d176
  40cf92:	cmp    BYTE PTR [rsi+0x437],0x0
  40cf99:	je     0x40cfb8
  40cf9b:	cmp    BYTE PTR [rsi+0x42d],0x0
  40cfa2:	je     0x40cfb8
  40cfa4:	lea    r8,[rip+0x3856d]        # 0x445518
  40cfab:	mov    edx,0xa
  40cfb0:	mov    rcx,rsi
  40cfb3:	call   0x4126c0
  40cfb8:	mov    rcx,rsi
  40cfbb:	call   0x41c950
  40cfc0:	cmp    BYTE PTR [rax+0x4],0x15
  40cfc4:	jne    0x40cf37
  40cfca:	movzx  eax,WORD PTR [rbx+0x18]
  40cfce:	mov    r8,QWORD PTR [rsi+0x3f8]
  40cfd5:	mov    rdx,QWORD PTR [rsi+0x38]
  40cfd9:	mov    r8,QWORD PTR [r8+0x68]
  40cfdd:	mov    rcx,QWORD PTR [rdx+0x10]
  40cfe1:	test   r8,r8
  40cfe4:	mov    QWORD PTR [rbx],rcx
  40cfe7:	je     0x40d169
  40cfed:	lea    rcx,[rax*8+0x0]
  40cff5:	call   r8
  40cff8:	movzx  r8d,WORD PTR [rbx+0x18]
  40cffd:	mov    rdx,QWORD PTR [rbx]
  40d000:	mov    rcx,rax
  40d003:	shl    r8,0x3
  40d007:	call   0x43f0a8
  40d00c:	mov    QWORD PTR [rbx],rax
  40d00f:	or     BYTE PTR [rbx+0x1c],0x1
  40d013:	jmp    0x40cb14
  40d018:	test   r13d,r13d
  40d01b:	movzx  eax,WORD PTR [rbx+0x18]
  40d01f:	jne    0x40cfce
  40d021:	test   ax,ax
  40d024:	je     0x40cfce
  40d026:	lea    r8,[rip+0x3849c]        # 0x4454c9
  40d02d:	mov    edx,0x3
  40d032:	mov    rcx,rsi
  40d035:	call   0x412660
  40d03a:	jmp    0x40cf4b
  40d03f:	nop
  40d040:	movzx  ecx,BYTE PTR [rbx+0x1c]
  40d044:	xor    cl,BYTE PTR [rdi+0x1c]
  40d047:	and    ecx,0x3
  40d04a:	jne    0x40cdf2
  40d050:	test   eax,eax
  40d052:	je     0x40d088
  40d054:	mov    r9,QWORD PTR [rdi]
  40d057:	mov    r10,QWORD PTR [rbx]
  40d05a:	mov    rcx,QWORD PTR [r10]
  40d05d:	cmp    QWORD PTR [r9],rcx
  40d060:	jne    0x40cdf2
  40d066:	lea    ecx,[rax-0x1]
  40d069:	xor    eax,eax
  40d06b:	jmp    0x40d083
  40d06d:	nop    DWORD PTR [rax]
  40d070:	mov    r8,QWORD PTR [r9+rax*8+0x8]
  40d075:	add    rax,0x1
  40d079:	cmp    r8,QWORD PTR [r10+rax*8]
  40d07d:	jne    0x40cdf2
  40d083:	cmp    rax,rcx
  40d086:	jne    0x40d070
  40d088:	cmp    BYTE PTR [rsi+0x43d],0x0
  40d08f:	jne    0x40d1d0
  40d095:	mov    eax,DWORD PTR [rdi+0x14]
  40d098:	cmp    eax,DWORD PTR [rbx+0x14]
  40d09b:	jne    0x40cdf2
  40d0a1:	test   eax,eax
  40d0a3:	je     0x40cece
  40d0a9:	xor    r13d,r13d
  40d0ac:	jmp    0x40d0bc
  40d0ae:	add    r13d,0x1
  40d0b2:	cmp    r13d,DWORD PTR [rdi+0x14]
  40d0b6:	jae    0x40cec6
  40d0bc:	mov    eax,r13d
  40d0bf:	lea    rax,[rax+rax*2]
  40d0c3:	shl    rax,0x3
  40d0c7:	mov    rdx,rax
  40d0ca:	add    rax,QWORD PTR [rdi+0x8]
  40d0ce:	add    rdx,QWORD PTR [rbx+0x8]
  40d0d2:	mov    rcx,rax
  40d0d5:	call   0x41a460
  40d0da:	test   eax,eax
  40d0dc:	jne    0x40d0ae
  40d0de:	movzx  edx,WORD PTR [rbp+0x18]
  40d0e2:	shr    dx,0x6
  40d0e6:	jmp    0x40cdf2
  40d0eb:	test   r13d,r13d
  40d0ee:	je     0x40d026
  40d0f4:	xor    r13d,r13d
  40d0f7:	jmp    0x40ce87
  40d0fc:	cmp    al,0x34
  40d0fe:	jne    0x40cf30
  40d104:	mov    edx,0x2
  40d109:	jmp    0x40cb05
  40d10e:	cmp    dl,0x4d
  40d111:	jne    0x40d120
  40d113:	cmp    BYTE PTR [rsi+0x41c],0x0
  40d11a:	je     0x40ce87
  40d120:	mov    rcx,rsi
  40d123:	mov    rdx,rax
  40d126:	call   0x41cb80
  40d12b:	lea    r8,[rip+0x3833e]        # 0x445470
  40d132:	mov    r9,rax
  40d135:	mov    edx,0x3
  40d13a:	mov    rcx,rsi
  40d13d:	call   0x412660
  40d142:	jmp    0x40cf4b
  40d147:	nop    WORD PTR [rax+rax*1+0x0]
  40d150:	lea    r8,[rip+0x38419]        # 0x445570
  40d157:	mov    edx,0x2
  40d15c:	mov    rcx,rsi
  40d15f:	call   0x412660
  40d164:	jmp    0x40cb14
  40d169:	lea    rax,[rcx+rax*8]
  40d16d:	mov    QWORD PTR [rdx+0x10],rax
  40d171:	jmp    0x40d00f
  40d176:	mov    r8,QWORD PTR [rsi+0x4b0]
  40d17d:	mov    rdx,rbx
  40d180:	mov    rcx,rsi
  40d183:	call   0x40c800
  40d188:	cmp    BYTE PTR [rsi+0x435],0x0
  40d18f:	mov    BYTE PTR [rsi+0x16],0x1
  40d193:	jne    0x40cfb8
  40d199:	cmp    BYTE PTR [rsi+0x437],0x0
  40d1a0:	je     0x40cfb8
  40d1a6:	cmp    BYTE PTR [rsi+0x42d],0x0
  40d1ad:	je     0x40cfb8
  40d1b3:	lea    r8,[rip+0x38326]        # 0x4454e0
  40d1ba:	mov    edx,0xa
  40d1bf:	mov    rcx,rsi
  40d1c2:	call   0x4126c0
  40d1c7:	jmp    0x40cfb8
  40d1cc:	nop    DWORD PTR [rax+0x0]
  40d1d0:	mov    rdx,rbx
  40d1d3:	mov    rcx,rdi
  40d1d6:	call   0x40eb10
  40d1db:	test   al,al
  40d1dd:	jne    0x40d0de
  40d1e3:	jmp    0x40ce67
  40d1e8:	lea    r8,[rip+0x382b1]        # 0x4454a0
  40d1ef:	mov    edx,0x3
  40d1f4:	mov    rcx,rsi
  40d1f7:	call   0x412660
  40d1fc:	jmp    0x40cf4b
  40d201:	nop    DWORD PTR [rax+rax*1+0x0]
  40d206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d210:	push   r14
  40d212:	push   r13
  40d214:	push   r12
  40d216:	push   rbp
  40d217:	push   rdi
  40d218:	push   rsi
  40d219:	push   rbx
  40d21a:	sub    rsp,0x20
  40d21e:	movzx  r9d,BYTE PTR [rdx+0x18]
  40d223:	mov    rbp,rcx
  40d226:	mov    r13,rdx
  40d229:	mov    eax,r9d
  40d22c:	and    eax,0x3f
  40d22f:	cmp    al,0x1
  40d231:	je     0x40d260
  40d233:	lea    r8,[rip+0x3852e]        # 0x445768
  40d23a:	and    r9d,0x3f
  40d23e:	mov    edx,0x4
  40d243:	mov    rcx,rbp
  40d246:	call   0x412660
  40d24b:	xor    eax,eax
  40d24d:	add    rsp,0x20
  40d251:	pop    rbx
  40d252:	pop    rsi
  40d253:	pop    rdi
  40d254:	pop    rbp
  40d255:	pop    r12
  40d257:	pop    r13
  40d259:	pop    r14
  40d25b:	ret    
  40d25c:	nop    DWORD PTR [rax+0x0]
  40d260:	test   BYTE PTR [rdx+0x19],0x1
  40d264:	je     0x40d280
  40d266:	mov    rax,QWORD PTR [rcx+0x3f0]
  40d26d:	test   rax,rax
  40d270:	je     0x40d233
  40d272:	call   rax
  40d274:	test   al,al
  40d276:	jne    0x40d280
  40d278:	movzx  r9d,BYTE PTR [r13+0x18]
  40d27d:	jmp    0x40d233
  40d27f:	nop
  40d280:	mov    rsi,QWORD PTR [r13+0x20]
  40d284:	mov    ebx,DWORD PTR [r13+0x8]
  40d288:	movzx  r9d,BYTE PTR [rsi+0x1c]
  40d28d:	test   r9b,0x1
  40d291:	jne    0x40d330
  40d297:	add    ebx,0x2
  40d29a:	cmp    BYTE PTR [rbp+0x43d],0x0
  40d2a1:	jne    0x40d364
  40d2a7:	and    r9d,0x20
  40d2ab:	jne    0x40d563
  40d2b1:	mov    eax,DWORD PTR [rsi+0x14]
  40d2b4:	test   eax,eax
  40d2b6:	je     0x40d36e
  40d2bc:	sub    eax,0x1
  40d2bf:	xor    edi,edi
  40d2c1:	lea    r12,[rax+rax*2+0x3]
  40d2c6:	shl    r12,0x3
  40d2ca:	jmp    0x40d30d
  40d2cc:	nop    DWORD PTR [rax+0x0]
  40d2d0:	mov    eax,DWORD PTR [r14+0x8]
  40d2d4:	lea    edx,[rax-0x1]
  40d2d7:	mov    rax,QWORD PTR [rsi]
  40d2da:	mov    rax,QWORD PTR [rax+rdx*8]
  40d2de:	add    ebx,DWORD PTR [rax+0x8]
  40d2e1:	movzx  eax,WORD PTR [r14+0x6]
  40d2e6:	mov    edx,eax
  40d2e8:	and    edx,0x4
  40d2eb:	cmp    dx,0x1
  40d2ef:	sbb    ebx,0xffffffff
  40d2f2:	test   al,0x8
  40d2f4:	lea    edx,[rbx+0x3]
  40d2f7:	cmovne ebx,edx
  40d2fa:	and    eax,0x1
  40d2fd:	cmp    ax,0x1
  40d301:	sbb    ebx,0xffffffff
  40d304:	add    rdi,0x18
  40d308:	cmp    rdi,r12
  40d30b:	je     0x40d36e
  40d30d:	mov    r14,rdi
  40d310:	add    r14,QWORD PTR [rsi+0x8]
  40d314:	cmp    BYTE PTR [r14+0x4],0x4e
  40d319:	je     0x40d2d0
  40d31b:	mov    rcx,r14
  40d31e:	call   0x41a050
  40d323:	add    ebx,eax
  40d325:	jmp    0x40d2e1
  40d327:	nop    WORD PTR [rax+rax*1+0x0]
  40d330:	movzx  ecx,WORD PTR [rsi+0x18]
  40d334:	add    ebx,0x6
  40d337:	test   ecx,ecx
  40d339:	je     0x40d29a
  40d33f:	mov    r8,QWORD PTR [rsi]
  40d342:	xor    eax,eax
  40d344:	mov    rdx,QWORD PTR [r8+rax*8]
  40d348:	add    rax,0x1
  40d34c:	cmp    ecx,eax
  40d34e:	mov    edx,DWORD PTR [rdx+0x8]
  40d351:	lea    ebx,[rbx+rdx*1+0x1]
  40d355:	ja     0x40d344
  40d357:	cmp    BYTE PTR [rbp+0x43d],0x0
  40d35e:	je     0x40d2a7
  40d364:	mov    rcx,rsi
  40d367:	call   0x40e790
  40d36c:	add    ebx,eax
  40d36e:	cmp    ebx,DWORD PTR [rbp+0x1e8]
  40d374:	ja     0x40d540
  40d37a:	mov    r9,QWORD PTR [rbp+0x1e0]
  40d381:	mov    r8d,DWORD PTR [r13+0x8]
  40d385:	mov    rdx,QWORD PTR [r13+0x0]
  40d389:	mov    rcx,r9
  40d38c:	call   0x43f0a8
  40d391:	mov    edx,DWORD PTR [r13+0x8]
  40d395:	test   BYTE PTR [rsi+0x1c],0x1
  40d399:	lea    rax,[rax+rdx*1]
  40d39d:	je     0x40d405
  40d39f:	mov    BYTE PTR [rax],0x28
  40d3a2:	movzx  edx,WORD PTR [rsi+0x18]
  40d3a6:	lea    r9,[rax+0x1]
  40d3aa:	xor    ebx,ebx
  40d3ac:	nop    DWORD PTR [rax+0x0]
  40d3b0:	cmp    ebx,edx
  40d3b2:	jae    0x40d3fd
  40d3b4:	mov    rcx,QWORD PTR [rsi]
  40d3b7:	mov    eax,ebx
  40d3b9:	mov    rdi,QWORD PTR [rcx+rax*8]
  40d3bd:	cmp    QWORD PTR [rbp+0x4b0],rdi
  40d3c4:	je     0x40d3e2
  40d3c6:	mov    r8d,DWORD PTR [rdi+0x8]
  40d3ca:	mov    rdx,QWORD PTR [rdi]
  40d3cd:	mov    rcx,r9
  40d3d0:	call   0x43f0a8
  40d3d5:	mov    r9,rax
  40d3d8:	mov    eax,DWORD PTR [rdi+0x8]
  40d3db:	movzx  edx,WORD PTR [rsi+0x18]
  40d3df:	add    r9,rax
  40d3e2:	add    ebx,0x1
  40d3e5:	cmp    ebx,edx
  40d3e7:	jae    0x40d4e2
  40d3ed:	mov    BYTE PTR [r9],0x2c
  40d3f1:	movzx  edx,WORD PTR [rsi+0x18]
  40d3f5:	add    r9,0x1
  40d3f9:	cmp    ebx,edx
  40d3fb:	jb     0x40d3b4
  40d3fd:	lea    rax,[r9+0x1]
  40d401:	mov    BYTE PTR [r9],0x29
  40d405:	mov    BYTE PTR [rax],0x20
  40d408:	cmp    BYTE PTR [rbp+0x43d],0x0
  40d40f:	lea    r10,[rax+0x1]
  40d413:	jne    0x40d510
  40d419:	mov    r12d,DWORD PTR [rsi+0x14]
  40d41d:	test   r12d,r12d
  40d420:	je     0x40d51e
  40d426:	test   BYTE PTR [rsi+0x1c],0x20
  40d42a:	mov    rax,QWORD PTR [rsi+0x8]
  40d42e:	jne    0x40d5a0
  40d434:	xor    edi,edi
  40d436:	jmp    0x40d47d
  40d438:	nop    DWORD PTR [rax+rax*1+0x0]
  40d440:	mov    r8,r10
  40d443:	xor    r9d,r9d
  40d446:	mov    rdx,rbx
  40d449:	mov    rcx,rbp
  40d44c:	call   0x41a090
  40d451:	mov    r10,rax
  40d454:	test   BYTE PTR [rbx+0x6],0x8
  40d458:	je     0x40d46c
  40d45a:	mov    BYTE PTR [r10],0x20
  40d45e:	mov    BYTE PTR [r10+0x1],0x23
  40d463:	add    r10,0x3
  40d467:	mov    BYTE PTR [r10-0x1],0x23
  40d46c:	add    rdi,0x1
  40d470:	cmp    r12d,edi
  40d473:	jbe    0x40d51e
  40d479:	mov    rax,QWORD PTR [rsi+0x8]
  40d47d:	lea    rdx,[rdi+rdi*2]
  40d481:	lea    rbx,[rax+rdx*8]
  40d485:	movzx  eax,WORD PTR [rbx+0x6]
  40d489:	test   al,0x1
  40d48b:	je     0x40d499
  40d48d:	mov    BYTE PTR [r10],0x20
  40d491:	movzx  eax,WORD PTR [rbx+0x6]
  40d495:	add    r10,0x1
  40d499:	test   al,0x4
  40d49b:	je     0x40d4a5
  40d49d:	mov    BYTE PTR [r10],0x23
  40d4a1:	add    r10,0x1
  40d4a5:	cmp    BYTE PTR [rbx+0x4],0x4e
  40d4a9:	jne    0x40d440
  40d4ab:	mov    eax,DWORD PTR [rbx+0x8]
  40d4ae:	mov    rcx,r10
  40d4b1:	lea    edx,[rax-0x1]
  40d4b4:	mov    rax,QWORD PTR [rsi]
  40d4b7:	mov    rax,QWORD PTR [rax+rdx*8]
  40d4bb:	mov    r8d,DWORD PTR [rax+0x8]
  40d4bf:	mov    rdx,QWORD PTR [rax]
  40d4c2:	call   0x43f0a8
  40d4c7:	mov    r10,rax
  40d4ca:	mov    eax,DWORD PTR [rbx+0x8]
  40d4cd:	lea    edx,[rax-0x1]
  40d4d0:	mov    rax,QWORD PTR [rsi]
  40d4d3:	mov    rax,QWORD PTR [rax+rdx*8]
  40d4d7:	mov    eax,DWORD PTR [rax+0x8]
  40d4da:	add    r10,rax
  40d4dd:	jmp    0x40d454
  40d4e2:	test   BYTE PTR [rsi+0x1c],0x2
  40d4e6:	je     0x40d3b0
  40d4ec:	mov    BYTE PTR [r9],0x2e
  40d4f0:	mov    BYTE PTR [r9+0x1],0x2e
  40d4f5:	add    r9,0x3
  40d4f9:	mov    BYTE PTR [r9-0x1],0x2e
  40d4fe:	movzx  edx,WORD PTR [rsi+0x18]
  40d502:	jmp    0x40d3b0
  40d507:	nop    WORD PTR [rax+rax*1+0x0]
  40d510:	mov    rdx,r10
  40d513:	mov    rcx,rsi
  40d516:	call   0x40e7f0
  40d51b:	mov    r10,rax
  40d51e:	mov    BYTE PTR [r10],0x0
  40d522:	mov    rax,QWORD PTR [rbp+0x1e0]
  40d529:	add    rsp,0x20
  40d52d:	pop    rbx
  40d52e:	pop    rsi
  40d52f:	pop    rdi
  40d530:	pop    rbp
  40d531:	pop    r12
  40d533:	pop    r13
  40d535:	pop    r14
  40d537:	ret    
  40d538:	nop    DWORD PTR [rax+rax*1+0x0]
  40d540:	mov    rcx,QWORD PTR [rbp+0x1e0]
  40d547:	mov    edx,ebx
  40d549:	call   0x438650
  40d54e:	mov    DWORD PTR [rbp+0x1e8],ebx
  40d554:	mov    QWORD PTR [rbp+0x1e0],rax
  40d55b:	mov    r9,rax
  40d55e:	jmp    0x40d381
  40d563:	mov    r8d,DWORD PTR [rsi+0x14]
  40d567:	test   r8d,r8d
  40d56a:	je     0x40d599
  40d56c:	mov    rdx,QWORD PTR [rsi+0x8]
  40d570:	cmp    BYTE PTR [rdx+0x4],0x26
  40d574:	je     0x40d5d7
  40d576:	add    rdx,0x18
  40d57a:	xor    eax,eax
  40d57c:	jmp    0x40d591
  40d57e:	xchg   ax,ax
  40d580:	movzx  ecx,BYTE PTR [rdx+0x4]
  40d584:	add    rdx,0x18
  40d588:	cmp    cl,0x26
  40d58b:	je     0x40d2b4
  40d591:	add    eax,0x1
  40d594:	cmp    eax,r8d
  40d597:	jne    0x40d580
  40d599:	call   0x43f180
  40d59e:	xchg   ax,ax
  40d5a0:	xor    edx,edx
  40d5a2:	cmp    BYTE PTR [rax+0x4],0x26
  40d5a6:	lea    rcx,[rax+0x18]
  40d5aa:	je     0x40d51e
  40d5b0:	add    edx,0x1
  40d5b3:	cmp    edx,r12d
  40d5b6:	je     0x40d599
  40d5b8:	movzx  r8d,BYTE PTR [rcx+0x4]
  40d5bd:	add    rcx,0x18
  40d5c1:	cmp    r8b,0x26
  40d5c5:	jne    0x40d5b0
  40d5c7:	test   edx,edx
  40d5c9:	je     0x40d51e
  40d5cf:	mov    r12d,edx
  40d5d2:	jmp    0x40d434
  40d5d7:	xor    eax,eax
  40d5d9:	jmp    0x40d2b4
  40d5de:	nop
  40d5df:	nop
  40d5e0:	push   rbp
  40d5e1:	push   rdi
  40d5e2:	push   rsi
  40d5e3:	push   rbx
  40d5e4:	movzx  esi,BYTE PTR [r9]
  40d5e8:	test   r8,r8
  40d5eb:	je     0x40d685
  40d5f1:	mov    rbx,QWORD PTR [rip+0x43fe8]        # 0x4515e0
  40d5f8:	lea    r11,[rcx+0x1]
  40d5fc:	xor    ebp,ebp
  40d5fe:	xchg   ax,ax
  40d600:	movzx  edi,BYTE PTR [rdx]
  40d603:	test   sil,sil
  40d606:	sete   al
  40d609:	test   WORD PTR [rbx+rdi*2],0xc00
  40d60f:	mov    r10,rdi
  40d612:	je     0x40d653
  40d614:	test   al,al
  40d616:	jne    0x40d62b
  40d618:	jmp    0x40d653
  40d61a:	nop    WORD PTR [rax+rax*1+0x0]
  40d620:	movzx  eax,BYTE PTR [rdx]
  40d623:	test   WORD PTR [rbx+rax*2],0xc00
  40d629:	je     0x40d635
  40d62b:	add    rdx,0x1
  40d62f:	sub    r8,0x1
  40d633:	jne    0x40d620
  40d635:	mov    rax,r11
  40d638:	mov    BYTE PTR [r11-0x1],0x20
  40d63d:	xor    esi,esi
  40d63f:	add    r11,0x1
  40d643:	test   r8,r8
  40d646:	jne    0x40d600
  40d648:	sub    rax,rcx
  40d64b:	mov    BYTE PTR [r9],sil
  40d64e:	pop    rbx
  40d64f:	pop    rsi
  40d650:	pop    rdi
  40d651:	pop    rbp
  40d652:	ret    
  40d653:	cmp    r10b,0x22
  40d657:	je     0x40d670
  40d659:	cmp    r10b,0x27
  40d65d:	je     0x40d670
  40d65f:	mov    rax,r11
  40d662:	add    rdx,0x1
  40d666:	mov    BYTE PTR [r11-0x1],r10b
  40d66a:	sub    r8,0x1
  40d66e:	jmp    0x40d63f
  40d670:	test   al,al
  40d672:	jne    0x40d680
  40d674:	cmp    sil,r10b
  40d677:	cmove  esi,ebp
  40d67a:	jmp    0x40d65f
  40d67c:	nop    DWORD PTR [rax+0x0]
  40d680:	mov    esi,r10d
  40d683:	jmp    0x40d65f
  40d685:	xor    eax,eax
  40d687:	jmp    0x40d64b
  40d689:	nop    DWORD PTR [rax+0x0]
  40d690:	push   rdi
  40d691:	push   rsi
  40d692:	push   rbx
  40d693:	sub    rsp,0x20
  40d697:	mov    rax,QWORD PTR [rcx+0x4e0]
  40d69e:	mov    r8,QWORD PTR [rcx+0x4d8]
  40d6a5:	add    rdx,0x3
  40d6a9:	sub    r8,rax
  40d6ac:	cmp    rdx,r8
  40d6af:	jbe    0x40d6ee
  40d6b1:	mov    rbx,rcx
  40d6b4:	mov    rcx,QWORD PTR [rcx+0x4d0]
  40d6bb:	sub    rax,rcx
  40d6be:	add    rdx,rax
  40d6c1:	mov    rsi,rax
  40d6c4:	lea    rdi,[rdx+rdx*2]
  40d6c8:	shr    rdi,1
  40d6cb:	mov    rdx,rdi
  40d6ce:	call   0x438650
  40d6d3:	add    rdi,rax
  40d6d6:	mov    QWORD PTR [rbx+0x4d0],rax
  40d6dd:	add    rax,rsi
  40d6e0:	mov    QWORD PTR [rbx+0x4d8],rdi
  40d6e7:	mov    QWORD PTR [rbx+0x4e0],rax
  40d6ee:	add    rsp,0x20
  40d6f2:	pop    rbx
  40d6f3:	pop    rsi
  40d6f4:	pop    rdi
  40d6f5:	ret    
  40d6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d700:	push   rdi
  40d701:	push   rsi
  40d702:	push   rbx
  40d703:	sub    rsp,0x30
  40d707:	test   BYTE PTR [rdx+0x19],0x1
  40d70b:	mov    rsi,rcx
  40d70e:	mov    rbx,rdx
  40d711:	jne    0x40d740
  40d713:	mov    rdx,QWORD PTR [rdx+0x20]
  40d717:	or     BYTE PTR [rdx+0x1c],0x18
  40d71b:	mov    r9d,DWORD PTR [rdx+0x14]
  40d71f:	mov    r10,QWORD PTR [rdx+0x8]
  40d723:	mov    r8,r10
  40d726:	mov    rdx,rbx
  40d729:	mov    rcx,rsi
  40d72c:	add    rsp,0x30
  40d730:	pop    rbx
  40d731:	pop    rsi
  40d732:	pop    rdi
  40d733:	jmp    0x40a600
  40d738:	nop    DWORD PTR [rax+rax*1+0x0]
  40d740:	call   0x409f40
  40d745:	mov    rcx,rax
  40d748:	mov    rdi,rax
  40d74b:	call   0x43f028
  40d750:	lea    rdx,[rax+0x1]
  40d754:	mov    rcx,rsi
  40d757:	mov    QWORD PTR [rsp+0x28],rax
  40d75c:	call   0x41abe0
  40d761:	mov    r9,QWORD PTR [rsp+0x28]
  40d766:	mov    rdx,rdi
  40d769:	mov    rcx,rax
  40d76c:	mov    r8,r9
  40d76f:	call   0x43f0a8
  40d774:	mov    r9,QWORD PTR [rsp+0x28]
  40d779:	mov    r10,rax
  40d77c:	mov    BYTE PTR [rax+r9*1],0xa
  40d781:	jmp    0x40d723
  40d783:	nop    DWORD PTR [rax]
  40d786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d790:	push   r12
  40d792:	push   rbp
  40d793:	push   rdi
  40d794:	push   rsi
  40d795:	push   rbx
  40d796:	sub    rsp,0x20
  40d79a:	mov    rbp,QWORD PTR [rcx+0x4e0]
  40d7a1:	sub    rbp,QWORD PTR [rcx+0x4d0]
  40d7a8:	cmp    WORD PTR [rdx+0x18],0x0
  40d7ad:	mov    rsi,rcx
  40d7b0:	mov    rbx,rdx
  40d7b3:	mov    r12d,r8d
  40d7b6:	je     0x40d850
  40d7bc:	mov    rcx,QWORD PTR [rcx+0x38]
  40d7c0:	mov    eax,DWORD PTR [rdx+0x14]
  40d7c3:	lea    rdi,[rbp+0xd]
  40d7c7:	and    rdi,0xfffffffffffffff8
  40d7cb:	mov    rdx,QWORD PTR [rcx+0x10]
  40d7cf:	mov    rcx,QWORD PTR [rcx+0x18]
  40d7d3:	lea    r8,[rdi+rax*1]
  40d7d7:	sub    rcx,rdx
  40d7da:	cmp    r8,rcx
  40d7dd:	ja     0x40d830
  40d7df:	or     BYTE PTR [rbx+0x1c],0x10
  40d7e3:	add    rax,rdx
  40d7e6:	mov    QWORD PTR [rbx+0x8],rdx
  40d7ea:	mov    rdx,QWORD PTR [rsi+0x4d0]
  40d7f1:	lea    rcx,[rax+0x6]
  40d7f5:	mov    DWORD PTR [rax],ebp
  40d7f7:	mov    WORD PTR [rax+0x4],r12w
  40d7fc:	mov    r8,rbp
  40d7ff:	call   0x43f0a8
  40d804:	add    edi,DWORD PTR [rbx+0x14]
  40d807:	mov    rax,QWORD PTR [rsi+0x4d0]
  40d80e:	test   r12d,r12d
  40d811:	mov    QWORD PTR [rsi+0x4e0],rax
  40d818:	mov    DWORD PTR [rbx+0x14],edi
  40d81b:	jne    0x40d825
  40d81d:	mov    rax,QWORD PTR [rsi+0x38]
  40d821:	add    QWORD PTR [rax+0x10],rdi
  40d825:	add    rsp,0x20
  40d829:	pop    rbx
  40d82a:	pop    rsi
  40d82b:	pop    rdi
  40d82c:	pop    rbp
  40d82d:	pop    r12
  40d82f:	ret    
  40d830:	lea    rdx,[rsi+0x38]
  40d834:	mov    rcx,rsi
  40d837:	call   0x41ab60
  40d83c:	mov    rax,QWORD PTR [rsi+0x38]
  40d840:	mov    rdx,QWORD PTR [rax+0x10]
  40d844:	mov    eax,DWORD PTR [rbx+0x14]
  40d847:	jmp    0x40d7df
  40d849:	nop    DWORD PTR [rax+0x0]
  40d850:	lea    rdx,[rbp+0x1]
  40d854:	call   0x41abe0
  40d859:	mov    rdx,QWORD PTR [rsi+0x4d0]
  40d860:	mov    r8,rbp
  40d863:	mov    rcx,rax
  40d866:	call   0x43f0a8
  40d86b:	mov    BYTE PTR [rax+rbp*1],0xa
  40d86f:	or     BYTE PTR [rbx+0x1c],0x10
  40d873:	mov    QWORD PTR [rbx+0x8],rax
  40d877:	mov    DWORD PTR [rbx+0x14],ebp
  40d87a:	add    rsp,0x20
  40d87e:	pop    rbx
  40d87f:	pop    rsi
  40d880:	pop    rdi
  40d881:	pop    rbp
  40d882:	pop    r12
  40d884:	ret    
  40d885:	nop
  40d886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d890:	push   rsi
  40d891:	push   rbx
  40d892:	sub    rsp,0x28
  40d896:	movzx  eax,BYTE PTR [rdx]
  40d899:	mov    rbx,QWORD PTR [rcx+0x4e0]
  40d8a0:	mov    r9,QWORD PTR [rip+0x43d39]        # 0x4515e0
  40d8a7:	mov    rsi,rcx
  40d8aa:	nop    WORD PTR [rax+rax*1+0x0]
  40d8b0:	add    rbx,0x1
  40d8b4:	add    rdx,0x1
  40d8b8:	mov    BYTE PTR [rbx-0x1],al
  40d8bb:	movzx  r8d,BYTE PTR [rdx]
  40d8bf:	test   WORD PTR [r9+r8*2],0x204
  40d8c6:	mov    rax,r8
  40d8c9:	jne    0x40d8b0
  40d8cb:	mov    rax,QWORD PTR [rsi+0x88]
  40d8d2:	mov    r8,rbx
  40d8d5:	mov    r9d,0x1
  40d8db:	mov    QWORD PTR [rax+0x10],rdx
  40d8df:	mov    rdx,QWORD PTR [rsi+0x4e0]
  40d8e6:	mov    rcx,QWORD PTR [rsi+0x3f8]
  40d8ed:	sub    r8,rdx
  40d8f0:	call   0x41da20
  40d8f5:	mov    QWORD PTR [rsi+0x4e0],rbx
  40d8fc:	add    rsp,0x28
  40d900:	pop    rbx
  40d901:	pop    rsi
  40d902:	ret    
  40d903:	nop    DWORD PTR [rax]
  40d906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d910:	push   r12
  40d912:	push   rbp
  40d913:	push   rdi
  40d914:	push   rsi
  40d915:	push   rbx
  40d916:	sub    rsp,0x40
  40d91a:	mov    rax,QWORD PTR [rcx+0x28]
  40d91e:	mov    rsi,QWORD PTR [rcx]
  40d921:	mov    edi,r8d
  40d924:	mov    rbx,rcx
  40d927:	mov    rbp,rdx
  40d92a:	mov    r8d,DWORD PTR [rax+0x3c]
  40d92e:	mov    rax,QWORD PTR [rcx+0x88]
  40d935:	mov    QWORD PTR [rsi],rdx
  40d938:	cmp    QWORD PTR [rax+0x8],0x0
  40d93d:	je     0x40da40
  40d943:	mov    rdx,QWORD PTR [rcx]
  40d946:	mov    rcx,QWORD PTR [rdx]
  40d949:	movzx  r9d,BYTE PTR [rcx+0x1]
  40d94e:	lea    rax,[rcx+0x1]
  40d952:	cmp    r9b,0x2f
  40d956:	jne    0x40d964
  40d958:	jmp    0x40da30
  40d95d:	nop    DWORD PTR [rax]
  40d960:	movzx  r9d,BYTE PTR [rax]
  40d964:	add    rax,0x1
  40d968:	cmp    r9b,0x2f
  40d96c:	jne    0x40d960
  40d96e:	cmp    BYTE PTR [rax-0x2],0x2a
  40d972:	jne    0x40d960
  40d974:	mov    QWORD PTR [rdx],rax
  40d977:	xor    r12d,r12d
  40d97a:	cmp    BYTE PTR [rbx+0x10],0x0
  40d97e:	je     0x40d9f0
  40d980:	test   edi,edi
  40d982:	je     0x40da10
  40d988:	cmp    BYTE PTR [rbx+0x41c],0x0
  40d98f:	jne    0x40d9f9
  40d991:	mov    rdi,QWORD PTR [rsi]
  40d994:	mov    rcx,QWORD PTR [rbx+0x4e0]
  40d99b:	mov    rdx,rbp
  40d99e:	sub    rdi,rbp
  40d9a1:	mov    r8,rdi
  40d9a4:	call   0x43f0a8
  40d9a9:	add    rdi,QWORD PTR [rbx+0x4e0]
  40d9b0:	test   r12b,r12b
  40d9b3:	je     0x40da80
  40d9b9:	lea    rax,[rdi+0x1]
  40d9bd:	mov    QWORD PTR [rbx+0x4e0],rax
  40d9c4:	mov    BYTE PTR [rdi],0x2a
  40d9c7:	mov    rax,QWORD PTR [rbx+0x4e0]
  40d9ce:	lea    rdx,[rax+0x1]
  40d9d2:	mov    QWORD PTR [rbx+0x4e0],rdx
  40d9d9:	mov    BYTE PTR [rax],0x2f
  40d9dc:	mov    rax,QWORD PTR [rsi]
  40d9df:	add    rsp,0x40
  40d9e3:	pop    rbx
  40d9e4:	pop    rsi
  40d9e5:	pop    rdi
  40d9e6:	pop    rbp
  40d9e7:	pop    r12
  40d9e9:	ret    
  40d9ea:	nop    WORD PTR [rax+rax*1+0x0]
  40d9f0:	cmp    BYTE PTR [rbx+0x41b],0x0
  40d9f7:	je     0x40d991
  40d9f9:	sub    QWORD PTR [rbx+0x4e0],0x1
  40da01:	mov    rax,QWORD PTR [rsi]
  40da04:	add    rsp,0x40
  40da08:	pop    rbx
  40da09:	pop    rsi
  40da0a:	pop    rdi
  40da0b:	pop    rbp
  40da0c:	pop    r12
  40da0e:	ret    
  40da0f:	nop
  40da10:	mov    rax,QWORD PTR [rbx+0x4e0]
  40da17:	mov    BYTE PTR [rax-0x1],0x20
  40da1b:	mov    rax,QWORD PTR [rsi]
  40da1e:	add    rsp,0x40
  40da22:	pop    rbx
  40da23:	pop    rsi
  40da24:	pop    rdi
  40da25:	pop    rbp
  40da26:	pop    r12
  40da28:	ret    
  40da29:	nop    DWORD PTR [rax+0x0]
  40da30:	lea    rax,[rcx+0x2]
  40da34:	movzx  r9d,BYTE PTR [rcx+0x2]
  40da39:	jmp    0x40d964
  40da3e:	xchg   ax,ax
  40da40:	mov    DWORD PTR [rsp+0x3c],r8d
  40da45:	call   0x419c40
  40da4a:	test   al,al
  40da4c:	mov    r12d,eax
  40da4f:	je     0x40d97a
  40da55:	lea    rax,[rip+0x37e24]        # 0x445880
  40da5c:	mov    r8d,DWORD PTR [rsp+0x3c]
  40da61:	xor    r9d,r9d
  40da64:	mov    edx,0x3
  40da69:	mov    rcx,rbx
  40da6c:	mov    QWORD PTR [rsp+0x20],rax
  40da71:	call   0x412740
  40da76:	jmp    0x40d97a
  40da7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40da80:	mov    rax,QWORD PTR [rsi]
  40da83:	mov    QWORD PTR [rbx+0x4e0],rdi
  40da8a:	add    rsp,0x40
  40da8e:	pop    rbx
  40da8f:	pop    rsi
  40da90:	pop    rdi
  40da91:	pop    rbp
  40da92:	pop    r12
  40da94:	ret    
  40da95:	nop
  40da96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40daa0:	push   rbp
  40daa1:	push   rdi
  40daa2:	push   rsi
  40daa3:	push   rbx
  40daa4:	sub    rsp,0x28
  40daa8:	mov    rsi,QWORD PTR [rip+0x43b31]        # 0x4515e0
  40daaf:	mov    r11,QWORD PTR [rcx+0x4e0]
  40dab6:	mov    rbp,rcx
  40dab9:	mov    rax,rdx
  40dabc:	mov    edi,r8d
  40dabf:	jmp    0x40dac7
  40dac1:	mov    r11,r10
  40dac4:	mov    rax,rdx
  40dac7:	lea    rdx,[rax+0x1]
  40dacb:	movzx  ebx,BYTE PTR [rdx-0x1]
  40dacf:	lea    r10,[r11+0x1]
  40dad3:	test   BYTE PTR [rsi+rbx*2+0x1],0x8
  40dad8:	mov    BYTE PTR [r10-0x1],bl
  40dadc:	jne    0x40dac1
  40dade:	cmp    bl,0x2f
  40dae1:	jne    0x40db08
  40dae3:	cmp    BYTE PTR [rax+0x1],0x2a
  40dae7:	jne    0x40db08
  40dae9:	test   edi,edi
  40daeb:	je     0x40db08
  40daed:	mov    QWORD PTR [rbp+0x4e0],r10
  40daf4:	xor    r8d,r8d
  40daf7:	mov    rcx,rbp
  40dafa:	call   0x40d910
  40daff:	mov    r11,QWORD PTR [rbp+0x4e0]
  40db06:	jmp    0x40dac7
  40db08:	mov    QWORD PTR [rbp+0x4e0],r11
  40db0f:	add    rsp,0x28
  40db13:	pop    rbx
  40db14:	pop    rsi
  40db15:	pop    rdi
  40db16:	pop    rbp
  40db17:	ret    
  40db18:	nop    DWORD PTR [rax+rax*1+0x0]
  40db20:	sub    rsp,0x28
  40db24:	xor    eax,eax
  40db26:	test   BYTE PTR [rdx+0x19],0x8
  40db2a:	je     0x40db75
  40db2c:	mov    rax,QWORD PTR [rdx+0x20]
  40db30:	test   BYTE PTR [rax+0x1c],0x1
  40db34:	je     0x40db5c
  40db36:	mov    rax,QWORD PTR [rcx+0x88]
  40db3d:	mov    r8d,0x1
  40db43:	mov    rax,QWORD PTR [rax+0x8]
  40db47:	test   rax,rax
  40db4a:	je     0x40db75
  40db4c:	add    r8,0x1
  40db50:	cmp    rdx,QWORD PTR [rax+0x28]
  40db54:	jne    0x40db43
  40db56:	cmp    r8,0x14
  40db5a:	jbe    0x40db43
  40db5c:	mov    r9,QWORD PTR [rdx]
  40db5f:	lea    r8,[rip+0x37d32]        # 0x445898
  40db66:	mov    edx,0x3
  40db6b:	call   0x412660
  40db70:	mov    eax,0x1
  40db75:	add    rsp,0x28
  40db79:	ret    
  40db7a:	nop    WORD PTR [rax+rax*1+0x0]
  40db80:	mov    rax,QWORD PTR [rcx]
  40db83:	add    r8,rdx
  40db86:	mov    r9,QWORD PTR [rax]
  40db89:	mov    QWORD PTR [rcx+0x8],rax
  40db8d:	mov    QWORD PTR [rcx+0x4f0],r9
  40db94:	mov    r9,QWORD PTR [rax+0x20]
  40db98:	mov    QWORD PTR [rcx+0x4f8],r9
  40db9f:	mov    r9,QWORD PTR [rax+0x10]
  40dba3:	mov    QWORD PTR [rcx+0x500],r9
  40dbaa:	mov    BYTE PTR [rax+0x68],0x0
  40dbae:	mov    QWORD PTR [rax],rdx
  40dbb1:	mov    QWORD PTR [rax+0x8],rdx
  40dbb5:	mov    QWORD PTR [rax+0x20],r8
  40dbb9:	ret    
  40dbba:	nop    WORD PTR [rax+rax*1+0x0]
  40dbc0:	mov    rax,QWORD PTR [rcx+0x8]
  40dbc4:	mov    rdx,QWORD PTR [rcx+0x4f0]
  40dbcb:	mov    QWORD PTR [rax],rdx
  40dbce:	mov    rdx,QWORD PTR [rcx+0x4f8]
  40dbd5:	mov    QWORD PTR [rax+0x20],rdx
  40dbd9:	mov    rdx,QWORD PTR [rcx+0x500]
  40dbe0:	mov    BYTE PTR [rax+0x68],0x1
  40dbe4:	mov    QWORD PTR [rax+0x8],rdx
  40dbe8:	mov    QWORD PTR [rcx+0x8],0x0
  40dbf0:	ret    
  40dbf1:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc00:	push   r15
  40dc02:	push   r14
  40dc04:	push   r13
  40dc06:	push   r12
  40dc08:	push   rbp
  40dc09:	push   rdi
  40dc0a:	push   rsi
  40dc0b:	push   rbx
  40dc0c:	sub    rsp,0x88
  40dc13:	mov    rax,QWORD PTR [rcx+0x88]
  40dc1a:	cmp    BYTE PTR [rcx+0x13],0x0
  40dc1e:	lea    r12,[rip+0x37cd3]        # 0x4458f8
  40dc25:	mov    QWORD PTR [rsp+0xd8],rdx
  40dc2d:	mov    rdx,QWORD PTR [rcx]
  40dc30:	mov    rsi,rcx
  40dc33:	mov    DWORD PTR [rsp+0x38],0x0
  40dc3b:	mov    DWORD PTR [rsp+0x7c],0x0
  40dc43:	mov    QWORD PTR [rsp+0x68],0x0
  40dc4c:	mov    QWORD PTR [rsp+0x58],0x0
  40dc55:	mov    rdx,QWORD PTR [rdx]
  40dc58:	setne  r10b
  40dc5c:	mov    QWORD PTR [rsp+0x60],0x0
  40dc65:	mov    QWORD PTR [rsp+0x70],0x0
  40dc6e:	xor    r14d,r14d
  40dc71:	xor    r15d,r15d
  40dc74:	mov    DWORD PTR [rsp+0x4c],0x0
  40dc7c:	mov    QWORD PTR [rax+0x10],rdx
  40dc80:	mov    rdx,QWORD PTR [rcx]
  40dc83:	mov    rax,QWORD PTR [rcx+0x88]
  40dc8a:	mov    rdx,QWORD PTR [rdx+0x20]
  40dc8e:	mov    QWORD PTR [rax+0x18],rdx
  40dc92:	mov    rax,QWORD PTR [rcx+0x4d0]
  40dc99:	mov    r13,QWORD PTR [rcx+0x88]
  40dca0:	mov    QWORD PTR [rcx+0x4e0],rax
  40dca7:	mov    rax,QWORD PTR [rcx+0x28]
  40dcab:	mov    eax,DWORD PTR [rax+0x3c]
  40dcae:	mov    DWORD PTR [rcx+0x4e8],eax
  40dcb4:	mov    rax,QWORD PTR [rcx]
  40dcb7:	mov    rax,QWORD PTR [rax]
  40dcba:	mov    QWORD PTR [rsp+0x50],rax
  40dcbf:	mov    rax,QWORD PTR [r13+0x10]
  40dcc3:	mov    rdx,QWORD PTR [r13+0x18]
  40dcc7:	mov    rcx,rsi
  40dcca:	mov    BYTE PTR [rsp+0x7b],r10b
  40dccf:	sub    rdx,rax
  40dcd2:	mov    QWORD PTR [rsp+0x40],rax
  40dcd7:	call   0x40d690
  40dcdc:	movzx  r10d,BYTE PTR [rsp+0x7b]
  40dce2:	mov    rbx,QWORD PTR [rsi+0x4e0]
  40dce9:	mov    rax,QWORD PTR [rsp+0x40]
  40dcee:	xchg   ax,ax
  40dcf0:	cmp    QWORD PTR [r13+0x8],0x0
  40dcf5:	je     0x40dd20
  40dcf7:	movzx  edx,BYTE PTR [rax]
  40dcfa:	lea    rbp,[rax+0x1]
  40dcfe:	lea    rdi,[rbx+0x1]
  40dd02:	cmp    dl,0x7a
  40dd05:	mov    BYTE PTR [rbx],dl
  40dd07:	ja     0x40dd83
  40dd09:	movsxd rcx,DWORD PTR [r12+rdx*4]
  40dd0d:	add    rcx,r12
  40dd10:	jmp    rcx
  40dd12:	cmp    QWORD PTR [r13+0x8],0x0
  40dd17:	mov    rbx,rdi
  40dd1a:	mov    rax,rbp
  40dd1d:	jne    0x40dcf7
  40dd1f:	nop
  40dd20:	mov    rcx,QWORD PTR [rsi]
  40dd23:	mov    edx,DWORD PTR [rcx+0x38]
  40dd26:	shl    rdx,0x4
  40dd2a:	add    rdx,QWORD PTR [rcx+0x30]
  40dd2e:	cmp    rax,QWORD PTR [rdx]
  40dd31:	jb     0x40dcf7
  40dd33:	mov    QWORD PTR [rcx],rax
  40dd36:	xor    edx,edx
  40dd38:	mov    rcx,rsi
  40dd3b:	mov    BYTE PTR [rsp+0x7b],r10b
  40dd40:	mov    QWORD PTR [rsp+0x40],rax
  40dd45:	call   0x4199f0
  40dd4a:	movzx  r10d,BYTE PTR [rsp+0x7b]
  40dd50:	mov    rax,QWORD PTR [rsp+0x40]
  40dd55:	jmp    0x40dcf7
  40dd57:	nop    WORD PTR [rax+rax*1+0x0]
  40dd60:	movzx  edx,BYTE PTR [rax+0x1]
  40dd64:	cmp    dl,0x22
  40dd67:	sete   r8b
  40dd6b:	cmp    dl,0x5c
  40dd6e:	sete   cl
  40dd71:	or     r8b,cl
  40dd74:	jne    0x40e125
  40dd7a:	cmp    dl,0x27
  40dd7d:	je     0x40e125
  40dd83:	cmp    BYTE PTR [rsi+0x10],0x0
  40dd87:	jne    0x40dd90
  40dd89:	mov    BYTE PTR [rsi+0x1a0],0x0
  40dd90:	test   r14d,r14d
  40dd93:	je     0x40ddbb
  40dd95:	mov    eax,r14d
  40dd98:	and    eax,0xfffffffd
  40dd9b:	cmp    eax,0x1
  40dd9e:	je     0x40df40
  40dda4:	lea    eax,[r14-0x5]
  40dda8:	cmp    eax,0x1
  40ddab:	jbe    0x40df40
  40ddb1:	cmp    r14d,0x8
  40ddb5:	je     0x40df40
  40ddbb:	mov    rbx,rdi
  40ddbe:	mov    rax,rbp
  40ddc1:	xor    r10d,r10d
  40ddc4:	jmp    0x40dcf0
  40ddc9:	nop    DWORD PTR [rax+0x0]
  40ddd0:	cmp    BYTE PTR [rsi+0x12],0x0
  40ddd4:	jne    0x40dd83
  40ddd6:	cmp    QWORD PTR [rsp+0xd8],0x0
  40dddf:	setne  r9b
  40dde3:	test   r15d,r15d
  40dde6:	je     0x40dded
  40dde8:	test   r9b,r9b
  40ddeb:	je     0x40dd83
  40dded:	mov    QWORD PTR [rsi+0x4e0],rbx
  40ddf4:	mov    rdx,rax
  40ddf7:	mov    rcx,rsi
  40ddfa:	mov    BYTE PTR [rsp+0x7b],r10b
  40ddff:	mov    BYTE PTR [rsp+0x40],r9b
  40de04:	call   0x40d890
  40de09:	cmp    r14d,0x1
  40de0d:	mov    r8,rax
  40de10:	mov    rdi,QWORD PTR [rsi+0x4e0]
  40de17:	mov    rbp,QWORD PTR [r13+0x10]
  40de1b:	movzx  r9d,BYTE PTR [rsp+0x40]
  40de21:	movzx  r10d,BYTE PTR [rsp+0x7b]
  40de27:	ja     0x40de38
  40de29:	movzx  eax,BYTE PTR [rax+0x18]
  40de2d:	and    eax,0x3f
  40de30:	cmp    al,0x1
  40de32:	je     0x40e34f
  40de38:	test   r9b,r9b
  40de3b:	je     0x40de48
  40de3d:	test   BYTE PTR [r8+0x19],0x10
  40de42:	jne    0x40e2fc
  40de48:	cmp    r14d,0x5
  40de4c:	je     0x40e324
  40de52:	cmp    BYTE PTR [rsi+0x14],0x0
  40de56:	je     0x40dd83
  40de5c:	cmp    QWORD PTR [rsi+0x498],r8
  40de63:	je     0x40e54f
  40de69:	cmp    QWORD PTR [rsi+0x4b8],r8
  40de70:	je     0x40de7f
  40de72:	cmp    QWORD PTR [rsi+0x4c0],r8
  40de79:	jne    0x40dd83
  40de7f:	mov    rbx,rdi
  40de82:	mov    rax,rbp
  40de85:	mov    r14d,0x8
  40de8b:	jmp    0x40dcf0
  40de90:	cmp    edx,r15d
  40de93:	mov    eax,0x0
  40de98:	cmove  r15d,eax
  40de9c:	jmp    0x40dd83
  40dea1:	test   r10b,r10b
  40dea4:	mov    eax,0x3e
  40dea9:	cmovne r15d,eax
  40dead:	jmp    0x40dd83
  40deb2:	test   r15d,r15d
  40deb5:	jne    0x40dd83
  40debb:	cmp    BYTE PTR [rax+0x1],0x2a
  40debf:	jne    0x40dd83
  40dec5:	xor    r8d,r8d
  40dec8:	cmp    QWORD PTR [rsp+0xd8],0x0
  40ded1:	mov    QWORD PTR [rsi+0x4e0],rdi
  40ded8:	mov    rdx,rbp
  40dedb:	mov    rcx,rsi
  40dede:	mov    BYTE PTR [rsp+0x40],r10b
  40dee3:	setne  r8b
  40dee7:	call   0x40d910
  40deec:	mov    rbx,QWORD PTR [rsi+0x4e0]
  40def3:	movzx  r10d,BYTE PTR [rsp+0x40]
  40def9:	jmp    0x40dcf0
  40defe:	xchg   ax,ax
  40df00:	cmp    r14d,0x2
  40df04:	jne    0x40dd83
  40df0a:	test   r15d,r15d
  40df0d:	jne    0x40dd83
  40df13:	cmp    DWORD PTR [rsp+0x4c],0x1
  40df18:	je     0x40e245
  40df1e:	xor    r15d,r15d
  40df21:	cmp    BYTE PTR [rsi+0x10],0x0
  40df25:	je     0x40dd89
  40df2b:	mov    eax,r14d
  40df2e:	and    eax,0xfffffffd
  40df31:	cmp    eax,0x1
  40df34:	jne    0x40dda4
  40df3a:	nop    WORD PTR [rax+rax*1+0x0]
  40df40:	mov    rbx,rdi
  40df43:	mov    rax,rbp
  40df46:	xor    r10d,r10d
  40df49:	xor    r14d,r14d
  40df4c:	jmp    0x40dcf0
  40df51:	test   r15d,r15d
  40df54:	jne    0x40dd83
  40df5a:	sub    DWORD PTR [rsp+0x4c],0x1
  40df5f:	jne    0x40e170
  40df65:	cmp    r14d,0x2
  40df69:	jne    0x40e170
  40df6f:	mov    r11,QWORD PTR [rsp+0x58]
  40df74:	add    DWORD PTR [rsp+0x38],0x1
  40df79:	mov    ebx,DWORD PTR [rsp+0x38]
  40df7d:	mov    rcx,QWORD PTR [rsi+0x4d0]
  40df84:	mov    rdx,QWORD PTR [r11+0x20]
  40df88:	or     BYTE PTR [rdx+0x1c],0x8
  40df8c:	mov    rax,QWORD PTR [r11+0x20]
  40df90:	movzx  eax,WORD PTR [rax+0x18]
  40df94:	cmp    ebx,eax
  40df96:	ja     0x40dfa9
  40df98:	mov    eax,ebx
  40df9a:	mov    rbx,QWORD PTR [rsp+0x60]
  40df9f:	mov    r8,rdi
  40dfa2:	sub    r8,rcx
  40dfa5:	mov    QWORD PTR [rbx+rax*8],r8
  40dfa9:	cmp    DWORD PTR [rsp+0x38],0x1
  40dfae:	je     0x40e299
  40dfb4:	mov    r9d,DWORD PTR [rsp+0x38]
  40dfb9:	mov    r8,QWORD PTR [rsp+0x58]
  40dfbe:	mov    rcx,rsi
  40dfc1:	mov    BYTE PTR [rsp+0x40],r10b
  40dfc6:	call   0x40a3c0
  40dfcb:	test   al,al
  40dfcd:	movzx  r10d,BYTE PTR [rsp+0x40]
  40dfd3:	jne    0x40e3d0
  40dfd9:	mov    DWORD PTR [rsp+0x4c],0x0
  40dfe1:	cmp    BYTE PTR [rsi+0x10],0x0
  40dfe5:	je     0x40e191
  40dfeb:	mov    rbx,rdi
  40dfee:	mov    rax,rbp
  40dff1:	xor    r10d,r10d
  40dff4:	xor    r14d,r14d
  40dff7:	xor    r15d,r15d
  40dffa:	jmp    0x40dcf0
  40dfff:	nop
  40e000:	test   r15d,r15d
  40e003:	jne    0x40dd83
  40e009:	add    DWORD PTR [rsp+0x4c],0x1
  40e00e:	cmp    r14d,0x1
  40e012:	je     0x40e2c0
  40e018:	cmp    r14d,0x6
  40e01c:	je     0x40e283
  40e022:	cmp    r14d,0x3
  40e026:	je     0x40e28e
  40e02c:	cmp    r14d,0x8
  40e030:	jne    0x40dd83
  40e036:	mov    r14d,0x9
  40e03c:	jmp    0x40df1e
  40e041:	cmp    rax,QWORD PTR [rsp+0x50]
  40e046:	je     0x40e1a0
  40e04c:	cmp    BYTE PTR [rsi+0x14],0x0
  40e050:	je     0x40dd83
  40e056:	mov    rbx,rdi
  40e059:	mov    rax,rbp
  40e05c:	mov    r14d,0x5
  40e062:	jmp    0x40dcf0
  40e067:	nop    WORD PTR [rax+rax*1+0x0]
  40e070:	cmp    edx,r15d
  40e073:	je     0x40e135
  40e079:	test   r15d,r15d
  40e07c:	cmove  r15d,edx
  40e080:	jmp    0x40dd83
  40e085:	cmp    QWORD PTR [r13+0x8],0x0
  40e08a:	mov    BYTE PTR [rsp+0x40],r10b
  40e08f:	mov    QWORD PTR [rsi+0x4e0],rbx
  40e096:	jne    0x40e335
  40e09c:	mov    r9,QWORD PTR [rsi+0x28]
  40e0a0:	mov    rax,QWORD PTR [rsi]
  40e0a3:	mov    QWORD PTR [rax],rbp
  40e0a6:	mov    BYTE PTR [rax+0x68],0x1
  40e0aa:	mov    eax,DWORD PTR [r9+0xc]
  40e0ae:	sub    eax,0x1
  40e0b1:	lea    rdx,[rax+rax*4]
  40e0b5:	mov    rax,QWORD PTR [r9]
  40e0b8:	lea    rdx,[rax+rdx*8]
  40e0bc:	mov    eax,DWORD PTR [r9+0x3c]
  40e0c0:	movzx  ecx,BYTE PTR [rdx+0x1c]
  40e0c4:	sub    eax,DWORD PTR [rdx]
  40e0c6:	mov    r8d,DWORD PTR [rdx+0x10]
  40e0ca:	shr    eax,cl
  40e0cc:	mov    rcx,r9
  40e0cf:	lea    edx,[r8+rax*1+0x1]
  40e0d4:	xor    r8d,r8d
  40e0d7:	call   0x408830
  40e0dc:	lea    eax,[r14-0x1]
  40e0e0:	cmp    eax,0x1
  40e0e3:	ja     0x40e0eb
  40e0e5:	cmp    BYTE PTR [rsi+0x10],0x0
  40e0e9:	je     0x40e140
  40e0eb:	mov    ebx,0x1
  40e0f0:	mov    rax,QWORD PTR [rsp+0x70]
  40e0f5:	test   rax,rax
  40e0f8:	je     0x40e105
  40e0fa:	mov    rdx,rax
  40e0fd:	mov    rcx,rsi
  40e100:	call   0x41a9a0
  40e105:	cmp    r14d,0x2
  40e109:	je     0x40e5a9
  40e10f:	mov    eax,ebx
  40e111:	add    rsp,0x88
  40e118:	pop    rbx
  40e119:	pop    rsi
  40e11a:	pop    rdi
  40e11b:	pop    rbp
  40e11c:	pop    r12
  40e11e:	pop    r13
  40e120:	pop    r14
  40e122:	pop    r15
  40e124:	ret    
  40e125:	lea    rdi,[rbx+0x2]
  40e129:	lea    rbp,[rax+0x2]
  40e12d:	mov    BYTE PTR [rbx+0x1],dl
  40e130:	jmp    0x40dd83
  40e135:	xor    r15d,r15d
  40e138:	jmp    0x40dd83
  40e13d:	nop    DWORD PTR [rax]
  40e140:	mov    rcx,rsi
  40e143:	call   0x41a030
  40e148:	test   al,al
  40e14a:	movzx  r10d,BYTE PTR [rsp+0x40]
  40e150:	je     0x40e0eb
  40e152:	cmp    r14d,0x2
  40e156:	jne    0x40e15b
  40e158:	mov    BYTE PTR [rbx],0x20
  40e15b:	mov    rax,QWORD PTR [rsi]
  40e15e:	mov    rbx,rdi
  40e161:	mov    rax,QWORD PTR [rax]
  40e164:	jmp    0x40dcf0
  40e169:	nop    DWORD PTR [rax+0x0]
  40e170:	lea    eax,[r14-0x7]
  40e174:	and    eax,0xfffffffd
  40e177:	je     0x40dfe1
  40e17d:	cmp    r14d,0x4
  40e181:	jne    0x40dd83
  40e187:	cmp    BYTE PTR [rsi+0x10],0x0
  40e18b:	jne    0x40dfeb
  40e191:	xor    r14d,r14d
  40e194:	xor    r15d,r15d
  40e197:	jmp    0x40dd89
  40e19c:	nop    DWORD PTR [rax+0x0]
  40e1a0:	mov    rax,QWORD PTR [rsi+0x88]
  40e1a7:	cmp    QWORD PTR [rax+0x8],0x0
  40e1ac:	jne    0x40e04c
  40e1b2:	cmp    BYTE PTR [rsi+0x10],0x0
  40e1b6:	jne    0x40e04c
  40e1bc:	mov    QWORD PTR [rsi+0x4e0],rdi
  40e1c3:	mov    rdx,rbp
  40e1c6:	mov    r8d,0x1
  40e1cc:	mov    rcx,rsi
  40e1cf:	mov    BYTE PTR [rsp+0x40],r10b
  40e1d4:	call   0x40daa0
  40e1d9:	mov    rbp,rax
  40e1dc:	movzx  eax,BYTE PTR [rax]
  40e1df:	mov    rdi,QWORD PTR [rsi+0x4e0]
  40e1e6:	movzx  r10d,BYTE PTR [rsp+0x40]
  40e1ec:	cmp    al,0xa
  40e1ee:	je     0x40e6dd
  40e1f4:	mov    rbx,QWORD PTR [rip+0x433e5]        # 0x4515e0
  40e1fb:	movzx  edx,al
  40e1fe:	movzx  edx,WORD PTR [rbx+rdx*2]
  40e202:	test   dl,0x4
  40e205:	je     0x40e210
  40e207:	cmp    DWORD PTR [rsi+0x414],0xd
  40e20e:	jne    0x40e22e
  40e210:	and    dh,0x2
  40e213:	jne    0x40e683
  40e219:	cmp    al,0x24
  40e21b:	je     0x40e676
  40e221:	cmp    DWORD PTR [rsi+0x414],0xd
  40e228:	je     0x40e04c
  40e22e:	mov    rax,QWORD PTR [rsi]
  40e231:	xor    edx,edx
  40e233:	mov    rcx,rsi
  40e236:	xor    ebx,ebx
  40e238:	mov    QWORD PTR [rax],rbp
  40e23b:	call   0x410da0
  40e240:	jmp    0x40e0f0
  40e245:	mov    rax,QWORD PTR [rsp+0x58]
  40e24a:	add    DWORD PTR [rsp+0x38],0x1
  40e24f:	mov    ebx,DWORD PTR [rsp+0x38]
  40e253:	mov    rdx,QWORD PTR [rsi+0x4d0]
  40e25a:	mov    rax,QWORD PTR [rax+0x20]
  40e25e:	movzx  eax,WORD PTR [rax+0x18]
  40e262:	cmp    ebx,eax
  40e264:	ja     0x40df1e
  40e26a:	mov    eax,ebx
  40e26c:	mov    rbx,rdi
  40e26f:	sub    rbx,rdx
  40e272:	mov    rdx,rbx
  40e275:	mov    rbx,QWORD PTR [rsp+0x60]
  40e27a:	mov    QWORD PTR [rbx+rax*8],rdx
  40e27e:	jmp    0x40df1e
  40e283:	mov    r14d,0x7
  40e289:	jmp    0x40df1e
  40e28e:	mov    r14d,0x4
  40e294:	jmp    0x40df1e
  40e299:	cmp    WORD PTR [rdx+0x18],0x0
  40e29e:	jne    0x40dfb4
  40e2a4:	mov    rax,QWORD PTR [rsp+0x68]
  40e2a9:	lea    rax,[rcx+rax*1+0x1]
  40e2ae:	cmp    rdi,rax
  40e2b1:	setne  al
  40e2b4:	movzx  eax,al
  40e2b7:	mov    DWORD PTR [rsp+0x38],eax
  40e2bb:	jmp    0x40dfb4
  40e2c0:	mov    rdx,QWORD PTR [rsp+0x58]
  40e2c5:	mov    rcx,rsi
  40e2c8:	call   0x40db20
  40e2cd:	test   al,al
  40e2cf:	jne    0x40dfe1
  40e2d5:	mov    rax,QWORD PTR [rsp+0x68]
  40e2da:	mov    rdx,QWORD PTR [rsp+0x60]
  40e2df:	mov    r14b,0x2
  40e2e2:	mov    DWORD PTR [rsp+0x4c],0x1
  40e2ea:	mov    rdi,rax
  40e2ed:	add    rdi,QWORD PTR [rsi+0x4d0]
  40e2f4:	mov    QWORD PTR [rdx],rax
  40e2f7:	jmp    0x40df1e
  40e2fc:	mov    QWORD PTR [rsi+0x4e0],rbx
  40e303:	movzx  r8d,WORD PTR [r8+0x20]
  40e308:	mov    rcx,rsi
  40e30b:	mov    rdx,QWORD PTR [rsp+0xd8]
  40e313:	call   0x40d790
  40e318:	mov    rdi,QWORD PTR [rsi+0x4d0]
  40e31f:	jmp    0x40dd83
  40e324:	mov    rbx,rdi
  40e327:	mov    rax,rbp
  40e32a:	mov    r14d,0x6
  40e330:	jmp    0x40dcf0
  40e335:	mov    rcx,rsi
  40e338:	call   0x40a650
  40e33d:	mov    r13,QWORD PTR [rsi+0x88]
  40e344:	movzx  r10d,BYTE PTR [rsp+0x40]
  40e34a:	jmp    0x40dcbf
  40e34f:	cmp    BYTE PTR [rsi+0x18],0x0
  40e353:	jne    0x40de38
  40e359:	mov    BYTE PTR [rsi+0x1a0],0x0
  40e360:	test   BYTE PTR [r8+0x19],0x1
  40e365:	jne    0x40e375
  40e367:	mov    rax,QWORD PTR [r8+0x20]
  40e36b:	test   BYTE PTR [rax+0x1c],0x1
  40e36f:	jne    0x40e5dc
  40e375:	mov    rdx,r8
  40e378:	mov    rcx,rsi
  40e37b:	mov    BYTE PTR [rsp+0x7b],r10b
  40e380:	mov    QWORD PTR [rsp+0x40],r8
  40e385:	call   0x40db20
  40e38a:	test   al,al
  40e38c:	mov    r8,QWORD PTR [rsp+0x40]
  40e391:	movzx  r10d,BYTE PTR [rsp+0x7b]
  40e397:	jne    0x40dd83
  40e39d:	mov    QWORD PTR [rsi+0x4e0],rbx
  40e3a4:	mov    rdx,r8
  40e3a7:	mov    rcx,rsi
  40e3aa:	mov    BYTE PTR [rsp+0x40],r10b
  40e3af:	xor    r14d,r14d
  40e3b2:	call   0x40d700
  40e3b7:	mov    r13,QWORD PTR [rsi+0x88]
  40e3be:	movzx  r10d,BYTE PTR [rsp+0x40]
  40e3c4:	jmp    0x40dcbf
  40e3c9:	nop    DWORD PTR [rax+0x0]
  40e3d0:	mov    rax,QWORD PTR [rsp+0x68]
  40e3d5:	add    rax,QWORD PTR [rsi+0x4d0]
  40e3dc:	mov    QWORD PTR [rsi+0x4e0],rax
  40e3e3:	mov    rax,QWORD PTR [rsp+0x58]
  40e3e8:	mov    QWORD PTR [r13+0x10],rbp
  40e3ec:	mov    rbx,QWORD PTR [rax+0x20]
  40e3f0:	cmp    WORD PTR [rbx+0x18],0x0
  40e3f5:	je     0x40e6b5
  40e3fb:	mov    r8,QWORD PTR [rbx+0x8]
  40e3ff:	movzx  edx,WORD PTR [r8+0x4]
  40e404:	mov    ecx,DWORD PTR [r8]
  40e407:	test   dx,dx
  40e40a:	je     0x40e43d
  40e40c:	mov    r11,QWORD PTR [rsp+0x60]
  40e411:	mov    rax,rcx
  40e414:	add    rax,0xd
  40e418:	mov    r9,QWORD PTR [r11+rdx*8]
  40e41c:	sub    r9,QWORD PTR [r11+rdx*8-0x8]
  40e421:	and    rax,0xfffffffffffffff8
  40e425:	add    r8,rax
  40e428:	mov    eax,DWORD PTR [r8]
  40e42b:	lea    rdx,[rax+r9*2-0x2]
  40e430:	add    rcx,rdx
  40e433:	movzx  edx,WORD PTR [r8+0x4]
  40e438:	test   dx,dx
  40e43b:	jne    0x40e414
  40e43d:	lea    rdx,[rcx+0x1]
  40e441:	mov    rcx,rsi
  40e444:	mov    BYTE PTR [rsp+0x4c],r10b
  40e449:	call   0x41a9c0
  40e44e:	movzx  r10d,BYTE PTR [rsp+0x4c]
  40e454:	mov    DWORD PTR [rsp+0x40],r15d
  40e459:	mov    r11,rax
  40e45c:	mov    rcx,QWORD PTR [rax+0x10]
  40e460:	mov    r14,QWORD PTR [rbx+0x8]
  40e464:	xor    edx,edx
  40e466:	mov    r15,QWORD PTR [rsp+0x60]
  40e46b:	xor    r9d,r9d
  40e46e:	mov    edi,DWORD PTR [r14]
  40e471:	lea    rbp,[r14+0x6]
  40e475:	add    r9,rdi
  40e478:	test   rdi,rdi
  40e47b:	je     0x40e4a2
  40e47d:	xor    eax,eax
  40e47f:	nop
  40e480:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  40e486:	mov    ebx,edx
  40e488:	xor    ebx,0x1
  40e48b:	cmp    r8b,0x22
  40e48f:	mov    BYTE PTR [rcx+rax*1],r8b
  40e493:	cmove  edx,ebx
  40e496:	add    rax,0x1
  40e49a:	cmp    rdi,rax
  40e49d:	jne    0x40e480
  40e49f:	add    rcx,rdi
  40e4a2:	movzx  eax,WORD PTR [r14+0x4]
  40e4a7:	test   ax,ax
  40e4aa:	je     0x40e560
  40e4b0:	mov    r13,QWORD PTR [r15+rax*8-0x8]
  40e4b5:	mov    r8,r13
  40e4b8:	add    r13,QWORD PTR [rsi+0x4d0]
  40e4bf:	not    r8
  40e4c2:	add    r8,QWORD PTR [r15+rax*8]
  40e4c6:	je     0x40e53c
  40e4c8:	lea    rdi,[r13+r8*1+0x0]
  40e4cd:	mov    rax,r13
  40e4d0:	xor    ebp,ebp
  40e4d2:	jmp    0x40e4f9
  40e4d4:	test   ebp,ebp
  40e4d6:	mov    r8,rcx
  40e4d9:	je     0x40e4e5
  40e4db:	cmp    bl,0x5c
  40e4de:	mov    ebp,0x1
  40e4e3:	je     0x40e52c
  40e4e5:	add    rax,0x1
  40e4e9:	add    r9,0x1
  40e4ed:	lea    rcx,[r8+0x1]
  40e4f1:	cmp    rax,rdi
  40e4f4:	mov    BYTE PTR [r8],bl
  40e4f7:	je     0x40e53c
  40e4f9:	test   edx,edx
  40e4fb:	movzx  ebx,BYTE PTR [rax]
  40e4fe:	mov    r8,rcx
  40e501:	je     0x40e4e5
  40e503:	cmp    bl,0x22
  40e506:	jne    0x40e4d4
  40e508:	cmp    r13,rax
  40e50b:	jae    0x40e51c
  40e50d:	mov    r8d,ebp
  40e510:	xor    r8d,0x1
  40e514:	cmp    BYTE PTR [rax-0x1],0x5c
  40e518:	cmovne ebp,r8d
  40e51c:	mov    BYTE PTR [rcx],0x5c
  40e51f:	lea    r8,[rcx+0x1]
  40e523:	add    r9,0x1
  40e527:	movzx  ebx,BYTE PTR [rax]
  40e52a:	jmp    0x40e4e5
  40e52c:	mov    BYTE PTR [rcx],0x5c
  40e52f:	add    r8,0x1
  40e533:	add    r9,0x1
  40e537:	movzx  ebx,BYTE PTR [rax]
  40e53a:	jmp    0x40e4e5
  40e53c:	mov    eax,DWORD PTR [r14]
  40e53f:	add    rax,0xd
  40e543:	and    rax,0xfffffffffffffff8
  40e547:	add    r14,rax
  40e54a:	jmp    0x40e46e
  40e54f:	mov    rbx,rdi
  40e552:	mov    rax,rbp
  40e555:	mov    r14d,0x3
  40e55b:	jmp    0x40dcf0
  40e560:	mov    BYTE PTR [rcx],0xa
  40e563:	mov    rdx,QWORD PTR [rsp+0x58]
  40e568:	mov    rcx,rsi
  40e56b:	mov    r8,QWORD PTR [r11+0x10]
  40e56f:	mov    r15d,DWORD PTR [rsp+0x40]
  40e574:	xor    r14d,r14d
  40e577:	mov    BYTE PTR [rsp+0x7b],r10b
  40e57c:	mov    QWORD PTR [rsp+0x40],r11
  40e581:	call   0x40a600
  40e586:	mov    r13,QWORD PTR [rsi+0x88]
  40e58d:	mov    r11,QWORD PTR [rsp+0x40]
  40e592:	mov    DWORD PTR [rsp+0x4c],0x0
  40e59a:	movzx  r10d,BYTE PTR [rsp+0x7b]
  40e5a0:	mov    QWORD PTR [r13+0x20],r11
  40e5a4:	jmp    0x40dcbf
  40e5a9:	mov    rax,QWORD PTR [rsp+0x58]
  40e5ae:	mov    r8d,DWORD PTR [rsp+0x7c]
  40e5b3:	xor    r9d,r9d
  40e5b6:	mov    edx,0x3
  40e5bb:	mov    rcx,rsi
  40e5be:	mov    rax,QWORD PTR [rax]
  40e5c1:	mov    QWORD PTR [rsp+0x28],rax
  40e5c6:	lea    rax,[rip+0x372fb]        # 0x4458c8
  40e5cd:	mov    QWORD PTR [rsp+0x20],rax
  40e5d2:	call   0x412740
  40e5d7:	jmp    0x40e10f
  40e5dc:	movzx  r14d,WORD PTR [rax+0x18]
  40e5e1:	mov    rax,QWORD PTR [rsp+0x70]
  40e5e6:	add    r14d,0x1
  40e5ea:	test   rax,rax
  40e5ed:	je     0x40e60f
  40e5ef:	mov    rdx,rax
  40e5f2:	mov    rcx,rsi
  40e5f5:	mov    QWORD PTR [rsp+0x40],r8
  40e5fa:	mov    BYTE PTR [rsp+0x38],r10b
  40e5ff:	call   0x41a9a0
  40e604:	movzx  r10d,BYTE PTR [rsp+0x38]
  40e60a:	mov    r8,QWORD PTR [rsp+0x40]
  40e60f:	movsxd rdx,r14d
  40e612:	mov    rcx,rsi
  40e615:	mov    QWORD PTR [rsp+0x38],r8
  40e61a:	shl    rdx,0x3
  40e61e:	mov    BYTE PTR [rsp+0x40],r10b
  40e623:	mov    r14d,0x1
  40e629:	call   0x41a9c0
  40e62e:	mov    QWORD PTR [rsp+0x70],rax
  40e633:	mov    rax,QWORD PTR [rax+0x10]
  40e637:	sub    rbx,QWORD PTR [rsi+0x4d0]
  40e63e:	mov    r8,QWORD PTR [rsp+0x38]
  40e643:	movzx  r10d,BYTE PTR [rsp+0x40]
  40e649:	mov    DWORD PTR [rsp+0x38],0x0
  40e651:	mov    QWORD PTR [rsp+0x60],rax
  40e656:	mov    rax,QWORD PTR [rsi+0x28]
  40e65a:	mov    QWORD PTR [rsp+0x58],r8
  40e65f:	mov    QWORD PTR [rsp+0x68],rbx
  40e664:	mov    rbx,rdi
  40e667:	mov    eax,DWORD PTR [rax+0x3c]
  40e66a:	mov    DWORD PTR [rsp+0x7c],eax
  40e66e:	mov    rax,rbp
  40e671:	jmp    0x40dcf0
  40e676:	cmp    BYTE PTR [rsi+0x430],0x0
  40e67d:	je     0x40e221
  40e683:	mov    rdx,rbp
  40e686:	mov    rcx,rsi
  40e689:	mov    BYTE PTR [rsp+0x40],r10b
  40e68e:	call   0x40d890
  40e693:	test   BYTE PTR [rax+0x10],0x1
  40e697:	movzx  r10d,BYTE PTR [rsp+0x40]
  40e69d:	jne    0x40e22e
  40e6a3:	cmp    DWORD PTR [rsi+0x414],0xd
  40e6aa:	je     0x40e04c
  40e6b0:	jmp    0x40e22e
  40e6b5:	mov    rdx,rax
  40e6b8:	mov    rcx,rsi
  40e6bb:	xor    r14d,r14d
  40e6be:	call   0x40d700
  40e6c3:	mov    DWORD PTR [rsp+0x4c],0x0
  40e6cb:	mov    r13,QWORD PTR [rsi+0x88]
  40e6d2:	movzx  r10d,BYTE PTR [rsp+0x40]
  40e6d8:	jmp    0x40dcbf
  40e6dd:	mov    r10,QWORD PTR [rsi+0x28]
  40e6e1:	mov    rax,QWORD PTR [rsi]
  40e6e4:	xor    ebx,ebx
  40e6e6:	mov    BYTE PTR [rax+0x68],0x1
  40e6ea:	mov    eax,DWORD PTR [r10+0xc]
  40e6ee:	sub    eax,0x1
  40e6f1:	lea    rdx,[rax+rax*4]
  40e6f5:	mov    rax,QWORD PTR [r10]
  40e6f8:	lea    rdx,[rax+rdx*8]
  40e6fc:	mov    eax,DWORD PTR [r10+0x3c]
  40e700:	movzx  ecx,BYTE PTR [rdx+0x1c]
  40e704:	sub    eax,DWORD PTR [rdx]
  40e706:	mov    r8d,DWORD PTR [rdx+0x10]
  40e70a:	shr    eax,cl
  40e70c:	mov    rcx,r10
  40e70f:	lea    edx,[r8+rax*1+0x1]
  40e714:	xor    r8d,r8d
  40e717:	call   0x408830
  40e71c:	jmp    0x40e0f0
  40e721:	nop    DWORD PTR [rax+rax*1+0x0]
  40e726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e730:	push   rbx
  40e731:	sub    rsp,0x20
  40e735:	mov    rbx,rcx
  40e738:	jmp    0x40e74e
  40e73a:	nop    WORD PTR [rax+rax*1+0x0]
  40e740:	xor    edx,edx
  40e742:	mov    rcx,rbx
  40e745:	call   0x40dc00
  40e74a:	test   al,al
  40e74c:	jne    0x40e770
  40e74e:	mov    rax,QWORD PTR [rbx]
  40e751:	cmp    BYTE PTR [rax+0x68],0x0
  40e755:	je     0x40e740
  40e757:	mov    rcx,rbx
  40e75a:	call   0x41a030
  40e75f:	test   al,al
  40e761:	jne    0x40e740
  40e763:	add    rsp,0x20
  40e767:	pop    rbx
  40e768:	ret    
  40e769:	nop    DWORD PTR [rax+0x0]
  40e770:	cmp    BYTE PTR [rbx+0x12],0x0
  40e774:	jne    0x40e74e
  40e776:	cmp    QWORD PTR [rbx],0x0
  40e77a:	setne  al
  40e77d:	add    rsp,0x20
  40e781:	pop    rbx
  40e782:	ret    
  40e783:	nop    DWORD PTR [rax]
  40e786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e790:	test   BYTE PTR [rcx+0x1c],0x1
  40e794:	je     0x40e7e0
  40e796:	cmp    WORD PTR [rcx+0x18],0x0
  40e79b:	je     0x40e7e0
  40e79d:	mov    r9,QWORD PTR [rcx+0x8]
  40e7a1:	movzx  r8d,WORD PTR [r9+0x4]
  40e7a6:	mov    eax,DWORD PTR [r9]
  40e7a9:	test   r8w,r8w
  40e7ad:	je     0x40e7e3
  40e7af:	mov    r10,QWORD PTR [rcx]
  40e7b2:	mov    rdx,rax
  40e7b5:	add    rdx,0xd
  40e7b9:	mov    rcx,QWORD PTR [r10+r8*8-0x8]
  40e7be:	and    rdx,0xfffffffffffffff8
  40e7c2:	add    r9,rdx
  40e7c5:	mov    edx,DWORD PTR [r9]
  40e7c8:	mov    ecx,DWORD PTR [rcx+0x8]
  40e7cb:	movzx  r8d,WORD PTR [r9+0x4]
  40e7d0:	add    rcx,rdx
  40e7d3:	add    rax,rcx
  40e7d6:	test   r8w,r8w
  40e7da:	jne    0x40e7b5
  40e7dc:	repz ret 
  40e7de:	xchg   ax,ax
  40e7e0:	mov    eax,DWORD PTR [rcx+0x14]
  40e7e3:	repz ret 
  40e7e5:	nop
  40e7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e7f0:	push   rdi
  40e7f1:	push   rsi
  40e7f2:	push   rbx
  40e7f3:	sub    rsp,0x20
  40e7f7:	test   BYTE PTR [rcx+0x1c],0x1
  40e7fb:	mov    rsi,rcx
  40e7fe:	mov    r9,rdx
  40e801:	je     0x40e870
  40e803:	cmp    WORD PTR [rcx+0x18],0x0
  40e808:	je     0x40e870
  40e80a:	mov    rbx,QWORD PTR [rcx+0x8]
  40e80e:	jmp    0x40e83d
  40e810:	mov    rdx,QWORD PTR [rsi]
  40e813:	mov    rcx,r9
  40e816:	mov    rdi,QWORD PTR [rdx+rax*8-0x8]
  40e81b:	mov    r8d,DWORD PTR [rdi+0x8]
  40e81f:	mov    rdx,QWORD PTR [rdi]
  40e822:	call   0x43f0a8
  40e827:	mov    r9,rax
  40e82a:	mov    eax,DWORD PTR [rdi+0x8]
  40e82d:	add    r9,rax
  40e830:	mov    eax,DWORD PTR [rbx]
  40e832:	add    rax,0xd
  40e836:	and    rax,0xfffffffffffffff8
  40e83a:	add    rbx,rax
  40e83d:	mov    r8d,DWORD PTR [rbx]
  40e840:	lea    rdx,[rbx+0x6]
  40e844:	mov    rcx,r9
  40e847:	call   0x43f0a8
  40e84c:	mov    r9,rax
  40e84f:	mov    eax,DWORD PTR [rbx]
  40e851:	add    r9,rax
  40e854:	movzx  eax,WORD PTR [rbx+0x4]
  40e858:	test   ax,ax
  40e85b:	jne    0x40e810
  40e85d:	mov    rax,r9
  40e860:	add    rsp,0x20
  40e864:	pop    rbx
  40e865:	pop    rsi
  40e866:	pop    rdi
  40e867:	ret    
  40e868:	nop    DWORD PTR [rax+rax*1+0x0]
  40e870:	mov    r8d,DWORD PTR [rsi+0x14]
  40e874:	mov    rdx,QWORD PTR [rsi+0x8]
  40e878:	mov    rcx,r9
  40e87b:	call   0x43f0a8
  40e880:	mov    r9,rax
  40e883:	mov    eax,DWORD PTR [rsi+0x14]
  40e886:	add    r9,rax
  40e889:	mov    rax,r9
  40e88c:	add    rsp,0x20
  40e890:	pop    rbx
  40e891:	pop    rsi
  40e892:	pop    rdi
  40e893:	ret    
  40e894:	xchg   ax,ax
  40e896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e8a0:	push   r12
  40e8a2:	push   rbp
  40e8a3:	push   rdi
  40e8a4:	push   rsi
  40e8a5:	push   rbx
  40e8a6:	sub    rsp,0x20
  40e8aa:	mov    rax,QWORD PTR [rcx+0x4d0]
  40e8b1:	mov    rbp,QWORD PTR [rcx+0x88]
  40e8b8:	mov    rdi,rdx
  40e8bb:	mov    rbx,rcx
  40e8be:	mov    QWORD PTR [rcx+0x4e0],rax
  40e8c5:	mov    rax,QWORD PTR [rcx]
  40e8c8:	mov    rax,QWORD PTR [rax]
  40e8cb:	mov    QWORD PTR [rbp+0x10],rax
  40e8cf:	mov    rdx,QWORD PTR [rcx]
  40e8d2:	mov    rdx,QWORD PTR [rdx+0x20]
  40e8d6:	mov    QWORD PTR [rbp+0x18],rdx
  40e8da:	sub    rdx,rax
  40e8dd:	call   0x40d690
  40e8e2:	mov    rdx,QWORD PTR [rbp+0x10]
  40e8e6:	cmp    BYTE PTR [rdx],0x28
  40e8e9:	je     0x40e995
  40e8ef:	movzx  r8d,BYTE PTR [rbx+0x41c]
  40e8f7:	mov    rsi,QWORD PTR [rbx]
  40e8fa:	mov    rcx,rbx
  40e8fd:	call   0x40daa0
  40e902:	mov    QWORD PTR [rsi],rax
  40e905:	add    BYTE PTR [rbx+0x18],0x1
  40e909:	mov    rdx,rdi
  40e90c:	mov    rcx,rbx
  40e90f:	call   0x40dc00
  40e914:	sub    BYTE PTR [rbx+0x18],0x1
  40e918:	test   rdi,rdi
  40e91b:	je     0x40ea8e
  40e921:	mov    r8,QWORD PTR [rbx+0x4d0]
  40e928:	mov    rax,QWORD PTR [rbx+0x4e0]
  40e92f:	cmp    r8,rax
  40e932:	jae    0x40e990
  40e934:	movzx  edx,BYTE PTR [rax-0x1]
  40e938:	mov    r12,QWORD PTR [rip+0x42ca1]        # 0x4515e0
  40e93f:	test   WORD PTR [r12+rdx*2],0xc00
  40e946:	jne    0x40e95d
  40e948:	jmp    0x40e990
  40e94a:	nop    WORD PTR [rax+rax*1+0x0]
  40e950:	movzx  ecx,BYTE PTR [rax-0x1]
  40e954:	test   WORD PTR [r12+rcx*2],0xc00
  40e95b:	je     0x40e990
  40e95d:	sub    rax,0x1
  40e961:	cmp    rax,r8
  40e964:	jne    0x40e950
  40e966:	mov    QWORD PTR [rbx+0x4e0],r8
  40e96d:	mov    rdx,rdi
  40e970:	xor    r8d,r8d
  40e973:	mov    rcx,rbx
  40e976:	call   0x40d790
  40e97b:	mov    eax,0x1
  40e980:	add    rsp,0x20
  40e984:	pop    rbx
  40e985:	pop    rsi
  40e986:	pop    rdi
  40e987:	pop    rbp
  40e988:	pop    r12
  40e98a:	ret    
  40e98b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e990:	mov    r8,rax
  40e993:	jmp    0x40e966
  40e995:	mov    rax,QWORD PTR [rbx+0x88]
  40e99c:	mov    r12,QWORD PTR [rip+0x42c3d]        # 0x4515e0
  40e9a3:	mov    rdx,QWORD PTR [rax+0x10]
  40e9a7:	add    rdx,0x1
  40e9ab:	jmp    0x40e9db
  40e9ad:	nop    DWORD PTR [rax]
  40e9b0:	mov    rax,QWORD PTR [rbx+0x88]
  40e9b7:	mov    r8d,0x1
  40e9bd:	mov    rcx,rbx
  40e9c0:	mov    rdx,QWORD PTR [rax+0x10]
  40e9c4:	call   0x40daa0
  40e9c9:	mov    rsi,rax
  40e9cc:	movzx  eax,BYTE PTR [rax]
  40e9cf:	cmp    al,0x2c
  40e9d1:	jne    0x40ea95
  40e9d7:	lea    rdx,[rsi+0x1]
  40e9db:	mov    r8d,0x1
  40e9e1:	mov    rcx,rbx
  40e9e4:	call   0x40daa0
  40e9e9:	movzx  edx,BYTE PTR [rax]
  40e9ec:	mov    rsi,rax
  40e9ef:	test   BYTE PTR [r12+rdx*2+0x1],0x2
  40e9f5:	jne    0x40ea09
  40e9f7:	cmp    dl,0x24
  40e9fa:	jne    0x40eaf5
  40ea00:	cmp    BYTE PTR [rbx+0x430],0x0
  40ea07:	je     0x40ea26
  40ea09:	mov    rdx,rsi
  40ea0c:	mov    rcx,rbx
  40ea0f:	call   0x40d890
  40ea14:	mov    rdx,rdi
  40ea17:	mov    r8,rax
  40ea1a:	mov    rcx,rbx
  40ea1d:	call   0x40c800
  40ea22:	test   al,al
  40ea24:	je     0x40e9b0
  40ea26:	lea    r8,[rip+0x370bb]        # 0x445ae8
  40ea2d:	mov    edx,0x3
  40ea32:	mov    rcx,rbx
  40ea35:	call   0x412660
  40ea3a:	xor    eax,eax
  40ea3c:	cmp    BYTE PTR [rsi],0x29
  40ea3f:	mov    rdx,QWORD PTR [rbx+0x88]
  40ea46:	mov    rcx,rbx
  40ea49:	sete   al
  40ea4c:	add    rsi,rax
  40ea4f:	mov    QWORD PTR [rdx+0x10],rsi
  40ea53:	mov    rax,QWORD PTR [rbx+0x38]
  40ea57:	mov    rsi,QWORD PTR [rbx]
  40ea5a:	mov    rax,QWORD PTR [rax+0x10]
  40ea5e:	mov    QWORD PTR [rdi],rax
  40ea61:	movzx  r8d,BYTE PTR [rbx+0x41c]
  40ea69:	mov    rdx,QWORD PTR [rbp+0x10]
  40ea6d:	call   0x40daa0
  40ea72:	mov    QWORD PTR [rsi],rax
  40ea75:	add    BYTE PTR [rbx+0x18],0x1
  40ea79:	xor    edx,edx
  40ea7b:	mov    rcx,rbx
  40ea7e:	call   0x40dc00
  40ea83:	sub    BYTE PTR [rbx+0x18],0x1
  40ea87:	xor    eax,eax
  40ea89:	jmp    0x40e980
  40ea8e:	xor    eax,eax
  40ea90:	jmp    0x40e980
  40ea95:	cmp    al,0x29
  40ea97:	jne    0x40ea26
  40ea99:	movzx  eax,WORD PTR [rdi+0x18]
  40ea9d:	mov    rdx,QWORD PTR [rbx+0x88]
  40eaa4:	add    rsi,0x1
  40eaa8:	mov    QWORD PTR [rdx+0x10],rsi
  40eaac:	mov    rdx,QWORD PTR [rbx+0x38]
  40eab0:	mov    rsi,QWORD PTR [rbx]
  40eab3:	mov    rcx,QWORD PTR [rdx+0x10]
  40eab7:	lea    rax,[rcx+rax*8]
  40eabb:	mov    QWORD PTR [rdi],rcx
  40eabe:	mov    rcx,rbx
  40eac1:	mov    QWORD PTR [rdx+0x10],rax
  40eac5:	or     BYTE PTR [rdi+0x1c],0x1
  40eac9:	movzx  r8d,BYTE PTR [rbx+0x41c]
  40ead1:	mov    rdx,QWORD PTR [rbp+0x10]
  40ead5:	call   0x40daa0
  40eada:	mov    QWORD PTR [rsi],rax
  40eadd:	add    BYTE PTR [rbx+0x18],0x1
  40eae1:	mov    rdx,rdi
  40eae4:	mov    rcx,rbx
  40eae7:	call   0x40dc00
  40eaec:	sub    BYTE PTR [rbx+0x18],0x1
  40eaf0:	jmp    0x40e921
  40eaf5:	cmp    dl,0x29
  40eaf8:	jne    0x40ea26
  40eafe:	movzx  eax,WORD PTR [rdi+0x18]
  40eb02:	test   ax,ax
  40eb05:	je     0x40ea9d
  40eb07:	jmp    0x40ea26
  40eb0c:	nop    DWORD PTR [rax+0x0]
  40eb10:	push   r14
  40eb12:	push   r13
  40eb14:	push   r12
  40eb16:	push   rbp
  40eb17:	push   rdi
  40eb18:	push   rsi
  40eb19:	push   rbx
  40eb1a:	sub    rsp,0x30
  40eb1e:	mov    rbx,rcx
  40eb21:	mov    ecx,DWORD PTR [rcx+0x14]
  40eb24:	add    ecx,DWORD PTR [rdx+0x14]
  40eb27:	mov    rsi,rdx
  40eb2a:	call   0x4385d0
  40eb2f:	mov    r8d,DWORD PTR [rbx+0x14]
  40eb33:	cmp    WORD PTR [rbx+0x18],0x0
  40eb38:	mov    rdi,rax
  40eb3b:	mov    BYTE PTR [rsp+0x2e],0x0
  40eb40:	mov    BYTE PTR [rsp+0x2f],0x0
  40eb45:	lea    rbp,[rax+r8*1]
  40eb49:	je     0x40ec00
  40eb4f:	mov    rsi,QWORD PTR [rsi+0x8]
  40eb53:	mov    rbx,QWORD PTR [rbx+0x8]
  40eb57:	lea    r13,[rsp+0x2e]
  40eb5c:	lea    r12,[rsp+0x2f]
  40eb61:	movzx  eax,WORD PTR [rsi+0x4]
  40eb65:	cmp    WORD PTR [rbx+0x4],ax
  40eb69:	je     0x40ebb2
  40eb6b:	jmp    0x40ebde
  40eb6d:	nop    DWORD PTR [rax]
  40eb70:	mov    r8,r14
  40eb73:	mov    rdx,rbp
  40eb76:	mov    rcx,rdi
  40eb79:	call   0x43f0b0
  40eb7e:	test   eax,eax
  40eb80:	jne    0x40ebde
  40eb82:	cmp    WORD PTR [rbx+0x4],0x0
  40eb87:	je     0x40ec43
  40eb8d:	mov    r8d,DWORD PTR [rsi]
  40eb90:	mov    eax,DWORD PTR [rbx]
  40eb92:	add    r8,0xd
  40eb96:	add    rax,0xd
  40eb9a:	and    r8,0xfffffffffffffff8
  40eb9e:	and    rax,0xfffffffffffffff8
  40eba2:	add    rsi,r8
  40eba5:	add    rbx,rax
  40eba8:	movzx  eax,WORD PTR [rsi+0x4]
  40ebac:	cmp    WORD PTR [rbx+0x4],ax
  40ebb0:	jne    0x40ebde
  40ebb2:	mov    r8d,DWORD PTR [rbx]
  40ebb5:	lea    rdx,[rbx+0x6]
  40ebb9:	mov    r9,r13
  40ebbc:	mov    rcx,rdi
  40ebbf:	call   0x40d5e0
  40ebc4:	mov    r8d,DWORD PTR [rsi]
  40ebc7:	lea    rdx,[rsi+0x6]
  40ebcb:	mov    r14,rax
  40ebce:	mov    r9,r12
  40ebd1:	mov    rcx,rbp
  40ebd4:	call   0x40d5e0
  40ebd9:	cmp    r14,rax
  40ebdc:	je     0x40eb70
  40ebde:	mov    ebx,0x1
  40ebe3:	mov    rcx,rdi
  40ebe6:	call   0x43f100
  40ebeb:	mov    eax,ebx
  40ebed:	add    rsp,0x30
  40ebf1:	pop    rbx
  40ebf2:	pop    rsi
  40ebf3:	pop    rdi
  40ebf4:	pop    rbp
  40ebf5:	pop    r12
  40ebf7:	pop    r13
  40ebf9:	pop    r14
  40ebfb:	ret    
  40ebfc:	nop    DWORD PTR [rax+0x0]
  40ec00:	mov    rdx,QWORD PTR [rbx+0x8]
  40ec04:	lea    r9,[rsp+0x2e]
  40ec09:	mov    rcx,rax
  40ec0c:	call   0x40d5e0
  40ec11:	mov    r8d,DWORD PTR [rsi+0x14]
  40ec15:	mov    rdx,QWORD PTR [rsi+0x8]
  40ec19:	lea    r9,[rsp+0x2f]
  40ec1e:	mov    rbx,rax
  40ec21:	mov    rcx,rbp
  40ec24:	call   0x40d5e0
  40ec29:	cmp    rbx,rax
  40ec2c:	jne    0x40ebde
  40ec2e:	mov    r8,rbx
  40ec31:	mov    rdx,rbp
  40ec34:	mov    rcx,rdi
  40ec37:	call   0x43f0b0
  40ec3c:	test   eax,eax
  40ec3e:	setne  bl
  40ec41:	jmp    0x40ebe3
  40ec43:	xor    ebx,ebx
  40ec45:	jmp    0x40ebe3
  40ec47:	nop
  40ec48:	nop
  40ec49:	nop
  40ec4a:	nop
  40ec4b:	nop
  40ec4c:	nop
  40ec4d:	nop
  40ec4e:	nop
  40ec4f:	nop
  40ec50:	and    BYTE PTR [rdx+0x18],0xc0
  40ec54:	mov    eax,0x1
  40ec59:	and    WORD PTR [rdx+0x18],0xd67f
  40ec5f:	ret    
  40ec60:	push   rsi
  40ec61:	push   rbx
  40ec62:	sub    rsp,0x28
  40ec66:	xor    esi,esi
  40ec68:	test   rcx,rcx
  40ec6b:	mov    rbx,rcx
  40ec6e:	jne    0x40ec7d
  40ec70:	jmp    0x40ec99
  40ec72:	mov    rbx,QWORD PTR [rbx]
  40ec75:	add    esi,0x1
  40ec78:	test   rbx,rbx
  40ec7b:	je     0x40ec99
  40ec7d:	cmp    BYTE PTR [rbx+0x10],0x0
  40ec81:	je     0x40ec72
  40ec83:	mov    rcx,QWORD PTR [rbx+0x18]
  40ec87:	call   0x40ec60
  40ec8c:	mov    rbx,QWORD PTR [rbx]
  40ec8f:	add    esi,eax
  40ec91:	add    esi,0x1
  40ec94:	test   rbx,rbx
  40ec97:	jne    0x40ec7d
  40ec99:	mov    eax,esi
  40ec9b:	add    rsp,0x28
  40ec9f:	pop    rbx
  40eca0:	pop    rsi
  40eca1:	ret    
  40eca2:	nop    DWORD PTR [rax+0x0]
  40eca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ecb0:	push   rsi
  40ecb1:	push   rbx
  40ecb2:	sub    rsp,0x28
  40ecb6:	mov    rbx,rcx
  40ecb9:	mov    esi,edx
  40ecbb:	call   0x41c950
  40ecc0:	movzx  ecx,BYTE PTR [rax+0x4]
  40ecc4:	cmp    cl,0x35
  40ecc7:	je     0x40ecf5
  40ecc9:	test   BYTE PTR [rax+0x6],0x10
  40eccd:	jne    0x40ed74
  40ecd3:	cmp    cl,0x16
  40ecd6:	je     0x40ed31
  40ecd8:	lea    r8,[rip+0x36f31]        # 0x445c10
  40ecdf:	mov    edx,0x3
  40ece4:	mov    rcx,rbx
  40ece7:	call   0x412660
  40ecec:	xor    eax,eax
  40ecee:	add    rsp,0x28
  40ecf2:	pop    rbx
  40ecf3:	pop    rsi
  40ecf4:	ret    
  40ecf5:	test   sil,sil
  40ecf8:	mov    rax,QWORD PTR [rax+0x8]
  40ecfc:	je     0x40ed1d
  40ecfe:	cmp    QWORD PTR [rbx+0x498],rax
  40ed05:	je     0x40ed96
  40ed0b:	cmp    QWORD PTR [rbx+0x4b8],rax
  40ed12:	je     0x40ed59
  40ed14:	cmp    QWORD PTR [rbx+0x4c0],rax
  40ed1b:	je     0x40ed59
  40ed1d:	test   BYTE PTR [rax+0x18],0x80
  40ed21:	mov    edx,0x0
  40ed26:	cmovne rax,rdx
  40ed2a:	add    rsp,0x28
  40ed2e:	pop    rbx
  40ed2f:	pop    rsi
  40ed30:	ret    
  40ed31:	mov    rax,QWORD PTR [rbx+0x90]
  40ed38:	lea    r8,[rip+0x36ea9]        # 0x445be8
  40ed3f:	mov    edx,0x3
  40ed44:	mov    rcx,rbx
  40ed47:	mov    r9,QWORD PTR [rax+0x8]
  40ed4b:	call   0x412660
  40ed50:	xor    eax,eax
  40ed52:	add    rsp,0x28
  40ed56:	pop    rbx
  40ed57:	pop    rsi
  40ed58:	ret    
  40ed59:	lea    r8,[rip+0x36e10]        # 0x445b70
  40ed60:	mov    edx,0x3
  40ed65:	mov    rcx,rbx
  40ed68:	call   0x412660
  40ed6d:	xor    eax,eax
  40ed6f:	jmp    0x40ecee
  40ed74:	mov    rax,QWORD PTR [rax+0x8]
  40ed78:	lea    r8,[rip+0x36e29]        # 0x445ba8
  40ed7f:	mov    edx,0x3
  40ed84:	mov    rcx,rbx
  40ed87:	mov    r9,QWORD PTR [rax]
  40ed8a:	call   0x412660
  40ed8f:	xor    eax,eax
  40ed91:	jmp    0x40ecee
  40ed96:	lea    r8,[rip+0x36da3]        # 0x445b40
  40ed9d:	mov    edx,0x3
  40eda2:	mov    rcx,rbx
  40eda5:	call   0x412660
  40edaa:	xor    eax,eax
  40edac:	jmp    0x40ecee
  40edb1:	nop    DWORD PTR [rax+rax*1+0x0]
  40edb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40edc0:	push   rsi
  40edc1:	push   rbx
  40edc2:	sub    rsp,0x28
  40edc6:	mov    esi,edx
  40edc8:	mov    rbx,rcx
  40edcb:	call   0x41c950
  40edd0:	movzx  r8d,BYTE PTR [rax+0x4]
  40edd5:	mov    rdx,rax
  40edd8:	cmp    r8b,0x37
  40eddc:	je     0x40edf0
  40edde:	xor    eax,eax
  40ede0:	cmp    r8b,0x16
  40ede4:	jne    0x40ee20
  40ede6:	add    rsp,0x28
  40edea:	pop    rbx
  40edeb:	pop    rsi
  40edec:	ret    
  40eded:	nop    DWORD PTR [rax]
  40edf0:	cmp    DWORD PTR [rax+0x8],0x1
  40edf4:	jne    0x40ee20
  40edf6:	mov    rax,QWORD PTR [rax+0x10]
  40edfa:	movzx  eax,BYTE PTR [rax]
  40edfd:	sub    eax,0x30
  40ee00:	cmp    eax,esi
  40ee02:	jbe    0x40ee20
  40ee04:	cmp    eax,0x4
  40ee07:	ja     0x40ee20
  40ee09:	cmp    eax,0x4
  40ee0c:	jne    0x40ee13
  40ee0e:	cmp    esi,0x3
  40ee11:	jne    0x40ee20
  40ee13:	cmp    eax,0x2
  40ee16:	jne    0x40ede6
  40ee18:	test   esi,esi
  40ee1a:	je     0x40ede6
  40ee1c:	nop    DWORD PTR [rax+0x0]
  40ee20:	mov    rcx,rbx
  40ee23:	call   0x41cb80
  40ee28:	lea    r8,[rip+0x36e01]        # 0x445c30
  40ee2f:	mov    r9,rax
  40ee32:	mov    edx,0x3
  40ee37:	mov    rcx,rbx
  40ee3a:	call   0x412660
  40ee3f:	xor    eax,eax
  40ee41:	add    rsp,0x28
  40ee45:	pop    rbx
  40ee46:	pop    rsi
  40ee47:	ret    
  40ee48:	nop    DWORD PTR [rax+rax*1+0x0]
  40ee50:	push   rsi
  40ee51:	push   rbx
  40ee52:	sub    rsp,0x28
  40ee56:	mov    rsi,rcx
  40ee59:	mov    BYTE PTR [rcx+0x17],0x1
  40ee5d:	jmp    0x40ee6f
  40ee5f:	nop
  40ee60:	cmp    dl,0x35
  40ee63:	jne    0x40ee90
  40ee65:	mov    rbx,QWORD PTR [rax+0x8]
  40ee69:	test   BYTE PTR [rbx+0x18],0x80
  40ee6d:	je     0x40eeb0
  40ee6f:	mov    rcx,rsi
  40ee72:	call   0x41c950
  40ee77:	movzx  edx,BYTE PTR [rax+0x4]
  40ee7b:	cmp    dl,0x16
  40ee7e:	jne    0x40ee60
  40ee80:	mov    BYTE PTR [rsi+0x17],0x0
  40ee84:	add    rsp,0x28
  40ee88:	pop    rbx
  40ee89:	pop    rsi
  40ee8a:	ret    
  40ee8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ee90:	lea    r8,[rip+0x36dc1]        # 0x445c58
  40ee97:	mov    edx,0x3
  40ee9c:	mov    rcx,rsi
  40ee9f:	call   0x412660
  40eea4:	mov    BYTE PTR [rsi+0x17],0x0
  40eea8:	add    rsp,0x28
  40eeac:	pop    rbx
  40eead:	pop    rsi
  40eeae:	ret    
  40eeaf:	nop
  40eeb0:	movzx  eax,BYTE PTR [rbx+0x18]
  40eeb4:	and    eax,0x3f
  40eeb7:	cmp    al,0x1
  40eeb9:	je     0x40eecb
  40eebb:	mov    rcx,rbx
  40eebe:	call   0x40c7f0
  40eec3:	or     WORD PTR [rbx+0x18],0x280
  40eec9:	jmp    0x40ee6f
  40eecb:	mov    r9,QWORD PTR [rbx]
  40eece:	lea    r8,[rip+0x36da8]        # 0x445c7d
  40eed5:	xor    edx,edx
  40eed7:	mov    rcx,rsi
  40eeda:	call   0x412660
  40eedf:	jmp    0x40eebb
  40eee1:	nop    DWORD PTR [rax+rax*1+0x0]
  40eee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eef0:	push   rbp
  40eef1:	push   r15
  40eef3:	push   r14
  40eef5:	push   r13
  40eef7:	push   r12
  40eef9:	push   rdi
  40eefa:	push   rsi
  40eefb:	push   rbx
  40eefc:	sub    rsp,0x38
  40ef00:	lea    rbp,[rsp+0x80]
  40ef08:	add    BYTE PTR [rcx+0x18],0x1
  40ef0c:	mov    QWORD PTR [rdx],0x0
  40ef13:	mov    rbx,rcx
  40ef16:	mov    r13,rdx
  40ef19:	mov    esi,r8d
  40ef1c:	call   0x40c760
  40ef21:	mov    r12,rax
  40ef24:	movzx  eax,BYTE PTR [rax+0x4]
  40ef28:	cmp    al,0x16
  40ef2a:	je     0x40f115
  40ef30:	cmp    al,0x35
  40ef32:	jne    0x40eff0
  40ef38:	mov    rcx,rbx
  40ef3b:	mov    edi,DWORD PTR [r12]
  40ef3f:	call   0x40c760
  40ef44:	movzx  eax,BYTE PTR [rax+0x4]
  40ef48:	cmp    al,0x14
  40ef4a:	je     0x40f014
  40ef50:	cmp    esi,0x4
  40ef53:	je     0x40f0b0
  40ef59:	cmp    esi,0x11
  40ef5c:	jne    0x40efb2
  40ef5e:	cmp    al,0x16
  40ef60:	jne    0x40efb2
  40ef62:	mov    rax,QWORD PTR [r12+0x8]
  40ef67:	mov    r8d,DWORD PTR [rax+0x8]
  40ef6b:	lea    eax,[r8+0x1]
  40ef6f:	mov    rdi,rax
  40ef72:	add    rax,0x1e
  40ef76:	shr    rax,0x4
  40ef7a:	shl    rax,0x4
  40ef7e:	call   0x439cf0
  40ef83:	sub    rsp,rax
  40ef86:	mov    BYTE PTR [rsp+0x30],0x23
  40ef8b:	mov    rax,QWORD PTR [r12+0x8]
  40ef90:	lea    rcx,[rsp+0x31]
  40ef95:	lea    rsi,[rsp+0x30]
  40ef9a:	mov    rdx,QWORD PTR [rax]
  40ef9d:	call   0x43f0a8
  40efa2:	mov    r8d,edi
  40efa5:	mov    rdx,rsi
  40efa8:	mov    rcx,rbx
  40efab:	call   0x418eb0
  40efb0:	jmp    0x40efd3
  40efb2:	lea    rax,[rip+0x36d1f]        # 0x445cd8
  40efb9:	xor    r9d,r9d
  40efbc:	mov    r8d,edi
  40efbf:	mov    edx,0x3
  40efc4:	mov    rcx,rbx
  40efc7:	mov    QWORD PTR [rsp+0x20],rax
  40efcc:	call   0x412740
  40efd1:	xor    eax,eax
  40efd3:	sub    BYTE PTR [rbx+0x18],0x1
  40efd7:	lea    rsp,[rbp-0x48]
  40efdb:	pop    rbx
  40efdc:	pop    rsi
  40efdd:	pop    rdi
  40efde:	pop    r12
  40efe0:	pop    r13
  40efe2:	pop    r14
  40efe4:	pop    r15
  40efe6:	pop    rbp
  40efe7:	ret    
  40efe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40eff0:	lea    rax,[rip+0x36cc1]        # 0x445cb8
  40eff7:	xor    r9d,r9d
  40effa:	mov    edx,0x3
  40efff:	mov    rcx,rbx
  40f002:	mov    QWORD PTR [rsp+0x20],rax
  40f007:	mov    r8d,DWORD PTR [r12]
  40f00b:	call   0x412740
  40f010:	xor    eax,eax
  40f012:	jmp    0x40efd3
  40f014:	xor    r15d,r15d
  40f017:	lea    r14,[rbx+0x38]
  40f01b:	jmp    0x40f051
  40f01d:	nop    DWORD PTR [rax]
  40f020:	lea    rax,[rdi+rdi*2]
  40f024:	mov    r8,QWORD PTR [rsi]
  40f027:	test   r15d,r15d
  40f02a:	lea    rdx,[rcx+rax*8]
  40f02e:	mov    QWORD PTR [rdx+0x10],r8
  40f032:	lea    rax,[rdx+0x10]
  40f036:	mov    rdx,QWORD PTR [rsi+0x8]
  40f03a:	mov    QWORD PTR [rax+0x8],rdx
  40f03e:	mov    rdx,QWORD PTR [rsi+0x10]
  40f042:	mov    QWORD PTR [rax+0x10],rdx
  40f046:	jne    0x40f04d
  40f048:	and    WORD PTR [rcx+0x16],0xfffe
  40f04d:	add    r15d,0x1
  40f051:	mov    rcx,rbx
  40f054:	call   0x40c760
  40f059:	mov    rsi,rax
  40f05c:	movzx  eax,BYTE PTR [rax+0x4]
  40f060:	cmp    al,0x15
  40f062:	je     0x40f0c2
  40f064:	cmp    al,0x16
  40f066:	je     0x40f0e3
  40f068:	mov    rax,QWORD PTR [rbx+0x38]
  40f06c:	mov    edi,r15d
  40f06f:	lea    rdx,[rdi+rdi*2]
  40f073:	mov    rcx,QWORD PTR [rax+0x10]
  40f077:	mov    rax,QWORD PTR [rax+0x18]
  40f07b:	lea    rdx,[rdx*8+0x28]
  40f083:	sub    rax,rcx
  40f086:	cmp    rdx,rax
  40f089:	jbe    0x40f020
  40f08b:	mov    rcx,rbx
  40f08e:	mov    r8d,0x28
  40f094:	mov    rdx,r14
  40f097:	call   0x41ab60
  40f09c:	mov    rax,QWORD PTR [rbx+0x38]
  40f0a0:	mov    rcx,QWORD PTR [rax+0x10]
  40f0a4:	jmp    0x40f020
  40f0a9:	nop    DWORD PTR [rax+0x0]
  40f0b0:	mov    edx,0x1
  40f0b5:	mov    rcx,rbx
  40f0b8:	call   0x40a7d0
  40f0bd:	jmp    0x40ef62
  40f0c2:	test   r15d,r15d
  40f0c5:	je     0x40f0fc
  40f0c7:	mov    rax,QWORD PTR [rbx+0x38]
  40f0cb:	mov    rax,QWORD PTR [rax+0x10]
  40f0cf:	mov    DWORD PTR [rax+0x8],r15d
  40f0d3:	mov    QWORD PTR [rax],0x0
  40f0da:	mov    QWORD PTR [r13+0x0],rax
  40f0de:	jmp    0x40ef62
  40f0e3:	lea    r8,[rip+0x36c0e]        # 0x445cf8
  40f0ea:	mov    edx,0x3
  40f0ef:	mov    rcx,rbx
  40f0f2:	call   0x412660
  40f0f7:	jmp    0x40efd1
  40f0fc:	lea    r8,[rip+0x36c14]        # 0x445d17
  40f103:	mov    edx,0x3
  40f108:	mov    rcx,rbx
  40f10b:	call   0x412660
  40f110:	jmp    0x40efd1
  40f115:	lea    r8,[rip+0x36b7f]        # 0x445c9b
  40f11c:	mov    edx,0x3
  40f121:	mov    rcx,rbx
  40f124:	call   0x412660
  40f129:	xor    eax,eax
  40f12b:	jmp    0x40efd3
  40f130:	push   rbp
  40f131:	push   rdi
  40f132:	push   rsi
  40f133:	push   rbx
  40f134:	sub    rsp,0x28
  40f138:	mov    rsi,QWORD PTR [rcx+0x20]
  40f13c:	mov    rdi,rdx
  40f13f:	lea    rbp,[rcx+0x20]
  40f143:	test   rsi,rsi
  40f146:	jne    0x40f15d
  40f148:	jmp    0x40f1a0
  40f14a:	nop    WORD PTR [rax+rax*1+0x0]
  40f150:	mov    rbp,QWORD PTR [rbp+0x0]
  40f154:	mov    rsi,QWORD PTR [rbp+0x0]
  40f158:	test   rsi,rsi
  40f15b:	je     0x40f1a0
  40f15d:	mov    eax,DWORD PTR [rsi+0x8]
  40f160:	cmp    eax,DWORD PTR [rdi+0x8]
  40f163:	jne    0x40f150
  40f165:	test   eax,eax
  40f167:	je     0x40f1a0
  40f169:	xor    ebx,ebx
  40f16b:	jmp    0x40f17a
  40f16d:	nop    DWORD PTR [rax]
  40f170:	mov    ecx,DWORD PTR [rsi+0x8]
  40f173:	add    ebx,0x1
  40f176:	cmp    ecx,ebx
  40f178:	jbe    0x40f19b
  40f17a:	mov    ecx,ebx
  40f17c:	lea    rax,[rcx+rcx*2]
  40f180:	lea    rcx,[rax*8+0x10]
  40f188:	lea    rdx,[rdi+rcx*1]
  40f18c:	add    rcx,rsi
  40f18f:	call   0x41a460
  40f194:	test   eax,eax
  40f196:	jne    0x40f170
  40f198:	mov    ecx,DWORD PTR [rsi+0x8]
  40f19b:	cmp    ecx,ebx
  40f19d:	jne    0x40f150
  40f19f:	nop
  40f1a0:	mov    rax,rbp
  40f1a3:	add    rsp,0x28
  40f1a7:	pop    rbx
  40f1a8:	pop    rsi
  40f1a9:	pop    rdi
  40f1aa:	pop    rbp
  40f1ab:	ret    
  40f1ac:	nop    DWORD PTR [rax+0x0]
  40f1b0:	push   r12
  40f1b2:	push   rbp
  40f1b3:	push   rdi
  40f1b4:	push   rsi
  40f1b5:	push   rbx
  40f1b6:	sub    rsp,0x20
  40f1ba:	mov    r12d,0x400
  40f1c0:	xor    edi,edi
  40f1c2:	mov    rsi,rcx
  40f1c5:	mov    ecx,0x400
  40f1ca:	call   0x4385d0
  40f1cf:	mov    rbp,rax
  40f1d2:	mov    rcx,rsi
  40f1d5:	call   0x40c760
  40f1da:	movzx  r8d,BYTE PTR [rax+0x4]
  40f1df:	mov    rbx,rax
  40f1e2:	cmp    r8b,0x51
  40f1e6:	je     0x40f1d2
  40f1e8:	cmp    r8b,0x2
  40f1ec:	je     0x40f26b
  40f1ee:	cmp    r8b,0x16
  40f1f2:	je     0x40f257
  40f1f4:	mov    rcx,rax
  40f1f7:	call   0x41a050
  40f1fc:	lea    r8d,[rax+0x2]
  40f200:	lea    rax,[r8+rdi*1]
  40f204:	cmp    r12,rax
  40f207:	jb     0x40f240
  40f209:	test   BYTE PTR [rbx+0x6],0x1
  40f20d:	je     0x40f218
  40f20f:	mov    BYTE PTR [rbp+rdi*1+0x0],0x20
  40f214:	add    rdi,0x1
  40f218:	lea    r8,[rbp+rdi*1+0x0]
  40f21d:	mov    r9d,0x1
  40f223:	mov    rdx,rbx
  40f226:	mov    rcx,rsi
  40f229:	call   0x41a090
  40f22e:	sub    rax,rbp
  40f231:	mov    rdi,rax
  40f234:	jmp    0x40f1d2
  40f236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f240:	add    r8,r12
  40f243:	mov    rcx,rbp
  40f246:	lea    r12,[r8+r8*1]
  40f24a:	mov    rdx,r12
  40f24d:	call   0x438650
  40f252:	mov    rbp,rax
  40f255:	jmp    0x40f209
  40f257:	lea    r8,[rip+0x36ada]        # 0x445d38
  40f25e:	mov    edx,0x3
  40f263:	mov    rcx,rsi
  40f266:	call   0x412660
  40f26b:	mov    rax,rbp
  40f26e:	mov    BYTE PTR [rbp+rdi*1+0x0],0x0
  40f273:	add    rsp,0x20
  40f277:	pop    rbx
  40f278:	pop    rsi
  40f279:	pop    rdi
  40f27a:	pop    rbp
  40f27b:	pop    r12
  40f27d:	ret    
  40f27e:	xchg   ax,ax
  40f280:	push   r12
  40f282:	push   rbp
  40f283:	push   rdi
  40f284:	push   rsi
  40f285:	push   rbx
  40f286:	sub    rsp,0x30
  40f28a:	mov    rax,QWORD PTR [rcx+0x1a8]
  40f291:	mov    esi,edx
  40f293:	xor    edx,edx
  40f295:	test   r9d,r9d
  40f298:	mov    rbx,rcx
  40f29b:	mov    ebp,r8d
  40f29e:	mov    r12d,DWORD PTR [rax-0x18]
  40f2a2:	je     0x40f2af
  40f2a4:	mov    rax,QWORD PTR [rcx+0x90]
  40f2ab:	mov    rdx,QWORD PTR [rax+0x8]
  40f2af:	add    BYTE PTR [rbx+0x18],0x1
  40f2b3:	mov    rcx,rbx
  40f2b6:	call   0x41a860
  40f2bb:	sub    BYTE PTR [rbx+0x18],0x1
  40f2bf:	test   ebp,ebp
  40f2c1:	mov    rdi,rax
  40f2c4:	setne  al
  40f2c7:	cmp    esi,0x1
  40f2ca:	mov    QWORD PTR [rsp+0x28],rdi
  40f2cf:	jne    0x40f2d5
  40f2d1:	test   al,al
  40f2d3:	jne    0x40f330
  40f2d5:	test   esi,esi
  40f2d7:	jne    0x40f310
  40f2d9:	test   al,al
  40f2db:	je     0x40f310
  40f2dd:	lea    rax,[rip+0x36a74]        # 0x445d58
  40f2e4:	xor    r9d,r9d
  40f2e7:	mov    r8d,r12d
  40f2ea:	mov    edx,ebp
  40f2ec:	mov    rcx,rbx
  40f2ef:	mov    QWORD PTR [rsp+0x20],rax
  40f2f4:	call   0x412780
  40f2f9:	mov    rcx,rdi
  40f2fc:	add    rsp,0x30
  40f300:	pop    rbx
  40f301:	pop    rsi
  40f302:	pop    rdi
  40f303:	pop    rbp
  40f304:	pop    r12
  40f306:	jmp    0x43f100
  40f30b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f310:	lea    rax,[rip+0x36a41]        # 0x445d58
  40f317:	xor    r9d,r9d
  40f31a:	mov    r8d,r12d
  40f31d:	mov    edx,esi
  40f31f:	mov    rcx,rbx
  40f322:	mov    QWORD PTR [rsp+0x20],rax
  40f327:	call   0x412740
  40f32c:	jmp    0x40f2f9
  40f32e:	xchg   ax,ax
  40f330:	lea    rax,[rip+0x36a21]        # 0x445d58
  40f337:	xor    r9d,r9d
  40f33a:	mov    r8d,r12d
  40f33d:	mov    edx,ebp
  40f33f:	mov    rcx,rbx
  40f342:	mov    QWORD PTR [rsp+0x20],rax
  40f347:	call   0x412810
  40f34c:	jmp    0x40f2f9
  40f34e:	xchg   ax,ax
  40f350:	mov    r9d,0x1
  40f356:	mov    r8d,0x12
  40f35c:	mov    edx,0x1
  40f361:	jmp    0x40f280
  40f366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f370:	mov    r9d,0x1
  40f376:	xor    r8d,r8d
  40f379:	mov    edx,0x3
  40f37e:	jmp    0x40f280
  40f383:	nop    DWORD PTR [rax]
  40f386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f390:	push   r12
  40f392:	push   rbp
  40f393:	push   rdi
  40f394:	push   rsi
  40f395:	push   rbx
  40f396:	sub    rsp,0x50
  40f39a:	add    BYTE PTR [rcx+0x18],0x1
  40f39e:	lea    rdx,[rsp+0x2c]
  40f3a3:	mov    rsi,rcx
  40f3a6:	mov    DWORD PTR [rsp+0x2c],0x0
  40f3ae:	call   0x40c7e0
  40f3b3:	mov    rdi,rax
  40f3b6:	mov    rax,QWORD PTR [rax]
  40f3b9:	cmp    BYTE PTR [rdi+0x4],0x35
  40f3bd:	mov    rdx,QWORD PTR [rdi+0x10]
  40f3c1:	mov    QWORD PTR [rsp+0x30],rax
  40f3c6:	mov    rax,QWORD PTR [rdi+0x8]
  40f3ca:	mov    QWORD PTR [rsp+0x40],rdx
  40f3cf:	mov    QWORD PTR [rsp+0x38],rax
  40f3d4:	je     0x40f410
  40f3d6:	cmp    QWORD PTR [rsi+0x3a0],0x0
  40f3de:	mov    edx,0x1
  40f3e3:	je     0x40f3f9
  40f3e5:	mov    rcx,rsi
  40f3e8:	call   0x40a7d0
  40f3ed:	mov    edx,DWORD PTR [rsi+0x30]
  40f3f0:	mov    rcx,rsi
  40f3f3:	call   QWORD PTR [rsi+0x3a0]
  40f3f9:	movzx  eax,BYTE PTR [rsi+0x18]
  40f3fd:	sub    eax,0x1
  40f400:	mov    BYTE PTR [rsi+0x18],al
  40f403:	add    rsp,0x50
  40f407:	pop    rbx
  40f408:	pop    rsi
  40f409:	pop    rdi
  40f40a:	pop    rbp
  40f40b:	pop    r12
  40f40d:	ret    
  40f40e:	xchg   ax,ax
  40f410:	mov    rbx,QWORD PTR [rsi+0x360]
  40f417:	test   rbx,rbx
  40f41a:	jne    0x40f428
  40f41c:	jmp    0x40f3d6
  40f41e:	xchg   ax,ax
  40f420:	mov    rbx,QWORD PTR [rbx]
  40f423:	test   rbx,rbx
  40f426:	je     0x40f3d6
  40f428:	cmp    rax,QWORD PTR [rbx+0x8]
  40f42c:	jne    0x40f420
  40f42e:	cmp    BYTE PTR [rbx+0x10],0x0
  40f432:	je     0x40f510
  40f438:	movzx  r12d,BYTE PTR [rbx+0x13]
  40f43d:	test   r12b,r12b
  40f440:	je     0x40f5a0
  40f446:	sub    BYTE PTR [rsi+0x18],0x1
  40f44a:	mov    rcx,rsi
  40f44d:	call   0x40c760
  40f452:	cmp    BYTE PTR [rax+0x4],0x35
  40f456:	mov    rbp,rax
  40f459:	je     0x40f4df
  40f45f:	add    BYTE PTR [rsi+0x18],0x1
  40f463:	cmp    QWORD PTR [rsi+0x3a0],0x0
  40f46b:	je     0x40f3f9
  40f46d:	mov    rax,QWORD PTR [rsi+0x88]
  40f474:	cmp    QWORD PTR [rax+0x8],0x0
  40f479:	je     0x40f5d0
  40f47f:	mov    ecx,0x30
  40f484:	call   0x4385d0
  40f489:	mov    r8,rax
  40f48c:	mov    rax,QWORD PTR [rsp+0x30]
  40f491:	mov    r9d,0x2
  40f497:	xor    edx,edx
  40f499:	mov    rcx,rsi
  40f49c:	mov    QWORD PTR [r8],rax
  40f49f:	mov    rax,QWORD PTR [rsp+0x38]
  40f4a4:	or     WORD PTR [r8+0x6],0x20
  40f4aa:	mov    QWORD PTR [r8+0x8],rax
  40f4ae:	mov    rax,QWORD PTR [rsp+0x40]
  40f4b3:	mov    QWORD PTR [r8+0x10],rax
  40f4b7:	mov    rax,QWORD PTR [rbp+0x0]
  40f4bb:	mov    QWORD PTR [r8+0x18],rax
  40f4bf:	mov    rax,QWORD PTR [rbp+0x8]
  40f4c3:	mov    QWORD PTR [r8+0x20],rax
  40f4c7:	mov    rax,QWORD PTR [rbp+0x10]
  40f4cb:	or     WORD PTR [r8+0x1e],0x20
  40f4d1:	mov    QWORD PTR [r8+0x28],rax
  40f4d5:	call   0x40a480
  40f4da:	jmp    0x40f3ed
  40f4df:	mov    rbx,QWORD PTR [rbx+0x18]
  40f4e3:	mov    rax,QWORD PTR [rax+0x8]
  40f4e7:	test   rbx,rbx
  40f4ea:	jne    0x40f4fd
  40f4ec:	jmp    0x40f45f
  40f4f1:	mov    rbx,QWORD PTR [rbx]
  40f4f4:	test   rbx,rbx
  40f4f7:	je     0x40f5da
  40f4fd:	cmp    rax,QWORD PTR [rbx+0x8]
  40f501:	jne    0x40f4f1
  40f503:	test   r12b,r12b
  40f506:	je     0x40f510
  40f508:	add    BYTE PTR [rsi+0x18],0x1
  40f50c:	nop    DWORD PTR [rax+0x0]
  40f510:	cmp    BYTE PTR [rbx+0x12],0x0
  40f514:	je     0x40f560
  40f516:	mov    eax,DWORD PTR [rsp+0x2c]
  40f51a:	mov    BYTE PTR [rsi+0x9c],0x4f
  40f521:	mov    DWORD PTR [rsi+0x98],eax
  40f527:	movzx  eax,WORD PTR [rdi+0x6]
  40f52b:	mov    WORD PTR [rsi+0x9e],ax
  40f532:	mov    eax,DWORD PTR [rbx+0x18]
  40f535:	mov    BYTE PTR [rsi+0x20],0x1
  40f539:	mov    DWORD PTR [rsi+0xa0],eax
  40f53f:	movzx  eax,BYTE PTR [rbx+0x13]
  40f543:	mov    BYTE PTR [rsi+0x21],al
  40f546:	cmp    BYTE PTR [rbx+0x13],0x0
  40f54a:	movzx  eax,BYTE PTR [rsi+0x18]
  40f54e:	jne    0x40f3fd
  40f554:	add    eax,0x1
  40f557:	jmp    0x40f3fd
  40f55c:	nop    DWORD PTR [rax+0x0]
  40f560:	mov    rax,QWORD PTR [rsi+0x368]
  40f567:	test   rax,rax
  40f56a:	je     0x40f577
  40f56c:	xor    r8d,r8d
  40f56f:	mov    rdx,rdi
  40f572:	mov    rcx,rsi
  40f575:	call   rax
  40f577:	cmp    BYTE PTR [rbx+0x13],0x0
  40f57b:	je     0x40f581
  40f57d:	sub    BYTE PTR [rsi+0x18],0x1
  40f581:	mov    rcx,rsi
  40f584:	call   QWORD PTR [rbx+0x18]
  40f587:	cmp    BYTE PTR [rbx+0x13],0x0
  40f58b:	movzx  eax,BYTE PTR [rsi+0x18]
  40f58f:	je     0x40f3fd
  40f595:	jmp    0x40f554
  40f597:	nop    WORD PTR [rax+rax*1+0x0]
  40f5a0:	mov    rcx,rsi
  40f5a3:	call   0x40c760
  40f5a8:	cmp    BYTE PTR [rax+0x4],0x35
  40f5ac:	mov    rbp,rax
  40f5af:	jne    0x40f463
  40f5b5:	mov    rbx,QWORD PTR [rbx+0x18]
  40f5b9:	mov    rax,QWORD PTR [rax+0x8]
  40f5bd:	test   rbx,rbx
  40f5c0:	jne    0x40f4fd
  40f5c6:	jmp    0x40f463
  40f5cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f5d0:	mov    edx,0x2
  40f5d5:	jmp    0x40f3e5
  40f5da:	test   r12b,r12b
  40f5dd:	je     0x40f463
  40f5e3:	jmp    0x40f45f
  40f5e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f5f0:	push   r14
  40f5f2:	push   rdi
  40f5f3:	push   rsi
  40f5f4:	push   rbx
  40f5f5:	sub    rsp,0x38
  40f5f9:	mov    r11,QWORD PTR [rcx+0x328]
  40f600:	mov    rax,QWORD PTR [rcx+0x320]
  40f607:	mov    edi,edx
  40f609:	mov    rbx,rcx
  40f60c:	mov    rsi,QWORD PTR [rcx]
  40f60f:	mov    rdx,r11
  40f612:	sub    rdx,rax
  40f615:	cmp    rdx,0x1f
  40f619:	jle    0x40f6e0
  40f61f:	mov    r10,QWORD PTR [rbx+0x318]
  40f626:	add    rax,0x20
  40f62a:	mov    QWORD PTR [rbx+0x320],rax
  40f631:	cmp    rax,r10
  40f634:	je     0x40f730
  40f63a:	movsxd rdx,DWORD PTR [rbx+0x338]
  40f641:	mov    r14,r11
  40f644:	mov    rcx,rdx
  40f647:	add    rax,rdx
  40f64a:	mov    rdx,QWORD PTR [rbx+0x310]
  40f651:	not    ecx
  40f653:	movsxd rcx,ecx
  40f656:	and    rax,rcx
  40f659:	sub    r14,rdx
  40f65c:	mov    rcx,rax
  40f65f:	mov    QWORD PTR [rbx+0x320],rax
  40f666:	sub    rcx,rdx
  40f669:	cmp    rcx,r14
  40f66c:	jle    0x40f678
  40f66e:	mov    QWORD PTR [rbx+0x320],r11
  40f675:	mov    rax,r11
  40f678:	mov    QWORD PTR [rbx+0x318],rax
  40f67f:	mov    eax,DWORD PTR [rbx+0x30]
  40f682:	test   edi,edi
  40f684:	sete   dl
  40f687:	mov    DWORD PTR [r10+0x8],eax
  40f68b:	mov    rax,QWORD PTR [rsi+0x60]
  40f68f:	mov    QWORD PTR [r10],rax
  40f692:	cmp    BYTE PTR [rbx+0x12],0x0
  40f696:	setne  al
  40f699:	or     eax,edx
  40f69b:	mov    BYTE PTR [r10+0x18],al
  40f69f:	cmp    BYTE PTR [rbx+0x12],0x0
  40f6a3:	mov    DWORD PTR [r10+0x1c],r8d
  40f6a7:	setne  BYTE PTR [r10+0x19]
  40f6ac:	cmp    BYTE PTR [rbx+0x1a0],0x0
  40f6b3:	je     0x40f6bf
  40f6b5:	cmp    QWORD PTR [rbx+0x190],0x0
  40f6bd:	je     0x40f720
  40f6bf:	mov    QWORD PTR [r10+0x10],0x0
  40f6c7:	mov    BYTE PTR [rbx+0x12],dil
  40f6cb:	mov    QWORD PTR [rsi+0x60],r10
  40f6cf:	add    rsp,0x38
  40f6d3:	pop    rbx
  40f6d4:	pop    rsi
  40f6d5:	pop    rdi
  40f6d6:	pop    r14
  40f6d8:	ret    
  40f6d9:	nop    DWORD PTR [rax+0x0]
  40f6e0:	lea    rcx,[rcx+0x308]
  40f6e7:	mov    edx,0x20
  40f6ec:	mov    QWORD PTR [rsp+0x28],r9
  40f6f1:	mov    DWORD PTR [rsp+0x24],r8d
  40f6f6:	call   0x438250
  40f6fb:	mov    rax,QWORD PTR [rbx+0x320]
  40f702:	mov    r11,QWORD PTR [rbx+0x328]
  40f709:	mov    r9,QWORD PTR [rsp+0x28]
  40f70e:	mov    r8d,DWORD PTR [rsp+0x24]
  40f713:	jmp    0x40f61f
  40f718:	nop    DWORD PTR [rax+rax*1+0x0]
  40f720:	mov    QWORD PTR [r10+0x10],r9
  40f724:	jmp    0x40f6c7
  40f726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f730:	or     BYTE PTR [rbx+0x358],0x2
  40f737:	jmp    0x40f63a
  40f73c:	nop    DWORD PTR [rax+0x0]
  40f740:	push   rbx
  40f741:	sub    rsp,0x20
  40f745:	cmp    BYTE PTR [rcx+0x12],0x0
  40f749:	mov    edx,0x1
  40f74e:	mov    rbx,rcx
  40f751:	jne    0x40f75e
  40f753:	call   0x414810
  40f758:	xor    eax,0x1
  40f75b:	movzx  edx,al
  40f75e:	mov    r9,QWORD PTR [rbx+0x198]
  40f765:	mov    r8d,0x4
  40f76b:	mov    rcx,rbx
  40f76e:	add    rsp,0x20
  40f772:	pop    rbx
  40f773:	jmp    0x40f5f0
  40f778:	nop    DWORD PTR [rax+rax*1+0x0]
  40f780:	push   rsi
  40f781:	push   rbx
  40f782:	sub    rsp,0x28
  40f786:	mov    edx,0x1
  40f78b:	mov    rbx,rcx
  40f78e:	call   0x40ecb0
  40f793:	test   rax,rax
  40f796:	mov    rsi,rax
  40f799:	je     0x40f7e3
  40f79b:	cmp    BYTE PTR [rbx+0x41c],0x0
  40f7a2:	mov    rax,QWORD PTR [rbx+0x3e0]
  40f7a9:	sete   BYTE PTR [rbx+0x15]
  40f7ad:	test   rax,rax
  40f7b0:	je     0x40f7b7
  40f7b2:	mov    rcx,rbx
  40f7b5:	call   rax
  40f7b7:	mov    rdx,rsi
  40f7ba:	mov    rcx,rbx
  40f7bd:	call   0x40c8f0
  40f7c2:	test   al,al
  40f7c4:	je     0x40f7dd
  40f7c6:	mov    rax,QWORD PTR [rbx+0x388]
  40f7cd:	test   rax,rax
  40f7d0:	je     0x40f7dd
  40f7d2:	mov    edx,DWORD PTR [rbx+0x30]
  40f7d5:	mov    r8,rsi
  40f7d8:	mov    rcx,rbx
  40f7db:	call   rax
  40f7dd:	and    WORD PTR [rsi+0x18],0xdfff
  40f7e3:	add    rsp,0x28
  40f7e7:	pop    rbx
  40f7e8:	pop    rsi
  40f7e9:	ret    
  40f7ea:	nop    WORD PTR [rax+rax*1+0x0]
  40f7f0:	push   rsi
  40f7f1:	push   rbx
  40f7f2:	sub    rsp,0x28
  40f7f6:	mov    rdx,QWORD PTR [rcx+0x90]
  40f7fd:	lea    rax,[rip+0x36c7c]        # 0x446480
  40f804:	mov    rbx,rcx
  40f807:	cmp    rdx,rax
  40f80a:	je     0x40f871
  40f80c:	test   rdx,rdx
  40f80f:	je     0x40f8a0
  40f815:	movzx  eax,BYTE PTR [rdx+0x13]
  40f819:	shr    al,0x4
  40f81c:	xor    eax,0x1
  40f81f:	and    eax,0x1
  40f822:	cmp    BYTE PTR [rcx+0x12],0x0
  40f826:	lea    rcx,[rip+0x36cb3]        # 0x4464e0
  40f82d:	setne  sil
  40f831:	cmp    rdx,rcx
  40f834:	je     0x40f894
  40f836:	lea    rcx,[rip+0x36d1b]        # 0x446558
  40f83d:	cmp    rdx,rcx
  40f840:	je     0x40f894
  40f842:	mov    BYTE PTR [rbx+0x14],0x0
  40f846:	test   al,al
  40f848:	jne    0x40f880
  40f84a:	xor    edx,edx
  40f84c:	mov    rcx,rbx
  40f84f:	call   0x40dc00
  40f854:	mov    rdx,QWORD PTR [rbx+0x4d0]
  40f85b:	mov    r8,QWORD PTR [rbx+0x4e0]
  40f862:	mov    rcx,rbx
  40f865:	mov    BYTE PTR [rbx+0x12],sil
  40f869:	sub    r8,rdx
  40f86c:	call   0x40db80
  40f871:	add    BYTE PTR [rbx+0x18],0x1
  40f875:	add    rsp,0x28
  40f879:	pop    rbx
  40f87a:	pop    rsi
  40f87b:	ret    
  40f87c:	nop    DWORD PTR [rax+0x0]
  40f880:	add    BYTE PTR [rbx+0x18],0x1
  40f884:	xor    edx,edx
  40f886:	mov    rcx,rbx
  40f889:	call   0x40dc00
  40f88e:	sub    BYTE PTR [rbx+0x18],0x1
  40f892:	jmp    0x40f854
  40f894:	mov    BYTE PTR [rbx+0x14],0x1
  40f898:	mov    BYTE PTR [rbx+0x12],0x0
  40f89c:	jmp    0x40f846
  40f89e:	xchg   ax,ax
  40f8a0:	cmp    BYTE PTR [rcx+0x12],0x0
  40f8a4:	setne  sil
  40f8a8:	xor    eax,eax
  40f8aa:	jmp    0x40f842
  40f8ac:	nop    DWORD PTR [rax+0x0]
  40f8b0:	push   rbp
  40f8b1:	push   rdi
  40f8b2:	push   rsi
  40f8b3:	push   rbx
  40f8b4:	sub    rsp,0x28
  40f8b8:	test   rdx,rdx
  40f8bb:	mov    rbp,rcx
  40f8be:	mov    rbx,rdx
  40f8c1:	mov    rsi,r8
  40f8c4:	jne    0x40f902
  40f8c6:	jmp    0x40f920
  40f8c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f8d0:	mov    rdi,QWORD PTR [rsi]
  40f8d3:	add    rsi,0x8
  40f8d7:	mov    rcx,rdi
  40f8da:	call   0x43f028
  40f8df:	mov    rdx,rdi
  40f8e2:	mov    r8d,eax
  40f8e5:	mov    rcx,rbp
  40f8e8:	call   0x418eb0
  40f8ed:	mov    QWORD PTR [rbx+0x8],rax
  40f8f1:	mov    rcx,QWORD PTR [rsi-0x8]
  40f8f5:	call   0x43f100
  40f8fa:	mov    rbx,QWORD PTR [rbx]
  40f8fd:	test   rbx,rbx
  40f900:	je     0x40f920
  40f902:	cmp    BYTE PTR [rbx+0x10],0x0
  40f906:	je     0x40f8d0
  40f908:	mov    rdx,QWORD PTR [rbx+0x18]
  40f90c:	mov    r8,rsi
  40f90f:	mov    rcx,rbp
  40f912:	call   0x40f8b0
  40f917:	mov    rsi,rax
  40f91a:	jmp    0x40f8d0
  40f91c:	nop    DWORD PTR [rax+0x0]
  40f920:	mov    rax,rsi
  40f923:	add    rsp,0x28
  40f927:	pop    rbx
  40f928:	pop    rsi
  40f929:	pop    rdi
  40f92a:	pop    rbp
  40f92b:	ret    
  40f92c:	nop    DWORD PTR [rax+0x0]
  40f930:	push   rdi
  40f931:	push   rsi
  40f932:	push   rbx
  40f933:	sub    rsp,0x20
  40f937:	test   rcx,rcx
  40f93a:	mov    rbx,rcx
  40f93d:	mov    rdi,rdx
  40f940:	jne    0x40f969
  40f942:	jmp    0x40f983
  40f944:	mov    rcx,QWORD PTR [rbx+0x8]
  40f948:	lea    rdi,[rsi+0x8]
  40f94c:	mov    edx,DWORD PTR [rcx+0x8]
  40f94f:	mov    rcx,QWORD PTR [rcx]
  40f952:	mov    r8,rdx
  40f955:	add    r8d,0x1
  40f959:	call   0x4386a0
  40f95e:	mov    QWORD PTR [rsi],rax
  40f961:	mov    rbx,QWORD PTR [rbx]
  40f964:	test   rbx,rbx
  40f967:	je     0x40f983
  40f969:	cmp    BYTE PTR [rbx+0x10],0x0
  40f96d:	mov    rsi,rdi
  40f970:	je     0x40f944
  40f972:	mov    rcx,QWORD PTR [rbx+0x18]
  40f976:	mov    rdx,rdi
  40f979:	call   0x40f930
  40f97e:	mov    rsi,rax
  40f981:	jmp    0x40f944
  40f983:	mov    rax,rdi
  40f986:	add    rsp,0x20
  40f98a:	pop    rbx
  40f98b:	pop    rsi
  40f98c:	pop    rdi
  40f98d:	ret    
  40f98e:	xchg   ax,ax
  40f990:	push   rbx
  40f991:	sub    rsp,0x20
  40f995:	mov    rax,QWORD PTR [rcx+0x1a8]
  40f99c:	mov    rbx,rcx
  40f99f:	cmp    BYTE PTR [rax-0x14],0x16
  40f9a3:	je     0x40f9eb
  40f9a5:	test   dl,dl
  40f9a7:	jne    0x40f9e0
  40f9a9:	call   0x41c950
  40f9ae:	cmp    BYTE PTR [rax+0x4],0x16
  40f9b2:	je     0x40f9eb
  40f9b4:	mov    rax,QWORD PTR [rbx+0x90]
  40f9bb:	lea    r8,[rip+0x3639e]        # 0x445d60
  40f9c2:	mov    edx,0x2
  40f9c7:	mov    rcx,rbx
  40f9ca:	mov    r9,QWORD PTR [rax+0x8]
  40f9ce:	add    rsp,0x20
  40f9d2:	pop    rbx
  40f9d3:	jmp    0x412660
  40f9d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f9e0:	call   0x40c760
  40f9e5:	cmp    BYTE PTR [rax+0x4],0x16
  40f9e9:	jne    0x40f9b4
  40f9eb:	add    rsp,0x20
  40f9ef:	pop    rbx
  40f9f0:	ret    
  40f9f1:	nop    DWORD PTR [rax+rax*1+0x0]
  40f9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fa00:	push   rbx
  40fa01:	sub    rsp,0x20
  40fa05:	mov    rbx,rcx
  40fa08:	call   0x40c760
  40fa0d:	cmp    BYTE PTR [rax+0x4],0x3d
  40fa11:	jne    0x40fa40
  40fa13:	mov    r9,QWORD PTR [rbx+0x398]
  40fa1a:	test   r9,r9
  40fa1d:	je     0x40fa2c
  40fa1f:	mov    edx,DWORD PTR [rbx+0x30]
  40fa22:	lea    r8,[rax+0x8]
  40fa26:	mov    rcx,rbx
  40fa29:	call   r9
  40fa2c:	xor    edx,edx
  40fa2e:	mov    rcx,rbx
  40fa31:	add    rsp,0x20
  40fa35:	pop    rbx
  40fa36:	jmp    0x40f990
  40fa3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fa40:	mov    rax,QWORD PTR [rbx+0x90]
  40fa47:	lea    r8,[rip+0x36337]        # 0x445d85
  40fa4e:	mov    rcx,rbx
  40fa51:	mov    edx,0x3
  40fa56:	mov    r9,QWORD PTR [rax+0x8]
  40fa5a:	call   0x412660
  40fa5f:	xor    edx,edx
  40fa61:	mov    rcx,rbx
  40fa64:	add    rsp,0x20
  40fa68:	pop    rbx
  40fa69:	jmp    0x40f990
  40fa6e:	xchg   ax,ax
  40fa70:	push   rsi
  40fa71:	push   rbx
  40fa72:	sub    rsp,0x38
  40fa76:	mov    r8d,0x11
  40fa7c:	lea    rdx,[rsp+0x28]
  40fa81:	mov    rsi,rcx
  40fa84:	call   0x40eef0
  40fa89:	test   rax,rax
  40fa8c:	mov    rbx,rax
  40fa8f:	je     0x40fa9c
  40fa91:	movzx  eax,BYTE PTR [rax+0x18]
  40fa95:	and    eax,0x3f
  40fa98:	cmp    al,0x2
  40fa9a:	je     0x40faa3
  40fa9c:	add    rsp,0x38
  40faa0:	pop    rbx
  40faa1:	pop    rsi
  40faa2:	ret    
  40faa3:	mov    rdx,QWORD PTR [rsp+0x28]
  40faa8:	mov    rcx,rbx
  40faab:	test   rdx,rdx
  40faae:	je     0x40faf0
  40fab0:	call   0x40f130
  40fab5:	mov    rdx,QWORD PTR [rax]
  40fab8:	test   rdx,rdx
  40fabb:	je     0x40fac3
  40fabd:	mov    rdx,QWORD PTR [rdx]
  40fac0:	mov    QWORD PTR [rax],rdx
  40fac3:	cmp    QWORD PTR [rbx+0x20],0x0
  40fac8:	je     0x40fae0
  40faca:	xor    edx,edx
  40facc:	mov    rcx,rsi
  40facf:	call   0x40f990
  40fad4:	nop
  40fad5:	add    rsp,0x38
  40fad9:	pop    rbx
  40fada:	pop    rsi
  40fadb:	ret    
  40fadc:	nop    DWORD PTR [rax+0x0]
  40fae0:	and    BYTE PTR [rbx+0x18],0xc0
  40fae4:	jmp    0x40faca
  40fae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40faf0:	call   0x40c7f0
  40faf5:	jmp    0x40fa9c
  40faf7:	nop    WORD PTR [rax+rax*1+0x0]
  40fb00:	push   rbp
  40fb01:	push   rdi
  40fb02:	push   rsi
  40fb03:	push   rbx
  40fb04:	sub    rsp,0x38
  40fb08:	mov    r8d,0x10
  40fb0e:	lea    rdx,[rsp+0x28]
  40fb13:	mov    rdi,rcx
  40fb16:	call   0x40eef0
  40fb1b:	test   rax,rax
  40fb1e:	mov    rbx,rax
  40fb21:	je     0x40fb95
  40fb23:	mov    rsi,QWORD PTR [rsp+0x28]
  40fb28:	mov    QWORD PTR [rsi],0x0
  40fb2f:	movzx  eax,BYTE PTR [rax+0x18]
  40fb33:	and    eax,0x3f
  40fb36:	cmp    al,0x2
  40fb38:	je     0x40fbb0
  40fb3a:	mov    eax,DWORD PTR [rsi+0x8]
  40fb3d:	sub    eax,0x1
  40fb40:	lea    rax,[rax+rax*2]
  40fb44:	lea    rbp,[rax*8+0x28]
  40fb4c:	mov    rax,QWORD PTR [rdi+0x3f8]
  40fb53:	mov    rax,QWORD PTR [rax+0x68]
  40fb57:	test   rax,rax
  40fb5a:	je     0x40fba0
  40fb5c:	mov    rcx,rbp
  40fb5f:	call   rax
  40fb61:	mov    rdx,rsi
  40fb64:	mov    r8,rbp
  40fb67:	mov    rcx,rax
  40fb6a:	mov    QWORD PTR [rsp+0x28],rax
  40fb6f:	call   0x43f0a8
  40fb74:	mov    rsi,QWORD PTR [rsp+0x28]
  40fb79:	movzx  eax,BYTE PTR [rbx+0x18]
  40fb7d:	mov    QWORD PTR [rbx+0x20],rsi
  40fb81:	xor    edx,edx
  40fb83:	mov    rcx,rdi
  40fb86:	and    eax,0xffffffc0
  40fb89:	or     eax,0x2
  40fb8c:	mov    BYTE PTR [rbx+0x18],al
  40fb8f:	call   0x40f990
  40fb94:	nop
  40fb95:	add    rsp,0x38
  40fb99:	pop    rbx
  40fb9a:	pop    rsi
  40fb9b:	pop    rdi
  40fb9c:	pop    rbp
  40fb9d:	ret    
  40fb9e:	xchg   ax,ax
  40fba0:	mov    rax,QWORD PTR [rdi+0x38]
  40fba4:	add    QWORD PTR [rax+0x10],rbp
  40fba8:	jmp    0x40fb79
  40fbaa:	nop    WORD PTR [rax+rax*1+0x0]
  40fbb0:	mov    rdx,rsi
  40fbb3:	mov    rcx,rbx
  40fbb6:	call   0x40f130
  40fbbb:	cmp    QWORD PTR [rax],0x0
  40fbbf:	je     0x40fbe0
  40fbc1:	mov    r9,QWORD PTR [rbx]
  40fbc4:	lea    r8,[rip+0x361d0]        # 0x445d9b
  40fbcb:	xor    edx,edx
  40fbcd:	mov    rcx,rdi
  40fbd0:	add    r9,0x1
  40fbd4:	call   0x412660
  40fbd9:	jmp    0x40fb95
  40fbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fbe0:	mov    rsi,QWORD PTR [rsp+0x28]
  40fbe5:	mov    rax,QWORD PTR [rbx+0x20]
  40fbe9:	mov    QWORD PTR [rsi],rax
  40fbec:	jmp    0x40fb3a
  40fbf1:	nop    DWORD PTR [rax+rax*1+0x0]
  40fbf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc00:	push   r15
  40fc02:	push   r14
  40fc04:	push   r13
  40fc06:	push   r12
  40fc08:	push   rbp
  40fc09:	push   rdi
  40fc0a:	push   rsi
  40fc0b:	push   rbx
  40fc0c:	sub    rsp,0x28
  40fc10:	mov    rsi,rcx
  40fc13:	mov    rbp,rdx
  40fc16:	mov    r12,r8
  40fc19:	mov    rdi,r9
  40fc1c:	nop    DWORD PTR [rax+0x0]
  40fc20:	mov    rcx,rsi
  40fc23:	call   0x40c760
  40fc28:	cmp    BYTE PTR [rax+0x4],0x51
  40fc2c:	mov    rbx,rax
  40fc2f:	je     0x40fc20
  40fc31:	mov    eax,DWORD PTR [rax]
  40fc33:	mov    DWORD PTR [rdi],eax
  40fc35:	movzx  eax,BYTE PTR [rbx+0x4]
  40fc39:	cmp    al,0x3d
  40fc3b:	je     0x40fca2
  40fc3d:	cmp    al,0x43
  40fc3f:	je     0x40fcab
  40fc41:	cmp    al,0x3
  40fc43:	jne    0x40fcf0
  40fc49:	mov    rcx,rsi
  40fc4c:	call   0x40f1b0
  40fc51:	mov    DWORD PTR [rbp+0x0],0x1
  40fc58:	mov    rdi,rax
  40fc5b:	lea    rax,[rip+0x36926]        # 0x446588
  40fc62:	cmp    QWORD PTR [rsi+0x90],rax
  40fc69:	je     0x40fdf0
  40fc6f:	test   r12,r12
  40fc72:	je     0x40fc81
  40fc74:	cmp    BYTE PTR [rsi+0x41b],0x0
  40fc7b:	je     0x40fd30
  40fc81:	mov    edx,0x1
  40fc86:	mov    rcx,rsi
  40fc89:	call   0x40f990
  40fc8e:	mov    rax,rdi
  40fc91:	add    rsp,0x28
  40fc95:	pop    rbx
  40fc96:	pop    rsi
  40fc97:	pop    rdi
  40fc98:	pop    rbp
  40fc99:	pop    r12
  40fc9b:	pop    r13
  40fc9d:	pop    r14
  40fc9f:	pop    r15
  40fca1:	ret    
  40fca2:	mov    rax,QWORD PTR [rbx+0x10]
  40fca6:	cmp    BYTE PTR [rax],0x52
  40fca9:	je     0x40fcf0
  40fcab:	mov    eax,DWORD PTR [rbx+0x8]
  40fcae:	lea    ecx,[rax-0x1]
  40fcb1:	call   0x4385d0
  40fcb6:	mov    rdi,rax
  40fcb9:	mov    eax,DWORD PTR [rbx+0x8]
  40fcbc:	mov    rdx,QWORD PTR [rbx+0x10]
  40fcc0:	mov    rcx,rdi
  40fcc3:	lea    r8d,[rax-0x2]
  40fcc7:	add    rdx,0x1
  40fccb:	call   0x43f0a8
  40fcd0:	mov    eax,DWORD PTR [rbx+0x8]
  40fcd3:	sub    eax,0x2
  40fcd6:	mov    BYTE PTR [rdi+rax*1],0x0
  40fcda:	xor    eax,eax
  40fcdc:	cmp    BYTE PTR [rbx+0x4],0x43
  40fce0:	sete   al
  40fce3:	mov    DWORD PTR [rbp+0x0],eax
  40fce6:	jmp    0x40fc5b
  40fceb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fcf0:	mov    rax,QWORD PTR [rsi+0x90]
  40fcf7:	lea    rdx,[rip+0x3688a]        # 0x446588
  40fcfe:	cmp    rax,rdx
  40fd01:	je     0x40fdfc
  40fd07:	mov    r9,QWORD PTR [rax+0x8]
  40fd0b:	lea    r8,[rip+0x360ae]        # 0x445dc0
  40fd12:	mov    edx,0x3
  40fd17:	mov    rcx,rsi
  40fd1a:	call   0x412660
  40fd1f:	xor    eax,eax
  40fd21:	jmp    0x40fc91
  40fd26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd30:	mov    ecx,0x40
  40fd35:	call   0x4385d0
  40fd3a:	mov    r13,rax
  40fd3d:	mov    rax,QWORD PTR [rsi+0x1a8]
  40fd44:	cmp    BYTE PTR [rax-0x14],0x16
  40fd48:	je     0x40fdf8
  40fd4e:	mov    r14d,0x8
  40fd54:	xor    ebp,ebp
  40fd56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd60:	mov    rcx,rsi
  40fd63:	call   0x41c950
  40fd68:	movzx  edx,BYTE PTR [rax+0x4]
  40fd6c:	mov    rbx,rax
  40fd6f:	cmp    dl,0x16
  40fd72:	je     0x40fdd0
  40fd74:	cmp    dl,0x4d
  40fd77:	je     0x40fda0
  40fd79:	mov    rax,QWORD PTR [rsi+0x90]
  40fd80:	lea    r8,[rip+0x35fd9]        # 0x445d60
  40fd87:	mov    edx,0x2
  40fd8c:	mov    rcx,rsi
  40fd8f:	mov    r9,QWORD PTR [rax+0x8]
  40fd93:	call   0x412660
  40fd98:	jmp    0x40fd60
  40fd9a:	nop    WORD PTR [rax+rax*1+0x0]
  40fda0:	lea    r15,[rbp+0x1]
  40fda4:	cmp    r15,r14
  40fda7:	jae    0x40fdb3
  40fda9:	mov    QWORD PTR [r13+rbp*8+0x0],rbx
  40fdae:	mov    rbp,r15
  40fdb1:	jmp    0x40fd60
  40fdb3:	add    r14,r14
  40fdb6:	mov    rcx,r13
  40fdb9:	lea    rdx,[r14*8+0x0]
  40fdc1:	call   0x438650
  40fdc6:	mov    r13,rax
  40fdc9:	jmp    0x40fda9
  40fdcb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fdd0:	shl    rbp,0x3
  40fdd4:	mov    QWORD PTR [r13+rbp*1+0x0],0x0
  40fddd:	mov    rax,rdi
  40fde0:	mov    QWORD PTR [r12],r13
  40fde4:	jmp    0x40fc91
  40fde9:	nop    DWORD PTR [rax+0x0]
  40fdf0:	mov    rax,rdi
  40fdf3:	jmp    0x40fc91
  40fdf8:	xor    ebp,ebp
  40fdfa:	jmp    0x40fdd4
  40fdfc:	lea    r9,[rip+0x35fa9]        # 0x445dac
  40fe03:	jmp    0x40fd0b
  40fe08:	nop    DWORD PTR [rax+rax*1+0x0]
  40fe10:	push   rsi
  40fe11:	push   rbx
  40fe12:	sub    rsp,0x38
  40fe16:	xor    r8d,r8d
  40fe19:	lea    rdx,[rsp+0x28]
  40fe1e:	lea    r9,[rsp+0x2c]
  40fe23:	mov    rbx,rcx
  40fe26:	call   0x40fc00
  40fe2b:	test   rax,rax
  40fe2e:	mov    rsi,rax
  40fe31:	je     0x40fe91
  40fe33:	mov    r8d,DWORD PTR [rsp+0x28]
  40fe38:	mov    rdx,rax
  40fe3b:	mov    rcx,rbx
  40fe3e:	call   0x418750
  40fe43:	test   eax,eax
  40fe45:	js     0x40fea0
  40fe47:	je     0x40fe88
  40fe49:	lea    r8,[rip+0x35fb0]        # 0x445e00
  40fe50:	xor    edx,edx
  40fe52:	mov    r9,rsi
  40fe55:	mov    rcx,rbx
  40fe58:	call   0x412660
  40fe5d:	mov    rcx,rbx
  40fe60:	call   0x40c760
  40fe65:	cmp    BYTE PTR [rax+0x4],0x16
  40fe69:	je     0x40fe88
  40fe6b:	mov    edx,0x1
  40fe70:	mov    rcx,rbx
  40fe73:	call   0x40a7d0
  40fe78:	xor    r9d,r9d
  40fe7b:	xor    r8d,r8d
  40fe7e:	xor    edx,edx
  40fe80:	mov    rcx,rbx
  40fe83:	call   0x40f280
  40fe88:	mov    rcx,rsi
  40fe8b:	call   0x43f100
  40fe90:	nop
  40fe91:	add    rsp,0x38
  40fe95:	pop    rbx
  40fe96:	pop    rsi
  40fe97:	ret    
  40fe98:	nop    DWORD PTR [rax+rax*1+0x0]
  40fea0:	lea    r8,[rip+0x35f3e]        # 0x445de5
  40fea7:	mov    r9,rsi
  40feaa:	xor    edx,edx
  40feac:	mov    rcx,rbx
  40feaf:	call   0x412660
  40feb4:	jmp    0x40fe88
  40feb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fec0:	push   rsi
  40fec1:	push   rbx
  40fec2:	sub    rsp,0x28
  40fec6:	mov    edx,0x1
  40fecb:	mov    rbx,rcx
  40fece:	call   0x40ecb0
  40fed3:	test   rax,rax
  40fed6:	mov    rsi,rax
  40fed9:	je     0x40ff0e
  40fedb:	mov    rax,QWORD PTR [rbx+0x3e0]
  40fee2:	test   rax,rax
  40fee5:	je     0x40feec
  40fee7:	mov    rcx,rbx
  40feea:	call   rax
  40feec:	mov    rax,QWORD PTR [rbx+0x390]
  40fef3:	test   rax,rax
  40fef6:	je     0x40ff03
  40fef8:	mov    edx,DWORD PTR [rbx+0x30]
  40fefb:	mov    r8,rsi
  40fefe:	mov    rcx,rbx
  40ff01:	call   rax
  40ff03:	movzx  eax,BYTE PTR [rsi+0x18]
  40ff07:	and    eax,0x3f
  40ff0a:	cmp    al,0x1
  40ff0c:	je     0x40ff20
  40ff0e:	xor    edx,edx
  40ff10:	mov    rcx,rbx
  40ff13:	add    rsp,0x28
  40ff17:	pop    rbx
  40ff18:	pop    rsi
  40ff19:	jmp    0x40f990
  40ff1e:	xchg   ax,ax
  40ff20:	test   BYTE PTR [rsi+0x19],0x4
  40ff24:	jne    0x40ff50
  40ff26:	cmp    BYTE PTR [rbx+0x434],0x0
  40ff2d:	jne    0x40ff70
  40ff2f:	mov    rcx,rsi
  40ff32:	call   0x40c7f0
  40ff37:	xor    edx,edx
  40ff39:	mov    rcx,rbx
  40ff3c:	add    rsp,0x28
  40ff40:	pop    rbx
  40ff41:	pop    rsi
  40ff42:	jmp    0x40f990
  40ff47:	nop    WORD PTR [rax+rax*1+0x0]
  40ff50:	mov    r9,QWORD PTR [rsi]
  40ff53:	lea    r8,[rip+0x35ec4]        # 0x445e1e
  40ff5a:	xor    edx,edx
  40ff5c:	mov    rcx,rbx
  40ff5f:	call   0x412660
  40ff64:	jmp    0x40ff26
  40ff66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ff70:	xor    r8d,r8d
  40ff73:	mov    rdx,rsi
  40ff76:	mov    rcx,rbx
  40ff79:	call   0x409ec0
  40ff7e:	jmp    0x40ff2f
  40ff80:	push   rdi
  40ff81:	push   rsi
  40ff82:	push   rbx
  40ff83:	sub    rsp,0x20
  40ff87:	cmp    BYTE PTR [rcx+0x12],0x0
  40ff8b:	mov    rbx,rcx
  40ff8e:	je     0x40ffb1
  40ff90:	xor    esi,esi
  40ff92:	mov    edi,0x1
  40ff97:	mov    r9,rsi
  40ff9a:	mov    r8d,0x6
  40ffa0:	mov    edx,edi
  40ffa2:	mov    rcx,rbx
  40ffa5:	add    rsp,0x20
  40ffa9:	pop    rbx
  40ffaa:	pop    rsi
  40ffab:	pop    rdi
  40ffac:	jmp    0x40f5f0
  40ffb1:	xor    edx,edx
  40ffb3:	call   0x40ecb0
  40ffb8:	test   rax,rax
  40ffbb:	mov    rsi,rax
  40ffbe:	je     0x40ff90
  40ffc0:	movzx  eax,BYTE PTR [rax+0x18]
  40ffc4:	and    eax,0x3f
  40ffc7:	cmp    al,0x1
  40ffc9:	je     0x410033
  40ffcb:	movzx  eax,WORD PTR [rsi+0x18]
  40ffcf:	xor    edi,edi
  40ffd1:	shr    ax,0x6
  40ffd5:	test   al,0x80
  40ffd7:	jne    0x41000d
  40ffd9:	movzx  ecx,WORD PTR [rsi+0x18]
  40ffdd:	mov    edx,eax
  40ffdf:	or     dl,0x80
  40ffe2:	shl    edx,0x6
  40ffe5:	and    ecx,0x3f
  40ffe8:	or     edx,ecx
  40ffea:	mov    WORD PTR [rsi+0x18],dx
  40ffee:	and    edx,0x3f
  40fff1:	cmp    dl,0x1
  40fff4:	je     0x410060
  40fff6:	mov    rax,QWORD PTR [rbx+0x3d8]
  40fffd:	test   rax,rax
  410000:	je     0x41000d
  410002:	mov    edx,DWORD PTR [rbx+0x30]
  410005:	mov    r8,rsi
  410008:	mov    rcx,rbx
  41000b:	call   rax
  41000d:	mov    rax,QWORD PTR [rbx+0x3e8]
  410014:	test   rax,rax
  410017:	je     0x410024
  410019:	mov    edx,DWORD PTR [rbx+0x30]
  41001c:	mov    r8,rsi
  41001f:	mov    rcx,rbx
  410022:	call   rax
  410024:	xor    edx,edx
  410026:	mov    rcx,rbx
  410029:	call   0x40f990
  41002e:	jmp    0x40ff97
  410033:	movzx  edi,WORD PTR [rsi+0x18]
  410037:	mov    eax,edi
  410039:	shr    di,0xe
  41003d:	xor    edi,0x1
  410040:	shr    ax,0x6
  410044:	and    edi,0x1
  410047:	test   al,0x4
  410049:	jne    0x40ffd5
  41004b:	mov    rax,QWORD PTR [rsi+0x20]
  41004f:	or     BYTE PTR [rax+0x1c],0x8
  410053:	movzx  eax,WORD PTR [rsi+0x18]
  410057:	shr    ax,0x6
  41005b:	jmp    0x40ffd5
  410060:	test   al,0x4
  410062:	je     0x410078
  410064:	mov    rax,QWORD PTR [rbx+0x3f0]
  41006b:	test   rax,rax
  41006e:	je     0x410078
  410070:	mov    rdx,rsi
  410073:	mov    rcx,rbx
  410076:	call   rax
  410078:	mov    rax,QWORD PTR [rbx+0x3d0]
  41007f:	test   rax,rax
  410082:	jne    0x410002
  410088:	jmp    0x41000d
  41008a:	nop    WORD PTR [rax+rax*1+0x0]
  410090:	push   rdi
  410091:	push   rsi
  410092:	push   rbx
  410093:	sub    rsp,0x20
  410097:	cmp    BYTE PTR [rcx+0x12],0x0
  41009b:	mov    rbx,rcx
  41009e:	je     0x4100c0
  4100a0:	mov    esi,0x1
  4100a5:	xor    r9d,r9d
  4100a8:	mov    r8d,0x3
  4100ae:	mov    edx,esi
  4100b0:	mov    rcx,rbx
  4100b3:	add    rsp,0x20
  4100b7:	pop    rbx
  4100b8:	pop    rsi
  4100b9:	pop    rdi
  4100ba:	jmp    0x40f5f0
  4100bf:	nop
  4100c0:	xor    edx,edx
  4100c2:	call   0x40ecb0
  4100c7:	test   rax,rax
  4100ca:	mov    rdi,rax
  4100cd:	je     0x4100a0
  4100cf:	movzx  eax,BYTE PTR [rax+0x18]
  4100d3:	and    eax,0x3f
  4100d6:	cmp    al,0x1
  4100d8:	je     0x410145
  4100da:	movzx  eax,WORD PTR [rdi+0x18]
  4100de:	mov    esi,0x1
  4100e3:	shr    ax,0x6
  4100e7:	test   al,0x80
  4100e9:	jne    0x41011f
  4100eb:	movzx  ecx,WORD PTR [rdi+0x18]
  4100ef:	mov    edx,eax
  4100f1:	or     dl,0x80
  4100f4:	shl    edx,0x6
  4100f7:	and    ecx,0x3f
  4100fa:	or     edx,ecx
  4100fc:	mov    WORD PTR [rdi+0x18],dx
  410100:	and    edx,0x3f
  410103:	cmp    dl,0x1
  410106:	je     0x410170
  410108:	mov    rax,QWORD PTR [rbx+0x3d8]
  41010f:	test   rax,rax
  410112:	je     0x41011f
  410114:	mov    edx,DWORD PTR [rbx+0x30]
  410117:	mov    r8,rdi
  41011a:	mov    rcx,rbx
  41011d:	call   rax
  41011f:	mov    rax,QWORD PTR [rbx+0x3e8]
  410126:	test   rax,rax
  410129:	je     0x410136
  41012b:	mov    edx,DWORD PTR [rbx+0x30]
  41012e:	mov    r8,rdi
  410131:	mov    rcx,rbx
  410134:	call   rax
  410136:	xor    edx,edx
  410138:	mov    rcx,rbx
  41013b:	call   0x40f990
  410140:	jmp    0x4100a5
  410145:	movzx  esi,WORD PTR [rdi+0x18]
  410149:	mov    eax,esi
  41014b:	shr    si,0xe
  41014f:	shr    ax,0x6
  410153:	and    esi,0x1
  410156:	test   al,0x4
  410158:	jne    0x4100e7
  41015a:	mov    rax,QWORD PTR [rdi+0x20]
  41015e:	or     BYTE PTR [rax+0x1c],0x8
  410162:	movzx  eax,WORD PTR [rdi+0x18]
  410166:	shr    ax,0x6
  41016a:	jmp    0x4100e7
  41016f:	nop
  410170:	test   al,0x4
  410172:	je     0x410188
  410174:	mov    rax,QWORD PTR [rbx+0x3f0]
  41017b:	test   rax,rax
  41017e:	je     0x410188
  410180:	mov    rdx,rdi
  410183:	mov    rcx,rbx
  410186:	call   rax
  410188:	mov    rax,QWORD PTR [rbx+0x3d0]
  41018f:	test   rax,rax
  410192:	jne    0x410114
  410194:	jmp    0x41011f
  410196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101a0:	push   rbx
  4101a1:	sub    rsp,0x20
  4101a5:	mov    rax,QWORD PTR [rcx+0x28]
  4101a9:	mov    rbx,rcx
  4101ac:	cmp    DWORD PTR [rax+0x30],0x1
  4101b0:	je     0x4101d0
  4101b2:	xor    edx,edx
  4101b4:	mov    rcx,rbx
  4101b7:	call   0x40f990
  4101bc:	mov    rax,QWORD PTR [rbx]
  4101bf:	mov    rcx,rbx
  4101c2:	mov    rdx,QWORD PTR [rax+0x50]
  4101c6:	add    rsp,0x20
  4101ca:	pop    rbx
  4101cb:	jmp    0x418240
  4101d0:	lea    r8,[rip+0x35c57]        # 0x445e2e
  4101d7:	xor    edx,edx
  4101d9:	call   0x412660
  4101de:	jmp    0x4101b2
  4101e0:	push   rsi
  4101e1:	push   rbx
  4101e2:	sub    rsp,0x38
  4101e6:	mov    rbx,rcx
  4101e9:	nop    DWORD PTR [rax+0x0]
  4101f0:	mov    rcx,rbx
  4101f3:	call   0x40c760
  4101f8:	movzx  edx,BYTE PTR [rax+0x4]
  4101fc:	cmp    dl,0x51
  4101ff:	je     0x4101f0
  410201:	cmp    dl,0x16
  410204:	je     0x410270
  410206:	cmp    dl,0x14
  410209:	jne    0x410260
  41020b:	nop    DWORD PTR [rax+rax*1+0x0]
  410210:	mov    rcx,rbx
  410213:	call   0x40c760
  410218:	movzx  edx,BYTE PTR [rax+0x4]
  41021c:	mov    rsi,rax
  41021f:	cmp    dl,0x51
  410222:	je     0x410210
  410224:	cmp    dl,0x16
  410227:	je     0x410290
  410229:	sub    edx,0x3d
  41022c:	cmp    dl,0x4
  41022f:	ja     0x410260
  410231:	mov    rcx,rbx
  410234:	call   0x40c760
  410239:	movzx  edx,BYTE PTR [rax+0x4]
  41023d:	cmp    dl,0x51
  410240:	je     0x410231
  410242:	cmp    dl,0x16
  410245:	je     0x4102a3
  410247:	cmp    dl,0x15
  41024a:	jne    0x410260
  41024c:	mov    rax,rsi
  41024f:	add    rsp,0x38
  410253:	pop    rbx
  410254:	pop    rsi
  410255:	ret    
  410256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410260:	xor    eax,eax
  410262:	add    rsp,0x38
  410266:	pop    rbx
  410267:	pop    rsi
  410268:	ret    
  410269:	nop    DWORD PTR [rax+0x0]
  410270:	mov    edx,0x1
  410275:	mov    rcx,rbx
  410278:	mov    QWORD PTR [rsp+0x28],rax
  41027d:	call   0x40a7d0
  410282:	mov    rax,QWORD PTR [rsp+0x28]
  410287:	movzx  edx,BYTE PTR [rax+0x4]
  41028b:	jmp    0x410206
  410290:	mov    edx,0x1
  410295:	mov    rcx,rbx
  410298:	call   0x40a7d0
  41029d:	movzx  edx,BYTE PTR [rsi+0x4]
  4102a1:	jmp    0x410229
  4102a3:	mov    edx,0x1
  4102a8:	mov    rcx,rbx
  4102ab:	mov    QWORD PTR [rsp+0x28],rax
  4102b0:	call   0x40a7d0
  4102b5:	mov    rax,QWORD PTR [rsp+0x28]
  4102ba:	movzx  edx,BYTE PTR [rax+0x4]
  4102be:	jmp    0x410247
  4102c0:	push   rbx
  4102c1:	sub    rsp,0x20
  4102c5:	mov    rax,QWORD PTR [rcx+0x88]
  4102cc:	mov    rbx,rcx
  4102cf:	cmp    QWORD PTR [rax+0x8],0x0
  4102d4:	je     0x4102f6
  4102d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4102e0:	mov    rcx,rbx
  4102e3:	call   0x40a650
  4102e8:	mov    rax,QWORD PTR [rbx+0x88]
  4102ef:	cmp    QWORD PTR [rax+0x8],0x0
  4102f4:	jne    0x4102e0
  4102f6:	mov    rax,QWORD PTR [rbx+0x1a8]
  4102fd:	cmp    BYTE PTR [rax-0x14],0x16
  410301:	je     0x410311
  410303:	mov    rcx,rbx
  410306:	call   0x41c950
  41030b:	cmp    BYTE PTR [rax+0x4],0x16
  41030f:	jne    0x410303
  410311:	add    rsp,0x20
  410315:	pop    rbx
  410316:	ret    
  410317:	nop    WORD PTR [rax+rax*1+0x0]
  410320:	push   rdi
  410321:	push   rsi
  410322:	push   rbx
  410323:	sub    rsp,0x40
  410327:	cmp    BYTE PTR [rcx+0x41b],0x0
  41032e:	mov    edi,edx
  410330:	lea    r9,[rsp+0x34]
  410335:	lea    rdx,[rsp+0x30]
  41033a:	lea    r8,[rsp+0x38]
  41033f:	mov    rbx,rcx
  410342:	mov    QWORD PTR [rsp+0x38],0x0
  41034b:	sete   BYTE PTR [rcx+0x15]
  41034f:	call   0x40fc00
  410354:	test   rax,rax
  410357:	mov    rsi,rax
  41035a:	je     0x4103c9
  41035c:	cmp    BYTE PTR [rax],0x0
  41035f:	je     0x410400
  410365:	mov    rax,QWORD PTR [rbx+0x28]
  410369:	cmp    DWORD PTR [rax+0x30],0xc7
  410370:	ja     0x4103e1
  410372:	mov    rcx,rbx
  410375:	call   0x4102c0
  41037a:	mov    rax,QWORD PTR [rbx+0x380]
  410381:	test   rax,rax
  410384:	je     0x4103ae
  410386:	mov    rdx,QWORD PTR [rbx+0x90]
  41038d:	mov    rcx,QWORD PTR [rsp+0x38]
  410392:	mov    r9,rsi
  410395:	mov    r8,QWORD PTR [rdx+0x8]
  410399:	mov    QWORD PTR [rsp+0x28],rcx
  41039e:	mov    ecx,DWORD PTR [rsp+0x30]
  4103a2:	mov    edx,DWORD PTR [rbx+0x30]
  4103a5:	mov    DWORD PTR [rsp+0x20],ecx
  4103a9:	mov    rcx,rbx
  4103ac:	call   rax
  4103ae:	mov    r8d,DWORD PTR [rsp+0x30]
  4103b3:	mov    r9d,edi
  4103b6:	mov    rdx,rsi
  4103b9:	mov    rcx,rbx
  4103bc:	call   0x418250
  4103c1:	mov    rcx,rsi
  4103c4:	call   0x43f100
  4103c9:	mov    rcx,QWORD PTR [rsp+0x38]
  4103ce:	test   rcx,rcx
  4103d1:	je     0x4103d9
  4103d3:	call   0x43f100
  4103d8:	nop
  4103d9:	add    rsp,0x40
  4103dd:	pop    rbx
  4103de:	pop    rsi
  4103df:	pop    rdi
  4103e0:	ret    
  4103e1:	lea    r8,[rip+0x35a76]        # 0x445e5e
  4103e8:	mov    edx,0x3
  4103ed:	mov    rcx,rbx
  4103f0:	call   0x412660
  4103f5:	jmp    0x4103c1
  4103f7:	nop    WORD PTR [rax+rax*1+0x0]
  410400:	mov    rax,QWORD PTR [rbx+0x90]
  410407:	mov    r8d,DWORD PTR [rsp+0x34]
  41040c:	xor    r9d,r9d
  41040f:	mov    edx,0x3
  410414:	mov    rcx,rbx
  410417:	mov    rax,QWORD PTR [rax+0x8]
  41041b:	mov    QWORD PTR [rsp+0x28],rax
  410420:	lea    rax,[rip+0x35a21]        # 0x445e48
  410427:	mov    QWORD PTR [rsp+0x20],rax
  41042c:	call   0x412740
  410431:	jmp    0x4103c1
  410433:	nop    DWORD PTR [rax]
  410436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410440:	mov    edx,0x2
  410445:	jmp    0x410320
  41044a:	nop    WORD PTR [rax+rax*1+0x0]
  410450:	push   rbx
  410451:	sub    rsp,0x20
  410455:	mov    rax,QWORD PTR [rcx+0x28]
  410459:	mov    edx,0x1
  41045e:	mov    rbx,rcx
  410461:	cmp    DWORD PTR [rax+0x30],0x1
  410465:	je     0x410474
  410467:	mov    rcx,rbx
  41046a:	add    rsp,0x20
  41046e:	pop    rbx
  41046f:	jmp    0x410320
  410474:	lea    r8,[rip+0x35a05]        # 0x445e80
  41047b:	xor    dl,dl
  41047d:	call   0x412660
  410482:	xor    edx,edx
  410484:	mov    rcx,rbx
  410487:	add    rsp,0x20
  41048b:	pop    rbx
  41048c:	jmp    0x410320
  410491:	nop    DWORD PTR [rax+rax*1+0x0]
  410496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4104a0:	xor    edx,edx
  4104a2:	jmp    0x410320
  4104a7:	nop    WORD PTR [rax+rax*1+0x0]
  4104b0:	push   rbx
  4104b1:	sub    rsp,0x20
  4104b5:	cmp    BYTE PTR [rcx+0x43d],0x0
  4104bc:	mov    rbx,rcx
  4104bf:	je     0x410510
  4104c1:	cmp    BYTE PTR [rcx+0x20],0x0
  4104c5:	jne    0x4104cb
  4104c7:	sub    BYTE PTR [rcx+0x18],0x1
  4104cb:	lea    rax,[rip+0x35fae]        # 0x446480
  4104d2:	cmp    QWORD PTR [rbx+0x90],rax
  4104d9:	je     0x4104e3
  4104db:	mov    rcx,rbx
  4104de:	call   0x40dbc0
  4104e3:	cmp    BYTE PTR [rbx+0x41b],0x0
  4104ea:	mov    BYTE PTR [rbx+0x10],0x0
  4104ee:	mov    BYTE PTR [rbx+0x14],0x0
  4104f2:	mov    BYTE PTR [rbx+0x13],0x0
  4104f6:	mov    QWORD PTR [rbx+0x90],0x0
  410501:	sete   BYTE PTR [rbx+0x15]
  410505:	add    rsp,0x20
  410509:	pop    rbx
  41050a:	ret    
  41050b:	nop    DWORD PTR [rax+rax*1+0x0]
  410510:	test   edx,edx
  410512:	je     0x4104e3
  410514:	cmp    BYTE PTR [rcx+0x20],0x0
  410518:	jne    0x4104e3
  41051a:	call   0x4102c0
  41051f:	mov    eax,DWORD PTR [rbx+0x1dc]
  410525:	test   eax,eax
  410527:	jne    0x4104e3
  410529:	lea    rax,[rbx+0x1b0]
  410530:	mov    QWORD PTR [rbx+0x1d0],rax
  410537:	mov    rax,QWORD PTR [rbx+0x1c0]
  41053e:	mov    QWORD PTR [rbx+0x1a8],rax
  410545:	jmp    0x4104e3
  410547:	nop    WORD PTR [rax+rax*1+0x0]
  410550:	push   rbp
  410551:	push   r13
  410553:	push   r12
  410555:	push   rdi
  410556:	push   rsi
  410557:	push   rbx
  410558:	sub    rsp,0x38
  41055c:	lea    rbp,[rsp+0x80]
  410564:	mov    rbx,rcx
  410567:	call   0x4101e0
  41056c:	test   rax,rax
  41056f:	mov    r8,rax
  410572:	je     0x410760
  410578:	mov    ecx,DWORD PTR [rax+0x8]
  41057b:	lea    edx,[rcx+0x2]
  41057e:	add    rdx,0x1e
  410582:	shr    rdx,0x4
  410586:	mov    rax,rdx
  410589:	shl    rax,0x4
  41058d:	call   0x439cf0
  410592:	mov    rdx,QWORD PTR [r8+0x10]
  410596:	sub    rsp,rax
  410599:	xor    eax,eax
  41059b:	lea    rdi,[rsp+0x30]
  4105a0:	cmp    BYTE PTR [rdx],0x4c
  4105a3:	lea    r10,[rdx+rcx*1-0x1]
  4105a8:	mov    r8,rdi
  4105ab:	sete   al
  4105ae:	lea    rax,[rdx+rax*1+0x1]
  4105b3:	cmp    rax,r10
  4105b6:	jb     0x4105d1
  4105b8:	jmp    0x4105f2
  4105ba:	nop    WORD PTR [rax+rax*1+0x0]
  4105c0:	add    rax,0x1
  4105c4:	add    r8,0x1
  4105c8:	mov    BYTE PTR [r8-0x1],r9b
  4105cc:	cmp    r10,rax
  4105cf:	jbe    0x4105f2
  4105d1:	movzx  r9d,BYTE PTR [rax]
  4105d5:	cmp    r9b,0x5c
  4105d9:	jne    0x4105c0
  4105db:	movzx  ecx,BYTE PTR [rax+0x1]
  4105df:	cmp    cl,0x22
  4105e2:	je     0x4105e9
  4105e4:	cmp    cl,0x5c
  4105e7:	jne    0x4105c0
  4105e9:	add    rax,0x1
  4105ed:	mov    r9d,ecx
  4105f0:	jmp    0x4105c0
  4105f2:	mov    BYTE PTR [r8],0x0
  4105f6:	xor    edx,edx
  4105f8:	mov    rcx,rbx
  4105fb:	call   0x40f990
  410600:	mov    rcx,rbx
  410603:	call   0x4102c0
  410608:	mov    ecx,0x20
  41060d:	call   0x4385d0
  410612:	mov    rcx,rdi
  410615:	mov    rsi,rax
  410618:	mov    QWORD PTR [rax],0x0
  41061f:	mov    QWORD PTR [rax+0x8],0x0
  410627:	mov    QWORD PTR [rax+0x10],0x0
  41062f:	mov    QWORD PTR [rax+0x18],0x0
  410637:	mov    eax,DWORD PTR [rcx]
  410639:	add    rcx,0x4
  41063d:	lea    r8d,[rax-0x1010101]
  410644:	not    eax
  410646:	and    r8d,eax
  410649:	and    r8d,0x80808080
  410650:	je     0x410637
  410652:	mov    eax,r8d
  410655:	shr    eax,0x10
  410658:	test   r8d,0x8080
  41065f:	cmove  r8d,eax
  410663:	lea    rax,[rcx+0x2]
  410667:	cmove  rcx,rax
  41066b:	add    r8b,r8b
  41066e:	sbb    rcx,0x3
  410672:	sub    rcx,rdi
  410675:	add    rcx,0x1
  410679:	call   0x4385d0
  41067e:	mov    rdx,rdi
  410681:	mov    rcx,rax
  410684:	mov    QWORD PTR [rsi+0x8],rax
  410688:	call   0x43f040
  41068d:	mov    r8,rax
  410690:	mov    rax,QWORD PTR [rbx+0x528]
  410697:	mov    rcx,rbx
  41069a:	mov    rdx,r8
  41069d:	mov    QWORD PTR [rsi],rax
  4106a0:	call   0x419d80
  4106a5:	test   BYTE PTR [rax+0x18],0x3f
  4106a9:	mov    r13,rax
  4106ac:	jne    0x4106d0
  4106ae:	or     BYTE PTR [rsi+0x1c],0x4
  4106b2:	mov    QWORD PTR [rbx+0x528],rsi
  4106b9:	lea    rsp,[rbp-0x48]
  4106bd:	pop    rbx
  4106be:	pop    rsi
  4106bf:	pop    rdi
  4106c0:	pop    r12
  4106c2:	pop    r13
  4106c4:	pop    rbp
  4106c5:	ret    
  4106c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106d0:	mov    rdx,rax
  4106d3:	mov    rcx,rbx
  4106d6:	call   0x40d210
  4106db:	mov    rcx,rax
  4106de:	mov    rdi,rax
  4106e1:	call   0x43f028
  4106e6:	lea    rcx,[rax+0x2]
  4106ea:	mov    r12,rax
  4106ed:	call   0x4385d0
  4106f2:	mov    BYTE PTR [rax+r12*1],0xa
  4106f7:	mov    BYTE PTR [rax+r12*1+0x1],0x0
  4106fd:	mov    rcx,rax
  410700:	mov    QWORD PTR [rsi+0x10],rax
  410704:	mov    rax,QWORD PTR [r13+0x20]
  410708:	mov    r8,r12
  41070b:	mov    rdx,rdi
  41070e:	mov    eax,DWORD PTR [rax+0x10]
  410711:	mov    DWORD PTR [rsi+0x18],eax
  410714:	mov    rax,QWORD PTR [r13+0x20]
  410718:	movzx  r9d,BYTE PTR [rax+0x1c]
  41071d:	movzx  eax,BYTE PTR [rsi+0x1c]
  410721:	shr    r9b,0x2
  410725:	and    eax,0xfffffffe
  410728:	and    r9d,0x1
  41072c:	or     r9d,eax
  41072f:	mov    BYTE PTR [rsi+0x1c],r9b
  410733:	mov    rax,QWORD PTR [r13+0x20]
  410737:	and    r9d,0xfffffffd
  41073b:	movzx  r10d,BYTE PTR [rax+0x1c]
  410740:	shr    r10b,0x2
  410744:	and    r10d,0x2
  410748:	or     r9d,r10d
  41074b:	mov    BYTE PTR [rsi+0x1c],r9b
  41074f:	call   0x43f0a8
  410754:	jmp    0x4106b2
  410759:	nop    DWORD PTR [rax+0x0]
  410760:	mov    rax,QWORD PTR [rbx+0x1a8]
  410767:	xor    r9d,r9d
  41076a:	mov    rcx,rbx
  41076d:	mov    edx,0x3
  410772:	mov    r8d,DWORD PTR [rax-0x18]
  410776:	lea    rax,[rip+0x3572b]        # 0x445ea8
  41077d:	mov    QWORD PTR [rsp+0x20],rax
  410782:	call   0x412740
  410787:	xor    edx,edx
  410789:	mov    rcx,rbx
  41078c:	call   0x40f990
  410791:	mov    rcx,rbx
  410794:	call   0x4102c0
  410799:	nop
  41079a:	lea    rsp,[rbp-0x48]
  41079e:	pop    rbx
  41079f:	pop    rsi
  4107a0:	pop    rdi
  4107a1:	pop    r12
  4107a3:	pop    r13
  4107a5:	pop    rbp
  4107a6:	ret    
  4107a7:	nop    WORD PTR [rax+rax*1+0x0]
  4107b0:	push   rsi
  4107b1:	push   rbx
  4107b2:	sub    rsp,0x38
  4107b6:	mov    rax,QWORD PTR [rcx]
  4107b9:	mov    rbx,QWORD PTR [rax+0x60]
  4107bd:	test   rbx,rbx
  4107c0:	je     0x410843
  4107c6:	cmp    DWORD PTR [rbx+0x1c],0x5
  4107ca:	mov    rsi,rcx
  4107cd:	je     0x410810
  4107cf:	movzx  eax,BYTE PTR [rbx+0x18]
  4107d3:	mov    DWORD PTR [rbx+0x1c],0x5
  4107da:	mov    BYTE PTR [rsi+0x12],al
  4107dd:	cmp    BYTE PTR [rbx+0x19],0x0
  4107e1:	mov    BYTE PTR [rbx+0x18],0x1
  4107e5:	mov    QWORD PTR [rbx+0x10],0x0
  4107ed:	jne    0x4107f8
  4107ef:	cmp    BYTE PTR [rsi+0x42b],0x0
  4107f6:	jne    0x410800
  4107f8:	add    rsp,0x38
  4107fc:	pop    rbx
  4107fd:	pop    rsi
  4107fe:	ret    
  4107ff:	nop
  410800:	xor    edx,edx
  410802:	mov    rcx,rsi
  410805:	add    rsp,0x38
  410809:	pop    rbx
  41080a:	pop    rsi
  41080b:	jmp    0x40f990
  410810:	lea    r8,[rip+0x356c8]        # 0x445edf
  410817:	mov    edx,0x3
  41081c:	call   0x412660
  410821:	mov    r8d,DWORD PTR [rbx+0x8]
  410825:	lea    rax,[rip+0x356c5]        # 0x445ef1
  41082c:	xor    r9d,r9d
  41082f:	mov    edx,0x3
  410834:	mov    rcx,rsi
  410837:	mov    QWORD PTR [rsp+0x20],rax
  41083c:	call   0x412740
  410841:	jmp    0x4107cf
  410843:	lea    r8,[rip+0x35683]        # 0x445ecd
  41084a:	mov    edx,0x3
  41084f:	add    rsp,0x38
  410853:	pop    rbx
  410854:	pop    rsi
  410855:	jmp    0x412660
  41085a:	nop    WORD PTR [rax+rax*1+0x0]
  410860:	push   rsi
  410861:	push   rbx
  410862:	sub    rsp,0x48
  410866:	mov    rbx,rcx
  410869:	mov    esi,edx
  41086b:	call   0x41c950
  410870:	cmp    BYTE PTR [rax+0x4],0x3d
  410874:	je     0x4108b0
  410876:	lea    rax,[rip+0x35695]        # 0x445f12
  41087d:	lea    r9,[rip+0x35688]        # 0x445f0c
  410884:	test   sil,sil
  410887:	lea    r8,[rip+0x35692]        # 0x445f20
  41088e:	mov    edx,0x3
  410893:	mov    rcx,rbx
  410896:	cmove  r9,rax
  41089a:	call   0x412660
  41089f:	nop
  4108a0:	add    rsp,0x48
  4108a4:	pop    rbx
  4108a5:	pop    rsi
  4108a6:	ret    
  4108a7:	nop    WORD PTR [rax+rax*1+0x0]
  4108b0:	lea    rdx,[rax+0x8]
  4108b4:	lea    r9,[rsp+0x30]
  4108b9:	mov    DWORD PTR [rsp+0x20],0x3d
  4108c1:	mov    r8d,0x1
  4108c7:	mov    rcx,rbx
  4108ca:	call   0x423650
  4108cf:	test   al,al
  4108d1:	je     0x410876
  4108d3:	mov    eax,DWORD PTR [rsp+0x30]
  4108d7:	test   eax,eax
  4108d9:	je     0x410876
  4108db:	cmp    sil,0x1
  4108df:	mov    r9,QWORD PTR [rsp+0x38]
  4108e4:	lea    r8,[rip+0x3546d]        # 0x445d58
  4108eb:	sbb    edx,edx
  4108ed:	mov    rcx,rbx
  4108f0:	not    edx
  4108f2:	and    edx,0x3
  4108f5:	call   0x412660
  4108fa:	mov    rcx,QWORD PTR [rsp+0x38]
  4108ff:	call   0x43f100
  410904:	jmp    0x4108a0
  410906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410910:	mov    edx,0x1
  410915:	jmp    0x410860
  41091a:	nop    WORD PTR [rax+rax*1+0x0]
  410920:	xor    edx,edx
  410922:	jmp    0x410860
  410927:	nop    WORD PTR [rax+rax*1+0x0]
  410930:	push   rsi
  410931:	push   rbx
  410932:	sub    rsp,0x38
  410936:	mov    rax,QWORD PTR [rcx]
  410939:	mov    rbx,QWORD PTR [rax+0x60]
  41093d:	test   rbx,rbx
  410940:	je     0x410a00
  410946:	cmp    DWORD PTR [rbx+0x1c],0x5
  41094a:	mov    rsi,rcx
  41094d:	je     0x4109c0
  41094f:	cmp    BYTE PTR [rbx+0x19],0x0
  410953:	mov    DWORD PTR [rbx+0x1c],0x9
  41095a:	je     0x410970
  41095c:	mov    QWORD PTR [rbx+0x10],0x0
  410964:	add    rsp,0x38
  410968:	pop    rbx
  410969:	pop    rsi
  41096a:	ret    
  41096b:	nop    DWORD PTR [rax+rax*1+0x0]
  410970:	xor    edx,edx
  410972:	mov    BYTE PTR [rsi+0x12],0x0
  410976:	mov    rcx,rsi
  410979:	call   0x414810
  41097e:	cmp    BYTE PTR [rbx+0x18],0x0
  410982:	je     0x4109a0
  410984:	mov    BYTE PTR [rsi+0x12],0x1
  410988:	mov    QWORD PTR [rbx+0x10],0x0
  410990:	add    rsp,0x38
  410994:	pop    rbx
  410995:	pop    rsi
  410996:	ret    
  410997:	nop    WORD PTR [rax+rax*1+0x0]
  4109a0:	mov    edx,eax
  4109a2:	xor    edx,0x1
  4109a5:	mov    BYTE PTR [rsi+0x12],dl
  4109a8:	mov    BYTE PTR [rbx+0x18],al
  4109ab:	mov    QWORD PTR [rbx+0x10],0x0
  4109b3:	add    rsp,0x38
  4109b7:	pop    rbx
  4109b8:	pop    rsi
  4109b9:	ret    
  4109ba:	nop    WORD PTR [rax+rax*1+0x0]
  4109c0:	lea    r8,[rip+0x3558e]        # 0x445f55
  4109c7:	mov    edx,0x3
  4109cc:	call   0x412660
  4109d1:	mov    r8d,DWORD PTR [rbx+0x8]
  4109d5:	lea    rax,[rip+0x35515]        # 0x445ef1
  4109dc:	xor    r9d,r9d
  4109df:	mov    edx,0x3
  4109e4:	mov    rcx,rsi
  4109e7:	mov    QWORD PTR [rsp+0x20],rax
  4109ec:	call   0x412740
  4109f1:	jmp    0x41094f
  4109f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410a00:	lea    r8,[rip+0x3553c]        # 0x445f43
  410a07:	mov    edx,0x3
  410a0c:	add    rsp,0x38
  410a10:	pop    rbx
  410a11:	pop    rsi
  410a12:	jmp    0x412660
  410a17:	nop    WORD PTR [rax+rax*1+0x0]
  410a20:	push   rdi
  410a21:	push   rsi
  410a22:	push   rbx
  410a23:	sub    rsp,0x20
  410a27:	mov    rdi,QWORD PTR [rcx]
  410a2a:	mov    rsi,QWORD PTR [rdi+0x60]
  410a2e:	test   rsi,rsi
  410a31:	je     0x410ae0
  410a37:	movzx  eax,BYTE PTR [rsi+0x19]
  410a3b:	mov    rbx,rcx
  410a3e:	test   al,al
  410a40:	je     0x410a80
  410a42:	mov    rdx,QWORD PTR [rsi]
  410a45:	test   rdx,rdx
  410a48:	je     0x410aa0
  410a4a:	cmp    rsi,QWORD PTR [rbx+0x310]
  410a51:	mov    QWORD PTR [rdi+0x60],rdx
  410a55:	mov    BYTE PTR [rbx+0x12],al
  410a58:	jbe    0x410a63
  410a5a:	cmp    rsi,QWORD PTR [rbx+0x328]
  410a61:	jb     0x410ac0
  410a63:	lea    rcx,[rbx+0x308]
  410a6a:	mov    rdx,rsi
  410a6d:	add    rsp,0x20
  410a71:	pop    rbx
  410a72:	pop    rsi
  410a73:	pop    rdi
  410a74:	jmp    0x438480
  410a79:	nop    DWORD PTR [rax+0x0]
  410a80:	cmp    BYTE PTR [rcx+0x42b],0x0
  410a87:	je     0x410a42
  410a89:	xor    edx,edx
  410a8b:	call   0x40f990
  410a90:	mov    rdx,QWORD PTR [rsi]
  410a93:	movzx  eax,BYTE PTR [rsi+0x19]
  410a97:	test   rdx,rdx
  410a9a:	jne    0x410a4a
  410a9c:	nop    DWORD PTR [rax+0x0]
  410aa0:	mov    rcx,QWORD PTR [rsi+0x10]
  410aa4:	test   rcx,rcx
  410aa7:	je     0x410a4a
  410aa9:	mov    BYTE PTR [rbx+0x1a0],0x1
  410ab0:	mov    QWORD PTR [rbx+0x190],rcx
  410ab7:	jmp    0x410a4a
  410ab9:	nop    DWORD PTR [rax+0x0]
  410ac0:	mov    QWORD PTR [rbx+0x318],rsi
  410ac7:	mov    QWORD PTR [rbx+0x320],rsi
  410ace:	add    rsp,0x20
  410ad2:	pop    rbx
  410ad3:	pop    rsi
  410ad4:	pop    rdi
  410ad5:	ret    
  410ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ae0:	lea    r8,[rip+0x35480]        # 0x445f67
  410ae7:	mov    edx,0x3
  410aec:	add    rsp,0x20
  410af0:	pop    rbx
  410af1:	pop    rsi
  410af2:	pop    rdi
  410af3:	jmp    0x412660
  410af8:	nop    DWORD PTR [rax+rax*1+0x0]
  410b00:	push   rbx
  410b01:	sub    rsp,0x20
  410b05:	mov    rax,QWORD PTR [rcx+0x28]
  410b09:	cmp    DWORD PTR [rax+0x30],0x1
  410b0d:	je     0x410b40
  410b0f:	mov    rbx,rcx
  410b12:	xor    edx,edx
  410b14:	call   0x40f990
  410b19:	mov    rcx,rbx
  410b1c:	call   0x4102c0
  410b21:	xor    r8d,r8d
  410b24:	mov    edx,0x1
  410b29:	mov    rcx,rbx
  410b2c:	add    rsp,0x20
  410b30:	pop    rbx
  410b31:	jmp    0x4185d0
  410b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410b40:	lea    r8,[rip+0x35439]        # 0x445f80
  410b47:	xor    edx,edx
  410b49:	add    rsp,0x20
  410b4d:	pop    rbx
  410b4e:	jmp    0x412660
  410b53:	nop    DWORD PTR [rax]
  410b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410b60:	push   r13
  410b62:	push   r12
  410b64:	push   rbp
  410b65:	push   rdi
  410b66:	push   rsi
  410b67:	push   rbx
  410b68:	sub    rsp,0x38
  410b6c:	test   rdx,rdx
  410b6f:	mov    rdi,rcx
  410b72:	mov    rbp,rdx
  410b75:	mov    r12,r8
  410b78:	mov    r13d,r9d
  410b7b:	je     0x410cf0
  410b81:	mov    rcx,rdx
  410b84:	call   0x43f028
  410b89:	mov    rdx,rbp
  410b8c:	mov    r8d,eax
  410b8f:	mov    rcx,rdi
  410b92:	call   0x418eb0
  410b97:	mov    rsi,rax
  410b9a:	mov    rax,QWORD PTR [rdi+0x360]
  410ba1:	test   rax,rax
  410ba4:	jne    0x410bbc
  410ba6:	jmp    0x410ca0
  410bab:	nop    DWORD PTR [rax+rax*1+0x0]
  410bb0:	mov    rax,QWORD PTR [rax]
  410bb3:	test   rax,rax
  410bb6:	je     0x410ca0
  410bbc:	cmp    rsi,QWORD PTR [rax+0x8]
  410bc0:	jne    0x410bb0
  410bc2:	cmp    BYTE PTR [rax+0x10],0x0
  410bc6:	je     0x410d20
  410bcc:	cmp    BYTE PTR [rax+0x13],r13b
  410bd0:	jne    0x410d76
  410bd6:	lea    rbx,[rax+0x18]
  410bda:	mov    rcx,r12
  410bdd:	call   0x43f028
  410be2:	mov    rdx,r12
  410be5:	mov    r8d,eax
  410be8:	mov    rcx,rdi
  410beb:	call   0x418eb0
  410bf0:	mov    r10,QWORD PTR [rbx]
  410bf3:	mov    rsi,rax
  410bf6:	test   r10,r10
  410bf9:	jne    0x410c08
  410bfb:	jmp    0x410c50
  410bfd:	nop    DWORD PTR [rax]
  410c00:	mov    r10,QWORD PTR [r10]
  410c03:	test   r10,r10
  410c06:	je     0x410c50
  410c08:	cmp    rsi,QWORD PTR [r10+0x8]
  410c0c:	jne    0x410c00
  410c0e:	cmp    BYTE PTR [r10+0x10],0x0
  410c13:	jne    0x410d20
  410c19:	test   rbp,rbp
  410c1c:	je     0x410d50
  410c22:	lea    r8,[rip+0x35457]        # 0x446080
  410c29:	mov    QWORD PTR [rsp+0x20],r12
  410c2e:	mov    r9,rbp
  410c31:	mov    edx,0x4
  410c36:	mov    rcx,rdi
  410c39:	call   0x412660
  410c3e:	xor    eax,eax
  410c40:	add    rsp,0x38
  410c44:	pop    rbx
  410c45:	pop    rsi
  410c46:	pop    rdi
  410c47:	pop    rbp
  410c48:	pop    r12
  410c4a:	pop    r13
  410c4c:	ret    
  410c4d:	nop    DWORD PTR [rax]
  410c50:	mov    edx,0x20
  410c55:	mov    rcx,rdi
  410c58:	call   0x41cbf0
  410c5d:	mov    QWORD PTR [rax],0x0
  410c64:	mov    QWORD PTR [rax+0x8],0x0
  410c6c:	mov    QWORD PTR [rax+0x10],0x0
  410c74:	mov    QWORD PTR [rax+0x18],0x0
  410c7c:	mov    rdx,QWORD PTR [rbx]
  410c7f:	mov    QWORD PTR [rax],rdx
  410c82:	mov    QWORD PTR [rbx],rax
  410c85:	mov    QWORD PTR [rax+0x8],rsi
  410c89:	add    rsp,0x38
  410c8d:	pop    rbx
  410c8e:	pop    rsi
  410c8f:	pop    rdi
  410c90:	pop    rbp
  410c91:	pop    r12
  410c93:	pop    r13
  410c95:	ret    
  410c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ca0:	mov    edx,0x20
  410ca5:	mov    rcx,rdi
  410ca8:	call   0x41cbf0
  410cad:	mov    QWORD PTR [rax+0x10],0x0
  410cb5:	mov    QWORD PTR [rax],0x0
  410cbc:	mov    QWORD PTR [rax+0x8],0x0
  410cc4:	mov    QWORD PTR [rax+0x18],0x0
  410ccc:	mov    rdx,QWORD PTR [rdi+0x360]
  410cd3:	mov    QWORD PTR [rax],rdx
  410cd6:	mov    QWORD PTR [rdi+0x360],rax
  410cdd:	mov    QWORD PTR [rax+0x8],rsi
  410ce1:	mov    BYTE PTR [rax+0x10],0x1
  410ce5:	mov    BYTE PTR [rax+0x13],r13b
  410ce9:	jmp    0x410bd6
  410cee:	xchg   ax,ax
  410cf0:	test   r9b,r9b
  410cf3:	lea    rbx,[rcx+0x360]
  410cfa:	je     0x410bda
  410d00:	mov    r9,r8
  410d03:	lea    r8,[rip+0x352f6]        # 0x446000
  410d0a:	mov    edx,0x4
  410d0f:	call   0x412660
  410d14:	xor    eax,eax
  410d16:	jmp    0x410c40
  410d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  410d20:	mov    r9,QWORD PTR [rsi]
  410d23:	lea    r8,[rip+0x35316]        # 0x446040
  410d2a:	mov    edx,0x4
  410d2f:	mov    rcx,rdi
  410d32:	call   0x412660
  410d37:	xor    eax,eax
  410d39:	add    rsp,0x38
  410d3d:	pop    rbx
  410d3e:	pop    rsi
  410d3f:	pop    rdi
  410d40:	pop    rbp
  410d41:	pop    r12
  410d43:	pop    r13
  410d45:	ret    
  410d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d50:	lea    r8,[rip+0x35351]        # 0x4460a8
  410d57:	mov    r9,r12
  410d5a:	mov    edx,0x4
  410d5f:	mov    rcx,rdi
  410d62:	call   0x412660
  410d67:	xor    eax,eax
  410d69:	add    rsp,0x38
  410d6d:	pop    rbx
  410d6e:	pop    rsi
  410d6f:	pop    rdi
  410d70:	pop    rbp
  410d71:	pop    r12
  410d73:	pop    r13
  410d75:	ret    
  410d76:	lea    r8,[rip+0x3523b]        # 0x445fb8
  410d7d:	mov    r9,rbp
  410d80:	mov    edx,0x4
  410d85:	mov    rcx,rdi
  410d88:	call   0x412660
  410d8d:	xor    eax,eax
  410d8f:	jmp    0x410c40
  410d94:	xchg   ax,ax
  410d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410da0:	push   r12
  410da2:	push   rbp
  410da3:	push   rdi
  410da4:	push   rsi
  410da5:	push   rbx
  410da6:	sub    rsp,0x20
  410daa:	cmp    BYTE PTR [rcx+0x19],0x0
  410dae:	mov    rbx,rcx
  410db1:	mov    r12d,edx
  410db4:	setne  dil
  410db8:	cmp    BYTE PTR [rcx+0x1b],0x0
  410dbc:	setne  bpl
  410dc0:	je     0x410dc6
  410dc2:	mov    BYTE PTR [rcx+0x18],0x0
  410dc6:	test   dil,dil
  410dc9:	je     0x410de0
  410dcb:	cmp    BYTE PTR [rbx+0x437],0x0
  410dd2:	jne    0x410f60
  410dd8:	mov    BYTE PTR [rbx+0x19],0x0
  410ddc:	mov    BYTE PTR [rbx+0x18],0x0
  410de0:	mov    rax,QWORD PTR [rbx+0x28]
  410de4:	mov    BYTE PTR [rbx+0x10],0x1
  410de8:	mov    rcx,rbx
  410deb:	mov    BYTE PTR [rbx+0x15],0x0
  410def:	mov    BYTE PTR [rbx+0x9c],0x51
  410df6:	mov    eax,DWORD PTR [rax+0x3c]
  410df9:	mov    DWORD PTR [rbx+0x30],eax
  410dfc:	call   0x41c950
  410e01:	movzx  ecx,BYTE PTR [rax+0x4]
  410e05:	cmp    cl,0x35
  410e08:	je     0x410e80
  410e0a:	cmp    cl,0x37
  410e0d:	je     0x410f10
  410e13:	cmp    cl,0x16
  410e16:	je     0x410e30
  410e18:	cmp    DWORD PTR [rbx+0x414],0xd
  410e1f:	je     0x410edb
  410e25:	cmp    BYTE PTR [rbx+0x12],0x0
  410e29:	je     0x4110d0
  410e2f:	nop
  410e30:	cmp    BYTE PTR [rbx+0x43d],0x0
  410e37:	mov    QWORD PTR [rbx+0x90],0x0
  410e42:	jne    0x411060
  410e48:	mov    esi,0x1
  410e4d:	mov    edx,esi
  410e4f:	mov    rcx,rbx
  410e52:	call   0x4104b0
  410e57:	test   dil,dil
  410e5a:	je     0x410e6a
  410e5c:	cmp    BYTE PTR [rbx+0x20],0x0
  410e60:	jne    0x410e6a
  410e62:	mov    BYTE PTR [rbx+0x19],0x2
  410e66:	mov    BYTE PTR [rbx+0x18],0x1
  410e6a:	test   bpl,bpl
  410e6d:	je     0x410e73
  410e6f:	mov    BYTE PTR [rbx+0x18],0x1
  410e73:	mov    eax,esi
  410e75:	add    rsp,0x20
  410e79:	pop    rbx
  410e7a:	pop    rsi
  410e7b:	pop    rdi
  410e7c:	pop    rbp
  410e7d:	pop    r12
  410e7f:	ret    
  410e80:	mov    rdx,QWORD PTR [rax+0x8]
  410e84:	movzx  edx,BYTE PTR [rdx+0x10]
  410e88:	test   dl,0x1
  410e8b:	je     0x410e18
  410e8d:	shr    dl,1
  410e8f:	lea    rax,[rip+0x355ea]        # 0x446480
  410e96:	and    edx,0x7f
  410e99:	lea    rdx,[rdx+rdx*2]
  410e9d:	lea    rsi,[rax+rdx*8]
  410ea1:	test   BYTE PTR [rsi+0x13],0x2
  410ea5:	movzx  eax,BYTE PTR [rbx+0x438]
  410eac:	jne    0x410eb5
  410eae:	mov    BYTE PTR [rbx+0x1a0],0x0
  410eb5:	test   al,al
  410eb7:	je     0x410f80
  410ebd:	cmp    BYTE PTR [rbx+0x494],0x0
  410ec4:	jne    0x410fe0
  410eca:	test   r12d,r12d
  410ecd:	jne    0x410edb
  410ecf:	movzx  eax,BYTE PTR [rsi+0x13]
  410ed3:	test   al,0x8
  410ed5:	jne    0x410fe4
  410edb:	cmp    BYTE PTR [rbx+0x43d],0x0
  410ee2:	mov    QWORD PTR [rbx+0x90],0x0
  410eed:	jne    0x4110a0
  410ef3:	mov    edx,0x1
  410ef8:	mov    rcx,rbx
  410efb:	xor    esi,esi
  410efd:	call   0x40a7d0
  410f02:	jmp    0x410e4d
  410f07:	nop    WORD PTR [rax+rax*1+0x0]
  410f10:	cmp    DWORD PTR [rbx+0x414],0xd
  410f17:	je     0x410edb
  410f19:	cmp    BYTE PTR [rbx+0x437],0x0
  410f20:	je     0x411070
  410f26:	movzx  eax,BYTE PTR [rbx+0x438]
  410f2d:	lea    rsi,[rip+0x3549c]        # 0x4463d0
  410f34:	test   al,al
  410f36:	jne    0x410eae
  410f3c:	cmp    BYTE PTR [rbx+0x12],0x0
  410f40:	jne    0x410eae
  410f46:	lea    r8,[rip+0x351c3]        # 0x446110
  410f4d:	mov    edx,0x2
  410f52:	mov    rcx,rbx
  410f55:	call   0x412660
  410f5a:	jmp    0x410ea1
  410f5f:	nop
  410f60:	lea    r8,[rip+0x35169]        # 0x4460d0
  410f67:	mov    edx,0x2
  410f6c:	mov    rcx,rbx
  410f6f:	call   0x412660
  410f74:	jmp    0x410dd8
  410f79:	nop    DWORD PTR [rax+0x0]
  410f80:	movzx  eax,BYTE PTR [rsi+0x13]
  410f84:	and    eax,0x4
  410f87:	mov    BYTE PTR [rbx+0x13],al
  410f8a:	movzx  eax,BYTE PTR [rsi+0x13]
  410f8e:	and    eax,0x4
  410f91:	cmp    BYTE PTR [rbx+0x12],0x0
  410f95:	mov    BYTE PTR [rbx+0x11],al
  410f98:	jne    0x411030
  410f9e:	movzx  eax,BYTE PTR [rsi+0x12]
  410fa2:	cmp    al,0x2
  410fa4:	je     0x411121
  410faa:	test   BYTE PTR [rsi+0x13],0x20
  410fae:	jne    0x4110b0
  410fb4:	lea    rdx,[rip+0x3562d]        # 0x4465e8
  410fbb:	cmp    rsi,rdx
  410fbe:	jne    0x4110bd
  410fc4:	cmp    BYTE PTR [rbx+0x41a],0x0
  410fcb:	je     0x4110b0
  410fd1:	cmp    BYTE PTR [rbx+0x429],0x0
  410fd8:	jne    0x41104d
  410fda:	jmp    0x411006
  410fdc:	nop    DWORD PTR [rax+0x0]
  410fe0:	movzx  eax,BYTE PTR [rsi+0x13]
  410fe4:	and    eax,0x4
  410fe7:	mov    BYTE PTR [rbx+0x13],al
  410fea:	movzx  eax,BYTE PTR [rsi+0x13]
  410fee:	and    eax,0x4
  410ff1:	mov    BYTE PTR [rbx+0x11],al
  410ff4:	movzx  eax,BYTE PTR [rbx+0x12]
  410ff8:	test   al,al
  410ffa:	je     0x411006
  410ffc:	test   BYTE PTR [rsi+0x13],0x1
  411000:	je     0x410e30
  411006:	cmp    BYTE PTR [rbx+0x43d],0x0
  41100d:	mov    QWORD PTR [rbx+0x90],rsi
  411014:	jne    0x4111ac
  41101a:	mov    rcx,rbx
  41101d:	call   QWORD PTR [rsi]
  41101f:	mov    esi,0x1
  411024:	jmp    0x410e4d
  411029:	nop    DWORD PTR [rax+0x0]
  411030:	cmp    BYTE PTR [rbx+0x429],0x0
  411037:	je     0x410ffc
  411039:	lea    rax,[rip+0x35518]        # 0x446558
  411040:	cmp    rsi,rax
  411043:	je     0x411180
  411049:	movzx  eax,BYTE PTR [rsi+0x12]
  41104d:	test   r12d,r12d
  411050:	je     0x411080
  411052:	test   al,al
  411054:	je     0x411100
  41105a:	movzx  eax,BYTE PTR [rbx+0x12]
  41105e:	jmp    0x410ff8
  411060:	mov    rcx,rbx
  411063:	call   0x40f7f0
  411068:	jmp    0x410e48
  41106d:	nop    DWORD PTR [rax]
  411070:	lea    rsi,[rip+0x35359]        # 0x4463d0
  411077:	jmp    0x410ea1
  41107c:	nop    DWORD PTR [rax+0x0]
  411080:	test   al,al
  411082:	je     0x41105a
  411084:	mov    r9,QWORD PTR [rsi+0x8]
  411088:	lea    r8,[rip+0x35151]        # 0x4461e0
  41108f:	mov    edx,0x6
  411094:	mov    rcx,rbx
  411097:	call   0x412690
  41109c:	jmp    0x41105a
  41109e:	xchg   ax,ax
  4110a0:	mov    rcx,rbx
  4110a3:	call   0x40f7f0
  4110a8:	jmp    0x410ef3
  4110ad:	nop    DWORD PTR [rax]
  4110b0:	cmp    BYTE PTR [rbx+0x423],0x0
  4110b7:	jne    0x411164
  4110bd:	cmp    BYTE PTR [rbx+0x429],0x0
  4110c4:	jne    0x411039
  4110ca:	jmp    0x411006
  4110cf:	nop
  4110d0:	mov    rcx,rbx
  4110d3:	mov    rdx,rax
  4110d6:	call   0x41cb80
  4110db:	lea    r8,[rip+0x3513e]        # 0x446220
  4110e2:	mov    r9,rax
  4110e5:	mov    edx,0x3
  4110ea:	mov    rcx,rbx
  4110ed:	call   0x412660
  4110f2:	jmp    0x410e30
  4110f7:	nop    WORD PTR [rax+rax*1+0x0]
  411100:	mov    r9,QWORD PTR [rsi+0x8]
  411104:	lea    r8,[rip+0x350a5]        # 0x4461b0
  41110b:	mov    edx,0x6
  411110:	mov    rcx,rbx
  411113:	call   0x412690
  411118:	movzx  eax,BYTE PTR [rbx+0x12]
  41111c:	jmp    0x410ff8
  411121:	lea    rdx,[rip+0x354c0]        # 0x4465e8
  411128:	cmp    rsi,rdx
  41112b:	je     0x41119d
  41112d:	cmp    BYTE PTR [rbx+0x437],0x0
  411134:	je     0x410faa
  41113a:	mov    r9,QWORD PTR [rsi+0x8]
  41113e:	lea    r8,[rip+0x34ff6]        # 0x44613b
  411145:	mov    edx,0x2
  41114a:	mov    rcx,rbx
  41114d:	call   0x412660
  411152:	cmp    BYTE PTR [rbx+0x429],0x0
  411159:	jne    0x411039
  41115f:	jmp    0x41105a
  411164:	mov    r9,QWORD PTR [rsi+0x8]
  411168:	lea    r8,[rip+0x34fe9]        # 0x446158
  41116f:	mov    edx,0x1
  411174:	mov    rcx,rbx
  411177:	call   0x412690
  41117c:	jmp    0x411152
  41117e:	xchg   ax,ax
  411180:	lea    r8,[rip+0x34ff9]        # 0x446180
  411187:	mov    edx,0x6
  41118c:	mov    rcx,rbx
  41118f:	call   0x412690
  411194:	movzx  eax,BYTE PTR [rbx+0x12]
  411198:	jmp    0x410ff8
  41119d:	cmp    BYTE PTR [rbx+0x41a],0x0
  4111a4:	jne    0x410fd1
  4111aa:	jmp    0x41112d
  4111ac:	mov    rcx,rbx
  4111af:	call   0x40f7f0
  4111b4:	mov    rsi,QWORD PTR [rbx+0x90]
  4111bb:	jmp    0x41101a
  4111c0:	lea    rdx,[rip+0xffffffffffffda89]        # 0x40ec50
  4111c7:	xor    r8d,r8d
  4111ca:	jmp    0x418f10
  4111cf:	nop
  4111d0:	push   rsi
  4111d1:	push   rbx
  4111d2:	sub    rsp,0x38
  4111d6:	mov    rbx,rcx
  4111d9:	mov    rcx,QWORD PTR [rcx+0x28]
  4111dd:	mov    DWORD PTR [rsp+0x20],r9d
  4111e2:	mov    r9,r8
  4111e5:	mov    r8d,DWORD PTR [rsp+0x70]
  4111ea:	call   0x408440
  4111ef:	test   rax,rax
  4111f2:	mov    rsi,rax
  4111f5:	je     0x411209
  4111f7:	mov    edx,DWORD PTR [rax+0x10]
  4111fa:	mov    rcx,QWORD PTR [rbx+0x28]
  4111fe:	mov    r8d,0x7f
  411204:	call   0x408830
  411209:	mov    rax,QWORD PTR [rbx+0x370]
  411210:	test   rax,rax
  411213:	je     0x411224
  411215:	mov    rdx,rsi
  411218:	mov    rcx,rbx
  41121b:	add    rsp,0x38
  41121f:	pop    rbx
  411220:	pop    rsi
  411221:	rex.W jmp rax
  411224:	add    rsp,0x38
  411228:	pop    rbx
  411229:	pop    rsi
  41122a:	ret    
  41122b:	nop    DWORD PTR [rax+rax*1+0x0]
  411230:	push   r12
  411232:	push   rbp
  411233:	push   rdi
  411234:	push   rsi
  411235:	push   rbx
  411236:	sub    rsp,0x40
  41123a:	mov    rax,QWORD PTR [rcx+0x28]
  41123e:	mov    rsi,rcx
  411241:	mov    edx,DWORD PTR [rax+0xc]
  411244:	mov    rax,QWORD PTR [rax]
  411247:	sub    edx,0x1
  41124a:	lea    rdx,[rdx+rdx*4]
  41124e:	lea    rax,[rax+rdx*8]
  411252:	mov    edx,0x1
  411257:	mov    rbp,QWORD PTR [rax+0x8]
  41125b:	movzx  edi,BYTE PTR [rax+0x18]
  41125f:	call   0x40a7d0
  411264:	mov    rcx,rsi
  411267:	call   0x40c760
  41126c:	cmp    BYTE PTR [rax+0x4],0x37
  411270:	je     0x4112a0
  411272:	mov    rcx,rsi
  411275:	mov    rdx,rax
  411278:	call   0x41cb80
  41127d:	lea    r8,[rip+0x34fc4]        # 0x446248
  411284:	mov    r9,rax
  411287:	mov    edx,0x3
  41128c:	mov    rcx,rsi
  41128f:	call   0x412660
  411294:	nop
  411295:	add    rsp,0x40
  411299:	pop    rbx
  41129a:	pop    rsi
  41129b:	pop    rdi
  41129c:	pop    rbp
  41129d:	pop    r12
  41129f:	ret    
  4112a0:	mov    ecx,DWORD PTR [rax+0x8]
  4112a3:	mov    r8,QWORD PTR [rax+0x10]
  4112a7:	test   rcx,rcx
  4112aa:	je     0x4113db
  4112b0:	movzx  edx,BYTE PTR [r8]
  4112b4:	mov    r11,QWORD PTR [rip+0x40325]        # 0x4515e0
  4112bb:	lea    r10,[r8+0x1]
  4112bf:	test   BYTE PTR [r11+rdx*2],0x4
  4112c4:	mov    r9,rdx
  4112c7:	je     0x411272
  4112c9:	add    r8,rcx
  4112cc:	xor    ebx,ebx
  4112ce:	jmp    0x4112e3
  4112d0:	add    r10,0x1
  4112d4:	movzx  ecx,BYTE PTR [r10-0x1]
  4112d9:	test   BYTE PTR [r11+rcx*2],0x4
  4112de:	mov    r9,rcx
  4112e1:	je     0x411272
  4112e3:	lea    ecx,[rbx+rbx*4]
  4112e6:	cmp    r10,r8
  4112e9:	lea    ebx,[r9+rcx*2-0x30]
  4112ee:	jne    0x4112d0
  4112f0:	mov    rcx,rsi
  4112f3:	call   0x40c760
  4112f8:	movzx  ecx,BYTE PTR [rax+0x4]
  4112fc:	mov    rdx,rax
  4112ff:	cmp    cl,0x3d
  411302:	je     0x41136b
  411304:	cmp    cl,0x16
  411307:	mov    r12d,0x3
  41130d:	jne    0x411340
  41130f:	mov    rcx,rsi
  411312:	call   0x4102c0
  411317:	mov    rax,QWORD PTR [rsi+0x28]
  41131b:	mov    r9d,ebx
  41131e:	mov    r8,rbp
  411321:	mov    edx,r12d
  411324:	mov    rcx,rsi
  411327:	sub    DWORD PTR [rax+0x38],0x1
  41132b:	mov    DWORD PTR [rsp+0x20],edi
  41132f:	call   0x4111d0
  411334:	nop
  411335:	add    rsp,0x40
  411339:	pop    rbx
  41133a:	pop    rsi
  41133b:	pop    rdi
  41133c:	pop    rbp
  41133d:	pop    r12
  41133f:	ret    
  411340:	mov    rcx,rsi
  411343:	call   0x41cb80
  411348:	lea    r8,[rip+0x34f20]        # 0x44626f
  41134f:	mov    r9,rax
  411352:	mov    edx,0x3
  411357:	mov    rcx,rsi
  41135a:	call   0x412660
  41135f:	nop
  411360:	add    rsp,0x40
  411364:	pop    rbx
  411365:	pop    rsi
  411366:	pop    rdi
  411367:	pop    rbp
  411368:	pop    r12
  41136a:	ret    
  41136b:	lea    r9,[rsp+0x30]
  411370:	add    rdx,0x8
  411374:	mov    r8d,0x1
  41137a:	mov    rcx,rsi
  41137d:	mov    DWORD PTR [rsp+0x20],0x3d
  411385:	mov    DWORD PTR [rsp+0x30],0x0
  41138d:	mov    QWORD PTR [rsp+0x38],0x0
  411396:	call   0x423650
  41139b:	mov    rcx,rsi
  41139e:	test   al,al
  4113a0:	cmovne rbp,QWORD PTR [rsp+0x38]
  4113a6:	xor    edx,edx
  4113a8:	call   0x40edc0
  4113ad:	cmp    eax,0x1
  4113b0:	je     0x411406
  4113b2:	cmp    eax,0x2
  4113b5:	mov    r12d,0x3
  4113bb:	je     0x411423
  4113bd:	xor    edx,edx
  4113bf:	xor    edi,edi
  4113c1:	cmp    eax,0x3
  4113c4:	je     0x4113e2
  4113c6:	mov    rax,QWORD PTR [rsi]
  4113c9:	mov    rcx,rsi
  4113cc:	mov    BYTE PTR [rax+0x6d],dl
  4113cf:	xor    edx,edx
  4113d1:	call   0x40f990
  4113d6:	jmp    0x41130f
  4113db:	xor    ebx,ebx
  4113dd:	jmp    0x4112f0
  4113e2:	mov    edx,0x3
  4113e7:	mov    rcx,rsi
  4113ea:	call   0x40edc0
  4113ef:	cmp    eax,0x4
  4113f2:	sete   dl
  4113f5:	xor    edi,edi
  4113f7:	add    edx,0x1
  4113fa:	cmp    eax,0x4
  4113fd:	sete   dil
  411401:	add    edi,0x1
  411404:	jmp    0x4113c6
  411406:	mov    rdx,rbp
  411409:	mov    rcx,rsi
  41140c:	xor    r12d,r12d
  41140f:	call   0x4185a0
  411414:	mov    edx,0x1
  411419:	mov    rcx,rsi
  41141c:	call   0x40edc0
  411421:	jmp    0x4113bd
  411423:	mov    edx,0x2
  411428:	mov    rcx,rsi
  41142b:	mov    r12b,0x1
  41142e:	call   0x40edc0
  411433:	jmp    0x4113bd
  411435:	nop
  411436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411440:	push   r13
  411442:	push   r12
  411444:	push   rbp
  411445:	push   rdi
  411446:	push   rsi
  411447:	push   rbx
  411448:	sub    rsp,0x48
  41144c:	mov    rax,QWORD PTR [rcx+0x28]
  411450:	mov    rsi,rcx
  411453:	mov    edx,DWORD PTR [rax+0xc]
  411456:	mov    rax,QWORD PTR [rax]
  411459:	sub    edx,0x1
  41145c:	cmp    BYTE PTR [rcx+0x435],0x1
  411463:	lea    rdx,[rdx+rdx*4]
  411467:	lea    rax,[rax+rdx*8]
  41146b:	sbb    r12d,r12d
  41146e:	movzx  edi,BYTE PTR [rax+0x18]
  411472:	mov    rbp,QWORD PTR [rax+0x8]
  411476:	and    r12d,0x80008000
  41147d:	call   0x40c760
  411482:	movzx  edx,BYTE PTR [rax+0x4]
  411486:	add    r12d,0x7fffffff
  41148d:	cmp    dl,0x37
  411490:	je     0x4114d0
  411492:	cmp    dl,0x16
  411495:	je     0x411590
  41149b:	mov    rcx,rsi
  41149e:	mov    rdx,rax
  4114a1:	call   0x41cb80
  4114a6:	lea    r8,[rip+0x34e0b]        # 0x4462b8
  4114ad:	mov    r9,rax
  4114b0:	mov    edx,0x3
  4114b5:	mov    rcx,rsi
  4114b8:	call   0x412660
  4114bd:	nop
  4114be:	add    rsp,0x48
  4114c2:	pop    rbx
  4114c3:	pop    rsi
  4114c4:	pop    rdi
  4114c5:	pop    rbp
  4114c6:	pop    r12
  4114c8:	pop    r13
  4114ca:	ret    
  4114cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4114d0:	mov    r11d,DWORD PTR [rax+0x8]
  4114d4:	mov    r10,QWORD PTR [rax+0x10]
  4114d8:	xor    ecx,ecx
  4114da:	xor    ebx,ebx
  4114dc:	mov    r13,QWORD PTR [rip+0x400fd]        # 0x4515e0
  4114e3:	mov    edx,0x1
  4114e8:	add    r11,r10
  4114eb:	jmp    0x411516
  4114ed:	nop    DWORD PTR [rax]
  4114f0:	add    r10,0x1
  4114f4:	movzx  r8d,BYTE PTR [r10-0x1]
  4114f9:	test   BYTE PTR [r13+r8*2+0x0],0x4
  4114ff:	mov    r9,r8
  411502:	je     0x41149b
  411504:	lea    r8d,[rbx+rbx*4]
  411508:	lea    r9d,[r9+r8*2-0x30]
  41150d:	cmp    ebx,r9d
  411510:	mov    ebx,r9d
  411513:	cmova  ecx,edx
  411516:	cmp    r10,r11
  411519:	jne    0x4114f0
  41151b:	cmp    BYTE PTR [rsi+0x437],0x0
  411522:	je     0x4115b2
  411528:	cmp    r12d,ebx
  41152b:	setb   dl
  41152e:	test   ebx,ebx
  411530:	sete   al
  411533:	or     dl,al
  411535:	jne    0x4115d0
  41153b:	test   cl,cl
  41153d:	jne    0x4115d0
  411543:	mov    rcx,rsi
  411546:	call   0x40c760
  41154b:	movzx  ecx,BYTE PTR [rax+0x4]
  41154f:	cmp    cl,0x3d
  411552:	je     0x411620
  411558:	cmp    cl,0x16
  41155b:	jne    0x4115f0
  411561:	mov    rcx,rsi
  411564:	call   0x4102c0
  411569:	mov    DWORD PTR [rsp+0x20],edi
  41156d:	mov    r9d,ebx
  411570:	mov    r8,rbp
  411573:	mov    edx,0x3
  411578:	mov    rcx,rsi
  41157b:	call   0x4111d0
  411580:	nop
  411581:	add    rsp,0x48
  411585:	pop    rbx
  411586:	pop    rsi
  411587:	pop    rdi
  411588:	pop    rbp
  411589:	pop    r12
  41158b:	pop    r13
  41158d:	ret    
  41158e:	xchg   ax,ax
  411590:	lea    r8,[rip+0x34cf9]        # 0x446290
  411597:	mov    edx,0x3
  41159c:	mov    rcx,rsi
  41159f:	call   0x412660
  4115a4:	nop
  4115a5:	add    rsp,0x48
  4115a9:	pop    rbx
  4115aa:	pop    rsi
  4115ab:	pop    rdi
  4115ac:	pop    rbp
  4115ad:	pop    r12
  4115af:	pop    r13
  4115b1:	ret    
  4115b2:	test   cl,cl
  4115b4:	je     0x411543
  4115b6:	lea    r8,[rip+0x34d26]        # 0x4462e3
  4115bd:	xor    edx,edx
  4115bf:	mov    rcx,rsi
  4115c2:	call   0x412660
  4115c7:	jmp    0x411543
  4115cc:	nop    DWORD PTR [rax+0x0]
  4115d0:	lea    r8,[rip+0x34d0c]        # 0x4462e3
  4115d7:	mov    edx,0x2
  4115dc:	mov    rcx,rsi
  4115df:	call   0x412660
  4115e4:	jmp    0x411543
  4115e9:	nop    DWORD PTR [rax+0x0]
  4115f0:	mov    rcx,rsi
  4115f3:	mov    rdx,rax
  4115f6:	call   0x41cb80
  4115fb:	lea    r8,[rip+0x34c6d]        # 0x44626f
  411602:	mov    r9,rax
  411605:	mov    edx,0x3
  41160a:	mov    rcx,rsi
  41160d:	call   0x412660
  411612:	nop
  411613:	add    rsp,0x48
  411617:	pop    rbx
  411618:	pop    rsi
  411619:	pop    rdi
  41161a:	pop    rbp
  41161b:	pop    r12
  41161d:	pop    r13
  41161f:	ret    
  411620:	lea    rdx,[rax+0x8]
  411624:	lea    r9,[rsp+0x30]
  411629:	mov    rcx,rsi
  41162c:	mov    DWORD PTR [rsp+0x20],0x3d
  411634:	mov    r8d,0x1
  41163a:	mov    DWORD PTR [rsp+0x30],0x0
  411642:	mov    QWORD PTR [rsp+0x38],0x0
  41164b:	call   0x423650
  411650:	mov    edx,0x1
  411655:	mov    rcx,rsi
  411658:	test   al,al
  41165a:	cmovne rbp,QWORD PTR [rsp+0x38]
  411660:	call   0x40f990
  411665:	jmp    0x411561
  41166a:	nop    WORD PTR [rax+rax*1+0x0]
  411670:	push   rsi
  411671:	push   rbx
  411672:	sub    rsp,0x28
  411676:	mov    esi,DWORD PTR [rsp+0x60]
  41167a:	test   r9,r9
  41167d:	je     0x4116a0
  41167f:	mov    rbx,r9
  411682:	xor    r9d,r9d
  411685:	call   0x410b60
  41168a:	test   rax,rax
  41168d:	je     0x411697
  41168f:	mov    BYTE PTR [rax+0x13],sil
  411693:	mov    QWORD PTR [rax+0x18],rbx
  411697:	add    rsp,0x28
  41169b:	pop    rbx
  41169c:	pop    rsi
  41169d:	ret    
  41169e:	xchg   ax,ax
  4116a0:	lea    r8,[rip+0x34c59]        # 0x446300
  4116a7:	mov    edx,0x4
  4116ac:	add    rsp,0x28
  4116b0:	pop    rbx
  4116b1:	pop    rsi
  4116b2:	jmp    0x412660
  4116b7:	nop    WORD PTR [rax+rax*1+0x0]
  4116c0:	push   rsi
  4116c1:	push   rbx
  4116c2:	sub    rsp,0x28
  4116c6:	mov    esi,DWORD PTR [rsp+0x60]
  4116ca:	mov    ebx,r9d
  4116cd:	movzx  r9d,BYTE PTR [rsp+0x68]
  4116d3:	call   0x410b60
  4116d8:	test   rax,rax
  4116db:	je     0x4116e8
  4116dd:	mov    BYTE PTR [rax+0x12],0x1
  4116e1:	mov    BYTE PTR [rax+0x13],sil
  4116e5:	mov    DWORD PTR [rax+0x18],ebx
  4116e8:	add    rsp,0x28
  4116ec:	pop    rbx
  4116ed:	pop    rsi
  4116ee:	ret    
  4116ef:	nop
  4116f0:	push   rbx
  4116f1:	sub    rsp,0x20
  4116f5:	lea    r8,[rip+0x34c29]        # 0x446325
  4116fc:	xor    r9d,r9d
  4116ff:	xor    edx,edx
  411701:	mov    rbx,rcx
  411704:	call   0x410b60
  411709:	lea    rdx,[rip+0xffffffffffffea90]        # 0x4101a0
  411710:	lea    r8,[rip+0x34c13]        # 0x44632a
  411717:	xor    r9d,r9d
  41171a:	mov    rcx,rbx
  41171d:	mov    BYTE PTR [rax+0x11],0x1
  411721:	mov    QWORD PTR [rax+0x18],rdx
  411725:	xor    edx,edx
  411727:	call   0x410b60
  41172c:	lea    rcx,[rip+0xffffffffffffee1d]        # 0x410550
  411733:	lea    r8,[rip+0x34bfb]        # 0x446335
  41173a:	xor    r9d,r9d
  41173d:	xor    edx,edx
  41173f:	mov    BYTE PTR [rax+0x11],0x1
  411743:	mov    QWORD PTR [rax+0x18],rcx
  411747:	mov    rcx,rbx
  41174a:	call   0x410b60
  41174f:	lea    rdx,[rip+0x49a]        # 0x411bf0
  411756:	lea    r8,[rip+0x34be2]        # 0x44633f
  41175d:	xor    r9d,r9d
  411760:	mov    rcx,rbx
  411763:	mov    BYTE PTR [rax+0x11],0x1
  411767:	mov    QWORD PTR [rax+0x18],rdx
  41176b:	lea    rdx,[rip+0x34bd4]        # 0x446346
  411772:	call   0x410b60
  411777:	lea    rcx,[rip+0xffffffffffffd6d2]        # 0x40ee50
  41177e:	lea    r8,[rip+0x34bc5]        # 0x44634a
  411785:	lea    rdx,[rip+0x34bba]        # 0x446346
  41178c:	xor    r9d,r9d
  41178f:	mov    BYTE PTR [rax+0x11],0x1
  411793:	mov    QWORD PTR [rax+0x18],rcx
  411797:	mov    rcx,rbx
  41179a:	call   0x410b60
  41179f:	lea    rdx,[rip+0xfffffffffffff35a]        # 0x410b00
  4117a6:	lea    r8,[rip+0x34bab]        # 0x446358
  4117ad:	xor    r9d,r9d
  4117b0:	mov    rcx,rbx
  4117b3:	mov    BYTE PTR [rax+0x11],0x1
  4117b7:	mov    QWORD PTR [rax+0x18],rdx
  4117bb:	lea    rdx,[rip+0x34b84]        # 0x446346
  4117c2:	call   0x410b60
  4117c7:	lea    rcx,[rip+0xffffffffffffe642]        # 0x40fe10
  4117ce:	lea    r8,[rip+0x3473d]        # 0x445f12
  4117d5:	lea    rdx,[rip+0x34b6a]        # 0x446346
  4117dc:	xor    r9d,r9d
  4117df:	mov    BYTE PTR [rax+0x11],0x1
  4117e3:	mov    QWORD PTR [rax+0x18],rcx
  4117e7:	mov    rcx,rbx
  4117ea:	call   0x410b60
  4117ef:	lea    rdx,[rip+0xfffffffffffff12a]        # 0x410920
  4117f6:	mov    rcx,rbx
  4117f9:	lea    r8,[rip+0x3470c]        # 0x445f0c
  411800:	lea    rbx,[rip+0xfffffffffffff109]        # 0x410910
  411807:	xor    r9d,r9d
  41180a:	mov    BYTE PTR [rax+0x11],0x1
  41180e:	mov    QWORD PTR [rax+0x18],rdx
  411812:	lea    rdx,[rip+0x34b2d]        # 0x446346
  411819:	call   0x410b60
  41181e:	mov    BYTE PTR [rax+0x11],0x1
  411822:	mov    QWORD PTR [rax+0x18],rbx
  411826:	add    rsp,0x20
  41182a:	pop    rbx
  41182b:	ret    
  41182c:	nop    DWORD PTR [rax+0x0]
  411830:	push   rsi
  411831:	push   rbx
  411832:	sub    rsp,0x28
  411836:	mov    rsi,rcx
  411839:	mov    rcx,QWORD PTR [rcx+0x360]
  411840:	call   0x40ec60
  411845:	cdqe   
  411847:	lea    rcx,[rax*8+0x0]
  41184f:	call   0x4385d0
  411854:	mov    rcx,QWORD PTR [rsi+0x360]
  41185b:	mov    rbx,rax
  41185e:	mov    rdx,rax
  411861:	call   0x40f930
  411866:	mov    rax,rbx
  411869:	add    rsp,0x28
  41186d:	pop    rbx
  41186e:	pop    rsi
  41186f:	ret    
  411870:	push   rbx
  411871:	sub    rsp,0x20
  411875:	mov    rbx,rdx
  411878:	mov    rdx,QWORD PTR [rcx+0x360]
  41187f:	mov    r8,rbx
  411882:	call   0x40f8b0
  411887:	mov    rcx,rbx
  41188a:	add    rsp,0x20
  41188e:	pop    rbx
  41188f:	jmp    0x43f100
  411894:	xchg   ax,ax
  411896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4118a0:	push   rdi
  4118a1:	push   rsi
  4118a2:	push   rbx
  4118a3:	sub    rsp,0x30
  4118a7:	mov    r8d,0x4
  4118ad:	mov    rsi,rdx
  4118b0:	lea    rdx,[rsp+0x28]
  4118b5:	mov    rdi,rcx
  4118b8:	call   0x40eef0
  4118bd:	test   rax,rax
  4118c0:	mov    rbx,rax
  4118c3:	mov    DWORD PTR [rsi],0x0
  4118c9:	je     0x411910
  4118cb:	movzx  eax,BYTE PTR [rax+0x18]
  4118cf:	xor    ecx,ecx
  4118d1:	and    eax,0x3f
  4118d4:	cmp    al,0x2
  4118d6:	je     0x4118f0
  4118d8:	mov    DWORD PTR [rsi],ecx
  4118da:	xor    eax,eax
  4118dc:	test   rbx,rbx
  4118df:	sete   al
  4118e2:	add    rsp,0x30
  4118e6:	pop    rbx
  4118e7:	pop    rsi
  4118e8:	pop    rdi
  4118e9:	ret    
  4118ea:	nop    WORD PTR [rax+rax*1+0x0]
  4118f0:	mov    rdx,QWORD PTR [rsp+0x28]
  4118f5:	mov    cl,0x1
  4118f7:	test   rdx,rdx
  4118fa:	je     0x4118d8
  4118fc:	mov    rcx,rbx
  4118ff:	call   0x40f130
  411904:	xor    ecx,ecx
  411906:	cmp    QWORD PTR [rax],0x0
  41190a:	setne  cl
  41190d:	jmp    0x4118d8
  41190f:	nop
  411910:	mov    rax,QWORD PTR [rdi+0x1a8]
  411917:	cmp    BYTE PTR [rax-0x14],0x16
  41191b:	jne    0x4118da
  41191d:	mov    edx,0x1
  411922:	mov    rcx,rdi
  411925:	call   0x40a7d0
  41192a:	jmp    0x4118da
  41192c:	nop    DWORD PTR [rax+0x0]
  411930:	lea    rax,[rcx+0x410]
  411937:	ret    
  411938:	nop    DWORD PTR [rax+rax*1+0x0]
  411940:	lea    rax,[rcx+0x368]
  411947:	ret    
  411948:	nop    DWORD PTR [rax+rax*1+0x0]
  411950:	push   rdi
  411951:	push   rsi
  411952:	lea    rdi,[rcx+0x368]
  411959:	mov    rsi,rdx
  41195c:	mov    ecx,0x12
  411961:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  411964:	pop    rsi
  411965:	pop    rdi
  411966:	ret    
  411967:	nop    WORD PTR [rax+rax*1+0x0]
  411970:	push   rbx
  411971:	sub    rsp,0x20
  411975:	mov    rax,QWORD PTR [rcx+0x2a8]
  41197c:	test   rax,rax
  41197f:	je     0x411990
  411981:	add    rsp,0x20
  411985:	pop    rbx
  411986:	ret    
  411987:	nop    WORD PTR [rax+rax*1+0x0]
  411990:	mov    rbx,rcx
  411993:	call   0x41ced0
  411998:	mov    QWORD PTR [rbx+0x2a8],rax
  41199f:	add    rsp,0x20
  4119a3:	pop    rbx
  4119a4:	ret    
  4119a5:	nop
  4119a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4119b0:	push   rdi
  4119b1:	push   rsi
  4119b2:	push   rbx
  4119b3:	sub    rsp,0x30
  4119b7:	mov    rax,QWORD PTR [rcx+0x320]
  4119be:	mov    rsi,rdx
  4119c1:	mov    rdx,QWORD PTR [rcx+0x328]
  4119c8:	mov    rbx,rcx
  4119cb:	mov    rcx,rdx
  4119ce:	sub    rcx,rax
  4119d1:	cmp    rcx,0xbf
  4119d8:	jle    0x411ab0
  4119de:	mov    r10,QWORD PTR [rbx+0x318]
  4119e5:	add    rax,0xc0
  4119eb:	mov    QWORD PTR [rbx+0x320],rax
  4119f2:	cmp    rax,r10
  4119f5:	je     0x411af0
  4119fb:	movsxd r11,DWORD PTR [rbx+0x338]
  411a02:	mov    rdi,rdx
  411a05:	mov    rcx,r11
  411a08:	add    rax,r11
  411a0b:	not    ecx
  411a0d:	movsxd rcx,ecx
  411a10:	and    rax,rcx
  411a13:	mov    rcx,QWORD PTR [rbx+0x310]
  411a1a:	mov    r11,rax
  411a1d:	mov    QWORD PTR [rbx+0x320],rax
  411a24:	sub    r11,rcx
  411a27:	sub    rdi,rcx
  411a2a:	cmp    r11,rdi
  411a2d:	jle    0x411a39
  411a2f:	mov    QWORD PTR [rbx+0x320],rdx
  411a36:	mov    rax,rdx
  411a39:	lea    rdi,[r10+0x8]
  411a3d:	mov    rcx,r10
  411a40:	mov    QWORD PTR [rbx+0x318],rax
  411a47:	xor    eax,eax
  411a49:	mov    QWORD PTR [r10],0x0
  411a50:	mov    QWORD PTR [r10+0xb8],0x0
  411a5b:	and    rdi,0xfffffffffffffff8
  411a5f:	and    r9d,0x1
  411a63:	add    r8,rsi
  411a66:	sub    rcx,rdi
  411a69:	add    r9d,r9d
  411a6c:	add    ecx,0xc0
  411a72:	shr    ecx,0x3
  411a75:	rep stos QWORD PTR es:[rdi],rax
  411a78:	mov    QWORD PTR [r10+0x18],rsi
  411a7c:	mov    QWORD PTR [r10+0x10],rsi
  411a80:	mov    QWORD PTR [r10+0x20],r8
  411a84:	movzx  eax,BYTE PTR [r10+0x6c]
  411a89:	and    eax,0xfffffffd
  411a8c:	or     r9d,eax
  411a8f:	mov    BYTE PTR [r10+0x6c],r9b
  411a93:	mov    rax,QWORD PTR [rbx]
  411a96:	mov    BYTE PTR [r10+0x68],0x1
  411a9b:	mov    QWORD PTR [r10+0x48],rax
  411a9f:	mov    rax,r10
  411aa2:	mov    QWORD PTR [rbx],r10
  411aa5:	add    rsp,0x30
  411aa9:	pop    rbx
  411aaa:	pop    rsi
  411aab:	pop    rdi
  411aac:	ret    
  411aad:	nop    DWORD PTR [rax]
  411ab0:	lea    rcx,[rbx+0x308]
  411ab7:	mov    edx,0xc0
  411abc:	mov    DWORD PTR [rsp+0x2c],r9d
  411ac1:	mov    QWORD PTR [rsp+0x20],r8
  411ac6:	call   0x438250
  411acb:	mov    rax,QWORD PTR [rbx+0x320]
  411ad2:	mov    rdx,QWORD PTR [rbx+0x328]
  411ad9:	mov    r9d,DWORD PTR [rsp+0x2c]
  411ade:	mov    r8,QWORD PTR [rsp+0x20]
  411ae3:	jmp    0x4119de
  411ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  411af0:	or     BYTE PTR [rbx+0x358],0x2
  411af7:	jmp    0x4119fb
  411afc:	nop    DWORD PTR [rax+0x0]
  411b00:	push   r12
  411b02:	push   rbp
  411b03:	push   rdi
  411b04:	push   rsi
  411b05:	push   rbx
  411b06:	sub    rsp,0x30
  411b0a:	mov    rdi,QWORD PTR [rcx]
  411b0d:	lea    r12,[rip+0x3496c]        # 0x446480
  411b14:	mov    rsi,rcx
  411b17:	mov    rbx,QWORD PTR [rdi+0x60]
  411b1b:	mov    rbp,QWORD PTR [rdi+0x50]
  411b1f:	test   rbx,rbx
  411b22:	je     0x411b5e
  411b24:	movsxd rax,DWORD PTR [rbx+0x1c]
  411b28:	mov    r8d,DWORD PTR [rbx+0x8]
  411b2c:	xor    r9d,r9d
  411b2f:	mov    edx,0x3
  411b34:	mov    rcx,rsi
  411b37:	lea    rax,[rax+rax*2]
  411b3b:	mov    rax,QWORD PTR [r12+rax*8+0x8]
  411b40:	mov    QWORD PTR [rsp+0x28],rax
  411b45:	lea    rax,[rip+0x34817]        # 0x446363
  411b4c:	mov    QWORD PTR [rsp+0x20],rax
  411b51:	call   0x412740
  411b56:	mov    rbx,QWORD PTR [rbx]
  411b59:	test   rbx,rbx
  411b5c:	jne    0x411b24
  411b5e:	mov    BYTE PTR [rsi+0x12],0x0
  411b62:	mov    rax,QWORD PTR [rdi+0x48]
  411b66:	mov    rcx,QWORD PTR [rdi+0x30]
  411b6a:	mov    rbx,QWORD PTR [rdi+0x28]
  411b6e:	mov    QWORD PTR [rsi],rax
  411b71:	call   0x43f100
  411b76:	cmp    rdi,QWORD PTR [rsi+0x310]
  411b7d:	jbe    0x411b88
  411b7f:	cmp    rdi,QWORD PTR [rsi+0x328]
  411b86:	jb     0x411bd1
  411b88:	lea    rcx,[rsi+0x308]
  411b8f:	mov    rdx,rdi
  411b92:	call   0x438480
  411b97:	test   rbp,rbp
  411b9a:	je     0x411bc6
  411b9c:	mov    r8,rbx
  411b9f:	mov    rdx,rbp
  411ba2:	mov    rcx,rsi
  411ba5:	call   0x418810
  411baa:	mov    DWORD PTR [rsp+0x20],0x0
  411bb2:	xor    r9d,r9d
  411bb5:	xor    r8d,r8d
  411bb8:	mov    edx,0x1
  411bbd:	mov    rcx,rsi
  411bc0:	call   0x4111d0
  411bc5:	nop
  411bc6:	add    rsp,0x30
  411bca:	pop    rbx
  411bcb:	pop    rsi
  411bcc:	pop    rdi
  411bcd:	pop    rbp
  411bce:	pop    r12
  411bd0:	ret    
  411bd1:	mov    QWORD PTR [rsi+0x318],rdi
  411bd8:	mov    QWORD PTR [rsi+0x320],rdi
  411bdf:	jmp    0x411b97
  411be1:	nop    DWORD PTR [rax+rax*1+0x0]
  411be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411bf0:	push   rbp
  411bf1:	push   r13
  411bf3:	push   r12
  411bf5:	push   rdi
  411bf6:	push   rsi
  411bf7:	push   rbx
  411bf8:	sub    rsp,0x38
  411bfc:	lea    rbp,[rsp+0x80]
  411c04:	mov    rbx,QWORD PTR [rcx+0x528]
  411c0b:	mov    rdi,rcx
  411c0e:	call   0x4101e0
  411c13:	test   rax,rax
  411c16:	mov    r8,rax
  411c19:	je     0x411e70
  411c1f:	mov    ecx,DWORD PTR [rax+0x8]
  411c22:	lea    edx,[rcx+0x2]
  411c25:	add    rdx,0x1e
  411c29:	shr    rdx,0x4
  411c2d:	mov    rax,rdx
  411c30:	shl    rax,0x4
  411c34:	call   0x439cf0
  411c39:	mov    rdx,QWORD PTR [r8+0x10]
  411c3d:	sub    rsp,rax
  411c40:	xor    eax,eax
  411c42:	lea    rsi,[rsp+0x30]
  411c47:	cmp    BYTE PTR [rdx],0x4c
  411c4a:	mov    r8,rsi
  411c4d:	sete   al
  411c50:	lea    rax,[rdx+rax*1+0x1]
  411c55:	lea    rdx,[rdx+rcx*1-0x1]
  411c5a:	cmp    rax,rdx
  411c5d:	jb     0x411c72
  411c5f:	jmp    0x411c93
  411c61:	add    rax,0x1
  411c65:	add    r8,0x1
  411c69:	mov    BYTE PTR [r8-0x1],r9b
  411c6d:	cmp    rdx,rax
  411c70:	jbe    0x411c93
  411c72:	movzx  r9d,BYTE PTR [rax]
  411c76:	cmp    r9b,0x5c
  411c7a:	jne    0x411c61
  411c7c:	movzx  ecx,BYTE PTR [rax+0x1]
  411c80:	cmp    cl,0x22
  411c83:	je     0x411c8a
  411c85:	cmp    cl,0x5c
  411c88:	jne    0x411c61
  411c8a:	add    rax,0x1
  411c8e:	mov    r9d,ecx
  411c91:	jmp    0x411c61
  411c93:	xor    edx,edx
  411c95:	mov    BYTE PTR [r8],0x0
  411c99:	mov    rcx,rdi
  411c9c:	call   0x40f990
  411ca1:	mov    rcx,rdi
  411ca4:	call   0x4102c0
  411ca9:	test   rbx,rbx
  411cac:	je     0x411d53
  411cb2:	xor    r13d,r13d
  411cb5:	jmp    0x411ccf
  411cb7:	nop    WORD PTR [rax+rax*1+0x0]
  411cc0:	test   rax,rax
  411cc3:	mov    r13,rbx
  411cc6:	je     0x411d53
  411ccc:	mov    rbx,rax
  411ccf:	mov    r12,QWORD PTR [rbx+0x8]
  411cd3:	mov    rdx,rsi
  411cd6:	mov    rcx,r12
  411cd9:	call   0x43f048
  411cde:	test   eax,eax
  411ce0:	mov    rax,QWORD PTR [rbx]
  411ce3:	jne    0x411cc0
  411ce5:	test   r13,r13
  411ce8:	je     0x411eb7
  411cee:	mov    QWORD PTR [r13+0x0],rax
  411cf2:	mov    rdx,r12
  411cf5:	mov    rcx,rdi
  411cf8:	call   0x419d80
  411cfd:	test   rax,rax
  411d00:	mov    rsi,rax
  411d03:	je     0x411d38
  411d05:	mov    rax,QWORD PTR [rdi+0x3e0]
  411d0c:	test   rax,rax
  411d0f:	je     0x411d16
  411d11:	mov    rcx,rdi
  411d14:	call   rax
  411d16:	movzx  r9d,BYTE PTR [rsi+0x18]
  411d1b:	and    r9d,0x3f
  411d1f:	cmp    r9b,0x1
  411d23:	je     0x411e40
  411d29:	test   r9b,r9b
  411d2c:	jne    0x411e31
  411d32:	test   BYTE PTR [rbx+0x1c],0x4
  411d36:	je     0x411d60
  411d38:	mov    rcx,QWORD PTR [rbx+0x10]
  411d3c:	call   0x43f100
  411d41:	mov    rcx,QWORD PTR [rbx+0x8]
  411d45:	call   0x43f100
  411d4a:	mov    rcx,rbx
  411d4d:	call   0x43f100
  411d52:	nop
  411d53:	lea    rsp,[rbp-0x48]
  411d57:	pop    rbx
  411d58:	pop    rsi
  411d59:	pop    rdi
  411d5a:	pop    r12
  411d5c:	pop    r13
  411d5e:	pop    rbp
  411d5f:	ret    
  411d60:	mov    rsi,QWORD PTR [rbx+0x10]
  411d64:	lea    rdx,[rip+0x34631]        # 0x44639c
  411d6b:	mov    rcx,rsi
  411d6e:	call   0x43f038
  411d73:	movsxd r12,eax
  411d76:	mov    rdx,rsi
  411d79:	mov    rcx,rdi
  411d7c:	mov    r8d,r12d
  411d7f:	call   0x418eb0
  411d84:	add    r12,QWORD PTR [rbx+0x10]
  411d88:	and    BYTE PTR [rax+0x18],0xc0
  411d8c:	mov    edx,0xa
  411d91:	and    WORD PTR [rax+0x18],0xd67f
  411d97:	mov    rsi,rax
  411d9a:	mov    rcx,r12
  411d9d:	call   0x43f050
  411da2:	sub    rax,r12
  411da5:	mov    rdx,r12
  411da8:	mov    r9d,0x1
  411dae:	mov    r8,rax
  411db1:	mov    rcx,rdi
  411db4:	call   0x4119b0
  411db9:	test   rax,rax
  411dbc:	mov    r12,rax
  411dbf:	je     0x411ee0
  411dc5:	mov    rcx,rdi
  411dc8:	call   0x4195a0
  411dcd:	mov    BYTE PTR [r12+0x6d],0x1
  411dd3:	mov    rdx,rsi
  411dd6:	mov    rcx,rdi
  411dd9:	call   0x40c8f0
  411dde:	test   al,al
  411de0:	je     0x411ee0
  411de6:	mov    rcx,rdi
  411de9:	call   0x411b00
  411dee:	mov    rax,QWORD PTR [rsi+0x20]
  411df2:	mov    edx,DWORD PTR [rbx+0x18]
  411df5:	mov    DWORD PTR [rax+0x10],edx
  411df8:	mov    rcx,QWORD PTR [rsi+0x20]
  411dfc:	movzx  eax,BYTE PTR [rbx+0x1c]
  411e00:	movzx  edx,BYTE PTR [rcx+0x1c]
  411e04:	and    eax,0x1
  411e07:	shl    eax,0x2
  411e0a:	and    edx,0xfffffffb
  411e0d:	or     eax,edx
  411e0f:	mov    BYTE PTR [rcx+0x1c],al
  411e12:	mov    rcx,QWORD PTR [rsi+0x20]
  411e16:	movzx  eax,BYTE PTR [rbx+0x1c]
  411e1a:	movzx  edx,BYTE PTR [rcx+0x1c]
  411e1e:	shl    eax,0x2
  411e21:	and    eax,0x8
  411e24:	and    edx,0xfffffff7
  411e27:	or     eax,edx
  411e29:	mov    BYTE PTR [rcx+0x1c],al
  411e2c:	jmp    0x411d38
  411e31:	mov    rcx,rsi
  411e34:	call   0x40c7f0
  411e39:	jmp    0x411d32
  411e3e:	xchg   ax,ax
  411e40:	mov    rax,QWORD PTR [rdi+0x390]
  411e47:	test   rax,rax
  411e4a:	je     0x411ec3
  411e4c:	mov    edx,DWORD PTR [rdi+0x30]
  411e4f:	mov    r8,rsi
  411e52:	mov    rcx,rdi
  411e55:	call   rax
  411e57:	cmp    BYTE PTR [rdi+0x434],0x0
  411e5e:	jne    0x411ed0
  411e60:	movzx  r9d,BYTE PTR [rsi+0x18]
  411e65:	and    r9d,0x3f
  411e69:	jmp    0x411d29
  411e6e:	xchg   ax,ax
  411e70:	mov    rax,QWORD PTR [rdi+0x1a8]
  411e77:	xor    r9d,r9d
  411e7a:	mov    rcx,rdi
  411e7d:	mov    edx,0x3
  411e82:	mov    r8d,DWORD PTR [rax-0x18]
  411e86:	lea    rax,[rip+0x344eb]        # 0x446378
  411e8d:	mov    QWORD PTR [rsp+0x20],rax
  411e92:	call   0x412740
  411e97:	xor    edx,edx
  411e99:	mov    rcx,rdi
  411e9c:	call   0x40f990
  411ea1:	mov    rcx,rdi
  411ea4:	call   0x4102c0
  411ea9:	nop
  411eaa:	lea    rsp,[rbp-0x48]
  411eae:	pop    rbx
  411eaf:	pop    rsi
  411eb0:	pop    rdi
  411eb1:	pop    r12
  411eb3:	pop    r13
  411eb5:	pop    rbp
  411eb6:	ret    
  411eb7:	mov    QWORD PTR [rdi+0x528],rax
  411ebe:	jmp    0x411cf2
  411ec3:	cmp    BYTE PTR [rdi+0x434],0x0
  411eca:	je     0x411e31
  411ed0:	xor    r8d,r8d
  411ed3:	mov    rdx,rsi
  411ed6:	mov    rcx,rdi
  411ed9:	call   0x409ec0
  411ede:	jmp    0x411e60
  411ee0:	call   0x43f180
  411ee5:	nop
  411ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411ef0:	push   rbp
  411ef1:	push   r15
  411ef3:	push   r14
  411ef5:	push   r13
  411ef7:	push   r12
  411ef9:	push   rdi
  411efa:	push   rsi
  411efb:	push   rbx
  411efc:	sub    rsp,0x38
  411f00:	lea    rbp,[rsp+0x80]
  411f08:	lea    eax,[rdx-0x1]
  411f0b:	mov    rbx,rcx
  411f0e:	add    rax,0x1e
  411f12:	shr    rax,0x4
  411f16:	shl    rax,0x4
  411f1a:	call   0x439cf0
  411f1f:	mov    rcx,QWORD PTR [r8]
  411f22:	sub    rsp,rax
  411f25:	xor    eax,eax
  411f27:	mov    edx,edx
  411f29:	lea    rsi,[rsp+0x20]
  411f2e:	cmp    BYTE PTR [rcx],0x4c
  411f31:	lea    r9,[rcx+rdx*1-0x1]
  411f36:	sete   al
  411f39:	lea    rax,[rcx+rax*1+0x1]
  411f3e:	mov    rcx,rsi
  411f41:	cmp    rax,r9
  411f44:	jb     0x411f61
  411f46:	jmp    0x4121a5
  411f4b:	nop    DWORD PTR [rax+rax*1+0x0]
  411f50:	add    rax,0x1
  411f54:	add    rcx,0x1
  411f58:	mov    BYTE PTR [rcx-0x1],r8b
  411f5c:	cmp    r9,rax
  411f5f:	jbe    0x411f82
  411f61:	movzx  r8d,BYTE PTR [rax]
  411f65:	cmp    r8b,0x5c
  411f69:	jne    0x411f50
  411f6b:	movzx  edx,BYTE PTR [rax+0x1]
  411f6f:	cmp    dl,0x22
  411f72:	je     0x411f79
  411f74:	cmp    dl,0x5c
  411f77:	jne    0x411f50
  411f79:	add    rax,0x1
  411f7d:	mov    r8d,edx
  411f80:	jmp    0x411f50
  411f82:	mov    rdi,rcx
  411f85:	sub    rdi,rsi
  411f88:	mov    rax,QWORD PTR [rbx+0x1a8]
  411f8f:	mov    BYTE PTR [rcx],0xa
  411f92:	mov    edx,0x38
  411f97:	mov    ecx,0x1
  411f9c:	mov    r14,QWORD PTR [rbx+0x88]
  411fa3:	mov    QWORD PTR [rbp-0x58],rax
  411fa7:	mov    rax,QWORD PTR [rbx+0x1d0]
  411fae:	mov    QWORD PTR [rbp-0x60],rax
  411fb2:	call   0x438600
  411fb7:	mov    rdx,rsi
  411fba:	mov    QWORD PTR [rbx+0x88],rax
  411fc1:	mov    r9d,0x1
  411fc7:	mov    r8,rdi
  411fca:	mov    rcx,rbx
  411fcd:	call   0x4119b0
  411fd2:	mov    rax,QWORD PTR [rbx]
  411fd5:	mov    rdx,QWORD PTR [rax+0x48]
  411fd9:	test   rdx,rdx
  411fdc:	je     0x411fe6
  411fde:	mov    rdx,QWORD PTR [rdx+0x50]
  411fe2:	mov    QWORD PTR [rax+0x50],rdx
  411fe6:	mov    rax,QWORD PTR [rbx+0x28]
  411fea:	mov    BYTE PTR [rbx+0x10],0x1
  411fee:	mov    rcx,rbx
  411ff1:	mov    BYTE PTR [rbx+0x15],0x0
  411ff5:	mov    BYTE PTR [rbx+0x9c],0x51
  411ffc:	mov    eax,DWORD PTR [rax+0x3c]
  411fff:	mov    DWORD PTR [rbx+0x30],eax
  412002:	call   0x4195a0
  412007:	lea    rax,[rip+0x3457a]        # 0x446588
  41200e:	mov    rsi,QWORD PTR [rbx+0x90]
  412015:	mov    rcx,rbx
  412018:	mov    QWORD PTR [rbx+0x90],rax
  41201f:	call   0x40f390
  412024:	mov    edx,0x1
  412029:	mov    rcx,rbx
  41202c:	call   0x4104b0
  412031:	cmp    BYTE PTR [rbx+0x9c],0x4f
  412038:	mov    QWORD PTR [rbx+0x90],rsi
  41203f:	je     0x4120f4
  412045:	mov    ecx,0x18
  41204a:	mov    r15d,0x1
  412050:	call   0x4385d0
  412055:	mov    r12,rax
  412058:	mov    rax,QWORD PTR [rbx+0x98]
  41205f:	mov    QWORD PTR [r12],rax
  412063:	mov    rax,QWORD PTR [rbx+0xa0]
  41206a:	mov    QWORD PTR [r12+0x8],rax
  41206f:	mov    rax,QWORD PTR [rbx+0xa8]
  412076:	mov    QWORD PTR [r12+0x10],rax
  41207b:	mov    rax,QWORD PTR [rbx+0x368]
  412082:	test   rax,rax
  412085:	je     0x412096
  412087:	mov    rdx,QWORD PTR [rbx+0x1a8]
  41208e:	xor    r8d,r8d
  412091:	mov    rcx,rbx
  412094:	call   rax
  412096:	mov    rax,QWORD PTR [rbx]
  412099:	mov    rcx,rbx
  41209c:	mov    QWORD PTR [rax+0x50],0x0
  4120a4:	call   0x411b00
  4120a9:	mov    rcx,QWORD PTR [rbx+0x88]
  4120b0:	call   0x43f100
  4120b5:	mov    rax,QWORD PTR [rbp-0x58]
  4120b9:	mov    QWORD PTR [rbx+0x88],r14
  4120c0:	mov    r9d,r15d
  4120c3:	mov    r8,r12
  4120c6:	xor    edx,edx
  4120c8:	mov    rcx,rbx
  4120cb:	mov    QWORD PTR [rbx+0x1a8],rax
  4120d2:	mov    rax,QWORD PTR [rbp-0x60]
  4120d6:	mov    QWORD PTR [rbx+0x1d0],rax
  4120dd:	call   0x40a480
  4120e2:	nop
  4120e3:	lea    rsp,[rbp-0x48]
  4120e7:	pop    rbx
  4120e8:	pop    rsi
  4120e9:	pop    rdi
  4120ea:	pop    r12
  4120ec:	pop    r13
  4120ee:	pop    r14
  4120f0:	pop    r15
  4120f2:	pop    rbp
  4120f3:	ret    
  4120f4:	mov    ecx,0x4b0
  4120f9:	mov    r13d,0x18
  4120ff:	mov    r15d,0x1
  412105:	call   0x4385d0
  41210a:	mov    r12,rax
  41210d:	mov    rax,QWORD PTR [rbx+0x98]
  412114:	mov    edi,0x32
  412119:	mov    QWORD PTR [r12],rax
  41211d:	mov    rax,QWORD PTR [rbx+0xa0]
  412124:	mov    QWORD PTR [r12+0x8],rax
  412129:	mov    rax,QWORD PTR [rbx+0xa8]
  412130:	mov    QWORD PTR [r12+0x10],rax
  412135:	jmp    0x412144
  412137:	nop    WORD PTR [rax+rax*1+0x0]
  412140:	add    r13,0x18
  412144:	mov    rcx,rbx
  412147:	lea    rsi,[r12+r13*1]
  41214b:	add    r15d,0x1
  41214f:	call   0x40c760
  412154:	mov    rdx,QWORD PTR [rax]
  412157:	mov    QWORD PTR [rsi],rdx
  41215a:	mov    rdx,QWORD PTR [rax+0x8]
  41215e:	mov    QWORD PTR [rsi+0x8],rdx
  412162:	mov    rax,QWORD PTR [rax+0x10]
  412166:	or     WORD PTR [rsi+0x6],0x20
  41216b:	cmp    BYTE PTR [r12+r13*1+0x4],0x50
  412171:	mov    QWORD PTR [rsi+0x10],rax
  412175:	je     0x412096
  41217b:	cmp    r15d,edi
  41217e:	jne    0x412140
  412180:	lea    eax,[r15+r15*2]
  412184:	mov    rcx,r12
  412187:	mov    edi,eax
  412189:	shr    edi,0x1f
  41218c:	add    edi,eax
  41218e:	sar    edi,1
  412190:	movsxd rax,edi
  412193:	lea    rdx,[rax+rax*2]
  412197:	shl    rdx,0x3
  41219b:	call   0x438650
  4121a0:	mov    r12,rax
  4121a3:	jmp    0x412140
  4121a5:	xor    edi,edi
  4121a7:	jmp    0x411f88
  4121ac:	nop    DWORD PTR [rax+0x0]
  4121b0:	push   rbx
  4121b1:	sub    rsp,0x20
  4121b5:	mov    rbx,rcx
  4121b8:	call   0x4101e0
  4121bd:	test   rax,rax
  4121c0:	mov    BYTE PTR [rbx+0x9c],0x51
  4121c7:	je     0x4121e3
  4121c9:	mov    edx,DWORD PTR [rax+0x8]
  4121cc:	lea    r8,[rax+0x10]
  4121d0:	mov    rcx,rbx
  4121d3:	call   0x411ef0
  4121d8:	mov    eax,0x1
  4121dd:	add    rsp,0x20
  4121e1:	pop    rbx
  4121e2:	ret    
  4121e3:	lea    r8,[rip+0x341b6]        # 0x4463a0
  4121ea:	mov    edx,0x3
  4121ef:	mov    rcx,rbx
  4121f2:	call   0x412660
  4121f7:	xor    eax,eax
  4121f9:	add    rsp,0x20
  4121fd:	pop    rbx
  4121fe:	ret    
  4121ff:	nop
  412200:	push   rsi
  412201:	push   rbx
  412202:	sub    rsp,0x28
  412206:	mov    rbx,rcx
  412209:	mov    esi,edx
  41220b:	mov    rdx,r8
  41220e:	mov    r8,r9
  412211:	mov    r9d,0x1
  412217:	call   0x4119b0
  41221c:	mov    rax,QWORD PTR [rbx+0x28]
  412220:	mov    BYTE PTR [rbx+0x10],0x1
  412224:	mov    rcx,rbx
  412227:	mov    BYTE PTR [rbx+0x15],0x0
  41222b:	mov    BYTE PTR [rbx+0x9c],0x51
  412232:	mov    eax,DWORD PTR [rax+0x3c]
  412235:	mov    DWORD PTR [rbx+0x30],eax
  412238:	call   0x4195a0
  41223d:	movsxd rdx,esi
  412240:	lea    rax,[rip+0x34239]        # 0x446480
  412247:	cmp    BYTE PTR [rbx+0x43d],0x0
  41224e:	lea    rdx,[rdx+rdx*2]
  412252:	lea    rax,[rax+rdx*8]
  412256:	mov    QWORD PTR [rbx+0x90],rax
  41225d:	je     0x41226e
  41225f:	mov    rcx,rbx
  412262:	call   0x40f7f0
  412267:	mov    rax,QWORD PTR [rbx+0x90]
  41226e:	mov    rcx,rbx
  412271:	call   QWORD PTR [rax]
  412273:	mov    rcx,rbx
  412276:	mov    edx,0x1
  41227b:	call   0x4104b0
  412280:	mov    rcx,rbx
  412283:	add    rsp,0x28
  412287:	pop    rbx
  412288:	pop    rsi
  412289:	jmp    0x411b00
  41228e:	xchg   ax,ax
  412290:	push   rbp
  412291:	push   r12
  412293:	push   rdi
  412294:	push   rsi
  412295:	push   rbx
  412296:	mov    rbp,rsp
  412299:	sub    rsp,0x20
  41229d:	mov    r12,rcx
  4122a0:	mov    rcx,rdx
  4122a3:	mov    rdi,rdx
  4122a6:	call   0x43f028
  4122ab:	lea    r10,[rax+0x21]
  4122af:	mov    rbx,rax
  4122b2:	mov    rax,r10
  4122b5:	and    rax,0xfffffffffffffff0
  4122b9:	call   0x439cf0
  4122be:	sub    rsp,rax
  4122c1:	mov    r8,rbx
  4122c4:	mov    rdx,rdi
  4122c7:	lea    rsi,[rsp+0x20]
  4122cc:	mov    rcx,rsi
  4122cf:	call   0x43f0a8
  4122d4:	mov    edx,0x3d
  4122d9:	mov    rcx,rdi
  4122dc:	call   0x43f050
  4122e1:	test   rax,rax
  4122e4:	je     0x412310
  4122e6:	sub    rax,rdi
  4122e9:	mov    BYTE PTR [rsi+rax*1],0x20
  4122ed:	mov    r9,rbx
  4122f0:	mov    r8,rsi
  4122f3:	xor    edx,edx
  4122f5:	mov    rcx,r12
  4122f8:	mov    BYTE PTR [rsi+rbx*1],0xa
  4122fc:	call   0x412200
  412301:	nop
  412302:	mov    rsp,rbp
  412305:	pop    rbx
  412306:	pop    rsi
  412307:	pop    rdi
  412308:	pop    r12
  41230a:	pop    rbp
  41230b:	ret    
  41230c:	nop    DWORD PTR [rax+0x0]
  412310:	lea    rax,[rbx+0x1]
  412314:	mov    BYTE PTR [rsi+rbx*1],0x20
  412318:	add    rbx,0x2
  41231c:	mov    BYTE PTR [rsi+rax*1],0x31
  412320:	jmp    0x4122ed
  412322:	nop    DWORD PTR [rax+0x0]
  412326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412330:	push   rbx
  412331:	sub    rsp,0x30
  412335:	mov    rbx,rcx
  412338:	mov    QWORD PTR [rsp+0x50],r8
  41233d:	lea    rcx,[rsp+0x20]
  412342:	lea    r8,[rsp+0x50]
  412347:	mov    QWORD PTR [rsp+0x58],r9
  41234c:	mov    QWORD PTR [rsp+0x20],0x0
  412355:	mov    QWORD PTR [rsp+0x28],r8
  41235a:	call   0x43a3d0
  41235f:	mov    rdx,QWORD PTR [rsp+0x20]
  412364:	mov    rcx,rbx
  412367:	call   0x412290
  41236c:	mov    rcx,QWORD PTR [rsp+0x20]
  412371:	call   0x43f100
  412376:	nop
  412377:	add    rsp,0x30
  41237b:	pop    rbx
  41237c:	ret    
  41237d:	nop    DWORD PTR [rax]
  412380:	push   rbp
  412381:	push   rdi
  412382:	push   rsi
  412383:	push   rbx
  412384:	sub    rsp,0x28
  412388:	lea    rbp,[rsp+0x80]
  412390:	mov    rdi,rcx
  412393:	mov    rcx,rdx
  412396:	mov    rsi,rdx
  412399:	call   0x43f028
  41239e:	lea    r10,[rax+0x1f]
  4123a2:	mov    rbx,rax
  4123a5:	mov    rax,r10
  4123a8:	and    rax,0xfffffffffffffff0
  4123ac:	call   0x439cf0
  4123b1:	sub    rsp,rax
  4123b4:	mov    r8,rbx
  4123b7:	mov    rdx,rsi
  4123ba:	lea    r10,[rsp+0x20]
  4123bf:	mov    rcx,r10
  4123c2:	call   0x43f0a8
  4123c7:	mov    r9,rbx
  4123ca:	mov    BYTE PTR [rax+rbx*1],0xa
  4123ce:	mov    r8,rax
  4123d1:	xor    edx,edx
  4123d3:	mov    rcx,rdi
  4123d6:	call   0x412200
  4123db:	nop
  4123dc:	lea    rsp,[rbp-0x58]
  4123e0:	pop    rbx
  4123e1:	pop    rsi
  4123e2:	pop    rdi
  4123e3:	pop    rbp
  4123e4:	ret    
  4123e5:	nop
  4123e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4123f0:	push   rbp
  4123f1:	push   rdi
  4123f2:	push   rsi
  4123f3:	push   rbx
  4123f4:	sub    rsp,0x28
  4123f8:	lea    rbp,[rsp+0x80]
  412400:	mov    rdi,rcx
  412403:	mov    rcx,rdx
  412406:	mov    rsi,rdx
  412409:	call   0x43f028
  41240e:	lea    r10,[rax+0x1f]
  412412:	mov    rbx,rax
  412415:	mov    rax,r10
  412418:	and    rax,0xfffffffffffffff0
  41241c:	call   0x439cf0
  412421:	sub    rsp,rax
  412424:	mov    r8,rbx
  412427:	mov    rdx,rsi
  41242a:	lea    r10,[rsp+0x20]
  41242f:	mov    rcx,r10
  412432:	call   0x43f0a8
  412437:	mov    r9,rbx
  41243a:	mov    BYTE PTR [rax+rbx*1],0xa
  41243e:	mov    r8,rax
  412441:	mov    edx,0x7
  412446:	mov    rcx,rdi
  412449:	call   0x412200
  41244e:	nop
  41244f:	lea    rsp,[rbp-0x58]
  412453:	pop    rbx
  412454:	pop    rsi
  412455:	pop    rdi
  412456:	pop    rbp
  412457:	ret    
  412458:	nop    DWORD PTR [rax+rax*1+0x0]
  412460:	push   rbp
  412461:	push   r13
  412463:	push   r12
  412465:	push   rdi
  412466:	push   rsi
  412467:	push   rbx
  412468:	sub    rsp,0x28
  41246c:	lea    rbp,[rsp+0x80]
  412474:	mov    rbx,rdx
  412477:	mov    rsi,rcx
  41247a:	mov    rcx,rdx
  41247d:	mov    edi,r8d
  412480:	call   0x43f028
  412485:	mov    edx,0x3d
  41248a:	mov    r12,rax
  41248d:	mov    rcx,rbx
  412490:	call   0x43f050
  412495:	lea    r9,[r12+0x20]
  41249a:	mov    r13,rax
  41249d:	mov    rax,r9
  4124a0:	and    rax,0xfffffffffffffff0
  4124a4:	call   0x439cf0
  4124a9:	sub    rsp,rax
  4124ac:	mov    r8,r12
  4124af:	mov    rdx,rbx
  4124b2:	lea    r10,[rsp+0x20]
  4124b7:	mov    rcx,r10
  4124ba:	call   0x43f0a8
  4124bf:	test   r13,r13
  4124c2:	mov    r10,rax
  4124c5:	je     0x412500
  4124c7:	sub    r13,rbx
  4124ca:	lea    r9,[r12+0x1]
  4124cf:	mov    BYTE PTR [rax+r13*1],0x28
  4124d4:	mov    BYTE PTR [rax+r12*1],0x29
  4124d9:	mov    BYTE PTR [r10+r9*1],0xa
  4124de:	mov    r8,r10
  4124e1:	mov    edx,edi
  4124e3:	mov    rcx,rsi
  4124e6:	call   0x412200
  4124eb:	nop
  4124ec:	lea    rsp,[rbp-0x58]
  4124f0:	pop    rbx
  4124f1:	pop    rsi
  4124f2:	pop    rdi
  4124f3:	pop    r12
  4124f5:	pop    r13
  4124f7:	pop    rbp
  4124f8:	ret    
  4124f9:	nop    DWORD PTR [rax+0x0]
  412500:	mov    r9,r12
  412503:	jmp    0x4124d9
  412505:	nop
  412506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412510:	mov    r8d,0x10
  412516:	jmp    0x412460
  41251b:	nop    DWORD PTR [rax+rax*1+0x0]
  412520:	mov    r8d,0x11
  412526:	jmp    0x412460
  41252b:	nop    DWORD PTR [rax+rax*1+0x0]
  412530:	push   rdi
  412531:	push   rsi
  412532:	push   rbx
  412533:	sub    rsp,0x20
  412537:	lea    rsi,[rip+0x33f52]        # 0x446490
  41253e:	xor    ebx,ebx
  412540:	mov    rdi,rcx
  412543:	movzx  r8d,WORD PTR [rsi]
  412547:	mov    rdx,QWORD PTR [rsi-0x8]
  41254b:	mov    rcx,rdi
  41254e:	add    rsi,0x18
  412552:	call   0x418eb0
  412557:	lea    edx,[rbx+rbx*1+0x1]
  41255b:	add    ebx,0x1
  41255e:	and    ebx,0x7f
  412561:	cmp    bl,0x13
  412564:	mov    BYTE PTR [rax+0x10],dl
  412567:	jne    0x412543
  412569:	add    rsp,0x20
  41256d:	pop    rbx
  41256e:	pop    rsi
  41256f:	pop    rdi
  412570:	ret    
  412571:	nop    DWORD PTR [rax+rax*1+0x0]
  412576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412580:	jmp    0x40f1b0
  412585:	nop
  412586:	nop
  412587:	nop
  412588:	nop
  412589:	nop
  41258a:	nop
  41258b:	nop
  41258c:	nop
  41258d:	nop
  41258e:	nop
  41258f:	nop
  412590:	sub    rsp,0x48
  412594:	cmp    BYTE PTR [rcx+0x43d],0x0
  41259b:	je     0x4125b0
  41259d:	cmp    BYTE PTR [rcx+0x10],0x0
  4125a1:	je     0x4125f5
  4125a3:	mov    r10d,DWORD PTR [rcx+0x30]
  4125a7:	jmp    0x4125c8
  4125a9:	nop    DWORD PTR [rax+0x0]
  4125b0:	mov    r10,QWORD PTR [rcx+0x1d0]
  4125b7:	mov    rax,QWORD PTR [rcx+0x1a8]
  4125be:	cmp    rax,QWORD PTR [r10+0x10]
  4125c2:	je     0x412600
  4125c4:	mov    r10d,DWORD PTR [rax-0x18]
  4125c8:	mov    rax,QWORD PTR [rcx+0x3c8]
  4125cf:	test   rax,rax
  4125d2:	je     0x412617
  4125d4:	mov    r11,QWORD PTR [rsp+0x70]
  4125d9:	mov    QWORD PTR [rsp+0x28],r9
  4125de:	mov    r9d,r10d
  4125e1:	mov    DWORD PTR [rsp+0x20],0x0
  4125e9:	mov    QWORD PTR [rsp+0x30],r11
  4125ee:	call   rax
  4125f0:	add    rsp,0x48
  4125f4:	ret    
  4125f5:	mov    rax,QWORD PTR [rcx+0x28]
  4125f9:	mov    r10d,DWORD PTR [rax+0x3c]
  4125fd:	jmp    0x4125c8
  4125ff:	nop
  412600:	mov    rax,QWORD PTR [r10+0x8]
  412604:	test   rax,rax
  412607:	je     0x412612
  412609:	mov    rax,QWORD PTR [rax+0x18]
  41260d:	mov    r10d,DWORD PTR [rax]
  412610:	jmp    0x4125c8
  412612:	xor    r10d,r10d
  412615:	jmp    0x4125c8
  412617:	call   0x43f180
  41261c:	nop
  41261d:	nop    DWORD PTR [rax]
  412620:	push   rbx
  412621:	sub    rsp,0x20
  412625:	mov    rax,QWORD PTR [rcx+0x3c8]
  41262c:	mov    r10d,DWORD PTR [rsp+0x50]
  412631:	mov    r11,QWORD PTR [rsp+0x58]
  412636:	mov    rbx,QWORD PTR [rsp+0x60]
  41263b:	test   rax,rax
  41263e:	je     0x412657
  412640:	mov    QWORD PTR [rsp+0x60],rbx
  412645:	mov    QWORD PTR [rsp+0x58],r11
  41264a:	mov    DWORD PTR [rsp+0x50],r10d
  41264f:	add    rsp,0x20
  412653:	pop    rbx
  412654:	rex.W jmp rax
  412657:	call   0x43f180
  41265c:	nop
  41265d:	nop    DWORD PTR [rax]
  412660:	sub    rsp,0x48
  412664:	lea    rax,[rsp+0x68]
  412669:	mov    QWORD PTR [rsp+0x68],r9
  41266e:	mov    r9,r8
  412671:	xor    r8d,r8d
  412674:	mov    QWORD PTR [rsp+0x38],rax
  412679:	lea    rax,[rsp+0x38]
  41267e:	mov    QWORD PTR [rsp+0x20],rax
  412683:	call   0x412590
  412688:	add    rsp,0x48
  41268c:	ret    
  41268d:	nop    DWORD PTR [rax]
  412690:	sub    rsp,0x48
  412694:	lea    rax,[rsp+0x68]
  412699:	mov    QWORD PTR [rsp+0x68],r9
  41269e:	mov    r9,r8
  4126a1:	mov    r8d,edx
  4126a4:	xor    edx,edx
  4126a6:	mov    QWORD PTR [rsp+0x38],rax
  4126ab:	lea    rax,[rsp+0x38]
  4126b0:	mov    QWORD PTR [rsp+0x20],rax
  4126b5:	call   0x412590
  4126ba:	add    rsp,0x48
  4126be:	ret    
  4126bf:	nop
  4126c0:	sub    rsp,0x48
  4126c4:	lea    rax,[rsp+0x68]
  4126c9:	mov    QWORD PTR [rsp+0x68],r9
  4126ce:	mov    r9,r8
  4126d1:	mov    r8d,edx
  4126d4:	mov    edx,0x2
  4126d9:	mov    QWORD PTR [rsp+0x38],rax
  4126de:	lea    rax,[rsp+0x38]
  4126e3:	mov    QWORD PTR [rsp+0x20],rax
  4126e8:	call   0x412590
  4126ed:	add    rsp,0x48
  4126f1:	ret    
  4126f2:	nop    DWORD PTR [rax+0x0]
  4126f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412700:	sub    rsp,0x48
  412704:	lea    rax,[rsp+0x68]
  412709:	mov    QWORD PTR [rsp+0x68],r9
  41270e:	mov    r9,r8
  412711:	mov    r8d,edx
  412714:	mov    edx,0x1
  412719:	mov    QWORD PTR [rsp+0x38],rax
  41271e:	lea    rax,[rsp+0x38]
  412723:	mov    QWORD PTR [rsp+0x20],rax
  412728:	call   0x412590
  41272d:	add    rsp,0x48
  412731:	ret    
  412732:	nop    DWORD PTR [rax+0x0]
  412736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412740:	sub    rsp,0x58
  412744:	lea    rax,[rsp+0x88]
  41274c:	mov    DWORD PTR [rsp+0x20],r9d
  412751:	mov    r9d,r8d
  412754:	xor    r8d,r8d
  412757:	mov    QWORD PTR [rsp+0x48],rax
  41275c:	lea    rax,[rsp+0x48]
  412761:	mov    QWORD PTR [rsp+0x30],rax
  412766:	mov    rax,QWORD PTR [rsp+0x80]
  41276e:	mov    QWORD PTR [rsp+0x28],rax
  412773:	call   0x412620
  412778:	add    rsp,0x58
  41277c:	ret    
  41277d:	nop    DWORD PTR [rax]
  412780:	sub    rsp,0x58
  412784:	lea    rax,[rsp+0x88]
  41278c:	mov    DWORD PTR [rsp+0x20],r9d
  412791:	mov    r9d,r8d
  412794:	mov    r8d,edx
  412797:	xor    edx,edx
  412799:	mov    QWORD PTR [rsp+0x48],rax
  41279e:	lea    rax,[rsp+0x48]
  4127a3:	mov    QWORD PTR [rsp+0x30],rax
  4127a8:	mov    rax,QWORD PTR [rsp+0x80]
  4127b0:	mov    QWORD PTR [rsp+0x28],rax
  4127b5:	call   0x412620
  4127ba:	add    rsp,0x58
  4127be:	ret    
  4127bf:	nop
  4127c0:	sub    rsp,0x58
  4127c4:	lea    rax,[rsp+0x88]
  4127cc:	mov    DWORD PTR [rsp+0x20],r9d
  4127d1:	mov    r9d,r8d
  4127d4:	mov    r8d,edx
  4127d7:	mov    edx,0x2
  4127dc:	mov    QWORD PTR [rsp+0x48],rax
  4127e1:	lea    rax,[rsp+0x48]
  4127e6:	mov    QWORD PTR [rsp+0x30],rax
  4127eb:	mov    rax,QWORD PTR [rsp+0x80]
  4127f3:	mov    QWORD PTR [rsp+0x28],rax
  4127f8:	call   0x412620
  4127fd:	add    rsp,0x58
  412801:	ret    
  412802:	nop    DWORD PTR [rax+0x0]
  412806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412810:	sub    rsp,0x58
  412814:	lea    rax,[rsp+0x88]
  41281c:	mov    DWORD PTR [rsp+0x20],r9d
  412821:	mov    r9d,r8d
  412824:	mov    r8d,edx
  412827:	mov    edx,0x1
  41282c:	mov    QWORD PTR [rsp+0x48],rax
  412831:	lea    rax,[rsp+0x48]
  412836:	mov    QWORD PTR [rsp+0x30],rax
  41283b:	mov    rax,QWORD PTR [rsp+0x80]
  412843:	mov    QWORD PTR [rsp+0x28],rax
  412848:	call   0x412620
  41284d:	add    rsp,0x58
  412851:	ret    
  412852:	nop    DWORD PTR [rax+0x0]
  412856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412860:	push   rdi
  412861:	push   rsi
  412862:	push   rbx
  412863:	sub    rsp,0x30
  412867:	mov    rdi,r8
  41286a:	mov    rbx,rcx
  41286d:	mov    esi,edx
  41286f:	call   QWORD PTR [rip+0x48de7]        # 0x45b65c
  412875:	mov    ecx,DWORD PTR [rax]
  412877:	call   0x438700
  41287c:	lea    r8,[rip+0x33dfd]        # 0x446680
  412883:	mov    QWORD PTR [rsp+0x20],rax
  412888:	mov    r9,rdi
  41288b:	mov    edx,esi
  41288d:	mov    rcx,rbx
  412890:	call   0x412660
  412895:	add    rsp,0x30
  412899:	pop    rbx
  41289a:	pop    rsi
  41289b:	pop    rdi
  41289c:	ret    
  41289d:	nop    DWORD PTR [rax]
  4128a0:	push   rdi
  4128a1:	push   rsi
  4128a2:	push   rbx
  4128a3:	sub    rsp,0x30
  4128a7:	cmp    BYTE PTR [r8],0x0
  4128ab:	lea    rax,[rip+0x33dd5]        # 0x446687
  4128b2:	mov    rbx,r8
  4128b5:	mov    rsi,rcx
  4128b8:	mov    edi,edx
  4128ba:	cmove  rbx,rax
  4128be:	call   QWORD PTR [rip+0x48d98]        # 0x45b65c
  4128c4:	mov    ecx,DWORD PTR [rax]
  4128c6:	call   0x438700
  4128cb:	lea    r8,[rip+0x33dae]        # 0x446680
  4128d2:	mov    QWORD PTR [rsp+0x20],rax
  4128d7:	mov    r9,rbx
  4128da:	mov    edx,edi
  4128dc:	mov    rcx,rsi
  4128df:	call   0x412660
  4128e4:	add    rsp,0x30
  4128e8:	pop    rbx
  4128e9:	pop    rsi
  4128ea:	pop    rdi
  4128eb:	ret    
  4128ec:	nop
  4128ed:	nop
  4128ee:	nop
  4128ef:	nop
  4128f0:	mov    r9,QWORD PTR [rdx]
  4128f3:	mov    r10,QWORD PTR [rdx+0x8]
  4128f7:	cmp    r8,0x40
  4128fb:	mov    rax,rcx
  4128fe:	jbe    0x412931
  412900:	lea    rcx,[r8-0x40]
  412904:	cmp    rcx,0x3f
  412908:	ja     0x41291a
  41290a:	mov    r8d,0x1
  412910:	shl    r8,cl
  412913:	sub    r8,0x1
  412917:	and    r9,r8
  41291a:	mov    QWORD PTR [rdx],r9
  41291d:	mov    QWORD PTR [rdx+0x8],r10
  412921:	mov    rdx,QWORD PTR [rdx+0x10]
  412925:	mov    QWORD PTR [rax],r9
  412928:	mov    QWORD PTR [rax+0x8],r10
  41292c:	mov    QWORD PTR [rax+0x10],rdx
  412930:	ret    
  412931:	mov    r9d,0x0
  412937:	je     0x41291a
  412939:	mov    r11d,0x1
  41293f:	mov    ecx,r8d
  412942:	shl    r11,cl
  412945:	sub    r11,0x1
  412949:	and    r10,r11
  41294c:	jmp    0x41291a
  41294e:	xchg   ax,ax
  412950:	push   rbp
  412951:	push   rdi
  412952:	push   rsi
  412953:	push   rbx
  412954:	sub    rsp,0x68
  412958:	mov    rbp,QWORD PTR [rdx]
  41295b:	mov    rdi,QWORD PTR [rdx+0x8]
  41295f:	mov    rbx,rdx
  412962:	mov    rsi,rcx
  412965:	mov    rax,rbp
  412968:	mov    rcx,rbp
  41296b:	mov    rdx,rdi
  41296e:	not    rcx
  412971:	neg    rax
  412974:	neg    rdx
  412977:	cmovne rax,rcx
  41297b:	mov    QWORD PTR [rbx+0x8],rdx
  41297f:	lea    rcx,[rsp+0x40]
  412984:	mov    QWORD PTR [rbx],rax
  412987:	mov    QWORD PTR [rsp+0x20],rax
  41298c:	mov    rax,QWORD PTR [rbx+0x10]
  412990:	mov    QWORD PTR [rsp+0x28],rdx
  412995:	lea    rdx,[rsp+0x20]
  41299a:	mov    QWORD PTR [rsp+0x30],rax
  41299f:	call   0x4128f0
  4129a4:	mov    rdx,QWORD PTR [rsp+0x40]
  4129a9:	mov    rcx,QWORD PTR [rsp+0x48]
  4129ae:	mov    r8,QWORD PTR [rsp+0x50]
  4129b3:	cmp    rbp,rdx
  4129b6:	mov    QWORD PTR [rbx],rdx
  4129b9:	mov    QWORD PTR [rbx+0x8],rcx
  4129bd:	sete   r9b
  4129c1:	cmp    rdi,rcx
  4129c4:	mov    QWORD PTR [rbx+0x10],r8
  4129c8:	sete   al
  4129cb:	and    eax,r9d
  4129ce:	xor    r9d,r9d
  4129d1:	cmp    al,r8b
  4129d4:	ja     0x412a00
  4129d6:	mov    rax,QWORD PTR [rbx]
  4129d9:	mov    BYTE PTR [rbx+0x11],r9b
  4129dd:	mov    QWORD PTR [rsi],rax
  4129e0:	mov    rax,QWORD PTR [rbx+0x8]
  4129e4:	mov    QWORD PTR [rsi+0x8],rax
  4129e8:	mov    rax,QWORD PTR [rbx+0x10]
  4129ec:	mov    QWORD PTR [rsi+0x10],rax
  4129f0:	mov    rax,rsi
  4129f3:	add    rsp,0x68
  4129f7:	pop    rbx
  4129f8:	pop    rsi
  4129f9:	pop    rdi
  4129fa:	pop    rbp
  4129fb:	ret    
  4129fc:	nop    DWORD PTR [rax+0x0]
  412a00:	or     rcx,rdx
  412a03:	setne  r9b
  412a07:	jmp    0x4129d6
  412a09:	nop    DWORD PTR [rax+0x0]
  412a10:	mov    r11d,edx
  412a13:	shr    rdx,0x20
  412a17:	mov    r9d,r8d
  412a1a:	mov    rax,rcx
  412a1d:	shr    r8,0x20
  412a21:	mov    rcx,rdx
  412a24:	imul   rcx,r8
  412a28:	mov    r10,r11
  412a2b:	imul   r8,r11
  412a2f:	imul   r10,r9
  412a33:	mov    QWORD PTR [rax],rcx
  412a36:	imul   rdx,r9
  412a3a:	mov    r9,r8
  412a3d:	shl    r9,0x20
  412a41:	add    r9,r10
  412a44:	cmp    r10,r9
  412a47:	mov    QWORD PTR [rax+0x8],r9
  412a4b:	jbe    0x412a54
  412a4d:	add    rcx,0x1
  412a51:	mov    QWORD PTR [rax],rcx
  412a54:	mov    r10,rdx
  412a57:	mov    BYTE PTR [rax+0x10],0x1
  412a5b:	mov    BYTE PTR [rax+0x11],0x0
  412a5f:	shl    r10,0x20
  412a63:	add    r10,r9
  412a66:	cmp    r10,r9
  412a69:	mov    QWORD PTR [rax+0x8],r10
  412a6d:	adc    rcx,0x0
  412a71:	shr    rdx,0x20
  412a75:	shr    r8,0x20
  412a79:	add    r8,rdx
  412a7c:	add    r8,rcx
  412a7f:	mov    QWORD PTR [rax],r8
  412a82:	ret    
  412a83:	nop    DWORD PTR [rax]
  412a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a90:	push   r14
  412a92:	push   r13
  412a94:	push   r12
  412a96:	push   rbp
  412a97:	push   rdi
  412a98:	push   rsi
  412a99:	push   rbx
  412a9a:	sub    rsp,0x20
  412a9e:	add    BYTE PTR [rdx+0x1a],0x1
  412aa2:	xor    r13d,r13d
  412aa5:	mov    BYTE PTR [rcx+0x10],0x0
  412aa9:	mov    QWORD PTR [rcx],0x0
  412ab0:	mov    rsi,rcx
  412ab3:	mov    BYTE PTR [rcx+0x11],0x0
  412ab7:	mov    QWORD PTR [rcx+0x8],0x0
  412abf:	mov    rcx,rdx
  412ac2:	mov    rbx,rdx
  412ac5:	mov    r14d,r8d
  412ac8:	call   0x40c760
  412acd:	mov    rdi,rax
  412ad0:	movzx  eax,BYTE PTR [rax+0x4]
  412ad4:	cmp    al,0x14
  412ad6:	je     0x412be0
  412adc:	cmp    al,0x43
  412ade:	sete   r12b
  412ae2:	je     0x412b33
  412ae4:	cmp    al,0x3d
  412ae6:	je     0x412b33
  412ae8:	cmp    al,0x3
  412aea:	je     0x412bc0
  412af0:	lea    r8,[rip+0x33ba9]        # 0x4466a0
  412af7:	mov    edx,0x3
  412afc:	mov    rcx,rbx
  412aff:	xor    edi,edi
  412b01:	call   0x412660
  412b06:	test   r13b,r13b
  412b09:	je     0x412b96
  412b0f:	mov    rcx,rbx
  412b12:	call   0x40c760
  412b17:	cmp    BYTE PTR [rax+0x4],0x15
  412b1b:	je     0x412b96
  412b1d:	lea    r8,[rip+0x33bb4]        # 0x4466d8
  412b24:	mov    edx,0x3
  412b29:	mov    rcx,rbx
  412b2c:	call   0x412660
  412b31:	jmp    0x412b96
  412b33:	mov    eax,DWORD PTR [rdi+0x8]
  412b36:	lea    ecx,[rax-0x1]
  412b39:	call   0x4385d0
  412b3e:	mov    rbp,rax
  412b41:	mov    eax,DWORD PTR [rdi+0x8]
  412b44:	mov    rdx,QWORD PTR [rdi+0x10]
  412b48:	mov    rcx,rbp
  412b4b:	lea    r8d,[rax-0x2]
  412b4f:	add    rdx,0x1
  412b53:	call   0x43f0a8
  412b58:	mov    eax,DWORD PTR [rdi+0x8]
  412b5b:	movzx  r8d,r12b
  412b5f:	sub    eax,0x2
  412b62:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  412b67:	mov    rdi,QWORD PTR [rdi+0x8]
  412b6b:	mov    rcx,rbx
  412b6e:	mov    r9d,r14d
  412b71:	mov    rdx,rbp
  412b74:	call   0x418bc0
  412b79:	test   al,al
  412b7b:	mov    rcx,rbp
  412b7e:	setne  al
  412b81:	movzx  eax,al
  412b84:	mov    QWORD PTR [rsi+0x8],rax
  412b88:	call   0x43f100
  412b8d:	test   r13b,r13b
  412b90:	jne    0x412b0f
  412b96:	test   rdi,rdi
  412b99:	je     0x412ba2
  412b9b:	mov    QWORD PTR [rbx+0x198],rdi
  412ba2:	sub    BYTE PTR [rbx+0x1a],0x1
  412ba6:	mov    rax,rsi
  412ba9:	add    rsp,0x20
  412bad:	pop    rbx
  412bae:	pop    rsi
  412baf:	pop    rdi
  412bb0:	pop    rbp
  412bb1:	pop    r12
  412bb3:	pop    r13
  412bb5:	pop    r14
  412bb7:	ret    
  412bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  412bc0:	mov    rcx,rbx
  412bc3:	xor    edi,edi
  412bc5:	call   0x412580
  412bca:	test   rax,rax
  412bcd:	mov    rbp,rax
  412bd0:	je     0x412b8d
  412bd2:	mov    r8d,0x1
  412bd8:	jmp    0x412b6b
  412bda:	nop    WORD PTR [rax+rax*1+0x0]
  412be0:	mov    rcx,rbx
  412be3:	mov    r13d,0x1
  412be9:	call   0x40c760
  412bee:	mov    rdi,rax
  412bf1:	movzx  eax,BYTE PTR [rax+0x4]
  412bf5:	jmp    0x412adc
  412bfa:	nop    WORD PTR [rax+rax*1+0x0]
  412c00:	push   rbp
  412c01:	push   rdi
  412c02:	push   rsi
  412c03:	push   rbx
  412c04:	cmp    r8,0x2
  412c08:	je     0x412e30
  412c0e:	test   r8,r8
  412c11:	movzx  ebp,BYTE PTR [rcx]
  412c14:	je     0x412ce0
  412c1a:	test   bpl,bpl
  412c1d:	je     0x412ce0
  412c23:	movzx  eax,BYTE PTR [rdx+r8*1-0x1]
  412c29:	lea    r9,[r8-0x1]
  412c2d:	cmp    al,0x52
  412c2f:	je     0x412c47
  412c31:	jbe    0x412cd0
  412c37:	cmp    al,0x6b
  412c39:	je     0x412e70
  412c3f:	cmp    al,0x72
  412c41:	jne    0x412ce0
  412c47:	mov    r10d,0x100000
  412c4d:	cmp    r8,0x1
  412c51:	je     0x412e80
  412c57:	movzx  ecx,BYTE PTR [rdx]
  412c5a:	mov    eax,ecx
  412c5c:	and    eax,0xffffffdf
  412c5f:	cmp    al,0x55
  412c61:	jne    0x412c80
  412c63:	or     r10,0x1000
  412c6a:	cmp    r9,0x1
  412c6e:	je     0x412e80
  412c74:	lea    r9,[r8-0x2]
  412c78:	movzx  ecx,BYTE PTR [rdx+0x1]
  412c7c:	add    rdx,0x1
  412c80:	cmp    cl,0x4c
  412c83:	je     0x412ef3
  412c89:	jbe    0x412e10
  412c8f:	cmp    cl,0x68
  412c92:	je     0x412ee0
  412c98:	cmp    cl,0x6c
  412c9b:	jne    0x412e20
  412ca1:	cmp    r9,0x1
  412ca5:	je     0x412f16
  412cab:	xor    eax,eax
  412cad:	cmp    r9,0x2
  412cb1:	jne    0x412e22
  412cb7:	or     r10d,0x40
  412cbb:	cmp    BYTE PTR [rdx+0x1],0x6c
  412cbf:	cmove  eax,r10d
  412cc3:	jmp    0x412e22
  412cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  412cd0:	cmp    al,0x4b
  412cd2:	je     0x412e70
  412cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  412ce0:	add    r8,rdx
  412ce3:	xor    edi,edi
  412ce5:	xor    r9d,r9d
  412ce8:	xor    r10d,r10d
  412ceb:	xor    esi,esi
  412ced:	xor    ebx,ebx
  412cef:	xor    r11d,r11d
  412cf2:	cmp    r8,rdx
  412cf5:	lea    rcx,[rip+0x33a00]        # 0x4466fc
  412cfc:	je     0x412d2d
  412cfe:	xchg   ax,ax
  412d00:	movzx  eax,BYTE PTR [r8-0x1]
  412d05:	sub    eax,0x44
  412d08:	cmp    al,0x33
  412d0a:	ja     0x412e20
  412d10:	movzx  eax,al
  412d13:	movsxd rax,DWORD PTR [rcx+rax*4]
  412d17:	add    rax,rcx
  412d1a:	jmp    rax
  412d1c:	nop    DWORD PTR [rax+0x0]
  412d20:	add    r10,0x1
  412d24:	sub    r8,0x1
  412d28:	cmp    r8,rdx
  412d2b:	jne    0x412d00
  412d2d:	lea    rax,[r10+r9*1]
  412d31:	add    rax,rsi
  412d34:	add    rax,rbx
  412d37:	add    rax,r11
  412d3a:	cmp    rax,0x1
  412d3e:	ja     0x412e20
  412d44:	cmp    rdi,0x1
  412d48:	ja     0x412e20
  412d4e:	test   bpl,bpl
  412d51:	sete   dl
  412d54:	test   dil,0x1
  412d58:	je     0x412d64
  412d5a:	xor    eax,eax
  412d5c:	test   dl,dl
  412d5e:	jne    0x412e22
  412d64:	mov    rax,r10
  412d67:	or     rax,r9
  412d6a:	je     0x412d76
  412d6c:	xor    eax,eax
  412d6e:	test   dl,dl
  412d70:	jne    0x412e22
  412d76:	cmp    rdi,0x1
  412d7a:	mov    edx,0x10
  412d7f:	sbb    eax,eax
  412d81:	not    eax
  412d83:	and    eax,0x2000
  412d88:	test   r11,r11
  412d8b:	jne    0x412db7
  412d8d:	test   rbx,rbx
  412d90:	mov    dl,0x20
  412d92:	jne    0x412db7
  412d94:	test   rsi,rsi
  412d97:	mov    dl,0x40
  412d99:	jne    0x412db7
  412d9b:	test   r10,r10
  412d9e:	mov    edx,0x10000
  412da3:	jne    0x412db7
  412da5:	cmp    r9,0x1
  412da9:	sbb    edx,edx
  412dab:	and    edx,0xfffe8000
  412db1:	add    edx,0x20000
  412db7:	or     eax,edx
  412db9:	jmp    0x412e22
  412dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  412dc0:	add    r9,0x1
  412dc4:	jmp    0x412d24
  412dc9:	nop    DWORD PTR [rax+0x0]
  412dd0:	add    rsi,0x1
  412dd4:	jmp    0x412d24
  412dd9:	nop    DWORD PTR [rax+0x0]
  412de0:	add    rdi,0x1
  412de4:	jmp    0x412d24
  412de9:	nop    DWORD PTR [rax+0x0]
  412df0:	add    r11,0x1
  412df4:	jmp    0x412d24
  412df9:	nop    DWORD PTR [rax+0x0]
  412e00:	add    rbx,0x1
  412e04:	jmp    0x412d24
  412e09:	nop    DWORD PTR [rax+0x0]
  412e10:	cmp    cl,0x48
  412e13:	je     0x412ee0
  412e19:	nop    DWORD PTR [rax+0x0]
  412e20:	xor    eax,eax
  412e22:	pop    rbx
  412e23:	pop    rsi
  412e24:	pop    rdi
  412e25:	pop    rbp
  412e26:	ret    
  412e27:	nop    WORD PTR [rax+rax*1+0x0]
  412e30:	movzx  eax,BYTE PTR [rdx]
  412e33:	mov    r9d,eax
  412e36:	and    r9d,0xffffffdf
  412e3a:	cmp    r9b,0x44
  412e3e:	jne    0x412c0e
  412e44:	movzx  edi,BYTE PTR [rdx+0x1]
  412e48:	cmp    al,0x44
  412e4a:	sete   al
  412e4d:	lea    r9d,[rdi-0x44]
  412e51:	cmp    r9b,0x28
  412e55:	ja     0x412c0e
  412e5b:	lea    r10,[rip+0x3396a]        # 0x4467cc
  412e62:	movzx  r9d,r9b
  412e66:	movsxd r9,DWORD PTR [r10+r9*4]
  412e6a:	add    r10,r9
  412e6d:	jmp    r10
  412e70:	mov    r10d,0x200000
  412e76:	jmp    0x412c4d
  412e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  412e80:	mov    eax,r10d
  412e83:	jmp    0x412e22
  412e85:	cmp    al,0x1
  412e87:	sbb    eax,eax
  412e89:	and    eax,0x4040
  412e8e:	jmp    0x412e22
  412e90:	shl    eax,0x1f
  412e93:	sar    eax,0x1f
  412e96:	and    eax,0x4010
  412e9b:	jmp    0x412e22
  412e9d:	shl    eax,0x1f
  412ea0:	sar    eax,0x1f
  412ea3:	and    eax,0x4020
  412ea8:	jmp    0x412e22
  412ead:	cmp    al,0x1
  412eaf:	sbb    eax,eax
  412eb1:	and    eax,0x4020
  412eb6:	jmp    0x412e22
  412ebb:	shl    eax,0x1f
  412ebe:	sar    eax,0x1f
  412ec1:	and    eax,0x4040
  412ec6:	jmp    0x412e22
  412ecb:	cmp    al,0x1
  412ecd:	sbb    eax,eax
  412ecf:	and    eax,0x4010
  412ed4:	jmp    0x412e22
  412ed9:	nop    DWORD PTR [rax+0x0]
  412ee0:	xor    eax,eax
  412ee2:	or     r10d,0x10
  412ee6:	cmp    r9,0x1
  412eea:	cmove  eax,r10d
  412eee:	jmp    0x412e22
  412ef3:	cmp    r9,0x1
  412ef7:	je     0x412f16
  412ef9:	xor    eax,eax
  412efb:	cmp    r9,0x2
  412eff:	jne    0x412e22
  412f05:	or     r10d,0x40
  412f09:	cmp    BYTE PTR [rdx+0x1],0x4c
  412f0d:	cmove  eax,r10d
  412f11:	jmp    0x412e22
  412f16:	mov    eax,r10d
  412f19:	or     eax,0x20
  412f1c:	jmp    0x412e22
  412f21:	nop    DWORD PTR [rax+rax*1+0x0]
  412f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f30:	push   r13
  412f32:	push   r12
  412f34:	push   rbp
  412f35:	push   rdi
  412f36:	push   rsi
  412f37:	push   rbx
  412f38:	xor    esi,esi
  412f3a:	xor    r10d,r10d
  412f3d:	xor    edi,edi
  412f3f:	mov    r12,rcx
  412f42:	add    r8,rdx
  412f45:	mov    ebx,0x1
  412f4a:	movabs r11,0x800000008
  412f54:	movabs rbp,0x300000003
  412f5e:	movabs r13,0x100000001000
  412f68:	jmp    0x412f82
  412f6a:	nop    WORD PTR [rax+rax*1+0x0]
  412f70:	test   rax,rbp
  412f73:	jne    0x412fc0
  412f75:	test   rax,r13
  412f78:	je     0x412fb0
  412f7a:	add    rdi,0x1
  412f7e:	sub    r8,0x1
  412f82:	cmp    r8,rdx
  412f85:	je     0x412fd0
  412f87:	movzx  r9d,BYTE PTR [r8-0x1]
  412f8c:	lea    ecx,[r9-0x49]
  412f90:	cmp    cl,0x2c
  412f93:	ja     0x412fb0
  412f95:	mov    rax,rbx
  412f98:	shl    rax,cl
  412f9b:	test   rax,r11
  412f9e:	je     0x412f70
  412fa0:	add    r10,0x1
  412fa4:	cmp    r10,0x2
  412fa8:	jne    0x412f7e
  412faa:	cmp    r9b,BYTE PTR [r8]
  412fad:	je     0x412f7e
  412faf:	nop
  412fb0:	xor    eax,eax
  412fb2:	pop    rbx
  412fb3:	pop    rsi
  412fb4:	pop    rdi
  412fb5:	pop    rbp
  412fb6:	pop    r12
  412fb8:	pop    r13
  412fba:	ret    
  412fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  412fc0:	add    rsi,0x1
  412fc4:	jmp    0x412f7e
  412fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412fd0:	cmp    rdi,0x1
  412fd4:	seta   dl
  412fd7:	cmp    r10,0x2
  412fdb:	seta   al
  412fde:	or     dl,al
  412fe0:	jne    0x412fb0
  412fe2:	cmp    rsi,0x1
  412fe6:	ja     0x412fb0
  412fe8:	test   rsi,rsi
  412feb:	jne    0x41301a
  412fed:	xor    ecx,ecx
  412fef:	cmp    rdi,0x1
  412ff3:	sbb    eax,eax
  412ff5:	not    eax
  412ff7:	and    eax,0x1000
  412ffc:	or     ecx,eax
  412ffe:	test   r10,r10
  413001:	mov    eax,0x10
  413006:	je     0x413016
  413008:	cmp    r10,0x1
  41300c:	mov    al,0x40
  41300e:	mov    edx,0x20
  413013:	cmove  eax,edx
  413016:	or     eax,ecx
  413018:	jmp    0x412fb2
  41301a:	xor    eax,eax
  41301c:	cmp    BYTE PTR [r12],0x0
  413021:	mov    ecx,0x2000
  413026:	jne    0x412fef
  413028:	jmp    0x412fb2
  41302a:	nop    WORD PTR [rax+rax*1+0x0]
  413030:	mov    rax,rcx
  413033:	lea    ecx,[rdx-0x41]
  413036:	shr    rax,cl
  413039:	and    eax,0x1
  41303c:	xor    rax,0x1
  413040:	and    eax,0x1
  413043:	ret    
  413044:	xchg   ax,ax
  413046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413050:	push   rbp
  413051:	push   rdi
  413052:	push   rsi
  413053:	push   rbx
  413054:	sub    rsp,0x78
  413058:	mov    rsi,QWORD PTR [rdx]
  41305b:	mov    rbp,QWORD PTR [rdx+0x8]
  41305f:	cmp    r8,0x40
  413063:	mov    rdi,rcx
  413066:	mov    rbx,rdx
  413069:	jbe    0x413170
  41306f:	mov    rdx,r8
  413072:	mov    rcx,rsi
  413075:	mov    QWORD PTR [rsp+0x28],r9
  41307a:	mov    QWORD PTR [rsp+0x20],r8
  41307f:	call   0x413030
  413084:	mov    r8,QWORD PTR [rsp+0x20]
  413089:	mov    r9,QWORD PTR [rsp+0x28]
  41308e:	or     al,BYTE PTR [rbx+0x10]
  413091:	mov    r10d,eax
  413094:	xor    r10d,0x1
  413098:	movzx  r10d,r10b
  41309c:	neg    r10
  41309f:	cmp    r8,r9
  4130a2:	jbe    0x4131b0
  4130a8:	cmp    r8,0x3f
  4130ac:	ja     0x413190
  4130b2:	mov    rax,r10
  4130b5:	mov    ecx,r8d
  4130b8:	mov    rsi,r10
  4130bb:	shl    rax,cl
  4130be:	or     rbp,rax
  4130c1:	cmp    r9,0x3f
  4130c5:	jbe    0x4130d1
  4130c7:	mov    rbp,rsi
  4130ca:	sub    r9,0x40
  4130ce:	mov    rsi,r10
  4130d1:	test   r9,r9
  4130d4:	je     0x4131c0
  4130da:	mov    eax,0x40
  4130df:	mov    ecx,r9d
  4130e2:	mov    rdx,rsi
  4130e5:	sub    eax,r9d
  4130e8:	shr    rbp,cl
  4130eb:	mov    ecx,eax
  4130ed:	shl    rdx,cl
  4130f0:	mov    ecx,r9d
  4130f3:	shr    rsi,cl
  4130f6:	mov    ecx,eax
  4130f8:	or     rdx,rbp
  4130fb:	shl    r10,cl
  4130fe:	or     rsi,r10
  413101:	mov    r10,rdx
  413104:	mov    rax,QWORD PTR [rbx+0x10]
  413108:	lea    rcx,[rsp+0x50]
  41310d:	lea    rdx,[rsp+0x30]
  413112:	mov    QWORD PTR [rbx],rsi
  413115:	mov    QWORD PTR [rbx+0x8],r10
  413119:	mov    QWORD PTR [rsp+0x30],rsi
  41311e:	mov    QWORD PTR [rsp+0x38],r10
  413123:	mov    QWORD PTR [rsp+0x40],rax
  413128:	call   0x4128f0
  41312d:	mov    rax,QWORD PTR [rsp+0x58]
  413132:	mov    rcx,QWORD PTR [rsp+0x60]
  413137:	mov    rdx,QWORD PTR [rsp+0x50]
  41313c:	mov    QWORD PTR [rbx+0x10],rcx
  413140:	mov    QWORD PTR [rbx+0x8],rax
  413144:	mov    BYTE PTR [rbx+0x11],0x0
  413148:	mov    QWORD PTR [rdi+0x8],rax
  41314c:	mov    rax,QWORD PTR [rbx+0x10]
  413150:	mov    QWORD PTR [rbx],rdx
  413153:	mov    QWORD PTR [rdi],rdx
  413156:	mov    QWORD PTR [rdi+0x10],rax
  41315a:	mov    rax,rdi
  41315d:	add    rsp,0x78
  413161:	pop    rbx
  413162:	pop    rsi
  413163:	pop    rdi
  413164:	pop    rbp
  413165:	ret    
  413166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413170:	lea    ecx,[r8-0x1]
  413174:	mov    r10,rbp
  413177:	shr    r10,cl
  41317a:	and    r10d,0x1
  41317e:	xor    r10,0x1
  413182:	mov    eax,r10d
  413185:	and    eax,0x1
  413188:	jmp    0x41308e
  41318d:	nop    DWORD PTR [rax]
  413190:	cmp    r8,0x7f
  413194:	ja     0x4130c1
  41319a:	lea    ecx,[r8-0x40]
  41319e:	mov    rax,r10
  4131a1:	shl    rax,cl
  4131a4:	or     rsi,rax
  4131a7:	jmp    0x4130c1
  4131ac:	nop    DWORD PTR [rax+0x0]
  4131b0:	mov    rsi,r10
  4131b3:	jmp    0x413104
  4131b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4131c0:	mov    r10,rbp
  4131c3:	jmp    0x413104
  4131c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4131d0:	push   r15
  4131d2:	push   r14
  4131d4:	push   r13
  4131d6:	push   r12
  4131d8:	push   rbp
  4131d9:	push   rdi
  4131da:	push   rsi
  4131db:	push   rbx
  4131dc:	sub    rsp,0x98
  4131e3:	mov    r14,QWORD PTR [rdx]
  4131e6:	mov    r15,QWORD PTR [rdx+0x8]
  4131ea:	cmp    r9,r8
  4131ed:	mov    rsi,rcx
  4131f0:	mov    rbx,rdx
  4131f3:	mov    r13,r8
  4131f6:	movzx  r12d,BYTE PTR [rdx+0x10]
  4131fb:	jb     0x413240
  4131fd:	xor    eax,eax
  4131ff:	test   r12b,r12b
  413202:	je     0x413320
  413208:	xor    edi,edi
  41320a:	xor    ebp,ebp
  41320c:	mov    BYTE PTR [rbx+0x10],r12b
  413210:	mov    BYTE PTR [rbx+0x11],al
  413213:	mov    rax,QWORD PTR [rbx+0x10]
  413217:	mov    QWORD PTR [rbx],rbp
  41321a:	mov    QWORD PTR [rbx+0x8],rdi
  41321e:	mov    QWORD PTR [rsi],rbp
  413221:	mov    QWORD PTR [rsi+0x8],rdi
  413225:	mov    QWORD PTR [rsi+0x10],rax
  413229:	mov    rax,rsi
  41322c:	add    rsp,0x98
  413233:	pop    rbx
  413234:	pop    rsi
  413235:	pop    rdi
  413236:	pop    rbp
  413237:	pop    r12
  413239:	pop    r13
  41323b:	pop    r14
  41323d:	pop    r15
  41323f:	ret    
  413240:	cmp    r9,0x3f
  413244:	ja     0x413310
  41324a:	mov    rdx,r15
  41324d:	mov    rax,r14
  413250:	mov    r8,r9
  413253:	test   r8,r8
  413256:	je     0x413275
  413258:	mov    ecx,r8d
  41325b:	mov    rdi,rdx
  41325e:	shl    rax,cl
  413261:	mov    ecx,0x40
  413266:	sub    ecx,r8d
  413269:	shr    rdi,cl
  41326c:	mov    ecx,r8d
  41326f:	or     rax,rdi
  413272:	shl    rdx,cl
  413275:	mov    QWORD PTR [rbx],rax
  413278:	mov    QWORD PTR [rsp+0x30],rax
  41327d:	lea    rcx,[rsp+0x50]
  413282:	mov    rax,QWORD PTR [rbx+0x10]
  413286:	mov    QWORD PTR [rbx+0x8],rdx
  41328a:	mov    r8,r13
  41328d:	mov    QWORD PTR [rsp+0x38],rdx
  413292:	lea    rdx,[rsp+0x30]
  413297:	mov    QWORD PTR [rsp+0x20],r9
  41329c:	mov    QWORD PTR [rsp+0x28],rcx
  4132a1:	mov    QWORD PTR [rsp+0x40],rax
  4132a6:	call   0x4128f0
  4132ab:	mov    rdx,QWORD PTR [rsp+0x60]
  4132b0:	mov    rbp,QWORD PTR [rsp+0x50]
  4132b5:	xor    eax,eax
  4132b7:	mov    rdi,QWORD PTR [rsp+0x58]
  4132bc:	mov    r9,QWORD PTR [rsp+0x20]
  4132c1:	test   dl,dl
  4132c3:	mov    QWORD PTR [rbx],rbp
  4132c6:	mov    QWORD PTR [rbx+0x10],rdx
  4132ca:	mov    QWORD PTR [rbx+0x8],rdi
  4132ce:	mov    r12d,edx
  4132d1:	jne    0x41320c
  4132d7:	mov    rdx,QWORD PTR [rsp+0x28]
  4132dc:	lea    rcx,[rsp+0x70]
  4132e1:	mov    r8,r13
  4132e4:	call   0x413050
  4132e9:	cmp    QWORD PTR [rsp+0x78],r15
  4132ee:	mov    eax,0x1
  4132f3:	jne    0x41320c
  4132f9:	cmp    QWORD PTR [rsp+0x70],r14
  4132fe:	setne  al
  413301:	jmp    0x41320c
  413306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413310:	lea    r8,[r9-0x40]
  413314:	mov    rax,r15
  413317:	xor    edx,edx
  413319:	jmp    0x413253
  41331e:	xchg   ax,ax
  413320:	or     r15,r14
  413323:	setne  al
  413326:	jmp    0x413208
  41332b:	nop    DWORD PTR [rax+rax*1+0x0]
  413330:	push   r15
  413332:	push   r14
  413334:	push   r13
  413336:	push   r12
  413338:	push   rbp
  413339:	push   rdi
  41333a:	push   rsi
  41333b:	push   rbx
  41333c:	sub    rsp,0x98
  413343:	mov    r10d,DWORD PTR [rsp+0x100]
  41334b:	mov    r15,QWORD PTR [r8]
  41334e:	mov    rdi,rcx
  413351:	mov    rcx,rdx
  413354:	mov    rbx,r8
  413357:	mov    r12,QWORD PTR [r8+0x8]
  41335b:	movzx  edx,BYTE PTR [r8+0x10]
  413360:	cmp    r10d,0x5
  413364:	mov    rbp,QWORD PTR [r9]
  413367:	mov    rsi,QWORD PTR [r9+0x8]
  41336b:	movzx  r14d,BYTE PTR [r9+0x10]
  413370:	mov    r13,QWORD PTR [rcx+0x470]
  413377:	je     0x413540
  41337d:	jle    0x413440
  413383:	lea    edx,[r10-0xc]
  413387:	cmp    edx,0x1
  41338a:	ja     0x413610
  413390:	test   r14b,r14b
  413393:	jne    0x413670
  413399:	cmp    r13,0x40
  41339d:	jbe    0x413790
  4133a3:	mov    rdx,r13
  4133a6:	mov    rcx,rbp
  4133a9:	mov    DWORD PTR [rsp+0x2c],r10d
  4133ae:	mov    QWORD PTR [rsp+0x20],r9
  4133b3:	call   0x413030
  4133b8:	mov    r9,QWORD PTR [rsp+0x20]
  4133bd:	mov    r10d,DWORD PTR [rsp+0x2c]
  4133c2:	test   al,al
  4133c4:	jne    0x413670
  4133ca:	mov    rax,QWORD PTR [r9]
  4133cd:	cmp    r10d,0xd
  4133d1:	lea    r12,[rsp+0x50]
  4133d6:	setne  r10b
  4133da:	lea    r14,[rsp+0x30]
  4133df:	mov    r8,r13
  4133e2:	movzx  r10d,r10b
  4133e6:	mov    rcx,r12
  4133e9:	mov    QWORD PTR [rsp+0x20],r9
  4133ee:	mov    QWORD PTR [rsp+0x30],rax
  4133f3:	mov    rax,QWORD PTR [r9+0x8]
  4133f7:	add    r10d,0xc
  4133fb:	mov    rdx,r14
  4133fe:	mov    DWORD PTR [rsp+0x2c],r10d
  413403:	mov    QWORD PTR [rsp+0x38],rax
  413408:	mov    rax,QWORD PTR [r9+0x10]
  41340c:	mov    QWORD PTR [rsp+0x40],rax
  413411:	call   0x412950
  413416:	mov    rbp,QWORD PTR [rsp+0x50]
  41341b:	mov    r9,QWORD PTR [rsp+0x20]
  413420:	mov    r10d,DWORD PTR [rsp+0x2c]
  413425:	mov    QWORD PTR [r9],rbp
  413428:	mov    rsi,QWORD PTR [rsp+0x58]
  41342d:	mov    QWORD PTR [r9+0x8],rsi
  413431:	mov    rax,QWORD PTR [rsp+0x60]
  413436:	mov    QWORD PTR [r9+0x10],rax
  41343a:	jmp    0x41367a
  41343f:	nop
  413440:	cmp    r10d,0x4
  413444:	jne    0x413610
  41344a:	lea    rax,[rbp+r15*1+0x0]
  41344f:	mov    r8,rsi
  413452:	mov    BYTE PTR [rsp+0x81],0x0
  41345a:	add    r8,r12
  41345d:	lea    rcx,[rsp+0x50]
  413462:	adc    rax,0x0
  413466:	test   dl,dl
  413468:	mov    edx,0x1
  41346d:	cmovne r14d,edx
  413471:	mov    QWORD PTR [rsp+0x30],rax
  413476:	lea    rdx,[rsp+0x30]
  41347b:	mov    BYTE PTR [rsp+0x80],r14b
  413483:	mov    rax,QWORD PTR [rsp+0x80]
  41348b:	mov    QWORD PTR [rsp+0x38],r8
  413490:	mov    r8,r13
  413493:	mov    QWORD PTR [rsp+0x40],rax
  413498:	call   0x4128f0
  41349d:	mov    rax,QWORD PTR [rsp+0x60]
  4134a2:	mov    rbx,QWORD PTR [rsp+0x50]
  4134a7:	mov    rdx,QWORD PTR [rsp+0x58]
  4134ac:	mov    ecx,eax
  4134ae:	mov    QWORD PTR [rsp+0x70],rbx
  4134b3:	mov    QWORD PTR [rsp+0x80],rax
  4134bb:	shr    cx,0x8
  4134bf:	test   al,al
  4134c1:	mov    QWORD PTR [rsp+0x78],rdx
  4134c6:	mov    r8d,ecx
  4134c9:	jne    0x4134fa
  4134cb:	cmp    r13,0x40
  4134cf:	jbe    0x413700
  4134d5:	mov    rdx,r13
  4134d8:	mov    rcx,r15
  4134db:	call   0x413030
  4134e0:	mov    rdx,r13
  4134e3:	mov    r12d,eax
  4134e6:	mov    rcx,rbp
  4134e9:	call   0x413030
  4134ee:	cmp    r12b,al
  4134f1:	je     0x4135f5
  4134f7:	xor    r8d,r8d
  4134fa:	mov    rax,QWORD PTR [rsp+0x70]
  4134ff:	mov    BYTE PTR [rsp+0x81],r8b
  413507:	mov    QWORD PTR [rdi],rax
  41350a:	mov    rax,QWORD PTR [rsp+0x78]
  41350f:	mov    QWORD PTR [rdi+0x8],rax
  413513:	mov    rax,QWORD PTR [rsp+0x80]
  41351b:	mov    QWORD PTR [rdi+0x10],rax
  41351f:	mov    rax,rdi
  413522:	add    rsp,0x98
  413529:	pop    rbx
  41352a:	pop    rsi
  41352b:	pop    rdi
  41352c:	pop    rbp
  41352d:	pop    r12
  41352f:	pop    r13
  413531:	pop    r14
  413533:	pop    r15
  413535:	ret    
  413536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413540:	mov    r8,r12
  413543:	mov    rax,r15
  413546:	mov    BYTE PTR [rsp+0x81],0x0
  41354e:	sub    r8,rsi
  413551:	sub    rax,rbp
  413554:	lea    rcx,[rsp+0x50]
  413559:	cmp    r12,r8
  41355c:	mov    QWORD PTR [rsp+0x38],r8
  413561:	mov    r8,r13
  413564:	sbb    rax,0x0
  413568:	test   dl,dl
  41356a:	mov    edx,0x1
  41356f:	cmovne r14d,edx
  413573:	mov    QWORD PTR [rsp+0x30],rax
  413578:	lea    rdx,[rsp+0x30]
  41357d:	mov    BYTE PTR [rsp+0x80],r14b
  413585:	mov    rax,QWORD PTR [rsp+0x80]
  41358d:	mov    QWORD PTR [rsp+0x40],rax
  413592:	call   0x4128f0
  413597:	mov    rax,QWORD PTR [rsp+0x60]
  41359c:	mov    rbx,QWORD PTR [rsp+0x50]
  4135a1:	mov    rdx,QWORD PTR [rsp+0x58]
  4135a6:	mov    ecx,eax
  4135a8:	mov    QWORD PTR [rsp+0x70],rbx
  4135ad:	mov    QWORD PTR [rsp+0x80],rax
  4135b5:	shr    cx,0x8
  4135b9:	test   al,al
  4135bb:	mov    QWORD PTR [rsp+0x78],rdx
  4135c0:	mov    r8d,ecx
  4135c3:	jne    0x4134fa
  4135c9:	cmp    r13,0x40
  4135cd:	jbe    0x413740
  4135d3:	mov    rdx,r13
  4135d6:	mov    rcx,r15
  4135d9:	call   0x413030
  4135de:	mov    rdx,r13
  4135e1:	mov    r12d,eax
  4135e4:	mov    rcx,rbp
  4135e7:	call   0x413030
  4135ec:	cmp    r12b,al
  4135ef:	je     0x4134f7
  4135f5:	mov    rdx,r13
  4135f8:	mov    rcx,rbx
  4135fb:	call   0x413030
  413600:	cmp    al,r12b
  413603:	setne  r8b
  413607:	jmp    0x4134fa
  41360c:	nop    DWORD PTR [rax+0x0]
  413610:	cmp    BYTE PTR [rcx+0x437],0x0
  413617:	je     0x413631
  413619:	cmp    BYTE PTR [rcx+0x435],0x0
  413620:	je     0x4136e0
  413626:	mov    eax,DWORD PTR [rcx+0x1c]
  413629:	test   eax,eax
  41362b:	je     0x4136e0
  413631:	mov    rax,QWORD PTR [r9]
  413634:	mov    QWORD PTR [rbx],rax
  413637:	mov    rax,QWORD PTR [r9+0x8]
  41363b:	mov    QWORD PTR [rbx+0x8],rax
  41363f:	mov    rax,QWORD PTR [r9+0x10]
  413643:	mov    QWORD PTR [rbx+0x10],rax
  413647:	mov    BYTE PTR [rbx+0x10],r14b
  41364b:	mov    rax,QWORD PTR [rbx+0x10]
  41364f:	mov    QWORD PTR [rbx],rbp
  413652:	mov    QWORD PTR [rbx+0x8],rsi
  413656:	mov    QWORD PTR [rdi],rbp
  413659:	mov    QWORD PTR [rdi+0x8],rsi
  41365d:	mov    QWORD PTR [rdi+0x10],rax
  413661:	jmp    0x41351f
  413666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413670:	lea    r12,[rsp+0x50]
  413675:	lea    r14,[rsp+0x30]
  41367a:	test   rbp,rbp
  41367d:	mov    rax,0xffffffffffffffff
  413684:	mov    r8,r13
  413687:	cmovne rsi,rax
  41368b:	mov    rax,QWORD PTR [rbx]
  41368e:	cmp    r10d,0xd
  413692:	mov    r9,rsi
  413695:	mov    rdx,r14
  413698:	mov    rcx,r12
  41369b:	mov    QWORD PTR [rsp+0x30],rax
  4136a0:	mov    rax,QWORD PTR [rbx+0x8]
  4136a4:	mov    QWORD PTR [rsp+0x38],rax
  4136a9:	mov    rax,QWORD PTR [rbx+0x10]
  4136ad:	mov    QWORD PTR [rsp+0x40],rax
  4136b2:	je     0x413780
  4136b8:	call   0x413050
  4136bd:	mov    rbp,QWORD PTR [rsp+0x50]
  4136c2:	mov    QWORD PTR [rbx],rbp
  4136c5:	mov    rsi,QWORD PTR [rsp+0x58]
  4136ca:	mov    QWORD PTR [rbx+0x8],rsi
  4136ce:	mov    r14,QWORD PTR [rsp+0x60]
  4136d3:	mov    QWORD PTR [rbx+0x10],r14
  4136d7:	jmp    0x413647
  4136dc:	nop    DWORD PTR [rax+0x0]
  4136e0:	lea    r8,[rip+0x33189]        # 0x446870
  4136e7:	mov    edx,0x2
  4136ec:	mov    QWORD PTR [rsp+0x20],r9
  4136f1:	call   0x412660
  4136f6:	mov    r9,QWORD PTR [rsp+0x20]
  4136fb:	jmp    0x413631
  413700:	lea    ecx,[r13-0x1]
  413704:	shr    r12,cl
  413707:	shr    rsi,cl
  41370a:	and    r12d,0x1
  41370e:	and    esi,0x1
  413711:	xor    r12,0x1
  413715:	xor    rsi,0x1
  413719:	and    r12d,0x1
  41371d:	cmp    r12b,sil
  413720:	jne    0x4134f7
  413726:	mov    rax,rdx
  413729:	shr    rax,cl
  41372c:	and    eax,0x1
  41372f:	xor    rax,0x1
  413733:	and    eax,0x1
  413736:	jmp    0x413600
  41373b:	nop    DWORD PTR [rax+rax*1+0x0]
  413740:	lea    ecx,[r13-0x1]
  413744:	shr    r12,cl
  413747:	shr    rsi,cl
  41374a:	and    r12d,0x1
  41374e:	and    esi,0x1
  413751:	xor    r12,0x1
  413755:	xor    rsi,0x1
  413759:	and    r12d,0x1
  41375d:	cmp    r12b,sil
  413760:	je     0x4134f7
  413766:	shr    rdx,cl
  413769:	and    edx,0x1
  41376c:	xor    rdx,0x1
  413770:	mov    eax,edx
  413772:	and    eax,0x1
  413775:	jmp    0x413600
  41377a:	nop    WORD PTR [rax+rax*1+0x0]
  413780:	call   0x4131d0
  413785:	jmp    0x4136bd
  41378a:	nop    WORD PTR [rax+rax*1+0x0]
  413790:	lea    ecx,[r13-0x1]
  413794:	mov    rax,rsi
  413797:	shr    rax,cl
  41379a:	and    eax,0x1
  41379d:	xor    rax,0x1
  4137a1:	and    eax,0x1
  4137a4:	jmp    0x4133c2
  4137a9:	nop    DWORD PTR [rax+0x0]
  4137b0:	push   rdi
  4137b1:	push   rsi
  4137b2:	push   rbx
  4137b3:	sub    rsp,0x30
  4137b7:	test   r8b,r8b
  4137ba:	mov    rsi,rcx
  4137bd:	mov    rdi,rdx
  4137c0:	jne    0x413810
  4137c2:	cmp    BYTE PTR [rsp+0x78],0x0
  4137c7:	jne    0x413810
  4137c9:	cmp    QWORD PTR [rsp+0x80],0x40
  4137d2:	ja     0x413830
  4137d4:	mov    eax,DWORD PTR [rsp+0x80]
  4137db:	mov    rbx,rdi
  4137de:	lea    ecx,[rax-0x1]
  4137e1:	mov    rax,QWORD PTR [rsp+0x70]
  4137e6:	shr    rbx,cl
  4137e9:	shr    rax,cl
  4137ec:	and    ebx,0x1
  4137ef:	and    eax,0x1
  4137f2:	xor    rbx,0x1
  4137f6:	xor    rax,0x1
  4137fa:	and    ebx,0x1
  4137fd:	and    eax,0x1
  413800:	cmp    bl,al
  413802:	je     0x413810
  413804:	mov    eax,ebx
  413806:	add    rsp,0x30
  41380a:	pop    rbx
  41380b:	pop    rsi
  41380c:	pop    rdi
  41380d:	ret    
  41380e:	xchg   ax,ax
  413810:	cmp    rsi,r9
  413813:	mov    ebx,0x1
  413818:	ja     0x413804
  41381a:	sete   bl
  41381d:	cmp    rdi,QWORD PTR [rsp+0x70]
  413822:	setae  al
  413825:	and    ebx,eax
  413827:	jmp    0x413804
  413829:	nop    DWORD PTR [rax+0x0]
  413830:	mov    rdx,QWORD PTR [rsp+0x80]
  413838:	mov    rcx,rsi
  41383b:	mov    QWORD PTR [rsp+0x28],r9
  413840:	call   0x413030
  413845:	mov    r9,QWORD PTR [rsp+0x28]
  41384a:	mov    rdx,QWORD PTR [rsp+0x80]
  413852:	mov    ebx,eax
  413854:	mov    rcx,r9
  413857:	call   0x413030
  41385c:	mov    r9,QWORD PTR [rsp+0x28]
  413861:	jmp    0x413800
  413863:	nop    DWORD PTR [rax]
  413866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413870:	add    rcx,0x440
  413877:	jmp    0x412c00
  41387c:	nop    DWORD PTR [rax+0x0]
  413880:	add    rcx,0x440
  413887:	jmp    0x412f30
  41388c:	nop    DWORD PTR [rax+0x0]
  413890:	mov    eax,0x3d
  413895:	cmp    ecx,0x48
  413898:	je     0x4138c0
  41389a:	cmp    ecx,0x49
  41389d:	mov    al,0x3e
  41389f:	je     0x4138c0
  4138a1:	cmp    ecx,0x4a
  4138a4:	mov    al,0x3f
  4138a6:	je     0x4138c0
  4138a8:	cmp    ecx,0x4b
  4138ab:	mov    al,0x40
  4138ad:	je     0x4138c0
  4138af:	cmp    ecx,0x4c
  4138b2:	mov    al,0x41
  4138b4:	cmovne eax,ecx
  4138b7:	nop    WORD PTR [rax+rax*1+0x0]
  4138c0:	repz ret 
  4138c2:	nop    DWORD PTR [rax+0x0]
  4138c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4138d0:	mov    eax,0x48
  4138d5:	cmp    ecx,0x3d
  4138d8:	je     0x413900
  4138da:	cmp    ecx,0x3e
  4138dd:	mov    al,0x49
  4138df:	je     0x413900
  4138e1:	cmp    ecx,0x3f
  4138e4:	mov    al,0x4a
  4138e6:	je     0x413900
  4138e8:	cmp    ecx,0x40
  4138eb:	mov    al,0x4b
  4138ed:	je     0x413900
  4138ef:	cmp    ecx,0x41
  4138f2:	mov    al,0x4c
  4138f4:	cmovne eax,ecx
  4138f7:	nop    WORD PTR [rax+rax*1+0x0]
  413900:	repz ret 
  413902:	nop    DWORD PTR [rax+0x0]
  413906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413910:	mov    eax,0x38
  413915:	cmp    ecx,0x44
  413918:	je     0x413930
  41391a:	cmp    ecx,0x45
  41391d:	mov    al,0x39
  41391f:	je     0x413930
  413921:	cmp    ecx,0x46
  413924:	mov    al,0x3a
  413926:	je     0x413930
  413928:	cmp    ecx,0x47
  41392b:	mov    al,0x3b
  41392d:	cmovne eax,ecx
  413930:	repz ret 
  413932:	nop    DWORD PTR [rax+0x0]
  413936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413940:	mov    eax,0x44
  413945:	cmp    ecx,0x38
  413948:	je     0x413960
  41394a:	cmp    ecx,0x39
  41394d:	mov    al,0x45
  41394f:	je     0x413960
  413951:	cmp    ecx,0x3a
  413954:	mov    al,0x46
  413956:	je     0x413960
  413958:	cmp    ecx,0x3b
  41395b:	mov    al,0x47
  41395d:	cmovne eax,ecx
  413960:	repz ret 
  413962:	nop    DWORD PTR [rax+0x0]
  413966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413970:	sub    ecx,0x48
  413973:	cmp    ecx,0x4
  413976:	setbe  al
  413979:	ret    
  41397a:	nop    WORD PTR [rax+rax*1+0x0]
  413980:	sub    ecx,0x44
  413983:	cmp    ecx,0x3
  413986:	setbe  al
  413989:	ret    
  41398a:	nop    WORD PTR [rax+rax*1+0x0]
  413990:	mov    r9d,DWORD PTR [rcx+0x8]
  413994:	mov    rax,QWORD PTR [rcx+0x10]
  413998:	test   r9d,r9d
  41399b:	je     0x4139d5
  41399d:	movzx  ecx,BYTE PTR [rax]
  4139a0:	cmp    cl,0x22
  4139a3:	je     0x4139e4
  4139a5:	cmp    cl,0x27
  4139a8:	je     0x4139e4
  4139aa:	lea    rdx,[rax+0x1]
  4139ae:	xor    ecx,ecx
  4139b0:	jmp    0x4139c9
  4139b2:	movzx  r8d,BYTE PTR [rdx]
  4139b6:	mov    r10,rdx
  4139b9:	add    rdx,0x1
  4139bd:	cmp    r8b,0x22
  4139c1:	je     0x4139e0
  4139c3:	cmp    r8b,0x27
  4139c7:	je     0x4139e0
  4139c9:	add    ecx,0x1
  4139cc:	cmp    ecx,r9d
  4139cf:	jne    0x4139b2
  4139d1:	add    rax,rcx
  4139d4:	ret    
  4139d5:	repz ret 
  4139d7:	nop    WORD PTR [rax+rax*1+0x0]
  4139e0:	movzx  ecx,BYTE PTR [r10]
  4139e4:	lea    r8d,[r9-0x1]
  4139e8:	cmp    BYTE PTR [rax+r8*1],cl
  4139ec:	mov    rdx,r8
  4139ef:	jne    0x413a00
  4139f1:	jmp    0x413a0a
  4139f3:	lea    r9d,[rdx-0x1]
  4139f7:	cmp    BYTE PTR [rax+r9*1],cl
  4139fb:	je     0x413a06
  4139fd:	mov    edx,r9d
  413a00:	test   edx,edx
  413a02:	jne    0x4139f3
  413a04:	xor    edx,edx
  413a06:	add    rax,rdx
  413a09:	ret    
  413a0a:	mov    edx,r9d
  413a0d:	jmp    0x413a06
  413a0f:	nop
  413a10:	push   r15
  413a12:	push   r14
  413a14:	push   r13
  413a16:	push   r12
  413a18:	push   rbp
  413a19:	push   rdi
  413a1a:	push   rsi
  413a1b:	push   rbx
  413a1c:	sub    rsp,0x68
  413a20:	mov    r11,QWORD PTR [rdx+0x10]
  413a24:	test   r8,r8
  413a27:	je     0x413a30
  413a29:	mov    QWORD PTR [r8],0x0
  413a30:	mov    edx,DWORD PTR [rdx+0x8]
  413a33:	mov    eax,0x111
  413a38:	cmp    edx,0x1
  413a3b:	je     0x413bf0
  413a41:	lea    rax,[r11+rdx*1]
  413a45:	mov    r14d,r9d
  413a48:	mov    r10,r8
  413a4b:	mov    r13,rcx
  413a4e:	mov    QWORD PTR [rsp+0x48],rax
  413a53:	movzx  eax,BYTE PTR [r11]
  413a57:	cmp    al,0x30
  413a59:	je     0x413c52
  413a5f:	mov    r12,QWORD PTR [rip+0x3db7a]        # 0x4515e0
  413a66:	xor    ebp,ebp
  413a68:	mov    DWORD PTR [rsp+0x44],0xa
  413a70:	xor    edx,edx
  413a72:	xor    r9d,r9d
  413a75:	xor    ecx,ecx
  413a77:	xor    edi,edi
  413a79:	mov    r8,QWORD PTR [rip+0x3db30]        # 0x4515b0
  413a80:	jmp    0x413ac1
  413a82:	shr    bx,0x8
  413a86:	and    bl,bpl
  413a89:	jne    0x413ad1
  413a8b:	cmp    eax,0x27
  413a8e:	je     0x413c01
  413a94:	cmp    eax,0x2e
  413a97:	jne    0x413fa4
  413a9d:	test   dl,dl
  413a9f:	jne    0x413c2f
  413aa5:	cmp    BYTE PTR [rsi],0x27
  413aa8:	je     0x413c21
  413aae:	test   ecx,ecx
  413ab0:	jne    0x413d54
  413ab6:	mov    ecx,0x1
  413abb:	movzx  eax,BYTE PTR [rsi]
  413abe:	mov    r11,rsi
  413ac1:	mov    ebx,eax
  413ac3:	lea    rsi,[r11+0x1]
  413ac7:	movzx  ebx,WORD PTR [r12+rbx*2]
  413acc:	test   bl,0x4
  413acf:	je     0x413a82
  413ad1:	cdqe   
  413ad3:	mov    r9d,0x1
  413ad9:	movzx  eax,BYTE PTR [r8+rax*1]
  413ade:	cmp    edi,eax
  413ae0:	cmovb  edi,eax
  413ae3:	xor    edx,edx
  413ae5:	jmp    0x413abb
  413ae7:	test   bpl,bpl
  413aea:	je     0x413b00
  413aec:	and    eax,0xffffffdf
  413aef:	cmp    eax,0x50
  413af2:	je     0x413fbb
  413af8:	nop    DWORD PTR [rax+rax*1+0x0]
  413b00:	test   dl,dl
  413b02:	mov    r15d,ecx
  413b05:	mov    rsi,r11
  413b08:	jne    0x413ee0
  413b0e:	test   ecx,ecx
  413b10:	je     0x413ca9
  413b16:	test   cl,cl
  413b18:	je     0x413dae
  413b1e:	cmp    DWORD PTR [rsp+0x44],0x8
  413b23:	jne    0x413dae
  413b29:	cmp    edi,0x9
  413b2c:	ja     0x413dbf
  413b32:	mov    DWORD PTR [rsp+0x44],0xa
  413b3a:	cmp    r15d,0x2
  413b3e:	je     0x413e48
  413b44:	mov    rbp,QWORD PTR [rsp+0x48]
  413b49:	lea    rcx,[r13+0x440]
  413b50:	mov    rdx,rsi
  413b53:	mov    QWORD PTR [rsp+0x50],r10
  413b58:	sub    rbp,rsi
  413b5b:	mov    r8,rbp
  413b5e:	call   0x412c00
  413b63:	test   eax,eax
  413b65:	mov    edi,eax
  413b67:	mov    r10,QWORD PTR [rsp+0x50]
  413b6c:	jne    0x41414c
  413b72:	cmp    BYTE PTR [r13+0x43e],0x0
  413b7a:	je     0x414302
  413b80:	test   r10,r10
  413b83:	je     0x4142f8
  413b89:	mov    QWORD PTR [r10],rsi
  413b8c:	mov    edi,0x1000040
  413b91:	cmp    QWORD PTR [rsp+0x48],rsi
  413b96:	je     0x413ba6
  413b98:	cmp    BYTE PTR [r13+0x429],0x0
  413ba0:	jne    0x414281
  413ba6:	cmp    edi,0x20
  413ba9:	je     0x414185
  413baf:	test   bl,bl
  413bb1:	je     0x414159
  413bb7:	cmp    DWORD PTR [rsp+0x44],0xa
  413bbc:	je     0x414159
  413bc2:	lea    rax,[rip+0x3301f]        # 0x446be8
  413bc9:	mov    QWORD PTR [rsp+0x30],rsi
  413bce:	mov    DWORD PTR [rsp+0x28],ebp
  413bd2:	mov    QWORD PTR [rsp+0x20],rax
  413bd7:	xor    r9d,r9d
  413bda:	mov    r8d,r14d
  413bdd:	mov    edx,0x3
  413be2:	mov    rcx,r13
  413be5:	call   0x412740
  413bea:	xor    eax,eax
  413bec:	nop    DWORD PTR [rax+0x0]
  413bf0:	add    rsp,0x68
  413bf4:	pop    rbx
  413bf5:	pop    rsi
  413bf6:	pop    rdi
  413bf7:	pop    rbp
  413bf8:	pop    r12
  413bfa:	pop    r13
  413bfc:	pop    r14
  413bfe:	pop    r15
  413c00:	ret    
  413c01:	cmp    BYTE PTR [r13+0x443],0x0
  413c09:	je     0x413b00
  413c0f:	test   dl,dl
  413c11:	jne    0x413eec
  413c17:	mov    edx,0x1
  413c1c:	jmp    0x413abb
  413c21:	cmp    BYTE PTR [r13+0x443],0x0
  413c29:	je     0x413aae
  413c2f:	lea    rax,[rip+0x32d52]        # 0x446988
  413c36:	mov    QWORD PTR [rsp+0x20],rax
  413c3b:	xor    r9d,r9d
  413c3e:	mov    r8d,r14d
  413c41:	mov    edx,0x3
  413c46:	mov    rcx,r13
  413c49:	call   0x412740
  413c4e:	xor    eax,eax
  413c50:	jmp    0x413bf0
  413c52:	movzx  eax,BYTE PTR [r11+0x1]
  413c57:	lea    rcx,[r11+0x1]
  413c5b:	mov    edx,eax
  413c5d:	and    edx,0xffffffdf
  413c60:	cmp    dl,0x58
  413c63:	jne    0x413d60
  413c69:	movzx  edx,BYTE PTR [r11+0x2]
  413c6e:	mov    r12,QWORD PTR [rip+0x3d96b]        # 0x4515e0
  413c75:	cmp    dl,0x2e
  413c78:	je     0x413d3b
  413c7e:	movzx  r8d,dl
  413c82:	test   BYTE PTR [r12+r8*2+0x1],0x1
  413c88:	jne    0x413d3b
  413c8e:	cmp    dl,0x27
  413c91:	je     0x414095
  413c97:	mov    r11,rcx
  413c9a:	xor    ebp,ebp
  413c9c:	mov    DWORD PTR [rsp+0x44],0x8
  413ca4:	jmp    0x413a70
  413ca9:	cmp    DWORD PTR [rsp+0x44],0x10
  413cae:	je     0x413b16
  413cb4:	mov    r8,QWORD PTR [rsp+0x48]
  413cb9:	lea    rcx,[r13+0x440]
  413cc0:	mov    rdx,r11
  413cc3:	mov    QWORD PTR [rsp+0x58],r10
  413cc8:	mov    BYTE PTR [rsp+0x50],r9b
  413ccd:	sub    r8,r11
  413cd0:	call   0x412c00
  413cd5:	test   eax,0x300000
  413cda:	mov    r11d,eax
  413cdd:	movzx  r9d,BYTE PTR [rsp+0x50]
  413ce3:	mov    r10,QWORD PTR [rsp+0x58]
  413ce8:	je     0x413dac
  413cee:	mov    ebx,eax
  413cf0:	or     ebx,0x2
  413cf3:	cmp    DWORD PTR [rsp+0x44],0x8
  413cf8:	je     0x4140a8
  413cfe:	cmp    BYTE PTR [r13+0x437],0x0
  413d06:	jne    0x4140be
  413d0c:	cmp    DWORD PTR [rsp+0x44],0x2
  413d11:	je     0x413ff9
  413d17:	cmp    DWORD PTR [rsp+0x44],0xa
  413d1c:	je     0x413fef
  413d22:	mov    ecx,DWORD PTR [rsp+0x44]
  413d26:	mov    edx,ebx
  413d28:	mov    eax,ebx
  413d2a:	or     dh,0x4
  413d2d:	or     ah,0x2
  413d30:	cmp    ecx,0x10
  413d33:	cmovne eax,edx
  413d36:	jmp    0x413bf0
  413d3b:	add    r11,0x2
  413d3f:	movzx  eax,dl
  413d42:	mov    ebp,0x1
  413d47:	mov    DWORD PTR [rsp+0x44],0x10
  413d4f:	jmp    0x413a70
  413d54:	lea    rax,[rip+0x32c5d]        # 0x4469b8
  413d5b:	jmp    0x413c36
  413d60:	cmp    dl,0x42
  413d63:	jne    0x413d93
  413d65:	movzx  edx,BYTE PTR [r11+0x2]
  413d6a:	lea    r8d,[rdx-0x30]
  413d6e:	cmp    r8b,0x1
  413d72:	jbe    0x414078
  413d78:	cmp    dl,0x27
  413d7b:	jne    0x413d93
  413d7d:	cmp    BYTE PTR [r13+0x443],0x0
  413d85:	je     0x413d93
  413d87:	lea    rax,[rip+0x32bba]        # 0x446948
  413d8e:	jmp    0x413c36
  413d93:	mov    r11,rcx
  413d96:	xor    ebp,ebp
  413d98:	mov    DWORD PTR [rsp+0x44],0x8
  413da0:	mov    r12,QWORD PTR [rip+0x3d839]        # 0x4515e0
  413da7:	jmp    0x413a70
  413dac:	xor    ecx,ecx
  413dae:	cmp    edi,DWORD PTR [rsp+0x44]
  413db2:	jb     0x413dec
  413db4:	cmp    DWORD PTR [rsp+0x44],0x2
  413db9:	je     0x414049
  413dbf:	add    edi,0x30
  413dc2:	lea    rax,[rip+0x32cbf]        # 0x446a88
  413dc9:	mov    DWORD PTR [rsp+0x28],edi
  413dcd:	mov    QWORD PTR [rsp+0x20],rax
  413dd2:	xor    r9d,r9d
  413dd5:	mov    r8d,r14d
  413dd8:	mov    edx,0x3
  413ddd:	mov    rcx,r13
  413de0:	call   0x412740
  413de5:	xor    eax,eax
  413de7:	jmp    0x413bf0
  413dec:	test   cl,cl
  413dee:	je     0x413ef8
  413df4:	cmp    DWORD PTR [rsp+0x44],0x2
  413df9:	lea    rax,[rip+0x32cb0]        # 0x446ab0
  413e00:	je     0x413c36
  413e06:	cmp    r9b,bpl
  413e09:	lea    rax,[rip+0x32cd0]        # 0x446ae0
  413e10:	jb     0x413c36
  413e16:	test   bpl,bpl
  413e19:	je     0x413b3a
  413e1f:	cmp    BYTE PTR [r13+0x437],0x0
  413e27:	je     0x413e37
  413e29:	cmp    BYTE PTR [r13+0x435],0x0
  413e31:	je     0x4142ca
  413e37:	cmp    r15d,0x2
  413e3b:	lea    rax,[rip+0x32d0e]        # 0x446b50
  413e42:	jne    0x413c36
  413e48:	movzx  eax,BYTE PTR [rsi]
  413e4b:	lea    edx,[rax-0x2b]
  413e4e:	and    edx,0xfd
  413e54:	jne    0x413e5e
  413e56:	movzx  eax,BYTE PTR [rsi+0x1]
  413e5a:	add    rsi,0x1
  413e5e:	movzx  edx,al
  413e61:	test   BYTE PTR [r12+rdx*2],0x4
  413e66:	jne    0x413e90
  413e68:	cmp    al,0x27
  413e6a:	jne    0x413e7a
  413e6c:	cmp    BYTE PTR [r13+0x443],0x0
  413e74:	jne    0x413fe3
  413e7a:	lea    rax,[rip+0x32cb8]        # 0x446b39
  413e81:	jmp    0x413c36
  413e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e90:	xor    edx,edx
  413e92:	cmp    al,0x27
  413e94:	je     0x413ec1
  413e96:	add    rsi,0x1
  413e9a:	movzx  ecx,BYTE PTR [rsi]
  413e9d:	test   BYTE PTR [r12+rcx*2],0x4
  413ea2:	mov    rax,rcx
  413ea5:	jne    0x413e90
  413ea7:	cmp    cl,0x27
  413eaa:	jne    0x413ece
  413eac:	cmp    BYTE PTR [r13+0x443],0x0
  413eb4:	je     0x413ece
  413eb6:	mov    eax,0x27
  413ebb:	xor    edx,edx
  413ebd:	cmp    al,0x27
  413ebf:	jne    0x413e96
  413ec1:	cmp    BYTE PTR [r13+0x443],0x0
  413ec9:	setne  dl
  413ecc:	jmp    0x413e96
  413ece:	test   dl,dl
  413ed0:	je     0x413b44
  413ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ee0:	lea    rax,[rip+0x32b21]        # 0x446a08
  413ee7:	jmp    0x413c36
  413eec:	lea    rax,[rip+0x32a7a]        # 0x44696d
  413ef3:	jmp    0x413c36
  413ef8:	mov    r12,QWORD PTR [rsp+0x48]
  413efd:	lea    rcx,[r13+0x440]
  413f04:	mov    rdx,rsi
  413f07:	mov    QWORD PTR [rsp+0x50],r10
  413f0c:	sub    r12,rsi
  413f0f:	mov    r8,r12
  413f12:	call   0x412f30
  413f17:	test   eax,eax
  413f19:	mov    edi,eax
  413f1b:	mov    r10,QWORD PTR [rsp+0x50]
  413f20:	jne    0x41405c
  413f26:	cmp    BYTE PTR [r13+0x43e],0x0
  413f2e:	je     0x41423c
  413f34:	test   r10,r10
  413f37:	je     0x414252
  413f3d:	mov    QWORD PTR [r10],rsi
  413f40:	xor    ebp,ebp
  413f42:	mov    ebx,0x1001041
  413f47:	mov    r15d,0x40
  413f4d:	mov    edi,0x1001040
  413f52:	cmp    BYTE PTR [r13+0x429],0x0
  413f5a:	jne    0x4140f6
  413f60:	cmp    r15d,0x40
  413f64:	je     0x4141e0
  413f6a:	test   ebp,ebp
  413f6c:	je     0x413d0c
  413f72:	cmp    BYTE PTR [r13+0x437],0x0
  413f7a:	je     0x413d0c
  413f80:	lea    rax,[rip+0x32d29]        # 0x446cb0
  413f87:	xor    r9d,r9d
  413f8a:	mov    r8d,r14d
  413f8d:	mov    edx,0x2
  413f92:	mov    rcx,r13
  413f95:	mov    QWORD PTR [rsp+0x20],rax
  413f9a:	call   0x412740
  413f9f:	jmp    0x413d0c
  413fa4:	cmp    DWORD PTR [rsp+0x44],0xa
  413fa9:	ja     0x413ae7
  413faf:	and    eax,0xffffffdf
  413fb2:	cmp    eax,0x45
  413fb5:	jne    0x413b00
  413fbb:	test   dl,dl
  413fbd:	jne    0x413fe3
  413fbf:	cmp    BYTE PTR [r11+0x1],0x27
  413fc4:	mov    ecx,0x1
  413fc9:	mov    r15d,0x2
  413fcf:	jne    0x413b1e
  413fd5:	cmp    BYTE PTR [r13+0x443],0x0
  413fdd:	je     0x413b1e
  413fe3:	lea    rax,[rip+0x329f6]        # 0x4469e0
  413fea:	jmp    0x413c36
  413fef:	mov    eax,ebx
  413ff1:	or     ah,0x1
  413ff4:	jmp    0x413bf0
  413ff9:	cmp    BYTE PTR [r13+0x442],0x0
  414001:	jne    0x41403f
  414003:	cmp    BYTE PTR [r13+0x437],0x0
  41400b:	je     0x41403f
  41400d:	cmp    BYTE PTR [r13+0x418],0x0
  414015:	lea    rdx,[rip+0x32904]        # 0x446920
  41401c:	lea    rax,[rip+0x328c5]        # 0x4468e8
  414023:	mov    r8d,r14d
  414026:	mov    rcx,r13
  414029:	cmove  rax,rdx
  41402d:	xor    r9d,r9d
  414030:	mov    edx,0x2
  414035:	mov    QWORD PTR [rsp+0x20],rax
  41403a:	call   0x412740
  41403f:	mov    eax,ebx
  414041:	or     ah,0x8
  414044:	jmp    0x413bf0
  414049:	add    edi,0x30
  41404c:	lea    rax,[rip+0x32a0d]        # 0x446a60
  414053:	mov    DWORD PTR [rsp+0x28],edi
  414057:	jmp    0x413dcd
  41405c:	mov    r15d,eax
  41405f:	mov    ebp,eax
  414061:	mov    ebx,eax
  414063:	and    r15d,0xf0
  41406a:	and    ebp,0x2000
  414070:	or     ebx,0x1
  414073:	jmp    0x413f52
  414078:	add    r11,0x2
  41407c:	movzx  eax,dl
  41407f:	xor    ebp,ebp
  414081:	mov    DWORD PTR [rsp+0x44],0x2
  414089:	mov    r12,QWORD PTR [rip+0x3d550]        # 0x4515e0
  414090:	jmp    0x413a70
  414095:	cmp    BYTE PTR [r13+0x443],0x0
  41409d:	je     0x413c97
  4140a3:	jmp    0x413d87
  4140a8:	cmp    BYTE PTR [r13+0x437],0x0
  4140b0:	je     0x413fef
  4140b6:	mov    DWORD PTR [rsp+0x44],0xa
  4140be:	lea    rax,[rip+0x3296b]        # 0x446a30
  4140c5:	xor    r9d,r9d
  4140c8:	mov    r8d,r14d
  4140cb:	mov    edx,0x2
  4140d0:	mov    rcx,r13
  4140d3:	mov    DWORD PTR [rsp+0x48],r11d
  4140d8:	mov    QWORD PTR [rsp+0x20],rax
  4140dd:	call   0x412740
  4140e2:	mov    r11d,DWORD PTR [rsp+0x48]
  4140e7:	and    r11d,0x2000
  4140ee:	mov    ebp,r11d
  4140f1:	jmp    0x413f6a
  4140f6:	mov    rcx,r13
  4140f9:	call   0x40a710
  4140fe:	test   eax,eax
  414100:	jne    0x413f60
  414106:	and    edi,0x3000
  41410c:	cmp    r15d,0x40
  414110:	je     0x414269
  414116:	test   edi,edi
  414118:	je     0x413f6a
  41411e:	mov    edx,0x6
  414123:	lea    rax,[rip+0x32b5e]        # 0x446c88
  41412a:	mov    QWORD PTR [rsp+0x30],rsi
  41412f:	mov    DWORD PTR [rsp+0x28],r12d
  414134:	xor    r9d,r9d
  414137:	mov    r8d,r14d
  41413a:	mov    rcx,r13
  41413d:	mov    QWORD PTR [rsp+0x20],rax
  414142:	call   0x412780
  414147:	jmp    0x413f60
  41414c:	mov    ebx,eax
  41414e:	shr    ebx,0xe
  414151:	and    ebx,0x1
  414154:	jmp    0x413b91
  414159:	test   edi,0x300000
  41415f:	je     0x4141ae
  414161:	cmp    BYTE PTR [r13+0x437],0x0
  414169:	jne    0x4142be
  41416f:	mov    ebx,edi
  414171:	or     ebx,0x2
  414174:	and    edi,0x2000
  41417a:	jne    0x413f72
  414180:	jmp    0x413d17
  414185:	cmp    BYTE PTR [r13+0x437],0x0
  41418d:	lea    rax,[rip+0x32a24]        # 0x446bb8
  414194:	je     0x4141ae
  414196:	mov    QWORD PTR [rsp+0x20],rax
  41419b:	xor    r9d,r9d
  41419e:	mov    r8d,r14d
  4141a1:	mov    edx,0x2
  4141a6:	mov    rcx,r13
  4141a9:	call   0x412740
  4141ae:	test   bl,bl
  4141b0:	je     0x41416f
  4141b2:	cmp    BYTE PTR [r13+0x437],0x0
  4141ba:	je     0x41416f
  4141bc:	lea    rax,[rip+0x32a65]        # 0x446c28
  4141c3:	xor    r9d,r9d
  4141c6:	mov    r8d,r14d
  4141c9:	mov    edx,0x2
  4141ce:	mov    rcx,r13
  4141d1:	mov    QWORD PTR [rsp+0x20],rax
  4141d6:	call   0x412740
  4141db:	jmp    0x41416f
  4141dd:	nop    DWORD PTR [rax]
  4141e0:	cmp    BYTE PTR [r13+0x42a],0x0
  4141e8:	je     0x413f6a
  4141ee:	cmp    BYTE PTR [r13+0x418],0x0
  4141f6:	lea    rdx,[rip+0x326c3]        # 0x4468c0
  4141fd:	lea    rax,[rip+0x32694]        # 0x446898
  414204:	mov    r9d,0x0
  41420a:	mov    r8d,r14d
  41420d:	mov    rcx,r13
  414210:	cmove  rax,rdx
  414214:	cmp    BYTE PTR [r13+0x435],0x0
  41421c:	mov    edx,0x7
  414221:	mov    QWORD PTR [rsp+0x20],rax
  414226:	je     0x414232
  414228:	call   0x412780
  41422d:	jmp    0x413f6a
  414232:	call   0x4127c0
  414237:	jmp    0x413f6a
  41423c:	mov    QWORD PTR [rsp+0x30],rsi
  414241:	mov    DWORD PTR [rsp+0x28],r12d
  414246:	lea    rax,[rip+0x32a0b]        # 0x446c58
  41424d:	jmp    0x413bd2
  414252:	xor    ebp,ebp
  414254:	mov    ebx,0x1001041
  414259:	mov    r15d,0x40
  41425f:	mov    edi,0x1001040
  414264:	jmp    0x413f52
  414269:	cmp    BYTE PTR [r13+0x42a],0x0
  414271:	je     0x414116
  414277:	mov    edx,0x7
  41427c:	jmp    0x414123
  414281:	mov    rcx,r13
  414284:	call   0x40a710
  414289:	test   eax,eax
  41428b:	jne    0x413ba6
  414291:	lea    rax,[rip+0x329f0]        # 0x446c88
  414298:	mov    QWORD PTR [rsp+0x30],rsi
  41429d:	mov    DWORD PTR [rsp+0x28],ebp
  4142a1:	xor    r9d,r9d
  4142a4:	mov    r8d,r14d
  4142a7:	mov    edx,0x6
  4142ac:	mov    QWORD PTR [rsp+0x20],rax
  4142b1:	mov    rcx,r13
  4142b4:	call   0x412780
  4142b9:	jmp    0x413ba6
  4142be:	lea    rax,[rip+0x3276b]        # 0x446a30
  4142c5:	jmp    0x414196
  4142ca:	lea    rax,[rip+0x3283f]        # 0x446b10
  4142d1:	xor    r9d,r9d
  4142d4:	mov    r8d,r14d
  4142d7:	mov    edx,0x2
  4142dc:	mov    rcx,r13
  4142df:	mov    QWORD PTR [rsp+0x50],r10
  4142e4:	mov    QWORD PTR [rsp+0x20],rax
  4142e9:	call   0x412740
  4142ee:	mov    r10,QWORD PTR [rsp+0x50]
  4142f3:	jmp    0x413e37
  4142f8:	mov    edi,0x1000040
  4142fd:	jmp    0x413b91
  414302:	mov    QWORD PTR [rsp+0x30],rsi
  414307:	mov    DWORD PTR [rsp+0x28],ebp
  41430b:	lea    rax,[rip+0x32876]        # 0x446b88
  414312:	jmp    0x413bd2
  414317:	nop    WORD PTR [rax+rax*1+0x0]
  414320:	push   r15
  414322:	push   r14
  414324:	push   r13
  414326:	push   r12
  414328:	push   rbp
  414329:	push   rdi
  41432a:	push   rsi
  41432b:	push   rbx
  41432c:	sub    rsp,0xc8
  414333:	mov    edi,DWORD PTR [r8+0x8]
  414337:	mov    rbx,QWORD PTR [r8+0x10]
  41433b:	mov    DWORD PTR [rsp+0x128],r9d
  414343:	shr    r9d,0xc
  414347:	mov    rsi,rcx
  41434a:	and    r9d,0x1
  41434e:	mov    r12,rdx
  414351:	mov    QWORD PTR [rcx+0x8],0x0
  414359:	mov    QWORD PTR [rcx],0x0
  414360:	mov    BYTE PTR [rcx+0x10],r9b
  414364:	mov    rax,rdi
  414367:	add    rdi,rbx
  41436a:	mov    BYTE PTR [rcx+0x11],0x0
  41436e:	cmp    eax,0x1
  414371:	je     0x414741
  414377:	mov    rax,QWORD PTR [rdx+0x470]
  41437e:	mov    edx,DWORD PTR [rsp+0x128]
  414385:	and    edx,0xf00
  41438b:	mov    QWORD PTR [rsp+0x30],rax
  414390:	cmp    edx,0x400
  414396:	je     0x414723
  41439c:	cmp    edx,0x200
  4143a2:	je     0x414763
  4143a8:	cmp    edx,0x800
  4143ae:	mov    rax,0xfffffffffffffff7
  4143b5:	mov    QWORD PTR [rsp+0x28],0xa
  4143be:	mov    ebp,0xa
  4143c3:	je     0x414790
  4143c9:	cmp    QWORD PTR [rsp+0x30],0x3f
  4143cf:	mov    rdx,0xffffffffffffffff
  4143d6:	ja     0x4143e4
  4143d8:	mov    ecx,0x40
  4143dd:	sub    ecx,DWORD PTR [rsp+0x30]
  4143e1:	shr    rdx,cl
  4143e4:	add    rax,rdx
  4143e7:	xor    edx,edx
  4143e9:	div    QWORD PTR [rsp+0x28]
  4143ee:	add    rax,0x1
  4143f2:	cmp    rbx,rdi
  4143f5:	jae    0x4144b5
  4143fb:	lea    rcx,[rsp+0x80]
  414403:	mov    BYTE PTR [rsp+0x47],0x0
  414408:	mov    r13,QWORD PTR [rip+0x3d1d1]        # 0x4515e0
  41440f:	mov    QWORD PTR [rsp+0x48],rcx
  414414:	lea    rcx,[rsp+0x60]
  414419:	mov    QWORD PTR [rsp+0x50],rcx
  41441e:	mov    rcx,QWORD PTR [rip+0x3d18b]        # 0x4515b0
  414425:	mov    QWORD PTR [rsp+0x58],rcx
  41442a:	jmp    0x414452
  41442c:	nop    DWORD PTR [rax+0x0]
  414430:	cmp    ebp,0x10
  414433:	je     0x414680
  414439:	cmp    cl,0x27
  41443c:	jne    0x414498
  41443e:	cmp    BYTE PTR [r12+0x443],0x0
  414447:	je     0x414498
  414449:	add    rbx,0x1
  41444d:	cmp    rbx,rdi
  414450:	je     0x414498
  414452:	movzx  edx,BYTE PTR [rbx]
  414455:	mov    r8d,edx
  414458:	mov    ecx,edx
  41445a:	movzx  r8d,WORD PTR [r13+r8*2+0x0]
  414460:	test   r8b,0x4
  414464:	je     0x414430
  414466:	mov    rcx,QWORD PTR [rip+0x3d143]        # 0x4515b0
  41446d:	movsxd rdx,edx
  414470:	movzx  r8d,BYTE PTR [rcx+rdx*1]
  414475:	mov    rdx,QWORD PTR [rsi+0x8]
  414479:	cmp    rdx,rax
  41447c:	jae    0x414533
  414482:	imul   rdx,QWORD PTR [rsp+0x28]
  414488:	add    rbx,0x1
  41448c:	add    rdx,r8
  41448f:	cmp    rbx,rdi
  414492:	mov    QWORD PTR [rsi+0x8],rdx
  414496:	jne    0x414452
  414498:	cmp    BYTE PTR [rsp+0x47],0x0
  41449d:	je     0x4144b0
  41449f:	test   DWORD PTR [rsp+0x128],0x1000000
  4144aa:	je     0x4147a7
  4144b0:	movzx  r9d,BYTE PTR [rsi+0x10]
  4144b5:	test   r9b,r9b
  4144b8:	jne    0x41451c
  4144ba:	cmp    BYTE PTR [r12+0x43d],0x0
  4144c3:	jne    0x414752
  4144c9:	cmp    QWORD PTR [rsp+0x30],0x40
  4144cf:	mov    rcx,QWORD PTR [rsi]
  4144d2:	mov    rax,QWORD PTR [rsi+0x8]
  4144d6:	ja     0x414781
  4144dc:	mov    ecx,DWORD PTR [rsp+0x30]
  4144e0:	sub    ecx,0x1
  4144e3:	shr    rax,cl
  4144e6:	and    eax,0x1
  4144e9:	xor    rax,0x1
  4144ed:	and    eax,0x1
  4144f0:	test   al,al
  4144f2:	jne    0x41451c
  4144f4:	cmp    ebp,0xa
  4144f7:	jne    0x414518
  4144f9:	cmp    BYTE PTR [r12+0x435],0x1
  414502:	lea    r8,[rip+0x327ff]        # 0x446d08
  414509:	mov    rcx,r12
  41450c:	sbb    edx,edx
  41450e:	not    edx
  414510:	and    edx,0x2
  414513:	call   0x412660
  414518:	mov    BYTE PTR [rsi+0x10],0x1
  41451c:	mov    rax,rsi
  41451f:	add    rsp,0xc8
  414526:	pop    rbx
  414527:	pop    rsi
  414528:	pop    rdi
  414529:	pop    rbp
  41452a:	pop    r12
  41452c:	pop    r13
  41452e:	pop    r14
  414530:	pop    r15
  414532:	ret    
  414533:	movzx  eax,BYTE PTR [rsi+0x10]
  414537:	cmp    ebp,0x2
  41453a:	mov    r11,QWORD PTR [rsi]
  41453d:	mov    BYTE PTR [rsp+0x38],al
  414541:	je     0x4146e0
  414547:	xor    eax,eax
  414549:	cmp    ebp,0x10
  41454c:	sete   al
  41454f:	xor    r9d,r9d
  414552:	add    eax,0x3
  414555:	cmp    ebp,0x10
  414558:	setne  r9b
  41455c:	add    r9d,0x3c
  414560:	mov    ecx,r9d
  414563:	mov    r15,r11
  414566:	mov    r14,rdx
  414569:	shr    r15,cl
  41456c:	mov    ecx,eax
  41456e:	mov    r10,rdx
  414571:	test   r15,r15
  414574:	setne  r15b
  414578:	shl    r14,cl
  41457b:	mov    ecx,r9d
  41457e:	shr    r10,cl
  414581:	mov    ecx,eax
  414583:	mov    r9,r10
  414586:	mov    r10,r11
  414589:	shl    r10,cl
  41458c:	or     r9,r10
  41458f:	cmp    ebp,0xa
  414592:	movzx  r10d,BYTE PTR [rsp+0x38]
  414598:	je     0x414700
  41459e:	add    r14,r8
  4145a1:	jae    0x4145b4
  4145a3:	mov    edx,0x1
  4145a8:	add    r9,rdx
  4145ab:	mov    eax,0x1
  4145b0:	cmovb  r15d,eax
  4145b4:	mov    BYTE PTR [rsp+0xb0],r10b
  4145bc:	mov    BYTE PTR [rsp+0xb1],r15b
  4145c4:	mov    rdx,QWORD PTR [rsp+0x50]
  4145c9:	mov    rax,QWORD PTR [rsp+0xb0]
  4145d1:	mov    rcx,QWORD PTR [rsp+0x48]
  4145d6:	mov    r8,QWORD PTR [rsp+0x30]
  4145db:	mov    QWORD PTR [rsp+0x60],r9
  4145e0:	mov    QWORD PTR [rsp+0x38],r9
  4145e5:	mov    QWORD PTR [rsp+0x70],rax
  4145ea:	mov    QWORD PTR [rsp+0x68],r14
  4145ef:	call   0x4128f0
  4145f4:	mov    rdx,QWORD PTR [rsp+0x88]
  4145fc:	mov    rax,QWORD PTR [rsp+0x90]
  414604:	mov    rcx,QWORD PTR [rsp+0x80]
  41460c:	mov    r9,QWORD PTR [rsp+0x38]
  414611:	mov    QWORD PTR [rsp+0xb0],rax
  414619:	shr    ax,0x8
  41461d:	cmp    rdx,r14
  414620:	mov    QWORD PTR [rsp+0xa0],rcx
  414628:	mov    QWORD PTR [rsp+0xa8],rdx
  414630:	je     0x4146f0
  414636:	mov    eax,0x1
  41463b:	mov    BYTE PTR [rsp+0xb1],al
  414642:	mov    rax,QWORD PTR [rsp+0xa0]
  41464a:	mov    QWORD PTR [rsi],rax
  41464d:	mov    rax,QWORD PTR [rsp+0xa8]
  414655:	mov    QWORD PTR [rsi+0x8],rax
  414659:	mov    rax,QWORD PTR [rsp+0xb0]
  414661:	mov    ecx,eax
  414663:	mov    QWORD PTR [rsi+0x10],rax
  414667:	xor    eax,eax
  414669:	shr    cx,0x8
  41466d:	or     BYTE PTR [rsp+0x47],cl
  414671:	jmp    0x414449
  414676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414680:	test   r8w,0x100
  414686:	je     0x414439
  41468c:	mov    rcx,QWORD PTR [rsp+0x58]
  414691:	movsxd rdx,edx
  414694:	movzx  r8d,BYTE PTR [rcx+rdx*1]
  414699:	mov    rdx,QWORD PTR [rsi+0x8]
  41469d:	cmp    rdx,rax
  4146a0:	jb     0x414482
  4146a6:	mov    rax,QWORD PTR [rsi]
  4146a9:	mov    r14,rdx
  4146ac:	movzx  r10d,BYTE PTR [rsi+0x10]
  4146b1:	mov    rcx,rax
  4146b4:	shr    rcx,0x3c
  4146b8:	test   rcx,rcx
  4146bb:	setne  r15b
  4146bf:	shl    rax,0x4
  4146c3:	shr    rdx,0x3c
  4146c7:	mov    r9,rax
  4146ca:	shl    r14,0x4
  4146ce:	or     r9,rdx
  4146d1:	jmp    0x41459e
  4146d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4146e0:	mov    eax,0x1
  4146e5:	mov    r9d,0x3f
  4146eb:	jmp    0x414560
  4146f0:	cmp    rcx,r9
  4146f3:	mov    edx,0x1
  4146f8:	cmovne eax,edx
  4146fb:	jmp    0x41463b
  414700:	lea    rax,[rdx+rdx*1]
  414704:	shr    rdx,0x3f
  414708:	lea    rdx,[rdx+r11*2]
  41470c:	add    r8,rax
  41470f:	adc    rdx,0x0
  414713:	xor    eax,eax
  414715:	add    r14,r8
  414718:	setb   al
  41471b:	add    rdx,rax
  41471e:	jmp    0x4145a8
  414723:	add    rbx,0x1
  414727:	mov    rax,0xfffffffffffffff9
  41472e:	mov    QWORD PTR [rsp+0x28],0x8
  414737:	mov    ebp,0x8
  41473c:	jmp    0x4143c9
  414741:	movzx  eax,BYTE PTR [rbx]
  414744:	sub    eax,0x30
  414747:	cdqe   
  414749:	mov    QWORD PTR [rcx+0x8],rax
  41474d:	jmp    0x41451c
  414752:	cmp    BYTE PTR [r12+0x10],0x0
  414758:	jne    0x41451c
  41475e:	jmp    0x4144c9
  414763:	add    rbx,0x2
  414767:	mov    rax,0xfffffffffffffff1
  41476e:	mov    QWORD PTR [rsp+0x28],0x10
  414777:	mov    ebp,0x10
  41477c:	jmp    0x4143c9
  414781:	mov    rdx,QWORD PTR [rsp+0x30]
  414786:	call   0x413030
  41478b:	jmp    0x4144f0
  414790:	add    rbx,0x2
  414794:	mov    al,0xff
  414796:	mov    QWORD PTR [rsp+0x28],0x2
  41479f:	mov    bpl,0x2
  4147a2:	jmp    0x4143c9
  4147a7:	lea    r8,[rip+0x3252a]        # 0x446cd8
  4147ae:	mov    edx,0x2
  4147b3:	mov    rcx,r12
  4147b6:	call   0x412660
  4147bb:	jmp    0x41451c
  4147c0:	push   rdi
  4147c1:	push   rsi
  4147c2:	push   rbx
  4147c3:	sub    rsp,0x20
  4147c7:	mov    rdi,rcx
  4147ca:	mov    rcx,QWORD PTR [rcx+0x400]
  4147d1:	mov    rbx,QWORD PTR [rdi+0x408]
  4147d8:	sub    rbx,rcx
  4147db:	mov    rax,rbx
  4147de:	sar    rax,0x3
  4147e2:	lea    rsi,[rax+0x32]
  4147e6:	shl    rsi,0x4
  4147ea:	mov    rdx,rsi
  4147ed:	call   0x438650
  4147f2:	add    rsi,rax
  4147f5:	mov    QWORD PTR [rdi+0x400],rax
  4147fc:	add    rax,rbx
  4147ff:	mov    QWORD PTR [rdi+0x408],rsi
  414806:	add    rsp,0x20
  41480a:	pop    rbx
  41480b:	pop    rsi
  41480c:	pop    rdi
  41480d:	ret    
  41480e:	xchg   ax,ax
  414810:	push   r15
  414812:	push   r14
  414814:	push   r13
  414816:	push   r12
  414818:	push   rbp
  414819:	push   rdi
  41481a:	push   rsi
  41481b:	push   rbx
  41481c:	sub    rsp,0x288
  414823:	mov    r14,QWORD PTR [rcx+0x400]
  41482a:	lea    rax,[rsp+0x158]
  414832:	mov    DWORD PTR [rcx+0x1c],0x0
  414839:	mov    QWORD PTR [rcx+0x198],0x0
  414844:	mov    DWORD PTR [rsp+0xec],edx
  41484b:	mov    DWORD PTR [rsp+0x158],0x0
  414856:	mov    r15,rcx
  414859:	mov    QWORD PTR [rsp+0x78],rax
  41485e:	lea    rax,[rsp+0x260]
  414866:	mov    DWORD PTR [r14+0x24],0x16
  41486e:	mov    BYTE PTR [rsp+0xc6],0x1
  414876:	mov    BYTE PTR [rsp+0xc7],0x0
  41487e:	mov    r13,r14
  414881:	mov    QWORD PTR [rsp+0x88],rax
  414889:	lea    rax,[rsp+0x130]
  414891:	mov    DWORD PTR [rsp+0xc0],0x0
  41489c:	mov    QWORD PTR [rsp+0x68],rax
  4148a1:	lea    rax,[rsp+0xf0]
  4148a9:	mov    QWORD PTR [rsp+0x80],rax
  4148b1:	lea    rax,[rsp+0x110]
  4148b9:	mov    QWORD PTR [rsp+0x70],rax
  4148be:	lea    rax,[rsp+0x1e0]
  4148c6:	mov    QWORD PTR [rsp+0xd0],rax
  4148ce:	lea    rax,[rsp+0x15c]
  4148d6:	mov    QWORD PTR [rsp+0xe0],rax
  4148de:	xchg   ax,ax
  4148e0:	mov    rdx,QWORD PTR [rsp+0x78]
  4148e5:	mov    rcx,r15
  4148e8:	add    DWORD PTR [rsp+0xc0],0x1
  4148f0:	call   0x40c7e0
  4148f5:	movzx  edx,BYTE PTR [rax+0x4]
  4148f9:	mov    ecx,DWORD PTR [rsp+0x158]
  414900:	mov    QWORD PTR [rsp+0x58],rax
  414905:	cmp    dl,0x3b
  414908:	mov    eax,edx
  41490a:	mov    DWORD PTR [rsp+0x64],ecx
  41490e:	ja     0x415360
  414914:	lea    rcx,[rip+0x32839]        # 0x447154
  41491b:	movzx  r8d,dl
  41491f:	movsxd r8,DWORD PTR [rcx+r8*4]
  414923:	add    rcx,r8
  414926:	jmp    rcx
  414928:	nop    DWORD PTR [rax+rax*1+0x0]
  414930:	cmp    BYTE PTR [rsp+0xc6],0x0
  414938:	je     0x41577c
  41493e:	sub    eax,0x25
  414941:	mov    DWORD PTR [rsp+0x240],0x0
  41494c:	cmp    al,0x16
  41494e:	ja     0x415d74
  414954:	lea    rdx,[rip+0x328e9]        # 0x447244
  41495b:	movzx  eax,al
  41495e:	movsxd rax,DWORD PTR [rdx+rax*4]
  414962:	add    rdx,rax
  414965:	jmp    rdx
  414967:	nop    WORD PTR [rax+rax*1+0x0]
  414970:	cmp    BYTE PTR [rsp+0xc6],0x0
  414978:	je     0x415760
  41497e:	mov    DWORD PTR [rsp+0x60],0x1c
  414986:	mov    DWORD PTR [rsp+0x54],0x1c
  41498e:	movsxd rcx,DWORD PTR [rsp+0x60]
  414993:	lea    r12,[rip+0x329a6]        # 0x447340
  41499a:	movzx  eax,BYTE PTR [r12+rcx*2+0x1]
  4149a0:	test   al,0x1
  4149a2:	je     0x415624
  4149a8:	mov    r14d,DWORD PTR [r13+0x24]
  4149ac:	lea    edx,[r14-0x1]
  4149b0:	cmp    edx,0x1b
  4149b3:	ja     0x415390
  4149b9:	movzx  edx,BYTE PTR [r12+rcx*2]
  4149be:	shr    al,1
  4149c0:	mov    QWORD PTR [rsp+0x40],r12
  4149c5:	and    eax,0x1
  4149c8:	sub    edx,eax
  4149ca:	mov    DWORD PTR [rsp+0x50],edx
  4149ce:	mov    rdi,QWORD PTR [rsp+0x40]
  4149d3:	movsxd rax,r14d
  4149d6:	movzx  edx,BYTE PTR [rdi+rax*2]
  4149da:	cmp    DWORD PTR [rsp+0x50],edx
  4149de:	jae    0x415920
  4149e4:	cmp    BYTE PTR [r15+0x42c],0x0
  4149ec:	je     0x414a00
  4149ee:	lea    rdx,[rip+0x3294b]        # 0x447340
  4149f5:	test   BYTE PTR [rdx+rax*2+0x1],0x4
  4149fa:	jne    0x415670
  414a00:	cmp    r14d,0x1c
  414a04:	ja     0x415390
  414a0a:	lea    rdi,[rip+0x3288f]        # 0x4472a0
  414a11:	mov    eax,r14d
  414a14:	movsxd rax,DWORD PTR [rdi+rax*4]
  414a18:	add    rax,rdi
  414a1b:	jmp    rax
  414a1d:	nop    DWORD PTR [rax]
  414a20:	cmp    DWORD PTR [rsp+0xc0],0x1
  414a28:	sete   BYTE PTR [rsp+0xc7]
  414a30:	lea    r12,[rip+0x32909]        # 0x447340
  414a37:	movsxd rcx,edx
  414a3a:	mov    DWORD PTR [rsp+0x60],edx
  414a3e:	movzx  eax,BYTE PTR [r12+rcx*2+0x1]
  414a44:	test   al,0x1
  414a46:	je     0x415600
  414a4c:	cmp    BYTE PTR [rsp+0xc6],0x0
  414a54:	je     0x41577c
  414a5a:	mov    r14d,DWORD PTR [r13+0x24]
  414a5e:	lea    r8d,[r14-0x1]
  414a62:	mov    DWORD PTR [rsp+0x54],edx
  414a66:	cmp    r8d,0x1b
  414a6a:	ja     0x415390
  414a70:	cmp    edx,0x14
  414a73:	jne    0x4149b9
  414a79:	jmp    0x414bc8
  414a7e:	xchg   ax,ax
  414a80:	cmp    BYTE PTR [rsp+0xc6],0x0
  414a88:	je     0x415760
  414a8e:	mov    DWORD PTR [rsp+0x60],0x1b
  414a96:	mov    DWORD PTR [rsp+0x54],0x1b
  414a9e:	jmp    0x41498e
  414aa3:	mov    rax,QWORD PTR [r13-0x20]
  414aa7:	or     rax,QWORD PTR [r13-0x18]
  414aab:	lea    rbx,[r13-0x28]
  414aaf:	je     0x4157c0
  414ab5:	sub    DWORD PTR [r15+0x1c],0x1
  414aba:	mov    eax,0x1
  414abf:	mov    QWORD PTR [r13-0x18],rax
  414ac3:	mov    eax,DWORD PTR [r13+0x20]
  414ac7:	mov    QWORD PTR [r13-0x20],0x0
  414acf:	mov    BYTE PTR [r13-0x10],0x0
  414ad4:	mov    BYTE PTR [r13-0xf],0x0
  414ad9:	mov    DWORD PTR [r13-0x8],eax
  414add:	mov    r14d,DWORD PTR [rbx+0x24]
  414ae1:	mov    r13,rbx
  414ae4:	jmp    0x4149ce
  414ae9:	nop    DWORD PTR [rax+0x0]
  414af0:	mov    rax,QWORD PTR [r13-0x20]
  414af4:	or     rax,QWORD PTR [r13-0x18]
  414af8:	lea    rbx,[r13-0x28]
  414afc:	jne    0x4157c0
  414b02:	sub    DWORD PTR [r15+0x1c],0x1
  414b07:	jmp    0x414abf
  414b09:	nop    DWORD PTR [rax+0x0]
  414b10:	mov    rax,QWORD PTR [r13-0x18]
  414b14:	cmp    QWORD PTR [r13+0x10],rax
  414b18:	mov    rax,QWORD PTR [r13-0x20]
  414b1c:	mov    QWORD PTR [r13-0x20],0x0
  414b24:	sete   dl
  414b27:	cmp    QWORD PTR [r13+0x8],rax
  414b2b:	sete   al
  414b2e:	and    eax,edx
  414b30:	mov    edx,eax
  414b32:	xor    edx,0x1
  414b35:	cmp    r14d,0x18
  414b39:	cmove  eax,edx
  414b3c:	movzx  eax,al
  414b3f:	mov    QWORD PTR [r13-0x18],rax
  414b43:	mov    eax,DWORD PTR [r13+0x20]
  414b47:	lea    rbx,[r13-0x28]
  414b4b:	mov    BYTE PTR [r13-0x10],0x0
  414b50:	mov    BYTE PTR [r13-0xf],0x0
  414b55:	mov    DWORD PTR [r13-0x8],eax
  414b59:	cmp    BYTE PTR [r13-0xf],0x0
  414b5e:	je     0x414add
  414b64:	mov    eax,DWORD PTR [r15+0x1c]
  414b68:	test   eax,eax
  414b6a:	jne    0x414add
  414b70:	lea    r8,[rip+0x32549]        # 0x4470c0
  414b77:	mov    edx,0x2
  414b7c:	mov    rcx,r15
  414b7f:	call   0x412660
  414b84:	jmp    0x414add
  414b89:	nop    DWORD PTR [rax+0x0]
  414b90:	cmp    DWORD PTR [rsp+0x54],0x15
  414b95:	mov    rax,r13
  414b98:	jne    0x416238
  414b9e:	mov    rdx,QWORD PTR [r13+0x8]
  414ba2:	mov    QWORD PTR [r13-0x20],rdx
  414ba6:	mov    rdx,QWORD PTR [r13+0x10]
  414baa:	mov    QWORD PTR [r13-0x18],rdx
  414bae:	mov    rdx,QWORD PTR [r13+0x18]
  414bb2:	mov    QWORD PTR [r13-0x10],rdx
  414bb6:	mov    edx,DWORD PTR [r13+0x20]
  414bba:	mov    DWORD PTR [r13-0x8],edx
  414bbe:	sub    r13,0x28
  414bc2:	je     0x4152b4
  414bc8:	mov    eax,DWORD PTR [rsp+0x60]
  414bcc:	sub    eax,0xf
  414bcf:	cmp    eax,0x6
  414bd2:	ja     0x4152f0
  414bd8:	lea    rdx,[rip+0x32735]        # 0x447314
  414bdf:	movsxd rax,DWORD PTR [rdx+rax*4]
  414be3:	add    rdx,rax
  414be6:	jmp    rdx
  414be8:	nop    DWORD PTR [rax+rax*1+0x0]
  414bf0:	mov    rax,QWORD PTR [r13-0x10]
  414bf4:	mov    r12,QWORD PTR [r13+0x8]
  414bf8:	mov    r9,QWORD PTR [r13+0x10]
  414bfc:	mov    rdx,QWORD PTR [r13+0x18]
  414c00:	mov    rsi,QWORD PTR [r13-0x20]
  414c04:	mov    rbx,QWORD PTR [r13-0x18]
  414c08:	mov    QWORD PTR [rsp+0x1b0],rax
  414c10:	movzx  eax,BYTE PTR [r13-0x10]
  414c15:	mov    rbp,r12
  414c18:	mov    QWORD PTR [rsp+0x1d0],rdx
  414c20:	mov    r14,QWORD PTR [r15+0x470]
  414c27:	mov    rdi,r9
  414c2a:	mov    QWORD PTR [rsp+0x1a0],rsi
  414c32:	mov    QWORD PTR [rsp+0x1a8],rbx
  414c3a:	mov    QWORD PTR [rsp+0x1c0],r12
  414c42:	mov    QWORD PTR [rsp+0x1c8],r9
  414c4a:	test   al,al
  414c4c:	movzx  edx,BYTE PTR [r13+0x18]
  414c51:	jne    0x414c5b
  414c53:	test   dl,dl
  414c55:	je     0x415a90
  414c5b:	mov    BYTE PTR [rsp+0x90],0x1
  414c63:	mov    BYTE PTR [rsp+0x98],0x1
  414c6b:	mov    BYTE PTR [rsp+0x48],0x0
  414c70:	mov    rcx,QWORD PTR [rsp+0xd0]
  414c78:	mov    r8,rdi
  414c7b:	mov    rdx,rbx
  414c7e:	call   0x412a10
  414c83:	mov    rax,QWORD PTR [rsp+0x1e8]
  414c8b:	mov    rcx,QWORD PTR [rsp+0x88]
  414c93:	mov    r8,rdi
  414c96:	mov    rdx,rsi
  414c99:	mov    r12,QWORD PTR [rsp+0x1e0]
  414ca1:	mov    edi,0x1
  414ca6:	mov    QWORD PTR [rsp+0xb0],rax
  414cae:	call   0x412a10
  414cb3:	add    r12,QWORD PTR [rsp+0x268]
  414cbb:	cmp    QWORD PTR [rsp+0x260],0x0
  414cc4:	jne    0x414cd5
  414cc6:	test   rbp,rbp
  414cc9:	setne  dil
  414ccd:	test   rsi,rsi
  414cd0:	setne  dl
  414cd3:	and    edi,edx
  414cd5:	mov    rcx,QWORD PTR [rsp+0x88]
  414cdd:	mov    r8,rbp
  414ce0:	mov    rdx,rbx
  414ce3:	mov    rbp,r12
  414ce6:	mov    r12d,0x1
  414cec:	call   0x412a10
  414cf1:	mov    rdx,QWORD PTR [rsp+0x1e8]
  414cf9:	add    rbp,QWORD PTR [rsp+0x268]
  414d01:	mov    r8,r14
  414d04:	cmp    QWORD PTR [rsp+0x260],0x0
  414d0d:	mov    rcx,QWORD PTR [rsp+0x68]
  414d12:	mov    QWORD PTR [rsp+0x118],rdx
  414d1a:	mov    rdx,QWORD PTR [rsp+0x1f0]
  414d22:	mov    QWORD PTR [rsp+0x110],rbp
  414d2a:	cmovne edi,r12d
  414d2e:	mov    QWORD PTR [rsp+0x120],rdx
  414d36:	mov    rdx,QWORD PTR [rsp+0x70]
  414d3b:	call   0x4128f0
  414d40:	mov    rbx,QWORD PTR [rsp+0x138]
  414d48:	cmp    rbx,QWORD PTR [rsp+0xb0]
  414d50:	mov    rsi,QWORD PTR [rsp+0x130]
  414d58:	mov    rdx,QWORD PTR [rsp+0x140]
  414d60:	mov    QWORD PTR [rsp+0x1e8],rbx
  414d68:	mov    QWORD PTR [rsp+0x1e0],rsi
  414d70:	mov    QWORD PTR [rsp+0x1f0],rdx
  414d78:	je     0x415a40
  414d7e:	mov    edi,0x1
  414d83:	cmp    BYTE PTR [rsp+0x48],0x0
  414d88:	jne    0x4159c0
  414d8e:	xor    edx,edx
  414d90:	cmp    BYTE PTR [rsp+0x98],0x0
  414d98:	jne    0x414dd9
  414d9a:	test   dil,dil
  414d9d:	mov    edx,0x1
  414da2:	jne    0x414dd9
  414da4:	cmp    r14,0x40
  414da8:	ja     0x415d64
  414dae:	lea    ecx,[r14-0x1]
  414db2:	mov    rax,rbx
  414db5:	shr    rax,cl
  414db8:	and    eax,0x1
  414dbb:	xor    rax,0x1
  414dbf:	and    eax,0x1
  414dc2:	movzx  ecx,BYTE PTR [rsp+0x48]
  414dc7:	xor    edx,edx
  414dc9:	xor    ecx,0x1
  414dcc:	cmp    cl,al
  414dce:	je     0x414dd9
  414dd0:	mov    rax,rsi
  414dd3:	or     rax,rbx
  414dd6:	setne  dl
  414dd9:	movzx  eax,BYTE PTR [rsp+0x90]
  414de1:	mov    BYTE PTR [rsp+0x1f1],dl
  414de8:	mov    QWORD PTR [rsp+0x1e8],rbx
  414df0:	mov    QWORD PTR [r13-0x18],rbx
  414df4:	lea    rbx,[r13-0x28]
  414df8:	mov    QWORD PTR [rsp+0x1e0],rsi
  414e00:	mov    QWORD PTR [r13-0x20],rsi
  414e04:	mov    BYTE PTR [rsp+0x1f0],al
  414e0b:	mov    rax,QWORD PTR [rsp+0x1f0]
  414e13:	mov    QWORD PTR [r13-0x10],rax
  414e17:	mov    eax,DWORD PTR [r13+0x20]
  414e1b:	mov    DWORD PTR [r13-0x8],eax
  414e1f:	jmp    0x414b59
  414e24:	mov    rax,QWORD PTR [r13-0x20]
  414e28:	mov    r9,QWORD PTR [rsp+0x80]
  414e30:	mov    rdx,r15
  414e33:	mov    r8,QWORD PTR [rsp+0x70]
  414e38:	mov    rcx,QWORD PTR [rsp+0x68]
  414e3d:	lea    rbx,[r13-0x28]
  414e41:	mov    QWORD PTR [rsp+0x110],rax
  414e49:	mov    rax,QWORD PTR [r13-0x18]
  414e4d:	mov    QWORD PTR [rsp+0x118],rax
  414e55:	mov    rax,QWORD PTR [r13-0x10]
  414e59:	mov    QWORD PTR [rsp+0x120],rax
  414e61:	mov    rax,QWORD PTR [r13+0x8]
  414e65:	mov    QWORD PTR [rsp+0xf0],rax
  414e6d:	mov    rax,QWORD PTR [r13+0x10]
  414e71:	mov    QWORD PTR [rsp+0xf8],rax
  414e79:	mov    rax,QWORD PTR [r13+0x18]
  414e7d:	mov    DWORD PTR [rsp+0x20],r14d
  414e82:	mov    QWORD PTR [rsp+0x100],rax
  414e8a:	call   0x413330
  414e8f:	mov    rax,QWORD PTR [rsp+0x130]
  414e97:	mov    QWORD PTR [r13-0x20],rax
  414e9b:	mov    rax,QWORD PTR [rsp+0x138]
  414ea3:	mov    QWORD PTR [r13-0x18],rax
  414ea7:	mov    rax,QWORD PTR [rsp+0x140]
  414eaf:	mov    QWORD PTR [r13-0x10],rax
  414eb3:	mov    eax,DWORD PTR [r13+0x20]
  414eb7:	mov    DWORD PTR [r13-0x8],eax
  414ebb:	jmp    0x414b59
  414ec0:	mov    rax,QWORD PTR [r15+0x470]
  414ec7:	mov    rsi,QWORD PTR [r13+0x8]
  414ecb:	mov    rbx,QWORD PTR [r13-0x20]
  414ecf:	mov    rdi,QWORD PTR [r13-0x18]
  414ed3:	movzx  r8d,BYTE PTR [r13-0x10]
  414ed8:	mov    rbp,QWORD PTR [r13+0x10]
  414edc:	mov    QWORD PTR [rsp+0x30],rax
  414ee1:	movzx  eax,BYTE PTR [r13+0x18]
  414ee6:	mov    r9,rsi
  414ee9:	mov    rdx,rdi
  414eec:	mov    rcx,rbx
  414eef:	mov    QWORD PTR [rsp+0x20],rbp
  414ef4:	mov    BYTE PTR [rsp+0x28],al
  414ef8:	call   0x4137b0
  414efd:	cmp    r14d,0x19
  414f01:	je     0x415883
  414f07:	cmp    r14d,0x3
  414f0b:	je     0x415880
  414f11:	cmp    r14d,0x2
  414f15:	je     0x416061
  414f1b:	test   al,al
  414f1d:	mov    edx,0x1
  414f22:	jne    0x416110
  414f28:	mov    QWORD PTR [r13-0x20],0x0
  414f30:	mov    QWORD PTR [r13-0x18],rdx
  414f34:	jmp    0x414b43
  414f39:	nop    DWORD PTR [rax+0x0]
  414f40:	mov    rax,QWORD PTR [r13+0x18]
  414f44:	mov    rdi,QWORD PTR [r13+0x8]
  414f48:	cmp    r14d,0x1b
  414f4c:	mov    rbx,QWORD PTR [r13+0x10]
  414f50:	movzx  esi,BYTE PTR [r13+0x18]
  414f55:	mov    QWORD PTR [rsp+0x190],rax
  414f5d:	mov    QWORD PTR [rsp+0x180],rdi
  414f65:	mov    QWORD PTR [rsp+0x188],rbx
  414f6d:	movzx  eax,BYTE PTR [r13+0x19]
  414f72:	je     0x415f80
  414f78:	cmp    r14d,0x1c
  414f7c:	je     0x415f00
  414f82:	cmp    r14d,0xe
  414f86:	je     0x415d80
  414f8c:	or     rbx,rdi
  414f8f:	sete   bl
  414f92:	xor    ebp,ebp
  414f94:	xor    esi,esi
  414f96:	movzx  ebx,bl
  414f99:	xor    edi,edi
  414f9b:	mov    eax,DWORD PTR [r13+0x20]
  414f9f:	mov    QWORD PTR [r13-0x18],rbx
  414fa3:	lea    rbx,[r13-0x28]
  414fa7:	mov    QWORD PTR [r13-0x20],rdi
  414fab:	mov    BYTE PTR [r13-0x10],sil
  414faf:	mov    BYTE PTR [r13-0xf],bpl
  414fb3:	mov    DWORD PTR [r13-0x8],eax
  414fb7:	jmp    0x414b59
  414fbc:	nop    DWORD PTR [rax+0x0]
  414fc0:	mov    rax,QWORD PTR [r13-0x48]
  414fc4:	or     rax,QWORD PTR [r13-0x40]
  414fc8:	lea    rbx,[r13-0x50]
  414fcc:	je     0x415825
  414fd2:	mov    rax,QWORD PTR [r13-0x20]
  414fd6:	sub    DWORD PTR [r15+0x1c],0x1
  414fdb:	mov    QWORD PTR [r13-0x48],rax
  414fdf:	mov    rax,QWORD PTR [r13-0x18]
  414fe3:	mov    QWORD PTR [r13-0x40],rax
  414fe7:	mov    rax,QWORD PTR [r13-0x10]
  414feb:	mov    QWORD PTR [r13-0x38],rax
  414fef:	mov    eax,DWORD PTR [r13-0x8]
  414ff3:	mov    DWORD PTR [r13-0x30],eax
  414ff7:	movzx  eax,BYTE PTR [r13-0x10]
  414ffc:	test   al,al
  414ffe:	jne    0x415005
  415000:	movzx  eax,BYTE PTR [r13+0x18]
  415005:	mov    BYTE PTR [r13-0x38],al
  415009:	jmp    0x414add
  41500e:	xchg   ax,ax
  415010:	mov    r11,QWORD PTR [r13-0x18]
  415014:	movzx  eax,BYTE PTR [r13-0x10]
  415019:	or     al,BYTE PTR [r13+0x18]
  41501d:	cmp    r14d,0x9
  415021:	mov    r8,QWORD PTR [r13+0x8]
  415025:	mov    r10,QWORD PTR [r13+0x10]
  415029:	mov    r9,QWORD PTR [r13-0x20]
  41502d:	mov    rdx,r11
  415030:	je     0x415a30
  415036:	mov    rcx,r9
  415039:	xor    rdx,r10
  41503c:	xor    rcx,r8
  41503f:	cmp    r14d,0xa
  415043:	je     0x416050
  415049:	mov    BYTE PTR [r13-0x10],al
  41504d:	mov    eax,DWORD PTR [r13+0x20]
  415051:	lea    rbx,[r13-0x28]
  415055:	mov    QWORD PTR [r13-0x20],rcx
  415059:	mov    QWORD PTR [r13-0x18],rdx
  41505d:	mov    BYTE PTR [r13-0xf],0x0
  415062:	mov    DWORD PTR [r13-0x8],eax
  415066:	jmp    0x414b59
  41506b:	nop    DWORD PTR [rax+rax*1+0x0]
  415070:	mov    eax,DWORD PTR [r13+0x20]
  415074:	movzx  r12d,BYTE PTR [r13-0x10]
  415079:	mov    r11,QWORD PTR [r13-0x20]
  41507d:	mov    r8,QWORD PTR [r13-0x18]
  415081:	mov    r9,QWORD PTR [r13+0x8]
  415085:	mov    r10,QWORD PTR [r13+0x10]
  415089:	mov    DWORD PTR [rsp+0x90],eax
  415090:	mov    rax,QWORD PTR [r13-0x10]
  415094:	test   r12b,r12b
  415097:	mov    QWORD PTR [rsp+0x200],r11
  41509f:	mov    QWORD PTR [rsp+0x208],r8
  4150a7:	mov    rsi,r11
  4150aa:	mov    rdi,r8
  4150ad:	mov    QWORD PTR [rsp+0x220],r9
  4150b5:	mov    QWORD PTR [rsp+0x210],rax
  4150bd:	movzx  eax,BYTE PTR [r13-0xf]
  4150c2:	mov    rbx,r9
  4150c5:	mov    QWORD PTR [rsp+0x228],r10
  4150cd:	mov    rbp,r10
  4150d0:	mov    BYTE PTR [rsp+0xa0],al
  4150d7:	mov    rax,QWORD PTR [r13+0x18]
  4150db:	mov    QWORD PTR [rsp+0x230],rax
  4150e3:	movzx  eax,BYTE PTR [r13+0x18]
  4150e8:	jne    0x4153b0
  4150ee:	test   al,al
  4150f0:	jne    0x4153b0
  4150f6:	mov    rax,QWORD PTR [r15+0x470]
  4150fd:	cmp    rax,0x40
  415101:	mov    QWORD PTR [rsp+0x48],rax
  415106:	jbe    0x415e1e
  41510c:	mov    rdx,QWORD PTR [rsp+0x48]
  415111:	mov    rcx,r11
  415114:	mov    QWORD PTR [rsp+0xc8],r10
  41511c:	mov    QWORD PTR [rsp+0xb8],r9
  415124:	mov    QWORD PTR [rsp+0xb0],r8
  41512c:	mov    QWORD PTR [rsp+0x98],r11
  415134:	call   0x413030
  415139:	test   al,al
  41513b:	mov    r8,QWORD PTR [rsp+0xb0]
  415143:	mov    r11,QWORD PTR [rsp+0x98]
  41514b:	mov    r9,QWORD PTR [rsp+0xb8]
  415153:	mov    r10,QWORD PTR [rsp+0xc8]
  41515b:	mov    BYTE PTR [rsp+0xb0],0x0
  415163:	je     0x415e45
  415169:	cmp    QWORD PTR [rsp+0x48],0x40
  41516f:	jbe    0x415e02
  415175:	mov    rdx,QWORD PTR [rsp+0x48]
  41517a:	mov    rcx,r9
  41517d:	mov    QWORD PTR [rsp+0xb8],r10
  415185:	mov    QWORD PTR [rsp+0x98],r9
  41518d:	call   0x413030
  415192:	mov    r9,QWORD PTR [rsp+0x98]
  41519a:	mov    r10,QWORD PTR [rsp+0xb8]
  4151a2:	movzx  ecx,BYTE PTR [rsp+0xb0]
  4151aa:	test   al,al
  4151ac:	mov    BYTE PTR [rsp+0xb8],0x0
  4151b4:	mov    BYTE PTR [rsp+0xc8],cl
  4151bb:	jne    0x4153d4
  4151c1:	mov    eax,ecx
  4151c3:	mov    BYTE PTR [rsp+0x230],0x0
  4151cb:	mov    r8,QWORD PTR [rsp+0x48]
  4151d0:	xor    eax,0x1
  4151d3:	mov    rdx,QWORD PTR [rsp+0x70]
  4151d8:	mov    rcx,QWORD PTR [rsp+0x68]
  4151dd:	mov    BYTE PTR [rsp+0xc8],al
  4151e4:	mov    rax,QWORD PTR [rsp+0x230]
  4151ec:	mov    QWORD PTR [rsp+0x110],r9
  4151f4:	mov    QWORD PTR [rsp+0x118],r10
  4151fc:	mov    QWORD PTR [rsp+0x120],rax
  415204:	call   0x412950
  415209:	mov    rbx,QWORD PTR [rsp+0x130]
  415211:	mov    rbp,QWORD PTR [rsp+0x138]
  415219:	mov    rax,QWORD PTR [rsp+0x140]
  415221:	test   rbx,rbx
  415224:	mov    QWORD PTR [rsp+0x220],rbx
  41522c:	mov    QWORD PTR [rsp+0x228],rbp
  415234:	mov    QWORD PTR [rsp+0x230],rax
  41523c:	jne    0x4153dd
  415242:	test   rbp,rbp
  415245:	je     0x415a50
  41524b:	cmp    QWORD PTR [rsp+0x48],0x40
  415251:	mov    rax,QWORD PTR [rsp+0x48]
  415256:	jbe    0x416101
  41525c:	lea    rcx,[rax-0x41]
  415260:	lea    r11,[rax-0x1]
  415264:	mov    eax,0x1
  415269:	shl    rax,cl
  41526c:	test   rax,rbp
  41526f:	jne    0x41527d
  415271:	shr    rax,1
  415274:	sub    rcx,0x1
  415278:	test   rbp,rax
  41527b:	je     0x415271
  41527d:	sub    r11,rcx
  415280:	mov    r12,r11
  415283:	jmp    0x415412
  415288:	nop    DWORD PTR [rax+rax*1+0x0]
  415290:	mov    eax,DWORD PTR [rsp+0x54]
  415294:	sub    eax,0x12
  415297:	cmp    eax,0x1
  41529a:	jbe    0x414bc8
  4152a0:	lea    r8,[rip+0x31df9]        # 0x4470a0
  4152a7:	mov    edx,0x3
  4152ac:	mov    rcx,r15
  4152af:	call   0x412660
  4152b4:	xor    eax,eax
  4152b6:	add    rsp,0x288
  4152bd:	pop    rbx
  4152be:	pop    rsi
  4152bf:	pop    rdi
  4152c0:	pop    rbp
  4152c1:	pop    r12
  4152c3:	pop    r13
  4152c5:	pop    r14
  4152c7:	pop    r15
  4152c9:	ret    
  4152ca:	nop    WORD PTR [rax+rax*1+0x0]
  4152d0:	cmp    DWORD PTR [r13+0x24],0x11
  4152d5:	jne    0x416496
  4152db:	mov    rax,QWORD PTR [r13-0x20]
  4152df:	or     rax,QWORD PTR [r13-0x18]
  4152e3:	jne    0x41532d
  4152e5:	sub    DWORD PTR [r15+0x1c],0x1
  4152ea:	nop    WORD PTR [rax+rax*1+0x0]
  4152f0:	add    r13,0x28
  4152f4:	cmp    r13,QWORD PTR [r15+0x408]
  4152fb:	je     0x41533f
  4152fd:	mov    eax,DWORD PTR [rsp+0x54]
  415301:	mov    BYTE PTR [rsp+0xc6],0x1
  415309:	mov    DWORD PTR [r13+0x24],eax
  41530d:	mov    rax,QWORD PTR [rsp+0x58]
  415312:	mov    QWORD PTR [r13+0x0],rax
  415316:	mov    eax,DWORD PTR [rsp+0x64]
  41531a:	mov    DWORD PTR [r13+0x20],eax
  41531e:	jmp    0x4148e0
  415323:	mov    rax,QWORD PTR [r13+0x8]
  415327:	or     rax,QWORD PTR [r13+0x10]
  41532b:	je     0x4152f0
  41532d:	add    DWORD PTR [r15+0x1c],0x1
  415332:	add    r13,0x28
  415336:	cmp    r13,QWORD PTR [r15+0x408]
  41533d:	jne    0x4152fd
  41533f:	mov    rcx,r15
  415342:	call   0x4147c0
  415347:	mov    r13,rax
  41534a:	jmp    0x4152fd
  41534c:	nop    DWORD PTR [rax+0x0]
  415350:	mov    rax,QWORD PTR [r13+0x8]
  415354:	or     rax,QWORD PTR [r13+0x10]
  415358:	je     0x41532d
  41535a:	jmp    0x4152f0
  41535c:	nop    DWORD PTR [rax+0x0]
  415360:	lea    eax,[rdx-0x1]
  415363:	cmp    eax,0x19
  415366:	jbe    0x414a30
  41536c:	mov    rdx,QWORD PTR [rsp+0x58]
  415371:	mov    rcx,r15
  415374:	mov    r13,r15
  415377:	call   0x41cb80
  41537c:	mov    QWORD PTR [rsp+0x28],rax
  415381:	lea    rax,[rip+0x31b68]        # 0x446ef0
  415388:	jmp    0x415798
  41538d:	nop    DWORD PTR [rax]
  415390:	mov    r13,r15
  415393:	lea    r8,[rip+0x31c18]        # 0x446fb2
  41539a:	mov    r9d,r14d
  41539d:	mov    edx,0x4
  4153a2:	mov    rcx,r13
  4153a5:	call   0x412660
  4153aa:	jmp    0x4152b4
  4153af:	nop
  4153b0:	mov    rax,QWORD PTR [r15+0x470]
  4153b7:	mov    BYTE PTR [rsp+0xb8],0x1
  4153bf:	mov    BYTE PTR [rsp+0xb0],0x0
  4153c7:	mov    BYTE PTR [rsp+0xc8],0x0
  4153cf:	mov    QWORD PTR [rsp+0x48],rax
  4153d4:	test   rbx,rbx
  4153d7:	je     0x415242
  4153dd:	mov    rax,QWORD PTR [rsp+0x48]
  4153e2:	lea    r11,[rax-0x1]
  4153e6:	mov    eax,0x1
  4153eb:	lea    ecx,[r11-0x40]
  4153ef:	shl    rax,cl
  4153f2:	test   rax,rbx
  4153f5:	jne    0x4163c0
  4153fb:	mov    rdx,r11
  4153fe:	xchg   ax,ax
  415400:	shr    rax,1
  415403:	sub    rdx,0x1
  415407:	test   rbx,rax
  41540a:	je     0x415400
  41540c:	sub    r11,rdx
  41540f:	mov    r12,r11
  415412:	mov    BYTE PTR [rsp+0x230],0x1
  41541a:	mov    rcx,QWORD PTR [rsp+0x88]
  415422:	mov    r9,r12
  415425:	mov    rax,QWORD PTR [rsp+0x230]
  41542d:	mov    r8,QWORD PTR [rsp+0x48]
  415432:	mov    rdx,QWORD PTR [rsp+0x68]
  415437:	mov    QWORD PTR [rsp+0x220],rbx
  41543f:	mov    QWORD PTR [rsp+0x228],rbp
  415447:	mov    QWORD PTR [rsp+0x130],rbx
  41544f:	mov    QWORD PTR [rsp+0x138],rbp
  415457:	mov    QWORD PTR [rsp+0x140],rax
  41545f:	call   0x4131d0
  415464:	movzx  eax,BYTE PTR [rsp+0x270]
  41546c:	mov    rbp,QWORD PTR [rsp+0x260]
  415474:	mov    ecx,0x1
  415479:	mov    QWORD PTR [rsp+0xd8],r13
  415481:	mov    DWORD PTR [rsp+0xe8],r14d
  415489:	mov    r14d,ecx
  41548c:	mov    QWORD PTR [rsp+0x2d0],r15
  415494:	mov    rbx,QWORD PTR [rsp+0x268]
  41549c:	mov    r15,r12
  41549f:	mov    QWORD PTR [rsp+0x98],0x0
  4154ab:	mov    r12,rbp
  4154ae:	mov    QWORD PTR [rsp+0x90],0x0
  4154ba:	movzx  r13d,BYTE PTR [rsp+0xa0]
  4154c3:	mov    ebp,eax
  4154c5:	jmp    0x4154ed
  4154c7:	nop    WORD PTR [rax+rax*1+0x0]
  4154d0:	test   r15,r15
  4154d3:	je     0x4156f0
  4154d9:	mov    rax,r12
  4154dc:	shr    rbx,1
  4154df:	shr    r12,1
  4154e2:	shl    rax,0x3f
  4154e6:	sub    r15,0x1
  4154ea:	or     rbx,rax
  4154ed:	mov    rax,QWORD PTR [rsp+0x48]
  4154f2:	mov    BYTE PTR [rsp+0x28],bpl
  4154f7:	mov    r9,r12
  4154fa:	mov    QWORD PTR [rsp+0x20],rbx
  4154ff:	mov    r8d,r14d
  415502:	mov    rdx,rdi
  415505:	mov    rcx,rsi
  415508:	mov    QWORD PTR [rsp+0x30],rax
  41550d:	call   0x4137b0
  415512:	test   al,al
  415514:	je     0x4154d0
  415516:	mov    BYTE PTR [rsp+0x210],r14b
  41551e:	mov    BYTE PTR [rsp+0x211],r13b
  415526:	mov    rax,QWORD PTR [rsp+0x210]
  41552e:	mov    r9,QWORD PTR [rsp+0x80]
  415536:	mov    r8,QWORD PTR [rsp+0x70]
  41553b:	mov    rdx,QWORD PTR [rsp+0x2d0]
  415543:	mov    rcx,QWORD PTR [rsp+0x68]
  415548:	mov    DWORD PTR [rsp+0x20],0x5
  415550:	mov    QWORD PTR [rsp+0x120],rax
  415558:	mov    rax,QWORD PTR [rsp+0x270]
  415560:	mov    QWORD PTR [rsp+0x110],rsi
  415568:	mov    QWORD PTR [rsp+0x118],rdi
  415570:	mov    QWORD PTR [rsp+0x260],r12
  415578:	mov    QWORD PTR [rsp+0x268],rbx
  415580:	mov    QWORD PTR [rsp+0xf0],r12
  415588:	mov    QWORD PTR [rsp+0xf8],rbx
  415590:	mov    QWORD PTR [rsp+0x100],rax
  415598:	call   0x413330
  41559d:	mov    r13,QWORD PTR [rsp+0x140]
  4155a5:	mov    rsi,QWORD PTR [rsp+0x130]
  4155ad:	mov    rdi,QWORD PTR [rsp+0x138]
  4155b5:	mov    QWORD PTR [rsp+0x210],r13
  4155bd:	mov    r14d,r13d
  4155c0:	shr    r13w,0x8
  4155c5:	cmp    r15,0x3f
  4155c9:	mov    QWORD PTR [rsp+0x200],rsi
  4155d1:	mov    QWORD PTR [rsp+0x208],rdi
  4155d9:	jbe    0x4156d0
  4155df:	lea    ecx,[r15-0x40]
  4155e3:	mov    eax,0x1
  4155e8:	shl    rax,cl
  4155eb:	or     QWORD PTR [rsp+0x90],rax
  4155f3:	jmp    0x4154d9
  4155f8:	nop    DWORD PTR [rax+rax*1+0x0]
  415600:	cmp    BYTE PTR [rsp+0xc6],0x0
  415608:	je     0x414a5a
  41560e:	cmp    edx,0x15
  415611:	je     0x4158a0
  415617:	cmp    edx,0x16
  41561a:	mov    DWORD PTR [rsp+0x54],edx
  41561e:	je     0x4158e1
  415624:	mov    r14d,DWORD PTR [r13+0x24]
  415628:	mov    edx,r14d
  41562b:	and    edx,0xfffffffd
  41562e:	cmp    edx,0x14
  415631:	jne    0x4158bf
  415637:	mov    esi,DWORD PTR [rsp+0x54]
  41563b:	lea    edx,[rsi-0x15]
  41563e:	cmp    edx,0x1
  415641:	jbe    0x4149ac
  415647:	mov    rdx,QWORD PTR [rsp+0x58]
  41564c:	mov    rcx,r15
  41564f:	mov    r13,r15
  415652:	call   0x41cb80
  415657:	mov    QWORD PTR [rsp+0x28],rax
  41565c:	lea    rax,[rip+0x3192d]        # 0x446f90
  415663:	jmp    0x415798
  415668:	nop    DWORD PTR [rax+rax*1+0x0]
  415670:	movzx  eax,BYTE PTR [r13+0x18]
  415675:	cmp    al,BYTE PTR [r13-0x10]
  415679:	je     0x414a00
  41567f:	test   al,al
  415681:	mov    rdx,QWORD PTR [r15+0x470]
  415688:	je     0x4157d3
  41568e:	cmp    rdx,0x40
  415692:	mov    rcx,QWORD PTR [r13-0x20]
  415696:	mov    rax,QWORD PTR [r13-0x18]
  41569a:	jbe    0x415862
  4156a0:	call   0x413030
  4156a5:	test   al,al
  4156a7:	jne    0x414a00
  4156ad:	mov    rdx,QWORD PTR [r13+0x0]
  4156b1:	mov    rcx,r15
  4156b4:	call   0x41cb80
  4156b9:	mov    r8d,DWORD PTR [r13-0x8]
  4156bd:	mov    QWORD PTR [rsp+0x28],rax
  4156c2:	lea    rax,[rip+0x31907]        # 0x446fd0
  4156c9:	jmp    0x41580a
  4156ce:	xchg   ax,ax
  4156d0:	mov    eax,0x1
  4156d5:	mov    ecx,r15d
  4156d8:	shl    rax,cl
  4156db:	or     QWORD PTR [rsp+0x98],rax
  4156e3:	test   r15,r15
  4156e6:	jne    0x4154d9
  4156ec:	nop    DWORD PTR [rax+0x0]
  4156f0:	mov    r14d,DWORD PTR [rsp+0xe8]
  4156f8:	mov    r13,QWORD PTR [rsp+0xd8]
  415700:	mov    r15,QWORD PTR [rsp+0x2d0]
  415708:	mov    rbx,QWORD PTR [rsp+0x98]
  415710:	cmp    r14d,0x7
  415714:	mov    rbp,QWORD PTR [rsp+0x90]
  41571c:	je     0x415fe2
  415722:	xor    eax,eax
  415724:	cmp    BYTE PTR [rsp+0xb0],0x0
  41572c:	movzx  r11d,BYTE PTR [rsp+0xb8]
  415735:	jne    0x416081
  41573b:	mov    BYTE PTR [r13-0xf],al
  41573f:	mov    eax,DWORD PTR [r13+0x20]
  415743:	lea    rbx,[r13-0x28]
  415747:	mov    QWORD PTR [r13-0x20],rsi
  41574b:	mov    QWORD PTR [r13-0x18],rdi
  41574f:	mov    BYTE PTR [r13-0x10],r11b
  415753:	mov    DWORD PTR [r13-0x8],eax
  415757:	jmp    0x414b59
  41575c:	nop    DWORD PTR [rax+0x0]
  415760:	lea    r12,[rip+0x31bd9]        # 0x447340
  415767:	movsxd rcx,edx
  41576a:	mov    DWORD PTR [rsp+0x60],edx
  41576e:	movzx  eax,BYTE PTR [r12+rcx*2+0x1]
  415774:	test   al,0x1
  415776:	je     0x414a5a
  41577c:	mov    rdx,QWORD PTR [rsp+0x58]
  415781:	mov    rcx,r15
  415784:	mov    r13,r15
  415787:	call   0x41cb80
  41578c:	mov    QWORD PTR [rsp+0x28],rax
  415791:	lea    rax,[rip+0x315b0]        # 0x446d48
  415798:	mov    r8d,DWORD PTR [rsp+0x64]
  41579d:	mov    QWORD PTR [rsp+0x20],rax
  4157a2:	xor    r9d,r9d
  4157a5:	mov    edx,0x3
  4157aa:	mov    rcx,r13
  4157ad:	call   0x412740
  4157b2:	jmp    0x4152b4
  4157b7:	nop    WORD PTR [rax+rax*1+0x0]
  4157c0:	mov    rax,QWORD PTR [r13+0x8]
  4157c4:	or     rax,QWORD PTR [r13+0x10]
  4157c8:	setne  al
  4157cb:	movzx  eax,al
  4157ce:	jmp    0x414abf
  4157d3:	cmp    rdx,0x40
  4157d7:	mov    rcx,QWORD PTR [r13+0x8]
  4157db:	mov    rax,QWORD PTR [r13+0x10]
  4157df:	jbe    0x415850
  4157e1:	call   0x413030
  4157e6:	test   al,al
  4157e8:	jne    0x414a00
  4157ee:	mov    rdx,QWORD PTR [r13+0x0]
  4157f2:	mov    rcx,r15
  4157f5:	call   0x41cb80
  4157fa:	mov    r8d,DWORD PTR [r13+0x20]
  4157fe:	mov    QWORD PTR [rsp+0x28],rax
  415803:	lea    rax,[rip+0x317fe]        # 0x447008
  41580a:	mov    QWORD PTR [rsp+0x20],rax
  41580f:	xor    r9d,r9d
  415812:	xor    edx,edx
  415814:	mov    rcx,r15
  415817:	call   0x412740
  41581c:	mov    r14d,DWORD PTR [r13+0x24]
  415820:	jmp    0x414a00
  415825:	mov    rax,QWORD PTR [r13+0x8]
  415829:	mov    QWORD PTR [r13-0x48],rax
  41582d:	mov    rax,QWORD PTR [r13+0x10]
  415831:	mov    QWORD PTR [r13-0x40],rax
  415835:	mov    rax,QWORD PTR [r13+0x18]
  415839:	mov    QWORD PTR [r13-0x38],rax
  41583d:	mov    eax,DWORD PTR [r13+0x20]
  415841:	mov    DWORD PTR [r13-0x30],eax
  415845:	jmp    0x414ff7
  41584a:	nop    WORD PTR [rax+rax*1+0x0]
  415850:	lea    ecx,[rdx-0x1]
  415853:	shr    rax,cl
  415856:	and    eax,0x1
  415859:	xor    rax,0x1
  41585d:	and    eax,0x1
  415860:	jmp    0x4157e6
  415862:	lea    ecx,[rdx-0x1]
  415865:	shr    rax,cl
  415868:	and    eax,0x1
  41586b:	xor    rax,0x1
  41586f:	and    eax,0x1
  415872:	jmp    0x4156a5
  415877:	nop    WORD PTR [rax+rax*1+0x0]
  415880:	xor    eax,0x1
  415883:	movzx  edx,al
  415886:	mov    QWORD PTR [r13-0x20],0x0
  41588e:	mov    QWORD PTR [r13-0x18],rdx
  415892:	jmp    0x414b43
  415897:	nop    WORD PTR [rax+rax*1+0x0]
  4158a0:	mov    r14d,DWORD PTR [r13+0x24]
  4158a4:	cmp    r14d,0x14
  4158a8:	je     0x416653
  4158ae:	mov    r8d,r14d
  4158b1:	and    r8d,0xfffffffd
  4158b5:	cmp    r8d,0x14
  4158b9:	je     0x414a5e
  4158bf:	mov    r14,r13
  4158c2:	mov    rcx,r15
  4158c5:	mov    r13,r15
  4158c8:	mov    rdx,QWORD PTR [r14]
  4158cb:	call   0x41cb80
  4158d0:	mov    QWORD PTR [rsp+0x28],rax
  4158d5:	lea    rax,[rip+0x3168c]        # 0x446f68
  4158dc:	jmp    0x415798
  4158e1:	mov    r14d,DWORD PTR [r13+0x24]
  4158e5:	cmp    r14d,0x16
  4158e9:	jne    0x4158ae
  4158eb:	cmp    BYTE PTR [rsp+0xec],0x0
  4158f3:	lea    rdx,[rip+0x31443]        # 0x446d3d
  4158fa:	lea    rax,[rip+0x31438]        # 0x446d39
  415901:	mov    r13,r15
  415904:	cmove  rax,rdx
  415908:	mov    QWORD PTR [rsp+0x28],rax
  41590d:	lea    rax,[rip+0x3163b]        # 0x446f4f
  415914:	jmp    0x415798
  415919:	nop    DWORD PTR [rax+0x0]
  415920:	cmp    DWORD PTR [rsp+0x54],0x15
  415925:	je     0x416678
  41592b:	cmp    DWORD PTR [rsp+0x54],0x16
  415930:	jne    0x414bc8
  415936:	cmp    QWORD PTR [r15+0x198],0x0
  41593e:	mov    r14,r13
  415941:	mov    r13,r15
  415944:	je     0x415965
  415946:	cmp    DWORD PTR [rsp+0xc0],0x3
  41594e:	setne  al
  415951:	cmp    al,BYTE PTR [rsp+0xc7]
  415958:	jb     0x415965
  41595a:	mov    QWORD PTR [r15+0x198],0x0
  415965:	cmp    QWORD PTR [r13+0x400],r14
  41596c:	je     0x41655f
  415972:	cmp    BYTE PTR [rsp+0xec],0x0
  41597a:	lea    rdx,[rip+0x313bc]        # 0x446d3d
  415981:	lea    rax,[rip+0x313b1]        # 0x446d39
  415988:	mov    r8d,DWORD PTR [r14+0x20]
  41598c:	mov    rcx,r13
  41598f:	cmove  rax,rdx
  415993:	xor    r9d,r9d
  415996:	mov    edx,0x4
  41599b:	mov    QWORD PTR [rsp+0x28],rax
  4159a0:	lea    rax,[rip+0x3177a]        # 0x447121
  4159a7:	mov    QWORD PTR [rsp+0x20],rax
  4159ac:	call   0x412740
  4159b1:	xor    eax,eax
  4159b3:	jmp    0x4152b6
  4159b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4159c0:	mov    rax,QWORD PTR [rsp+0x1e0]
  4159c8:	mov    rdx,QWORD PTR [rsp+0x70]
  4159cd:	mov    r8,r14
  4159d0:	mov    rcx,QWORD PTR [rsp+0x68]
  4159d5:	mov    QWORD PTR [rsp+0x110],rax
  4159dd:	mov    rax,QWORD PTR [rsp+0x1e8]
  4159e5:	mov    QWORD PTR [rsp+0x118],rax
  4159ed:	mov    rax,QWORD PTR [rsp+0x1f0]
  4159f5:	mov    QWORD PTR [rsp+0x120],rax
  4159fd:	call   0x412950
  415a02:	mov    rax,QWORD PTR [rsp+0x140]
  415a0a:	mov    rsi,QWORD PTR [rsp+0x130]
  415a12:	mov    rbx,QWORD PTR [rsp+0x138]
  415a1a:	mov    QWORD PTR [rsp+0x1f0],rax
  415a22:	jmp    0x414d8e
  415a27:	nop    WORD PTR [rax+rax*1+0x0]
  415a30:	mov    rcx,r9
  415a33:	and    rdx,r10
  415a36:	and    rcx,r8
  415a39:	jmp    0x415049
  415a3e:	xchg   ax,ax
  415a40:	cmp    rbp,rsi
  415a43:	cmovne edi,r12d
  415a47:	jmp    0x414d83
  415a4c:	nop    DWORD PTR [rax+0x0]
  415a50:	mov    edx,DWORD PTR [r15+0x1c]
  415a54:	test   edx,edx
  415a56:	jne    0x415a7c
  415a58:	lea    rax,[rip+0x3160f]        # 0x44706e
  415a5f:	mov    r8d,DWORD PTR [rsp+0x90]
  415a67:	xor    r9d,r9d
  415a6a:	mov    edx,0x3
  415a6f:	mov    rcx,r15
  415a72:	mov    QWORD PTR [rsp+0x20],rax
  415a77:	call   0x412740
  415a7c:	movzx  eax,BYTE PTR [rsp+0xa0]
  415a84:	mov    r11d,r12d
  415a87:	jmp    0x41573b
  415a8c:	nop    DWORD PTR [rax+0x0]
  415a90:	cmp    r14,0x40
  415a94:	jbe    0x415fb5
  415a9a:	mov    rdx,r14
  415a9d:	mov    rcx,rsi
  415aa0:	mov    QWORD PTR [rsp+0x90],r9
  415aa8:	call   0x413030
  415aad:	test   al,al
  415aaf:	mov    BYTE PTR [rsp+0x48],0x0
  415ab4:	mov    r9,QWORD PTR [rsp+0x90]
  415abc:	je     0x4162f1
  415ac2:	mov    rdx,r14
  415ac5:	mov    rcx,r12
  415ac8:	mov    QWORD PTR [rsp+0x90],r9
  415ad0:	call   0x413030
  415ad5:	mov    r9,QWORD PTR [rsp+0x90]
  415add:	test   al,al
  415adf:	mov    BYTE PTR [rsp+0x90],0x0
  415ae7:	mov    BYTE PTR [rsp+0x98],0x0
  415aef:	jne    0x414c70
  415af5:	mov    BYTE PTR [rsp+0x1d0],0x0
  415afd:	mov    rdx,QWORD PTR [rsp+0x70]
  415b02:	mov    r8,r14
  415b05:	mov    rax,QWORD PTR [rsp+0x1d0]
  415b0d:	mov    rcx,QWORD PTR [rsp+0x68]
  415b12:	xor    BYTE PTR [rsp+0x48],0x1
  415b17:	mov    QWORD PTR [rsp+0x110],r12
  415b1f:	mov    QWORD PTR [rsp+0x118],r9
  415b27:	mov    QWORD PTR [rsp+0x120],rax
  415b2f:	call   0x412950
  415b34:	mov    rax,QWORD PTR [rsp+0x140]
  415b3c:	mov    rbp,QWORD PTR [rsp+0x130]
  415b44:	mov    rdi,QWORD PTR [rsp+0x138]
  415b4c:	mov    QWORD PTR [rsp+0x1d0],rax
  415b54:	movzx  eax,BYTE PTR [rsp+0x98]
  415b5c:	mov    QWORD PTR [rsp+0x1c0],rbp
  415b64:	mov    QWORD PTR [rsp+0x1c8],rdi
  415b6c:	mov    BYTE PTR [rsp+0x90],al
  415b73:	jmp    0x414c70
  415b78:	nop    DWORD PTR [rax+rax*1+0x0]
  415b80:	mov    r8,QWORD PTR [rsp+0xe0]
  415b88:	mov    rdx,QWORD PTR [rsp+0x58]
  415b8d:	lea    r9,[rsp+0x240]
  415b95:	mov    rcx,r15
  415b98:	call   0x4236c0
  415b9d:	mov    esi,DWORD PTR [rsp+0x240]
  415ba4:	mov    eax,eax
  415ba6:	test   esi,esi
  415ba8:	jne    0x416174
  415bae:	test   eax,eax
  415bb0:	js     0x4164be
  415bb6:	xor    r8d,r8d
  415bb9:	xor    ecx,ecx
  415bbb:	xor    edx,edx
  415bbd:	jmp    0x415cf5
  415bc2:	mov    r9d,DWORD PTR [rsp+0x64]
  415bc7:	mov    rdx,QWORD PTR [rsp+0x58]
  415bcc:	xor    r8d,r8d
  415bcf:	mov    rcx,r15
  415bd2:	call   0x413a10
  415bd7:	test   eax,0x1000000
  415bdc:	mov    DWORD PTR [rsp+0x15c],eax
  415be3:	jne    0x4163a0
  415be9:	mov    edx,eax
  415beb:	and    edx,0xf
  415bee:	cmp    edx,0x1
  415bf1:	je     0x416375
  415bf7:	cmp    edx,0x2
  415bfa:	jne    0x415c1a
  415bfc:	lea    rax,[rip+0x311a5]        # 0x446da8
  415c03:	mov    r8d,DWORD PTR [rsp+0x64]
  415c08:	xor    r9d,r9d
  415c0b:	mov    dl,0x3
  415c0d:	mov    rcx,r15
  415c10:	mov    QWORD PTR [rsp+0x20],rax
  415c15:	call   0x412740
  415c1a:	mov    r8d,DWORD PTR [rsp+0x240]
  415c22:	test   r8d,r8d
  415c25:	setne  r8b
  415c29:	xor    ecx,ecx
  415c2b:	xor    eax,eax
  415c2d:	xor    edx,edx
  415c2f:	jmp    0x415cf5
  415c34:	mov    rax,QWORD PTR [rsp+0x58]
  415c39:	mov    rax,QWORD PTR [rax+0x8]
  415c3d:	cmp    rax,QWORD PTR [r15+0x498]
  415c44:	je     0x41656f
  415c4a:	xor    r8d,r8d
  415c4d:	cmp    rax,QWORD PTR [r15+0x4b8]
  415c54:	lea    rcx,[rsp+0x160]
  415c5c:	je     0x416468
  415c62:	cmp    rax,QWORD PTR [r15+0x4c0]
  415c69:	je     0x41645a
  415c6f:	cmp    BYTE PTR [r15+0x418],0x0
  415c77:	je     0x415c96
  415c79:	mov    rdx,QWORD PTR [r15+0x4a0]
  415c80:	cmp    rax,rdx
  415c83:	je     0x416223
  415c89:	cmp    rax,QWORD PTR [r15+0x4a8]
  415c90:	je     0x416223
  415c96:	cmp    BYTE PTR [r15+0x433],0x0
  415c9e:	je     0x415cad
  415ca0:	mov    r10d,DWORD PTR [r15+0x1c]
  415ca4:	test   r10d,r10d
  415ca7:	je     0x41642c
  415cad:	xor    r8d,r8d
  415cb0:	xor    ecx,ecx
  415cb2:	xor    eax,eax
  415cb4:	xor    edx,edx
  415cb6:	jmp    0x415cf5
  415cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  415cc0:	cmp    BYTE PTR [r15+0x12],0x0
  415cc5:	je     0x416132
  415ccb:	mov    rdx,QWORD PTR [rsp+0xe0]
  415cd3:	mov    rcx,r15
  415cd6:	call   0x4118a0
  415cdb:	mov    r9d,DWORD PTR [rsp+0x240]
  415ce3:	mov    eax,DWORD PTR [rsp+0x15c]
  415cea:	test   r9d,r9d
  415ced:	setne  r8b
  415cf1:	xor    ecx,ecx
  415cf3:	xor    edx,edx
  415cf5:	mov    BYTE PTR [rsp+0x270],r8b
  415cfd:	mov    BYTE PTR [rsp+0x271],cl
  415d04:	mov    r9,QWORD PTR [rsp+0x270]
  415d0c:	mov    QWORD PTR [rsp+0x260],rdx
  415d14:	mov    QWORD PTR [rsp+0x268],rax
  415d1c:	mov    QWORD PTR [rsp+0x170],r9
  415d24:	mov    QWORD PTR [rsp+0x168],rax
  415d2c:	mov    BYTE PTR [rsp+0x170],r8b
  415d34:	mov    BYTE PTR [rsp+0x171],cl
  415d3b:	mov    QWORD PTR [r13+0x10],rax
  415d3f:	mov    rax,QWORD PTR [rsp+0x170]
  415d47:	mov    QWORD PTR [rsp+0x160],rdx
  415d4f:	mov    QWORD PTR [r13+0x8],rdx
  415d53:	mov    BYTE PTR [rsp+0xc6],0x0
  415d5b:	mov    QWORD PTR [r13+0x18],rax
  415d5f:	jmp    0x4148e0
  415d64:	mov    rdx,r14
  415d67:	mov    rcx,rsi
  415d6a:	call   0x413030
  415d6f:	jmp    0x414dc2
  415d74:	call   0x43f180
  415d79:	nop    DWORD PTR [rax+0x0]
  415d80:	mov    BYTE PTR [rsp+0x190],sil
  415d88:	mov    BYTE PTR [rsp+0x191],al
  415d8f:	not    rdi
  415d92:	mov    rax,QWORD PTR [rsp+0x190]
  415d9a:	not    rbx
  415d9d:	mov    QWORD PTR [rsp+0x110],rdi
  415da5:	mov    QWORD PTR [rsp+0x118],rbx
  415dad:	mov    rdx,QWORD PTR [rsp+0x70]
  415db2:	xor    ebp,ebp
  415db4:	mov    rcx,QWORD PTR [rsp+0x68]
  415db9:	mov    QWORD PTR [rsp+0x120],rax
  415dc1:	mov    r8,QWORD PTR [r15+0x470]
  415dc8:	call   0x4128f0
  415dcd:	mov    rdi,QWORD PTR [rsp+0x130]
  415dd5:	mov    rbx,QWORD PTR [rsp+0x138]
  415ddd:	mov    rsi,QWORD PTR [rsp+0x140]
  415de5:	mov    QWORD PTR [rsp+0x180],rdi
  415ded:	mov    QWORD PTR [rsp+0x188],rbx
  415df5:	mov    QWORD PTR [rsp+0x190],rsi
  415dfd:	jmp    0x414f9b
  415e02:	mov    eax,DWORD PTR [rsp+0x48]
  415e06:	lea    ecx,[rax-0x1]
  415e09:	mov    rax,r10
  415e0c:	shr    rax,cl
  415e0f:	and    eax,0x1
  415e12:	xor    rax,0x1
  415e16:	and    eax,0x1
  415e19:	jmp    0x4151a2
  415e1e:	mov    eax,DWORD PTR [rsp+0x48]
  415e22:	mov    BYTE PTR [rsp+0xb0],0x0
  415e2a:	lea    ecx,[rax-0x1]
  415e2d:	mov    rax,r8
  415e30:	shr    rax,cl
  415e33:	and    eax,0x1
  415e36:	xor    rax,0x1
  415e3a:	and    eax,0x1
  415e3d:	test   al,al
  415e3f:	jne    0x415169
  415e45:	movzx  eax,BYTE PTR [rsp+0xa0]
  415e4d:	mov    BYTE PTR [rsp+0x210],0x0
  415e55:	mov    QWORD PTR [rsp+0x118],r8
  415e5d:	mov    rdx,QWORD PTR [rsp+0x70]
  415e62:	mov    r8,QWORD PTR [rsp+0x48]
  415e67:	mov    rcx,QWORD PTR [rsp+0x68]
  415e6c:	mov    QWORD PTR [rsp+0xb8],r10
  415e74:	mov    QWORD PTR [rsp+0x98],r9
  415e7c:	mov    BYTE PTR [rsp+0x211],al
  415e83:	mov    rax,QWORD PTR [rsp+0x210]
  415e8b:	mov    QWORD PTR [rsp+0x110],r11
  415e93:	mov    QWORD PTR [rsp+0x120],rax
  415e9b:	call   0x412950
  415ea0:	mov    rax,QWORD PTR [rsp+0x140]
  415ea8:	mov    rsi,QWORD PTR [rsp+0x130]
  415eb0:	mov    rdi,QWORD PTR [rsp+0x138]
  415eb8:	mov    BYTE PTR [rsp+0xb0],0x1
  415ec0:	mov    r10,QWORD PTR [rsp+0xb8]
  415ec8:	mov    r9,QWORD PTR [rsp+0x98]
  415ed0:	mov    QWORD PTR [rsp+0x210],rax
  415ed8:	mov    r12d,eax
  415edb:	shr    ax,0x8
  415edf:	mov    QWORD PTR [rsp+0x200],rsi
  415ee7:	mov    QWORD PTR [rsp+0x208],rdi
  415eef:	mov    WORD PTR [rsp+0xa0],ax
  415ef7:	jmp    0x415169
  415efc:	nop    DWORD PTR [rax+0x0]
  415f00:	mov    BYTE PTR [rsp+0x190],sil
  415f08:	mov    BYTE PTR [rsp+0x191],al
  415f0f:	mov    rax,QWORD PTR [rsp+0x190]
  415f17:	mov    QWORD PTR [rsp+0x110],rdi
  415f1f:	mov    QWORD PTR [rsp+0x118],rbx
  415f27:	mov    rdx,QWORD PTR [rsp+0x70]
  415f2c:	mov    rcx,QWORD PTR [rsp+0x68]
  415f31:	mov    QWORD PTR [rsp+0x120],rax
  415f39:	mov    r8,QWORD PTR [r15+0x470]
  415f40:	call   0x412950
  415f45:	mov    rbp,QWORD PTR [rsp+0x140]
  415f4d:	mov    rdi,QWORD PTR [rsp+0x130]
  415f55:	mov    rbx,QWORD PTR [rsp+0x138]
  415f5d:	mov    QWORD PTR [rsp+0x190],rbp
  415f65:	mov    esi,ebp
  415f67:	mov    QWORD PTR [rsp+0x180],rdi
  415f6f:	mov    QWORD PTR [rsp+0x188],rbx
  415f77:	shr    bp,0x8
  415f7b:	jmp    0x414f9b
  415f80:	xor    ebp,ebp
  415f82:	cmp    BYTE PTR [r15+0x429],0x0
  415f8a:	je     0x414f9b
  415f90:	mov    ecx,DWORD PTR [r15+0x1c]
  415f94:	test   ecx,ecx
  415f96:	jne    0x414f9b
  415f9c:	lea    r8,[rip+0x3109d]        # 0x447040
  415fa3:	mov    edx,0x6
  415fa8:	mov    rcx,r15
  415fab:	call   0x412690
  415fb0:	jmp    0x414f9b
  415fb5:	lea    eax,[r14-0x1]
  415fb9:	mov    BYTE PTR [rsp+0x48],0x0
  415fbe:	bt     rbx,rax
  415fc2:	jb     0x41625f
  415fc8:	mov    ecx,eax
  415fca:	mov    rdx,r9
  415fcd:	shr    rdx,cl
  415fd0:	mov    rax,rdx
  415fd3:	and    eax,0x1
  415fd6:	xor    rax,0x1
  415fda:	and    eax,0x1
  415fdd:	jmp    0x415add
  415fe2:	movzx  esi,BYTE PTR [rsp+0xb8]
  415fea:	xor    eax,eax
  415fec:	test   sil,sil
  415fef:	jne    0x41603c
  415ff1:	cmp    BYTE PTR [rsp+0xc8],0x0
  415ff9:	jne    0x416197
  415fff:	cmp    QWORD PTR [rsp+0x48],0x40
  416005:	ja     0x416183
  41600b:	mov    ecx,DWORD PTR [rsp+0x48]
  41600f:	mov    rdx,rbx
  416012:	sub    ecx,0x1
  416015:	shr    rdx,cl
  416018:	and    edx,0x1
  41601b:	xor    rdx,0x1
  41601f:	and    edx,0x1
  416022:	movzx  ecx,BYTE PTR [rsp+0xc8]
  41602a:	xor    eax,eax
  41602c:	xor    ecx,0x1
  41602f:	cmp    cl,dl
  416031:	je     0x41603c
  416033:	mov    rax,rbx
  416036:	or     rax,rbp
  416039:	setne  al
  41603c:	mov    r11d,esi
  41603f:	mov    rdi,rbx
  416042:	mov    rsi,rbp
  416045:	jmp    0x41573b
  41604a:	nop    WORD PTR [rax+rax*1+0x0]
  416050:	mov    rdx,r11
  416053:	mov    rcx,r9
  416056:	or     rdx,r10
  416059:	or     rcx,r8
  41605c:	jmp    0x415049
  416061:	xor    edx,edx
  416063:	test   al,al
  416065:	je     0x414f28
  41606b:	cmp    rbp,rdi
  41606e:	setne  dl
  416071:	cmp    rsi,rbx
  416074:	setne  al
  416077:	or     eax,edx
  416079:	movzx  edx,al
  41607c:	jmp    0x414f28
  416081:	mov    BYTE PTR [rsp+0x210],r11b
  416089:	mov    BYTE PTR [rsp+0x211],0x0
  416091:	mov    r8,QWORD PTR [rsp+0x48]
  416096:	mov    rax,QWORD PTR [rsp+0x210]
  41609e:	mov    rdx,QWORD PTR [rsp+0x70]
  4160a3:	mov    rcx,QWORD PTR [rsp+0x68]
  4160a8:	mov    QWORD PTR [rsp+0x110],rsi
  4160b0:	mov    QWORD PTR [rsp+0x118],rdi
  4160b8:	mov    QWORD PTR [rsp+0x120],rax
  4160c0:	call   0x412950
  4160c5:	mov    rax,QWORD PTR [rsp+0x140]
  4160cd:	mov    rsi,QWORD PTR [rsp+0x130]
  4160d5:	mov    rdi,QWORD PTR [rsp+0x138]
  4160dd:	mov    QWORD PTR [rsp+0x210],rax
  4160e5:	mov    r11d,eax
  4160e8:	mov    QWORD PTR [rsp+0x200],rsi
  4160f0:	mov    QWORD PTR [rsp+0x208],rdi
  4160f8:	shr    ax,0x8
  4160fc:	jmp    0x41573b
  416101:	lea    rcx,[rax-0x1]
  416105:	mov    r11,rcx
  416108:	jmp    0x415264
  41610d:	nop    DWORD PTR [rax]
  416110:	cmp    rbp,rdi
  416113:	mov    QWORD PTR [r13-0x20],0x0
  41611b:	sete   al
  41611e:	xor    edx,edx
  416120:	cmp    rsi,rbx
  416123:	sete   dl
  416126:	and    rdx,rax
  416129:	mov    QWORD PTR [r13-0x18],rdx
  41612d:	jmp    0x414b43
  416132:	cmp    BYTE PTR [r15+0x437],0x0
  41613a:	jne    0x4163c8
  416140:	cmp    BYTE PTR [r15+0x423],0x0
  416148:	je     0x415ccb
  41614e:	lea    rax,[rip+0x30d73]        # 0x446ec8
  416155:	mov    r8d,DWORD PTR [rsp+0x64]
  41615a:	xor    r9d,r9d
  41615d:	mov    edx,0x1
  416162:	mov    rcx,r15
  416165:	mov    QWORD PTR [rsp+0x20],rax
  41616a:	call   0x412780
  41616f:	jmp    0x415ccb
  416174:	mov    r8d,0x1
  41617a:	xor    ecx,ecx
  41617c:	xor    edx,edx
  41617e:	jmp    0x415cf5
  416183:	mov    rdx,QWORD PTR [rsp+0x48]
  416188:	mov    rcx,rbp
  41618b:	call   0x413030
  416190:	mov    edx,eax
  416192:	jmp    0x416022
  416197:	mov    BYTE PTR [rsp+0x250],0x0
  41619f:	mov    BYTE PTR [rsp+0x251],0x0
  4161a7:	mov    r8,QWORD PTR [rsp+0x48]
  4161ac:	mov    rax,QWORD PTR [rsp+0x250]
  4161b4:	mov    rdx,QWORD PTR [rsp+0x70]
  4161b9:	mov    rcx,QWORD PTR [rsp+0x68]
  4161be:	mov    QWORD PTR [rsp+0x240],rbp
  4161c6:	mov    QWORD PTR [rsp+0x248],rbx
  4161ce:	mov    QWORD PTR [rsp+0x110],rbp
  4161d6:	mov    QWORD PTR [rsp+0x118],rbx
  4161de:	mov    QWORD PTR [rsp+0x120],rax
  4161e6:	call   0x412950
  4161eb:	mov    r11,QWORD PTR [rsp+0x140]
  4161f3:	mov    rbp,QWORD PTR [rsp+0x130]
  4161fb:	mov    rbx,QWORD PTR [rsp+0x138]
  416203:	mov    QWORD PTR [rsp+0x240],rbp
  41620b:	mov    QWORD PTR [rsp+0x250],r11
  416213:	mov    esi,r11d
  416216:	mov    QWORD PTR [rsp+0x248],rbx
  41621e:	jmp    0x415fff
  416223:	cmp    rax,rdx
  416226:	sete   al
  416229:	xor    r8d,r8d
  41622c:	xor    ecx,ecx
  41622e:	movzx  eax,al
  416231:	xor    edx,edx
  416233:	jmp    0x415cf5
  416238:	mov    rax,QWORD PTR [rax]
  41623b:	lea    rsi,[rip+0x30e44]        # 0x447086
  416242:	xor    r9d,r9d
  416245:	mov    edx,0x3
  41624a:	mov    rcx,r15
  41624d:	mov    QWORD PTR [rsp+0x20],rsi
  416252:	mov    r8d,DWORD PTR [rax]
  416255:	call   0x412740
  41625a:	jmp    0x4152b4
  41625f:	mov    BYTE PTR [rsp+0x1b0],0x0
  416267:	mov    rdx,QWORD PTR [rsp+0x1b0]
  41626f:	mov    r8,r14
  416272:	mov    rcx,QWORD PTR [rsp+0x68]
  416277:	mov    QWORD PTR [rsp+0x98],r9
  41627f:	mov    DWORD PTR [rsp+0x90],eax
  416286:	mov    QWORD PTR [rsp+0x110],rsi
  41628e:	mov    QWORD PTR [rsp+0x120],rdx
  416296:	mov    rdx,QWORD PTR [rsp+0x70]
  41629b:	mov    QWORD PTR [rsp+0x118],rbx
  4162a3:	call   0x412950
  4162a8:	mov    rsi,QWORD PTR [rsp+0x130]
  4162b0:	mov    rbx,QWORD PTR [rsp+0x138]
  4162b8:	mov    rdx,QWORD PTR [rsp+0x140]
  4162c0:	mov    BYTE PTR [rsp+0x48],0x1
  4162c5:	mov    eax,DWORD PTR [rsp+0x90]
  4162cc:	mov    r9,QWORD PTR [rsp+0x98]
  4162d4:	mov    QWORD PTR [rsp+0x1a0],rsi
  4162dc:	mov    QWORD PTR [rsp+0x1a8],rbx
  4162e4:	mov    QWORD PTR [rsp+0x1b0],rdx
  4162ec:	jmp    0x415fc8
  4162f1:	mov    BYTE PTR [rsp+0x1b0],0x0
  4162f9:	mov    rdx,QWORD PTR [rsp+0x70]
  4162fe:	mov    r8,r14
  416301:	mov    rax,QWORD PTR [rsp+0x1b0]
  416309:	mov    rcx,QWORD PTR [rsp+0x68]
  41630e:	mov    QWORD PTR [rsp+0x90],r9
  416316:	mov    QWORD PTR [rsp+0x110],rsi
  41631e:	mov    QWORD PTR [rsp+0x118],rbx
  416326:	mov    QWORD PTR [rsp+0x120],rax
  41632e:	call   0x412950
  416333:	mov    rsi,QWORD PTR [rsp+0x130]
  41633b:	mov    rbx,QWORD PTR [rsp+0x138]
  416343:	mov    rax,QWORD PTR [rsp+0x140]
  41634b:	mov    BYTE PTR [rsp+0x48],0x1
  416350:	mov    r9,QWORD PTR [rsp+0x90]
  416358:	mov    QWORD PTR [rsp+0x1a0],rsi
  416360:	mov    QWORD PTR [rsp+0x1a8],rbx
  416368:	mov    QWORD PTR [rsp+0x1b0],rax
  416370:	jmp    0x415ac2
  416375:	test   ah,0x20
  416378:	je     0x4163ee
  41637a:	lea    rax,[rip+0x30a57]        # 0x446dd8
  416381:	mov    r8d,DWORD PTR [rsp+0x64]
  416386:	xor    r9d,r9d
  416389:	mov    edx,0x3
  41638e:	mov    rcx,r15
  416391:	mov    QWORD PTR [rsp+0x20],rax
  416396:	call   0x412740
  41639b:	jmp    0x415c1a
  4163a0:	lea    r8,[rip+0x309d1]        # 0x446d78
  4163a7:	mov    edx,0x3
  4163ac:	mov    rcx,r15
  4163af:	call   0x412660
  4163b4:	mov    eax,DWORD PTR [rsp+0x15c]
  4163bb:	jmp    0x415be9
  4163c0:	xor    r12d,r12d
  4163c3:	jmp    0x415412
  4163c8:	lea    rax,[rip+0x30ad9]        # 0x446ea8
  4163cf:	mov    r8d,DWORD PTR [rsp+0x64]
  4163d4:	xor    r9d,r9d
  4163d7:	mov    edx,0x2
  4163dc:	mov    rcx,r15
  4163df:	mov    QWORD PTR [rsp+0x20],rax
  4163e4:	call   0x412740
  4163e9:	jmp    0x415ccb
  4163ee:	mov    r8,QWORD PTR [rsp+0x58]
  4163f3:	lea    rcx,[rsp+0x160]
  4163fb:	mov    r9d,eax
  4163fe:	mov    rdx,r15
  416401:	call   0x414320
  416406:	mov    rdx,QWORD PTR [rsp+0x160]
  41640e:	mov    rax,QWORD PTR [rsp+0x168]
  416416:	movzx  r8d,BYTE PTR [rsp+0x170]
  41641f:	movzx  ecx,BYTE PTR [rsp+0x171]
  416427:	jmp    0x415d24
  41642c:	mov    rax,QWORD PTR [rax]
  41642f:	mov    r8d,DWORD PTR [rsp+0x64]
  416434:	xor    r9d,r9d
  416437:	mov    edx,0xd
  41643c:	mov    rcx,r15
  41643f:	mov    QWORD PTR [rsp+0x28],rax
  416444:	lea    rax,[rip+0x30a47]        # 0x446e92
  41644b:	mov    QWORD PTR [rsp+0x20],rax
  416450:	call   0x412780
  416455:	jmp    0x415c1a
  41645a:	lea    rcx,[rsp+0x160]
  416462:	mov    r8d,0x1
  416468:	mov    rdx,r15
  41646b:	call   0x412a90
  416470:	mov    rdx,QWORD PTR [rsp+0x160]
  416478:	mov    rax,QWORD PTR [rsp+0x168]
  416480:	movzx  r8d,BYTE PTR [rsp+0x170]
  416489:	movzx  ecx,BYTE PTR [rsp+0x171]
  416491:	jmp    0x415d24
  416496:	lea    rax,[rip+0x30c69]        # 0x447106
  41649d:	mov    r8d,DWORD PTR [rsp+0x64]
  4164a2:	xor    r9d,r9d
  4164a5:	mov    edx,0x3
  4164aa:	mov    rcx,r15
  4164ad:	mov    QWORD PTR [rsp+0x20],rax
  4164b2:	call   0x412740
  4164b7:	xor    eax,eax
  4164b9:	jmp    0x4152b6
  4164be:	movabs rdx,0xffffffff00000000
  4164c8:	mov    BYTE PTR [rsp+0x270],0x0
  4164d0:	mov    BYTE PTR [rsp+0x271],0x0
  4164d8:	or     rax,rdx
  4164db:	mov    QWORD PTR [rsp+0x110],0xffffffffffffffff
  4164e7:	mov    rdx,QWORD PTR [rsp+0x70]
  4164ec:	mov    QWORD PTR [rsp+0x118],rax
  4164f4:	mov    QWORD PTR [rsp+0x268],rax
  4164fc:	mov    rax,QWORD PTR [rsp+0x270]
  416504:	mov    rcx,QWORD PTR [rsp+0x68]
  416509:	mov    QWORD PTR [rsp+0x260],0xffffffffffffffff
  416515:	mov    QWORD PTR [rsp+0x120],rax
  41651d:	mov    r8,QWORD PTR [r15+0x470]
  416524:	call   0x4128f0
  416529:	mov    rcx,QWORD PTR [rsp+0x140]
  416531:	mov    ebx,DWORD PTR [rsp+0x240]
  416538:	mov    rdx,QWORD PTR [rsp+0x130]
  416540:	mov    rax,QWORD PTR [rsp+0x138]
  416548:	mov    QWORD PTR [rsp+0x270],rcx
  416550:	shr    cx,0x8
  416554:	test   ebx,ebx
  416556:	setne  r8b
  41655a:	jmp    0x415cf5
  41655f:	mov    rax,QWORD PTR [r14+0x8]
  416563:	or     rax,QWORD PTR [r14+0x10]
  416567:	setne  al
  41656a:	jmp    0x4152b6
  41656f:	add    BYTE PTR [r15+0x18],0x1
  416574:	mov    rcx,r15
  416577:	mov    rsi,QWORD PTR [r15+0x88]
  41657e:	call   0x40c760
  416583:	mov    rbx,rax
  416586:	movzx  eax,BYTE PTR [rax+0x4]
  41658a:	cmp    al,0x14
  41658c:	je     0x416724
  416592:	cmp    al,0x35
  416594:	jne    0x416691
  41659a:	mov    rbx,QWORD PTR [rbx+0x8]
  41659e:	test   rbx,rbx
  4165a1:	je     0x4166ab
  4165a7:	cmp    rsi,QWORD PTR [r15+0x88]
  4165ae:	je     0x4165cb
  4165b0:	cmp    BYTE PTR [r15+0x437],0x0
  4165b8:	je     0x4165cb
  4165ba:	lea    r8,[rip+0x308a7]        # 0x446e68
  4165c1:	xor    edx,edx
  4165c3:	mov    rcx,r15
  4165c6:	call   0x412660
  4165cb:	movzx  eax,BYTE PTR [rbx+0x18]
  4165cf:	and    eax,0x3f
  4165d2:	cmp    al,0x1
  4165d4:	movzx  eax,WORD PTR [rbx+0x18]
  4165d8:	je     0x4166b4
  4165de:	shr    ax,0x6
  4165e2:	test   al,0x80
  4165e4:	jne    0x41661f
  4165e6:	movzx  ecx,WORD PTR [rbx+0x18]
  4165ea:	mov    edx,eax
  4165ec:	or     dl,0x80
  4165ef:	shl    edx,0x6
  4165f2:	and    ecx,0x3f
  4165f5:	or     edx,ecx
  4165f7:	mov    WORD PTR [rbx+0x18],dx
  4165fb:	and    edx,0x3f
  4165fe:	cmp    dl,0x1
  416601:	je     0x416768
  416607:	mov    rax,QWORD PTR [r15+0x3d8]
  41660e:	test   rax,rax
  416611:	je     0x41661f
  416613:	mov    edx,DWORD PTR [r15+0x30]
  416617:	mov    r8,rbx
  41661a:	mov    rcx,r15
  41661d:	call   rax
  41661f:	sub    BYTE PTR [r15+0x18],0x1
  416624:	mov    QWORD PTR [r15+0x198],rbx
  41662b:	xor    eax,eax
  41662d:	movzx  edx,BYTE PTR [rbx+0x18]
  416631:	and    edx,0x3f
  416634:	cmp    dl,0x1
  416637:	jne    0x416647
  416639:	movzx  eax,WORD PTR [rbx+0x18]
  41663d:	shr    ax,0xe
  416641:	xor    eax,0x1
  416644:	and    eax,0x1
  416647:	xor    ecx,ecx
  416649:	xor    r8d,r8d
  41664c:	xor    edx,edx
  41664e:	jmp    0x415d24
  416653:	lea    rax,[rip+0x308ce]        # 0x446f28
  41665a:	mov    r8d,DWORD PTR [rsp+0x64]
  41665f:	xor    r9d,r9d
  416662:	mov    dl,0x3
  416664:	mov    rcx,r15
  416667:	mov    QWORD PTR [rsp+0x20],rax
  41666c:	call   0x412740
  416671:	xor    eax,eax
  416673:	jmp    0x4152b6
  416678:	lea    r8,[rip+0x30a6d]        # 0x4470ec
  41667f:	mov    edx,0x3
  416684:	mov    rcx,r15
  416687:	call   0x412660
  41668c:	jmp    0x4152b4
  416691:	lea    r8,[rip+0x30770]        # 0x446e08
  416698:	mov    edx,0x3
  41669d:	mov    rcx,r15
  4166a0:	call   0x412660
  4166a5:	test   BYTE PTR [rbx+0x6],0x10
  4166a9:	jne    0x4166d1
  4166ab:	sub    BYTE PTR [r15+0x18],0x1
  4166b0:	xor    eax,eax
  4166b2:	jmp    0x416647
  4166b4:	shr    ax,0x6
  4166b8:	test   al,0x4
  4166ba:	jne    0x4165e2
  4166c0:	mov    rax,QWORD PTR [rbx+0x20]
  4166c4:	or     BYTE PTR [rax+0x1c],0x8
  4166c8:	movzx  eax,WORD PTR [rbx+0x18]
  4166cc:	jmp    0x4165de
  4166d1:	movzx  eax,BYTE PTR [rbx+0x4]
  4166d5:	mov    rdx,QWORD PTR [rsp+0x88]
  4166dd:	xor    r11d,r11d
  4166e0:	mov    rcx,r15
  4166e3:	mov    WORD PTR [rsp+0x266],r11w
  4166ec:	mov    BYTE PTR [rsp+0x264],al
  4166f3:	call   0x41cb80
  4166f8:	mov    rdx,rbx
  4166fb:	mov    rcx,r15
  4166fe:	mov    rsi,rax
  416701:	call   0x41cb80
  416706:	lea    r8,[rip+0x3072b]        # 0x446e38
  41670d:	mov    r9,rax
  416710:	mov    QWORD PTR [rsp+0x20],rsi
  416715:	mov    edx,0x3
  41671a:	mov    rcx,r15
  41671d:	call   0x412660
  416722:	jmp    0x4166ab
  416724:	mov    rcx,r15
  416727:	call   0x40c760
  41672c:	cmp    BYTE PTR [rax+0x4],0x35
  416730:	mov    rbx,rax
  416733:	jne    0x416691
  416739:	mov    rcx,r15
  41673c:	mov    rbx,QWORD PTR [rax+0x8]
  416740:	call   0x40c760
  416745:	cmp    BYTE PTR [rax+0x4],0x15
  416749:	je     0x41659e
  41674f:	lea    r8,[rip+0x309e2]        # 0x447138
  416756:	mov    edx,0x3
  41675b:	mov    rcx,r15
  41675e:	call   0x412660
  416763:	jmp    0x4166ab
  416768:	test   al,0x4
  41676a:	je     0x416780
  41676c:	mov    rax,QWORD PTR [r15+0x3f0]
  416773:	test   rax,rax
  416776:	je     0x416780
  416778:	mov    rdx,rbx
  41677b:	mov    rcx,r15
  41677e:	call   rax
  416780:	mov    rax,QWORD PTR [r15+0x3d0]
  416787:	test   rax,rax
  41678a:	jne    0x416613
  416790:	jmp    0x41661f
  416795:	nop
  416796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4167a0:	cmp    BYTE PTR [rdx+0x10],0x0
  4167a4:	mov    r9,QWORD PTR [rdx]
  4167a7:	mov    rax,rcx
  4167aa:	mov    r10,QWORD PTR [rdx+0x8]
  4167ae:	jne    0x4167e2
  4167b0:	cmp    r8,0x40
  4167b4:	jbe    0x416800
  4167b6:	sub    r8,0x40
  4167ba:	cmp    r8,0x3f
  4167be:	ja     0x4167e2
  4167c0:	lea    ecx,[r8-0x1]
  4167c4:	bt     r9,rcx
  4167c8:	jae    0x4167e2
  4167ca:	mov    ecx,0x40
  4167cf:	sub    ecx,r8d
  4167d2:	mov    r8,0xffffffffffffffff
  4167d9:	shr    r8,cl
  4167dc:	not    r8
  4167df:	or     r9,r8
  4167e2:	mov    QWORD PTR [rdx],r9
  4167e5:	mov    QWORD PTR [rdx+0x8],r10
  4167e9:	mov    rdx,QWORD PTR [rdx+0x10]
  4167ed:	mov    QWORD PTR [rax],r9
  4167f0:	mov    QWORD PTR [rax+0x8],r10
  4167f4:	mov    QWORD PTR [rax+0x10],rdx
  4167f8:	ret    
  4167f9:	nop    DWORD PTR [rax+0x0]
  416800:	lea    ecx,[r8-0x1]
  416804:	bt     r10,rcx
  416808:	jae    0x4167e2
  41680a:	cmp    r8,0x40
  41680e:	mov    r9,0xffffffffffffffff
  416815:	je     0x4167e2
  416817:	mov    ecx,0x40
  41681c:	mov    r11,r9
  41681f:	sub    ecx,r8d
  416822:	shr    r11,cl
  416825:	mov    rcx,r11
  416828:	not    rcx
  41682b:	or     r10,rcx
  41682e:	jmp    0x4167e2
  416830:	cmp    QWORD PTR [rcx+0x8],0x0
  416835:	mov    rax,QWORD PTR [rcx+0x18]
  416839:	je     0x416843
  41683b:	mov    rcx,QWORD PTR [rax]
  41683e:	jmp    0x437c50
  416843:	mov    rcx,QWORD PTR [rax+0x8]
  416847:	jmp    0x437c50
  41684c:	nop    DWORD PTR [rax+0x0]
  416850:	push   rsi
  416851:	push   rbx
  416852:	sub    rsp,0x28
  416856:	mov    rax,QWORD PTR [rcx]
  416859:	cmp    QWORD PTR [rax+0x8],0x0
  41685e:	je     0x416874
  416860:	mov    rbx,QWORD PTR [rax+0x18]
  416864:	cmp    BYTE PTR [rbx+0x8a],0x0
  41686b:	jne    0x416874
  41686d:	cmp    QWORD PTR [rbx+0x38],0x0
  416872:	je     0x416880
  416874:	mov    eax,0x1
  416879:	add    rsp,0x28
  41687d:	pop    rbx
  41687e:	pop    rsi
  41687f:	ret    
  416880:	cmp    WORD PTR [rbx+0x88],0x1
  416888:	jne    0x416874
  41688a:	cmp    BYTE PTR [rbx+0x8c],0x0
  416891:	jne    0x416874
  416893:	mov    rsi,rdx
  416896:	mov    rdx,QWORD PTR [rdx]
  416899:	test   rdx,rdx
  41689c:	je     0x4168b8
  41689e:	mov    rax,QWORD PTR [rsi+0x8]
  4168a2:	lea    rcx,[rax+0x1]
  4168a6:	shl    rax,0x3
  4168aa:	mov    QWORD PTR [rsi+0x8],rcx
  4168ae:	mov    rcx,QWORD PTR [rbx+0x8]
  4168b2:	mov    QWORD PTR [rdx+rax*1],rcx
  4168b6:	jmp    0x416874
  4168b8:	mov    rcx,QWORD PTR [rsi+0x8]
  4168bc:	mov    edx,0x8
  4168c1:	call   0x438600
  4168c6:	mov    ecx,0x1
  4168cb:	mov    QWORD PTR [rsi],rax
  4168ce:	mov    rdx,rax
  4168d1:	xor    eax,eax
  4168d3:	jmp    0x4168aa
  4168d5:	nop
  4168d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4168e0:	sub    rsp,0x28
  4168e4:	call   0x435e60
  4168e9:	test   eax,eax
  4168eb:	sete   al
  4168ee:	movzx  eax,al
  4168f1:	add    rsp,0x28
  4168f5:	ret    
  4168f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416900:	sub    rsp,0x28
  416904:	cmp    QWORD PTR [rcx+0x8],0x0
  416909:	mov    rax,QWORD PTR [rcx+0x18]
  41690d:	je     0x416924
  41690f:	mov    rcx,QWORD PTR [rax]
  416912:	call   0x435e60
  416917:	test   eax,eax
  416919:	sete   al
  41691c:	movzx  eax,al
  41691f:	add    rsp,0x28
  416923:	ret    
  416924:	mov    rcx,QWORD PTR [rax+0x8]
  416928:	jmp    0x416912
  41692a:	nop    WORD PTR [rax+rax*1+0x0]
  416930:	push   rbx
  416931:	sub    rsp,0x20
  416935:	mov    rax,QWORD PTR [rcx+0x120]
  41693c:	mov    edx,DWORD PTR [rax]
  41693e:	cmp    edx,0x7f
  416941:	je     0x416960
  416943:	lea    ecx,[rdx+0x1]
  416946:	shl    rdx,0x5
  41694a:	mov    DWORD PTR [rax],ecx
  41694c:	lea    rax,[rax+rdx*1+0x10]
  416951:	add    rsp,0x20
  416955:	pop    rbx
  416956:	ret    
  416957:	nop    WORD PTR [rax+rax*1+0x0]
  416960:	mov    rbx,rcx
  416963:	mov    ecx,0xff0
  416968:	call   0x4385d0
  41696d:	mov    rdx,QWORD PTR [rbx+0x120]
  416974:	mov    DWORD PTR [rax],0x0
  41697a:	mov    ecx,0x1
  41697f:	mov    QWORD PTR [rbx+0x120],rax
  416986:	mov    QWORD PTR [rax+0x8],rdx
  41698a:	xor    edx,edx
  41698c:	jmp    0x416946
  41698e:	xchg   ax,ax
  416990:	push   r12
  416992:	push   rbp
  416993:	push   rdi
  416994:	push   rsi
  416995:	push   rbx
  416996:	sub    rsp,0x20
  41699a:	mov    rdi,rcx
  41699d:	mov    rcx,rdx
  4169a0:	mov    rsi,rdx
  4169a3:	mov    r12d,r8d
  4169a6:	call   0x437c50
  4169ab:	mov    rcx,QWORD PTR [rdi+0x118]
  4169b2:	mov    r9d,0x1
  4169b8:	mov    r8d,eax
  4169bb:	mov    rdx,rsi
  4169be:	call   0x437890
  4169c3:	mov    r9,QWORD PTR [rax]
  4169c6:	mov    rbp,rax
  4169c9:	test   r9,r9
  4169cc:	jne    0x4169d8
  4169ce:	jmp    0x4169f0
  4169d0:	mov    r9,QWORD PTR [r9]
  4169d3:	test   r9,r9
  4169d6:	je     0x4169f0
  4169d8:	cmp    QWORD PTR [r9+0x8],0x0
  4169dd:	jne    0x4169d0
  4169df:	mov    rax,QWORD PTR [r9+0x18]
  4169e3:	add    rsp,0x20
  4169e7:	pop    rbx
  4169e8:	pop    rsi
  4169e9:	pop    rdi
  4169ea:	pop    rbp
  4169eb:	pop    r12
  4169ed:	ret    
  4169ee:	xchg   ax,ax
  4169f0:	mov    edx,0x38
  4169f5:	mov    ecx,0x1
  4169fa:	call   0x438600
  4169ff:	mov    rbx,rax
  416a02:	mov    rax,QWORD PTR [rdi+0xb8]
  416a09:	mov    rcx,rsi
  416a0c:	mov    QWORD PTR [rbx+0x8],rsi
  416a10:	mov    QWORD PTR [rbx],rax
  416a13:	call   0x43f028
  416a18:	mov    rcx,rdi
  416a1b:	mov    DWORD PTR [rbx+0x10],eax
  416a1e:	mov    BYTE PTR [rbx+0x14],r12b
  416a22:	mov    QWORD PTR [rbx+0x28],0x0
  416a2a:	call   0x416930
  416a2f:	mov    rdx,rax
  416a32:	mov    rax,QWORD PTR [rbp+0x0]
  416a36:	mov    QWORD PTR [rdx+0x8],0x0
  416a3e:	mov    QWORD PTR [rdx],rax
  416a41:	mov    rax,QWORD PTR [rdi+0x28]
  416a45:	mov    eax,DWORD PTR [rax+0x38]
  416a48:	mov    QWORD PTR [rdx+0x18],rbx
  416a4c:	mov    DWORD PTR [rdx+0x10],eax
  416a4f:	mov    rax,rbx
  416a52:	mov    QWORD PTR [rbp+0x0],rdx
  416a56:	add    rsp,0x20
  416a5a:	pop    rbx
  416a5b:	pop    rsi
  416a5c:	pop    rdi
  416a5d:	pop    rbp
  416a5e:	pop    r12
  416a60:	ret    
  416a61:	nop    DWORD PTR [rax+rax*1+0x0]
  416a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416a70:	push   r14
  416a72:	push   r13
  416a74:	push   r12
  416a76:	push   rbp
  416a77:	push   rdi
  416a78:	push   rsi
  416a79:	push   rbx
  416a7a:	sub    rsp,0x20
  416a7e:	mov    ebx,ecx
  416a80:	mov    ecx,0x15
  416a85:	mov    r12,rdx
  416a88:	call   0x4385d0
  416a8d:	mov    r14,QWORD PTR [rip+0x3ab4c]        # 0x4515e0
  416a94:	mov    rbp,rax
  416a97:	movzx  eax,bl
  416a9a:	mov    rdi,rbp
  416a9d:	test   WORD PTR [r14+rax*2],0xc00
  416aa4:	jne    0x416ace
  416aa6:	lea    rdi,[rbp+0x1]
  416aaa:	mov    BYTE PTR [rbp+0x0],bl
  416aad:	mov    r13d,0x14
  416ab3:	mov    rcx,r12
  416ab6:	call   0x43f0d8
  416abb:	cmp    eax,0xffffffff
  416abe:	mov    ebx,eax
  416ac0:	je     0x416ace
  416ac2:	movzx  eax,al
  416ac5:	test   WORD PTR [r14+rax*2],0xc00
  416acc:	je     0x416af0
  416ace:	mov    BYTE PTR [rdi],0x0
  416ad1:	mov    rdx,r12
  416ad4:	mov    ecx,ebx
  416ad6:	call   0x43efe0
  416adb:	mov    rax,rbp
  416ade:	add    rsp,0x20
  416ae2:	pop    rbx
  416ae3:	pop    rsi
  416ae4:	pop    rdi
  416ae5:	pop    rbp
  416ae6:	pop    r12
  416ae8:	pop    r13
  416aea:	pop    r14
  416aec:	ret    
  416aed:	nop    DWORD PTR [rax]
  416af0:	mov    rsi,rdi
  416af3:	movsxd rax,r13d
  416af6:	sub    rsi,rbp
  416af9:	cmp    rsi,rax
  416afc:	je     0x416b10
  416afe:	mov    r8,rdi
  416b01:	lea    rdi,[r8+0x1]
  416b05:	mov    BYTE PTR [r8],bl
  416b08:	jmp    0x416ab3
  416b0a:	nop    WORD PTR [rax+rax*1+0x0]
  416b10:	add    r13d,r13d
  416b13:	mov    rcx,rbp
  416b16:	lea    edx,[r13+0x1]
  416b1a:	movsxd rdx,edx
  416b1d:	call   0x438650
  416b22:	mov    rbp,rax
  416b25:	lea    r8,[rax+rsi*1]
  416b29:	jmp    0x416b01
  416b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  416b30:	mov    rdx,QWORD PTR [rdx]
  416b33:	mov    rcx,QWORD PTR [rcx]
  416b36:	jmp    0x43f048
  416b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  416b40:	push   rsi
  416b41:	push   rbx
  416b42:	sub    rsp,0x28
  416b46:	mov    rbx,rcx
  416b49:	mov    rcx,QWORD PTR [rcx+0x8]
  416b4d:	cmp    BYTE PTR [rcx],0x0
  416b50:	jne    0x416be0
  416b56:	mov    DWORD PTR [rbx+0x80],0x0
  416b60:	xor    ecx,ecx
  416b62:	lea    rdx,[rbx+0x48]
  416b66:	call   QWORD PTR [rip+0x44b10]        # 0x45b67c
  416b6c:	test   eax,eax
  416b6e:	mov    rsi,QWORD PTR [rip+0x44ae7]        # 0x45b65c
  416b75:	jne    0x416baf
  416b77:	movzx  eax,WORD PTR [rbx+0x4e]
  416b7b:	and    ax,0xf000
  416b7f:	cmp    ax,0x4000
  416b83:	je     0x416ba0
  416b85:	mov    eax,0x1
  416b8a:	mov    DWORD PTR [rbx+0x84],0x0
  416b94:	add    rsp,0x28
  416b98:	pop    rbx
  416b99:	pop    rsi
  416b9a:	ret    
  416b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  416ba0:	mov    rsi,QWORD PTR [rip+0x44ab5]        # 0x45b65c
  416ba7:	call   rsi
  416ba9:	mov    DWORD PTR [rax],0x2
  416baf:	mov    ecx,DWORD PTR [rbx+0x80]
  416bb5:	call   0x43ef80
  416bba:	mov    DWORD PTR [rbx+0x80],0xffffffff
  416bc4:	call   rsi
  416bc6:	mov    eax,DWORD PTR [rax]
  416bc8:	mov    DWORD PTR [rbx+0x84],eax
  416bce:	xor    eax,eax
  416bd0:	add    rsp,0x28
  416bd4:	pop    rbx
  416bd5:	pop    rsi
  416bd6:	ret    
  416bd7:	nop    WORD PTR [rax+rax*1+0x0]
  416be0:	mov    r8d,0x1b6
  416be6:	mov    edx,0x8000
  416beb:	call   0x43efa0
  416bf0:	cmp    eax,0xffffffff
  416bf3:	mov    ecx,eax
  416bf5:	mov    DWORD PTR [rbx+0x80],eax
  416bfb:	jne    0x416b62
  416c01:	mov    rsi,QWORD PTR [rip+0x44a54]        # 0x45b65c
  416c08:	call   rsi
  416c0a:	cmp    DWORD PTR [rax],0xd
  416c0d:	je     0x416c20
  416c0f:	call   rsi
  416c11:	cmp    DWORD PTR [rax],0x14
  416c14:	jne    0x416bc4
  416c16:	jmp    0x416c40
  416c18:	nop    DWORD PTR [rax+rax*1+0x0]
  416c20:	lea    rdx,[rbx+0x48]
  416c24:	mov    rcx,QWORD PTR [rbx+0x8]
  416c28:	call   QWORD PTR [rip+0x44c56]        # 0x45b884
  416c2e:	test   eax,eax
  416c30:	jne    0x416c50
  416c32:	movzx  eax,WORD PTR [rbx+0x4e]
  416c36:	and    ax,0xf000
  416c3a:	cmp    ax,0x4000
  416c3e:	jne    0x416c50
  416c40:	call   rsi
  416c42:	mov    DWORD PTR [rax],0x2
  416c48:	jmp    0x416bc4
  416c4d:	nop    DWORD PTR [rax]
  416c50:	call   rsi
  416c52:	mov    DWORD PTR [rax],0xd
  416c58:	jmp    0x416bc4
  416c5d:	nop    DWORD PTR [rax]
  416c60:	push   r13
  416c62:	push   r12
  416c64:	push   rbp
  416c65:	push   rdi
  416c66:	push   rsi
  416c67:	push   rbx
  416c68:	sub    rsp,0x28
  416c6c:	mov    rax,QWORD PTR [rcx+0x28]
  416c70:	xor    esi,esi
  416c72:	cmp    DWORD PTR [rax+0x3c],0x1
  416c76:	jbe    0x416c84
  416c78:	mov    rax,QWORD PTR [rcx]
  416c7b:	test   rax,rax
  416c7e:	je     0x416c84
  416c80:	movzx  esi,BYTE PTR [rax+0x6d]
  416c84:	cmp    BYTE PTR [rcx+0x1a],0x0
  416c88:	mov    edi,DWORD PTR [rcx+0x468]
  416c8e:	je     0x416ca0
  416c90:	add    rsp,0x28
  416c94:	pop    rbx
  416c95:	pop    rsi
  416c96:	pop    rdi
  416c97:	pop    rbp
  416c98:	pop    r12
  416c9a:	pop    r13
  416c9c:	ret    
  416c9d:	nop    DWORD PTR [rax]
  416ca0:	mov    rbp,rdx
  416ca3:	mov    r12d,r8d
  416ca6:	mov    rbx,rcx
  416ca9:	mov    r13,QWORD PTR [rip+0x449ac]        # 0x45b65c
  416cb0:	call   r13
  416cb3:	mov    edx,DWORD PTR [rbp+0x84]
  416cb9:	mov    DWORD PTR [rax],edx
  416cbb:	xor    eax,eax
  416cbd:	or     esi,r12d
  416cc0:	setne  al
  416cc3:	cmp    edi,eax
  416cc5:	jle    0x416cf2
  416cc7:	cmp    BYTE PTR [rbx+0x46c],0x0
  416cce:	jne    0x416d20
  416cd0:	mov    r8,QWORD PTR [rbp+0x8]
  416cd4:	test   r8,r8
  416cd7:	je     0x416d12
  416cd9:	mov    edx,0x6
  416cde:	mov    rcx,rbx
  416ce1:	add    rsp,0x28
  416ce5:	pop    rbx
  416ce6:	pop    rsi
  416ce7:	pop    rdi
  416ce8:	pop    rbp
  416ce9:	pop    r12
  416ceb:	pop    r13
  416ced:	jmp    0x4128a0
  416cf2:	mov    eax,DWORD PTR [rbx+0x468]
  416cf8:	test   eax,eax
  416cfa:	je     0x416cd0
  416cfc:	cmp    BYTE PTR [rbx+0x46f],0x0
  416d03:	jne    0x416cd0
  416d05:	mov    r8,QWORD PTR [rbp+0x8]
  416d09:	test   r8,r8
  416d0c:	je     0x416d46
  416d0e:	xor    edx,edx
  416d10:	jmp    0x416cde
  416d12:	mov    r8,QWORD PTR [rbp+0x0]
  416d16:	jmp    0x416cd9
  416d18:	nop    DWORD PTR [rax+rax*1+0x0]
  416d20:	call   r13
  416d23:	cmp    DWORD PTR [rax],0x2
  416d26:	jne    0x416cd0
  416d28:	mov    rcx,QWORD PTR [rbx+0x2a8]
  416d2f:	mov    rdx,QWORD PTR [rbp+0x0]
  416d33:	call   0x41d0e0
  416d38:	cmp    BYTE PTR [rbx+0x46f],0x0
  416d3f:	jne    0x416cd0
  416d41:	jmp    0x416c90
  416d46:	mov    r8,QWORD PTR [rbp+0x0]
  416d4a:	xor    edx,edx
  416d4c:	jmp    0x416cde
  416d4e:	xchg   ax,ax
  416d50:	mov    r8d,0x20
  416d56:	jmp    0x43f0b0
  416d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  416d60:	push   r12
  416d62:	push   rbp
  416d63:	push   rdi
  416d64:	push   rsi
  416d65:	push   rbx
  416d66:	sub    rsp,0x20
  416d6a:	mov    ebx,r8d
  416d6d:	mov    r12,rdx
  416d70:	mov    rdi,rcx
  416d73:	call   0x43f028
  416d78:	lea    rcx,[rbx+rax*1+0x2]
  416d7d:	mov    rbp,rax
  416d80:	call   0x4385d0
  416d85:	mov    rdx,QWORD PTR [r12]
  416d89:	mov    r8,rbx
  416d8c:	mov    rcx,rax
  416d8f:	mov    rsi,rax
  416d92:	call   0x43f0a8
  416d97:	test   rbx,rbx
  416d9a:	je     0x416db1
  416d9c:	movzx  eax,BYTE PTR [rsi+rbx*1-0x1]
  416da1:	cmp    al,0x5c
  416da3:	je     0x416db1
  416da5:	cmp    al,0x2f
  416da7:	je     0x416db1
  416da9:	mov    BYTE PTR [rsi+rbx*1],0x2f
  416dad:	add    rbx,0x1
  416db1:	lea    rcx,[rsi+rbx*1]
  416db5:	lea    r8,[rbp+0x1]
  416db9:	mov    rdx,rdi
  416dbc:	call   0x43f0a8
  416dc1:	mov    rax,rsi
  416dc4:	add    rsp,0x20
  416dc8:	pop    rbx
  416dc9:	pop    rsi
  416dca:	pop    rdi
  416dcb:	pop    rbp
  416dcc:	pop    r12
  416dce:	ret    
  416dcf:	nop
  416dd0:	push   rbp
  416dd1:	push   r15
  416dd3:	push   r14
  416dd5:	push   r13
  416dd7:	push   r12
  416dd9:	push   rdi
  416dda:	push   rsi
  416ddb:	push   rbx
  416ddc:	sub    rsp,0x48
  416de0:	lea    rbp,[rsp+0x80]
  416de8:	mov    ebx,DWORD PTR [rcx+0x10]
  416deb:	mov    rdi,rcx
  416dee:	lea    rax,[rbx+0x2a]
  416df2:	shr    rax,0x4
  416df6:	shl    rax,0x4
  416dfa:	call   0x439cf0
  416dff:	mov    rdx,QWORD PTR [rcx+0x8]
  416e03:	sub    rsp,rax
  416e06:	mov    r8,rbx
  416e09:	lea    r9,[rsp+0x20]
  416e0e:	mov    rcx,r9
  416e11:	call   0x43f0a8
  416e16:	test   rbx,rbx
  416e19:	mov    r9,rax
  416e1c:	je     0x416e34
  416e1e:	movzx  eax,BYTE PTR [rax+rbx*1-0x1]
  416e23:	cmp    al,0x5c
  416e25:	je     0x416e34
  416e27:	cmp    al,0x2f
  416e29:	je     0x416e34
  416e2b:	mov    BYTE PTR [r9+rbx*1],0x2f
  416e30:	add    rbx,0x1
  416e34:	movabs rax,0x672e726564616568
  416e3e:	lea    rdx,[rip+0x3053b]        # 0x447380
  416e45:	mov    BYTE PTR [r9+rbx*1+0xa],0x0
  416e4b:	mov    QWORD PTR [r9+rbx*1],rax
  416e4f:	mov    eax,0x6363
  416e54:	mov    rcx,r9
  416e57:	mov    WORD PTR [r9+rbx*1+0x8],ax
  416e5d:	xor    r12d,r12d
  416e60:	mov    r13d,0x8
  416e66:	call   0x435ff0
  416e6b:	mov    ecx,0x48
  416e70:	mov    rbx,rax
  416e73:	mov    r14d,0x9
  416e79:	call   0x4385d0
  416e7e:	lea    rdx,[rdi+0x8]
  416e82:	test   rbx,rbx
  416e85:	mov    QWORD PTR [rdi+0x20],rax
  416e89:	mov    rsi,QWORD PTR [rip+0x3a750]        # 0x4515e0
  416e90:	mov    QWORD PTR [rbp-0x48],rdx
  416e94:	jne    0x416eac
  416e96:	jmp    0x416ecc
  416e98:	nop    DWORD PTR [rax+rax*1+0x0]
  416ea0:	movzx  eax,r8b
  416ea4:	test   WORD PTR [rsi+rax*2],0xc00
  416eaa:	je     0x416ee5
  416eac:	mov    rcx,rbx
  416eaf:	call   0x43f0d8
  416eb4:	cmp    eax,0xffffffff
  416eb7:	mov    r8d,eax
  416eba:	jne    0x416ea0
  416ebc:	mov    rcx,rbx
  416ebf:	shl    r12,0x3
  416ec3:	call   0x43f150
  416ec8:	mov    rax,QWORD PTR [rdi+0x20]
  416ecc:	mov    QWORD PTR [rax+r12*1],0x0
  416ed4:	lea    rsp,[rbp-0x38]
  416ed8:	pop    rbx
  416ed9:	pop    rsi
  416eda:	pop    rdi
  416edb:	pop    r12
  416edd:	pop    r13
  416edf:	pop    r14
  416ee1:	pop    r15
  416ee3:	pop    rbp
  416ee4:	ret    
  416ee5:	add    r12,0x2
  416ee9:	cmp    r12,r14
  416eec:	ja     0x416fb0
  416ef2:	mov    rax,QWORD PTR [rdi+0x20]
  416ef6:	lea    r15,[rax+r12*8-0x10]
  416efb:	mov    rdx,rbx
  416efe:	mov    ecx,r8d
  416f01:	call   0x416a70
  416f06:	mov    QWORD PTR [r15],rax
  416f09:	mov    rcx,rbx
  416f0c:	call   0x43f0d8
  416f11:	cmp    eax,0xffffffff
  416f14:	je     0x416f1f
  416f16:	movzx  edx,al
  416f19:	test   BYTE PTR [rsi+rdx*2],0x1
  416f1d:	jne    0x416f09
  416f1f:	mov    rdx,rbx
  416f22:	mov    ecx,eax
  416f24:	call   0x416a70
  416f29:	movzx  edx,BYTE PTR [rax]
  416f2c:	mov    r9,rax
  416f2f:	cmp    dl,0x5c
  416f32:	je     0x416fa0
  416f34:	cmp    dl,0x2f
  416f37:	je     0x416fa0
  416f39:	test   dl,dl
  416f3b:	jne    0x416f90
  416f3d:	mov    r10,r13
  416f40:	add    r10,QWORD PTR [rdi+0x20]
  416f44:	mov    r8d,DWORD PTR [rdi+0x10]
  416f48:	mov    rdx,QWORD PTR [rbp-0x48]
  416f4c:	mov    rcx,r9
  416f4f:	mov    QWORD PTR [rbp-0x50],r9
  416f53:	mov    QWORD PTR [rbp-0x58],r10
  416f57:	call   0x416d60
  416f5c:	mov    r10,QWORD PTR [rbp-0x58]
  416f60:	mov    r9,QWORD PTR [rbp-0x50]
  416f64:	mov    QWORD PTR [r10],rax
  416f67:	mov    rcx,r9
  416f6a:	call   0x43f100
  416f6f:	jmp    0x416f76
  416f71:	cmp    eax,0xffffffff
  416f74:	je     0x416f83
  416f76:	mov    rcx,rbx
  416f79:	call   0x43f0d8
  416f7e:	cmp    eax,0xa
  416f81:	jne    0x416f71
  416f83:	add    r13,0x10
  416f87:	jmp    0x416eac
  416f8c:	nop    DWORD PTR [rax+0x0]
  416f90:	cmp    BYTE PTR [r9+0x1],0x3a
  416f95:	jne    0x416f3d
  416f97:	nop    WORD PTR [rax+rax*1+0x0]
  416fa0:	mov    rax,QWORD PTR [rdi+0x20]
  416fa4:	mov    QWORD PTR [rax+r13*1],r9
  416fa8:	jmp    0x416f76
  416faa:	nop    WORD PTR [rax+rax*1+0x0]
  416fb0:	add    r14,0x8
  416fb4:	mov    rcx,QWORD PTR [rdi+0x20]
  416fb8:	mov    DWORD PTR [rbp-0x50],r8d
  416fbc:	lea    rdx,[r14*8+0x0]
  416fc4:	call   0x438650
  416fc9:	mov    r8d,DWORD PTR [rbp-0x50]
  416fcd:	mov    QWORD PTR [rdi+0x20],rax
  416fd1:	jmp    0x416ef6
  416fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416fe0:	push   rdi
  416fe1:	push   rsi
  416fe2:	push   rbx
  416fe3:	sub    rsp,0x20
  416fe7:	mov    r8d,0x8
  416fed:	mov    rbx,rcx
  416ff0:	mov    rsi,rdx
  416ff3:	call   0x43f0b0
  416ff8:	test   eax,eax
  416ffa:	jne    0x41702c
  416ffc:	cmp    BYTE PTR [rbx+0x18],0x0
  417000:	lea    rdi,[rbx+0x8]
  417004:	je     0x417034
  417006:	lea    rdx,[rsi+0x8]
  41700a:	mov    r8d,0x10
  417010:	mov    rcx,rdi
  417013:	call   0x43f0b0
  417018:	test   eax,eax
  41701a:	jne    0x41702c
  41701c:	cmp    BYTE PTR [rbx+0x19],0x0
  417020:	jne    0x41702c
  417022:	movzx  eax,BYTE PTR [rsi+0x18]
  417026:	xor    eax,0x1
  417029:	movzx  eax,al
  41702c:	add    rsp,0x20
  417030:	pop    rbx
  417031:	pop    rsi
  417032:	pop    rdi
  417033:	ret    
  417034:	mov    rax,QWORD PTR [rbx+0x20]
  417038:	lea    rdi,[rbx+0x8]
  41703c:	mov    r8,rdi
  41703f:	mov    rdx,QWORD PTR [rax+0x60]
  417043:	mov    rcx,QWORD PTR [rax+0x28]
  417047:	call   0x435380
  41704c:	mov    BYTE PTR [rbx+0x18],0x1
  417050:	jmp    0x417006
  417052:	nop    DWORD PTR [rax+0x0]
  417056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417060:	push   r14
  417062:	push   r13
  417064:	push   r12
  417066:	push   rbp
  417067:	push   rdi
  417068:	push   rsi
  417069:	push   rbx
  41706a:	sub    rsp,0x50
  41706e:	movzx  eax,BYTE PTR [rdx+0x8d]
  417075:	test   al,al
  417077:	jne    0x4171c0
  41707d:	movzx  r12d,BYTE PTR [rdx+0x8b]
  417085:	test   r12b,r12b
  417088:	jne    0x4171c0
  41708e:	mov    r8d,DWORD PTR [rdx+0x84]
  417095:	test   r8d,r8d
  417098:	jne    0x4171c0
  41709e:	cmp    DWORD PTR [rdx+0x80],0xffffffff
  4170a5:	mov    r14,rdx
  4170a8:	mov    rbp,rcx
  4170ab:	je     0x4171d0
  4170b1:	movzx  eax,WORD PTR [r14+0x4e]
  4170b6:	and    ax,0xf000
  4170ba:	cmp    ax,0x3000
  4170be:	je     0x4171f9
  4170c4:	cmp    ax,0x8000
  4170c8:	je     0x417228
  4170ce:	mov    ecx,0x2010
  4170d3:	xor    r13d,r13d
  4170d6:	mov    esi,0x2000
  4170db:	call   0x4385d0
  4170e0:	xor    ebx,ebx
  4170e2:	mov    rdi,rax
  4170e5:	mov    ecx,DWORD PTR [r14+0x80]
  4170ec:	lea    rdx,[rdi+rbx*1]
  4170f0:	mov    r8d,esi
  4170f3:	sub    r8d,ebx
  4170f6:	call   0x43efa8
  4170fb:	movsxd r9,eax
  4170fe:	cmp    r9,0x0
  417102:	jle    0x417130
  417104:	add    rbx,r9
  417107:	cmp    rbx,rsi
  41710a:	jne    0x4170e5
  41710c:	test   r13b,r13b
  41710f:	jne    0x417220
  417115:	lea    rsi,[rbx+rbx*1]
  417119:	mov    rcx,rdi
  41711c:	lea    rdx,[rsi+0x10]
  417120:	call   0x438650
  417125:	mov    rdi,rax
  417128:	jmp    0x4170e5
  41712a:	nop    WORD PTR [rax+rax*1+0x0]
  417130:	jne    0x41723b
  417136:	cmp    rsi,rbx
  417139:	je     0x417155
  41713b:	test   r13b,r13b
  41713e:	je     0x417155
  417140:	mov    r9,QWORD PTR [r14+0x8]
  417144:	lea    r8,[rip+0x3024c]        # 0x447397
  41714b:	xor    edx,edx
  41714d:	mov    rcx,rbp
  417150:	call   0x412660
  417155:	lea    rax,[r14+0x60]
  417159:	mov    rdx,QWORD PTR [rbp+0x458]
  417160:	lea    r9,[rsi+0x10]
  417164:	mov    QWORD PTR [rsp+0x20],rbx
  417169:	mov    r8,rdi
  41716c:	mov    rcx,rbp
  41716f:	mov    QWORD PTR [rsp+0x30],rax
  417174:	lea    rax,[r14+0x30]
  417178:	mov    QWORD PTR [rsp+0x28],rax
  41717d:	call   0x423cf0
  417182:	mov    BYTE PTR [r14+0x8d],0x1
  41718a:	mov    QWORD PTR [r14+0x28],rax
  41718e:	mov    ecx,DWORD PTR [r14+0x80]
  417195:	mov    BYTE PTR [r14+0x8b],r12b
  41719c:	call   0x43ef80
  4171a1:	movzx  eax,BYTE PTR [r14+0x8b]
  4171a9:	mov    DWORD PTR [r14+0x80],0xffffffff
  4171b4:	xor    eax,0x1
  4171b7:	nop    WORD PTR [rax+rax*1+0x0]
  4171c0:	add    rsp,0x50
  4171c4:	pop    rbx
  4171c5:	pop    rsi
  4171c6:	pop    rdi
  4171c7:	pop    rbp
  4171c8:	pop    r12
  4171ca:	pop    r13
  4171cc:	pop    r14
  4171ce:	ret    
  4171cf:	nop
  4171d0:	mov    rcx,rdx
  4171d3:	call   0x416b40
  4171d8:	test   al,al
  4171da:	jne    0x4170b1
  4171e0:	xor    r8d,r8d
  4171e3:	mov    rdx,r14
  4171e6:	mov    rcx,rbp
  4171e9:	mov    BYTE PTR [rsp+0x4f],al
  4171ed:	call   0x416c60
  4171f2:	movzx  eax,BYTE PTR [rsp+0x4f]
  4171f7:	jmp    0x4171c0
  4171f9:	mov    r9,QWORD PTR [r14+0x8]
  4171fd:	lea    r8,[rip+0x3017e]        # 0x447382
  417204:	mov    edx,0x3
  417209:	mov    rcx,rbp
  41720c:	mov    r12d,0x1
  417212:	call   0x412660
  417217:	jmp    0x41718e
  41721c:	nop    DWORD PTR [rax+0x0]
  417220:	mov    rbx,rsi
  417223:	jmp    0x417155
  417228:	mov    rsi,QWORD PTR [r14+0x60]
  41722c:	mov    r13d,0x1
  417232:	lea    rcx,[rsi+0x10]
  417236:	jmp    0x4170db
  41723b:	mov    r8,QWORD PTR [r14+0x8]
  41723f:	mov    edx,0x3
  417244:	mov    rcx,rbp
  417247:	mov    r12d,0x1
  41724d:	call   0x4128a0
  417252:	mov    rcx,rdi
  417255:	call   0x43f100
  41725a:	jmp    0x41718e
  41725f:	nop
  417260:	push   rbp
  417261:	push   rdi
  417262:	push   rsi
  417263:	push   rbx
  417264:	sub    rsp,0x28
  417268:	movzx  eax,BYTE PTR [rdx]
  41726b:	cmp    al,0x5c
  41726d:	je     0x4172b3
  41726f:	cmp    al,0x2f
  417271:	je     0x4172b3
  417273:	test   al,al
  417275:	je     0x41727d
  417277:	cmp    BYTE PTR [rdx+0x1],0x3a
  41727b:	je     0x4172b3
  41727d:	mov    rax,QWORD PTR [rcx]
  417280:	test   rax,rax
  417283:	je     0x4172f0
  417285:	mov    rbx,QWORD PTR [rax+0x50]
  417289:	cmp    r9d,0x1
  41728d:	mov    rsi,rcx
  417290:	je     0x417300
  417292:	test   r8d,r8d
  417295:	je     0x4172d0
  417297:	mov    rbx,QWORD PTR [rsi+0xc0]
  41729e:	test   rbx,rbx
  4172a1:	je     0x417360
  4172a7:	mov    rax,rbx
  4172aa:	add    rsp,0x28
  4172ae:	pop    rbx
  4172af:	pop    rsi
  4172b0:	pop    rdi
  4172b1:	pop    rbp
  4172b2:	ret    
  4172b3:	lea    rbx,[rcx+0xc8]
  4172ba:	mov    rax,rbx
  4172bd:	add    rsp,0x28
  4172c1:	pop    rbx
  4172c2:	pop    rsi
  4172c3:	pop    rdi
  4172c4:	pop    rbp
  4172c5:	ret    
  4172c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4172d0:	cmp    r9d,0x3
  4172d4:	je     0x417345
  4172d6:	cmp    BYTE PTR [rsi+0x188],0x0
  4172dd:	je     0x417320
  4172df:	mov    rbx,QWORD PTR [rsi+0xb8]
  4172e6:	jmp    0x41729e
  4172e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4172f0:	mov    rbx,QWORD PTR [rcx+0x108]
  4172f7:	jmp    0x417289
  4172f9:	nop    DWORD PTR [rax+0x0]
  417300:	mov    rcx,QWORD PTR [rbx+0x40]
  417304:	test   rcx,rcx
  417307:	je     0x417351
  417309:	lea    r9,[rsi+0xc8]
  417310:	cmp    rcx,r9
  417313:	je     0x417351
  417315:	mov    rbx,QWORD PTR [rcx]
  417318:	jmp    0x41729e
  41731a:	nop    WORD PTR [rax+rax*1+0x0]
  417320:	test   rax,rax
  417323:	je     0x417380
  417325:	movzx  edi,BYTE PTR [rax+0x6d]
  417329:	mov    rdx,QWORD PTR [rbx+0x18]
  41732d:	test   rdx,rdx
  417330:	je     0x417384
  417332:	mov    r8d,edi
  417335:	mov    rcx,rsi
  417338:	add    rsp,0x28
  41733c:	pop    rbx
  41733d:	pop    rsi
  41733e:	pop    rdi
  41733f:	pop    rbp
  417340:	jmp    0x416990
  417345:	xor    r8d,r8d
  417348:	lea    rdx,[rip+0x30064]        # 0x4473b3
  41734f:	jmp    0x417335
  417351:	test   r8d,r8d
  417354:	jne    0x417297
  41735a:	jmp    0x4172d6
  41735f:	nop
  417360:	lea    r8,[rip+0x30051]        # 0x4473b8
  417367:	mov    r9,rdx
  41736a:	mov    rcx,rsi
  41736d:	mov    edx,0x3
  417372:	call   0x412660
  417377:	jmp    0x4172a7
  41737c:	nop    DWORD PTR [rax+0x0]
  417380:	xor    edi,edi
  417382:	jmp    0x417329
  417384:	mov    rcx,QWORD PTR [rbx+0x8]
  417388:	call   0x438060
  41738d:	sub    rax,QWORD PTR [rbx+0x8]
  417391:	lea    rcx,[rax+0x1]
  417395:	mov    rbp,rax
  417398:	call   0x4385d0
  41739d:	mov    rdx,QWORD PTR [rbx+0x8]
  4173a1:	mov    r8,rbp
  4173a4:	mov    rcx,rax
  4173a7:	call   0x43f0a8
  4173ac:	mov    BYTE PTR [rax+rbp*1],0x0
  4173b0:	mov    rdx,rax
  4173b3:	mov    QWORD PTR [rbx+0x18],rax
  4173b7:	jmp    0x417332
  4173bc:	nop    DWORD PTR [rax+0x0]
  4173c0:	push   r15
  4173c2:	push   r14
  4173c4:	push   r13
  4173c6:	push   r12
  4173c8:	push   rbp
  4173c9:	push   rdi
  4173ca:	push   rsi
  4173cb:	push   rbx
  4173cc:	sub    rsp,0x28
  4173d0:	mov    r14,QWORD PTR [rdx+0x8]
  4173d4:	xor    r12d,r12d
  4173d7:	mov    rbx,rdx
  4173da:	mov    rsi,rcx
  4173dd:	mov    rcx,rdx
  4173e0:	mov    QWORD PTR [rbx+0x8],r8
  4173e4:	mov    rbp,r8
  4173e7:	call   0x416b40
  4173ec:	test   al,al
  4173ee:	jne    0x417410
  4173f0:	mov    eax,r12d
  4173f3:	mov    QWORD PTR [rbx+0x8],r14
  4173f7:	add    rsp,0x28
  4173fb:	pop    rbx
  4173fc:	pop    rsi
  4173fd:	pop    rdi
  4173fe:	pop    rbp
  4173ff:	pop    r12
  417401:	pop    r13
  417403:	pop    r14
  417405:	pop    r15
  417407:	ret    
  417408:	nop    DWORD PTR [rax+rax*1+0x0]
  417410:	mov    r8d,DWORD PTR [rbx+0x80]
  417417:	mov    rdx,rbp
  41741a:	mov    rcx,rsi
  41741d:	call   QWORD PTR [rsi+0x3a8]
  417423:	and    eax,0x1
  417426:	mov    r12d,eax
  417429:	mov    r13d,eax
  41742c:	and    r12d,0x1
  417430:	test   eax,eax
  417432:	je     0x4174a0
  417434:	cmp    BYTE PTR [rsi+0x422],0x0
  41743b:	je     0x4173f0
  41743d:	mov    rax,QWORD PTR [rsi+0x28]
  417441:	mov    r15d,0x1
  417447:	mov    rdi,QWORD PTR [rip+0x441ce]        # 0x45b61c
  41744e:	cmp    DWORD PTR [rax+0x30],0x1
  417452:	jbe    0x417472
  417454:	call   rdi
  417456:	lea    rdx,[rax+0x60]
  41745a:	mov    ecx,0x2e
  41745f:	add    r15d,0x1
  417463:	call   0x43f090
  417468:	mov    rax,QWORD PTR [rsi+0x28]
  41746c:	cmp    DWORD PTR [rax+0x30],r15d
  417470:	ja     0x417454
  417472:	cmp    r13d,0x1
  417476:	sbb    esi,esi
  417478:	and    esi,0x57
  41747b:	call   rdi
  41747d:	add    esi,0x21
  417480:	lea    rcx,[rax+0x60]
  417484:	lea    rdx,[rip+0x2ff57]        # 0x4473e2
  41748b:	mov    r9,rbp
  41748e:	mov    r8d,esi
  417491:	call   0x43f460
  417496:	jmp    0x4173f0
  41749b:	nop    DWORD PTR [rax+rax*1+0x0]
  4174a0:	mov    ecx,DWORD PTR [rbx+0x80]
  4174a6:	call   0x43ef80
  4174ab:	mov    DWORD PTR [rbx+0x80],0xffffffff
  4174b5:	jmp    0x417434
  4174ba:	nop    WORD PTR [rax+rax*1+0x0]
  4174c0:	mov    eax,DWORD PTR [rcx+0x84]
  4174c6:	test   eax,eax
  4174c8:	setne  al
  4174cb:	ret    
  4174cc:	nop    DWORD PTR [rax+0x0]
  4174d0:	push   r15
  4174d2:	push   r14
  4174d4:	push   r13
  4174d6:	push   r12
  4174d8:	push   rbp
  4174d9:	push   rdi
  4174da:	push   rsi
  4174db:	push   rbx
  4174dc:	sub    rsp,0xa8
  4174e3:	mov    eax,DWORD PTR [rsp+0x118]
  4174ea:	test   r8,r8
  4174ed:	mov    r13,rcx
  4174f0:	mov    r15,rdx
  4174f3:	mov    rbx,r8
  4174f6:	mov    esi,r9d
  4174f9:	mov    DWORD PTR [rsp+0x28],eax
  4174fd:	je     0x417b58
  417503:	mov    rcx,r15
  417506:	call   0x437c50
  41750b:	mov    rcx,QWORD PTR [r13+0x110]
  417512:	mov    r8d,eax
  417515:	mov    r9d,0x1
  41751b:	mov    rdx,r15
  41751e:	call   0x437890
  417523:	mov    QWORD PTR [rsp+0x20],rax
  417528:	jmp    0x41753a
  41752a:	nop    WORD PTR [rax+rax*1+0x0]
  417530:	cmp    rbx,QWORD PTR [rax+0x8]
  417534:	je     0x4176d5
  41753a:	mov    rax,QWORD PTR [rax]
  41753d:	test   rax,rax
  417540:	jne    0x417530
  417542:	mov    edx,0x90
  417547:	mov    ecx,0x1
  41754c:	call   0x438600
  417551:	cmp    QWORD PTR [r13+0x0],0x0
  417556:	mov    DWORD PTR [rax+0x80],0xffffffff
  417560:	mov    rcx,r15
  417563:	mov    QWORD PTR [rax+0x40],rbx
  417567:	mov    r14,rax
  41756a:	sete   BYTE PTR [rax+0x8c]
  417571:	call   0x4386d0
  417576:	cmp    BYTE PTR [rsp+0x28],0x0
  41757b:	mov    QWORD PTR [r14],rax
  41757e:	mov    edx,0x1
  417583:	je     0x4176f0
  417589:	test   sil,sil
  41758c:	mov    BYTE PTR [r14+0x8e],dl
  417593:	jne    0x417e11
  417599:	mov    r12,rax
  41759c:	lea    rax,[r13+0x130]
  4175a3:	mov    rbp,QWORD PTR [r14+0x40]
  4175a7:	mov    BYTE PTR [rsp+0x30],0x0
  4175ac:	mov    BYTE PTR [rsp+0x2f],0x0
  4175b1:	mov    QWORD PTR [rsp+0x48],rax
  4175b6:	lea    rax,[rsp+0x60]
  4175bb:	mov    BYTE PTR [rsp+0x2e],0x0
  4175c0:	mov    QWORD PTR [rsp+0xf8],r15
  4175c8:	mov    QWORD PTR [rsp+0x100],rbx
  4175d0:	mov    QWORD PTR [rsp+0x38],rax
  4175d5:	jmp    0x417675
  4175da:	nop    WORD PTR [rax+rax*1+0x0]
  4175e0:	mov    rax,QWORD PTR [rdx+0x28]
  4175e4:	test   rax,rax
  4175e7:	je     0x417b40
  4175ed:	call   rax
  4175ef:	mov    rbp,rax
  4175f2:	test   rbp,rbp
  4175f5:	je     0x4177e0
  4175fb:	cmp    BYTE PTR [r13+0x495],0x0
  417603:	je     0x417613
  417605:	mov    rax,QWORD PTR [r14+0x40]
  417609:	cmp    BYTE PTR [rax+0x14],0x0
  41760d:	jne    0x417920
  417613:	mov    rcx,rbp
  417616:	call   0x437c50
  41761b:	mov    rcx,QWORD PTR [r13+0x128]
  417622:	mov    r8d,eax
  417625:	mov    rdx,rbp
  417628:	mov    r12d,eax
  41762b:	call   0x437730
  417630:	test   rax,rax
  417633:	je     0x417970
  417639:	mov    DWORD PTR [r14+0x84],0x2
  417644:	mov    rax,QWORD PTR [r14+0x40]
  417648:	mov    rbp,QWORD PTR [rax]
  41764b:	test   rbp,rbp
  41764e:	mov    QWORD PTR [r14+0x40],rbp
  417652:	je     0x417ba8
  417658:	cmp    rbp,QWORD PTR [r13+0xc0]
  41765f:	je     0x417800
  417665:	cmp    rbp,QWORD PTR [r13+0xb8]
  41766c:	je     0x417960
  417672:	mov    r12,QWORD PTR [r14]
  417675:	cmp    BYTE PTR [r13+0x42f],0x0
  41767d:	mov    rcx,r12
  417680:	mov    rdx,rbp
  417683:	je     0x4175e0
  417689:	mov    rax,QWORD PTR [rbp+0x20]
  41768d:	test   rax,rax
  417690:	je     0x417b6e
  417696:	mov    rcx,QWORD PTR [rax]
  417699:	xor    esi,esi
  41769b:	test   rcx,rcx
  41769e:	jne    0x4176b3
  4176a0:	jmp    0x417710
  4176a2:	mov    rax,QWORD PTR [rbp+0x20]
  4176a6:	add    rsi,0x2
  4176aa:	mov    rcx,QWORD PTR [rax+rsi*8]
  4176ae:	test   rcx,rcx
  4176b1:	je     0x417710
  4176b3:	mov    rdx,r12
  4176b6:	call   0x435e60
  4176bb:	test   eax,eax
  4176bd:	jne    0x4176a2
  4176bf:	mov    rax,QWORD PTR [rbp+0x20]
  4176c3:	mov    rcx,QWORD PTR [rax+rsi*8+0x8]
  4176c8:	call   0x4386d0
  4176cd:	mov    rbp,rax
  4176d0:	jmp    0x4175fb
  4176d5:	mov    rsi,QWORD PTR [rax+0x18]
  4176d9:	mov    rax,rsi
  4176dc:	add    rsp,0xa8
  4176e3:	pop    rbx
  4176e4:	pop    rsi
  4176e5:	pop    rdi
  4176e6:	pop    rbp
  4176e7:	pop    r12
  4176e9:	pop    r13
  4176eb:	pop    r14
  4176ed:	pop    r15
  4176ef:	ret    
  4176f0:	mov    rdx,QWORD PTR [r13+0x0]
  4176f4:	test   rdx,rdx
  4176f7:	je     0x417ba1
  4176fd:	mov    rdx,QWORD PTR [rdx+0x50]
  417701:	movzx  edx,BYTE PTR [rdx+0x8e]
  417708:	jmp    0x417589
  41770d:	nop    DWORD PTR [rax]
  417710:	movzx  eax,BYTE PTR [r12]
  417715:	cmp    al,0x5c
  417717:	je     0x417c70
  41771d:	cmp    al,0x2f
  41771f:	je     0x417c70
  417725:	test   al,al
  417727:	je     0x417735
  417729:	cmp    BYTE PTR [r12+0x1],0x3a
  41772f:	je     0x417c70
  417735:	mov    edx,0x2f
  41773a:	mov    rcx,r12
  41773d:	call   0x43f050
  417742:	mov    edx,0x5c
  417747:	mov    rbx,rax
  41774a:	mov    rcx,r12
  41774d:	call   0x43f050
  417752:	cmp    rbx,rax
  417755:	seta   cl
  417758:	test   rbx,rbx
  41775b:	sete   dl
  41775e:	or     dl,cl
  417760:	je     0x41776b
  417762:	test   rax,rax
  417765:	mov    rbx,rax
  417768:	sete   dl
  41776b:	cmp    r12,rbx
  41776e:	je     0x417c70
  417774:	test   dl,dl
  417776:	jne    0x417c70
  41777c:	mov    edi,DWORD PTR [rbp+0x10]
  41777f:	mov    r15,rbx
  417782:	sub    r15,r12
  417785:	add    r15,0x1
  417789:	add    rdi,r15
  41778c:	lea    rcx,[rdi+0x1]
  417790:	call   0x4385d0
  417795:	mov    r8d,DWORD PTR [rbp+0x10]
  417799:	mov    rdx,QWORD PTR [rbp+0x8]
  41779d:	mov    rcx,rax
  4177a0:	mov    rsi,rax
  4177a3:	call   0x43f0a8
  4177a8:	mov    ecx,DWORD PTR [rbp+0x10]
  4177ab:	mov    rdx,r12
  4177ae:	mov    r8,r15
  4177b1:	lea    r12,[rbx+0x1]
  4177b5:	add    rcx,rsi
  4177b8:	call   0x43f0a8
  4177bd:	mov    BYTE PTR [rsi+rdi*1],0x0
  4177c1:	movzx  r8d,BYTE PTR [rbp+0x14]
  4177c6:	mov    rdx,rsi
  4177c9:	mov    rcx,r13
  4177cc:	call   0x416990
  4177d1:	mov    rbp,rax
  4177d4:	jmp    0x417689
  4177d9:	nop    DWORD PTR [rax+0x0]
  4177e0:	mov    DWORD PTR [r14+0x84],0x2
  4177eb:	mov    QWORD PTR [r14+0x8],0x0
  4177f3:	jmp    0x417644
  4177f8:	nop    DWORD PTR [rax+rax*1+0x0]
  417800:	mov    BYTE PTR [rsp+0x2e],0x1
  417805:	mov    rax,QWORD PTR [rsp+0x20]
  41780a:	mov    rsi,QWORD PTR [rax]
  41780d:	test   rsi,rsi
  417810:	jne    0x41782c
  417812:	jmp    0x417672
  417817:	nop    WORD PTR [rax+rax*1+0x0]
  417820:	mov    rsi,QWORD PTR [rsi]
  417823:	test   rsi,rsi
  417826:	je     0x417672
  41782c:	mov    r12,QWORD PTR [rsi+0x8]
  417830:	cmp    rbp,r12
  417833:	jne    0x417820
  417835:	mov    rcx,QWORD PTR [r14]
  417838:	mov    rbx,QWORD PTR [rsp+0x100]
  417840:	call   0x43f100
  417845:	mov    rcx,r14
  417848:	call   0x43f100
  41784d:	mov    r14,QWORD PTR [rsi+0x18]
  417851:	mov    rcx,r13
  417854:	call   0x416930
  417859:	mov    rdi,QWORD PTR [rsp+0x20]
  41785e:	cmp    BYTE PTR [rsp+0x2e],0x0
  417863:	mov    rdx,QWORD PTR [rdi]
  417866:	mov    QWORD PTR [rax+0x8],rbx
  41786a:	mov    QWORD PTR [rax],rdx
  41786d:	mov    rdx,QWORD PTR [r13+0x28]
  417871:	mov    edx,DWORD PTR [rdx+0x38]
  417874:	mov    QWORD PTR [rax+0x18],r14
  417878:	mov    DWORD PTR [rax+0x10],edx
  41787b:	mov    QWORD PTR [rdi],rax
  41787e:	je     0x4178c0
  417880:	mov    rax,QWORD PTR [r13+0xc0]
  417887:	cmp    rax,r12
  41788a:	je     0x4178c0
  41788c:	cmp    rbx,rax
  41788f:	je     0x4178c0
  417891:	mov    rcx,r13
  417894:	call   0x416930
  417899:	mov    rdi,QWORD PTR [rsp+0x20]
  41789e:	mov    rdx,QWORD PTR [rdi]
  4178a1:	mov    QWORD PTR [rax],rdx
  4178a4:	mov    rdx,QWORD PTR [r13+0xc0]
  4178ab:	mov    QWORD PTR [rax+0x8],rdx
  4178af:	mov    rdx,QWORD PTR [r13+0x28]
  4178b3:	mov    edx,DWORD PTR [rdx+0x38]
  4178b6:	mov    QWORD PTR [rax+0x18],r14
  4178ba:	mov    DWORD PTR [rax+0x10],edx
  4178bd:	mov    QWORD PTR [rdi],rax
  4178c0:	cmp    BYTE PTR [rsp+0x2f],0x0
  4178c5:	mov    rsi,r14
  4178c8:	je     0x4176d9
  4178ce:	mov    rax,QWORD PTR [r13+0xb8]
  4178d5:	cmp    rax,r12
  4178d8:	je     0x417c06
  4178de:	cmp    rbx,rax
  4178e1:	je     0x417c06
  4178e7:	mov    rcx,r13
  4178ea:	call   0x416930
  4178ef:	mov    rdi,QWORD PTR [rsp+0x20]
  4178f4:	mov    rdx,QWORD PTR [rdi]
  4178f7:	mov    QWORD PTR [rax],rdx
  4178fa:	mov    rdx,QWORD PTR [r13+0xb8]
  417901:	mov    QWORD PTR [rax+0x8],rdx
  417905:	mov    rdx,QWORD PTR [r13+0x28]
  417909:	mov    edx,DWORD PTR [rdx+0x38]
  41790c:	mov    QWORD PTR [rax+0x18],r14
  417910:	mov    DWORD PTR [rax+0x10],edx
  417913:	mov    QWORD PTR [rdi],rax
  417916:	jmp    0x4176d9
  41791b:	nop    DWORD PTR [rax+rax*1+0x0]
  417920:	mov    rcx,rbp
  417923:	call   0x438070
  417928:	test   rax,rax
  41792b:	mov    rsi,rax
  41792e:	je     0x417c7c
  417934:	mov    rcx,rax
  417937:	call   0x43f028
  41793c:	mov    rcx,rbp
  41793f:	mov    rdi,rax
  417942:	call   0x43f028
  417947:	cmp    rdi,rax
  41794a:	jae    0x417c7c
  417950:	mov    rcx,rbp
  417953:	mov    rbp,rsi
  417956:	call   0x43f100
  41795b:	jmp    0x417613
  417960:	mov    BYTE PTR [rsp+0x2f],0x1
  417965:	jmp    0x417805
  41796a:	nop    WORD PTR [rax+rax*1+0x0]
  417970:	mov    rax,QWORD PTR [r14]
  417973:	mov    QWORD PTR [r14+0x8],rbp
  417977:	cmp    BYTE PTR [rax],0x0
  41797a:	je     0x417a45
  417980:	cmp    QWORD PTR [r13+0x3a8],0x0
  417988:	je     0x417a45
  41798e:	mov    rax,QWORD PTR [r13+0x100]
  417995:	test   rax,rax
  417998:	jne    0x4179a9
  41799a:	jmp    0x4179bf
  41799c:	nop    DWORD PTR [rax+0x0]
  4179a0:	mov    rax,QWORD PTR [rax+0x20]
  4179a4:	test   rax,rax
  4179a7:	je     0x4179bf
  4179a9:	cmp    BYTE PTR [rax+0x8e],0x0
  4179b0:	jne    0x4179a0
  4179b2:	cmp    BYTE PTR [rax+0x8c],0x0
  4179b9:	je     0x417a45
  4179bf:	mov    rcx,rbp
  4179c2:	call   0x43f028
  4179c7:	mov    rsi,rax
  4179ca:	lea    rax,[rax+0x5]
  4179ce:	mov    rcx,rax
  4179d1:	mov    QWORD PTR [rsp+0x40],rax
  4179d6:	call   0x4385d0
  4179db:	mov    r8,rsi
  4179de:	mov    r15,rax
  4179e1:	mov    rdx,rbp
  4179e4:	mov    rcx,rax
  4179e7:	call   0x43f0a8
  4179ec:	mov    DWORD PTR [r15+rsi*1],0x6863672e
  4179f4:	mov    BYTE PTR [r15+rsi*1+0x4],0x0
  4179fa:	mov    rcx,r15
  4179fd:	mov    rdx,QWORD PTR [rsp+0x38]
  417a02:	call   QWORD PTR [rip+0x43e7c]        # 0x45b884
  417a08:	test   eax,eax
  417a0a:	jne    0x417a3d
  417a0c:	movzx  eax,WORD PTR [rsp+0x66]
  417a11:	and    ax,0xf000
  417a15:	cmp    ax,0x4000
  417a19:	je     0x417ccd
  417a1f:	mov    r8,r15
  417a22:	mov    rdx,r14
  417a25:	mov    rcx,r13
  417a28:	call   0x4173c0
  417a2d:	mov    esi,eax
  417a2f:	test   sil,sil
  417a32:	jne    0x417c89
  417a38:	mov    BYTE PTR [rsp+0x30],0x1
  417a3d:	mov    rcx,r15
  417a40:	call   0x43f100
  417a45:	mov    rcx,r14
  417a48:	call   0x416b40
  417a4d:	test   al,al
  417a4f:	jne    0x417b7f
  417a55:	cmp    DWORD PTR [r14+0x84],0x2
  417a5d:	jne    0x417c9a
  417a63:	mov    rcx,rbp
  417a66:	call   0x43f028
  417a6b:	mov    rcx,QWORD PTR [r13+0x148]
  417a72:	movsxd rsi,eax
  417a75:	lea    rdx,[rcx+rsi*1+0x1]
  417a7a:	cmp    QWORD PTR [r13+0x150],rdx
  417a81:	jb     0x417dac
  417a87:	mov    r8,rsi
  417a8a:	mov    rdx,rbp
  417a8d:	call   0x43f0a8
  417a92:	add    rsi,QWORD PTR [r13+0x148]
  417a99:	lea    rax,[rsi+0x1]
  417a9d:	mov    QWORD PTR [r13+0x148],rax
  417aa4:	mov    BYTE PTR [rsi],0x0
  417aa7:	mov    rsi,QWORD PTR [r13+0x140]
  417aae:	mov    rax,QWORD PTR [r13+0x148]
  417ab5:	cmp    rsi,rax
  417ab8:	je     0x417e04
  417abe:	movsxd rdx,DWORD PTR [r13+0x160]
  417ac5:	mov    ecx,edx
  417ac7:	add    rax,rdx
  417aca:	mov    rdx,QWORD PTR [r13+0x150]
  417ad1:	not    ecx
  417ad3:	movsxd rcx,ecx
  417ad6:	and    rax,rcx
  417ad9:	mov    rcx,QWORD PTR [r13+0x138]
  417ae0:	mov    rdi,rdx
  417ae3:	mov    r8,rax
  417ae6:	mov    QWORD PTR [r13+0x148],rax
  417aed:	sub    r8,rcx
  417af0:	sub    rdi,rcx
  417af3:	cmp    r8,rdi
  417af6:	jle    0x417b02
  417af8:	mov    QWORD PTR [r13+0x148],rdx
  417aff:	mov    rax,rdx
  417b02:	mov    QWORD PTR [r13+0x140],rax
  417b09:	mov    rcx,rbp
  417b0c:	call   0x43f100
  417b11:	mov    rcx,QWORD PTR [r13+0x128]
  417b18:	mov    r9d,0x1
  417b1e:	mov    r8d,r12d
  417b21:	mov    rdx,rsi
  417b24:	call   0x437890
  417b29:	mov    QWORD PTR [rax],rsi
  417b2c:	mov    rax,QWORD PTR [r14]
  417b2f:	mov    QWORD PTR [r14+0x8],rax
  417b33:	jmp    0x417644
  417b38:	nop    DWORD PTR [rax+rax*1+0x0]
  417b40:	lea    rax,[rdx+0x8]
  417b44:	mov    r8d,DWORD PTR [rdx+0x10]
  417b48:	mov    rdx,rax
  417b4b:	call   0x416d60
  417b50:	mov    rbp,rax
  417b53:	jmp    0x4175f2
  417b58:	lea    r8,[rip+0x2f88a]        # 0x4473e9
  417b5f:	mov    edx,0x4
  417b64:	call   0x412660
  417b69:	jmp    0x417503
  417b6e:	mov    rcx,rbp
  417b71:	call   0x416dd0
  417b76:	mov    rax,QWORD PTR [rbp+0x20]
  417b7a:	jmp    0x417696
  417b7f:	mov    rbx,QWORD PTR [rsp+0x100]
  417b87:	mov    rax,QWORD PTR [r13+0x100]
  417b8e:	xor    r12d,r12d
  417b91:	mov    QWORD PTR [r13+0x100],r14
  417b98:	mov    QWORD PTR [r14+0x20],rax
  417b9c:	jmp    0x417851
  417ba1:	xor    edx,edx
  417ba3:	jmp    0x417589
  417ba8:	mov    rax,QWORD PTR [r13+0x3b8]
  417baf:	mov    r15,QWORD PTR [rsp+0xf8]
  417bb7:	mov    rbx,QWORD PTR [rsp+0x100]
  417bbf:	test   rax,rax
  417bc2:	je     0x417c1e
  417bc4:	lea    r8,[r14+0x40]
  417bc8:	mov    rdx,r15
  417bcb:	mov    rcx,r13
  417bce:	call   rax
  417bd0:	test   rax,rax
  417bd3:	mov    QWORD PTR [r14+0x8],rax
  417bd7:	je     0x417c17
  417bd9:	mov    rcx,r14
  417bdc:	call   0x416b40
  417be1:	test   al,al
  417be3:	je     0x417c0e
  417be5:	mov    rax,QWORD PTR [r13+0x100]
  417bec:	mov    QWORD PTR [r13+0x100],r14
  417bf3:	mov    QWORD PTR [r14+0x20],rax
  417bf7:	mov    rax,QWORD PTR [rsp+0x20]
  417bfc:	cmp    QWORD PTR [rax],0x0
  417c00:	je     0x417e20
  417c06:	mov    rsi,r14
  417c09:	jmp    0x4176d9
  417c0e:	mov    rcx,QWORD PTR [r14+0x8]
  417c12:	call   0x43f100
  417c17:	mov    rax,QWORD PTR [r14]
  417c1a:	mov    QWORD PTR [r14+0x8],rax
  417c1e:	cmp    BYTE PTR [rsp+0x30],0x0
  417c23:	jne    0x417dc5
  417c29:	cmp    BYTE PTR [rsp+0x28],0x0
  417c2e:	je     0x417cb5
  417c34:	mov    rcx,QWORD PTR [r14]
  417c37:	xor    esi,esi
  417c39:	call   0x43f100
  417c3e:	mov    rcx,r14
  417c41:	call   0x43f100
  417c46:	mov    rax,QWORD PTR [rsp+0x20]
  417c4b:	cmp    QWORD PTR [rax],0x0
  417c4f:	jne    0x4176d9
  417c55:	mov    QWORD PTR [rax],r14
  417c58:	mov    rcx,QWORD PTR [r13+0x110]
  417c5f:	mov    rdx,rax
  417c62:	call   0x437b30
  417c67:	jmp    0x4176d9
  417c6c:	nop    DWORD PTR [rax+0x0]
  417c70:	mov    rdx,QWORD PTR [r14+0x40]
  417c74:	mov    rcx,QWORD PTR [r14]
  417c77:	jmp    0x4175e0
  417c7c:	mov    rcx,rsi
  417c7f:	call   0x43f100
  417c84:	jmp    0x417613
  417c89:	mov    rbx,QWORD PTR [rsp+0x100]
  417c91:	mov    QWORD PTR [r14+0x10],r15
  417c95:	jmp    0x417b87
  417c9a:	xor    r8d,r8d
  417c9d:	mov    rdx,r14
  417ca0:	mov    rcx,r13
  417ca3:	mov    rbx,QWORD PTR [rsp+0x100]
  417cab:	call   0x416c60
  417cb0:	jmp    0x417b87
  417cb5:	mov    r8d,DWORD PTR [rsp+0x110]
  417cbd:	mov    rdx,r14
  417cc0:	mov    rcx,r13
  417cc3:	call   0x416c60
  417cc8:	jmp    0x417b87
  417ccd:	mov    rcx,r15
  417cd0:	call   0x439d30
  417cd5:	test   rax,rax
  417cd8:	mov    QWORD PTR [rsp+0x30],rax
  417cdd:	je     0x417a38
  417ce3:	mov    rax,QWORD PTR [rsp+0x40]
  417ce8:	mov    BYTE PTR [r15+rsi*1+0x4],0x2f
  417cee:	mov    QWORD PTR [rsp+0x50],rax
  417cf3:	mov    rcx,QWORD PTR [rsp+0x30]
  417cf8:	call   0x439f10
  417cfd:	test   rax,rax
  417d00:	je     0x417da8
  417d06:	lea    rbx,[rax+0x8]
  417d0a:	lea    rdi,[rip+0x2f6f4]        # 0x447405
  417d11:	mov    rcx,rbx
  417d14:	mov    rsi,rbx
  417d17:	call   0x43f028
  417d1c:	mov    ecx,0x2
  417d21:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417d23:	je     0x417cf3
  417d25:	lea    rdi,[rip+0x2f6db]        # 0x447407
  417d2c:	mov    rsi,rbx
  417d2f:	mov    ecx,0x3
  417d34:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  417d36:	je     0x417cf3
  417d38:	lea    r8,[rax+0x1]
  417d3c:	mov    rax,QWORD PTR [rsp+0x40]
  417d41:	add    rax,r8
  417d44:	cmp    rax,QWORD PTR [rsp+0x50]
  417d49:	ja     0x417d7f
  417d4b:	mov    rax,QWORD PTR [rsp+0x40]
  417d50:	mov    rdx,rbx
  417d53:	lea    rcx,[r15+rax*1]
  417d57:	call   0x43f0a8
  417d5c:	mov    r8,r15
  417d5f:	mov    rdx,r14
  417d62:	mov    rcx,r13
  417d65:	call   0x4173c0
  417d6a:	test   al,al
  417d6c:	je     0x417cf3
  417d6e:	mov    esi,eax
  417d70:	mov    rcx,QWORD PTR [rsp+0x30]
  417d75:	call   0x43a130
  417d7a:	jmp    0x417a2f
  417d7f:	mov    rax,QWORD PTR [rsp+0x50]
  417d84:	mov    rcx,r15
  417d87:	mov    QWORD PTR [rsp+0x58],r8
  417d8c:	lea    rax,[rax+r8*1+0x40]
  417d91:	mov    rdx,rax
  417d94:	mov    QWORD PTR [rsp+0x50],rax
  417d99:	call   0x438650
  417d9e:	mov    r8,QWORD PTR [rsp+0x58]
  417da3:	mov    r15,rax
  417da6:	jmp    0x417d4b
  417da8:	xor    esi,esi
  417daa:	jmp    0x417d70
  417dac:	mov    rcx,QWORD PTR [rsp+0x48]
  417db1:	lea    edx,[rax+0x1]
  417db4:	call   0x438250
  417db9:	mov    rcx,QWORD PTR [r13+0x148]
  417dc0:	jmp    0x417a87
  417dc5:	lea    r8,[rip+0x2f644]        # 0x447410
  417dcc:	mov    edx,0x3
  417dd1:	mov    rcx,r13
  417dd4:	call   0x412660
  417dd9:	mov    rcx,r13
  417ddc:	call   0x411930
  417de1:	cmp    BYTE PTR [rax+0x54],0x0
  417de5:	jne    0x417c29
  417deb:	lea    r8,[rip+0x2f656]        # 0x447448
  417df2:	mov    edx,0x3
  417df7:	mov    rcx,r13
  417dfa:	call   0x412660
  417dff:	jmp    0x417c29
  417e04:	or     BYTE PTR [r13+0x180],0x2
  417e0c:	jmp    0x417abe
  417e11:	mov    BYTE PTR [rsp+0x2f],0x0
  417e16:	mov    BYTE PTR [rsp+0x2e],0x0
  417e1b:	jmp    0x417b87
  417e20:	mov    rax,QWORD PTR [rsp+0x20]
  417e25:	mov    rsi,r14
  417e28:	mov    QWORD PTR [rax],r14
  417e2b:	mov    rcx,QWORD PTR [r13+0x110]
  417e32:	mov    rdx,rax
  417e35:	call   0x437b30
  417e3a:	jmp    0x4176d9
  417e3f:	nop
  417e40:	push   r15
  417e42:	push   r14
  417e44:	push   r13
  417e46:	push   r12
  417e48:	push   rbp
  417e49:	push   rdi
  417e4a:	push   rsi
  417e4b:	push   rbx
  417e4c:	sub    rsp,0x78
  417e50:	cmp    BYTE PTR [rdx+0x8a],0x0
  417e57:	mov    rsi,rcx
  417e5a:	mov    rbx,rdx
  417e5d:	mov    r12d,r8d
  417e60:	jne    0x417eb3
  417e62:	test   r8b,r8b
  417e65:	jne    0x417ed0
  417e67:	mov    rax,QWORD PTR [rbx+0x38]
  417e6b:	test   rax,rax
  417e6e:	je     0x417e7b
  417e70:	movzx  eax,BYTE PTR [rax+0x18]
  417e74:	and    eax,0x3f
  417e77:	cmp    al,0x1
  417e79:	je     0x417eb3
  417e7b:	mov    rdx,QWORD PTR [rbx+0x10]
  417e7f:	test   rdx,rdx
  417e82:	je     0x417ef0
  417e84:	mov    r9,QWORD PTR [rbx+0x8]
  417e88:	mov    r8d,DWORD PTR [rbx+0x80]
  417e8f:	mov    rcx,rsi
  417e92:	call   QWORD PTR [rsi+0x3b0]
  417e98:	mov    rcx,QWORD PTR [rbx+0x10]
  417e9c:	mov    DWORD PTR [rbx+0x80],0xffffffff
  417ea6:	call   0x43f100
  417eab:	mov    QWORD PTR [rbx+0x10],0x0
  417eb3:	xor    ebp,ebp
  417eb5:	mov    eax,ebp
  417eb7:	add    rsp,0x78
  417ebb:	pop    rbx
  417ebc:	pop    rsi
  417ebd:	pop    rdi
  417ebe:	pop    rbp
  417ebf:	pop    r12
  417ec1:	pop    r13
  417ec3:	pop    r14
  417ec5:	pop    r15
  417ec7:	ret    
  417ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  417ed0:	cmp    WORD PTR [rdx+0x88],0x0
  417ed8:	mov    BYTE PTR [rcx+0x189],0x1
  417edf:	mov    BYTE PTR [rdx+0x8a],0x1
  417ee6:	je     0x417e67
  417eec:	jmp    0x417eb3
  417eee:	xchg   ax,ax
  417ef0:	mov    rdx,rbx
  417ef3:	mov    rcx,rsi
  417ef6:	mov    DWORD PTR [rsp+0x3c],r8d
  417efb:	call   0x417060
  417f00:	test   al,al
  417f02:	mov    ebp,eax
  417f04:	mov    r8d,DWORD PTR [rsp+0x3c]
  417f09:	je     0x417eb3
  417f0b:	mov    rax,QWORD PTR [rip+0x4141e]        # 0x459330
  417f12:	test   rax,rax
  417f15:	je     0x417fc1
  417f1b:	test   r8b,r8b
  417f1e:	jne    0x417f7d
  417f20:	cmp    BYTE PTR [rax+0x8],0x0
  417f24:	je     0x417fc1
  417f2a:	mov    rdx,QWORD PTR [rbx+0x60]
  417f2e:	lea    rdi,[rip+0xfffffffffffff0ab]        # 0x416fe0
  417f35:	lea    rcx,[rsp+0x40]
  417f3a:	mov    r9d,0x20
  417f40:	mov    BYTE PTR [rsp+0x58],0x0
  417f45:	mov    QWORD PTR [rsp+0x60],rbx
  417f4a:	mov    QWORD PTR [rsp+0x20],rdi
  417f4f:	mov    r8,QWORD PTR [rax]
  417f52:	mov    QWORD PTR [rsp+0x40],rdx
  417f57:	lea    rdx,[rax+0x10]
  417f5b:	mov    BYTE PTR [rsp+0x59],0x0
  417f60:	call   0x43f168
  417f65:	test   rax,rax
  417f68:	je     0x417fc1
  417f6a:	mov    BYTE PTR [rsi+0x189],0x1
  417f71:	mov    BYTE PTR [rbx+0x8a],0x1
  417f78:	jmp    0x417eb3
  417f7d:	mov    rdx,QWORD PTR [rbx+0x60]
  417f81:	lea    rdi,[rip+0xfffffffffffff058]        # 0x416fe0
  417f88:	lea    rcx,[rsp+0x40]
  417f8d:	mov    r9d,0x20
  417f93:	mov    BYTE PTR [rsp+0x58],0x0
  417f98:	mov    QWORD PTR [rsp+0x60],rbx
  417f9d:	mov    QWORD PTR [rsp+0x20],rdi
  417fa2:	mov    r8,QWORD PTR [rax]
  417fa5:	mov    QWORD PTR [rsp+0x40],rdx
  417faa:	lea    rdx,[rax+0x10]
  417fae:	mov    BYTE PTR [rsp+0x59],0x1
  417fb3:	call   0x43f168
  417fb8:	test   rax,rax
  417fbb:	jne    0x417eb3
  417fc1:	cmp    BYTE PTR [rsi+0x189],0x0
  417fc8:	je     0x418090
  417fce:	mov    rdi,QWORD PTR [rsi+0x100]
  417fd5:	test   rdi,rdi
  417fd8:	jne    0x417fed
  417fda:	jmp    0x418090
  417fdf:	nop
  417fe0:	mov    rdi,QWORD PTR [rdi+0x20]
  417fe4:	test   rdi,rdi
  417fe7:	je     0x418090
  417fed:	cmp    rbx,rdi
  417ff0:	je     0x417fe0
  417ff2:	test   r12b,r12b
  417ff5:	jne    0x418000
  417ff7:	cmp    BYTE PTR [rdi+0x8a],0x0
  417ffe:	je     0x417fe0
  418000:	mov    eax,DWORD PTR [rdi+0x84]
  418006:	test   eax,eax
  418008:	jne    0x417fe0
  41800a:	mov    rax,QWORD PTR [rbx+0x70]
  41800e:	cmp    QWORD PTR [rdi+0x70],rax
  418012:	jne    0x417fe0
  418014:	mov    rax,QWORD PTR [rbx+0x60]
  418018:	cmp    QWORD PTR [rdi+0x60],rax
  41801c:	jne    0x417fe0
  41801e:	cmp    QWORD PTR [rdi+0x28],0x0
  418023:	mov    r13,rdi
  418026:	je     0x418035
  418028:	cmp    BYTE PTR [rdi+0x8d],0x0
  41802f:	je     0x41819e
  418035:	mov    rdx,r13
  418038:	mov    rcx,rsi
  41803b:	call   0x417060
  418040:	test   al,al
  418042:	je     0x418052
  418044:	mov    r8,QWORD PTR [r13+0x60]
  418048:	cmp    r8,QWORD PTR [rbx+0x60]
  41804c:	je     0x4181e9
  418052:	cmp    QWORD PTR [rdi+0x28],0x0
  418057:	je     0x417fe0
  418059:	cmp    BYTE PTR [rdi+0x8d],0x0
  418060:	jne    0x417fe0
  418066:	mov    rcx,QWORD PTR [r13+0x30]
  41806a:	mov    QWORD PTR [r13+0x8],0x0
  418072:	call   0x43f100
  418077:	mov    rcx,QWORD PTR [r13+0x0]
  41807b:	call   0x43f100
  418080:	mov    rcx,r13
  418083:	call   0x43f100
  418088:	jmp    0x417fe0
  41808d:	nop    DWORD PTR [rax]
  418090:	mov    rax,QWORD PTR [rsi]
  418093:	test   rax,rax
  418096:	je     0x418192
  41809c:	mov    rdx,QWORD PTR [rbx+0x40]
  4180a0:	test   rdx,rdx
  4180a3:	je     0x418192
  4180a9:	movzx  r12d,BYTE PTR [rax+0x6d]
  4180ae:	movzx  eax,BYTE PTR [rdx+0x14]
  4180b2:	cmp    r12b,al
  4180b5:	jbe    0x418180
  4180bb:	movzx  edi,r12b
  4180bf:	xor    edx,edx
  4180c1:	test   edi,edi
  4180c3:	setne  dl
  4180c6:	cmp    DWORD PTR [rsi+0x468],edx
  4180cc:	movzx  edx,WORD PTR [rbx+0x88]
  4180d3:	jle    0x418103
  4180d5:	test   dx,dx
  4180d8:	jne    0x418103
  4180da:	cmp    BYTE PTR [rbx+0x8c],0x0
  4180e1:	je     0x4180ec
  4180e3:	cmp    BYTE PTR [rsi+0x46e],0x0
  4180ea:	jne    0x418103
  4180ec:	mov    rdx,QWORD PTR [rbx+0x8]
  4180f0:	mov    rcx,QWORD PTR [rsi+0x2a8]
  4180f7:	call   0x41d0e0
  4180fc:	movzx  edx,WORD PTR [rbx+0x88]
  418103:	add    edx,0x1
  418106:	mov    BYTE PTR [rbx+0x8d],0x0
  41810d:	xor    r9d,r9d
  418110:	mov    WORD PTR [rbx+0x88],dx
  418117:	cmp    BYTE PTR [rsi+0x438],0x0
  41811e:	je     0x418130
  418120:	movzx  r9d,BYTE PTR [rsi+0x494]
  418128:	xor    r9d,0x1
  41812c:	movzx  r9d,r9b
  418130:	mov    rdx,QWORD PTR [rbx+0x28]
  418134:	mov    r8,QWORD PTR [rbx+0x60]
  418138:	mov    rcx,rsi
  41813b:	call   0x4119b0
  418140:	mov    BYTE PTR [rax+0x6d],r12b
  418144:	mov    rdx,QWORD PTR [rbx+0x30]
  418148:	mov    r9d,0x1
  41814e:	mov    r8,QWORD PTR [rbx+0x8]
  418152:	mov    QWORD PTR [rax+0x50],rbx
  418156:	mov    rcx,rsi
  418159:	mov    QWORD PTR [rax+0x28],rdx
  41815d:	mov    BYTE PTR [rsi+0x1a0],0x1
  418164:	xor    edx,edx
  418166:	mov    QWORD PTR [rsi+0x190],0x0
  418171:	mov    DWORD PTR [rsp+0x20],edi
  418175:	call   0x4111d0
  41817a:	jmp    0x417eb5
  41817f:	nop
  418180:	movzx  edi,al
  418183:	xor    edx,edx
  418185:	mov    r12d,eax
  418188:	test   edi,edi
  41818a:	setne  dl
  41818d:	jmp    0x4180c6
  418192:	xor    edi,edi
  418194:	xor    r12d,r12d
  418197:	xor    edx,edx
  418199:	jmp    0x4180c6
  41819e:	mov    edx,0x90
  4181a3:	mov    ecx,0x1
  4181a8:	mov    r14,QWORD PTR [rdi]
  4181ab:	mov    r15,QWORD PTR [rdi+0x40]
  4181af:	call   0x438600
  4181b4:	cmp    QWORD PTR [rsi],0x0
  4181b8:	mov    r13,rax
  4181bb:	mov    DWORD PTR [rax+0x80],0xffffffff
  4181c5:	mov    QWORD PTR [rax+0x40],r15
  4181c9:	mov    rcx,r14
  4181cc:	sete   BYTE PTR [rax+0x8c]
  4181d3:	call   0x4386d0
  4181d8:	mov    QWORD PTR [r13+0x0],rax
  4181dc:	mov    rax,QWORD PTR [rdi+0x8]
  4181e0:	mov    QWORD PTR [r13+0x8],rax
  4181e4:	jmp    0x418035
  4181e9:	mov    rdx,QWORD PTR [rbx+0x28]
  4181ed:	mov    rcx,QWORD PTR [r13+0x28]
  4181f1:	call   0x43f0b0
  4181f6:	test   eax,eax
  4181f8:	jne    0x418052
  4181fe:	cmp    QWORD PTR [rdi+0x28],0x0
  418203:	je     0x417eb3
  418209:	cmp    BYTE PTR [rdi+0x8d],0x0
  418210:	jne    0x417eb3
  418216:	mov    rcx,QWORD PTR [r13+0x30]
  41821a:	mov    QWORD PTR [r13+0x8],0x0
  418222:	call   0x43f100
  418227:	mov    rcx,QWORD PTR [r13+0x0]
  41822b:	call   0x43f100
  418230:	mov    rcx,r13
  418233:	call   0x43f100
  418238:	jmp    0x417eb3
  41823d:	nop    DWORD PTR [rax]
  418240:	mov    BYTE PTR [rcx+0x189],0x1
  418247:	mov    BYTE PTR [rdx+0x8a],0x1
  41824e:	ret    
  41824f:	nop
  418250:	push   r12
  418252:	push   rbp
  418253:	push   rdi
  418254:	push   rsi
  418255:	push   rbx
  418256:	sub    rsp,0x30
  41825a:	mov    r12d,r8d
  41825d:	mov    rsi,rcx
  418260:	mov    rbp,rdx
  418263:	mov    edi,r9d
  418266:	call   0x417260
  41826b:	test   rax,rax
  41826e:	mov    r8,rax
  418271:	je     0x4182d2
  418273:	cmp    edi,0x4
  418276:	mov    DWORD PTR [rsp+0x20],r12d
  41827b:	mov    rcx,rsi
  41827e:	sete   bl
  418281:	xor    r9d,r9d
  418284:	movzx  edx,bl
  418287:	mov    DWORD PTR [rsp+0x28],edx
  41828b:	mov    rdx,rbp
  41828e:	call   0x4174d0
  418293:	test   rax,rax
  418296:	sete   dl
  418299:	and    bl,dl
  41829b:	jne    0x4182d2
  41829d:	cmp    QWORD PTR [rax+0x10],0x0
  4182a2:	je     0x4182f3
  4182a4:	xor    r8d,r8d
  4182a7:	cmp    edi,0x2
  4182aa:	mov    rdx,rax
  4182ad:	sete   r8b
  4182b1:	mov    rcx,rsi
  4182b4:	call   0x417e40
  4182b9:	test   al,al
  4182bb:	jne    0x4182e1
  4182bd:	mov    rax,QWORD PTR [rsi+0x28]
  4182c1:	add    DWORD PTR [rax+0x38],0x1
  4182c5:	mov    eax,ebx
  4182c7:	add    rsp,0x30
  4182cb:	pop    rbx
  4182cc:	pop    rsi
  4182cd:	pop    rdi
  4182ce:	pop    rbp
  4182cf:	pop    r12
  4182d1:	ret    
  4182d2:	xor    ebx,ebx
  4182d4:	mov    eax,ebx
  4182d6:	add    rsp,0x30
  4182da:	pop    rbx
  4182db:	pop    rsi
  4182dc:	pop    rdi
  4182dd:	pop    rbp
  4182de:	pop    r12
  4182e0:	ret    
  4182e1:	mov    ebx,0x1
  4182e6:	mov    eax,ebx
  4182e8:	add    rsp,0x30
  4182ec:	pop    rbx
  4182ed:	pop    rsi
  4182ee:	pop    rdi
  4182ef:	pop    rbp
  4182f0:	pop    r12
  4182f2:	ret    
  4182f3:	mov    edx,DWORD PTR [rax+0x84]
  4182f9:	test   edx,edx
  4182fb:	jne    0x4182a4
  4182fd:	lea    edx,[rdi-0x3]
  418300:	cmp    edx,0x1
  418303:	jbe    0x4182a4
  418305:	mov    rdx,QWORD PTR [rsi+0x28]
  418309:	sub    DWORD PTR [rdx+0x38],0x1
  41830d:	jmp    0x4182a4
  41830f:	nop
  418310:	push   rsi
  418311:	push   rbx
  418312:	sub    rsp,0x28
  418316:	mov    rsi,rcx
  418319:	mov    rcx,rdx
  41831c:	mov    rbx,rdx
  41831f:	call   0x437c50
  418324:	mov    rcx,QWORD PTR [rsi+0x110]
  41832b:	mov    r8d,eax
  41832e:	mov    rdx,rbx
  418331:	call   0x437730
  418336:	test   rax,rax
  418339:	je     0x41835d
  41833b:	nop    DWORD PTR [rax+rax*1+0x0]
  418340:	cmp    QWORD PTR [rax+0x8],0x0
  418345:	je     0x418355
  418347:	mov    rdx,QWORD PTR [rax+0x18]
  41834b:	mov    edx,DWORD PTR [rdx+0x84]
  418351:	test   edx,edx
  418353:	je     0x418364
  418355:	mov    rax,QWORD PTR [rax]
  418358:	test   rax,rax
  41835b:	jne    0x418340
  41835d:	add    rsp,0x28
  418361:	pop    rbx
  418362:	pop    rsi
  418363:	ret    
  418364:	mov    eax,0x1
  418369:	add    rsp,0x28
  41836d:	pop    rbx
  41836e:	pop    rsi
  41836f:	ret    
  418370:	push   rdi
  418371:	push   rsi
  418372:	push   rbx
  418373:	sub    rsp,0x20
  418377:	mov    rdi,rcx
  41837a:	mov    rcx,rdx
  41837d:	mov    rsi,rdx
  418380:	mov    ebx,r8d
  418383:	call   0x437c50
  418388:	mov    rcx,QWORD PTR [rdi+0x110]
  41838f:	mov    r8d,eax
  418392:	mov    rdx,rsi
  418395:	call   0x437730
  41839a:	test   rax,rax
  41839d:	je     0x4183c2
  41839f:	nop
  4183a0:	cmp    QWORD PTR [rax+0x8],0x0
  4183a5:	je     0x4183ba
  4183a7:	mov    rdx,QWORD PTR [rax+0x18]
  4183ab:	mov    edx,DWORD PTR [rdx+0x84]
  4183b1:	test   edx,edx
  4183b3:	jne    0x4183ba
  4183b5:	cmp    DWORD PTR [rax+0x10],ebx
  4183b8:	jbe    0x4183d0
  4183ba:	mov    rax,QWORD PTR [rax]
  4183bd:	test   rax,rax
  4183c0:	jne    0x4183a0
  4183c2:	add    rsp,0x20
  4183c6:	pop    rbx
  4183c7:	pop    rsi
  4183c8:	pop    rdi
  4183c9:	ret    
  4183ca:	nop    WORD PTR [rax+rax*1+0x0]
  4183d0:	mov    eax,0x1
  4183d5:	add    rsp,0x20
  4183d9:	pop    rbx
  4183da:	pop    rsi
  4183db:	pop    rdi
  4183dc:	ret    
  4183dd:	nop    DWORD PTR [rax]
  4183e0:	push   rdi
  4183e1:	push   rsi
  4183e2:	push   rbx
  4183e3:	sub    rsp,0x30
  4183e7:	mov    rsi,QWORD PTR [rip+0x39242]        # 0x451630
  4183ee:	mov    rdi,QWORD PTR [rip+0x3938b]        # 0x451780
  4183f5:	lea    r8,[rip+0xffffffffffffe504]        # 0x416900
  4183fc:	lea    rdx,[rip+0xffffffffffffe42d]        # 0x416830
  418403:	mov    rbx,rcx
  418406:	xor    r9d,r9d
  418409:	mov    ecx,0x7f
  41840e:	mov    QWORD PTR [rsp+0x28],rsi
  418413:	mov    QWORD PTR [rsp+0x20],rdi
  418418:	call   0x4374b0
  41841d:	lea    r8,[rip+0xffffffffffffe4dc]        # 0x416900
  418424:	lea    rdx,[rip+0xffffffffffffe405]        # 0x416830
  41842b:	xor    r9d,r9d
  41842e:	mov    QWORD PTR [rbx+0x110],rax
  418435:	mov    QWORD PTR [rsp+0x28],rsi
  41843a:	mov    ecx,0x7f
  41843f:	mov    QWORD PTR [rsp+0x20],rdi
  418444:	call   0x4374b0
  418449:	mov    ecx,0xff0
  41844e:	mov    QWORD PTR [rbx+0x118],rax
  418455:	call   0x4385d0
  41845a:	mov    rdx,QWORD PTR [rbx+0x120]
  418461:	lea    r8,[rip+0xffffffffffffe478]        # 0x4168e0
  418468:	mov    DWORD PTR [rax],0x0
  41846e:	xor    r9d,r9d
  418471:	mov    QWORD PTR [rbx+0x120],rax
  418478:	mov    ecx,0x7f
  41847d:	mov    QWORD PTR [rax+0x8],rdx
  418481:	lea    rdx,[rip+0x1f7c8]        # 0x437c50
  418488:	mov    QWORD PTR [rsp+0x28],rsi
  41848d:	mov    QWORD PTR [rsp+0x20],rdi
  418492:	call   0x4374b0
  418497:	lea    rcx,[rbx+0x130]
  41849e:	lea    r9,[rip+0x2012b]        # 0x4385d0
  4184a5:	mov    QWORD PTR [rbx+0x128],rax
  4184ac:	mov    QWORD PTR [rsp+0x20],rsi
  4184b1:	xor    r8d,r8d
  4184b4:	xor    edx,edx
  4184b6:	call   0x438120
  4184bb:	nop
  4184bc:	add    rsp,0x30
  4184c0:	pop    rbx
  4184c1:	pop    rsi
  4184c2:	pop    rdi
  4184c3:	ret    
  4184c4:	xchg   ax,ax
  4184c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4184d0:	push   rsi
  4184d1:	push   rbx
  4184d2:	sub    rsp,0x28
  4184d6:	mov    rsi,rcx
  4184d9:	mov    rcx,QWORD PTR [rcx+0x110]
  4184e0:	call   0x437570
  4184e5:	mov    rcx,QWORD PTR [rsi+0x118]
  4184ec:	call   0x437570
  4184f1:	mov    rcx,QWORD PTR [rsi+0x128]
  4184f8:	call   0x437570
  4184fd:	lea    rcx,[rsi+0x130]
  418504:	xor    edx,edx
  418506:	call   0x438480
  41850b:	mov    rcx,QWORD PTR [rsi+0x120]
  418512:	test   rcx,rcx
  418515:	je     0x418531
  418517:	nop    WORD PTR [rax+rax*1+0x0]
  418520:	mov    rbx,QWORD PTR [rcx+0x8]
  418524:	call   0x43f100
  418529:	test   rbx,rbx
  41852c:	mov    rcx,rbx
  41852f:	jne    0x418520
  418531:	mov    rbx,QWORD PTR [rsi+0x100]
  418538:	test   rbx,rbx
  41853b:	je     0x418565
  41853d:	nop    DWORD PTR [rax]
  418540:	mov    rcx,QWORD PTR [rbx+0x30]
  418544:	mov    rsi,QWORD PTR [rbx+0x20]
  418548:	call   0x43f100
  41854d:	mov    rcx,QWORD PTR [rbx]
  418550:	call   0x43f100
  418555:	mov    rcx,rbx
  418558:	mov    rbx,rsi
  41855b:	call   0x43f100
  418560:	test   rsi,rsi
  418563:	jne    0x418540
  418565:	add    rsp,0x28
  418569:	pop    rbx
  41856a:	pop    rsi
  41856b:	ret    
  41856c:	nop    DWORD PTR [rax+0x0]
  418570:	push   rbx
  418571:	sub    rsp,0x20
  418575:	mov    rbx,rcx
  418578:	call   0x4184d0
  41857d:	mov    rcx,rbx
  418580:	mov    QWORD PTR [rbx+0x120],0x0
  41858b:	mov    QWORD PTR [rbx+0x100],0x0
  418596:	add    rsp,0x20
  41859a:	pop    rbx
  41859b:	jmp    0x4183e0
  4185a0:	sub    rsp,0x38
  4185a4:	mov    rax,QWORD PTR [rcx]
  4185a7:	mov    r9d,0x1
  4185ad:	mov    rax,QWORD PTR [rax+0x50]
  4185b1:	mov    r8,QWORD PTR [rax+0x40]
  4185b5:	mov    DWORD PTR [rsp+0x28],0x0
  4185bd:	mov    DWORD PTR [rsp+0x20],0x0
  4185c5:	call   0x4174d0
  4185ca:	nop
  4185cb:	add    rsp,0x38
  4185cf:	ret    
  4185d0:	sub    rsp,0x38
  4185d4:	mov    rax,rcx
  4185d7:	mov    rcx,QWORD PTR [rcx+0x28]
  4185db:	mov    r9d,DWORD PTR [rcx+0xc]
  4185df:	mov    rcx,QWORD PTR [rcx]
  4185e2:	sub    r9d,0x1
  4185e6:	test   edx,edx
  4185e8:	lea    r9,[r9+r9*4]
  4185ec:	lea    r10,[rcx+r9*8]
  4185f0:	je     0x418640
  4185f2:	cmp    r8d,0x1
  4185f6:	sbb    edx,edx
  4185f8:	add    edx,0x2
  4185fb:	cmp    r8d,0x1
  4185ff:	sbb    ecx,ecx
  418601:	add    ecx,0x2
  418604:	mov    r8,QWORD PTR [rax]
  418607:	mov    BYTE PTR [r8+0x6d],cl
  41860b:	mov    rcx,QWORD PTR [rax+0x28]
  41860f:	mov    r8,QWORD PTR [r10+0x8]
  418613:	mov    r9d,DWORD PTR [rcx+0x3c]
  418617:	movzx  ecx,BYTE PTR [r10+0x1c]
  41861c:	sub    r9d,DWORD PTR [r10]
  41861f:	shr    r9d,cl
  418622:	add    r9d,DWORD PTR [r10+0x10]
  418626:	mov    rcx,rax
  418629:	mov    DWORD PTR [rsp+0x20],edx
  41862d:	mov    edx,0x2
  418632:	call   0x4111d0
  418637:	nop
  418638:	add    rsp,0x38
  41863c:	ret    
  41863d:	nop    DWORD PTR [rax]
  418640:	xor    edx,edx
  418642:	xor    ecx,ecx
  418644:	jmp    0x418604
  418646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418650:	sub    rsp,0x38
  418654:	mov    r9d,0x1
  41865a:	mov    DWORD PTR [rsp+0x20],0x0
  418662:	call   0x4111d0
  418667:	nop
  418668:	add    rsp,0x38
  41866c:	ret    
  41866d:	nop    DWORD PTR [rax]
  418670:	push   rsi
  418671:	push   rbx
  418672:	sub    rsp,0x38
  418676:	mov    rbx,rcx
  418679:	mov    rcx,QWORD PTR [rcx+0x110]
  418680:	mov    QWORD PTR [rsp+0x20],0x0
  418689:	call   0x437320
  41868e:	mov    rcx,QWORD PTR [rbx+0x110]
  418695:	lea    r8,[rsp+0x20]
  41869a:	lea    rdx,[rip+0xffffffffffffe1af]        # 0x416850
  4186a1:	mov    QWORD PTR [rsp+0x28],rax
  4186a6:	call   0x437bd0
  4186ab:	mov    rcx,QWORD PTR [rsp+0x20]
  4186b0:	test   rcx,rcx
  4186b3:	je     0x41873a
  4186b9:	mov    rdx,QWORD PTR [rsp+0x28]
  4186be:	lea    r9,[rip+0xffffffffffffe46b]        # 0x416b30
  4186c5:	mov    r8d,0x8
  4186cb:	xor    ebx,ebx
  4186cd:	call   0x43f088
  4186d2:	mov    rsi,QWORD PTR [rip+0x42f43]        # 0x45b61c
  4186d9:	call   rsi
  4186db:	lea    rcx,[rip+0x2ed8e]        # 0x447470
  4186e2:	lea    r9,[rax+0x60]
  4186e6:	mov    r8d,0x2b
  4186ec:	mov    edx,0x1
  4186f1:	call   0x43f0e0
  4186f6:	cmp    QWORD PTR [rsp+0x28],0x0
  4186fc:	je     0x41872f
  4186fe:	xchg   ax,ax
  418700:	call   rsi
  418702:	lea    rdx,[rax+0x60]
  418706:	mov    rax,QWORD PTR [rsp+0x20]
  41870b:	mov    rcx,QWORD PTR [rax+rbx*8]
  41870f:	add    rbx,0x1
  418713:	call   0x43f110
  418718:	call   rsi
  41871a:	lea    rdx,[rax+0x60]
  41871e:	mov    ecx,0xa
  418723:	call   0x43f090
  418728:	cmp    QWORD PTR [rsp+0x28],rbx
  41872d:	ja     0x418700
  41872f:	mov    rcx,QWORD PTR [rsp+0x20]
  418734:	call   0x43f100
  418739:	nop
  41873a:	add    rsp,0x38
  41873e:	pop    rbx
  41873f:	pop    rsi
  418740:	ret    
  418741:	nop    DWORD PTR [rax+rax*1+0x0]
  418746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418750:	push   rdi
  418751:	push   rsi
  418752:	push   rbx
  418753:	sub    rsp,0x30
  418757:	xor    r9d,r9d
  41875a:	mov    edi,r8d
  41875d:	mov    rsi,rcx
  418760:	mov    rbx,rdx
  418763:	call   0x417260
  418768:	test   rax,rax
  41876b:	mov    r8,rax
  41876e:	je     0x4187d0
  418770:	xor    r9d,r9d
  418773:	mov    rdx,rbx
  418776:	mov    DWORD PTR [rsp+0x28],0x0
  41877e:	mov    DWORD PTR [rsp+0x20],edi
  418782:	mov    rcx,rsi
  418785:	call   0x4174d0
  41878a:	mov    rbx,rax
  41878d:	mov    eax,DWORD PTR [rax+0x84]
  418793:	test   eax,eax
  418795:	jne    0x4187d0
  418797:	mov    ecx,DWORD PTR [rbx+0x80]
  41879d:	cmp    ecx,0xffffffff
  4187a0:	je     0x4187b1
  4187a2:	call   0x43ef80
  4187a7:	mov    DWORD PTR [rbx+0x80],0xffffffff
  4187b1:	mov    rax,QWORD PTR [rsi]
  4187b4:	mov    rax,QWORD PTR [rax+0x50]
  4187b8:	mov    rax,QWORD PTR [rax+0x70]
  4187bc:	cmp    QWORD PTR [rbx+0x70],rax
  4187c0:	setg   al
  4187c3:	movzx  eax,al
  4187c6:	add    rsp,0x30
  4187ca:	pop    rbx
  4187cb:	pop    rsi
  4187cc:	pop    rdi
  4187cd:	ret    
  4187ce:	xchg   ax,ax
  4187d0:	mov    eax,0xffffffff
  4187d5:	jmp    0x4187c6
  4187d7:	nop    WORD PTR [rax+rax*1+0x0]
  4187e0:	mov    r9d,0x3
  4187e6:	xor    r8d,r8d
  4187e9:	jmp    0x418250
  4187ee:	xchg   ax,ax
  4187f0:	mov    r9d,0x4
  4187f6:	mov    r8d,0x1
  4187fc:	jmp    0x418250
  418801:	nop    DWORD PTR [rax+rax*1+0x0]
  418806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418810:	cmp    BYTE PTR [rcx+0x1a0],0x0
  418817:	je     0x418820
  418819:	cmp    QWORD PTR [rdx+0x38],0x0
  41881e:	je     0x418840
  418820:	test   r8,r8
  418823:	mov    BYTE PTR [rcx+0x1a0],0x0
  41882a:	je     0x418870
  41882c:	cmp    QWORD PTR [rdx+0x30],r8
  418830:	je     0x418850
  418832:	mov    rcx,r8
  418835:	jmp    0x43f100
  41883a:	nop    WORD PTR [rax+rax*1+0x0]
  418840:	mov    rax,QWORD PTR [rcx+0x190]
  418847:	mov    QWORD PTR [rdx+0x38],rax
  41884b:	jmp    0x418820
  41884d:	nop    DWORD PTR [rax]
  418850:	mov    rcx,r8
  418853:	mov    QWORD PTR [rdx+0x30],0x0
  41885b:	mov    QWORD PTR [rdx+0x28],0x0
  418863:	mov    BYTE PTR [rdx+0x8d],0x0
  41886a:	jmp    0x43f100
  41886f:	nop
  418870:	repz ret 
  418872:	nop    DWORD PTR [rax+0x0]
  418876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418880:	mov    rax,QWORD PTR [rcx]
  418883:	ret    
  418884:	xchg   ax,ax
  418886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418890:	lea    rax,[rcx+0x48]
  418894:	ret    
  418895:	nop
  418896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4188a0:	push   rdi
  4188a1:	push   rsi
  4188a2:	push   rbx
  4188a3:	sub    rsp,0x20
  4188a7:	mov    rdi,rcx
  4188aa:	test   r9d,r9d
  4188ad:	mov    rbx,rdx
  4188b0:	mov    QWORD PTR [rdi+0xb8],rdx
  4188b7:	mov    QWORD PTR [rdi+0xc0],rdx
  4188be:	mov    rsi,r8
  4188c1:	setne  BYTE PTR [rcx+0x188]
  4188c8:	test   rdx,rdx
  4188cb:	jne    0x4188d8
  4188cd:	jmp    0x418900
  4188cf:	nop
  4188d0:	mov    rbx,QWORD PTR [rbx]
  4188d3:	test   rbx,rbx
  4188d6:	je     0x418900
  4188d8:	mov    rcx,QWORD PTR [rbx+0x8]
  4188dc:	mov    QWORD PTR [rbx+0x20],0x0
  4188e4:	call   0x43f028
  4188e9:	cmp    rbx,rsi
  4188ec:	mov    DWORD PTR [rbx+0x10],eax
  4188ef:	jne    0x4188d0
  4188f1:	mov    QWORD PTR [rdi+0xc0],rbx
  4188f8:	mov    rbx,QWORD PTR [rbx]
  4188fb:	test   rbx,rbx
  4188fe:	jne    0x4188d8
  418900:	add    rsp,0x20
  418904:	pop    rbx
  418905:	pop    rsi
  418906:	pop    rdi
  418907:	ret    
  418908:	nop    DWORD PTR [rax+rax*1+0x0]
  418910:	mov    rax,QWORD PTR [rcx+0x8]
  418914:	ret    
  418915:	nop
  418916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418920:	mov    rax,QWORD PTR [rcx+0x40]
  418924:	ret    
  418925:	nop
  418926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418930:	mov    rax,QWORD PTR [rcx]
  418933:	ret    
  418934:	xchg   ax,ax
  418936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418940:	mov    rax,QWORD PTR [rcx+0x50]
  418944:	ret    
  418945:	nop
  418946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418950:	mov    rax,QWORD PTR [rcx+0x48]
  418954:	ret    
  418955:	nop
  418956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418960:	push   r14
  418962:	push   r13
  418964:	push   r12
  418966:	push   rbp
  418967:	push   rdi
  418968:	push   rsi
  418969:	push   rbx
  41896a:	sub    rsp,0x30
  41896e:	mov    rax,QWORD PTR [rcx+0x100]
  418975:	mov    rbp,rcx
  418978:	mov    r12,rdx
  41897b:	test   rax,rax
  41897e:	je     0x418b08
  418984:	xor    r8d,r8d
  418987:	nop    WORD PTR [rax+rax*1+0x0]
  418990:	mov    rax,QWORD PTR [rax+0x20]
  418994:	add    r8,0x1
  418998:	test   rax,rax
  41899b:	jne    0x418990
  41899d:	shl    r8,0x5
  4189a1:	lea    rdx,[r8+0x10]
  4189a5:	mov    ecx,0x1
  4189aa:	call   0x438600
  4189af:	mov    rbx,QWORD PTR [rbp+0x100]
  4189b6:	mov    rsi,rax
  4189b9:	mov    QWORD PTR [rax],0x0
  4189c0:	mov    BYTE PTR [rax+0x8],0x0
  4189c4:	test   rbx,rbx
  4189c7:	je     0x418b33
  4189cd:	xor    edi,edi
  4189cf:	jmp    0x418a0d
  4189d1:	mov    rax,rdi
  4189d4:	mov    rdx,QWORD PTR [rbx+0x60]
  4189d8:	mov    rcx,QWORD PTR [rbx+0x28]
  4189dc:	shl    rax,0x5
  4189e0:	lea    r8,[rsi+rax*1+0x18]
  4189e5:	call   0x435380
  4189ea:	mov    rax,QWORD PTR [rbx+0x60]
  4189ee:	shl    rdi,0x5
  4189f2:	mov    QWORD PTR [rsi+rdi*1+0x10],rax
  4189f7:	mov    rdi,QWORD PTR [rsi]
  4189fa:	nop    WORD PTR [rax+rax*1+0x0]
  418a00:	mov    rbx,QWORD PTR [rbx+0x20]
  418a04:	test   rbx,rbx
  418a07:	je     0x418ab0
  418a0d:	cmp    BYTE PTR [rbx+0x8b],0x0
  418a14:	jne    0x418a00
  418a16:	mov    eax,DWORD PTR [rbx+0x84]
  418a1c:	test   eax,eax
  418a1e:	jne    0x418a00
  418a20:	cmp    WORD PTR [rbx+0x88],0x0
  418a28:	je     0x418a00
  418a2a:	movzx  edx,BYTE PTR [rbx+0x8a]
  418a31:	lea    rax,[rdi+0x1]
  418a35:	mov    QWORD PTR [rsi],rax
  418a38:	shl    rax,0x5
  418a3c:	mov    BYTE PTR [rsi+rax*1+0x8],dl
  418a40:	movzx  eax,BYTE PTR [rbx+0x8a]
  418a47:	or     BYTE PTR [rsi+0x8],al
  418a4a:	cmp    BYTE PTR [rbx+0x8d],0x0
  418a51:	jne    0x4189d1
  418a57:	mov    rcx,rbx
  418a5a:	mov    r14d,DWORD PTR [rbx+0x80]
  418a61:	call   0x416b40
  418a66:	test   al,al
  418a68:	je     0x418b12
  418a6e:	mov    ecx,DWORD PTR [rbx+0x80]
  418a74:	lea    rdx,[rip+0x2ea21]        # 0x44749c
  418a7b:	call   0x436000
  418a80:	mov    r13,rax
  418a83:	mov    rax,rdi
  418a86:	shl    rax,0x5
  418a8a:	mov    rcx,r13
  418a8d:	lea    rdx,[rsi+rax*1+0x18]
  418a92:	call   0x4353f0
  418a97:	mov    rcx,r13
  418a9a:	call   0x43f150
  418a9f:	mov    DWORD PTR [rbx+0x80],r14d
  418aa6:	jmp    0x4189ea
  418aab:	nop    DWORD PTR [rax+rax*1+0x0]
  418ab0:	mov    rax,rdi
  418ab3:	shl    rax,0x5
  418ab7:	lea    rbx,[rax+0x10]
  418abb:	lea    rcx,[rsi+0x10]
  418abf:	lea    r9,[rip+0xffffffffffffe28a]        # 0x416d50
  418ac6:	mov    r8d,0x20
  418acc:	mov    rdx,rdi
  418acf:	call   0x43f088
  418ad4:	mov    rdx,rbx
  418ad7:	mov    r9,r12
  418ada:	mov    r8d,0x1
  418ae0:	mov    rcx,rsi
  418ae3:	call   0x43f0e0
  418ae8:	cmp    rax,0x1
  418aec:	mov    rcx,rsi
  418aef:	sete   bl
  418af2:	call   0x43f100
  418af7:	mov    eax,ebx
  418af9:	add    rsp,0x30
  418afd:	pop    rbx
  418afe:	pop    rsi
  418aff:	pop    rdi
  418b00:	pop    rbp
  418b01:	pop    r12
  418b03:	pop    r13
  418b05:	pop    r14
  418b07:	ret    
  418b08:	mov    edx,0x10
  418b0d:	jmp    0x4189a5
  418b12:	xor    r8d,r8d
  418b15:	mov    rdx,rbx
  418b18:	mov    rcx,rbp
  418b1b:	mov    BYTE PTR [rsp+0x2f],al
  418b1f:	call   0x416c60
  418b24:	mov    rcx,rsi
  418b27:	call   0x43f100
  418b2c:	movzx  eax,BYTE PTR [rsp+0x2f]
  418b31:	jmp    0x418af9
  418b33:	mov    ebx,0x10
  418b38:	xor    edi,edi
  418b3a:	jmp    0x418abb
  418b3f:	nop
  418b40:	push   rbx
  418b41:	sub    rsp,0x50
  418b45:	mov    r8d,0x1
  418b4b:	lea    rcx,[rsp+0x20]
  418b50:	mov    r9,rdx
  418b53:	mov    rbx,rdx
  418b56:	mov    edx,0x10
  418b5b:	call   0x43f108
  418b60:	xor    ecx,ecx
  418b62:	cmp    rax,0x1
  418b66:	je     0x418b70
  418b68:	mov    eax,ecx
  418b6a:	add    rsp,0x50
  418b6e:	pop    rbx
  418b6f:	ret    
  418b70:	mov    rax,QWORD PTR [rsp+0x20]
  418b75:	shl    rax,0x5
  418b79:	lea    rcx,[rax+0x10]
  418b7d:	call   0x4385d0
  418b82:	mov    rdx,QWORD PTR [rsp+0x28]
  418b87:	mov    r8,QWORD PTR [rsp+0x20]
  418b8c:	lea    rcx,[rax+0x10]
  418b90:	mov    r9,rbx
  418b93:	mov    QWORD PTR [rip+0x40796],rax        # 0x459330
  418b9a:	mov    QWORD PTR [rax],r8
  418b9d:	mov    QWORD PTR [rax+0x8],rdx
  418ba1:	mov    edx,0x20
  418ba6:	call   0x43f108
  418bab:	cmp    rax,QWORD PTR [rsp+0x20]
  418bb0:	sete   cl
  418bb3:	mov    eax,ecx
  418bb5:	add    rsp,0x50
  418bb9:	pop    rbx
  418bba:	ret    
  418bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  418bc0:	push   rdi
  418bc1:	push   rsi
  418bc2:	push   rbx
  418bc3:	sub    rsp,0x30
  418bc7:	mov    edi,r8d
  418bca:	mov    rbx,rcx
  418bcd:	mov    rsi,rdx
  418bd0:	call   0x417260
  418bd5:	xor    r9d,r9d
  418bd8:	mov    r8,rax
  418bdb:	mov    DWORD PTR [rsp+0x28],0x0
  418be3:	mov    DWORD PTR [rsp+0x20],edi
  418be7:	mov    rdx,rsi
  418bea:	mov    rcx,rbx
  418bed:	call   0x4174d0
  418bf2:	cmp    DWORD PTR [rax+0x84],0x2
  418bf9:	setne  al
  418bfc:	add    rsp,0x30
  418c00:	pop    rbx
  418c01:	pop    rsi
  418c02:	pop    rdi
  418c03:	ret    
  418c04:	nop
  418c05:	nop
  418c06:	nop
  418c07:	nop
  418c08:	nop
  418c09:	nop
  418c0a:	nop
  418c0b:	nop
  418c0c:	nop
  418c0d:	nop
  418c0e:	nop
  418c0f:	nop
  418c10:	push   rbx
  418c11:	sub    rsp,0x20
  418c15:	mov    rbx,QWORD PTR [rcx+0x78]
  418c19:	mov    r8,QWORD PTR [rbx+0x2d0]
  418c20:	mov    rdx,QWORD PTR [rbx+0x2c8]
  418c27:	mov    rax,r8
  418c2a:	sub    rax,rdx
  418c2d:	cmp    rax,0x27
  418c31:	jle    0x418cc4
  418c37:	mov    rax,QWORD PTR [rbx+0x2c0]
  418c3e:	add    rdx,0x28
  418c42:	mov    QWORD PTR [rbx+0x2c8],rdx
  418c49:	cmp    rdx,rax
  418c4c:	je     0x418cf0
  418c52:	movsxd r9,DWORD PTR [rbx+0x2e0]
  418c59:	mov    r10,r8
  418c5c:	mov    rcx,r9
  418c5f:	add    rdx,r9
  418c62:	not    ecx
  418c64:	movsxd rcx,ecx
  418c67:	and    rdx,rcx
  418c6a:	mov    rcx,QWORD PTR [rbx+0x2b8]
  418c71:	mov    r9,rdx
  418c74:	mov    QWORD PTR [rbx+0x2c8],rdx
  418c7b:	sub    r9,rcx
  418c7e:	sub    r10,rcx
  418c81:	cmp    r9,r10
  418c84:	jle    0x418c90
  418c86:	mov    QWORD PTR [rbx+0x2c8],r8
  418c8d:	mov    rdx,r8
  418c90:	mov    QWORD PTR [rbx+0x2c0],rdx
  418c97:	mov    QWORD PTR [rax],0x0
  418c9e:	mov    QWORD PTR [rax+0x8],0x0
  418ca6:	mov    QWORD PTR [rax+0x10],0x0
  418cae:	mov    QWORD PTR [rax+0x18],0x0
  418cb6:	mov    QWORD PTR [rax+0x20],0x0
  418cbe:	add    rsp,0x20
  418cc2:	pop    rbx
  418cc3:	ret    
  418cc4:	lea    rcx,[rbx+0x2b0]
  418ccb:	mov    edx,0x28
  418cd0:	call   0x438250
  418cd5:	mov    rdx,QWORD PTR [rbx+0x2c8]
  418cdc:	mov    r8,QWORD PTR [rbx+0x2d0]
  418ce3:	jmp    0x418c37
  418ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  418cf0:	or     BYTE PTR [rbx+0x300],0x2
  418cf7:	jmp    0x418c52
  418cfc:	nop    DWORD PTR [rax+0x0]
  418d00:	push   rsi
  418d01:	push   rbx
  418d02:	sub    rsp,0x38
  418d06:	test   rdx,rdx
  418d09:	mov    rbx,rcx
  418d0c:	mov    rsi,rdx
  418d0f:	je     0x418e21
  418d15:	mov    QWORD PTR [rsi+0x78],rbx
  418d19:	mov    rcx,rbx
  418d1c:	mov    QWORD PTR [rbx+0x3f8],rsi
  418d23:	call   0x412530
  418d28:	mov    rcx,rbx
  418d2b:	call   0x4116f0
  418d30:	mov    rcx,QWORD PTR [rbx+0x3f8]
  418d37:	lea    rdx,[rip+0x2e762]        # 0x4474a0
  418d3e:	mov    r9d,0x1
  418d44:	mov    r8d,0x7
  418d4a:	call   0x41da20
  418d4f:	mov    rcx,QWORD PTR [rbx+0x3f8]
  418d56:	lea    rdx,[rip+0x2e74b]        # 0x4474a8
  418d5d:	mov    QWORD PTR [rbx+0x498],rax
  418d64:	mov    r9d,0x1
  418d6a:	mov    r8d,0x4
  418d70:	call   0x41da20
  418d75:	mov    rcx,QWORD PTR [rbx+0x3f8]
  418d7c:	lea    rdx,[rip+0x2e72a]        # 0x4474ad
  418d83:	mov    QWORD PTR [rbx+0x4a0],rax
  418d8a:	mov    r9d,0x1
  418d90:	mov    r8d,0x5
  418d96:	call   0x41da20
  418d9b:	mov    rcx,QWORD PTR [rbx+0x3f8]
  418da2:	lea    rdx,[rip+0x2e70a]        # 0x4474b3
  418da9:	mov    QWORD PTR [rbx+0x4a8],rax
  418db0:	mov    r9d,0x1
  418db6:	mov    r8d,0xb
  418dbc:	call   0x41da20
  418dc1:	mov    QWORD PTR [rbx+0x4b0],rax
  418dc8:	or     WORD PTR [rax+0x18],0x200
  418dce:	lea    rdx,[rip+0x2e6ea]        # 0x4474bf
  418dd5:	mov    rcx,QWORD PTR [rbx+0x3f8]
  418ddc:	mov    r9d,0x1
  418de2:	mov    r8d,0xf
  418de8:	call   0x41da20
  418ded:	mov    rcx,QWORD PTR [rbx+0x3f8]
  418df4:	lea    rdx,[rip+0x2e6d4]        # 0x4474cf
  418dfb:	mov    QWORD PTR [rbx+0x4b8],rax
  418e02:	mov    r9d,0x1
  418e08:	mov    r8d,0x14
  418e0e:	call   0x41da20
  418e13:	mov    QWORD PTR [rbx+0x4c0],rax
  418e1a:	add    rsp,0x38
  418e1e:	pop    rbx
  418e1f:	pop    rsi
  418e20:	ret    
  418e21:	mov    BYTE PTR [rcx+0x4c8],0x1
  418e28:	mov    ecx,0xd
  418e2d:	call   0x41d610
  418e32:	mov    rsi,rax
  418e35:	lea    rax,[rip+0xfffffffffffffdd4]        # 0x418c10
  418e3c:	lea    rcx,[rbx+0x2b0]
  418e43:	lea    r9,[rip+0x1f786]        # 0x4385d0
  418e4a:	xor    r8d,r8d
  418e4d:	xor    edx,edx
  418e4f:	mov    QWORD PTR [rsi+0x60],rax
  418e53:	mov    rax,QWORD PTR [rip+0x387d6]        # 0x451630
  418e5a:	mov    QWORD PTR [rsp+0x20],rax
  418e5f:	call   0x438120
  418e64:	jmp    0x418d15
  418e69:	nop    DWORD PTR [rax+0x0]
  418e70:	push   rbx
  418e71:	sub    rsp,0x20
  418e75:	cmp    BYTE PTR [rcx+0x4c8],0x0
  418e7c:	jne    0x418e84
  418e7e:	add    rsp,0x20
  418e82:	pop    rbx
  418e83:	ret    
  418e84:	mov    rbx,rcx
  418e87:	mov    rcx,QWORD PTR [rcx+0x3f8]
  418e8e:	call   0x41d680
  418e93:	lea    rcx,[rbx+0x2b0]
  418e9a:	xor    edx,edx
  418e9c:	add    rsp,0x20
  418ea0:	pop    rbx
  418ea1:	jmp    0x438480
  418ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418eb0:	mov    rcx,QWORD PTR [rcx+0x3f8]
  418eb7:	mov    r9d,0x1
  418ebd:	mov    r8d,r8d
  418ec0:	jmp    0x41da20
  418ec5:	nop
  418ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ed0:	sub    rsp,0x28
  418ed4:	mov    rcx,QWORD PTR [rcx+0x3f8]
  418edb:	xor    r9d,r9d
  418ede:	movsxd r8,r8d
  418ee1:	call   0x41da20
  418ee6:	test   rax,rax
  418ee9:	je     0x418f00
  418eeb:	movzx  eax,BYTE PTR [rax+0x18]
  418eef:	and    eax,0x3f
  418ef2:	cmp    al,0x1
  418ef4:	sete   al
  418ef7:	movzx  eax,al
  418efa:	add    rsp,0x28
  418efe:	ret    
  418eff:	nop
  418f00:	xor    eax,eax
  418f02:	add    rsp,0x28
  418f06:	ret    
  418f07:	nop    WORD PTR [rax+rax*1+0x0]
  418f10:	mov    rcx,QWORD PTR [rcx+0x3f8]
  418f17:	jmp    0x41da70
  418f1c:	nop
  418f1d:	nop
  418f1e:	nop
  418f1f:	nop
  418f20:	sub    rsp,0x18
  418f24:	movaps XMMWORD PTR [rsp],xmm6
  418f28:	mov    edx,0xffffffff
  418f2d:	mov    rax,rcx
  418f30:	and    ecx,0xf
  418f33:	and    rax,0xfffffffffffffff0
  418f37:	shl    edx,cl
  418f39:	movdqa xmm6,XMMWORD PTR [rip+0x2ee3f]        # 0x447d80
  418f41:	mov    ecx,edx
  418f43:	movdqa xmm5,XMMWORD PTR [rip+0x2ee45]        # 0x447d90
  418f4b:	movdqa xmm4,XMMWORD PTR [rip+0x2ee4d]        # 0x447da0
  418f53:	movdqa xmm3,XMMWORD PTR [rip+0x2ee55]        # 0x447db0
  418f5b:	movdqa xmm0,XMMWORD PTR [rax]
  418f5f:	jmp    0x418f6e
  418f61:	add    rax,0x10
  418f65:	movdqa xmm0,XMMWORD PTR [rax]
  418f69:	mov    ecx,0xffffffff
  418f6e:	movdqa xmm1,xmm0
  418f72:	movdqa xmm2,xmm0
  418f76:	pcmpeqb xmm1,xmm6
  418f7a:	pcmpeqb xmm2,xmm5
  418f7e:	por    xmm1,xmm2
  418f82:	movdqa xmm2,xmm0
  418f86:	pcmpeqb xmm0,xmm3
  418f8a:	pcmpeqb xmm2,xmm4
  418f8e:	por    xmm1,xmm2
  418f92:	por    xmm0,xmm1
  418f96:	pmovmskb edx,xmm0
  418f9a:	and    edx,ecx
  418f9c:	je     0x418f61
  418f9e:	tzcnt  edx,edx
  418fa2:	movaps xmm6,XMMWORD PTR [rsp]
  418fa6:	movsxd rdx,edx
  418fa9:	add    rax,rdx
  418fac:	add    rsp,0x18
  418fb0:	ret    
  418fb1:	nop    DWORD PTR [rax+rax*1+0x0]
  418fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418fc0:	test   cl,0xf
  418fc3:	mov    r8,rcx
  418fc6:	jne    0x419000
  418fc8:	movdqa xmm0,XMMWORD PTR [rip+0x2f520]        # 0x4484f0
  418fd0:	mov    edx,0x10
  418fd5:	mov    eax,0x4
  418fda:	sub    r8,0x10
  418fde:	xchg   ax,ax
  418fe0:	add    r8,0x10
  418fe4:	pcmpestri xmm0,XMMWORD PTR [r8],0x0
  418feb:	jae    0x418fe0
  418fed:	lea    rax,[r8+rcx*1]
  418ff1:	ret    
  418ff2:	nop    DWORD PTR [rax+0x0]
  418ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419000:	mov    rax,rdx
  419003:	sub    rax,rcx
  419006:	cmp    rax,0xf
  41900a:	jle    0x419040
  41900c:	movdqa xmm0,XMMWORD PTR [rip+0x2f4dc]        # 0x4484f0
  419014:	mov    eax,0x4
  419019:	mov    edx,0x10
  41901e:	pcmpestri xmm0,XMMWORD PTR [r8],0x0
  419025:	movsxd rcx,ecx
  419028:	cmp    rcx,0xf
  41902c:	jbe    0x418fed
  41902e:	lea    rax,[r8+0x10]
  419032:	and    rax,0xfffffffffffffff0
  419036:	mov    r8,rax
  419039:	jmp    0x418fd0
  41903b:	nop    DWORD PTR [rax+rax*1+0x0]
  419040:	mov    rax,rcx
  419043:	and    eax,0xfff
  419048:	cmp    rax,0xff0
  41904e:	jbe    0x41900c
  419050:	jmp    0x418f20
  419055:	nop
  419056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419060:	push   rsi
  419061:	push   rbx
  419062:	sub    rsp,0x38
  419066:	mov    r10d,DWORD PTR [rcx+0x3c]
  41906a:	cmp    r10d,DWORD PTR [rcx+0x40]
  41906e:	mov    rbx,rcx
  419071:	mov    rsi,rdx
  419074:	je     0x4190a0
  419076:	mov    rcx,QWORD PTR [rcx+0x30]
  41907a:	mov    eax,r10d
  41907d:	add    r10d,0x1
  419081:	shl    rax,0x4
  419085:	lea    rax,[rcx+rax*1]
  419089:	mov    QWORD PTR [rax],rsi
  41908c:	mov    DWORD PTR [rax+0x8],r8d
  419090:	mov    DWORD PTR [rbx+0x3c],r10d
  419094:	add    rsp,0x38
  419098:	pop    rbx
  419099:	pop    rsi
  41909a:	ret    
  41909b:	nop    DWORD PTR [rax+rax*1+0x0]
  4190a0:	lea    edx,[r10+r10*1+0xc8]
  4190a8:	mov    DWORD PTR [rsp+0x2c],r8d
  4190ad:	mov    DWORD PTR [rcx+0x40],edx
  4190b0:	mov    rcx,QWORD PTR [rcx+0x30]
  4190b4:	shl    rdx,0x4
  4190b8:	call   0x438650
  4190bd:	mov    r10d,DWORD PTR [rbx+0x3c]
  4190c1:	mov    QWORD PTR [rbx+0x30],rax
  4190c5:	mov    rcx,rax
  4190c8:	mov    r8d,DWORD PTR [rsp+0x2c]
  4190cd:	jmp    0x41907a
  4190cf:	nop
  4190d0:	sub    rsp,0x28
  4190d4:	movzx  r8d,BYTE PTR [rdx]
  4190d8:	mov    r11,rcx
  4190db:	test   r8b,r8b
  4190de:	mov    r9d,r8d
  4190e1:	jns    0x4191a3
  4190e7:	xor    eax,eax
  4190e9:	nop    DWORD PTR [rax+0x0]
  4190f0:	add    r9d,r9d
  4190f3:	add    eax,0x1
  4190f6:	test   r9b,0x80
  4190fa:	jne    0x4190f0
  4190fc:	mov    r9d,0x7f
  419102:	mov    ecx,eax
  419104:	sar    r9d,cl
  419107:	and    r8d,r9d
  41910a:	cmp    eax,0x1
  41910d:	je     0x4191ac
  419113:	movzx  ecx,BYTE PTR [rdx+0x1]
  419117:	shl    r8d,0x6
  41911b:	lea    r9,[rdx+0x1]
  41911f:	mov    r10d,ecx
  419122:	and    ecx,0xc0
  419128:	and    r10d,0x3f
  41912c:	or     r8d,r10d
  41912f:	add    ecx,0xffffff80
  419132:	jne    0x4191a7
  419134:	lea    ecx,[rax-0x2]
  419137:	lea    rcx,[rdx+rcx*1+0x1]
  41913c:	jmp    0x419161
  41913e:	xchg   ax,ax
  419140:	add    r9,0x1
  419144:	movzx  edx,BYTE PTR [r9]
  419148:	shl    r8d,0x6
  41914c:	mov    r10d,edx
  41914f:	and    edx,0xc0
  419155:	and    r10d,0x3f
  419159:	or     r8d,r10d
  41915c:	add    edx,0xffffff80
  41915f:	jne    0x4191a7
  419161:	cmp    r9,rcx
  419164:	jne    0x419140
  419166:	cdqe   
  419168:	lea    r9,[r11+0x2]
  41916c:	lea    r10,[rip+0x2e38d]        # 0x447500
  419173:	mov    BYTE PTR [r11],0x5c
  419177:	mov    BYTE PTR [r11+0x1],0x55
  41917c:	mov    ecx,0x1c
  419181:	mov    edx,r8d
  419184:	add    r9,0x1
  419188:	shr    edx,cl
  41918a:	sub    ecx,0x4
  41918d:	and    edx,0xf
  419190:	movzx  edx,BYTE PTR [r10+rdx*1]
  419195:	mov    BYTE PTR [r9-0x1],dl
  419199:	cmp    ecx,0xfffffffc
  41919c:	jne    0x419181
  41919e:	add    rsp,0x28
  4191a2:	ret    
  4191a3:	xor    eax,eax
  4191a5:	jmp    0x419168
  4191a7:	call   0x43f180
  4191ac:	mov    eax,0x1
  4191b1:	jmp    0x419168
  4191b3:	nop    DWORD PTR [rax]
  4191b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4191c0:	push   rsi
  4191c1:	push   rbx
  4191c2:	sub    rsp,0x28
  4191c6:	mov    rax,QWORD PTR [rcx]
  4191c9:	test   rax,rax
  4191cc:	je     0x4191d5
  4191ce:	add    rsp,0x28
  4191d2:	pop    rbx
  4191d3:	pop    rsi
  4191d4:	ret    
  4191d5:	mov    rbx,rcx
  4191d8:	mov    ecx,0x20
  4191dd:	call   0x4385d0
  4191e2:	mov    ecx,0x1770
  4191e7:	mov    rsi,rax
  4191ea:	mov    QWORD PTR [rbx],rax
  4191ed:	mov    QWORD PTR [rax+0x8],rbx
  4191f1:	call   0x4385d0
  4191f6:	mov    QWORD PTR [rsi+0x10],rax
  4191fa:	add    rax,0x1770
  419200:	mov    QWORD PTR [rsi],0x0
  419207:	mov    QWORD PTR [rsi+0x18],rax
  41920b:	mov    rax,QWORD PTR [rbx]
  41920e:	add    rsp,0x28
  419212:	pop    rbx
  419213:	pop    rsi
  419214:	ret    
  419215:	nop
  419216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419220:	push   rsi
  419221:	push   rbx
  419222:	sub    rsp,0x38
  419226:	mov    rsi,QWORD PTR [rcx]
  419229:	mov    rax,QWORD PTR [rsi]
  41922c:	movzx  r9d,BYTE PTR [rax]
  419230:	cmp    r9b,0x24
  419234:	je     0x419260
  419236:	cmp    r9b,0x5c
  41923a:	sete   bl
  41923d:	cmp    BYTE PTR [rcx+0x431],0x0
  419244:	setne  r9b
  419248:	and    bl,r9b
  41924b:	jne    0x419290
  41924d:	mov    eax,ebx
  41924f:	add    rsp,0x38
  419253:	pop    rbx
  419254:	pop    rsi
  419255:	ret    
  419256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419260:	xor    ebx,ebx
  419262:	cmp    BYTE PTR [rcx+0x430],0x0
  419269:	je     0x41924d
  41926b:	add    rax,0x1
  41926f:	mov    QWORD PTR [rsi],rax
  419272:	cmp    BYTE PTR [rcx+0x432],0x0
  419279:	je     0x419281
  41927b:	cmp    BYTE PTR [rcx+0x12],0x0
  41927f:	je     0x4192d4
  419281:	mov    ebx,0x1
  419286:	mov    eax,ebx
  419288:	add    rsp,0x38
  41928c:	pop    rbx
  41928d:	pop    rsi
  41928e:	ret    
  41928f:	nop
  419290:	movzx  r9d,BYTE PTR [rax+0x1]
  419295:	xor    ebx,ebx
  419297:	and    r9d,0xffffffdf
  41929b:	cmp    r9b,0x55
  41929f:	jne    0x41924d
  4192a1:	add    rax,0x2
  4192a5:	cmp    edx,0x1
  4192a8:	mov    rdx,QWORD PTR [rsi+0x20]
  4192ac:	mov    QWORD PTR [rsi],rax
  4192af:	sbb    eax,eax
  4192b1:	mov    QWORD PTR [rsp+0x20],r8
  4192b6:	not    eax
  4192b8:	lea    r9d,[rax+0x2]
  4192bc:	mov    r8,rdx
  4192bf:	mov    rdx,rsi
  4192c2:	call   0x41f170
  4192c7:	test   eax,eax
  4192c9:	jne    0x419281
  4192cb:	sub    QWORD PTR [rsi],0x2
  4192cf:	jmp    0x41924d
  4192d4:	lea    r8,[rip+0x2e236]        # 0x447511
  4192db:	mov    BYTE PTR [rcx+0x432],0x0
  4192e2:	mov    edx,0x2
  4192e7:	call   0x412660
  4192ec:	jmp    0x419281
  4192ee:	xchg   ax,ax
  4192f0:	push   r13
  4192f2:	push   r12
  4192f4:	push   rbp
  4192f5:	push   rdi
  4192f6:	push   rsi
  4192f7:	push   rbx
  4192f8:	sub    rsp,0x38
  4192fc:	mov    rax,QWORD PTR [rcx]
  4192ff:	movzx  esi,BYTE PTR [rdx]
  419302:	test   r8b,r8b
  419305:	mov    rbp,rcx
  419308:	mov    rdi,rdx
  41930b:	mov    r12,r9
  41930e:	mov    rbx,QWORD PTR [rax]
  419311:	jne    0x419380
  419313:	movzx  edx,BYTE PTR [rbx]
  419316:	mov    r13,QWORD PTR [rip+0x382c3]        # 0x4515e0
  41931d:	sub    esi,0x71
  419320:	test   WORD PTR [r13+rdx*2+0x0],0x204
  419328:	mov    rax,rdx
  41932b:	je     0x41934b
  41932d:	nop    DWORD PTR [rax]
  419330:	add    rbx,0x1
  419334:	movzx  edx,BYTE PTR [rbx]
  419337:	imul   esi,esi,0x43
  41933a:	test   WORD PTR [r13+rdx*2+0x0],0x204
  419342:	lea    esi,[rsi+rax*1-0x71]
  419346:	mov    rax,rdx
  419349:	jne    0x419330
  41934b:	movzx  eax,BYTE PTR [rbx-0x1]
  41934f:	mov    BYTE PTR [r12+0x4],0x0
  419355:	xor    edx,edx
  419357:	mov    r8,r12
  41935a:	mov    rcx,rbp
  41935d:	mov    DWORD PTR [r12],eax
  419361:	mov    rax,QWORD PTR [rbp+0x0]
  419365:	mov    QWORD PTR [rax],rbx
  419368:	call   0x419220
  41936d:	test   al,al
  41936f:	je     0x419420
  419375:	mov    rax,QWORD PTR [rbp+0x0]
  419379:	mov    rax,QWORD PTR [rax]
  41937c:	jmp    0x4193a8
  41937e:	xchg   ax,ax
  419380:	mov    rax,rbx
  419383:	mov    r13,QWORD PTR [rip+0x38256]        # 0x4515e0
  41938a:	jmp    0x4193a8
  41938c:	nop    DWORD PTR [rax+0x0]
  419390:	xor    edx,edx
  419392:	mov    r8,r12
  419395:	mov    rcx,rbp
  419398:	call   0x419220
  41939d:	test   al,al
  41939f:	mov    rax,QWORD PTR [rbp+0x0]
  4193a3:	je     0x4193d0
  4193a5:	mov    rax,QWORD PTR [rax]
  4193a8:	movzx  r10d,BYTE PTR [rax]
  4193ac:	test   WORD PTR [r13+r10*2+0x0],0x204
  4193b4:	mov    rax,r10
  4193b7:	je     0x419390
  4193b9:	mov    DWORD PTR [r12],eax
  4193bd:	mov    BYTE PTR [r12+0x4],0x0
  4193c3:	mov    rax,QWORD PTR [rbp+0x0]
  4193c7:	add    QWORD PTR [rax],0x1
  4193cb:	jmp    0x4193a5
  4193cd:	nop    DWORD PTR [rax]
  4193d0:	mov    r8,QWORD PTR [rax]
  4193d3:	mov    rdx,rdi
  4193d6:	mov    rcx,rbp
  4193d9:	sub    r8,rdi
  4193dc:	call   0x423ad0
  4193e1:	mov    rbx,rax
  4193e4:	movzx  edx,WORD PTR [rbx+0x18]
  4193e8:	shr    dx,0x6
  4193ec:	test   dl,0x8
  4193ef:	je     0x419410
  4193f1:	cmp    BYTE PTR [rbp+0x12],0x0
  4193f5:	jne    0x419410
  4193f7:	and    edx,0x2
  4193fa:	jne    0x419446
  4193fc:	cmp    QWORD PTR [rbp+0x4b0],rbx
  419403:	je     0x41947e
  419405:	test   BYTE PTR [rbx+0x19],0x80
  419409:	jne    0x419465
  41940b:	nop    DWORD PTR [rax+rax*1+0x0]
  419410:	mov    rax,rbx
  419413:	add    rsp,0x38
  419417:	pop    rbx
  419418:	pop    rsi
  419419:	pop    rdi
  41941a:	pop    rbp
  41941b:	pop    r12
  41941d:	pop    r13
  41941f:	ret    
  419420:	sub    rbx,rdi
  419423:	mov    rcx,QWORD PTR [rbp+0x3f8]
  41942a:	mov    rdx,rdi
  41942d:	lea    r9d,[rsi+rbx*1]
  419431:	mov    r8d,ebx
  419434:	mov    DWORD PTR [rsp+0x20],0x1
  41943c:	call   0x41d6b0
  419441:	mov    rbx,rax
  419444:	jmp    0x4193e4
  419446:	cmp    BYTE PTR [rbp+0x17],0x0
  41944a:	jne    0x4193fc
  41944c:	mov    r9,QWORD PTR [rbx]
  41944f:	lea    r8,[rip+0x2e0d7]        # 0x44752d
  419456:	mov    edx,0x3
  41945b:	mov    rcx,rbp
  41945e:	call   0x412660
  419463:	jmp    0x4193fc
  419465:	mov    r9,QWORD PTR [rbx]
  419468:	lea    r8,[rip+0x2e129]        # 0x447598
  41946f:	mov    edx,0xf
  419474:	mov    rcx,rbp
  419477:	call   0x412690
  41947c:	jmp    0x419410
  41947e:	cmp    BYTE PTR [rbp+0x16],0x0
  419482:	jne    0x419405
  419484:	lea    r8,[rip+0x2e0c5]        # 0x447550
  41948b:	mov    edx,0x2
  419490:	mov    rcx,rbp
  419493:	call   0x412660
  419498:	jmp    0x419405
  41949d:	nop    DWORD PTR [rax]
  4194a0:	sub    rsp,0x38
  4194a4:	movzx  r9d,BYTE PTR [rdx]
  4194a8:	mov    r11,QWORD PTR [rip+0x38131]        # 0x4515e0
  4194af:	xor    eax,eax
  4194b1:	test   BYTE PTR [r11+r9*2+0x1],0x2
  4194b7:	je     0x419516
  4194b9:	movzx  r10d,BYTE PTR [rdx+0x1]
  4194be:	lea    eax,[r9-0x71]
  4194c2:	lea    r8,[rdx+0x1]
  4194c6:	test   WORD PTR [r11+r10*2],0x204
  4194cd:	mov    r9,r10
  4194d0:	je     0x4194ee
  4194d2:	add    r8,0x1
  4194d6:	movzx  r10d,BYTE PTR [r8]
  4194da:	imul   eax,eax,0x43
  4194dd:	test   WORD PTR [r11+r10*2],0x204
  4194e4:	lea    eax,[rax+r9*1-0x71]
  4194e9:	mov    r9,r10
  4194ec:	jne    0x4194d2
  4194ee:	sub    r8,rdx
  4194f1:	mov    DWORD PTR [rsp+0x20],0x0
  4194f9:	mov    rcx,QWORD PTR [rcx]
  4194fc:	lea    r9d,[rax+r8*1]
  419500:	call   0x41d6b0
  419505:	test   rax,rax
  419508:	je     0x419520
  41950a:	movzx  eax,BYTE PTR [rax+0x18]
  41950e:	and    eax,0x3f
  419511:	cmp    al,0x1
  419513:	sete   al
  419516:	add    rsp,0x38
  41951a:	ret    
  41951b:	nop    DWORD PTR [rax+rax*1+0x0]
  419520:	xor    eax,eax
  419522:	jmp    0x419516
  419524:	xchg   ax,ax
  419526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419530:	sub    rsp,0x28
  419534:	xor    eax,eax
  419536:	cmp    BYTE PTR [rcx+0x4],0x35
  41953a:	jne    0x419550
  41953c:	mov    rax,QWORD PTR [rcx+0x8]
  419540:	mov    rcx,QWORD PTR [rax]
  419543:	call   0x43f048
  419548:	test   eax,eax
  41954a:	sete   al
  41954d:	movzx  eax,al
  419550:	add    rsp,0x28
  419554:	ret    
  419555:	nop
  419556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419560:	xor    eax,eax
  419562:	xchg   r8,rbx
  419565:	cpuid  
  419567:	xchg   r8,rbx
  41956a:	test   eax,eax
  41956c:	lea    r8,[rip+0xfffffffffffff9ad]        # 0x418f20
  419573:	je     0x419593
  419575:	mov    eax,0x1
  41957a:	xchg   r9,rbx
  41957d:	cpuid  
  41957f:	xchg   r9,rbx
  419582:	lea    rax,[rip+0xfffffffffffffa37]        # 0x418fc0
  419589:	and    ecx,0x100000
  41958f:	cmovne r8,rax
  419593:	mov    QWORD PTR [rip+0x3fda6],r8        # 0x459340
  41959a:	ret    
  41959b:	nop    DWORD PTR [rax+rax*1+0x0]
  4195a0:	push   r15
  4195a2:	push   r14
  4195a4:	push   r13
  4195a6:	push   r12
  4195a8:	push   rbp
  4195a9:	push   rdi
  4195aa:	push   rsi
  4195ab:	push   rbx
  4195ac:	sub    rsp,0x38
  4195b0:	mov    rsi,QWORD PTR [rcx]
  4195b3:	mov    r13,rcx
  4195b6:	test   BYTE PTR [rsi+0x6c],0x2
  4195ba:	mov    rax,QWORD PTR [rsi+0x10]
  4195be:	mov    DWORD PTR [rsi+0x3c],0x0
  4195c5:	mov    DWORD PTR [rsi+0x38],0x0
  4195cc:	mov    BYTE PTR [rsi+0x68],0x0
  4195d0:	mov    QWORD PTR [rsi+0x8],rax
  4195d4:	mov    QWORD PTR [rsi],rax
  4195d7:	jne    0x419659
  4195dd:	xor    ebp,ebp
  4195df:	mov    rdx,QWORD PTR [rsi+0x20]
  4195e3:	mov    rcx,rax
  4195e6:	call   QWORD PTR [rip+0x3fd54]        # 0x459340
  4195ec:	movzx  r8d,BYTE PTR [rax]
  4195f0:	cmp    r8b,0x5c
  4195f4:	je     0x419670
  4195f6:	cmp    r8b,0x3f
  4195fa:	je     0x419696
  419600:	mov    rdx,QWORD PTR [rsi+0x20]
  419604:	cmp    rdx,rax
  419607:	je     0x419666
  419609:	cmp    r8b,0xd
  41960d:	mov    rdi,rax
  419610:	je     0x4196a9
  419616:	test   rbp,rbp
  419619:	jne    0x4196d0
  41961f:	lea    rdx,[rax+0x1]
  419623:	lea    rbx,[rdi+0x1]
  419627:	mov    BYTE PTR [rax],0xa
  41962a:	mov    r8d,0xa
  419630:	mov    rcx,rsi
  419633:	call   0x419060
  419638:	mov    QWORD PTR [rsi+0x10],rbx
  41963c:	add    rsp,0x38
  419640:	pop    rbx
  419641:	pop    rsi
  419642:	pop    rdi
  419643:	pop    rbp
  419644:	pop    r12
  419646:	pop    r13
  419648:	pop    r14
  41964a:	pop    r15
  41964c:	ret    
  41964d:	nop    DWORD PTR [rax]
  419650:	cmp    dl,0xa
  419653:	je     0x419661
  419655:	add    rax,0x1
  419659:	movzx  edx,BYTE PTR [rax]
  41965c:	cmp    dl,0xd
  41965f:	jne    0x419650
  419661:	cmp    dl,0xd
  419664:	je     0x419680
  419666:	lea    rdx,[rax+0x1]
  41966a:	mov    rbx,rdx
  41966d:	jmp    0x419627
  41966f:	nop
  419670:	mov    rbp,rax
  419673:	add    rax,0x1
  419677:	jmp    0x4195df
  41967c:	nop    DWORD PTR [rax+0x0]
  419680:	cmp    QWORD PTR [rsi+0x20],rax
  419684:	je     0x419666
  419686:	cmp    BYTE PTR [rax+0x1],0xa
  41968a:	jne    0x419666
  41968c:	lea    rbx,[rax+0x2]
  419690:	lea    rdx,[rax+0x1]
  419694:	jmp    0x419627
  419696:	cmp    BYTE PTR [rax+0x1],0x3f
  41969a:	je     0x41986f
  4196a0:	add    rax,0x1
  4196a4:	jmp    0x4195df
  4196a9:	cmp    BYTE PTR [rax+0x1],0xa
  4196ad:	jne    0x419616
  4196b3:	lea    rdi,[rax+0x1]
  4196b7:	lea    rbx,[rax+0x2]
  4196bb:	cmp    rdx,rdi
  4196be:	jne    0x419616
  4196c4:	jmp    0x419627
  4196c9:	nop    DWORD PTR [rax+0x0]
  4196d0:	movzx  edx,BYTE PTR [rax-0x1]
  4196d4:	mov    rcx,QWORD PTR [rip+0x37f05]        # 0x4515e0
  4196db:	test   BYTE PTR [rcx+rdx*2+0x1],0x8
  4196e0:	je     0x4198eb
  4196e6:	mov    rbx,rax
  4196e9:	nop    DWORD PTR [rax+0x0]
  4196f0:	sub    rbx,0x1
  4196f4:	movzx  edx,BYTE PTR [rbx-0x1]
  4196f8:	test   BYTE PTR [rcx+rdx*2+0x1],0x8
  4196fd:	jne    0x4196f0
  4196ff:	lea    r12,[rbx-0x1]
  419703:	cmp    r12,rbp
  419706:	jne    0x41961f
  41970c:	cmp    rbx,rax
  41970f:	mov    r8d,0x20
  419715:	mov    eax,0x5c
  41971a:	cmove  r8d,eax
  41971e:	mov    rdx,r12
  419721:	mov    rcx,rsi
  419724:	call   0x419060
  419729:	lea    rax,[rbx-0x2]
  41972d:	mov    QWORD PTR [rsi+0x10],r12
  419731:	movzx  edx,BYTE PTR [rdi+0x1]
  419735:	mov    r15,QWORD PTR [rip+0x37ea4]        # 0x4515e0
  41973c:	mov    ebp,0x20
  419741:	mov    r12,QWORD PTR [rip+0x37e18]        # 0x451560
  419748:	nop    DWORD PTR [rax+rax*1+0x0]
  419750:	cmp    dl,0xd
  419753:	lea    rbx,[rdi+0x1]
  419757:	lea    r14,[rax+0x1]
  41975b:	mov    BYTE PTR [rax+0x1],dl
  41975e:	je     0x419788
  419760:	cmp    dl,0xa
  419763:	je     0x4197e0
  419765:	cmp    dl,0x3f
  419768:	je     0x419833
  41976e:	movzx  edx,BYTE PTR [rdi+0x2]
  419772:	mov    rax,r14
  419775:	mov    rdi,rbx
  419778:	lea    rbx,[rdi+0x1]
  41977c:	lea    r14,[rax+0x1]
  419780:	cmp    dl,0xd
  419783:	mov    BYTE PTR [rax+0x1],dl
  419786:	jne    0x419760
  419788:	mov    rdx,QWORD PTR [rsi+0x20]
  41978c:	cmp    rdx,rbx
  41978f:	je     0x4198db
  419795:	cmp    BYTE PTR [rdi+0x2],0xa
  419799:	je     0x419866
  41979f:	mov    rdi,rbx
  4197a2:	mov    rdx,QWORD PTR [rsi+0x10]
  4197a6:	cmp    r14,rdx
  4197a9:	je     0x4197d6
  4197ab:	movzx  ecx,BYTE PTR [rax]
  4197ae:	test   BYTE PTR [r15+rcx*2+0x1],0x8
  4197b4:	je     0x4198c4
  4197ba:	mov    rbx,r14
  4197bd:	jmp    0x4197cd
  4197bf:	nop
  4197c0:	movzx  r8d,BYTE PTR [rbx-0x1]
  4197c5:	test   BYTE PTR [r15+r8*2+0x1],0x8
  4197cb:	je     0x419800
  4197cd:	sub    rbx,0x1
  4197d1:	cmp    rbx,rdx
  4197d4:	jne    0x4197c0
  4197d6:	mov    rax,r14
  4197d9:	jmp    0x41961f
  4197de:	xchg   ax,ax
  4197e0:	mov    rdx,QWORD PTR [rsi+0x20]
  4197e4:	mov    rdi,rbx
  4197e7:	cmp    rdi,rdx
  4197ea:	jne    0x4197a2
  4197ec:	lea    rdx,[r14+0x1]
  4197f0:	lea    rbx,[rdi+0x1]
  4197f4:	mov    rax,r14
  4197f7:	jmp    0x419627
  4197fc:	nop    DWORD PTR [rax+0x0]
  419800:	cmp    r8b,0x5c
  419804:	jne    0x4197d6
  419806:	cmp    r14,rbx
  419809:	mov    r8d,0x5c
  41980f:	cmovne r8d,ebp
  419813:	lea    r14,[rbx-0x1]
  419817:	mov    rcx,rsi
  41981a:	mov    rdx,r14
  41981d:	call   0x419060
  419822:	mov    QWORD PTR [rsi+0x10],r14
  419826:	lea    rax,[rbx-0x2]
  41982a:	movzx  edx,BYTE PTR [rdi+0x1]
  41982e:	jmp    0x419750
  419833:	movzx  ecx,BYTE PTR [rdi+0x2]
  419837:	cmp    cl,0x3f
  41983a:	je     0x419849
  41983c:	mov    edx,ecx
  41983e:	mov    rax,r14
  419841:	mov    rdi,rbx
  419844:	jmp    0x419750
  419849:	movzx  ecx,BYTE PTR [rdi+0x3]
  41984d:	cmp    BYTE PTR [r12+rcx*1],0x0
  419852:	mov    r8,rcx
  419855:	jne    0x419909
  41985b:	mov    rax,r14
  41985e:	mov    rdi,rbx
  419861:	jmp    0x419750
  419866:	add    rdi,0x2
  41986a:	jmp    0x4197e7
  41986f:	movzx  edx,BYTE PTR [rax+0x2]
  419873:	mov    rdi,QWORD PTR [rip+0x37ce6]        # 0x451560
  41987a:	cmp    BYTE PTR [rdi+rdx*1],0x0
  41987e:	mov    r8,rdx
  419881:	je     0x4196a0
  419887:	mov    rdx,rax
  41988a:	mov    rcx,rsi
  41988d:	mov    QWORD PTR [rsp+0x28],rax
  419892:	call   0x419060
  419897:	cmp    BYTE PTR [r13+0x41d],0x0
  41989f:	mov    rax,QWORD PTR [rsp+0x28]
  4198a4:	je     0x4196a0
  4198aa:	movzx  edx,BYTE PTR [rax+0x2]
  4198ae:	mov    rdi,QWORD PTR [rip+0x37cab]        # 0x451560
  4198b5:	movzx  edx,BYTE PTR [rdi+rdx*1]
  4198b9:	lea    rdi,[rax+0x2]
  4198bd:	mov    BYTE PTR [rax],dl
  4198bf:	jmp    0x419731
  4198c4:	cmp    cl,0x5c
  4198c7:	jne    0x4197ec
  4198cd:	mov    rbx,r14
  4198d0:	mov    r8d,0x5c
  4198d6:	jmp    0x419813
  4198db:	mov    rax,r14
  4198de:	lea    rdx,[r14+0x1]
  4198e2:	lea    rbx,[rdi+0x2]
  4198e6:	jmp    0x419627
  4198eb:	lea    rdx,[rax-0x1]
  4198ef:	cmp    rbp,rdx
  4198f2:	jne    0x41961f
  4198f8:	mov    r12,rbp
  4198fb:	mov    rbx,rax
  4198fe:	mov    r8d,0x5c
  419904:	jmp    0x41971e
  419909:	mov    rdx,r14
  41990c:	mov    rcx,rsi
  41990f:	mov    QWORD PTR [rsp+0x28],rax
  419914:	call   0x419060
  419919:	cmp    BYTE PTR [r13+0x41d],0x0
  419921:	mov    rax,QWORD PTR [rsp+0x28]
  419926:	je     0x41976e
  41992c:	movzx  edx,BYTE PTR [rdi+0x3]
  419930:	add    rdi,0x3
  419934:	movzx  edx,BYTE PTR [r12+rdx*1]
  419939:	mov    BYTE PTR [rax+0x1],dl
  41993c:	mov    rax,r14
  41993f:	movzx  edx,BYTE PTR [rdi+0x1]
  419943:	jmp    0x419750
  419948:	nop    DWORD PTR [rax+rax*1+0x0]
  419950:	push   rsi
  419951:	push   rbx
  419952:	sub    rsp,0x38
  419956:	mov    rdx,QWORD PTR [rcx]
  419959:	mov    rsi,rcx
  41995c:	jmp    0x4199a5
  41995e:	xchg   ax,ax
  419960:	mov    rcx,QWORD PTR [rdx+0x10]
  419964:	mov    r8,QWORD PTR [rdx+0x20]
  419968:	cmp    rcx,r8
  41996b:	jb     0x4199d0
  41996d:	cmp    BYTE PTR [rsi+0x19],0x0
  419971:	jne    0x4199c0
  419973:	cmp    r8,QWORD PTR [rdx+0x18]
  419977:	movzx  ebx,BYTE PTR [rdx+0x6c]
  41997b:	je     0x41998b
  41997d:	cmp    rcx,r8
  419980:	jbe    0x41998b
  419982:	test   bl,0x2
  419985:	jne    0x41998b
  419987:	mov    QWORD PTR [rdx+0x10],r8
  41998b:	mov    rcx,rsi
  41998e:	shr    bl,0x2
  419991:	call   0x411b00
  419996:	mov    rdx,QWORD PTR [rsi]
  419999:	and    ebx,0x1
  41999c:	test   rdx,rdx
  41999f:	je     0x4199c0
  4199a1:	test   bl,bl
  4199a3:	jne    0x4199c0
  4199a5:	movzx  eax,BYTE PTR [rdx+0x68]
  4199a9:	test   al,al
  4199ab:	jne    0x419960
  4199ad:	mov    eax,0x1
  4199b2:	add    rsp,0x38
  4199b6:	pop    rbx
  4199b7:	pop    rsi
  4199b8:	ret    
  4199b9:	nop    DWORD PTR [rax+0x0]
  4199c0:	xor    eax,eax
  4199c2:	add    rsp,0x38
  4199c6:	pop    rbx
  4199c7:	pop    rsi
  4199c8:	ret    
  4199c9:	nop    DWORD PTR [rax+0x0]
  4199d0:	mov    rcx,rsi
  4199d3:	mov    BYTE PTR [rsp+0x2f],al
  4199d7:	call   0x4195a0
  4199dc:	movzx  eax,BYTE PTR [rsp+0x2f]
  4199e1:	add    rsp,0x38
  4199e5:	pop    rbx
  4199e6:	pop    rsi
  4199e7:	ret    
  4199e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4199f0:	push   r14
  4199f2:	push   r13
  4199f4:	push   r12
  4199f6:	push   rbp
  4199f7:	push   rdi
  4199f8:	push   rsi
  4199f9:	push   rbx
  4199fa:	sub    rsp,0x40
  4199fe:	mov    rsi,QWORD PTR [rcx]
  419a01:	mov    rdi,QWORD PTR [rip+0x37b58]        # 0x451560
  419a08:	mov    r12,QWORD PTR [rip+0x37bd1]        # 0x4515e0
  419a0f:	mov    r13,rcx
  419a12:	mov    ebp,edx
  419a14:	mov    r10,QWORD PTR [rsi+0x30]
  419a18:	mov    eax,DWORD PTR [rsi+0x38]
  419a1b:	mov    r8,QWORD PTR [rsi]
  419a1e:	xchg   ax,ax
  419a20:	mov    ebx,eax
  419a22:	shl    rbx,0x4
  419a26:	add    rbx,r10
  419a29:	mov    rcx,QWORD PTR [rbx]
  419a2c:	cmp    rcx,r8
  419a2f:	ja     0x419c20
  419a35:	mov    edx,DWORD PTR [rbx+0x8]
  419a38:	lea    r9,[rcx+0x1]
  419a3c:	add    eax,0x1
  419a3f:	mov    DWORD PTR [rsi+0x38],eax
  419a42:	mov    r14,r9
  419a45:	sub    r14,QWORD PTR [rsi+0x8]
  419a49:	cmp    edx,0x20
  419a4c:	sete   r9b
  419a50:	je     0x419ad0
  419a52:	cmp    edx,0x5c
  419a55:	je     0x419ad0
  419a57:	mov    r9d,edx
  419a5a:	movzx  r9d,BYTE PTR [rdi+r9*1]
  419a5f:	test   r9b,r9b
  419a62:	je     0x419ac0
  419a64:	cmp    BYTE PTR [r13+0x427],0x0
  419a6c:	je     0x419a20
  419a6e:	test   ebp,ebp
  419a70:	jne    0x419b80
  419a76:	cmp    BYTE PTR [r13+0x41d],0x0
  419a7e:	je     0x419be0
  419a84:	mov    rax,QWORD PTR [r13+0x28]
  419a88:	mov    rcx,r13
  419a8b:	mov    r8d,DWORD PTR [rax+0x3c]
  419a8f:	lea    rax,[rip+0x2db8b]        # 0x447621
  419a96:	mov    DWORD PTR [rsp+0x30],r9d
  419a9b:	mov    DWORD PTR [rsp+0x28],edx
  419a9f:	mov    r9d,r14d
  419aa2:	mov    edx,0x4
  419aa7:	mov    QWORD PTR [rsp+0x20],rax
  419aac:	call   0x412780
  419ab1:	mov    r10,QWORD PTR [rsi+0x30]
  419ab5:	mov    eax,DWORD PTR [rsi+0x38]
  419ab8:	mov    r8,QWORD PTR [rsi]
  419abb:	jmp    0x419a20
  419ac0:	test   edx,edx
  419ac2:	je     0x419a20
  419ac8:	call   0x43f180
  419acd:	nop    DWORD PTR [rax]
  419ad0:	test   ebp,ebp
  419ad2:	jne    0x419afa
  419ad4:	test   r9b,r9b
  419ad7:	je     0x419afa
  419ad9:	mov    rax,QWORD PTR [r13+0x28]
  419add:	mov    r9d,r14d
  419ae0:	xor    edx,edx
  419ae2:	mov    rcx,r13
  419ae5:	mov    r8d,DWORD PTR [rax+0x3c]
  419ae9:	lea    rax,[rip+0x2dae0]        # 0x4475d0
  419af0:	mov    QWORD PTR [rsp+0x20],rax
  419af5:	call   0x412740
  419afa:	mov    rax,QWORD PTR [rsi+0x20]
  419afe:	cmp    QWORD PTR [rsi+0x10],rax
  419b02:	ja     0x419b50
  419b04:	mov    r9,QWORD PTR [r13+0x28]
  419b08:	mov    rax,QWORD PTR [rbx]
  419b0b:	mov    QWORD PTR [rsi+0x8],rax
  419b0f:	mov    eax,DWORD PTR [r9+0xc]
  419b13:	sub    eax,0x1
  419b16:	lea    rdx,[rax+rax*4]
  419b1a:	mov    rax,QWORD PTR [r9]
  419b1d:	lea    rdx,[rax+rdx*8]
  419b21:	mov    eax,DWORD PTR [r9+0x3c]
  419b25:	movzx  ecx,BYTE PTR [rdx+0x1c]
  419b29:	sub    eax,DWORD PTR [rdx]
  419b2b:	mov    r8d,DWORD PTR [rdx+0x10]
  419b2f:	shr    eax,cl
  419b31:	mov    rcx,r9
  419b34:	lea    edx,[r8+rax*1+0x1]
  419b39:	xor    r8d,r8d
  419b3c:	call   0x408830
  419b41:	mov    r10,QWORD PTR [rsi+0x30]
  419b45:	mov    eax,DWORD PTR [rsi+0x38]
  419b48:	mov    r8,QWORD PTR [rsi]
  419b4b:	jmp    0x419a20
  419b50:	mov    rax,QWORD PTR [r13+0x28]
  419b54:	mov    r9d,r14d
  419b57:	mov    edx,0x2
  419b5c:	mov    rcx,r13
  419b5f:	mov    r8d,DWORD PTR [rax+0x3c]
  419b63:	lea    rax,[rip+0x2da96]        # 0x447600
  419b6a:	mov    QWORD PTR [rsp+0x20],rax
  419b6f:	call   0x412740
  419b74:	mov    rax,QWORD PTR [rsi+0x20]
  419b78:	mov    QWORD PTR [rsi+0x10],rax
  419b7c:	jmp    0x419b04
  419b7e:	xchg   ax,ax
  419b80:	cmp    edx,0x2f
  419b83:	jne    0x419a20
  419b89:	cmp    BYTE PTR [r13+0x41d],0x0
  419b91:	jne    0x419c2f
  419b97:	movzx  r11d,BYTE PTR [rcx+0x3]
  419b9c:	lea    r9,[rcx+0x3]
  419ba0:	test   BYTE PTR [r12+r11*2+0x1],0x8
  419ba6:	mov    rcx,r11
  419ba9:	je     0x419bc3
  419bab:	nop    DWORD PTR [rax+rax*1+0x0]
  419bb0:	add    r9,0x1
  419bb4:	movzx  r11d,BYTE PTR [r9]
  419bb8:	test   BYTE PTR [r12+r11*2+0x1],0x8
  419bbe:	mov    rcx,r11
  419bc1:	jne    0x419bb0
  419bc3:	cmp    cl,0xa
  419bc6:	jne    0x419a20
  419bcc:	cmp    QWORD PTR [rbx+0x10],r9
  419bd0:	jbe    0x419a20
  419bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419be0:	mov    rax,QWORD PTR [r13+0x28]
  419be4:	mov    r9d,r14d
  419be7:	mov    rcx,r13
  419bea:	mov    r8d,DWORD PTR [rax+0x3c]
  419bee:	lea    rax,[rip+0x2da4b]        # 0x447640
  419bf5:	mov    DWORD PTR [rsp+0x28],edx
  419bf9:	mov    edx,0x4
  419bfe:	mov    QWORD PTR [rsp+0x20],rax
  419c03:	call   0x412780
  419c08:	mov    r10,QWORD PTR [rsi+0x30]
  419c0c:	mov    eax,DWORD PTR [rsi+0x38]
  419c0f:	mov    r8,QWORD PTR [rsi]
  419c12:	jmp    0x419a20
  419c17:	nop    WORD PTR [rax+rax*1+0x0]
  419c20:	add    rsp,0x40
  419c24:	pop    rbx
  419c25:	pop    rsi
  419c26:	pop    rdi
  419c27:	pop    rbp
  419c28:	pop    r12
  419c2a:	pop    r13
  419c2c:	pop    r14
  419c2e:	ret    
  419c2f:	cmp    rcx,QWORD PTR [rbx+0x10]
  419c33:	jne    0x419a20
  419c39:	jmp    0x419a84
  419c3e:	xchg   ax,ax
  419c40:	push   rbp
  419c41:	push   rdi
  419c42:	push   rsi
  419c43:	push   rbx
  419c44:	sub    rsp,0x38
  419c48:	mov    rdi,QWORD PTR [rcx]
  419c4b:	mov    rbp,rcx
  419c4e:	mov    rdx,QWORD PTR [rdi]
  419c51:	movzx  eax,BYTE PTR [rdx+0x1]
  419c55:	lea    rbx,[rdx+0x1]
  419c59:	cmp    al,0x2f
  419c5b:	jne    0x419c6d
  419c5d:	jmp    0x419d5b
  419c62:	cmp    al,0xa
  419c64:	je     0x419cd0
  419c66:	movzx  eax,BYTE PTR [rbx+0x1]
  419c6a:	mov    rbx,rsi
  419c6d:	cmp    al,0x2f
  419c6f:	lea    rsi,[rbx+0x1]
  419c73:	jne    0x419c62
  419c75:	cmp    BYTE PTR [rbx-0x1],0x2a
  419c79:	je     0x419d40
  419c7f:	cmp    BYTE PTR [rbp+0x424],0x0
  419c86:	je     0x419c66
  419c88:	movzx  eax,BYTE PTR [rbx+0x1]
  419c8c:	cmp    al,0x2a
  419c8e:	jne    0x419c6a
  419c90:	cmp    BYTE PTR [rbx+0x2],0x2f
  419c94:	je     0x419c6a
  419c96:	mov    rax,QWORD PTR [rbp+0x28]
  419c9a:	mov    r9,rsi
  419c9d:	sub    r9,QWORD PTR [rdi+0x8]
  419ca1:	mov    QWORD PTR [rdi],rsi
  419ca4:	mov    edx,0x2
  419ca9:	mov    rcx,rbp
  419cac:	mov    r8d,DWORD PTR [rax+0x3c]
  419cb0:	lea    rax,[rip+0x2d9b9]        # 0x447670
  419cb7:	mov    QWORD PTR [rsp+0x20],rax
  419cbc:	call   0x412780
  419cc1:	movzx  eax,BYTE PTR [rbx+0x1]
  419cc5:	jmp    0x419c6a
  419cc7:	nop    WORD PTR [rax+rax*1+0x0]
  419cd0:	mov    QWORD PTR [rdi],rbx
  419cd3:	mov    edx,0x1
  419cd8:	mov    rcx,rbp
  419cdb:	call   0x4199f0
  419ce0:	mov    rax,QWORD PTR [rdi+0x20]
  419ce4:	cmp    QWORD PTR [rdi+0x10],rax
  419ce8:	jae    0x419d68
  419cea:	mov    rcx,rbp
  419ced:	call   0x4195a0
  419cf2:	mov    r9,QWORD PTR [rbp+0x28]
  419cf6:	mov    r8,QWORD PTR [rdi+0x10]
  419cfa:	sub    r8d,DWORD PTR [rdi+0x8]
  419cfe:	mov    eax,DWORD PTR [r9+0xc]
  419d02:	sub    eax,0x1
  419d05:	lea    rdx,[rax+rax*4]
  419d09:	mov    rax,QWORD PTR [r9]
  419d0c:	lea    rdx,[rax+rdx*8]
  419d10:	mov    eax,DWORD PTR [r9+0x3c]
  419d14:	movzx  ecx,BYTE PTR [rdx+0x1c]
  419d18:	sub    eax,DWORD PTR [rdx]
  419d1a:	mov    r10d,DWORD PTR [rdx+0x10]
  419d1e:	shr    eax,cl
  419d20:	mov    rcx,r9
  419d23:	lea    edx,[r10+rax*1+0x1]
  419d28:	call   0x408830
  419d2d:	mov    rsi,QWORD PTR [rdi]
  419d30:	movzx  eax,BYTE PTR [rsi]
  419d33:	jmp    0x419c6a
  419d38:	nop    DWORD PTR [rax+rax*1+0x0]
  419d40:	mov    QWORD PTR [rdi],rsi
  419d43:	mov    edx,0x1
  419d48:	mov    rcx,rbp
  419d4b:	call   0x4199f0
  419d50:	xor    eax,eax
  419d52:	add    rsp,0x38
  419d56:	pop    rbx
  419d57:	pop    rsi
  419d58:	pop    rdi
  419d59:	pop    rbp
  419d5a:	ret    
  419d5b:	lea    rbx,[rdx+0x2]
  419d5f:	movzx  eax,BYTE PTR [rdx+0x2]
  419d63:	jmp    0x419c6d
  419d68:	mov    eax,0x1
  419d6d:	add    rsp,0x38
  419d71:	pop    rbx
  419d72:	pop    rsi
  419d73:	pop    rdi
  419d74:	pop    rbp
  419d75:	ret    
  419d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d80:	push   rsi
  419d81:	push   rbx
  419d82:	sub    rsp,0x38
  419d86:	movzx  eax,BYTE PTR [rdx]
  419d89:	mov    r11,QWORD PTR [rip+0x37850]        # 0x4515e0
  419d90:	mov    rbx,rcx
  419d93:	movzx  ecx,BYTE PTR [rdx+0x1]
  419d97:	lea    r8,[rdx+0x1]
  419d9b:	sub    eax,0x71
  419d9e:	test   WORD PTR [r11+rcx*2],0x204
  419da5:	mov    r9,rcx
  419da8:	je     0x419dcc
  419daa:	nop    WORD PTR [rax+rax*1+0x0]
  419db0:	add    r8,0x1
  419db4:	movzx  r10d,BYTE PTR [r8]
  419db8:	imul   eax,eax,0x43
  419dbb:	test   WORD PTR [r11+r10*2],0x204
  419dc2:	lea    eax,[rax+r9*1-0x71]
  419dc7:	mov    r9,r10
  419dca:	jne    0x419db0
  419dcc:	sub    r8,rdx
  419dcf:	mov    rcx,QWORD PTR [rbx+0x3f8]
  419dd6:	mov    DWORD PTR [rsp+0x20],0x1
  419dde:	lea    r9d,[rax+r8*1]
  419de2:	mov    r8d,r8d
  419de5:	call   0x41d6b0
  419dea:	movzx  edx,WORD PTR [rax+0x18]
  419dee:	mov    rsi,rax
  419df1:	shr    dx,0x6
  419df5:	test   dl,0x8
  419df8:	je     0x419e14
  419dfa:	cmp    BYTE PTR [rbx+0x12],0x0
  419dfe:	jne    0x419e14
  419e00:	and    edx,0x2
  419e03:	jne    0x419e20
  419e05:	cmp    rsi,QWORD PTR [rbx+0x4b0]
  419e0c:	je     0x419e58
  419e0e:	test   BYTE PTR [rsi+0x19],0x80
  419e12:	jne    0x419e3f
  419e14:	mov    rax,rsi
  419e17:	add    rsp,0x38
  419e1b:	pop    rbx
  419e1c:	pop    rsi
  419e1d:	ret    
  419e1e:	xchg   ax,ax
  419e20:	cmp    BYTE PTR [rbx+0x17],0x0
  419e24:	jne    0x419e05
  419e26:	mov    r9,QWORD PTR [rsi]
  419e29:	lea    r8,[rip+0x2d6fd]        # 0x44752d
  419e30:	mov    edx,0x3
  419e35:	mov    rcx,rbx
  419e38:	call   0x412660
  419e3d:	jmp    0x419e05
  419e3f:	mov    r9,QWORD PTR [rsi]
  419e42:	lea    r8,[rip+0x2d74f]        # 0x447598
  419e49:	mov    edx,0xf
  419e4e:	mov    rcx,rbx
  419e51:	call   0x412690
  419e56:	jmp    0x419e14
  419e58:	cmp    BYTE PTR [rbx+0x16],0x0
  419e5c:	jne    0x419e0e
  419e5e:	lea    r8,[rip+0x2d6eb]        # 0x447550
  419e65:	mov    edx,0x2
  419e6a:	mov    rcx,rbx
  419e6d:	call   0x412660
  419e72:	jmp    0x419e0e
  419e74:	xchg   ax,ax
  419e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e80:	lea    rax,[rcx+0x518]
  419e87:	ret    
  419e88:	nop    DWORD PTR [rax+rax*1+0x0]
  419e90:	push   rsi
  419e91:	push   rbx
  419e92:	sub    rsp,0x28
  419e96:	mov    edx,edx
  419e98:	mov    rsi,rcx
  419e9b:	lea    rbx,[rdx+rdx*2]
  419e9f:	shl    rbx,0x3
  419ea3:	mov    rcx,rbx
  419ea6:	call   0x4385d0
  419eab:	add    rbx,rax
  419eae:	mov    QWORD PTR [rsi+0x10],rax
  419eb2:	mov    QWORD PTR [rsi],0x0
  419eb9:	mov    QWORD PTR [rsi+0x18],rbx
  419ebd:	add    rsp,0x28
  419ec1:	pop    rbx
  419ec2:	pop    rsi
  419ec3:	ret    
  419ec4:	xchg   ax,ax
  419ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419ed0:	sub    rsp,0x28
  419ed4:	mov    eax,DWORD PTR [rcx+0x30]
  419ed7:	cmp    eax,0x1
  419eda:	je     0x419ef2
  419edc:	and    eax,0xfffffffd
  419edf:	jne    0x419f09
  419ee1:	mov    rax,QWORD PTR [rcx+0x18]
  419ee5:	sub    rax,QWORD PTR [rcx+0x10]
  419ee9:	shr    rax,0x3
  419eed:	add    rsp,0x28
  419ef1:	ret    
  419ef2:	mov    rax,QWORD PTR [rcx+0x18]
  419ef6:	sub    rax,QWORD PTR [rcx+0x10]
  419efa:	sar    rax,0x3
  419efe:	imul   eax,eax,0xaaaaaaab
  419f04:	add    rsp,0x28
  419f08:	ret    
  419f09:	call   0x43f180
  419f0e:	nop
  419f0f:	nop
  419f10:	push   r12
  419f12:	push   rbp
  419f13:	push   rdi
  419f14:	push   rsi
  419f15:	push   rbx
  419f16:	sub    rsp,0x20
  419f1a:	movabs rax,0xaaaaaaaaaaaaaaab
  419f24:	mov    rsi,rcx
  419f27:	mov    rcx,QWORD PTR [rcx+0x1d0]
  419f2e:	mov    rdi,QWORD PTR [rsi+0x1a8]
  419f35:	mov    ebp,DWORD PTR [rsi+0x1d8]
  419f3b:	mov    rbx,QWORD PTR [rcx+0x18]
  419f3f:	sub    rbx,rdi
  419f42:	sar    rbx,0x3
  419f46:	imul   rbx,rax
  419f4a:	test   rbp,rbp
  419f4d:	je     0x419f80
  419f4f:	cmp    rbx,rbp
  419f52:	mov    rdx,rdi
  419f55:	jle    0x419fb0
  419f57:	sub    rbx,0x1
  419f5b:	lea    rcx,[rdx+0x18]
  419f5f:	cmp    rbx,rbp
  419f62:	cmovg  rbx,rbp
  419f66:	lea    r8,[rbx+rbx*2]
  419f6a:	shl    r8,0x3
  419f6e:	call   0x43f0a0
  419f73:	mov    rax,QWORD PTR [rsi+0x1a8]
  419f7a:	jmp    0x419f8e
  419f7c:	nop    DWORD PTR [rax+0x0]
  419f80:	mov    rax,rdi
  419f83:	test   rbx,rbx
  419f86:	jne    0x419f8e
  419f88:	cmp    QWORD PTR [rcx+0x18],rax
  419f8c:	je     0x419ff3
  419f8e:	lea    rdx,[rax+0x18]
  419f92:	mov    QWORD PTR [rsi+0x1a8],rdx
  419f99:	mov    edx,DWORD PTR [rdi-0x18]
  419f9c:	mov    DWORD PTR [rax],edx
  419f9e:	add    rsp,0x20
  419fa2:	pop    rbx
  419fa3:	pop    rsi
  419fa4:	pop    rdi
  419fa5:	pop    rbp
  419fa6:	pop    r12
  419fa8:	ret    
  419fa9:	nop    DWORD PTR [rax+0x0]
  419fb0:	call   0x4191c0
  419fb5:	cmp    rbx,rbp
  419fb8:	mov    r12,rax
  419fbb:	jl     0x41a005
  419fbd:	mov    rcx,QWORD PTR [rsi+0x1d0]
  419fc4:	mov    rax,QWORD PTR [r12+0x10]
  419fc9:	cmp    rbx,0x1
  419fcd:	mov    rdx,QWORD PTR [rcx+0x18]
  419fd1:	mov    r8,QWORD PTR [rdx-0x18]
  419fd5:	mov    QWORD PTR [rax],r8
  419fd8:	mov    r8,QWORD PTR [rdx-0x10]
  419fdc:	mov    QWORD PTR [rax+0x8],r8
  419fe0:	mov    rdx,QWORD PTR [rdx-0x8]
  419fe4:	mov    QWORD PTR [rax+0x10],rdx
  419fe8:	jg     0x41a022
  419fea:	mov    rax,QWORD PTR [rsi+0x1a8]
  419ff1:	jmp    0x419f83
  419ff3:	call   0x4191c0
  419ff8:	mov    QWORD PTR [rsi+0x1d0],rax
  419fff:	mov    rax,QWORD PTR [rax+0x10]
  41a003:	jmp    0x419f8e
  41a005:	mov    rdx,QWORD PTR [rax+0x10]
  41a009:	mov    rax,rbp
  41a00c:	sub    rax,rbx
  41a00f:	lea    r8,[rax+rax*2]
  41a013:	lea    rcx,[rdx+0x18]
  41a017:	shl    r8,0x3
  41a01b:	call   0x43f0a0
  41a020:	jmp    0x419fbd
  41a022:	mov    rdx,QWORD PTR [rsi+0x1a8]
  41a029:	jmp    0x419f57
  41a02e:	xchg   ax,ax
  41a030:	cmp    BYTE PTR [rcx+0x10],0x0
  41a034:	jne    0x41a040
  41a036:	jmp    0x419950
  41a03b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a040:	xor    eax,eax
  41a042:	ret    
  41a043:	nop    DWORD PTR [rax]
  41a046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a050:	movzx  eax,BYTE PTR [rcx+0x4]
  41a054:	lea    rdx,[rip+0x2df25]        # 0x447f80
  41a05b:	shl    rax,0x4
  41a05f:	mov    eax,DWORD PTR [rdx+rax*1]
  41a062:	cmp    eax,0x1
  41a065:	je     0x41a080
  41a067:	cmp    eax,0x2
  41a06a:	jne    0x41a070
  41a06c:	mov    eax,DWORD PTR [rcx+0x8]
  41a06f:	ret    
  41a070:	mov    eax,0x6
  41a075:	ret    
  41a076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a080:	mov    rax,QWORD PTR [rcx+0x8]
  41a084:	mov    eax,DWORD PTR [rax+0x8]
  41a087:	lea    eax,[rax+rax*4]
  41a08a:	add    eax,eax
  41a08c:	ret    
  41a08d:	nop    DWORD PTR [rax]
  41a090:	push   rbp
  41a091:	push   rdi
  41a092:	push   rsi
  41a093:	push   rbx
  41a094:	sub    rsp,0x28
  41a098:	movzx  eax,BYTE PTR [rdx+0x4]
  41a09c:	mov    rdi,rdx
  41a09f:	lea    rdx,[rip+0x2deda]        # 0x447f80
  41a0a6:	mov    rbx,r8
  41a0a9:	mov    r8,rax
  41a0ac:	shl    rax,0x4
  41a0b0:	add    rax,rdx
  41a0b3:	mov    edx,DWORD PTR [rax]
  41a0b5:	cmp    edx,0x1
  41a0b8:	je     0x41a160
  41a0be:	jle    0x41a112
  41a0c0:	cmp    edx,0x2
  41a0c3:	je     0x41a0f0
  41a0c5:	cmp    edx,0x3
  41a0c8:	jne    0x41a0df
  41a0ca:	mov    r9,QWORD PTR [rax+0x8]
  41a0ce:	lea    r8,[rip+0x2d5af]        # 0x447684
  41a0d5:	mov    edx,0x4
  41a0da:	call   0x412660
  41a0df:	mov    rax,rbx
  41a0e2:	add    rsp,0x28
  41a0e6:	pop    rbx
  41a0e7:	pop    rsi
  41a0e8:	pop    rdi
  41a0e9:	pop    rbp
  41a0ea:	ret    
  41a0eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a0f0:	mov    r8d,DWORD PTR [rdi+0x8]
  41a0f4:	mov    rdx,QWORD PTR [rdi+0x10]
  41a0f8:	mov    rcx,rbx
  41a0fb:	call   0x43f0a8
  41a100:	mov    eax,DWORD PTR [rdi+0x8]
  41a103:	add    rbx,rax
  41a106:	mov    rax,rbx
  41a109:	add    rsp,0x28
  41a10d:	pop    rbx
  41a10e:	pop    rsi
  41a10f:	pop    rdi
  41a110:	pop    rbp
  41a111:	ret    
  41a112:	test   edx,edx
  41a114:	jne    0x41a0df
  41a116:	movzx  edx,WORD PTR [rdi+0x6]
  41a11a:	test   dl,0x2
  41a11d:	jne    0x41a1c0
  41a123:	and    edx,0x10
  41a126:	jne    0x41a160
  41a128:	mov    rax,QWORD PTR [rax+0x8]
  41a12c:	lea    rdx,[rax+0x1]
  41a130:	movzx  eax,BYTE PTR [rax]
  41a133:	test   al,al
  41a135:	je     0x41a0df
  41a137:	nop    WORD PTR [rax+rax*1+0x0]
  41a140:	add    rbx,0x1
  41a144:	add    rdx,0x1
  41a148:	mov    BYTE PTR [rbx-0x1],al
  41a14b:	movzx  eax,BYTE PTR [rdx-0x1]
  41a14f:	test   al,al
  41a151:	jne    0x41a140
  41a153:	mov    rax,rbx
  41a156:	add    rsp,0x28
  41a15a:	pop    rbx
  41a15b:	pop    rsi
  41a15c:	pop    rdi
  41a15d:	pop    rbp
  41a15e:	ret    
  41a15f:	nop
  41a160:	test   r9b,r9b
  41a163:	mov    rax,QWORD PTR [rdi+0x8]
  41a167:	jne    0x41a1e0
  41a169:	mov    edx,DWORD PTR [rax+0x8]
  41a16c:	mov    rbp,QWORD PTR [rax]
  41a16f:	test   edx,edx
  41a171:	je     0x41a0df
  41a177:	xor    esi,esi
  41a179:	jmp    0x41a1a2
  41a17b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a180:	mov    rax,QWORD PTR [rax]
  41a183:	add    rbx,0x1
  41a187:	movzx  eax,BYTE PTR [rax+rsi*1]
  41a18b:	mov    BYTE PTR [rbx-0x1],al
  41a18e:	mov    rax,QWORD PTR [rdi+0x8]
  41a192:	add    rsi,0x1
  41a196:	mov    edx,DWORD PTR [rax+0x8]
  41a199:	cmp    rdx,rsi
  41a19c:	jbe    0x41a0df
  41a1a2:	lea    rdx,[rbp+rsi*1+0x0]
  41a1a7:	test   BYTE PTR [rdx],0x80
  41a1aa:	je     0x41a180
  41a1ac:	mov    rcx,rbx
  41a1af:	add    rbx,0xa
  41a1b3:	call   0x4190d0
  41a1b8:	lea    rsi,[rax+rsi*1-0x1]
  41a1bd:	jmp    0x41a18e
  41a1bf:	nop
  41a1c0:	sub    r8d,0x25
  41a1c4:	lea    rax,[rip+0x2e2f5]        # 0x4484c0
  41a1cb:	movsxd r8,r8d
  41a1ce:	mov    rax,QWORD PTR [rax+r8*8]
  41a1d2:	jmp    0x41a12c
  41a1d7:	nop    WORD PTR [rax+rax*1+0x0]
  41a1e0:	mov    r8d,DWORD PTR [rax+0x8]
  41a1e4:	mov    rdx,QWORD PTR [rax]
  41a1e7:	mov    rcx,rbx
  41a1ea:	call   0x43f0a8
  41a1ef:	mov    rax,QWORD PTR [rdi+0x8]
  41a1f3:	mov    eax,DWORD PTR [rax+0x8]
  41a1f6:	add    rbx,rax
  41a1f9:	jmp    0x41a0df
  41a1fe:	xchg   ax,ax
  41a200:	push   rbp
  41a201:	push   rdi
  41a202:	push   rsi
  41a203:	push   rbx
  41a204:	sub    rsp,0x48
  41a208:	mov    eax,DWORD PTR [r8]
  41a20b:	cmp    DWORD PTR [rcx+0x460],eax
  41a211:	jge    0x41a2b0
  41a217:	cmp    BYTE PTR [rcx+0x12],0x0
  41a21b:	jne    0x41a2b0
  41a221:	movzx  eax,BYTE PTR [rdx+0x4]
  41a225:	lea    r9,[rip+0x2dd54]        # 0x447f80
  41a22c:	shl    rax,0x4
  41a230:	mov    eax,DWORD PTR [r9+rax*1]
  41a234:	cmp    eax,0x1
  41a237:	je     0x41a2d0
  41a23d:	cmp    eax,0x2
  41a240:	je     0x41a2c0
  41a242:	mov    eax,0x6
  41a247:	mov    rdi,rdx
  41a24a:	mov    rbx,rcx
  41a24d:	mov    rcx,rax
  41a250:	mov    rsi,r8
  41a253:	call   0x4385d0
  41a258:	xor    r9d,r9d
  41a25b:	mov    rbp,rax
  41a25e:	mov    r8,rax
  41a261:	mov    rdx,rdi
  41a264:	mov    rcx,rbx
  41a267:	call   0x41a090
  41a26c:	sub    rax,rbp
  41a26f:	cmp    DWORD PTR [rsi],0x1
  41a272:	mov    QWORD PTR [rsp+0x30],rbp
  41a277:	mov    DWORD PTR [rsp+0x28],eax
  41a27b:	je     0x41a2e1
  41a27d:	lea    rax,[rip+0x2d42b]        # 0x4476af
  41a284:	mov    QWORD PTR [rsp+0x20],rax
  41a289:	mov    r8d,DWORD PTR [rdi]
  41a28c:	mov    rcx,rbx
  41a28f:	xor    r9d,r9d
  41a292:	mov    edx,0x10
  41a297:	call   0x412780
  41a29c:	mov    rcx,rbp
  41a29f:	add    rsp,0x48
  41a2a3:	pop    rbx
  41a2a4:	pop    rsi
  41a2a5:	pop    rdi
  41a2a6:	pop    rbp
  41a2a7:	jmp    0x43f100
  41a2ac:	nop    DWORD PTR [rax+0x0]
  41a2b0:	add    rsp,0x48
  41a2b4:	pop    rbx
  41a2b5:	pop    rsi
  41a2b6:	pop    rdi
  41a2b7:	pop    rbp
  41a2b8:	ret    
  41a2b9:	nop    DWORD PTR [rax+0x0]
  41a2c0:	mov    eax,DWORD PTR [rdx+0x8]
  41a2c3:	jmp    0x41a247
  41a2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a2d0:	mov    rax,QWORD PTR [rdx+0x8]
  41a2d4:	mov    eax,DWORD PTR [rax+0x8]
  41a2d7:	lea    eax,[rax+rax*4]
  41a2da:	add    eax,eax
  41a2dc:	jmp    0x41a247
  41a2e1:	lea    rax,[rip+0x2d3b1]        # 0x447699
  41a2e8:	jmp    0x41a284
  41a2ea:	nop    WORD PTR [rax+rax*1+0x0]
  41a2f0:	test   dl,0x2
  41a2f3:	jne    0x41a310
  41a2f5:	and    edx,0x10
  41a2f8:	jne    0x41a322
  41a2fa:	movsxd rcx,ecx
  41a2fd:	lea    rax,[rip+0x2dc7c]        # 0x447f80
  41a304:	shl    rcx,0x4
  41a308:	mov    rax,QWORD PTR [rax+rcx*1+0x8]
  41a30d:	ret    
  41a30e:	xchg   ax,ax
  41a310:	sub    ecx,0x25
  41a313:	lea    rax,[rip+0x2e1a6]        # 0x4484c0
  41a31a:	movsxd rcx,ecx
  41a31d:	mov    rax,QWORD PTR [rax+rcx*8]
  41a321:	ret    
  41a322:	jmp    0x424520
  41a327:	nop    WORD PTR [rax+rax*1+0x0]
  41a330:	push   r12
  41a332:	push   rbp
  41a333:	push   rdi
  41a334:	push   rsi
  41a335:	push   rbx
  41a336:	sub    rsp,0x30
  41a33a:	movzx  eax,BYTE PTR [rcx+0x4]
  41a33e:	mov    rsi,rdx
  41a341:	lea    rdx,[rip+0x2dc38]        # 0x447f80
  41a348:	mov    rdi,rcx
  41a34b:	mov    rcx,rax
  41a34e:	shl    rax,0x4
  41a352:	add    rax,rdx
  41a355:	mov    edx,DWORD PTR [rax]
  41a357:	cmp    edx,0x1
  41a35a:	je     0x41a3b0
  41a35c:	cmp    edx,0x2
  41a35f:	je     0x41a422
  41a365:	test   edx,edx
  41a367:	je     0x41a374
  41a369:	add    rsp,0x30
  41a36d:	pop    rbx
  41a36e:	pop    rsi
  41a36f:	pop    rdi
  41a370:	pop    rbp
  41a371:	pop    r12
  41a373:	ret    
  41a374:	movzx  edx,WORD PTR [rdi+0x6]
  41a378:	test   dl,0x2
  41a37b:	jne    0x41a443
  41a381:	and    edx,0x10
  41a384:	jne    0x41a3b0
  41a386:	mov    rbx,QWORD PTR [rax+0x8]
  41a38a:	movzx  ecx,BYTE PTR [rbx]
  41a38d:	nop    DWORD PTR [rax]
  41a390:	add    rbx,0x1
  41a394:	mov    rdx,rsi
  41a397:	call   0x43f090
  41a39c:	movzx  ecx,BYTE PTR [rbx]
  41a39f:	test   ecx,ecx
  41a3a1:	jne    0x41a390
  41a3a3:	add    rsp,0x30
  41a3a7:	pop    rbx
  41a3a8:	pop    rsi
  41a3a9:	pop    rdi
  41a3aa:	pop    rbp
  41a3ab:	pop    r12
  41a3ad:	ret    
  41a3ae:	xchg   ax,ax
  41a3b0:	mov    rax,QWORD PTR [rdi+0x8]
  41a3b4:	mov    edx,DWORD PTR [rax+0x8]
  41a3b7:	mov    rbp,QWORD PTR [rax]
  41a3ba:	test   edx,edx
  41a3bc:	je     0x41a369
  41a3be:	xor    ebx,ebx
  41a3c0:	lea    r12,[rsp+0x20]
  41a3c5:	jmp    0x41a407
  41a3c7:	nop    WORD PTR [rax+rax*1+0x0]
  41a3d0:	mov    rcx,r12
  41a3d3:	call   0x4190d0
  41a3d8:	mov    r9,rsi
  41a3db:	mov    r8d,0xa
  41a3e1:	mov    edx,0x1
  41a3e6:	mov    rcx,r12
  41a3e9:	lea    rbx,[rbx+rax*1-0x1]
  41a3ee:	call   0x43f0e0
  41a3f3:	mov    rax,QWORD PTR [rdi+0x8]
  41a3f7:	add    rbx,0x1
  41a3fb:	mov    edx,DWORD PTR [rax+0x8]
  41a3fe:	cmp    rdx,rbx
  41a401:	jbe    0x41a369
  41a407:	lea    rdx,[rbp+rbx*1+0x0]
  41a40c:	test   BYTE PTR [rdx],0x80
  41a40f:	jne    0x41a3d0
  41a411:	mov    rax,QWORD PTR [rax]
  41a414:	mov    rdx,rsi
  41a417:	movzx  ecx,BYTE PTR [rax+rbx*1]
  41a41b:	call   0x43f118
  41a420:	jmp    0x41a3f3
  41a422:	mov    r8d,DWORD PTR [rdi+0x8]
  41a426:	mov    rcx,QWORD PTR [rdi+0x10]
  41a42a:	mov    r9,rsi
  41a42d:	mov    edx,0x1
  41a432:	call   0x43f0e0
  41a437:	nop
  41a438:	add    rsp,0x30
  41a43c:	pop    rbx
  41a43d:	pop    rsi
  41a43e:	pop    rdi
  41a43f:	pop    rbp
  41a440:	pop    r12
  41a442:	ret    
  41a443:	sub    ecx,0x25
  41a446:	lea    rax,[rip+0x2e073]        # 0x4484c0
  41a44d:	movsxd rcx,ecx
  41a450:	mov    rbx,QWORD PTR [rax+rcx*8]
  41a454:	jmp    0x41a38a
  41a459:	nop    DWORD PTR [rax+0x0]
  41a460:	sub    rsp,0x28
  41a464:	mov    r9d,DWORD PTR [rcx+0x4]
  41a468:	mov    r8d,DWORD PTR [rdx+0x4]
  41a46c:	xor    eax,eax
  41a46e:	and    r9d,0xffff00ff
  41a475:	and    r8d,0xffff00ff
  41a47c:	cmp    r9d,r8d
  41a47f:	je     0x41a490
  41a481:	add    rsp,0x28
  41a485:	ret    
  41a486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a490:	movzx  r8d,BYTE PTR [rcx+0x4]
  41a495:	lea    r10,[rip+0x2dae4]        # 0x447f80
  41a49c:	mov    r9,r8
  41a49f:	shl    r8,0x4
  41a4a3:	mov    r8d,DWORD PTR [r10+r8*1]
  41a4a7:	cmp    r8d,0x2
  41a4ab:	je     0x41a4e0
  41a4ad:	cmp    r8d,0x3
  41a4b1:	je     0x41a4d0
  41a4b3:	cmp    r8d,0x1
  41a4b7:	je     0x41a501
  41a4b9:	cmp    r9b,0x26
  41a4bd:	mov    al,0x1
  41a4bf:	jne    0x41a481
  41a4c1:	mov    eax,DWORD PTR [rdx+0x8]
  41a4c4:	cmp    DWORD PTR [rcx+0x8],eax
  41a4c7:	sete   al
  41a4ca:	movzx  eax,al
  41a4cd:	jmp    0x41a481
  41a4cf:	nop
  41a4d0:	cmp    r9b,0x4e
  41a4d4:	mov    eax,0x1
  41a4d9:	jne    0x41a481
  41a4db:	jmp    0x41a4c1
  41a4dd:	nop    DWORD PTR [rax]
  41a4e0:	mov    r8d,DWORD PTR [rcx+0x8]
  41a4e4:	cmp    r8d,DWORD PTR [rdx+0x8]
  41a4e8:	jne    0x41a481
  41a4ea:	mov    rdx,QWORD PTR [rdx+0x10]
  41a4ee:	mov    rcx,QWORD PTR [rcx+0x10]
  41a4f2:	call   0x43f0b0
  41a4f7:	test   eax,eax
  41a4f9:	sete   al
  41a4fc:	movzx  eax,al
  41a4ff:	jmp    0x41a481
  41a501:	mov    rax,QWORD PTR [rdx+0x8]
  41a505:	cmp    QWORD PTR [rcx+0x8],rax
  41a509:	sete   al
  41a50c:	movzx  eax,al
  41a50f:	jmp    0x41a481
  41a514:	xchg   ax,ax
  41a516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a520:	push   rbx
  41a521:	test   BYTE PTR [rdx+0x6],0x10
  41a525:	movzx  r9d,BYTE PTR [rdx+0x4]
  41a52a:	mov    eax,0x35
  41a52f:	movzx  r10d,WORD PTR [r8+0x6]
  41a534:	movzx  ebx,BYTE PTR [r8+0x4]
  41a539:	cmovne r9,rax
  41a53d:	test   r10b,0x10
  41a541:	jne    0x41a5c0
  41a543:	movzx  r11d,bl
  41a547:	movsxd rax,r11d
  41a54a:	and    r10d,0x2
  41a54e:	je     0x41a580
  41a550:	lea    r10,[rip+0x2df69]        # 0x4484c0
  41a557:	sub    eax,0x25
  41a55a:	cdqe   
  41a55c:	mov    rax,QWORD PTR [r10+rax*8]
  41a560:	movzx  r10d,BYTE PTR [rax]
  41a564:	cmp    r10d,0x3d
  41a568:	jne    0x41a59c
  41a56a:	cmp    r9d,0xd
  41a56e:	mov    eax,0x1
  41a573:	jg     0x41a59c
  41a575:	pop    rbx
  41a576:	ret    
  41a577:	nop    WORD PTR [rax+rax*1+0x0]
  41a580:	lea    r10,[rip+0x2d9f9]        # 0x447f80
  41a587:	shl    rax,0x4
  41a58b:	add    rax,r10
  41a58e:	mov    r10d,DWORD PTR [rax]
  41a591:	test   r10d,r10d
  41a594:	je     0x41a5d0
  41a596:	mov    r10d,0xffffffff
  41a59c:	cmp    r9d,0x41
  41a5a0:	ja     0x41a65d
  41a5a6:	lea    rax,[rip+0x2d117]        # 0x4476c4
  41a5ad:	movsxd r9,DWORD PTR [rax+r9*4]
  41a5b1:	add    rax,r9
  41a5b4:	jmp    rax
  41a5b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a5c0:	mov    eax,0x35
  41a5c5:	mov    r11d,0x35
  41a5cb:	jmp    0x41a54a
  41a5d0:	mov    rax,QWORD PTR [rax+0x8]
  41a5d4:	movzx  r10d,BYTE PTR [rax]
  41a5d8:	jmp    0x41a564
  41a5da:	nop    WORD PTR [rax+rax*1+0x0]
  41a5e0:	and    r10d,0xfffffffb
  41a5e4:	xor    eax,eax
  41a5e6:	cmp    r10d,0x3a
  41a5ea:	sete   al
  41a5ed:	pop    rbx
  41a5ee:	ret    
  41a5ef:	nop
  41a5f0:	xor    eax,eax
  41a5f2:	cmp    r10d,0x3e
  41a5f6:	sete   al
  41a5f9:	pop    rbx
  41a5fa:	ret    
  41a5fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a600:	xor    eax,eax
  41a602:	cmp    r10d,0x7c
  41a606:	sete   al
  41a609:	pop    rbx
  41a60a:	ret    
  41a60b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a610:	xor    eax,eax
  41a612:	cmp    r10d,0x2a
  41a616:	sete   al
  41a619:	pop    rbx
  41a61a:	ret    
  41a61b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a620:	sub    r10d,0x23
  41a624:	xor    eax,eax
  41a626:	and    r10d,0xfffffffd
  41a62a:	sete   al
  41a62d:	pop    rbx
  41a62e:	ret    
  41a62f:	nop
  41a630:	mov    rax,QWORD PTR [rdx+0x10]
  41a634:	cmp    r11d,0x35
  41a638:	movzx  edx,BYTE PTR [rax]
  41a63b:	jne    0x41a64b
  41a63d:	cmp    dl,0x5c
  41a640:	mov    eax,0x1
  41a645:	je     0x41a575
  41a64b:	cmp    dl,0x40
  41a64e:	jne    0x41a65d
  41a650:	cmp    BYTE PTR [rcx+0x41a],0x0
  41a657:	jne    0x41a788
  41a65d:	xor    eax,eax
  41a65f:	pop    rbx
  41a660:	ret    
  41a661:	and    r11d,0xfffffffd
  41a665:	mov    eax,0x1
  41a66a:	cmp    r11d,0x35
  41a66e:	je     0x41a575
  41a674:	lea    eax,[r10-0x2d]
  41a678:	cmp    eax,0x1
  41a67b:	setbe  dl
  41a67e:	cmp    r10d,0x2b
  41a682:	sete   al
  41a685:	or     eax,edx
  41a687:	movzx  eax,al
  41a68a:	pop    rbx
  41a68b:	ret    
  41a68c:	nop    DWORD PTR [rax+0x0]
  41a690:	cmp    r11d,0x37
  41a694:	je     0x41a7a0
  41a69a:	mov    eax,r11d
  41a69d:	and    eax,0xfffffff7
  41a6a0:	cmp    eax,0x35
  41a6a3:	sete   dl
  41a6a6:	cmp    r11d,0x38
  41a6aa:	sete   al
  41a6ad:	or     eax,edx
  41a6af:	movzx  eax,al
  41a6b2:	pop    rbx
  41a6b3:	ret    
  41a6b4:	cmp    r10d,0x2e
  41a6b8:	sete   dl
  41a6bb:	cmp    r10d,0x25
  41a6bf:	sete   al
  41a6c2:	or     eax,edx
  41a6c4:	cmp    r11d,0x37
  41a6c8:	sete   dl
  41a6cb:	or     eax,edx
  41a6cd:	movzx  eax,al
  41a6d0:	pop    rbx
  41a6d1:	ret    
  41a6d2:	xor    eax,eax
  41a6d4:	cmp    r10d,0x26
  41a6d8:	sete   al
  41a6db:	pop    rbx
  41a6dc:	ret    
  41a6dd:	nop    DWORD PTR [rax]
  41a6e0:	xor    eax,eax
  41a6e2:	cmp    BYTE PTR [rcx+0x43e],0x0
  41a6e9:	je     0x41a575
  41a6ef:	cmp    r11d,0x35
  41a6f3:	mov    al,0x1
  41a6f5:	je     0x41a575
  41a6fb:	lea    rdx,[rip+0x2d87e]        # 0x447f80
  41a702:	shl    rbx,0x4
  41a706:	xor    al,al
  41a708:	cmp    DWORD PTR [rdx+rbx*1],0x2
  41a70c:	jne    0x41a575
  41a712:	mov    rax,QWORD PTR [r8+0x10]
  41a716:	movzx  edx,BYTE PTR [rax]
  41a719:	mov    rax,QWORD PTR [rip+0x36ec0]        # 0x4515e0
  41a720:	movzx  eax,WORD PTR [rax+rdx*2]
  41a724:	shr    ax,0x9
  41a728:	and    eax,0x1
  41a72b:	pop    rbx
  41a72c:	ret    
  41a72d:	nop    DWORD PTR [rax]
  41a730:	cmp    r10d,0x2a
  41a734:	sete   dl
  41a737:	cmp    r10d,0x2f
  41a73b:	sete   al
  41a73e:	or     eax,edx
  41a740:	movzx  eax,al
  41a743:	pop    rbx
  41a744:	ret    
  41a745:	cmp    r10d,0x3e
  41a749:	sete   dl
  41a74c:	cmp    r10d,0x2d
  41a750:	sete   al
  41a753:	or     eax,edx
  41a755:	movzx  eax,al
  41a758:	pop    rbx
  41a759:	ret    
  41a75a:	nop    WORD PTR [rax+rax*1+0x0]
  41a760:	xor    eax,eax
  41a762:	cmp    r10d,0x2b
  41a766:	sete   al
  41a769:	pop    rbx
  41a76a:	ret    
  41a76b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a770:	lea    eax,[r10-0x3a]
  41a774:	and    eax,0xfffffffd
  41a777:	sete   dl
  41a77a:	cmp    r10d,0x25
  41a77e:	sete   al
  41a781:	or     eax,edx
  41a783:	movzx  eax,al
  41a786:	pop    rbx
  41a787:	ret    
  41a788:	and    r11d,0xfffffff7
  41a78c:	xor    eax,eax
  41a78e:	cmp    r11d,0x35
  41a792:	sete   al
  41a795:	pop    rbx
  41a796:	ret    
  41a797:	nop    WORD PTR [rax+rax*1+0x0]
  41a7a0:	mov    edx,DWORD PTR [r8+0x8]
  41a7a4:	test   edx,edx
  41a7a6:	je     0x41a7ed
  41a7a8:	mov    rax,QWORD PTR [r8+0x10]
  41a7ac:	sub    edx,0x1
  41a7af:	mov    r9,QWORD PTR [rip+0x36e2a]        # 0x4515e0
  41a7b6:	lea    r10,[rax+rdx*1+0x1]
  41a7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a7c0:	movzx  r8d,BYTE PTR [rax]
  41a7c4:	test   WORD PTR [r9+r8*2],0x204
  41a7cb:	jne    0x41a7e4
  41a7cd:	cmp    r8b,0x24
  41a7d1:	jne    0x41a69a
  41a7d7:	cmp    BYTE PTR [rcx+0x430],0x0
  41a7de:	je     0x41a69a
  41a7e4:	add    rax,0x1
  41a7e8:	cmp    rax,r10
  41a7eb:	jne    0x41a7c0
  41a7ed:	mov    eax,0x1
  41a7f2:	pop    rbx
  41a7f3:	ret    
  41a7f4:	xchg   ax,ax
  41a7f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a800:	push   rdi
  41a801:	push   rsi
  41a802:	push   rbx
  41a803:	sub    rsp,0x20
  41a807:	mov    rdi,rcx
  41a80a:	mov    rsi,rdx
  41a80d:	call   0x40c760
  41a812:	mov    rbx,rax
  41a815:	cmp    BYTE PTR [rbx+0x4],0x16
  41a819:	mov    rdx,rsi
  41a81c:	je     0x41a84d
  41a81e:	mov    rcx,rbx
  41a821:	call   0x41a330
  41a826:	mov    rcx,rdi
  41a829:	call   0x40c760
  41a82e:	test   BYTE PTR [rax+0x6],0x1
  41a832:	mov    rbx,rax
  41a835:	je     0x41a815
  41a837:	mov    rdx,rsi
  41a83a:	mov    ecx,0x20
  41a83f:	call   0x43f090
  41a844:	cmp    BYTE PTR [rbx+0x4],0x16
  41a848:	mov    rdx,rsi
  41a84b:	jne    0x41a81e
  41a84d:	mov    ecx,0xa
  41a852:	add    rsp,0x20
  41a856:	pop    rbx
  41a857:	pop    rsi
  41a858:	pop    rdi
  41a859:	jmp    0x43f090
  41a85e:	xchg   ax,ax
  41a860:	push   r14
  41a862:	push   r13
  41a864:	push   r12
  41a866:	push   rbp
  41a867:	push   rdi
  41a868:	push   rsi
  41a869:	push   rbx
  41a86a:	sub    rsp,0x20
  41a86e:	test   rdx,rdx
  41a871:	mov    rbp,rcx
  41a874:	mov    r12,rdx
  41a877:	je     0x41a980
  41a87d:	mov    rcx,rdx
  41a880:	call   0x43f028
  41a885:	lea    ecx,[rax+0x78]
  41a888:	mov    rbx,rax
  41a88b:	add    ebx,0x2
  41a88e:	mov    rsi,rcx
  41a891:	call   0x4385d0
  41a896:	lea    rdx,[rip+0x2cf2f]        # 0x4477cc
  41a89d:	mov    r8,r12
  41a8a0:	mov    rcx,rax
  41a8a3:	mov    rdi,rax
  41a8a6:	call   0x43f490
  41a8ab:	mov    rcx,rbp
  41a8ae:	lea    r12,[rip+0x2d6cb]        # 0x447f80
  41a8b5:	call   0x40c760
  41a8ba:	mov    r14,rax
  41a8bd:	nop    DWORD PTR [rax]
  41a8c0:	movzx  r8d,BYTE PTR [r14+0x4]
  41a8c5:	cmp    r8b,0x16
  41a8c9:	je     0x41a947
  41a8cb:	shl    r8,0x4
  41a8cf:	mov    eax,DWORD PTR [r12+r8*1]
  41a8d3:	cmp    eax,0x1
  41a8d6:	je     0x41a960
  41a8dc:	cmp    eax,0x2
  41a8df:	jne    0x41a971
  41a8e5:	mov    eax,DWORD PTR [r14+0x8]
  41a8e9:	lea    eax,[rbx+rax*1+0x2]
  41a8ed:	cmp    esi,eax
  41a8ef:	jae    0x41a905
  41a8f1:	add    esi,esi
  41a8f3:	mov    rcx,rdi
  41a8f6:	cmp    eax,esi
  41a8f8:	cmovae esi,eax
  41a8fb:	mov    edx,esi
  41a8fd:	call   0x438650
  41a902:	mov    rdi,rax
  41a905:	lea    r8,[rdi+rbx*1]
  41a909:	xor    r9d,r9d
  41a90c:	mov    rdx,r14
  41a90f:	mov    rcx,rbp
  41a912:	call   0x41a090
  41a917:	mov    rcx,rbp
  41a91a:	sub    rax,rdi
  41a91d:	mov    r13,rax
  41a920:	mov    ebx,eax
  41a922:	call   0x40c760
  41a927:	test   BYTE PTR [rax+0x6],0x1
  41a92b:	mov    r14,rax
  41a92e:	je     0x41a8c0
  41a930:	lea    ebx,[r13+0x1]
  41a934:	mov    r13d,r13d
  41a937:	mov    BYTE PTR [rdi+r13*1],0x20
  41a93c:	movzx  r8d,BYTE PTR [r14+0x4]
  41a941:	cmp    r8b,0x16
  41a945:	jne    0x41a8cb
  41a947:	mov    rax,rdi
  41a94a:	mov    BYTE PTR [rdi+rbx*1],0x0
  41a94e:	add    rsp,0x20
  41a952:	pop    rbx
  41a953:	pop    rsi
  41a954:	pop    rdi
  41a955:	pop    rbp
  41a956:	pop    r12
  41a958:	pop    r13
  41a95a:	pop    r14
  41a95c:	ret    
  41a95d:	nop    DWORD PTR [rax]
  41a960:	mov    rax,QWORD PTR [r14+0x8]
  41a964:	mov    eax,DWORD PTR [rax+0x8]
  41a967:	lea    eax,[rax+rax*4]
  41a96a:	add    eax,eax
  41a96c:	jmp    0x41a8e9
  41a971:	mov    eax,0x6
  41a976:	jmp    0x41a8e9
  41a97b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a980:	mov    ecx,0x78
  41a985:	mov    esi,0x78
  41a98a:	xor    ebx,ebx
  41a98c:	call   0x4385d0
  41a991:	mov    rdi,rax
  41a994:	jmp    0x41a8ab
  41a999:	nop    DWORD PTR [rax+0x0]
  41a9a0:	mov    r8,rdx
  41a9a3:	jmp    0x41a9a8
  41a9a5:	mov    r8,rax
  41a9a8:	mov    rax,QWORD PTR [r8]
  41a9ab:	test   rax,rax
  41a9ae:	jne    0x41a9a5
  41a9b0:	mov    rax,QWORD PTR [rcx+0x48]
  41a9b4:	mov    QWORD PTR [r8],rax
  41a9b7:	mov    QWORD PTR [rcx+0x48],rdx
  41a9bb:	ret    
  41a9bc:	nop    DWORD PTR [rax+0x0]
  41a9c0:	push   rbx
  41a9c1:	sub    rsp,0x20
  41a9c5:	mov    rax,QWORD PTR [rcx+0x48]
  41a9c9:	lea    r8,[rcx+0x48]
  41a9cd:	test   rax,rax
  41a9d0:	je     0x41a9fd
  41a9d2:	lea    r9,[rdx+rdx*2]
  41a9d6:	shr    r9,1
  41a9d9:	add    r9,0x1f40
  41a9e0:	mov    rcx,QWORD PTR [rax+0x18]
  41a9e4:	sub    rcx,QWORD PTR [rax+0x8]
  41a9e8:	cmp    rcx,rdx
  41a9eb:	jb     0x41a9f2
  41a9ed:	cmp    rcx,r9
  41a9f0:	jbe    0x41aa50
  41a9f2:	mov    r8,rax
  41a9f5:	mov    rax,QWORD PTR [rax]
  41a9f8:	test   rax,rax
  41a9fb:	jne    0x41a9e0
  41a9fd:	cmp    rdx,0x1f3f
  41aa04:	mov    ecx,0x1f60
  41aa09:	mov    ebx,0x1f40
  41aa0e:	ja     0x41aa35
  41aa10:	call   0x4385d0
  41aa15:	lea    rdx,[rax+rbx*1]
  41aa19:	mov    QWORD PTR [rdx+0x8],rax
  41aa1d:	mov    QWORD PTR [rdx+0x10],rax
  41aa21:	mov    rax,rdx
  41aa24:	mov    QWORD PTR [rdx+0x18],rdx
  41aa28:	mov    QWORD PTR [rdx],0x0
  41aa2f:	add    rsp,0x20
  41aa33:	pop    rbx
  41aa34:	ret    
  41aa35:	add    rdx,0x7
  41aa39:	mov    rbx,rdx
  41aa3c:	and    rbx,0xfffffffffffffff8
  41aa40:	lea    rcx,[rbx+0x20]
  41aa44:	jmp    0x41aa10
  41aa46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aa50:	mov    rdx,QWORD PTR [rax]
  41aa53:	mov    QWORD PTR [r8],rdx
  41aa56:	mov    rdx,QWORD PTR [rax+0x8]
  41aa5a:	mov    QWORD PTR [rax],0x0
  41aa61:	mov    QWORD PTR [rax+0x10],rdx
  41aa65:	add    rsp,0x20
  41aa69:	pop    rbx
  41aa6a:	ret    
  41aa6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa70:	push   rsi
  41aa71:	push   rbx
  41aa72:	sub    rsp,0x28
  41aa76:	mov    rax,QWORD PTR [rdx+0x18]
  41aa7a:	sub    rax,QWORD PTR [rdx+0x10]
  41aa7e:	mov    rbx,rdx
  41aa81:	lea    rdx,[r8+rax*2]
  41aa85:	call   0x41a9c0
  41aa8a:	mov    rdx,QWORD PTR [rbx+0x10]
  41aa8e:	mov    r8,QWORD PTR [rbx+0x18]
  41aa92:	mov    rsi,rax
  41aa95:	mov    rcx,QWORD PTR [rax+0x8]
  41aa99:	mov    QWORD PTR [rbx],rax
  41aa9c:	sub    r8,rdx
  41aa9f:	call   0x43f0a8
  41aaa4:	mov    rax,rsi
  41aaa7:	add    rsp,0x28
  41aaab:	pop    rbx
  41aaac:	pop    rsi
  41aaad:	ret    
  41aaae:	xchg   ax,ax
  41aab0:	push   r15
  41aab2:	push   r14
  41aab4:	push   r13
  41aab6:	push   r12
  41aab8:	push   rbp
  41aab9:	push   rdi
  41aaba:	push   rsi
  41aabb:	push   rbx
  41aabc:	sub    rsp,0x28
  41aac0:	mov    rbp,QWORD PTR [r9]
  41aac3:	mov    r13,QWORD PTR [rsp+0x90]
  41aacb:	mov    r15,rcx
  41aace:	mov    r12,rdx
  41aad1:	mov    rdi,r8
  41aad4:	mov    r14,r9
  41aad7:	test   rbp,rbp
  41aada:	mov    rbx,QWORD PTR [r13+0x0]
  41aade:	je     0x41ab40
  41aae0:	mov    rcx,QWORD PTR [rbx+0x10]
  41aae4:	mov    rsi,QWORD PTR [rbx+0x18]
  41aae8:	sub    rsi,rcx
  41aaeb:	cmp    r8,rsi
  41aaee:	jbe    0x41ab17
  41aaf0:	mov    r8,rsi
  41aaf3:	sub    rdi,rsi
  41aaf6:	add    r12,rsi
  41aaf9:	call   0x43f0a8
  41aafe:	add    QWORD PTR [rbx+0x10],rsi
  41ab02:	mov    rdx,rbx
  41ab05:	mov    rcx,r15
  41ab08:	mov    r8,rdi
  41ab0b:	call   0x41aa70
  41ab10:	mov    rcx,QWORD PTR [rax+0x10]
  41ab14:	mov    rbx,rax
  41ab17:	mov    r8,rdi
  41ab1a:	mov    rdx,r12
  41ab1d:	call   0x43f0a8
  41ab22:	add    QWORD PTR [rbx+0x10],rdi
  41ab26:	mov    QWORD PTR [r14],rbp
  41ab29:	mov    QWORD PTR [r13+0x0],rbx
  41ab2d:	add    rsp,0x28
  41ab31:	pop    rbx
  41ab32:	pop    rsi
  41ab33:	pop    rdi
  41ab34:	pop    rbp
  41ab35:	pop    r12
  41ab37:	pop    r13
  41ab39:	pop    r14
  41ab3b:	pop    r15
  41ab3d:	ret    
  41ab3e:	xchg   ax,ax
  41ab40:	mov    rdx,r8
  41ab43:	call   0x41a9c0
  41ab48:	mov    rbp,rax
  41ab4b:	mov    rcx,QWORD PTR [rax+0x10]
  41ab4f:	mov    rbx,rax
  41ab52:	jmp    0x41ab17
  41ab54:	xchg   ax,ax
  41ab56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab60:	push   rdi
  41ab61:	push   rsi
  41ab62:	push   rbx
  41ab63:	sub    rsp,0x20
  41ab67:	mov    rbx,QWORD PTR [rdx]
  41ab6a:	mov    rdi,rdx
  41ab6d:	mov    rax,QWORD PTR [rbx+0x18]
  41ab71:	sub    rax,QWORD PTR [rbx+0x10]
  41ab75:	lea    rdx,[r8+rax*2]
  41ab79:	call   0x41a9c0
  41ab7e:	mov    rdx,QWORD PTR [rbx+0x10]
  41ab82:	mov    r8,QWORD PTR [rbx+0x18]
  41ab86:	mov    rsi,rax
  41ab89:	mov    rcx,QWORD PTR [rax+0x8]
  41ab8d:	sub    r8,rdx
  41ab90:	call   0x43f0a8
  41ab95:	mov    QWORD PTR [rsi],rbx
  41ab98:	mov    QWORD PTR [rdi],rsi
  41ab9b:	add    rsp,0x20
  41ab9f:	pop    rbx
  41aba0:	pop    rsi
  41aba1:	pop    rdi
  41aba2:	ret    
  41aba3:	nop    DWORD PTR [rax]
  41aba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41abb0:	push   rbx
  41abb1:	sub    rsp,0x20
  41abb5:	test   rcx,rcx
  41abb8:	je     0x41abd4
  41abba:	nop    WORD PTR [rax+rax*1+0x0]
  41abc0:	mov    rbx,QWORD PTR [rcx]
  41abc3:	mov    rcx,QWORD PTR [rcx+0x8]
  41abc7:	call   0x43f100
  41abcc:	test   rbx,rbx
  41abcf:	mov    rcx,rbx
  41abd2:	jne    0x41abc0
  41abd4:	add    rsp,0x20
  41abd8:	pop    rbx
  41abd9:	ret    
  41abda:	nop    WORD PTR [rax+rax*1+0x0]
  41abe0:	push   rsi
  41abe1:	push   rbx
  41abe2:	sub    rsp,0x28
  41abe6:	mov    r8,QWORD PTR [rcx+0x40]
  41abea:	mov    rbx,rdx
  41abed:	mov    rsi,rcx
  41abf0:	mov    rax,QWORD PTR [r8+0x10]
  41abf4:	mov    rdx,QWORD PTR [r8+0x18]
  41abf8:	sub    rdx,rax
  41abfb:	cmp    rdx,rbx
  41abfe:	jae    0x41ac1a
  41ac00:	mov    rdx,rbx
  41ac03:	call   0x41a9c0
  41ac08:	mov    r8,rax
  41ac0b:	mov    rax,QWORD PTR [rsi+0x40]
  41ac0f:	mov    QWORD PTR [r8],rax
  41ac12:	mov    rax,QWORD PTR [r8+0x10]
  41ac16:	mov    QWORD PTR [rsi+0x40],r8
  41ac1a:	add    rbx,rax
  41ac1d:	mov    QWORD PTR [r8+0x10],rbx
  41ac21:	add    rsp,0x28
  41ac25:	pop    rbx
  41ac26:	pop    rsi
  41ac27:	ret    
  41ac28:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac30:	push   r13
  41ac32:	push   r12
  41ac34:	push   rbp
  41ac35:	push   rdi
  41ac36:	push   rsi
  41ac37:	push   rbx
  41ac38:	sub    rsp,0x28
  41ac3c:	mov    rax,QWORD PTR [rcx]
  41ac3f:	mov    r13,QWORD PTR [rip+0x3699a]        # 0x4515e0
  41ac46:	mov    r12,rcx
  41ac49:	mov    rdi,rdx
  41ac4c:	mov    rsi,r8
  41ac4f:	mov    rbx,QWORD PTR [rax]
  41ac52:	lea    rbp,[rbx-0x1]
  41ac56:	jmp    0x41ac8c
  41ac58:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac60:	sub    eax,0x2b
  41ac63:	test   al,0xfd
  41ac65:	jne    0x41acb7
  41ac67:	movzx  eax,BYTE PTR [rbx-0x1]
  41ac6b:	and    eax,0xffffffdf
  41ac6e:	cmp    al,0x45
  41ac70:	je     0x41ac81
  41ac72:	cmp    al,0x50
  41ac74:	jne    0x41acb7
  41ac76:	cmp    BYTE PTR [r12+0x41f],0x0
  41ac7f:	je     0x41acb7
  41ac81:	mov    DWORD PTR [rsi],r9d
  41ac84:	mov    BYTE PTR [rsi+0x4],0x0
  41ac88:	add    rbx,0x1
  41ac8c:	movzx  r9d,BYTE PTR [rbx]
  41ac90:	movsxd rdx,r9d
  41ac93:	mov    eax,r9d
  41ac96:	test   WORD PTR [r13+rdx*2+0x0],0x204
  41ac9e:	jne    0x41ac81
  41aca0:	cmp    r9b,0x2e
  41aca4:	je     0x41ac81
  41aca6:	cmp    r9b,0x27
  41acaa:	jne    0x41ac60
  41acac:	cmp    BYTE PTR [r12+0x443],0x0
  41acb5:	jne    0x41ac81
  41acb7:	mov    rax,QWORD PTR [r12]
  41acbb:	xor    edx,edx
  41acbd:	mov    r8,rsi
  41acc0:	mov    rcx,r12
  41acc3:	mov    QWORD PTR [rax],rbx
  41acc6:	call   0x419220
  41accb:	test   al,al
  41accd:	je     0x41acd8
  41accf:	mov    rax,QWORD PTR [r12]
  41acd3:	mov    rbx,QWORD PTR [rax]
  41acd6:	jmp    0x41ac8c
  41acd8:	sub    rbx,rbp
  41acdb:	mov    rcx,r12
  41acde:	lea    edx,[rbx+0x1]
  41ace1:	mov    DWORD PTR [rdi],ebx
  41ace3:	call   0x41abe0
  41ace8:	mov    r8d,DWORD PTR [rdi]
  41aceb:	mov    rdx,rbp
  41acee:	mov    rcx,rax
  41acf1:	call   0x43f0a8
  41acf6:	mov    r9,rax
  41acf9:	mov    eax,DWORD PTR [rdi]
  41acfb:	mov    BYTE PTR [r9+rax*1],0x0
  41ad00:	mov    QWORD PTR [rdi+0x8],r9
  41ad04:	add    rsp,0x28
  41ad08:	pop    rbx
  41ad09:	pop    rsi
  41ad0a:	pop    rdi
  41ad0b:	pop    rbp
  41ad0c:	pop    r12
  41ad0e:	pop    r13
  41ad10:	ret    
  41ad11:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad20:	push   rbp
  41ad21:	push   rdi
  41ad22:	push   rsi
  41ad23:	push   rbx
  41ad24:	sub    rsp,0x28
  41ad28:	mov    edi,r9d
  41ad2b:	mov    rbx,rdx
  41ad2e:	mov    rbp,r8
  41ad31:	lea    edx,[rdi+0x1]
  41ad34:	call   0x41abe0
  41ad39:	mov    r8,rdi
  41ad3c:	mov    rdx,rbp
  41ad3f:	mov    rcx,rax
  41ad42:	call   0x43f0a8
  41ad47:	mov    BYTE PTR [rax+rdi*1],0x0
  41ad4b:	mov    r10,rax
  41ad4e:	mov    eax,DWORD PTR [rsp+0x70]
  41ad52:	mov    DWORD PTR [rbx+0x8],edi
  41ad55:	mov    QWORD PTR [rbx+0x10],r10
  41ad59:	mov    BYTE PTR [rbx+0x4],al
  41ad5c:	add    rsp,0x28
  41ad60:	pop    rbx
  41ad61:	pop    rsi
  41ad62:	pop    rdi
  41ad63:	pop    rbp
  41ad64:	ret    
  41ad65:	nop
  41ad66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad70:	push   r15
  41ad72:	push   r14
  41ad74:	push   r13
  41ad76:	push   r12
  41ad78:	push   rbp
  41ad79:	push   rdi
  41ad7a:	push   rsi
  41ad7b:	push   rbx
  41ad7c:	sub    rsp,0xd8
  41ad83:	movzx  esi,BYTE PTR [r8]
  41ad87:	mov    QWORD PTR [rsp+0x128],rdx
  41ad8f:	mov    QWORD PTR [rsp+0x130],r8
  41ad97:	mov    rbp,rcx
  41ad9a:	mov    rax,QWORD PTR [rsp+0x130]
  41ada2:	cmp    esi,0x55
  41ada5:	mov    edx,esi
  41ada7:	je     0x41ae26
  41ada9:	cmp    esi,0x4c
  41adac:	je     0x41ae26
  41adae:	cmp    esi,0x75
  41adb1:	lea    r10,[rax+0x1]
  41adb5:	je     0x41b183
  41adbb:	cmp    esi,0x52
  41adbe:	je     0x41ae33
  41adc0:	cmp    esi,0x22
  41adc3:	je     0x41b111
  41adc9:	cmp    esi,0x27
  41adcc:	je     0x41b157
  41add2:	mov    edi,0x43
  41add7:	mov    esi,0x3e
  41addc:	movzx  r8d,BYTE PTR [r10]
  41ade0:	xor    edx,edx
  41ade2:	movzx  eax,r8b
  41ade6:	jmp    0x41adfd
  41ade8:	nop    DWORD PTR [rax+rax*1+0x0]
  41adf0:	movzx  eax,BYTE PTR [r10+0x1]
  41adf5:	mov    edx,0x1
  41adfa:	mov    r10,rbx
  41adfd:	cmp    eax,0x5c
  41ae00:	lea    rbx,[r10+0x1]
  41ae04:	je     0x41afc1
  41ae0a:	cmp    esi,eax
  41ae0c:	je     0x41afe9
  41ae12:	cmp    eax,0xa
  41ae15:	je     0x41b04c
  41ae1b:	test   eax,eax
  41ae1d:	je     0x41adf0
  41ae1f:	movzx  eax,BYTE PTR [r10+0x1]
  41ae24:	jmp    0x41adfa
  41ae26:	movzx  esi,BYTE PTR [rax+0x1]
  41ae2a:	lea    r10,[rax+0x2]
  41ae2e:	cmp    esi,0x52
  41ae31:	jne    0x41adc0
  41ae33:	mov    rcx,QWORD PTR [rbp+0x0]
  41ae37:	mov    QWORD PTR [rsp+0x80],0x0
  41ae43:	mov    QWORD PTR [rsp+0x88],0x0
  41ae4f:	mov    DWORD PTR [rsp+0x5c],0x3e
  41ae57:	mov    eax,DWORD PTR [rcx+0x38]
  41ae5a:	shl    rax,0x4
  41ae5e:	add    rax,QWORD PTR [rcx+0x30]
  41ae62:	cmp    dl,0x4c
  41ae65:	mov    r15,rax
  41ae68:	je     0x41ae88
  41ae6a:	cmp    dl,0x55
  41ae6d:	mov    DWORD PTR [rsp+0x5c],0x40
  41ae75:	je     0x41ae88
  41ae77:	cmp    dl,0x75
  41ae7a:	mov    DWORD PTR [rsp+0x5c],0x3d
  41ae82:	je     0x41b81b
  41ae88:	lea    rax,[r10+0x1]
  41ae8c:	mov    rsi,QWORD PTR [rsp+0x130]
  41ae94:	lea    r14,[rsp+0x80]
  41ae9c:	lea    r12,[rsp+0x88]
  41aea4:	xor    r13d,r13d
  41aea7:	xor    ebx,ebx
  41aea9:	mov    QWORD PTR [rsp+0x68],rax
  41aeae:	mov    rdi,rax
  41aeb1:	lea    rax,[rsp+0xb0]
  41aeb9:	mov    DWORD PTR [rsp+0x50],0x0
  41aec1:	mov    DWORD PTR [rsp+0x58],0x0
  41aec9:	mov    rdx,rsi
  41aecc:	mov    QWORD PTR [rsp+0x48],rax
  41aed1:	lea    rax,[rsp+0x7f]
  41aed6:	mov    DWORD PTR [rsp+0x54],0x0
  41aede:	mov    QWORD PTR [rsp+0x60],rax
  41aee3:	mov    rax,QWORD PTR [r15]
  41aee6:	cmp    rax,rdi
  41aee9:	mov    QWORD PTR [rsp+0x38],rax
  41aeee:	jb     0x41b450
  41aef4:	jne    0x41af62
  41aef6:	mov    rsi,r15
  41aef9:	jmp    0x41af39
  41aefb:	nop    DWORD PTR [rax+rax*1+0x0]
  41af00:	mov    r11,QWORD PTR [rip+0x36659]        # 0x451560
  41af07:	mov    ecx,eax
  41af09:	cmp    BYTE PTR [r11+rcx*1],0x0
  41af0e:	je     0x41b990
  41af14:	mov    DWORD PTR [rsi+0x8],0x0
  41af1b:	cmp    BYTE PTR [rbp+0x41d],0x0
  41af22:	mov    r15,rsi
  41af25:	mov    BYTE PTR [rsp+0x7f],al
  41af29:	jne    0x41b280
  41af2f:	cmp    rdi,QWORD PTR [r15+0x10]
  41af33:	lea    rsi,[r15+0x10]
  41af37:	jne    0x41af5f
  41af39:	mov    eax,DWORD PTR [rsi+0x8]
  41af3c:	cmp    eax,0x20
  41af3f:	je     0x41b201
  41af45:	cmp    eax,0x5c
  41af48:	je     0x41b201
  41af4e:	test   eax,eax
  41af50:	jne    0x41af00
  41af52:	mov    r15,rsi
  41af55:	cmp    rdi,QWORD PTR [r15+0x10]
  41af59:	lea    rsi,[r15+0x10]
  41af5d:	je     0x41af39
  41af5f:	mov    r15,rsi
  41af62:	cmp    r13,0x10
  41af66:	lea    rsi,[rdi+0x1]
  41af6a:	movzx  ecx,BYTE PTR [rdi]
  41af6d:	jbe    0x41b794
  41af73:	mov    r8d,DWORD PTR [rsp+0x50]
  41af78:	test   r8d,r8d
  41af7b:	jne    0x41b4b0
  41af81:	mov    ecx,DWORD PTR [rsp+0x54]
  41af85:	cmp    r13,rcx
  41af88:	jbe    0x41b4cd
  41af8e:	mov    r9d,ecx
  41af91:	movzx  r8d,BYTE PTR [rsp+rcx*1+0xb0]
  41af9a:	lea    eax,[r8-0x21]
  41af9e:	mov    BYTE PTR [rsp+rcx*1+0x90],r8b
  41afa6:	cmp    al,0x5d
  41afa8:	ja     0x41b482
  41afae:	lea    rdi,[rip+0x2c977]        # 0x44792c
  41afb5:	movzx  eax,al
  41afb8:	movsxd rax,DWORD PTR [rdi+rax*4]
  41afbc:	add    rax,rdi
  41afbf:	jmp    rax
  41afc1:	cmp    BYTE PTR [rbp+0x13],0x0
  41afc5:	jne    0x41ae1f
  41afcb:	cmp    BYTE PTR [r10+0x1],0xa
  41afd0:	mov    eax,0xa
  41afd5:	je     0x41adfa
  41afdb:	lea    rbx,[r10+0x2]
  41afdf:	movzx  eax,BYTE PTR [r10+0x2]
  41afe4:	jmp    0x41adfa
  41afe9:	test   dl,dl
  41afeb:	je     0x41aff3
  41afed:	cmp    BYTE PTR [rbp+0x12],0x0
  41aff1:	je     0x41b067
  41aff3:	cmp    edi,0x3c
  41aff6:	je     0x41b081
  41affc:	cmp    BYTE PTR [rbp+0x43e],0x0
  41b003:	jne    0x41b0b7
  41b009:	mov    rax,QWORD PTR [rbp+0x0]
  41b00d:	mov    r9d,ebx
  41b010:	sub    r9d,DWORD PTR [rsp+0x130]
  41b018:	mov    r8,QWORD PTR [rsp+0x130]
  41b020:	mov    rdx,QWORD PTR [rsp+0x128]
  41b028:	mov    rcx,rbp
  41b02b:	mov    QWORD PTR [rax],rbx
  41b02e:	mov    DWORD PTR [rsp+0x20],edi
  41b032:	call   0x41ad20
  41b037:	nop
  41b038:	add    rsp,0xd8
  41b03f:	pop    rbx
  41b040:	pop    rsi
  41b041:	pop    rdi
  41b042:	pop    rbp
  41b043:	pop    r12
  41b045:	pop    r13
  41b047:	pop    r14
  41b049:	pop    r15
  41b04b:	ret    
  41b04c:	cmp    esi,0x3e
  41b04f:	mov    rbx,r10
  41b052:	je     0x41b7cb
  41b058:	test   dl,dl
  41b05a:	je     0x41b081
  41b05c:	cmp    BYTE PTR [rbp+0x12],0x0
  41b060:	jne    0x41b081
  41b062:	mov    edi,0x3c
  41b067:	lea    r8,[rip+0x2c872]        # 0x4478e0
  41b06e:	xor    edx,edx
  41b070:	mov    rcx,rbp
  41b073:	call   0x412660
  41b078:	cmp    edi,0x3c
  41b07b:	jne    0x41affc
  41b081:	cmp    DWORD PTR [rbp+0x414],0xd
  41b088:	mov    edi,0x3c
  41b08d:	je     0x41affc
  41b093:	lea    r8,[rip+0x2c86e]        # 0x447908
  41b09a:	mov    r9d,esi
  41b09d:	mov    edx,0x2
  41b0a2:	mov    rcx,rbp
  41b0a5:	call   0x412660
  41b0aa:	cmp    BYTE PTR [rbp+0x43e],0x0
  41b0b1:	je     0x41b009
  41b0b7:	lea    rcx,[rbp+0x3f8]
  41b0be:	mov    rdx,rbx
  41b0c1:	call   0x4194a0
  41b0c6:	test   al,al
  41b0c8:	je     0x41b1ae
  41b0ce:	cmp    BYTE PTR [rbp+0x43f],0x0
  41b0d5:	je     0x41b009
  41b0db:	cmp    BYTE PTR [rbp+0x12],0x0
  41b0df:	jne    0x41b009
  41b0e5:	lea    rax,[rip+0x2c79c]        # 0x447888
  41b0ec:	xor    r9d,r9d
  41b0ef:	mov    edx,0x13
  41b0f4:	mov    rcx,rbp
  41b0f7:	mov    QWORD PTR [rsp+0x20],rax
  41b0fc:	mov    rax,QWORD PTR [rsp+0x128]
  41b104:	mov    r8d,DWORD PTR [rax]
  41b107:	call   0x412780
  41b10c:	jmp    0x41b009
  41b111:	cmp    dl,0x4c
  41b114:	mov    edi,0x3e
  41b119:	je     0x41addc
  41b11f:	cmp    dl,0x55
  41b122:	mov    dil,0x40
  41b125:	je     0x41addc
  41b12b:	cmp    dl,0x75
  41b12e:	mov    dil,0x3d
  41b131:	jne    0x41addc
  41b137:	mov    rax,QWORD PTR [rsp+0x130]
  41b13f:	xor    edi,edi
  41b141:	mov    esi,0x22
  41b146:	cmp    BYTE PTR [rax+0x1],0x38
  41b14a:	sete   dil
  41b14e:	lea    edi,[rdi+rdi*1+0x3f]
  41b152:	jmp    0x41addc
  41b157:	cmp    dl,0x4c
  41b15a:	mov    edi,0x39
  41b15f:	je     0x41addc
  41b165:	cmp    dl,0x55
  41b168:	mov    dil,0x3b
  41b16b:	je     0x41addc
  41b171:	xor    edi,edi
  41b173:	cmp    dl,0x75
  41b176:	sete   dil
  41b17a:	lea    edi,[rdi+rdi*1+0x38]
  41b17e:	jmp    0x41addc
  41b183:	movzx  esi,BYTE PTR [rax+0x1]
  41b187:	lea    r10,[rax+0x2]
  41b18b:	cmp    esi,0x38
  41b18e:	mov    ecx,esi
  41b190:	jne    0x41b19a
  41b192:	movzx  esi,BYTE PTR [rax+0x2]
  41b196:	lea    r10,[rax+0x3]
  41b19a:	cmp    esi,0x52
  41b19d:	je     0x41b9f8
  41b1a3:	cmp    esi,0x22
  41b1a6:	jne    0x41adc9
  41b1ac:	jmp    0x41b137
  41b1ae:	movzx  eax,BYTE PTR [rbx]
  41b1b1:	mov    r12,QWORD PTR [rip+0x36428]        # 0x4515e0
  41b1b8:	test   BYTE PTR [r12+rax*2+0x1],0x2
  41b1be:	je     0x41b009
  41b1c4:	mov    ecx,edi
  41b1c6:	call   0x413940
  41b1cb:	mov    ecx,eax
  41b1cd:	call   0x4138d0
  41b1d2:	movzx  edx,BYTE PTR [rbx+0x1]
  41b1d6:	mov    edi,eax
  41b1d8:	lea    rax,[rbx+0x1]
  41b1dc:	mov    rbx,rax
  41b1df:	test   WORD PTR [r12+rdx*2],0x204
  41b1e6:	je     0x41b009
  41b1ec:	add    rbx,0x1
  41b1f0:	movzx  eax,BYTE PTR [rbx]
  41b1f3:	test   WORD PTR [r12+rax*2],0x204
  41b1fa:	jne    0x41b1ec
  41b1fc:	jmp    0x41b009
  41b201:	mov    r15,rdi
  41b204:	mov    r9,r14
  41b207:	mov    rcx,rbp
  41b20a:	sub    r15,rdx
  41b20d:	mov    QWORD PTR [rsp+0x20],r12
  41b212:	add    rbx,0x1
  41b216:	mov    r8,r15
  41b219:	add    rbx,r15
  41b21c:	call   0x41aab0
  41b221:	lea    rdx,[rip+0x2c5a9]        # 0x4477d1
  41b228:	mov    QWORD PTR [rsp+0x20],r12
  41b22d:	mov    r9,r14
  41b230:	mov    r8d,0x1
  41b236:	mov    rcx,rbp
  41b239:	call   0x41aab0
  41b23e:	cmp    r13,0x10
  41b242:	jbe    0x41b420
  41b248:	cmp    DWORD PTR [rsi+0x8],0x20
  41b24c:	je     0x41bac5
  41b252:	lea    rdx,[rip+0x2c57c]        # 0x4477d5
  41b259:	mov    QWORD PTR [rsp+0x20],r12
  41b25e:	mov    r9,r14
  41b261:	mov    r8d,0x1
  41b267:	mov    rcx,rbp
  41b26a:	add    rbx,0x1
  41b26e:	call   0x41aab0
  41b273:	mov    r15,rsi
  41b276:	mov    rdx,QWORD PTR [rsp+0x38]
  41b27b:	jmp    0x41af2f
  41b280:	mov    r15,rdi
  41b283:	mov    r9,r14
  41b286:	mov    rcx,rbp
  41b289:	sub    r15,rdx
  41b28c:	mov    QWORD PTR [rsp+0x20],r12
  41b291:	mov    r8,r15
  41b294:	add    rbx,r15
  41b297:	call   0x41aab0
  41b29c:	lea    rdx,[rip+0x2c534]        # 0x4477d7
  41b2a3:	mov    QWORD PTR [rsp+0x20],r12
  41b2a8:	mov    r9,r14
  41b2ab:	mov    r8d,0x2
  41b2b1:	mov    rcx,rbp
  41b2b4:	call   0x41aab0
  41b2b9:	cmp    r13,0x10
  41b2bd:	ja     0x41b2e0
  41b2bf:	lea    rax,[rip+0x2c511]        # 0x4477d7
  41b2c6:	cmp    rdi,rax
  41b2c9:	je     0x41b2e0
  41b2cb:	mov    rax,QWORD PTR [rsp+0x48]
  41b2d0:	mov    r9d,0x3f3f
  41b2d6:	mov    WORD PTR [rax+r13*1],r9w
  41b2db:	add    r13,0x2
  41b2df:	nop
  41b2e0:	cmp    BYTE PTR [rsp+0x7f],0x2f
  41b2e5:	jne    0x41b530
  41b2eb:	cmp    rdi,QWORD PTR [rsi+0x10]
  41b2ef:	jne    0x41b530
  41b2f5:	mov    eax,DWORD PTR [rsi+0x18]
  41b2f8:	cmp    eax,0x20
  41b2fb:	je     0x41b306
  41b2fd:	cmp    eax,0x5c
  41b300:	jne    0x41b990
  41b306:	lea    rdx,[rip+0x2c4cd]        # 0x4477da
  41b30d:	mov    QWORD PTR [rsp+0x20],r12
  41b312:	mov    r9,r14
  41b315:	mov    r8d,0x1
  41b31b:	mov    rcx,rbp
  41b31e:	add    rbx,0x3
  41b322:	call   0x41aab0
  41b327:	cmp    r13,0x10
  41b32b:	ja     0x41b350
  41b32d:	lea    rax,[rip+0x2c4a6]        # 0x4477da
  41b334:	cmp    rdi,rax
  41b337:	je     0x41b350
  41b339:	mov    rax,QWORD PTR [rsp+0x48]
  41b33e:	mov    BYTE PTR [rax+r13*1],0x2f
  41b343:	add    r13,0x1
  41b347:	nop    WORD PTR [rax+rax*1+0x0]
  41b350:	lea    r15,[rsi+0x10]
  41b354:	cmp    DWORD PTR [r15+0x8],0x20
  41b359:	je     0x41b3c0
  41b35b:	lea    rdx,[rip+0x2c473]        # 0x4477d5
  41b362:	mov    QWORD PTR [rsp+0x20],r12
  41b367:	mov    r9,r14
  41b36a:	mov    r8d,0x1
  41b370:	mov    rcx,rbp
  41b373:	add    rbx,0x1
  41b377:	call   0x41aab0
  41b37c:	cmp    r13,0x10
  41b380:	mov    rdx,QWORD PTR [rsp+0x38]
  41b385:	ja     0x41af2f
  41b38b:	lea    rax,[rip+0x2c443]        # 0x4477d5
  41b392:	mov    rdx,rdi
  41b395:	cmp    rdi,rax
  41b398:	je     0x41af2f
  41b39e:	mov    rax,QWORD PTR [rsp+0x48]
  41b3a3:	mov    rdx,QWORD PTR [rsp+0x38]
  41b3a8:	mov    BYTE PTR [rax+r13*1],0xa
  41b3ad:	add    r13,0x1
  41b3b1:	jmp    0x41af2f
  41b3b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b3c0:	lea    rdx,[rip+0x2c40c]        # 0x4477d3
  41b3c7:	mov    QWORD PTR [rsp+0x20],r12
  41b3cc:	mov    r9,r14
  41b3cf:	mov    r8d,0x1
  41b3d5:	mov    rcx,rbp
  41b3d8:	call   0x41aab0
  41b3dd:	lea    rax,[rbx+0x1]
  41b3e1:	cmp    r13,0x10
  41b3e5:	mov    QWORD PTR [rsp+0x40],rax
  41b3ea:	jbe    0x41b508
  41b3f0:	lea    rdx,[rip+0x2c3de]        # 0x4477d5
  41b3f7:	mov    QWORD PTR [rsp+0x20],r12
  41b3fc:	mov    r9,r14
  41b3ff:	mov    r8d,0x1
  41b405:	mov    rcx,rbp
  41b408:	call   0x41aab0
  41b40d:	mov    rbx,QWORD PTR [rsp+0x40]
  41b412:	mov    rdx,QWORD PTR [rsp+0x38]
  41b417:	add    rbx,0x1
  41b41b:	jmp    0x41af2f
  41b420:	lea    rax,[rip+0x2c3aa]        # 0x4477d1
  41b427:	cmp    rdi,rax
  41b42a:	je     0x41b4d5
  41b430:	mov    rax,QWORD PTR [rsp+0x48]
  41b435:	mov    r15,rsi
  41b438:	mov    BYTE PTR [rax+r13*1],0x5c
  41b43d:	add    r13,0x1
  41b441:	jmp    0x41b354
  41b446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b450:	add    r15,0x10
  41b454:	jmp    0x41aee3
  41b459:	nop    DWORD PTR [rax+0x0]
  41b460:	cmp    r9d,0xf
  41b464:	ja     0x41b482
  41b466:	lea    ecx,[r9+0x1]
  41b46a:	cmp    rcx,r13
  41b46d:	mov    r9,rcx
  41b470:	jb     0x41af91
  41b476:	mov    DWORD PTR [rsp+0x54],ecx
  41b47a:	mov    rdi,rsi
  41b47d:	jmp    0x41aee3
  41b482:	cmp    r8b,0x28
  41b486:	mov    DWORD PTR [rsp+0x54],r9d
  41b48b:	jne    0x41b83c
  41b491:	mov    BYTE PTR [rsp+rcx*1+0x90],0x22
  41b499:	mov    rdi,rsi
  41b49c:	mov    r13d,0x11
  41b4a2:	mov    DWORD PTR [rsp+0x50],0x1
  41b4aa:	jmp    0x41aee3
  41b4af:	nop
  41b4b0:	cmp    DWORD PTR [rsp+0x50],0x2
  41b4b5:	je     0x41b57c
  41b4bb:	cmp    ecx,0x29
  41b4be:	je     0x41b6c3
  41b4c4:	cmp    ecx,0xa
  41b4c7:	je     0x41b6de
  41b4cd:	mov    rdi,rsi
  41b4d0:	jmp    0x41aee3
  41b4d5:	cmp    DWORD PTR [rsi+0x8],0x20
  41b4d9:	je     0x41ba97
  41b4df:	lea    rdx,[rip+0x2c2ef]        # 0x4477d5
  41b4e6:	mov    QWORD PTR [rsp+0x20],r12
  41b4eb:	mov    r9,r14
  41b4ee:	mov    r8d,0x1
  41b4f4:	mov    rcx,rbp
  41b4f7:	add    rbx,0x1
  41b4fb:	call   0x41aab0
  41b500:	mov    r15,rsi
  41b503:	jmp    0x41b39e
  41b508:	lea    rax,[rip+0x2c2c4]        # 0x4477d3
  41b50f:	cmp    rdi,rax
  41b512:	je     0x41b7a5
  41b518:	mov    rax,QWORD PTR [rsp+0x48]
  41b51d:	mov    rbx,QWORD PTR [rsp+0x40]
  41b522:	mov    BYTE PTR [rax+r13*1],0x20
  41b527:	add    r13,0x1
  41b52b:	jmp    0x41b35b
  41b530:	mov    rdx,QWORD PTR [rsp+0x60]
  41b535:	mov    rcx,rbp
  41b538:	mov    QWORD PTR [rsp+0x20],r12
  41b53d:	mov    r9,r14
  41b540:	mov    r8d,0x1
  41b546:	add    rbx,0x3
  41b54a:	mov    r15,rsi
  41b54d:	lea    rsi,[rdi+0x1]
  41b551:	call   0x41aab0
  41b556:	cmp    r13,0x10
  41b55a:	movzx  ecx,BYTE PTR [rsp+0x7f]
  41b55f:	ja     0x41b574
  41b561:	cmp    rsi,QWORD PTR [rsp+0x60]
  41b566:	je     0x41b574
  41b568:	mov    BYTE PTR [rsp+r13*1+0xb0],cl
  41b570:	add    r13,0x1
  41b574:	mov    rdx,rsi
  41b577:	jmp    0x41af73
  41b57c:	mov    r8d,DWORD PTR [rsp+0x58]
  41b581:	mov    r10d,DWORD PTR [rsp+0x54]
  41b586:	mov    eax,r8d
  41b589:	cmp    r10d,eax
  41b58c:	jb     0x41b5df
  41b58e:	cmp    r13,rax
  41b591:	jbe    0x41b778
  41b597:	movzx  r11d,BYTE PTR [rsp+rax*1+0x90]
  41b5a0:	cmp    BYTE PTR [rsp+rax*1+0xb0],r11b
  41b5a8:	jne    0x41b778
  41b5ae:	mov    r9d,r10d
  41b5b1:	jmp    0x41b5d6
  41b5b3:	mov    eax,r8d
  41b5b6:	cmp    r13,rax
  41b5b9:	jbe    0x41b773
  41b5bf:	movzx  r10d,BYTE PTR [rsp+rax*1+0x90]
  41b5c8:	cmp    BYTE PTR [rsp+rax*1+0xb0],r10b
  41b5d0:	jne    0x41b773
  41b5d6:	add    r8d,0x1
  41b5da:	cmp    r8d,r9d
  41b5dd:	jbe    0x41b5b3
  41b5df:	mov    r10,rsi
  41b5e2:	mov    rsi,rdx
  41b5e5:	cmp    BYTE PTR [rbp+0x43e],0x0
  41b5ec:	jne    0x41ba27
  41b5f2:	cmp    QWORD PTR [rsp+0x80],0x0
  41b5fb:	mov    rax,QWORD PTR [rbp+0x0]
  41b5ff:	mov    QWORD PTR [rax],r10
  41b602:	je     0x41baf3
  41b608:	sub    r10,rsi
  41b60b:	mov    rcx,rbp
  41b60e:	lea    rdx,[r10+rbx*1+0x1]
  41b613:	mov    r13,r10
  41b616:	add    ebx,r13d
  41b619:	call   0x41abe0
  41b61e:	movzx  edi,BYTE PTR [rsp+0x5c]
  41b623:	mov    r9,rax
  41b626:	mov    rax,QWORD PTR [rsp+0x128]
  41b62e:	mov    DWORD PTR [rax+0x8],ebx
  41b631:	mov    QWORD PTR [rax+0x10],r9
  41b635:	mov    BYTE PTR [rax+0x4],dil
  41b639:	mov    rax,QWORD PTR [rsp+0x80]
  41b641:	test   rax,rax
  41b644:	mov    QWORD PTR [rsp+0x88],rax
  41b64c:	je     0x41ba90
  41b652:	mov    rdx,QWORD PTR [rax+0x8]
  41b656:	mov    r8,QWORD PTR [rax+0x10]
  41b65a:	mov    rcx,r9
  41b65d:	sub    r8,rdx
  41b660:	call   0x43f0a8
  41b665:	mov    r9,rax
  41b668:	mov    rax,QWORD PTR [rsp+0x88]
  41b670:	add    r9,QWORD PTR [rax+0x10]
  41b674:	sub    r9,QWORD PTR [rax+0x8]
  41b678:	mov    rax,QWORD PTR [rax]
  41b67b:	test   rax,rax
  41b67e:	mov    QWORD PTR [rsp+0x88],rax
  41b686:	jne    0x41b652
  41b688:	mov    rax,QWORD PTR [rsp+0x80]
  41b690:	mov    rdx,rax
  41b693:	jmp    0x41b698
  41b695:	mov    rdx,rcx
  41b698:	mov    rcx,QWORD PTR [rdx]
  41b69b:	test   rcx,rcx
  41b69e:	jne    0x41b695
  41b6a0:	mov    rcx,QWORD PTR [rbp+0x48]
  41b6a4:	mov    r8,r13
  41b6a7:	mov    QWORD PTR [rdx],rcx
  41b6aa:	mov    QWORD PTR [rbp+0x48],rax
  41b6ae:	mov    rdx,rsi
  41b6b1:	mov    rcx,r9
  41b6b4:	call   0x43f0a8
  41b6b9:	mov    BYTE PTR [rax+r13*1],0x0
  41b6be:	jmp    0x41b038
  41b6c3:	mov    rdi,rsi
  41b6c6:	xor    r13d,r13d
  41b6c9:	mov    DWORD PTR [rsp+0x50],0x2
  41b6d1:	mov    DWORD PTR [rsp+0x58],0x0
  41b6d9:	jmp    0x41aee3
  41b6de:	cmp    BYTE PTR [rbp+0x10],0x0
  41b6e2:	jne    0x41b9be
  41b6e8:	cmp    BYTE PTR [rbp+0x19],0x0
  41b6ec:	je     0x41b700
  41b6ee:	mov    rax,QWORD PTR [rbp+0x0]
  41b6f2:	mov    rcx,QWORD PTR [rax+0x20]
  41b6f6:	cmp    QWORD PTR [rax+0x10],rcx
  41b6fa:	jae    0x41b9be
  41b700:	sub    rsi,rdx
  41b703:	mov    rcx,rbp
  41b706:	mov    QWORD PTR [rsp+0x20],r12
  41b70b:	mov    r9,r14
  41b70e:	mov    r8,rsi
  41b711:	add    rbx,rsi
  41b714:	call   0x41aab0
  41b719:	mov    rax,QWORD PTR [rbp+0x0]
  41b71d:	mov    rcx,QWORD PTR [rax+0x20]
  41b721:	cmp    QWORD PTR [rax],rcx
  41b724:	jb     0x41b7dc
  41b72a:	xor    edx,edx
  41b72c:	mov    BYTE PTR [rax+0x68],0x1
  41b730:	mov    QWORD PTR [rax],rdi
  41b733:	mov    rcx,rbp
  41b736:	call   0x4199f0
  41b73b:	cmp    BYTE PTR [rbp+0x10],0x0
  41b73f:	jne    0x41b90b
  41b745:	mov    rcx,rbp
  41b748:	call   0x419950
  41b74d:	test   al,al
  41b74f:	je     0x41b90b
  41b755:	mov    rax,QWORD PTR [rbp+0x0]
  41b759:	mov    r11d,DWORD PTR [rax+0x38]
  41b75d:	mov    rdx,QWORD PTR [rax]
  41b760:	mov    rdi,rdx
  41b763:	shl    r11,0x4
  41b767:	add    r11,QWORD PTR [rax+0x30]
  41b76b:	mov    r15,r11
  41b76e:	jmp    0x41aee3
  41b773:	mov    DWORD PTR [rsp+0x58],r8d
  41b778:	cmp    r13,rax
  41b77b:	je     0x41b4cd
  41b781:	mov    r13d,0x11
  41b787:	mov    DWORD PTR [rsp+0x50],0x1
  41b78f:	jmp    0x41b4bb
  41b794:	mov    BYTE PTR [rsp+r13*1+0xb0],cl
  41b79c:	add    r13,0x1
  41b7a0:	jmp    0x41af73
  41b7a5:	lea    rdx,[rip+0x2c029]        # 0x4477d5
  41b7ac:	mov    QWORD PTR [rsp+0x20],r12
  41b7b1:	mov    r9,r14
  41b7b4:	mov    r8d,0x1
  41b7ba:	mov    rcx,rbp
  41b7bd:	add    rbx,0x2
  41b7c1:	call   0x41aab0
  41b7c6:	jmp    0x41b39e
  41b7cb:	mov    rax,QWORD PTR [rsp+0x128]
  41b7d3:	mov    BYTE PTR [rax+0x4],0x3
  41b7d7:	jmp    0x41b038
  41b7dc:	mov    r9,QWORD PTR [rbp+0x28]
  41b7e0:	mov    eax,DWORD PTR [r9+0xc]
  41b7e4:	sub    eax,0x1
  41b7e7:	lea    rdx,[rax+rax*4]
  41b7eb:	mov    rax,QWORD PTR [r9]
  41b7ee:	lea    rdx,[rax+rdx*8]
  41b7f2:	mov    eax,DWORD PTR [r9+0x3c]
  41b7f6:	movzx  ecx,BYTE PTR [rdx+0x1c]
  41b7fa:	sub    eax,DWORD PTR [rdx]
  41b7fc:	mov    r8d,DWORD PTR [rdx+0x10]
  41b800:	shr    eax,cl
  41b802:	mov    rcx,r9
  41b805:	lea    edx,[r8+rax*1+0x1]
  41b80a:	xor    r8d,r8d
  41b80d:	call   0x408830
  41b812:	mov    rax,QWORD PTR [rbp+0x0]
  41b816:	jmp    0x41b72a
  41b81b:	mov    rax,QWORD PTR [rsp+0x130]
  41b823:	movzx  ecx,BYTE PTR [rax+0x1]
  41b827:	xor    eax,eax
  41b829:	cmp    cl,0x38
  41b82c:	sete   al
  41b82f:	lea    eax,[rax+rax*1+0x3f]
  41b833:	mov    DWORD PTR [rsp+0x5c],eax
  41b837:	jmp    0x41ae88
  41b83c:	mov    rax,QWORD PTR [rbp+0x0]
  41b840:	mov    r10,rsi
  41b843:	sub    r10,QWORD PTR [rax+0x8]
  41b847:	lea    rax,[rip+0x2bf92]        # 0x4477e0
  41b84e:	mov    r9,r10
  41b851:	add    r9d,0x1
  41b855:	cmp    DWORD PTR [rsp+0x54],0x10
  41b85a:	je     0x41b99c
  41b860:	cmp    r8b,0xa
  41b864:	je     0x41b995
  41b86a:	lea    rax,[rip+0x2bfcf]        # 0x447840
  41b871:	mov    DWORD PTR [rsp+0x28],r8d
  41b876:	mov    edx,0x3
  41b87b:	mov    rcx,rbp
  41b87e:	mov    QWORD PTR [rsp+0x20],rax
  41b883:	mov    rax,QWORD PTR [rsp+0x128]
  41b88b:	mov    r8d,DWORD PTR [rax]
  41b88e:	call   0x412740
  41b893:	mov    rax,QWORD PTR [rsp+0x68]
  41b898:	sub    rax,QWORD PTR [rsp+0x130]
  41b8a0:	mov    rdi,QWORD PTR [rsp+0x130]
  41b8a8:	mov    rdx,QWORD PTR [rbp+0x0]
  41b8ac:	lea    rcx,[rdi+rax*1-0x1]
  41b8b1:	lea    r9d,[rax-0x1]
  41b8b5:	mov    r8,rdi
  41b8b8:	mov    QWORD PTR [rdx],rcx
  41b8bb:	mov    rdx,QWORD PTR [rsp+0x128]
  41b8c3:	mov    rcx,rbp
  41b8c6:	mov    DWORD PTR [rsp+0x20],0x3c
  41b8ce:	call   0x41ad20
  41b8d3:	mov    rax,QWORD PTR [rsp+0x80]
  41b8db:	test   rax,rax
  41b8de:	je     0x41b038
  41b8e4:	mov    rdx,rax
  41b8e7:	jmp    0x41b8f3
  41b8e9:	nop    DWORD PTR [rax+0x0]
  41b8f0:	mov    rdx,rcx
  41b8f3:	mov    rcx,QWORD PTR [rdx]
  41b8f6:	test   rcx,rcx
  41b8f9:	jne    0x41b8f0
  41b8fb:	mov    rcx,QWORD PTR [rbp+0x48]
  41b8ff:	mov    QWORD PTR [rdx],rcx
  41b902:	mov    QWORD PTR [rbp+0x48],rax
  41b906:	jmp    0x41b038
  41b90b:	mov    rax,QWORD PTR [rsp+0x128]
  41b913:	mov    rdi,QWORD PTR [rsp+0x128]
  41b91b:	mov    edx,0x40
  41b920:	mov    r8d,DWORD PTR [rax]
  41b923:	mov    BYTE PTR [rax+0x4],0x16
  41b927:	mov    rax,QWORD PTR [rbp+0x28]
  41b92b:	mov    eax,DWORD PTR [rax+0x3c]
  41b92e:	mov    WORD PTR [rdi+0x6],dx
  41b932:	mov    DWORD PTR [rdi],eax
  41b934:	mov    rax,QWORD PTR [rsp+0x80]
  41b93c:	test   rax,rax
  41b93f:	mov    rdx,rax
  41b942:	jne    0x41b953
  41b944:	jmp    0x41b966
  41b946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b950:	mov    rdx,rcx
  41b953:	mov    rcx,QWORD PTR [rdx]
  41b956:	test   rcx,rcx
  41b959:	jne    0x41b950
  41b95b:	mov    rcx,QWORD PTR [rbp+0x48]
  41b95f:	mov    QWORD PTR [rdx],rcx
  41b962:	mov    QWORD PTR [rbp+0x48],rax
  41b966:	lea    rax,[rip+0x2bf02]        # 0x44786f
  41b96d:	xor    r9d,r9d
  41b970:	mov    edx,0x3
  41b975:	mov    rcx,rbp
  41b978:	mov    QWORD PTR [rsp+0x20],rax
  41b97d:	call   0x412740
  41b982:	jmp    0x41b038
  41b987:	nop    WORD PTR [rax+rax*1+0x0]
  41b990:	call   0x43f180
  41b995:	lea    rax,[rip+0x2be74]        # 0x447810
  41b99c:	mov    QWORD PTR [rsp+0x20],rax
  41b9a1:	mov    rax,QWORD PTR [rsp+0x128]
  41b9a9:	mov    edx,0x3
  41b9ae:	mov    rcx,rbp
  41b9b1:	mov    r8d,DWORD PTR [rax]
  41b9b4:	call   0x412740
  41b9b9:	jmp    0x41b893
  41b9be:	lea    rax,[rip+0x2beaa]        # 0x44786f
  41b9c5:	mov    rsi,rdx
  41b9c8:	xor    r9d,r9d
  41b9cb:	mov    edx,0x3
  41b9d0:	mov    rcx,rbp
  41b9d3:	mov    QWORD PTR [rsp+0x20],rax
  41b9d8:	mov    rax,QWORD PTR [rsp+0x128]
  41b9e0:	mov    r8d,DWORD PTR [rax]
  41b9e3:	call   0x412740
  41b9e8:	mov    r10,rdi
  41b9eb:	mov    DWORD PTR [rsp+0x5c],0x3c
  41b9f3:	jmp    0x41b5e5
  41b9f8:	mov    rdx,QWORD PTR [rbp+0x0]
  41b9fc:	mov    QWORD PTR [rsp+0x80],0x0
  41ba08:	mov    QWORD PTR [rsp+0x88],0x0
  41ba14:	mov    eax,DWORD PTR [rdx+0x38]
  41ba17:	shl    rax,0x4
  41ba1b:	add    rax,QWORD PTR [rdx+0x30]
  41ba1f:	mov    r15,rax
  41ba22:	jmp    0x41b827
  41ba27:	lea    rcx,[rbp+0x3f8]
  41ba2e:	mov    rdx,r10
  41ba31:	mov    QWORD PTR [rsp+0x38],r10
  41ba36:	call   0x4194a0
  41ba3b:	test   al,al
  41ba3d:	mov    r10,QWORD PTR [rsp+0x38]
  41ba42:	je     0x41bb19
  41ba48:	cmp    BYTE PTR [rbp+0x43f],0x0
  41ba4f:	je     0x41b5f2
  41ba55:	cmp    BYTE PTR [rbp+0x12],0x0
  41ba59:	jne    0x41b5f2
  41ba5f:	lea    rax,[rip+0x2be22]        # 0x447888
  41ba66:	xor    r9d,r9d
  41ba69:	mov    edx,0x13
  41ba6e:	mov    rcx,rbp
  41ba71:	mov    QWORD PTR [rsp+0x20],rax
  41ba76:	mov    rax,QWORD PTR [rsp+0x128]
  41ba7e:	mov    r8d,DWORD PTR [rax]
  41ba81:	call   0x412780
  41ba86:	mov    r10,QWORD PTR [rsp+0x38]
  41ba8b:	jmp    0x41b5f2
  41ba90:	xor    eax,eax
  41ba92:	jmp    0x41b690
  41ba97:	lea    rdx,[rip+0x2bd35]        # 0x4477d3
  41ba9e:	mov    QWORD PTR [rsp+0x20],r12
  41baa3:	mov    r9,r14
  41baa6:	mov    r8d,0x1
  41baac:	mov    rcx,rbp
  41baaf:	mov    r15,rsi
  41bab2:	call   0x41aab0
  41bab7:	lea    rax,[rbx+0x1]
  41babb:	mov    QWORD PTR [rsp+0x40],rax
  41bac0:	jmp    0x41b518
  41bac5:	lea    rdx,[rip+0x2bd07]        # 0x4477d3
  41bacc:	mov    QWORD PTR [rsp+0x20],r12
  41bad1:	mov    r9,r14
  41bad4:	mov    r8d,0x1
  41bada:	mov    rcx,rbp
  41badd:	mov    r15,rsi
  41bae0:	call   0x41aab0
  41bae5:	lea    rax,[rbx+0x1]
  41bae9:	mov    QWORD PTR [rsp+0x40],rax
  41baee:	jmp    0x41b3f0
  41baf3:	mov    eax,DWORD PTR [rsp+0x5c]
  41baf7:	mov    rdx,QWORD PTR [rsp+0x128]
  41baff:	mov    r9d,r10d
  41bb02:	sub    r9d,esi
  41bb05:	mov    r8,rsi
  41bb08:	mov    rcx,rbp
  41bb0b:	mov    DWORD PTR [rsp+0x20],eax
  41bb0f:	call   0x41ad20
  41bb14:	jmp    0x41b038
  41bb19:	movzx  eax,BYTE PTR [r10]
  41bb1d:	mov    r12,QWORD PTR [rip+0x35abc]        # 0x4515e0
  41bb24:	test   BYTE PTR [r12+rax*2+0x1],0x2
  41bb2a:	je     0x41b5f2
  41bb30:	mov    ecx,DWORD PTR [rsp+0x5c]
  41bb34:	mov    QWORD PTR [rsp+0x38],r10
  41bb39:	call   0x4138d0
  41bb3e:	mov    r10,QWORD PTR [rsp+0x38]
  41bb43:	mov    DWORD PTR [rsp+0x5c],eax
  41bb47:	movzx  edx,BYTE PTR [r10+0x1]
  41bb4c:	lea    rax,[r10+0x1]
  41bb50:	mov    r10,rax
  41bb53:	test   WORD PTR [r12+rdx*2],0x204
  41bb5a:	je     0x41b5f2
  41bb60:	add    r10,0x1
  41bb64:	movzx  eax,BYTE PTR [r10]
  41bb68:	test   WORD PTR [r12+rax*2],0x204
  41bb6f:	jne    0x41bb60
  41bb71:	jmp    0x41b5f2
  41bb76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb80:	push   r15
  41bb82:	push   r14
  41bb84:	push   r13
  41bb86:	push   r12
  41bb88:	push   rbp
  41bb89:	push   rdi
  41bb8a:	push   rsi
  41bb8b:	push   rbx
  41bb8c:	sub    rsp,0x58
  41bb90:	mov    rsi,QWORD PTR [rcx+0x1a8]
  41bb97:	lea    r13,[rip+0x2bfde]        # 0x447b7c
  41bb9e:	lea    r12,[rcx+0x1b0]
  41bba5:	mov    rbx,rcx
  41bba8:	lea    rax,[rsi+0x18]
  41bbac:	mov    QWORD PTR [rcx+0x1a8],rax
  41bbb3:	mov    rdi,QWORD PTR [rbx]
  41bbb6:	xor    r10d,r10d
  41bbb9:	mov    WORD PTR [rsi+0x6],r10w
  41bbbe:	cmp    BYTE PTR [rdi+0x68],0x0
  41bbc2:	je     0x41bc23
  41bbc4:	cmp    BYTE PTR [rbx+0x20],0x0
  41bbc8:	jne    0x41c457
  41bbce:	cmp    BYTE PTR [rbx+0x10],0x0
  41bbd2:	jne    0x41bd40
  41bbd8:	mov    rcx,rbx
  41bbdb:	call   0x419950
  41bbe0:	test   al,al
  41bbe2:	je     0x41bd40
  41bbe8:	mov    r8d,DWORD PTR [rbx+0x1dc]
  41bbef:	test   r8d,r8d
  41bbf2:	jne    0x41bc0d
  41bbf4:	mov    rsi,QWORD PTR [rbx+0x1c0]
  41bbfb:	mov    QWORD PTR [rbx+0x1d0],r12
  41bc02:	lea    rax,[rsi+0x18]
  41bc06:	mov    QWORD PTR [rbx+0x1a8],rax
  41bc0d:	mov    ecx,0x40
  41bc12:	mov    WORD PTR [rsi+0x6],cx
  41bc16:	cmp    BYTE PTR [rbx+0x19],0x2
  41bc1a:	je     0x41bd14
  41bc20:	mov    rdi,QWORD PTR [rbx]
  41bc23:	lea    r14,[rip+0x2be7a]        # 0x447aa4
  41bc2a:	mov    rax,QWORD PTR [rbx+0x28]
  41bc2e:	mov    eax,DWORD PTR [rax+0x3c]
  41bc31:	mov    DWORD PTR [rsi],eax
  41bc33:	mov    eax,DWORD PTR [rdi+0x38]
  41bc36:	mov    rcx,QWORD PTR [rdi]
  41bc39:	shl    rax,0x4
  41bc3d:	add    rax,QWORD PTR [rdi+0x30]
  41bc41:	cmp    rcx,QWORD PTR [rax]
  41bc44:	jb     0x41bc51
  41bc46:	cmp    QWORD PTR [rbx+0x8],0x0
  41bc4b:	je     0x41c410
  41bc51:	lea    rdx,[rcx+0x1]
  41bc55:	mov    rax,QWORD PTR [rbx+0x530]
  41bc5c:	mov    QWORD PTR [rdi],rdx
  41bc5f:	movzx  r15d,BYTE PTR [rcx]
  41bc63:	test   rax,rax
  41bc66:	mov    rbp,r15
  41bc69:	je     0x41bd22
  41bc6f:	mov    eax,DWORD PTR [rax]
  41bc71:	mov    DWORD PTR [rsi],eax
  41bc73:	cmp    bpl,0x7e
  41bc77:	ja     0x41c400
  41bc7d:	movsxd rax,DWORD PTR [r13+rbp*4+0x0]
  41bc82:	add    rax,r13
  41bc85:	jmp    rax
  41bc87:	cmp    r15d,0x52
  41bc8b:	je     0x41bca0
  41bc8d:	cmp    BYTE PTR [r8+0x1],0x22
  41bc92:	je     0x41c3ab
  41bc98:	nop    DWORD PTR [rax+rax*1+0x0]
  41bca0:	mov    BYTE PTR [rsi+0x4],0x35
  41bca4:	mov    BYTE PTR [rsp+0x44],0x0
  41bca9:	lea    rbp,[rsp+0x40]
  41bcae:	mov    rdx,QWORD PTR [rdi]
  41bcb1:	xor    r8d,r8d
  41bcb4:	mov    rcx,rbx
  41bcb7:	mov    r9,rbp
  41bcba:	mov    DWORD PTR [rsp+0x40],0x0
  41bcc2:	mov    DWORD PTR [rsp+0x48],0x0
  41bcca:	sub    rdx,0x1
  41bcce:	call   0x4192f0
  41bcd3:	lea    r8,[rbp+0x8]
  41bcd7:	mov    QWORD PTR [rsi+0x8],rax
  41bcdb:	mov    rdx,rsi
  41bcde:	mov    rcx,rbx
  41bce1:	call   0x41a200
  41bce6:	mov    rax,QWORD PTR [rsi+0x8]
  41bcea:	test   BYTE PTR [rax+0x18],0x40
  41bcee:	je     0x41bd00
  41bcf0:	or     WORD PTR [rsi+0x6],0x10
  41bcf5:	movzx  eax,BYTE PTR [rax+0x10]
  41bcf9:	shr    al,1
  41bcfb:	mov    BYTE PTR [rsi+0x4],al
  41bcfe:	xchg   ax,ax
  41bd00:	mov    rax,rsi
  41bd03:	add    rsp,0x58
  41bd07:	pop    rbx
  41bd08:	pop    rsi
  41bd09:	pop    rdi
  41bd0a:	pop    rbp
  41bd0b:	pop    r12
  41bd0d:	pop    r13
  41bd0f:	pop    r14
  41bd11:	pop    r15
  41bd13:	ret    
  41bd14:	mov    edx,0x41
  41bd19:	mov    WORD PTR [rsi+0x6],dx
  41bd1d:	jmp    0x41bc20
  41bd22:	sub    rdx,QWORD PTR [rdi+0x8]
  41bd26:	mov    rcx,QWORD PTR [rbx+0x28]
  41bd2a:	call   0x408a20
  41bd2f:	mov    DWORD PTR [rsi],eax
  41bd31:	jmp    0x41bc73
  41bd36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd40:	mov    BYTE PTR [rsi+0x4],0x16
  41bd44:	cmp    BYTE PTR [rbx+0x10],0x0
  41bd48:	jne    0x41bd00
  41bd4a:	mov    rax,QWORD PTR [rbx+0x28]
  41bd4e:	mov    r9d,0x40
  41bd54:	mov    eax,DWORD PTR [rax+0x3c]
  41bd57:	mov    WORD PTR [rsi+0x6],r9w
  41bd5c:	mov    DWORD PTR [rsi],eax
  41bd5e:	jmp    0x41bd00
  41bd60:	lea    rdi,[rsp+0x40]
  41bd65:	lea    rdx,[rsi+0x8]
  41bd69:	mov    DWORD PTR [rsp+0x40],0x0
  41bd71:	mov    BYTE PTR [rsp+0x44],0x0
  41bd76:	mov    DWORD PTR [rsp+0x48],0x0
  41bd7e:	mov    rcx,rbx
  41bd81:	mov    r8,rdi
  41bd84:	mov    BYTE PTR [rsi+0x4],0x37
  41bd88:	call   0x41ac30
  41bd8d:	lea    r8,[rdi+0x8]
  41bd91:	mov    rdx,rsi
  41bd94:	mov    rcx,rbx
  41bd97:	call   0x41a200
  41bd9c:	jmp    0x41bd00
  41bda1:	mov    rdx,QWORD PTR [rdi]
  41bda4:	mov    BYTE PTR [rsi+0x4],0x30
  41bda8:	mov    rcx,QWORD PTR [rip+0x35831]        # 0x4515e0
  41bdaf:	movzx  r8d,BYTE PTR [rdx]
  41bdb3:	test   BYTE PTR [rcx+r8*2],0x4
  41bdb8:	jne    0x41bd60
  41bdba:	cmp    r8b,0x2e
  41bdbe:	je     0x41c5f1
  41bdc4:	cmp    r8b,0x2a
  41bdc8:	jne    0x41bd00
  41bdce:	cmp    BYTE PTR [rbx+0x418],0x0
  41bdd5:	je     0x41bd00
  41bddb:	add    rdx,0x1
  41bddf:	mov    QWORD PTR [rdi],rdx
  41bde2:	mov    BYTE PTR [rsi+0x4],0x33
  41bde6:	jmp    0x41bd00
  41bdeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bdf0:	mov    rbp,QWORD PTR [rbx]
  41bdf3:	or     WORD PTR [rsi+0x6],0x1
  41bdf8:	xor    r10d,r10d
  41bdfb:	lea    r11,[rip+0x2bcac]        # 0x447aae
  41be02:	mov    r9,QWORD PTR [rbp+0x0]
  41be06:	jmp    0x41be94
  41be0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41be10:	cmp    BYTE PTR [rbx+0x10],0x0
  41be14:	je     0x41be70
  41be16:	cmp    BYTE PTR [rbx+0x437],0x0
  41be1d:	je     0x41be70
  41be1f:	mov    rdx,QWORD PTR [rbx+0x28]
  41be23:	cmp    r15d,0xc
  41be27:	mov    rax,r11
  41be2a:	cmove  rax,r14
  41be2e:	sub    r9,QWORD PTR [rbp+0x8]
  41be32:	mov    rcx,rbx
  41be35:	mov    BYTE PTR [rsp+0x3f],r10b
  41be3a:	mov    QWORD PTR [rsp+0x30],r11
  41be3f:	mov    r8d,DWORD PTR [rdx+0x3c]
  41be43:	mov    QWORD PTR [rsp+0x28],rax
  41be48:	lea    rax,[rip+0x2bc6c]        # 0x447abb
  41be4f:	mov    edx,0x2
  41be54:	mov    QWORD PTR [rsp+0x20],rax
  41be59:	call   0x412740
  41be5e:	movzx  r10d,BYTE PTR [rsp+0x3f]
  41be64:	mov    r9,QWORD PTR [rbp+0x0]
  41be68:	mov    r11,QWORD PTR [rsp+0x30]
  41be6d:	nop    DWORD PTR [rax]
  41be70:	lea    rax,[r9+0x1]
  41be74:	mov    rcx,QWORD PTR [rip+0x35765]        # 0x4515e0
  41be7b:	mov    QWORD PTR [rbp+0x0],rax
  41be7f:	movzx  edx,BYTE PTR [r9]
  41be83:	test   BYTE PTR [rcx+rdx*2+0x1],0x8
  41be88:	mov    r15,rdx
  41be8b:	je     0x41c430
  41be91:	mov    r9,rax
  41be94:	cmp    r15d,0x9
  41be98:	je     0x41be70
  41be9a:	cmp    r15d,0x20
  41be9e:	je     0x41be70
  41bea0:	test   r15d,r15d
  41bea3:	jne    0x41be10
  41bea9:	mov    r10d,0x1
  41beaf:	jmp    0x41be70
  41beb1:	mov    rax,QWORD PTR [rdi]
  41beb4:	mov    BYTE PTR [rsi+0x4],0xb
  41beb8:	cmp    BYTE PTR [rax],0x3d
  41bebb:	jne    0x41bd00
  41bec1:	add    rax,0x1
  41bec5:	mov    QWORD PTR [rdi],rax
  41bec8:	mov    BYTE PTR [rsi+0x4],0x22
  41becc:	jmp    0x41bd00
  41bed1:	mov    BYTE PTR [rsi+0x4],0xe
  41bed5:	jmp    0x41bd00
  41beda:	nop    WORD PTR [rax+rax*1+0x0]
  41bee0:	mov    BYTE PTR [rsi+0x4],0x2a
  41bee4:	jmp    0x41bd00
  41bee9:	nop    DWORD PTR [rax+0x0]
  41bef0:	mov    rax,QWORD PTR [rdi]
  41bef3:	mov    BYTE PTR [rsi+0x4],0xa
  41bef7:	movzx  edx,BYTE PTR [rax]
  41befa:	cmp    dl,0x7c
  41befd:	je     0x41c5b2
  41bf03:	cmp    dl,0x3d
  41bf06:	jne    0x41bd00
  41bf0c:	add    rax,0x1
  41bf10:	mov    QWORD PTR [rdi],rax
  41bf13:	mov    BYTE PTR [rsi+0x4],0x21
  41bf17:	jmp    0x41bd00
  41bf1c:	nop    DWORD PTR [rax+0x0]
  41bf20:	mov    r15,QWORD PTR [rdi]
  41bf23:	movzx  ebp,BYTE PTR [r15]
  41bf27:	cmp    ebp,0x2a
  41bf2a:	je     0x41c630
  41bf30:	cmp    ebp,0x2f
  41bf33:	jne    0x41c694
  41bf39:	cmp    BYTE PTR [rbx+0x419],0x0
  41bf40:	je     0x41c6b0
  41bf46:	mov    eax,DWORD PTR [rbx+0x414]
  41bf4c:	test   eax,eax
  41bf4e:	jne    0x41bf63
  41bf50:	cmp    BYTE PTR [rbx+0x437],0x0
  41bf57:	je     0x41bf63
  41bf59:	test   BYTE PTR [rdi+0x6c],0x1
  41bf5d:	je     0x41c6cb
  41bf63:	mov    rdx,QWORD PTR [rbx]
  41bf66:	mov    rax,QWORD PTR [rbx+0x28]
  41bf6a:	mov    rcx,QWORD PTR [rdx]
  41bf6d:	mov    r8d,DWORD PTR [rax+0x3c]
  41bf71:	cmp    BYTE PTR [rcx],0xa
  41bf74:	lea    rax,[rcx+0x1]
  41bf78:	je     0x41bf8d
  41bf7a:	nop    WORD PTR [rax+rax*1+0x0]
  41bf80:	mov    QWORD PTR [rdx],rax
  41bf83:	add    rax,0x1
  41bf87:	cmp    BYTE PTR [rax-0x1],0xa
  41bf8b:	jne    0x41bf80
  41bf8d:	mov    edx,0x1
  41bf92:	mov    rcx,rbx
  41bf95:	mov    DWORD PTR [rsp+0x30],r8d
  41bf9a:	call   0x4199f0
  41bf9f:	mov    rax,QWORD PTR [rbx+0x28]
  41bfa3:	mov    r8d,DWORD PTR [rsp+0x30]
  41bfa8:	cmp    r8d,DWORD PTR [rax+0x3c]
  41bfac:	je     0x41bfcb
  41bfae:	cmp    BYTE PTR [rbx+0x424],0x0
  41bfb5:	je     0x41bfcb
  41bfb7:	lea    r8,[rip+0x2bbab]        # 0x447b69
  41bfbe:	mov    edx,0x2
  41bfc3:	mov    rcx,rbx
  41bfc6:	call   0x412690
  41bfcb:	cmp    BYTE PTR [rbx+0x15],0x0
  41bfcf:	jne    0x41c732
  41bfd5:	or     WORD PTR [rsi+0x6],0x1
  41bfda:	jmp    0x41bc2a
  41bfdf:	nop
  41bfe0:	mov    BYTE PTR [rsi+0x4],0x28
  41bfe4:	jmp    0x41bd00
  41bfe9:	nop    DWORD PTR [rax+0x0]
  41bff0:	mov    rax,QWORD PTR [rdi]
  41bff3:	mov    BYTE PTR [rsi+0x4],0x0
  41bff7:	cmp    BYTE PTR [rax],0x3d
  41bffa:	jne    0x41bd00
  41c000:	add    rax,0x1
  41c004:	mov    QWORD PTR [rdi],rax
  41c007:	mov    BYTE PTR [rsi+0x4],0x17
  41c00b:	jmp    0x41bd00
  41c010:	cmp    BYTE PTR [rbx+0x13],0x0
  41c014:	jne    0x41c4de
  41c01a:	mov    rax,QWORD PTR [rdi]
  41c01d:	mov    BYTE PTR [rsi+0x4],0x3
  41c021:	movzx  edx,BYTE PTR [rax]
  41c024:	cmp    dl,0x3d
  41c027:	je     0x41c5c2
  41c02d:	cmp    dl,0x3c
  41c030:	je     0x41c60b
  41c036:	cmp    BYTE PTR [rbx+0x41e],0x0
  41c03d:	je     0x41bd00
  41c043:	cmp    dl,0x3a
  41c046:	je     0x41c6fc
  41c04c:	cmp    dl,0x25
  41c04f:	jne    0x41bd00
  41c055:	add    rax,0x1
  41c059:	mov    QWORD PTR [rdi],rax
  41c05c:	or     WORD PTR [rsi+0x6],0x2
  41c061:	mov    BYTE PTR [rsi+0x4],0x29
  41c065:	jmp    0x41bd00
  41c06a:	nop    WORD PTR [rax+rax*1+0x0]
  41c070:	mov    BYTE PTR [rsi+0x4],0x2b
  41c074:	jmp    0x41bd00
  41c079:	nop    DWORD PTR [rax+0x0]
  41c080:	mov    rax,QWORD PTR [rdi]
  41c083:	mov    BYTE PTR [rsi+0x4],0x12
  41c087:	movzx  edx,BYTE PTR [rax]
  41c08a:	cmp    dl,0x3a
  41c08d:	je     0x41c4ff
  41c093:	cmp    dl,0x3e
  41c096:	jne    0x41bd00
  41c09c:	cmp    BYTE PTR [rbx+0x41e],0x0
  41c0a3:	je     0x41bd00
  41c0a9:	add    rax,0x1
  41c0ad:	mov    QWORD PTR [rdi],rax
  41c0b0:	or     WORD PTR [rsi+0x6],0x2
  41c0b5:	mov    BYTE PTR [rsi+0x4],0x28
  41c0b9:	jmp    0x41bd00
  41c0be:	xchg   ax,ax
  41c0c0:	mov    rax,QWORD PTR [rdi]
  41c0c3:	mov    BYTE PTR [rsi+0x4],0x9
  41c0c7:	movzx  edx,BYTE PTR [rax]
  41c0ca:	cmp    dl,0x26
  41c0cd:	je     0x41c53c
  41c0d3:	cmp    dl,0x3d
  41c0d6:	jne    0x41bd00
  41c0dc:	add    rax,0x1
  41c0e0:	mov    QWORD PTR [rdi],rax
  41c0e3:	mov    BYTE PTR [rsi+0x4],0x20
  41c0e7:	jmp    0x41bd00
  41c0ec:	nop    DWORD PTR [rax+0x0]
  41c0f0:	mov    BYTE PTR [rsi+0x4],0x34
  41c0f4:	jmp    0x41bd00
  41c0f9:	nop    DWORD PTR [rax+0x0]
  41c100:	mov    rax,QWORD PTR [rdi]
  41c103:	mov    BYTE PTR [rsi+0x4],0x4
  41c107:	movzx  edx,BYTE PTR [rax]
  41c10a:	cmp    dl,0x2b
  41c10d:	je     0x41c5a2
  41c113:	cmp    dl,0x3d
  41c116:	jne    0x41bd00
  41c11c:	add    rax,0x1
  41c120:	mov    QWORD PTR [rdi],rax
  41c123:	mov    BYTE PTR [rsi+0x4],0x1b
  41c127:	jmp    0x41bd00
  41c12c:	nop    DWORD PTR [rax+0x0]
  41c130:	mov    rax,QWORD PTR [rdi]
  41c133:	mov    BYTE PTR [rsi+0x4],0x6
  41c137:	cmp    BYTE PTR [rax],0x3d
  41c13a:	jne    0x41bd00
  41c140:	add    rax,0x1
  41c144:	mov    QWORD PTR [rdi],rax
  41c147:	mov    BYTE PTR [rsi+0x4],0x1d
  41c14b:	jmp    0x41bd00
  41c150:	mov    rax,QWORD PTR [rdi]
  41c153:	mov    BYTE PTR [rsi+0x4],0x2
  41c157:	movzx  edx,BYTE PTR [rax]
  41c15a:	cmp    dl,0x3d
  41c15d:	je     0x41c52c
  41c163:	cmp    dl,0x3e
  41c166:	jne    0x41bd00
  41c16c:	lea    rdx,[rax+0x1]
  41c170:	mov    QWORD PTR [rdi],rdx
  41c173:	mov    BYTE PTR [rsi+0x4],0xc
  41c177:	cmp    BYTE PTR [rax+0x1],0x3d
  41c17b:	jne    0x41bd00
  41c181:	add    rax,0x2
  41c185:	mov    QWORD PTR [rdi],rax
  41c188:	mov    BYTE PTR [rsi+0x4],0x23
  41c18c:	jmp    0x41bd00
  41c191:	mov    rax,QWORD PTR [rdi]
  41c194:	mov    BYTE PTR [rsi+0x4],0x5
  41c198:	movzx  edx,BYTE PTR [rax]
  41c19b:	cmp    dl,0x3e
  41c19e:	je     0x41c54c
  41c1a4:	cmp    dl,0x2d
  41c1a7:	je     0x41c5e1
  41c1ad:	cmp    dl,0x3d
  41c1b0:	jne    0x41bd00
  41c1b6:	add    rax,0x1
  41c1ba:	mov    QWORD PTR [rdi],rax
  41c1bd:	mov    BYTE PTR [rsi+0x4],0x1c
  41c1c1:	jmp    0x41bd00
  41c1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c1d0:	mov    BYTE PTR [rsi+0x4],0x11
  41c1d4:	jmp    0x41bd00
  41c1d9:	nop    DWORD PTR [rax+0x0]
  41c1e0:	mov    r8,QWORD PTR [rdi]
  41c1e3:	sub    r8,0x1
  41c1e7:	mov    rdx,rsi
  41c1ea:	mov    rcx,rbx
  41c1ed:	call   0x41ad70
  41c1f2:	jmp    0x41bd00
  41c1f7:	nop    WORD PTR [rax+rax*1+0x0]
  41c200:	mov    rax,QWORD PTR [rdi]
  41c203:	mov    BYTE PTR [rsi+0x4],0x1
  41c207:	cmp    BYTE PTR [rax],0x3d
  41c20a:	jne    0x41bd00
  41c210:	add    rax,0x1
  41c214:	mov    QWORD PTR [rdi],rax
  41c217:	mov    BYTE PTR [rsi+0x4],0x18
  41c21b:	jmp    0x41bd00
  41c220:	mov    rax,QWORD PTR [rdi+0x20]
  41c224:	cmp    QWORD PTR [rdi],rax
  41c227:	jb     0x41c472
  41c22d:	mov    BYTE PTR [rdi+0x68],0x1
  41c231:	jmp    0x41bbb3
  41c236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c240:	mov    BYTE PTR [rsi+0x4],0x29
  41c244:	jmp    0x41bd00
  41c249:	nop    DWORD PTR [rax+0x0]
  41c250:	mov    rax,QWORD PTR [rdi]
  41c253:	lea    r12,[rsp+0x40]
  41c258:	mov    edx,0x1
  41c25d:	mov    rcx,rbx
  41c260:	mov    r8,r12
  41c263:	lea    rbp,[rax-0x1]
  41c267:	mov    QWORD PTR [rdi],rbp
  41c26a:	mov    DWORD PTR [rsp+0x40],0x0
  41c272:	mov    BYTE PTR [rsp+0x44],0x0
  41c277:	mov    DWORD PTR [rsp+0x48],0x0
  41c27f:	call   0x419220
  41c284:	test   al,al
  41c286:	jne    0x41c4ad
  41c28c:	mov    rax,QWORD PTR [rdi]
  41c28f:	add    rax,0x1
  41c293:	mov    QWORD PTR [rdi],rax
  41c296:	lea    r8,[rax-0x1]
  41c29a:	mov    DWORD PTR [rsp+0x20],0x3c
  41c2a2:	mov    r9d,0x1
  41c2a8:	mov    rdx,rsi
  41c2ab:	mov    rcx,rbx
  41c2ae:	call   0x41ad20
  41c2b3:	jmp    0x41bd00
  41c2b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2c0:	mov    rax,QWORD PTR [rdi]
  41c2c3:	mov    BYTE PTR [rsi+0x4],0x25
  41c2c7:	cmp    BYTE PTR [rax],0x23
  41c2ca:	je     0x41c51c
  41c2d0:	mov    DWORD PTR [rsi+0x8],0x0
  41c2d7:	jmp    0x41bd00
  41c2dc:	nop    DWORD PTR [rax+0x0]
  41c2e0:	mov    rax,QWORD PTR [rdi]
  41c2e3:	mov    BYTE PTR [rsi+0x4],0x8
  41c2e7:	movzx  edx,BYTE PTR [rax]
  41c2ea:	cmp    dl,0x3d
  41c2ed:	je     0x41c592
  41c2f3:	cmp    BYTE PTR [rbx+0x41e],0x0
  41c2fa:	je     0x41bd00
  41c300:	cmp    dl,0x3a
  41c303:	je     0x41c659
  41c309:	cmp    dl,0x3e
  41c30c:	jne    0x41bd00
  41c312:	add    rax,0x1
  41c316:	mov    QWORD PTR [rdi],rax
  41c319:	or     WORD PTR [rsi+0x6],0x2
  41c31e:	mov    BYTE PTR [rsi+0x4],0x2a
  41c322:	jmp    0x41bd00
  41c327:	nop    WORD PTR [rax+rax*1+0x0]
  41c330:	cmp    r15d,0x4c
  41c334:	je     0x41c57e
  41c33a:	cmp    BYTE PTR [rbx+0x421],0x0
  41c341:	jne    0x41c35a
  41c343:	cmp    r15d,0x52
  41c347:	je     0x41bca0
  41c34d:	cmp    BYTE PTR [rbx+0x420],0x0
  41c354:	je     0x41bca0
  41c35a:	mov    r8,QWORD PTR [rdi]
  41c35d:	movzx  eax,BYTE PTR [r8]
  41c361:	cmp    al,0x27
  41c363:	je     0x41c5d2
  41c369:	cmp    al,0x22
  41c36b:	je     0x41c1e3
  41c371:	cmp    al,0x52
  41c373:	je     0x41bc87
  41c379:	cmp    al,0x38
  41c37b:	jne    0x41bca0
  41c381:	cmp    r15d,0x75
  41c385:	jne    0x41bca0
  41c38b:	movzx  eax,BYTE PTR [r8+0x1]
  41c390:	cmp    al,0x22
  41c392:	je     0x41c1e3
  41c398:	cmp    al,0x52
  41c39a:	jne    0x41bca0
  41c3a0:	cmp    BYTE PTR [r8+0x2],0x22
  41c3a5:	jne    0x41bca0
  41c3ab:	cmp    BYTE PTR [rbx+0x421],0x0
  41c3b2:	jne    0x41c1e3
  41c3b8:	jmp    0x41bca0
  41c3bd:	nop    DWORD PTR [rax]
  41c3c0:	mov    BYTE PTR [rsi+0x4],0x13
  41c3c4:	jmp    0x41bd00
  41c3c9:	nop    DWORD PTR [rax+0x0]
  41c3d0:	mov    BYTE PTR [rsi+0x4],0x15
  41c3d4:	jmp    0x41bd00
  41c3d9:	nop    DWORD PTR [rax+0x0]
  41c3e0:	mov    BYTE PTR [rsi+0x4],0x14
  41c3e4:	jmp    0x41bd00
  41c3e9:	nop    DWORD PTR [rax+0x0]
  41c3f0:	mov    BYTE PTR [rsi+0x4],0x27
  41c3f4:	jmp    0x41bd00
  41c3f9:	nop    DWORD PTR [rax+0x0]
  41c400:	mov    rax,QWORD PTR [rdi]
  41c403:	jmp    0x41c296
  41c408:	nop    DWORD PTR [rax+rax*1+0x0]
  41c410:	mov    rcx,rbx
  41c413:	xor    edx,edx
  41c415:	call   0x4199f0
  41c41a:	mov    rax,QWORD PTR [rbx+0x28]
  41c41e:	mov    rcx,QWORD PTR [rdi]
  41c421:	mov    eax,DWORD PTR [rax+0x3c]
  41c424:	mov    DWORD PTR [rsi],eax
  41c426:	jmp    0x41bc51
  41c42b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c430:	test   r10b,r10b
  41c433:	je     0x41c44a
  41c435:	lea    r8,[rip+0x2b69d]        # 0x447ad9
  41c43c:	xor    edx,edx
  41c43e:	mov    rcx,rbx
  41c441:	call   0x412660
  41c446:	mov    rax,QWORD PTR [rbp+0x0]
  41c44a:	sub    rax,0x1
  41c44e:	mov    QWORD PTR [rbp+0x0],rax
  41c452:	jmp    0x41bc33
  41c457:	mov    BYTE PTR [rsi+0x4],0x50
  41c45b:	cmp    BYTE PTR [rbx+0x21],0x0
  41c45f:	mov    BYTE PTR [rbx+0x20],0x0
  41c463:	jne    0x41bd00
  41c469:	sub    BYTE PTR [rbx+0x18],0x1
  41c46d:	jmp    0x41bd00
  41c472:	mov    r9,QWORD PTR [rbx+0x28]
  41c476:	mov    eax,DWORD PTR [r9+0xc]
  41c47a:	sub    eax,0x1
  41c47d:	lea    rdx,[rax+rax*4]
  41c481:	mov    rax,QWORD PTR [r9]
  41c484:	lea    rdx,[rax+rdx*8]
  41c488:	mov    eax,DWORD PTR [r9+0x3c]
  41c48c:	movzx  ecx,BYTE PTR [rdx+0x1c]
  41c490:	sub    eax,DWORD PTR [rdx]
  41c492:	mov    r8d,DWORD PTR [rdx+0x10]
  41c496:	shr    eax,cl
  41c498:	mov    rcx,r9
  41c49b:	lea    edx,[r8+rax*1+0x1]
  41c4a0:	xor    r8d,r8d
  41c4a3:	call   0x408830
  41c4a8:	jmp    0x41c22d
  41c4ad:	mov    rdx,rbp
  41c4b0:	mov    rcx,rbx
  41c4b3:	mov    BYTE PTR [rsi+0x4],0x35
  41c4b7:	mov    r9,r12
  41c4ba:	mov    r8d,0x1
  41c4c0:	call   0x4192f0
  41c4c5:	lea    r8,[r12+0x8]
  41c4ca:	mov    QWORD PTR [rsi+0x8],rax
  41c4ce:	mov    rdx,rsi
  41c4d1:	mov    rcx,rbx
  41c4d4:	call   0x41a200
  41c4d9:	jmp    0x41bd00
  41c4de:	mov    r8,QWORD PTR [rdi]
  41c4e1:	mov    rdx,rsi
  41c4e4:	mov    rcx,rbx
  41c4e7:	sub    r8,0x1
  41c4eb:	call   0x41ad70
  41c4f0:	cmp    BYTE PTR [rsi+0x4],0x3
  41c4f4:	jne    0x41bd00
  41c4fa:	jmp    0x41c01a
  41c4ff:	cmp    BYTE PTR [rbx+0x418],0x0
  41c506:	je     0x41bd00
  41c50c:	add    rax,0x1
  41c510:	mov    QWORD PTR [rdi],rax
  41c513:	mov    BYTE PTR [rsi+0x4],0x31
  41c517:	jmp    0x41bd00
  41c51c:	add    rax,0x1
  41c520:	mov    QWORD PTR [rdi],rax
  41c523:	mov    BYTE PTR [rsi+0x4],0x26
  41c527:	jmp    0x41c2d0
  41c52c:	add    rax,0x1
  41c530:	mov    QWORD PTR [rdi],rax
  41c533:	mov    BYTE PTR [rsi+0x4],0x19
  41c537:	jmp    0x41bd00
  41c53c:	add    rax,0x1
  41c540:	mov    QWORD PTR [rdi],rax
  41c543:	mov    BYTE PTR [rsi+0x4],0xf
  41c547:	jmp    0x41bd00
  41c54c:	lea    rdx,[rax+0x1]
  41c550:	mov    QWORD PTR [rdi],rdx
  41c553:	mov    BYTE PTR [rsi+0x4],0x2f
  41c557:	cmp    BYTE PTR [rax+0x1],0x2a
  41c55b:	jne    0x41bd00
  41c561:	cmp    BYTE PTR [rbx+0x418],0x0
  41c568:	je     0x41bd00
  41c56e:	add    rax,0x2
  41c572:	mov    QWORD PTR [rdi],rax
  41c575:	mov    BYTE PTR [rsi+0x4],0x32
  41c579:	jmp    0x41bd00
  41c57e:	mov    r8,QWORD PTR [rdi]
  41c581:	movzx  eax,BYTE PTR [r8]
  41c585:	cmp    al,0x27
  41c587:	jne    0x41c369
  41c58d:	jmp    0x41c1e3
  41c592:	add    rax,0x1
  41c596:	mov    QWORD PTR [rdi],rax
  41c599:	mov    BYTE PTR [rsi+0x4],0x1f
  41c59d:	jmp    0x41bd00
  41c5a2:	add    rax,0x1
  41c5a6:	mov    QWORD PTR [rdi],rax
  41c5a9:	mov    BYTE PTR [rsi+0x4],0x2d
  41c5ad:	jmp    0x41bd00
  41c5b2:	add    rax,0x1
  41c5b6:	mov    QWORD PTR [rdi],rax
  41c5b9:	mov    BYTE PTR [rsi+0x4],0x10
  41c5bd:	jmp    0x41bd00
  41c5c2:	add    rax,0x1
  41c5c6:	mov    QWORD PTR [rdi],rax
  41c5c9:	mov    BYTE PTR [rsi+0x4],0x1a
  41c5cd:	jmp    0x41bd00
  41c5d2:	cmp    r15d,0x52
  41c5d6:	jne    0x41c1e3
  41c5dc:	jmp    0x41bca0
  41c5e1:	add    rax,0x1
  41c5e5:	mov    QWORD PTR [rdi],rax
  41c5e8:	mov    BYTE PTR [rsi+0x4],0x2e
  41c5ec:	jmp    0x41bd00
  41c5f1:	cmp    BYTE PTR [rdx+0x1],0x2e
  41c5f5:	jne    0x41bd00
  41c5fb:	add    rdx,0x2
  41c5ff:	mov    QWORD PTR [rdi],rdx
  41c602:	mov    BYTE PTR [rsi+0x4],0x2c
  41c606:	jmp    0x41bd00
  41c60b:	lea    rdx,[rax+0x1]
  41c60f:	mov    QWORD PTR [rdi],rdx
  41c612:	mov    BYTE PTR [rsi+0x4],0xd
  41c616:	cmp    BYTE PTR [rax+0x1],0x3d
  41c61a:	jne    0x41bd00
  41c620:	add    rax,0x2
  41c624:	mov    QWORD PTR [rdi],rax
  41c627:	mov    BYTE PTR [rsi+0x4],0x24
  41c62b:	jmp    0x41bd00
  41c630:	mov    rcx,rbx
  41c633:	call   0x419c40
  41c638:	test   al,al
  41c63a:	je     0x41bfcb
  41c640:	lea    r8,[rip+0x2b4ac]        # 0x447af3
  41c647:	mov    edx,0x3
  41c64c:	mov    rcx,rbx
  41c64f:	call   0x412660
  41c654:	jmp    0x41bfcb
  41c659:	lea    rdx,[rax+0x1]
  41c65d:	mov    QWORD PTR [rdi],rdx
  41c660:	or     WORD PTR [rsi+0x6],0x2
  41c665:	mov    BYTE PTR [rsi+0x4],0x25
  41c669:	cmp    BYTE PTR [rax+0x1],0x25
  41c66d:	jne    0x41bd00
  41c673:	cmp    BYTE PTR [rax+0x2],0x3a
  41c677:	jne    0x41bd00
  41c67d:	add    rax,0x3
  41c681:	mov    QWORD PTR [rdi],rax
  41c684:	mov    BYTE PTR [rsi+0x4],0x26
  41c688:	mov    DWORD PTR [rsi+0x8],0x0
  41c68f:	jmp    0x41bd00
  41c694:	cmp    ebp,0x3d
  41c697:	jne    0x41c6c2
  41c699:	add    r15,0x1
  41c69d:	mov    QWORD PTR [rdi],r15
  41c6a0:	mov    BYTE PTR [rsi+0x4],0x1e
  41c6a4:	jmp    0x41bd00
  41c6a9:	nop    DWORD PTR [rax+0x0]
  41c6b0:	mov    rax,QWORD PTR [rbx]
  41c6b3:	test   rax,rax
  41c6b6:	je     0x41c6c2
  41c6b8:	cmp    BYTE PTR [rax+0x6d],0x0
  41c6bc:	jne    0x41bf46
  41c6c2:	mov    BYTE PTR [rsi+0x4],0x7
  41c6c6:	jmp    0x41bd00
  41c6cb:	lea    r8,[rip+0x2b436]        # 0x447b08
  41c6d2:	mov    edx,0x2
  41c6d7:	mov    rcx,rbx
  41c6da:	call   0x412660
  41c6df:	lea    r8,[rip+0x2b452]        # 0x447b38
  41c6e6:	mov    edx,0x2
  41c6eb:	mov    rcx,rbx
  41c6ee:	call   0x412660
  41c6f3:	or     BYTE PTR [rdi+0x6c],0x1
  41c6f7:	jmp    0x41bf63
  41c6fc:	cmp    BYTE PTR [rbx+0x418],0x0
  41c703:	je     0x41c71d
  41c705:	mov    edx,DWORD PTR [rbx+0x414]
  41c70b:	sub    edx,0x7
  41c70e:	cmp    edx,0x1
  41c711:	jbe    0x41c71d
  41c713:	cmp    BYTE PTR [rax+0x1],0x3a
  41c717:	je     0x41c8ee
  41c71d:	add    rax,0x1
  41c721:	mov    QWORD PTR [rdi],rax
  41c724:	or     WORD PTR [rsi+0x6],0x2
  41c729:	mov    BYTE PTR [rsi+0x4],0x27
  41c72d:	jmp    0x41bd00
  41c732:	mov    rax,QWORD PTR [rbx]
  41c735:	mov    rdx,QWORD PTR [rax]
  41c738:	movzx  ecx,BYTE PTR [rdx-0x1]
  41c73c:	mov    rax,rdx
  41c73f:	mov    rdx,QWORD PTR [rip+0x34e9a]        # 0x4515e0
  41c746:	sub    rax,r15
  41c749:	lea    r12d,[rax+0x1]
  41c74d:	test   BYTE PTR [rdx+rcx*2+0x1],0x4
  41c752:	cmovne r12d,eax
  41c756:	cmp    BYTE PTR [rbx+0x10],0x0
  41c75a:	jne    0x41c762
  41c75c:	cmp    BYTE PTR [rbx+0x19],0x0
  41c760:	je     0x41c76b
  41c762:	cmp    ebp,0x2f
  41c765:	je     0x41c903
  41c76b:	mov    edx,r12d
  41c76e:	mov    rcx,rbx
  41c771:	call   0x41abe0
  41c776:	lea    r8d,[r12-0x1]
  41c77b:	lea    rcx,[rax+0x1]
  41c77f:	mov    BYTE PTR [rsi+0x4],0x4d
  41c783:	mov    DWORD PTR [rsi+0x8],r12d
  41c787:	mov    QWORD PTR [rsi+0x10],rax
  41c78b:	mov    rdx,r15
  41c78e:	mov    BYTE PTR [rax],0x2f
  41c791:	mov    rdi,rax
  41c794:	call   0x43f0a8
  41c799:	cmp    BYTE PTR [rbx+0x10],0x0
  41c79d:	jne    0x41c7a5
  41c79f:	cmp    BYTE PTR [rbx+0x19],0x0
  41c7a3:	je     0x41c7ae
  41c7a5:	cmp    ebp,0x2f
  41c7a8:	je     0x41c868
  41c7ae:	cmp    DWORD PTR [rbx+0x524],0x0
  41c7b5:	jne    0x41c7d2
  41c7b7:	mov    DWORD PTR [rbx+0x524],0x100
  41c7c1:	mov    ecx,0x1000
  41c7c6:	call   0x4385d0
  41c7cb:	mov    QWORD PTR [rbx+0x518],rax
  41c7d2:	mov    eax,DWORD PTR [rbx+0x520]
  41c7d8:	cmp    eax,DWORD PTR [rbx+0x524]
  41c7de:	je     0x41c8bf
  41c7e4:	mov    ebp,DWORD PTR [rsi+0x8]
  41c7e7:	movsxd rdi,eax
  41c7ea:	shl    rdi,0x4
  41c7ee:	add    rdi,QWORD PTR [rbx+0x518]
  41c7f5:	lea    ecx,[rbp+0x1]
  41c7f8:	movsxd rcx,ecx
  41c7fb:	call   0x4385d0
  41c800:	mov    QWORD PTR [rdi],rax
  41c803:	movsxd rax,DWORD PTR [rbx+0x520]
  41c80a:	movsxd rdi,ebp
  41c80d:	mov    rdx,QWORD PTR [rsi+0x10]
  41c811:	mov    r8,rdi
  41c814:	shl    rax,0x4
  41c818:	add    rax,QWORD PTR [rbx+0x518]
  41c81f:	mov    rcx,QWORD PTR [rax]
  41c822:	call   0x43f0a8
  41c827:	movsxd rax,DWORD PTR [rbx+0x520]
  41c82e:	shl    rax,0x4
  41c832:	add    rax,QWORD PTR [rbx+0x518]
  41c839:	mov    rax,QWORD PTR [rax]
  41c83c:	mov    BYTE PTR [rax+rdi*1],0x0
  41c840:	movsxd rax,DWORD PTR [rbx+0x520]
  41c847:	mov    ecx,DWORD PTR [rsi]
  41c849:	mov    rdx,rax
  41c84c:	shl    rax,0x4
  41c850:	add    rax,QWORD PTR [rbx+0x518]
  41c857:	add    edx,0x1
  41c85a:	mov    DWORD PTR [rax+0x8],ecx
  41c85d:	mov    DWORD PTR [rbx+0x520],edx
  41c863:	jmp    0x41bd00
  41c868:	mov    ebp,r12d
  41c86b:	lea    edx,[rbp-0x2]
  41c86e:	mov    BYTE PTR [rdi+0x1],0x2a
  41c872:	mov    rax,rdx
  41c875:	mov    BYTE PTR [rdi+rdx*1],0x2a
  41c879:	lea    edx,[rbp-0x1]
  41c87c:	cmp    eax,0x2
  41c87f:	mov    BYTE PTR [rdi+rdx*1],0x2f
  41c883:	jbe    0x41c7ae
  41c889:	lea    edx,[rbp-0x5]
  41c88c:	xor    eax,eax
  41c88e:	add    rdx,0x1
  41c892:	jmp    0x41c8a1
  41c894:	add    rax,0x1
  41c898:	cmp    rax,rdx
  41c89b:	je     0x41c7ae
  41c8a1:	cmp    BYTE PTR [rdi+rax*1+0x2],0x2f
  41c8a6:	jne    0x41c894
  41c8a8:	cmp    BYTE PTR [rdi+rax*1+0x1],0x2a
  41c8ad:	je     0x41c8b8
  41c8af:	lea    ecx,[rax+0x3]
  41c8b2:	cmp    BYTE PTR [rdi+rcx*1],0x2a
  41c8b6:	jne    0x41c894
  41c8b8:	mov    BYTE PTR [rdi+rax*1+0x2],0x7c
  41c8bd:	jmp    0x41c894
  41c8bf:	add    eax,eax
  41c8c1:	mov    rcx,QWORD PTR [rbx+0x518]
  41c8c8:	mov    DWORD PTR [rbx+0x524],eax
  41c8ce:	cdqe   
  41c8d0:	shl    rax,0x4
  41c8d4:	mov    rdx,rax
  41c8d7:	call   0x438650
  41c8dc:	mov    QWORD PTR [rbx+0x518],rax
  41c8e3:	mov    eax,DWORD PTR [rbx+0x520]
  41c8e9:	jmp    0x41c7e4
  41c8ee:	movzx  edx,BYTE PTR [rax+0x2]
  41c8f2:	and    edx,0xfffffffb
  41c8f5:	cmp    dl,0x3a
  41c8f8:	jne    0x41bd00
  41c8fe:	jmp    0x41c71d
  41c903:	lea    edx,[r12+0x2]
  41c908:	mov    rcx,rbx
  41c90b:	mov    rbp,rdx
  41c90e:	call   0x41abe0
  41c913:	lea    r8d,[r12-0x1]
  41c918:	lea    rcx,[rax+0x1]
  41c91c:	mov    BYTE PTR [rsi+0x4],0x4d
  41c920:	mov    DWORD PTR [rsi+0x8],ebp
  41c923:	mov    QWORD PTR [rsi+0x10],rax
  41c927:	mov    rdx,r15
  41c92a:	mov    BYTE PTR [rax],0x2f
  41c92d:	mov    rdi,rax
  41c930:	call   0x43f0a8
  41c935:	cmp    BYTE PTR [rbx+0x10],0x0
  41c939:	jne    0x41c86b
  41c93f:	cmp    BYTE PTR [rbx+0x19],0x0
  41c943:	jne    0x41c86b
  41c949:	jmp    0x41c7ae
  41c94e:	xchg   ax,ax
  41c950:	push   rsi
  41c951:	push   rbx
  41c952:	sub    rsp,0x28
  41c956:	mov    rbx,rcx
  41c959:	jmp    0x41c9d9
  41c95b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c960:	sub    eax,0x1
  41c963:	mov    DWORD PTR [rbx+0x1d8],eax
  41c969:	lea    rax,[rsi+0x18]
  41c96d:	mov    QWORD PTR [rbx+0x1a8],rax
  41c974:	movzx  edx,WORD PTR [rsi+0x6]
  41c978:	test   dl,0x40
  41c97b:	je     0x41c9aa
  41c97d:	cmp    BYTE PTR [rsi+0x4],0x25
  41c981:	je     0x41ca23
  41c987:	cmp    BYTE PTR [rbx+0x20],0x0
  41c98b:	je     0x41c994
  41c98d:	lea    rsi,[rbx+0x98]
  41c994:	mov    rax,QWORD PTR [rbx+0x368]
  41c99b:	test   rax,rax
  41c99e:	je     0x41c9aa
  41c9a0:	cmp    BYTE PTR [rbx+0x12],0x0
  41c9a4:	je     0x41ca50
  41c9aa:	cmp    BYTE PTR [rbx+0x10],0x0
  41c9ae:	jne    0x41ca70
  41c9b4:	cmp    BYTE PTR [rbx+0x20],0x0
  41c9b8:	jne    0x41ca70
  41c9be:	cmp    BYTE PTR [rbx+0x12],0x0
  41c9c2:	mov    BYTE PTR [rbx+0x1a0],0x0
  41c9c9:	je     0x41ca70
  41c9cf:	cmp    BYTE PTR [rsi+0x4],0x16
  41c9d3:	je     0x41ca70
  41c9d9:	mov    rax,QWORD PTR [rbx+0x1d0]
  41c9e0:	mov    rsi,QWORD PTR [rbx+0x1a8]
  41c9e7:	cmp    rsi,QWORD PTR [rax+0x18]
  41c9eb:	je     0x41ca80
  41c9f1:	cmp    QWORD PTR [rax+0x10],rsi
  41c9f5:	ja     0x41ca9f
  41c9fb:	cmp    QWORD PTR [rax+0x18],rsi
  41c9ff:	jbe    0x41ca9f
  41ca05:	mov    eax,DWORD PTR [rbx+0x1d8]
  41ca0b:	test   eax,eax
  41ca0d:	jne    0x41c960
  41ca13:	mov    rcx,rbx
  41ca16:	call   0x41bb80
  41ca1b:	mov    rsi,rax
  41ca1e:	jmp    0x41c974
  41ca23:	cmp    BYTE PTR [rbx+0x19],0x1
  41ca27:	je     0x41c987
  41ca2d:	and    edx,0x1
  41ca30:	mov    rcx,rbx
  41ca33:	call   0x410da0
  41ca38:	test   eax,eax
  41ca3a:	je     0x41c994
  41ca40:	cmp    BYTE PTR [rbx+0x9c],0x51
  41ca47:	jne    0x41c98d
  41ca4d:	jmp    0x41c9d9
  41ca4f:	nop
  41ca50:	movzx  r8d,BYTE PTR [rbx+0x19]
  41ca55:	mov    rdx,rsi
  41ca58:	mov    rcx,rbx
  41ca5b:	call   rax
  41ca5d:	cmp    BYTE PTR [rbx+0x10],0x0
  41ca61:	je     0x41c9b4
  41ca67:	nop    WORD PTR [rax+rax*1+0x0]
  41ca70:	mov    rax,rsi
  41ca73:	add    rsp,0x28
  41ca77:	pop    rbx
  41ca78:	pop    rsi
  41ca79:	ret    
  41ca7a:	nop    WORD PTR [rax+rax*1+0x0]
  41ca80:	mov    rcx,rax
  41ca83:	call   0x4191c0
  41ca88:	mov    rsi,QWORD PTR [rax+0x10]
  41ca8c:	mov    QWORD PTR [rbx+0x1d0],rax
  41ca93:	mov    QWORD PTR [rbx+0x1a8],rsi
  41ca9a:	jmp    0x41c9f1
  41ca9f:	call   0x43f180
  41caa4:	nop
  41caa5:	nop
  41caa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cab0:	push   rbp
  41cab1:	push   rdi
  41cab2:	push   rsi
  41cab3:	push   rbx
  41cab4:	sub    rsp,0x38
  41cab8:	mov    rdi,QWORD PTR [rcx+0x88]
  41cabf:	mov    rbp,rcx
  41cac2:	mov    ebx,edx
  41cac4:	mov    rsi,QWORD PTR [rdi+0x8]
  41cac8:	test   rsi,rsi
  41cacb:	jne    0x41cae1
  41cacd:	jmp    0x41cb10
  41cacf:	nop
  41cad0:	sub    ebx,eax
  41cad2:	mov    rax,QWORD PTR [rsi+0x8]
  41cad6:	mov    rdi,rsi
  41cad9:	test   rax,rax
  41cadc:	je     0x41cb10
  41cade:	mov    rsi,rax
  41cae1:	mov    rcx,rdi
  41cae4:	call   0x419ed0
  41cae9:	cmp    eax,ebx
  41caeb:	jle    0x41cad0
  41caed:	mov    eax,DWORD PTR [rdi+0x30]
  41caf0:	cmp    eax,0x1
  41caf3:	je     0x41cb65
  41caf5:	and    eax,0xfffffffd
  41caf8:	jne    0x41cb76
  41cafa:	mov    rax,QWORD PTR [rdi+0x10]
  41cafe:	movsxd rbx,ebx
  41cb01:	mov    rax,QWORD PTR [rax+rbx*8]
  41cb05:	add    rsp,0x38
  41cb09:	pop    rbx
  41cb0a:	pop    rsi
  41cb0b:	pop    rdi
  41cb0c:	pop    rbp
  41cb0d:	ret    
  41cb0e:	xchg   ax,ax
  41cb10:	mov    edi,ebx
  41cb12:	add    DWORD PTR [rbp+0x1dc],0x1
  41cb19:	xor    esi,esi
  41cb1b:	add    rdi,0x1
  41cb1f:	jmp    0x41cb2a
  41cb21:	add    rsi,0x1
  41cb25:	cmp    rsi,rdi
  41cb28:	je     0x41cb40
  41cb2a:	mov    rcx,rbp
  41cb2d:	call   0x41c950
  41cb32:	cmp    BYTE PTR [rax+0x4],0x16
  41cb36:	jne    0x41cb21
  41cb38:	jmp    0x41cb05
  41cb3a:	nop    WORD PTR [rax+rax*1+0x0]
  41cb40:	lea    edx,[rbx+0x1]
  41cb43:	mov    rcx,rbp
  41cb46:	mov    QWORD PTR [rsp+0x28],rax
  41cb4b:	call   0x40a760
  41cb50:	sub    DWORD PTR [rbp+0x1dc],0x1
  41cb57:	mov    rax,QWORD PTR [rsp+0x28]
  41cb5c:	add    rsp,0x38
  41cb60:	pop    rbx
  41cb61:	pop    rsi
  41cb62:	pop    rdi
  41cb63:	pop    rbp
  41cb64:	ret    
  41cb65:	movsxd rbx,ebx
  41cb68:	mov    rax,QWORD PTR [rdi+0x10]
  41cb6c:	lea    rdx,[rbx+rbx*2]
  41cb70:	lea    rax,[rax+rdx*8]
  41cb74:	jmp    0x41cb05
  41cb76:	call   0x43f180
  41cb7b:	nop
  41cb7c:	nop    DWORD PTR [rax+0x0]
  41cb80:	push   rdi
  41cb81:	push   rsi
  41cb82:	push   rbx
  41cb83:	sub    rsp,0x20
  41cb87:	movzx  eax,BYTE PTR [rdx+0x4]
  41cb8b:	mov    rbx,rdx
  41cb8e:	lea    rdx,[rip+0x2b3eb]        # 0x447f80
  41cb95:	mov    rsi,rcx
  41cb98:	shl    rax,0x4
  41cb9c:	mov    eax,DWORD PTR [rdx+rax*1]
  41cb9f:	cmp    eax,0x1
  41cba2:	je     0x41cbe0
  41cba4:	cmp    eax,0x2
  41cba7:	mov    edx,0x7
  41cbac:	jne    0x41cbb4
  41cbae:	mov    eax,DWORD PTR [rbx+0x8]
  41cbb1:	lea    edx,[rax+0x1]
  41cbb4:	mov    rcx,rsi
  41cbb7:	call   0x41abe0
  41cbbc:	xor    r9d,r9d
  41cbbf:	mov    rdi,rax
  41cbc2:	mov    r8,rax
  41cbc5:	mov    rdx,rbx
  41cbc8:	mov    rcx,rsi
  41cbcb:	call   0x41a090
  41cbd0:	mov    BYTE PTR [rax],0x0
  41cbd3:	mov    rax,rdi
  41cbd6:	add    rsp,0x20
  41cbda:	pop    rbx
  41cbdb:	pop    rsi
  41cbdc:	pop    rdi
  41cbdd:	ret    
  41cbde:	xchg   ax,ax
  41cbe0:	mov    rax,QWORD PTR [rbx+0x8]
  41cbe4:	mov    eax,DWORD PTR [rax+0x8]
  41cbe7:	lea    eax,[rax+rax*4]
  41cbea:	lea    edx,[rax+rax*1+0x1]
  41cbee:	jmp    0x41cbb4
  41cbf0:	push   rsi
  41cbf1:	push   rbx
  41cbf2:	sub    rsp,0x28
  41cbf6:	mov    r8,QWORD PTR [rcx+0x38]
  41cbfa:	mov    rbx,rdx
  41cbfd:	mov    rsi,rcx
  41cc00:	mov    rax,QWORD PTR [r8+0x10]
  41cc04:	mov    rdx,QWORD PTR [r8+0x18]
  41cc08:	sub    rdx,rax
  41cc0b:	cmp    rdx,rbx
  41cc0e:	jae    0x41cc2a
  41cc10:	mov    rdx,rbx
  41cc13:	call   0x41a9c0
  41cc18:	mov    r8,rax
  41cc1b:	mov    rax,QWORD PTR [rsi+0x38]
  41cc1f:	mov    QWORD PTR [r8],rax
  41cc22:	mov    rax,QWORD PTR [r8+0x10]
  41cc26:	mov    QWORD PTR [rsi+0x38],r8
  41cc2a:	add    rbx,rax
  41cc2d:	mov    QWORD PTR [r8+0x10],rbx
  41cc31:	add    rsp,0x28
  41cc35:	pop    rbx
  41cc36:	pop    rsi
  41cc37:	ret    
  41cc38:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc40:	movzx  eax,BYTE PTR [rcx+0x4]
  41cc44:	lea    rdx,[rip+0x2b335]        # 0x447f80
  41cc4b:	mov    rcx,rax
  41cc4e:	shl    rax,0x4
  41cc52:	mov    edx,DWORD PTR [rdx+rax*1]
  41cc55:	cmp    edx,0x1
  41cc58:	je     0x41ccb1
  41cc5a:	jle    0x41cca0
  41cc5c:	cmp    edx,0x2
  41cc5f:	mov    eax,0x2
  41cc64:	je     0x41cc95
  41cc66:	cmp    edx,0x3
  41cc69:	jne    0x41ccb4
  41cc6b:	cmp    cl,0x4e
  41cc6e:	mov    eax,0x3
  41cc73:	je     0x41cc95
  41cc75:	cmp    cl,0x51
  41cc78:	je     0x41cc90
  41cc7a:	xor    eax,eax
  41cc7c:	cmp    cl,0x4f
  41cc7f:	setne  al
  41cc82:	add    eax,0x5
  41cc85:	ret    
  41cc86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cc90:	mov    eax,0x1
  41cc95:	repz ret 
  41cc97:	nop    WORD PTR [rax+rax*1+0x0]
  41cca0:	test   edx,edx
  41cca2:	jne    0x41ccb4
  41cca4:	xor    eax,eax
  41cca6:	cmp    cl,0x26
  41cca9:	setne  al
  41ccac:	lea    eax,[rax+rax*1+0x4]
  41ccb0:	ret    
  41ccb1:	xor    eax,eax
  41ccb3:	ret    
  41ccb4:	mov    eax,0x6
  41ccb9:	ret    
  41ccba:	nop    WORD PTR [rax+rax*1+0x0]
  41ccc0:	mov    QWORD PTR [rcx+0x530],rdx
  41ccc7:	ret    
  41ccc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ccd0:	mov    QWORD PTR [rcx+0x530],0x0
  41ccdb:	ret    
  41ccdc:	nop
  41ccdd:	nop
  41ccde:	nop
  41ccdf:	nop
  41cce0:	push   rbp
  41cce1:	push   rdi
  41cce2:	push   rsi
  41cce3:	push   rbx
  41cce4:	sub    rsp,0x28
  41cce8:	mov    rax,QWORD PTR [rcx+0x20]
  41ccec:	mov    rdi,rcx
  41ccef:	mov    rbx,rdx
  41ccf2:	test   rax,rax
  41ccf5:	je     0x41cd5e
  41ccf7:	mov    edx,DWORD PTR [rcx+0x30]
  41ccfa:	test   edx,edx
  41ccfc:	je     0x41cd5e
  41ccfe:	xor    esi,esi
  41cd00:	jmp    0x41cd13
  41cd02:	cmp    dl,0x2f
  41cd05:	je     0x41cd41
  41cd07:	add    esi,0x1
  41cd0a:	cmp    DWORD PTR [rdi+0x30],esi
  41cd0d:	jbe    0x41cd5e
  41cd0f:	mov    rax,QWORD PTR [rdi+0x20]
  41cd13:	mov    rdx,QWORD PTR [rdi+0x28]
  41cd17:	mov    ebp,esi
  41cd19:	mov    rcx,QWORD PTR [rax+rbp*8]
  41cd1d:	mov    r8,QWORD PTR [rdx+rbp*8]
  41cd21:	mov    rdx,rbx
  41cd24:	call   0x435ed0
  41cd29:	test   eax,eax
  41cd2b:	jne    0x41cd07
  41cd2d:	mov    rax,QWORD PTR [rdi+0x28]
  41cd31:	mov    rcx,QWORD PTR [rax+rbp*8]
  41cd35:	lea    rax,[rbx+rcx*1]
  41cd39:	movzx  edx,BYTE PTR [rax]
  41cd3c:	cmp    dl,0x5c
  41cd3f:	jne    0x41cd02
  41cd41:	cmp    BYTE PTR [rax+0x1],0x2e
  41cd45:	jne    0x41cd59
  41cd47:	cmp    BYTE PTR [rax+0x2],0x2e
  41cd4b:	jne    0x41cd59
  41cd4d:	movzx  eax,BYTE PTR [rax+0x3]
  41cd51:	cmp    al,0x5c
  41cd53:	je     0x41cd07
  41cd55:	cmp    al,0x2f
  41cd57:	je     0x41cd07
  41cd59:	lea    rbx,[rbx+rcx*1+0x1]
  41cd5e:	movzx  eax,BYTE PTR [rbx]
  41cd61:	cmp    al,0x2e
  41cd63:	jne    0x41cd91
  41cd65:	movzx  eax,BYTE PTR [rbx+0x1]
  41cd69:	cmp    al,0x5c
  41cd6b:	je     0x41cd71
  41cd6d:	cmp    al,0x2f
  41cd6f:	jne    0x41cd91
  41cd71:	movzx  eax,BYTE PTR [rbx+0x2]
  41cd75:	lea    rdx,[rbx+0x2]
  41cd79:	mov    rbx,rdx
  41cd7c:	cmp    al,0x5c
  41cd7e:	je     0x41cd84
  41cd80:	cmp    al,0x2f
  41cd82:	jne    0x41cd61
  41cd84:	add    rbx,0x1
  41cd88:	movzx  eax,BYTE PTR [rbx]
  41cd8b:	cmp    al,0x5c
  41cd8d:	jne    0x41cd80
  41cd8f:	jmp    0x41cd84
  41cd91:	mov    rax,rbx
  41cd94:	add    rsp,0x28
  41cd98:	pop    rbx
  41cd99:	pop    rsi
  41cd9a:	pop    rdi
  41cd9b:	pop    rbp
  41cd9c:	ret    
  41cd9d:	nop    DWORD PTR [rax]
  41cda0:	push   rbx
  41cda1:	sub    rsp,0x20
  41cda5:	movzx  eax,BYTE PTR [rcx]
  41cda8:	mov    rbx,rcx
  41cdab:	test   al,al
  41cdad:	je     0x41cebc
  41cdb3:	lea    r9,[rcx-0x1]
  41cdb7:	xor    edx,edx
  41cdb9:	mov    r8,r9
  41cdbc:	jmp    0x41cdde
  41cdbe:	xchg   ax,ax
  41cdc0:	cmp    al,0x23
  41cdc2:	je     0x41ce11
  41cdc4:	cmp    al,0x24
  41cdc6:	sete   al
  41cdc9:	movzx  eax,al
  41cdcc:	add    edx,eax
  41cdce:	add    r8,0x1
  41cdd2:	movzx  eax,BYTE PTR [r8+0x1]
  41cdd7:	add    edx,0x1
  41cdda:	test   al,al
  41cddc:	je     0x41ce24
  41cdde:	cmp    al,0x20
  41cde0:	je     0x41cde8
  41cde2:	jg     0x41cdc0
  41cde4:	cmp    al,0x9
  41cde6:	jne    0x41cdce
  41cde8:	cmp    rbx,r8
  41cdeb:	mov    rax,r8
  41cdee:	ja     0x41ce11
  41cdf0:	cmp    BYTE PTR [r8],0x5c
  41cdf4:	je     0x41ce05
  41cdf6:	jmp    0x41ce11
  41cdf8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ce00:	cmp    BYTE PTR [rax],0x5c
  41ce03:	jne    0x41ce11
  41ce05:	sub    rax,0x1
  41ce09:	add    edx,0x1
  41ce0c:	cmp    r9,rax
  41ce0f:	jne    0x41ce00
  41ce11:	add    r8,0x1
  41ce15:	movzx  eax,BYTE PTR [r8+0x1]
  41ce1a:	add    edx,0x1
  41ce1d:	add    edx,0x1
  41ce20:	test   al,al
  41ce22:	jne    0x41cdde
  41ce24:	add    edx,0x1
  41ce27:	movsxd rcx,edx
  41ce2a:	call   0x4385d0
  41ce2f:	movzx  r9d,BYTE PTR [rbx]
  41ce33:	test   r9b,r9b
  41ce36:	je     0x41ceb0
  41ce38:	lea    r11,[rbx-0x1]
  41ce3c:	mov    rdx,rax
  41ce3f:	mov    r10,r11
  41ce42:	jmp    0x41ce6c
  41ce44:	cmp    r9b,0x23
  41ce48:	je     0x41cea7
  41ce4a:	cmp    r9b,0x24
  41ce4e:	jne    0x41ce57
  41ce50:	mov    BYTE PTR [rdx],0x24
  41ce53:	add    rdx,0x1
  41ce57:	add    r10,0x1
  41ce5b:	mov    BYTE PTR [rdx],r9b
  41ce5e:	add    rdx,0x1
  41ce62:	movzx  r9d,BYTE PTR [r10+0x1]
  41ce67:	test   r9b,r9b
  41ce6a:	je     0x41ceb3
  41ce6c:	cmp    r9b,0x20
  41ce70:	je     0x41ce7a
  41ce72:	jg     0x41ce44
  41ce74:	cmp    r9b,0x9
  41ce78:	jne    0x41ce57
  41ce7a:	cmp    rbx,r10
  41ce7d:	mov    r8,r10
  41ce80:	ja     0x41cea7
  41ce82:	cmp    BYTE PTR [r10],0x5c
  41ce86:	je     0x41ce96
  41ce88:	jmp    0x41cea7
  41ce8a:	nop    WORD PTR [rax+rax*1+0x0]
  41ce90:	cmp    BYTE PTR [r8],0x5c
  41ce94:	jne    0x41cea7
  41ce96:	sub    r8,0x1
  41ce9a:	add    rdx,0x1
  41ce9e:	mov    BYTE PTR [rdx-0x1],0x5c
  41cea2:	cmp    r8,r11
  41cea5:	jne    0x41ce90
  41cea7:	mov    BYTE PTR [rdx],0x5c
  41ceaa:	add    rdx,0x1
  41ceae:	jmp    0x41ce57
  41ceb0:	mov    rdx,rax
  41ceb3:	mov    BYTE PTR [rdx],0x0
  41ceb6:	add    rsp,0x20
  41ceba:	pop    rbx
  41cebb:	ret    
  41cebc:	mov    ecx,0x1
  41cec1:	jmp    0x41ce2a
  41cec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ced0:	mov    edx,0x38
  41ced5:	mov    ecx,0x1
  41ceda:	jmp    0x438600
  41cedf:	nop
  41cee0:	push   rsi
  41cee1:	push   rbx
  41cee2:	sub    rsp,0x28
  41cee6:	mov    rbx,rcx
  41cee9:	mov    rcx,QWORD PTR [rcx]
  41ceec:	test   rcx,rcx
  41ceef:	je     0x41cf1b
  41cef1:	mov    r8d,DWORD PTR [rbx+0x8]
  41cef5:	test   r8d,r8d
  41cef8:	je     0x41cf16
  41cefa:	xor    esi,esi
  41cefc:	nop    DWORD PTR [rax+0x0]
  41cf00:	mov    eax,esi
  41cf02:	add    esi,0x1
  41cf05:	mov    rcx,QWORD PTR [rcx+rax*8]
  41cf09:	call   0x43f100
  41cf0e:	cmp    DWORD PTR [rbx+0x8],esi
  41cf11:	mov    rcx,QWORD PTR [rbx]
  41cf14:	ja     0x41cf00
  41cf16:	call   0x43f100
  41cf1b:	mov    rcx,QWORD PTR [rbx+0x10]
  41cf1f:	test   rcx,rcx
  41cf22:	je     0x41cf4c
  41cf24:	mov    edx,DWORD PTR [rbx+0x18]
  41cf27:	test   edx,edx
  41cf29:	je     0x41cf47
  41cf2b:	xor    esi,esi
  41cf2d:	nop    DWORD PTR [rax]
  41cf30:	mov    eax,esi
  41cf32:	add    esi,0x1
  41cf35:	mov    rcx,QWORD PTR [rcx+rax*8]
  41cf39:	call   0x43f100
  41cf3e:	cmp    DWORD PTR [rbx+0x18],esi
  41cf41:	mov    rcx,QWORD PTR [rbx+0x10]
  41cf45:	ja     0x41cf30
  41cf47:	call   0x43f100
  41cf4c:	mov    rcx,QWORD PTR [rbx+0x20]
  41cf50:	test   rcx,rcx
  41cf53:	je     0x41cf85
  41cf55:	mov    eax,DWORD PTR [rbx+0x30]
  41cf58:	test   eax,eax
  41cf5a:	je     0x41cf77
  41cf5c:	xor    esi,esi
  41cf5e:	xchg   ax,ax
  41cf60:	mov    eax,esi
  41cf62:	add    esi,0x1
  41cf65:	mov    rcx,QWORD PTR [rcx+rax*8]
  41cf69:	call   0x43f100
  41cf6e:	cmp    DWORD PTR [rbx+0x30],esi
  41cf71:	mov    rcx,QWORD PTR [rbx+0x20]
  41cf75:	ja     0x41cf60
  41cf77:	call   0x43f100
  41cf7c:	mov    rcx,QWORD PTR [rbx+0x28]
  41cf80:	call   0x43f100
  41cf85:	mov    rcx,rbx
  41cf88:	add    rsp,0x28
  41cf8c:	pop    rbx
  41cf8d:	pop    rsi
  41cf8e:	jmp    0x43f100
  41cf93:	nop    DWORD PTR [rax]
  41cf96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cfa0:	push   rdi
  41cfa1:	push   rsi
  41cfa2:	push   rbx
  41cfa3:	sub    rsp,0x20
  41cfa7:	mov    eax,DWORD PTR [rcx+0x8]
  41cfaa:	cmp    eax,DWORD PTR [rcx+0xc]
  41cfad:	mov    rbx,rcx
  41cfb0:	mov    rdi,rdx
  41cfb3:	mov    esi,r8d
  41cfb6:	je     0x41d000
  41cfb8:	mov    rcx,rbx
  41cfbb:	mov    rdx,rdi
  41cfbe:	call   0x41cce0
  41cfc3:	test   esi,esi
  41cfc5:	mov    rcx,rax
  41cfc8:	jne    0x41cff0
  41cfca:	call   0x4386d0
  41cfcf:	mov    edx,DWORD PTR [rbx+0x8]
  41cfd2:	mov    rcx,QWORD PTR [rbx]
  41cfd5:	lea    r8d,[rdx+0x1]
  41cfd9:	mov    DWORD PTR [rbx+0x8],r8d
  41cfdd:	mov    QWORD PTR [rcx+rdx*8],rax
  41cfe1:	add    rsp,0x20
  41cfe5:	pop    rbx
  41cfe6:	pop    rsi
  41cfe7:	pop    rdi
  41cfe8:	ret    
  41cfe9:	nop    DWORD PTR [rax+0x0]
  41cff0:	call   0x41cda0
  41cff5:	jmp    0x41cfcf
  41cff7:	nop    WORD PTR [rax+rax*1+0x0]
  41d000:	lea    edx,[rax+rax*1+0x4]
  41d004:	mov    DWORD PTR [rcx+0xc],edx
  41d007:	mov    rcx,QWORD PTR [rcx]
  41d00a:	shl    rdx,0x3
  41d00e:	call   0x438650
  41d013:	mov    QWORD PTR [rbx],rax
  41d016:	jmp    0x41cfb8
  41d018:	nop    DWORD PTR [rax+rax*1+0x0]
  41d020:	push   rbp
  41d021:	push   r12
  41d023:	push   rdi
  41d024:	push   rsi
  41d025:	push   rbx
  41d026:	mov    rbp,rsp
  41d029:	sub    rsp,0x20
  41d02d:	mov    r8d,DWORD PTR [rcx+0x8]
  41d031:	test   r8d,r8d
  41d034:	jne    0x41d0b4
  41d036:	cmp    BYTE PTR [rdx],0x0
  41d039:	mov    rbx,rcx
  41d03c:	je     0x41d0c0
  41d042:	mov    rcx,rdx
  41d045:	call   0x438060
  41d04a:	mov    rcx,rax
  41d04d:	mov    r12,rax
  41d050:	call   0x43f028
  41d055:	lea    r8,[rax+0x21]
  41d059:	mov    rsi,rax
  41d05c:	mov    rax,r8
  41d05f:	and    rax,0xfffffffffffffff0
  41d063:	call   0x439cf0
  41d068:	sub    rsp,rax
  41d06b:	lea    r8,[rsi+0x1]
  41d06f:	mov    rdx,r12
  41d072:	lea    rdi,[rsp+0x20]
  41d077:	mov    rcx,rdi
  41d07a:	add    rsi,rdi
  41d07d:	call   0x43f0a8
  41d082:	mov    edx,0x2e
  41d087:	mov    rcx,rdi
  41d08a:	call   0x43f000
  41d08f:	test   rax,rax
  41d092:	mov    edx,0x6f2e
  41d097:	mov    r8d,0x1
  41d09d:	cmove  rax,rsi
  41d0a1:	mov    rcx,rbx
  41d0a4:	mov    WORD PTR [rax],dx
  41d0a7:	mov    BYTE PTR [rax+0x2],0x0
  41d0ab:	mov    rdx,rdi
  41d0ae:	call   0x41cfa0
  41d0b3:	nop
  41d0b4:	mov    rsp,rbp
  41d0b7:	pop    rbx
  41d0b8:	pop    rsi
  41d0b9:	pop    rdi
  41d0ba:	pop    r12
  41d0bc:	pop    rbp
  41d0bd:	ret    
  41d0be:	xchg   ax,ax
  41d0c0:	lea    rdx,[rip+0x2b439]        # 0x448500
  41d0c7:	mov    r8d,0x1
  41d0cd:	call   0x41cfa0
  41d0d2:	nop
  41d0d3:	mov    rsp,rbp
  41d0d6:	pop    rbx
  41d0d7:	pop    rsi
  41d0d8:	pop    rdi
  41d0d9:	pop    r12
  41d0db:	pop    rbp
  41d0dc:	ret    
  41d0dd:	nop    DWORD PTR [rax]
  41d0e0:	push   rsi
  41d0e1:	push   rbx
  41d0e2:	sub    rsp,0x28
  41d0e6:	mov    rbx,rcx
  41d0e9:	call   0x41cce0
  41d0ee:	mov    rcx,rax
  41d0f1:	call   0x41cda0
  41d0f6:	mov    edx,DWORD PTR [rbx+0x18]
  41d0f9:	mov    rsi,rax
  41d0fc:	cmp    edx,DWORD PTR [rbx+0x1c]
  41d0ff:	je     0x41d120
  41d101:	mov    rcx,QWORD PTR [rbx+0x10]
  41d105:	lea    eax,[rdx+0x1]
  41d108:	mov    DWORD PTR [rbx+0x18],eax
  41d10b:	mov    QWORD PTR [rcx+rdx*8],rsi
  41d10f:	add    rsp,0x28
  41d113:	pop    rbx
  41d114:	pop    rsi
  41d115:	ret    
  41d116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d120:	lea    edx,[rdx+rdx*1+0x8]
  41d124:	mov    rcx,QWORD PTR [rbx+0x10]
  41d128:	mov    DWORD PTR [rbx+0x1c],edx
  41d12b:	shl    rdx,0x3
  41d12f:	call   0x438650
  41d134:	mov    edx,DWORD PTR [rbx+0x18]
  41d137:	mov    QWORD PTR [rbx+0x10],rax
  41d13b:	mov    rcx,rax
  41d13e:	jmp    0x41d105
  41d140:	push   r12
  41d142:	push   rbp
  41d143:	push   rdi
  41d144:	push   rsi
  41d145:	push   rbx
  41d146:	sub    rsp,0x20
  41d14a:	mov    rsi,rdx
  41d14d:	movzx  edx,BYTE PTR [rdx]
  41d150:	mov    rdi,rcx
  41d153:	test   dl,dl
  41d155:	je     0x41d225
  41d15b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d160:	xor    ebp,ebp
  41d162:	cmp    dl,0x3a
  41d165:	mov    rax,rsi
  41d168:	mov    rbx,rsi
  41d16b:	mov    ecx,0x1
  41d170:	jne    0x41d179
  41d172:	jmp    0x41d194
  41d174:	test   r8b,r8b
  41d177:	je     0x41d187
  41d179:	add    rax,0x1
  41d17d:	movzx  r8d,BYTE PTR [rax]
  41d181:	cmp    r8b,0x3a
  41d185:	jne    0x41d174
  41d187:	mov    rbp,rax
  41d18a:	mov    rbx,rax
  41d18d:	sub    rbp,rsi
  41d190:	lea    rcx,[rbp+0x1]
  41d194:	call   0x4385d0
  41d199:	mov    rdx,rsi
  41d19c:	mov    r8,rbp
  41d19f:	mov    rcx,rax
  41d1a2:	mov    r12,rax
  41d1a5:	xor    esi,esi
  41d1a7:	call   0x43f0a8
  41d1ac:	cmp    BYTE PTR [rbx],0x3a
  41d1af:	mov    edx,DWORD PTR [rdi+0x30]
  41d1b2:	mov    BYTE PTR [r12+rbp*1],0x0
  41d1b7:	sete   sil
  41d1bb:	add    rsi,rbx
  41d1be:	cmp    edx,DWORD PTR [rdi+0x34]
  41d1c1:	je     0x41d1f0
  41d1c3:	mov    rcx,QWORD PTR [rdi+0x20]
  41d1c7:	mov    eax,edx
  41d1c9:	add    edx,0x1
  41d1cc:	mov    QWORD PTR [rcx+rax*8],r12
  41d1d0:	mov    rcx,QWORD PTR [rdi+0x28]
  41d1d4:	mov    QWORD PTR [rcx+rax*8],rbp
  41d1d8:	mov    DWORD PTR [rdi+0x30],edx
  41d1db:	movzx  eax,BYTE PTR [rsi]
  41d1de:	test   al,al
  41d1e0:	je     0x41d225
  41d1e2:	mov    edx,eax
  41d1e4:	jmp    0x41d160
  41d1e9:	nop    DWORD PTR [rax+0x0]
  41d1f0:	lea    eax,[rdx+rdx*1+0x8]
  41d1f4:	mov    rcx,QWORD PTR [rdi+0x20]
  41d1f8:	lea    rdx,[rax*8+0x0]
  41d200:	mov    DWORD PTR [rdi+0x34],eax
  41d203:	call   0x438650
  41d208:	mov    edx,DWORD PTR [rdi+0x34]
  41d20b:	mov    rcx,QWORD PTR [rdi+0x28]
  41d20f:	mov    QWORD PTR [rdi+0x20],rax
  41d213:	shl    rdx,0x3
  41d217:	call   0x438650
  41d21c:	mov    edx,DWORD PTR [rdi+0x30]
  41d21f:	mov    QWORD PTR [rdi+0x28],rax
  41d223:	jmp    0x41d1c3
  41d225:	add    rsp,0x20
  41d229:	pop    rbx
  41d22a:	pop    rsi
  41d22b:	pop    rdi
  41d22c:	pop    rbp
  41d22d:	pop    r12
  41d22f:	ret    
  41d230:	push   r15
  41d232:	push   r14
  41d234:	push   r13
  41d236:	push   r12
  41d238:	push   rbp
  41d239:	push   rdi
  41d23a:	push   rsi
  41d23b:	push   rbx
  41d23c:	sub    rsp,0x28
  41d240:	mov    edi,0x1
  41d245:	lea    eax,[r8-0x1]
  41d249:	mov    r12,rdx
  41d24c:	mov    edx,DWORD PTR [rcx+0x8]
  41d24f:	mov    r13d,r8d
  41d252:	mov    rbp,rcx
  41d255:	cmp    eax,0x20
  41d258:	mov    eax,0x22
  41d25d:	cmovbe r13d,eax
  41d261:	test   edx,edx
  41d263:	je     0x41d303
  41d269:	mov    rax,QWORD PTR [rcx]
  41d26c:	xor    ebx,ebx
  41d26e:	mov    rsi,QWORD PTR [rax]
  41d271:	mov    rcx,rsi
  41d274:	call   0x43f028
  41d279:	mov    edi,eax
  41d27b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d280:	mov    rdx,r12
  41d283:	mov    rcx,rsi
  41d286:	add    ebx,0x1
  41d289:	call   0x43f110
  41d28e:	cmp    DWORD PTR [rbp+0x8],ebx
  41d291:	jbe    0x41d300
  41d293:	mov    rax,QWORD PTR [rbp+0x0]
  41d297:	mov    r14d,ebx
  41d29a:	mov    rsi,QWORD PTR [rax+r14*8]
  41d29e:	mov    rcx,rsi
  41d2a1:	call   0x43f028
  41d2a6:	add    edi,eax
  41d2a8:	test   ebx,ebx
  41d2aa:	mov    r15,rax
  41d2ad:	je     0x41d280
  41d2af:	cmp    edi,r13d
  41d2b2:	jbe    0x41d2e1
  41d2b4:	test   r13d,r13d
  41d2b7:	je     0x41d2e1
  41d2b9:	lea    rcx,[rip+0x2b242]        # 0x448502
  41d2c0:	mov    r9,r12
  41d2c3:	mov    r8d,0x4
  41d2c9:	mov    edx,0x1
  41d2ce:	lea    edi,[r15+0x1]
  41d2d2:	call   0x43f0e0
  41d2d7:	mov    rax,QWORD PTR [rbp+0x0]
  41d2db:	mov    rsi,QWORD PTR [rax+r14*8]
  41d2df:	jmp    0x41d280
  41d2e1:	mov    rdx,r12
  41d2e4:	mov    ecx,0x20
  41d2e9:	add    edi,0x1
  41d2ec:	call   0x43f090
  41d2f1:	mov    rax,QWORD PTR [rbp+0x0]
  41d2f5:	mov    rsi,QWORD PTR [rax+r14*8]
  41d2f9:	jmp    0x41d280
  41d2fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d300:	add    edi,0x1
  41d303:	mov    rdx,r12
  41d306:	mov    ecx,0x3a
  41d30b:	call   0x43f090
  41d310:	mov    eax,DWORD PTR [rbp+0x18]
  41d313:	test   r13d,r13d
  41d316:	setne  r14b
  41d31a:	xor    ebx,ebx
  41d31c:	test   eax,eax
  41d31e:	jne    0x41d35d
  41d320:	jmp    0x41d390
  41d322:	test   r14b,r14b
  41d325:	je     0x41d376
  41d327:	lea    rcx,[rip+0x2b1d4]        # 0x448502
  41d32e:	lea    edi,[r15+0x1]
  41d332:	mov    r9,r12
  41d335:	mov    r8d,0x4
  41d33b:	mov    edx,0x1
  41d340:	call   0x43f0e0
  41d345:	mov    rax,QWORD PTR [rbp+0x10]
  41d349:	mov    rdx,r12
  41d34c:	add    ebx,0x1
  41d34f:	mov    rcx,QWORD PTR [rax+rsi*8]
  41d353:	call   0x43f110
  41d358:	cmp    DWORD PTR [rbp+0x18],ebx
  41d35b:	jbe    0x41d390
  41d35d:	mov    rax,QWORD PTR [rbp+0x10]
  41d361:	mov    esi,ebx
  41d363:	mov    rcx,QWORD PTR [rax+rsi*8]
  41d367:	call   0x43f028
  41d36c:	add    edi,eax
  41d36e:	mov    r15,rax
  41d371:	cmp    edi,r13d
  41d374:	ja     0x41d322
  41d376:	mov    rdx,r12
  41d379:	mov    ecx,0x20
  41d37e:	add    edi,0x1
  41d381:	call   0x43f090
  41d386:	jmp    0x41d345
  41d388:	nop    DWORD PTR [rax+rax*1+0x0]
  41d390:	mov    rdx,r12
  41d393:	mov    ecx,0xa
  41d398:	add    rsp,0x28
  41d39c:	pop    rbx
  41d39d:	pop    rsi
  41d39e:	pop    rdi
  41d39f:	pop    rbp
  41d3a0:	pop    r12
  41d3a2:	pop    r13
  41d3a4:	pop    r14
  41d3a6:	pop    r15
  41d3a8:	jmp    0x43f090
  41d3ad:	nop    DWORD PTR [rax]
  41d3b0:	push   rdi
  41d3b1:	push   rsi
  41d3b2:	push   rbx
  41d3b3:	sub    rsp,0x20
  41d3b7:	cmp    DWORD PTR [rcx+0x18],0x1
  41d3bb:	mov    ebx,0x1
  41d3c0:	mov    rdi,rcx
  41d3c3:	mov    rsi,rdx
  41d3c6:	jbe    0x41d411
  41d3c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d3d0:	mov    rdx,rsi
  41d3d3:	mov    ecx,0xa
  41d3d8:	call   0x43f090
  41d3dd:	mov    rax,QWORD PTR [rdi+0x10]
  41d3e1:	mov    edx,ebx
  41d3e3:	add    ebx,0x1
  41d3e6:	mov    rcx,QWORD PTR [rax+rdx*8]
  41d3ea:	mov    rdx,rsi
  41d3ed:	call   0x43f110
  41d3f2:	mov    rdx,rsi
  41d3f5:	mov    ecx,0x3a
  41d3fa:	call   0x43f090
  41d3ff:	mov    rdx,rsi
  41d402:	mov    ecx,0xa
  41d407:	call   0x43f090
  41d40c:	cmp    DWORD PTR [rdi+0x18],ebx
  41d40f:	ja     0x41d3d0
  41d411:	add    rsp,0x20
  41d415:	pop    rbx
  41d416:	pop    rsi
  41d417:	pop    rdi
  41d418:	ret    
  41d419:	nop    DWORD PTR [rax+0x0]
  41d420:	push   r12
  41d422:	push   rbp
  41d423:	push   rdi
  41d424:	push   rsi
  41d425:	push   rbx
  41d426:	sub    rsp,0x30
  41d42a:	mov    r8d,0x1
  41d430:	mov    rsi,rcx
  41d433:	lea    rcx,[rcx+0x18]
  41d437:	mov    r9,rdx
  41d43a:	mov    rbp,rdx
  41d43d:	mov    edx,0x4
  41d442:	call   0x43f0e0
  41d447:	cmp    rax,0x1
  41d44b:	mov    edx,0xffffffff
  41d450:	jne    0x41d4c0
  41d452:	mov    eax,DWORD PTR [rsi+0x18]
  41d455:	xor    ebx,ebx
  41d457:	lea    r12,[rsp+0x28]
  41d45c:	test   eax,eax
  41d45e:	jne    0x41d48b
  41d460:	jmp    0x41d4d0
  41d462:	mov    rax,QWORD PTR [rsi+0x10]
  41d466:	mov    rdx,QWORD PTR [rsp+0x28]
  41d46b:	mov    r9,rbp
  41d46e:	mov    r8d,0x1
  41d474:	mov    rcx,QWORD PTR [rax+rdi*8]
  41d478:	call   0x43f0e0
  41d47d:	cmp    rax,0x1
  41d481:	jne    0x41d4bb
  41d483:	add    ebx,0x1
  41d486:	cmp    DWORD PTR [rsi+0x18],ebx
  41d489:	jbe    0x41d4d0
  41d48b:	mov    rax,QWORD PTR [rsi+0x10]
  41d48f:	mov    edi,ebx
  41d491:	mov    rcx,QWORD PTR [rax+rdi*8]
  41d495:	call   0x43f028
  41d49a:	mov    r9,rbp
  41d49d:	mov    r8d,0x1
  41d4a3:	mov    edx,0x8
  41d4a8:	mov    rcx,r12
  41d4ab:	mov    QWORD PTR [rsp+0x28],rax
  41d4b0:	call   0x43f0e0
  41d4b5:	cmp    rax,0x1
  41d4b9:	je     0x41d462
  41d4bb:	mov    edx,0xffffffff
  41d4c0:	mov    eax,edx
  41d4c2:	add    rsp,0x30
  41d4c6:	pop    rbx
  41d4c7:	pop    rsi
  41d4c8:	pop    rdi
  41d4c9:	pop    rbp
  41d4ca:	pop    r12
  41d4cc:	ret    
  41d4cd:	nop    DWORD PTR [rax]
  41d4d0:	xor    edx,edx
  41d4d2:	mov    eax,edx
  41d4d4:	add    rsp,0x30
  41d4d8:	pop    rbx
  41d4d9:	pop    rsi
  41d4da:	pop    rdi
  41d4db:	pop    rbp
  41d4dc:	pop    r12
  41d4de:	ret    
  41d4df:	nop
  41d4e0:	push   r14
  41d4e2:	push   r13
  41d4e4:	push   r12
  41d4e6:	push   rbp
  41d4e7:	push   rdi
  41d4e8:	push   rsi
  41d4e9:	push   rbx
  41d4ea:	sub    rsp,0x30
  41d4ee:	mov    r14,rcx
  41d4f1:	lea    rcx,[rsp+0x24]
  41d4f6:	mov    r9,rdx
  41d4f9:	mov    rdi,rdx
  41d4fc:	mov    rbp,r8
  41d4ff:	mov    edx,0x1
  41d504:	mov    r8d,0x4
  41d50a:	call   0x43f108
  41d50f:	cmp    rax,0x4
  41d513:	mov    edx,0xffffffff
  41d518:	jne    0x41d5ed
  41d51e:	mov    ecx,0x200
  41d523:	call   0x4385d0
  41d528:	mov    rbx,rax
  41d52b:	mov    eax,DWORD PTR [rsp+0x24]
  41d52f:	test   eax,eax
  41d531:	je     0x41d600
  41d537:	mov    r12d,0x200
  41d53d:	xor    esi,esi
  41d53f:	lea    r13,[rsp+0x28]
  41d544:	jmp    0x41d593
  41d546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d550:	mov    r9,rdi
  41d553:	mov    edx,0x1
  41d558:	mov    rcx,rbx
  41d55b:	call   0x43f108
  41d560:	cmp    rax,QWORD PTR [rsp+0x28]
  41d565:	jne    0x41d5e0
  41d567:	test   rbp,rbp
  41d56a:	mov    BYTE PTR [rbx+rax*1],0x0
  41d56e:	je     0x41d58a
  41d570:	mov    rdx,rbp
  41d573:	mov    rcx,rbx
  41d576:	call   0x435e60
  41d57b:	test   eax,eax
  41d57d:	je     0x41d58a
  41d57f:	mov    rdx,rbx
  41d582:	mov    rcx,r14
  41d585:	call   0x41d0e0
  41d58a:	add    esi,0x1
  41d58d:	cmp    DWORD PTR [rsp+0x24],esi
  41d591:	jbe    0x41d600
  41d593:	mov    r9,rdi
  41d596:	mov    r8d,0x8
  41d59c:	mov    edx,0x1
  41d5a1:	mov    rcx,r13
  41d5a4:	call   0x43f108
  41d5a9:	cmp    rax,0x8
  41d5ad:	jne    0x41d5e0
  41d5af:	mov    r8,QWORD PTR [rsp+0x28]
  41d5b4:	lea    rax,[r8+0x1]
  41d5b8:	cmp    rax,r12
  41d5bb:	jbe    0x41d550
  41d5bd:	lea    r12,[r8+0x80]
  41d5c4:	mov    rcx,rbx
  41d5c7:	mov    rdx,r12
  41d5ca:	call   0x438650
  41d5cf:	mov    r8,QWORD PTR [rsp+0x28]
  41d5d4:	mov    rbx,rax
  41d5d7:	jmp    0x41d550
  41d5dc:	nop    DWORD PTR [rax+0x0]
  41d5e0:	mov    rcx,rbx
  41d5e3:	call   0x43f100
  41d5e8:	mov    edx,0xffffffff
  41d5ed:	mov    eax,edx
  41d5ef:	add    rsp,0x30
  41d5f3:	pop    rbx
  41d5f4:	pop    rsi
  41d5f5:	pop    rdi
  41d5f6:	pop    rbp
  41d5f7:	pop    r12
  41d5f9:	pop    r13
  41d5fb:	pop    r14
  41d5fd:	ret    
  41d5fe:	xchg   ax,ax
  41d600:	mov    rcx,rbx
  41d603:	call   0x43f100
  41d608:	xor    edx,edx
  41d60a:	jmp    0x41d5ed
  41d60c:	nop
  41d60d:	nop
  41d60e:	nop
  41d60f:	nop
  41d610:	push   rsi
  41d611:	push   rbx
  41d612:	sub    rsp,0x38
  41d616:	mov    esi,0x1
  41d61b:	mov    edx,0x90
  41d620:	shl    esi,cl
  41d622:	mov    ecx,0x1
  41d627:	call   0x438600
  41d62c:	mov    rbx,rax
  41d62f:	mov    rax,QWORD PTR [rip+0x33ffa]        # 0x451630
  41d636:	lea    r9,[rip+0x1af93]        # 0x4385d0
  41d63d:	xor    r8d,r8d
  41d640:	xor    edx,edx
  41d642:	mov    rcx,rbx
  41d645:	mov    QWORD PTR [rsp+0x20],rax
  41d64a:	call   0x438120
  41d64f:	mov    ecx,esi
  41d651:	mov    edx,0x8
  41d656:	mov    DWORD PTR [rbx+0x30],0x0
  41d65d:	call   0x438600
  41d662:	mov    QWORD PTR [rbx+0x58],rax
  41d666:	mov    rax,rbx
  41d669:	mov    BYTE PTR [rbx+0x88],0x1
  41d670:	mov    DWORD PTR [rbx+0x70],esi
  41d673:	add    rsp,0x38
  41d677:	pop    rbx
  41d678:	pop    rsi
  41d679:	ret    
  41d67a:	nop    WORD PTR [rax+rax*1+0x0]
  41d680:	push   rbx
  41d681:	sub    rsp,0x20
  41d685:	xor    edx,edx
  41d687:	mov    rbx,rcx
  41d68a:	call   0x438480
  41d68f:	cmp    BYTE PTR [rbx+0x88],0x0
  41d696:	je     0x41d6a1
  41d698:	mov    rcx,QWORD PTR [rbx+0x58]
  41d69c:	call   0x43f100
  41d6a1:	mov    rcx,rbx
  41d6a4:	add    rsp,0x20
  41d6a8:	pop    rbx
  41d6a9:	jmp    0x43f100
  41d6ae:	xchg   ax,ax
  41d6b0:	push   r15
  41d6b2:	push   r14
  41d6b4:	push   r13
  41d6b6:	push   r12
  41d6b8:	push   rbp
  41d6b9:	push   rdi
  41d6ba:	push   rsi
  41d6bb:	push   rbx
  41d6bc:	sub    rsp,0x48
  41d6c0:	mov    r11d,DWORD PTR [rcx+0x70]
  41d6c4:	mov    r14,QWORD PTR [rcx+0x58]
  41d6c8:	mov    ebx,r9d
  41d6cb:	add    DWORD PTR [rcx+0x80],0x1
  41d6d2:	mov    QWORD PTR [rsp+0x98],rdx
  41d6da:	mov    rbp,rcx
  41d6dd:	mov    r10,r8
  41d6e0:	mov    r15d,r9d
  41d6e3:	lea    r13d,[r11-0x1]
  41d6e7:	and    ebx,r13d
  41d6ea:	mov    eax,ebx
  41d6ec:	mov    rsi,QWORD PTR [r14+rax*8]
  41d6f0:	lea    rdx,[rax*8+0x0]
  41d6f8:	test   rsi,rsi
  41d6fb:	je     0x41d9f7
  41d701:	cmp    rsi,0xffffffffffffffff
  41d705:	je     0x41da0d
  41d70b:	cmp    DWORD PTR [rsi+0xc],r15d
  41d70f:	mov    r9d,r11d
  41d712:	je     0x41d990
  41d718:	mov    r12d,r15d
  41d71b:	mov    eax,DWORD PTR [rbp+0x84]
  41d721:	shl    r12d,0x4
  41d725:	add    r12d,r15d
  41d728:	and    r12d,r13d
  41d72b:	lea    edi,[rax+0x1]
  41d72e:	or     r12d,0x1
  41d732:	jmp    0x41d737
  41d734:	add    edi,0x1
  41d737:	add    ebx,r12d
  41d73a:	mov    DWORD PTR [rbp+0x84],edi
  41d740:	and    ebx,r13d
  41d743:	mov    eax,ebx
  41d745:	mov    rsi,QWORD PTR [r14+rax*8]
  41d749:	lea    rdx,[rax*8+0x0]
  41d751:	test   rsi,rsi
  41d754:	je     0x41d7c0
  41d756:	cmp    rsi,0xffffffffffffffff
  41d75a:	je     0x41d7b4
  41d75c:	cmp    DWORD PTR [rsi+0xc],r15d
  41d760:	jne    0x41d734
  41d762:	cmp    DWORD PTR [rsi+0x8],r10d
  41d766:	jne    0x41d734
  41d768:	mov    rdx,QWORD PTR [rsp+0x98]
  41d770:	mov    rcx,QWORD PTR [rsi]
  41d773:	mov    r8,r10
  41d776:	mov    DWORD PTR [rsp+0x3c],r11d
  41d77b:	mov    DWORD PTR [rsp+0x30],r9d
  41d780:	mov    QWORD PTR [rsp+0x28],r10
  41d785:	call   0x43f0b0
  41d78a:	test   eax,eax
  41d78c:	mov    r10,QWORD PTR [rsp+0x28]
  41d791:	mov    r9d,DWORD PTR [rsp+0x30]
  41d796:	mov    r11d,DWORD PTR [rsp+0x3c]
  41d79b:	jne    0x41d734
  41d79d:	nop    DWORD PTR [rax]
  41d7a0:	mov    rax,rsi
  41d7a3:	add    rsp,0x48
  41d7a7:	pop    rbx
  41d7a8:	pop    rsi
  41d7a9:	pop    rdi
  41d7aa:	pop    rbp
  41d7ab:	pop    r12
  41d7ad:	pop    r13
  41d7af:	pop    r14
  41d7b1:	pop    r15
  41d7b3:	ret    
  41d7b4:	cmp    r9d,r11d
  41d7b7:	cmovne r9,rbx
  41d7bb:	jmp    0x41d734
  41d7c0:	mov    ecx,DWORD PTR [rsp+0xb0]
  41d7c7:	test   ecx,ecx
  41d7c9:	je     0x41da06
  41d7cf:	cmp    r11d,r9d
  41d7d2:	je     0x41d7dc
  41d7d4:	lea    rdx,[r9*8+0x0]
  41d7dc:	mov    QWORD PTR [rsp+0x30],r10
  41d7e1:	mov    QWORD PTR [rsp+0x28],rdx
  41d7e6:	mov    rcx,rbp
  41d7e9:	call   QWORD PTR [rbp+0x60]
  41d7ec:	mov    rdx,QWORD PTR [rsp+0x28]
  41d7f1:	mov    rbx,rax
  41d7f4:	mov    rax,QWORD PTR [rbp+0x58]
  41d7f8:	mov    r10,QWORD PTR [rsp+0x30]
  41d7fd:	mov    QWORD PTR [rax+rdx*1],rbx
  41d801:	mov    rax,QWORD PTR [rbp+0x68]
  41d805:	mov    DWORD PTR [rbx+0x8],r10d
  41d809:	mov    DWORD PTR [rbx+0xc],r15d
  41d80d:	test   rax,rax
  41d810:	je     0x41d902
  41d816:	lea    rcx,[r10+0x1]
  41d81a:	mov    QWORD PTR [rsp+0x28],r10
  41d81f:	call   rax
  41d821:	mov    r10,QWORD PTR [rsp+0x28]
  41d826:	mov    rdx,QWORD PTR [rsp+0x98]
  41d82e:	mov    rcx,rax
  41d831:	mov    r8,r10
  41d834:	call   0x43f0a8
  41d839:	mov    r10,QWORD PTR [rsp+0x28]
  41d83e:	mov    BYTE PTR [rax+r10*1],0x0
  41d843:	mov    QWORD PTR [rbx],rax
  41d846:	mov    edx,DWORD PTR [rbp+0x70]
  41d849:	mov    eax,DWORD PTR [rbp+0x74]
  41d84c:	mov    rsi,rbx
  41d84f:	lea    edi,[rdx+rdx*1]
  41d852:	add    eax,0x1
  41d855:	mov    DWORD PTR [rbp+0x74],eax
  41d858:	shl    eax,0x2
  41d85b:	add    edx,edi
  41d85d:	cmp    eax,edx
  41d85f:	jb     0x41d7a0
  41d865:	mov    ecx,edi
  41d867:	mov    edx,0x8
  41d86c:	call   0x438600
  41d871:	mov    edx,DWORD PTR [rbp+0x70]
  41d874:	mov    rcx,QWORD PTR [rbp+0x58]
  41d878:	lea    r10d,[rdi-0x1]
  41d87c:	mov    r11,rcx
  41d87f:	lea    r12,[rcx+rdx*8]
  41d883:	mov    rsi,QWORD PTR [r11]
  41d886:	lea    rdx,[rsi-0x1]
  41d88a:	cmp    rdx,0xfffffffffffffffd
  41d88e:	ja     0x41d8d6
  41d890:	mov    r9d,DWORD PTR [rsi+0xc]
  41d894:	mov    edx,r10d
  41d897:	and    edx,r9d
  41d89a:	mov    r8d,edx
  41d89d:	lea    r8,[rax+r8*8]
  41d8a1:	cmp    QWORD PTR [r8],0x0
  41d8a5:	je     0x41d8d3
  41d8a7:	mov    r8d,r9d
  41d8aa:	shl    r8d,0x4
  41d8ae:	add    r9d,r8d
  41d8b1:	and    r9d,r10d
  41d8b4:	or     r9d,0x1
  41d8b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d8c0:	add    edx,r9d
  41d8c3:	and    edx,r10d
  41d8c6:	mov    r8d,edx
  41d8c9:	lea    r8,[rax+r8*8]
  41d8cd:	cmp    QWORD PTR [r8],0x0
  41d8d1:	jne    0x41d8c0
  41d8d3:	mov    QWORD PTR [r8],rsi
  41d8d6:	add    r11,0x8
  41d8da:	cmp    r12,r11
  41d8dd:	ja     0x41d883
  41d8df:	cmp    BYTE PTR [rbp+0x88],0x0
  41d8e6:	jne    0x41d9ce
  41d8ec:	mov    BYTE PTR [rbp+0x88],0x1
  41d8f3:	mov    QWORD PTR [rbp+0x58],rax
  41d8f7:	mov    rsi,rbx
  41d8fa:	mov    DWORD PTR [rbp+0x70],edi
  41d8fd:	jmp    0x41d7a0
  41d902:	mov    rcx,QWORD PTR [rbp+0x18]
  41d906:	movsxd rsi,r10d
  41d909:	lea    rax,[rcx+rsi*1+0x1]
  41d90e:	cmp    QWORD PTR [rbp+0x20],rax
  41d912:	jb     0x41d9e2
  41d918:	mov    rdx,QWORD PTR [rsp+0x98]
  41d920:	mov    r8,rsi
  41d923:	call   0x43f0a8
  41d928:	add    rsi,QWORD PTR [rbp+0x18]
  41d92c:	lea    rax,[rsi+0x1]
  41d930:	mov    QWORD PTR [rbp+0x18],rax
  41d934:	mov    BYTE PTR [rsi],0x0
  41d937:	mov    r8,QWORD PTR [rbp+0x10]
  41d93b:	mov    rax,QWORD PTR [rbp+0x18]
  41d93f:	cmp    rax,r8
  41d942:	je     0x41da15
  41d948:	movsxd rdx,DWORD PTR [rbp+0x30]
  41d94c:	mov    ecx,edx
  41d94e:	add    rax,rdx
  41d951:	mov    rdx,QWORD PTR [rbp+0x20]
  41d955:	not    ecx
  41d957:	movsxd rcx,ecx
  41d95a:	and    rax,rcx
  41d95d:	mov    rcx,QWORD PTR [rbp+0x8]
  41d961:	mov    rdi,rdx
  41d964:	mov    r9,rax
  41d967:	mov    QWORD PTR [rbp+0x18],rax
  41d96b:	sub    r9,rcx
  41d96e:	sub    rdi,rcx
  41d971:	cmp    r9,rdi
  41d974:	jle    0x41d97d
  41d976:	mov    QWORD PTR [rbp+0x18],rdx
  41d97a:	mov    rax,rdx
  41d97d:	mov    QWORD PTR [rbp+0x10],rax
  41d981:	mov    QWORD PTR [rbx],r8
  41d984:	jmp    0x41d846
  41d989:	nop    DWORD PTR [rax+0x0]
  41d990:	cmp    DWORD PTR [rsi+0x8],r8d
  41d994:	jne    0x41d718
  41d99a:	mov    rdx,QWORD PTR [rsp+0x98]
  41d9a2:	mov    rcx,QWORD PTR [rsi]
  41d9a5:	mov    DWORD PTR [rsp+0x30],r11d
  41d9aa:	mov    QWORD PTR [rsp+0x28],r10
  41d9af:	call   0x43f0b0
  41d9b4:	test   eax,eax
  41d9b6:	je     0x41d7a0
  41d9bc:	mov    r11d,DWORD PTR [rsp+0x30]
  41d9c1:	mov    r10,QWORD PTR [rsp+0x28]
  41d9c6:	mov    r9d,r11d
  41d9c9:	jmp    0x41d718
  41d9ce:	mov    QWORD PTR [rsp+0x28],rax
  41d9d3:	call   0x43f100
  41d9d8:	mov    rax,QWORD PTR [rsp+0x28]
  41d9dd:	jmp    0x41d8ec
  41d9e2:	lea    edx,[r10+0x1]
  41d9e6:	mov    rcx,rbp
  41d9e9:	call   0x438250
  41d9ee:	mov    rcx,QWORD PTR [rbp+0x18]
  41d9f2:	jmp    0x41d918
  41d9f7:	mov    eax,DWORD PTR [rsp+0xb0]
  41d9fe:	test   eax,eax
  41da00:	jne    0x41d7dc
  41da06:	xor    esi,esi
  41da08:	jmp    0x41d7a0
  41da0d:	mov    r9d,ebx
  41da10:	jmp    0x41d718
  41da15:	or     BYTE PTR [rbp+0x50],0x2
  41da19:	jmp    0x41d948
  41da1e:	xchg   ax,ax
  41da20:	push   rbx
  41da21:	sub    rsp,0x30
  41da25:	test   r8,r8
  41da28:	je     0x41da5d
  41da2a:	lea    rbx,[rdx+r8*1]
  41da2e:	mov    r10,rdx
  41da31:	xor    eax,eax
  41da33:	add    r10,0x1
  41da37:	movzx  r11d,BYTE PTR [r10-0x1]
  41da3c:	imul   eax,eax,0x43
  41da3f:	cmp    r10,rbx
  41da42:	lea    eax,[rax+r11*1-0x71]
  41da47:	jne    0x41da33
  41da49:	mov    DWORD PTR [rsp+0x20],r9d
  41da4e:	lea    r9d,[rax+r8*1]
  41da52:	call   0x41d6b0
  41da57:	add    rsp,0x30
  41da5b:	pop    rbx
  41da5c:	ret    
  41da5d:	xor    eax,eax
  41da5f:	jmp    0x41da49
  41da61:	nop    DWORD PTR [rax+rax*1+0x0]
  41da66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41da70:	push   r12
  41da72:	push   rbp
  41da73:	push   rdi
  41da74:	push   rsi
  41da75:	push   rbx
  41da76:	sub    rsp,0x20
  41da7a:	mov    eax,DWORD PTR [rcx+0x70]
  41da7d:	mov    rbx,QWORD PTR [rcx+0x58]
  41da81:	mov    rdi,rcx
  41da84:	mov    r12,rdx
  41da87:	mov    rbp,r8
  41da8a:	lea    rsi,[rbx+rax*8]
  41da8e:	jmp    0x41da99
  41da90:	add    rbx,0x8
  41da94:	cmp    rsi,rbx
  41da97:	jbe    0x41dab4
  41da99:	mov    rdx,QWORD PTR [rbx]
  41da9c:	lea    r9,[rdx-0x1]
  41daa0:	cmp    r9,0xfffffffffffffffd
  41daa4:	ja     0x41da90
  41daa6:	mov    rcx,QWORD PTR [rdi+0x78]
  41daaa:	mov    r8,rbp
  41daad:	call   r12
  41dab0:	test   eax,eax
  41dab2:	jne    0x41da90
  41dab4:	add    rsp,0x20
  41dab8:	pop    rbx
  41dab9:	pop    rsi
  41daba:	pop    rdi
  41dabb:	pop    rbp
  41dabc:	pop    r12
  41dabe:	ret    
  41dabf:	nop
  41dac0:	push   r12
  41dac2:	push   rbp
  41dac3:	push   rdi
  41dac4:	push   rsi
  41dac5:	push   rbx
  41dac6:	sub    rsp,0x20
  41daca:	mov    eax,DWORD PTR [rcx+0x70]
  41dacd:	mov    rbx,QWORD PTR [rcx+0x58]
  41dad1:	mov    rdi,rcx
  41dad4:	mov    r12,rdx
  41dad7:	mov    rbp,r8
  41dada:	lea    rsi,[rbx+rax*8]
  41dade:	jmp    0x41dae9
  41dae0:	add    rbx,0x8
  41dae4:	cmp    rsi,rbx
  41dae7:	jbe    0x41db14
  41dae9:	mov    rdx,QWORD PTR [rbx]
  41daec:	lea    r9,[rdx-0x1]
  41daf0:	cmp    r9,0xfffffffffffffffd
  41daf4:	ja     0x41dae0
  41daf6:	mov    rcx,QWORD PTR [rdi+0x78]
  41dafa:	mov    r8,rbp
  41dafd:	call   r12
  41db00:	test   eax,eax
  41db02:	je     0x41dae0
  41db04:	mov    QWORD PTR [rbx],0xffffffffffffffff
  41db0b:	add    rbx,0x8
  41db0f:	cmp    rsi,rbx
  41db12:	ja     0x41dae9
  41db14:	add    rsp,0x20
  41db18:	pop    rbx
  41db19:	pop    rsi
  41db1a:	pop    rdi
  41db1b:	pop    rbp
  41db1c:	pop    r12
  41db1e:	ret    
  41db1f:	nop
  41db20:	push   rdi
  41db21:	push   rsi
  41db22:	push   rbx
  41db23:	sub    rsp,0x30
  41db27:	cmp    BYTE PTR [rcx+0x88],0x0
  41db2e:	mov    esi,DWORD PTR [rsp+0x70]
  41db32:	mov    rbx,rcx
  41db35:	mov    rdi,rdx
  41db38:	je     0x41db57
  41db3a:	mov    rcx,QWORD PTR [rcx+0x58]
  41db3e:	mov    DWORD PTR [rsp+0x2c],r9d
  41db43:	mov    DWORD PTR [rsp+0x28],r8d
  41db48:	call   0x43f100
  41db4d:	mov    r9d,DWORD PTR [rsp+0x2c]
  41db52:	mov    r8d,DWORD PTR [rsp+0x28]
  41db57:	mov    QWORD PTR [rbx+0x58],rdi
  41db5b:	mov    DWORD PTR [rbx+0x70],r8d
  41db5f:	mov    DWORD PTR [rbx+0x74],r9d
  41db63:	mov    BYTE PTR [rbx+0x88],sil
  41db6a:	add    rsp,0x30
  41db6e:	pop    rbx
  41db6f:	pop    rsi
  41db70:	pop    rdi
  41db71:	ret    
  41db72:	nop    DWORD PTR [rax+0x0]
  41db76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41db80:	push   r15
  41db82:	push   r14
  41db84:	push   r13
  41db86:	push   r12
  41db88:	push   rbp
  41db89:	push   rdi
  41db8a:	push   rsi
  41db8b:	push   rbx
  41db8c:	sub    rsp,0xa8
  41db93:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41db98:	movaps XMMWORD PTR [rsp+0x50],xmm7
  41db9d:	movaps XMMWORD PTR [rsp+0x60],xmm8
  41dba3:	movaps XMMWORD PTR [rsp+0x70],xmm9
  41dba9:	movaps XMMWORD PTR [rsp+0x80],xmm10
  41dbb2:	movaps XMMWORD PTR [rsp+0x90],xmm11
  41dbbb:	pxor   xmm6,xmm6
  41dbbf:	xor    r10d,r10d
  41dbc2:	mov    r13,rcx
  41dbc5:	xor    ebx,ebx
  41dbc7:	xor    esi,esi
  41dbc9:	mov    edx,DWORD PTR [rcx+0x70]
  41dbcc:	mov    rax,QWORD PTR [rcx+0x58]
  41dbd0:	xor    edi,edi
  41dbd2:	movapd xmm7,xmm6
  41dbd6:	lea    rcx,[rax+rdx*8]
  41dbda:	jmp    0x41dc10
  41dbdc:	nop    DWORD PTR [rax+0x0]
  41dbe0:	test   rdx,rdx
  41dbe3:	je     0x41dc07
  41dbe5:	mov    edx,DWORD PTR [rdx+0x8]
  41dbe8:	pxor   xmm0,xmm0
  41dbec:	cvtsi2sd xmm0,rdx
  41dbf1:	add    rsi,rdx
  41dbf4:	cmp    rbx,rdx
  41dbf7:	cmovb  rbx,rdx
  41dbfb:	add    rdi,0x1
  41dbff:	mulsd  xmm0,xmm0
  41dc03:	addsd  xmm7,xmm0
  41dc07:	add    rax,0x8
  41dc0b:	cmp    rcx,rax
  41dc0e:	jbe    0x41dc30
  41dc10:	mov    rdx,QWORD PTR [rax]
  41dc13:	cmp    rdx,0xffffffffffffffff
  41dc17:	jne    0x41dbe0
  41dc19:	add    rax,0x8
  41dc1d:	add    r10,0x1
  41dc21:	cmp    rcx,rax
  41dc24:	ja     0x41dc10
  41dc26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dc30:	mov    ebp,DWORD PTR [r13+0x74]
  41dc34:	mov    rcx,r13
  41dc37:	mov    QWORD PTR [rsp+0x38],r10
  41dc3c:	call   0x438510
  41dc41:	mov    r15d,DWORD PTR [r13+0x70]
  41dc45:	movsxd r14,eax
  41dc48:	mov    r12,QWORD PTR [rip+0x3d9cd]        # 0x45b61c
  41dc4f:	pxor   xmm8,xmm8
  41dc54:	sub    r14,rsi
  41dc57:	call   r12
  41dc5a:	lea    rdx,[rip+0x2a8af]        # 0x448510
  41dc61:	lea    rcx,[rax+0x60]
  41dc65:	mov    r8d,ebp
  41dc68:	shl    r15,0x3
  41dc6c:	call   0x43f460
  41dc71:	test   rdi,rdi
  41dc74:	cvtsi2sd xmm8,rbp
  41dc79:	mov    r10,QWORD PTR [rsp+0x38]
  41dc7e:	js     0x41df42
  41dc84:	pxor   xmm9,xmm9
  41dc89:	cvtsi2sd xmm9,rdi
  41dc8e:	mulsd  xmm9,QWORD PTR [rip+0x2a959]        # 0x4485f0
  41dc97:	mov    QWORD PTR [rsp+0x38],r10
  41dc9c:	call   r12
  41dc9f:	lea    rdx,[rip+0x2a885]        # 0x44852b
  41dca6:	lea    rcx,[rax+0x60]
  41dcaa:	mov    r8d,edi
  41dcad:	divsd  xmm9,xmm8
  41dcb2:	movapd xmm3,xmm9
  41dcb7:	movq   r9,xmm9
  41dcbc:	call   0x43f460
  41dcc1:	mov    edi,DWORD PTR [r13+0x70]
  41dcc5:	call   r12
  41dcc8:	lea    rdx,[rip+0x2a876]        # 0x448545
  41dccf:	lea    rcx,[rax+0x60]
  41dcd3:	mov    r8d,edi
  41dcd6:	mov    edi,0x20
  41dcdb:	call   0x43f460
  41dce0:	call   r12
  41dce3:	mov    r10,QWORD PTR [rsp+0x38]
  41dce8:	lea    rcx,[rax+0x60]
  41dcec:	lea    rdx,[rip+0x2a85e]        # 0x448551
  41dcf3:	mov    r8d,r10d
  41dcf6:	call   0x43f460
  41dcfb:	cmp    r14,0x27ff
  41dd02:	jbe    0x41dd1a
  41dd04:	cmp    r14,0x9fffff
  41dd0b:	ja     0x41df34
  41dd11:	shr    r14,0xa
  41dd15:	mov    edi,0x6b
  41dd1a:	cmp    rsi,0x27ff
  41dd21:	jbe    0x41dd41
  41dd23:	cmp    rsi,0x9fffff
  41dd2a:	ja     0x41df20
  41dd30:	mov    rax,rsi
  41dd33:	mov    ebp,0x6b
  41dd38:	shr    rax,0xa
  41dd3c:	mov    r8,rax
  41dd3f:	jmp    0x41dd49
  41dd41:	mov    r8d,esi
  41dd44:	mov    ebp,0x20
  41dd49:	mov    DWORD PTR [rsp+0x38],r8d
  41dd4e:	call   r12
  41dd51:	mov    r8d,DWORD PTR [rsp+0x38]
  41dd56:	lea    rcx,[rax+0x60]
  41dd5a:	lea    rdx,[rip+0x2a7ff]        # 0x448560
  41dd61:	mov    DWORD PTR [rsp+0x28],edi
  41dd65:	mov    DWORD PTR [rsp+0x20],r14d
  41dd6a:	mov    r9d,ebp
  41dd6d:	mov    edi,0x20
  41dd72:	call   0x43f460
  41dd77:	cmp    r15,0x27ff
  41dd7e:	jbe    0x41dd96
  41dd80:	cmp    r15,0x9fffff
  41dd87:	ja     0x41df10
  41dd8d:	shr    r15,0xa
  41dd91:	mov    edi,0x6b
  41dd96:	call   r12
  41dd99:	lea    rdx,[rip+0x2a7df]        # 0x44857f
  41dda0:	lea    rcx,[rax+0x60]
  41dda4:	mov    r9d,edi
  41dda7:	mov    r8d,r15d
  41ddaa:	call   0x43f460
  41ddaf:	test   rsi,rsi
  41ddb2:	js     0x41df65
  41ddb8:	pxor   xmm9,xmm9
  41ddbd:	cvtsi2sd xmm9,rsi
  41ddc2:	mov    eax,DWORD PTR [r13+0x84]
  41ddc9:	pxor   xmm10,xmm10
  41ddce:	pxor   xmm0,xmm0
  41ddd2:	divsd  xmm9,xmm8
  41ddd7:	cvtsi2sd xmm10,rax
  41dddc:	mov    eax,DWORD PTR [r13+0x80]
  41dde3:	cvtsi2sd xmm0,rax
  41dde8:	divsd  xmm10,xmm0
  41dded:	call   r12
  41ddf0:	lea    rdx,[rip+0x2a79a]        # 0x448591
  41ddf7:	lea    rcx,[rax+0x60]
  41ddfb:	movapd xmm11,xmm9
  41de00:	divsd  xmm7,xmm8
  41de05:	movapd xmm2,xmm10
  41de0a:	movq   r8,xmm10
  41de0f:	call   0x43f460
  41de14:	mov    eax,DWORD PTR [r13+0x80]
  41de1b:	pxor   xmm0,xmm0
  41de1f:	mulsd  xmm11,xmm9
  41de24:	cvtsi2sd xmm0,rax
  41de29:	divsd  xmm8,xmm0
  41de2e:	call   r12
  41de31:	lea    rdx,[rip+0x2a76b]        # 0x4485a3
  41de38:	lea    rcx,[rax+0x60]
  41de3c:	movapd xmm2,xmm8
  41de41:	movq   r8,xmm8
  41de46:	call   0x43f460
  41de4b:	subsd  xmm7,xmm11
  41de50:	ucomisd xmm6,xmm7
  41de54:	ja     0x41df85
  41de5a:	ucomisd xmm7,xmm6
  41de5e:	jp     0x41de62
  41de60:	je     0x41de96
  41de62:	movapd xmm3,xmm7
  41de66:	movsd  xmm2,QWORD PTR [rip+0x2a78a]        # 0x4485f8
  41de6e:	xchg   ax,ax
  41de70:	movapd xmm0,xmm3
  41de74:	movapd xmm1,xmm3
  41de78:	mulsd  xmm0,xmm3
  41de7c:	addsd  xmm1,xmm3
  41de80:	subsd  xmm0,xmm7
  41de84:	divsd  xmm0,xmm1
  41de88:	ucomisd xmm0,xmm2
  41de8c:	subsd  xmm3,xmm0
  41de90:	ja     0x41de70
  41de92:	movapd xmm6,xmm3
  41de96:	call   r12
  41de99:	movapd xmm3,xmm6
  41de9d:	movq   r9,xmm6
  41dea2:	movapd xmm2,xmm9
  41dea7:	movq   r8,xmm9
  41deac:	lea    rcx,[rax+0x60]
  41deb0:	lea    rdx,[rip+0x2a701]        # 0x4485b8
  41deb7:	call   0x43f460
  41debc:	call   r12
  41debf:	lea    rdx,[rip+0x2a714]        # 0x4485da
  41dec6:	lea    rcx,[rax+0x60]
  41deca:	mov    r8d,ebx
  41decd:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  41ded2:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  41ded7:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  41dedd:	movaps xmm9,XMMWORD PTR [rsp+0x70]
  41dee3:	movaps xmm10,XMMWORD PTR [rsp+0x80]
  41deec:	movaps xmm11,XMMWORD PTR [rsp+0x90]
  41def5:	add    rsp,0xa8
  41defc:	pop    rbx
  41defd:	pop    rsi
  41defe:	pop    rdi
  41deff:	pop    rbp
  41df00:	pop    r12
  41df02:	pop    r13
  41df04:	pop    r14
  41df06:	pop    r15
  41df08:	jmp    0x43f460
  41df0d:	nop    DWORD PTR [rax]
  41df10:	shr    r15,0x14
  41df14:	mov    edi,0x4d
  41df19:	jmp    0x41dd96
  41df1e:	xchg   ax,ax
  41df20:	mov    rax,rsi
  41df23:	mov    ebp,0x4d
  41df28:	shr    rax,0x14
  41df2c:	mov    r8,rax
  41df2f:	jmp    0x41dd49
  41df34:	shr    r14,0x14
  41df38:	mov    edi,0x4d
  41df3d:	jmp    0x41dd1a
  41df42:	mov    rax,rdi
  41df45:	mov    rdx,rdi
  41df48:	pxor   xmm9,xmm9
  41df4d:	shr    rax,1
  41df50:	and    edx,0x1
  41df53:	or     rax,rdx
  41df56:	cvtsi2sd xmm9,rax
  41df5b:	addsd  xmm9,xmm9
  41df60:	jmp    0x41dc8e
  41df65:	mov    rax,rsi
  41df68:	pxor   xmm9,xmm9
  41df6d:	shr    rax,1
  41df70:	and    esi,0x1
  41df73:	or     rax,rsi
  41df76:	cvtsi2sd xmm9,rax
  41df7b:	addsd  xmm9,xmm9
  41df80:	jmp    0x41ddc2
  41df85:	call   0x43f180
  41df8a:	nop
  41df8b:	nop
  41df8c:	nop
  41df8d:	nop
  41df8e:	nop
  41df8f:	nop
  41df90:	sub    r8d,0x39
  41df94:	mov    rax,rcx
  41df97:	cmp    r8d,0x8
  41df9b:	ja     0x41e035
  41dfa1:	lea    rcx,[rip+0x2a658]        # 0x448600
  41dfa8:	movsxd r8,DWORD PTR [rcx+r8*4]
  41dfac:	add    rcx,r8
  41dfaf:	jmp    rcx
  41dfb1:	mov    rcx,QWORD PTR [rdx+0x208]
  41dfb8:	mov    QWORD PTR [rax],rcx
  41dfbb:	mov    rcx,QWORD PTR [rdx+0x210]
  41dfc2:	mov    rdx,QWORD PTR [rdx+0x218]
  41dfc9:	mov    QWORD PTR [rax+0x8],rcx
  41dfcd:	mov    QWORD PTR [rax+0x10],rdx
  41dfd1:	ret    
  41dfd2:	mov    rcx,QWORD PTR [rdx+0x238]
  41dfd9:	mov    QWORD PTR [rax],rcx
  41dfdc:	mov    rcx,QWORD PTR [rdx+0x240]
  41dfe3:	mov    rdx,QWORD PTR [rdx+0x248]
  41dfea:	mov    QWORD PTR [rax+0x8],rcx
  41dfee:	mov    QWORD PTR [rax+0x10],rdx
  41dff2:	ret    
  41dff3:	mov    rcx,QWORD PTR [rdx+0x220]
  41dffa:	mov    QWORD PTR [rax],rcx
  41dffd:	mov    rcx,QWORD PTR [rdx+0x228]
  41e004:	mov    rdx,QWORD PTR [rdx+0x230]
  41e00b:	mov    QWORD PTR [rax+0x8],rcx
  41e00f:	mov    QWORD PTR [rax+0x10],rdx
  41e013:	ret    
  41e014:	mov    rcx,QWORD PTR [rdx+0x250]
  41e01b:	mov    QWORD PTR [rax],rcx
  41e01e:	mov    rcx,QWORD PTR [rdx+0x258]
  41e025:	mov    rdx,QWORD PTR [rdx+0x260]
  41e02c:	mov    QWORD PTR [rax+0x8],rcx
  41e030:	mov    QWORD PTR [rax+0x10],rdx
  41e034:	ret    
  41e035:	mov    rcx,QWORD PTR [rdx+0x1f0]
  41e03c:	mov    QWORD PTR [rax],rcx
  41e03f:	mov    rcx,QWORD PTR [rdx+0x1f8]
  41e046:	mov    rdx,QWORD PTR [rdx+0x200]
  41e04d:	mov    QWORD PTR [rax+0x8],rcx
  41e051:	mov    QWORD PTR [rax+0x10],rdx
  41e055:	ret    
  41e056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e060:	push   r13
  41e062:	push   r12
  41e064:	push   rbp
  41e065:	push   rdi
  41e066:	push   rsi
  41e067:	push   rbx
  41e068:	sub    rsp,0x58
  41e06c:	mov    rbp,rdx
  41e06f:	mov    rdi,r8
  41e072:	xor    edx,edx
  41e074:	xor    r8d,r8d
  41e077:	mov    rbx,r9
  41e07a:	mov    QWORD PTR [rsp+0x20],0x0
  41e083:	xor    r9d,r9d
  41e086:	mov    rsi,rcx
  41e089:	call   0x424b30
  41e08e:	cmp    rax,0xffffffffffffffff
  41e092:	je     0x41e13b
  41e098:	mov    rax,QWORD PTR [rbx+0x10]
  41e09c:	mov    rcx,QWORD PTR [rbx+0x8]
  41e0a0:	lea    r13,[rsp+0x40]
  41e0a5:	mov    QWORD PTR [rsp+0x30],rbp
  41e0aa:	mov    QWORD PTR [rsp+0x40],rdi
  41e0af:	lea    r12,[rsp+0x30]
  41e0b4:	lea    rdi,[rsp+0x38]
  41e0b9:	lea    rbp,[rsp+0x48]
  41e0be:	mov    rdx,rax
  41e0c1:	add    rdx,QWORD PTR [rbx]
  41e0c4:	sub    rcx,rax
  41e0c7:	mov    QWORD PTR [rsp+0x48],rcx
  41e0cc:	mov    QWORD PTR [rsp+0x38],rdx
  41e0d1:	mov    QWORD PTR [rsp+0x20],rbp
  41e0d6:	mov    r9,rdi
  41e0d9:	mov    r8,r13
  41e0dc:	mov    rdx,r12
  41e0df:	mov    rcx,rsi
  41e0e2:	call   0x424b30
  41e0e7:	cmp    QWORD PTR [rsp+0x40],0x0
  41e0ed:	jne    0x41e150
  41e0ef:	xor    r8d,r8d
  41e0f2:	xor    edx,edx
  41e0f4:	mov    QWORD PTR [rsp+0x20],rbp
  41e0f9:	mov    r9,rdi
  41e0fc:	mov    rcx,rsi
  41e0ff:	call   0x424b30
  41e104:	cmp    rax,0xffffffffffffffff
  41e108:	je     0x41e130
  41e10a:	mov    rax,QWORD PTR [rbx+0x8]
  41e10e:	sub    rax,QWORD PTR [rsp+0x48]
  41e113:	mov    QWORD PTR [rbx+0x10],rax
  41e117:	mov    eax,0x1
  41e11c:	add    rsp,0x58
  41e120:	pop    rbx
  41e121:	pop    rsi
  41e122:	pop    rdi
  41e123:	pop    rbp
  41e124:	pop    r12
  41e126:	pop    r13
  41e128:	ret    
  41e129:	nop    DWORD PTR [rax+0x0]
  41e130:	call   QWORD PTR [rip+0x3d526]        # 0x45b65c
  41e136:	cmp    DWORD PTR [rax],0x7
  41e139:	je     0x41e191
  41e13b:	xor    eax,eax
  41e13d:	add    rsp,0x58
  41e141:	pop    rbx
  41e142:	pop    rsi
  41e143:	pop    rdi
  41e144:	pop    rbp
  41e145:	pop    r12
  41e147:	pop    r13
  41e149:	ret    
  41e14a:	nop    WORD PTR [rax+rax*1+0x0]
  41e150:	call   QWORD PTR [rip+0x3d506]        # 0x45b65c
  41e156:	cmp    DWORD PTR [rax],0x7
  41e159:	jne    0x41e13b
  41e15b:	mov    rax,QWORD PTR [rbx+0x8]
  41e15f:	mov    rcx,QWORD PTR [rbx]
  41e162:	add    QWORD PTR [rsp+0x48],0x100
  41e16b:	lea    rdx,[rax+0x100]
  41e172:	mov    QWORD PTR [rbx+0x8],rdx
  41e176:	call   0x438650
  41e17b:	mov    QWORD PTR [rbx],rax
  41e17e:	add    rax,QWORD PTR [rbx+0x8]
  41e182:	sub    rax,QWORD PTR [rsp+0x48]
  41e187:	mov    QWORD PTR [rsp+0x38],rax
  41e18c:	jmp    0x41e0d1
  41e191:	mov    rax,QWORD PTR [rbx+0x8]
  41e195:	mov    rcx,QWORD PTR [rbx]
  41e198:	add    QWORD PTR [rsp+0x48],0x100
  41e1a1:	lea    rdx,[rax+0x100]
  41e1a8:	mov    QWORD PTR [rbx+0x8],rdx
  41e1ac:	call   0x438650
  41e1b1:	mov    QWORD PTR [rbx],rax
  41e1b4:	add    rax,QWORD PTR [rbx+0x8]
  41e1b8:	xor    r8d,r8d
  41e1bb:	sub    rax,QWORD PTR [rsp+0x48]
  41e1c0:	xor    edx,edx
  41e1c2:	mov    QWORD PTR [rsp+0x20],rbp
  41e1c7:	mov    r9,rdi
  41e1ca:	mov    rcx,rsi
  41e1cd:	mov    QWORD PTR [rsp+0x38],rax
  41e1d2:	call   0x424b30
  41e1d7:	cmp    rax,0xffffffffffffffff
  41e1db:	jne    0x41e10a
  41e1e1:	xor    eax,eax
  41e1e3:	jmp    0x41e13d
  41e1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e1f0:	push   rdi
  41e1f1:	push   rsi
  41e1f2:	push   rbx
  41e1f3:	sub    rsp,0x20
  41e1f7:	mov    rbx,r9
  41e1fa:	mov    r9,QWORD PTR [r9+0x10]
  41e1fe:	mov    rdi,rdx
  41e201:	mov    rsi,r8
  41e204:	lea    rdx,[r8+r9*1]
  41e208:	cmp    rdx,QWORD PTR [rbx+0x8]
  41e20c:	ja     0x41e231
  41e20e:	mov    rax,QWORD PTR [rbx]
  41e211:	lea    rcx,[rax+r9*1]
  41e215:	mov    r8,rsi
  41e218:	mov    rdx,rdi
  41e21b:	call   0x43f0a8
  41e220:	add    QWORD PTR [rbx+0x10],rsi
  41e224:	mov    eax,0x1
  41e229:	add    rsp,0x20
  41e22d:	pop    rbx
  41e22e:	pop    rsi
  41e22f:	pop    rdi
  41e230:	ret    
  41e231:	mov    rcx,QWORD PTR [rbx]
  41e234:	mov    QWORD PTR [rbx+0x8],rdx
  41e238:	call   0x438650
  41e23d:	mov    r9,QWORD PTR [rbx+0x10]
  41e241:	mov    QWORD PTR [rbx],rax
  41e244:	jmp    0x41e211
  41e246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e250:	push   rbp
  41e251:	push   r15
  41e253:	push   r14
  41e255:	push   r13
  41e257:	push   r12
  41e259:	push   rdi
  41e25a:	push   rsi
  41e25b:	push   rbx
  41e25c:	sub    rsp,0x38
  41e260:	lea    rbp,[rsp+0x80]
  41e268:	mov    rsi,QWORD PTR [rip+0x3d43d]        # 0x45b6ac
  41e26f:	mov    QWORD PTR [rbp+0x8],rdx
  41e273:	mov    rbx,rcx
  41e276:	mov    r13,r8
  41e279:	mov    r12,r9
  41e27c:	mov    rdx,r9
  41e27f:	mov    rcx,r8
  41e282:	call   rsi
  41e284:	test   eax,eax
  41e286:	jne    0x41e2b5
  41e288:	lea    rax,[rip+0xffffffffffffff61]        # 0x41e1f0
  41e28f:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
  41e297:	mov    DWORD PTR [rbx+0x10],0xffffffff
  41e29e:	mov    QWORD PTR [rbx],rax
  41e2a1:	mov    rax,rbx
  41e2a4:	lea    rsp,[rbp-0x48]
  41e2a8:	pop    rbx
  41e2a9:	pop    rsi
  41e2aa:	pop    rdi
  41e2ab:	pop    r12
  41e2ad:	pop    r13
  41e2af:	pop    r14
  41e2b1:	pop    r15
  41e2b3:	pop    rbp
  41e2b4:	ret    
  41e2b5:	mov    rcx,r13
  41e2b8:	call   0x43f028
  41e2bd:	mov    rcx,r12
  41e2c0:	mov    r15,rax
  41e2c3:	call   0x43f028
  41e2c8:	lea    rdx,[r15+rax*1+0x20]
  41e2cd:	mov    r14,rax
  41e2d0:	mov    rax,rdx
  41e2d3:	and    rax,0xfffffffffffffff0
  41e2d7:	call   0x439cf0
  41e2dc:	sub    rsp,rax
  41e2df:	mov    r8,r14
  41e2e2:	mov    rdx,r12
  41e2e5:	lea    rdi,[rsp+0x30]
  41e2ea:	mov    rcx,rdi
  41e2ed:	call   0x43f0a8
  41e2f2:	mov    BYTE PTR [rdi+r14*1],0x2f
  41e2f7:	lea    rcx,[rdi+r14*1+0x1]
  41e2fc:	lea    r8,[r15+0x1]
  41e300:	lea    r14,[rip+0x2e739]        # 0x44ca40
  41e307:	mov    rdx,r13
  41e30a:	xor    r15d,r15d
  41e30d:	call   0x43f0a8
  41e312:	mov    rdx,QWORD PTR [r14]
  41e315:	mov    rcx,rdi
  41e318:	call   rsi
  41e31a:	test   eax,eax
  41e31c:	je     0x41e385
  41e31e:	add    r15,0x1
  41e322:	add    r14,0x18
  41e326:	cmp    r15,0x8
  41e32a:	jne    0x41e312
  41e32c:	lea    rax,[rip+0xfffffffffffffd2d]        # 0x41e060
  41e333:	mov    rdx,r12
  41e336:	mov    rcx,r13
  41e339:	mov    QWORD PTR [rbx],rax
  41e33c:	call   0x424b20
  41e341:	cmp    rax,0xffffffffffffffff
  41e345:	mov    QWORD PTR [rbx+0x8],rax
  41e349:	mov    DWORD PTR [rbx+0x10],0xffffffff
  41e350:	jne    0x41e2a1
  41e356:	call   QWORD PTR [rip+0x3d300]        # 0x45b65c
  41e35c:	cmp    DWORD PTR [rax],0x16
  41e35f:	je     0x41e3af
  41e361:	mov    rcx,QWORD PTR [rbp+0x8]
  41e365:	lea    r8,[rip+0x2a2ec]        # 0x448658
  41e36c:	mov    edx,0x3
  41e371:	call   0x412860
  41e376:	lea    rax,[rip+0xfffffffffffffe73]        # 0x41e1f0
  41e37d:	mov    QWORD PTR [rbx],rax
  41e380:	jmp    0x41e2a1
  41e385:	lea    rax,[r15+r15*2]
  41e389:	lea    rdi,[rip+0x2e6b0]        # 0x44ca40
  41e390:	mov    DWORD PTR [rbx+0x10],0xffffffff
  41e397:	lea    rax,[rdi+rax*8]
  41e39b:	mov    rdx,QWORD PTR [rax+0x8]
  41e39f:	mov    rax,QWORD PTR [rax+0x10]
  41e3a3:	mov    QWORD PTR [rbx],rdx
  41e3a6:	mov    QWORD PTR [rbx+0x8],rax
  41e3aa:	jmp    0x41e2a1
  41e3af:	mov    rcx,QWORD PTR [rbp+0x8]
  41e3b3:	lea    r8,[rip+0x2a26e]        # 0x448628
  41e3ba:	mov    QWORD PTR [rsp+0x20],r13
  41e3bf:	mov    r9,r12
  41e3c2:	mov    edx,0x3
  41e3c7:	call   0x412660
  41e3cc:	jmp    0x41e376
  41e3ce:	xchg   ax,ax
  41e3d0:	push   r12
  41e3d2:	push   rbp
  41e3d3:	push   rdi
  41e3d4:	push   rsi
  41e3d5:	push   rbx
  41e3d6:	sub    rsp,0x30
  41e3da:	movsxd rax,DWORD PTR [rsp+0x80]
  41e3e2:	mov    rsi,rcx
  41e3e5:	cmp    rax,rcx
  41e3e8:	je     0x41e472
  41e3ee:	cmp    rcx,0x1f
  41e3f2:	movzx  ebx,BYTE PTR [rdx]
  41e3f5:	mov    r12d,0xffffffff
  41e3fb:	jbe    0x41e463
  41e3fd:	xor    edx,edx
  41e3ff:	mov    rbp,QWORD PTR [r9+0x10]
  41e403:	div    rsi
  41e406:	mov    rdx,QWORD PTR [r9+0x8]
  41e40a:	mov    rdi,rax
  41e40d:	lea    rax,[rax+rbp*1]
  41e411:	cmp    rax,rdx
  41e414:	ja     0x41e4a0
  41e41a:	xor    r11d,r11d
  41e41d:	test   rdi,rdi
  41e420:	mov    eax,r12d
  41e423:	mov    ecx,esi
  41e425:	lea    rdx,[rdi-0x1]
  41e429:	je     0x41e454
  41e42b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e430:	mov    esi,r8d
  41e433:	mov    r10,rdx
  41e436:	shr    r8d,cl
  41e439:	sub    r10,r11
  41e43c:	and    esi,eax
  41e43e:	test   bl,bl
  41e440:	cmove  r10,r11
  41e444:	add    r10,QWORD PTR [r9]
  41e447:	add    r11,0x1
  41e44b:	cmp    r11,rdi
  41e44e:	mov    BYTE PTR [r10+rbp*1],sil
  41e452:	jne    0x41e430
  41e454:	add    QWORD PTR [r9+0x10],rdi
  41e458:	add    rsp,0x30
  41e45c:	pop    rbx
  41e45d:	pop    rsi
  41e45e:	pop    rdi
  41e45f:	pop    rbp
  41e460:	pop    r12
  41e462:	ret    
  41e463:	mov    r12d,0x1
  41e469:	shl    r12,cl
  41e46c:	sub    r12,0x1
  41e470:	jmp    0x41e3fd
  41e472:	mov    rdx,QWORD PTR [r9+0x10]
  41e476:	mov    rax,QWORD PTR [r9+0x8]
  41e47a:	lea    rcx,[rdx+0x1]
  41e47e:	cmp    rcx,rax
  41e481:	ja     0x41e4d0
  41e483:	mov    rax,QWORD PTR [r9]
  41e486:	mov    QWORD PTR [r9+0x10],rcx
  41e48a:	mov    BYTE PTR [rax+rdx*1],r8b
  41e48e:	add    rsp,0x30
  41e492:	pop    rbx
  41e493:	pop    rsi
  41e494:	pop    rdi
  41e495:	pop    rbp
  41e496:	pop    r12
  41e498:	ret    
  41e499:	nop    DWORD PTR [rax+0x0]
  41e4a0:	mov    rcx,QWORD PTR [r9]
  41e4a3:	add    rdx,0x100
  41e4aa:	mov    DWORD PTR [rsp+0x2c],r8d
  41e4af:	mov    QWORD PTR [r9+0x8],rdx
  41e4b3:	mov    QWORD PTR [rsp+0x20],r9
  41e4b8:	call   0x438650
  41e4bd:	mov    r9,QWORD PTR [rsp+0x20]
  41e4c2:	mov    r8d,DWORD PTR [rsp+0x2c]
  41e4c7:	mov    QWORD PTR [r9],rax
  41e4ca:	jmp    0x41e41a
  41e4cf:	nop
  41e4d0:	lea    rdx,[rax+0x100]
  41e4d7:	mov    rcx,QWORD PTR [r9]
  41e4da:	mov    DWORD PTR [rsp+0x2c],r8d
  41e4df:	mov    QWORD PTR [rsp+0x20],r9
  41e4e4:	mov    QWORD PTR [r9+0x8],rdx
  41e4e8:	call   0x438650
  41e4ed:	mov    r9,QWORD PTR [rsp+0x20]
  41e4f2:	mov    r8d,DWORD PTR [rsp+0x2c]
  41e4f7:	mov    rdx,QWORD PTR [r9+0x10]
  41e4fb:	mov    QWORD PTR [r9],rax
  41e4fe:	lea    rcx,[rdx+0x1]
  41e502:	jmp    0x41e486
  41e504:	xchg   ax,ax
  41e506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e510:	push   r14
  41e512:	push   r13
  41e514:	push   r12
  41e516:	push   rbp
  41e517:	push   rdi
  41e518:	push   rsi
  41e519:	push   rbx
  41e51a:	sub    rsp,0x30
  41e51e:	mov    r10,QWORD PTR [r9+0x10]
  41e522:	mov    rbx,QWORD PTR [r9+0x8]
  41e526:	mov    rdi,rcx
  41e529:	mov    rsi,rdx
  41e52c:	mov    rax,r10
  41e52f:	add    rax,QWORD PTR [r9]
  41e532:	sub    rbx,r10
  41e535:	cmp    rbx,0x3
  41e539:	ja     0x41e582
  41e53b:	test   r8,r8
  41e53e:	je     0x41e590
  41e540:	mov    rax,QWORD PTR [r9+0x8]
  41e544:	mov    rcx,QWORD PTR [r9]
  41e547:	add    rbx,0x100
  41e54e:	mov    QWORD PTR [rsp+0x28],r8
  41e553:	mov    QWORD PTR [rsp+0x20],r9
  41e558:	lea    rdx,[rax+0x100]
  41e55f:	mov    QWORD PTR [r9+0x8],rdx
  41e563:	call   0x438650
  41e568:	mov    r9,QWORD PTR [rsp+0x20]
  41e56d:	mov    r8,QWORD PTR [rsp+0x28]
  41e572:	mov    QWORD PTR [r9],rax
  41e575:	sub    rax,rbx
  41e578:	add    rax,QWORD PTR [r9+0x8]
  41e57c:	cmp    rbx,0x3
  41e580:	jbe    0x41e53b
  41e582:	test   r8,r8
  41e585:	jne    0x41e5b0
  41e587:	nop    WORD PTR [rax+rax*1+0x0]
  41e590:	mov    rax,QWORD PTR [r9+0x8]
  41e594:	sub    rax,rbx
  41e597:	mov    QWORD PTR [r9+0x10],rax
  41e59b:	mov    eax,0x1
  41e5a0:	add    rsp,0x30
  41e5a4:	pop    rbx
  41e5a5:	pop    rsi
  41e5a6:	pop    rdi
  41e5a7:	pop    rbp
  41e5a8:	pop    r12
  41e5aa:	pop    r13
  41e5ac:	pop    r14
  41e5ae:	ret    
  41e5af:	nop
  41e5b0:	movzx  r10d,BYTE PTR [rsi]
  41e5b4:	cmp    r10d,0x7f
  41e5b8:	mov    r13d,r10d
  41e5bb:	jbe    0x41e604
  41e5bd:	lea    r12,[rip+0x2a9e0]        # 0x448fa4
  41e5c4:	lea    rbp,[rip+0x2a9d3]        # 0x448f9e
  41e5cb:	mov    edx,0x2
  41e5d0:	movzx  r11d,BYTE PTR [r12+rdx*1]
  41e5d5:	movzx  r14d,BYTE PTR [rbp+rdx*1+0x0]
  41e5db:	mov    ecx,r11d
  41e5de:	not    r11d
  41e5e1:	and    r11d,r10d
  41e5e4:	cmp    r11d,r14d
  41e5e7:	je     0x41e663
  41e5e9:	add    rdx,0x1
  41e5ed:	cmp    rdx,0x7
  41e5f1:	jne    0x41e5d0
  41e5f3:	mov    ebx,0x2a
  41e5f8:	call   QWORD PTR [rip+0x3d05e]        # 0x45b65c
  41e5fe:	mov    DWORD PTR [rax],ebx
  41e600:	xor    eax,eax
  41e602:	jmp    0x41e5a0
  41e604:	sub    r8,0x1
  41e608:	add    rsi,0x1
  41e60c:	test   rdi,rdi
  41e60f:	je     0x41e647
  41e611:	mov    rcx,r10
  41e614:	mov    BYTE PTR [rax+0x3],r10b
  41e618:	movzx  edx,ch
  41e61b:	mov    BYTE PTR [rax+0x2],dl
  41e61e:	mov    edx,r10d
  41e621:	shr    edx,0x10
  41e624:	mov    BYTE PTR [rax+0x1],dl
  41e627:	xor    edx,edx
  41e629:	shr    r10d,0x18
  41e62d:	sub    rbx,0x4
  41e631:	test   r8,r8
  41e634:	mov    BYTE PTR [rax+rdx*1],r10b
  41e638:	je     0x41e590
  41e63e:	add    rax,0x4
  41e642:	jmp    0x41e535
  41e647:	mov    rcx,r10
  41e64a:	mov    BYTE PTR [rax],r10b
  41e64d:	movzx  edx,ch
  41e650:	mov    BYTE PTR [rax+0x1],dl
  41e653:	mov    edx,r10d
  41e656:	shr    edx,0x10
  41e659:	mov    BYTE PTR [rax+0x2],dl
  41e65c:	mov    edx,0x3
  41e661:	jmp    0x41e629
  41e663:	cmp    r8,rdx
  41e666:	jae    0x41e66f
  41e668:	mov    ebx,0x16
  41e66d:	jmp    0x41e5f8
  41e66f:	and    ecx,r13d
  41e672:	lea    r11,[rsi+0x1]
  41e676:	add    rsi,rdx
  41e679:	movzx  r10d,cl
  41e67d:	jmp    0x41e68f
  41e67f:	nop
  41e680:	shl    r10d,0x6
  41e684:	and    ecx,0x3f
  41e687:	add    r10d,ecx
  41e68a:	cmp    r11,rsi
  41e68d:	je     0x41e6a8
  41e68f:	add    r11,0x1
  41e693:	movzx  ecx,BYTE PTR [r11-0x1]
  41e698:	mov    ebp,ecx
  41e69a:	and    ebp,0xffffffc0
  41e69d:	cmp    bpl,0x80
  41e6a1:	je     0x41e680
  41e6a3:	jmp    0x41e5f3
  41e6a8:	lea    ecx,[r10-0x80]
  41e6ac:	cmp    ecx,0x7fffff7f
  41e6b2:	ja     0x41e5f3
  41e6b8:	cmp    r10d,0x7ff
  41e6bf:	ja     0x41e6cb
  41e6c1:	cmp    rdx,0x2
  41e6c5:	ja     0x41e5f3
  41e6cb:	cmp    r10d,0xffff
  41e6d2:	ja     0x41e6de
  41e6d4:	cmp    rdx,0x3
  41e6d8:	ja     0x41e5f3
  41e6de:	cmp    r10d,0x1fffff
  41e6e5:	ja     0x41e6f1
  41e6e7:	cmp    rdx,0x4
  41e6eb:	ja     0x41e5f3
  41e6f1:	cmp    r10d,0x3ffffff
  41e6f8:	ja     0x41e704
  41e6fa:	cmp    rdx,0x5
  41e6fe:	ja     0x41e5f3
  41e704:	lea    ecx,[r10-0xd800]
  41e70b:	cmp    ecx,0x7ff
  41e711:	jbe    0x41e5f3
  41e717:	sub    r8,rdx
  41e71a:	jmp    0x41e60c
  41e71f:	nop
  41e720:	push   r14
  41e722:	push   r13
  41e724:	push   r12
  41e726:	push   rbp
  41e727:	push   rdi
  41e728:	push   rsi
  41e729:	push   rbx
  41e72a:	sub    rsp,0x30
  41e72e:	mov    rbx,QWORD PTR [r9+0x8]
  41e732:	mov    rsi,rcx
  41e735:	mov    rcx,QWORD PTR [r9+0x10]
  41e739:	mov    rdi,rdx
  41e73c:	mov    rdx,rcx
  41e73f:	add    rdx,QWORD PTR [r9]
  41e742:	sub    rbx,rcx
  41e745:	test   r8,r8
  41e748:	jne    0x41e770
  41e74a:	mov    rax,QWORD PTR [r9+0x8]
  41e74e:	sub    rax,rbx
  41e751:	mov    QWORD PTR [r9+0x10],rax
  41e755:	mov    eax,0x1
  41e75a:	add    rsp,0x30
  41e75e:	pop    rbx
  41e75f:	pop    rsi
  41e760:	pop    rdi
  41e761:	pop    rbp
  41e762:	pop    r12
  41e764:	pop    r13
  41e766:	pop    r14
  41e768:	ret    
  41e769:	nop    DWORD PTR [rax+0x0]
  41e770:	movzx  eax,BYTE PTR [rdi]
  41e773:	cmp    eax,0x7f
  41e776:	mov    r13d,eax
  41e779:	jbe    0x41e7d0
  41e77b:	lea    r12,[rip+0x2a822]        # 0x448fa4
  41e782:	lea    rbp,[rip+0x2a815]        # 0x448f9e
  41e789:	mov    r11d,0x2
  41e78f:	movzx  r10d,BYTE PTR [r12+r11*1]
  41e794:	movzx  r14d,BYTE PTR [rbp+r11*1+0x0]
  41e79a:	mov    ecx,r10d
  41e79d:	not    r10d
  41e7a0:	and    r10d,eax
  41e7a3:	cmp    r10d,r14d
  41e7a6:	je     0x41e870
  41e7ac:	add    r11,0x1
  41e7b0:	cmp    r11,0x7
  41e7b4:	jne    0x41e78f
  41e7b6:	mov    ebx,0x2a
  41e7bb:	call   QWORD PTR [rip+0x3ce9b]        # 0x45b65c
  41e7c1:	mov    DWORD PTR [rax],ebx
  41e7c3:	xor    eax,eax
  41e7c5:	jmp    0x41e75a
  41e7c7:	nop    WORD PTR [rax+rax*1+0x0]
  41e7d0:	lea    r10,[r8-0x1]
  41e7d4:	lea    rbp,[rdi+0x1]
  41e7d8:	cmp    eax,0xfffe
  41e7dd:	ja     0x41e820
  41e7df:	cmp    rbx,0x1
  41e7e3:	jbe    0x41e82a
  41e7e5:	xor    ecx,ecx
  41e7e7:	test   rsi,rsi
  41e7ea:	setne  cl
  41e7ed:	mov    BYTE PTR [rdx+rcx*1],al
  41e7f0:	sete   cl
  41e7f3:	movzx  eax,ah
  41e7f6:	movzx  ecx,cl
  41e7f9:	add    rdx,0x2
  41e7fd:	sub    rbx,0x2
  41e801:	mov    BYTE PTR [rdx+rcx*1-0x2],al
  41e805:	test   r10,r10
  41e808:	je     0x41e74a
  41e80e:	mov    r8,r10
  41e811:	mov    rdi,rbp
  41e814:	jmp    0x41e745
  41e819:	nop    DWORD PTR [rax+0x0]
  41e820:	cmp    rbx,0x3
  41e824:	ja     0x41e932
  41e82a:	mov    rax,QWORD PTR [r9+0x8]
  41e82e:	mov    rcx,QWORD PTR [r9]
  41e831:	add    rbx,0x100
  41e838:	mov    QWORD PTR [rsp+0x28],r8
  41e83d:	mov    QWORD PTR [rsp+0x20],r9
  41e842:	lea    rdx,[rax+0x100]
  41e849:	mov    QWORD PTR [r9+0x8],rdx
  41e84d:	call   0x438650
  41e852:	mov    r9,QWORD PTR [rsp+0x20]
  41e857:	mov    r8,QWORD PTR [rsp+0x28]
  41e85c:	mov    QWORD PTR [r9],rax
  41e85f:	sub    rax,rbx
  41e862:	add    rax,QWORD PTR [r9+0x8]
  41e866:	mov    rdx,rax
  41e869:	jmp    0x41e745
  41e86e:	xchg   ax,ax
  41e870:	cmp    r8,r11
  41e873:	jae    0x41e880
  41e875:	mov    ebx,0x16
  41e87a:	jmp    0x41e7bb
  41e87f:	nop
  41e880:	and    ecx,r13d
  41e883:	lea    r10,[rdi+0x1]
  41e887:	lea    rbp,[rdi+r11*1]
  41e88b:	movzx  eax,cl
  41e88e:	xchg   ax,ax
  41e890:	add    r10,0x1
  41e894:	movzx  ecx,BYTE PTR [r10-0x1]
  41e899:	mov    r12d,ecx
  41e89c:	and    r12d,0xffffffc0
  41e8a0:	cmp    r12b,0x80
  41e8a4:	jne    0x41e7b6
  41e8aa:	shl    eax,0x6
  41e8ad:	and    ecx,0x3f
  41e8b0:	add    eax,ecx
  41e8b2:	cmp    r10,rbp
  41e8b5:	jne    0x41e890
  41e8b7:	lea    ecx,[rax-0x80]
  41e8ba:	cmp    ecx,0x7fffff7f
  41e8c0:	ja     0x41e7b6
  41e8c6:	cmp    eax,0x7ff
  41e8cb:	ja     0x41e8d7
  41e8cd:	cmp    r11,0x2
  41e8d1:	ja     0x41e7b6
  41e8d7:	cmp    eax,0xffff
  41e8dc:	ja     0x41e8e8
  41e8de:	cmp    r11,0x3
  41e8e2:	ja     0x41e7b6
  41e8e8:	cmp    eax,0x1fffff
  41e8ed:	ja     0x41e8f9
  41e8ef:	cmp    r11,0x4
  41e8f3:	ja     0x41e7b6
  41e8f9:	cmp    eax,0x3ffffff
  41e8fe:	ja     0x41e90a
  41e900:	cmp    r11,0x5
  41e904:	ja     0x41e7b6
  41e90a:	lea    ecx,[rax-0xd800]
  41e910:	cmp    ecx,0x7ff
  41e916:	jbe    0x41e7b6
  41e91c:	mov    r10,r8
  41e91f:	sub    r10,r11
  41e922:	cmp    eax,0x10ffff
  41e927:	ja     0x41e7b6
  41e92d:	jmp    0x41e7d8
  41e932:	lea    ecx,[rax-0x10000]
  41e938:	and    eax,0x3ff
  41e93d:	add    eax,0xdc00
  41e942:	shr    ecx,0xa
  41e945:	add    ecx,0xd800
  41e94b:	test   rsi,rsi
  41e94e:	je     0x41e974
  41e950:	mov    BYTE PTR [rdx+0x1],cl
  41e953:	movzx  ecx,ch
  41e956:	mov    BYTE PTR [rdx+0x3],al
  41e959:	mov    BYTE PTR [rdx],cl
  41e95b:	mov    ecx,0x2
  41e960:	movzx  eax,ah
  41e963:	add    rdx,0x4
  41e967:	sub    rbx,0x4
  41e96b:	mov    BYTE PTR [rdx+rcx*1-0x4],al
  41e96f:	jmp    0x41e805
  41e974:	mov    BYTE PTR [rdx],cl
  41e976:	movzx  ecx,ch
  41e979:	mov    BYTE PTR [rdx+0x2],al
  41e97c:	mov    BYTE PTR [rdx+0x1],cl
  41e97f:	mov    ecx,0x3
  41e984:	jmp    0x41e960
  41e986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e990:	push   r13
  41e992:	push   r12
  41e994:	push   rbp
  41e995:	push   rdi
  41e996:	push   rsi
  41e997:	push   rbx
  41e998:	sub    rsp,0x48
  41e99c:	mov    rax,QWORD PTR [r9+0x10]
  41e9a0:	mov    rbx,QWORD PTR [r9+0x8]
  41e9a4:	mov    rdi,rcx
  41e9a7:	lea    rbp,[rsp+0x30]
  41e9ac:	mov    rsi,rdx
  41e9af:	mov    rcx,rax
  41e9b2:	add    rcx,QWORD PTR [r9]
  41e9b5:	sub    rbx,rax
  41e9b8:	cmp    r8,0x3
  41e9bc:	ja     0x41e9e0
  41e9be:	test   r8,r8
  41e9c1:	jne    0x41ea32
  41e9c3:	mov    rax,QWORD PTR [r9+0x8]
  41e9c7:	sub    rax,rbx
  41e9ca:	mov    QWORD PTR [r9+0x10],rax
  41e9ce:	mov    eax,0x1
  41e9d3:	add    rsp,0x48
  41e9d7:	pop    rbx
  41e9d8:	pop    rsi
  41e9d9:	pop    rdi
  41e9da:	pop    rbp
  41e9db:	pop    r12
  41e9dd:	pop    r13
  41e9df:	ret    
  41e9e0:	test   rdi,rdi
  41e9e3:	je     0x41eae0
  41e9e9:	movzx  edx,BYTE PTR [rsi+0x1]
  41e9ed:	movzx  eax,BYTE PTR [rsi]
  41e9f0:	shl    edx,0x10
  41e9f3:	shl    eax,0x18
  41e9f6:	add    edx,eax
  41e9f8:	movzx  eax,BYTE PTR [rsi+0x2]
  41e9fc:	shl    eax,0x8
  41e9ff:	add    eax,edx
  41ea01:	mov    edx,0x3
  41ea06:	movzx  edx,BYTE PTR [rsi+rdx*1]
  41ea0a:	add    eax,edx
  41ea0c:	lea    edx,[rax-0xd800]
  41ea12:	cmp    edx,0x7ff
  41ea18:	jbe    0x41ea21
  41ea1a:	cmp    eax,0x7ffffffe
  41ea1f:	jbe    0x41ea40
  41ea21:	mov    ebx,0x2a
  41ea26:	call   QWORD PTR [rip+0x3cc30]        # 0x45b65c
  41ea2c:	mov    DWORD PTR [rax],ebx
  41ea2e:	xor    eax,eax
  41ea30:	jmp    0x41e9d3
  41ea32:	mov    ebx,0x16
  41ea37:	jmp    0x41ea26
  41ea39:	nop    DWORD PTR [rax+0x0]
  41ea40:	cmp    eax,0x7f
  41ea43:	jbe    0x41eb01
  41ea49:	lea    rdx,[rbp+0x6]
  41ea4d:	mov    r11d,0x1
  41ea53:	lea    r13,[rip+0x2a556]        # 0x448fb0
  41ea5a:	jmp    0x41ea63
  41ea5c:	nop    DWORD PTR [rax+0x0]
  41ea60:	mov    r11,r10
  41ea63:	mov    r10d,eax
  41ea66:	shr    eax,0x6
  41ea69:	sub    rdx,0x1
  41ea6d:	and    r10d,0x3f
  41ea71:	or     r10d,0xffffff80
  41ea75:	cmp    eax,0x3e
  41ea78:	mov    BYTE PTR [rdx],r10b
  41ea7b:	lea    r10,[r11+0x1]
  41ea7f:	ja     0x41ea60
  41ea81:	movzx  r12d,BYTE PTR [r13+r11*1+0x1]
  41ea87:	test   r12d,eax
  41ea8a:	jne    0x41ea60
  41ea8c:	lea    r12,[rip+0x2a518]        # 0x448fab
  41ea93:	or     al,BYTE PTR [r12+r11*1]
  41ea97:	cmp    rbx,r10
  41ea9a:	mov    r11d,eax
  41ea9d:	mov    BYTE PTR [rdx-0x1],al
  41eaa0:	jb     0x41eb17
  41eaa2:	lea    rax,[rbp+0x6]
  41eaa6:	sub    rdx,0x1
  41eaaa:	cmp    rdx,rax
  41eaad:	jae    0x41eaca
  41eaaf:	lea    rax,[rbp+0x6]
  41eab3:	jmp    0x41eab9
  41eab5:	movzx  r11d,BYTE PTR [rdx]
  41eab9:	add    rdx,0x1
  41eabd:	add    rcx,0x1
  41eac1:	mov    BYTE PTR [rcx-0x1],r11b
  41eac5:	cmp    rdx,rax
  41eac8:	jb     0x41eab5
  41eaca:	sub    rbx,r10
  41eacd:	sub    r8,0x4
  41ead1:	je     0x41e9c3
  41ead7:	add    rsi,0x4
  41eadb:	jmp    0x41e9b8
  41eae0:	movzx  edx,BYTE PTR [rsi+0x3]
  41eae4:	movzx  eax,BYTE PTR [rsi+0x2]
  41eae8:	shl    edx,0x18
  41eaeb:	shl    eax,0x10
  41eaee:	lea    edx,[rax+rdx*1]
  41eaf1:	movzx  eax,BYTE PTR [rsi+0x1]
  41eaf5:	shl    eax,0x8
  41eaf8:	add    eax,edx
  41eafa:	xor    edx,edx
  41eafc:	jmp    0x41ea06
  41eb01:	test   rbx,rbx
  41eb04:	mov    r11d,eax
  41eb07:	mov    BYTE PTR [rsp+0x35],al
  41eb0b:	lea    rdx,[rbp+0x5]
  41eb0f:	mov    r10d,0x1
  41eb15:	jne    0x41eaaf
  41eb17:	mov    rax,QWORD PTR [r9+0x8]
  41eb1b:	mov    rcx,QWORD PTR [r9]
  41eb1e:	add    rbx,0x100
  41eb25:	mov    QWORD PTR [rsp+0x28],r8
  41eb2a:	mov    QWORD PTR [rsp+0x20],r9
  41eb2f:	lea    rdx,[rax+0x100]
  41eb36:	mov    QWORD PTR [r9+0x8],rdx
  41eb3a:	call   0x438650
  41eb3f:	mov    r9,QWORD PTR [rsp+0x20]
  41eb44:	mov    r8,QWORD PTR [rsp+0x28]
  41eb49:	mov    QWORD PTR [r9],rax
  41eb4c:	sub    rax,rbx
  41eb4f:	add    rax,QWORD PTR [r9+0x8]
  41eb53:	mov    rcx,rax
  41eb56:	jmp    0x41e9b8
  41eb5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41eb60:	push   r14
  41eb62:	push   r13
  41eb64:	push   r12
  41eb66:	push   rbp
  41eb67:	push   rdi
  41eb68:	push   rsi
  41eb69:	push   rbx
  41eb6a:	sub    rsp,0x40
  41eb6e:	mov    rax,QWORD PTR [r9+0x10]
  41eb72:	mov    rbx,QWORD PTR [r9+0x8]
  41eb76:	mov    rdi,rcx
  41eb79:	lea    rbp,[rsp+0x30]
  41eb7e:	mov    rsi,rdx
  41eb81:	mov    rcx,rax
  41eb84:	add    rcx,QWORD PTR [r9]
  41eb87:	sub    rbx,rax
  41eb8a:	cmp    r8,0x1
  41eb8e:	jbe    0x41ebe0
  41eb90:	test   rdi,rdi
  41eb93:	sete   dl
  41eb96:	setne  al
  41eb99:	movzx  edx,dl
  41eb9c:	movzx  r10d,al
  41eba0:	movzx  edx,BYTE PTR [rsi+rdx*1]
  41eba4:	movzx  r10d,BYTE PTR [rsi+r10*1]
  41eba9:	shl    edx,0x8
  41ebac:	add    edx,r10d
  41ebaf:	lea    r10d,[rdx-0xdc00]
  41ebb6:	cmp    r10d,0x3ff
  41ebbd:	ja     0x41ec04
  41ebbf:	mov    ebx,0x2a
  41ebc4:	call   QWORD PTR [rip+0x3ca92]        # 0x45b65c
  41ebca:	mov    DWORD PTR [rax],ebx
  41ebcc:	xor    eax,eax
  41ebce:	add    rsp,0x40
  41ebd2:	pop    rbx
  41ebd3:	pop    rsi
  41ebd4:	pop    rdi
  41ebd5:	pop    rbp
  41ebd6:	pop    r12
  41ebd8:	pop    r13
  41ebda:	pop    r14
  41ebdc:	ret    
  41ebdd:	nop    DWORD PTR [rax]
  41ebe0:	test   r8,r8
  41ebe3:	jne    0x41ec1a
  41ebe5:	mov    rax,QWORD PTR [r9+0x8]
  41ebe9:	sub    rax,rbx
  41ebec:	mov    QWORD PTR [r9+0x10],rax
  41ebf0:	mov    eax,0x1
  41ebf5:	add    rsp,0x40
  41ebf9:	pop    rbx
  41ebfa:	pop    rsi
  41ebfb:	pop    rdi
  41ebfc:	pop    rbp
  41ebfd:	pop    r12
  41ebff:	pop    r13
  41ec01:	pop    r14
  41ec03:	ret    
  41ec04:	lea    r10d,[rdx-0xd800]
  41ec0b:	cmp    r10d,0x3ff
  41ec12:	ja     0x41ec21
  41ec14:	cmp    r8,0x3
  41ec18:	ja     0x41ec90
  41ec1a:	mov    ebx,0x16
  41ec1f:	jmp    0x41ebc4
  41ec21:	cmp    edx,0x7f
  41ec24:	ja     0x41eccb
  41ec2a:	test   rbx,rbx
  41ec2d:	mov    eax,edx
  41ec2f:	mov    BYTE PTR [rsp+0x35],dl
  41ec33:	lea    r10,[rbp+0x5]
  41ec37:	mov    r11d,0x1
  41ec3d:	jne    0x41ed33
  41ec43:	mov    rax,QWORD PTR [r9+0x8]
  41ec47:	mov    rcx,QWORD PTR [r9]
  41ec4a:	add    rbx,0x100
  41ec51:	mov    QWORD PTR [rsp+0x28],r8
  41ec56:	mov    QWORD PTR [rsp+0x20],r9
  41ec5b:	lea    rdx,[rax+0x100]
  41ec62:	mov    QWORD PTR [r9+0x8],rdx
  41ec66:	call   0x438650
  41ec6b:	mov    r9,QWORD PTR [rsp+0x20]
  41ec70:	mov    r8,QWORD PTR [rsp+0x28]
  41ec75:	mov    QWORD PTR [r9],rax
  41ec78:	sub    rax,rbx
  41ec7b:	add    rax,QWORD PTR [r9+0x8]
  41ec7f:	mov    rcx,rax
  41ec82:	jmp    0x41eb8a
  41ec87:	nop    WORD PTR [rax+rax*1+0x0]
  41ec90:	test   al,al
  41ec92:	je     0x41ed7f
  41ec98:	movzx  eax,BYTE PTR [rsi+0x2]
  41ec9c:	mov    r10d,0x3
  41eca2:	shl    eax,0x8
  41eca5:	movzx  r10d,BYTE PTR [rsi+r10*1]
  41ecaa:	add    eax,r10d
  41ecad:	lea    r10d,[rax-0xdc00]
  41ecb4:	cmp    r10d,0x3ff
  41ecbb:	ja     0x41ebbf
  41ecc1:	shl    edx,0xa
  41ecc4:	lea    edx,[rax+rdx*1-0x35fdc00]
  41eccb:	mov    eax,edx
  41eccd:	lea    r10,[rbp+0x6]
  41ecd1:	mov    r12d,0x1
  41ecd7:	lea    r13,[rip+0x2a2d2]        # 0x448fb0
  41ecde:	jmp    0x41ece3
  41ece0:	mov    r12,r11
  41ece3:	mov    r11d,eax
  41ece6:	shr    eax,0x6
  41ece9:	sub    r10,0x1
  41eced:	and    r11d,0x3f
  41ecf1:	or     r11d,0xffffff80
  41ecf5:	cmp    eax,0x3e
  41ecf8:	mov    BYTE PTR [r10],r11b
  41ecfb:	lea    r11,[r12+0x1]
  41ed00:	ja     0x41ece0
  41ed02:	movzx  r14d,BYTE PTR [r13+r12*1+0x1]
  41ed08:	test   r14d,eax
  41ed0b:	jne    0x41ece0
  41ed0d:	lea    r13,[rip+0x2a297]        # 0x448fab
  41ed14:	or     al,BYTE PTR [r13+r12*1+0x0]
  41ed19:	cmp    rbx,r11
  41ed1c:	mov    BYTE PTR [r10-0x1],al
  41ed20:	jb     0x41ec43
  41ed26:	lea    r12,[rbp+0x6]
  41ed2a:	sub    r10,0x1
  41ed2e:	cmp    r10,r12
  41ed31:	jae    0x41ed54
  41ed33:	lea    r12,[rbp+0x6]
  41ed37:	jmp    0x41ed44
  41ed39:	nop    DWORD PTR [rax+0x0]
  41ed40:	movzx  eax,BYTE PTR [r10]
  41ed44:	add    r10,0x1
  41ed48:	add    rcx,0x1
  41ed4c:	mov    BYTE PTR [rcx-0x1],al
  41ed4f:	cmp    r10,r12
  41ed52:	jb     0x41ed40
  41ed54:	sub    rbx,r11
  41ed57:	cmp    edx,0xffff
  41ed5d:	jbe    0x41ed75
  41ed5f:	add    rsi,0x4
  41ed63:	sub    r8,0x4
  41ed67:	test   r8,r8
  41ed6a:	je     0x41ebe5
  41ed70:	jmp    0x41eb8a
  41ed75:	add    rsi,0x2
  41ed79:	sub    r8,0x2
  41ed7d:	jmp    0x41ed67
  41ed7f:	movzx  eax,BYTE PTR [rsi+0x3]
  41ed83:	mov    r10d,0x2
  41ed89:	shl    eax,0x8
  41ed8c:	jmp    0x41eca5
  41ed91:	nop    DWORD PTR [rax+rax*1+0x0]
  41ed96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eda0:	push   r12
  41eda2:	push   rbp
  41eda3:	push   rdi
  41eda4:	push   rsi
  41eda5:	push   rbx
  41eda6:	sub    rsp,0x40
  41edaa:	mov    rdx,QWORD PTR [rcx+0x488]
  41edb1:	mov    r8,QWORD PTR [rcx+0x448]
  41edb8:	mov    rbx,rcx
  41edbb:	mov    rbp,QWORD PTR [rcx+0x450]
  41edc2:	movzx  r12d,BYTE PTR [rcx+0x492]
  41edca:	cmp    rdx,0x1f
  41edce:	jbe    0x41ef70
  41edd4:	lea    rdx,[rip+0x29888]        # 0x448663
  41eddb:	lea    rax,[rip+0x298a2]        # 0x448684
  41ede2:	test   r12b,r12b
  41ede5:	cmove  rax,rdx
  41ede9:	lea    rdi,[rip+0x29885]        # 0x448675
  41edf0:	lea    rsi,[rsp+0x20]
  41edf5:	test   r8,r8
  41edf8:	mov    rdx,rbx
  41edfb:	cmove  r8,rdi
  41edff:	mov    r9,rdi
  41ee02:	test   rbp,rbp
  41ee05:	mov    rcx,rsi
  41ee08:	cmove  rbp,rax
  41ee0c:	call   0x41e250
  41ee11:	mov    rax,QWORD PTR [rsp+0x20]
  41ee16:	mov    r9,rdi
  41ee19:	mov    r8,rdi
  41ee1c:	mov    rdx,rbx
  41ee1f:	mov    rcx,rsi
  41ee22:	mov    QWORD PTR [rbx+0x1f0],rax
  41ee29:	mov    rax,QWORD PTR [rsp+0x28]
  41ee2e:	mov    QWORD PTR [rbx+0x1f8],rax
  41ee35:	mov    rax,QWORD PTR [rsp+0x30]
  41ee3a:	mov    QWORD PTR [rbx+0x200],rax
  41ee41:	mov    rax,QWORD PTR [rbx+0x478]
  41ee48:	mov    DWORD PTR [rbx+0x200],eax
  41ee4e:	call   0x41e250
  41ee53:	mov    rax,QWORD PTR [rsp+0x20]
  41ee58:	test   r12b,r12b
  41ee5b:	mov    QWORD PTR [rbx+0x208],rax
  41ee62:	mov    rax,QWORD PTR [rsp+0x28]
  41ee67:	mov    QWORD PTR [rbx+0x210],rax
  41ee6e:	mov    rax,QWORD PTR [rsp+0x30]
  41ee73:	mov    QWORD PTR [rbx+0x218],rax
  41ee7a:	mov    rax,QWORD PTR [rbx+0x478]
  41ee81:	mov    DWORD PTR [rbx+0x218],eax
  41ee87:	je     0x41efa0
  41ee8d:	lea    r8,[rip+0x297e7]        # 0x44867b
  41ee94:	mov    r9,rdi
  41ee97:	mov    rdx,rbx
  41ee9a:	mov    rcx,rsi
  41ee9d:	call   0x41e250
  41eea2:	mov    rax,QWORD PTR [rsp+0x20]
  41eea7:	lea    r8,[rip+0x297d6]        # 0x448684
  41eeae:	mov    QWORD PTR [rbx+0x220],rax
  41eeb5:	mov    rax,QWORD PTR [rsp+0x28]
  41eeba:	mov    QWORD PTR [rbx+0x228],rax
  41eec1:	mov    rax,QWORD PTR [rsp+0x30]
  41eec6:	mov    QWORD PTR [rbx+0x230],rax
  41eecd:	mov    DWORD PTR [rbx+0x230],0x10
  41eed7:	lea    r9,[rip+0x29797]        # 0x448675
  41eede:	mov    rdx,rbx
  41eee1:	mov    rcx,rsi
  41eee4:	call   0x41e250
  41eee9:	mov    rax,QWORD PTR [rsp+0x20]
  41eeee:	lea    r9,[rip+0x29780]        # 0x448675
  41eef5:	mov    r8,rbp
  41eef8:	mov    rdx,rbx
  41eefb:	mov    rcx,rsi
  41eefe:	mov    QWORD PTR [rbx+0x238],rax
  41ef05:	mov    rax,QWORD PTR [rsp+0x28]
  41ef0a:	mov    QWORD PTR [rbx+0x240],rax
  41ef11:	mov    rax,QWORD PTR [rsp+0x30]
  41ef16:	mov    QWORD PTR [rbx+0x248],rax
  41ef1d:	mov    DWORD PTR [rbx+0x248],0x20
  41ef27:	call   0x41e250
  41ef2c:	mov    rax,QWORD PTR [rsp+0x20]
  41ef31:	mov    QWORD PTR [rbx+0x250],rax
  41ef38:	mov    rax,QWORD PTR [rsp+0x28]
  41ef3d:	mov    QWORD PTR [rbx+0x258],rax
  41ef44:	mov    rax,QWORD PTR [rsp+0x30]
  41ef49:	mov    QWORD PTR [rbx+0x260],rax
  41ef50:	mov    rax,QWORD PTR [rbx+0x488]
  41ef57:	mov    DWORD PTR [rbx+0x260],eax
  41ef5d:	add    rsp,0x40
  41ef61:	pop    rbx
  41ef62:	pop    rsi
  41ef63:	pop    rdi
  41ef64:	pop    rbp
  41ef65:	pop    r12
  41ef67:	ret    
  41ef68:	nop    DWORD PTR [rax+rax*1+0x0]
  41ef70:	cmp    rdx,0xf
  41ef74:	lea    rax,[rip+0x296fa]        # 0x448675
  41ef7b:	jbe    0x41ede9
  41ef81:	lea    rdx,[rip+0x296e4]        # 0x44866c
  41ef88:	lea    rax,[rip+0x296ec]        # 0x44867b
  41ef8f:	test   r12b,r12b
  41ef92:	cmove  rax,rdx
  41ef96:	jmp    0x41ede9
  41ef9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41efa0:	lea    r8,[rip+0x296c5]        # 0x44866c
  41efa7:	mov    r9,rdi
  41efaa:	mov    rdx,rbx
  41efad:	mov    rcx,rsi
  41efb0:	call   0x41e250
  41efb5:	mov    rax,QWORD PTR [rsp+0x20]
  41efba:	lea    r8,[rip+0x296a2]        # 0x448663
  41efc1:	mov    QWORD PTR [rbx+0x220],rax
  41efc8:	mov    rax,QWORD PTR [rsp+0x28]
  41efcd:	mov    QWORD PTR [rbx+0x228],rax
  41efd4:	mov    rax,QWORD PTR [rsp+0x30]
  41efd9:	mov    QWORD PTR [rbx+0x230],rax
  41efe0:	mov    DWORD PTR [rbx+0x230],0x10
  41efea:	jmp    0x41eed7
  41efef:	nop
  41eff0:	push   rsi
  41eff1:	push   rbx
  41eff2:	sub    rsp,0x28
  41eff6:	lea    rsi,[rip+0xfffffffffffff063]        # 0x41e060
  41effd:	cmp    QWORD PTR [rcx+0x1f0],rsi
  41f004:	mov    rbx,rcx
  41f007:	je     0x41f050
  41f009:	cmp    QWORD PTR [rbx+0x208],rsi
  41f010:	je     0x41f060
  41f012:	cmp    QWORD PTR [rbx+0x220],rsi
  41f019:	je     0x41f070
  41f01b:	cmp    QWORD PTR [rbx+0x238],rsi
  41f022:	je     0x41f080
  41f024:	cmp    QWORD PTR [rbx+0x250],rsi
  41f02b:	je     0x41f034
  41f02d:	add    rsp,0x28
  41f031:	pop    rbx
  41f032:	pop    rsi
  41f033:	ret    
  41f034:	mov    rcx,QWORD PTR [rbx+0x258]
  41f03b:	add    rsp,0x28
  41f03f:	pop    rbx
  41f040:	pop    rsi
  41f041:	jmp    0x424b28
  41f046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f050:	mov    rcx,QWORD PTR [rcx+0x1f8]
  41f057:	call   0x424b28
  41f05c:	jmp    0x41f009
  41f05e:	xchg   ax,ax
  41f060:	mov    rcx,QWORD PTR [rbx+0x210]
  41f067:	call   0x424b28
  41f06c:	jmp    0x41f012
  41f06e:	xchg   ax,ax
  41f070:	mov    rcx,QWORD PTR [rbx+0x228]
  41f077:	call   0x424b28
  41f07c:	jmp    0x41f01b
  41f07e:	xchg   ax,ax
  41f080:	mov    rcx,QWORD PTR [rbx+0x240]
  41f087:	call   0x424b28
  41f08c:	jmp    0x41f024
  41f08e:	xchg   ax,ax
  41f090:	push   rsi
  41f091:	push   rbx
  41f092:	sub    rsp,0x58
  41f096:	cmp    edx,0x7e
  41f099:	mov    rsi,rcx
  41f09c:	mov    ebx,edx
  41f09e:	ja     0x41f110
  41f0a0:	mov    ecx,0x1
  41f0a5:	mov    BYTE PTR [rsp+0x2f],dl
  41f0a9:	mov    QWORD PTR [rsp+0x38],0x1
  41f0b2:	call   0x4385d0
  41f0b7:	mov    QWORD PTR [rsp+0x40],0x0
  41f0c0:	mov    QWORD PTR [rsp+0x30],rax
  41f0c5:	lea    rdx,[rsp+0x2f]
  41f0ca:	mov    rcx,QWORD PTR [rsi+0x1f8]
  41f0d1:	lea    r9,[rsp+0x30]
  41f0d6:	mov    r8d,0x1
  41f0dc:	call   QWORD PTR [rsi+0x1f0]
  41f0e2:	test   al,al
  41f0e4:	je     0x41f130
  41f0e6:	cmp    QWORD PTR [rsp+0x40],0x1
  41f0ec:	je     0x41f150
  41f0ee:	lea    r8,[rip+0x29603]        # 0x4486f8
  41f0f5:	mov    r9d,ebx
  41f0f8:	mov    edx,0x4
  41f0fd:	mov    rcx,rsi
  41f100:	call   0x412660
  41f105:	xor    eax,eax
  41f107:	add    rsp,0x58
  41f10b:	pop    rbx
  41f10c:	pop    rsi
  41f10d:	ret    
  41f10e:	xchg   ax,ax
  41f110:	lea    r8,[rip+0x29579]        # 0x448690
  41f117:	mov    r9d,edx
  41f11a:	mov    edx,0x4
  41f11f:	call   0x412660
  41f124:	xor    eax,eax
  41f126:	add    rsp,0x58
  41f12a:	pop    rbx
  41f12b:	pop    rsi
  41f12c:	ret    
  41f12d:	nop    DWORD PTR [rax]
  41f130:	lea    r8,[rip+0x29599]        # 0x4486d0
  41f137:	mov    edx,0x4
  41f13c:	mov    rcx,rsi
  41f13f:	call   0x412860
  41f144:	xor    eax,eax
  41f146:	add    rsp,0x58
  41f14a:	pop    rbx
  41f14b:	pop    rsi
  41f14c:	ret    
  41f14d:	nop    DWORD PTR [rax]
  41f150:	mov    rcx,QWORD PTR [rsp+0x30]
  41f155:	movzx  ebx,BYTE PTR [rcx]
  41f158:	call   0x43f100
  41f15d:	mov    eax,ebx
  41f15f:	add    rsp,0x58
  41f163:	pop    rbx
  41f164:	pop    rsi
  41f165:	ret    
  41f166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f170:	push   r14
  41f172:	push   r13
  41f174:	push   r12
  41f176:	push   rbp
  41f177:	push   rdi
  41f178:	push   rsi
  41f179:	push   rbx
  41f17a:	sub    rsp,0x30
  41f17e:	cmp    BYTE PTR [rcx+0x418],0x0
  41f185:	mov    rbp,QWORD PTR [rdx]
  41f188:	mov    r12,rcx
  41f18b:	mov    r14,rdx
  41f18e:	mov    rdi,r8
  41f191:	mov    r13d,r9d
  41f194:	jne    0x41f1a3
  41f196:	cmp    BYTE PTR [rcx+0x435],0x0
  41f19d:	je     0x41f390
  41f1a3:	test   r13d,r13d
  41f1a6:	jne    0x41f1b7
  41f1a8:	cmp    BYTE PTR [r12+0x429],0x0
  41f1b1:	jne    0x41f340
  41f1b7:	movzx  eax,BYTE PTR [rbp-0x1]
  41f1bb:	mov    r10d,0x4
  41f1c1:	cmp    al,0x75
  41f1c3:	je     0x41f1e6
  41f1c5:	cmp    al,0x55
  41f1c7:	mov    r10b,0x8
  41f1ca:	je     0x41f1e6
  41f1cc:	lea    r8,[rip+0x295d5]        # 0x4487a8
  41f1d3:	mov    edx,0x4
  41f1d8:	mov    rcx,r12
  41f1db:	call   0x412660
  41f1e0:	mov    r10d,0x4
  41f1e6:	mov    rcx,QWORD PTR [rip+0x323f3]        # 0x4515e0
  41f1ed:	mov    r8,QWORD PTR [rip+0x323bc]        # 0x4515b0
  41f1f4:	mov    rsi,rbp
  41f1f7:	xor    ebx,ebx
  41f1f9:	nop    DWORD PTR [rax+0x0]
  41f200:	movzx  edx,BYTE PTR [rsi]
  41f203:	test   BYTE PTR [rcx+rdx*2+0x1],0x1
  41f208:	mov    rax,rdx
  41f20b:	je     0x41f2c0
  41f211:	cdqe   
  41f213:	shl    ebx,0x4
  41f216:	add    rsi,0x1
  41f21a:	movzx  eax,BYTE PTR [r8+rax*1]
  41f21f:	add    ebx,eax
  41f221:	sub    r10d,0x1
  41f225:	setne  dl
  41f228:	je     0x41f22f
  41f22a:	cmp    rsi,rdi
  41f22d:	jb     0x41f200
  41f22f:	test   r13d,r13d
  41f232:	setne  cl
  41f235:	test   dl,dl
  41f237:	je     0x41f250
  41f239:	xor    eax,eax
  41f23b:	test   cl,cl
  41f23d:	je     0x41f250
  41f23f:	add    rsp,0x30
  41f243:	pop    rbx
  41f244:	pop    rsi
  41f245:	pop    rdi
  41f246:	pop    rbp
  41f247:	pop    r12
  41f249:	pop    r13
  41f24b:	pop    r14
  41f24d:	ret    
  41f24e:	xchg   ax,ax
  41f250:	sub    rbp,0x2
  41f254:	test   dl,dl
  41f256:	mov    QWORD PTR [r14],rsi
  41f259:	jne    0x41f360
  41f25f:	cmp    ebx,0x9f
  41f265:	ja     0x41f2d0
  41f267:	cmp    BYTE PTR [r12+0x418],0x0
  41f270:	jne    0x41f2d0
  41f272:	cmp    ebx,0x24
  41f275:	je     0x41f2d0
  41f277:	mov    eax,ebx
  41f279:	and    eax,0xffffffdf
  41f27c:	cmp    eax,0x40
  41f27f:	je     0x41f2d0
  41f281:	mov    r9d,esi
  41f284:	lea    r8,[rip+0x2956d]        # 0x4487f8
  41f28b:	mov    QWORD PTR [rsp+0x20],rbp
  41f290:	sub    r9d,ebp
  41f293:	mov    edx,0x3
  41f298:	mov    rcx,r12
  41f29b:	mov    ebx,0x1
  41f2a0:	call   0x412660
  41f2a5:	mov    eax,ebx
  41f2a7:	add    rsp,0x30
  41f2ab:	pop    rbx
  41f2ac:	pop    rsi
  41f2ad:	pop    rdi
  41f2ae:	pop    rbp
  41f2af:	pop    r12
  41f2b1:	pop    r13
  41f2b3:	pop    r14
  41f2b5:	ret    
  41f2b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f2c0:	test   r10d,r10d
  41f2c3:	setne  dl
  41f2c6:	jmp    0x41f22f
  41f2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f2d0:	test   ebx,ebx
  41f2d2:	js     0x41f281
  41f2d4:	lea    eax,[rbx-0xd800]
  41f2da:	cmp    eax,0x7ff
  41f2df:	jbe    0x41f281
  41f2e1:	cmp    ebx,0x24
  41f2e4:	jne    0x41f4be
  41f2ea:	test   cl,cl
  41f2ec:	je     0x41f45f
  41f2f2:	cmp    BYTE PTR [r12+0x430],0x0
  41f2fb:	je     0x41f47b
  41f301:	cmp    BYTE PTR [r12+0x432],0x0
  41f30a:	je     0x41f318
  41f30c:	cmp    BYTE PTR [r12+0x12],0x0
  41f312:	je     0x41f59a
  41f318:	mov    rax,QWORD PTR [rsp+0x90]
  41f320:	mov    ebx,0x24
  41f325:	mov    DWORD PTR [rax],0x24
  41f32b:	mov    BYTE PTR [rax+0x4],0x0
  41f32f:	mov    eax,ebx
  41f331:	jmp    0x41f2a7
  41f336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f340:	movzx  r9d,BYTE PTR [rbp-0x1]
  41f345:	lea    r8,[rip+0x29424]        # 0x448770
  41f34c:	mov    edx,0x6
  41f351:	mov    rcx,r12
  41f354:	call   0x412690
  41f359:	jmp    0x41f1b7
  41f35e:	xchg   ax,ax
  41f360:	mov    r9d,esi
  41f363:	lea    r8,[rip+0x2945e]        # 0x4487c8
  41f36a:	mov    QWORD PTR [rsp+0x20],rbp
  41f36f:	sub    r9d,ebp
  41f372:	mov    edx,0x3
  41f377:	mov    rcx,r12
  41f37a:	mov    ebx,0x1
  41f37f:	call   0x412660
  41f384:	mov    eax,ebx
  41f386:	jmp    0x41f2a7
  41f38b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f390:	lea    r8,[rip+0x293a1]        # 0x448738
  41f397:	xor    edx,edx
  41f399:	call   0x412660
  41f39e:	jmp    0x41f1b7
  41f3a3:	lea    r8d,[r9+0x1]
  41f3a7:	cmp    r8d,edx
  41f3aa:	jne    0x41f490
  41f3b0:	cmp    BYTE PTR [r12+0x437],0x0
  41f3b9:	je     0x41f4ee
  41f3bf:	cmp    BYTE PTR [r12+0x441],0x0
  41f3c8:	jne    0x41f584
  41f3ce:	cmp    BYTE PTR [r12+0x435],0x0
  41f3d7:	jne    0x41f620
  41f3dd:	cmp    BYTE PTR [r12+0x418],0x1
  41f3e6:	movzx  eax,WORD PTR [rcx+rdx*8]
  41f3ea:	sbb    r8d,r8d
  41f3ed:	xor    edi,edi
  41f3ef:	and    r8d,0x9
  41f3f3:	add    r8d,0x4
  41f3f7:	test   r8w,ax
  41f3fb:	je     0x41f4ca
  41f401:	movzx  r14d,BYTE PTR [rcx+rdx*8+0x2]
  41f407:	test   r14b,r14b
  41f40a:	je     0x41f520
  41f410:	mov    rcx,QWORD PTR [rsp+0x90]
  41f418:	cmp    r14b,BYTE PTR [rcx+0x4]
  41f41c:	jae    0x41f520
  41f422:	mov    DWORD PTR [rcx+0x8],0x3
  41f429:	mov    rax,QWORD PTR [rsp+0x90]
  41f431:	test   di,di
  41f434:	mov    BYTE PTR [rax+0x4],r14b
  41f438:	je     0x41f45f
  41f43a:	cmp    r13d,0x1
  41f43e:	jne    0x41f45f
  41f440:	mov    r9d,esi
  41f443:	lea    r8,[rip+0x29416]        # 0x448860
  41f44a:	mov    QWORD PTR [rsp+0x20],rbp
  41f44f:	sub    r9d,ebp
  41f452:	mov    edx,0x3
  41f457:	mov    rcx,r12
  41f45a:	call   0x412660
  41f45f:	test   ebx,ebx
  41f461:	jne    0x41f2a5
  41f467:	mov    eax,0x1
  41f46c:	add    rsp,0x30
  41f470:	pop    rbx
  41f471:	pop    rsi
  41f472:	pop    rdi
  41f473:	pop    rbp
  41f474:	pop    r12
  41f476:	pop    r13
  41f478:	pop    r14
  41f47a:	ret    
  41f47b:	lea    rcx,[rip+0x29b3e]        # 0x448fc0
  41f482:	xor    r8d,r8d
  41f485:	mov    edx,0x73c
  41f48a:	nop    WORD PTR [rax+rax*1+0x0]
  41f490:	lea    eax,[rdx+r8*1]
  41f494:	mov    r9d,eax
  41f497:	shr    r9d,0x1f
  41f49b:	add    eax,r9d
  41f49e:	sar    eax,1
  41f4a0:	movsxd r10,eax
  41f4a3:	mov    r9d,eax
  41f4a6:	cmp    ebx,DWORD PTR [rcx+r10*8+0x4]
  41f4ab:	ja     0x41f3a3
  41f4b1:	movsxd rdx,eax
  41f4b4:	cmp    r8d,edx
  41f4b7:	jne    0x41f490
  41f4b9:	jmp    0x41f3b0
  41f4be:	test   cl,cl
  41f4c0:	je     0x41f45f
  41f4c2:	cmp    ebx,0x10ffff
  41f4c8:	jbe    0x41f47b
  41f4ca:	mov    r9d,esi
  41f4cd:	lea    r8,[rip+0x293d4]        # 0x4488a8
  41f4d4:	mov    QWORD PTR [rsp+0x20],rbp
  41f4d9:	sub    r9d,ebp
  41f4dc:	mov    edx,0x3
  41f4e1:	mov    rcx,r12
  41f4e4:	call   0x412660
  41f4e9:	jmp    0x41f45f
  41f4ee:	movzx  eax,WORD PTR [rcx+rdx*8]
  41f4f2:	test   al,0xd
  41f4f4:	je     0x41f4ca
  41f4f6:	cmp    BYTE PTR [r12+0x441],0x0
  41f4ff:	jne    0x41f590
  41f505:	xor    edi,edi
  41f507:	cmp    BYTE PTR [r12+0x435],0x0
  41f510:	je     0x41f401
  41f516:	mov    edi,eax
  41f518:	and    edi,0x2
  41f51b:	jmp    0x41f401
  41f520:	test   ah,0x1
  41f523:	je     0x41f5bc
  41f529:	mov    rax,QWORD PTR [rsp+0x90]
  41f531:	lea    edx,[rbx-0x1161]
  41f537:	cmp    edx,0x14
  41f53a:	mov    eax,DWORD PTR [rax]
  41f53c:	ja     0x41f5e7
  41f542:	sub    eax,0x1100
  41f547:	cmp    eax,0x12
  41f54a:	ja     0x41f56c
  41f54c:	mov    rax,QWORD PTR [rsp+0x90]
  41f554:	mov    rcx,QWORD PTR [rsp+0x90]
  41f55c:	cmp    DWORD PTR [rax+0x8],0x2
  41f560:	mov    eax,0x2
  41f565:	cmovge eax,DWORD PTR [rcx+0x8]
  41f569:	mov    DWORD PTR [rcx+0x8],eax
  41f56c:	test   r14b,r14b
  41f56f:	jne    0x41f429
  41f575:	mov    rax,QWORD PTR [rsp+0x90]
  41f57d:	mov    DWORD PTR [rax],ebx
  41f57f:	jmp    0x41f429
  41f584:	movzx  eax,WORD PTR [rcx+rdx*8]
  41f588:	test   al,0x8
  41f58a:	je     0x41f4ca
  41f590:	mov    edi,eax
  41f592:	and    edi,0x10
  41f595:	jmp    0x41f401
  41f59a:	lea    r8,[rip+0x2927f]        # 0x448820
  41f5a1:	mov    BYTE PTR [r12+0x432],0x0
  41f5aa:	mov    edx,0x2
  41f5af:	mov    rcx,r12
  41f5b2:	call   0x412660
  41f5b7:	jmp    0x41f318
  41f5bc:	test   al,0x80
  41f5be:	jne    0x41f56c
  41f5c0:	test   al,0x40
  41f5c2:	je     0x41f631
  41f5c4:	mov    rax,QWORD PTR [rsp+0x90]
  41f5cc:	mov    rcx,QWORD PTR [rsp+0x90]
  41f5d4:	mov    eax,DWORD PTR [rax+0x8]
  41f5d7:	test   eax,eax
  41f5d9:	mov    eax,0x1
  41f5de:	cmovg  eax,DWORD PTR [rcx+0x8]
  41f5e2:	mov    DWORD PTR [rcx+0x8],eax
  41f5e5:	jmp    0x41f56c
  41f5e7:	lea    edx,[rbx-0x11a8]
  41f5ed:	cmp    edx,0x1a
  41f5f0:	ja     0x41f64d
  41f5f2:	lea    ecx,[rax-0xac00]
  41f5f8:	cmp    ecx,0x2ba3
  41f5fe:	ja     0x41f56c
  41f604:	mov    eax,ecx
  41f606:	mov    edx,0x24924925
  41f60b:	shr    eax,0x2
  41f60e:	mul    edx
  41f610:	imul   edx,edx,0x1c
  41f613:	cmp    ecx,edx
  41f615:	jne    0x41f56c
  41f61b:	jmp    0x41f54c
  41f620:	movzx  eax,WORD PTR [rcx+rdx*8]
  41f624:	test   al,0x1
  41f626:	jne    0x41f516
  41f62c:	jmp    0x41f4ca
  41f631:	test   al,0x20
  41f633:	jne    0x41f54c
  41f639:	mov    rax,QWORD PTR [rsp+0x90]
  41f641:	mov    DWORD PTR [rax+0x8],0x3
  41f648:	jmp    0x41f56c
  41f64d:	cmp    ebx,0x338
  41f653:	je     0x41f56c
  41f659:	ja     0x41f702
  41f65f:	cmp    ebx,0x311
  41f665:	je     0x421b02
  41f66b:	ja     0x42118b
  41f671:	cmp    ebx,0x307
  41f677:	je     0x420d8f
  41f67d:	ja     0x420d25
  41f683:	cmp    ebx,0x302
  41f689:	je     0x41fe4b
  41f68f:	jbe    0x41fdca
  41f695:	cmp    ebx,0x304
  41f69b:	je     0x41fac9
  41f6a1:	jb     0x41fa83
  41f6a7:	cmp    ebx,0x306
  41f6ad:	jne    0x420870
  41f6b3:	cmp    eax,0x3a5
  41f6b8:	je     0x41f639
  41f6be:	ja     0x42082c
  41f6c4:	cmp    eax,0x65
  41f6c7:	je     0x41f639
  41f6cd:	ja     0x4207fd
  41f6d3:	cmp    eax,0x49
  41f6d6:	je     0x41f639
  41f6dc:	ja     0x4207dd
  41f6e2:	cmp    eax,0x45
  41f6e5:	je     0x41f639
  41f6eb:	cmp    eax,0x47
  41f6ee:	je     0x41f639
  41f6f4:	cmp    eax,0x41
  41f6f7:	jne    0x41f56c
  41f6fd:	jmp    0x41f639
  41f702:	cmp    ebx,0xc56
  41f708:	je     0x41f8eb
  41f70e:	ja     0x41f780
  41f710:	cmp    ebx,0x9be
  41f716:	je     0x420a75
  41f71c:	ja     0x420a3b
  41f722:	cmp    ebx,0x653
  41f728:	je     0x4209b2
  41f72e:	jbe    0x42094f
  41f734:	cmp    ebx,0x655
  41f73a:	je     0x41f92e
  41f740:	jb     0x41f8fb
  41f746:	cmp    ebx,0x93c
  41f74c:	jne    0x420870
  41f752:	lea    ecx,[rax-0x915]
  41f758:	cmp    ecx,0x1e
  41f75b:	ja     0x41f56c
  41f761:	mov    edx,0x1
  41f766:	shl    rdx,cl
  41f769:	test   edx,0x4c483087
  41f76f:	je     0x41f56c
  41f775:	jmp    0x41f639
  41f77a:	nop    WORD PTR [rax+rax*1+0x0]
  41f780:	cmp    ebx,0xdcf
  41f786:	je     0x41f8d8
  41f78c:	jbe    0x41f88f
  41f792:	cmp    ebx,0x3099
  41f798:	je     0x41f86f
  41f79e:	jbe    0x41f801
  41f7a0:	cmp    ebx,0x110ba
  41f7a6:	je     0x41f9b9
  41f7ac:	cmp    ebx,0x11127
  41f7b2:	je     0x41f9a6
  41f7b8:	cmp    ebx,0x309a
  41f7be:	jne    0x420870
  41f7c4:	cmp    eax,0x307b
  41f7c9:	je     0x41f639
  41f7cf:	ja     0x41f97e
  41f7d5:	cmp    eax,0x3072
  41f7da:	je     0x41f639
  41f7e0:	jbe    0x41f96e
  41f7e6:	cmp    eax,0x3075
  41f7eb:	je     0x41f639
  41f7f1:	cmp    eax,0x3078
  41f7f6:	jne    0x41f56c
  41f7fc:	jmp    0x41f639
  41f801:	cmp    ebx,0x102e
  41f807:	je     0x41f85f
  41f809:	cmp    ebx,0x1b35
  41f80f:	jne    0x41f840
  41f811:	sub    eax,0x1b05
  41f816:	cmp    eax,0x3d
  41f819:	ja     0x41f56c
  41f81f:	movabs rdx,0x26a0000000001155
  41f829:	bt     rdx,rax
  41f82d:	jae    0x41f56c
  41f833:	jmp    0x41f639
  41f838:	nop    DWORD PTR [rax+rax*1+0x0]
  41f840:	cmp    ebx,0xddf
  41f846:	jne    0x420870
  41f84c:	sub    eax,0xdd9
  41f851:	cmp    eax,0x1
  41f854:	ja     0x41f56c
  41f85a:	jmp    0x41f639
  41f85f:	cmp    eax,0x1025
  41f864:	je     0x41f639
  41f86a:	jmp    0x41f56c
  41f86f:	sub    eax,0x3046
  41f874:	cmp    eax,0xb7
  41f879:	ja     0x41f56c
  41f87f:	lea    rdx,[rip+0x2905a]        # 0x4488e0
  41f886:	movsxd rax,DWORD PTR [rdx+rax*4]
  41f88a:	add    rdx,rax
  41f88d:	jmp    rdx
  41f88f:	cmp    ebx,0xcd6
  41f895:	je     0x41fa63
  41f89b:	jbe    0x41fa27
  41f8a1:	cmp    ebx,0xd57
  41f8a7:	je     0x41fa17
  41f8ad:	cmp    ebx,0xdca
  41f8b3:	je     0x41f9fc
  41f8b9:	cmp    ebx,0xd3e
  41f8bf:	jne    0x420870
  41f8c5:	sub    eax,0xd46
  41f8ca:	cmp    eax,0x1
  41f8cd:	ja     0x41f56c
  41f8d3:	jmp    0x41f639
  41f8d8:	sub    eax,0xdd9
  41f8dd:	cmp    eax,0x1
  41f8e0:	ja     0x41f56c
  41f8e6:	jmp    0x41f639
  41f8eb:	cmp    eax,0xc46
  41f8f0:	je     0x41f639
  41f8f6:	jmp    0x41f56c
  41f8fb:	cmp    eax,0x64a
  41f900:	je     0x41f639
  41f906:	jbe    0x41f953
  41f908:	cmp    eax,0x6d2
  41f90d:	je     0x41f639
  41f913:	cmp    eax,0x6d5
  41f918:	je     0x41f639
  41f91e:	cmp    eax,0x6c1
  41f923:	jne    0x41f56c
  41f929:	jmp    0x41f639
  41f92e:	lea    ecx,[rax-0x622]
  41f934:	cmp    ecx,0x5
  41f937:	ja     0x41f56c
  41f93d:	mov    edx,0x1
  41f942:	shl    rdx,cl
  41f945:	and    edx,0x23
  41f948:	je     0x41f56c
  41f94e:	jmp    0x41f639
  41f953:	cmp    eax,0x627
  41f958:	je     0x41f639
  41f95e:	cmp    eax,0x648
  41f963:	jne    0x41f56c
  41f969:	jmp    0x41f639
  41f96e:	cmp    eax,0x306f
  41f973:	jne    0x41f56c
  41f979:	jmp    0x41f639
  41f97e:	cmp    eax,0x30d5
  41f983:	je     0x41f639
  41f989:	ja     0x41f9e1
  41f98b:	cmp    eax,0x30cf
  41f990:	je     0x41f639
  41f996:	cmp    eax,0x30d2
  41f99b:	jne    0x41f56c
  41f9a1:	jmp    0x41f639
  41f9a6:	sub    eax,0x11131
  41f9ab:	cmp    eax,0x1
  41f9ae:	ja     0x41f56c
  41f9b4:	jmp    0x41f639
  41f9b9:	lea    ecx,[rax-0x11099]
  41f9bf:	cmp    ecx,0xc
  41f9c2:	ja     0x41f56c
  41f9c8:	mov    edx,0x1
  41f9cd:	shl    rdx,cl
  41f9d0:	test   edx,0x1005
  41f9d6:	je     0x41f56c
  41f9dc:	jmp    0x41f639
  41f9e1:	cmp    eax,0x30d8
  41f9e6:	je     0x41f639
  41f9ec:	cmp    eax,0x30db
  41f9f1:	jne    0x41f56c
  41f9f7:	jmp    0x41f639
  41f9fc:	cmp    eax,0xdd9
  41fa01:	je     0x41f639
  41fa07:	cmp    eax,0xddc
  41fa0c:	jne    0x41f56c
  41fa12:	jmp    0x41f639
  41fa17:	cmp    eax,0xd46
  41fa1c:	je     0x41f639
  41fa22:	jmp    0x41f56c
  41fa27:	cmp    ebx,0xcc2
  41fa2d:	je     0x41fa73
  41fa2f:	cmp    ebx,0xcd5
  41fa35:	jne    0x420870
  41fa3b:	lea    ecx,[rax-0xcbf]
  41fa41:	cmp    ecx,0xb
  41fa44:	ja     0x41f56c
  41fa4a:	mov    edx,0x1
  41fa4f:	shl    rdx,cl
  41fa52:	test   edx,0x881
  41fa58:	je     0x41f56c
  41fa5e:	jmp    0x41f639
  41fa63:	cmp    eax,0xcc6
  41fa68:	je     0x41f639
  41fa6e:	jmp    0x41f56c
  41fa73:	cmp    eax,0xcc6
  41fa78:	je     0x41f639
  41fa7e:	jmp    0x41f56c
  41fa83:	cmp    eax,0x76
  41fa86:	ja     0x41fd28
  41fa8c:	cmp    eax,0x75
  41fa8f:	jae    0x41f639
  41fa95:	cmp    eax,0x56
  41fa98:	ja     0x41fd06
  41fa9e:	cmp    eax,0x55
  41faa1:	jae    0x41f639
  41faa7:	cmp    eax,0x49
  41faaa:	je     0x41f639
  41fab0:	ja     0x41fb17
  41fab2:	cmp    eax,0x41
  41fab5:	je     0x41f639
  41fabb:	cmp    eax,0x45
  41fabe:	jne    0x41f56c
  41fac4:	jmp    0x41f639
  41fac9:	cmp    eax,0xf6
  41face:	ja     0x41fb9e
  41fad4:	cmp    eax,0xf5
  41fad9:	jae    0x41f639
  41fadf:	cmp    eax,0x69
  41fae2:	je     0x41f639
  41fae8:	ja     0x41fb65
  41faea:	cmp    eax,0x4f
  41faed:	je     0x41f639
  41faf3:	jbe    0x41fb3f
  41faf5:	cmp    eax,0x61
  41faf8:	je     0x41f639
  41fafe:	ja     0x41fb28
  41fb00:	cmp    eax,0x55
  41fb03:	je     0x41f639
  41fb09:	cmp    eax,0x59
  41fb0c:	jne    0x41f56c
  41fb12:	jmp    0x41f639
  41fb17:	sub    eax,0x4e
  41fb1a:	cmp    eax,0x1
  41fb1d:	ja     0x41f56c
  41fb23:	jmp    0x41f639
  41fb28:	cmp    eax,0x65
  41fb2b:	je     0x41f639
  41fb31:	cmp    eax,0x67
  41fb34:	jne    0x41f56c
  41fb3a:	jmp    0x41f639
  41fb3f:	cmp    eax,0x45
  41fb42:	je     0x41f639
  41fb48:	jbe    0x41fbdf
  41fb4e:	cmp    eax,0x47
  41fb51:	je     0x41f639
  41fb57:	cmp    eax,0x49
  41fb5a:	jne    0x41f56c
  41fb60:	jmp    0x41f639
  41fb65:	cmp    eax,0xc6
  41fb6a:	je     0x41f639
  41fb70:	ja     0x41fcbb
  41fb76:	cmp    eax,0x75
  41fb79:	je     0x41f639
  41fb7f:	jbe    0x41fcad
  41fb85:	cmp    eax,0x79
  41fb88:	je     0x41f639
  41fb8e:	cmp    eax,0xc4
  41fb93:	jne    0x41f56c
  41fb99:	jmp    0x41f639
  41fb9e:	cmp    eax,0x3b9
  41fba3:	je     0x41f639
  41fba9:	ja     0x41fc28
  41fbab:	cmp    eax,0x22f
  41fbb0:	ja     0x41fc00
  41fbb2:	cmp    eax,0x22e
  41fbb7:	jae    0x41f639
  41fbbd:	cmp    eax,0x1eb
  41fbc2:	ja     0x41fbed
  41fbc4:	cmp    eax,0x1ea
  41fbc9:	jae    0x41f639
  41fbcf:	cmp    eax,0xfc
  41fbd4:	jne    0x41f56c
  41fbda:	jmp    0x41f639
  41fbdf:	cmp    eax,0x41
  41fbe2:	jne    0x41f56c
  41fbe8:	jmp    0x41f639
  41fbed:	sub    eax,0x226
  41fbf2:	cmp    eax,0x1
  41fbf5:	ja     0x41f56c
  41fbfb:	jmp    0x41f639
  41fc00:	cmp    eax,0x399
  41fc05:	je     0x41f639
  41fc0b:	jbe    0x41fc62
  41fc0d:	cmp    eax,0x3a5
  41fc12:	je     0x41f639
  41fc18:	cmp    eax,0x3b1
  41fc1d:	jne    0x41f56c
  41fc23:	jmp    0x41f639
  41fc28:	cmp    eax,0x1e37
  41fc2d:	ja     0x41fc8d
  41fc2f:	cmp    eax,0x1e36
  41fc34:	jae    0x41f639
  41fc3a:	cmp    eax,0x423
  41fc3f:	je     0x41f639
  41fc45:	ja     0x41fc72
  41fc47:	cmp    eax,0x3c5
  41fc4c:	je     0x41f639
  41fc52:	cmp    eax,0x418
  41fc57:	jne    0x41f56c
  41fc5d:	jmp    0x41f639
  41fc62:	cmp    eax,0x391
  41fc67:	jne    0x41f56c
  41fc6d:	jmp    0x41f639
  41fc72:	cmp    eax,0x438
  41fc77:	je     0x41f639
  41fc7d:	cmp    eax,0x443
  41fc82:	jne    0x41f56c
  41fc88:	jmp    0x41f639
  41fc8d:	cmp    eax,0x1fb3
  41fc92:	je     0x41f639
  41fc98:	ja     0x41fce3
  41fc9a:	sub    eax,0x1e5a
  41fc9f:	cmp    eax,0x1
  41fca2:	ja     0x41f56c
  41fca8:	jmp    0x41f639
  41fcad:	cmp    eax,0x6f
  41fcb0:	jne    0x41f56c
  41fcb6:	jmp    0x41f639
  41fcbb:	cmp    eax,0xdc
  41fcc0:	je     0x41f639
  41fcc6:	jbe    0x41fcf3
  41fcc8:	cmp    eax,0xe4
  41fccd:	je     0x41f639
  41fcd3:	cmp    eax,0xe6
  41fcd8:	jne    0x41f56c
  41fcde:	jmp    0x41f639
  41fce3:	cmp    eax,0x1fbc
  41fce8:	jne    0x41f56c
  41fcee:	jmp    0x41f639
  41fcf3:	sub    eax,0xd5
  41fcf8:	cmp    eax,0x1
  41fcfb:	ja     0x41f56c
  41fd01:	jmp    0x41f639
  41fd06:	cmp    eax,0x65
  41fd09:	je     0x41f639
  41fd0f:	ja     0x41fd68
  41fd11:	cmp    eax,0x59
  41fd14:	je     0x41f639
  41fd1a:	cmp    eax,0x61
  41fd1d:	jne    0x41f56c
  41fd23:	jmp    0x41f639
  41fd28:	cmp    eax,0xf4
  41fd2d:	je     0x41f639
  41fd33:	ja     0x41fda1
  41fd35:	cmp    eax,0xca
  41fd3a:	je     0x41f639
  41fd40:	jbe    0x41fd88
  41fd42:	cmp    eax,0xe2
  41fd47:	je     0x41f639
  41fd4d:	cmp    eax,0xea
  41fd52:	je     0x41f639
  41fd58:	cmp    eax,0xd4
  41fd5d:	jne    0x41f56c
  41fd63:	jmp    0x41f639
  41fd68:	cmp    eax,0x69
  41fd6b:	je     0x41f639
  41fd71:	jb     0x41f56c
  41fd77:	sub    eax,0x6e
  41fd7a:	cmp    eax,0x1
  41fd7d:	ja     0x41f56c
  41fd83:	jmp    0x41f639
  41fd88:	cmp    eax,0x79
  41fd8b:	je     0x41f639
  41fd91:	cmp    eax,0xc2
  41fd96:	jne    0x41f56c
  41fd9c:	jmp    0x41f639
  41fda1:	cmp    eax,0x1a1
  41fda6:	ja     0x41fe87
  41fdac:	cmp    eax,0x1a0
  41fdb1:	jae    0x41f639
  41fdb7:	sub    eax,0x102
  41fdbc:	cmp    eax,0x1
  41fdbf:	ja     0x41f56c
  41fdc5:	jmp    0x41f639
  41fdca:	cmp    ebx,0x300
  41fdd0:	je     0x4200f8
  41fdd6:	cmp    ebx,0x301
  41fddc:	jne    0x420870
  41fde2:	cmp    eax,0x39f
  41fde7:	je     0x41f639
  41fded:	ja     0x420089
  41fdf3:	cmp    eax,0xca
  41fdf8:	je     0x41f639
  41fdfe:	ja     0x42001b
  41fe04:	cmp    eax,0x63
  41fe07:	je     0x41f639
  41fe0d:	ja     0x41ffda
  41fe13:	cmp    eax,0x50
  41fe16:	ja     0x41ff7c
  41fe1c:	cmp    eax,0x4b
  41fe1f:	jae    0x41f639
  41fe25:	cmp    eax,0x45
  41fe28:	je     0x41f639
  41fe2e:	ja     0x41ff65
  41fe34:	cmp    eax,0x41
  41fe37:	je     0x41f639
  41fe3d:	cmp    eax,0x43
  41fe40:	jne    0x41f56c
  41fe46:	jmp    0x41f639
  41fe4b:	cmp    eax,0x65
  41fe4e:	je     0x41f639
  41fe54:	ja     0x41fedf
  41fe5a:	cmp    eax,0x53
  41fe5d:	je     0x41f639
  41fe63:	ja     0x41feba
  41fe65:	cmp    eax,0x45
  41fe68:	je     0x41f639
  41fe6e:	ja     0x41fe9a
  41fe70:	cmp    eax,0x41
  41fe73:	je     0x41f639
  41fe79:	cmp    eax,0x43
  41fe7c:	jne    0x41f56c
  41fe82:	jmp    0x41f639
  41fe87:	sub    eax,0x1af
  41fe8c:	cmp    eax,0x1
  41fe8f:	ja     0x41f56c
  41fe95:	jmp    0x41f639
  41fe9a:	cmp    eax,0x47
  41fe9d:	jb     0x41f56c
  41fea3:	cmp    eax,0x4a
  41fea6:	jbe    0x41f639
  41feac:	cmp    eax,0x4f
  41feaf:	jne    0x41f56c
  41feb5:	jmp    0x41f639
  41feba:	cmp    eax,0x5a
  41febd:	ja     0x41ff18
  41febf:	cmp    eax,0x59
  41fec2:	jae    0x41f639
  41fec8:	cmp    eax,0x55
  41fecb:	je     0x41f639
  41fed1:	cmp    eax,0x57
  41fed4:	jne    0x41f56c
  41feda:	jmp    0x41f639
  41fedf:	cmp    eax,0x7a
  41fee2:	ja     0x41ff40
  41fee4:	cmp    eax,0x79
  41fee7:	jae    0x41f639
  41feed:	cmp    eax,0x6f
  41fef0:	je     0x41f639
  41fef6:	jbe    0x41ff2f
  41fef8:	cmp    eax,0x75
  41fefb:	je     0x41f639
  41ff01:	cmp    eax,0x77
  41ff04:	je     0x41f639
  41ff0a:	cmp    eax,0x73
  41ff0d:	jne    0x41f56c
  41ff13:	jmp    0x41f639
  41ff18:	cmp    eax,0x61
  41ff1b:	je     0x41f639
  41ff21:	cmp    eax,0x63
  41ff24:	jne    0x41f56c
  41ff2a:	jmp    0x41f639
  41ff2f:	sub    eax,0x67
  41ff32:	cmp    eax,0x3
  41ff35:	ja     0x41f56c
  41ff3b:	jmp    0x41f639
  41ff40:	cmp    eax,0x1eb9
  41ff45:	ja     0x41ffa7
  41ff47:	cmp    eax,0x1eb8
  41ff4c:	jae    0x41f639
  41ff52:	sub    eax,0x1ea0
  41ff57:	cmp    eax,0x1
  41ff5a:	ja     0x41f56c
  41ff60:	jmp    0x41f639
  41ff65:	cmp    eax,0x47
  41ff68:	je     0x41f639
  41ff6e:	cmp    eax,0x49
  41ff71:	jne    0x41f56c
  41ff77:	jmp    0x41f639
  41ff7c:	cmp    eax,0x57
  41ff7f:	je     0x41f639
  41ff85:	ja     0x41ffba
  41ff87:	cmp    eax,0x52
  41ff8a:	jb     0x41f56c
  41ff90:	cmp    eax,0x53
  41ff93:	jbe    0x41f639
  41ff99:	cmp    eax,0x55
  41ff9c:	jne    0x41f56c
  41ffa2:	jmp    0x41f639
  41ffa7:	sub    eax,0x1ecc
  41ffac:	cmp    eax,0x1
  41ffaf:	ja     0x41f56c
  41ffb5:	jmp    0x41f639
  41ffba:	cmp    eax,0x59
  41ffbd:	jb     0x41f56c
  41ffc3:	cmp    eax,0x5a
  41ffc6:	jbe    0x41f639
  41ffcc:	cmp    eax,0x61
  41ffcf:	jne    0x41f56c
  41ffd5:	jmp    0x41f639
  41ffda:	cmp    eax,0x75
  41ffdd:	je     0x41f639
  41ffe3:	ja     0x421056
  41ffe9:	cmp    eax,0x70
  41ffec:	ja     0x420078
  41fff2:	cmp    eax,0x6b
  41fff5:	jae    0x41f639
  41fffb:	cmp    eax,0x67
  41fffe:	je     0x41f639
  420004:	cmp    eax,0x69
  420007:	je     0x41f639
  42000d:	cmp    eax,0x65
  420010:	jne    0x41f56c
  420016:	jmp    0x41f639
  42001b:	cmp    eax,0x103
  420020:	ja     0x4210ef
  420026:	cmp    eax,0x102
  42002b:	jae    0x41f639
  420031:	cmp    eax,0xe7
  420036:	ja     0x4210c2
  42003c:	cmp    eax,0xe5
  420041:	jae    0x41f639
  420047:	cmp    eax,0xd5
  42004c:	jbe    0x421083
  420052:	cmp    eax,0xdc
  420057:	je     0x41f639
  42005d:	cmp    eax,0xe2
  420062:	je     0x41f639
  420068:	cmp    eax,0xd8
  42006d:	jne    0x41f56c
  420073:	jmp    0x41f639
  420078:	sub    eax,0x72
  42007b:	cmp    eax,0x1
  42007e:	ja     0x41f56c
  420084:	jmp    0x41f639
  420089:	cmp    eax,0x1f39
  42008e:	ja     0x4201b7
  420094:	cmp    eax,0x1f38
  420099:	jae    0x41f639
  42009f:	cmp    eax,0x43a
  4200a4:	je     0x41f639
  4200aa:	ja     0x42017c
  4200b0:	cmp    eax,0x3bf
  4200b5:	je     0x41f639
  4200bb:	ja     0x42021f
  4200c1:	cmp    eax,0x3b1
  4200c6:	je     0x41f639
  4200cc:	jbe    0x420161
  4200d2:	cmp    eax,0x3b7
  4200d7:	je     0x41f639
  4200dd:	cmp    eax,0x3b9
  4200e2:	je     0x41f639
  4200e8:	cmp    eax,0x3b5
  4200ed:	jne    0x41f56c
  4200f3:	jmp    0x41f639
  4200f8:	cmp    eax,0x415
  4200fd:	je     0x41f639
  420103:	ja     0x420384
  420109:	cmp    eax,0xfc
  42010e:	je     0x41f639
  420114:	ja     0x420336
  42011a:	cmp    eax,0x6f
  42011d:	ja     0x4202af
  420123:	cmp    eax,0x6e
  420126:	jae    0x41f639
  42012c:	cmp    eax,0x55
  42012f:	je     0x41f639
  420135:	jbe    0x42028d
  42013b:	cmp    eax,0x61
  42013e:	je     0x41f639
  420144:	ja     0x420252
  42014a:	cmp    eax,0x57
  42014d:	je     0x41f639
  420153:	cmp    eax,0x59
  420156:	jne    0x41f56c
  42015c:	jmp    0x41f639
  420161:	cmp    eax,0x3a5
  420166:	je     0x41f639
  42016c:	cmp    eax,0x3a9
  420171:	jne    0x41f56c
  420177:	jmp    0x41f639
  42017c:	cmp    eax,0x1f19
  420181:	ja     0x4204ef
  420187:	cmp    eax,0x1f18
  42018c:	jae    0x41f639
  420192:	cmp    eax,0x1f09
  420197:	ja     0x42020c
  420199:	cmp    eax,0x1f08
  42019e:	jae    0x41f639
  4201a4:	sub    eax,0x1f00
  4201a9:	cmp    eax,0x1
  4201ac:	ja     0x41f56c
  4201b2:	jmp    0x41f639
  4201b7:	cmp    eax,0x1f91
  4201bc:	ja     0x420572
  4201c2:	cmp    eax,0x1f90
  4201c7:	jae    0x41f639
  4201cd:	cmp    eax,0x1f61
  4201d2:	ja     0x42054d
  4201d8:	cmp    eax,0x1f60
  4201dd:	jae    0x41f639
  4201e3:	cmp    eax,0x1f49
  4201e8:	ja     0x420514
  4201ee:	cmp    eax,0x1f48
  4201f3:	jae    0x41f639
  4201f9:	sub    eax,0x1f40
  4201fe:	cmp    eax,0x1
  420201:	ja     0x41f56c
  420207:	jmp    0x41f639
  42020c:	sub    eax,0x1f10
  420211:	cmp    eax,0x1
  420214:	ja     0x41f56c
  42021a:	jmp    0x41f639
  42021f:	cmp    eax,0x3d2
  420224:	je     0x41f639
  42022a:	jbe    0x420269
  42022c:	cmp    eax,0x41a
  420231:	je     0x41f639
  420237:	cmp    eax,0x433
  42023c:	je     0x41f639
  420242:	cmp    eax,0x413
  420247:	jne    0x41f56c
  42024d:	jmp    0x41f639
  420252:	cmp    eax,0x65
  420255:	je     0x41f639
  42025b:	cmp    eax,0x69
  42025e:	jne    0x41f56c
  420264:	jmp    0x41f639
  420269:	cmp    eax,0x3c5
  42026e:	je     0x41f639
  420274:	jb     0x41f56c
  42027a:	sub    eax,0x3c9
  42027f:	cmp    eax,0x2
  420282:	ja     0x41f56c
  420288:	jmp    0x41f639
  42028d:	cmp    eax,0x49
  420290:	je     0x41f639
  420296:	ja     0x4202de
  420298:	cmp    eax,0x41
  42029b:	je     0x41f639
  4202a1:	cmp    eax,0x45
  4202a4:	jne    0x41f56c
  4202aa:	jmp    0x41f639
  4202af:	cmp    eax,0xca
  4202b4:	je     0x41f639
  4202ba:	ja     0x42030a
  4202bc:	cmp    eax,0x79
  4202bf:	je     0x41f639
  4202c5:	ja     0x4202ef
  4202c7:	cmp    eax,0x75
  4202ca:	je     0x41f639
  4202d0:	cmp    eax,0x77
  4202d3:	jne    0x41f56c
  4202d9:	jmp    0x41f639
  4202de:	sub    eax,0x4e
  4202e1:	cmp    eax,0x1
  4202e4:	ja     0x41f56c
  4202ea:	jmp    0x41f639
  4202ef:	cmp    eax,0xa8
  4202f4:	je     0x41f639
  4202fa:	cmp    eax,0xc2
  4202ff:	jne    0x41f56c
  420305:	jmp    0x41f639
  42030a:	cmp    eax,0xe2
  42030f:	je     0x41f639
  420315:	ja     0x4203f2
  42031b:	cmp    eax,0xd4
  420320:	je     0x41f639
  420326:	cmp    eax,0xdc
  42032b:	jne    0x41f56c
  420331:	jmp    0x41f639
  420336:	cmp    eax,0x397
  42033b:	je     0x41f639
  420341:	jbe    0x420450
  420347:	cmp    eax,0x3b5
  42034c:	je     0x41f639
  420352:	ja     0x420428
  420358:	cmp    eax,0x3a5
  42035d:	je     0x41f639
  420363:	ja     0x42040d
  420369:	cmp    eax,0x399
  42036e:	je     0x41f639
  420374:	cmp    eax,0x39f
  420379:	jne    0x41f56c
  42037f:	jmp    0x41f639
  420384:	cmp    eax,0x1f51
  420389:	ja     0x420662
  42038f:	cmp    eax,0x1f50
  420394:	jae    0x41f639
  42039a:	cmp    eax,0x1f21
  42039f:	ja     0x420627
  4203a5:	cmp    eax,0x1f20
  4203aa:	jae    0x41f639
  4203b0:	cmp    eax,0x1f09
  4203b5:	ja     0x4207a1
  4203bb:	cmp    eax,0x1f08
  4203c0:	jae    0x41f639
  4203c6:	cmp    eax,0x438
  4203cb:	je     0x41f639
  4203d1:	ja     0x420614
  4203d7:	cmp    eax,0x418
  4203dc:	je     0x41f639
  4203e2:	cmp    eax,0x435
  4203e7:	jne    0x41f56c
  4203ed:	jmp    0x41f639
  4203f2:	cmp    eax,0xea
  4203f7:	je     0x41f639
  4203fd:	cmp    eax,0xf4
  420402:	jne    0x41f56c
  420408:	jmp    0x41f639
  42040d:	cmp    eax,0x3a9
  420412:	je     0x41f639
  420418:	cmp    eax,0x3b1
  42041d:	jne    0x41f56c
  420423:	jmp    0x41f639
  420428:	cmp    eax,0x3bf
  42042d:	je     0x41f639
  420433:	ja     0x42047c
  420435:	cmp    eax,0x3b7
  42043a:	je     0x41f639
  420440:	cmp    eax,0x3b9
  420445:	jne    0x41f56c
  42044b:	jmp    0x41f639
  420450:	cmp    eax,0x14d
  420455:	jbe    0x4204bb
  420457:	cmp    eax,0x1b0
  42045c:	ja     0x4204a0
  42045e:	cmp    eax,0x1af
  420463:	jae    0x41f639
  420469:	sub    eax,0x1a0
  42046e:	cmp    eax,0x1
  420471:	ja     0x41f56c
  420477:	jmp    0x41f639
  42047c:	cmp    eax,0x3c5
  420481:	je     0x41f639
  420487:	jb     0x41f56c
  42048d:	sub    eax,0x3c9
  420492:	cmp    eax,0x2
  420495:	ja     0x41f56c
  42049b:	jmp    0x41f639
  4204a0:	cmp    eax,0x391
  4204a5:	je     0x41f639
  4204ab:	cmp    eax,0x395
  4204b0:	jne    0x41f56c
  4204b6:	jmp    0x41f639
  4204bb:	cmp    eax,0x14c
  4204c0:	jae    0x41f639
  4204c6:	cmp    eax,0x102
  4204cb:	jb     0x41f56c
  4204d1:	cmp    eax,0x103
  4204d6:	jbe    0x41f639
  4204dc:	sub    eax,0x112
  4204e1:	cmp    eax,0x1
  4204e4:	ja     0x41f56c
  4204ea:	jmp    0x41f639
  4204ef:	cmp    eax,0x1f29
  4204f4:	ja     0x42053a
  4204f6:	cmp    eax,0x1f28
  4204fb:	jae    0x41f639
  420501:	sub    eax,0x1f20
  420506:	cmp    eax,0x1
  420509:	ja     0x41f56c
  42050f:	jmp    0x41f639
  420514:	cmp    eax,0x1f50
  420519:	jb     0x41f56c
  42051f:	cmp    eax,0x1f51
  420524:	jbe    0x41f639
  42052a:	cmp    eax,0x1f59
  42052f:	jne    0x41f56c
  420535:	jmp    0x41f639
  42053a:	sub    eax,0x1f30
  42053f:	cmp    eax,0x1
  420542:	ja     0x41f56c
  420548:	jmp    0x41f639
  42054d:	cmp    eax,0x1f81
  420552:	ja     0x4205b2
  420554:	cmp    eax,0x1f80
  420559:	jae    0x41f639
  42055f:	sub    eax,0x1f68
  420564:	cmp    eax,0x1
  420567:	ja     0x41f56c
  42056d:	jmp    0x41f639
  420572:	cmp    eax,0x1fb3
  420577:	je     0x41f639
  42057d:	jbe    0x4205eb
  42057f:	cmp    eax,0x1fcc
  420584:	je     0x41f639
  42058a:	ja     0x4205c5
  42058c:	cmp    eax,0x1fbf
  420591:	je     0x41f639
  420597:	cmp    eax,0x1fc3
  42059c:	je     0x41f639
  4205a2:	cmp    eax,0x1fbc
  4205a7:	jne    0x41f56c
  4205ad:	jmp    0x41f639
  4205b2:	sub    eax,0x1f88
  4205b7:	cmp    eax,0x1
  4205ba:	ja     0x41f56c
  4205c0:	jmp    0x41f639
  4205c5:	cmp    eax,0x1ffc
  4205ca:	je     0x41f639
  4205d0:	cmp    eax,0x1ffe
  4205d5:	je     0x41f639
  4205db:	cmp    eax,0x1ff3
  4205e0:	jne    0x41f56c
  4205e6:	jmp    0x41f639
  4205eb:	cmp    eax,0x1fa1
  4205f0:	ja     0x4207ca
  4205f6:	cmp    eax,0x1fa0
  4205fb:	jae    0x41f639
  420601:	sub    eax,0x1f98
  420606:	cmp    eax,0x1
  420609:	ja     0x41f56c
  42060f:	jmp    0x41f639
  420614:	sub    eax,0x1f00
  420619:	cmp    eax,0x1
  42061c:	ja     0x41f56c
  420622:	jmp    0x41f639
  420627:	cmp    eax,0x1f39
  42062c:	ja     0x4206ad
  42062e:	cmp    eax,0x1f38
  420633:	jae    0x41f639
  420639:	cmp    eax,0x1f28
  42063e:	jb     0x41f56c
  420644:	cmp    eax,0x1f29
  420649:	jbe    0x41f639
  42064f:	sub    eax,0x1f30
  420654:	cmp    eax,0x1
  420657:	ja     0x41f56c
  42065d:	jmp    0x41f639
  420662:	cmp    eax,0x1f99
  420667:	jbe    0x420716
  42066d:	cmp    eax,0x1fbc
  420672:	je     0x41f639
  420678:	jbe    0x4206f1
  42067a:	cmp    eax,0x1fcc
  42067f:	je     0x41f639
  420685:	jbe    0x4206d6
  420687:	cmp    eax,0x1ffc
  42068c:	je     0x41f639
  420692:	cmp    eax,0x1ffe
  420697:	je     0x41f639
  42069d:	cmp    eax,0x1ff3
  4206a2:	jne    0x41f56c
  4206a8:	jmp    0x41f639
  4206ad:	cmp    eax,0x1f40
  4206b2:	jb     0x41f56c
  4206b8:	cmp    eax,0x1f41
  4206bd:	jbe    0x41f639
  4206c3:	sub    eax,0x1f48
  4206c8:	cmp    eax,0x1
  4206cb:	ja     0x41f56c
  4206d1:	jmp    0x41f639
  4206d6:	cmp    eax,0x1fbf
  4206db:	je     0x41f639
  4206e1:	cmp    eax,0x1fc3
  4206e6:	jne    0x41f56c
  4206ec:	jmp    0x41f639
  4206f1:	cmp    eax,0x1fa9
  4206f6:	ja     0x420755
  4206f8:	cmp    eax,0x1fa8
  4206fd:	jae    0x41f639
  420703:	sub    eax,0x1fa0
  420708:	cmp    eax,0x1
  42070b:	ja     0x41f56c
  420711:	jmp    0x41f639
  420716:	cmp    eax,0x1f98
  42071b:	jae    0x41f639
  420721:	cmp    eax,0x1f81
  420726:	ja     0x420778
  420728:	cmp    eax,0x1f80
  42072d:	jae    0x41f639
  420733:	cmp    eax,0x1f61
  420738:	ja     0x420765
  42073a:	cmp    eax,0x1f60
  42073f:	jae    0x41f639
  420745:	cmp    eax,0x1f59
  42074a:	jne    0x41f56c
  420750:	jmp    0x41f639
  420755:	cmp    eax,0x1fb3
  42075a:	jne    0x41f56c
  420760:	jmp    0x41f639
  420765:	sub    eax,0x1f68
  42076a:	cmp    eax,0x1
  42076d:	ja     0x41f56c
  420773:	jmp    0x41f639
  420778:	cmp    eax,0x1f88
  42077d:	jb     0x41f56c
  420783:	cmp    eax,0x1f89
  420788:	jbe    0x41f639
  42078e:	sub    eax,0x1f90
  420793:	cmp    eax,0x1
  420796:	ja     0x41f56c
  42079c:	jmp    0x41f639
  4207a1:	cmp    eax,0x1f10
  4207a6:	jb     0x41f56c
  4207ac:	cmp    eax,0x1f11
  4207b1:	jbe    0x41f639
  4207b7:	sub    eax,0x1f18
  4207bc:	cmp    eax,0x1
  4207bf:	ja     0x41f56c
  4207c5:	jmp    0x41f639
  4207ca:	sub    eax,0x1fa8
  4207cf:	cmp    eax,0x1
  4207d2:	ja     0x41f56c
  4207d8:	jmp    0x41f639
  4207dd:	cmp    eax,0x55
  4207e0:	je     0x41f639
  4207e6:	cmp    eax,0x61
  4207e9:	je     0x41f639
  4207ef:	cmp    eax,0x4f
  4207f2:	jne    0x41f56c
  4207f8:	jmp    0x41f639
  4207fd:	cmp    eax,0x75
  420800:	je     0x41f639
  420806:	ja     0x42088c
  42080c:	cmp    eax,0x69
  42080f:	je     0x41f639
  420815:	cmp    eax,0x6f
  420818:	je     0x41f639
  42081e:	cmp    eax,0x67
  420821:	jne    0x41f56c
  420827:	jmp    0x41f639
  42082c:	cmp    eax,0x430
  420831:	je     0x41f639
  420837:	ja     0x4208cc
  42083d:	cmp    eax,0x410
  420842:	je     0x41f639
  420848:	ja     0x4208ac
  42084a:	cmp    eax,0x3b9
  42084f:	je     0x41f639
  420855:	cmp    eax,0x3c5
  42085a:	je     0x41f639
  420860:	cmp    eax,0x3b1
  420865:	jne    0x41f56c
  42086b:	jmp    0x41f639
  420870:	lea    r8,[rip+0x27fc9]        # 0x448840
  420877:	mov    r9d,ebx
  42087a:	mov    edx,0x4
  42087f:	mov    rcx,r12
  420882:	call   0x412660
  420887:	jmp    0x41f56c
  42088c:	cmp    eax,0x391
  420891:	je     0x41f639
  420897:	ja     0x4208f9
  420899:	sub    eax,0x228
  42089e:	cmp    eax,0x1
  4208a1:	ja     0x41f56c
  4208a7:	jmp    0x41f639
  4208ac:	cmp    eax,0x418
  4208b1:	je     0x41f639
  4208b7:	ja     0x420909
  4208b9:	sub    eax,0x415
  4208be:	cmp    eax,0x1
  4208c1:	ja     0x41f56c
  4208c7:	jmp    0x41f639
  4208cc:	cmp    eax,0x443
  4208d1:	je     0x41f639
  4208d7:	jbe    0x420929
  4208d9:	cmp    eax,0x1fb3
  4208de:	je     0x41f639
  4208e4:	ja     0x420919
  4208e6:	sub    eax,0x1ea0
  4208eb:	cmp    eax,0x1
  4208ee:	ja     0x41f56c
  4208f4:	jmp    0x41f639
  4208f9:	cmp    eax,0x399
  4208fe:	jne    0x41f56c
  420904:	jmp    0x41f639
  420909:	cmp    eax,0x423
  42090e:	jne    0x41f56c
  420914:	jmp    0x41f639
  420919:	cmp    eax,0x1fbc
  42091e:	jne    0x41f56c
  420924:	jmp    0x41f639
  420929:	cmp    eax,0x435
  42092e:	jb     0x41f56c
  420934:	cmp    eax,0x436
  420939:	jbe    0x41f639
  42093f:	cmp    eax,0x438
  420944:	jne    0x41f56c
  42094a:	jmp    0x41f639
  42094f:	cmp    ebx,0x342
  420955:	je     0x420af7
  42095b:	cmp    ebx,0x345
  420961:	jne    0x420870
  420967:	cmp    eax,0x1f0f
  42096c:	ja     0x4209fe
  420972:	cmp    eax,0x1f00
  420977:	jae    0x41f639
  42097d:	cmp    eax,0x3ae
  420982:	je     0x41f639
  420988:	ja     0x4209d2
  42098a:	cmp    eax,0x397
  42098f:	je     0x41f639
  420995:	jbe    0x4209c2
  420997:	cmp    eax,0x3a9
  42099c:	je     0x41f639
  4209a2:	cmp    eax,0x3ac
  4209a7:	jne    0x41f56c
  4209ad:	jmp    0x41f639
  4209b2:	cmp    eax,0x627
  4209b7:	je     0x41f639
  4209bd:	jmp    0x41f56c
  4209c2:	cmp    eax,0x391
  4209c7:	jne    0x41f56c
  4209cd:	jmp    0x41f639
  4209d2:	cmp    eax,0x3b7
  4209d7:	je     0x41f639
  4209dd:	jbe    0x420b53
  4209e3:	cmp    eax,0x3c9
  4209e8:	je     0x41f639
  4209ee:	cmp    eax,0x3ce
  4209f3:	jne    0x41f56c
  4209f9:	jmp    0x41f639
  4209fe:	cmp    eax,0x1f74
  420a03:	je     0x41f639
  420a09:	jbe    0x420cc3
  420a0f:	cmp    eax,0x1fb6
  420a14:	je     0x41f639
  420a1a:	jbe    0x420cb3
  420a20:	cmp    eax,0x1fc6
  420a25:	je     0x41f639
  420a2b:	cmp    eax,0x1ff6
  420a30:	jne    0x41f56c
  420a36:	jmp    0x41f639
  420a3b:	cmp    ebx,0xb56
  420a41:	je     0x420ad7
  420a47:	jbe    0x420ab3
  420a49:	cmp    ebx,0xbbe
  420a4f:	je     0x420aa0
  420a51:	cmp    ebx,0xbd7
  420a57:	je     0x420a85
  420a59:	cmp    ebx,0xb57
  420a5f:	jne    0x420870
  420a65:	cmp    eax,0xb47
  420a6a:	je     0x41f639
  420a70:	jmp    0x41f56c
  420a75:	cmp    eax,0x9c7
  420a7a:	je     0x41f639
  420a80:	jmp    0x41f56c
  420a85:	cmp    eax,0xb92
  420a8a:	je     0x41f639
  420a90:	cmp    eax,0xbc6
  420a95:	jne    0x41f56c
  420a9b:	jmp    0x41f639
  420aa0:	sub    eax,0xbc6
  420aa5:	cmp    eax,0x1
  420aa8:	ja     0x41f56c
  420aae:	jmp    0x41f639
  420ab3:	cmp    ebx,0x9d7
  420ab9:	je     0x420ae7
  420abb:	cmp    ebx,0xb3e
  420ac1:	jne    0x420870
  420ac7:	cmp    eax,0xb47
  420acc:	je     0x41f639
  420ad2:	jmp    0x41f56c
  420ad7:	cmp    eax,0xb47
  420adc:	je     0x41f639
  420ae2:	jmp    0x41f56c
  420ae7:	cmp    eax,0x9c7
  420aec:	je     0x41f639
  420af2:	jmp    0x41f56c
  420af7:	cmp    eax,0x1f59
  420afc:	je     0x41f639
  420b02:	ja     0x420bdb
  420b08:	cmp    eax,0x1f09
  420b0d:	ja     0x420b9c
  420b13:	cmp    eax,0x1f08
  420b18:	jae    0x41f639
  420b1e:	cmp    eax,0x3c5
  420b23:	je     0x41f639
  420b29:	ja     0x420b73
  420b2b:	cmp    eax,0x3b1
  420b30:	je     0x41f639
  420b36:	jbe    0x420b63
  420b38:	cmp    eax,0x3b7
  420b3d:	je     0x41f639
  420b43:	cmp    eax,0x3b9
  420b48:	jne    0x41f56c
  420b4e:	jmp    0x41f639
  420b53:	cmp    eax,0x3b1
  420b58:	jne    0x41f56c
  420b5e:	jmp    0x41f639
  420b63:	cmp    eax,0xa8
  420b68:	jne    0x41f56c
  420b6e:	jmp    0x41f639
  420b73:	cmp    eax,0x3c9
  420b78:	jb     0x41f56c
  420b7e:	cmp    eax,0x3cb
  420b83:	jbe    0x41f639
  420b89:	sub    eax,0x1f00
  420b8e:	cmp    eax,0x1
  420b91:	ja     0x41f56c
  420b97:	jmp    0x41f639
  420b9c:	cmp    eax,0x1f31
  420ba1:	ja     0x420c2c
  420ba7:	cmp    eax,0x1f30
  420bac:	jae    0x41f639
  420bb2:	cmp    eax,0x1f20
  420bb7:	jb     0x41f56c
  420bbd:	cmp    eax,0x1f21
  420bc2:	jbe    0x41f639
  420bc8:	sub    eax,0x1f28
  420bcd:	cmp    eax,0x1
  420bd0:	ja     0x41f56c
  420bd6:	jmp    0x41f639
  420bdb:	cmp    eax,0x1f99
  420be0:	ja     0x420c7e
  420be6:	cmp    eax,0x1f98
  420beb:	jae    0x41f639
  420bf1:	cmp    eax,0x1f81
  420bf6:	ja     0x420c55
  420bf8:	cmp    eax,0x1f80
  420bfd:	jae    0x41f639
  420c03:	cmp    eax,0x1f60
  420c08:	jb     0x41f56c
  420c0e:	cmp    eax,0x1f61
  420c13:	jbe    0x41f639
  420c19:	sub    eax,0x1f68
  420c1e:	cmp    eax,0x1
  420c21:	ja     0x41f56c
  420c27:	jmp    0x41f639
  420c2c:	cmp    eax,0x1f38
  420c31:	jb     0x41f56c
  420c37:	cmp    eax,0x1f39
  420c3c:	jbe    0x41f639
  420c42:	sub    eax,0x1f50
  420c47:	cmp    eax,0x1
  420c4a:	ja     0x41f56c
  420c50:	jmp    0x41f639
  420c55:	cmp    eax,0x1f88
  420c5a:	jb     0x41f56c
  420c60:	cmp    eax,0x1f89
  420c65:	jbe    0x41f639
  420c6b:	sub    eax,0x1f90
  420c70:	cmp    eax,0x1
  420c73:	ja     0x41f56c
  420c79:	jmp    0x41f639
  420c7e:	cmp    eax,0x1fb3
  420c83:	je     0x41f639
  420c89:	jbe    0x420cfc
  420c8b:	cmp    eax,0x1fc3
  420c90:	je     0x41f639
  420c96:	jbe    0x420cec
  420c98:	cmp    eax,0x1ff3
  420c9d:	je     0x41f639
  420ca3:	cmp    eax,0x1ffe
  420ca8:	jne    0x41f56c
  420cae:	jmp    0x41f639
  420cb3:	cmp    eax,0x1f7c
  420cb8:	jne    0x41f56c
  420cbe:	jmp    0x41f639
  420cc3:	cmp    eax,0x1f20
  420cc8:	jb     0x41f56c
  420cce:	cmp    eax,0x1f2f
  420cd3:	jbe    0x41f639
  420cd9:	sub    eax,0x1f60
  420cde:	cmp    eax,0x10
  420ce1:	ja     0x41f56c
  420ce7:	jmp    0x41f639
  420cec:	cmp    eax,0x1fbf
  420cf1:	jne    0x41f56c
  420cf7:	jmp    0x41f639
  420cfc:	cmp    eax,0x1fa0
  420d01:	jb     0x41f56c
  420d07:	cmp    eax,0x1fa1
  420d0c:	jbe    0x41f639
  420d12:	sub    eax,0x1fa8
  420d17:	cmp    eax,0x1
  420d1a:	ja     0x41f56c
  420d20:	jmp    0x41f639
  420d25:	cmp    ebx,0x30a
  420d2b:	je     0x421510
  420d31:	jbe    0x420ffa
  420d37:	cmp    ebx,0x30c
  420d3d:	je     0x420e72
  420d43:	jb     0x420e1c
  420d49:	cmp    ebx,0x30f
  420d4f:	jne    0x420870
  420d55:	cmp    eax,0x61
  420d58:	je     0x41f639
  420d5e:	ja     0x420ded
  420d64:	cmp    eax,0x49
  420d67:	je     0x41f639
  420d6d:	jbe    0x420dd6
  420d6f:	cmp    eax,0x52
  420d72:	je     0x41f639
  420d78:	cmp    eax,0x55
  420d7b:	je     0x41f639
  420d81:	cmp    eax,0x4f
  420d84:	jne    0x41f56c
  420d8a:	jmp    0x41f639
  420d8f:	cmp    eax,0x70
  420d92:	ja     0x420f7c
  420d98:	cmp    eax,0x6d
  420d9b:	jae    0x41f639
  420da1:	cmp    eax,0x54
  420da4:	ja     0x420e4f
  420daa:	cmp    eax,0x52
  420dad:	jae    0x41f639
  420db3:	cmp    eax,0x41
  420db6:	jb     0x41f56c
  420dbc:	cmp    eax,0x49
  420dbf:	jbe    0x41f639
  420dc5:	sub    eax,0x4d
  420dc8:	cmp    eax,0x3
  420dcb:	ja     0x41f56c
  420dd1:	jmp    0x41f639
  420dd6:	cmp    eax,0x41
  420dd9:	je     0x41f639
  420ddf:	cmp    eax,0x45
  420de2:	jne    0x41f56c
  420de8:	jmp    0x41f639
  420ded:	cmp    eax,0x72
  420df0:	je     0x41f639
  420df6:	ja     0x420eac
  420dfc:	cmp    eax,0x69
  420dff:	je     0x41f639
  420e05:	cmp    eax,0x6f
  420e08:	je     0x41f639
  420e0e:	cmp    eax,0x65
  420e11:	jne    0x41f56c
  420e17:	jmp    0x41f639
  420e1c:	cmp    eax,0x6f
  420e1f:	je     0x41f639
  420e25:	jbe    0x420fb1
  420e2b:	cmp    eax,0x423
  420e30:	je     0x41f639
  420e36:	cmp    eax,0x443
  420e3b:	je     0x41f639
  420e41:	cmp    eax,0x75
  420e44:	jne    0x41f56c
  420e4a:	jmp    0x41f639
  420e4f:	cmp    eax,0x57
  420e52:	jb     0x41f56c
  420e58:	cmp    eax,0x5a
  420e5b:	jbe    0x41f639
  420e61:	sub    eax,0x61
  420e64:	cmp    eax,0x7
  420e67:	ja     0x41f56c
  420e6d:	jmp    0x41f639
  420e72:	cmp    eax,0x61
  420e75:	je     0x41f639
  420e7b:	jbe    0x420f11
  420e81:	cmp    eax,0x75
  420e84:	jbe    0x420ee9
  420e86:	cmp    eax,0xfc
  420e8b:	je     0x41f639
  420e91:	ja     0x420ece
  420e93:	cmp    eax,0x7a
  420e96:	je     0x41f639
  420e9c:	cmp    eax,0xdc
  420ea1:	jne    0x41f56c
  420ea7:	jmp    0x41f639
  420eac:	cmp    eax,0x75
  420eaf:	je     0x41f639
  420eb5:	jb     0x41f56c
  420ebb:	sub    eax,0x474
  420ec0:	cmp    eax,0x1
  420ec3:	ja     0x41f56c
  420ec9:	jmp    0x41f639
  420ece:	cmp    eax,0x1b7
  420ed3:	je     0x41f639
  420ed9:	cmp    eax,0x292
  420ede:	jne    0x41f56c
  420ee4:	jmp    0x41f639
  420ee9:	cmp    eax,0x72
  420eec:	jae    0x41f639
  420ef2:	cmp    eax,0x6c
  420ef5:	ja     0x420f3b
  420ef7:	cmp    eax,0x67
  420efa:	jae    0x41f639
  420f00:	sub    eax,0x63
  420f03:	cmp    eax,0x2
  420f06:	ja     0x41f56c
  420f0c:	jmp    0x41f639
  420f11:	cmp    eax,0x4c
  420f14:	ja     0x420f5d
  420f16:	cmp    eax,0x4b
  420f19:	jae    0x41f639
  420f1f:	cmp    eax,0x45
  420f22:	ja     0x420f4c
  420f24:	cmp    eax,0x43
  420f27:	jae    0x41f639
  420f2d:	cmp    eax,0x41
  420f30:	jne    0x41f56c
  420f36:	jmp    0x41f639
  420f3b:	sub    eax,0x6e
  420f3e:	cmp    eax,0x1
  420f41:	ja     0x41f56c
  420f47:	jmp    0x41f639
  420f4c:	sub    eax,0x47
  420f4f:	cmp    eax,0x2
  420f52:	ja     0x41f56c
  420f58:	jmp    0x41f639
  420f5d:	cmp    eax,0x55
  420f60:	ja     0x420fc8
  420f62:	cmp    eax,0x52
  420f65:	jae    0x41f639
  420f6b:	sub    eax,0x4e
  420f6e:	cmp    eax,0x1
  420f71:	ja     0x41f56c
  420f77:	jmp    0x41f639
  420f7c:	cmp    eax,0x15b
  420f81:	ja     0x420fd6
  420f83:	cmp    eax,0x15a
  420f88:	jae    0x41f639
  420f8e:	cmp    eax,0x72
  420f91:	jb     0x41f56c
  420f97:	cmp    eax,0x74
  420f9a:	jbe    0x41f639
  420fa0:	sub    eax,0x77
  420fa3:	cmp    eax,0x3
  420fa6:	ja     0x41f56c
  420fac:	jmp    0x41f639
  420fb1:	cmp    eax,0x4f
  420fb4:	je     0x41f639
  420fba:	cmp    eax,0x55
  420fbd:	jne    0x41f56c
  420fc3:	jmp    0x41f639
  420fc8:	cmp    eax,0x5a
  420fcb:	jne    0x41f56c
  420fd1:	jmp    0x41f639
  420fd6:	cmp    eax,0x17f
  420fdb:	je     0x41f639
  420fe1:	ja     0x421b27
  420fe7:	sub    eax,0x160
  420fec:	cmp    eax,0x1
  420fef:	ja     0x41f56c
  420ff5:	jmp    0x41f639
  420ffa:	cmp    ebx,0x308
  421000:	je     0x421290
  421006:	cmp    ebx,0x309
  42100c:	jne    0x420870
  421012:	cmp    eax,0x79
  421015:	je     0x41f639
  42101b:	ja     0x421257
  421021:	cmp    eax,0x59
  421024:	je     0x41f639
  42102a:	ja     0x4219fb
  421030:	cmp    eax,0x49
  421033:	je     0x41f639
  421039:	ja     0x421240
  42103f:	cmp    eax,0x41
  421042:	je     0x41f639
  421048:	cmp    eax,0x45
  42104b:	jne    0x41f56c
  421051:	jmp    0x41f639
  421056:	cmp    eax,0xa8
  42105b:	je     0x41f639
  421061:	ja     0x42109e
  421063:	cmp    eax,0x77
  421066:	je     0x41f639
  42106c:	jb     0x41f56c
  421072:	sub    eax,0x79
  421075:	cmp    eax,0x1
  421078:	ja     0x41f56c
  42107e:	jmp    0x41f639
  421083:	cmp    eax,0xd4
  421088:	jae    0x41f639
  42108e:	cmp    eax,0xcf
  421093:	jne    0x41f56c
  421099:	jmp    0x41f639
  42109e:	cmp    eax,0xc2
  4210a3:	je     0x41f639
  4210a9:	jb     0x41f56c
  4210af:	sub    eax,0xc5
  4210b4:	cmp    eax,0x2
  4210b7:	ja     0x41f56c
  4210bd:	jmp    0x41f639
  4210c2:	cmp    eax,0xf5
  4210c7:	ja     0x421126
  4210c9:	cmp    eax,0xf4
  4210ce:	jae    0x41f639
  4210d4:	cmp    eax,0xea
  4210d9:	je     0x41f639
  4210df:	cmp    eax,0xef
  4210e4:	jne    0x41f56c
  4210ea:	jmp    0x41f639
  4210ef:	cmp    eax,0x1a1
  4210f4:	ja     0x421154
  4210f6:	cmp    eax,0x1a0
  4210fb:	jae    0x41f639
  421101:	cmp    eax,0x14d
  421106:	ja     0x421141
  421108:	cmp    eax,0x14c
  42110d:	jae    0x41f639
  421113:	sub    eax,0x112
  421118:	cmp    eax,0x1
  42111b:	ja     0x41f56c
  421121:	jmp    0x41f639
  421126:	cmp    eax,0xf8
  42112b:	je     0x41f639
  421131:	cmp    eax,0xfc
  421136:	jne    0x41f56c
  42113c:	jmp    0x41f639
  421141:	sub    eax,0x168
  421146:	cmp    eax,0x1
  421149:	ja     0x41f56c
  42114f:	jmp    0x41f639
  421154:	cmp    eax,0x391
  421159:	je     0x41f639
  42115f:	jbe    0x421b4d
  421165:	cmp    eax,0x397
  42116a:	je     0x41f639
  421170:	cmp    eax,0x399
  421175:	je     0x41f639
  42117b:	cmp    eax,0x395
  421180:	jne    0x41f56c
  421186:	jmp    0x41f639
  42118b:	cmp    ebx,0x326
  421191:	je     0x421ef1
  421197:	ja     0x421dfe
  42119d:	cmp    ebx,0x31b
  4211a3:	je     0x421beb
  4211a9:	jbe    0x421b89
  4211af:	cmp    ebx,0x324
  4211b5:	je     0x42197c
  4211bb:	ja     0x421937
  4211c1:	cmp    ebx,0x323
  4211c7:	jne    0x420870
  4211cd:	cmp    eax,0x17e
  4211d2:	ja     0x42158a
  4211d8:	cmp    eax,0x174
  4211dd:	jae    0x41f639
  4211e3:	cmp    eax,0xf6
  4211e8:	ja     0x421535
  4211ee:	cmp    eax,0xf1
  4211f3:	jae    0x41f639
  4211f9:	cmp    eax,0x69
  4211fc:	ja     0x421a64
  421202:	cmp    eax,0x68
  421205:	jae    0x41f639
  42120b:	cmp    eax,0x4f
  42120e:	ja     0x421a45
  421214:	cmp    eax,0x4b
  421217:	jae    0x41f639
  42121d:	cmp    eax,0x45
  421220:	ja     0x421a1d
  421226:	cmp    eax,0x44
  421229:	jae    0x41f639
  42122f:	sub    eax,0x41
  421232:	cmp    eax,0x1
  421235:	ja     0x41f56c
  42123b:	jmp    0x41f639
  421240:	cmp    eax,0x4f
  421243:	je     0x41f639
  421249:	cmp    eax,0x55
  42124c:	jne    0x41f56c
  421252:	jmp    0x41f639
  421257:	cmp    eax,0xf4
  42125c:	je     0x41f639
  421262:	ja     0x4212f9
  421268:	cmp    eax,0xd4
  42126d:	je     0x41f639
  421273:	ja     0x4212de
  421275:	cmp    eax,0xc2
  42127a:	je     0x41f639
  421280:	cmp    eax,0xca
  421285:	jne    0x41f56c
  42128b:	jmp    0x41f639
  421290:	cmp    eax,0x3b9
  421295:	je     0x41f639
  42129b:	ja     0x42136c
  4212a1:	cmp    eax,0x69
  4212a4:	ja     0x421339
  4212aa:	cmp    eax,0x68
  4212ad:	jae    0x41f639
  4212b3:	cmp    eax,0x4f
  4212b6:	je     0x41f639
  4212bc:	jbe    0x4213da
  4212c2:	cmp    eax,0x59
  4212c5:	ja     0x421322
  4212c7:	cmp    eax,0x57
  4212ca:	jae    0x41f639
  4212d0:	cmp    eax,0x55
  4212d3:	jne    0x41f56c
  4212d9:	jmp    0x41f639
  4212de:	cmp    eax,0xe2
  4212e3:	je     0x41f639
  4212e9:	cmp    eax,0xea
  4212ee:	jne    0x41f56c
  4212f4:	jmp    0x41f639
  4212f9:	cmp    eax,0x1a1
  4212fe:	ja     0x4213f3
  421304:	cmp    eax,0x1a0
  421309:	jae    0x41f639
  42130f:	sub    eax,0x102
  421314:	cmp    eax,0x1
  421317:	ja     0x41f56c
  42131d:	jmp    0x41f639
  421322:	cmp    eax,0x61
  421325:	je     0x41f639
  42132b:	cmp    eax,0x65
  42132e:	jne    0x41f56c
  421334:	jmp    0x41f639
  421339:	cmp    eax,0xd5
  42133e:	je     0x41f639
  421344:	jbe    0x421417
  42134a:	cmp    eax,0x16b
  42134f:	ja     0x4213bf
  421351:	cmp    eax,0x16a
  421356:	jae    0x41f639
  42135c:	cmp    eax,0xf5
  421361:	jne    0x41f56c
  421367:	jmp    0x41f639
  42136c:	cmp    eax,0x430
  421371:	je     0x41f639
  421377:	ja     0x42147c
  42137d:	cmp    eax,0x418
  421382:	ja     0x421454
  421388:	cmp    eax,0x415
  42138d:	jae    0x41f639
  421393:	cmp    eax,0x3d2
  421398:	je     0x41f639
  42139e:	jbe    0x421433
  4213a4:	cmp    eax,0x406
  4213a9:	je     0x41f639
  4213af:	cmp    eax,0x410
  4213b4:	jne    0x41f56c
  4213ba:	jmp    0x41f639
  4213bf:	cmp    eax,0x399
  4213c4:	je     0x41f639
  4213ca:	cmp    eax,0x3a5
  4213cf:	jne    0x41f56c
  4213d5:	jmp    0x41f639
  4213da:	cmp    eax,0x45
  4213dd:	je     0x41f639
  4213e3:	ja     0x421406
  4213e5:	cmp    eax,0x41
  4213e8:	jne    0x41f56c
  4213ee:	jmp    0x41f639
  4213f3:	sub    eax,0x1af
  4213f8:	cmp    eax,0x1
  4213fb:	ja     0x41f56c
  421401:	jmp    0x41f639
  421406:	sub    eax,0x48
  421409:	cmp    eax,0x1
  42140c:	ja     0x41f56c
  421412:	jmp    0x41f639
  421417:	cmp    eax,0x75
  42141a:	ja     0x421443
  42141c:	cmp    eax,0x74
  42141f:	jae    0x41f639
  421425:	cmp    eax,0x6f
  421428:	jne    0x41f56c
  42142e:	jmp    0x41f639
  421433:	cmp    eax,0x3c5
  421438:	jne    0x41f56c
  42143e:	jmp    0x41f639
  421443:	sub    eax,0x77
  421446:	cmp    eax,0x2
  421449:	ja     0x41f56c
  42144f:	jmp    0x41f639
  421454:	cmp    eax,0x427
  421459:	je     0x41f639
  42145f:	ja     0x4214b1
  421461:	cmp    eax,0x41e
  421466:	je     0x41f639
  42146c:	cmp    eax,0x423
  421471:	jne    0x41f56c
  421477:	jmp    0x41f639
  42147c:	cmp    eax,0x44b
  421481:	je     0x41f639
  421487:	ja     0x4214df
  421489:	cmp    eax,0x43e
  42148e:	je     0x41f639
  421494:	jbe    0x4214cc
  421496:	cmp    eax,0x443
  42149b:	je     0x41f639
  4214a1:	cmp    eax,0x447
  4214a6:	jne    0x41f56c
  4214ac:	jmp    0x41f639
  4214b1:	cmp    eax,0x42b
  4214b6:	je     0x41f639
  4214bc:	cmp    eax,0x42d
  4214c1:	jne    0x41f56c
  4214c7:	jmp    0x41f639
  4214cc:	sub    eax,0x435
  4214d1:	cmp    eax,0x3
  4214d4:	ja     0x41f56c
  4214da:	jmp    0x41f639
  4214df:	cmp    eax,0x4d9
  4214e4:	ja     0x421b3a
  4214ea:	cmp    eax,0x4d8
  4214ef:	jae    0x41f639
  4214f5:	cmp    eax,0x44d
  4214fa:	je     0x41f639
  421500:	cmp    eax,0x456
  421505:	jne    0x41f56c
  42150b:	jmp    0x41f639
  421510:	sub    eax,0x41
  421513:	cmp    eax,0x38
  421516:	ja     0x41f56c
  42151c:	movabs rdx,0x150000100100001
  421526:	bt     rdx,rax
  42152a:	jae    0x41f56c
  421530:	jmp    0x41f639
  421535:	cmp    eax,0x13e
  42153a:	ja     0x4218a0
  421540:	cmp    eax,0x13d
  421545:	jae    0x41f639
  42154b:	cmp    eax,0x11b
  421550:	ja     0x42187b
  421556:	cmp    eax,0x11a
  42155b:	jae    0x41f639
  421561:	cmp    eax,0x103
  421566:	ja     0x4215ed
  42156c:	cmp    eax,0xff
  421571:	jae    0x41f639
  421577:	sub    eax,0xf9
  42157c:	cmp    eax,0x4
  42157f:	ja     0x41f56c
  421585:	jmp    0x41f639
  42158a:	cmp    eax,0x1e45
  42158f:	ja     0x421691
  421595:	cmp    eax,0x1e44
  42159a:	jae    0x41f639
  4215a0:	cmp    eax,0x227
  4215a5:	ja     0x421652
  4215ab:	cmp    eax,0x226
  4215b0:	jae    0x41f639
  4215b6:	cmp    eax,0x1e1
  4215bb:	ja     0x421629
  4215bd:	cmp    eax,0x1de
  4215c2:	jae    0x41f639
  4215c8:	cmp    eax,0x1b0
  4215cd:	ja     0x421616
  4215cf:	cmp    eax,0x1af
  4215d4:	jae    0x41f639
  4215da:	sub    eax,0x1a0
  4215df:	cmp    eax,0x1
  4215e2:	ja     0x41f56c
  4215e8:	jmp    0x41f639
  4215ed:	cmp    eax,0x10e
  4215f2:	jb     0x41f56c
  4215f8:	cmp    eax,0x10f
  4215fd:	jbe    0x41f639
  421603:	sub    eax,0x112
  421608:	cmp    eax,0x5
  42160b:	ja     0x41f56c
  421611:	jmp    0x41f639
  421616:	sub    eax,0x1cd
  42161b:	cmp    eax,0xf
  42161e:	ja     0x41f56c
  421624:	jmp    0x41f639
  421629:	cmp    eax,0x1fb
  42162e:	ja     0x4216de
  421634:	cmp    eax,0x1f8
  421639:	jae    0x41f639
  42163f:	sub    eax,0x1e8
  421644:	cmp    eax,0x1
  421647:	ja     0x41f56c
  42164d:	jmp    0x41f639
  421652:	cmp    eax,0x1e17
  421657:	ja     0x421804
  42165d:	cmp    eax,0x1e14
  421662:	jae    0x41f639
  421668:	cmp    eax,0x1e03
  42166d:	ja     0x4217f1
  421673:	cmp    eax,0x1e02
  421678:	jae    0x41f639
  42167e:	sub    eax,0x22a
  421683:	cmp    eax,0x9
  421686:	ja     0x41f56c
  42168c:	jmp    0x41f639
  421691:	cmp    eax,0x1e99
  421696:	ja     0x42173f
  42169c:	cmp    eax,0x1e97
  4216a1:	jae    0x41f639
  4216a7:	cmp    eax,0x1e67
  4216ac:	ja     0x42171a
  4216ae:	cmp    eax,0x1e64
  4216b3:	jae    0x41f639
  4216b9:	cmp    eax,0x1e59
  4216be:	ja     0x421707
  4216c0:	cmp    eax,0x1e58
  4216c5:	jae    0x41f639
  4216cb:	sub    eax,0x1e4c
  4216d0:	cmp    eax,0x7
  4216d3:	ja     0x41f56c
  4216d9:	jmp    0x41f639
  4216de:	cmp    eax,0x200
  4216e3:	jb     0x41f56c
  4216e9:	cmp    eax,0x217
  4216ee:	jbe    0x41f639
  4216f4:	sub    eax,0x21e
  4216f9:	cmp    eax,0x1
  4216fc:	ja     0x41f56c
  421702:	jmp    0x41f639
  421707:	sub    eax,0x1e60
  42170c:	cmp    eax,0x1
  42170f:	ja     0x41f56c
  421715:	jmp    0x41f639
  42171a:	cmp    eax,0x1e7d
  42171f:	ja     0x42177a
  421721:	cmp    eax,0x1e78
  421726:	jae    0x41f639
  42172c:	sub    eax,0x1e6a
  421731:	cmp    eax,0x1
  421734:	ja     0x41f56c
  42173a:	jmp    0x41f639
  42173f:	cmp    eax,0x1ed7
  421744:	ja     0x4217cc
  42174a:	cmp    eax,0x1ece
  42174f:	jae    0x41f639
  421755:	cmp    eax,0x1eb5
  42175a:	ja     0x4217a3
  42175c:	cmp    eax,0x1eae
  421761:	jae    0x41f639
  421767:	sub    eax,0x1ea2
  42176c:	cmp    eax,0x9
  42176f:	ja     0x41f56c
  421775:	jmp    0x41f639
  42177a:	cmp    eax,0x1e80
  42177f:	jb     0x41f56c
  421785:	cmp    eax,0x1e87
  42178a:	jbe    0x41f639
  421790:	sub    eax,0x1e8e
  421795:	cmp    eax,0x3
  421798:	ja     0x41f56c
  42179e:	jmp    0x41f639
  4217a3:	cmp    eax,0x1eba
  4217a8:	jb     0x41f56c
  4217ae:	cmp    eax,0x1ec5
  4217b3:	jbe    0x41f639
  4217b9:	sub    eax,0x1ec8
  4217be:	cmp    eax,0x1
  4217c1:	ja     0x41f56c
  4217c7:	jmp    0x41f639
  4217cc:	cmp    eax,0x1eef
  4217d1:	ja     0x421829
  4217d3:	cmp    eax,0x1ee6
  4217d8:	jae    0x41f639
  4217de:	sub    eax,0x1eda
  4217e3:	cmp    eax,0x7
  4217e6:	ja     0x41f56c
  4217ec:	jmp    0x41f639
  4217f1:	sub    eax,0x1e0a
  4217f6:	cmp    eax,0x1
  4217f9:	ja     0x41f56c
  4217ff:	jmp    0x41f639
  421804:	cmp    eax,0x1e27
  421809:	ja     0x421852
  42180b:	cmp    eax,0x1e26
  421810:	jae    0x41f639
  421816:	sub    eax,0x1e22
  42181b:	cmp    eax,0x1
  42181e:	ja     0x41f56c
  421824:	jmp    0x41f639
  421829:	cmp    eax,0x1ef2
  42182e:	jb     0x41f56c
  421834:	cmp    eax,0x1ef3
  421839:	jbe    0x41f639
  42183f:	sub    eax,0x1ef6
  421844:	cmp    eax,0x3
  421847:	ja     0x41f56c
  42184d:	jmp    0x41f639
  421852:	cmp    eax,0x1e2e
  421857:	jb     0x41f56c
  42185d:	cmp    eax,0x1e31
  421862:	jbe    0x41f639
  421868:	sub    eax,0x1e3e
  42186d:	cmp    eax,0x3
  421870:	ja     0x41f56c
  421876:	jmp    0x41f639
  42187b:	cmp    eax,0x12d
  421880:	ja     0x4218d7
  421882:	cmp    eax,0x128
  421887:	jae    0x41f639
  42188d:	sub    eax,0x124
  421892:	cmp    eax,0x1
  421895:	ja     0x41f56c
  42189b:	jmp    0x41f639
  4218a0:	cmp    eax,0x155
  4218a5:	ja     0x42190e
  4218a7:	cmp    eax,0x154
  4218ac:	jae    0x41f639
  4218b2:	cmp    eax,0x148
  4218b7:	ja     0x4218fb
  4218b9:	cmp    eax,0x147
  4218be:	jae    0x41f639
  4218c4:	sub    eax,0x143
  4218c9:	cmp    eax,0x1
  4218cc:	ja     0x41f56c
  4218d2:	jmp    0x41f639
  4218d7:	cmp    eax,0x130
  4218dc:	je     0x41f639
  4218e2:	jb     0x41f56c
  4218e8:	sub    eax,0x139
  4218ed:	cmp    eax,0x1
  4218f0:	ja     0x41f56c
  4218f6:	jmp    0x41f639
  4218fb:	sub    eax,0x14c
  421900:	cmp    eax,0x5
  421903:	ja     0x41f56c
  421909:	jmp    0x41f639
  42190e:	cmp    eax,0x161
  421913:	ja     0x4219bf
  421919:	cmp    eax,0x160
  42191e:	jae    0x41f639
  421924:	sub    eax,0x158
  421929:	cmp    eax,0x5
  42192c:	ja     0x41f56c
  421932:	jmp    0x41f639
  421937:	cmp    eax,0x1e1
  42193c:	ja     0x421dbf
  421942:	cmp    eax,0x1de
  421947:	jae    0x41f639
  42194d:	cmp    eax,0xe5
  421952:	ja     0x421d96
  421958:	cmp    eax,0xe0
  42195d:	jae    0x41f639
  421963:	cmp    eax,0x61
  421966:	je     0x41f639
  42196c:	ja     0x4219e8
  42196e:	cmp    eax,0x41
  421971:	jne    0x41f56c
  421977:	jmp    0x41f639
  42197c:	cmp    eax,0x171
  421981:	ja     0x421e7a
  421987:	cmp    eax,0x168
  42198c:	jae    0x41f639
  421992:	cmp    eax,0xdc
  421997:	ja     0x421e67
  42199d:	cmp    eax,0xd9
  4219a2:	jae    0x41f639
  4219a8:	cmp    eax,0x55
  4219ab:	je     0x41f639
  4219b1:	cmp    eax,0x75
  4219b4:	jne    0x41f56c
  4219ba:	jmp    0x41f639
  4219bf:	cmp    eax,0x164
  4219c4:	jb     0x41f56c
  4219ca:	cmp    eax,0x165
  4219cf:	jbe    0x41f639
  4219d5:	sub    eax,0x168
  4219da:	cmp    eax,0x9
  4219dd:	ja     0x41f56c
  4219e3:	jmp    0x41f639
  4219e8:	sub    eax,0xc0
  4219ed:	cmp    eax,0x5
  4219f0:	ja     0x41f56c
  4219f6:	jmp    0x41f639
  4219fb:	cmp    eax,0x69
  4219fe:	je     0x41f639
  421a04:	ja     0x421a2e
  421a06:	cmp    eax,0x61
  421a09:	je     0x41f639
  421a0f:	cmp    eax,0x65
  421a12:	jne    0x41f56c
  421a18:	jmp    0x41f639
  421a1d:	sub    eax,0x48
  421a20:	cmp    eax,0x1
  421a23:	ja     0x41f56c
  421a29:	jmp    0x41f639
  421a2e:	cmp    eax,0x6f
  421a31:	je     0x41f639
  421a37:	cmp    eax,0x75
  421a3a:	jne    0x41f56c
  421a40:	jmp    0x41f639
  421a45:	cmp    eax,0x5a
  421a48:	ja     0x421a95
  421a4a:	cmp    eax,0x59
  421a4d:	jae    0x41f639
  421a53:	sub    eax,0x52
  421a56:	cmp    eax,0x5
  421a59:	ja     0x41f56c
  421a5f:	jmp    0x41f639
  421a64:	cmp    eax,0xcf
  421a69:	ja     0x421add
  421a6b:	cmp    eax,0xc8
  421a70:	jae    0x41f639
  421a76:	cmp    eax,0x77
  421a79:	ja     0x421ab8
  421a7b:	cmp    eax,0x72
  421a7e:	jae    0x41f639
  421a84:	sub    eax,0x6b
  421a87:	cmp    eax,0x4
  421a8a:	ja     0x41f56c
  421a90:	jmp    0x41f639
  421a95:	cmp    eax,0x61
  421a98:	jb     0x41f56c
  421a9e:	cmp    eax,0x62
  421aa1:	jbe    0x41f639
  421aa7:	sub    eax,0x64
  421aaa:	cmp    eax,0x1
  421aad:	ja     0x41f56c
  421ab3:	jmp    0x41f639
  421ab8:	cmp    eax,0x79
  421abb:	jb     0x41f56c
  421ac1:	cmp    eax,0x7a
  421ac4:	jbe    0x41f639
  421aca:	sub    eax,0xc0
  421acf:	cmp    eax,0x5
  421ad2:	ja     0x41f56c
  421ad8:	jmp    0x41f639
  421add:	cmp    eax,0xdd
  421ae2:	ja     0x421b60
  421ae4:	cmp    eax,0xd9
  421ae9:	jae    0x41f639
  421aef:	sub    eax,0xd1
  421af4:	cmp    eax,0x5
  421af7:	ja     0x41f56c
  421afd:	jmp    0x41f639
  421b02:	sub    eax,0x41
  421b05:	cmp    eax,0x34
  421b08:	ja     0x41f56c
  421b0e:	movabs rdx,0x12411100124111
  421b18:	bt     rdx,rax
  421b1c:	jae    0x41f56c
  421b22:	jmp    0x41f639
  421b27:	sub    eax,0x1e62
  421b2c:	cmp    eax,0x1
  421b2f:	ja     0x41f56c
  421b35:	jmp    0x41f639
  421b3a:	sub    eax,0x4e8
  421b3f:	cmp    eax,0x1
  421b42:	ja     0x41f56c
  421b48:	jmp    0x41f639
  421b4d:	sub    eax,0x1af
  421b52:	cmp    eax,0x1
  421b55:	ja     0x41f56c
  421b5b:	jmp    0x41f639
  421b60:	cmp    eax,0xe0
  421b65:	jb     0x41f56c
  421b6b:	cmp    eax,0xe5
  421b70:	jbe    0x41f639
  421b76:	sub    eax,0xe8
  421b7b:	cmp    eax,0x7
  421b7e:	ja     0x41f56c
  421b84:	jmp    0x41f639
  421b89:	cmp    ebx,0x313
  421b8f:	je     0x421ea3
  421b95:	cmp    ebx,0x314
  421b9b:	jne    0x420870
  421ba1:	cmp    eax,0x3b7
  421ba6:	je     0x41f639
  421bac:	ja     0x421d59
  421bb2:	cmp    eax,0x39f
  421bb7:	je     0x41f639
  421bbd:	ja     0x421c49
  421bc3:	cmp    eax,0x395
  421bc8:	je     0x41f639
  421bce:	jbe    0x421c39
  421bd0:	cmp    eax,0x397
  421bd5:	je     0x41f639
  421bdb:	cmp    eax,0x399
  421be0:	jne    0x41f56c
  421be6:	jmp    0x41f639
  421beb:	cmp    eax,0x171
  421bf0:	ja     0x421cd3
  421bf6:	cmp    eax,0x168
  421bfb:	jae    0x41f639
  421c01:	cmp    eax,0xdc
  421c06:	ja     0x421cae
  421c0c:	cmp    eax,0xd9
  421c11:	jae    0x41f639
  421c17:	cmp    eax,0x6f
  421c1a:	je     0x41f639
  421c20:	ja     0x421c71
  421c22:	cmp    eax,0x4f
  421c25:	je     0x41f639
  421c2b:	cmp    eax,0x55
  421c2e:	jne    0x41f56c
  421c34:	jmp    0x41f639
  421c39:	cmp    eax,0x391
  421c3e:	jne    0x41f56c
  421c44:	jmp    0x41f639
  421c49:	cmp    eax,0x3a9
  421c4e:	je     0x41f639
  421c54:	ja     0x421c93
  421c56:	cmp    eax,0x3a1
  421c5b:	je     0x41f639
  421c61:	cmp    eax,0x3a5
  421c66:	jne    0x41f56c
  421c6c:	jmp    0x41f639
  421c71:	cmp    eax,0x75
  421c74:	je     0x41f639
  421c7a:	jb     0x41f56c
  421c80:	sub    eax,0xd2
  421c85:	cmp    eax,0x4
  421c88:	ja     0x41f56c
  421c8e:	jmp    0x41f639
  421c93:	cmp    eax,0x3b1
  421c98:	je     0x41f639
  421c9e:	cmp    eax,0x3b5
  421ca3:	jne    0x41f56c
  421ca9:	jmp    0x41f639
  421cae:	cmp    eax,0xfc
  421cb3:	ja     0x421d0a
  421cb5:	cmp    eax,0xf9
  421cba:	jae    0x41f639
  421cc0:	sub    eax,0xf2
  421cc5:	cmp    eax,0x4
  421cc8:	ja     0x41f56c
  421cce:	jmp    0x41f639
  421cd3:	cmp    eax,0x231
  421cd8:	ja     0x421d30
  421cda:	cmp    eax,0x22a
  421cdf:	jae    0x41f639
  421ce5:	cmp    eax,0x20f
  421cea:	ja     0x421d1d
  421cec:	cmp    eax,0x20c
  421cf1:	jae    0x41f639
  421cf7:	sub    eax,0x1d1
  421cfc:	cmp    eax,0xb
  421cff:	ja     0x41f56c
  421d05:	jmp    0x41f639
  421d0a:	sub    eax,0x14c
  421d0f:	cmp    eax,0x5
  421d12:	ja     0x41f56c
  421d18:	jmp    0x41f639
  421d1d:	sub    eax,0x214
  421d22:	cmp    eax,0x3
  421d25:	ja     0x41f56c
  421d2b:	jmp    0x41f639
  421d30:	cmp    eax,0x1e7b
  421d35:	ja     0x421f26
  421d3b:	cmp    eax,0x1e72
  421d40:	jae    0x41f639
  421d46:	sub    eax,0x1e4c
  421d4b:	cmp    eax,0x7
  421d4e:	ja     0x41f56c
  421d54:	jmp    0x41f639
  421d59:	cmp    eax,0x1fb3
  421d5e:	je     0x41f639
  421d64:	ja     0x422104
  421d6a:	cmp    eax,0x3c1
  421d6f:	je     0x41f639
  421d75:	ja     0x4220e9
  421d7b:	cmp    eax,0x3b9
  421d80:	je     0x41f639
  421d86:	cmp    eax,0x3bf
  421d8b:	jne    0x41f56c
  421d91:	jmp    0x41f639
  421d96:	cmp    eax,0x100
  421d9b:	jb     0x41f56c
  421da1:	cmp    eax,0x103
  421da6:	jbe    0x41f639
  421dac:	sub    eax,0x1cd
  421db1:	cmp    eax,0x1
  421db4:	ja     0x41f56c
  421dba:	jmp    0x41f639
  421dbf:	cmp    eax,0x227
  421dc4:	ja     0x421fca
  421dca:	cmp    eax,0x226
  421dcf:	jae    0x41f639
  421dd5:	cmp    eax,0x1fa
  421dda:	jb     0x41f56c
  421de0:	cmp    eax,0x1fb
  421de5:	jbe    0x41f639
  421deb:	sub    eax,0x200
  421df0:	cmp    eax,0x3
  421df3:	ja     0x41f56c
  421df9:	jmp    0x41f639
  421dfe:	cmp    ebx,0x32d
  421e04:	je     0x4223ca
  421e0a:	jbe    0x42234d
  421e10:	cmp    ebx,0x330
  421e16:	je     0x4221dc
  421e1c:	cmp    ebx,0x331
  421e22:	je     0x422183
  421e28:	cmp    ebx,0x32e
  421e2e:	jne    0x420870
  421e34:	cmp    eax,0x21f
  421e39:	ja     0x42213f
  421e3f:	cmp    eax,0x21e
  421e44:	jae    0x41f639
  421e4a:	cmp    eax,0x68
  421e4d:	je     0x41f639
  421e53:	ja     0x42212c
  421e59:	cmp    eax,0x48
  421e5c:	jne    0x41f56c
  421e62:	jmp    0x41f639
  421e67:	sub    eax,0xf9
  421e6c:	cmp    eax,0x3
  421e6f:	ja     0x41f56c
  421e75:	jmp    0x41f639
  421e7a:	cmp    eax,0x217
  421e7f:	ja     0x421f4f
  421e85:	cmp    eax,0x214
  421e8a:	jae    0x41f639
  421e90:	sub    eax,0x1d3
  421e95:	cmp    eax,0x9
  421e98:	ja     0x41f56c
  421e9e:	jmp    0x41f639
  421ea3:	cmp    eax,0x3b9
  421ea8:	je     0x41f639
  421eae:	ja     0x42201b
  421eb4:	cmp    eax,0x39f
  421eb9:	je     0x41f639
  421ebf:	ja     0x421ff3
  421ec5:	cmp    eax,0x395
  421eca:	je     0x41f639
  421ed0:	jbe    0x422098
  421ed6:	cmp    eax,0x397
  421edb:	je     0x41f639
  421ee1:	cmp    eax,0x399
  421ee6:	jne    0x41f56c
  421eec:	jmp    0x41f639
  421ef1:	cmp    eax,0x165
  421ef6:	ja     0x421fa1
  421efc:	cmp    eax,0x164
  421f01:	jae    0x41f639
  421f07:	cmp    eax,0x74
  421f0a:	ja     0x421f78
  421f0c:	cmp    eax,0x73
  421f0f:	jae    0x41f639
  421f15:	sub    eax,0x53
  421f18:	cmp    eax,0x1
  421f1b:	ja     0x41f56c
  421f21:	jmp    0x41f639
  421f26:	cmp    eax,0x1ecc
  421f2b:	jb     0x41f56c
  421f31:	cmp    eax,0x1ed9
  421f36:	jbe    0x41f639
  421f3c:	sub    eax,0x1ee4
  421f41:	cmp    eax,0x3
  421f44:	ja     0x41f56c
  421f4a:	jmp    0x41f639
  421f4f:	cmp    eax,0x1e78
  421f54:	jb     0x41f56c
  421f5a:	cmp    eax,0x1e7b
  421f5f:	jbe    0x41f639
  421f65:	sub    eax,0x1ee6
  421f6a:	cmp    eax,0x1
  421f6d:	ja     0x41f56c
  421f73:	jmp    0x41f639
  421f78:	cmp    eax,0x15a
  421f7d:	jb     0x41f56c
  421f83:	cmp    eax,0x15d
  421f88:	jbe    0x41f639
  421f8e:	sub    eax,0x160
  421f93:	cmp    eax,0x1
  421f96:	ja     0x41f56c
  421f9c:	jmp    0x41f639
  421fa1:	cmp    eax,0x1e67
  421fa6:	ja     0x4220a8
  421fac:	cmp    eax,0x1e64
  421fb1:	jae    0x41f639
  421fb7:	sub    eax,0x1e60
  421fbc:	cmp    eax,0x1
  421fbf:	ja     0x41f56c
  421fc5:	jmp    0x41f639
  421fca:	cmp    eax,0x1ea2
  421fcf:	jb     0x41f56c
  421fd5:	cmp    eax,0x1eab
  421fda:	jbe    0x41f639
  421fe0:	sub    eax,0x1eae
  421fe5:	cmp    eax,0x7
  421fe8:	ja     0x41f56c
  421fee:	jmp    0x41f639
  421ff3:	cmp    eax,0x3b1
  421ff8:	je     0x41f639
  421ffe:	jbe    0x422050
  422000:	cmp    eax,0x3b5
  422005:	je     0x41f639
  42200b:	cmp    eax,0x3b7
  422010:	jne    0x41f56c
  422016:	jmp    0x41f639
  42201b:	cmp    eax,0x1fb3
  422020:	je     0x41f639
  422026:	ja     0x422070
  422028:	cmp    eax,0x3c1
  42202d:	je     0x41f639
  422033:	jbe    0x422060
  422035:	cmp    eax,0x3c5
  42203a:	je     0x41f639
  422040:	cmp    eax,0x3c9
  422045:	jne    0x41f56c
  42204b:	jmp    0x41f639
  422050:	cmp    eax,0x3a9
  422055:	jne    0x41f56c
  42205b:	jmp    0x41f639
  422060:	cmp    eax,0x3bf
  422065:	jne    0x41f56c
  42206b:	jmp    0x41f639
  422070:	cmp    eax,0x1fcc
  422075:	je     0x41f639
  42207b:	ja     0x4220ce
  42207d:	cmp    eax,0x1fbc
  422082:	je     0x41f639
  422088:	cmp    eax,0x1fc3
  42208d:	jne    0x41f56c
  422093:	jmp    0x41f639
  422098:	cmp    eax,0x391
  42209d:	jne    0x41f56c
  4220a3:	jmp    0x41f639
  4220a8:	cmp    eax,0x1e6a
  4220ad:	jb     0x41f56c
  4220b3:	cmp    eax,0x1e6b
  4220b8:	jbe    0x41f639
  4220be:	cmp    eax,0x1e97
  4220c3:	jne    0x41f56c
  4220c9:	jmp    0x41f639
  4220ce:	cmp    eax,0x1ff3
  4220d3:	je     0x41f639
  4220d9:	cmp    eax,0x1ffc
  4220de:	jne    0x41f56c
  4220e4:	jmp    0x41f639
  4220e9:	cmp    eax,0x3c5
  4220ee:	je     0x41f639
  4220f4:	cmp    eax,0x3c9
  4220f9:	jne    0x41f56c
  4220ff:	jmp    0x41f639
  422104:	cmp    eax,0x1fcc
  422109:	je     0x41f639
  42210f:	ja     0x422168
  422111:	cmp    eax,0x1fbc
  422116:	je     0x41f639
  42211c:	cmp    eax,0x1fc3
  422121:	jne    0x41f56c
  422127:	jmp    0x41f639
  42212c:	sub    eax,0x124
  422131:	cmp    eax,0x1
  422134:	ja     0x41f56c
  42213a:	jmp    0x41f639
  42213f:	cmp    eax,0x1e22
  422144:	jb     0x41f56c
  42214a:	cmp    eax,0x1e23
  42214f:	jbe    0x41f639
  422155:	sub    eax,0x1e26
  42215a:	cmp    eax,0x1
  42215d:	ja     0x41f56c
  422163:	jmp    0x41f639
  422168:	cmp    eax,0x1ff3
  42216d:	je     0x41f639
  422173:	cmp    eax,0x1ffc
  422178:	jne    0x41f56c
  42217e:	jmp    0x41f639
  422183:	cmp    eax,0x155
  422188:	ja     0x4222d2
  42218e:	cmp    eax,0x154
  422193:	jae    0x41f639
  422199:	cmp    eax,0x72
  42219c:	je     0x41f639
  4221a2:	ja     0x42228d
  4221a8:	cmp    eax,0x54
  4221ab:	je     0x41f639
  4221b1:	ja     0x422250
  4221b7:	cmp    eax,0x4c
  4221ba:	ja     0x422239
  4221bc:	cmp    eax,0x4b
  4221bf:	jae    0x41f639
  4221c5:	cmp    eax,0x42
  4221c8:	je     0x41f639
  4221ce:	cmp    eax,0x44
  4221d1:	jne    0x41f56c
  4221d7:	jmp    0x41f639
  4221dc:	cmp    eax,0x171
  4221e1:	ja     0x422c53
  4221e7:	cmp    eax,0x168
  4221ec:	jae    0x41f639
  4221f2:	cmp    eax,0xef
  4221f7:	ja     0x422b9e
  4221fd:	cmp    eax,0xe8
  422202:	jae    0x41f639
  422208:	cmp    eax,0x69
  42220b:	je     0x41f639
  422211:	ja     0x422c06
  422217:	cmp    eax,0x49
  42221a:	je     0x41f639
  422220:	jbe    0x42227f
  422222:	cmp    eax,0x55
  422225:	je     0x41f639
  42222b:	cmp    eax,0x65
  42222e:	jne    0x41f56c
  422234:	jmp    0x41f639
  422239:	cmp    eax,0x4e
  42223c:	je     0x41f639
  422242:	cmp    eax,0x52
  422245:	jne    0x41f56c
  42224b:	jmp    0x41f639
  422250:	cmp    eax,0x68
  422253:	je     0x41f639
  422259:	ja     0x422ccb
  42225f:	cmp    eax,0x62
  422262:	je     0x41f639
  422268:	cmp    eax,0x64
  42226b:	je     0x41f639
  422271:	cmp    eax,0x5a
  422274:	jne    0x41f56c
  42227a:	jmp    0x41f639
  42227f:	cmp    eax,0x45
  422282:	jne    0x41f56c
  422288:	jmp    0x41f639
  42228d:	cmp    eax,0x13a
  422292:	ja     0x422bdd
  422298:	cmp    eax,0x139
  42229d:	jae    0x41f639
  4222a3:	cmp    eax,0xf1
  4222a8:	je     0x41f639
  4222ae:	ja     0x422327
  4222b0:	cmp    eax,0x7a
  4222b3:	je     0x41f639
  4222b9:	cmp    eax,0xd1
  4222be:	je     0x41f639
  4222c4:	cmp    eax,0x74
  4222c7:	jne    0x41f56c
  4222cd:	jmp    0x41f639
  4222d2:	cmp    eax,0x1e03
  4222d7:	ja     0x422d37
  4222dd:	cmp    eax,0x1e02
  4222e2:	jae    0x41f639
  4222e8:	cmp    eax,0x1e9
  4222ed:	ja     0x422c2a
  4222f3:	cmp    eax,0x1e8
  4222f8:	jae    0x41f639
  4222fe:	cmp    eax,0x165
  422303:	ja     0x422c92
  422309:	cmp    eax,0x164
  42230e:	jae    0x41f639
  422314:	sub    eax,0x158
  422319:	cmp    eax,0x1
  42231c:	ja     0x41f56c
  422322:	jmp    0x41f639
  422327:	cmp    eax,0x10e
  42232c:	jb     0x41f56c
  422332:	cmp    eax,0x10f
  422337:	jbe    0x41f639
  42233d:	cmp    eax,0x125
  422342:	jne    0x41f56c
  422348:	jmp    0x41f639
  42234d:	cmp    ebx,0x327
  422353:	je     0x422779
  422359:	cmp    ebx,0x328
  42235f:	jne    0x420870
  422365:	cmp    eax,0x130
  42236a:	je     0x41f639
  422370:	ja     0x422724
  422376:	cmp    eax,0xdc
  42237b:	ja     0x422688
  422381:	cmp    eax,0xd9
  422386:	jae    0x41f639
  42238c:	cmp    eax,0x69
  42238f:	je     0x41f639
  422395:	ja     0x42265f
  42239b:	cmp    eax,0x4f
  42239e:	je     0x41f639
  4223a4:	ja     0x42242a
  4223aa:	cmp    eax,0x45
  4223ad:	je     0x41f639
  4223b3:	cmp    eax,0x49
  4223b6:	je     0x41f639
  4223bc:	cmp    eax,0x41
  4223bf:	jne    0x41f56c
  4223c5:	jmp    0x41f639
  4223ca:	cmp    eax,0x13e
  4223cf:	ja     0x4224c3
  4223d5:	cmp    eax,0x13d
  4223da:	jae    0x41f639
  4223e0:	cmp    eax,0xd1
  4223e5:	je     0x41f639
  4223eb:	ja     0x422484
  4223f1:	cmp    eax,0x65
  4223f4:	ja     0x42245b
  4223f6:	cmp    eax,0x64
  4223f9:	jae    0x41f639
  4223ff:	cmp    eax,0x4c
  422402:	je     0x41f639
  422408:	jbe    0x42244a
  42240a:	cmp    eax,0x4e
  42240d:	je     0x41f639
  422413:	jb     0x41f56c
  422419:	sub    eax,0x54
  42241c:	cmp    eax,0x1
  42241f:	ja     0x41f56c
  422425:	jmp    0x41f639
  42242a:	cmp    eax,0x61
  42242d:	je     0x41f639
  422433:	cmp    eax,0x65
  422436:	je     0x41f639
  42243c:	cmp    eax,0x55
  42243f:	jne    0x41f56c
  422445:	jmp    0x41f639
  42244a:	sub    eax,0x44
  42244d:	cmp    eax,0x1
  422450:	ja     0x41f56c
  422456:	jmp    0x41f639
  42245b:	cmp    eax,0x75
  42245e:	ja     0x422510
  422464:	cmp    eax,0x74
  422467:	jae    0x41f639
  42246d:	cmp    eax,0x6c
  422470:	je     0x41f639
  422476:	cmp    eax,0x6e
  422479:	jne    0x41f56c
  42247f:	jmp    0x41f639
  422484:	cmp    eax,0x10f
  422489:	ja     0x422614
  42248f:	cmp    eax,0x10e
  422494:	jae    0x41f639
  42249a:	cmp    eax,0xeb
  42249f:	ja     0x4225f0
  4224a5:	cmp    eax,0xe8
  4224aa:	jae    0x41f639
  4224b0:	sub    eax,0xd9
  4224b5:	cmp    eax,0x3
  4224b8:	ja     0x41f56c
  4224be:	jmp    0x41f639
  4224c3:	cmp    eax,0x217
  4224c8:	ja     0x42255b
  4224ce:	cmp    eax,0x214
  4224d3:	jae    0x41f639
  4224d9:	cmp    eax,0x171
  4224de:	ja     0x422536
  4224e0:	cmp    eax,0x168
  4224e5:	jae    0x41f639
  4224eb:	cmp    eax,0x148
  4224f0:	ja     0x422523
  4224f2:	cmp    eax,0x147
  4224f7:	jae    0x41f639
  4224fd:	sub    eax,0x143
  422502:	cmp    eax,0x1
  422505:	ja     0x41f56c
  42250b:	jmp    0x41f639
  422510:	sub    eax,0xc8
  422515:	cmp    eax,0x3
  422518:	ja     0x41f56c
  42251e:	jmp    0x41f639
  422523:	sub    eax,0x164
  422528:	cmp    eax,0x1
  42252b:	ja     0x41f56c
  422531:	jmp    0x41f639
  422536:	cmp    eax,0x1f9
  42253b:	ja     0x422592
  42253d:	cmp    eax,0x1f8
  422542:	jae    0x41f639
  422548:	sub    eax,0x1d3
  42254d:	cmp    eax,0x9
  422550:	ja     0x41f56c
  422556:	jmp    0x41f639
  42255b:	cmp    eax,0x1e6b
  422560:	ja     0x4225b8
  422562:	cmp    eax,0x1e6a
  422567:	jae    0x41f639
  42256d:	cmp    eax,0x1e17
  422572:	ja     0x4225a5
  422574:	cmp    eax,0x1e14
  422579:	jae    0x41f639
  42257f:	sub    eax,0x1e0a
  422584:	cmp    eax,0x1
  422587:	ja     0x41f56c
  42258d:	jmp    0x41f639
  422592:	sub    eax,0x204
  422597:	cmp    eax,0x3
  42259a:	ja     0x41f56c
  4225a0:	jmp    0x41f639
  4225a5:	sub    eax,0x1e44
  4225aa:	cmp    eax,0x1
  4225ad:	ja     0x41f56c
  4225b3:	jmp    0x41f639
  4225b8:	cmp    eax,0x1ec5
  4225bd:	ja     0x422639
  4225bf:	cmp    eax,0x1eba
  4225c4:	jae    0x41f639
  4225ca:	cmp    eax,0x1e78
  4225cf:	jb     0x41f56c
  4225d5:	cmp    eax,0x1e7b
  4225da:	jbe    0x41f639
  4225e0:	cmp    eax,0x1e97
  4225e5:	jne    0x41f56c
  4225eb:	jmp    0x41f639
  4225f0:	cmp    eax,0xf1
  4225f5:	je     0x41f639
  4225fb:	jb     0x41f56c
  422601:	sub    eax,0xf9
  422606:	cmp    eax,0x3
  422609:	ja     0x41f56c
  42260f:	jmp    0x41f639
  422614:	cmp    eax,0x11b
  422619:	ja     0x42264c
  42261b:	cmp    eax,0x11a
  422620:	jae    0x41f639
  422626:	sub    eax,0x112
  42262b:	cmp    eax,0x5
  42262e:	ja     0x41f56c
  422634:	jmp    0x41f639
  422639:	sub    eax,0x1ee6
  42263e:	cmp    eax,0x1
  422641:	ja     0x41f56c
  422647:	jmp    0x41f639
  42264c:	sub    eax,0x139
  422651:	cmp    eax,0x1
  422654:	ja     0x41f56c
  42265a:	jmp    0x41f639
  42265f:	cmp    eax,0xc5
  422664:	ja     0x4226bf
  422666:	cmp    eax,0xc0
  42266b:	jae    0x41f639
  422671:	cmp    eax,0x6f
  422674:	je     0x41f639
  42267a:	cmp    eax,0x75
  42267d:	jne    0x41f56c
  422683:	jmp    0x41f639
  422688:	cmp    eax,0xfc
  42268d:	ja     0x4226fb
  42268f:	cmp    eax,0xf9
  422694:	jae    0x41f639
  42269a:	cmp    eax,0xef
  42269f:	ja     0x4226e8
  4226a1:	cmp    eax,0xe8
  4226a6:	jae    0x41f639
  4226ac:	sub    eax,0xe0
  4226b1:	cmp    eax,0x5
  4226b4:	ja     0x41f56c
  4226ba:	jmp    0x41f639
  4226bf:	cmp    eax,0xc8
  4226c4:	jb     0x41f56c
  4226ca:	cmp    eax,0xcf
  4226cf:	jbe    0x41f639
  4226d5:	sub    eax,0xd2
  4226da:	cmp    eax,0x4
  4226dd:	ja     0x41f56c
  4226e3:	jmp    0x41f639
  4226e8:	sub    eax,0xf2
  4226ed:	cmp    eax,0x4
  4226f0:	ja     0x41f56c
  4226f6:	jmp    0x41f639
  4226fb:	cmp    eax,0x117
  422700:	ja     0x4227da
  422706:	cmp    eax,0x112
  42270b:	jae    0x41f639
  422711:	sub    eax,0x100
  422716:	cmp    eax,0x3
  422719:	ja     0x41f56c
  42271f:	jmp    0x41f639
  422724:	cmp    eax,0x217
  422729:	ja     0x42283b
  42272f:	cmp    eax,0x214
  422734:	jae    0x41f639
  42273a:	cmp    eax,0x1b0
  42273f:	ja     0x422816
  422745:	cmp    eax,0x1af
  42274a:	jae    0x41f639
  422750:	cmp    eax,0x171
  422755:	ja     0x422803
  42275b:	cmp    eax,0x168
  422760:	jae    0x41f639
  422766:	sub    eax,0x14c
  42276b:	cmp    eax,0x5
  42276e:	ja     0x41f56c
  422774:	jmp    0x41f639
  422779:	cmp    eax,0x148
  42277e:	ja     0x42293e
  422784:	cmp    eax,0x147
  422789:	jae    0x41f639
  42278f:	cmp    eax,0xcb
  422794:	ja     0x4228f7
  42279a:	cmp    eax,0xc8
  42279f:	jae    0x41f639
  4227a5:	cmp    eax,0x54
  4227a8:	ja     0x4229bc
  4227ae:	cmp    eax,0x52
  4227b1:	jae    0x41f639
  4227b7:	cmp    eax,0x48
  4227ba:	ja     0x4228d7
  4227c0:	cmp    eax,0x47
  4227c3:	jae    0x41f639
  4227c9:	sub    eax,0x43
  4227cc:	cmp    eax,0x2
  4227cf:	ja     0x41f56c
  4227d5:	jmp    0x41f639
  4227da:	cmp    eax,0x11a
  4227df:	jb     0x41f56c
  4227e5:	cmp    eax,0x11b
  4227ea:	jbe    0x41f639
  4227f0:	sub    eax,0x128
  4227f5:	cmp    eax,0x5
  4227f8:	ja     0x41f56c
  4227fe:	jmp    0x41f639
  422803:	sub    eax,0x1a0
  422808:	cmp    eax,0x1
  42280b:	ja     0x41f56c
  422811:	jmp    0x41f639
  422816:	cmp    eax,0x1e1
  42281b:	ja     0x422872
  42281d:	cmp    eax,0x1de
  422822:	jae    0x41f639
  422828:	sub    eax,0x1cd
  42282d:	cmp    eax,0xf
  422830:	ja     0x41f56c
  422836:	jmp    0x41f639
  42283b:	cmp    eax,0x1e1b
  422840:	ja     0x4228ae
  422842:	cmp    eax,0x1e14
  422847:	jae    0x41f639
  42284d:	cmp    eax,0x231
  422852:	ja     0x42289b
  422854:	cmp    eax,0x22a
  422859:	jae    0x41f639
  42285f:	sub    eax,0x226
  422864:	cmp    eax,0x1
  422867:	ja     0x41f56c
  42286d:	jmp    0x41f639
  422872:	cmp    eax,0x1fa
  422877:	jb     0x41f56c
  42287d:	cmp    eax,0x1fb
  422882:	jbe    0x41f639
  422888:	sub    eax,0x200
  42288d:	cmp    eax,0xf
  422890:	ja     0x41f56c
  422896:	jmp    0x41f639
  42289b:	sub    eax,0x1e00
  4228a0:	cmp    eax,0x1
  4228a3:	ja     0x41f56c
  4228a9:	jmp    0x41f639
  4228ae:	cmp    eax,0x1e53
  4228b3:	ja     0x4229ed
  4228b9:	cmp    eax,0x1e4c
  4228be:	jae    0x41f639
  4228c4:	sub    eax,0x1e2c
  4228c9:	cmp    eax,0x3
  4228cc:	ja     0x41f56c
  4228d2:	jmp    0x41f639
  4228d7:	cmp    eax,0x4b
  4228da:	jb     0x41f56c
  4228e0:	cmp    eax,0x4c
  4228e3:	jbe    0x41f639
  4228e9:	cmp    eax,0x4e
  4228ec:	jne    0x41f56c
  4228f2:	jmp    0x41f639
  4228f7:	cmp    eax,0x121
  4228fc:	ja     0x422a36
  422902:	cmp    eax,0x11a
  422907:	jae    0x41f639
  42290d:	cmp    eax,0xf1
  422912:	je     0x41f639
  422918:	ja     0x422993
  42291a:	cmp    eax,0xd1
  42291f:	je     0x41f639
  422925:	jb     0x41f56c
  42292b:	sub    eax,0xe8
  422930:	cmp    eax,0x3
  422933:	ja     0x41f56c
  422939:	jmp    0x41f639
  42293e:	cmp    eax,0x21b
  422943:	ja     0x422ad2
  422949:	cmp    eax,0x218
  42294e:	jae    0x41f639
  422954:	cmp    eax,0x1e9
  422959:	ja     0x422aad
  42295f:	cmp    eax,0x1e6
  422964:	jae    0x41f639
  42296a:	cmp    eax,0x15d
  42296f:	ja     0x422a5b
  422975:	cmp    eax,0x158
  42297a:	jae    0x41f639
  422980:	sub    eax,0x154
  422985:	cmp    eax,0x1
  422988:	ja     0x41f56c
  42298e:	jmp    0x41f639
  422993:	cmp    eax,0x106
  422998:	jb     0x41f56c
  42299e:	cmp    eax,0x10f
  4229a3:	jbe    0x41f639
  4229a9:	sub    eax,0x112
  4229ae:	cmp    eax,0x5
  4229b1:	ja     0x41f56c
  4229b7:	jmp    0x41f639
  4229bc:	cmp    eax,0x6c
  4229bf:	ja     0x422a16
  4229c1:	cmp    eax,0x6b
  4229c4:	jae    0x41f639
  4229ca:	cmp    eax,0x63
  4229cd:	jb     0x41f56c
  4229d3:	cmp    eax,0x65
  4229d6:	jbe    0x41f639
  4229dc:	sub    eax,0x67
  4229df:	cmp    eax,0x1
  4229e2:	ja     0x41f56c
  4229e8:	jmp    0x41f639
  4229ed:	cmp    eax,0x1e72
  4229f2:	jb     0x41f56c
  4229f8:	cmp    eax,0x1e7b
  4229fd:	jbe    0x41f639
  422a03:	sub    eax,0x1ea0
  422a08:	cmp    eax,0x51
  422a0b:	ja     0x41f56c
  422a11:	jmp    0x41f639
  422a16:	cmp    eax,0x6e
  422a19:	je     0x41f639
  422a1f:	jb     0x41f56c
  422a25:	sub    eax,0x72
  422a28:	cmp    eax,0x2
  422a2b:	ja     0x41f56c
  422a31:	jmp    0x41f639
  422a36:	cmp    eax,0x13a
  422a3b:	ja     0x422a84
  422a3d:	cmp    eax,0x139
  422a42:	jae    0x41f639
  422a48:	sub    eax,0x124
  422a4d:	cmp    eax,0x1
  422a50:	ja     0x41f56c
  422a56:	jmp    0x41f639
  422a5b:	cmp    eax,0x160
  422a60:	jb     0x41f56c
  422a66:	cmp    eax,0x161
  422a6b:	jbe    0x41f639
  422a71:	sub    eax,0x164
  422a76:	cmp    eax,0x1
  422a79:	ja     0x41f56c
  422a7f:	jmp    0x41f639
  422a84:	cmp    eax,0x13d
  422a89:	jb     0x41f56c
  422a8f:	cmp    eax,0x13e
  422a94:	jbe    0x41f639
  422a9a:	sub    eax,0x143
  422a9f:	cmp    eax,0x1
  422aa2:	ja     0x41f56c
  422aa8:	jmp    0x41f639
  422aad:	cmp    eax,0x1f9
  422ab2:	ja     0x422b0d
  422ab4:	cmp    eax,0x1f8
  422ab9:	jae    0x41f639
  422abf:	sub    eax,0x1f4
  422ac4:	cmp    eax,0x1
  422ac7:	ja     0x41f56c
  422acd:	jmp    0x41f639
  422ad2:	cmp    eax,0x1e2b
  422ad7:	ja     0x422b5f
  422add:	cmp    eax,0x1e2a
  422ae2:	jae    0x41f639
  422ae8:	cmp    eax,0x1e0f
  422aed:	ja     0x422b36
  422aef:	cmp    eax,0x1e0a
  422af4:	jae    0x41f639
  422afa:	sub    eax,0x21e
  422aff:	cmp    eax,0x1
  422b02:	ja     0x41f56c
  422b08:	jmp    0x41f639
  422b0d:	cmp    eax,0x204
  422b12:	jb     0x41f56c
  422b18:	cmp    eax,0x207
  422b1d:	jbe    0x41f639
  422b23:	sub    eax,0x210
  422b28:	cmp    eax,0x3
  422b2b:	ja     0x41f56c
  422b31:	jmp    0x41f639
  422b36:	cmp    eax,0x1e12
  422b3b:	jb     0x41f56c
  422b41:	cmp    eax,0x1e1b
  422b46:	jbe    0x41f639
  422b4c:	sub    eax,0x1e20
  422b51:	cmp    eax,0x7
  422b54:	ja     0x41f56c
  422b5a:	jmp    0x41f639
  422b5f:	cmp    eax,0x1e71
  422b64:	ja     0x422cfe
  422b6a:	cmp    eax,0x1e58
  422b6f:	jae    0x41f639
  422b75:	cmp    eax,0x1e30
  422b7a:	jb     0x41f56c
  422b80:	cmp    eax,0x1e3d
  422b85:	jbe    0x41f639
  422b8b:	sub    eax,0x1e44
  422b90:	cmp    eax,0x7
  422b93:	ja     0x41f56c
  422b99:	jmp    0x41f639
  422b9e:	cmp    eax,0x11b
  422ba3:	ja     0x422ca5
  422ba9:	cmp    eax,0x11a
  422bae:	jae    0x41f639
  422bb4:	cmp    eax,0xf9
  422bb9:	jb     0x41f56c
  422bbf:	cmp    eax,0xfc
  422bc4:	jbe    0x41f639
  422bca:	sub    eax,0x112
  422bcf:	cmp    eax,0x5
  422bd2:	ja     0x41f56c
  422bd8:	jmp    0x41f639
  422bdd:	cmp    eax,0x144
  422be2:	ja     0x422ceb
  422be8:	cmp    eax,0x143
  422bed:	jae    0x41f639
  422bf3:	sub    eax,0x13d
  422bf8:	cmp    eax,0x1
  422bfb:	ja     0x41f56c
  422c01:	jmp    0x41f639
  422c06:	cmp    eax,0xcf
  422c0b:	ja     0x422d7a
  422c11:	cmp    eax,0xc8
  422c16:	jae    0x41f639
  422c1c:	cmp    eax,0x75
  422c1f:	jne    0x41f56c
  422c25:	jmp    0x41f639
  422c2a:	cmp    eax,0x213
  422c2f:	ja     0x422d27
  422c35:	cmp    eax,0x210
  422c3a:	jae    0x41f639
  422c40:	sub    eax,0x1f8
  422c45:	cmp    eax,0x1
  422c48:	ja     0x41f56c
  422c4e:	jmp    0x41f639
  422c53:	cmp    eax,0x1e17
  422c58:	ja     0x422df2
  422c5e:	cmp    eax,0x1e14
  422c63:	jae    0x41f639
  422c69:	cmp    eax,0x1dc
  422c6e:	ja     0x422dc9
  422c74:	cmp    eax,0x1d3
  422c79:	jae    0x41f639
  422c7f:	sub    eax,0x1cf
  422c84:	cmp    eax,0x1
  422c87:	ja     0x41f56c
  422c8d:	jmp    0x41f639
  422c92:	sub    eax,0x179
  422c97:	cmp    eax,0x5
  422c9a:	ja     0x41f56c
  422ca0:	jmp    0x41f639
  422ca5:	cmp    eax,0x128
  422caa:	jb     0x41f56c
  422cb0:	cmp    eax,0x12d
  422cb5:	jbe    0x41f639
  422cbb:	cmp    eax,0x130
  422cc0:	jne    0x41f56c
  422cc6:	jmp    0x41f639
  422ccb:	cmp    eax,0x6b
  422cce:	jb     0x41f56c
  422cd4:	cmp    eax,0x6c
  422cd7:	jbe    0x41f639
  422cdd:	cmp    eax,0x6e
  422ce0:	jne    0x41f56c
  422ce6:	jmp    0x41f639
  422ceb:	sub    eax,0x147
  422cf0:	cmp    eax,0x1
  422cf3:	ja     0x41f56c
  422cf9:	jmp    0x41f639
  422cfe:	cmp    eax,0x1e96
  422d03:	jb     0x41f56c
  422d09:	cmp    eax,0x1e97
  422d0e:	jbe    0x41f639
  422d14:	sub    eax,0x1eb8
  422d19:	cmp    eax,0xf
  422d1c:	ja     0x41f56c
  422d22:	jmp    0x41f639
  422d27:	cmp    eax,0x21f
  422d2c:	jne    0x41f56c
  422d32:	jmp    0x41f639
  422d37:	cmp    eax,0x1e45
  422d3c:	ja     0x422da0
  422d3e:	cmp    eax,0x1e44
  422d43:	jae    0x41f639
  422d49:	cmp    eax,0x1e23
  422d4e:	je     0x41f639
  422d54:	jbe    0x422d8d
  422d56:	cmp    eax,0x1e27
  422d5b:	je     0x41f639
  422d61:	jb     0x41f56c
  422d67:	sub    eax,0x1e30
  422d6c:	cmp    eax,0x1
  422d6f:	ja     0x41f56c
  422d75:	jmp    0x41f639
  422d7a:	sub    eax,0xd9
  422d7f:	cmp    eax,0x3
  422d82:	ja     0x41f56c
  422d88:	jmp    0x41f639
  422d8d:	sub    eax,0x1e0a
  422d92:	cmp    eax,0x1
  422d95:	ja     0x41f56c
  422d9b:	jmp    0x41f639
  422da0:	cmp    eax,0x1e6b
  422da5:	ja     0x422e2d
  422dab:	cmp    eax,0x1e6a
  422db0:	jae    0x41f639
  422db6:	sub    eax,0x1e58
  422dbb:	cmp    eax,0x1
  422dbe:	ja     0x41f56c
  422dc4:	jmp    0x41f639
  422dc9:	cmp    eax,0x204
  422dce:	jb     0x41f56c
  422dd4:	cmp    eax,0x20b
  422dd9:	jbe    0x41f639
  422ddf:	sub    eax,0x214
  422de4:	cmp    eax,0x3
  422de7:	ja     0x41f56c
  422ded:	jmp    0x41f639
  422df2:	cmp    eax,0x1ec5
  422df7:	ja     0x422e53
  422df9:	cmp    eax,0x1eba
  422dfe:	jae    0x41f639
  422e04:	cmp    eax,0x1e2e
  422e09:	jb     0x41f56c
  422e0f:	cmp    eax,0x1e2f
  422e14:	jbe    0x41f639
  422e1a:	sub    eax,0x1e78
  422e1f:	cmp    eax,0x3
  422e22:	ja     0x41f56c
  422e28:	jmp    0x41f639
  422e2d:	cmp    eax,0x1e90
  422e32:	jb     0x41f56c
  422e38:	cmp    eax,0x1e91
  422e3d:	jbe    0x41f639
  422e43:	cmp    eax,0x1e97
  422e48:	jne    0x41f56c
  422e4e:	jmp    0x41f639
  422e53:	cmp    eax,0x1ec8
  422e58:	jb     0x41f56c
  422e5e:	cmp    eax,0x1ec9
  422e63:	jbe    0x41f639
  422e69:	sub    eax,0x1ee6
  422e6e:	cmp    eax,0x1
  422e71:	ja     0x41f56c
  422e77:	jmp    0x41f639
  422e7c:	nop    DWORD PTR [rax+0x0]
  422e80:	push   r15
  422e82:	push   r14
  422e84:	push   r13
  422e86:	push   r12
  422e88:	push   rbp
  422e89:	push   rdi
  422e8a:	push   rsi
  422e8b:	push   rbx
  422e8c:	sub    rsp,0x118
  422e93:	mov    QWORD PTR [rsp+0x170],r8
  422e9b:	mov    r8d,DWORD PTR [rsp+0x180]
  422ea3:	mov    r12,rcx
  422ea6:	lea    rcx,[rsp+0xd0]
  422eae:	mov    rbx,rdx
  422eb1:	mov    rdx,r12
  422eb4:	mov    QWORD PTR [rsp+0x178],r9
  422ebc:	call   0x41df90
  422ec1:	cmp    DWORD PTR [rbx],0x100
  422ec7:	mov    ecx,0x100
  422ecc:	mov    eax,DWORD PTR [rsp+0xe0]
  422ed3:	cmovae ecx,DWORD PTR [rbx]
  422ed6:	mov    rbp,QWORD PTR [rsp+0xd0]
  422ede:	mov    rdi,QWORD PTR [rsp+0xd8]
  422ee6:	mov    DWORD PTR [rsp+0x5c],eax
  422eea:	mov    ecx,ecx
  422eec:	mov    QWORD PTR [rsp+0xb8],rcx
  422ef4:	call   0x4385d0
  422ef9:	cmp    QWORD PTR [rsp+0x170],0x0
  422f02:	mov    QWORD PTR [rsp+0xb0],rax
  422f0a:	mov    QWORD PTR [rsp+0xc0],0x0
  422f16:	je     0x423643
  422f1c:	mov    esi,DWORD PTR [rsp+0x5c]
  422f20:	mov    eax,0x1
  422f25:	mov    r15d,0xffffffff
  422f2b:	mov    r14,QWORD PTR [rip+0x2e67e]        # 0x4515b0
  422f32:	lea    r13,[rsp+0x8f]
  422f3a:	mov    QWORD PTR [rsp+0x40],rbx
  422f3f:	mov    QWORD PTR [rsp+0x48],0x0
  422f48:	mov    ecx,esi
  422f4a:	movsxd rdx,esi
  422f4d:	mov    rsi,r15
  422f50:	shl    rax,cl
  422f53:	sub    rax,0x1
  422f57:	cmp    rdx,0x1f
  422f5b:	cmovbe rsi,rax
  422f5f:	lea    rax,[rsp+0xf0]
  422f67:	mov    QWORD PTR [rsp+0x68],rsi
  422f6c:	mov    DWORD PTR [rsp+0x7c],esi
  422f70:	mov    QWORD PTR [rsp+0x50],rax
  422f75:	lea    rax,[rsp+0xa8]
  422f7d:	mov    QWORD PTR [rsp+0x38],rsi
  422f82:	mov    DWORD PTR [rsp+0x78],esi
  422f86:	lea    rsi,[rsp+0xb0]
  422f8e:	mov    QWORD PTR [rsp+0x70],rax
  422f93:	mov    rax,QWORD PTR [rsp+0x40]
  422f98:	mov    rcx,QWORD PTR [rax+0x8]
  422f9c:	movzx  eax,BYTE PTR [rcx]
  422f9f:	cmp    al,0x75
  422fa1:	je     0x42356b
  422fa7:	cmp    al,0x55
  422fa9:	je     0x42355e
  422faf:	cmp    al,0x4c
  422fb1:	mov    r11,rcx
  422fb4:	je     0x42355e
  422fba:	cmp    al,0x52
  422fbc:	je     0x4233f1
  422fc2:	mov    rax,QWORD PTR [rsp+0x40]
  422fc7:	add    r11,0x1
  422fcb:	mov    eax,DWORD PTR [rax]
  422fcd:	lea    r15,[rcx+rax*1-0x1]
  422fd2:	cmp    r11,r15
  422fd5:	mov    rbx,r11
  422fd8:	jae    0x4230b0
  422fde:	cmp    BYTE PTR [r11],0x5c
  422fe2:	jne    0x422ff9
  422fe4:	jmp    0x4230b0
  422fe9:	nop    DWORD PTR [rax+0x0]
  422ff0:	cmp    BYTE PTR [rbx],0x5c
  422ff3:	je     0x423092
  422ff9:	add    rbx,0x1
  422ffd:	cmp    rbx,r15
  423000:	jne    0x422ff0
  423002:	sub    rbx,r11
  423005:	mov    r9,rsi
  423008:	mov    rdx,r11
  42300b:	mov    r8,rbx
  42300e:	mov    rcx,rdi
  423011:	call   rbp
  423013:	test   al,al
  423015:	je     0x423441
  42301b:	add    QWORD PTR [rsp+0x48],0x1
  423021:	add    QWORD PTR [rsp+0x40],0x10
  423027:	mov    rax,QWORD PTR [rsp+0x48]
  42302c:	cmp    rax,QWORD PTR [rsp+0x170]
  423034:	jne    0x422f93
  42303a:	mov    eax,DWORD PTR [rsp+0x5c]
  42303e:	mov    rcx,QWORD PTR [r12+0x478]
  423046:	lea    rdx,[r12+0x492]
  42304e:	mov    r9,rsi
  423051:	xor    r8d,r8d
  423054:	mov    DWORD PTR [rsp+0x20],eax
  423058:	call   0x41e3d0
  42305d:	mov    rdx,QWORD PTR [rsp+0xc0]
  423065:	mov    rcx,QWORD PTR [rsp+0xb0]
  42306d:	call   0x438650
  423072:	mov    rdi,QWORD PTR [rsp+0x178]
  42307a:	mov    QWORD PTR [rdi+0x8],rax
  42307e:	mov    rax,QWORD PTR [rsp+0xc0]
  423086:	mov    DWORD PTR [rdi],eax
  423088:	mov    eax,0x1
  42308d:	jmp    0x423464
  423092:	cmp    r11,rbx
  423095:	jae    0x4230b9
  423097:	mov    r8,rbx
  42309a:	mov    r9,rsi
  42309d:	mov    rdx,r11
  4230a0:	sub    r8,r11
  4230a3:	mov    rcx,rdi
  4230a6:	call   rbp
  4230a8:	test   al,al
  4230aa:	je     0x423441
  4230b0:	cmp    rbx,r15
  4230b3:	je     0x42301b
  4230b9:	movzx  r9d,BYTE PTR [rbx+0x1]
  4230be:	lea    eax,[r9-0x22]
  4230c2:	mov    BYTE PTR [rsp+0x8f],r9b
  4230ca:	cmp    al,0x59
  4230cc:	ja     0x4230ec
  4230ce:	lea    rdx,[rip+0x25cd3]        # 0x448da8
  4230d5:	movzx  eax,al
  4230d8:	movsxd rax,DWORD PTR [rdx+rax*4]
  4230dc:	add    rdx,rax
  4230df:	jmp    rdx
  4230e1:	cmp    BYTE PTR [r12+0x437],0x0
  4230ea:	je     0x423114
  4230ec:	mov    rcx,QWORD PTR [rip+0x2e4ed]        # 0x4515e0
  4230f3:	movsxd rax,r9d
  4230f6:	test   BYTE PTR [rcx+rax*2],0xac
  4230fa:	je     0x4234bc
  423100:	lea    r8,[rip+0x25bd1]        # 0x448cd8
  423107:	mov    edx,0x2
  42310c:	mov    rcx,r12
  42310f:	call   0x412660
  423114:	mov    r9,rsi
  423117:	mov    r8d,0x1
  42311d:	mov    rdx,r13
  423120:	mov    rcx,rdi
  423123:	call   rbp
  423125:	test   al,al
  423127:	je     0x423480
  42312d:	lea    r11,[rbx+0x2]
  423131:	jmp    0x422fd2
  423136:	cmp    BYTE PTR [r12+0x429],0x0
  42313f:	jne    0x4235a1
  423145:	lea    r11,[rbx+0x2]
  423149:	cmp    r15,r11
  42314c:	jbe    0x4235c2
  423152:	movzx  eax,BYTE PTR [rbx+0x2]
  423156:	xor    edx,edx
  423158:	xor    ebx,ebx
  42315a:	movzx  eax,BYTE PTR [r14+rax*1]
  42315f:	cmp    al,0x63
  423161:	jne    0x42317d
  423163:	jmp    0x4235c2
  423168:	nop    DWORD PTR [rax+rax*1+0x0]
  423170:	movzx  eax,BYTE PTR [r11]
  423174:	movzx  eax,BYTE PTR [r14+rax*1]
  423179:	cmp    al,0x63
  42317b:	je     0x423195
  42317d:	mov    ecx,ebx
  42317f:	add    r11,0x1
  423183:	shl    ebx,0x4
  423186:	and    ecx,0xf0000000
  42318c:	add    ebx,eax
  42318e:	or     edx,ecx
  423190:	cmp    r11,r15
  423193:	jne    0x423170
  423195:	mov    rax,QWORD PTR [rsp+0x68]
  42319a:	and    rax,rbx
  42319d:	cmp    eax,ebx
  42319f:	setne  al
  4231a2:	movzx  eax,al
  4231a5:	or     eax,edx
  4231a7:	jne    0x4235fe
  4231ad:	mov    eax,DWORD PTR [rsp+0x5c]
  4231b1:	mov    rcx,QWORD PTR [r12+0x478]
  4231b9:	lea    rdx,[r12+0x492]
  4231c1:	mov    r9,rsi
  4231c4:	mov    r8d,ebx
  4231c7:	mov    QWORD PTR [rsp+0x60],r11
  4231cc:	mov    DWORD PTR [rsp+0x20],eax
  4231d0:	call   0x41e3d0
  4231d5:	mov    r11,QWORD PTR [rsp+0x60]
  4231da:	jmp    0x422fd2
  4231df:	mov    BYTE PTR [rsp+0x8f],0xa
  4231e7:	jmp    0x423114
  4231ec:	mov    BYTE PTR [rsp+0x8f],0xc
  4231f4:	jmp    0x423114
  4231f9:	mov    BYTE PTR [rsp+0x8f],0x9
  423201:	jmp    0x423114
  423206:	mov    BYTE PTR [rsp+0x8f],0xd
  42320e:	jmp    0x423114
  423213:	mov    BYTE PTR [rsp+0x8f],0xb
  42321b:	jmp    0x423114
  423220:	mov    rax,QWORD PTR [rsp+0x50]
  423225:	mov    rdx,QWORD PTR [rsp+0x70]
  42322a:	add    rbx,0x2
  42322e:	xor    r9d,r9d
  423231:	mov    r8,r15
  423234:	mov    rcx,r12
  423237:	mov    DWORD PTR [rsp+0xf0],0x0
  423242:	mov    BYTE PTR [rsp+0xf4],0x0
  42324a:	mov    QWORD PTR [rsp+0x20],rax
  42324f:	mov    DWORD PTR [rsp+0xf8],0x0
  42325a:	mov    QWORD PTR [rsp+0xa8],rbx
  423262:	call   0x41f170
  423267:	cmp    eax,0x7f
  42326a:	jbe    0x4234ee
  423270:	lea    r10,[rsp+0xa0]
  423278:	mov    r9d,0x1
  42327e:	lea    r11,[rip+0x25d2b]        # 0x448fb0
  423285:	lea    rcx,[r10+0x6]
  423289:	jmp    0x423293
  42328b:	nop    DWORD PTR [rax+rax*1+0x0]
  423290:	mov    r9,r8
  423293:	mov    edx,eax
  423295:	shr    eax,0x6
  423298:	sub    rcx,0x1
  42329c:	and    edx,0x3f
  42329f:	lea    r8,[r9+0x1]
  4232a3:	or     edx,0xffffff80
  4232a6:	cmp    eax,0x3e
  4232a9:	mov    BYTE PTR [rcx],dl
  4232ab:	ja     0x423290
  4232ad:	movzx  edx,BYTE PTR [r11+r9*1+0x1]
  4232b3:	test   edx,eax
  4232b5:	jne    0x423290
  4232b7:	lea    rdx,[rip+0x25ced]        # 0x448fab
  4232be:	or     al,BYTE PTR [rdx+r9*1]
  4232c2:	cmp    r8,0x6
  4232c6:	mov    r9d,eax
  4232c9:	mov    BYTE PTR [rcx-0x1],al
  4232cc:	jbe    0x423625
  4232d2:	call   QWORD PTR [rip+0x38384]        # 0x45b65c
  4232d8:	lea    r8,[rip+0x25a79]        # 0x448d58
  4232df:	mov    DWORD PTR [rax],0x7
  4232e5:	mov    edx,0x3
  4232ea:	mov    rcx,r12
  4232ed:	call   0x412860
  4232f2:	mov    r11,QWORD PTR [rsp+0xa8]
  4232fa:	jmp    0x422fd2
  4232ff:	cmp    BYTE PTR [r12+0x437],0x0
  423308:	jne    0x4235e5
  42330e:	mov    BYTE PTR [rsp+0x8f],0x1b
  423316:	jmp    0x423114
  42331b:	mov    BYTE PTR [rsp+0x8f],0x8
  423323:	jmp    0x423114
  423328:	lea    r11,[rbx+0x1]
  42332c:	xor    r8d,r8d
  42332f:	cmp    r15,r11
  423332:	jbe    0x42338c
  423334:	lea    r10,[rbx+0x4]
  423338:	xor    ebx,ebx
  42333a:	nop    WORD PTR [rax+rax*1+0x0]
  423340:	add    r11,0x1
  423344:	lea    ebx,[r9+rbx*8-0x30]
  423349:	cmp    r11,r15
  42334c:	jne    0x4233e0
  423352:	mov    r8d,ebx
  423355:	mov    r10,r15
  423358:	mov    rax,QWORD PTR [rsp+0x38]
  42335d:	and    rax,rbx
  423360:	cmp    eax,ebx
  423362:	je     0x423389
  423364:	lea    r8,[rip+0x258e5]        # 0x448c50
  42336b:	mov    edx,0x2
  423370:	mov    rcx,r12
  423373:	mov    QWORD PTR [rsp+0x60],r10
  423378:	call   0x412660
  42337d:	and    ebx,DWORD PTR [rsp+0x78]
  423381:	mov    r10,QWORD PTR [rsp+0x60]
  423386:	mov    r8d,ebx
  423389:	mov    r11,r10
  42338c:	mov    eax,DWORD PTR [rsp+0x5c]
  423390:	mov    rcx,QWORD PTR [r12+0x478]
  423398:	lea    rdx,[r12+0x492]
  4233a0:	mov    r9,rsi
  4233a3:	mov    QWORD PTR [rsp+0x60],r11
  4233a8:	mov    DWORD PTR [rsp+0x20],eax
  4233ac:	call   0x41e3d0
  4233b1:	mov    r11,QWORD PTR [rsp+0x60]
  4233b6:	jmp    0x422fd2
  4233bb:	cmp    BYTE PTR [r12+0x429],0x0
  4233c4:	jne    0x423588
  4233ca:	mov    BYTE PTR [rsp+0x8f],0x7
  4233d2:	jmp    0x423114
  4233d7:	nop    WORD PTR [rax+rax*1+0x0]
  4233e0:	cmp    r11,r10
  4233e3:	jne    0x4234a0
  4233e9:	mov    r8d,ebx
  4233ec:	jmp    0x423358
  4233f1:	cmp    BYTE PTR [r11+0x2],0x28
  4233f6:	lea    r9,[r11+0x2]
  4233fa:	mov    rax,r9
  4233fd:	je     0x423409
  4233ff:	nop
  423400:	add    rax,0x1
  423404:	cmp    BYTE PTR [rax],0x28
  423407:	jne    0x423400
  423409:	lea    rdx,[rax+0x1]
  42340d:	mov    rax,QWORD PTR [rsp+0x40]
  423412:	mov    r8d,DWORD PTR [rax]
  423415:	mov    rax,rdx
  423418:	sub    rax,r9
  42341b:	add    r8,rcx
  42341e:	lea    rcx,[rdx+rax*1+0x1]
  423423:	cmp    r8,rcx
  423426:	jb     0x42342e
  423428:	not    rax
  42342b:	add    r8,rax
  42342e:	sub    r8,rdx
  423431:	mov    r9,rsi
  423434:	mov    rcx,rdi
  423437:	call   rbp
  423439:	test   al,al
  42343b:	jne    0x42301b
  423441:	lea    r8,[rip+0x25288]        # 0x4486d0
  423448:	mov    edx,0x3
  42344d:	mov    rcx,r12
  423450:	call   0x412860
  423455:	mov    rcx,QWORD PTR [rsp+0xb0]
  42345d:	call   0x43f100
  423462:	xor    eax,eax
  423464:	add    rsp,0x118
  42346b:	pop    rbx
  42346c:	pop    rsi
  42346d:	pop    rdi
  42346e:	pop    rbp
  42346f:	pop    r12
  423471:	pop    r13
  423473:	pop    r14
  423475:	pop    r15
  423477:	ret    
  423478:	nop    DWORD PTR [rax+rax*1+0x0]
  423480:	lea    r8,[rip+0x25899]        # 0x448d20
  423487:	mov    edx,0x3
  42348c:	mov    rcx,r12
  42348f:	call   0x412860
  423494:	jmp    0x42312d
  423499:	nop    DWORD PTR [rax+0x0]
  4234a0:	movzx  r9d,BYTE PTR [r11]
  4234a4:	lea    eax,[r9-0x30]
  4234a8:	cmp    eax,0x7
  4234ab:	jbe    0x423340
  4234b1:	mov    r8d,ebx
  4234b4:	mov    r10,r11
  4234b7:	jmp    0x423358
  4234bc:	mov    rcx,QWORD PTR [rsp+0x50]
  4234c1:	lea    rdx,[rip+0x2582f]        # 0x448cf7
  4234c8:	mov    r8d,r9d
  4234cb:	call   0x43f490
  4234d0:	mov    r9,QWORD PTR [rsp+0x50]
  4234d5:	lea    r8,[rip+0x25824]        # 0x448d00
  4234dc:	mov    edx,0x2
  4234e1:	mov    rcx,r12
  4234e4:	call   0x412660
  4234e9:	jmp    0x423114
  4234ee:	lea    r10,[rsp+0xa0]
  4234f6:	mov    r9d,eax
  4234f9:	mov    BYTE PTR [rsp+0xa5],al
  423500:	mov    r8d,0x1
  423506:	lea    rax,[r10+0x5]
  42350a:	lea    rdx,[rsp+0x90]
  423512:	add    r10,0x6
  423516:	mov    rcx,rdx
  423519:	jmp    0x423524
  42351b:	nop    DWORD PTR [rax+rax*1+0x0]
  423520:	movzx  r9d,BYTE PTR [rax]
  423524:	add    rax,0x1
  423528:	add    rcx,0x1
  42352c:	mov    BYTE PTR [rcx-0x1],r9b
  423530:	cmp    rax,r10
  423533:	jb     0x423520
  423535:	mov    r9,rsi
  423538:	mov    rcx,rdi
  42353b:	call   rbp
  42353d:	test   al,al
  42353f:	jne    0x4232f2
  423545:	lea    r8,[rip+0x25674]        # 0x448bc0
  42354c:	mov    edx,0x3
  423551:	mov    rcx,r12
  423554:	call   0x412860
  423559:	jmp    0x4232f2
  42355e:	lea    r11,[rcx+0x1]
  423562:	movzx  eax,BYTE PTR [rcx+0x1]
  423566:	jmp    0x422fba
  42356b:	movzx  eax,BYTE PTR [rcx+0x1]
  42356f:	lea    r11,[rcx+0x1]
  423573:	cmp    al,0x38
  423575:	jne    0x422fba
  42357b:	lea    r11,[rcx+0x2]
  42357f:	movzx  eax,BYTE PTR [rcx+0x2]
  423583:	jmp    0x422fba
  423588:	lea    r8,[rip+0x256e9]        # 0x448c78
  42358f:	mov    edx,0x6
  423594:	mov    rcx,r12
  423597:	call   0x412690
  42359c:	jmp    0x4233ca
  4235a1:	lea    r8,[rip+0x25648]        # 0x448bf0
  4235a8:	mov    edx,0x6
  4235ad:	mov    rcx,r12
  4235b0:	call   0x412690
  4235b5:	lea    r11,[rbx+0x2]
  4235b9:	cmp    r15,r11
  4235bc:	ja     0x423152
  4235c2:	lea    r8,[rip+0x257b7]        # 0x448d80
  4235c9:	mov    edx,0x3
  4235ce:	mov    rcx,r12
  4235d1:	mov    QWORD PTR [rsp+0x60],r11
  4235d6:	call   0x412660
  4235db:	mov    r11,QWORD PTR [rsp+0x60]
  4235e0:	jmp    0x422fd2
  4235e5:	lea    r8,[rip+0x256c4]        # 0x448cb0
  4235ec:	mov    edx,0x2
  4235f1:	mov    rcx,r12
  4235f4:	call   0x412660
  4235f9:	jmp    0x42330e
  4235fe:	lea    r8,[rip+0x25623]        # 0x448c28
  423605:	mov    edx,0x2
  42360a:	mov    rcx,r12
  42360d:	mov    QWORD PTR [rsp+0x60],r11
  423612:	call   0x412660
  423617:	and    ebx,DWORD PTR [rsp+0x7c]
  42361b:	mov    r11,QWORD PTR [rsp+0x60]
  423620:	jmp    0x4231ad
  423625:	lea    rax,[rcx-0x1]
  423629:	lea    rdx,[r10+0x6]
  42362d:	cmp    rax,rdx
  423630:	jb     0x42350a
  423636:	lea    rdx,[rsp+0x90]
  42363e:	jmp    0x423535
  423643:	lea    rsi,[rsp+0xb0]
  42364b:	jmp    0x42303a
  423650:	push   rbp
  423651:	push   rdi
  423652:	push   rsi
  423653:	push   rbx
  423654:	sub    rsp,0x38
  423658:	lea    rax,[rip+0xffffffffffffab91]        # 0x41e1f0
  42365f:	mov    rbp,QWORD PTR [rcx+0x1f0]
  423666:	mov    rdi,QWORD PTR [rcx+0x1f8]
  42366d:	mov    esi,DWORD PTR [rcx+0x200]
  423673:	mov    rbx,rcx
  423676:	mov    QWORD PTR [rcx+0x1f8],0xffffffffffffffff
  423681:	mov    QWORD PTR [rcx+0x1f0],rax
  423688:	mov    rax,QWORD PTR [rcx+0x478]
  42368f:	mov    DWORD PTR [rsp+0x20],0x3d
  423697:	mov    DWORD PTR [rcx+0x200],eax
  42369d:	call   0x422e80
  4236a2:	mov    QWORD PTR [rbx+0x1f0],rbp
  4236a9:	mov    QWORD PTR [rbx+0x1f8],rdi
  4236b0:	mov    DWORD PTR [rbx+0x200],esi
  4236b6:	add    rsp,0x38
  4236ba:	pop    rbx
  4236bb:	pop    rsi
  4236bc:	pop    rdi
  4236bd:	pop    rbp
  4236be:	ret    
  4236bf:	nop
  4236c0:	push   r15
  4236c2:	push   r14
  4236c4:	push   r13
  4236c6:	push   r12
  4236c8:	push   rbp
  4236c9:	push   rdi
  4236ca:	push   rsi
  4236cb:	push   rbx
  4236cc:	sub    rsp,0x88
  4236d3:	movzx  eax,BYTE PTR [rdx+0x4]
  4236d7:	mov    rdi,rdx
  4236da:	mov    rbp,rcx
  4236dd:	mov    r12,r8
  4236e0:	mov    r13,r9
  4236e3:	mov    DWORD PTR [rsp+0x50],0x0
  4236eb:	mov    QWORD PTR [rsp+0x58],0x0
  4236f4:	cmp    al,0x38
  4236f6:	setne  sil
  4236fa:	movzx  edx,sil
  4236fe:	add    edx,0x2
  423701:	cmp    edx,DWORD PTR [rdi+0x8]
  423704:	je     0x423a10
  42370a:	lea    rdx,[rdi+0x8]
  42370e:	lea    r9,[rsp+0x50]
  423713:	mov    DWORD PTR [rsp+0x20],eax
  423717:	mov    r8d,0x1
  42371d:	xor    ebx,ebx
  42371f:	call   0x422e80
  423724:	test   al,al
  423726:	je     0x42386a
  42372c:	test   sil,sil
  42372f:	je     0x423880
  423735:	movzx  eax,BYTE PTR [rdi+0x4]
  423739:	lea    rcx,[rsp+0x60]
  42373e:	mov    rdx,rbp
  423741:	mov    ebx,DWORD PTR [rsp+0x50]
  423745:	mov    r14,QWORD PTR [rsp+0x58]
  42374a:	mov    esi,0xffffffff
  42374f:	movzx  r15d,BYTE PTR [rbp+0x492]
  423757:	mov    r8d,eax
  42375a:	mov    DWORD PTR [rsp+0x48],eax
  42375e:	call   0x41df90
  423763:	movsxd rax,DWORD PTR [rsp+0x70]
  423768:	mov    r8,QWORD PTR [rbp+0x478]
  42376f:	mov    QWORD PTR [rsp+0x40],rsi
  423774:	cmp    rax,0x1f
  423778:	mov    DWORD PTR [rsp+0x4c],eax
  42377c:	mov    QWORD PTR [rsp+0x30],rax
  423781:	jbe    0x423990
  423787:	cmp    r8,0x1f
  42378b:	mov    r11d,0xffffffff
  423791:	jbe    0x423974
  423797:	mov    rax,QWORD PTR [rsp+0x30]
  42379c:	xor    edx,edx
  42379e:	mov    esi,ebx
  4237a0:	mov    r10,rsi
  4237a3:	mov    QWORD PTR [rsp+0x38],rsi
  4237a8:	div    r8
  4237ab:	lea    r9,[rax+rax*1]
  4237af:	sub    r10,r9
  4237b2:	test   rax,rax
  4237b5:	je     0x4237f2
  4237b7:	mov    ecx,r8d
  4237ba:	lea    r8,[r14+r10*1]
  4237be:	add    r10,rax
  4237c1:	mov    edx,r11d
  4237c4:	add    r10,r14
  4237c7:	xor    ebx,ebx
  4237c9:	mov    rsi,r8
  4237cc:	jmp    0x4237e6
  4237ce:	xchg   ax,ax
  4237d0:	movzx  eax,BYTE PTR [rsi]
  4237d3:	shl    ebx,cl
  4237d5:	and    eax,edx
  4237d7:	sub    r10,0x1
  4237db:	or     ebx,eax
  4237dd:	add    rsi,0x1
  4237e1:	cmp    r8,r10
  4237e4:	je     0x4237f4
  4237e6:	test   r15b,r15b
  4237e9:	jne    0x4237d0
  4237eb:	movzx  eax,BYTE PTR [r10-0x1]
  4237f0:	jmp    0x4237d3
  4237f2:	xor    ebx,ebx
  4237f4:	cmp    QWORD PTR [rsp+0x38],r9
  4237f9:	jbe    0x423811
  4237fb:	lea    r8,[rip+0x2572e]        # 0x448f30
  423802:	xor    edx,edx
  423804:	mov    rcx,rbp
  423807:	call   0x412660
  42380c:	mov    r14,QWORD PTR [rsp+0x58]
  423811:	mov    eax,DWORD PTR [rsp+0x48]
  423815:	sub    eax,0x3a
  423818:	cmp    QWORD PTR [rsp+0x30],0x1f
  42381e:	ja     0x423836
  423820:	cmp    eax,0x1
  423823:	jbe    0x423832
  423825:	cmp    BYTE PTR [rbp+0x491],0x0
  42382c:	je     0x423a30
  423832:	and    ebx,DWORD PTR [rsp+0x40]
  423836:	cmp    eax,0x1
  423839:	jbe    0x423a00
  42383f:	cmp    BYTE PTR [rbp+0x491],0x0
  423846:	jne    0x423a00
  42384c:	mov    DWORD PTR [r13+0x0],0x0
  423854:	mov    DWORD PTR [r12],0x1
  42385c:	cmp    QWORD PTR [rdi+0x10],r14
  423860:	je     0x42386a
  423862:	mov    rcx,r14
  423865:	call   0x43f100
  42386a:	mov    eax,ebx
  42386c:	add    rsp,0x88
  423873:	pop    rbx
  423874:	pop    rsi
  423875:	pop    rdi
  423876:	pop    rbp
  423877:	pop    r12
  423879:	pop    r13
  42387b:	pop    r14
  42387d:	pop    r15
  42387f:	ret    
  423880:	mov    r10,QWORD PTR [rbp+0x480]
  423887:	mov    rsi,QWORD PTR [rbp+0x478]
  42388e:	xor    edx,edx
  423890:	mov    r8d,DWORD PTR [rsp+0x50]
  423895:	mov    r14,QWORD PTR [rsp+0x58]
  42389a:	mov    r11d,0xffffffff
  4238a0:	mov    rax,r10
  4238a3:	div    rsi
  4238a6:	cmp    rsi,0x1f
  4238aa:	mov    r9,rax
  4238ad:	jbe    0x423960
  4238b3:	lea    r15d,[r8-0x1]
  4238b7:	test   r15d,r15d
  4238ba:	mov    rax,r15
  4238bd:	je     0x423aba
  4238c3:	mov    rdx,r14
  4238c6:	lea    rax,[r14+r15*1]
  4238ca:	xor    ebx,ebx
  4238cc:	mov    rcx,rsi
  4238cf:	jmp    0x4238df
  4238d1:	shl    ebx,cl
  4238d3:	add    rdx,0x1
  4238d7:	or     ebx,r8d
  4238da:	cmp    rdx,rax
  4238dd:	je     0x4238f8
  4238df:	movzx  r8d,BYTE PTR [rdx]
  4238e3:	and    r8d,r11d
  4238e6:	cmp    rcx,0x1f
  4238ea:	jbe    0x4238d1
  4238ec:	add    rdx,0x1
  4238f0:	mov    ebx,r8d
  4238f3:	cmp    rdx,rax
  4238f6:	jne    0x4238df
  4238f8:	cmp    r9,r15
  4238fb:	mov    rsi,rcx
  4238fe:	jb     0x4239c0
  423904:	cmp    r15,0x1
  423908:	je     0x423a50
  42390e:	cmp    BYTE PTR [rbp+0x428],0x0
  423915:	jne    0x423a90
  42391b:	mov    rsi,r10
  42391e:	xor    edx,edx
  423920:	cmp    rsi,0x1f
  423924:	mov    eax,r15d
  423927:	ja     0x423952
  423929:	mov    eax,0x1
  42392e:	mov    ecx,esi
  423930:	shl    eax,cl
  423932:	lea    edx,[rax-0x1]
  423935:	mov    eax,r15d
  423938:	nop    DWORD PTR [rax+rax*1+0x0]
  423940:	sub    esi,0x1
  423943:	bt     ebx,esi
  423946:	jae    0x423ab5
  42394c:	not    edx
  42394e:	or     ebx,edx
  423950:	xor    edx,edx
  423952:	mov    DWORD PTR [r12],eax
  423956:	mov    DWORD PTR [r13+0x0],edx
  42395a:	jmp    0x42385c
  42395f:	nop
  423960:	mov    r11d,0x1
  423966:	mov    ecx,esi
  423968:	shl    r11,cl
  42396b:	sub    r11,0x1
  42396f:	jmp    0x4238b3
  423974:	mov    edx,0x1
  423979:	mov    ecx,r8d
  42397c:	shl    rdx,cl
  42397f:	lea    r11,[rdx-0x1]
  423983:	jmp    0x423797
  423988:	nop    DWORD PTR [rax+rax*1+0x0]
  423990:	movzx  ecx,BYTE PTR [rsp+0x4c]
  423995:	mov    eax,0x1
  42399a:	mov    r11d,0xffffffff
  4239a0:	shl    rax,cl
  4239a3:	sub    rax,0x1
  4239a7:	cmp    r8,0x1f
  4239ab:	mov    QWORD PTR [rsp+0x40],rax
  4239b0:	ja     0x423797
  4239b6:	jmp    0x423974
  4239b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4239c0:	lea    r8,[rip+0x25569]        # 0x448f30
  4239c7:	xor    edx,edx
  4239c9:	mov    rcx,rbp
  4239cc:	mov    QWORD PTR [rsp+0x30],r9
  4239d1:	call   0x412660
  4239d6:	mov    r9,QWORD PTR [rsp+0x30]
  4239db:	cmp    r9,0x1
  4239df:	jbe    0x423abe
  4239e5:	mov    r14,QWORD PTR [rsp+0x58]
  4239ea:	mov    rsi,QWORD PTR [rbp+0x480]
  4239f1:	mov    r15,r9
  4239f4:	jmp    0x42391e
  4239f9:	nop    DWORD PTR [rax+0x0]
  423a00:	mov    DWORD PTR [r13+0x0],0x1
  423a08:	jmp    0x423854
  423a0d:	nop    DWORD PTR [rax]
  423a10:	lea    r8,[rip+0x254f9]        # 0x448f10
  423a17:	mov    edx,0x3
  423a1c:	xor    ebx,ebx
  423a1e:	call   0x412660
  423a23:	jmp    0x42386a
  423a28:	nop    DWORD PTR [rax+rax*1+0x0]
  423a30:	mov    edx,DWORD PTR [rsp+0x4c]
  423a34:	sub    edx,0x1
  423a37:	bt     ebx,edx
  423a3a:	jae    0x423832
  423a40:	mov    eax,DWORD PTR [rsp+0x40]
  423a44:	not    eax
  423a46:	or     ebx,eax
  423a48:	jmp    0x42384c
  423a4d:	nop    DWORD PTR [rax]
  423a50:	mov    eax,0x1
  423a55:	cmp    rsi,0x1f
  423a59:	movzx  r8d,BYTE PTR [rbp+0x490]
  423a61:	ja     0x423a7a
  423a63:	mov    edx,0x1
  423a68:	mov    ecx,esi
  423a6a:	shl    edx,cl
  423a6c:	sub    edx,0x1
  423a6f:	test   r8b,r8b
  423a72:	je     0x423940
  423a78:	and    ebx,edx
  423a7a:	movzx  edx,r8b
  423a7e:	mov    DWORD PTR [r12],eax
  423a82:	mov    DWORD PTR [r13+0x0],edx
  423a86:	jmp    0x42385c
  423a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  423a90:	lea    r8,[rip+0x254c9]        # 0x448f60
  423a97:	mov    edx,0x5
  423a9c:	mov    rcx,rbp
  423a9f:	call   0x412690
  423aa4:	mov    r10,QWORD PTR [rbp+0x480]
  423aab:	mov    r14,QWORD PTR [rsp+0x58]
  423ab0:	jmp    0x42391b
  423ab5:	xor    r8d,r8d
  423ab8:	jmp    0x423a78
  423aba:	xor    ebx,ebx
  423abc:	jmp    0x423a55
  423abe:	mov    eax,r9d
  423ac1:	mov    r14,QWORD PTR [rsp+0x58]
  423ac6:	jmp    0x423a55
  423ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  423ad0:	push   rbp
  423ad1:	push   r15
  423ad3:	push   r14
  423ad5:	push   r13
  423ad7:	push   r12
  423ad9:	push   rdi
  423ada:	push   rsi
  423adb:	push   rbx
  423adc:	sub    rsp,0x48
  423ae0:	lea    rbp,[rsp+0x80]
  423ae8:	lea    rax,[r8+0x1f]
  423aec:	mov    r10,rdx
  423aef:	mov    QWORD PTR [rbp+0x10],rcx
  423af3:	and    rax,0xfffffffffffffff0
  423af7:	call   0x439cf0
  423afc:	sub    rsp,rax
  423aff:	test   r8,r8
  423b02:	lea    rdi,[rsp+0x20]
  423b07:	je     0x423cd9
  423b0d:	lea    rax,[rbp-0x50]
  423b11:	mov    rbx,rdi
  423b14:	xor    ecx,ecx
  423b16:	mov    rdx,QWORD PTR [rip+0x2dac3]        # 0x4515e0
  423b1d:	mov    r12,QWORD PTR [rip+0x2da8c]        # 0x4515b0
  423b24:	mov    QWORD PTR [rbp-0x58],rax
  423b28:	jmp    0x423b43
  423b2a:	nop    WORD PTR [rax+rax*1+0x0]
  423b30:	mov    BYTE PTR [rbx],al
  423b32:	add    rcx,0x1
  423b36:	add    rbx,0x1
  423b3a:	cmp    r8,rcx
  423b3d:	jbe    0x423c4f
  423b43:	movzx  eax,BYTE PTR [r10+rcx*1]
  423b48:	cmp    al,0x5c
  423b4a:	jne    0x423b30
  423b4c:	xor    r9d,r9d
  423b4f:	cmp    BYTE PTR [r10+rcx*1+0x1],0x75
  423b55:	mov    r14,rdi
  423b58:	lea    rsi,[rcx+0x2]
  423b5c:	lea    rax,[rcx+0x1]
  423b60:	setne  r9b
  423b64:	sub    r14,rbx
  423b67:	add    r14,r8
  423b6a:	cmp    r8,rsi
  423b6d:	lea    r9d,[r9*4+0x4]
  423b75:	jbe    0x423c7f
  423b7b:	movzx  r11d,BYTE PTR [r10+rcx*1+0x2]
  423b81:	test   BYTE PTR [rdx+r11*2+0x1],0x1
  423b87:	je     0x423c7f
  423b8d:	xor    eax,eax
  423b8f:	jmp    0x423b94
  423b91:	mov    rsi,rcx
  423b94:	movzx  ecx,BYTE PTR [r12+r11*1]
  423b99:	shl    eax,0x4
  423b9c:	sub    r9d,0x1
  423ba0:	add    eax,ecx
  423ba2:	lea    rcx,[rsi+0x1]
  423ba6:	cmp    r8,rcx
  423ba9:	jbe    0x423bbd
  423bab:	test   r9d,r9d
  423bae:	je     0x423bbd
  423bb0:	movzx  r11d,BYTE PTR [r10+rcx*1]
  423bb5:	test   BYTE PTR [rdx+r11*2+0x1],0x1
  423bbb:	jne    0x423b91
  423bbd:	cmp    eax,0x24
  423bc0:	jne    0x423bd0
  423bc2:	mov    BYTE PTR [rbx],0x24
  423bc5:	add    rbx,0x1
  423bc9:	jmp    0x423b3a
  423bce:	xchg   ax,ax
  423bd0:	cmp    eax,0x7f
  423bd3:	jbe    0x423c84
  423bd9:	mov    rsi,QWORD PTR [rbp-0x58]
  423bdd:	mov    r11d,0x1
  423be3:	lea    r15,[rip+0x253c6]        # 0x448fb0
  423bea:	lea    r9,[rsi+0x6]
  423bee:	jmp    0x423bf3
  423bf0:	mov    r11,rsi
  423bf3:	mov    esi,eax
  423bf5:	shr    eax,0x6
  423bf8:	sub    r9,0x1
  423bfc:	and    esi,0x3f
  423bff:	or     esi,0xffffff80
  423c02:	cmp    eax,0x3e
  423c05:	mov    BYTE PTR [r9],sil
  423c08:	lea    rsi,[r11+0x1]
  423c0c:	ja     0x423bf0
  423c0e:	movzx  r13d,BYTE PTR [r15+r11*1+0x1]
  423c14:	test   r13d,eax
  423c17:	jne    0x423bf0
  423c19:	lea    r13,[rip+0x2538b]        # 0x448fab
  423c20:	or     al,BYTE PTR [r13+r11*1+0x0]
  423c25:	cmp    r14,rsi
  423c28:	mov    BYTE PTR [r9-0x1],al
  423c2c:	jae    0x423c9a
  423c2e:	call   QWORD PTR [rip+0x37a28]        # 0x45b65c
  423c34:	mov    rcx,QWORD PTR [rbp+0x10]
  423c38:	lea    r8,[rip+0x25119]        # 0x448d58
  423c3f:	mov    DWORD PTR [rax],0x7
  423c45:	mov    edx,0x3
  423c4a:	call   0x412860
  423c4f:	sub    rbx,rdi
  423c52:	mov    r8,rbx
  423c55:	mov    rax,QWORD PTR [rbp+0x10]
  423c59:	mov    r9d,0x1
  423c5f:	mov    rdx,rdi
  423c62:	mov    rcx,QWORD PTR [rax+0x3f8]
  423c69:	call   0x41da20
  423c6e:	lea    rsp,[rbp-0x38]
  423c72:	pop    rbx
  423c73:	pop    rsi
  423c74:	pop    rdi
  423c75:	pop    r12
  423c77:	pop    r13
  423c79:	pop    r14
  423c7b:	pop    r15
  423c7d:	pop    rbp
  423c7e:	ret    
  423c7f:	mov    rsi,rax
  423c82:	xor    eax,eax
  423c84:	test   r14,r14
  423c87:	mov    BYTE PTR [rbp-0x4b],al
  423c8a:	je     0x423c2e
  423c8c:	lea    rcx,[rsi+0x1]
  423c90:	mov    rsi,QWORD PTR [rbp-0x58]
  423c94:	lea    r9,[rsi+0x5]
  423c98:	jmp    0x423caf
  423c9a:	mov    rsi,QWORD PTR [rbp-0x58]
  423c9e:	sub    r9,0x1
  423ca2:	lea    r11,[rsi+0x6]
  423ca6:	cmp    r9,r11
  423ca9:	jae    0x423b3a
  423caf:	mov    rsi,QWORD PTR [rbp-0x58]
  423cb3:	lea    r11,[rsi+0x6]
  423cb7:	jmp    0x423cc4
  423cb9:	nop    DWORD PTR [rax+0x0]
  423cc0:	movzx  eax,BYTE PTR [r9]
  423cc4:	add    r9,0x1
  423cc8:	add    rbx,0x1
  423ccc:	mov    BYTE PTR [rbx-0x1],al
  423ccf:	cmp    r9,r11
  423cd2:	jb     0x423cc0
  423cd4:	jmp    0x423b3a
  423cd9:	xor    r8d,r8d
  423cdc:	jmp    0x423c55
  423ce1:	nop    DWORD PTR [rax+rax*1+0x0]
  423ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423cf0:	push   r14
  423cf2:	push   r13
  423cf4:	push   r12
  423cf6:	push   rbp
  423cf7:	push   rdi
  423cf8:	push   rsi
  423cf9:	push   rbx
  423cfa:	sub    rsp,0x70
  423cfe:	mov    rbx,QWORD PTR [rsp+0xd0]
  423d06:	mov    rdi,QWORD PTR [rsp+0xe0]
  423d0e:	mov    r13,rcx
  423d11:	mov    rsi,r8
  423d14:	lea    rcx,[rsp+0x30]
  423d19:	lea    r8,[rip+0x24955]        # 0x448675
  423d20:	mov    rbp,r9
  423d23:	mov    r9,rdx
  423d26:	mov    rdx,r13
  423d29:	call   0x41e250
  423d2e:	mov    r12,QWORD PTR [rsp+0x30]
  423d33:	lea    rax,[rip+0xffffffffffffa4b6]        # 0x41e1f0
  423d3a:	mov    r14,QWORD PTR [rsp+0x38]
  423d3f:	cmp    r12,rax
  423d42:	je     0x423e90
  423d48:	cmp    rbx,0x10000
  423d4f:	mov    eax,0x10000
  423d54:	cmovae rax,rbx
  423d58:	mov    rcx,rax
  423d5b:	mov    QWORD PTR [rsp+0x58],rax
  423d60:	call   0x4385d0
  423d65:	mov    QWORD PTR [rsp+0x60],0x0
  423d6e:	mov    QWORD PTR [rsp+0x50],rax
  423d73:	lea    r9,[rsp+0x50]
  423d78:	mov    r8,rbx
  423d7b:	mov    rdx,rsi
  423d7e:	mov    rcx,r14
  423d81:	call   r12
  423d84:	test   al,al
  423d86:	je     0x423e60
  423d8c:	mov    rcx,rsi
  423d8f:	call   0x43f100
  423d94:	lea    rax,[rip+0xffffffffffffa2c5]        # 0x41e060
  423d9b:	cmp    r12,rax
  423d9e:	je     0x423ec0
  423da4:	mov    r10,QWORD PTR [rsp+0x60]
  423da9:	mov    r9,QWORD PTR [rsp+0x58]
  423dae:	mov    rcx,QWORD PTR [rsp+0x50]
  423db3:	lea    rax,[r10+0x1000]
  423dba:	lea    rdx,[r10+0x10]
  423dbe:	cmp    rax,r9
  423dc1:	jb     0x423e30
  423dc3:	cmp    rdx,r9
  423dc6:	ja     0x423e30
  423dc8:	add    r10,rcx
  423dcb:	mov    QWORD PTR [r10],0x0
  423dd2:	mov    QWORD PTR [r10+0x8],0x0
  423dda:	mov    rax,QWORD PTR [rsp+0x60]
  423ddf:	mov    rdx,QWORD PTR [rsp+0x50]
  423de4:	test   rax,rax
  423de7:	je     0x423df4
  423de9:	cmp    BYTE PTR [rdx+rax*1-0x1],0xd
  423dee:	je     0x423eb0
  423df4:	mov    BYTE PTR [rdx+rax*1],0xa
  423df8:	mov    rcx,QWORD PTR [rsp+0x60]
  423dfd:	mov    rdx,QWORD PTR [rsp+0x50]
  423e02:	cmp    rcx,0x2
  423e06:	mov    QWORD PTR [rdi],rcx
  423e09:	mov    rax,rdx
  423e0c:	jbe    0x423e13
  423e0e:	cmp    BYTE PTR [rdx],0xef
  423e11:	je     0x423e44
  423e13:	mov    rcx,QWORD PTR [rsp+0xd8]
  423e1b:	mov    QWORD PTR [rcx],rdx
  423e1e:	add    rsp,0x70
  423e22:	pop    rbx
  423e23:	pop    rsi
  423e24:	pop    rdi
  423e25:	pop    rbp
  423e26:	pop    r12
  423e28:	pop    r13
  423e2a:	pop    r14
  423e2c:	ret    
  423e2d:	nop    DWORD PTR [rax]
  423e30:	call   0x438650
  423e35:	mov    r10,QWORD PTR [rsp+0x60]
  423e3a:	mov    QWORD PTR [rsp+0x50],rax
  423e3f:	mov    rcx,rax
  423e42:	jmp    0x423dc8
  423e44:	cmp    BYTE PTR [rdx+0x1],0xbb
  423e48:	jne    0x423e13
  423e4a:	cmp    BYTE PTR [rdx+0x2],0xbf
  423e4e:	jne    0x423e13
  423e50:	sub    rcx,0x3
  423e54:	lea    rax,[rdx+0x3]
  423e58:	mov    QWORD PTR [rdi],rcx
  423e5b:	jmp    0x423e13
  423e5d:	nop    DWORD PTR [rax]
  423e60:	lea    rax,[rip+0x2480e]        # 0x448675
  423e67:	mov    r9,QWORD PTR [r13+0x458]
  423e6e:	lea    r8,[rip+0x2510e]        # 0x448f83
  423e75:	mov    edx,0x3
  423e7a:	mov    rcx,r13
  423e7d:	mov    QWORD PTR [rsp+0x20],rax
  423e82:	call   0x412660
  423e87:	jmp    0x423d8c
  423e8c:	nop    DWORD PTR [rax+0x0]
  423e90:	mov    QWORD PTR [rsp+0x50],rsi
  423e95:	mov    QWORD PTR [rsp+0x58],rbp
  423e9a:	mov    rcx,rsi
  423e9d:	mov    QWORD PTR [rsp+0x60],rbx
  423ea2:	mov    r9,rbp
  423ea5:	mov    r10,rbx
  423ea8:	jmp    0x423db3
  423ead:	nop    DWORD PTR [rax]
  423eb0:	mov    BYTE PTR [rdx+rax*1],0xd
  423eb4:	jmp    0x423df8
  423eb9:	nop    DWORD PTR [rax+0x0]
  423ec0:	mov    rcx,r14
  423ec3:	call   0x424b28
  423ec8:	jmp    0x423da4
  423ecd:	nop    DWORD PTR [rax]
  423ed0:	lea    rax,[rip+0x2479e]        # 0x448675
  423ed7:	ret    
  423ed8:	nop
  423ed9:	nop
  423eda:	nop
  423edb:	nop
  423edc:	nop
  423edd:	nop
  423ede:	nop
  423edf:	nop
  423ee0:	push   rbp
  423ee1:	push   rdi
  423ee2:	push   rsi
  423ee3:	push   rbx
  423ee4:	sub    rsp,0x28
  423ee8:	lea    rbp,[rsp+0x80]
  423ef0:	mov    rbx,rcx
  423ef3:	call   0x41bb80
  423ef8:	cmp    BYTE PTR [rax+0x4],0x25
  423efc:	je     0x423f15
  423efe:	mov    edx,0x1
  423f03:	mov    rcx,rbx
  423f06:	call   0x40a7d0
  423f0b:	nop
  423f0c:	lea    rsp,[rbp-0x58]
  423f10:	pop    rbx
  423f11:	pop    rsi
  423f12:	pop    rdi
  423f13:	pop    rbp
  423f14:	ret    
  423f15:	mov    rcx,rbx
  423f18:	call   0x41bb80
  423f1d:	cmp    BYTE PTR [rax+0x4],0x37
  423f21:	je     0x423f40
  423f23:	mov    edx,0x2
  423f28:	mov    rcx,rbx
  423f2b:	call   0x40a7d0
  423f30:	nop
  423f31:	lea    rsp,[rbp-0x58]
  423f35:	pop    rbx
  423f36:	pop    rsi
  423f37:	pop    rdi
  423f38:	pop    rbp
  423f39:	ret    
  423f3a:	nop    WORD PTR [rax+rax*1+0x0]
  423f40:	mov    rcx,rbx
  423f43:	call   0x41bb80
  423f48:	cmp    BYTE PTR [rax+0x4],0x3d
  423f4c:	mov    rsi,rax
  423f4f:	jne    0x423fe0
  423f55:	mov    r8d,DWORD PTR [rax+0x8]
  423f59:	cmp    r8d,0x4
  423f5d:	jbe    0x423fe0
  423f63:	mov    r9,QWORD PTR [rax+0x10]
  423f67:	lea    eax,[r8-0x2]
  423f6b:	movzx  eax,BYTE PTR [r9+rax*1]
  423f70:	cmp    al,0x5c
  423f72:	je     0x423f78
  423f74:	cmp    al,0x2f
  423f76:	jne    0x423fe0
  423f78:	lea    eax,[r8-0x3]
  423f7c:	movzx  edx,BYTE PTR [r9+rax*1]
  423f81:	cmp    dl,0x5c
  423f84:	je     0x423f8b
  423f86:	cmp    dl,0x2f
  423f89:	jne    0x423fe0
  423f8b:	mov    rdi,QWORD PTR [rbx+0x378]
  423f92:	test   rdi,rdi
  423f95:	je     0x423f0c
  423f9b:	add    rax,0x1e
  423f9f:	shr    rax,0x4
  423fa3:	shl    rax,0x4
  423fa7:	call   0x439cf0
  423fac:	sub    rsp,rax
  423faf:	lea    rdx,[r9+0x1]
  423fb3:	sub    r8d,0x4
  423fb7:	lea    r10,[rsp+0x20]
  423fbc:	mov    rcx,r10
  423fbf:	call   0x43f0a8
  423fc4:	mov    r10,rax
  423fc7:	mov    eax,DWORD PTR [rsi+0x8]
  423fca:	mov    rcx,rbx
  423fcd:	mov    rdx,r10
  423fd0:	sub    eax,0x4
  423fd3:	mov    BYTE PTR [r10+rax*1],0x0
  423fd8:	call   rdi
  423fda:	jmp    0x423f0c
  423fdf:	nop
  423fe0:	mov    edx,0x3
  423fe5:	mov    rcx,rbx
  423fe8:	call   0x40a7d0
  423fed:	nop
  423fee:	lea    rsp,[rbp-0x58]
  423ff2:	pop    rbx
  423ff3:	pop    rsi
  423ff4:	pop    rdi
  423ff5:	pop    rbp
  423ff6:	ret    
  423ff7:	nop    WORD PTR [rax+rax*1+0x0]
  424000:	mov    DWORD PTR [rcx+0x414],edx
  424006:	movsxd rdx,edx
  424009:	lea    rax,[rdx+rdx*2]
  42400d:	lea    rax,[rdx+rax*4]
  424011:	lea    rdx,[rip+0x28e28]        # 0x44ce40
  424018:	add    rax,rdx
  42401b:	movzx  edx,BYTE PTR [rax]
  42401e:	mov    BYTE PTR [rcx+0x435],dl
  424024:	movzx  edx,BYTE PTR [rax+0x1]
  424028:	mov    BYTE PTR [rcx+0x418],dl
  42402e:	movzx  edx,BYTE PTR [rax+0x2]
  424032:	mov    BYTE PTR [rcx+0x41f],dl
  424038:	movzx  edx,BYTE PTR [rax+0x3]
  42403c:	mov    BYTE PTR [rcx+0x431],dl
  424042:	movzx  edx,BYTE PTR [rax+0x4]
  424046:	mov    BYTE PTR [rcx+0x441],dl
  42404c:	movzx  edx,BYTE PTR [rax+0x5]
  424050:	mov    BYTE PTR [rcx+0x436],dl
  424056:	mov    BYTE PTR [rcx+0x41d],dl
  42405c:	movzx  edx,BYTE PTR [rax+0x6]
  424060:	mov    BYTE PTR [rcx+0x419],dl
  424066:	movzx  edx,BYTE PTR [rax+0x7]
  42406a:	mov    BYTE PTR [rcx+0x41e],dl
  424070:	movzx  edx,BYTE PTR [rax+0x8]
  424074:	mov    BYTE PTR [rcx+0x420],dl
  42407a:	movzx  edx,BYTE PTR [rax+0x9]
  42407e:	mov    BYTE PTR [rcx+0x421],dl
  424084:	movzx  edx,BYTE PTR [rax+0xa]
  424088:	mov    BYTE PTR [rcx+0x43e],dl
  42408e:	movzx  edx,BYTE PTR [rax+0xb]
  424092:	movzx  eax,BYTE PTR [rax+0xc]
  424096:	mov    BYTE PTR [rcx+0x442],dl
  42409c:	mov    BYTE PTR [rcx+0x443],al
  4240a2:	ret    
  4240a3:	nop    DWORD PTR [rax]
  4240a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4240b0:	push   r13
  4240b2:	push   r12
  4240b4:	push   rbp
  4240b5:	push   rdi
  4240b6:	push   rsi
  4240b7:	push   rbx
  4240b8:	sub    rsp,0x38
  4240bc:	mov    rsi,rdx
  4240bf:	mov    edx,DWORD PTR [rip+0x353bb]        # 0x459480
  4240c5:	mov    ebp,ecx
  4240c7:	mov    r12,r8
  4240ca:	test   edx,edx
  4240cc:	jne    0x42411c
  4240ce:	mov    DWORD PTR [rip+0x353a8],0x1        # 0x459480
  4240d8:	call   0x419560
  4240dd:	mov    BYTE PTR [rip+0x352d9],0x23        # 0x4593bd
  4240e4:	mov    BYTE PTR [rip+0x352be],0x5d        # 0x4593a9
  4240eb:	mov    BYTE PTR [rip+0x352af],0x7c        # 0x4593a1
  4240f2:	mov    BYTE PTR [rip+0x352af],0x5b        # 0x4593a8
  4240f9:	mov    BYTE PTR [rip+0x352a7],0x5e        # 0x4593a7
  424100:	mov    BYTE PTR [rip+0x352b7],0x7d        # 0x4593be
  424107:	mov    BYTE PTR [rip+0x352a1],0x5c        # 0x4593af
  42410e:	mov    BYTE PTR [rip+0x352a7],0x7b        # 0x4593bc
  424115:	mov    BYTE PTR [rip+0x35291],0x7e        # 0x4593ad
  42411c:	mov    edx,0x538
  424121:	mov    ecx,0x1
  424126:	call   0x438600
  42412b:	lea    r13,[rax+0x50]
  42412f:	lea    rdi,[rax+0x58]
  424133:	mov    rbx,rax
  424136:	mov    QWORD PTR [rax+0x50],0x0
  42413e:	mov    QWORD PTR [rax+0x80],0x0
  424149:	mov    edx,ebp
  42414b:	and    rdi,0xfffffffffffffff8
  42414f:	mov    rax,r13
  424152:	sub    rax,rdi
  424155:	add    eax,0x38
  424158:	shr    eax,0x3
  42415b:	mov    ecx,eax
  42415d:	xor    eax,eax
  42415f:	rep stos QWORD PTR es:[rdi],rax
  424162:	mov    rcx,rbx
  424165:	lea    rdi,[rbx+0x1b0]
  42416c:	call   0x424000
  424171:	mov    BYTE PTR [rbx+0x428],0x1
  424178:	mov    BYTE PTR [rbx+0x41b],0x1
  42417f:	mov    BYTE PTR [rbx+0x41c],0x1
  424186:	mov    DWORD PTR [rbx+0x410],0x8
  424190:	mov    BYTE PTR [rbx+0x43b],0x1
  424197:	mov    BYTE PTR [rbx+0x427],0x2
  42419e:	mov    BYTE PTR [rbx+0x42b],0x1
  4241a5:	mov    BYTE PTR [rbx+0x423],0x1
  4241ac:	mov    BYTE PTR [rbx+0x42a],0x0
  4241b3:	mov    BYTE PTR [rbx+0x430],0x1
  4241ba:	mov    BYTE PTR [rbx+0x432],0x1
  4241c1:	mov    BYTE PTR [rbx+0x42d],0x1
  4241c8:	mov    BYTE PTR [rbx+0x42e],0x1
  4241cf:	mov    BYTE PTR [rbx+0x43a],0x2
  4241d6:	mov    DWORD PTR [rbx+0x460],0x1
  4241e0:	mov    BYTE PTR [rbx+0x43f],0x1
  4241e7:	mov    BYTE PTR [rbx+0x495],0x1
  4241ee:	mov    BYTE PTR [rbx+0x440],0x1
  4241f5:	mov    BYTE PTR [rbx+0x425],0x0
  4241fc:	mov    QWORD PTR [rbx+0x470],0x20
  424207:	mov    QWORD PTR [rbx+0x478],0x8
  424212:	mov    QWORD PTR [rbx+0x488],0x20
  42421d:	mov    QWORD PTR [rbx+0x480],0x20
  424228:	mov    BYTE PTR [rbx+0x490],0x0
  42422f:	mov    BYTE PTR [rbx+0x491],0x1
  424236:	mov    BYTE PTR [rbx+0x492],0x1
  42423d:	call   0x423ed0
  424242:	mov    QWORD PTR [rbx+0x450],0x0
  42424d:	mov    QWORD PTR [rbx+0x448],rax
  424254:	call   0x423ed0
  424259:	cmp    BYTE PTR [rbx+0x41b],0x0
  424260:	mov    QWORD PTR [rbx+0x458],rax
  424267:	lea    rax,[rip+0x28892]        # 0x44cb00
  42426e:	mov    rcx,rdi
  424271:	mov    edx,0xfa
  424276:	mov    QWORD PTR [rbx+0x28],r12
  42427a:	mov    QWORD PTR [rbx+0xd0],rax
  424281:	mov    BYTE PTR [rbx+0x27c],0x51
  424288:	mov    QWORD PTR [rbx+0x280],0x0
  424293:	mov    BYTE PTR [rbx+0x294],0x16
  42429a:	sete   BYTE PTR [rbx+0x15]
  42429e:	xor    eax,eax
  4242a0:	mov    WORD PTR [rbx+0x296],ax
  4242a7:	call   0x419e90
  4242ac:	mov    rax,QWORD PTR [rbx+0x1c0]
  4242b3:	xor    edx,edx
  4242b5:	mov    rcx,rbx
  4242b8:	mov    QWORD PTR [rbx+0x1d0],rdi
  4242bf:	mov    QWORD PTR [rbx+0x88],r13
  4242c6:	mov    QWORD PTR [rbx+0x78],0x0
  4242ce:	mov    QWORD PTR [rbx+0x50],0x0
  4242d6:	mov    QWORD PTR [rbx+0x1a8],rax
  4242dd:	mov    QWORD PTR [rbx+0x58],0x0
  4242e5:	call   0x41a9c0
  4242ea:	xor    edx,edx
  4242ec:	mov    rcx,rbx
  4242ef:	mov    QWORD PTR [rbx+0x38],rax
  4242f3:	call   0x41a9c0
  4242f8:	mov    rcx,rbx
  4242fb:	mov    QWORD PTR [rbx+0x40],rax
  4242ff:	mov    QWORD PTR [rbx+0x528],0x0
  42430a:	mov    QWORD PTR [rbx+0x530],0x0
  424315:	call   0x4147c0
  42431a:	mov    rax,QWORD PTR [rip+0x2d30f]        # 0x451630
  424321:	lea    r9,[rip+0x142a8]        # 0x4385d0
  424328:	lea    rcx,[rbx+0x308]
  42432f:	xor    r8d,r8d
  424332:	xor    edx,edx
  424334:	mov    QWORD PTR [rsp+0x20],rax
  424339:	call   0x438120
  42433e:	mov    rcx,rbx
  424341:	call   0x4183e0
  424346:	mov    rdx,rsi
  424349:	mov    rcx,rbx
  42434c:	call   0x418d00
  424351:	mov    rax,rbx
  424354:	add    rsp,0x38
  424358:	pop    rbx
  424359:	pop    rsi
  42435a:	pop    rdi
  42435b:	pop    rbp
  42435c:	pop    r12
  42435e:	pop    r13
  424360:	ret    
  424361:	nop    DWORD PTR [rax+rax*1+0x0]
  424366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424370:	mov    QWORD PTR [rcx+0x28],rdx
  424374:	ret    
  424375:	nop
  424376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424380:	push   rbp
  424381:	push   rdi
  424382:	push   rsi
  424383:	push   rbx
  424384:	sub    rsp,0x28
  424388:	mov    rbx,rcx
  42438b:	mov    rcx,QWORD PTR [rcx+0x400]
  424392:	call   0x43f100
  424397:	cmp    QWORD PTR [rbx],0x0
  42439b:	je     0x4243ae
  42439d:	nop    DWORD PTR [rax]
  4243a0:	mov    rcx,rbx
  4243a3:	call   0x411b00
  4243a8:	cmp    QWORD PTR [rbx],0x0
  4243ac:	jne    0x4243a0
  4243ae:	mov    rcx,QWORD PTR [rbx+0x4d0]
  4243b5:	call   0x43f100
  4243ba:	mov    rcx,QWORD PTR [rbx+0x1e0]
  4243c1:	test   rcx,rcx
  4243c4:	je     0x4243e0
  4243c6:	call   0x43f100
  4243cb:	mov    QWORD PTR [rbx+0x1e0],0x0
  4243d6:	mov    DWORD PTR [rbx+0x1e8],0x0
  4243e0:	mov    rcx,QWORD PTR [rbx+0x2a8]
  4243e7:	test   rcx,rcx
  4243ea:	je     0x4243f1
  4243ec:	call   0x41cee0
  4243f1:	lea    rcx,[rbx+0x308]
  4243f8:	xor    edx,edx
  4243fa:	lea    rbp,[rbx+0x1b0]
  424401:	call   0x438480
  424406:	mov    rcx,rbx
  424409:	call   0x418e70
  42440e:	mov    rcx,rbx
  424411:	call   0x4184d0
  424416:	mov    rcx,rbx
  424419:	call   0x41eff0
  42441e:	mov    rcx,QWORD PTR [rbx+0x38]
  424422:	call   0x41abb0
  424427:	mov    rcx,QWORD PTR [rbx+0x40]
  42442b:	call   0x41abb0
  424430:	mov    rcx,QWORD PTR [rbx+0x48]
  424434:	call   0x41abb0
  424439:	mov    rcx,QWORD PTR [rbx+0x1c0]
  424440:	mov    rsi,QWORD PTR [rbx+0x1b0]
  424447:	call   0x43f100
  42444c:	jmp    0x42446c
  42444e:	xchg   ax,ax
  424450:	mov    rcx,QWORD PTR [rsi+0x10]
  424454:	mov    rdi,QWORD PTR [rsi]
  424457:	call   0x43f100
  42445c:	cmp    rbp,rsi
  42445f:	je     0x424469
  424461:	mov    rcx,rsi
  424464:	call   0x43f100
  424469:	mov    rsi,rdi
  42446c:	test   rsi,rsi
  42446f:	jne    0x424450
  424471:	mov    rcx,QWORD PTR [rbx+0x50]
  424475:	test   rcx,rcx
  424478:	je     0x424490
  42447a:	nop    WORD PTR [rax+rax*1+0x0]
  424480:	mov    rsi,QWORD PTR [rcx]
  424483:	call   0x43f100
  424488:	test   rsi,rsi
  42448b:	mov    rcx,rsi
  42448e:	jne    0x424480
  424490:	mov    rcx,QWORD PTR [rbx+0x518]
  424497:	test   rcx,rcx
  42449a:	je     0x4244d4
  42449c:	mov    eax,DWORD PTR [rbx+0x520]
  4244a2:	test   eax,eax
  4244a4:	jle    0x4244cf
  4244a6:	xor    edi,edi
  4244a8:	xor    esi,esi
  4244aa:	nop    WORD PTR [rax+rax*1+0x0]
  4244b0:	mov    rcx,QWORD PTR [rcx+rdi*1]
  4244b4:	add    esi,0x1
  4244b7:	add    rdi,0x10
  4244bb:	call   0x43f100
  4244c0:	cmp    DWORD PTR [rbx+0x520],esi
  4244c6:	mov    rcx,QWORD PTR [rbx+0x518]
  4244cd:	jg     0x4244b0
  4244cf:	call   0x43f100
  4244d4:	mov    rsi,QWORD PTR [rbx+0x528]
  4244db:	test   rsi,rsi
  4244de:	je     0x424507
  4244e0:	mov    rax,QWORD PTR [rsi]
  4244e3:	mov    rcx,QWORD PTR [rsi+0x8]
  4244e7:	mov    QWORD PTR [rbx+0x528],rax
  4244ee:	call   0x43f100
  4244f3:	mov    rcx,rsi
  4244f6:	call   0x43f100
  4244fb:	mov    rsi,QWORD PTR [rbx+0x528]
  424502:	test   rsi,rsi
  424505:	jne    0x4244e0
  424507:	mov    rcx,rbx
  42450a:	add    rsp,0x28
  42450e:	pop    rbx
  42450f:	pop    rsi
  424510:	pop    rdi
  424511:	pop    rbp
  424512:	jmp    0x43f100
  424517:	nop    WORD PTR [rax+rax*1+0x0]
  424520:	lea    rax,[rip+0x28719]        # 0x44cc40
  424527:	lea    r8,[rip+0x287c2]        # 0x44ccf0
  42452e:	xchg   ax,ax
  424530:	movzx  edx,WORD PTR [rax+0xa]
  424534:	cmp    edx,ecx
  424536:	je     0x424544
  424538:	add    rax,0x10
  42453c:	cmp    rax,r8
  42453f:	jb     0x424530
  424541:	xor    eax,eax
  424543:	ret    
  424544:	mov    rax,QWORD PTR [rax]
  424547:	ret    
  424548:	nop    DWORD PTR [rax+rax*1+0x0]
  424550:	push   rdi
  424551:	push   rsi
  424552:	push   rbx
  424553:	sub    rsp,0x20
  424557:	cmp    BYTE PTR [rcx+0x43d],0x0
  42455e:	mov    edi,0x80
  424563:	mov    rsi,rcx
  424566:	jne    0x424578
  424568:	cmp    BYTE PTR [rcx+0x493],0x0
  42456f:	mov    dil,0x90
  424572:	jne    0x424610
  424578:	lea    rbx,[rip+0x28801]        # 0x44cd80
  42457f:	add    rdi,rbx
  424582:	cmp    rdi,rbx
  424585:	jbe    0x4245fe
  424587:	nop    WORD PTR [rax+rax*1+0x0]
  424590:	movzx  r8d,WORD PTR [rbx+0x8]
  424595:	mov    rdx,QWORD PTR [rbx]
  424598:	mov    rcx,rsi
  42459b:	call   0x418eb0
  4245a0:	movzx  edx,BYTE PTR [rax+0x18]
  4245a4:	and    edx,0xffffffc0
  4245a7:	or     edx,0x1
  4245aa:	mov    BYTE PTR [rax+0x18],dl
  4245ad:	movzx  ecx,WORD PTR [rax+0x18]
  4245b1:	mov    edx,ecx
  4245b3:	and    ecx,0x3f
  4245b6:	shr    dx,0x6
  4245ba:	mov    r8d,edx
  4245bd:	or     r8d,0x4
  4245c1:	shl    r8d,0x6
  4245c5:	or     ecx,r8d
  4245c8:	mov    WORD PTR [rax+0x18],cx
  4245cc:	cmp    BYTE PTR [rbx+0xc],0x0
  4245d0:	jne    0x4245db
  4245d2:	cmp    BYTE PTR [rsi+0x42e],0x0
  4245d9:	je     0x4245ee
  4245db:	movzx  ecx,WORD PTR [rax+0x18]
  4245df:	or     edx,0x14
  4245e2:	shl    edx,0x6
  4245e5:	and    ecx,0x3f
  4245e8:	or     edx,ecx
  4245ea:	mov    WORD PTR [rax+0x18],dx
  4245ee:	movzx  edx,WORD PTR [rbx+0xa]
  4245f2:	add    rbx,0x10
  4245f6:	cmp    rbx,rdi
  4245f9:	mov    DWORD PTR [rax+0x20],edx
  4245fc:	jb     0x424590
  4245fe:	add    rsp,0x20
  424602:	pop    rbx
  424603:	pop    rsi
  424604:	pop    rdi
  424605:	ret    
  424606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424610:	cmp    BYTE PTR [rcx+0x436],0x1
  424617:	sbb    rdi,rdi
  42461a:	and    edi,0x10
  42461d:	add    rdi,0x90
  424624:	jmp    0x424578
  424629:	nop    DWORD PTR [rax+0x0]
  424630:	push   rsi
  424631:	push   rbx
  424632:	sub    rsp,0x28
  424636:	mov    rbx,rcx
  424639:	mov    esi,edx
  42463b:	call   0x424550
  424640:	cmp    BYTE PTR [rbx+0x43d],0x0
  424647:	jne    0x424663
  424649:	cmp    BYTE PTR [rbx+0x493],0x0
  424650:	je     0x424750
  424656:	cmp    BYTE PTR [rbx+0x436],0x0
  42465d:	jne    0x424750
  424663:	cmp    BYTE PTR [rbx+0x418],0x0
  42466a:	mov    eax,DWORD PTR [rbx+0x414]
  424670:	je     0x4246d0
  424672:	lea    edx,[rax-0xb]
  424675:	cmp    edx,0x1
  424678:	jbe    0x424794
  42467e:	sub    eax,0x9
  424681:	cmp    eax,0x1
  424684:	jbe    0x4247b0
  42468a:	lea    rdx,[rip+0x284a3]        # 0x44cb34
  424691:	mov    rcx,rbx
  424694:	call   0x412380
  424699:	cmp    BYTE PTR [rbx+0x420],0x0
  4246a0:	je     0x4246ab
  4246a2:	cmp    BYTE PTR [rbx+0x418],0x0
  4246a9:	je     0x424700
  4246ab:	test   esi,esi
  4246ad:	je     0x424722
  4246af:	lea    rdx,[rip+0x28511]        # 0x44cbc7
  4246b6:	mov    rcx,rbx
  4246b9:	call   0x412380
  4246be:	cmp    BYTE PTR [rbx+0x41a],0x0
  4246c5:	jne    0x42473a
  4246c7:	add    rsp,0x28
  4246cb:	pop    rbx
  4246cc:	pop    rsi
  4246cd:	ret    
  4246ce:	xchg   ax,ax
  4246d0:	cmp    eax,0xd
  4246d3:	je     0x424780
  4246d9:	cmp    eax,0x4
  4246dc:	je     0x4247e0
  4246e2:	and    eax,0xfffffffb
  4246e5:	cmp    eax,0x2
  4246e8:	je     0x4247c4
  4246ee:	cmp    BYTE PTR [rbx+0x435],0x0
  4246f5:	jne    0x424764
  4246f7:	cmp    BYTE PTR [rbx+0x420],0x0
  4246fe:	je     0x4246ab
  424700:	lea    rdx,[rip+0x2849c]        # 0x44cba3
  424707:	mov    rcx,rbx
  42470a:	call   0x412380
  42470f:	lea    rdx,[rip+0x2849f]        # 0x44cbb5
  424716:	mov    rcx,rbx
  424719:	call   0x412380
  42471e:	test   esi,esi
  424720:	jne    0x4246af
  424722:	lea    rdx,[rip+0x284b0]        # 0x44cbd9
  424729:	mov    rcx,rbx
  42472c:	call   0x412380
  424731:	cmp    BYTE PTR [rbx+0x41a],0x0
  424738:	je     0x4246c7
  42473a:	lea    rdx,[rip+0x284aa]        # 0x44cbeb
  424741:	mov    rcx,rbx
  424744:	add    rsp,0x28
  424748:	pop    rbx
  424749:	pop    rsi
  42474a:	jmp    0x412380
  42474f:	nop
  424750:	lea    rdx,[rip+0x283aa]        # 0x44cb01
  424757:	mov    rcx,rbx
  42475a:	call   0x412380
  42475f:	jmp    0x424663
  424764:	lea    rdx,[rip+0x2841f]        # 0x44cb8a
  42476b:	mov    rcx,rbx
  42476e:	call   0x412380
  424773:	jmp    0x424699
  424778:	nop    DWORD PTR [rax+rax*1+0x0]
  424780:	lea    rdx,[rip+0x283c1]        # 0x44cb48
  424787:	mov    rcx,rbx
  42478a:	call   0x412380
  42478f:	jmp    0x424699
  424794:	lea    rdx,[rip+0x28371]        # 0x44cb0c
  42479b:	mov    rcx,rbx
  42479e:	call   0x412380
  4247a3:	jmp    0x424699
  4247a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4247b0:	lea    rdx,[rip+0x28369]        # 0x44cb20
  4247b7:	mov    rcx,rbx
  4247ba:	call   0x412380
  4247bf:	jmp    0x424699
  4247c4:	lea    rdx,[rip+0x283a6]        # 0x44cb71
  4247cb:	mov    rcx,rbx
  4247ce:	call   0x412380
  4247d3:	jmp    0x424699
  4247d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4247e0:	lea    rdx,[rip+0x28371]        # 0x44cb58
  4247e7:	mov    rcx,rbx
  4247ea:	call   0x412380
  4247ef:	jmp    0x424699
  4247f4:	xchg   ax,ax
  4247f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424800:	push   rbp
  424801:	push   rdi
  424802:	push   rsi
  424803:	push   rbx
  424804:	sub    rsp,0x28
  424808:	movzx  eax,BYTE PTR [rcx+0x418]
  42480f:	test   al,al
  424811:	je     0x42481a
  424813:	mov    BYTE PTR [rcx+0x429],0x0
  42481a:	cmp    BYTE PTR [rcx+0x438],0x0
  424821:	je     0x4248e0
  424827:	cmp    BYTE PTR [rcx+0x494],0x0
  42482e:	jne    0x424834
  424830:	mov    BYTE PTR [rcx+0x18],0x1
  424834:	cmp    BYTE PTR [rcx+0x427],0x2
  42483b:	mov    BYTE PTR [rcx+0x43d],0x0
  424842:	je     0x424912
  424848:	test   al,al
  42484a:	je     0x424870
  42484c:	cmp    BYTE PTR [rcx+0x43b],0x0
  424853:	je     0x424870
  424855:	cmp    BYTE PTR [rcx+0x43c],0x1
  42485c:	sbb    edi,edi
  42485e:	and    di,0xfdf8
  424863:	add    di,0x209
  424868:	jmp    0x42487e
  42486a:	nop    WORD PTR [rax+rax*1+0x0]
  424870:	cmp    BYTE PTR [rcx+0x43c],0x0
  424877:	je     0x4248d4
  424879:	mov    edi,0x208
  42487e:	lea    rbx,[rip+0x283bb]        # 0x44cc40
  424885:	lea    rbp,[rip+0x28464]        # 0x44ccf0
  42488c:	mov    rsi,rcx
  42488f:	nop
  424890:	movzx  r8d,WORD PTR [rbx+0x8]
  424895:	mov    rdx,QWORD PTR [rbx]
  424898:	mov    rcx,rsi
  42489b:	add    rbx,0x10
  42489f:	call   0x418eb0
  4248a4:	movzx  edx,WORD PTR [rax+0x18]
  4248a8:	and    BYTE PTR [rax+0x10],0xfe
  4248ac:	mov    r8d,edx
  4248af:	and    edx,0x3f
  4248b2:	shr    r8w,0x6
  4248b7:	or     r8d,edi
  4248ba:	shl    r8d,0x6
  4248be:	or     edx,r8d
  4248c1:	mov    WORD PTR [rax+0x18],dx
  4248c5:	movzx  ecx,BYTE PTR [rbx-0x6]
  4248c9:	cmp    rbx,rbp
  4248cc:	lea    edx,[rcx+rcx*1]
  4248cf:	mov    BYTE PTR [rax+0x10],dl
  4248d2:	jb     0x424890
  4248d4:	add    rsp,0x28
  4248d8:	pop    rbx
  4248d9:	pop    rsi
  4248da:	pop    rdi
  4248db:	pop    rbp
  4248dc:	ret    
  4248dd:	nop    DWORD PTR [rax]
  4248e0:	cmp    BYTE PTR [rcx+0x427],0x2
  4248e7:	movzx  edx,BYTE PTR [rcx+0x43d]
  4248ee:	je     0x424914
  4248f0:	test   dl,dl
  4248f2:	je     0x424848
  4248f8:	mov    BYTE PTR [rcx+0x419],0x0
  4248ff:	mov    BYTE PTR [rcx+0x41d],0x0
  424906:	mov    BYTE PTR [rcx+0x427],0x0
  42490d:	jmp    0x424848
  424912:	xor    edx,edx
  424914:	cmp    BYTE PTR [rcx+0x41d],0x0
  42491b:	sete   BYTE PTR [rcx+0x427]
  424922:	jmp    0x4248f0
  424924:	xchg   ax,ax
  424926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424930:	push   rdi
  424931:	push   rsi
  424932:	push   rbx
  424933:	sub    rsp,0x30
  424937:	mov    r8d,DWORD PTR [rcx+0x468]
  42493e:	mov    rbx,rcx
  424941:	mov    rsi,rdx
  424944:	test   r8d,r8d
  424947:	je     0x424961
  424949:	mov    rcx,QWORD PTR [rcx+0x2a8]
  424950:	test   rcx,rcx
  424953:	je     0x424a53
  424959:	mov    rdx,rsi
  42495c:	call   0x41d020
  424961:	lea    r8,[rbx+0xc8]
  424968:	xor    r9d,r9d
  42496b:	mov    rdx,rsi
  42496e:	mov    rcx,rbx
  424971:	mov    DWORD PTR [rsp+0x28],0x0
  424979:	mov    DWORD PTR [rsp+0x20],0x0
  424981:	call   0x4174d0
  424986:	mov    QWORD PTR [rbx+0x108],rax
  42498d:	mov    rcx,rax
  424990:	call   0x4174c0
  424995:	xor    edx,edx
  424997:	test   al,al
  424999:	jne    0x4249b9
  42499b:	mov    rdx,QWORD PTR [rbx+0x108]
  4249a2:	xor    r8d,r8d
  4249a5:	mov    rcx,rbx
  4249a8:	call   0x417e40
  4249ad:	cmp    BYTE PTR [rbx+0x438],0x0
  4249b4:	mov    rdx,rsi
  4249b7:	jne    0x4249c4
  4249b9:	mov    rax,rdx
  4249bc:	add    rsp,0x30
  4249c0:	pop    rbx
  4249c1:	pop    rsi
  4249c2:	pop    rdi
  4249c3:	ret    
  4249c4:	mov    rcx,rbx
  4249c7:	call   0x41bb80
  4249cc:	cmp    BYTE PTR [rax+0x4],0x25
  4249d0:	mov    rsi,rax
  4249d3:	je     0x424a10
  4249d5:	mov    edx,0x1
  4249da:	mov    rcx,rbx
  4249dd:	call   0x40a7d0
  4249e2:	mov    rdx,QWORD PTR [rbx+0x28]
  4249e6:	mov    eax,DWORD PTR [rdx+0xc]
  4249e9:	mov    rcx,QWORD PTR [rdx]
  4249ec:	sub    eax,0x1
  4249ef:	lea    rax,[rax+rax*4]
  4249f3:	lea    rax,[rcx+rax*8]
  4249f7:	mov    rdx,QWORD PTR [rax+0x8]
  4249fb:	mov    rax,rdx
  4249fe:	add    rsp,0x30
  424a02:	pop    rbx
  424a03:	pop    rsi
  424a04:	pop    rdi
  424a05:	ret    
  424a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424a10:	mov    rcx,rbx
  424a13:	mov    BYTE PTR [rbx+0x10],0x1
  424a17:	call   0x41bb80
  424a1c:	mov    edx,0x1
  424a21:	mov    rdi,rax
  424a24:	mov    rcx,rbx
  424a27:	call   0x40a7d0
  424a2c:	mov    BYTE PTR [rbx+0x10],0x0
  424a30:	cmp    BYTE PTR [rdi+0x4],0x37
  424a34:	jne    0x4249d5
  424a36:	movzx  edx,WORD PTR [rsi+0x6]
  424a3a:	mov    rcx,rbx
  424a3d:	and    edx,0x1
  424a40:	call   0x410da0
  424a45:	test   eax,eax
  424a47:	je     0x4249d5
  424a49:	mov    rcx,rbx
  424a4c:	call   0x423ee0
  424a51:	jmp    0x4249e2
  424a53:	call   0x41ced0
  424a58:	mov    rcx,rax
  424a5b:	mov    QWORD PTR [rbx+0x2a8],rax
  424a62:	jmp    0x424959
  424a67:	nop    WORD PTR [rax+rax*1+0x0]
  424a70:	push   rsi
  424a71:	push   rbx
  424a72:	sub    rsp,0x28
  424a76:	cmp    BYTE PTR [rcx+0x434],0x0
  424a7d:	mov    rbx,rcx
  424a80:	mov    rsi,rdx
  424a83:	je     0x424a98
  424a85:	jmp    0x424af0
  424a87:	nop    WORD PTR [rax+rax*1+0x0]
  424a90:	mov    rcx,rbx
  424a93:	call   0x411b00
  424a98:	cmp    QWORD PTR [rbx],0x0
  424a9c:	jne    0x424a90
  424a9e:	test   rsi,rsi
  424aa1:	je     0x424acb
  424aa3:	mov    eax,DWORD PTR [rbx+0x468]
  424aa9:	test   eax,eax
  424aab:	je     0x424acb
  424aad:	mov    rcx,QWORD PTR [rbx+0x2a8]
  424ab4:	mov    r8d,0x48
  424aba:	mov    rdx,rsi
  424abd:	call   0x41d230
  424ac2:	cmp    BYTE PTR [rbx+0x46d],0x0
  424ac9:	jne    0x424b01
  424acb:	cmp    BYTE PTR [rbx+0x422],0x0
  424ad2:	jne    0x424ae0
  424ad4:	add    rsp,0x28
  424ad8:	pop    rbx
  424ad9:	pop    rsi
  424ada:	ret    
  424adb:	nop    DWORD PTR [rax+rax*1+0x0]
  424ae0:	mov    rcx,rbx
  424ae3:	add    rsp,0x28
  424ae7:	pop    rbx
  424ae8:	pop    rsi
  424ae9:	jmp    0x418670
  424aee:	xchg   ax,ax
  424af0:	lea    rdx,[rip+0xfffffffffffe53c9]        # 0x409ec0
  424af7:	xor    r8d,r8d
  424afa:	call   0x418f10
  424aff:	jmp    0x424a98
  424b01:	mov    rcx,QWORD PTR [rbx+0x2a8]
  424b08:	mov    rdx,rsi
  424b0b:	call   0x41d3b0
  424b10:	jmp    0x424acb
  424b12:	nop
  424b13:	nop
  424b14:	nop
  424b15:	nop
  424b16:	nop
  424b17:	nop
  424b18:	nop
  424b19:	nop
  424b1a:	nop
  424b1b:	nop
  424b1c:	nop
  424b1d:	nop
  424b1e:	nop
  424b1f:	nop
  424b20:	jmp    QWORD PTR [rip+0x369c6]        # 0x45b4ec
  424b26:	nop
  424b27:	nop
  424b28:	jmp    QWORD PTR [rip+0x369b6]        # 0x45b4e4
  424b2e:	nop
  424b2f:	nop
  424b30:	jmp    QWORD PTR [rip+0x369a6]        # 0x45b4dc
  424b36:	nop
  424b37:	nop
  424b38:	nop    DWORD PTR [rax+rax*1+0x0]
  424b40:	push   rdi
  424b41:	push   rbx
  424b42:	sub    rsp,0x78
  424b46:	xor    eax,eax
  424b48:	lea    r10,[rsp+0x20]
  424b4d:	mov    rbx,rcx
  424b50:	mov    ecx,0x9
  424b55:	mov    rdi,r10
  424b58:	rep stos QWORD PTR es:[rdi],rax
  424b5b:	mov    DWORD PTR [rsp+0x28],edx
  424b5f:	mov    rcx,r10
  424b62:	mov    edx,0x48
  424b67:	mov    QWORD PTR [rsp+0x20],rbx
  424b6c:	call   0x424c90
  424b71:	test   rax,rax
  424b74:	je     0x424bc6
  424b76:	mov    rdx,QWORD PTR [rsp+0x20]
  424b7b:	mov    QWORD PTR [rax],rdx
  424b7e:	mov    rdx,QWORD PTR [rsp+0x28]
  424b83:	mov    QWORD PTR [rax+0x8],rdx
  424b87:	mov    rdx,QWORD PTR [rsp+0x30]
  424b8c:	mov    QWORD PTR [rax+0x10],rdx
  424b90:	mov    rdx,QWORD PTR [rsp+0x38]
  424b95:	mov    QWORD PTR [rax+0x18],rdx
  424b99:	mov    rdx,QWORD PTR [rsp+0x40]
  424b9e:	mov    QWORD PTR [rax+0x20],rdx
  424ba2:	mov    rdx,QWORD PTR [rsp+0x48]
  424ba7:	mov    QWORD PTR [rax+0x28],rdx
  424bab:	mov    rdx,QWORD PTR [rsp+0x50]
  424bb0:	mov    QWORD PTR [rax+0x30],rdx
  424bb4:	mov    rdx,QWORD PTR [rsp+0x58]
  424bb9:	mov    QWORD PTR [rax+0x38],rdx
  424bbd:	mov    rdx,QWORD PTR [rsp+0x60]
  424bc2:	mov    QWORD PTR [rax+0x40],rdx
  424bc6:	add    rsp,0x78
  424bca:	pop    rbx
  424bcb:	pop    rdi
  424bcc:	ret    
  424bcd:	nop
  424bce:	nop
  424bcf:	nop
  424bd0:	push   rbx
  424bd1:	sub    rsp,0x40
  424bd5:	mov    rbx,rdx
  424bd8:	lea    rdx,[rsp+0x3c]
  424bdd:	mov    DWORD PTR [rsp+0x3c],0x0
  424be5:	call   0x439cd8
  424bea:	mov    ecx,DWORD PTR [rbx]
  424bec:	test   ecx,ecx
  424bee:	jle    0x424c00
  424bf0:	sub    ecx,0x1
  424bf3:	xor    eax,eax
  424bf5:	mov    DWORD PTR [rbx],ecx
  424bf7:	add    rsp,0x40
  424bfb:	pop    rbx
  424bfc:	ret    
  424bfd:	nop    DWORD PTR [rax]
  424c00:	cmp    DWORD PTR [rsp+0x3c],0x1
  424c05:	mov    rdx,QWORD PTR [rbx+0x20]
  424c09:	mov    rcx,QWORD PTR [rbx+0x8]
  424c0d:	mov    r9,QWORD PTR [rbx+0x18]
  424c11:	mov    r8,QWORD PTR [rbx+0x10]
  424c15:	mov    QWORD PTR [rsp+0x20],rdx
  424c1a:	sbb    rax,0x0
  424c1e:	mov    rdx,rax
  424c21:	call   0x424fc0
  424c26:	cmp    eax,0x1
  424c29:	mov    DWORD PTR [rbx+0x28],eax
  424c2c:	sbb    eax,eax
  424c2e:	not    eax
  424c30:	and    eax,0x5
  424c33:	add    rsp,0x40
  424c37:	pop    rbx
  424c38:	ret    
  424c39:	nop    DWORD PTR [rax+0x0]
  424c40:	sub    rsp,0x58
  424c44:	mov    rax,QWORD PTR [rsp+0x80]
  424c4c:	add    edx,0x1
  424c4f:	mov    QWORD PTR [rsp+0x28],rcx
  424c54:	lea    rcx,[rip+0xffffffffffffff75]        # 0x424bd0
  424c5b:	mov    DWORD PTR [rsp+0x20],edx
  424c5f:	lea    rdx,[rsp+0x20]
  424c64:	mov    QWORD PTR [rsp+0x30],r8
  424c69:	mov    QWORD PTR [rsp+0x38],r9
  424c6e:	mov    QWORD PTR [rsp+0x40],rax
  424c73:	mov    DWORD PTR [rsp+0x48],0x0
  424c7b:	call   0x439ce0
  424c80:	mov    eax,DWORD PTR [rsp+0x48]
  424c84:	add    rsp,0x58
  424c88:	ret    
  424c89:	nop
  424c8a:	nop
  424c8b:	nop
  424c8c:	nop
  424c8d:	nop
  424c8e:	nop
  424c8f:	nop
  424c90:	push   rdi
  424c91:	push   rsi
  424c92:	push   rbx
  424c93:	sub    rsp,0x20
  424c97:	mov    rcx,rdx
  424c9a:	mov    rsi,r8
  424c9d:	mov    rdi,r9
  424ca0:	call   0x43f0c0
  424ca5:	test   rax,rax
  424ca8:	mov    rbx,rax
  424cab:	je     0x424cc0
  424cad:	mov    rax,rbx
  424cb0:	add    rsp,0x20
  424cb4:	pop    rbx
  424cb5:	pop    rsi
  424cb6:	pop    rdi
  424cb7:	ret    
  424cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  424cc0:	call   QWORD PTR [rip+0x36996]        # 0x45b65c
  424cc6:	mov    r8d,DWORD PTR [rax]
  424cc9:	lea    rdx,[rip+0x28230]        # 0x44cf00
  424cd0:	mov    rcx,rdi
  424cd3:	call   rsi
  424cd5:	mov    rax,rbx
  424cd8:	add    rsp,0x20
  424cdc:	pop    rbx
  424cdd:	pop    rsi
  424cde:	pop    rdi
  424cdf:	ret    
  424ce0:	mov    rcx,rdx
  424ce3:	jmp    0x43f100
  424ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  424cf0:	push   r12
  424cf2:	push   rbp
  424cf3:	push   rdi
  424cf4:	push   rsi
  424cf5:	push   rbx
  424cf6:	sub    rsp,0x20
  424cfa:	mov    rsi,QWORD PTR [rsp+0x70]
  424cff:	mov    rdi,rdx
  424d02:	mov    rbp,r8
  424d05:	mov    r12,r9
  424d08:	mov    r10,QWORD PTR [rsi+0x10]
  424d0c:	cmp    r10,rdx
  424d0f:	jb     0x424d35
  424d11:	mov    rax,QWORD PTR [rsi]
  424d14:	mov    rdx,QWORD PTR [rsi+0x8]
  424d18:	lea    rcx,[rdx+rdi*1]
  424d1c:	sub    r10,rdi
  424d1f:	add    rax,rdx
  424d22:	mov    QWORD PTR [rsi+0x10],r10
  424d26:	mov    QWORD PTR [rsi+0x8],rcx
  424d2a:	add    rsp,0x20
  424d2e:	pop    rbx
  424d2f:	pop    rsi
  424d30:	pop    rdi
  424d31:	pop    rbp
  424d32:	pop    r12
  424d34:	ret    
  424d35:	mov    rbx,QWORD PTR [rsi+0x8]
  424d39:	test   rbx,rbx
  424d3c:	je     0x424d80
  424d3e:	lea    rax,[rbx+0x1000]
  424d45:	lea    r11,[rbx+rbx*1]
  424d49:	cmp    rbx,0x1000
  424d50:	cmovb  rax,r11
  424d54:	add    rbx,rdi
  424d57:	mov    rcx,QWORD PTR [rsi]
  424d5a:	cmp    rax,rbx
  424d5d:	cmovae rbx,rax
  424d61:	mov    rdx,rbx
  424d64:	call   0x43f080
  424d69:	test   rax,rax
  424d6c:	je     0x424d89
  424d6e:	mov    rdx,QWORD PTR [rsi+0x8]
  424d72:	mov    QWORD PTR [rsi],rax
  424d75:	sub    rbx,rdx
  424d78:	mov    r10,rbx
  424d7b:	jmp    0x424d18
  424d7d:	nop    DWORD PTR [rax]
  424d80:	mov    rax,rdx
  424d83:	shl    rax,0x5
  424d87:	jmp    0x424d54
  424d89:	call   QWORD PTR [rip+0x368cd]        # 0x45b65c
  424d8f:	lea    rdx,[rip+0x28171]        # 0x44cf07
  424d96:	mov    r8d,DWORD PTR [rax]
  424d99:	mov    rcx,r12
  424d9c:	call   rbp
  424d9e:	xor    eax,eax
  424da0:	jmp    0x424d2a
  424da2:	nop    DWORD PTR [rax+0x0]
  424da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424db0:	push   rdi
  424db1:	push   rsi
  424db2:	push   rbx
  424db3:	sub    rsp,0x20
  424db7:	mov    rbx,rdx
  424dba:	mov    rdx,QWORD PTR [rdx+0x8]
  424dbe:	mov    rsi,r8
  424dc1:	mov    rcx,QWORD PTR [rbx]
  424dc4:	mov    rdi,r9
  424dc7:	call   0x43f080
  424dcc:	test   rax,rax
  424dcf:	mov    QWORD PTR [rbx],rax
  424dd2:	je     0x424df0
  424dd4:	mov    QWORD PTR [rbx+0x10],0x0
  424ddc:	mov    eax,0x1
  424de1:	add    rsp,0x20
  424de5:	pop    rbx
  424de6:	pop    rsi
  424de7:	pop    rdi
  424de8:	ret    
  424de9:	nop    DWORD PTR [rax+0x0]
  424df0:	call   QWORD PTR [rip+0x36866]        # 0x45b65c
  424df6:	lea    rdx,[rip+0x2810a]        # 0x44cf07
  424dfd:	mov    r8d,DWORD PTR [rax]
  424e00:	mov    rcx,rdi
  424e03:	call   rsi
  424e05:	xor    eax,eax
  424e07:	jmp    0x424de1
  424e09:	nop    DWORD PTR [rax+0x0]
  424e10:	push   rbx
  424e11:	sub    rsp,0x20
  424e15:	mov    rbx,rdx
  424e18:	call   0x424db0
  424e1d:	test   eax,eax
  424e1f:	je     0x424e41
  424e21:	mov    rax,QWORD PTR [rbx]
  424e24:	mov    QWORD PTR [rbx+0x8],0x0
  424e2c:	mov    QWORD PTR [rbx],0x0
  424e33:	mov    QWORD PTR [rbx+0x10],0x0
  424e3b:	add    rsp,0x20
  424e3f:	pop    rbx
  424e40:	ret    
  424e41:	xor    eax,eax
  424e43:	add    rsp,0x20
  424e47:	pop    rbx
  424e48:	ret    
  424e49:	nop
  424e4a:	nop
  424e4b:	nop
  424e4c:	nop
  424e4d:	nop
  424e4e:	nop
  424e4f:	nop
  424e50:	push   r12
  424e52:	push   rbp
  424e53:	push   rdi
  424e54:	push   rsi
  424e55:	push   rbx
  424e56:	sub    rsp,0x40
  424e5a:	mov    rbp,r8
  424e5d:	mov    r8d,DWORD PTR [rcx+0x8]
  424e61:	mov    rbx,rcx
  424e64:	mov    rdi,rdx
  424e67:	test   r8d,r8d
  424e6a:	jne    0x424e91
  424e6c:	mov    ecx,DWORD PTR [rcx+0x38]
  424e6f:	test   ecx,ecx
  424e71:	jne    0x424e98
  424e73:	mov    r10,QWORD PTR [rbx+0x18]
  424e77:	mov    eax,0x1
  424e7c:	test   r10,r10
  424e7f:	mov    QWORD PTR [rsp+0x38],r10
  424e84:	je     0x424ec0
  424e86:	add    rsp,0x40
  424e8a:	pop    rbx
  424e8b:	pop    rsi
  424e8c:	pop    rdi
  424e8d:	pop    rbp
  424e8e:	pop    r12
  424e90:	ret    
  424e91:	mov    eax,DWORD PTR [rcx+0x38]
  424e94:	test   eax,eax
  424e96:	je     0x424e73
  424e98:	lea    rdx,[rip+0x28099]        # 0x44cf38
  424e9f:	mov    r8d,0xffffffff
  424ea5:	mov    rcx,rbp
  424ea8:	call   rdi
  424eaa:	xor    eax,eax
  424eac:	add    rsp,0x40
  424eb0:	pop    rbx
  424eb1:	pop    rsi
  424eb2:	pop    rdi
  424eb3:	pop    rbp
  424eb4:	pop    r12
  424eb6:	ret    
  424eb7:	nop    WORD PTR [rax+rax*1+0x0]
  424ec0:	lea    r12,[rsp+0x34]
  424ec5:	xor    esi,esi
  424ec7:	cmp    esi,0x2
  424eca:	je     0x424f80
  424ed0:	cmp    esi,0x3
  424ed3:	je     0x424f70
  424ed9:	cmp    esi,0x1
  424edc:	je     0x424f38
  424ede:	mov    rcx,QWORD PTR [rbx]
  424ee1:	test   rcx,rcx
  424ee4:	je     0x424f38
  424ee6:	mov    r9,r12
  424ee9:	mov    r8,rbp
  424eec:	mov    rdx,rdi
  424eef:	call   0x4250a0
  424ef4:	test   eax,eax
  424ef6:	js     0x424f30
  424ef8:	lea    rdx,[rsp+0x38]
  424efd:	mov    r9,rbp
  424f00:	mov    r8,rdi
  424f03:	mov    rcx,rbx
  424f06:	mov    QWORD PTR [rsp+0x20],rdx
  424f0b:	mov    edx,eax
  424f0d:	call   0x4251c0
  424f12:	test   eax,eax
  424f14:	je     0x424f53
  424f16:	mov    eax,DWORD PTR [rbx+0x8]
  424f19:	test   eax,eax
  424f1b:	jne    0x424f8c
  424f1d:	mov    rax,QWORD PTR [rsp+0x38]
  424f22:	mov    QWORD PTR [rbx+0x18],rax
  424f26:	mov    eax,0x1
  424f2b:	jmp    0x424e86
  424f30:	mov    edx,DWORD PTR [rsp+0x34]
  424f34:	test   edx,edx
  424f36:	je     0x424f53
  424f38:	add    esi,0x1
  424f3b:	cmp    esi,0x4
  424f3e:	jne    0x424ec7
  424f40:	mov    rdx,QWORD PTR [rbx]
  424f43:	test   rdx,rdx
  424f46:	je     0x424f9f
  424f48:	mov    r8d,0x2
  424f4e:	mov    rcx,rbp
  424f51:	call   rdi
  424f53:	mov    eax,DWORD PTR [rbx+0x8]
  424f56:	test   eax,eax
  424f58:	jne    0x424fb0
  424f5a:	mov    DWORD PTR [rbx+0x38],0x1
  424f61:	jmp    0x424e86
  424f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424f70:	lea    rcx,[rip+0x27f99]        # 0x44cf10
  424f77:	jmp    0x424ee6
  424f7c:	nop    DWORD PTR [rax+0x0]
  424f80:	lea    rcx,[rip+0x27f9c]        # 0x44cf23
  424f87:	jmp    0x424ee6
  424f8c:	mov    rax,QWORD PTR [rsp+0x38]
  424f91:	mov    QWORD PTR [rbx+0x18],rax
  424f95:	mov    eax,0x1
  424f9a:	jmp    0x424e86
  424f9f:	xor    r8d,r8d
  424fa2:	lea    rdx,[rip+0x27fb7]        # 0x44cf60
  424fa9:	mov    rcx,rbp
  424fac:	call   rdi
  424fae:	jmp    0x424f53
  424fb0:	mov    DWORD PTR [rbx+0x38],0x1
  424fb7:	xor    eax,eax
  424fb9:	jmp    0x424e86
  424fbe:	xchg   ax,ax
  424fc0:	push   r12
  424fc2:	push   rbp
  424fc3:	push   rdi
  424fc4:	push   rsi
  424fc5:	push   rbx
  424fc6:	sub    rsp,0x20
  424fca:	mov    rdi,QWORD PTR [rsp+0x70]
  424fcf:	mov    rbp,rdx
  424fd2:	mov    r12,r8
  424fd5:	mov    rdx,r9
  424fd8:	mov    rbx,rcx
  424fdb:	mov    rsi,r9
  424fde:	mov    r8,rdi
  424fe1:	call   0x424e50
  424fe6:	test   eax,eax
  424fe8:	je     0x424ff1
  424fea:	mov    eax,DWORD PTR [rbx+0x38]
  424fed:	test   eax,eax
  424fef:	je     0x425000
  424ff1:	xor    eax,eax
  424ff3:	add    rsp,0x20
  424ff7:	pop    rbx
  424ff8:	pop    rsi
  424ff9:	pop    rdi
  424ffa:	pop    rbp
  424ffb:	pop    r12
  424ffd:	ret    
  424ffe:	xchg   ax,ax
  425000:	mov    rax,QWORD PTR [rbx+0x18]
  425004:	mov    r9,rsi
  425007:	mov    r8,r12
  42500a:	mov    rdx,rbp
  42500d:	mov    rcx,rbx
  425010:	mov    QWORD PTR [rsp+0x70],rdi
  425015:	add    rsp,0x20
  425019:	pop    rbx
  42501a:	pop    rsi
  42501b:	pop    rdi
  42501c:	pop    rbp
  42501d:	pop    r12
  42501f:	rex.W jmp rax
  425022:	nop    DWORD PTR [rax+0x0]
  425026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425030:	push   rbp
  425031:	push   rdi
  425032:	push   rsi
  425033:	push   rbx
  425034:	sub    rsp,0x38
  425038:	mov    rbp,r8
  42503b:	mov    r8,QWORD PTR [rsp+0x80]
  425043:	mov    rdi,rdx
  425046:	mov    rdx,r9
  425049:	mov    rbx,rcx
  42504c:	mov    rsi,r9
  42504f:	call   0x424e50
  425054:	test   eax,eax
  425056:	je     0x425061
  425058:	mov    edx,DWORD PTR [rbx+0x38]
  42505b:	xor    eax,eax
  42505d:	test   edx,edx
  42505f:	je     0x425070
  425061:	add    rsp,0x38
  425065:	pop    rbx
  425066:	pop    rsi
  425067:	pop    rdi
  425068:	pop    rbp
  425069:	ret    
  42506a:	nop    WORD PTR [rax+rax*1+0x0]
  425070:	mov    rax,QWORD PTR [rsp+0x80]
  425078:	mov    r9,rsi
  42507b:	mov    r8,rbp
  42507e:	mov    rdx,rdi
  425081:	mov    rcx,rbx
  425084:	mov    QWORD PTR [rsp+0x20],rax
  425089:	call   QWORD PTR [rbx+0x28]
  42508c:	mov    eax,0x1
  425091:	add    rsp,0x38
  425095:	pop    rbx
  425096:	pop    rsi
  425097:	pop    rdi
  425098:	pop    rbp
  425099:	ret    
  42509a:	nop
  42509b:	nop
  42509c:	nop
  42509d:	nop
  42509e:	nop
  42509f:	nop
  4250a0:	push   r12
  4250a2:	push   rbp
  4250a3:	push   rdi
  4250a4:	push   rsi
  4250a5:	push   rbx
  4250a6:	sub    rsp,0x20
  4250aa:	test   r9,r9
  4250ad:	mov    rsi,rcx
  4250b0:	mov    rdi,rdx
  4250b3:	mov    rbp,r8
  4250b6:	mov    rbx,r9
  4250b9:	je     0x425110
  4250bb:	mov    DWORD PTR [r9],0x0
  4250c2:	mov    edx,0x8000
  4250c7:	call   0x43efa0
  4250cc:	test   eax,eax
  4250ce:	js     0x4250e0
  4250d0:	add    rsp,0x20
  4250d4:	pop    rbx
  4250d5:	pop    rsi
  4250d6:	pop    rdi
  4250d7:	pop    rbp
  4250d8:	pop    r12
  4250da:	ret    
  4250db:	nop    DWORD PTR [rax+rax*1+0x0]
  4250e0:	mov    r12,QWORD PTR [rip+0x36575]        # 0x45b65c
  4250e7:	call   r12
  4250ea:	cmp    DWORD PTR [rax],0x2
  4250ed:	je     0x425130
  4250ef:	call   r12
  4250f2:	mov    r8d,DWORD PTR [rax]
  4250f5:	mov    rdx,rsi
  4250f8:	mov    rcx,rbp
  4250fb:	call   rdi
  4250fd:	mov    eax,0xffffffff
  425102:	add    rsp,0x20
  425106:	pop    rbx
  425107:	pop    rsi
  425108:	pop    rdi
  425109:	pop    rbp
  42510a:	pop    r12
  42510c:	ret    
  42510d:	nop    DWORD PTR [rax]
  425110:	mov    edx,0x8000
  425115:	call   0x43efa0
  42511a:	test   eax,eax
  42511c:	mov    r12,QWORD PTR [rip+0x36539]        # 0x45b65c
  425123:	jns    0x4250d0
  425125:	jmp    0x4250ef
  425127:	nop    WORD PTR [rax+rax*1+0x0]
  425130:	mov    eax,0xffffffff
  425135:	mov    DWORD PTR [rbx],0x1
  42513b:	add    rsp,0x20
  42513f:	pop    rbx
  425140:	pop    rsi
  425141:	pop    rdi
  425142:	pop    rbp
  425143:	pop    r12
  425145:	ret    
  425146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425150:	push   rsi
  425151:	push   rbx
  425152:	sub    rsp,0x28
  425156:	mov    rbx,rdx
  425159:	mov    rsi,r8
  42515c:	call   0x43ef80
  425161:	test   eax,eax
  425163:	mov    r9d,0x1
  425169:	js     0x425175
  42516b:	mov    eax,r9d
  42516e:	add    rsp,0x28
  425172:	pop    rbx
  425173:	pop    rsi
  425174:	ret    
  425175:	call   QWORD PTR [rip+0x364e1]        # 0x45b65c
  42517b:	mov    r8d,DWORD PTR [rax]
  42517e:	lea    rdx,[rip+0x27e0b]        # 0x44cf90
  425185:	mov    rcx,rsi
  425188:	call   rbx
  42518a:	xor    r9d,r9d
  42518d:	mov    eax,r9d
  425190:	add    rsp,0x28
  425194:	pop    rbx
  425195:	pop    rsi
  425196:	ret    
  425197:	nop
  425198:	nop
  425199:	nop
  42519a:	nop
  42519b:	nop
  42519c:	nop
  42519d:	nop
  42519e:	nop
  42519f:	nop
  4251a0:	mov    rcx,QWORD PTR [rsp+0x28]
  4251a5:	xor    r9d,r9d
  4251a8:	mov    rax,r8
  4251ab:	xor    r8d,r8d
  4251ae:	mov    QWORD PTR [rsp+0x28],0x0
  4251b7:	rex.W jmp rax
  4251ba:	nop    WORD PTR [rax+rax*1+0x0]
  4251c0:	mov    rax,QWORD PTR [rsp+0x28]
  4251c5:	lea    rdx,[rip+0xffffffffffffffd4]        # 0x4251a0
  4251cc:	mov    QWORD PTR [rcx+0x20],0x0
  4251d4:	mov    QWORD PTR [rax],rdx
  4251d7:	mov    eax,0x1
  4251dc:	ret    
  4251dd:	nop
  4251de:	nop
  4251df:	nop
  4251e0:	mov    r8,QWORD PTR [rcx]
  4251e3:	mov    r10,QWORD PTR [rip+0x2c3f6]        # 0x4515e0
  4251ea:	xor    eax,eax
  4251ec:	movzx  r9d,BYTE PTR [r8]
  4251f0:	add    r8,0x1
  4251f4:	test   BYTE PTR [r10+r9*2],0x4
  4251f9:	mov    rdx,r9
  4251fc:	je     0x425225
  4251fe:	xchg   ax,ax
  425200:	mov    QWORD PTR [rcx],r8
  425203:	movzx  r9d,BYTE PTR [r8]
  425207:	add    r8,0x1
  42520b:	lea    eax,[rax+rax*4]
  42520e:	movsx  edx,dl
  425211:	lea    eax,[rdx+rax*2-0x30]
  425215:	test   BYTE PTR [r10+r9*2],0x4
  42521a:	mov    rdx,r9
  42521d:	jne    0x425200
  42521f:	test   eax,eax
  425221:	js     0x425225
  425223:	repz ret 
  425225:	mov    eax,0xffffffff
  42522a:	ret    
  42522b:	nop    DWORD PTR [rax+rax*1+0x0]
  425230:	push   rbx
  425231:	sub    rsp,0x20
  425235:	mov    rdx,QWORD PTR [rcx]
  425238:	movsx  eax,BYTE PTR [rdx]
  42523b:	cmp    al,0x5f
  42523d:	je     0x425260
  42523f:	lea    r8d,[rax-0x30]
  425243:	cmp    r8b,0x9
  425247:	ja     0x425295
  425249:	add    rdx,0x1
  42524d:	sub    eax,0x30
  425250:	mov    QWORD PTR [rcx],rdx
  425253:	add    rsp,0x20
  425257:	pop    rbx
  425258:	ret    
  425259:	nop    DWORD PTR [rax+0x0]
  425260:	lea    rax,[rdx+0x1]
  425264:	mov    QWORD PTR [rcx],rax
  425267:	movzx  edx,BYTE PTR [rdx+0x1]
  42526b:	mov    rax,QWORD PTR [rip+0x2c36e]        # 0x4515e0
  425272:	test   BYTE PTR [rax+rdx*2],0x4
  425276:	je     0x425295
  425278:	mov    rbx,rcx
  42527b:	call   0x4251e0
  425280:	mov    rdx,QWORD PTR [rbx]
  425283:	cmp    BYTE PTR [rdx],0x5f
  425286:	jne    0x425295
  425288:	add    rdx,0x1
  42528c:	mov    QWORD PTR [rbx],rdx
  42528f:	add    rsp,0x20
  425293:	pop    rbx
  425294:	ret    
  425295:	mov    eax,0xffffffff
  42529a:	jmp    0x425253
  42529c:	nop    DWORD PTR [rax+0x0]
  4252a0:	push   rbx
  4252a1:	mov    r8,QWORD PTR [rcx]
  4252a4:	mov    r11,QWORD PTR [rip+0x2c335]        # 0x4515e0
  4252ab:	xor    eax,eax
  4252ad:	movzx  r10d,BYTE PTR [r8]
  4252b1:	test   BYTE PTR [r11+r10*2],0x4
  4252b6:	je     0x42530a
  4252b8:	movsx  r9d,r10b
  4252bc:	lea    r10,[r8+0x1]
  4252c0:	mov    al,0x1
  4252c2:	sub    r9d,0x30
  4252c6:	mov    DWORD PTR [rdx],r9d
  4252c9:	mov    QWORD PTR [rcx],r10
  4252cc:	movzx  ebx,BYTE PTR [r8+0x1]
  4252d1:	test   BYTE PTR [r11+rbx*2],0x4
  4252d6:	mov    r8,rbx
  4252d9:	je     0x42530a
  4252db:	nop    DWORD PTR [rax+rax*1+0x0]
  4252e0:	lea    eax,[r9+r9*4]
  4252e4:	movsx  r8d,r8b
  4252e8:	add    r10,0x1
  4252ec:	lea    r9d,[r8+rax*2-0x30]
  4252f1:	movzx  eax,BYTE PTR [r10]
  4252f5:	test   BYTE PTR [r11+rax*2],0x4
  4252fa:	mov    r8,rax
  4252fd:	jne    0x4252e0
  4252ff:	cmp    r8b,0x5f
  425303:	mov    eax,0x1
  425308:	je     0x425310
  42530a:	pop    rbx
  42530b:	ret    
  42530c:	nop    DWORD PTR [rax+0x0]
  425310:	add    r10,0x1
  425314:	mov    QWORD PTR [rcx],r10
  425317:	mov    DWORD PTR [rdx],r9d
  42531a:	pop    rbx
  42531b:	ret    
  42531c:	nop    DWORD PTR [rax+0x0]
  425320:	push   rsi
  425321:	push   rbx
  425322:	sub    rsp,0x28
  425326:	mov    rbx,rcx
  425329:	movsxd rdx,DWORD PTR [rbx+0x20]
  42532d:	mov    rax,rdx
  425330:	lea    rsi,[rdx*8-0x8]
  425338:	jmp    0x42535a
  42533a:	nop    WORD PTR [rax+rax*1+0x0]
  425340:	mov    rdx,QWORD PTR [rbx+0x10]
  425344:	sub    eax,0x1
  425347:	mov    DWORD PTR [rbx+0x20],eax
  42534a:	mov    rcx,QWORD PTR [rdx+rsi*1]
  42534e:	lea    rdx,[rsi-0x8]
  425352:	test   rcx,rcx
  425355:	jne    0x4253d0
  425357:	mov    rsi,rdx
  42535a:	test   eax,eax
  42535c:	jg     0x425340
  42535e:	movsxd rdx,DWORD PTR [rbx+0x24]
  425362:	mov    rcx,QWORD PTR [rbx+0x18]
  425366:	mov    rax,rdx
  425369:	lea    rsi,[rdx*8-0x8]
  425371:	jmp    0x42538a
  425373:	lea    rdx,[rsi-0x8]
  425377:	sub    eax,0x1
  42537a:	mov    DWORD PTR [rbx+0x24],eax
  42537d:	mov    r8,QWORD PTR [rcx+rdx*1+0x8]
  425382:	test   r8,r8
  425385:	jne    0x4253f0
  425387:	mov    rsi,rdx
  42538a:	test   eax,eax
  42538c:	jg     0x425373
  42538e:	test   rcx,rcx
  425391:	je     0x4253a7
  425393:	call   0x43f100
  425398:	mov    QWORD PTR [rbx+0x18],0x0
  4253a0:	mov    DWORD PTR [rbx+0x2c],0x0
  4253a7:	mov    rcx,QWORD PTR [rbx+0x10]
  4253ab:	test   rcx,rcx
  4253ae:	je     0x4253c4
  4253b0:	call   0x43f100
  4253b5:	mov    QWORD PTR [rbx+0x10],0x0
  4253bd:	mov    DWORD PTR [rbx+0x28],0x0
  4253c4:	add    rsp,0x28
  4253c8:	pop    rbx
  4253c9:	pop    rsi
  4253ca:	ret    
  4253cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4253d0:	call   0x43f100
  4253d5:	mov    rax,QWORD PTR [rbx+0x10]
  4253d9:	mov    QWORD PTR [rax+rsi*1],0x0
  4253e1:	jmp    0x425329
  4253e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253f0:	mov    rcx,r8
  4253f3:	call   0x43f100
  4253f8:	mov    rax,QWORD PTR [rbx+0x18]
  4253fc:	mov    QWORD PTR [rax+rsi*1],0x0
  425404:	jmp    0x42535e
  425409:	nop    DWORD PTR [rax+0x0]
  425410:	push   rbx
  425411:	sub    rsp,0x20
  425415:	mov    rbx,rcx
  425418:	mov    ecx,DWORD PTR [rcx+0x24]
  42541b:	mov    edx,DWORD PTR [rbx+0x2c]
  42541e:	cmp    ecx,edx
  425420:	jl     0x425463
  425422:	test   edx,edx
  425424:	je     0x425470
  425426:	cmp    edx,0x3fffffff
  42542c:	jg     0x42548a
  42542e:	add    edx,edx
  425430:	mov    rcx,QWORD PTR [rbx+0x18]
  425434:	mov    DWORD PTR [rbx+0x2c],edx
  425437:	movsxd rdx,edx
  42543a:	shl    rdx,0x3
  42543e:	call   0x438650
  425443:	mov    ecx,DWORD PTR [rbx+0x24]
  425446:	mov    QWORD PTR [rbx+0x18],rax
  42544a:	lea    edx,[rcx+0x1]
  42544d:	mov    DWORD PTR [rbx+0x24],edx
  425450:	movsxd rdx,ecx
  425453:	mov    QWORD PTR [rax+rdx*8],0x0
  42545b:	mov    eax,ecx
  42545d:	add    rsp,0x20
  425461:	pop    rbx
  425462:	ret    
  425463:	mov    rax,QWORD PTR [rbx+0x18]
  425467:	jmp    0x42544a
  425469:	nop    DWORD PTR [rax+0x0]
  425470:	mov    ecx,0x28
  425475:	mov    DWORD PTR [rbx+0x2c],0x5
  42547c:	call   0x4385d0
  425481:	mov    ecx,DWORD PTR [rbx+0x24]
  425484:	mov    QWORD PTR [rbx+0x18],rax
  425488:	jmp    0x42544a
  42548a:	mov    ecx,0x7fffffff
  42548f:	call   0x438570
  425494:	nop
  425495:	nop
  425496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4254a0:	push   rdi
  4254a1:	push   rsi
  4254a2:	push   rbx
  4254a3:	sub    rsp,0x20
  4254a7:	mov    eax,DWORD PTR [rcx+0x28]
  4254aa:	cmp    DWORD PTR [rcx+0x20],eax
  4254ad:	mov    rbx,rcx
  4254b0:	mov    rdi,rdx
  4254b3:	movsxd rsi,r8d
  4254b6:	jl     0x4254df
  4254b8:	test   eax,eax
  4254ba:	je     0x425520
  4254bc:	cmp    eax,0x3fffffff
  4254c1:	jg     0x425537
  4254c3:	add    eax,eax
  4254c5:	mov    DWORD PTR [rcx+0x28],eax
  4254c8:	cdqe   
  4254ca:	mov    rcx,QWORD PTR [rcx+0x10]
  4254ce:	lea    rdx,[rax*8+0x0]
  4254d6:	call   0x438650
  4254db:	mov    QWORD PTR [rbx+0x10],rax
  4254df:	lea    ecx,[rsi+0x1]
  4254e2:	movsxd rcx,ecx
  4254e5:	call   0x4385d0
  4254ea:	mov    rdx,rdi
  4254ed:	mov    r8,rsi
  4254f0:	mov    rcx,rax
  4254f3:	call   0x43f0a8
  4254f8:	movsxd rdx,DWORD PTR [rbx+0x20]
  4254fc:	mov    r9,rax
  4254ff:	mov    BYTE PTR [rax+rsi*1],0x0
  425503:	mov    rax,QWORD PTR [rbx+0x10]
  425507:	lea    ecx,[rdx+0x1]
  42550a:	mov    DWORD PTR [rbx+0x20],ecx
  42550d:	mov    QWORD PTR [rax+rdx*8],r9
  425511:	add    rsp,0x20
  425515:	pop    rbx
  425516:	pop    rsi
  425517:	pop    rdi
  425518:	ret    
  425519:	nop    DWORD PTR [rax+0x0]
  425520:	mov    DWORD PTR [rcx+0x28],0x5
  425527:	mov    ecx,0x28
  42552c:	call   0x4385d0
  425531:	mov    QWORD PTR [rbx+0x10],rax
  425535:	jmp    0x4254df
  425537:	mov    ecx,0x7fffffff
  42553c:	call   0x438570
  425541:	nop
  425542:	nop    DWORD PTR [rax+0x0]
  425546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425550:	sub    rsp,0x28
  425554:	cmp    ecx,0x56
  425557:	je     0x425590
  425559:	cmp    ecx,0x75
  42555c:	je     0x425580
  42555e:	cmp    ecx,0x43
  425561:	je     0x425570
  425563:	call   0x43f180
  425568:	nop    DWORD PTR [rax+rax*1+0x0]
  425570:	mov    eax,0x1
  425575:	add    rsp,0x28
  425579:	ret    
  42557a:	nop    WORD PTR [rax+rax*1+0x0]
  425580:	mov    eax,0x4
  425585:	add    rsp,0x28
  425589:	ret    
  42558a:	nop    WORD PTR [rax+rax*1+0x0]
  425590:	mov    eax,0x2
  425595:	add    rsp,0x28
  425599:	ret    
  42559a:	nop    WORD PTR [rax+rax*1+0x0]
  4255a0:	sub    rsp,0x28
  4255a4:	cmp    ecx,0x7
  4255a7:	ja     0x425640
  4255ad:	lea    rax,[rip+0x27a78]        # 0x44d02c
  4255b4:	mov    ecx,ecx
  4255b6:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4255ba:	add    rax,rdx
  4255bd:	jmp    rax
  4255bf:	nop
  4255c0:	lea    rax,[rip+0x27a00]        # 0x44cfc7
  4255c7:	add    rsp,0x28
  4255cb:	ret    
  4255cc:	nop    DWORD PTR [rax+0x0]
  4255d0:	lea    rax,[rip+0x27a04]        # 0x44cfdb
  4255d7:	add    rsp,0x28
  4255db:	ret    
  4255dc:	nop    DWORD PTR [rax+0x0]
  4255e0:	lea    rax,[rip+0x279e9]        # 0x44cfd0
  4255e7:	add    rsp,0x28
  4255eb:	ret    
  4255ec:	nop    DWORD PTR [rax+0x0]
  4255f0:	lea    rax,[rip+0x279f3]        # 0x44cfea
  4255f7:	add    rsp,0x28
  4255fb:	ret    
  4255fc:	nop    DWORD PTR [rax+0x0]
  425600:	lea    rax,[rip+0x279f4]        # 0x44cffb
  425607:	add    rsp,0x28
  42560b:	ret    
  42560c:	nop    DWORD PTR [rax+0x0]
  425610:	lea    rax,[rip+0x279f8]        # 0x44d00f
  425617:	add    rsp,0x28
  42561b:	ret    
  42561c:	nop    DWORD PTR [rax+0x0]
  425620:	lea    rax,[rip+0x27999]        # 0x44cfc0
  425627:	add    rsp,0x28
  42562b:	ret    
  42562c:	nop    DWORD PTR [rax+0x0]
  425630:	lea    rax,[rip+0x2798a]        # 0x44cfc1
  425637:	add    rsp,0x28
  42563b:	ret    
  42563c:	nop    DWORD PTR [rax+0x0]
  425640:	call   0x43f180
  425645:	nop
  425646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425650:	push   rdi
  425651:	push   rsi
  425652:	push   rbx
  425653:	sub    rsp,0x20
  425657:	mov    rdi,rcx
  42565a:	mov    rsi,rdx
  42565d:	movsxd rdx,DWORD PTR [rsi]
  425660:	mov    rax,rdx
  425663:	lea    rbx,[rdx*8-0x8]
  42566b:	jmp    0x425688
  42566d:	nop    DWORD PTR [rax]
  425670:	mov    r8,QWORD PTR [rdi]
  425673:	sub    eax,0x1
  425676:	lea    r9,[rbx-0x8]
  42567a:	mov    DWORD PTR [rsi],eax
  42567c:	mov    rcx,QWORD PTR [r8+rbx*1]
  425680:	test   rcx,rcx
  425683:	jne    0x425694
  425685:	mov    rbx,r9
  425688:	test   eax,eax
  42568a:	jg     0x425670
  42568c:	add    rsp,0x20
  425690:	pop    rbx
  425691:	pop    rsi
  425692:	pop    rdi
  425693:	ret    
  425694:	call   0x43f100
  425699:	mov    rax,QWORD PTR [rdi]
  42569c:	mov    QWORD PTR [rax+rbx*1],0x0
  4256a4:	jmp    0x42565d
  4256a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4256b0:	push   rdi
  4256b1:	push   rsi
  4256b2:	push   rbx
  4256b3:	sub    rsp,0x20
  4256b7:	mov    rbx,rcx
  4256ba:	lea    rdx,[rcx+0x30]
  4256be:	lea    rcx,[rcx+0x8]
  4256c2:	call   0x425650
  4256c7:	mov    rcx,QWORD PTR [rbx+0x8]
  4256cb:	test   rcx,rcx
  4256ce:	je     0x4256e4
  4256d0:	call   0x43f100
  4256d5:	mov    QWORD PTR [rbx+0x8],0x0
  4256dd:	mov    DWORD PTR [rbx+0x34],0x0
  4256e4:	mov    rcx,QWORD PTR [rbx+0x50]
  4256e8:	test   rcx,rcx
  4256eb:	je     0x425726
  4256ed:	mov    eax,DWORD PTR [rbx+0x58]
  4256f0:	test   eax,eax
  4256f2:	jle    0x425719
  4256f4:	xor    edi,edi
  4256f6:	xor    esi,esi
  4256f8:	nop    DWORD PTR [rax+rax*1+0x0]
  425700:	mov    rcx,QWORD PTR [rcx+rdi*1]
  425704:	add    esi,0x1
  425707:	add    rdi,0x8
  42570b:	call   0x43f100
  425710:	cmp    DWORD PTR [rbx+0x58],esi
  425713:	mov    rcx,QWORD PTR [rbx+0x50]
  425717:	jg     0x425700
  425719:	call   0x43f100
  42571e:	mov    QWORD PTR [rbx+0x50],0x0
  425726:	mov    rsi,QWORD PTR [rbx+0x60]
  42572a:	test   rsi,rsi
  42572d:	je     0x425767
  42572f:	mov    rcx,QWORD PTR [rsi]
  425732:	test   rcx,rcx
  425735:	je     0x425757
  425737:	call   0x43f100
  42573c:	mov    QWORD PTR [rsi+0x8],0x0
  425744:	mov    QWORD PTR [rsi+0x10],0x0
  42574c:	mov    QWORD PTR [rsi],0x0
  425753:	mov    rsi,QWORD PTR [rbx+0x60]
  425757:	mov    rcx,rsi
  42575a:	call   0x43f100
  42575f:	mov    QWORD PTR [rbx+0x60],0x0
  425767:	add    rsp,0x20
  42576b:	pop    rbx
  42576c:	pop    rsi
  42576d:	pop    rdi
  42576e:	ret    
  42576f:	nop
  425770:	push   rbp
  425771:	push   rdi
  425772:	push   rsi
  425773:	push   rbx
  425774:	sub    rsp,0x28
  425778:	movsxd rbx,r8d
  42577b:	mov    rdi,rcx
  42577e:	mov    rbp,rdx
  425781:	lea    eax,[rbx+0x1]
  425784:	movsxd rsi,r9d
  425787:	movsxd rcx,eax
  42578a:	call   0x4385d0
  42578f:	mov    r8,rbx
  425792:	mov    rdx,rbp
  425795:	mov    rcx,rax
  425798:	call   0x43f0a8
  42579d:	mov    r9,rax
  4257a0:	mov    BYTE PTR [rax+rbx*1],0x0
  4257a4:	mov    rax,QWORD PTR [rdi]
  4257a7:	mov    QWORD PTR [rax+rsi*8],r9
  4257ab:	add    rsp,0x28
  4257af:	pop    rbx
  4257b0:	pop    rsi
  4257b1:	pop    rdi
  4257b2:	pop    rbp
  4257b3:	ret    
  4257b4:	xchg   ax,ax
  4257b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4257c0:	push   rdi
  4257c1:	push   rsi
  4257c2:	push   rbx
  4257c3:	sub    rsp,0x20
  4257c7:	mov    rdi,rcx
  4257ca:	mov    rcx,QWORD PTR [rcx]
  4257cd:	test   rcx,rcx
  4257d0:	je     0x425822
  4257d2:	mov    rax,QWORD PTR [rdi+0x8]
  4257d6:	mov    r8,QWORD PTR [rdi+0x10]
  4257da:	movsxd r9,edx
  4257dd:	sub    r8,rax
  4257e0:	cmp    r8,r9
  4257e3:	jge    0x42581a
  4257e5:	sub    rax,rcx
  4257e8:	mov    rsi,rax
  4257eb:	mov    eax,0x3fffffff
  4257f0:	sub    eax,esi
  4257f2:	cmp    edx,eax
  4257f4:	jg     0x42584f
  4257f6:	lea    ebx,[rdx+rsi*1]
  4257f9:	movsxd rsi,esi
  4257fc:	add    ebx,ebx
  4257fe:	movsxd rbx,ebx
  425801:	mov    rdx,rbx
  425804:	call   0x438650
  425809:	add    rsi,rax
  42580c:	add    rbx,rax
  42580f:	mov    QWORD PTR [rdi],rax
  425812:	mov    QWORD PTR [rdi+0x8],rsi
  425816:	mov    QWORD PTR [rdi+0x10],rbx
  42581a:	add    rsp,0x20
  42581e:	pop    rbx
  42581f:	pop    rsi
  425820:	pop    rdi
  425821:	ret    
  425822:	cmp    edx,0x20
  425825:	movsxd rax,edx
  425828:	mov    ebx,0x20
  42582d:	cmovge rbx,rax
  425831:	mov    rcx,rbx
  425834:	call   0x4385d0
  425839:	add    rbx,rax
  42583c:	mov    QWORD PTR [rdi],rax
  42583f:	mov    QWORD PTR [rdi+0x8],rax
  425843:	mov    QWORD PTR [rdi+0x10],rbx
  425847:	add    rsp,0x20
  42584b:	pop    rbx
  42584c:	pop    rsi
  42584d:	pop    rdi
  42584e:	ret    
  42584f:	mov    ecx,0x7fffffff
  425854:	call   0x438570
  425859:	nop
  42585a:	nop    WORD PTR [rax+rax*1+0x0]
  425860:	push   rdi
  425861:	push   rsi
  425862:	push   rbx
  425863:	sub    rsp,0x20
  425867:	movsxd rbx,r8d
  42586a:	mov    rsi,rcx
  42586d:	mov    rdi,rdx
  425870:	mov    edx,ebx
  425872:	call   0x4257c0
  425877:	mov    rcx,QWORD PTR [rsi+0x8]
  42587b:	mov    r8,rbx
  42587e:	mov    rdx,rdi
  425881:	call   0x43f0a8
  425886:	add    QWORD PTR [rsi+0x8],rbx
  42588a:	add    rsp,0x20
  42588e:	pop    rbx
  42588f:	pop    rsi
  425890:	pop    rdi
  425891:	ret    
  425892:	nop    DWORD PTR [rax+0x0]
  425896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4258a0:	push   rdi
  4258a1:	push   rsi
  4258a2:	push   rbx
  4258a3:	sub    rsp,0x20
  4258a7:	movsxd rsi,r8d
  4258aa:	mov    rbx,rcx
  4258ad:	mov    rdi,rdx
  4258b0:	mov    edx,esi
  4258b2:	call   0x4257c0
  4258b7:	mov    rax,QWORD PTR [rbx+0x8]
  4258bb:	mov    rcx,QWORD PTR [rbx]
  4258be:	sub    rax,0x1
  4258c2:	cmp    rax,rcx
  4258c5:	jb     0x4258e5
  4258c7:	nop    WORD PTR [rax+rax*1+0x0]
  4258d0:	movzx  r9d,BYTE PTR [rax]
  4258d4:	sub    rax,0x1
  4258d8:	mov    BYTE PTR [rax+rsi*1+0x1],r9b
  4258dd:	mov    rcx,QWORD PTR [rbx]
  4258e0:	cmp    rax,rcx
  4258e3:	jae    0x4258d0
  4258e5:	mov    r8,rsi
  4258e8:	mov    rdx,rdi
  4258eb:	call   0x43f0a8
  4258f0:	add    QWORD PTR [rbx+0x8],rsi
  4258f4:	add    rsp,0x20
  4258f8:	pop    rbx
  4258f9:	pop    rsi
  4258fa:	pop    rdi
  4258fb:	ret    
  4258fc:	nop    DWORD PTR [rax+0x0]
  425900:	push   rsi
  425901:	push   rbx
  425902:	sub    rsp,0x28
  425906:	mov    rsi,rcx
  425909:	mov    rcx,rdx
  42590c:	mov    rbx,rdx
  42590f:	call   0x43f028
  425914:	test   eax,eax
  425916:	jne    0x425920
  425918:	add    rsp,0x28
  42591c:	pop    rbx
  42591d:	pop    rsi
  42591e:	ret    
  42591f:	nop
  425920:	mov    r8d,eax
  425923:	mov    rdx,rbx
  425926:	mov    rcx,rsi
  425929:	add    rsp,0x28
  42592d:	pop    rbx
  42592e:	pop    rsi
  42592f:	jmp    0x4258a0
  425934:	xchg   ax,ax
  425936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425940:	push   rdi
  425941:	push   rsi
  425942:	push   rbx
  425943:	sub    rsp,0x20
  425947:	mov    rsi,rcx
  42594a:	mov    rcx,rdx
  42594d:	mov    rdi,rdx
  425950:	call   0x43f028
  425955:	mov    rcx,rsi
  425958:	mov    edx,eax
  42595a:	mov    rbx,rax
  42595d:	call   0x4257c0
  425962:	mov    rcx,QWORD PTR [rsi+0x8]
  425966:	movsxd rbx,ebx
  425969:	mov    rdx,rdi
  42596c:	mov    r8,rbx
  42596f:	call   0x43f0a8
  425974:	add    QWORD PTR [rsi+0x8],rbx
  425978:	add    rsp,0x20
  42597c:	pop    rbx
  42597d:	pop    rsi
  42597e:	pop    rdi
  42597f:	ret    
  425980:	push   rsi
  425981:	push   rbx
  425982:	sub    rsp,0x58
  425986:	lea    rbx,[rsp+0x20]
  42598b:	mov    r8d,edx
  42598e:	lea    rdx,[rip+0x276b7]        # 0x44d04c
  425995:	mov    rsi,rcx
  425998:	mov    rcx,rbx
  42599b:	call   0x43f068
  4259a0:	cmp    BYTE PTR [rsp+0x20],0x0
  4259a5:	je     0x4259b3
  4259a7:	mov    rdx,rbx
  4259aa:	mov    rcx,rsi
  4259ad:	call   0x425940
  4259b2:	nop
  4259b3:	add    rsp,0x58
  4259b7:	pop    rbx
  4259b8:	pop    rsi
  4259b9:	ret    
  4259ba:	nop    WORD PTR [rax+rax*1+0x0]
  4259c0:	push   rdi
  4259c1:	push   rsi
  4259c2:	push   rbx
  4259c3:	sub    rsp,0x20
  4259c7:	mov    rsi,rdx
  4259ca:	mov    rdx,QWORD PTR [rcx]
  4259cd:	mov    rbx,rcx
  4259d0:	movzx  eax,BYTE PTR [rdx]
  4259d3:	cmp    al,0x2d
  4259d5:	je     0x425a50
  4259d7:	cmp    al,0x2b
  4259d9:	mov    r8d,eax
  4259dc:	je     0x425a41
  4259de:	mov    rdi,QWORD PTR [rip+0x2bbfb]        # 0x4515e0
  4259e5:	movzx  edx,r8b
  4259e9:	xor    eax,eax
  4259eb:	test   BYTE PTR [rdi+rdx*2],0x4
  4259ef:	je     0x425a39
  4259f1:	mov    eax,r8d
  4259f4:	jmp    0x425a19
  4259f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425a00:	mov    rax,QWORD PTR [rbx]
  425a03:	lea    r8,[rax+0x1]
  425a07:	mov    QWORD PTR [rbx],r8
  425a0a:	movzx  r8d,BYTE PTR [rax+0x1]
  425a0f:	test   BYTE PTR [rdi+r8*2],0x4
  425a14:	mov    rax,r8
  425a17:	je     0x425a34
  425a19:	test   al,al
  425a1b:	mov    BYTE PTR [rip+0x33a9f],al        # 0x4594c0
  425a21:	je     0x425a00
  425a23:	lea    rdx,[rip+0x33a96]        # 0x4594c0
  425a2a:	mov    rcx,rsi
  425a2d:	call   0x425940
  425a32:	jmp    0x425a00
  425a34:	mov    eax,0x1
  425a39:	add    rsp,0x20
  425a3d:	pop    rbx
  425a3e:	pop    rsi
  425a3f:	pop    rdi
  425a40:	ret    
  425a41:	lea    rax,[rdx+0x1]
  425a45:	mov    QWORD PTR [rcx],rax
  425a48:	movzx  r8d,BYTE PTR [rdx+0x1]
  425a4d:	jmp    0x4259de
  425a4f:	nop
  425a50:	lea    rdx,[rip+0x33a69]        # 0x4594c0
  425a57:	mov    rcx,rsi
  425a5a:	mov    BYTE PTR [rip+0x33a5f],0x2d        # 0x4594c0
  425a61:	call   0x425940
  425a66:	mov    rax,QWORD PTR [rbx]
  425a69:	lea    rdx,[rax+0x1]
  425a6d:	mov    QWORD PTR [rbx],rdx
  425a70:	movzx  r8d,BYTE PTR [rax+0x1]
  425a75:	jmp    0x4259de
  425a7a:	nop    WORD PTR [rax+rax*1+0x0]
  425a80:	push   rdi
  425a81:	push   rsi
  425a82:	push   rbx
  425a83:	sub    rsp,0x20
  425a87:	mov    rax,QWORD PTR [rdx]
  425a8a:	cmp    rax,r8
  425a8d:	je     0x425ab8
  425a8f:	mov    rbx,r8
  425a92:	mov    rsi,rcx
  425a95:	mov    rdi,rdx
  425a98:	sub    rbx,rax
  425a9b:	mov    edx,ebx
  425a9d:	movsxd rbx,ebx
  425aa0:	call   0x4257c0
  425aa5:	mov    rcx,QWORD PTR [rsi+0x8]
  425aa9:	mov    rdx,QWORD PTR [rdi]
  425aac:	mov    r8,rbx
  425aaf:	call   0x43f0a8
  425ab4:	add    QWORD PTR [rsi+0x8],rbx
  425ab8:	add    rsp,0x20
  425abc:	pop    rbx
  425abd:	pop    rsi
  425abe:	pop    rdi
  425abf:	ret    
  425ac0:	push   r13
  425ac2:	push   r12
  425ac4:	push   rbp
  425ac5:	push   rdi
  425ac6:	push   rsi
  425ac7:	push   rbx
  425ac8:	sub    rsp,0x28
  425acc:	mov    rsi,rcx
  425acf:	mov    rbx,rdx
  425ad2:	call   0x4256b0
  425ad7:	mov    rcx,rsi
  425ada:	call   0x425320
  425adf:	mov    rax,QWORD PTR [rbx]
  425ae2:	mov    QWORD PTR [rsi],rax
  425ae5:	mov    rax,QWORD PTR [rbx+0x8]
  425ae9:	mov    QWORD PTR [rsi+0x8],rax
  425aed:	mov    rax,QWORD PTR [rbx+0x10]
  425af1:	mov    QWORD PTR [rsi+0x10],rax
  425af5:	mov    rax,QWORD PTR [rbx+0x18]
  425af9:	mov    QWORD PTR [rsi+0x18],rax
  425afd:	mov    rax,QWORD PTR [rbx+0x20]
  425b01:	mov    QWORD PTR [rsi+0x20],rax
  425b05:	mov    rax,QWORD PTR [rbx+0x28]
  425b09:	mov    QWORD PTR [rsi+0x28],rax
  425b0d:	mov    rax,QWORD PTR [rbx+0x30]
  425b11:	mov    QWORD PTR [rsi+0x30],rax
  425b15:	mov    rax,QWORD PTR [rbx+0x38]
  425b19:	mov    QWORD PTR [rsi+0x38],rax
  425b1d:	mov    rax,QWORD PTR [rbx+0x40]
  425b21:	mov    QWORD PTR [rsi+0x40],rax
  425b25:	mov    rax,QWORD PTR [rbx+0x48]
  425b29:	mov    QWORD PTR [rsi+0x48],rax
  425b2d:	mov    rax,QWORD PTR [rbx+0x50]
  425b31:	mov    QWORD PTR [rsi+0x50],rax
  425b35:	mov    rax,QWORD PTR [rbx+0x58]
  425b39:	mov    QWORD PTR [rsi+0x58],rax
  425b3d:	mov    rax,QWORD PTR [rbx+0x60]
  425b41:	mov    QWORD PTR [rsi+0x60],rax
  425b45:	mov    rax,QWORD PTR [rbx+0x68]
  425b49:	mov    QWORD PTR [rsi+0x68],rax
  425b4d:	movsxd rax,DWORD PTR [rbx+0x34]
  425b51:	test   eax,eax
  425b53:	jne    0x425ce4
  425b59:	mov    r9d,DWORD PTR [rbx+0x30]
  425b5d:	xor    ebp,ebp
  425b5f:	xor    r12d,r12d
  425b62:	test   r9d,r9d
  425b65:	jle    0x425bbc
  425b67:	nop    WORD PTR [rax+rax*1+0x0]
  425b70:	mov    rax,QWORD PTR [rbx+0x8]
  425b74:	mov    r13,rbp
  425b77:	add    r12d,0x1
  425b7b:	mov    rcx,QWORD PTR [rax+rbp*1]
  425b7f:	call   0x43f028
  425b84:	add    r13,QWORD PTR [rsi+0x8]
  425b88:	lea    edi,[rax+0x1]
  425b8b:	movsxd rdi,edi
  425b8e:	mov    rcx,rdi
  425b91:	call   0x4385d0
  425b96:	mov    QWORD PTR [r13+0x0],rax
  425b9a:	mov    rax,QWORD PTR [rsi+0x8]
  425b9e:	mov    r8,rdi
  425ba1:	mov    rcx,QWORD PTR [rax+rbp*1]
  425ba5:	mov    rax,QWORD PTR [rbx+0x8]
  425ba9:	mov    rdx,QWORD PTR [rax+rbp*1]
  425bad:	add    rbp,0x8
  425bb1:	call   0x43f0a8
  425bb6:	cmp    DWORD PTR [rbx+0x30],r12d
  425bba:	jg     0x425b70
  425bbc:	movsxd rax,DWORD PTR [rbx+0x28]
  425bc0:	test   eax,eax
  425bc2:	jne    0x425db0
  425bc8:	mov    r8d,DWORD PTR [rbx+0x20]
  425bcc:	xor    ebp,ebp
  425bce:	xor    r12d,r12d
  425bd1:	test   r8d,r8d
  425bd4:	jle    0x425c2c
  425bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425be0:	mov    rax,QWORD PTR [rbx+0x10]
  425be4:	mov    r13,rbp
  425be7:	add    r12d,0x1
  425beb:	mov    rcx,QWORD PTR [rax+rbp*1]
  425bef:	call   0x43f028
  425bf4:	add    r13,QWORD PTR [rsi+0x10]
  425bf8:	lea    edi,[rax+0x1]
  425bfb:	movsxd rdi,edi
  425bfe:	mov    rcx,rdi
  425c01:	call   0x4385d0
  425c06:	mov    QWORD PTR [r13+0x0],rax
  425c0a:	mov    rax,QWORD PTR [rsi+0x10]
  425c0e:	mov    r8,rdi
  425c11:	mov    rcx,QWORD PTR [rax+rbp*1]
  425c15:	mov    rax,QWORD PTR [rbx+0x10]
  425c19:	mov    rdx,QWORD PTR [rax+rbp*1]
  425c1d:	add    rbp,0x8
  425c21:	call   0x43f0a8
  425c26:	cmp    DWORD PTR [rbx+0x20],r12d
  425c2a:	jg     0x425be0
  425c2c:	movsxd rax,DWORD PTR [rbx+0x2c]
  425c30:	test   eax,eax
  425c32:	jne    0x425d90
  425c38:	mov    ecx,DWORD PTR [rbx+0x24]
  425c3b:	xor    ebp,ebp
  425c3d:	xor    r12d,r12d
  425c40:	test   ecx,ecx
  425c42:	jle    0x425c90
  425c44:	mov    rax,QWORD PTR [rbx+0x18]
  425c48:	mov    r13,rbp
  425c4b:	add    r12d,0x1
  425c4f:	mov    rcx,QWORD PTR [rax+rbp*1]
  425c53:	call   0x43f028
  425c58:	add    r13,QWORD PTR [rsi+0x18]
  425c5c:	lea    edi,[rax+0x1]
  425c5f:	movsxd rdi,edi
  425c62:	mov    rcx,rdi
  425c65:	call   0x4385d0
  425c6a:	mov    QWORD PTR [r13+0x0],rax
  425c6e:	mov    rax,QWORD PTR [rsi+0x18]
  425c72:	mov    r8,rdi
  425c75:	mov    rcx,QWORD PTR [rax+rbp*1]
  425c79:	mov    rax,QWORD PTR [rbx+0x18]
  425c7d:	mov    rdx,QWORD PTR [rax+rbp*1]
  425c81:	add    rbp,0x8
  425c85:	call   0x43f0a8
  425c8a:	cmp    DWORD PTR [rbx+0x24],r12d
  425c8e:	jg     0x425c44
  425c90:	movsxd rax,DWORD PTR [rbx+0x58]
  425c94:	test   eax,eax
  425c96:	jne    0x425d00
  425c98:	cmp    QWORD PTR [rbx+0x60],0x0
  425c9d:	je     0x425d7d
  425ca3:	mov    ecx,0x18
  425ca8:	call   0x4385d0
  425cad:	mov    QWORD PTR [rsi+0x60],rax
  425cb1:	mov    rdx,QWORD PTR [rbx+0x60]
  425cb5:	mov    rcx,rax
  425cb8:	mov    QWORD PTR [rax+0x10],0x0
  425cc0:	mov    QWORD PTR [rax+0x8],0x0
  425cc8:	mov    QWORD PTR [rax],0x0
  425ccf:	mov    r8,QWORD PTR [rdx+0x8]
  425cd3:	add    rsp,0x28
  425cd7:	pop    rbx
  425cd8:	pop    rsi
  425cd9:	pop    rdi
  425cda:	pop    rbp
  425cdb:	pop    r12
  425cdd:	pop    r13
  425cdf:	jmp    0x425a80
  425ce4:	lea    rcx,[rax*8+0x0]
  425cec:	call   0x4385d0
  425cf1:	mov    QWORD PTR [rsi+0x8],rax
  425cf5:	jmp    0x425b59
  425cfa:	nop    WORD PTR [rax+rax*1+0x0]
  425d00:	lea    rcx,[rax*8+0x0]
  425d08:	call   0x4385d0
  425d0d:	mov    edx,DWORD PTR [rbx+0x58]
  425d10:	mov    QWORD PTR [rsi+0x50],rax
  425d14:	test   edx,edx
  425d16:	jle    0x425c98
  425d18:	mov    r12,rax
  425d1b:	xor    edi,edi
  425d1d:	jmp    0x425d24
  425d1f:	nop
  425d20:	mov    r12,QWORD PTR [rsi+0x50]
  425d24:	mov    rax,QWORD PTR [rbx+0x50]
  425d28:	lea    rbp,[rdi*8+0x0]
  425d30:	add    r12,rbp
  425d33:	mov    rcx,QWORD PTR [rax+rdi*8]
  425d37:	call   0x43f028
  425d3c:	lea    ebp,[rax+0x1]
  425d3f:	movsxd rbp,ebp
  425d42:	mov    rcx,rbp
  425d45:	call   0x4385d0
  425d4a:	mov    QWORD PTR [r12],rax
  425d4e:	mov    rax,QWORD PTR [rsi+0x50]
  425d52:	mov    r8,rbp
  425d55:	mov    rcx,QWORD PTR [rax+rdi*8]
  425d59:	mov    rax,QWORD PTR [rbx+0x50]
  425d5d:	mov    rdx,QWORD PTR [rax+rdi*8]
  425d61:	call   0x43f0a8
  425d66:	lea    eax,[rdi+0x1]
  425d69:	add    rdi,0x1
  425d6d:	cmp    DWORD PTR [rbx+0x58],eax
  425d70:	jg     0x425d20
  425d72:	cmp    QWORD PTR [rbx+0x60],0x0
  425d77:	jne    0x425ca3
  425d7d:	add    rsp,0x28
  425d81:	pop    rbx
  425d82:	pop    rsi
  425d83:	pop    rdi
  425d84:	pop    rbp
  425d85:	pop    r12
  425d87:	pop    r13
  425d89:	ret    
  425d8a:	nop    WORD PTR [rax+rax*1+0x0]
  425d90:	lea    rcx,[rax*8+0x0]
  425d98:	call   0x4385d0
  425d9d:	mov    QWORD PTR [rsi+0x18],rax
  425da1:	jmp    0x425c38
  425da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425db0:	lea    rcx,[rax*8+0x0]
  425db8:	call   0x4385d0
  425dbd:	mov    QWORD PTR [rsi+0x10],rax
  425dc1:	jmp    0x425bc8
  425dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425dd0:	push   rdi
  425dd1:	push   rsi
  425dd2:	push   rbx
  425dd3:	sub    rsp,0x20
  425dd7:	mov    eax,DWORD PTR [rcx+0x5c]
  425dda:	test   eax,eax
  425ddc:	jne    0x425e48
  425dde:	mov    eax,DWORD PTR [rcx+0x34]
  425de1:	cmp    DWORD PTR [rcx+0x30],eax
  425de4:	movsxd rsi,r8d
  425de7:	mov    rdi,rdx
  425dea:	mov    rbx,rcx
  425ded:	jl     0x425e16
  425def:	test   eax,eax
  425df1:	je     0x425e50
  425df3:	cmp    eax,0x3fffffff
  425df8:	jg     0x425e67
  425dfa:	add    eax,eax
  425dfc:	mov    DWORD PTR [rcx+0x34],eax
  425dff:	cdqe   
  425e01:	mov    rcx,QWORD PTR [rcx+0x8]
  425e05:	lea    rdx,[rax*8+0x0]
  425e0d:	call   0x438650
  425e12:	mov    QWORD PTR [rbx+0x8],rax
  425e16:	lea    ecx,[rsi+0x1]
  425e19:	movsxd rcx,ecx
  425e1c:	call   0x4385d0
  425e21:	mov    rdx,rdi
  425e24:	mov    rcx,rax
  425e27:	mov    r8,rsi
  425e2a:	call   0x43f0a8
  425e2f:	movsxd rdx,DWORD PTR [rbx+0x30]
  425e33:	mov    r9,rax
  425e36:	mov    BYTE PTR [rax+rsi*1],0x0
  425e3a:	mov    rax,QWORD PTR [rbx+0x8]
  425e3e:	lea    ecx,[rdx+0x1]
  425e41:	mov    DWORD PTR [rbx+0x30],ecx
  425e44:	mov    QWORD PTR [rax+rdx*8],r9
  425e48:	add    rsp,0x20
  425e4c:	pop    rbx
  425e4d:	pop    rsi
  425e4e:	pop    rdi
  425e4f:	ret    
  425e50:	mov    DWORD PTR [rcx+0x34],0x3
  425e57:	mov    ecx,0x18
  425e5c:	call   0x4385d0
  425e61:	mov    QWORD PTR [rbx+0x8],rax
  425e65:	jmp    0x425e16
  425e67:	mov    ecx,0x7fffffff
  425e6c:	call   0x438570
  425e71:	nop
  425e72:	nop    DWORD PTR [rax+0x0]
  425e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425e80:	mov    BYTE PTR [rip+0x1c29a],cl        # 0x442120
  425e86:	ret    
  425e87:	nop    WORD PTR [rax+rax*1+0x0]
  425e90:	push   r14
  425e92:	push   r13
  425e94:	push   r12
  425e96:	push   rbp
  425e97:	push   rdi
  425e98:	push   rsi
  425e99:	push   rbx
  425e9a:	sub    rsp,0x20
  425e9e:	lea    rbx,[rip+0x28063]        # 0x44df08
  425ea5:	xor    esi,esi
  425ea7:	mov    r13,rcx
  425eaa:	mov    r12d,edx
  425ead:	call   0x43f028
  425eb2:	movsxd r14,eax
  425eb5:	mov    rbp,r14
  425eb8:	jmp    0x425ece
  425eba:	nop    WORD PTR [rax+rax*1+0x0]
  425ec0:	add    rsi,0x1
  425ec4:	add    rbx,0x18
  425ec8:	cmp    rsi,0x4f
  425ecc:	je     0x425f20
  425ece:	mov    rdi,QWORD PTR [rbx]
  425ed1:	mov    rcx,rdi
  425ed4:	call   0x43f028
  425ed9:	cmp    ebp,eax
  425edb:	jne    0x425ec0
  425edd:	mov    eax,DWORD PTR [rbx+0x8]
  425ee0:	xor    eax,r12d
  425ee3:	test   al,0x2
  425ee5:	jne    0x425ec0
  425ee7:	mov    r8,r14
  425eea:	mov    rdx,r13
  425eed:	mov    rcx,rdi
  425ef0:	call   0x43f0b0
  425ef5:	test   eax,eax
  425ef7:	jne    0x425ec0
  425ef9:	lea    rdx,[rsi+rsi*2]
  425efd:	lea    rax,[rip+0x27ffc]        # 0x44df00
  425f04:	mov    rax,QWORD PTR [rax+rdx*8]
  425f08:	add    rsp,0x20
  425f0c:	pop    rbx
  425f0d:	pop    rsi
  425f0e:	pop    rdi
  425f0f:	pop    rbp
  425f10:	pop    r12
  425f12:	pop    r13
  425f14:	pop    r14
  425f16:	ret    
  425f17:	nop    WORD PTR [rax+rax*1+0x0]
  425f20:	xor    eax,eax
  425f22:	add    rsp,0x20
  425f26:	pop    rbx
  425f27:	pop    rsi
  425f28:	pop    rdi
  425f29:	pop    rbp
  425f2a:	pop    r12
  425f2c:	pop    r13
  425f2e:	pop    r14
  425f30:	ret    
  425f31:	nop    DWORD PTR [rax+rax*1+0x0]
  425f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425f40:	cmp    ecx,0xffffffff
  425f43:	je     0x425f61
  425f45:	lea    rdx,[rip+0x27c74]        # 0x44dbc0
  425f4c:	jmp    0x425f54
  425f4e:	xchg   ax,ax
  425f50:	cmp    eax,ecx
  425f52:	je     0x425f61
  425f54:	add    rdx,0x18
  425f58:	mov    eax,DWORD PTR [rdx+0x8]
  425f5b:	test   eax,eax
  425f5d:	jne    0x425f50
  425f5f:	repz ret 
  425f61:	mov    DWORD PTR [rip+0x1c1bd],ecx        # 0x442124
  425f67:	mov    eax,ecx
  425f69:	ret    
  425f6a:	nop    WORD PTR [rax+rax*1+0x0]
  425f70:	push   rdi
  425f71:	push   rsi
  425f72:	push   rbx
  425f73:	sub    rsp,0x20
  425f77:	mov    esi,0xffffffff
  425f7c:	lea    rbx,[rip+0x27c3d]        # 0x44dbc0
  425f83:	mov    rdi,rcx
  425f86:	jmp    0x425f9b
  425f88:	nop    DWORD PTR [rax+rax*1+0x0]
  425f90:	add    rbx,0x18
  425f94:	mov    esi,DWORD PTR [rbx+0x8]
  425f97:	test   esi,esi
  425f99:	je     0x425faa
  425f9b:	mov    rdx,QWORD PTR [rbx]
  425f9e:	mov    rcx,rdi
  425fa1:	call   0x43f048
  425fa6:	test   eax,eax
  425fa8:	jne    0x425f90
  425faa:	mov    eax,esi
  425fac:	add    rsp,0x20
  425fb0:	pop    rbx
  425fb1:	pop    rsi
  425fb2:	pop    rdi
  425fb3:	ret    
  425fb4:	xchg   ax,ax
  425fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425fc0:	push   r15
  425fc2:	push   r14
  425fc4:	push   r13
  425fc6:	push   r12
  425fc8:	push   rbp
  425fc9:	push   rdi
  425fca:	push   rsi
  425fcb:	push   rbx
  425fcc:	sub    rsp,0x38
  425fd0:	lea    rdi,[rip+0x270b3]        # 0x44d08a
  425fd7:	mov    r12,rcx
  425fda:	mov    ecx,0x5
  425fdf:	mov    rsi,r12
  425fe2:	lea    rax,[r12+0x5]
  425fe7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  425fe9:	mov    rdi,QWORD PTR [rip+0x2b5f0]        # 0x4515e0
  425ff0:	seta   cl
  425ff3:	setb   dl
  425ff6:	cmp    cl,dl
  425ff8:	cmove  r12,rax
  425ffc:	movzx  eax,BYTE PTR [r12]
  426001:	test   BYTE PTR [rdi+rax*2],0x8
  426005:	je     0x426204
  42600b:	mov    rcx,r12
  42600e:	mov    rbx,r12
  426011:	call   0x43f028
  426016:	lea    ecx,[rax+0x8]
  426019:	movsxd rcx,ecx
  42601c:	call   0x4385d0
  426021:	mov    r13,rax
  426024:	mov    QWORD PTR [rsp+0x28],rax
  426029:	movzx  eax,BYTE PTR [r12]
  42602e:	mov    r9,rax
  426031:	movzx  eax,WORD PTR [rdi+rax*2]
  426035:	test   al,0x8
  426037:	jne    0x426170
  42603d:	cmp    r9b,0x4f
  426041:	jne    0x426204
  426047:	lea    rbp,[rip+0x27902]        # 0x44d950
  42604e:	mov    r15d,0x4
  426054:	lea    rsi,[rip+0x26ff5]        # 0x44d050
  42605b:	xor    r14d,r14d
  42605e:	jmp    0x426080
  426060:	add    rbp,0x10
  426064:	mov    rsi,QWORD PTR [rbp-0x10]
  426068:	add    r14d,0x1
  42606c:	test   rsi,rsi
  42606f:	je     0x426204
  426075:	mov    rcx,rsi
  426078:	call   0x43f028
  42607d:	mov    r15,rax
  426080:	mov    r8,r15
  426083:	mov    rdx,rsi
  426086:	mov    rcx,rbx
  426089:	call   0x43f018
  42608e:	test   eax,eax
  426090:	jne    0x426060
  426092:	lea    rax,[rip+0x278a7]        # 0x44d940
  426099:	movsxd r14,r14d
  42609c:	add    rbx,r15
  42609f:	shl    r14,0x4
  4260a3:	lea    rbp,[rax+r14*1]
  4260a7:	mov    rcx,QWORD PTR [rbp+0x8]
  4260ab:	call   0x43f028
  4260b0:	lea    r9,[r13+0x1]
  4260b4:	mov    rdx,QWORD PTR [rbp+0x8]
  4260b8:	mov    BYTE PTR [r13+0x0],0x22
  4260bd:	mov    r8,rax
  4260c0:	mov    r14,rax
  4260c3:	mov    rcx,r9
  4260c6:	call   0x43f0a8
  4260cb:	movzx  r9d,BYTE PTR [rbx]
  4260cf:	add    r14,rax
  4260d2:	lea    r13,[r14+0x1]
  4260d6:	mov    BYTE PTR [r14],0x22
  4260da:	cmp    r9b,0x54
  4260de:	je     0x4261e4
  4260e4:	cmp    r9b,0x45
  4260e8:	je     0x426320
  4260ee:	lea    eax,[r9-0x4e]
  4260f2:	mov    rbp,r13
  4260f5:	mov    r14,rbx
  4260f8:	test   al,0xfd
  4260fa:	jne    0x426256
  426100:	cmp    BYTE PTR [rbx+0x1],0x0
  426104:	je     0x4263b7
  42610a:	cmp    r9b,0x58
  42610e:	je     0x426281
  426114:	cmp    r9b,0x53
  426118:	je     0x4262ae
  42611e:	cmp    r9b,0x44
  426122:	je     0x426470
  426128:	cmp    r9b,0x5f
  42612c:	jne    0x4264eb
  426132:	movzx  eax,BYTE PTR [r14+0x1]
  426137:	cmp    al,0x5f
  426139:	jne    0x426420
  42613f:	movzx  eax,BYTE PTR [r14+0x2]
  426144:	lea    rbx,[r14+0x2]
  426148:	mov    r9,rax
  42614b:	movzx  eax,WORD PTR [rdi+rax*2]
  42614f:	test   al,0x4
  426151:	jne    0x4261c2
  426153:	cmp    r9b,0x5f
  426157:	je     0x426330
  42615d:	test   al,0x8
  42615f:	lea    r13,[rbp+0x1]
  426163:	mov    BYTE PTR [rbp+0x0],0x2e
  426167:	je     0x42603d
  42616d:	nop    DWORD PTR [rax]
  426170:	add    rbx,0x1
  426174:	movzx  eax,BYTE PTR [rbx]
  426177:	add    r13,0x1
  42617b:	mov    BYTE PTR [r13-0x1],r9b
  42617f:	test   BYTE PTR [rdi+rax*2],0xc
  426183:	mov    r9,rax
  426186:	jne    0x426170
  426188:	cmp    al,0x5f
  42618a:	jne    0x4260da
  426190:	movzx  eax,BYTE PTR [rbx+0x1]
  426194:	test   BYTE PTR [rdi+rax*2],0xc
  426198:	je     0x426250
  42619e:	mov    r9d,0x5f
  4261a4:	jmp    0x426170
  4261a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4261b0:	cmp    al,0x5f
  4261b2:	jne    0x4264c1
  4261b8:	movzx  eax,BYTE PTR [rbx+0x1]
  4261bc:	test   BYTE PTR [rdi+rax*2],0x4
  4261c0:	je     0x426204
  4261c2:	add    rbx,0x1
  4261c6:	movzx  eax,BYTE PTR [rbx]
  4261c9:	test   BYTE PTR [rdi+rax*2],0x4
  4261cd:	mov    r9,rax
  4261d0:	je     0x4261b0
  4261d2:	add    rbx,0x1
  4261d6:	movzx  eax,BYTE PTR [rbx]
  4261d9:	test   BYTE PTR [rdi+rax*2],0x4
  4261dd:	mov    r9,rax
  4261e0:	jne    0x4261c2
  4261e2:	jmp    0x4261b0
  4261e4:	cmp    BYTE PTR [rbx+0x1],0x4b
  4261e8:	jne    0x426256
  4261ea:	movzx  eax,BYTE PTR [rbx+0x2]
  4261ee:	cmp    al,0x42
  4261f0:	je     0x426409
  4261f6:	cmp    al,0x5f
  4261f8:	jne    0x426204
  4261fa:	cmp    BYTE PTR [rbx+0x3],0x5f
  4261fe:	je     0x4263d8
  426204:	mov    rcx,r12
  426207:	call   0x43f028
  42620c:	lea    ecx,[rax+0x3]
  42620f:	movsxd rcx,ecx
  426212:	call   0x4385d0
  426217:	cmp    BYTE PTR [r12],0x3c
  42621c:	mov    rsi,rax
  42621f:	je     0x4263c5
  426225:	lea    rdx,[rip+0x26e64]        # 0x44d090
  42622c:	mov    r8,r12
  42622f:	mov    rcx,rax
  426232:	call   0x43f068
  426237:	mov    rax,rsi
  42623a:	add    rsp,0x38
  42623e:	pop    rbx
  42623f:	pop    rsi
  426240:	pop    rdi
  426241:	pop    rbp
  426242:	pop    r12
  426244:	pop    r13
  426246:	pop    r14
  426248:	pop    r15
  42624a:	ret    
  42624b:	nop    DWORD PTR [rax+rax*1+0x0]
  426250:	mov    r9d,0x5f
  426256:	cmp    r9b,0x4e
  42625a:	mov    rbp,r13
  42625d:	mov    r14,rbx
  426260:	sete   al
  426263:	test   al,al
  426265:	jne    0x426271
  426267:	cmp    r9b,0x53
  42626b:	jne    0x42610a
  426271:	cmp    BYTE PTR [rbx+0x1],0x0
  426275:	je     0x426204
  426277:	cmp    r9b,0x58
  42627b:	jne    0x426114
  426281:	movzx  r9d,BYTE PTR [rbx+0x1]
  426286:	lea    r14,[rbx+0x1]
  42628a:	cmp    r9b,0x62
  42628e:	jne    0x42629e
  426290:	add    r14,0x1
  426294:	movzx  r9d,BYTE PTR [r14]
  426298:	cmp    r9b,0x62
  42629c:	je     0x426290
  42629e:	cmp    r9b,0x6e
  4262a2:	je     0x426290
  4262a4:	cmp    r9b,0x53
  4262a8:	jne    0x42611e
  4262ae:	movzx  eax,BYTE PTR [r14+0x1]
  4262b3:	test   al,al
  4262b5:	je     0x426204
  4262bb:	movzx  ebx,BYTE PTR [r14+0x2]
  4262c0:	test   bl,bl
  4262c2:	je     0x4262cd
  4262c4:	cmp    bl,0x5f
  4262c7:	jne    0x426204
  4262cd:	cmp    al,0x4f
  4262cf:	je     0x4264a9
  4262d5:	jle    0x4263f5
  4262db:	cmp    al,0x52
  4262dd:	je     0x4264b5
  4262e3:	cmp    al,0x57
  4262e5:	jne    0x426204
  4262eb:	lea    rbp,[rip+0x26d69]        # 0x44d05b
  4262f2:	mov    rdx,rbp
  4262f5:	mov    rcx,r13
  4262f8:	add    r14,0x2
  4262fc:	call   0x43f040
  426301:	mov    rcx,rbp
  426304:	call   0x43f028
  426309:	mov    r9d,ebx
  42630c:	lea    rbp,[r13+rax*1+0x0]
  426311:	jmp    0x426128
  426316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426320:	cmp    BYTE PTR [rbx+0x1],0x0
  426324:	jne    0x426256
  42632a:	jmp    0x426204
  42632f:	nop
  426330:	cmp    BYTE PTR [r14+0x3],0x5f
  426335:	je     0x42615d
  42633b:	lea    r15,[rip+0x274fe]        # 0x44d840
  426342:	mov    r8d,0x6
  426348:	lea    rdi,[rip+0x26d34]        # 0x44d083
  42634f:	xor    r14d,r14d
  426352:	mov    r13,r15
  426355:	jmp    0x426380
  426357:	nop    WORD PTR [rax+rax*1+0x0]
  426360:	add    r13,0x10
  426364:	mov    rdi,QWORD PTR [r13+0x0]
  426368:	add    r14d,0x1
  42636c:	test   rdi,rdi
  42636f:	je     0x426204
  426375:	mov    rcx,rdi
  426378:	call   0x43f028
  42637d:	mov    r8,rax
  426380:	mov    rdx,rdi
  426383:	mov    rcx,rbx
  426386:	call   0x43f018
  42638b:	test   eax,eax
  42638d:	jne    0x426360
  42638f:	movsxd r14,r14d
  426392:	shl    r14,0x4
  426396:	mov    rdi,QWORD PTR [r15+r14*1+0x8]
  42639b:	mov    rcx,rdi
  42639e:	call   0x43f028
  4263a3:	mov    rbx,rax
  4263a6:	mov    rcx,rbp
  4263a9:	mov    r8,rax
  4263ac:	mov    rdx,rdi
  4263af:	add    rbp,rbx
  4263b2:	call   0x43f0a8
  4263b7:	mov    BYTE PTR [rbp+0x0],0x0
  4263bb:	mov    rax,QWORD PTR [rsp+0x28]
  4263c0:	jmp    0x42623a
  4263c5:	mov    rdx,r12
  4263c8:	mov    rcx,rax
  4263cb:	call   0x43f040
  4263d0:	mov    rax,rsi
  4263d3:	jmp    0x42623a
  4263d8:	movzx  eax,BYTE PTR [rbx+0x4]
  4263dc:	mov    BYTE PTR [r13+0x0],0x2e
  4263e1:	add    rbx,0x4
  4263e5:	add    r13,0x1
  4263e9:	mov    r9,rax
  4263ec:	movzx  eax,WORD PTR [rdi+rax*2]
  4263f0:	jmp    0x426035
  4263f5:	cmp    al,0x49
  4263f7:	jne    0x426204
  4263fd:	lea    rbp,[rip+0x26c5e]        # 0x44d062
  426404:	jmp    0x4262f2
  426409:	cmp    BYTE PTR [rbx+0x3],0x0
  42640d:	jne    0x426204
  426413:	mov    rbp,r13
  426416:	jmp    0x4263b7
  426418:	nop    DWORD PTR [rax+rax*1+0x0]
  426420:	cmp    al,0x45
  426422:	je     0x42642c
  426424:	cmp    al,0x42
  426426:	jne    0x426204
  42642c:	movzx  ecx,BYTE PTR [r14+0x2]
  426431:	lea    rax,[r14+0x2]
  426435:	test   BYTE PTR [rdi+rcx*2],0x4
  426439:	mov    rdx,rcx
  42643c:	je     0x42644e
  42643e:	add    rax,0x1
  426442:	movzx  ecx,BYTE PTR [rax]
  426445:	test   BYTE PTR [rdi+rcx*2],0x4
  426449:	mov    rdx,rcx
  42644c:	jne    0x42643e
  42644e:	cmp    dl,0x73
  426451:	jne    0x426204
  426457:	cmp    BYTE PTR [rax+0x1],0x0
  42645b:	jne    0x426204
  426461:	jmp    0x4263b7
  426466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426470:	movzx  eax,BYTE PTR [r14+0x1]
  426475:	cmp    al,0x41
  426477:	je     0x426530
  42647d:	cmp    al,0x46
  42647f:	jne    0x426204
  426485:	lea    rbx,[rip+0x26be5]        # 0x44d071
  42648c:	mov    rdx,rbx
  42648f:	mov    rcx,r13
  426492:	call   0x43f040
  426497:	mov    rcx,rbx
  42649a:	call   0x43f028
  42649f:	lea    rbp,[r13+rax*1+0x0]
  4264a4:	jmp    0x4263b7
  4264a9:	lea    rbp,[rip+0x26bb9]        # 0x44d069
  4264b0:	jmp    0x4262f2
  4264b5:	lea    rbp,[rip+0x26b99]        # 0x44d055
  4264bc:	jmp    0x4262f2
  4264c1:	cmp    al,0x58
  4264c3:	mov    r14,rbx
  4264c6:	jne    0x4264eb
  4264c8:	movzx  r9d,BYTE PTR [rbx+0x1]
  4264cd:	add    r14,0x1
  4264d1:	cmp    r9b,0x62
  4264d5:	jne    0x4264e5
  4264d7:	add    r14,0x1
  4264db:	movzx  r9d,BYTE PTR [r14]
  4264df:	cmp    r9b,0x62
  4264e3:	je     0x4264d7
  4264e5:	cmp    r9b,0x6e
  4264e9:	je     0x4264d7
  4264eb:	cmp    r9b,0x2e
  4264ef:	jne    0x426522
  4264f1:	movzx  eax,BYTE PTR [r14+0x1]
  4264f6:	test   BYTE PTR [rdi+rax*2],0x4
  4264fa:	je     0x426204
  426500:	movzx  edx,BYTE PTR [r14+0x2]
  426505:	lea    rax,[r14+0x2]
  426509:	test   BYTE PTR [rdi+rdx*2],0x4
  42650d:	mov    r9,rdx
  426510:	je     0x426522
  426512:	add    rax,0x1
  426516:	movzx  edx,BYTE PTR [rax]
  426519:	test   BYTE PTR [rdi+rdx*2],0x4
  42651d:	mov    r9,rdx
  426520:	jne    0x426512
  426522:	test   r9b,r9b
  426525:	je     0x4263b7
  42652b:	jmp    0x426204
  426530:	lea    rbx,[rip+0x26b44]        # 0x44d07b
  426537:	jmp    0x42648c
  42653c:	nop    DWORD PTR [rax+0x0]
  426540:	push   rbp
  426541:	push   rdi
  426542:	push   rsi
  426543:	push   rbx
  426544:	sub    rsp,0x98
  42654b:	mov    r8d,DWORD PTR [rip+0x1bbd2]        # 0x442124
  426552:	mov    rbp,rcx
  426555:	mov    ebx,edx
  426557:	cmp    r8d,0xffffffff
  42655b:	je     0x4265f2
  426561:	lea    rsi,[rsp+0x20]
  426566:	xor    eax,eax
  426568:	mov    ecx,0xe
  42656d:	test   edx,0xff04
  426573:	mov    rdi,rsi
  426576:	rep stos QWORD PTR es:[rdi],rax
  426579:	je     0x4265c0
  42657b:	mov    DWORD PTR [rsp+0x20],edx
  42657f:	test   DWORD PTR [rsp+0x20],0x4100
  426587:	jne    0x4265da
  426589:	test   dl,0x4
  42658c:	jne    0x426620
  426592:	and    dh,0x80
  426595:	jne    0x426603
  426597:	mov    rdx,rbp
  42659a:	mov    rcx,rsi
  42659d:	call   0x42b2f0
  4265a2:	mov    rcx,rsi
  4265a5:	mov    rbx,rax
  4265a8:	call   0x425320
  4265ad:	mov    rax,rbx
  4265b0:	add    rsp,0x98
  4265b7:	pop    rbx
  4265b8:	pop    rsi
  4265b9:	pop    rdi
  4265ba:	pop    rbp
  4265bb:	ret    
  4265bc:	nop    DWORD PTR [rax+0x0]
  4265c0:	and    r8d,0xff04
  4265c7:	mov    edx,r8d
  4265ca:	or     edx,ebx
  4265cc:	mov    DWORD PTR [rsp+0x20],edx
  4265d0:	test   DWORD PTR [rsp+0x20],0x4100
  4265d8:	je     0x426589
  4265da:	mov    rcx,rbp
  4265dd:	call   0x434680
  4265e2:	test   rax,rax
  4265e5:	jne    0x4265b0
  4265e7:	mov    edx,DWORD PTR [rsp+0x20]
  4265eb:	test   dh,0x40
  4265ee:	je     0x426589
  4265f0:	jmp    0x4265b0
  4265f2:	call   0x4386d0
  4265f7:	add    rsp,0x98
  4265fe:	pop    rbx
  4265ff:	pop    rsi
  426600:	pop    rdi
  426601:	pop    rbp
  426602:	ret    
  426603:	mov    edx,ebx
  426605:	mov    rcx,rbp
  426608:	call   0x425fc0
  42660d:	add    rsp,0x98
  426614:	pop    rbx
  426615:	pop    rsi
  426616:	pop    rdi
  426617:	pop    rbp
  426618:	ret    
  426619:	nop    DWORD PTR [rax+0x0]
  426620:	mov    rcx,rbp
  426623:	call   0x4346b0
  426628:	test   rax,rax
  42662b:	jne    0x4265b0
  426631:	mov    edx,DWORD PTR [rsp+0x20]
  426635:	jmp    0x426592
  42663a:	nop    WORD PTR [rax+rax*1+0x0]
  426640:	push   r13
  426642:	push   r12
  426644:	push   rbp
  426645:	push   rdi
  426646:	push   rsi
  426647:	push   rbx
  426648:	sub    rsp,0x68
  42664c:	mov    rbx,rdx
  42664f:	mov    rdx,QWORD PTR [rdx]
  426652:	mov    rdi,rcx
  426655:	mov    rsi,r8
  426658:	movzx  eax,BYTE PTR [rdx]
  42665b:	cmp    al,0x59
  42665d:	je     0x426740
  426663:	cmp    r9d,0x3
  426667:	je     0x4267b1
  42666d:	cmp    r9d,0x5
  426671:	je     0x4266b0
  426673:	cmp    r9d,0x4
  426677:	je     0x426720
  42667d:	cmp    r9d,0x6
  426681:	je     0x4268f0
  426687:	lea    edx,[r9-0x1]
  42668b:	cmp    edx,0x1
  42668e:	jbe    0x426850
  426694:	mov    eax,0x1
  426699:	add    rsp,0x68
  42669d:	pop    rbx
  42669e:	pop    rsi
  42669f:	pop    rdi
  4266a0:	pop    rbp
  4266a1:	pop    r12
  4266a3:	pop    r13
  4266a5:	ret    
  4266a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4266b0:	cmp    al,0x6d
  4266b2:	je     0x4269d0
  4266b8:	lea    rdx,[rip+0x269db]        # 0x44d09a
  4266bf:	mov    r8d,0x1
  4266c5:	mov    rcx,rsi
  4266c8:	call   0x425860
  4266cd:	mov    rcx,rbx
  4266d0:	call   0x4251e0
  4266d5:	xor    edx,edx
  4266d7:	test   eax,eax
  4266d9:	jle    0x426711
  4266db:	lea    rdx,[rsp+0x40]
  4266e0:	mov    r8d,0x1
  4266e6:	mov    rcx,rsi
  4266e9:	mov    BYTE PTR [rsp+0x40],al
  4266ed:	mov    BYTE PTR [rsp+0x41],0x0
  4266f2:	call   0x425860
  4266f7:	lea    rdx,[rip+0x2699c]        # 0x44d09a
  4266fe:	mov    r8d,0x1
  426704:	mov    rcx,rsi
  426707:	call   0x425860
  42670c:	mov    edx,0x1
  426711:	mov    eax,edx
  426713:	add    rsp,0x68
  426717:	pop    rbx
  426718:	pop    rsi
  426719:	pop    rdi
  42671a:	pop    rbp
  42671b:	pop    r12
  42671d:	pop    r13
  42671f:	ret    
  426720:	mov    rcx,rbx
  426723:	call   0x4251e0
  426728:	test   eax,eax
  42672a:	je     0x426aa1
  426730:	cmp    eax,0x1
  426733:	je     0x426a62
  426739:	xor    eax,eax
  42673b:	jmp    0x426699
  426740:	add    rdx,0x1
  426744:	mov    rcx,rbx
  426747:	mov    QWORD PTR [rbx],rdx
  42674a:	call   0x425230
  42674f:	movsxd rbp,eax
  426752:	cmp    ebp,0xffffffff
  426755:	je     0x426ad3
  42675b:	cmp    QWORD PTR [rdi+0x50],0x0
  426760:	je     0x42676b
  426762:	cmp    ebp,DWORD PTR [rdi+0x58]
  426765:	jge    0x426ad3
  42676b:	mov    rcx,rbx
  42676e:	call   0x425230
  426773:	cmp    eax,0xffffffff
  426776:	je     0x426ad3
  42677c:	mov    rax,QWORD PTR [rdi+0x50]
  426780:	test   rax,rax
  426783:	je     0x426add
  426789:	mov    rdx,QWORD PTR [rax+rbp*8]
  42678d:	test   rdx,rdx
  426790:	je     0x426694
  426796:	cmp    BYTE PTR [rdx],0x0
  426799:	je     0x426694
  42679f:	mov    rcx,rsi
  4267a2:	call   0x425940
  4267a7:	mov    eax,0x1
  4267ac:	jmp    0x426699
  4267b1:	cmp    al,0x45
  4267b3:	je     0x426ac0
  4267b9:	cmp    al,0x4b
  4267bb:	je     0x426990
  4267c1:	cmp    al,0x51
  4267c3:	je     0x426990
  4267c9:	cmp    al,0x5f
  4267cb:	je     0x426a80
  4267d1:	cmp    al,0x6d
  4267d3:	mov    r12d,0x1
  4267d9:	je     0x426af1
  4267df:	mov    rcx,rbx
  4267e2:	mov    ebp,0x1
  4267e7:	call   0x4251e0
  4267ec:	mov    edi,eax
  4267ee:	cmp    edi,0xffffffff
  4267f1:	je     0x426739
  4267f7:	lea    r13,[rsp+0x40]
  4267fc:	lea    rdx,[rip+0x26894]        # 0x44d097
  426803:	mov    r8d,edi
  426806:	mov    rcx,r13
  426809:	call   0x43f068
  42680e:	cmp    BYTE PTR [rsp+0x40],0x0
  426813:	jne    0x4269f0
  426819:	cmp    edi,0x9
  42681c:	setg   al
  42681f:	or     al,bpl
  426822:	je     0x426694
  426828:	test   r12d,r12d
  42682b:	jne    0x426694
  426831:	mov    rax,QWORD PTR [rbx]
  426834:	cmp    BYTE PTR [rax],0x5f
  426837:	jne    0x426694
  42683d:	add    rax,0x1
  426841:	mov    QWORD PTR [rbx],rax
  426844:	jmp    0x426694
  426849:	nop    DWORD PTR [rax+0x0]
  426850:	cmp    al,0x51
  426852:	mov    DWORD PTR [rsp+0x38],r9d
  426857:	je     0x426990
  42685d:	mov    rcx,rbx
  426860:	call   0x4251e0
  426865:	movsxd rbp,eax
  426868:	cmp    ebp,0xffffffff
  42686b:	je     0x426ad3
  426871:	test   ebp,ebp
  426873:	mov    r9d,DWORD PTR [rsp+0x38]
  426878:	je     0x4269b0
  42687e:	lea    ecx,[rbp+0x1]
  426881:	mov    DWORD PTR [rsp+0x38],r9d
  426886:	movsxd rcx,ecx
  426889:	call   0x4385d0
  42688e:	mov    rdx,QWORD PTR [rbx]
  426891:	mov    r8,rbp
  426894:	mov    rcx,rax
  426897:	mov    r12,rax
  42689a:	call   0x43f010
  42689f:	mov    edx,DWORD PTR [rdi]
  4268a1:	mov    BYTE PTR [r12+rbp*1],0x0
  4268a6:	mov    rcx,r12
  4268a9:	call   0x426540
  4268ae:	mov    r9d,DWORD PTR [rsp+0x38]
  4268b3:	cmp    r9d,0x1
  4268b7:	je     0x426b29
  4268bd:	test   rax,rax
  4268c0:	je     0x426b4d
  4268c6:	cmp    BYTE PTR [rax],0x0
  4268c9:	jne    0x426b0f
  4268cf:	mov    rcx,rax
  4268d2:	call   0x43f100
  4268d7:	mov    rcx,r12
  4268da:	call   0x43f100
  4268df:	add    QWORD PTR [rbx],rbp
  4268e2:	mov    eax,0x1
  4268e7:	jmp    0x426699
  4268ec:	nop    DWORD PTR [rax+0x0]
  4268f0:	cmp    al,0x45
  4268f2:	je     0x426ac0
  4268f8:	cmp    al,0x6d
  4268fa:	je     0x426a3a
  426900:	mov    rdi,QWORD PTR [rip+0x2acd9]        # 0x4515e0
  426907:	movzx  ecx,al
  42690a:	test   BYTE PTR [rdi+rcx*2],0x4
  42690e:	je     0x426935
  426910:	mov    rcx,rsi
  426913:	mov    r8d,0x1
  426919:	call   0x425860
  42691e:	mov    rax,QWORD PTR [rbx]
  426921:	lea    rdx,[rax+0x1]
  426925:	mov    QWORD PTR [rbx],rdx
  426928:	movzx  ecx,BYTE PTR [rax+0x1]
  42692c:	test   BYTE PTR [rdi+rcx*2],0x4
  426930:	mov    rax,rcx
  426933:	jne    0x426910
  426935:	cmp    al,0x2e
  426937:	je     0x426a00
  42693d:	mov    rax,QWORD PTR [rbx]
  426940:	movzx  eax,BYTE PTR [rax]
  426943:	cmp    al,0x65
  426945:	jne    0x426694
  42694b:	mov    r8d,0x1
  426951:	lea    rdx,[rip+0x26751]        # 0x44d0a9
  426958:	jmp    0x426966
  42695a:	nop    WORD PTR [rax+rax*1+0x0]
  426960:	mov    r8d,0x1
  426966:	mov    rcx,rsi
  426969:	call   0x425860
  42696e:	mov    rax,QWORD PTR [rbx]
  426971:	lea    rdx,[rax+0x1]
  426975:	mov    QWORD PTR [rbx],rdx
  426978:	movzx  eax,BYTE PTR [rax+0x1]
  42697c:	test   BYTE PTR [rdi+rax*2],0x4
  426980:	jne    0x426960
  426982:	jmp    0x426694
  426987:	nop    WORD PTR [rax+rax*1+0x0]
  426990:	mov    DWORD PTR [rsp+0x20],0x1
  426998:	xor    r9d,r9d
  42699b:	mov    r8,rsi
  42699e:	mov    rdx,rbx
  4269a1:	mov    rcx,rdi
  4269a4:	call   0x427420
  4269a9:	jmp    0x426699
  4269ae:	xchg   ax,ax
  4269b0:	lea    rdx,[rip+0x266f4]        # 0x44d0ab
  4269b7:	mov    r8d,0x1
  4269bd:	mov    rcx,rsi
  4269c0:	xor    ebp,ebp
  4269c2:	call   0x425860
  4269c7:	jmp    0x4268df
  4269cc:	nop    DWORD PTR [rax+0x0]
  4269d0:	lea    rdx,[rip+0x266be]        # 0x44d095
  4269d7:	mov    r8d,0x1
  4269dd:	mov    rcx,rsi
  4269e0:	call   0x425860
  4269e5:	add    QWORD PTR [rbx],0x1
  4269e9:	jmp    0x4266b8
  4269ee:	xchg   ax,ax
  4269f0:	mov    rdx,r13
  4269f3:	mov    rcx,rsi
  4269f6:	call   0x425940
  4269fb:	jmp    0x426819
  426a00:	mov    r8d,0x1
  426a06:	lea    rdx,[rip+0x2669a]        # 0x44d0a7
  426a0d:	jmp    0x426a16
  426a0f:	nop
  426a10:	mov    r8d,0x1
  426a16:	mov    rcx,rsi
  426a19:	call   0x425860
  426a1e:	mov    rax,QWORD PTR [rbx]
  426a21:	lea    rdx,[rax+0x1]
  426a25:	mov    QWORD PTR [rbx],rdx
  426a28:	movzx  ecx,BYTE PTR [rax+0x1]
  426a2c:	test   BYTE PTR [rdi+rcx*2],0x4
  426a30:	mov    rax,rcx
  426a33:	jne    0x426a10
  426a35:	jmp    0x426943
  426a3a:	lea    rdx,[rip+0x26654]        # 0x44d095
  426a41:	mov    r8d,0x1
  426a47:	mov    rcx,rsi
  426a4a:	call   0x425860
  426a4f:	mov    rax,QWORD PTR [rbx]
  426a52:	lea    rdx,[rax+0x1]
  426a56:	mov    QWORD PTR [rbx],rdx
  426a59:	movzx  eax,BYTE PTR [rax+0x1]
  426a5d:	jmp    0x426900
  426a62:	lea    rdx,[rip+0x26639]        # 0x44d0a2
  426a69:	mov    r8d,0x4
  426a6f:	mov    rcx,rsi
  426a72:	call   0x425860
  426a77:	jmp    0x426694
  426a7c:	nop    DWORD PTR [rax+0x0]
  426a80:	cmp    BYTE PTR [rdx+0x1],0x6d
  426a84:	je     0x426b68
  426a8a:	mov    rcx,rbx
  426a8d:	mov    r12d,0x1
  426a93:	xor    ebp,ebp
  426a95:	call   0x425230
  426a9a:	mov    edi,eax
  426a9c:	jmp    0x4267ee
  426aa1:	lea    rdx,[rip+0x265f4]        # 0x44d09c
  426aa8:	mov    r8d,0x5
  426aae:	mov    rcx,rsi
  426ab1:	call   0x425860
  426ab6:	mov    eax,0x1
  426abb:	jmp    0x426699
  426ac0:	mov    r8,rsi
  426ac3:	mov    rdx,rbx
  426ac6:	mov    rcx,rdi
  426ac9:	call   0x426b90
  426ace:	jmp    0x426699
  426ad3:	mov    eax,0xffffffff
  426ad8:	jmp    0x426699
  426add:	mov    edx,ebp
  426adf:	mov    rcx,rsi
  426ae2:	call   0x425980
  426ae7:	mov    eax,0x1
  426aec:	jmp    0x426699
  426af1:	lea    rdx,[rip+0x2659d]        # 0x44d095
  426af8:	mov    r8d,0x1
  426afe:	mov    rcx,rsi
  426b01:	call   0x425860
  426b06:	add    QWORD PTR [rbx],0x1
  426b0a:	jmp    0x4267df
  426b0f:	mov    rdx,rax
  426b12:	mov    rcx,rsi
  426b15:	mov    QWORD PTR [rsp+0x38],rax
  426b1a:	call   0x425940
  426b1f:	mov    rax,QWORD PTR [rsp+0x38]
  426b24:	jmp    0x4268cf
  426b29:	lea    rdx,[rip+0x2657d]        # 0x44d0ad
  426b30:	mov    r8d,0x1
  426b36:	mov    rcx,rsi
  426b39:	mov    QWORD PTR [rsp+0x38],rax
  426b3e:	call   0x425860
  426b43:	mov    rax,QWORD PTR [rsp+0x38]
  426b48:	jmp    0x4268bd
  426b4d:	cmp    BYTE PTR [r12],0x0
  426b52:	je     0x4268d7
  426b58:	mov    rdx,r12
  426b5b:	mov    rcx,rsi
  426b5e:	call   0x425940
  426b63:	jmp    0x4268d7
  426b68:	lea    rdx,[rip+0x26526]        # 0x44d095
  426b6f:	mov    r8d,0x1
  426b75:	mov    rcx,rsi
  426b78:	xor    r12d,r12d
  426b7b:	call   0x425860
  426b80:	add    QWORD PTR [rbx],0x2
  426b84:	jmp    0x4267df
  426b89:	nop    DWORD PTR [rax+0x0]
  426b90:	push   r15
  426b92:	push   r14
  426b94:	push   r13
  426b96:	push   r12
  426b98:	push   rbp
  426b99:	push   rdi
  426b9a:	push   rsi
  426b9b:	push   rbx
  426b9c:	sub    rsp,0x38
  426ba0:	mov    r12,rdx
  426ba3:	mov    r13,r8
  426ba6:	lea    rdx,[rip+0x26502]        # 0x44d0af
  426bad:	mov    QWORD PTR [rsp+0x80],rcx
  426bb5:	mov    r8d,0x1
  426bbb:	mov    rcx,r13
  426bbe:	mov    DWORD PTR [rsp+0x98],r9d
  426bc6:	call   0x425860
  426bcb:	mov    rax,QWORD PTR [r12]
  426bcf:	xor    ecx,ecx
  426bd1:	lea    rbp,[rax+0x1]
  426bd5:	mov    eax,0x1
  426bda:	mov    QWORD PTR [r12],rbp
  426bde:	xchg   ax,ax
  426be0:	movzx  edx,BYTE PTR [rbp+0x0]
  426be4:	cmp    dl,0x57
  426be7:	je     0x426cc6
  426bed:	test   dl,dl
  426bef:	je     0x426cc6
  426bf5:	test   ecx,ecx
  426bf7:	je     0x426c92
  426bfd:	mov    rcx,rbp
  426c00:	lea    rsi,[rip+0x272f9]        # 0x44df00
  426c07:	xor    ebx,ebx
  426c09:	call   0x43f028
  426c0e:	mov    rdi,rax
  426c11:	jmp    0x426c25
  426c13:	add    rbx,0x1
  426c17:	add    rsi,0x18
  426c1b:	cmp    rbx,0x4f
  426c1f:	je     0x426cd0
  426c25:	mov    r15,QWORD PTR [rsi]
  426c28:	mov    rcx,r15
  426c2b:	call   0x43f028
  426c30:	cmp    rdi,rax
  426c33:	mov    r14,rax
  426c36:	jb     0x426c13
  426c38:	mov    r8,rax
  426c3b:	mov    rdx,rbp
  426c3e:	mov    rcx,r15
  426c41:	call   0x43f0b0
  426c46:	test   eax,eax
  426c48:	jne    0x426c13
  426c4a:	lea    rdx,[rip+0x26460]        # 0x44d0b1
  426c51:	mov    r8d,0x1
  426c57:	mov    rcx,r13
  426c5a:	call   0x425860
  426c5f:	lea    rax,[rbx+rbx*2]
  426c63:	lea    rdx,[rip+0x27296]        # 0x44df00
  426c6a:	mov    rdx,QWORD PTR [rdx+rax*8+0x8]
  426c6f:	test   rdx,rdx
  426c72:	je     0x426c79
  426c74:	cmp    BYTE PTR [rdx],0x0
  426c77:	jne    0x426ce3
  426c79:	lea    rdx,[rip+0x26431]        # 0x44d0b1
  426c80:	mov    r8d,0x1
  426c86:	mov    rcx,r13
  426c89:	call   0x425860
  426c8e:	add    QWORD PTR [r12],r14
  426c92:	mov    r9d,DWORD PTR [rsp+0x98]
  426c9a:	mov    rcx,QWORD PTR [rsp+0x80]
  426ca2:	mov    r8,r13
  426ca5:	mov    rdx,r12
  426ca8:	call   0x426640
  426cad:	test   eax,eax
  426caf:	je     0x426cbf
  426cb1:	mov    rbp,QWORD PTR [r12]
  426cb5:	mov    ecx,0x1
  426cba:	jmp    0x426be0
  426cbf:	mov    rdx,QWORD PTR [r12]
  426cc3:	movzx  edx,BYTE PTR [rdx]
  426cc6:	cmp    dl,0x57
  426cc9:	mov    DWORD PTR [rsp+0x2c],eax
  426ccd:	je     0x426ced
  426ccf:	nop
  426cd0:	xor    eax,eax
  426cd2:	add    rsp,0x38
  426cd6:	pop    rbx
  426cd7:	pop    rsi
  426cd8:	pop    rdi
  426cd9:	pop    rbp
  426cda:	pop    r12
  426cdc:	pop    r13
  426cde:	pop    r14
  426ce0:	pop    r15
  426ce2:	ret    
  426ce3:	mov    rcx,r13
  426ce6:	call   0x425940
  426ceb:	jmp    0x426c79
  426ced:	lea    rdx,[rip+0x263bf]        # 0x44d0b3
  426cf4:	mov    r8d,0x1
  426cfa:	mov    rcx,r13
  426cfd:	call   0x425860
  426d02:	add    QWORD PTR [r12],0x1
  426d07:	mov    eax,DWORD PTR [rsp+0x2c]
  426d0b:	jmp    0x426cd2
  426d0d:	nop    DWORD PTR [rax]
  426d10:	push   r15
  426d12:	push   r14
  426d14:	push   r13
  426d16:	push   r12
  426d18:	push   rbp
  426d19:	push   rdi
  426d1a:	push   rsi
  426d1b:	push   rbx
  426d1c:	sub    rsp,0x98
  426d23:	mov    rax,QWORD PTR [rdx]
  426d26:	mov    r13d,DWORD PTR [rsp+0x100]
  426d2e:	mov    rbx,rdx
  426d31:	mov    rbp,rcx
  426d34:	mov    r12,r8
  426d37:	mov    r14,r9
  426d3a:	lea    rdx,[rax+0x1]
  426d3e:	test   r13d,r13d
  426d41:	mov    QWORD PTR [rbx],rdx
  426d44:	jne    0x426ee2
  426d4a:	lea    rdx,[rip+0x2636d]        # 0x44d0be
  426d51:	mov    rcx,r12
  426d54:	call   0x425940
  426d59:	lea    rdx,[rsp+0x4c]
  426d5e:	mov    rcx,rbx
  426d61:	call   0x4252a0
  426d66:	test   eax,eax
  426d68:	je     0x426fc0
  426d6e:	test   r13d,r13d
  426d71:	je     0x427280
  426d77:	mov    eax,DWORD PTR [rsp+0x4c]
  426d7b:	mov    DWORD PTR [rsp+0x3c],0x0
  426d83:	test   eax,eax
  426d85:	jle    0x426e8a
  426d8b:	lea    rax,[rsp+0x50]
  426d90:	xor    edi,edi
  426d92:	xor    esi,esi
  426d94:	mov    QWORD PTR [rsp+0x20],rax
  426d99:	jmp    0x426e52
  426d9e:	xchg   ax,ax
  426da0:	mov    r8,QWORD PTR [rsp+0x20]
  426da5:	mov    rcx,rbp
  426da8:	mov    rdx,rbx
  426dab:	call   0x427980
  426db0:	mov    rcx,QWORD PTR [rsp+0x50]
  426db5:	mov    r15d,eax
  426db8:	test   rcx,rcx
  426dbb:	je     0x426ddd
  426dbd:	call   0x43f100
  426dc2:	mov    QWORD PTR [rsp+0x58],0x0
  426dcb:	mov    QWORD PTR [rsp+0x60],0x0
  426dd4:	mov    QWORD PTR [rsp+0x50],0x0
  426ddd:	test   r15d,r15d
  426de0:	je     0x426e8a
  426de6:	test   r13d,r13d
  426de9:	mov    r14,r12
  426dec:	jne    0x426e11
  426dee:	lea    r14,[rsp+0x70]
  426df3:	mov    QWORD PTR [rsp+0x80],0x0
  426dff:	mov    QWORD PTR [rsp+0x78],0x0
  426e08:	mov    QWORD PTR [rsp+0x70],0x0
  426e11:	mov    r9d,r15d
  426e14:	mov    r8,r14
  426e17:	mov    rdx,rbx
  426e1a:	mov    rcx,rbp
  426e1d:	call   0x426640
  426e22:	test   eax,eax
  426e24:	mov    r15d,eax
  426e27:	je     0x4272f0
  426e2d:	test   r13d,r13d
  426e30:	je     0x426fd0
  426e36:	add    esi,0x1
  426e39:	add    rdi,0x8
  426e3d:	cmp    DWORD PTR [rsp+0x4c],esi
  426e41:	jle    0x426e8d
  426e43:	lea    rdx,[rip+0x26276]        # 0x44d0c0
  426e4a:	mov    rcx,r12
  426e4d:	call   0x425940
  426e52:	mov    rax,QWORD PTR [rbx]
  426e55:	movzx  edx,BYTE PTR [rax]
  426e58:	cmp    dl,0x5a
  426e5b:	je     0x427070
  426e61:	cmp    dl,0x7a
  426e64:	jne    0x426da0
  426e6a:	add    rax,0x1
  426e6e:	mov    r8,r12
  426e71:	mov    rdx,rbx
  426e74:	mov    QWORD PTR [rbx],rax
  426e77:	mov    rcx,rbp
  426e7a:	call   0x4294b0
  426e7f:	test   eax,eax
  426e81:	mov    r15d,eax
  426e84:	jne    0x4270c5
  426e8a:	xor    r15d,r15d
  426e8d:	mov    edx,DWORD PTR [rsp+0x3c]
  426e91:	test   edx,edx
  426e93:	jne    0x4272d2
  426e99:	mov    rax,QWORD PTR [r12+0x8]
  426e9e:	cmp    BYTE PTR [rax-0x1],0x3e
  426ea2:	je     0x427387
  426ea8:	lea    rdx,[rip+0x26217]        # 0x44d0c6
  426eaf:	mov    rcx,r12
  426eb2:	call   0x425940
  426eb7:	test   r13d,r13d
  426eba:	je     0x426ecb
  426ebc:	mov    eax,DWORD PTR [rsp+0x108]
  426ec3:	test   eax,eax
  426ec5:	jne    0x427210
  426ecb:	mov    eax,r15d
  426ece:	add    rsp,0x98
  426ed5:	pop    rbx
  426ed6:	pop    rsi
  426ed7:	pop    rdi
  426ed8:	pop    rbp
  426ed9:	pop    r12
  426edb:	pop    r13
  426edd:	pop    r14
  426edf:	pop    r15
  426ee1:	ret    
  426ee2:	cmp    BYTE PTR [rax+0x1],0x7a
  426ee6:	je     0x427170
  426eec:	mov    rcx,rbx
  426eef:	call   0x4251e0
  426ef4:	movsxd r15,eax
  426ef7:	test   r15d,r15d
  426efa:	mov    DWORD PTR [rsp+0x4c],r15d
  426eff:	jle    0x426fc0
  426f05:	mov    rdx,QWORD PTR [rbx]
  426f08:	mov    rcx,rdx
  426f0b:	mov    QWORD PTR [rsp+0x20],rdx
  426f10:	call   0x43f028
  426f15:	cmp    r15d,eax
  426f18:	jg     0x426fc0
  426f1e:	test   BYTE PTR [rbp+0x0],0x4
  426f22:	mov    rdx,QWORD PTR [rsp+0x20]
  426f27:	je     0x427250
  426f2d:	lea    rdi,[rip+0x26181]        # 0x44d0b5
  426f34:	mov    ecx,0x8
  426f39:	mov    rsi,rdx
  426f3c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  426f3e:	jne    0x427250
  426f44:	test   r14,r14
  426f47:	je     0x4273ed
  426f4d:	mov    r8d,r15d
  426f50:	mov    rcx,r14
  426f53:	call   0x425860
  426f58:	movsxd rax,DWORD PTR [rsp+0x4c]
  426f5d:	add    QWORD PTR [rbx],rax
  426f60:	lea    rdx,[rsp+0x4c]
  426f65:	mov    rcx,rbx
  426f68:	call   0x4252a0
  426f6d:	test   eax,eax
  426f6f:	je     0x426fc0
  426f71:	mov    eax,DWORD PTR [rsp+0x4c]
  426f75:	mov    DWORD PTR [rsp+0x3c],0x1
  426f7d:	jmp    0x426d83
  426f82:	mov    rcx,r14
  426f85:	call   0x425860
  426f8a:	movsxd rax,DWORD PTR [rsp+0x4c]
  426f8f:	lea    rdx,[rip+0x26128]        # 0x44d0be
  426f96:	mov    rcx,r12
  426f99:	add    QWORD PTR [rbx],rax
  426f9c:	call   0x425940
  426fa1:	lea    rdx,[rsp+0x4c]
  426fa6:	mov    rcx,rbx
  426fa9:	call   0x4252a0
  426fae:	test   eax,eax
  426fb0:	jne    0x426d77
  426fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426fc0:	xor    eax,eax
  426fc2:	jmp    0x426ece
  426fc7:	nop    WORD PTR [rax+rax*1+0x0]
  426fd0:	mov    r8,QWORD PTR [r14+0x8]
  426fd4:	sub    r8,QWORD PTR [r14]
  426fd7:	mov    rdx,rdi
  426fda:	add    rdx,QWORD PTR [rbp+0x50]
  426fde:	lea    ecx,[r8+0x1]
  426fe2:	mov    QWORD PTR [rsp+0x28],r8
  426fe7:	mov    QWORD PTR [rsp+0x30],rdx
  426fec:	movsxd rcx,ecx
  426fef:	call   0x4385d0
  426ff4:	mov    rdx,QWORD PTR [rsp+0x30]
  426ff9:	mov    r8,QWORD PTR [rsp+0x28]
  426ffe:	mov    QWORD PTR [rdx],rax
  427001:	mov    rax,QWORD PTR [rbp+0x50]
  427005:	movsxd r9,r8d
  427008:	mov    rdx,QWORD PTR [r14]
  42700b:	mov    r8,r9
  42700e:	mov    QWORD PTR [rsp+0x28],r9
  427013:	mov    rcx,QWORD PTR [rax+rdi*1]
  427017:	call   0x43f0a8
  42701c:	mov    rax,QWORD PTR [rbp+0x50]
  427020:	mov    r9,QWORD PTR [rsp+0x28]
  427025:	mov    rcx,r12
  427028:	mov    rdx,r14
  42702b:	mov    rax,QWORD PTR [rax+rdi*1]
  42702f:	mov    BYTE PTR [rax+r9*1],0x0
  427034:	mov    r8,QWORD PTR [r14+0x8]
  427038:	call   0x425a80
  42703d:	mov    rcx,QWORD PTR [r14]
  427040:	test   rcx,rcx
  427043:	je     0x426e36
  427049:	call   0x43f100
  42704e:	mov    QWORD PTR [r14+0x8],0x0
  427056:	mov    QWORD PTR [r14+0x10],0x0
  42705e:	mov    QWORD PTR [r14],0x0
  427065:	jmp    0x426e36
  42706a:	nop    WORD PTR [rax+rax*1+0x0]
  427070:	mov    r8,QWORD PTR [rsp+0x20]
  427075:	add    rax,0x1
  427079:	mov    rdx,rbx
  42707c:	mov    QWORD PTR [rbx],rax
  42707f:	mov    rcx,rbp
  427082:	call   0x427980
  427087:	test   eax,eax
  427089:	mov    r15d,eax
  42708c:	jne    0x427120
  427092:	mov    rcx,QWORD PTR [rsp+0x50]
  427097:	test   rcx,rcx
  42709a:	je     0x426e8a
  4270a0:	call   0x43f100
  4270a5:	mov    QWORD PTR [rsp+0x58],0x0
  4270ae:	mov    QWORD PTR [rsp+0x60],0x0
  4270b7:	mov    QWORD PTR [rsp+0x50],0x0
  4270c0:	jmp    0x426e8a
  4270c5:	mov    rcx,rbx
  4270c8:	call   0x4251e0
  4270cd:	movsxd r14,eax
  4270d0:	test   r14d,r14d
  4270d3:	jle    0x426e36
  4270d9:	mov    rcx,QWORD PTR [rbx]
  4270dc:	call   0x43f028
  4270e1:	cmp    r14d,eax
  4270e4:	jg     0x426e36
  4270ea:	lea    rdx,[rip+0x25fc0]        # 0x44d0b1
  4270f1:	mov    rcx,r12
  4270f4:	call   0x425940
  4270f9:	mov    rdx,QWORD PTR [rbx]
  4270fc:	mov    r8d,r14d
  4270ff:	mov    rcx,r12
  427102:	call   0x425860
  427107:	test   r13d,r13d
  42710a:	je     0x42739b
  427110:	add    QWORD PTR [rbx],r14
  427113:	jmp    0x426e36
  427118:	nop    DWORD PTR [rax+rax*1+0x0]
  427120:	mov    r8,QWORD PTR [rsp+0x58]
  427125:	mov    rdx,QWORD PTR [rsp+0x20]
  42712a:	mov    rcx,r12
  42712d:	call   0x425a80
  427132:	test   r13d,r13d
  427135:	je     0x427330
  42713b:	mov    rcx,QWORD PTR [rsp+0x50]
  427140:	test   rcx,rcx
  427143:	je     0x426e36
  427149:	call   0x43f100
  42714e:	mov    QWORD PTR [rsp+0x58],0x0
  427157:	mov    QWORD PTR [rsp+0x60],0x0
  427160:	mov    QWORD PTR [rsp+0x50],0x0
  427169:	jmp    0x426e36
  42716e:	xchg   ax,ax
  427170:	add    rax,0x3
  427174:	mov    rcx,rbx
  427177:	mov    QWORD PTR [rbx],rax
  42717a:	call   0x425230
  42717f:	movsxd rsi,eax
  427182:	cmp    esi,0xffffffff
  427185:	je     0x426fc0
  42718b:	cmp    QWORD PTR [rbp+0x50],0x0
  427190:	je     0x42719b
  427192:	cmp    esi,DWORD PTR [rbp+0x58]
  427195:	jge    0x426fc0
  42719b:	mov    rcx,rbx
  42719e:	call   0x425230
  4271a3:	cmp    eax,0xffffffff
  4271a6:	je     0x426fc0
  4271ac:	mov    rax,QWORD PTR [rbp+0x50]
  4271b0:	test   rax,rax
  4271b3:	je     0x4273f8
  4271b9:	mov    rdx,QWORD PTR [rax+rsi*8]
  4271bd:	test   rdx,rdx
  4271c0:	je     0x426d4a
  4271c6:	cmp    BYTE PTR [rdx],0x0
  4271c9:	je     0x426d4a
  4271cf:	mov    rcx,r12
  4271d2:	call   0x425940
  4271d7:	test   r14,r14
  4271da:	je     0x426d4a
  4271e0:	mov    rax,QWORD PTR [rbp+0x50]
  4271e4:	mov    rdx,QWORD PTR [rax+rsi*8]
  4271e8:	test   rdx,rdx
  4271eb:	je     0x426d4a
  4271f1:	cmp    BYTE PTR [rdx],0x0
  4271f4:	je     0x426d4a
  4271fa:	mov    rcx,r14
  4271fd:	call   0x425940
  427202:	jmp    0x426d4a
  427207:	nop    WORD PTR [rax+rax*1+0x0]
  427210:	mov    rcx,rbp
  427213:	call   0x425410
  427218:	mov    r8,QWORD PTR [r12+0x8]
  42721d:	mov    rdx,QWORD PTR [r12]
  427221:	mov    r9d,eax
  427224:	mov    ecx,r8d
  427227:	sub    ecx,edx
  427229:	cmp    rdx,r8
  42722c:	mov    r8d,0x0
  427232:	cmovne r8d,ecx
  427236:	lea    rcx,[rbp+0x18]
  42723a:	call   0x425770
  42723f:	mov    eax,r15d
  427242:	jmp    0x426ece
  427247:	nop    WORD PTR [rax+rax*1+0x0]
  427250:	mov    r8d,r15d
  427253:	mov    rcx,r12
  427256:	call   0x425860
  42725b:	test   r14,r14
  42725e:	je     0x426f8a
  427264:	mov    r8d,DWORD PTR [rsp+0x4c]
  427269:	mov    rdx,QWORD PTR [rbx]
  42726c:	test   r8d,r8d
  42726f:	jne    0x426f82
  427275:	mov    QWORD PTR [rbx],rdx
  427278:	jmp    0x426d4a
  42727d:	nop    DWORD PTR [rax]
  427280:	movsxd rcx,DWORD PTR [rsp+0x4c]
  427285:	shl    rcx,0x3
  427289:	call   0x4385d0
  42728e:	mov    edx,DWORD PTR [rsp+0x4c]
  427292:	mov    QWORD PTR [rbp+0x50],rax
  427296:	test   edx,edx
  427298:	mov    DWORD PTR [rbp+0x58],edx
  42729b:	jle    0x4273e0
  4272a1:	lea    ecx,[rdx-0x1]
  4272a4:	xor    edx,edx
  4272a6:	shl    rcx,0x3
  4272aa:	jmp    0x4272b8
  4272ac:	nop    DWORD PTR [rax+0x0]
  4272b0:	mov    rax,QWORD PTR [rbp+0x50]
  4272b4:	add    rdx,0x8
  4272b8:	cmp    rdx,rcx
  4272bb:	mov    QWORD PTR [rax+rdx*1],0x0
  4272c3:	jne    0x4272b0
  4272c5:	mov    DWORD PTR [rsp+0x3c],0x0
  4272cd:	jmp    0x426d8b
  4272d2:	lea    rdx,[rip+0x25dea]        # 0x44d0c3
  4272d9:	mov    rcx,r12
  4272dc:	call   0x425940
  4272e1:	jmp    0x426eb7
  4272e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4272f0:	test   r13d,r13d
  4272f3:	jne    0x426e8a
  4272f9:	mov    rcx,QWORD PTR [r14]
  4272fc:	test   rcx,rcx
  4272ff:	je     0x426e8a
  427305:	call   0x43f100
  42730a:	mov    QWORD PTR [r14+0x8],0x0
  427312:	mov    QWORD PTR [r14+0x10],0x0
  42731a:	mov    QWORD PTR [r14],0x0
  427321:	jmp    0x426e8a
  427326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427330:	mov    r9,QWORD PTR [rsp+0x58]
  427335:	sub    r9,QWORD PTR [rsp+0x50]
  42733a:	mov    rdx,rdi
  42733d:	add    rdx,QWORD PTR [rbp+0x50]
  427341:	lea    ecx,[r9+0x1]
  427345:	mov    r14,r9
  427348:	mov    QWORD PTR [rsp+0x28],rdx
  42734d:	movsxd r14,r14d
  427350:	movsxd rcx,ecx
  427353:	call   0x4385d0
  427358:	mov    rdx,QWORD PTR [rsp+0x28]
  42735d:	mov    r8,r14
  427360:	mov    QWORD PTR [rdx],rax
  427363:	mov    rax,QWORD PTR [rbp+0x50]
  427367:	mov    rdx,QWORD PTR [rsp+0x50]
  42736c:	mov    rcx,QWORD PTR [rax+rdi*1]
  427370:	call   0x43f0a8
  427375:	mov    rax,QWORD PTR [rbp+0x50]
  427379:	mov    rax,QWORD PTR [rax+rdi*1]
  42737d:	mov    BYTE PTR [rax+r14*1],0x0
  427382:	jmp    0x42713b
  427387:	lea    rdx,[rip+0x25d23]        # 0x44d0b1
  42738e:	mov    rcx,r12
  427391:	call   0x425940
  427396:	jmp    0x426ea8
  42739b:	mov    rdx,rdi
  42739e:	add    rdx,QWORD PTR [rbp+0x50]
  4273a2:	lea    ecx,[r14+0x1]
  4273a6:	movsxd rcx,ecx
  4273a9:	mov    QWORD PTR [rsp+0x28],rdx
  4273ae:	call   0x4385d0
  4273b3:	mov    rdx,QWORD PTR [rsp+0x28]
  4273b8:	mov    r8,r14
  4273bb:	mov    QWORD PTR [rdx],rax
  4273be:	mov    rax,QWORD PTR [rbp+0x50]
  4273c2:	mov    rdx,QWORD PTR [rbx]
  4273c5:	mov    rcx,QWORD PTR [rax+rdi*1]
  4273c9:	call   0x43f0a8
  4273ce:	mov    rax,QWORD PTR [rbp+0x50]
  4273d2:	mov    rax,QWORD PTR [rax+rdi*1]
  4273d6:	mov    BYTE PTR [rax+r14*1],0x0
  4273db:	jmp    0x427110
  4273e0:	mov    DWORD PTR [rsp+0x3c],0x0
  4273e8:	jmp    0x426e8a
  4273ed:	add    rdx,r15
  4273f0:	mov    QWORD PTR [rbx],rdx
  4273f3:	jmp    0x426f60
  4273f8:	mov    edx,esi
  4273fa:	mov    rcx,r12
  4273fd:	call   0x425980
  427402:	test   r14,r14
  427405:	je     0x426d4a
  42740b:	mov    edx,esi
  42740d:	mov    rcx,r14
  427410:	call   0x425980
  427415:	jmp    0x426d4a
  42741a:	nop    WORD PTR [rax+rax*1+0x0]
  427420:	push   r15
  427422:	push   r14
  427424:	push   r13
  427426:	push   r12
  427428:	push   rbp
  427429:	push   rdi
  42742a:	push   rsi
  42742b:	push   rbx
  42742c:	sub    rsp,0xa8
  427433:	mov    rsi,rcx
  427436:	mov    rdi,rdx
  427439:	mov    QWORD PTR [rsp+0x100],r8
  427441:	mov    DWORD PTR [rsp+0x108],r9d
  427449:	call   0x425410
  42744e:	mov    ecx,DWORD PTR [rsp+0x108]
  427455:	mov    DWORD PTR [rsp+0x4c],eax
  427459:	test   ecx,ecx
  42745b:	je     0x427478
  42745d:	movabs rax,0x100000001
  427467:	test   QWORD PTR [rsi+0x38],rax
  42746b:	setne  al
  42746e:	movzx  eax,al
  427471:	mov    DWORD PTR [rsp+0x108],eax
  427478:	mov    rax,QWORD PTR [rdi]
  42747b:	mov    QWORD PTR [rsp+0x70],0x0
  427484:	mov    QWORD PTR [rsp+0x68],0x0
  42748d:	mov    QWORD PTR [rsp+0x60],0x0
  427496:	mov    QWORD PTR [rsp+0x90],0x0
  4274a2:	mov    QWORD PTR [rsp+0x88],0x0
  4274ae:	mov    QWORD PTR [rsp+0x80],0x0
  4274ba:	cmp    BYTE PTR [rax],0x4b
  4274bd:	je     0x4278ec
  4274c3:	movzx  edx,BYTE PTR [rax+0x1]
  4274c7:	cmp    dl,0x31
  4274ca:	jl     0x4278c0
  4274d0:	cmp    dl,0x39
  4274d3:	jle    0x427612
  4274d9:	cmp    dl,0x5f
  4274dc:	jne    0x4278c0
  4274e2:	add    rax,0x1
  4274e6:	mov    rcx,rdi
  4274e9:	mov    QWORD PTR [rdi],rax
  4274ec:	call   0x425230
  4274f1:	cmp    eax,0xffffffff
  4274f4:	mov    ebx,eax
  4274f6:	je     0x4278c0
  4274fc:	lea    rax,[rsp+0x60]
  427501:	lea    r12,[rsp+0x80]
  427509:	mov    r13d,0x1
  42750f:	mov    QWORD PTR [rsp+0x38],rax
  427514:	sub    ebx,0x1
  427517:	lea    eax,[rbx+0x1]
  42751a:	test   eax,eax
  42751c:	jle    0x427687
  427522:	mov    rcx,QWORD PTR [rsp+0x80]
  42752a:	mov    rdx,QWORD PTR [rdi]
  42752d:	mov    QWORD PTR [rsp+0x88],rcx
  427535:	movzx  eax,BYTE PTR [rdx]
  427538:	cmp    al,0x5f
  42753a:	je     0x427640
  427540:	cmp    al,0x74
  427542:	je     0x427656
  427548:	cmp    al,0x4b
  42754a:	je     0x427842
  427550:	test   DWORD PTR [rsi],0x2000
  427556:	jne    0x4277b5
  42755c:	test   rcx,rcx
  42755f:	je     0x42758a
  427561:	call   0x43f100
  427566:	mov    QWORD PTR [rsp+0x88],0x0
  427572:	mov    QWORD PTR [rsp+0x90],0x0
  42757e:	mov    QWORD PTR [rsp+0x80],0x0
  42758a:	mov    r8,r12
  42758d:	mov    rdx,rdi
  427590:	mov    rcx,rsi
  427593:	call   0x427980
  427598:	test   eax,eax
  42759a:	mov    r13d,eax
  42759d:	je     0x427684
  4275a3:	mov    r8,QWORD PTR [rsp+0x88]
  4275ab:	mov    rcx,QWORD PTR [rsp+0x38]
  4275b0:	mov    rdx,r12
  4275b3:	call   0x425a80
  4275b8:	mov    rcx,QWORD PTR [rsp+0x68]
  4275bd:	mov    rdx,QWORD PTR [rsp+0x60]
  4275c2:	mov    r8d,0x0
  4275c8:	mov    rax,rcx
  4275cb:	sub    rax,rdx
  4275ce:	cmp    rdx,rcx
  4275d1:	mov    rcx,rsi
  4275d4:	cmovne r8d,eax
  4275d8:	call   0x4254a0
  4275dd:	test   ebx,ebx
  4275df:	jle    0x427514
  4275e5:	test   BYTE PTR [rsi],0x4
  4275e8:	lea    rdx,[rip+0x25ad9]        # 0x44d0c8
  4275ef:	lea    rax,[rip+0x25ab1]        # 0x44d0a7
  4275f6:	cmovne rdx,rax
  4275fa:	cmp    BYTE PTR [rdx],0x0
  4275fd:	je     0x427514
  427603:	mov    rcx,QWORD PTR [rsp+0x38]
  427608:	call   0x425940
  42760d:	jmp    0x427514
  427612:	lea    rcx,[rsp+0x50]
  427617:	mov    BYTE PTR [rsp+0x50],dl
  42761b:	mov    BYTE PTR [rsp+0x51],0x0
  427620:	call   0x43f170
  427625:	mov    ebx,eax
  427627:	mov    rax,QWORD PTR [rdi]
  42762a:	xor    edx,edx
  42762c:	cmp    BYTE PTR [rax+0x2],0x5f
  427630:	sete   dl
  427633:	lea    rax,[rax+rdx*1+0x2]
  427638:	mov    QWORD PTR [rdi],rax
  42763b:	jmp    0x4274fc
  427640:	lea    r8,[rdx+0x1]
  427644:	mov    QWORD PTR [rdi],r8
  427647:	movzx  eax,BYTE PTR [rdx+0x1]
  42764b:	mov    rdx,r8
  42764e:	cmp    al,0x74
  427650:	jne    0x427548
  427656:	mov    r8,QWORD PTR [rsp+0x38]
  42765b:	mov    DWORD PTR [rsp+0x28],0x0
  427663:	mov    r9,r12
  427666:	mov    DWORD PTR [rsp+0x20],0x1
  42766e:	mov    rdx,rdi
  427671:	mov    rcx,rsi
  427674:	call   0x426d10
  427679:	test   eax,eax
  42767b:	mov    r13d,eax
  42767e:	jne    0x4275b8
  427684:	xor    r13d,r13d
  427687:	mov    rcx,QWORD PTR [rsp+0x68]
  42768c:	mov    rdx,QWORD PTR [rsp+0x60]
  427691:	mov    r8d,0x0
  427697:	mov    r9d,DWORD PTR [rsp+0x4c]
  42769c:	mov    eax,ecx
  42769e:	sub    eax,edx
  4276a0:	cmp    rdx,rcx
  4276a3:	lea    rcx,[rsi+0x18]
  4276a7:	cmovne r8d,eax
  4276ab:	call   0x425770
  4276b0:	mov    edx,DWORD PTR [rsp+0x108]
  4276b7:	test   edx,edx
  4276b9:	je     0x427700
  4276bb:	test   BYTE PTR [rsi],0x4
  4276be:	lea    rdx,[rip+0x25a03]        # 0x44d0c8
  4276c5:	lea    rax,[rip+0x259db]        # 0x44d0a7
  4276cc:	lea    rbp,[rsp+0x60]
  4276d1:	cmovne rdx,rax
  4276d5:	cmp    BYTE PTR [rdx],0x0
  4276d8:	jne    0x42796a
  4276de:	test   BYTE PTR [rsi+0x3c],0x1
  4276e2:	jne    0x427956
  4276e8:	mov    r8,QWORD PTR [rsp+0x88]
  4276f0:	lea    rdx,[rsp+0x80]
  4276f8:	mov    rcx,rbp
  4276fb:	call   0x425a80
  427700:	mov    eax,DWORD PTR [rsp+0x110]
  427707:	test   eax,eax
  427709:	jne    0x4278d0
  42770f:	mov    rax,QWORD PTR [rsp+0x100]
  427717:	mov    rbx,QWORD PTR [rax+0x8]
  42771b:	cmp    QWORD PTR [rax],rbx
  42771e:	je     0x42773e
  427720:	test   BYTE PTR [rsi],0x4
  427723:	lea    rdx,[rip+0x2599e]        # 0x44d0c8
  42772a:	lea    rax,[rip+0x25976]        # 0x44d0a7
  427731:	cmovne rdx,rax
  427735:	cmp    BYTE PTR [rdx],0x0
  427738:	jne    0x427947
  42773e:	mov    rdx,QWORD PTR [rsp+0x60]
  427743:	mov    r8,QWORD PTR [rsp+0x68]
  427748:	cmp    rdx,r8
  42774b:	je     0x427759
  42774d:	sub    r8,rdx
  427750:	test   r8d,r8d
  427753:	jne    0x427935
  427759:	mov    rcx,QWORD PTR [rsp+0x80]
  427761:	test   rcx,rcx
  427764:	je     0x42778f
  427766:	call   0x43f100
  42776b:	mov    QWORD PTR [rsp+0x88],0x0
  427777:	mov    QWORD PTR [rsp+0x90],0x0
  427783:	mov    QWORD PTR [rsp+0x80],0x0
  42778f:	mov    rcx,QWORD PTR [rsp+0x60]
  427794:	test   rcx,rcx
  427797:	je     0x42779e
  427799:	call   0x43f100
  42779e:	mov    eax,r13d
  4277a1:	add    rsp,0xa8
  4277a8:	pop    rbx
  4277a9:	pop    rsi
  4277aa:	pop    rdi
  4277ab:	pop    rbp
  4277ac:	pop    r12
  4277ae:	pop    r13
  4277b0:	pop    r14
  4277b2:	pop    r15
  4277b4:	ret    
  4277b5:	mov    rcx,rdi
  4277b8:	call   0x4251e0
  4277bd:	cmp    eax,0xffffffff
  4277c0:	mov    r14d,eax
  4277c3:	je     0x427684
  4277c9:	lea    ecx,[rax+0x1]
  4277cc:	movsxd r15,r14d
  4277cf:	movsxd rcx,ecx
  4277d2:	call   0x4385d0
  4277d7:	mov    rdx,QWORD PTR [rdi]
  4277da:	mov    r8,r15
  4277dd:	mov    rcx,rax
  4277e0:	mov    rbp,rax
  4277e3:	call   0x43f0a8
  4277e8:	mov    edx,DWORD PTR [rsi]
  4277ea:	mov    BYTE PTR [rbp+r15*1+0x0],0x0
  4277f0:	mov    rcx,rbp
  4277f3:	call   0x426540
  4277f8:	test   rax,rax
  4277fb:	je     0x427890
  427801:	cmp    BYTE PTR [rax],0x0
  427804:	je     0x42781d
  427806:	mov    rcx,QWORD PTR [rsp+0x38]
  42780b:	mov    rdx,rax
  42780e:	mov    QWORD PTR [rsp+0x40],rax
  427813:	call   0x425940
  427818:	mov    rax,QWORD PTR [rsp+0x40]
  42781d:	mov    rcx,rax
  427820:	call   0x43f100
  427825:	mov    rax,QWORD PTR [rdi]
  427828:	mov    QWORD PTR [rsp+0x40],rax
  42782d:	mov    rcx,rbp
  427830:	call   0x43f100
  427835:	add    r15,QWORD PTR [rsp+0x40]
  42783a:	mov    QWORD PTR [rdi],r15
  42783d:	jmp    0x4275b8
  427842:	add    rdx,0x1
  427846:	mov    rcx,rdi
  427849:	mov    QWORD PTR [rdi],rdx
  42784c:	call   0x425230
  427851:	cmp    eax,0xffffffff
  427854:	je     0x427684
  42785a:	cmp    eax,DWORD PTR [rsi+0x20]
  42785d:	jge    0x427684
  427863:	mov    rdx,QWORD PTR [rsi+0x10]
  427867:	cdqe   
  427869:	mov    rdx,QWORD PTR [rdx+rax*8]
  42786d:	test   rdx,rdx
  427870:	je     0x4275dd
  427876:	cmp    BYTE PTR [rdx],0x0
  427879:	je     0x4275dd
  42787f:	mov    rcx,QWORD PTR [rsp+0x38]
  427884:	call   0x425940
  427889:	jmp    0x4275dd
  42788e:	xchg   ax,ax
  427890:	mov    rax,QWORD PTR [rdi]
  427893:	test   r14d,r14d
  427896:	mov    QWORD PTR [rsp+0x40],rax
  42789b:	je     0x42782d
  42789d:	mov    rcx,QWORD PTR [rsp+0x38]
  4278a2:	mov    rdx,rax
  4278a5:	mov    r8d,r14d
  4278a8:	call   0x425860
  4278ad:	mov    rax,QWORD PTR [rdi]
  4278b0:	mov    QWORD PTR [rsp+0x40],rax
  4278b5:	jmp    0x42782d
  4278ba:	nop    WORD PTR [rax+rax*1+0x0]
  4278c0:	xor    r13d,r13d
  4278c3:	jmp    0x42779e
  4278c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4278d0:	mov    r8,QWORD PTR [rsp+0x68]
  4278d5:	mov    rcx,QWORD PTR [rsp+0x100]
  4278dd:	lea    rdx,[rsp+0x60]
  4278e2:	call   0x425a80
  4278e7:	jmp    0x427759
  4278ec:	add    rax,0x1
  4278f0:	mov    rcx,rdi
  4278f3:	mov    QWORD PTR [rdi],rax
  4278f6:	call   0x425230
  4278fb:	cmp    eax,0xffffffff
  4278fe:	je     0x4278c0
  427900:	cmp    eax,DWORD PTR [rsi+0x20]
  427903:	jge    0x4278c0
  427905:	mov    rdx,QWORD PTR [rsi+0x10]
  427909:	cdqe   
  42790b:	xor    ebx,ebx
  42790d:	mov    rdx,QWORD PTR [rdx+rax*8]
  427911:	test   rdx,rdx
  427914:	je     0x4274fc
  42791a:	cmp    BYTE PTR [rdx],0x0
  42791d:	je     0x4274fc
  427923:	lea    rbp,[rsp+0x60]
  427928:	mov    rcx,rbp
  42792b:	call   0x425940
  427930:	jmp    0x4274fc
  427935:	mov    rcx,QWORD PTR [rsp+0x100]
  42793d:	call   0x4258a0
  427942:	jmp    0x427759
  427947:	lea    rcx,[rsp+0x60]
  42794c:	call   0x425940
  427951:	jmp    0x42773e
  427956:	lea    rdx,[rip+0x2576e]        # 0x44d0cb
  42795d:	mov    rcx,rbp
  427960:	call   0x425940
  427965:	jmp    0x4276e8
  42796a:	mov    rcx,rbp
  42796d:	call   0x425940
  427972:	jmp    0x4276de
  427977:	nop    WORD PTR [rax+rax*1+0x0]
  427980:	push   r15
  427982:	push   r14
  427984:	push   r13
  427986:	push   r12
  427988:	push   rbp
  427989:	push   rdi
  42798a:	push   rsi
  42798b:	push   rbx
  42798c:	sub    rsp,0xc8
  427993:	mov    rax,QWORD PTR [rip+0x29c46]        # 0x4515e0
  42799a:	xor    ebp,ebp
  42799c:	mov    esi,0x1
  4279a1:	mov    r14,rdx
  4279a4:	mov    QWORD PTR [r8],0x0
  4279ab:	mov    r13,r8
  4279ae:	mov    QWORD PTR [r8+0x10],0x0
  4279b6:	mov    QWORD PTR [r8+0x8],0x0
  4279be:	mov    r12,rcx
  4279c1:	mov    r8,QWORD PTR [r14]
  4279c4:	mov    QWORD PTR [rsp+0x80],0x0
  4279d0:	lea    rbx,[rip+0x2576d]        # 0x44d144
  4279d7:	mov    QWORD PTR [rsp+0x78],0x0
  4279e0:	mov    QWORD PTR [rsp+0x70],0x0
  4279e9:	lea    rdi,[rsp+0x70]
  4279ee:	mov    QWORD PTR [rsp+0x38],rax
  4279f3:	lea    rax,[rsp+0x90]
  4279fb:	movzx  r15d,BYTE PTR [r8]
  4279ff:	mov    QWORD PTR [rsp+0x58],rax
  427a04:	lea    rax,[rsp+0x60]
  427a09:	mov    QWORD PTR [rsp+0x40],rax
  427a0e:	lea    eax,[r15-0x41]
  427a12:	cmp    al,0x34
  427a14:	ja     0x427aae
  427a1a:	nop    WORD PTR [rax+rax*1+0x0]
  427a20:	movzx  eax,al
  427a23:	movsxd rax,DWORD PTR [rbx+rax*4]
  427a27:	add    rax,rbx
  427a2a:	jmp    rax
  427a2c:	nop    DWORD PTR [rax+0x0]
  427a30:	test   BYTE PTR [r12],0x2
  427a35:	je     0x427a90
  427a37:	mov    rax,QWORD PTR [rsp+0x78]
  427a3c:	cmp    QWORD PTR [rsp+0x70],rax
  427a41:	mov    r10d,r15d
  427a44:	je     0x427a5c
  427a46:	lea    rdx,[rip+0x25664]        # 0x44d0b1
  427a4d:	mov    rcx,rdi
  427a50:	call   0x425900
  427a55:	mov    r8,QWORD PTR [r14]
  427a58:	movzx  r10d,BYTE PTR [r8]
  427a5c:	movsx  ecx,r10b
  427a60:	mov    QWORD PTR [rsp+0x48],r8
  427a65:	call   0x425550
  427a6a:	mov    ecx,eax
  427a6c:	call   0x4255a0
  427a71:	test   rax,rax
  427a74:	mov    r8,QWORD PTR [rsp+0x48]
  427a79:	je     0x427a90
  427a7b:	cmp    BYTE PTR [rax],0x0
  427a7e:	je     0x427a90
  427a80:	mov    rdx,rax
  427a83:	mov    rcx,rdi
  427a86:	call   0x425900
  427a8b:	mov    r8,QWORD PTR [r14]
  427a8e:	xchg   ax,ax
  427a90:	add    r8,0x1
  427a94:	mov    QWORD PTR [r14],r8
  427a97:	test   esi,esi
  427a99:	je     0x427b10
  427a9b:	mov    r8,QWORD PTR [r14]
  427a9e:	movzx  r15d,BYTE PTR [r8]
  427aa2:	lea    eax,[r15-0x41]
  427aa6:	cmp    al,0x34
  427aa8:	jbe    0x427a20
  427aae:	mov    rbx,QWORD PTR [r14]
  427ab1:	movzx  eax,BYTE PTR [rbx]
  427ab4:	sub    eax,0x42
  427ab7:	cmp    al,0x17
  427ab9:	ja     0x428133
  427abf:	lea    rdx,[rip+0x25752]        # 0x44d218
  427ac6:	movzx  eax,al
  427ac9:	movsxd rax,DWORD PTR [rdx+rax*4]
  427acd:	add    rdx,rax
  427ad0:	jmp    rdx
  427ad2:	add    r8,0x1
  427ad6:	mov    rax,QWORD PTR [rsp+0x70]
  427adb:	cmp    rax,QWORD PTR [rsp+0x78]
  427ae0:	mov    QWORD PTR [r14],r8
  427ae3:	je     0x427af3
  427ae5:	movzx  eax,BYTE PTR [rax]
  427ae8:	sub    eax,0x26
  427aeb:	test   al,0xfb
  427aed:	je     0x427f00
  427af3:	mov    r8,rdi
  427af6:	mov    rdx,r14
  427af9:	mov    rcx,r12
  427afc:	call   0x429ac0
  427b01:	test   eax,eax
  427b03:	jne    0x427e20
  427b09:	nop    DWORD PTR [rax+0x0]
  427b10:	mov    rcx,QWORD PTR [r13+0x0]
  427b14:	test   rcx,rcx
  427b17:	je     0x427b36
  427b19:	call   0x43f100
  427b1e:	mov    QWORD PTR [r13+0x8],0x0
  427b26:	mov    QWORD PTR [r13+0x10],0x0
  427b2e:	mov    QWORD PTR [r13+0x0],0x0
  427b36:	mov    rcx,QWORD PTR [rsp+0x70]
  427b3b:	xor    esi,esi
  427b3d:	test   rcx,rcx
  427b40:	je     0x427de0
  427b46:	call   0x43f100
  427b4b:	test   esi,esi
  427b4d:	je     0x427de0
  427b53:	test   ebp,ebp
  427b55:	mov    eax,0x3
  427b5a:	cmovne eax,ebp
  427b5d:	add    rsp,0xc8
  427b64:	pop    rbx
  427b65:	pop    rsi
  427b66:	pop    rdi
  427b67:	pop    rbp
  427b68:	pop    r12
  427b6a:	pop    r13
  427b6c:	pop    r14
  427b6e:	pop    r15
  427b70:	ret    
  427b71:	mov    rdx,QWORD PTR [rsp+0x40]
  427b76:	add    r8,0x1
  427b7a:	mov    rcx,r14
  427b7d:	mov    QWORD PTR [r14],r8
  427b80:	call   0x4252a0
  427b85:	test   eax,eax
  427b87:	je     0x427b10
  427b89:	movsxd rax,DWORD PTR [rsp+0x60]
  427b8e:	cmp    DWORD PTR [r12+0x30],eax
  427b93:	jle    0x427b10
  427b99:	mov    rdx,QWORD PTR [r12+0x8]
  427b9e:	lea    r14,[rsp+0x68]
  427ba3:	mov    rax,QWORD PTR [rdx+rax*8]
  427ba7:	mov    QWORD PTR [rsp+0x68],rax
  427bac:	jmp    0x427a97
  427bb1:	add    r8,0x1
  427bb5:	mov    rax,QWORD PTR [rsp+0x70]
  427bba:	cmp    rax,QWORD PTR [rsp+0x78]
  427bbf:	mov    QWORD PTR [r14],r8
  427bc2:	je     0x427bd2
  427bc4:	movzx  eax,BYTE PTR [rax]
  427bc7:	sub    eax,0x26
  427bca:	test   al,0xfb
  427bcc:	je     0x427ed4
  427bd2:	lea    rdx,[rip+0x254f6]        # 0x44d0cf
  427bd9:	mov    rcx,rdi
  427bdc:	call   0x425940
  427be1:	mov    rax,QWORD PTR [r14]
  427be4:	cmp    BYTE PTR [rax],0x5f
  427be7:	jne    0x427df0
  427bed:	add    rax,0x1
  427bf1:	mov    QWORD PTR [r14],rax
  427bf4:	lea    rdx,[rip+0x254d6]        # 0x44d0d1
  427bfb:	mov    rcx,rdi
  427bfe:	call   0x425940
  427c03:	jmp    0x427a97
  427c08:	nop    DWORD PTR [rax+rax*1+0x0]
  427c10:	add    r8,0x1
  427c14:	test   BYTE PTR [r12],0x4
  427c19:	mov    QWORD PTR [r14],r8
  427c1c:	je     0x427ec0
  427c22:	test   ebp,ebp
  427c24:	mov    eax,0x1
  427c29:	cmove  ebp,eax
  427c2c:	jmp    0x427a97
  427c31:	add    r8,0x1
  427c35:	lea    rdx,[rip+0x25471]        # 0x44d0ad
  427c3c:	mov    rcx,rdi
  427c3f:	mov    QWORD PTR [r14],r8
  427c42:	call   0x425900
  427c47:	test   ebp,ebp
  427c49:	mov    eax,0x2
  427c4e:	cmove  ebp,eax
  427c51:	jmp    0x427a97
  427c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c60:	add    r8,0x1
  427c64:	lea    rdx,[rip+0x25448]        # 0x44d0b3
  427c6b:	mov    rcx,rdi
  427c6e:	mov    QWORD PTR [r14],r8
  427c71:	call   0x425940
  427c76:	mov    rax,QWORD PTR [r14]
  427c79:	movzx  eax,BYTE PTR [rax]
  427c7c:	cmp    al,0x51
  427c7e:	je     0x427e50
  427c84:	test   BYTE PTR [r12],0x4
  427c89:	lea    rcx,[rip+0x25438]        # 0x44d0c8
  427c90:	lea    rdx,[rip+0x25410]        # 0x44d0a7
  427c97:	cmove  rdx,rcx
  427c9b:	cmp    BYTE PTR [rdx],0x0
  427c9e:	jne    0x427f23
  427ca4:	mov    rcx,QWORD PTR [rsp+0x38]
  427ca9:	movzx  edx,al
  427cac:	test   BYTE PTR [rcx+rdx*2],0x4
  427cb0:	jne    0x427e64
  427cb6:	lea    edx,[rax-0x58]
  427cb9:	cmp    dl,0x1
  427cbc:	jbe    0x427f64
  427cc2:	cmp    al,0x74
  427cc4:	je     0x427fa8
  427cca:	cmp    al,0x51
  427ccc:	jne    0x427b10
  427cd2:	xor    r9d,r9d
  427cd5:	mov    DWORD PTR [rsp+0x20],0x0
  427cdd:	mov    r8,rdi
  427ce0:	mov    rdx,r14
  427ce3:	mov    rcx,r12
  427ce6:	call   0x427420
  427ceb:	test   eax,eax
  427ced:	mov    esi,eax
  427cef:	je     0x427b10
  427cf5:	lea    rdx,[rip+0x253b3]        # 0x44d0af
  427cfc:	mov    rcx,rdi
  427cff:	call   0x425900
  427d04:	cmp    r15b,0x4d
  427d08:	jne    0x427f40
  427d0e:	mov    r15,QWORD PTR [r14]
  427d11:	xor    r9d,r9d
  427d14:	movsx  ecx,BYTE PTR [r15]
  427d18:	lea    eax,[rcx-0x43]
  427d1b:	cmp    al,0x32
  427d1d:	ja     0x427d33
  427d1f:	movabs r8,0x4000000080001
  427d29:	bt     r8,rax
  427d2d:	jb     0x4282c1
  427d33:	lea    rax,[r15+0x1]
  427d37:	mov    QWORD PTR [r14],rax
  427d3a:	cmp    BYTE PTR [r15],0x46
  427d3e:	jne    0x427b10
  427d44:	mov    r8,rdi
  427d47:	mov    rdx,r14
  427d4a:	mov    rcx,r12
  427d4d:	mov    DWORD PTR [rsp+0x48],r9d
  427d52:	call   0x429ac0
  427d57:	test   eax,eax
  427d59:	mov    r9d,DWORD PTR [rsp+0x48]
  427d5e:	je     0x427b10
  427d64:	mov    rax,QWORD PTR [r14]
  427d67:	cmp    BYTE PTR [rax],0x5f
  427d6a:	jne    0x427b10
  427d70:	add    rax,0x1
  427d74:	test   r9d,r9d
  427d77:	mov    QWORD PTR [r14],rax
  427d7a:	je     0x427a97
  427d80:	test   BYTE PTR [r12],0x2
  427d85:	je     0x427a97
  427d8b:	mov    rax,QWORD PTR [rsp+0x78]
  427d90:	cmp    QWORD PTR [rsp+0x70],rax
  427d95:	je     0x427db0
  427d97:	lea    rdx,[rip+0x25313]        # 0x44d0b1
  427d9e:	mov    rcx,rdi
  427da1:	mov    DWORD PTR [rsp+0x48],r9d
  427da6:	call   0x425940
  427dab:	mov    r9d,DWORD PTR [rsp+0x48]
  427db0:	mov    ecx,r9d
  427db3:	call   0x4255a0
  427db8:	test   rax,rax
  427dbb:	je     0x427a97
  427dc1:	cmp    BYTE PTR [rax],0x0
  427dc4:	je     0x427a97
  427dca:	mov    rdx,rax
  427dcd:	mov    rcx,rdi
  427dd0:	call   0x425940
  427dd5:	jmp    0x427a97
  427dda:	nop    WORD PTR [rax+rax*1+0x0]
  427de0:	xor    eax,eax
  427de2:	jmp    0x427b5d
  427de7:	nop    WORD PTR [rax+rax*1+0x0]
  427df0:	mov    r9d,0x3
  427df6:	mov    r8,rdi
  427df9:	mov    rdx,r14
  427dfc:	mov    rcx,r12
  427dff:	call   0x426640
  427e04:	mov    esi,eax
  427e06:	mov    rax,QWORD PTR [r14]
  427e09:	cmp    BYTE PTR [rax],0x5f
  427e0c:	jne    0x427bf4
  427e12:	jmp    0x427bed
  427e17:	nop    WORD PTR [rax+rax*1+0x0]
  427e20:	mov    rdx,QWORD PTR [r14]
  427e23:	movzx  eax,BYTE PTR [rdx]
  427e26:	test   al,al
  427e28:	je     0x427e32
  427e2a:	cmp    al,0x5f
  427e2c:	jne    0x427b10
  427e32:	cmp    al,0x5f
  427e34:	jne    0x427a97
  427e3a:	add    rdx,0x1
  427e3e:	mov    QWORD PTR [r14],rdx
  427e41:	jmp    0x427a97
  427e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427e50:	mov    rax,QWORD PTR [rip+0x29789]        # 0x4515e0
  427e57:	test   BYTE PTR [rax+0xa2],0x4
  427e5e:	je     0x427cd2
  427e64:	mov    rcx,r14
  427e67:	call   0x4251e0
  427e6c:	cmp    eax,0xffffffff
  427e6f:	mov    DWORD PTR [rsp+0x60],eax
  427e73:	mov    DWORD PTR [rsp+0x48],eax
  427e77:	je     0x427b10
  427e7d:	mov    rdx,QWORD PTR [r14]
  427e80:	mov    rcx,rdx
  427e83:	mov    QWORD PTR [rsp+0x50],rdx
  427e88:	call   0x43f028
  427e8d:	mov    r8d,DWORD PTR [rsp+0x48]
  427e92:	mov    rdx,QWORD PTR [rsp+0x50]
  427e97:	cmp    r8d,eax
  427e9a:	jg     0x427b10
  427ea0:	test   r8d,r8d
  427ea3:	jne    0x4282a3
  427ea9:	movsxd rax,r8d
  427eac:	add    rax,rdx
  427eaf:	mov    QWORD PTR [r14],rax
  427eb2:	jmp    0x427cf5
  427eb7:	nop    WORD PTR [rax+rax*1+0x0]
  427ec0:	lea    rdx,[rip+0x25206]        # 0x44d0cd
  427ec7:	mov    rcx,rdi
  427eca:	call   0x425900
  427ecf:	jmp    0x427c22
  427ed4:	lea    rdx,[rip+0x251d4]        # 0x44d0af
  427edb:	mov    rcx,rdi
  427ede:	call   0x425900
  427ee3:	lea    rdx,[rip+0x251c9]        # 0x44d0b3
  427eea:	mov    rcx,rdi
  427eed:	call   0x425940
  427ef2:	jmp    0x427bd2
  427ef7:	nop    WORD PTR [rax+rax*1+0x0]
  427f00:	lea    rdx,[rip+0x251a8]        # 0x44d0af
  427f07:	mov    rcx,rdi
  427f0a:	call   0x425900
  427f0f:	lea    rdx,[rip+0x2519d]        # 0x44d0b3
  427f16:	mov    rcx,rdi
  427f19:	call   0x425940
  427f1e:	jmp    0x427af3
  427f23:	mov    rcx,rdi
  427f26:	call   0x425900
  427f2b:	mov    rax,QWORD PTR [r14]
  427f2e:	movzx  eax,BYTE PTR [rax]
  427f31:	jmp    0x427ca4
  427f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f40:	mov    rax,QWORD PTR [r14]
  427f43:	xor    r9d,r9d
  427f46:	cmp    BYTE PTR [rax],0x5f
  427f49:	jne    0x427b10
  427f4f:	add    rax,0x1
  427f53:	test   r9d,r9d
  427f56:	mov    QWORD PTR [r14],rax
  427f59:	jne    0x427d80
  427f5f:	jmp    0x427a97
  427f64:	mov    r8,QWORD PTR [rsp+0x58]
  427f69:	mov    rcx,r12
  427f6c:	mov    rdx,r14
  427f6f:	call   0x427980
  427f74:	mov    rcx,QWORD PTR [rsp+0x90]
  427f7c:	mov    r8,QWORD PTR [rsp+0x98]
  427f84:	cmp    rcx,r8
  427f87:	je     0x427f95
  427f89:	sub    r8,rcx
  427f8c:	test   r8d,r8d
  427f8f:	jne    0x42828b
  427f95:	test   rcx,rcx
  427f98:	je     0x427cf5
  427f9e:	call   0x43f100
  427fa3:	jmp    0x427cf5
  427fa8:	mov    r8,QWORD PTR [rsp+0x58]
  427fad:	xor    r9d,r9d
  427fb0:	mov    rcx,r12
  427fb3:	mov    DWORD PTR [rsp+0x28],0x1
  427fbb:	mov    DWORD PTR [rsp+0x20],0x1
  427fc3:	mov    rdx,r14
  427fc6:	mov    QWORD PTR [rsp+0xa0],0x0
  427fd2:	mov    QWORD PTR [rsp+0x98],0x0
  427fde:	mov    QWORD PTR [rsp+0x90],0x0
  427fea:	call   0x426d10
  427fef:	test   eax,eax
  427ff1:	mov    esi,eax
  427ff3:	mov    rcx,QWORD PTR [rsp+0x90]
  427ffb:	je     0x428012
  427ffd:	mov    r8,QWORD PTR [rsp+0x98]
  428005:	sub    r8,rcx
  428008:	test   r8d,r8d
  42800b:	je     0x427f95
  42800d:	jmp    0x42828b
  428012:	test   rcx,rcx
  428015:	je     0x427b10
  42801b:	call   0x43f100
  428020:	jmp    0x427b10
  428025:	add    rbx,0x1
  428029:	mov    rcx,r14
  42802c:	mov    QWORD PTR [r14],rbx
  42802f:	call   0x425230
  428034:	movsxd rbx,eax
  428037:	cmp    ebx,0xffffffff
  42803a:	je     0x427b10
  428040:	cmp    QWORD PTR [r12+0x50],0x0
  428046:	je     0x428053
  428048:	cmp    ebx,DWORD PTR [r12+0x58]
  42804d:	jge    0x427b10
  428053:	mov    rcx,r14
  428056:	call   0x425230
  42805b:	cmp    eax,0xffffffff
  42805e:	je     0x427b10
  428064:	mov    rax,QWORD PTR [r12+0x50]
  428069:	test   rax,rax
  42806c:	je     0x4287f5
  428072:	mov    rdx,QWORD PTR [rax+rbx*8]
  428076:	mov    esi,0x1
  42807b:	test   rdx,rdx
  42807e:	je     0x4280f3
  428080:	cmp    BYTE PTR [rdx],0x0
  428083:	je     0x4280f3
  428085:	mov    rcx,r13
  428088:	call   0x425940
  42808d:	jmp    0x4280f3
  42808f:	nop
  428090:	add    rbx,0x1
  428094:	lea    rdx,[rsp+0x60]
  428099:	mov    rcx,r14
  42809c:	mov    QWORD PTR [r14],rbx
  42809f:	call   0x4252a0
  4280a4:	test   eax,eax
  4280a6:	je     0x427b10
  4280ac:	movsxd rax,DWORD PTR [rsp+0x60]
  4280b1:	cmp    DWORD PTR [r12+0x24],eax
  4280b6:	jle    0x427b10
  4280bc:	mov    rdx,QWORD PTR [r12+0x18]
  4280c1:	mov    rdx,QWORD PTR [rdx+rax*8]
  4280c5:	test   rdx,rdx
  4280c8:	jne    0x428080
  4280ca:	jmp    0x4280f3
  4280cc:	nop    DWORD PTR [rax+0x0]
  4280d0:	mov    DWORD PTR [rsp+0x20],0x1
  4280d8:	xor    r9d,r9d
  4280db:	mov    r8,r13
  4280de:	mov    rdx,r14
  4280e1:	mov    rcx,r12
  4280e4:	call   0x427420
  4280e9:	mov    esi,eax
  4280eb:	test   esi,esi
  4280ed:	je     0x427b10
  4280f3:	mov    rcx,QWORD PTR [rsp+0x78]
  4280f8:	cmp    QWORD PTR [rsp+0x70],rcx
  4280fd:	je     0x428125
  4280ff:	lea    rdx,[rip+0x24fab]        # 0x44d0b1
  428106:	mov    rcx,r13
  428109:	call   0x425940
  42810e:	mov    r8,QWORD PTR [rsp+0x78]
  428113:	lea    rdx,[rsp+0x70]
  428118:	mov    rcx,r13
  42811b:	call   0x425a80
  428120:	mov    rcx,QWORD PTR [rsp+0x70]
  428125:	test   rcx,rcx
  428128:	jne    0x427b46
  42812e:	jmp    0x427b4b
  428133:	lea    rsi,[rip+0x2513e]        # 0x44d278
  42813a:	mov    DWORD PTR [rsp+0x64],0x0
  428142:	movzx  edx,BYTE PTR [rbx]
  428145:	lea    eax,[rdx-0x43]
  428148:	cmp    al,0x32
  42814a:	ja     0x4281a0
  42814c:	movzx  eax,al
  42814f:	movsxd rax,DWORD PTR [rsi+rax*4]
  428153:	add    rax,rsi
  428156:	jmp    rax
  428158:	nop    DWORD PTR [rax+rax*1+0x0]
  428160:	add    rbx,0x1
  428164:	mov    QWORD PTR [r14],rbx
  428167:	mov    rax,QWORD PTR [r13+0x8]
  42816b:	cmp    QWORD PTR [r13+0x0],rax
  42816f:	je     0x428180
  428171:	lea    rdx,[rip+0x24f39]        # 0x44d0b1
  428178:	mov    rcx,r13
  42817b:	call   0x425940
  428180:	lea    rdx,[rip+0x24f4c]        # 0x44d0d3
  428187:	mov    rcx,r13
  42818a:	call   0x425940
  42818f:	mov    rbx,QWORD PTR [r14]
  428192:	movzx  edx,BYTE PTR [rbx]
  428195:	lea    eax,[rdx-0x43]
  428198:	cmp    al,0x32
  42819a:	jbe    0x42814c
  42819c:	nop    DWORD PTR [rax+0x0]
  4281a0:	cmp    dl,0x78
  4281a3:	mov    rax,rbx
  4281a6:	ja     0x427b10
  4281ac:	lea    rcx,[rip+0x25191]        # 0x44d344
  4281b3:	movzx  edx,dl
  4281b6:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  4281ba:	add    rcx,rdx
  4281bd:	jmp    rcx
  4281bf:	nop
  4281c0:	add    rbx,0x1
  4281c4:	mov    QWORD PTR [r14],rbx
  4281c7:	mov    rax,QWORD PTR [r13+0x8]
  4281cb:	cmp    QWORD PTR [r13+0x0],rax
  4281cf:	je     0x4281e0
  4281d1:	lea    rdx,[rip+0x24ed9]        # 0x44d0b1
  4281d8:	mov    rcx,r13
  4281db:	call   0x425940
  4281e0:	lea    rdx,[rip+0x24ef5]        # 0x44d0dc
  4281e7:	mov    rcx,r13
  4281ea:	call   0x425940
  4281ef:	mov    rbx,QWORD PTR [r14]
  4281f2:	jmp    0x428142
  4281f7:	nop    WORD PTR [rax+rax*1+0x0]
  428200:	add    rbx,0x1
  428204:	mov    QWORD PTR [r14],rbx
  428207:	mov    rax,QWORD PTR [r13+0x8]
  42820b:	cmp    QWORD PTR [r13+0x0],rax
  42820f:	je     0x428220
  428211:	lea    rdx,[rip+0x24e99]        # 0x44d0b1
  428218:	mov    rcx,r13
  42821b:	call   0x425940
  428220:	lea    rdx,[rip+0x24ebc]        # 0x44d0e3
  428227:	mov    rcx,r13
  42822a:	call   0x425940
  42822f:	mov    rbx,QWORD PTR [r14]
  428232:	jmp    0x428142
  428237:	nop    WORD PTR [rax+rax*1+0x0]
  428240:	test   BYTE PTR [r12],0x2
  428245:	je     0x42827f
  428247:	mov    rax,QWORD PTR [r13+0x8]
  42824b:	cmp    QWORD PTR [r13+0x0],rax
  42824f:	je     0x428266
  428251:	lea    rdx,[rip+0x24e59]        # 0x44d0b1
  428258:	mov    rcx,r13
  42825b:	call   0x425900
  428260:	mov    rbx,QWORD PTR [r14]
  428263:	movzx  edx,BYTE PTR [rbx]
  428266:	movsx  ecx,dl
  428269:	call   0x425550
  42826e:	mov    ecx,eax
  428270:	call   0x4255a0
  428275:	test   rax,rax
  428278:	je     0x42827f
  42827a:	cmp    BYTE PTR [rax],0x0
  42827d:	jne    0x4282e3
  42827f:	add    rbx,0x1
  428283:	mov    QWORD PTR [r14],rbx
  428286:	jmp    0x428142
  42828b:	mov    rdx,rcx
  42828e:	mov    rcx,rdi
  428291:	call   0x4258a0
  428296:	mov    rcx,QWORD PTR [rsp+0x90]
  42829e:	jmp    0x427f95
  4282a3:	mov    rcx,rdi
  4282a6:	call   0x4258a0
  4282ab:	mov    r8d,DWORD PTR [rsp+0x60]
  4282b0:	mov    rdx,QWORD PTR [r14]
  4282b3:	movsxd rax,r8d
  4282b6:	add    rax,rdx
  4282b9:	mov    QWORD PTR [r14],rax
  4282bc:	jmp    0x427cf5
  4282c1:	add    r15,0x1
  4282c5:	call   0x425550
  4282ca:	mov    r9d,eax
  4282cd:	lea    rax,[r15+0x1]
  4282d1:	mov    QWORD PTR [r14],rax
  4282d4:	cmp    BYTE PTR [r15],0x46
  4282d8:	jne    0x427b10
  4282de:	jmp    0x427d44
  4282e3:	mov    rdx,rax
  4282e6:	mov    rcx,r13
  4282e9:	call   0x425900
  4282ee:	mov    rbx,QWORD PTR [r14]
  4282f1:	jmp    0x42827f
  4282f3:	lea    rax,[rbx+0x1]
  4282f7:	mov    rdx,QWORD PTR [rip+0x292e2]        # 0x4515e0
  4282fe:	mov    QWORD PTR [r14],rax
  428301:	movzx  ecx,BYTE PTR [rbx+0x1]
  428305:	test   BYTE PTR [rdx+rcx*2],0x4
  428309:	je     0x427b10
  42830f:	lea    rsi,[rax+0x1]
  428313:	mov    QWORD PTR [r14],rsi
  428316:	cmp    BYTE PTR [rax+0x1],0x5f
  42831a:	jne    0x4285e1
  428320:	add    rax,0x2
  428324:	xor    ecx,ecx
  428326:	mov    QWORD PTR [r14],rax
  428329:	jmp    0x428354
  42832b:	nop    DWORD PTR [rax+rax*1+0x0]
  428330:	cmp    dl,0x5f
  428333:	je     0x42835e
  428335:	mov    BYTE PTR [rsp+rcx*1+0x90],dl
  42833c:	lea    r8,[rax+0x1]
  428340:	add    rcx,0x1
  428344:	cmp    rcx,0x24
  428348:	mov    QWORD PTR [r14],r8
  42834b:	je     0x428809
  428351:	mov    rax,r8
  428354:	movzx  edx,BYTE PTR [rax]
  428357:	movsxd r8,ecx
  42835a:	test   dl,dl
  42835c:	jne    0x428330
  42835e:	cmp    dl,0x5f
  428361:	jne    0x427b10
  428367:	add    rax,0x1
  42836b:	lea    rbx,[rsp+0x90]
  428373:	mov    BYTE PTR [rsp+r8*1+0x90],0x0
  42837c:	mov    QWORD PTR [r14],rax
  42837f:	lea    r8,[rsp+0x64]
  428384:	lea    rdx,[rip+0x24dab]        # 0x44d136
  42838b:	mov    rcx,rbx
  42838e:	call   0x43f060
  428393:	mov    r8d,DWORD PTR [rsp+0x64]
  428398:	lea    rdx,[rip+0x24d9a]        # 0x44d139
  42839f:	mov    rcx,rbx
  4283a2:	call   0x43f068
  4283a7:	mov    rax,QWORD PTR [r13+0x8]
  4283ab:	cmp    QWORD PTR [r13+0x0],rax
  4283af:	je     0x4283c0
  4283b1:	lea    rdx,[rip+0x24cf9]        # 0x44d0b1
  4283b8:	mov    rcx,r13
  4283bb:	call   0x425940
  4283c0:	cmp    BYTE PTR [rsp+0x90],0x0
  4283c8:	mov    esi,0x3
  4283cd:	je     0x4284f4
  4283d3:	mov    rdx,rbx
  4283d6:	mov    rcx,r13
  4283d9:	call   0x425940
  4283de:	jmp    0x4284f4
  4283e3:	lea    rbx,[rsp+0x90]
  4283eb:	mov    rcx,r12
  4283ee:	xor    esi,esi
  4283f0:	call   0x425410
  4283f5:	mov    r8,rbx
  4283f8:	mov    rdx,r14
  4283fb:	mov    rcx,r12
  4283fe:	mov    edi,eax
  428400:	mov    QWORD PTR [rsp+0xa0],0x0
  42840c:	mov    QWORD PTR [rsp+0x98],0x0
  428418:	mov    QWORD PTR [rsp+0x90],0x0
  428424:	call   0x429010
  428429:	test   eax,eax
  42842b:	je     0x42848c
  42842d:	mov    rcx,QWORD PTR [rsp+0x98]
  428435:	mov    rdx,QWORD PTR [rsp+0x90]
  42843d:	mov    r8d,0x0
  428443:	mov    r9d,edi
  428446:	mov    eax,ecx
  428448:	sub    eax,edx
  42844a:	cmp    rdx,rcx
  42844d:	lea    rcx,[r12+0x18]
  428452:	cmovne r8d,eax
  428456:	call   0x425770
  42845b:	mov    rax,QWORD PTR [r13+0x8]
  42845f:	cmp    QWORD PTR [r13+0x0],rax
  428463:	je     0x428474
  428465:	lea    rdx,[rip+0x24c45]        # 0x44d0b1
  42846c:	mov    rcx,r13
  42846f:	call   0x425940
  428474:	mov    r8,QWORD PTR [rsp+0x98]
  42847c:	mov    rdx,rbx
  42847f:	mov    rcx,r13
  428482:	mov    esi,0x1
  428487:	call   0x425a80
  42848c:	mov    rcx,QWORD PTR [rsp+0x90]
  428494:	test   rcx,rcx
  428497:	je     0x42849e
  428499:	call   0x43f100
  42849e:	test   esi,esi
  4284a0:	je     0x427b10
  4284a6:	test   ebp,ebp
  4284a8:	je     0x4287df
  4284ae:	mov    esi,0x3
  4284b3:	jmp    0x4280f3
  4284b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4284c0:	add    rbx,0x1
  4284c4:	mov    QWORD PTR [r14],rbx
  4284c7:	mov    rax,QWORD PTR [r13+0x8]
  4284cb:	cmp    QWORD PTR [r13+0x0],rax
  4284cf:	je     0x4284e0
  4284d1:	lea    rdx,[rip+0x24bd9]        # 0x44d0b1
  4284d8:	mov    rcx,r13
  4284db:	call   0x425940
  4284e0:	lea    rdx,[rip+0x24c0b]        # 0x44d0f2
  4284e7:	mov    rcx,r13
  4284ea:	mov    esi,0x3
  4284ef:	call   0x425940
  4284f4:	test   ebp,ebp
  4284f6:	jne    0x4280f3
  4284fc:	mov    ebp,esi
  4284fe:	jmp    0x4280eb
  428503:	add    rbx,0x1
  428507:	mov    QWORD PTR [r14],rbx
  42850a:	mov    rax,QWORD PTR [r13+0x8]
  42850e:	cmp    QWORD PTR [r13+0x0],rax
  428512:	je     0x428523
  428514:	lea    rdx,[rip+0x24b96]        # 0x44d0b1
  42851b:	mov    rcx,r13
  42851e:	call   0x425940
  428523:	lea    rdx,[rip+0x24c06]        # 0x44d130
  42852a:	mov    rcx,r13
  42852d:	mov    esi,0x6
  428532:	call   0x425940
  428537:	jmp    0x4284f4
  428539:	add    rbx,0x1
  42853d:	mov    QWORD PTR [r14],rbx
  428540:	mov    rax,QWORD PTR [r13+0x8]
  428544:	cmp    QWORD PTR [r13+0x0],rax
  428548:	je     0x428559
  42854a:	lea    rdx,[rip+0x24b60]        # 0x44d0b1
  428551:	mov    rcx,r13
  428554:	call   0x425940
  428559:	lea    rdx,[rip+0x24bc9]        # 0x44d129
  428560:	mov    rcx,r13
  428563:	mov    esi,0x6
  428568:	call   0x425940
  42856d:	jmp    0x4284f4
  42856f:	add    rbx,0x1
  428573:	mov    QWORD PTR [r14],rbx
  428576:	mov    rax,QWORD PTR [r13+0x8]
  42857a:	cmp    QWORD PTR [r13+0x0],rax
  42857e:	je     0x42858f
  428580:	lea    rdx,[rip+0x24b2a]        # 0x44d0b1
  428587:	mov    rcx,r13
  42858a:	call   0x425940
  42858f:	lea    rdx,[rip+0x24b7a]        # 0x44d110
  428596:	mov    rcx,r13
  428599:	mov    esi,0x5
  42859e:	call   0x425940
  4285a3:	jmp    0x4284f4
  4285a8:	add    rbx,0x1
  4285ac:	mov    QWORD PTR [r14],rbx
  4285af:	mov    rax,QWORD PTR [r13+0x8]
  4285b3:	cmp    QWORD PTR [r13+0x0],rax
  4285b7:	je     0x4285c8
  4285b9:	lea    rdx,[rip+0x24af1]        # 0x44d0b1
  4285c0:	mov    rcx,r13
  4285c3:	call   0x425940
  4285c8:	lea    rdx,[rip+0x24b3c]        # 0x44d10b
  4285cf:	mov    rcx,r13
  4285d2:	mov    esi,0x4
  4285d7:	call   0x425940
  4285dc:	jmp    0x4284f4
  4285e1:	lea    rbx,[rsp+0x90]
  4285e9:	mov    rdx,rsi
  4285ec:	mov    r8d,0x2
  4285f2:	mov    rcx,rbx
  4285f5:	call   0x43f010
  4285fa:	mov    rcx,rsi
  4285fd:	mov    BYTE PTR [rsp+0x92],0x0
  428605:	call   0x43f028
  42860a:	mov    edx,0x2
  42860f:	cmp    rax,0x1
  428613:	cmova  rax,rdx
  428617:	add    rax,rsi
  42861a:	mov    QWORD PTR [r14],rax
  42861d:	jmp    0x42837f
  428622:	add    rbx,0x1
  428626:	mov    QWORD PTR [r14],rbx
  428629:	mov    rax,QWORD PTR [r13+0x8]
  42862d:	cmp    QWORD PTR [r13+0x0],rax
  428631:	je     0x428642
  428633:	lea    rdx,[rip+0x24a77]        # 0x44d0b1
  42863a:	mov    rcx,r13
  42863d:	call   0x425940
  428642:	lea    rdx,[rip+0x24abc]        # 0x44d105
  428649:	mov    rcx,r13
  42864c:	mov    esi,0x3
  428651:	call   0x425940
  428656:	jmp    0x4284f4
  42865b:	add    rbx,0x1
  42865f:	mov    QWORD PTR [r14],rbx
  428662:	mov    rax,QWORD PTR [r13+0x8]
  428666:	cmp    QWORD PTR [r13+0x0],rax
  42866a:	je     0x42867b
  42866c:	lea    rdx,[rip+0x24a3e]        # 0x44d0b1
  428673:	mov    rcx,r13
  428676:	call   0x425940
  42867b:	lea    rdx,[rip+0x24a9b]        # 0x44d11d
  428682:	mov    rcx,r13
  428685:	mov    esi,0x6
  42868a:	call   0x425940
  42868f:	jmp    0x4284f4
  428694:	add    rbx,0x1
  428698:	mov    QWORD PTR [r14],rbx
  42869b:	mov    rax,QWORD PTR [r13+0x8]
  42869f:	cmp    QWORD PTR [r13+0x0],rax
  4286a3:	je     0x4286b4
  4286a5:	lea    rdx,[rip+0x24a05]        # 0x44d0b1
  4286ac:	mov    rcx,r13
  4286af:	call   0x425940
  4286b4:	lea    rdx,[rip+0x24a41]        # 0x44d0fc
  4286bb:	mov    rcx,r13
  4286be:	mov    esi,0x3
  4286c3:	call   0x425940
  4286c8:	jmp    0x4284f4
  4286cd:	add    rbx,0x1
  4286d1:	mov    QWORD PTR [r14],rbx
  4286d4:	mov    rax,QWORD PTR [r13+0x8]
  4286d8:	cmp    QWORD PTR [r13+0x0],rax
  4286dc:	je     0x4286ed
  4286de:	lea    rdx,[rip+0x249cc]        # 0x44d0b1
  4286e5:	mov    rcx,r13
  4286e8:	call   0x425940
  4286ed:	lea    rdx,[rip+0x24a0d]        # 0x44d101
  4286f4:	mov    rcx,r13
  4286f7:	mov    esi,0x3
  4286fc:	call   0x425940
  428701:	jmp    0x4284f4
  428706:	add    rbx,0x1
  42870a:	mov    QWORD PTR [r14],rbx
  42870d:	mov    rax,QWORD PTR [r13+0x8]
  428711:	cmp    QWORD PTR [r13+0x0],rax
  428715:	je     0x428726
  428717:	lea    rdx,[rip+0x24993]        # 0x44d0b1
  42871e:	mov    rcx,r13
  428721:	call   0x425940
  428726:	lea    rdx,[rip+0x249c0]        # 0x44d0ed
  42872d:	mov    rcx,r13
  428730:	mov    esi,0x3
  428735:	call   0x425940
  42873a:	jmp    0x4284f4
  42873f:	lea    rbx,[rsp+0x90]
  428747:	mov    rdx,r14
  42874a:	mov    rcx,r12
  42874d:	mov    DWORD PTR [rsp+0x28],0x1
  428755:	mov    DWORD PTR [rsp+0x20],0x1
  42875d:	xor    r9d,r9d
  428760:	mov    r8,rbx
  428763:	mov    QWORD PTR [rsp+0xa0],0x0
  42876f:	mov    QWORD PTR [rsp+0x98],0x0
  42877b:	mov    QWORD PTR [rsp+0x90],0x0
  428787:	call   0x426d10
  42878c:	mov    r8,QWORD PTR [rsp+0x98]
  428794:	mov    rdx,rbx
  428797:	mov    rcx,r13
  42879a:	mov    esi,eax
  42879c:	call   0x425a80
  4287a1:	jmp    0x42848c
  4287a6:	add    rbx,0x1
  4287aa:	mov    QWORD PTR [r14],rbx
  4287ad:	mov    rax,QWORD PTR [r13+0x8]
  4287b1:	cmp    QWORD PTR [r13+0x0],rax
  4287b5:	je     0x4287c6
  4287b7:	lea    rdx,[rip+0x248f3]        # 0x44d0b1
  4287be:	mov    rcx,r13
  4287c1:	call   0x425940
  4287c6:	lea    rdx,[rip+0x24948]        # 0x44d115
  4287cd:	mov    rcx,r13
  4287d0:	mov    esi,0x5
  4287d5:	call   0x425940
  4287da:	jmp    0x4284f4
  4287df:	mov    esi,0x3
  4287e4:	mov    ebp,esi
  4287e6:	jmp    0x4280eb
  4287eb:	mov    esi,0x3
  4287f0:	jmp    0x4284f4
  4287f5:	mov    edx,ebx
  4287f7:	mov    rcx,r13
  4287fa:	mov    esi,0x1
  4287ff:	call   0x425980
  428804:	jmp    0x4280f3
  428809:	movzx  edx,BYTE PTR [rax+0x1]
  42880d:	mov    rax,r8
  428810:	mov    r8d,0x24
  428816:	jmp    0x42835e
  42881b:	nop    DWORD PTR [rax+rax*1+0x0]
  428820:	push   r15
  428822:	push   r14
  428824:	push   r13
  428826:	push   r12
  428828:	push   rbp
  428829:	push   rdi
  42882a:	push   rsi
  42882b:	push   rbx
  42882c:	sub    rsp,0x88
  428833:	mov    ebx,DWORD PTR [rcx]
  428835:	mov    r15,QWORD PTR [rdx]
  428838:	movsxd rax,r8d
  42883b:	mov    r12,rcx
  42883e:	mov    r13,rdx
  428841:	mov    rbp,r9
  428844:	mov    QWORD PTR [rsp+0x20],rax
  428849:	test   bh,0x10
  42884c:	lea    rdi,[r15+rax*1]
  428850:	je     0x42885b
  428852:	cmp    BYTE PTR [rdi],0x58
  428855:	je     0x4289e0
  42885b:	mov    esi,DWORD PTR [r12]
  42885f:	test   esi,0x1800
  428865:	je     0x4288bf
  428867:	lea    rdx,[rip+0x24cca]        # 0x44d538
  42886e:	mov    rcx,r15
  428871:	mov    DWORD PTR [rsp+0x2c],r8d
  428876:	call   0x43eff0
  42887b:	test   rax,rax
  42887e:	mov    rbx,rax
  428881:	mov    r8d,DWORD PTR [rsp+0x2c]
  428886:	je     0x4288bf
  428888:	lea    rsi,[rsp+0x38]
  42888d:	lea    rax,[rax+0x6]
  428891:	mov    rcx,rsi
  428894:	mov    QWORD PTR [rsp+0x38],rax
  428899:	call   0x4251e0
  42889e:	cmp    eax,0xffffffff
  4288a1:	mov    r8d,DWORD PTR [rsp+0x2c]
  4288a6:	je     0x428924
  4288a8:	mov    rdx,QWORD PTR [rsp+0x38]
  4288ad:	cdqe   
  4288af:	add    rax,rdx
  4288b2:	cmp    rdi,rax
  4288b5:	je     0x428d58
  4288bb:	mov    esi,DWORD PTR [r12]
  4288bf:	and    esi,0x2100
  4288c5:	je     0x428924
  4288c7:	lea    rdx,[rip+0x24c71]        # 0x44d53f
  4288ce:	mov    rcx,r15
  4288d1:	mov    DWORD PTR [rsp+0x2c],r8d
  4288d6:	call   0x43eff0
  4288db:	test   rax,rax
  4288de:	mov    rbx,rax
  4288e1:	mov    r8d,DWORD PTR [rsp+0x2c]
  4288e6:	je     0x428c30
  4288ec:	lea    rax,[rbx+0x6]
  4288f0:	mov    DWORD PTR [rsp+0x2c],r8d
  4288f5:	lea    rsi,[rsp+0x38]
  4288fa:	mov    QWORD PTR [rsp+0x38],rax
  4288ff:	mov    rcx,rsi
  428902:	call   0x4251e0
  428907:	cmp    eax,0xffffffff
  42890a:	mov    r8d,DWORD PTR [rsp+0x2c]
  42890f:	je     0x428924
  428911:	mov    rdx,QWORD PTR [rsp+0x38]
  428916:	cdqe   
  428918:	add    rax,rdx
  42891b:	cmp    rdi,rax
  42891e:	je     0x4289d0
  428924:	cmp    r8d,0xa
  428928:	mov    rbx,QWORD PTR [r13+0x0]
  42892c:	jg     0x428970
  42892e:	cmp    DWORD PTR [r12+0x44],0xffffffff
  428934:	je     0x428cc1
  42893a:	test   r8d,r8d
  42893d:	je     0x42894e
  42893f:	mov    rdx,rbx
  428942:	mov    rcx,rbp
  428945:	call   0x425860
  42894a:	mov    rbx,QWORD PTR [r13+0x0]
  42894e:	mov    r14,QWORD PTR [rsp+0x20]
  428953:	add    r14,rbx
  428956:	mov    QWORD PTR [r13+0x0],r14
  42895a:	add    rsp,0x88
  428961:	pop    rbx
  428962:	pop    rsi
  428963:	pop    rdi
  428964:	pop    rbp
  428965:	pop    r12
  428967:	pop    r13
  428969:	pop    r14
  42896b:	pop    r15
  42896d:	ret    
  42896e:	xchg   ax,ax
  428970:	lea    rdi,[rip+0x24bda]        # 0x44d551
  428977:	mov    ecx,0x8
  42897c:	mov    rsi,rbx
  42897f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  428981:	jne    0x42892e
  428983:	cmp    BYTE PTR [rbx+0x9],0x4e
  428987:	jne    0x42892e
  428989:	movzx  eax,BYTE PTR [rbx+0x8]
  42898d:	cmp    al,BYTE PTR [rbx+0xa]
  428990:	jne    0x42892e
  428992:	lea    rcx,[rip+0x19787]        # 0x442120
  428999:	movsx  edx,al
  42899c:	mov    DWORD PTR [rsp+0x2c],r8d
  4289a1:	call   0x43f050
  4289a6:	test   rax,rax
  4289a9:	mov    r8d,DWORD PTR [rsp+0x2c]
  4289ae:	je     0x42892e
  4289b4:	lea    rdx,[rip+0x24b9f]        # 0x44d55a
  4289bb:	mov    rcx,rbp
  4289be:	call   0x425940
  4289c3:	mov    rbx,QWORD PTR [r13+0x0]
  4289c7:	jmp    0x42894e
  4289c9:	nop    DWORD PTR [rax+0x0]
  4289d0:	cmp    BYTE PTR [rdx],0x5f
  4289d3:	jne    0x428924
  4289d9:	jmp    0x428d61
  4289de:	xchg   ax,ax
  4289e0:	mov    edx,0x3c
  4289e5:	mov    rcx,r15
  4289e8:	mov    DWORD PTR [rsp+0x2c],r8d
  4289ed:	call   0x43f050
  4289f2:	test   rax,rax
  4289f5:	mov    r8d,DWORD PTR [rsp+0x2c]
  4289fa:	je     0x428ca0
  428a00:	sub    rax,r15
  428a03:	cmp    rax,QWORD PTR [rsp+0x20]
  428a08:	jge    0x428ca0
  428a0e:	test   eax,eax
  428a10:	mov    r8d,eax
  428a13:	jne    0x428ca9
  428a19:	mov    rax,QWORD PTR [rsp+0x20]
  428a1e:	cmp    DWORD PTR [r12+0x44],0xffffffff
  428a24:	mov    QWORD PTR [rsp+0x50],0x0
  428a2d:	mov    QWORD PTR [rsp+0x48],0x0
  428a36:	mov    QWORD PTR [rsp+0x40],0x0
  428a3f:	lea    rax,[r15+rax*1+0x1]
  428a44:	mov    QWORD PTR [r13+0x0],rax
  428a48:	je     0x428cdc
  428a4e:	mov    eax,ebx
  428a50:	lea    rdx,[rip+0x24667]        # 0x44d0be
  428a57:	mov    rcx,rbp
  428a5a:	or     eax,0x1
  428a5d:	lea    rsi,[rsp+0x40]
  428a62:	mov    DWORD PTR [r12],eax
  428a66:	call   0x425940
  428a6b:	mov    rdi,QWORD PTR [rip+0x28b6e]        # 0x4515e0
  428a72:	mov    rcx,QWORD PTR [rsp+0x40]
  428a77:	test   rcx,rcx
  428a7a:	je     0x428a9c
  428a7c:	call   0x43f100
  428a81:	mov    QWORD PTR [rsp+0x48],0x0
  428a8a:	mov    QWORD PTR [rsp+0x50],0x0
  428a93:	mov    QWORD PTR [rsp+0x40],0x0
  428a9c:	mov    rax,QWORD PTR [r13+0x0]
  428aa0:	movzx  r14d,BYTE PTR [rax]
  428aa4:	cmp    r14b,0x53
  428aa8:	je     0x428ac0
  428aaa:	jle    0x428b40
  428ab0:	cmp    r14b,0x54
  428ab4:	je     0x428bd0
  428aba:	cmp    r14b,0x55
  428abe:	jne    0x428af0
  428ac0:	lea    edx,[r14-0x53]
  428ac4:	and    edx,0xfd
  428aca:	jne    0x428af0
  428acc:	lea    rdx,[rax+0x1]
  428ad0:	mov    QWORD PTR [r13+0x0],rdx
  428ad4:	movzx  eax,BYTE PTR [rax+0x1]
  428ad8:	cmp    al,0x4e
  428ada:	je     0x428cee
  428ae0:	cmp    al,0x50
  428ae2:	je     0x428d01
  428ae8:	cmp    al,0x4d
  428aea:	je     0x428f14
  428af0:	lea    rdx,[rip+0x245cf]        # 0x44d0c6
  428af7:	mov    rcx,rbp
  428afa:	call   0x425940
  428aff:	mov    rcx,QWORD PTR [rsp+0x40]
  428b04:	test   rcx,rcx
  428b07:	je     0x428b29
  428b09:	call   0x43f100
  428b0e:	mov    QWORD PTR [rsp+0x48],0x0
  428b17:	mov    QWORD PTR [rsp+0x50],0x0
  428b20:	mov    QWORD PTR [rsp+0x40],0x0
  428b29:	mov    rax,QWORD PTR [r13+0x0]
  428b2d:	cmp    BYTE PTR [rax],0x5f
  428b30:	je     0x428ccf
  428b36:	mov    DWORD PTR [r12],ebx
  428b3a:	jmp    0x42895a
  428b3f:	nop
  428b40:	cmp    r14b,0x41
  428b44:	jne    0x428af0
  428b46:	add    rax,0x1
  428b4a:	mov    rcx,r13
  428b4d:	mov    QWORD PTR [r13+0x0],rax
  428b51:	call   0x4251e0
  428b56:	test   eax,eax
  428b58:	mov    DWORD PTR [rsp+0x20],eax
  428b5c:	jle    0x428af0
  428b5e:	lea    rdx,[rip+0x24548]        # 0x44d0ad
  428b65:	mov    rcx,rsi
  428b68:	call   0x425940
  428b6d:	mov    r15d,DWORD PTR [rsp+0x20]
  428b72:	lea    ecx,[r15+0x1]
  428b76:	movsxd r15,r15d
  428b79:	movsxd rcx,ecx
  428b7c:	call   0x4385d0
  428b81:	mov    rdx,QWORD PTR [r13+0x0]
  428b85:	mov    r14,rax
  428b88:	mov    r8,r15
  428b8b:	mov    rcx,rax
  428b8e:	call   0x43f0a8
  428b93:	mov    BYTE PTR [r14+r15*1],0x0
  428b98:	mov    edx,DWORD PTR [r12]
  428b9c:	mov    rcx,r14
  428b9f:	call   0x426540
  428ba4:	test   rax,rax
  428ba7:	je     0x428ffa
  428bad:	cmp    BYTE PTR [rax],0x0
  428bb0:	jne    0x428fe0
  428bb6:	mov    rcx,rax
  428bb9:	call   0x43f100
  428bbe:	add    QWORD PTR [r13+0x0],r15
  428bc2:	mov    rcx,r14
  428bc5:	call   0x43f100
  428bca:	jmp    0x428bee
  428bcc:	nop    DWORD PTR [rax+0x0]
  428bd0:	add    rax,0x1
  428bd4:	mov    r8,rsi
  428bd7:	mov    rdx,r13
  428bda:	mov    QWORD PTR [r13+0x0],rax
  428bde:	mov    rcx,r12
  428be1:	call   0x427980
  428be6:	test   eax,eax
  428be8:	je     0x428af0
  428bee:	mov    r8,QWORD PTR [rsp+0x48]
  428bf3:	mov    rdx,rsi
  428bf6:	mov    rcx,rbp
  428bf9:	call   0x425a80
  428bfe:	mov    rax,QWORD PTR [r13+0x0]
  428c02:	movzx  eax,BYTE PTR [rax]
  428c05:	cmp    al,0x5f
  428c07:	je     0x428af0
  428c0d:	test   al,al
  428c0f:	je     0x428af0
  428c15:	lea    rdx,[rip+0x2491a]        # 0x44d536
  428c1c:	mov    rcx,rbp
  428c1f:	call   0x425940
  428c24:	jmp    0x428a72
  428c29:	nop    DWORD PTR [rax+0x0]
  428c30:	lea    rdx,[rip+0x2490f]        # 0x44d546
  428c37:	mov    rcx,r15
  428c3a:	call   0x43eff0
  428c3f:	test   rax,rax
  428c42:	mov    rbx,rax
  428c45:	mov    r8d,DWORD PTR [rsp+0x2c]
  428c4a:	jne    0x4288ec
  428c50:	lea    rdx,[rip+0x248e1]        # 0x44d538
  428c57:	mov    rcx,r15
  428c5a:	call   0x43eff0
  428c5f:	test   rax,rax
  428c62:	mov    rbx,rax
  428c65:	mov    r8d,DWORD PTR [rsp+0x2c]
  428c6a:	jne    0x4288ec
  428c70:	lea    rdx,[rip+0x248d6]        # 0x44d54d
  428c77:	mov    rcx,r15
  428c7a:	mov    DWORD PTR [rsp+0x2c],r8d
  428c7f:	call   0x43eff0
  428c84:	test   rax,rax
  428c87:	mov    rbx,rax
  428c8a:	mov    r8d,DWORD PTR [rsp+0x2c]
  428c8f:	je     0x428924
  428c95:	lea    rax,[rax+0x3]
  428c99:	jmp    0x4288f5
  428c9e:	xchg   ax,ax
  428ca0:	test   r8d,r8d
  428ca3:	je     0x428a19
  428ca9:	mov    rdx,r15
  428cac:	mov    rcx,rbp
  428caf:	call   0x425860
  428cb4:	mov    r15,QWORD PTR [r13+0x0]
  428cb8:	mov    ebx,DWORD PTR [r12]
  428cbc:	jmp    0x428a19
  428cc1:	mov    DWORD PTR [r12+0x44],0x0
  428cca:	jmp    0x42893a
  428ccf:	add    rax,0x1
  428cd3:	mov    QWORD PTR [r13+0x0],rax
  428cd7:	jmp    0x428b36
  428cdc:	mov    rax,QWORD PTR [rbp+0x8]
  428ce0:	sub    rax,QWORD PTR [rbp+0x0]
  428ce4:	mov    DWORD PTR [r12+0x44],eax
  428ce9:	jmp    0x428a4e
  428cee:	lea    rdx,[rip+0x243a0]        # 0x44d095
  428cf5:	mov    rcx,rsi
  428cf8:	call   0x425940
  428cfd:	mov    rdx,QWORD PTR [r13+0x0]
  428d01:	lea    rax,[rdx+0x1]
  428d05:	mov    QWORD PTR [r13+0x0],rax
  428d09:	movzx  edx,BYTE PTR [rdx+0x1]
  428d0d:	test   BYTE PTR [rdi+rdx*2],0x4
  428d11:	mov    rax,rdx
  428d14:	jne    0x428d4c
  428d16:	jmp    0x428af0
  428d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  428d20:	lea    rdx,[rip+0x30799]        # 0x4594c0
  428d27:	mov    rcx,rsi
  428d2a:	call   0x425940
  428d2f:	mov    rax,QWORD PTR [r13+0x0]
  428d33:	lea    rdx,[rax+0x1]
  428d37:	mov    QWORD PTR [r13+0x0],rdx
  428d3b:	movzx  edx,BYTE PTR [rax+0x1]
  428d3f:	test   BYTE PTR [rdi+rdx*2],0x4
  428d43:	mov    rax,rdx
  428d46:	je     0x428fc2
  428d4c:	test   al,al
  428d4e:	mov    BYTE PTR [rip+0x3076c],al        # 0x4594c0
  428d54:	je     0x428d2f
  428d56:	jmp    0x428d20
  428d58:	cmp    BYTE PTR [rdx],0x5f
  428d5b:	jne    0x4288bb
  428d61:	add    rdx,0x1
  428d65:	mov    QWORD PTR [rsp+0x50],0x0
  428d6e:	mov    QWORD PTR [rsp+0x48],0x0
  428d77:	mov    QWORD PTR [rsp+0x38],rdx
  428d7c:	mov    rdx,QWORD PTR [r13+0x0]
  428d80:	mov    QWORD PTR [rsp+0x40],0x0
  428d89:	sub    rbx,rdx
  428d8c:	test   ebx,ebx
  428d8e:	mov    r8,rbx
  428d91:	je     0x428d9b
  428d93:	mov    rcx,rbp
  428d96:	call   0x425860
  428d9b:	cmp    DWORD PTR [r12+0x44],0xffffffff
  428da1:	je     0x428fb0
  428da7:	mov    eax,DWORD PTR [r12]
  428dab:	lea    rdx,[rip+0x2430c]        # 0x44d0be
  428db2:	mov    rcx,rbp
  428db5:	mov    DWORD PTR [rsp+0x2c],eax
  428db9:	or     eax,0x1
  428dbc:	mov    DWORD PTR [r12],eax
  428dc0:	call   0x425940
  428dc5:	cmp    rdi,QWORD PTR [rsp+0x38]
  428dca:	jbe    0x428fa0
  428dd0:	lea    rbx,[rsp+0x40]
  428dd5:	lea    r15,[rsp+0x60]
  428dda:	jmp    0x428eab
  428ddf:	nop
  428de0:	lea    r9,[r14+0x1]
  428de4:	mov    r8,r15
  428de7:	mov    rdx,rsi
  428dea:	mov    rcx,r12
  428ded:	mov    QWORD PTR [rsp+0x38],r9
  428df2:	call   0x427980
  428df7:	test   eax,eax
  428df9:	je     0x428f40
  428dff:	lea    rdx,[rip+0x242a9]        # 0x44d0af
  428e06:	mov    rcx,rbx
  428e09:	call   0x425940
  428e0e:	mov    r8,QWORD PTR [rsp+0x68]
  428e13:	mov    rcx,rbx
  428e16:	mov    rdx,r15
  428e19:	call   0x425a80
  428e1e:	mov    rcx,QWORD PTR [rsp+0x60]
  428e23:	test   rcx,rcx
  428e26:	je     0x428e48
  428e28:	call   0x43f100
  428e2d:	mov    QWORD PTR [rsp+0x68],0x0
  428e36:	mov    QWORD PTR [rsp+0x70],0x0
  428e3f:	mov    QWORD PTR [rsp+0x60],0x0
  428e48:	lea    rdx,[rip+0x24264]        # 0x44d0b3
  428e4f:	mov    rcx,rbx
  428e52:	call   0x425940
  428e57:	mov    rax,QWORD PTR [rsp+0x38]
  428e5c:	cmp    BYTE PTR [rax],0x4c
  428e5f:	jne    0x428f40
  428e65:	add    rax,0x1
  428e69:	mov    QWORD PTR [rsp+0x38],rax
  428e6e:	mov    rdx,rbx
  428e71:	mov    rcx,rsi
  428e74:	call   0x4259c0
  428e79:	test   eax,eax
  428e7b:	je     0x428f40
  428e81:	mov    r8,QWORD PTR [rsp+0x48]
  428e86:	mov    rdx,rbx
  428e89:	mov    rcx,rbp
  428e8c:	call   0x425a80
  428e91:	lea    rdx,[rip+0x2469e]        # 0x44d536
  428e98:	mov    rcx,rbp
  428e9b:	call   0x425940
  428ea0:	cmp    rdi,QWORD PTR [rsp+0x38]
  428ea5:	jbe    0x428fa0
  428eab:	mov    rcx,QWORD PTR [rsp+0x40]
  428eb0:	test   rcx,rcx
  428eb3:	je     0x428ed5
  428eb5:	call   0x43f100
  428eba:	mov    QWORD PTR [rsp+0x48],0x0
  428ec3:	mov    QWORD PTR [rsp+0x50],0x0
  428ecc:	mov    QWORD PTR [rsp+0x40],0x0
  428ed5:	mov    r14,QWORD PTR [rsp+0x38]
  428eda:	movzx  eax,BYTE PTR [r14]
  428ede:	cmp    al,0x4c
  428ee0:	je     0x428f30
  428ee2:	cmp    al,0x58
  428ee4:	je     0x428de0
  428eea:	mov    r8,rbx
  428eed:	mov    rdx,rsi
  428ef0:	mov    rcx,r12
  428ef3:	call   0x427980
  428ef8:	test   eax,eax
  428efa:	je     0x428f40
  428efc:	cmp    r14,QWORD PTR [rsp+0x38]
  428f01:	jne    0x428e81
  428f07:	mov    eax,DWORD PTR [rsp+0x2c]
  428f0b:	mov    DWORD PTR [r12],eax
  428f0f:	jmp    0x42895a
  428f14:	lea    rdx,[rip+0x2460d]        # 0x44d528
  428f1b:	mov    rcx,rsi
  428f1e:	call   0x425940
  428f23:	add    QWORD PTR [r13+0x0],0x1
  428f28:	jmp    0x428bee
  428f2d:	nop    DWORD PTR [rax]
  428f30:	lea    r9,[r14+0x1]
  428f34:	mov    QWORD PTR [rsp+0x38],r9
  428f39:	jmp    0x428e6e
  428f3e:	xchg   ax,ax
  428f40:	mov    rcx,QWORD PTR [rsp+0x40]
  428f45:	test   rcx,rcx
  428f48:	je     0x428f6a
  428f4a:	call   0x43f100
  428f4f:	mov    QWORD PTR [rsp+0x48],0x0
  428f58:	mov    QWORD PTR [rsp+0x50],0x0
  428f61:	mov    QWORD PTR [rsp+0x40],0x0
  428f6a:	cmp    rdi,QWORD PTR [rsp+0x38]
  428f6f:	ja     0x428f76
  428f71:	sub    QWORD PTR [rbp+0x8],0x1
  428f76:	lea    rdx,[rip+0x24149]        # 0x44d0c6
  428f7d:	mov    rcx,rbp
  428f80:	call   0x425940
  428f85:	mov    eax,DWORD PTR [rsp+0x2c]
  428f89:	mov    rbx,QWORD PTR [r13+0x0]
  428f8d:	mov    DWORD PTR [r12],eax
  428f91:	jmp    0x42894e
  428f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428fa0:	mov    rcx,QWORD PTR [rsp+0x40]
  428fa5:	test   rcx,rcx
  428fa8:	jne    0x428f4a
  428faa:	jmp    0x428f71
  428fac:	nop    DWORD PTR [rax+0x0]
  428fb0:	mov    rax,QWORD PTR [rbp+0x8]
  428fb4:	sub    rax,QWORD PTR [rbp+0x0]
  428fb8:	mov    DWORD PTR [r12+0x44],eax
  428fbd:	jmp    0x428da7
  428fc2:	cmp    r14b,0x55
  428fc6:	jne    0x428bee
  428fcc:	lea    rdx,[rip+0x24561]        # 0x44d534
  428fd3:	mov    rcx,rsi
  428fd6:	call   0x425940
  428fdb:	jmp    0x428bee
  428fe0:	mov    rdx,rax
  428fe3:	mov    rcx,rsi
  428fe6:	mov    QWORD PTR [rsp+0x20],rax
  428feb:	call   0x425940
  428ff0:	mov    rax,QWORD PTR [rsp+0x20]
  428ff5:	jmp    0x428bb6
  428ffa:	mov    r8d,DWORD PTR [rsp+0x20]
  428fff:	mov    rdx,QWORD PTR [r13+0x0]
  429003:	mov    rcx,rsi
  429006:	call   0x425860
  42900b:	jmp    0x428bbe
  429010:	push   rbp
  429011:	push   rdi
  429012:	push   rsi
  429013:	push   rbx
  429014:	sub    rsp,0x28
  429018:	mov    rdi,rcx
  42901b:	mov    rcx,rdx
  42901e:	mov    rbx,rdx
  429021:	mov    rbp,r8
  429024:	call   0x4251e0
  429029:	cmp    eax,0xffffffff
  42902c:	mov    esi,eax
  42902e:	je     0x429071
  429030:	mov    rcx,QWORD PTR [rbx]
  429033:	call   0x43f028
  429038:	xor    edx,edx
  42903a:	cmp    esi,eax
  42903c:	jle    0x429050
  42903e:	mov    eax,edx
  429040:	add    rsp,0x28
  429044:	pop    rbx
  429045:	pop    rsi
  429046:	pop    rdi
  429047:	pop    rbp
  429048:	ret    
  429049:	nop    DWORD PTR [rax+0x0]
  429050:	mov    rdx,rbx
  429053:	mov    r9,rbp
  429056:	mov    r8d,esi
  429059:	mov    rcx,rdi
  42905c:	call   0x428820
  429061:	mov    edx,0x1
  429066:	mov    eax,edx
  429068:	add    rsp,0x28
  42906c:	pop    rbx
  42906d:	pop    rsi
  42906e:	pop    rdi
  42906f:	pop    rbp
  429070:	ret    
  429071:	xor    edx,edx
  429073:	mov    eax,edx
  429075:	add    rsp,0x28
  429079:	pop    rbx
  42907a:	pop    rsi
  42907b:	pop    rdi
  42907c:	pop    rbp
  42907d:	ret    
  42907e:	xchg   ax,ax
  429080:	push   r15
  429082:	push   r14
  429084:	push   r13
  429086:	push   r12
  429088:	push   rbp
  429089:	push   rdi
  42908a:	push   rsi
  42908b:	push   rbx
  42908c:	sub    rsp,0xd8
  429093:	lea    rsi,[rsp+0x60]
  429098:	mov    rbx,rcx
  42909b:	mov    r13,rdx
  42909e:	mov    r12d,r8d
  4290a1:	mov    rdi,rsi
  4290a4:	call   0x43f028
  4290a9:	mov    ecx,0xe
  4290ae:	mov    rbp,rax
  4290b1:	xor    eax,eax
  4290b3:	rep stos QWORD PTR es:[rdi],rax
  4290b6:	mov    BYTE PTR [r13+0x0],0x0
  4290bb:	movzx  eax,BYTE PTR [rbx]
  4290be:	mov    DWORD PTR [rsp+0x60],r12d
  4290c3:	cmp    al,0x5f
  4290c5:	je     0x429150
  4290cb:	cmp    ebp,0x2
  4290ce:	jle    0x429130
  4290d0:	cmp    al,0x6f
  4290d2:	je     0x4291d0
  4290d8:	cmp    ebp,0x4
  4290db:	jle    0x429130
  4290dd:	lea    rdx,[rip+0x2448a]        # 0x44d56e
  4290e4:	mov    r8d,0x4
  4290ea:	mov    rcx,rbx
  4290ed:	call   0x43f0b0
  4290f2:	test   eax,eax
  4290f4:	jne    0x429130
  4290f6:	movsx  edx,BYTE PTR [rbx+0x4]
  4290fa:	lea    rcx,[rip+0x1901f]        # 0x442120
  429101:	call   0x43f050
  429106:	test   rax,rax
  429109:	je     0x429130
  42910b:	lea    rdx,[rsp+0x38]
  429110:	lea    r8,[rsp+0x40]
  429115:	add    rbx,0x5
  429119:	mov    rcx,rsi
  42911c:	mov    QWORD PTR [rsp+0x38],rbx
  429121:	call   0x427980
  429126:	test   eax,eax
  429128:	jne    0x429165
  42912a:	nop    WORD PTR [rax+rax*1+0x0]
  429130:	xor    ebx,ebx
  429132:	mov    rcx,rsi
  429135:	call   0x425320
  42913a:	mov    eax,ebx
  42913c:	add    rsp,0xd8
  429143:	pop    rbx
  429144:	pop    rsi
  429145:	pop    rdi
  429146:	pop    rbp
  429147:	pop    r12
  429149:	pop    r13
  42914b:	pop    r14
  42914d:	pop    r15
  42914f:	ret    
  429150:	cmp    BYTE PTR [rbx+0x1],0x5f
  429154:	je     0x4292c0
  42915a:	cmp    ebp,0x2
  42915d:	jg     0x4290d8
  429163:	jmp    0x429130
  429165:	mov    rcx,r13
  429168:	movabs rdi,0x726f74617265706f
  429172:	call   0x43f028
  429177:	add    rax,r13
  42917a:	mov    QWORD PTR [rax],rdi
  42917d:	mov    edx,0x20
  429182:	mov    rcx,r13
  429185:	mov    WORD PTR [rax+0x8],dx
  429189:	mov    rbx,QWORD PTR [rsp+0x40]
  42918e:	mov    r8,QWORD PTR [rsp+0x48]
  429193:	mov    rdx,rbx
  429196:	sub    r8,rbx
  429199:	call   0x43f020
  42919e:	mov    rcx,rbx
  4291a1:	mov    ebx,0x1
  4291a6:	call   0x43f100
  4291ab:	mov    QWORD PTR [rsp+0x48],0x0
  4291b4:	mov    QWORD PTR [rsp+0x50],0x0
  4291bd:	mov    QWORD PTR [rsp+0x40],0x0
  4291c6:	jmp    0x429132
  4291cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4291d0:	cmp    BYTE PTR [rbx+0x1],0x70
  4291d4:	jne    0x4290d8
  4291da:	movsx  edx,BYTE PTR [rbx+0x2]
  4291de:	lea    rcx,[rip+0x18f3b]        # 0x442120
  4291e5:	call   0x43f050
  4291ea:	test   rax,rax
  4291ed:	je     0x4290d8
  4291f3:	cmp    ebp,0x9
  4291f6:	jle    0x429380
  4291fc:	lea    rcx,[rbx+0x3]
  429200:	lea    rdx,[rip+0x2435f]        # 0x44d566
  429207:	mov    r8d,0x7
  42920d:	call   0x43f0b0
  429212:	test   eax,eax
  429214:	jne    0x429380
  42921a:	lea    edi,[rbp-0xa]
  42921d:	lea    rax,[rip+0x24cdc]        # 0x44df00
  429224:	xor    ebp,ebp
  429226:	lea    r15,[rbx+0xa]
  42922a:	mov    QWORD PTR [rsp+0x28],rax
  42922f:	mov    r12,rax
  429232:	movsxd r14,edi
  429235:	jmp    0x429252
  429237:	nop    WORD PTR [rax+rax*1+0x0]
  429240:	add    rbp,0x1
  429244:	add    r12,0x18
  429248:	cmp    rbp,0x4f
  42924c:	je     0x429130
  429252:	mov    rbx,QWORD PTR [r12]
  429256:	mov    rcx,rbx
  429259:	call   0x43f028
  42925e:	cmp    edi,eax
  429260:	jne    0x429240
  429262:	mov    r8,r14
  429265:	mov    rdx,r15
  429268:	mov    rcx,rbx
  42926b:	call   0x43f0b0
  429270:	test   eax,eax
  429272:	jne    0x429240
  429274:	movabs rax,0x726f74617265706f
  42927e:	mov    rdx,QWORD PTR [rsp+0x28]
  429283:	lea    rcx,[r13+0x8]
  429287:	mov    QWORD PTR [r13+0x0],rax
  42928b:	lea    rax,[rbp+rbp*2+0x0]
  429290:	mov    BYTE PTR [r13+0x8],0x0
  429295:	mov    ebx,0x1
  42929a:	mov    rdx,QWORD PTR [rdx+rax*8+0x8]
  42929f:	call   0x43f040
  4292a4:	mov    rcx,r13
  4292a7:	call   0x43f028
  4292ac:	mov    ecx,0x3d
  4292b1:	mov    WORD PTR [r13+rax*1+0x0],cx
  4292b7:	jmp    0x429132
  4292bc:	nop    DWORD PTR [rax+0x0]
  4292c0:	movzx  eax,BYTE PTR [rbx+0x2]
  4292c4:	cmp    al,0x6f
  4292c6:	je     0x4293f1
  4292cc:	mov    rdx,QWORD PTR [rip+0x2830d]        # 0x4515e0
  4292d3:	movzx  ecx,al
  4292d6:	test   BYTE PTR [rdx+rcx*2],0x8
  4292da:	je     0x42915a
  4292e0:	movzx  ecx,BYTE PTR [rbx+0x3]
  4292e4:	test   BYTE PTR [rdx+rcx*2],0x8
  4292e8:	je     0x42915a
  4292ee:	cmp    BYTE PTR [rbx+0x4],0x0
  4292f2:	jne    0x42943b
  4292f8:	lea    rax,[rip+0x24c01]        # 0x44df00
  4292ff:	xor    edi,edi
  429301:	add    rbx,0x2
  429305:	mov    QWORD PTR [rsp+0x28],rax
  42930a:	mov    rbp,rax
  42930d:	jmp    0x429322
  42930f:	nop
  429310:	add    rdi,0x1
  429314:	add    rbp,0x18
  429318:	cmp    rdi,0x4f
  42931c:	je     0x429130
  429322:	mov    r12,QWORD PTR [rbp+0x0]
  429326:	mov    rcx,r12
  429329:	call   0x43f028
  42932e:	cmp    rax,0x2
  429332:	jne    0x429310
  429334:	mov    r8d,0x2
  42933a:	mov    rdx,rbx
  42933d:	mov    rcx,r12
  429340:	call   0x43f0b0
  429345:	test   eax,eax
  429347:	jne    0x429310
  429349:	movabs rax,0x726f74617265706f
  429353:	mov    BYTE PTR [r13+0x8],0x0
  429358:	mov    QWORD PTR [r13+0x0],rax
  42935c:	lea    rax,[rdi+rdi*2]
  429360:	mov    rdx,QWORD PTR [rsp+0x28]
  429365:	lea    rcx,[r13+0x8]
  429369:	mov    ebx,0x1
  42936e:	mov    rdx,QWORD PTR [rdx+rax*8+0x8]
  429373:	call   0x43f040
  429378:	jmp    0x429132
  42937d:	nop    DWORD PTR [rax]
  429380:	lea    edi,[rbp-0x3]
  429383:	lea    rax,[rip+0x24b76]        # 0x44df00
  42938a:	xor    ebp,ebp
  42938c:	add    rbx,0x3
  429390:	mov    QWORD PTR [rsp+0x28],rax
  429395:	mov    r12,rax
  429398:	movsxd r15,edi
  42939b:	jmp    0x4293b2
  42939d:	nop    DWORD PTR [rax]
  4293a0:	add    rbp,0x1
  4293a4:	add    r12,0x18
  4293a8:	cmp    rbp,0x4f
  4293ac:	je     0x429130
  4293b2:	mov    r14,QWORD PTR [r12]
  4293b6:	mov    rcx,r14
  4293b9:	call   0x43f028
  4293be:	cmp    edi,eax
  4293c0:	jne    0x4293a0
  4293c2:	mov    r8,r15
  4293c5:	mov    rdx,rbx
  4293c8:	mov    rcx,r14
  4293cb:	call   0x43f0b0
  4293d0:	test   eax,eax
  4293d2:	jne    0x4293a0
  4293d4:	movabs rax,0x726f74617265706f
  4293de:	mov    BYTE PTR [r13+0x8],0x0
  4293e3:	mov    QWORD PTR [r13+0x0],rax
  4293e7:	lea    rax,[rbp+rbp*2+0x0]
  4293ec:	jmp    0x429360
  4293f1:	cmp    BYTE PTR [rbx+0x3],0x70
  4293f5:	jne    0x4292cc
  4293fb:	lea    rdx,[rsp+0x38]
  429400:	lea    r8,[rsp+0x40]
  429405:	add    rbx,0x4
  429409:	mov    rcx,rsi
  42940c:	mov    QWORD PTR [rsp+0x38],rbx
  429411:	call   0x427980
  429416:	test   eax,eax
  429418:	je     0x429130
  42941e:	mov    rcx,r13
  429421:	call   0x43f028
  429426:	movabs rdx,0x726f74617265706f
  429430:	add    rax,r13
  429433:	mov    QWORD PTR [rax],rdx
  429436:	jmp    0x42917d
  42943b:	cmp    al,0x61
  42943d:	jne    0x429130
  429443:	cmp    BYTE PTR [rbx+0x5],0x0
  429447:	jne    0x429130
  42944d:	lea    rax,[rip+0x24aac]        # 0x44df00
  429454:	xor    edi,edi
  429456:	add    rbx,0x2
  42945a:	mov    QWORD PTR [rsp+0x28],rax
  42945f:	mov    rbp,rax
  429462:	jmp    0x429476
  429464:	add    rdi,0x1
  429468:	add    rbp,0x18
  42946c:	cmp    rdi,0x4f
  429470:	je     0x429130
  429476:	mov    r12,QWORD PTR [rbp+0x0]
  42947a:	mov    rcx,r12
  42947d:	call   0x43f028
  429482:	cmp    rax,0x3
  429486:	jne    0x429464
  429488:	mov    r8d,0x3
  42948e:	mov    rdx,rbx
  429491:	mov    rcx,r12
  429494:	call   0x43f0b0
  429499:	test   eax,eax
  42949b:	jne    0x429464
  42949d:	jmp    0x429349
  4294a2:	nop    DWORD PTR [rax+0x0]
  4294a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4294b0:	push   r13
  4294b2:	push   r12
  4294b4:	push   rbp
  4294b5:	push   rdi
  4294b6:	push   rsi
  4294b7:	push   rbx
  4294b8:	sub    rsp,0x58
  4294bc:	mov    r13d,0x1
  4294c2:	mov    rsi,rdx
  4294c5:	lea    rdx,[rip+0x240a7]        # 0x44d573
  4294cc:	mov    rbp,rcx
  4294cf:	mov    rcx,r8
  4294d2:	mov    rdi,r8
  4294d5:	call   0x425940
  4294da:	lea    rdx,[rsp+0x2c]
  4294df:	mov    rcx,rsi
  4294e2:	call   0x4252a0
  4294e7:	test   eax,eax
  4294e9:	je     0x42955a
  4294eb:	mov    eax,DWORD PTR [rsp+0x2c]
  4294ef:	xor    ebx,ebx
  4294f1:	lea    r12,[rsp+0x30]
  4294f6:	test   eax,eax
  4294f8:	jle    0x42955a
  4294fa:	mov    r9,QWORD PTR [rsi]
  4294fd:	movzx  eax,BYTE PTR [r9]
  429501:	cmp    al,0x5a
  429503:	je     0x4295d3
  429509:	nop    DWORD PTR [rax+0x0]
  429510:	cmp    al,0x7a
  429512:	je     0x429590
  429514:	mov    r8,r12
  429517:	mov    rdx,rsi
  42951a:	mov    rcx,rbp
  42951d:	call   0x427980
  429522:	test   eax,eax
  429524:	mov    r13d,eax
  429527:	jne    0x4295f0
  42952d:	mov    rcx,QWORD PTR [rsp+0x30]
  429532:	test   rcx,rcx
  429535:	je     0x429557
  429537:	call   0x43f100
  42953c:	mov    QWORD PTR [rsp+0x38],0x0
  429545:	mov    QWORD PTR [rsp+0x40],0x0
  42954e:	mov    QWORD PTR [rsp+0x30],0x0
  429557:	xor    r13d,r13d
  42955a:	mov    rax,QWORD PTR [rdi+0x8]
  42955e:	cmp    BYTE PTR [rax-0x1],0x3e
  429562:	je     0x429630
  429568:	lea    rdx,[rip+0x24015]        # 0x44d584
  42956f:	mov    rcx,rdi
  429572:	call   0x425940
  429577:	mov    eax,r13d
  42957a:	add    rsp,0x58
  42957e:	pop    rbx
  42957f:	pop    rsi
  429580:	pop    rdi
  429581:	pop    rbp
  429582:	pop    r12
  429584:	pop    r13
  429586:	ret    
  429587:	nop    WORD PTR [rax+rax*1+0x0]
  429590:	add    r9,0x1
  429594:	mov    r8,rdi
  429597:	mov    rdx,rsi
  42959a:	mov    QWORD PTR [rsi],r9
  42959d:	mov    rcx,rbp
  4295a0:	call   0x4294b0
  4295a5:	test   eax,eax
  4295a7:	mov    r13d,eax
  4295aa:	je     0x429557
  4295ac:	add    ebx,0x1
  4295af:	cmp    DWORD PTR [rsp+0x2c],ebx
  4295b3:	jle    0x42955a
  4295b5:	lea    rdx,[rip+0x23b04]        # 0x44d0c0
  4295bc:	mov    rcx,rdi
  4295bf:	call   0x425940
  4295c4:	mov    r9,QWORD PTR [rsi]
  4295c7:	movzx  eax,BYTE PTR [r9]
  4295cb:	cmp    al,0x5a
  4295cd:	jne    0x429510
  4295d3:	add    r9,0x1
  4295d7:	lea    rdx,[rip+0x23fa0]        # 0x44d57e
  4295de:	mov    rcx,rdi
  4295e1:	mov    QWORD PTR [rsi],r9
  4295e4:	call   0x425940
  4295e9:	jmp    0x4295ac
  4295eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4295f0:	mov    r8,QWORD PTR [rsp+0x38]
  4295f5:	mov    rcx,rdi
  4295f8:	mov    rdx,r12
  4295fb:	call   0x425a80
  429600:	mov    rcx,QWORD PTR [rsp+0x30]
  429605:	test   rcx,rcx
  429608:	je     0x4295ac
  42960a:	call   0x43f100
  42960f:	mov    QWORD PTR [rsp+0x38],0x0
  429618:	mov    QWORD PTR [rsp+0x40],0x0
  429621:	mov    QWORD PTR [rsp+0x30],0x0
  42962a:	jmp    0x4295ac
  42962c:	nop    DWORD PTR [rax+0x0]
  429630:	lea    rdx,[rip+0x23a7a]        # 0x44d0b1
  429637:	mov    rcx,rdi
  42963a:	call   0x425940
  42963f:	jmp    0x429568
  429644:	xchg   ax,ax
  429646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429650:	push   r12
  429652:	push   rbp
  429653:	push   rdi
  429654:	push   rsi
  429655:	push   rbx
  429656:	sub    rsp,0x20
  42965a:	mov    rdi,QWORD PTR [rdx]
  42965d:	mov    eax,DWORD PTR [rcx+0x68]
  429660:	mov    rbp,rcx
  429663:	mov    rbx,rdx
  429666:	mov    rsi,r8
  429669:	nop    DWORD PTR [rax+0x0]
  429670:	test   eax,eax
  429672:	mov    QWORD PTR [rsi+0x10],0x0
  42967a:	mov    QWORD PTR [rsi+0x8],0x0
  429682:	mov    QWORD PTR [rsi],0x0
  429689:	jg     0x4296f3
  42968b:	mov    rax,QWORD PTR [rbx]
  42968e:	cmp    BYTE PTR [rax],0x6e
  429691:	jne    0x429720
  429697:	add    rax,0x1
  42969b:	mov    rcx,rbx
  42969e:	mov    QWORD PTR [rbx],rax
  4296a1:	call   0x4251e0
  4296a6:	test   eax,eax
  4296a8:	mov    DWORD PTR [rbp+0x68],eax
  4296ab:	jle    0x4296e6
  4296ad:	cmp    eax,0x9
  4296b0:	mov    rdi,QWORD PTR [rbx]
  4296b3:	jle    0x429670
  4296b5:	cmp    BYTE PTR [rdi],0x5f
  4296b8:	jne    0x4296e6
  4296ba:	add    rdi,0x1
  4296be:	mov    QWORD PTR [rbx],rdi
  4296c1:	jmp    0x429670
  4296c3:	mov    ecx,0x18
  4296c8:	call   0x4385d0
  4296cd:	mov    QWORD PTR [rbp+0x60],rax
  4296d1:	mov    r12,rax
  4296d4:	mov    r8,r12
  4296d7:	mov    rdx,rbx
  4296da:	mov    rcx,rbp
  4296dd:	call   0x427980
  4296e2:	test   eax,eax
  4296e4:	jne    0x42975a
  4296e6:	xor    eax,eax
  4296e8:	add    rsp,0x20
  4296ec:	pop    rbx
  4296ed:	pop    rsi
  4296ee:	pop    rdi
  4296ef:	pop    rbp
  4296f0:	pop    r12
  4296f2:	ret    
  4296f3:	mov    rdx,QWORD PTR [rbp+0x60]
  4296f7:	sub    eax,0x1
  4296fa:	mov    DWORD PTR [rbp+0x68],eax
  4296fd:	test   rdx,rdx
  429700:	je     0x4296e6
  429702:	mov    r8,QWORD PTR [rdx+0x8]
  429706:	mov    rcx,rsi
  429709:	call   0x425a80
  42970e:	mov    eax,0x1
  429713:	add    rsp,0x20
  429717:	pop    rbx
  429718:	pop    rsi
  429719:	pop    rdi
  42971a:	pop    rbp
  42971b:	pop    r12
  42971d:	ret    
  42971e:	xchg   ax,ax
  429720:	mov    r12,QWORD PTR [rbp+0x60]
  429724:	test   r12,r12
  429727:	je     0x4296c3
  429729:	mov    rcx,QWORD PTR [r12]
  42972d:	test   rcx,rcx
  429730:	je     0x4296d4
  429732:	call   0x43f100
  429737:	mov    QWORD PTR [r12+0x8],0x0
  429740:	mov    QWORD PTR [r12+0x10],0x0
  429749:	mov    QWORD PTR [r12],0x0
  429751:	mov    r12,QWORD PTR [rbp+0x60]
  429755:	jmp    0x4296d4
  42975a:	mov    rdx,QWORD PTR [rbp+0x60]
  42975e:	mov    rcx,rsi
  429761:	mov    r8,QWORD PTR [rdx+0x8]
  429765:	call   0x425a80
  42976a:	mov    r8,QWORD PTR [rbx]
  42976d:	mov    rdx,rdi
  429770:	mov    rcx,rbp
  429773:	sub    r8d,edi
  429776:	call   0x425dd0
  42977b:	mov    eax,0x1
  429780:	add    rsp,0x20
  429784:	pop    rbx
  429785:	pop    rsi
  429786:	pop    rdi
  429787:	pop    rbp
  429788:	pop    r12
  42978a:	ret    
  42978b:	nop    DWORD PTR [rax+rax*1+0x0]
  429790:	push   r15
  429792:	push   r14
  429794:	push   r13
  429796:	push   r12
  429798:	push   rbp
  429799:	push   rdi
  42979a:	push   rsi
  42979b:	push   rbx
  42979c:	sub    rsp,0x58
  4297a0:	test   BYTE PTR [rcx],0x1
  4297a3:	mov    rbx,rcx
  4297a6:	mov    r13,rdx
  4297a9:	mov    r12,r8
  4297ac:	jne    0x429a38
  4297b2:	mov    rdx,QWORD PTR [r13+0x0]
  4297b6:	movzx  eax,BYTE PTR [rdx]
  4297b9:	xor    esi,esi
  4297bb:	test   al,al
  4297bd:	lea    rdi,[rsp+0x30]
  4297c2:	setne  r8b
  4297c6:	cmp    al,0x5f
  4297c8:	lea    rbp,[rsp+0x28]
  4297cd:	setne  cl
  4297d0:	lea    r14,[rsp+0x24]
  4297d5:	lea    r15,[rsp+0x20]
  4297da:	test   r8b,cl
  4297dd:	je     0x429871
  4297e3:	cmp    al,0x65
  4297e5:	je     0x429871
  4297eb:	cmp    al,0x54
  4297ed:	je     0x4298a2
  4297f3:	cmp    al,0x4e
  4297f5:	je     0x4298a2
  4297fb:	test   esi,esi
  4297fd:	je     0x429808
  4297ff:	test   BYTE PTR [rbx],0x1
  429802:	jne    0x429a6a
  429808:	mov    r8,rdi
  42980b:	mov    rdx,r13
  42980e:	mov    rcx,rbx
  429811:	call   0x429650
  429816:	test   eax,eax
  429818:	je     0x429a10
  42981e:	test   BYTE PTR [rbx],0x1
  429821:	jne    0x429a23
  429827:	mov    rcx,QWORD PTR [rsp+0x30]
  42982c:	mov    esi,0x1
  429831:	test   rcx,rcx
  429834:	je     0x429856
  429836:	call   0x43f100
  42983b:	mov    QWORD PTR [rsp+0x38],0x0
  429844:	mov    QWORD PTR [rsp+0x40],0x0
  42984d:	mov    QWORD PTR [rsp+0x30],0x0
  429856:	mov    rdx,QWORD PTR [r13+0x0]
  42985a:	movzx  eax,BYTE PTR [rdx]
  42985d:	test   al,al
  42985f:	setne  r8b
  429863:	cmp    al,0x5f
  429865:	setne  cl
  429868:	test   r8b,cl
  42986b:	jne    0x4297e3
  429871:	mov    ecx,DWORD PTR [rbx+0x68]
  429874:	test   ecx,ecx
  429876:	jg     0x4297eb
  42987c:	cmp    al,0x65
  42987e:	je     0x429a7e
  429884:	test   BYTE PTR [rbx],0x1
  429887:	je     0x429898
  429889:	lea    rdx,[rip+0x23823]        # 0x44d0b3
  429890:	mov    rcx,r12
  429893:	call   0x425940
  429898:	mov    eax,0x1
  42989d:	jmp    0x429a12
  4298a2:	lea    rax,[rdx+0x1]
  4298a6:	mov    QWORD PTR [r13+0x0],rax
  4298aa:	cmp    BYTE PTR [rdx],0x4e
  4298ad:	je     0x4299f4
  4298b3:	mov    DWORD PTR [rsp+0x20],0x1
  4298bb:	test   DWORD PTR [rbx],0x3800
  4298c1:	je     0x4298cd
  4298c3:	cmp    DWORD PTR [rbx+0x30],0x9
  4298c7:	jg     0x4299b4
  4298cd:	mov    rdx,r14
  4298d0:	mov    rcx,r13
  4298d3:	call   0x4252a0
  4298d8:	test   eax,eax
  4298da:	je     0x429a10
  4298e0:	test   DWORD PTR [rbx],0x3c00
  4298e6:	mov    eax,DWORD PTR [rsp+0x24]
  4298ea:	jne    0x4299d0
  4298f0:	test   eax,eax
  4298f2:	js     0x429a10
  4298f8:	cmp    DWORD PTR [rbx+0x30],eax
  4298fb:	jg     0x429911
  4298fd:	jmp    0x429a10
  429902:	mov    rcx,QWORD PTR [rsp+0x30]
  429907:	mov    esi,0x1
  42990c:	test   rcx,rcx
  42990f:	jne    0x429977
  429911:	mov    r8d,DWORD PTR [rbx+0x68]
  429915:	test   r8d,r8d
  429918:	jle    0x4299a4
  42991e:	movsxd rdx,DWORD PTR [rsp+0x24]
  429923:	mov    rax,QWORD PTR [rbx+0x8]
  429927:	test   esi,esi
  429929:	mov    rax,QWORD PTR [rax+rdx*8]
  42992d:	mov    QWORD PTR [rsp+0x28],rax
  429932:	je     0x42993d
  429934:	test   BYTE PTR [rbx],0x1
  429937:	jne    0x4299e0
  42993d:	mov    r8,rdi
  429940:	mov    rdx,rbp
  429943:	mov    rcx,rbx
  429946:	call   0x429650
  42994b:	test   eax,eax
  42994d:	je     0x429a10
  429953:	test   BYTE PTR [rbx],0x1
  429956:	je     0x429902
  429958:	mov    r8,QWORD PTR [rsp+0x38]
  42995d:	mov    rcx,r12
  429960:	mov    rdx,rdi
  429963:	mov    esi,0x1
  429968:	call   0x425a80
  42996d:	mov    rcx,QWORD PTR [rsp+0x30]
  429972:	test   rcx,rcx
  429975:	je     0x429911
  429977:	call   0x43f100
  42997c:	mov    r8d,DWORD PTR [rbx+0x68]
  429980:	mov    QWORD PTR [rsp+0x38],0x0
  429989:	mov    QWORD PTR [rsp+0x40],0x0
  429992:	mov    QWORD PTR [rsp+0x30],0x0
  42999b:	test   r8d,r8d
  42999e:	jg     0x42991e
  4299a4:	sub    DWORD PTR [rsp+0x20],0x1
  4299a9:	jns    0x42991e
  4299af:	jmp    0x429856
  4299b4:	mov    rcx,r13
  4299b7:	call   0x4251e0
  4299bc:	test   eax,eax
  4299be:	mov    DWORD PTR [rsp+0x24],eax
  4299c2:	jle    0x429a10
  4299c4:	test   DWORD PTR [rbx],0x3c00
  4299ca:	je     0x4298f8
  4299d0:	sub    eax,0x1
  4299d3:	mov    DWORD PTR [rsp+0x24],eax
  4299d7:	jmp    0x4298f0
  4299dc:	nop    DWORD PTR [rax+0x0]
  4299e0:	lea    rdx,[rip+0x236d9]        # 0x44d0c0
  4299e7:	mov    rcx,r12
  4299ea:	call   0x425940
  4299ef:	jmp    0x42993d
  4299f4:	mov    rdx,r15
  4299f7:	mov    rcx,r13
  4299fa:	call   0x4252a0
  4299ff:	test   eax,eax
  429a01:	jne    0x4298bb
  429a07:	nop    WORD PTR [rax+rax*1+0x0]
  429a10:	xor    eax,eax
  429a12:	add    rsp,0x58
  429a16:	pop    rbx
  429a17:	pop    rsi
  429a18:	pop    rdi
  429a19:	pop    rbp
  429a1a:	pop    r12
  429a1c:	pop    r13
  429a1e:	pop    r14
  429a20:	pop    r15
  429a22:	ret    
  429a23:	mov    r8,QWORD PTR [rsp+0x38]
  429a28:	mov    rdx,rdi
  429a2b:	mov    rcx,r12
  429a2e:	call   0x425a80
  429a33:	jmp    0x429827
  429a38:	lea    rdx,[rip+0x23670]        # 0x44d0af
  429a3f:	mov    rcx,r8
  429a42:	call   0x425940
  429a47:	mov    rdx,QWORD PTR [r13+0x0]
  429a4b:	movzx  eax,BYTE PTR [rdx]
  429a4e:	test   al,al
  429a50:	jne    0x4297b9
  429a56:	lea    rdx,[rip+0x23690]        # 0x44d0ed
  429a5d:	mov    rcx,r12
  429a60:	call   0x425940
  429a65:	jmp    0x4297b2
  429a6a:	lea    rdx,[rip+0x2364f]        # 0x44d0c0
  429a71:	mov    rcx,r12
  429a74:	call   0x425940
  429a79:	jmp    0x429808
  429a7e:	add    rdx,0x1
  429a82:	test   BYTE PTR [rbx],0x1
  429a85:	mov    QWORD PTR [r13+0x0],rdx
  429a89:	je     0x429898
  429a8f:	test   esi,esi
  429a91:	jne    0x429aa7
  429a93:	lea    rdx,[rip+0x23af2]        # 0x44d58c
  429a9a:	mov    rcx,r12
  429a9d:	call   0x425940
  429aa2:	jmp    0x429884
  429aa7:	lea    rdx,[rip+0x23a88]        # 0x44d536
  429aae:	mov    rcx,r12
  429ab1:	call   0x425940
  429ab6:	jmp    0x429a93
  429ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  429ac0:	push   r12
  429ac2:	push   rbp
  429ac3:	push   rdi
  429ac4:	push   rsi
  429ac5:	push   rbx
  429ac6:	sub    rsp,0x20
  429aca:	add    DWORD PTR [rcx+0x5c],0x1
  429ace:	mov    r12,QWORD PTR [rcx+0x60]
  429ad2:	mov    rbx,rcx
  429ad5:	mov    ebp,DWORD PTR [rcx+0x68]
  429ad8:	mov    QWORD PTR [rcx+0x60],0x0
  429ae0:	mov    DWORD PTR [rcx+0x68],0x0
  429ae7:	call   0x429790
  429aec:	mov    rsi,QWORD PTR [rbx+0x60]
  429af0:	mov    edi,eax
  429af2:	test   rsi,rsi
  429af5:	je     0x429b27
  429af7:	mov    rcx,QWORD PTR [rsi]
  429afa:	test   rcx,rcx
  429afd:	je     0x429b1f
  429aff:	call   0x43f100
  429b04:	mov    QWORD PTR [rsi+0x8],0x0
  429b0c:	mov    QWORD PTR [rsi+0x10],0x0
  429b14:	mov    QWORD PTR [rsi],0x0
  429b1b:	mov    rsi,QWORD PTR [rbx+0x60]
  429b1f:	mov    rcx,rsi
  429b22:	call   0x43f100
  429b27:	sub    DWORD PTR [rbx+0x5c],0x1
  429b2b:	mov    eax,edi
  429b2d:	mov    QWORD PTR [rbx+0x60],r12
  429b31:	mov    DWORD PTR [rbx+0x68],ebp
  429b34:	add    rsp,0x20
  429b38:	pop    rbx
  429b39:	pop    rsi
  429b3a:	pop    rdi
  429b3b:	pop    rbp
  429b3c:	pop    r12
  429b3e:	ret    
  429b3f:	nop
  429b40:	push   r15
  429b42:	push   r14
  429b44:	push   r13
  429b46:	push   r12
  429b48:	push   rbp
  429b49:	push   rdi
  429b4a:	push   rsi
  429b4b:	push   rbx
  429b4c:	sub    rsp,0x68
  429b50:	mov    rbp,rdx
  429b53:	mov    rdx,QWORD PTR [rdx]
  429b56:	mov    rbx,r8
  429b59:	mov    r8,r9
  429b5c:	mov    r12,rcx
  429b5f:	mov    rdi,r9
  429b62:	sub    r8,rdx
  429b65:	test   r8d,r8d
  429b68:	jne    0x429d70
  429b6e:	mov    edx,0x1
  429b73:	mov    rcx,rbx
  429b76:	call   0x4257c0
  429b7b:	mov    rax,QWORD PTR [rbx+0x8]
  429b7f:	mov    BYTE PTR [rax],0x0
  429b82:	test   DWORD PTR [r12],0x1000
  429b8a:	lea    rax,[rdi+0x2]
  429b8e:	mov    QWORD PTR [rbp+0x0],rax
  429b92:	je     0x429b9e
  429b94:	cmp    BYTE PTR [rdi+0x2],0x58
  429b98:	je     0x429dc0
  429b9e:	test   DWORD PTR [r12],0x3c00
  429ba6:	mov    r15,QWORD PTR [rbx]
  429ba9:	je     0x429bd9
  429bab:	lea    rdi,[rip+0x239de]        # 0x44d590
  429bb2:	mov    ecx,0x5
  429bb7:	mov    rsi,r15
  429bba:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  429bbc:	je     0x429d80
  429bc2:	lea    rdi,[rip+0x239cc]        # 0x44d595
  429bc9:	mov    ecx,0x5
  429bce:	mov    rsi,r15
  429bd1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  429bd3:	je     0x429da2
  429bd9:	mov    rdi,QWORD PTR [rbx+0x8]
  429bdd:	movzx  r13d,BYTE PTR [r15]
  429be1:	mov    rbp,rdi
  429be4:	sub    rbp,r15
  429be7:	cmp    rbp,0x2
  429beb:	jle    0x429c90
  429bf1:	cmp    r13b,0x6f
  429bf5:	je     0x429df0
  429bfb:	cmp    rbp,0x4
  429bff:	jle    0x429c90
  429c05:	lea    rdx,[rip+0x23962]        # 0x44d56e
  429c0c:	mov    r8d,0x4
  429c12:	mov    rcx,r15
  429c15:	call   0x43f0b0
  429c1a:	test   eax,eax
  429c1c:	jne    0x429c90
  429c1e:	movsx  edx,BYTE PTR [r15+0x4]
  429c23:	lea    rcx,[rip+0x184f6]        # 0x442120
  429c2a:	call   0x43f050
  429c2f:	test   rax,rax
  429c32:	lea    r9,[r15+0x5]
  429c36:	je     0x429c90
  429c38:	lea    rsi,[rsp+0x40]
  429c3d:	lea    rdx,[rsp+0x38]
  429c42:	mov    rcx,r12
  429c45:	mov    QWORD PTR [rsp+0x38],r9
  429c4a:	mov    r8,rsi
  429c4d:	call   0x427980
  429c52:	test   eax,eax
  429c54:	jne    0x429e30
  429c5a:	mov    r15,QWORD PTR [rbx]
  429c5d:	mov    rdi,QWORD PTR [rbx+0x8]
  429c61:	cmp    r15,rdi
  429c64:	je     0x429de0
  429c6a:	sub    rdi,r15
  429c6d:	mov    eax,0x1
  429c72:	cmp    rdi,0x1
  429c76:	je     0x429d94
  429c7c:	add    rsp,0x68
  429c80:	pop    rbx
  429c81:	pop    rsi
  429c82:	pop    rdi
  429c83:	pop    rbp
  429c84:	pop    r12
  429c86:	pop    r13
  429c88:	pop    r14
  429c8a:	pop    r15
  429c8c:	ret    
  429c8d:	nop    DWORD PTR [rax]
  429c90:	cmp    r13b,0x5f
  429c94:	jne    0x429c61
  429c96:	cmp    BYTE PTR [r15+0x1],0x5f
  429c9b:	jne    0x429c61
  429c9d:	movzx  eax,BYTE PTR [r15+0x2]
  429ca2:	cmp    al,0x6f
  429ca4:	je     0x42a005
  429caa:	mov    rdx,QWORD PTR [rip+0x2792f]        # 0x4515e0
  429cb1:	movzx  ecx,al
  429cb4:	test   BYTE PTR [rdx+rcx*2],0x8
  429cb8:	je     0x429c61
  429cba:	movzx  ecx,BYTE PTR [r15+0x3]
  429cbf:	test   BYTE PTR [rdx+rcx*2],0x8
  429cc3:	je     0x429c61
  429cc5:	cmp    BYTE PTR [r15+0x4],0x0
  429cca:	jne    0x42a019
  429cd0:	lea    rax,[rip+0x24229]        # 0x44df00
  429cd7:	xor    ebp,ebp
  429cd9:	lea    r13,[r15+0x2]
  429cdd:	mov    QWORD PTR [rsp+0x28],rax
  429ce2:	mov    r12,rax
  429ce5:	jmp    0x429d02
  429ce7:	nop    WORD PTR [rax+rax*1+0x0]
  429cf0:	add    rbp,0x1
  429cf4:	add    r12,0x18
  429cf8:	cmp    rbp,0x4f
  429cfc:	je     0x429c61
  429d02:	mov    rsi,QWORD PTR [r12]
  429d06:	mov    rcx,rsi
  429d09:	call   0x43f028
  429d0e:	cmp    rax,0x2
  429d12:	jne    0x429cf0
  429d14:	mov    r8d,0x2
  429d1a:	mov    rdx,r13
  429d1d:	mov    rcx,rsi
  429d20:	call   0x43f0b0
  429d25:	test   eax,eax
  429d27:	jne    0x429cf0
  429d29:	lea    rdx,[rip+0x2386a]        # 0x44d59a
  429d30:	mov    QWORD PTR [rbx+0x8],r15
  429d34:	mov    rcx,rbx
  429d37:	call   0x425940
  429d3c:	mov    rsi,QWORD PTR [rsp+0x28]
  429d41:	lea    rax,[rbp+rbp*2+0x0]
  429d46:	mov    rdx,QWORD PTR [rsi+rax*8+0x8]
  429d4b:	test   rdx,rdx
  429d4e:	je     0x429c5a
  429d54:	cmp    BYTE PTR [rdx],0x0
  429d57:	je     0x429c5a
  429d5d:	mov    rcx,rbx
  429d60:	call   0x425940
  429d65:	jmp    0x429c5a
  429d6a:	nop    WORD PTR [rax+rax*1+0x0]
  429d70:	mov    rcx,rbx
  429d73:	call   0x425860
  429d78:	jmp    0x429b6e
  429d7d:	nop    DWORD PTR [rax]
  429d80:	add    DWORD PTR [r12+0x38],0x1
  429d86:	mov    eax,0x1
  429d8b:	mov    QWORD PTR [rbx+0x8],r15
  429d8f:	jmp    0x429c7c
  429d94:	xor    eax,eax
  429d96:	cmp    BYTE PTR [r15],0x2e
  429d9a:	setne  al
  429d9d:	jmp    0x429c7c
  429da2:	add    DWORD PTR [r12+0x3c],0x1
  429da8:	mov    eax,0x1
  429dad:	mov    QWORD PTR [rbx+0x8],r15
  429db1:	jmp    0x429c7c
  429db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429dc0:	mov    r9,rbx
  429dc3:	xor    r8d,r8d
  429dc6:	mov    rdx,rbp
  429dc9:	mov    rcx,r12
  429dcc:	call   0x428820
  429dd1:	jmp    0x429b9e
  429dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429de0:	mov    eax,0x1
  429de5:	jmp    0x429c7c
  429dea:	nop    WORD PTR [rax+rax*1+0x0]
  429df0:	cmp    BYTE PTR [r15+0x1],0x70
  429df5:	je     0x429e90
  429dfb:	cmp    rbp,0x4
  429dff:	jle    0x429c61
  429e05:	lea    rdx,[rip+0x23762]        # 0x44d56e
  429e0c:	mov    r8d,0x4
  429e12:	mov    rcx,r15
  429e15:	call   0x43f0b0
  429e1a:	test   eax,eax
  429e1c:	je     0x429c1e
  429e22:	jmp    0x429c61
  429e27:	nop    WORD PTR [rax+rax*1+0x0]
  429e30:	mov    rax,QWORD PTR [rbx]
  429e33:	lea    rdx,[rip+0x2376b]        # 0x44d5a5
  429e3a:	mov    rcx,rbx
  429e3d:	mov    QWORD PTR [rbx+0x8],rax
  429e41:	call   0x425940
  429e46:	mov    r8,QWORD PTR [rsp+0x48]
  429e4b:	mov    rcx,rbx
  429e4e:	mov    rdx,rsi
  429e51:	call   0x425a80
  429e56:	mov    rcx,QWORD PTR [rsp+0x40]
  429e5b:	test   rcx,rcx
  429e5e:	je     0x429c5a
  429e64:	call   0x43f100
  429e69:	mov    QWORD PTR [rsp+0x48],0x0
  429e72:	mov    QWORD PTR [rsp+0x50],0x0
  429e7b:	mov    QWORD PTR [rsp+0x40],0x0
  429e84:	mov    r15,QWORD PTR [rbx]
  429e87:	mov    rdi,QWORD PTR [rbx+0x8]
  429e8b:	jmp    0x429c61
  429e90:	movsx  edx,BYTE PTR [r15+0x2]
  429e95:	lea    rcx,[rip+0x18284]        # 0x442120
  429e9c:	call   0x43f050
  429ea1:	test   rax,rax
  429ea4:	je     0x429dfb
  429eaa:	cmp    rbp,0x9
  429eae:	jle    0x429f75
  429eb4:	lea    rcx,[r15+0x3]
  429eb8:	lea    rdx,[rip+0x236a7]        # 0x44d566
  429ebf:	mov    r8d,0x7
  429ec5:	call   0x43f0b0
  429eca:	test   eax,eax
  429ecc:	jne    0x429f75
  429ed2:	lea    rax,[rip+0x24027]        # 0x44df00
  429ed9:	sub    ebp,0xa
  429edc:	xor    r12d,r12d
  429edf:	lea    rsi,[r15+0xa]
  429ee3:	mov    QWORD PTR [rsp+0x28],rax
  429ee8:	mov    r13,rax
  429eeb:	movsxd rax,ebp
  429eee:	mov    QWORD PTR [rsp+0x20],rax
  429ef3:	jmp    0x429f07
  429ef5:	add    r12,0x1
  429ef9:	add    r13,0x18
  429efd:	cmp    r12,0x4f
  429f01:	je     0x429c61
  429f07:	mov    r14,QWORD PTR [r13+0x0]
  429f0b:	mov    rcx,r14
  429f0e:	call   0x43f028
  429f13:	cmp    ebp,eax
  429f15:	jne    0x429ef5
  429f17:	mov    r8,QWORD PTR [rsp+0x20]
  429f1c:	mov    rdx,rsi
  429f1f:	mov    rcx,r14
  429f22:	call   0x43f0b0
  429f27:	test   eax,eax
  429f29:	jne    0x429ef5
  429f2b:	lea    rdx,[rip+0x23668]        # 0x44d59a
  429f32:	mov    QWORD PTR [rbx+0x8],r15
  429f36:	mov    rcx,rbx
  429f39:	call   0x425940
  429f3e:	mov    rsi,QWORD PTR [rsp+0x28]
  429f43:	lea    rax,[r12+r12*2]
  429f47:	mov    rdx,QWORD PTR [rsi+rax*8+0x8]
  429f4c:	test   rdx,rdx
  429f4f:	je     0x429f5a
  429f51:	cmp    BYTE PTR [rdx],0x0
  429f54:	jne    0x42a0ab
  429f5a:	lea    rdx,[rip+0x23642]        # 0x44d5a3
  429f61:	mov    rcx,rbx
  429f64:	call   0x425940
  429f69:	mov    r15,QWORD PTR [rbx]
  429f6c:	mov    rdi,QWORD PTR [rbx+0x8]
  429f70:	jmp    0x429c61
  429f75:	lea    rax,[rip+0x23f84]        # 0x44df00
  429f7c:	sub    ebp,0x3
  429f7f:	xor    r12d,r12d
  429f82:	lea    rsi,[r15+0x3]
  429f86:	mov    QWORD PTR [rsp+0x28],rax
  429f8b:	mov    r13,rax
  429f8e:	movsxd rax,ebp
  429f91:	mov    QWORD PTR [rsp+0x20],rax
  429f96:	jmp    0x429fb2
  429f98:	nop    DWORD PTR [rax+rax*1+0x0]
  429fa0:	add    r12,0x1
  429fa4:	add    r13,0x18
  429fa8:	cmp    r12,0x4f
  429fac:	je     0x429c61
  429fb2:	mov    r14,QWORD PTR [r13+0x0]
  429fb6:	mov    rcx,r14
  429fb9:	call   0x43f028
  429fbe:	cmp    ebp,eax
  429fc0:	jne    0x429fa0
  429fc2:	mov    r8,QWORD PTR [rsp+0x20]
  429fc7:	mov    rdx,rsi
  429fca:	mov    rcx,r14
  429fcd:	call   0x43f0b0
  429fd2:	test   eax,eax
  429fd4:	jne    0x429fa0
  429fd6:	lea    rdx,[rip+0x235bd]        # 0x44d59a
  429fdd:	mov    QWORD PTR [rbx+0x8],r15
  429fe1:	mov    rcx,rbx
  429fe4:	call   0x425940
  429fe9:	mov    rsi,QWORD PTR [rsp+0x28]
  429fee:	lea    rax,[r12+r12*2]
  429ff2:	mov    rdx,QWORD PTR [rsi+rax*8+0x8]
  429ff7:	test   rdx,rdx
  429ffa:	jne    0x429d54
  42a000:	jmp    0x429c5a
  42a005:	cmp    BYTE PTR [r15+0x3],0x70
  42a00a:	jne    0x429caa
  42a010:	lea    r9,[r15+0x4]
  42a014:	jmp    0x429c38
  42a019:	cmp    al,0x61
  42a01b:	jne    0x429c61
  42a021:	cmp    BYTE PTR [r15+0x5],0x0
  42a026:	jne    0x429c61
  42a02c:	lea    rax,[rip+0x23ecd]        # 0x44df00
  42a033:	xor    esi,esi
  42a035:	lea    r13,[r15+0x2]
  42a039:	mov    QWORD PTR [rsp+0x28],rax
  42a03e:	mov    rbp,rax
  42a041:	jmp    0x42a055
  42a043:	add    rsi,0x1
  42a047:	add    rbp,0x18
  42a04b:	cmp    rsi,0x4f
  42a04f:	je     0x429c61
  42a055:	mov    r12,QWORD PTR [rbp+0x0]
  42a059:	mov    rcx,r12
  42a05c:	call   0x43f028
  42a061:	cmp    rax,0x3
  42a065:	jne    0x42a043
  42a067:	mov    r8d,0x3
  42a06d:	mov    rdx,r13
  42a070:	mov    rcx,r12
  42a073:	call   0x43f0b0
  42a078:	test   eax,eax
  42a07a:	jne    0x42a043
  42a07c:	lea    rdx,[rip+0x23517]        # 0x44d59a
  42a083:	mov    QWORD PTR [rbx+0x8],r15
  42a087:	mov    rcx,rbx
  42a08a:	imul   rsi,rsi,0x18
  42a08e:	call   0x425940
  42a093:	mov    rax,QWORD PTR [rsp+0x28]
  42a098:	mov    rdx,QWORD PTR [rax+rsi*1+0x8]
  42a09d:	test   rdx,rdx
  42a0a0:	jne    0x429d54
  42a0a6:	jmp    0x429c5a
  42a0ab:	mov    rcx,rbx
  42a0ae:	call   0x425940
  42a0b3:	jmp    0x429f5a
  42a0b8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a0c0:	push   r15
  42a0c2:	push   r14
  42a0c4:	push   r13
  42a0c6:	push   r12
  42a0c8:	push   rbp
  42a0c9:	push   rdi
  42a0ca:	push   rsi
  42a0cb:	push   rbx
  42a0cc:	sub    rsp,0xc8
  42a0d3:	mov    r14d,0x1
  42a0d9:	xor    edi,edi
  42a0db:	xor    ebp,ebp
  42a0dd:	lea    rax,[rcx+0x30]
  42a0e1:	mov    rsi,rdx
  42a0e4:	mov    r15d,r14d
  42a0e7:	mov    r14,QWORD PTR [rsi]
  42a0ea:	mov    rbx,rcx
  42a0ed:	xor    r13d,r13d
  42a0f0:	mov    QWORD PTR [rsp+0x38],rax
  42a0f5:	lea    rax,[rcx+0x8]
  42a0f9:	mov    r12,r8
  42a0fc:	mov    DWORD PTR [rsp+0x4c],0x0
  42a104:	mov    QWORD PTR [rsp+0x40],rax
  42a109:	lea    rax,[rsp+0xa0]
  42a111:	movsx  ecx,BYTE PTR [r14]
  42a115:	mov    QWORD PTR [rsp+0x30],rax
  42a11a:	lea    rax,[rsp+0x60]
  42a11f:	mov    QWORD PTR [rsp+0x50],rax
  42a124:	lea    rax,[rsp+0x80]
  42a12c:	test   cl,cl
  42a12e:	mov    QWORD PTR [rsp+0x58],rax
  42a133:	je     0x42a2e9
  42a139:	nop    DWORD PTR [rax+0x0]
  42a140:	lea    edx,[rcx-0x30]
  42a143:	cmp    dl,0x45
  42a146:	ja     0x42a695
  42a14c:	lea    rax,[rip+0x23465]        # 0x44d5b8
  42a153:	movzx  edx,dl
  42a156:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42a15a:	add    rax,rdx
  42a15d:	jmp    rax
  42a15f:	nop
  42a160:	mov    r9,QWORD PTR [rsp+0x50]
  42a165:	mov    r8,QWORD PTR [rsp+0x58]
  42a16a:	test   rdi,rdi
  42a16d:	mov    DWORD PTR [rsp+0x28],0x1
  42a175:	mov    DWORD PTR [rsp+0x20],0x1
  42a17d:	mov    rdx,rsi
  42a180:	mov    rcx,rbx
  42a183:	cmove  rdi,r14
  42a187:	mov    QWORD PTR [rsp+0x70],0x0
  42a190:	mov    QWORD PTR [rsp+0x68],0x0
  42a199:	mov    QWORD PTR [rsp+0x60],0x0
  42a1a2:	mov    QWORD PTR [rsp+0x90],0x0
  42a1ae:	mov    QWORD PTR [rsp+0x88],0x0
  42a1ba:	mov    QWORD PTR [rsp+0x80],0x0
  42a1c6:	call   0x426d10
  42a1cb:	test   eax,eax
  42a1cd:	mov    r15d,eax
  42a1d0:	jne    0x42a854
  42a1d6:	test   BYTE PTR [rbx],0x4
  42a1d9:	lea    rdx,[rip+0x22ec7]        # 0x44d0a7
  42a1e0:	lea    rax,[rip+0x22ee1]        # 0x44d0c8
  42a1e7:	cmove  rdx,rax
  42a1eb:	cmp    BYTE PTR [rdx],0x0
  42a1ee:	jne    0x42a8d0
  42a1f4:	mov    rdx,QWORD PTR [rsp+0x80]
  42a1fc:	mov    r8,QWORD PTR [rsp+0x88]
  42a204:	cmp    rdx,r8
  42a207:	je     0x42a215
  42a209:	sub    r8,rdx
  42a20c:	test   r8d,r8d
  42a20f:	jne    0x42a8c0
  42a215:	test   BYTE PTR [rbx+0x3c],0x1
  42a219:	jne    0x42a890
  42a21f:	movabs rax,0x100000001
  42a229:	test   QWORD PTR [rbx+0x38],rax
  42a22d:	jne    0x42a870
  42a233:	mov    rcx,QWORD PTR [rsp+0x60]
  42a238:	test   rcx,rcx
  42a23b:	je     0x42a25d
  42a23d:	call   0x43f100
  42a242:	mov    QWORD PTR [rsp+0x68],0x0
  42a24b:	mov    QWORD PTR [rsp+0x70],0x0
  42a254:	mov    QWORD PTR [rsp+0x60],0x0
  42a25d:	mov    rcx,QWORD PTR [rsp+0x80]
  42a265:	test   rcx,rcx
  42a268:	je     0x42a293
  42a26a:	call   0x43f100
  42a26f:	mov    QWORD PTR [rsp+0x88],0x0
  42a27b:	mov    QWORD PTR [rsp+0x90],0x0
  42a287:	mov    QWORD PTR [rsp+0x80],0x0
  42a293:	test   r15d,r15d
  42a296:	mov    eax,0x1
  42a29b:	mov    ebp,0x1
  42a2a0:	setne  dl
  42a2a3:	xor    edi,edi
  42a2a5:	test   dl,dl
  42a2a7:	je     0x42a2d1
  42a2a9:	test   al,al
  42a2ab:	je     0x42a2d1
  42a2ad:	mov    eax,DWORD PTR [rbx]
  42a2af:	test   ah,0x2c
  42a2b2:	jne    0x42a6d0
  42a2b8:	mov    r8,r12
  42a2bb:	mov    rdx,rsi
  42a2be:	mov    rcx,rbx
  42a2c1:	call   0x429790
  42a2c6:	xor    ebp,ebp
  42a2c8:	mov    r15d,eax
  42a2cb:	mov    r13d,0x1
  42a2d1:	test   r15d,r15d
  42a2d4:	je     0x42a420
  42a2da:	mov    r14,QWORD PTR [rsi]
  42a2dd:	movsx  ecx,BYTE PTR [r14]
  42a2e1:	test   cl,cl
  42a2e3:	jne    0x42a140
  42a2e9:	test   r13d,r13d
  42a2ec:	mov    r14d,r15d
  42a2ef:	jne    0x42a2fd
  42a2f1:	test   DWORD PTR [rbx],0x300
  42a2f7:	jne    0x42a975
  42a2fd:	test   BYTE PTR [rbx],0x1
  42a300:	je     0x42a423
  42a306:	mov    eax,DWORD PTR [rbx+0x40]
  42a309:	test   eax,eax
  42a30b:	jne    0x42a993
  42a311:	mov    ecx,DWORD PTR [rbx+0x48]
  42a314:	test   ecx,ecx
  42a316:	je     0x42a423
  42a31c:	mov    rax,QWORD PTR [r12+0x8]
  42a321:	cmp    QWORD PTR [r12],rax
  42a325:	je     0x42a339
  42a327:	lea    rdx,[rip+0x22d83]        # 0x44d0b1
  42a32e:	mov    rcx,r12
  42a331:	call   0x425940
  42a336:	mov    ecx,DWORD PTR [rbx+0x48]
  42a339:	call   0x4255a0
  42a33e:	test   rax,rax
  42a341:	je     0x42a423
  42a347:	cmp    BYTE PTR [rax],0x0
  42a34a:	je     0x42a423
  42a350:	mov    rdx,rax
  42a353:	mov    rcx,r12
  42a356:	call   0x425940
  42a35b:	jmp    0x42a423
  42a360:	test   rdi,rdi
  42a363:	mov    eax,ebp
  42a365:	cmove  rdi,r14
  42a369:	add    r14,0x1
  42a36d:	and    eax,0x1
  42a370:	mov    QWORD PTR [rsi],r14
  42a373:	mov    DWORD PTR [rbx+0x40],0x1
  42a37a:	jmp    0x42a2a9
  42a37f:	nop
  42a380:	test   BYTE PTR [rsp+0x4c],0x1
  42a385:	je     0x42a393
  42a387:	test   DWORD PTR [rbx],0x300
  42a38d:	jne    0x42a8e0
  42a393:	test   DWORD PTR [rbx],0x1000
  42a399:	je     0x42a420
  42a39f:	lea    rax,[r14+0x1]
  42a3a3:	mov    QWORD PTR [rsi],rax
  42a3a6:	movzx  eax,BYTE PTR [r14+0x1]
  42a3ab:	test   al,al
  42a3ad:	je     0x42a3de
  42a3af:	mov    rcx,QWORD PTR [rip+0x2722a]        # 0x4515e0
  42a3b6:	add    r14,0x2
  42a3ba:	test   BYTE PTR [rcx+rax*2],0x4
  42a3be:	jne    0x42a3d3
  42a3c0:	jmp    0x42a3de
  42a3c2:	mov    rcx,QWORD PTR [rip+0x27217]        # 0x4515e0
  42a3c9:	add    r14,0x1
  42a3cd:	test   BYTE PTR [rcx+rax*2],0x4
  42a3d1:	je     0x42a3de
  42a3d3:	mov    QWORD PTR [rsi],r14
  42a3d6:	movzx  eax,BYTE PTR [r14]
  42a3da:	test   al,al
  42a3dc:	jne    0x42a3c2
  42a3de:	mov    eax,ebp
  42a3e0:	and    eax,0x1
  42a3e3:	jmp    0x42a2a9
  42a3e8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a3f0:	mov    DWORD PTR [rsp+0x20],0x0
  42a3f8:	mov    r9d,0x1
  42a3fe:	mov    r8,r12
  42a401:	mov    rdx,rsi
  42a404:	mov    rcx,rbx
  42a407:	call   0x427420
  42a40c:	test   eax,eax
  42a40e:	mov    r15d,eax
  42a411:	jne    0x42a813
  42a417:	nop    WORD PTR [rax+rax*1+0x0]
  42a420:	xor    r14d,r14d
  42a423:	mov    eax,r14d
  42a426:	add    rsp,0xc8
  42a42d:	pop    rbx
  42a42e:	pop    rsi
  42a42f:	pop    rdi
  42a430:	pop    rbp
  42a431:	pop    r12
  42a433:	pop    r13
  42a435:	pop    r14
  42a437:	pop    r15
  42a439:	ret    
  42a43a:	nop    WORD PTR [rax+rax*1+0x0]
  42a440:	test   DWORD PTR [rbx],0x1000
  42a446:	je     0x42a420
  42a448:	add    r14,0x1
  42a44c:	jmp    0x42a454
  42a44e:	xchg   ax,ax
  42a450:	test   al,al
  42a452:	je     0x42a466
  42a454:	mov    QWORD PTR [rsi],r14
  42a457:	movzx  eax,BYTE PTR [r14]
  42a45b:	mov    rdx,r14
  42a45e:	add    r14,0x1
  42a462:	cmp    al,0x5f
  42a464:	jne    0x42a450
  42a466:	test   al,al
  42a468:	je     0x42a420
  42a46a:	add    rdx,0x1
  42a46e:	mov    eax,ebp
  42a470:	mov    QWORD PTR [rsi],rdx
  42a473:	and    eax,0x1
  42a476:	jmp    0x42a2a9
  42a47b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a480:	mov    DWORD PTR [rsp+0x20],0x0
  42a488:	mov    r9d,0x1
  42a48e:	mov    r8,r12
  42a491:	mov    rdx,rsi
  42a494:	mov    rcx,rbx
  42a497:	call   0x427420
  42a49c:	test   DWORD PTR [rbx],0x300
  42a4a2:	mov    r15d,eax
  42a4a5:	jne    0x42a293
  42a4ab:	mov    eax,ebp
  42a4ad:	and    eax,0x1
  42a4b0:	test   r15d,r15d
  42a4b3:	setne  dl
  42a4b6:	xor    edi,edi
  42a4b8:	jmp    0x42a2a5
  42a4bd:	nop    DWORD PTR [rax]
  42a4c0:	test   DWORD PTR [rbx],0x300
  42a4c6:	je     0x42a420
  42a4cc:	xor    r9d,r9d
  42a4cf:	mov    rdx,rsi
  42a4d2:	mov    DWORD PTR [rsp+0x28],0x0
  42a4da:	mov    DWORD PTR [rsp+0x20],0x0
  42a4e2:	mov    r8,r12
  42a4e5:	mov    rcx,rbx
  42a4e8:	call   0x426d10
  42a4ed:	test   BYTE PTR [rbx+0x38],0x1
  42a4f1:	mov    r15d,eax
  42a4f4:	mov    eax,0x1
  42a4f9:	cmovne eax,DWORD PTR [rsp+0x4c]
  42a4fe:	add    QWORD PTR [rsi],0x1
  42a502:	mov    DWORD PTR [rsp+0x4c],eax
  42a506:	mov    eax,ebp
  42a508:	and    eax,0x1
  42a50b:	test   r15d,r15d
  42a50e:	setne  dl
  42a511:	jmp    0x42a2a5
  42a516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a520:	add    r14,0x1
  42a524:	mov    QWORD PTR [rsi],r14
  42a527:	test   DWORD PTR [rbx],0x3c00
  42a52d:	jne    0x42a840
  42a533:	mov    r8,r12
  42a536:	mov    rdx,rsi
  42a539:	mov    rcx,rbx
  42a53c:	call   0x429790
  42a541:	test   eax,eax
  42a543:	mov    r15d,eax
  42a546:	je     0x42a420
  42a54c:	test   DWORD PTR [rbx],0x2100
  42a552:	je     0x42a560
  42a554:	mov    rax,QWORD PTR [rsi]
  42a557:	cmp    BYTE PTR [rax],0x5f
  42a55a:	je     0x42aa34
  42a560:	mov    eax,ebp
  42a562:	xor    edi,edi
  42a564:	mov    r13d,0x1
  42a56a:	and    eax,0x1
  42a56d:	jmp    0x42a2a9
  42a572:	call   0x425550
  42a577:	or     DWORD PTR [rbx+0x48],eax
  42a57a:	test   rdi,rdi
  42a57d:	mov    eax,ebp
  42a57f:	cmove  rdi,r14
  42a583:	add    r14,0x1
  42a587:	and    eax,0x1
  42a58a:	mov    QWORD PTR [rsi],r14
  42a58d:	jmp    0x42a2a9
  42a592:	mov    r8,QWORD PTR [rsp+0x30]
  42a597:	mov    rdx,rsi
  42a59a:	mov    rcx,rbx
  42a59d:	call   0x427980
  42a5a2:	test   eax,eax
  42a5a4:	mov    r15d,eax
  42a5a7:	je     0x42a293
  42a5ad:	test   BYTE PTR [rbx],0x4
  42a5b0:	lea    rdx,[rip+0x22b11]        # 0x44d0c8
  42a5b7:	lea    rax,[rip+0x22ae9]        # 0x44d0a7
  42a5be:	cmovne rdx,rax
  42a5c2:	cmp    BYTE PTR [rdx],0x0
  42a5c5:	jne    0x42aa00
  42a5cb:	mov    rcx,QWORD PTR [rsp+0xa0]
  42a5d3:	mov    r8,QWORD PTR [rsp+0xa8]
  42a5db:	cmp    rcx,r8
  42a5de:	je     0x42a5ec
  42a5e0:	sub    r8,rcx
  42a5e3:	test   r8d,r8d
  42a5e6:	jne    0x42a9e0
  42a5ec:	test   rcx,rcx
  42a5ef:	je     0x42a293
  42a5f5:	call   0x43f100
  42a5fa:	jmp    0x42a293
  42a5ff:	nop
  42a600:	test   rdi,rdi
  42a603:	mov    rcx,rbx
  42a606:	mov    DWORD PTR [rbx+0x44],0xffffffff
  42a60d:	cmove  rdi,r14
  42a611:	mov    QWORD PTR [rsp+0xb0],0x0
  42a61d:	mov    QWORD PTR [rsp+0xa8],0x0
  42a629:	mov    QWORD PTR [rsp+0xa0],0x0
  42a635:	call   0x425410
  42a63a:	mov    r8,QWORD PTR [rsp+0x30]
  42a63f:	mov    rdx,rsi
  42a642:	mov    rcx,rbx
  42a645:	mov    r14d,eax
  42a648:	call   0x429010
  42a64d:	test   eax,eax
  42a64f:	jne    0x42a6e4
  42a655:	mov    rcx,QWORD PTR [rsp+0xa0]
  42a65d:	test   rcx,rcx
  42a660:	je     0x42a667
  42a662:	call   0x43f100
  42a667:	xor    edx,edx
  42a669:	xor    r15d,r15d
  42a66c:	test   DWORD PTR [rbx],0x2300
  42a672:	je     0x42a807
  42a678:	mov    rax,QWORD PTR [rsi]
  42a67b:	cmp    BYTE PTR [rax],0x46
  42a67e:	je     0x42a807
  42a684:	mov    eax,0x1
  42a689:	xor    edi,edi
  42a68b:	mov    ebp,0x1
  42a690:	jmp    0x42a2a5
  42a695:	test   DWORD PTR [rbx],0x300
  42a69b:	je     0x42a420
  42a6a1:	mov    rdx,rsi
  42a6a4:	mov    r8,r12
  42a6a7:	mov    rcx,rbx
  42a6aa:	call   0x429790
  42a6af:	mov    r15d,eax
  42a6b2:	mov    eax,ebp
  42a6b4:	mov    r13d,0x1
  42a6ba:	and    eax,0x1
  42a6bd:	test   r15d,r15d
  42a6c0:	setne  dl
  42a6c3:	jmp    0x42a2a5
  42a6c8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a6d0:	mov    rdx,QWORD PTR [rsp+0x38]
  42a6d5:	mov    rcx,QWORD PTR [rsp+0x40]
  42a6da:	call   0x425650
  42a6df:	jmp    0x42a2b8
  42a6e4:	movabs rdx,0x100000001
  42a6ee:	test   QWORD PTR [rbx+0x38],rdx
  42a6f2:	mov    r15,QWORD PTR [rsp+0xa8]
  42a6fa:	je     0x42a73f
  42a6fc:	movsxd rcx,DWORD PTR [rbx+0x44]
  42a700:	lea    edx,[rcx+0x1]
  42a703:	cmp    edx,0x1
  42a706:	mov    rdx,QWORD PTR [rsp+0xa0]
  42a70e:	jbe    0x42a96d
  42a714:	lea    r8,[rdx+rcx*1]
  42a718:	mov    QWORD PTR [rsp+0xa8],r8
  42a720:	cmp    r8,rdx
  42a723:	je     0x42a731
  42a725:	sub    r8,rdx
  42a728:	test   r8d,r8d
  42a72b:	jne    0x42aa27
  42a731:	test   BYTE PTR [rbx+0x3c],0x1
  42a735:	jne    0x42aa0f
  42a73b:	sub    DWORD PTR [rbx+0x38],0x1
  42a73f:	mov    rdx,QWORD PTR [rsp+0xa0]
  42a747:	mov    ecx,r15d
  42a74a:	mov    r8d,0x0
  42a750:	mov    QWORD PTR [rsp+0xa8],r15
  42a758:	sub    ecx,edx
  42a75a:	cmp    r15,rdx
  42a75d:	cmovne r8d,ecx
  42a761:	mov    rcx,rbx
  42a764:	call   0x4254a0
  42a769:	mov    rcx,QWORD PTR [rsp+0xa8]
  42a771:	mov    rdx,QWORD PTR [rsp+0xa0]
  42a779:	mov    r8d,0x0
  42a77f:	mov    r9d,r14d
  42a782:	mov    eax,ecx
  42a784:	sub    eax,edx
  42a786:	cmp    rdx,rcx
  42a789:	lea    rcx,[rbx+0x18]
  42a78d:	cmovne r8d,eax
  42a791:	call   0x425770
  42a796:	test   BYTE PTR [rbx],0x4
  42a799:	lea    rdx,[rip+0x22907]        # 0x44d0a7
  42a7a0:	lea    rax,[rip+0x22921]        # 0x44d0c8
  42a7a7:	cmove  rdx,rax
  42a7ab:	cmp    BYTE PTR [rdx],0x0
  42a7ae:	jne    0x42a9d0
  42a7b4:	mov    rcx,QWORD PTR [rsp+0xa0]
  42a7bc:	mov    r8,QWORD PTR [rsp+0xa8]
  42a7c4:	cmp    rcx,r8
  42a7c7:	je     0x42a7d5
  42a7c9:	sub    r8,rcx
  42a7cc:	test   r8d,r8d
  42a7cf:	jne    0x42a9b0
  42a7d5:	test   rcx,rcx
  42a7d8:	je     0x42a7df
  42a7da:	call   0x43f100
  42a7df:	mov    r8d,DWORD PTR [rsi]
  42a7e2:	mov    rdx,rdi
  42a7e5:	mov    rcx,rbx
  42a7e8:	mov    r15d,0x1
  42a7ee:	sub    r8d,edi
  42a7f1:	call   0x425dd0
  42a7f6:	test   DWORD PTR [rbx],0x2300
  42a7fc:	mov    edx,0x1
  42a801:	jne    0x42a678
  42a807:	mov    eax,ebp
  42a809:	xor    edi,edi
  42a80b:	and    eax,0x1
  42a80e:	jmp    0x42a2a5
  42a813:	mov    r8d,DWORD PTR [rsi]
  42a816:	mov    rdx,r14
  42a819:	mov    rcx,rbx
  42a81c:	sub    r8d,r14d
  42a81f:	call   0x425dd0
  42a824:	mov    eax,DWORD PTR [rbx]
  42a826:	test   ah,0x3
  42a829:	je     0x42a961
  42a82f:	xor    edi,edi
  42a831:	jmp    0x42a2af
  42a836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a840:	mov    rdx,QWORD PTR [rsp+0x38]
  42a845:	mov    rcx,QWORD PTR [rsp+0x40]
  42a84a:	call   0x425650
  42a84f:	jmp    0x42a533
  42a854:	mov    r8d,DWORD PTR [rsi]
  42a857:	mov    rdx,rdi
  42a85a:	mov    rcx,rbx
  42a85d:	sub    r8d,edi
  42a860:	call   0x425dd0
  42a865:	jmp    0x42a1d6
  42a86a:	nop    WORD PTR [rax+rax*1+0x0]
  42a870:	mov    r8,QWORD PTR [rsp+0x68]
  42a875:	mov    rdx,QWORD PTR [rsp+0x50]
  42a87a:	mov    rcx,r12
  42a87d:	call   0x425a80
  42a882:	sub    DWORD PTR [rbx+0x38],0x1
  42a886:	jmp    0x42a233
  42a88b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a890:	mov    rdi,QWORD PTR [rsp+0x50]
  42a895:	lea    rdx,[rip+0x2282f]        # 0x44d0cb
  42a89c:	mov    rcx,rdi
  42a89f:	call   0x425900
  42a8a4:	mov    r8,QWORD PTR [rsp+0x68]
  42a8a9:	mov    rdx,rdi
  42a8ac:	mov    rcx,r12
  42a8af:	call   0x425a80
  42a8b4:	sub    DWORD PTR [rbx+0x3c],0x1
  42a8b8:	jmp    0x42a21f
  42a8bd:	nop    DWORD PTR [rax]
  42a8c0:	mov    rcx,r12
  42a8c3:	call   0x4258a0
  42a8c8:	jmp    0x42a215
  42a8cd:	nop    DWORD PTR [rax]
  42a8d0:	mov    rcx,QWORD PTR [rsp+0x58]
  42a8d5:	call   0x425940
  42a8da:	jmp    0x42a1f4
  42a8df:	nop
  42a8e0:	add    r14,0x1
  42a8e4:	mov    rcx,rbx
  42a8e7:	mov    rdx,rsi
  42a8ea:	mov    QWORD PTR [rsi],r14
  42a8ed:	mov    r14,QWORD PTR [rsp+0x30]
  42a8f2:	mov    r8,r14
  42a8f5:	call   0x427980
  42a8fa:	mov    rcx,QWORD PTR [rsp+0xa8]
  42a902:	cmp    QWORD PTR [rsp+0xa0],rcx
  42a90a:	mov    r15d,eax
  42a90d:	je     0x42a93f
  42a90f:	lea    rdx,[rip+0x2279b]        # 0x44d0b1
  42a916:	mov    rcx,r14
  42a919:	call   0x425940
  42a91e:	mov    rcx,QWORD PTR [rsp+0xa0]
  42a926:	mov    r8,QWORD PTR [rsp+0xa8]
  42a92e:	cmp    rcx,r8
  42a931:	je     0x42a93f
  42a933:	sub    r8,rcx
  42a936:	test   r8d,r8d
  42a939:	jne    0x42aa9c
  42a93f:	test   rcx,rcx
  42a942:	je     0x42a949
  42a944:	call   0x43f100
  42a949:	mov    eax,ebp
  42a94b:	mov    DWORD PTR [rsp+0x4c],0x1
  42a953:	and    eax,0x1
  42a956:	test   r15d,r15d
  42a959:	setne  dl
  42a95c:	jmp    0x42a2a5
  42a961:	mov    eax,ebp
  42a963:	xor    edi,edi
  42a965:	and    eax,0x1
  42a968:	jmp    0x42a2a9
  42a96d:	mov    r8,r15
  42a970:	jmp    0x42a720
  42a975:	mov    r8,r12
  42a978:	mov    rdx,rsi
  42a97b:	mov    rcx,rbx
  42a97e:	call   0x429790
  42a983:	test   eax,eax
  42a985:	mov    r14d,eax
  42a988:	jne    0x42a2fd
  42a98e:	jmp    0x42a423
  42a993:	lea    rdx,[rip+0x22c15]        # 0x44d5af
  42a99a:	mov    rcx,r12
  42a99d:	call   0x425940
  42a9a2:	jmp    0x42a311
  42a9a7:	nop    WORD PTR [rax+rax*1+0x0]
  42a9b0:	mov    rdx,rcx
  42a9b3:	mov    rcx,r12
  42a9b6:	call   0x4258a0
  42a9bb:	mov    rcx,QWORD PTR [rsp+0xa0]
  42a9c3:	jmp    0x42a7d5
  42a9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a9d0:	mov    rcx,r12
  42a9d3:	call   0x425900
  42a9d8:	jmp    0x42a7b4
  42a9dd:	nop    DWORD PTR [rax]
  42a9e0:	mov    rdx,rcx
  42a9e3:	mov    rcx,r12
  42a9e6:	call   0x4258a0
  42a9eb:	mov    rcx,QWORD PTR [rsp+0xa0]
  42a9f3:	jmp    0x42a5ec
  42a9f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42aa00:	mov    rcx,QWORD PTR [rsp+0x30]
  42aa05:	call   0x425940
  42aa0a:	jmp    0x42a5cb
  42aa0f:	lea    rdx,[rip+0x226b5]        # 0x44d0cb
  42aa16:	mov    rcx,r12
  42aa19:	call   0x425900
  42aa1e:	sub    DWORD PTR [rbx+0x3c],0x1
  42aa22:	jmp    0x42a73f
  42aa27:	mov    rcx,r12
  42aa2a:	call   0x4258a0
  42aa2f:	jmp    0x42a731
  42aa34:	mov    r8,QWORD PTR [rsp+0x58]
  42aa39:	add    rax,0x1
  42aa3d:	mov    rcx,rbx
  42aa40:	mov    QWORD PTR [rsi],rax
  42aa43:	mov    rdx,rsi
  42aa46:	call   0x427980
  42aa4b:	mov    rcx,QWORD PTR [rsp+0x80]
  42aa53:	mov    r15d,eax
  42aa56:	test   rcx,rcx
  42aa59:	je     0x42aa84
  42aa5b:	call   0x43f100
  42aa60:	mov    QWORD PTR [rsp+0x88],0x0
  42aa6c:	mov    QWORD PTR [rsp+0x90],0x0
  42aa78:	mov    QWORD PTR [rsp+0x80],0x0
  42aa84:	mov    eax,ebp
  42aa86:	mov    r13d,0x1
  42aa8c:	and    eax,0x1
  42aa8f:	test   r15d,r15d
  42aa92:	setne  dl
  42aa95:	xor    edi,edi
  42aa97:	jmp    0x42a2a5
  42aa9c:	mov    rdx,rcx
  42aa9f:	mov    rcx,r12
  42aaa2:	call   0x4258a0
  42aaa7:	mov    rcx,QWORD PTR [rsp+0xa0]
  42aaaf:	jmp    0x42a93f
  42aab4:	xchg   ax,ax
  42aab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aac0:	push   r15
  42aac2:	push   r14
  42aac4:	push   r13
  42aac6:	push   r12
  42aac8:	push   rbp
  42aac9:	push   rdi
  42aaca:	push   rsi
  42aacb:	push   rbx
  42aacc:	sub    rsp,0xc8
  42aad3:	xor    eax,eax
  42aad5:	cmp    BYTE PTR [r9+0x2],0x0
  42aada:	mov    r13,QWORD PTR [rdx]
  42aadd:	mov    rsi,rcx
  42aae0:	mov    rbp,rdx
  42aae3:	mov    rbx,r8
  42aae6:	mov    r15,r9
  42aae9:	je     0x42ac3d
  42aaef:	test   DWORD PTR [rcx],0x3c00
  42aaf5:	jne    0x42ac51
  42aafb:	lea    rcx,[r9+0x2]
  42aaff:	lea    rdx,[rip+0x22bca]        # 0x44d6d0
  42ab06:	call   0x43eff0
  42ab0b:	test   rax,rax
  42ab0e:	je     0x42ac51
  42ab14:	mov    r8,QWORD PTR [rbx+0x8]
  42ab18:	lea    r14,[rsp+0x30]
  42ab1d:	lea    r12,[rsp+0x50]
  42ab22:	mov    rdx,rbx
  42ab25:	mov    QWORD PTR [rsp+0x40],0x0
  42ab2e:	mov    QWORD PTR [rsp+0x38],0x0
  42ab37:	mov    rcx,r14
  42ab3a:	mov    QWORD PTR [rsp+0x30],0x0
  42ab43:	mov    rdi,r12
  42ab46:	call   0x425a80
  42ab4b:	xor    eax,eax
  42ab4d:	mov    ecx,0xe
  42ab52:	mov    rdx,rsi
  42ab55:	rep stos QWORD PTR es:[rdi],rax
  42ab58:	mov    rcx,r12
  42ab5b:	call   0x425ac0
  42ab60:	cmp    BYTE PTR [r15+0x2],0x0
  42ab65:	je     0x42ac10
  42ab6b:	mov    r9,r15
  42ab6e:	mov    r8,rbx
  42ab71:	mov    rdx,rbp
  42ab74:	mov    rcx,rsi
  42ab77:	call   0x429b40
  42ab7c:	test   eax,eax
  42ab7e:	je     0x42ab96
  42ab80:	mov    r8,rbx
  42ab83:	mov    rdx,rbp
  42ab86:	mov    rcx,rsi
  42ab89:	call   0x42a0c0
  42ab8e:	test   eax,eax
  42ab90:	jne    0x42ac12
  42ab96:	mov    QWORD PTR [rbp+0x0],r13
  42ab9a:	mov    rax,QWORD PTR [rbx]
  42ab9d:	mov    rdx,r14
  42aba0:	mov    r8,QWORD PTR [rsp+0x38]
  42aba5:	mov    rcx,rbx
  42aba8:	mov    QWORD PTR [rbx+0x8],rax
  42abac:	call   0x425a80
  42abb1:	mov    rdx,r12
  42abb4:	mov    rcx,rsi
  42abb7:	call   0x425ac0
  42abbc:	movzx  eax,BYTE PTR [r15+0x2]
  42abc1:	lea    rdx,[r15+0x2]
  42abc5:	test   al,al
  42abc7:	jne    0x42abd8
  42abc9:	jmp    0x42ac10
  42abcb:	nop    DWORD PTR [rax+rax*1+0x0]
  42abd0:	add    rdx,0x1
  42abd4:	test   al,al
  42abd6:	je     0x42ac10
  42abd8:	cmp    al,0x5f
  42abda:	movzx  eax,BYTE PTR [rdx+0x1]
  42abde:	jne    0x42abd0
  42abe0:	cmp    al,0x5f
  42abe2:	jne    0x42abd0
  42abe4:	movzx  eax,BYTE PTR [rdx]
  42abe7:	cmp    al,0x5f
  42abe9:	jne    0x42abfe
  42abeb:	mov    eax,0x5f
  42abf0:	jmp    0x42abf6
  42abf2:	movzx  eax,BYTE PTR [rdx+0x1]
  42abf6:	add    rdx,0x1
  42abfa:	cmp    al,0x5f
  42abfc:	je     0x42abf2
  42abfe:	test   al,al
  42ac00:	lea    r15,[rdx-0x2]
  42ac04:	jne    0x42ab6b
  42ac0a:	nop    WORD PTR [rax+rax*1+0x0]
  42ac10:	xor    eax,eax
  42ac12:	mov    rcx,r12
  42ac15:	mov    DWORD PTR [rsp+0x2c],eax
  42ac19:	call   0x4256b0
  42ac1e:	mov    rcx,r12
  42ac21:	call   0x425320
  42ac26:	mov    rcx,QWORD PTR [rsp+0x30]
  42ac2b:	mov    eax,DWORD PTR [rsp+0x2c]
  42ac2f:	test   rcx,rcx
  42ac32:	je     0x42ac3d
  42ac34:	call   0x43f100
  42ac39:	mov    eax,DWORD PTR [rsp+0x2c]
  42ac3d:	add    rsp,0xc8
  42ac44:	pop    rbx
  42ac45:	pop    rsi
  42ac46:	pop    rdi
  42ac47:	pop    rbp
  42ac48:	pop    r12
  42ac4a:	pop    r13
  42ac4c:	pop    r14
  42ac4e:	pop    r15
  42ac50:	ret    
  42ac51:	mov    r9,r15
  42ac54:	mov    r8,rbx
  42ac57:	mov    rdx,rbp
  42ac5a:	mov    rcx,rsi
  42ac5d:	call   0x429b40
  42ac62:	jmp    0x42ac3d
  42ac64:	xchg   ax,ax
  42ac66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ac70:	push   r15
  42ac72:	push   r14
  42ac74:	push   r13
  42ac76:	push   r12
  42ac78:	push   rbp
  42ac79:	push   rdi
  42ac7a:	push   rsi
  42ac7b:	push   rbx
  42ac7c:	sub    rsp,0x88
  42ac83:	mov    rbx,QWORD PTR [rdx]
  42ac86:	mov    r12,rcx
  42ac89:	mov    rbp,rdx
  42ac8c:	mov    r13,r8
  42ac8f:	cmp    BYTE PTR [rbx],0x5f
  42ac92:	je     0x42ad00
  42ac94:	lea    rdi,[rip+0x22a69]        # 0x44d704
  42ac9b:	mov    ecx,0x8
  42aca0:	mov    rsi,rbx
  42aca3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42aca5:	je     0x42ae00
  42acab:	lea    rdi,[rip+0x22a85]        # 0x44d737
  42acb2:	mov    ecx,0x3
  42acb7:	mov    rsi,rbx
  42acba:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42acbc:	jne    0x42ace0
  42acbe:	movzx  eax,BYTE PTR [rbx+0x3]
  42acc2:	cmp    al,0x69
  42acc4:	sete   dl
  42acc7:	cmp    al,0x66
  42acc9:	je     0x42b040
  42accf:	test   dl,dl
  42acd1:	jne    0x42aea0
  42acd7:	nop    WORD PTR [rax+rax*1+0x0]
  42ace0:	xor    ebx,ebx
  42ace2:	mov    eax,ebx
  42ace4:	add    rsp,0x88
  42aceb:	pop    rbx
  42acec:	pop    rsi
  42aced:	pop    rdi
  42acee:	pop    rbp
  42acef:	pop    r12
  42acf1:	pop    r13
  42acf3:	pop    r14
  42acf5:	pop    r15
  42acf7:	ret    
  42acf8:	nop    DWORD PTR [rax+rax*1+0x0]
  42ad00:	movsx  edi,BYTE PTR [rbx+0x1]
  42ad04:	lea    rcx,[rip+0x17415]        # 0x442120
  42ad0b:	mov    edx,edi
  42ad0d:	mov    esi,edi
  42ad0f:	call   0x43f050
  42ad14:	test   rax,rax
  42ad17:	je     0x42ad23
  42ad19:	cmp    BYTE PTR [rbx+0x2],0x5f
  42ad1d:	je     0x42b160
  42ad23:	cmp    sil,0x5f
  42ad27:	je     0x42af10
  42ad2d:	cmp    sil,0x76
  42ad31:	je     0x42b010
  42ad37:	lea    rcx,[rip+0x229b9]        # 0x44d6f7
  42ad3e:	mov    edx,edi
  42ad40:	call   0x43f050
  42ad45:	test   rax,rax
  42ad48:	je     0x42ac94
  42ad4e:	lea    rdx,[rip+0x173cb]        # 0x442120
  42ad55:	mov    rcx,rbx
  42ad58:	call   0x43f008
  42ad5d:	test   rax,rax
  42ad60:	mov    r14,rax
  42ad63:	je     0x42ac94
  42ad69:	lea    rax,[rbx+0x1]
  42ad6d:	mov    QWORD PTR [rbp+0x0],rax
  42ad71:	movzx  eax,BYTE PTR [rbx+0x1]
  42ad75:	cmp    al,0x51
  42ad77:	je     0x42b140
  42ad7d:	cmp    al,0x74
  42ad7f:	je     0x42b0a0
  42ad85:	cmp    al,0x4b
  42ad87:	je     0x42b140
  42ad8d:	mov    rcx,rbp
  42ad90:	call   0x4251e0
  42ad95:	movsxd rbx,eax
  42ad98:	test   ebx,ebx
  42ad9a:	js     0x42ace0
  42ada0:	mov    r15,QWORD PTR [rbp+0x0]
  42ada4:	mov    rcx,r15
  42ada7:	call   0x43f028
  42adac:	cmp    ebx,eax
  42adae:	jg     0x42ace0
  42adb4:	cmp    ebx,0xa
  42adb7:	jle    0x42b260
  42adbd:	lea    rdi,[rip+0x2278d]        # 0x44d551
  42adc4:	mov    ecx,0x8
  42adc9:	mov    rsi,r15
  42adcc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42adce:	jne    0x42addb
  42add0:	cmp    BYTE PTR [r15+0x9],0x4e
  42add5:	je     0x42b28b
  42addb:	mov    rdx,r15
  42adde:	mov    r8d,ebx
  42ade1:	mov    rcx,r13
  42ade4:	call   0x425860
  42ade9:	mov    r15,QWORD PTR [rbp+0x0]
  42aded:	lea    rsi,[r15+rbx*1]
  42adf1:	mov    QWORD PTR [rbp+0x0],rsi
  42adf5:	mov    ebx,0x1
  42adfa:	jmp    0x42b0cf
  42adff:	nop
  42ae00:	add    rbx,0x8
  42ae04:	mov    rcx,rbp
  42ae07:	mov    QWORD PTR [rbp+0x0],rbx
  42ae0b:	call   0x4251e0
  42ae10:	cmp    eax,0xffffffff
  42ae13:	mov    ebx,eax
  42ae15:	je     0x42ace0
  42ae1b:	mov    rax,QWORD PTR [rbp+0x0]
  42ae1f:	mov    rcx,r12
  42ae22:	lea    rdx,[rax+0x1]
  42ae26:	mov    QWORD PTR [rbp+0x0],rdx
  42ae2a:	call   0x42b2f0
  42ae2f:	test   rax,rax
  42ae32:	mov    rsi,rax
  42ae35:	je     0x42ace0
  42ae3b:	lea    rdi,[rsp+0x40]
  42ae40:	neg    ebx
  42ae42:	lea    rdx,[rip+0x228c7]        # 0x44d710
  42ae49:	mov    r8d,ebx
  42ae4c:	mov    rcx,rdi
  42ae4f:	call   0x43f068
  42ae54:	cmp    BYTE PTR [rsp+0x40],0x0
  42ae59:	jne    0x42b200
  42ae5f:	cmp    BYTE PTR [rsi],0x0
  42ae62:	je     0x42ae6f
  42ae64:	mov    rdx,rsi
  42ae67:	mov    rcx,r13
  42ae6a:	call   0x425940
  42ae6f:	mov    rcx,rsi
  42ae72:	call   0x43f100
  42ae77:	mov    rbx,QWORD PTR [rbp+0x0]
  42ae7b:	mov    rcx,rbx
  42ae7e:	call   0x43f028
  42ae83:	cdqe   
  42ae85:	lea    rcx,[rbx+rax*1]
  42ae89:	mov    ebx,0x1
  42ae8e:	mov    QWORD PTR [rbp+0x0],rcx
  42ae92:	jmp    0x42ace2
  42ae97:	nop    WORD PTR [rax+rax*1+0x0]
  42aea0:	lea    rsi,[rip+0x2282c]        # 0x44d6d3
  42aea7:	lea    rax,[rbx+0x4]
  42aeab:	mov    QWORD PTR [rbp+0x0],rax
  42aeaf:	movzx  eax,BYTE PTR [rbx+0x4]
  42aeb3:	cmp    al,0x51
  42aeb5:	je     0x42b080
  42aebb:	cmp    al,0x74
  42aebd:	je     0x42b054
  42aec3:	cmp    al,0x4b
  42aec5:	je     0x42b080
  42aecb:	mov    r8,r13
  42aece:	mov    rdx,rbp
  42aed1:	mov    rcx,r12
  42aed4:	call   0x427980
  42aed9:	mov    ebx,eax
  42aedb:	test   ebx,ebx
  42aedd:	je     0x42ace0
  42aee3:	mov    rax,QWORD PTR [rbp+0x0]
  42aee7:	cmp    BYTE PTR [rax],0x0
  42aeea:	jne    0x42ace0
  42aef0:	cmp    BYTE PTR [rsi],0x0
  42aef3:	je     0x42ace2
  42aef9:	mov    rdx,rsi
  42aefc:	mov    rcx,r13
  42aeff:	call   0x425940
  42af04:	jmp    0x42ace2
  42af09:	nop    DWORD PTR [rax+0x0]
  42af10:	cmp    BYTE PTR [rbx+0x2],0x76
  42af14:	jne    0x42ac94
  42af1a:	cmp    BYTE PTR [rbx+0x3],0x74
  42af1e:	jne    0x42ac94
  42af24:	cmp    BYTE PTR [rbx+0x4],0x5f
  42af28:	jne    0x42ac94
  42af2e:	lea    rdi,[rbx+0x5]
  42af32:	mov    QWORD PTR [rbp+0x0],rdi
  42af36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42af40:	lea    r14,[rip+0x22160]        # 0x44d0a7
  42af47:	lea    rsi,[rip+0x2217a]        # 0x44d0c8
  42af4e:	mov    ebx,0x1
  42af53:	movzx  eax,BYTE PTR [rdi]
  42af56:	test   al,al
  42af58:	je     0x42aff9
  42af5e:	cmp    al,0x51
  42af60:	je     0x42b180
  42af66:	cmp    al,0x74
  42af68:	je     0x42b1c0
  42af6e:	cmp    al,0x4b
  42af70:	je     0x42b180
  42af76:	mov    rcx,QWORD PTR [rip+0x26663]        # 0x4515e0
  42af7d:	test   BYTE PTR [rcx+rax*2],0x4
  42af81:	jne    0x42b210
  42af87:	lea    rdx,[rip+0x17192]        # 0x442120
  42af8e:	mov    rcx,rdi
  42af91:	call   0x43f038
  42af96:	mov    r15d,eax
  42af99:	test   r15d,r15d
  42af9c:	jne    0x42b240
  42afa2:	movsxd r9,r15d
  42afa5:	add    rdi,r9
  42afa8:	mov    QWORD PTR [rbp+0x0],rdi
  42afac:	lea    rdx,[rip+0x1716d]        # 0x442120
  42afb3:	mov    rcx,rdi
  42afb6:	call   0x43f008
  42afbb:	test   rax,rax
  42afbe:	je     0x42b1f2
  42afc4:	cmp    rdi,rax
  42afc7:	jne    0x42ace0
  42afcd:	test   BYTE PTR [r12],0x4
  42afd2:	mov    rdx,rsi
  42afd5:	cmovne rdx,r14
  42afd9:	cmp    BYTE PTR [rdx],0x0
  42afdc:	jne    0x42b1e5
  42afe2:	mov    rax,QWORD PTR [rbp+0x0]
  42afe6:	lea    rdi,[rax+0x1]
  42afea:	mov    QWORD PTR [rbp+0x0],rdi
  42afee:	movzx  eax,BYTE PTR [rdi]
  42aff1:	test   al,al
  42aff3:	jne    0x42af5e
  42aff9:	lea    rdx,[rip+0x2273b]        # 0x44d73b
  42b000:	mov    rcx,r13
  42b003:	call   0x425940
  42b008:	jmp    0x42ace2
  42b00d:	nop    DWORD PTR [rax]
  42b010:	cmp    BYTE PTR [rbx+0x2],0x74
  42b014:	jne    0x42ac94
  42b01a:	movsx  edx,BYTE PTR [rbx+0x3]
  42b01e:	lea    rcx,[rip+0x170fb]        # 0x442120
  42b025:	call   0x43f050
  42b02a:	test   rax,rax
  42b02d:	je     0x42ac94
  42b033:	lea    rdi,[rbx+0x4]
  42b037:	mov    QWORD PTR [rbp+0x0],rdi
  42b03b:	jmp    0x42af40
  42b040:	test   dl,dl
  42b042:	jne    0x42aea0
  42b048:	lea    rsi,[rip+0x22694]        # 0x44d6e3
  42b04f:	jmp    0x42aea7
  42b054:	mov    DWORD PTR [rsp+0x28],0x1
  42b05c:	mov    DWORD PTR [rsp+0x20],0x1
  42b064:	xor    r9d,r9d
  42b067:	mov    r8,r13
  42b06a:	mov    rdx,rbp
  42b06d:	mov    rcx,r12
  42b070:	call   0x426d10
  42b075:	mov    ebx,eax
  42b077:	jmp    0x42aedb
  42b07c:	nop    DWORD PTR [rax+0x0]
  42b080:	mov    DWORD PTR [rsp+0x20],0x1
  42b088:	xor    r9d,r9d
  42b08b:	mov    r8,r13
  42b08e:	mov    rdx,rbp
  42b091:	mov    rcx,r12
  42b094:	call   0x427420
  42b099:	mov    ebx,eax
  42b09b:	jmp    0x42aedb
  42b0a0:	mov    DWORD PTR [rsp+0x28],0x1
  42b0a8:	mov    DWORD PTR [rsp+0x20],0x1
  42b0b0:	xor    r9d,r9d
  42b0b3:	mov    r8,r13
  42b0b6:	mov    rdx,rbp
  42b0b9:	mov    rcx,r12
  42b0bc:	call   0x426d10
  42b0c1:	mov    ebx,eax
  42b0c3:	test   ebx,ebx
  42b0c5:	je     0x42ace0
  42b0cb:	mov    rsi,QWORD PTR [rbp+0x0]
  42b0cf:	cmp    rsi,r14
  42b0d2:	jne    0x42ace0
  42b0d8:	add    rsi,0x1
  42b0dc:	test   BYTE PTR [r12],0x4
  42b0e1:	lea    rdx,[rip+0x21fe0]        # 0x44d0c8
  42b0e8:	lea    rax,[rip+0x21fb8]        # 0x44d0a7
  42b0ef:	mov    QWORD PTR [rbp+0x0],rsi
  42b0f3:	cmovne rdx,rax
  42b0f7:	cmp    BYTE PTR [rdx],0x0
  42b0fa:	jne    0x42b27a
  42b100:	mov    rcx,rsi
  42b103:	call   0x43f028
  42b108:	test   eax,eax
  42b10a:	je     0x42b128
  42b10c:	mov    r8d,eax
  42b10f:	mov    rdx,rsi
  42b112:	mov    rcx,r13
  42b115:	mov    QWORD PTR [rsp+0x38],rax
  42b11a:	call   0x425860
  42b11f:	mov    rsi,QWORD PTR [rbp+0x0]
  42b123:	mov    rax,QWORD PTR [rsp+0x38]
  42b128:	cdqe   
  42b12a:	add    rsi,rax
  42b12d:	mov    QWORD PTR [rbp+0x0],rsi
  42b131:	jmp    0x42ace2
  42b136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b140:	mov    DWORD PTR [rsp+0x20],0x1
  42b148:	xor    r9d,r9d
  42b14b:	mov    r8,r13
  42b14e:	mov    rdx,rbp
  42b151:	mov    rcx,r12
  42b154:	call   0x427420
  42b159:	mov    ebx,eax
  42b15b:	jmp    0x42b0c3
  42b160:	add    rbx,0x3
  42b164:	mov    QWORD PTR [rbp+0x0],rbx
  42b168:	add    DWORD PTR [r12+0x3c],0x1
  42b16e:	mov    ebx,0x1
  42b173:	jmp    0x42ace2
  42b178:	nop    DWORD PTR [rax+rax*1+0x0]
  42b180:	mov    DWORD PTR [rsp+0x20],0x1
  42b188:	xor    r9d,r9d
  42b18b:	mov    r8,r13
  42b18e:	mov    rdx,rbp
  42b191:	mov    rcx,r12
  42b194:	call   0x427420
  42b199:	mov    ebx,eax
  42b19b:	mov    rdi,QWORD PTR [rbp+0x0]
  42b19f:	lea    rdx,[rip+0x16f7a]        # 0x442120
  42b1a6:	mov    rcx,rdi
  42b1a9:	call   0x43f008
  42b1ae:	test   ebx,ebx
  42b1b0:	jne    0x42afbb
  42b1b6:	jmp    0x42ace0
  42b1bb:	nop    DWORD PTR [rax+rax*1+0x0]
  42b1c0:	mov    DWORD PTR [rsp+0x28],0x1
  42b1c8:	mov    DWORD PTR [rsp+0x20],0x1
  42b1d0:	xor    r9d,r9d
  42b1d3:	mov    r8,r13
  42b1d6:	mov    rdx,rbp
  42b1d9:	mov    rcx,r12
  42b1dc:	call   0x426d10
  42b1e1:	mov    ebx,eax
  42b1e3:	jmp    0x42b19b
  42b1e5:	mov    rcx,r13
  42b1e8:	call   0x425940
  42b1ed:	jmp    0x42afe2
  42b1f2:	mov    rdi,QWORD PTR [rbp+0x0]
  42b1f6:	jmp    0x42af53
  42b1fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42b200:	mov    rdx,rdi
  42b203:	mov    rcx,r13
  42b206:	call   0x425940
  42b20b:	jmp    0x42ae5f
  42b210:	mov    rcx,rbp
  42b213:	call   0x4251e0
  42b218:	mov    rdi,QWORD PTR [rbp+0x0]
  42b21c:	mov    r15d,eax
  42b21f:	mov    rcx,rdi
  42b222:	call   0x43f028
  42b227:	cmp    r15d,eax
  42b22a:	jg     0x42b270
  42b22c:	cmp    r15d,0xffffffff
  42b230:	jne    0x42af99
  42b236:	jmp    0x42ace0
  42b23b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b240:	mov    rdx,rdi
  42b243:	mov    r8d,r15d
  42b246:	mov    rcx,r13
  42b249:	call   0x425860
  42b24e:	mov    rdi,QWORD PTR [rbp+0x0]
  42b252:	jmp    0x42afa2
  42b257:	nop    WORD PTR [rax+rax*1+0x0]
  42b260:	test   ebx,ebx
  42b262:	je     0x42aded
  42b268:	jmp    0x42addb
  42b26d:	nop    DWORD PTR [rax]
  42b270:	mov    ebx,0x1
  42b275:	jmp    0x42afac
  42b27a:	mov    rcx,r13
  42b27d:	call   0x425940
  42b282:	mov    rsi,QWORD PTR [rbp+0x0]
  42b286:	jmp    0x42b100
  42b28b:	movzx  eax,BYTE PTR [r15+0x8]
  42b290:	cmp    al,BYTE PTR [r15+0xa]
  42b294:	jne    0x42addb
  42b29a:	lea    rcx,[rip+0x16e7f]        # 0x442120
  42b2a1:	movsx  edx,al
  42b2a4:	call   0x43f050
  42b2a9:	test   rax,rax
  42b2ac:	je     0x42addb
  42b2b2:	lea    rdx,[rip+0x222a1]        # 0x44d55a
  42b2b9:	mov    rcx,r13
  42b2bc:	mov    rsi,rbx
  42b2bf:	call   0x425940
  42b2c4:	add    rsi,QWORD PTR [rbp+0x0]
  42b2c8:	lea    rdx,[rip+0x16e51]        # 0x442120
  42b2cf:	mov    QWORD PTR [rbp+0x0],rsi
  42b2d3:	mov    rcx,rsi
  42b2d6:	call   0x43f008
  42b2db:	mov    r14,rax
  42b2de:	jmp    0x42adf5
  42b2e3:	nop    DWORD PTR [rax]
  42b2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b2f0:	push   r15
  42b2f2:	push   r14
  42b2f4:	push   r13
  42b2f6:	push   r12
  42b2f8:	push   rbp
  42b2f9:	push   rdi
  42b2fa:	push   rsi
  42b2fb:	push   rbx
  42b2fc:	sub    rsp,0x68
  42b300:	mov    ebp,DWORD PTR [rcx+0x38]
  42b303:	mov    r12d,DWORD PTR [rcx+0x3c]
  42b307:	test   rdx,rdx
  42b30a:	mov    r14d,DWORD PTR [rcx+0x48]
  42b30e:	mov    rbx,rcx
  42b311:	mov    QWORD PTR [rsp+0xb8],rdx
  42b319:	mov    r13d,DWORD PTR [rcx+0x40]
  42b31d:	mov    r15,rdx
  42b320:	mov    DWORD PTR [rcx+0x3c],0x0
  42b327:	mov    DWORD PTR [rcx+0x38],0x0
  42b32e:	mov    DWORD PTR [rcx+0x48],0x0
  42b335:	mov    DWORD PTR [rcx+0x4c],0x0
  42b33c:	je     0x42b51a
  42b342:	cmp    BYTE PTR [rdx],0x0
  42b345:	je     0x42b51a
  42b34b:	test   DWORD PTR [rcx],0x300
  42b351:	mov    QWORD PTR [rsp+0x50],0x0
  42b35a:	mov    QWORD PTR [rsp+0x48],0x0
  42b363:	mov    QWORD PTR [rsp+0x40],0x0
  42b36c:	jne    0x42b540
  42b372:	mov    rcx,r15
  42b375:	call   0x43f028
  42b37a:	cmp    rax,0x6
  42b37e:	jbe    0x42b5d1
  42b384:	lea    rdi,[rip+0x223bf]        # 0x44d74a
  42b38b:	mov    ecx,0x6
  42b390:	mov    rsi,r15
  42b393:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b395:	je     0x42b630
  42b39b:	lea    rdi,[rip+0x223af]        # 0x44d751
  42b3a2:	mov    ecx,0x6
  42b3a7:	mov    rsi,r15
  42b3aa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b3ac:	je     0x42b630
  42b3b2:	cmp    rax,0xa
  42b3b6:	jbe    0x42b5d1
  42b3bc:	lea    rdi,[rip+0x2218e]        # 0x44d551
  42b3c3:	mov    ecx,0x8
  42b3c8:	mov    rsi,r15
  42b3cb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b3cd:	jne    0x42b5d1
  42b3d3:	movsx  edx,BYTE PTR [r15+0x8]
  42b3d8:	lea    rcx,[rip+0x16d41]        # 0x442120
  42b3df:	call   0x43f050
  42b3e4:	test   rax,rax
  42b3e7:	je     0x42b953
  42b3ed:	movzx  edi,BYTE PTR [r15+0xa]
  42b3f2:	mov    QWORD PTR [rsp+0x20],r15
  42b3f7:	cmp    BYTE PTR [rax],dil
  42b3fa:	jne    0x42b648
  42b400:	movzx  eax,BYTE PTR [r15+0x9]
  42b405:	cmp    al,0x44
  42b407:	je     0x42b9b6
  42b40d:	cmp    al,0x49
  42b40f:	mov    QWORD PTR [rsp+0x20],r15
  42b414:	jne    0x42b648
  42b41a:	lea    r8,[r15+0xb]
  42b41e:	mov    DWORD PTR [rbx+0x38],0x2
  42b425:	mov    QWORD PTR [rsp+0xb8],r8
  42b42d:	lea    rdx,[rsp+0xb8]
  42b435:	lea    r8,[rsp+0x40]
  42b43a:	mov    rcx,rbx
  42b43d:	call   0x42ac70
  42b442:	test   eax,eax
  42b444:	jne    0x42b9df
  42b44a:	mov    rax,QWORD PTR [rsp+0xb8]
  42b452:	mov    QWORD PTR [rsp+0x20],rax
  42b457:	jmp    0x42b648
  42b45c:	nop    DWORD PTR [rax+0x0]
  42b460:	cmp    rsi,QWORD PTR [rsp+0x20]
  42b465:	je     0x42b822
  42b46b:	mov    eax,DWORD PTR [rbx]
  42b46d:	test   ah,0x8
  42b470:	je     0x42b740
  42b476:	cmp    BYTE PTR [rsi+0x2],0x70
  42b47a:	jne    0x42b740
  42b480:	movzx  edx,BYTE PTR [rsi+0x3]
  42b484:	cmp    dl,0x74
  42b487:	je     0x42b898
  42b48d:	test   ah,0x20
  42b490:	je     0x42b760
  42b496:	sub    edx,0x73
  42b499:	cmp    dl,0x1
  42b49c:	jbe    0x42b898
  42b4a2:	cmp    rsi,QWORD PTR [rsp+0x20]
  42b4a7:	je     0x42b8c7
  42b4ad:	lea    rdx,[rsp+0xb8]
  42b4b5:	lea    r8,[rsp+0x40]
  42b4ba:	mov    r9,rsi
  42b4bd:	mov    rcx,rbx
  42b4c0:	call   0x42aac0
  42b4c5:	mov    esi,eax
  42b4c7:	test   esi,esi
  42b4c9:	je     0x42b4dd
  42b4cb:	mov    r15,QWORD PTR [rsp+0xb8]
  42b4d3:	cmp    BYTE PTR [r15],0x0
  42b4d7:	jne    0x42b6a0
  42b4dd:	cmp    DWORD PTR [rbx+0x38],0x2
  42b4e1:	je     0x42b6c1
  42b4e7:	cmp    DWORD PTR [rbx+0x3c],0x2
  42b4eb:	je     0x42b780
  42b4f1:	cmp    DWORD PTR [rbx+0x4c],0x1
  42b4f5:	je     0x42b7a0
  42b4fb:	mov    rcx,rbx
  42b4fe:	call   0x4256b0
  42b503:	test   esi,esi
  42b505:	jne    0x42b5b0
  42b50b:	mov    rcx,QWORD PTR [rsp+0x40]
  42b510:	test   rcx,rcx
  42b513:	je     0x42b51a
  42b515:	call   0x43f100
  42b51a:	xor    eax,eax
  42b51c:	mov    DWORD PTR [rbx+0x38],ebp
  42b51f:	mov    DWORD PTR [rbx+0x3c],r12d
  42b523:	mov    DWORD PTR [rbx+0x40],r13d
  42b527:	mov    DWORD PTR [rbx+0x48],r14d
  42b52b:	add    rsp,0x68
  42b52f:	pop    rbx
  42b530:	pop    rsi
  42b531:	pop    rdi
  42b532:	pop    rbp
  42b533:	pop    r12
  42b535:	pop    r13
  42b537:	pop    r14
  42b539:	pop    r15
  42b53b:	ret    
  42b53c:	nop    DWORD PTR [rax+0x0]
  42b540:	lea    rdx,[rsp+0xb8]
  42b548:	lea    r8,[rsp+0x40]
  42b54d:	call   0x42ac70
  42b552:	test   eax,eax
  42b554:	mov    esi,eax
  42b556:	mov    r15,QWORD PTR [rsp+0xb8]
  42b55e:	jne    0x42b4d3
  42b564:	mov    rcx,rbx
  42b567:	call   0x4256b0
  42b56c:	mov    rcx,rbx
  42b56f:	call   0x425320
  42b574:	mov    rcx,QWORD PTR [rsp+0x40]
  42b579:	test   rcx,rcx
  42b57c:	je     0x42b59e
  42b57e:	call   0x43f100
  42b583:	mov    QWORD PTR [rsp+0x48],0x0
  42b58c:	mov    QWORD PTR [rsp+0x50],0x0
  42b595:	mov    QWORD PTR [rsp+0x40],0x0
  42b59e:	mov    r15,QWORD PTR [rsp+0xb8]
  42b5a6:	jmp    0x42b372
  42b5ab:	nop    DWORD PTR [rax+rax*1+0x0]
  42b5b0:	lea    rcx,[rsp+0x40]
  42b5b5:	lea    rdx,[rip+0x21a04]        # 0x44cfc0
  42b5bc:	mov    r8d,0x1
  42b5c2:	call   0x425860
  42b5c7:	mov    rax,QWORD PTR [rsp+0x40]
  42b5cc:	jmp    0x42b51c
  42b5d1:	test   DWORD PTR [rbx],0x3800
  42b5d7:	mov    QWORD PTR [rsp+0x20],r15
  42b5dc:	je     0x42b648
  42b5de:	lea    rdi,[rip+0x22173]        # 0x44d758
  42b5e5:	mov    ecx,0x7
  42b5ea:	mov    rsi,r15
  42b5ed:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b5ef:	je     0x42b805
  42b5f5:	mov    rsi,QWORD PTR [rsp+0x20]
  42b5fa:	lea    rdi,[rip+0x2215f]        # 0x44d760
  42b601:	mov    ecx,0x7
  42b606:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b608:	jne    0x42b648
  42b60a:	mov    r15,QWORD PTR [rsp+0x20]
  42b60f:	mov    DWORD PTR [rbx+0x38],0x2
  42b616:	add    r15,0x7
  42b61a:	mov    QWORD PTR [rsp+0xb8],r15
  42b622:	mov    QWORD PTR [rsp+0x20],r15
  42b627:	jmp    0x42b648
  42b629:	nop    DWORD PTR [rax+0x0]
  42b630:	add    r15,0x6
  42b634:	mov    DWORD PTR [rbx+0x4c],0x1
  42b63b:	mov    QWORD PTR [rsp+0xb8],r15
  42b643:	mov    QWORD PTR [rsp+0x20],r15
  42b648:	mov    rcx,QWORD PTR [rsp+0x20]
  42b64d:	jmp    0x42b65e
  42b64f:	nop
  42b650:	cmp    BYTE PTR [rax+0x1],0x5f
  42b654:	lea    rcx,[rax+0x1]
  42b658:	je     0x42b6e0
  42b65e:	mov    edx,0x5f
  42b663:	call   0x43f050
  42b668:	test   rax,rax
  42b66b:	mov    rsi,rax
  42b66e:	jne    0x42b650
  42b670:	cmp    DWORD PTR [rbx+0x38],0x2
  42b674:	je     0x42b7c0
  42b67a:	cmp    DWORD PTR [rbx+0x3c],0x2
  42b67e:	je     0x42b7c0
  42b684:	xor    esi,esi
  42b686:	cmp    DWORD PTR [rbx+0x4c],0x1
  42b68a:	je     0x42b7a0
  42b690:	mov    rcx,rbx
  42b693:	call   0x4256b0
  42b698:	jmp    0x42b50b
  42b69d:	nop    DWORD PTR [rax]
  42b6a0:	lea    rdx,[rsp+0xb8]
  42b6a8:	lea    r8,[rsp+0x40]
  42b6ad:	mov    rcx,rbx
  42b6b0:	call   0x42a0c0
  42b6b5:	cmp    DWORD PTR [rbx+0x38],0x2
  42b6b9:	mov    esi,eax
  42b6bb:	jne    0x42b4e7
  42b6c1:	lea    rcx,[rsp+0x40]
  42b6c6:	lea    rdx,[rip+0x220a6]        # 0x44d773
  42b6cd:	call   0x425900
  42b6d2:	mov    DWORD PTR [rbx+0x38],0x0
  42b6d9:	jmp    0x42b4fb
  42b6de:	xchg   ax,ax
  42b6e0:	test   rcx,rcx
  42b6e3:	je     0x42b670
  42b6e5:	lea    rdx,[rip+0x2207c]        # 0x44d768
  42b6ec:	mov    rcx,rax
  42b6ef:	call   0x43eff8
  42b6f4:	cmp    eax,0x2
  42b6f7:	jle    0x42b709
  42b6f9:	cdqe   
  42b6fb:	lea    rsi,[rsi+rax*1-0x2]
  42b700:	test   rsi,rsi
  42b703:	je     0x42b670
  42b709:	mov    eax,DWORD PTR [rbx+0x40]
  42b70c:	test   eax,eax
  42b70e:	je     0x42b460
  42b714:	movzx  ecx,BYTE PTR [rsi]
  42b717:	mov    rdx,QWORD PTR [rip+0x25ec2]        # 0x4515e0
  42b71e:	test   BYTE PTR [rdx+rcx*2],0x4
  42b722:	jne    0x42b72d
  42b724:	cmp    cl,0x74
  42b727:	jne    0x42b670
  42b72d:	mov    r15,QWORD PTR [rsp+0x20]
  42b732:	mov    esi,0x1
  42b737:	jmp    0x42b4d3
  42b73c:	nop    DWORD PTR [rax+0x0]
  42b740:	test   ah,0x20
  42b743:	je     0x42b760
  42b745:	movzx  eax,BYTE PTR [rsi+0x2]
  42b749:	cmp    al,0x74
  42b74b:	je     0x42b88e
  42b751:	cmp    al,0x70
  42b753:	jne    0x42b760
  42b755:	movzx  edx,BYTE PTR [rsi+0x3]
  42b759:	jmp    0x42b496
  42b75e:	xchg   ax,ax
  42b760:	cmp    rsi,QWORD PTR [rsp+0x20]
  42b765:	je     0x42b8c7
  42b76b:	movzx  eax,BYTE PTR [rsi+0x2]
  42b76f:	test   al,al
  42b771:	je     0x42b670
  42b777:	jmp    0x42b4ad
  42b77c:	nop    DWORD PTR [rax+0x0]
  42b780:	lea    rcx,[rsp+0x40]
  42b785:	lea    rdx,[rip+0x22005]        # 0x44d791
  42b78c:	call   0x425900
  42b791:	mov    DWORD PTR [rbx+0x3c],0x0
  42b798:	jmp    0x42b4fb
  42b79d:	nop    DWORD PTR [rax]
  42b7a0:	lea    rcx,[rsp+0x40]
  42b7a5:	lea    rdx,[rip+0x22002]        # 0x44d7ae
  42b7ac:	call   0x425900
  42b7b1:	mov    DWORD PTR [rbx+0x4c],0x0
  42b7b8:	jmp    0x42b4fb
  42b7bd:	nop    DWORD PTR [rax]
  42b7c0:	mov    r15,QWORD PTR [rsp+0xb8]
  42b7c8:	test   r15,r15
  42b7cb:	je     0x42b7e8
  42b7cd:	cmp    BYTE PTR [r15],0x0
  42b7d1:	je     0x42b7e8
  42b7d3:	lea    rcx,[rsp+0x40]
  42b7d8:	mov    rdx,r15
  42b7db:	call   0x425940
  42b7e0:	mov    r15,QWORD PTR [rsp+0xb8]
  42b7e8:	mov    rcx,r15
  42b7eb:	mov    esi,0x1
  42b7f0:	call   0x43f028
  42b7f5:	add    r15,rax
  42b7f8:	mov    QWORD PTR [rsp+0xb8],r15
  42b800:	jmp    0x42b4d3
  42b805:	add    r15,0x7
  42b809:	mov    DWORD PTR [rbx+0x3c],0x2
  42b810:	mov    QWORD PTR [rsp+0xb8],r15
  42b818:	mov    QWORD PTR [rsp+0x20],r15
  42b81d:	jmp    0x42b648
  42b822:	movzx  edx,BYTE PTR [rsi+0x2]
  42b826:	mov    rax,QWORD PTR [rip+0x25db3]        # 0x4515e0
  42b82d:	movzx  eax,WORD PTR [rax+rdx*2]
  42b831:	mov    r8,rdx
  42b834:	shr    ax,0x2
  42b838:	and    eax,0x1
  42b83b:	cmp    dl,0x74
  42b83e:	sete   cl
  42b841:	cmp    dl,0x51
  42b844:	sete   dl
  42b847:	or     ecx,edx
  42b849:	cmp    r8b,0x4b
  42b84d:	sete   dl
  42b850:	or     edx,ecx
  42b852:	cmp    r8b,0x48
  42b856:	sete   cl
  42b859:	or     dl,cl
  42b85b:	jne    0x42b865
  42b85d:	test   al,al
  42b85f:	je     0x42b46b
  42b865:	test   al,al
  42b867:	mov    edx,DWORD PTR [rbx]
  42b869:	je     0x42b874
  42b86b:	test   dh,0x1c
  42b86e:	jne    0x42b95d
  42b874:	and    dh,0x3c
  42b877:	jne    0x42b87d
  42b879:	add    DWORD PTR [rbx+0x38],0x1
  42b87d:	lea    r15,[rsi+0x2]
  42b881:	mov    QWORD PTR [rsp+0xb8],r15
  42b889:	jmp    0x42b732
  42b88e:	cmp    BYTE PTR [rsi+0x3],0x6d
  42b892:	jne    0x42b4ad
  42b898:	mov    rcx,QWORD PTR [rsp+0x20]
  42b89d:	call   0x43f028
  42b8a2:	lea    rdx,[rsp+0xb8]
  42b8aa:	lea    r9,[rsp+0x40]
  42b8af:	mov    r8d,eax
  42b8b2:	mov    rcx,rbx
  42b8b5:	call   0x428820
  42b8ba:	mov    r15,QWORD PTR [rsp+0xb8]
  42b8c2:	jmp    0x42b732
  42b8c7:	mov    rax,QWORD PTR [rsp+0x20]
  42b8cc:	mov    rdx,QWORD PTR [rip+0x25d0d]        # 0x4515e0
  42b8d3:	movzx  ecx,BYTE PTR [rax+0x2]
  42b8d7:	test   BYTE PTR [rdx+rcx*2],0x4
  42b8db:	jne    0x42b76b
  42b8e1:	cmp    cl,0x74
  42b8e4:	je     0x42b76b
  42b8ea:	test   DWORD PTR [rbx],0x3c00
  42b8f0:	je     0x42b906
  42b8f2:	jmp    0x42b9ec
  42b8f7:	nop    WORD PTR [rax+rax*1+0x0]
  42b900:	add    QWORD PTR [rsp+0x20],0x1
  42b906:	mov    rax,QWORD PTR [rsp+0x20]
  42b90b:	cmp    BYTE PTR [rax],0x5f
  42b90e:	je     0x42b900
  42b910:	mov    rcx,QWORD PTR [rsp+0x20]
  42b915:	lea    rdx,[rip+0x21db4]        # 0x44d6d0
  42b91c:	call   0x43eff0
  42b921:	test   rax,rax
  42b924:	mov    r9,rax
  42b927:	je     0x42b670
  42b92d:	cmp    BYTE PTR [rax+0x2],0x0
  42b931:	je     0x42b670
  42b937:	lea    rdx,[rsp+0xb8]
  42b93f:	lea    r8,[rsp+0x40]
  42b944:	mov    rcx,rbx
  42b947:	call   0x42aac0
  42b94c:	mov    esi,eax
  42b94e:	jmp    0x42b4c7
  42b953:	mov    QWORD PTR [rsp+0x20],r15
  42b958:	jmp    0x42b648
  42b95d:	lea    rcx,[rsp+0xb8]
  42b965:	add    rsi,0x2
  42b969:	mov    QWORD PTR [rsp+0xb8],rsi
  42b971:	call   0x4251e0
  42b976:	mov    r15,QWORD PTR [rsp+0xb8]
  42b97e:	test   r15,r15
  42b981:	je     0x42b99e
  42b983:	cmp    BYTE PTR [r15],0x0
  42b987:	je     0x42b99e
  42b989:	lea    rcx,[rsp+0x40]
  42b98e:	mov    rdx,r15
  42b991:	call   0x425940
  42b996:	mov    r15,QWORD PTR [rsp+0xb8]
  42b99e:	mov    rcx,r15
  42b9a1:	call   0x43f028
  42b9a6:	add    r15,rax
  42b9a9:	mov    QWORD PTR [rsp+0xb8],r15
  42b9b1:	jmp    0x42b732
  42b9b6:	add    r15,0xb
  42b9ba:	mov    DWORD PTR [rbx+0x3c],0x2
  42b9c1:	mov    QWORD PTR [rsp+0xb8],r15
  42b9c9:	jmp    0x42b42d
  42b9ce:	lea    rcx,[rsp+0x40]
  42b9d3:	lea    rdx,[rip+0x21d61]        # 0x44d73b
  42b9da:	call   0x425940
  42b9df:	mov    r15,QWORD PTR [rsp+0xb8]
  42b9e7:	jmp    0x42b732
  42b9ec:	mov    rsi,QWORD PTR [rsp+0x20]
  42b9f1:	lea    rdi,[rip+0x21d72]        # 0x44d76a
  42b9f8:	mov    ecx,0x8
  42b9fd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42b9ff:	jne    0x42b906
  42ba05:	mov    rdi,QWORD PTR [rsp+0x20]
  42ba0a:	lea    rsi,[rsp+0x38]
  42ba0f:	movzx  edx,BYTE PTR [rdi+0x8]
  42ba13:	mov    rax,rdi
  42ba16:	add    rax,0x8
  42ba1a:	mov    QWORD PTR [rsp+0x38],rax
  42ba1f:	test   dl,dl
  42ba21:	je     0x42ba5d
  42ba23:	mov    rcx,rsi
  42ba26:	call   0x4251e0
  42ba2b:	cmp    eax,0xffffffff
  42ba2e:	je     0x42b906
  42ba34:	cdqe   
  42ba36:	add    rax,QWORD PTR [rsp+0x38]
  42ba3b:	mov    QWORD PTR [rsp+0x38],rax
  42ba40:	movzx  edx,BYTE PTR [rax]
  42ba43:	cmp    dl,0x5f
  42ba46:	jne    0x42ba1f
  42ba48:	cmp    BYTE PTR [rax+0x1],0x5f
  42ba4c:	jne    0x42ba23
  42ba4e:	lea    rdx,[rax+0x2]
  42ba52:	mov    QWORD PTR [rsp+0x38],rdx
  42ba57:	movzx  edx,BYTE PTR [rax+0x2]
  42ba5b:	jmp    0x42ba1f
  42ba5d:	mov    rax,QWORD PTR [rsp+0xb8]
  42ba65:	lea    rsi,[rsp+0x40]
  42ba6a:	lea    rdx,[rax+0x8]
  42ba6e:	mov    QWORD PTR [rsp+0xb8],rdx
  42ba76:	movzx  edx,BYTE PTR [rax+0x8]
  42ba7a:	lea    rax,[rsp+0xb8]
  42ba82:	mov    QWORD PTR [rsp+0x28],rax
  42ba87:	test   dl,dl
  42ba89:	je     0x42b9ce
  42ba8f:	mov    rcx,QWORD PTR [rsp+0x28]
  42ba94:	call   0x4251e0
  42ba99:	cmp    eax,0xffffffff
  42ba9c:	mov    edi,eax
  42ba9e:	je     0x42b906
  42baa4:	mov    r15,QWORD PTR [rsp+0xb8]
  42baac:	mov    rcx,r15
  42baaf:	call   0x43f028
  42bab4:	cmp    edi,eax
  42bab6:	jg     0x42b906
  42babc:	test   edi,edi
  42babe:	jne    0x42bb10
  42bac0:	movsxd r9,edi
  42bac3:	lea    rax,[r15+r9*1]
  42bac7:	mov    QWORD PTR [rsp+0xb8],rax
  42bacf:	movzx  edx,BYTE PTR [rax]
  42bad2:	cmp    dl,0x5f
  42bad5:	jne    0x42ba87
  42bad7:	cmp    BYTE PTR [rax+0x1],0x5f
  42badb:	jne    0x42ba8f
  42badd:	lea    rdx,[rip+0x215e4]        # 0x44d0c8
  42bae4:	mov    rcx,rsi
  42bae7:	call   0x425900
  42baec:	mov    rax,QWORD PTR [rsp+0xb8]
  42baf4:	lea    rdx,[rax+0x2]
  42baf8:	mov    QWORD PTR [rsp+0xb8],rdx
  42bb00:	movzx  edx,BYTE PTR [rax+0x2]
  42bb04:	jmp    0x42ba87
  42bb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bb10:	mov    rdx,r15
  42bb13:	mov    r8d,edi
  42bb16:	mov    rcx,rsi
  42bb19:	call   0x4258a0
  42bb1e:	mov    r15,QWORD PTR [rsp+0xb8]
  42bb26:	jmp    0x42bac0
  42bb28:	nop
  42bb29:	nop
  42bb2a:	nop
  42bb2b:	nop
  42bb2c:	nop
  42bb2d:	nop
  42bb2e:	nop
  42bb2f:	nop
  42bb30:	push   rbx
  42bb31:	cmp    edx,0x4c
  42bb34:	ja     0x42bba0
  42bb36:	lea    rax,[rip+0x22b43]        # 0x44e680
  42bb3d:	mov    r10d,edx
  42bb40:	movsxd r10,DWORD PTR [rax+r10*4]
  42bb44:	add    rax,r10
  42bb47:	jmp    rax
  42bb49:	nop    DWORD PTR [rax+0x0]
  42bb50:	test   r8,r8
  42bb53:	je     0x42bba0
  42bb55:	mov    r11d,DWORD PTR [rcx+0x28]
  42bb59:	xor    eax,eax
  42bb5b:	cmp    r11d,DWORD PTR [rcx+0x2c]
  42bb5f:	jge    0x42bb8b
  42bb61:	movsxd r10,r11d
  42bb64:	add    r11d,0x1
  42bb68:	lea    rbx,[r10+r10*2]
  42bb6c:	mov    r10,QWORD PTR [rcx+0x20]
  42bb70:	mov    DWORD PTR [rcx+0x28],r11d
  42bb74:	lea    r10,[r10+rbx*8]
  42bb78:	test   r10,r10
  42bb7b:	je     0x42bb8b
  42bb7d:	mov    DWORD PTR [r10],edx
  42bb80:	mov    QWORD PTR [r10+0x8],r8
  42bb84:	mov    rax,r10
  42bb87:	mov    QWORD PTR [r10+0x10],r9
  42bb8b:	pop    rbx
  42bb8c:	ret    
  42bb8d:	nop    DWORD PTR [rax]
  42bb90:	test   r8,r8
  42bb93:	je     0x42bba0
  42bb95:	test   r9,r9
  42bb98:	jne    0x42bb55
  42bb9a:	nop    WORD PTR [rax+rax*1+0x0]
  42bba0:	xor    eax,eax
  42bba2:	pop    rbx
  42bba3:	ret    
  42bba4:	xchg   ax,ax
  42bba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bbb0:	mov    r9d,DWORD PTR [rcx+0x28]
  42bbb4:	cmp    r9d,DWORD PTR [rcx+0x2c]
  42bbb8:	jge    0x42bc00
  42bbba:	movsxd rax,r9d
  42bbbd:	add    r9d,0x1
  42bbc1:	lea    r10,[rax+rax*2]
  42bbc5:	mov    rax,QWORD PTR [rcx+0x20]
  42bbc9:	mov    DWORD PTR [rcx+0x28],r9d
  42bbcd:	lea    rax,[rax+r10*8]
  42bbd1:	test   rax,rax
  42bbd4:	sete   r9b
  42bbd8:	test   rdx,rdx
  42bbdb:	sete   cl
  42bbde:	or     r9b,cl
  42bbe1:	jne    0x42bc00
  42bbe3:	test   r8d,r8d
  42bbe6:	je     0x42bc00
  42bbe8:	mov    DWORD PTR [rax],0x0
  42bbee:	mov    QWORD PTR [rax+0x8],rdx
  42bbf2:	mov    DWORD PTR [rax+0x10],r8d
  42bbf6:	ret    
  42bbf7:	nop    WORD PTR [rax+rax*1+0x0]
  42bc00:	xor    eax,eax
  42bc02:	ret    
  42bc03:	nop    DWORD PTR [rax]
  42bc06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc10:	push   rbp
  42bc11:	push   rdi
  42bc12:	push   rsi
  42bc13:	push   rbx
  42bc14:	sub    rsp,0x28
  42bc18:	mov    rax,QWORD PTR [rcx+0x18]
  42bc1c:	mov    rbx,rcx
  42bc1f:	mov    rbp,rdx
  42bc22:	mov    edi,r8d
  42bc25:	mov    rsi,rdx
  42bc28:	movzx  ecx,BYTE PTR [rax]
  42bc2b:	jmp    0x42bc72
  42bc2d:	nop    DWORD PTR [rax]
  42bc30:	test   al,al
  42bc32:	jne    0x42bc80
  42bc34:	cmp    cl,0x4b
  42bc37:	jne    0x42bcc0
  42bc3d:	add    QWORD PTR [rbx+0x18],0x1
  42bc42:	cmp    edi,0x1
  42bc45:	sbb    edx,edx
  42bc47:	add    DWORD PTR [rbx+0x50],0x6
  42bc4b:	and    edx,0xfffffffd
  42bc4e:	add    edx,0x1e
  42bc51:	xor    r9d,r9d
  42bc54:	xor    r8d,r8d
  42bc57:	mov    rcx,rbx
  42bc5a:	call   0x42bb30
  42bc5f:	test   rax,rax
  42bc62:	mov    QWORD PTR [rsi],rax
  42bc65:	je     0x42bcb5
  42bc67:	lea    rsi,[rax+0x8]
  42bc6b:	mov    rax,QWORD PTR [rbx+0x18]
  42bc6f:	movzx  ecx,BYTE PTR [rax]
  42bc72:	cmp    cl,0x72
  42bc75:	sete   al
  42bc78:	cmp    cl,0x56
  42bc7b:	sete   dl
  42bc7e:	jne    0x42bc30
  42bc80:	add    QWORD PTR [rbx+0x18],0x1
  42bc85:	test   al,al
  42bc87:	je     0x42bca0
  42bc89:	cmp    edi,0x1
  42bc8c:	sbb    edx,edx
  42bc8e:	add    DWORD PTR [rbx+0x50],0x9
  42bc92:	and    edx,0xfffffffd
  42bc95:	add    edx,0x1c
  42bc98:	jmp    0x42bc51
  42bc9a:	nop    WORD PTR [rax+rax*1+0x0]
  42bca0:	test   dl,dl
  42bca2:	je     0x42bc42
  42bca4:	cmp    edi,0x1
  42bca7:	sbb    edx,edx
  42bca9:	add    DWORD PTR [rbx+0x50],0x9
  42bcad:	and    edx,0xfffffffd
  42bcb0:	add    edx,0x1d
  42bcb3:	jmp    0x42bc51
  42bcb5:	xor    eax,eax
  42bcb7:	add    rsp,0x28
  42bcbb:	pop    rbx
  42bcbc:	pop    rsi
  42bcbd:	pop    rdi
  42bcbe:	pop    rbp
  42bcbf:	ret    
  42bcc0:	test   edi,edi
  42bcc2:	jne    0x42bd10
  42bcc4:	cmp    cl,0x46
  42bcc7:	jne    0x42bd10
  42bcc9:	cmp    rbp,rsi
  42bccc:	jne    0x42bcea
  42bcce:	jmp    0x42bd10
  42bcd0:	cmp    eax,0x1b
  42bcd3:	je     0x42bd20
  42bcd5:	cmp    eax,0x19
  42bcd8:	jne    0x42bce1
  42bcda:	mov    DWORD PTR [rbp+0x0],0x1c
  42bce1:	add    rbp,0x8
  42bce5:	cmp    rbp,rsi
  42bce8:	je     0x42bd10
  42bcea:	mov    rbp,QWORD PTR [rbp+0x0]
  42bcee:	mov    eax,DWORD PTR [rbp+0x0]
  42bcf1:	cmp    eax,0x1a
  42bcf4:	jne    0x42bcd0
  42bcf6:	mov    DWORD PTR [rbp+0x0],0x1d
  42bcfd:	add    rbp,0x8
  42bd01:	cmp    rbp,rsi
  42bd04:	jne    0x42bcea
  42bd06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd10:	mov    rax,rsi
  42bd13:	add    rsp,0x28
  42bd17:	pop    rbx
  42bd18:	pop    rsi
  42bd19:	pop    rdi
  42bd1a:	pop    rbp
  42bd1b:	ret    
  42bd1c:	nop    DWORD PTR [rax+0x0]
  42bd20:	mov    DWORD PTR [rbp+0x0],0x1e
  42bd27:	jmp    0x42bce1
  42bd29:	nop    DWORD PTR [rax+0x0]
  42bd30:	mov    r9,QWORD PTR [rcx+0x18]
  42bd34:	mov    r8,rdx
  42bd37:	movzx  r10d,BYTE PTR [r9]
  42bd3b:	cmp    r10b,0x52
  42bd3f:	sete   al
  42bd42:	cmp    r10b,0x4f
  42bd46:	je     0x42bd50
  42bd48:	test   al,al
  42bd4a:	jne    0x42bd70
  42bd4c:	mov    rax,rdx
  42bd4f:	ret    
  42bd50:	test   al,al
  42bd52:	jne    0x42bd70
  42bd54:	add    DWORD PTR [rcx+0x50],0x3
  42bd58:	add    r9,0x1
  42bd5c:	mov    edx,0x20
  42bd61:	mov    QWORD PTR [rcx+0x18],r9
  42bd65:	xor    r9d,r9d
  42bd68:	jmp    0x42bb30
  42bd6d:	nop    DWORD PTR [rax]
  42bd70:	add    DWORD PTR [rcx+0x50],0x2
  42bd74:	add    r9,0x1
  42bd78:	mov    edx,0x1f
  42bd7d:	mov    QWORD PTR [rcx+0x18],r9
  42bd81:	xor    r9d,r9d
  42bd84:	jmp    0x42bb30
  42bd89:	nop    DWORD PTR [rax+0x0]
  42bd90:	push   rdi
  42bd91:	push   rsi
  42bd92:	push   rbx
  42bd93:	mov    rax,QWORD PTR [rcx+0x18]
  42bd97:	cmp    BYTE PTR [rax],0x53
  42bd9a:	je     0x42bda2
  42bd9c:	xor    eax,eax
  42bd9e:	pop    rbx
  42bd9f:	pop    rsi
  42bda0:	pop    rdi
  42bda1:	ret    
  42bda2:	lea    r8,[rax+0x1]
  42bda6:	mov    QWORD PTR [rcx+0x18],r8
  42bdaa:	cmp    BYTE PTR [rax+0x1],0x0
  42bdae:	jne    0x42be03
  42bdb0:	xor    eax,eax
  42bdb2:	mov    r8d,DWORD PTR [rcx+0x10]
  42bdb6:	shr    r8d,0x3
  42bdba:	and    r8d,0x1
  42bdbe:	test   edx,edx
  42bdc0:	setne  dl
  42bdc3:	cmp    r8b,dl
  42bdc6:	jae    0x42bdd9
  42bdc8:	mov    rdx,QWORD PTR [rcx+0x18]
  42bdcc:	movzx  edx,BYTE PTR [rdx]
  42bdcf:	sub    edx,0x43
  42bdd2:	cmp    dl,0x1
  42bdd5:	setbe  r8b
  42bdd9:	lea    rdx,[rip+0x236a0]        # 0x44f480
  42bde0:	lea    r9,[rip+0x23821]        # 0x44f608
  42bde7:	movzx  r8d,r8b
  42bdeb:	nop    DWORD PTR [rax+rax*1+0x0]
  42bdf0:	cmp    al,BYTE PTR [rdx]
  42bdf2:	je     0x42bea7
  42bdf8:	add    rdx,0x38
  42bdfc:	cmp    rdx,r9
  42bdff:	jne    0x42bdf0
  42be01:	jmp    0x42bd9c
  42be03:	lea    r8,[rax+0x2]
  42be07:	mov    QWORD PTR [rcx+0x18],r8
  42be0b:	movsx  eax,BYTE PTR [rax+0x1]
  42be0f:	lea    r8d,[rax-0x30]
  42be13:	cmp    r8b,0x9
  42be17:	jbe    0x42be21
  42be19:	cmp    al,0x5f
  42be1b:	jne    0x42bf53
  42be21:	cmp    al,0x5f
  42be23:	je     0x42be84
  42be25:	xor    edx,edx
  42be27:	jmp    0x42be5d
  42be29:	nop    DWORD PTR [rax+0x0]
  42be30:	lea    r8d,[rdx+rdx*8]
  42be34:	lea    r8d,[rax+r8*4-0x30]
  42be39:	cmp    edx,r8d
  42be3c:	ja     0x42bd9c
  42be42:	mov    rax,QWORD PTR [rcx+0x18]
  42be46:	cmp    BYTE PTR [rax],0x0
  42be49:	je     0x42be80
  42be4b:	lea    rdx,[rax+0x1]
  42be4f:	mov    QWORD PTR [rcx+0x18],rdx
  42be53:	movsx  eax,BYTE PTR [rax]
  42be56:	cmp    al,0x5f
  42be58:	je     0x42bea1
  42be5a:	mov    edx,r8d
  42be5d:	lea    r8d,[rax-0x30]
  42be61:	cmp    r8b,0x9
  42be65:	jbe    0x42be30
  42be67:	lea    r8d,[rax-0x41]
  42be6b:	cmp    r8b,0x19
  42be6f:	ja     0x42bd9c
  42be75:	lea    r8d,[rdx+rdx*8]
  42be79:	lea    r8d,[rax+r8*4-0x37]
  42be7e:	jmp    0x42be39
  42be80:	xor    eax,eax
  42be82:	jmp    0x42be5a
  42be84:	xor    r8d,r8d
  42be87:	cmp    r8d,DWORD PTR [rcx+0x38]
  42be8b:	jae    0x42bd9c
  42be91:	mov    rax,QWORD PTR [rcx+0x30]
  42be95:	add    DWORD PTR [rcx+0x40],0x1
  42be99:	mov    rax,QWORD PTR [rax+r8*8]
  42be9d:	pop    rbx
  42be9e:	pop    rsi
  42be9f:	pop    rdi
  42bea0:	ret    
  42bea1:	add    r8d,0x1
  42bea5:	jmp    0x42be87
  42bea7:	mov    r11,QWORD PTR [rdx+0x28]
  42beab:	test   r11,r11
  42beae:	je     0x42bf40
  42beb4:	mov    r9d,DWORD PTR [rcx+0x28]
  42beb8:	mov    r10d,DWORD PTR [rcx+0x2c]
  42bebc:	xor    ebx,ebx
  42bebe:	mov    esi,DWORD PTR [rdx+0x30]
  42bec1:	cmp    r9d,r10d
  42bec4:	jge    0x42bef2
  42bec6:	movsxd rax,r9d
  42bec9:	add    r9d,0x1
  42becd:	lea    rdi,[rax+rax*2]
  42bed1:	mov    rax,QWORD PTR [rcx+0x20]
  42bed5:	mov    DWORD PTR [rcx+0x28],r9d
  42bed9:	lea    rax,[rax+rdi*8]
  42bedd:	test   rax,rax
  42bee0:	je     0x42bef2
  42bee2:	mov    DWORD PTR [rax],0x18
  42bee8:	mov    QWORD PTR [rax+0x8],r11
  42beec:	mov    rbx,rax
  42beef:	mov    DWORD PTR [rax+0x10],esi
  42bef2:	mov    QWORD PTR [rcx+0x48],rbx
  42bef6:	test   r8d,r8d
  42bef9:	je     0x42bf4a
  42befb:	mov    r8,QWORD PTR [rdx+0x18]
  42beff:	mov    edx,DWORD PTR [rdx+0x20]
  42bf02:	add    DWORD PTR [rcx+0x50],edx
  42bf05:	cmp    r10d,r9d
  42bf08:	jle    0x42bd9c
  42bf0e:	movsxd rax,r9d
  42bf11:	add    r9d,0x1
  42bf15:	lea    r10,[rax+rax*2]
  42bf19:	mov    rax,QWORD PTR [rcx+0x20]
  42bf1d:	mov    DWORD PTR [rcx+0x28],r9d
  42bf21:	lea    rax,[rax+r10*8]
  42bf25:	test   rax,rax
  42bf28:	je     0x42bd9c
  42bf2e:	mov    DWORD PTR [rax],0x18
  42bf34:	mov    QWORD PTR [rax+0x8],r8
  42bf38:	mov    DWORD PTR [rax+0x10],edx
  42bf3b:	jmp    0x42bd9e
  42bf40:	mov    r10d,DWORD PTR [rcx+0x2c]
  42bf44:	mov    r9d,DWORD PTR [rcx+0x28]
  42bf48:	jmp    0x42bef6
  42bf4a:	mov    r8,QWORD PTR [rdx+0x8]
  42bf4e:	mov    edx,DWORD PTR [rdx+0x10]
  42bf51:	jmp    0x42bf02
  42bf53:	lea    r8d,[rax-0x41]
  42bf57:	cmp    r8b,0x19
  42bf5b:	jbe    0x42be25
  42bf61:	jmp    0x42bdb2
  42bf66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf70:	push   rbp
  42bf71:	push   rdi
  42bf72:	push   rsi
  42bf73:	push   rbx
  42bf74:	sub    rsp,0x28
  42bf78:	lea    rsi,[rip+0x22835]        # 0x44e7b4
  42bf7f:	test   r8,r8
  42bf82:	mov    rdi,rcx
  42bf85:	mov    rbp,rdx
  42bf88:	mov    rbx,r8
  42bf8b:	je     0x42bfa9
  42bf8d:	nop    DWORD PTR [rax]
  42bf90:	cmp    DWORD PTR [rbx],0x4c
  42bf93:	ja     0x42bfa9
  42bf95:	mov    eax,DWORD PTR [rbx]
  42bf97:	movsxd rax,DWORD PTR [rsi+rax*4]
  42bf9b:	add    rax,rsi
  42bf9e:	jmp    rax
  42bfa0:	mov    rbx,QWORD PTR [rbx+0x10]
  42bfa4:	test   rbx,rbx
  42bfa7:	jne    0x42bf90
  42bfa9:	add    rsp,0x28
  42bfad:	pop    rbx
  42bfae:	pop    rsi
  42bfaf:	pop    rdi
  42bfb0:	pop    rbp
  42bfb1:	ret    
  42bfb2:	mov    rbx,QWORD PTR [rbx+0x8]
  42bfb6:	jmp    0x42bfa4
  42bfb8:	nop    DWORD PTR [rax+rax*1+0x0]
  42bfc0:	mov    r8,QWORD PTR [rbx+0x8]
  42bfc4:	cmp    DWORD PTR [r8],0x5
  42bfc8:	jne    0x42bfd2
  42bfca:	add    DWORD PTR [rbp+0x0],0x1
  42bfce:	mov    r8,QWORD PTR [rbx+0x8]
  42bfd2:	mov    rdx,rbp
  42bfd5:	mov    rcx,rdi
  42bfd8:	call   0x42bf70
  42bfdd:	mov    rbx,QWORD PTR [rbx+0x10]
  42bfe1:	jmp    0x42bfa4
  42bfe3:	add    DWORD PTR [rdi],0x1
  42bfe6:	mov    r8,QWORD PTR [rbx+0x8]
  42bfea:	jmp    0x42bfd2
  42bfec:	nop    DWORD PTR [rax+0x0]
  42bff0:	push   rsi
  42bff1:	push   rbx
  42bff2:	sub    rsp,0x28
  42bff6:	mov    rax,QWORD PTR [rcx+0x100]
  42bffd:	mov    rbx,rcx
  42c000:	mov    esi,edx
  42c002:	cmp    rax,0xff
  42c008:	je     0x42c030
  42c00a:	lea    rdx,[rax+0x1]
  42c00e:	mov    QWORD PTR [rbx+0x100],rdx
  42c015:	mov    BYTE PTR [rbx+rax*1],sil
  42c019:	mov    BYTE PTR [rbx+0x108],sil
  42c020:	add    rsp,0x28
  42c024:	pop    rbx
  42c025:	pop    rsi
  42c026:	ret    
  42c027:	nop    WORD PTR [rax+rax*1+0x0]
  42c030:	mov    edx,0xff
  42c035:	mov    BYTE PTR [rcx+0xff],0x0
  42c03c:	mov    r8,QWORD PTR [rcx+0x118]
  42c043:	call   QWORD PTR [rbx+0x110]
  42c049:	add    DWORD PTR [rbx+0x138],0x1
  42c050:	mov    edx,0x1
  42c055:	xor    eax,eax
  42c057:	jmp    0x42c00e
  42c059:	nop    DWORD PTR [rax+0x0]
  42c060:	mov    r8,QWORD PTR [rcx]
  42c063:	xor    r11d,r11d
  42c066:	xor    eax,eax
  42c068:	movsx  edx,BYTE PTR [r8]
  42c06c:	cmp    dl,0x6e
  42c06f:	je     0x42c0c0
  42c071:	lea    r8d,[rdx-0x30]
  42c075:	xor    r9d,r9d
  42c078:	cmp    r8b,0x9
  42c07c:	ja     0x42c0af
  42c07e:	mov    r9,QWORD PTR [rcx]
  42c081:	lea    r8,[r9+0x1]
  42c085:	xor    r9d,r9d
  42c088:	nop    DWORD PTR [rax+rax*1+0x0]
  42c090:	lea    r10d,[r9+r9*4]
  42c094:	mov    QWORD PTR [rcx],r8
  42c097:	add    r8,0x1
  42c09b:	lea    r9d,[rdx+r10*2-0x30]
  42c0a0:	movsx  edx,BYTE PTR [r8-0x1]
  42c0a5:	lea    r10d,[rdx-0x30]
  42c0a9:	cmp    r10b,0x9
  42c0ad:	jbe    0x42c090
  42c0af:	xor    eax,r9d
  42c0b2:	add    eax,r11d
  42c0b5:	ret    
  42c0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c0c0:	lea    rax,[r8+0x1]
  42c0c4:	mov    r11b,0x1
  42c0c7:	mov    QWORD PTR [rcx],rax
  42c0ca:	mov    eax,0xffffffff
  42c0cf:	movsx  edx,BYTE PTR [r8+0x1]
  42c0d4:	jmp    0x42c071
  42c0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c0e0:	push   rbx
  42c0e1:	sub    rsp,0x20
  42c0e5:	mov    eax,DWORD PTR [rcx+0x28]
  42c0e8:	cmp    eax,DWORD PTR [rcx+0x2c]
  42c0eb:	jge    0x42c122
  42c0ed:	movsxd rdx,eax
  42c0f0:	add    eax,0x1
  42c0f3:	lea    r8,[rdx+rdx*2]
  42c0f7:	mov    rdx,QWORD PTR [rcx+0x20]
  42c0fb:	mov    DWORD PTR [rcx+0x28],eax
  42c0fe:	lea    rbx,[rdx+r8*8]
  42c102:	test   rbx,rbx
  42c105:	je     0x42c122
  42c107:	mov    DWORD PTR [rbx],0x41
  42c10d:	add    rcx,0x18
  42c111:	call   0x42c060
  42c116:	mov    DWORD PTR [rbx+0x8],eax
  42c119:	mov    rax,rbx
  42c11c:	add    rsp,0x20
  42c120:	pop    rbx
  42c121:	ret    
  42c122:	xor    eax,eax
  42c124:	add    rsp,0x20
  42c128:	pop    rbx
  42c129:	ret    
  42c12a:	nop    WORD PTR [rax+rax*1+0x0]
  42c130:	push   rbx
  42c131:	sub    rsp,0x20
  42c135:	mov    rdx,QWORD PTR [rcx+0x18]
  42c139:	mov    rbx,rcx
  42c13c:	movzx  eax,BYTE PTR [rdx]
  42c13f:	cmp    al,0x5f
  42c141:	je     0x42c170
  42c143:	cmp    al,0x6e
  42c145:	je     0x42c174
  42c147:	lea    rcx,[rcx+0x18]
  42c14b:	call   0x42c060
  42c150:	add    eax,0x1
  42c153:	js     0x42c174
  42c155:	mov    rdx,QWORD PTR [rbx+0x18]
  42c159:	cmp    BYTE PTR [rdx],0x5f
  42c15c:	jne    0x42c174
  42c15e:	add    rdx,0x1
  42c162:	mov    QWORD PTR [rbx+0x18],rdx
  42c166:	add    rsp,0x20
  42c16a:	pop    rbx
  42c16b:	ret    
  42c16c:	nop    DWORD PTR [rax+0x0]
  42c170:	xor    eax,eax
  42c172:	jmp    0x42c15e
  42c174:	mov    eax,0xffffffff
  42c179:	add    rsp,0x20
  42c17d:	pop    rbx
  42c17e:	ret    
  42c17f:	nop
  42c180:	push   rbx
  42c181:	sub    rsp,0x20
  42c185:	mov    rax,QWORD PTR [rcx+0x18]
  42c189:	cmp    BYTE PTR [rax],0x54
  42c18c:	je     0x42c1a0
  42c18e:	xor    eax,eax
  42c190:	add    rsp,0x20
  42c194:	pop    rbx
  42c195:	ret    
  42c196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c1a0:	add    rax,0x1
  42c1a4:	mov    rbx,rcx
  42c1a7:	mov    QWORD PTR [rcx+0x18],rax
  42c1ab:	call   0x42c130
  42c1b0:	test   eax,eax
  42c1b2:	js     0x42c18e
  42c1b4:	add    DWORD PTR [rbx+0x40],0x1
  42c1b8:	mov    ecx,DWORD PTR [rbx+0x28]
  42c1bb:	cmp    ecx,DWORD PTR [rbx+0x2c]
  42c1be:	jge    0x42c18e
  42c1c0:	movsxd rdx,ecx
  42c1c3:	add    ecx,0x1
  42c1c6:	lea    r8,[rdx+rdx*2]
  42c1ca:	mov    rdx,QWORD PTR [rbx+0x20]
  42c1ce:	mov    DWORD PTR [rbx+0x28],ecx
  42c1d1:	lea    rdx,[rdx+r8*8]
  42c1d5:	test   rdx,rdx
  42c1d8:	je     0x42c18e
  42c1da:	mov    DWORD PTR [rdx+0x8],eax
  42c1dd:	mov    rax,rdx
  42c1e0:	mov    DWORD PTR [rdx],0x5
  42c1e6:	add    rsp,0x20
  42c1ea:	pop    rbx
  42c1eb:	ret    
  42c1ec:	nop    DWORD PTR [rax+0x0]
  42c1f0:	sub    rsp,0x28
  42c1f4:	mov    rdx,QWORD PTR [rcx+0x18]
  42c1f8:	mov    eax,0x1
  42c1fd:	cmp    BYTE PTR [rdx],0x5f
  42c200:	je     0x42c210
  42c202:	add    rsp,0x28
  42c206:	ret    
  42c207:	nop    WORD PTR [rax+rax*1+0x0]
  42c210:	add    rdx,0x1
  42c214:	add    rcx,0x18
  42c218:	mov    QWORD PTR [rcx],rdx
  42c21b:	call   0x42c060
  42c220:	not    eax
  42c222:	shr    eax,0x1f
  42c225:	add    rsp,0x28
  42c229:	ret    
  42c22a:	nop    WORD PTR [rax+rax*1+0x0]
  42c230:	push   rdi
  42c231:	push   rsi
  42c232:	push   rbx
  42c233:	sub    rsp,0x20
  42c237:	mov    rbx,rcx
  42c23a:	lea    rcx,[rcx+0x18]
  42c23e:	call   0x42c060
  42c243:	test   eax,eax
  42c245:	mov    esi,eax
  42c247:	jle    0x42c300
  42c24d:	mov    rdi,QWORD PTR [rbx+0x18]
  42c251:	mov    rax,QWORD PTR [rbx+0x8]
  42c255:	movsxd r9,esi
  42c258:	sub    rax,rdi
  42c25b:	cmp    rax,r9
  42c25e:	jl     0x42c304
  42c264:	add    r9,rdi
  42c267:	test   BYTE PTR [rbx+0x10],0x4
  42c26b:	mov    QWORD PTR [rbx+0x18],r9
  42c26f:	jne    0x42c2b0
  42c271:	cmp    esi,0x9
  42c274:	jle    0x42c28f
  42c276:	lea    rdx,[rip+0x2266b]        # 0x44e8e8
  42c27d:	mov    r8d,0x8
  42c283:	mov    rcx,rdi
  42c286:	call   0x43f0b0
  42c28b:	test   eax,eax
  42c28d:	je     0x42c2c0
  42c28f:	mov    r8d,esi
  42c292:	mov    rdx,rdi
  42c295:	mov    rcx,rbx
  42c298:	call   0x42bbb0
  42c29d:	mov    QWORD PTR [rbx+0x48],rax
  42c2a1:	add    rsp,0x20
  42c2a5:	pop    rbx
  42c2a6:	pop    rsi
  42c2a7:	pop    rdi
  42c2a8:	ret    
  42c2a9:	nop    DWORD PTR [rax+0x0]
  42c2b0:	cmp    BYTE PTR [r9],0x24
  42c2b4:	jne    0x42c271
  42c2b6:	add    r9,0x1
  42c2ba:	mov    QWORD PTR [rbx+0x18],r9
  42c2be:	jmp    0x42c271
  42c2c0:	movzx  eax,BYTE PTR [rdi+0x8]
  42c2c4:	cmp    al,0x5f
  42c2c6:	sete   cl
  42c2c9:	cmp    al,0x2e
  42c2cb:	sete   dl
  42c2ce:	or     cl,dl
  42c2d0:	jne    0x42c2d6
  42c2d2:	cmp    al,0x24
  42c2d4:	jne    0x42c28f
  42c2d6:	cmp    BYTE PTR [rdi+0x9],0x4e
  42c2da:	jne    0x42c28f
  42c2dc:	mov    eax,DWORD PTR [rbx+0x50]
  42c2df:	lea    rdx,[rip+0x2260b]        # 0x44e8f1
  42c2e6:	mov    r8d,0x15
  42c2ec:	mov    rcx,rbx
  42c2ef:	add    eax,0x16
  42c2f2:	sub    eax,esi
  42c2f4:	mov    DWORD PTR [rbx+0x50],eax
  42c2f7:	call   0x42bbb0
  42c2fc:	jmp    0x42c29d
  42c2fe:	xchg   ax,ax
  42c300:	xor    eax,eax
  42c302:	jmp    0x42c2a1
  42c304:	xor    eax,eax
  42c306:	jmp    0x42c29d
  42c308:	nop    DWORD PTR [rax+rax*1+0x0]
  42c310:	push   rsi
  42c311:	push   rbx
  42c312:	sub    rsp,0x28
  42c316:	test   edx,edx
  42c318:	mov    rbx,rcx
  42c31b:	jne    0x42c33b
  42c31d:	mov    rax,QWORD PTR [rcx+0x18]
  42c321:	cmp    BYTE PTR [rax],0x0
  42c324:	jne    0x42c330
  42c326:	xor    eax,eax
  42c328:	add    rsp,0x28
  42c32c:	pop    rbx
  42c32d:	pop    rsi
  42c32e:	ret    
  42c32f:	nop
  42c330:	lea    rdx,[rax+0x1]
  42c334:	mov    QWORD PTR [rcx+0x18],rdx
  42c338:	movsx  edx,BYTE PTR [rax]
  42c33b:	cmp    edx,0x68
  42c33e:	je     0x42c370
  42c340:	cmp    edx,0x76
  42c343:	jne    0x42c326
  42c345:	lea    rsi,[rbx+0x18]
  42c349:	mov    rcx,rsi
  42c34c:	call   0x42c060
  42c351:	mov    rax,QWORD PTR [rbx+0x18]
  42c355:	cmp    BYTE PTR [rax],0x5f
  42c358:	jne    0x42c326
  42c35a:	add    rax,0x1
  42c35e:	mov    rcx,rsi
  42c361:	mov    QWORD PTR [rbx+0x18],rax
  42c365:	call   0x42c060
  42c36a:	jmp    0x42c379
  42c36c:	nop    DWORD PTR [rax+0x0]
  42c370:	lea    rcx,[rbx+0x18]
  42c374:	call   0x42c060
  42c379:	mov    rax,QWORD PTR [rbx+0x18]
  42c37d:	cmp    BYTE PTR [rax],0x5f
  42c380:	jne    0x42c326
  42c382:	add    rax,0x1
  42c386:	mov    QWORD PTR [rbx+0x18],rax
  42c38a:	mov    eax,0x1
  42c38f:	jmp    0x42c328
  42c391:	nop    DWORD PTR [rax+rax*1+0x0]
  42c396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c3a0:	mov    rax,QWORD PTR [rcx+0x120]
  42c3a7:	test   rax,rax
  42c3aa:	je     0x42c3f8
  42c3ac:	mov    rax,QWORD PTR [rax+0x8]
  42c3b0:	mov    edx,DWORD PTR [rdx]
  42c3b2:	mov    rax,QWORD PTR [rax+0x10]
  42c3b6:	test   rax,rax
  42c3b9:	je     0x42c3f0
  42c3bb:	cmp    DWORD PTR [rax],0x2f
  42c3be:	jne    0x42c3f0
  42c3c0:	cmp    edx,0x0
  42c3c3:	jg     0x42c3d9
  42c3c5:	jmp    0x42c3e7
  42c3c7:	nop    WORD PTR [rax+rax*1+0x0]
  42c3d0:	cmp    DWORD PTR [rax],0x2f
  42c3d3:	jne    0x42c3f0
  42c3d5:	test   edx,edx
  42c3d7:	je     0x42c3f3
  42c3d9:	mov    rax,QWORD PTR [rax+0x10]
  42c3dd:	sub    edx,0x1
  42c3e0:	test   rax,rax
  42c3e3:	jne    0x42c3d0
  42c3e5:	repz ret 
  42c3e7:	je     0x42c3f3
  42c3e9:	nop    DWORD PTR [rax+0x0]
  42c3f0:	xor    eax,eax
  42c3f2:	ret    
  42c3f3:	mov    rax,QWORD PTR [rax+0x8]
  42c3f7:	ret    
  42c3f8:	mov    DWORD PTR [rcx+0x130],0x1
  42c402:	ret    
  42c403:	nop    DWORD PTR [rax]
  42c406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c410:	push   rdi
  42c411:	push   rsi
  42c412:	push   rbx
  42c413:	sub    rsp,0x20
  42c417:	lea    rsi,[rip+0x224ea]        # 0x44e908
  42c41e:	test   rdx,rdx
  42c421:	mov    rdi,rcx
  42c424:	mov    rbx,rdx
  42c427:	je     0x42c460
  42c429:	cmp    DWORD PTR [rbx],0x4b
  42c42c:	ja     0x42c440
  42c42e:	mov    eax,DWORD PTR [rbx]
  42c430:	movsxd rax,DWORD PTR [rsi+rax*4]
  42c434:	add    rax,rsi
  42c437:	jmp    rax
  42c439:	nop    DWORD PTR [rax+0x0]
  42c440:	mov    rdx,QWORD PTR [rbx+0x8]
  42c444:	mov    rcx,rdi
  42c447:	call   0x42c410
  42c44c:	test   rax,rax
  42c44f:	jne    0x42c462
  42c451:	mov    rbx,QWORD PTR [rbx+0x10]
  42c455:	test   rbx,rbx
  42c458:	jne    0x42c429
  42c45a:	nop    WORD PTR [rax+rax*1+0x0]
  42c460:	xor    eax,eax
  42c462:	add    rsp,0x20
  42c466:	pop    rbx
  42c467:	pop    rsi
  42c468:	pop    rdi
  42c469:	ret    
  42c46a:	nop    WORD PTR [rax+rax*1+0x0]
  42c470:	lea    rdx,[rbx+0x8]
  42c474:	mov    rcx,rdi
  42c477:	call   0x42c3a0
  42c47c:	test   rax,rax
  42c47f:	je     0x42c460
  42c481:	cmp    DWORD PTR [rax],0x2f
  42c484:	jne    0x42c460
  42c486:	add    rsp,0x20
  42c48a:	pop    rbx
  42c48b:	pop    rsi
  42c48c:	pop    rdi
  42c48d:	ret    
  42c48e:	xchg   ax,ax
  42c490:	push   rbp
  42c491:	push   rdi
  42c492:	push   rsi
  42c493:	push   rbx
  42c494:	sub    rsp,0x28
  42c498:	mov    rax,QWORD PTR [r8+0x8]
  42c49c:	mov    rbx,QWORD PTR [r8+0x10]
  42c4a0:	mov    rbp,rcx
  42c4a3:	mov    rdi,rdx
  42c4a6:	mov    rsi,r8
  42c4a9:	lea    rax,[rdx+rax*1+0x1]
  42c4ae:	cmp    rax,rbx
  42c4b1:	ja     0x42c4f2
  42c4b3:	mov    eax,DWORD PTR [rsi+0x18]
  42c4b6:	test   eax,eax
  42c4b8:	je     0x42c4c3
  42c4ba:	add    rsp,0x28
  42c4be:	pop    rbx
  42c4bf:	pop    rsi
  42c4c0:	pop    rdi
  42c4c1:	pop    rbp
  42c4c2:	ret    
  42c4c3:	mov    rax,QWORD PTR [rsi+0x8]
  42c4c7:	add    rax,QWORD PTR [rsi]
  42c4ca:	mov    r8,rdi
  42c4cd:	mov    rdx,rbp
  42c4d0:	mov    rcx,rax
  42c4d3:	call   0x43f0a8
  42c4d8:	mov    rax,rdi
  42c4db:	add    rax,QWORD PTR [rsi]
  42c4de:	add    rax,QWORD PTR [rsi+0x8]
  42c4e2:	mov    BYTE PTR [rax],0x0
  42c4e5:	add    QWORD PTR [rsi+0x8],rdi
  42c4e9:	add    rsp,0x28
  42c4ed:	pop    rbx
  42c4ee:	pop    rsi
  42c4ef:	pop    rdi
  42c4f0:	pop    rbp
  42c4f1:	ret    
  42c4f2:	mov    edx,DWORD PTR [r8+0x18]
  42c4f6:	test   edx,edx
  42c4f8:	jne    0x42c4ba
  42c4fa:	test   rbx,rbx
  42c4fd:	jne    0x42c510
  42c4ff:	cmp    rax,0x2
  42c503:	jbe    0x42c531
  42c505:	mov    bl,0x2
  42c507:	nop    WORD PTR [rax+rax*1+0x0]
  42c510:	add    rbx,rbx
  42c513:	cmp    rax,rbx
  42c516:	ja     0x42c510
  42c518:	mov    rcx,QWORD PTR [rsi]
  42c51b:	mov    rdx,rbx
  42c51e:	call   0x43f080
  42c523:	test   rax,rax
  42c526:	je     0x42c538
  42c528:	mov    QWORD PTR [rsi],rax
  42c52b:	mov    QWORD PTR [rsi+0x10],rbx
  42c52f:	jmp    0x42c4b3
  42c531:	mov    ebx,0x2
  42c536:	jmp    0x42c518
  42c538:	mov    rcx,QWORD PTR [rsi]
  42c53b:	call   0x43f100
  42c540:	mov    QWORD PTR [rsi],0x0
  42c547:	mov    QWORD PTR [rsi+0x8],0x0
  42c54f:	mov    QWORD PTR [rsi+0x10],0x0
  42c557:	mov    DWORD PTR [rsi+0x18],0x1
  42c55e:	jmp    0x42c4ba
  42c563:	nop    DWORD PTR [rax]
  42c566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c570:	push   rbp
  42c571:	push   rdi
  42c572:	push   rsi
  42c573:	push   rbx
  42c574:	sub    rsp,0x28
  42c578:	mov    rsi,rcx
  42c57b:	mov    rcx,rdx
  42c57e:	mov    rbx,rdx
  42c581:	call   0x43f028
  42c586:	test   rax,rax
  42c589:	je     0x42c600
  42c58b:	mov    r8,QWORD PTR [rsi+0x100]
  42c592:	lea    rbp,[rbx+rax*1]
  42c596:	jmp    0x42c5c2
  42c598:	nop    DWORD PTR [rax+rax*1+0x0]
  42c5a0:	mov    rdx,r8
  42c5a3:	add    r8,0x1
  42c5a7:	add    rbx,0x1
  42c5ab:	mov    QWORD PTR [rsi+0x100],r8
  42c5b2:	mov    BYTE PTR [rsi+rdx*1],dil
  42c5b6:	cmp    rbx,rbp
  42c5b9:	mov    BYTE PTR [rsi+0x108],dil
  42c5c0:	je     0x42c600
  42c5c2:	cmp    r8,0xff
  42c5c9:	movzx  edi,BYTE PTR [rbx]
  42c5cc:	jne    0x42c5a0
  42c5ce:	mov    r8,QWORD PTR [rsi+0x118]
  42c5d5:	mov    edx,0xff
  42c5da:	mov    BYTE PTR [rsi+0xff],0x0
  42c5e1:	mov    rcx,rsi
  42c5e4:	call   QWORD PTR [rsi+0x110]
  42c5ea:	add    DWORD PTR [rsi+0x138],0x1
  42c5f1:	mov    r8d,0x1
  42c5f7:	xor    edx,edx
  42c5f9:	jmp    0x42c5a7
  42c5fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42c600:	add    rsp,0x28
  42c604:	pop    rbx
  42c605:	pop    rsi
  42c606:	pop    rdi
  42c607:	pop    rbp
  42c608:	ret    
  42c609:	nop    DWORD PTR [rax+0x0]
  42c610:	push   r15
  42c612:	push   r14
  42c614:	push   r13
  42c616:	push   r12
  42c618:	push   rbp
  42c619:	push   rdi
  42c61a:	push   rsi
  42c61b:	push   rbx
  42c61c:	sub    rsp,0xc8
  42c623:	test   r8,r8
  42c626:	mov    rbx,rcx
  42c629:	mov    r12d,edx
  42c62c:	mov    rbp,r8
  42c62f:	je     0x42c770
  42c635:	mov    r9d,DWORD PTR [rcx+0x130]
  42c63c:	test   r9d,r9d
  42c63f:	jne    0x42c725
  42c645:	mov    ecx,DWORD PTR [r8]
  42c648:	cmp    ecx,0x4c
  42c64b:	ja     0x42e206
  42c651:	lea    rax,[rip+0x2264c]        # 0x44eca4
  42c658:	mov    edx,ecx
  42c65a:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42c65e:	add    rax,rdx
  42c661:	jmp    rax
  42c663:	mov    rax,QWORD PTR [r8+0x8]
  42c667:	xor    esi,esi
  42c669:	cmp    DWORD PTR [rax],0x27
  42c66c:	jne    0x42c6a1
  42c66e:	mov    rax,QWORD PTR [rax+0x8]
  42c672:	mov    esi,DWORD PTR [rax+0x1c]
  42c675:	cmp    esi,0x1
  42c678:	jb     0x42c6a1
  42c67a:	cmp    esi,0x6
  42c67d:	jbe    0x42f5bb
  42c683:	cmp    esi,0x7
  42c686:	jne    0x42c6a1
  42c688:	mov    rax,QWORD PTR [r8+0x10]
  42c68c:	mov    edx,DWORD PTR [rax]
  42c68e:	test   edx,edx
  42c690:	jne    0x42c6a1
  42c692:	cmp    DWORD PTR [rax+0x10],0x1
  42c696:	jne    0x42c6a1
  42c698:	cmp    ecx,0x3c
  42c69b:	je     0x42fd33
  42c6a1:	mov    rax,QWORD PTR [rbx+0x100]
  42c6a8:	cmp    rax,0xff
  42c6ae:	je     0x42f579
  42c6b4:	lea    rdx,[rax+0x1]
  42c6b8:	mov    QWORD PTR [rbx+0x100],rdx
  42c6bf:	mov    BYTE PTR [rbx+rax*1],0x28
  42c6c3:	mov    edx,r12d
  42c6c6:	mov    BYTE PTR [rbx+0x108],0x28
  42c6cd:	mov    r8,QWORD PTR [rbp+0x8]
  42c6d1:	mov    rcx,rbx
  42c6d4:	call   0x42fe20
  42c6d9:	mov    rax,QWORD PTR [rbx+0x100]
  42c6e0:	cmp    rax,0xff
  42c6e6:	je     0x42f54a
  42c6ec:	lea    rdx,[rax+0x1]
  42c6f0:	mov    QWORD PTR [rbx+0x100],rdx
  42c6f7:	mov    BYTE PTR [rbx+rax*1],0x29
  42c6fb:	mov    BYTE PTR [rbx+0x108],0x29
  42c702:	cmp    DWORD PTR [rbp+0x0],0x3d
  42c706:	je     0x42f7a8
  42c70c:	cmp    esi,0x8
  42c70f:	je     0x42f77a
  42c715:	mov    r8,QWORD PTR [rbp+0x10]
  42c719:	mov    edx,r12d
  42c71c:	mov    rcx,rbx
  42c71f:	call   0x42fe20
  42c724:	nop
  42c725:	add    rsp,0xc8
  42c72c:	pop    rbx
  42c72d:	pop    rsi
  42c72e:	pop    rdi
  42c72f:	pop    rbp
  42c730:	pop    r12
  42c732:	pop    r13
  42c734:	pop    r14
  42c736:	pop    r15
  42c738:	ret    
  42c739:	mov    rdx,QWORD PTR [r9+0x8]
  42c73d:	mov    rsi,QWORD PTR [rbx+0x120]
  42c744:	mov    rcx,rbx
  42c747:	mov    edi,0x1
  42c74c:	mov    QWORD PTR [rbx+0x120],rdx
  42c753:	lea    rdx,[rax+0x8]
  42c757:	call   0x42c3a0
  42c75c:	test   rax,rax
  42c75f:	jne    0x42ed4c
  42c765:	mov    QWORD PTR [rbx+0x120],rsi
  42c76c:	nop    DWORD PTR [rax+0x0]
  42c770:	mov    DWORD PTR [rbx+0x130],0x1
  42c77a:	jmp    0x42c725
  42c77c:	mov    r8,QWORD PTR [r8+0x8]
  42c780:	mov    edx,r12d
  42c783:	mov    rcx,rbx
  42c786:	lea    rsi,[rip+0x2250a]        # 0x44ec97
  42c78d:	lea    r13,[rip+0x2250b]        # 0x44ec9f
  42c794:	call   0x42fe20
  42c799:	mov    rax,QWORD PTR [rbx+0x100]
  42c7a0:	jmp    0x42c7c8
  42c7a2:	mov    rdx,rax
  42c7a5:	add    rax,0x1
  42c7a9:	add    rsi,0x1
  42c7ad:	mov    QWORD PTR [rbx+0x100],rax
  42c7b4:	mov    BYTE PTR [rbx+rdx*1],dil
  42c7b8:	cmp    rsi,r13
  42c7bb:	mov    BYTE PTR [rbx+0x108],dil
  42c7c2:	je     0x42e68e
  42c7c8:	cmp    rax,0xff
  42c7ce:	movzx  edi,BYTE PTR [rsi]
  42c7d1:	jne    0x42c7a2
  42c7d3:	mov    edx,0xff
  42c7d8:	mov    BYTE PTR [rbx+0xff],0x0
  42c7df:	mov    r8,QWORD PTR [rbx+0x118]
  42c7e6:	mov    rcx,rbx
  42c7e9:	call   QWORD PTR [rbx+0x110]
  42c7ef:	add    DWORD PTR [rbx+0x138],0x1
  42c7f6:	mov    eax,0x1
  42c7fb:	xor    edx,edx
  42c7fd:	jmp    0x42c7a9
  42c7ff:	mov    r8,QWORD PTR [r8+0x8]
  42c803:	mov    edx,r12d
  42c806:	mov    rcx,rbx
  42c809:	lea    rsi,[rip+0x22228]        # 0x44ea38
  42c810:	lea    r13,[rip+0x22226]        # 0x44ea3d
  42c817:	call   0x42fe20
  42c81c:	mov    rax,QWORD PTR [rbx+0x100]
  42c823:	jmp    0x42c84b
  42c825:	mov    rdx,rax
  42c828:	add    rax,0x1
  42c82c:	add    rsi,0x1
  42c830:	mov    QWORD PTR [rbx+0x100],rax
  42c837:	mov    BYTE PTR [rbx+rdx*1],dil
  42c83b:	cmp    rsi,r13
  42c83e:	mov    BYTE PTR [rbx+0x108],dil
  42c845:	je     0x42e63d
  42c84b:	cmp    rax,0xff
  42c851:	movzx  edi,BYTE PTR [rsi]
  42c854:	jne    0x42c825
  42c856:	mov    edx,0xff
  42c85b:	mov    BYTE PTR [rbx+0xff],0x0
  42c862:	mov    r8,QWORD PTR [rbx+0x118]
  42c869:	mov    rcx,rbx
  42c86c:	call   QWORD PTR [rbx+0x110]
  42c872:	add    DWORD PTR [rbx+0x138],0x1
  42c879:	mov    eax,0x1
  42c87e:	xor    edx,edx
  42c880:	jmp    0x42c82c
  42c882:	mov    rdx,QWORD PTR [r8+0x8]
  42c886:	mov    rcx,rbx
  42c889:	xor    edi,edi
  42c88b:	call   0x42c410
  42c890:	test   rax,rax
  42c893:	je     0x42fc03
  42c899:	nop    DWORD PTR [rax+0x0]
  42c8a0:	cmp    DWORD PTR [rax],0x2f
  42c8a3:	jne    0x42e992
  42c8a9:	cmp    QWORD PTR [rax+0x8],0x0
  42c8ae:	je     0x42e992
  42c8b4:	mov    rax,QWORD PTR [rax+0x10]
  42c8b8:	add    edi,0x1
  42c8bb:	test   rax,rax
  42c8be:	jne    0x42c8a0
  42c8c0:	mov    r13,QWORD PTR [rbp+0x8]
  42c8c4:	lea    eax,[rdi-0x1]
  42c8c7:	lea    r14,[rip+0x22305]        # 0x44ebd3
  42c8ce:	xor    ebp,ebp
  42c8d0:	mov    DWORD PTR [rsp+0x2c],eax
  42c8d4:	mov    DWORD PTR [rbx+0x134],ebp
  42c8da:	mov    r8,r13
  42c8dd:	mov    edx,r12d
  42c8e0:	mov    rcx,rbx
  42c8e3:	call   0x42fe20
  42c8e8:	cmp    DWORD PTR [rsp+0x2c],ebp
  42c8ec:	jle    0x42e215
  42c8f2:	mov    rax,QWORD PTR [rbx+0x100]
  42c8f9:	lea    rsi,[rip+0x222d1]        # 0x44ebd1
  42c900:	jmp    0x42c928
  42c902:	mov    rdx,rax
  42c905:	add    rax,0x1
  42c909:	add    rsi,0x1
  42c90d:	mov    QWORD PTR [rbx+0x100],rax
  42c914:	mov    BYTE PTR [rbx+rdx*1],r15b
  42c918:	cmp    rsi,r14
  42c91b:	mov    BYTE PTR [rbx+0x108],r15b
  42c922:	je     0x42e215
  42c928:	cmp    rax,0xff
  42c92e:	movzx  r15d,BYTE PTR [rsi]
  42c932:	jne    0x42c902
  42c934:	mov    edx,0xff
  42c939:	mov    BYTE PTR [rbx+0xff],0x0
  42c940:	mov    r8,QWORD PTR [rbx+0x118]
  42c947:	mov    rcx,rbx
  42c94a:	call   QWORD PTR [rbx+0x110]
  42c950:	add    DWORD PTR [rbx+0x138],0x1
  42c957:	mov    eax,0x1
  42c95c:	xor    edx,edx
  42c95e:	jmp    0x42c909
  42c960:	mov    rax,QWORD PTR [rbx+0x100]
  42c967:	lea    rsi,[rip+0x22234]        # 0x44eba2
  42c96e:	lea    r13,[rip+0x22247]        # 0x44ebbc
  42c975:	jmp    0x42c9a6
  42c977:	nop    WORD PTR [rax+rax*1+0x0]
  42c980:	mov    rdx,rax
  42c983:	add    rax,0x1
  42c987:	add    rsi,0x1
  42c98b:	mov    QWORD PTR [rbx+0x100],rax
  42c992:	mov    BYTE PTR [rbx+rdx*1],dil
  42c996:	cmp    rsi,r13
  42c999:	mov    BYTE PTR [rbx+0x108],dil
  42c9a0:	je     0x42e67a
  42c9a6:	cmp    rax,0xff
  42c9ac:	movzx  edi,BYTE PTR [rsi]
  42c9af:	jne    0x42c980
  42c9b1:	mov    edx,0xff
  42c9b6:	mov    BYTE PTR [rbx+0xff],0x0
  42c9bd:	mov    r8,QWORD PTR [rbx+0x118]
  42c9c4:	mov    rcx,rbx
  42c9c7:	call   QWORD PTR [rbx+0x110]
  42c9cd:	add    DWORD PTR [rbx+0x138],0x1
  42c9d4:	mov    eax,0x1
  42c9d9:	xor    edx,edx
  42c9db:	jmp    0x42c987
  42c9dd:	mov    rax,QWORD PTR [rbx+0x100]
  42c9e4:	lea    rsi,[rip+0x2229d]        # 0x44ec88
  42c9eb:	lea    r12,[rip+0x222a4]        # 0x44ec96
  42c9f2:	jmp    0x42ca1a
  42c9f4:	mov    rdx,rax
  42c9f7:	add    rax,0x1
  42c9fb:	add    rsi,0x1
  42c9ff:	mov    QWORD PTR [rbx+0x100],rax
  42ca06:	mov    BYTE PTR [rbx+rdx*1],dil
  42ca0a:	cmp    rsi,r12
  42ca0d:	mov    BYTE PTR [rbx+0x108],dil
  42ca14:	je     0x42e350
  42ca1a:	cmp    rax,0xff
  42ca20:	movzx  edi,BYTE PTR [rsi]
  42ca23:	jne    0x42c9f4
  42ca25:	mov    edx,0xff
  42ca2a:	mov    BYTE PTR [rbx+0xff],0x0
  42ca31:	mov    r8,QWORD PTR [rbx+0x118]
  42ca38:	mov    rcx,rbx
  42ca3b:	call   QWORD PTR [rbx+0x110]
  42ca41:	add    DWORD PTR [rbx+0x138],0x1
  42ca48:	mov    eax,0x1
  42ca4d:	xor    edx,edx
  42ca4f:	jmp    0x42c9fb
  42ca51:	mov    rax,QWORD PTR [rbx+0x100]
  42ca58:	lea    rsi,[rip+0x2221d]        # 0x44ec7c
  42ca5f:	lea    r13,[rip+0x2221e]        # 0x44ec84
  42ca66:	jmp    0x42ca96
  42ca68:	nop    DWORD PTR [rax+rax*1+0x0]
  42ca70:	mov    rdx,rax
  42ca73:	add    rax,0x1
  42ca77:	add    rsi,0x1
  42ca7b:	mov    QWORD PTR [rbx+0x100],rax
  42ca82:	mov    BYTE PTR [rbx+rdx*1],dil
  42ca86:	cmp    rsi,r13
  42ca89:	mov    BYTE PTR [rbx+0x108],dil
  42ca90:	je     0x42e434
  42ca96:	cmp    rax,0xff
  42ca9c:	movzx  edi,BYTE PTR [rsi]
  42ca9f:	jne    0x42ca70
  42caa1:	mov    edx,0xff
  42caa6:	mov    BYTE PTR [rbx+0xff],0x0
  42caad:	mov    r8,QWORD PTR [rbx+0x118]
  42cab4:	mov    rcx,rbx
  42cab7:	call   QWORD PTR [rbx+0x110]
  42cabd:	add    DWORD PTR [rbx+0x138],0x1
  42cac4:	mov    eax,0x1
  42cac9:	xor    edx,edx
  42cacb:	jmp    0x42ca77
  42cacd:	mov    rax,QWORD PTR [rbx+0x100]
  42cad4:	lea    rsi,[rip+0x22184]        # 0x44ec5f
  42cadb:	lea    r13,[rip+0x22199]        # 0x44ec7b
  42cae2:	jmp    0x42cb0a
  42cae4:	mov    rdx,rax
  42cae7:	add    rax,0x1
  42caeb:	add    rsi,0x1
  42caef:	mov    QWORD PTR [rbx+0x100],rax
  42caf6:	mov    BYTE PTR [rbx+rdx*1],dil
  42cafa:	cmp    rsi,r13
  42cafd:	mov    BYTE PTR [rbx+0x108],dil
  42cb04:	je     0x42e328
  42cb0a:	cmp    rax,0xff
  42cb10:	movzx  edi,BYTE PTR [rsi]
  42cb13:	jne    0x42cae4
  42cb15:	mov    edx,0xff
  42cb1a:	mov    BYTE PTR [rbx+0xff],0x0
  42cb21:	mov    r8,QWORD PTR [rbx+0x118]
  42cb28:	mov    rcx,rbx
  42cb2b:	call   QWORD PTR [rbx+0x110]
  42cb31:	add    DWORD PTR [rbx+0x138],0x1
  42cb38:	mov    eax,0x1
  42cb3d:	xor    edx,edx
  42cb3f:	jmp    0x42caeb
  42cb41:	mov    rax,QWORD PTR [rbx+0x100]
  42cb48:	lea    rsi,[rip+0x220f2]        # 0x44ec41
  42cb4f:	lea    r13,[rip+0x22108]        # 0x44ec5e
  42cb56:	jmp    0x42cb86
  42cb58:	nop    DWORD PTR [rax+rax*1+0x0]
  42cb60:	mov    rdx,rax
  42cb63:	add    rax,0x1
  42cb67:	add    rsi,0x1
  42cb6b:	mov    QWORD PTR [rbx+0x100],rax
  42cb72:	mov    BYTE PTR [rbx+rdx*1],dil
  42cb76:	cmp    rsi,r13
  42cb79:	mov    BYTE PTR [rbx+0x108],dil
  42cb80:	je     0x42e33c
  42cb86:	cmp    rax,0xff
  42cb8c:	movzx  edi,BYTE PTR [rsi]
  42cb8f:	jne    0x42cb60
  42cb91:	mov    edx,0xff
  42cb96:	mov    BYTE PTR [rbx+0xff],0x0
  42cb9d:	mov    r8,QWORD PTR [rbx+0x118]
  42cba4:	mov    rcx,rbx
  42cba7:	call   QWORD PTR [rbx+0x110]
  42cbad:	add    DWORD PTR [rbx+0x138],0x1
  42cbb4:	mov    eax,0x1
  42cbb9:	xor    edx,edx
  42cbbb:	jmp    0x42cb67
  42cbbd:	mov    rax,QWORD PTR [rbx+0x100]
  42cbc4:	lea    rsi,[rip+0x2205b]        # 0x44ec26
  42cbcb:	lea    r13,[rip+0x2205e]        # 0x44ec30
  42cbd2:	jmp    0x42cbfa
  42cbd4:	mov    rdx,rax
  42cbd7:	add    rax,0x1
  42cbdb:	add    rsi,0x1
  42cbdf:	mov    QWORD PTR [rbx+0x100],rax
  42cbe6:	mov    BYTE PTR [rbx+rdx*1],dil
  42cbea:	cmp    rsi,r13
  42cbed:	mov    BYTE PTR [rbx+0x108],dil
  42cbf4:	je     0x42e225
  42cbfa:	cmp    rax,0xff
  42cc00:	movzx  edi,BYTE PTR [rsi]
  42cc03:	jne    0x42cbd4
  42cc05:	mov    edx,0xff
  42cc0a:	mov    BYTE PTR [rbx+0xff],0x0
  42cc11:	mov    r8,QWORD PTR [rbx+0x118]
  42cc18:	mov    rcx,rbx
  42cc1b:	call   QWORD PTR [rbx+0x110]
  42cc21:	add    DWORD PTR [rbx+0x138],0x1
  42cc28:	mov    eax,0x1
  42cc2d:	xor    edx,edx
  42cc2f:	jmp    0x42cbdb
  42cc31:	lea    rsi,[rsp+0x40]
  42cc36:	mov    r8d,DWORD PTR [r8+0x8]
  42cc3a:	lea    rdx,[rip+0x21e0e]        # 0x44ea4f
  42cc41:	mov    rcx,rsi
  42cc44:	mov    r12,rsi
  42cc47:	call   0x43f068
  42cc4c:	mov    edx,DWORD PTR [r12]
  42cc50:	add    r12,0x4
  42cc54:	lea    eax,[rdx-0x1010101]
  42cc5a:	not    edx
  42cc5c:	and    eax,edx
  42cc5e:	and    eax,0x80808080
  42cc63:	je     0x42cc4c
  42cc65:	mov    edx,eax
  42cc67:	shr    edx,0x10
  42cc6a:	test   eax,0x8080
  42cc6f:	cmove  eax,edx
  42cc72:	lea    rdx,[r12+0x2]
  42cc77:	cmove  r12,rdx
  42cc7b:	add    al,al
  42cc7d:	sbb    r12,0x3
  42cc81:	sub    r12,rsi
  42cc84:	je     0x42c725
  42cc8a:	mov    rax,QWORD PTR [rbx+0x100]
  42cc91:	xor    edi,edi
  42cc93:	jmp    0x42ccbb
  42cc95:	mov    rdx,rax
  42cc98:	add    rax,0x1
  42cc9c:	add    rdi,0x1
  42cca0:	mov    QWORD PTR [rbx+0x100],rax
  42cca7:	mov    BYTE PTR [rbx+rdx*1],bpl
  42ccab:	cmp    rdi,r12
  42ccae:	mov    BYTE PTR [rbx+0x108],bpl
  42ccb5:	je     0x42c725
  42ccbb:	cmp    rax,0xff
  42ccc1:	movzx  ebp,BYTE PTR [rsi+rdi*1]
  42ccc5:	jne    0x42cc95
  42ccc7:	mov    edx,0xff
  42cccc:	mov    BYTE PTR [rbx+0xff],0x0
  42ccd3:	mov    r8,QWORD PTR [rbx+0x118]
  42ccda:	mov    rcx,rbx
  42ccdd:	call   QWORD PTR [rbx+0x110]
  42cce3:	add    DWORD PTR [rbx+0x138],0x1
  42ccea:	mov    eax,0x1
  42ccef:	xor    edx,edx
  42ccf1:	jmp    0x42cc9c
  42ccf3:	mov    rax,QWORD PTR [rbx+0x100]
  42ccfa:	lea    rsi,[rip+0x21e8a]        # 0x44eb8b
  42cd01:	lea    r13,[rip+0x21e99]        # 0x44eba1
  42cd08:	jmp    0x42cd36
  42cd0a:	nop    WORD PTR [rax+rax*1+0x0]
  42cd10:	mov    rdx,rax
  42cd13:	add    rax,0x1
  42cd17:	add    rsi,0x1
  42cd1b:	mov    QWORD PTR [rbx+0x100],rax
  42cd22:	mov    BYTE PTR [rbx+rdx*1],dil
  42cd26:	cmp    rsi,r13
  42cd29:	mov    BYTE PTR [rbx+0x108],dil
  42cd30:	je     0x42e300
  42cd36:	cmp    rax,0xff
  42cd3c:	movzx  edi,BYTE PTR [rsi]
  42cd3f:	jne    0x42cd10
  42cd41:	mov    edx,0xff
  42cd46:	mov    BYTE PTR [rbx+0xff],0x0
  42cd4d:	mov    r8,QWORD PTR [rbx+0x118]
  42cd54:	mov    rcx,rbx
  42cd57:	call   QWORD PTR [rbx+0x110]
  42cd5d:	add    DWORD PTR [rbx+0x138],0x1
  42cd64:	mov    eax,0x1
  42cd69:	xor    edx,edx
  42cd6b:	jmp    0x42cd17
  42cd6d:	mov    rax,QWORD PTR [rbx+0x100]
  42cd74:	mov    esi,DWORD PTR [r8+0x8]
  42cd78:	cmp    rax,0xff
  42cd7e:	je     0x42f4ac
  42cd84:	lea    rdx,[rax+0x1]
  42cd88:	mov    QWORD PTR [rbx+0x100],rdx
  42cd8f:	mov    BYTE PTR [rbx+rax*1],sil
  42cd93:	mov    BYTE PTR [rbx+0x108],sil
  42cd9a:	jmp    0x42c725
  42cd9f:	mov    r8,QWORD PTR [r8+0x8]
  42cda3:	mov    edx,r12d
  42cda6:	mov    rcx,rbx
  42cda9:	call   0x42fe20
  42cdae:	mov    r8,QWORD PTR [rbp+0x10]
  42cdb2:	mov    edx,r12d
  42cdb5:	mov    rcx,rbx
  42cdb8:	call   0x42fe20
  42cdbd:	jmp    0x42c725
  42cdc2:	mov    r13,QWORD PTR [r8+0x8]
  42cdc6:	mov    r14,QWORD PTR [r8+0x10]
  42cdca:	mov    eax,DWORD PTR [r13+0x0]
  42cdce:	cmp    eax,0x31
  42cdd1:	je     0x42ee21
  42cdd7:	cmp    eax,0x33
  42cdda:	je     0x42efe7
  42cde0:	mov    r8,r13
  42cde3:	mov    edx,r12d
  42cde6:	mov    rcx,rbx
  42cde9:	call   0x430f70
  42cdee:	mov    r8,r14
  42cdf1:	mov    edx,r12d
  42cdf4:	mov    rcx,rbx
  42cdf7:	call   0x431040
  42cdfc:	jmp    0x42c725
  42ce01:	mov    r8,QWORD PTR [r8+0x8]
  42ce05:	mov    edx,r12d
  42ce08:	mov    rcx,rbx
  42ce0b:	call   0x430f70
  42ce10:	jmp    0x42c725
  42ce15:	mov    rax,QWORD PTR [rbx+0x100]
  42ce1c:	lea    rsi,[rip+0x21dba]        # 0x44ebdd
  42ce23:	lea    r13,[rip+0x21dbc]        # 0x44ebe6
  42ce2a:	jmp    0x42ce56
  42ce2c:	nop    DWORD PTR [rax+0x0]
  42ce30:	mov    rdx,rax
  42ce33:	add    rax,0x1
  42ce37:	add    rsi,0x1
  42ce3b:	mov    QWORD PTR [rbx+0x100],rax
  42ce42:	mov    BYTE PTR [rbx+rdx*1],dil
  42ce46:	cmp    rsi,r13
  42ce49:	mov    BYTE PTR [rbx+0x108],dil
  42ce50:	je     0x42e262
  42ce56:	cmp    rax,0xff
  42ce5c:	movzx  edi,BYTE PTR [rsi]
  42ce5f:	jne    0x42ce30
  42ce61:	mov    edx,0xff
  42ce66:	mov    BYTE PTR [rbx+0xff],0x0
  42ce6d:	mov    r8,QWORD PTR [rbx+0x118]
  42ce74:	mov    rcx,rbx
  42ce77:	call   QWORD PTR [rbx+0x110]
  42ce7d:	add    DWORD PTR [rbx+0x138],0x1
  42ce84:	mov    eax,0x1
  42ce89:	xor    edx,edx
  42ce8b:	jmp    0x42ce37
  42ce8d:	mov    rax,QWORD PTR [rbx+0x100]
  42ce94:	lea    rsi,[rip+0x21d42]        # 0x44ebdd
  42ce9b:	lea    r13,[rip+0x21d44]        # 0x44ebe6
  42cea2:	jmp    0x42ceca
  42cea4:	mov    rdx,rax
  42cea7:	add    rax,0x1
  42ceab:	add    rsi,0x1
  42ceaf:	mov    QWORD PTR [rbx+0x100],rax
  42ceb6:	mov    BYTE PTR [rbx+rdx*1],dil
  42ceba:	cmp    rsi,r13
  42cebd:	mov    BYTE PTR [rbx+0x108],dil
  42cec4:	je     0x42e2ec
  42ceca:	cmp    rax,0xff
  42ced0:	movzx  edi,BYTE PTR [rsi]
  42ced3:	jne    0x42cea4
  42ced5:	mov    edx,0xff
  42ceda:	mov    BYTE PTR [rbx+0xff],0x0
  42cee1:	mov    r8,QWORD PTR [rbx+0x118]
  42cee8:	mov    rcx,rbx
  42ceeb:	call   QWORD PTR [rbx+0x110]
  42cef1:	add    DWORD PTR [rbx+0x138],0x1
  42cef8:	mov    eax,0x1
  42cefd:	xor    edx,edx
  42ceff:	jmp    0x42ceab
  42cf01:	mov    r13,QWORD PTR [r8+0x8]
  42cf05:	mov    rax,QWORD PTR [rbx+0x100]
  42cf0c:	lea    rsi,[rip+0x21cc1]        # 0x44ebd4
  42cf13:	lea    rbp,[rip+0x21cc2]        # 0x44ebdc
  42cf1a:	mov    r12d,DWORD PTR [r13+0x10]
  42cf1e:	jmp    0x42cf46
  42cf20:	mov    rdx,rax
  42cf23:	add    rax,0x1
  42cf27:	add    rsi,0x1
  42cf2b:	mov    QWORD PTR [rbx+0x100],rax
  42cf32:	mov    BYTE PTR [rbx+rdx*1],dil
  42cf36:	cmp    rsi,rbp
  42cf39:	mov    BYTE PTR [rbx+0x108],dil
  42cf40:	je     0x42e5a1
  42cf46:	cmp    rax,0xff
  42cf4c:	movzx  edi,BYTE PTR [rsi]
  42cf4f:	jne    0x42cf20
  42cf51:	mov    edx,0xff
  42cf56:	mov    BYTE PTR [rbx+0xff],0x0
  42cf5d:	mov    r8,QWORD PTR [rbx+0x118]
  42cf64:	mov    rcx,rbx
  42cf67:	call   QWORD PTR [rbx+0x110]
  42cf6d:	add    DWORD PTR [rbx+0x138],0x1
  42cf74:	mov    eax,0x1
  42cf79:	xor    edx,edx
  42cf7b:	jmp    0x42cf27
  42cf7d:	mov    r8,QWORD PTR [r8+0x8]
  42cf81:	test   r8,r8
  42cf84:	je     0x42cf91
  42cf86:	mov    edx,r12d
  42cf89:	mov    rcx,rbx
  42cf8c:	call   0x42fe20
  42cf91:	cmp    QWORD PTR [rbp+0x10],0x0
  42cf96:	je     0x42c725
  42cf9c:	mov    rsi,QWORD PTR [rbx+0x100]
  42cfa3:	cmp    rsi,0xfd
  42cfaa:	ja     0x42f076
  42cfb0:	lea    rdi,[rip+0x21c1a]        # 0x44ebd1
  42cfb7:	lea    r14,[rip+0x21c15]        # 0x44ebd3
  42cfbe:	jmp    0x42cfe6
  42cfc0:	mov    rax,rsi
  42cfc3:	add    rsi,0x1
  42cfc7:	add    rdi,0x1
  42cfcb:	mov    QWORD PTR [rbx+0x100],rsi
  42cfd2:	mov    BYTE PTR [rbx+rax*1],r13b
  42cfd6:	cmp    rdi,r14
  42cfd9:	mov    BYTE PTR [rbx+0x108],r13b
  42cfe0:	je     0x42e941
  42cfe6:	cmp    rsi,0xff
  42cfed:	movzx  r13d,BYTE PTR [rdi]
  42cff1:	jne    0x42cfc0
  42cff3:	mov    BYTE PTR [rbx+0xff],0x0
  42cffa:	mov    r8,QWORD PTR [rbx+0x118]
  42d001:	mov    edx,0xff
  42d006:	mov    rcx,rbx
  42d009:	mov    esi,0x1
  42d00e:	call   QWORD PTR [rbx+0x110]
  42d014:	add    DWORD PTR [rbx+0x138],0x1
  42d01b:	xor    eax,eax
  42d01d:	jmp    0x42cfc7
  42d01f:	mov    r8,QWORD PTR [r8+0x8]
  42d023:	mov    rsi,QWORD PTR [rbp+0x10]
  42d027:	test   r8,r8
  42d02a:	je     0x42d037
  42d02c:	mov    edx,r12d
  42d02f:	mov    rcx,rbx
  42d032:	call   0x42fe20
  42d037:	mov    rax,QWORD PTR [rbx+0x100]
  42d03e:	cmp    rax,0xff
  42d044:	je     0x42f3c1
  42d04a:	lea    rdx,[rax+0x1]
  42d04e:	mov    QWORD PTR [rbx+0x100],rdx
  42d055:	mov    r8,rsi
  42d058:	mov    BYTE PTR [rbx+rax*1],0x7b
  42d05c:	mov    edx,r12d
  42d05f:	mov    BYTE PTR [rbx+0x108],0x7b
  42d066:	mov    rcx,rbx
  42d069:	call   0x42fe20
  42d06e:	mov    rax,QWORD PTR [rbx+0x100]
  42d075:	cmp    rax,0xff
  42d07b:	je     0x42f392
  42d081:	lea    rdx,[rax+0x1]
  42d085:	mov    QWORD PTR [rbx+0x100],rdx
  42d08c:	mov    BYTE PTR [rbx+rax*1],0x7d
  42d090:	mov    BYTE PTR [rbx+0x108],0x7d
  42d097:	jmp    0x42c725
  42d09c:	cmp    WORD PTR [r8+0x12],0x0
  42d0a2:	jne    0x42edad
  42d0a8:	mov    r8,QWORD PTR [rbp+0x8]
  42d0ac:	lea    rax,[rip+0x2278d]        # 0x44f840
  42d0b3:	cmp    QWORD PTR [r8+0x8],rax
  42d0b7:	je     0x42ec23
  42d0bd:	mov    edx,r12d
  42d0c0:	mov    rcx,rbx
  42d0c3:	call   0x42fe20
  42d0c8:	mov    rdx,QWORD PTR [rbx+0x100]
  42d0cf:	cmp    rdx,0xff
  42d0d6:	je     0x42f6a3
  42d0dc:	lea    rax,[rdx+0x1]
  42d0e0:	mov    QWORD PTR [rbx+0x100],rax
  42d0e7:	mov    BYTE PTR [rbx+rdx*1],0x20
  42d0eb:	mov    BYTE PTR [rbx+0x108],0x20
  42d0f2:	cmp    WORD PTR [rbp+0x10],0x0
  42d0f7:	je     0x42eb6f
  42d0fd:	lea    rsi,[rip+0x21abf]        # 0x44ebc3
  42d104:	lea    rbp,[rip+0x21abe]        # 0x44ebc9
  42d10b:	jmp    0x42d136
  42d10d:	nop    DWORD PTR [rax]
  42d110:	mov    rdx,rax
  42d113:	add    rax,0x1
  42d117:	add    rsi,0x1
  42d11b:	mov    QWORD PTR [rbx+0x100],rax
  42d122:	mov    BYTE PTR [rbx+rdx*1],dil
  42d126:	cmp    rsi,rbp
  42d129:	mov    BYTE PTR [rbx+0x108],dil
  42d130:	je     0x42c725
  42d136:	cmp    rax,0xff
  42d13c:	movzx  edi,BYTE PTR [rsi]
  42d13f:	jne    0x42d110
  42d141:	mov    edx,0xff
  42d146:	mov    BYTE PTR [rbx+0xff],0x0
  42d14d:	mov    r8,QWORD PTR [rbx+0x118]
  42d154:	mov    rcx,rbx
  42d157:	call   QWORD PTR [rbx+0x110]
  42d15d:	add    DWORD PTR [rbx+0x138],0x1
  42d164:	mov    eax,0x1
  42d169:	xor    edx,edx
  42d16b:	jmp    0x42d117
  42d16d:	mov    DWORD PTR [rbx+0x130],0x1
  42d177:	jmp    0x42c725
  42d17c:	mov    rax,QWORD PTR [r8+0x10]
  42d180:	cmp    DWORD PTR [rax],0x3a
  42d183:	jne    0x42c770
  42d189:	mov    rdx,QWORD PTR [rax+0x10]
  42d18d:	cmp    DWORD PTR [rdx],0x3b
  42d190:	jne    0x42c770
  42d196:	mov    r15,QWORD PTR [r8+0x8]
  42d19a:	mov    r13,QWORD PTR [rax+0x8]
  42d19e:	lea    rdi,[rip+0x21a51]        # 0x44ebf6
  42d1a5:	mov    ecx,0x3
  42d1aa:	mov    r14,QWORD PTR [rdx+0x8]
  42d1ae:	mov    rbp,QWORD PTR [rdx+0x10]
  42d1b2:	mov    rax,QWORD PTR [r15+0x8]
  42d1b6:	mov    rsi,QWORD PTR [rax]
  42d1b9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d1bb:	je     0x42fab2
  42d1c1:	lea    rdx,[rip+0x21a35]        # 0x44ebfd
  42d1c8:	mov    rcx,rbx
  42d1cb:	call   0x42c570
  42d1d0:	cmp    QWORD PTR [r13+0x8],0x0
  42d1d5:	je     0x42d1f2
  42d1d7:	mov    edx,r12d
  42d1da:	mov    rcx,rbx
  42d1dd:	mov    r8,r13
  42d1e0:	call   0x431040
  42d1e5:	mov    edx,0x20
  42d1ea:	mov    rcx,rbx
  42d1ed:	call   0x42bff0
  42d1f2:	mov    r8,r14
  42d1f5:	mov    edx,r12d
  42d1f8:	mov    rcx,rbx
  42d1fb:	call   0x42fe20
  42d200:	test   rbp,rbp
  42d203:	je     0x42c725
  42d209:	mov    r8,rbp
  42d20c:	mov    edx,r12d
  42d20f:	mov    rcx,rbx
  42d212:	call   0x431040
  42d217:	jmp    0x42c725
  42d21c:	nop    DWORD PTR [rax+0x0]
  42d220:	mov    DWORD PTR [rbx+0x130],0x1
  42d22a:	jmp    0x42c725
  42d22f:	mov    rax,QWORD PTR [r8+0x10]
  42d233:	cmp    DWORD PTR [rax],0x38
  42d236:	jne    0x42c770
  42d23c:	mov    r8,QWORD PTR [r8+0x8]
  42d240:	mov    rcx,QWORD PTR [r8+0x8]
  42d244:	mov    rdx,QWORD PTR [rcx]
  42d247:	cmp    BYTE PTR [rdx+0x1],0x63
  42d24b:	je     0x42f7ba
  42d251:	cmp    DWORD PTR [r8],0x31
  42d255:	je     0x42f9d2
  42d25b:	mov    rsi,rdx
  42d25e:	lea    r13,[rip+0x2198b]        # 0x44ebf0
  42d265:	mov    ecx,0x3
  42d26a:	mov    r8,QWORD PTR [rax+0x8]
  42d26e:	mov    rdi,r13
  42d271:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d273:	seta   cl
  42d276:	setb   dl
  42d279:	cmp    cl,dl
  42d27b:	jne    0x42d287
  42d27d:	cmp    DWORD PTR [r8],0x3
  42d281:	je     0x42fa8b
  42d287:	mov    edx,r12d
  42d28a:	mov    rcx,rbx
  42d28d:	call   0x431040
  42d292:	mov    r8,QWORD PTR [rbp+0x8]
  42d296:	lea    rdi,[rip+0x21956]        # 0x44ebf3
  42d29d:	mov    ecx,0x3
  42d2a2:	mov    rax,QWORD PTR [r8+0x8]
  42d2a6:	mov    rax,QWORD PTR [rax]
  42d2a9:	mov    rsi,rax
  42d2ac:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d2ae:	je     0x42fa0a
  42d2b4:	mov    ecx,0x3
  42d2b9:	mov    rsi,rax
  42d2bc:	mov    rdi,r13
  42d2bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d2c1:	jne    0x42fa7b
  42d2c7:	mov    rax,QWORD PTR [rbp+0x10]
  42d2cb:	mov    edx,r12d
  42d2ce:	mov    rcx,rbx
  42d2d1:	mov    r8,QWORD PTR [rax+0x10]
  42d2d5:	call   0x431040
  42d2da:	mov    rax,QWORD PTR [rbp+0x8]
  42d2de:	cmp    DWORD PTR [rax],0x31
  42d2e1:	jne    0x42c725
  42d2e7:	mov    rax,QWORD PTR [rax+0x8]
  42d2eb:	cmp    DWORD PTR [rax+0x10],0x1
  42d2ef:	jne    0x42c725
  42d2f5:	mov    rax,QWORD PTR [rax+0x8]
  42d2f9:	cmp    BYTE PTR [rax],0x3e
  42d2fc:	jne    0x42c725
  42d302:	mov    edx,0x29
  42d307:	mov    rcx,rbx
  42d30a:	call   0x42bff0
  42d30f:	jmp    0x42c725
  42d314:	mov    rax,QWORD PTR [rbx+0x100]
  42d31b:	lea    rsi,[rip+0x218f5]        # 0x44ec17
  42d322:	lea    r13,[rip+0x218fc]        # 0x44ec25
  42d329:	jmp    0x42d356
  42d32b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d330:	mov    rdx,rax
  42d333:	add    rax,0x1
  42d337:	add    rsi,0x1
  42d33b:	mov    QWORD PTR [rbx+0x100],rax
  42d342:	mov    BYTE PTR [rbx+rdx*1],dil
  42d346:	cmp    rsi,r13
  42d349:	mov    BYTE PTR [rbx+0x108],dil
  42d350:	je     0x42e723
  42d356:	cmp    rax,0xff
  42d35c:	movzx  edi,BYTE PTR [rsi]
  42d35f:	jne    0x42d330
  42d361:	mov    edx,0xff
  42d366:	mov    BYTE PTR [rbx+0xff],0x0
  42d36d:	mov    r8,QWORD PTR [rbx+0x118]
  42d374:	mov    rcx,rbx
  42d377:	call   QWORD PTR [rbx+0x110]
  42d37d:	add    DWORD PTR [rbx+0x138],0x1
  42d384:	mov    eax,0x1
  42d389:	xor    edx,edx
  42d38b:	jmp    0x42d337
  42d38d:	mov    rax,QWORD PTR [rbx+0x128]
  42d394:	mov    QWORD PTR [rsp+0x48],r8
  42d399:	mov    edx,r12d
  42d39c:	mov    rcx,rbx
  42d39f:	mov    DWORD PTR [rsp+0x50],0x0
  42d3a7:	mov    QWORD PTR [rsp+0x40],rax
  42d3ac:	lea    rax,[rsp+0x40]
  42d3b1:	mov    QWORD PTR [rbx+0x128],rax
  42d3b8:	mov    rax,QWORD PTR [rbx+0x120]
  42d3bf:	mov    r8,QWORD PTR [r8+0x10]
  42d3c3:	mov    QWORD PTR [rsp+0x58],rax
  42d3c8:	call   0x42fe20
  42d3cd:	mov    r10d,DWORD PTR [rsp+0x50]
  42d3d2:	test   r10d,r10d
  42d3d5:	jne    0x42d3e5
  42d3d7:	mov    r8,rbp
  42d3da:	mov    edx,r12d
  42d3dd:	mov    rcx,rbx
  42d3e0:	call   0x42fe60
  42d3e5:	mov    rax,QWORD PTR [rsp+0x40]
  42d3ea:	mov    QWORD PTR [rbx+0x128],rax
  42d3f1:	jmp    0x42c725
  42d3f6:	mov    rcx,QWORD PTR [rbx+0x128]
  42d3fd:	mov    rax,QWORD PTR [rbx+0x120]
  42d404:	lea    rsi,[rsp+0x40]
  42d409:	mov    QWORD PTR [rsp+0x48],r8
  42d40e:	mov    DWORD PTR [rsp+0x50],0x0
  42d416:	mov    QWORD PTR [rbx+0x128],rsi
  42d41d:	mov    r13,rcx
  42d420:	mov    QWORD PTR [rsp+0x40],rcx
  42d425:	mov    QWORD PTR [rsp+0x58],rax
  42d42a:	test   r13,r13
  42d42d:	mov    rcx,rsi
  42d430:	je     0x42f6e6
  42d436:	mov    rax,QWORD PTR [r13+0x8]
  42d43a:	mov    eax,DWORD PTR [rax]
  42d43c:	sub    eax,0x19
  42d43f:	cmp    eax,0x2
  42d442:	ja     0x42f6e6
  42d448:	mov    rax,r13
  42d44b:	mov    edi,0x1
  42d450:	jmp    0x42d460
  42d452:	mov    rdx,QWORD PTR [rax+0x8]
  42d456:	mov    edx,DWORD PTR [rdx]
  42d458:	sub    edx,0x19
  42d45b:	cmp    edx,0x2
  42d45e:	ja     0x42d4bd
  42d460:	mov    r14d,DWORD PTR [rax+0x10]
  42d464:	test   r14d,r14d
  42d467:	jne    0x42d4b5
  42d469:	cmp    edi,0x3
  42d46c:	ja     0x42f211
  42d472:	mov    r8,QWORD PTR [rax]
  42d475:	mov    edx,edi
  42d477:	add    edi,0x1
  42d47a:	shl    rdx,0x5
  42d47e:	mov    QWORD PTR [rsp+rdx*1+0x40],r8
  42d483:	mov    r8,QWORD PTR [rax+0x8]
  42d487:	mov    QWORD PTR [rsp+rdx*1+0x48],r8
  42d48c:	mov    r8,QWORD PTR [rax+0x10]
  42d490:	mov    QWORD PTR [rsp+rdx*1+0x50],r8
  42d495:	mov    r8,QWORD PTR [rax+0x18]
  42d499:	mov    QWORD PTR [rsp+rdx*1+0x40],rcx
  42d49e:	lea    rcx,[rsi+rdx*1]
  42d4a2:	mov    QWORD PTR [rsp+rdx*1+0x58],r8
  42d4a7:	mov    QWORD PTR [rbx+0x128],rcx
  42d4ae:	mov    DWORD PTR [rax+0x10],0x1
  42d4b5:	mov    rax,QWORD PTR [rax]
  42d4b8:	test   rax,rax
  42d4bb:	jne    0x42d452
  42d4bd:	mov    r8,QWORD PTR [rbp+0x10]
  42d4c1:	mov    edx,r12d
  42d4c4:	mov    rcx,rbx
  42d4c7:	call   0x42fe20
  42d4cc:	mov    r11d,DWORD PTR [rsp+0x50]
  42d4d1:	mov    QWORD PTR [rbx+0x128],r13
  42d4d8:	test   r11d,r11d
  42d4db:	jne    0x42c725
  42d4e1:	cmp    edi,0x1
  42d4e4:	je     0x42f707
  42d4ea:	lea    eax,[rdi-0x1]
  42d4ed:	mov    edx,r12d
  42d4f0:	mov    rcx,rbx
  42d4f3:	mov    rdi,rax
  42d4f6:	shl    rax,0x5
  42d4fa:	mov    r8,QWORD PTR [rsp+rax*1+0x48]
  42d4ff:	call   0x42fe60
  42d504:	cmp    edi,0x1
  42d507:	jne    0x42d4ea
  42d509:	mov    r9,QWORD PTR [rbx+0x128]
  42d510:	lea    r8,[rbp+0x8]
  42d514:	mov    edx,r12d
  42d517:	mov    rcx,rbx
  42d51a:	call   0x4309b0
  42d51f:	jmp    0x42c725
  42d524:	test   r12b,0x20
  42d528:	jne    0x42ebec
  42d52e:	cmp    QWORD PTR [r8+0x8],0x0
  42d533:	je     0x42d53f
  42d535:	test   r12b,0x40
  42d539:	je     0x42f4db
  42d53f:	mov    r9,QWORD PTR [rbx+0x128]
  42d546:	mov    edx,r12d
  42d549:	lea    r8,[rbp+0x10]
  42d54d:	and    edx,0xffffff9f
  42d550:	mov    rcx,rbx
  42d553:	call   0x430c50
  42d558:	jmp    0x42c725
  42d55d:	mov    r8,QWORD PTR [r8+0x8]
  42d561:	mov    edx,r12d
  42d564:	mov    rcx,rbx
  42d567:	call   0x42fe20
  42d56c:	jmp    0x42c725
  42d571:	mov    rax,QWORD PTR [rbx+0x100]
  42d578:	lea    rsi,[rip+0x2155c]        # 0x44eadb
  42d57f:	lea    r13,[rip+0x21566]        # 0x44eaec
  42d586:	jmp    0x42d5b6
  42d588:	nop    DWORD PTR [rax+rax*1+0x0]
  42d590:	mov    rdx,rax
  42d593:	add    rax,0x1
  42d597:	add    rsi,0x1
  42d59b:	mov    QWORD PTR [rbx+0x100],rax
  42d5a2:	mov    BYTE PTR [rbx+rdx*1],dil
  42d5a6:	cmp    rsi,r13
  42d5a9:	mov    BYTE PTR [rbx+0x108],dil
  42d5b0:	je     0x42e314
  42d5b6:	cmp    rax,0xff
  42d5bc:	movzx  edi,BYTE PTR [rsi]
  42d5bf:	jne    0x42d590
  42d5c1:	mov    edx,0xff
  42d5c6:	mov    BYTE PTR [rbx+0xff],0x0
  42d5cd:	mov    r8,QWORD PTR [rbx+0x118]
  42d5d4:	mov    rcx,rbx
  42d5d7:	call   QWORD PTR [rbx+0x110]
  42d5dd:	add    DWORD PTR [rbx+0x138],0x1
  42d5e4:	mov    eax,0x1
  42d5e9:	xor    edx,edx
  42d5eb:	jmp    0x42d597
  42d5ed:	mov    rax,QWORD PTR [rbx+0x100]
  42d5f4:	lea    rsi,[rip+0x214ca]        # 0x44eac5
  42d5fb:	lea    r13,[rip+0x214d8]        # 0x44eada
  42d602:	jmp    0x42d62a
  42d604:	mov    rdx,rax
  42d607:	add    rax,0x1
  42d60b:	add    rsi,0x1
  42d60f:	mov    QWORD PTR [rbx+0x100],rax
  42d616:	mov    BYTE PTR [rbx+rdx*1],dil
  42d61a:	cmp    rsi,r13
  42d61d:	mov    BYTE PTR [rbx+0x108],dil
  42d624:	je     0x42e82e
  42d62a:	cmp    rax,0xff
  42d630:	movzx  edi,BYTE PTR [rsi]
  42d633:	jne    0x42d604
  42d635:	mov    edx,0xff
  42d63a:	mov    BYTE PTR [rbx+0xff],0x0
  42d641:	mov    r8,QWORD PTR [rbx+0x118]
  42d648:	mov    rcx,rbx
  42d64b:	call   QWORD PTR [rbx+0x110]
  42d651:	add    DWORD PTR [rbx+0x138],0x1
  42d658:	mov    eax,0x1
  42d65d:	xor    edx,edx
  42d65f:	jmp    0x42d60b
  42d661:	mov    rax,QWORD PTR [rbx+0x100]
  42d668:	lea    rsi,[rip+0x21445]        # 0x44eab4
  42d66f:	lea    r13,[rip+0x2144e]        # 0x44eac4
  42d676:	jmp    0x42d6a6
  42d678:	nop    DWORD PTR [rax+rax*1+0x0]
  42d680:	mov    rdx,rax
  42d683:	add    rax,0x1
  42d687:	add    rsi,0x1
  42d68b:	mov    QWORD PTR [rbx+0x100],rax
  42d692:	mov    BYTE PTR [rbx+rdx*1],dil
  42d696:	cmp    rsi,r13
  42d699:	mov    BYTE PTR [rbx+0x108],dil
  42d6a0:	je     0x42e81a
  42d6a6:	cmp    rax,0xff
  42d6ac:	movzx  edi,BYTE PTR [rsi]
  42d6af:	jne    0x42d680
  42d6b1:	mov    edx,0xff
  42d6b6:	mov    BYTE PTR [rbx+0xff],0x0
  42d6bd:	mov    r8,QWORD PTR [rbx+0x118]
  42d6c4:	mov    rcx,rbx
  42d6c7:	call   QWORD PTR [rbx+0x110]
  42d6cd:	add    DWORD PTR [rbx+0x138],0x1
  42d6d4:	mov    eax,0x1
  42d6d9:	xor    edx,edx
  42d6db:	jmp    0x42d687
  42d6dd:	mov    rax,QWORD PTR [rbx+0x100]
  42d6e4:	lea    rsi,[rip+0x213b6]        # 0x44eaa1
  42d6eb:	lea    r13,[rip+0x213c1]        # 0x44eab3
  42d6f2:	jmp    0x42d71a
  42d6f4:	mov    rdx,rax
  42d6f7:	add    rax,0x1
  42d6fb:	add    rsi,0x1
  42d6ff:	mov    QWORD PTR [rbx+0x100],rax
  42d706:	mov    BYTE PTR [rbx+rdx*1],dil
  42d70a:	cmp    rsi,r13
  42d70d:	mov    BYTE PTR [rbx+0x108],dil
  42d714:	je     0x42e7f2
  42d71a:	cmp    rax,0xff
  42d720:	movzx  edi,BYTE PTR [rsi]
  42d723:	jne    0x42d6f4
  42d725:	mov    edx,0xff
  42d72a:	mov    BYTE PTR [rbx+0xff],0x0
  42d731:	mov    r8,QWORD PTR [rbx+0x118]
  42d738:	mov    rcx,rbx
  42d73b:	call   QWORD PTR [rbx+0x110]
  42d741:	add    DWORD PTR [rbx+0x138],0x1
  42d748:	mov    eax,0x1
  42d74d:	xor    edx,edx
  42d74f:	jmp    0x42d6fb
  42d751:	mov    rax,QWORD PTR [rbx+0x100]
  42d758:	lea    rsi,[rip+0x21334]        # 0x44ea93
  42d75f:	lea    r13,[rip+0x2133a]        # 0x44eaa0
  42d766:	jmp    0x42d796
  42d768:	nop    DWORD PTR [rax+rax*1+0x0]
  42d770:	mov    rdx,rax
  42d773:	add    rax,0x1
  42d777:	add    rsi,0x1
  42d77b:	mov    QWORD PTR [rbx+0x100],rax
  42d782:	mov    BYTE PTR [rbx+rdx*1],dil
  42d786:	cmp    rsi,r13
  42d789:	mov    BYTE PTR [rbx+0x108],dil
  42d790:	je     0x42e7de
  42d796:	cmp    rax,0xff
  42d79c:	movzx  edi,BYTE PTR [rsi]
  42d79f:	jne    0x42d770
  42d7a1:	mov    edx,0xff
  42d7a6:	mov    BYTE PTR [rbx+0xff],0x0
  42d7ad:	mov    r8,QWORD PTR [rbx+0x118]
  42d7b4:	mov    rcx,rbx
  42d7b7:	call   QWORD PTR [rbx+0x110]
  42d7bd:	add    DWORD PTR [rbx+0x138],0x1
  42d7c4:	mov    eax,0x1
  42d7c9:	xor    edx,edx
  42d7cb:	jmp    0x42d777
  42d7cd:	mov    rax,QWORD PTR [rbx+0x100]
  42d7d4:	lea    rsi,[rip+0x2129a]        # 0x44ea75
  42d7db:	lea    r13,[rip+0x212ab]        # 0x44ea8d
  42d7e2:	jmp    0x42d80a
  42d7e4:	mov    rdx,rax
  42d7e7:	add    rax,0x1
  42d7eb:	add    rsi,0x1
  42d7ef:	mov    QWORD PTR [rbx+0x100],rax
  42d7f6:	mov    BYTE PTR [rbx+rdx*1],dil
  42d7fa:	cmp    rsi,r13
  42d7fd:	mov    BYTE PTR [rbx+0x108],dil
  42d804:	je     0x42e75f
  42d80a:	cmp    rax,0xff
  42d810:	movzx  edi,BYTE PTR [rsi]
  42d813:	jne    0x42d7e4
  42d815:	mov    edx,0xff
  42d81a:	mov    BYTE PTR [rbx+0xff],0x0
  42d821:	mov    r8,QWORD PTR [rbx+0x118]
  42d828:	mov    rcx,rbx
  42d82b:	call   QWORD PTR [rbx+0x110]
  42d831:	add    DWORD PTR [rbx+0x138],0x1
  42d838:	mov    eax,0x1
  42d83d:	xor    edx,edx
  42d83f:	jmp    0x42d7eb
  42d841:	mov    rax,QWORD PTR [rbx+0x100]
  42d848:	lea    rsi,[rip+0x2121d]        # 0x44ea6c
  42d84f:	lea    r13,[rip+0x2121e]        # 0x44ea74
  42d856:	jmp    0x42d886
  42d858:	nop    DWORD PTR [rax+rax*1+0x0]
  42d860:	mov    rdx,rax
  42d863:	add    rax,0x1
  42d867:	add    rsi,0x1
  42d86b:	mov    QWORD PTR [rbx+0x100],rax
  42d872:	mov    BYTE PTR [rbx+rdx*1],dil
  42d876:	cmp    rsi,r13
  42d879:	mov    BYTE PTR [rbx+0x108],dil
  42d880:	je     0x42e74b
  42d886:	cmp    rax,0xff
  42d88c:	movzx  edi,BYTE PTR [rsi]
  42d88f:	jne    0x42d860
  42d891:	mov    edx,0xff
  42d896:	mov    BYTE PTR [rbx+0xff],0x0
  42d89d:	mov    r8,QWORD PTR [rbx+0x118]
  42d8a4:	mov    rcx,rbx
  42d8a7:	call   QWORD PTR [rbx+0x110]
  42d8ad:	add    DWORD PTR [rbx+0x138],0x1
  42d8b4:	mov    eax,0x1
  42d8b9:	xor    edx,edx
  42d8bb:	jmp    0x42d867
  42d8bd:	mov    rax,QWORD PTR [rbx+0x100]
  42d8c4:	lea    rsi,[rip+0x21195]        # 0x44ea60
  42d8cb:	lea    r13,[rip+0x21199]        # 0x44ea6b
  42d8d2:	jmp    0x42d8fa
  42d8d4:	mov    rdx,rax
  42d8d7:	add    rax,0x1
  42d8db:	add    rsi,0x1
  42d8df:	mov    QWORD PTR [rbx+0x100],rax
  42d8e6:	mov    BYTE PTR [rbx+rdx*1],dil
  42d8ea:	cmp    rsi,r13
  42d8ed:	mov    BYTE PTR [rbx+0x108],dil
  42d8f4:	je     0x42e737
  42d8fa:	cmp    rax,0xff
  42d900:	movzx  edi,BYTE PTR [rsi]
  42d903:	jne    0x42d8d4
  42d905:	mov    edx,0xff
  42d90a:	mov    BYTE PTR [rbx+0xff],0x0
  42d911:	mov    r8,QWORD PTR [rbx+0x118]
  42d918:	mov    rcx,rbx
  42d91b:	call   QWORD PTR [rbx+0x110]
  42d921:	add    DWORD PTR [rbx+0x138],0x1
  42d928:	mov    eax,0x1
  42d92d:	xor    edx,edx
  42d92f:	jmp    0x42d8db
  42d931:	mov    rax,QWORD PTR [rbx+0x100]
  42d938:	cmp    rax,0xff
  42d93e:	je     0x42f3f0
  42d944:	lea    rdx,[rax+0x1]
  42d948:	mov    QWORD PTR [rbx+0x100],rdx
  42d94f:	mov    BYTE PTR [rbx+rax*1],0x7e
  42d953:	mov    edx,r12d
  42d956:	mov    BYTE PTR [rbx+0x108],0x7e
  42d95d:	mov    r8,QWORD PTR [rbp+0x10]
  42d961:	mov    rcx,rbx
  42d964:	call   0x42fe20
  42d969:	jmp    0x42c725
  42d96e:	mov    r8,QWORD PTR [r8+0x10]
  42d972:	mov    edx,r12d
  42d975:	mov    rcx,rbx
  42d978:	call   0x42fe20
  42d97d:	jmp    0x42c725
  42d982:	movsxd r12,DWORD PTR [r8+0x10]
  42d986:	mov    rbp,QWORD PTR [r8+0x8]
  42d98a:	test   r12,r12
  42d98d:	je     0x42c725
  42d993:	mov    rax,QWORD PTR [rbx+0x100]
  42d99a:	xor    esi,esi
  42d99c:	jmp    0x42d9c6
  42d99e:	xchg   ax,ax
  42d9a0:	mov    rdx,rax
  42d9a3:	add    rax,0x1
  42d9a7:	add    rsi,0x1
  42d9ab:	mov    QWORD PTR [rbx+0x100],rax
  42d9b2:	mov    BYTE PTR [rbx+rdx*1],dil
  42d9b6:	cmp    r12,rsi
  42d9b9:	mov    BYTE PTR [rbx+0x108],dil
  42d9c0:	je     0x42c725
  42d9c6:	cmp    rax,0xff
  42d9cc:	movzx  edi,BYTE PTR [rbp+rsi*1+0x0]
  42d9d1:	jne    0x42d9a0
  42d9d3:	mov    edx,0xff
  42d9d8:	mov    BYTE PTR [rbx+0xff],0x0
  42d9df:	mov    r8,QWORD PTR [rbx+0x118]
  42d9e6:	mov    rcx,rbx
  42d9e9:	call   QWORD PTR [rbx+0x110]
  42d9ef:	add    DWORD PTR [rbx+0x138],0x1
  42d9f6:	mov    eax,0x1
  42d9fb:	xor    edx,edx
  42d9fd:	jmp    0x42d9a7
  42d9ff:	mov    rax,QWORD PTR [rbx+0x100]
  42da06:	lea    rsi,[rip+0x2116c]        # 0x44eb79
  42da0d:	lea    r13,[rip+0x21176]        # 0x44eb8a
  42da14:	jmp    0x42da46
  42da16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42da20:	mov    rdx,rax
  42da23:	add    rax,0x1
  42da27:	add    rsi,0x1
  42da2b:	mov    QWORD PTR [rbx+0x100],rax
  42da32:	mov    BYTE PTR [rbx+rdx*1],dil
  42da36:	cmp    rsi,r13
  42da39:	mov    BYTE PTR [rbx+0x108],dil
  42da40:	je     0x42e8dd
  42da46:	cmp    rax,0xff
  42da4c:	movzx  edi,BYTE PTR [rsi]
  42da4f:	jne    0x42da20
  42da51:	mov    edx,0xff
  42da56:	mov    BYTE PTR [rbx+0xff],0x0
  42da5d:	mov    r8,QWORD PTR [rbx+0x118]
  42da64:	mov    rcx,rbx
  42da67:	call   QWORD PTR [rbx+0x110]
  42da6d:	add    DWORD PTR [rbx+0x138],0x1
  42da74:	mov    eax,0x1
  42da79:	xor    edx,edx
  42da7b:	jmp    0x42da27
  42da7d:	mov    rax,QWORD PTR [rbx+0x100]
  42da84:	lea    rsi,[rip+0x210d2]        # 0x44eb5d
  42da8b:	lea    r13,[rip+0x210e0]        # 0x44eb72
  42da92:	jmp    0x42daba
  42da94:	mov    rdx,rax
  42da97:	add    rax,0x1
  42da9b:	add    rsi,0x1
  42da9f:	mov    QWORD PTR [rbx+0x100],rax
  42daa6:	mov    BYTE PTR [rbx+rdx*1],dil
  42daaa:	cmp    rsi,r13
  42daad:	mov    BYTE PTR [rbx+0x108],dil
  42dab4:	je     0x42e842
  42daba:	cmp    rax,0xff
  42dac0:	movzx  edi,BYTE PTR [rsi]
  42dac3:	jne    0x42da94
  42dac5:	mov    edx,0xff
  42daca:	mov    BYTE PTR [rbx+0xff],0x0
  42dad1:	mov    r8,QWORD PTR [rbx+0x118]
  42dad8:	mov    rcx,rbx
  42dadb:	call   QWORD PTR [rbx+0x110]
  42dae1:	add    DWORD PTR [rbx+0x138],0x1
  42dae8:	mov    eax,0x1
  42daed:	xor    edx,edx
  42daef:	jmp    0x42da9b
  42daf1:	mov    rax,QWORD PTR [rbx+0x100]
  42daf8:	lea    rsi,[rip+0x21044]        # 0x44eb43
  42daff:	lea    r13,[rip+0x21056]        # 0x44eb5c
  42db06:	jmp    0x42db36
  42db08:	nop    DWORD PTR [rax+rax*1+0x0]
  42db10:	mov    rdx,rax
  42db13:	add    rax,0x1
  42db17:	add    rsi,0x1
  42db1b:	mov    QWORD PTR [rbx+0x100],rax
  42db22:	mov    BYTE PTR [rbx+rdx*1],dil
  42db26:	cmp    rsi,r13
  42db29:	mov    BYTE PTR [rbx+0x108],dil
  42db30:	je     0x42e919
  42db36:	cmp    rax,0xff
  42db3c:	movzx  edi,BYTE PTR [rsi]
  42db3f:	jne    0x42db10
  42db41:	mov    edx,0xff
  42db46:	mov    BYTE PTR [rbx+0xff],0x0
  42db4d:	mov    r8,QWORD PTR [rbx+0x118]
  42db54:	mov    rcx,rbx
  42db57:	call   QWORD PTR [rbx+0x110]
  42db5d:	add    DWORD PTR [rbx+0x138],0x1
  42db64:	mov    eax,0x1
  42db69:	xor    edx,edx
  42db6b:	jmp    0x42db17
  42db6d:	mov    rax,QWORD PTR [rbx+0x100]
  42db74:	lea    rsi,[rip+0x20fb1]        # 0x44eb2c
  42db7b:	lea    r13,[rip+0x20fc0]        # 0x44eb42
  42db82:	jmp    0x42dbaa
  42db84:	mov    rdx,rax
  42db87:	add    rax,0x1
  42db8b:	add    rsi,0x1
  42db8f:	mov    QWORD PTR [rbx+0x100],rax
  42db96:	mov    BYTE PTR [rbx+rdx*1],dil
  42db9a:	cmp    rsi,r13
  42db9d:	mov    BYTE PTR [rbx+0x108],dil
  42dba4:	je     0x42e905
  42dbaa:	cmp    rax,0xff
  42dbb0:	movzx  edi,BYTE PTR [rsi]
  42dbb3:	jne    0x42db84
  42dbb5:	mov    edx,0xff
  42dbba:	mov    BYTE PTR [rbx+0xff],0x0
  42dbc1:	mov    r8,QWORD PTR [rbx+0x118]
  42dbc8:	mov    rcx,rbx
  42dbcb:	call   QWORD PTR [rbx+0x110]
  42dbd1:	add    DWORD PTR [rbx+0x138],0x1
  42dbd8:	mov    eax,0x1
  42dbdd:	xor    edx,edx
  42dbdf:	jmp    0x42db8b
  42dbe1:	mov    rax,QWORD PTR [rbx+0x100]
  42dbe8:	lea    rsi,[rip+0x20f29]        # 0x44eb18
  42dbef:	lea    r13,[rip+0x20f35]        # 0x44eb2b
  42dbf6:	jmp    0x42dc26
  42dbf8:	nop    DWORD PTR [rax+rax*1+0x0]
  42dc00:	mov    rdx,rax
  42dc03:	add    rax,0x1
  42dc07:	add    rsi,0x1
  42dc0b:	mov    QWORD PTR [rbx+0x100],rax
  42dc12:	mov    BYTE PTR [rbx+rdx*1],dil
  42dc16:	cmp    rsi,r13
  42dc19:	mov    BYTE PTR [rbx+0x108],dil
  42dc20:	je     0x42e92d
  42dc26:	cmp    rax,0xff
  42dc2c:	movzx  edi,BYTE PTR [rsi]
  42dc2f:	jne    0x42dc00
  42dc31:	mov    edx,0xff
  42dc36:	mov    BYTE PTR [rbx+0xff],0x0
  42dc3d:	mov    r8,QWORD PTR [rbx+0x118]
  42dc44:	mov    rcx,rbx
  42dc47:	call   QWORD PTR [rbx+0x110]
  42dc4d:	add    DWORD PTR [rbx+0x138],0x1
  42dc54:	mov    eax,0x1
  42dc59:	xor    edx,edx
  42dc5b:	jmp    0x42dc07
  42dc5d:	mov    rax,QWORD PTR [rbx+0x100]
  42dc64:	lea    rsi,[rip+0x20e9d]        # 0x44eb08
  42dc6b:	lea    r13,[rip+0x20ea5]        # 0x44eb17
  42dc72:	jmp    0x42dc9a
  42dc74:	mov    rdx,rax
  42dc77:	add    rax,0x1
  42dc7b:	add    rsi,0x1
  42dc7f:	mov    QWORD PTR [rbx+0x100],rax
  42dc86:	mov    BYTE PTR [rbx+rdx*1],dil
  42dc8a:	cmp    rsi,r13
  42dc8d:	mov    BYTE PTR [rbx+0x108],dil
  42dc94:	je     0x42e70f
  42dc9a:	cmp    rax,0xff
  42dca0:	movzx  edi,BYTE PTR [rsi]
  42dca3:	jne    0x42dc74
  42dca5:	mov    edx,0xff
  42dcaa:	mov    BYTE PTR [rbx+0xff],0x0
  42dcb1:	mov    r8,QWORD PTR [rbx+0x118]
  42dcb8:	mov    rcx,rbx
  42dcbb:	call   QWORD PTR [rbx+0x110]
  42dcc1:	add    DWORD PTR [rbx+0x138],0x1
  42dcc8:	mov    eax,0x1
  42dccd:	xor    edx,edx
  42dccf:	jmp    0x42dc7b
  42dcd1:	mov    rax,QWORD PTR [rbx+0x100]
  42dcd8:	lea    rsi,[rip+0x20e0e]        # 0x44eaed
  42dcdf:	lea    r13,[rip+0x20e21]        # 0x44eb07
  42dce6:	jmp    0x42dd16
  42dce8:	nop    DWORD PTR [rax+rax*1+0x0]
  42dcf0:	mov    rdx,rax
  42dcf3:	add    rax,0x1
  42dcf7:	add    rsi,0x1
  42dcfb:	mov    QWORD PTR [rbx+0x100],rax
  42dd02:	mov    BYTE PTR [rbx+rdx*1],dil
  42dd06:	cmp    rsi,r13
  42dd09:	mov    BYTE PTR [rbx+0x108],dil
  42dd10:	je     0x42e8f1
  42dd16:	cmp    rax,0xff
  42dd1c:	movzx  edi,BYTE PTR [rsi]
  42dd1f:	jne    0x42dcf0
  42dd21:	mov    edx,0xff
  42dd26:	mov    BYTE PTR [rbx+0xff],0x0
  42dd2d:	mov    r8,QWORD PTR [rbx+0x118]
  42dd34:	mov    rcx,rbx
  42dd37:	call   QWORD PTR [rbx+0x110]
  42dd3d:	add    DWORD PTR [rbx+0x138],0x1
  42dd44:	mov    eax,0x1
  42dd49:	xor    edx,edx
  42dd4b:	jmp    0x42dcf7
  42dd4d:	and    r12d,0x4
  42dd51:	mov    rax,QWORD PTR [r8+0x8]
  42dd55:	jne    0x42eaf1
  42dd5b:	movsxd rbp,DWORD PTR [rax+0x8]
  42dd5f:	mov    r12,QWORD PTR [rax]
  42dd62:	test   rbp,rbp
  42dd65:	je     0x42c725
  42dd6b:	mov    rax,QWORD PTR [rbx+0x100]
  42dd72:	xor    esi,esi
  42dd74:	jmp    0x42dda6
  42dd76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dd80:	mov    rdx,rax
  42dd83:	add    rax,0x1
  42dd87:	add    rsi,0x1
  42dd8b:	mov    QWORD PTR [rbx+0x100],rax
  42dd92:	mov    BYTE PTR [rbx+rdx*1],dil
  42dd96:	cmp    rbp,rsi
  42dd99:	mov    BYTE PTR [rbx+0x108],dil
  42dda0:	je     0x42c725
  42dda6:	cmp    rax,0xff
  42ddac:	movzx  edi,BYTE PTR [r12+rsi*1]
  42ddb1:	jne    0x42dd80
  42ddb3:	mov    edx,0xff
  42ddb8:	mov    BYTE PTR [rbx+0xff],0x0
  42ddbf:	mov    r8,QWORD PTR [rbx+0x118]
  42ddc6:	mov    rcx,rbx
  42ddc9:	call   QWORD PTR [rbx+0x110]
  42ddcf:	add    DWORD PTR [rbx+0x138],0x1
  42ddd6:	mov    eax,0x1
  42dddb:	xor    edx,edx
  42dddd:	jmp    0x42dd87
  42dddf:	mov    rax,QWORD PTR [r8+0x8]
  42dde3:	xor    edi,edi
  42dde5:	mov    edx,DWORD PTR [rax]
  42dde7:	cmp    edx,0x5
  42ddea:	je     0x42ec5a
  42ddf0:	cmp    edx,0x23
  42ddf3:	je     0x42ebdd
  42ddf9:	cmp    DWORD PTR [rbp+0x0],edx
  42ddfc:	je     0x42ebdd
  42de02:	cmp    edx,0x24
  42de05:	je     0x42f660
  42de0b:	mov    rdx,QWORD PTR [rbx+0x128]
  42de12:	lea    rax,[rsp+0x40]
  42de17:	mov    QWORD PTR [rsp+0x40],rdx
  42de1c:	mov    QWORD PTR [rsp+0x48],rbp
  42de21:	mov    DWORD PTR [rsp+0x50],0x0
  42de29:	mov    QWORD PTR [rbx+0x128],rax
  42de30:	mov    rax,QWORD PTR [rbx+0x120]
  42de37:	mov    QWORD PTR [rsp+0x58],rax
  42de3c:	mov    r8,QWORD PTR [rbp+0x8]
  42de40:	mov    edx,r12d
  42de43:	mov    rcx,rbx
  42de46:	call   0x42fe20
  42de4b:	mov    eax,DWORD PTR [rsp+0x50]
  42de4f:	test   eax,eax
  42de51:	je     0x42e97f
  42de57:	mov    rax,QWORD PTR [rsp+0x40]
  42de5c:	test   edi,edi
  42de5e:	mov    QWORD PTR [rbx+0x128],rax
  42de65:	je     0x42c725
  42de6b:	mov    QWORD PTR [rbx+0x120],rsi
  42de72:	jmp    0x42c725
  42de77:	mov    rdx,QWORD PTR [rbx+0x128]
  42de7e:	xor    edi,edi
  42de80:	jmp    0x42de12
  42de82:	mov    r9,QWORD PTR [rbx+0x128]
  42de89:	test   r9,r9
  42de8c:	je     0x42fcd7
  42de92:	mov    rax,r9
  42de95:	mov    edx,DWORD PTR [rax+0x10]
  42de98:	test   edx,edx
  42de9a:	jne    0x42deb4
  42de9c:	mov    rdx,QWORD PTR [rax+0x8]
  42dea0:	mov    edx,DWORD PTR [rdx]
  42dea2:	lea    r8d,[rdx-0x19]
  42dea6:	cmp    r8d,0x2
  42deaa:	ja     0x42debc
  42deac:	cmp    ecx,edx
  42deae:	je     0x42f0a6
  42deb4:	mov    rax,QWORD PTR [rax]
  42deb7:	test   rax,rax
  42deba:	jne    0x42de95
  42debc:	mov    rdx,r9
  42debf:	xor    edi,edi
  42dec1:	jmp    0x42de12
  42dec6:	test   r12b,0x4
  42deca:	mov    r13,QWORD PTR [rbx+0x168]
  42ded1:	mov    r14,QWORD PTR [rbx+0x128]
  42ded8:	mov    QWORD PTR [rbx+0x168],r8
  42dedf:	mov    QWORD PTR [rbx+0x128],0x0
  42deea:	mov    r8,QWORD PTR [r8+0x8]
  42deee:	je     0x42df02
  42def0:	mov    ecx,DWORD PTR [r8]
  42def3:	test   ecx,ecx
  42def5:	jne    0x42df02
  42def7:	cmp    DWORD PTR [r8+0x10],0x6
  42defc:	je     0x42f997
  42df02:	mov    edx,r12d
  42df05:	mov    rcx,rbx
  42df08:	call   0x42fe20
  42df0d:	cmp    BYTE PTR [rbx+0x108],0x3c
  42df14:	je     0x42f768
  42df1a:	mov    rax,QWORD PTR [rbx+0x100]
  42df21:	cmp    rax,0xff
  42df27:	je     0x42f24f
  42df2d:	lea    rdx,[rax+0x1]
  42df31:	mov    QWORD PTR [rbx+0x100],rdx
  42df38:	mov    BYTE PTR [rbx+rax*1],0x3c
  42df3c:	mov    edx,r12d
  42df3f:	mov    BYTE PTR [rbx+0x108],0x3c
  42df46:	mov    r8,QWORD PTR [rbp+0x10]
  42df4a:	mov    rcx,rbx
  42df4d:	call   0x42fe20
  42df52:	cmp    BYTE PTR [rbx+0x108],0x3e
  42df59:	je     0x42f756
  42df5f:	mov    rax,QWORD PTR [rbx+0x100]
  42df66:	cmp    rax,0xff
  42df6c:	je     0x42f220
  42df72:	lea    rdx,[rax+0x1]
  42df76:	mov    QWORD PTR [rbx+0x100],rdx
  42df7d:	mov    BYTE PTR [rbx+rax*1],0x3e
  42df81:	mov    BYTE PTR [rbx+0x108],0x3e
  42df88:	mov    QWORD PTR [rbx+0x128],r14
  42df8f:	mov    QWORD PTR [rbx+0x168],r13
  42df96:	jmp    0x42c725
  42df9b:	mov    r14,QWORD PTR [rbx+0x128]
  42dfa2:	mov    QWORD PTR [rbx+0x128],0x0
  42dfad:	mov    rdi,QWORD PTR [r8+0x8]
  42dfb1:	test   rdi,rdi
  42dfb4:	je     0x42e00e
  42dfb6:	lea    rsi,[rsp+0x40]
  42dfbb:	mov    r9,QWORD PTR [rbx+0x120]
  42dfc2:	xor    edx,edx
  42dfc4:	xor    r13d,r13d
  42dfc7:	mov    rax,rsi
  42dfca:	mov    QWORD PTR [rax],rdx
  42dfcd:	mov    edx,DWORD PTR [rdi]
  42dfcf:	add    r13d,0x1
  42dfd3:	mov    r8,rax
  42dfd6:	mov    QWORD PTR [rbx+0x128],rax
  42dfdd:	mov    QWORD PTR [rax+0x8],rdi
  42dfe1:	mov    DWORD PTR [rax+0x10],0x0
  42dfe8:	mov    QWORD PTR [rax+0x18],r9
  42dfec:	lea    ecx,[rdx-0x1c]
  42dfef:	cmp    ecx,0x4
  42dff2:	ja     0x42f864
  42dff8:	mov    rdi,QWORD PTR [rdi+0x8]
  42dffc:	test   rdi,rdi
  42dfff:	je     0x42e00e
  42e001:	add    rax,0x20
  42e005:	cmp    r13d,0x4
  42e009:	mov    rdx,r8
  42e00c:	jne    0x42dfca
  42e00e:	mov    DWORD PTR [rbx+0x130],0x1
  42e018:	jmp    0x42c725
  42e01d:	mov    r8,QWORD PTR [r8+0x8]
  42e021:	mov    edx,r12d
  42e024:	mov    rcx,rbx
  42e027:	call   0x42fe20
  42e02c:	test   r12b,0x4
  42e030:	mov    rax,QWORD PTR [rbx+0x100]
  42e037:	jne    0x42e6cb
  42e03d:	lea    rsi,[rip+0x209fa]        # 0x44ea3e
  42e044:	lea    r13,[rip+0x209f5]        # 0x44ea40
  42e04b:	jmp    0x42e076
  42e04d:	nop    DWORD PTR [rax]
  42e050:	mov    rdx,rax
  42e053:	add    rax,0x1
  42e057:	add    rsi,0x1
  42e05b:	mov    QWORD PTR [rbx+0x100],rax
  42e062:	mov    BYTE PTR [rbx+rdx*1],dil
  42e066:	cmp    rsi,r13
  42e069:	mov    BYTE PTR [rbx+0x108],dil
  42e070:	je     0x42e6ed
  42e076:	cmp    rax,0xff
  42e07c:	movzx  edi,BYTE PTR [rsi]
  42e07f:	jne    0x42e050
  42e081:	mov    edx,0xff
  42e086:	mov    BYTE PTR [rbx+0xff],0x0
  42e08d:	mov    r8,QWORD PTR [rbx+0x118]
  42e094:	mov    rcx,rbx
  42e097:	call   QWORD PTR [rbx+0x110]
  42e09d:	add    DWORD PTR [rbx+0x138],0x1
  42e0a4:	mov    eax,0x1
  42e0a9:	xor    edx,edx
  42e0ab:	jmp    0x42e057
  42e0ad:	and    r12d,0x4
  42e0b1:	jne    0x42f100
  42e0b7:	movsxd r12,DWORD PTR [r8+0x10]
  42e0bb:	mov    rbp,QWORD PTR [r8+0x8]
  42e0bf:	test   r12,r12
  42e0c2:	je     0x42c725
  42e0c8:	mov    rax,QWORD PTR [rbx+0x100]
  42e0cf:	xor    esi,esi
  42e0d1:	jmp    0x42e0f9
  42e0d3:	mov    rdx,rax
  42e0d6:	add    rax,0x1
  42e0da:	add    rsi,0x1
  42e0de:	mov    QWORD PTR [rbx+0x100],rax
  42e0e5:	mov    BYTE PTR [rbx+rdx*1],dil
  42e0e9:	cmp    r12,rsi
  42e0ec:	mov    BYTE PTR [rbx+0x108],dil
  42e0f3:	je     0x42c725
  42e0f9:	cmp    rax,0xff
  42e0ff:	movzx  edi,BYTE PTR [rbp+rsi*1+0x0]
  42e104:	jne    0x42e0d3
  42e106:	mov    edx,0xff
  42e10b:	mov    BYTE PTR [rbx+0xff],0x0
  42e112:	mov    r8,QWORD PTR [rbx+0x118]
  42e119:	mov    rcx,rbx
  42e11c:	call   QWORD PTR [rbx+0x110]
  42e122:	add    DWORD PTR [rbx+0x138],0x1
  42e129:	mov    eax,0x1
  42e12e:	xor    edx,edx
  42e130:	jmp    0x42e0da
  42e132:	mov    r12d,DWORD PTR [r8+0x8]
  42e136:	mov    rax,QWORD PTR [rbx+0x100]
  42e13d:	test   r12d,r12d
  42e140:	jne    0x42e9a3
  42e146:	lea    rsi,[rip+0x20ae8]        # 0x44ec35
  42e14d:	lea    rbp,[rip+0x20ae5]        # 0x44ec39
  42e154:	jmp    0x42e186
  42e156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e160:	mov    rdx,rax
  42e163:	add    rax,0x1
  42e167:	add    rsi,0x1
  42e16b:	mov    QWORD PTR [rbx+0x100],rax
  42e172:	mov    BYTE PTR [rbx+rdx*1],dil
  42e176:	cmp    rsi,rbp
  42e179:	mov    BYTE PTR [rbx+0x108],dil
  42e180:	je     0x42c725
  42e186:	cmp    rax,0xff
  42e18c:	movzx  edi,BYTE PTR [rsi]
  42e18f:	jne    0x42e160
  42e191:	mov    edx,0xff
  42e196:	mov    BYTE PTR [rbx+0xff],0x0
  42e19d:	mov    r8,QWORD PTR [rbx+0x118]
  42e1a4:	mov    rcx,rbx
  42e1a7:	call   QWORD PTR [rbx+0x110]
  42e1ad:	add    DWORD PTR [rbx+0x138],0x1
  42e1b4:	mov    eax,0x1
  42e1b9:	xor    edx,edx
  42e1bb:	jmp    0x42e167
  42e1bd:	lea    rdx,[r8+0x8]
  42e1c1:	mov    rcx,rbx
  42e1c4:	call   0x42c3a0
  42e1c9:	test   rax,rax
  42e1cc:	je     0x42c770
  42e1d2:	cmp    DWORD PTR [rax],0x2f
  42e1d5:	je     0x42f0ba
  42e1db:	mov    rsi,QWORD PTR [rbx+0x120]
  42e1e2:	mov    r8,rax
  42e1e5:	mov    rcx,rbx
  42e1e8:	mov    rdx,QWORD PTR [rsi]
  42e1eb:	mov    QWORD PTR [rbx+0x120],rdx
  42e1f2:	mov    edx,r12d
  42e1f5:	call   0x42fe20
  42e1fa:	mov    QWORD PTR [rbx+0x120],rsi
  42e201:	jmp    0x42c725
  42e206:	mov    DWORD PTR [rbx+0x130],0x1
  42e210:	jmp    0x42c725
  42e215:	add    ebp,0x1
  42e218:	cmp    ebp,edi
  42e21a:	jne    0x42c8d4
  42e220:	jmp    0x42c725
  42e225:	mov    r8,QWORD PTR [rbp+0x8]
  42e229:	mov    edx,r12d
  42e22c:	mov    rcx,rbx
  42e22f:	call   0x42fe20
  42e234:	mov    rax,QWORD PTR [rbx+0x100]
  42e23b:	cmp    rax,0xff
  42e241:	je     0x42f44e
  42e247:	lea    rdx,[rax+0x1]
  42e24b:	mov    QWORD PTR [rbx+0x100],rdx
  42e252:	mov    BYTE PTR [rbx+rax*1],0x29
  42e256:	mov    BYTE PTR [rbx+0x108],0x29
  42e25d:	jmp    0x42c725
  42e262:	mov    rax,QWORD PTR [rbx+0x168]
  42e269:	test   rax,rax
  42e26c:	je     0x42e28b
  42e26e:	mov    rdx,QWORD PTR [rbx+0x120]
  42e275:	mov    QWORD PTR [rsp+0x38],rax
  42e27a:	mov    QWORD PTR [rsp+0x30],rdx
  42e27f:	lea    rdx,[rsp+0x30]
  42e284:	mov    QWORD PTR [rbx+0x120],rdx
  42e28b:	mov    r8,QWORD PTR [rbp+0x8]
  42e28f:	cmp    DWORD PTR [r8],0x4
  42e293:	je     0x42eef1
  42e299:	mov    rax,QWORD PTR [rbx+0x140]
  42e2a0:	mov    edx,r12d
  42e2a3:	mov    rcx,rbx
  42e2a6:	mov    QWORD PTR [rsp+0x40],r8
  42e2ab:	mov    QWORD PTR [rsp+0x48],rax
  42e2b0:	lea    rax,[rsp+0x40]
  42e2b5:	mov    QWORD PTR [rbx+0x140],rax
  42e2bc:	call   0x42c610
  42e2c1:	cmp    QWORD PTR [rbx+0x168],0x0
  42e2c9:	mov    rax,QWORD PTR [rsp+0x48]
  42e2ce:	mov    QWORD PTR [rbx+0x140],rax
  42e2d5:	je     0x42c725
  42e2db:	mov    rax,QWORD PTR [rsp+0x30]
  42e2e0:	mov    QWORD PTR [rbx+0x120],rax
  42e2e7:	jmp    0x42c725
  42e2ec:	mov    r8,QWORD PTR [rbp+0x10]
  42e2f0:	mov    edx,r12d
  42e2f3:	mov    rcx,rbx
  42e2f6:	call   0x42fe20
  42e2fb:	jmp    0x42c725
  42e300:	mov    r8,QWORD PTR [rbp+0x8]
  42e304:	mov    edx,r12d
  42e307:	mov    rcx,rbx
  42e30a:	call   0x42fe20
  42e30f:	jmp    0x42c725
  42e314:	mov    r8,QWORD PTR [rbp+0x8]
  42e318:	mov    edx,r12d
  42e31b:	mov    rcx,rbx
  42e31e:	call   0x42fe20
  42e323:	jmp    0x42c725
  42e328:	mov    r8,QWORD PTR [rbp+0x8]
  42e32c:	mov    edx,r12d
  42e32f:	mov    rcx,rbx
  42e332:	call   0x42fe20
  42e337:	jmp    0x42c725
  42e33c:	mov    r8,QWORD PTR [rbp+0x8]
  42e340:	mov    edx,r12d
  42e343:	mov    rcx,rbx
  42e346:	call   0x42fe20
  42e34b:	jmp    0x42c725
  42e350:	mov    eax,DWORD PTR [rbp+0x8]
  42e353:	lea    rsi,[rsp+0x40]
  42e358:	lea    rdx,[rip+0x206f0]        # 0x44ea4f
  42e35f:	mov    rcx,rsi
  42e362:	mov    r12,rsi
  42e365:	lea    r8d,[rax+0x1]
  42e369:	call   0x43f068
  42e36e:	mov    edx,DWORD PTR [r12]
  42e372:	add    r12,0x4
  42e376:	lea    eax,[rdx-0x1010101]
  42e37c:	not    edx
  42e37e:	and    eax,edx
  42e380:	and    eax,0x80808080
  42e385:	je     0x42e36e
  42e387:	mov    edx,eax
  42e389:	shr    edx,0x10
  42e38c:	test   eax,0x8080
  42e391:	cmove  eax,edx
  42e394:	lea    rdx,[r12+0x2]
  42e399:	cmove  r12,rdx
  42e39d:	add    al,al
  42e39f:	mov    rax,QWORD PTR [rbx+0x100]
  42e3a6:	sbb    r12,0x3
  42e3aa:	sub    r12,rsi
  42e3ad:	je     0x42e40d
  42e3af:	xor    edi,edi
  42e3b1:	jmp    0x42e3d5
  42e3b3:	mov    rdx,rax
  42e3b6:	add    rax,0x1
  42e3ba:	add    rdi,0x1
  42e3be:	mov    QWORD PTR [rbx+0x100],rax
  42e3c5:	mov    BYTE PTR [rbx+rdx*1],bpl
  42e3c9:	cmp    rdi,r12
  42e3cc:	mov    BYTE PTR [rbx+0x108],bpl
  42e3d3:	je     0x42e40d
  42e3d5:	cmp    rax,0xff
  42e3db:	movzx  ebp,BYTE PTR [rsi+rdi*1]
  42e3df:	jne    0x42e3b3
  42e3e1:	mov    edx,0xff
  42e3e6:	mov    BYTE PTR [rbx+0xff],0x0
  42e3ed:	mov    r8,QWORD PTR [rbx+0x118]
  42e3f4:	mov    rcx,rbx
  42e3f7:	call   QWORD PTR [rbx+0x110]
  42e3fd:	add    DWORD PTR [rbx+0x138],0x1
  42e404:	mov    eax,0x1
  42e409:	xor    edx,edx
  42e40b:	jmp    0x42e3ba
  42e40d:	cmp    rax,0xff
  42e413:	je     0x42f47d
  42e419:	lea    rdx,[rax+0x1]
  42e41d:	mov    QWORD PTR [rbx+0x100],rdx
  42e424:	mov    BYTE PTR [rbx+rax*1],0x7d
  42e428:	mov    BYTE PTR [rbx+0x108],0x7d
  42e42f:	jmp    0x42c725
  42e434:	mov    r8,QWORD PTR [rbp+0x8]
  42e438:	mov    edx,r12d
  42e43b:	mov    rcx,rbx
  42e43e:	lea    rsi,[rip+0x20840]        # 0x44ec85
  42e445:	lea    r12,[rip+0x2083b]        # 0x44ec87
  42e44c:	call   0x42fe20
  42e451:	mov    rax,QWORD PTR [rbx+0x100]
  42e458:	jmp    0x42e482
  42e45a:	nop    WORD PTR [rax+rax*1+0x0]
  42e460:	mov    rdx,rax
  42e463:	add    rax,0x1
  42e467:	add    rsi,0x1
  42e46b:	mov    QWORD PTR [rbx+0x100],rax
  42e472:	mov    BYTE PTR [rbx+rdx*1],dil
  42e476:	cmp    rsi,r12
  42e479:	mov    BYTE PTR [rbx+0x108],dil
  42e480:	je     0x42e4b9
  42e482:	cmp    rax,0xff
  42e488:	movzx  edi,BYTE PTR [rsi]
  42e48b:	jne    0x42e460
  42e48d:	mov    edx,0xff
  42e492:	mov    BYTE PTR [rbx+0xff],0x0
  42e499:	mov    r8,QWORD PTR [rbx+0x118]
  42e4a0:	mov    rcx,rbx
  42e4a3:	call   QWORD PTR [rbx+0x110]
  42e4a9:	add    DWORD PTR [rbx+0x138],0x1
  42e4b0:	mov    eax,0x1
  42e4b5:	xor    edx,edx
  42e4b7:	jmp    0x42e467
  42e4b9:	mov    eax,DWORD PTR [rbp+0x10]
  42e4bc:	lea    rsi,[rsp+0x40]
  42e4c1:	lea    rdx,[rip+0x20587]        # 0x44ea4f
  42e4c8:	mov    rcx,rsi
  42e4cb:	mov    r12,rsi
  42e4ce:	lea    r8d,[rax+0x1]
  42e4d2:	call   0x43f068
  42e4d7:	mov    edx,DWORD PTR [r12]
  42e4db:	add    r12,0x4
  42e4df:	lea    eax,[rdx-0x1010101]
  42e4e5:	not    edx
  42e4e7:	and    eax,edx
  42e4e9:	and    eax,0x80808080
  42e4ee:	je     0x42e4d7
  42e4f0:	mov    edx,eax
  42e4f2:	shr    edx,0x10
  42e4f5:	test   eax,0x8080
  42e4fa:	cmove  eax,edx
  42e4fd:	lea    rdx,[r12+0x2]
  42e502:	cmove  r12,rdx
  42e506:	add    al,al
  42e508:	mov    rax,QWORD PTR [rbx+0x100]
  42e50f:	sbb    r12,0x3
  42e513:	sub    r12,rsi
  42e516:	je     0x42e57a
  42e518:	xor    edi,edi
  42e51a:	jmp    0x42e542
  42e51c:	nop    DWORD PTR [rax+0x0]
  42e520:	mov    rdx,rax
  42e523:	add    rax,0x1
  42e527:	add    rdi,0x1
  42e52b:	mov    QWORD PTR [rbx+0x100],rax
  42e532:	mov    BYTE PTR [rbx+rdx*1],bpl
  42e536:	cmp    rdi,r12
  42e539:	mov    BYTE PTR [rbx+0x108],bpl
  42e540:	je     0x42e57a
  42e542:	cmp    rax,0xff
  42e548:	movzx  ebp,BYTE PTR [rsi+rdi*1]
  42e54c:	jne    0x42e520
  42e54e:	mov    edx,0xff
  42e553:	mov    BYTE PTR [rbx+0xff],0x0
  42e55a:	mov    r8,QWORD PTR [rbx+0x118]
  42e561:	mov    rcx,rbx
  42e564:	call   QWORD PTR [rbx+0x110]
  42e56a:	add    DWORD PTR [rbx+0x138],0x1
  42e571:	mov    eax,0x1
  42e576:	xor    edx,edx
  42e578:	jmp    0x42e527
  42e57a:	cmp    rax,0xff
  42e580:	je     0x42f1e2
  42e586:	lea    rdx,[rax+0x1]
  42e58a:	mov    QWORD PTR [rbx+0x100],rdx
  42e591:	mov    BYTE PTR [rbx+rax*1],0x7d
  42e595:	mov    BYTE PTR [rbx+0x108],0x7d
  42e59c:	jmp    0x42c725
  42e5a1:	mov    rsi,QWORD PTR [r13+0x8]
  42e5a5:	movzx  ecx,BYTE PTR [rsi]
  42e5a8:	lea    edx,[rcx-0x61]
  42e5ab:	cmp    dl,0x19
  42e5ae:	jbe    0x42ec2f
  42e5b4:	movsxd rbp,r12d
  42e5b7:	cmp    BYTE PTR [rsi+rbp*1-0x1],0x20
  42e5bc:	je     0x42eda0
  42e5c2:	test   rbp,rbp
  42e5c5:	je     0x42c725
  42e5cb:	mov    rax,QWORD PTR [rbx+0x100]
  42e5d2:	add    rbp,rsi
  42e5d5:	jmp    0x42e606
  42e5d7:	nop    WORD PTR [rax+rax*1+0x0]
  42e5e0:	mov    rdx,rax
  42e5e3:	add    rax,0x1
  42e5e7:	add    rsi,0x1
  42e5eb:	mov    QWORD PTR [rbx+0x100],rax
  42e5f2:	mov    BYTE PTR [rbx+rdx*1],dil
  42e5f6:	cmp    rsi,rbp
  42e5f9:	mov    BYTE PTR [rbx+0x108],dil
  42e600:	je     0x42c725
  42e606:	cmp    rax,0xff
  42e60c:	movzx  edi,BYTE PTR [rsi]
  42e60f:	jne    0x42e5e0
  42e611:	mov    edx,0xff
  42e616:	mov    BYTE PTR [rbx+0xff],0x0
  42e61d:	mov    r8,QWORD PTR [rbx+0x118]
  42e624:	mov    rcx,rbx
  42e627:	call   QWORD PTR [rbx+0x110]
  42e62d:	add    DWORD PTR [rbx+0x138],0x1
  42e634:	mov    eax,0x1
  42e639:	xor    edx,edx
  42e63b:	jmp    0x42e5e7
  42e63d:	mov    r8,QWORD PTR [rbp+0x10]
  42e641:	mov    edx,r12d
  42e644:	mov    rcx,rbx
  42e647:	call   0x42fe20
  42e64c:	mov    rax,QWORD PTR [rbx+0x100]
  42e653:	cmp    rax,0xff
  42e659:	je     0x42f27e
  42e65f:	lea    rdx,[rax+0x1]
  42e663:	mov    QWORD PTR [rbx+0x100],rdx
  42e66a:	mov    BYTE PTR [rbx+rax*1],0x5d
  42e66e:	mov    BYTE PTR [rbx+0x108],0x5d
  42e675:	jmp    0x42c725
  42e67a:	mov    r8,QWORD PTR [rbp+0x8]
  42e67e:	mov    edx,r12d
  42e681:	mov    rcx,rbx
  42e684:	call   0x42fe20
  42e689:	jmp    0x42c725
  42e68e:	mov    r8,QWORD PTR [rbp+0x10]
  42e692:	mov    edx,r12d
  42e695:	mov    rcx,rbx
  42e698:	call   0x42fe20
  42e69d:	mov    rax,QWORD PTR [rbx+0x100]
  42e6a4:	cmp    rax,0xff
  42e6aa:	je     0x42f41f
  42e6b0:	lea    rdx,[rax+0x1]
  42e6b4:	mov    QWORD PTR [rbx+0x100],rdx
  42e6bb:	mov    BYTE PTR [rbx+rax*1],0x5d
  42e6bf:	mov    BYTE PTR [rbx+0x108],0x5d
  42e6c6:	jmp    0x42c725
  42e6cb:	cmp    rax,0xff
  42e6d1:	je     0x42f968
  42e6d7:	lea    rdx,[rax+0x1]
  42e6db:	mov    QWORD PTR [rbx+0x100],rdx
  42e6e2:	mov    BYTE PTR [rbx+rax*1],0x2e
  42e6e6:	mov    BYTE PTR [rbx+0x108],0x2e
  42e6ed:	mov    r13,QWORD PTR [rbp+0x10]
  42e6f1:	cmp    DWORD PTR [r13+0x0],0x46
  42e6f6:	je     0x42f2ad
  42e6fc:	mov    r8,r13
  42e6ff:	mov    edx,r12d
  42e702:	mov    rcx,rbx
  42e705:	call   0x42fe20
  42e70a:	jmp    0x42c725
  42e70f:	mov    r8,QWORD PTR [rbp+0x8]
  42e713:	mov    edx,r12d
  42e716:	mov    rcx,rbx
  42e719:	call   0x42fe20
  42e71e:	jmp    0x42c725
  42e723:	mov    r8,QWORD PTR [rbp+0x8]
  42e727:	mov    edx,r12d
  42e72a:	mov    rcx,rbx
  42e72d:	call   0x42fe20
  42e732:	jmp    0x42c725
  42e737:	mov    r8,QWORD PTR [rbp+0x8]
  42e73b:	mov    edx,r12d
  42e73e:	mov    rcx,rbx
  42e741:	call   0x42fe20
  42e746:	jmp    0x42c725
  42e74b:	mov    r8,QWORD PTR [rbp+0x8]
  42e74f:	mov    edx,r12d
  42e752:	mov    rcx,rbx
  42e755:	call   0x42fe20
  42e75a:	jmp    0x42c725
  42e75f:	mov    r8,QWORD PTR [rbp+0x8]
  42e763:	mov    edx,r12d
  42e766:	mov    rcx,rbx
  42e769:	lea    rsi,[rip+0x2031e]        # 0x44ea8e
  42e770:	lea    r13,[rip+0x2031b]        # 0x44ea92
  42e777:	call   0x42fe20
  42e77c:	mov    rax,QWORD PTR [rbx+0x100]
  42e783:	jmp    0x42e7a7
  42e785:	mov    rdx,rax
  42e788:	add    rax,0x1
  42e78c:	add    rsi,0x1
  42e790:	mov    QWORD PTR [rbx+0x100],rax
  42e797:	mov    BYTE PTR [rbx+rdx*1],dil
  42e79b:	cmp    rsi,r13
  42e79e:	mov    BYTE PTR [rbx+0x108],dil
  42e7a5:	je     0x42e806
  42e7a7:	cmp    rax,0xff
  42e7ad:	movzx  edi,BYTE PTR [rsi]
  42e7b0:	jne    0x42e785
  42e7b2:	mov    edx,0xff
  42e7b7:	mov    BYTE PTR [rbx+0xff],0x0
  42e7be:	mov    r8,QWORD PTR [rbx+0x118]
  42e7c5:	mov    rcx,rbx
  42e7c8:	call   QWORD PTR [rbx+0x110]
  42e7ce:	add    DWORD PTR [rbx+0x138],0x1
  42e7d5:	mov    eax,0x1
  42e7da:	xor    edx,edx
  42e7dc:	jmp    0x42e78c
  42e7de:	mov    r8,QWORD PTR [rbp+0x8]
  42e7e2:	mov    edx,r12d
  42e7e5:	mov    rcx,rbx
  42e7e8:	call   0x42fe20
  42e7ed:	jmp    0x42c725
  42e7f2:	mov    r8,QWORD PTR [rbp+0x8]
  42e7f6:	mov    edx,r12d
  42e7f9:	mov    rcx,rbx
  42e7fc:	call   0x42fe20
  42e801:	jmp    0x42c725
  42e806:	mov    r8,QWORD PTR [rbp+0x10]
  42e80a:	mov    edx,r12d
  42e80d:	mov    rcx,rbx
  42e810:	call   0x42fe20
  42e815:	jmp    0x42c725
  42e81a:	mov    r8,QWORD PTR [rbp+0x8]
  42e81e:	mov    edx,r12d
  42e821:	mov    rcx,rbx
  42e824:	call   0x42fe20
  42e829:	jmp    0x42c725
  42e82e:	mov    r8,QWORD PTR [rbp+0x8]
  42e832:	mov    edx,r12d
  42e835:	mov    rcx,rbx
  42e838:	call   0x42fe20
  42e83d:	jmp    0x42c725
  42e842:	mov    r8,QWORD PTR [rbp+0x10]
  42e846:	mov    edx,r12d
  42e849:	mov    rcx,rbx
  42e84c:	lea    rsi,[rip+0x20320]        # 0x44eb73
  42e853:	lea    r13,[rip+0x2031e]        # 0x44eb78
  42e85a:	call   0x42fe20
  42e85f:	mov    rax,QWORD PTR [rbx+0x100]
  42e866:	jmp    0x42e892
  42e868:	nop    DWORD PTR [rax+rax*1+0x0]
  42e870:	mov    rdx,rax
  42e873:	add    rax,0x1
  42e877:	add    rsi,0x1
  42e87b:	mov    QWORD PTR [rbx+0x100],rax
  42e882:	mov    BYTE PTR [rbx+rdx*1],dil
  42e886:	cmp    rsi,r13
  42e889:	mov    BYTE PTR [rbx+0x108],dil
  42e890:	je     0x42e8c9
  42e892:	cmp    rax,0xff
  42e898:	movzx  edi,BYTE PTR [rsi]
  42e89b:	jne    0x42e870
  42e89d:	mov    edx,0xff
  42e8a2:	mov    BYTE PTR [rbx+0xff],0x0
  42e8a9:	mov    r8,QWORD PTR [rbx+0x118]
  42e8b0:	mov    rcx,rbx
  42e8b3:	call   QWORD PTR [rbx+0x110]
  42e8b9:	add    DWORD PTR [rbx+0x138],0x1
  42e8c0:	mov    eax,0x1
  42e8c5:	xor    edx,edx
  42e8c7:	jmp    0x42e877
  42e8c9:	mov    r8,QWORD PTR [rbp+0x8]
  42e8cd:	mov    edx,r12d
  42e8d0:	mov    rcx,rbx
  42e8d3:	call   0x42fe20
  42e8d8:	jmp    0x42c725
  42e8dd:	mov    r8,QWORD PTR [rbp+0x8]
  42e8e1:	mov    edx,r12d
  42e8e4:	mov    rcx,rbx
  42e8e7:	call   0x42fe20
  42e8ec:	jmp    0x42c725
  42e8f1:	mov    r8,QWORD PTR [rbp+0x8]
  42e8f5:	mov    edx,r12d
  42e8f8:	mov    rcx,rbx
  42e8fb:	call   0x42fe20
  42e900:	jmp    0x42c725
  42e905:	mov    r8,QWORD PTR [rbp+0x8]
  42e909:	mov    edx,r12d
  42e90c:	mov    rcx,rbx
  42e90f:	call   0x42fe20
  42e914:	jmp    0x42c725
  42e919:	mov    r8,QWORD PTR [rbp+0x8]
  42e91d:	mov    edx,r12d
  42e920:	mov    rcx,rbx
  42e923:	call   0x42fe20
  42e928:	jmp    0x42c725
  42e92d:	mov    r8,QWORD PTR [rbp+0x8]
  42e931:	mov    edx,r12d
  42e934:	mov    rcx,rbx
  42e937:	call   0x42fe20
  42e93c:	jmp    0x42c725
  42e941:	mov    r8,QWORD PTR [rbp+0x10]
  42e945:	mov    edx,r12d
  42e948:	mov    rcx,rbx
  42e94b:	mov    edi,DWORD PTR [rbx+0x138]
  42e951:	call   0x42fe20
  42e956:	cmp    DWORD PTR [rbx+0x138],edi
  42e95c:	jne    0x42c725
  42e962:	cmp    QWORD PTR [rbx+0x100],rsi
  42e969:	jne    0x42c725
  42e96f:	sub    rsi,0x2
  42e973:	mov    QWORD PTR [rbx+0x100],rsi
  42e97a:	jmp    0x42c725
  42e97f:	mov    r8,rbp
  42e982:	mov    edx,r12d
  42e985:	mov    rcx,rbx
  42e988:	call   0x42fe60
  42e98d:	jmp    0x42de57
  42e992:	test   edi,edi
  42e994:	mov    r13,QWORD PTR [rbp+0x8]
  42e998:	jne    0x42c8c4
  42e99e:	jmp    0x42c725
  42e9a3:	lea    rsi,[rip+0x20290]        # 0x44ec3a
  42e9aa:	lea    rbp,[rip+0x2028f]        # 0x44ec40
  42e9b1:	jmp    0x42e9d5
  42e9b3:	mov    rdx,rax
  42e9b6:	add    rax,0x1
  42e9ba:	add    rsi,0x1
  42e9be:	mov    QWORD PTR [rbx+0x100],rax
  42e9c5:	mov    BYTE PTR [rbx+rdx*1],dil
  42e9c9:	cmp    rsi,rbp
  42e9cc:	mov    BYTE PTR [rbx+0x108],dil
  42e9d3:	je     0x42ea0c
  42e9d5:	cmp    rax,0xff
  42e9db:	movzx  edi,BYTE PTR [rsi]
  42e9de:	jne    0x42e9b3
  42e9e0:	mov    edx,0xff
  42e9e5:	mov    BYTE PTR [rbx+0xff],0x0
  42e9ec:	mov    r8,QWORD PTR [rbx+0x118]
  42e9f3:	mov    rcx,rbx
  42e9f6:	call   QWORD PTR [rbx+0x110]
  42e9fc:	add    DWORD PTR [rbx+0x138],0x1
  42ea03:	mov    eax,0x1
  42ea08:	xor    edx,edx
  42ea0a:	jmp    0x42e9ba
  42ea0c:	lea    rsi,[rsp+0x40]
  42ea11:	lea    rdx,[rip+0x20037]        # 0x44ea4f
  42ea18:	mov    r8d,r12d
  42ea1b:	mov    rcx,rsi
  42ea1e:	mov    r12,rsi
  42ea21:	call   0x43f068
  42ea26:	mov    edx,DWORD PTR [r12]
  42ea2a:	add    r12,0x4
  42ea2e:	lea    eax,[rdx-0x1010101]
  42ea34:	not    edx
  42ea36:	and    eax,edx
  42ea38:	and    eax,0x80808080
  42ea3d:	je     0x42ea26
  42ea3f:	mov    edx,eax
  42ea41:	shr    edx,0x10
  42ea44:	test   eax,0x8080
  42ea49:	cmove  eax,edx
  42ea4c:	lea    rdx,[r12+0x2]
  42ea51:	cmove  r12,rdx
  42ea55:	add    al,al
  42ea57:	mov    rax,QWORD PTR [rbx+0x100]
  42ea5e:	sbb    r12,0x3
  42ea62:	sub    r12,rsi
  42ea65:	je     0x42eaca
  42ea67:	xor    edi,edi
  42ea69:	jmp    0x42ea92
  42ea6b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ea70:	mov    rdx,rax
  42ea73:	add    rax,0x1
  42ea77:	add    rdi,0x1
  42ea7b:	mov    QWORD PTR [rbx+0x100],rax
  42ea82:	mov    BYTE PTR [rbx+rdx*1],bpl
  42ea86:	cmp    rdi,r12
  42ea89:	mov    BYTE PTR [rbx+0x108],bpl
  42ea90:	je     0x42eaca
  42ea92:	cmp    rax,0xff
  42ea98:	movzx  ebp,BYTE PTR [rsi+rdi*1]
  42ea9c:	jne    0x42ea70
  42ea9e:	mov    edx,0xff
  42eaa3:	mov    BYTE PTR [rbx+0xff],0x0
  42eaaa:	mov    r8,QWORD PTR [rbx+0x118]
  42eab1:	mov    rcx,rbx
  42eab4:	call   QWORD PTR [rbx+0x110]
  42eaba:	add    DWORD PTR [rbx+0x138],0x1
  42eac1:	mov    eax,0x1
  42eac6:	xor    edx,edx
  42eac8:	jmp    0x42ea77
  42eaca:	cmp    rax,0xff
  42ead0:	je     0x42f835
  42ead6:	lea    rdx,[rax+0x1]
  42eada:	mov    QWORD PTR [rbx+0x100],rdx
  42eae1:	mov    BYTE PTR [rbx+rax*1],0x7d
  42eae5:	mov    BYTE PTR [rbx+0x108],0x7d
  42eaec:	jmp    0x42c725
  42eaf1:	movsxd rbp,DWORD PTR [rax+0x18]
  42eaf5:	mov    r12,QWORD PTR [rax+0x10]
  42eaf9:	test   rbp,rbp
  42eafc:	je     0x42c725
  42eb02:	mov    rax,QWORD PTR [rbx+0x100]
  42eb09:	xor    esi,esi
  42eb0b:	jmp    0x42eb36
  42eb0d:	nop    DWORD PTR [rax]
  42eb10:	mov    rdx,rax
  42eb13:	add    rax,0x1
  42eb17:	add    rsi,0x1
  42eb1b:	mov    QWORD PTR [rbx+0x100],rax
  42eb22:	mov    BYTE PTR [rbx+rdx*1],dil
  42eb26:	cmp    rbp,rsi
  42eb29:	mov    BYTE PTR [rbx+0x108],dil
  42eb30:	je     0x42c725
  42eb36:	cmp    rax,0xff
  42eb3c:	movzx  edi,BYTE PTR [r12+rsi*1]
  42eb41:	jne    0x42eb10
  42eb43:	mov    edx,0xff
  42eb48:	mov    BYTE PTR [rbx+0xff],0x0
  42eb4f:	mov    r8,QWORD PTR [rbx+0x118]
  42eb56:	mov    rcx,rbx
  42eb59:	call   QWORD PTR [rbx+0x110]
  42eb5f:	add    DWORD PTR [rbx+0x138],0x1
  42eb66:	mov    eax,0x1
  42eb6b:	xor    edx,edx
  42eb6d:	jmp    0x42eb17
  42eb6f:	lea    rsi,[rip+0x20054]        # 0x44ebca
  42eb76:	lea    rbp,[rip+0x20053]        # 0x44ebd0
  42eb7d:	jmp    0x42eba6
  42eb7f:	nop
  42eb80:	mov    rdx,rax
  42eb83:	add    rax,0x1
  42eb87:	add    rsi,0x1
  42eb8b:	mov    QWORD PTR [rbx+0x100],rax
  42eb92:	mov    BYTE PTR [rbx+rdx*1],dil
  42eb96:	cmp    rsi,rbp
  42eb99:	mov    BYTE PTR [rbx+0x108],dil
  42eba0:	je     0x42c725
  42eba6:	cmp    rax,0xff
  42ebac:	movzx  edi,BYTE PTR [rsi]
  42ebaf:	jne    0x42eb80
  42ebb1:	mov    edx,0xff
  42ebb6:	mov    BYTE PTR [rbx+0xff],0x0
  42ebbd:	mov    r8,QWORD PTR [rbx+0x118]
  42ebc4:	mov    rcx,rbx
  42ebc7:	call   QWORD PTR [rbx+0x110]
  42ebcd:	add    DWORD PTR [rbx+0x138],0x1
  42ebd4:	mov    eax,0x1
  42ebd9:	xor    edx,edx
  42ebdb:	jmp    0x42eb87
  42ebdd:	mov    rdx,QWORD PTR [rbx+0x128]
  42ebe4:	mov    rbp,rax
  42ebe7:	jmp    0x42de12
  42ebec:	mov    r9,QWORD PTR [rbx+0x128]
  42ebf3:	and    r12d,0xffffff9f
  42ebf7:	lea    r8,[r8+0x10]
  42ebfb:	mov    edx,r12d
  42ebfe:	mov    rcx,rbx
  42ec01:	call   0x430c50
  42ec06:	mov    r8,QWORD PTR [rbp+0x8]
  42ec0a:	test   r8,r8
  42ec0d:	je     0x42c725
  42ec13:	mov    edx,r12d
  42ec16:	mov    rcx,rbx
  42ec19:	call   0x42fe20
  42ec1e:	jmp    0x42c725
  42ec23:	mov    rax,QWORD PTR [rbx+0x100]
  42ec2a:	jmp    0x42d0f2
  42ec2f:	cmp    rax,0xff
  42ec35:	je     0x42fafe
  42ec3b:	lea    rdx,[rax+0x1]
  42ec3f:	mov    QWORD PTR [rbx+0x100],rdx
  42ec46:	mov    BYTE PTR [rbx+rax*1],0x20
  42ec4a:	mov    BYTE PTR [rbx+0x108],0x20
  42ec51:	mov    rsi,QWORD PTR [r13+0x8]
  42ec55:	jmp    0x42e5b4
  42ec5a:	mov    r8d,DWORD PTR [rbx+0x150]
  42ec61:	mov    r10,QWORD PTR [rbx+0x148]
  42ec68:	test   r8d,r8d
  42ec6b:	jle    0x42ec99
  42ec6d:	xor    ecx,ecx
  42ec6f:	cmp    rax,QWORD PTR [r10]
  42ec72:	lea    rdx,[r10+0x10]
  42ec76:	jne    0x42ec91
  42ec78:	jmp    0x42f70f
  42ec7d:	nop    DWORD PTR [rax]
  42ec80:	mov    r9,rdx
  42ec83:	add    rdx,0x10
  42ec87:	cmp    rax,QWORD PTR [rdx-0x10]
  42ec8b:	je     0x42f712
  42ec91:	add    ecx,0x1
  42ec94:	cmp    ecx,r8d
  42ec97:	jne    0x42ec80
  42ec99:	cmp    r8d,DWORD PTR [rbx+0x154]
  42eca0:	jge    0x42fd24
  42eca6:	movsxd rdx,r8d
  42eca9:	mov    r9,QWORD PTR [rbx+0x120]
  42ecb0:	add    r8d,0x1
  42ecb4:	shl    rdx,0x4
  42ecb8:	mov    DWORD PTR [rbx+0x150],r8d
  42ecbf:	add    rdx,r10
  42ecc2:	mov    QWORD PTR [rdx],rax
  42ecc5:	add    rdx,0x8
  42ecc9:	test   r9,r9
  42eccc:	je     0x42ed2e
  42ecce:	movsxd rcx,DWORD PTR [rbx+0x160]
  42ecd5:	mov    r10d,DWORD PTR [rbx+0x164]
  42ecdc:	cmp    r10d,ecx
  42ecdf:	jle    0x42fd24
  42ece5:	lea    r8d,[rcx+0x1]
  42ece9:	add    r10d,0x1
  42eced:	shl    rcx,0x4
  42ecf1:	jmp    0x42ed04
  42ecf3:	add    r8d,0x1
  42ecf7:	add    rcx,0x10
  42ecfb:	cmp    r8d,r10d
  42ecfe:	je     0x42fd1e
  42ed04:	mov    r11,rcx
  42ed07:	add    r11,QWORD PTR [rbx+0x158]
  42ed0e:	mov    r13,QWORD PTR [r9+0x8]
  42ed12:	mov    edi,r8d
  42ed15:	mov    QWORD PTR [r11+0x8],r13
  42ed19:	mov    QWORD PTR [rdx],r11
  42ed1c:	mov    rdx,r11
  42ed1f:	mov    r9,QWORD PTR [r9]
  42ed22:	test   r9,r9
  42ed25:	jne    0x42ecf3
  42ed27:	mov    DWORD PTR [rbx+0x160],r8d
  42ed2e:	mov    QWORD PTR [rdx],0x0
  42ed35:	lea    rdx,[rax+0x8]
  42ed39:	mov    rcx,rbx
  42ed3c:	xor    edi,edi
  42ed3e:	call   0x42c3a0
  42ed43:	test   rax,rax
  42ed46:	je     0x42c770
  42ed4c:	mov    edx,DWORD PTR [rax]
  42ed4e:	cmp    edx,0x2f
  42ed51:	jne    0x42ddf0
  42ed57:	mov    edx,DWORD PTR [rbx+0x134]
  42ed5d:	jmp    0x42ed79
  42ed5f:	nop
  42ed60:	mov    rax,QWORD PTR [rax+0x10]
  42ed64:	sub    edx,0x1
  42ed67:	test   rax,rax
  42ed6a:	je     0x42fc97
  42ed70:	cmp    DWORD PTR [rax],0x2f
  42ed73:	jne    0x42fc97
  42ed79:	cmp    edx,0x0
  42ed7c:	jg     0x42ed60
  42ed7e:	jne    0x42fc97
  42ed84:	mov    rax,QWORD PTR [rax+0x8]
  42ed88:	test   rax,rax
  42ed8b:	je     0x42fc97
  42ed91:	mov    edx,DWORD PTR [rax]
  42ed93:	jmp    0x42ddf0
  42ed98:	nop    DWORD PTR [rax+rax*1+0x0]
  42eda0:	lea    ebp,[r12-0x1]
  42eda5:	movsxd rbp,ebp
  42eda8:	jmp    0x42e5c2
  42edad:	mov    rax,QWORD PTR [rbx+0x100]
  42edb4:	lea    rsi,[rip+0x1fe02]        # 0x44ebbd
  42edbb:	lea    r13,[rip+0x1fe00]        # 0x44ebc2
  42edc2:	jmp    0x42edea
  42edc4:	mov    rdx,rax
  42edc7:	add    rax,0x1
  42edcb:	add    rsi,0x1
  42edcf:	mov    QWORD PTR [rbx+0x100],rax
  42edd6:	mov    BYTE PTR [rbx+rdx*1],dil
  42edda:	cmp    rsi,r13
  42eddd:	mov    BYTE PTR [rbx+0x108],dil
  42ede4:	je     0x42d0a8
  42edea:	cmp    rax,0xff
  42edf0:	movzx  edi,BYTE PTR [rsi]
  42edf3:	jne    0x42edc4
  42edf5:	mov    edx,0xff
  42edfa:	mov    BYTE PTR [rbx+0xff],0x0
  42ee01:	mov    r8,QWORD PTR [rbx+0x118]
  42ee08:	mov    rcx,rbx
  42ee0b:	call   QWORD PTR [rbx+0x110]
  42ee11:	add    DWORD PTR [rbx+0x138],0x1
  42ee18:	mov    eax,0x1
  42ee1d:	xor    edx,edx
  42ee1f:	jmp    0x42edcb
  42ee21:	mov    rax,QWORD PTR [r13+0x8]
  42ee25:	lea    rdi,[rip+0x1fdbb]        # 0x44ebe7
  42ee2c:	mov    ecx,0x3
  42ee31:	mov    rbp,QWORD PTR [rax]
  42ee34:	mov    eax,DWORD PTR [r14]
  42ee37:	mov    rsi,rbp
  42ee3a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ee3c:	jne    0x42ee47
  42ee3e:	cmp    eax,0x3
  42ee41:	je     0x42fc7a
  42ee47:	cmp    eax,0x38
  42ee4a:	je     0x42fcea
  42ee50:	mov    rcx,rbx
  42ee53:	mov    r8,r13
  42ee56:	mov    edx,r12d
  42ee59:	lea    rdi,[rip+0x1fd8a]        # 0x44ebea
  42ee60:	mov    rsi,rbp
  42ee63:	call   0x430f70
  42ee68:	mov    ecx,0x3
  42ee6d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ee6f:	je     0x42f5a8
  42ee75:	lea    rdi,[rip+0x1fd71]        # 0x44ebed
  42ee7c:	mov    ecx,0x3
  42ee81:	mov    rsi,rbp
  42ee84:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ee86:	jne    0x42cdee
  42ee8c:	mov    rax,QWORD PTR [rbx+0x100]
  42ee93:	cmp    rax,0xff
  42ee99:	je     0x42fc50
  42ee9f:	lea    rdx,[rax+0x1]
  42eea3:	mov    r8,r14
  42eea6:	mov    rcx,rbx
  42eea9:	mov    QWORD PTR [rbx+0x100],rdx
  42eeb0:	mov    BYTE PTR [rbx+rax*1],0x28
  42eeb4:	mov    edx,r12d
  42eeb7:	mov    BYTE PTR [rbx+0x108],0x28
  42eebe:	call   0x42fe20
  42eec3:	mov    rax,QWORD PTR [rbx+0x100]
  42eeca:	cmp    rax,0xff
  42eed0:	je     0x42fc26
  42eed6:	lea    rdx,[rax+0x1]
  42eeda:	mov    QWORD PTR [rbx+0x100],rdx
  42eee1:	mov    BYTE PTR [rbx+rax*1],0x29
  42eee5:	mov    BYTE PTR [rbx+0x108],0x29
  42eeec:	jmp    0x42c725
  42eef1:	mov    r8,QWORD PTR [r8+0x8]
  42eef5:	mov    rax,QWORD PTR [rbx+0x140]
  42eefc:	lea    rsi,[rsp+0x40]
  42ef01:	mov    edx,r12d
  42ef04:	mov    rcx,rbx
  42ef07:	mov    QWORD PTR [rbx+0x140],rsi
  42ef0e:	mov    QWORD PTR [rsp+0x48],rax
  42ef13:	mov    QWORD PTR [rsp+0x40],r8
  42ef18:	call   0x42c610
  42ef1d:	cmp    QWORD PTR [rbx+0x168],0x0
  42ef25:	mov    rax,QWORD PTR [rsp+0x48]
  42ef2a:	mov    QWORD PTR [rbx+0x140],rax
  42ef31:	je     0x42ef3f
  42ef33:	mov    rax,QWORD PTR [rsp+0x30]
  42ef38:	mov    QWORD PTR [rbx+0x120],rax
  42ef3f:	cmp    BYTE PTR [rbx+0x108],0x3c
  42ef46:	je     0x42fbd0
  42ef4c:	mov    rax,QWORD PTR [rbx+0x100]
  42ef53:	cmp    rax,0xff
  42ef59:	je     0x42fba6
  42ef5f:	lea    rdx,[rax+0x1]
  42ef63:	mov    rcx,rbx
  42ef66:	mov    QWORD PTR [rbx+0x100],rdx
  42ef6d:	mov    BYTE PTR [rbx+rax*1],0x3c
  42ef71:	mov    edx,r12d
  42ef74:	mov    BYTE PTR [rbx+0x108],0x3c
  42ef7b:	mov    rax,QWORD PTR [rbp+0x8]
  42ef7f:	mov    r8,QWORD PTR [rax+0x10]
  42ef83:	mov    rax,QWORD PTR [rbx+0x140]
  42ef8a:	mov    QWORD PTR [rbx+0x140],rsi
  42ef91:	mov    QWORD PTR [rsp+0x48],rax
  42ef96:	mov    QWORD PTR [rsp+0x40],r8
  42ef9b:	call   0x42c610
  42efa0:	cmp    BYTE PTR [rbx+0x108],0x3e
  42efa7:	mov    rax,QWORD PTR [rsp+0x48]
  42efac:	mov    QWORD PTR [rbx+0x140],rax
  42efb3:	je     0x42fca4
  42efb9:	mov    rax,QWORD PTR [rbx+0x100]
  42efc0:	cmp    rax,0xff
  42efc6:	je     0x42fb7c
  42efcc:	lea    rdx,[rax+0x1]
  42efd0:	mov    QWORD PTR [rbx+0x100],rdx
  42efd7:	mov    BYTE PTR [rbx+rax*1],0x3e
  42efdb:	mov    BYTE PTR [rbx+0x108],0x3e
  42efe2:	jmp    0x42c725
  42efe7:	mov    rax,QWORD PTR [rbx+0x100]
  42efee:	cmp    rax,0xff
  42eff4:	je     0x42fb52
  42effa:	lea    rdx,[rax+0x1]
  42effe:	mov    rcx,rbx
  42f001:	mov    QWORD PTR [rbx+0x100],rdx
  42f008:	mov    BYTE PTR [rbx+rax*1],0x28
  42f00c:	mov    edx,r12d
  42f00f:	mov    rax,QWORD PTR [rbx+0x140]
  42f016:	mov    BYTE PTR [rbx+0x108],0x28
  42f01d:	mov    r8,QWORD PTR [r13+0x8]
  42f021:	mov    QWORD PTR [rsp+0x48],rax
  42f026:	lea    rax,[rsp+0x40]
  42f02b:	mov    QWORD PTR [rsp+0x40],r8
  42f030:	mov    QWORD PTR [rbx+0x140],rax
  42f037:	call   0x42c610
  42f03c:	mov    rax,QWORD PTR [rsp+0x48]
  42f041:	mov    QWORD PTR [rbx+0x140],rax
  42f048:	mov    rax,QWORD PTR [rbx+0x100]
  42f04f:	cmp    rax,0xff
  42f055:	je     0x42fb28
  42f05b:	lea    rdx,[rax+0x1]
  42f05f:	mov    QWORD PTR [rbx+0x100],rdx
  42f066:	mov    BYTE PTR [rbx+rax*1],0x29
  42f06a:	mov    BYTE PTR [rbx+0x108],0x29
  42f071:	jmp    0x42cdee
  42f076:	mov    BYTE PTR [rbx+rsi*1],0x0
  42f07a:	mov    rdx,rsi
  42f07d:	mov    r8,QWORD PTR [rbx+0x118]
  42f084:	mov    rcx,rbx
  42f087:	xor    esi,esi
  42f089:	call   QWORD PTR [rbx+0x110]
  42f08f:	mov    QWORD PTR [rbx+0x100],0x0
  42f09a:	add    DWORD PTR [rbx+0x138],0x1
  42f0a1:	jmp    0x42cfb0
  42f0a6:	mov    r8,QWORD PTR [rbp+0x8]
  42f0aa:	mov    edx,r12d
  42f0ad:	mov    rcx,rbx
  42f0b0:	call   0x42fe20
  42f0b5:	jmp    0x42c725
  42f0ba:	mov    edx,DWORD PTR [rbx+0x134]
  42f0c0:	jmp    0x42f0db
  42f0c2:	mov    rax,QWORD PTR [rax+0x10]
  42f0c6:	sub    edx,0x1
  42f0c9:	test   rax,rax
  42f0cc:	je     0x42c770
  42f0d2:	cmp    DWORD PTR [rax],0x2f
  42f0d5:	jne    0x42c770
  42f0db:	cmp    edx,0x0
  42f0de:	jg     0x42f0c2
  42f0e0:	jne    0x42c770
  42f0e6:	mov    rax,QWORD PTR [rax+0x8]
  42f0ea:	test   rax,rax
  42f0ed:	jne    0x42e1db
  42f0f3:	jmp    0x42c770
  42f0f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42f100:	movsxd rbp,DWORD PTR [r8+0x10]
  42f104:	mov    rsi,QWORD PTR [r8+0x8]
  42f108:	add    rbp,rsi
  42f10b:	cmp    rsi,rbp
  42f10e:	jb     0x42f14b
  42f110:	jmp    0x42c725
  42f115:	mov    rax,QWORD PTR [rbx+0x100]
  42f11c:	cmp    rax,0xff
  42f122:	je     0x42f1b3
  42f128:	lea    rdx,[rax+0x1]
  42f12c:	mov    QWORD PTR [rbx+0x100],rdx
  42f133:	mov    BYTE PTR [rbx+rax*1],dil
  42f137:	mov    BYTE PTR [rbx+0x108],dil
  42f13e:	add    rsi,0x1
  42f142:	cmp    rbp,rsi
  42f145:	jbe    0x42c725
  42f14b:	mov    rax,rbp
  42f14e:	movzx  edi,BYTE PTR [rsi]
  42f151:	sub    rax,rsi
  42f154:	cmp    rax,0x3
  42f158:	jle    0x42f115
  42f15a:	cmp    dil,0x5f
  42f15e:	jne    0x42f115
  42f160:	cmp    BYTE PTR [rsi+0x1],0x5f
  42f164:	jne    0x42f115
  42f166:	cmp    BYTE PTR [rsi+0x2],0x55
  42f16a:	jne    0x42f115
  42f16c:	lea    r12,[rsi+0x3]
  42f170:	cmp    rbp,r12
  42f173:	jbe    0x42f115
  42f175:	xor    edx,edx
  42f177:	jmp    0x42f195
  42f179:	nop    DWORD PTR [rax+0x0]
  42f180:	sub    eax,0x30
  42f183:	shl    edx,0x4
  42f186:	add    r12,0x1
  42f18a:	add    edx,eax
  42f18c:	cmp    r12,rbp
  42f18f:	je     0x42fce0
  42f195:	movsx  eax,BYTE PTR [r12]
  42f19a:	lea    ecx,[rax-0x30]
  42f19d:	cmp    cl,0x9
  42f1a0:	jbe    0x42f180
  42f1a2:	lea    ecx,[rax-0x41]
  42f1a5:	cmp    cl,0x5
  42f1a8:	ja     0x42f6d2
  42f1ae:	sub    eax,0x37
  42f1b1:	jmp    0x42f183
  42f1b3:	mov    edx,0xff
  42f1b8:	mov    BYTE PTR [rbx+0xff],0x0
  42f1bf:	mov    r8,QWORD PTR [rbx+0x118]
  42f1c6:	mov    rcx,rbx
  42f1c9:	call   QWORD PTR [rbx+0x110]
  42f1cf:	add    DWORD PTR [rbx+0x138],0x1
  42f1d6:	mov    edx,0x1
  42f1db:	xor    eax,eax
  42f1dd:	jmp    0x42f12c
  42f1e2:	mov    edx,0xff
  42f1e7:	mov    BYTE PTR [rbx+0xff],0x0
  42f1ee:	mov    r8,QWORD PTR [rbx+0x118]
  42f1f5:	mov    rcx,rbx
  42f1f8:	call   QWORD PTR [rbx+0x110]
  42f1fe:	add    DWORD PTR [rbx+0x138],0x1
  42f205:	mov    edx,0x1
  42f20a:	xor    eax,eax
  42f20c:	jmp    0x42e58a
  42f211:	mov    DWORD PTR [rbx+0x130],0x1
  42f21b:	jmp    0x42c725
  42f220:	mov    edx,0xff
  42f225:	mov    BYTE PTR [rbx+0xff],0x0
  42f22c:	mov    r8,QWORD PTR [rbx+0x118]
  42f233:	mov    rcx,rbx
  42f236:	call   QWORD PTR [rbx+0x110]
  42f23c:	add    DWORD PTR [rbx+0x138],0x1
  42f243:	mov    edx,0x1
  42f248:	xor    eax,eax
  42f24a:	jmp    0x42df76
  42f24f:	mov    edx,0xff
  42f254:	mov    BYTE PTR [rbx+0xff],0x0
  42f25b:	mov    r8,QWORD PTR [rbx+0x118]
  42f262:	mov    rcx,rbx
  42f265:	call   QWORD PTR [rbx+0x110]
  42f26b:	add    DWORD PTR [rbx+0x138],0x1
  42f272:	mov    edx,0x1
  42f277:	xor    eax,eax
  42f279:	jmp    0x42df31
  42f27e:	mov    edx,0xff
  42f283:	mov    BYTE PTR [rbx+0xff],0x0
  42f28a:	mov    r8,QWORD PTR [rbx+0x118]
  42f291:	mov    rcx,rbx
  42f294:	call   QWORD PTR [rbx+0x110]
  42f29a:	add    DWORD PTR [rbx+0x138],0x1
  42f2a1:	mov    edx,0x1
  42f2a6:	xor    eax,eax
  42f2a8:	jmp    0x42e663
  42f2ad:	lea    rdx,[rip+0x1f78d]        # 0x44ea41
  42f2b4:	mov    rcx,rbx
  42f2b7:	lea    rsi,[rsp+0x40]
  42f2bc:	call   0x42c570
  42f2c1:	mov    eax,DWORD PTR [r13+0x10]
  42f2c5:	lea    rdx,[rip+0x1f783]        # 0x44ea4f
  42f2cc:	mov    rcx,rsi
  42f2cf:	mov    r14,rsi
  42f2d2:	lea    r8d,[rax+0x1]
  42f2d6:	call   0x43f068
  42f2db:	mov    edx,DWORD PTR [r14]
  42f2de:	add    r14,0x4
  42f2e2:	lea    eax,[rdx-0x1010101]
  42f2e8:	not    edx
  42f2ea:	and    eax,edx
  42f2ec:	and    eax,0x80808080
  42f2f1:	je     0x42f2db
  42f2f3:	mov    edx,eax
  42f2f5:	shr    edx,0x10
  42f2f8:	test   eax,0x8080
  42f2fd:	cmove  eax,edx
  42f300:	lea    rdx,[r14+0x2]
  42f304:	cmove  r14,rdx
  42f308:	add    al,al
  42f30a:	sbb    r14,0x3
  42f30e:	sub    r14,rsi
  42f311:	je     0x42f37a
  42f313:	mov    rax,QWORD PTR [rbx+0x100]
  42f31a:	xor    edi,edi
  42f31c:	jmp    0x42f342
  42f31e:	xchg   ax,ax
  42f320:	mov    rdx,rax
  42f323:	add    rax,0x1
  42f327:	add    rdi,0x1
  42f32b:	mov    QWORD PTR [rbx+0x100],rax
  42f332:	mov    BYTE PTR [rbx+rdx*1],bpl
  42f336:	cmp    rdi,r14
  42f339:	mov    BYTE PTR [rbx+0x108],bpl
  42f340:	je     0x42f37a
  42f342:	cmp    rax,0xff
  42f348:	movzx  ebp,BYTE PTR [rsi+rdi*1]
  42f34c:	jne    0x42f320
  42f34e:	mov    edx,0xff
  42f353:	mov    BYTE PTR [rbx+0xff],0x0
  42f35a:	mov    r8,QWORD PTR [rbx+0x118]
  42f361:	mov    rcx,rbx
  42f364:	call   QWORD PTR [rbx+0x110]
  42f36a:	add    DWORD PTR [rbx+0x138],0x1
  42f371:	mov    eax,0x1
  42f376:	xor    edx,edx
  42f378:	jmp    0x42f327
  42f37a:	lea    rdx,[rip+0x1f6d1]        # 0x44ea52
  42f381:	mov    rcx,rbx
  42f384:	call   0x42c570
  42f389:	mov    r13,QWORD PTR [r13+0x8]
  42f38d:	jmp    0x42e6fc
  42f392:	mov    edx,0xff
  42f397:	mov    BYTE PTR [rbx+0xff],0x0
  42f39e:	mov    r8,QWORD PTR [rbx+0x118]
  42f3a5:	mov    rcx,rbx
  42f3a8:	call   QWORD PTR [rbx+0x110]
  42f3ae:	add    DWORD PTR [rbx+0x138],0x1
  42f3b5:	mov    edx,0x1
  42f3ba:	xor    eax,eax
  42f3bc:	jmp    0x42d085
  42f3c1:	mov    edx,0xff
  42f3c6:	mov    BYTE PTR [rbx+0xff],0x0
  42f3cd:	mov    r8,QWORD PTR [rbx+0x118]
  42f3d4:	mov    rcx,rbx
  42f3d7:	call   QWORD PTR [rbx+0x110]
  42f3dd:	add    DWORD PTR [rbx+0x138],0x1
  42f3e4:	mov    edx,0x1
  42f3e9:	xor    eax,eax
  42f3eb:	jmp    0x42d04e
  42f3f0:	mov    edx,0xff
  42f3f5:	mov    BYTE PTR [rbx+0xff],0x0
  42f3fc:	mov    r8,QWORD PTR [rbx+0x118]
  42f403:	mov    rcx,rbx
  42f406:	call   QWORD PTR [rbx+0x110]
  42f40c:	add    DWORD PTR [rbx+0x138],0x1
  42f413:	mov    edx,0x1
  42f418:	xor    eax,eax
  42f41a:	jmp    0x42d948
  42f41f:	mov    edx,0xff
  42f424:	mov    BYTE PTR [rbx+0xff],0x0
  42f42b:	mov    r8,QWORD PTR [rbx+0x118]
  42f432:	mov    rcx,rbx
  42f435:	call   QWORD PTR [rbx+0x110]
  42f43b:	add    DWORD PTR [rbx+0x138],0x1
  42f442:	mov    edx,0x1
  42f447:	xor    eax,eax
  42f449:	jmp    0x42e6b4
  42f44e:	mov    edx,0xff
  42f453:	mov    BYTE PTR [rbx+0xff],0x0
  42f45a:	mov    r8,QWORD PTR [rbx+0x118]
  42f461:	mov    rcx,rbx
  42f464:	call   QWORD PTR [rbx+0x110]
  42f46a:	add    DWORD PTR [rbx+0x138],0x1
  42f471:	mov    edx,0x1
  42f476:	xor    eax,eax
  42f478:	jmp    0x42e24b
  42f47d:	mov    edx,0xff
  42f482:	mov    BYTE PTR [rbx+0xff],0x0
  42f489:	mov    r8,QWORD PTR [rbx+0x118]
  42f490:	mov    rcx,rbx
  42f493:	call   QWORD PTR [rbx+0x110]
  42f499:	add    DWORD PTR [rbx+0x138],0x1
  42f4a0:	mov    edx,0x1
  42f4a5:	xor    eax,eax
  42f4a7:	jmp    0x42e41d
  42f4ac:	mov    edx,0xff
  42f4b1:	mov    BYTE PTR [rbx+0xff],0x0
  42f4b8:	mov    r8,QWORD PTR [rbx+0x118]
  42f4bf:	mov    rcx,rbx
  42f4c2:	call   QWORD PTR [rbx+0x110]
  42f4c8:	add    DWORD PTR [rbx+0x138],0x1
  42f4cf:	mov    edx,0x1
  42f4d4:	xor    eax,eax
  42f4d6:	jmp    0x42cd88
  42f4db:	mov    rax,QWORD PTR [rbx+0x128]
  42f4e2:	mov    edx,r12d
  42f4e5:	mov    rcx,rbx
  42f4e8:	and    edx,0xffffff9f
  42f4eb:	mov    QWORD PTR [rsp+0x48],rbp
  42f4f0:	mov    DWORD PTR [rsp+0x50],0x0
  42f4f8:	mov    QWORD PTR [rsp+0x40],rax
  42f4fd:	lea    rax,[rsp+0x40]
  42f502:	mov    QWORD PTR [rbx+0x128],rax
  42f509:	mov    rax,QWORD PTR [rbx+0x120]
  42f510:	mov    r8,QWORD PTR [rbp+0x8]
  42f514:	mov    QWORD PTR [rsp+0x58],rax
  42f519:	call   0x42fe20
  42f51e:	mov    r15d,DWORD PTR [rsp+0x50]
  42f523:	mov    rax,QWORD PTR [rsp+0x40]
  42f528:	test   r15d,r15d
  42f52b:	mov    QWORD PTR [rbx+0x128],rax
  42f532:	jne    0x42c725
  42f538:	mov    edx,0x20
  42f53d:	mov    rcx,rbx
  42f540:	call   0x42bff0
  42f545:	jmp    0x42d53f
  42f54a:	mov    edx,0xff
  42f54f:	mov    BYTE PTR [rbx+0xff],0x0
  42f556:	mov    r8,QWORD PTR [rbx+0x118]
  42f55d:	mov    rcx,rbx
  42f560:	call   QWORD PTR [rbx+0x110]
  42f566:	add    DWORD PTR [rbx+0x138],0x1
  42f56d:	mov    edx,0x1
  42f572:	xor    eax,eax
  42f574:	jmp    0x42c6f0
  42f579:	mov    edx,0xff
  42f57e:	mov    BYTE PTR [rbx+0xff],0x0
  42f585:	mov    r8,QWORD PTR [rbx+0x118]
  42f58c:	mov    rcx,rbx
  42f58f:	call   QWORD PTR [rbx+0x110]
  42f595:	add    DWORD PTR [rbx+0x138],0x1
  42f59c:	mov    edx,0x1
  42f5a1:	xor    eax,eax
  42f5a3:	jmp    0x42c6b8
  42f5a8:	mov    r8,r14
  42f5ab:	mov    edx,r12d
  42f5ae:	mov    rcx,rbx
  42f5b1:	call   0x42fe20
  42f5b6:	jmp    0x42c725
  42f5bb:	mov    r8,QWORD PTR [r8+0x10]
  42f5bf:	mov    r9d,DWORD PTR [r8]
  42f5c2:	test   r9d,r9d
  42f5c5:	jne    0x42c6a1
  42f5cb:	cmp    ecx,0x3d
  42f5ce:	je     0x42fdc1
  42f5d4:	mov    edx,r12d
  42f5d7:	mov    rcx,rbx
  42f5da:	sub    esi,0x2
  42f5dd:	call   0x42fe20
  42f5e2:	cmp    esi,0x4
  42f5e5:	ja     0x42c725
  42f5eb:	lea    rax,[rip+0x1f7e6]        # 0x44edd8
  42f5f2:	movsxd rdx,DWORD PTR [rax+rsi*4]
  42f5f6:	add    rax,rdx
  42f5f9:	jmp    rax
  42f5fb:	lea    rdx,[rip+0x1f603]        # 0x44ec05
  42f602:	mov    rcx,rbx
  42f605:	call   0x42c570
  42f60a:	jmp    0x42c725
  42f60f:	lea    rdx,[rip+0x1f5ec]        # 0x44ec02
  42f616:	mov    rcx,rbx
  42f619:	call   0x42c570
  42f61e:	jmp    0x42c725
  42f623:	mov    edx,0x6c
  42f628:	mov    rcx,rbx
  42f62b:	call   0x42bff0
  42f630:	jmp    0x42c725
  42f635:	mov    edx,0x75
  42f63a:	mov    rcx,rbx
  42f63d:	call   0x42bff0
  42f642:	jmp    0x42c725
  42f647:	lea    rdx,[rip+0x1f5ba]        # 0x44ec08
  42f64e:	mov    rcx,rbx
  42f651:	call   0x42c570
  42f656:	jmp    0x42c725
  42f65b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f660:	mov    r8,QWORD PTR [rax+0x8]
  42f664:	mov    rax,QWORD PTR [rbx+0x128]
  42f66b:	mov    QWORD PTR [rsp+0x48],rbp
  42f670:	mov    DWORD PTR [rsp+0x50],0x0
  42f678:	mov    QWORD PTR [rsp+0x40],rax
  42f67d:	lea    rax,[rsp+0x40]
  42f682:	test   r8,r8
  42f685:	mov    QWORD PTR [rbx+0x128],rax
  42f68c:	mov    rax,QWORD PTR [rbx+0x120]
  42f693:	mov    QWORD PTR [rsp+0x58],rax
  42f698:	jne    0x42de40
  42f69e:	jmp    0x42de3c
  42f6a3:	mov    edx,0xff
  42f6a8:	mov    BYTE PTR [rbx+0xff],0x0
  42f6af:	mov    r8,QWORD PTR [rbx+0x118]
  42f6b6:	mov    rcx,rbx
  42f6b9:	call   QWORD PTR [rbx+0x110]
  42f6bf:	add    DWORD PTR [rbx+0x138],0x1
  42f6c6:	mov    eax,0x1
  42f6cb:	xor    edx,edx
  42f6cd:	jmp    0x42d0e0
  42f6d2:	lea    ecx,[rax-0x61]
  42f6d5:	cmp    cl,0x5
  42f6d8:	ja     0x42fd91
  42f6de:	sub    eax,0x57
  42f6e1:	jmp    0x42f183
  42f6e6:	mov    r8,QWORD PTR [rbp+0x10]
  42f6ea:	mov    edx,r12d
  42f6ed:	mov    rcx,rbx
  42f6f0:	call   0x42fe20
  42f6f5:	cmp    DWORD PTR [rsp+0x50],0x0
  42f6fa:	mov    QWORD PTR [rbx+0x128],r13
  42f701:	jne    0x42c725
  42f707:	mov    r9,r13
  42f70a:	jmp    0x42d510
  42f70f:	mov    r9,r10
  42f712:	mov    r8,QWORD PTR [rbx+0x140]
  42f719:	test   r8,r8
  42f71c:	je     0x42c739
  42f722:	cmp    QWORD PTR [r8],rax
  42f725:	je     0x42ed35
  42f72b:	mov    rdx,r8
  42f72e:	mov    rdx,QWORD PTR [rdx+0x8]
  42f732:	test   rdx,rdx
  42f735:	je     0x42c739
  42f73b:	mov    rcx,QWORD PTR [rdx]
  42f73e:	cmp    rcx,rax
  42f741:	je     0x42ed35
  42f747:	cmp    rbp,rcx
  42f74a:	jne    0x42f72e
  42f74c:	cmp    r8,rdx
  42f74f:	je     0x42f72e
  42f751:	jmp    0x42ed35
  42f756:	mov    edx,0x20
  42f75b:	mov    rcx,rbx
  42f75e:	call   0x42bff0
  42f763:	jmp    0x42df5f
  42f768:	mov    edx,0x20
  42f76d:	mov    rcx,rbx
  42f770:	call   0x42bff0
  42f775:	jmp    0x42df1a
  42f77a:	mov    rcx,rbx
  42f77d:	mov    edx,0x5b
  42f782:	call   0x42bff0
  42f787:	mov    r8,QWORD PTR [rbp+0x10]
  42f78b:	mov    edx,r12d
  42f78e:	mov    rcx,rbx
  42f791:	call   0x42fe20
  42f796:	mov    edx,0x5d
  42f79b:	mov    rcx,rbx
  42f79e:	call   0x42bff0
  42f7a3:	jmp    0x42c725
  42f7a8:	mov    edx,0x2d
  42f7ad:	mov    rcx,rbx
  42f7b0:	call   0x42bff0
  42f7b5:	jmp    0x42c70c
  42f7ba:	movzx  r9d,BYTE PTR [rdx]
  42f7be:	lea    r10d,[r9-0x72]
  42f7c2:	cmp    r10b,0x1
  42f7c6:	jbe    0x42f7d6
  42f7c8:	sub    r9d,0x63
  42f7cc:	cmp    r9b,0x1
  42f7d0:	ja     0x42d251
  42f7d6:	mov    edx,r12d
  42f7d9:	mov    rcx,rbx
  42f7dc:	call   0x430f70
  42f7e1:	mov    rcx,rbx
  42f7e4:	mov    edx,0x3c
  42f7e9:	call   0x42bff0
  42f7ee:	mov    rax,QWORD PTR [rbp+0x10]
  42f7f2:	mov    edx,r12d
  42f7f5:	mov    rcx,rbx
  42f7f8:	mov    r8,QWORD PTR [rax+0x8]
  42f7fc:	call   0x42fe20
  42f801:	lea    rdx,[rip+0x1f498]        # 0x44eca0
  42f808:	mov    rcx,rbx
  42f80b:	call   0x42c570
  42f810:	mov    rax,QWORD PTR [rbp+0x10]
  42f814:	mov    edx,r12d
  42f817:	mov    rcx,rbx
  42f81a:	mov    r8,QWORD PTR [rax+0x10]
  42f81e:	call   0x42fe20
  42f823:	mov    edx,0x29
  42f828:	mov    rcx,rbx
  42f82b:	call   0x42bff0
  42f830:	jmp    0x42c725
  42f835:	mov    edx,0xff
  42f83a:	mov    BYTE PTR [rbx+0xff],0x0
  42f841:	mov    r8,QWORD PTR [rbx+0x118]
  42f848:	mov    rcx,rbx
  42f84b:	call   QWORD PTR [rbx+0x110]
  42f851:	add    DWORD PTR [rbx+0x138],0x1
  42f858:	mov    edx,0x1
  42f85d:	xor    eax,eax
  42f85f:	jmp    0x42eada
  42f864:	cmp    edx,0x4
  42f867:	je     0x42fa3c
  42f86d:	cmp    edx,0x2
  42f870:	jne    0x42fa52
  42f876:	mov    rcx,QWORD PTR [rdi+0x10]
  42f87a:	cmp    DWORD PTR [rcx],0x46
  42f87d:	je     0x42fd0c
  42f883:	mov    eax,DWORD PTR [rcx]
  42f885:	sub    eax,0x1c
  42f888:	cmp    eax,0x4
  42f88b:	jbe    0x42f900
  42f88d:	jmp    0x42fa52
  42f892:	lea    eax,[r13-0x1]
  42f896:	mov    edx,r13d
  42f899:	add    r13d,0x1
  42f89d:	shl    rdx,0x5
  42f8a1:	shl    rax,0x5
  42f8a5:	mov    r8,QWORD PTR [rsp+rax*1+0x40]
  42f8aa:	mov    QWORD PTR [rsp+rdx*1+0x40],r8
  42f8af:	mov    r8,QWORD PTR [rsp+rax*1+0x48]
  42f8b4:	mov    QWORD PTR [rsp+rdx*1+0x48],r8
  42f8b9:	mov    r8,QWORD PTR [rsp+rax*1+0x50]
  42f8be:	mov    QWORD PTR [rsp+rdx*1+0x50],r8
  42f8c3:	mov    r8,QWORD PTR [rsp+rax*1+0x58]
  42f8c8:	mov    QWORD PTR [rsp+rdx*1+0x58],r8
  42f8cd:	lea    r8,[rsi+rax*1]
  42f8d1:	mov    QWORD PTR [rsp+rdx*1+0x40],r8
  42f8d6:	add    rdx,rsi
  42f8d9:	mov    QWORD PTR [rsp+rax*1+0x48],rcx
  42f8de:	mov    DWORD PTR [rsp+rax*1+0x50],0x0
  42f8e6:	mov    QWORD PTR [rsp+rax*1+0x58],r9
  42f8eb:	mov    QWORD PTR [rbx+0x128],rdx
  42f8f2:	mov    rcx,QWORD PTR [rcx+0x8]
  42f8f6:	mov    eax,DWORD PTR [rcx]
  42f8f8:	sub    eax,0x1c
  42f8fb:	cmp    eax,0x4
  42f8fe:	ja     0x42f90b
  42f900:	cmp    r13d,0x4
  42f904:	jne    0x42f892
  42f906:	jmp    0x42e00e
  42f90b:	mov    r8,QWORD PTR [rbp+0x10]
  42f90f:	mov    edx,r12d
  42f912:	mov    rcx,rbx
  42f915:	call   0x42fe20
  42f91a:	cmp    DWORD PTR [rdi],0x4
  42f91d:	je     0x42fa6a
  42f923:	test   r13d,r13d
  42f926:	je     0x42f95c
  42f928:	lea    esi,[r13-0x1]
  42f92c:	mov    r13,rsi
  42f92f:	shl    rsi,0x5
  42f933:	mov    r8d,DWORD PTR [rsp+rsi*1+0x50]
  42f938:	test   r8d,r8d
  42f93b:	jne    0x42f923
  42f93d:	mov    rcx,rbx
  42f940:	mov    edx,0x20
  42f945:	call   0x42bff0
  42f94a:	mov    r8,QWORD PTR [rsp+rsi*1+0x48]
  42f94f:	mov    edx,r12d
  42f952:	mov    rcx,rbx
  42f955:	call   0x42fe60
  42f95a:	jmp    0x42f923
  42f95c:	mov    QWORD PTR [rbx+0x128],r14
  42f963:	jmp    0x42c725
  42f968:	mov    edx,0xff
  42f96d:	mov    BYTE PTR [rbx+0xff],0x0
  42f974:	mov    r8,QWORD PTR [rbx+0x118]
  42f97b:	mov    rcx,rbx
  42f97e:	call   QWORD PTR [rbx+0x110]
  42f984:	add    DWORD PTR [rbx+0x138],0x1
  42f98b:	mov    edx,0x1
  42f990:	xor    eax,eax
  42f992:	jmp    0x42e6db
  42f997:	mov    rsi,QWORD PTR [r8+0x8]
  42f99b:	lea    rdi,[rip+0x1f0b4]        # 0x44ea56
  42f9a2:	mov    ecx,0x6
  42f9a7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42f9a9:	jne    0x42df02
  42f9af:	mov    r8,QWORD PTR [rbp+0x10]
  42f9b3:	mov    edx,r12d
  42f9b6:	mov    rcx,rbx
  42f9b9:	call   0x42fe20
  42f9be:	lea    rdx,[rip+0x1f098]        # 0x44ea5d
  42f9c5:	mov    rcx,rbx
  42f9c8:	call   0x42c570
  42f9cd:	jmp    0x42df88
  42f9d2:	cmp    DWORD PTR [rcx+0x10],0x1
  42f9d6:	jne    0x42d25b
  42f9dc:	mov    rcx,QWORD PTR [rcx+0x8]
  42f9e0:	cmp    BYTE PTR [rcx],0x3e
  42f9e3:	jne    0x42d25b
  42f9e9:	mov    edx,0x28
  42f9ee:	mov    rcx,rbx
  42f9f1:	call   0x42bff0
  42f9f6:	mov    rax,QWORD PTR [rbp+0x8]
  42f9fa:	mov    rax,QWORD PTR [rax+0x8]
  42f9fe:	mov    rsi,QWORD PTR [rax]
  42fa01:	mov    rax,QWORD PTR [rbp+0x10]
  42fa05:	jmp    0x42d25e
  42fa0a:	mov    rcx,rbx
  42fa0d:	mov    edx,0x5b
  42fa12:	call   0x42bff0
  42fa17:	mov    rax,QWORD PTR [rbp+0x10]
  42fa1b:	mov    edx,r12d
  42fa1e:	mov    rcx,rbx
  42fa21:	mov    r8,QWORD PTR [rax+0x10]
  42fa25:	call   0x42fe20
  42fa2a:	mov    edx,0x5d
  42fa2f:	mov    rcx,rbx
  42fa32:	call   0x42bff0
  42fa37:	jmp    0x42d2da
  42fa3c:	lea    rax,[rsp+0x30]
  42fa41:	mov    QWORD PTR [rsp+0x30],r9
  42fa46:	mov    QWORD PTR [rsp+0x38],rdi
  42fa4b:	mov    QWORD PTR [rbx+0x120],rax
  42fa52:	mov    r8,QWORD PTR [rbp+0x10]
  42fa56:	mov    edx,r12d
  42fa59:	mov    rcx,rbx
  42fa5c:	call   0x42fe20
  42fa61:	cmp    DWORD PTR [rdi],0x4
  42fa64:	jne    0x42f928
  42fa6a:	mov    rax,QWORD PTR [rsp+0x30]
  42fa6f:	mov    QWORD PTR [rbx+0x120],rax
  42fa76:	jmp    0x42f923
  42fa7b:	mov    edx,r12d
  42fa7e:	mov    rcx,rbx
  42fa81:	call   0x430f70
  42fa86:	jmp    0x42d2c7
  42fa8b:	mov    rax,QWORD PTR [r8+0x10]
  42fa8f:	cmp    DWORD PTR [rax],0x29
  42fa92:	je     0x42fa9e
  42fa94:	mov    DWORD PTR [rbx+0x130],0x1
  42fa9e:	mov    r8,QWORD PTR [r8+0x8]
  42faa2:	mov    edx,r12d
  42faa5:	mov    rcx,rbx
  42faa8:	call   0x431040
  42faad:	jmp    0x42d292
  42fab2:	mov    r8,r13
  42fab5:	mov    edx,r12d
  42fab8:	mov    rcx,rbx
  42fabb:	call   0x431040
  42fac0:	mov    r8,r15
  42fac3:	mov    edx,r12d
  42fac6:	mov    rcx,rbx
  42fac9:	call   0x430f70
  42face:	mov    r8,r14
  42fad1:	mov    edx,r12d
  42fad4:	mov    rcx,rbx
  42fad7:	call   0x431040
  42fadc:	lea    rdx,[rip+0x1f116]        # 0x44ebf9
  42fae3:	mov    rcx,rbx
  42fae6:	call   0x42c570
  42faeb:	mov    r8,rbp
  42faee:	mov    edx,r12d
  42faf1:	mov    rcx,rbx
  42faf4:	call   0x431040
  42faf9:	jmp    0x42c725
  42fafe:	mov    BYTE PTR [rbx+0xff],0x0
  42fb05:	mov    r8,QWORD PTR [rbx+0x118]
  42fb0c:	mov    edx,0xff
  42fb11:	mov    rcx,rbx
  42fb14:	call   QWORD PTR [rbx+0x110]
  42fb1a:	add    DWORD PTR [rbx+0x138],0x1
  42fb21:	xor    eax,eax
  42fb23:	jmp    0x42ec3b
  42fb28:	mov    BYTE PTR [rbx+0xff],0x0
  42fb2f:	mov    r8,QWORD PTR [rbx+0x118]
  42fb36:	mov    edx,0xff
  42fb3b:	mov    rcx,rbx
  42fb3e:	call   QWORD PTR [rbx+0x110]
  42fb44:	add    DWORD PTR [rbx+0x138],0x1
  42fb4b:	xor    eax,eax
  42fb4d:	jmp    0x42f05b
  42fb52:	mov    BYTE PTR [rbx+0xff],0x0
  42fb59:	mov    r8,QWORD PTR [rbx+0x118]
  42fb60:	mov    edx,0xff
  42fb65:	mov    rcx,rbx
  42fb68:	call   QWORD PTR [rbx+0x110]
  42fb6e:	add    DWORD PTR [rbx+0x138],0x1
  42fb75:	xor    eax,eax
  42fb77:	jmp    0x42effa
  42fb7c:	mov    BYTE PTR [rbx+0xff],0x0
  42fb83:	mov    r8,QWORD PTR [rbx+0x118]
  42fb8a:	mov    edx,0xff
  42fb8f:	mov    rcx,rbx
  42fb92:	call   QWORD PTR [rbx+0x110]
  42fb98:	add    DWORD PTR [rbx+0x138],0x1
  42fb9f:	xor    eax,eax
  42fba1:	jmp    0x42efcc
  42fba6:	mov    BYTE PTR [rbx+0xff],0x0
  42fbad:	mov    r8,QWORD PTR [rbx+0x118]
  42fbb4:	mov    edx,0xff
  42fbb9:	mov    rcx,rbx
  42fbbc:	call   QWORD PTR [rbx+0x110]
  42fbc2:	add    DWORD PTR [rbx+0x138],0x1
  42fbc9:	xor    eax,eax
  42fbcb:	jmp    0x42ef5f
  42fbd0:	cmp    QWORD PTR [rbx+0x100],0xff
  42fbdb:	je     0x42fdd7
  42fbe1:	mov    rax,QWORD PTR [rbx+0x100]
  42fbe8:	lea    rdx,[rax+0x1]
  42fbec:	mov    QWORD PTR [rbx+0x100],rdx
  42fbf3:	mov    BYTE PTR [rbx+rax*1],0x20
  42fbf7:	mov    BYTE PTR [rbx+0x108],0x20
  42fbfe:	jmp    0x42ef4c
  42fc03:	mov    r8,QWORD PTR [rbp+0x8]
  42fc07:	mov    edx,r12d
  42fc0a:	mov    rcx,rbx
  42fc0d:	call   0x431040
  42fc12:	lea    rdx,[rip+0x1f018]        # 0x44ec31
  42fc19:	mov    rcx,rbx
  42fc1c:	call   0x42c570
  42fc21:	jmp    0x42c725
  42fc26:	mov    BYTE PTR [rbx+0xff],0x0
  42fc2d:	mov    r8,QWORD PTR [rbx+0x118]
  42fc34:	mov    edx,0xff
  42fc39:	mov    rcx,rbx
  42fc3c:	call   QWORD PTR [rbx+0x110]
  42fc42:	add    DWORD PTR [rbx+0x138],0x1
  42fc49:	xor    eax,eax
  42fc4b:	jmp    0x42eed6
  42fc50:	mov    BYTE PTR [rbx+0xff],0x0
  42fc57:	mov    r8,QWORD PTR [rbx+0x118]
  42fc5e:	mov    edx,0xff
  42fc63:	mov    rcx,rbx
  42fc66:	call   QWORD PTR [rbx+0x110]
  42fc6c:	add    DWORD PTR [rbx+0x138],0x1
  42fc73:	xor    eax,eax
  42fc75:	jmp    0x42ee9f
  42fc7a:	mov    rax,QWORD PTR [r14+0x8]
  42fc7e:	cmp    DWORD PTR [rax],0x1
  42fc81:	jne    0x42ee50
  42fc87:	mov    rdx,QWORD PTR [r14+0x10]
  42fc8b:	cmp    DWORD PTR [rdx],0x29
  42fc8e:	cmove  r14,rax
  42fc92:	jmp    0x42ee50
  42fc97:	test   edi,edi
  42fc99:	jne    0x42c765
  42fc9f:	jmp    0x42c770
  42fca4:	cmp    QWORD PTR [rbx+0x100],0xff
  42fcaf:	je     0x42fd5e
  42fcb5:	mov    rax,QWORD PTR [rbx+0x100]
  42fcbc:	lea    rdx,[rax+0x1]
  42fcc0:	mov    QWORD PTR [rbx+0x100],rdx
  42fcc7:	mov    BYTE PTR [rbx+rax*1],0x20
  42fccb:	mov    BYTE PTR [rbx+0x108],0x20
  42fcd2:	jmp    0x42efb9
  42fcd7:	xor    edx,edx
  42fcd9:	xor    edi,edi
  42fcdb:	jmp    0x42de12
  42fce0:	mov    edi,0x5f
  42fce5:	jmp    0x42f115
  42fcea:	mov    r8,QWORD PTR [r14+0x8]
  42fcee:	mov    edx,r12d
  42fcf1:	mov    rcx,rbx
  42fcf4:	call   0x431040
  42fcf9:	mov    r8,r13
  42fcfc:	mov    edx,r12d
  42fcff:	mov    rcx,rbx
  42fd02:	call   0x430f70
  42fd07:	jmp    0x42c725
  42fd0c:	mov    rcx,QWORD PTR [rcx+0x8]
  42fd10:	test   rcx,rcx
  42fd13:	je     0x42e00e
  42fd19:	jmp    0x42f883
  42fd1e:	mov    DWORD PTR [rbx+0x160],edi
  42fd24:	mov    DWORD PTR [rbx+0x130],0x1
  42fd2e:	jmp    0x42c725
  42fd33:	mov    rax,QWORD PTR [rax+0x8]
  42fd37:	movzx  eax,BYTE PTR [rax]
  42fd3a:	cmp    al,0x30
  42fd3c:	je     0x42fe0a
  42fd42:	cmp    al,0x31
  42fd44:	jne    0x42c6a1
  42fd4a:	lea    rdx,[rip+0x1eec1]        # 0x44ec12
  42fd51:	mov    rcx,rbx
  42fd54:	call   0x42c570
  42fd59:	jmp    0x42c725
  42fd5e:	mov    BYTE PTR [rbx+0xff],0x0
  42fd65:	mov    r8,QWORD PTR [rbx+0x118]
  42fd6c:	mov    edx,0xff
  42fd71:	mov    rcx,rbx
  42fd74:	call   QWORD PTR [rbx+0x110]
  42fd7a:	mov    QWORD PTR [rbx+0x100],0x0
  42fd85:	add    DWORD PTR [rbx+0x138],0x1
  42fd8c:	jmp    0x42fcb5
  42fd91:	cmp    rbp,r12
  42fd94:	jbe    0x42fce0
  42fd9a:	cmp    al,0x5f
  42fd9c:	jne    0x42fce0
  42fda2:	cmp    edx,0xff
  42fda8:	ja     0x42fce0
  42fdae:	movsx  edx,dl
  42fdb1:	mov    rcx,rbx
  42fdb4:	mov    rsi,r12
  42fdb7:	call   0x42bff0
  42fdbc:	jmp    0x42f13e
  42fdc1:	mov    edx,0x2d
  42fdc6:	mov    rcx,rbx
  42fdc9:	call   0x42bff0
  42fdce:	mov    r8,QWORD PTR [rbp+0x10]
  42fdd2:	jmp    0x42f5d4
  42fdd7:	mov    BYTE PTR [rbx+0xff],0x0
  42fdde:	mov    r8,QWORD PTR [rbx+0x118]
  42fde5:	mov    edx,0xff
  42fdea:	mov    rcx,rbx
  42fded:	call   QWORD PTR [rbx+0x110]
  42fdf3:	mov    QWORD PTR [rbx+0x100],0x0
  42fdfe:	add    DWORD PTR [rbx+0x138],0x1
  42fe05:	jmp    0x42fbe1
  42fe0a:	lea    rdx,[rip+0x1edfb]        # 0x44ec0c
  42fe11:	mov    rcx,rbx
  42fe14:	call   0x42c570
  42fe19:	jmp    0x42c725
  42fe1e:	xchg   ax,ax
  42fe20:	push   rbx
  42fe21:	sub    rsp,0x30
  42fe25:	mov    rax,QWORD PTR [rcx+0x140]
  42fe2c:	mov    rbx,rcx
  42fe2f:	mov    QWORD PTR [rsp+0x20],r8
  42fe34:	mov    QWORD PTR [rsp+0x28],rax
  42fe39:	lea    rax,[rsp+0x20]
  42fe3e:	mov    QWORD PTR [rcx+0x140],rax
  42fe45:	call   0x42c610
  42fe4a:	mov    rax,QWORD PTR [rsp+0x28]
  42fe4f:	mov    QWORD PTR [rbx+0x140],rax
  42fe56:	add    rsp,0x30
  42fe5a:	pop    rbx
  42fe5b:	ret    
  42fe5c:	nop    DWORD PTR [rax+0x0]
  42fe60:	push   r13
  42fe62:	push   r12
  42fe64:	push   rbp
  42fe65:	push   rdi
  42fe66:	push   rsi
  42fe67:	push   rbx
  42fe68:	sub    rsp,0x38
  42fe6c:	mov    eax,DWORD PTR [r8]
  42fe6f:	mov    rbx,rcx
  42fe72:	mov    r12d,edx
  42fe75:	mov    rdi,r8
  42fe78:	sub    eax,0x3
  42fe7b:	cmp    eax,0x2a
  42fe7e:	ja     0x430440
  42fe84:	lea    rcx,[rip+0x1efa5]        # 0x44ee30
  42fe8b:	movsxd rax,DWORD PTR [rcx+rax*4]
  42fe8f:	add    rcx,rax
  42fe92:	jmp    rcx
  42fe94:	mov    rax,QWORD PTR [rbx+0x100]
  42fe9b:	lea    rsi,[rip+0x1ef80]        # 0x44ee22
  42fea2:	lea    r13,[rip+0x1ef83]        # 0x44ee2c
  42fea9:	jmp    0x42fed6
  42feab:	nop    DWORD PTR [rax+rax*1+0x0]
  42feb0:	mov    rdx,rax
  42feb3:	add    rax,0x1
  42feb7:	add    rsi,0x1
  42febb:	mov    QWORD PTR [rbx+0x100],rax
  42fec2:	mov    BYTE PTR [rbx+rdx*1],bpl
  42fec6:	cmp    rsi,r13
  42fec9:	mov    BYTE PTR [rbx+0x108],bpl
  42fed0:	je     0x430465
  42fed6:	cmp    rax,0xff
  42fedc:	movzx  ebp,BYTE PTR [rsi]
  42fedf:	jne    0x42feb0
  42fee1:	mov    edx,0xff
  42fee6:	mov    BYTE PTR [rbx+0xff],0x0
  42feed:	mov    r8,QWORD PTR [rbx+0x118]
  42fef4:	mov    rcx,rbx
  42fef7:	call   QWORD PTR [rbx+0x110]
  42fefd:	add    DWORD PTR [rbx+0x138],0x1
  42ff04:	mov    eax,0x1
  42ff09:	xor    edx,edx
  42ff0b:	jmp    0x42feb7
  42ff0d:	nop    DWORD PTR [rax]
  42ff10:	mov    r8,QWORD PTR [r8+0x8]
  42ff14:	mov    rax,QWORD PTR [rbx+0x140]
  42ff1b:	mov    QWORD PTR [rsp+0x20],r8
  42ff20:	mov    QWORD PTR [rsp+0x28],rax
  42ff25:	lea    rax,[rsp+0x20]
  42ff2a:	mov    QWORD PTR [rbx+0x140],rax
  42ff31:	mov    edx,r12d
  42ff34:	mov    rcx,rbx
  42ff37:	call   0x42c610
  42ff3c:	mov    rax,QWORD PTR [rsp+0x28]
  42ff41:	mov    QWORD PTR [rbx+0x140],rax
  42ff48:	add    rsp,0x38
  42ff4c:	pop    rbx
  42ff4d:	pop    rsi
  42ff4e:	pop    rdi
  42ff4f:	pop    rbp
  42ff50:	pop    r12
  42ff52:	pop    r13
  42ff54:	ret    
  42ff55:	mov    rax,QWORD PTR [rbx+0x100]
  42ff5c:	lea    rsi,[rip+0x1ee89]        # 0x44edec
  42ff63:	lea    rbp,[rip+0x1ee8b]        # 0x44edf5
  42ff6a:	jmp    0x42ff92
  42ff6c:	nop    DWORD PTR [rax+0x0]
  42ff70:	mov    rdx,rax
  42ff73:	add    rax,0x1
  42ff77:	add    rsi,0x1
  42ff7b:	mov    QWORD PTR [rbx+0x100],rax
  42ff82:	mov    BYTE PTR [rbx+rdx*1],dil
  42ff86:	cmp    rsi,rbp
  42ff89:	mov    BYTE PTR [rbx+0x108],dil
  42ff90:	je     0x42ff48
  42ff92:	cmp    rax,0xff
  42ff98:	movzx  edi,BYTE PTR [rsi]
  42ff9b:	jne    0x42ff70
  42ff9d:	mov    edx,0xff
  42ffa2:	mov    BYTE PTR [rbx+0xff],0x0
  42ffa9:	mov    r8,QWORD PTR [rbx+0x118]
  42ffb0:	mov    rcx,rbx
  42ffb3:	call   QWORD PTR [rbx+0x110]
  42ffb9:	add    DWORD PTR [rbx+0x138],0x1
  42ffc0:	mov    eax,0x1
  42ffc5:	xor    edx,edx
  42ffc7:	jmp    0x42ff77
  42ffc9:	nop    DWORD PTR [rax+0x0]
  42ffd0:	mov    rax,QWORD PTR [rbx+0x100]
  42ffd7:	lea    rsi,[rip+0x1ee18]        # 0x44edf6
  42ffde:	lea    rbp,[rip+0x1ee1a]        # 0x44edff
  42ffe5:	jmp    0x430016
  42ffe7:	nop    WORD PTR [rax+rax*1+0x0]
  42fff0:	mov    rdx,rax
  42fff3:	add    rax,0x1
  42fff7:	add    rsi,0x1
  42fffb:	mov    QWORD PTR [rbx+0x100],rax
  430002:	mov    BYTE PTR [rbx+rdx*1],dil
  430006:	cmp    rsi,rbp
  430009:	mov    BYTE PTR [rbx+0x108],dil
  430010:	je     0x42ff48
  430016:	cmp    rax,0xff
  43001c:	movzx  edi,BYTE PTR [rsi]
  43001f:	jne    0x42fff0
  430021:	mov    edx,0xff
  430026:	mov    BYTE PTR [rbx+0xff],0x0
  43002d:	mov    r8,QWORD PTR [rbx+0x118]
  430034:	mov    rcx,rbx
  430037:	call   QWORD PTR [rbx+0x110]
  43003d:	add    DWORD PTR [rbx+0x138],0x1
  430044:	mov    eax,0x1
  430049:	xor    edx,edx
  43004b:	jmp    0x42fff7
  43004d:	nop    DWORD PTR [rax]
  430050:	mov    rax,QWORD PTR [rbx+0x100]
  430057:	lea    rsi,[rip+0x1eda2]        # 0x44ee00
  43005e:	lea    rbp,[rip+0x1eda1]        # 0x44ee06
  430065:	jmp    0x430096
  430067:	nop    WORD PTR [rax+rax*1+0x0]
  430070:	mov    rdx,rax
  430073:	add    rax,0x1
  430077:	add    rsi,0x1
  43007b:	mov    QWORD PTR [rbx+0x100],rax
  430082:	mov    BYTE PTR [rbx+rdx*1],dil
  430086:	cmp    rsi,rbp
  430089:	mov    BYTE PTR [rbx+0x108],dil
  430090:	je     0x42ff48
  430096:	cmp    rax,0xff
  43009c:	movzx  edi,BYTE PTR [rsi]
  43009f:	jne    0x430070
  4300a1:	mov    edx,0xff
  4300a6:	mov    BYTE PTR [rbx+0xff],0x0
  4300ad:	mov    r8,QWORD PTR [rbx+0x118]
  4300b4:	mov    rcx,rbx
  4300b7:	call   QWORD PTR [rbx+0x110]
  4300bd:	add    DWORD PTR [rbx+0x138],0x1
  4300c4:	mov    eax,0x1
  4300c9:	xor    edx,edx
  4300cb:	jmp    0x430077
  4300cd:	nop    DWORD PTR [rax]
  4300d0:	mov    rdx,QWORD PTR [rbx+0x100]
  4300d7:	cmp    rdx,0xff
  4300de:	je     0x43052e
  4300e4:	lea    rax,[rdx+0x1]
  4300e8:	mov    QWORD PTR [rbx+0x100],rax
  4300ef:	mov    BYTE PTR [rbx+rdx*1],0x20
  4300f3:	mov    BYTE PTR [rbx+0x108],0x20
  4300fa:	cmp    rax,0xff
  430100:	je     0x4304d0
  430106:	lea    rdx,[rax+0x1]
  43010a:	mov    QWORD PTR [rbx+0x100],rdx
  430111:	mov    BYTE PTR [rbx+rax*1],0x26
  430115:	mov    BYTE PTR [rbx+0x108],0x26
  43011c:	add    rsp,0x38
  430120:	pop    rbx
  430121:	pop    rsi
  430122:	pop    rdi
  430123:	pop    rbp
  430124:	pop    r12
  430126:	pop    r13
  430128:	ret    
  430129:	nop    DWORD PTR [rax+0x0]
  430130:	mov    rdx,QWORD PTR [rbx+0x100]
  430137:	cmp    rdx,0xff
  43013e:	je     0x43058c
  430144:	lea    rax,[rdx+0x1]
  430148:	mov    QWORD PTR [rbx+0x100],rax
  43014f:	mov    BYTE PTR [rbx+rdx*1],0x20
  430153:	mov    BYTE PTR [rbx+0x108],0x20
  43015a:	lea    rsi,[rip+0x1eca6]        # 0x44ee07
  430161:	lea    rbp,[rip+0x1eca1]        # 0x44ee09
  430168:	jmp    0x430196
  43016a:	nop    WORD PTR [rax+rax*1+0x0]
  430170:	mov    rdx,rax
  430173:	add    rax,0x1
  430177:	add    rsi,0x1
  43017b:	mov    QWORD PTR [rbx+0x100],rax
  430182:	mov    BYTE PTR [rbx+rdx*1],dil
  430186:	cmp    rsi,rbp
  430189:	mov    BYTE PTR [rbx+0x108],dil
  430190:	je     0x42ff48
  430196:	cmp    rax,0xff
  43019c:	movzx  edi,BYTE PTR [rsi]
  43019f:	jne    0x430170
  4301a1:	mov    edx,0xff
  4301a6:	mov    BYTE PTR [rbx+0xff],0x0
  4301ad:	mov    r8,QWORD PTR [rbx+0x118]
  4301b4:	mov    rcx,rbx
  4301b7:	call   QWORD PTR [rbx+0x110]
  4301bd:	add    DWORD PTR [rbx+0x138],0x1
  4301c4:	mov    eax,0x1
  4301c9:	xor    edx,edx
  4301cb:	jmp    0x430177
  4301cd:	nop    DWORD PTR [rax]
  4301d0:	mov    rax,QWORD PTR [rbx+0x100]
  4301d7:	cmp    rax,0xff
  4301dd:	je     0x4304ff
  4301e3:	lea    rdx,[rax+0x1]
  4301e7:	mov    QWORD PTR [rbx+0x100],rdx
  4301ee:	mov    BYTE PTR [rbx+rax*1],0x20
  4301f2:	mov    BYTE PTR [rbx+0x108],0x20
  4301f9:	mov    r8,QWORD PTR [rdi+0x10]
  4301fd:	jmp    0x42ff14
  430202:	and    r12d,0x4
  430206:	jne    0x42ff48
  43020c:	mov    rax,QWORD PTR [rbx+0x100]
  430213:	cmp    rax,0xff
  430219:	je     0x4305ea
  43021f:	lea    rdx,[rax+0x1]
  430223:	mov    QWORD PTR [rbx+0x100],rdx
  43022a:	mov    BYTE PTR [rbx+rax*1],0x2a
  43022e:	mov    BYTE PTR [rbx+0x108],0x2a
  430235:	jmp    0x42ff48
  43023a:	nop    WORD PTR [rax+rax*1+0x0]
  430240:	mov    rax,QWORD PTR [rbx+0x100]
  430247:	jmp    0x4300fa
  43024c:	nop    DWORD PTR [rax+0x0]
  430250:	mov    rax,QWORD PTR [rbx+0x100]
  430257:	jmp    0x43015a
  43025c:	nop    DWORD PTR [rax+0x0]
  430260:	mov    rax,QWORD PTR [rbx+0x100]
  430267:	lea    rsi,[rip+0x1eb9c]        # 0x44ee0a
  43026e:	lea    rbp,[rip+0x1eb9d]        # 0x44ee12
  430275:	jmp    0x4302a6
  430277:	nop    WORD PTR [rax+rax*1+0x0]
  430280:	mov    rdx,rax
  430283:	add    rax,0x1
  430287:	add    rsi,0x1
  43028b:	mov    QWORD PTR [rbx+0x100],rax
  430292:	mov    BYTE PTR [rbx+rdx*1],dil
  430296:	cmp    rsi,rbp
  430299:	mov    BYTE PTR [rbx+0x108],dil
  4302a0:	je     0x42ff48
  4302a6:	cmp    rax,0xff
  4302ac:	movzx  edi,BYTE PTR [rsi]
  4302af:	jne    0x430280
  4302b1:	mov    edx,0xff
  4302b6:	mov    BYTE PTR [rbx+0xff],0x0
  4302bd:	mov    r8,QWORD PTR [rbx+0x118]
  4302c4:	mov    rcx,rbx
  4302c7:	call   QWORD PTR [rbx+0x110]
  4302cd:	add    DWORD PTR [rbx+0x138],0x1
  4302d4:	mov    eax,0x1
  4302d9:	xor    edx,edx
  4302db:	jmp    0x430287
  4302dd:	nop    DWORD PTR [rax]
  4302e0:	mov    rax,QWORD PTR [rbx+0x100]
  4302e7:	lea    rsi,[rip+0x1eb25]        # 0x44ee13
  4302ee:	lea    rbp,[rip+0x1eb28]        # 0x44ee1d
  4302f5:	jmp    0x430326
  4302f7:	nop    WORD PTR [rax+rax*1+0x0]
  430300:	mov    rdx,rax
  430303:	add    rax,0x1
  430307:	add    rsi,0x1
  43030b:	mov    QWORD PTR [rbx+0x100],rax
  430312:	mov    BYTE PTR [rbx+rdx*1],dil
  430316:	cmp    rsi,rbp
  430319:	mov    BYTE PTR [rbx+0x108],dil
  430320:	je     0x42ff48
  430326:	cmp    rax,0xff
  43032c:	movzx  edi,BYTE PTR [rsi]
  43032f:	jne    0x430300
  430331:	mov    edx,0xff
  430336:	mov    BYTE PTR [rbx+0xff],0x0
  43033d:	mov    r8,QWORD PTR [rbx+0x118]
  430344:	mov    rcx,rbx
  430347:	call   QWORD PTR [rbx+0x110]
  43034d:	add    DWORD PTR [rbx+0x138],0x1
  430354:	mov    eax,0x1
  430359:	xor    edx,edx
  43035b:	jmp    0x430307
  43035d:	nop    DWORD PTR [rax]
  430360:	cmp    BYTE PTR [rbx+0x108],0x28
  430367:	je     0x430392
  430369:	mov    rax,QWORD PTR [rbx+0x100]
  430370:	cmp    rax,0xff
  430376:	je     0x4305bb
  43037c:	lea    rdx,[rax+0x1]
  430380:	mov    QWORD PTR [rbx+0x100],rdx
  430387:	mov    BYTE PTR [rbx+rax*1],0x20
  43038b:	mov    BYTE PTR [rbx+0x108],0x20
  430392:	mov    rax,QWORD PTR [rbx+0x140]
  430399:	mov    r8,QWORD PTR [rdi+0x8]
  43039d:	mov    edx,r12d
  4303a0:	mov    rcx,rbx
  4303a3:	lea    rsi,[rip+0x1ea74]        # 0x44ee1e
  4303aa:	lea    rbp,[rip+0x1ea70]        # 0x44ee21
  4303b1:	mov    QWORD PTR [rsp+0x28],rax
  4303b6:	lea    rax,[rsp+0x20]
  4303bb:	mov    QWORD PTR [rsp+0x20],r8
  4303c0:	mov    QWORD PTR [rbx+0x140],rax
  4303c7:	call   0x42c610
  4303cc:	mov    rax,QWORD PTR [rsp+0x28]
  4303d1:	mov    QWORD PTR [rbx+0x140],rax
  4303d8:	mov    rax,QWORD PTR [rbx+0x100]
  4303df:	jmp    0x430407
  4303e1:	mov    rdx,rax
  4303e4:	add    rax,0x1
  4303e8:	add    rsi,0x1
  4303ec:	mov    QWORD PTR [rbx+0x100],rax
  4303f3:	mov    BYTE PTR [rbx+rdx*1],dil
  4303f7:	cmp    rsi,rbp
  4303fa:	mov    BYTE PTR [rbx+0x108],dil
  430401:	je     0x42ff48
  430407:	cmp    rax,0xff
  43040d:	movzx  edi,BYTE PTR [rsi]
  430410:	jne    0x4303e1
  430412:	mov    edx,0xff
  430417:	mov    BYTE PTR [rbx+0xff],0x0
  43041e:	mov    r8,QWORD PTR [rbx+0x118]
  430425:	mov    rcx,rbx
  430428:	call   QWORD PTR [rbx+0x110]
  43042e:	add    DWORD PTR [rbx+0x138],0x1
  430435:	mov    eax,0x1
  43043a:	xor    edx,edx
  43043c:	jmp    0x4303e8
  43043e:	xchg   ax,ax
  430440:	mov    rax,QWORD PTR [rbx+0x140]
  430447:	mov    QWORD PTR [rsp+0x20],rdi
  43044c:	mov    r8,rdi
  43044f:	mov    QWORD PTR [rsp+0x28],rax
  430454:	lea    rax,[rsp+0x20]
  430459:	mov    QWORD PTR [rbx+0x140],rax
  430460:	jmp    0x42ff31
  430465:	mov    rax,QWORD PTR [rbx+0x140]
  43046c:	mov    r8,QWORD PTR [rdi+0x8]
  430470:	mov    edx,r12d
  430473:	mov    rcx,rbx
  430476:	mov    QWORD PTR [rsp+0x28],rax
  43047b:	lea    rax,[rsp+0x20]
  430480:	mov    QWORD PTR [rsp+0x20],r8
  430485:	mov    QWORD PTR [rbx+0x140],rax
  43048c:	call   0x42c610
  430491:	mov    rax,QWORD PTR [rsp+0x28]
  430496:	mov    QWORD PTR [rbx+0x140],rax
  43049d:	mov    rax,QWORD PTR [rbx+0x100]
  4304a4:	cmp    rax,0xff
  4304aa:	je     0x43055d
  4304b0:	lea    rdx,[rax+0x1]
  4304b4:	mov    QWORD PTR [rbx+0x100],rdx
  4304bb:	mov    BYTE PTR [rbx+rax*1],0x29
  4304bf:	mov    BYTE PTR [rbx+0x108],0x29
  4304c6:	jmp    0x42ff48
  4304cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4304d0:	mov    edx,0xff
  4304d5:	mov    BYTE PTR [rbx+0xff],0x0
  4304dc:	mov    r8,QWORD PTR [rbx+0x118]
  4304e3:	mov    rcx,rbx
  4304e6:	call   QWORD PTR [rbx+0x110]
  4304ec:	add    DWORD PTR [rbx+0x138],0x1
  4304f3:	mov    edx,0x1
  4304f8:	xor    eax,eax
  4304fa:	jmp    0x43010a
  4304ff:	mov    edx,0xff
  430504:	mov    BYTE PTR [rbx+0xff],0x0
  43050b:	mov    r8,QWORD PTR [rbx+0x118]
  430512:	mov    rcx,rbx
  430515:	call   QWORD PTR [rbx+0x110]
  43051b:	add    DWORD PTR [rbx+0x138],0x1
  430522:	mov    edx,0x1
  430527:	xor    eax,eax
  430529:	jmp    0x4301e7
  43052e:	mov    edx,0xff
  430533:	mov    BYTE PTR [rbx+0xff],0x0
  43053a:	mov    r8,QWORD PTR [rbx+0x118]
  430541:	mov    rcx,rbx
  430544:	call   QWORD PTR [rbx+0x110]
  43054a:	add    DWORD PTR [rbx+0x138],0x1
  430551:	mov    eax,0x1
  430556:	xor    edx,edx
  430558:	jmp    0x4300e8
  43055d:	mov    edx,0xff
  430562:	mov    BYTE PTR [rbx+0xff],0x0
  430569:	mov    r8,QWORD PTR [rbx+0x118]
  430570:	mov    rcx,rbx
  430573:	call   QWORD PTR [rbx+0x110]
  430579:	add    DWORD PTR [rbx+0x138],0x1
  430580:	mov    edx,0x1
  430585:	xor    eax,eax
  430587:	jmp    0x4304b4
  43058c:	mov    edx,0xff
  430591:	mov    BYTE PTR [rbx+0xff],0x0
  430598:	mov    r8,QWORD PTR [rbx+0x118]
  43059f:	mov    rcx,rbx
  4305a2:	call   QWORD PTR [rbx+0x110]
  4305a8:	add    DWORD PTR [rbx+0x138],0x1
  4305af:	mov    eax,0x1
  4305b4:	xor    edx,edx
  4305b6:	jmp    0x430148
  4305bb:	mov    edx,0xff
  4305c0:	mov    BYTE PTR [rbx+0xff],0x0
  4305c7:	mov    r8,QWORD PTR [rbx+0x118]
  4305ce:	mov    rcx,rbx
  4305d1:	call   QWORD PTR [rbx+0x110]
  4305d7:	add    DWORD PTR [rbx+0x138],0x1
  4305de:	mov    edx,0x1
  4305e3:	xor    eax,eax
  4305e5:	jmp    0x430380
  4305ea:	mov    edx,0xff
  4305ef:	mov    BYTE PTR [rbx+0xff],0x0
  4305f6:	mov    r8,QWORD PTR [rbx+0x118]
  4305fd:	mov    rcx,rbx
  430600:	call   QWORD PTR [rbx+0x110]
  430606:	add    DWORD PTR [rbx+0x138],0x1
  43060d:	mov    edx,0x1
  430612:	xor    eax,eax
  430614:	jmp    0x430223
  430619:	nop    DWORD PTR [rax+0x0]
  430620:	push   r15
  430622:	push   r14
  430624:	push   r13
  430626:	push   r12
  430628:	push   rbp
  430629:	push   rdi
  43062a:	push   rsi
  43062b:	push   rbx
  43062c:	sub    rsp,0x48
  430630:	test   r8,r8
  430633:	mov    rsi,rcx
  430636:	mov    ebp,edx
  430638:	mov    rbx,r8
  43063b:	mov    edi,r9d
  43063e:	jne    0x43069d
  430640:	jmp    0x4306a7
  430642:	mov    eax,DWORD PTR [rbx+0x10]
  430645:	test   eax,eax
  430647:	jne    0x430695
  430649:	mov    r8,QWORD PTR [rbx+0x8]
  43064d:	test   edi,edi
  43064f:	mov    eax,DWORD PTR [r8]
  430652:	jne    0x43065c
  430654:	lea    edx,[rax-0x1c]
  430657:	cmp    edx,0x4
  43065a:	jbe    0x430695
  43065c:	mov    rcx,QWORD PTR [rbx+0x18]
  430660:	cmp    eax,0x29
  430663:	mov    DWORD PTR [rbx+0x10],0x1
  43066a:	mov    r12,QWORD PTR [rsi+0x120]
  430671:	mov    QWORD PTR [rsi+0x120],rcx
  430678:	je     0x4306b8
  43067a:	cmp    eax,0x2a
  43067d:	je     0x4306d2
  43067f:	cmp    eax,0x2
  430682:	je     0x4306ec
  430684:	mov    edx,ebp
  430686:	mov    rcx,rsi
  430689:	call   0x42fe60
  43068e:	mov    QWORD PTR [rsi+0x120],r12
  430695:	mov    rbx,QWORD PTR [rbx]
  430698:	test   rbx,rbx
  43069b:	je     0x4306a7
  43069d:	mov    edx,DWORD PTR [rsi+0x130]
  4306a3:	test   edx,edx
  4306a5:	je     0x430642
  4306a7:	add    rsp,0x48
  4306ab:	pop    rbx
  4306ac:	pop    rsi
  4306ad:	pop    rdi
  4306ae:	pop    rbp
  4306af:	pop    r12
  4306b1:	pop    r13
  4306b3:	pop    r14
  4306b5:	pop    r15
  4306b7:	ret    
  4306b8:	mov    r9,QWORD PTR [rbx]
  4306bb:	add    r8,0x10
  4306bf:	mov    edx,ebp
  4306c1:	mov    rcx,rsi
  4306c4:	call   0x430c50
  4306c9:	mov    QWORD PTR [rsi+0x120],r12
  4306d0:	jmp    0x4306a7
  4306d2:	mov    r9,QWORD PTR [rbx]
  4306d5:	add    r8,0x8
  4306d9:	mov    edx,ebp
  4306db:	mov    rcx,rsi
  4306de:	call   0x4309b0
  4306e3:	mov    QWORD PTR [rsi+0x120],r12
  4306ea:	jmp    0x4306a7
  4306ec:	mov    rdi,QWORD PTR [rsi+0x128]
  4306f3:	mov    QWORD PTR [rsi+0x128],0x0
  4306fe:	mov    edx,ebp
  430700:	mov    r8,QWORD PTR [r8+0x8]
  430704:	mov    rcx,rsi
  430707:	call   0x42fe20
  43070c:	test   bpl,0x4
  430710:	mov    QWORD PTR [rsi+0x128],rdi
  430717:	mov    rax,QWORD PTR [rsi+0x100]
  43071e:	jne    0x43078a
  430720:	lea    rdi,[rip+0x1e317]        # 0x44ea3e
  430727:	lea    r14,[rip+0x1e312]        # 0x44ea40
  43072e:	jmp    0x430752
  430730:	mov    rdx,rax
  430733:	add    rax,0x1
  430737:	add    rdi,0x1
  43073b:	mov    QWORD PTR [rsi+0x100],rax
  430742:	mov    BYTE PTR [rsi+rdx*1],r13b
  430746:	cmp    rdi,r14
  430749:	mov    BYTE PTR [rsi+0x108],r13b
  430750:	je     0x4307a8
  430752:	cmp    rax,0xff
  430758:	movzx  r13d,BYTE PTR [rdi]
  43075c:	jne    0x430730
  43075e:	mov    edx,0xff
  430763:	mov    BYTE PTR [rsi+0xff],0x0
  43076a:	mov    r8,QWORD PTR [rsi+0x118]
  430771:	mov    rcx,rsi
  430774:	call   QWORD PTR [rsi+0x110]
  43077a:	add    DWORD PTR [rsi+0x138],0x1
  430781:	mov    eax,0x1
  430786:	xor    edx,edx
  430788:	jmp    0x430737
  43078a:	cmp    rax,0xff
  430790:	je     0x4307e7
  430792:	lea    rdx,[rax+0x1]
  430796:	mov    QWORD PTR [rsi+0x100],rdx
  43079d:	mov    BYTE PTR [rsi+rax*1],0x2e
  4307a1:	mov    BYTE PTR [rsi+0x108],0x2e
  4307a8:	mov    rax,QWORD PTR [rbx+0x8]
  4307ac:	mov    rbx,QWORD PTR [rax+0x10]
  4307b0:	mov    eax,DWORD PTR [rbx]
  4307b2:	cmp    eax,0x46
  4307b5:	jne    0x4307c6
  4307b7:	jmp    0x430813
  4307b9:	nop    DWORD PTR [rax+0x0]
  4307c0:	mov    rbx,QWORD PTR [rbx+0x8]
  4307c4:	mov    eax,DWORD PTR [rbx]
  4307c6:	sub    eax,0x1c
  4307c9:	cmp    eax,0x4
  4307cc:	jbe    0x4307c0
  4307ce:	mov    r8,rbx
  4307d1:	mov    edx,ebp
  4307d3:	mov    rcx,rsi
  4307d6:	call   0x42fe20
  4307db:	mov    QWORD PTR [rsi+0x120],r12
  4307e2:	jmp    0x4306a7
  4307e7:	mov    edx,0xff
  4307ec:	mov    BYTE PTR [rsi+0xff],0x0
  4307f3:	mov    r8,QWORD PTR [rsi+0x118]
  4307fa:	mov    rcx,rsi
  4307fd:	call   QWORD PTR [rsi+0x110]
  430803:	add    DWORD PTR [rsi+0x138],0x1
  43080a:	mov    edx,0x1
  43080f:	xor    eax,eax
  430811:	jmp    0x430796
  430813:	mov    rax,QWORD PTR [rsi+0x100]
  43081a:	lea    rdi,[rip+0x1e220]        # 0x44ea41
  430821:	lea    r14,[rip+0x1e226]        # 0x44ea4e
  430828:	jmp    0x43084c
  43082a:	mov    rdx,rax
  43082d:	add    rax,0x1
  430831:	add    rdi,0x1
  430835:	mov    QWORD PTR [rsi+0x100],rax
  43083c:	mov    BYTE PTR [rsi+rdx*1],r13b
  430840:	cmp    rdi,r14
  430843:	mov    BYTE PTR [rsi+0x108],r13b
  43084a:	je     0x430884
  43084c:	cmp    rax,0xff
  430852:	movzx  r13d,BYTE PTR [rdi]
  430856:	jne    0x43082a
  430858:	mov    edx,0xff
  43085d:	mov    BYTE PTR [rsi+0xff],0x0
  430864:	mov    r8,QWORD PTR [rsi+0x118]
  43086b:	mov    rcx,rsi
  43086e:	call   QWORD PTR [rsi+0x110]
  430874:	add    DWORD PTR [rsi+0x138],0x1
  43087b:	mov    eax,0x1
  430880:	xor    edx,edx
  430882:	jmp    0x430831
  430884:	mov    eax,DWORD PTR [rbx+0x10]
  430887:	lea    r15,[rsp+0x20]
  43088c:	lea    rdx,[rip+0x1e1bc]        # 0x44ea4f
  430893:	mov    rcx,r15
  430896:	mov    r14,r15
  430899:	lea    r8d,[rax+0x1]
  43089d:	call   0x43f068
  4308a2:	mov    edx,DWORD PTR [r14]
  4308a5:	add    r14,0x4
  4308a9:	lea    eax,[rdx-0x1010101]
  4308af:	not    edx
  4308b1:	and    eax,edx
  4308b3:	and    eax,0x80808080
  4308b8:	je     0x4308a2
  4308ba:	mov    edx,eax
  4308bc:	shr    edx,0x10
  4308bf:	test   eax,0x8080
  4308c4:	cmove  eax,edx
  4308c7:	lea    rdx,[r14+0x2]
  4308cb:	cmove  r14,rdx
  4308cf:	add    al,al
  4308d1:	mov    rax,QWORD PTR [rsi+0x100]
  4308d8:	sbb    r14,0x3
  4308dc:	sub    r14,r15
  4308df:	je     0x430940
  4308e1:	xor    edi,edi
  4308e3:	jmp    0x430907
  4308e5:	mov    rdx,rax
  4308e8:	add    rax,0x1
  4308ec:	add    rdi,0x1
  4308f0:	mov    QWORD PTR [rsi+0x100],rax
  4308f7:	mov    BYTE PTR [rsi+rdx*1],r13b
  4308fb:	cmp    rdi,r14
  4308fe:	mov    BYTE PTR [rsi+0x108],r13b
  430905:	je     0x430940
  430907:	cmp    rax,0xff
  43090d:	movzx  r13d,BYTE PTR [r15+rdi*1]
  430912:	jne    0x4308e5
  430914:	mov    edx,0xff
  430919:	mov    BYTE PTR [rsi+0xff],0x0
  430920:	mov    r8,QWORD PTR [rsi+0x118]
  430927:	mov    rcx,rsi
  43092a:	call   QWORD PTR [rsi+0x110]
  430930:	add    DWORD PTR [rsi+0x138],0x1
  430937:	mov    eax,0x1
  43093c:	xor    edx,edx
  43093e:	jmp    0x4308ec
  430940:	lea    rdi,[rip+0x1e10b]        # 0x44ea52
  430947:	lea    r14,[rip+0x1e107]        # 0x44ea55
  43094e:	jmp    0x430976
  430950:	mov    rdx,rax
  430953:	add    rax,0x1
  430957:	add    rdi,0x1
  43095b:	mov    QWORD PTR [rsi+0x100],rax
  430962:	mov    BYTE PTR [rsi+rdx*1],r13b
  430966:	cmp    rdi,r14
  430969:	mov    BYTE PTR [rsi+0x108],r13b
  430970:	je     0x4307c0
  430976:	cmp    rax,0xff
  43097c:	movzx  r13d,BYTE PTR [rdi]
  430980:	jne    0x430950
  430982:	mov    edx,0xff
  430987:	mov    BYTE PTR [rsi+0xff],0x0
  43098e:	mov    r8,QWORD PTR [rsi+0x118]
  430995:	mov    rcx,rsi
  430998:	call   QWORD PTR [rsi+0x110]
  43099e:	add    DWORD PTR [rsi+0x138],0x1
  4309a5:	mov    eax,0x1
  4309aa:	xor    edx,edx
  4309ac:	jmp    0x430957
  4309ae:	xchg   ax,ax
  4309b0:	push   r14
  4309b2:	push   r13
  4309b4:	push   r12
  4309b6:	push   rbp
  4309b7:	push   rdi
  4309b8:	push   rsi
  4309b9:	push   rbx
  4309ba:	sub    rsp,0x20
  4309be:	test   r9,r9
  4309c1:	mov    rbx,rcx
  4309c4:	mov    ebp,edx
  4309c6:	mov    r12,r8
  4309c9:	mov    r13,r9
  4309cc:	mov    rax,r9
  4309cf:	je     0x4309f4
  4309d1:	mov    edx,DWORD PTR [rax+0x10]
  4309d4:	test   edx,edx
  4309d6:	je     0x430a90
  4309dc:	mov    rax,QWORD PTR [rax]
  4309df:	test   rax,rax
  4309e2:	jne    0x4309d1
  4309e4:	xor    r9d,r9d
  4309e7:	mov    r8,r13
  4309ea:	mov    edx,ebp
  4309ec:	mov    rcx,rbx
  4309ef:	call   0x430620
  4309f4:	mov    rax,QWORD PTR [rbx+0x100]
  4309fb:	cmp    rax,0xff
  430a01:	je     0x430b4b
  430a07:	lea    rdx,[rax+0x1]
  430a0b:	mov    QWORD PTR [rbx+0x100],rdx
  430a12:	mov    BYTE PTR [rbx+rax*1],0x20
  430a16:	mov    BYTE PTR [rbx+0x108],0x20
  430a1d:	cmp    rdx,0xff
  430a24:	je     0x430be0
  430a2a:	lea    rax,[rdx+0x1]
  430a2e:	mov    QWORD PTR [rbx+0x100],rax
  430a35:	mov    BYTE PTR [rbx+rdx*1],0x5b
  430a39:	mov    BYTE PTR [rbx+0x108],0x5b
  430a40:	mov    r8,QWORD PTR [r12]
  430a44:	test   r8,r8
  430a47:	je     0x430a5a
  430a49:	mov    edx,ebp
  430a4b:	mov    rcx,rbx
  430a4e:	call   0x42fe20
  430a53:	mov    rax,QWORD PTR [rbx+0x100]
  430a5a:	cmp    rax,0xff
  430a60:	je     0x430bb0
  430a66:	lea    rdx,[rax+0x1]
  430a6a:	mov    QWORD PTR [rbx+0x100],rdx
  430a71:	mov    BYTE PTR [rbx+rax*1],0x5d
  430a75:	mov    BYTE PTR [rbx+0x108],0x5d
  430a7c:	add    rsp,0x20
  430a80:	pop    rbx
  430a81:	pop    rsi
  430a82:	pop    rdi
  430a83:	pop    rbp
  430a84:	pop    r12
  430a86:	pop    r13
  430a88:	pop    r14
  430a8a:	ret    
  430a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  430a90:	mov    rax,QWORD PTR [rax+0x8]
  430a94:	cmp    DWORD PTR [rax],0x2a
  430a97:	je     0x430c30
  430a9d:	mov    rax,QWORD PTR [rbx+0x100]
  430aa4:	lea    rsi,[rip+0x1e431]        # 0x44eedc
  430aab:	lea    r14,[rip+0x1e42c]        # 0x44eede
  430ab2:	jmp    0x430ad6
  430ab4:	mov    rdx,rax
  430ab7:	add    rax,0x1
  430abb:	add    rsi,0x1
  430abf:	mov    QWORD PTR [rbx+0x100],rax
  430ac6:	mov    BYTE PTR [rbx+rdx*1],dil
  430aca:	cmp    rsi,r14
  430acd:	mov    BYTE PTR [rbx+0x108],dil
  430ad4:	je     0x430b10
  430ad6:	cmp    rax,0xff
  430adc:	movzx  edi,BYTE PTR [rsi]
  430adf:	jne    0x430ab4
  430ae1:	mov    edx,0xff
  430ae6:	mov    BYTE PTR [rbx+0xff],0x0
  430aed:	mov    r8,QWORD PTR [rbx+0x118]
  430af4:	mov    rcx,rbx
  430af7:	call   QWORD PTR [rbx+0x110]
  430afd:	add    DWORD PTR [rbx+0x138],0x1
  430b04:	mov    eax,0x1
  430b09:	xor    edx,edx
  430b0b:	jmp    0x430abb
  430b0d:	nop    DWORD PTR [rax]
  430b10:	xor    r9d,r9d
  430b13:	mov    edx,ebp
  430b15:	mov    r8,r13
  430b18:	mov    rcx,rbx
  430b1b:	call   0x430620
  430b20:	mov    rdx,QWORD PTR [rbx+0x100]
  430b27:	cmp    rdx,0xff
  430b2e:	je     0x430b7a
  430b30:	lea    rax,[rdx+0x1]
  430b34:	mov    QWORD PTR [rbx+0x100],rax
  430b3b:	mov    BYTE PTR [rbx+rdx*1],0x29
  430b3f:	mov    BYTE PTR [rbx+0x108],0x29
  430b46:	jmp    0x4309fb
  430b4b:	mov    edx,0xff
  430b50:	mov    BYTE PTR [rbx+0xff],0x0
  430b57:	mov    r8,QWORD PTR [rbx+0x118]
  430b5e:	mov    rcx,rbx
  430b61:	call   QWORD PTR [rbx+0x110]
  430b67:	add    DWORD PTR [rbx+0x138],0x1
  430b6e:	mov    edx,0x1
  430b73:	xor    eax,eax
  430b75:	jmp    0x430a0b
  430b7a:	mov    edx,0xff
  430b7f:	mov    BYTE PTR [rbx+0xff],0x0
  430b86:	mov    r8,QWORD PTR [rbx+0x118]
  430b8d:	mov    rcx,rbx
  430b90:	call   QWORD PTR [rbx+0x110]
  430b96:	add    DWORD PTR [rbx+0x138],0x1
  430b9d:	mov    eax,0x1
  430ba2:	xor    edx,edx
  430ba4:	jmp    0x430b34
  430ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430bb0:	mov    edx,0xff
  430bb5:	mov    BYTE PTR [rbx+0xff],0x0
  430bbc:	mov    r8,QWORD PTR [rbx+0x118]
  430bc3:	mov    rcx,rbx
  430bc6:	call   QWORD PTR [rbx+0x110]
  430bcc:	add    DWORD PTR [rbx+0x138],0x1
  430bd3:	mov    edx,0x1
  430bd8:	xor    eax,eax
  430bda:	jmp    0x430a6a
  430bdf:	nop
  430be0:	mov    r8,QWORD PTR [rbx+0x118]
  430be7:	mov    BYTE PTR [rbx+0xff],0x0
  430bee:	mov    edx,0xff
  430bf3:	mov    rcx,rbx
  430bf6:	call   QWORD PTR [rbx+0x110]
  430bfc:	mov    BYTE PTR [rbx],0x5b
  430bff:	mov    BYTE PTR [rbx+0x108],0x5b
  430c06:	mov    r8,QWORD PTR [r12]
  430c0a:	add    DWORD PTR [rbx+0x138],0x1
  430c11:	mov    QWORD PTR [rbx+0x100],0x1
  430c1c:	test   r8,r8
  430c1f:	jne    0x430a49
  430c25:	mov    eax,0x1
  430c2a:	jmp    0x430a66
  430c2f:	nop
  430c30:	mov    edx,ebp
  430c32:	xor    r9d,r9d
  430c35:	mov    r8,r13
  430c38:	mov    rcx,rbx
  430c3b:	call   0x430620
  430c40:	mov    rdx,QWORD PTR [rbx+0x100]
  430c47:	jmp    0x430a1d
  430c4c:	nop    DWORD PTR [rax+0x0]
  430c50:	push   r12
  430c52:	push   rbp
  430c53:	push   rdi
  430c54:	push   rsi
  430c55:	push   rbx
  430c56:	sub    rsp,0x30
  430c5a:	test   r9,r9
  430c5d:	mov    rbx,rcx
  430c60:	mov    esi,edx
  430c62:	mov    rdi,r8
  430c65:	mov    rbp,r9
  430c68:	je     0x430d40
  430c6e:	mov    r8d,DWORD PTR [r9+0x10]
  430c72:	test   r8d,r8d
  430c75:	jne    0x430d40
  430c7b:	mov    rax,r9
  430c7e:	mov    edx,0x1
  430c83:	jmp    0x430ca5
  430c85:	and    ch,0xe
  430c88:	jne    0x430e15
  430c8e:	mov    rax,QWORD PTR [rax]
  430c91:	test   rax,rax
  430c94:	je     0x430d40
  430c9a:	mov    ecx,DWORD PTR [rax+0x10]
  430c9d:	test   ecx,ecx
  430c9f:	jne    0x430d40
  430ca5:	mov    rcx,QWORD PTR [rax+0x8]
  430ca9:	mov    r10d,DWORD PTR [rcx]
  430cac:	lea    ecx,[r10-0x19]
  430cb0:	cmp    ecx,0x12
  430cb3:	ja     0x430c8e
  430cb5:	mov    r11,rdx
  430cb8:	shl    r11,cl
  430cbb:	test   r11d,0x43107
  430cc2:	mov    rcx,r11
  430cc5:	je     0x430c85
  430cc7:	movzx  eax,BYTE PTR [rbx+0x108]
  430cce:	cmp    al,0x20
  430cd0:	je     0x430e2a
  430cd6:	mov    rdx,QWORD PTR [rbx+0x100]
  430cdd:	cmp    rdx,0xff
  430ce4:	je     0x430f3e
  430cea:	lea    rax,[rdx+0x1]
  430cee:	cmp    rax,0xff
  430cf4:	mov    QWORD PTR [rbx+0x100],rax
  430cfb:	mov    BYTE PTR [rbx+rdx*1],0x20
  430cff:	mov    BYTE PTR [rbx+0x108],0x20
  430d06:	jne    0x430e3d
  430d0c:	mov    edx,0xff
  430d11:	mov    BYTE PTR [rbx+0xff],0x0
  430d18:	mov    r8,QWORD PTR [rbx+0x118]
  430d1f:	mov    rcx,rbx
  430d22:	call   QWORD PTR [rbx+0x110]
  430d28:	add    DWORD PTR [rbx+0x138],0x1
  430d2f:	mov    edx,0x1
  430d34:	xor    eax,eax
  430d36:	jmp    0x430e41
  430d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  430d40:	mov    r12,QWORD PTR [rbx+0x128]
  430d47:	xor    r9d,r9d
  430d4a:	mov    edx,esi
  430d4c:	mov    QWORD PTR [rbx+0x128],0x0
  430d57:	mov    r8,rbp
  430d5a:	mov    rcx,rbx
  430d5d:	call   0x430620
  430d62:	mov    rdx,QWORD PTR [rbx+0x100]
  430d69:	cmp    rdx,0xff
  430d70:	je     0x430eab
  430d76:	lea    rax,[rdx+0x1]
  430d7a:	mov    QWORD PTR [rbx+0x100],rax
  430d81:	mov    BYTE PTR [rbx+rdx*1],0x28
  430d85:	mov    BYTE PTR [rbx+0x108],0x28
  430d8c:	mov    r8,QWORD PTR [rdi]
  430d8f:	test   r8,r8
  430d92:	je     0x430dce
  430d94:	mov    rax,QWORD PTR [rbx+0x140]
  430d9b:	mov    edx,esi
  430d9d:	mov    rcx,rbx
  430da0:	mov    QWORD PTR [rsp+0x20],r8
  430da5:	mov    QWORD PTR [rsp+0x28],rax
  430daa:	lea    rax,[rsp+0x20]
  430daf:	mov    QWORD PTR [rbx+0x140],rax
  430db6:	call   0x42c610
  430dbb:	mov    rax,QWORD PTR [rsp+0x28]
  430dc0:	mov    QWORD PTR [rbx+0x140],rax
  430dc7:	mov    rax,QWORD PTR [rbx+0x100]
  430dce:	cmp    rax,0xff
  430dd4:	je     0x430ee0
  430dda:	lea    rdx,[rax+0x1]
  430dde:	mov    QWORD PTR [rbx+0x100],rdx
  430de5:	mov    r9d,0x1
  430deb:	mov    BYTE PTR [rbx+rax*1],0x29
  430def:	mov    r8,rbp
  430df2:	mov    BYTE PTR [rbx+0x108],0x29
  430df9:	mov    edx,esi
  430dfb:	mov    rcx,rbx
  430dfe:	call   0x430620
  430e03:	mov    QWORD PTR [rbx+0x128],r12
  430e0a:	add    rsp,0x30
  430e0e:	pop    rbx
  430e0f:	pop    rsi
  430e10:	pop    rdi
  430e11:	pop    rbp
  430e12:	pop    r12
  430e14:	ret    
  430e15:	movzx  eax,BYTE PTR [rbx+0x108]
  430e1c:	mov    edx,eax
  430e1e:	and    edx,0xfffffffd
  430e21:	cmp    dl,0x28
  430e24:	jne    0x430cce
  430e2a:	mov    rax,QWORD PTR [rbx+0x100]
  430e31:	cmp    rax,0xff
  430e37:	je     0x430d0c
  430e3d:	lea    rdx,[rax+0x1]
  430e41:	mov    QWORD PTR [rbx+0x100],rdx
  430e48:	mov    r12,QWORD PTR [rbx+0x128]
  430e4f:	xor    r9d,r9d
  430e52:	mov    BYTE PTR [rbx+rax*1],0x28
  430e56:	mov    r8,rbp
  430e59:	mov    BYTE PTR [rbx+0x108],0x28
  430e60:	mov    QWORD PTR [rbx+0x128],0x0
  430e6b:	mov    edx,esi
  430e6d:	mov    rcx,rbx
  430e70:	call   0x430620
  430e75:	mov    rax,QWORD PTR [rbx+0x100]
  430e7c:	cmp    rax,0xff
  430e82:	je     0x430f0f
  430e88:	lea    rdx,[rax+0x1]
  430e8c:	cmp    rdx,0xff
  430e93:	mov    QWORD PTR [rbx+0x100],rdx
  430e9a:	mov    BYTE PTR [rbx+rax*1],0x29
  430e9e:	mov    BYTE PTR [rbx+0x108],0x29
  430ea5:	jne    0x430d76
  430eab:	mov    edx,0xff
  430eb0:	mov    BYTE PTR [rbx+0xff],0x0
  430eb7:	mov    r8,QWORD PTR [rbx+0x118]
  430ebe:	mov    rcx,rbx
  430ec1:	call   QWORD PTR [rbx+0x110]
  430ec7:	add    DWORD PTR [rbx+0x138],0x1
  430ece:	mov    eax,0x1
  430ed3:	xor    edx,edx
  430ed5:	jmp    0x430d7a
  430eda:	nop    WORD PTR [rax+rax*1+0x0]
  430ee0:	mov    edx,0xff
  430ee5:	mov    BYTE PTR [rbx+0xff],0x0
  430eec:	mov    r8,QWORD PTR [rbx+0x118]
  430ef3:	mov    rcx,rbx
  430ef6:	call   QWORD PTR [rbx+0x110]
  430efc:	add    DWORD PTR [rbx+0x138],0x1
  430f03:	mov    edx,0x1
  430f08:	xor    eax,eax
  430f0a:	jmp    0x430dde
  430f0f:	mov    edx,0xff
  430f14:	mov    BYTE PTR [rbx+0xff],0x0
  430f1b:	mov    r8,QWORD PTR [rbx+0x118]
  430f22:	mov    rcx,rbx
  430f25:	call   QWORD PTR [rbx+0x110]
  430f2b:	add    DWORD PTR [rbx+0x138],0x1
  430f32:	mov    edx,0x1
  430f37:	xor    eax,eax
  430f39:	jmp    0x430e8c
  430f3e:	mov    edx,0xff
  430f43:	mov    BYTE PTR [rbx+0xff],0x0
  430f4a:	mov    r8,QWORD PTR [rbx+0x118]
  430f51:	mov    rcx,rbx
  430f54:	call   QWORD PTR [rbx+0x110]
  430f5a:	add    DWORD PTR [rbx+0x138],0x1
  430f61:	mov    eax,0x1
  430f66:	xor    edx,edx
  430f68:	jmp    0x430cee
  430f6d:	nop    DWORD PTR [rax]
  430f70:	push   r12
  430f72:	push   rbp
  430f73:	push   rdi
  430f74:	push   rsi
  430f75:	push   rbx
  430f76:	sub    rsp,0x30
  430f7a:	cmp    DWORD PTR [r8],0x31
  430f7e:	mov    rbx,rcx
  430f81:	je     0x430fc0
  430f83:	mov    rax,QWORD PTR [rcx+0x140]
  430f8a:	mov    QWORD PTR [rsp+0x20],r8
  430f8f:	mov    QWORD PTR [rsp+0x28],rax
  430f94:	lea    rax,[rsp+0x20]
  430f99:	mov    QWORD PTR [rcx+0x140],rax
  430fa0:	call   0x42c610
  430fa5:	mov    rax,QWORD PTR [rsp+0x28]
  430faa:	mov    QWORD PTR [rbx+0x140],rax
  430fb1:	add    rsp,0x30
  430fb5:	pop    rbx
  430fb6:	pop    rsi
  430fb7:	pop    rdi
  430fb8:	pop    rbp
  430fb9:	pop    r12
  430fbb:	ret    
  430fbc:	nop    DWORD PTR [rax+0x0]
  430fc0:	mov    rax,QWORD PTR [r8+0x8]
  430fc4:	movsxd rbp,DWORD PTR [rax+0x10]
  430fc8:	mov    r12,QWORD PTR [rax+0x8]
  430fcc:	test   rbp,rbp
  430fcf:	je     0x430fb1
  430fd1:	mov    rax,QWORD PTR [rcx+0x100]
  430fd8:	xor    esi,esi
  430fda:	jmp    0x431002
  430fdc:	nop    DWORD PTR [rax+0x0]
  430fe0:	mov    rdx,rax
  430fe3:	add    rax,0x1
  430fe7:	add    rsi,0x1
  430feb:	mov    QWORD PTR [rbx+0x100],rax
  430ff2:	mov    BYTE PTR [rbx+rdx*1],dil
  430ff6:	cmp    rbp,rsi
  430ff9:	mov    BYTE PTR [rbx+0x108],dil
  431000:	je     0x430fb1
  431002:	cmp    rax,0xff
  431008:	movzx  edi,BYTE PTR [r12+rsi*1]
  43100d:	jne    0x430fe0
  43100f:	mov    edx,0xff
  431014:	mov    BYTE PTR [rbx+0xff],0x0
  43101b:	mov    r8,QWORD PTR [rbx+0x118]
  431022:	mov    rcx,rbx
  431025:	call   QWORD PTR [rbx+0x110]
  43102b:	add    DWORD PTR [rbx+0x138],0x1
  431032:	mov    eax,0x1
  431037:	xor    edx,edx
  431039:	jmp    0x430fe7
  43103b:	nop    DWORD PTR [rax+rax*1+0x0]
  431040:	push   rdi
  431041:	push   rsi
  431042:	push   rbx
  431043:	sub    rsp,0x30
  431047:	mov    eax,DWORD PTR [r8]
  43104a:	mov    rbx,rcx
  43104d:	mov    edi,edx
  43104f:	mov    rsi,r8
  431052:	cmp    eax,0x30
  431055:	sete   cl
  431058:	cmp    eax,0x1
  43105b:	setbe  dl
  43105e:	or     cl,dl
  431060:	jne    0x431100
  431066:	cmp    eax,0x6
  431069:	je     0x431100
  43106f:	mov    rax,QWORD PTR [rbx+0x100]
  431076:	cmp    rax,0xff
  43107c:	je     0x431140
  431082:	lea    rdx,[rax+0x1]
  431086:	mov    QWORD PTR [rbx+0x100],rdx
  43108d:	mov    BYTE PTR [rbx+rax*1],0x28
  431091:	mov    r8,rsi
  431094:	mov    rax,QWORD PTR [rbx+0x140]
  43109b:	mov    BYTE PTR [rbx+0x108],0x28
  4310a2:	mov    edx,edi
  4310a4:	mov    rcx,rbx
  4310a7:	mov    QWORD PTR [rsp+0x20],rsi
  4310ac:	mov    QWORD PTR [rsp+0x28],rax
  4310b1:	lea    rax,[rsp+0x20]
  4310b6:	mov    QWORD PTR [rbx+0x140],rax
  4310bd:	call   0x42c610
  4310c2:	mov    rax,QWORD PTR [rsp+0x28]
  4310c7:	mov    QWORD PTR [rbx+0x140],rax
  4310ce:	mov    rax,QWORD PTR [rbx+0x100]
  4310d5:	cmp    rax,0xff
  4310db:	je     0x431170
  4310e1:	lea    rdx,[rax+0x1]
  4310e5:	mov    QWORD PTR [rbx+0x100],rdx
  4310ec:	mov    BYTE PTR [rbx+rax*1],0x29
  4310f0:	mov    BYTE PTR [rbx+0x108],0x29
  4310f7:	add    rsp,0x30
  4310fb:	pop    rbx
  4310fc:	pop    rsi
  4310fd:	pop    rdi
  4310fe:	ret    
  4310ff:	nop
  431100:	mov    rax,QWORD PTR [rbx+0x140]
  431107:	mov    r8,rsi
  43110a:	mov    edx,edi
  43110c:	mov    rcx,rbx
  43110f:	mov    QWORD PTR [rsp+0x20],rsi
  431114:	mov    QWORD PTR [rsp+0x28],rax
  431119:	lea    rax,[rsp+0x20]
  43111e:	mov    QWORD PTR [rbx+0x140],rax
  431125:	call   0x42c610
  43112a:	mov    rax,QWORD PTR [rsp+0x28]
  43112f:	mov    QWORD PTR [rbx+0x140],rax
  431136:	add    rsp,0x30
  43113a:	pop    rbx
  43113b:	pop    rsi
  43113c:	pop    rdi
  43113d:	ret    
  43113e:	xchg   ax,ax
  431140:	mov    edx,0xff
  431145:	mov    BYTE PTR [rbx+0xff],0x0
  43114c:	mov    r8,QWORD PTR [rbx+0x118]
  431153:	mov    rcx,rbx
  431156:	call   QWORD PTR [rbx+0x110]
  43115c:	add    DWORD PTR [rbx+0x138],0x1
  431163:	mov    edx,0x1
  431168:	xor    eax,eax
  43116a:	jmp    0x431086
  43116f:	nop
  431170:	mov    edx,0xff
  431175:	mov    BYTE PTR [rbx+0xff],0x0
  43117c:	mov    r8,QWORD PTR [rbx+0x118]
  431183:	mov    rcx,rbx
  431186:	call   QWORD PTR [rbx+0x110]
  43118c:	add    DWORD PTR [rbx+0x138],0x1
  431193:	mov    edx,0x1
  431198:	xor    eax,eax
  43119a:	jmp    0x4310e5
  43119f:	nop
  4311a0:	test   rdx,rdx
  4311a3:	sete   r9b
  4311a7:	test   r8d,r8d
  4311aa:	sete   al
  4311ad:	or     r9b,al
  4311b0:	jne    0x4311d0
  4311b2:	test   rcx,rcx
  4311b5:	je     0x4311d0
  4311b7:	mov    DWORD PTR [rcx],0x0
  4311bd:	mov    QWORD PTR [rcx+0x8],rdx
  4311c1:	mov    eax,0x1
  4311c6:	mov    DWORD PTR [rcx+0x10],r8d
  4311ca:	ret    
  4311cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4311d0:	xor    eax,eax
  4311d2:	ret    
  4311d3:	nop    DWORD PTR [rax]
  4311d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4311e0:	mov    eax,edx
  4311e2:	shr    eax,0x1f
  4311e5:	test   r8,r8
  4311e8:	sete   r9b
  4311ec:	or     r9b,al
  4311ef:	jne    0x431210
  4311f1:	test   rcx,rcx
  4311f4:	je     0x431210
  4311f6:	mov    DWORD PTR [rcx],0x32
  4311fc:	mov    DWORD PTR [rcx+0x8],edx
  4311ff:	mov    eax,0x1
  431204:	mov    QWORD PTR [rcx+0x10],r8
  431208:	ret    
  431209:	nop    DWORD PTR [rax+0x0]
  431210:	xor    eax,eax
  431212:	ret    
  431213:	nop    DWORD PTR [rax]
  431216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431220:	test   rcx,rcx
  431223:	je     0x431250
  431225:	test   r8,r8
  431228:	je     0x431250
  43122a:	lea    r9d,[rdx-0x1]
  43122e:	xor    eax,eax
  431230:	cmp    r9d,0x4
  431234:	ja     0x431252
  431236:	mov    DWORD PTR [rcx],0x7
  43123c:	mov    DWORD PTR [rcx+0x8],edx
  43123f:	mov    al,0x1
  431241:	mov    QWORD PTR [rcx+0x10],r8
  431245:	ret    
  431246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431250:	xor    eax,eax
  431252:	repz ret 
  431254:	xchg   ax,ax
  431256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431260:	test   rcx,rcx
  431263:	je     0x431290
  431265:	test   r8,r8
  431268:	je     0x431290
  43126a:	lea    r9d,[rdx-0x1]
  43126e:	xor    eax,eax
  431270:	cmp    r9d,0x4
  431274:	ja     0x431292
  431276:	mov    DWORD PTR [rcx],0x8
  43127c:	mov    DWORD PTR [rcx+0x8],edx
  43127f:	mov    al,0x1
  431281:	mov    QWORD PTR [rcx+0x10],r8
  431285:	ret    
  431286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431290:	xor    eax,eax
  431292:	repz ret 
  431294:	xchg   ax,ax
  431296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4312a0:	push   r13
  4312a2:	push   r12
  4312a4:	push   rbp
  4312a5:	push   rdi
  4312a6:	push   rsi
  4312a7:	push   rbx
  4312a8:	sub    rsp,0x38
  4312ac:	mov    rbx,rcx
  4312af:	mov    rcx,QWORD PTR [rcx+0x18]
  4312b3:	movsx  eax,BYTE PTR [rcx]
  4312b6:	cmp    al,0x56
  4312b8:	sete   r8b
  4312bc:	cmp    al,0x72
  4312be:	sete   dl
  4312c1:	or     r8b,dl
  4312c4:	jne    0x431341
  4312c6:	cmp    al,0x4b
  4312c8:	je     0x431341
  4312ca:	lea    edx,[rax-0x30]
  4312cd:	cmp    dl,0x4a
  4312d0:	ja     0x431332
  4312d2:	lea    r8,[rip+0x1dc0b]        # 0x44eee4
  4312d9:	movzx  edx,dl
  4312dc:	movsxd rdx,DWORD PTR [r8+rdx*4]
  4312e0:	add    r8,rdx
  4312e3:	jmp    r8
  4312e6:	mov    esi,DWORD PTR [rbx+0x54]
  4312e9:	mov    rcx,rbx
  4312ec:	mov    DWORD PTR [rbx+0x54],0x1
  4312f3:	call   0x432a70
  4312f8:	xor    r9d,r9d
  4312fb:	mov    r8,rax
  4312fe:	mov    edx,0x42
  431303:	mov    DWORD PTR [rbx+0x54],esi
  431306:	mov    rcx,rbx
  431309:	call   0x42bb30
  43130e:	test   rax,rax
  431311:	mov    QWORD PTR [rsp+0x28],rax
  431316:	je     0x431332
  431318:	mov    rdx,QWORD PTR [rbx+0x18]
  43131c:	cmp    BYTE PTR [rdx],0x0
  43131f:	je     0x431332
  431321:	lea    rcx,[rdx+0x1]
  431325:	mov    QWORD PTR [rbx+0x18],rcx
  431329:	cmp    BYTE PTR [rdx],0x45
  43132c:	je     0x431419
  431332:	xor    eax,eax
  431334:	add    rsp,0x38
  431338:	pop    rbx
  431339:	pop    rsi
  43133a:	pop    rdi
  43133b:	pop    rbp
  43133c:	pop    r12
  43133e:	pop    r13
  431340:	ret    
  431341:	lea    rdx,[rsp+0x28]
  431346:	xor    r8d,r8d
  431349:	mov    rcx,rbx
  43134c:	call   0x42bc10
  431351:	test   rax,rax
  431354:	mov    rsi,rax
  431357:	je     0x431332
  431359:	mov    rax,QWORD PTR [rbx+0x18]
  43135d:	mov    rcx,rbx
  431360:	cmp    BYTE PTR [rax],0x46
  431363:	je     0x4313b1
  431365:	call   0x4312a0
  43136a:	mov    QWORD PTR [rsi],rax
  43136d:	test   rax,rax
  431370:	je     0x431332
  431372:	mov    edi,DWORD PTR [rax]
  431374:	lea    ecx,[rdi-0x1f]
  431377:	cmp    ecx,0x1
  43137a:	jbe    0x4313c0
  43137c:	mov    rdx,QWORD PTR [rsp+0x28]
  431381:	test   rdx,rdx
  431384:	je     0x431332
  431386:	mov    eax,DWORD PTR [rbx+0x38]
  431389:	cmp    eax,DWORD PTR [rbx+0x3c]
  43138c:	jge    0x431332
  43138e:	mov    rcx,QWORD PTR [rbx+0x30]
  431392:	movsxd r8,eax
  431395:	add    eax,0x1
  431398:	mov    QWORD PTR [rcx+r8*8],rdx
  43139c:	mov    DWORD PTR [rbx+0x38],eax
  43139f:	mov    rax,QWORD PTR [rsp+0x28]
  4313a4:	add    rsp,0x38
  4313a8:	pop    rbx
  4313a9:	pop    rsi
  4313aa:	pop    rdi
  4313ab:	pop    rbp
  4313ac:	pop    r12
  4313ae:	pop    r13
  4313b0:	ret    
  4313b1:	call   0x432300
  4313b6:	mov    QWORD PTR [rsi],rax
  4313b9:	jmp    0x43136d
  4313bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4313c0:	mov    rcx,QWORD PTR [rsp+0x28]
  4313c5:	mov    r8,QWORD PTR [rax+0x8]
  4313c9:	mov    QWORD PTR [rax+0x8],rcx
  4313cd:	mov    rdx,QWORD PTR [rsi]
  4313d0:	mov    QWORD PTR [rsp+0x28],rdx
  4313d5:	mov    QWORD PTR [rsi],r8
  4313d8:	jmp    0x43137c
  4313da:	nop    WORD PTR [rax+rax*1+0x0]
  4313e0:	add    rcx,0x1
  4313e4:	mov    QWORD PTR [rbx+0x18],rcx
  4313e8:	mov    rcx,rbx
  4313eb:	call   0x42c230
  4313f0:	xor    r9d,r9d
  4313f3:	mov    r8,rax
  4313f6:	mov    edx,0x28
  4313fb:	mov    rcx,rbx
  4313fe:	call   0x42bb30
  431403:	mov    QWORD PTR [rsp+0x28],rax
  431408:	nop    DWORD PTR [rax+rax*1+0x0]
  431410:	test   rax,rax
  431413:	je     0x431332
  431419:	mov    edx,DWORD PTR [rbx+0x38]
  43141c:	cmp    edx,DWORD PTR [rbx+0x3c]
  43141f:	jge    0x431332
  431425:	mov    rcx,QWORD PTR [rbx+0x30]
  431429:	movsxd r8,edx
  43142c:	add    edx,0x1
  43142f:	mov    QWORD PTR [rcx+r8*8],rax
  431433:	mov    rax,QWORD PTR [rsp+0x28]
  431438:	mov    DWORD PTR [rbx+0x38],edx
  43143b:	add    rsp,0x38
  43143f:	pop    rbx
  431440:	pop    rsi
  431441:	pop    rdi
  431442:	pop    rbp
  431443:	pop    r12
  431445:	pop    r13
  431447:	ret    
  431448:	nop    DWORD PTR [rax+rax*1+0x0]
  431450:	mov    rcx,rbx
  431453:	call   0x4331b0
  431458:	mov    QWORD PTR [rsp+0x28],rax
  43145d:	jmp    0x431410
  43145f:	nop
  431460:	lea    rdx,[rcx+0x1]
  431464:	mov    QWORD PTR [rbx+0x18],rdx
  431468:	movzx  eax,BYTE PTR [rcx+0x1]
  43146c:	cmp    al,0x5f
  43146e:	je     0x431ad3
  431474:	sub    eax,0x30
  431477:	cmp    al,0x9
  431479:	ja     0x431b21
  43147f:	mov    r8,rdx
  431482:	add    r8,0x1
  431486:	mov    QWORD PTR [rbx+0x18],r8
  43148a:	movzx  eax,BYTE PTR [r8]
  43148e:	sub    eax,0x30
  431491:	cmp    al,0x9
  431493:	jbe    0x431482
  431495:	sub    r8d,edx
  431498:	mov    rcx,rbx
  43149b:	call   0x42bbb0
  4314a0:	test   rax,rax
  4314a3:	mov    rsi,rax
  4314a6:	je     0x4314b5
  4314a8:	mov    rdx,QWORD PTR [rbx+0x18]
  4314ac:	cmp    BYTE PTR [rdx],0x5f
  4314af:	je     0x431ad5
  4314b5:	xor    eax,eax
  4314b7:	jmp    0x4315b0
  4314bc:	nop    DWORD PTR [rax+0x0]
  4314c0:	add    rcx,0x1
  4314c4:	mov    QWORD PTR [rbx+0x18],rcx
  4314c8:	mov    rcx,rbx
  4314cb:	call   0x4312a0
  4314d0:	xor    r9d,r9d
  4314d3:	mov    r8,rax
  4314d6:	mov    edx,0x25
  4314db:	mov    rcx,rbx
  4314de:	call   0x42bb30
  4314e3:	mov    QWORD PTR [rsp+0x28],rax
  4314e8:	jmp    0x431410
  4314ed:	nop    DWORD PTR [rax]
  4314f0:	mov    rcx,rbx
  4314f3:	call   0x432300
  4314f8:	mov    QWORD PTR [rsp+0x28],rax
  4314fd:	jmp    0x431410
  431502:	add    rcx,0x1
  431506:	mov    QWORD PTR [rbx+0x18],rcx
  43150a:	mov    rcx,rbx
  43150d:	call   0x4312a0
  431512:	xor    r9d,r9d
  431515:	mov    r8,rax
  431518:	mov    edx,0x26
  43151d:	mov    rcx,rbx
  431520:	call   0x42bb30
  431525:	mov    QWORD PTR [rsp+0x28],rax
  43152a:	jmp    0x431410
  43152f:	nop
  431530:	lea    rax,[rcx+0x1]
  431534:	mov    QWORD PTR [rbx+0x18],rax
  431538:	cmp    BYTE PTR [rcx+0x1],0x0
  43153c:	je     0x431332
  431542:	lea    rax,[rcx+0x2]
  431546:	mov    QWORD PTR [rbx+0x18],rax
  43154a:	movzx  eax,BYTE PTR [rcx+0x1]
  43154e:	sub    eax,0x46
  431551:	cmp    al,0x30
  431553:	ja     0x431332
  431559:	lea    rdx,[rip+0x1dab0]        # 0x44f010
  431560:	movzx  eax,al
  431563:	movsxd rax,DWORD PTR [rdx+rax*4]
  431567:	add    rdx,rax
  43156a:	jmp    rdx
  43156c:	nop    DWORD PTR [rax+0x0]
  431570:	add    rcx,0x1
  431574:	mov    QWORD PTR [rbx+0x18],rcx
  431578:	mov    rcx,rbx
  43157b:	call   0x4312a0
  431580:	test   rax,rax
  431583:	mov    rsi,rax
  431586:	je     0x4314b5
  43158c:	mov    rcx,rbx
  43158f:	call   0x4312a0
  431594:	test   rax,rax
  431597:	mov    r9,rax
  43159a:	je     0x4314b5
  4315a0:	mov    r8,rsi
  4315a3:	mov    edx,0x2b
  4315a8:	mov    rcx,rbx
  4315ab:	call   0x42bb30
  4315b0:	mov    QWORD PTR [rsp+0x28],rax
  4315b5:	jmp    0x431410
  4315ba:	nop    WORD PTR [rax+rax*1+0x0]
  4315c0:	add    rcx,0x1
  4315c4:	mov    QWORD PTR [rbx+0x18],rcx
  4315c8:	mov    rcx,rbx
  4315cb:	call   0x4312a0
  4315d0:	xor    r9d,r9d
  4315d3:	mov    r8,rax
  4315d6:	mov    edx,0x24
  4315db:	mov    rcx,rbx
  4315de:	call   0x42bb30
  4315e3:	mov    QWORD PTR [rsp+0x28],rax
  4315e8:	jmp    0x431410
  4315ed:	nop    DWORD PTR [rax]
  4315f0:	add    rcx,0x1
  4315f4:	mov    QWORD PTR [rbx+0x18],rcx
  4315f8:	mov    rcx,rbx
  4315fb:	call   0x4312a0
  431600:	xor    r9d,r9d
  431603:	mov    r8,rax
  431606:	mov    edx,0x22
  43160b:	mov    rcx,rbx
  43160e:	call   0x42bb30
  431613:	mov    QWORD PTR [rsp+0x28],rax
  431618:	jmp    0x431410
  43161d:	nop    DWORD PTR [rax]
  431620:	add    rcx,0x1
  431624:	mov    QWORD PTR [rbx+0x18],rcx
  431628:	mov    rcx,rbx
  43162b:	call   0x4312a0
  431630:	xor    r9d,r9d
  431633:	mov    r8,rax
  431636:	mov    edx,0x23
  43163b:	mov    rcx,rbx
  43163e:	call   0x42bb30
  431643:	mov    QWORD PTR [rsp+0x28],rax
  431648:	jmp    0x431410
  43164d:	nop    DWORD PTR [rax]
  431650:	movzx  eax,BYTE PTR [rcx+0x1]
  431654:	lea    edx,[rax-0x30]
  431657:	cmp    dl,0x9
  43165a:	jbe    0x43166b
  43165c:	cmp    al,0x5f
  43165e:	je     0x43166b
  431660:	sub    eax,0x41
  431663:	cmp    al,0x19
  431665:	ja     0x431afd
  43166b:	xor    edx,edx
  43166d:	mov    rcx,rbx
  431670:	call   0x42bd90
  431675:	mov    rdx,QWORD PTR [rbx+0x18]
  431679:	mov    QWORD PTR [rsp+0x28],rax
  43167e:	cmp    BYTE PTR [rdx],0x49
  431681:	jne    0x431334
  431687:	mov    rcx,rbx
  43168a:	call   0x433070
  43168f:	mov    r8,QWORD PTR [rsp+0x28]
  431694:	mov    r9,rax
  431697:	mov    edx,0x4
  43169c:	mov    rcx,rbx
  43169f:	call   0x42bb30
  4316a4:	jmp    0x4315b0
  4316a9:	nop    DWORD PTR [rax+0x0]
  4316b0:	add    rcx,0x1
  4316b4:	mov    QWORD PTR [rbx+0x18],rcx
  4316b8:	mov    rcx,rbx
  4316bb:	call   0x42c230
  4316c0:	mov    rcx,rbx
  4316c3:	mov    rsi,rax
  4316c6:	mov    QWORD PTR [rsp+0x28],rax
  4316cb:	call   0x4312a0
  4316d0:	mov    r9,rsi
  4316d3:	mov    r8,rax
  4316d6:	mov    edx,0x21
  4316db:	mov    rcx,rbx
  4316de:	call   0x42bb30
  4316e3:	mov    QWORD PTR [rsp+0x28],rax
  4316e8:	jmp    0x431410
  4316ed:	nop    DWORD PTR [rax]
  4316f0:	sub    eax,0x61
  4316f3:	lea    rdx,[rip+0x1e046]        # 0x44f740
  4316fa:	mov    r8d,DWORD PTR [rbx+0x28]
  4316fe:	cdqe   
  431700:	shl    rax,0x5
  431704:	add    rdx,rax
  431707:	cmp    r8d,DWORD PTR [rbx+0x2c]
  43170b:	jge    0x431ac0
  431711:	movsxd rax,r8d
  431714:	add    r8d,0x1
  431718:	lea    r9,[rax+rax*2]
  43171c:	mov    rax,QWORD PTR [rbx+0x20]
  431720:	mov    DWORD PTR [rbx+0x28],r8d
  431724:	lea    rax,[rax+r9*8]
  431728:	test   rax,rax
  43172b:	je     0x431ac0
  431731:	add    rcx,0x1
  431735:	mov    QWORD PTR [rax+0x8],rdx
  431739:	mov    DWORD PTR [rax],0x27
  43173f:	mov    edx,DWORD PTR [rdx+0x8]
  431742:	mov    QWORD PTR [rbx+0x18],rcx
  431746:	add    DWORD PTR [rbx+0x50],edx
  431749:	jmp    0x431334
  43174e:	xchg   ax,ax
  431750:	mov    rcx,rbx
  431753:	call   0x42c180
  431758:	mov    rsi,QWORD PTR [rbx+0x18]
  43175c:	mov    QWORD PTR [rsp+0x28],rax
  431761:	cmp    BYTE PTR [rsi],0x49
  431764:	jne    0x431410
  43176a:	mov    edx,DWORD PTR [rbx+0x58]
  43176d:	test   edx,edx
  43176f:	jne    0x431b50
  431775:	test   rax,rax
  431778:	je     0x431332
  43177e:	mov    edx,DWORD PTR [rbx+0x38]
  431781:	cmp    edx,DWORD PTR [rbx+0x3c]
  431784:	jge    0x431332
  43178a:	mov    rcx,QWORD PTR [rbx+0x30]
  43178e:	movsxd r8,edx
  431791:	add    edx,0x1
  431794:	mov    QWORD PTR [rcx+r8*8],rax
  431798:	mov    DWORD PTR [rbx+0x38],edx
  43179b:	mov    rcx,rbx
  43179e:	call   0x433070
  4317a3:	jmp    0x43168f
  4317a8:	mov    edx,DWORD PTR [rbx+0x28]
  4317ab:	cmp    edx,DWORD PTR [rbx+0x2c]
  4317ae:	jge    0x431ac0
  4317b4:	movsxd rax,edx
  4317b7:	add    edx,0x1
  4317ba:	lea    rcx,[rax+rax*2]
  4317be:	mov    rax,QWORD PTR [rbx+0x20]
  4317c2:	mov    DWORD PTR [rbx+0x28],edx
  4317c5:	lea    rax,[rax+rcx*8]
  4317c9:	test   rax,rax
  4317cc:	je     0x431ac0
  4317d2:	lea    rdi,[rip+0x1e347]        # 0x44fb20
  4317d9:	mov    DWORD PTR [rax],0x27
  4317df:	mov    QWORD PTR [rax+0x8],rdi
  4317e3:	add    DWORD PTR [rbx+0x50],0x8
  4317e7:	jmp    0x431334
  4317ec:	mov    edx,DWORD PTR [rbx+0x28]
  4317ef:	cmp    edx,DWORD PTR [rbx+0x2c]
  4317f2:	jge    0x431ac0
  4317f8:	movsxd rax,edx
  4317fb:	add    edx,0x1
  4317fe:	lea    rcx,[rax+rax*2]
  431802:	mov    rax,QWORD PTR [rbx+0x20]
  431806:	mov    DWORD PTR [rbx+0x28],edx
  431809:	lea    rax,[rax+rcx*8]
  43180d:	test   rax,rax
  431810:	je     0x431ac0
  431816:	lea    rdi,[rip+0x1e2c3]        # 0x44fae0
  43181d:	mov    DWORD PTR [rax],0x27
  431823:	mov    QWORD PTR [rax+0x8],rdi
  431827:	add    DWORD PTR [rbx+0x50],0x4
  43182b:	jmp    0x431334
  431830:	mov    edx,DWORD PTR [rbx+0x28]
  431833:	cmp    edx,DWORD PTR [rbx+0x2c]
  431836:	jge    0x431ac0
  43183c:	movsxd rax,edx
  43183f:	add    edx,0x1
  431842:	lea    rcx,[rax+rax*2]
  431846:	mov    rax,QWORD PTR [rbx+0x20]
  43184a:	mov    DWORD PTR [rbx+0x28],edx
  43184d:	lea    rax,[rax+rcx*8]
  431851:	test   rax,rax
  431854:	je     0x431ac0
  43185a:	lea    rdi,[rip+0x1e21f]        # 0x44fa80
  431861:	mov    DWORD PTR [rax],0x27
  431867:	mov    QWORD PTR [rax+0x8],rdi
  43186b:	add    DWORD PTR [rbx+0x50],0x9
  43186f:	jmp    0x431334
  431874:	mov    edx,DWORD PTR [rbx+0x28]
  431877:	cmp    edx,DWORD PTR [rbx+0x2c]
  43187a:	jge    0x431ac0
  431880:	movsxd rax,edx
  431883:	add    edx,0x1
  431886:	lea    rcx,[rax+rax*2]
  43188a:	mov    rax,QWORD PTR [rbx+0x20]
  43188e:	mov    DWORD PTR [rbx+0x28],edx
  431891:	lea    rax,[rax+rcx*8]
  431895:	test   rax,rax
  431898:	je     0x431ac0
  43189e:	lea    rdi,[rip+0x1e21b]        # 0x44fac0
  4318a5:	mov    DWORD PTR [rax],0x27
  4318ab:	mov    QWORD PTR [rax+0x8],rdi
  4318af:	add    DWORD PTR [rbx+0x50],0xa
  4318b3:	jmp    0x431334
  4318b8:	cmp    BYTE PTR [rcx+0x2],0x5f
  4318bc:	je     0x431b98
  4318c2:	mov    rcx,rbx
  4318c5:	call   0x42c0e0
  4318ca:	mov    rsi,rax
  4318cd:	test   rsi,rsi
  4318d0:	je     0x4314b5
  4318d6:	mov    rdx,QWORD PTR [rbx+0x18]
  4318da:	xor    eax,eax
  4318dc:	cmp    BYTE PTR [rdx],0x5f
  4318df:	jne    0x4315b0
  4318e5:	add    rdx,0x1
  4318e9:	mov    rcx,rbx
  4318ec:	mov    QWORD PTR [rbx+0x18],rdx
  4318f0:	call   0x4312a0
  4318f5:	mov    r8,rsi
  4318f8:	mov    r9,rax
  4318fb:	mov    edx,0x2d
  431900:	mov    rcx,rbx
  431903:	call   0x42bb30
  431908:	jmp    0x4315b0
  43190d:	mov    edx,DWORD PTR [rbx+0x28]
  431910:	cmp    edx,DWORD PTR [rbx+0x2c]
  431913:	jge    0x431ac0
  431919:	movsxd rax,edx
  43191c:	add    edx,0x1
  43191f:	lea    rcx,[rax+rax*2]
  431923:	mov    rax,QWORD PTR [rbx+0x20]
  431927:	mov    DWORD PTR [rbx+0x28],edx
  43192a:	lea    rax,[rax+rcx*8]
  43192e:	test   rax,rax
  431931:	je     0x431ac0
  431937:	lea    rdi,[rip+0x1e1c2]        # 0x44fb00
  43193e:	mov    DWORD PTR [rax],0x27
  431944:	mov    QWORD PTR [rax+0x8],rdi
  431948:	add    DWORD PTR [rbx+0x50],0x8
  43194c:	jmp    0x431334
  431951:	mov    rcx,rbx
  431954:	call   0x4312a0
  431959:	xor    r9d,r9d
  43195c:	mov    r8,rax
  43195f:	mov    edx,0x4a
  431964:	mov    rcx,rbx
  431967:	call   0x42bb30
  43196c:	mov    QWORD PTR [rsp+0x28],rax
  431971:	jmp    0x431410
  431976:	mov    edx,DWORD PTR [rbx+0x28]
  431979:	cmp    edx,DWORD PTR [rbx+0x2c]
  43197c:	jge    0x431ac0
  431982:	movsxd rax,edx
  431985:	add    edx,0x1
  431988:	lea    rcx,[rax+rax*2]
  43198c:	mov    rax,QWORD PTR [rbx+0x20]
  431990:	mov    DWORD PTR [rbx+0x28],edx
  431993:	lea    rax,[rax+rcx*8]
  431997:	test   rax,rax
  43199a:	je     0x431ac0
  4319a0:	lea    rdi,[rip+0x1e199]        # 0x44fb40
  4319a7:	mov    DWORD PTR [rax],0x27
  4319ad:	mov    QWORD PTR [rax+0x8],rdi
  4319b1:	add    DWORD PTR [rbx+0x50],0x11
  4319b5:	jmp    0x431334
  4319ba:	mov    edx,DWORD PTR [rbx+0x28]
  4319bd:	cmp    edx,DWORD PTR [rbx+0x2c]
  4319c0:	jge    0x431ac0
  4319c6:	movsxd rax,edx
  4319c9:	add    edx,0x1
  4319cc:	lea    rcx,[rax+rax*2]
  4319d0:	mov    rax,QWORD PTR [rbx+0x20]
  4319d4:	mov    DWORD PTR [rbx+0x28],edx
  4319d7:	lea    rax,[rax+rcx*8]
  4319db:	test   rax,rax
  4319de:	je     0x431ac0
  4319e4:	lea    rdi,[rip+0x1e0b5]        # 0x44faa0
  4319eb:	mov    DWORD PTR [rax],0x27
  4319f1:	mov    QWORD PTR [rax+0x8],rdi
  4319f5:	add    DWORD PTR [rbx+0x50],0x9
  4319f9:	jmp    0x431334
  4319fe:	lea    rdx,[rip+0x1d4da]        # 0x44eedf
  431a05:	mov    r8d,0x4
  431a0b:	mov    rcx,rbx
  431a0e:	call   0x42bbb0
  431a13:	jmp    0x431334
  431a18:	mov    eax,DWORD PTR [rbx+0x28]
  431a1b:	cmp    eax,DWORD PTR [rbx+0x2c]
  431a1e:	jge    0x431b8b
  431a24:	movsxd rdx,eax
  431a27:	add    eax,0x1
  431a2a:	lea    r8,[rdx+rdx*2]
  431a2e:	mov    rdx,QWORD PTR [rbx+0x20]
  431a32:	mov    DWORD PTR [rbx+0x28],eax
  431a35:	lea    rdx,[rdx+r8*8]
  431a39:	mov    QWORD PTR [rsp+0x28],rdx
  431a3e:	mov    DWORD PTR [rdx],0x2c
  431a44:	movzx  eax,BYTE PTR [rcx+0x2]
  431a48:	sub    eax,0x30
  431a4b:	cmp    al,0x9
  431a4d:	setbe  al
  431a50:	movzx  ecx,al
  431a53:	test   al,al
  431a55:	mov    WORD PTR [rdx+0x10],cx
  431a59:	je     0x431a64
  431a5b:	lea    rcx,[rbx+0x18]
  431a5f:	call   0x42c060
  431a64:	mov    rsi,QWORD PTR [rsp+0x28]
  431a69:	mov    rcx,rbx
  431a6c:	call   0x4312a0
  431a71:	mov    QWORD PTR [rsi+0x8],rax
  431a75:	mov    rax,QWORD PTR [rsp+0x28]
  431a7a:	cmp    QWORD PTR [rax+0x8],0x0
  431a7f:	je     0x431332
  431a85:	lea    rcx,[rbx+0x18]
  431a89:	call   0x42c060
  431a8e:	mov    rax,QWORD PTR [rbx+0x18]
  431a92:	xor    edx,edx
  431a94:	cmp    BYTE PTR [rax],0x0
  431a97:	je     0x431aa9
  431a99:	lea    rdx,[rax+0x1]
  431a9d:	mov    QWORD PTR [rbx+0x18],rdx
  431aa1:	xor    edx,edx
  431aa3:	cmp    BYTE PTR [rax],0x73
  431aa6:	sete   dl
  431aa9:	mov    rax,QWORD PTR [rsp+0x28]
  431aae:	mov    WORD PTR [rax+0x12],dx
  431ab2:	jmp    0x431334
  431ab7:	nop    WORD PTR [rax+rax*1+0x0]
  431ac0:	mov    QWORD PTR [rsp+0x28],0x0
  431ac9:	mov    rax,QWORD PTR ds:0x8
  431ad1:	ud2    
  431ad3:	xor    esi,esi
  431ad5:	add    rdx,0x1
  431ad9:	mov    rcx,rbx
  431adc:	mov    QWORD PTR [rbx+0x18],rdx
  431ae0:	call   0x4312a0
  431ae5:	mov    r8,rsi
  431ae8:	mov    r9,rax
  431aeb:	mov    edx,0x2a
  431af0:	mov    rcx,rbx
  431af3:	call   0x42bb30
  431af8:	jmp    0x4315b0
  431afd:	mov    rcx,rbx
  431b00:	call   0x4331b0
  431b05:	test   rax,rax
  431b08:	mov    QWORD PTR [rsp+0x28],rax
  431b0d:	je     0x431332
  431b13:	cmp    DWORD PTR [rax],0x18
  431b16:	jne    0x431419
  431b1c:	jmp    0x431334
  431b21:	mov    edi,DWORD PTR [rbx+0x54]
  431b24:	mov    rcx,rbx
  431b27:	mov    DWORD PTR [rbx+0x54],0x1
  431b2e:	call   0x432a70
  431b33:	test   rax,rax
  431b36:	mov    rsi,rax
  431b39:	mov    DWORD PTR [rbx+0x54],edi
  431b3c:	jne    0x4314a8
  431b42:	xor    eax,eax
  431b44:	jmp    0x4315b0
  431b49:	nop    DWORD PTR [rax+0x0]
  431b50:	mov    rcx,rbx
  431b53:	mov    r13d,DWORD PTR [rbx+0x28]
  431b57:	mov    r12d,DWORD PTR [rbx+0x38]
  431b5b:	mov    ebp,DWORD PTR [rbx+0x40]
  431b5e:	mov    edi,DWORD PTR [rbx+0x50]
  431b61:	call   0x433070
  431b66:	mov    rdx,QWORD PTR [rbx+0x18]
  431b6a:	cmp    BYTE PTR [rdx],0x49
  431b6d:	je     0x431bbd
  431b6f:	mov    QWORD PTR [rbx+0x18],rsi
  431b73:	mov    DWORD PTR [rbx+0x28],r13d
  431b77:	mov    DWORD PTR [rbx+0x38],r12d
  431b7b:	mov    DWORD PTR [rbx+0x40],ebp
  431b7e:	mov    DWORD PTR [rbx+0x50],edi
  431b81:	mov    rax,QWORD PTR [rsp+0x28]
  431b86:	jmp    0x431410
  431b8b:	mov    DWORD PTR ds:0x0,0x0
  431b96:	ud2    
  431b98:	mov    edi,DWORD PTR [rbx+0x54]
  431b9b:	add    rcx,0x3
  431b9f:	mov    DWORD PTR [rbx+0x54],0x1
  431ba6:	mov    QWORD PTR [rbx+0x18],rcx
  431baa:	mov    rcx,rbx
  431bad:	call   0x432a70
  431bb2:	mov    DWORD PTR [rbx+0x54],edi
  431bb5:	mov    rsi,rax
  431bb8:	jmp    0x4318cd
  431bbd:	mov    rcx,QWORD PTR [rsp+0x28]
  431bc2:	test   rcx,rcx
  431bc5:	je     0x431332
  431bcb:	mov    edx,DWORD PTR [rbx+0x38]
  431bce:	cmp    edx,DWORD PTR [rbx+0x3c]
  431bd1:	jge    0x431332
  431bd7:	mov    r8,QWORD PTR [rbx+0x30]
  431bdb:	movsxd r9,edx
  431bde:	add    edx,0x1
  431be1:	mov    QWORD PTR [r8+r9*8],rcx
  431be5:	mov    DWORD PTR [rbx+0x38],edx
  431be8:	jmp    0x43168f
  431bed:	nop    DWORD PTR [rax]
  431bf0:	push   rdi
  431bf1:	push   rsi
  431bf2:	push   rbx
  431bf3:	sub    rsp,0x20
  431bf7:	mov    rax,QWORD PTR [rcx+0x18]
  431bfb:	cmp    BYTE PTR [rax],0x0
  431bfe:	je     0x431c90
  431c04:	lea    rdx,[rax+0x1]
  431c08:	mov    QWORD PTR [rcx+0x18],rdx
  431c0c:	cmp    BYTE PTR [rax+0x1],0x0
  431c10:	movzx  ebx,BYTE PTR [rax]
  431c13:	je     0x431d00
  431c19:	lea    rdx,[rax+0x2]
  431c1d:	cmp    bl,0x76
  431c20:	mov    rdi,rcx
  431c23:	mov    QWORD PTR [rcx+0x18],rdx
  431c27:	movzx  esi,BYTE PTR [rax+0x1]
  431c2b:	jne    0x431d04
  431c31:	lea    eax,[rsi-0x30]
  431c34:	cmp    al,0x9
  431c36:	ja     0x431c94
  431c38:	call   0x42c230
  431c3d:	mov    ecx,DWORD PTR [rdi+0x28]
  431c40:	cmp    ecx,DWORD PTR [rdi+0x2c]
  431c43:	jge    0x431cf3
  431c49:	movsxd rdx,ecx
  431c4c:	add    ecx,0x1
  431c4f:	test   rax,rax
  431c52:	lea    r8,[rdx+rdx*2]
  431c56:	mov    rdx,QWORD PTR [rdi+0x20]
  431c5a:	mov    DWORD PTR [rdi+0x28],ecx
  431c5d:	lea    rdx,[rdx+r8*8]
  431c61:	je     0x431cf3
  431c67:	test   rdx,rdx
  431c6a:	je     0x431cf3
  431c70:	movsx  ecx,sil
  431c74:	mov    QWORD PTR [rdx+0x10],rax
  431c78:	mov    DWORD PTR [rdx],0x32
  431c7e:	sub    ecx,0x30
  431c81:	mov    rax,rdx
  431c84:	mov    DWORD PTR [rdx+0x8],ecx
  431c87:	jmp    0x431cf5
  431c89:	nop    DWORD PTR [rax+0x0]
  431c90:	xor    esi,esi
  431c92:	xor    ebx,ebx
  431c94:	mov    r9d,0x3d
  431c9a:	xor    edx,edx
  431c9c:	lea    rdi,[rip+0x1e05d]        # 0x44fd00
  431ca3:	jmp    0x431cb2
  431ca5:	cmp    r8b,bl
  431ca8:	jle    0x431ceb
  431caa:	mov    r9d,eax
  431cad:	cmp    edx,r9d
  431cb0:	je     0x431cf3
  431cb2:	mov    eax,r9d
  431cb5:	sub    eax,edx
  431cb7:	mov    r8d,eax
  431cba:	shr    r8d,0x1f
  431cbe:	add    eax,r8d
  431cc1:	sar    eax,1
  431cc3:	add    eax,edx
  431cc5:	movsxd r8,eax
  431cc8:	lea    r8,[r8+r8*2]
  431ccc:	lea    r11,[rdi+r8*8]
  431cd0:	mov    r10,QWORD PTR [r11]
  431cd3:	movzx  r8d,BYTE PTR [r10]
  431cd7:	cmp    bl,r8b
  431cda:	jne    0x431ca5
  431cdc:	movzx  r8d,BYTE PTR [r10+0x1]
  431ce1:	cmp    sil,r8b
  431ce4:	je     0x431d60
  431ce6:	cmp    r8b,sil
  431ce9:	jg     0x431caa
  431ceb:	lea    edx,[rax+0x1]
  431cee:	cmp    edx,r9d
  431cf1:	jne    0x431cb2
  431cf3:	xor    eax,eax
  431cf5:	add    rsp,0x20
  431cf9:	pop    rbx
  431cfa:	pop    rsi
  431cfb:	pop    rdi
  431cfc:	ret    
  431cfd:	nop    DWORD PTR [rax]
  431d00:	xor    esi,esi
  431d02:	jmp    0x431c94
  431d04:	cmp    sil,0x76
  431d08:	jne    0x431c94
  431d0e:	cmp    bl,0x63
  431d11:	jne    0x431c94
  431d17:	mov    edx,DWORD PTR [rcx+0x54]
  431d1a:	xor    eax,eax
  431d1c:	mov    ebx,DWORD PTR [rcx+0x58]
  431d1f:	test   edx,edx
  431d21:	sete   al
  431d24:	mov    DWORD PTR [rcx+0x58],eax
  431d27:	call   0x4312a0
  431d2c:	mov    ecx,DWORD PTR [rdi+0x58]
  431d2f:	xor    r9d,r9d
  431d32:	mov    r8,rax
  431d35:	test   ecx,ecx
  431d37:	jne    0x431d51
  431d39:	mov    edx,0x33
  431d3e:	mov    rcx,rdi
  431d41:	call   0x42bb30
  431d46:	mov    DWORD PTR [rdi+0x58],ebx
  431d49:	add    rsp,0x20
  431d4d:	pop    rbx
  431d4e:	pop    rsi
  431d4f:	pop    rdi
  431d50:	ret    
  431d51:	mov    edx,0x34
  431d56:	mov    rcx,rdi
  431d59:	call   0x42bb30
  431d5e:	jmp    0x431d46
  431d60:	mov    edx,DWORD PTR [rcx+0x28]
  431d63:	cmp    edx,DWORD PTR [rcx+0x2c]
  431d66:	jge    0x431cf3
  431d68:	movsxd rax,edx
  431d6b:	add    edx,0x1
  431d6e:	lea    r8,[rax+rax*2]
  431d72:	mov    rax,QWORD PTR [rcx+0x20]
  431d76:	mov    DWORD PTR [rcx+0x28],edx
  431d79:	lea    rax,[rax+r8*8]
  431d7d:	test   rax,rax
  431d80:	je     0x431cf3
  431d86:	mov    DWORD PTR [rax],0x31
  431d8c:	mov    QWORD PTR [rax+0x8],r11
  431d90:	add    rsp,0x20
  431d94:	pop    rbx
  431d95:	pop    rsi
  431d96:	pop    rdi
  431d97:	ret    
  431d98:	nop    DWORD PTR [rax+rax*1+0x0]
  431da0:	push   rsi
  431da1:	push   rbx
  431da2:	sub    rsp,0x38
  431da6:	mov    rdx,QWORD PTR [rcx+0x18]
  431daa:	mov    QWORD PTR [rsp+0x28],0x0
  431db3:	movzx  eax,BYTE PTR [rdx]
  431db6:	cmp    al,0x45
  431db8:	sete   r9b
  431dbc:	test   al,al
  431dbe:	sete   r8b
  431dc2:	or     r9b,r8b
  431dc5:	jne    0x431e2a
  431dc7:	cmp    al,0x2e
  431dc9:	je     0x431e2a
  431dcb:	mov    rbx,rcx
  431dce:	lea    rsi,[rsp+0x28]
  431dd3:	jmp    0x431e0c
  431dd5:	xor    r9d,r9d
  431dd8:	mov    edx,0x2e
  431ddd:	mov    rcx,rbx
  431de0:	call   0x42bb30
  431de5:	test   rax,rax
  431de8:	mov    QWORD PTR [rsi],rax
  431deb:	je     0x431e2a
  431ded:	mov    rdx,QWORD PTR [rbx+0x18]
  431df1:	lea    rsi,[rax+0x10]
  431df5:	movzx  eax,BYTE PTR [rdx]
  431df8:	cmp    al,0x45
  431dfa:	sete   r8b
  431dfe:	test   al,al
  431e00:	sete   cl
  431e03:	or     r8b,cl
  431e06:	jne    0x431e33
  431e08:	cmp    al,0x2e
  431e0a:	je     0x431e33
  431e0c:	cmp    al,0x4f
  431e0e:	je     0x431e14
  431e10:	cmp    al,0x52
  431e12:	jne    0x431e1a
  431e14:	cmp    BYTE PTR [rdx+0x1],0x45
  431e18:	je     0x431e33
  431e1a:	mov    rcx,rbx
  431e1d:	call   0x4312a0
  431e22:	test   rax,rax
  431e25:	mov    r8,rax
  431e28:	jne    0x431dd5
  431e2a:	xor    eax,eax
  431e2c:	add    rsp,0x38
  431e30:	pop    rbx
  431e31:	pop    rsi
  431e32:	ret    
  431e33:	mov    rax,QWORD PTR [rsp+0x28]
  431e38:	test   rax,rax
  431e3b:	je     0x431e2a
  431e3d:	cmp    QWORD PTR [rax+0x10],0x0
  431e42:	jne    0x431e2c
  431e44:	mov    rdx,QWORD PTR [rax+0x8]
  431e48:	cmp    DWORD PTR [rdx],0x27
  431e4b:	jne    0x431e2c
  431e4d:	mov    rdx,QWORD PTR [rdx+0x8]
  431e51:	cmp    DWORD PTR [rdx+0x1c],0x9
  431e55:	jne    0x431e2c
  431e57:	mov    edx,DWORD PTR [rdx+0x8]
  431e5a:	sub    DWORD PTR [rbx+0x50],edx
  431e5d:	mov    QWORD PTR [rax+0x8],0x0
  431e65:	jmp    0x431e2c
  431e67:	nop    WORD PTR [rax+rax*1+0x0]
  431e70:	push   rbp
  431e71:	push   rdi
  431e72:	push   rsi
  431e73:	push   rbx
  431e74:	sub    rsp,0x28
  431e78:	mov    r8,QWORD PTR [rcx+0x18]
  431e7c:	mov    rbx,rcx
  431e7f:	movzx  eax,BYTE PTR [r8]
  431e83:	lea    edx,[rax-0x30]
  431e86:	cmp    dl,0x9
  431e89:	jbe    0x431f40
  431e8f:	lea    edx,[rax-0x61]
  431e92:	cmp    dl,0x19
  431e95:	jbe    0x431f91
  431e9b:	lea    edx,[rax-0x43]
  431e9e:	cmp    dl,0x1
  431ea1:	jbe    0x432070
  431ea7:	cmp    al,0x4c
  431ea9:	je     0x4320e0
  431eaf:	cmp    al,0x55
  431eb1:	jne    0x4320d1
  431eb7:	movzx  eax,BYTE PTR [r8+0x1]
  431ebc:	cmp    al,0x6c
  431ebe:	je     0x431fb0
  431ec4:	cmp    al,0x74
  431ec6:	jne    0x4320d1
  431ecc:	lea    rdx,[r8+0x1]
  431ed0:	xor    ebp,ebp
  431ed2:	mov    QWORD PTR [rcx+0x18],rdx
  431ed6:	movzx  ecx,BYTE PTR [r8+0x1]
  431edb:	cmp    cl,0x74
  431ede:	jne    0x431f4f
  431ee0:	add    r8,0x2
  431ee4:	mov    rcx,rbx
  431ee7:	mov    QWORD PTR [rbx+0x18],r8
  431eeb:	call   0x42c130
  431ef0:	test   eax,eax
  431ef2:	js     0x431fa7
  431ef8:	mov    edx,DWORD PTR [rbx+0x28]
  431efb:	cmp    edx,DWORD PTR [rbx+0x2c]
  431efe:	jge    0x431f30
  431f00:	movsxd rcx,edx
  431f03:	add    edx,0x1
  431f06:	lea    r8,[rcx+rcx*2]
  431f0a:	mov    rcx,QWORD PTR [rbx+0x20]
  431f0e:	mov    DWORD PTR [rbx+0x28],edx
  431f11:	lea    rbp,[rcx+r8*8]
  431f15:	test   rbp,rbp
  431f18:	je     0x431f30
  431f1a:	mov    DWORD PTR [rbp+0x8],eax
  431f1d:	mov    eax,DWORD PTR [rbx+0x38]
  431f20:	cmp    eax,DWORD PTR [rbx+0x3c]
  431f23:	mov    DWORD PTR [rbp+0x0],0x47
  431f2a:	jl     0x43204c
  431f30:	mov    rdx,QWORD PTR [rbx+0x18]
  431f34:	xor    ebp,ebp
  431f36:	movzx  ecx,BYTE PTR [rdx]
  431f39:	jmp    0x431f4f
  431f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  431f40:	call   0x42c230
  431f45:	mov    rdx,QWORD PTR [rbx+0x18]
  431f49:	mov    rbp,rax
  431f4c:	movzx  ecx,BYTE PTR [rdx]
  431f4f:	cmp    cl,0x42
  431f52:	mov    rax,rbp
  431f55:	je     0x431f60
  431f57:	add    rsp,0x28
  431f5b:	pop    rbx
  431f5c:	pop    rsi
  431f5d:	pop    rdi
  431f5e:	pop    rbp
  431f5f:	ret    
  431f60:	add    rdx,0x1
  431f64:	mov    rcx,rbx
  431f67:	mov    QWORD PTR [rbx+0x18],rdx
  431f6b:	call   0x42c230
  431f70:	mov    r8,rbp
  431f73:	mov    edx,0x4b
  431f78:	mov    r9,rax
  431f7b:	mov    rcx,rbx
  431f7e:	call   0x42bb30
  431f83:	mov    rdx,QWORD PTR [rbx+0x18]
  431f87:	mov    rbp,rax
  431f8a:	cmp    BYTE PTR [rdx],0x42
  431f8d:	je     0x431f60
  431f8f:	jmp    0x431f57
  431f91:	call   0x431bf0
  431f96:	test   rax,rax
  431f99:	mov    rbp,rax
  431f9c:	je     0x431fa7
  431f9e:	cmp    DWORD PTR [rax],0x31
  431fa1:	je     0x432110
  431fa7:	mov    rdx,QWORD PTR [rbx+0x18]
  431fab:	movzx  ecx,BYTE PTR [rdx]
  431fae:	jmp    0x431f4f
  431fb0:	lea    rdx,[r8+0x1]
  431fb4:	xor    ebp,ebp
  431fb6:	mov    QWORD PTR [rcx+0x18],rdx
  431fba:	movzx  ecx,BYTE PTR [r8+0x1]
  431fbf:	cmp    cl,0x6c
  431fc2:	jne    0x431f4f
  431fc4:	add    r8,0x2
  431fc8:	mov    rcx,rbx
  431fcb:	mov    QWORD PTR [rbx+0x18],r8
  431fcf:	call   0x431da0
  431fd4:	mov    rdx,QWORD PTR [rbx+0x18]
  431fd8:	test   rax,rax
  431fdb:	mov    rsi,rax
  431fde:	movzx  ecx,BYTE PTR [rdx]
  431fe1:	je     0x431f4f
  431fe7:	cmp    cl,0x45
  431fea:	jne    0x431f4f
  431ff0:	add    rdx,0x1
  431ff4:	mov    rcx,rbx
  431ff7:	mov    QWORD PTR [rbx+0x18],rdx
  431ffb:	call   0x42c130
  432000:	test   eax,eax
  432002:	js     0x431f30
  432008:	mov    edx,DWORD PTR [rbx+0x28]
  43200b:	cmp    edx,DWORD PTR [rbx+0x2c]
  43200e:	jge    0x431f30
  432014:	movsxd rcx,edx
  432017:	add    edx,0x1
  43201a:	lea    r8,[rcx+rcx*2]
  43201e:	mov    rcx,QWORD PTR [rbx+0x20]
  432022:	mov    DWORD PTR [rbx+0x28],edx
  432025:	lea    rbp,[rcx+r8*8]
  432029:	test   rbp,rbp
  43202c:	je     0x431f30
  432032:	mov    QWORD PTR [rbp+0x8],rsi
  432036:	mov    DWORD PTR [rbp+0x10],eax
  432039:	mov    eax,DWORD PTR [rbx+0x38]
  43203c:	cmp    eax,DWORD PTR [rbx+0x3c]
  43203f:	mov    DWORD PTR [rbp+0x0],0x45
  432046:	jge    0x431f30
  43204c:	mov    rdx,QWORD PTR [rbx+0x30]
  432050:	movsxd rcx,eax
  432053:	add    eax,0x1
  432056:	mov    QWORD PTR [rdx+rcx*8],rbp
  43205a:	mov    rdx,QWORD PTR [rbx+0x18]
  43205e:	mov    DWORD PTR [rbx+0x38],eax
  432061:	movzx  ecx,BYTE PTR [rdx]
  432064:	jmp    0x431f4f
  432069:	nop    DWORD PTR [rax+0x0]
  432070:	mov    r9,QWORD PTR [rcx+0x48]
  432074:	test   r9,r9
  432077:	je     0x4320c5
  432079:	mov    edx,DWORD PTR [r9]
  43207c:	test   edx,edx
  43207e:	jne    0x4320c0
  432080:	mov    eax,DWORD PTR [r9+0x10]
  432084:	add    DWORD PTR [rbx+0x50],eax
  432087:	movzx  ecx,BYTE PTR [r8]
  43208b:	cmp    cl,0x43
  43208e:	je     0x4321f0
  432094:	cmp    cl,0x44
  432097:	jne    0x4321e0
  43209d:	movzx  eax,BYTE PTR [r8+0x1]
  4320a2:	sub    eax,0x30
  4320a5:	cmp    al,0x5
  4320a7:	ja     0x4320d1
  4320a9:	lea    rdx,[rip+0x1d028]        # 0x44f0d8
  4320b0:	movzx  eax,al
  4320b3:	movsxd rax,DWORD PTR [rdx+rax*4]
  4320b7:	add    rdx,rax
  4320ba:	jmp    rdx
  4320bc:	nop    DWORD PTR [rax+0x0]
  4320c0:	cmp    edx,0x18
  4320c3:	je     0x432080
  4320c5:	cmp    al,0x43
  4320c7:	je     0x4321f0
  4320cd:	cmp    al,0x44
  4320cf:	je     0x43209d
  4320d1:	xor    eax,eax
  4320d3:	add    rsp,0x28
  4320d7:	pop    rbx
  4320d8:	pop    rsi
  4320d9:	pop    rdi
  4320da:	pop    rbp
  4320db:	ret    
  4320dc:	nop    DWORD PTR [rax+0x0]
  4320e0:	add    r8,0x1
  4320e4:	mov    QWORD PTR [rcx+0x18],r8
  4320e8:	call   0x42c230
  4320ed:	test   rax,rax
  4320f0:	mov    rbp,rax
  4320f3:	je     0x4320d1
  4320f5:	mov    rcx,rbx
  4320f8:	call   0x42c1f0
  4320fd:	test   eax,eax
  4320ff:	jne    0x431fa7
  432105:	jmp    0x4320d1
  432107:	nop    WORD PTR [rax+rax*1+0x0]
  432110:	mov    rdx,QWORD PTR [rax+0x8]
  432114:	lea    rdi,[rip+0x1cfb9]        # 0x44f0d4
  43211b:	mov    ecx,0x3
  432120:	mov    eax,DWORD PTR [rdx+0x10]
  432123:	add    eax,DWORD PTR [rbx+0x50]
  432126:	mov    rsi,QWORD PTR [rdx]
  432129:	add    eax,0x7
  43212c:	mov    DWORD PTR [rbx+0x50],eax
  43212f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  432131:	jne    0x431fa7
  432137:	mov    rcx,rbx
  43213a:	call   0x42c230
  43213f:	mov    r8,rbp
  432142:	mov    r9,rax
  432145:	mov    edx,0x36
  43214a:	mov    rcx,rbx
  43214d:	call   0x42bb30
  432152:	mov    rbp,rax
  432155:	jmp    0x431fa7
  43215a:	mov    r10d,0x1
  432160:	mov    eax,DWORD PTR [rbx+0x28]
  432163:	cmp    eax,DWORD PTR [rbx+0x2c]
  432166:	lea    rdx,[r8+0x2]
  43216a:	mov    QWORD PTR [rbx+0x18],rdx
  43216e:	jge    0x4321d0
  432170:	movsxd rcx,eax
  432173:	add    eax,0x1
  432176:	lea    r11,[rcx+rcx*2]
  43217a:	mov    rcx,QWORD PTR [rbx+0x20]
  43217e:	mov    DWORD PTR [rbx+0x28],eax
  432181:	lea    rbp,[rcx+r11*8]
  432185:	test   rbp,rbp
  432188:	je     0x4321d0
  43218a:	test   r9,r9
  43218d:	je     0x4321d0
  43218f:	mov    DWORD PTR [rbp+0x0],0x8
  432196:	mov    DWORD PTR [rbp+0x8],r10d
  43219a:	mov    QWORD PTR [rbp+0x10],r9
  43219e:	movzx  ecx,BYTE PTR [r8+0x2]
  4321a3:	jmp    0x431f4f
  4321a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4321b0:	mov    r10d,0x2
  4321b6:	jmp    0x432160
  4321b8:	mov    r10d,0x4
  4321be:	jmp    0x432160
  4321c0:	mov    r10d,0x5
  4321c6:	jmp    0x432160
  4321c8:	mov    r10d,0x3
  4321ce:	jmp    0x432160
  4321d0:	movzx  ecx,BYTE PTR [r8+0x2]
  4321d5:	xor    ebp,ebp
  4321d7:	jmp    0x431f4f
  4321dc:	nop    DWORD PTR [rax+0x0]
  4321e0:	mov    rdx,r8
  4321e3:	xor    ebp,ebp
  4321e5:	jmp    0x431f4f
  4321ea:	nop    WORD PTR [rax+rax*1+0x0]
  4321f0:	movzx  eax,BYTE PTR [r8+0x1]
  4321f5:	sub    eax,0x31
  4321f8:	cmp    al,0x4
  4321fa:	ja     0x4320d1
  432200:	lea    rdx,[rip+0x1cee9]        # 0x44f0f0
  432207:	movzx  eax,al
  43220a:	movsxd rax,DWORD PTR [rdx+rax*4]
  43220e:	add    rdx,rax
  432211:	jmp    rdx
  432213:	mov    r10d,0x1
  432219:	mov    eax,DWORD PTR [rbx+0x28]
  43221c:	cmp    eax,DWORD PTR [rbx+0x2c]
  43221f:	lea    rdx,[r8+0x2]
  432223:	mov    QWORD PTR [rbx+0x18],rdx
  432227:	jge    0x4321d0
  432229:	movsxd rcx,eax
  43222c:	add    eax,0x1
  43222f:	lea    r11,[rcx+rcx*2]
  432233:	mov    rcx,QWORD PTR [rbx+0x20]
  432237:	mov    DWORD PTR [rbx+0x28],eax
  43223a:	lea    rbp,[rcx+r11*8]
  43223e:	test   rbp,rbp
  432241:	je     0x4321d0
  432243:	test   r9,r9
  432246:	je     0x4321d0
  432248:	mov    DWORD PTR [rbp+0x0],0x7
  43224f:	mov    DWORD PTR [rbp+0x8],r10d
  432253:	mov    QWORD PTR [rbp+0x10],r9
  432257:	movzx  ecx,BYTE PTR [r8+0x2]
  43225c:	jmp    0x431f4f
  432261:	mov    r10d,0x5
  432267:	jmp    0x432219
  432269:	mov    r10d,0x4
  43226f:	jmp    0x432219
  432271:	mov    r10d,0x3
  432277:	jmp    0x432219
  432279:	mov    r10d,0x2
  43227f:	jmp    0x432219
  432281:	nop    DWORD PTR [rax+rax*1+0x0]
  432286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432290:	push   rsi
  432291:	push   rbx
  432292:	sub    rsp,0x28
  432296:	mov    rax,QWORD PTR [rcx+0x18]
  43229a:	mov    rbx,rcx
  43229d:	cmp    BYTE PTR [rax],0x4a
  4322a0:	je     0x4322d0
  4322a2:	xor    esi,esi
  4322a4:	test   edx,edx
  4322a6:	jne    0x4322d8
  4322a8:	mov    rcx,rbx
  4322ab:	call   0x431da0
  4322b0:	test   rax,rax
  4322b3:	mov    r9,rax
  4322b6:	je     0x4322f0
  4322b8:	mov    r8,rsi
  4322bb:	mov    edx,0x29
  4322c0:	mov    rcx,rbx
  4322c3:	add    rsp,0x28
  4322c7:	pop    rbx
  4322c8:	pop    rsi
  4322c9:	jmp    0x42bb30
  4322ce:	xchg   ax,ax
  4322d0:	add    rax,0x1
  4322d4:	mov    QWORD PTR [rcx+0x18],rax
  4322d8:	mov    rcx,rbx
  4322db:	call   0x4312a0
  4322e0:	test   rax,rax
  4322e3:	mov    rsi,rax
  4322e6:	jne    0x4322a8
  4322e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4322f0:	xor    eax,eax
  4322f2:	add    rsp,0x28
  4322f6:	pop    rbx
  4322f7:	pop    rsi
  4322f8:	ret    
  4322f9:	nop    DWORD PTR [rax+0x0]
  432300:	push   rbx
  432301:	sub    rsp,0x20
  432305:	mov    rax,QWORD PTR [rcx+0x18]
  432309:	cmp    BYTE PTR [rax],0x46
  43230c:	je     0x432320
  43230e:	xor    eax,eax
  432310:	add    rsp,0x20
  432314:	pop    rbx
  432315:	ret    
  432316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432320:	lea    rdx,[rax+0x1]
  432324:	mov    QWORD PTR [rcx+0x18],rdx
  432328:	cmp    BYTE PTR [rax+0x1],0x59
  43232c:	jne    0x432336
  43232e:	add    rax,0x2
  432332:	mov    QWORD PTR [rcx+0x18],rax
  432336:	mov    rbx,rcx
  432339:	mov    edx,0x1
  43233e:	call   0x432290
  432343:	mov    rcx,rbx
  432346:	mov    rdx,rax
  432349:	call   0x42bd30
  43234e:	mov    rdx,QWORD PTR [rbx+0x18]
  432352:	cmp    BYTE PTR [rdx],0x45
  432355:	jne    0x43230e
  432357:	add    rdx,0x1
  43235b:	mov    QWORD PTR [rbx+0x18],rdx
  43235f:	add    rsp,0x20
  432363:	pop    rbx
  432364:	ret    
  432365:	nop
  432366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432370:	push   r15
  432372:	push   r14
  432374:	push   r13
  432376:	push   r12
  432378:	push   rbp
  432379:	push   rdi
  43237a:	push   rsi
  43237b:	push   rbx
  43237c:	sub    rsp,0x48
  432380:	mov    r14d,0x3
  432386:	mov    rbx,rcx
  432389:	mov    rcx,QWORD PTR [rcx+0x18]
  43238d:	mov    r13d,edx
  432390:	mov    QWORD PTR [rsp+0x38],0x0
  432399:	lea    rbp,[rsp+0x38]
  43239e:	cmp    BYTE PTR [rcx],dl
  4323a0:	je     0x4329d0
  4323a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4323b0:	mov    r12d,DWORD PTR [rbx+0x54]
  4323b4:	mov    DWORD PTR [rbx+0x54],0x1
  4323bb:	movzx  eax,BYTE PTR [rcx]
  4323be:	cmp    al,0x4c
  4323c0:	je     0x4325c0
  4323c6:	cmp    al,0x54
  4323c8:	je     0x4325e0
  4323ce:	cmp    al,0x73
  4323d0:	je     0x4324e0
  4323d6:	cmp    al,0x66
  4323d8:	je     0x432520
  4323de:	lea    edx,[rax-0x30]
  4323e1:	cmp    dl,0x9
  4323e4:	jbe    0x432472
  4323ea:	cmp    al,0x6f
  4323ec:	je     0x432464
  4323ee:	cmp    al,0x74
  4323f0:	sete   dl
  4323f3:	jne    0x432a59
  4323f9:	cmp    BYTE PTR [rcx+0x1],0x6c
  4323fd:	je     0x432700
  432403:	mov    rcx,rbx
  432406:	call   0x431bf0
  43240b:	test   rax,rax
  43240e:	mov    r15,rax
  432411:	je     0x4325a2
  432417:	mov    eax,DWORD PTR [rax]
  432419:	cmp    eax,0x31
  43241c:	je     0x4325f0
  432422:	cmp    eax,0x32
  432425:	je     0x432740
  43242b:	cmp    eax,0x33
  43242e:	jne    0x4325a2
  432434:	mov    rax,QWORD PTR [rbx+0x18]
  432438:	cmp    BYTE PTR [rax],0x5f
  43243b:	je     0x4329fb
  432441:	mov    rcx,rbx
  432444:	call   0x432a70
  432449:	mov    r8,r15
  43244c:	mov    r9,rax
  43244f:	mov    edx,0x36
  432454:	mov    rcx,rbx
  432457:	call   0x42bb30
  43245c:	mov    r8,rax
  43245f:	jmp    0x4325cb
  432464:	cmp    BYTE PTR [rcx+0x1],0x6e
  432468:	jne    0x432403
  43246a:	add    rcx,0x2
  43246e:	mov    QWORD PTR [rbx+0x18],rcx
  432472:	mov    rcx,rbx
  432475:	call   0x431e70
  43247a:	test   rax,rax
  43247d:	je     0x4325a2
  432483:	mov    rdx,QWORD PTR [rbx+0x18]
  432487:	mov    r8,rax
  43248a:	cmp    BYTE PTR [rdx],0x49
  43248d:	je     0x432780
  432493:	mov    DWORD PTR [rbx+0x54],r12d
  432497:	xor    r9d,r9d
  43249a:	mov    edx,0x2e
  43249f:	mov    rcx,rbx
  4324a2:	call   0x42bb30
  4324a7:	test   rax,rax
  4324aa:	mov    QWORD PTR [rbp+0x0],rax
  4324ae:	je     0x4325a6
  4324b4:	mov    rcx,QWORD PTR [rbx+0x18]
  4324b8:	lea    rbp,[rax+0x10]
  4324bc:	cmp    BYTE PTR [rcx],r13b
  4324bf:	jne    0x4323b0
  4324c5:	add    rcx,0x1
  4324c9:	mov    rax,QWORD PTR [rsp+0x38]
  4324ce:	mov    QWORD PTR [rbx+0x18],rcx
  4324d2:	jmp    0x4325a8
  4324d7:	nop    WORD PTR [rax+rax*1+0x0]
  4324e0:	movzx  eax,BYTE PTR [rcx+0x1]
  4324e4:	cmp    al,0x72
  4324e6:	je     0x4327c0
  4324ec:	cmp    al,0x70
  4324ee:	jne    0x432403
  4324f4:	add    rcx,0x2
  4324f8:	mov    QWORD PTR [rbx+0x18],rcx
  4324fc:	mov    rcx,rbx
  4324ff:	call   0x432a70
  432504:	xor    r9d,r9d
  432507:	mov    r8,rax
  43250a:	mov    edx,0x4a
  43250f:	mov    rcx,rbx
  432512:	call   0x42bb30
  432517:	mov    r8,rax
  43251a:	jmp    0x4325cb
  43251f:	nop
  432520:	cmp    BYTE PTR [rcx+0x1],0x70
  432524:	jne    0x432403
  43252a:	lea    rax,[rcx+0x2]
  43252e:	mov    QWORD PTR [rbx+0x18],rax
  432532:	cmp    BYTE PTR [rcx+0x2],0x54
  432536:	je     0x4327b0
  43253c:	mov    rcx,rbx
  43253f:	call   0x42c130
  432544:	mov    edx,eax
  432546:	and    edx,0x7fffffff
  43254c:	cmp    edx,0x7fffffff
  432552:	je     0x4325a2
  432554:	add    eax,0x1
  432557:	mov    edx,DWORD PTR [rbx+0x28]
  43255a:	cmp    edx,DWORD PTR [rbx+0x2c]
  43255d:	jge    0x4325a2
  43255f:	movsxd rcx,edx
  432562:	add    edx,0x1
  432565:	lea    r8,[rcx+rcx*2]
  432569:	mov    rcx,QWORD PTR [rbx+0x20]
  43256d:	mov    DWORD PTR [rbx+0x28],edx
  432570:	lea    r8,[rcx+r8*8]
  432574:	test   r8,r8
  432577:	je     0x4325a2
  432579:	mov    DWORD PTR [r8],0x6
  432580:	mov    DWORD PTR [r8+0x8],eax
  432584:	jmp    0x432493
  432589:	mov    rcx,rbx
  43258c:	call   0x4312a0
  432591:	mov    rcx,QWORD PTR [rbx+0x18]
  432595:	mov    rdi,rax
  432598:	cmp    BYTE PTR [rcx+0x1],0x0
  43259c:	jne    0x43270a
  4325a2:	mov    DWORD PTR [rbx+0x54],r12d
  4325a6:	xor    eax,eax
  4325a8:	add    rsp,0x48
  4325ac:	pop    rbx
  4325ad:	pop    rsi
  4325ae:	pop    rdi
  4325af:	pop    rbp
  4325b0:	pop    r12
  4325b2:	pop    r13
  4325b4:	pop    r14
  4325b6:	pop    r15
  4325b8:	ret    
  4325b9:	nop    DWORD PTR [rax+0x0]
  4325c0:	mov    rcx,rbx
  4325c3:	call   0x433e00
  4325c8:	mov    r8,rax
  4325cb:	test   r8,r8
  4325ce:	mov    DWORD PTR [rbx+0x54],r12d
  4325d2:	jne    0x432497
  4325d8:	jmp    0x4325a6
  4325da:	nop    WORD PTR [rax+rax*1+0x0]
  4325e0:	mov    rcx,rbx
  4325e3:	call   0x42c180
  4325e8:	mov    r8,rax
  4325eb:	jmp    0x4325cb
  4325ed:	nop    DWORD PTR [rax]
  4325f0:	mov    r8,QWORD PTR [r15+0x8]
  4325f4:	lea    rdi,[rip+0x1c5f2]        # 0x44ebed
  4325fb:	mov    rcx,r14
  4325fe:	mov    eax,DWORD PTR [r8+0x10]
  432602:	mov    rdx,QWORD PTR [r8]
  432605:	sub    eax,0x2
  432608:	add    DWORD PTR [rbx+0x50],eax
  43260b:	mov    rsi,rdx
  43260e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  432610:	je     0x432930
  432616:	mov    eax,DWORD PTR [r8+0x14]
  43261a:	cmp    eax,0x1
  43261d:	je     0x432806
  432623:	jle    0x432753
  432629:	cmp    eax,0x2
  43262c:	je     0x432850
  432632:	cmp    eax,0x3
  432635:	jne    0x4325a2
  43263b:	test   rdx,rdx
  43263e:	je     0x4325a2
  432644:	lea    rdi,[rip+0x1c5ab]        # 0x44ebf6
  43264b:	mov    rsi,rdx
  43264e:	mov    rcx,r14
  432651:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  432653:	je     0x432955
  432659:	cmp    BYTE PTR [rdx],0x6e
  43265c:	jne    0x4325a2
  432662:	movzx  eax,BYTE PTR [rdx+0x1]
  432666:	cmp    al,0x61
  432668:	je     0x432672
  43266a:	cmp    al,0x77
  43266c:	jne    0x4325a2
  432672:	mov    edx,0x5f
  432677:	mov    rcx,rbx
  43267a:	call   0x432370
  43267f:	mov    rcx,rbx
  432682:	mov    rsi,rax
  432685:	call   0x4312a0
  43268a:	mov    rdx,QWORD PTR [rbx+0x18]
  43268e:	mov    rdi,rax
  432691:	movzx  eax,BYTE PTR [rdx]
  432694:	cmp    al,0x45
  432696:	je     0x432a15
  43269c:	cmp    al,0x70
  43269e:	je     0x432a25
  4326a4:	cmp    al,0x69
  4326a6:	jne    0x4325a2
  4326ac:	cmp    BYTE PTR [rdx+0x1],0x6c
  4326b0:	jne    0x4325a2
  4326b6:	mov    rcx,rbx
  4326b9:	call   0x432a70
  4326be:	mov    r9,rax
  4326c1:	mov    r8,rdi
  4326c4:	mov    edx,0x3b
  4326c9:	mov    rcx,rbx
  4326cc:	call   0x42bb30
  4326d1:	mov    r8,rsi
  4326d4:	mov    r9,rax
  4326d7:	mov    edx,0x3a
  4326dc:	mov    rcx,rbx
  4326df:	call   0x42bb30
  4326e4:	mov    r8,r15
  4326e7:	mov    r9,rax
  4326ea:	mov    edx,0x39
  4326ef:	mov    rcx,rbx
  4326f2:	call   0x42bb30
  4326f7:	mov    r8,rax
  4326fa:	jmp    0x4325cb
  4326ff:	nop
  432700:	xor    edi,edi
  432702:	test   dl,dl
  432704:	jne    0x432589
  43270a:	add    rcx,0x2
  43270e:	mov    edx,0x45
  432713:	mov    QWORD PTR [rbx+0x18],rcx
  432717:	mov    rcx,rbx
  43271a:	call   0x432370
  43271f:	mov    r8,rdi
  432722:	mov    r9,rax
  432725:	mov    edx,0x30
  43272a:	mov    rcx,rbx
  43272d:	call   0x42bb30
  432732:	mov    r8,rax
  432735:	jmp    0x4325cb
  43273a:	nop    WORD PTR [rax+rax*1+0x0]
  432740:	mov    eax,DWORD PTR [r15+0x8]
  432744:	cmp    eax,0x1
  432747:	je     0x432441
  43274d:	jg     0x4325a2
  432753:	test   eax,eax
  432755:	jne    0x4325a2
  43275b:	mov    r8,r15
  43275e:	xor    r9d,r9d
  432761:	mov    edx,0x35
  432766:	mov    rcx,rbx
  432769:	call   0x42bb30
  43276e:	mov    r8,rax
  432771:	jmp    0x4325cb
  432776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432780:	mov    rcx,rbx
  432783:	mov    QWORD PTR [rsp+0x20],rax
  432788:	call   0x433070
  43278d:	mov    r8,QWORD PTR [rsp+0x20]
  432792:	mov    r9,rax
  432795:	mov    edx,0x4
  43279a:	mov    rcx,rbx
  43279d:	call   0x42bb30
  4327a2:	mov    r8,rax
  4327a5:	jmp    0x4325cb
  4327aa:	nop    WORD PTR [rax+rax*1+0x0]
  4327b0:	add    rcx,0x3
  4327b4:	xor    eax,eax
  4327b6:	mov    QWORD PTR [rbx+0x18],rcx
  4327ba:	jmp    0x432557
  4327bf:	nop
  4327c0:	add    rcx,0x2
  4327c4:	mov    QWORD PTR [rbx+0x18],rcx
  4327c8:	mov    rcx,rbx
  4327cb:	call   0x4312a0
  4327d0:	mov    rcx,rbx
  4327d3:	mov    rsi,rax
  4327d6:	call   0x431e70
  4327db:	mov    rdx,QWORD PTR [rbx+0x18]
  4327df:	mov    rdi,rax
  4327e2:	mov    r9,rax
  4327e5:	cmp    BYTE PTR [rdx],0x49
  4327e8:	je     0x4329ad
  4327ee:	mov    r8,rsi
  4327f1:	mov    edx,0x1
  4327f6:	mov    rcx,rbx
  4327f9:	call   0x42bb30
  4327fe:	mov    r8,rax
  432801:	jmp    0x4325cb
  432806:	movzx  eax,BYTE PTR [rdx]
  432809:	cmp    al,0x6d
  43280b:	je     0x432815
  43280d:	cmp    al,0x70
  43280f:	jne    0x432441
  432815:	cmp    al,BYTE PTR [rdx+0x1]
  432818:	jne    0x432441
  43281e:	mov    rax,QWORD PTR [rbx+0x18]
  432822:	cmp    BYTE PTR [rax],0x5f
  432825:	je     0x432a4c
  43282b:	mov    rcx,rbx
  43282e:	call   0x432a70
  432833:	mov    edx,0x38
  432838:	mov    r8,rax
  43283b:	mov    r9,rax
  43283e:	mov    rcx,rbx
  432841:	call   0x42bb30
  432846:	jmp    0x432449
  43284b:	nop    DWORD PTR [rax+rax*1+0x0]
  432850:	test   rdx,rdx
  432853:	je     0x4325a2
  432859:	mov    rax,QWORD PTR [r15+0x8]
  43285d:	mov    rax,QWORD PTR [rax]
  432860:	cmp    BYTE PTR [rax+0x1],0x63
  432864:	je     0x43297b
  43286a:	mov    rcx,rbx
  43286d:	mov    QWORD PTR [rsp+0x28],rdx
  432872:	call   0x432a70
  432877:	mov    rdx,QWORD PTR [rsp+0x28]
  43287c:	mov    QWORD PTR [rsp+0x20],rax
  432881:	lea    rdi,[rip+0x1c368]        # 0x44ebf0
  432888:	mov    rsi,rdx
  43288b:	mov    rcx,r14
  43288e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  432890:	je     0x432940
  432896:	lea    rdi,[rip+0x1c867]        # 0x44f104
  43289d:	mov    rsi,rdx
  4328a0:	mov    rcx,r14
  4328a3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4328a5:	je     0x4328f3
  4328a7:	lea    rdi,[rip+0x1c859]        # 0x44f107
  4328ae:	mov    rsi,rdx
  4328b1:	mov    rcx,r14
  4328b4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4328b6:	je     0x4328f3
  4328b8:	mov    rcx,rbx
  4328bb:	call   0x432a70
  4328c0:	mov    rdi,rax
  4328c3:	mov    r8,QWORD PTR [rsp+0x20]
  4328c8:	mov    r9,rdi
  4328cb:	mov    edx,0x38
  4328d0:	mov    rcx,rbx
  4328d3:	call   0x42bb30
  4328d8:	mov    r8,r15
  4328db:	mov    r9,rax
  4328de:	mov    edx,0x37
  4328e3:	mov    rcx,rbx
  4328e6:	call   0x42bb30
  4328eb:	mov    r8,rax
  4328ee:	jmp    0x4325cb
  4328f3:	mov    rcx,rbx
  4328f6:	call   0x431e70
  4328fb:	mov    rdi,rax
  4328fe:	mov    rax,QWORD PTR [rbx+0x18]
  432902:	cmp    BYTE PTR [rax],0x49
  432905:	jne    0x4328c3
  432907:	mov    rcx,rbx
  43290a:	call   0x433070
  43290f:	mov    r8,rdi
  432912:	mov    r9,rax
  432915:	mov    edx,0x4
  43291a:	mov    rcx,rbx
  43291d:	call   0x42bb30
  432922:	mov    rdi,rax
  432925:	jmp    0x4328c3
  432927:	nop    WORD PTR [rax+rax*1+0x0]
  432930:	mov    rcx,rbx
  432933:	call   0x4312a0
  432938:	jmp    0x432449
  43293d:	nop    DWORD PTR [rax]
  432940:	mov    edx,0x45
  432945:	mov    rcx,rbx
  432948:	call   0x432370
  43294d:	mov    rdi,rax
  432950:	jmp    0x4328c3
  432955:	mov    rcx,rbx
  432958:	call   0x432a70
  43295d:	mov    rcx,rbx
  432960:	mov    rsi,rax
  432963:	call   0x432a70
  432968:	mov    rcx,rbx
  43296b:	mov    rdi,rax
  43296e:	call   0x432a70
  432973:	mov    r9,rax
  432976:	jmp    0x4326c1
  43297b:	movzx  eax,BYTE PTR [rax]
  43297e:	lea    ecx,[rax-0x72]
  432981:	cmp    cl,0x1
  432984:	jbe    0x432991
  432986:	sub    eax,0x63
  432989:	cmp    al,0x1
  43298b:	ja     0x43286a
  432991:	mov    rcx,rbx
  432994:	mov    QWORD PTR [rsp+0x28],rdx
  432999:	call   0x4312a0
  43299e:	mov    rdx,QWORD PTR [rsp+0x28]
  4329a3:	mov    QWORD PTR [rsp+0x20],rax
  4329a8:	jmp    0x432881
  4329ad:	mov    rcx,rbx
  4329b0:	call   0x433070
  4329b5:	mov    r8,rdi
  4329b8:	mov    r9,rax
  4329bb:	mov    edx,0x4
  4329c0:	mov    rcx,rbx
  4329c3:	call   0x42bb30
  4329c8:	mov    r9,rax
  4329cb:	jmp    0x4327ee
  4329d0:	add    rcx,0x1
  4329d4:	xor    r9d,r9d
  4329d7:	xor    r8d,r8d
  4329da:	mov    QWORD PTR [rbx+0x18],rcx
  4329de:	mov    edx,0x2e
  4329e3:	mov    rcx,rbx
  4329e6:	add    rsp,0x48
  4329ea:	pop    rbx
  4329eb:	pop    rsi
  4329ec:	pop    rdi
  4329ed:	pop    rbp
  4329ee:	pop    r12
  4329f0:	pop    r13
  4329f2:	pop    r14
  4329f4:	pop    r15
  4329f6:	jmp    0x42bb30
  4329fb:	add    rax,0x1
  4329ff:	mov    edx,0x45
  432a04:	mov    rcx,rbx
  432a07:	mov    QWORD PTR [rbx+0x18],rax
  432a0b:	call   0x432370
  432a10:	jmp    0x432449
  432a15:	add    rdx,0x1
  432a19:	xor    r9d,r9d
  432a1c:	mov    QWORD PTR [rbx+0x18],rdx
  432a20:	jmp    0x4326c1
  432a25:	cmp    BYTE PTR [rdx+0x1],0x69
  432a29:	jne    0x4325a2
  432a2f:	add    rdx,0x2
  432a33:	mov    rcx,rbx
  432a36:	mov    QWORD PTR [rbx+0x18],rdx
  432a3a:	mov    edx,0x45
  432a3f:	call   0x432370
  432a44:	mov    r9,rax
  432a47:	jmp    0x4326c1
  432a4c:	add    rax,0x1
  432a50:	mov    QWORD PTR [rbx+0x18],rax
  432a54:	jmp    0x432441
  432a59:	cmp    al,0x69
  432a5b:	je     0x4323f9
  432a61:	jmp    0x432403
  432a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432a70:	push   r13
  432a72:	push   r12
  432a74:	push   rbp
  432a75:	push   rdi
  432a76:	push   rsi
  432a77:	push   rbx
  432a78:	sub    rsp,0x28
  432a7c:	mov    rdx,QWORD PTR [rcx+0x18]
  432a80:	movzx  eax,BYTE PTR [rdx]
  432a83:	cmp    al,0x4c
  432a85:	je     0x432d90
  432a8b:	cmp    al,0x54
  432a8d:	je     0x432da1
  432a93:	cmp    al,0x73
  432a95:	mov    rbx,rcx
  432a98:	je     0x432bc0
  432a9e:	cmp    al,0x66
  432aa0:	je     0x432b53
  432aa6:	lea    ecx,[rax-0x30]
  432aa9:	cmp    cl,0x9
  432aac:	ja     0x432ae0
  432aae:	mov    rcx,rbx
  432ab1:	call   0x431e70
  432ab6:	test   rax,rax
  432ab9:	mov    rsi,rax
  432abc:	je     0x432d60
  432ac2:	mov    rdx,QWORD PTR [rbx+0x18]
  432ac6:	cmp    BYTE PTR [rdx],0x49
  432ac9:	je     0x432dd4
  432acf:	add    rsp,0x28
  432ad3:	pop    rbx
  432ad4:	pop    rsi
  432ad5:	pop    rdi
  432ad6:	pop    rbp
  432ad7:	pop    r12
  432ad9:	pop    r13
  432adb:	ret    
  432adc:	nop    DWORD PTR [rax+0x0]
  432ae0:	cmp    al,0x6f
  432ae2:	je     0x432d70
  432ae8:	cmp    al,0x74
  432aea:	sete   cl
  432aed:	jne    0x433060
  432af3:	cmp    BYTE PTR [rdx+0x1],0x6c
  432af7:	je     0x432d00
  432afd:	mov    rcx,rbx
  432b00:	call   0x431bf0
  432b05:	test   rax,rax
  432b08:	mov    rbp,rax
  432b0b:	je     0x432d60
  432b11:	mov    eax,DWORD PTR [rax]
  432b13:	cmp    eax,0x31
  432b16:	je     0x432bf1
  432b1c:	cmp    eax,0x32
  432b1f:	je     0x432db2
  432b25:	cmp    eax,0x33
  432b28:	jne    0x432d60
  432b2e:	mov    rax,QWORD PTR [rbx+0x18]
  432b32:	cmp    BYTE PTR [rax],0x5f
  432b35:	je     0x432e3f
  432b3b:	mov    rcx,rbx
  432b3e:	call   0x432a70
  432b43:	mov    r9,rax
  432b46:	mov    r8,rbp
  432b49:	mov    edx,0x36
  432b4e:	jmp    0x432d30
  432b53:	cmp    BYTE PTR [rdx+0x1],0x70
  432b57:	jne    0x432afd
  432b59:	lea    rax,[rdx+0x2]
  432b5d:	mov    QWORD PTR [rcx+0x18],rax
  432b61:	cmp    BYTE PTR [rdx+0x2],0x54
  432b65:	je     0x432e30
  432b6b:	call   0x42c130
  432b70:	mov    edx,eax
  432b72:	lea    ecx,[rax+0x1]
  432b75:	and    edx,0x7fffffff
  432b7b:	cmp    edx,0x7fffffff
  432b81:	je     0x432d60
  432b87:	mov    edx,DWORD PTR [rbx+0x28]
  432b8a:	cmp    edx,DWORD PTR [rbx+0x2c]
  432b8d:	jge    0x432d60
  432b93:	movsxd rax,edx
  432b96:	add    edx,0x1
  432b99:	lea    r8,[rax+rax*2]
  432b9d:	mov    rax,QWORD PTR [rbx+0x20]
  432ba1:	mov    DWORD PTR [rbx+0x28],edx
  432ba4:	lea    rax,[rax+r8*8]
  432ba8:	test   rax,rax
  432bab:	je     0x432d60
  432bb1:	mov    DWORD PTR [rax],0x6
  432bb7:	mov    DWORD PTR [rax+0x8],ecx
  432bba:	jmp    0x432acf
  432bbf:	nop
  432bc0:	movzx  eax,BYTE PTR [rdx+0x1]
  432bc4:	cmp    al,0x72
  432bc6:	je     0x432df0
  432bcc:	cmp    al,0x70
  432bce:	jne    0x432afd
  432bd4:	add    rdx,0x2
  432bd8:	mov    QWORD PTR [rcx+0x18],rdx
  432bdc:	call   0x432a70
  432be1:	xor    r9d,r9d
  432be4:	mov    r8,rax
  432be7:	mov    edx,0x4a
  432bec:	jmp    0x432d30
  432bf1:	mov    rdx,QWORD PTR [rbp+0x8]
  432bf5:	lea    rdi,[rip+0x1bff1]        # 0x44ebed
  432bfc:	mov    ecx,0x3
  432c01:	mov    eax,DWORD PTR [rdx+0x10]
  432c04:	mov    r12,QWORD PTR [rdx]
  432c07:	sub    eax,0x2
  432c0a:	add    DWORD PTR [rbx+0x50],eax
  432c0d:	mov    rsi,r12
  432c10:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  432c12:	je     0x432f50
  432c18:	mov    eax,DWORD PTR [rdx+0x14]
  432c1b:	cmp    eax,0x1
  432c1e:	je     0x432e60
  432c24:	jle    0x432dc0
  432c2a:	cmp    eax,0x2
  432c2d:	je     0x432eb0
  432c33:	cmp    eax,0x3
  432c36:	jne    0x432d60
  432c3c:	test   r12,r12
  432c3f:	je     0x432d60
  432c45:	lea    rdi,[rip+0x1bfaa]        # 0x44ebf6
  432c4c:	mov    ecx,0x3
  432c51:	mov    rsi,r12
  432c54:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  432c56:	je     0x432f72
  432c5c:	cmp    BYTE PTR [r12],0x6e
  432c61:	jne    0x432d60
  432c67:	movzx  eax,BYTE PTR [r12+0x1]
  432c6d:	cmp    al,0x61
  432c6f:	je     0x432c79
  432c71:	cmp    al,0x77
  432c73:	jne    0x432d60
  432c79:	mov    edx,0x5f
  432c7e:	mov    rcx,rbx
  432c81:	call   0x432370
  432c86:	mov    rcx,rbx
  432c89:	mov    rsi,rax
  432c8c:	call   0x4312a0
  432c91:	mov    rdx,QWORD PTR [rbx+0x18]
  432c95:	mov    rdi,rax
  432c98:	movzx  ecx,BYTE PTR [rdx]
  432c9b:	cmp    cl,0x45
  432c9e:	je     0x432ff9
  432ca4:	cmp    cl,0x70
  432ca7:	je     0x43302c
  432cad:	cmp    cl,0x69
  432cb0:	jne    0x432d60
  432cb6:	cmp    BYTE PTR [rdx+0x1],0x6c
  432cba:	jne    0x432d60
  432cc0:	mov    rcx,rbx
  432cc3:	call   0x432a70
  432cc8:	mov    r9,rax
  432ccb:	mov    r8,rdi
  432cce:	mov    edx,0x3b
  432cd3:	mov    rcx,rbx
  432cd6:	call   0x42bb30
  432cdb:	mov    r8,rsi
  432cde:	mov    r9,rax
  432ce1:	mov    edx,0x3a
  432ce6:	mov    rcx,rbx
  432ce9:	call   0x42bb30
  432cee:	mov    r8,rbp
  432cf1:	mov    r9,rax
  432cf4:	mov    edx,0x39
  432cf9:	jmp    0x432d30
  432cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  432d00:	xor    esi,esi
  432d02:	test   cl,cl
  432d04:	jne    0x432d44
  432d06:	add    rdx,0x2
  432d0a:	mov    rcx,rbx
  432d0d:	mov    QWORD PTR [rbx+0x18],rdx
  432d11:	mov    edx,0x45
  432d16:	call   0x432370
  432d1b:	mov    r8,rsi
  432d1e:	mov    r9,rax
  432d21:	mov    edx,0x30
  432d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432d30:	mov    rcx,rbx
  432d33:	add    rsp,0x28
  432d37:	pop    rbx
  432d38:	pop    rsi
  432d39:	pop    rdi
  432d3a:	pop    rbp
  432d3b:	pop    r12
  432d3d:	pop    r13
  432d3f:	jmp    0x42bb30
  432d44:	mov    rcx,rbx
  432d47:	call   0x4312a0
  432d4c:	mov    rdx,QWORD PTR [rbx+0x18]
  432d50:	mov    rsi,rax
  432d53:	cmp    BYTE PTR [rdx+0x1],0x0
  432d57:	jne    0x432d06
  432d59:	nop    DWORD PTR [rax+0x0]
  432d60:	xor    eax,eax
  432d62:	add    rsp,0x28
  432d66:	pop    rbx
  432d67:	pop    rsi
  432d68:	pop    rdi
  432d69:	pop    rbp
  432d6a:	pop    r12
  432d6c:	pop    r13
  432d6e:	ret    
  432d6f:	nop
  432d70:	cmp    BYTE PTR [rdx+0x1],0x6e
  432d74:	jne    0x432afd
  432d7a:	add    rdx,0x2
  432d7e:	mov    QWORD PTR [rbx+0x18],rdx
  432d82:	jmp    0x432aae
  432d87:	nop    WORD PTR [rax+rax*1+0x0]
  432d90:	add    rsp,0x28
  432d94:	pop    rbx
  432d95:	pop    rsi
  432d96:	pop    rdi
  432d97:	pop    rbp
  432d98:	pop    r12
  432d9a:	pop    r13
  432d9c:	jmp    0x433e00
  432da1:	add    rsp,0x28
  432da5:	pop    rbx
  432da6:	pop    rsi
  432da7:	pop    rdi
  432da8:	pop    rbp
  432da9:	pop    r12
  432dab:	pop    r13
  432dad:	jmp    0x42c180
  432db2:	mov    eax,DWORD PTR [rbp+0x8]
  432db5:	cmp    eax,0x1
  432db8:	je     0x432b3b
  432dbe:	jg     0x432d60
  432dc0:	test   eax,eax
  432dc2:	jne    0x432d60
  432dc4:	xor    r9d,r9d
  432dc7:	mov    r8,rbp
  432dca:	mov    edx,0x35
  432dcf:	jmp    0x432d30
  432dd4:	mov    rcx,rbx
  432dd7:	call   0x433070
  432ddc:	mov    r8,rsi
  432ddf:	mov    r9,rax
  432de2:	mov    edx,0x4
  432de7:	jmp    0x432d30
  432dec:	nop    DWORD PTR [rax+0x0]
  432df0:	add    rdx,0x2
  432df4:	mov    QWORD PTR [rcx+0x18],rdx
  432df8:	call   0x4312a0
  432dfd:	mov    rcx,rbx
  432e00:	mov    rsi,rax
  432e03:	call   0x431e70
  432e08:	mov    rdx,QWORD PTR [rbx+0x18]
  432e0c:	mov    rdi,rax
  432e0f:	cmp    BYTE PTR [rdx],0x49
  432e12:	je     0x432fbe
  432e18:	mov    r9,rax
  432e1b:	mov    r8,rsi
  432e1e:	mov    edx,0x1
  432e23:	jmp    0x432d30
  432e28:	nop    DWORD PTR [rax+rax*1+0x0]
  432e30:	add    rdx,0x3
  432e34:	mov    QWORD PTR [rcx+0x18],rdx
  432e38:	xor    ecx,ecx
  432e3a:	jmp    0x432b87
  432e3f:	add    rax,0x1
  432e43:	mov    edx,0x45
  432e48:	mov    rcx,rbx
  432e4b:	mov    QWORD PTR [rbx+0x18],rax
  432e4f:	call   0x432370
  432e54:	jmp    0x432b43
  432e59:	nop    DWORD PTR [rax+0x0]
  432e60:	movzx  eax,BYTE PTR [r12]
  432e65:	cmp    al,0x6d
  432e67:	je     0x432e71
  432e69:	cmp    al,0x70
  432e6b:	jne    0x432b3b
  432e71:	cmp    al,BYTE PTR [r12+0x1]
  432e76:	jne    0x432b3b
  432e7c:	mov    rax,QWORD PTR [rbx+0x18]
  432e80:	cmp    BYTE PTR [rax],0x5f
  432e83:	je     0x433053
  432e89:	mov    rcx,rbx
  432e8c:	call   0x432a70
  432e91:	mov    edx,0x38
  432e96:	mov    r8,rax
  432e99:	mov    r9,rax
  432e9c:	mov    rcx,rbx
  432e9f:	call   0x42bb30
  432ea4:	jmp    0x432b43
  432ea9:	nop    DWORD PTR [rax+0x0]
  432eb0:	test   r12,r12
  432eb3:	je     0x432d60
  432eb9:	mov    rax,QWORD PTR [rbp+0x8]
  432ebd:	mov    rax,QWORD PTR [rax]
  432ec0:	cmp    BYTE PTR [rax+0x1],0x63
  432ec4:	je     0x432f98
  432eca:	mov    rcx,rbx
  432ecd:	call   0x432a70
  432ed2:	mov    r13,rax
  432ed5:	lea    rdi,[rip+0x1bd14]        # 0x44ebf0
  432edc:	mov    ecx,0x3
  432ee1:	mov    rsi,r12
  432ee4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  432ee6:	je     0x432f60
  432ee8:	lea    rdi,[rip+0x1c215]        # 0x44f104
  432eef:	mov    ecx,0x3
  432ef4:	mov    rsi,r12
  432ef7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  432ef9:	je     0x432f12
  432efb:	lea    rdi,[rip+0x1c205]        # 0x44f107
  432f02:	mov    ecx,0x3
  432f07:	mov    rsi,r12
  432f0a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  432f0c:	jne    0x432fe9
  432f12:	mov    rcx,rbx
  432f15:	call   0x431e70
  432f1a:	mov    rsi,rax
  432f1d:	mov    rax,QWORD PTR [rbx+0x18]
  432f21:	cmp    BYTE PTR [rax],0x49
  432f24:	je     0x433009
  432f2a:	mov    r9,rsi
  432f2d:	mov    r8,r13
  432f30:	mov    edx,0x38
  432f35:	mov    rcx,rbx
  432f38:	call   0x42bb30
  432f3d:	mov    r8,rbp
  432f40:	mov    r9,rax
  432f43:	mov    edx,0x37
  432f48:	jmp    0x432d30
  432f4d:	nop    DWORD PTR [rax]
  432f50:	mov    rcx,rbx
  432f53:	call   0x4312a0
  432f58:	jmp    0x432b43
  432f5d:	nop    DWORD PTR [rax]
  432f60:	mov    edx,0x45
  432f65:	mov    rcx,rbx
  432f68:	call   0x432370
  432f6d:	mov    rsi,rax
  432f70:	jmp    0x432f2a
  432f72:	mov    rcx,rbx
  432f75:	call   0x432a70
  432f7a:	mov    rcx,rbx
  432f7d:	mov    rsi,rax
  432f80:	call   0x432a70
  432f85:	mov    rcx,rbx
  432f88:	mov    rdi,rax
  432f8b:	call   0x432a70
  432f90:	mov    r9,rax
  432f93:	jmp    0x432ccb
  432f98:	movzx  eax,BYTE PTR [rax]
  432f9b:	lea    edx,[rax-0x72]
  432f9e:	cmp    dl,0x1
  432fa1:	jbe    0x432fae
  432fa3:	sub    eax,0x63
  432fa6:	cmp    al,0x1
  432fa8:	ja     0x432eca
  432fae:	mov    rcx,rbx
  432fb1:	call   0x4312a0
  432fb6:	mov    r13,rax
  432fb9:	jmp    0x432ed5
  432fbe:	mov    rcx,rbx
  432fc1:	call   0x433070
  432fc6:	mov    r8,rdi
  432fc9:	mov    r9,rax
  432fcc:	mov    edx,0x4
  432fd1:	mov    rcx,rbx
  432fd4:	call   0x42bb30
  432fd9:	mov    r8,rsi
  432fdc:	mov    r9,rax
  432fdf:	mov    edx,0x1
  432fe4:	jmp    0x432d30
  432fe9:	mov    rcx,rbx
  432fec:	call   0x432a70
  432ff1:	mov    rsi,rax
  432ff4:	jmp    0x432f2a
  432ff9:	add    rdx,0x1
  432ffd:	xor    r9d,r9d
  433000:	mov    QWORD PTR [rbx+0x18],rdx
  433004:	jmp    0x432ccb
  433009:	mov    rcx,rbx
  43300c:	call   0x433070
  433011:	mov    r8,rsi
  433014:	mov    r9,rax
  433017:	mov    edx,0x4
  43301c:	mov    rcx,rbx
  43301f:	call   0x42bb30
  433024:	mov    rsi,rax
  433027:	jmp    0x432f2a
  43302c:	cmp    BYTE PTR [rdx+0x1],0x69
  433030:	jne    0x432d60
  433036:	add    rdx,0x2
  43303a:	mov    rcx,rbx
  43303d:	mov    QWORD PTR [rbx+0x18],rdx
  433041:	mov    edx,0x45
  433046:	call   0x432370
  43304b:	mov    r9,rax
  43304e:	jmp    0x432ccb
  433053:	add    rax,0x1
  433057:	mov    QWORD PTR [rbx+0x18],rax
  43305b:	jmp    0x432b3b
  433060:	cmp    al,0x69
  433062:	je     0x432af3
  433068:	jmp    0x432afd
  43306d:	nop    DWORD PTR [rax]
  433070:	push   rbp
  433071:	push   rdi
  433072:	push   rsi
  433073:	push   rbx
  433074:	sub    rsp,0x38
  433078:	mov    r8,QWORD PTR [rcx+0x18]
  43307c:	mov    rsi,QWORD PTR [rcx+0x48]
  433080:	movzx  eax,BYTE PTR [r8]
  433084:	sub    eax,0x49
  433087:	cmp    al,0x1
  433089:	ja     0x433132
  43308f:	lea    rdx,[r8+0x1]
  433093:	mov    QWORD PTR [rcx+0x18],rdx
  433097:	movzx  eax,BYTE PTR [r8+0x1]
  43309c:	cmp    al,0x45
  43309e:	je     0x43318a
  4330a4:	mov    rbx,rcx
  4330a7:	mov    QWORD PTR [rsp+0x28],0x0
  4330b0:	lea    rdi,[rsp+0x28]
  4330b5:	jmp    0x433102
  4330b7:	nop    WORD PTR [rax+rax*1+0x0]
  4330c0:	sub    eax,0x49
  4330c3:	cmp    al,0x1
  4330c5:	ja     0x433150
  4330cb:	mov    rcx,rbx
  4330ce:	call   0x433070
  4330d3:	mov    r8,rax
  4330d6:	test   r8,r8
  4330d9:	je     0x433132
  4330db:	xor    r9d,r9d
  4330de:	mov    edx,0x2f
  4330e3:	mov    rcx,rbx
  4330e6:	call   0x42bb30
  4330eb:	test   rax,rax
  4330ee:	mov    QWORD PTR [rdi],rax
  4330f1:	je     0x433132
  4330f3:	mov    rdx,QWORD PTR [rbx+0x18]
  4330f7:	lea    rdi,[rax+0x10]
  4330fb:	movzx  eax,BYTE PTR [rdx]
  4330fe:	cmp    al,0x45
  433100:	je     0x433170
  433102:	cmp    al,0x4c
  433104:	je     0x433160
  433106:	jle    0x4330c0
  433108:	cmp    al,0x58
  43310a:	jne    0x433150
  43310c:	add    rdx,0x1
  433110:	mov    ebp,DWORD PTR [rbx+0x54]
  433113:	mov    rcx,rbx
  433116:	mov    QWORD PTR [rbx+0x18],rdx
  43311a:	mov    DWORD PTR [rbx+0x54],0x1
  433121:	call   0x432a70
  433126:	mov    rdx,QWORD PTR [rbx+0x18]
  43312a:	mov    DWORD PTR [rbx+0x54],ebp
  43312d:	cmp    BYTE PTR [rdx],0x45
  433130:	je     0x433140
  433132:	xor    eax,eax
  433134:	add    rsp,0x38
  433138:	pop    rbx
  433139:	pop    rsi
  43313a:	pop    rdi
  43313b:	pop    rbp
  43313c:	ret    
  43313d:	nop    DWORD PTR [rax]
  433140:	add    rdx,0x1
  433144:	mov    r8,rax
  433147:	mov    QWORD PTR [rbx+0x18],rdx
  43314b:	jmp    0x4330d6
  43314d:	nop    DWORD PTR [rax]
  433150:	mov    rcx,rbx
  433153:	call   0x4312a0
  433158:	mov    r8,rax
  43315b:	jmp    0x4330d6
  433160:	mov    rcx,rbx
  433163:	call   0x433e00
  433168:	mov    r8,rax
  43316b:	jmp    0x4330d6
  433170:	mov    rax,QWORD PTR [rsp+0x28]
  433175:	add    rdx,0x1
  433179:	mov    QWORD PTR [rbx+0x48],rsi
  43317d:	mov    QWORD PTR [rbx+0x18],rdx
  433181:	add    rsp,0x38
  433185:	pop    rbx
  433186:	pop    rsi
  433187:	pop    rdi
  433188:	pop    rbp
  433189:	ret    
  43318a:	add    r8,0x2
  43318e:	xor    r9d,r9d
  433191:	mov    edx,0x2f
  433196:	mov    QWORD PTR [rcx+0x18],r8
  43319a:	xor    r8d,r8d
  43319d:	add    rsp,0x38
  4331a1:	pop    rbx
  4331a2:	pop    rsi
  4331a3:	pop    rdi
  4331a4:	pop    rbp
  4331a5:	jmp    0x42bb30
  4331aa:	nop    WORD PTR [rax+rax*1+0x0]
  4331b0:	push   r12
  4331b2:	push   rbp
  4331b3:	push   rdi
  4331b4:	push   rsi
  4331b5:	push   rbx
  4331b6:	sub    rsp,0x40
  4331ba:	mov    rax,QWORD PTR [rcx+0x18]
  4331be:	mov    rsi,rcx
  4331c1:	movzx  edx,BYTE PTR [rax]
  4331c4:	cmp    dl,0x53
  4331c7:	je     0x433361
  4331cd:	jle    0x433230
  4331cf:	cmp    dl,0x55
  4331d2:	je     0x433210
  4331d4:	cmp    dl,0x5a
  4331d7:	jne    0x433300
  4331dd:	add    rax,0x1
  4331e1:	xor    edx,edx
  4331e3:	mov    QWORD PTR [rcx+0x18],rax
  4331e7:	call   0x4336b0
  4331ec:	mov    rdx,QWORD PTR [rsi+0x18]
  4331f0:	mov    rdi,rax
  4331f3:	cmp    BYTE PTR [rdx],0x45
  4331f6:	je     0x433532
  4331fc:	xor    ebx,ebx
  4331fe:	mov    rax,rbx
  433201:	add    rsp,0x40
  433205:	pop    rbx
  433206:	pop    rsi
  433207:	pop    rdi
  433208:	pop    rbp
  433209:	pop    r12
  43320b:	ret    
  43320c:	nop    DWORD PTR [rax+0x0]
  433210:	call   0x431e70
  433215:	mov    rbx,rax
  433218:	mov    rax,rbx
  43321b:	add    rsp,0x40
  43321f:	pop    rbx
  433220:	pop    rsi
  433221:	pop    rdi
  433222:	pop    rbp
  433223:	pop    r12
  433225:	ret    
  433226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433230:	cmp    dl,0x4e
  433233:	jne    0x433300
  433239:	add    rax,0x1
  43323d:	lea    rdx,[rsp+0x38]
  433242:	mov    r8d,0x1
  433248:	mov    QWORD PTR [rcx+0x18],rax
  43324c:	call   0x42bc10
  433251:	test   rax,rax
  433254:	mov    rbp,rax
  433257:	je     0x4331fc
  433259:	xor    edx,edx
  43325b:	mov    rcx,rsi
  43325e:	xor    edi,edi
  433260:	call   0x42bd30
  433265:	mov    rdx,QWORD PTR [rsi+0x18]
  433269:	mov    r12,rax
  43326c:	movzx  ebx,BYTE PTR [rdx]
  43326f:	nop
  433270:	test   bl,bl
  433272:	je     0x4332f1
  433274:	cmp    bl,0x44
  433277:	je     0x433490
  43327d:	lea    eax,[rbx-0x30]
  433280:	cmp    al,0x9
  433282:	jbe    0x433420
  433288:	lea    eax,[rbx-0x61]
  43328b:	cmp    al,0x19
  43328d:	jbe    0x433420
  433293:	cmp    bl,0x43
  433296:	sete   cl
  433299:	cmp    bl,0x55
  43329c:	sete   al
  43329f:	or     cl,al
  4332a1:	jne    0x433420
  4332a7:	cmp    bl,0x4c
  4332aa:	je     0x433420
  4332b0:	cmp    bl,0x53
  4332b3:	je     0x433500
  4332b9:	cmp    bl,0x49
  4332bc:	je     0x4334e0
  4332c2:	cmp    bl,0x54
  4332c5:	je     0x433525
  4332cb:	cmp    bl,0x45
  4332ce:	je     0x433669
  4332d4:	cmp    bl,0x4d
  4332d7:	jne    0x4332f1
  4332d9:	test   rdi,rdi
  4332dc:	je     0x4332f1
  4332de:	lea    rax,[rdx+0x1]
  4332e2:	mov    QWORD PTR [rsi+0x18],rax
  4332e6:	movzx  ebx,BYTE PTR [rdx+0x1]
  4332ea:	mov    rdx,rax
  4332ed:	test   bl,bl
  4332ef:	jne    0x433274
  4332f1:	mov    QWORD PTR [rbp+0x0],0x0
  4332f9:	xor    ebx,ebx
  4332fb:	jmp    0x4331fe
  433300:	mov    rcx,rsi
  433303:	call   0x431e70
  433308:	mov    rdx,QWORD PTR [rsi+0x18]
  43330c:	mov    rbx,rax
  43330f:	cmp    BYTE PTR [rdx],0x49
  433312:	jne    0x433218
  433318:	test   rax,rax
  43331b:	je     0x4331fc
  433321:	mov    eax,DWORD PTR [rsi+0x38]
  433324:	cmp    eax,DWORD PTR [rsi+0x3c]
  433327:	jge    0x4331fc
  43332d:	mov    rdx,QWORD PTR [rsi+0x30]
  433331:	movsxd rcx,eax
  433334:	add    eax,0x1
  433337:	mov    QWORD PTR [rdx+rcx*8],rbx
  43333b:	mov    rcx,rsi
  43333e:	mov    DWORD PTR [rsi+0x38],eax
  433341:	call   0x433070
  433346:	mov    r8,rbx
  433349:	mov    r9,rax
  43334c:	mov    edx,0x4
  433351:	mov    rcx,rsi
  433354:	call   0x42bb30
  433359:	mov    rbx,rax
  43335c:	jmp    0x433218
  433361:	cmp    BYTE PTR [rax+0x1],0x74
  433365:	je     0x4333a4
  433367:	xor    edx,edx
  433369:	call   0x42bd90
  43336e:	mov    rdi,rax
  433371:	mov    rax,QWORD PTR [rsi+0x18]
  433375:	mov    rbx,rdi
  433378:	cmp    BYTE PTR [rax],0x49
  43337b:	jne    0x433218
  433381:	mov    rcx,rsi
  433384:	call   0x433070
  433389:	mov    r8,rdi
  43338c:	mov    r9,rax
  43338f:	mov    edx,0x4
  433394:	mov    rcx,rsi
  433397:	call   0x42bb30
  43339c:	mov    rbx,rax
  43339f:	jmp    0x433218
  4333a4:	add    rax,0x2
  4333a8:	mov    QWORD PTR [rcx+0x18],rax
  4333ac:	call   0x431e70
  4333b1:	lea    rdx,[rip+0x1bd61]        # 0x44f119
  4333b8:	mov    rbx,rax
  4333bb:	mov    r8d,0x3
  4333c1:	mov    rcx,rsi
  4333c4:	call   0x42bbb0
  4333c9:	mov    r9,rbx
  4333cc:	mov    r8,rax
  4333cf:	mov    edx,0x1
  4333d4:	mov    rcx,rsi
  4333d7:	call   0x42bb30
  4333dc:	mov    rdi,rax
  4333df:	mov    rax,QWORD PTR [rsi+0x18]
  4333e3:	add    DWORD PTR [rsi+0x50],0x3
  4333e7:	mov    rbx,rdi
  4333ea:	cmp    BYTE PTR [rax],0x49
  4333ed:	jne    0x433218
  4333f3:	test   rdi,rdi
  4333f6:	je     0x4331fc
  4333fc:	mov    eax,DWORD PTR [rsi+0x38]
  4333ff:	cmp    eax,DWORD PTR [rsi+0x3c]
  433402:	jge    0x4331fc
  433408:	mov    rdx,QWORD PTR [rsi+0x30]
  43340c:	movsxd rcx,eax
  43340f:	add    eax,0x1
  433412:	mov    QWORD PTR [rdx+rcx*8],rdi
  433416:	mov    DWORD PTR [rsi+0x38],eax
  433419:	jmp    0x433381
  43341e:	xchg   ax,ax
  433420:	mov    rcx,rsi
  433423:	call   0x431e70
  433428:	test   rdi,rdi
  43342b:	je     0x4334c0
  433431:	mov    edx,0x1
  433436:	mov    r8,rdi
  433439:	mov    r9,rax
  43343c:	mov    rcx,rsi
  43343f:	call   0x42bb30
  433444:	mov    rdi,rax
  433447:	cmp    bl,0x53
  43344a:	je     0x43347b
  43344c:	mov    rdx,QWORD PTR [rsi+0x18]
  433450:	cmp    BYTE PTR [rdx],0x45
  433453:	je     0x4334b4
  433455:	test   rdi,rdi
  433458:	je     0x4332f1
  43345e:	mov    edx,DWORD PTR [rsi+0x38]
  433461:	cmp    edx,DWORD PTR [rsi+0x3c]
  433464:	jge    0x4332f1
  43346a:	mov    rax,QWORD PTR [rsi+0x30]
  43346e:	movsxd rcx,edx
  433471:	add    edx,0x1
  433474:	mov    QWORD PTR [rax+rcx*8],rdi
  433478:	mov    DWORD PTR [rsi+0x38],edx
  43347b:	mov    rdx,QWORD PTR [rsi+0x18]
  43347f:	movzx  ebx,BYTE PTR [rdx]
  433482:	jmp    0x433270
  433487:	nop    WORD PTR [rax+rax*1+0x0]
  433490:	movzx  eax,BYTE PTR [rdx+0x1]
  433494:	mov    rcx,rsi
  433497:	and    eax,0xffffffdf
  43349a:	cmp    al,0x54
  43349c:	jne    0x4334d0
  43349e:	call   0x4312a0
  4334a3:	test   rdi,rdi
  4334a6:	jne    0x433431
  4334a8:	mov    rdx,QWORD PTR [rsi+0x18]
  4334ac:	mov    rdi,rax
  4334af:	cmp    BYTE PTR [rdx],0x45
  4334b2:	jne    0x433455
  4334b4:	mov    ebx,0x45
  4334b9:	jmp    0x43327d
  4334be:	xchg   ax,ax
  4334c0:	mov    rdi,rax
  4334c3:	jmp    0x433447
  4334c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4334d0:	call   0x431e70
  4334d5:	jmp    0x4334a3
  4334d7:	nop    WORD PTR [rax+rax*1+0x0]
  4334e0:	test   rdi,rdi
  4334e3:	je     0x4332f1
  4334e9:	mov    rcx,rsi
  4334ec:	call   0x433070
  4334f1:	mov    edx,0x4
  4334f6:	jmp    0x433436
  4334fb:	nop    DWORD PTR [rax+rax*1+0x0]
  433500:	mov    edx,0x1
  433505:	mov    rcx,rsi
  433508:	call   0x42bd90
  43350d:	test   rdi,rdi
  433510:	jne    0x433431
  433516:	mov    rdx,QWORD PTR [rsi+0x18]
  43351a:	mov    rdi,rax
  43351d:	movzx  ebx,BYTE PTR [rdx]
  433520:	jmp    0x433270
  433525:	mov    rcx,rsi
  433528:	call   0x42c180
  43352d:	jmp    0x4334a3
  433532:	lea    rax,[rdx+0x1]
  433536:	mov    QWORD PTR [rsi+0x18],rax
  43353a:	movzx  eax,BYTE PTR [rdx+0x1]
  43353e:	cmp    al,0x73
  433540:	je     0x433634
  433546:	cmp    al,0x64
  433548:	je     0x433591
  43354a:	mov    rcx,rsi
  43354d:	call   0x4331b0
  433552:	test   rax,rax
  433555:	mov    r9,rax
  433558:	je     0x433570
  43355a:	mov    eax,DWORD PTR [rax]
  43355c:	cmp    eax,0x45
  43355f:	je     0x433570
  433561:	cmp    eax,0x47
  433564:	jne    0x433613
  43356a:	nop    WORD PTR [rax+rax*1+0x0]
  433570:	mov    r8,rdi
  433573:	mov    edx,0x2
  433578:	mov    rcx,rsi
  43357b:	call   0x42bb30
  433580:	mov    rbx,rax
  433583:	mov    rax,rbx
  433586:	add    rsp,0x40
  43358a:	pop    rbx
  43358b:	pop    rsi
  43358c:	pop    rdi
  43358d:	pop    rbp
  43358e:	pop    r12
  433590:	ret    
  433591:	add    rdx,0x2
  433595:	mov    rcx,rsi
  433598:	mov    QWORD PTR [rsi+0x18],rdx
  43359c:	call   0x42c130
  4335a1:	test   eax,eax
  4335a3:	mov    ebp,eax
  4335a5:	js     0x4331fc
  4335ab:	mov    rcx,rsi
  4335ae:	call   0x4331b0
  4335b3:	test   rax,rax
  4335b6:	mov    rbx,rax
  4335b9:	je     0x4335c7
  4335bb:	mov    edx,DWORD PTR [rax]
  4335bd:	cmp    edx,0x45
  4335c0:	je     0x4335c7
  4335c2:	cmp    edx,0x47
  4335c5:	jne    0x433600
  4335c7:	mov    edx,DWORD PTR [rsi+0x28]
  4335ca:	xor    r9d,r9d
  4335cd:	cmp    edx,DWORD PTR [rsi+0x2c]
  4335d0:	jge    0x433570
  4335d2:	movsxd rax,edx
  4335d5:	add    edx,0x1
  4335d8:	lea    rcx,[rax+rax*2]
  4335dc:	mov    rax,QWORD PTR [rsi+0x20]
  4335e0:	mov    DWORD PTR [rsi+0x28],edx
  4335e3:	lea    r9,[rax+rcx*8]
  4335e7:	test   r9,r9
  4335ea:	je     0x433570
  4335ec:	mov    DWORD PTR [r9],0x46
  4335f3:	mov    DWORD PTR [r9+0x10],ebp
  4335f7:	mov    QWORD PTR [r9+0x8],rbx
  4335fb:	jmp    0x433570
  433600:	mov    rcx,rsi
  433603:	call   0x42c1f0
  433608:	test   eax,eax
  43360a:	jne    0x4335c7
  43360c:	xor    ebx,ebx
  43360e:	jmp    0x4331fe
  433613:	mov    rcx,rsi
  433616:	mov    QWORD PTR [rsp+0x28],r9
  43361b:	call   0x42c1f0
  433620:	test   eax,eax
  433622:	mov    r9,QWORD PTR [rsp+0x28]
  433627:	jne    0x433570
  43362d:	xor    ebx,ebx
  43362f:	jmp    0x4331fe
  433634:	add    rdx,0x2
  433638:	mov    rcx,rsi
  43363b:	mov    QWORD PTR [rsi+0x18],rdx
  43363f:	call   0x42c1f0
  433644:	test   eax,eax
  433646:	je     0x4331fc
  43364c:	lea    rdx,[rip+0x1bab7]        # 0x44f10a
  433653:	mov    r8d,0xe
  433659:	mov    rcx,rsi
  43365c:	call   0x42bbb0
  433661:	mov    r9,rax
  433664:	jmp    0x433570
  433669:	test   rdi,rdi
  43366c:	mov    QWORD PTR [rbp+0x0],rdi
  433670:	je     0x4331fc
  433676:	test   r12,r12
  433679:	je     0x43368a
  43367b:	mov    rax,QWORD PTR [rsp+0x38]
  433680:	mov    QWORD PTR [rsp+0x38],r12
  433685:	mov    QWORD PTR [r12+0x8],rax
  43368a:	mov    rax,QWORD PTR [rsi+0x18]
  43368e:	cmp    BYTE PTR [rax],0x45
  433691:	jne    0x4331fc
  433697:	add    rax,0x1
  43369b:	mov    rbx,QWORD PTR [rsp+0x38]
  4336a0:	mov    QWORD PTR [rsi+0x18],rax
  4336a4:	jmp    0x433218
  4336a9:	nop    DWORD PTR [rax+0x0]
  4336b0:	push   r13
  4336b2:	push   r12
  4336b4:	push   rbp
  4336b5:	push   rdi
  4336b6:	push   rsi
  4336b7:	push   rbx
  4336b8:	sub    rsp,0x28
  4336bc:	mov    rax,QWORD PTR [rcx+0x18]
  4336c0:	mov    rsi,rcx
  4336c3:	mov    edi,edx
  4336c5:	movzx  ecx,BYTE PTR [rax]
  4336c8:	cmp    cl,0x54
  4336cb:	je     0x433783
  4336d1:	cmp    cl,0x47
  4336d4:	je     0x433783
  4336da:	mov    rcx,rsi
  4336dd:	call   0x4331b0
  4336e2:	test   rax,rax
  4336e5:	mov    rbx,rax
  4336e8:	je     0x4336f4
  4336ea:	test   edi,edi
  4336ec:	je     0x4336f4
  4336ee:	test   BYTE PTR [rsi+0x10],0x1
  4336f2:	je     0x433744
  4336f4:	mov    rax,QWORD PTR [rsi+0x18]
  4336f8:	movzx  eax,BYTE PTR [rax]
  4336fb:	cmp    al,0x45
  4336fd:	sete   dl
  433700:	test   al,al
  433702:	sete   al
  433705:	or     dl,al
  433707:	jne    0x433773
  433709:	test   rbx,rbx
  43370c:	je     0x433773
  43370e:	mov    rdx,rbx
  433711:	mov    eax,DWORD PTR [rdx]
  433713:	cmp    eax,0x4
  433716:	je     0x4337b0
  43371c:	jb     0x4338c0
  433722:	sub    eax,0x1c
  433725:	cmp    eax,0x4
  433728:	ja     0x4338c0
  43372e:	mov    rdx,QWORD PTR [rdx+0x8]
  433732:	test   rdx,rdx
  433735:	jne    0x433711
  433737:	jmp    0x43381c
  43373c:	nop    DWORD PTR [rax+0x0]
  433740:	mov    rbx,QWORD PTR [rbx+0x8]
  433744:	mov    eax,DWORD PTR [rbx]
  433746:	lea    edx,[rax-0x1c]
  433749:	cmp    edx,0x4
  43374c:	jbe    0x433740
  43374e:	cmp    eax,0x2
  433751:	jne    0x433773
  433753:	mov    rdx,QWORD PTR [rbx+0x10]
  433757:	mov    eax,DWORD PTR [rdx]
  433759:	sub    eax,0x1c
  43375c:	cmp    eax,0x4
  43375f:	ja     0x43376f
  433761:	mov    rdx,QWORD PTR [rdx+0x8]
  433765:	mov    eax,DWORD PTR [rdx]
  433767:	sub    eax,0x1c
  43376a:	cmp    eax,0x4
  43376d:	jbe    0x433761
  43376f:	mov    QWORD PTR [rbx+0x10],rdx
  433773:	mov    rax,rbx
  433776:	add    rsp,0x28
  43377a:	pop    rbx
  43377b:	pop    rsi
  43377c:	pop    rdi
  43377d:	pop    rbp
  43377e:	pop    r12
  433780:	pop    r13
  433782:	ret    
  433783:	mov    ecx,DWORD PTR [rsi+0x50]
  433786:	lea    edx,[rcx+0x14]
  433789:	mov    DWORD PTR [rsi+0x50],edx
  43378c:	movzx  edx,BYTE PTR [rax]
  43378f:	cmp    dl,0x54
  433792:	je     0x433880
  433798:	cmp    dl,0x47
  43379b:	je     0x433843
  4337a1:	xor    eax,eax
  4337a3:	add    rsp,0x28
  4337a7:	pop    rbx
  4337a8:	pop    rsi
  4337a9:	pop    rdi
  4337aa:	pop    rbp
  4337ab:	pop    r12
  4337ad:	pop    r13
  4337af:	ret    
  4337b0:	mov    rax,QWORD PTR [rdx+0x8]
  4337b4:	test   rax,rax
  4337b7:	je     0x433817
  4337b9:	mov    edi,DWORD PTR [rax]
  4337bb:	lea    ecx,[rdi-0x1]
  4337be:	cmp    ecx,0x33
  4337c1:	ja     0x433817
  4337c3:	mov    edx,0x1
  4337c8:	movabs r8,0x80000000000c0
  4337d2:	shl    rdx,cl
  4337d5:	test   rdx,r8
  4337d8:	jne    0x4338c0
  4337de:	and    edx,0x3
  4337e1:	mov    r9d,0x1
  4337e7:	jne    0x43380e
  4337e9:	jmp    0x433817
  4337eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4337f0:	mov    edi,DWORD PTR [rax]
  4337f2:	lea    ecx,[rdi-0x1]
  4337f5:	cmp    ecx,0x33
  4337f8:	ja     0x433817
  4337fa:	mov    rdx,r9
  4337fd:	shl    rdx,cl
  433800:	test   rdx,r8
  433803:	jne    0x4338c0
  433809:	and    edx,0x3
  43380c:	je     0x433817
  43380e:	mov    rax,QWORD PTR [rax+0x10]
  433812:	test   rax,rax
  433815:	jne    0x4337f0
  433817:	mov    edx,0x1
  43381c:	mov    rcx,rsi
  43381f:	call   0x432290
  433824:	mov    r8,rbx
  433827:	mov    r9,rax
  43382a:	mov    edx,0x3
  43382f:	mov    rcx,rsi
  433832:	add    rsp,0x28
  433836:	pop    rbx
  433837:	pop    rsi
  433838:	pop    rdi
  433839:	pop    rbp
  43383a:	pop    r12
  43383c:	pop    r13
  43383e:	jmp    0x42bb30
  433843:	lea    rdx,[rax+0x1]
  433847:	mov    QWORD PTR [rsi+0x18],rdx
  43384b:	cmp    BYTE PTR [rax+0x1],0x0
  43384f:	je     0x4337a1
  433855:	lea    rdx,[rax+0x2]
  433859:	mov    QWORD PTR [rsi+0x18],rdx
  43385d:	movzx  edi,BYTE PTR [rax+0x1]
  433861:	lea    edx,[rdi-0x41]
  433864:	cmp    dl,0x31
  433867:	ja     0x4337a1
  43386d:	lea    rcx,[rip+0x1b8ac]        # 0x44f120
  433874:	movzx  edx,dl
  433877:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  43387b:	add    rcx,rdx
  43387e:	jmp    rcx
  433880:	lea    rdx,[rax+0x1]
  433884:	mov    QWORD PTR [rsi+0x18],rdx
  433888:	cmp    BYTE PTR [rax+0x1],0x0
  43388c:	je     0x4337a1
  433892:	lea    rdx,[rax+0x2]
  433896:	mov    QWORD PTR [rsi+0x18],rdx
  43389a:	movzx  eax,BYTE PTR [rax+0x1]
  43389e:	sub    eax,0x43
  4338a1:	cmp    al,0x33
  4338a3:	ja     0x4337a1
  4338a9:	lea    rdx,[rip+0x1b938]        # 0x44f1e8
  4338b0:	movzx  eax,al
  4338b3:	movsxd rax,DWORD PTR [rdx+rax*4]
  4338b7:	add    rdx,rax
  4338ba:	jmp    rdx
  4338bc:	nop    DWORD PTR [rax+0x0]
  4338c0:	xor    edx,edx
  4338c2:	jmp    0x43381c
  4338c7:	nop    WORD PTR [rax+rax*1+0x0]
  4338d0:	lea    rcx,[rsi+0x18]
  4338d4:	call   0x42c060
  4338d9:	cmp    eax,0x1
  4338dc:	jle    0x4337a1
  4338e2:	mov    rdx,QWORD PTR [rsi+0x18]
  4338e6:	cmp    BYTE PTR [rdx],0x0
  4338e9:	je     0x4337a1
  4338ef:	lea    rdi,[rdx+0x1]
  4338f3:	mov    QWORD PTR [rsi+0x18],rdi
  4338f7:	cmp    BYTE PTR [rdx],0x5f
  4338fa:	jne    0x4337a1
  433900:	lea    ebp,[rax-0x1]
  433903:	xor    r13d,r13d
  433906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433910:	movzx  eax,BYTE PTR [rdi]
  433913:	test   al,al
  433915:	je     0x4337a1
  43391b:	cmp    al,0x24
  43391d:	mov    ebx,0x1
  433922:	jne    0x433944
  433924:	jmp    0x433c00
  433929:	nop    DWORD PTR [rax+0x0]
  433930:	movzx  ecx,BYTE PTR [rdi+rbx*1]
  433934:	lea    r9,[rbx+0x1]
  433938:	test   cl,cl
  43393a:	je     0x43394e
  43393c:	cmp    cl,0x24
  43393f:	je     0x43394e
  433941:	mov    rbx,r9
  433944:	cmp    ebx,ebp
  433946:	mov    r12d,ebx
  433949:	jl     0x433930
  43394b:	movsxd rbx,ebx
  43394e:	mov    rdx,rdi
  433951:	mov    r8d,r12d
  433954:	mov    rcx,rsi
  433957:	call   0x42bbb0
  43395c:	mov    rdi,rbx
  43395f:	add    rdi,QWORD PTR [rsi+0x18]
  433963:	sub    ebp,r12d
  433966:	test   rax,rax
  433969:	mov    r9,rax
  43396c:	mov    QWORD PTR [rsi+0x18],rdi
  433970:	je     0x4337a1
  433976:	test   r13,r13
  433979:	je     0x433c60
  43397f:	mov    r8,r13
  433982:	mov    edx,0x3f
  433987:	mov    rcx,rsi
  43398a:	call   0x42bb30
  43398f:	test   rax,rax
  433992:	mov    r13,rax
  433995:	je     0x4337a1
  43399b:	test   ebp,ebp
  43399d:	jg     0x433910
  4339a3:	xor    r9d,r9d
  4339a6:	mov    r8,r13
  4339a9:	mov    edx,0x3e
  4339ae:	jmp    0x43382f
  4339b3:	mov    rcx,rsi
  4339b6:	call   0x4331b0
  4339bb:	xor    r9d,r9d
  4339be:	mov    r8,rax
  4339c1:	mov    edx,0x13
  4339c6:	jmp    0x43382f
  4339cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4339d0:	mov    rcx,rsi
  4339d3:	call   0x4331b0
  4339d8:	mov    rcx,rsi
  4339db:	mov    rbx,rax
  4339de:	call   0x42c0e0
  4339e3:	mov    r8,rbx
  4339e6:	mov    r9,rax
  4339e9:	mov    edx,0x16
  4339ee:	jmp    0x43382f
  4339f3:	xor    edx,edx
  4339f5:	mov    rcx,rsi
  4339f8:	call   0x4336b0
  4339fd:	xor    r9d,r9d
  433a00:	mov    r8,rax
  433a03:	mov    edx,0x17
  433a08:	jmp    0x43382f
  433a0d:	nop    DWORD PTR [rax]
  433a10:	cmp    BYTE PTR [rax+0x2],0x0
  433a14:	je     0x433c68
  433a1a:	lea    rdx,[rax+0x3]
  433a1e:	mov    QWORD PTR [rsi+0x18],rdx
  433a22:	cmp    BYTE PTR [rax+0x2],0x6e
  433a26:	jne    0x433c68
  433a2c:	xor    edx,edx
  433a2e:	mov    rcx,rsi
  433a31:	call   0x4336b0
  433a36:	xor    r9d,r9d
  433a39:	mov    r8,rax
  433a3c:	mov    edx,0x49
  433a41:	jmp    0x43382f
  433a46:	mov    edx,0x76
  433a4b:	mov    rcx,rsi
  433a4e:	call   0x42c310
  433a53:	test   eax,eax
  433a55:	je     0x4337a1
  433a5b:	xor    edx,edx
  433a5d:	mov    rcx,rsi
  433a60:	call   0x4336b0
  433a65:	xor    r9d,r9d
  433a68:	mov    r8,rax
  433a6b:	mov    edx,0x10
  433a70:	jmp    0x43382f
  433a75:	xor    edx,edx
  433a77:	mov    rcx,rsi
  433a7a:	call   0x42c310
  433a7f:	test   eax,eax
  433a81:	je     0x4337a1
  433a87:	xor    edx,edx
  433a89:	mov    rcx,rsi
  433a8c:	call   0x42c310
  433a91:	test   eax,eax
  433a93:	je     0x4337a1
  433a99:	xor    edx,edx
  433a9b:	mov    rcx,rsi
  433a9e:	call   0x4336b0
  433aa3:	xor    r9d,r9d
  433aa6:	mov    r8,rax
  433aa9:	mov    edx,0x11
  433aae:	jmp    0x43382f
  433ab3:	mov    rcx,rsi
  433ab6:	call   0x4331b0
  433abb:	xor    r9d,r9d
  433abe:	mov    r8,rax
  433ac1:	mov    edx,0x15
  433ac6:	jmp    0x43382f
  433acb:	mov    edx,0x68
  433ad0:	mov    rcx,rsi
  433ad3:	call   0x42c310
  433ad8:	test   eax,eax
  433ada:	je     0x4337a1
  433ae0:	xor    edx,edx
  433ae2:	mov    rcx,rsi
  433ae5:	call   0x4336b0
  433aea:	xor    r9d,r9d
  433aed:	mov    r8,rax
  433af0:	mov    edx,0xf
  433af5:	jmp    0x43382f
  433afa:	add    ecx,0xf
  433afd:	mov    DWORD PTR [rsi+0x50],ecx
  433b00:	mov    rcx,rsi
  433b03:	call   0x4312a0
  433b08:	xor    r9d,r9d
  433b0b:	mov    r8,rax
  433b0e:	mov    edx,0x9
  433b13:	jmp    0x43382f
  433b18:	add    ecx,0xa
  433b1b:	mov    DWORD PTR [rsi+0x50],ecx
  433b1e:	mov    rcx,rsi
  433b21:	call   0x4312a0
  433b26:	xor    r9d,r9d
  433b29:	mov    r8,rax
  433b2c:	mov    edx,0xa
  433b31:	jmp    0x43382f
  433b36:	mov    rcx,rsi
  433b39:	call   0x4312a0
  433b3e:	xor    r9d,r9d
  433b41:	mov    r8,rax
  433b44:	mov    edx,0xd
  433b49:	jmp    0x43382f
  433b4e:	mov    rcx,rsi
  433b51:	call   0x4312a0
  433b56:	xor    r9d,r9d
  433b59:	mov    r8,rax
  433b5c:	mov    edx,0x12
  433b61:	jmp    0x43382f
  433b66:	mov    rcx,rsi
  433b69:	call   0x4312a0
  433b6e:	xor    r9d,r9d
  433b71:	mov    r8,rax
  433b74:	mov    edx,0xc
  433b79:	jmp    0x43382f
  433b7e:	mov    rcx,rsi
  433b81:	call   0x4331b0
  433b86:	xor    r9d,r9d
  433b89:	mov    r8,rax
  433b8c:	mov    edx,0x14
  433b91:	jmp    0x43382f
  433b96:	mov    rcx,rsi
  433b99:	call   0x4312a0
  433b9e:	xor    r9d,r9d
  433ba1:	mov    r8,rax
  433ba4:	mov    edx,0xe
  433ba9:	jmp    0x43382f
  433bae:	mov    rcx,rsi
  433bb1:	call   0x4312a0
  433bb6:	lea    rcx,[rsi+0x18]
  433bba:	mov    rbx,rax
  433bbd:	call   0x42c060
  433bc2:	test   eax,eax
  433bc4:	js     0x4337a1
  433bca:	mov    rdx,QWORD PTR [rsi+0x18]
  433bce:	cmp    BYTE PTR [rdx],0x5f
  433bd1:	jne    0x4337a1
  433bd7:	add    rdx,0x1
  433bdb:	mov    rcx,rsi
  433bde:	mov    QWORD PTR [rsi+0x18],rdx
  433be2:	call   0x4312a0
  433be7:	add    DWORD PTR [rsi+0x50],0x5
  433beb:	mov    r8,rax
  433bee:	mov    r9,rbx
  433bf1:	mov    edx,0xb
  433bf6:	jmp    0x43382f
  433bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  433c00:	movzx  eax,BYTE PTR [rdi+0x1]
  433c04:	cmp    al,0x53
  433c06:	je     0x433c8a
  433c0c:	cmp    al,0x5f
  433c0e:	je     0x433c82
  433c10:	cmp    al,0x24
  433c12:	jne    0x4337a1
  433c18:	mov    r8d,0x24
  433c1e:	mov    eax,DWORD PTR [rsi+0x28]
  433c21:	cmp    eax,DWORD PTR [rsi+0x2c]
  433c24:	jge    0x433c92
  433c26:	movsxd rdx,eax
  433c29:	add    eax,0x1
  433c2c:	lea    rcx,[rdx+rdx*2]
  433c30:	mov    rdx,QWORD PTR [rsi+0x20]
  433c34:	mov    DWORD PTR [rsi+0x28],eax
  433c37:	lea    r9,[rdx+rcx*8]
  433c3b:	test   r9,r9
  433c3e:	je     0x433c92
  433c40:	mov    DWORD PTR [r9+0x8],r8d
  433c44:	mov    rax,QWORD PTR [rsi+0x18]
  433c48:	sub    ebp,0x2
  433c4b:	mov    DWORD PTR [r9],0x40
  433c52:	lea    rdi,[rax+0x2]
  433c56:	mov    QWORD PTR [rsi+0x18],rdi
  433c5a:	jmp    0x433976
  433c5f:	nop
  433c60:	mov    r13,r9
  433c63:	jmp    0x43399b
  433c68:	xor    edx,edx
  433c6a:	mov    rcx,rsi
  433c6d:	call   0x4336b0
  433c72:	xor    r9d,r9d
  433c75:	mov    r8,rax
  433c78:	mov    edx,0x48
  433c7d:	jmp    0x43382f
  433c82:	mov    r8d,0x2e
  433c88:	jmp    0x433c1e
  433c8a:	mov    r8d,0x2f
  433c90:	jmp    0x433c1e
  433c92:	add    QWORD PTR [rsi+0x18],0x2
  433c97:	jmp    0x4337a1
  433c9c:	nop    DWORD PTR [rax+0x0]
  433ca0:	push   rdi
  433ca1:	push   rsi
  433ca2:	push   rbx
  433ca3:	sub    rsp,0x20
  433ca7:	mov    rax,QWORD PTR [rcx+0x18]
  433cab:	movzx  r8d,BYTE PTR [rax]
  433caf:	cmp    r8b,0x5f
  433cb3:	je     0x433ccd
  433cb5:	test   edx,edx
  433cb7:	jne    0x433cc3
  433cb9:	cmp    r8b,0x5a
  433cbd:	je     0x433ddb
  433cc3:	xor    eax,eax
  433cc5:	add    rsp,0x20
  433cc9:	pop    rbx
  433cca:	pop    rsi
  433ccb:	pop    rdi
  433ccc:	ret    
  433ccd:	lea    r8,[rax+0x1]
  433cd1:	mov    QWORD PTR [rcx+0x18],r8
  433cd5:	cmp    BYTE PTR [rax+0x1],0x5a
  433cd9:	jne    0x433cc3
  433cdb:	add    rax,0x2
  433cdf:	mov    edi,edx
  433ce1:	mov    rbx,rcx
  433ce4:	mov    QWORD PTR [rcx+0x18],rax
  433ce8:	call   0x4336b0
  433ced:	test   edi,edi
  433cef:	mov    rsi,rax
  433cf2:	je     0x433cc5
  433cf4:	test   BYTE PTR [rbx+0x10],0x1
  433cf8:	je     0x433cc5
  433cfa:	mov    rdx,QWORD PTR [rbx+0x18]
  433cfe:	cmp    BYTE PTR [rdx],0x2e
  433d01:	jne    0x433cc5
  433d03:	movzx  eax,BYTE PTR [rdx+0x1]
  433d07:	lea    ecx,[rax-0x61]
  433d0a:	cmp    cl,0x19
  433d0d:	jbe    0x433da6
  433d13:	cmp    al,0x5f
  433d15:	je     0x433da6
  433d1b:	sub    eax,0x30
  433d1e:	cmp    al,0x9
  433d20:	ja     0x433d9b
  433d22:	movzx  r10d,BYTE PTR [rdx]
  433d26:	mov    r8,rdx
  433d29:	cmp    r10b,0x2e
  433d2d:	jne    0x433d69
  433d2f:	nop
  433d30:	movzx  eax,BYTE PTR [r8+0x1]
  433d35:	lea    ecx,[rax-0x30]
  433d38:	cmp    cl,0x9
  433d3b:	ja     0x433d69
  433d3d:	movzx  r10d,BYTE PTR [r8+0x2]
  433d42:	lea    rcx,[r8+0x2]
  433d46:	mov    r8,rcx
  433d49:	lea    eax,[r10-0x30]
  433d4d:	cmp    al,0x9
  433d4f:	ja     0x433d29
  433d51:	add    r8,0x1
  433d55:	movzx  r10d,BYTE PTR [r8]
  433d59:	lea    r11d,[r10-0x30]
  433d5d:	cmp    r11b,0x9
  433d61:	jbe    0x433d51
  433d63:	cmp    r10b,0x2e
  433d67:	je     0x433d30
  433d69:	mov    QWORD PTR [rbx+0x18],r8
  433d6d:	mov    rcx,rbx
  433d70:	sub    r8d,edx
  433d73:	call   0x42bbb0
  433d78:	mov    r8,rsi
  433d7b:	mov    edx,0x4c
  433d80:	mov    r9,rax
  433d83:	mov    rcx,rbx
  433d86:	call   0x42bb30
  433d8b:	mov    rdx,QWORD PTR [rbx+0x18]
  433d8f:	mov    rsi,rax
  433d92:	cmp    BYTE PTR [rdx],0x2e
  433d95:	je     0x433d03
  433d9b:	mov    rax,rsi
  433d9e:	add    rsp,0x20
  433da2:	pop    rbx
  433da3:	pop    rsi
  433da4:	pop    rdi
  433da5:	ret    
  433da6:	movzx  r10d,BYTE PTR [rdx+0x2]
  433dab:	lea    r8,[rdx+0x2]
  433daf:	lea    eax,[r10-0x61]
  433db3:	cmp    al,0x19
  433db5:	ja     0x433dd0
  433db7:	nop    WORD PTR [rax+rax*1+0x0]
  433dc0:	add    r8,0x1
  433dc4:	movzx  r10d,BYTE PTR [r8]
  433dc8:	lea    eax,[r10-0x61]
  433dcc:	cmp    al,0x19
  433dce:	jbe    0x433dc0
  433dd0:	cmp    r10b,0x5f
  433dd4:	je     0x433dc0
  433dd6:	jmp    0x433d29
  433ddb:	add    rax,0x1
  433ddf:	xor    edx,edx
  433de1:	mov    QWORD PTR [rcx+0x18],rax
  433de5:	add    rsp,0x20
  433de9:	pop    rbx
  433dea:	pop    rsi
  433deb:	pop    rdi
  433dec:	jmp    0x4336b0
  433df1:	nop    DWORD PTR [rax+rax*1+0x0]
  433df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433e00:	push   rdi
  433e01:	push   rsi
  433e02:	push   rbx
  433e03:	sub    rsp,0x20
  433e07:	mov    rax,QWORD PTR [rcx+0x18]
  433e0b:	cmp    BYTE PTR [rax],0x4c
  433e0e:	je     0x433e20
  433e10:	xor    eax,eax
  433e12:	add    rsp,0x20
  433e16:	pop    rbx
  433e17:	pop    rsi
  433e18:	pop    rdi
  433e19:	ret    
  433e1a:	nop    WORD PTR [rax+rax*1+0x0]
  433e20:	lea    rdx,[rax+0x1]
  433e24:	mov    rbx,rcx
  433e27:	mov    QWORD PTR [rcx+0x18],rdx
  433e2b:	movzx  eax,BYTE PTR [rax+0x1]
  433e2f:	cmp    al,0x5a
  433e31:	je     0x433ed2
  433e37:	cmp    al,0x5f
  433e39:	je     0x433ed2
  433e3f:	call   0x4312a0
  433e44:	test   rax,rax
  433e47:	mov    rsi,rax
  433e4a:	je     0x433e10
  433e4c:	cmp    DWORD PTR [rax],0x27
  433e4f:	je     0x433f00
  433e55:	mov    rdx,QWORD PTR [rbx+0x18]
  433e59:	mov    edi,0x3c
  433e5e:	movzx  r9d,BYTE PTR [rdx]
  433e62:	cmp    r9b,0x6e
  433e66:	je     0x433ee0
  433e68:	cmp    r9b,0x45
  433e6c:	je     0x433f1a
  433e72:	test   r9b,r9b
  433e75:	je     0x433e10
  433e77:	lea    r9,[rdx+0x1]
  433e7b:	jmp    0x433e89
  433e7d:	nop    DWORD PTR [rax]
  433e80:	add    r9,0x1
  433e84:	test   r10b,r10b
  433e87:	je     0x433e10
  433e89:	mov    QWORD PTR [rbx+0x18],r9
  433e8d:	movzx  r10d,BYTE PTR [r9]
  433e91:	cmp    r10b,0x45
  433e95:	jne    0x433e80
  433e97:	mov    r8d,r9d
  433e9a:	sub    r8d,edx
  433e9d:	mov    rcx,rbx
  433ea0:	call   0x42bbb0
  433ea5:	mov    r8,rsi
  433ea8:	mov    r9,rax
  433eab:	mov    edx,edi
  433ead:	mov    rcx,rbx
  433eb0:	call   0x42bb30
  433eb5:	mov    rdx,QWORD PTR [rbx+0x18]
  433eb9:	cmp    BYTE PTR [rdx],0x45
  433ebc:	jne    0x433e10
  433ec2:	add    rdx,0x1
  433ec6:	mov    QWORD PTR [rbx+0x18],rdx
  433eca:	add    rsp,0x20
  433ece:	pop    rbx
  433ecf:	pop    rsi
  433ed0:	pop    rdi
  433ed1:	ret    
  433ed2:	xor    edx,edx
  433ed4:	mov    rcx,rbx
  433ed7:	call   0x433ca0
  433edc:	jmp    0x433eb5
  433ede:	xchg   ax,ax
  433ee0:	lea    rax,[rdx+0x1]
  433ee4:	mov    dil,0x3d
  433ee7:	mov    QWORD PTR [rbx+0x18],rax
  433eeb:	movzx  r9d,BYTE PTR [rdx+0x1]
  433ef0:	mov    rdx,rax
  433ef3:	jmp    0x433e68
  433ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  433f00:	mov    rax,QWORD PTR [rax+0x8]
  433f04:	mov    edx,DWORD PTR [rax+0x1c]
  433f07:	test   edx,edx
  433f09:	je     0x433e55
  433f0f:	mov    eax,DWORD PTR [rax+0x8]
  433f12:	sub    DWORD PTR [rbx+0x50],eax
  433f15:	jmp    0x433e55
  433f1a:	xor    r8d,r8d
  433f1d:	jmp    0x433e9d
  433f22:	nop    DWORD PTR [rax+0x0]
  433f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433f30:	push   rbp
  433f31:	push   rdi
  433f32:	push   rsi
  433f33:	push   rbx
  433f34:	sub    rsp,0x88
  433f3b:	lea    rbp,[rsp+0x80]
  433f43:	mov    rdi,rcx
  433f46:	mov    DWORD PTR [rdx],0x0
  433f4c:	mov    DWORD PTR [r8],0x0
  433f53:	mov    rsi,rdx
  433f56:	mov    rbx,r8
  433f59:	call   0x43f028
  433f5e:	mov    rdx,rax
  433f61:	lea    rax,[rdi+rax*1]
  433f65:	mov    QWORD PTR [rbp-0x60],rdi
  433f69:	mov    DWORD PTR [rbp-0x50],0x4000
  433f70:	mov    QWORD PTR [rbp-0x48],rdi
  433f74:	mov    QWORD PTR [rbp-0x58],rax
  433f78:	lea    eax,[rdx+rdx*1]
  433f7b:	mov    DWORD PTR [rbp-0x38],0x0
  433f82:	mov    DWORD PTR [rbp-0x24],edx
  433f85:	mov    DWORD PTR [rbp-0x28],0x0
  433f8c:	mov    DWORD PTR [rbp-0x34],eax
  433f8f:	cdqe   
  433f91:	mov    DWORD PTR [rbp-0x20],0x0
  433f98:	lea    rax,[rax+rax*2]
  433f9c:	mov    QWORD PTR [rbp-0x18],0x0
  433fa4:	mov    DWORD PTR [rbp-0x10],0x0
  433fab:	mov    DWORD PTR [rbp-0xc],0x0
  433fb2:	mov    DWORD PTR [rbp-0x8],0x0
  433fb9:	lea    rax,[rax*8+0x10]
  433fc1:	call   0x439cf0
  433fc6:	movsxd rdx,edx
  433fc9:	sub    rsp,rax
  433fcc:	lea    rax,[rdx*8+0x16]
  433fd4:	lea    rcx,[rsp+0x20]
  433fd9:	and    rax,0xfffffffffffffff0
  433fdd:	call   0x439cf0
  433fe2:	mov    edx,0x1
  433fe7:	sub    rsp,rax
  433fea:	mov    QWORD PTR [rbp-0x40],rcx
  433fee:	lea    rcx,[rbp-0x60]
  433ff2:	lea    rax,[rsp+0x20]
  433ff7:	mov    QWORD PTR [rbp-0x30],rax
  433ffb:	call   0x433ca0
  434000:	lea    r10,[rip+0x1b2b1]        # 0x44f2b8
  434007:	mov    rcx,rax
  43400a:	xor    eax,eax
  43400c:	nop    DWORD PTR [rax+0x0]
  434010:	test   rcx,rcx
  434013:	je     0x43403a
  434015:	cmp    DWORD PTR [rcx],0x8
  434018:	ja     0x43403a
  43401a:	mov    r9d,DWORD PTR [rcx]
  43401d:	movsxd r9,DWORD PTR [r10+r9*4]
  434021:	add    r9,r10
  434024:	jmp    r9
  434027:	nop    WORD PTR [rax+rax*1+0x0]
  434030:	mov    eax,DWORD PTR [rcx+0x8]
  434033:	mov    DWORD PTR [rbx],eax
  434035:	mov    eax,0x1
  43403a:	lea    rsp,[rbp+0x8]
  43403e:	pop    rbx
  43403f:	pop    rsi
  434040:	pop    rdi
  434041:	pop    rbp
  434042:	ret    
  434043:	mov    eax,DWORD PTR [rcx+0x8]
  434046:	mov    DWORD PTR [rsi],eax
  434048:	mov    eax,0x1
  43404d:	lea    rsp,[rbp+0x8]
  434051:	pop    rbx
  434052:	pop    rsi
  434053:	pop    rdi
  434054:	pop    rbp
  434055:	ret    
  434056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434060:	mov    rcx,QWORD PTR [rcx+0x10]
  434064:	jmp    0x434010
  434066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434070:	mov    rcx,QWORD PTR [rcx+0x8]
  434074:	jmp    0x434010
  434076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434080:	push   rbp
  434081:	push   r12
  434083:	push   rdi
  434084:	push   rsi
  434085:	push   rbx
  434086:	sub    rsp,0x1a0
  43408d:	lea    rbp,[rsp+0x80]
  434095:	lea    r12,[rbp-0x50]
  434099:	mov    rdi,rdx
  43409c:	mov    esi,ecx
  43409e:	mov    QWORD PTR [rbp+0xc0],r8
  4340a5:	mov    r8,rdi
  4340a8:	mov    QWORD PTR [rbp+0xc8],r9
  4340af:	lea    rdx,[r12+0x154]
  4340b7:	lea    rcx,[r12+0x164]
  4340bf:	mov    QWORD PTR [rbp+0xb0],0x0
  4340ca:	mov    BYTE PTR [rbp+0xb8],0x0
  4340d1:	mov    QWORD PTR [rbp+0xd0],0x0
  4340dc:	mov    rbx,rsp
  4340df:	mov    QWORD PTR [rbp+0xd8],0x0
  4340ea:	mov    DWORD PTR [rbp+0xe4],0x0
  4340f4:	mov    DWORD PTR [rbp+0xe8],0x0
  4340fe:	mov    DWORD PTR [rbp+0xe0],0x0
  434108:	mov    QWORD PTR [rbp+0xf0],0x0
  434113:	mov    QWORD PTR [rbp+0xf8],0x0
  43411e:	mov    DWORD PTR [rbp+0x100],0x0
  434128:	mov    DWORD PTR [rbp+0x104],0x0
  434132:	mov    QWORD PTR [rbp+0x108],0x0
  43413d:	mov    DWORD PTR [rbp+0x110],0x0
  434147:	mov    DWORD PTR [rbp+0x114],0x0
  434151:	call   0x42bf70
  434156:	movsxd rax,DWORD PTR [rbp+0x104]
  43415d:	mov    r9d,DWORD PTR [rbp+0x114]
  434164:	mov    QWORD PTR [rbp+0x118],0x0
  43416f:	imul   r9d,eax
  434173:	shl    rax,0x4
  434177:	add    rax,0x10
  43417b:	mov    DWORD PTR [rbp+0x114],r9d
  434182:	call   0x439cf0
  434187:	sub    rsp,rax
  43418a:	movsxd rax,r9d
  43418d:	shl    rax,0x4
  434191:	lea    rdx,[rsp+0x20]
  434196:	add    rax,0x10
  43419a:	call   0x439cf0
  43419f:	sub    rsp,rax
  4341a2:	mov    QWORD PTR [rbp+0xf8],rdx
  4341a9:	mov    r8,rdi
  4341ac:	lea    rax,[rsp+0x20]
  4341b1:	mov    edx,esi
  4341b3:	mov    rcx,r12
  4341b6:	mov    QWORD PTR [rbp-0x60],rdi
  4341ba:	mov    QWORD PTR [rbp+0x108],rax
  4341c1:	mov    rax,QWORD PTR [rbp+0xf0]
  4341c8:	mov    QWORD PTR [rbp-0x58],rax
  4341cc:	lea    rax,[rbp-0x60]
  4341d0:	mov    QWORD PTR [rbp+0xf0],rax
  4341d7:	call   0x42c610
  4341dc:	mov    rax,QWORD PTR [rbp-0x58]
  4341e0:	mov    rcx,r12
  4341e3:	mov    QWORD PTR [rbp+0xf0],rax
  4341ea:	mov    rdx,QWORD PTR [rbp+0xb0]
  4341f1:	mov    rsp,rbx
  4341f4:	mov    r8,QWORD PTR [rbp+0xc8]
  4341fb:	mov    BYTE PTR [rbp+rdx*1-0x50],0x0
  434200:	call   QWORD PTR [rbp+0xc0]
  434206:	mov    edx,DWORD PTR [rbp+0xe0]
  43420c:	xor    eax,eax
  43420e:	test   edx,edx
  434210:	sete   al
  434213:	lea    rsp,[rbp+0x120]
  43421a:	pop    rbx
  43421b:	pop    rsi
  43421c:	pop    rdi
  43421d:	pop    r12
  43421f:	pop    rbp
  434220:	ret    
  434221:	nop    DWORD PTR [rax+rax*1+0x0]
  434226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434230:	push   rbp
  434231:	push   r15
  434233:	push   r14
  434235:	push   r13
  434237:	push   r12
  434239:	push   rdi
  43423a:	push   rsi
  43423b:	push   rbx
  43423c:	sub    rsp,0x88
  434243:	lea    rbp,[rsp+0x80]
  43424b:	cmp    BYTE PTR [rcx],0x5f
  43424e:	mov    r10,rcx
  434251:	je     0x434440
  434257:	lea    rdi,[rip+0x1a68a]        # 0x44e8e8
  43425e:	mov    ecx,0x8
  434263:	mov    rsi,r10
  434266:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  434268:	je     0x4343f0
  43426e:	mov    eax,edx
  434270:	and    eax,0x10
  434273:	je     0x4343de
  434279:	xor    r13d,r13d
  43427c:	mov    rbx,r10
  43427f:	mov    rcx,r10
  434282:	mov    esi,edx
  434284:	mov    r12,r9
  434287:	mov    rdi,r8
  43428a:	mov    r14,rsp
  43428d:	call   0x43f028
  434292:	mov    rdx,rax
  434295:	lea    rax,[rbx+rax*1]
  434299:	mov    QWORD PTR [rbp-0x60],rbx
  43429d:	mov    DWORD PTR [rbp-0x50],esi
  4342a0:	mov    QWORD PTR [rbp-0x48],rbx
  4342a4:	mov    QWORD PTR [rbp-0x58],rax
  4342a8:	lea    eax,[rdx+rdx*1]
  4342ab:	mov    DWORD PTR [rbp-0x38],0x0
  4342b2:	mov    DWORD PTR [rbp-0x24],edx
  4342b5:	mov    DWORD PTR [rbp-0x28],0x0
  4342bc:	mov    DWORD PTR [rbp-0x34],eax
  4342bf:	cdqe   
  4342c1:	mov    DWORD PTR [rbp-0x20],0x0
  4342c8:	lea    rax,[rax+rax*2]
  4342cc:	mov    QWORD PTR [rbp-0x18],0x0
  4342d4:	mov    DWORD PTR [rbp-0x10],0x0
  4342db:	mov    DWORD PTR [rbp-0xc],0x0
  4342e2:	mov    DWORD PTR [rbp-0x8],0x0
  4342e9:	lea    rax,[rax*8+0x10]
  4342f1:	call   0x439cf0
  4342f6:	movsxd rdx,edx
  4342f9:	sub    rsp,rax
  4342fc:	lea    rax,[rdx*8+0x16]
  434304:	lea    rcx,[rsp+0x20]
  434309:	and    rax,0xfffffffffffffff0
  43430d:	call   0x439cf0
  434312:	sub    rsp,rax
  434315:	cmp    r13d,0x1
  434319:	mov    QWORD PTR [rbp-0x40],rcx
  43431d:	lea    rax,[rsp+0x20]
  434322:	mov    QWORD PTR [rbp-0x30],rax
  434326:	je     0x4343a0
  434328:	jb     0x434455
  43432e:	cmp    r13d,0x3
  434332:	ja     0x434455
  434338:	cmp    BYTE PTR [rbx+0xb],0x5f
  43433c:	lea    r15,[rbx+0xb]
  434340:	mov    QWORD PTR [rbp-0x48],r15
  434344:	jne    0x434350
  434346:	cmp    BYTE PTR [rbx+0xc],0x5a
  43434a:	je     0x434480
  434350:	lea    rbx,[rbp-0x60]
  434354:	mov    rcx,r15
  434357:	call   0x43f028
  43435c:	mov    rdx,r15
  43435f:	mov    r8d,eax
  434362:	mov    rcx,rbx
  434365:	call   0x42bbb0
  43436a:	mov    r8,rax
  43436d:	xor    edx,edx
  43436f:	cmp    r13d,0x2
  434373:	mov    rcx,rbx
  434376:	setne  dl
  434379:	xor    r9d,r9d
  43437c:	add    edx,0x43
  43437f:	call   0x42bb30
  434384:	mov    r13,QWORD PTR [rbp-0x48]
  434388:	mov    rbx,rax
  43438b:	mov    rcx,r13
  43438e:	call   0x43f028
  434393:	add    rax,r13
  434396:	mov    QWORD PTR [rbp-0x48],rax
  43439a:	jmp    0x4343b1
  43439c:	nop    DWORD PTR [rax+0x0]
  4343a0:	lea    rcx,[rbp-0x60]
  4343a4:	mov    edx,0x1
  4343a9:	call   0x433ca0
  4343ae:	mov    rbx,rax
  4343b1:	test   sil,0x1
  4343b5:	je     0x4343c2
  4343b7:	mov    rdx,QWORD PTR [rbp-0x48]
  4343bb:	xor    eax,eax
  4343bd:	cmp    BYTE PTR [rdx],0x0
  4343c0:	jne    0x4343db
  4343c2:	test   rbx,rbx
  4343c5:	je     0x434470
  4343cb:	mov    r9,r12
  4343ce:	mov    r8,rdi
  4343d1:	mov    rdx,rbx
  4343d4:	mov    ecx,esi
  4343d6:	call   0x434080
  4343db:	mov    rsp,r14
  4343de:	lea    rsp,[rbp+0x8]
  4343e2:	pop    rbx
  4343e3:	pop    rsi
  4343e4:	pop    rdi
  4343e5:	pop    r12
  4343e7:	pop    r13
  4343e9:	pop    r14
  4343eb:	pop    r15
  4343ed:	pop    rbp
  4343ee:	ret    
  4343ef:	nop
  4343f0:	movzx  eax,BYTE PTR [r10+0x8]
  4343f5:	cmp    al,0x5f
  4343f7:	sete   r11b
  4343fb:	cmp    al,0x2e
  4343fd:	sete   cl
  434400:	or     r11b,cl
  434403:	jne    0x43440d
  434405:	cmp    al,0x24
  434407:	jne    0x43426e
  43440d:	movzx  eax,BYTE PTR [r10+0x9]
  434412:	cmp    al,0x49
  434414:	sete   r13b
  434418:	je     0x434422
  43441a:	cmp    al,0x44
  43441c:	jne    0x43426e
  434422:	cmp    BYTE PTR [r10+0xa],0x5f
  434427:	jne    0x43426e
  43442d:	shl    r13d,0x1f
  434431:	sar    r13d,0x1f
  434435:	add    r13d,0x3
  434439:	jmp    0x43427c
  43443e:	xchg   ax,ax
  434440:	cmp    BYTE PTR [rcx+0x1],0x5a
  434444:	jne    0x434257
  43444a:	mov    r13d,0x1
  434450:	jmp    0x43427c
  434455:	lea    rcx,[rbp-0x60]
  434459:	call   0x4312a0
  43445e:	mov    rbx,rax
  434461:	jmp    0x4343b1
  434466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434470:	xor    eax,eax
  434472:	jmp    0x4343db
  434477:	nop    WORD PTR [rax+rax*1+0x0]
  434480:	lea    r10,[rbx+0xd]
  434484:	lea    rbx,[rbp-0x60]
  434488:	xor    edx,edx
  43448a:	mov    rcx,rbx
  43448d:	mov    QWORD PTR [rbp-0x48],r10
  434491:	call   0x4336b0
  434496:	mov    r8,rax
  434499:	jmp    0x43436d
  43449e:	xchg   ax,ax
  4344a0:	push   rbx
  4344a1:	sub    rsp,0x40
  4344a5:	mov    rbx,r8
  4344a8:	lea    r9,[rsp+0x20]
  4344ad:	lea    r8,[rip+0xffffffffffff7fdc]        # 0x42c490
  4344b4:	mov    QWORD PTR [rsp+0x20],0x0
  4344bd:	mov    QWORD PTR [rsp+0x28],0x0
  4344c6:	mov    QWORD PTR [rsp+0x30],0x0
  4344cf:	mov    DWORD PTR [rsp+0x38],0x0
  4344d7:	call   0x434230
  4344dc:	test   eax,eax
  4344de:	je     0x434500
  4344e0:	mov    edx,DWORD PTR [rsp+0x38]
  4344e4:	mov    eax,0x1
  4344e9:	test   edx,edx
  4344eb:	cmove  rax,QWORD PTR [rsp+0x30]
  4344f1:	mov    QWORD PTR [rbx],rax
  4344f4:	mov    rax,QWORD PTR [rsp+0x20]
  4344f9:	add    rsp,0x40
  4344fd:	pop    rbx
  4344fe:	ret    
  4344ff:	nop
  434500:	mov    rcx,QWORD PTR [rsp+0x20]
  434505:	call   0x43f100
  43450a:	mov    QWORD PTR [rbx],0x0
  434511:	xor    eax,eax
  434513:	jmp    0x4344f9
  434515:	nop
  434516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434520:	push   rbp
  434521:	push   rdi
  434522:	push   rsi
  434523:	push   rbx
  434524:	sub    rsp,0x48
  434528:	movsxd r8,r8d
  43452b:	mov    edi,ecx
  43452d:	mov    rbp,rdx
  434530:	test   r8,r8
  434533:	mov    rsi,r9
  434536:	mov    QWORD PTR [rsp+0x20],0x0
  43453f:	mov    QWORD PTR [rsp+0x28],0x0
  434548:	mov    QWORD PTR [rsp+0x30],0x0
  434551:	mov    DWORD PTR [rsp+0x38],0x0
  434559:	jne    0x4345a0
  43455b:	lea    r9,[rsp+0x20]
  434560:	lea    r8,[rip+0xffffffffffff7f29]        # 0x42c490
  434567:	mov    rdx,rbp
  43456a:	mov    ecx,edi
  43456c:	call   0x434080
  434571:	test   eax,eax
  434573:	je     0x4345d3
  434575:	mov    edx,DWORD PTR [rsp+0x38]
  434579:	mov    eax,0x1
  43457e:	test   edx,edx
  434580:	cmove  rax,QWORD PTR [rsp+0x30]
  434586:	mov    QWORD PTR [rsi],rax
  434589:	mov    rax,QWORD PTR [rsp+0x20]
  43458e:	add    rsp,0x48
  434592:	pop    rbx
  434593:	pop    rsi
  434594:	pop    rdi
  434595:	pop    rbp
  434596:	ret    
  434597:	nop    WORD PTR [rax+rax*1+0x0]
  4345a0:	cmp    r8,0x2
  4345a4:	mov    ebx,0x2
  4345a9:	jbe    0x4345b8
  4345ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4345b0:	add    rbx,rbx
  4345b3:	cmp    r8,rbx
  4345b6:	ja     0x4345b0
  4345b8:	xor    ecx,ecx
  4345ba:	mov    rdx,rbx
  4345bd:	call   0x43f080
  4345c2:	test   rax,rax
  4345c5:	je     0x4345e8
  4345c7:	mov    QWORD PTR [rsp+0x20],rax
  4345cc:	mov    QWORD PTR [rsp+0x30],rbx
  4345d1:	jmp    0x43455b
  4345d3:	mov    rcx,QWORD PTR [rsp+0x20]
  4345d8:	call   0x43f100
  4345dd:	mov    QWORD PTR [rsi],0x0
  4345e4:	xor    eax,eax
  4345e6:	jmp    0x43458e
  4345e8:	mov    rcx,QWORD PTR [rsp+0x20]
  4345ed:	call   0x43f100
  4345f2:	mov    QWORD PTR [rsp+0x20],0x0
  4345fb:	mov    QWORD PTR [rsp+0x28],0x0
  434604:	mov    QWORD PTR [rsp+0x30],0x0
  43460d:	mov    DWORD PTR [rsp+0x38],0x1
  434615:	jmp    0x43455b
  43461a:	nop    WORD PTR [rax+rax*1+0x0]
  434620:	lea    rax,[rcx+r8*1]
  434624:	mov    QWORD PTR [r9],rcx
  434627:	mov    DWORD PTR [r9+0x10],edx
  43462b:	mov    QWORD PTR [r9+0x18],rcx
  43462f:	mov    DWORD PTR [r9+0x28],0x0
  434637:	mov    QWORD PTR [r9+0x8],rax
  43463b:	lea    eax,[r8+r8*1]
  43463f:	mov    DWORD PTR [r9+0x3c],r8d
  434643:	mov    DWORD PTR [r9+0x38],0x0
  43464b:	mov    DWORD PTR [r9+0x40],0x0
  434653:	mov    DWORD PTR [r9+0x2c],eax
  434657:	mov    QWORD PTR [r9+0x48],0x0
  43465f:	mov    DWORD PTR [r9+0x50],0x0
  434667:	mov    DWORD PTR [r9+0x54],0x0
  43466f:	mov    DWORD PTR [r9+0x58],0x0
  434677:	ret    
  434678:	nop    DWORD PTR [rax+rax*1+0x0]
  434680:	sub    rsp,0x38
  434684:	lea    r8,[rsp+0x28]
  434689:	call   0x4344a0
  43468e:	add    rsp,0x38
  434692:	ret    
  434693:	nop    DWORD PTR [rax]
  434696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4346a0:	jmp    0x434230
  4346a5:	nop
  4346a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4346b0:	sub    rsp,0x38
  4346b4:	mov    edx,0x25
  4346b9:	lea    r8,[rsp+0x28]
  4346be:	call   0x4344a0
  4346c3:	add    rsp,0x38
  4346c7:	ret    
  4346c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4346d0:	mov    r9,r8
  4346d3:	mov    r8,rdx
  4346d6:	mov    edx,0x25
  4346db:	jmp    0x434230
  4346e0:	sub    rsp,0x38
  4346e4:	lea    rdx,[rsp+0x28]
  4346e9:	lea    r8,[rsp+0x2c]
  4346ee:	call   0x433f30
  4346f3:	xor    edx,edx
  4346f5:	test   eax,eax
  4346f7:	cmovne edx,DWORD PTR [rsp+0x28]
  4346fc:	mov    eax,edx
  4346fe:	add    rsp,0x38
  434702:	ret    
  434703:	nop    DWORD PTR [rax]
  434706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434710:	sub    rsp,0x38
  434714:	lea    rdx,[rsp+0x28]
  434719:	lea    r8,[rsp+0x2c]
  43471e:	call   0x433f30
  434723:	xor    edx,edx
  434725:	test   eax,eax
  434727:	cmovne edx,DWORD PTR [rsp+0x2c]
  43472c:	mov    eax,edx
  43472e:	add    rsp,0x38
  434732:	ret    
  434733:	nop
  434734:	nop
  434735:	nop
  434736:	nop
  434737:	nop
  434738:	nop
  434739:	nop
  43473a:	nop
  43473b:	nop
  43473c:	nop
  43473d:	nop
  43473e:	nop
  43473f:	nop
  434740:	mov    DWORD PTR [rcx],0x67452301
  434746:	mov    DWORD PTR [rcx+0x4],0xefcdab89
  43474d:	mov    DWORD PTR [rcx+0x8],0x98badcfe
  434754:	mov    DWORD PTR [rcx+0xc],0x10325476
  43475b:	mov    DWORD PTR [rcx+0x14],0x0
  434762:	mov    DWORD PTR [rcx+0x10],0x0
  434769:	mov    DWORD PTR [rcx+0x18],0x0
  434770:	ret    
  434771:	nop    DWORD PTR [rax+rax*1+0x0]
  434776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434780:	mov    r10d,DWORD PTR [rcx]
  434783:	mov    r9d,DWORD PTR [rcx+0x4]
  434787:	mov    rax,rdx
  43478a:	mov    r8d,DWORD PTR [rcx+0x8]
  43478e:	mov    edx,DWORD PTR [rcx+0xc]
  434791:	mov    DWORD PTR [rax],r10d
  434794:	mov    DWORD PTR [rax+0x4],r9d
  434798:	mov    DWORD PTR [rax+0x8],r8d
  43479c:	mov    DWORD PTR [rax+0xc],edx
  43479f:	ret    
  4347a0:	push   r15
  4347a2:	push   r14
  4347a4:	push   r13
  4347a6:	push   r12
  4347a8:	push   rbp
  4347a9:	push   rdi
  4347aa:	push   rsi
  4347ab:	push   rbx
  4347ac:	sub    rsp,0x48
  4347b0:	mov    ebx,DWORD PTR [r8+0x4]
  4347b4:	mov    rax,rdx
  4347b7:	mov    rsi,rcx
  4347ba:	mov    QWORD PTR [rsp+0xa0],r8
  4347c2:	and    rax,0xfffffffffffffffc
  4347c6:	add    rax,rcx
  4347c9:	mov    rcx,rdx
  4347cc:	mov    rdi,rax
  4347cf:	mov    QWORD PTR [rsp+0x38],rax
  4347d4:	mov    eax,DWORD PTR [r8]
  4347d7:	shr    rcx,0x20
  4347db:	add    ecx,DWORD PTR [r8+0x14]
  4347df:	mov    DWORD PTR [rsp+0x30],eax
  4347e3:	mov    eax,DWORD PTR [r8+0x8]
  4347e7:	mov    DWORD PTR [rsp+0x28],eax
  4347eb:	mov    eax,DWORD PTR [r8+0xc]
  4347ef:	mov    DWORD PTR [rsp+0x2c],eax
  4347f3:	mov    eax,edx
  4347f5:	add    eax,DWORD PTR [r8+0x10]
  4347f9:	cmp    rax,rdx
  4347fc:	mov    DWORD PTR [r8+0x10],eax
  434800:	setb   al
  434803:	movzx  eax,al
  434806:	add    eax,ecx
  434808:	cmp    rsi,rdi
  43480b:	mov    DWORD PTR [r8+0x14],eax
  43480f:	jae    0x434fdc
  434815:	mov    r14d,DWORD PTR [rsi]
  434818:	mov    ecx,DWORD PTR [rsp+0x2c]
  43481c:	mov    eax,DWORD PTR [rsp+0x30]
  434820:	mov    edi,DWORD PTR [rsp+0x28]
  434824:	mov    r10d,DWORD PTR [rsi+0x8]
  434828:	mov    r11d,DWORD PTR [rsi+0x10]
  43482c:	mov    r12d,DWORD PTR [rsi+0x18]
  434830:	lea    edx,[r14+rax*1-0x28955b88]
  434838:	mov    eax,ecx
  43483a:	xor    eax,edi
  43483c:	lea    r8d,[r10+rdi*1+0x242070db]
  434844:	mov    DWORD PTR [rsp+0x10],r10d
  434849:	and    eax,ebx
  43484b:	mov    r10d,DWORD PTR [rsi+0x20]
  43484f:	mov    DWORD PTR [rsp+0x18],r11d
  434854:	xor    eax,ecx
  434856:	mov    DWORD PTR [rsp+0x1c],r12d
  43485b:	add    eax,edx
  43485d:	mov    edx,DWORD PTR [rsi+0x4]
  434860:	rol    eax,0x7
  434863:	mov    DWORD PTR [rsp+0x20],r10d
  434868:	add    eax,ebx
  43486a:	mov    DWORD PTR [rsp+0xc],edx
  43486e:	lea    ecx,[rdx+rcx*1-0x173848aa]
  434875:	mov    edx,edi
  434877:	xor    edx,ebx
  434879:	mov    r15d,eax
  43487c:	and    edx,eax
  43487e:	xor    r15d,ebx
  434881:	xor    edx,edi
  434883:	mov    edi,DWORD PTR [rsi+0x28]
  434886:	add    edx,ecx
  434888:	mov    ecx,r15d
  43488b:	mov    r15d,DWORD PTR [rsi+0xc]
  43488f:	rol    edx,0xc
  434892:	add    edx,eax
  434894:	and    ecx,edx
  434896:	lea    r9d,[r15+rbx*1-0x3e423112]
  43489e:	mov    DWORD PTR [rsp+0x14],r15d
  4348a3:	xor    ecx,ebx
  4348a5:	mov    r15d,DWORD PTR [rsi+0x24]
  4348a9:	add    ecx,r8d
  4348ac:	mov    r8d,edx
  4348af:	ror    ecx,0xf
  4348b2:	xor    r8d,eax
  4348b5:	add    ecx,edx
  4348b7:	and    r8d,ecx
  4348ba:	mov    ebp,ecx
  4348bc:	xor    r8d,eax
  4348bf:	xor    ebp,edx
  4348c1:	add    r8d,r9d
  4348c4:	lea    r9d,[rax+r11*1-0xa83f051]
  4348cc:	mov    eax,ebp
  4348ce:	ror    r8d,0xa
  4348d2:	mov    ebp,DWORD PTR [rsi+0x14]
  4348d5:	mov    r11d,DWORD PTR [rsi+0x2c]
  4348d9:	add    r8d,ecx
  4348dc:	and    eax,r8d
  4348df:	mov    r13d,r8d
  4348e2:	xor    eax,edx
  4348e4:	xor    r13d,ecx
  4348e7:	mov    DWORD PTR [rsp+0x24],r11d
  4348ec:	add    eax,r9d
  4348ef:	lea    r9d,[rdx+rbp*1+0x4787c62a]
  4348f7:	mov    edx,r13d
  4348fa:	rol    eax,0x7
  4348fd:	add    eax,r8d
  434900:	and    edx,eax
  434902:	mov    r13d,eax
  434905:	xor    edx,ecx
  434907:	add    edx,r9d
  43490a:	xor    r13d,r8d
  43490d:	lea    r9d,[rcx+r12*1-0x57cfb9ed]
  434915:	rol    edx,0xc
  434918:	mov    ecx,r13d
  43491b:	mov    r13d,DWORD PTR [rsi+0x1c]
  43491f:	add    edx,eax
  434921:	mov    r12d,DWORD PTR [rsi+0x38]
  434925:	and    ecx,edx
  434927:	xor    ecx,r8d
  43492a:	add    ecx,r9d
  43492d:	lea    r9d,[r8+r13*1-0x2b96aff]
  434935:	mov    r8d,edx
  434938:	ror    ecx,0xf
  43493b:	xor    r8d,eax
  43493e:	add    ecx,edx
  434940:	and    r8d,ecx
  434943:	xor    r8d,eax
  434946:	add    r8d,r9d
  434949:	lea    r9d,[rax+r10*1+0x698098d8]
  434951:	mov    eax,ecx
  434953:	ror    r8d,0xa
  434957:	xor    eax,edx
  434959:	mov    r10d,DWORD PTR [rsi+0x30]
  43495d:	add    r8d,ecx
  434960:	and    eax,r8d
  434963:	xor    eax,edx
  434965:	add    eax,r9d
  434968:	lea    r9d,[rdx+r15*1-0x74bb0851]
  434970:	mov    edx,r8d
  434973:	rol    eax,0x7
  434976:	xor    edx,ecx
  434978:	add    eax,r8d
  43497b:	and    edx,eax
  43497d:	xor    edx,ecx
  43497f:	add    edx,r9d
  434982:	lea    r9d,[rcx+rdi*1-0xa44f]
  43498a:	mov    ecx,eax
  43498c:	rol    edx,0xc
  43498f:	xor    ecx,r8d
  434992:	add    edx,eax
  434994:	and    ecx,edx
  434996:	xor    ecx,r8d
  434999:	add    ecx,r9d
  43499c:	lea    r9d,[r8+r11*1-0x76a32842]
  4349a4:	mov    r8d,edx
  4349a7:	ror    ecx,0xf
  4349aa:	mov    r11d,DWORD PTR [rsi+0x34]
  4349ae:	add    ecx,edx
  4349b0:	xor    r8d,eax
  4349b3:	add    rsi,0x40
  4349b7:	and    r8d,ecx
  4349ba:	xor    r8d,eax
  4349bd:	mov    DWORD PTR [rsp+0x8],r11d
  4349c2:	add    r8d,r9d
  4349c5:	lea    r9d,[rax+r10*1+0x6b901122]
  4349cd:	mov    eax,ecx
  4349cf:	ror    r8d,0xa
  4349d3:	xor    eax,edx
  4349d5:	add    r8d,ecx
  4349d8:	and    eax,r8d
  4349db:	xor    eax,edx
  4349dd:	add    eax,r9d
  4349e0:	lea    r9d,[rdx+r11*1-0x2678e6d]
  4349e8:	mov    edx,r8d
  4349eb:	rol    eax,0x7
  4349ee:	xor    edx,ecx
  4349f0:	mov    r11d,DWORD PTR [rsi-0x4]
  4349f4:	add    eax,r8d
  4349f7:	and    edx,eax
  4349f9:	xor    edx,ecx
  4349fb:	add    edx,r9d
  4349fe:	lea    r9d,[rcx+r12*1-0x5986bc72]
  434a06:	mov    ecx,eax
  434a08:	rol    edx,0xc
  434a0b:	xor    ecx,r8d
  434a0e:	add    edx,eax
  434a10:	and    ecx,edx
  434a12:	xor    ecx,r8d
  434a15:	add    ecx,r9d
  434a18:	lea    r9d,[r8+r11*1+0x49b40821]
  434a20:	mov    r8d,edx
  434a23:	ror    ecx,0xf
  434a26:	xor    r8d,eax
  434a29:	add    ecx,edx
  434a2b:	and    r8d,ecx
  434a2e:	xor    r8d,eax
  434a31:	add    r8d,r9d
  434a34:	mov    r9d,DWORD PTR [rsp+0xc]
  434a39:	ror    r8d,0xa
  434a3d:	add    r8d,ecx
  434a40:	lea    r9d,[r9+rax*1-0x9e1da9e]
  434a48:	mov    eax,r8d
  434a4b:	xor    eax,ecx
  434a4d:	and    eax,edx
  434a4f:	xor    eax,ecx
  434a51:	add    eax,r9d
  434a54:	mov    r9d,DWORD PTR [rsp+0x1c]
  434a59:	rol    eax,0x5
  434a5c:	add    eax,r8d
  434a5f:	lea    r9d,[r9+rdx*1-0x3fbf4cc0]
  434a67:	mov    edx,eax
  434a69:	xor    edx,r8d
  434a6c:	and    edx,ecx
  434a6e:	xor    edx,r8d
  434a71:	add    edx,r9d
  434a74:	mov    r9d,DWORD PTR [rsp+0x24]
  434a79:	rol    edx,0x9
  434a7c:	add    edx,eax
  434a7e:	lea    r9d,[r9+rcx*1+0x265e5a51]
  434a86:	mov    ecx,edx
  434a88:	xor    ecx,eax
  434a8a:	and    ecx,r8d
  434a8d:	xor    ecx,eax
  434a8f:	add    ecx,r9d
  434a92:	lea    r9d,[r14+r8*1-0x16493856]
  434a9a:	rol    ecx,0xe
  434a9d:	add    ecx,edx
  434a9f:	mov    r8d,ecx
  434aa2:	xor    r8d,edx
  434aa5:	and    r8d,eax
  434aa8:	xor    r8d,edx
  434aab:	add    r8d,r9d
  434aae:	lea    r9d,[rbp+rax*1-0x29d0efa3]
  434ab6:	ror    r8d,0xc
  434aba:	add    r8d,ecx
  434abd:	mov    eax,r8d
  434ac0:	xor    eax,ecx
  434ac2:	and    eax,edx
  434ac4:	xor    eax,ecx
  434ac6:	add    eax,r9d
  434ac9:	lea    r9d,[rdi+rdx*1+0x2441453]
  434ad1:	rol    eax,0x5
  434ad4:	add    eax,r8d
  434ad7:	mov    edx,eax
  434ad9:	xor    edx,r8d
  434adc:	and    edx,ecx
  434ade:	xor    edx,r8d
  434ae1:	add    edx,r9d
  434ae4:	lea    r9d,[r11+rcx*1-0x275e197f]
  434aec:	rol    edx,0x9
  434aef:	add    edx,eax
  434af1:	mov    ecx,edx
  434af3:	xor    ecx,eax
  434af5:	and    ecx,r8d
  434af8:	xor    ecx,eax
  434afa:	add    ecx,r9d
  434afd:	mov    r9d,DWORD PTR [rsp+0x18]
  434b02:	rol    ecx,0xe
  434b05:	add    ecx,edx
  434b07:	lea    r9d,[r9+r8*1-0x182c0438]
  434b0f:	mov    r8d,ecx
  434b12:	xor    r8d,edx
  434b15:	and    r8d,eax
  434b18:	xor    r8d,edx
  434b1b:	add    r8d,r9d
  434b1e:	lea    r9d,[r15+rax*1+0x21e1cde6]
  434b26:	ror    r8d,0xc
  434b2a:	add    r8d,ecx
  434b2d:	mov    eax,r8d
  434b30:	xor    eax,ecx
  434b32:	and    eax,edx
  434b34:	xor    eax,ecx
  434b36:	add    eax,r9d
  434b39:	lea    r9d,[r12+rdx*1-0x3cc8f82a]
  434b41:	rol    eax,0x5
  434b44:	add    eax,r8d
  434b47:	mov    edx,eax
  434b49:	xor    edx,r8d
  434b4c:	and    edx,ecx
  434b4e:	xor    edx,r8d
  434b51:	add    edx,r9d
  434b54:	mov    r9d,DWORD PTR [rsp+0x14]
  434b59:	rol    edx,0x9
  434b5c:	add    edx,eax
  434b5e:	lea    r9d,[r9+rcx*1-0xb2af279]
  434b66:	mov    ecx,edx
  434b68:	xor    ecx,eax
  434b6a:	and    ecx,r8d
  434b6d:	xor    ecx,eax
  434b6f:	add    ecx,r9d
  434b72:	mov    r9d,DWORD PTR [rsp+0x20]
  434b77:	rol    ecx,0xe
  434b7a:	add    ecx,edx
  434b7c:	lea    r8d,[r9+r8*1+0x455a14ed]
  434b84:	mov    r9d,ecx
  434b87:	xor    r9d,edx
  434b8a:	and    r9d,eax
  434b8d:	xor    r9d,edx
  434b90:	add    r9d,r8d
  434b93:	mov    r8d,DWORD PTR [rsp+0x8]
  434b98:	ror    r9d,0xc
  434b9c:	add    r9d,ecx
  434b9f:	lea    r8d,[r8+rax*1-0x561c16fb]
  434ba7:	mov    eax,r9d
  434baa:	xor    eax,ecx
  434bac:	and    eax,edx
  434bae:	xor    eax,ecx
  434bb0:	add    eax,r8d
  434bb3:	mov    r8d,DWORD PTR [rsp+0x10]
  434bb8:	rol    eax,0x5
  434bbb:	add    eax,r9d
  434bbe:	lea    r8d,[r8+rdx*1-0x3105c08]
  434bc6:	mov    edx,eax
  434bc8:	xor    edx,r9d
  434bcb:	and    edx,ecx
  434bcd:	lea    ecx,[r13+rcx*1+0x676f02d9]
  434bd5:	xor    edx,r9d
  434bd8:	add    edx,r8d
  434bdb:	rol    edx,0x9
  434bde:	add    edx,eax
  434be0:	mov    r8d,edx
  434be3:	xor    r8d,eax
  434be6:	and    r8d,r9d
  434be9:	lea    r9d,[r10+r9*1-0x72d5b376]
  434bf1:	xor    r8d,eax
  434bf4:	add    r8d,ecx
  434bf7:	mov    DWORD PTR [rsp+0x34],r9d
  434bfc:	rol    r8d,0xe
  434c00:	add    r8d,edx
  434c03:	mov    ecx,r8d
  434c06:	xor    ecx,edx
  434c08:	mov    r9d,ecx
  434c0b:	and    r9d,eax
  434c0e:	lea    eax,[rbp+rax*1-0x5c6be]
  434c15:	xor    r9d,edx
  434c18:	add    r9d,DWORD PTR [rsp+0x34]
  434c1d:	ror    r9d,0xc
  434c21:	add    r9d,r8d
  434c24:	xor    ecx,r9d
  434c27:	add    ecx,eax
  434c29:	mov    eax,DWORD PTR [rsp+0x20]
  434c2d:	rol    ecx,0x4
  434c30:	add    ecx,r9d
  434c33:	lea    eax,[rax+rdx*1-0x788e097f]
  434c3a:	mov    edx,r9d
  434c3d:	xor    edx,r8d
  434c40:	xor    edx,ecx
  434c42:	add    edx,eax
  434c44:	mov    eax,DWORD PTR [rsp+0x24]
  434c48:	rol    edx,0xb
  434c4b:	add    edx,ecx
  434c4d:	lea    eax,[rax+r8*1+0x6d9d6122]
  434c55:	mov    r8d,ecx
  434c58:	xor    r8d,r9d
  434c5b:	lea    r9d,[r12+r9*1-0x21ac7f4]
  434c63:	xor    r8d,edx
  434c66:	add    r8d,eax
  434c69:	mov    eax,edx
  434c6b:	rol    r8d,0x10
  434c6f:	xor    eax,ecx
  434c71:	add    r8d,edx
  434c74:	xor    eax,r8d
  434c77:	add    eax,r9d
  434c7a:	mov    r9d,DWORD PTR [rsp+0xc]
  434c7f:	ror    eax,0x9
  434c82:	add    eax,r8d
  434c85:	lea    r9d,[r9+rcx*1-0x5b4115bc]
  434c8d:	mov    ecx,r8d
  434c90:	xor    ecx,edx
  434c92:	xor    ecx,eax
  434c94:	add    ecx,r9d
  434c97:	mov    r9d,DWORD PTR [rsp+0x18]
  434c9c:	rol    ecx,0x4
  434c9f:	add    ecx,eax
  434ca1:	lea    edx,[r9+rdx*1+0x4bdecfa9]
  434ca9:	mov    r9d,eax
  434cac:	xor    r9d,r8d
  434caf:	lea    r8d,[r13+r8*1-0x944b4a0]
  434cb7:	xor    r9d,ecx
  434cba:	add    r9d,edx
  434cbd:	mov    edx,ecx
  434cbf:	rol    r9d,0xb
  434cc3:	xor    edx,eax
  434cc5:	lea    eax,[rdi+rax*1-0x41404390]
  434ccc:	add    r9d,ecx
  434ccf:	xor    edx,r9d
  434cd2:	add    edx,r8d
  434cd5:	mov    r8d,r9d
  434cd8:	rol    edx,0x10
  434cdb:	xor    r8d,ecx
  434cde:	add    edx,r9d
  434ce1:	xor    r8d,edx
  434ce4:	add    r8d,eax
  434ce7:	mov    eax,DWORD PTR [rsp+0x8]
  434ceb:	ror    r8d,0x9
  434cef:	add    r8d,edx
  434cf2:	lea    eax,[rax+rcx*1+0x289b7ec6]
  434cf9:	mov    ecx,edx
  434cfb:	xor    ecx,r9d
  434cfe:	lea    r9d,[r14+r9*1-0x155ed806]
  434d06:	xor    ecx,r8d
  434d09:	add    ecx,eax
  434d0b:	mov    eax,r8d
  434d0e:	rol    ecx,0x4
  434d11:	xor    eax,edx
  434d13:	add    ecx,r8d
  434d16:	xor    eax,ecx
  434d18:	add    eax,r9d
  434d1b:	mov    r9d,DWORD PTR [rsp+0x14]
  434d20:	rol    eax,0xb
  434d23:	add    eax,ecx
  434d25:	lea    edx,[r9+rdx*1-0x2b10cf7b]
  434d2d:	mov    r9d,ecx
  434d30:	xor    r9d,r8d
  434d33:	xor    r9d,eax
  434d36:	add    r9d,edx
  434d39:	mov    edx,DWORD PTR [rsp+0x1c]
  434d3d:	rol    r9d,0x10
  434d41:	add    r9d,eax
  434d44:	lea    edx,[rdx+r8*1+0x4881d05]
  434d4c:	mov    r8d,eax
  434d4f:	xor    r8d,ecx
  434d52:	lea    ecx,[r15+rcx*1-0x262b2fc7]
  434d5a:	xor    r8d,r9d
  434d5d:	add    r8d,edx
  434d60:	mov    edx,r9d
  434d63:	ror    r8d,0x9
  434d67:	xor    edx,eax
  434d69:	lea    eax,[r10+rax*1-0x1924661b]
  434d71:	add    r8d,r9d
  434d74:	xor    edx,r8d
  434d77:	add    edx,ecx
  434d79:	mov    ecx,r8d
  434d7c:	rol    edx,0x4
  434d7f:	xor    ecx,r9d
  434d82:	add    edx,r8d
  434d85:	xor    ecx,edx
  434d87:	add    ecx,eax
  434d89:	lea    eax,[r11+r9*1+0x1fa27cf8]
  434d91:	mov    r9d,edx
  434d94:	rol    ecx,0xb
  434d97:	xor    r9d,r8d
  434d9a:	add    ecx,edx
  434d9c:	xor    r9d,ecx
  434d9f:	add    r9d,eax
  434da2:	mov    eax,DWORD PTR [rsp+0x10]
  434da6:	rol    r9d,0x10
  434daa:	add    r9d,ecx
  434dad:	lea    r8d,[rax+r8*1-0x3b53a99b]
  434db5:	mov    eax,ecx
  434db7:	xor    eax,edx
  434db9:	xor    eax,r9d
  434dbc:	add    eax,r8d
  434dbf:	lea    r8d,[r14+rdx*1-0xbd6ddbc]
  434dc7:	mov    edx,ecx
  434dc9:	ror    eax,0x9
  434dcc:	not    edx
  434dce:	mov    r14d,DWORD PTR [rsp+0x14]
  434dd3:	add    eax,r9d
  434dd6:	or     edx,eax
  434dd8:	xor    edx,r9d
  434ddb:	add    edx,r8d
  434dde:	lea    r8d,[r13+rcx*1+0x432aff97]
  434de6:	mov    r13d,r9d
  434de9:	rol    edx,0x6
  434dec:	not    r13d
  434def:	lea    r9d,[r12+r9*1-0x546bdc59]
  434df7:	add    edx,eax
  434df9:	mov    ecx,r13d
  434dfc:	mov    r13d,DWORD PTR [rsp+0x20]
  434e01:	or     ecx,edx
  434e03:	mov    r12d,edx
  434e06:	xor    ecx,eax
  434e08:	not    r12d
  434e0b:	add    ecx,r8d
  434e0e:	mov    r8d,eax
  434e11:	rol    ecx,0xa
  434e14:	not    r8d
  434e17:	add    ecx,edx
  434e19:	or     r8d,ecx
  434e1c:	xor    r8d,edx
  434e1f:	add    r8d,r9d
  434e22:	lea    r9d,[rbp+rax*1-0x36c5fc7]
  434e2a:	mov    eax,r12d
  434e2d:	rol    r8d,0xf
  434e31:	mov    r12d,ecx
  434e34:	mov    ebp,DWORD PTR [rsp+0x1c]
  434e38:	add    r8d,ecx
  434e3b:	not    r12d
  434e3e:	or     eax,r8d
  434e41:	xor    eax,ecx
  434e43:	add    eax,r9d
  434e46:	lea    r9d,[r10+rdx*1+0x655b59c3]
  434e4e:	mov    edx,r12d
  434e51:	ror    eax,0xb
  434e54:	mov    r12d,r8d
  434e57:	add    eax,r8d
  434e5a:	not    r12d
  434e5d:	or     edx,eax
  434e5f:	xor    edx,r8d
  434e62:	add    edx,r9d
  434e65:	lea    r9d,[r14+rcx*1-0x70f3336e]
  434e6d:	mov    ecx,r12d
  434e70:	rol    edx,0x6
  434e73:	mov    r14d,DWORD PTR [rsp+0x18]
  434e78:	add    edx,eax
  434e7a:	or     ecx,edx
  434e7c:	mov    r12d,edx
  434e7f:	xor    ecx,eax
  434e81:	not    r12d
  434e84:	add    ecx,r9d
  434e87:	lea    r9d,[rdi+r8*1-0x100b83]
  434e8f:	mov    r8d,eax
  434e92:	rol    ecx,0xa
  434e95:	not    r8d
  434e98:	mov    edi,DWORD PTR [rsp+0x8]
  434e9c:	add    ecx,edx
  434e9e:	or     r8d,ecx
  434ea1:	xor    r8d,edx
  434ea4:	add    r8d,r9d
  434ea7:	mov    r9d,DWORD PTR [rsp+0xc]
  434eac:	rol    r8d,0xf
  434eb0:	add    r8d,ecx
  434eb3:	lea    r9d,[r9+rax*1-0x7a7ba22f]
  434ebb:	mov    eax,r12d
  434ebe:	or     eax,r8d
  434ec1:	xor    eax,ecx
  434ec3:	add    eax,r9d
  434ec6:	lea    r9d,[r13+rdx*1+0x6fa87e4f]
  434ece:	mov    r13d,ecx
  434ed1:	ror    eax,0xb
  434ed4:	not    r13d
  434ed7:	add    eax,r8d
  434eda:	mov    edx,r13d
  434edd:	mov    r13d,r8d
  434ee0:	or     edx,eax
  434ee2:	not    r13d
  434ee5:	xor    edx,r8d
  434ee8:	add    edx,r9d
  434eeb:	lea    r9d,[r11+rcx*1-0x1d31920]
  434ef3:	mov    ecx,r13d
  434ef6:	rol    edx,0x6
  434ef9:	mov    r11d,DWORD PTR [rsp+0x10]
  434efe:	add    edx,eax
  434f00:	or     ecx,edx
  434f02:	mov    r10d,edx
  434f05:	xor    ecx,eax
  434f07:	not    r10d
  434f0a:	add    ecx,r9d
  434f0d:	lea    r9d,[rbp+r8*1-0x5cfebcec]
  434f15:	mov    r8d,eax
  434f18:	rol    ecx,0xa
  434f1b:	not    r8d
  434f1e:	lea    eax,[rdi+rax*1+0x4e0811a1]
  434f25:	add    ecx,edx
  434f27:	or     r8d,ecx
  434f2a:	xor    r8d,edx
  434f2d:	lea    edx,[r14+rdx*1-0x8ac817e]
  434f35:	mov    r14d,DWORD PTR [rsp+0x24]
  434f3a:	add    r8d,r9d
  434f3d:	mov    r9d,r10d
  434f40:	mov    r10d,ecx
  434f43:	rol    r8d,0xf
  434f47:	not    r10d
  434f4a:	add    r8d,ecx
  434f4d:	or     r9d,r8d
  434f50:	xor    r9d,ecx
  434f53:	lea    ecx,[r14+rcx*1-0x42c50dcb]
  434f5b:	add    r9d,eax
  434f5e:	mov    eax,r10d
  434f61:	ror    r9d,0xb
  434f65:	add    r9d,r8d
  434f68:	or     eax,r9d
  434f6b:	xor    eax,r8d
  434f6e:	add    eax,edx
  434f70:	mov    edx,r8d
  434f73:	lea    r8d,[r11+r8*1+0x2ad7d2bb]
  434f7b:	rol    eax,0x6
  434f7e:	not    edx
  434f80:	mov    r11d,r9d
  434f83:	add    eax,r9d
  434f86:	not    r11d
  434f89:	add    DWORD PTR [rsp+0x30],eax
  434f8d:	or     edx,eax
  434f8f:	xor    edx,r9d
  434f92:	lea    r9d,[r15+r9*1-0x14792c6f]
  434f9a:	add    edx,ecx
  434f9c:	mov    ecx,r11d
  434f9f:	rol    edx,0xa
  434fa2:	add    edx,eax
  434fa4:	add    DWORD PTR [rsp+0x2c],edx
  434fa8:	or     ecx,edx
  434faa:	xor    ecx,eax
  434fac:	add    ecx,r8d
  434faf:	mov    r8d,eax
  434fb2:	rol    ecx,0xf
  434fb5:	not    r8d
  434fb8:	add    ecx,edx
  434fba:	add    DWORD PTR [rsp+0x28],ecx
  434fbe:	or     r8d,ecx
  434fc1:	xor    r8d,edx
  434fc4:	add    r8d,r9d
  434fc7:	ror    r8d,0xb
  434fcb:	lea    eax,[rcx+r8*1]
  434fcf:	add    ebx,eax
  434fd1:	cmp    QWORD PTR [rsp+0x38],rsi
  434fd6:	ja     0x434815
  434fdc:	mov    rax,QWORD PTR [rsp+0xa0]
  434fe4:	mov    esi,DWORD PTR [rsp+0x30]
  434fe8:	mov    DWORD PTR [rax+0x4],ebx
  434feb:	mov    ebx,DWORD PTR [rsp+0x28]
  434fef:	mov    DWORD PTR [rax],esi
  434ff1:	mov    DWORD PTR [rax+0x8],ebx
  434ff4:	mov    ebx,DWORD PTR [rsp+0x2c]
  434ff8:	mov    DWORD PTR [rax+0xc],ebx
  434ffb:	add    rsp,0x48
  434fff:	pop    rbx
  435000:	pop    rsi
  435001:	pop    rdi
  435002:	pop    rbp
  435003:	pop    r12
  435005:	pop    r13
  435007:	pop    r14
  435009:	pop    r15
  43500b:	ret    
  43500c:	nop    DWORD PTR [rax+0x0]
  435010:	push   rbp
  435011:	push   rdi
  435012:	push   rsi
  435013:	push   rbx
  435014:	sub    rsp,0x28
  435018:	mov    rbx,rcx
  43501b:	mov    ecx,DWORD PTR [rcx+0x18]
  43501e:	mov    rdi,rdx
  435021:	mov    eax,DWORD PTR [rbx+0x10]
  435024:	add    eax,ecx
  435026:	cmp    ecx,eax
  435028:	mov    DWORD PTR [rbx+0x10],eax
  43502b:	jbe    0x435031
  43502d:	add    DWORD PTR [rbx+0x14],0x1
  435031:	cmp    ecx,0x37
  435034:	ja     0x4350b0
  435036:	mov    ebp,0x38
  43503b:	sub    ebp,ecx
  43503d:	mov    esi,ecx
  43503f:	lea    rdx,[rip+0x1b2ba]        # 0x450300
  435046:	mov    r8,rbp
  435049:	lea    rcx,[rbx+rsi*1+0x1c]
  43504e:	call   0x43f0a8
  435053:	mov    eax,DWORD PTR [rbx+0x10]
  435056:	lea    rcx,[rbp+rsi*1+0x0]
  43505b:	mov    r8,rbx
  43505e:	shl    eax,0x3
  435061:	mov    DWORD PTR [rbx+rcx*1+0x1c],eax
  435065:	mov    edx,DWORD PTR [rbx+0x10]
  435068:	mov    eax,DWORD PTR [rbx+0x14]
  43506b:	shr    edx,0x1d
  43506e:	shl    eax,0x3
  435071:	or     eax,edx
  435073:	lea    rdx,[rcx+0x8]
  435077:	mov    DWORD PTR [rbx+rcx*1+0x20],eax
  43507b:	lea    rcx,[rbx+0x1c]
  43507f:	call   0x4347a0
  435084:	mov    eax,DWORD PTR [rbx+0xc]
  435087:	mov    r8d,DWORD PTR [rbx]
  43508a:	mov    ecx,DWORD PTR [rbx+0x4]
  43508d:	mov    edx,DWORD PTR [rbx+0x8]
  435090:	mov    DWORD PTR [rdi+0xc],eax
  435093:	mov    rax,rdi
  435096:	mov    DWORD PTR [rdi],r8d
  435099:	mov    DWORD PTR [rdi+0x4],ecx
  43509c:	mov    DWORD PTR [rdi+0x8],edx
  43509f:	add    rsp,0x28
  4350a3:	pop    rbx
  4350a4:	pop    rsi
  4350a5:	pop    rdi
  4350a6:	pop    rbp
  4350a7:	ret    
  4350a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4350b0:	mov    ebp,0x78
  4350b5:	sub    ebp,ecx
  4350b7:	jmp    0x43503d
  4350b9:	nop    DWORD PTR [rax+0x0]
  4350c0:	push   r15
  4350c2:	push   r14
  4350c4:	push   r13
  4350c6:	push   r12
  4350c8:	push   rbp
  4350c9:	push   rdi
  4350ca:	push   rsi
  4350cb:	push   rbx
  4350cc:	sub    rsp,0x28
  4350d0:	mov    edi,DWORD PTR [r8+0x18]
  4350d4:	mov    r13,rcx
  4350d7:	mov    r12,rdx
  4350da:	mov    rbp,r8
  4350dd:	test   edi,edi
  4350df:	jne    0x4351f0
  4350e5:	cmp    r12,0x40
  4350e9:	jbe    0x4351cc
  4350ef:	test   r13b,0x3
  4350f3:	je     0x4351b0
  4350f9:	lea    rsi,[rbp+0x1c]
  4350fd:	mov    rdi,r12
  435100:	mov    rbx,r13
  435103:	mov    rax,QWORD PTR [rbx]
  435106:	mov    r8,rbp
  435109:	mov    edx,0x40
  43510e:	mov    rcx,rsi
  435111:	sub    rdi,0x40
  435115:	add    rbx,0x40
  435119:	mov    QWORD PTR [rsi],rax
  43511c:	mov    rax,QWORD PTR [rbx-0x38]
  435120:	mov    QWORD PTR [rsi+0x8],rax
  435124:	mov    rax,QWORD PTR [rbx-0x30]
  435128:	mov    QWORD PTR [rsi+0x10],rax
  43512c:	mov    rax,QWORD PTR [rbx-0x28]
  435130:	mov    QWORD PTR [rsi+0x18],rax
  435134:	mov    rax,QWORD PTR [rbx-0x20]
  435138:	mov    QWORD PTR [rsi+0x20],rax
  43513c:	mov    rax,QWORD PTR [rbx-0x18]
  435140:	mov    QWORD PTR [rsi+0x28],rax
  435144:	mov    rax,QWORD PTR [rbx-0x10]
  435148:	mov    QWORD PTR [rsi+0x30],rax
  43514c:	mov    rax,QWORD PTR [rbx-0x8]
  435150:	mov    QWORD PTR [rsi+0x38],rax
  435154:	call   0x4347a0
  435159:	cmp    rdi,0x40
  43515d:	ja     0x435103
  43515f:	lea    rax,[r12-0x41]
  435164:	shr    rax,0x6
  435168:	lea    rdx,[rax+0x1]
  43516c:	neg    rax
  43516f:	shl    rax,0x6
  435173:	shl    rdx,0x6
  435177:	lea    r12,[r12+rax*1-0x40]
  43517c:	add    r13,rdx
  43517f:	cmp    r12d,0x8
  435183:	mov    eax,r12d
  435186:	jae    0x435230
  43518c:	test   r12b,0x4
  435190:	jne    0x43532f
  435196:	test   eax,eax
  435198:	je     0x4351a9
  43519a:	movzx  edx,BYTE PTR [r13+0x0]
  43519f:	test   al,0x2
  4351a1:	mov    BYTE PTR [rsi],dl
  4351a3:	jne    0x435343
  4351a9:	mov    DWORD PTR [rbp+0x18],r12d
  4351ad:	jmp    0x4351d5
  4351af:	nop
  4351b0:	mov    rbx,r12
  4351b3:	mov    rcx,r13
  4351b6:	mov    r8,rbp
  4351b9:	and    rbx,0xffffffffffffffc0
  4351bd:	and    r12d,0x3f
  4351c1:	mov    rdx,rbx
  4351c4:	add    r13,rbx
  4351c7:	call   0x4347a0
  4351cc:	test   r12,r12
  4351cf:	jne    0x435326
  4351d5:	add    rsp,0x28
  4351d9:	pop    rbx
  4351da:	pop    rsi
  4351db:	pop    rdi
  4351dc:	pop    rbp
  4351dd:	pop    r12
  4351df:	pop    r13
  4351e1:	pop    r14
  4351e3:	pop    r15
  4351e5:	ret    
  4351e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4351f0:	mov    esi,edi
  4351f2:	mov    ebx,0x80
  4351f7:	sub    rbx,rsi
  4351fa:	lea    rcx,[r8+rsi*1+0x1c]
  4351ff:	cmp    rbx,rdx
  435202:	cmova  rbx,rdx
  435206:	mov    rdx,r13
  435209:	mov    r8,rbx
  43520c:	add    rsi,rbx
  43520f:	call   0x43f0a8
  435214:	add    DWORD PTR [rbp+0x18],ebx
  435217:	cmp    rsi,0x40
  43521b:	ja     0x435280
  43521d:	add    r13,rbx
  435220:	sub    r12,rbx
  435223:	jmp    0x4350e5
  435228:	nop    DWORD PTR [rax+rax*1+0x0]
  435230:	mov    rax,QWORD PTR [r13+0x0]
  435234:	mov    QWORD PTR [rsi],rax
  435237:	mov    eax,r12d
  43523a:	mov    rdx,QWORD PTR [r13+rax*1-0x8]
  43523f:	mov    QWORD PTR [rsi+rax*1-0x8],rdx
  435244:	lea    rdx,[rsi+0x8]
  435248:	and    rdx,0xfffffffffffffff8
  43524c:	sub    rsi,rdx
  43524f:	lea    eax,[r12+rsi*1]
  435253:	sub    r13,rsi
  435256:	and    eax,0xfffffff8
  435259:	cmp    eax,0x8
  43525c:	jb     0x4351a9
  435262:	and    eax,0xfffffff8
  435265:	mov    esi,eax
  435267:	xor    eax,eax
  435269:	mov    ecx,eax
  43526b:	add    eax,0x8
  43526e:	mov    r8,QWORD PTR [r13+rcx*1+0x0]
  435273:	cmp    eax,esi
  435275:	mov    QWORD PTR [rdx+rcx*1],r8
  435279:	jb     0x435269
  43527b:	jmp    0x4351a9
  435280:	mov    r15,rsi
  435283:	lea    r14,[rbp+0x1c]
  435287:	mov    r8,rbp
  43528a:	and    r15,0xffffffffffffffc0
  43528e:	and    esi,0x3f
  435291:	mov    rdx,r15
  435294:	mov    rcx,r14
  435297:	call   0x4347a0
  43529c:	lea    rdx,[rbp+r15*1+0x10]
  4352a1:	cmp    esi,0x8
  4352a4:	lea    rax,[rdx+0xc]
  4352a8:	jae    0x4352e0
  4352aa:	test   sil,0x4
  4352ae:	jne    0x435353
  4352b4:	test   esi,esi
  4352b6:	je     0x4352c9
  4352b8:	movzx  edx,BYTE PTR [rdx+0xc]
  4352bc:	test   sil,0x2
  4352c0:	mov    BYTE PTR [rbp+0x1c],dl
  4352c3:	jne    0x435369
  4352c9:	lea    eax,[rdi+rbx*1]
  4352cc:	and    eax,0x3f
  4352cf:	mov    DWORD PTR [rbp+0x18],eax
  4352d2:	jmp    0x43521d
  4352d7:	nop    WORD PTR [rax+rax*1+0x0]
  4352e0:	mov    rdx,QWORD PTR [rdx+0xc]
  4352e4:	mov    QWORD PTR [rbp+0x1c],rdx
  4352e8:	mov    edx,esi
  4352ea:	mov    rcx,QWORD PTR [rax+rdx*1-0x8]
  4352ef:	mov    QWORD PTR [r14+rdx*1-0x8],rcx
  4352f4:	lea    rdx,[rbp+0x24]
  4352f8:	and    rdx,0xfffffffffffffff8
  4352fc:	sub    r14,rdx
  4352ff:	add    esi,r14d
  435302:	sub    rax,r14
  435305:	and    esi,0xfffffff8
  435308:	cmp    esi,0x8
  43530b:	jb     0x4352c9
  43530d:	and    esi,0xfffffff8
  435310:	xor    ecx,ecx
  435312:	mov    r8d,ecx
  435315:	add    ecx,0x8
  435318:	mov    r9,QWORD PTR [rax+r8*1]
  43531c:	cmp    ecx,esi
  43531e:	mov    QWORD PTR [rdx+r8*1],r9
  435322:	jb     0x435312
  435324:	jmp    0x4352c9
  435326:	lea    rsi,[rbp+0x1c]
  43532a:	jmp    0x43517f
  43532f:	mov    edx,DWORD PTR [r13+0x0]
  435333:	mov    DWORD PTR [rsi],edx
  435335:	mov    edx,DWORD PTR [r13+rax*1-0x4]
  43533a:	mov    DWORD PTR [rsi+rax*1-0x4],edx
  43533e:	jmp    0x4351a9
  435343:	movzx  edx,WORD PTR [r13+rax*1-0x2]
  435349:	mov    WORD PTR [rsi+rax*1-0x2],dx
  43534e:	jmp    0x4351a9
  435353:	mov    edx,DWORD PTR [rdx+0xc]
  435356:	mov    esi,esi
  435358:	mov    DWORD PTR [rbp+0x1c],edx
  43535b:	mov    eax,DWORD PTR [rax+rsi*1-0x4]
  43535f:	mov    DWORD PTR [r14+rsi*1-0x4],eax
  435364:	jmp    0x4352c9
  435369:	mov    esi,esi
  43536b:	movzx  eax,WORD PTR [rax+rsi*1-0x2]
  435370:	mov    WORD PTR [r14+rsi*1-0x2],ax
  435376:	jmp    0x4352c9
  43537b:	nop    DWORD PTR [rax+rax*1+0x0]
  435380:	push   rsi
  435381:	push   rbx
  435382:	sub    rsp,0xc8
  435389:	lea    rbx,[rsp+0x20]
  43538e:	mov    rsi,r8
  435391:	mov    DWORD PTR [rsp+0x20],0x67452301
  435399:	mov    DWORD PTR [rsp+0x24],0xefcdab89
  4353a1:	mov    DWORD PTR [rsp+0x28],0x98badcfe
  4353a9:	mov    r8,rbx
  4353ac:	mov    DWORD PTR [rsp+0x2c],0x10325476
  4353b4:	mov    DWORD PTR [rsp+0x34],0x0
  4353bc:	mov    DWORD PTR [rsp+0x30],0x0
  4353c4:	mov    DWORD PTR [rsp+0x38],0x0
  4353cc:	call   0x4350c0
  4353d1:	mov    rdx,rsi
  4353d4:	mov    rcx,rbx
  4353d7:	call   0x435010
  4353dc:	add    rsp,0xc8
  4353e3:	pop    rbx
  4353e4:	pop    rsi
  4353e5:	ret    
  4353e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4353f0:	push   r13
  4353f2:	push   r12
  4353f4:	mov    eax,0x1118
  4353f9:	push   rbp
  4353fa:	push   rdi
  4353fb:	push   rsi
  4353fc:	push   rbx
  4353fd:	call   0x439cf0
  435402:	sub    rsp,rax
  435405:	mov    ebp,0x1000
  43540a:	lea    rsi,[rsp+0xc0]
  435412:	lea    r12,[rsp+0x20]
  435417:	mov    rdi,rcx
  43541a:	mov    r13,rdx
  43541d:	mov    DWORD PTR [rsp+0x20],0x67452301
  435425:	mov    DWORD PTR [rsp+0x24],0xefcdab89
  43542d:	mov    DWORD PTR [rsp+0x28],0x98badcfe
  435435:	mov    DWORD PTR [rsp+0x2c],0x10325476
  43543d:	mov    DWORD PTR [rsp+0x34],0x0
  435445:	mov    DWORD PTR [rsp+0x30],0x0
  43544d:	mov    DWORD PTR [rsp+0x38],0x0
  435455:	xor    ebx,ebx
  435457:	jmp    0x435465
  435459:	nop    DWORD PTR [rax+0x0]
  435460:	test   rax,rax
  435463:	je     0x435488
  435465:	lea    rcx,[rsi+rbx*1]
  435469:	mov    r8,rbp
  43546c:	mov    r9,rdi
  43546f:	sub    r8,rbx
  435472:	mov    edx,0x1
  435477:	call   0x43f108
  43547c:	add    rbx,rax
  43547f:	cmp    rbx,0xfff
  435486:	jbe    0x435460
  435488:	test   rax,rax
  43548b:	je     0x4354a0
  43548d:	mov    r8,r12
  435490:	mov    edx,0x1000
  435495:	mov    rcx,rsi
  435498:	call   0x4347a0
  43549d:	jmp    0x435455
  43549f:	nop
  4354a0:	mov    rcx,rdi
  4354a3:	call   0x43f140
  4354a8:	test   eax,eax
  4354aa:	mov    edi,eax
  4354ac:	jne    0x4354d5
  4354ae:	test   rbx,rbx
  4354b1:	lea    rbp,[rsp+0x20]
  4354b6:	jne    0x4354dc
  4354b8:	mov    rdx,r13
  4354bb:	mov    rcx,rbp
  4354be:	call   0x435010
  4354c3:	mov    eax,edi
  4354c5:	add    rsp,0x1118
  4354cc:	pop    rbx
  4354cd:	pop    rsi
  4354ce:	pop    rdi
  4354cf:	pop    rbp
  4354d0:	pop    r12
  4354d2:	pop    r13
  4354d4:	ret    
  4354d5:	mov    edi,0x1
  4354da:	jmp    0x4354c3
  4354dc:	mov    r8,rbp
  4354df:	mov    rdx,rbx
  4354e2:	mov    rcx,rsi
  4354e5:	call   0x4350c0
  4354ea:	jmp    0x4354b8
  4354ec:	nop
  4354ed:	nop
  4354ee:	nop
  4354ef:	nop
  4354f0:	push   rdi
  4354f1:	push   rsi
  4354f2:	push   rbx
  4354f3:	sub    rsp,0x20
  4354f7:	test   rcx,rcx
  4354fa:	je     0x435587
  435500:	cmp    QWORD PTR [rcx],0x0
  435504:	je     0x435580
  435506:	lea    rax,[rcx+0x8]
  43550a:	xor    edx,edx
  43550c:	nop    DWORD PTR [rax+0x0]
  435510:	add    rax,0x8
  435514:	add    edx,0x1
  435517:	cmp    QWORD PTR [rax-0x8],0x0
  43551c:	jne    0x435510
  43551e:	add    edx,0x1
  435521:	movsxd rdx,edx
  435524:	shl    rdx,0x3
  435528:	mov    rsi,rcx
  43552b:	mov    rcx,rdx
  43552e:	xor    ebx,ebx
  435530:	call   0x4385d0
  435535:	mov    rcx,QWORD PTR [rsi]
  435538:	mov    rdi,rax
  43553b:	test   rcx,rcx
  43553e:	je     0x43556d
  435540:	call   0x43f028
  435545:	lea    ecx,[rax+0x1]
  435548:	movsxd rcx,ecx
  43554b:	call   0x4385d0
  435550:	mov    rdx,QWORD PTR [rsi+rbx*1]
  435554:	mov    rcx,rax
  435557:	mov    QWORD PTR [rdi+rbx*1],rax
  43555b:	add    rbx,0x8
  43555f:	call   0x43f040
  435564:	mov    rcx,QWORD PTR [rsi+rbx*1]
  435568:	test   rcx,rcx
  43556b:	jne    0x435540
  43556d:	mov    QWORD PTR [rdi+rbx*1],0x0
  435575:	mov    rax,rdi
  435578:	add    rsp,0x20
  43557c:	pop    rbx
  43557d:	pop    rsi
  43557e:	pop    rdi
  43557f:	ret    
  435580:	mov    edx,0x8
  435585:	jmp    0x435528
  435587:	xor    eax,eax
  435589:	jmp    0x435578
  43558b:	nop    DWORD PTR [rax+rax*1+0x0]
  435590:	push   rsi
  435591:	push   rbx
  435592:	sub    rsp,0x28
  435596:	test   rcx,rcx
  435599:	je     0x4355d0
  43559b:	mov    rsi,rcx
  43559e:	mov    rcx,QWORD PTR [rcx]
  4355a1:	mov    rbx,rsi
  4355a4:	test   rcx,rcx
  4355a7:	je     0x4355c1
  4355a9:	nop    DWORD PTR [rax+0x0]
  4355b0:	add    rbx,0x8
  4355b4:	call   0x43f100
  4355b9:	mov    rcx,QWORD PTR [rbx]
  4355bc:	test   rcx,rcx
  4355bf:	jne    0x4355b0
  4355c1:	mov    rcx,rsi
  4355c4:	add    rsp,0x28
  4355c8:	pop    rbx
  4355c9:	pop    rsi
  4355ca:	jmp    0x43f100
  4355cf:	nop
  4355d0:	add    rsp,0x28
  4355d4:	pop    rbx
  4355d5:	pop    rsi
  4355d6:	ret    
  4355d7:	nop    WORD PTR [rax+rax*1+0x0]
  4355e0:	push   r15
  4355e2:	push   r14
  4355e4:	push   r13
  4355e6:	push   r12
  4355e8:	push   rbp
  4355e9:	push   rdi
  4355ea:	push   rsi
  4355eb:	push   rbx
  4355ec:	sub    rsp,0x38
  4355f0:	test   rcx,rcx
  4355f3:	mov    rbx,rcx
  4355f6:	je     0x4357f1
  4355fc:	call   0x43f028
  435601:	lea    rcx,[rax+0x1]
  435605:	xor    r15d,r15d
  435608:	xor    r12d,r12d
  43560b:	xor    ebp,ebp
  43560d:	xor    edi,edi
  43560f:	xor    r14d,r14d
  435612:	call   0x4385d0
  435617:	mov    rsi,QWORD PTR [rip+0x1bfc2]        # 0x4515e0
  43561e:	mov    QWORD PTR [rsp+0x20],rax
  435623:	xor    r13d,r13d
  435626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435630:	movzx  eax,BYTE PTR [rbx]
  435633:	mov    edx,r15d
  435636:	test   BYTE PTR [rsi+rax*2],0x40
  43563a:	je     0x43564d
  43563c:	nop    DWORD PTR [rax+0x0]
  435640:	add    rbx,0x1
  435644:	movzx  eax,BYTE PTR [rbx]
  435647:	test   BYTE PTR [rsi+rax*2],0x40
  43564b:	jne    0x435640
  43564d:	test   ebp,ebp
  43564f:	je     0x43565c
  435651:	lea    eax,[rbp-0x1]
  435654:	lea    r11,[r12+r15*8]
  435658:	cmp    edx,eax
  43565a:	jl     0x435684
  43565c:	test   r12,r12
  43565f:	je     0x4357da
  435665:	add    ebp,ebp
  435667:	mov    rcx,r12
  43566a:	movsxd rdx,ebp
  43566d:	shl    rdx,0x3
  435671:	call   0x438650
  435676:	mov    r12,rax
  435679:	lea    r11,[r12+r15*8]
  43567d:	mov    QWORD PTR [r11],0x0
  435684:	movzx  edx,BYTE PTR [rbx]
  435687:	mov    r8,QWORD PTR [rsp+0x20]
  43568c:	test   dl,dl
  43568e:	jne    0x4356a6
  435690:	jmp    0x4356f0
  435692:	mov    BYTE PTR [r8],dl
  435695:	xor    edi,edi
  435697:	add    r8,0x1
  43569b:	add    rbx,0x1
  43569f:	movzx  edx,BYTE PTR [rbx]
  4356a2:	test   dl,dl
  4356a4:	je     0x4356f0
  4356a6:	movzx  r9d,dl
  4356aa:	test   BYTE PTR [rsi+r9*2],0x40
  4356af:	je     0x4356bf
  4356b1:	mov    eax,edi
  4356b3:	or     eax,r13d
  4356b6:	or     eax,r14d
  4356b9:	je     0x4357d0
  4356bf:	test   edi,edi
  4356c1:	jne    0x435692
  4356c3:	cmp    dl,0x5c
  4356c6:	je     0x435780
  4356cc:	test   r13d,r13d
  4356cf:	je     0x435760
  4356d5:	cmp    dl,0x27
  4356d8:	je     0x4357b0
  4356de:	add    rbx,0x1
  4356e2:	mov    BYTE PTR [r8],dl
  4356e5:	add    r8,0x1
  4356e9:	movzx  edx,BYTE PTR [rbx]
  4356ec:	test   dl,dl
  4356ee:	jne    0x4356a6
  4356f0:	mov    rcx,QWORD PTR [rsp+0x20]
  4356f5:	mov    BYTE PTR [r8],0x0
  4356f9:	add    r15,0x1
  4356fd:	mov    QWORD PTR [rsp+0x28],r11
  435702:	call   0x4386d0
  435707:	mov    r11,QWORD PTR [rsp+0x28]
  43570c:	mov    QWORD PTR [r11],rax
  43570f:	mov    QWORD PTR [r12+r15*8],0x0
  435717:	movzx  edx,BYTE PTR [rbx]
  43571a:	test   BYTE PTR [rsi+rdx*2],0x40
  43571e:	mov    rax,rdx
  435721:	je     0x435733
  435723:	add    rbx,0x1
  435727:	movzx  edx,BYTE PTR [rbx]
  43572a:	test   BYTE PTR [rsi+rdx*2],0x40
  43572e:	mov    rax,rdx
  435731:	jne    0x435723
  435733:	test   al,al
  435735:	jne    0x435630
  43573b:	mov    rcx,QWORD PTR [rsp+0x20]
  435740:	call   0x43f100
  435745:	mov    rax,r12
  435748:	add    rsp,0x38
  43574c:	pop    rbx
  43574d:	pop    rsi
  43574e:	pop    rdi
  43574f:	pop    rbp
  435750:	pop    r12
  435752:	pop    r13
  435754:	pop    r14
  435756:	pop    r15
  435758:	ret    
  435759:	nop    DWORD PTR [rax+0x0]
  435760:	test   r14d,r14d
  435763:	je     0x435790
  435765:	cmp    dl,0x22
  435768:	jne    0x4356de
  43576e:	xor    r14d,r14d
  435771:	jmp    0x43569b
  435776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435780:	mov    edi,0x1
  435785:	jmp    0x43569b
  43578a:	nop    WORD PTR [rax+rax*1+0x0]
  435790:	cmp    dl,0x27
  435793:	je     0x4357c0
  435795:	cmp    dl,0x22
  435798:	jne    0x4356de
  43579e:	mov    r14d,0x1
  4357a4:	jmp    0x43569b
  4357a9:	nop    DWORD PTR [rax+0x0]
  4357b0:	xor    r13d,r13d
  4357b3:	jmp    0x43569b
  4357b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4357c0:	mov    r13d,0x1
  4357c6:	jmp    0x43569b
  4357cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4357d0:	xor    edi,edi
  4357d2:	xor    r14d,r14d
  4357d5:	jmp    0x4356f0
  4357da:	mov    ecx,0x40
  4357df:	mov    ebp,0x8
  4357e4:	call   0x4385d0
  4357e9:	mov    r12,rax
  4357ec:	jmp    0x435679
  4357f1:	xor    r12d,r12d
  4357f4:	jmp    0x435745
  4357f9:	nop    DWORD PTR [rax+0x0]
  435800:	push   r12
  435802:	push   rbp
  435803:	push   rdi
  435804:	push   rsi
  435805:	push   rbx
  435806:	sub    rsp,0x20
  43580a:	test   rdx,rdx
  43580d:	mov    r12,rcx
  435810:	mov    rdi,rdx
  435813:	je     0x43587d
  435815:	mov    rbx,QWORD PTR [rcx]
  435818:	mov    rbp,QWORD PTR [rip+0x1bdc1]        # 0x4515e0
  43581f:	test   rbx,rbx
  435822:	jne    0x435855
  435824:	jmp    0x4358af
  435829:	nop    DWORD PTR [rax+0x0]
  435830:	cmp    al,0x22
  435832:	je     0x43586b
  435834:	cmp    al,0x5c
  435836:	sete   dl
  435839:	cmp    al,0x27
  43583b:	sete   al
  43583e:	or     dl,al
  435840:	jne    0x43586b
  435842:	mov    rdx,rdi
  435845:	mov    ecx,esi
  435847:	call   0x43f118
  43584c:	cmp    eax,0xffffffff
  43584f:	je     0x43587d
  435851:	add    rbx,0x1
  435855:	movzx  eax,BYTE PTR [rbx]
  435858:	test   al,al
  43585a:	je     0x435890
  43585c:	movzx  r8d,al
  435860:	movsx  esi,al
  435863:	test   BYTE PTR [rbp+r8*2+0x0],0x40
  435869:	je     0x435830
  43586b:	mov    rdx,rdi
  43586e:	mov    ecx,0x5c
  435873:	call   0x43f118
  435878:	cmp    eax,0xffffffff
  43587b:	jne    0x435842
  43587d:	mov    eax,0x1
  435882:	add    rsp,0x20
  435886:	pop    rbx
  435887:	pop    rsi
  435888:	pop    rdi
  435889:	pop    rbp
  43588a:	pop    r12
  43588c:	ret    
  43588d:	nop    DWORD PTR [rax]
  435890:	mov    rdx,rdi
  435893:	mov    ecx,0xa
  435898:	call   0x43f118
  43589d:	cmp    eax,0xffffffff
  4358a0:	je     0x43587d
  4358a2:	add    r12,0x8
  4358a6:	mov    rbx,QWORD PTR [r12]
  4358aa:	test   rbx,rbx
  4358ad:	jne    0x435855
  4358af:	xor    eax,eax
  4358b1:	jmp    0x435882
  4358b3:	nop    DWORD PTR [rax]
  4358b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4358c0:	push   r15
  4358c2:	push   r14
  4358c4:	push   r13
  4358c6:	push   r12
  4358c8:	push   rbp
  4358c9:	push   rdi
  4358ca:	push   rsi
  4358cb:	push   rbx
  4358cc:	sub    rsp,0x48
  4358d0:	xor    edi,edi
  4358d2:	mov    rbp,rdx
  4358d5:	mov    edx,DWORD PTR [rcx]
  4358d7:	lea    ebx,[rdi+0x1]
  4358da:	mov    r13,rcx
  4358dd:	mov    DWORD PTR [rsp+0x38],0x7d0
  4358e5:	cmp    ebx,edx
  4358e7:	jge    0x435911
  4358e9:	nop    DWORD PTR [rax+0x0]
  4358f0:	mov    rax,QWORD PTR [rbp+0x0]
  4358f4:	movsxd rsi,ebx
  4358f7:	lea    r12,[rsi*8+0x0]
  4358ff:	mov    rcx,QWORD PTR [rax+rsi*8]
  435903:	cmp    BYTE PTR [rcx],0x40
  435906:	je     0x435922
  435908:	mov    edi,ebx
  43590a:	lea    ebx,[rdi+0x1]
  43590d:	cmp    ebx,edx
  43590f:	jl     0x4358f0
  435911:	add    rsp,0x48
  435915:	pop    rbx
  435916:	pop    rsi
  435917:	pop    rdi
  435918:	pop    rbp
  435919:	pop    r12
  43591b:	pop    r13
  43591d:	pop    r14
  43591f:	pop    r15
  435921:	ret    
  435922:	sub    DWORD PTR [rsp+0x38],0x1
  435927:	je     0x435b2f
  43592d:	lea    rdx,[rip+0x1aa35]        # 0x450369
  435934:	add    rcx,0x1
  435938:	call   0x43f128
  43593d:	test   rax,rax
  435940:	mov    r14,rax
  435943:	je     0x435ada
  435949:	xor    edx,edx
  43594b:	mov    r8d,0x2
  435951:	mov    rcx,rax
  435954:	call   0x43f0f0
  435959:	cmp    eax,0xffffffff
  43595c:	je     0x435ad2
  435962:	mov    rcx,r14
  435965:	call   0x43f0e8
  43596a:	movsxd r15,eax
  43596d:	cmp    r15d,0xffffffff
  435971:	je     0x435ad2
  435977:	xor    r8d,r8d
  43597a:	xor    edx,edx
  43597c:	mov    rcx,r14
  43597f:	call   0x43f0f0
  435984:	cmp    eax,0xffffffff
  435987:	je     0x435ad2
  43598d:	lea    rcx,[r15+0x1]
  435991:	call   0x4385d0
  435996:	mov    edx,0x1
  43599b:	mov    r9,r14
  43599e:	mov    r8,r15
  4359a1:	mov    rcx,rax
  4359a4:	mov    QWORD PTR [rsp+0x20],rax
  4359a9:	call   0x43f108
  4359ae:	cmp    r15,rax
  4359b1:	mov    rdx,rax
  4359b4:	je     0x4359d0
  4359b6:	mov    rcx,r14
  4359b9:	mov    QWORD PTR [rsp+0x28],rax
  4359be:	call   0x43f140
  4359c3:	test   eax,eax
  4359c5:	mov    rdx,QWORD PTR [rsp+0x28]
  4359ca:	jne    0x435ad2
  4359d0:	mov    rax,QWORD PTR [rsp+0x20]
  4359d5:	mov    BYTE PTR [rax+rdx*1],0x0
  4359d9:	movzx  eax,BYTE PTR [rax]
  4359dc:	test   al,al
  4359de:	je     0x435a1c
  4359e0:	mov    rdx,QWORD PTR [rip+0x1bbf9]        # 0x4515e0
  4359e7:	test   BYTE PTR [rdx+rax*2],0x40
  4359eb:	je     0x435ae5
  4359f1:	mov    rdx,QWORD PTR [rsp+0x20]
  4359f6:	jmp    0x435a11
  4359f8:	nop    DWORD PTR [rax+rax*1+0x0]
  435a00:	mov    rcx,QWORD PTR [rip+0x1bbd9]        # 0x4515e0
  435a07:	test   BYTE PTR [rcx+rax*2],0x40
  435a0b:	je     0x435ae5
  435a11:	add    rdx,0x1
  435a15:	movzx  eax,BYTE PTR [rdx]
  435a18:	test   al,al
  435a1a:	jne    0x435a00
  435a1c:	mov    ecx,0x8
  435a21:	call   0x4385d0
  435a26:	mov    rcx,QWORD PTR [rbp+0x0]
  435a2a:	mov    QWORD PTR [rax],0x0
  435a31:	mov    r15,rax
  435a34:	call   0x4354f0
  435a39:	xor    r10d,r10d
  435a3c:	mov    QWORD PTR [rbp+0x0],rax
  435a40:	xor    r9d,r9d
  435a43:	xor    r8d,r8d
  435a46:	movsxd rdx,DWORD PTR [r13+0x0]
  435a4a:	mov    rcx,rax
  435a4d:	mov    DWORD PTR [rsp+0x3c],r10d
  435a52:	mov    QWORD PTR [rsp+0x30],r9
  435a57:	mov    QWORD PTR [rsp+0x28],r8
  435a5c:	lea    rdx,[r8+rdx*1+0x1]
  435a61:	shl    rdx,0x3
  435a65:	call   0x438650
  435a6a:	mov    edx,DWORD PTR [r13+0x0]
  435a6e:	mov    r8,QWORD PTR [rsp+0x28]
  435a73:	mov    QWORD PTR [rbp+0x0],rax
  435a77:	sub    edx,ebx
  435a79:	add    rsi,r8
  435a7c:	movsxd rbx,edx
  435a7f:	lea    rcx,[rax+rsi*8]
  435a83:	lea    rdx,[rax+r12*1+0x8]
  435a88:	lea    r8,[rbx*8+0x0]
  435a90:	mov    ebx,edi
  435a92:	call   0x43f0a0
  435a97:	mov    r9,QWORD PTR [rsp+0x30]
  435a9c:	mov    rcx,r12
  435a9f:	add    rcx,QWORD PTR [rbp+0x0]
  435aa3:	mov    rdx,r15
  435aa6:	mov    r8,r9
  435aa9:	call   0x43f0a8
  435aae:	mov    eax,DWORD PTR [r13+0x0]
  435ab2:	mov    r10d,DWORD PTR [rsp+0x3c]
  435ab7:	mov    rcx,r15
  435aba:	lea    eax,[r10+rax*1-0x1]
  435abf:	mov    DWORD PTR [r13+0x0],eax
  435ac3:	call   0x43f100
  435ac8:	mov    rcx,QWORD PTR [rsp+0x20]
  435acd:	call   0x43f100
  435ad2:	mov    rcx,r14
  435ad5:	call   0x43f150
  435ada:	mov    edx,DWORD PTR [r13+0x0]
  435ade:	mov    edi,ebx
  435ae0:	jmp    0x43590a
  435ae5:	mov    rcx,QWORD PTR [rsp+0x20]
  435aea:	call   0x4355e0
  435aef:	mov    rcx,QWORD PTR [rbp+0x0]
  435af3:	mov    rdx,QWORD PTR [rax]
  435af6:	mov    r15,rax
  435af9:	mov    QWORD PTR [rsp+0x28],rdx
  435afe:	call   0x4354f0
  435b03:	mov    rdx,QWORD PTR [rsp+0x28]
  435b08:	mov    QWORD PTR [rbp+0x0],rax
  435b0c:	test   rdx,rdx
  435b0f:	je     0x435b55
  435b11:	xor    r8d,r8d
  435b14:	add    r8,0x1
  435b18:	cmp    QWORD PTR [r15+r8*8],0x0
  435b1d:	lea    r9,[r8*8+0x0]
  435b25:	jne    0x435b14
  435b27:	mov    r10d,r8d
  435b2a:	jmp    0x435a46
  435b2f:	mov    rbx,QWORD PTR [rax]
  435b32:	call   QWORD PTR [rip+0x25ae4]        # 0x45b61c
  435b38:	lea    rdx,[rip+0x1a801]        # 0x450340
  435b3f:	lea    rcx,[rax+0x60]
  435b43:	mov    r8,rbx
  435b46:	call   0x43f120
  435b4b:	mov    ecx,0x1
  435b50:	call   0x438540
  435b55:	xor    r10d,r10d
  435b58:	xor    r9d,r9d
  435b5b:	xor    r8d,r8d
  435b5e:	jmp    0x435a46
  435b63:	nop    DWORD PTR [rax]
  435b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435b70:	test   rcx,rcx
  435b73:	je     0x435b91
  435b75:	cmp    QWORD PTR [rcx],0x0
  435b79:	je     0x435b91
  435b7b:	add    rcx,0x8
  435b7f:	xor    eax,eax
  435b81:	add    rcx,0x8
  435b85:	add    eax,0x1
  435b88:	cmp    QWORD PTR [rcx-0x8],0x0
  435b8d:	jne    0x435b81
  435b8f:	repz ret 
  435b91:	xor    eax,eax
  435b93:	ret    
  435b94:	nop
  435b95:	nop
  435b96:	nop
  435b97:	nop
  435b98:	nop
  435b99:	nop
  435b9a:	nop
  435b9b:	nop
  435b9c:	nop
  435b9d:	nop
  435b9e:	nop
  435b9f:	nop
  435ba0:	push   rsi
  435ba1:	push   rbx
  435ba2:	sub    rsp,0x38
  435ba6:	xor    esi,esi
  435ba8:	lea    rbx,[rsp+0x58]
  435bad:	test   rcx,rcx
  435bb0:	mov    QWORD PTR [rsp+0x58],rdx
  435bb5:	mov    QWORD PTR [rsp+0x60],r8
  435bba:	mov    QWORD PTR [rsp+0x68],r9
  435bbf:	mov    QWORD PTR [rsp+0x28],rbx
  435bc4:	je     0x435be4
  435bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435bd0:	add    rbx,0x8
  435bd4:	call   0x43f028
  435bd9:	mov    rcx,QWORD PTR [rbx-0x8]
  435bdd:	add    esi,eax
  435bdf:	test   rcx,rcx
  435be2:	jne    0x435bd0
  435be4:	mov    eax,esi
  435be6:	add    rsp,0x38
  435bea:	pop    rbx
  435beb:	pop    rsi
  435bec:	ret    
  435bed:	nop    DWORD PTR [rax]
  435bf0:	push   r12
  435bf2:	push   rbp
  435bf3:	push   rdi
  435bf4:	push   rsi
  435bf5:	push   rbx
  435bf6:	sub    rsp,0x30
  435bfa:	lea    rdi,[rsp+0x70]
  435bff:	test   rdx,rdx
  435c02:	mov    r12,rcx
  435c05:	mov    QWORD PTR [rsp+0x70],r8
  435c0a:	mov    QWORD PTR [rsp+0x78],r9
  435c0f:	mov    rsi,rdx
  435c12:	mov    QWORD PTR [rsp+0x28],rdi
  435c17:	mov    rbp,rcx
  435c1a:	je     0x435c48
  435c1c:	nop    DWORD PTR [rax+0x0]
  435c20:	mov    rcx,rsi
  435c23:	add    rdi,0x8
  435c27:	call   0x43f028
  435c2c:	mov    ebx,eax
  435c2e:	mov    rdx,rsi
  435c31:	mov    rcx,rbp
  435c34:	mov    r8,rbx
  435c37:	add    rbp,rbx
  435c3a:	call   0x43f0a8
  435c3f:	mov    rsi,QWORD PTR [rdi-0x8]
  435c43:	test   rsi,rsi
  435c46:	jne    0x435c20
  435c48:	mov    rax,r12
  435c4b:	mov    BYTE PTR [rbp+0x0],0x0
  435c4f:	add    rsp,0x30
  435c53:	pop    rbx
  435c54:	pop    rsi
  435c55:	pop    rdi
  435c56:	pop    rbp
  435c57:	pop    r12
  435c59:	ret    
  435c5a:	nop    WORD PTR [rax+rax*1+0x0]
  435c60:	push   rbp
  435c61:	push   rdi
  435c62:	push   rsi
  435c63:	push   rbx
  435c64:	sub    rsp,0x38
  435c68:	mov    rbp,QWORD PTR [rip+0x24d11]        # 0x45a980
  435c6f:	lea    rdi,[rsp+0x68]
  435c74:	test   rcx,rcx
  435c77:	mov    QWORD PTR [rsp+0x68],rdx
  435c7c:	mov    QWORD PTR [rsp+0x70],r8
  435c81:	mov    QWORD PTR [rsp+0x78],r9
  435c86:	mov    rsi,rcx
  435c89:	mov    QWORD PTR [rsp+0x28],rdi
  435c8e:	je     0x435cb8
  435c90:	mov    rcx,rsi
  435c93:	add    rdi,0x8
  435c97:	call   0x43f028
  435c9c:	mov    ebx,eax
  435c9e:	mov    rdx,rsi
  435ca1:	mov    rcx,rbp
  435ca4:	mov    r8,rbx
  435ca7:	add    rbp,rbx
  435caa:	call   0x43f0a8
  435caf:	mov    rsi,QWORD PTR [rdi-0x8]
  435cb3:	test   rsi,rsi
  435cb6:	jne    0x435c90
  435cb8:	mov    BYTE PTR [rbp+0x0],0x0
  435cbc:	mov    rax,QWORD PTR [rip+0x24cbd]        # 0x45a980
  435cc3:	add    rsp,0x38
  435cc7:	pop    rbx
  435cc8:	pop    rsi
  435cc9:	pop    rdi
  435cca:	pop    rbp
  435ccb:	ret    
  435ccc:	nop    DWORD PTR [rax+0x0]
  435cd0:	push   r12
  435cd2:	push   rbp
  435cd3:	push   rdi
  435cd4:	push   rsi
  435cd5:	push   rbx
  435cd6:	sub    rsp,0x30
  435cda:	lea    rdi,[rsp+0x68]
  435cdf:	test   rcx,rcx
  435ce2:	mov    QWORD PTR [rsp+0x68],rdx
  435ce7:	mov    QWORD PTR [rsp+0x70],r8
  435cec:	mov    QWORD PTR [rsp+0x78],r9
  435cf1:	mov    rsi,rcx
  435cf4:	mov    QWORD PTR [rsp+0x28],rdi
  435cf9:	mov    rbx,rdi
  435cfc:	je     0x435d6a
  435cfe:	xor    ebp,ebp
  435d00:	add    rbx,0x8
  435d04:	call   0x43f028
  435d09:	mov    rcx,QWORD PTR [rbx-0x8]
  435d0d:	add    ebp,eax
  435d0f:	test   rcx,rcx
  435d12:	jne    0x435d00
  435d14:	lea    ecx,[rbp+0x1]
  435d17:	call   0x4385d0
  435d1c:	mov    QWORD PTR [rsp+0x28],rdi
  435d21:	mov    r12,rax
  435d24:	mov    rbp,rax
  435d27:	nop    WORD PTR [rax+rax*1+0x0]
  435d30:	mov    rcx,rsi
  435d33:	add    rdi,0x8
  435d37:	call   0x43f028
  435d3c:	mov    ebx,eax
  435d3e:	mov    rdx,rsi
  435d41:	mov    rcx,rbp
  435d44:	mov    r8,rbx
  435d47:	add    rbp,rbx
  435d4a:	call   0x43f0a8
  435d4f:	mov    rsi,QWORD PTR [rdi-0x8]
  435d53:	test   rsi,rsi
  435d56:	jne    0x435d30
  435d58:	mov    rax,r12
  435d5b:	mov    BYTE PTR [rbp+0x0],0x0
  435d5f:	add    rsp,0x30
  435d63:	pop    rbx
  435d64:	pop    rsi
  435d65:	pop    rdi
  435d66:	pop    rbp
  435d67:	pop    r12
  435d69:	ret    
  435d6a:	mov    ecx,0x1
  435d6f:	call   0x4385d0
  435d74:	mov    QWORD PTR [rsp+0x28],rdi
  435d79:	mov    r12,rax
  435d7c:	mov    rbp,rax
  435d7f:	jmp    0x435d58
  435d81:	nop    DWORD PTR [rax+rax*1+0x0]
  435d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435d90:	push   r13
  435d92:	push   r12
  435d94:	push   rbp
  435d95:	push   rdi
  435d96:	push   rsi
  435d97:	push   rbx
  435d98:	sub    rsp,0x38
  435d9c:	lea    rbp,[rsp+0x80]
  435da4:	test   rdx,rdx
  435da7:	mov    r12,rcx
  435daa:	mov    QWORD PTR [rsp+0x80],r8
  435db2:	mov    QWORD PTR [rsp+0x88],r9
  435dba:	mov    rsi,rdx
  435dbd:	mov    QWORD PTR [rsp+0x28],rbp
  435dc2:	mov    rbx,rbp
  435dc5:	je     0x435e48
  435dcb:	mov    rcx,rdx
  435dce:	xor    edi,edi
  435dd0:	add    rbx,0x8
  435dd4:	call   0x43f028
  435dd9:	mov    rcx,QWORD PTR [rbx-0x8]
  435ddd:	add    edi,eax
  435ddf:	test   rcx,rcx
  435de2:	jne    0x435dd0
  435de4:	lea    ecx,[rdi+0x1]
  435de7:	call   0x4385d0
  435dec:	mov    QWORD PTR [rsp+0x28],rbp
  435df1:	mov    r13,rax
  435df4:	mov    rdi,rax
  435df7:	nop    WORD PTR [rax+rax*1+0x0]
  435e00:	mov    rcx,rsi
  435e03:	add    rbp,0x8
  435e07:	call   0x43f028
  435e0c:	mov    ebx,eax
  435e0e:	mov    rdx,rsi
  435e11:	mov    rcx,rdi
  435e14:	mov    r8,rbx
  435e17:	add    rdi,rbx
  435e1a:	call   0x43f0a8
  435e1f:	mov    rsi,QWORD PTR [rbp-0x8]
  435e23:	test   rsi,rsi
  435e26:	jne    0x435e00
  435e28:	test   r12,r12
  435e2b:	mov    BYTE PTR [rdi],0x0
  435e2e:	je     0x435e38
  435e30:	mov    rcx,r12
  435e33:	call   0x43f100
  435e38:	mov    rax,r13
  435e3b:	add    rsp,0x38
  435e3f:	pop    rbx
  435e40:	pop    rsi
  435e41:	pop    rdi
  435e42:	pop    rbp
  435e43:	pop    r12
  435e45:	pop    r13
  435e47:	ret    
  435e48:	mov    ecx,0x1
  435e4d:	call   0x4385d0
  435e52:	mov    QWORD PTR [rsp+0x28],rbp
  435e57:	mov    r13,rax
  435e5a:	mov    rdi,rax
  435e5d:	jmp    0x435e28
  435e5f:	nop
  435e60:	mov    r9,QWORD PTR [rip+0x1b789]        # 0x4515f0
  435e67:	jmp    0x435e8f
  435e69:	nop    DWORD PTR [rax+0x0]
  435e70:	cmp    r8d,0x2f
  435e74:	mov    r10d,0x5c
  435e7a:	cmove  r8d,r10d
  435e7e:	cmp    eax,r8d
  435e81:	jne    0x435eb5
  435e83:	test   eax,eax
  435e85:	je     0x435ec0
  435e87:	add    rcx,0x1
  435e8b:	add    rdx,0x1
  435e8f:	movzx  eax,BYTE PTR [rcx]
  435e92:	movzx  r8d,BYTE PTR [rdx]
  435e96:	movzx  eax,BYTE PTR [r9+rax*1]
  435e9b:	movzx  r8d,BYTE PTR [r9+r8*1]
  435ea0:	cmp    eax,0x2f
  435ea3:	jne    0x435e70
  435ea5:	cmp    r8d,0x2f
  435ea9:	mov    eax,0x5c
  435eae:	je     0x435e87
  435eb0:	cmp    eax,r8d
  435eb3:	je     0x435e83
  435eb5:	sub    eax,r8d
  435eb8:	ret    
  435eb9:	nop    DWORD PTR [rax+0x0]
  435ec0:	xor    eax,eax
  435ec2:	ret    
  435ec3:	nop    DWORD PTR [rax]
  435ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435ed0:	xor    eax,eax
  435ed2:	test   r8,r8
  435ed5:	je     0x435f40
  435ed7:	mov    r11,QWORD PTR [rip+0x1b712]        # 0x4515f0
  435ede:	jmp    0x435f04
  435ee0:	test   eax,eax
  435ee2:	sete   r10b
  435ee6:	cmp    r9d,0x2f
  435eea:	je     0x435f34
  435eec:	cmp    eax,r9d
  435eef:	jne    0x435f30
  435ef1:	test   r10b,r10b
  435ef4:	jne    0x435f30
  435ef6:	add    rcx,0x1
  435efa:	add    rdx,0x1
  435efe:	sub    r8,0x1
  435f02:	je     0x435f42
  435f04:	movzx  eax,BYTE PTR [rcx]
  435f07:	movzx  r9d,BYTE PTR [rdx]
  435f0b:	movzx  eax,BYTE PTR [r11+rax*1]
  435f10:	movzx  r9d,BYTE PTR [r11+r9*1]
  435f15:	cmp    eax,0x2f
  435f18:	jne    0x435ee0
  435f1a:	cmp    r9d,0x2f
  435f1e:	je     0x435ef6
  435f20:	mov    eax,0x5c
  435f25:	xor    r10d,r10d
  435f28:	cmp    eax,r9d
  435f2b:	je     0x435ef1
  435f2d:	nop    DWORD PTR [rax]
  435f30:	sub    eax,r9d
  435f33:	ret    
  435f34:	mov    r9b,0x5c
  435f37:	jmp    0x435eec
  435f39:	nop    DWORD PTR [rax+0x0]
  435f40:	repz ret 
  435f42:	xor    eax,eax
  435f44:	ret    
  435f45:	nop
  435f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435f50:	xor    eax,eax
  435f52:	lea    r8,[rcx+0x1]
  435f56:	movzx  ecx,BYTE PTR [rcx]
  435f59:	test   cl,cl
  435f5b:	je     0x435f95
  435f5d:	mov    r10,QWORD PTR [rip+0x1b68c]        # 0x4515f0
  435f64:	mov    r9d,0x2f
  435f6a:	nop    WORD PTR [rax+rax*1+0x0]
  435f70:	cmp    cl,0x5c
  435f73:	movzx  edx,cl
  435f76:	cmove  rdx,r9
  435f7a:	add    r8,0x1
  435f7e:	movzx  ecx,BYTE PTR [r8-0x1]
  435f83:	movzx  edx,BYTE PTR [r10+rdx*1]
  435f88:	imul   eax,eax,0x43
  435f8b:	test   cl,cl
  435f8d:	lea    eax,[rax+rdx*1-0x71]
  435f91:	jne    0x435f70
  435f93:	repz ret 
  435f95:	repz ret 
  435f97:	nop    WORD PTR [rax+rax*1+0x0]
  435fa0:	sub    rsp,0x28
  435fa4:	call   0x435e60
  435fa9:	test   eax,eax
  435fab:	sete   al
  435fae:	movzx  eax,al
  435fb1:	add    rsp,0x28
  435fb5:	ret    
  435fb6:	nop
  435fb7:	nop
  435fb8:	nop
  435fb9:	nop
  435fba:	nop
  435fbb:	nop
  435fbc:	nop
  435fbd:	nop
  435fbe:	nop
  435fbf:	nop
  435fc0:	ret    
  435fc1:	nop    DWORD PTR [rax+rax*1+0x0]
  435fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435fd0:	push   rbx
  435fd1:	sub    rsp,0x20
  435fd5:	mov    rbx,QWORD PTR [rip+0x25640]        # 0x45b61c
  435fdc:	call   rbx
  435fde:	call   rbx
  435fe0:	mov    rax,rbx
  435fe3:	add    rsp,0x20
  435fe7:	pop    rbx
  435fe8:	rex.W jmp rax
  435feb:	nop    DWORD PTR [rax+rax*1+0x0]
  435ff0:	jmp    0x43f128
  435ff5:	nop
  435ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436000:	jmp    0x43ef88
  436005:	nop
  436006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436010:	jmp    0x43f0f8
  436015:	nop
  436016:	nop
  436017:	nop
  436018:	nop
  436019:	nop
  43601a:	nop
  43601b:	nop
  43601c:	nop
  43601d:	nop
  43601e:	nop
  43601f:	nop
  436020:	push   r13
  436022:	push   r12
  436024:	push   rbp
  436025:	push   rdi
  436026:	push   rsi
  436027:	push   rbx
  436028:	movsxd rax,DWORD PTR [rip+0x234b1]        # 0x4594e0
  43602f:	mov    ebp,DWORD PTR [rip+0x234af]        # 0x4594e4
  436035:	mov    edi,DWORD PTR [rip+0xc0fd]        # 0x442138
  43603b:	mov    ebx,ebp
  43603d:	lea    r9,[rcx+rax*8]
  436041:	mov    r11,rax
  436044:	mov    esi,edi
  436046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436050:	cmp    r11d,ebx
  436053:	jle    0x4360a1
  436055:	cmp    esi,r11d
  436058:	jle    0x4360a1
  43605a:	mov    r12d,esi
  43605d:	mov    r13d,r11d
  436060:	sub    r12d,r11d
  436063:	sub    r13d,ebx
  436066:	cmp    r12d,r13d
  436069:	jg     0x4360c0
  43606b:	test   r12d,r12d
  43606e:	jle    0x436099
  436070:	movsxd rax,ebx
  436073:	lea    rdx,[rcx+rax*8]
  436077:	xor    eax,eax
  436079:	nop    DWORD PTR [rax+0x0]
  436080:	mov    r8,QWORD PTR [rdx+rax*8]
  436084:	mov    r10,QWORD PTR [r9+rax*8]
  436088:	mov    QWORD PTR [rdx+rax*8],r10
  43608c:	mov    QWORD PTR [r9+rax*8],r8
  436090:	add    rax,0x1
  436094:	cmp    r12d,eax
  436097:	jg     0x436080
  436099:	add    ebx,r12d
  43609c:	cmp    r11d,ebx
  43609f:	jg     0x436055
  4360a1:	mov    eax,edi
  4360a3:	mov    DWORD PTR [rip+0x23437],edi        # 0x4594e0
  4360a9:	sub    eax,r11d
  4360ac:	add    ebp,eax
  4360ae:	mov    DWORD PTR [rip+0x23430],ebp        # 0x4594e4
  4360b4:	pop    rbx
  4360b5:	pop    rsi
  4360b6:	pop    rdi
  4360b7:	pop    rbp
  4360b8:	pop    r12
  4360ba:	pop    r13
  4360bc:	ret    
  4360bd:	nop    DWORD PTR [rax]
  4360c0:	test   r13d,r13d
  4360c3:	jle    0x4360f9
  4360c5:	movsxd rax,ebx
  4360c8:	lea    r8,[rcx+rax*8]
  4360cc:	mov    eax,ebx
  4360ce:	sub    eax,r11d
  4360d1:	add    eax,esi
  4360d3:	cdqe   
  4360d5:	lea    rdx,[rcx+rax*8]
  4360d9:	xor    eax,eax
  4360db:	nop    DWORD PTR [rax+rax*1+0x0]
  4360e0:	mov    r10,QWORD PTR [r8+rax*8]
  4360e4:	mov    r12,QWORD PTR [rdx+rax*8]
  4360e8:	mov    QWORD PTR [r8+rax*8],r12
  4360ec:	mov    QWORD PTR [rdx+rax*8],r10
  4360f0:	add    rax,0x1
  4360f4:	cmp    r13d,eax
  4360f7:	jg     0x4360e0
  4360f9:	sub    esi,r13d
  4360fc:	jmp    0x436050
  436101:	nop    DWORD PTR [rax+rax*1+0x0]
  436106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436110:	push   r15
  436112:	push   r14
  436114:	push   r13
  436116:	push   r12
  436118:	push   rbp
  436119:	push   rdi
  43611a:	push   rsi
  43611b:	push   rbx
  43611c:	sub    rsp,0x78
  436120:	mov    eax,DWORD PTR [rip+0xc012]        # 0x442138
  436126:	mov    QWORD PTR [rip+0x233a7],0x0        # 0x4594d8
  436131:	mov    r12d,ecx
  436134:	mov    QWORD PTR [rsp+0xc8],rdx
  43613c:	mov    QWORD PTR [rsp+0xd0],r8
  436144:	mov    QWORD PTR [rsp+0xd8],r9
  43614c:	test   eax,eax
  43614e:	jne    0x4363d0
  436154:	mov    DWORD PTR [rip+0xbfda],0x1        # 0x442138
  43615e:	mov    eax,0x1
  436163:	lea    rcx,[rip+0x1a206]        # 0x450370
  43616a:	mov    DWORD PTR [rip+0x23370],eax        # 0x4594e0
  436170:	mov    DWORD PTR [rip+0x2336e],eax        # 0x4594e4
  436176:	mov    QWORD PTR [rip+0x23377],0x0        # 0x4594f8
  436181:	call   0x43f0d0
  436186:	mov    rbx,QWORD PTR [rsp+0xd0]
  43618e:	mov    QWORD PTR [rip+0x23353],rax        # 0x4594e8
  436195:	movzx  edx,BYTE PTR [rbx]
  436198:	cmp    dl,0x2d
  43619b:	je     0x436690
  4361a1:	cmp    dl,0x2b
  4361a4:	je     0x436630
  4361aa:	test   rax,rax
  4361ad:	sete   al
  4361b0:	movzx  eax,al
  4361b3:	mov    DWORD PTR [rip+0x23337],eax        # 0x4594f0
  4361b9:	mov    DWORD PTR [rip+0x2330d],0x1        # 0x4594d0
  4361c3:	mov    rsi,QWORD PTR [rip+0x2332e]        # 0x4594f8
  4361ca:	test   rsi,rsi
  4361cd:	je     0x4363e5
  4361d3:	movsx  edi,BYTE PTR [rsi]
  4361d6:	test   dil,dil
  4361d9:	je     0x4363e5
  4361df:	cmp    QWORD PTR [rsp+0xd8],0x0
  4361e8:	je     0x4364a0
  4361ee:	movsxd rax,DWORD PTR [rip+0xbf43]        # 0x442138
  4361f5:	lea    rbx,[rax*8+0x0]
  4361fd:	mov    DWORD PTR [rsp+0x3c],eax
  436201:	mov    QWORD PTR [rsp+0x50],rax
  436206:	mov    QWORD PTR [rsp+0x58],rbx
  43620b:	mov    rbx,QWORD PTR [rsp+0xc8]
  436213:	mov    rax,QWORD PTR [rbx+rax*8]
  436217:	mov    QWORD PTR [rsp+0x40],rax
  43621c:	movzx  eax,BYTE PTR [rax+0x1]
  436220:	cmp    al,0x2d
  436222:	mov    BYTE PTR [rsp+0x48],al
  436226:	je     0x436284
  436228:	mov    r14d,DWORD PTR [rsp+0xe8]
  436230:	test   r14d,r14d
  436233:	je     0x4364a0
  436239:	mov    rax,QWORD PTR [rsp+0x40]
  43623e:	cmp    BYTE PTR [rax+0x2],0x0
  436242:	jne    0x436284
  436244:	mov    rax,QWORD PTR [rsp+0xd0]
  43624c:	movzx  ecx,BYTE PTR [rax]
  43624f:	test   cl,cl
  436251:	je     0x436284
  436253:	movzx  r8d,BYTE PTR [rsp+0x48]
  436259:	cmp    r8b,cl
  43625c:	je     0x436880
  436262:	mov    rax,QWORD PTR [rsp+0xd0]
  43626a:	jmp    0x436279
  43626c:	nop    DWORD PTR [rax+0x0]
  436270:	cmp    r8b,dl
  436273:	je     0x436880
  436279:	add    rax,0x1
  43627d:	movzx  edx,BYTE PTR [rax]
  436280:	test   dl,dl
  436282:	jne    0x436270
  436284:	cmp    dil,0x3d
  436288:	mov    rbp,rsi
  43628b:	je     0x4362a4
  43628d:	test   dil,dil
  436290:	jne    0x436298
  436292:	jmp    0x4362a4
  436294:	test   al,al
  436296:	je     0x4362a4
  436298:	add    rbp,0x1
  43629c:	movzx  eax,BYTE PTR [rbp+0x0]
  4362a0:	cmp    al,0x3d
  4362a2:	jne    0x436294
  4362a4:	mov    rax,QWORD PTR [rsp+0xd8]
  4362ac:	mov    r13,QWORD PTR [rax]
  4362af:	test   r13,r13
  4362b2:	je     0x4367b7
  4362b8:	mov    r15,rbp
  4362bb:	mov    rbx,rax
  4362be:	xor    ecx,ecx
  4362c0:	xor    eax,eax
  4362c2:	mov    BYTE PTR [rsp+0x6f],dil
  4362c7:	mov    QWORD PTR [rsp+0x60],rbp
  4362cc:	sub    r15,rsi
  4362cf:	mov    rbp,r13
  4362d2:	xor    r14d,r14d
  4362d5:	mov    DWORD PTR [rsp+0x68],0xffffffff
  4362dd:	mov    edi,ecx
  4362df:	mov    r13,rax
  4362e2:	jmp    0x4362f9
  4362e4:	mov    edi,0x1
  4362e9:	add    rbx,0x20
  4362ed:	mov    rbp,QWORD PTR [rbx]
  4362f0:	add    r14d,0x1
  4362f4:	test   rbp,rbp
  4362f7:	je     0x436340
  4362f9:	mov    r8,r15
  4362fc:	mov    rdx,rsi
  4362ff:	mov    rcx,rbp
  436302:	call   0x43f018
  436307:	test   eax,eax
  436309:	jne    0x4362e9
  43630b:	mov    rcx,rbp
  43630e:	call   0x43f028
  436313:	cmp    r15d,eax
  436316:	je     0x436780
  43631c:	test   r13,r13
  43631f:	jne    0x4362e4
  436321:	mov    r13,rbx
  436324:	add    rbx,0x20
  436328:	mov    rbp,QWORD PTR [rbx]
  43632b:	mov    DWORD PTR [rsp+0x68],r14d
  436330:	add    r14d,0x1
  436334:	test   rbp,rbp
  436337:	jne    0x4362f9
  436339:	nop    DWORD PTR [rax+0x0]
  436340:	mov    eax,edi
  436342:	mov    rbp,QWORD PTR [rsp+0x60]
  436347:	movsx  edi,BYTE PTR [rsp+0x6f]
  43634c:	test   eax,eax
  43634e:	je     0x436710
  436354:	mov    r13d,DWORD PTR [rip+0xbdd9]        # 0x442134
  43635b:	test   r13d,r13d
  43635e:	je     0x43639a
  436360:	mov    rax,QWORD PTR [rsp+0xc8]
  436368:	mov    rbx,QWORD PTR [rax]
  43636b:	call   QWORD PTR [rip+0x252ab]        # 0x45b61c
  436371:	mov    r9,QWORD PTR [rsp+0x40]
  436376:	lea    rcx,[rax+0x60]
  43637a:	lea    rdx,[rip+0x1a002]        # 0x450383
  436381:	mov    r8,rbx
  436384:	call   0x43f120
  436389:	mov    eax,DWORD PTR [rip+0xbda9]        # 0x442138
  43638f:	mov    rsi,QWORD PTR [rip+0x23162]        # 0x4594f8
  436396:	mov    DWORD PTR [rsp+0x3c],eax
  43639a:	mov    rcx,rsi
  43639d:	call   0x43f028
  4363a2:	add    rax,rsi
  4363a5:	mov    QWORD PTR [rip+0x2314c],rax        # 0x4594f8
  4363ac:	mov    eax,DWORD PTR [rsp+0x3c]
  4363b0:	mov    DWORD PTR [rip+0xbd76],0x0        # 0x442130
  4363ba:	add    eax,0x1
  4363bd:	mov    DWORD PTR [rip+0xbd75],eax        # 0x442138
  4363c3:	mov    eax,0x3f
  4363c8:	jmp    0x436576
  4363cd:	nop    DWORD PTR [rax]
  4363d0:	mov    r15d,DWORD PTR [rip+0x230f9]        # 0x4594d0
  4363d7:	test   r15d,r15d
  4363da:	je     0x436163
  4363e0:	jmp    0x4361c3
  4363e5:	mov    edx,DWORD PTR [rip+0xbd4d]        # 0x442138
  4363eb:	cmp    DWORD PTR [rip+0x230ef],edx        # 0x4594e0
  4363f1:	jle    0x4363f9
  4363f3:	mov    DWORD PTR [rip+0x230e7],edx        # 0x4594e0
  4363f9:	cmp    edx,DWORD PTR [rip+0x230e5]        # 0x4594e4
  4363ff:	jge    0x436407
  436401:	mov    DWORD PTR [rip+0x230dd],edx        # 0x4594e4
  436407:	mov    ebx,DWORD PTR [rip+0x230e3]        # 0x4594f0
  43640d:	cmp    ebx,0x1
  436410:	je     0x436590
  436416:	cmp    r12d,edx
  436419:	je     0x436602
  43641f:	mov    rdi,QWORD PTR [rsp+0xc8]
  436427:	movsxd rax,edx
  43642a:	mov    ecx,0x3
  43642f:	mov    rax,QWORD PTR [rdi+rax*8]
  436433:	lea    rdi,[rip+0x19f46]        # 0x450380
  43643a:	mov    rsi,rax
  43643d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43643f:	jne    0x436550
  436445:	mov    eax,DWORD PTR [rip+0x23099]        # 0x4594e4
  43644b:	mov    ecx,DWORD PTR [rip+0x2308f]        # 0x4594e0
  436451:	add    edx,0x1
  436454:	mov    DWORD PTR [rip+0xbcde],edx        # 0x442138
  43645a:	cmp    eax,ecx
  43645c:	je     0x436790
  436462:	cmp    edx,ecx
  436464:	je     0x436479
  436466:	mov    rcx,QWORD PTR [rsp+0xc8]
  43646e:	call   0x436020
  436473:	mov    eax,DWORD PTR [rip+0x2306b]        # 0x4594e4
  436479:	cmp    r12d,eax
  43647c:	mov    DWORD PTR [rip+0x2305d],r12d        # 0x4594e0
  436483:	mov    DWORD PTR [rip+0xbcae],r12d        # 0x442138
  43648a:	jne    0x436618
  436490:	mov    eax,0xffffffff
  436495:	jmp    0x436576
  43649a:	nop    WORD PTR [rax+rax*1+0x0]
  4364a0:	mov    rax,QWORD PTR [rsp+0xd0]
  4364a8:	lea    rbx,[rsi+0x1]
  4364ac:	mov    QWORD PTR [rip+0x23045],rbx        # 0x4594f8
  4364b3:	movzx  eax,BYTE PTR [rax]
  4364b6:	test   al,al
  4364b8:	je     0x4364e4
  4364ba:	cmp    al,dil
  4364bd:	je     0x4366a8
  4364c3:	mov    rax,QWORD PTR [rsp+0xd0]
  4364cb:	jmp    0x4364d9
  4364cd:	nop    DWORD PTR [rax]
  4364d0:	cmp    dl,dil
  4364d3:	je     0x4366b0
  4364d9:	add    rax,0x1
  4364dd:	movzx  edx,BYTE PTR [rax]
  4364e0:	test   dl,dl
  4364e2:	jne    0x4364d0
  4364e4:	cmp    BYTE PTR [rsi+0x1],0x0
  4364e8:	jne    0x436500
  4364ea:	mov    edx,0x1
  4364ef:	xor    eax,eax
  4364f1:	add    DWORD PTR [rip+0xbc40],0x1        # 0x442138
  4364f8:	test   dl,dl
  4364fa:	je     0x4366f0
  436500:	mov    r8d,DWORD PTR [rip+0xbc2d]        # 0x442134
  436507:	test   r8d,r8d
  43650a:	je     0x436541
  43650c:	cmp    QWORD PTR [rip+0x22fd4],0x0        # 0x4594e8
  436514:	mov    rax,QWORD PTR [rsp+0xc8]
  43651c:	mov    rbx,QWORD PTR [rax]
  43651f:	je     0x4369b0
  436525:	call   QWORD PTR [rip+0x250f1]        # 0x45b61c
  43652b:	lea    rdx,[rip+0x19f3f]        # 0x450471
  436532:	lea    rcx,[rax+0x60]
  436536:	mov    r9d,edi
  436539:	mov    r8,rbx
  43653c:	call   0x43f120
  436541:	mov    DWORD PTR [rip+0xbbe9],edi        # 0x442130
  436547:	mov    eax,0x3f
  43654c:	jmp    0x436576
  43654e:	xchg   ax,ax
  436550:	cmp    BYTE PTR [rax],0x2d
  436553:	je     0x436650
  436559:	test   ebx,ebx
  43655b:	je     0x436490
  436561:	add    edx,0x1
  436564:	mov    QWORD PTR [rip+0x22f6d],rax        # 0x4594d8
  43656b:	mov    eax,0x1
  436570:	mov    DWORD PTR [rip+0xbbc2],edx        # 0x442138
  436576:	add    rsp,0x78
  43657a:	pop    rbx
  43657b:	pop    rsi
  43657c:	pop    rdi
  43657d:	pop    rbp
  43657e:	pop    r12
  436580:	pop    r13
  436582:	pop    r14
  436584:	pop    r15
  436586:	ret    
  436587:	nop    WORD PTR [rax+rax*1+0x0]
  436590:	mov    eax,DWORD PTR [rip+0x22f4a]        # 0x4594e0
  436596:	cmp    DWORD PTR [rip+0x22f48],eax        # 0x4594e4
  43659c:	je     0x436862
  4365a2:	cmp    edx,eax
  4365a4:	je     0x4365b9
  4365a6:	mov    rcx,QWORD PTR [rsp+0xc8]
  4365ae:	call   0x436020
  4365b3:	mov    eax,DWORD PTR [rip+0xbb7f]        # 0x442138
  4365b9:	cmp    r12d,eax
  4365bc:	jle    0x4366d0
  4365c2:	mov    rdi,QWORD PTR [rsp+0xc8]
  4365ca:	movsxd rdx,eax
  4365cd:	lea    rdx,[rdi+rdx*8]
  4365d1:	jmp    0x4365e9
  4365d3:	add    eax,0x1
  4365d6:	add    rdx,0x8
  4365da:	cmp    eax,r12d
  4365dd:	mov    DWORD PTR [rip+0xbb55],eax        # 0x442138
  4365e3:	je     0x4366d0
  4365e9:	mov    rcx,QWORD PTR [rdx]
  4365ec:	cmp    BYTE PTR [rcx],0x2d
  4365ef:	jne    0x4365d3
  4365f1:	cmp    BYTE PTR [rcx+0x1],0x0
  4365f5:	je     0x4365d3
  4365f7:	mov    edx,DWORD PTR [rip+0xbb3b]        # 0x442138
  4365fd:	jmp    0x4366d2
  436602:	mov    r12d,DWORD PTR [rip+0x22ed7]        # 0x4594e0
  436609:	mov    eax,DWORD PTR [rip+0x22ed5]        # 0x4594e4
  43660f:	cmp    r12d,eax
  436612:	je     0x436490
  436618:	mov    DWORD PTR [rip+0xbb1a],eax        # 0x442138
  43661e:	mov    eax,0xffffffff
  436623:	jmp    0x436576
  436628:	nop    DWORD PTR [rax+rax*1+0x0]
  436630:	mov    DWORD PTR [rip+0x22eb6],0x0        # 0x4594f0
  43663a:	add    QWORD PTR [rsp+0xd0],0x1
  436643:	jmp    0x4361b9
  436648:	nop    DWORD PTR [rax+rax*1+0x0]
  436650:	movzx  ecx,BYTE PTR [rax+0x1]
  436654:	test   cl,cl
  436656:	je     0x436559
  43665c:	cmp    cl,0x2d
  43665f:	sete   dl
  436662:	xor    ecx,ecx
  436664:	cmp    QWORD PTR [rsp+0xd8],0x0
  43666d:	setne  cl
  436670:	and    rdx,rcx
  436673:	lea    rsi,[rax+rdx*1+0x1]
  436678:	mov    QWORD PTR [rip+0x22e79],rsi        # 0x4594f8
  43667f:	movsx  edi,BYTE PTR [rsi]
  436682:	jmp    0x4361df
  436687:	nop    WORD PTR [rax+rax*1+0x0]
  436690:	mov    DWORD PTR [rip+0x22e56],0x2        # 0x4594f0
  43669a:	add    QWORD PTR [rsp+0xd0],0x1
  4366a3:	jmp    0x4361b9
  4366a8:	mov    rax,QWORD PTR [rsp+0xd0]
  4366b0:	test   rax,rax
  4366b3:	sete   cl
  4366b6:	cmp    dil,0x3a
  4366ba:	sete   dl
  4366bd:	or     edx,ecx
  4366bf:	cmp    BYTE PTR [rsi+0x1],0x0
  4366c3:	je     0x4364f1
  4366c9:	jmp    0x4364f8
  4366ce:	xchg   ax,ax
  4366d0:	mov    edx,eax
  4366d2:	cmp    r12d,edx
  4366d5:	mov    DWORD PTR [rip+0x22e05],eax        # 0x4594e0
  4366db:	jne    0x43641f
  4366e1:	jmp    0x436602
  4366e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4366f0:	cmp    BYTE PTR [rax],0x57
  4366f3:	movzx  edx,BYTE PTR [rax+0x1]
  4366f7:	je     0x436892
  4366fd:	cmp    dl,0x3a
  436700:	je     0x43697a
  436706:	movsx  eax,dil
  43670a:	jmp    0x436576
  43670f:	nop
  436710:	test   r13,r13
  436713:	je     0x4367b7
  436719:	mov    r14d,DWORD PTR [rsp+0x68]
  43671e:	mov    rbx,r13
  436721:	mov    eax,DWORD PTR [rsp+0x3c]
  436725:	add    eax,0x1
  436728:	mov    DWORD PTR [rip+0xba0a],eax        # 0x442138
  43672e:	cmp    BYTE PTR [rbp+0x0],0x0
  436732:	jne    0x43679d
  436734:	cmp    DWORD PTR [rbx+0x8],0x1
  436738:	je     0x436a8d
  43673e:	mov    rcx,rsi
  436741:	call   0x43f028
  436746:	add    rsi,rax
  436749:	cmp    QWORD PTR [rsp+0xe0],0x0
  436752:	mov    QWORD PTR [rip+0x22d9f],rsi        # 0x4594f8
  436759:	je     0x436766
  43675b:	mov    rax,QWORD PTR [rsp+0xe0]
  436763:	mov    DWORD PTR [rax],r14d
  436766:	mov    rax,QWORD PTR [rbx+0x10]
  43676a:	test   rax,rax
  43676d:	je     0x436ae5
  436773:	mov    edx,DWORD PTR [rbx+0x18]
  436776:	mov    DWORD PTR [rax],edx
  436778:	xor    eax,eax
  43677a:	jmp    0x436576
  43677f:	nop
  436780:	mov    rbp,QWORD PTR [rsp+0x60]
  436785:	jmp    0x436721
  436787:	nop    WORD PTR [rax+rax*1+0x0]
  436790:	mov    DWORD PTR [rip+0x22d4e],edx        # 0x4594e4
  436796:	mov    eax,edx
  436798:	jmp    0x436479
  43679d:	mov    r12d,DWORD PTR [rbx+0x8]
  4367a1:	test   r12d,r12d
  4367a4:	je     0x4369d1
  4367aa:	add    rbp,0x1
  4367ae:	mov    QWORD PTR [rip+0x22d23],rbp        # 0x4594d8
  4367b5:	jmp    0x43673e
  4367b7:	cmp    BYTE PTR [rsp+0x48],0x2d
  4367bc:	sete   cl
  4367bf:	je     0x436804
  4367c1:	mov    r10d,DWORD PTR [rsp+0xe8]
  4367c9:	test   r10d,r10d
  4367cc:	je     0x436804
  4367ce:	mov    rax,QWORD PTR [rsp+0xd0]
  4367d6:	movzx  eax,BYTE PTR [rax]
  4367d9:	test   al,al
  4367db:	je     0x436804
  4367dd:	cmp    dil,al
  4367e0:	je     0x436f36
  4367e6:	mov    rax,QWORD PTR [rsp+0xd0]
  4367ee:	jmp    0x4367f9
  4367f0:	cmp    dl,dil
  4367f3:	je     0x436e46
  4367f9:	add    rax,0x1
  4367fd:	movzx  edx,BYTE PTR [rax]
  436800:	test   dl,dl
  436802:	jne    0x4367f0
  436804:	mov    r9d,DWORD PTR [rip+0xb929]        # 0x442134
  43680b:	test   r9d,r9d
  43680e:	je     0x436856
  436810:	test   cl,cl
  436812:	jne    0x436d14
  436818:	mov    rax,QWORD PTR [rsp+0x40]
  43681d:	movsx  edi,BYTE PTR [rax]
  436820:	mov    rax,QWORD PTR [rsp+0xc8]
  436828:	mov    rbx,QWORD PTR [rax]
  43682b:	call   QWORD PTR [rip+0x24deb]        # 0x45b61c
  436831:	lea    rdx,[rip+0x19c18]        # 0x450450
  436838:	lea    rcx,[rax+0x60]
  43683c:	mov    QWORD PTR [rsp+0x20],rsi
  436841:	mov    r9d,edi
  436844:	mov    r8,rbx
  436847:	call   0x43f120
  43684c:	mov    eax,DWORD PTR [rip+0xb8e6]        # 0x442138
  436852:	mov    DWORD PTR [rsp+0x3c],eax
  436856:	lea    rax,[rip+0x19c13]        # 0x450470
  43685d:	jmp    0x4363a5
  436862:	cmp    edx,eax
  436864:	je     0x4365b9
  43686a:	mov    DWORD PTR [rip+0x22c74],edx        # 0x4594e4
  436870:	mov    eax,edx
  436872:	jmp    0x4365b9
  436877:	nop    WORD PTR [rax+rax*1+0x0]
  436880:	lea    rbx,[rsi+0x1]
  436884:	mov    eax,ecx
  436886:	mov    QWORD PTR [rip+0x22c6b],rbx        # 0x4594f8
  43688d:	jmp    0x4364ba
  436892:	cmp    dl,0x3b
  436895:	jne    0x4366fd
  43689b:	cmp    BYTE PTR [rsi+0x1],0x0
  43689f:	je     0x436bbe
  4368a5:	add    DWORD PTR [rip+0xb88c],0x1        # 0x442138
  4368ac:	mov    QWORD PTR [rip+0x22c25],rbx        # 0x4594d8
  4368b3:	movzx  edi,BYTE PTR [rbx]
  4368b6:	mov    QWORD PTR [rip+0x22c3b],rbx        # 0x4594f8
  4368bd:	mov    rsi,rbx
  4368c0:	cmp    dil,0x3d
  4368c4:	jne    0x4368dd
  4368c6:	jmp    0x4368e2
  4368c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4368d0:	add    rsi,0x1
  4368d4:	movzx  edi,BYTE PTR [rsi]
  4368d7:	cmp    dil,0x3d
  4368db:	je     0x4368e2
  4368dd:	test   dil,dil
  4368e0:	jne    0x4368d0
  4368e2:	mov    rax,QWORD PTR [rsp+0xd8]
  4368ea:	mov    r15,QWORD PTR [rax]
  4368ed:	test   r15,r15
  4368f0:	je     0x436e31
  4368f6:	mov    r14,rsi
  4368f9:	xor    ecx,ecx
  4368fb:	mov    BYTE PTR [rsp+0x40],dil
  436900:	sub    r14,rbx
  436903:	mov    QWORD PTR [rsp+0x48],rsi
  436908:	mov    DWORD PTR [rsp+0xc0],r12d
  436910:	mov    eax,r14d
  436913:	xor    ebp,ebp
  436915:	mov    DWORD PTR [rsp+0x3c],0x0
  43691d:	xor    r13d,r13d
  436920:	mov    r12d,ecx
  436923:	mov    rsi,QWORD PTR [rsp+0xd8]
  43692b:	mov    rdi,rax
  43692e:	jmp    0x436949
  436930:	mov    r12d,0x1
  436936:	add    rsi,0x20
  43693a:	mov    r15,QWORD PTR [rsi]
  43693d:	add    ebp,0x1
  436940:	test   r15,r15
  436943:	je     0x436b33
  436949:	mov    r8,r14
  43694c:	mov    rdx,rbx
  43694f:	mov    rcx,r15
  436952:	call   0x43f018
  436957:	test   eax,eax
  436959:	jne    0x436936
  43695b:	mov    rcx,r15
  43695e:	call   0x43f028
  436963:	cmp    rdi,rax
  436966:	je     0x436cf5
  43696c:	test   r13,r13
  43696f:	jne    0x436930
  436971:	mov    DWORD PTR [rsp+0x3c],ebp
  436975:	mov    r13,rsi
  436978:	jmp    0x436936
  43697a:	cmp    BYTE PTR [rax+0x2],0x3a
  43697e:	je     0x436abd
  436984:	cmp    BYTE PTR [rsi+0x1],0x0
  436988:	je     0x436a58
  43698e:	add    DWORD PTR [rip+0xb7a3],0x1        # 0x442138
  436995:	mov    QWORD PTR [rip+0x22b3c],rbx        # 0x4594d8
  43699c:	movsx  eax,dil
  4369a0:	mov    QWORD PTR [rip+0x22b4d],0x0        # 0x4594f8
  4369ab:	jmp    0x436576
  4369b0:	call   QWORD PTR [rip+0x24c66]        # 0x45b61c
  4369b6:	lea    rdx,[rip+0x19ace]        # 0x45048b
  4369bd:	lea    rcx,[rax+0x60]
  4369c1:	mov    r9d,edi
  4369c4:	mov    r8,rbx
  4369c7:	call   0x43f120
  4369cc:	jmp    0x436541
  4369d1:	mov    edi,DWORD PTR [rip+0xb75d]        # 0x442134
  4369d7:	test   edi,edi
  4369d9:	je     0x43673e
  4369df:	mov    rax,QWORD PTR [rsp+0xc8]
  4369e7:	mov    rsi,QWORD PTR [rsp+0x50]
  4369ec:	mov    rax,QWORD PTR [rax+rsi*8]
  4369f0:	cmp    BYTE PTR [rax+0x1],0x2d
  4369f4:	je     0x436bff
  4369fa:	movsx  edi,BYTE PTR [rax]
  4369fd:	mov    rax,QWORD PTR [rsp+0xc8]
  436a05:	mov    rbp,QWORD PTR [rbx]
  436a08:	mov    rsi,QWORD PTR [rax]
  436a0b:	call   QWORD PTR [rip+0x24c0b]        # 0x45b61c
  436a11:	lea    rdx,[rip+0x199c0]        # 0x4503d8
  436a18:	lea    rcx,[rax+0x60]
  436a1c:	mov    QWORD PTR [rsp+0x20],rbp
  436a21:	mov    r9d,edi
  436a24:	mov    r8,rsi
  436a27:	call   0x43f120
  436a2c:	mov    rsi,QWORD PTR [rip+0x22ac5]        # 0x4594f8
  436a33:	mov    rcx,rsi
  436a36:	call   0x43f028
  436a3b:	add    rax,rsi
  436a3e:	mov    QWORD PTR [rip+0x22ab3],rax        # 0x4594f8
  436a45:	mov    eax,DWORD PTR [rbx+0x18]
  436a48:	mov    DWORD PTR [rip+0xb6e2],eax        # 0x442130
  436a4e:	mov    eax,0x3f
  436a53:	jmp    0x436576
  436a58:	movsxd rax,DWORD PTR [rip+0xb6d9]        # 0x442138
  436a5f:	cmp    eax,r12d
  436a62:	je     0x436c2e
  436a68:	mov    rsi,QWORD PTR [rsp+0xc8]
  436a70:	lea    edx,[rax+0x1]
  436a73:	mov    DWORD PTR [rip+0xb6bf],edx        # 0x442138
  436a79:	mov    rax,QWORD PTR [rsi+rax*8]
  436a7d:	mov    QWORD PTR [rip+0x22a54],rax        # 0x4594d8
  436a84:	movsx  eax,dil
  436a88:	jmp    0x4369a0
  436a8d:	cmp    r12d,eax
  436a90:	jle    0x436aed
  436a92:	mov    eax,DWORD PTR [rsp+0x3c]
  436a96:	mov    rdi,QWORD PTR [rsp+0x58]
  436a9b:	add    eax,0x2
  436a9e:	mov    DWORD PTR [rip+0xb694],eax        # 0x442138
  436aa4:	mov    rax,QWORD PTR [rsp+0xc8]
  436aac:	mov    rax,QWORD PTR [rax+rdi*1+0x8]
  436ab1:	mov    QWORD PTR [rip+0x22a20],rax        # 0x4594d8
  436ab8:	jmp    0x43673e
  436abd:	cmp    BYTE PTR [rsi+0x1],0x0
  436ac1:	je     0x436bef
  436ac7:	add    DWORD PTR [rip+0xb66a],0x1        # 0x442138
  436ace:	mov    QWORD PTR [rip+0x22a03],rbx        # 0x4594d8
  436ad5:	mov    QWORD PTR [rip+0x22a18],0x0        # 0x4594f8
  436ae0:	jmp    0x436706
  436ae5:	mov    eax,DWORD PTR [rbx+0x18]
  436ae8:	jmp    0x436576
  436aed:	mov    r11d,DWORD PTR [rip+0xb640]        # 0x442134
  436af4:	test   r11d,r11d
  436af7:	jne    0x436d4a
  436afd:	mov    rcx,rsi
  436b00:	call   0x43f028
  436b05:	add    rax,rsi
  436b08:	mov    QWORD PTR [rip+0x229e9],rax        # 0x4594f8
  436b0f:	mov    eax,DWORD PTR [rbx+0x18]
  436b12:	mov    DWORD PTR [rip+0xb618],eax        # 0x442130
  436b18:	mov    rax,QWORD PTR [rsp+0xd0]
  436b20:	cmp    BYTE PTR [rax],0x3a
  436b23:	jne    0x436547
  436b29:	mov    eax,0x3a
  436b2e:	jmp    0x436576
  436b33:	mov    eax,r12d
  436b36:	movzx  edi,BYTE PTR [rsp+0x40]
  436b3b:	mov    rsi,QWORD PTR [rsp+0x48]
  436b40:	test   eax,eax
  436b42:	mov    r12d,DWORD PTR [rsp+0xc0]
  436b4a:	je     0x436c5c
  436b50:	mov    edx,DWORD PTR [rip+0xb5de]        # 0x442134
  436b56:	test   edx,edx
  436b58:	je     0x436b9b
  436b5a:	movsxd rax,DWORD PTR [rip+0xb5d7]        # 0x442138
  436b61:	mov    rsi,QWORD PTR [rsp+0xc8]
  436b69:	mov    rsi,QWORD PTR [rsi+rax*8]
  436b6d:	mov    rax,QWORD PTR [rsp+0xc8]
  436b75:	mov    rbx,QWORD PTR [rax]
  436b78:	call   QWORD PTR [rip+0x24a9e]        # 0x45b61c
  436b7e:	lea    rdx,[rip+0x1994b]        # 0x4504d0
  436b85:	lea    rcx,[rax+0x60]
  436b89:	mov    r9,rsi
  436b8c:	mov    r8,rbx
  436b8f:	call   0x43f120
  436b94:	mov    rbx,QWORD PTR [rip+0x2295d]        # 0x4594f8
  436b9b:	mov    rcx,rbx
  436b9e:	call   0x43f028
  436ba3:	add    rax,rbx
  436ba6:	add    DWORD PTR [rip+0xb58b],0x1        # 0x442138
  436bad:	mov    QWORD PTR [rip+0x22944],rax        # 0x4594f8
  436bb4:	mov    eax,0x3f
  436bb9:	jmp    0x436576
  436bbe:	movsxd rax,DWORD PTR [rip+0xb573]        # 0x442138
  436bc5:	cmp    eax,r12d
  436bc8:	je     0x436d86
  436bce:	mov    rsi,QWORD PTR [rsp+0xc8]
  436bd6:	lea    edx,[rax+0x1]
  436bd9:	mov    DWORD PTR [rip+0xb559],edx        # 0x442138
  436bdf:	mov    rbx,QWORD PTR [rsi+rax*8]
  436be3:	mov    QWORD PTR [rip+0x228ee],rbx        # 0x4594d8
  436bea:	jmp    0x4368b3
  436bef:	mov    QWORD PTR [rip+0x228de],0x0        # 0x4594d8
  436bfa:	jmp    0x436ad5
  436bff:	mov    rax,QWORD PTR [rsp+0xc8]
  436c07:	mov    rdi,QWORD PTR [rbx]
  436c0a:	mov    rsi,QWORD PTR [rax]
  436c0d:	call   QWORD PTR [rip+0x24a09]        # 0x45b61c
  436c13:	lea    rdx,[rip+0x1978e]        # 0x4503a8
  436c1a:	lea    rcx,[rax+0x60]
  436c1e:	mov    r9,rdi
  436c21:	mov    r8,rsi
  436c24:	call   0x43f120
  436c29:	jmp    0x436a2c
  436c2e:	mov    eax,DWORD PTR [rip+0xb500]        # 0x442134
  436c34:	test   eax,eax
  436c36:	jne    0x436e56
  436c3c:	mov    rax,QWORD PTR [rsp+0xd0]
  436c44:	mov    DWORD PTR [rip+0xb4e6],edi        # 0x442130
  436c4a:	cmp    BYTE PTR [rax],0x3a
  436c4d:	setne  al
  436c50:	movzx  eax,al
  436c53:	lea    eax,[rax+rax*4+0x3a]
  436c57:	jmp    0x4369a0
  436c5c:	test   r13,r13
  436c5f:	je     0x436e31
  436c65:	mov    ebp,DWORD PTR [rsp+0x3c]
  436c69:	mov    QWORD PTR [rsp+0xd8],r13
  436c71:	test   dil,dil
  436c74:	mov    rax,QWORD PTR [rsp+0xd8]
  436c7c:	je     0x436dd7
  436c82:	cmp    DWORD PTR [rax+0x8],0x0
  436c86:	jne    0x436eaf
  436c8c:	cmp    DWORD PTR [rip+0xb4a1],0x0        # 0x442134
  436c93:	je     0x436cc7
  436c95:	mov    rax,QWORD PTR [rsp+0xd8]
  436c9d:	mov    rsi,QWORD PTR [rax]
  436ca0:	mov    rax,QWORD PTR [rsp+0xc8]
  436ca8:	mov    rbx,QWORD PTR [rax]
  436cab:	call   QWORD PTR [rip+0x2496b]        # 0x45b61c
  436cb1:	lea    rdx,[rip+0x19840]        # 0x4504f8
  436cb8:	lea    rcx,[rax+0x60]
  436cbc:	mov    r9,rsi
  436cbf:	mov    r8,rbx
  436cc2:	call   0x43f120
  436cc7:	mov    rdx,QWORD PTR [rip+0x2282a]        # 0x4594f8
  436cce:	xor    eax,eax
  436cd0:	or     rcx,0xffffffffffffffff
  436cd4:	mov    rdi,rdx
  436cd7:	repnz scas al,BYTE PTR es:[rdi]
  436cd9:	mov    rax,rcx
  436cdc:	not    rax
  436cdf:	lea    rax,[rdx+rax*1-0x1]
  436ce4:	mov    QWORD PTR [rip+0x2280d],rax        # 0x4594f8
  436ceb:	mov    eax,0x3f
  436cf0:	jmp    0x436576
  436cf5:	mov    QWORD PTR [rsp+0xd8],rsi
  436cfd:	movzx  edi,BYTE PTR [rsp+0x40]
  436d02:	mov    r12d,DWORD PTR [rsp+0xc0]
  436d0a:	mov    rsi,QWORD PTR [rsp+0x48]
  436d0f:	jmp    0x436c71
  436d14:	mov    rax,QWORD PTR [rsp+0xc8]
  436d1c:	mov    rbx,QWORD PTR [rax]
  436d1f:	call   QWORD PTR [rip+0x248f7]        # 0x45b61c
  436d25:	lea    rdx,[rip+0x19704]        # 0x450430
  436d2c:	lea    rcx,[rax+0x60]
  436d30:	mov    r9,rsi
  436d33:	mov    r8,rbx
  436d36:	call   0x43f120
  436d3b:	mov    eax,DWORD PTR [rip+0xb3f7]        # 0x442138
  436d41:	mov    DWORD PTR [rsp+0x3c],eax
  436d45:	jmp    0x436856
  436d4a:	mov    rax,QWORD PTR [rsp+0xc8]
  436d52:	mov    rsi,QWORD PTR [rsp+0x50]
  436d57:	mov    rdi,QWORD PTR [rax+rsi*8]
  436d5b:	mov    rsi,QWORD PTR [rax]
  436d5e:	call   QWORD PTR [rip+0x248b8]        # 0x45b61c
  436d64:	lea    rdx,[rip+0x1969d]        # 0x450408
  436d6b:	lea    rcx,[rax+0x60]
  436d6f:	mov    r8,rsi
  436d72:	mov    r9,rdi
  436d75:	call   0x43f120
  436d7a:	mov    rsi,QWORD PTR [rip+0x22777]        # 0x4594f8
  436d81:	jmp    0x436afd
  436d86:	mov    ecx,DWORD PTR [rip+0xb3a8]        # 0x442134
  436d8c:	test   ecx,ecx
  436d8e:	je     0x436db7
  436d90:	mov    rax,QWORD PTR [rsp+0xc8]
  436d98:	mov    rbx,QWORD PTR [rax]
  436d9b:	call   QWORD PTR [rip+0x2487b]        # 0x45b61c
  436da1:	lea    rdx,[rip+0x19700]        # 0x4504a8
  436da8:	lea    rcx,[rax+0x60]
  436dac:	mov    r9d,edi
  436daf:	mov    r8,rbx
  436db2:	call   0x43f120
  436db7:	mov    rax,QWORD PTR [rsp+0xd0]
  436dbf:	mov    DWORD PTR [rip+0xb36b],edi        # 0x442130
  436dc5:	cmp    BYTE PTR [rax],0x3a
  436dc8:	setne  al
  436dcb:	movzx  eax,al
  436dce:	lea    eax,[rax+rax*4+0x3a]
  436dd2:	jmp    0x436576
  436dd7:	cmp    DWORD PTR [rax+0x8],0x1
  436ddb:	je     0x436e82
  436de1:	mov    rcx,rbx
  436de4:	call   0x43f028
  436de9:	add    rbx,rax
  436dec:	cmp    QWORD PTR [rsp+0xe0],0x0
  436df5:	mov    QWORD PTR [rip+0x226fc],rbx        # 0x4594f8
  436dfc:	je     0x436e08
  436dfe:	mov    rax,QWORD PTR [rsp+0xe0]
  436e06:	mov    DWORD PTR [rax],ebp
  436e08:	mov    rax,QWORD PTR [rsp+0xd8]
  436e10:	mov    rax,QWORD PTR [rax+0x10]
  436e14:	test   rax,rax
  436e17:	je     0x436f4e
  436e1d:	mov    rsi,QWORD PTR [rsp+0xd8]
  436e25:	mov    edx,DWORD PTR [rsi+0x18]
  436e28:	mov    DWORD PTR [rax],edx
  436e2a:	xor    eax,eax
  436e2c:	jmp    0x436576
  436e31:	mov    QWORD PTR [rip+0x226bc],0x0        # 0x4594f8
  436e3c:	mov    eax,0x57
  436e41:	jmp    0x436576
  436e46:	lea    rbx,[rsi+0x1]
  436e4a:	mov    QWORD PTR [rip+0x226a7],rbx        # 0x4594f8
  436e51:	jmp    0x4364c3
  436e56:	mov    rax,QWORD PTR [rsp+0xc8]
  436e5e:	mov    rbx,QWORD PTR [rax]
  436e61:	call   QWORD PTR [rip+0x247b5]        # 0x45b61c
  436e67:	lea    rdx,[rip+0x1963a]        # 0x4504a8
  436e6e:	lea    rcx,[rax+0x60]
  436e72:	mov    r9d,edi
  436e75:	mov    r8,rbx
  436e78:	call   0x43f120
  436e7d:	jmp    0x436c3c
  436e82:	movsxd rax,DWORD PTR [rip+0xb2af]        # 0x442138
  436e89:	cmp    r12d,eax
  436e8c:	jle    0x436ebf
  436e8e:	mov    rsi,QWORD PTR [rsp+0xc8]
  436e96:	lea    edx,[rax+0x1]
  436e99:	mov    DWORD PTR [rip+0xb299],edx        # 0x442138
  436e9f:	mov    rax,QWORD PTR [rsi+rax*8]
  436ea3:	mov    QWORD PTR [rip+0x2262e],rax        # 0x4594d8
  436eaa:	jmp    0x436de1
  436eaf:	add    rsi,0x1
  436eb3:	mov    QWORD PTR [rip+0x2261e],rsi        # 0x4594d8
  436eba:	jmp    0x436de1
  436ebf:	cmp    DWORD PTR [rip+0xb26e],0x0        # 0x442134
  436ec6:	je     0x436efc
  436ec8:	mov    rsi,QWORD PTR [rsp+0xc8]
  436ed0:	mov    rsi,QWORD PTR [rsi+rax*8-0x8]
  436ed5:	mov    rax,QWORD PTR [rsp+0xc8]
  436edd:	mov    rbx,QWORD PTR [rax]
  436ee0:	call   QWORD PTR [rip+0x24736]        # 0x45b61c
  436ee6:	lea    rdx,[rip+0x1951b]        # 0x450408
  436eed:	lea    rcx,[rax+0x60]
  436ef1:	mov    r9,rsi
  436ef4:	mov    r8,rbx
  436ef7:	call   0x43f120
  436efc:	mov    rdx,QWORD PTR [rip+0x225f5]        # 0x4594f8
  436f03:	xor    eax,eax
  436f05:	or     rcx,0xffffffffffffffff
  436f09:	mov    rdi,rdx
  436f0c:	repnz scas al,BYTE PTR es:[rdi]
  436f0e:	mov    rax,rcx
  436f11:	not    rax
  436f14:	lea    rax,[rdx+rax*1-0x1]
  436f19:	mov    QWORD PTR [rip+0x225d8],rax        # 0x4594f8
  436f20:	mov    rax,QWORD PTR [rsp+0xd0]
  436f28:	cmp    BYTE PTR [rax],0x3a
  436f2b:	jne    0x436547
  436f31:	jmp    0x436b29
  436f36:	lea    rbx,[rsi+0x1]
  436f3a:	mov    rax,QWORD PTR [rsp+0xd0]
  436f42:	mov    QWORD PTR [rip+0x225af],rbx        # 0x4594f8
  436f49:	jmp    0x4366b0
  436f4e:	mov    rax,QWORD PTR [rsp+0xd8]
  436f56:	mov    eax,DWORD PTR [rax+0x18]
  436f59:	jmp    0x436576
  436f5e:	xchg   ax,ax
  436f60:	sub    rsp,0x38
  436f64:	xor    r9d,r9d
  436f67:	mov    DWORD PTR [rsp+0x28],0x0
  436f6f:	mov    QWORD PTR [rsp+0x20],0x0
  436f78:	call   0x436110
  436f7d:	add    rsp,0x38
  436f81:	ret    
  436f82:	nop
  436f83:	nop
  436f84:	nop
  436f85:	nop
  436f86:	nop
  436f87:	nop
  436f88:	nop
  436f89:	nop
  436f8a:	nop
  436f8b:	nop
  436f8c:	nop
  436f8d:	nop
  436f8e:	nop
  436f8f:	nop
  436f90:	sub    rsp,0x38
  436f94:	mov    rax,QWORD PTR [rsp+0x60]
  436f99:	mov    DWORD PTR [rsp+0x28],0x0
  436fa1:	mov    QWORD PTR [rsp+0x20],rax
  436fa6:	call   0x436110
  436fab:	add    rsp,0x38
  436faf:	ret    
  436fb0:	sub    rsp,0x38
  436fb4:	mov    rax,QWORD PTR [rsp+0x60]
  436fb9:	mov    DWORD PTR [rsp+0x28],0x1
  436fc1:	mov    QWORD PTR [rsp+0x20],rax
  436fc6:	call   0x436110
  436fcb:	add    rsp,0x38
  436fcf:	ret    
  436fd0:	xor    eax,eax
  436fd2:	cmp    rcx,rdx
  436fd5:	sete   al
  436fd8:	ret    
  436fd9:	nop    DWORD PTR [rax+0x0]
  436fe0:	mov    rdx,rcx
  436fe3:	lea    r8d,[rcx+0x5c242785]
  436fea:	sar    rdx,0x20
  436fee:	sub    edx,ecx
  436ff0:	mov    ecx,0x42135234
  436ff5:	sub    edx,0x42135234
  436ffb:	xor    edx,0x2109a
  437001:	mov    eax,edx
  437003:	sub    r8d,edx
  437006:	sub    ecx,edx
  437008:	shl    eax,0x8
  43700b:	xor    r8d,eax
  43700e:	mov    eax,r8d
  437011:	sub    ecx,r8d
  437014:	sub    edx,r8d
  437017:	shr    eax,0xd
  43701a:	xor    ecx,eax
  43701c:	mov    eax,ecx
  43701e:	sub    edx,ecx
  437020:	sub    r8d,ecx
  437023:	shr    eax,0xc
  437026:	xor    edx,eax
  437028:	mov    eax,edx
  43702a:	sub    r8d,edx
  43702d:	sub    ecx,edx
  43702f:	shl    eax,0x10
  437032:	xor    r8d,eax
  437035:	mov    eax,r8d
  437038:	sub    ecx,r8d
  43703b:	sub    edx,r8d
  43703e:	shr    eax,0x5
  437041:	xor    ecx,eax
  437043:	mov    eax,ecx
  437045:	sub    edx,ecx
  437047:	sub    r8d,ecx
  43704a:	shr    eax,0x3
  43704d:	xor    edx,eax
  43704f:	mov    eax,edx
  437051:	sub    r8d,edx
  437054:	sub    ecx,edx
  437056:	shl    eax,0xa
  437059:	xor    eax,r8d
  43705c:	sub    ecx,eax
  43705e:	shr    eax,0xf
  437061:	xor    eax,ecx
  437063:	ret    
  437064:	xchg   ax,ax
  437066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437070:	push   rbx
  437071:	sub    rsp,0x20
  437075:	xor    r8d,r8d
  437078:	mov    eax,0x1e
  43707d:	lea    r10,[rip+0x1953c]        # 0x4505c0
  437084:	jmp    0x437099
  437086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437090:	lea    r8d,[rdx+0x1]
  437094:	cmp    r8d,eax
  437097:	je     0x4370d7
  437099:	mov    edx,eax
  43709b:	sub    edx,r8d
  43709e:	shr    edx,1
  4370a0:	lea    r9d,[rdx+r8*1]
  4370a4:	mov    rdx,r9
  4370a7:	shl    r9,0x4
  4370ab:	cmp    ecx,DWORD PTR [r10+r9*1]
  4370af:	ja     0x437090
  4370b1:	cmp    edx,r8d
  4370b4:	mov    eax,edx
  4370b6:	je     0x4370d7
  4370b8:	sub    edx,r8d
  4370bb:	shr    edx,1
  4370bd:	lea    r9d,[rdx+r8*1]
  4370c1:	mov    rdx,r9
  4370c4:	shl    r9,0x4
  4370c8:	cmp    DWORD PTR [r10+r9*1],ecx
  4370cc:	jae    0x4370b1
  4370ce:	lea    r8d,[rdx+0x1]
  4370d2:	cmp    r8d,eax
  4370d5:	jne    0x437099
  4370d7:	mov    edx,eax
  4370d9:	shl    rdx,0x4
  4370dd:	cmp    ecx,DWORD PTR [r10+rdx*1]
  4370e1:	ja     0x4370e9
  4370e3:	add    rsp,0x20
  4370e7:	pop    rbx
  4370e8:	ret    
  4370e9:	mov    ebx,ecx
  4370eb:	call   QWORD PTR [rip+0x2452b]        # 0x45b61c
  4370f1:	lea    rdx,[rip+0x19448]        # 0x450540
  4370f8:	lea    rcx,[rax+0x60]
  4370fc:	mov    r8d,ebx
  4370ff:	call   0x43f120
  437104:	call   0x43f180
  437109:	nop
  43710a:	nop    WORD PTR [rax+rax*1+0x0]
  437110:	push   r15
  437112:	push   r14
  437114:	push   r13
  437116:	push   r12
  437118:	push   rbp
  437119:	push   rdi
  43711a:	push   rsi
  43711b:	push   rbx
  43711c:	sub    rsp,0x38
  437120:	mov    rdx,QWORD PTR [rcx+0x28]
  437124:	sub    rdx,QWORD PTR [rcx+0x30]
  437128:	mov    rbx,QWORD PTR [rcx+0x20]
  43712c:	mov    rdi,QWORD PTR [rcx+0x18]
  437130:	mov    r12,rcx
  437133:	mov    ebp,DWORD PTR [rcx+0x68]
  437136:	lea    rax,[rdx+rdx*1]
  43713a:	lea    rsi,[rdi+rbx*8]
  43713e:	cmp    rbx,rax
  437141:	jb     0x437156
  437143:	lea    rax,[rdx*8+0x0]
  43714b:	cmp    rbx,rax
  43714e:	jbe    0x437171
  437150:	cmp    rbx,0x20
  437154:	jbe    0x437171
  437156:	lea    ecx,[rdx+rdx*1]
  437159:	call   0x437070
  43715e:	lea    rdx,[rip+0x1945b]        # 0x4505c0
  437165:	mov    eax,eax
  437167:	mov    rbp,rax
  43716a:	shl    rax,0x4
  43716e:	mov    ebx,DWORD PTR [rdx+rax*1]
  437171:	mov    rax,QWORD PTR [r12+0x58]
  437176:	test   rax,rax
  437179:	je     0x4372f0
  43717f:	mov    rcx,QWORD PTR [r12+0x50]
  437184:	mov    r8d,0x8
  43718a:	mov    rdx,rbx
  43718d:	call   rax
  43718f:	test   rax,rax
  437192:	je     0x437306
  437198:	mov    QWORD PTR [r12+0x18],rax
  43719d:	mov    DWORD PTR [r12+0x68],ebp
  4371a2:	mov    rbp,rdi
  4371a5:	mov    rax,QWORD PTR [r12+0x30]
  4371aa:	mov    QWORD PTR [r12+0x20],rbx
  4371af:	sub    QWORD PTR [r12+0x28],rax
  4371b4:	mov    QWORD PTR [r12+0x30],0x0
  4371bd:	jmp    0x4371cd
  4371bf:	nop
  4371c0:	add    rbp,0x8
  4371c4:	cmp    rsi,rbp
  4371c7:	jbe    0x4372a7
  4371cd:	mov    rbx,QWORD PTR [rbp+0x0]
  4371d1:	cmp    rbx,0x1
  4371d5:	jbe    0x4371c0
  4371d7:	mov    rcx,rbx
  4371da:	call   QWORD PTR [r12]
  4371de:	mov    r10d,DWORD PTR [r12+0x68]
  4371e3:	lea    rcx,[rip+0x193d6]        # 0x4505c0
  4371ea:	mov    r14d,eax
  4371ed:	mov    r8d,eax
  4371f0:	mov    r15d,eax
  4371f3:	mov    r11,QWORD PTR [r12+0x18]
  4371f8:	mov    r9,QWORD PTR [r12+0x20]
  4371fd:	shl    r10,0x4
  437201:	add    r10,rcx
  437204:	mov    edx,DWORD PTR [r10+0x4]
  437208:	mov    ecx,DWORD PTR [r10+0xc]
  43720c:	mov    r13d,DWORD PTR [r10]
  43720f:	imul   rdx,r14
  437213:	shr    rdx,0x20
  437217:	sub    r8d,edx
  43721a:	shr    r8d,1
  43721d:	add    edx,r8d
  437220:	shr    edx,cl
  437222:	imul   edx,r13d
  437226:	sub    r15d,edx
  437229:	mov    r8d,r15d
  43722c:	mov    rdx,r8
  43722f:	lea    r8,[r11+r8*8]
  437233:	mov    r15,QWORD PTR [r8]
  437236:	test   r15,r15
  437239:	je     0x437297
  43723b:	cmp    r15,0x1
  43723f:	je     0x43730a
  437245:	mov    r8d,DWORD PTR [r10+0x8]
  437249:	lea    r10d,[rax+0x1]
  43724d:	sub    r13d,0x2
  437251:	imul   r14,r8
  437255:	shr    r14,0x20
  437259:	sub    eax,r14d
  43725c:	shr    eax,1
  43725e:	add    r14d,eax
  437261:	shr    r14d,cl
  437264:	imul   r14d,r13d
  437268:	sub    r10d,r14d
  43726b:	jmp    0x43727a
  43726d:	nop    DWORD PTR [rax]
  437270:	cmp    rax,0x1
  437274:	je     0x43730a
  43727a:	lea    eax,[rdx+r10*1]
  43727e:	cmp    r9,rax
  437281:	mov    rdx,rax
  437284:	ja     0x43728b
  437286:	sub    edx,r9d
  437289:	mov    eax,edx
  43728b:	lea    r8,[r11+rax*8]
  43728f:	mov    rax,QWORD PTR [r8]
  437292:	test   rax,rax
  437295:	jne    0x437270
  437297:	add    rbp,0x8
  43729b:	mov    QWORD PTR [r8],rbx
  43729e:	cmp    rsi,rbp
  4372a1:	ja     0x4371cd
  4372a7:	mov    rax,QWORD PTR [r12+0x48]
  4372ac:	test   rax,rax
  4372af:	je     0x4372cc
  4372b1:	mov    rcx,rdi
  4372b4:	call   rax
  4372b6:	mov    eax,0x1
  4372bb:	add    rsp,0x38
  4372bf:	pop    rbx
  4372c0:	pop    rsi
  4372c1:	pop    rdi
  4372c2:	pop    rbp
  4372c3:	pop    r12
  4372c5:	pop    r13
  4372c7:	pop    r14
  4372c9:	pop    r15
  4372cb:	ret    
  4372cc:	mov    r8,QWORD PTR [r12+0x60]
  4372d1:	mov    eax,0x1
  4372d6:	test   r8,r8
  4372d9:	je     0x4372bb
  4372db:	mov    DWORD PTR [rsp+0x2c],eax
  4372df:	mov    rcx,QWORD PTR [r12+0x50]
  4372e4:	mov    rdx,rdi
  4372e7:	call   r8
  4372ea:	mov    eax,DWORD PTR [rsp+0x2c]
  4372ee:	jmp    0x4372bb
  4372f0:	mov    edx,0x8
  4372f5:	mov    rcx,rbx
  4372f8:	call   QWORD PTR [r12+0x40]
  4372fd:	test   rax,rax
  437300:	jne    0x437198
  437306:	xor    eax,eax
  437308:	jmp    0x4372bb
  43730a:	call   0x43f180
  43730f:	nop
  437310:	mov    rax,QWORD PTR [rcx+0x20]
  437314:	ret    
  437315:	nop
  437316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437320:	mov    rax,QWORD PTR [rcx+0x28]
  437324:	sub    rax,QWORD PTR [rcx+0x30]
  437328:	ret    
  437329:	nop    DWORD PTR [rax+0x0]
  437330:	push   r15
  437332:	push   r14
  437334:	push   r13
  437336:	push   r12
  437338:	push   rbp
  437339:	push   rdi
  43733a:	push   rsi
  43733b:	push   rbx
  43733c:	sub    rsp,0x28
  437340:	mov    rbx,QWORD PTR [rsp+0x90]
  437348:	mov    rsi,QWORD PTR [rsp+0x98]
  437350:	mov    r15,rdx
  437353:	mov    r14,r8
  437356:	mov    r13,r9
  437359:	call   0x437070
  43735e:	lea    rdx,[rip+0x1925b]        # 0x4505c0
  437365:	mov    eax,eax
  437367:	mov    r8d,0x70
  43736d:	mov    rdi,rax
  437370:	shl    rax,0x4
  437374:	mov    rcx,rbx
  437377:	mov    ebp,DWORD PTR [rdx+rax*1]
  43737a:	mov    edx,0x1
  43737f:	call   rsi
  437381:	test   rax,rax
  437384:	mov    r12,rax
  437387:	je     0x4373fc
  437389:	mov    r8d,0x8
  43738f:	mov    rdx,rbp
  437392:	mov    rcx,rbx
  437395:	call   rsi
  437397:	test   rax,rax
  43739a:	mov    QWORD PTR [r12+0x18],rax
  43739f:	je     0x4373e4
  4373a1:	mov    rax,QWORD PTR [rsp+0xa0]
  4373a9:	mov    QWORD PTR [r12+0x20],rbp
  4373ae:	mov    DWORD PTR [r12+0x68],edi
  4373b3:	mov    QWORD PTR [r12],r15
  4373b7:	mov    QWORD PTR [r12+0x8],r14
  4373bc:	mov    QWORD PTR [r12+0x10],r13
  4373c1:	mov    QWORD PTR [r12+0x60],rax
  4373c6:	mov    QWORD PTR [r12+0x50],rbx
  4373cb:	mov    rax,r12
  4373ce:	mov    QWORD PTR [r12+0x58],rsi
  4373d3:	add    rsp,0x28
  4373d7:	pop    rbx
  4373d8:	pop    rsi
  4373d9:	pop    rdi
  4373da:	pop    rbp
  4373db:	pop    r12
  4373dd:	pop    r13
  4373df:	pop    r14
  4373e1:	pop    r15
  4373e3:	ret    
  4373e4:	cmp    QWORD PTR [rsp+0xa0],0x0
  4373ed:	je     0x4373fc
  4373ef:	mov    rdx,r12
  4373f2:	mov    rcx,rbx
  4373f5:	call   QWORD PTR [rsp+0xa0]
  4373fc:	xor    eax,eax
  4373fe:	jmp    0x4373d3
  437400:	push   r15
  437402:	push   r14
  437404:	push   r13
  437406:	push   r12
  437408:	push   rbp
  437409:	push   rdi
  43740a:	push   rsi
  43740b:	push   rbx
  43740c:	sub    rsp,0x28
  437410:	mov    rdi,QWORD PTR [rsp+0x98]
  437418:	mov    rbp,QWORD PTR [rsp+0xa0]
  437420:	mov    r14,rdx
  437423:	mov    r13,r8
  437426:	mov    r12,r9
  437429:	call   0x437070
  43742e:	mov    ecx,eax
  437430:	lea    rax,[rip+0x19189]        # 0x4505c0
  437437:	mov    edx,0x70
  43743c:	mov    rsi,rcx
  43743f:	shl    rcx,0x4
  437443:	mov    r15d,DWORD PTR [rax+rcx*1]
  437447:	mov    ecx,0x1
  43744c:	call   QWORD PTR [rsp+0x90]
  437453:	test   rax,rax
  437456:	mov    rbx,rax
  437459:	je     0x4374aa
  43745b:	mov    edx,0x8
  437460:	mov    rcx,r15
  437463:	call   rdi
  437465:	test   rax,rax
  437468:	mov    QWORD PTR [rbx+0x18],rax
  43746c:	je     0x4374a0
  43746e:	mov    QWORD PTR [rbx+0x20],r15
  437472:	mov    DWORD PTR [rbx+0x68],esi
  437475:	mov    rax,rbx
  437478:	mov    QWORD PTR [rbx],r14
  43747b:	mov    QWORD PTR [rbx+0x8],r13
  43747f:	mov    QWORD PTR [rbx+0x10],r12
  437483:	mov    QWORD PTR [rbx+0x40],rdi
  437487:	mov    QWORD PTR [rbx+0x48],rbp
  43748b:	add    rsp,0x28
  43748f:	pop    rbx
  437490:	pop    rsi
  437491:	pop    rdi
  437492:	pop    rbp
  437493:	pop    r12
  437495:	pop    r13
  437497:	pop    r14
  437499:	pop    r15
  43749b:	ret    
  43749c:	nop    DWORD PTR [rax+0x0]
  4374a0:	test   rbp,rbp
  4374a3:	je     0x4374aa
  4374a5:	mov    rcx,rbx
  4374a8:	call   rbp
  4374aa:	xor    eax,eax
  4374ac:	jmp    0x43748b
  4374ae:	xchg   ax,ax
  4374b0:	sub    rsp,0x48
  4374b4:	mov    rax,QWORD PTR [rsp+0x70]
  4374b9:	mov    r10,QWORD PTR [rsp+0x78]
  4374be:	mov    QWORD PTR [rsp+0x28],rax
  4374c3:	mov    QWORD PTR [rsp+0x30],r10
  4374c8:	mov    QWORD PTR [rsp+0x20],rax
  4374cd:	call   0x437400
  4374d2:	add    rsp,0x48
  4374d6:	ret    
  4374d7:	nop    WORD PTR [rax+rax*1+0x0]
  4374e0:	mov    rax,QWORD PTR [rsp+0x28]
  4374e5:	mov    QWORD PTR [rcx],rdx
  4374e8:	mov    QWORD PTR [rcx+0x8],r8
  4374ec:	mov    QWORD PTR [rcx+0x10],r9
  4374f0:	mov    QWORD PTR [rcx+0x50],rax
  4374f4:	mov    rax,QWORD PTR [rsp+0x30]
  4374f9:	mov    QWORD PTR [rcx+0x58],rax
  4374fd:	mov    rax,QWORD PTR [rsp+0x38]
  437502:	mov    QWORD PTR [rcx+0x60],rax
  437506:	ret    
  437507:	nop    WORD PTR [rax+rax*1+0x0]
  437510:	sub    rsp,0x48
  437514:	mov    rax,QWORD PTR [rip+0x1a115]        # 0x451630
  43751b:	mov    QWORD PTR [rsp+0x30],rax
  437520:	mov    rax,QWORD PTR [rip+0x1a259]        # 0x451780
  437527:	mov    QWORD PTR [rsp+0x28],rax
  43752c:	mov    QWORD PTR [rsp+0x20],rax
  437531:	call   0x437400
  437536:	add    rsp,0x48
  43753a:	ret    
  43753b:	nop    DWORD PTR [rax+rax*1+0x0]
  437540:	sub    rsp,0x48
  437544:	mov    rax,QWORD PTR [rip+0x1a0e5]        # 0x451630
  43754b:	mov    QWORD PTR [rsp+0x30],rax
  437550:	mov    rax,QWORD PTR [rip+0x1a0b9]        # 0x451610
  437557:	mov    QWORD PTR [rsp+0x28],rax
  43755c:	mov    QWORD PTR [rsp+0x20],rax
  437561:	call   0x437400
  437566:	add    rsp,0x48
  43756a:	ret    
  43756b:	nop    DWORD PTR [rax+rax*1+0x0]
  437570:	push   rbp
  437571:	push   rdi
  437572:	push   rsi
  437573:	push   rbx
  437574:	sub    rsp,0x28
  437578:	cmp    QWORD PTR [rcx+0x10],0x0
  43757d:	mov    rbx,QWORD PTR [rcx+0x20]
  437581:	mov    rdi,rcx
  437584:	mov    rbp,QWORD PTR [rcx+0x18]
  437588:	je     0x4375c4
  43758a:	sub    ebx,0x1
  43758d:	js     0x4375c4
  43758f:	movsxd rax,ebx
  437592:	lea    rsi,[rbp+rax*8+0x0]
  437597:	jmp    0x4375ac
  437599:	nop    DWORD PTR [rax+0x0]
  4375a0:	sub    ebx,0x1
  4375a3:	sub    rsi,0x8
  4375a7:	cmp    ebx,0xffffffff
  4375aa:	je     0x4375c4
  4375ac:	mov    rcx,QWORD PTR [rsi]
  4375af:	cmp    rcx,0x1
  4375b3:	jbe    0x4375a0
  4375b5:	sub    ebx,0x1
  4375b8:	sub    rsi,0x8
  4375bc:	call   QWORD PTR [rdi+0x10]
  4375bf:	cmp    ebx,0xffffffff
  4375c2:	jne    0x4375ac
  4375c4:	mov    rax,QWORD PTR [rdi+0x48]
  4375c8:	test   rax,rax
  4375cb:	je     0x4375e4
  4375cd:	mov    rcx,rbp
  4375d0:	call   rax
  4375d2:	mov    rax,QWORD PTR [rdi+0x48]
  4375d6:	mov    rcx,rdi
  4375d9:	add    rsp,0x28
  4375dd:	pop    rbx
  4375de:	pop    rsi
  4375df:	pop    rdi
  4375e0:	pop    rbp
  4375e1:	rex.W jmp rax
  4375e4:	mov    rax,QWORD PTR [rdi+0x60]
  4375e8:	test   rax,rax
  4375eb:	je     0x437610
  4375ed:	mov    rcx,QWORD PTR [rdi+0x50]
  4375f1:	mov    rdx,rbp
  4375f4:	call   rax
  4375f6:	mov    rcx,QWORD PTR [rdi+0x50]
  4375fa:	mov    rax,QWORD PTR [rdi+0x60]
  4375fe:	mov    rdx,rdi
  437601:	add    rsp,0x28
  437605:	pop    rbx
  437606:	pop    rsi
  437607:	pop    rdi
  437608:	pop    rbp
  437609:	rex.W jmp rax
  43760c:	nop    DWORD PTR [rax+0x0]
  437610:	add    rsp,0x28
  437614:	pop    rbx
  437615:	pop    rsi
  437616:	pop    rdi
  437617:	pop    rbp
  437618:	ret    
  437619:	nop    DWORD PTR [rax+0x0]
  437620:	push   r12
  437622:	push   rbp
  437623:	push   rdi
  437624:	push   rsi
  437625:	push   rbx
  437626:	sub    rsp,0x20
  43762a:	cmp    QWORD PTR [rcx+0x10],0x0
  43762f:	mov    rbp,QWORD PTR [rcx+0x20]
  437633:	mov    rdi,rcx
  437636:	mov    r12,QWORD PTR [rcx+0x18]
  43763a:	je     0x437674
  43763c:	mov    ebx,ebp
  43763e:	sub    ebx,0x1
  437641:	js     0x437674
  437643:	movsxd rax,ebx
  437646:	lea    rsi,[r12+rax*8]
  43764a:	jmp    0x43765c
  43764c:	nop    DWORD PTR [rax+0x0]
  437650:	sub    ebx,0x1
  437653:	sub    rsi,0x8
  437657:	cmp    ebx,0xffffffff
  43765a:	je     0x437674
  43765c:	mov    rcx,QWORD PTR [rsi]
  43765f:	cmp    rcx,0x1
  437663:	jbe    0x437650
  437665:	sub    ebx,0x1
  437668:	sub    rsi,0x8
  43766c:	call   QWORD PTR [rdi+0x10]
  43766f:	cmp    ebx,0xffffffff
  437672:	jne    0x43765c
  437674:	cmp    rbp,0x20000
  43767b:	jbe    0x4376d0
  43767d:	mov    ecx,0x80
  437682:	call   0x437070
  437687:	movsxd rdx,eax
  43768a:	lea    rax,[rip+0x18f2f]        # 0x4505c0
  437691:	mov    rsi,rdx
  437694:	shl    rdx,0x4
  437698:	movsxd rbx,DWORD PTR [rax+rdx*1]
  43769c:	mov    rax,QWORD PTR [rdi+0x48]
  4376a0:	test   rax,rax
  4376a3:	je     0x437700
  4376a5:	mov    rcx,QWORD PTR [rdi+0x18]
  4376a9:	call   rax
  4376ab:	mov    rax,QWORD PTR [rdi+0x58]
  4376af:	test   rax,rax
  4376b2:	je     0x437715
  4376b4:	mov    rcx,QWORD PTR [rdi+0x50]
  4376b8:	mov    r8d,0x8
  4376be:	mov    rdx,rbx
  4376c1:	call   rax
  4376c3:	mov    QWORD PTR [rdi+0x18],rax
  4376c7:	mov    QWORD PTR [rdi+0x20],rbx
  4376cb:	mov    DWORD PTR [rdi+0x68],esi
  4376ce:	jmp    0x4376e2
  4376d0:	lea    r8,[rbp*8+0x0]
  4376d8:	xor    edx,edx
  4376da:	mov    rcx,r12
  4376dd:	call   0x43f098
  4376e2:	mov    QWORD PTR [rdi+0x30],0x0
  4376ea:	mov    QWORD PTR [rdi+0x28],0x0
  4376f2:	add    rsp,0x20
  4376f6:	pop    rbx
  4376f7:	pop    rsi
  4376f8:	pop    rdi
  4376f9:	pop    rbp
  4376fa:	pop    r12
  4376fc:	ret    
  4376fd:	nop    DWORD PTR [rax]
  437700:	mov    rax,QWORD PTR [rdi+0x60]
  437704:	test   rax,rax
  437707:	je     0x4376ab
  437709:	mov    rdx,QWORD PTR [rdi+0x18]
  43770d:	mov    rcx,QWORD PTR [rdi+0x50]
  437711:	call   rax
  437713:	jmp    0x4376ab
  437715:	mov    edx,0x8
  43771a:	mov    rcx,rbx
  43771d:	call   QWORD PTR [rdi+0x40]
  437720:	mov    QWORD PTR [rdi+0x18],rax
  437724:	jmp    0x4376c7
  437726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437730:	push   r15
  437732:	push   r14
  437734:	push   r13
  437736:	push   r12
  437738:	push   rbp
  437739:	push   rdi
  43773a:	push   rsi
  43773b:	push   rbx
  43773c:	sub    rsp,0x28
  437740:	mov    r11d,DWORD PTR [rcx+0x68]
  437744:	lea    r13,[rip+0x18e75]        # 0x4505c0
  43774b:	add    DWORD PTR [rcx+0x38],0x1
  43774f:	mov    rdi,rcx
  437752:	mov    rbp,QWORD PTR [rcx+0x20]
  437756:	mov    r15d,r8d
  437759:	mov    r9d,r8d
  43775c:	mov    ebx,r8d
  43775f:	mov    rax,r11
  437762:	shl    rax,0x4
  437766:	add    rax,r13
  437769:	mov    ecx,DWORD PTR [rax+0xc]
  43776c:	mov    r10d,DWORD PTR [rax]
  43776f:	mov    eax,DWORD PTR [rax+0x4]
  437772:	imul   rax,r15
  437776:	shr    rax,0x20
  43777a:	sub    r9d,eax
  43777d:	shr    r9d,1
  437780:	add    eax,r9d
  437783:	mov    r9,QWORD PTR [rdi+0x18]
  437787:	shr    eax,cl
  437789:	imul   eax,r10d
  43778d:	sub    ebx,eax
  43778f:	mov    eax,ebx
  437791:	mov    rsi,QWORD PTR [r9+rax*8]
  437795:	test   rsi,rsi
  437798:	je     0x437840
  43779e:	cmp    rsi,0x1
  4377a2:	mov    r14d,r8d
  4377a5:	mov    r12,rdx
  4377a8:	je     0x4377d0
  4377aa:	mov    rcx,rsi
  4377ad:	call   QWORD PTR [rdi+0x8]
  4377b0:	test   eax,eax
  4377b2:	jne    0x437842
  4377b8:	mov    r11d,DWORD PTR [rdi+0x68]
  4377bc:	mov    r9,QWORD PTR [rdi+0x18]
  4377c0:	mov    rax,r11
  4377c3:	shl    rax,0x4
  4377c7:	add    rax,r13
  4377ca:	mov    ecx,DWORD PTR [rax+0xc]
  4377cd:	mov    r10d,DWORD PTR [rax]
  4377d0:	shl    r11,0x4
  4377d4:	sub    r10d,0x2
  4377d8:	mov    eax,DWORD PTR [r13+r11*1+0x8]
  4377dd:	lea    r13d,[r14+0x1]
  4377e1:	imul   r15,rax
  4377e5:	mov    eax,DWORD PTR [rdi+0x3c]
  4377e8:	shr    r15,0x20
  4377ec:	sub    r14d,r15d
  4377ef:	shr    r14d,1
  4377f2:	add    r15d,r14d
  4377f5:	shr    r15d,cl
  4377f8:	imul   r15d,r10d
  4377fc:	sub    r13d,r15d
  4377ff:	nop
  437800:	lea    edx,[rbx+r13*1]
  437804:	add    eax,0x1
  437807:	mov    DWORD PTR [rdi+0x3c],eax
  43780a:	cmp    rbp,rdx
  43780d:	mov    rbx,rdx
  437810:	ja     0x437816
  437812:	sub    ebx,ebp
  437814:	mov    edx,ebx
  437816:	mov    rsi,QWORD PTR [r9+rdx*8]
  43781a:	test   rsi,rsi
  43781d:	je     0x437842
  43781f:	cmp    rsi,0x1
  437823:	je     0x437800
  437825:	mov    rdx,r12
  437828:	mov    rcx,rsi
  43782b:	call   QWORD PTR [rdi+0x8]
  43782e:	test   eax,eax
  437830:	jne    0x437842
  437832:	mov    eax,DWORD PTR [rdi+0x3c]
  437835:	mov    r9,QWORD PTR [rdi+0x18]
  437839:	jmp    0x437800
  43783b:	nop    DWORD PTR [rax+rax*1+0x0]
  437840:	xor    esi,esi
  437842:	mov    rax,rsi
  437845:	add    rsp,0x28
  437849:	pop    rbx
  43784a:	pop    rsi
  43784b:	pop    rdi
  43784c:	pop    rbp
  43784d:	pop    r12
  43784f:	pop    r13
  437851:	pop    r14
  437853:	pop    r15
  437855:	ret    
  437856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437860:	push   rsi
  437861:	push   rbx
  437862:	sub    rsp,0x28
  437866:	mov    rbx,rcx
  437869:	mov    rsi,rdx
  43786c:	mov    rcx,rdx
  43786f:	call   QWORD PTR [rbx]
  437871:	mov    rdx,rsi
  437874:	mov    r8d,eax
  437877:	mov    rcx,rbx
  43787a:	add    rsp,0x28
  43787e:	pop    rbx
  43787f:	pop    rsi
  437880:	jmp    0x437730
  437885:	nop
  437886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437890:	push   r15
  437892:	push   r14
  437894:	push   r13
  437896:	push   r12
  437898:	push   rbp
  437899:	push   rdi
  43789a:	push   rsi
  43789b:	push   rbx
  43789c:	sub    rsp,0x38
  4378a0:	mov    rbx,QWORD PTR [rcx+0x20]
  4378a4:	cmp    r9d,0x1
  4378a8:	mov    r14,rcx
  4378ab:	mov    rbp,rdx
  4378ae:	mov    r13d,r8d
  4378b1:	mov    r12d,r9d
  4378b4:	je     0x437a30
  4378ba:	mov    r11d,DWORD PTR [r14+0x68]
  4378be:	lea    r9,[rip+0x18cfb]        # 0x4505c0
  4378c5:	mov    r10d,r13d
  4378c8:	mov    edx,r13d
  4378cb:	mov    r15d,r13d
  4378ce:	add    DWORD PTR [r14+0x38],0x1
  4378d3:	mov    rax,r11
  4378d6:	shl    rax,0x4
  4378da:	add    rax,r9
  4378dd:	mov    ecx,DWORD PTR [rax+0xc]
  4378e0:	mov    r8d,DWORD PTR [rax]
  4378e3:	mov    eax,DWORD PTR [rax+0x4]
  4378e6:	imul   rax,r10
  4378ea:	shr    rax,0x20
  4378ee:	sub    edx,eax
  4378f0:	shr    edx,1
  4378f2:	add    eax,edx
  4378f4:	mov    rdx,QWORD PTR [r14+0x18]
  4378f8:	shr    eax,cl
  4378fa:	imul   eax,r8d
  4378fe:	sub    r15d,eax
  437901:	mov    edi,r15d
  437904:	shl    rdi,0x3
  437908:	lea    rsi,[rdx+rdi*1]
  43790c:	mov    rax,QWORD PTR [rsi]
  43790f:	test   rax,rax
  437912:	je     0x437a70
  437918:	cmp    rax,0x1
  43791c:	je     0x43795e
  43791e:	mov    QWORD PTR [rsp+0x28],r9
  437923:	mov    QWORD PTR [rsp+0x20],r10
  437928:	mov    rdx,rbp
  43792b:	mov    rcx,rax
  43792e:	call   QWORD PTR [r14+0x8]
  437932:	test   eax,eax
  437934:	jne    0x4379f0
  43793a:	mov    r11d,DWORD PTR [r14+0x68]
  43793e:	mov    r9,QWORD PTR [rsp+0x28]
  437943:	xor    esi,esi
  437945:	mov    rdx,QWORD PTR [r14+0x18]
  437949:	mov    r10,QWORD PTR [rsp+0x20]
  43794e:	mov    rax,r11
  437951:	shl    rax,0x4
  437955:	add    rax,r9
  437958:	mov    ecx,DWORD PTR [rax+0xc]
  43795b:	mov    r8d,DWORD PTR [rax]
  43795e:	shl    r11,0x4
  437962:	lea    edi,[r13+0x1]
  437966:	sub    r8d,0x2
  43796a:	mov    eax,DWORD PTR [r9+r11*1+0x8]
  43796f:	imul   r10,rax
  437973:	shr    r10,0x20
  437977:	sub    r13d,r10d
  43797a:	shr    r13d,1
  43797d:	add    r13d,r10d
  437980:	shr    r13d,cl
  437983:	imul   r13d,r8d
  437987:	mov    r8d,DWORD PTR [r14+0x3c]
  43798b:	sub    edi,r13d
  43798e:	xchg   ax,ax
  437990:	lea    r10d,[r15+rdi*1]
  437994:	add    r8d,0x1
  437998:	mov    DWORD PTR [r14+0x3c],r8d
  43799c:	cmp    rbx,r10
  43799f:	mov    r15,r10
  4379a2:	ja     0x4379aa
  4379a4:	sub    r15d,ebx
  4379a7:	mov    r10d,r15d
  4379aa:	lea    r13,[r10*8+0x0]
  4379b2:	lea    rax,[rdx+r13*1]
  4379b6:	mov    rcx,QWORD PTR [rax]
  4379b9:	test   rcx,rcx
  4379bc:	je     0x437a10
  4379be:	cmp    rcx,0x1
  4379c2:	je     0x4379e0
  4379c4:	mov    rdx,rbp
  4379c7:	call   QWORD PTR [r14+0x8]
  4379cb:	test   eax,eax
  4379cd:	jne    0x437a60
  4379d3:	mov    r8d,DWORD PTR [r14+0x3c]
  4379d7:	mov    rdx,QWORD PTR [r14+0x18]
  4379db:	jmp    0x437990
  4379dd:	nop    DWORD PTR [rax]
  4379e0:	test   rsi,rsi
  4379e3:	cmove  rsi,rax
  4379e7:	jmp    0x437990
  4379e9:	nop    DWORD PTR [rax+0x0]
  4379f0:	mov    rax,rdi
  4379f3:	add    rax,QWORD PTR [r14+0x18]
  4379f7:	add    rsp,0x38
  4379fb:	pop    rbx
  4379fc:	pop    rsi
  4379fd:	pop    rdi
  4379fe:	pop    rbp
  4379ff:	pop    r12
  437a01:	pop    r13
  437a03:	pop    r14
  437a05:	pop    r15
  437a07:	ret    
  437a08:	nop    DWORD PTR [rax+rax*1+0x0]
  437a10:	test   r12d,r12d
  437a13:	je     0x437a87
  437a15:	test   rsi,rsi
  437a18:	je     0x437a82
  437a1a:	sub    QWORD PTR [r14+0x30],0x1
  437a1f:	mov    rax,rsi
  437a22:	mov    QWORD PTR [rsi],0x0
  437a29:	jmp    0x4379f7
  437a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  437a30:	mov    rax,QWORD PTR [rcx+0x28]
  437a34:	lea    rdx,[rbx+rbx*2]
  437a38:	shl    rax,0x2
  437a3c:	cmp    rdx,rax
  437a3f:	ja     0x4378ba
  437a45:	call   0x437110
  437a4a:	test   eax,eax
  437a4c:	je     0x437a87
  437a4e:	mov    rbx,QWORD PTR [r14+0x20]
  437a52:	jmp    0x4378ba
  437a57:	nop    WORD PTR [rax+rax*1+0x0]
  437a60:	mov    rax,r13
  437a63:	add    rax,QWORD PTR [r14+0x18]
  437a67:	jmp    0x4379f7
  437a69:	nop    DWORD PTR [rax+0x0]
  437a70:	test   r12d,r12d
  437a73:	je     0x437a87
  437a75:	add    QWORD PTR [r14+0x28],0x1
  437a7a:	mov    rax,rsi
  437a7d:	jmp    0x4379f7
  437a82:	mov    rsi,rax
  437a85:	jmp    0x437a75
  437a87:	xor    eax,eax
  437a89:	jmp    0x4379f7
  437a8e:	xchg   ax,ax
  437a90:	push   rdi
  437a91:	push   rsi
  437a92:	push   rbx
  437a93:	sub    rsp,0x20
  437a97:	mov    rbx,rcx
  437a9a:	mov    edi,r8d
  437a9d:	mov    rsi,rdx
  437aa0:	mov    rcx,rdx
  437aa3:	call   QWORD PTR [rbx]
  437aa5:	mov    r9d,edi
  437aa8:	mov    r8d,eax
  437aab:	mov    rdx,rsi
  437aae:	mov    rcx,rbx
  437ab1:	add    rsp,0x20
  437ab5:	pop    rbx
  437ab6:	pop    rsi
  437ab7:	pop    rdi
  437ab8:	jmp    0x437890
  437abd:	nop    DWORD PTR [rax]
  437ac0:	push   rsi
  437ac1:	push   rbx
  437ac2:	sub    rsp,0x28
  437ac6:	xor    r9d,r9d
  437ac9:	mov    rbx,rcx
  437acc:	call   0x437890
  437ad1:	mov    rcx,QWORD PTR [rax]
  437ad4:	mov    rsi,rax
  437ad7:	test   rcx,rcx
  437ada:	je     0x437af3
  437adc:	mov    rax,QWORD PTR [rbx+0x10]
  437ae0:	test   rax,rax
  437ae3:	je     0x437ae7
  437ae5:	call   rax
  437ae7:	mov    QWORD PTR [rsi],0x1
  437aee:	add    QWORD PTR [rbx+0x30],0x1
  437af3:	add    rsp,0x28
  437af7:	pop    rbx
  437af8:	pop    rsi
  437af9:	ret    
  437afa:	nop    WORD PTR [rax+rax*1+0x0]
  437b00:	push   rsi
  437b01:	push   rbx
  437b02:	sub    rsp,0x28
  437b06:	mov    rbx,rcx
  437b09:	mov    rsi,rdx
  437b0c:	mov    rcx,rdx
  437b0f:	call   QWORD PTR [rbx]
  437b11:	mov    rdx,rsi
  437b14:	mov    r8d,eax
  437b17:	mov    rcx,rbx
  437b1a:	add    rsp,0x28
  437b1e:	pop    rbx
  437b1f:	pop    rsi
  437b20:	jmp    0x437ac0
  437b22:	nop    DWORD PTR [rax+0x0]
  437b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437b30:	push   rsi
  437b31:	push   rbx
  437b32:	sub    rsp,0x28
  437b36:	mov    rax,QWORD PTR [rcx+0x18]
  437b3a:	mov    rbx,rcx
  437b3d:	mov    rsi,rdx
  437b40:	cmp    rax,rdx
  437b43:	ja     0x437b79
  437b45:	mov    rdx,QWORD PTR [rcx+0x20]
  437b49:	lea    rax,[rax+rdx*8]
  437b4d:	cmp    rsi,rax
  437b50:	jae    0x437b79
  437b52:	mov    rcx,QWORD PTR [rsi]
  437b55:	cmp    rcx,0x1
  437b59:	jbe    0x437b79
  437b5b:	mov    rax,QWORD PTR [rbx+0x10]
  437b5f:	test   rax,rax
  437b62:	je     0x437b66
  437b64:	call   rax
  437b66:	mov    QWORD PTR [rsi],0x1
  437b6d:	add    QWORD PTR [rbx+0x30],0x1
  437b72:	add    rsp,0x28
  437b76:	pop    rbx
  437b77:	pop    rsi
  437b78:	ret    
  437b79:	call   0x43f180
  437b7e:	nop
  437b7f:	nop
  437b80:	push   rbp
  437b81:	push   rdi
  437b82:	push   rsi
  437b83:	push   rbx
  437b84:	sub    rsp,0x28
  437b88:	mov    rbx,QWORD PTR [rcx+0x18]
  437b8c:	mov    rax,QWORD PTR [rcx+0x20]
  437b90:	mov    rbp,rdx
  437b93:	mov    rdi,r8
  437b96:	lea    rsi,[rbx+rax*8]
  437b9a:	jmp    0x437ba9
  437b9c:	nop    DWORD PTR [rax+0x0]
  437ba0:	add    rbx,0x8
  437ba4:	cmp    rsi,rbx
  437ba7:	jbe    0x437bbb
  437ba9:	cmp    QWORD PTR [rbx],0x1
  437bad:	jbe    0x437ba0
  437baf:	mov    rdx,rdi
  437bb2:	mov    rcx,rbx
  437bb5:	call   rbp
  437bb7:	test   eax,eax
  437bb9:	jne    0x437ba0
  437bbb:	add    rsp,0x28
  437bbf:	pop    rbx
  437bc0:	pop    rsi
  437bc1:	pop    rdi
  437bc2:	pop    rbp
  437bc3:	ret    
  437bc4:	xchg   ax,ax
  437bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437bd0:	push   rbx
  437bd1:	sub    rsp,0x30
  437bd5:	mov    rbx,rcx
  437bd8:	mov    rcx,QWORD PTR [rcx+0x20]
  437bdc:	mov    rax,QWORD PTR [rbx+0x28]
  437be0:	sub    rax,QWORD PTR [rbx+0x30]
  437be4:	shl    rax,0x3
  437be8:	cmp    rcx,rax
  437beb:	jbe    0x437c0f
  437bed:	cmp    rcx,0x20
  437bf1:	jbe    0x437c0f
  437bf3:	mov    rcx,rbx
  437bf6:	mov    QWORD PTR [rsp+0x28],r8
  437bfb:	mov    QWORD PTR [rsp+0x20],rdx
  437c00:	call   0x437110
  437c05:	mov    r8,QWORD PTR [rsp+0x28]
  437c0a:	mov    rdx,QWORD PTR [rsp+0x20]
  437c0f:	mov    rcx,rbx
  437c12:	add    rsp,0x30
  437c16:	pop    rbx
  437c17:	jmp    0x437b80
  437c1c:	nop    DWORD PTR [rax+0x0]
  437c20:	mov    eax,DWORD PTR [rcx+0x38]
  437c23:	test   eax,eax
  437c25:	je     0x437c41
  437c27:	mov    edx,DWORD PTR [rcx+0x3c]
  437c2a:	pxor   xmm0,xmm0
  437c2e:	pxor   xmm1,xmm1
  437c32:	cvtsi2sd xmm0,rdx
  437c37:	cvtsi2sd xmm1,rax
  437c3c:	divsd  xmm0,xmm1
  437c40:	ret    
  437c41:	pxor   xmm0,xmm0
  437c45:	ret    
  437c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437c50:	movzx  edx,BYTE PTR [rcx]
  437c53:	xor    eax,eax
  437c55:	lea    r8,[rcx+0x1]
  437c59:	test   dl,dl
  437c5b:	je     0x437c76
  437c5d:	nop    DWORD PTR [rax]
  437c60:	imul   eax,eax,0x43
  437c63:	add    r8,0x1
  437c67:	lea    eax,[rax+rdx*1-0x71]
  437c6b:	movzx  edx,BYTE PTR [r8-0x1]
  437c70:	test   dl,dl
  437c72:	jne    0x437c60
  437c74:	repz ret 
  437c76:	repz ret 
  437c78:	nop    DWORD PTR [rax+rax*1+0x0]
  437c80:	push   rbx
  437c81:	test   cl,0x3
  437c84:	je     0x437ec3
  437c8a:	mov    eax,0x9e3779b9
  437c8f:	cmp    edx,0xb
  437c92:	mov    r9d,edx
  437c95:	mov    r10d,eax
  437c98:	jbe    0x437dc8
  437c9e:	xchg   ax,ax
  437ca0:	movzx  r11d,BYTE PTR [rcx+0x5]
  437ca5:	mov    ebx,r11d
  437ca8:	movzx  r11d,BYTE PTR [rcx+0x6]
  437cad:	shl    ebx,0x8
  437cb0:	shl    r11d,0x10
  437cb4:	add    r11d,ebx
  437cb7:	movzx  ebx,BYTE PTR [rcx+0x4]
  437cbb:	add    ebx,r11d
  437cbe:	movzx  r11d,BYTE PTR [rcx+0x7]
  437cc3:	shl    r11d,0x18
  437cc7:	add    r11d,ebx
  437cca:	add    eax,r11d
  437ccd:	movzx  r11d,BYTE PTR [rcx+0x9]
  437cd2:	mov    ebx,r11d
  437cd5:	movzx  r11d,BYTE PTR [rcx+0xa]
  437cda:	shl    ebx,0x8
  437cdd:	shl    r11d,0x10
  437ce1:	add    r11d,ebx
  437ce4:	movzx  ebx,BYTE PTR [rcx+0x8]
  437ce8:	add    ebx,r11d
  437ceb:	movzx  r11d,BYTE PTR [rcx+0xb]
  437cf0:	shl    r11d,0x18
  437cf4:	add    r11d,ebx
  437cf7:	add    r8d,r11d
  437cfa:	movzx  r11d,BYTE PTR [rcx+0x1]
  437cff:	mov    ebx,r11d
  437d02:	movzx  r11d,BYTE PTR [rcx+0x2]
  437d07:	shl    ebx,0x8
  437d0a:	shl    r11d,0x10
  437d0e:	add    r11d,ebx
  437d11:	movzx  ebx,BYTE PTR [rcx]
  437d14:	add    ebx,r11d
  437d17:	movzx  r11d,BYTE PTR [rcx+0x3]
  437d1c:	shl    r11d,0x18
  437d20:	add    r11d,ebx
  437d23:	sub    r11d,eax
  437d26:	sub    eax,r8d
  437d29:	sub    r11d,r8d
  437d2c:	add    r10d,r11d
  437d2f:	mov    r11d,r8d
  437d32:	shr    r11d,0xd
  437d36:	xor    r10d,r11d
  437d39:	mov    r11d,r10d
  437d3c:	sub    eax,r10d
  437d3f:	sub    r8d,r10d
  437d42:	shl    r11d,0x8
  437d46:	xor    eax,r11d
  437d49:	mov    r11d,eax
  437d4c:	sub    r8d,eax
  437d4f:	shr    r11d,0xd
  437d53:	xor    r8d,r11d
  437d56:	sub    r10d,eax
  437d59:	sub    r9d,0xc
  437d5d:	mov    r11d,r8d
  437d60:	sub    r10d,r8d
  437d63:	sub    eax,r8d
  437d66:	shr    r11d,0xc
  437d6a:	add    rcx,0xc
  437d6e:	xor    r10d,r11d
  437d71:	mov    r11d,r10d
  437d74:	sub    eax,r10d
  437d77:	sub    r8d,r10d
  437d7a:	shl    r11d,0x10
  437d7e:	xor    eax,r11d
  437d81:	mov    r11d,eax
  437d84:	sub    r8d,eax
  437d87:	sub    r10d,eax
  437d8a:	shr    r11d,0x5
  437d8e:	xor    r8d,r11d
  437d91:	mov    r11d,r8d
  437d94:	sub    r10d,r8d
  437d97:	sub    eax,r8d
  437d9a:	shr    r11d,0x3
  437d9e:	xor    r10d,r11d
  437da1:	mov    r11d,r10d
  437da4:	sub    eax,r10d
  437da7:	sub    r8d,r10d
  437daa:	shl    r11d,0xa
  437dae:	xor    eax,r11d
  437db1:	mov    r11d,eax
  437db4:	sub    r8d,eax
  437db7:	shr    r11d,0xf
  437dbb:	xor    r8d,r11d
  437dbe:	cmp    r9d,0xb
  437dc2:	ja     0x437ca0
  437dc8:	add    r8d,edx
  437dcb:	cmp    r9d,0xb
  437dcf:	ja     0x437e44
  437dd1:	lea    rdx,[rip+0x1878c]        # 0x450564
  437dd8:	movsxd r9,DWORD PTR [rdx+r9*4]
  437ddc:	add    rdx,r9
  437ddf:	jmp    rdx
  437de1:	movzx  edx,BYTE PTR [rcx+0xa]
  437de5:	shl    edx,0x18
  437de8:	add    r8d,edx
  437deb:	movzx  edx,BYTE PTR [rcx+0x9]
  437def:	shl    edx,0x10
  437df2:	add    r8d,edx
  437df5:	movzx  edx,BYTE PTR [rcx+0x8]
  437df9:	shl    edx,0x8
  437dfc:	add    r8d,edx
  437dff:	movzx  edx,BYTE PTR [rcx+0x7]
  437e03:	shl    edx,0x18
  437e06:	add    eax,edx
  437e08:	movzx  edx,BYTE PTR [rcx+0x6]
  437e0c:	shl    edx,0x10
  437e0f:	add    eax,edx
  437e11:	movzx  edx,BYTE PTR [rcx+0x5]
  437e15:	shl    edx,0x8
  437e18:	add    eax,edx
  437e1a:	movzx  edx,BYTE PTR [rcx+0x4]
  437e1e:	add    eax,edx
  437e20:	movzx  edx,BYTE PTR [rcx+0x3]
  437e24:	shl    edx,0x18
  437e27:	add    r10d,edx
  437e2a:	movzx  edx,BYTE PTR [rcx+0x2]
  437e2e:	shl    edx,0x10
  437e31:	add    r10d,edx
  437e34:	movzx  edx,BYTE PTR [rcx+0x1]
  437e38:	shl    edx,0x8
  437e3b:	add    r10d,edx
  437e3e:	movzx  edx,BYTE PTR [rcx]
  437e41:	add    r10d,edx
  437e44:	sub    r10d,eax
  437e47:	mov    edx,r8d
  437e4a:	sub    eax,r8d
  437e4d:	sub    r10d,r8d
  437e50:	shr    edx,0xd
  437e53:	xor    r10d,edx
  437e56:	mov    ecx,r10d
  437e59:	sub    eax,r10d
  437e5c:	sub    r8d,r10d
  437e5f:	shl    ecx,0x8
  437e62:	xor    eax,ecx
  437e64:	mov    edx,eax
  437e66:	sub    r8d,eax
  437e69:	sub    r10d,eax
  437e6c:	shr    edx,0xd
  437e6f:	xor    r8d,edx
  437e72:	mov    edx,r8d
  437e75:	sub    r10d,r8d
  437e78:	sub    eax,r8d
  437e7b:	shr    edx,0xc
  437e7e:	xor    r10d,edx
  437e81:	mov    ecx,r10d
  437e84:	sub    eax,r10d
  437e87:	sub    r8d,r10d
  437e8a:	shl    ecx,0x10
  437e8d:	xor    ecx,eax
  437e8f:	mov    edx,ecx
  437e91:	sub    r8d,ecx
  437e94:	sub    r10d,ecx
  437e97:	shr    edx,0x5
  437e9a:	xor    edx,r8d
  437e9d:	mov    eax,edx
  437e9f:	sub    r10d,edx
  437ea2:	sub    ecx,edx
  437ea4:	shr    eax,0x3
  437ea7:	xor    r10d,eax
  437eaa:	mov    eax,r10d
  437ead:	sub    ecx,r10d
  437eb0:	sub    edx,r10d
  437eb3:	shl    eax,0xa
  437eb6:	xor    ecx,eax
  437eb8:	sub    edx,ecx
  437eba:	shr    ecx,0xf
  437ebd:	mov    eax,ecx
  437ebf:	xor    eax,edx
  437ec1:	pop    rbx
  437ec2:	ret    
  437ec3:	cmp    edx,0xb
  437ec6:	jbe    0x437f92
  437ecc:	mov    eax,0x9e3779b9
  437ed1:	mov    r9d,edx
  437ed4:	mov    r10d,eax
  437ed7:	nop    WORD PTR [rax+rax*1+0x0]
  437ee0:	add    r8d,DWORD PTR [rcx+0x8]
  437ee4:	add    eax,DWORD PTR [rcx+0x4]
  437ee7:	lea    r11d,[rax+r8*1]
  437eeb:	sub    eax,r8d
  437eee:	sub    r10d,r11d
  437ef1:	add    r10d,DWORD PTR [rcx]
  437ef4:	mov    r11d,r8d
  437ef7:	shr    r11d,0xd
  437efb:	xor    r10d,r11d
  437efe:	mov    r11d,r10d
  437f01:	sub    eax,r10d
  437f04:	sub    r8d,r10d
  437f07:	shl    r11d,0x8
  437f0b:	xor    eax,r11d
  437f0e:	mov    r11d,eax
  437f11:	sub    r8d,eax
  437f14:	sub    r10d,eax
  437f17:	shr    r11d,0xd
  437f1b:	xor    r8d,r11d
  437f1e:	mov    r11d,r8d
  437f21:	sub    r10d,r8d
  437f24:	sub    eax,r8d
  437f27:	shr    r11d,0xc
  437f2b:	xor    r10d,r11d
  437f2e:	mov    r11d,r10d
  437f31:	sub    eax,r10d
  437f34:	sub    r8d,r10d
  437f37:	shl    r11d,0x10
  437f3b:	xor    eax,r11d
  437f3e:	mov    r11d,eax
  437f41:	sub    r8d,eax
  437f44:	sub    r10d,eax
  437f47:	shr    r11d,0x5
  437f4b:	xor    r8d,r11d
  437f4e:	mov    r11d,r8d
  437f51:	sub    r10d,r8d
  437f54:	sub    eax,r8d
  437f57:	shr    r11d,0x3
  437f5b:	xor    r10d,r11d
  437f5e:	mov    r11d,r10d
  437f61:	sub    eax,r10d
  437f64:	shl    r11d,0xa
  437f68:	xor    eax,r11d
  437f6b:	sub    r8d,r10d
  437f6e:	sub    r9d,0xc
  437f72:	mov    r11d,eax
  437f75:	sub    r8d,eax
  437f78:	add    rcx,0xc
  437f7c:	shr    r11d,0xf
  437f80:	xor    r8d,r11d
  437f83:	cmp    r9d,0xb
  437f87:	ja     0x437ee0
  437f8d:	jmp    0x437dc8
  437f92:	mov    eax,0x9e3779b9
  437f97:	mov    r9d,edx
  437f9a:	mov    r10d,eax
  437f9d:	jmp    0x437dc8
  437fa2:	nop
  437fa3:	nop
  437fa4:	nop
  437fa5:	nop
  437fa6:	nop
  437fa7:	nop
  437fa8:	nop
  437fa9:	nop
  437faa:	nop
  437fab:	nop
  437fac:	nop
  437fad:	nop
  437fae:	nop
  437faf:	nop
  437fb0:	ret    
  437fb1:	nop
  437fb2:	nop
  437fb3:	nop
  437fb4:	nop
  437fb5:	nop
  437fb6:	nop
  437fb7:	nop
  437fb8:	nop
  437fb9:	nop
  437fba:	nop
  437fbb:	nop
  437fbc:	nop
  437fbd:	nop
  437fbe:	nop
  437fbf:	nop
  437fc0:	movzx  r8d,BYTE PTR [rcx]
  437fc4:	mov    rax,rcx
  437fc7:	test   r8b,r8b
  437fca:	je     0x437fe5
  437fcc:	lea    rdx,[rcx+0x1]
  437fd0:	cmp    r8b,0x2f
  437fd4:	movzx  r8d,BYTE PTR [rdx]
  437fd8:	cmove  rax,rdx
  437fdc:	add    rdx,0x1
  437fe0:	test   r8b,r8b
  437fe3:	jne    0x437fd0
  437fe5:	repz ret 
  437fe7:	nop    WORD PTR [rax+rax*1+0x0]
  437ff0:	movzx  r8d,BYTE PTR [rcx]
  437ff4:	mov    rax,rcx
  437ff7:	mov    rcx,QWORD PTR [rip+0x195e2]        # 0x4515e0
  437ffe:	test   BYTE PTR [rcx+r8*2],0x88
  438003:	mov    rdx,r8
  438006:	je     0x43800e
  438008:	cmp    BYTE PTR [rax+0x1],0x3a
  43800c:	je     0x438050
  43800e:	test   dl,dl
  438010:	je     0x438045
  438012:	lea    r8,[rax+0x1]
  438016:	jmp    0x438031
  438018:	nop    DWORD PTR [rax+rax*1+0x0]
  438020:	cmp    dl,0x2f
  438023:	je     0x438036
  438025:	movzx  edx,BYTE PTR [r8]
  438029:	add    r8,0x1
  43802d:	test   dl,dl
  43802f:	je     0x438045
  438031:	cmp    dl,0x5c
  438034:	jne    0x438020
  438036:	movzx  edx,BYTE PTR [r8]
  43803a:	mov    rax,r8
  43803d:	add    r8,0x1
  438041:	test   dl,dl
  438043:	jne    0x438031
  438045:	repz ret 
  438047:	nop    WORD PTR [rax+rax*1+0x0]
  438050:	movzx  edx,BYTE PTR [rax+0x2]
  438054:	add    rax,0x2
  438058:	jmp    0x43800e
  43805a:	nop    WORD PTR [rax+rax*1+0x0]
  438060:	jmp    0x437ff0
  438062:	nop
  438063:	nop
  438064:	nop
  438065:	nop
  438066:	nop
  438067:	nop
  438068:	nop
  438069:	nop
  43806a:	nop
  43806b:	nop
  43806c:	nop
  43806d:	nop
  43806e:	nop
  43806f:	nop
  438070:	push   rsi
  438071:	push   rbx
  438072:	sub    rsp,0x148
  438079:	mov    edx,0x104
  43807e:	lea    rbx,[rsp+0x30]
  438083:	mov    rsi,rcx
  438086:	lea    r9,[rsp+0x28]
  43808b:	mov    r8,rbx
  43808e:	call   QWORD PTR [rip+0x23498]        # 0x45b52c
  438094:	lea    edx,[rax-0x1]
  438097:	cmp    edx,0x102
  43809d:	ja     0x4380c0
  43809f:	mov    edx,eax
  4380a1:	mov    rcx,rbx
  4380a4:	call   QWORD PTR [rip+0x23832]        # 0x45b8dc
  4380aa:	mov    rcx,rbx
  4380ad:	call   0x43efb0
  4380b2:	add    rsp,0x148
  4380b9:	pop    rbx
  4380ba:	pop    rsi
  4380bb:	ret    
  4380bc:	nop    DWORD PTR [rax+0x0]
  4380c0:	mov    rcx,rsi
  4380c3:	add    rsp,0x148
  4380ca:	pop    rbx
  4380cb:	pop    rsi
  4380cc:	jmp    0x43efb0
  4380d1:	nop
  4380d2:	nop
  4380d3:	nop
  4380d4:	nop
  4380d5:	nop
  4380d6:	nop
  4380d7:	nop
  4380d8:	nop
  4380d9:	nop
  4380da:	nop
  4380db:	nop
  4380dc:	nop
  4380dd:	nop
  4380de:	nop
  4380df:	nop
  4380e0:	sub    rsp,0x28
  4380e4:	call   QWORD PTR [rip+0x23532]        # 0x45b61c
  4380ea:	lea    rcx,[rip+0x187cf]        # 0x4508c0
  4380f1:	lea    r9,[rax+0x60]
  4380f5:	mov    r8d,0x11
  4380fb:	mov    edx,0x1
  438100:	call   0x43f0e0
  438105:	mov    ecx,DWORD PTR [rip+0xa045]        # 0x442150
  43810b:	call   0x43f158
  438110:	nop
  438111:	nop    DWORD PTR [rax+rax*1+0x0]
  438116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438120:	push   rbx
  438121:	sub    rsp,0x30
  438125:	lea    eax,[r8-0x1]
  438129:	mov    rbx,rcx
  43812c:	test   r8d,r8d
  43812f:	mov    ecx,0x7
  438134:	mov    QWORD PTR [rbx+0x38],r9
  438138:	cmove  eax,ecx
  43813b:	test   edx,edx
  43813d:	mov    cx,0xfe8
  438141:	cmove  edx,ecx
  438144:	mov    rcx,QWORD PTR [rsp+0x60]
  438149:	and    BYTE PTR [rbx+0x50],0xfe
  43814d:	mov    DWORD PTR [rbx],edx
  43814f:	mov    DWORD PTR [rbx+0x30],eax
  438152:	mov    QWORD PTR [rbx+0x40],rcx
  438156:	mov    ecx,edx
  438158:	call   r9
  43815b:	test   rax,rax
  43815e:	mov    QWORD PTR [rbx+0x8],rax
  438162:	je     0x438194
  438164:	lea    rdx,[rax+0x10]
  438168:	mov    QWORD PTR [rbx+0x10],rdx
  43816c:	mov    QWORD PTR [rbx+0x18],rdx
  438170:	movsxd rdx,DWORD PTR [rbx]
  438173:	add    rdx,rax
  438176:	mov    QWORD PTR [rax],rdx
  438179:	mov    QWORD PTR [rbx+0x20],rdx
  43817d:	mov    QWORD PTR [rax+0x8],0x0
  438185:	and    BYTE PTR [rbx+0x50],0xf9
  438189:	mov    eax,0x1
  43818e:	add    rsp,0x30
  438192:	pop    rbx
  438193:	ret    
  438194:	mov    QWORD PTR [rsp+0x28],rax
  438199:	call   QWORD PTR [rip+0x9fb9]        # 0x442158
  43819f:	mov    rax,QWORD PTR [rsp+0x28]
  4381a4:	jmp    0x438164
  4381a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4381b0:	push   rbx
  4381b1:	sub    rsp,0x30
  4381b5:	lea    eax,[r8-0x1]
  4381b9:	test   r8d,r8d
  4381bc:	mov    r8d,0x7
  4381c2:	mov    rbx,rcx
  4381c5:	mov    rcx,QWORD PTR [rsp+0x68]
  4381ca:	cmove  eax,r8d
  4381ce:	test   edx,edx
  4381d0:	mov    r8w,0xfe8
  4381d5:	cmove  edx,r8d
  4381d9:	mov    r8,QWORD PTR [rsp+0x60]
  4381de:	or     BYTE PTR [rbx+0x50],0x1
  4381e2:	mov    QWORD PTR [rbx+0x38],r9
  4381e6:	mov    DWORD PTR [rbx],edx
  4381e8:	mov    DWORD PTR [rbx+0x30],eax
  4381eb:	mov    QWORD PTR [rbx+0x48],rcx
  4381ef:	mov    QWORD PTR [rbx+0x40],r8
  4381f3:	call   r9
  4381f6:	test   rax,rax
  4381f9:	mov    QWORD PTR [rbx+0x8],rax
  4381fd:	je     0x438230
  4381ff:	lea    rdx,[rax+0x10]
  438203:	mov    QWORD PTR [rbx+0x10],rdx
  438207:	mov    QWORD PTR [rbx+0x18],rdx
  43820b:	movsxd rdx,DWORD PTR [rbx]
  43820e:	add    rdx,rax
  438211:	mov    QWORD PTR [rax],rdx
  438214:	mov    QWORD PTR [rbx+0x20],rdx
  438218:	mov    QWORD PTR [rax+0x8],0x0
  438220:	and    BYTE PTR [rbx+0x50],0xf9
  438224:	mov    eax,0x1
  438229:	add    rsp,0x30
  43822d:	pop    rbx
  43822e:	ret    
  43822f:	nop
  438230:	mov    QWORD PTR [rsp+0x28],rax
  438235:	call   QWORD PTR [rip+0x9f1d]        # 0x442158
  43823b:	mov    rax,QWORD PTR [rsp+0x28]
  438240:	jmp    0x4381ff
  438242:	nop    DWORD PTR [rax+0x0]
  438246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438250:	push   r12
  438252:	push   rbp
  438253:	push   rdi
  438254:	push   rsi
  438255:	push   rbx
  438256:	sub    rsp,0x30
  43825a:	mov    rsi,QWORD PTR [rcx+0x18]
  43825e:	sub    rsi,QWORD PTR [rcx+0x10]
  438262:	mov    edi,DWORD PTR [rcx]
  438264:	mov    rbx,rcx
  438267:	mov    rbp,QWORD PTR [rcx+0x8]
  43826b:	mov    eax,esi
  43826d:	add    edx,esi
  43826f:	sar    eax,0x3
  438272:	lea    eax,[rdx+rax*1+0x64]
  438276:	cmp    eax,edi
  438278:	cmovge edi,eax
  43827b:	test   BYTE PTR [rcx+0x50],0x1
  43827f:	je     0x438363
  438285:	mov    rcx,QWORD PTR [rcx+0x48]
  438289:	mov    edx,edi
  43828b:	call   QWORD PTR [rbx+0x38]
  43828e:	test   rax,rax
  438291:	je     0x438391
  438297:	movsxd rdi,edi
  43829a:	mov    QWORD PTR [rbx+0x8],rax
  43829e:	mov    QWORD PTR [rax+0x8],rbp
  4382a2:	add    rdi,rax
  4382a5:	cmp    DWORD PTR [rbx+0x30],0x6
  4382a9:	mov    QWORD PTR [rbx+0x20],rdi
  4382ad:	mov    QWORD PTR [rax],rdi
  4382b0:	movsxd rdi,esi
  4382b3:	jg     0x438314
  4382b5:	lea    r12,[rax+0x10]
  4382b9:	xor    r8d,r8d
  4382bc:	movsxd rdx,r8d
  4382bf:	cmp    r8d,esi
  4382c2:	mov    r9,rdx
  4382c5:	jge    0x4382f0
  4382c7:	mov    rcx,QWORD PTR [rbx+0x10]
  4382cb:	add    r8d,0x1
  4382cf:	movzx  ecx,BYTE PTR [rcx+r9*1]
  4382d4:	add    r9,0x1
  4382d8:	cmp    r8d,esi
  4382db:	mov    BYTE PTR [rax+rdx*1+0x10],cl
  4382df:	je     0x4382f0
  4382e1:	movsxd rdx,r8d
  4382e4:	jmp    0x4382c7
  4382e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4382f0:	lea    rdx,[rbp+0x10]
  4382f4:	cmp    QWORD PTR [rbx+0x10],rdx
  4382f8:	je     0x438370
  4382fa:	and    BYTE PTR [rbx+0x50],0xfd
  4382fe:	add    rdi,r12
  438301:	mov    QWORD PTR [rbx+0x10],r12
  438305:	mov    QWORD PTR [rbx+0x18],rdi
  438309:	add    rsp,0x30
  43830d:	pop    rbx
  43830e:	pop    rsi
  43830f:	pop    rdi
  438310:	pop    rbp
  438311:	pop    r12
  438313:	ret    
  438314:	mov    r9,rdi
  438317:	lea    r12,[rax+0x10]
  43831b:	shr    r9,0x2
  43831f:	mov    r10d,r9d
  438322:	sub    r10d,0x1
  438326:	js     0x438356
  438328:	movsxd rcx,r10d
  43832b:	xor    r8d,r8d
  43832e:	shl    rcx,0x2
  438332:	mov    r11,rcx
  438335:	add    r11,QWORD PTR [rbx+0x10]
  438339:	add    rcx,r12
  43833c:	nop    DWORD PTR [rax+0x0]
  438340:	mov    edx,DWORD PTR [r11+r8*1]
  438344:	sub    r10d,0x1
  438348:	mov    DWORD PTR [rcx+r8*1],edx
  43834c:	sub    r8,0x4
  438350:	cmp    r10d,0xffffffff
  438354:	jne    0x438340
  438356:	lea    r8d,[r9*4+0x0]
  43835e:	jmp    0x4382bc
  438363:	mov    ecx,edi
  438365:	call   QWORD PTR [rbx+0x38]
  438368:	jmp    0x43828e
  43836d:	nop    DWORD PTR [rax]
  438370:	movzx  edx,BYTE PTR [rbx+0x50]
  438374:	test   dl,0x2
  438377:	jne    0x4382fa
  438379:	mov    rcx,QWORD PTR [rbp+0x8]
  43837d:	and    edx,0x1
  438380:	mov    QWORD PTR [rax+0x8],rcx
  438384:	jne    0x4383b0
  438386:	mov    rcx,rbp
  438389:	call   QWORD PTR [rbx+0x40]
  43838c:	jmp    0x4382fa
  438391:	mov    QWORD PTR [rsp+0x28],rax
  438396:	call   QWORD PTR [rip+0x9dbc]        # 0x442158
  43839c:	mov    rax,QWORD PTR [rsp+0x28]
  4383a1:	jmp    0x438297
  4383a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4383b0:	mov    rcx,QWORD PTR [rbx+0x48]
  4383b4:	mov    rdx,rbp
  4383b7:	call   QWORD PTR [rbx+0x40]
  4383ba:	jmp    0x4382fa
  4383bf:	nop
  4383c0:	mov    rax,QWORD PTR [rcx+0x8]
  4383c4:	test   rax,rax
  4383c7:	je     0x4383eb
  4383c9:	nop    DWORD PTR [rax+0x0]
  4383d0:	cmp    rdx,rax
  4383d3:	jbe    0x4383da
  4383d5:	cmp    rdx,QWORD PTR [rax]
  4383d8:	jbe    0x4383e5
  4383da:	mov    rax,QWORD PTR [rax+0x8]
  4383de:	test   rax,rax
  4383e1:	jne    0x4383d0
  4383e3:	repz ret 
  4383e5:	mov    eax,0x1
  4383ea:	ret    
  4383eb:	repz ret 
  4383ed:	nop    DWORD PTR [rax]
  4383f0:	push   rdi
  4383f1:	push   rsi
  4383f2:	push   rbx
  4383f3:	sub    rsp,0x20
  4383f7:	mov    rdi,rdx
  4383fa:	mov    rdx,QWORD PTR [rcx+0x8]
  4383fe:	mov    rbx,rcx
  438401:	test   rdx,rdx
  438404:	jne    0x438423
  438406:	jmp    0x438446
  438408:	nop    DWORD PTR [rax+rax*1+0x0]
  438410:	mov    rcx,QWORD PTR [rbx+0x48]
  438414:	call   QWORD PTR [rbx+0x40]
  438417:	or     BYTE PTR [rbx+0x50],0x2
  43841b:	test   rsi,rsi
  43841e:	je     0x438446
  438420:	mov    rdx,rsi
  438423:	cmp    rdi,rdx
  438426:	jbe    0x43842d
  438428:	cmp    rdi,QWORD PTR [rdx]
  43842b:	jbe    0x438453
  43842d:	test   BYTE PTR [rbx+0x50],0x1
  438431:	mov    rsi,QWORD PTR [rdx+0x8]
  438435:	jne    0x438410
  438437:	mov    rcx,rdx
  43843a:	call   QWORD PTR [rbx+0x40]
  43843d:	or     BYTE PTR [rbx+0x50],0x2
  438441:	test   rsi,rsi
  438444:	jne    0x438420
  438446:	test   rdi,rdi
  438449:	jne    0x43846e
  43844b:	add    rsp,0x20
  43844f:	pop    rbx
  438450:	pop    rsi
  438451:	pop    rdi
  438452:	ret    
  438453:	mov    rax,QWORD PTR [rdx]
  438456:	mov    QWORD PTR [rbx+0x18],rdi
  43845a:	mov    QWORD PTR [rbx+0x10],rdi
  43845e:	mov    QWORD PTR [rbx+0x8],rdx
  438462:	mov    QWORD PTR [rbx+0x20],rax
  438466:	add    rsp,0x20
  43846a:	pop    rbx
  43846b:	pop    rsi
  43846c:	pop    rdi
  43846d:	ret    
  43846e:	call   0x43f180
  438473:	nop
  438474:	xchg   ax,ax
  438476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438480:	push   rdi
  438481:	push   rsi
  438482:	push   rbx
  438483:	sub    rsp,0x20
  438487:	mov    rdi,rdx
  43848a:	mov    rdx,QWORD PTR [rcx+0x8]
  43848e:	mov    rbx,rcx
  438491:	test   rdx,rdx
  438494:	jne    0x4384b3
  438496:	jmp    0x4384d6
  438498:	nop    DWORD PTR [rax+rax*1+0x0]
  4384a0:	mov    rcx,QWORD PTR [rbx+0x48]
  4384a4:	call   QWORD PTR [rbx+0x40]
  4384a7:	or     BYTE PTR [rbx+0x50],0x2
  4384ab:	test   rsi,rsi
  4384ae:	je     0x4384d6
  4384b0:	mov    rdx,rsi
  4384b3:	cmp    rdi,rdx
  4384b6:	jbe    0x4384bd
  4384b8:	cmp    rdi,QWORD PTR [rdx]
  4384bb:	jbe    0x4384e3
  4384bd:	test   BYTE PTR [rbx+0x50],0x1
  4384c1:	mov    rsi,QWORD PTR [rdx+0x8]
  4384c5:	jne    0x4384a0
  4384c7:	mov    rcx,rdx
  4384ca:	call   QWORD PTR [rbx+0x40]
  4384cd:	or     BYTE PTR [rbx+0x50],0x2
  4384d1:	test   rsi,rsi
  4384d4:	jne    0x4384b0
  4384d6:	test   rdi,rdi
  4384d9:	jne    0x4384fe
  4384db:	add    rsp,0x20
  4384df:	pop    rbx
  4384e0:	pop    rsi
  4384e1:	pop    rdi
  4384e2:	ret    
  4384e3:	mov    rax,QWORD PTR [rdx]
  4384e6:	mov    QWORD PTR [rbx+0x18],rdi
  4384ea:	mov    QWORD PTR [rbx+0x10],rdi
  4384ee:	mov    QWORD PTR [rbx+0x8],rdx
  4384f2:	mov    QWORD PTR [rbx+0x20],rax
  4384f6:	add    rsp,0x20
  4384fa:	pop    rbx
  4384fb:	pop    rsi
  4384fc:	pop    rdi
  4384fd:	ret    
  4384fe:	call   0x43f180
  438503:	nop
  438504:	xchg   ax,ax
  438506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438510:	mov    rdx,QWORD PTR [rcx+0x8]
  438514:	xor    eax,eax
  438516:	test   rdx,rdx
  438519:	je     0x43852f
  43851b:	nop    DWORD PTR [rax+rax*1+0x0]
  438520:	add    eax,DWORD PTR [rdx]
  438522:	sub    eax,edx
  438524:	mov    rdx,QWORD PTR [rdx+0x8]
  438528:	test   rdx,rdx
  43852b:	jne    0x438520
  43852d:	repz ret 
  43852f:	repz ret 
  438531:	nop
  438532:	nop
  438533:	nop
  438534:	nop
  438535:	nop
  438536:	nop
  438537:	nop
  438538:	nop
  438539:	nop
  43853a:	nop
  43853b:	nop
  43853c:	nop
  43853d:	nop
  43853e:	nop
  43853f:	nop
  438540:	sub    rsp,0x38
  438544:	mov    rax,QWORD PTR [rip+0x22445]        # 0x45a990
  43854b:	test   rax,rax
  43854e:	je     0x43855a
  438550:	mov    DWORD PTR [rsp+0x2c],ecx
  438554:	call   rax
  438556:	mov    ecx,DWORD PTR [rsp+0x2c]
  43855a:	call   0x43f158
  43855f:	nop
  438560:	mov    QWORD PTR [rip+0x9bf9],rcx        # 0x442160
  438567:	ret    
  438568:	nop    DWORD PTR [rax+rax*1+0x0]
  438570:	push   rdi
  438571:	push   rsi
  438572:	push   rbx
  438573:	sub    rsp,0x30
  438577:	mov    rsi,QWORD PTR [rip+0x9be2]        # 0x442160
  43857e:	lea    rax,[rip+0x1877b]        # 0x450d00
  438585:	lea    rbx,[rip+0x18777]        # 0x450d03
  43858c:	mov    rdi,rcx
  43858f:	cmp    BYTE PTR [rsi],0x0
  438592:	cmovne rbx,rax
  438596:	call   QWORD PTR [rip+0x23080]        # 0x45b61c
  43859c:	lea    rdx,[rip+0x18765]        # 0x450d08
  4385a3:	lea    rcx,[rax+0x60]
  4385a7:	mov    DWORD PTR [rsp+0x20],edi
  4385ab:	mov    r9,rbx
  4385ae:	mov    r8,rsi
  4385b1:	call   0x43f120
  4385b6:	mov    ecx,0x1
  4385bb:	call   0x438540
  4385c0:	nop
  4385c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4385c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4385d0:	push   rbx
  4385d1:	sub    rsp,0x20
  4385d5:	mov    eax,0x1
  4385da:	test   rcx,rcx
  4385dd:	mov    rbx,rcx
  4385e0:	cmove  rbx,rax
  4385e4:	mov    rcx,rbx
  4385e7:	call   0x43f0c0
  4385ec:	test   rax,rax
  4385ef:	je     0x4385f7
  4385f1:	add    rsp,0x20
  4385f5:	pop    rbx
  4385f6:	ret    
  4385f7:	mov    rcx,rbx
  4385fa:	call   0x438570
  4385ff:	nop
  438600:	push   rsi
  438601:	push   rbx
  438602:	sub    rsp,0x28
  438606:	test   rcx,rcx
  438609:	mov    rbx,rcx
  43860c:	mov    rsi,rdx
  43860f:	je     0x438630
  438611:	test   rdx,rdx
  438614:	je     0x438630
  438616:	mov    rdx,rsi
  438619:	mov    rcx,rbx
  43861c:	call   0x43f160
  438621:	test   rax,rax
  438624:	je     0x43863c
  438626:	add    rsp,0x28
  43862a:	pop    rbx
  43862b:	pop    rsi
  43862c:	ret    
  43862d:	nop    DWORD PTR [rax]
  438630:	mov    esi,0x1
  438635:	mov    ebx,0x1
  43863a:	jmp    0x438616
  43863c:	mov    rcx,rsi
  43863f:	imul   rcx,rbx
  438643:	call   0x438570
  438648:	nop
  438649:	nop    DWORD PTR [rax+0x0]
  438650:	push   rbx
  438651:	sub    rsp,0x20
  438655:	mov    eax,0x1
  43865a:	test   rdx,rdx
  43865d:	mov    rbx,rdx
  438660:	cmove  rbx,rax
  438664:	test   rcx,rcx
  438667:	je     0x438680
  438669:	mov    rdx,rbx
  43866c:	call   0x43f080
  438671:	test   rax,rax
  438674:	je     0x43868a
  438676:	add    rsp,0x20
  43867a:	pop    rbx
  43867b:	ret    
  43867c:	nop    DWORD PTR [rax+0x0]
  438680:	mov    rcx,rbx
  438683:	call   0x43f0c0
  438688:	jmp    0x438671
  43868a:	mov    rcx,rbx
  43868d:	call   0x438570
  438692:	nop
  438693:	nop
  438694:	nop
  438695:	nop
  438696:	nop
  438697:	nop
  438698:	nop
  438699:	nop
  43869a:	nop
  43869b:	nop
  43869c:	nop
  43869d:	nop
  43869e:	nop
  43869f:	nop
  4386a0:	push   rsi
  4386a1:	push   rbx
  4386a2:	sub    rsp,0x28
  4386a6:	mov    rbx,rcx
  4386a9:	mov    rsi,rdx
  4386ac:	mov    ecx,0x1
  4386b1:	mov    rdx,r8
  4386b4:	call   0x438600
  4386b9:	mov    r8,rsi
  4386bc:	mov    rdx,rbx
  4386bf:	mov    rcx,rax
  4386c2:	add    rsp,0x28
  4386c6:	pop    rbx
  4386c7:	pop    rsi
  4386c8:	jmp    0x43f0a8
  4386cd:	nop
  4386ce:	nop
  4386cf:	nop
  4386d0:	push   rsi
  4386d1:	push   rbx
  4386d2:	sub    rsp,0x28
  4386d6:	mov    rsi,rcx
  4386d9:	call   0x43f028
  4386de:	lea    rbx,[rax+0x1]
  4386e2:	mov    rcx,rbx
  4386e5:	call   0x4385d0
  4386ea:	mov    r8,rbx
  4386ed:	mov    rdx,rsi
  4386f0:	mov    rcx,rax
  4386f3:	add    rsp,0x28
  4386f7:	pop    rbx
  4386f8:	pop    rsi
  4386f9:	jmp    0x43f0a8
  4386fe:	nop
  4386ff:	nop
  438700:	push   rbx
  438701:	sub    rsp,0x20
  438705:	mov    ebx,ecx
  438707:	call   0x43f030
  43870c:	test   rax,rax
  43870f:	je     0x438720
  438711:	add    rsp,0x20
  438715:	pop    rbx
  438716:	ret    
  438717:	nop    WORD PTR [rax+rax*1+0x0]
  438720:	lea    rdx,[rip+0x18619]        # 0x450d40
  438727:	lea    rcx,[rip+0x20dd2]        # 0x459500
  43872e:	mov    r8d,ebx
  438731:	call   0x43f068
  438736:	lea    rax,[rip+0x20dc3]        # 0x459500
  43873d:	add    rsp,0x20
  438741:	pop    rbx
  438742:	ret    
  438743:	nop
  438744:	nop
  438745:	nop
  438746:	nop
  438747:	nop
  438748:	nop
  438749:	nop
  43874a:	nop
  43874b:	nop
  43874c:	nop
  43874d:	nop
  43874e:	nop
  43874f:	nop
  438750:	push   rdi
  438751:	push   rsi
  438752:	push   rbx
  438753:	sub    rsp,0x20
  438757:	mov    rdi,rcx
  43875a:	mov    rcx,rdx
  43875d:	mov    rsi,rdx
  438760:	call   0x43f028
  438765:	lea    r8,[rax+0x1]
  438769:	mov    rbx,rax
  43876c:	mov    rdx,rsi
  43876f:	mov    rcx,rdi
  438772:	call   0x43f0a8
  438777:	add    rax,rbx
  43877a:	add    rsp,0x20
  43877e:	pop    rbx
  43877f:	pop    rsi
  438780:	pop    rdi
  438781:	ret    
  438782:	nop
  438783:	nop
  438784:	nop
  438785:	nop
  438786:	nop
  438787:	nop
  438788:	nop
  438789:	nop
  43878a:	nop
  43878b:	nop
  43878c:	nop
  43878d:	nop
  43878e:	nop
  43878f:	nop
  438790:	jmp    QWORD PTR [rip+0x23186]        # 0x45b91c
  438796:	nop
  438797:	nop
  438798:	jmp    QWORD PTR [rip+0x23176]        # 0x45b914
  43879e:	nop
  43879f:	nop
  4387a0:	jmp    QWORD PTR [rip+0x23166]        # 0x45b90c
  4387a6:	nop
  4387a7:	nop
  4387a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4387b0:	push   rbx
  4387b1:	sub    rsp,0x30
  4387b5:	mov    rbx,rcx
  4387b8:	mov    rcx,QWORD PTR [rip+0x221d9]        # 0x45a998
  4387bf:	call   0x438d60
  4387c4:	cmp    rax,0xffffffffffffffff
  4387c8:	mov    QWORD PTR [rsp+0x20],rax
  4387cd:	je     0x438845
  4387cf:	mov    ecx,0x8
  4387d4:	call   0x43f1b0
  4387d9:	mov    rcx,QWORD PTR [rip+0x221b8]        # 0x45a998
  4387e0:	call   0x438d60
  4387e5:	mov    rcx,QWORD PTR [rip+0x221b4]        # 0x45a9a0
  4387ec:	mov    QWORD PTR [rsp+0x20],rax
  4387f1:	call   0x438d60
  4387f6:	lea    rdx,[rsp+0x20]
  4387fb:	lea    r8,[rsp+0x28]
  438800:	mov    rcx,rbx
  438803:	mov    QWORD PTR [rsp+0x28],rax
  438808:	call   0x43f228
  43880d:	mov    rcx,QWORD PTR [rsp+0x20]
  438812:	mov    rbx,rax
  438815:	call   0x438d70
  43881a:	mov    rcx,QWORD PTR [rsp+0x28]
  43881f:	mov    QWORD PTR [rip+0x22172],rax        # 0x45a998
  438826:	call   0x438d70
  43882b:	mov    ecx,0x8
  438830:	mov    QWORD PTR [rip+0x22169],rax        # 0x45a9a0
  438837:	call   0x43f188
  43883c:	mov    rax,rbx
  43883f:	add    rsp,0x30
  438843:	pop    rbx
  438844:	ret    
  438845:	mov    rax,QWORD PTR [rip+0x18c64]        # 0x4514b0
  43884c:	mov    rcx,rbx
  43884f:	call   QWORD PTR [rax]
  438851:	add    rsp,0x30
  438855:	pop    rbx
  438856:	ret    
  438857:	nop    WORD PTR [rax+rax*1+0x0]
  438860:	sub    rsp,0x28
  438864:	call   0x4387b0
  438869:	test   rax,rax
  43886c:	sete   al
  43886f:	movzx  eax,al
  438872:	neg    eax
  438874:	add    rsp,0x28
  438878:	ret    
  438879:	nop
  43887a:	nop
  43887b:	nop
  43887c:	nop
  43887d:	nop
  43887e:	nop
  43887f:	nop
  438880:	sub    rsp,0x28
  438884:	mov    rax,QWORD PTR [rip+0x98e5]        # 0x442170
  43888b:	mov    rax,QWORD PTR [rax]
  43888e:	test   rax,rax
  438891:	je     0x4388b0
  438893:	call   rax
  438895:	mov    rax,QWORD PTR [rip+0x98d4]        # 0x442170
  43889c:	lea    rdx,[rax+0x8]
  4388a0:	mov    rax,QWORD PTR [rax+0x8]
  4388a4:	mov    QWORD PTR [rip+0x98c5],rdx        # 0x442170
  4388ab:	test   rax,rax
  4388ae:	jne    0x438893
  4388b0:	add    rsp,0x28
  4388b4:	ret    
  4388b5:	nop
  4388b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4388c0:	push   rsi
  4388c1:	push   rbx
  4388c2:	sub    rsp,0x28
  4388c6:	mov    rsi,QWORD PTR [rip+0x18b53]        # 0x451420
  4388cd:	mov    rax,QWORD PTR [rsi]
  4388d0:	cmp    eax,0xffffffff
  4388d3:	mov    ebx,eax
  4388d5:	je     0x438900
  4388d7:	test   ebx,ebx
  4388d9:	je     0x4388ea
  4388db:	nop    DWORD PTR [rax+rax*1+0x0]
  4388e0:	mov    eax,ebx
  4388e2:	call   QWORD PTR [rsi+rax*8]
  4388e5:	sub    ebx,0x1
  4388e8:	jne    0x4388e0
  4388ea:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x438880
  4388f1:	add    rsp,0x28
  4388f5:	pop    rbx
  4388f6:	pop    rsi
  4388f7:	jmp    0x438860
  4388fc:	nop    DWORD PTR [rax+0x0]
  438900:	xor    ebx,ebx
  438902:	jmp    0x438906
  438904:	mov    ebx,eax
  438906:	lea    edx,[rbx+0x1]
  438909:	cmp    QWORD PTR [rsi+rdx*8],0x0
  43890e:	mov    rax,rdx
  438911:	jne    0x438904
  438913:	jmp    0x4388d7
  438915:	nop
  438916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438920:	mov    eax,DWORD PTR [rip+0x20c1a]        # 0x459540
  438926:	test   eax,eax
  438928:	je     0x438930
  43892a:	repz ret 
  43892c:	nop    DWORD PTR [rax+0x0]
  438930:	mov    DWORD PTR [rip+0x20c06],0x1        # 0x459540
  43893a:	jmp    0x4388c0
  43893c:	nop
  43893d:	nop
  43893e:	nop
  43893f:	nop
  438940:	mov    rax,QWORD PTR [rip+0x22cdd]        # 0x45b624
  438947:	rex.W jmp rax
  43894a:	nop
  43894b:	nop
  43894c:	nop
  43894d:	nop
  43894e:	nop
  43894f:	nop
  438950:	xor    eax,eax
  438952:	ret    
  438953:	nop
  438954:	nop
  438955:	nop
  438956:	nop
  438957:	nop
  438958:	nop
  438959:	nop
  43895a:	nop
  43895b:	nop
  43895c:	nop
  43895d:	nop
  43895e:	nop
  43895f:	nop
  438960:	push   r12
  438962:	push   rbp
  438963:	push   rdi
  438964:	push   rsi
  438965:	push   rbx
  438966:	sub    rsp,0x40
  43896a:	mov    rbx,QWORD PTR [rip+0x989f]        # 0x442210
  438971:	movabs rax,0x2b992ddfa232
  43897b:	mov    QWORD PTR [rsp+0x20],0x0
  438984:	cmp    rbx,rax
  438987:	je     0x4389a0
  438989:	not    rbx
  43898c:	mov    QWORD PTR [rip+0x988d],rbx        # 0x442220
  438993:	add    rsp,0x40
  438997:	pop    rbx
  438998:	pop    rsi
  438999:	pop    rdi
  43899a:	pop    rbp
  43899b:	pop    r12
  43899d:	ret    
  43899e:	xchg   ax,ax
  4389a0:	lea    rcx,[rsp+0x20]
  4389a5:	call   QWORD PTR [rip+0x22ba9]        # 0x45b554
  4389ab:	mov    r12,QWORD PTR [rsp+0x20]
  4389b0:	call   QWORD PTR [rip+0x22b5e]        # 0x45b514
  4389b6:	mov    ebp,eax
  4389b8:	call   QWORD PTR [rip+0x22b5e]        # 0x45b51c
  4389be:	mov    edi,eax
  4389c0:	call   QWORD PTR [rip+0x22b96]        # 0x45b55c
  4389c6:	lea    rcx,[rsp+0x30]
  4389cb:	mov    esi,eax
  4389cd:	call   QWORD PTR [rip+0x22bb1]        # 0x45b584
  4389d3:	xor    r12,QWORD PTR [rsp+0x30]
  4389d8:	mov    edx,edi
  4389da:	movabs rax,0xffffffffffff
  4389e4:	xor    rbp,r12
  4389e7:	mov    rdi,rbp
  4389ea:	xor    rdi,rdx
  4389ed:	mov    edx,esi
  4389ef:	xor    rdi,rdx
  4389f2:	mov    rsi,rdi
  4389f5:	and    rsi,rax
  4389f8:	cmp    rsi,rbx
  4389fb:	je     0x438a20
  4389fd:	mov    rax,rsi
  438a00:	not    rax
  438a03:	mov    QWORD PTR [rip+0x9806],rsi        # 0x442210
  438a0a:	mov    QWORD PTR [rip+0x980f],rax        # 0x442220
  438a11:	add    rsp,0x40
  438a15:	pop    rbx
  438a16:	pop    rsi
  438a17:	pop    rdi
  438a18:	pop    rbp
  438a19:	pop    r12
  438a1b:	ret    
  438a1c:	nop    DWORD PTR [rax+0x0]
  438a20:	movabs rax,0xffffd466d2205dcc
  438a2a:	movabs rsi,0x2b992ddfa233
  438a34:	jmp    0x438a03
  438a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438a40:	push   rbp
  438a41:	push   rsi
  438a42:	push   rbx
  438a43:	mov    rbp,rsp
  438a46:	sub    rsp,0x70
  438a4a:	mov    rsi,rcx
  438a4d:	lea    rcx,[rip+0x20b2c]        # 0x459580
  438a54:	call   QWORD PTR [rip+0x22b3a]        # 0x45b594
  438a5a:	mov    rbx,QWORD PTR [rip+0x20c17]        # 0x459678
  438a61:	xor    r8d,r8d
  438a64:	lea    rdx,[rbp-0x28]
  438a68:	mov    rcx,rbx
  438a6b:	call   QWORD PTR [rip+0x22b2b]        # 0x45b59c
  438a71:	test   rax,rax
  438a74:	mov    r9,rax
  438a77:	je     0x438b20
  438a7d:	lea    rax,[rbp-0x20]
  438a81:	mov    QWORD PTR [rsp+0x38],0x0
  438a8a:	mov    r8,rbx
  438a8d:	mov    rdx,QWORD PTR [rbp-0x28]
  438a91:	xor    ecx,ecx
  438a93:	mov    QWORD PTR [rsp+0x30],rax
  438a98:	lea    rax,[rbp-0x18]
  438a9c:	mov    QWORD PTR [rsp+0x28],rax
  438aa1:	lea    rax,[rip+0x20ad8]        # 0x459580
  438aa8:	mov    QWORD PTR [rsp+0x20],rax
  438aad:	call   QWORD PTR [rip+0x22af1]        # 0x45b5a4
  438ab3:	mov    rax,QWORD PTR [rip+0x20bbe]        # 0x459678
  438aba:	xor    ecx,ecx
  438abc:	mov    QWORD PTR [rip+0x20b3d],rsi        # 0x459600
  438ac3:	mov    DWORD PTR [rip+0x20fb3],0xc0000409        # 0x459a80
  438acd:	mov    DWORD PTR [rip+0x20fad],0x1        # 0x459a84
  438ad7:	mov    QWORD PTR [rip+0x20fb2],rax        # 0x459a90
  438ade:	mov    rax,QWORD PTR [rip+0x972b]        # 0x442210
  438ae5:	mov    QWORD PTR [rbp-0x10],rax
  438ae9:	mov    rax,QWORD PTR [rip+0x9730]        # 0x442220
  438af0:	mov    QWORD PTR [rbp-0x8],rax
  438af4:	call   QWORD PTR [rip+0x22ab2]        # 0x45b5ac
  438afa:	lea    rcx,[rip+0x1825f]        # 0x450d60
  438b01:	call   QWORD PTR [rip+0x22ac5]        # 0x45b5cc
  438b07:	call   QWORD PTR [rip+0x229ff]        # 0x45b50c
  438b0d:	mov    edx,0xc0000409
  438b12:	mov    rcx,rax
  438b15:	call   QWORD PTR [rip+0x22aa1]        # 0x45b5bc
  438b1b:	call   0x43f180
  438b20:	mov    rax,QWORD PTR [rbp+0x18]
  438b24:	mov    QWORD PTR [rip+0x20b4d],rax        # 0x459678
  438b2b:	lea    rax,[rbp+0x8]
  438b2f:	mov    QWORD PTR [rip+0x20ae2],rax        # 0x459618
  438b36:	jmp    0x438ab3
  438b3b:	nop
  438b3c:	nop
  438b3d:	nop
  438b3e:	nop
  438b3f:	nop
  438b40:	sub    rsp,0x28
  438b44:	test   edx,edx
  438b46:	je     0x438b60
  438b48:	cmp    edx,0x3
  438b4b:	je     0x438b60
  438b4d:	mov    eax,0x1
  438b52:	add    rsp,0x28
  438b56:	ret    
  438b57:	nop    WORD PTR [rax+rax*1+0x0]
  438b60:	call   0x439850
  438b65:	mov    eax,0x1
  438b6a:	add    rsp,0x28
  438b6e:	ret    
  438b6f:	nop
  438b70:	push   rsi
  438b71:	push   rbx
  438b72:	sub    rsp,0x28
  438b76:	mov    rax,QWORD PTR [rip+0x18883]        # 0x451400
  438b7d:	cmp    DWORD PTR [rax],0x2
  438b80:	je     0x438b88
  438b82:	mov    DWORD PTR [rax],0x2
  438b88:	cmp    edx,0x2
  438b8b:	je     0x438ba0
  438b8d:	cmp    edx,0x1
  438b90:	je     0x438bd2
  438b92:	mov    eax,0x1
  438b97:	add    rsp,0x28
  438b9b:	pop    rbx
  438b9c:	pop    rsi
  438b9d:	ret    
  438b9e:	xchg   ax,ax
  438ba0:	lea    rbx,[rip+0x244b9]        # 0x45d060
  438ba7:	lea    rsi,[rip+0x244b2]        # 0x45d060
  438bae:	cmp    rbx,rsi
  438bb1:	je     0x438b92
  438bb3:	mov    rax,QWORD PTR [rbx]
  438bb6:	test   rax,rax
  438bb9:	je     0x438bbd
  438bbb:	call   rax
  438bbd:	add    rbx,0x8
  438bc1:	cmp    rbx,rsi
  438bc4:	jne    0x438bb3
  438bc6:	mov    eax,0x1
  438bcb:	add    rsp,0x28
  438bcf:	pop    rbx
  438bd0:	pop    rsi
  438bd1:	ret    
  438bd2:	call   0x439850
  438bd7:	jmp    0x438b92
  438bd9:	nop    DWORD PTR [rax+0x0]
  438be0:	xor    eax,eax
  438be2:	ret    
  438be3:	nop
  438be4:	nop
  438be5:	nop
  438be6:	nop
  438be7:	nop
  438be8:	nop
  438be9:	nop
  438bea:	nop
  438beb:	nop
  438bec:	nop
  438bed:	nop
  438bee:	nop
  438bef:	nop
  438bf0:	sub    rsp,0x58
  438bf4:	mov    rax,QWORD PTR [rip+0x20f65]        # 0x459b60
  438bfb:	test   rax,rax
  438bfe:	je     0x438c2c
  438c00:	movsd  xmm0,QWORD PTR [rsp+0x80]
  438c09:	mov    DWORD PTR [rsp+0x20],ecx
  438c0d:	lea    rcx,[rsp+0x20]
  438c12:	mov    QWORD PTR [rsp+0x28],rdx
  438c17:	movsd  QWORD PTR [rsp+0x30],xmm2
  438c1d:	movsd  QWORD PTR [rsp+0x38],xmm3
  438c23:	movsd  QWORD PTR [rsp+0x40],xmm0
  438c29:	call   rax
  438c2b:	nop
  438c2c:	add    rsp,0x58
  438c30:	ret    
  438c31:	nop    DWORD PTR [rax+rax*1+0x0]
  438c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438c40:	mov    QWORD PTR [rip+0x20f19],rcx        # 0x459b60
  438c47:	jmp    0x43f200
  438c4c:	nop    DWORD PTR [rax+0x0]
  438c50:	push   rsi
  438c51:	push   rbx
  438c52:	sub    rsp,0x78
  438c56:	movaps XMMWORD PTR [rsp+0x40],xmm6
  438c5b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  438c60:	movaps XMMWORD PTR [rsp+0x60],xmm8
  438c66:	cmp    DWORD PTR [rcx],0x6
  438c69:	ja     0x438d40
  438c6f:	mov    edx,DWORD PTR [rcx]
  438c71:	lea    rax,[rip+0x1822c]        # 0x450ea4
  438c78:	movsxd rdx,DWORD PTR [rax+rdx*4]
  438c7c:	add    rax,rdx
  438c7f:	jmp    rax
  438c81:	lea    rbx,[rip+0x180f8]        # 0x450d80
  438c88:	nop    DWORD PTR [rax+rax*1+0x0]
  438c90:	movsd  xmm8,QWORD PTR [rcx+0x20]
  438c96:	mov    rsi,QWORD PTR [rcx+0x8]
  438c9a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  438c9f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  438ca4:	call   0x43f218
  438ca9:	movsd  QWORD PTR [rsp+0x30],xmm8
  438cb0:	lea    rcx,[rax+0x60]
  438cb4:	lea    rdx,[rip+0x181bd]        # 0x450e78
  438cbb:	movsd  QWORD PTR [rsp+0x28],xmm7
  438cc1:	mov    r9,rsi
  438cc4:	mov    r8,rbx
  438cc7:	movsd  QWORD PTR [rsp+0x20],xmm6
  438ccd:	call   0x43f120
  438cd2:	nop
  438cd3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  438cd8:	xor    eax,eax
  438cda:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  438cdf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  438ce5:	add    rsp,0x78
  438ce9:	pop    rbx
  438cea:	pop    rsi
  438ceb:	ret    
  438cec:	nop    DWORD PTR [rax+0x0]
  438cf0:	lea    rbx,[rip+0x180a8]        # 0x450d9f
  438cf7:	jmp    0x438c90
  438cf9:	nop    DWORD PTR [rax+0x0]
  438d00:	lea    rbx,[rip+0x180b9]        # 0x450dc0
  438d07:	jmp    0x438c90
  438d09:	nop    DWORD PTR [rax+0x0]
  438d10:	lea    rbx,[rip+0x18119]        # 0x450e30
  438d17:	jmp    0x438c90
  438d1c:	nop    DWORD PTR [rax+0x0]
  438d20:	lea    rbx,[rip+0x180e1]        # 0x450e08
  438d27:	jmp    0x438c90
  438d2c:	nop    DWORD PTR [rax+0x0]
  438d30:	lea    rbx,[rip+0x180a9]        # 0x450de0
  438d37:	jmp    0x438c90
  438d3c:	nop    DWORD PTR [rax+0x0]
  438d40:	lea    rbx,[rip+0x1811f]        # 0x450e66
  438d47:	jmp    0x438c90
  438d4c:	nop
  438d4d:	nop
  438d4e:	nop
  438d4f:	nop
  438d50:	fninit 
  438d52:	ret    
  438d53:	nop
  438d54:	nop
  438d55:	nop
  438d56:	nop
  438d57:	nop
  438d58:	nop
  438d59:	nop
  438d5a:	nop
  438d5b:	nop
  438d5c:	nop
  438d5d:	nop
  438d5e:	nop
  438d5f:	nop
  438d60:	mov    rax,rcx
  438d63:	ret    
  438d64:	xchg   ax,ax
  438d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438d70:	mov    rax,rcx
  438d73:	ret    
  438d74:	nop
  438d75:	nop
  438d76:	nop
  438d77:	nop
  438d78:	nop
  438d79:	nop
  438d7a:	nop
  438d7b:	nop
  438d7c:	nop
  438d7d:	nop
  438d7e:	nop
  438d7f:	nop
  438d80:	push   rsi
  438d81:	push   rbx
  438d82:	sub    rsp,0x38
  438d86:	lea    rax,[rsp+0x58]
  438d8b:	mov    rbx,rcx
  438d8e:	mov    QWORD PTR [rsp+0x58],rdx
  438d93:	mov    QWORD PTR [rsp+0x60],r8
  438d98:	mov    QWORD PTR [rsp+0x68],r9
  438d9d:	mov    QWORD PTR [rsp+0x28],rax
  438da2:	call   0x43f218
  438da7:	lea    rcx,[rip+0x18112]        # 0x450ec0
  438dae:	lea    r9,[rax+0x60]
  438db2:	mov    r8d,0x1b
  438db8:	mov    edx,0x1
  438dbd:	call   0x43f0e0
  438dc2:	mov    rsi,QWORD PTR [rsp+0x28]
  438dc7:	call   0x43f218
  438dcc:	lea    rcx,[rax+0x60]
  438dd0:	mov    rdx,rbx
  438dd3:	mov    r8,rsi
  438dd6:	call   0x43efd8
  438ddb:	call   0x43f180
  438de0:	nop
  438de1:	nop    DWORD PTR [rax+rax*1+0x0]
  438de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438df0:	push   r13
  438df2:	push   r12
  438df4:	push   rbp
  438df5:	push   rdi
  438df6:	push   rsi
  438df7:	push   rbx
  438df8:	sub    rsp,0x58
  438dfc:	movsxd rbp,DWORD PTR [rip+0x20d81]        # 0x459b84
  438e03:	mov    rbx,rcx
  438e06:	mov    rsi,rdx
  438e09:	mov    rdi,r8
  438e0c:	test   ebp,ebp
  438e0e:	jle    0x438f0a
  438e14:	mov    rax,QWORD PTR [rip+0x20d6d]        # 0x459b88
  438e1b:	xor    r9d,r9d
  438e1e:	add    rax,0x8
  438e22:	mov    r10,QWORD PTR [rax]
  438e25:	cmp    rbx,r10
  438e28:	jb     0x438e3e
  438e2a:	mov    rdx,QWORD PTR [rax+0x8]
  438e2e:	mov    r11d,DWORD PTR [rdx+0x8]
  438e32:	add    r10,r11
  438e35:	cmp    rbx,r10
  438e38:	jb     0x438ef0
  438e3e:	add    r9d,0x1
  438e42:	add    rax,0x18
  438e46:	cmp    r9d,ebp
  438e49:	jne    0x438e22
  438e4b:	mov    rcx,rbx
  438e4e:	call   0x439a60
  438e53:	test   rax,rax
  438e56:	mov    r12,rax
  438e59:	je     0x438f42
  438e5f:	lea    rbp,[rbp+rbp*2+0x0]
  438e64:	shl    rbp,0x3
  438e68:	mov    r13,rbp
  438e6b:	add    r13,QWORD PTR [rip+0x20d16]        # 0x459b88
  438e72:	mov    QWORD PTR [r13+0x10],rax
  438e76:	mov    DWORD PTR [r13+0x0],0x0
  438e7e:	call   0x439b80
  438e83:	mov    edx,DWORD PTR [r12+0xc]
  438e88:	mov    r8d,0x30
  438e8e:	add    rax,rdx
  438e91:	lea    rdx,[rsp+0x20]
  438e96:	mov    QWORD PTR [r13+0x8],rax
  438e9a:	mov    rax,QWORD PTR [rip+0x20ce7]        # 0x459b88
  438ea1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  438ea6:	call   QWORD PTR [rip+0x22730]        # 0x45b5dc
  438eac:	test   rax,rax
  438eaf:	je     0x438f25
  438eb1:	mov    eax,DWORD PTR [rsp+0x44]
  438eb5:	lea    edx,[rax-0x4]
  438eb8:	and    edx,0xfffffffb
  438ebb:	je     0x438ee9
  438ebd:	sub    eax,0x40
  438ec0:	and    eax,0xffffffbf
  438ec3:	je     0x438ee9
  438ec5:	mov    r9,rbp
  438ec8:	add    r9,QWORD PTR [rip+0x20cb9]        # 0x459b88
  438ecf:	mov    r8d,0x40
  438ed5:	mov    rdx,QWORD PTR [rsp+0x38]
  438eda:	mov    rcx,QWORD PTR [rsp+0x20]
  438edf:	call   QWORD PTR [rip+0x226ef]        # 0x45b5d4
  438ee5:	test   eax,eax
  438ee7:	je     0x438f11
  438ee9:	add    DWORD PTR [rip+0x20c94],0x1        # 0x459b84
  438ef0:	mov    r8,rdi
  438ef3:	mov    rdx,rsi
  438ef6:	mov    rcx,rbx
  438ef9:	add    rsp,0x58
  438efd:	pop    rbx
  438efe:	pop    rsi
  438eff:	pop    rdi
  438f00:	pop    rbp
  438f01:	pop    r12
  438f03:	pop    r13
  438f05:	jmp    0x43f0a8
  438f0a:	xor    ebp,ebp
  438f0c:	jmp    0x438e4b
  438f11:	call   QWORD PTR [rip+0x2261d]        # 0x45b534
  438f17:	lea    rcx,[rip+0x1801a]        # 0x450f38
  438f1e:	mov    edx,eax
  438f20:	call   0x438d80
  438f25:	mov    rax,QWORD PTR [rip+0x20c5c]        # 0x459b88
  438f2c:	mov    edx,DWORD PTR [r12+0x8]
  438f31:	lea    rcx,[rip+0x17fc8]        # 0x450f00
  438f38:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  438f3d:	call   0x438d80
  438f42:	lea    rcx,[rip+0x17f97]        # 0x450ee0
  438f49:	mov    rdx,rbx
  438f4c:	call   0x438d80
  438f51:	nop
  438f52:	nop    DWORD PTR [rax+0x0]
  438f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438f60:	push   rbp
  438f61:	push   r14
  438f63:	push   r13
  438f65:	push   r12
  438f67:	push   rdi
  438f68:	push   rsi
  438f69:	push   rbx
  438f6a:	mov    rbp,rsp
  438f6d:	sub    rsp,0x60
  438f71:	mov    ebx,DWORD PTR [rip+0x20c09]        # 0x459b80
  438f77:	test   ebx,ebx
  438f79:	je     0x438f90
  438f7b:	mov    rsp,rbp
  438f7e:	pop    rbx
  438f7f:	pop    rsi
  438f80:	pop    rdi
  438f81:	pop    r12
  438f83:	pop    r13
  438f85:	pop    r14
  438f87:	pop    rbp
  438f88:	ret    
  438f89:	nop    DWORD PTR [rax+0x0]
  438f90:	mov    DWORD PTR [rip+0x20be6],0x1        # 0x459b80
  438f9a:	call   0x439ab0
  438f9f:	cdqe   
  438fa1:	lea    rax,[rax+rax*2]
  438fa5:	lea    rax,[rax*8+0x1e]
  438fad:	and    rax,0xfffffffffffffff0
  438fb1:	call   0x439cf0
  438fb6:	mov    rsi,QWORD PTR [rip+0x18473]        # 0x451430
  438fbd:	mov    rbx,QWORD PTR [rip+0x1847c]        # 0x451440
  438fc4:	sub    rsp,rax
  438fc7:	mov    DWORD PTR [rip+0x20bb3],0x0        # 0x459b84
  438fd1:	lea    rax,[rsp+0x20]
  438fd6:	mov    QWORD PTR [rip+0x20bab],rax        # 0x459b88
  438fdd:	mov    rax,rsi
  438fe0:	sub    rax,rbx
  438fe3:	cmp    rax,0x7
  438fe7:	jle    0x438f7b
  438fe9:	cmp    rax,0xb
  438fed:	jle    0x439015
  438fef:	mov    r11d,DWORD PTR [rbx]
  438ff2:	test   r11d,r11d
  438ff5:	jne    0x439140
  438ffb:	mov    r10d,DWORD PTR [rbx+0x4]
  438fff:	test   r10d,r10d
  439002:	jne    0x439140
  439008:	mov    r9d,DWORD PTR [rbx+0x8]
  43900c:	test   r9d,r9d
  43900f:	jne    0x43902c
  439011:	add    rbx,0xc
  439015:	mov    r8d,DWORD PTR [rbx]
  439018:	test   r8d,r8d
  43901b:	jne    0x439140
  439021:	mov    ecx,DWORD PTR [rbx+0x4]
  439024:	test   ecx,ecx
  439026:	jne    0x439140
  43902c:	mov    edx,DWORD PTR [rbx+0x8]
  43902f:	cmp    edx,0x1
  439032:	jne    0x43924c
  439038:	add    rbx,0xc
  43903c:	cmp    rbx,rsi
  43903f:	jae    0x438f7b
  439045:	mov    r12,QWORD PTR [rip+0x18414]        # 0x451460
  43904c:	lea    r13,[rbp-0x30]
  439050:	movabs r14,0xffffffff00000000
  43905a:	mov    ecx,DWORD PTR [rbx+0x4]
  43905d:	mov    eax,DWORD PTR [rbx]
  43905f:	movzx  edx,BYTE PTR [rbx+0x8]
  439063:	add    rax,r12
  439066:	add    rcx,r12
  439069:	cmp    edx,0x10
  43906c:	mov    r8,QWORD PTR [rax]
  43906f:	je     0x4391b6
  439075:	jbe    0x43917d
  43907b:	cmp    edx,0x20
  43907e:	je     0x4391ff
  439084:	cmp    edx,0x40
  439087:	jne    0x4391eb
  43908d:	sub    r8,rax
  439090:	mov    rdx,r13
  439093:	mov    rdi,r13
  439096:	mov    rax,r8
  439099:	add    rax,QWORD PTR [rcx]
  43909c:	mov    r8d,0x8
  4390a2:	mov    QWORD PTR [rbp-0x30],rax
  4390a6:	call   0x438df0
  4390ab:	add    rbx,0xc
  4390af:	cmp    rbx,rsi
  4390b2:	jb     0x43905a
  4390b4:	mov    eax,DWORD PTR [rip+0x20aca]        # 0x459b84
  4390ba:	xor    ebx,ebx
  4390bc:	xor    esi,esi
  4390be:	test   eax,eax
  4390c0:	jle    0x438f7b
  4390c6:	mov    r14,QWORD PTR [rip+0x2250f]        # 0x45b5dc
  4390cd:	lea    r13,[rbp-0x34]
  4390d1:	mov    r12,QWORD PTR [rip+0x224fc]        # 0x45b5d4
  4390d8:	jmp    0x4390f3
  4390da:	nop    WORD PTR [rax+rax*1+0x0]
  4390e0:	add    esi,0x1
  4390e3:	add    rbx,0x18
  4390e7:	cmp    esi,DWORD PTR [rip+0x20a97]        # 0x459b84
  4390ed:	jge    0x438f7b
  4390f3:	mov    rax,rbx
  4390f6:	add    rax,QWORD PTR [rip+0x20a8b]        # 0x459b88
  4390fd:	mov    edx,DWORD PTR [rax]
  4390ff:	test   edx,edx
  439101:	je     0x4390e0
  439103:	mov    rcx,QWORD PTR [rax+0x8]
  439107:	mov    r8d,0x30
  43910d:	mov    rdx,rdi
  439110:	call   r14
  439113:	test   rax,rax
  439116:	je     0x43922e
  43911c:	mov    rax,QWORD PTR [rip+0x20a65]        # 0x459b88
  439123:	mov    r9,r13
  439126:	mov    rdx,QWORD PTR [rbp-0x18]
  43912a:	mov    rcx,QWORD PTR [rbp-0x30]
  43912e:	mov    r8d,DWORD PTR [rax+rbx*1]
  439132:	call   r12
  439135:	jmp    0x4390e0
  439137:	nop    WORD PTR [rax+rax*1+0x0]
  439140:	cmp    rbx,rsi
  439143:	jae    0x438f7b
  439149:	mov    r12,QWORD PTR [rip+0x18310]        # 0x451460
  439150:	lea    rdi,[rbp-0x30]
  439154:	mov    ecx,DWORD PTR [rbx+0x4]
  439157:	mov    eax,DWORD PTR [rbx]
  439159:	mov    r8d,0x4
  43915f:	mov    rdx,rdi
  439162:	add    rbx,0x8
  439166:	add    rcx,r12
  439169:	add    eax,DWORD PTR [rcx]
  43916b:	mov    DWORD PTR [rbp-0x30],eax
  43916e:	call   0x438df0
  439173:	cmp    rbx,rsi
  439176:	jb     0x439154
  439178:	jmp    0x4390b4
  43917d:	cmp    edx,0x8
  439180:	jne    0x4391eb
  439182:	movzx  edx,BYTE PTR [rcx]
  439185:	mov    rdi,r13
  439188:	mov    r10,rdx
  43918b:	or     r10,0xffffffffffffff00
  439192:	test   dl,dl
  439194:	cmovs  rdx,r10
  439198:	sub    rdx,rax
  43919b:	lea    rax,[r8+rdx*1]
  43919f:	mov    r8d,0x1
  4391a5:	mov    rdx,r13
  4391a8:	mov    QWORD PTR [rbp-0x30],rax
  4391ac:	call   0x438df0
  4391b1:	jmp    0x4390ab
  4391b6:	movzx  edx,WORD PTR [rcx]
  4391b9:	mov    rdi,r13
  4391bc:	mov    r10,rdx
  4391bf:	or     r10,0xffffffffffff0000
  4391c6:	test   dx,dx
  4391c9:	cmovs  rdx,r10
  4391cd:	sub    rdx,rax
  4391d0:	lea    rax,[r8+rdx*1]
  4391d4:	mov    r8d,0x2
  4391da:	mov    rdx,r13
  4391dd:	mov    QWORD PTR [rbp-0x30],rax
  4391e1:	call   0x438df0
  4391e6:	jmp    0x4390ab
  4391eb:	lea    rcx,[rip+0x17da6]        # 0x450f98
  4391f2:	mov    QWORD PTR [rbp-0x30],0x0
  4391fa:	call   0x438d80
  4391ff:	mov    edx,DWORD PTR [rcx]
  439201:	mov    rdi,r13
  439204:	mov    r10,rdx
  439207:	or     r10,r14
  43920a:	test   edx,edx
  43920c:	cmovs  rdx,r10
  439210:	sub    rdx,rax
  439213:	lea    rax,[r8+rdx*1]
  439217:	mov    r8d,0x4
  43921d:	mov    rdx,r13
  439220:	mov    QWORD PTR [rbp-0x30],rax
  439224:	call   0x438df0
  439229:	jmp    0x4390ab
  43922e:	add    rbx,QWORD PTR [rip+0x20953]        # 0x459b88
  439235:	lea    rcx,[rip+0x17cc4]        # 0x450f00
  43923c:	mov    rax,QWORD PTR [rbx+0x10]
  439240:	mov    r8,QWORD PTR [rbx+0x8]
  439244:	mov    edx,DWORD PTR [rax+0x8]
  439247:	call   0x438d80
  43924c:	lea    rcx,[rip+0x17d0d]        # 0x450f60
  439253:	call   0x438d80
  439258:	nop
  439259:	nop
  43925a:	nop
  43925b:	nop
  43925c:	nop
  43925d:	nop
  43925e:	nop
  43925f:	nop
  439260:	sub    rsp,0x28
  439264:	mov    eax,DWORD PTR [rcx]
  439266:	cmp    eax,0xc0000091
  43926b:	ja     0x4392d0
  43926d:	cmp    eax,0xc000008d
  439272:	jae    0x4392ef
  439274:	cmp    eax,0xc0000008
  439279:	je     0x439390
  43927f:	ja     0x439360
  439285:	cmp    eax,0x80000002
  43928a:	je     0x439390
  439290:	cmp    eax,0xc0000005
  439295:	jne    0x43936e
  43929b:	xor    edx,edx
  43929d:	mov    ecx,0xb
  4392a2:	call   0x43f070
  4392a7:	cmp    rax,0x1
  4392ab:	je     0x4393f0
  4392b1:	test   rax,rax
  4392b4:	je     0x4393d0
  4392ba:	mov    ecx,0xb
  4392bf:	call   rax
  4392c1:	xor    eax,eax
  4392c3:	add    rsp,0x28
  4392c7:	ret    
  4392c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4392d0:	cmp    eax,0xc0000094
  4392d5:	je     0x4393a0
  4392db:	ja     0x439320
  4392dd:	cmp    eax,0xc0000092
  4392e2:	je     0x439390
  4392e8:	cmp    eax,0xc0000093
  4392ed:	jne    0x43936e
  4392ef:	xor    edx,edx
  4392f1:	mov    ecx,0x8
  4392f6:	call   0x43f070
  4392fb:	cmp    rax,0x1
  4392ff:	mov    rdx,rax
  439302:	je     0x439378
  439304:	test   rdx,rdx
  439307:	mov    eax,0x1
  43930c:	je     0x4392c3
  43930e:	mov    ecx,0x8
  439313:	call   rdx
  439315:	xor    eax,eax
  439317:	add    rsp,0x28
  43931b:	ret    
  43931c:	nop    DWORD PTR [rax+0x0]
  439320:	cmp    eax,0xc0000095
  439325:	je     0x439390
  439327:	cmp    eax,0xc0000096
  43932c:	jne    0x43936e
  43932e:	xor    edx,edx
  439330:	mov    ecx,0x4
  439335:	call   0x43f070
  43933a:	cmp    rax,0x1
  43933e:	je     0x4393da
  439344:	test   rax,rax
  439347:	je     0x4393d0
  43934d:	mov    ecx,0x4
  439352:	call   rax
  439354:	xor    eax,eax
  439356:	jmp    0x4392c3
  43935b:	nop    DWORD PTR [rax+rax*1+0x0]
  439360:	cmp    eax,0xc000001d
  439365:	je     0x43932e
  439367:	cmp    eax,0xc000008c
  43936c:	je     0x439390
  43936e:	mov    eax,0x1
  439373:	add    rsp,0x28
  439377:	ret    
  439378:	mov    edx,0x1
  43937d:	mov    ecx,0x8
  439382:	call   0x43f070
  439387:	call   0x438d50
  43938c:	nop    DWORD PTR [rax+0x0]
  439390:	xor    eax,eax
  439392:	add    rsp,0x28
  439396:	ret    
  439397:	nop    WORD PTR [rax+rax*1+0x0]
  4393a0:	xor    edx,edx
  4393a2:	mov    ecx,0x8
  4393a7:	call   0x43f070
  4393ac:	cmp    rax,0x1
  4393b0:	mov    rdx,rax
  4393b3:	jne    0x439304
  4393b9:	mov    edx,0x1
  4393be:	mov    ecx,0x8
  4393c3:	call   0x43f070
  4393c8:	xor    eax,eax
  4393ca:	jmp    0x4392c3
  4393cf:	nop
  4393d0:	mov    eax,0x4
  4393d5:	add    rsp,0x28
  4393d9:	ret    
  4393da:	mov    edx,0x1
  4393df:	mov    ecx,0x4
  4393e4:	call   0x43f070
  4393e9:	xor    eax,eax
  4393eb:	jmp    0x4392c3
  4393f0:	mov    edx,0x1
  4393f5:	mov    ecx,0xb
  4393fa:	call   0x43f070
  4393ff:	xor    eax,eax
  439401:	jmp    0x4392c3
  439406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439410:	push   r12
  439412:	push   rbp
  439413:	push   rdi
  439414:	push   rsi
  439415:	push   rbx
  439416:	sub    rsp,0x20
  43941a:	call   0x439b80
  43941f:	mov    rbp,rax
  439422:	mov    eax,DWORD PTR [rip+0x207a0]        # 0x459bc8
  439428:	test   eax,eax
  43942a:	jne    0x439451
  43942c:	test   rbp,rbp
  43942f:	je     0x439451
  439431:	lea    rcx,[rip+0x17b98]        # 0x450fd0
  439438:	mov    DWORD PTR [rip+0x20786],0x1        # 0x459bc8
  439442:	call   0x4399c0
  439447:	test   rax,rax
  43944a:	je     0x439460
  43944c:	mov    eax,0x1
  439451:	add    rsp,0x20
  439455:	pop    rbx
  439456:	pop    rsi
  439457:	pop    rdi
  439458:	pop    rbp
  439459:	pop    r12
  43945b:	ret    
  43945c:	nop    DWORD PTR [rax+0x0]
  439460:	lea    rbx,[rip+0x20899]        # 0x459d00
  439467:	mov    ecx,0x30
  43946c:	lea    rdx,[rip+0x2078d]        # 0x459c00
  439473:	lea    r12,[rip+0xfffffffffffffde6]        # 0x439260
  43947a:	xor    esi,esi
  43947c:	mov    rdi,rbx
  43947f:	rep stos QWORD PTR es:[rdi],rax
  439482:	mov    rdi,rdx
  439485:	sub    r12,rbp
  439488:	mov    cl,0x20
  43948a:	rep stos QWORD PTR es:[rdi],rax
  43948d:	mov    rdi,rdx
  439490:	jmp    0x4394c0
  439492:	mov    BYTE PTR [rdi],0x9
  439495:	mov    DWORD PTR [rdi+0x4],r12d
  439499:	add    rsi,0x1
  43949d:	mov    edx,DWORD PTR [rax+0xc]
  4394a0:	add    rbx,0xc
  4394a4:	mov    DWORD PTR [rbx-0xc],edx
  4394a7:	add    edx,DWORD PTR [rax+0x8]
  4394aa:	mov    rax,rdi
  4394ad:	sub    rax,rbp
  4394b0:	add    rdi,0x8
  4394b4:	mov    DWORD PTR [rbx-0x4],eax
  4394b7:	mov    DWORD PTR [rbx-0x8],edx
  4394ba:	cmp    rsi,0x20
  4394be:	je     0x4394f5
  4394c0:	mov    rcx,rsi
  4394c3:	call   0x439af0
  4394c8:	test   rax,rax
  4394cb:	jne    0x439492
  4394cd:	test   rsi,rsi
  4394d0:	je     0x43944c
  4394d6:	mov    edx,esi
  4394d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4394e0:	mov    r8,rbp
  4394e3:	lea    rcx,[rip+0x20816]        # 0x459d00
  4394ea:	call   QWORD PTR [rip+0x2209c]        # 0x45b58c
  4394f0:	jmp    0x43944c
  4394f5:	mov    edx,0x20
  4394fa:	jmp    0x4394e0
  4394fc:	nop    DWORD PTR [rax+0x0]
  439500:	push   rbx
  439501:	sub    rsp,0x20
  439505:	mov    rdx,QWORD PTR [rcx]
  439508:	mov    eax,DWORD PTR [rdx]
  43950a:	mov    r8d,eax
  43950d:	and    r8d,0x20ffffff
  439514:	cmp    r8d,0x20474343
  43951b:	je     0x439620
  439521:	cmp    eax,0xc0000091
  439526:	mov    rbx,rcx
  439529:	ja     0x4395b0
  43952f:	cmp    eax,0xc000008d
  439534:	jae    0x4395c7
  43953a:	cmp    eax,0xc0000008
  43953f:	je     0x439573
  439541:	ja     0x439580
  439543:	cmp    eax,0x80000002
  439548:	je     0x439573
  43954a:	cmp    eax,0xc0000005
  43954f:	jne    0x439592
  439551:	xor    edx,edx
  439553:	mov    ecx,0xb
  439558:	call   0x43f070
  43955d:	cmp    rax,0x1
  439561:	je     0x439690
  439567:	test   rax,rax
  43956a:	je     0x439592
  43956c:	mov    ecx,0xb
  439571:	call   rax
  439573:	mov    eax,0xffffffff
  439578:	add    rsp,0x20
  43957c:	pop    rbx
  43957d:	ret    
  43957e:	xchg   ax,ax
  439580:	cmp    eax,0xc000001d
  439585:	je     0x439646
  43958b:	cmp    eax,0xc000008c
  439590:	je     0x439573
  439592:	mov    rax,QWORD PTR [rip+0x20627]        # 0x459bc0
  439599:	test   rax,rax
  43959c:	je     0x439578
  43959e:	mov    rcx,rbx
  4395a1:	add    rsp,0x20
  4395a5:	pop    rbx
  4395a6:	rex.W jmp rax
  4395a9:	nop    DWORD PTR [rax+0x0]
  4395b0:	cmp    eax,0xc0000094
  4395b5:	je     0x4395f2
  4395b7:	ja     0x439630
  4395b9:	cmp    eax,0xc0000092
  4395be:	je     0x439573
  4395c0:	cmp    eax,0xc0000093
  4395c5:	jne    0x439592
  4395c7:	xor    edx,edx
  4395c9:	mov    ecx,0x8
  4395ce:	call   0x43f070
  4395d3:	cmp    rax,0x1
  4395d7:	jne    0x439604
  4395d9:	mov    edx,0x1
  4395de:	mov    ecx,0x8
  4395e3:	call   0x43f070
  4395e8:	call   0x438d50
  4395ed:	jmp    0x439573
  4395f2:	xor    edx,edx
  4395f4:	mov    ecx,0x8
  4395f9:	call   0x43f070
  4395fe:	cmp    rax,0x1
  439602:	je     0x439672
  439604:	test   rax,rax
  439607:	je     0x439592
  439609:	mov    ecx,0x8
  43960e:	call   rax
  439610:	mov    eax,0xffffffff
  439615:	jmp    0x439578
  43961a:	nop    WORD PTR [rax+rax*1+0x0]
  439620:	test   BYTE PTR [rdx+0x4],0x1
  439624:	jne    0x439521
  43962a:	jmp    0x439573
  43962f:	nop
  439630:	cmp    eax,0xc0000095
  439635:	je     0x439573
  43963b:	cmp    eax,0xc0000096
  439640:	jne    0x439592
  439646:	xor    edx,edx
  439648:	mov    ecx,0x4
  43964d:	call   0x43f070
  439652:	cmp    rax,0x1
  439656:	je     0x4396a4
  439658:	test   rax,rax
  43965b:	je     0x439592
  439661:	mov    ecx,0x4
  439666:	call   rax
  439668:	mov    eax,0xffffffff
  43966d:	jmp    0x439578
  439672:	mov    edx,0x1
  439677:	mov    ecx,0x8
  43967c:	call   0x43f070
  439681:	jmp    0x439573
  439686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439690:	mov    edx,0x1
  439695:	mov    ecx,0xb
  43969a:	call   0x43f070
  43969f:	jmp    0x439573
  4396a4:	mov    edx,0x1
  4396a9:	mov    ecx,0x4
  4396ae:	call   0x43f070
  4396b3:	jmp    0x439573
  4396b8:	nop
  4396b9:	nop
  4396ba:	nop
  4396bb:	nop
  4396bc:	nop
  4396bd:	nop
  4396be:	nop
  4396bf:	nop
  4396c0:	push   rbp
  4396c1:	push   rdi
  4396c2:	push   rsi
  4396c3:	push   rbx
  4396c4:	sub    rsp,0x28
  4396c8:	lea    rcx,[rip+0x207d1]        # 0x459ea0
  4396cf:	call   QWORD PTR [rip+0x21e2f]        # 0x45b504
  4396d5:	mov    rbx,QWORD PTR [rip+0x207a4]        # 0x459e80
  4396dc:	test   rbx,rbx
  4396df:	je     0x439714
  4396e1:	mov    rbp,QWORD PTR [rip+0x21edc]        # 0x45b5c4
  4396e8:	mov    rdi,QWORD PTR [rip+0x21e45]        # 0x45b534
  4396ef:	nop
  4396f0:	mov    ecx,DWORD PTR [rbx]
  4396f2:	call   rbp
  4396f4:	mov    rsi,rax
  4396f7:	call   rdi
  4396f9:	test   eax,eax
  4396fb:	jne    0x43970b
  4396fd:	test   rsi,rsi
  439700:	je     0x43970b
  439702:	mov    rax,QWORD PTR [rbx+0x8]
  439706:	mov    rcx,rsi
  439709:	call   rax
  43970b:	mov    rbx,QWORD PTR [rbx+0x10]
  43970f:	test   rbx,rbx
  439712:	jne    0x4396f0
  439714:	mov    rax,QWORD PTR [rip+0x21e59]        # 0x45b574
  43971b:	lea    rcx,[rip+0x2077e]        # 0x459ea0
  439722:	add    rsp,0x28
  439726:	pop    rbx
  439727:	pop    rsi
  439728:	pop    rdi
  439729:	pop    rbp
  43972a:	rex.W jmp rax
  43972d:	nop    DWORD PTR [rax]
  439730:	push   rdi
  439731:	push   rsi
  439732:	push   rbx
  439733:	sub    rsp,0x20
  439737:	mov    eax,DWORD PTR [rip+0x2074b]        # 0x459e88
  43973d:	test   eax,eax
  43973f:	jne    0x439750
  439741:	add    rsp,0x20
  439745:	pop    rbx
  439746:	pop    rsi
  439747:	pop    rdi
  439748:	ret    
  439749:	nop    DWORD PTR [rax+0x0]
  439750:	mov    rsi,rdx
  439753:	mov    edi,ecx
  439755:	mov    edx,0x18
  43975a:	mov    ecx,0x1
  43975f:	call   0x43f160
  439764:	test   rax,rax
  439767:	mov    rbx,rax
  43976a:	je     0x4397a8
  43976c:	mov    DWORD PTR [rax],edi
  43976e:	mov    QWORD PTR [rax+0x8],rsi
  439772:	lea    rcx,[rip+0x20727]        # 0x459ea0
  439779:	call   QWORD PTR [rip+0x21d85]        # 0x45b504
  43977f:	mov    rax,QWORD PTR [rip+0x206fa]        # 0x459e80
  439786:	lea    rcx,[rip+0x20713]        # 0x459ea0
  43978d:	mov    QWORD PTR [rip+0x206ec],rbx        # 0x459e80
  439794:	mov    QWORD PTR [rbx+0x10],rax
  439798:	call   QWORD PTR [rip+0x21dd6]        # 0x45b574
  43979e:	xor    eax,eax
  4397a0:	add    rsp,0x20
  4397a4:	pop    rbx
  4397a5:	pop    rsi
  4397a6:	pop    rdi
  4397a7:	ret    
  4397a8:	mov    eax,0xffffffff
  4397ad:	jmp    0x439741
  4397af:	nop
  4397b0:	push   rbx
  4397b1:	sub    rsp,0x20
  4397b5:	mov    eax,DWORD PTR [rip+0x206cd]        # 0x459e88
  4397bb:	test   eax,eax
  4397bd:	jne    0x4397d0
  4397bf:	xor    eax,eax
  4397c1:	add    rsp,0x20
  4397c5:	pop    rbx
  4397c6:	ret    
  4397c7:	nop    WORD PTR [rax+rax*1+0x0]
  4397d0:	mov    ebx,ecx
  4397d2:	lea    rcx,[rip+0x206c7]        # 0x459ea0
  4397d9:	call   QWORD PTR [rip+0x21d25]        # 0x45b504
  4397df:	mov    rdx,QWORD PTR [rip+0x2069a]        # 0x459e80
  4397e6:	test   rdx,rdx
  4397e9:	je     0x439807
  4397eb:	mov    eax,DWORD PTR [rdx]
  4397ed:	cmp    eax,ebx
  4397ef:	jne    0x4397fe
  4397f1:	jmp    0x43983f
  4397f3:	mov    r8d,DWORD PTR [rax]
  4397f6:	cmp    r8d,ebx
  4397f9:	je     0x439820
  4397fb:	mov    rdx,rax
  4397fe:	mov    rax,QWORD PTR [rdx+0x10]
  439802:	test   rax,rax
  439805:	jne    0x4397f3
  439807:	lea    rcx,[rip+0x20692]        # 0x459ea0
  43980e:	call   QWORD PTR [rip+0x21d60]        # 0x45b574
  439814:	xor    eax,eax
  439816:	add    rsp,0x20
  43981a:	pop    rbx
  43981b:	ret    
  43981c:	nop    DWORD PTR [rax+0x0]
  439820:	mov    rcx,rax
  439823:	mov    rax,QWORD PTR [rax+0x10]
  439827:	mov    QWORD PTR [rdx+0x10],rax
  43982b:	call   0x43f100
  439830:	lea    rcx,[rip+0x20669]        # 0x459ea0
  439837:	call   QWORD PTR [rip+0x21d37]        # 0x45b574
  43983d:	jmp    0x439814
  43983f:	mov    rax,QWORD PTR [rdx+0x10]
  439843:	mov    rcx,rdx
  439846:	mov    QWORD PTR [rip+0x20633],rax        # 0x459e80
  43984d:	jmp    0x43982b
  43984f:	nop
  439850:	push   rbx
  439851:	sub    rsp,0x20
  439855:	cmp    edx,0x1
  439858:	je     0x4398f0
  43985e:	jb     0x439890
  439860:	cmp    edx,0x2
  439863:	je     0x439880
  439865:	cmp    edx,0x3
  439868:	jne    0x439885
  43986a:	mov    eax,DWORD PTR [rip+0x20618]        # 0x459e88
  439870:	test   eax,eax
  439872:	je     0x439885
  439874:	call   0x4396c0
  439879:	jmp    0x439885
  43987b:	nop    DWORD PTR [rax+rax*1+0x0]
  439880:	call   0x438d50
  439885:	mov    eax,0x1
  43988a:	add    rsp,0x20
  43988e:	pop    rbx
  43988f:	ret    
  439890:	mov    eax,DWORD PTR [rip+0x205f2]        # 0x459e88
  439896:	test   eax,eax
  439898:	jne    0x439920
  43989e:	mov    eax,DWORD PTR [rip+0x205e4]        # 0x459e88
  4398a4:	cmp    eax,0x1
  4398a7:	jne    0x439885
  4398a9:	mov    rcx,QWORD PTR [rip+0x205d0]        # 0x459e80
  4398b0:	test   rcx,rcx
  4398b3:	je     0x4398c6
  4398b5:	mov    rbx,QWORD PTR [rcx+0x10]
  4398b9:	call   0x43f100
  4398be:	test   rbx,rbx
  4398c1:	mov    rcx,rbx
  4398c4:	jne    0x4398b5
  4398c6:	lea    rcx,[rip+0x205d3]        # 0x459ea0
  4398cd:	mov    QWORD PTR [rip+0x205a8],0x0        # 0x459e80
  4398d8:	mov    DWORD PTR [rip+0x205a6],0x0        # 0x459e88
  4398e2:	call   QWORD PTR [rip+0x21c14]        # 0x45b4fc
  4398e8:	jmp    0x439885
  4398ea:	nop    WORD PTR [rax+rax*1+0x0]
  4398f0:	mov    eax,DWORD PTR [rip+0x20592]        # 0x459e88
  4398f6:	test   eax,eax
  4398f8:	je     0x439910
  4398fa:	mov    eax,0x1
  4398ff:	mov    DWORD PTR [rip+0x2057f],0x1        # 0x459e88
  439909:	add    rsp,0x20
  43990d:	pop    rbx
  43990e:	ret    
  43990f:	nop
  439910:	lea    rcx,[rip+0x20589]        # 0x459ea0
  439917:	call   QWORD PTR [rip+0x21c47]        # 0x45b564
  43991d:	jmp    0x4398fa
  43991f:	nop
  439920:	call   0x4396c0
  439925:	jmp    0x43989e
  43992a:	nop
  43992b:	nop
  43992c:	nop
  43992d:	nop
  43992e:	nop
  43992f:	nop
  439930:	movsxd rax,DWORD PTR [rcx+0x3c]
  439934:	add    rcx,rax
  439937:	xor    eax,eax
  439939:	cmp    DWORD PTR [rcx],0x4550
  43993f:	je     0x439943
  439941:	repz ret 
  439943:	xor    eax,eax
  439945:	cmp    WORD PTR [rcx+0x18],0x20b
  43994b:	sete   al
  43994e:	ret    
  43994f:	nop
  439950:	cmp    WORD PTR [rcx],0x5a4d
  439955:	je     0x439960
  439957:	xor    eax,eax
  439959:	ret    
  43995a:	nop    WORD PTR [rax+rax*1+0x0]
  439960:	jmp    0x439930
  439962:	nop    DWORD PTR [rax+0x0]
  439966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439970:	movsxd rax,DWORD PTR [rcx+0x3c]
  439974:	add    rcx,rax
  439977:	movzx  eax,WORD PTR [rcx+0x14]
  43997b:	lea    rax,[rcx+rax*1+0x18]
  439980:	movzx  ecx,WORD PTR [rcx+0x6]
  439984:	test   ecx,ecx
  439986:	je     0x4399b1
  439988:	sub    ecx,0x1
  43998b:	lea    rcx,[rcx+rcx*4]
  43998f:	lea    r9,[rax+rcx*8+0x28]
  439994:	mov    r8d,DWORD PTR [rax+0xc]
  439998:	cmp    r8,rdx
  43999b:	mov    rcx,r8
  43999e:	ja     0x4399a8
  4399a0:	add    ecx,DWORD PTR [rax+0x8]
  4399a3:	cmp    rdx,rcx
  4399a6:	jb     0x4399b3
  4399a8:	add    rax,0x28
  4399ac:	cmp    rax,r9
  4399af:	jne    0x439994
  4399b1:	xor    eax,eax
  4399b3:	repz ret 
  4399b5:	nop
  4399b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4399c0:	push   rdi
  4399c1:	push   rsi
  4399c2:	push   rbx
  4399c3:	sub    rsp,0x20
  4399c7:	mov    rsi,rcx
  4399ca:	call   0x43f028
  4399cf:	cmp    rax,0x8
  4399d3:	ja     0x4399f0
  4399d5:	mov    rbx,QWORD PTR [rip+0x17a84]        # 0x451460
  4399dc:	xor    edi,edi
  4399de:	cmp    WORD PTR [rbx],0x5a4d
  4399e3:	je     0x439a00
  4399e5:	mov    rax,rdi
  4399e8:	add    rsp,0x20
  4399ec:	pop    rbx
  4399ed:	pop    rsi
  4399ee:	pop    rdi
  4399ef:	ret    
  4399f0:	xor    edi,edi
  4399f2:	mov    rax,rdi
  4399f5:	add    rsp,0x20
  4399f9:	pop    rbx
  4399fa:	pop    rsi
  4399fb:	pop    rdi
  4399fc:	ret    
  4399fd:	nop    DWORD PTR [rax]
  439a00:	mov    rcx,rbx
  439a03:	call   0x439930
  439a08:	test   eax,eax
  439a0a:	je     0x4399e5
  439a0c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  439a10:	add    rdx,rbx
  439a13:	movzx  eax,WORD PTR [rdx+0x14]
  439a17:	lea    rbx,[rdx+rax*1+0x18]
  439a1c:	movzx  eax,WORD PTR [rdx+0x6]
  439a20:	test   eax,eax
  439a22:	je     0x4399e5
  439a24:	sub    eax,0x1
  439a27:	lea    rax,[rax+rax*4]
  439a2b:	lea    rdi,[rbx+rax*8+0x28]
  439a30:	jmp    0x439a3b
  439a32:	add    rbx,0x28
  439a36:	cmp    rbx,rdi
  439a39:	je     0x4399f0
  439a3b:	mov    r8d,0x8
  439a41:	mov    rdx,rsi
  439a44:	mov    rcx,rbx
  439a47:	call   0x43f018
  439a4c:	test   eax,eax
  439a4e:	jne    0x439a32
  439a50:	mov    rdi,rbx
  439a53:	mov    rax,rdi
  439a56:	add    rsp,0x20
  439a5a:	pop    rbx
  439a5b:	pop    rsi
  439a5c:	pop    rdi
  439a5d:	ret    
  439a5e:	xchg   ax,ax
  439a60:	push   rsi
  439a61:	push   rbx
  439a62:	sub    rsp,0x28
  439a66:	mov    rbx,QWORD PTR [rip+0x179f3]        # 0x451460
  439a6d:	cmp    WORD PTR [rbx],0x5a4d
  439a72:	je     0x439a80
  439a74:	xor    eax,eax
  439a76:	add    rsp,0x28
  439a7a:	pop    rbx
  439a7b:	pop    rsi
  439a7c:	ret    
  439a7d:	nop    DWORD PTR [rax]
  439a80:	mov    rsi,rcx
  439a83:	mov    rcx,rbx
  439a86:	call   0x439930
  439a8b:	test   eax,eax
  439a8d:	je     0x439a74
  439a8f:	sub    rsi,rbx
  439a92:	mov    rcx,rbx
  439a95:	mov    rdx,rsi
  439a98:	add    rsp,0x28
  439a9c:	pop    rbx
  439a9d:	pop    rsi
  439a9e:	jmp    0x439970
  439aa3:	nop    DWORD PTR [rax]
  439aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439ab0:	push   rbx
  439ab1:	sub    rsp,0x20
  439ab5:	mov    rbx,QWORD PTR [rip+0x179a4]        # 0x451460
  439abc:	xor    eax,eax
  439abe:	cmp    WORD PTR [rbx],0x5a4d
  439ac3:	je     0x439ad0
  439ac5:	add    rsp,0x20
  439ac9:	pop    rbx
  439aca:	ret    
  439acb:	nop    DWORD PTR [rax+rax*1+0x0]
  439ad0:	mov    rcx,rbx
  439ad3:	call   0x439930
  439ad8:	test   eax,eax
  439ada:	je     0x439ac5
  439adc:	movsxd rax,DWORD PTR [rbx+0x3c]
  439ae0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  439ae5:	add    rsp,0x20
  439ae9:	pop    rbx
  439aea:	ret    
  439aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  439af0:	push   rdi
  439af1:	push   rsi
  439af2:	push   rbx
  439af3:	sub    rsp,0x20
  439af7:	mov    rsi,QWORD PTR [rip+0x17962]        # 0x451460
  439afe:	xor    edi,edi
  439b00:	mov    rbx,rcx
  439b03:	cmp    WORD PTR [rsi],0x5a4d
  439b08:	je     0x439b15
  439b0a:	mov    rax,rdi
  439b0d:	add    rsp,0x20
  439b11:	pop    rbx
  439b12:	pop    rsi
  439b13:	pop    rdi
  439b14:	ret    
  439b15:	mov    rcx,rsi
  439b18:	call   0x439930
  439b1d:	test   eax,eax
  439b1f:	je     0x439b0a
  439b21:	movsxd rax,DWORD PTR [rsi+0x3c]
  439b25:	add    rsi,rax
  439b28:	movzx  eax,WORD PTR [rsi+0x14]
  439b2c:	lea    rdx,[rsi+rax*1+0x18]
  439b31:	movzx  eax,WORD PTR [rsi+0x6]
  439b35:	test   eax,eax
  439b37:	je     0x439b0a
  439b39:	sub    eax,0x1
  439b3c:	lea    rax,[rax+rax*4]
  439b40:	lea    rax,[rdx+rax*8+0x28]
  439b45:	test   BYTE PTR [rdx+0x27],0x20
  439b49:	je     0x439b54
  439b4b:	test   rbx,rbx
  439b4e:	je     0x439b70
  439b50:	sub    rbx,0x1
  439b54:	add    rdx,0x28
  439b58:	cmp    rdx,rax
  439b5b:	jne    0x439b45
  439b5d:	xor    edi,edi
  439b5f:	mov    rax,rdi
  439b62:	add    rsp,0x20
  439b66:	pop    rbx
  439b67:	pop    rsi
  439b68:	pop    rdi
  439b69:	ret    
  439b6a:	nop    WORD PTR [rax+rax*1+0x0]
  439b70:	mov    rdi,rdx
  439b73:	mov    rax,rdi
  439b76:	add    rsp,0x20
  439b7a:	pop    rbx
  439b7b:	pop    rsi
  439b7c:	pop    rdi
  439b7d:	ret    
  439b7e:	xchg   ax,ax
  439b80:	push   rsi
  439b81:	push   rbx
  439b82:	sub    rsp,0x28
  439b86:	mov    rsi,QWORD PTR [rip+0x178d3]        # 0x451460
  439b8d:	xor    ebx,ebx
  439b8f:	cmp    WORD PTR [rsi],0x5a4d
  439b94:	je     0x439ba0
  439b96:	mov    rax,rbx
  439b99:	add    rsp,0x28
  439b9d:	pop    rbx
  439b9e:	pop    rsi
  439b9f:	ret    
  439ba0:	mov    rcx,rsi
  439ba3:	call   0x439930
  439ba8:	test   eax,eax
  439baa:	cmovne rbx,rsi
  439bae:	mov    rax,rbx
  439bb1:	add    rsp,0x28
  439bb5:	pop    rbx
  439bb6:	pop    rsi
  439bb7:	ret    
  439bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  439bc0:	push   rsi
  439bc1:	push   rbx
  439bc2:	sub    rsp,0x28
  439bc6:	mov    rbx,QWORD PTR [rip+0x17893]        # 0x451460
  439bcd:	xor    eax,eax
  439bcf:	cmp    WORD PTR [rbx],0x5a4d
  439bd4:	je     0x439be0
  439bd6:	add    rsp,0x28
  439bda:	pop    rbx
  439bdb:	pop    rsi
  439bdc:	ret    
  439bdd:	nop    DWORD PTR [rax]
  439be0:	mov    rsi,rcx
  439be3:	mov    rcx,rbx
  439be6:	call   0x439930
  439beb:	test   eax,eax
  439bed:	je     0x439bd6
  439bef:	sub    rsi,rbx
  439bf2:	mov    rcx,rbx
  439bf5:	mov    rdx,rsi
  439bf8:	call   0x439970
  439bfd:	test   rax,rax
  439c00:	je     0x439c11
  439c02:	mov    eax,DWORD PTR [rax+0x24]
  439c05:	not    eax
  439c07:	shr    eax,0x1f
  439c0a:	add    rsp,0x28
  439c0e:	pop    rbx
  439c0f:	pop    rsi
  439c10:	ret    
  439c11:	xor    eax,eax
  439c13:	jmp    0x439bd6
  439c15:	nop
  439c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439c20:	push   rbp
  439c21:	push   rdi
  439c22:	push   rsi
  439c23:	push   rbx
  439c24:	sub    rsp,0x28
  439c28:	mov    rdi,QWORD PTR [rip+0x17831]        # 0x451460
  439c2f:	xor    ebp,ebp
  439c31:	mov    esi,ecx
  439c33:	cmp    WORD PTR [rdi],0x5a4d
  439c38:	je     0x439c50
  439c3a:	mov    rax,rbp
  439c3d:	add    rsp,0x28
  439c41:	pop    rbx
  439c42:	pop    rsi
  439c43:	pop    rdi
  439c44:	pop    rbp
  439c45:	ret    
  439c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439c50:	mov    rcx,rdi
  439c53:	call   0x439930
  439c58:	test   eax,eax
  439c5a:	je     0x439c3a
  439c5c:	movsxd rax,DWORD PTR [rdi+0x3c]
  439c60:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  439c67:	test   edx,edx
  439c69:	je     0x439c3a
  439c6b:	mov    ebx,edx
  439c6d:	mov    rcx,rdi
  439c70:	mov    rdx,rbx
  439c73:	call   0x439970
  439c78:	test   rax,rax
  439c7b:	je     0x439c3a
  439c7d:	add    rbx,rdi
  439c80:	mov    rdx,rbx
  439c83:	jne    0x439c97
  439c85:	jmp    0x439c3a
  439c87:	nop    WORD PTR [rax+rax*1+0x0]
  439c90:	sub    esi,0x1
  439c93:	add    rdx,0x14
  439c97:	mov    ecx,DWORD PTR [rdx+0x4]
  439c9a:	test   ecx,ecx
  439c9c:	jne    0x439ca5
  439c9e:	mov    eax,DWORD PTR [rdx+0xc]
  439ca1:	test   eax,eax
  439ca3:	je     0x439cc0
  439ca5:	test   esi,esi
  439ca7:	jg     0x439c90
  439ca9:	mov    ebp,DWORD PTR [rdx+0xc]
  439cac:	add    rbp,rdi
  439caf:	mov    rax,rbp
  439cb2:	add    rsp,0x28
  439cb6:	pop    rbx
  439cb7:	pop    rsi
  439cb8:	pop    rdi
  439cb9:	pop    rbp
  439cba:	ret    
  439cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  439cc0:	xor    ebp,ebp
  439cc2:	mov    rax,rbp
  439cc5:	add    rsp,0x28
  439cc9:	pop    rbx
  439cca:	pop    rsi
  439ccb:	pop    rdi
  439ccc:	pop    rbp
  439ccd:	ret    
  439cce:	nop
  439ccf:	nop
  439cd0:	jmp    QWORD PTR [rip+0x21c26]        # 0x45b8fc
  439cd6:	nop
  439cd7:	nop
  439cd8:	jmp    QWORD PTR [rip+0x21c16]        # 0x45b8f4
  439cde:	nop
  439cdf:	nop
  439ce0:	jmp    QWORD PTR [rip+0x21c06]        # 0x45b8ec
  439ce6:	nop
  439ce7:	nop
  439ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  439cf0:	push   rcx
  439cf1:	push   rax
  439cf2:	cmp    rax,0x1000
  439cf8:	lea    rcx,[rsp+0x18]
  439cfd:	jb     0x439d18
  439cff:	sub    rcx,0x1000
  439d06:	or     QWORD PTR [rcx],0x0
  439d0a:	sub    rax,0x1000
  439d10:	cmp    rax,0x1000
  439d16:	ja     0x439cff
  439d18:	sub    rcx,rax
  439d1b:	or     QWORD PTR [rcx],0x0
  439d1f:	pop    rax
  439d20:	pop    rcx
  439d21:	ret    
  439d22:	nop
  439d23:	nop
  439d24:	nop
  439d25:	nop
  439d26:	nop
  439d27:	nop
  439d28:	nop
  439d29:	nop
  439d2a:	nop
  439d2b:	nop
  439d2c:	nop
  439d2d:	nop
  439d2e:	nop
  439d2f:	nop
  439d30:	push   rdi
  439d31:	push   rsi
  439d32:	push   rbx
  439d33:	sub    rsp,0x130
  439d3a:	mov    rbx,rcx
  439d3d:	call   0x43f1e8
  439d42:	test   rbx,rbx
  439d45:	mov    DWORD PTR [rax],0x0
  439d4b:	je     0x439efe
  439d51:	cmp    BYTE PTR [rbx],0x0
  439d54:	je     0x439ec0
  439d5a:	mov    rcx,rbx
  439d5d:	call   QWORD PTR [rip+0x217c1]        # 0x45b524
  439d63:	cmp    eax,0xffffffff
  439d66:	je     0x439ee0
  439d6c:	test   al,0x10
  439d6e:	je     0x439ec0
  439d74:	lea    rdi,[rsp+0x20]
  439d79:	mov    rdx,rbx
  439d7c:	mov    r8d,0x104
  439d82:	mov    rcx,rdi
  439d85:	mov    rbx,rdi
  439d88:	call   0x43f1c8
  439d8d:	mov    r8d,DWORD PTR [rbx]
  439d90:	add    rbx,0x4
  439d94:	lea    eax,[r8-0x1010101]
  439d9b:	not    r8d
  439d9e:	and    eax,r8d
  439da1:	and    eax,0x80808080
  439da6:	je     0x439d8d
  439da8:	mov    edx,eax
  439daa:	shr    edx,0x10
  439dad:	test   eax,0x8080
  439db2:	cmove  eax,edx
  439db5:	lea    rdx,[rbx+0x2]
  439db9:	cmove  rbx,rdx
  439dbd:	add    al,al
  439dbf:	sbb    rbx,0x3
  439dc3:	sub    rbx,rdi
  439dc6:	lea    rcx,[rbx+0x24b]
  439dcd:	call   0x43f0c0
  439dd2:	test   rax,rax
  439dd5:	mov    rsi,rax
  439dd8:	je     0x439eef
  439dde:	lea    r9,[rax+0x244]
  439de5:	lea    r8,[rbx+0x1]
  439de9:	mov    rdx,rdi
  439dec:	mov    rcx,r9
  439def:	call   0x43f0a8
  439df4:	cmp    BYTE PTR [rsi+0x244],0x0
  439dfb:	mov    r9,rax
  439dfe:	je     0x439e20
  439e00:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  439e08:	cmp    al,0x2f
  439e0a:	je     0x439e20
  439e0c:	cmp    al,0x5c
  439e0e:	je     0x439e20
  439e10:	mov    r8d,0x5c
  439e16:	mov    WORD PTR [r9+rbx*1],r8w
  439e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  439e20:	mov    rcx,r9
  439e23:	mov    eax,DWORD PTR [rcx]
  439e25:	add    rcx,0x4
  439e29:	lea    edx,[rax-0x1010101]
  439e2f:	not    eax
  439e31:	and    edx,eax
  439e33:	and    edx,0x80808080
  439e39:	je     0x439e23
  439e3b:	mov    eax,edx
  439e3d:	shr    eax,0x10
  439e40:	test   edx,0x8080
  439e46:	cmove  edx,eax
  439e49:	lea    rax,[rcx+0x2]
  439e4d:	cmove  rcx,rax
  439e51:	add    dl,dl
  439e53:	mov    eax,0x2a
  439e58:	sbb    rcx,0x3
  439e5c:	xor    edx,edx
  439e5e:	mov    WORD PTR [rcx],ax
  439e61:	mov    WORD PTR [rsi+0x12c],dx
  439e68:	lea    rdx,[rsi+0x130]
  439e6f:	xor    ecx,ecx
  439e71:	xor    eax,eax
  439e73:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  439e7e:	mov    WORD PTR [rsi+0x12e],cx
  439e85:	mov    rdi,rdx
  439e88:	mov    ecx,0x20
  439e8d:	mov    DWORD PTR [rsi+0x240],0x0
  439e97:	mov    DWORD PTR [rsi+0x128],0x0
  439ea1:	rep stos QWORD PTR es:[rdi],rax
  439ea4:	mov    rax,rsi
  439ea7:	mov    DWORD PTR [rdi],0x0
  439ead:	add    rsp,0x130
  439eb4:	pop    rbx
  439eb5:	pop    rsi
  439eb6:	pop    rdi
  439eb7:	ret    
  439eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  439ec0:	call   0x43f1e8
  439ec5:	mov    DWORD PTR [rax],0x14
  439ecb:	xor    eax,eax
  439ecd:	add    rsp,0x130
  439ed4:	pop    rbx
  439ed5:	pop    rsi
  439ed6:	pop    rdi
  439ed7:	ret    
  439ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  439ee0:	call   0x43f1e8
  439ee5:	mov    DWORD PTR [rax],0x2
  439eeb:	xor    eax,eax
  439eed:	jmp    0x439ead
  439eef:	call   0x43f1e8
  439ef4:	mov    DWORD PTR [rax],0xc
  439efa:	xor    eax,eax
  439efc:	jmp    0x439ead
  439efe:	call   0x43f1e8
  439f03:	mov    DWORD PTR [rax],0xe
  439f09:	xor    eax,eax
  439f0b:	jmp    0x439ead
  439f0d:	nop    DWORD PTR [rax]
  439f10:	push   rbp
  439f11:	push   rdi
  439f12:	push   rsi
  439f13:	push   rbx
  439f14:	sub    rsp,0x158
  439f1b:	mov    rbx,rcx
  439f1e:	call   0x43f1e8
  439f23:	test   rbx,rbx
  439f26:	mov    DWORD PTR [rax],0x0
  439f2c:	je     0x43a11d
  439f32:	mov    eax,DWORD PTR [rbx+0x240]
  439f38:	test   eax,eax
  439f3a:	js     0x43a0bf
  439f40:	lea    rdi,[rsp+0x20]
  439f45:	je     0x439ff4
  439f4b:	mov    rcx,QWORD PTR [rbx+0x238]
  439f52:	mov    rdx,rdi
  439f55:	call   0x43efc0
  439f5a:	cmp    eax,0xffffffff
  439f5d:	mov    ebp,eax
  439f5f:	je     0x43a065
  439f65:	mov    eax,DWORD PTR [rsp+0x20]
  439f69:	lea    rsi,[rbx+0x24]
  439f6d:	lea    rdx,[rdi+0x28]
  439f71:	mov    r8d,0x104
  439f77:	mov    rcx,rsi
  439f7a:	mov    DWORD PTR [rbx],eax
  439f7c:	mov    rax,QWORD PTR [rsp+0x28]
  439f81:	mov    QWORD PTR [rbx+0x8],rax
  439f85:	mov    rax,QWORD PTR [rsp+0x30]
  439f8a:	mov    QWORD PTR [rbx+0x10],rax
  439f8e:	mov    rax,QWORD PTR [rsp+0x38]
  439f93:	mov    QWORD PTR [rbx+0x18],rax
  439f97:	mov    rax,QWORD PTR [rsp+0x40]
  439f9c:	mov    DWORD PTR [rbx+0x20],eax
  439f9f:	call   0x43f010
  439fa4:	test   ebp,ebp
  439fa6:	jne    0x43a093
  439fac:	mov    eax,DWORD PTR [rbx+0x240]
  439fb2:	add    eax,0x1
  439fb5:	test   eax,eax
  439fb7:	mov    DWORD PTR [rbx+0x240],eax
  439fbd:	jle    0x43a0bf
  439fc3:	mov    rcx,rsi
  439fc6:	call   0x43f028
  439fcb:	lea    rcx,[rbx+0x130]
  439fd2:	mov    WORD PTR [rbx+0x12e],ax
  439fd9:	mov    rdx,rsi
  439fdc:	call   0x43f040
  439fe1:	lea    rax,[rbx+0x128]
  439fe8:	add    rsp,0x158
  439fef:	pop    rbx
  439ff0:	pop    rsi
  439ff1:	pop    rdi
  439ff2:	pop    rbp
  439ff3:	ret    
  439ff4:	lea    rcx,[rbx+0x244]
  439ffb:	mov    rdx,rdi
  439ffe:	call   0x43f1d8
  43a003:	cmp    rax,0xffffffffffffffff
  43a007:	mov    rbp,rax
  43a00a:	je     0x43a0d0
  43a010:	mov    eax,DWORD PTR [rsp+0x20]
  43a014:	lea    rsi,[rbx+0x24]
  43a018:	lea    rdx,[rdi+0x28]
  43a01c:	mov    r8d,0x104
  43a022:	mov    rcx,rsi
  43a025:	mov    DWORD PTR [rbx],eax
  43a027:	mov    rax,QWORD PTR [rsp+0x28]
  43a02c:	mov    QWORD PTR [rbx+0x8],rax
  43a030:	mov    rax,QWORD PTR [rsp+0x30]
  43a035:	mov    QWORD PTR [rbx+0x10],rax
  43a039:	mov    rax,QWORD PTR [rsp+0x38]
  43a03e:	mov    QWORD PTR [rbx+0x18],rax
  43a042:	mov    rax,QWORD PTR [rsp+0x40]
  43a047:	mov    DWORD PTR [rbx+0x20],eax
  43a04a:	call   0x43f010
  43a04f:	mov    QWORD PTR [rbx+0x238],rbp
  43a056:	mov    DWORD PTR [rbx+0x240],0x1
  43a060:	jmp    0x439fc3
  43a065:	lea    rdi,[rbx+0x8]
  43a069:	mov    rcx,rbx
  43a06c:	xor    eax,eax
  43a06e:	mov    QWORD PTR [rbx],0x0
  43a075:	mov    QWORD PTR [rbx+0x120],0x0
  43a080:	and    rdi,0xfffffffffffffff8
  43a084:	sub    rcx,rdi
  43a087:	add    ecx,0x128
  43a08d:	shr    ecx,0x3
  43a090:	rep stos QWORD PTR es:[rdi],rax
  43a093:	call   QWORD PTR [rip+0x2149b]        # 0x45b534
  43a099:	cmp    eax,0x12
  43a09c:	je     0x43a110
  43a09e:	mov    rcx,QWORD PTR [rbx+0x238]
  43a0a5:	call   0x43f1e0
  43a0aa:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  43a0b5:	mov    DWORD PTR [rbx+0x240],0xffffffff
  43a0bf:	xor    eax,eax
  43a0c1:	add    rsp,0x158
  43a0c8:	pop    rbx
  43a0c9:	pop    rsi
  43a0ca:	pop    rdi
  43a0cb:	pop    rbp
  43a0cc:	ret    
  43a0cd:	nop    DWORD PTR [rax]
  43a0d0:	lea    rdi,[rbx+0x8]
  43a0d4:	mov    rcx,rbx
  43a0d7:	xor    eax,eax
  43a0d9:	mov    QWORD PTR [rbx],0x0
  43a0e0:	mov    QWORD PTR [rbx+0x120],0x0
  43a0eb:	and    rdi,0xfffffffffffffff8
  43a0ef:	sub    rcx,rdi
  43a0f2:	add    ecx,0x128
  43a0f8:	shr    ecx,0x3
  43a0fb:	rep stos QWORD PTR es:[rdi],rax
  43a0fe:	mov    QWORD PTR [rbx+0x238],rbp
  43a105:	mov    DWORD PTR [rbx+0x240],ebp
  43a10b:	xor    eax,eax
  43a10d:	jmp    0x43a0c1
  43a10f:	nop
  43a110:	call   0x43f1e8
  43a115:	mov    DWORD PTR [rax],0x0
  43a11b:	jmp    0x43a09e
  43a11d:	call   0x43f1e8
  43a122:	mov    DWORD PTR [rax],0xe
  43a128:	xor    eax,eax
  43a12a:	jmp    0x439fe8
  43a12f:	nop
  43a130:	push   rsi
  43a131:	push   rbx
  43a132:	sub    rsp,0x28
  43a136:	mov    rsi,rcx
  43a139:	call   0x43f1e8
  43a13e:	test   rsi,rsi
  43a141:	mov    DWORD PTR [rax],0x0
  43a147:	je     0x43a170
  43a149:	mov    rcx,QWORD PTR [rsi+0x238]
  43a150:	xor    ebx,ebx
  43a152:	cmp    rcx,0xffffffffffffffff
  43a156:	je     0x43a15f
  43a158:	call   0x43f1e0
  43a15d:	mov    ebx,eax
  43a15f:	mov    rcx,rsi
  43a162:	call   0x43f100
  43a167:	mov    eax,ebx
  43a169:	add    rsp,0x28
  43a16d:	pop    rbx
  43a16e:	pop    rsi
  43a16f:	ret    
  43a170:	call   0x43f1e8
  43a175:	mov    DWORD PTR [rax],0xe
  43a17b:	mov    eax,0xffffffff
  43a180:	jmp    0x43a169
  43a182:	nop    DWORD PTR [rax+0x0]
  43a186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a190:	push   rbx
  43a191:	sub    rsp,0x20
  43a195:	mov    rbx,rcx
  43a198:	call   0x43f1e8
  43a19d:	test   rbx,rbx
  43a1a0:	mov    DWORD PTR [rax],0x0
  43a1a6:	je     0x43a1d5
  43a1a8:	mov    rcx,QWORD PTR [rbx+0x238]
  43a1af:	cmp    rcx,0xffffffffffffffff
  43a1b3:	je     0x43a1ba
  43a1b5:	call   0x43f1e0
  43a1ba:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  43a1c5:	mov    DWORD PTR [rbx+0x240],0x0
  43a1cf:	add    rsp,0x20
  43a1d3:	pop    rbx
  43a1d4:	ret    
  43a1d5:	call   0x43f1e8
  43a1da:	mov    DWORD PTR [rax],0xe
  43a1e0:	jmp    0x43a1cf
  43a1e2:	nop    DWORD PTR [rax+0x0]
  43a1e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a1f0:	push   rbx
  43a1f1:	sub    rsp,0x20
  43a1f5:	mov    rbx,rcx
  43a1f8:	call   0x43f1e8
  43a1fd:	test   rbx,rbx
  43a200:	mov    DWORD PTR [rax],0x0
  43a206:	je     0x43a214
  43a208:	mov    eax,DWORD PTR [rbx+0x240]
  43a20e:	add    rsp,0x20
  43a212:	pop    rbx
  43a213:	ret    
  43a214:	call   0x43f1e8
  43a219:	mov    DWORD PTR [rax],0xe
  43a21f:	mov    eax,0xffffffff
  43a224:	jmp    0x43a20e
  43a226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a230:	push   rsi
  43a231:	push   rbx
  43a232:	sub    rsp,0x28
  43a236:	mov    rbx,rcx
  43a239:	mov    esi,edx
  43a23b:	call   0x43f1e8
  43a240:	test   rbx,rbx
  43a243:	mov    DWORD PTR [rax],0x0
  43a249:	je     0x43a2bd
  43a24b:	cmp    esi,0xffffffff
  43a24e:	jl     0x43a2b0
  43a250:	je     0x43a280
  43a252:	mov    rcx,rbx
  43a255:	call   0x43a190
  43a25a:	jmp    0x43a26d
  43a25c:	nop    DWORD PTR [rax+0x0]
  43a260:	mov    rcx,rbx
  43a263:	call   0x439f10
  43a268:	test   rax,rax
  43a26b:	je     0x43a2a7
  43a26d:	cmp    esi,DWORD PTR [rbx+0x240]
  43a273:	jg     0x43a260
  43a275:	add    rsp,0x28
  43a279:	pop    rbx
  43a27a:	pop    rsi
  43a27b:	ret    
  43a27c:	nop    DWORD PTR [rax+0x0]
  43a280:	mov    rcx,QWORD PTR [rbx+0x238]
  43a287:	cmp    rcx,0xffffffffffffffff
  43a28b:	je     0x43a292
  43a28d:	call   0x43f1e0
  43a292:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  43a29d:	mov    DWORD PTR [rbx+0x240],0xffffffff
  43a2a7:	add    rsp,0x28
  43a2ab:	pop    rbx
  43a2ac:	pop    rsi
  43a2ad:	ret    
  43a2ae:	xchg   ax,ax
  43a2b0:	call   0x43f1e8
  43a2b5:	mov    DWORD PTR [rax],0x16
  43a2bb:	jmp    0x43a2a7
  43a2bd:	call   0x43f1e8
  43a2c2:	mov    DWORD PTR [rax],0xe
  43a2c8:	jmp    0x43a2a7
  43a2ca:	nop
  43a2cb:	nop
  43a2cc:	nop
  43a2cd:	nop
  43a2ce:	nop
  43a2cf:	nop
  43a2d0:	sub    rsp,0x38
  43a2d4:	mov    r9,rdx
  43a2d7:	mov    QWORD PTR [rsp+0x20],r8
  43a2dc:	mov    rdx,rcx
  43a2df:	xor    r8d,r8d
  43a2e2:	mov    ecx,0x6000
  43a2e7:	call   0x43bc80
  43a2ec:	add    rsp,0x38
  43a2f0:	ret    
  43a2f1:	nop
  43a2f2:	nop
  43a2f3:	nop
  43a2f4:	nop
  43a2f5:	nop
  43a2f6:	nop
  43a2f7:	nop
  43a2f8:	nop
  43a2f9:	nop
  43a2fa:	nop
  43a2fb:	nop
  43a2fc:	nop
  43a2fd:	nop
  43a2fe:	nop
  43a2ff:	nop
  43a300:	push   rsi
  43a301:	push   rbx
  43a302:	sub    rsp,0x38
  43a306:	mov    rbx,rcx
  43a309:	mov    rsi,rdx
  43a30c:	call   0x43f218
  43a311:	lea    rdx,[rax+0x30]
  43a315:	mov    QWORD PTR [rsp+0x20],rsi
  43a31a:	mov    r9,rbx
  43a31d:	xor    r8d,r8d
  43a320:	mov    ecx,0x6000
  43a325:	call   0x43bc80
  43a32a:	add    rsp,0x38
  43a32e:	pop    rbx
  43a32f:	pop    rsi
  43a330:	ret    
  43a331:	nop
  43a332:	nop
  43a333:	nop
  43a334:	nop
  43a335:	nop
  43a336:	nop
  43a337:	nop
  43a338:	nop
  43a339:	nop
  43a33a:	nop
  43a33b:	nop
  43a33c:	nop
  43a33d:	nop
  43a33e:	nop
  43a33f:	nop
  43a340:	push   rsi
  43a341:	push   rbx
  43a342:	sub    rsp,0x38
  43a346:	test   rdx,rdx
  43a349:	mov    rsi,rcx
  43a34c:	je     0x43a380
  43a34e:	lea    rbx,[rdx-0x1]
  43a352:	mov    QWORD PTR [rsp+0x20],r9
  43a357:	mov    rdx,rcx
  43a35a:	mov    r9,r8
  43a35d:	xor    ecx,ecx
  43a35f:	mov    r8d,ebx
  43a362:	call   0x43bc80
  43a367:	cmp    eax,ebx
  43a369:	cmovle ebx,eax
  43a36c:	movsxd rbx,ebx
  43a36f:	mov    BYTE PTR [rsi+rbx*1],0x0
  43a373:	add    rsp,0x38
  43a377:	pop    rbx
  43a378:	pop    rsi
  43a379:	ret    
  43a37a:	nop    WORD PTR [rax+rax*1+0x0]
  43a380:	mov    QWORD PTR [rsp+0x20],r9
  43a385:	mov    rdx,rcx
  43a388:	mov    r9,r8
  43a38b:	xor    ecx,ecx
  43a38d:	xor    r8d,r8d
  43a390:	call   0x43bc80
  43a395:	add    rsp,0x38
  43a399:	pop    rbx
  43a39a:	pop    rsi
  43a39b:	ret    
  43a39c:	nop
  43a39d:	nop
  43a39e:	nop
  43a39f:	nop
  43a3a0:	push   rbx
  43a3a1:	sub    rsp,0x30
  43a3a5:	mov    rbx,rcx
  43a3a8:	mov    r9,rdx
  43a3ab:	mov    QWORD PTR [rsp+0x20],r8
  43a3b0:	mov    rdx,rcx
  43a3b3:	xor    r8d,r8d
  43a3b6:	mov    ecx,0x4000
  43a3bb:	call   0x43bc80
  43a3c0:	movsxd rdx,eax
  43a3c3:	mov    BYTE PTR [rbx+rdx*1],0x0
  43a3c7:	add    rsp,0x30
  43a3cb:	pop    rbx
  43a3cc:	ret    
  43a3cd:	nop
  43a3ce:	nop
  43a3cf:	nop
  43a3d0:	push   r12
  43a3d2:	push   rbp
  43a3d3:	push   rdi
  43a3d4:	push   rsi
  43a3d5:	push   rbx
  43a3d6:	sub    rsp,0x20
  43a3da:	mov    r9,r8
  43a3dd:	mov    r12,rcx
  43a3e0:	mov    rdi,rdx
  43a3e3:	xor    ecx,ecx
  43a3e5:	mov    rbp,r8
  43a3e8:	mov    r8,rdx
  43a3eb:	xor    edx,edx
  43a3ed:	call   0x43a340
  43a3f2:	test   eax,eax
  43a3f4:	mov    ebx,eax
  43a3f6:	js     0x43a440
  43a3f8:	lea    esi,[rax+0x1]
  43a3fb:	movsxd rsi,esi
  43a3fe:	mov    rcx,rsi
  43a401:	call   0x43f0c0
  43a406:	test   rax,rax
  43a409:	mov    QWORD PTR [r12],rax
  43a40d:	je     0x43a440
  43a40f:	mov    rdx,rsi
  43a412:	mov    r9,rbp
  43a415:	mov    r8,rdi
  43a418:	mov    rcx,rax
  43a41b:	call   0x43a340
  43a420:	mov    rdx,QWORD PTR [r12]
  43a424:	movsxd rax,ebx
  43a427:	mov    BYTE PTR [rdx+rax*1],0x0
  43a42b:	mov    eax,ebx
  43a42d:	add    rsp,0x20
  43a431:	pop    rbx
  43a432:	pop    rsi
  43a433:	pop    rdi
  43a434:	pop    rbp
  43a435:	pop    r12
  43a437:	ret    
  43a438:	nop    DWORD PTR [rax+rax*1+0x0]
  43a440:	mov    eax,0xffffffff
  43a445:	jmp    0x43a42d
  43a447:	nop
  43a448:	nop
  43a449:	nop
  43a44a:	nop
  43a44b:	nop
  43a44c:	nop
  43a44d:	nop
  43a44e:	nop
  43a44f:	nop
  43a450:	sub    rsp,0x58
  43a454:	mov    rax,QWORD PTR [rdx]
  43a457:	mov    r11,rdx
  43a45a:	mov    edx,DWORD PTR [rdx+0x8]
  43a45d:	mov    r10,rdx
  43a460:	and    r10w,0x7fff
  43a466:	jne    0x43a484
  43a468:	mov    rdx,rax
  43a46b:	shr    rdx,0x20
  43a46f:	or     eax,edx
  43a471:	jne    0x43a4f0
  43a473:	mov    DWORD PTR [rsp+0x44],0x0
  43a47b:	movzx  eax,WORD PTR [r11+0x8]
  43a480:	xor    edx,edx
  43a482:	jmp    0x43a4ab
  43a484:	cmp    r10w,0x7fff
  43a48a:	je     0x43a510
  43a490:	movzx  eax,WORD PTR [r11+0x8]
  43a495:	mov    DWORD PTR [rsp+0x44],0x1
  43a49d:	mov    edx,eax
  43a49f:	and    edx,0x7fff
  43a4a5:	sub    edx,0x403e
  43a4ab:	and    eax,0x8000
  43a4b0:	mov    r10,QWORD PTR [rsp+0x80]
  43a4b8:	mov    DWORD PTR [r10],eax
  43a4bb:	lea    rax,[rsp+0x48]
  43a4c0:	mov    QWORD PTR [rsp+0x30],r9
  43a4c5:	mov    DWORD PTR [rsp+0x20],ecx
  43a4c9:	lea    r9,[rsp+0x44]
  43a4ce:	lea    rcx,[rip+0x7ceb]        # 0x4421c0
  43a4d5:	mov    DWORD PTR [rsp+0x28],r8d
  43a4da:	mov    QWORD PTR [rsp+0x38],rax
  43a4df:	mov    r8,r11
  43a4e2:	call   0x43c900
  43a4e7:	add    rsp,0x58
  43a4eb:	ret    
  43a4ec:	nop    DWORD PTR [rax+0x0]
  43a4f0:	test   edx,edx
  43a4f2:	js     0x43a490
  43a4f4:	mov    DWORD PTR [rsp+0x44],0x2
  43a4fc:	movzx  eax,WORD PTR [r11+0x8]
  43a501:	mov    edx,0xffffbfc3
  43a506:	jmp    0x43a4ab
  43a508:	nop    DWORD PTR [rax+rax*1+0x0]
  43a510:	mov    rdx,rax
  43a513:	shr    rdx,0x20
  43a517:	and    edx,0x7fffffff
  43a51d:	or     edx,eax
  43a51f:	jne    0x43a535
  43a521:	mov    DWORD PTR [rsp+0x44],0x3
  43a529:	movzx  eax,WORD PTR [r11+0x8]
  43a52e:	xor    edx,edx
  43a530:	jmp    0x43a4ab
  43a535:	mov    DWORD PTR [rsp+0x44],0x4
  43a53d:	xor    edx,edx
  43a53f:	xor    eax,eax
  43a541:	jmp    0x43a4b0
  43a546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a550:	push   rbx
  43a551:	sub    rsp,0x20
  43a555:	mov    rbx,rdx
  43a558:	mov    edx,DWORD PTR [rdx+0x8]
  43a55b:	test   dh,0x40
  43a55e:	jne    0x43a568
  43a560:	mov    eax,DWORD PTR [rbx+0x24]
  43a563:	cmp    DWORD PTR [rbx+0x28],eax
  43a566:	jle    0x43a57a
  43a568:	and    dh,0x20
  43a56b:	jne    0x43a590
  43a56d:	movsxd rax,DWORD PTR [rbx+0x24]
  43a571:	mov    rdx,QWORD PTR [rbx]
  43a574:	mov    BYTE PTR [rdx+rax*1],cl
  43a577:	mov    eax,DWORD PTR [rbx+0x24]
  43a57a:	add    eax,0x1
  43a57d:	mov    DWORD PTR [rbx+0x24],eax
  43a580:	add    rsp,0x20
  43a584:	pop    rbx
  43a585:	ret    
  43a586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a590:	mov    rdx,QWORD PTR [rbx]
  43a593:	call   0x43f118
  43a598:	mov    eax,DWORD PTR [rbx+0x24]
  43a59b:	add    eax,0x1
  43a59e:	mov    DWORD PTR [rbx+0x24],eax
  43a5a1:	add    rsp,0x20
  43a5a5:	pop    rbx
  43a5a6:	ret    
  43a5a7:	nop    WORD PTR [rax+rax*1+0x0]
  43a5b0:	push   r14
  43a5b2:	push   r13
  43a5b4:	push   r12
  43a5b6:	push   rbp
  43a5b7:	push   rdi
  43a5b8:	push   rsi
  43a5b9:	push   rbx
  43a5ba:	sub    rsp,0x40
  43a5be:	lea    r14,[rsp+0x2c]
  43a5c3:	lea    r13,[rsp+0x30]
  43a5c8:	mov    ebx,edx
  43a5ca:	mov    rsi,r8
  43a5cd:	xor    edx,edx
  43a5cf:	mov    r12,rcx
  43a5d2:	mov    r8,r14
  43a5d5:	mov    rcx,r13
  43a5d8:	call   0x43ede0
  43a5dd:	mov    ebp,DWORD PTR [rsi+0x10]
  43a5e0:	cmp    ebp,ebx
  43a5e2:	jge    0x43a689
  43a5e8:	test   ebp,ebp
  43a5ea:	js     0x43a689
  43a5f0:	mov    eax,DWORD PTR [rsi+0xc]
  43a5f3:	cmp    ebp,eax
  43a5f5:	jge    0x43a696
  43a5fb:	sub    eax,ebp
  43a5fd:	test   eax,eax
  43a5ff:	mov    DWORD PTR [rsi+0xc],eax
  43a602:	jle    0x43a610
  43a604:	test   BYTE PTR [rsi+0x9],0x4
  43a608:	je     0x43a6a2
  43a60e:	xchg   ax,ax
  43a610:	test   ebp,ebp
  43a612:	jle    0x43a66d
  43a614:	add    r12,0x2
  43a618:	movzx  edx,WORD PTR [r12-0x2]
  43a61e:	mov    r8,r14
  43a621:	mov    rcx,r13
  43a624:	call   0x43ede0
  43a629:	test   eax,eax
  43a62b:	jle    0x43a66d
  43a62d:	sub    eax,0x1
  43a630:	mov    rbx,r13
  43a633:	lea    rdi,[r13+rax*1+0x1]
  43a638:	nop    DWORD PTR [rax+rax*1+0x0]
  43a640:	add    rbx,0x1
  43a644:	movsx  ecx,BYTE PTR [rbx-0x1]
  43a648:	mov    rdx,rsi
  43a64b:	call   0x43a550
  43a650:	cmp    rbx,rdi
  43a653:	jne    0x43a640
  43a655:	sub    ebp,0x1
  43a658:	jmp    0x43a610
  43a65a:	nop    WORD PTR [rax+rax*1+0x0]
  43a660:	mov    rdx,rsi
  43a663:	mov    ecx,0x20
  43a668:	call   0x43a550
  43a66d:	mov    eax,DWORD PTR [rsi+0xc]
  43a670:	lea    edx,[rax-0x1]
  43a673:	test   eax,eax
  43a675:	mov    DWORD PTR [rsi+0xc],edx
  43a678:	jg     0x43a660
  43a67a:	add    rsp,0x40
  43a67e:	pop    rbx
  43a67f:	pop    rsi
  43a680:	pop    rdi
  43a681:	pop    rbp
  43a682:	pop    r12
  43a684:	pop    r13
  43a686:	pop    r14
  43a688:	ret    
  43a689:	mov    eax,DWORD PTR [rsi+0xc]
  43a68c:	mov    ebp,ebx
  43a68e:	cmp    ebp,eax
  43a690:	jl     0x43a5fb
  43a696:	mov    DWORD PTR [rsi+0xc],0xffffffff
  43a69d:	jmp    0x43a610
  43a6a2:	sub    eax,0x1
  43a6a5:	mov    DWORD PTR [rsi+0xc],eax
  43a6a8:	nop    DWORD PTR [rax+rax*1+0x0]
  43a6b0:	mov    rdx,rsi
  43a6b3:	mov    ecx,0x20
  43a6b8:	call   0x43a550
  43a6bd:	mov    eax,DWORD PTR [rsi+0xc]
  43a6c0:	lea    edx,[rax-0x1]
  43a6c3:	test   eax,eax
  43a6c5:	mov    DWORD PTR [rsi+0xc],edx
  43a6c8:	jne    0x43a6b0
  43a6ca:	jmp    0x43a610
  43a6cf:	nop
  43a6d0:	push   rdi
  43a6d1:	push   rsi
  43a6d2:	push   rbx
  43a6d3:	sub    rsp,0x20
  43a6d7:	mov    edi,DWORD PTR [r8+0x10]
  43a6db:	mov    rsi,rcx
  43a6de:	mov    rbx,r8
  43a6e1:	cmp    edi,edx
  43a6e3:	jge    0x43a760
  43a6e5:	test   edi,edi
  43a6e7:	js     0x43a760
  43a6e9:	mov    eax,DWORD PTR [rbx+0xc]
  43a6ec:	cmp    edi,eax
  43a6ee:	jge    0x43a769
  43a6f0:	sub    eax,edi
  43a6f2:	test   eax,eax
  43a6f4:	mov    DWORD PTR [rbx+0xc],eax
  43a6f7:	jle    0x43a7c2
  43a6fd:	test   BYTE PTR [rbx+0x9],0x4
  43a701:	jne    0x43a790
  43a707:	sub    eax,0x1
  43a70a:	mov    DWORD PTR [rbx+0xc],eax
  43a70d:	nop    DWORD PTR [rax]
  43a710:	mov    rdx,rbx
  43a713:	mov    ecx,0x20
  43a718:	call   0x43a550
  43a71d:	mov    eax,DWORD PTR [rbx+0xc]
  43a720:	mov    edx,eax
  43a722:	sub    eax,0x1
  43a725:	test   edx,edx
  43a727:	mov    DWORD PTR [rbx+0xc],eax
  43a72a:	jne    0x43a710
  43a72c:	test   edi,edi
  43a72e:	lea    edx,[rdi-0x1]
  43a731:	je     0x43a7b0
  43a733:	lea    rdi,[rsi+rdx*1+0x1]
  43a738:	nop    DWORD PTR [rax+rax*1+0x0]
  43a740:	add    rsi,0x1
  43a744:	movsx  ecx,BYTE PTR [rsi-0x1]
  43a748:	mov    rdx,rbx
  43a74b:	call   0x43a550
  43a750:	cmp    rsi,rdi
  43a753:	jne    0x43a740
  43a755:	jmp    0x43a7ad
  43a757:	nop    WORD PTR [rax+rax*1+0x0]
  43a760:	mov    eax,DWORD PTR [rbx+0xc]
  43a763:	mov    edi,edx
  43a765:	cmp    edi,eax
  43a767:	jl     0x43a6f0
  43a769:	test   edi,edi
  43a76b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  43a772:	lea    edx,[rdi-0x1]
  43a775:	jne    0x43a733
  43a777:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  43a77e:	add    rsp,0x20
  43a782:	pop    rbx
  43a783:	pop    rsi
  43a784:	pop    rdi
  43a785:	ret    
  43a786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a790:	test   edi,edi
  43a792:	lea    edx,[rdi-0x1]
  43a795:	jne    0x43a733
  43a797:	sub    eax,0x1
  43a79a:	mov    DWORD PTR [rbx+0xc],eax
  43a79d:	nop    DWORD PTR [rax]
  43a7a0:	mov    rdx,rbx
  43a7a3:	mov    ecx,0x20
  43a7a8:	call   0x43a550
  43a7ad:	mov    eax,DWORD PTR [rbx+0xc]
  43a7b0:	lea    edx,[rax-0x1]
  43a7b3:	test   eax,eax
  43a7b5:	mov    DWORD PTR [rbx+0xc],edx
  43a7b8:	jg     0x43a7a0
  43a7ba:	add    rsp,0x20
  43a7be:	pop    rbx
  43a7bf:	pop    rsi
  43a7c0:	pop    rdi
  43a7c1:	ret    
  43a7c2:	test   edi,edi
  43a7c4:	lea    edx,[rdi-0x1]
  43a7c7:	jne    0x43a733
  43a7cd:	sub    eax,0x1
  43a7d0:	mov    DWORD PTR [rbx+0xc],eax
  43a7d3:	jmp    0x43a77e
  43a7d5:	nop
  43a7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a7e0:	sub    rsp,0x38
  43a7e4:	test   ecx,ecx
  43a7e6:	mov    DWORD PTR [r8+0x10],0xffffffff
  43a7ee:	je     0x43a834
  43a7f0:	lea    rcx,[rsp+0x20]
  43a7f5:	mov    r11d,DWORD PTR [r8+0x8]
  43a7f9:	mov    BYTE PTR [rsp+0x20],0x2d
  43a7fe:	lea    r10,[rcx+0x1]
  43a802:	and    r11d,0x20
  43a806:	xor    r9d,r9d
  43a809:	movzx  eax,BYTE PTR [rdx+r9*1]
  43a80e:	and    eax,0xffffffdf
  43a811:	or     eax,r11d
  43a814:	mov    BYTE PTR [r10+r9*1],al
  43a818:	add    r9,0x1
  43a81c:	cmp    r9,0x3
  43a820:	jne    0x43a809
  43a822:	lea    rdx,[r10+0x3]
  43a826:	sub    rdx,rcx
  43a829:	call   0x43a6d0
  43a82e:	nop
  43a82f:	add    rsp,0x38
  43a833:	ret    
  43a834:	mov    r11d,DWORD PTR [r8+0x8]
  43a838:	test   r11d,0x100
  43a83f:	je     0x43a851
  43a841:	lea    rcx,[rsp+0x20]
  43a846:	mov    BYTE PTR [rsp+0x20],0x2b
  43a84b:	lea    r10,[rcx+0x1]
  43a84f:	jmp    0x43a802
  43a851:	test   r11b,0x40
  43a855:	je     0x43a870
  43a857:	lea    rcx,[rsp+0x20]
  43a85c:	mov    BYTE PTR [rsp+0x20],0x20
  43a861:	lea    r10,[rcx+0x1]
  43a865:	jmp    0x43a802
  43a867:	nop    WORD PTR [rax+rax*1+0x0]
  43a870:	lea    rcx,[rsp+0x20]
  43a875:	mov    r10,rcx
  43a878:	jmp    0x43a802
  43a87a:	nop    WORD PTR [rax+rax*1+0x0]
  43a880:	push   rbp
  43a881:	push   r12
  43a883:	push   rdi
  43a884:	push   rsi
  43a885:	push   rbx
  43a886:	mov    rbp,rsp
  43a889:	sub    rsp,0x30
  43a88d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  43a891:	mov    rsi,rcx
  43a894:	je     0x43a930
  43a89a:	movzx  edx,WORD PTR [rcx+0x18]
  43a89e:	test   dx,dx
  43a8a1:	je     0x43a902
  43a8a3:	movsxd rax,DWORD PTR [rsi+0x14]
  43a8a7:	mov    r12,rsp
  43a8aa:	add    rax,0xf
  43a8ae:	and    rax,0xfffffffffffffff0
  43a8b2:	call   0x439cf0
  43a8b7:	sub    rsp,rax
  43a8ba:	lea    r8,[rbp-0x4]
  43a8be:	mov    DWORD PTR [rbp-0x4],0x0
  43a8c5:	lea    rbx,[rsp+0x20]
  43a8ca:	mov    rcx,rbx
  43a8cd:	call   0x43ede0
  43a8d2:	test   eax,eax
  43a8d4:	jle    0x43a920
  43a8d6:	sub    eax,0x1
  43a8d9:	lea    rdi,[rbx+rax*1+0x1]
  43a8de:	xchg   ax,ax
  43a8e0:	add    rbx,0x1
  43a8e4:	movsx  ecx,BYTE PTR [rbx-0x1]
  43a8e8:	mov    rdx,rsi
  43a8eb:	call   0x43a550
  43a8f0:	cmp    rbx,rdi
  43a8f3:	jne    0x43a8e0
  43a8f5:	mov    rsp,r12
  43a8f8:	mov    rsp,rbp
  43a8fb:	pop    rbx
  43a8fc:	pop    rsi
  43a8fd:	pop    rdi
  43a8fe:	pop    r12
  43a900:	pop    rbp
  43a901:	ret    
  43a902:	mov    rdx,rsi
  43a905:	mov    ecx,0x2e
  43a90a:	call   0x43a550
  43a90f:	nop
  43a910:	mov    rsp,rbp
  43a913:	pop    rbx
  43a914:	pop    rsi
  43a915:	pop    rdi
  43a916:	pop    r12
  43a918:	pop    rbp
  43a919:	ret    
  43a91a:	nop    WORD PTR [rax+rax*1+0x0]
  43a920:	mov    rdx,rsi
  43a923:	mov    ecx,0x2e
  43a928:	call   0x43a550
  43a92d:	jmp    0x43a8f5
  43a92f:	nop
  43a930:	mov    DWORD PTR [rbp-0x4],0x0
  43a937:	call   0x43f0c8
  43a93c:	mov    rdx,QWORD PTR [rax]
  43a93f:	lea    rcx,[rbp-0x6]
  43a943:	lea    r9,[rbp-0x4]
  43a947:	mov    r8d,0x10
  43a94d:	call   0x43eb60
  43a952:	test   eax,eax
  43a954:	jle    0x43a966
  43a956:	movzx  edx,WORD PTR [rbp-0x6]
  43a95a:	mov    WORD PTR [rsi+0x18],dx
  43a95e:	mov    DWORD PTR [rsi+0x14],eax
  43a961:	jmp    0x43a89e
  43a966:	movzx  edx,WORD PTR [rsi+0x18]
  43a96a:	jmp    0x43a95e
  43a96c:	nop    DWORD PTR [rax+0x0]
  43a970:	push   r12
  43a972:	push   rbp
  43a973:	push   rdi
  43a974:	push   rsi
  43a975:	push   rbx
  43a976:	sub    rsp,0x20
  43a97a:	mov    esi,r8d
  43a97d:	mov    ebp,ecx
  43a97f:	mov    rdi,rdx
  43a982:	test   esi,esi
  43a984:	mov    rbx,r9
  43a987:	mov    r8d,DWORD PTR [r9+0xc]
  43a98b:	jle    0x43ab62
  43a991:	cmp    esi,r8d
  43a994:	jg     0x43aad0
  43a99a:	sub    r8d,esi
  43a99d:	mov    DWORD PTR [r9+0xc],r8d
  43a9a1:	test   r8d,r8d
  43a9a4:	js     0x43aad0
  43a9aa:	mov    eax,DWORD PTR [rbx+0x10]
  43a9ad:	cmp    eax,r8d
  43a9b0:	jge    0x43aad0
  43a9b6:	sub    r8d,eax
  43a9b9:	test   r8d,r8d
  43a9bc:	mov    DWORD PTR [rbx+0xc],r8d
  43a9c0:	jle    0x43aadd
  43a9c6:	test   eax,eax
  43a9c8:	jle    0x43ac15
  43a9ce:	sub    r8d,0x1
  43a9d2:	test   esi,esi
  43a9d4:	mov    DWORD PTR [rbx+0xc],r8d
  43a9d8:	jle    0x43a9e4
  43a9da:	test   BYTE PTR [rbx+0x9],0x10
  43a9de:	jne    0x43aaef
  43a9e4:	test   r8d,r8d
  43a9e7:	jle    0x43aa2d
  43a9e9:	test   ebp,ebp
  43a9eb:	jne    0x43a9fb
  43a9ed:	mov    eax,DWORD PTR [rbx+0x8]
  43a9f0:	test   eax,0x1c0
  43a9f5:	je     0x43abf5
  43a9fb:	sub    r8d,0x1
  43a9ff:	test   r8d,r8d
  43aa02:	mov    DWORD PTR [rbx+0xc],r8d
  43aa06:	jle    0x43aa2d
  43aa08:	test   DWORD PTR [rbx+0x8],0x600
  43aa0f:	jne    0x43aa2d
  43aa11:	jmp    0x43aa20
  43aa13:	mov    rdx,rbx
  43aa16:	mov    ecx,0x20
  43aa1b:	call   0x43a550
  43aa20:	mov    eax,DWORD PTR [rbx+0xc]
  43aa23:	lea    edx,[rax-0x1]
  43aa26:	test   eax,eax
  43aa28:	mov    DWORD PTR [rbx+0xc],edx
  43aa2b:	jg     0x43aa13
  43aa2d:	test   ebp,ebp
  43aa2f:	jne    0x43ab50
  43aa35:	mov    eax,DWORD PTR [rbx+0x8]
  43aa38:	test   ah,0x1
  43aa3b:	jne    0x43ab80
  43aa41:	test   al,0x40
  43aa43:	jne    0x43ac03
  43aa49:	mov    edx,DWORD PTR [rbx+0xc]
  43aa4c:	test   edx,edx
  43aa4e:	jle    0x43aa63
  43aa50:	mov    eax,DWORD PTR [rbx+0x8]
  43aa53:	and    eax,0x600
  43aa58:	cmp    eax,0x200
  43aa5d:	je     0x43ab92
  43aa63:	test   esi,esi
  43aa65:	jle    0x43abc2
  43aa6b:	lea    r12,[rbx+0x20]
  43aa6f:	mov    ebp,0x55555556
  43aa74:	movzx  eax,BYTE PTR [rdi]
  43aa77:	mov    ecx,0x30
  43aa7c:	test   al,al
  43aa7e:	je     0x43aa87
  43aa80:	add    rdi,0x1
  43aa84:	movsx  ecx,al
  43aa87:	mov    rdx,rbx
  43aa8a:	call   0x43a550
  43aa8f:	sub    esi,0x1
  43aa92:	je     0x43acb0
  43aa98:	test   BYTE PTR [rbx+0x9],0x10
  43aa9c:	je     0x43aa74
  43aa9e:	cmp    WORD PTR [rbx+0x20],0x0
  43aaa3:	je     0x43aa74
  43aaa5:	mov    eax,esi
  43aaa7:	imul   ebp
  43aaa9:	mov    eax,esi
  43aaab:	sar    eax,0x1f
  43aaae:	sub    edx,eax
  43aab0:	lea    eax,[rdx+rdx*2]
  43aab3:	cmp    esi,eax
  43aab5:	jne    0x43aa74
  43aab7:	mov    r8,rbx
  43aaba:	mov    edx,0x1
  43aabf:	mov    rcx,r12
  43aac2:	call   0x43a5b0
  43aac7:	jmp    0x43aa74
  43aac9:	nop    DWORD PTR [rax+0x0]
  43aad0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  43aad7:	mov    r8d,0xffffffff
  43aadd:	test   esi,esi
  43aadf:	jle    0x43aa2d
  43aae5:	test   BYTE PTR [rbx+0x9],0x10
  43aae9:	je     0x43aa2d
  43aaef:	cmp    WORD PTR [rbx+0x20],0x0
  43aaf4:	je     0x43a9e4
  43aafa:	lea    ecx,[rsi+0x2]
  43aafd:	mov    edx,0x55555556
  43ab02:	mov    eax,ecx
  43ab04:	sar    ecx,0x1f
  43ab07:	imul   edx
  43ab09:	sub    edx,ecx
  43ab0b:	cmp    edx,0x1
  43ab0e:	jle    0x43a9e4
  43ab14:	test   r8d,r8d
  43ab17:	jle    0x43aa2d
  43ab1d:	mov    eax,r8d
  43ab20:	sub    eax,edx
  43ab22:	add    eax,0x1
  43ab25:	jmp    0x43ab39
  43ab27:	nop    WORD PTR [rax+rax*1+0x0]
  43ab30:	test   r8d,r8d
  43ab33:	je     0x43aca4
  43ab39:	sub    r8d,0x1
  43ab3d:	cmp    r8d,eax
  43ab40:	jne    0x43ab30
  43ab42:	mov    DWORD PTR [rbx+0xc],r8d
  43ab46:	jmp    0x43a9e4
  43ab4b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ab50:	mov    rdx,rbx
  43ab53:	mov    ecx,0x2d
  43ab58:	call   0x43a550
  43ab5d:	jmp    0x43aa49
  43ab62:	test   r8d,r8d
  43ab65:	jle    0x43a9a1
  43ab6b:	sub    r8d,0x1
  43ab6f:	mov    DWORD PTR [r9+0xc],r8d
  43ab73:	jmp    0x43a9aa
  43ab78:	nop    DWORD PTR [rax+rax*1+0x0]
  43ab80:	mov    rdx,rbx
  43ab83:	mov    ecx,0x2b
  43ab88:	call   0x43a550
  43ab8d:	jmp    0x43aa49
  43ab92:	sub    edx,0x1
  43ab95:	mov    DWORD PTR [rbx+0xc],edx
  43ab98:	nop    DWORD PTR [rax+rax*1+0x0]
  43aba0:	mov    rdx,rbx
  43aba3:	mov    ecx,0x30
  43aba8:	call   0x43a550
  43abad:	mov    eax,DWORD PTR [rbx+0xc]
  43abb0:	lea    edx,[rax-0x1]
  43abb3:	test   eax,eax
  43abb5:	mov    DWORD PTR [rbx+0xc],edx
  43abb8:	jg     0x43aba0
  43abba:	test   esi,esi
  43abbc:	jg     0x43aa6b
  43abc2:	mov    rdx,rbx
  43abc5:	mov    ecx,0x30
  43abca:	call   0x43a550
  43abcf:	mov    eax,DWORD PTR [rbx+0x10]
  43abd2:	test   eax,eax
  43abd4:	jg     0x43ac42
  43abd6:	test   BYTE PTR [rbx+0x9],0x8
  43abda:	jne    0x43ac42
  43abdc:	test   esi,esi
  43abde:	jne    0x43ac86
  43abe4:	sub    eax,0x1
  43abe7:	mov    DWORD PTR [rbx+0x10],eax
  43abea:	add    rsp,0x20
  43abee:	pop    rbx
  43abef:	pop    rsi
  43abf0:	pop    rdi
  43abf1:	pop    rbp
  43abf2:	pop    r12
  43abf4:	ret    
  43abf5:	test   ah,0x6
  43abf8:	je     0x43aa20
  43abfe:	jmp    0x43aa38
  43ac03:	mov    rdx,rbx
  43ac06:	mov    ecx,0x20
  43ac0b:	call   0x43a550
  43ac10:	jmp    0x43aa49
  43ac15:	mov    eax,DWORD PTR [rbx+0x8]
  43ac18:	test   ah,0x8
  43ac1b:	jne    0x43a9ce
  43ac21:	test   esi,esi
  43ac23:	jle    0x43a9e9
  43ac29:	test   ah,0x10
  43ac2c:	je     0x43a9e9
  43ac32:	cmp    WORD PTR [rbx+0x20],0x0
  43ac37:	jne    0x43aafa
  43ac3d:	jmp    0x43a9e9
  43ac42:	mov    rcx,rbx
  43ac45:	call   0x43a880
  43ac4a:	test   esi,esi
  43ac4c:	je     0x43ac6b
  43ac4e:	jmp    0x43ac83
  43ac50:	movzx  eax,BYTE PTR [rdi]
  43ac53:	mov    ecx,0x30
  43ac58:	test   al,al
  43ac5a:	je     0x43ac63
  43ac5c:	add    rdi,0x1
  43ac60:	movsx  ecx,al
  43ac63:	mov    rdx,rbx
  43ac66:	call   0x43a550
  43ac6b:	mov    eax,DWORD PTR [rbx+0x10]
  43ac6e:	lea    edx,[rax-0x1]
  43ac71:	test   eax,eax
  43ac73:	mov    DWORD PTR [rbx+0x10],edx
  43ac76:	jg     0x43ac50
  43ac78:	add    rsp,0x20
  43ac7c:	pop    rbx
  43ac7d:	pop    rsi
  43ac7e:	pop    rdi
  43ac7f:	pop    rbp
  43ac80:	pop    r12
  43ac82:	ret    
  43ac83:	mov    eax,DWORD PTR [rbx+0x10]
  43ac86:	add    eax,esi
  43ac88:	mov    DWORD PTR [rbx+0x10],eax
  43ac8b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ac90:	mov    rdx,rbx
  43ac93:	mov    ecx,0x30
  43ac98:	call   0x43a550
  43ac9d:	add    esi,0x1
  43aca0:	jne    0x43ac90
  43aca2:	jmp    0x43ac6b
  43aca4:	mov    DWORD PTR [rbx+0xc],0x0
  43acab:	jmp    0x43aa2d
  43acb0:	mov    eax,DWORD PTR [rbx+0x10]
  43acb3:	test   eax,eax
  43acb5:	jle    0x43acc1
  43acb7:	mov    rcx,rbx
  43acba:	call   0x43a880
  43acbf:	jmp    0x43ac6b
  43acc1:	test   BYTE PTR [rbx+0x9],0x8
  43acc5:	jne    0x43acb7
  43acc7:	jmp    0x43abe4
  43accc:	nop    DWORD PTR [rax+0x0]
  43acd0:	push   rsi
  43acd1:	push   rbx
  43acd2:	sub    rsp,0x68
  43acd6:	mov    r8d,DWORD PTR [rdx+0x10]
  43acda:	fld    TBYTE PTR [rcx]
  43acdc:	mov    rbx,rdx
  43acdf:	test   r8d,r8d
  43ace2:	js     0x43ad80
  43ace8:	lea    rdx,[rsp+0x30]
  43aced:	lea    r9,[rsp+0x4c]
  43acf2:	mov    ecx,0x3
  43acf7:	fstp   TBYTE PTR [rsp+0x50]
  43acfb:	mov    rax,QWORD PTR [rsp+0x50]
  43ad00:	mov    QWORD PTR [rsp+0x30],rax
  43ad05:	mov    rax,QWORD PTR [rsp+0x58]
  43ad0a:	mov    QWORD PTR [rsp+0x38],rax
  43ad0f:	lea    rax,[rsp+0x48]
  43ad14:	mov    QWORD PTR [rsp+0x20],rax
  43ad19:	call   0x43a450
  43ad1e:	mov    r8d,DWORD PTR [rsp+0x4c]
  43ad23:	mov    rsi,rax
  43ad26:	cmp    r8d,0xffff8000
  43ad2d:	je     0x43ad92
  43ad2f:	mov    ecx,DWORD PTR [rsp+0x48]
  43ad33:	mov    rdx,rax
  43ad36:	mov    r9,rbx
  43ad39:	call   0x43a970
  43ad3e:	mov    eax,DWORD PTR [rbx+0xc]
  43ad41:	lea    edx,[rax-0x1]
  43ad44:	test   eax,eax
  43ad46:	mov    DWORD PTR [rbx+0xc],edx
  43ad49:	jle    0x43ad6e
  43ad4b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ad50:	mov    rdx,rbx
  43ad53:	mov    ecx,0x20
  43ad58:	call   0x43a550
  43ad5d:	mov    r8d,DWORD PTR [rbx+0xc]
  43ad61:	lea    r9d,[r8-0x1]
  43ad65:	test   r8d,r8d
  43ad68:	mov    DWORD PTR [rbx+0xc],r9d
  43ad6c:	jg     0x43ad50
  43ad6e:	mov    rcx,rsi
  43ad71:	call   0x43c760
  43ad76:	nop
  43ad77:	add    rsp,0x68
  43ad7b:	pop    rbx
  43ad7c:	pop    rsi
  43ad7d:	ret    
  43ad7e:	xchg   ax,ax
  43ad80:	mov    DWORD PTR [rdx+0x10],0x6
  43ad87:	mov    r8d,0x6
  43ad8d:	jmp    0x43ace8
  43ad92:	mov    ecx,DWORD PTR [rsp+0x48]
  43ad96:	mov    r8,rbx
  43ad99:	mov    rdx,rax
  43ad9c:	call   0x43a7e0
  43ada1:	mov    rcx,rsi
  43ada4:	call   0x43c760
  43ada9:	nop
  43adaa:	add    rsp,0x68
  43adae:	pop    rbx
  43adaf:	pop    rsi
  43adb0:	ret    
  43adb1:	nop    DWORD PTR [rax+rax*1+0x0]
  43adb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43adc0:	push   rbp
  43adc1:	push   r13
  43adc3:	push   r12
  43adc5:	push   rdi
  43adc6:	push   rsi
  43adc7:	push   rbx
  43adc8:	sub    rsp,0x28
  43adcc:	lea    rbp,[rsp+0x80]
  43add4:	mov    ebx,DWORD PTR [rdx+0x10]
  43add7:	mov    r11d,DWORD PTR [rdx+0x8]
  43addb:	mov    r8d,0x0
  43ade1:	mov    rsi,rdx
  43ade4:	test   ebx,ebx
  43ade6:	cmovns r8d,ebx
  43adea:	add    r8d,0x17
  43adee:	test   r11d,0x1000
  43adf5:	je     0x43ae02
  43adf7:	cmp    WORD PTR [rdx+0x20],0x0
  43adfc:	jne    0x43aff2
  43ae02:	movsxd r13,DWORD PTR [rsi+0xc]
  43ae06:	movsxd rax,r8d
  43ae09:	cmp    r8d,r13d
  43ae0c:	cmovl  rax,r13
  43ae10:	add    rax,0x1e
  43ae14:	and    rax,0xfffffffffffffff0
  43ae18:	call   0x439cf0
  43ae1d:	sub    rsp,rax
  43ae20:	test   r11b,0x80
  43ae24:	lea    r12,[rsp+0x20]
  43ae29:	je     0x43ae3c
  43ae2b:	test   rcx,rcx
  43ae2e:	js     0x43b080
  43ae34:	and    r11b,0x7f
  43ae38:	mov    DWORD PTR [rsi+0x8],r11d
  43ae3c:	test   rcx,rcx
  43ae3f:	je     0x43b088
  43ae45:	mov    r10d,r11d
  43ae48:	mov    r8,r12
  43ae4b:	movabs r9,0xcccccccccccccccd
  43ae55:	and    r10d,0x1000
  43ae5c:	jmp    0x43ae93
  43ae5e:	xchg   ax,ax
  43ae60:	cmp    r12,rdi
  43ae63:	je     0x43ae90
  43ae65:	test   r10d,r10d
  43ae68:	je     0x43ae90
  43ae6a:	cmp    WORD PTR [rsi+0x20],0x0
  43ae6f:	je     0x43ae90
  43ae71:	mov    rax,rdi
  43ae74:	sub    rax,r12
  43ae77:	cqo    
  43ae79:	shr    rdx,0x3e
  43ae7d:	add    rax,rdx
  43ae80:	and    eax,0x3
  43ae83:	sub    rax,rdx
  43ae86:	cmp    rax,0x3
  43ae8a:	je     0x43afd0
  43ae90:	mov    r8,rdi
  43ae93:	mov    rax,rcx
  43ae96:	lea    rdi,[r8+0x1]
  43ae9a:	mul    r9
  43ae9d:	shr    rdx,0x3
  43aea1:	lea    rax,[rdx+rdx*4]
  43aea5:	add    rax,rax
  43aea8:	sub    rcx,rax
  43aeab:	add    ecx,0x30
  43aeae:	test   rdx,rdx
  43aeb1:	mov    BYTE PTR [r8],cl
  43aeb4:	mov    rcx,rdx
  43aeb7:	jne    0x43ae60
  43aeb9:	test   ebx,ebx
  43aebb:	jle    0x43aef5
  43aebd:	mov    rax,r12
  43aec0:	sub    rax,rdi
  43aec3:	add    eax,ebx
  43aec5:	test   eax,eax
  43aec7:	jle    0x43aef5
  43aec9:	sub    eax,0x1
  43aecc:	mov    rdx,rax
  43aecf:	lea    rcx,[rdi+rax*1+0x1]
  43aed4:	mov    rax,rdi
  43aed7:	nop    WORD PTR [rax+rax*1+0x0]
  43aee0:	add    rax,0x1
  43aee4:	mov    BYTE PTR [rax-0x1],0x30
  43aee8:	cmp    rax,rcx
  43aeeb:	jne    0x43aee0
  43aeed:	movsxd rax,edx
  43aef0:	lea    rdi,[rdi+rax*1+0x1]
  43aef5:	cmp    r12,rdi
  43aef8:	jne    0x43af05
  43aefa:	test   ebx,ebx
  43aefc:	je     0x43af05
  43aefe:	mov    BYTE PTR [rdi],0x30
  43af01:	add    rdi,0x1
  43af05:	test   r13d,r13d
  43af08:	jle    0x43af6e
  43af0a:	mov    rax,r12
  43af0d:	sub    rax,rdi
  43af10:	add    r13d,eax
  43af13:	test   r13d,r13d
  43af16:	mov    DWORD PTR [rsi+0xc],r13d
  43af1a:	jle    0x43af6e
  43af1c:	test   r11d,0x1c0
  43af23:	je     0x43af2d
  43af25:	sub    r13d,0x1
  43af29:	mov    DWORD PTR [rsi+0xc],r13d
  43af2d:	test   ebx,ebx
  43af2f:	js     0x43b030
  43af35:	test   r11d,0x400
  43af3c:	jne    0x43af6e
  43af3e:	mov    eax,DWORD PTR [rsi+0xc]
  43af41:	lea    edx,[rax-0x1]
  43af44:	test   eax,eax
  43af46:	mov    DWORD PTR [rsi+0xc],edx
  43af49:	jle    0x43af6e
  43af4b:	nop    DWORD PTR [rax+rax*1+0x0]
  43af50:	mov    rdx,rsi
  43af53:	mov    ecx,0x20
  43af58:	call   0x43a550
  43af5d:	mov    eax,DWORD PTR [rsi+0xc]
  43af60:	lea    edx,[rax-0x1]
  43af63:	test   eax,eax
  43af65:	mov    DWORD PTR [rsi+0xc],edx
  43af68:	jg     0x43af50
  43af6a:	mov    r11d,DWORD PTR [rsi+0x8]
  43af6e:	test   r11b,0x80
  43af72:	je     0x43afe0
  43af74:	lea    rbx,[rdi+0x1]
  43af78:	mov    BYTE PTR [rdi],0x2d
  43af7b:	cmp    r12,rbx
  43af7e:	jae    0x43afae
  43af80:	sub    rbx,0x1
  43af84:	movsx  ecx,BYTE PTR [rbx]
  43af87:	mov    rdx,rsi
  43af8a:	call   0x43a550
  43af8f:	cmp    rbx,r12
  43af92:	jne    0x43af80
  43af94:	mov    eax,DWORD PTR [rsi+0xc]
  43af97:	lea    edx,[rax-0x1]
  43af9a:	test   eax,eax
  43af9c:	mov    DWORD PTR [rsi+0xc],edx
  43af9f:	jle    0x43afbb
  43afa1:	mov    rdx,rsi
  43afa4:	mov    ecx,0x20
  43afa9:	call   0x43a550
  43afae:	mov    eax,DWORD PTR [rsi+0xc]
  43afb1:	lea    edx,[rax-0x1]
  43afb4:	test   eax,eax
  43afb6:	mov    DWORD PTR [rsi+0xc],edx
  43afb9:	jg     0x43afa1
  43afbb:	lea    rsp,[rbp-0x58]
  43afbf:	pop    rbx
  43afc0:	pop    rsi
  43afc1:	pop    rdi
  43afc2:	pop    r12
  43afc4:	pop    r13
  43afc6:	pop    rbp
  43afc7:	ret    
  43afc8:	nop    DWORD PTR [rax+rax*1+0x0]
  43afd0:	lea    rdi,[r8+0x2]
  43afd4:	mov    BYTE PTR [r8+0x1],0x2c
  43afd9:	jmp    0x43ae90
  43afde:	xchg   ax,ax
  43afe0:	test   r11d,0x100
  43afe7:	je     0x43b010
  43afe9:	lea    rbx,[rdi+0x1]
  43afed:	mov    BYTE PTR [rdi],0x2b
  43aff0:	jmp    0x43af7b
  43aff2:	mov    eax,r8d
  43aff5:	mov    edx,0x55555556
  43affa:	imul   edx
  43affc:	mov    eax,r8d
  43afff:	sar    eax,0x1f
  43b002:	sub    edx,eax
  43b004:	add    r8d,edx
  43b007:	jmp    0x43ae02
  43b00c:	nop    DWORD PTR [rax+0x0]
  43b010:	and    r11d,0x40
  43b014:	mov    rbx,rdi
  43b017:	je     0x43af7b
  43b01d:	add    rbx,0x1
  43b021:	mov    BYTE PTR [rdi],0x20
  43b024:	jmp    0x43af7b
  43b029:	nop    DWORD PTR [rax+0x0]
  43b030:	mov    eax,r11d
  43b033:	and    eax,0x600
  43b038:	cmp    eax,0x200
  43b03d:	jne    0x43af35
  43b043:	mov    eax,DWORD PTR [rsi+0xc]
  43b046:	lea    ecx,[rax-0x1]
  43b049:	test   eax,eax
  43b04b:	mov    DWORD PTR [rsi+0xc],ecx
  43b04e:	jle    0x43af6e
  43b054:	lea    rdx,[rdi+rcx*1+0x1]
  43b059:	mov    rax,rdi
  43b05c:	nop    DWORD PTR [rax+0x0]
  43b060:	add    rax,0x1
  43b064:	mov    BYTE PTR [rax-0x1],0x30
  43b068:	cmp    rax,rdx
  43b06b:	jne    0x43b060
  43b06d:	lea    rdi,[rdi+rcx*1+0x1]
  43b072:	mov    DWORD PTR [rsi+0xc],0xffffffff
  43b079:	jmp    0x43af6e
  43b07e:	xchg   ax,ax
  43b080:	neg    rcx
  43b083:	jmp    0x43ae3c
  43b088:	mov    rdi,r12
  43b08b:	jmp    0x43aeb9
  43b090:	push   rdi
  43b091:	push   rsi
  43b092:	push   rbx
  43b093:	sub    rsp,0x20
  43b097:	mov    rsi,r9
  43b09a:	lea    r9d,[r8-0x1]
  43b09e:	mov    r8d,0x66666667
  43b0a4:	mov    r10,rdx
  43b0a7:	mov    eax,r9d
  43b0aa:	movsxd rbx,r9d
  43b0ad:	sar    r9d,0x1f
  43b0b1:	imul   r8d
  43b0b4:	sar    edx,0x2
  43b0b7:	mov    r8d,edx
  43b0ba:	sub    r8d,r9d
  43b0bd:	mov    r9d,0x1
  43b0c3:	je     0x43b0eb
  43b0c5:	mov    r11d,0x66666667
  43b0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  43b0d0:	mov    eax,r8d
  43b0d3:	sar    r8d,0x1f
  43b0d7:	add    r9d,0x1
  43b0db:	imul   r11d
  43b0de:	mov    eax,edx
  43b0e0:	sar    eax,0x2
  43b0e3:	sub    eax,r8d
  43b0e6:	mov    r8d,eax
  43b0e9:	jne    0x43b0d0
  43b0eb:	mov    edi,DWORD PTR [rsi+0x2c]
  43b0ee:	mov    eax,DWORD PTR [rsi+0xc]
  43b0f1:	cmp    r9d,edi
  43b0f4:	cmovge edi,r9d
  43b0f8:	lea    edx,[rdi+0x2]
  43b0fb:	cmp    eax,edx
  43b0fd:	jg     0x43b152
  43b0ff:	mov    DWORD PTR [rsi+0xc],0xffffffff
  43b106:	mov    r9,rsi
  43b109:	mov    rdx,r10
  43b10c:	mov    r8d,0x1
  43b112:	call   0x43a970
  43b117:	mov    ecx,DWORD PTR [rsi+0x8]
  43b11a:	mov    eax,DWORD PTR [rsi+0x2c]
  43b11d:	mov    rdx,rsi
  43b120:	mov    DWORD PTR [rsi+0x10],eax
  43b123:	mov    eax,ecx
  43b125:	and    ecx,0x20
  43b128:	or     eax,0x1c0
  43b12d:	or     ecx,0x45
  43b130:	mov    DWORD PTR [rsi+0x8],eax
  43b133:	call   0x43a550
  43b138:	lea    r9d,[rdi+0x1]
  43b13c:	add    DWORD PTR [rsi+0xc],r9d
  43b140:	mov    rdx,rsi
  43b143:	mov    rcx,rbx
  43b146:	add    rsp,0x20
  43b14a:	pop    rbx
  43b14b:	pop    rsi
  43b14c:	pop    rdi
  43b14d:	jmp    0x43adc0
  43b152:	sub    eax,edx
  43b154:	mov    DWORD PTR [rsi+0xc],eax
  43b157:	jmp    0x43b106
  43b159:	nop    DWORD PTR [rax+0x0]
  43b160:	push   rsi
  43b161:	push   rbx
  43b162:	sub    rsp,0x68
  43b166:	mov    eax,DWORD PTR [rdx+0x10]
  43b169:	fld    TBYTE PTR [rcx]
  43b16b:	mov    rbx,rdx
  43b16e:	test   eax,eax
  43b170:	lea    r8d,[rax+0x1]
  43b174:	js     0x43b1e0
  43b176:	lea    rdx,[rsp+0x30]
  43b17b:	lea    r9,[rsp+0x4c]
  43b180:	mov    ecx,0x2
  43b185:	fstp   TBYTE PTR [rsp+0x50]
  43b189:	mov    rax,QWORD PTR [rsp+0x50]
  43b18e:	mov    QWORD PTR [rsp+0x30],rax
  43b193:	mov    rax,QWORD PTR [rsp+0x58]
  43b198:	mov    QWORD PTR [rsp+0x38],rax
  43b19d:	lea    rax,[rsp+0x48]
  43b1a2:	mov    QWORD PTR [rsp+0x20],rax
  43b1a7:	call   0x43a450
  43b1ac:	mov    r8d,DWORD PTR [rsp+0x4c]
  43b1b1:	mov    rsi,rax
  43b1b4:	cmp    r8d,0xffff8000
  43b1bb:	je     0x43b1f0
  43b1bd:	mov    ecx,DWORD PTR [rsp+0x48]
  43b1c1:	mov    r9,rbx
  43b1c4:	mov    rdx,rax
  43b1c7:	call   0x43b090
  43b1cc:	mov    rcx,rsi
  43b1cf:	call   0x43c760
  43b1d4:	nop
  43b1d5:	add    rsp,0x68
  43b1d9:	pop    rbx
  43b1da:	pop    rsi
  43b1db:	ret    
  43b1dc:	nop    DWORD PTR [rax+0x0]
  43b1e0:	mov    DWORD PTR [rdx+0x10],0x6
  43b1e7:	mov    r8d,0x7
  43b1ed:	jmp    0x43b176
  43b1ef:	nop
  43b1f0:	mov    ecx,DWORD PTR [rsp+0x48]
  43b1f4:	mov    r8,rbx
  43b1f7:	mov    rdx,rax
  43b1fa:	call   0x43a7e0
  43b1ff:	mov    rcx,rsi
  43b202:	call   0x43c760
  43b207:	nop
  43b208:	add    rsp,0x68
  43b20c:	pop    rbx
  43b20d:	pop    rsi
  43b20e:	ret    
  43b20f:	nop
  43b210:	push   rsi
  43b211:	push   rbx
  43b212:	sub    rsp,0x78
  43b216:	mov    r8d,DWORD PTR [rdx+0x10]
  43b21a:	fld    TBYTE PTR [rcx]
  43b21c:	mov    rbx,rdx
  43b21f:	test   r8d,r8d
  43b222:	js     0x43b360
  43b228:	je     0x43b340
  43b22e:	lea    rdx,[rsp+0x40]
  43b233:	lea    r9,[rsp+0x5c]
  43b238:	mov    ecx,0x2
  43b23d:	fstp   TBYTE PTR [rsp+0x60]
  43b241:	mov    rax,QWORD PTR [rsp+0x60]
  43b246:	mov    QWORD PTR [rsp+0x40],rax
  43b24b:	mov    rax,QWORD PTR [rsp+0x68]
  43b250:	mov    QWORD PTR [rsp+0x48],rax
  43b255:	lea    rax,[rsp+0x58]
  43b25a:	mov    QWORD PTR [rsp+0x20],rax
  43b25f:	call   0x43a450
  43b264:	mov    r8d,DWORD PTR [rsp+0x5c]
  43b269:	mov    rsi,rax
  43b26c:	cmp    r8d,0xffff8000
  43b273:	je     0x43b380
  43b279:	cmp    r8d,0xfffffffd
  43b27d:	jl     0x43b300
  43b283:	mov    eax,DWORD PTR [rbx+0x10]
  43b286:	cmp    r8d,eax
  43b289:	jg     0x43b300
  43b28b:	test   BYTE PTR [rbx+0x9],0x8
  43b28f:	jne    0x43b372
  43b295:	mov    rcx,rsi
  43b298:	mov    DWORD PTR [rsp+0x3c],r8d
  43b29d:	call   0x43f028
  43b2a2:	mov    r8d,DWORD PTR [rsp+0x3c]
  43b2a7:	sub    eax,r8d
  43b2aa:	test   eax,eax
  43b2ac:	mov    DWORD PTR [rbx+0x10],eax
  43b2af:	js     0x43b391
  43b2b5:	mov    ecx,DWORD PTR [rsp+0x58]
  43b2b9:	mov    rdx,rsi
  43b2bc:	mov    r9,rbx
  43b2bf:	call   0x43a970
  43b2c4:	mov    eax,DWORD PTR [rbx+0xc]
  43b2c7:	lea    edx,[rax-0x1]
  43b2ca:	test   eax,eax
  43b2cc:	mov    DWORD PTR [rbx+0xc],edx
  43b2cf:	jle    0x43b32d
  43b2d1:	mov    rdx,rbx
  43b2d4:	mov    ecx,0x20
  43b2d9:	call   0x43a550
  43b2de:	mov    r8d,DWORD PTR [rbx+0xc]
  43b2e2:	lea    r9d,[r8-0x1]
  43b2e6:	test   r8d,r8d
  43b2e9:	mov    DWORD PTR [rbx+0xc],r9d
  43b2ed:	jg     0x43b2d1
  43b2ef:	mov    rcx,rsi
  43b2f2:	call   0x43c760
  43b2f7:	nop
  43b2f8:	add    rsp,0x78
  43b2fc:	pop    rbx
  43b2fd:	pop    rsi
  43b2fe:	ret    
  43b2ff:	nop
  43b300:	test   BYTE PTR [rbx+0x9],0x8
  43b304:	jne    0x43b352
  43b306:	mov    rcx,rsi
  43b309:	mov    DWORD PTR [rsp+0x3c],r8d
  43b30e:	call   0x43f028
  43b313:	mov    r8d,DWORD PTR [rsp+0x3c]
  43b318:	sub    eax,0x1
  43b31b:	mov    DWORD PTR [rbx+0x10],eax
  43b31e:	mov    ecx,DWORD PTR [rsp+0x58]
  43b322:	mov    r9,rbx
  43b325:	mov    rdx,rsi
  43b328:	call   0x43b090
  43b32d:	mov    rcx,rsi
  43b330:	call   0x43c760
  43b335:	nop
  43b336:	add    rsp,0x78
  43b33a:	pop    rbx
  43b33b:	pop    rsi
  43b33c:	ret    
  43b33d:	nop    DWORD PTR [rax]
  43b340:	mov    DWORD PTR [rdx+0x10],0x1
  43b347:	mov    r8d,0x1
  43b34d:	jmp    0x43b22e
  43b352:	sub    DWORD PTR [rbx+0x10],0x1
  43b356:	jmp    0x43b31e
  43b358:	nop    DWORD PTR [rax+rax*1+0x0]
  43b360:	mov    DWORD PTR [rdx+0x10],0x6
  43b367:	mov    r8d,0x6
  43b36d:	jmp    0x43b22e
  43b372:	sub    eax,r8d
  43b375:	mov    DWORD PTR [rbx+0x10],eax
  43b378:	jmp    0x43b2b5
  43b37d:	nop    DWORD PTR [rax]
  43b380:	mov    ecx,DWORD PTR [rsp+0x58]
  43b384:	mov    r8,rbx
  43b387:	mov    rdx,rax
  43b38a:	call   0x43a7e0
  43b38f:	jmp    0x43b32d
  43b391:	mov    edx,DWORD PTR [rbx+0xc]
  43b394:	test   edx,edx
  43b396:	jle    0x43b2b5
  43b39c:	add    eax,edx
  43b39e:	mov    DWORD PTR [rbx+0xc],eax
  43b3a1:	jmp    0x43b2b5
  43b3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b3b0:	push   rbp
  43b3b1:	push   r14
  43b3b3:	push   r13
  43b3b5:	push   r12
  43b3b7:	push   rdi
  43b3b8:	push   rsi
  43b3b9:	push   rbx
  43b3ba:	mov    rbp,rsp
  43b3bd:	sub    rsp,0x20
  43b3c1:	mov    r10d,0x12
  43b3c7:	mov    eax,0x18
  43b3cc:	cmp    ecx,0x6f
  43b3cf:	mov    rbx,r8
  43b3d2:	mov    r8d,DWORD PTR [r8+0x10]
  43b3d6:	mov    r11d,ecx
  43b3d9:	setne  cl
  43b3dc:	mov    edi,DWORD PTR [rbx+0x8]
  43b3df:	movzx  ecx,cl
  43b3e2:	cmovne eax,r10d
  43b3e6:	mov    r10b,0x0
  43b3e9:	add    ecx,0x3
  43b3ec:	test   r8d,r8d
  43b3ef:	mov    r9,rdx
  43b3f2:	cmovns r10d,r8d
  43b3f6:	add    r10d,eax
  43b3f9:	test   edi,0x1000
  43b3ff:	je     0x43b40c
  43b401:	cmp    WORD PTR [rbx+0x20],0x0
  43b406:	jne    0x43b5d3
  43b40c:	movsxd r12,DWORD PTR [rbx+0xc]
  43b410:	movsxd rax,r10d
  43b413:	cmp    r10d,r12d
  43b416:	cmovl  rax,r12
  43b41a:	add    rax,0x1e
  43b41e:	and    rax,0xfffffffffffffff0
  43b422:	call   0x439cf0
  43b427:	xor    edx,edx
  43b429:	sub    rsp,rax
  43b42c:	cmp    r11d,0x6f
  43b430:	lea    rsi,[rsp+0x20]
  43b435:	setne  dl
  43b438:	test   r9,r9
  43b43b:	lea    edx,[rdx*8+0x7]
  43b442:	mov    r10,rsi
  43b445:	je     0x43b6f2
  43b44b:	mov    r13d,r11d
  43b44e:	and    r13d,0x20
  43b452:	jmp    0x43b460
  43b454:	shr    r9,cl
  43b457:	mov    BYTE PTR [r10-0x1],r14b
  43b45b:	test   r9,r9
  43b45e:	je     0x43b485
  43b460:	mov    eax,edx
  43b462:	add    r10,0x1
  43b466:	and    eax,r9d
  43b469:	lea    r14d,[rax+0x30]
  43b46d:	cmp    r14b,0x39
  43b471:	jbe    0x43b454
  43b473:	add    eax,0x37
  43b476:	shr    r9,cl
  43b479:	or     eax,r13d
  43b47c:	test   r9,r9
  43b47f:	mov    BYTE PTR [r10-0x1],al
  43b483:	jne    0x43b460
  43b485:	cmp    rsi,r10
  43b488:	je     0x43b6f2
  43b48e:	test   r8d,r8d
  43b491:	jle    0x43b652
  43b497:	mov    rax,rsi
  43b49a:	sub    rax,r10
  43b49d:	add    eax,r8d
  43b4a0:	test   eax,eax
  43b4a2:	jle    0x43b652
  43b4a8:	sub    eax,0x1
  43b4ab:	mov    rdx,rax
  43b4ae:	lea    rcx,[r10+rax*1+0x1]
  43b4b3:	mov    rax,r10
  43b4b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b4c0:	add    rax,0x1
  43b4c4:	mov    BYTE PTR [rax-0x1],0x30
  43b4c8:	cmp    rax,rcx
  43b4cb:	jne    0x43b4c0
  43b4cd:	movsxd rax,edx
  43b4d0:	lea    r10,[r10+rax*1+0x1]
  43b4d5:	cmp    rsi,r10
  43b4d8:	jne    0x43b4f0
  43b4da:	test   r8d,r8d
  43b4dd:	je     0x43b4f0
  43b4df:	mov    BYTE PTR [r10],0x30
  43b4e3:	add    r10,0x1
  43b4e7:	nop    WORD PTR [rax+rax*1+0x0]
  43b4f0:	mov    rax,r10
  43b4f3:	sub    rax,rsi
  43b4f6:	cmp    r12d,eax
  43b4f9:	jle    0x43b620
  43b4ff:	sub    r12d,eax
  43b502:	test   r12d,r12d
  43b505:	mov    DWORD PTR [rbx+0xc],r12d
  43b509:	jle    0x43b757
  43b50f:	cmp    r11d,0x6f
  43b513:	mov    edx,DWORD PTR [rbx+0x8]
  43b516:	je     0x43b6e0
  43b51c:	test   dh,0x8
  43b51f:	je     0x43b6a0
  43b525:	lea    r13d,[r12-0x2]
  43b52a:	test   r13d,r13d
  43b52d:	jle    0x43b538
  43b52f:	test   r8d,r8d
  43b532:	js     0x43b5ed
  43b538:	test   r13d,r13d
  43b53b:	mov    BYTE PTR [r10],r11b
  43b53e:	lea    rdi,[r10+0x2]
  43b542:	mov    BYTE PTR [r10+0x1],0x30
  43b547:	jle    0x43b648
  43b54d:	and    dh,0x4
  43b550:	jne    0x43b673
  43b556:	lea    r14d,[r13-0x1]
  43b55a:	mov    r12d,r14d
  43b55d:	nop    DWORD PTR [rax]
  43b560:	sub    r12d,0x1
  43b564:	mov    rdx,rbx
  43b567:	mov    ecx,0x20
  43b56c:	call   0x43a550
  43b571:	lea    eax,[r12+0x1]
  43b576:	test   eax,eax
  43b578:	jg     0x43b560
  43b57a:	test   r14d,r14d
  43b57d:	lea    r13d,[r14-0x1]
  43b581:	mov    r12d,0x0
  43b587:	cmovns r12d,r14d
  43b58b:	sub    r13d,r12d
  43b58e:	cmp    rsi,rdi
  43b591:	jb     0x43b680
  43b597:	nop    WORD PTR [rax+rax*1+0x0]
  43b5a0:	test   r13d,r13d
  43b5a3:	lea    esi,[r13-0x1]
  43b5a7:	jle    0x43b5c5
  43b5a9:	nop    DWORD PTR [rax+0x0]
  43b5b0:	mov    rdx,rbx
  43b5b3:	mov    ecx,0x20
  43b5b8:	sub    esi,0x1
  43b5bb:	call   0x43a550
  43b5c0:	cmp    esi,0xffffffff
  43b5c3:	jne    0x43b5b0
  43b5c5:	mov    rsp,rbp
  43b5c8:	pop    rbx
  43b5c9:	pop    rsi
  43b5ca:	pop    rdi
  43b5cb:	pop    r12
  43b5cd:	pop    r13
  43b5cf:	pop    r14
  43b5d1:	pop    rbp
  43b5d2:	ret    
  43b5d3:	mov    eax,r10d
  43b5d6:	mov    edx,0x55555556
  43b5db:	imul   edx
  43b5dd:	mov    eax,r10d
  43b5e0:	sar    eax,0x1f
  43b5e3:	sub    edx,eax
  43b5e5:	add    r10d,edx
  43b5e8:	jmp    0x43b40c
  43b5ed:	mov    eax,edx
  43b5ef:	and    eax,0x600
  43b5f4:	cmp    eax,0x200
  43b5f9:	je     0x43b700
  43b5ff:	mov    r12d,r13d
  43b602:	test   dh,0x8
  43b605:	mov    r13d,r12d
  43b608:	mov    rdi,r10
  43b60b:	je     0x43b54d
  43b611:	mov    r13d,r12d
  43b614:	jmp    0x43b538
  43b619:	nop    DWORD PTR [rax+0x0]
  43b620:	mov    DWORD PTR [rbx+0xc],0xffffffff
  43b627:	mov    r13d,0xffffffff
  43b62d:	cmp    r11d,0x6f
  43b631:	je     0x43b645
  43b633:	mov    edx,DWORD PTR [rbx+0x8]
  43b636:	mov    eax,edx
  43b638:	and    eax,0x800
  43b63d:	test   eax,eax
  43b63f:	jne    0x43b538
  43b645:	mov    rdi,r10
  43b648:	cmp    rsi,rdi
  43b64b:	jb     0x43b680
  43b64d:	jmp    0x43b5c5
  43b652:	cmp    r11d,0x6f
  43b656:	jne    0x43b4d5
  43b65c:	test   BYTE PTR [rbx+0x9],0x8
  43b660:	je     0x43b4d5
  43b666:	mov    BYTE PTR [r10],0x30
  43b66a:	add    r10,0x1
  43b66e:	jmp    0x43b4d5
  43b673:	cmp    rsi,rdi
  43b676:	jae    0x43b75f
  43b67c:	nop    DWORD PTR [rax+0x0]
  43b680:	sub    rdi,0x1
  43b684:	movsx  ecx,BYTE PTR [rdi]
  43b687:	mov    rdx,rbx
  43b68a:	call   0x43a550
  43b68f:	cmp    rsi,rdi
  43b692:	jb     0x43b680
  43b694:	jmp    0x43b5a0
  43b699:	nop    DWORD PTR [rax+0x0]
  43b6a0:	test   r8d,r8d
  43b6a3:	jns    0x43b602
  43b6a9:	mov    eax,edx
  43b6ab:	and    eax,0x600
  43b6b0:	cmp    eax,0x200
  43b6b5:	je     0x43b74e
  43b6bb:	cmp    r11d,0x6f
  43b6bf:	jne    0x43b602
  43b6c5:	and    dh,0x4
  43b6c8:	jne    0x43b6ea
  43b6ca:	lea    r14d,[r12-0x1]
  43b6cf:	mov    rdi,r10
  43b6d2:	jmp    0x43b55a
  43b6d7:	nop    WORD PTR [rax+rax*1+0x0]
  43b6e0:	test   r8d,r8d
  43b6e3:	js     0x43b6a9
  43b6e5:	and    dh,0x4
  43b6e8:	je     0x43b6ca
  43b6ea:	mov    rdi,r10
  43b6ed:	mov    r13d,r12d
  43b6f0:	jmp    0x43b68f
  43b6f2:	and    edi,0xfffff7ff
  43b6f8:	mov    DWORD PTR [rbx+0x8],edi
  43b6fb:	jmp    0x43b48e
  43b700:	lea    r8d,[r12-0x3]
  43b705:	mov    r12d,r8d
  43b708:	mov    eax,r12d
  43b70b:	lea    rcx,[r10+rax*1+0x1]
  43b710:	mov    rax,r10
  43b713:	add    rax,0x1
  43b717:	mov    BYTE PTR [rax-0x1],0x30
  43b71b:	cmp    rax,rcx
  43b71e:	jne    0x43b713
  43b720:	movsxd rax,r8d
  43b723:	cmp    r11d,0x6f
  43b727:	lea    r10,[r10+rax*1+0x1]
  43b72c:	je     0x43b740
  43b72e:	mov    eax,edx
  43b730:	mov    r13d,0xffffffff
  43b736:	and    eax,0x800
  43b73b:	jmp    0x43b63d
  43b740:	mov    rdi,r10
  43b743:	mov    r13d,0xffffffff
  43b749:	jmp    0x43b648
  43b74e:	sub    r12d,0x1
  43b752:	mov    r8d,r12d
  43b755:	jmp    0x43b708
  43b757:	mov    r13d,r12d
  43b75a:	jmp    0x43b62d
  43b75f:	lea    esi,[r13-0x1]
  43b763:	jmp    0x43b5b0
  43b768:	nop    DWORD PTR [rax+rax*1+0x0]
  43b770:	push   r13
  43b772:	push   r12
  43b774:	push   rbp
  43b775:	push   rdi
  43b776:	push   rsi
  43b777:	push   rbx
  43b778:	sub    rsp,0x68
  43b77c:	mov    r9,QWORD PTR [rcx]
  43b77f:	mov    r10d,DWORD PTR [rcx+0x8]
  43b783:	mov    rbx,rdx
  43b786:	mov    rax,r9
  43b789:	mov    QWORD PTR [rsp+0x30],r9
  43b78e:	mov    DWORD PTR [rsp+0x38],r10d
  43b793:	shr    rax,0x20
  43b797:	mov    r8,r10
  43b79a:	and    eax,0x7fffffff
  43b79f:	or     r9d,eax
  43b7a2:	lea    eax,[r10+r10*1]
  43b7a6:	mov    edx,r9d
  43b7a9:	neg    edx
  43b7ab:	and    eax,0xfffe
  43b7b0:	or     edx,r9d
  43b7b3:	shr    edx,0x1f
  43b7b6:	or     edx,eax
  43b7b8:	mov    eax,0xfffe
  43b7bd:	sub    eax,edx
  43b7bf:	sar    eax,0x10
  43b7c2:	test   eax,eax
  43b7c4:	jne    0x43bbb0
  43b7ca:	movzx  esi,WORD PTR [rsp+0x38]
  43b7cf:	mov    ecx,esi
  43b7d1:	and    ecx,0x8000
  43b7d7:	je     0x43b7e0
  43b7d9:	or     DWORD PTR [rbx+0x8],0x80
  43b7e0:	and    r8w,0x7fff
  43b7e6:	cmp    r8w,0x7fff
  43b7ec:	jne    0x43b810
  43b7ee:	test   r9d,r9d
  43b7f1:	jne    0x43b810
  43b7f3:	lea    rdx,[rip+0x157ea]        # 0x450fe4
  43b7fa:	mov    r8,rbx
  43b7fd:	call   0x43a7e0
  43b802:	jmp    0x43bb85
  43b807:	nop    WORD PTR [rax+rax*1+0x0]
  43b810:	and    si,0x7fff
  43b815:	jne    0x43b940
  43b81b:	mov    rax,QWORD PTR [rsp+0x30]
  43b820:	test   rax,rax
  43b823:	jne    0x43bbcf
  43b829:	mov    r9d,DWORD PTR [rbx+0x10]
  43b82d:	cmp    r9d,0xe
  43b831:	jbe    0x43bc4c
  43b837:	xor    esi,esi
  43b839:	mov    r8d,DWORD PTR [rbx+0x8]
  43b83d:	lea    rbp,[rsp+0x40]
  43b842:	test   r9d,r9d
  43b845:	jle    0x43bc5c
  43b84b:	lea    rax,[rbp+0x1]
  43b84f:	mov    BYTE PTR [rsp+0x40],0x2e
  43b854:	mov    r10d,DWORD PTR [rbx+0xc]
  43b858:	lea    rdi,[rax+0x1]
  43b85c:	mov    BYTE PTR [rax],0x30
  43b85f:	mov    r12d,0x2
  43b865:	test   r10d,r10d
  43b868:	jg     0x43ba6c
  43b86e:	xchg   ax,ax
  43b870:	test   r8b,0x80
  43b874:	jne    0x43bb30
  43b87a:	test   r8d,0x100
  43b881:	jne    0x43bc20
  43b887:	and    r8d,0x40
  43b88b:	jne    0x43bc32
  43b891:	mov    rdx,rbx
  43b894:	mov    ecx,0x30
  43b899:	call   0x43a550
  43b89e:	mov    ecx,DWORD PTR [rbx+0x8]
  43b8a1:	mov    rdx,rbx
  43b8a4:	and    ecx,0x20
  43b8a7:	or     ecx,0x58
  43b8aa:	call   0x43a550
  43b8af:	mov    eax,DWORD PTR [rbx+0xc]
  43b8b2:	test   eax,eax
  43b8b4:	jle    0x43b8dc
  43b8b6:	test   BYTE PTR [rbx+0x9],0x2
  43b8ba:	je     0x43b8dc
  43b8bc:	sub    eax,0x1
  43b8bf:	mov    DWORD PTR [rbx+0xc],eax
  43b8c2:	mov    rdx,rbx
  43b8c5:	mov    ecx,0x30
  43b8ca:	call   0x43a550
  43b8cf:	mov    eax,DWORD PTR [rbx+0xc]
  43b8d2:	lea    edx,[rax-0x1]
  43b8d5:	test   eax,eax
  43b8d7:	mov    DWORD PTR [rbx+0xc],edx
  43b8da:	jg     0x43b8c2
  43b8dc:	cmp    rdi,rbp
  43b8df:	lea    r13,[rsp+0x2e]
  43b8e4:	ja     0x43b919
  43b8e6:	jmp    0x43bb4f
  43b8eb:	nop    DWORD PTR [rax+rax*1+0x0]
  43b8f0:	movzx  eax,WORD PTR [rbx+0x20]
  43b8f4:	test   ax,ax
  43b8f7:	mov    WORD PTR [rsp+0x2e],ax
  43b8fc:	je     0x43b910
  43b8fe:	mov    r8,rbx
  43b901:	mov    edx,0x1
  43b906:	mov    rcx,r13
  43b909:	call   0x43a5b0
  43b90e:	xchg   ax,ax
  43b910:	cmp    rdi,rbp
  43b913:	je     0x43bb4f
  43b919:	sub    rdi,0x1
  43b91d:	movsx  ecx,BYTE PTR [rdi]
  43b920:	cmp    ecx,0x2e
  43b923:	je     0x43bb92
  43b929:	cmp    ecx,0x2c
  43b92c:	je     0x43b8f0
  43b92e:	mov    rdx,rbx
  43b931:	call   0x43a550
  43b936:	jmp    0x43b910
  43b938:	nop    DWORD PTR [rax+rax*1+0x0]
  43b940:	mov    r9d,DWORD PTR [rbx+0x10]
  43b944:	sub    si,0x3fff
  43b949:	mov    rax,QWORD PTR [rsp+0x30]
  43b94e:	cmp    r9d,0xe
  43b952:	ja     0x43bbfd
  43b958:	test   rax,rax
  43b95b:	js     0x43b965
  43b95d:	nop    DWORD PTR [rax]
  43b960:	add    rax,rax
  43b963:	jns    0x43b960
  43b965:	mov    ecx,0xe
  43b96a:	mov    edx,0x4
  43b96f:	shr    rax,1
  43b972:	sub    ecx,r9d
  43b975:	shl    ecx,0x2
  43b978:	shl    rdx,cl
  43b97b:	add    rax,rdx
  43b97e:	js     0x43bc44
  43b984:	add    rax,rax
  43b987:	mov    ecx,0xf
  43b98c:	sub    ecx,r9d
  43b98f:	shl    ecx,0x2
  43b992:	shr    rax,cl
  43b995:	mov    r8d,DWORD PTR [rbx+0x8]
  43b999:	lea    rbp,[rsp+0x40]
  43b99e:	mov    rdi,rbp
  43b9a1:	mov    r11d,r8d
  43b9a4:	mov    r10d,r8d
  43b9a7:	and    r11d,0x800
  43b9ae:	and    r10d,0x20
  43b9b2:	jmp    0x43b9e3
  43b9b4:	mov    ecx,DWORD PTR [rbx+0x10]
  43b9b7:	test   ecx,ecx
  43b9b9:	jle    0x43b9c1
  43b9bb:	sub    ecx,0x1
  43b9be:	mov    DWORD PTR [rbx+0x10],ecx
  43b9c1:	shr    rax,0x4
  43b9c5:	mov    r9,rdi
  43b9c8:	test   edx,edx
  43b9ca:	je     0x43ba34
  43b9cc:	cmp    edx,0x9
  43b9cf:	lea    rdi,[r9+0x1]
  43b9d3:	jle    0x43ba47
  43b9d5:	add    edx,0x37
  43b9d8:	or     edx,r10d
  43b9db:	mov    BYTE PTR [r9],dl
  43b9de:	test   rax,rax
  43b9e1:	je     0x43ba50
  43b9e3:	mov    edx,eax
  43b9e5:	and    edx,0xf
  43b9e8:	cmp    edx,eax
  43b9ea:	jne    0x43b9b4
  43b9ec:	cmp    rdi,rbp
  43b9ef:	ja     0x43ba02
  43b9f1:	test   r11d,r11d
  43b9f4:	jne    0x43ba02
  43b9f6:	mov    r12d,DWORD PTR [rbx+0x10]
  43b9fa:	mov    r9,rdi
  43b9fd:	test   r12d,r12d
  43ba00:	jle    0x43ba09
  43ba02:	lea    r9,[rdi+0x1]
  43ba06:	mov    BYTE PTR [rdi],0x2e
  43ba09:	cmp    rax,0x1
  43ba0d:	jbe    0x43bc19
  43ba13:	lea    ecx,[rsi-0x1]
  43ba16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ba20:	shr    rax,1
  43ba23:	mov    esi,ecx
  43ba25:	cmp    rax,0x1
  43ba29:	lea    ecx,[rsi-0x1]
  43ba2c:	jne    0x43ba20
  43ba2e:	xor    al,al
  43ba30:	test   edx,edx
  43ba32:	jne    0x43b9cc
  43ba34:	cmp    r9,rbp
  43ba37:	ja     0x43ba43
  43ba39:	mov    ecx,DWORD PTR [rbx+0x10]
  43ba3c:	mov    rdi,r9
  43ba3f:	test   ecx,ecx
  43ba41:	js     0x43b9de
  43ba43:	lea    rdi,[r9+0x1]
  43ba47:	add    edx,0x30
  43ba4a:	jmp    0x43b9db
  43ba4c:	nop    DWORD PTR [rax+0x0]
  43ba50:	cmp    rdi,rbp
  43ba53:	je     0x43bc53
  43ba59:	mov    r10d,DWORD PTR [rbx+0xc]
  43ba5d:	mov    r12d,0x2
  43ba63:	test   r10d,r10d
  43ba66:	jle    0x43b870
  43ba6c:	mov    edx,DWORD PTR [rbx+0x10]
  43ba6f:	mov    rax,rdi
  43ba72:	movsx  r11d,si
  43ba76:	sub    rax,rbp
  43ba79:	lea    ecx,[rdx+rax*1]
  43ba7c:	test   edx,edx
  43ba7e:	mov    edx,r8d
  43ba81:	cmovg  eax,ecx
  43ba84:	and    edx,0x1c0
  43ba8a:	mov    ecx,0x66666667
  43ba8f:	cmp    edx,0x1
  43ba92:	sbb    edx,edx
  43ba94:	lea    r9d,[rax+rdx*1+0x6]
  43ba99:	mov    eax,r11d
  43ba9c:	imul   ecx
  43ba9e:	mov    eax,r11d
  43baa1:	sar    eax,0x1f
  43baa4:	mov    ecx,edx
  43baa6:	sar    ecx,0x2
  43baa9:	sub    ecx,eax
  43baab:	je     0x43bad0
  43baad:	mov    r11d,0x66666667
  43bab3:	mov    eax,ecx
  43bab5:	sar    ecx,0x1f
  43bab8:	add    r9d,0x1
  43babc:	imul   r11d
  43babf:	add    r12d,0x1
  43bac3:	sar    edx,0x2
  43bac6:	sub    edx,ecx
  43bac8:	mov    ecx,edx
  43baca:	jne    0x43bab3
  43bacc:	movsx  r12d,r12w
  43bad0:	cmp    r10d,r9d
  43bad3:	jle    0x43bba0
  43bad9:	sub    r10d,r9d
  43badc:	test   r8d,0x600
  43bae3:	jne    0x43bc10
  43bae9:	lea    eax,[r10-0x1]
  43baed:	test   r10d,r10d
  43baf0:	mov    DWORD PTR [rbx+0xc],eax
  43baf3:	jle    0x43b870
  43baf9:	nop    DWORD PTR [rax+0x0]
  43bb00:	mov    rdx,rbx
  43bb03:	mov    ecx,0x20
  43bb08:	call   0x43a550
  43bb0d:	mov    eax,DWORD PTR [rbx+0xc]
  43bb10:	lea    edx,[rax-0x1]
  43bb13:	test   eax,eax
  43bb15:	mov    DWORD PTR [rbx+0xc],edx
  43bb18:	jg     0x43bb00
  43bb1a:	mov    r8d,DWORD PTR [rbx+0x8]
  43bb1e:	test   r8b,0x80
  43bb22:	je     0x43b87a
  43bb28:	nop    DWORD PTR [rax+rax*1+0x0]
  43bb30:	mov    rdx,rbx
  43bb33:	mov    ecx,0x2d
  43bb38:	call   0x43a550
  43bb3d:	jmp    0x43b891
  43bb42:	mov    rdx,rbx
  43bb45:	mov    ecx,0x30
  43bb4a:	call   0x43a550
  43bb4f:	mov    eax,DWORD PTR [rbx+0x10]
  43bb52:	lea    edx,[rax-0x1]
  43bb55:	test   eax,eax
  43bb57:	mov    DWORD PTR [rbx+0x10],edx
  43bb5a:	jg     0x43bb42
  43bb5c:	mov    ecx,DWORD PTR [rbx+0x8]
  43bb5f:	mov    rdx,rbx
  43bb62:	and    ecx,0x20
  43bb65:	or     ecx,0x50
  43bb68:	call   0x43a550
  43bb6d:	add    DWORD PTR [rbx+0xc],r12d
  43bb71:	or     DWORD PTR [rbx+0x8],0x1c0
  43bb78:	movsx  rcx,si
  43bb7c:	mov    rdx,rbx
  43bb7f:	call   0x43adc0
  43bb84:	nop
  43bb85:	add    rsp,0x68
  43bb89:	pop    rbx
  43bb8a:	pop    rsi
  43bb8b:	pop    rdi
  43bb8c:	pop    rbp
  43bb8d:	pop    r12
  43bb8f:	pop    r13
  43bb91:	ret    
  43bb92:	mov    rcx,rbx
  43bb95:	call   0x43a880
  43bb9a:	jmp    0x43b910
  43bb9f:	nop
  43bba0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  43bba7:	jmp    0x43b870
  43bbac:	nop    DWORD PTR [rax+0x0]
  43bbb0:	lea    rdx,[rip+0x15429]        # 0x450fe0
  43bbb7:	mov    r8,rbx
  43bbba:	xor    ecx,ecx
  43bbbc:	call   0x43a7e0
  43bbc1:	nop
  43bbc2:	add    rsp,0x68
  43bbc6:	pop    rbx
  43bbc7:	pop    rsi
  43bbc8:	pop    rdi
  43bbc9:	pop    rbp
  43bbca:	pop    r12
  43bbcc:	pop    r13
  43bbce:	ret    
  43bbcf:	js     0x43bc71
  43bbd5:	mov    edx,0xffffc001
  43bbda:	nop    WORD PTR [rax+rax*1+0x0]
  43bbe0:	mov    esi,edx
  43bbe2:	sub    edx,0x1
  43bbe5:	add    rax,rax
  43bbe8:	jns    0x43bbe0
  43bbea:	mov    r9d,DWORD PTR [rbx+0x10]
  43bbee:	cmp    r9d,0xe
  43bbf2:	jbe    0x43b965
  43bbf8:	jmp    0x43b995
  43bbfd:	test   rax,rax
  43bc00:	jne    0x43b995
  43bc06:	jmp    0x43b839
  43bc0b:	nop    DWORD PTR [rax+rax*1+0x0]
  43bc10:	mov    DWORD PTR [rbx+0xc],r10d
  43bc14:	jmp    0x43b870
  43bc19:	xor    eax,eax
  43bc1b:	jmp    0x43b9c8
  43bc20:	mov    rdx,rbx
  43bc23:	mov    ecx,0x2b
  43bc28:	call   0x43a550
  43bc2d:	jmp    0x43b891
  43bc32:	mov    rdx,rbx
  43bc35:	mov    ecx,0x20
  43bc3a:	call   0x43a550
  43bc3f:	jmp    0x43b891
  43bc44:	add    esi,0x1
  43bc47:	jmp    0x43b987
  43bc4c:	xor    eax,eax
  43bc4e:	jmp    0x43b960
  43bc53:	mov    r9d,DWORD PTR [rbx+0x10]
  43bc57:	jmp    0x43b842
  43bc5c:	test   r8d,0x800
  43bc63:	mov    rax,rbp
  43bc66:	je     0x43b854
  43bc6c:	jmp    0x43b84b
  43bc71:	mov    esi,0xffffc002
  43bc76:	jmp    0x43bbea
  43bc7b:	nop    DWORD PTR [rax+rax*1+0x0]
  43bc80:	push   r15
  43bc82:	push   r14
  43bc84:	push   r13
  43bc86:	push   r12
  43bc88:	push   rbp
  43bc89:	push   rdi
  43bc8a:	push   rsi
  43bc8b:	push   rbx
  43bc8c:	sub    rsp,0xb8
  43bc93:	mov    r13,QWORD PTR [rsp+0x120]
  43bc9b:	mov    r15d,ecx
  43bc9e:	mov    rdi,rdx
  43bca1:	mov    esi,r8d
  43bca4:	mov    rbx,r9
  43bca7:	and    r15d,0x6000
  43bcae:	call   0x43f1e8
  43bcb3:	mov    eax,DWORD PTR [rax]
  43bcb5:	lea    rcx,[rip+0x15341]        # 0x450ffd
  43bcbc:	xor    edx,edx
  43bcbe:	mov    QWORD PTR [rsp+0x80],rdi
  43bcc6:	mov    DWORD PTR [rsp+0x88],r15d
  43bcce:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  43bcd9:	mov    DWORD PTR [rsp+0x90],0xffffffff
  43bce4:	mov    DWORD PTR [rsp+0x34],eax
  43bce8:	xor    eax,eax
  43bcea:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  43bcf5:	mov    WORD PTR [rsp+0x98],ax
  43bcfd:	mov    DWORD PTR [rsp+0x9c],0x0
  43bd08:	mov    WORD PTR [rsp+0xa0],dx
  43bd10:	mov    DWORD PTR [rsp+0xa4],0x0
  43bd1b:	mov    DWORD PTR [rsp+0xa8],esi
  43bd22:	call   0x43f0d0
  43bd27:	test   rax,rax
  43bd2a:	je     0x43bd3c
  43bd2c:	movsx  edx,BYTE PTR [rax]
  43bd2f:	mov    eax,0x2
  43bd34:	sub    edx,0x30
  43bd37:	cmp    edx,0x2
  43bd3a:	jbe    0x43bd49
  43bd3c:	call   0x43f320
  43bd41:	and    eax,0x1
  43bd44:	neg    eax
  43bd46:	add    eax,0x3
  43bd49:	lea    rdi,[rsp+0x70]
  43bd4e:	mov    DWORD PTR [rsp+0xac],eax
  43bd55:	movzx  eax,BYTE PTR [rbx]
  43bd58:	lea    rsi,[rsp+0x6e]
  43bd5d:	lea    r12,[rsp+0x80]
  43bd65:	lea    rbp,[rip+0x152a8]        # 0x451014
  43bd6c:	mov    QWORD PTR [rsp+0x28],rdi
  43bd71:	lea    rdi,[rsp+0x50]
  43bd76:	mov    QWORD PTR [rsp+0x38],rsi
  43bd7b:	mov    QWORD PTR [rsp+0x20],rdi
  43bd80:	mov    edi,r15d
  43bd83:	or     edi,0x200
  43bd89:	mov    DWORD PTR [rsp+0x48],edi
  43bd8d:	nop    DWORD PTR [rax]
  43bd90:	movsx  ecx,al
  43bd93:	lea    rsi,[rbx+0x1]
  43bd97:	test   ecx,ecx
  43bd99:	je     0x43be1a
  43bd9b:	cmp    ecx,0x25
  43bd9e:	jne    0x43be00
  43bda0:	movzx  eax,BYTE PTR [rbx+0x1]
  43bda4:	xor    r10d,r10d
  43bda7:	xor    r14d,r14d
  43bdaa:	mov    DWORD PTR [rsp+0x88],r15d
  43bdb2:	mov    DWORD PTR [rsp+0x90],0xffffffff
  43bdbd:	mov    rdi,rsi
  43bdc0:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  43bdcb:	lea    r11,[r12+0xc]
  43bdd0:	test   al,al
  43bdd2:	je     0x43bf7b
  43bdd8:	lea    edx,[rax-0x20]
  43bddb:	lea    rbx,[rdi+0x1]
  43bddf:	movsx  ecx,al
  43bde2:	cmp    dl,0x5a
  43bde5:	ja     0x43c3f0
  43bdeb:	movzx  edx,dl
  43bdee:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  43bdf3:	add    rdx,rbp
  43bdf6:	jmp    rdx
  43bdf8:	nop    DWORD PTR [rax+rax*1+0x0]
  43be00:	mov    rdx,r12
  43be03:	call   0x43a550
  43be08:	movzx  eax,BYTE PTR [rbx+0x1]
  43be0c:	mov    rbx,rsi
  43be0f:	lea    rsi,[rbx+0x1]
  43be13:	movsx  ecx,al
  43be16:	test   ecx,ecx
  43be18:	jne    0x43bd9b
  43be1a:	mov    eax,DWORD PTR [rsp+0xa4]
  43be21:	add    rsp,0xb8
  43be28:	pop    rbx
  43be29:	pop    rsi
  43be2a:	pop    rdi
  43be2b:	pop    rbp
  43be2c:	pop    r12
  43be2e:	pop    r13
  43be30:	pop    r14
  43be32:	pop    r15
  43be34:	ret    
  43be35:	sub    r10d,0x2
  43be39:	mov    rax,r13
  43be3c:	cmp    r10d,0x1
  43be40:	jbe    0x43c433
  43be46:	mov    rsi,QWORD PTR [rax]
  43be49:	add    r13,0x8
  43be4d:	test   rsi,rsi
  43be50:	je     0x43bf15
  43be56:	mov    rcx,rsi
  43be59:	call   0x43f028
  43be5e:	mov    edx,eax
  43be60:	mov    r8,r12
  43be63:	mov    rcx,rsi
  43be66:	call   0x43a6d0
  43be6b:	nop    DWORD PTR [rax+rax*1+0x0]
  43be70:	movzx  eax,BYTE PTR [rbx]
  43be73:	jmp    0x43bd90
  43be78:	nop    DWORD PTR [rax+rax*1+0x0]
  43be80:	test   r14d,r14d
  43be83:	jne    0x43be93
  43be85:	cmp    DWORD PTR [rsp+0x88],r15d
  43be8d:	je     0x43c5fb
  43be93:	mov    rdx,QWORD PTR [r13+0x0]
  43be97:	lea    rsi,[r13+0x8]
  43be9b:	mov    r8,r12
  43be9e:	mov    ecx,0x78
  43bea3:	mov    QWORD PTR [rsp+0x78],0x0
  43beac:	mov    r13,rsi
  43beaf:	mov    QWORD PTR [rsp+0x70],rdx
  43beb4:	call   0x43b3b0
  43beb9:	jmp    0x43be70
  43bebb:	nop    DWORD PTR [rax+rax*1+0x0]
  43bec0:	cmp    r10d,0x5
  43bec4:	mov    rax,QWORD PTR [r13+0x0]
  43bec8:	je     0x43c53a
  43bece:	cmp    r10d,0x1
  43bed2:	je     0x43c5c4
  43bed8:	cmp    r10d,0x2
  43bedc:	je     0x43bee8
  43bede:	cmp    r10d,0x3
  43bee2:	je     0x43c66c
  43bee8:	mov    edx,DWORD PTR [rsp+0xa4]
  43beef:	add    r13,0x8
  43bef3:	mov    DWORD PTR [rax],edx
  43bef5:	jmp    0x43be70
  43befa:	nop    WORD PTR [rax+rax*1+0x0]
  43bf00:	mov    ecx,DWORD PTR [rsp+0x34]
  43bf04:	call   0x43f030
  43bf09:	test   rax,rax
  43bf0c:	mov    rsi,rax
  43bf0f:	jne    0x43be56
  43bf15:	mov    edx,0x6
  43bf1a:	lea    rsi,[rip+0x150d5]        # 0x450ff6
  43bf21:	jmp    0x43be60
  43bf26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bf30:	movzx  eax,BYTE PTR [rdi+0x1]
  43bf34:	mov    r10d,0x2
  43bf3a:	mov    r14d,0x4
  43bf40:	cmp    al,0x6c
  43bf42:	jne    0x43bf70
  43bf44:	lea    rbx,[rdi+0x2]
  43bf48:	movzx  eax,BYTE PTR [rdi+0x2]
  43bf4c:	mov    r10d,0x3
  43bf52:	mov    r14d,0x4
  43bf58:	jmp    0x43bf70
  43bf5a:	nop    WORD PTR [rax+rax*1+0x0]
  43bf60:	movzx  eax,BYTE PTR [rdi+0x1]
  43bf64:	mov    r10d,0x3
  43bf6a:	mov    r14d,0x4
  43bf70:	test   al,al
  43bf72:	mov    rdi,rbx
  43bf75:	jne    0x43bdd8
  43bf7b:	mov    rbx,rdi
  43bf7e:	jmp    0x43bd90
  43bf83:	mov    eax,DWORD PTR [rsp+0x88]
  43bf8a:	mov    rdx,r13
  43bf8d:	add    r13,0x8
  43bf91:	or     eax,0x20
  43bf94:	test   al,0x4
  43bf96:	mov    DWORD PTR [rsp+0x88],eax
  43bf9d:	je     0x43c1fb
  43bfa3:	mov    rax,QWORD PTR [rdx]
  43bfa6:	mov    rcx,QWORD PTR [rsp+0x20]
  43bfab:	mov    rdx,r12
  43bfae:	fld    TBYTE PTR [rax]
  43bfb0:	fstp   TBYTE PTR [rsp+0x50]
  43bfb4:	call   0x43b210
  43bfb9:	jmp    0x43be70
  43bfbe:	xchg   ax,ax
  43bfc0:	movzx  eax,BYTE PTR [rdi+0x1]
  43bfc4:	mov    r10d,0x1
  43bfca:	mov    r14d,0x4
  43bfd0:	cmp    al,0x68
  43bfd2:	jne    0x43bf70
  43bfd4:	lea    rbx,[rdi+0x2]
  43bfd8:	movzx  eax,BYTE PTR [rdi+0x2]
  43bfdc:	mov    r10d,0x5
  43bfe2:	mov    r14d,0x4
  43bfe8:	jmp    0x43bf70
  43bfea:	nop    WORD PTR [rax+rax*1+0x0]
  43bff0:	mov    eax,DWORD PTR [rsp+0x88]
  43bff7:	mov    rdx,r13
  43bffa:	add    r13,0x8
  43bffe:	or     eax,0x20
  43c001:	test   al,0x4
  43c003:	mov    DWORD PTR [rsp+0x88],eax
  43c00a:	je     0x43c229
  43c010:	mov    rax,QWORD PTR [rdx]
  43c013:	mov    rcx,QWORD PTR [rsp+0x20]
  43c018:	mov    rdx,r12
  43c01b:	fld    TBYTE PTR [rax]
  43c01d:	fstp   TBYTE PTR [rsp+0x50]
  43c021:	call   0x43acd0
  43c026:	jmp    0x43be70
  43c02b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c030:	mov    eax,DWORD PTR [rsp+0x88]
  43c037:	mov    rdx,r13
  43c03a:	add    r13,0x8
  43c03e:	or     eax,0x20
  43c041:	test   al,0x4
  43c043:	mov    DWORD PTR [rsp+0x88],eax
  43c04a:	je     0x43c257
  43c050:	mov    rax,QWORD PTR [rdx]
  43c053:	mov    rcx,QWORD PTR [rsp+0x20]
  43c058:	mov    rdx,r12
  43c05b:	fld    TBYTE PTR [rax]
  43c05d:	fstp   TBYTE PTR [rsp+0x50]
  43c061:	call   0x43b160
  43c066:	jmp    0x43be70
  43c06b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c070:	cmp    r10d,0x3
  43c074:	je     0x43c54c
  43c07a:	cmp    r10d,0x2
  43c07e:	je     0x43c5e9
  43c084:	mov    eax,DWORD PTR [r13+0x0]
  43c088:	cmp    r10d,0x1
  43c08c:	lea    rdx,[r13+0x8]
  43c090:	mov    QWORD PTR [rsp+0x70],rax
  43c095:	je     0x43c62b
  43c09b:	cmp    r10d,0x5
  43c09f:	mov    r13,rdx
  43c0a2:	je     0x43c680
  43c0a8:	cmp    ecx,0x75
  43c0ab:	je     0x43c58c
  43c0b1:	mov    r8,r12
  43c0b4:	mov    rdx,rax
  43c0b7:	call   0x43b3b0
  43c0bc:	jmp    0x43be70
  43c0c1:	sub    r10d,0x2
  43c0c5:	mov    rax,r13
  43c0c8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  43c0d3:	cmp    r10d,0x1
  43c0d7:	jbe    0x43c27b
  43c0dd:	mov    eax,DWORD PTR [rax]
  43c0df:	mov    rcx,QWORD PTR [rsp+0x28]
  43c0e4:	mov    r8,r12
  43c0e7:	mov    edx,0x1
  43c0ec:	add    r13,0x8
  43c0f0:	mov    BYTE PTR [rsp+0x70],al
  43c0f4:	call   0x43a6d0
  43c0f9:	jmp    0x43be70
  43c0fe:	xchg   ax,ax
  43c100:	mov    eax,DWORD PTR [rsp+0x88]
  43c107:	mov    rdx,r13
  43c10a:	add    r13,0x8
  43c10e:	or     eax,0x20
  43c111:	test   al,0x4
  43c113:	mov    DWORD PTR [rsp+0x88],eax
  43c11a:	je     0x43c2b8
  43c120:	mov    rax,QWORD PTR [rdx]
  43c123:	mov    rcx,QWORD PTR [rsp+0x20]
  43c128:	mov    rdx,r12
  43c12b:	fld    TBYTE PTR [rax]
  43c12d:	fstp   TBYTE PTR [rsp+0x50]
  43c131:	call   0x43b770
  43c136:	jmp    0x43be70
  43c13b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c140:	or     DWORD PTR [rsp+0x88],0x80
  43c14b:	cmp    r10d,0x3
  43c14f:	je     0x43c528
  43c155:	cmp    r10d,0x2
  43c159:	je     0x43c5d7
  43c15f:	movsxd rcx,DWORD PTR [r13+0x0]
  43c163:	cmp    r10d,0x1
  43c167:	lea    rax,[r13+0x8]
  43c16b:	mov    QWORD PTR [rsp+0x70],rcx
  43c170:	je     0x43c63d
  43c176:	cmp    r10d,0x5
  43c17a:	mov    r13,rax
  43c17d:	je     0x43c68f
  43c183:	mov    rax,rcx
  43c186:	mov    rdx,r12
  43c189:	sar    rax,0x3f
  43c18d:	mov    QWORD PTR [rsp+0x78],rax
  43c192:	call   0x43adc0
  43c197:	jmp    0x43be70
  43c19c:	nop    DWORD PTR [rax+0x0]
  43c1a0:	or     DWORD PTR [rsp+0x88],0x4
  43c1a8:	movzx  eax,BYTE PTR [rdi+0x1]
  43c1ac:	mov    r14d,0x4
  43c1b2:	jmp    0x43bf70
  43c1b7:	nop    WORD PTR [rax+rax*1+0x0]
  43c1c0:	movzx  eax,BYTE PTR [rdi+0x1]
  43c1c4:	cmp    al,0x36
  43c1c6:	je     0x43c508
  43c1cc:	cmp    al,0x33
  43c1ce:	je     0x43c59c
  43c1d4:	mov    r10d,0x3
  43c1da:	mov    r14d,0x4
  43c1e0:	jmp    0x43bf70
  43c1e5:	mov    eax,DWORD PTR [rsp+0x88]
  43c1ec:	mov    rdx,r13
  43c1ef:	add    r13,0x8
  43c1f3:	test   al,0x4
  43c1f5:	jne    0x43bfa3
  43c1fb:	mov    rcx,QWORD PTR [rsp+0x20]
  43c200:	fld    QWORD PTR [rdx]
  43c202:	mov    rdx,r12
  43c205:	fstp   TBYTE PTR [rsp+0x50]
  43c209:	call   0x43b210
  43c20e:	jmp    0x43be70
  43c213:	mov    eax,DWORD PTR [rsp+0x88]
  43c21a:	mov    rdx,r13
  43c21d:	add    r13,0x8
  43c221:	test   al,0x4
  43c223:	jne    0x43c010
  43c229:	mov    rcx,QWORD PTR [rsp+0x20]
  43c22e:	fld    QWORD PTR [rdx]
  43c230:	mov    rdx,r12
  43c233:	fstp   TBYTE PTR [rsp+0x50]
  43c237:	call   0x43acd0
  43c23c:	jmp    0x43be70
  43c241:	mov    eax,DWORD PTR [rsp+0x88]
  43c248:	mov    rdx,r13
  43c24b:	add    r13,0x8
  43c24f:	test   al,0x4
  43c251:	jne    0x43c050
  43c257:	mov    rcx,QWORD PTR [rsp+0x20]
  43c25c:	fld    QWORD PTR [rdx]
  43c25e:	mov    rdx,r12
  43c261:	fstp   TBYTE PTR [rsp+0x50]
  43c265:	call   0x43b160
  43c26a:	jmp    0x43be70
  43c26f:	nop
  43c270:	mov    DWORD PTR [rsp+0x90],0xffffffff
  43c27b:	mov    eax,DWORD PTR [r13+0x0]
  43c27f:	mov    rcx,QWORD PTR [rsp+0x28]
  43c284:	lea    rsi,[r13+0x8]
  43c288:	mov    r8,r12
  43c28b:	mov    edx,0x1
  43c290:	mov    r13,rsi
  43c293:	mov    WORD PTR [rsp+0x70],ax
  43c298:	call   0x43a5b0
  43c29d:	jmp    0x43be70
  43c2a2:	mov    eax,DWORD PTR [rsp+0x88]
  43c2a9:	mov    rdx,r13
  43c2ac:	add    r13,0x8
  43c2b0:	test   al,0x4
  43c2b2:	jne    0x43c120
  43c2b8:	mov    rcx,QWORD PTR [rsp+0x20]
  43c2bd:	fld    QWORD PTR [rdx]
  43c2bf:	mov    rdx,r12
  43c2c2:	fstp   TBYTE PTR [rsp+0x50]
  43c2c6:	call   0x43b770
  43c2cb:	jmp    0x43be70
  43c2d0:	test   r14d,r14d
  43c2d3:	jne    0x43c470
  43c2d9:	or     DWORD PTR [rsp+0x88],0x200
  43c2e4:	movzx  eax,BYTE PTR [rdi+0x1]
  43c2e8:	jmp    0x43bf70
  43c2ed:	nop    DWORD PTR [rax]
  43c2f0:	cmp    r14d,0x1
  43c2f4:	jbe    0x43c55e
  43c2fa:	movzx  eax,BYTE PTR [rdi+0x1]
  43c2fe:	mov    r14d,0x4
  43c304:	jmp    0x43bf70
  43c309:	nop    DWORD PTR [rax+0x0]
  43c310:	test   r14d,r14d
  43c313:	jne    0x43c399
  43c319:	or     DWORD PTR [rsp+0x88],0x400
  43c324:	movzx  eax,BYTE PTR [rdi+0x1]
  43c328:	jmp    0x43bf70
  43c32d:	nop    DWORD PTR [rax]
  43c330:	test   r14d,r14d
  43c333:	jne    0x43c399
  43c335:	or     DWORD PTR [rsp+0x88],0x100
  43c340:	movzx  eax,BYTE PTR [rdi+0x1]
  43c344:	jmp    0x43bf70
  43c349:	nop    DWORD PTR [rax+0x0]
  43c350:	test   r14d,r14d
  43c353:	jne    0x43c399
  43c355:	or     DWORD PTR [rsp+0x88],0x800
  43c360:	movzx  eax,BYTE PTR [rdi+0x1]
  43c364:	jmp    0x43bf70
  43c369:	nop    DWORD PTR [rax+0x0]
  43c370:	test   r14d,r14d
  43c373:	jne    0x43c399
  43c375:	or     DWORD PTR [rsp+0x88],0x40
  43c37d:	movzx  eax,BYTE PTR [rdi+0x1]
  43c381:	jmp    0x43bf70
  43c386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c390:	test   r14d,r14d
  43c393:	je     0x43c4a2
  43c399:	movzx  eax,BYTE PTR [rdi+0x1]
  43c39d:	jmp    0x43bf70
  43c3a2:	mov    rdx,r12
  43c3a5:	call   0x43a550
  43c3aa:	jmp    0x43be70
  43c3af:	nop
  43c3b0:	test   r11,r11
  43c3b3:	je     0x43c2fa
  43c3b9:	test   r14d,0xfffffffd
  43c3c0:	jne    0x43c490
  43c3c6:	mov    eax,DWORD PTR [r13+0x0]
  43c3ca:	lea    rdx,[r13+0x8]
  43c3ce:	test   eax,eax
  43c3d0:	mov    DWORD PTR [r11],eax
  43c3d3:	js     0x43c650
  43c3d9:	movzx  eax,BYTE PTR [rdi+0x1]
  43c3dd:	mov    r13,rdx
  43c3e0:	xor    r11d,r11d
  43c3e3:	jmp    0x43bf70
  43c3e8:	nop    DWORD PTR [rax+rax*1+0x0]
  43c3f0:	sub    eax,0x30
  43c3f3:	cmp    al,0x9
  43c3f5:	ja     0x43c616
  43c3fb:	cmp    r14d,0x3
  43c3ff:	ja     0x43c616
  43c405:	test   r14d,r14d
  43c408:	jne    0x43c47a
  43c40a:	mov    r14d,0x1
  43c410:	test   r11,r11
  43c413:	je     0x43c399
  43c415:	mov    eax,DWORD PTR [r11]
  43c418:	test   eax,eax
  43c41a:	js     0x43c57d
  43c420:	lea    eax,[rax+rax*4]
  43c423:	lea    eax,[rcx+rax*2-0x30]
  43c427:	mov    DWORD PTR [r11],eax
  43c42a:	movzx  eax,BYTE PTR [rdi+0x1]
  43c42e:	jmp    0x43bf70
  43c433:	mov    rsi,QWORD PTR [r13+0x0]
  43c437:	lea    rax,[rip+0x14baa]        # 0x450fe8
  43c43e:	lea    rdi,[r13+0x8]
  43c442:	mov    r13,rdi
  43c445:	test   rsi,rsi
  43c448:	cmove  rsi,rax
  43c44c:	mov    rcx,rsi
  43c44f:	call   0x43efd0
  43c454:	mov    r8,r12
  43c457:	mov    edx,eax
  43c459:	mov    rcx,rsi
  43c45c:	call   0x43a5b0
  43c461:	jmp    0x43be70
  43c466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c470:	cmp    r14d,0x3
  43c474:	ja     0x43c616
  43c47a:	cmp    r14d,0x2
  43c47e:	mov    eax,0x3
  43c483:	cmove  r14d,eax
  43c487:	jmp    0x43c410
  43c489:	nop    DWORD PTR [rax+0x0]
  43c490:	movzx  eax,BYTE PTR [rdi+0x1]
  43c494:	xor    r11d,r11d
  43c497:	mov    r14d,0x4
  43c49d:	jmp    0x43bf70
  43c4a2:	mov    DWORD PTR [rsp+0x4c],r10d
  43c4a7:	mov    QWORD PTR [rsp+0x40],r11
  43c4ac:	or     DWORD PTR [rsp+0x88],0x1000
  43c4b7:	mov    DWORD PTR [rsp+0x70],0x0
  43c4bf:	call   0x43f0c8
  43c4c4:	mov    r9,QWORD PTR [rsp+0x28]
  43c4c9:	mov    rdx,QWORD PTR [rax+0x8]
  43c4cd:	mov    r8d,0x10
  43c4d3:	mov    rcx,QWORD PTR [rsp+0x38]
  43c4d8:	call   0x43eb60
  43c4dd:	test   eax,eax
  43c4df:	mov    r11,QWORD PTR [rsp+0x40]
  43c4e4:	mov    r10d,DWORD PTR [rsp+0x4c]
  43c4e9:	jle    0x43c4f8
  43c4eb:	movzx  edx,WORD PTR [rsp+0x6e]
  43c4f0:	mov    WORD PTR [rsp+0xa0],dx
  43c4f8:	mov    DWORD PTR [rsp+0x9c],eax
  43c4ff:	movzx  eax,BYTE PTR [rdi+0x1]
  43c503:	jmp    0x43bf70
  43c508:	cmp    BYTE PTR [rdi+0x2],0x34
  43c50c:	je     0x43c69f
  43c512:	mov    eax,0x36
  43c517:	mov    r10d,0x3
  43c51d:	mov    r14d,0x4
  43c523:	jmp    0x43bf70
  43c528:	mov    rcx,QWORD PTR [r13+0x0]
  43c52c:	add    r13,0x8
  43c530:	mov    QWORD PTR [rsp+0x70],rcx
  43c535:	jmp    0x43c183
  43c53a:	mov    edx,DWORD PTR [rsp+0xa4]
  43c541:	add    r13,0x8
  43c545:	mov    BYTE PTR [rax],dl
  43c547:	jmp    0x43be70
  43c54c:	mov    rax,QWORD PTR [r13+0x0]
  43c550:	add    r13,0x8
  43c554:	mov    QWORD PTR [rsp+0x70],rax
  43c559:	jmp    0x43c0a8
  43c55e:	mov    DWORD PTR [rsp+0x90],0x0
  43c569:	movzx  eax,BYTE PTR [rdi+0x1]
  43c56d:	lea    r11,[r12+0x10]
  43c572:	mov    r14d,0x2
  43c578:	jmp    0x43bf70
  43c57d:	sub    ecx,0x30
  43c580:	movzx  eax,BYTE PTR [rdi+0x1]
  43c584:	mov    DWORD PTR [r11],ecx
  43c587:	jmp    0x43bf70
  43c58c:	mov    rdx,r12
  43c58f:	mov    rcx,rax
  43c592:	call   0x43adc0
  43c597:	jmp    0x43be70
  43c59c:	cmp    BYTE PTR [rdi+0x2],0x32
  43c5a0:	mov    eax,0x33
  43c5a5:	jne    0x43c1d4
  43c5ab:	lea    rbx,[rdi+0x3]
  43c5af:	movzx  eax,BYTE PTR [rdi+0x3]
  43c5b3:	mov    r10d,0x2
  43c5b9:	mov    r14d,0x4
  43c5bf:	jmp    0x43bf70
  43c5c4:	mov    edx,DWORD PTR [rsp+0xa4]
  43c5cb:	add    r13,0x8
  43c5cf:	mov    WORD PTR [rax],dx
  43c5d2:	jmp    0x43be70
  43c5d7:	movsxd rcx,DWORD PTR [r13+0x0]
  43c5db:	add    r13,0x8
  43c5df:	mov    QWORD PTR [rsp+0x70],rcx
  43c5e4:	jmp    0x43c183
  43c5e9:	mov    eax,DWORD PTR [r13+0x0]
  43c5ed:	add    r13,0x8
  43c5f1:	mov    QWORD PTR [rsp+0x70],rax
  43c5f6:	jmp    0x43c0a8
  43c5fb:	mov    eax,DWORD PTR [rsp+0x48]
  43c5ff:	mov    DWORD PTR [rsp+0x90],0x10
  43c60a:	mov    DWORD PTR [rsp+0x88],eax
  43c611:	jmp    0x43be93
  43c616:	mov    rdx,r12
  43c619:	mov    ecx,0x25
  43c61e:	mov    rbx,rsi
  43c621:	call   0x43a550
  43c626:	jmp    0x43be70
  43c62b:	movzx  eax,WORD PTR [rsp+0x70]
  43c630:	mov    r13,rdx
  43c633:	mov    QWORD PTR [rsp+0x70],rax
  43c638:	jmp    0x43c0a8
  43c63d:	movsx  rcx,WORD PTR [rsp+0x70]
  43c643:	mov    r13,rax
  43c646:	mov    QWORD PTR [rsp+0x70],rcx
  43c64b:	jmp    0x43c183
  43c650:	test   r14d,r14d
  43c653:	jne    0x43c6b8
  43c655:	or     DWORD PTR [rsp+0x88],0x400
  43c660:	neg    DWORD PTR [rsp+0x8c]
  43c667:	jmp    0x43c3d9
  43c66c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  43c674:	add    r13,0x8
  43c678:	mov    QWORD PTR [rax],rdx
  43c67b:	jmp    0x43be70
  43c680:	movzx  eax,BYTE PTR [rsp+0x70]
  43c685:	mov    QWORD PTR [rsp+0x70],rax
  43c68a:	jmp    0x43c0a8
  43c68f:	movsx  rcx,BYTE PTR [rsp+0x70]
  43c695:	mov    QWORD PTR [rsp+0x70],rcx
  43c69a:	jmp    0x43c183
  43c69f:	lea    rbx,[rdi+0x3]
  43c6a3:	movzx  eax,BYTE PTR [rdi+0x3]
  43c6a7:	mov    r10d,0x3
  43c6ad:	mov    r14d,0x4
  43c6b3:	jmp    0x43bf70
  43c6b8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  43c6c3:	movzx  eax,BYTE PTR [rdi+0x1]
  43c6c7:	mov    r13,rdx
  43c6ca:	xor    r11d,r11d
  43c6cd:	jmp    0x43bf70
  43c6d2:	nop
  43c6d3:	nop
  43c6d4:	nop
  43c6d5:	nop
  43c6d6:	nop
  43c6d7:	nop
  43c6d8:	nop
  43c6d9:	nop
  43c6da:	nop
  43c6db:	nop
  43c6dc:	nop
  43c6dd:	nop
  43c6de:	nop
  43c6df:	nop
  43c6e0:	push   rbx
  43c6e1:	sub    rsp,0x20
  43c6e5:	xor    ebx,ebx
  43c6e7:	cmp    ecx,0x1b
  43c6ea:	jle    0x43c6fd
  43c6ec:	mov    eax,0x4
  43c6f1:	add    eax,eax
  43c6f3:	add    ebx,0x1
  43c6f6:	lea    edx,[rax+0x17]
  43c6f9:	cmp    edx,ecx
  43c6fb:	jl     0x43c6f1
  43c6fd:	mov    ecx,ebx
  43c6ff:	call   0x43dfd0
  43c704:	mov    DWORD PTR [rax],ebx
  43c706:	add    rax,0x4
  43c70a:	add    rsp,0x20
  43c70e:	pop    rbx
  43c70f:	ret    
  43c710:	push   rsi
  43c711:	push   rbx
  43c712:	sub    rsp,0x28
  43c716:	mov    rbx,rcx
  43c719:	mov    ecx,r8d
  43c71c:	mov    rsi,rdx
  43c71f:	call   0x43c6e0
  43c724:	movzx  ecx,BYTE PTR [rbx]
  43c727:	lea    r8,[rbx+0x1]
  43c72b:	test   cl,cl
  43c72d:	mov    BYTE PTR [rax],cl
  43c72f:	mov    rcx,rax
  43c732:	je     0x43c749
  43c734:	add    r8,0x1
  43c738:	movzx  r9d,BYTE PTR [r8-0x1]
  43c73d:	add    rcx,0x1
  43c741:	test   r9b,r9b
  43c744:	mov    BYTE PTR [rcx],r9b
  43c747:	jne    0x43c734
  43c749:	test   rsi,rsi
  43c74c:	je     0x43c751
  43c74e:	mov    QWORD PTR [rsi],rcx
  43c751:	add    rsp,0x28
  43c755:	pop    rbx
  43c756:	pop    rsi
  43c757:	ret    
  43c758:	nop    DWORD PTR [rax+rax*1+0x0]
  43c760:	mov    edx,0x1
  43c765:	mov    rax,rcx
  43c768:	mov    ecx,DWORD PTR [rcx-0x4]
  43c76b:	shl    edx,cl
  43c76d:	mov    DWORD PTR [rax+0x4],ecx
  43c770:	lea    rcx,[rax-0x4]
  43c774:	mov    DWORD PTR [rax+0x8],edx
  43c777:	jmp    0x43e0e0
  43c77c:	nop    DWORD PTR [rax+0x0]
  43c780:	push   r15
  43c782:	push   r14
  43c784:	push   r13
  43c786:	push   r12
  43c788:	push   rbp
  43c789:	push   rdi
  43c78a:	push   rsi
  43c78b:	push   rbx
  43c78c:	sub    rsp,0x38
  43c790:	xor    eax,eax
  43c792:	mov    edi,DWORD PTR [rdx+0x14]
  43c795:	cmp    edi,DWORD PTR [rcx+0x14]
  43c798:	mov    r15,rdx
  43c79b:	jg     0x43c8e9
  43c7a1:	sub    edi,0x1
  43c7a4:	lea    rbx,[rdx+0x18]
  43c7a8:	lea    r12,[rcx+0x18]
  43c7ac:	movsxd r13,edi
  43c7af:	xor    edx,edx
  43c7b1:	shl    r13,0x2
  43c7b5:	lea    rbp,[rbx+r13*1]
  43c7b9:	add    r13,r12
  43c7bc:	mov    eax,DWORD PTR [rbp+0x0]
  43c7bf:	lea    r8d,[rax+0x1]
  43c7c3:	mov    eax,DWORD PTR [r13+0x0]
  43c7c7:	div    r8d
  43c7ca:	test   eax,eax
  43c7cc:	mov    r14d,eax
  43c7cf:	mov    DWORD PTR [rsp+0x2c],eax
  43c7d3:	je     0x43c867
  43c7d9:	mov    edx,eax
  43c7db:	mov    rsi,rbx
  43c7de:	mov    r11,r12
  43c7e1:	xor    eax,eax
  43c7e3:	xor    r10d,r10d
  43c7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c7f0:	add    rsi,0x4
  43c7f4:	mov    r8d,DWORD PTR [rsi-0x4]
  43c7f8:	mov    r9d,DWORD PTR [r11]
  43c7fb:	add    r11,0x4
  43c7ff:	imul   r8,rdx
  43c803:	add    r8,rax
  43c806:	mov    rax,r8
  43c809:	mov    r8d,r8d
  43c80c:	sub    r9,r8
  43c80f:	shr    rax,0x20
  43c813:	sub    r9,r10
  43c816:	mov    r10,r9
  43c819:	mov    DWORD PTR [r11-0x4],r9d
  43c81d:	shr    r10,0x20
  43c821:	and    r10d,0x1
  43c825:	cmp    rbp,rsi
  43c828:	jae    0x43c7f0
  43c82a:	mov    r11d,DWORD PTR [r13+0x0]
  43c82e:	test   r11d,r11d
  43c831:	jne    0x43c867
  43c833:	lea    rax,[r13-0x4]
  43c837:	cmp    r12,rax
  43c83a:	jae    0x43c864
  43c83c:	mov    r10d,DWORD PTR [r13-0x4]
  43c840:	test   r10d,r10d
  43c843:	je     0x43c858
  43c845:	jmp    0x43c864
  43c847:	nop    WORD PTR [rax+rax*1+0x0]
  43c850:	mov    r9d,DWORD PTR [rax]
  43c853:	test   r9d,r9d
  43c856:	jne    0x43c864
  43c858:	sub    rax,0x4
  43c85c:	sub    edi,0x1
  43c85f:	cmp    r12,rax
  43c862:	jb     0x43c850
  43c864:	mov    DWORD PTR [rcx+0x14],edi
  43c867:	mov    rdx,r15
  43c86a:	mov    rsi,rcx
  43c86d:	call   0x43e600
  43c872:	test   eax,eax
  43c874:	js     0x43c8e5
  43c876:	lea    eax,[r14+0x1]
  43c87a:	mov    rcx,r12
  43c87d:	xor    edx,edx
  43c87f:	mov    DWORD PTR [rsp+0x2c],eax
  43c883:	add    rbx,0x4
  43c887:	mov    eax,DWORD PTR [rcx]
  43c889:	mov    r8d,DWORD PTR [rbx-0x4]
  43c88d:	add    rcx,0x4
  43c891:	sub    rax,r8
  43c894:	sub    rax,rdx
  43c897:	mov    rdx,rax
  43c89a:	mov    DWORD PTR [rcx-0x4],eax
  43c89d:	shr    rdx,0x20
  43c8a1:	and    edx,0x1
  43c8a4:	cmp    rbp,rbx
  43c8a7:	jae    0x43c883
  43c8a9:	movsxd rax,edi
  43c8ac:	lea    rdx,[r12+rax*4]
  43c8b0:	mov    r8d,DWORD PTR [rdx]
  43c8b3:	test   r8d,r8d
  43c8b6:	jne    0x43c8e5
  43c8b8:	lea    rax,[rdx-0x4]
  43c8bc:	cmp    r12,rax
  43c8bf:	jae    0x43c8e2
  43c8c1:	mov    ecx,DWORD PTR [rdx-0x4]
  43c8c4:	test   ecx,ecx
  43c8c6:	je     0x43c8d6
  43c8c8:	jmp    0x43c8e2
  43c8ca:	nop    WORD PTR [rax+rax*1+0x0]
  43c8d0:	mov    edx,DWORD PTR [rax]
  43c8d2:	test   edx,edx
  43c8d4:	jne    0x43c8e2
  43c8d6:	sub    rax,0x4
  43c8da:	sub    edi,0x1
  43c8dd:	cmp    r12,rax
  43c8e0:	jb     0x43c8d0
  43c8e2:	mov    DWORD PTR [rsi+0x14],edi
  43c8e5:	mov    eax,DWORD PTR [rsp+0x2c]
  43c8e9:	add    rsp,0x38
  43c8ed:	pop    rbx
  43c8ee:	pop    rsi
  43c8ef:	pop    rdi
  43c8f0:	pop    rbp
  43c8f1:	pop    r12
  43c8f3:	pop    r13
  43c8f5:	pop    r14
  43c8f7:	pop    r15
  43c8f9:	ret    
  43c8fa:	nop
  43c8fb:	nop
  43c8fc:	nop
  43c8fd:	nop
  43c8fe:	nop
  43c8ff:	nop
  43c900:	push   r15
  43c902:	push   r14
  43c904:	push   r13
  43c906:	push   r12
  43c908:	push   rbp
  43c909:	push   rdi
  43c90a:	push   rsi
  43c90b:	push   rbx
  43c90c:	sub    rsp,0xb8
  43c913:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  43c91b:	mov    r12d,DWORD PTR [r9]
  43c91e:	mov    eax,r12d
  43c921:	and    eax,0xffffffcf
  43c924:	mov    DWORD PTR [r9],eax
  43c927:	mov    eax,r12d
  43c92a:	and    eax,0x7
  43c92d:	cmp    eax,0x4
  43c930:	ja     0x43dd63
  43c936:	mov    r13d,edx
  43c939:	lea    rdx,[rip+0x14850]        # 0x451190
  43c940:	mov    QWORD PTR [rsp+0x28],r9
  43c945:	mov    r15,r8
  43c948:	mov    rbp,rcx
  43c94b:	movsxd rax,DWORD PTR [rdx+rax*4]
  43c94f:	add    rdx,rax
  43c952:	jmp    rdx
  43c954:	mov    edi,DWORD PTR [rcx]
  43c956:	xor    ecx,ecx
  43c958:	cmp    edi,0x20
  43c95b:	jle    0x43c96b
  43c95d:	mov    eax,0x20
  43c962:	add    eax,eax
  43c964:	add    ecx,0x1
  43c967:	cmp    edi,eax
  43c969:	jg     0x43c962
  43c96b:	call   0x43dfd0
  43c970:	mov    rsi,rax
  43c973:	lea    eax,[rdi-0x1]
  43c976:	lea    r9,[rsi+0x18]
  43c97a:	sar    eax,0x5
  43c97d:	cdqe   
  43c97f:	mov    rdx,r9
  43c982:	lea    r11,[r15+rax*4]
  43c986:	mov    rax,r15
  43c989:	nop    DWORD PTR [rax+0x0]
  43c990:	mov    ecx,DWORD PTR [rax]
  43c992:	add    rax,0x4
  43c996:	add    rdx,0x4
  43c99a:	cmp    r11,rax
  43c99d:	mov    DWORD PTR [rdx-0x4],ecx
  43c9a0:	jae    0x43c990
  43c9a2:	sub    rdx,r9
  43c9a5:	sar    rdx,0x2
  43c9a9:	mov    r14d,edx
  43c9ac:	movsxd rdx,edx
  43c9af:	lea    rax,[r9+rdx*4-0x4]
  43c9b4:	jmp    0x43c9cf
  43c9b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c9c0:	sub    rax,0x4
  43c9c4:	test   edx,edx
  43c9c6:	mov    r14d,edx
  43c9c9:	je     0x43ced0
  43c9cf:	mov    r8d,DWORD PTR [rax]
  43c9d2:	lea    edx,[r14-0x1]
  43c9d6:	test   r8d,r8d
  43c9d9:	je     0x43c9c0
  43c9db:	movsxd rdx,edx
  43c9de:	mov    DWORD PTR [rsi+0x14],r14d
  43c9e2:	shl    r14d,0x5
  43c9e6:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  43c9eb:	xor    eax,0x1f
  43c9ee:	sub    r14d,eax
  43c9f1:	mov    rcx,rsi
  43c9f4:	call   0x43de70
  43c9f9:	test   eax,eax
  43c9fb:	mov    DWORD PTR [rsp+0x9c],eax
  43ca02:	mov    r11d,r13d
  43ca05:	jne    0x43cee0
  43ca0b:	mov    ecx,DWORD PTR [rsi+0x14]
  43ca0e:	test   ecx,ecx
  43ca10:	jne    0x43cac0
  43ca16:	mov    rcx,rsi
  43ca19:	call   0x43e0e0
  43ca1e:	mov    rax,QWORD PTR [rsp+0x130]
  43ca26:	mov    rdx,QWORD PTR [rsp+0x138]
  43ca2e:	lea    rcx,[rip+0x14758]        # 0x45118d
  43ca35:	mov    r8d,0x1
  43ca3b:	mov    DWORD PTR [rax],0x1
  43ca41:	call   0x43c710
  43ca46:	nop
  43ca47:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  43ca4f:	add    rsp,0xb8
  43ca56:	pop    rbx
  43ca57:	pop    rsi
  43ca58:	pop    rdi
  43ca59:	pop    rbp
  43ca5a:	pop    r12
  43ca5c:	pop    r13
  43ca5e:	pop    r14
  43ca60:	pop    r15
  43ca62:	ret    
  43ca63:	mov    rax,QWORD PTR [rsp+0x130]
  43ca6b:	mov    rdx,QWORD PTR [rsp+0x138]
  43ca73:	lea    rcx,[rip+0x1470f]        # 0x451189
  43ca7a:	mov    r8d,0x3
  43ca80:	mov    DWORD PTR [rax],0xffff8000
  43ca86:	call   0x43c710
  43ca8b:	jmp    0x43ca47
  43ca8d:	nop    DWORD PTR [rax]
  43ca90:	mov    rax,QWORD PTR [rsp+0x130]
  43ca98:	mov    rdx,QWORD PTR [rsp+0x138]
  43caa0:	lea    rcx,[rip+0x146d9]        # 0x451180
  43caa7:	mov    r8d,0x8
  43caad:	mov    DWORD PTR [rax],0xffff8000
  43cab3:	call   0x43c710
  43cab8:	jmp    0x43ca47
  43caba:	nop    WORD PTR [rax+rax*1+0x0]
  43cac0:	lea    rdx,[rsp+0x9c]
  43cac8:	mov    rcx,rsi
  43cacb:	mov    DWORD PTR [rsp+0x30],r11d
  43cad0:	call   0x43e790
  43cad5:	movq   rdx,xmm0
  43cada:	movq   r9,xmm0
  43cadf:	mov    r11d,DWORD PTR [rsp+0x30]
  43cae4:	pxor   xmm0,xmm0
  43cae8:	shr    rdx,0x20
  43caec:	mov    r9d,r9d
  43caef:	and    edx,0xfffff
  43caf5:	lea    ecx,[r11+r14*1-0x1]
  43cafa:	or     edx,0x3ff00000
  43cb00:	mov    rax,rdx
  43cb03:	cvtsi2sd xmm0,ecx
  43cb07:	shl    rax,0x20
  43cb0b:	mov    ebx,ecx
  43cb0d:	or     r9,rax
  43cb10:	sar    ebx,0x1f
  43cb13:	mov    QWORD PTR [rsp+0x30],r9
  43cb18:	mov    eax,ebx
  43cb1a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  43cb20:	xor    eax,ecx
  43cb22:	sub    eax,ebx
  43cb24:	subsd  xmm1,QWORD PTR [rip+0x1467c]        # 0x4511a8
  43cb2c:	sub    eax,0x435
  43cb31:	test   eax,eax
  43cb33:	mulsd  xmm0,QWORD PTR [rip+0x14685]        # 0x4511c0
  43cb3b:	mulsd  xmm1,QWORD PTR [rip+0x1466d]        # 0x4511b0
  43cb43:	addsd  xmm1,QWORD PTR [rip+0x1466d]        # 0x4511b8
  43cb4b:	addsd  xmm1,xmm0
  43cb4f:	jle    0x43cb65
  43cb51:	pxor   xmm0,xmm0
  43cb55:	cvtsi2sd xmm0,eax
  43cb59:	mulsd  xmm0,QWORD PTR [rip+0x14667]        # 0x4511c8
  43cb61:	addsd  xmm1,xmm0
  43cb65:	cvttsd2si eax,xmm1
  43cb69:	pxor   xmm6,xmm6
  43cb6d:	ucomisd xmm6,xmm1
  43cb71:	mov    DWORD PTR [rsp+0x30],eax
  43cb75:	ja     0x43d403
  43cb7b:	mov    eax,ecx
  43cb7d:	mov    r9d,r9d
  43cb80:	mov    DWORD PTR [rsp+0x6c],0x1
  43cb88:	shl    eax,0x14
  43cb8b:	add    eax,edx
  43cb8d:	shl    rax,0x20
  43cb91:	or     r9,rax
  43cb94:	cmp    DWORD PTR [rsp+0x30],0x16
  43cb99:	mov    QWORD PTR [rsp+0x80],r9
  43cba1:	ja     0x43cbd0
  43cba3:	movsxd rax,DWORD PTR [rsp+0x30]
  43cba8:	mov    rdx,QWORD PTR [rip+0x14961]        # 0x451510
  43cbaf:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  43cbb4:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  43cbbd:	jbe    0x43cf20
  43cbc3:	sub    DWORD PTR [rsp+0x30],0x1
  43cbc8:	mov    DWORD PTR [rsp+0x6c],0x0
  43cbd0:	mov    eax,r14d
  43cbd3:	mov    DWORD PTR [rsp+0x50],0x0
  43cbdb:	sub    eax,ecx
  43cbdd:	sub    eax,0x1
  43cbe0:	mov    DWORD PTR [rsp+0x40],eax
  43cbe4:	js     0x43d3f0
  43cbea:	mov    eax,DWORD PTR [rsp+0x30]
  43cbee:	test   eax,eax
  43cbf0:	js     0x43d3d0
  43cbf6:	add    DWORD PTR [rsp+0x40],eax
  43cbfa:	mov    DWORD PTR [rsp+0x88],eax
  43cc01:	mov    DWORD PTR [rsp+0x58],0x0
  43cc09:	cmp    DWORD PTR [rsp+0x120],0x9
  43cc11:	ja     0x43cf00
  43cc17:	cmp    DWORD PTR [rsp+0x120],0x5
  43cc1f:	jle    0x43cf0b
  43cc25:	sub    DWORD PTR [rsp+0x120],0x4
  43cc2d:	xor    eax,eax
  43cc2f:	cmp    DWORD PTR [rsp+0x120],0x3
  43cc37:	je     0x43d5c4
  43cc3d:	jle    0x43d323
  43cc43:	cmp    DWORD PTR [rsp+0x120],0x4
  43cc4b:	mov    DWORD PTR [rsp+0x60],0x1
  43cc53:	je     0x43cf30
  43cc59:	cmp    DWORD PTR [rsp+0x120],0x5
  43cc61:	jne    0x43d339
  43cc67:	mov    ebx,DWORD PTR [rsp+0x30]
  43cc6b:	add    ebx,DWORD PTR [rsp+0x128]
  43cc72:	mov    DWORD PTR [rsp+0x8c],ebx
  43cc79:	add    ebx,0x1
  43cc7c:	test   ebx,ebx
  43cc7e:	mov    DWORD PTR [rsp+0x68],ebx
  43cc82:	mov    ecx,ebx
  43cc84:	jle    0x43d800
  43cc8a:	cmp    ebx,0xe
  43cc8d:	mov    DWORD PTR [rsp+0x9c],ebx
  43cc94:	setbe  bl
  43cc97:	and    ebx,eax
  43cc99:	mov    QWORD PTR [rsp+0x78],r9
  43cc9e:	mov    DWORD PTR [rsp+0x70],r11d
  43cca3:	call   0x43c6e0
  43cca8:	mov    QWORD PTR [rsp+0x48],rax
  43ccad:	mov    eax,DWORD PTR [rbp+0xc]
  43ccb0:	mov    r11d,DWORD PTR [rsp+0x70]
  43ccb5:	mov    r9,QWORD PTR [rsp+0x78]
  43ccba:	sub    eax,0x1
  43ccbd:	mov    DWORD PTR [rsp+0x38],eax
  43ccc1:	je     0x43cce8
  43ccc3:	mov    ecx,DWORD PTR [rsp+0x38]
  43ccc7:	mov    eax,0x2
  43cccc:	test   ecx,ecx
  43ccce:	cmovns eax,ecx
  43ccd1:	and    r12d,0x8
  43ccd5:	mov    DWORD PTR [rsp+0x38],eax
  43ccd9:	je     0x43cce8
  43ccdb:	mov    eax,0x3
  43cce0:	sub    eax,DWORD PTR [rsp+0x38]
  43cce4:	mov    DWORD PTR [rsp+0x38],eax
  43cce8:	test   bl,bl
  43ccea:	je     0x43cfe0
  43ccf0:	mov    eax,DWORD PTR [rsp+0x38]
  43ccf4:	or     eax,DWORD PTR [rsp+0x30]
  43ccf8:	jne    0x43cfe0
  43ccfe:	mov    eax,DWORD PTR [rsp+0x6c]
  43cd02:	mov    DWORD PTR [rsp+0x9c],0x0
  43cd0d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  43cd16:	test   eax,eax
  43cd18:	je     0x43cd2c
  43cd1a:	movsd  xmm0,QWORD PTR [rip+0x144b6]        # 0x4511d8
  43cd22:	ucomisd xmm0,xmm4
  43cd26:	ja     0x43db5b
  43cd2c:	movapd xmm0,xmm4
  43cd30:	mov    r12d,DWORD PTR [rsp+0x68]
  43cd35:	addsd  xmm0,xmm4
  43cd39:	addsd  xmm0,QWORD PTR [rip+0x144af]        # 0x4511f0
  43cd41:	movq   rdx,xmm0
  43cd46:	movq   rax,xmm0
  43cd4b:	shr    rdx,0x20
  43cd4f:	mov    eax,eax
  43cd51:	sub    edx,0x3400000
  43cd57:	shl    rdx,0x20
  43cd5b:	or     rax,rdx
  43cd5e:	test   r12d,r12d
  43cd61:	je     0x43cf97
  43cd67:	mov    r9d,DWORD PTR [rsp+0x68]
  43cd6c:	movapd xmm0,xmm4
  43cd70:	xor    ecx,ecx
  43cd72:	mov    ebx,DWORD PTR [rsp+0x60]
  43cd76:	lea    edx,[r9-0x1]
  43cd7a:	movsxd rdx,edx
  43cd7d:	test   ebx,ebx
  43cd7f:	je     0x43d8a3
  43cd85:	mov    r10,QWORD PTR [rip+0x14784]        # 0x451510
  43cd8c:	movsd  xmm1,QWORD PTR [rip+0x1447c]        # 0x451210
  43cd94:	mov    QWORD PTR [rsp+0x38],rax
  43cd99:	cvttsd2si eax,xmm0
  43cd9d:	pxor   xmm2,xmm2
  43cda1:	mov    DWORD PTR [rsp+0x9c],0x0
  43cdac:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  43cdb2:	mov    rdx,QWORD PTR [rsp+0x48]
  43cdb7:	mov    rbx,rdx
  43cdba:	add    rbx,0x1
  43cdbe:	cvtsi2sd xmm2,eax
  43cdc2:	add    eax,0x30
  43cdc5:	mov    BYTE PTR [rdx],al
  43cdc7:	movsd  xmm5,QWORD PTR [rsp+0x38]
  43cdcd:	subsd  xmm0,xmm2
  43cdd1:	subsd  xmm1,xmm5
  43cdd5:	ucomisd xmm1,xmm0
  43cdd9:	ja     0x43ce74
  43cddf:	movsd  xmm5,QWORD PTR [rip+0x143f1]        # 0x4511d8
  43cde7:	movapd xmm2,xmm5
  43cdeb:	subsd  xmm2,xmm0
  43cdef:	ucomisd xmm1,xmm2
  43cdf3:	ja     0x43d977
  43cdf9:	mov    eax,DWORD PTR [rsp+0x9c]
  43ce00:	movsd  xmm3,QWORD PTR [rip+0x143d8]        # 0x4511e0
  43ce08:	add    eax,0x1
  43ce0b:	cmp    r9d,eax
  43ce0e:	mov    DWORD PTR [rsp+0x9c],eax
  43ce15:	jg     0x43ce4c
  43ce17:	jmp    0x43cfce
  43ce1c:	nop    DWORD PTR [rax+0x0]
  43ce20:	movapd xmm2,xmm5
  43ce24:	subsd  xmm2,xmm0
  43ce28:	ucomisd xmm1,xmm2
  43ce2c:	ja     0x43d977
  43ce32:	mov    eax,DWORD PTR [rsp+0x9c]
  43ce39:	add    eax,0x1
  43ce3c:	cmp    r9d,eax
  43ce3f:	mov    DWORD PTR [rsp+0x9c],eax
  43ce46:	jle    0x43cfce
  43ce4c:	mulsd  xmm0,xmm3
  43ce50:	add    rbx,0x1
  43ce54:	pxor   xmm2,xmm2
  43ce58:	mulsd  xmm1,xmm3
  43ce5c:	cvttsd2si eax,xmm0
  43ce60:	cvtsi2sd xmm2,eax
  43ce64:	add    eax,0x30
  43ce67:	mov    BYTE PTR [rbx-0x1],al
  43ce6a:	subsd  xmm0,xmm2
  43ce6e:	ucomisd xmm1,xmm0
  43ce72:	jbe    0x43ce20
  43ce74:	ucomisd xmm0,xmm6
  43ce78:	lea    ebp,[rcx+0x1]
  43ce7b:	jp     0x43ce83
  43ce7d:	je     0x43d7d7
  43ce83:	mov    r15d,0x10
  43ce89:	nop    DWORD PTR [rax+0x0]
  43ce90:	mov    rcx,rsi
  43ce93:	call   0x43e0e0
  43ce98:	cmp    QWORD PTR [rsp+0x138],0x0
  43cea1:	mov    rax,QWORD PTR [rsp+0x130]
  43cea9:	mov    BYTE PTR [rbx],0x0
  43ceac:	mov    DWORD PTR [rax],ebp
  43ceae:	je     0x43cebb
  43ceb0:	mov    rax,QWORD PTR [rsp+0x138]
  43ceb8:	mov    QWORD PTR [rax],rbx
  43cebb:	mov    rax,QWORD PTR [rsp+0x28]
  43cec0:	or     DWORD PTR [rax],r15d
  43cec3:	mov    rax,QWORD PTR [rsp+0x48]
  43cec8:	jmp    0x43ca47
  43cecd:	nop    DWORD PTR [rax]
  43ced0:	mov    DWORD PTR [rsi+0x14],0x0
  43ced7:	jmp    0x43c9f1
  43cedc:	nop    DWORD PTR [rax+0x0]
  43cee0:	mov    edx,eax
  43cee2:	mov    rcx,rsi
  43cee5:	call   0x43dd70
  43ceea:	mov    eax,DWORD PTR [rsp+0x9c]
  43cef1:	lea    r11d,[r13+rax*1+0x0]
  43cef6:	sub    r14d,eax
  43cef9:	jmp    0x43ca0b
  43cefe:	xchg   ax,ax
  43cf00:	mov    DWORD PTR [rsp+0x120],0x0
  43cf0b:	add    ecx,0x3fe
  43cf11:	cmp    ecx,0x7f7
  43cf17:	setbe  al
  43cf1a:	jmp    0x43cc2f
  43cf1f:	nop
  43cf20:	mov    DWORD PTR [rsp+0x6c],0x0
  43cf28:	jmp    0x43cbd0
  43cf2d:	nop    DWORD PTR [rax]
  43cf30:	mov    edx,DWORD PTR [rsp+0x128]
  43cf37:	test   edx,edx
  43cf39:	jle    0x43d7eb
  43cf3f:	cmp    DWORD PTR [rsp+0x128],0xe
  43cf47:	setbe  bl
  43cf4a:	mov    ecx,DWORD PTR [rsp+0x128]
  43cf51:	and    ebx,eax
  43cf53:	mov    DWORD PTR [rsp+0x9c],ecx
  43cf5a:	mov    DWORD PTR [rsp+0x8c],ecx
  43cf61:	mov    DWORD PTR [rsp+0x68],ecx
  43cf65:	jmp    0x43cc99
  43cf6a:	movapd xmm0,xmm4
  43cf6e:	addsd  xmm0,xmm4
  43cf72:	addsd  xmm0,QWORD PTR [rip+0x14276]        # 0x4511f0
  43cf7a:	movq   rdx,xmm0
  43cf7f:	movq   rax,xmm0
  43cf84:	shr    rdx,0x20
  43cf88:	mov    eax,eax
  43cf8a:	sub    edx,0x3400000
  43cf90:	shl    rdx,0x20
  43cf94:	or     rax,rdx
  43cf97:	movapd xmm1,xmm4
  43cf9b:	mov    QWORD PTR [rsp+0x38],rax
  43cfa0:	movsd  xmm0,QWORD PTR [rsp+0x38]
  43cfa6:	subsd  xmm1,QWORD PTR [rip+0x1424a]        # 0x4511f8
  43cfae:	ucomisd xmm1,xmm0
  43cfb2:	ja     0x43d894
  43cfb8:	movsd  xmm2,QWORD PTR [rip+0x14240]        # 0x451200
  43cfc0:	xorpd  xmm0,xmm2
  43cfc4:	ucomisd xmm0,xmm1
  43cfc8:	ja     0x43d3ad
  43cfce:	movq   r9,xmm4
  43cfd3:	mov    DWORD PTR [rsp+0x38],0x0
  43cfdb:	nop    DWORD PTR [rax+rax*1+0x0]
  43cfe0:	test   r11d,r11d
  43cfe3:	js     0x43d082
  43cfe9:	movsxd rax,DWORD PTR [rsp+0x30]
  43cfee:	cmp    eax,DWORD PTR [rbp+0x14]
  43cff1:	jg     0x43d082
  43cff7:	mov    ebx,DWORD PTR [rsp+0x68]
  43cffb:	mov    rdx,QWORD PTR [rip+0x1450e]        # 0x451510
  43d002:	test   ebx,ebx
  43d004:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  43d009:	jg     0x43d713
  43d00f:	mov    eax,DWORD PTR [rsp+0x128]
  43d016:	shr    eax,0x1f
  43d019:	test   al,al
  43d01b:	je     0x43d713
  43d021:	test   ebx,ebx
  43d023:	jne    0x43d3ad
  43d029:	mulsd  xmm2,QWORD PTR [rip+0x141c7]        # 0x4511f8
  43d031:	mov    QWORD PTR [rsp+0x38],r9
  43d036:	movsd  xmm5,QWORD PTR [rsp+0x38]
  43d03c:	ucomisd xmm2,xmm5
  43d040:	jae    0x43d3ad
  43d046:	mov    ebp,DWORD PTR [rsp+0x30]
  43d04a:	xor    r12d,r12d
  43d04d:	xor    edi,edi
  43d04f:	add    ebp,0x2
  43d052:	mov    rax,QWORD PTR [rsp+0x48]
  43d057:	mov    r15d,0x20
  43d05d:	lea    rbx,[rax+0x1]
  43d061:	mov    BYTE PTR [rax],0x31
  43d064:	mov    rcx,r12
  43d067:	call   0x43e0e0
  43d06c:	test   rdi,rdi
  43d06f:	je     0x43ce90
  43d075:	mov    rcx,rdi
  43d078:	call   0x43e0e0
  43d07d:	jmp    0x43ce90
  43d082:	mov    r9d,DWORD PTR [rsp+0x60]
  43d087:	test   r9d,r9d
  43d08a:	je     0x43d590
  43d090:	mov    edx,DWORD PTR [rbp+0x4]
  43d093:	sub    edi,r14d
  43d096:	mov    ecx,r11d
  43d099:	lea    eax,[rdi+0x1]
  43d09c:	sub    ecx,edi
  43d09e:	cmp    ecx,edx
  43d0a0:	mov    DWORD PTR [rsp+0x9c],eax
  43d0a7:	jge    0x43d0dc
  43d0a9:	mov    ebx,DWORD PTR [rsp+0x120]
  43d0b0:	lea    ecx,[rbx-0x3]
  43d0b3:	and    ecx,0xfffffffd
  43d0b6:	je     0x43d0dc
  43d0b8:	mov    ebx,DWORD PTR [rsp+0x68]
  43d0bc:	sub    r11d,edx
  43d0bf:	lea    eax,[r11+0x1]
  43d0c3:	test   ebx,ebx
  43d0c5:	mov    DWORD PTR [rsp+0x9c],eax
  43d0cc:	setg   cl
  43d0cf:	cmp    ebx,eax
  43d0d1:	setl   dl
  43d0d4:	test   cl,dl
  43d0d6:	je     0x43d81f
  43d0dc:	cmp    DWORD PTR [rsp+0x120],0x1
  43d0e4:	jle    0x43d81f
  43d0ea:	mov    ebx,DWORD PTR [rsp+0x58]
  43d0ee:	mov    eax,DWORD PTR [rsp+0x68]
  43d0f2:	mov    r12d,ebx
  43d0f5:	sub    eax,0x1
  43d0f8:	sub    r12d,eax
  43d0fb:	cmp    ebx,eax
  43d0fd:	jge    0x43d113
  43d0ff:	mov    edx,eax
  43d101:	sub    edx,DWORD PTR [rsp+0x58]
  43d105:	xor    r12d,r12d
  43d108:	add    DWORD PTR [rsp+0x88],edx
  43d10f:	mov    DWORD PTR [rsp+0x58],eax
  43d113:	mov    eax,DWORD PTR [rsp+0x68]
  43d117:	test   eax,eax
  43d119:	js     0x43dab2
  43d11f:	mov    ebx,DWORD PTR [rsp+0x50]
  43d123:	mov    DWORD PTR [rsp+0x9c],eax
  43d12a:	mov    ecx,0x1
  43d12f:	add    DWORD PTR [rsp+0x50],eax
  43d133:	add    DWORD PTR [rsp+0x40],eax
  43d137:	call   0x43e210
  43d13c:	mov    rdi,rax
  43d13f:	mov    ecx,DWORD PTR [rsp+0x40]
  43d143:	test   ecx,ecx
  43d145:	mov    eax,ecx
  43d147:	jle    0x43d165
  43d149:	test   ebx,ebx
  43d14b:	jle    0x43d165
  43d14d:	cmp    ecx,ebx
  43d14f:	cmovg  eax,ebx
  43d152:	sub    DWORD PTR [rsp+0x50],eax
  43d156:	sub    ecx,eax
  43d158:	mov    DWORD PTR [rsp+0x9c],eax
  43d15f:	sub    ebx,eax
  43d161:	mov    DWORD PTR [rsp+0x40],ecx
  43d165:	mov    r8d,DWORD PTR [rsp+0x58]
  43d16a:	test   r8d,r8d
  43d16d:	jle    0x43d1bb
  43d16f:	mov    ecx,DWORD PTR [rsp+0x60]
  43d173:	test   ecx,ecx
  43d175:	je     0x43d5b0
  43d17b:	test   r12d,r12d
  43d17e:	jle    0x43d1ae
  43d180:	mov    rcx,rdi
  43d183:	mov    edx,r12d
  43d186:	call   0x43e370
  43d18b:	mov    rdx,rsi
  43d18e:	mov    rcx,rax
  43d191:	mov    rdi,rax
  43d194:	call   0x43e240
  43d199:	mov    rcx,rsi
  43d19c:	mov    QWORD PTR [rsp+0x70],rax
  43d1a1:	call   0x43e0e0
  43d1a6:	mov    rax,QWORD PTR [rsp+0x70]
  43d1ab:	mov    rsi,rax
  43d1ae:	mov    edx,DWORD PTR [rsp+0x58]
  43d1b2:	sub    edx,r12d
  43d1b5:	jne    0x43d5b4
  43d1bb:	mov    ecx,0x1
  43d1c0:	call   0x43e210
  43d1c5:	mov    r12,rax
  43d1c8:	mov    eax,DWORD PTR [rsp+0x88]
  43d1cf:	test   eax,eax
  43d1d1:	jle    0x43d300
  43d1d7:	mov    rcx,r12
  43d1da:	mov    edx,eax
  43d1dc:	call   0x43e370
  43d1e1:	cmp    DWORD PTR [rsp+0x120],0x1
  43d1e9:	mov    r12,rax
  43d1ec:	jg     0x43d1f8
  43d1ee:	cmp    r14d,0x1
  43d1f2:	je     0x43d2bc
  43d1f8:	xor    ebp,ebp
  43d1fa:	mov    eax,DWORD PTR [r12+0x14]
  43d1ff:	sub    eax,0x1
  43d202:	cdqe   
  43d204:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  43d20a:	xor    eax,0x1f
  43d20d:	sub    eax,DWORD PTR [rsp+0x40]
  43d211:	mov    edx,DWORD PTR [rsp+0x50]
  43d215:	sub    eax,0x4
  43d218:	and    eax,0x1f
  43d21b:	add    edx,eax
  43d21d:	mov    r13d,eax
  43d220:	mov    DWORD PTR [rsp+0x9c],eax
  43d227:	test   edx,edx
  43d229:	mov    ecx,eax
  43d22b:	jle    0x43d23f
  43d22d:	mov    rcx,rsi
  43d230:	call   0x43e4e0
  43d235:	mov    ecx,DWORD PTR [rsp+0x9c]
  43d23c:	mov    rsi,rax
  43d23f:	mov    edx,DWORD PTR [rsp+0x40]
  43d243:	add    edx,ecx
  43d245:	test   edx,edx
  43d247:	jle    0x43d254
  43d249:	mov    rcx,r12
  43d24c:	call   0x43e4e0
  43d251:	mov    r12,rax
  43d254:	mov    eax,DWORD PTR [rsp+0x6c]
  43d258:	test   eax,eax
  43d25a:	jne    0x43d5d1
  43d260:	mov    r14d,DWORD PTR [rsp+0x68]
  43d265:	test   r14d,r14d
  43d268:	jg     0x43d421
  43d26e:	cmp    DWORD PTR [rsp+0x120],0x2
  43d276:	jle    0x43d421
  43d27c:	mov    r11d,DWORD PTR [rsp+0x68]
  43d281:	test   r11d,r11d
  43d284:	jne    0x43d3b2
  43d28a:	xor    r8d,r8d
  43d28d:	mov    rcx,r12
  43d290:	mov    edx,0x5
  43d295:	call   0x43e150
  43d29a:	mov    rcx,rsi
  43d29d:	mov    rdx,rax
  43d2a0:	mov    r12,rax
  43d2a3:	call   0x43e600
  43d2a8:	test   eax,eax
  43d2aa:	jle    0x43d3b2
  43d2b0:	mov    ebp,DWORD PTR [rsp+0x30]
  43d2b4:	add    ebp,0x2
  43d2b7:	jmp    0x43d052
  43d2bc:	mov    eax,DWORD PTR [rbp+0x4]
  43d2bf:	add    eax,0x1
  43d2c2:	cmp    r13d,eax
  43d2c5:	jle    0x43d1f8
  43d2cb:	add    DWORD PTR [rsp+0x50],0x1
  43d2d0:	add    DWORD PTR [rsp+0x40],0x1
  43d2d5:	mov    ebp,0x1
  43d2da:	nop    WORD PTR [rax+rax*1+0x0]
  43d2e0:	mov    edx,DWORD PTR [rsp+0x88]
  43d2e7:	mov    eax,0x1f
  43d2ec:	test   edx,edx
  43d2ee:	je     0x43d20d
  43d2f4:	jmp    0x43d1fa
  43d2f9:	nop    DWORD PTR [rax+0x0]
  43d300:	cmp    DWORD PTR [rsp+0x120],0x1
  43d308:	jg     0x43d310
  43d30a:	cmp    r14d,0x1
  43d30e:	je     0x43d314
  43d310:	xor    ebp,ebp
  43d312:	jmp    0x43d2e0
  43d314:	mov    eax,DWORD PTR [rbp+0x4]
  43d317:	xor    ebp,ebp
  43d319:	add    eax,0x1
  43d31c:	cmp    r13d,eax
  43d31f:	jle    0x43d2e0
  43d321:	jmp    0x43d2cb
  43d323:	cmp    DWORD PTR [rsp+0x120],0x2
  43d32b:	mov    DWORD PTR [rsp+0x60],0x0
  43d333:	je     0x43cf30
  43d339:	pxor   xmm0,xmm0
  43d33d:	mov    QWORD PTR [rsp+0x60],r9
  43d342:	mov    DWORD PTR [rsp+0x68],r11d
  43d347:	cvtsi2sd xmm0,edi
  43d34b:	mulsd  xmm0,QWORD PTR [rip+0x13e7d]        # 0x4511d0
  43d353:	cvttsd2si ecx,xmm0
  43d357:	add    ecx,0x3
  43d35a:	mov    DWORD PTR [rsp+0x9c],ecx
  43d361:	call   0x43c6e0
  43d366:	mov    QWORD PTR [rsp+0x48],rax
  43d36b:	mov    eax,DWORD PTR [rbp+0xc]
  43d36e:	mov    r11d,DWORD PTR [rsp+0x68]
  43d373:	mov    r9,QWORD PTR [rsp+0x60]
  43d378:	sub    eax,0x1
  43d37b:	mov    DWORD PTR [rsp+0x38],eax
  43d37f:	jne    0x43d82d
  43d385:	mov    eax,0xffffffff
  43d38a:	mov    DWORD PTR [rsp+0x60],0x1
  43d392:	mov    DWORD PTR [rsp+0x128],0x0
  43d39d:	mov    DWORD PTR [rsp+0x8c],eax
  43d3a4:	mov    DWORD PTR [rsp+0x68],eax
  43d3a8:	jmp    0x43cfe0
  43d3ad:	xor    r12d,r12d
  43d3b0:	xor    edi,edi
  43d3b2:	mov    ebp,DWORD PTR [rsp+0x128]
  43d3b9:	mov    rbx,QWORD PTR [rsp+0x48]
  43d3be:	mov    r15d,0x10
  43d3c4:	neg    ebp
  43d3c6:	jmp    0x43d064
  43d3cb:	nop    DWORD PTR [rax+rax*1+0x0]
  43d3d0:	mov    eax,DWORD PTR [rsp+0x30]
  43d3d4:	sub    DWORD PTR [rsp+0x50],eax
  43d3d8:	mov    DWORD PTR [rsp+0x88],0x0
  43d3e3:	neg    eax
  43d3e5:	mov    DWORD PTR [rsp+0x58],eax
  43d3e9:	jmp    0x43cc09
  43d3ee:	xchg   ax,ax
  43d3f0:	neg    eax
  43d3f2:	mov    DWORD PTR [rsp+0x40],0x0
  43d3fa:	mov    DWORD PTR [rsp+0x50],eax
  43d3fe:	jmp    0x43cbea
  43d403:	pxor   xmm0,xmm0
  43d407:	cvtsi2sd xmm0,eax
  43d40b:	ucomisd xmm0,xmm1
  43d40f:	jp     0x43d417
  43d411:	je     0x43cb7b
  43d417:	sub    DWORD PTR [rsp+0x30],0x1
  43d41c:	jmp    0x43cb7b
  43d421:	mov    r10d,DWORD PTR [rsp+0x60]
  43d426:	test   r10d,r10d
  43d429:	je     0x43d630
  43d42f:	lea    edx,[rbx+r13*1]
  43d433:	test   edx,edx
  43d435:	jle    0x43d442
  43d437:	mov    rcx,rdi
  43d43a:	call   0x43e4e0
  43d43f:	mov    rdi,rax
  43d442:	test   ebp,ebp
  43d444:	mov    r13,rdi
  43d447:	jne    0x43dae5
  43d44d:	mov    DWORD PTR [rsp+0x9c],0x1
  43d458:	mov    rbx,QWORD PTR [rsp+0x48]
  43d45d:	mov    QWORD PTR [rsp+0x40],r12
  43d462:	mov    QWORD PTR [rsp+0x50],r15
  43d467:	jmp    0x43d52e
  43d46c:	nop    DWORD PTR [rax+0x0]
  43d470:	mov    rcx,r8
  43d473:	call   0x43e0e0
  43d478:	mov    eax,r12d
  43d47b:	or     eax,DWORD PTR [rsp+0x120]
  43d482:	jne    0x43d49a
  43d484:	mov    ecx,DWORD PTR [rsp+0x38]
  43d488:	test   ecx,ecx
  43d48a:	jne    0x43d49a
  43d48c:	mov    rax,QWORD PTR [rsp+0x50]
  43d491:	test   BYTE PTR [rax],0x1
  43d494:	je     0x43dc55
  43d49a:	test   r14d,r14d
  43d49d:	js     0x43d9b0
  43d4a3:	or     r14d,DWORD PTR [rsp+0x120]
  43d4ab:	jne    0x43d4bb
  43d4ad:	mov    rax,QWORD PTR [rsp+0x50]
  43d4b2:	test   BYTE PTR [rax],0x1
  43d4b5:	je     0x43d9b0
  43d4bb:	test   r12d,r12d
  43d4be:	jle    0x43d4cb
  43d4c0:	cmp    DWORD PTR [rsp+0x38],0x2
  43d4c5:	jne    0x43dbbf
  43d4cb:	add    rbx,0x1
  43d4cf:	mov    BYTE PTR [rbx-0x1],bpl
  43d4d3:	mov    eax,DWORD PTR [rsp+0x68]
  43d4d7:	cmp    DWORD PTR [rsp+0x9c],eax
  43d4de:	je     0x43db4b
  43d4e4:	xor    r8d,r8d
  43d4e7:	mov    rcx,rsi
  43d4ea:	mov    edx,0xa
  43d4ef:	call   0x43e150
  43d4f4:	xor    r8d,r8d
  43d4f7:	cmp    rdi,r13
  43d4fa:	mov    rsi,rax
  43d4fd:	mov    edx,0xa
  43d502:	mov    rcx,rdi
  43d505:	je     0x43d5a0
  43d50b:	call   0x43e150
  43d510:	mov    rcx,r13
  43d513:	xor    r8d,r8d
  43d516:	mov    edx,0xa
  43d51b:	mov    rdi,rax
  43d51e:	call   0x43e150
  43d523:	mov    r13,rax
  43d526:	add    DWORD PTR [rsp+0x9c],0x1
  43d52e:	mov    r12,QWORD PTR [rsp+0x40]
  43d533:	mov    rcx,rsi
  43d536:	mov    rdx,r12
  43d539:	call   0x43c780
  43d53e:	mov    rdx,rdi
  43d541:	mov    rcx,rsi
  43d544:	mov    r15d,eax
  43d547:	lea    ebp,[rax+0x30]
  43d54a:	call   0x43e600
  43d54f:	mov    rcx,r12
  43d552:	mov    rdx,r13
  43d555:	mov    r14d,eax
  43d558:	call   0x43e650
  43d55d:	mov    r9d,DWORD PTR [rax+0x10]
  43d561:	mov    r8,rax
  43d564:	mov    r12d,0x1
  43d56a:	test   r9d,r9d
  43d56d:	jne    0x43d470
  43d573:	mov    rdx,rax
  43d576:	mov    rcx,rsi
  43d579:	mov    QWORD PTR [rsp+0x58],rax
  43d57e:	call   0x43e600
  43d583:	mov    r8,QWORD PTR [rsp+0x58]
  43d588:	mov    r12d,eax
  43d58b:	jmp    0x43d470
  43d590:	mov    r12d,DWORD PTR [rsp+0x58]
  43d595:	mov    ebx,DWORD PTR [rsp+0x50]
  43d599:	xor    edi,edi
  43d59b:	jmp    0x43d13f
  43d5a0:	call   0x43e150
  43d5a5:	mov    rdi,rax
  43d5a8:	mov    r13,rax
  43d5ab:	jmp    0x43d526
  43d5b0:	mov    edx,DWORD PTR [rsp+0x58]
  43d5b4:	mov    rcx,rsi
  43d5b7:	call   0x43e370
  43d5bc:	mov    rsi,rax
  43d5bf:	jmp    0x43d1bb
  43d5c4:	mov    DWORD PTR [rsp+0x60],0x0
  43d5cc:	jmp    0x43cc67
  43d5d1:	mov    rdx,r12
  43d5d4:	mov    rcx,rsi
  43d5d7:	call   0x43e600
  43d5dc:	test   eax,eax
  43d5de:	jns    0x43d260
  43d5e4:	xor    r8d,r8d
  43d5e7:	mov    rcx,rsi
  43d5ea:	mov    edx,0xa
  43d5ef:	sub    DWORD PTR [rsp+0x30],0x1
  43d5f4:	call   0x43e150
  43d5f9:	mov    rsi,rax
  43d5fc:	mov    eax,DWORD PTR [rsp+0x60]
  43d600:	test   eax,eax
  43d602:	jne    0x43dcc8
  43d608:	mov    eax,DWORD PTR [rsp+0x8c]
  43d60f:	test   eax,eax
  43d611:	jg     0x43d625
  43d613:	cmp    DWORD PTR [rsp+0x120],0x2
  43d61b:	mov    DWORD PTR [rsp+0x68],eax
  43d61f:	jg     0x43d27c
  43d625:	mov    eax,DWORD PTR [rsp+0x8c]
  43d62c:	mov    DWORD PTR [rsp+0x68],eax
  43d630:	mov    DWORD PTR [rsp+0x9c],0x1
  43d63b:	mov    rbx,QWORD PTR [rsp+0x48]
  43d640:	mov    r13d,DWORD PTR [rsp+0x68]
  43d645:	jmp    0x43d66b
  43d647:	nop    WORD PTR [rax+rax*1+0x0]
  43d650:	mov    rcx,rsi
  43d653:	xor    r8d,r8d
  43d656:	mov    edx,0xa
  43d65b:	call   0x43e150
  43d660:	add    DWORD PTR [rsp+0x9c],0x1
  43d668:	mov    rsi,rax
  43d66b:	mov    rdx,r12
  43d66e:	mov    rcx,rsi
  43d671:	add    rbx,0x1
  43d675:	call   0x43c780
  43d67a:	lea    ebp,[rax+0x30]
  43d67d:	mov    BYTE PTR [rbx-0x1],bpl
  43d681:	cmp    DWORD PTR [rsp+0x9c],r13d
  43d689:	jl     0x43d650
  43d68b:	xor    r14d,r14d
  43d68e:	mov    eax,DWORD PTR [rsp+0x38]
  43d692:	test   eax,eax
  43d694:	je     0x43da5c
  43d69a:	cmp    eax,0x2
  43d69d:	je     0x43da8c
  43d6a3:	cmp    DWORD PTR [rsi+0x14],0x1
  43d6a7:	jle    0x43dc23
  43d6ad:	movzx  edx,BYTE PTR [rbx-0x1]
  43d6b1:	mov    rcx,QWORD PTR [rsp+0x48]
  43d6b6:	jmp    0x43d6d0
  43d6b8:	nop    DWORD PTR [rax+rax*1+0x0]
  43d6c0:	cmp    rax,rcx
  43d6c3:	je     0x43d87c
  43d6c9:	movzx  edx,BYTE PTR [rax-0x1]
  43d6cd:	mov    rbx,rax
  43d6d0:	cmp    dl,0x39
  43d6d3:	lea    rax,[rbx-0x1]
  43d6d7:	je     0x43d6c0
  43d6d9:	add    edx,0x1
  43d6dc:	mov    r15d,0x20
  43d6e2:	mov    BYTE PTR [rax],dl
  43d6e4:	mov    rcx,r12
  43d6e7:	call   0x43e0e0
  43d6ec:	test   rdi,rdi
  43d6ef:	je     0x43d7df
  43d6f5:	cmp    r14,rdi
  43d6f8:	je     0x43d707
  43d6fa:	test   r14,r14
  43d6fd:	je     0x43d707
  43d6ff:	mov    rcx,r14
  43d702:	call   0x43e0e0
  43d707:	mov    ebp,DWORD PTR [rsp+0x30]
  43d70b:	add    ebp,0x1
  43d70e:	jmp    0x43d075
  43d713:	mov    QWORD PTR [rsp+0x40],r9
  43d718:	mov    rdi,QWORD PTR [rsp+0x48]
  43d71d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  43d723:	mov    DWORD PTR [rsp+0x9c],0x1
  43d72e:	movapd xmm1,xmm0
  43d732:	mov    rbx,rdi
  43d735:	add    rbx,0x1
  43d739:	divsd  xmm1,xmm2
  43d73d:	cvttsd2si eax,xmm1
  43d741:	pxor   xmm1,xmm1
  43d745:	cvtsi2sd xmm1,eax
  43d749:	lea    edx,[rax+0x30]
  43d74c:	mov    BYTE PTR [rdi],dl
  43d74e:	mulsd  xmm1,xmm2
  43d752:	subsd  xmm0,xmm1
  43d756:	ucomisd xmm0,xmm6
  43d75a:	jp     0x43d75e
  43d75c:	je     0x43d7d0
  43d75e:	mov    edx,DWORD PTR [rsp+0x9c]
  43d765:	cmp    DWORD PTR [rsp+0x68],edx
  43d769:	je     0x43d857
  43d76f:	movsd  xmm3,QWORD PTR [rip+0x13a69]        # 0x4511e0
  43d777:	movapd xmm4,xmm6
  43d77b:	mov    ecx,DWORD PTR [rsp+0x68]
  43d77f:	jmp    0x43d790
  43d781:	mov    edx,DWORD PTR [rsp+0x9c]
  43d788:	cmp    ecx,edx
  43d78a:	je     0x43d857
  43d790:	mulsd  xmm0,xmm3
  43d794:	add    edx,0x1
  43d797:	add    rbx,0x1
  43d79b:	mov    DWORD PTR [rsp+0x9c],edx
  43d7a2:	movapd xmm1,xmm0
  43d7a6:	divsd  xmm1,xmm2
  43d7aa:	cvttsd2si eax,xmm1
  43d7ae:	pxor   xmm1,xmm1
  43d7b2:	cvtsi2sd xmm1,eax
  43d7b6:	lea    edx,[rax+0x30]
  43d7b9:	mov    BYTE PTR [rbx-0x1],dl
  43d7bc:	mulsd  xmm1,xmm2
  43d7c0:	subsd  xmm0,xmm1
  43d7c4:	ucomisd xmm0,xmm6
  43d7c8:	jp     0x43d781
  43d7ca:	ucomisd xmm0,xmm4
  43d7ce:	jne    0x43d781
  43d7d0:	mov    ebp,DWORD PTR [rsp+0x30]
  43d7d4:	add    ebp,0x1
  43d7d7:	xor    r15d,r15d
  43d7da:	jmp    0x43ce90
  43d7df:	mov    ebp,DWORD PTR [rsp+0x30]
  43d7e3:	add    ebp,0x1
  43d7e6:	jmp    0x43ce90
  43d7eb:	mov    ebx,0x1
  43d7f0:	mov    DWORD PTR [rsp+0x128],0x1
  43d7fb:	jmp    0x43cf4a
  43d800:	cmp    DWORD PTR [rsp+0x68],0xe
  43d805:	mov    DWORD PTR [rsp+0x9c],0x1
  43d810:	mov    ecx,0x1
  43d815:	setbe  bl
  43d818:	and    ebx,eax
  43d81a:	jmp    0x43cc99
  43d81f:	mov    r12d,DWORD PTR [rsp+0x58]
  43d824:	mov    ebx,DWORD PTR [rsp+0x50]
  43d828:	jmp    0x43d12a
  43d82d:	mov    eax,0xffffffff
  43d832:	xor    ebx,ebx
  43d834:	mov    DWORD PTR [rsp+0x60],0x1
  43d83c:	mov    DWORD PTR [rsp+0x8c],eax
  43d843:	mov    DWORD PTR [rsp+0x68],eax
  43d847:	mov    DWORD PTR [rsp+0x128],0x0
  43d852:	jmp    0x43ccc3
  43d857:	mov    r10d,DWORD PTR [rsp+0x38]
  43d85c:	test   r10d,r10d
  43d85f:	je     0x43db1e
  43d865:	cmp    DWORD PTR [rsp+0x38],0x1
  43d86a:	je     0x43dc11
  43d870:	mov    ebp,DWORD PTR [rsp+0x30]
  43d874:	add    ebp,0x1
  43d877:	jmp    0x43ce83
  43d87c:	mov    rax,QWORD PTR [rsp+0x48]
  43d881:	add    DWORD PTR [rsp+0x30],0x1
  43d886:	mov    r15d,0x20
  43d88c:	mov    BYTE PTR [rax],0x31
  43d88f:	jmp    0x43d6e4
  43d894:	mov    ebp,0x2
  43d899:	xor    r12d,r12d
  43d89c:	xor    edi,edi
  43d89e:	jmp    0x43d052
  43d8a3:	mov    r10,QWORD PTR [rip+0x13c66]        # 0x451510
  43d8aa:	mov    QWORD PTR [rsp+0x38],rax
  43d8af:	movsd  xmm3,QWORD PTR [rsp+0x38]
  43d8b5:	mov    DWORD PTR [rsp+0x9c],0x1
  43d8c0:	mov    rbx,QWORD PTR [rsp+0x48]
  43d8c5:	movsd  xmm1,QWORD PTR [rip+0x13913]        # 0x4511e0
  43d8cd:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  43d8d3:	jmp    0x43d8e3
  43d8d5:	mulsd  xmm0,xmm1
  43d8d9:	add    edx,0x1
  43d8dc:	mov    DWORD PTR [rsp+0x9c],edx
  43d8e3:	cvttsd2si eax,xmm0
  43d8e7:	test   eax,eax
  43d8e9:	je     0x43d8f7
  43d8eb:	pxor   xmm2,xmm2
  43d8ef:	cvtsi2sd xmm2,eax
  43d8f3:	subsd  xmm0,xmm2
  43d8f7:	add    rbx,0x1
  43d8fb:	add    eax,0x30
  43d8fe:	mov    BYTE PTR [rbx-0x1],al
  43d901:	mov    edx,DWORD PTR [rsp+0x9c]
  43d908:	cmp    edx,r9d
  43d90b:	jne    0x43d8d5
  43d90d:	movsd  xmm1,QWORD PTR [rip+0x138fb]        # 0x451210
  43d915:	movapd xmm2,xmm3
  43d919:	addsd  xmm2,xmm1
  43d91d:	ucomisd xmm0,xmm2
  43d921:	ja     0x43d977
  43d923:	subsd  xmm1,xmm3
  43d927:	ucomisd xmm1,xmm0
  43d92b:	jbe    0x43cfce
  43d931:	ucomisd xmm0,xmm6
  43d935:	jp     0x43dcbd
  43d93b:	jne    0x43dcbd
  43d941:	xor    r15d,r15d
  43d944:	jmp    0x43d957
  43d946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d950:	movzx  eax,BYTE PTR [rbx-0x2]
  43d954:	mov    rbx,rdx
  43d957:	cmp    al,0x30
  43d959:	lea    rdx,[rbx-0x1]
  43d95d:	je     0x43d950
  43d95f:	lea    ebp,[rcx+0x1]
  43d962:	jmp    0x43ce90
  43d967:	test   al,0x1
  43d969:	mov    ecx,DWORD PTR [rsp+0x30]
  43d96d:	movzx  eax,BYTE PTR [rbx-0x1]
  43d971:	je     0x43dcbd
  43d977:	mov    r8,QWORD PTR [rsp+0x48]
  43d97c:	jmp    0x43d990
  43d97e:	xchg   ax,ax
  43d980:	cmp    rdx,r8
  43d983:	je     0x43dacc
  43d989:	movzx  eax,BYTE PTR [rdx-0x1]
  43d98d:	mov    rbx,rdx
  43d990:	cmp    al,0x39
  43d992:	lea    rdx,[rbx-0x1]
  43d996:	je     0x43d980
  43d998:	mov    QWORD PTR [rsp+0x48],r8
  43d99d:	add    eax,0x1
  43d9a0:	mov    BYTE PTR [rdx],al
  43d9a2:	lea    ebp,[rcx+0x1]
  43d9a5:	mov    r15d,0x20
  43d9ab:	jmp    0x43ce90
  43d9b0:	mov    edx,DWORD PTR [rsp+0x38]
  43d9b4:	mov    eax,r12d
  43d9b7:	mov    r14d,ebp
  43d9ba:	mov    r12,QWORD PTR [rsp+0x40]
  43d9bf:	test   edx,edx
  43d9c1:	je     0x43dbf1
  43d9c7:	cmp    DWORD PTR [rsi+0x14],0x1
  43d9cb:	jle    0x43dbe7
  43d9d1:	cmp    DWORD PTR [rsp+0x38],0x2
  43d9d6:	jne    0x43da27
  43d9d8:	jmp    0x43dc06
  43d9dd:	nop    DWORD PTR [rax]
  43d9e0:	add    rbx,0x1
  43d9e4:	xor    r8d,r8d
  43d9e7:	mov    rcx,r13
  43d9ea:	mov    BYTE PTR [rbx-0x1],r14b
  43d9ee:	mov    edx,0xa
  43d9f3:	call   0x43e150
  43d9f8:	cmp    rdi,r13
  43d9fb:	mov    rcx,rsi
  43d9fe:	mov    edx,0xa
  43da03:	cmove  rdi,rax
  43da07:	xor    r8d,r8d
  43da0a:	mov    rbp,rax
  43da0d:	call   0x43e150
  43da12:	mov    rdx,r12
  43da15:	mov    rcx,rax
  43da18:	mov    rsi,rax
  43da1b:	call   0x43c780
  43da20:	lea    r14d,[rax+0x30]
  43da24:	mov    r13,rbp
  43da27:	mov    rdx,r13
  43da2a:	mov    rcx,r12
  43da2d:	call   0x43e600
  43da32:	test   eax,eax
  43da34:	jg     0x43d9e0
  43da36:	cmp    r14d,0x39
  43da3a:	je     0x43dc36
  43da40:	add    r14d,0x1
  43da44:	mov    r15d,0x20
  43da4a:	mov    BYTE PTR [rbx],r14b
  43da4d:	mov    r14,rdi
  43da50:	add    rbx,0x1
  43da54:	mov    rdi,r13
  43da57:	jmp    0x43d6e4
  43da5c:	mov    rcx,rsi
  43da5f:	mov    edx,0x1
  43da64:	call   0x43e4e0
  43da69:	mov    rdx,r12
  43da6c:	mov    rcx,rax
  43da6f:	mov    rsi,rax
  43da72:	call   0x43e600
  43da77:	cmp    eax,0x0
  43da7a:	jg     0x43d6ad
  43da80:	jne    0x43da8c
  43da82:	and    bpl,0x1
  43da86:	jne    0x43d6ad
  43da8c:	cmp    DWORD PTR [rsi+0x14],0x1
  43da90:	mov    r15d,0x10
  43da96:	jg     0x43daa3
  43da98:	jmp    0x43dd2d
  43da9d:	nop    DWORD PTR [rax]
  43daa0:	mov    rbx,rax
  43daa3:	cmp    BYTE PTR [rbx-0x1],0x30
  43daa7:	lea    rax,[rbx-0x1]
  43daab:	je     0x43daa0
  43daad:	jmp    0x43d6e4
  43dab2:	mov    ebx,DWORD PTR [rsp+0x50]
  43dab6:	mov    DWORD PTR [rsp+0x9c],0x0
  43dac1:	xor    eax,eax
  43dac3:	sub    ebx,DWORD PTR [rsp+0x68]
  43dac7:	jmp    0x43d12a
  43dacc:	mov    QWORD PTR [rsp+0x48],r8
  43dad1:	add    ecx,0x1
  43dad4:	mov    BYTE PTR [r8],0x30
  43dad8:	mov    rdx,r8
  43dadb:	mov    eax,0x31
  43dae0:	jmp    0x43d9a0
  43dae5:	mov    ecx,DWORD PTR [rdi+0x8]
  43dae8:	call   0x43dfd0
  43daed:	lea    rcx,[rax+0x10]
  43daf1:	mov    rbx,rax
  43daf4:	movsxd rax,DWORD PTR [rdi+0x14]
  43daf8:	lea    rdx,[rdi+0x10]
  43dafc:	lea    r8,[rax*4+0x8]
  43db04:	call   0x43f0a8
  43db09:	mov    edx,0x1
  43db0e:	mov    rcx,rbx
  43db11:	call   0x43e4e0
  43db16:	mov    r13,rax
  43db19:	jmp    0x43d44d
  43db1e:	addsd  xmm0,xmm0
  43db22:	ucomisd xmm0,xmm2
  43db26:	ja     0x43dc11
  43db2c:	ucomisd xmm2,xmm0
  43db30:	jp     0x43db38
  43db32:	je     0x43d967
  43db38:	movzx  eax,BYTE PTR [rbx-0x1]
  43db3c:	mov    ecx,DWORD PTR [rsp+0x30]
  43db40:	mov    r15d,0x10
  43db46:	jmp    0x43d957
  43db4b:	mov    r14,rdi
  43db4e:	mov    r12,QWORD PTR [rsp+0x40]
  43db53:	mov    rdi,r13
  43db56:	jmp    0x43d68e
  43db5b:	mov    eax,DWORD PTR [rsp+0x68]
  43db5f:	test   eax,eax
  43db61:	je     0x43cf6a
  43db67:	mov    r9d,DWORD PTR [rsp+0x8c]
  43db6f:	test   r9d,r9d
  43db72:	jle    0x43cfce
  43db78:	movsd  xmm0,QWORD PTR [rip+0x13660]        # 0x4511e0
  43db80:	mov    ecx,0xffffffff
  43db85:	movsd  xmm1,QWORD PTR [rip+0x1365b]        # 0x4511e8
  43db8d:	mulsd  xmm0,xmm4
  43db91:	mulsd  xmm1,xmm0
  43db95:	addsd  xmm1,QWORD PTR [rip+0x13653]        # 0x4511f0
  43db9d:	movq   rdx,xmm1
  43dba2:	movq   rax,xmm1
  43dba7:	shr    rdx,0x20
  43dbab:	mov    eax,eax
  43dbad:	sub    edx,0x3400000
  43dbb3:	shl    rdx,0x20
  43dbb7:	or     rax,rdx
  43dbba:	jmp    0x43cd72
  43dbbf:	cmp    ebp,0x39
  43dbc2:	mov    r12,QWORD PTR [rsp+0x40]
  43dbc7:	mov    rax,rbx
  43dbca:	je     0x43dc39
  43dbcc:	add    ebp,0x1
  43dbcf:	mov    r14,rdi
  43dbd2:	add    rbx,0x1
  43dbd6:	mov    BYTE PTR [rax],bpl
  43dbd9:	mov    rdi,r13
  43dbdc:	mov    r15d,0x20
  43dbe2:	jmp    0x43d6e4
  43dbe7:	cmp    DWORD PTR [rsi+0x18],0x0
  43dbeb:	jne    0x43d9d1
  43dbf1:	test   eax,eax
  43dbf3:	jg     0x43dc89
  43dbf9:	xor    r15d,r15d
  43dbfc:	cmp    DWORD PTR [rsi+0x14],0x1
  43dc00:	jle    0x43dd08
  43dc06:	mov    r15d,0x10
  43dc0c:	jmp    0x43da4a
  43dc11:	movzx  eax,BYTE PTR [rbx-0x1]
  43dc15:	mov    ecx,DWORD PTR [rsp+0x30]
  43dc19:	mov    r8,QWORD PTR [rsp+0x48]
  43dc1e:	jmp    0x43d990
  43dc23:	mov    eax,DWORD PTR [rsi+0x18]
  43dc26:	test   eax,eax
  43dc28:	jne    0x43d6ad
  43dc2e:	xor    r15d,r15d
  43dc31:	jmp    0x43daa3
  43dc36:	mov    rax,rbx
  43dc39:	mov    r14,rdi
  43dc3c:	add    rbx,0x1
  43dc40:	mov    rdi,r13
  43dc43:	mov    BYTE PTR [rax],0x39
  43dc46:	mov    edx,0x39
  43dc4b:	mov    rcx,QWORD PTR [rsp+0x48]
  43dc50:	jmp    0x43d6d0
  43dc55:	cmp    ebp,0x39
  43dc58:	mov    r12,QWORD PTR [rsp+0x40]
  43dc5d:	mov    rax,rbx
  43dc60:	je     0x43dc36
  43dc62:	test   r14d,r14d
  43dc65:	jle    0x43dd40
  43dc6b:	mov    ebp,r15d
  43dc6e:	mov    r15d,0x20
  43dc74:	add    ebp,0x31
  43dc77:	mov    r14,rdi
  43dc7a:	add    rbx,0x1
  43dc7e:	mov    BYTE PTR [rax],bpl
  43dc81:	mov    rdi,r13
  43dc84:	jmp    0x43d6e4
  43dc89:	mov    rcx,rsi
  43dc8c:	mov    edx,0x1
  43dc91:	call   0x43e4e0
  43dc96:	mov    rdx,r12
  43dc99:	mov    rcx,rax
  43dc9c:	mov    rsi,rax
  43dc9f:	call   0x43e600
  43dca4:	cmp    eax,0x0
  43dca7:	jle    0x43dd1a
  43dca9:	cmp    ebp,0x39
  43dcac:	je     0x43dc36
  43dcae:	lea    r14d,[rbp+0x1]
  43dcb2:	mov    r15d,0x20
  43dcb8:	jmp    0x43dbfc
  43dcbd:	mov    r15d,0x10
  43dcc3:	jmp    0x43d957
  43dcc8:	xor    r8d,r8d
  43dccb:	mov    rcx,rdi
  43dcce:	mov    edx,0xa
  43dcd3:	call   0x43e150
  43dcd8:	mov    rdi,rax
  43dcdb:	mov    eax,DWORD PTR [rsp+0x8c]
  43dce2:	test   eax,eax
  43dce4:	jg     0x43dcf8
  43dce6:	cmp    DWORD PTR [rsp+0x120],0x2
  43dcee:	mov    DWORD PTR [rsp+0x68],eax
  43dcf2:	jg     0x43d27c
  43dcf8:	mov    eax,DWORD PTR [rsp+0x8c]
  43dcff:	mov    DWORD PTR [rsp+0x68],eax
  43dd03:	jmp    0x43d42f
  43dd08:	cmp    DWORD PTR [rsi+0x18],0x0
  43dd0c:	mov    eax,0x10
  43dd11:	cmovne r15d,eax
  43dd15:	jmp    0x43da4a
  43dd1a:	jne    0x43dd22
  43dd1c:	test   bpl,0x1
  43dd20:	jne    0x43dca9
  43dd22:	mov    r15d,0x20
  43dd28:	jmp    0x43dbfc
  43dd2d:	cmp    DWORD PTR [rsi+0x18],0x1
  43dd31:	sbb    r15d,r15d
  43dd34:	not    r15d
  43dd37:	and    r15d,0x10
  43dd3b:	jmp    0x43daa3
  43dd40:	cmp    DWORD PTR [rsi+0x14],0x1
  43dd44:	mov    r15d,0x10
  43dd4a:	jg     0x43dc77
  43dd50:	cmp    DWORD PTR [rsi+0x18],0x1
  43dd54:	sbb    r15d,r15d
  43dd57:	not    r15d
  43dd5a:	and    r15d,0x10
  43dd5e:	jmp    0x43dc77
  43dd63:	xor    eax,eax
  43dd65:	jmp    0x43ca47
  43dd6a:	nop
  43dd6b:	nop
  43dd6c:	nop
  43dd6d:	nop
  43dd6e:	nop
  43dd6f:	nop
  43dd70:	push   rbp
  43dd71:	push   rdi
  43dd72:	push   rsi
  43dd73:	push   rbx
  43dd74:	mov    rsi,rcx
  43dd77:	lea    r10,[rcx+0x18]
  43dd7b:	movsxd rcx,DWORD PTR [rcx+0x14]
  43dd7f:	mov    eax,edx
  43dd81:	sar    eax,0x5
  43dd84:	cmp    eax,ecx
  43dd86:	jge    0x43de10
  43dd8c:	cdqe   
  43dd8e:	and    edx,0x1f
  43dd91:	lea    rbx,[r10+rcx*4]
  43dd95:	lea    rdi,[r10+rax*4]
  43dd99:	je     0x43de23
  43dd9f:	mov    r9d,DWORD PTR [rdi]
  43dda2:	lea    r8,[rdi+0x4]
  43dda6:	mov    ebp,0x20
  43ddab:	mov    ecx,edx
  43ddad:	sub    ebp,edx
  43ddaf:	shr    r9d,cl
  43ddb2:	cmp    rbx,r8
  43ddb5:	jbe    0x43de68
  43ddbb:	mov    r11,r10
  43ddbe:	xchg   ax,ax
  43ddc0:	mov    eax,DWORD PTR [r8]
  43ddc3:	mov    ecx,ebp
  43ddc5:	add    r11,0x4
  43ddc9:	add    r8,0x4
  43ddcd:	shl    eax,cl
  43ddcf:	mov    ecx,edx
  43ddd1:	or     eax,r9d
  43ddd4:	mov    DWORD PTR [r11-0x4],eax
  43ddd8:	mov    r9d,DWORD PTR [r8-0x4]
  43dddc:	shr    r9d,cl
  43dddf:	cmp    rbx,r8
  43dde2:	ja     0x43ddc0
  43dde4:	sub    rbx,rdi
  43dde7:	lea    rax,[rbx-0x5]
  43ddeb:	shr    rax,0x2
  43ddef:	lea    rax,[r10+rax*4+0x4]
  43ddf4:	test   r9d,r9d
  43ddf7:	mov    DWORD PTR [rax],r9d
  43ddfa:	je     0x43de00
  43ddfc:	add    rax,0x4
  43de00:	sub    rax,r10
  43de03:	shr    rax,0x2
  43de07:	jmp    0x43de5c
  43de09:	nop    DWORD PTR [rax+0x0]
  43de10:	mov    DWORD PTR [rsi+0x14],0x0
  43de17:	mov    DWORD PTR [rsi+0x18],0x0
  43de1e:	pop    rbx
  43de1f:	pop    rsi
  43de20:	pop    rdi
  43de21:	pop    rbp
  43de22:	ret    
  43de23:	cmp    rbx,rdi
  43de26:	mov    rdx,r10
  43de29:	mov    rax,rdi
  43de2c:	jbe    0x43de10
  43de2e:	xchg   ax,ax
  43de30:	add    rax,0x4
  43de34:	mov    r8d,DWORD PTR [rax-0x4]
  43de38:	add    rdx,0x4
  43de3c:	cmp    rbx,rax
  43de3f:	mov    DWORD PTR [rdx-0x4],r8d
  43de43:	ja     0x43de30
  43de45:	not    rdi
  43de48:	lea    rax,[rdi+rbx*1]
  43de4c:	shr    rax,0x2
  43de50:	lea    rax,[rax*4+0x4]
  43de58:	shr    rax,0x2
  43de5c:	test   eax,eax
  43de5e:	mov    DWORD PTR [rsi+0x14],eax
  43de61:	je     0x43de17
  43de63:	pop    rbx
  43de64:	pop    rsi
  43de65:	pop    rdi
  43de66:	pop    rbp
  43de67:	ret    
  43de68:	mov    rax,r10
  43de6b:	jmp    0x43ddf4
  43de6d:	nop    DWORD PTR [rax]
  43de70:	movsxd rax,DWORD PTR [rcx+0x14]
  43de74:	lea    rdx,[rcx+0x18]
  43de78:	lea    r8,[rdx+rax*4]
  43de7c:	cmp    rdx,r8
  43de7f:	jae    0x43deab
  43de81:	mov    ecx,DWORD PTR [rcx+0x18]
  43de84:	xor    eax,eax
  43de86:	test   ecx,ecx
  43de88:	je     0x43de96
  43de8a:	jmp    0x43dea4
  43de8c:	nop    DWORD PTR [rax+0x0]
  43de90:	mov    ecx,DWORD PTR [rdx]
  43de92:	test   ecx,ecx
  43de94:	jne    0x43dea4
  43de96:	add    rdx,0x4
  43de9a:	add    eax,0x20
  43de9d:	cmp    r8,rdx
  43dea0:	ja     0x43de90
  43dea2:	repz ret 
  43dea4:	tzcnt  ecx,ecx
  43dea8:	add    eax,ecx
  43deaa:	ret    
  43deab:	xor    eax,eax
  43dead:	ret    
  43deae:	nop
  43deaf:	nop
  43deb0:	push   rsi
  43deb1:	push   rbx
  43deb2:	sub    rsp,0x28
  43deb6:	mov    eax,DWORD PTR [rip+0x1c9d4]        # 0x45a890
  43debc:	movsxd rsi,ecx
  43debf:	cmp    eax,0x2
  43dec2:	je     0x43df2d
  43dec4:	test   eax,eax
  43dec6:	je     0x43def2
  43dec8:	cmp    eax,0x1
  43decb:	jne    0x43deeb
  43decd:	mov    rbx,QWORD PTR [rip+0x1d6e0]        # 0x45b5b4
  43ded4:	mov    ecx,0x1
  43ded9:	call   rbx
  43dedb:	mov    eax,DWORD PTR [rip+0x1c9af]        # 0x45a890
  43dee1:	cmp    eax,0x1
  43dee4:	je     0x43ded4
  43dee6:	cmp    eax,0x2
  43dee9:	je     0x43df2d
  43deeb:	add    rsp,0x28
  43deef:	pop    rbx
  43def0:	pop    rsi
  43def1:	ret    
  43def2:	mov    al,0x1
  43def4:	xchg   DWORD PTR [rip+0x1c996],eax        # 0x45a890
  43defa:	test   eax,eax
  43defc:	jne    0x43df50
  43defe:	lea    rcx,[rip+0x1c9bb]        # 0x45a8c0
  43df05:	mov    rbx,QWORD PTR [rip+0x1d658]        # 0x45b564
  43df0c:	call   rbx
  43df0e:	lea    rcx,[rip+0x1c9d3]        # 0x45a8e8
  43df15:	call   rbx
  43df17:	lea    rcx,[rip+0x62]        # 0x43df80
  43df1e:	call   0x438860
  43df23:	mov    DWORD PTR [rip+0x1c963],0x2        # 0x45a890
  43df2d:	lea    rdx,[rsi+rsi*4]
  43df31:	lea    rax,[rip+0x1c988]        # 0x45a8c0
  43df38:	lea    rcx,[rax+rdx*8]
  43df3c:	mov    rax,QWORD PTR [rip+0x1d5c1]        # 0x45b504
  43df43:	add    rsp,0x28
  43df47:	pop    rbx
  43df48:	pop    rsi
  43df49:	rex.W jmp rax
  43df4c:	nop    DWORD PTR [rax+0x0]
  43df50:	cmp    eax,0x2
  43df53:	je     0x43df70
  43df55:	mov    eax,DWORD PTR [rip+0x1c935]        # 0x45a890
  43df5b:	cmp    eax,0x1
  43df5e:	je     0x43decd
  43df64:	jmp    0x43dee6
  43df66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43df70:	mov    DWORD PTR [rip+0x1c916],0x2        # 0x45a890
  43df7a:	jmp    0x43df2d
  43df7c:	nop    DWORD PTR [rax+0x0]
  43df80:	push   rbx
  43df81:	sub    rsp,0x20
  43df85:	mov    eax,0x3
  43df8a:	xchg   DWORD PTR [rip+0x1c900],eax        # 0x45a890
  43df90:	cmp    eax,0x2
  43df93:	je     0x43dfa0
  43df95:	add    rsp,0x20
  43df99:	pop    rbx
  43df9a:	ret    
  43df9b:	nop    DWORD PTR [rax+rax*1+0x0]
  43dfa0:	mov    rbx,QWORD PTR [rip+0x1d555]        # 0x45b4fc
  43dfa7:	lea    rcx,[rip+0x1c912]        # 0x45a8c0
  43dfae:	call   rbx
  43dfb0:	lea    rcx,[rip+0x1c931]        # 0x45a8e8
  43dfb7:	mov    rax,rbx
  43dfba:	add    rsp,0x20
  43dfbe:	pop    rbx
  43dfbf:	rex.W jmp rax
  43dfc2:	nop    DWORD PTR [rax+0x0]
  43dfc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43dfd0:	push   rdi
  43dfd1:	push   rsi
  43dfd2:	push   rbx
  43dfd3:	sub    rsp,0x20
  43dfd7:	mov    ebx,ecx
  43dfd9:	xor    ecx,ecx
  43dfdb:	call   0x43deb0
  43dfe0:	cmp    ebx,0x9
  43dfe3:	jg     0x43e020
  43dfe5:	lea    rdx,[rip+0x1c854]        # 0x45a840
  43dfec:	movsxd rcx,ebx
  43dfef:	mov    rdi,QWORD PTR [rdx+rcx*8]
  43dff3:	test   rdi,rdi
  43dff6:	je     0x43e080
  43dffc:	cmp    DWORD PTR [rip+0x1c88d],0x2        # 0x45a890
  43e003:	mov    r8,QWORD PTR [rdi]
  43e006:	mov    QWORD PTR [rdx+rcx*8],r8
  43e00a:	jne    0x43e066
  43e00c:	lea    rcx,[rip+0x1c8ad]        # 0x45a8c0
  43e013:	call   QWORD PTR [rip+0x1d55b]        # 0x45b574
  43e019:	jmp    0x43e066
  43e01b:	nop    DWORD PTR [rax+rax*1+0x0]
  43e020:	mov    eax,0x1
  43e025:	mov    ecx,ebx
  43e027:	shl    eax,cl
  43e029:	mov    esi,eax
  43e02b:	lea    eax,[rax-0x1]
  43e02e:	cdqe   
  43e030:	lea    rdx,[rax*4+0x27]
  43e038:	shr    rdx,0x3
  43e03c:	mov    edx,edx
  43e03e:	lea    rcx,[rdx*8+0x0]
  43e046:	call   0x43f0c0
  43e04b:	test   rax,rax
  43e04e:	mov    rdi,rax
  43e051:	je     0x43e0da
  43e057:	cmp    DWORD PTR [rip+0x1c832],0x2        # 0x45a890
  43e05e:	mov    DWORD PTR [rdi+0x8],ebx
  43e061:	mov    DWORD PTR [rdi+0xc],esi
  43e064:	je     0x43e00c
  43e066:	mov    DWORD PTR [rdi+0x14],0x0
  43e06d:	mov    DWORD PTR [rdi+0x10],0x0
  43e074:	mov    rax,rdi
  43e077:	add    rsp,0x20
  43e07b:	pop    rbx
  43e07c:	pop    rsi
  43e07d:	pop    rdi
  43e07e:	ret    
  43e07f:	nop
  43e080:	mov    ecx,ebx
  43e082:	mov    eax,0x1
  43e087:	mov    rdi,QWORD PTR [rip+0x4152]        # 0x4421e0
  43e08e:	shl    eax,cl
  43e090:	lea    rcx,[rip+0x1bea9]        # 0x459f40
  43e097:	lea    edx,[rax-0x1]
  43e09a:	mov    esi,eax
  43e09c:	mov    rax,rdi
  43e09f:	movsxd rdx,edx
  43e0a2:	sub    rax,rcx
  43e0a5:	lea    rdx,[rdx*4+0x27]
  43e0ad:	mov    rcx,rax
  43e0b0:	sar    rcx,0x3
  43e0b4:	shr    rdx,0x3
  43e0b8:	mov    edx,edx
  43e0ba:	add    rcx,rdx
  43e0bd:	cmp    rcx,0x120
  43e0c4:	ja     0x43e03e
  43e0ca:	lea    rdx,[rdi+rdx*8]
  43e0ce:	mov    QWORD PTR [rip+0x410b],rdx        # 0x4421e0
  43e0d5:	jmp    0x43e057
  43e0da:	xor    eax,eax
  43e0dc:	jmp    0x43e077
  43e0de:	xchg   ax,ax
  43e0e0:	push   rbx
  43e0e1:	sub    rsp,0x20
  43e0e5:	test   rcx,rcx
  43e0e8:	je     0x43e119
  43e0ea:	cmp    DWORD PTR [rcx+0x8],0x9
  43e0ee:	jg     0x43e120
  43e0f0:	mov    rbx,rcx
  43e0f3:	xor    ecx,ecx
  43e0f5:	call   0x43deb0
  43e0fa:	movsxd rdx,DWORD PTR [rbx+0x8]
  43e0fe:	lea    rax,[rip+0x1c73b]        # 0x45a840
  43e105:	cmp    DWORD PTR [rip+0x1c784],0x2        # 0x45a890
  43e10c:	mov    rcx,QWORD PTR [rax+rdx*8]
  43e110:	mov    QWORD PTR [rax+rdx*8],rbx
  43e114:	mov    QWORD PTR [rbx],rcx
  43e117:	je     0x43e130
  43e119:	add    rsp,0x20
  43e11d:	pop    rbx
  43e11e:	ret    
  43e11f:	nop
  43e120:	add    rsp,0x20
  43e124:	pop    rbx
  43e125:	jmp    0x43f100
  43e12a:	nop    WORD PTR [rax+rax*1+0x0]
  43e130:	mov    rax,QWORD PTR [rip+0x1d43d]        # 0x45b574
  43e137:	lea    rcx,[rip+0x1c782]        # 0x45a8c0
  43e13e:	add    rsp,0x20
  43e142:	pop    rbx
  43e143:	rex.W jmp rax
  43e146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e150:	push   rbp
  43e151:	push   rdi
  43e152:	push   rsi
  43e153:	push   rbx
  43e154:	sub    rsp,0x28
  43e158:	mov    esi,DWORD PTR [rcx+0x14]
  43e15b:	xor    r9d,r9d
  43e15e:	lea    r10,[rcx+0x18]
  43e162:	mov    rdi,rcx
  43e165:	movsxd rbx,r8d
  43e168:	movsxd rdx,edx
  43e16b:	nop    DWORD PTR [rax+rax*1+0x0]
  43e170:	mov    eax,DWORD PTR [r10+r9*4]
  43e174:	imul   rax,rdx
  43e178:	add    rax,rbx
  43e17b:	mov    rbx,rax
  43e17e:	mov    DWORD PTR [r10+r9*4],eax
  43e182:	add    r9,0x1
  43e186:	shr    rbx,0x20
  43e18a:	cmp    esi,r9d
  43e18d:	jg     0x43e170
  43e18f:	test   rbx,rbx
  43e192:	mov    rax,rdi
  43e195:	je     0x43e1ac
  43e197:	cmp    esi,DWORD PTR [rdi+0xc]
  43e19a:	jge    0x43e1b5
  43e19c:	movsxd rax,esi
  43e19f:	add    esi,0x1
  43e1a2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  43e1a6:	mov    DWORD PTR [rdi+0x14],esi
  43e1a9:	mov    rax,rdi
  43e1ac:	add    rsp,0x28
  43e1b0:	pop    rbx
  43e1b1:	pop    rsi
  43e1b2:	pop    rdi
  43e1b3:	pop    rbp
  43e1b4:	ret    
  43e1b5:	mov    eax,DWORD PTR [rdi+0x8]
  43e1b8:	lea    ecx,[rax+0x1]
  43e1bb:	call   0x43dfd0
  43e1c0:	test   rax,rax
  43e1c3:	mov    rbp,rax
  43e1c6:	je     0x43e1fe
  43e1c8:	lea    rcx,[rax+0x10]
  43e1cc:	movsxd rax,DWORD PTR [rdi+0x14]
  43e1d0:	lea    rdx,[rdi+0x10]
  43e1d4:	lea    r8,[rax*4+0x8]
  43e1dc:	call   0x43f0a8
  43e1e1:	mov    rcx,rdi
  43e1e4:	mov    rdi,rbp
  43e1e7:	call   0x43e0e0
  43e1ec:	movsxd rax,esi
  43e1ef:	add    esi,0x1
  43e1f2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  43e1f6:	mov    DWORD PTR [rdi+0x14],esi
  43e1f9:	mov    rax,rdi
  43e1fc:	jmp    0x43e1ac
  43e1fe:	xor    eax,eax
  43e200:	jmp    0x43e1ac
  43e202:	nop    DWORD PTR [rax+0x0]
  43e206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e210:	push   rbx
  43e211:	sub    rsp,0x20
  43e215:	mov    ebx,ecx
  43e217:	mov    ecx,0x1
  43e21c:	call   0x43dfd0
  43e221:	test   rax,rax
  43e224:	je     0x43e230
  43e226:	mov    DWORD PTR [rax+0x18],ebx
  43e229:	mov    DWORD PTR [rax+0x14],0x1
  43e230:	add    rsp,0x20
  43e234:	pop    rbx
  43e235:	ret    
  43e236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e240:	push   r14
  43e242:	push   r13
  43e244:	push   r12
  43e246:	push   rbp
  43e247:	push   rdi
  43e248:	push   rsi
  43e249:	push   rbx
  43e24a:	sub    rsp,0x20
  43e24e:	movsxd r13,DWORD PTR [rcx+0x14]
  43e252:	movsxd rbx,DWORD PTR [rdx+0x14]
  43e256:	mov    r12,rcx
  43e259:	mov    r14,rdx
  43e25c:	cmp    r13d,ebx
  43e25f:	jl     0x43e361
  43e265:	mov    eax,ebx
  43e267:	movsxd rbx,r13d
  43e26a:	movsxd r13,eax
  43e26d:	xor    eax,eax
  43e26f:	lea    esi,[rbx+r13*1]
  43e273:	cmp    esi,DWORD PTR [r12+0xc]
  43e278:	setg   al
  43e27b:	add    eax,DWORD PTR [r12+0x8]
  43e280:	mov    ecx,eax
  43e282:	call   0x43dfd0
  43e287:	test   rax,rax
  43e28a:	je     0x43e36c
  43e290:	lea    rdi,[rax+0x18]
  43e294:	movsxd rdx,esi
  43e297:	lea    rbp,[rdi+rdx*4]
  43e29b:	mov    r8,rdi
  43e29e:	cmp    rdi,rbp
  43e2a1:	jae    0x43e2b3
  43e2a3:	mov    DWORD PTR [r8],0x0
  43e2aa:	add    r8,0x4
  43e2ae:	cmp    rbp,r8
  43e2b1:	ja     0x43e2a3
  43e2b3:	lea    rdx,[r14+0x18]
  43e2b7:	add    r12,0x18
  43e2bb:	lea    rbx,[r12+rbx*4]
  43e2bf:	lea    r13,[rdx+r13*4]
  43e2c3:	cmp    rdx,r13
  43e2c6:	jae    0x43e329
  43e2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  43e2d0:	add    rdx,0x4
  43e2d4:	mov    r11d,DWORD PTR [rdx-0x4]
  43e2d8:	test   r11d,r11d
  43e2db:	je     0x43e320
  43e2dd:	mov    r9,rdi
  43e2e0:	mov    r8,r12
  43e2e3:	xor    r10d,r10d
  43e2e6:	jmp    0x43e2f3
  43e2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  43e2f0:	mov    r9,r14
  43e2f3:	add    r8,0x4
  43e2f7:	mov    ecx,DWORD PTR [r8-0x4]
  43e2fb:	mov    r14d,DWORD PTR [r9]
  43e2fe:	imul   rcx,r11
  43e302:	add    rcx,r14
  43e305:	lea    r14,[r9+0x4]
  43e309:	add    rcx,r10
  43e30c:	mov    r10,rcx
  43e30f:	mov    DWORD PTR [r14-0x4],ecx
  43e313:	shr    r10,0x20
  43e317:	cmp    rbx,r8
  43e31a:	ja     0x43e2f0
  43e31c:	mov    DWORD PTR [r9+0x4],r10d
  43e320:	add    rdi,0x4
  43e324:	cmp    r13,rdx
  43e327:	ja     0x43e2d0
  43e329:	test   esi,esi
  43e32b:	jle    0x43e34f
  43e32d:	mov    r8d,DWORD PTR [rbp-0x4]
  43e331:	lea    rdx,[rbp-0x4]
  43e335:	test   r8d,r8d
  43e338:	je     0x43e34a
  43e33a:	jmp    0x43e34f
  43e33c:	nop    DWORD PTR [rax+0x0]
  43e340:	sub    rdx,0x4
  43e344:	mov    ecx,DWORD PTR [rdx]
  43e346:	test   ecx,ecx
  43e348:	jne    0x43e34f
  43e34a:	sub    esi,0x1
  43e34d:	jne    0x43e340
  43e34f:	mov    DWORD PTR [rax+0x14],esi
  43e352:	add    rsp,0x20
  43e356:	pop    rbx
  43e357:	pop    rsi
  43e358:	pop    rdi
  43e359:	pop    rbp
  43e35a:	pop    r12
  43e35c:	pop    r13
  43e35e:	pop    r14
  43e360:	ret    
  43e361:	mov    r12,rdx
  43e364:	mov    r14,rcx
  43e367:	jmp    0x43e26d
  43e36c:	xor    eax,eax
  43e36e:	jmp    0x43e352
  43e370:	push   rbp
  43e371:	push   rdi
  43e372:	push   rsi
  43e373:	push   rbx
  43e374:	sub    rsp,0x28
  43e378:	mov    eax,edx
  43e37a:	mov    rbp,rcx
  43e37d:	mov    ebx,edx
  43e37f:	and    eax,0x3
  43e382:	jne    0x43e410
  43e388:	sar    ebx,0x2
  43e38b:	mov    rax,rbp
  43e38e:	test   ebx,ebx
  43e390:	je     0x43e3dc
  43e392:	mov    rdi,QWORD PTR [rip+0x1bb67]        # 0x459f00
  43e399:	test   rdi,rdi
  43e39c:	jne    0x43e3b2
  43e39e:	jmp    0x43e45d
  43e3a3:	sar    ebx,1
  43e3a5:	je     0x43e3d9
  43e3a7:	mov    rsi,QWORD PTR [rdi]
  43e3aa:	test   rsi,rsi
  43e3ad:	je     0x43e3e5
  43e3af:	mov    rdi,rsi
  43e3b2:	test   bl,0x1
  43e3b5:	je     0x43e3a3
  43e3b7:	mov    rdx,rdi
  43e3ba:	mov    rcx,rbp
  43e3bd:	call   0x43e240
  43e3c2:	test   rax,rax
  43e3c5:	mov    rsi,rax
  43e3c8:	je     0x43e433
  43e3ca:	mov    rcx,rbp
  43e3cd:	mov    rbp,rsi
  43e3d0:	call   0x43e0e0
  43e3d5:	sar    ebx,1
  43e3d7:	jne    0x43e3a7
  43e3d9:	mov    rax,rbp
  43e3dc:	add    rsp,0x28
  43e3e0:	pop    rbx
  43e3e1:	pop    rsi
  43e3e2:	pop    rdi
  43e3e3:	pop    rbp
  43e3e4:	ret    
  43e3e5:	mov    ecx,0x1
  43e3ea:	call   0x43deb0
  43e3ef:	mov    rsi,QWORD PTR [rdi]
  43e3f2:	test   rsi,rsi
  43e3f5:	je     0x43e43e
  43e3f7:	cmp    DWORD PTR [rip+0x1c492],0x2        # 0x45a890
  43e3fe:	jne    0x43e3af
  43e400:	lea    rcx,[rip+0x1c4e1]        # 0x45a8e8
  43e407:	call   QWORD PTR [rip+0x1d167]        # 0x45b574
  43e40d:	jmp    0x43e3af
  43e40f:	nop
  43e410:	sub    eax,0x1
  43e413:	lea    rdx,[rip+0x12e26]        # 0x451240
  43e41a:	xor    r8d,r8d
  43e41d:	cdqe   
  43e41f:	mov    edx,DWORD PTR [rdx+rax*4]
  43e422:	call   0x43e150
  43e427:	test   rax,rax
  43e42a:	mov    rbp,rax
  43e42d:	jne    0x43e388
  43e433:	xor    eax,eax
  43e435:	add    rsp,0x28
  43e439:	pop    rbx
  43e43a:	pop    rsi
  43e43b:	pop    rdi
  43e43c:	pop    rbp
  43e43d:	ret    
  43e43e:	mov    rdx,rdi
  43e441:	mov    rcx,rdi
  43e444:	call   0x43e240
  43e449:	test   rax,rax
  43e44c:	mov    rsi,rax
  43e44f:	mov    QWORD PTR [rdi],rax
  43e452:	je     0x43e433
  43e454:	mov    QWORD PTR [rax],0x0
  43e45b:	jmp    0x43e3f7
  43e45d:	mov    ecx,0x1
  43e462:	call   0x43deb0
  43e467:	mov    rdi,QWORD PTR [rip+0x1ba92]        # 0x459f00
  43e46e:	test   rdi,rdi
  43e471:	je     0x43e492
  43e473:	cmp    DWORD PTR [rip+0x1c416],0x2        # 0x45a890
  43e47a:	jne    0x43e3b2
  43e480:	lea    rcx,[rip+0x1c461]        # 0x45a8e8
  43e487:	call   QWORD PTR [rip+0x1d0e7]        # 0x45b574
  43e48d:	jmp    0x43e3b2
  43e492:	mov    ecx,0x1
  43e497:	call   0x43dfd0
  43e49c:	test   rax,rax
  43e49f:	mov    rdi,rax
  43e4a2:	je     0x43e4c2
  43e4a4:	mov    DWORD PTR [rax+0x18],0x271
  43e4ab:	mov    DWORD PTR [rax+0x14],0x1
  43e4b2:	mov    QWORD PTR [rip+0x1ba47],rax        # 0x459f00
  43e4b9:	mov    QWORD PTR [rax],0x0
  43e4c0:	jmp    0x43e473
  43e4c2:	mov    QWORD PTR [rip+0x1ba33],0x0        # 0x459f00
  43e4cd:	xor    eax,eax
  43e4cf:	jmp    0x43e435
  43e4d4:	xchg   ax,ax
  43e4d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e4e0:	push   r13
  43e4e2:	push   r12
  43e4e4:	push   rbp
  43e4e5:	push   rdi
  43e4e6:	push   rsi
  43e4e7:	push   rbx
  43e4e8:	sub    rsp,0x28
  43e4ec:	mov    rdi,rcx
  43e4ef:	mov    ebp,edx
  43e4f1:	mov    esi,edx
  43e4f3:	mov    r12d,DWORD PTR [rdi+0x14]
  43e4f7:	sar    ebp,0x5
  43e4fa:	mov    eax,DWORD PTR [rdi+0xc]
  43e4fd:	mov    ecx,DWORD PTR [rcx+0x8]
  43e500:	add    r12d,ebp
  43e503:	lea    ebx,[r12+0x1]
  43e508:	cmp    ebx,eax
  43e50a:	jle    0x43e519
  43e50c:	nop    DWORD PTR [rax+0x0]
  43e510:	add    eax,eax
  43e512:	add    ecx,0x1
  43e515:	cmp    ebx,eax
  43e517:	jg     0x43e510
  43e519:	call   0x43dfd0
  43e51e:	test   rax,rax
  43e521:	mov    r13,rax
  43e524:	je     0x43e5ef
  43e52a:	test   ebp,ebp
  43e52c:	lea    r8,[rax+0x18]
  43e530:	jle    0x43e5e7
  43e536:	lea    eax,[rbp-0x1]
  43e539:	lea    r9,[r8+rax*4+0x4]
  43e53e:	xchg   ax,ax
  43e540:	add    r8,0x4
  43e544:	mov    DWORD PTR [r8-0x4],0x0
  43e54c:	cmp    r8,r9
  43e54f:	jne    0x43e540
  43e551:	movsxd rax,DWORD PTR [rdi+0x14]
  43e555:	lea    r8,[rdi+0x18]
  43e559:	mov    edx,esi
  43e55b:	and    edx,0x1f
  43e55e:	lea    rbp,[r8+rax*4]
  43e562:	je     0x43e5d0
  43e564:	mov    eax,0x20
  43e569:	xor    r11d,r11d
  43e56c:	sub    eax,edx
  43e56e:	jmp    0x43e573
  43e570:	mov    r9,rsi
  43e573:	mov    r10d,DWORD PTR [r8]
  43e576:	mov    ecx,edx
  43e578:	lea    rsi,[r9+0x4]
  43e57c:	add    r8,0x4
  43e580:	shl    r10d,cl
  43e583:	mov    ecx,eax
  43e585:	or     r10d,r11d
  43e588:	mov    DWORD PTR [rsi-0x4],r10d
  43e58c:	mov    r11d,DWORD PTR [r8-0x4]
  43e590:	shr    r11d,cl
  43e593:	cmp    rbp,r8
  43e596:	ja     0x43e570
  43e598:	add    r12d,0x2
  43e59c:	test   r11d,r11d
  43e59f:	mov    DWORD PTR [r9+0x4],r11d
  43e5a3:	cmovne ebx,r12d
  43e5a7:	sub    ebx,0x1
  43e5aa:	mov    rcx,rdi
  43e5ad:	mov    DWORD PTR [r13+0x14],ebx
  43e5b1:	call   0x43e0e0
  43e5b6:	mov    rax,r13
  43e5b9:	add    rsp,0x28
  43e5bd:	pop    rbx
  43e5be:	pop    rsi
  43e5bf:	pop    rdi
  43e5c0:	pop    rbp
  43e5c1:	pop    r12
  43e5c3:	pop    r13
  43e5c5:	ret    
  43e5c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e5d0:	add    r8,0x4
  43e5d4:	mov    edx,DWORD PTR [r8-0x4]
  43e5d8:	add    r9,0x4
  43e5dc:	cmp    rbp,r8
  43e5df:	mov    DWORD PTR [r9-0x4],edx
  43e5e3:	ja     0x43e5d0
  43e5e5:	jmp    0x43e5a7
  43e5e7:	mov    r9,r8
  43e5ea:	jmp    0x43e551
  43e5ef:	xor    eax,eax
  43e5f1:	jmp    0x43e5b9
  43e5f3:	nop    DWORD PTR [rax]
  43e5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e600:	movsxd r8,DWORD PTR [rdx+0x14]
  43e604:	mov    eax,DWORD PTR [rcx+0x14]
  43e607:	sub    eax,r8d
  43e60a:	test   eax,eax
  43e60c:	jne    0x43e642
  43e60e:	shl    r8,0x2
  43e612:	add    rcx,0x18
  43e616:	lea    rax,[rcx+r8*1]
  43e61a:	lea    rdx,[rdx+r8*1+0x18]
  43e61f:	jmp    0x43e626
  43e621:	cmp    rcx,rax
  43e624:	jae    0x43e640
  43e626:	sub    rdx,0x4
  43e62a:	sub    rax,0x4
  43e62e:	mov    r9d,DWORD PTR [rdx]
  43e631:	cmp    DWORD PTR [rax],r9d
  43e634:	je     0x43e621
  43e636:	sbb    eax,eax
  43e638:	or     eax,0x1
  43e63b:	ret    
  43e63c:	nop    DWORD PTR [rax+0x0]
  43e640:	xor    eax,eax
  43e642:	repz ret 
  43e644:	xchg   ax,ax
  43e646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e650:	push   rdi
  43e651:	push   rsi
  43e652:	push   rbx
  43e653:	sub    rsp,0x20
  43e657:	mov    rsi,rcx
  43e65a:	mov    rdi,rdx
  43e65d:	call   0x43e600
  43e662:	test   eax,eax
  43e664:	je     0x43e750
  43e66a:	mov    ebx,0x0
  43e66f:	js     0x43e772
  43e675:	mov    ecx,DWORD PTR [rsi+0x8]
  43e678:	call   0x43dfd0
  43e67d:	test   rax,rax
  43e680:	je     0x43e782
  43e686:	movsxd rdx,DWORD PTR [rsi+0x14]
  43e68a:	lea    rcx,[rsi+0x18]
  43e68e:	mov    DWORD PTR [rax+0x10],ebx
  43e691:	lea    r10,[rdi+0x18]
  43e695:	xor    r9d,r9d
  43e698:	mov    rbx,rdx
  43e69b:	lea    rsi,[rcx+rdx*4]
  43e69f:	movsxd rdx,DWORD PTR [rdi+0x14]
  43e6a3:	lea    rdi,[r10+rdx*4]
  43e6a7:	lea    rdx,[rax+0x18]
  43e6ab:	nop    DWORD PTR [rax+rax*1+0x0]
  43e6b0:	add    rcx,0x4
  43e6b4:	add    r10,0x4
  43e6b8:	mov    r11d,DWORD PTR [r10-0x4]
  43e6bc:	mov    r8d,DWORD PTR [rcx-0x4]
  43e6c0:	add    rdx,0x4
  43e6c4:	sub    r8,r11
  43e6c7:	sub    r8,r9
  43e6ca:	mov    r9,r8
  43e6cd:	mov    r11d,r8d
  43e6d0:	mov    DWORD PTR [rdx-0x4],r8d
  43e6d4:	shr    r9,0x20
  43e6d8:	and    r9d,0x1
  43e6dc:	cmp    rdi,r10
  43e6df:	ja     0x43e6b0
  43e6e1:	cmp    rsi,rcx
  43e6e4:	mov    rdi,rdx
  43e6e7:	mov    r10,rcx
  43e6ea:	jbe    0x43e726
  43e6ec:	nop    DWORD PTR [rax+0x0]
  43e6f0:	add    rcx,0x4
  43e6f4:	mov    r8d,DWORD PTR [rcx-0x4]
  43e6f8:	add    rdx,0x4
  43e6fc:	sub    r8,r9
  43e6ff:	mov    r9,r8
  43e702:	mov    r11d,r8d
  43e705:	mov    DWORD PTR [rdx-0x4],r8d
  43e709:	shr    r9,0x20
  43e70d:	and    r9d,0x1
  43e711:	cmp    rsi,rcx
  43e714:	ja     0x43e6f0
  43e716:	not    r10
  43e719:	lea    rdx,[r10+rsi*1]
  43e71d:	shr    rdx,0x2
  43e721:	lea    rdx,[rdi+rdx*4+0x4]
  43e726:	sub    rdx,0x4
  43e72a:	test   r11d,r11d
  43e72d:	jne    0x43e73d
  43e72f:	nop
  43e730:	sub    rdx,0x4
  43e734:	mov    ecx,DWORD PTR [rdx]
  43e736:	sub    ebx,0x1
  43e739:	test   ecx,ecx
  43e73b:	je     0x43e730
  43e73d:	mov    DWORD PTR [rax+0x14],ebx
  43e740:	add    rsp,0x20
  43e744:	pop    rbx
  43e745:	pop    rsi
  43e746:	pop    rdi
  43e747:	ret    
  43e748:	nop    DWORD PTR [rax+rax*1+0x0]
  43e750:	xor    ecx,ecx
  43e752:	call   0x43dfd0
  43e757:	test   rax,rax
  43e75a:	je     0x43e782
  43e75c:	mov    DWORD PTR [rax+0x14],0x1
  43e763:	mov    DWORD PTR [rax+0x18],0x0
  43e76a:	add    rsp,0x20
  43e76e:	pop    rbx
  43e76f:	pop    rsi
  43e770:	pop    rdi
  43e771:	ret    
  43e772:	mov    rax,rsi
  43e775:	mov    bl,0x1
  43e777:	mov    rsi,rdi
  43e77a:	mov    rdi,rax
  43e77d:	jmp    0x43e675
  43e782:	xor    eax,eax
  43e784:	jmp    0x43e740
  43e786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e790:	push   rsi
  43e791:	push   rbx
  43e792:	sub    rsp,0x18
  43e796:	movsxd rax,DWORD PTR [rcx+0x14]
  43e79a:	lea    r10,[rcx+0x18]
  43e79e:	mov    ecx,0x20
  43e7a3:	lea    r9,[r10+rax*4]
  43e7a7:	mov    eax,DWORD PTR [r9-0x4]
  43e7ab:	lea    rbx,[r9-0x4]
  43e7af:	bsr    r8d,eax
  43e7b3:	xor    r8d,0x1f
  43e7b7:	sub    ecx,r8d
  43e7ba:	cmp    r8d,0xa
  43e7be:	mov    DWORD PTR [rdx],ecx
  43e7c0:	jg     0x43e810
  43e7c2:	mov    ecx,0xb
  43e7c7:	mov    r11d,eax
  43e7ca:	xor    esi,esi
  43e7cc:	sub    ecx,r8d
  43e7cf:	shr    r11d,cl
  43e7d2:	or     r11d,0x3ff00000
  43e7d9:	shl    r11,0x20
  43e7dd:	cmp    r10,rbx
  43e7e0:	jae    0x43e7e8
  43e7e2:	mov    esi,DWORD PTR [r9-0x8]
  43e7e6:	shr    esi,cl
  43e7e8:	lea    ecx,[r8+0x15]
  43e7ec:	shl    eax,cl
  43e7ee:	mov    edx,eax
  43e7f0:	mov    eax,esi
  43e7f2:	or     eax,edx
  43e7f4:	or     rax,r11
  43e7f7:	mov    QWORD PTR [rsp+0x8],rax
  43e7fc:	movsd  xmm0,QWORD PTR [rsp+0x8]
  43e802:	add    rsp,0x18
  43e806:	pop    rbx
  43e807:	pop    rsi
  43e808:	ret    
  43e809:	nop    DWORD PTR [rax+0x0]
  43e810:	cmp    r10,rbx
  43e813:	jae    0x43e870
  43e815:	mov    r11d,r8d
  43e818:	lea    rsi,[r9-0x8]
  43e81c:	mov    edx,DWORD PTR [r9-0x8]
  43e820:	sub    r11d,0xb
  43e824:	je     0x43e892
  43e826:	mov    ebx,0x2b
  43e82b:	mov    ecx,r11d
  43e82e:	sub    ebx,r8d
  43e831:	shl    eax,cl
  43e833:	mov    r8d,edx
  43e836:	mov    ecx,ebx
  43e838:	shr    r8d,cl
  43e83b:	or     eax,r8d
  43e83e:	xor    r8d,r8d
  43e841:	or     eax,0x3ff00000
  43e846:	shl    rax,0x20
  43e84a:	cmp    r10,rsi
  43e84d:	jae    0x43e856
  43e84f:	mov    r8d,DWORD PTR [r9-0xc]
  43e853:	shr    r8d,cl
  43e856:	mov    ecx,r11d
  43e859:	shl    edx,cl
  43e85b:	or     r8d,edx
  43e85e:	movabs rdx,0xffffffff00000000
  43e868:	and    rax,rdx
  43e86b:	or     rax,r8
  43e86e:	jmp    0x43e7f7
  43e870:	mov    r11d,r8d
  43e873:	sub    r11d,0xb
  43e877:	je     0x43e890
  43e879:	mov    ecx,r11d
  43e87c:	xor    r8d,r8d
  43e87f:	xor    edx,edx
  43e881:	shl    eax,cl
  43e883:	or     eax,0x3ff00000
  43e888:	shl    rax,0x20
  43e88c:	jmp    0x43e856
  43e88e:	xchg   ax,ax
  43e890:	xor    edx,edx
  43e892:	or     eax,0x3ff00000
  43e897:	shl    rax,0x20
  43e89b:	or     rax,rdx
  43e89e:	jmp    0x43e7f7
  43e8a3:	nop    DWORD PTR [rax]
  43e8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e8b0:	push   rdi
  43e8b1:	push   rsi
  43e8b2:	push   rbx
  43e8b3:	sub    rsp,0x20
  43e8b7:	mov    ecx,0x1
  43e8bc:	movq   rbx,xmm0
  43e8c1:	mov    rdi,rdx
  43e8c4:	mov    rsi,r8
  43e8c7:	call   0x43dfd0
  43e8cc:	test   rax,rax
  43e8cf:	je     0x43e9b5
  43e8d5:	mov    r9,rbx
  43e8d8:	shr    r9,0x20
  43e8dc:	mov    r10d,r9d
  43e8df:	and    r9d,0x7fffffff
  43e8e6:	and    r10d,0xfffff
  43e8ed:	shr    r9d,0x14
  43e8f1:	mov    edx,r10d
  43e8f4:	or     edx,0x100000
  43e8fa:	test   r9d,r9d
  43e8fd:	cmovne r10d,edx
  43e901:	test   ebx,ebx
  43e903:	jne    0x43e944
  43e905:	xor    ecx,ecx
  43e907:	mov    DWORD PTR [rax+0x14],0x1
  43e90e:	mov    edx,0x1
  43e913:	tzcnt  ecx,r10d
  43e918:	shr    r10d,cl
  43e91b:	test   r9d,r9d
  43e91e:	lea    r11d,[rcx+0x20]
  43e922:	mov    DWORD PTR [rax+0x18],r10d
  43e926:	je     0x43e983
  43e928:	lea    edx,[r11+r9*1-0x433]
  43e930:	mov    DWORD PTR [rdi],edx
  43e932:	mov    edx,0x35
  43e937:	sub    edx,r11d
  43e93a:	mov    DWORD PTR [rsi],edx
  43e93c:	add    rsp,0x20
  43e940:	pop    rbx
  43e941:	pop    rsi
  43e942:	pop    rdi
  43e943:	ret    
  43e944:	xor    r11d,r11d
  43e947:	tzcnt  r11d,ebx
  43e94c:	mov    ecx,r11d
  43e94f:	shr    ebx,cl
  43e951:	test   r11d,r11d
  43e954:	je     0x43e9b0
  43e956:	mov    ecx,0x20
  43e95b:	mov    edx,r10d
  43e95e:	sub    ecx,r11d
  43e961:	shl    edx,cl
  43e963:	mov    ecx,r11d
  43e966:	or     ebx,edx
  43e968:	shr    r10d,cl
  43e96b:	mov    DWORD PTR [rax+0x18],ebx
  43e96e:	cmp    r10d,0x1
  43e972:	mov    DWORD PTR [rax+0x1c],r10d
  43e976:	sbb    edx,edx
  43e978:	add    edx,0x2
  43e97b:	test   r9d,r9d
  43e97e:	mov    DWORD PTR [rax+0x14],edx
  43e981:	jne    0x43e928
  43e983:	movsxd rcx,edx
  43e986:	shl    edx,0x5
  43e989:	sub    r11d,0x432
  43e990:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  43e995:	mov    DWORD PTR [rdi],r11d
  43e998:	xor    ecx,0x1f
  43e99b:	sub    edx,ecx
  43e99d:	mov    DWORD PTR [rsi],edx
  43e99f:	add    rsp,0x20
  43e9a3:	pop    rbx
  43e9a4:	pop    rsi
  43e9a5:	pop    rdi
  43e9a6:	ret    
  43e9a7:	nop    WORD PTR [rax+rax*1+0x0]
  43e9b0:	mov    DWORD PTR [rax+0x18],ebx
  43e9b3:	jmp    0x43e96e
  43e9b5:	xor    eax,eax
  43e9b7:	jmp    0x43e93c
  43e9b9:	nop    DWORD PTR [rax+0x0]
  43e9c0:	mov    rax,rcx
  43e9c3:	lea    rcx,[rdx+0x1]
  43e9c7:	movzx  edx,BYTE PTR [rdx]
  43e9ca:	test   dl,dl
  43e9cc:	mov    BYTE PTR [rax],dl
  43e9ce:	je     0x43e9e2
  43e9d0:	add    rcx,0x1
  43e9d4:	movzx  edx,BYTE PTR [rcx-0x1]
  43e9d8:	add    rax,0x1
  43e9dc:	test   dl,dl
  43e9de:	mov    BYTE PTR [rax],dl
  43e9e0:	jne    0x43e9d0
  43e9e2:	repz ret 
  43e9e4:	nop
  43e9e5:	nop
  43e9e6:	nop
  43e9e7:	nop
  43e9e8:	nop
  43e9e9:	nop
  43e9ea:	nop
  43e9eb:	nop
  43e9ec:	nop
  43e9ed:	nop
  43e9ee:	nop
  43e9ef:	nop
  43e9f0:	push   rbp
  43e9f1:	push   rdi
  43e9f2:	push   rsi
  43e9f3:	push   rbx
  43e9f4:	sub    rsp,0x48
  43e9f8:	test   rdx,rdx
  43e9fb:	je     0x43eb23
  43ea01:	test   r8,r8
  43ea04:	je     0x43eb30
  43ea0a:	mov    eax,DWORD PTR [r9]
  43ea0d:	mov    DWORD PTR [r9],0x0
  43ea14:	mov    DWORD PTR [rsp+0x30],eax
  43ea18:	movzx  eax,BYTE PTR [rdx]
  43ea1b:	test   al,al
  43ea1d:	je     0x43eac0
  43ea23:	cmp    DWORD PTR [rsp+0x98],0x1
  43ea2b:	mov    rsi,r9
  43ea2e:	mov    rdi,r8
  43ea31:	mov    rbx,rdx
  43ea34:	mov    rbp,rcx
  43ea37:	jbe    0x43eaa0
  43ea39:	cmp    BYTE PTR [rsp+0x30],0x0
  43ea3e:	jne    0x43ead0
  43ea44:	movzx  edx,al
  43ea47:	mov    ecx,DWORD PTR [rsp+0x90]
  43ea4e:	call   QWORD PTR [rip+0x1cb18]        # 0x45b56c
  43ea54:	test   eax,eax
  43ea56:	je     0x43eaa0
  43ea58:	cmp    rdi,0x1
  43ea5c:	jbe    0x43eb4c
  43ea62:	mov    DWORD PTR [rsp+0x28],0x1
  43ea6a:	mov    QWORD PTR [rsp+0x20],rbp
  43ea6f:	mov    r9d,0x2
  43ea75:	mov    r8,rbx
  43ea78:	mov    edx,0x8
  43ea7d:	mov    ecx,DWORD PTR [rsp+0x90]
  43ea84:	call   QWORD PTR [rip+0x1caf2]        # 0x45b57c
  43ea8a:	test   eax,eax
  43ea8c:	je     0x43eb37
  43ea92:	mov    eax,0x2
  43ea97:	add    rsp,0x48
  43ea9b:	pop    rbx
  43ea9c:	pop    rsi
  43ea9d:	pop    rdi
  43ea9e:	pop    rbp
  43ea9f:	ret    
  43eaa0:	mov    eax,DWORD PTR [rsp+0x90]
  43eaa7:	test   eax,eax
  43eaa9:	jne    0x43eaf0
  43eaab:	movzx  eax,BYTE PTR [rbx]
  43eaae:	mov    WORD PTR [rbp+0x0],ax
  43eab2:	mov    eax,0x1
  43eab7:	add    rsp,0x48
  43eabb:	pop    rbx
  43eabc:	pop    rsi
  43eabd:	pop    rdi
  43eabe:	pop    rbp
  43eabf:	ret    
  43eac0:	xor    edx,edx
  43eac2:	xor    eax,eax
  43eac4:	mov    WORD PTR [rcx],dx
  43eac7:	add    rsp,0x48
  43eacb:	pop    rbx
  43eacc:	pop    rsi
  43eacd:	pop    rdi
  43eace:	pop    rbp
  43eacf:	ret    
  43ead0:	mov    BYTE PTR [rsp+0x31],al
  43ead4:	mov    DWORD PTR [rsp+0x28],0x1
  43eadc:	mov    r9d,0x2
  43eae2:	mov    QWORD PTR [rsp+0x20],rcx
  43eae7:	lea    r8,[rsp+0x30]
  43eaec:	jmp    0x43ea78
  43eaee:	xchg   ax,ax
  43eaf0:	mov    DWORD PTR [rsp+0x28],0x1
  43eaf8:	mov    QWORD PTR [rsp+0x20],rbp
  43eafd:	mov    r9d,0x1
  43eb03:	mov    r8,rbx
  43eb06:	mov    edx,0x8
  43eb0b:	mov    ecx,DWORD PTR [rsp+0x90]
  43eb12:	call   QWORD PTR [rip+0x1ca64]        # 0x45b57c
  43eb18:	test   eax,eax
  43eb1a:	je     0x43eb37
  43eb1c:	mov    eax,0x1
  43eb21:	jmp    0x43eac7
  43eb23:	xor    eax,eax
  43eb25:	add    rsp,0x48
  43eb29:	pop    rbx
  43eb2a:	pop    rsi
  43eb2b:	pop    rdi
  43eb2c:	pop    rbp
  43eb2d:	ret    
  43eb2e:	xchg   ax,ax
  43eb30:	mov    eax,0xfffffffe
  43eb35:	jmp    0x43eac7
  43eb37:	call   0x43f1e8
  43eb3c:	mov    DWORD PTR [rax],0x2a
  43eb42:	mov    eax,0xffffffff
  43eb47:	jmp    0x43eac7
  43eb4c:	movzx  eax,BYTE PTR [rbx]
  43eb4f:	mov    BYTE PTR [rsi],al
  43eb51:	mov    eax,0xfffffffe
  43eb56:	jmp    0x43eac7
  43eb5b:	nop    DWORD PTR [rax+rax*1+0x0]
  43eb60:	push   rbp
  43eb61:	push   rdi
  43eb62:	push   rsi
  43eb63:	push   rbx
  43eb64:	sub    rsp,0x58
  43eb68:	xor    eax,eax
  43eb6a:	mov    WORD PTR [rsp+0x4e],ax
  43eb6f:	lea    rax,[rsp+0x4e]
  43eb74:	test   rcx,rcx
  43eb77:	mov    rbx,rcx
  43eb7a:	mov    rsi,r9
  43eb7d:	mov    rdi,rdx
  43eb80:	cmove  rbx,rax
  43eb84:	mov    rax,QWORD PTR [rip+0x128f5]        # 0x451480
  43eb8b:	mov    QWORD PTR [rsp+0x38],r8
  43eb90:	mov    rax,QWORD PTR [rax]
  43eb93:	mov    ebp,DWORD PTR [rax]
  43eb95:	call   0x43f230
  43eb9a:	mov    r8,QWORD PTR [rsp+0x38]
  43eb9f:	lea    r9,[rip+0x1bda2]        # 0x45a948
  43eba6:	test   rsi,rsi
  43eba9:	mov    DWORD PTR [rsp+0x28],ebp
  43ebad:	mov    DWORD PTR [rsp+0x20],eax
  43ebb1:	mov    rdx,rdi
  43ebb4:	cmovne r9,rsi
  43ebb8:	mov    rcx,rbx
  43ebbb:	call   0x43e9f0
  43ebc0:	cdqe   
  43ebc2:	add    rsp,0x58
  43ebc6:	pop    rbx
  43ebc7:	pop    rsi
  43ebc8:	pop    rdi
  43ebc9:	pop    rbp
  43ebca:	ret    
  43ebcb:	nop    DWORD PTR [rax+rax*1+0x0]
  43ebd0:	push   r15
  43ebd2:	push   r14
  43ebd4:	push   r13
  43ebd6:	push   r12
  43ebd8:	push   rbp
  43ebd9:	push   rdi
  43ebda:	push   rsi
  43ebdb:	push   rbx
  43ebdc:	sub    rsp,0x48
  43ebe0:	lea    rax,[rip+0x1bd5d]        # 0x45a944
  43ebe7:	test   r9,r9
  43ebea:	mov    rdi,r9
  43ebed:	mov    r13,rdx
  43ebf0:	cmove  rdi,rax
  43ebf4:	mov    r14,rcx
  43ebf7:	mov    rsi,r8
  43ebfa:	call   0x43f230
  43ebff:	mov    r12d,eax
  43ec02:	mov    rax,QWORD PTR [rip+0x12877]        # 0x451480
  43ec09:	test   r13,r13
  43ec0c:	mov    rax,QWORD PTR [rax]
  43ec0f:	mov    ebp,DWORD PTR [rax]
  43ec11:	je     0x43ec95
  43ec17:	mov    rdx,QWORD PTR [r13+0x0]
  43ec1b:	test   rdx,rdx
  43ec1e:	je     0x43ec95
  43ec20:	test   r14,r14
  43ec23:	je     0x43eca0
  43ec25:	xor    ebx,ebx
  43ec27:	test   rsi,rsi
  43ec2a:	jne    0x43ec4a
  43ec2c:	jmp    0x43ec95
  43ec2e:	xchg   ax,ax
  43ec30:	movsxd r10,eax
  43ec33:	add    r14,0x2
  43ec37:	mov    rdx,r10
  43ec3a:	add    rdx,QWORD PTR [r13+0x0]
  43ec3e:	add    rbx,r10
  43ec41:	cmp    rsi,rbx
  43ec44:	mov    QWORD PTR [r13+0x0],rdx
  43ec48:	jbe    0x43ec90
  43ec4a:	mov    r8,rsi
  43ec4d:	mov    DWORD PTR [rsp+0x28],ebp
  43ec51:	mov    DWORD PTR [rsp+0x20],r12d
  43ec56:	sub    r8,rbx
  43ec59:	mov    r9,rdi
  43ec5c:	mov    rcx,r14
  43ec5f:	call   0x43e9f0
  43ec64:	cmp    eax,0x0
  43ec67:	jg     0x43ec30
  43ec69:	jne    0x43ec90
  43ec6b:	cmp    rbx,rsi
  43ec6e:	jae    0x43ec90
  43ec70:	mov    QWORD PTR [r13+0x0],0x0
  43ec78:	mov    rax,rbx
  43ec7b:	add    rsp,0x48
  43ec7f:	pop    rbx
  43ec80:	pop    rsi
  43ec81:	pop    rdi
  43ec82:	pop    rbp
  43ec83:	pop    r12
  43ec85:	pop    r13
  43ec87:	pop    r14
  43ec89:	pop    r15
  43ec8b:	ret    
  43ec8c:	xor    ebx,ebx
  43ec8e:	xchg   ax,ax
  43ec90:	mov    rax,rbx
  43ec93:	jmp    0x43ec7b
  43ec95:	xor    eax,eax
  43ec97:	jmp    0x43ec7b
  43ec99:	nop    DWORD PTR [rax+0x0]
  43eca0:	xor    eax,eax
  43eca2:	test   rsi,rsi
  43eca5:	mov    WORD PTR [rsp+0x3e],ax
  43ecaa:	je     0x43ec8c
  43ecac:	mov    r15d,ebp
  43ecaf:	xor    ebx,ebx
  43ecb1:	lea    r14,[rsp+0x3e]
  43ecb6:	jmp    0x43ecd5
  43ecb8:	nop    DWORD PTR [rax+rax*1+0x0]
  43ecc0:	cdqe   
  43ecc2:	mov    rdx,rax
  43ecc5:	add    rdx,QWORD PTR [r13+0x0]
  43ecc9:	add    rbx,rax
  43eccc:	cmp    rsi,rbx
  43eccf:	mov    QWORD PTR [r13+0x0],rdx
  43ecd3:	jbe    0x43ec90
  43ecd5:	mov    DWORD PTR [rsp+0x28],ebp
  43ecd9:	mov    DWORD PTR [rsp+0x20],r12d
  43ecde:	mov    r9,rdi
  43ece1:	mov    r8,r15
  43ece4:	mov    rcx,r14
  43ece7:	call   0x43e9f0
  43ecec:	test   eax,eax
  43ecee:	jg     0x43ecc0
  43ecf0:	jmp    0x43ec90
  43ecf2:	nop    DWORD PTR [rax+0x0]
  43ecf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ed00:	push   rbp
  43ed01:	push   rdi
  43ed02:	push   rsi
  43ed03:	push   rbx
  43ed04:	sub    rsp,0x48
  43ed08:	xor    eax,eax
  43ed0a:	mov    WORD PTR [rsp+0x3e],ax
  43ed0f:	mov    rax,QWORD PTR [rip+0x1276a]        # 0x451480
  43ed16:	mov    rbx,r8
  43ed19:	mov    rsi,rcx
  43ed1c:	mov    rdi,rdx
  43ed1f:	mov    rax,QWORD PTR [rax]
  43ed22:	mov    ebp,DWORD PTR [rax]
  43ed24:	call   0x43f230
  43ed29:	lea    r9,[rip+0x1bc10]        # 0x45a940
  43ed30:	test   rbx,rbx
  43ed33:	lea    rcx,[rsp+0x3e]
  43ed38:	mov    DWORD PTR [rsp+0x28],ebp
  43ed3c:	mov    DWORD PTR [rsp+0x20],eax
  43ed40:	mov    r8,rdi
  43ed43:	cmovne r9,rbx
  43ed47:	mov    rdx,rsi
  43ed4a:	call   0x43e9f0
  43ed4f:	cdqe   
  43ed51:	add    rsp,0x48
  43ed55:	pop    rbx
  43ed56:	pop    rsi
  43ed57:	pop    rdi
  43ed58:	pop    rbp
  43ed59:	ret    
  43ed5a:	nop
  43ed5b:	nop
  43ed5c:	nop
  43ed5d:	nop
  43ed5e:	nop
  43ed5f:	nop
  43ed60:	sub    rsp,0x58
  43ed64:	test   r8d,r8d
  43ed67:	mov    eax,r8d
  43ed6a:	mov    WORD PTR [rsp+0x68],dx
  43ed6f:	jne    0x43ed84
  43ed71:	cmp    dx,0xff
  43ed76:	ja     0x43edca
  43ed78:	mov    BYTE PTR [rcx],dl
  43ed7a:	mov    eax,0x1
  43ed7f:	add    rsp,0x58
  43ed83:	ret    
  43ed84:	lea    rdx,[rsp+0x4c]
  43ed89:	mov    DWORD PTR [rsp+0x28],r9d
  43ed8e:	mov    QWORD PTR [rsp+0x20],rcx
  43ed93:	mov    DWORD PTR [rsp+0x4c],0x0
  43ed9b:	mov    QWORD PTR [rsp+0x30],0x0
  43eda4:	mov    r9d,0x1
  43edaa:	mov    QWORD PTR [rsp+0x38],rdx
  43edaf:	lea    r8,[rsp+0x68]
  43edb4:	xor    edx,edx
  43edb6:	mov    ecx,eax
  43edb8:	call   QWORD PTR [rip+0x1c826]        # 0x45b5e4
  43edbe:	test   eax,eax
  43edc0:	je     0x43edca
  43edc2:	mov    edx,DWORD PTR [rsp+0x4c]
  43edc6:	test   edx,edx
  43edc8:	je     0x43ed7f
  43edca:	call   0x43f1e8
  43edcf:	mov    DWORD PTR [rax],0x2a
  43edd5:	mov    eax,0xffffffff
  43edda:	add    rsp,0x58
  43edde:	ret    
  43eddf:	nop
  43ede0:	push   rdi
  43ede1:	push   rsi
  43ede2:	push   rbx
  43ede3:	sub    rsp,0x30
  43ede7:	lea    rax,[rsp+0x20]
  43edec:	test   rcx,rcx
  43edef:	mov    rbx,rcx
  43edf2:	mov    esi,edx
  43edf4:	cmove  rbx,rax
  43edf8:	mov    rax,QWORD PTR [rip+0x12681]        # 0x451480
  43edff:	mov    rax,QWORD PTR [rax]
  43ee02:	mov    edi,DWORD PTR [rax]
  43ee04:	call   0x43f230
  43ee09:	movzx  edx,si
  43ee0c:	mov    r8d,eax
  43ee0f:	mov    rcx,rbx
  43ee12:	mov    r9d,edi
  43ee15:	call   0x43ed60
  43ee1a:	cdqe   
  43ee1c:	add    rsp,0x30
  43ee20:	pop    rbx
  43ee21:	pop    rsi
  43ee22:	pop    rdi
  43ee23:	ret    
  43ee24:	xchg   ax,ax
  43ee26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ee30:	push   r14
  43ee32:	push   r13
  43ee34:	push   r12
  43ee36:	push   rbp
  43ee37:	push   rdi
  43ee38:	push   rsi
  43ee39:	push   rbx
  43ee3a:	sub    rsp,0x30
  43ee3e:	mov    r13,rdx
  43ee41:	mov    rbx,rcx
  43ee44:	mov    rdi,r8
  43ee47:	call   0x43f230
  43ee4c:	mov    ebp,eax
  43ee4e:	mov    rax,QWORD PTR [rip+0x1262b]        # 0x451480
  43ee55:	mov    r14,QWORD PTR [r13+0x0]
  43ee59:	mov    rax,QWORD PTR [rax]
  43ee5c:	test   r14,r14
  43ee5f:	mov    r12d,DWORD PTR [rax]
  43ee62:	je     0x43ef50
  43ee68:	xor    esi,esi
  43ee6a:	test   rbx,rbx
  43ee6d:	je     0x43ef00
  43ee73:	test   rdi,rdi
  43ee76:	jne    0x43ee98
  43ee78:	jmp    0x43eec4
  43ee7a:	nop    WORD PTR [rax+rax*1+0x0]
  43ee80:	movsxd r10,eax
  43ee83:	add    rbx,r10
  43ee86:	add    rsi,r10
  43ee89:	cmp    BYTE PTR [rbx-0x1],0x0
  43ee8d:	je     0x43eee0
  43ee8f:	add    r14,0x2
  43ee93:	cmp    rdi,rsi
  43ee96:	jbe    0x43eec4
  43ee98:	movzx  edx,WORD PTR [r14]
  43ee9c:	mov    r9d,r12d
  43ee9f:	mov    r8d,ebp
  43eea2:	mov    rcx,rbx
  43eea5:	call   0x43ed60
  43eeaa:	test   eax,eax
  43eeac:	jg     0x43ee80
  43eeae:	mov    rax,0xffffffffffffffff
  43eeb5:	add    rsp,0x30
  43eeb9:	pop    rbx
  43eeba:	pop    rsi
  43eebb:	pop    rdi
  43eebc:	pop    rbp
  43eebd:	pop    r12
  43eebf:	pop    r13
  43eec1:	pop    r14
  43eec3:	ret    
  43eec4:	mov    rax,rsi
  43eec7:	mov    QWORD PTR [r13+0x0],r14
  43eecb:	add    rsp,0x30
  43eecf:	pop    rbx
  43eed0:	pop    rsi
  43eed1:	pop    rdi
  43eed2:	pop    rbp
  43eed3:	pop    r12
  43eed5:	pop    r13
  43eed7:	pop    r14
  43eed9:	ret    
  43eeda:	nop    WORD PTR [rax+rax*1+0x0]
  43eee0:	lea    rax,[rsi-0x1]
  43eee4:	mov    QWORD PTR [r13+0x0],0x0
  43eeec:	add    rsp,0x30
  43eef0:	pop    rbx
  43eef1:	pop    rsi
  43eef2:	pop    rdi
  43eef3:	pop    rbp
  43eef4:	pop    r12
  43eef6:	pop    r13
  43eef8:	pop    r14
  43eefa:	ret    
  43eefb:	nop    DWORD PTR [rax+rax*1+0x0]
  43ef00:	test   rdi,rdi
  43ef03:	lea    rbx,[rsp+0x20]
  43ef08:	jne    0x43ef2b
  43ef0a:	jmp    0x43ef61
  43ef0c:	nop    DWORD PTR [rax+0x0]
  43ef10:	movsxd rdx,eax
  43ef13:	sub    eax,0x1
  43ef16:	cdqe   
  43ef18:	add    rsi,rdx
  43ef1b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  43ef20:	je     0x43ef69
  43ef22:	add    r14,0x2
  43ef26:	cmp    rdi,rsi
  43ef29:	jbe    0x43ef61
  43ef2b:	movzx  edx,WORD PTR [r14]
  43ef2f:	mov    r9d,r12d
  43ef32:	mov    r8d,ebp
  43ef35:	mov    rcx,rbx
  43ef38:	call   0x43ed60
  43ef3d:	test   eax,eax
  43ef3f:	jg     0x43ef10
  43ef41:	jmp    0x43eeae
  43ef46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ef50:	xor    eax,eax
  43ef52:	add    rsp,0x30
  43ef56:	pop    rbx
  43ef57:	pop    rsi
  43ef58:	pop    rdi
  43ef59:	pop    rbp
  43ef5a:	pop    r12
  43ef5c:	pop    r13
  43ef5e:	pop    r14
  43ef60:	ret    
  43ef61:	mov    rax,rsi
  43ef64:	jmp    0x43eeb5
  43ef69:	lea    rax,[rsi-0x1]
  43ef6d:	jmp    0x43eeb5
  43ef72:	nop
  43ef73:	nop
  43ef74:	nop
  43ef75:	nop
  43ef76:	nop
  43ef77:	nop
  43ef78:	nop
  43ef79:	nop
  43ef7a:	nop
  43ef7b:	nop
  43ef7c:	nop
  43ef7d:	nop
  43ef7e:	nop
  43ef7f:	nop
  43ef80:	jmp    QWORD PTR [rip+0x1c946]        # 0x45b8cc
  43ef86:	nop
  43ef87:	nop
  43ef88:	jmp    QWORD PTR [rip+0x1c936]        # 0x45b8c4
  43ef8e:	nop
  43ef8f:	nop
  43ef90:	jmp    QWORD PTR [rip+0x1c926]        # 0x45b8bc
  43ef96:	nop
  43ef97:	nop
  43ef98:	jmp    QWORD PTR [rip+0x1c916]        # 0x45b8b4
  43ef9e:	nop
  43ef9f:	nop
  43efa0:	jmp    QWORD PTR [rip+0x1c906]        # 0x45b8ac
  43efa6:	nop
  43efa7:	nop
  43efa8:	jmp    QWORD PTR [rip+0x1c8f6]        # 0x45b8a4
  43efae:	nop
  43efaf:	nop
  43efb0:	jmp    QWORD PTR [rip+0x1c8e6]        # 0x45b89c
  43efb6:	nop
  43efb7:	nop
  43efb8:	jmp    QWORD PTR [rip+0x1c8d6]        # 0x45b894
  43efbe:	nop
  43efbf:	nop
  43efc0:	jmp    QWORD PTR [rip+0x1c8c6]        # 0x45b88c
  43efc6:	nop
  43efc7:	nop
  43efc8:	jmp    QWORD PTR [rip+0x1c8b6]        # 0x45b884
  43efce:	nop
  43efcf:	nop
  43efd0:	jmp    QWORD PTR [rip+0x1c8a6]        # 0x45b87c
  43efd6:	nop
  43efd7:	nop
  43efd8:	jmp    QWORD PTR [rip+0x1c896]        # 0x45b874
  43efde:	nop
  43efdf:	nop
  43efe0:	jmp    QWORD PTR [rip+0x1c886]        # 0x45b86c
  43efe6:	nop
  43efe7:	nop
  43efe8:	jmp    QWORD PTR [rip+0x1c876]        # 0x45b864
  43efee:	nop
  43efef:	nop
  43eff0:	jmp    QWORD PTR [rip+0x1c866]        # 0x45b85c
  43eff6:	nop
  43eff7:	nop
  43eff8:	jmp    QWORD PTR [rip+0x1c856]        # 0x45b854
  43effe:	nop
  43efff:	nop
  43f000:	jmp    QWORD PTR [rip+0x1c846]        # 0x45b84c
  43f006:	nop
  43f007:	nop
  43f008:	jmp    QWORD PTR [rip+0x1c836]        # 0x45b844
  43f00e:	nop
  43f00f:	nop
  43f010:	jmp    QWORD PTR [rip+0x1c826]        # 0x45b83c
  43f016:	nop
  43f017:	nop
  43f018:	jmp    QWORD PTR [rip+0x1c816]        # 0x45b834
  43f01e:	nop
  43f01f:	nop
  43f020:	jmp    QWORD PTR [rip+0x1c806]        # 0x45b82c
  43f026:	nop
  43f027:	nop
  43f028:	jmp    QWORD PTR [rip+0x1c7f6]        # 0x45b824
  43f02e:	nop
  43f02f:	nop
  43f030:	jmp    QWORD PTR [rip+0x1c7e6]        # 0x45b81c
  43f036:	nop
  43f037:	nop
  43f038:	jmp    QWORD PTR [rip+0x1c7d6]        # 0x45b814
  43f03e:	nop
  43f03f:	nop
  43f040:	jmp    QWORD PTR [rip+0x1c7c6]        # 0x45b80c
  43f046:	nop
  43f047:	nop
  43f048:	jmp    QWORD PTR [rip+0x1c7b6]        # 0x45b804
  43f04e:	nop
  43f04f:	nop
  43f050:	jmp    QWORD PTR [rip+0x1c7a6]        # 0x45b7fc
  43f056:	nop
  43f057:	nop
  43f058:	jmp    QWORD PTR [rip+0x1c796]        # 0x45b7f4
  43f05e:	nop
  43f05f:	nop
  43f060:	jmp    QWORD PTR [rip+0x1c786]        # 0x45b7ec
  43f066:	nop
  43f067:	nop
  43f068:	jmp    QWORD PTR [rip+0x1c776]        # 0x45b7e4
  43f06e:	nop
  43f06f:	nop
  43f070:	jmp    QWORD PTR [rip+0x1c766]        # 0x45b7dc
  43f076:	nop
  43f077:	nop
  43f078:	jmp    QWORD PTR [rip+0x1c756]        # 0x45b7d4
  43f07e:	nop
  43f07f:	nop
  43f080:	jmp    QWORD PTR [rip+0x1c746]        # 0x45b7cc
  43f086:	nop
  43f087:	nop
  43f088:	jmp    QWORD PTR [rip+0x1c736]        # 0x45b7c4
  43f08e:	nop
  43f08f:	nop
  43f090:	jmp    QWORD PTR [rip+0x1c726]        # 0x45b7bc
  43f096:	nop
  43f097:	nop
  43f098:	jmp    QWORD PTR [rip+0x1c716]        # 0x45b7b4
  43f09e:	nop
  43f09f:	nop
  43f0a0:	jmp    QWORD PTR [rip+0x1c706]        # 0x45b7ac
  43f0a6:	nop
  43f0a7:	nop
  43f0a8:	jmp    QWORD PTR [rip+0x1c6f6]        # 0x45b7a4
  43f0ae:	nop
  43f0af:	nop
  43f0b0:	jmp    QWORD PTR [rip+0x1c6e6]        # 0x45b79c
  43f0b6:	nop
  43f0b7:	nop
  43f0b8:	jmp    QWORD PTR [rip+0x1c6d6]        # 0x45b794
  43f0be:	nop
  43f0bf:	nop
  43f0c0:	jmp    QWORD PTR [rip+0x1c6c6]        # 0x45b78c
  43f0c6:	nop
  43f0c7:	nop
  43f0c8:	jmp    QWORD PTR [rip+0x1c6b6]        # 0x45b784
  43f0ce:	nop
  43f0cf:	nop
  43f0d0:	jmp    QWORD PTR [rip+0x1c6a6]        # 0x45b77c
  43f0d6:	nop
  43f0d7:	nop
  43f0d8:	jmp    QWORD PTR [rip+0x1c696]        # 0x45b774
  43f0de:	nop
  43f0df:	nop
  43f0e0:	jmp    QWORD PTR [rip+0x1c686]        # 0x45b76c
  43f0e6:	nop
  43f0e7:	nop
  43f0e8:	jmp    QWORD PTR [rip+0x1c676]        # 0x45b764
  43f0ee:	nop
  43f0ef:	nop
  43f0f0:	jmp    QWORD PTR [rip+0x1c666]        # 0x45b75c
  43f0f6:	nop
  43f0f7:	nop
  43f0f8:	jmp    QWORD PTR [rip+0x1c656]        # 0x45b754
  43f0fe:	nop
  43f0ff:	nop
  43f100:	jmp    QWORD PTR [rip+0x1c646]        # 0x45b74c
  43f106:	nop
  43f107:	nop
  43f108:	jmp    QWORD PTR [rip+0x1c636]        # 0x45b744
  43f10e:	nop
  43f10f:	nop
  43f110:	jmp    QWORD PTR [rip+0x1c626]        # 0x45b73c
  43f116:	nop
  43f117:	nop
  43f118:	jmp    QWORD PTR [rip+0x1c616]        # 0x45b734
  43f11e:	nop
  43f11f:	nop
  43f120:	jmp    QWORD PTR [rip+0x1c606]        # 0x45b72c
  43f126:	nop
  43f127:	nop
  43f128:	jmp    QWORD PTR [rip+0x1c5f6]        # 0x45b724
  43f12e:	nop
  43f12f:	nop
  43f130:	jmp    QWORD PTR [rip+0x1c5e6]        # 0x45b71c
  43f136:	nop
  43f137:	nop
  43f138:	jmp    QWORD PTR [rip+0x1c5d6]        # 0x45b714
  43f13e:	nop
  43f13f:	nop
  43f140:	jmp    QWORD PTR [rip+0x1c5c6]        # 0x45b70c
  43f146:	nop
  43f147:	nop
  43f148:	jmp    QWORD PTR [rip+0x1c5b6]        # 0x45b704
  43f14e:	nop
  43f14f:	nop
  43f150:	jmp    QWORD PTR [rip+0x1c5a6]        # 0x45b6fc
  43f156:	nop
  43f157:	nop
  43f158:	jmp    QWORD PTR [rip+0x1c596]        # 0x45b6f4
  43f15e:	nop
  43f15f:	nop
  43f160:	jmp    QWORD PTR [rip+0x1c586]        # 0x45b6ec
  43f166:	nop
  43f167:	nop
  43f168:	jmp    QWORD PTR [rip+0x1c576]        # 0x45b6e4
  43f16e:	nop
  43f16f:	nop
  43f170:	jmp    QWORD PTR [rip+0x1c566]        # 0x45b6dc
  43f176:	nop
  43f177:	nop
  43f178:	jmp    QWORD PTR [rip+0x1c556]        # 0x45b6d4
  43f17e:	nop
  43f17f:	nop
  43f180:	jmp    QWORD PTR [rip+0x1c546]        # 0x45b6cc
  43f186:	nop
  43f187:	nop
  43f188:	jmp    QWORD PTR [rip+0x1c536]        # 0x45b6c4
  43f18e:	nop
  43f18f:	nop
  43f190:	jmp    QWORD PTR [rip+0x1c526]        # 0x45b6bc
  43f196:	nop
  43f197:	nop
  43f198:	jmp    QWORD PTR [rip+0x1c516]        # 0x45b6b4
  43f19e:	nop
  43f19f:	nop
  43f1a0:	jmp    QWORD PTR [rip+0x1c506]        # 0x45b6ac
  43f1a6:	nop
  43f1a7:	nop
  43f1a8:	jmp    QWORD PTR [rip+0x1c4f6]        # 0x45b6a4
  43f1ae:	nop
  43f1af:	nop
  43f1b0:	jmp    QWORD PTR [rip+0x1c4e6]        # 0x45b69c
  43f1b6:	nop
  43f1b7:	nop
  43f1b8:	jmp    QWORD PTR [rip+0x1c4d6]        # 0x45b694
  43f1be:	nop
  43f1bf:	nop
  43f1c0:	jmp    QWORD PTR [rip+0x1c4c6]        # 0x45b68c
  43f1c6:	nop
  43f1c7:	nop
  43f1c8:	jmp    QWORD PTR [rip+0x1c4b6]        # 0x45b684
  43f1ce:	nop
  43f1cf:	nop
  43f1d0:	jmp    QWORD PTR [rip+0x1c4a6]        # 0x45b67c
  43f1d6:	nop
  43f1d7:	nop
  43f1d8:	jmp    QWORD PTR [rip+0x1c48e]        # 0x45b66c
  43f1de:	nop
  43f1df:	nop
  43f1e0:	jmp    QWORD PTR [rip+0x1c47e]        # 0x45b664
  43f1e6:	nop
  43f1e7:	nop
  43f1e8:	jmp    QWORD PTR [rip+0x1c46e]        # 0x45b65c
  43f1ee:	nop
  43f1ef:	nop
  43f1f0:	jmp    QWORD PTR [rip+0x1c45e]        # 0x45b654
  43f1f6:	nop
  43f1f7:	nop
  43f1f8:	jmp    QWORD PTR [rip+0x1c44e]        # 0x45b64c
  43f1fe:	nop
  43f1ff:	nop
  43f200:	jmp    QWORD PTR [rip+0x1c436]        # 0x45b63c
  43f206:	nop
  43f207:	nop
  43f208:	jmp    QWORD PTR [rip+0x1c426]        # 0x45b634
  43f20e:	nop
  43f20f:	nop
  43f210:	jmp    QWORD PTR [rip+0x1c40e]        # 0x45b624
  43f216:	nop
  43f217:	nop
  43f218:	jmp    QWORD PTR [rip+0x1c3fe]        # 0x45b61c
  43f21e:	nop
  43f21f:	nop
  43f220:	jmp    QWORD PTR [rip+0x1c3e6]        # 0x45b60c
  43f226:	nop
  43f227:	nop
  43f228:	jmp    QWORD PTR [rip+0x1c3d6]        # 0x45b604
  43f22e:	nop
  43f22f:	nop
  43f230:	jmp    QWORD PTR [rip+0x1c3c6]        # 0x45b5fc
  43f236:	nop
  43f237:	nop
  43f238:	jmp    QWORD PTR [rip+0x1c3b6]        # 0x45b5f4
  43f23e:	nop
  43f23f:	nop
  43f240:	mov    rax,QWORD PTR [rip+0x1b709]        # 0x45a950
  43f247:	ret    
  43f248:	nop    DWORD PTR [rax+rax*1+0x0]
  43f250:	mov    rax,rcx
  43f253:	xchg   QWORD PTR [rip+0x1b6f6],rax        # 0x45a950
  43f25a:	ret    
  43f25b:	nop
  43f25c:	nop
  43f25d:	nop
  43f25e:	nop
  43f25f:	nop
  43f260:	mov    eax,DWORD PTR [rip+0x1b6fa]        # 0x45a960
  43f266:	ret    
  43f267:	nop    WORD PTR [rax+rax*1+0x0]
  43f270:	mov    eax,ecx
  43f272:	xchg   DWORD PTR [rip+0x1b6e8],eax        # 0x45a960
  43f278:	ret    
  43f279:	nop    DWORD PTR [rax+0x0]
  43f280:	push   rbx
  43f281:	sub    rsp,0x20
  43f285:	mov    ebx,ecx
  43f287:	lea    rcx,[rip+0x12132]        # 0x4513c0
  43f28e:	call   QWORD PTR [rip+0x1c2a8]        # 0x45b53c
  43f294:	lea    rdx,[rip+0x1213b]        # 0x4513d6
  43f29b:	mov    rcx,rax
  43f29e:	call   QWORD PTR [rip+0x1c2a0]        # 0x45b544
  43f2a4:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x43f270
  43f2ab:	test   rax,rax
  43f2ae:	mov    ecx,ebx
  43f2b0:	cmove  rax,rdx
  43f2b4:	mov    QWORD PTR [rip+0x2f4d],rax        # 0x442208
  43f2bb:	add    rsp,0x20
  43f2bf:	pop    rbx
  43f2c0:	rex.W jmp rax
  43f2c3:	nop    DWORD PTR [rax]
  43f2c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f2d0:	sub    rsp,0x28
  43f2d4:	lea    rcx,[rip+0x120e5]        # 0x4513c0
  43f2db:	call   QWORD PTR [rip+0x1c25b]        # 0x45b53c
  43f2e1:	lea    rdx,[rip+0x12101]        # 0x4513e9
  43f2e8:	mov    rcx,rax
  43f2eb:	call   QWORD PTR [rip+0x1c253]        # 0x45b544
  43f2f1:	lea    rdx,[rip+0xffffffffffffff68]        # 0x43f260
  43f2f8:	test   rax,rax
  43f2fb:	cmove  rax,rdx
  43f2ff:	mov    QWORD PTR [rip+0x2efa],rax        # 0x442200
  43f306:	add    rsp,0x28
  43f30a:	rex.W jmp rax
  43f30d:	nop    DWORD PTR [rax]
  43f310:	mov    rax,QWORD PTR [rip+0x2ef1]        # 0x442208
  43f317:	rex.W jmp rax
  43f31a:	nop    WORD PTR [rax+rax*1+0x0]
  43f320:	mov    rax,QWORD PTR [rip+0x2ed9]        # 0x442200
  43f327:	rex.W jmp rax
  43f32a:	nop
  43f32b:	nop
  43f32c:	nop
  43f32d:	nop
  43f32e:	nop
  43f32f:	nop
  43f330:	jmp    QWORD PTR [rip+0x1c5a6]        # 0x45b8dc
  43f336:	nop
  43f337:	nop
  43f338:	nop    DWORD PTR [rax+rax*1+0x0]
  43f340:	jmp    QWORD PTR [rip+0x1c29e]        # 0x45b5e4
  43f346:	nop
  43f347:	nop
  43f348:	jmp    QWORD PTR [rip+0x1c28e]        # 0x45b5dc
  43f34e:	nop
  43f34f:	nop
  43f350:	jmp    QWORD PTR [rip+0x1c27e]        # 0x45b5d4
  43f356:	nop
  43f357:	nop
  43f358:	jmp    QWORD PTR [rip+0x1c26e]        # 0x45b5cc
  43f35e:	nop
  43f35f:	nop
  43f360:	jmp    QWORD PTR [rip+0x1c25e]        # 0x45b5c4
  43f366:	nop
  43f367:	nop
  43f368:	jmp    QWORD PTR [rip+0x1c24e]        # 0x45b5bc
  43f36e:	nop
  43f36f:	nop
  43f370:	jmp    QWORD PTR [rip+0x1c23e]        # 0x45b5b4
  43f376:	nop
  43f377:	nop
  43f378:	jmp    QWORD PTR [rip+0x1c22e]        # 0x45b5ac
  43f37e:	nop
  43f37f:	nop
  43f380:	jmp    QWORD PTR [rip+0x1c21e]        # 0x45b5a4
  43f386:	nop
  43f387:	nop
  43f388:	jmp    QWORD PTR [rip+0x1c20e]        # 0x45b59c
  43f38e:	nop
  43f38f:	nop
  43f390:	jmp    QWORD PTR [rip+0x1c1fe]        # 0x45b594
  43f396:	nop
  43f397:	nop
  43f398:	jmp    QWORD PTR [rip+0x1c1ee]        # 0x45b58c
  43f39e:	nop
  43f39f:	nop
  43f3a0:	jmp    QWORD PTR [rip+0x1c1de]        # 0x45b584
  43f3a6:	nop
  43f3a7:	nop
  43f3a8:	jmp    QWORD PTR [rip+0x1c1ce]        # 0x45b57c
  43f3ae:	nop
  43f3af:	nop
  43f3b0:	jmp    QWORD PTR [rip+0x1c1be]        # 0x45b574
  43f3b6:	nop
  43f3b7:	nop
  43f3b8:	jmp    QWORD PTR [rip+0x1c1ae]        # 0x45b56c
  43f3be:	nop
  43f3bf:	nop
  43f3c0:	jmp    QWORD PTR [rip+0x1c19e]        # 0x45b564
  43f3c6:	nop
  43f3c7:	nop
  43f3c8:	jmp    QWORD PTR [rip+0x1c18e]        # 0x45b55c
  43f3ce:	nop
  43f3cf:	nop
  43f3d0:	jmp    QWORD PTR [rip+0x1c17e]        # 0x45b554
  43f3d6:	nop
  43f3d7:	nop
  43f3d8:	jmp    QWORD PTR [rip+0x1c16e]        # 0x45b54c
  43f3de:	nop
  43f3df:	nop
  43f3e0:	jmp    QWORD PTR [rip+0x1c15e]        # 0x45b544
  43f3e6:	nop
  43f3e7:	nop
  43f3e8:	jmp    QWORD PTR [rip+0x1c14e]        # 0x45b53c
  43f3ee:	nop
  43f3ef:	nop
  43f3f0:	jmp    QWORD PTR [rip+0x1c13e]        # 0x45b534
  43f3f6:	nop
  43f3f7:	nop
  43f3f8:	jmp    QWORD PTR [rip+0x1c12e]        # 0x45b52c
  43f3fe:	nop
  43f3ff:	nop
  43f400:	jmp    QWORD PTR [rip+0x1c11e]        # 0x45b524
  43f406:	nop
  43f407:	nop
  43f408:	jmp    QWORD PTR [rip+0x1c10e]        # 0x45b51c
  43f40e:	nop
  43f40f:	nop
  43f410:	jmp    QWORD PTR [rip+0x1c0fe]        # 0x45b514
  43f416:	nop
  43f417:	nop
  43f418:	jmp    QWORD PTR [rip+0x1c0ee]        # 0x45b50c
  43f41e:	nop
  43f41f:	nop
  43f420:	jmp    QWORD PTR [rip+0x1c0de]        # 0x45b504
  43f426:	nop
  43f427:	nop
  43f428:	jmp    QWORD PTR [rip+0x1c0ce]        # 0x45b4fc
  43f42e:	nop
  43f42f:	nop
  43f430:	sub    rsp,0x38
  43f434:	mov    QWORD PTR [rsp+0x48],rdx
  43f439:	lea    rdx,[rsp+0x48]
  43f43e:	mov    QWORD PTR [rsp+0x50],r8
  43f443:	mov    QWORD PTR [rsp+0x58],r9
  43f448:	mov    QWORD PTR [rsp+0x28],rdx
  43f44d:	call   0x43a300
  43f452:	add    rsp,0x38
  43f456:	ret    
  43f457:	nop
  43f458:	nop
  43f459:	nop
  43f45a:	nop
  43f45b:	nop
  43f45c:	nop
  43f45d:	nop
  43f45e:	nop
  43f45f:	nop
  43f460:	sub    rsp,0x38
  43f464:	mov    QWORD PTR [rsp+0x50],r8
  43f469:	lea    r8,[rsp+0x50]
  43f46e:	mov    QWORD PTR [rsp+0x58],r9
  43f473:	mov    QWORD PTR [rsp+0x28],r8
  43f478:	call   0x43a2d0
  43f47d:	add    rsp,0x38
  43f481:	ret    
  43f482:	nop
  43f483:	nop
  43f484:	nop
  43f485:	nop
  43f486:	nop
  43f487:	nop
  43f488:	nop
  43f489:	nop
  43f48a:	nop
  43f48b:	nop
  43f48c:	nop
  43f48d:	nop
  43f48e:	nop
  43f48f:	nop
  43f490:	sub    rsp,0x38
  43f494:	mov    QWORD PTR [rsp+0x50],r8
  43f499:	lea    r8,[rsp+0x50]
  43f49e:	mov    QWORD PTR [rsp+0x58],r9
  43f4a3:	mov    QWORD PTR [rsp+0x28],r8
  43f4a8:	call   0x43a3a0
  43f4ad:	add    rsp,0x38
  43f4b1:	ret    
  43f4b2:	nop
  43f4b3:	nop
  43f4b4:	nop
  43f4b5:	nop
  43f4b6:	nop
  43f4b7:	nop
  43f4b8:	nop
  43f4b9:	nop
  43f4ba:	nop
  43f4bb:	nop
  43f4bc:	nop
  43f4bd:	nop
  43f4be:	nop
  43f4bf:	nop
  43f4c0:	sub    rsp,0x38
  43f4c4:	mov    QWORD PTR [rsp+0x58],r9
  43f4c9:	lea    r9,[rsp+0x58]
  43f4ce:	mov    QWORD PTR [rsp+0x28],r9
  43f4d3:	call   0x43a340
  43f4d8:	add    rsp,0x38
  43f4dc:	ret    
  43f4dd:	nop
  43f4de:	nop
  43f4df:	nop
  43f4e0:	push   r15
  43f4e2:	push   r14
  43f4e4:	push   r13
  43f4e6:	push   r12
  43f4e8:	push   rbp
  43f4e9:	push   rdi
  43f4ea:	push   rsi
  43f4eb:	push   rbx
  43f4ec:	sub    rsp,0xf8
  43f4f3:	mov    DWORD PTR [rsp+0x140],ecx
  43f4fa:	mov    QWORD PTR [rsp+0x148],rdx
  43f502:	call   0x438920
  43f507:	mov    rax,QWORD PTR [rsp+0x148]
  43f50f:	mov    rbx,QWORD PTR [rax]
  43f512:	mov    rcx,rbx
  43f515:	call   0x43f028
  43f51a:	lea    rcx,[rbx+rax*1]
  43f51e:	cmp    rbx,rcx
  43f521:	jne    0x43f532
  43f523:	jmp    0x43f53a
  43f525:	cmp    al,0x2f
  43f527:	je     0x43f53a
  43f529:	sub    rcx,0x1
  43f52d:	cmp    rbx,rcx
  43f530:	je     0x43f53a
  43f532:	movzx  eax,BYTE PTR [rcx-0x1]
  43f536:	cmp    al,0x5c
  43f538:	jne    0x43f525
  43f53a:	mov    rax,QWORD PTR [rip+0x1221f]        # 0x451760
  43f541:	lea    rsi,[rip+0x47dc]        # 0x443d24
  43f548:	mov    QWORD PTR [rax],rcx
  43f54b:	call   0x438560
  43f550:	call   0x435fd0
  43f555:	mov    rax,QWORD PTR [rip+0x120e4]        # 0x451640
  43f55c:	xor    edx,edx
  43f55e:	mov    rcx,QWORD PTR [rax]
  43f561:	call   0x403070
  43f566:	lea    rdx,[rsp+0x148]
  43f56e:	lea    rcx,[rsp+0x140]
  43f576:	call   0x4358c0
  43f57b:	mov    ecx,0xa0
  43f580:	mov    DWORD PTR [rip+0x19b5e],0xa        # 0x4590e8
  43f58a:	call   0x4385d0
  43f58f:	mov    ecx,0x320
  43f594:	mov    QWORD PTR [rip+0x19b55],rax        # 0x4590f0
  43f59b:	mov    DWORD PTR [rip+0x19b53],0xa        # 0x4590f8
  43f5a5:	call   0x4385d0
  43f5aa:	mov    rbx,QWORD PTR [rip+0x1217f]        # 0x451730
  43f5b1:	mov    r12,QWORD PTR [rsp+0x148]
  43f5b9:	mov    ebp,DWORD PTR [rsp+0x140]
  43f5c0:	mov    QWORD PTR [rip+0x19b39],rax        # 0x459100
  43f5c7:	mov    rdi,rbx
  43f5ca:	lea    r9,[rip+0x492f]        # 0x443f00
  43f5d1:	lea    r8,[rip+0x43f9]        # 0x4439d1
  43f5d8:	mov    QWORD PTR [rsp+0x20],0x0
  43f5e1:	mov    rdx,r12
  43f5e4:	mov    ecx,ebp
  43f5e6:	call   0x436f90
  43f5eb:	cmp    eax,0xffffffff
  43f5ee:	je     0x43f75b
  43f5f4:	sub    eax,0x61
  43f5f7:	cmp    eax,0x15
  43f5fa:	ja     0x43f751
  43f600:	movsxd rax,DWORD PTR [rsi+rax*4]
  43f604:	add    rax,rsi
  43f607:	jmp    rax
  43f609:	mov    rbx,QWORD PTR [rip+0x1c00c]        # 0x45b61c
  43f610:	call   rbx
  43f612:	mov    r9,QWORD PTR [rip+0x12157]        # 0x451770
  43f619:	mov    r8,QWORD PTR [rip+0x12130]        # 0x451750
  43f620:	lea    rcx,[rax+0x30]
  43f624:	lea    rdx,[rip+0x42c1]        # 0x4438ec
  43f62b:	call   0x403990
  43f630:	call   rbx
  43f632:	lea    r8,[rip+0x42be]        # 0x4438f7
  43f639:	lea    rcx,[rax+0x30]
  43f63d:	lea    rdx,[rip+0x42bc]        # 0x443900
  43f644:	call   0x43f460
  43f649:	call   rbx
  43f64b:	lea    rdx,[rip+0x42e6]        # 0x443938
  43f652:	lea    rcx,[rax+0x30]
  43f656:	call   0x403990
  43f65b:	xor    ecx,ecx
  43f65d:	call   0x43f158
  43f662:	mov    DWORD PTR [rip+0x19a3c],0x1        # 0x4590a8
  43f66c:	jmp    0x43f5ca
  43f671:	mov    rcx,QWORD PTR [rbx]
  43f674:	mov    QWORD PTR [rip+0x19a05],rcx        # 0x459080
  43f67b:	call   0x43f028
  43f680:	mov    QWORD PTR [rip+0x199f1],rax        # 0x459078
  43f687:	jmp    0x43f5ca
  43f68c:	mov    DWORD PTR [rip+0x199da],0x1        # 0x459070
  43f696:	jmp    0x43f5ca
  43f69b:	mov    DWORD PTR [rip+0x199c7],0x1        # 0x45906c
  43f6a5:	jmp    0x43f5ca
  43f6aa:	mov    rax,QWORD PTR [rdi]
  43f6ad:	mov    QWORD PTR [rip+0x199d4],rax        # 0x459088
  43f6b4:	jmp    0x43f5ca
  43f6b9:	mov    DWORD PTR [rip+0x294d],0x0        # 0x442010
  43f6c3:	jmp    0x43f5ca
  43f6c8:	mov    DWORD PTR [rip+0x199ca],0x1        # 0x45909c
  43f6d2:	jmp    0x43f5ca
  43f6d7:	mov    DWORD PTR [rip+0x199b7],0x1        # 0x459098
  43f6e1:	jmp    0x43f5ca
  43f6e6:	mov    DWORD PTR [rip+0x199b0],0x1        # 0x4590a0
  43f6f0:	mov    DWORD PTR [rip+0x2916],0x1        # 0x442010
  43f6fa:	jmp    0x43f5ca
  43f6ff:	xor    ecx,ecx
  43f701:	call   0x401530
  43f706:	mov    DWORD PTR [rip+0x19980],0x1        # 0x459090
  43f710:	jmp    0x43f5ca
  43f715:	mov    DWORD PTR [rip+0x19985],0x1        # 0x4590a4
  43f71f:	jmp    0x43f5ca
  43f724:	mov    DWORD PTR [rip+0x1993a],0x1        # 0x459068
  43f72e:	jmp    0x43f5ca
  43f733:	mov    DWORD PTR [rip+0x1996f],0x1        # 0x4590ac
  43f73d:	jmp    0x43f5ca
  43f742:	mov    DWORD PTR [rip+0x19948],0x1        # 0x459094
  43f74c:	jmp    0x43f5ca
  43f751:	mov    ecx,0x1
  43f756:	call   0x401530
  43f75b:	mov    rax,QWORD PTR [rip+0x11fde]        # 0x451740
  43f762:	mov    r8d,DWORD PTR [rsp+0x140]
  43f76a:	mov    eax,DWORD PTR [rax]
  43f76c:	cmp    r8d,eax
  43f76f:	mov    DWORD PTR [rsp+0x48],eax
  43f773:	je     0x43f751
  43f775:	mov    eax,r8d
  43f778:	sub    eax,DWORD PTR [rsp+0x48]
  43f77c:	sub    eax,0x1
  43f77f:	jle    0x43f78b
  43f781:	mov    DWORD PTR [rip+0x19925],0x1        # 0x4590b0
  43f78b:	mov    edi,DWORD PTR [rsp+0x48]
  43f78f:	mov    r14d,0x1
  43f795:	movsxd rax,edi
  43f798:	mov    DWORD PTR [rsp+0x40],edi
  43f79c:	shl    rax,0x3
  43f7a0:	mov    QWORD PTR [rsp+0x58],rax
  43f7a5:	mov    eax,edi
  43f7a7:	mov    edi,r14d
  43f7aa:	sub    edi,eax
  43f7ac:	mov    rax,QWORD PTR [rip+0x1be69]        # 0x45b61c
  43f7b3:	mov    DWORD PTR [rsp+0x80],edi
  43f7ba:	mov    QWORD PTR [rsp+0x88],rax
  43f7c2:	jmp    0x43f931
  43f7c7:	nop    WORD PTR [rax+rax*1+0x0]
  43f7d0:	lea    eax,[rbx+0x1]
  43f7d3:	movsxd rcx,eax
  43f7d6:	call   0x4385d0
  43f7db:	mov    rdx,rsi
  43f7de:	mov    rcx,rax
  43f7e1:	mov    rbx,rax
  43f7e4:	call   0x43f040
  43f7e9:	mov    rcx,rbx
  43f7ec:	call   0x438060
  43f7f1:	mov    edx,0x2e
  43f7f6:	mov    rcx,rax
  43f7f9:	call   0x43f000
  43f7fe:	test   rax,rax
  43f801:	je     0x43f806
  43f803:	mov    BYTE PTR [rax],0x0
  43f806:	mov    rcx,rbx
  43f809:	call   0x43f028
  43f80e:	movsxd rsi,eax
  43f811:	lea    rdi,[rsi+0x6]
  43f815:	mov    rcx,rdi
  43f818:	call   0x4385d0
  43f81d:	mov    rdx,rbx
  43f820:	mov    rcx,rax
  43f823:	mov    QWORD PTR [rip+0x1989e],rax        # 0x4590c8
  43f82a:	call   0x43f040
  43f82f:	mov    r8,rax
  43f832:	mov    r10d,0x6f
  43f838:	mov    rcx,rdi
  43f83b:	add    r8,rsi
  43f83e:	mov    DWORD PTR [r8],0x6e63672e
  43f845:	mov    WORD PTR [r8+0x4],r10w
  43f84a:	call   0x4385d0
  43f84f:	mov    rdx,rbx
  43f852:	mov    rcx,rax
  43f855:	mov    QWORD PTR [rip+0x1985c],rax        # 0x4590b8
  43f85c:	call   0x43f040
  43f861:	mov    r11d,0x61
  43f867:	add    rsi,rax
  43f86a:	mov    rcx,rbx
  43f86d:	mov    WORD PTR [rsi+0x4],r11w
  43f872:	mov    DWORD PTR [rsi],0x6463672e
  43f878:	call   0x43f100
  43f87d:	mov    rcx,QWORD PTR [rip+0x19844]        # 0x4590c8
  43f884:	mov    QWORD PTR [rsp+0xa8],0x0
  43f890:	call   0x4021f0
  43f895:	test   eax,eax
  43f897:	je     0x440743
  43f89d:	mov    rcx,QWORD PTR [rip+0x1987c]        # 0x459120
  43f8a4:	lea    rdi,[rsp+0xb0]
  43f8ac:	call   0x43ef90
  43f8b1:	mov    rdx,rdi
  43f8b4:	mov    ecx,eax
  43f8b6:	call   QWORD PTR [rip+0x1bdc0]        # 0x45b67c
  43f8bc:	xor    edx,edx
  43f8be:	test   eax,eax
  43f8c0:	cmove  rdx,QWORD PTR [rsp+0xd8]
  43f8c9:	mov    QWORD PTR [rip+0x19800],rdx        # 0x4590d0
  43f8d0:	call   0x402000
  43f8d5:	cmp    eax,0x67636e6f
  43f8da:	je     0x43fa36
  43f8e0:	cmp    eax,0x6f6e6367
  43f8e5:	je     0x43fa2c
  43f8eb:	mov    rbx,QWORD PTR [rip+0x197d6]        # 0x4590c8
  43f8f2:	call   QWORD PTR [rip+0x1bd24]        # 0x45b61c
  43f8f8:	lea    rdx,[rip+0x4409]        # 0x443d08
  43f8ff:	lea    rcx,[rax+0x60]
  43f903:	mov    r8,rbx
  43f906:	call   0x403990
  43f90b:	call   0x401ec0
  43f910:	add    DWORD PTR [rsp+0x40],0x1
  43f915:	mov    r8d,DWORD PTR [rsp+0x140]
  43f91d:	movsxd rax,DWORD PTR [rsp+0x40]
  43f922:	add    QWORD PTR [rsp+0x58],0x8
  43f928:	cmp    r8d,eax
  43f92b:	je     0x440768
  43f931:	mov    ebx,DWORD PTR [rip+0x1976d]        # 0x4590a4
  43f937:	test   ebx,ebx
  43f939:	je     0x43f957
  43f93b:	mov    edx,DWORD PTR [rsp+0x80]
  43f942:	sub    r8d,DWORD PTR [rsp+0x48]
  43f947:	lea    rcx,[rip+0x4096]        # 0x4439e4
  43f94e:	add    edx,DWORD PTR [rsp+0x40]
  43f952:	call   0x43f430
  43f957:	mov    rax,QWORD PTR [rsp+0x148]
  43f95f:	mov    rdi,QWORD PTR [rsp+0x58]
  43f964:	mov    rsi,QWORD PTR [rax+rdi*1]
  43f968:	mov    rcx,rsi
  43f96b:	call   0x43f028
  43f970:	mov    rcx,QWORD PTR [rip+0x19751]        # 0x4590c8
  43f977:	mov    rbx,rax
  43f97a:	call   0x43f100
  43f97f:	mov    rcx,QWORD PTR [rip+0x19732]        # 0x4590b8
  43f986:	call   0x43f100
  43f98b:	mov    rcx,QWORD PTR [rip+0x196f6]        # 0x459088
  43f992:	mov    QWORD PTR [rip+0x1972b],0x0        # 0x4590c8
  43f99d:	mov    QWORD PTR [rip+0x19710],0x0        # 0x4590b8
  43f9a8:	mov    QWORD PTR [rip+0x1971d],0x0        # 0x4590d0
  43f9b3:	mov    DWORD PTR [rip+0x19703],0x0        # 0x4590c0
  43f9bd:	test   rcx,rcx
  43f9c0:	je     0x43f7d0
  43f9c6:	cmp    BYTE PTR [rcx],0x0
  43f9c9:	je     0x43f7d0
  43f9cf:	call   0x43f028
  43f9d4:	lea    ecx,[rbx+rax*1+0x2]
  43f9d8:	lea    rdi,[rsp+0xb0]
  43f9e0:	movsxd rcx,ecx
  43f9e3:	call   0x4385d0
  43f9e8:	mov    rdx,rdi
  43f9eb:	mov    rbx,rax
  43f9ee:	mov    BYTE PTR [rax],0x0
  43f9f1:	mov    rcx,QWORD PTR [rip+0x19690]        # 0x459088
  43f9f8:	call   QWORD PTR [rip+0x1be86]        # 0x45b884
  43f9fe:	test   eax,eax
  43fa00:	jne    0x43fa18
  43fa02:	movzx  eax,WORD PTR [rsp+0xb6]
  43fa0a:	and    ax,0xf000
  43fa0e:	cmp    ax,0x4000
  43fa12:	je     0x4406ec
  43fa18:	mov    rdx,QWORD PTR [rip+0x19669]        # 0x459088
  43fa1f:	mov    rcx,rbx
  43fa22:	call   0x43f058
  43fa27:	jmp    0x43f7e9
  43fa2c:	mov    DWORD PTR [rip+0x1970a],0x1        # 0x459140
  43fa36:	call   0x402000
  43fa3b:	cmp    eax,0x3430392a
  43fa40:	je     0x43faba
  43fa42:	mov    edx,eax
  43fa44:	mov    rbx,QWORD PTR [rip+0x1967d]        # 0x4590c8
  43fa4b:	mov    BYTE PTR [rsp+0xa3],al
  43fa52:	shr    edx,0x18
  43fa55:	mov    BYTE PTR [rsp+0xb0],0x34
  43fa5d:	mov    BYTE PTR [rsp+0xb1],0x30
  43fa65:	mov    BYTE PTR [rsp+0xa0],dl
  43fa6c:	mov    edx,eax
  43fa6e:	mov    BYTE PTR [rsp+0xb2],0x39
  43fa76:	shr    edx,0x10
  43fa79:	mov    BYTE PTR [rsp+0xb3],0x2a
  43fa81:	mov    BYTE PTR [rsp+0xa1],dl
  43fa88:	mov    edx,eax
  43fa8a:	shr    edx,0x8
  43fa8d:	mov    BYTE PTR [rsp+0xa2],dl
  43fa94:	call   QWORD PTR [rip+0x1bb82]        # 0x45b61c
  43fa9a:	lea    r9,[rsp+0xa0]
  43faa2:	lea    rcx,[rax+0x60]
  43faa6:	lea    rdx,[rip+0x3f73]        # 0x443a20
  43faad:	mov    QWORD PTR [rsp+0x20],rdi
  43fab2:	mov    r8,rbx
  43fab5:	call   0x403990
  43faba:	call   0x402000
  43fabf:	mov    DWORD PTR [rip+0x195fb],eax        # 0x4590c0
  43fac5:	lea    rax,[rsp+0xa8]
  43facd:	xor    r15d,r15d
  43fad0:	xor    r13d,r13d
  43fad3:	mov    DWORD PTR [rsp+0x38],r15d
  43fad8:	xor    r12d,r12d
  43fadb:	mov    QWORD PTR [rsp+0x50],rax
  43fae0:	mov    r15,r13
  43fae3:	call   0x402000
  43fae8:	test   eax,eax
  43faea:	mov    ebx,eax
  43faec:	je     0x43fbb3
  43faf2:	call   0x402000
  43faf7:	mov    r9d,DWORD PTR [rip+0x1963e]        # 0x45913c
  43fafe:	mov    edi,eax
  43fb00:	test   r9d,r9d
  43fb03:	jle    0x4406af
  43fb09:	mov    eax,DWORD PTR [rip+0x19619]        # 0x459128
  43fb0f:	add    eax,DWORD PTR [rip+0x19617]        # 0x45912c
  43fb15:	cmp    ebx,0x1000000
  43fb1b:	mov    DWORD PTR [rsp+0x68],eax
  43fb1f:	je     0x440326
  43fb25:	test   r15,r15
  43fb28:	setne  al
  43fb2b:	cmp    ebx,0x1410000
  43fb31:	jne    0x43fe4c
  43fb37:	test   al,al
  43fb39:	je     0x43fe4c
  43fb3f:	cmp    QWORD PTR [r15+0x20],0x0
  43fb44:	je     0x4405ff
  43fb4a:	mov    rsi,QWORD PTR [r15]
  43fb4d:	mov    rbx,QWORD PTR [rip+0x19574]        # 0x4590c8
  43fb54:	call   QWORD PTR [rip+0x1bac2]        # 0x45b61c
  43fb5a:	lea    rdx,[rip+0x3ee7]        # 0x443a48
  43fb61:	lea    rcx,[rax+0x60]
  43fb65:	mov    r9,rsi
  43fb68:	mov    r8,rbx
  43fb6b:	call   0x403990
  43fb70:	mov    ecx,DWORD PTR [rsp+0x68]
  43fb74:	mov    edx,edi
  43fb76:	call   0x4020c0
  43fb7b:	cmp    QWORD PTR [rip+0x1959d],0x0        # 0x459120
  43fb83:	je     0x43fb93
  43fb85:	mov    eax,DWORD PTR [rip+0x195ad]        # 0x459138
  43fb8b:	test   eax,eax
  43fb8d:	je     0x43fae3
  43fb93:	mov    rbx,QWORD PTR [rip+0x1952e]        # 0x4590c8
  43fb9a:	call   QWORD PTR [rip+0x1ba7c]        # 0x45b61c
  43fba0:	lea    rdx,[rip+0x3ab0]        # 0x443657
  43fba7:	lea    rcx,[rax+0x60]
  43fbab:	mov    r8,rbx
  43fbae:	call   0x403990
  43fbb3:	call   0x401ec0
  43fbb8:	mov    r15,QWORD PTR [rsp+0xa8]
  43fbc0:	test   r15,r15
  43fbc3:	je     0x4406c7
  43fbc9:	mov    rcx,r15
  43fbcc:	call   0x4022e0
  43fbd1:	mov    rax,QWORD PTR [rip+0x1ba44]        # 0x45b61c
  43fbd8:	mov    QWORD PTR [rsp+0x60],rax
  43fbdd:	mov    QWORD PTR [rsp+0x68],rax
  43fbe2:	cmp    QWORD PTR [r15+0x30],0x0
  43fbe7:	mov    rax,QWORD PTR [r15+0x50]
  43fbeb:	mov    QWORD PTR [r15+0x50],0x0
  43fbf3:	mov    QWORD PTR [rsp+0x50],rax
  43fbf8:	je     0x4406a2
  43fbfe:	mov    r11d,DWORD PTR [r15+0x40]
  43fc02:	mov    rsi,QWORD PTR [rip+0x194f7]        # 0x459100
  43fc09:	mov    r8d,DWORD PTR [r15+0x3c]
  43fc0d:	lea    rcx,[r11+r11*4]
  43fc11:	mov    r10,r11
  43fc14:	shl    rcx,0x4
  43fc18:	add    rcx,rsi
  43fc1b:	mov    rax,QWORD PTR [rcx+0x48]
  43fc1f:	lea    rdx,[rcx+0x48]
  43fc23:	test   rax,rax
  43fc26:	jne    0x43fc3d
  43fc28:	jmp    0x43fc43
  43fc2a:	nop    WORD PTR [rax+rax*1+0x0]
  43fc30:	lea    rdx,[rax+0x48]
  43fc34:	mov    rax,QWORD PTR [rax+0x48]
  43fc38:	test   rax,rax
  43fc3b:	je     0x43fc43
  43fc3d:	cmp    r8d,DWORD PTR [rax+0x3c]
  43fc41:	jb     0x43fc30
  43fc43:	mov    r13d,DWORD PTR [r15+0x28]
  43fc47:	mov    QWORD PTR [r15+0x48],rax
  43fc4b:	mov    QWORD PTR [rdx],r15
  43fc4e:	test   r13d,r13d
  43fc51:	je     0x4402e5
  43fc57:	lea    eax,[r13-0x1]
  43fc5b:	mov    rbp,QWORD PTR [r15+0x20]
  43fc5f:	mov    rdi,rax
  43fc62:	lea    rax,[rax+rax*8]
  43fc66:	lea    rbx,[rbp+0x30]
  43fc6a:	lea    r12,[rbp+rax*8+0x78]
  43fc6f:	nop
  43fc70:	mov    edx,DWORD PTR [rbx+0x8]
  43fc73:	mov    rax,QWORD PTR [rbx]
  43fc76:	test   edx,edx
  43fc78:	lea    r9d,[rdx-0x1]
  43fc7c:	jne    0x43fcc2
  43fc7e:	jmp    0x43fcde
  43fc80:	mov    r9d,DWORD PTR [rax+0x4]
  43fc84:	cmp    r9d,r10d
  43fc87:	je     0x43fcaf
  43fc89:	lea    rcx,[r11+r11*4]
  43fc8d:	mov    r10d,r9d
  43fc90:	shl    rcx,0x4
  43fc94:	add    rcx,rsi
  43fc97:	cmp    DWORD PTR [rcx+0x18],r8d
  43fc9b:	ja     0x43fca9
  43fc9d:	add    r8d,0x1
  43fca1:	mov    DWORD PTR [rcx+0x18],r8d
  43fca5:	mov    r10d,DWORD PTR [rax+0x4]
  43fca9:	xor    r8d,r8d
  43fcac:	mov    r11d,r10d
  43fcaf:	add    rax,0x4
  43fcb3:	sub    edx,0x2
  43fcb6:	add    rax,0x4
  43fcba:	test   edx,edx
  43fcbc:	lea    r9d,[rdx-0x1]
  43fcc0:	je     0x43fcde
  43fcc2:	mov    ecx,DWORD PTR [rax]
  43fcc4:	test   ecx,ecx
  43fcc6:	je     0x43fc80
  43fcc8:	cmp    r8d,ecx
  43fccb:	mov    edx,r9d
  43fcce:	cmovb  r8d,ecx
  43fcd2:	add    rax,0x4
  43fcd6:	test   edx,edx
  43fcd8:	lea    r9d,[rdx-0x1]
  43fcdc:	jne    0x43fcc2
  43fcde:	add    rbx,0x48
  43fce2:	cmp    rbx,r12
  43fce5:	jne    0x43fc70
  43fce7:	lea    rax,[r11+r11*4]
  43fceb:	shl    rax,0x4
  43fcef:	add    rsi,rax
  43fcf2:	cmp    DWORD PTR [rsi+0x18],r8d
  43fcf6:	ja     0x43fd00
  43fcf8:	add    r8d,0x1
  43fcfc:	mov    DWORD PTR [rsi+0x18],r8d
  43fd00:	mov    rsi,QWORD PTR [r15+0x30]
  43fd04:	mov    r12,rbp
  43fd07:	nop    WORD PTR [rax+rax*1+0x0]
  43fd10:	mov    eax,edi
  43fd12:	lea    rax,[rax+rax*8]
  43fd16:	lea    r8,[rbp+rax*8+0x0]
  43fd1b:	mov    rax,QWORD PTR [r8]
  43fd1e:	test   rax,rax
  43fd21:	je     0x43fd43
  43fd23:	xor    ecx,ecx
  43fd25:	jmp    0x43fd33
  43fd27:	nop    WORD PTR [rax+rax*1+0x0]
  43fd30:	mov    rax,rdx
  43fd33:	mov    rdx,QWORD PTR [rax+0x30]
  43fd37:	mov    QWORD PTR [rax+0x30],rcx
  43fd3b:	mov    rcx,rax
  43fd3e:	test   rdx,rdx
  43fd41:	jne    0x43fd30
  43fd43:	mov    QWORD PTR [r8],rax
  43fd46:	mov    rax,QWORD PTR [r8+0x8]
  43fd4a:	test   rax,rax
  43fd4d:	je     0x43fd66
  43fd4f:	xor    ecx,ecx
  43fd51:	jmp    0x43fd56
  43fd53:	mov    rax,rdx
  43fd56:	mov    rdx,QWORD PTR [rax+0x38]
  43fd5a:	mov    QWORD PTR [rax+0x38],rcx
  43fd5e:	mov    rcx,rax
  43fd61:	test   rdx,rdx
  43fd64:	jne    0x43fd53
  43fd66:	sub    edi,0x1
  43fd69:	mov    QWORD PTR [r8+0x8],rax
  43fd6d:	cmp    edi,0xffffffff
  43fd70:	jne    0x43fd10
  43fd72:	cmp    r13d,0x1
  43fd76:	jbe    0x4402f7
  43fd7c:	cmp    QWORD PTR [rbp+0x18],0x0
  43fd81:	jne    0x4402b5
  43fd87:	mov    eax,0xffffffff
  43fd8c:	mov    QWORD PTR [rbp+0x18],rax
  43fd90:	cmp    QWORD PTR [r12+0x58],0x0
  43fd96:	jne    0x440272
  43fd9c:	mov    eax,0xffffffff
  43fda1:	mov    QWORD PTR [r12+0x58],rax
  43fda6:	mov    eax,DWORD PTR [r15+0x28]
  43fdaa:	test   eax,eax
  43fdac:	mov    DWORD PTR [rsp+0x38],eax
  43fdb0:	je     0x4402ad
  43fdb6:	lea    r13d,[rax-0x1]
  43fdba:	mov    rcx,r12
  43fdbd:	xor    edi,edi
  43fdbf:	lea    rax,[r13+r13*8+0x9]
  43fdc4:	lea    rbp,[r12+rax*8]
  43fdc8:	nop    DWORD PTR [rax+rax*1+0x0]
  43fdd0:	mov    rdx,QWORD PTR [rcx]
  43fdd3:	test   rdx,rdx
  43fdd6:	je     0x43ff05
  43fddc:	mov    rax,rdx
  43fddf:	xor    r11d,r11d
  43fde2:	xor    r9d,r9d
  43fde5:	xor    r10d,r10d
  43fde8:	jmp    0x43fe10
  43fdea:	nop    WORD PTR [rax+rax*1+0x0]
  43fdf0:	mov    r8,QWORD PTR [rax+0x8]
  43fdf4:	test   r9,r9
  43fdf7:	je     0x43fe00
  43fdf9:	cmp    r8,r9
  43fdfc:	cmovb  r11d,r14d
  43fe00:	mov    rax,QWORD PTR [rax+0x30]
  43fe04:	test   rax,rax
  43fe07:	je     0x43fea0
  43fe0d:	mov    r9,r8
  43fe10:	movzx  r8d,BYTE PTR [rax+0x20]
  43fe15:	mov    ebx,r8d
  43fe18:	and    ebx,0x4
  43fe1b:	cmp    bl,0x1
  43fe1e:	adc    r10d,0x0
  43fe22:	and    r8d,0x2
  43fe26:	jne    0x43fdf0
  43fe28:	test   rsi,rsi
  43fe2b:	je     0x43fe38
  43fe2d:	mov    r8,QWORD PTR [rsi]
  43fe30:	add    rsi,0x8
  43fe34:	mov    QWORD PTR [rax+0x10],r8
  43fe38:	mov    r8,QWORD PTR [rax+0x8]
  43fe3c:	or     BYTE PTR [rax+0x20],0x1
  43fe40:	sub    QWORD PTR [rcx+0x10],0x1
  43fe45:	sub    QWORD PTR [r8+0x18],0x1
  43fe4a:	jmp    0x43fdf4
  43fe4c:	cmp    ebx,0x1430000
  43fe52:	jne    0x43fe5c
  43fe54:	test   al,al
  43fe56:	jne    0x4403cd
  43fe5c:	cmp    ebx,0x1450000
  43fe62:	jne    0x43fe6c
  43fe64:	test   al,al
  43fe66:	jne    0x44054d
  43fe6c:	test   r12d,r12d
  43fe6f:	je     0x43fb70
  43fe75:	mov    edx,r12d
  43fe78:	lea    eax,[rbx-0x1]
  43fe7b:	xor    edx,0xffffff
  43fe81:	shr    edx,0x8
  43fe84:	xor    eax,ebx
  43fe86:	cmp    edx,eax
  43fe88:	je     0x44065d
  43fe8e:	xor    r15d,r15d
  43fe91:	xor    r12d,r12d
  43fe94:	jmp    0x43fb70
  43fe99:	nop    DWORD PTR [rax+0x0]
  43fea0:	cmp    r10d,0x1
  43fea4:	je     0x43ff35
  43feaa:	test   r11d,r11d
  43fead:	je     0x43ff05
  43feaf:	nop
  43feb0:	xor    r8d,r8d
  43feb3:	mov    r10,rdx
  43feb6:	xor    r9d,r9d
  43feb9:	nop    DWORD PTR [rax+0x0]
  43fec0:	mov    rax,QWORD PTR [rdx+0x30]
  43fec4:	test   rax,rax
  43fec7:	je     0x43fefa
  43fec9:	mov    rbx,QWORD PTR [rax+0x8]
  43fecd:	cmp    QWORD PTR [rdx+0x8],rbx
  43fed1:	jbe    0x43ff21
  43fed3:	test   r8,r8
  43fed6:	je     0x43ff30
  43fed8:	mov    QWORD PTR [r8+0x30],rax
  43fedc:	mov    r8,QWORD PTR [rax+0x30]
  43fee0:	mov    r9d,0x1
  43fee6:	mov    QWORD PTR [rdx+0x30],r8
  43feea:	mov    QWORD PTR [rax+0x30],rdx
  43feee:	mov    r8,rax
  43fef1:	mov    rax,QWORD PTR [rdx+0x30]
  43fef5:	test   rax,rax
  43fef8:	jne    0x43fec9
  43fefa:	test   r9d,r9d
  43fefd:	mov    rdx,r10
  43ff00:	jne    0x43feb0
  43ff02:	mov    QWORD PTR [rcx],r10
  43ff05:	lea    rax,[rcx+0x48]
  43ff09:	or     BYTE PTR [rcx+0x29],0x40
  43ff0d:	mov    QWORD PTR [rcx+0x40],rdi
  43ff11:	mov    rdi,rcx
  43ff14:	cmp    rax,rbp
  43ff17:	je     0x43ff84
  43ff19:	mov    rcx,rax
  43ff1c:	jmp    0x43fdd0
  43ff21:	mov    r8,rdx
  43ff24:	mov    rdx,rax
  43ff27:	jmp    0x43fec0
  43ff29:	nop    DWORD PTR [rax+0x0]
  43ff30:	mov    r10,rax
  43ff33:	jmp    0x43fedc
  43ff35:	mov    rax,rdx
  43ff38:	jmp    0x43ff4d
  43ff3a:	nop    WORD PTR [rax+rax*1+0x0]
  43ff40:	mov    rax,QWORD PTR [rax+0x30]
  43ff44:	test   rax,rax
  43ff47:	je     0x43feaa
  43ff4d:	movzx  r8d,BYTE PTR [rax+0x20]
  43ff52:	test   r8b,0x4
  43ff56:	jne    0x43ff40
  43ff58:	or     r8d,0xffffff80
  43ff5c:	test   BYTE PTR [rcx+0x2a],0x1
  43ff60:	mov    BYTE PTR [rax+0x20],r8b
  43ff64:	je     0x43ff40
  43ff66:	and    r8d,0x8
  43ff6a:	je     0x43ff40
  43ff6c:	mov    r8,QWORD PTR [rax+0x8]
  43ff70:	cmp    rax,QWORD PTR [r8+0x8]
  43ff74:	jne    0x43ff40
  43ff76:	cmp    QWORD PTR [rax+0x38],0x0
  43ff7b:	jne    0x43ff40
  43ff7d:	or     BYTE PTR [r8+0x2a],0x2
  43ff82:	jmp    0x43ff40
  43ff84:	lea    rax,[r13+r13*8+0x0]
  43ff89:	lea    r9,[r12+rax*8]
  43ff8d:	nop    DWORD PTR [rax]
  43ff90:	test   r9,r9
  43ff93:	je     0x4401ca
  43ff99:	mov    r8,r9
  43ff9c:	xor    ecx,ecx
  43ff9e:	xchg   ax,ax
  43ffa0:	movzx  r10d,BYTE PTR [r8+0x29]
  43ffa5:	mov    r9,QWORD PTR [r9+0x40]
  43ffa9:	and    r10d,0xffffffbf
  43ffad:	cmp    QWORD PTR [r8+0x10],0x0
  43ffb2:	mov    BYTE PTR [r8+0x29],r10b
  43ffb6:	jne    0x440130
  43ffbc:	mov    rax,QWORD PTR [r8]
  43ffbf:	xor    edx,edx
  43ffc1:	test   rax,rax
  43ffc4:	je     0x43ffdd
  43ffc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ffd0:	add    rdx,QWORD PTR [rax+0x10]
  43ffd4:	mov    rax,QWORD PTR [rax+0x30]
  43ffd8:	test   rax,rax
  43ffdb:	jne    0x43ffd0
  43ffdd:	or     r10d,0x30
  43ffe1:	mov    QWORD PTR [r8+0x40],rcx
  43ffe5:	mov    QWORD PTR [r8+0x20],rdx
  43ffe9:	mov    BYTE PTR [r8+0x29],r10b
  43ffed:	mov    rcx,r8
  43fff0:	test   r9,r9
  43fff3:	mov    r8,r9
  43fff6:	jne    0x43ffa0
  43fff8:	test   rcx,rcx
  43fffb:	jne    0x440019
  43fffd:	jmp    0x4401ca
  440002:	cmp    QWORD PTR [rcx+0x18],0x1
  440007:	je     0x4400b2
  44000d:	test   r10,r10
  440010:	je     0x43ff90
  440016:	mov    rcx,r10
  440019:	and    BYTE PTR [rcx+0x29],0xdf
  44001d:	cmp    QWORD PTR [rcx+0x10],0x1
  440022:	mov    r10,QWORD PTR [rcx+0x40]
  440026:	jne    0x440002
  440028:	mov    rax,QWORD PTR [rcx]
  44002b:	mov    r8,QWORD PTR [rcx+0x20]
  44002f:	test   rax,rax
  440032:	je     0x44016c
  440038:	xor    edx,edx
  44003a:	nop    WORD PTR [rax+rax*1+0x0]
  440040:	sub    r8,QWORD PTR [rax+0x10]
  440044:	test   BYTE PTR [rax+0x20],0x1
  440048:	cmove  rdx,rax
  44004c:	mov    rax,QWORD PTR [rax+0x30]
  440050:	test   rax,rax
  440053:	jne    0x440040
  440055:	mov    r11,QWORD PTR [rdx+0x8]
  440059:	or     BYTE PTR [rdx+0x20],0x1
  44005d:	mov    QWORD PTR [rdx+0x10],r8
  440061:	mov    QWORD PTR [rcx+0x10],0x0
  440069:	movzx  edx,BYTE PTR [r11+0x29]
  44006e:	mov    rax,QWORD PTR [r11+0x18]
  440072:	sub    rax,0x1
  440076:	test   dl,0x10
  440079:	mov    QWORD PTR [r11+0x18],rax
  44007d:	je     0x4401a5
  440083:	cmp    rax,0x1
  440087:	jne    0x440002
  44008d:	test   dl,0x20
  440090:	jne    0x440002
  440096:	or     edx,0x20
  440099:	mov    QWORD PTR [r11+0x40],r10
  44009d:	mov    r10,r11
  4400a0:	mov    BYTE PTR [r11+0x29],dl
  4400a4:	cmp    QWORD PTR [rcx+0x18],0x1
  4400a9:	jne    0x440016
  4400af:	mov    r10,r11
  4400b2:	mov    rax,QWORD PTR [rcx+0x8]
  4400b6:	mov    r8,QWORD PTR [rcx+0x20]
  4400ba:	test   rax,rax
  4400bd:	je     0x440162
  4400c3:	xor    edx,edx
  4400c5:	sub    r8,QWORD PTR [rax+0x10]
  4400c9:	test   BYTE PTR [rax+0x20],0x1
  4400cd:	cmove  rdx,rax
  4400d1:	mov    rax,QWORD PTR [rax+0x38]
  4400d5:	test   rax,rax
  4400d8:	jne    0x4400c5
  4400da:	mov    r11,QWORD PTR [rdx]
  4400dd:	or     BYTE PTR [rdx+0x20],0x1
  4400e1:	mov    QWORD PTR [rdx+0x10],r8
  4400e5:	mov    QWORD PTR [rcx+0x18],0x0
  4400ed:	movzx  edx,BYTE PTR [r11+0x29]
  4400f2:	mov    rax,QWORD PTR [r11+0x10]
  4400f6:	sub    rax,0x1
  4400fa:	test   dl,0x10
  4400fd:	mov    QWORD PTR [r11+0x10],rax
  440101:	je     0x440180
  440103:	cmp    rax,0x1
  440107:	jne    0x44000d
  44010d:	test   dl,0x20
  440110:	jne    0x44000d
  440116:	or     edx,0x20
  440119:	mov    QWORD PTR [r11+0x40],r10
  44011d:	mov    r10,r11
  440120:	mov    BYTE PTR [r11+0x29],dl
  440124:	jmp    0x440016
  440129:	nop    DWORD PTR [rax+0x0]
  440130:	cmp    QWORD PTR [r8+0x18],0x0
  440135:	jne    0x43fff0
  44013b:	mov    rax,QWORD PTR [r8+0x8]
  44013f:	xor    edx,edx
  440141:	test   rax,rax
  440144:	je     0x43ffdd
  44014a:	nop    WORD PTR [rax+rax*1+0x0]
  440150:	add    rdx,QWORD PTR [rax+0x10]
  440154:	mov    rax,QWORD PTR [rax+0x38]
  440158:	test   rax,rax
  44015b:	jne    0x440150
  44015d:	jmp    0x43ffdd
  440162:	mov    rax,QWORD PTR ds:0x0
  44016a:	ud2    
  44016c:	mov    rax,QWORD PTR ds:0x8
  440174:	ud2    
  440176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  440180:	test   rax,rax
  440183:	jne    0x44000d
  440189:	test   dl,0x40
  44018c:	jne    0x44000d
  440192:	or     edx,0x40
  440195:	mov    QWORD PTR [r11+0x40],r9
  440199:	mov    r9,r11
  44019c:	mov    BYTE PTR [r11+0x29],dl
  4401a0:	jmp    0x44000d
  4401a5:	test   rax,rax
  4401a8:	jne    0x440002
  4401ae:	test   dl,0x40
  4401b1:	jne    0x440002
  4401b7:	or     edx,0x40
  4401ba:	mov    QWORD PTR [r11+0x40],r9
  4401be:	mov    r9,r11
  4401c1:	mov    BYTE PTR [r11+0x29],dl
  4401c5:	jmp    0x440002
  4401ca:	mov    eax,DWORD PTR [rsp+0x38]
  4401ce:	test   eax,eax
  4401d0:	je     0x440203
  4401d2:	test   BYTE PTR [r12+0x29],0x10
  4401d8:	je     0x440232
  4401da:	mov    edi,DWORD PTR [rsp+0x38]
  4401de:	lea    rax,[r12+0x48]
  4401e3:	lea    edx,[rdi-0x1]
  4401e6:	lea    rdx,[rdx+rdx*8+0x9]
  4401eb:	lea    rcx,[r12+rdx*8]
  4401ef:	jmp    0x4401fe
  4401f1:	movzx  edx,BYTE PTR [rax+0x29]
  4401f5:	add    rax,0x48
  4401f9:	and    edx,0x10
  4401fc:	je     0x440232
  4401fe:	cmp    rax,rcx
  440201:	jne    0x4401f1
  440203:	test   BYTE PTR [r15+0x1c],0x1
  440208:	jne    0x440263
  44020a:	mov    rax,QWORD PTR [rip+0x1e07]        # 0x442018
  440211:	mov    QWORD PTR [rax],r15
  440214:	add    r15,0x50
  440218:	mov    QWORD PTR [rip+0x1df9],r15        # 0x442018
  44021f:	mov    r15,QWORD PTR [rsp+0x50]
  440224:	test   r15,r15
  440227:	jne    0x43fbe2
  44022d:	jmp    0x43f910
  440232:	mov    rsi,QWORD PTR [r15]
  440235:	mov    rbx,QWORD PTR [rip+0x18e8c]        # 0x4590c8
  44023c:	mov    rax,QWORD PTR [rsp+0x88]
  440244:	call   rax
  440246:	lea    rdx,[rip+0x38ab]        # 0x443af8
  44024d:	lea    rcx,[rax+0x60]
  440251:	mov    r9,rsi
  440254:	mov    r8,rbx
  440257:	call   0x403990
  44025c:	test   BYTE PTR [r15+0x1c],0x1
  440261:	je     0x44020a
  440263:	mov    edx,DWORD PTR [r15+0x28]
  440267:	mov    rcx,QWORD PTR [r15+0x20]
  44026b:	call   0x402150
  440270:	jmp    0x44020a
  440272:	mov    rdi,QWORD PTR [r15]
  440275:	mov    rbx,QWORD PTR [rip+0x18e4c]        # 0x4590c8
  44027c:	mov    rax,QWORD PTR [rsp+0x60]
  440281:	call   rax
  440283:	lea    rdx,[rip+0x3846]        # 0x443ad0
  44028a:	lea    rcx,[rax+0x60]
  44028e:	mov    r9,rdi
  440291:	mov    r8,rbx
  440294:	call   0x403990
  440299:	mov    eax,DWORD PTR [r15+0x28]
  44029d:	mov    r12,QWORD PTR [r15+0x20]
  4402a1:	test   eax,eax
  4402a3:	mov    DWORD PTR [rsp+0x38],eax
  4402a7:	jne    0x43fdb6
  4402ad:	xor    r9d,r9d
  4402b0:	jmp    0x43ff90
  4402b5:	mov    rdi,QWORD PTR [r15]
  4402b8:	mov    rbx,QWORD PTR [rip+0x18e09]        # 0x4590c8
  4402bf:	mov    rax,QWORD PTR [rsp+0x68]
  4402c4:	call   rax
  4402c6:	lea    rdx,[rip+0x37db]        # 0x443aa8
  4402cd:	lea    rcx,[rax+0x60]
  4402d1:	mov    r9,rdi
  4402d4:	mov    r8,rbx
  4402d7:	call   0x403990
  4402dc:	mov    r12,QWORD PTR [r15+0x20]
  4402e0:	jmp    0x43fd90
  4402e5:	cmp    r8d,DWORD PTR [rcx+0x18]
  4402e9:	jb     0x4402f3
  4402eb:	add    r8d,0x1
  4402ef:	mov    DWORD PTR [rcx+0x18],r8d
  4402f3:	mov    rsi,QWORD PTR [r15+0x30]
  4402f7:	mov    rdi,QWORD PTR [r15]
  4402fa:	mov    rbx,QWORD PTR [rip+0x18dc7]        # 0x4590c8
  440301:	call   QWORD PTR [rip+0x1b315]        # 0x45b61c
  440307:	lea    rdx,[rip+0x3772]        # 0x443a80
  44030e:	lea    rcx,[rax+0x60]
  440312:	mov    r9,rdi
  440315:	mov    r8,rbx
  440318:	call   0x403990
  44031d:	mov    r12,QWORD PTR [r15+0x20]
  440321:	jmp    0x43fda6
  440326:	call   0x402000
  44032b:	mov    r12d,eax
  44032e:	call   0x402000
  440333:	mov    ebp,eax
  440335:	call   0x402000
  44033a:	mov    esi,eax
  44033c:	call   0x402040
  440341:	mov    rcx,rax
  440344:	call   0x4386d0
  440349:	mov    r13,rax
  44034c:	call   0x402040
  440351:	mov    rcx,rax
  440354:	call   0x401b60
  440359:	mov    DWORD PTR [rsp+0x38],eax
  44035d:	call   0x402000
  440362:	mov    edx,0x58
  440367:	mov    ecx,0x1
  44036c:	mov    ebx,eax
  44036e:	call   0x438600
  440373:	mov    r8d,DWORD PTR [rip+0x18d22]        # 0x45909c
  44037a:	mov    r15,rax
  44037d:	mov    QWORD PTR [rax],r13
  440380:	test   r8d,r8d
  440383:	jne    0x44067c
  440389:	mov    eax,DWORD PTR [rsp+0x38]
  44038d:	mov    DWORD PTR [r15+0x10],r12d
  440391:	mov    r12d,0x1000000
  440397:	mov    DWORD PTR [r15+0x14],ebp
  44039b:	mov    DWORD PTR [r15+0x18],esi
  44039f:	mov    DWORD PTR [r15+0x3c],ebx
  4403a3:	mov    QWORD PTR [r15+0x48],0x0
  4403ab:	mov    DWORD PTR [r15+0x40],eax
  4403af:	mov    rax,QWORD PTR [rsp+0x50]
  4403b4:	mov    QWORD PTR [r15+0x50],0x0
  4403bc:	mov    QWORD PTR [rax],r15
  4403bf:	lea    rax,[r15+0x50]
  4403c3:	mov    QWORD PTR [rsp+0x50],rax
  4403c8:	jmp    0x43fb70
  4403cd:	call   0x402000
  4403d2:	mov    ebx,eax
  4403d4:	mov    DWORD PTR [rsp+0x70],eax
  4403d8:	mov    eax,eax
  4403da:	lea    rbp,[rax+rax*8]
  4403de:	lea    esi,[rdi-0x1]
  4403e1:	lea    rax,[rbp*8+0x0]
  4403e9:	shr    esi,1
  4403eb:	mov    QWORD PTR [rsp+0x78],rax
  4403f0:	add    rax,QWORD PTR [r15+0x20]
  4403f4:	cmp    ebx,DWORD PTR [r15+0x28]
  4403f8:	mov    rbp,rax
  4403fb:	jae    0x43fb93
  440401:	cmp    QWORD PTR [rbp+0x0],0x0
  440406:	jne    0x43fb93
  44040c:	mov    DWORD PTR [rsp+0x60],0x0
  440414:	sub    esi,0x1
  440417:	cmp    esi,0xffffffff
  44041a:	je     0x440501
  440420:	call   0x402000
  440425:	mov    r13d,eax
  440428:	call   0x402000
  44042d:	cmp    r13d,DWORD PTR [r15+0x28]
  440431:	mov    ebx,eax
  440433:	jae    0x43fb93
  440439:	mov    edx,0x40
  44043e:	mov    ecx,0x1
  440443:	call   0x438600
  440448:	mov    r8,QWORD PTR [r15+0x20]
  44044c:	mov    rdx,rax
  44044f:	lea    rax,[r13+r13*8+0x0]
  440454:	movzx  r10d,BYTE PTR [rdx+0x20]
  440459:	mov    ecx,ebx
  44045b:	mov    QWORD PTR [rdx],rbp
  44045e:	shr    ecx,1
  440460:	mov    QWORD PTR [rdx+0x10],0x0
  440468:	lea    r9,[r8+rax*8]
  44046c:	mov    eax,ebx
  44046e:	and    ecx,0x1
  440471:	and    eax,0x1
  440474:	shl    ecx,0x2
  440477:	shr    ebx,0x2
  44047a:	add    eax,eax
  44047c:	and    r10d,0xfffffff8
  440480:	mov    QWORD PTR [rdx+0x8],r9
  440484:	or     eax,r10d
  440487:	or     eax,ecx
  440489:	mov    ecx,ebx
  44048b:	and    ecx,0x1
  44048e:	and    eax,0xfffffff7
  440491:	shl    ecx,0x3
  440494:	or     eax,ecx
  440496:	mov    BYTE PTR [rdx+0x20],al
  440499:	mov    rax,QWORD PTR [rbp+0x0]
  44049d:	mov    QWORD PTR [rdx+0x30],rax
  4404a1:	mov    rax,QWORD PTR [r9+0x8]
  4404a5:	add    QWORD PTR [rbp+0x10],0x1
  4404aa:	mov    QWORD PTR [rbp+0x0],rdx
  4404ae:	mov    QWORD PTR [rdx+0x38],rax
  4404b2:	movzx  eax,BYTE PTR [rdx+0x20]
  4404b6:	add    QWORD PTR [r9+0x18],0x1
  4404bb:	mov    QWORD PTR [r9+0x8],rdx
  4404bf:	test   al,0x4
  4404c1:	je     0x4404e8
  4404c3:	mov    ecx,DWORD PTR [rsp+0x70]
  4404c7:	test   ecx,ecx
  4404c9:	je     0x44053c
  4404cb:	mov    rax,QWORD PTR [rsp+0x78]
  4404d0:	or     BYTE PTR [r8+rax*1+0x2a],0x1
  4404d6:	mov    DWORD PTR [rsp+0x60],0x1
  4404de:	movzx  eax,BYTE PTR [rdx+0x20]
  4404e2:	or     eax,0x20
  4404e5:	mov    BYTE PTR [rdx+0x20],al
  4404e8:	test   al,0x2
  4404ea:	jne    0x440414
  4404f0:	sub    esi,0x1
  4404f3:	add    DWORD PTR [r15+0x38],0x1
  4404f8:	cmp    esi,0xffffffff
  4404fb:	jne    0x440420
  440501:	mov    eax,DWORD PTR [rsp+0x60]
  440505:	test   eax,eax
  440507:	je     0x43fb70
  44050d:	mov    rax,QWORD PTR [rbp+0x0]
  440511:	test   rax,rax
  440514:	je     0x43fb70
  44051a:	movzx  edx,BYTE PTR [rax+0x20]
  44051e:	test   dl,0xc
  440521:	jne    0x44052e
  440523:	or     edx,0x10
  440526:	mov    BYTE PTR [rax+0x20],dl
  440529:	or     BYTE PTR [r15+0x1c],0x1
  44052e:	mov    rax,QWORD PTR [rax+0x30]
  440532:	test   rax,rax
  440535:	jne    0x44051a
  440537:	jmp    0x43fb70
  44053c:	or     eax,0x40
  44053f:	mov    BYTE PTR [rdx+0x20],al
  440542:	or     BYTE PTR [r9+0x2a],0x4
  440547:	movzx  eax,BYTE PTR [rdx+0x20]
  44054b:	jmp    0x4404e8
  44054d:	call   0x402000
  440552:	lea    ecx,[rdi-0x1]
  440555:	mov    edx,0x4
  44055a:	mov    ebx,eax
  44055c:	call   0x438600
  440561:	cmp    ebx,DWORD PTR [r15+0x28]
  440565:	mov    rsi,rax
  440568:	jae    0x43fb93
  44056e:	lea    rbx,[rbx+rbx*8]
  440572:	mov    rax,QWORD PTR [r15+0x20]
  440576:	shl    rbx,0x3
  44057a:	cmp    QWORD PTR [rax+rbx*1+0x30],0x0
  440580:	jne    0x43fb93
  440586:	xor    ebp,ebp
  440588:	call   0x402000
  44058d:	test   eax,eax
  44058f:	je     0x4405aa
  440591:	test   ebp,ebp
  440593:	je     0x4405d6
  440595:	mov    edx,ebp
  440597:	add    ebp,0x1
  44059a:	shl    rdx,0x2
  44059e:	mov    DWORD PTR [rsi+rdx*1],eax
  4405a1:	call   0x402000
  4405a6:	test   eax,eax
  4405a8:	jne    0x440591
  4405aa:	call   0x402040
  4405af:	test   rax,rax
  4405b2:	je     0x4405ef
  4405b4:	mov    rcx,rax
  4405b7:	call   0x401b60
  4405bc:	mov    ecx,eax
  4405be:	mov    DWORD PTR [rsp+0x38],eax
  4405c2:	lea    eax,[rbp+0x1]
  4405c5:	mov    edx,ebp
  4405c7:	add    ebp,0x2
  4405ca:	mov    DWORD PTR [rsi+rdx*4],0x0
  4405d1:	mov    DWORD PTR [rsi+rax*4],ecx
  4405d4:	jmp    0x440588
  4405d6:	mov    ecx,DWORD PTR [rsp+0x38]
  4405da:	mov    DWORD PTR [rsi],0x0
  4405e0:	mov    edx,0x8
  4405e5:	mov    ebp,0x3
  4405ea:	mov    DWORD PTR [rsi+0x4],ecx
  4405ed:	jmp    0x44059e
  4405ef:	add    rbx,QWORD PTR [r15+0x20]
  4405f3:	mov    QWORD PTR [rbx+0x30],rsi
  4405f7:	mov    DWORD PTR [rbx+0x38],ebp
  4405fa:	jmp    0x43fb70
  4405ff:	mov    DWORD PTR [r15+0x28],edi
  440603:	mov    ecx,edi
  440605:	mov    edx,0x48
  44060a:	call   0x438600
  44060f:	test   edi,edi
  440611:	mov    rsi,rax
  440614:	mov    QWORD PTR [r15+0x20],rax
  440618:	je     0x43fb70
  44061e:	lea    eax,[rdi-0x1]
  440621:	xor    ebp,ebp
  440623:	lea    rbx,[rax+rax*8]
  440627:	shl    rbx,0x3
  44062b:	jmp    0x440638
  44062d:	nop    DWORD PTR [rax]
  440630:	mov    rsi,QWORD PTR [r15+0x20]
  440634:	add    rbp,0x48
  440638:	add    rsi,rbp
  44063b:	call   0x402000
  440640:	movzx  edx,WORD PTR [rsi+0x28]
  440644:	and    ax,0xfff
  440648:	and    dx,0xf000
  44064d:	or     eax,edx
  44064f:	cmp    rbp,rbx
  440652:	mov    WORD PTR [rsi+0x28],ax
  440656:	jne    0x440630
  440658:	jmp    0x43fb70
  44065d:	mov    eax,r12d
  440660:	xor    ebx,r12d
  440663:	neg    eax
  440665:	xor    eax,r12d
  440668:	and    ebx,eax
  44066a:	mov    eax,0x0
  44066f:	cmovne r15,rax
  440673:	cmovne r12d,eax
  440677:	jmp    0x43fb70
  44067c:	mov    edx,0x1
  440681:	mov    rcx,r13
  440684:	call   0x426540
  440689:	test   rax,rax
  44068c:	mov    QWORD PTR [r15+0x8],rax
  440690:	jne    0x440389
  440696:	mov    rax,QWORD PTR [r15]
  440699:	mov    QWORD PTR [r15+0x8],rax
  44069d:	jmp    0x440389
  4406a2:	mov    rcx,r15
  4406a5:	call   0x401690
  4406aa:	jmp    0x44021f
  4406af:	lea    r8,[rip+0x36fa]        # 0x443db0
  4406b6:	lea    rcx,[rip+0x2ecb]        # 0x443588
  4406bd:	mov    edx,0x46
  4406c2:	call   0x4039c0
  4406c7:	mov    rbx,QWORD PTR [rip+0x189fa]        # 0x4590c8
  4406ce:	call   QWORD PTR [rip+0x1af48]        # 0x45b61c
  4406d4:	lea    rdx,[rip+0x338e]        # 0x443a69
  4406db:	lea    rcx,[rax+0x60]
  4406df:	mov    r8,rbx
  4406e2:	call   0x403990
  4406e7:	jmp    0x43f910
  4406ec:	xor    eax,eax
  4406ee:	or     rcx,0xffffffffffffffff
  4406f2:	mov    rdi,rbx
  4406f5:	repnz scas al,BYTE PTR es:[rdi]
  4406f7:	mov    rdx,QWORD PTR [rip+0x1898a]        # 0x459088
  4406fe:	mov    rax,rcx
  440701:	not    rax
  440704:	lea    rcx,[rbx+rax*1-0x1]
  440709:	call   0x438750
  44070e:	mov    rdx,rbx
  440711:	lea    rcx,[rbx+rax*1]
  440715:	not    rdx
  440718:	movzx  edx,BYTE PTR [rcx+rdx*1]
  44071c:	cmp    dl,0x2f
  44071f:	je     0x44072b
  440721:	cmp    dl,0x5c
  440724:	je     0x44072b
  440726:	mov    WORD PTR [rax],0x2f
  44072b:	mov    rcx,rsi
  44072e:	call   0x438060
  440733:	mov    rcx,rbx
  440736:	mov    rdx,rax
  440739:	call   0x43f058
  44073e:	jmp    0x43f7e9
  440743:	mov    rbx,QWORD PTR [rip+0x1897e]        # 0x4590c8
  44074a:	call   QWORD PTR [rip+0x1aecc]        # 0x45b61c
  440750:	lea    rdx,[rip+0x32ab]        # 0x443a02
  440757:	lea    rcx,[rax+0x60]
  44075b:	mov    r8,rbx
  44075e:	call   0x403990
  440763:	jmp    0x43f910
  440768:	cmp    DWORD PTR [rip+0x18941],0x0        # 0x4590b0
  44076f:	mov    QWORD PTR [rsp+0x38],0x0
  440778:	jne    0x44078c
  44077a:	mov    rdx,QWORD PTR [rsp+0x148]
  440782:	mov    rax,QWORD PTR [rdx+rax*8-0x8]
  440787:	mov    QWORD PTR [rsp+0x38],rax
  44078c:	mov    eax,DWORD PTR [rip+0x1896a]        # 0x4590fc
  440792:	mov    rsi,QWORD PTR [rip+0x18967]        # 0x459100
  440799:	test   eax,eax
  44079b:	lea    ebx,[rax-0x1]
  44079e:	je     0x4407cb
  4407a0:	add    rbx,0x1
  4407a4:	imul   rbx,rbx,0x50
  4407a8:	add    rbx,rsi
  4407ab:	mov    eax,DWORD PTR [rsi+0x18]
  4407ae:	test   eax,eax
  4407b0:	je     0x4407c2
  4407b2:	mov    ecx,eax
  4407b4:	mov    edx,0x18
  4407b9:	call   0x438600
  4407be:	mov    QWORD PTR [rsi+0x10],rax
  4407c2:	add    rsi,0x50
  4407c6:	cmp    rsi,rbx
  4407c9:	jne    0x4407ab
  4407cb:	mov    r14,QWORD PTR [rip+0x18936]        # 0x459108
  4407d2:	lea    rax,[rsp+0xb0]
  4407da:	mov    QWORD PTR [rsp+0x60],rax
  4407df:	test   r14,r14
  4407e2:	je     0x440a1d
  4407e8:	mov    rax,QWORD PTR [rip+0x1ae2d]        # 0x45b61c
  4407ef:	mov    rsi,r14
  4407f2:	mov    QWORD PTR [rsp+0x68],rax
  4407f7:	mov    rdi,QWORD PTR [rsp+0x60]
  4407fc:	mov    r15d,DWORD PTR [rip+0x18899]        # 0x45909c
  440803:	mov    QWORD PTR [rdi],0x0
  44080a:	mov    QWORD PTR [rdi+0x8],0x0
  440812:	test   r15d,r15d
  440815:	mov    QWORD PTR [rdi+0x10],0x0
  44081d:	mov    QWORD PTR [rdi+0x18],0x0
  440825:	mov    QWORD PTR [rdi+0x20],0x0
  44082d:	mov    rax,QWORD PTR [rsi+0x8]
  440831:	cmove  rax,QWORD PTR [rsi]
  440835:	mov    QWORD PTR [rsp+0xd0],rax
  44083d:	mov    eax,DWORD PTR [rip+0x1884d]        # 0x459090
  440843:	test   eax,eax
  440845:	mov    DWORD PTR [rsp+0x58],eax
  440849:	mov    eax,0x0
  44084e:	mov    r15,rax
  440851:	mov    eax,DWORD PTR [rsi+0x28]
  440854:	cmovne r15,rdi
  440858:	test   eax,eax
  44085a:	je     0x440d2a
  440860:	mov    QWORD PTR [rsp+0x48],0x0
  440869:	xor    ebx,ebx
  44086b:	mov    r11,QWORD PTR [rsp+0x48]
  440870:	mov    edx,r11d
  440873:	mov    DWORD PTR [rsp+0x40],r11d
  440878:	lea    rcx,[rdx+rdx*8]
  44087c:	mov    rdx,QWORD PTR [rsi+0x20]
  440880:	lea    rdi,[rdx+rcx*8]
  440884:	mov    r12,QWORD PTR [rdi+0x20]
  440888:	test   r12,r12
  44088b:	setne  r14b
  44088f:	test   r11d,r11d
  440892:	je     0x440ca6
  440898:	test   r14b,r14b
  44089b:	je     0x440ca6
  4408a1:	mov    ecx,DWORD PTR [rsp+0x40]
  4408a5:	add    ecx,0x1
  4408a8:	cmp    ecx,eax
  4408aa:	mov    DWORD PTR [rsp+0x50],ecx
  4408ae:	je     0x4408b4
  4408b0:	add    DWORD PTR [rsi+0x2c],0x1
  4408b4:	mov    r11d,DWORD PTR [rdi+0x38]
  4408b8:	mov    rcx,QWORD PTR [rdi+0x30]
  4408bc:	test   r11d,r11d
  4408bf:	je     0x44096c
  4408c5:	mov    r13,QWORD PTR [rip+0x18834]        # 0x459100
  4408cc:	mov    rdx,rcx
  4408cf:	xor    r8d,r8d
  4408d2:	xor    eax,eax
  4408d4:	jmp    0x440901
  4408d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4408e0:	lea    r9,[rdx+0x4]
  4408e4:	mov    edx,DWORD PTR [rdx+0x4]
  4408e7:	add    eax,0x1
  4408ea:	add    eax,0x1
  4408ed:	lea    r8,[rdx+rdx*4]
  4408f1:	lea    rdx,[r9+0x4]
  4408f5:	shl    r8,0x4
  4408f9:	add    r8,r13
  4408fc:	cmp    eax,r11d
  4408ff:	je     0x44096c
  440901:	mov    r9d,DWORD PTR [rdx]
  440904:	test   r9d,r9d
  440907:	je     0x4408e0
  440909:	lea    r10,[r9+r9*2]
  44090d:	mov    r9,QWORD PTR [r8+0x10]
  440911:	test   r15,r15
  440914:	lea    rbx,[r9+r10*8]
  440918:	je     0x4409c6
  44091e:	test   BYTE PTR [rbx+0x10],0x1
  440922:	jne    0x440928
  440924:	add    DWORD PTR [r15],0x1
  440928:	mov    r9,QWORD PTR [rbx]
  44092b:	test   r9,r9
  44092e:	jne    0x44093a
  440930:	test   r14b,r14b
  440933:	je     0x44093a
  440935:	add    DWORD PTR [r15+0x4],0x1
  44093a:	movzx  r10d,BYTE PTR [rbx+0x10]
  44093f:	mov    ebp,r10d
  440942:	or     ebp,0x1
  440945:	cmp    BYTE PTR [rdi+0x29],0x0
  440949:	mov    BYTE PTR [rbx+0x10],bpl
  44094d:	js     0x440957
  44094f:	or     r10d,0x3
  440953:	mov    BYTE PTR [rbx+0x10],r10b
  440957:	add    r9,r12
  44095a:	add    eax,0x1
  44095d:	mov    QWORD PTR [rbx],r9
  440960:	cmp    eax,r11d
  440963:	mov    r9,rdx
  440966:	lea    rdx,[r9+0x4]
  44096a:	jne    0x440901
  44096c:	call   0x43f100
  440971:	mov    r14d,DWORD PTR [rsp+0x40]
  440976:	mov    QWORD PTR [rdi+0x30],0x0
  44097e:	mov    DWORD PTR [rdi+0x38],0xffffffff
  440985:	mov    eax,DWORD PTR [rsi+0x28]
  440988:	test   r14d,r14d
  44098b:	je     0x4409d1
  44098d:	cmp    eax,DWORD PTR [rsp+0x50]
  440991:	je     0x4409d7
  440993:	mov    r13d,DWORD PTR [rip+0x186fa]        # 0x459094
  44099a:	test   r13d,r13d
  44099d:	je     0x440cb6
  4409a3:	test   rbx,rbx
  4409a6:	mov    rdx,rbx
  4409a9:	je     0x440d04
  4409af:	mov    rcx,QWORD PTR [rdx+0x8]
  4409b3:	mov    QWORD PTR [rdi+0x40],rcx
  4409b7:	mov    QWORD PTR [rdx+0x8],rdi
  4409bb:	add    QWORD PTR [rsp+0x48],0x1
  4409c1:	jmp    0x44086b
  4409c6:	mov    r9,QWORD PTR [rbx]
  4409c9:	jmp    0x44093a
  4409ce:	mov    eax,DWORD PTR [rsi+0x28]
  4409d1:	cmp    DWORD PTR [rsp+0x50],eax
  4409d5:	jne    0x4409bb
  4409d7:	test   rbx,rbx
  4409da:	je     0x440d2a
  4409e0:	mov    ebp,DWORD PTR [rsp+0x58]
  4409e4:	test   ebp,ebp
  4409e6:	je     0x440a10
  4409e8:	mov    rcx,QWORD PTR [rsp+0x60]
  4409ed:	lea    rdx,[rip+0x313b]        # 0x443b2f
  4409f4:	call   0x402be0
  4409f9:	mov    rax,QWORD PTR [rsp+0x68]
  4409fe:	call   rax
  440a00:	lea    rdx,[rip+0x3131]        # 0x443b38
  440a07:	lea    rcx,[rax+0x30]
  440a0b:	call   0x403990
  440a10:	mov    rsi,QWORD PTR [rsi+0x50]
  440a14:	test   rsi,rsi
  440a17:	jne    0x4407f7
  440a1d:	cmp    QWORD PTR [rsp+0x38],0x0
  440a23:	je     0x440a6f
  440a25:	mov    r8d,DWORD PTR [rip+0x186c0]        # 0x4590ec
  440a2c:	lea    rax,[rip+0xfffffffffffc111d]        # 0x401b50
  440a33:	mov    rdx,QWORD PTR [rip+0x186b6]        # 0x4590f0
  440a3a:	mov    rcx,QWORD PTR [rsp+0x38]
  440a3f:	mov    r9d,0x10
  440a45:	mov    QWORD PTR [rsp+0x20],rax
  440a4a:	call   0x43f168
  440a4f:	test   rax,rax
  440a52:	je     0x441757
  440a58:	mov    eax,DWORD PTR [rax+0x8]
  440a5b:	imul   rax,rax,0x50
  440a5f:	add    rax,QWORD PTR [rip+0x1869a]        # 0x459100
  440a66:	mov    rax,QWORD PTR [rax+0x40]
  440a6a:	mov    QWORD PTR [rsp+0x38],rax
  440a6f:	cmp    DWORD PTR [rip+0x159a],0x0        # 0x442010
  440a76:	je     0x440a85
  440a78:	cmp    DWORD PTR [rip+0x18621],0x0        # 0x4590a0
  440a7f:	jne    0x4410a9
  440a85:	mov    ecx,DWORD PTR [rip+0x18671]        # 0x4590fc
  440a8b:	mov    rdx,QWORD PTR [rip+0x1866e]        # 0x459100
  440a92:	mov    QWORD PTR [rsp+0x58],0x0
  440a9b:	mov    QWORD PTR [rsp+0x40],0x0
  440aa4:	test   ecx,ecx
  440aa6:	lea    eax,[rcx-0x1]
  440aa9:	je     0x440fd8
  440aaf:	imul   rax,rax,0x50
  440ab3:	lea    r15,[rdx+0x20]
  440ab7:	lea    rax,[rdx+rax*1+0x70]
  440abc:	mov    QWORD PTR [rsp+0x78],rax
  440ac1:	mov    rax,QWORD PTR [rip+0x1ab54]        # 0x45b61c
  440ac8:	mov    QWORD PTR [rsp+0x80],rax
  440ad0:	mov    QWORD PTR [rsp+0x68],rax
  440ad5:	mov    QWORD PTR [rsp+0x88],rax
  440add:	mov    QWORD PTR [rsp+0x90],rax
  440ae5:	jmp    0x440b1c
  440ae7:	nop    WORD PTR [rax+rax*1+0x0]
  440af0:	mov    rdx,QWORD PTR [r15+0x20]
  440af4:	movzx  eax,BYTE PTR [rdx]
  440af7:	test   al,al
  440af9:	je     0x440b26
  440afb:	cmp    BYTE PTR [rdx+0x1],0x3a
  440aff:	je     0x4410a0
  440b05:	cmp    al,0x5c
  440b07:	je     0x440b0d
  440b09:	cmp    al,0x2f
  440b0b:	jne    0x440b26
  440b0d:	add    r15,0x50
  440b11:	cmp    r15,QWORD PTR [rsp+0x78]
  440b16:	je     0x440fb2
  440b1c:	mov    edi,DWORD PTR [rip+0x1854e]        # 0x459070
  440b22:	test   edi,edi
  440b24:	jne    0x440af0
  440b26:	mov    rax,QWORD PTR [r15+0x28]
  440b2a:	test   rax,rax
  440b2d:	je     0x440b46
  440b2f:	xor    edx,edx
  440b31:	jmp    0x440b36
  440b33:	mov    rax,rcx
  440b36:	mov    rcx,QWORD PTR [rax+0x48]
  440b3a:	mov    QWORD PTR [rax+0x48],rdx
  440b3e:	mov    rdx,rax
  440b41:	test   rcx,rcx
  440b44:	jne    0x440b33
  440b46:	mov    QWORD PTR [r15+0x28],rax
  440b4a:	mov    eax,DWORD PTR [r15-0x8]
  440b4e:	mov    rsi,QWORD PTR [r15-0x10]
  440b52:	test   eax,eax
  440b54:	lea    ebx,[rax-0x1]
  440b57:	je     0x440e37
  440b5d:	mov    edi,DWORD PTR [rip+0x18531]        # 0x459094
  440b63:	test   edi,edi
  440b65:	jne    0x440bc0
  440b67:	mov    rbp,QWORD PTR [rsi+0x8]
  440b6b:	test   rbp,rbp
  440b6e:	je     0x440b92
  440b70:	xor    eax,eax
  440b72:	jmp    0x440b77
  440b74:	mov    rbp,r12
  440b77:	mov    r12,QWORD PTR [rbp+0x28]
  440b7b:	mov    rdx,rbp
  440b7e:	mov    QWORD PTR [rbp+0x28],rax
  440b82:	mov    rcx,r15
  440b85:	call   0x402070
  440b8a:	test   r12,r12
  440b8d:	mov    rax,rbp
  440b90:	jne    0x440b74
  440b92:	mov    QWORD PTR [rsi+0x8],rbp
  440b96:	test   BYTE PTR [rsi+0x10],0x1
  440b9a:	je     0x440bab
  440b9c:	add    DWORD PTR [r15],0x1
  440ba0:	cmp    QWORD PTR [rsi],0x0
  440ba4:	je     0x440bab
  440ba6:	add    DWORD PTR [r15+0x4],0x1
  440bab:	add    rsi,0x18
  440baf:	test   ebx,ebx
  440bb1:	lea    eax,[rbx-0x1]
  440bb4:	je     0x440e37
  440bba:	test   edi,edi
  440bbc:	mov    ebx,eax
  440bbe:	je     0x440b67
  440bc0:	mov    r14,QWORD PTR [rsi+0x8]
  440bc4:	test   r14,r14
  440bc7:	je     0x440b96
  440bc9:	xor    edx,edx
  440bcb:	jmp    0x440bd0
  440bcd:	mov    r14,rax
  440bd0:	mov    rax,QWORD PTR [r14+0x40]
  440bd4:	mov    DWORD PTR [r14+0x38],ebx
  440bd8:	mov    QWORD PTR [r14+0x40],rdx
  440bdc:	mov    rdx,r14
  440bdf:	test   rax,rax
  440be2:	jne    0x440bcd
  440be4:	mov    QWORD PTR [rsi+0x8],r14
  440be8:	xor    ebp,ebp
  440bea:	mov    r12,QWORD PTR [r14+0x8]
  440bee:	test   r12,r12
  440bf1:	je     0x440c32
  440bf3:	mov    r13d,DWORD PTR [rip+0x184b2]        # 0x4590ac
  440bfa:	jmp    0x440c0a
  440bfc:	nop    DWORD PTR [rax+0x0]
  440c00:	mov    r12,QWORD PTR [r12+0x38]
  440c05:	test   r12,r12
  440c08:	je     0x440c32
  440c0a:	mov    rax,QWORD PTR [r12]
  440c0e:	cmp    ebx,DWORD PTR [rax+0x38]
  440c11:	je     0x440c18
  440c13:	add    rbp,QWORD PTR [r12+0x10]
  440c18:	test   r13d,r13d
  440c1b:	je     0x440c00
  440c1d:	mov    rdx,r12
  440c20:	mov    rcx,r15
  440c23:	call   0x402070
  440c28:	mov    r12,QWORD PTR [r12+0x38]
  440c2d:	test   r12,r12
  440c30:	jne    0x440c0a
  440c32:	mov    rax,QWORD PTR [r14]
  440c35:	test   rax,rax
  440c38:	je     0x440c51
  440c3a:	nop    WORD PTR [rax+rax*1+0x0]
  440c40:	mov    rdx,QWORD PTR [rax+0x10]
  440c44:	mov    QWORD PTR [rax+0x18],rdx
  440c48:	mov    rax,QWORD PTR [rax+0x30]
  440c4c:	test   rax,rax
  440c4f:	jne    0x440c40
  440c51:	mov    r14,QWORD PTR [r14+0x40]
  440c55:	test   r14,r14
  440c58:	jne    0x440bea
  440c5a:	mov    r11,QWORD PTR [rsi+0x8]
  440c5e:	test   r11,r11
  440c61:	je     0x440e12
  440c67:	mov    rcx,r11
  440c6a:	mov    rax,QWORD PTR [rcx]
  440c6d:	jmp    0x440c87
  440c6f:	nop
  440c70:	test   BYTE PTR [rax+0x21],0x1
  440c74:	mov    rdx,QWORD PTR [rax+0x8]
  440c78:	jne    0x440c83
  440c7a:	cmp    ebx,DWORD PTR [rdx+0x38]
  440c7d:	je     0x440d60
  440c83:	mov    rax,QWORD PTR [rax+0x30]
  440c87:	test   rax,rax
  440c8a:	jne    0x440c70
  440c8c:	mov    rax,QWORD PTR [rcx+0x30]
  440c90:	test   rax,rax
  440c93:	je     0x440dfd
  440c99:	mov    QWORD PTR [rcx+0x30],0x0
  440ca1:	mov    rcx,QWORD PTR [rax]
  440ca4:	jmp    0x440c83
  440ca6:	mov    eax,DWORD PTR [rsp+0x40]
  440caa:	add    eax,0x1
  440cad:	mov    DWORD PTR [rsp+0x50],eax
  440cb1:	jmp    0x4408b4
  440cb6:	mov    r12d,DWORD PTR [rip+0x183ef]        # 0x4590ac
  440cbd:	test   r12d,r12d
  440cc0:	je     0x4409bb
  440cc6:	mov    rdi,QWORD PTR [rdi]
  440cc9:	test   rdi,rdi
  440ccc:	jne    0x440ce0
  440cce:	jmp    0x4409bb
  440cd3:	mov    rdi,QWORD PTR [rdi+0x30]
  440cd7:	test   rdi,rdi
  440cda:	je     0x4409ce
  440ce0:	mov    rax,QWORD PTR [rbx+0x8]
  440ce4:	test   r15,r15
  440ce7:	mov    QWORD PTR [rdi+0x28],rax
  440ceb:	mov    QWORD PTR [rbx+0x8],rdi
  440cef:	je     0x440cd3
  440cf1:	cmp    BYTE PTR [rdi+0x20],0x0
  440cf5:	js     0x440cd3
  440cf7:	mov    rdx,rdi
  440cfa:	mov    rcx,r15
  440cfd:	call   0x402070
  440d02:	jmp    0x440cd3
  440d04:	mov    edx,DWORD PTR [rsi+0x40]
  440d07:	mov    ecx,DWORD PTR [rsi+0x3c]
  440d0a:	lea    rdx,[rdx+rdx*4]
  440d0e:	lea    rcx,[rcx+rcx*2]
  440d12:	shl    rdx,0x4
  440d16:	add    rdx,QWORD PTR [rip+0x183e3]        # 0x459100
  440d1d:	mov    rdx,QWORD PTR [rdx+0x10]
  440d21:	lea    rdx,[rdx+rcx*8]
  440d25:	jmp    0x4409af
  440d2a:	mov    rdi,QWORD PTR [rsi]
  440d2d:	mov    rbx,QWORD PTR [rip+0x18394]        # 0x4590c8
  440d34:	call   QWORD PTR [rip+0x1a8e2]        # 0x45b61c
  440d3a:	lea    rdx,[rip+0x2dd8]        # 0x443b19
  440d41:	lea    rcx,[rax+0x60]
  440d45:	mov    r9,rdi
  440d48:	mov    r8,rbx
  440d4b:	call   0x403990
  440d50:	mov    eax,DWORD PTR [rip+0x1833a]        # 0x459090
  440d56:	mov    DWORD PTR [rsp+0x58],eax
  440d5a:	jmp    0x4409e0
  440d5f:	nop
  440d60:	cmp    QWORD PTR [rdx+0x30],0x0
  440d65:	jne    0x440c83
  440d6b:	cmp    rdx,r11
  440d6e:	jne    0x440e2b
  440d74:	mov    r10,QWORD PTR [rcx+0x30]
  440d78:	mov    r13,QWORD PTR [rax+0x18]
  440d7c:	mov    r12,rax
  440d7f:	test   r10,r10
  440d82:	mov    r8,r13
  440d85:	je     0x440e26
  440d8b:	mov    rdx,r10
  440d8e:	xchg   ax,ax
  440d90:	mov    r9,QWORD PTR [rdx+0x18]
  440d94:	cmp    r9,r8
  440d97:	jge    0x440d9f
  440d99:	mov    r12,rdx
  440d9c:	mov    r8,r9
  440d9f:	mov    rdx,QWORD PTR [rdx]
  440da2:	mov    rdx,QWORD PTR [rdx+0x30]
  440da6:	test   rdx,rdx
  440da9:	jne    0x440d90
  440dab:	sub    r13,r8
  440dae:	or     BYTE PTR [r12+0x21],0x1
  440db4:	mov    QWORD PTR [rax+0x18],r13
  440db8:	add    rbp,r8
  440dbb:	mov    rdx,QWORD PTR [rcx+0x30]
  440dbf:	test   rdx,rdx
  440dc2:	je     0x440dd4
  440dc4:	sub    QWORD PTR [rdx+0x18],r8
  440dc8:	mov    rdx,QWORD PTR [rdx]
  440dcb:	mov    rdx,QWORD PTR [rdx+0x30]
  440dcf:	test   rdx,rdx
  440dd2:	jne    0x440dc4
  440dd4:	mov    rdx,QWORD PTR [r12]
  440dd8:	cmp    rdx,rcx
  440ddb:	jne    0x440de4
  440ddd:	jmp    0x440e1a
  440ddf:	nop
  440de0:	mov    r10,QWORD PTR [rcx+0x30]
  440de4:	mov    QWORD PTR [rcx+0x30],0x0
  440dec:	mov    rcx,QWORD PTR [r10]
  440def:	cmp    rdx,rcx
  440df2:	jne    0x440de0
  440df4:	mov    rax,QWORD PTR [r10+0x30]
  440df8:	jmp    0x440c87
  440dfd:	mov    DWORD PTR [r11+0x38],0xffffffff
  440e05:	mov    r11,QWORD PTR [r11+0x40]
  440e09:	test   r11,r11
  440e0c:	jne    0x440c67
  440e12:	mov    QWORD PTR [rsi],rbp
  440e15:	jmp    0x440b96
  440e1a:	mov    r10,rax
  440e1d:	mov    rax,QWORD PTR [r10+0x30]
  440e21:	jmp    0x440c87
  440e26:	xor    r13d,r13d
  440e29:	jmp    0x440dae
  440e2b:	mov    rcx,rdx
  440e2e:	mov    QWORD PTR [rdx+0x30],rax
  440e32:	jmp    0x440c6a
  440e37:	lea    rdx,[rip+0x2d33]        # 0x443b71
  440e3e:	mov    rcx,r15
  440e41:	call   0x402be0
  440e46:	mov    esi,DWORD PTR [rip+0x11c4]        # 0x442010
  440e4c:	mov    eax,DWORD PTR [r15]
  440e4f:	add    DWORD PTR [rip+0x18287],eax        # 0x4590dc
  440e55:	mov    eax,DWORD PTR [r15+0x4]
  440e59:	add    DWORD PTR [rip+0x18279],eax        # 0x4590d8
  440e5f:	test   esi,esi
  440e61:	je     0x440b0d
  440e67:	mov    ebx,DWORD PTR [rip+0x18233]        # 0x4590a0
  440e6d:	test   ebx,ebx
  440e6f:	je     0x441199
  440e75:	mov    r8,QWORD PTR [r15-0x20]
  440e79:	mov    rcx,QWORD PTR [rsp+0x40]
  440e7e:	lea    rdx,[rip+0x2cf1]        # 0x443b76
  440e85:	call   0x43f460
  440e8a:	mov    rbx,QWORD PTR [r15+0x28]
  440e8e:	test   rbx,rbx
  440e91:	je     0x440eea
  440e93:	mov    rax,QWORD PTR [rbx+0x20]
  440e97:	mov    r11d,DWORD PTR [rip+0x181fe]        # 0x45909c
  440e9e:	lea    rdx,[rip+0x289f]        # 0x443744
  440ea5:	mov    rsi,QWORD PTR [rbx+0x8]
  440ea9:	lea    rcx,[rip+0x181a0]        # 0x459050
  440eb0:	mov    r8,QWORD PTR [rax+0x20]
  440eb4:	test   r11d,r11d
  440eb7:	cmove  rsi,QWORD PTR [rbx]
  440ebb:	call   0x43f490
  440ec0:	mov    r8d,DWORD PTR [rbx+0x3c]
  440ec4:	mov    rcx,QWORD PTR [rsp+0x40]
  440ec9:	lea    r9,[rip+0x18180]        # 0x459050
  440ed0:	lea    rdx,[rip+0x2ca8]        # 0x443b7f
  440ed7:	mov    QWORD PTR [rsp+0x20],rsi
  440edc:	call   0x43f460
  440ee1:	mov    rbx,QWORD PTR [rbx+0x48]
  440ee5:	test   rbx,rbx
  440ee8:	jne    0x440e93
  440eea:	cmp    DWORD PTR [r15-0x8],0x1
  440eef:	mov    rax,QWORD PTR [r15-0x10]
  440ef3:	mov    esi,0x1
  440ef8:	lea    rbp,[rip+0x29c5]        # 0x4438c4
  440eff:	lea    rdi,[rip+0x29b5]        # 0x4438bb
  440f06:	lea    r12,[rax+0x18]
  440f0a:	jbe    0x441187
  440f10:	test   BYTE PTR [r12+0x10],0x1
  440f16:	jne    0x441150
  440f1c:	mov    r10d,DWORD PTR [rip+0x18189]        # 0x4590ac
  440f23:	test   r10d,r10d
  440f26:	je     0x440f72
  440f28:	mov    rbx,QWORD PTR [r12+0x8]
  440f2d:	test   rbx,rbx
  440f30:	je     0x440f72
  440f32:	test   BYTE PTR [rbx+0x20],0xa0
  440f36:	jne    0x440f69
  440f38:	mov    rax,QWORD PTR [rbx]
  440f3b:	lea    r9,[rip+0x2971]        # 0x4438b3
  440f42:	cmp    QWORD PTR [rax+0x20],0x0
  440f47:	je     0x440f55
  440f49:	cmp    QWORD PTR [rbx+0x10],0x0
  440f4e:	mov    r9,rdi
  440f51:	cmovg  r9,rbp
  440f55:	mov    rcx,QWORD PTR [rsp+0x40]
  440f5a:	lea    rdx,[rip+0x2c3f]        # 0x443ba0
  440f61:	mov    r8d,esi
  440f64:	call   0x43f460
  440f69:	mov    rbx,QWORD PTR [rbx+0x28]
  440f6d:	test   rbx,rbx
  440f70:	jne    0x440f32
  440f72:	add    esi,0x1
  440f75:	add    r12,0x18
  440f79:	cmp    esi,DWORD PTR [r15-0x8]
  440f7d:	jb     0x440f10
  440f7f:	mov    rax,QWORD PTR [rsp+0x88]
  440f87:	mov    QWORD PTR [rsp+0x50],rax
  440f8c:	mov    rax,QWORD PTR [rsp+0x50]
  440f91:	add    r15,0x50
  440f95:	call   rax
  440f97:	lea    rdx,[rip+0x2b9a]        # 0x443b38
  440f9e:	lea    rcx,[rax+0x30]
  440fa2:	call   0x403990
  440fa7:	cmp    r15,QWORD PTR [rsp+0x78]
  440fac:	jne    0x440b1c
  440fb2:	cmp    DWORD PTR [rip+0x1057],0x0        # 0x442010
  440fb9:	je     0x440fd8
  440fbb:	cmp    DWORD PTR [rip+0x180de],0x0        # 0x4590a0
  440fc2:	je     0x440fd8
  440fc4:	mov    rcx,QWORD PTR [rsp+0x40]
  440fc9:	call   0x43f150
  440fce:	mov    rcx,QWORD PTR [rsp+0x58]
  440fd3:	call   0x43f100
  440fd8:	cmp    QWORD PTR [rsp+0x38],0x0
  440fde:	jne    0x440ff1
  440fe0:	mov    edx,DWORD PTR [rip+0x180f2]        # 0x4590d8
  440fe6:	mov    ecx,DWORD PTR [rip+0x180f0]        # 0x4590dc
  440fec:	call   0x402b70
  440ff1:	mov    eax,DWORD PTR [rip+0x18105]        # 0x4590fc
  440ff7:	mov    rsi,QWORD PTR [rip+0x18102]        # 0x459100
  440ffe:	test   eax,eax
  441000:	lea    ebx,[rax-0x1]
  441003:	je     0x441020
  441005:	mov    eax,ebx
  441007:	lea    rax,[rax+rax*4]
  44100b:	shl    rax,0x4
  44100f:	mov    rcx,QWORD PTR [rsi+rax*1+0x10]
  441014:	call   0x43f100
  441019:	test   ebx,ebx
  44101b:	lea    ebx,[rbx-0x1]
  44101e:	jne    0x441005
  441020:	mov    rcx,QWORD PTR [rip+0x180d9]        # 0x459100
  441027:	call   0x43f100
  44102c:	mov    eax,DWORD PTR [rip+0x180ba]        # 0x4590ec
  441032:	mov    rsi,QWORD PTR [rip+0x180b7]        # 0x4590f0
  441039:	test   eax,eax
  44103b:	lea    ebx,[rax-0x1]
  44103e:	je     0x441056
  441040:	mov    eax,ebx
  441042:	shl    rax,0x4
  441046:	mov    rcx,QWORD PTR [rsi+rax*1]
  44104a:	call   0x43f100
  44104f:	test   ebx,ebx
  441051:	lea    ebx,[rbx-0x1]
  441054:	jne    0x441040
  441056:	mov    rcx,QWORD PTR [rip+0x18093]        # 0x4590f0
  44105d:	call   0x43f100
  441062:	mov    rcx,QWORD PTR [rip+0x1809f]        # 0x459108
  441069:	test   rcx,rcx
  44106c:	je     0x44108a
  44106e:	mov    rax,QWORD PTR [rcx+0x50]
  441072:	mov    QWORD PTR [rip+0x1808f],rax        # 0x459108
  441079:	call   0x401690
  44107e:	mov    rcx,QWORD PTR [rip+0x18083]        # 0x459108
  441085:	test   rcx,rcx
  441088:	jne    0x44106e
  44108a:	xor    eax,eax
  44108c:	add    rsp,0xf8
  441093:	pop    rbx
  441094:	pop    rsi
  441095:	pop    rdi
  441096:	pop    rbp
  441097:	pop    r12
  441099:	pop    r13
  44109b:	pop    r14
  44109d:	pop    r15
  44109f:	ret    
  4410a0:	movzx  eax,BYTE PTR [rdx+0x2]
  4410a4:	jmp    0x440b05
  4410a9:	mov    rcx,QWORD PTR [rsp+0x38]
  4410ae:	call   0x438060
  4410b3:	mov    rbx,rax
  4410b6:	or     rcx,0xffffffffffffffff
  4410ba:	xor    eax,eax
  4410bc:	mov    rdi,rbx
  4410bf:	repnz scas al,BYTE PTR es:[rdi]
  4410c1:	mov    rsi,rcx
  4410c4:	not    rsi
  4410c7:	mov    rcx,rsi
  4410ca:	add    rcx,0x5
  4410ce:	call   0x4385d0
  4410d3:	lea    r9,[rip+0x2a60]        # 0x443b3a
  4410da:	lea    rdx,[rip+0x2a5f]        # 0x443b40
  4410e1:	mov    r8,rbx
  4410e4:	mov    rcx,rax
  4410e7:	mov    rdi,rax
  4410ea:	mov    QWORD PTR [rsp+0x58],rax
  4410ef:	call   0x43f490
  4410f4:	lea    rdx,[rip+0x2a4a]        # 0x443b45
  4410fb:	mov    rcx,rdi
  4410fe:	call   0x43f128
  441103:	test   rax,rax
  441106:	mov    QWORD PTR [rsp+0x40],rax
  44110b:	je     0x44112a
  44110d:	mov    ecx,DWORD PTR [rip+0x17fe9]        # 0x4590fc
  441113:	mov    rdx,QWORD PTR [rip+0x17fe6]        # 0x459100
  44111a:	test   ecx,ecx
  44111c:	lea    eax,[rcx-0x1]
  44111f:	jne    0x440aaf
  441125:	jmp    0x440fb2
  44112a:	call   QWORD PTR [rip+0x1a4ec]        # 0x45b61c
  441130:	mov    r8,QWORD PTR [rsp+0x58]
  441135:	lea    rcx,[rax+0x60]
  441139:	lea    rdx,[rip+0x2a08]        # 0x443b48
  441140:	call   0x403990
  441145:	jmp    0x440ff1
  44114a:	nop    WORD PTR [rax+rax*1+0x0]
  441150:	mov    r8,QWORD PTR [r12]
  441154:	lea    rdx,[rip+0x25e9]        # 0x443744
  44115b:	lea    rcx,[rip+0x17eee]        # 0x459050
  441162:	call   0x43f490
  441167:	mov    rcx,QWORD PTR [rsp+0x40]
  44116c:	lea    r9,[rip+0x17edd]        # 0x459050
  441173:	lea    rdx,[rip+0x2a18]        # 0x443b92
  44117a:	mov    r8d,esi
  44117d:	call   0x43f460
  441182:	jmp    0x440f1c
  441187:	mov    rax,QWORD PTR [rsp+0x90]
  44118f:	mov    QWORD PTR [rsp+0x50],rax
  441194:	jmp    0x440f8c
  441199:	mov    rax,QWORD PTR [rsp+0x38]
  44119e:	mov    rbx,QWORD PTR [r15+0x20]
  4411a2:	test   rax,rax
  4411a5:	je     0x4411c3
  4411a7:	cmp    DWORD PTR [rip+0x17eea],0x0        # 0x459098
  4411ae:	je     0x4411c3
  4411b0:	mov    rdx,rax
  4411b3:	mov    rcx,rbx
  4411b6:	call   0x43f048
  4411bb:	test   eax,eax
  4411bd:	jne    0x441709
  4411c3:	xor    eax,eax
  4411c5:	or     rcx,0xffffffffffffffff
  4411c9:	mov    rdi,rbx
  4411cc:	repnz scas al,BYTE PTR es:[rdi]
  4411ce:	mov    rax,rcx
  4411d1:	not    rax
  4411d4:	lea    rcx,[rax+0x9]
  4411d8:	call   0x4385d0
  4411dd:	mov    r13,rax
  4411e0:	mov    rdx,rax
  4411e3:	mov    rcx,rbx
  4411e6:	call   0x401a40
  4411eb:	mov    DWORD PTR [rax],0x6f63672e
  4411f1:	mov    WORD PTR [rax+0x4],0x76
  4411f7:	cmp    DWORD PTR [r15],0x0
  4411fb:	je     0x4416d3
  441201:	lea    rdx,[rip+0x293d]        # 0x443b45
  441208:	mov    rcx,r13
  44120b:	call   0x43f128
  441210:	test   rax,rax
  441213:	mov    rbx,rax
  441216:	je     0x441797
  44121c:	mov    rax,QWORD PTR [rsp+0x68]
  441221:	mov    QWORD PTR [rsp+0x50],rax
  441226:	call   rax
  441228:	lea    rdx,[rip+0x297f]        # 0x443bae
  44122f:	lea    rcx,[rax+0x30]
  441233:	mov    r8,r13
  441236:	call   0x403990
  44123b:	mov    rax,QWORD PTR [r15+0x20]
  44123f:	lea    r8,[rip+0x2684]        # 0x4438ca
  441246:	lea    rdx,[rip+0x2970]        # 0x443bbd
  44124d:	xor    r9d,r9d
  441250:	mov    rcx,rbx
  441253:	mov    QWORD PTR [rsp+0x20],rax
  441258:	call   0x43f460
  44125d:	cmp    DWORD PTR [rip+0x17e4c],0x0        # 0x4590b0
  441264:	jne    0x4412e2
  441266:	mov    rax,QWORD PTR [rip+0x17e5b]        # 0x4590c8
  44126d:	lea    r8,[rip+0x2656]        # 0x4438ca
  441274:	lea    rdx,[rip+0x2955]        # 0x443bd0
  44127b:	xor    r9d,r9d
  44127e:	mov    rcx,rbx
  441281:	mov    QWORD PTR [rsp+0x20],rax
  441286:	call   0x43f460
  44128b:	cmp    DWORD PTR [rip+0x17e22],0x0        # 0x4590b4
  441292:	lea    rax,[rip+0x2631]        # 0x4438ca
  441299:	lea    r8,[rip+0x262a]        # 0x4438ca
  4412a0:	cmove  rax,QWORD PTR [rip+0x17e10]        # 0x4590b8
  4412a8:	lea    rdx,[rip+0x2933]        # 0x443be2
  4412af:	xor    r9d,r9d
  4412b2:	mov    rcx,rbx
  4412b5:	mov    QWORD PTR [rsp+0x20],rax
  4412ba:	call   0x43f460
  4412bf:	mov    eax,DWORD PTR [rip+0x17e1f]        # 0x4590e4
  4412c5:	lea    r8,[rip+0x25fe]        # 0x4438ca
  4412cc:	lea    rdx,[rip+0x2920]        # 0x443bf3
  4412d3:	xor    r9d,r9d
  4412d6:	mov    rcx,rbx
  4412d9:	mov    DWORD PTR [rsp+0x20],eax
  4412dd:	call   0x43f460
  4412e2:	mov    eax,DWORD PTR [rip+0x17df8]        # 0x4590e0
  4412e8:	lea    r8,[rip+0x25db]        # 0x4438ca
  4412ef:	lea    rdx,[rip+0x290e]        # 0x443c04
  4412f6:	xor    r9d,r9d
  4412f9:	mov    rcx,rbx
  4412fc:	mov    DWORD PTR [rsp+0x20],eax
  441300:	call   0x43f460
  441305:	mov    rcx,QWORD PTR [r15-0x20]
  441309:	lea    rdx,[rip+0x2909]        # 0x443c19
  441310:	call   0x43f128
  441315:	test   rax,rax
  441318:	mov    QWORD PTR [rsp+0x60],rax
  44131d:	je     0x44176b
  441323:	cmp    QWORD PTR [r15-0x18],0x0
  441328:	lea    rax,[rip+0x2421]        # 0x443750
  44132f:	mov    QWORD PTR [rsp+0x48],rax
  441334:	jne    0x44134f
  441336:	lea    r8,[rip+0x258d]        # 0x4438ca
  44133d:	lea    rdx,[rip+0x28f4]        # 0x443c38
  441344:	xor    r9d,r9d
  441347:	mov    rcx,rbx
  44134a:	call   0x43f460
  44134f:	xor    ebp,ebp
  441351:	cmp    DWORD PTR [rip+0x17d54],0x0        # 0x4590ac
  441358:	je     0x44135e
  44135a:	mov    rbp,QWORD PTR [r15+0x28]
  44135e:	mov    rax,QWORD PTR [r15-0x10]
  441362:	mov    r12d,0x1
  441368:	add    rax,0x18
  44136c:	cmp    DWORD PTR [r15-0x8],0x1
  441371:	jbe    0x4415af
  441377:	mov    QWORD PTR [rsp+0x70],r15
  44137c:	mov    QWORD PTR [rsp+0x98],r13
  441384:	mov    r15,rax
  441387:	test   rbp,rbp
  44138a:	je     0x441471
  441390:	cmp    DWORD PTR [rbp+0x3c],r12d
  441394:	jne    0x441473
  44139a:	mov    rax,QWORD PTR [rbp+0x20]
  44139e:	mov    r9,QWORD PTR [rax+0x50]
  4413a2:	mov    rsi,QWORD PTR [rax+0x68]
  4413a6:	mov    rdi,QWORD PTR [rax+0x20]
  4413aa:	test   r9,r9
  4413ad:	je     0x4413c4
  4413af:	nop
  4413b0:	test   BYTE PTR [r9+0x20],0x4
  4413b5:	je     0x4413bb
  4413b7:	sub    rsi,QWORD PTR [r9+0x10]
  4413bb:	mov    r9,QWORD PTR [r9+0x38]
  4413bf:	test   r9,r9
  4413c2:	jne    0x4413b0
  4413c4:	mov    r9d,DWORD PTR [rip+0x17cd1]        # 0x45909c
  4413cb:	mov    r8,QWORD PTR [rbp+0x8]
  4413cf:	lea    rdx,[rip+0x2886]        # 0x443c5c
  4413d6:	mov    rcx,rbx
  4413d9:	test   r9d,r9d
  4413dc:	cmove  r8,QWORD PTR [rbp+0x0]
  4413e1:	call   0x43f460
  4413e6:	lea    rdx,[rip+0x2357]        # 0x443744
  4413ed:	lea    rcx,[rip+0x17c5c]        # 0x459050
  4413f4:	mov    r8,rdi
  4413f7:	call   0x43f490
  4413fc:	lea    r8,[rip+0x17c4d]        # 0x459050
  441403:	lea    rdx,[rip+0x285e]        # 0x443c68
  44140a:	mov    rcx,rbx
  44140d:	call   0x43f460
  441412:	xor    r8d,r8d
  441415:	mov    rdx,rdi
  441418:	mov    rcx,rsi
  44141b:	call   0x4027f0
  441420:	lea    rdx,[rip+0x284c]        # 0x443c73
  441427:	mov    r8,rax
  44142a:	mov    rcx,rbx
  44142d:	call   0x43f460
  441432:	mov    eax,DWORD PTR [rbp+0x28]
  441435:	mov    ecx,DWORD PTR [rbp+0x2c]
  441438:	xor    r8d,r8d
  44143b:	lea    edx,[rax-0x2]
  44143e:	call   0x4027f0
  441443:	lea    rdx,[rip+0x2836]        # 0x443c80
  44144a:	mov    r8,rax
  44144d:	mov    rcx,rbx
  441450:	call   0x43f460
  441455:	lea    rdx,[rip+0x26dc]        # 0x443b38
  44145c:	mov    rcx,rbx
  44145f:	call   0x43f460
  441464:	mov    rbp,QWORD PTR [rbp+0x48]
  441468:	test   rbp,rbp
  44146b:	jne    0x441390
  441471:	xor    ebp,ebp
  441473:	cmp    QWORD PTR [rsp+0x48],0x0
  441479:	je     0x441680
  44147f:	mov    rcx,QWORD PTR [rsp+0x60]
  441484:	call   0x401f30
  441489:	test   rax,rax
  44148c:	mov    QWORD PTR [rsp+0x48],rax
  441491:	je     0x441680
  441497:	mov    rsi,rax
  44149a:	movzx  eax,BYTE PTR [r15+0x10]
  44149f:	lea    r8,[rip+0x2424]        # 0x4438ca
  4414a6:	test   al,0x1
  4414a8:	je     0x4414ca
  4414aa:	mov    r8,QWORD PTR [r15]
  4414ad:	test   r8,r8
  4414b0:	jne    0x4416b4
  4414b6:	test   al,0x2
  4414b8:	lea    r8,[rip+0x2415]        # 0x4438d4
  4414bf:	lea    rax,[rip+0x2414]        # 0x4438da
  4414c6:	cmovne r8,rax
  4414ca:	lea    rdx,[rip+0x27c3]        # 0x443c94
  4414d1:	mov    rcx,rbx
  4414d4:	mov    QWORD PTR [rsp+0x20],rsi
  4414d9:	mov    r9d,r12d
  4414dc:	call   0x43f460
  4414e1:	mov    ecx,DWORD PTR [rip+0x17bad]        # 0x459094
  4414e7:	test   ecx,ecx
  4414e9:	je     0x441640
  4414ef:	mov    rdi,QWORD PTR [r15+0x8]
  4414f3:	xor    esi,esi
  4414f5:	xor    r13d,r13d
  4414f8:	test   rdi,rdi
  4414fb:	je     0x44158d
  441501:	test   BYTE PTR [rdi+0x2a],0x2
  441505:	jne    0x441556
  441507:	test   BYTE PTR [r15+0x10],0x1
  44150c:	lea    r14d,[r13+0x1]
  441510:	lea    r8,[rip+0x23b3]        # 0x4438ca
  441517:	je     0x44153c
  441519:	mov    r8,QWORD PTR [rdi+0x20]
  44151d:	test   r8,r8
  441520:	jne    0x441695
  441526:	cmp    BYTE PTR [rdi+0x29],0x0
  44152a:	lea    r8,[rip+0x23af]        # 0x4438e0
  441531:	lea    rax,[rip+0x23ae]        # 0x4438e6
  441538:	cmovs  r8,rax
  44153c:	lea    rdx,[rip+0x275d]        # 0x443ca0
  441543:	mov    DWORD PTR [rsp+0x20],r13d
  441548:	mov    r9d,r12d
  44154b:	mov    rcx,rbx
  44154e:	mov    r13d,r14d
  441551:	call   0x43f460
  441556:	mov    edx,DWORD PTR [rip+0x17b50]        # 0x4590ac
  44155c:	test   edx,edx
  44155e:	je     0x441580
  441560:	mov    r14,QWORD PTR [rdi]
  441563:	test   r14,r14
  441566:	je     0x441580
  441568:	mov    r8,r14
  44156b:	mov    edx,esi
  44156d:	mov    rcx,rbx
  441570:	call   0x4029e0
  441575:	mov    r14,QWORD PTR [r14+0x30]
  441579:	add    esi,eax
  44157b:	test   r14,r14
  44157e:	jne    0x441568
  441580:	mov    rdi,QWORD PTR [rdi+0x40]
  441584:	test   rdi,rdi
  441587:	jne    0x441501
  44158d:	mov    rax,QWORD PTR [rsp+0x70]
  441592:	add    r12d,0x1
  441596:	add    r15,0x18
  44159a:	cmp    r12d,DWORD PTR [rax-0x8]
  44159e:	jb     0x441387
  4415a4:	mov    r13,QWORD PTR [rsp+0x98]
  4415ac:	mov    r15,rax
  4415af:	cmp    QWORD PTR [rsp+0x48],0x0
  4415b5:	je     0x4415f7
  4415b7:	mov    rcx,QWORD PTR [rsp+0x60]
  4415bc:	call   0x401f30
  4415c1:	test   rax,rax
  4415c4:	je     0x4415f7
  4415c6:	lea    r8,[rip+0x22fd]        # 0x4438ca
  4415cd:	lea    rdx,[rip+0x26c0]        # 0x443c94
  4415d4:	mov    r9d,r12d
  4415d7:	mov    rcx,rbx
  4415da:	mov    QWORD PTR [rsp+0x20],rax
  4415df:	add    r12d,0x1
  4415e3:	call   0x43f460
  4415e8:	mov    rcx,QWORD PTR [rsp+0x60]
  4415ed:	call   0x401f30
  4415f2:	test   rax,rax
  4415f5:	jne    0x4415c6
  4415f7:	cmp    QWORD PTR [rsp+0x60],0x0
  4415fd:	je     0x441609
  4415ff:	mov    rcx,QWORD PTR [rsp+0x60]
  441604:	call   0x43f150
  441609:	mov    rcx,rbx
  44160c:	call   0x43f140
  441611:	test   eax,eax
  441613:	je     0x44162f
  441615:	mov    rax,QWORD PTR [rsp+0x68]
  44161a:	call   rax
  44161c:	lea    rdx,[rip+0x2695]        # 0x443cb8
  441623:	lea    rcx,[rax+0x60]
  441627:	mov    r8,r13
  44162a:	call   0x403990
  44162f:	mov    rcx,rbx
  441632:	call   0x43f150
  441637:	jmp    0x4416fc
  44163c:	nop    DWORD PTR [rax+0x0]
  441640:	mov    eax,DWORD PTR [rip+0x17a66]        # 0x4590ac
  441646:	test   eax,eax
  441648:	je     0x44158d
  44164e:	mov    rsi,QWORD PTR [r15+0x8]
  441652:	test   rsi,rsi
  441655:	je     0x44158d
  44165b:	xor    edi,edi
  44165d:	mov    r8,rsi
  441660:	mov    edx,edi
  441662:	mov    rcx,rbx
  441665:	call   0x4029e0
  44166a:	mov    rsi,QWORD PTR [rsi+0x28]
  44166e:	add    edi,eax
  441670:	test   rsi,rsi
  441673:	jne    0x44165d
  441675:	jmp    0x44158d
  44167a:	nop    WORD PTR [rax+rax*1+0x0]
  441680:	mov    QWORD PTR [rsp+0x48],0x0
  441689:	lea    rsi,[rip+0x223c]        # 0x4438cc
  441690:	jmp    0x44149a
  441695:	lea    rdx,[rip+0x20a8]        # 0x443744
  44169c:	lea    rcx,[rip+0x179ad]        # 0x459050
  4416a3:	call   0x43f490
  4416a8:	lea    r8,[rip+0x179a1]        # 0x459050
  4416af:	jmp    0x44153c
  4416b4:	lea    rdx,[rip+0x2089]        # 0x443744
  4416bb:	lea    rcx,[rip+0x1798e]        # 0x459050
  4416c2:	call   0x43f490
  4416c7:	lea    r8,[rip+0x17982]        # 0x459050
  4416ce:	jmp    0x4414ca
  4416d3:	mov    rcx,r13
  4416d6:	call   0x43efb8
  4416db:	mov    rax,QWORD PTR [rip+0x19f3a]        # 0x45b61c
  4416e2:	mov    QWORD PTR [rsp+0x50],rax
  4416e7:	call   rax
  4416e9:	lea    rdx,[rip+0x2609]        # 0x443cf9
  4416f0:	lea    rcx,[rax+0x30]
  4416f4:	mov    r8,r13
  4416f7:	call   0x403990
  4416fc:	mov    rcx,r13
  4416ff:	call   0x43f100
  441704:	jmp    0x440f8c
  441709:	mov    rdi,QWORD PTR [rsp+0x38]
  44170e:	or     r8,0xffffffffffffffff
  441712:	xor    eax,eax
  441714:	mov    rcx,r8
  441717:	repnz scas al,BYTE PTR es:[rdi]
  441719:	mov    rdi,rbx
  44171c:	mov    rdx,rcx
  44171f:	mov    rcx,r8
  441722:	repnz scas al,BYTE PTR es:[rdi]
  441724:	not    rdx
  441727:	mov    rax,rcx
  44172a:	not    rax
  44172d:	lea    rcx,[rdx+rax*1+0x8]
  441732:	call   0x4385d0
  441737:	mov    rcx,QWORD PTR [rsp+0x38]
  44173c:	mov    rdx,rax
  44173f:	mov    r13,rax
  441742:	call   0x401a40
  441747:	mov    BYTE PTR [rax+0x1],0x23
  44174b:	mov    BYTE PTR [rax],0x23
  44174e:	add    rax,0x2
  441752:	jmp    0x4411e0
  441757:	mov    rcx,QWORD PTR [rsp+0x38]
  44175c:	call   0x401870
  441761:	mov    QWORD PTR [rsp+0x38],rax
  441766:	jmp    0x440a6f
  44176b:	mov    rsi,QWORD PTR [r15-0x20]
  44176f:	mov    rax,QWORD PTR [rsp+0x68]
  441774:	call   rax
  441776:	lea    rdx,[rip+0x249e]        # 0x443c1b
  44177d:	lea    rcx,[rax+0x60]
  441781:	mov    r8,rsi
  441784:	call   0x403990
  441789:	mov    QWORD PTR [rsp+0x48],0x0
  441792:	jmp    0x44134f
  441797:	mov    rax,QWORD PTR [rsp+0x80]
  44179f:	mov    QWORD PTR [rsp+0x50],rax
  4417a4:	call   rax
  4417a6:	lea    rdx,[rip+0x252b]        # 0x443cd8
  4417ad:	lea    rcx,[rax+0x60]
  4417b1:	mov    r8,r13
  4417b4:	call   0x403990
  4417b9:	jmp    0x4416fc
  4417be:	nop
  4417bf:	nop
  4417c0:	(bad)  
  4417c1:	(bad)  
  4417c2:	(bad)  
  4417c3:	(bad)  
  4417c4:	(bad)  
  4417c5:	(bad)  
  4417c6:	(bad)  
  4417c7:	inc    DWORD PTR [rax]
  4417c9:	add    BYTE PTR [rax],al
  4417cb:	add    BYTE PTR [rax],al
  4417cd:	add    BYTE PTR [rax],al
  4417cf:	add    bh,bh
  4417d1:	(bad)  
  4417d2:	(bad)  
  4417d3:	(bad)  
  4417d4:	(bad)  
  4417d5:	(bad)  
  4417d6:	(bad)  
  4417d7:	inc    DWORD PTR [rax]
  4417d9:	add    BYTE PTR [rax],al
  4417db:	add    BYTE PTR [rax],al
  4417dd:	add    BYTE PTR [rax],al
	...
