
4ec1e44407cc7874b875e2850962e0583a97486b29578cdd4bcc21d7e1d76004.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x49a5]        # 0x4059c0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x49a6]        # 0x4059d0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x49a9]        # 0x4059e0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x496c]        # 0x4059b0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x480f]        # 0x405860
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4941]        # 0x4059a0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x403908
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401c50
  401081:	mov    rdx,QWORD PTR [rip+0x4878]        # 0x405900
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x485e]        # 0x4058f0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x48c4]        # 0x405960
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x47fb]        # 0x4058a0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401830
  4010af:	mov    rax,QWORD PTR [rip+0x475a]        # 0x405810
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x403908
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xa09]        # 0x401b30
  401127:	call   0x401b20
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4825]        # 0x405990
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x47b5]        # 0x405950
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x403920
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x47da]        # 0x4059a0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x46db]        # 0x4058d0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x81ca]        # 0x4093cc
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x46b7]        # 0x4058e0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x45ec]        # 0x405850
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401e40
  40127d:	lea    rcx,[rip+0x115c]        # 0x4023e0
  401284:	call   QWORD PTR [rip+0x813a]        # 0x4093c4
  40128a:	mov    rdx,QWORD PTR [rip+0x462f]        # 0x4058c0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4022f0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x403950
  4012a5:	call   0x401c30
  4012aa:	mov    rax,QWORD PTR [rip+0x45af]        # 0x405860
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x45d1]        # 0x405890
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x403880
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x403850
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x403880
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x403878
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401800
  4013bb:	mov    rax,QWORD PTR [rip+0x44be]        # 0x405880
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x403a20
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4038f0
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x44a9]        # 0x4058e0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4038f8
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x44bd]        # 0x405920
  401463:	mov    rcx,QWORD PTR [rip+0x44a6]        # 0x405910
  40146a:	call   0x4038e8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7edb]        # 0x409374
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x4499]        # 0x405940
  4014a7:	mov    rcx,QWORD PTR [rip+0x4482]        # 0x405930
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4038e8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4038b0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x44c5]        # 0x4059a0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401840
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x4495]        # 0x4059a0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401840
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rdi
  401531:	push   rsi
  401532:	push   rbx
  401533:	sub    rsp,0x20
  401537:	test   edx,edx
  401539:	mov    rdi,rcx
  40153c:	mov    esi,edx
  40153e:	je     0x401610
  401544:	call   QWORD PTR [rip+0x7ee2]        # 0x40942c
  40154a:	lea    rbx,[rax+0x60]
  40154e:	lea    rdx,[rip+0x3aab]        # 0x405000
  401555:	mov    r8,rdi
  401558:	mov    rcx,rbx
  40155b:	call   0x4038a8
  401560:	lea    rcx,[rip+0x3b11]        # 0x405078
  401567:	mov    r9,rbx
  40156a:	mov    r8d,0x25
  401570:	mov    edx,0x1
  401575:	call   0x403890
  40157a:	mov    rdx,rbx
  40157d:	mov    ecx,0xa
  401582:	call   0x4038a0
  401587:	lea    rcx,[rip+0x3b12]        # 0x4050a0
  40158e:	mov    r9,rbx
  401591:	mov    r8d,0x45
  401597:	mov    edx,0x1
  40159c:	call   0x403890
  4015a1:	lea    rcx,[rip+0x3b40]        # 0x4050e8
  4015a8:	mov    r9,rbx
  4015ab:	mov    r8d,0x3a
  4015b1:	mov    edx,0x1
  4015b6:	call   0x403890
  4015bb:	lea    rcx,[rip+0x3b66]        # 0x405128
  4015c2:	mov    r9,rbx
  4015c5:	mov    r8d,0x36
  4015cb:	mov    edx,0x1
  4015d0:	call   0x403890
  4015d5:	lea    rcx,[rip+0x3b84]        # 0x405160
  4015dc:	mov    r9,rbx
  4015df:	mov    r8d,0x3c
  4015e5:	mov    edx,0x1
  4015ea:	call   0x403890
  4015ef:	lea    rcx,[rip+0x3baa]        # 0x4051a0
  4015f6:	mov    r9,rbx
  4015f9:	mov    r8d,0x32
  4015ff:	mov    edx,0x1
  401604:	call   0x403890
  401609:	mov    ecx,esi
  40160b:	call   0x4038b0
  401610:	call   QWORD PTR [rip+0x7e16]        # 0x40942c
  401616:	lea    rbx,[rax+0x30]
  40161a:	jmp    0x40154e
  40161f:	nop
  401620:	jmp    QWORD PTR [rip+0x7ce6]        # 0x40930c
  401626:	nop
  401627:	nop
  401628:	jmp    QWORD PTR [rip+0x7cd6]        # 0x409304
  40162e:	nop
  40162f:	nop
  401630:	jmp    QWORD PTR [rip+0x7cc6]        # 0x4092fc
  401636:	nop
  401637:	nop
  401638:	jmp    QWORD PTR [rip+0x7cb6]        # 0x4092f4
  40163e:	nop
  40163f:	nop
  401640:	jmp    QWORD PTR [rip+0x7ca6]        # 0x4092ec
  401646:	nop
  401647:	nop
  401648:	jmp    QWORD PTR [rip+0x7c96]        # 0x4092e4
  40164e:	nop
  40164f:	nop
  401650:	jmp    QWORD PTR [rip+0x7c86]        # 0x4092dc
  401656:	nop
  401657:	nop
  401658:	jmp    QWORD PTR [rip+0x7c76]        # 0x4092d4
  40165e:	nop
  40165f:	nop
  401660:	jmp    QWORD PTR [rip+0x7c66]        # 0x4092cc
  401666:	nop
  401667:	nop
  401668:	jmp    QWORD PTR [rip+0x7c56]        # 0x4092c4
  40166e:	nop
  40166f:	nop
  401670:	jmp    QWORD PTR [rip+0x7cbe]        # 0x409334
  401676:	nop
  401677:	nop
  401678:	jmp    QWORD PTR [rip+0x7cae]        # 0x40932c
  40167e:	nop
  40167f:	nop
  401680:	jmp    QWORD PTR [rip+0x7c9e]        # 0x409324
  401686:	nop
  401687:	nop
  401688:	jmp    QWORD PTR [rip+0x7c8e]        # 0x40931c
  40168e:	nop
  40168f:	nop
  401690:	push   rbx
  401691:	sub    rsp,0x30
  401695:	mov    rbx,rcx
  401698:	mov    rcx,QWORD PTR [rip+0x7371]        # 0x408a10
  40169f:	call   0x401c40
  4016a4:	cmp    rax,0xffffffffffffffff
  4016a8:	mov    QWORD PTR [rsp+0x20],rax
  4016ad:	je     0x401725
  4016af:	mov    ecx,0x8
  4016b4:	call   0x4038e0
  4016b9:	mov    rcx,QWORD PTR [rip+0x7350]        # 0x408a10
  4016c0:	call   0x401c40
  4016c5:	mov    rcx,QWORD PTR [rip+0x734c]        # 0x408a18
  4016cc:	mov    QWORD PTR [rsp+0x20],rax
  4016d1:	call   0x401c40
  4016d6:	lea    rdx,[rsp+0x20]
  4016db:	lea    r8,[rsp+0x28]
  4016e0:	mov    rcx,rbx
  4016e3:	mov    QWORD PTR [rsp+0x28],rax
  4016e8:	call   0x403928
  4016ed:	mov    rcx,QWORD PTR [rsp+0x20]
  4016f2:	mov    rbx,rax
  4016f5:	call   0x401c50
  4016fa:	mov    rcx,QWORD PTR [rsp+0x28]
  4016ff:	mov    QWORD PTR [rip+0x730a],rax        # 0x408a10
  401706:	call   0x401c50
  40170b:	mov    ecx,0x8
  401710:	mov    QWORD PTR [rip+0x7301],rax        # 0x408a18
  401717:	call   0x4038d0
  40171c:	mov    rax,rbx
  40171f:	add    rsp,0x30
  401723:	pop    rbx
  401724:	ret    
  401725:	mov    rax,QWORD PTR [rip+0x4184]        # 0x4058b0
  40172c:	mov    rcx,rbx
  40172f:	call   QWORD PTR [rax]
  401731:	add    rsp,0x30
  401735:	pop    rbx
  401736:	ret    
  401737:	nop    WORD PTR [rax+rax*1+0x0]
  401740:	sub    rsp,0x28
  401744:	call   0x401690
  401749:	test   rax,rax
  40174c:	sete   al
  40174f:	movzx  eax,al
  401752:	neg    eax
  401754:	add    rsp,0x28
  401758:	ret    
  401759:	nop
  40175a:	nop
  40175b:	nop
  40175c:	nop
  40175d:	nop
  40175e:	nop
  40175f:	nop
  401760:	sub    rsp,0x28
  401764:	mov    rax,QWORD PTR [rip+0x28a5]        # 0x404010
  40176b:	mov    rax,QWORD PTR [rax]
  40176e:	test   rax,rax
  401771:	je     0x401790
  401773:	call   rax
  401775:	mov    rax,QWORD PTR [rip+0x2894]        # 0x404010
  40177c:	lea    rdx,[rax+0x8]
  401780:	mov    rax,QWORD PTR [rax+0x8]
  401784:	mov    QWORD PTR [rip+0x2885],rdx        # 0x404010
  40178b:	test   rax,rax
  40178e:	jne    0x401773
  401790:	add    rsp,0x28
  401794:	ret    
  401795:	nop
  401796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017a0:	push   rsi
  4017a1:	push   rbx
  4017a2:	sub    rsp,0x28
  4017a6:	mov    rsi,QWORD PTR [rip+0x4073]        # 0x405820
  4017ad:	mov    rax,QWORD PTR [rsi]
  4017b0:	cmp    eax,0xffffffff
  4017b3:	mov    ebx,eax
  4017b5:	je     0x4017e0
  4017b7:	test   ebx,ebx
  4017b9:	je     0x4017ca
  4017bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4017c0:	mov    eax,ebx
  4017c2:	call   QWORD PTR [rsi+rax*8]
  4017c5:	sub    ebx,0x1
  4017c8:	jne    0x4017c0
  4017ca:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401760
  4017d1:	add    rsp,0x28
  4017d5:	pop    rbx
  4017d6:	pop    rsi
  4017d7:	jmp    0x401740
  4017dc:	nop    DWORD PTR [rax+0x0]
  4017e0:	xor    ebx,ebx
  4017e2:	jmp    0x4017e6
  4017e4:	mov    ebx,eax
  4017e6:	lea    edx,[rbx+0x1]
  4017e9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4017ee:	mov    rax,rdx
  4017f1:	jne    0x4017e4
  4017f3:	jmp    0x4017b7
  4017f5:	nop
  4017f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401800:	mov    eax,DWORD PTR [rip+0x682a]        # 0x408030
  401806:	test   eax,eax
  401808:	je     0x401810
  40180a:	repz ret 
  40180c:	nop    DWORD PTR [rax+0x0]
  401810:	mov    DWORD PTR [rip+0x6816],0x1        # 0x408030
  40181a:	jmp    0x4017a0
  40181c:	nop
  40181d:	nop
  40181e:	nop
  40181f:	nop
  401820:	mov    rax,QWORD PTR [rip+0x7c0d]        # 0x409434
  401827:	rex.W jmp rax
  40182a:	nop
  40182b:	nop
  40182c:	nop
  40182d:	nop
  40182e:	nop
  40182f:	nop
  401830:	xor    eax,eax
  401832:	ret    
  401833:	nop
  401834:	nop
  401835:	nop
  401836:	nop
  401837:	nop
  401838:	nop
  401839:	nop
  40183a:	nop
  40183b:	nop
  40183c:	nop
  40183d:	nop
  40183e:	nop
  40183f:	nop
  401840:	push   r12
  401842:	push   rbp
  401843:	push   rdi
  401844:	push   rsi
  401845:	push   rbx
  401846:	sub    rsp,0x40
  40184a:	mov    rbx,QWORD PTR [rip+0x284f]        # 0x4040a0
  401851:	movabs rax,0x2b992ddfa232
  40185b:	mov    QWORD PTR [rsp+0x20],0x0
  401864:	cmp    rbx,rax
  401867:	je     0x401880
  401869:	not    rbx
  40186c:	mov    QWORD PTR [rip+0x283d],rbx        # 0x4040b0
  401873:	add    rsp,0x40
  401877:	pop    rbx
  401878:	pop    rsi
  401879:	pop    rdi
  40187a:	pop    rbp
  40187b:	pop    r12
  40187d:	ret    
  40187e:	xchg   ax,ax
  401880:	lea    rcx,[rsp+0x20]
  401885:	call   QWORD PTR [rip+0x7af1]        # 0x40937c
  40188b:	mov    r12,QWORD PTR [rsp+0x20]
  401890:	call   QWORD PTR [rip+0x7ac6]        # 0x40935c
  401896:	mov    ebp,eax
  401898:	call   QWORD PTR [rip+0x7ac6]        # 0x409364
  40189e:	mov    edi,eax
  4018a0:	call   QWORD PTR [rip+0x7ade]        # 0x409384
  4018a6:	lea    rcx,[rsp+0x30]
  4018ab:	mov    esi,eax
  4018ad:	call   QWORD PTR [rip+0x7ae9]        # 0x40939c
  4018b3:	xor    r12,QWORD PTR [rsp+0x30]
  4018b8:	mov    edx,edi
  4018ba:	movabs rax,0xffffffffffff
  4018c4:	xor    rbp,r12
  4018c7:	mov    rdi,rbp
  4018ca:	xor    rdi,rdx
  4018cd:	mov    edx,esi
  4018cf:	xor    rdi,rdx
  4018d2:	mov    rsi,rdi
  4018d5:	and    rsi,rax
  4018d8:	cmp    rsi,rbx
  4018db:	je     0x401900
  4018dd:	mov    rax,rsi
  4018e0:	not    rax
  4018e3:	mov    QWORD PTR [rip+0x27b6],rsi        # 0x4040a0
  4018ea:	mov    QWORD PTR [rip+0x27bf],rax        # 0x4040b0
  4018f1:	add    rsp,0x40
  4018f5:	pop    rbx
  4018f6:	pop    rsi
  4018f7:	pop    rdi
  4018f8:	pop    rbp
  4018f9:	pop    r12
  4018fb:	ret    
  4018fc:	nop    DWORD PTR [rax+0x0]
  401900:	movabs rax,0xffffd466d2205dcc
  40190a:	movabs rsi,0x2b992ddfa233
  401914:	jmp    0x4018e3
  401916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401920:	push   rbp
  401921:	push   rsi
  401922:	push   rbx
  401923:	mov    rbp,rsp
  401926:	sub    rsp,0x70
  40192a:	mov    rsi,rcx
  40192d:	lea    rcx,[rip+0x674c]        # 0x408080
  401934:	call   QWORD PTR [rip+0x7a72]        # 0x4093ac
  40193a:	mov    rbx,QWORD PTR [rip+0x6837]        # 0x408178
  401941:	xor    r8d,r8d
  401944:	lea    rdx,[rbp-0x28]
  401948:	mov    rcx,rbx
  40194b:	call   QWORD PTR [rip+0x7a63]        # 0x4093b4
  401951:	test   rax,rax
  401954:	mov    r9,rax
  401957:	je     0x401a00
  40195d:	lea    rax,[rbp-0x20]
  401961:	mov    QWORD PTR [rsp+0x38],0x0
  40196a:	mov    r8,rbx
  40196d:	mov    rdx,QWORD PTR [rbp-0x28]
  401971:	xor    ecx,ecx
  401973:	mov    QWORD PTR [rsp+0x30],rax
  401978:	lea    rax,[rbp-0x18]
  40197c:	mov    QWORD PTR [rsp+0x28],rax
  401981:	lea    rax,[rip+0x66f8]        # 0x408080
  401988:	mov    QWORD PTR [rsp+0x20],rax
  40198d:	call   QWORD PTR [rip+0x7a29]        # 0x4093bc
  401993:	mov    rax,QWORD PTR [rip+0x67de]        # 0x408178
  40199a:	xor    ecx,ecx
  40199c:	mov    QWORD PTR [rip+0x675d],rsi        # 0x408100
  4019a3:	mov    DWORD PTR [rip+0x6bd3],0xc0000409        # 0x408580
  4019ad:	mov    DWORD PTR [rip+0x6bcd],0x1        # 0x408584
  4019b7:	mov    QWORD PTR [rip+0x6bd2],rax        # 0x408590
  4019be:	mov    rax,QWORD PTR [rip+0x26db]        # 0x4040a0
  4019c5:	mov    QWORD PTR [rbp-0x10],rax
  4019c9:	mov    rax,QWORD PTR [rip+0x26e0]        # 0x4040b0
  4019d0:	mov    QWORD PTR [rbp-0x8],rax
  4019d4:	call   QWORD PTR [rip+0x79ea]        # 0x4093c4
  4019da:	lea    rcx,[rip+0x3a5f]        # 0x405440
  4019e1:	call   QWORD PTR [rip+0x79fd]        # 0x4093e4
  4019e7:	call   QWORD PTR [rip+0x7967]        # 0x409354
  4019ed:	mov    edx,0xc0000409
  4019f2:	mov    rcx,rax
  4019f5:	call   QWORD PTR [rip+0x79d9]        # 0x4093d4
  4019fb:	call   0x4038c8
  401a00:	mov    rax,QWORD PTR [rbp+0x18]
  401a04:	mov    QWORD PTR [rip+0x676d],rax        # 0x408178
  401a0b:	lea    rax,[rbp+0x8]
  401a0f:	mov    QWORD PTR [rip+0x6702],rax        # 0x408118
  401a16:	jmp    0x401993
  401a1b:	nop
  401a1c:	nop
  401a1d:	nop
  401a1e:	nop
  401a1f:	nop
  401a20:	sub    rsp,0x28
  401a24:	test   edx,edx
  401a26:	je     0x401a40
  401a28:	cmp    edx,0x3
  401a2b:	je     0x401a40
  401a2d:	mov    eax,0x1
  401a32:	add    rsp,0x28
  401a36:	ret    
  401a37:	nop    WORD PTR [rax+rax*1+0x0]
  401a40:	call   0x402730
  401a45:	mov    eax,0x1
  401a4a:	add    rsp,0x28
  401a4e:	ret    
  401a4f:	nop
  401a50:	push   rsi
  401a51:	push   rbx
  401a52:	sub    rsp,0x28
  401a56:	mov    rax,QWORD PTR [rip+0x3da3]        # 0x405800
  401a5d:	cmp    DWORD PTR [rax],0x2
  401a60:	je     0x401a68
  401a62:	mov    DWORD PTR [rax],0x2
  401a68:	cmp    edx,0x2
  401a6b:	je     0x401a80
  401a6d:	cmp    edx,0x1
  401a70:	je     0x401ab2
  401a72:	mov    eax,0x1
  401a77:	add    rsp,0x28
  401a7b:	pop    rbx
  401a7c:	pop    rsi
  401a7d:	ret    
  401a7e:	xchg   ax,ax
  401a80:	lea    rbx,[rip+0x85d9]        # 0x40a060
  401a87:	lea    rsi,[rip+0x85d2]        # 0x40a060
  401a8e:	cmp    rbx,rsi
  401a91:	je     0x401a72
  401a93:	mov    rax,QWORD PTR [rbx]
  401a96:	test   rax,rax
  401a99:	je     0x401a9d
  401a9b:	call   rax
  401a9d:	add    rbx,0x8
  401aa1:	cmp    rbx,rsi
  401aa4:	jne    0x401a93
  401aa6:	mov    eax,0x1
  401aab:	add    rsp,0x28
  401aaf:	pop    rbx
  401ab0:	pop    rsi
  401ab1:	ret    
  401ab2:	call   0x402730
  401ab7:	jmp    0x401a72
  401ab9:	nop    DWORD PTR [rax+0x0]
  401ac0:	xor    eax,eax
  401ac2:	ret    
  401ac3:	nop
  401ac4:	nop
  401ac5:	nop
  401ac6:	nop
  401ac7:	nop
  401ac8:	nop
  401ac9:	nop
  401aca:	nop
  401acb:	nop
  401acc:	nop
  401acd:	nop
  401ace:	nop
  401acf:	nop
  401ad0:	sub    rsp,0x58
  401ad4:	mov    rax,QWORD PTR [rip+0x6b85]        # 0x408660
  401adb:	test   rax,rax
  401ade:	je     0x401b0c
  401ae0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401ae9:	mov    DWORD PTR [rsp+0x20],ecx
  401aed:	lea    rcx,[rsp+0x20]
  401af2:	mov    QWORD PTR [rsp+0x28],rdx
  401af7:	movsd  QWORD PTR [rsp+0x30],xmm2
  401afd:	movsd  QWORD PTR [rsp+0x38],xmm3
  401b03:	movsd  QWORD PTR [rsp+0x40],xmm0
  401b09:	call   rax
  401b0b:	nop
  401b0c:	add    rsp,0x58
  401b10:	ret    
  401b11:	nop    DWORD PTR [rax+rax*1+0x0]
  401b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b20:	mov    QWORD PTR [rip+0x6b39],rcx        # 0x408660
  401b27:	jmp    0x403900
  401b2c:	nop    DWORD PTR [rax+0x0]
  401b30:	push   rsi
  401b31:	push   rbx
  401b32:	sub    rsp,0x78
  401b36:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401b3b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401b40:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401b46:	cmp    DWORD PTR [rcx],0x6
  401b49:	ja     0x401c20
  401b4f:	mov    edx,DWORD PTR [rcx]
  401b51:	lea    rax,[rip+0x3a2c]        # 0x405584
  401b58:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401b5c:	add    rax,rdx
  401b5f:	jmp    rax
  401b61:	lea    rbx,[rip+0x38f8]        # 0x405460
  401b68:	nop    DWORD PTR [rax+rax*1+0x0]
  401b70:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401b76:	mov    rsi,QWORD PTR [rcx+0x8]
  401b7a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401b7f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401b84:	call   0x403918
  401b89:	movsd  QWORD PTR [rsp+0x30],xmm8
  401b90:	lea    rcx,[rax+0x60]
  401b94:	lea    rdx,[rip+0x39bd]        # 0x405558
  401b9b:	movsd  QWORD PTR [rsp+0x28],xmm7
  401ba1:	mov    r9,rsi
  401ba4:	mov    r8,rbx
  401ba7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401bad:	call   0x4038a8
  401bb2:	nop
  401bb3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401bb8:	xor    eax,eax
  401bba:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401bbf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401bc5:	add    rsp,0x78
  401bc9:	pop    rbx
  401bca:	pop    rsi
  401bcb:	ret    
  401bcc:	nop    DWORD PTR [rax+0x0]
  401bd0:	lea    rbx,[rip+0x38a8]        # 0x40547f
  401bd7:	jmp    0x401b70
  401bd9:	nop    DWORD PTR [rax+0x0]
  401be0:	lea    rbx,[rip+0x38b9]        # 0x4054a0
  401be7:	jmp    0x401b70
  401be9:	nop    DWORD PTR [rax+0x0]
  401bf0:	lea    rbx,[rip+0x3919]        # 0x405510
  401bf7:	jmp    0x401b70
  401bfc:	nop    DWORD PTR [rax+0x0]
  401c00:	lea    rbx,[rip+0x38e1]        # 0x4054e8
  401c07:	jmp    0x401b70
  401c0c:	nop    DWORD PTR [rax+0x0]
  401c10:	lea    rbx,[rip+0x38a9]        # 0x4054c0
  401c17:	jmp    0x401b70
  401c1c:	nop    DWORD PTR [rax+0x0]
  401c20:	lea    rbx,[rip+0x391f]        # 0x405546
  401c27:	jmp    0x401b70
  401c2c:	nop
  401c2d:	nop
  401c2e:	nop
  401c2f:	nop
  401c30:	fninit 
  401c32:	ret    
  401c33:	nop
  401c34:	nop
  401c35:	nop
  401c36:	nop
  401c37:	nop
  401c38:	nop
  401c39:	nop
  401c3a:	nop
  401c3b:	nop
  401c3c:	nop
  401c3d:	nop
  401c3e:	nop
  401c3f:	nop
  401c40:	mov    rax,rcx
  401c43:	ret    
  401c44:	xchg   ax,ax
  401c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c50:	mov    rax,rcx
  401c53:	ret    
  401c54:	nop
  401c55:	nop
  401c56:	nop
  401c57:	nop
  401c58:	nop
  401c59:	nop
  401c5a:	nop
  401c5b:	nop
  401c5c:	nop
  401c5d:	nop
  401c5e:	nop
  401c5f:	nop
  401c60:	push   rsi
  401c61:	push   rbx
  401c62:	sub    rsp,0x38
  401c66:	lea    rax,[rsp+0x58]
  401c6b:	mov    rbx,rcx
  401c6e:	mov    QWORD PTR [rsp+0x58],rdx
  401c73:	mov    QWORD PTR [rsp+0x60],r8
  401c78:	mov    QWORD PTR [rsp+0x68],r9
  401c7d:	mov    QWORD PTR [rsp+0x28],rax
  401c82:	call   0x403918
  401c87:	lea    rcx,[rip+0x3912]        # 0x4055a0
  401c8e:	lea    r9,[rax+0x60]
  401c92:	mov    r8d,0x1b
  401c98:	mov    edx,0x1
  401c9d:	call   0x403890
  401ca2:	mov    rsi,QWORD PTR [rsp+0x28]
  401ca7:	call   0x403918
  401cac:	lea    rcx,[rax+0x60]
  401cb0:	mov    rdx,rbx
  401cb3:	mov    r8,rsi
  401cb6:	call   0x403840
  401cbb:	call   0x4038c8
  401cc0:	nop
  401cc1:	nop    DWORD PTR [rax+rax*1+0x0]
  401cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401cd0:	push   r13
  401cd2:	push   r12
  401cd4:	push   rbp
  401cd5:	push   rdi
  401cd6:	push   rsi
  401cd7:	push   rbx
  401cd8:	sub    rsp,0x58
  401cdc:	movsxd rbp,DWORD PTR [rip+0x69a1]        # 0x408684
  401ce3:	mov    rbx,rcx
  401ce6:	mov    rsi,rdx
  401ce9:	mov    rdi,r8
  401cec:	test   ebp,ebp
  401cee:	jle    0x401dea
  401cf4:	mov    rax,QWORD PTR [rip+0x698d]        # 0x408688
  401cfb:	xor    r9d,r9d
  401cfe:	add    rax,0x8
  401d02:	mov    r10,QWORD PTR [rax]
  401d05:	cmp    rbx,r10
  401d08:	jb     0x401d1e
  401d0a:	mov    rdx,QWORD PTR [rax+0x8]
  401d0e:	mov    r11d,DWORD PTR [rdx+0x8]
  401d12:	add    r10,r11
  401d15:	cmp    rbx,r10
  401d18:	jb     0x401dd0
  401d1e:	add    r9d,0x1
  401d22:	add    rax,0x18
  401d26:	cmp    r9d,ebp
  401d29:	jne    0x401d02
  401d2b:	mov    rcx,rbx
  401d2e:	call   0x402940
  401d33:	test   rax,rax
  401d36:	mov    r12,rax
  401d39:	je     0x401e22
  401d3f:	lea    rbp,[rbp+rbp*2+0x0]
  401d44:	shl    rbp,0x3
  401d48:	mov    r13,rbp
  401d4b:	add    r13,QWORD PTR [rip+0x6936]        # 0x408688
  401d52:	mov    QWORD PTR [r13+0x10],rax
  401d56:	mov    DWORD PTR [r13+0x0],0x0
  401d5e:	call   0x402a60
  401d63:	mov    edx,DWORD PTR [r12+0xc]
  401d68:	mov    r8d,0x30
  401d6e:	add    rax,rdx
  401d71:	lea    rdx,[rsp+0x20]
  401d76:	mov    QWORD PTR [r13+0x8],rax
  401d7a:	mov    rax,QWORD PTR [rip+0x6907]        # 0x408688
  401d81:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401d86:	call   QWORD PTR [rip+0x7668]        # 0x4093f4
  401d8c:	test   rax,rax
  401d8f:	je     0x401e05
  401d91:	mov    eax,DWORD PTR [rsp+0x44]
  401d95:	lea    edx,[rax-0x4]
  401d98:	and    edx,0xfffffffb
  401d9b:	je     0x401dc9
  401d9d:	sub    eax,0x40
  401da0:	and    eax,0xffffffbf
  401da3:	je     0x401dc9
  401da5:	mov    r9,rbp
  401da8:	add    r9,QWORD PTR [rip+0x68d9]        # 0x408688
  401daf:	mov    r8d,0x40
  401db5:	mov    rdx,QWORD PTR [rsp+0x38]
  401dba:	mov    rcx,QWORD PTR [rsp+0x20]
  401dbf:	call   QWORD PTR [rip+0x7627]        # 0x4093ec
  401dc5:	test   eax,eax
  401dc7:	je     0x401df1
  401dc9:	add    DWORD PTR [rip+0x68b4],0x1        # 0x408684
  401dd0:	mov    r8,rdi
  401dd3:	mov    rdx,rsi
  401dd6:	mov    rcx,rbx
  401dd9:	add    rsp,0x58
  401ddd:	pop    rbx
  401dde:	pop    rsi
  401ddf:	pop    rdi
  401de0:	pop    rbp
  401de1:	pop    r12
  401de3:	pop    r13
  401de5:	jmp    0x403878
  401dea:	xor    ebp,ebp
  401dec:	jmp    0x401d2b
  401df1:	call   QWORD PTR [rip+0x7575]        # 0x40936c
  401df7:	lea    rcx,[rip+0x381a]        # 0x405618
  401dfe:	mov    edx,eax
  401e00:	call   0x401c60
  401e05:	mov    rax,QWORD PTR [rip+0x687c]        # 0x408688
  401e0c:	mov    edx,DWORD PTR [r12+0x8]
  401e11:	lea    rcx,[rip+0x37c8]        # 0x4055e0
  401e18:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401e1d:	call   0x401c60
  401e22:	lea    rcx,[rip+0x3797]        # 0x4055c0
  401e29:	mov    rdx,rbx
  401e2c:	call   0x401c60
  401e31:	nop
  401e32:	nop    DWORD PTR [rax+0x0]
  401e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e40:	push   rbp
  401e41:	push   r14
  401e43:	push   r13
  401e45:	push   r12
  401e47:	push   rdi
  401e48:	push   rsi
  401e49:	push   rbx
  401e4a:	mov    rbp,rsp
  401e4d:	sub    rsp,0x60
  401e51:	mov    ebx,DWORD PTR [rip+0x6829]        # 0x408680
  401e57:	test   ebx,ebx
  401e59:	je     0x401e70
  401e5b:	mov    rsp,rbp
  401e5e:	pop    rbx
  401e5f:	pop    rsi
  401e60:	pop    rdi
  401e61:	pop    r12
  401e63:	pop    r13
  401e65:	pop    r14
  401e67:	pop    rbp
  401e68:	ret    
  401e69:	nop    DWORD PTR [rax+0x0]
  401e70:	mov    DWORD PTR [rip+0x6806],0x1        # 0x408680
  401e7a:	call   0x402990
  401e7f:	cdqe   
  401e81:	lea    rax,[rax+rax*2]
  401e85:	lea    rax,[rax*8+0x1e]
  401e8d:	and    rax,0xfffffffffffffff0
  401e91:	call   0x402bb0
  401e96:	mov    rsi,QWORD PTR [rip+0x3993]        # 0x405830
  401e9d:	mov    rbx,QWORD PTR [rip+0x399c]        # 0x405840
  401ea4:	sub    rsp,rax
  401ea7:	mov    DWORD PTR [rip+0x67d3],0x0        # 0x408684
  401eb1:	lea    rax,[rsp+0x20]
  401eb6:	mov    QWORD PTR [rip+0x67cb],rax        # 0x408688
  401ebd:	mov    rax,rsi
  401ec0:	sub    rax,rbx
  401ec3:	cmp    rax,0x7
  401ec7:	jle    0x401e5b
  401ec9:	cmp    rax,0xb
  401ecd:	jle    0x401ef5
  401ecf:	mov    r11d,DWORD PTR [rbx]
  401ed2:	test   r11d,r11d
  401ed5:	jne    0x402020
  401edb:	mov    r10d,DWORD PTR [rbx+0x4]
  401edf:	test   r10d,r10d
  401ee2:	jne    0x402020
  401ee8:	mov    r9d,DWORD PTR [rbx+0x8]
  401eec:	test   r9d,r9d
  401eef:	jne    0x401f0c
  401ef1:	add    rbx,0xc
  401ef5:	mov    r8d,DWORD PTR [rbx]
  401ef8:	test   r8d,r8d
  401efb:	jne    0x402020
  401f01:	mov    ecx,DWORD PTR [rbx+0x4]
  401f04:	test   ecx,ecx
  401f06:	jne    0x402020
  401f0c:	mov    edx,DWORD PTR [rbx+0x8]
  401f0f:	cmp    edx,0x1
  401f12:	jne    0x40212c
  401f18:	add    rbx,0xc
  401f1c:	cmp    rbx,rsi
  401f1f:	jae    0x401e5b
  401f25:	mov    r12,QWORD PTR [rip+0x3934]        # 0x405860
  401f2c:	lea    r13,[rbp-0x30]
  401f30:	movabs r14,0xffffffff00000000
  401f3a:	mov    ecx,DWORD PTR [rbx+0x4]
  401f3d:	mov    eax,DWORD PTR [rbx]
  401f3f:	movzx  edx,BYTE PTR [rbx+0x8]
  401f43:	add    rax,r12
  401f46:	add    rcx,r12
  401f49:	cmp    edx,0x10
  401f4c:	mov    r8,QWORD PTR [rax]
  401f4f:	je     0x402096
  401f55:	jbe    0x40205d
  401f5b:	cmp    edx,0x20
  401f5e:	je     0x4020df
  401f64:	cmp    edx,0x40
  401f67:	jne    0x4020cb
  401f6d:	sub    r8,rax
  401f70:	mov    rdx,r13
  401f73:	mov    rdi,r13
  401f76:	mov    rax,r8
  401f79:	add    rax,QWORD PTR [rcx]
  401f7c:	mov    r8d,0x8
  401f82:	mov    QWORD PTR [rbp-0x30],rax
  401f86:	call   0x401cd0
  401f8b:	add    rbx,0xc
  401f8f:	cmp    rbx,rsi
  401f92:	jb     0x401f3a
  401f94:	mov    eax,DWORD PTR [rip+0x66ea]        # 0x408684
  401f9a:	xor    ebx,ebx
  401f9c:	xor    esi,esi
  401f9e:	test   eax,eax
  401fa0:	jle    0x401e5b
  401fa6:	mov    r14,QWORD PTR [rip+0x7447]        # 0x4093f4
  401fad:	lea    r13,[rbp-0x34]
  401fb1:	mov    r12,QWORD PTR [rip+0x7434]        # 0x4093ec
  401fb8:	jmp    0x401fd3
  401fba:	nop    WORD PTR [rax+rax*1+0x0]
  401fc0:	add    esi,0x1
  401fc3:	add    rbx,0x18
  401fc7:	cmp    esi,DWORD PTR [rip+0x66b7]        # 0x408684
  401fcd:	jge    0x401e5b
  401fd3:	mov    rax,rbx
  401fd6:	add    rax,QWORD PTR [rip+0x66ab]        # 0x408688
  401fdd:	mov    edx,DWORD PTR [rax]
  401fdf:	test   edx,edx
  401fe1:	je     0x401fc0
  401fe3:	mov    rcx,QWORD PTR [rax+0x8]
  401fe7:	mov    r8d,0x30
  401fed:	mov    rdx,rdi
  401ff0:	call   r14
  401ff3:	test   rax,rax
  401ff6:	je     0x40210e
  401ffc:	mov    rax,QWORD PTR [rip+0x6685]        # 0x408688
  402003:	mov    r9,r13
  402006:	mov    rdx,QWORD PTR [rbp-0x18]
  40200a:	mov    rcx,QWORD PTR [rbp-0x30]
  40200e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402012:	call   r12
  402015:	jmp    0x401fc0
  402017:	nop    WORD PTR [rax+rax*1+0x0]
  402020:	cmp    rbx,rsi
  402023:	jae    0x401e5b
  402029:	mov    r12,QWORD PTR [rip+0x3830]        # 0x405860
  402030:	lea    rdi,[rbp-0x30]
  402034:	mov    ecx,DWORD PTR [rbx+0x4]
  402037:	mov    eax,DWORD PTR [rbx]
  402039:	mov    r8d,0x4
  40203f:	mov    rdx,rdi
  402042:	add    rbx,0x8
  402046:	add    rcx,r12
  402049:	add    eax,DWORD PTR [rcx]
  40204b:	mov    DWORD PTR [rbp-0x30],eax
  40204e:	call   0x401cd0
  402053:	cmp    rbx,rsi
  402056:	jb     0x402034
  402058:	jmp    0x401f94
  40205d:	cmp    edx,0x8
  402060:	jne    0x4020cb
  402062:	movzx  edx,BYTE PTR [rcx]
  402065:	mov    rdi,r13
  402068:	mov    r10,rdx
  40206b:	or     r10,0xffffffffffffff00
  402072:	test   dl,dl
  402074:	cmovs  rdx,r10
  402078:	sub    rdx,rax
  40207b:	lea    rax,[r8+rdx*1]
  40207f:	mov    r8d,0x1
  402085:	mov    rdx,r13
  402088:	mov    QWORD PTR [rbp-0x30],rax
  40208c:	call   0x401cd0
  402091:	jmp    0x401f8b
  402096:	movzx  edx,WORD PTR [rcx]
  402099:	mov    rdi,r13
  40209c:	mov    r10,rdx
  40209f:	or     r10,0xffffffffffff0000
  4020a6:	test   dx,dx
  4020a9:	cmovs  rdx,r10
  4020ad:	sub    rdx,rax
  4020b0:	lea    rax,[r8+rdx*1]
  4020b4:	mov    r8d,0x2
  4020ba:	mov    rdx,r13
  4020bd:	mov    QWORD PTR [rbp-0x30],rax
  4020c1:	call   0x401cd0
  4020c6:	jmp    0x401f8b
  4020cb:	lea    rcx,[rip+0x35a6]        # 0x405678
  4020d2:	mov    QWORD PTR [rbp-0x30],0x0
  4020da:	call   0x401c60
  4020df:	mov    edx,DWORD PTR [rcx]
  4020e1:	mov    rdi,r13
  4020e4:	mov    r10,rdx
  4020e7:	or     r10,r14
  4020ea:	test   edx,edx
  4020ec:	cmovs  rdx,r10
  4020f0:	sub    rdx,rax
  4020f3:	lea    rax,[r8+rdx*1]
  4020f7:	mov    r8d,0x4
  4020fd:	mov    rdx,r13
  402100:	mov    QWORD PTR [rbp-0x30],rax
  402104:	call   0x401cd0
  402109:	jmp    0x401f8b
  40210e:	add    rbx,QWORD PTR [rip+0x6573]        # 0x408688
  402115:	lea    rcx,[rip+0x34c4]        # 0x4055e0
  40211c:	mov    rax,QWORD PTR [rbx+0x10]
  402120:	mov    r8,QWORD PTR [rbx+0x8]
  402124:	mov    edx,DWORD PTR [rax+0x8]
  402127:	call   0x401c60
  40212c:	lea    rcx,[rip+0x350d]        # 0x405640
  402133:	call   0x401c60
  402138:	nop
  402139:	nop
  40213a:	nop
  40213b:	nop
  40213c:	nop
  40213d:	nop
  40213e:	nop
  40213f:	nop
  402140:	sub    rsp,0x28
  402144:	mov    eax,DWORD PTR [rcx]
  402146:	cmp    eax,0xc0000091
  40214b:	ja     0x4021b0
  40214d:	cmp    eax,0xc000008d
  402152:	jae    0x4021cf
  402154:	cmp    eax,0xc0000008
  402159:	je     0x402270
  40215f:	ja     0x402240
  402165:	cmp    eax,0x80000002
  40216a:	je     0x402270
  402170:	cmp    eax,0xc0000005
  402175:	jne    0x40224e
  40217b:	xor    edx,edx
  40217d:	mov    ecx,0xb
  402182:	call   0x403860
  402187:	cmp    rax,0x1
  40218b:	je     0x4022d0
  402191:	test   rax,rax
  402194:	je     0x4022b0
  40219a:	mov    ecx,0xb
  40219f:	call   rax
  4021a1:	xor    eax,eax
  4021a3:	add    rsp,0x28
  4021a7:	ret    
  4021a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4021b0:	cmp    eax,0xc0000094
  4021b5:	je     0x402280
  4021bb:	ja     0x402200
  4021bd:	cmp    eax,0xc0000092
  4021c2:	je     0x402270
  4021c8:	cmp    eax,0xc0000093
  4021cd:	jne    0x40224e
  4021cf:	xor    edx,edx
  4021d1:	mov    ecx,0x8
  4021d6:	call   0x403860
  4021db:	cmp    rax,0x1
  4021df:	mov    rdx,rax
  4021e2:	je     0x402258
  4021e4:	test   rdx,rdx
  4021e7:	mov    eax,0x1
  4021ec:	je     0x4021a3
  4021ee:	mov    ecx,0x8
  4021f3:	call   rdx
  4021f5:	xor    eax,eax
  4021f7:	add    rsp,0x28
  4021fb:	ret    
  4021fc:	nop    DWORD PTR [rax+0x0]
  402200:	cmp    eax,0xc0000095
  402205:	je     0x402270
  402207:	cmp    eax,0xc0000096
  40220c:	jne    0x40224e
  40220e:	xor    edx,edx
  402210:	mov    ecx,0x4
  402215:	call   0x403860
  40221a:	cmp    rax,0x1
  40221e:	je     0x4022ba
  402224:	test   rax,rax
  402227:	je     0x4022b0
  40222d:	mov    ecx,0x4
  402232:	call   rax
  402234:	xor    eax,eax
  402236:	jmp    0x4021a3
  40223b:	nop    DWORD PTR [rax+rax*1+0x0]
  402240:	cmp    eax,0xc000001d
  402245:	je     0x40220e
  402247:	cmp    eax,0xc000008c
  40224c:	je     0x402270
  40224e:	mov    eax,0x1
  402253:	add    rsp,0x28
  402257:	ret    
  402258:	mov    edx,0x1
  40225d:	mov    ecx,0x8
  402262:	call   0x403860
  402267:	call   0x401c30
  40226c:	nop    DWORD PTR [rax+0x0]
  402270:	xor    eax,eax
  402272:	add    rsp,0x28
  402276:	ret    
  402277:	nop    WORD PTR [rax+rax*1+0x0]
  402280:	xor    edx,edx
  402282:	mov    ecx,0x8
  402287:	call   0x403860
  40228c:	cmp    rax,0x1
  402290:	mov    rdx,rax
  402293:	jne    0x4021e4
  402299:	mov    edx,0x1
  40229e:	mov    ecx,0x8
  4022a3:	call   0x403860
  4022a8:	xor    eax,eax
  4022aa:	jmp    0x4021a3
  4022af:	nop
  4022b0:	mov    eax,0x4
  4022b5:	add    rsp,0x28
  4022b9:	ret    
  4022ba:	mov    edx,0x1
  4022bf:	mov    ecx,0x4
  4022c4:	call   0x403860
  4022c9:	xor    eax,eax
  4022cb:	jmp    0x4021a3
  4022d0:	mov    edx,0x1
  4022d5:	mov    ecx,0xb
  4022da:	call   0x403860
  4022df:	xor    eax,eax
  4022e1:	jmp    0x4021a3
  4022e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022f0:	push   r12
  4022f2:	push   rbp
  4022f3:	push   rdi
  4022f4:	push   rsi
  4022f5:	push   rbx
  4022f6:	sub    rsp,0x20
  4022fa:	call   0x402a60
  4022ff:	mov    rbp,rax
  402302:	mov    eax,DWORD PTR [rip+0x63c0]        # 0x4086c8
  402308:	test   eax,eax
  40230a:	jne    0x402331
  40230c:	test   rbp,rbp
  40230f:	je     0x402331
  402311:	lea    rcx,[rip+0x3398]        # 0x4056b0
  402318:	mov    DWORD PTR [rip+0x63a6],0x1        # 0x4086c8
  402322:	call   0x4028a0
  402327:	test   rax,rax
  40232a:	je     0x402340
  40232c:	mov    eax,0x1
  402331:	add    rsp,0x20
  402335:	pop    rbx
  402336:	pop    rsi
  402337:	pop    rdi
  402338:	pop    rbp
  402339:	pop    r12
  40233b:	ret    
  40233c:	nop    DWORD PTR [rax+0x0]
  402340:	lea    rbx,[rip+0x64b9]        # 0x408800
  402347:	mov    ecx,0x30
  40234c:	lea    rdx,[rip+0x63ad]        # 0x408700
  402353:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402140
  40235a:	xor    esi,esi
  40235c:	mov    rdi,rbx
  40235f:	rep stos QWORD PTR es:[rdi],rax
  402362:	mov    rdi,rdx
  402365:	sub    r12,rbp
  402368:	mov    cl,0x20
  40236a:	rep stos QWORD PTR es:[rdi],rax
  40236d:	mov    rdi,rdx
  402370:	jmp    0x4023a0
  402372:	mov    BYTE PTR [rdi],0x9
  402375:	mov    DWORD PTR [rdi+0x4],r12d
  402379:	add    rsi,0x1
  40237d:	mov    edx,DWORD PTR [rax+0xc]
  402380:	add    rbx,0xc
  402384:	mov    DWORD PTR [rbx-0xc],edx
  402387:	add    edx,DWORD PTR [rax+0x8]
  40238a:	mov    rax,rdi
  40238d:	sub    rax,rbp
  402390:	add    rdi,0x8
  402394:	mov    DWORD PTR [rbx-0x4],eax
  402397:	mov    DWORD PTR [rbx-0x8],edx
  40239a:	cmp    rsi,0x20
  40239e:	je     0x4023d5
  4023a0:	mov    rcx,rsi
  4023a3:	call   0x4029d0
  4023a8:	test   rax,rax
  4023ab:	jne    0x402372
  4023ad:	test   rsi,rsi
  4023b0:	je     0x40232c
  4023b6:	mov    edx,esi
  4023b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4023c0:	mov    r8,rbp
  4023c3:	lea    rcx,[rip+0x6436]        # 0x408800
  4023ca:	call   QWORD PTR [rip+0x6fd4]        # 0x4093a4
  4023d0:	jmp    0x40232c
  4023d5:	mov    edx,0x20
  4023da:	jmp    0x4023c0
  4023dc:	nop    DWORD PTR [rax+0x0]
  4023e0:	push   rbx
  4023e1:	sub    rsp,0x20
  4023e5:	mov    rdx,QWORD PTR [rcx]
  4023e8:	mov    eax,DWORD PTR [rdx]
  4023ea:	mov    r8d,eax
  4023ed:	and    r8d,0x20ffffff
  4023f4:	cmp    r8d,0x20474343
  4023fb:	je     0x402500
  402401:	cmp    eax,0xc0000091
  402406:	mov    rbx,rcx
  402409:	ja     0x402490
  40240f:	cmp    eax,0xc000008d
  402414:	jae    0x4024a7
  40241a:	cmp    eax,0xc0000008
  40241f:	je     0x402453
  402421:	ja     0x402460
  402423:	cmp    eax,0x80000002
  402428:	je     0x402453
  40242a:	cmp    eax,0xc0000005
  40242f:	jne    0x402472
  402431:	xor    edx,edx
  402433:	mov    ecx,0xb
  402438:	call   0x403860
  40243d:	cmp    rax,0x1
  402441:	je     0x402570
  402447:	test   rax,rax
  40244a:	je     0x402472
  40244c:	mov    ecx,0xb
  402451:	call   rax
  402453:	mov    eax,0xffffffff
  402458:	add    rsp,0x20
  40245c:	pop    rbx
  40245d:	ret    
  40245e:	xchg   ax,ax
  402460:	cmp    eax,0xc000001d
  402465:	je     0x402526
  40246b:	cmp    eax,0xc000008c
  402470:	je     0x402453
  402472:	mov    rax,QWORD PTR [rip+0x6247]        # 0x4086c0
  402479:	test   rax,rax
  40247c:	je     0x402458
  40247e:	mov    rcx,rbx
  402481:	add    rsp,0x20
  402485:	pop    rbx
  402486:	rex.W jmp rax
  402489:	nop    DWORD PTR [rax+0x0]
  402490:	cmp    eax,0xc0000094
  402495:	je     0x4024d2
  402497:	ja     0x402510
  402499:	cmp    eax,0xc0000092
  40249e:	je     0x402453
  4024a0:	cmp    eax,0xc0000093
  4024a5:	jne    0x402472
  4024a7:	xor    edx,edx
  4024a9:	mov    ecx,0x8
  4024ae:	call   0x403860
  4024b3:	cmp    rax,0x1
  4024b7:	jne    0x4024e4
  4024b9:	mov    edx,0x1
  4024be:	mov    ecx,0x8
  4024c3:	call   0x403860
  4024c8:	call   0x401c30
  4024cd:	jmp    0x402453
  4024d2:	xor    edx,edx
  4024d4:	mov    ecx,0x8
  4024d9:	call   0x403860
  4024de:	cmp    rax,0x1
  4024e2:	je     0x402552
  4024e4:	test   rax,rax
  4024e7:	je     0x402472
  4024e9:	mov    ecx,0x8
  4024ee:	call   rax
  4024f0:	mov    eax,0xffffffff
  4024f5:	jmp    0x402458
  4024fa:	nop    WORD PTR [rax+rax*1+0x0]
  402500:	test   BYTE PTR [rdx+0x4],0x1
  402504:	jne    0x402401
  40250a:	jmp    0x402453
  40250f:	nop
  402510:	cmp    eax,0xc0000095
  402515:	je     0x402453
  40251b:	cmp    eax,0xc0000096
  402520:	jne    0x402472
  402526:	xor    edx,edx
  402528:	mov    ecx,0x4
  40252d:	call   0x403860
  402532:	cmp    rax,0x1
  402536:	je     0x402584
  402538:	test   rax,rax
  40253b:	je     0x402472
  402541:	mov    ecx,0x4
  402546:	call   rax
  402548:	mov    eax,0xffffffff
  40254d:	jmp    0x402458
  402552:	mov    edx,0x1
  402557:	mov    ecx,0x8
  40255c:	call   0x403860
  402561:	jmp    0x402453
  402566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402570:	mov    edx,0x1
  402575:	mov    ecx,0xb
  40257a:	call   0x403860
  40257f:	jmp    0x402453
  402584:	mov    edx,0x1
  402589:	mov    ecx,0x4
  40258e:	call   0x403860
  402593:	jmp    0x402453
  402598:	nop
  402599:	nop
  40259a:	nop
  40259b:	nop
  40259c:	nop
  40259d:	nop
  40259e:	nop
  40259f:	nop
  4025a0:	push   rbp
  4025a1:	push   rdi
  4025a2:	push   rsi
  4025a3:	push   rbx
  4025a4:	sub    rsp,0x28
  4025a8:	lea    rcx,[rip+0x63f1]        # 0x4089a0
  4025af:	call   QWORD PTR [rip+0x6d97]        # 0x40934c
  4025b5:	mov    rbx,QWORD PTR [rip+0x63c4]        # 0x408980
  4025bc:	test   rbx,rbx
  4025bf:	je     0x4025f4
  4025c1:	mov    rbp,QWORD PTR [rip+0x6e14]        # 0x4093dc
  4025c8:	mov    rdi,QWORD PTR [rip+0x6d9d]        # 0x40936c
  4025cf:	nop
  4025d0:	mov    ecx,DWORD PTR [rbx]
  4025d2:	call   rbp
  4025d4:	mov    rsi,rax
  4025d7:	call   rdi
  4025d9:	test   eax,eax
  4025db:	jne    0x4025eb
  4025dd:	test   rsi,rsi
  4025e0:	je     0x4025eb
  4025e2:	mov    rax,QWORD PTR [rbx+0x8]
  4025e6:	mov    rcx,rsi
  4025e9:	call   rax
  4025eb:	mov    rbx,QWORD PTR [rbx+0x10]
  4025ef:	test   rbx,rbx
  4025f2:	jne    0x4025d0
  4025f4:	mov    rax,QWORD PTR [rip+0x6d99]        # 0x409394
  4025fb:	lea    rcx,[rip+0x639e]        # 0x4089a0
  402602:	add    rsp,0x28
  402606:	pop    rbx
  402607:	pop    rsi
  402608:	pop    rdi
  402609:	pop    rbp
  40260a:	rex.W jmp rax
  40260d:	nop    DWORD PTR [rax]
  402610:	push   rdi
  402611:	push   rsi
  402612:	push   rbx
  402613:	sub    rsp,0x20
  402617:	mov    eax,DWORD PTR [rip+0x636b]        # 0x408988
  40261d:	test   eax,eax
  40261f:	jne    0x402630
  402621:	add    rsp,0x20
  402625:	pop    rbx
  402626:	pop    rsi
  402627:	pop    rdi
  402628:	ret    
  402629:	nop    DWORD PTR [rax+0x0]
  402630:	mov    rsi,rdx
  402633:	mov    edi,ecx
  402635:	mov    edx,0x18
  40263a:	mov    ecx,0x1
  40263f:	call   0x4038b8
  402644:	test   rax,rax
  402647:	mov    rbx,rax
  40264a:	je     0x402688
  40264c:	mov    DWORD PTR [rax],edi
  40264e:	mov    QWORD PTR [rax+0x8],rsi
  402652:	lea    rcx,[rip+0x6347]        # 0x4089a0
  402659:	call   QWORD PTR [rip+0x6ced]        # 0x40934c
  40265f:	mov    rax,QWORD PTR [rip+0x631a]        # 0x408980
  402666:	lea    rcx,[rip+0x6333]        # 0x4089a0
  40266d:	mov    QWORD PTR [rip+0x630c],rbx        # 0x408980
  402674:	mov    QWORD PTR [rbx+0x10],rax
  402678:	call   QWORD PTR [rip+0x6d16]        # 0x409394
  40267e:	xor    eax,eax
  402680:	add    rsp,0x20
  402684:	pop    rbx
  402685:	pop    rsi
  402686:	pop    rdi
  402687:	ret    
  402688:	mov    eax,0xffffffff
  40268d:	jmp    0x402621
  40268f:	nop
  402690:	push   rbx
  402691:	sub    rsp,0x20
  402695:	mov    eax,DWORD PTR [rip+0x62ed]        # 0x408988
  40269b:	test   eax,eax
  40269d:	jne    0x4026b0
  40269f:	xor    eax,eax
  4026a1:	add    rsp,0x20
  4026a5:	pop    rbx
  4026a6:	ret    
  4026a7:	nop    WORD PTR [rax+rax*1+0x0]
  4026b0:	mov    ebx,ecx
  4026b2:	lea    rcx,[rip+0x62e7]        # 0x4089a0
  4026b9:	call   QWORD PTR [rip+0x6c8d]        # 0x40934c
  4026bf:	mov    rdx,QWORD PTR [rip+0x62ba]        # 0x408980
  4026c6:	test   rdx,rdx
  4026c9:	je     0x4026e7
  4026cb:	mov    eax,DWORD PTR [rdx]
  4026cd:	cmp    eax,ebx
  4026cf:	jne    0x4026de
  4026d1:	jmp    0x40271f
  4026d3:	mov    r8d,DWORD PTR [rax]
  4026d6:	cmp    r8d,ebx
  4026d9:	je     0x402700
  4026db:	mov    rdx,rax
  4026de:	mov    rax,QWORD PTR [rdx+0x10]
  4026e2:	test   rax,rax
  4026e5:	jne    0x4026d3
  4026e7:	lea    rcx,[rip+0x62b2]        # 0x4089a0
  4026ee:	call   QWORD PTR [rip+0x6ca0]        # 0x409394
  4026f4:	xor    eax,eax
  4026f6:	add    rsp,0x20
  4026fa:	pop    rbx
  4026fb:	ret    
  4026fc:	nop    DWORD PTR [rax+0x0]
  402700:	mov    rcx,rax
  402703:	mov    rax,QWORD PTR [rax+0x10]
  402707:	mov    QWORD PTR [rdx+0x10],rax
  40270b:	call   0x403898
  402710:	lea    rcx,[rip+0x6289]        # 0x4089a0
  402717:	call   QWORD PTR [rip+0x6c77]        # 0x409394
  40271d:	jmp    0x4026f4
  40271f:	mov    rax,QWORD PTR [rdx+0x10]
  402723:	mov    rcx,rdx
  402726:	mov    QWORD PTR [rip+0x6253],rax        # 0x408980
  40272d:	jmp    0x40270b
  40272f:	nop
  402730:	push   rbx
  402731:	sub    rsp,0x20
  402735:	cmp    edx,0x1
  402738:	je     0x4027d0
  40273e:	jb     0x402770
  402740:	cmp    edx,0x2
  402743:	je     0x402760
  402745:	cmp    edx,0x3
  402748:	jne    0x402765
  40274a:	mov    eax,DWORD PTR [rip+0x6238]        # 0x408988
  402750:	test   eax,eax
  402752:	je     0x402765
  402754:	call   0x4025a0
  402759:	jmp    0x402765
  40275b:	nop    DWORD PTR [rax+rax*1+0x0]
  402760:	call   0x401c30
  402765:	mov    eax,0x1
  40276a:	add    rsp,0x20
  40276e:	pop    rbx
  40276f:	ret    
  402770:	mov    eax,DWORD PTR [rip+0x6212]        # 0x408988
  402776:	test   eax,eax
  402778:	jne    0x402800
  40277e:	mov    eax,DWORD PTR [rip+0x6204]        # 0x408988
  402784:	cmp    eax,0x1
  402787:	jne    0x402765
  402789:	mov    rcx,QWORD PTR [rip+0x61f0]        # 0x408980
  402790:	test   rcx,rcx
  402793:	je     0x4027a6
  402795:	mov    rbx,QWORD PTR [rcx+0x10]
  402799:	call   0x403898
  40279e:	test   rbx,rbx
  4027a1:	mov    rcx,rbx
  4027a4:	jne    0x402795
  4027a6:	lea    rcx,[rip+0x61f3]        # 0x4089a0
  4027ad:	mov    QWORD PTR [rip+0x61c8],0x0        # 0x408980
  4027b8:	mov    DWORD PTR [rip+0x61c6],0x0        # 0x408988
  4027c2:	call   QWORD PTR [rip+0x6b7c]        # 0x409344
  4027c8:	jmp    0x402765
  4027ca:	nop    WORD PTR [rax+rax*1+0x0]
  4027d0:	mov    eax,DWORD PTR [rip+0x61b2]        # 0x408988
  4027d6:	test   eax,eax
  4027d8:	je     0x4027f0
  4027da:	mov    eax,0x1
  4027df:	mov    DWORD PTR [rip+0x619f],0x1        # 0x408988
  4027e9:	add    rsp,0x20
  4027ed:	pop    rbx
  4027ee:	ret    
  4027ef:	nop
  4027f0:	lea    rcx,[rip+0x61a9]        # 0x4089a0
  4027f7:	call   QWORD PTR [rip+0x6b8f]        # 0x40938c
  4027fd:	jmp    0x4027da
  4027ff:	nop
  402800:	call   0x4025a0
  402805:	jmp    0x40277e
  40280a:	nop
  40280b:	nop
  40280c:	nop
  40280d:	nop
  40280e:	nop
  40280f:	nop
  402810:	movsxd rax,DWORD PTR [rcx+0x3c]
  402814:	add    rcx,rax
  402817:	xor    eax,eax
  402819:	cmp    DWORD PTR [rcx],0x4550
  40281f:	je     0x402823
  402821:	repz ret 
  402823:	xor    eax,eax
  402825:	cmp    WORD PTR [rcx+0x18],0x20b
  40282b:	sete   al
  40282e:	ret    
  40282f:	nop
  402830:	cmp    WORD PTR [rcx],0x5a4d
  402835:	je     0x402840
  402837:	xor    eax,eax
  402839:	ret    
  40283a:	nop    WORD PTR [rax+rax*1+0x0]
  402840:	jmp    0x402810
  402842:	nop    DWORD PTR [rax+0x0]
  402846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402850:	movsxd rax,DWORD PTR [rcx+0x3c]
  402854:	add    rcx,rax
  402857:	movzx  eax,WORD PTR [rcx+0x14]
  40285b:	lea    rax,[rcx+rax*1+0x18]
  402860:	movzx  ecx,WORD PTR [rcx+0x6]
  402864:	test   ecx,ecx
  402866:	je     0x402891
  402868:	sub    ecx,0x1
  40286b:	lea    rcx,[rcx+rcx*4]
  40286f:	lea    r9,[rax+rcx*8+0x28]
  402874:	mov    r8d,DWORD PTR [rax+0xc]
  402878:	cmp    r8,rdx
  40287b:	mov    rcx,r8
  40287e:	ja     0x402888
  402880:	add    ecx,DWORD PTR [rax+0x8]
  402883:	cmp    rdx,rcx
  402886:	jb     0x402893
  402888:	add    rax,0x28
  40288c:	cmp    rax,r9
  40288f:	jne    0x402874
  402891:	xor    eax,eax
  402893:	repz ret 
  402895:	nop
  402896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028a0:	push   rdi
  4028a1:	push   rsi
  4028a2:	push   rbx
  4028a3:	sub    rsp,0x20
  4028a7:	mov    rsi,rcx
  4028aa:	call   0x403850
  4028af:	cmp    rax,0x8
  4028b3:	ja     0x4028d0
  4028b5:	mov    rbx,QWORD PTR [rip+0x2fa4]        # 0x405860
  4028bc:	xor    edi,edi
  4028be:	cmp    WORD PTR [rbx],0x5a4d
  4028c3:	je     0x4028e0
  4028c5:	mov    rax,rdi
  4028c8:	add    rsp,0x20
  4028cc:	pop    rbx
  4028cd:	pop    rsi
  4028ce:	pop    rdi
  4028cf:	ret    
  4028d0:	xor    edi,edi
  4028d2:	mov    rax,rdi
  4028d5:	add    rsp,0x20
  4028d9:	pop    rbx
  4028da:	pop    rsi
  4028db:	pop    rdi
  4028dc:	ret    
  4028dd:	nop    DWORD PTR [rax]
  4028e0:	mov    rcx,rbx
  4028e3:	call   0x402810
  4028e8:	test   eax,eax
  4028ea:	je     0x4028c5
  4028ec:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4028f0:	add    rdx,rbx
  4028f3:	movzx  eax,WORD PTR [rdx+0x14]
  4028f7:	lea    rbx,[rdx+rax*1+0x18]
  4028fc:	movzx  eax,WORD PTR [rdx+0x6]
  402900:	test   eax,eax
  402902:	je     0x4028c5
  402904:	sub    eax,0x1
  402907:	lea    rax,[rax+rax*4]
  40290b:	lea    rdi,[rbx+rax*8+0x28]
  402910:	jmp    0x40291b
  402912:	add    rbx,0x28
  402916:	cmp    rbx,rdi
  402919:	je     0x4028d0
  40291b:	mov    r8d,0x8
  402921:	mov    rdx,rsi
  402924:	mov    rcx,rbx
  402927:	call   0x403848
  40292c:	test   eax,eax
  40292e:	jne    0x402912
  402930:	mov    rdi,rbx
  402933:	mov    rax,rdi
  402936:	add    rsp,0x20
  40293a:	pop    rbx
  40293b:	pop    rsi
  40293c:	pop    rdi
  40293d:	ret    
  40293e:	xchg   ax,ax
  402940:	push   rsi
  402941:	push   rbx
  402942:	sub    rsp,0x28
  402946:	mov    rbx,QWORD PTR [rip+0x2f13]        # 0x405860
  40294d:	cmp    WORD PTR [rbx],0x5a4d
  402952:	je     0x402960
  402954:	xor    eax,eax
  402956:	add    rsp,0x28
  40295a:	pop    rbx
  40295b:	pop    rsi
  40295c:	ret    
  40295d:	nop    DWORD PTR [rax]
  402960:	mov    rsi,rcx
  402963:	mov    rcx,rbx
  402966:	call   0x402810
  40296b:	test   eax,eax
  40296d:	je     0x402954
  40296f:	sub    rsi,rbx
  402972:	mov    rcx,rbx
  402975:	mov    rdx,rsi
  402978:	add    rsp,0x28
  40297c:	pop    rbx
  40297d:	pop    rsi
  40297e:	jmp    0x402850
  402983:	nop    DWORD PTR [rax]
  402986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402990:	push   rbx
  402991:	sub    rsp,0x20
  402995:	mov    rbx,QWORD PTR [rip+0x2ec4]        # 0x405860
  40299c:	xor    eax,eax
  40299e:	cmp    WORD PTR [rbx],0x5a4d
  4029a3:	je     0x4029b0
  4029a5:	add    rsp,0x20
  4029a9:	pop    rbx
  4029aa:	ret    
  4029ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4029b0:	mov    rcx,rbx
  4029b3:	call   0x402810
  4029b8:	test   eax,eax
  4029ba:	je     0x4029a5
  4029bc:	movsxd rax,DWORD PTR [rbx+0x3c]
  4029c0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4029c5:	add    rsp,0x20
  4029c9:	pop    rbx
  4029ca:	ret    
  4029cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4029d0:	push   rdi
  4029d1:	push   rsi
  4029d2:	push   rbx
  4029d3:	sub    rsp,0x20
  4029d7:	mov    rsi,QWORD PTR [rip+0x2e82]        # 0x405860
  4029de:	xor    edi,edi
  4029e0:	mov    rbx,rcx
  4029e3:	cmp    WORD PTR [rsi],0x5a4d
  4029e8:	je     0x4029f5
  4029ea:	mov    rax,rdi
  4029ed:	add    rsp,0x20
  4029f1:	pop    rbx
  4029f2:	pop    rsi
  4029f3:	pop    rdi
  4029f4:	ret    
  4029f5:	mov    rcx,rsi
  4029f8:	call   0x402810
  4029fd:	test   eax,eax
  4029ff:	je     0x4029ea
  402a01:	movsxd rax,DWORD PTR [rsi+0x3c]
  402a05:	add    rsi,rax
  402a08:	movzx  eax,WORD PTR [rsi+0x14]
  402a0c:	lea    rdx,[rsi+rax*1+0x18]
  402a11:	movzx  eax,WORD PTR [rsi+0x6]
  402a15:	test   eax,eax
  402a17:	je     0x4029ea
  402a19:	sub    eax,0x1
  402a1c:	lea    rax,[rax+rax*4]
  402a20:	lea    rax,[rdx+rax*8+0x28]
  402a25:	test   BYTE PTR [rdx+0x27],0x20
  402a29:	je     0x402a34
  402a2b:	test   rbx,rbx
  402a2e:	je     0x402a50
  402a30:	sub    rbx,0x1
  402a34:	add    rdx,0x28
  402a38:	cmp    rdx,rax
  402a3b:	jne    0x402a25
  402a3d:	xor    edi,edi
  402a3f:	mov    rax,rdi
  402a42:	add    rsp,0x20
  402a46:	pop    rbx
  402a47:	pop    rsi
  402a48:	pop    rdi
  402a49:	ret    
  402a4a:	nop    WORD PTR [rax+rax*1+0x0]
  402a50:	mov    rdi,rdx
  402a53:	mov    rax,rdi
  402a56:	add    rsp,0x20
  402a5a:	pop    rbx
  402a5b:	pop    rsi
  402a5c:	pop    rdi
  402a5d:	ret    
  402a5e:	xchg   ax,ax
  402a60:	push   rsi
  402a61:	push   rbx
  402a62:	sub    rsp,0x28
  402a66:	mov    rsi,QWORD PTR [rip+0x2df3]        # 0x405860
  402a6d:	xor    ebx,ebx
  402a6f:	cmp    WORD PTR [rsi],0x5a4d
  402a74:	je     0x402a80
  402a76:	mov    rax,rbx
  402a79:	add    rsp,0x28
  402a7d:	pop    rbx
  402a7e:	pop    rsi
  402a7f:	ret    
  402a80:	mov    rcx,rsi
  402a83:	call   0x402810
  402a88:	test   eax,eax
  402a8a:	cmovne rbx,rsi
  402a8e:	mov    rax,rbx
  402a91:	add    rsp,0x28
  402a95:	pop    rbx
  402a96:	pop    rsi
  402a97:	ret    
  402a98:	nop    DWORD PTR [rax+rax*1+0x0]
  402aa0:	push   rsi
  402aa1:	push   rbx
  402aa2:	sub    rsp,0x28
  402aa6:	mov    rbx,QWORD PTR [rip+0x2db3]        # 0x405860
  402aad:	xor    eax,eax
  402aaf:	cmp    WORD PTR [rbx],0x5a4d
  402ab4:	je     0x402ac0
  402ab6:	add    rsp,0x28
  402aba:	pop    rbx
  402abb:	pop    rsi
  402abc:	ret    
  402abd:	nop    DWORD PTR [rax]
  402ac0:	mov    rsi,rcx
  402ac3:	mov    rcx,rbx
  402ac6:	call   0x402810
  402acb:	test   eax,eax
  402acd:	je     0x402ab6
  402acf:	sub    rsi,rbx
  402ad2:	mov    rcx,rbx
  402ad5:	mov    rdx,rsi
  402ad8:	call   0x402850
  402add:	test   rax,rax
  402ae0:	je     0x402af1
  402ae2:	mov    eax,DWORD PTR [rax+0x24]
  402ae5:	not    eax
  402ae7:	shr    eax,0x1f
  402aea:	add    rsp,0x28
  402aee:	pop    rbx
  402aef:	pop    rsi
  402af0:	ret    
  402af1:	xor    eax,eax
  402af3:	jmp    0x402ab6
  402af5:	nop
  402af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b00:	push   rbp
  402b01:	push   rdi
  402b02:	push   rsi
  402b03:	push   rbx
  402b04:	sub    rsp,0x28
  402b08:	mov    rdi,QWORD PTR [rip+0x2d51]        # 0x405860
  402b0f:	xor    ebp,ebp
  402b11:	mov    esi,ecx
  402b13:	cmp    WORD PTR [rdi],0x5a4d
  402b18:	je     0x402b30
  402b1a:	mov    rax,rbp
  402b1d:	add    rsp,0x28
  402b21:	pop    rbx
  402b22:	pop    rsi
  402b23:	pop    rdi
  402b24:	pop    rbp
  402b25:	ret    
  402b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b30:	mov    rcx,rdi
  402b33:	call   0x402810
  402b38:	test   eax,eax
  402b3a:	je     0x402b1a
  402b3c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402b40:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402b47:	test   edx,edx
  402b49:	je     0x402b1a
  402b4b:	mov    ebx,edx
  402b4d:	mov    rcx,rdi
  402b50:	mov    rdx,rbx
  402b53:	call   0x402850
  402b58:	test   rax,rax
  402b5b:	je     0x402b1a
  402b5d:	add    rbx,rdi
  402b60:	mov    rdx,rbx
  402b63:	jne    0x402b77
  402b65:	jmp    0x402b1a
  402b67:	nop    WORD PTR [rax+rax*1+0x0]
  402b70:	sub    esi,0x1
  402b73:	add    rdx,0x14
  402b77:	mov    ecx,DWORD PTR [rdx+0x4]
  402b7a:	test   ecx,ecx
  402b7c:	jne    0x402b85
  402b7e:	mov    eax,DWORD PTR [rdx+0xc]
  402b81:	test   eax,eax
  402b83:	je     0x402ba0
  402b85:	test   esi,esi
  402b87:	jg     0x402b70
  402b89:	mov    ebp,DWORD PTR [rdx+0xc]
  402b8c:	add    rbp,rdi
  402b8f:	mov    rax,rbp
  402b92:	add    rsp,0x28
  402b96:	pop    rbx
  402b97:	pop    rsi
  402b98:	pop    rdi
  402b99:	pop    rbp
  402b9a:	ret    
  402b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402ba0:	xor    ebp,ebp
  402ba2:	mov    rax,rbp
  402ba5:	add    rsp,0x28
  402ba9:	pop    rbx
  402baa:	pop    rsi
  402bab:	pop    rdi
  402bac:	pop    rbp
  402bad:	ret    
  402bae:	nop
  402baf:	nop
  402bb0:	push   rcx
  402bb1:	push   rax
  402bb2:	cmp    rax,0x1000
  402bb8:	lea    rcx,[rsp+0x18]
  402bbd:	jb     0x402bd8
  402bbf:	sub    rcx,0x1000
  402bc6:	or     QWORD PTR [rcx],0x0
  402bca:	sub    rax,0x1000
  402bd0:	cmp    rax,0x1000
  402bd6:	ja     0x402bbf
  402bd8:	sub    rcx,rax
  402bdb:	or     QWORD PTR [rcx],0x0
  402bdf:	pop    rax
  402be0:	pop    rcx
  402be1:	ret    
  402be2:	nop
  402be3:	nop
  402be4:	nop
  402be5:	nop
  402be6:	nop
  402be7:	nop
  402be8:	nop
  402be9:	nop
  402bea:	nop
  402beb:	nop
  402bec:	nop
  402bed:	nop
  402bee:	nop
  402bef:	nop
  402bf0:	push   r13
  402bf2:	push   r12
  402bf4:	push   rbp
  402bf5:	push   rdi
  402bf6:	push   rsi
  402bf7:	push   rbx
  402bf8:	mov    r12d,edx
  402bfb:	mov    ebp,r8d
  402bfe:	mov    edi,edx
  402c00:	sub    r12d,ecx
  402c03:	sub    ebp,edx
  402c05:	mov    eax,r12d
  402c08:	cdq    
  402c09:	idiv   ebp
  402c0b:	test   edx,edx
  402c0d:	mov    r13d,edx
  402c10:	je     0x402c95
  402c16:	mov    eax,ebp
  402c18:	jmp    0x402c23
  402c1a:	nop    WORD PTR [rax+rax*1+0x0]
  402c20:	mov    r13d,edx
  402c23:	cdq    
  402c24:	idiv   r13d
  402c27:	mov    eax,r13d
  402c2a:	test   edx,edx
  402c2c:	jne    0x402c20
  402c2e:	mov    eax,r8d
  402c31:	sub    eax,ecx
  402c33:	cdq    
  402c34:	idiv   r13d
  402c37:	test   r13d,r13d
  402c3a:	jle    0x402c8c
  402c3c:	movsxd rdx,edi
  402c3f:	xor    esi,esi
  402c41:	lea    rdx,[r9+rdx*8]
  402c45:	test   eax,eax
  402c47:	lea    ecx,[rdi+rsi*1]
  402c4a:	jle    0x402c83
  402c4c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  402c50:	xor    r10d,r10d
  402c53:	mov    r11d,ecx
  402c56:	lea    r8d,[rcx+rbp*1]
  402c5a:	sub    r11d,r12d
  402c5d:	cmp    edi,ecx
  402c5f:	mov    ecx,r11d
  402c62:	cmovg  ecx,r8d
  402c66:	add    r10d,0x1
  402c6a:	movsxd r11,ecx
  402c6d:	cmp    r10d,eax
  402c70:	lea    r8,[r9+r11*8]
  402c74:	mov    r11,QWORD PTR [r8]
  402c77:	mov    QWORD PTR [r8],rbx
  402c7a:	mov    QWORD PTR [rdx+rsi*8],r11
  402c7e:	mov    rbx,r11
  402c81:	jne    0x402c53
  402c83:	add    rsi,0x1
  402c87:	cmp    r13d,esi
  402c8a:	jg     0x402c45
  402c8c:	pop    rbx
  402c8d:	pop    rsi
  402c8e:	pop    rdi
  402c8f:	pop    rbp
  402c90:	pop    r12
  402c92:	pop    r13
  402c94:	ret    
  402c95:	mov    r13d,ebp
  402c98:	jmp    0x402c2e
  402c9a:	nop    WORD PTR [rax+rax*1+0x0]
  402ca0:	push   rdi
  402ca1:	push   rsi
  402ca2:	push   rbx
  402ca3:	sub    rsp,0x30
  402ca7:	mov    rax,QWORD PTR [rip+0x2bc2]        # 0x405870
  402cae:	mov    QWORD PTR [rsp+0x58],rdx
  402cb3:	mov    QWORD PTR [rsp+0x60],r8
  402cb8:	lea    rsi,[rsp+0x58]
  402cbd:	mov    QWORD PTR [rsp+0x68],r9
  402cc2:	mov    rbx,rcx
  402cc5:	mov    rax,QWORD PTR [rax]
  402cc8:	mov    QWORD PTR [rsp+0x28],rsi
  402ccd:	mov    rax,QWORD PTR [rax]
  402cd0:	mov    rdi,QWORD PTR [rax]
  402cd3:	call   0x403918
  402cd8:	lea    rdx,[rip+0x29e1]        # 0x4056c0
  402cdf:	lea    rcx,[rax+0x60]
  402ce3:	mov    r8,rdi
  402ce6:	call   0x4038a8
  402ceb:	test   rbx,rbx
  402cee:	je     0x402d04
  402cf0:	call   0x403918
  402cf5:	lea    rcx,[rax+0x60]
  402cf9:	mov    r8,rsi
  402cfc:	mov    rdx,rbx
  402cff:	call   0x403840
  402d04:	call   0x403918
  402d09:	lea    rdx,[rax+0x60]
  402d0d:	mov    ecx,0xa
  402d12:	call   0x4038a0
  402d17:	nop
  402d18:	add    rsp,0x30
  402d1c:	pop    rbx
  402d1d:	pop    rsi
  402d1e:	pop    rdi
  402d1f:	ret    
  402d20:	push   r15
  402d22:	push   r14
  402d24:	push   r13
  402d26:	push   r12
  402d28:	push   rbp
  402d29:	push   rdi
  402d2a:	push   rsi
  402d2b:	push   rbx
  402d2c:	sub    rsp,0x48
  402d30:	mov    eax,DWORD PTR [rip+0x1336]        # 0x40406c
  402d36:	mov    rbp,QWORD PTR [rip+0x1323]        # 0x404060
  402d3d:	mov    QWORD PTR [rsp+0x90],rcx
  402d45:	mov    QWORD PTR [rsp+0x98],rdx
  402d4d:	mov    edx,0x3d
  402d52:	mov    r14,r8
  402d55:	mov    QWORD PTR [rsp+0xa8],r9
  402d5d:	mov    r13d,DWORD PTR [rsp+0xb0]
  402d65:	mov    DWORD PTR [rsp+0x38],eax
  402d69:	mov    rcx,rbp
  402d6c:	add    eax,0x1
  402d6f:	mov    DWORD PTR [rsp+0x3c],eax
  402d73:	mov    DWORD PTR [rip+0x12f3],eax        # 0x40406c
  402d79:	call   0x403858
  402d7e:	test   rax,rax
  402d81:	mov    QWORD PTR [rsp+0x30],rax
  402d86:	je     0x402f64
  402d8c:	mov    rdi,rax
  402d8f:	add    rax,0x1
  402d93:	sub    rdi,rbp
  402d96:	mov    QWORD PTR [rsp+0x30],rax
  402d9b:	mov    r15,QWORD PTR [r14]
  402d9e:	test   r15,r15
  402da1:	je     0x402fab
  402da7:	lea    rbx,[r14+0x20]
  402dab:	mov    r12d,0xffffffff
  402db1:	mov    DWORD PTR [rsp+0x2c],0x0
  402db9:	xor    esi,esi
  402dbb:	jmp    0x402dd5
  402dbd:	nop    DWORD PTR [rax]
  402dc0:	test   r13d,r13d
  402dc3:	je     0x402dfe
  402dc5:	add    rbx,0x20
  402dc9:	mov    r15,QWORD PTR [rbx-0x20]
  402dcd:	add    esi,0x1
  402dd0:	test   r15,r15
  402dd3:	je     0x402e40
  402dd5:	mov    r8,rdi
  402dd8:	mov    rdx,r15
  402ddb:	mov    rcx,rbp
  402dde:	call   0x403848
  402de3:	test   eax,eax
  402de5:	jne    0x402dc5
  402de7:	mov    rcx,r15
  402dea:	call   0x403850
  402def:	cmp    rax,rdi
  402df2:	je     0x402eed
  402df8:	cmp    rdi,0x1
  402dfc:	je     0x402dc0
  402dfe:	cmp    r12d,0xffffffff
  402e02:	je     0x402ea0
  402e08:	movsxd rax,r12d
  402e0b:	shl    rax,0x5
  402e0f:	add    rax,r14
  402e12:	mov    edx,DWORD PTR [rax+0x8]
  402e15:	cmp    DWORD PTR [rbx-0x18],edx
  402e18:	je     0x402eb0
  402e1e:	add    rbx,0x20
  402e22:	mov    r15,QWORD PTR [rbx-0x20]
  402e26:	add    esi,0x1
  402e29:	mov    DWORD PTR [rsp+0x2c],0x1
  402e31:	test   r15,r15
  402e34:	jne    0x402dd5
  402e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e40:	mov    r9d,DWORD PTR [rsp+0x2c]
  402e45:	test   r9d,r9d
  402e48:	je     0x402ee0
  402e4e:	mov    r8d,DWORD PTR [rip+0x121b]        # 0x404070
  402e55:	test   r8d,r8d
  402e58:	je     0x402e78
  402e5a:	mov    rax,QWORD PTR [rsp+0x98]
  402e62:	cmp    BYTE PTR [rax],0x3a
  402e65:	je     0x402e78
  402e67:	lea    rcx,[rip+0x28e2]        # 0x405750
  402e6e:	mov    r8,rbp
  402e71:	mov    edx,edi
  402e73:	call   0x402ca0
  402e78:	mov    DWORD PTR [rip+0x11e6],0x0        # 0x404068
  402e82:	mov    eax,0x3f
  402e87:	add    rsp,0x48
  402e8b:	pop    rbx
  402e8c:	pop    rsi
  402e8d:	pop    rdi
  402e8e:	pop    rbp
  402e8f:	pop    r12
  402e91:	pop    r13
  402e93:	pop    r14
  402e95:	pop    r15
  402e97:	ret    
  402e98:	nop    DWORD PTR [rax+rax*1+0x0]
  402ea0:	mov    r12d,esi
  402ea3:	jmp    0x402dc5
  402ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  402eb0:	mov    rdx,QWORD PTR [rax+0x10]
  402eb4:	cmp    QWORD PTR [rbx-0x10],rdx
  402eb8:	jne    0x402e1e
  402ebe:	mov    eax,DWORD PTR [rax+0x18]
  402ec1:	cmp    DWORD PTR [rbx-0x8],eax
  402ec4:	mov    eax,0x1
  402ec9:	cmove  eax,DWORD PTR [rsp+0x2c]
  402ece:	mov    DWORD PTR [rsp+0x2c],eax
  402ed2:	jmp    0x402dc5
  402ed7:	nop    WORD PTR [rax+rax*1+0x0]
  402ee0:	cmp    r12d,0xffffffff
  402ee4:	je     0x402fab
  402eea:	mov    esi,r12d
  402eed:	movsxd rax,esi
  402ef0:	shl    rax,0x5
  402ef4:	add    r14,rax
  402ef7:	cmp    QWORD PTR [rsp+0x30],0x0
  402efd:	mov    eax,DWORD PTR [r14+0x8]
  402f01:	setne  cl
  402f04:	je     0x402f74
  402f06:	test   eax,eax
  402f08:	jne    0x402f74
  402f0a:	mov    ecx,DWORD PTR [rip+0x1160]        # 0x404070
  402f10:	test   ecx,ecx
  402f12:	jne    0x402f44
  402f14:	cmp    QWORD PTR [r14+0x10],0x0
  402f19:	je     0x403074
  402f1f:	mov    DWORD PTR [rip+0x113f],0x0        # 0x404068
  402f29:	mov    rax,QWORD PTR [rsp+0x98]
  402f31:	cmp    BYTE PTR [rax],0x3a
  402f34:	je     0x403061
  402f3a:	mov    eax,0x3f
  402f3f:	jmp    0x402e87
  402f44:	mov    rax,QWORD PTR [rsp+0x98]
  402f4c:	cmp    BYTE PTR [rax],0x3a
  402f4f:	je     0x402f14
  402f51:	lea    rcx,[rip+0x27c8]        # 0x405720
  402f58:	mov    r8,rbp
  402f5b:	mov    edx,edi
  402f5d:	call   0x402ca0
  402f62:	jmp    0x402f14
  402f64:	mov    rcx,rbp
  402f67:	call   0x403850
  402f6c:	mov    rdi,rax
  402f6f:	jmp    0x402d9b
  402f74:	lea    edx,[rax-0x1]
  402f77:	cmp    edx,0x1
  402f7a:	jbe    0x402fe7
  402f7c:	cmp    QWORD PTR [rsp+0xa8],0x0
  402f85:	je     0x402f91
  402f87:	mov    rax,QWORD PTR [rsp+0xa8]
  402f8f:	mov    DWORD PTR [rax],esi
  402f91:	mov    rax,QWORD PTR [r14+0x10]
  402f95:	test   rax,rax
  402f98:	je     0x40306b
  402f9e:	mov    edx,DWORD PTR [r14+0x18]
  402fa2:	mov    DWORD PTR [rax],edx
  402fa4:	xor    eax,eax
  402fa6:	jmp    0x402e87
  402fab:	test   r13d,r13d
  402fae:	jne    0x4030c2
  402fb4:	mov    eax,DWORD PTR [rip+0x10b6]        # 0x404070
  402fba:	test   eax,eax
  402fbc:	je     0x402e78
  402fc2:	mov    rax,QWORD PTR [rsp+0x98]
  402fca:	cmp    BYTE PTR [rax],0x3a
  402fcd:	je     0x402e78
  402fd3:	lea    rcx,[rip+0x2706]        # 0x4056e0
  402fda:	mov    rdx,rbp
  402fdd:	call   0x402ca0
  402fe2:	jmp    0x402e78
  402fe7:	test   cl,cl
  402fe9:	je     0x403083
  402fef:	mov    rdx,QWORD PTR [rsp+0x30]
  402ff4:	cmp    eax,0x1
  402ff7:	mov    QWORD PTR [rip+0x5a52],rdx        # 0x408a50
  402ffe:	jne    0x402f7c
  403004:	mov    r15,QWORD PTR [rsp+0x30]
  403009:	test   r15,r15
  40300c:	jne    0x402f7c
  403012:	mov    edx,DWORD PTR [rip+0x1058]        # 0x404070
  403018:	test   edx,edx
  40301a:	je     0x403038
  40301c:	mov    rax,QWORD PTR [rsp+0x98]
  403024:	cmp    BYTE PTR [rax],0x3a
  403027:	je     0x403038
  403029:	lea    rcx,[rip+0x2750]        # 0x405780
  403030:	mov    rdx,rbp
  403033:	call   0x402ca0
  403038:	cmp    QWORD PTR [r14+0x10],0x0
  40303d:	je     0x4030b6
  40303f:	mov    DWORD PTR [rip+0x101f],0x0        # 0x404068
  403049:	mov    rax,QWORD PTR [rsp+0x98]
  403051:	sub    DWORD PTR [rip+0x1014],0x1        # 0x40406c
  403058:	cmp    BYTE PTR [rax],0x3a
  40305b:	jne    0x402f3a
  403061:	mov    eax,0x3a
  403066:	jmp    0x402e87
  40306b:	mov    eax,DWORD PTR [r14+0x18]
  40306f:	jmp    0x402e87
  403074:	mov    eax,DWORD PTR [r14+0x18]
  403078:	mov    DWORD PTR [rip+0xfea],eax        # 0x404068
  40307e:	jmp    0x402f29
  403083:	cmp    eax,0x1
  403086:	jne    0x402f7c
  40308c:	mov    eax,DWORD PTR [rsp+0x38]
  403090:	mov    rdx,QWORD PTR [rsp+0x90]
  403098:	add    eax,0x2
  40309b:	mov    DWORD PTR [rip+0xfcb],eax        # 0x40406c
  4030a1:	movsxd rax,DWORD PTR [rsp+0x3c]
  4030a6:	mov    r15,QWORD PTR [rdx+rax*8]
  4030aa:	mov    QWORD PTR [rip+0x599f],r15        # 0x408a50
  4030b1:	jmp    0x403009
  4030b6:	mov    eax,DWORD PTR [r14+0x18]
  4030ba:	mov    DWORD PTR [rip+0xfa8],eax        # 0x404068
  4030c0:	jmp    0x403049
  4030c2:	mov    eax,DWORD PTR [rsp+0x38]
  4030c6:	mov    DWORD PTR [rip+0xfa0],eax        # 0x40406c
  4030cc:	mov    eax,0xffffffff
  4030d1:	jmp    0x402e87
  4030d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030e0:	push   r15
  4030e2:	push   r14
  4030e4:	push   r13
  4030e6:	push   r12
  4030e8:	push   rbp
  4030e9:	push   rdi
  4030ea:	push   rsi
  4030eb:	push   rbx
  4030ec:	sub    rsp,0x38
  4030f0:	test   r8,r8
  4030f3:	mov    edi,ecx
  4030f5:	mov    r15,rdx
  4030f8:	mov    QWORD PTR [rsp+0x90],r8
  403100:	mov    QWORD PTR [rsp+0x98],r9
  403108:	je     0x4033de
  40310e:	mov    r9d,DWORD PTR [rip+0xf57]        # 0x40406c
  403115:	test   r9d,r9d
  403118:	je     0x403370
  40311e:	cmp    DWORD PTR [rip+0xf2b],0xffffffff        # 0x404050
  403125:	je     0x4032e4
  40312b:	mov    edx,DWORD PTR [rip+0x5927]        # 0x408a58
  403131:	test   edx,edx
  403133:	jne    0x4032e4
  403139:	mov    rax,QWORD PTR [rsp+0x90]
  403141:	movzx  eax,BYTE PTR [rax]
  403144:	cmp    al,0x2d
  403146:	je     0x403318
  40314c:	cmp    al,0x2b
  40314e:	je     0x4033f4
  403154:	mov    r8d,DWORD PTR [rip+0xef5]        # 0x404050
  40315b:	test   r8d,r8d
  40315e:	jne    0x4033f4
  403164:	sub    eax,0x2b
  403167:	test   al,0xfd
  403169:	je     0x403320
  40316f:	test   edx,edx
  403171:	mov    QWORD PTR [rip+0x58d4],0x0        # 0x408a50
  40317c:	jne    0x403350
  403182:	mov    r14d,DWORD PTR [rsp+0xa8]
  40318a:	mov    ebp,DWORD PTR [rsp+0xa8]
  403191:	and    r14d,0x2
  403195:	and    ebp,0x1
  403198:	jmp    0x40321e
  40319d:	nop    DWORD PTR [rax]
  4031a0:	lea    rax,[rip+0x252e]        # 0x4056d5
  4031a7:	test   r14d,r14d
  4031aa:	mov    edx,r14d
  4031ad:	mov    QWORD PTR [rip+0xeac],rax        # 0x404060
  4031b4:	jne    0x4034c0
  4031ba:	test   ebp,ebp
  4031bc:	je     0x4033de
  4031c2:	mov    r12d,DWORD PTR [rip+0xe8f]        # 0x404058
  4031c9:	cmp    r12d,0xffffffff
  4031cd:	je     0x403340
  4031d3:	mov    r13d,DWORD PTR [rip+0xe7a]        # 0x404054
  4031da:	cmp    r13d,0xffffffff
  4031de:	je     0x403215
  4031e0:	mov    edx,r13d
  4031e3:	mov    r9,r15
  4031e6:	mov    r8d,ebx
  4031e9:	mov    ecx,r12d
  4031ec:	call   0x402bf0
  4031f1:	mov    esi,DWORD PTR [rip+0xe75]        # 0x40406c
  4031f7:	mov    eax,r12d
  4031fa:	mov    edx,DWORD PTR [rip+0x5858]        # 0x408a58
  403200:	sub    eax,r13d
  403203:	mov    DWORD PTR [rip+0xe47],0xffffffff        # 0x404054
  40320d:	add    eax,esi
  40320f:	mov    DWORD PTR [rip+0xe43],eax        # 0x404058
  403215:	add    esi,0x1
  403218:	mov    DWORD PTR [rip+0xe4e],esi        # 0x40406c
  40321e:	test   edx,edx
  403220:	jne    0x403234
  403222:	mov    rsi,QWORD PTR [rip+0xe37]        # 0x404060
  403229:	movzx  eax,BYTE PTR [rsi]
  40322c:	test   al,al
  40322e:	jne    0x40342e
  403234:	movsxd rbx,DWORD PTR [rip+0xe31]        # 0x40406c
  40323b:	mov    DWORD PTR [rip+0x5813],0x0        # 0x408a58
  403245:	cmp    ebx,edi
  403247:	mov    esi,ebx
  403249:	jge    0x403390
  40324f:	movsxd rax,ebx
  403252:	mov    r13,QWORD PTR [r15+rax*8]
  403256:	cmp    BYTE PTR [r13+0x0],0x2d
  40325b:	mov    QWORD PTR [rip+0xdfe],r13        # 0x404060
  403262:	jne    0x4031a0
  403268:	movzx  eax,BYTE PTR [r13+0x1]
  40326d:	test   al,al
  40326f:	jne    0x403401
  403275:	mov    rcx,QWORD PTR [rsp+0x90]
  40327d:	mov    edx,0x2d
  403282:	call   0x403858
  403287:	test   rax,rax
  40328a:	je     0x4031a0
  403290:	cmp    DWORD PTR [rip+0xdc1],0xffffffff        # 0x404058
  403297:	mov    rsi,r13
  40329a:	je     0x4032b4
  40329c:	cmp    DWORD PTR [rip+0xdb1],0xffffffff        # 0x404054
  4032a3:	mov    eax,0x2d
  4032a8:	jne    0x40342e
  4032ae:	mov    DWORD PTR [rip+0xda0],ebx        # 0x404054
  4032b4:	cmp    QWORD PTR [rsp+0x98],0x0
  4032bd:	je     0x4036ac
  4032c3:	cmp    rsi,QWORD PTR [r15+rbx*8]
  4032c7:	mov    eax,0x2d
  4032cc:	je     0x4034fe
  4032d2:	add    rsi,0x1
  4032d6:	xor    edx,edx
  4032d8:	mov    QWORD PTR [rip+0xd81],rsi        # 0x404060
  4032df:	jmp    0x403482
  4032e4:	lea    rcx,[rip+0x23da]        # 0x4056c5
  4032eb:	call   0x403888
  4032f0:	test   rax,rax
  4032f3:	mov    edx,DWORD PTR [rip+0x575f]        # 0x408a58
  4032f9:	setne  al
  4032fc:	movzx  eax,al
  4032ff:	mov    DWORD PTR [rip+0xd4b],eax        # 0x404050
  403305:	mov    rax,QWORD PTR [rsp+0x90]
  40330d:	movzx  eax,BYTE PTR [rax]
  403310:	cmp    al,0x2d
  403312:	jne    0x40314c
  403318:	or     DWORD PTR [rsp+0xa8],0x2
  403320:	add    QWORD PTR [rsp+0x90],0x1
  403329:	test   edx,edx
  40332b:	mov    QWORD PTR [rip+0x571a],0x0        # 0x408a50
  403336:	je     0x403182
  40333c:	jmp    0x403350
  40333e:	xchg   ax,ax
  403340:	mov    DWORD PTR [rip+0xd12],ebx        # 0x404058
  403346:	jmp    0x403215
  40334b:	nop    DWORD PTR [rax+rax*1+0x0]
  403350:	mov    DWORD PTR [rip+0xcfa],0xffffffff        # 0x404054
  40335a:	mov    DWORD PTR [rip+0xcf4],0xffffffff        # 0x404058
  403364:	jmp    0x403182
  403369:	nop    DWORD PTR [rax+0x0]
  403370:	mov    DWORD PTR [rip+0x56de],0x1        # 0x408a58
  40337a:	mov    DWORD PTR [rip+0xce8],0x1        # 0x40406c
  403384:	jmp    0x40311e
  403389:	nop    DWORD PTR [rax+0x0]
  403390:	mov    esi,DWORD PTR [rip+0xcbe]        # 0x404054
  403396:	lea    rax,[rip+0x2338]        # 0x4056d5
  40339d:	mov    QWORD PTR [rip+0xcbc],rax        # 0x404060
  4033a4:	cmp    esi,0xffffffff
  4033a7:	je     0x4034da
  4033ad:	mov    edi,DWORD PTR [rip+0xca5]        # 0x404058
  4033b3:	mov    r9,r15
  4033b6:	mov    r8d,ebx
  4033b9:	mov    edx,esi
  4033bb:	mov    ecx,edi
  4033bd:	sub    edi,esi
  4033bf:	call   0x402bf0
  4033c4:	add    DWORD PTR [rip+0xca2],edi        # 0x40406c
  4033ca:	mov    DWORD PTR [rip+0xc80],0xffffffff        # 0x404054
  4033d4:	mov    DWORD PTR [rip+0xc7a],0xffffffff        # 0x404058
  4033de:	mov    eax,0xffffffff
  4033e3:	add    rsp,0x38
  4033e7:	pop    rbx
  4033e8:	pop    rsi
  4033e9:	pop    rdi
  4033ea:	pop    rbp
  4033eb:	pop    r12
  4033ed:	pop    r13
  4033ef:	pop    r14
  4033f1:	pop    r15
  4033f3:	ret    
  4033f4:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  4033fc:	jmp    0x403164
  403401:	mov    ebp,DWORD PTR [rip+0xc51]        # 0x404058
  403407:	cmp    ebp,0xffffffff
  40340a:	je     0x40341b
  40340c:	cmp    DWORD PTR [rip+0xc41],0xffffffff        # 0x404054
  403413:	jne    0x40341b
  403415:	mov    DWORD PTR [rip+0xc39],ebx        # 0x404054
  40341b:	lea    rsi,[r13+0x1]
  40341f:	cmp    al,0x2d
  403421:	mov    QWORD PTR [rip+0xc38],rsi        # 0x404060
  403428:	je     0x4035df
  40342e:	cmp    QWORD PTR [rsp+0x98],0x0
  403437:	je     0x4034fe
  40343d:	movsxd rdx,DWORD PTR [rip+0xc28]        # 0x40406c
  403444:	cmp    rsi,QWORD PTR [r15+rdx*8]
  403448:	je     0x4034fe
  40344e:	cmp    al,0x2d
  403450:	je     0x4032d2
  403456:	test   BYTE PTR [rsp+0xa8],0x4
  40345e:	je     0x4034fe
  403464:	xor    edx,edx
  403466:	cmp    al,0x3a
  403468:	je     0x403482
  40346a:	mov    rcx,QWORD PTR [rsp+0x90]
  403472:	movsx  edx,al
  403475:	call   0x403858
  40347a:	xor    edx,edx
  40347c:	test   rax,rax
  40347f:	setne  dl
  403482:	mov    DWORD PTR [rsp+0x20],edx
  403486:	mov    r9,QWORD PTR [rsp+0xa0]
  40348e:	mov    rcx,r15
  403491:	mov    r8,QWORD PTR [rsp+0x98]
  403499:	mov    rdx,QWORD PTR [rsp+0x90]
  4034a1:	call   0x402d20
  4034a6:	cmp    eax,0xffffffff
  4034a9:	je     0x4034f4
  4034ab:	lea    rcx,[rip+0x2223]        # 0x4056d5
  4034b2:	mov    QWORD PTR [rip+0xba7],rcx        # 0x404060
  4034b9:	jmp    0x4033e3
  4034be:	xchg   ax,ax
  4034c0:	add    ebx,0x1
  4034c3:	mov    QWORD PTR [rip+0x5586],r13        # 0x408a50
  4034ca:	mov    eax,0x1
  4034cf:	mov    DWORD PTR [rip+0xb97],ebx        # 0x40406c
  4034d5:	jmp    0x4033e3
  4034da:	mov    eax,DWORD PTR [rip+0xb78]        # 0x404058
  4034e0:	cmp    eax,0xffffffff
  4034e3:	je     0x4033ca
  4034e9:	mov    DWORD PTR [rip+0xb7d],eax        # 0x40406c
  4034ef:	jmp    0x4033ca
  4034f4:	mov    rsi,QWORD PTR [rip+0xb65]        # 0x404060
  4034fb:	movzx  eax,BYTE PTR [rsi]
  4034fe:	lea    rbp,[rsi+0x1]
  403502:	movsx  ebx,al
  403505:	cmp    ebx,0x3a
  403508:	mov    QWORD PTR [rip+0xb51],rbp        # 0x404060
  40350f:	je     0x403574
  403511:	cmp    ebx,0x2d
  403514:	je     0x4036b7
  40351a:	mov    rcx,QWORD PTR [rsp+0x90]
  403522:	mov    edx,ebx
  403524:	call   0x403858
  403529:	test   rax,rax
  40352c:	je     0x403574
  40352e:	cmp    ebx,0x57
  403531:	jne    0x4035d6
  403537:	cmp    QWORD PTR [rsp+0x98],0x0
  403540:	je     0x4035d6
  403546:	movzx  edx,BYTE PTR [rax+0x1]
  40354a:	cmp    dl,0x3b
  40354d:	je     0x403630
  403553:	cmp    dl,0x3a
  403556:	je     0x4036cb
  40355c:	cmp    BYTE PTR [rsi+0x1],0x0
  403560:	mov    eax,ebx
  403562:	jne    0x4033e3
  403568:	add    DWORD PTR [rip+0xafd],0x1        # 0x40406c
  40356f:	jmp    0x4033e3
  403574:	cmp    BYTE PTR [rsi+0x1],0x0
  403578:	jne    0x403581
  40357a:	add    DWORD PTR [rip+0xaeb],0x1        # 0x40406c
  403581:	mov    ecx,DWORD PTR [rip+0xae9]        # 0x404070
  403587:	test   ecx,ecx
  403589:	je     0x4035a6
  40358b:	mov    rax,QWORD PTR [rsp+0x90]
  403593:	cmp    BYTE PTR [rax],0x3a
  403596:	je     0x4035a6
  403598:	lea    rcx,[rip+0x2161]        # 0x405700
  40359f:	mov    edx,ebx
  4035a1:	call   0x402ca0
  4035a6:	mov    DWORD PTR [rip+0xabc],ebx        # 0x404068
  4035ac:	mov    eax,0x3f
  4035b1:	jmp    0x4033e3
  4035b6:	mov    rcx,QWORD PTR [rsp+0x90]
  4035be:	mov    edx,0x2d
  4035c3:	call   0x403858
  4035c8:	test   rax,rax
  4035cb:	je     0x4033de
  4035d1:	mov    ebx,0x2d
  4035d6:	movzx  edx,BYTE PTR [rax+0x1]
  4035da:	jmp    0x403553
  4035df:	cmp    BYTE PTR [r13+0x2],0x0
  4035e4:	jne    0x4032b4
  4035ea:	mov    esi,DWORD PTR [rip+0xa64]        # 0x404054
  4035f0:	lea    r8d,[rbx+0x1]
  4035f4:	lea    rax,[rip+0x20da]        # 0x4056d5
  4035fb:	mov    DWORD PTR [rip+0xa6a],r8d        # 0x40406c
  403602:	mov    QWORD PTR [rip+0xa57],rax        # 0x404060
  403609:	cmp    esi,0xffffffff
  40360c:	je     0x4033ca
  403612:	mov    ecx,ebp
  403614:	mov    r9,r15
  403617:	mov    edx,esi
  403619:	call   0x402bf0
  40361e:	sub    ebp,esi
  403620:	add    DWORD PTR [rip+0xa46],ebp        # 0x40406c
  403626:	jmp    0x4033ca
  40362b:	nop    DWORD PTR [rax+rax*1+0x0]
  403630:	cmp    BYTE PTR [rsi+0x1],0x0
  403634:	jne    0x403785
  40363a:	mov    eax,DWORD PTR [rip+0xa2c]        # 0x40406c
  403640:	add    eax,0x1
  403643:	cmp    edi,eax
  403645:	mov    DWORD PTR [rip+0xa21],eax        # 0x40406c
  40364b:	jg     0x403778
  403651:	mov    edx,DWORD PTR [rip+0xa19]        # 0x404070
  403657:	lea    rax,[rip+0x2077]        # 0x4056d5
  40365e:	mov    QWORD PTR [rip+0x9fb],rax        # 0x404060
  403665:	test   edx,edx
  403667:	je     0x403687
  403669:	mov    rax,QWORD PTR [rsp+0x90]
  403671:	cmp    BYTE PTR [rax],0x3a
  403674:	je     0x403687
  403676:	lea    rcx,[rip+0x2143]        # 0x4057c0
  40367d:	mov    edx,0x57
  403682:	call   0x402ca0
  403687:	mov    rax,QWORD PTR [rsp+0x90]
  40368f:	mov    DWORD PTR [rip+0x9cf],0x57        # 0x404068
  403699:	cmp    BYTE PTR [rax],0x3a
  40369c:	je     0x40376e
  4036a2:	mov    eax,0x3f
  4036a7:	jmp    0x4033e3
  4036ac:	lea    rbp,[rsi+0x1]
  4036b0:	mov    QWORD PTR [rip+0x9a9],rbp        # 0x404060
  4036b7:	cmp    BYTE PTR [rsi+0x1],0x0
  4036bb:	je     0x4035b6
  4036c1:	mov    ebx,0x2d
  4036c6:	jmp    0x403581
  4036cb:	mov    QWORD PTR [rip+0x537a],0x0        # 0x408a50
  4036d6:	cmp    BYTE PTR [rsi+0x1],0x0
  4036da:	je     0x403707
  4036dc:	mov    eax,DWORD PTR [rip+0x98a]        # 0x40406c
  4036e2:	mov    QWORD PTR [rip+0x5367],rbp        # 0x408a50
  4036e9:	lea    rcx,[rip+0x1fe5]        # 0x4056d5
  4036f0:	add    eax,0x1
  4036f3:	mov    DWORD PTR [rip+0x973],eax        # 0x40406c
  4036f9:	mov    eax,ebx
  4036fb:	mov    QWORD PTR [rip+0x95e],rcx        # 0x404060
  403702:	jmp    0x4033e3
  403707:	cmp    BYTE PTR [rax+0x2],0x3a
  40370b:	mov    eax,DWORD PTR [rip+0x95b]        # 0x40406c
  403711:	je     0x4036e9
  403713:	add    eax,0x1
  403716:	cmp    edi,eax
  403718:	mov    DWORD PTR [rip+0x94e],eax        # 0x40406c
  40371e:	jg     0x4037b2
  403724:	lea    rax,[rip+0x1faa]        # 0x4056d5
  40372b:	mov    QWORD PTR [rip+0x92e],rax        # 0x404060
  403732:	mov    eax,DWORD PTR [rip+0x938]        # 0x404070
  403738:	test   eax,eax
  40373a:	je     0x403757
  40373c:	mov    rax,QWORD PTR [rsp+0x90]
  403744:	cmp    BYTE PTR [rax],0x3a
  403747:	je     0x403757
  403749:	lea    rcx,[rip+0x2070]        # 0x4057c0
  403750:	mov    edx,ebx
  403752:	call   0x402ca0
  403757:	mov    rax,QWORD PTR [rsp+0x90]
  40375f:	mov    DWORD PTR [rip+0x903],ebx        # 0x404068
  403765:	cmp    BYTE PTR [rax],0x3a
  403768:	jne    0x4036a2
  40376e:	mov    eax,0x3a
  403773:	jmp    0x4033e3
  403778:	cdqe   
  40377a:	mov    rax,QWORD PTR [r15+rax*8]
  40377e:	mov    QWORD PTR [rip+0x8db],rax        # 0x404060
  403785:	mov    r9,QWORD PTR [rsp+0xa0]
  40378d:	mov    r8,QWORD PTR [rsp+0x98]
  403795:	mov    rcx,r15
  403798:	mov    rdx,QWORD PTR [rsp+0x90]
  4037a0:	mov    DWORD PTR [rsp+0x20],0x0
  4037a8:	call   0x402d20
  4037ad:	jmp    0x4034ab
  4037b2:	movsxd rdx,eax
  4037b5:	mov    rdx,QWORD PTR [r15+rdx*8]
  4037b9:	mov    QWORD PTR [rip+0x5290],rdx        # 0x408a50
  4037c0:	jmp    0x4036e9
  4037c5:	nop
  4037c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037d0:	sub    rsp,0x38
  4037d4:	xor    r9d,r9d
  4037d7:	mov    DWORD PTR [rsp+0x28],0x0
  4037df:	mov    QWORD PTR [rsp+0x20],0x0
  4037e8:	call   0x4030e0
  4037ed:	add    rsp,0x38
  4037f1:	ret    
  4037f2:	nop    DWORD PTR [rax+0x0]
  4037f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403800:	sub    rsp,0x38
  403804:	mov    rax,QWORD PTR [rsp+0x60]
  403809:	mov    DWORD PTR [rsp+0x28],0x1
  403811:	mov    QWORD PTR [rsp+0x20],rax
  403816:	call   0x4030e0
  40381b:	add    rsp,0x38
  40381f:	ret    
  403820:	sub    rsp,0x38
  403824:	mov    rax,QWORD PTR [rsp+0x60]
  403829:	mov    DWORD PTR [rsp+0x28],0x5
  403831:	mov    QWORD PTR [rsp+0x20],rax
  403836:	call   0x4030e0
  40383b:	add    rsp,0x38
  40383f:	ret    
  403840:	jmp    QWORD PTR [rip+0x5cce]        # 0x409514
  403846:	nop
  403847:	nop
  403848:	jmp    QWORD PTR [rip+0x5cbe]        # 0x40950c
  40384e:	nop
  40384f:	nop
  403850:	jmp    QWORD PTR [rip+0x5cae]        # 0x409504
  403856:	nop
  403857:	nop
  403858:	jmp    QWORD PTR [rip+0x5c9e]        # 0x4094fc
  40385e:	nop
  40385f:	nop
  403860:	jmp    QWORD PTR [rip+0x5c8e]        # 0x4094f4
  403866:	nop
  403867:	nop
  403868:	jmp    QWORD PTR [rip+0x5c7e]        # 0x4094ec
  40386e:	nop
  40386f:	nop
  403870:	jmp    QWORD PTR [rip+0x5c6e]        # 0x4094e4
  403876:	nop
  403877:	nop
  403878:	jmp    QWORD PTR [rip+0x5c5e]        # 0x4094dc
  40387e:	nop
  40387f:	nop
  403880:	jmp    QWORD PTR [rip+0x5c4e]        # 0x4094d4
  403886:	nop
  403887:	nop
  403888:	jmp    QWORD PTR [rip+0x5c3e]        # 0x4094cc
  40388e:	nop
  40388f:	nop
  403890:	jmp    QWORD PTR [rip+0x5c2e]        # 0x4094c4
  403896:	nop
  403897:	nop
  403898:	jmp    QWORD PTR [rip+0x5c1e]        # 0x4094bc
  40389e:	nop
  40389f:	nop
  4038a0:	jmp    QWORD PTR [rip+0x5c0e]        # 0x4094b4
  4038a6:	nop
  4038a7:	nop
  4038a8:	jmp    QWORD PTR [rip+0x5bfe]        # 0x4094ac
  4038ae:	nop
  4038af:	nop
  4038b0:	jmp    QWORD PTR [rip+0x5bee]        # 0x4094a4
  4038b6:	nop
  4038b7:	nop
  4038b8:	jmp    QWORD PTR [rip+0x5bde]        # 0x40949c
  4038be:	nop
  4038bf:	nop
  4038c0:	jmp    QWORD PTR [rip+0x5bce]        # 0x409494
  4038c6:	nop
  4038c7:	nop
  4038c8:	jmp    QWORD PTR [rip+0x5bbe]        # 0x40948c
  4038ce:	nop
  4038cf:	nop
  4038d0:	jmp    QWORD PTR [rip+0x5bae]        # 0x409484
  4038d6:	nop
  4038d7:	nop
  4038d8:	jmp    QWORD PTR [rip+0x5b9e]        # 0x40947c
  4038de:	nop
  4038df:	nop
  4038e0:	jmp    QWORD PTR [rip+0x5b8e]        # 0x409474
  4038e6:	nop
  4038e7:	nop
  4038e8:	jmp    QWORD PTR [rip+0x5b7e]        # 0x40946c
  4038ee:	nop
  4038ef:	nop
  4038f0:	jmp    QWORD PTR [rip+0x5b66]        # 0x40945c
  4038f6:	nop
  4038f7:	nop
  4038f8:	jmp    QWORD PTR [rip+0x5b56]        # 0x409454
  4038fe:	nop
  4038ff:	nop
  403900:	jmp    QWORD PTR [rip+0x5b3e]        # 0x409444
  403906:	nop
  403907:	nop
  403908:	jmp    QWORD PTR [rip+0x5b2e]        # 0x40943c
  40390e:	nop
  40390f:	nop
  403910:	jmp    QWORD PTR [rip+0x5b1e]        # 0x409434
  403916:	nop
  403917:	nop
  403918:	jmp    QWORD PTR [rip+0x5b0e]        # 0x40942c
  40391e:	nop
  40391f:	nop
  403920:	jmp    QWORD PTR [rip+0x5af6]        # 0x40941c
  403926:	nop
  403927:	nop
  403928:	jmp    QWORD PTR [rip+0x5ae6]        # 0x409414
  40392e:	nop
  40392f:	nop
  403930:	jmp    QWORD PTR [rip+0x5ace]        # 0x409404
  403936:	nop
  403937:	nop
  403938:	nop    DWORD PTR [rax+rax*1+0x0]
  403940:	mov    rax,QWORD PTR [rip+0x50a9]        # 0x4089f0
  403947:	ret    
  403948:	nop    DWORD PTR [rax+rax*1+0x0]
  403950:	mov    rax,rcx
  403953:	xchg   QWORD PTR [rip+0x5096],rax        # 0x4089f0
  40395a:	ret    
  40395b:	nop
  40395c:	nop
  40395d:	nop
  40395e:	nop
  40395f:	nop
  403960:	jmp    QWORD PTR [rip+0x5a8e]        # 0x4093f4
  403966:	nop
  403967:	nop
  403968:	jmp    QWORD PTR [rip+0x5a7e]        # 0x4093ec
  40396e:	nop
  40396f:	nop
  403970:	jmp    QWORD PTR [rip+0x5a6e]        # 0x4093e4
  403976:	nop
  403977:	nop
  403978:	jmp    QWORD PTR [rip+0x5a5e]        # 0x4093dc
  40397e:	nop
  40397f:	nop
  403980:	jmp    QWORD PTR [rip+0x5a4e]        # 0x4093d4
  403986:	nop
  403987:	nop
  403988:	jmp    QWORD PTR [rip+0x5a3e]        # 0x4093cc
  40398e:	nop
  40398f:	nop
  403990:	jmp    QWORD PTR [rip+0x5a2e]        # 0x4093c4
  403996:	nop
  403997:	nop
  403998:	jmp    QWORD PTR [rip+0x5a1e]        # 0x4093bc
  40399e:	nop
  40399f:	nop
  4039a0:	jmp    QWORD PTR [rip+0x5a0e]        # 0x4093b4
  4039a6:	nop
  4039a7:	nop
  4039a8:	jmp    QWORD PTR [rip+0x59fe]        # 0x4093ac
  4039ae:	nop
  4039af:	nop
  4039b0:	jmp    QWORD PTR [rip+0x59ee]        # 0x4093a4
  4039b6:	nop
  4039b7:	nop
  4039b8:	jmp    QWORD PTR [rip+0x59de]        # 0x40939c
  4039be:	nop
  4039bf:	nop
  4039c0:	jmp    QWORD PTR [rip+0x59ce]        # 0x409394
  4039c6:	nop
  4039c7:	nop
  4039c8:	jmp    QWORD PTR [rip+0x59be]        # 0x40938c
  4039ce:	nop
  4039cf:	nop
  4039d0:	jmp    QWORD PTR [rip+0x59ae]        # 0x409384
  4039d6:	nop
  4039d7:	nop
  4039d8:	jmp    QWORD PTR [rip+0x599e]        # 0x40937c
  4039de:	nop
  4039df:	nop
  4039e0:	jmp    QWORD PTR [rip+0x598e]        # 0x409374
  4039e6:	nop
  4039e7:	nop
  4039e8:	jmp    QWORD PTR [rip+0x597e]        # 0x40936c
  4039ee:	nop
  4039ef:	nop
  4039f0:	jmp    QWORD PTR [rip+0x596e]        # 0x409364
  4039f6:	nop
  4039f7:	nop
  4039f8:	jmp    QWORD PTR [rip+0x595e]        # 0x40935c
  4039fe:	nop
  4039ff:	nop
  403a00:	jmp    QWORD PTR [rip+0x594e]        # 0x409354
  403a06:	nop
  403a07:	nop
  403a08:	jmp    QWORD PTR [rip+0x593e]        # 0x40934c
  403a0e:	nop
  403a0f:	nop
  403a10:	jmp    QWORD PTR [rip+0x592e]        # 0x409344
  403a16:	nop
  403a17:	nop
  403a18:	nop    DWORD PTR [rax+rax*1+0x0]
  403a20:	push   r15
  403a22:	push   r14
  403a24:	push   r13
  403a26:	push   r12
  403a28:	push   rbp
  403a29:	push   rdi
  403a2a:	push   rsi
  403a2b:	push   rbx
  403a2c:	sub    rsp,0xd8
  403a33:	xor    edi,edi
  403a35:	xor    r15d,r15d
  403a38:	mov    DWORD PTR [rsp+0x120],ecx
  403a3f:	mov    rbx,rdx
  403a42:	call   0x401800
  403a47:	lea    rdx,[rip+0x1785]        # 0x4051d3
  403a4e:	xor    ecx,ecx
  403a50:	call   0x403868
  403a55:	mov    rsi,QWORD PTR [rip+0x1f94]        # 0x4059f0
  403a5c:	mov    DWORD PTR [rsp+0x58],0x0
  403a64:	mov    DWORD PTR [rsp+0x5c],0x0
  403a6c:	mov    rbp,rsi
  403a6f:	lea    r12,[rip+0x183e]        # 0x4052b4
  403a76:	mov    ecx,DWORD PTR [rsp+0x120]
  403a7d:	lea    r9,[rip+0x18fc]        # 0x405380
  403a84:	lea    r8,[rip+0x1766]        # 0x4051f1
  403a8b:	mov    QWORD PTR [rsp+0x20],0x0
  403a94:	mov    rdx,rbx
  403a97:	call   0x403800
  403a9c:	cmp    eax,0xffffffff
  403a9f:	je     0x403b2a
  403aa5:	lea    ecx,[rax-0x56]
  403aa8:	cmp    ecx,0x20
  403aab:	ja     0x403b1d
  403aad:	movsxd rax,DWORD PTR [r12+rcx*4]
  403ab1:	add    rax,r12
  403ab4:	jmp    rax
  403ab6:	mov    DWORD PTR [rsp+0x58],0x1
  403abe:	jmp    0x403a76
  403ac0:	mov    rcx,QWORD PTR [rsi]
  403ac3:	call   0x401628
  403ac8:	mov    rdi,rax
  403acb:	jmp    0x403a6f
  403acd:	mov    rcx,QWORD PTR [rbp+0x0]
  403ad1:	mov    r15d,0x1
  403ad7:	call   0x4038c0
  403adc:	mov    DWORD PTR [rsp+0x5c],eax
  403ae0:	jmp    0x403a6f
  403ae2:	mov    rcx,QWORD PTR [rbx]
  403ae5:	xor    edx,edx
  403ae7:	call   0x401530
  403aec:	call   QWORD PTR [rip+0x593a]        # 0x40942c
  403af2:	lea    rdx,[rip+0x16db]        # 0x4051d4
  403af9:	lea    rcx,[rax+0x60]
  403afd:	mov    DWORD PTR [rsp+0x20],0x1
  403b05:	mov    r9d,0xc
  403b0b:	mov    r8d,0x2
  403b11:	call   0x4038a8
  403b16:	xor    ecx,ecx
  403b18:	call   0x4038b0
  403b1d:	mov    rcx,QWORD PTR [rbx]
  403b20:	mov    edx,0x1
  403b25:	call   0x401530
  403b2a:	mov    rax,QWORD PTR [rip+0x1ecf]        # 0x405a00
  403b31:	mov    QWORD PTR [rsp+0x50],rdi
  403b36:	mov    eax,DWORD PTR [rax]
  403b38:	cmp    eax,DWORD PTR [rsp+0x120]
  403b3f:	mov    DWORD PTR [rsp+0x6c],eax
  403b43:	je     0x403b1d
  403b45:	cmp    QWORD PTR [rsp+0x50],0x0
  403b4b:	je     0x403e05
  403b51:	mov    rcx,QWORD PTR [rsp+0x50]
  403b56:	call   0x401630
  403b5b:	mov    QWORD PTR [rsp+0x60],rax
  403b60:	lea    rcx,[rsp+0xa0]
  403b68:	call   0x401678
  403b6d:	test   eax,eax
  403b6f:	jne    0x403ddd
  403b75:	movsxd rax,DWORD PTR [rsp+0x6c]
  403b7a:	mov    DWORD PTR [rsp+0x3c],0x0
  403b82:	lea    r12,[rbx+rax*8]
  403b86:	lea    rax,[rsp+0xa8]
  403b8e:	mov    QWORD PTR [rsp+0x30],rax
  403b93:	lea    rax,[rsp+0x9c]
  403b9b:	mov    QWORD PTR [rsp+0x78],rax
  403ba0:	mov    eax,r15d
  403ba3:	xor    eax,0x1
  403ba6:	and    eax,0x1
  403ba9:	mov    BYTE PTR [rsp+0x6b],al
  403bad:	mov    eax,DWORD PTR [rsp+0x6c]
  403bb1:	cmp    eax,DWORD PTR [rsp+0x120]
  403bb8:	jge    0x403da1
  403bbe:	lea    rax,[rsp+0xb0]
  403bc6:	mov    edi,DWORD PTR [rsp+0x5c]
  403bca:	mov    QWORD PTR [rsp+0x70],rax
  403bcf:	jmp    0x403c11
  403bd1:	test   edi,edi
  403bd3:	jle    0x403be0
  403bd5:	cmp    BYTE PTR [rsp+0x6b],0x0
  403bda:	jne    0x403cb4
  403be0:	mov    rbx,QWORD PTR [r12]
  403be4:	add    edi,0x1
  403be7:	call   QWORD PTR [rip+0x583f]        # 0x40942c
  403bed:	lea    rdx,[rip+0x162e]        # 0x405222
  403bf4:	lea    rcx,[rax+0x60]
  403bf8:	mov    r8,rbx
  403bfb:	call   0x4038a8
  403c00:	test   r15d,r15d
  403c03:	mov    DWORD PTR [rsp+0x3c],0x1
  403c0b:	jne    0x403cb4
  403c11:	mov    r9,QWORD PTR [rsp+0x30]
  403c16:	mov    rdx,QWORD PTR [r12]
  403c1a:	mov    r8d,edi
  403c1d:	mov    rcx,QWORD PTR [rsp+0xa0]
  403c25:	call   0x401670
  403c2a:	test   eax,eax
  403c2c:	jne    0x403bd1
  403c2e:	mov    rcx,QWORD PTR [rsp+0xa8]
  403c36:	xor    edx,edx
  403c38:	call   0x401638
  403c3d:	mov    rcx,QWORD PTR [rsp+0x60]
  403c42:	mov    rdx,rax
  403c45:	mov    QWORD PTR [rsp+0x48],rax
  403c4a:	call   0x401648
  403c4f:	mov    rcx,rax
  403c52:	mov    QWORD PTR [rsp+0x40],rax
  403c57:	call   0x401668
  403c5c:	test   eax,eax
  403c5e:	je     0x403cc2
  403c60:	mov    rdx,QWORD PTR [rsp+0x50]
  403c65:	lea    rcx,[rip+0x15cc]        # 0x405238
  403c6c:	mov    r9d,eax
  403c6f:	mov    r8d,edi
  403c72:	mov    QWORD PTR [rsp+0x20],rdx
  403c77:	mov    rdx,QWORD PTR [r12]
  403c7b:	call   0x403870
  403c80:	cmp    DWORD PTR [rsp+0x58],0x0
  403c85:	jne    0x403cdc
  403c87:	mov    rcx,QWORD PTR [rsp+0x48]
  403c8c:	add    edi,0x1
  403c8f:	call   0x401660
  403c94:	mov    rcx,QWORD PTR [rsp+0x40]
  403c99:	call   0x401660
  403c9e:	mov    rcx,QWORD PTR [rsp+0xa8]
  403ca6:	call   0x401688
  403cab:	test   r15d,r15d
  403cae:	je     0x403c11
  403cb4:	add    DWORD PTR [rsp+0x6c],0x1
  403cb9:	add    r12,0x8
  403cbd:	jmp    0x403bad
  403cc2:	mov    r9,QWORD PTR [rsp+0x50]
  403cc7:	mov    rdx,QWORD PTR [r12]
  403ccb:	lea    rcx,[rip+0x15b6]        # 0x405288
  403cd2:	mov    r8d,edi
  403cd5:	call   0x403870
  403cda:	jmp    0x403c87
  403cdc:	mov    r8,QWORD PTR [rsp+0x78]
  403ce1:	mov    rdx,QWORD PTR [rsp+0x70]
  403ce6:	mov    rcx,QWORD PTR [rsp+0x40]
  403ceb:	call   0x401658
  403cf0:	cmp    eax,0xffffffff
  403cf3:	je     0x403c87
  403cf5:	mov    r13,QWORD PTR [rsp+0x40]
  403cfa:	mov    rbp,QWORD PTR [rsp+0x70]
  403cff:	mov    r14,QWORD PTR [rsp+0x78]
  403d04:	mov    DWORD PTR [rsp+0x80],edi
  403d0b:	mov    DWORD PTR [rsp+0x84],r15d
  403d13:	mov    QWORD PTR [rsp+0x88],r12
  403d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d20:	lea    edi,[rax+0x100]
  403d26:	mov    rsi,rbp
  403d29:	mov    ebx,eax
  403d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d30:	mov    r12d,DWORD PTR [rsi]
  403d33:	mov    r15d,ebx
  403d36:	test   r12d,r12d
  403d39:	jne    0x403d49
  403d3b:	jmp    0x403d67
  403d3d:	nop    DWORD PTR [rax]
  403d40:	add    r15d,0x1
  403d44:	shr    r12d,1
  403d47:	je     0x403d67
  403d49:	test   r12b,0x1
  403d4d:	je     0x403d40
  403d4f:	lea    rcx,[rip+0x1525]        # 0x40527b
  403d56:	mov    edx,r15d
  403d59:	add    r15d,0x1
  403d5d:	call   0x403870
  403d62:	shr    r12d,1
  403d65:	jne    0x403d49
  403d67:	add    ebx,0x20
  403d6a:	add    rsi,0x4
  403d6e:	cmp    ebx,edi
  403d70:	jne    0x403d30
  403d72:	mov    r8,r14
  403d75:	mov    rdx,rbp
  403d78:	mov    rcx,r13
  403d7b:	call   0x401650
  403d80:	cmp    eax,0xffffffff
  403d83:	jne    0x403d20
  403d85:	mov    edi,DWORD PTR [rsp+0x80]
  403d8c:	mov    r15d,DWORD PTR [rsp+0x84]
  403d94:	mov    r12,QWORD PTR [rsp+0x88]
  403d9c:	jmp    0x403c87
  403da1:	mov    rcx,QWORD PTR [rsp+0xa0]
  403da9:	call   0x401680
  403dae:	mov    rax,QWORD PTR [rsp+0x50]
  403db3:	test   rax,rax
  403db6:	je     0x403dc0
  403db8:	mov    rcx,rax
  403dbb:	call   0x401620
  403dc0:	call   0x401640
  403dc5:	mov    eax,DWORD PTR [rsp+0x3c]
  403dc9:	add    rsp,0xd8
  403dd0:	pop    rbx
  403dd1:	pop    rsi
  403dd2:	pop    rdi
  403dd3:	pop    rbp
  403dd4:	pop    r12
  403dd6:	pop    r13
  403dd8:	pop    r14
  403dda:	pop    r15
  403ddc:	ret    
  403ddd:	call   QWORD PTR [rip+0x5649]        # 0x40942c
  403de3:	lea    rcx,[rip+0x1416]        # 0x405200
  403dea:	lea    r9,[rax+0x60]
  403dee:	mov    r8d,0x21
  403df4:	mov    edx,0x1
  403df9:	call   0x403890
  403dfe:	mov    eax,0x1
  403e03:	jmp    0x403dc9
  403e05:	xor    edx,edx
  403e07:	mov    ecx,0x2
  403e0c:	call   0x403868
  403e11:	mov    rcx,rax
  403e14:	call   0x401628
  403e19:	test   rax,rax
  403e1c:	mov    QWORD PTR [rsp+0x50],rax
  403e21:	mov    QWORD PTR [rsp+0x60],0x0
  403e2a:	je     0x403b60
  403e30:	jmp    0x403b51
  403e35:	nop
  403e36:	nop
  403e37:	nop
  403e38:	nop
  403e39:	nop
  403e3a:	nop
  403e3b:	nop
  403e3c:	nop
  403e3d:	nop
  403e3e:	nop
  403e3f:	nop
  403e40:	(bad)  
  403e41:	(bad)  
  403e42:	(bad)  
  403e43:	(bad)  
  403e44:	(bad)  
  403e45:	(bad)  
  403e46:	(bad)  
  403e47:	inc    DWORD PTR [rax]
  403e49:	add    BYTE PTR [rax],al
  403e4b:	add    BYTE PTR [rax],al
  403e4d:	add    BYTE PTR [rax],al
  403e4f:	add    bh,bh
  403e51:	(bad)  
  403e52:	(bad)  
  403e53:	(bad)  
  403e54:	(bad)  
  403e55:	(bad)  
  403e56:	(bad)  
  403e57:	inc    DWORD PTR [rax]
  403e59:	add    BYTE PTR [rax],al
  403e5b:	add    BYTE PTR [rax],al
  403e5d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	pop    rax
  404011:	add    BYTE PTR ds:[rax],al
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	(bad)  
  404054:	(bad)  
  404055:	(bad)  
  404056:	(bad)  
  404057:	(bad)  
  404058:	(bad)  
  404059:	(bad)  
  40405a:	(bad)  
  40405b:	inc    DWORD PTR [rax]
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    ch,dl
  404061:	push   rsi
  404062:	add    BYTE PTR [rax],al
  404065:	add    BYTE PTR [rax],al
  404067:	add    BYTE PTR [rdi],bh
  404069:	add    BYTE PTR [rax],al
  40406b:	add    BYTE PTR [rcx],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rcx],al
	...
  40407d:	add    BYTE PTR [rax],al
  40407f:	add    bh,bh
  404081:	(bad)  
  404082:	(bad)  
  404083:	inc    DWORD PTR [rax]
	...
  40408d:	add    BYTE PTR [rax],al
  40408f:	add    BYTE PTR [rax+0x39],al
  404092:	add    BYTE PTR [rax],al
  404095:	add    BYTE PTR [rax],al
  404097:	add    BYTE PTR [rax+0x39],dl
  40409a:	add    BYTE PTR [rax],al
  40409d:	add    BYTE PTR [rax],al
  40409f:	add    BYTE PTR [rdx],dh
  4040a1:	movabs ds:0x2b992ddf,al
  4040aa:	add    BYTE PTR [rax],al
  4040ac:	add    BYTE PTR [rax],al
  4040ae:	add    BYTE PTR [rax],al
  4040b0:	int    0x5d
  4040b2:	and    dl,dl
  4040b4:	data16 (bad) 
  4040b6:	(bad)  
  4040b7:	inc    DWORD PTR [rax]
  4040b9:	add    BYTE PTR [rax],al
  4040bb:	add    BYTE PTR [rax],al
  4040bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	jne    0x405075
  405002:	(bad)  
  405003:	cmp    ah,BYTE PTR gs:[eax]
  405007:	and    eax,0x2d5b2073
  40500c:	push   rsi
  40500d:	push   0x5b205d76
  405012:	sub    eax,0x6e692069
  405017:	fs gs js 0x405078
  40501b:	and    BYTE PTR [rbx+0x2d],bl
  40501e:	ins    BYTE PTR es:[rdi],dx
  40501f:	and    BYTE PTR [rcx+rax*2+0x4e],cl
  405023:	rex.RXB pop r13
  405025:	and    BYTE PTR [rbx+0x2d],bl
  405028:	sub    eax,0x65646e69
  40502d:	js     0x40504f
  40502f:	imul   ebp,DWORD PTR [rsi+0x64],0x205d7865
  405036:	pop    rbx
  405037:	sub    eax,0x6e616c2d
  40503c:	and    BYTE PTR [ecx+eax*2+0x4e],cl
  405041:	rex.RXB pop r13
  405043:	and    BYTE PTR [rbx+0x2d],bl
  405046:	sub    eax,0x62726576
  40504b:	outs   dx,DWORD PTR ds:[rsi]
  40504c:	jae    0x4050b3
  40504e:	pop    rbp
  40504f:	and    BYTE PTR [rbx+0x2d],bl
  405052:	sub    eax,0x73726576
  405057:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d5b205d
  40505e:	sub    eax,0x706c6568
  405063:	pop    rbp
  405064:	and    BYTE PTR [rsi+0x6f],ah
  405067:	outs   dx,BYTE PTR ds:[rsi]
  405068:	je     0x405097
  40506a:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x2e2e
  405071:	or     al,BYTE PTR [rax]
  405073:	add    BYTE PTR [rax],al
  405075:	add    BYTE PTR [rax],al
  405077:	add    BYTE PTR [rsi+0x61],dl
  40507a:	ins    BYTE PTR es:[rdi],dx
  40507b:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x6f662065
  405083:	outs   dx,BYTE PTR ds:[rsi]
  405084:	je     0x4050a6
  405086:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6120
  40508d:	outs   dx,BYTE PTR ds:[rsi]
  40508e:	and    BYTE PTR fs:[rax+0x72],dh
  405092:	imul   ebp,DWORD PTR [rsi+0x74],0x73657220
  405099:	jne    0x405107
  40509b:	je     0x4050a7
  40509d:	add    BYTE PTR [rax],al
  40509f:	add    BYTE PTR [rax],ah
  4050a1:	and    BYTE PTR [rip+0x2d202c69],ch        # 0x2d607d10
  4050a7:	sub    eax,0x65646e69
  4050ac:	js     0x4050ce
  4050ae:	rex.WB
  4050af:	rex.WRX
  4050b0:	rex.R
  4050b1:	rex.RB pop r8
  4050b3:	and    BYTE PTR [rax],ah
  4050b5:	and    BYTE PTR [rax],ah
  4050b7:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  4050bf:	je     0x405129
  4050c1:	and    BYTE PTR gs:[rcx+0x4e],cl
  4050c5:	rex.R
  4050c6:	rex.RB pop r8
  4050c8:	and    BYTE PTR [rsi+0x61],ah
  4050cb:	movsxd esp,DWORD PTR [rbp+0x20]
  4050ce:	outs   dx,DWORD PTR ds:[rsi]
  4050cf:	data16 and BYTE PTR [rbp+0x61],ah
  4050d3:	movsxd ebp,DWORD PTR [rax+0x20]
  4050d6:	outs   dx,WORD PTR ds:[rsi]
  4050d8:	outs   dx,BYTE PTR ds:[rsi]
  4050d9:	je     0x4050fb
  4050db:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6e6f
  4050e2:	ins    BYTE PTR es:[rdi],dx
  4050e3:	jns    0x4050ef
  4050e5:	add    BYTE PTR [rax],al
  4050e7:	add    BYTE PTR [rax],ah
  4050e9:	and    BYTE PTR [rip+0x2d202c6c],ch        # 0x2d607d5b
  4050ef:	sub    eax,0x676e616c
  4050f4:	cmp    eax,0x474e414c
  4050f9:	and    BYTE PTR [rax],ah
  4050fb:	and    BYTE PTR [rax],ah
  4050fd:	and    BYTE PTR [rax],ah
  4050ff:	jae    0x405166
  405101:	je     0x405123
  405103:	rex.WR
  405104:	rex.B
  405105:	rex.WRX
  405106:	rex.RXB and BYTE PTR [r9+0x6e],r13b
  40510a:	jae    0x405180
  40510c:	gs (bad) 
  40510e:	and    BYTE PTR fs:[rdi+0x66],ch
  405112:	and    BYTE PTR [rbx+0x75],ah
  405115:	jb     0x405189
  405117:	outs   dx,BYTE PTR gs:[rsi]
  405119:	je     0x40513b
  40511b:	ins    BYTE PTR es:[rdi],dx
  40511c:	outs   dx,DWORD PTR ds:[rsi]
  40511d:	movsxd esp,DWORD PTR [rcx+0x6c]
  405120:	or     al,BYTE PTR gs:[rax]
  405123:	add    BYTE PTR [rax],al
  405125:	add    BYTE PTR [rax],al
  405127:	add    BYTE PTR [rax],ah
  405129:	and    BYTE PTR [rip+0x2d202c76],ch        # 0x2d607da5
  40512f:	sub    eax,0x62726576
  405134:	outs   dx,DWORD PTR ds:[rsi]
  405135:	jae    0x40519c
  405137:	and    BYTE PTR [rax],ah
  405139:	and    BYTE PTR [rax],ah
  40513b:	and    BYTE PTR [rax],ah
  40513d:	and    BYTE PTR [rax],ah
  40513f:	jae    0x4051a9
  405141:	outs   dx,DWORD PTR ds:[rsi]
  405142:	ja     0x405164
  405144:	ins    DWORD PTR es:[rdi],dx
  405145:	outs   dx,DWORD PTR ds:[rsi]
  405146:	jb     0x4051ad
  405148:	and    BYTE PTR [rbp+riz*2+0x74],ah
  40514c:	(bad)  
  40514d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x666e6920
  405155:	outs   dx,DWORD PTR ds:[rsi]
  405156:	jb     0x4051c5
  405158:	(bad)  
  405159:	je     0x4051c4
  40515b:	outs   dx,DWORD PTR ds:[rsi]
  40515c:	outs   dx,BYTE PTR ds:[rsi]
  40515d:	or     al,BYTE PTR [rax]
  40515f:	add    BYTE PTR [rax],ah
  405161:	and    BYTE PTR [rip+0x2d202c56],ch        # 0x2d607dbd
  405167:	sub    eax,0x73726576
  40516c:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  405173:	and    BYTE PTR [rax],ah
  405175:	and    BYTE PTR [rax],ah
  405177:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  40517f:	outs   dx,WORD PTR ds:[rsi]
  405181:	outs   dx,BYTE PTR ds:[rsi]
  405182:	je     0x4051a4
  405184:	movsxd ebp,DWORD PTR [rdi+0x6e]
  405187:	imul   sp,WORD PTR [rdi+0x20],0x6576
  40518d:	jb     0x405202
  40518f:	imul   ebp,DWORD PTR [rdi+0x6e],0x646e6120
  405196:	and    BYTE PTR [rbp+0x78],ah
  405199:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x20000000
  4051a1:	and    BYTE PTR [rip+0x2d202c68],ch        # 0x2d607e0f
  4051a7:	sub    eax,0x706c6568
  4051ac:	and    BYTE PTR [rax],ah
  4051ae:	and    BYTE PTR [rax],ah
  4051b0:	and    BYTE PTR [rax],ah
  4051b2:	and    BYTE PTR [rax],ah
  4051b4:	and    BYTE PTR [rax],ah
  4051b6:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4051ba:	jo     0x405228
  4051bc:	(bad)  
  4051bd:	jns    0x4051df
  4051bf:	je     0x405229
  4051c1:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  4051c8:	and    BYTE PTR [rcx+0x6e],ah
  4051cb:	and    BYTE PTR fs:[rbp+0x78],ah
  4051cf:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x6e6f6600
  4051d7:	je     0x40523c
  4051d9:	outs   dx,DWORD PTR ds:[rsi]
  4051da:	outs   dx,BYTE PTR ds:[rsi]
  4051db:	imul   sp,WORD PTR [rdi+0x20],0x6576
  4051e1:	jb     0x405256
  4051e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4051ea:	and    eax,0x64252e64
  4051ef:	or     al,BYTE PTR [rax]
  4051f1:	imul   edi,DWORD PTR [rdx],0x566d3a6c
  4051f7:	push   0x76
  4051fc:	add    BYTE PTR [rax],al
  4051fe:	add    BYTE PTR [rax],al
  405200:	rex.XB (bad) 
  405202:	outs   dx,BYTE PTR ds:[rsi]
  405203:	(bad)  
  405204:	je     0x405226
  405206:	imul   ebp,DWORD PTR [rsi+0x69],0x696c6174
  40520d:	jp     0x405274
  40520f:	and    BYTE PTR [rsi+0x72],al
  405212:	gs gs push rsp
  405215:	jns    0x405287
  405217:	and    BYTE PTR gs:[rcx+rbp*2+0x62],ch
  40521c:	jb     0x40527f
  40521e:	jb     0x405299
  405220:	or     al,BYTE PTR [rax]
  405222:	push   rbp
  405223:	outs   dx,BYTE PTR ds:[rsi]
  405224:	(bad)  
  405225:	(bad)  
  405226:	ins    BYTE PTR es:[rdi],dx
  405227:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40522c:	outs   dx,DWORD PTR ds:[rsi]
  40522d:	jo     0x405294
  40522f:	outs   dx,BYTE PTR ds:[rsi]
  405230:	and    BYTE PTR [rip+0xa73],ah        # 0x405ca9
  405236:	add    BYTE PTR [rax],al
  405238:	and    eax,0x64253a73
  40523d:	and    BYTE PTR [rbp+0x69],cl
  405240:	jae    0x4052b5
  405242:	imul   ebp,DWORD PTR [rsi+0x67],0x20642520
  405249:	ins    BYTE PTR es:[edi],dx
  40524b:	jns    0x4052bd
  40524d:	push   0x20297328
  405252:	je     0x4052c3
  405254:	and    BYTE PTR [rbx+0x61],dh
  405257:	je     0x4052c2
  405259:	jae    0x4052c1
  40525b:	jns    0x40527d
  40525d:	je     0x4052c7
  40525f:	and    BYTE PTR gs:[rbx+0x6f],ah
  405263:	jbe    0x4052ca
  405265:	jb     0x4052c8
  405267:	and    BYTE PTR gs:[esi+0x6f],ah
  40526c:	jb     0x40528e
  40526e:	and    eax,0x616c2073
  405273:	outs   dx,BYTE PTR ds:[rsi]
  405274:	addr32 jne 0x4052d8
  405277:	or     al,BYTE PTR gs:[eax]
  40527b:	and    BYTE PTR [rax],ah
  40527d:	xor    BYTE PTR [rax+0x25],bh
  405280:	xor    BYTE PTR [rax+rdi*2],dh
  405283:	or     al,BYTE PTR [rax]
  405285:	add    BYTE PTR [rax],al
  405287:	add    BYTE PTR [rip+0x64253a73],ah        # 0x64658d00
  40528d:	and    BYTE PTR [rbx+0x61],dl
  405290:	je     0x4052fb
  405292:	jae    0x4052fa
  405294:	jns    0x4052b6
  405296:	je     0x405300
  405298:	and    BYTE PTR gs:[rbx+0x6f],ah
  40529c:	jbe    0x405303
  40529e:	jb     0x405301
  4052a0:	and    BYTE PTR gs:[esi+0x6f],ah
  4052a5:	jb     0x4052c7
  4052a7:	and    eax,0x616c2073
  4052ac:	outs   dx,BYTE PTR ds:[rsi]
  4052ad:	addr32 jne 0x405311
  4052b0:	or     al,BYTE PTR gs:[eax]
  4052b4:	cmp    al,ch
  4052b6:	(bad)  
  4052b7:	jmp    FWORD PTR [rcx-0x18]
  4052ba:	(bad)  
  4052bb:	jmp    FWORD PTR [rcx-0x18]
  4052be:	(bad)  
  4052bf:	jmp    FWORD PTR [rcx-0x18]
  4052c2:	(bad)  
  4052c3:	jmp    FWORD PTR [rcx-0x18]
  4052c6:	(bad)  
  4052c7:	jmp    FWORD PTR [rcx-0x18]
  4052ca:	(bad)  
  4052cb:	jmp    FWORD PTR [rcx-0x18]
  4052ce:	(bad)  
  4052cf:	jmp    FWORD PTR [rcx-0x18]
  4052d2:	(bad)  
  4052d3:	jmp    FWORD PTR [rcx-0x18]
  4052d6:	(bad)  
  4052d7:	jmp    FWORD PTR [rcx-0x18]
  4052da:	(bad)  
  4052db:	jmp    FWORD PTR [rcx-0x18]
  4052de:	(bad)  
  4052df:	jmp    FWORD PTR [rcx-0x18]
  4052e2:	(bad)  
  4052e3:	jmp    FWORD PTR [rcx-0x18]
  4052e6:	(bad)  
  4052e7:	jmp    FWORD PTR [rcx-0x18]
  4052ea:	(bad)  
  4052eb:	jmp    FWORD PTR [rcx-0x18]
  4052ee:	(bad)  
  4052ef:	jmp    FWORD PTR [rcx-0x18]
  4052f2:	(bad)  
  4052f3:	jmp    FWORD PTR [rcx-0x18]
  4052f6:	(bad)  
  4052f7:	jmp    FWORD PTR [rcx-0x18]
  4052fa:	(bad)  
  4052fb:	jmp    FWORD PTR [rsi]
  4052fd:	call   0xffffffffe85a5301
  405302:	(bad)  
  405303:	jmp    FWORD PTR [rcx-0x18]
  405306:	(bad)  
  405307:	jmp    FWORD PTR [rcx-0x18]
  40530a:	(bad)  
  40530b:	dec    DWORD PTR [rax+rbp*8]
  40530e:	(bad)  
  40530f:	jmp    FWORD PTR [rcx-0x18]
  405312:	(bad)  
  405313:	jmp    FWORD PTR [rcx-0x18]
  405316:	(bad)  
  405317:	jmp    FWORD PTR [rcx-0x18]
  40531a:	(bad)  
  40531b:	jmp    FWORD PTR [rcx-0x18]
  40531e:	(bad)  
  40531f:	jmp    FWORD PTR [rcx-0x18]
  405322:	(bad)  
  405323:	jmp    FWORD PTR [rcx-0x18]
  405326:	(bad)  
  405327:	jmp    FWORD PTR [rcx-0x18]
  40532a:	(bad)  
  40532b:	jmp    FWORD PTR [rcx-0x18]
  40532e:	(bad)  
  40532f:	jmp    FWORD PTR [rcx-0x18]
  405332:	(bad)  
  405333:	inc    DWORD PTR [rdx]
  405335:	call   0x6eaa5339
  40533a:	fs gs js 0x40533e
  40533e:	ins    BYTE PTR es:[rdi],dx
  40533f:	(bad)  
  405340:	outs   dx,BYTE PTR ds:[rsi]
  405341:	add    BYTE PTR [esi+0x65],dh
  405345:	jb     0x4053a9
  405347:	outs   dx,DWORD PTR ds:[rsi]
  405348:	jae    0x4053af
  40534a:	add    BYTE PTR [rsi+0x65],dh
  40534d:	jb     0x4053c2
  40534f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c656800
  405356:	jo     0x405358
	...
  405380:	cmp    BYTE PTR [rbx+0x40],dl
  405383:	add    BYTE PTR [rax],al
  405385:	add    BYTE PTR [rax],al
  405387:	add    BYTE PTR [rcx],al
	...
  405395:	add    BYTE PTR [rax],al
  405397:	add    BYTE PTR [rcx+0x0],ch
  40539a:	add    BYTE PTR [rax],al
  40539c:	add    BYTE PTR [rax],al
  40539e:	add    BYTE PTR [rax],al
  4053a0:	ds push rbx
  4053a2:	add    BYTE PTR [rax],al
  4053a5:	add    BYTE PTR [rax],al
  4053a7:	add    BYTE PTR [rcx],al
	...
  4053b5:	add    BYTE PTR [rax],al
  4053b7:	add    BYTE PTR [rax+rax*1+0x0],ch
  4053bb:	add    BYTE PTR [rax],al
  4053bd:	add    BYTE PTR [rax],al
  4053bf:	add    BYTE PTR [rbx+0x53],al
  4053c2:	add    BYTE PTR [rax],al
	...
  4053d5:	add    BYTE PTR [rax],al
  4053d7:	add    BYTE PTR [rsi+0x0],dh
  4053da:	add    BYTE PTR [rax],al
  4053dc:	add    BYTE PTR [rax],al
  4053de:	add    BYTE PTR [rax],al
  4053e0:	rex.WXB push r11
  4053e2:	add    BYTE PTR [rax],al
	...
  4053f5:	add    BYTE PTR [rax],al
  4053f7:	add    BYTE PTR [rsi+0x0],dl
  4053fa:	add    BYTE PTR [rax],al
  4053fc:	add    BYTE PTR [rax],al
  4053fe:	add    BYTE PTR [rax],al
  405400:	push   rbx
  405401:	push   rbx
  405402:	add    BYTE PTR [rax],al
	...
  405415:	add    BYTE PTR [rax],al
  405417:	add    BYTE PTR [rax+0x0],ch
	...
  40543e:	add    BYTE PTR [rax],al
  405440:	add    BYTE PTR [rbp+0x40],0x0
  405447:	add    BYTE PTR [rax+0x4080],al
  40544d:	add    BYTE PTR [rax],al
  40544f:	add    BYTE PTR [rax+0x1a],dl
  405452:	add    BYTE PTR [rax],al
	...
  40545d:	add    BYTE PTR [rax],al
  40545f:	add    BYTE PTR [rcx+0x72],al
  405462:	addr32 jne 0x4054d2
  405465:	outs   dx,BYTE PTR gs:[rsi]
  405467:	je     0x405489
  405469:	outs   dx,DWORD PTR fs:[rsi]
  40546b:	ins    DWORD PTR es:[rdi],dx
  40546c:	(bad)  
  40546d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  405474:	jb     0x405496
  405476:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40547a:	rex.B
  40547b:	rex.WB
  40547c:	rex.WRX sub QWORD PTR [rax],r8
  40547f:	rex.B jb 0x4054e9
  405482:	jne    0x4054f1
  405484:	outs   dx,BYTE PTR gs:[rsi]
  405486:	je     0x4054a8
  405488:	jae    0x4054f3
  40548a:	outs   dx,BYTE PTR ds:[rsi]
  40548b:	addr32 jne 0x4054fa
  40548e:	(bad)  
  40548f:	jb     0x4054fa
  405491:	je     0x40550c
  405493:	and    BYTE PTR [rax],ch
  405495:	push   rbx
  405496:	rex.WB
  405497:	rex.RXB
  405498:	rex.WRX sub QWORD PTR [rax],r8
  40549b:	add    BYTE PTR [rax],al
  40549d:	add    BYTE PTR [rax],al
  40549f:	add    BYTE PTR [rdi+0x76],cl
  4054a2:	gs jb  0x40550b
  4054a5:	ins    BYTE PTR es:[rdi],dx
  4054a6:	outs   dx,DWORD PTR ds:[rsi]
  4054a7:	ja     0x4054c9
  4054a9:	jb     0x40550c
  4054ab:	outs   dx,BYTE PTR ds:[rsi]
  4054ac:	and    BYTE PTR gs:[ebp+0x72],ah
  4054b1:	jb     0x405522
  4054b3:	jb     0x4054d5
  4054b5:	sub    BYTE PTR [rdi+0x56],cl
  4054b8:	rex.RB push r10
  4054ba:	rex.RX
  4054bb:	rex.WR
  4054bc:	rex.WRXB push r15
  4054be:	sub    DWORD PTR [rax],eax
  4054c0:	push   rax
  4054c1:	(bad)  
  4054c2:	jb     0x405538
  4054c4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  4054cb:	jae    0x4054ed
  4054cd:	outs   dx,DWORD PTR ds:[rsi]
  4054ce:	data16 and BYTE PTR [rbx+0x69],dh
  4054d2:	outs   dx,BYTE PTR ds:[esi]
  4054d4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4054db:	and    BYTE PTR gs:[rax],ch
  4054de:	push   rax
  4054df:	rex.WR
  4054e0:	rex.WRXB push r11
  4054e2:	push   rbx
  4054e3:	sub    DWORD PTR [rax],eax
  4054e5:	add    BYTE PTR [rax],al
  4054e7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  4054eb:	(bad)  
  4054ec:	ins    BYTE PTR es:[rdi],dx
  4054ed:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4054f1:	jae    0x405513
  4054f3:	outs   dx,DWORD PTR ds:[rsi]
  4054f4:	data16 and BYTE PTR [rbx+0x69],dh
  4054f8:	outs   dx,BYTE PTR ds:[esi]
  4054fa:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405501:	and    BYTE PTR gs:[rax],ch
  405504:	push   rsp
  405505:	rex.WR
  405506:	rex.WRXB push r11
  405508:	push   rbx
  405509:	sub    DWORD PTR [rax],eax
  40550b:	add    BYTE PTR [rax],al
  40550d:	add    BYTE PTR [rax],al
  40550f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405513:	and    BYTE PTR [rdx+0x65],dh
  405516:	jae    0x40558d
  405518:	ins    BYTE PTR es:[rdi],dx
  405519:	je     0x40553b
  40551b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405522:	jae    0x405591
  405524:	(bad)  
  405525:	ins    BYTE PTR es:[rdi],dx
  405526:	ins    BYTE PTR es:[rdi],dx
  405527:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40552b:	(bad)  
  40552c:	and    BYTE PTR gs:[rdx+0x65],dh
  405530:	jo     0x4055a4
  405532:	gs jae 0x40559a
  405535:	outs   dx,BYTE PTR ds:[rsi]
  405536:	je     0x40559d
  405538:	and    BYTE PTR fs:[rax],ch
  40553b:	push   rbp
  40553c:	rex.WRX
  40553d:	rex.R
  40553e:	rex.RB push r10
  405540:	rex.RX
  405541:	rex.WR
  405542:	rex.WRXB push r15
  405544:	sub    DWORD PTR [rax],eax
  405546:	push   rbp
  405547:	outs   dx,BYTE PTR ds:[rsi]
  405548:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40554c:	outs   dx,BYTE PTR ds:[rsi]
  40554d:	and    BYTE PTR [rbp+0x72],ah
  405550:	jb     0x4055c1
  405552:	jb     0x405554
  405554:	add    BYTE PTR [rax],al
  405556:	add    BYTE PTR [rax],al
  405558:	pop    rdi
  405559:	ins    DWORD PTR es:[rdi],dx
  40555a:	(bad)  
  40555b:	je     0x4055c5
  40555d:	gs jb  0x4055d2
  405560:	sub    BYTE PTR [rcx],ch
  405562:	cmp    ah,BYTE PTR [rax]
  405564:	and    eax,0x6e692073
  405569:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657de2
  40556f:	sub    al,0x20
  405571:	and    eax,0x20202967
  405576:	sub    BYTE PTR [rdx+0x65],dh
  405579:	je     0x4055f1
  40557b:	(bad)  
  40557c:	ins    BYTE PTR es:[rdi],dx
  40557d:	cmp    eax,0xa296725
  405582:	add    BYTE PTR [rax],al
  405584:	pushf  
  405585:	(bad)  
  405586:	(bad)  
  405587:	(bad)  
  405588:	ffree  st(5)
  40558a:	(bad)  
  40558b:	dec    DWORD PTR [rsi+rax*8-0x1]
  40558f:	call   FWORD PTR [rsi+rax*8-0x1]
  405593:	jmp    FWORD PTR [rsi+rax*8-0x1]
  405597:	(bad)  
  405598:	jl     0x405560
  40559a:	(bad)  
  40559b:	dec    DWORD PTR [rsi+rax*8+0x694dffff]
  4055a2:	outs   dx,BYTE PTR ds:[rsi]
  4055a3:	addr32 ja 0x4055d3
  4055a6:	ja     0x4055de
  4055a8:	xor    al,0x20
  4055aa:	jb     0x405621
  4055ac:	outs   dx,BYTE PTR ds:[rsi]
  4055ad:	je     0x405618
  4055af:	ins    DWORD PTR es:[rdi],dx
  4055b0:	and    BYTE PTR gs:[rsi+0x61],ah
  4055b4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4055bc:	add    BYTE PTR [rax],al
  4055be:	add    BYTE PTR [rax],al
  4055c0:	rex.B
  4055c1:	fs fs jb 0x40562a
  4055c5:	jae    0x40563a
  4055c7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8763d
  4055cd:	jae    0x4055ef
  4055cf:	outs   dx,BYTE PTR ds:[rsi]
  4055d0:	outs   dx,DWORD PTR ds:[rsi]
  4055d1:	and    BYTE PTR [rcx+0x6d],ch
  4055d4:	(bad)  
  4055d5:	addr32 gs sub eax,0x74636573
  4055dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  4055e3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4055ea:	jne    0x405651
  4055ec:	jb     0x405667
  4055ee:	and    BYTE PTR [rsi+0x61],ah
  4055f1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4055f9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a27663
  4055ff:	je     0x405666
  405601:	jae    0x405623
  405603:	(bad)  
  405604:	je     0x405626
  405606:	(bad)  
  405607:	fs fs jb 0x405670
  40560b:	jae    0x405680
  40560d:	and    BYTE PTR [rip+0x70],ah        # 0x405683
  405613:	add    BYTE PTR [rax],al
  405615:	add    BYTE PTR [rax],al
  405617:	add    BYTE PTR [rax],ah
  405619:	and    BYTE PTR [rsi+0x69],dl
  40561c:	jb     0x405692
  40561e:	jne    0x405681
  405620:	ins    BYTE PTR es:[rdi],dx
  405621:	push   rax
  405622:	jb     0x405693
  405624:	je     0x40568b
  405626:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40562a:	(bad)  
  40562b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405633:	push   0x646f6320
  405638:	and    BYTE PTR gs:[rax],dh
  40563b:	js     0x405662
  40563d:	js     0x40563f
  40563f:	add    BYTE PTR [rax],ah
  405641:	and    BYTE PTR [rbp+0x6e],dl
  405644:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405648:	outs   dx,BYTE PTR ds:[rsi]
  405649:	and    BYTE PTR [rax+0x73],dh
  40564c:	gs jne 0x4056b3
  40564f:	outs   dx,DWORD PTR ds:[rsi]
  405650:	and    BYTE PTR [rdx+0x65],dh
  405653:	ins    BYTE PTR es:[rdi],dx
  405654:	outs   dx,DWORD PTR ds:[rsi]
  405655:	movsxd esp,DWORD PTR [rcx+0x74]
  405658:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40565f:	je     0x4056d0
  405661:	movsxd ebp,DWORD PTR [rdi+0x6c]
  405664:	and    BYTE PTR [rsi+0x65],dh
  405667:	jb     0x4056dc
  405669:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  405670:	or     al,BYTE PTR [rax]
  405672:	add    BYTE PTR [rax],al
  405674:	add    BYTE PTR [rax],al
  405676:	add    BYTE PTR [rax],al
  405678:	and    BYTE PTR [rax],ah
  40567a:	push   rbp
  40567b:	outs   dx,BYTE PTR ds:[rsi]
  40567c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405680:	outs   dx,BYTE PTR ds:[rsi]
  405681:	and    BYTE PTR [rax+0x73],dh
  405684:	gs jne 0x4056eb
  405687:	outs   dx,DWORD PTR ds:[rsi]
  405688:	and    BYTE PTR [rdx+0x65],dh
  40568b:	ins    BYTE PTR es:[rdi],dx
  40568c:	outs   dx,DWORD PTR ds:[rsi]
  40568d:	movsxd esp,DWORD PTR [rcx+0x74]
  405690:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405697:	and    BYTE PTR [rbx+0x69],dh
  40569a:	jp     0x405701
  40569c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8506
	...
  4056ae:	add    BYTE PTR [rax],al
  4056b0:	cs jo  0x405717
  4056b3:	(bad)  
  4056b4:	je     0x405717
	...
  4056be:	add    BYTE PTR [rax],al
  4056c0:	and    eax,0x203a73
  4056c5:	push   rax
  4056c6:	rex.WRXB push r11
  4056c8:	rex.WB pop r8
  4056ca:	rex.WR pop rcx
  4056cc:	pop    rdi
  4056cd:	rex.XB
  4056ce:	rex.WRXB push r10
  4056d0:	push   rdx
  4056d1:	rex.RB
  4056d2:	rex.XB push r12
	...
  4056e0:	jne    0x405750
  4056e2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4056e6:	outs   dx,BYTE PTR ds:[rsi]
  4056e7:	and    BYTE PTR [rdi+0x70],ch
  4056ea:	je     0x405755
  4056ec:	outs   dx,DWORD PTR ds:[rsi]
  4056ed:	outs   dx,BYTE PTR ds:[rsi]
  4056ee:	and    BYTE PTR [rip+0x7325202d],ch        # 0x73657721
	...
  405700:	jne    0x405770
  405702:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405706:	outs   dx,BYTE PTR ds:[rsi]
  405707:	and    BYTE PTR [rdi+0x70],ch
  40570a:	je     0x405775
  40570c:	outs   dx,DWORD PTR ds:[rsi]
  40570d:	outs   dx,BYTE PTR ds:[rsi]
  40570e:	and    BYTE PTR [rip+0x6325202d],ch        # 0x63657741
	...
  405720:	outs   dx,DWORD PTR ds:[rsi]
  405721:	jo     0x405797
  405723:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  40572a:	jae    0x40579a
  40572c:	(bad)  
  40572d:	je     0x40574f
  40572f:	je     0x405792
  405731:	imul   esp,DWORD PTR [rbp+0x20],0x61
  405735:	outs   dx,BYTE PTR ds:[rsi]
  405736:	and    BYTE PTR [rcx+0x72],ah
  405739:	addr32 jne 0x4057a9
  40573c:	outs   dx,BYTE PTR gs:[rsi]
  40573e:	je     0x405760
  405740:	sub    eax,0x2e25202d
  405745:	sub    dh,BYTE PTR [rbx+0x0]
	...
  405750:	(bad)  
  405751:	ins    DWORD PTR es:[rdi],dx
  405752:	(bad)  
  405753:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  40575a:	outs   dx,DWORD PTR ds:[rsi]
  40575b:	jo     0x4057d1
  40575d:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  405764:	and    eax,0x732a2e
	...
  40577d:	add    BYTE PTR [rax],al
  40577f:	add    BYTE PTR [rdi+0x70],ch
  405782:	je     0x4057ed
  405784:	outs   dx,DWORD PTR ds:[rsi]
  405785:	outs   dx,BYTE PTR ds:[rsi]
  405786:	and    BYTE PTR [rdx+0x65],dh
  405789:	jno    0x405800
  40578b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  405792:	and    BYTE PTR [rcx+0x72],ah
  405795:	addr32 jne 0x405805
  405798:	outs   dx,BYTE PTR gs:[rsi]
  40579a:	je     0x4057bc
  40579c:	sub    eax,0x7325202d
	...
  4057bd:	add    BYTE PTR [rax],al
  4057bf:	add    BYTE PTR [rdi+0x70],ch
  4057c2:	je     0x40582d
  4057c4:	outs   dx,DWORD PTR ds:[rsi]
  4057c5:	outs   dx,BYTE PTR ds:[rsi]
  4057c6:	and    BYTE PTR [rdx+0x65],dh
  4057c9:	jno    0x405840
  4057cb:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  4057d2:	and    BYTE PTR [rcx+0x72],ah
  4057d5:	addr32 jne 0x405845
  4057d8:	outs   dx,BYTE PTR gs:[rsi]
  4057da:	je     0x4057fc
  4057dc:	sub    eax,0x6325202d
	...
  4057fd:	add    BYTE PTR [rax],al
  4057ff:	add    BYTE PTR [rax+0x40],al
  405802:	add    BYTE PTR [rax],al
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rax+0x4040],al
	...
  40581d:	add    BYTE PTR [rax],al
  40581f:	add    BYTE PTR [rax+0x3e],al
  405822:	add    BYTE PTR [rax],al
	...
  40582d:	add    BYTE PTR [rax],al
  40582f:	add    BYTE PTR [rax+0x405d],dl
	...
  40583d:	add    BYTE PTR [rax],al
  40583f:	add    BYTE PTR [rax+0x405d],dl
	...
  40584d:	add    BYTE PTR [rax],al
  40584f:	add    BYTE PTR [rax+0x54],dl
  405852:	add    BYTE PTR [rax],al
	...
  405861:	add    BYTE PTR [rax+0x0],al
	...
  405870:	or     al,0x94
  405872:	add    BYTE PTR [rax],al
	...
  40587d:	add    BYTE PTR [rax],al
  40587f:	add    BYTE PTR [rsp+rdx*4],ah
  405882:	add    BYTE PTR [rax],al
	...
  40588d:	add    BYTE PTR [rax],al
  40588f:	add    BYTE PTR [rsp+rdx*4+0x40],cl
	...
  40589f:	add    BYTE PTR [rsp+rdx*4+0x40],ah
	...
  4058af:	add    BYTE PTR [rsp+rdx*4+0x40],bh
	...
  4058bf:	add    al,al
  4058c1:	xchg   BYTE PTR [rax+0x0],al
	...
  4058d0:	sub    BYTE PTR [rdx+0x40],cl
	...
  4058de:	add    BYTE PTR [rax],al
  4058e0:	and    BYTE PTR [rdx+0x40],cl
	...
  4058ee:	add    BYTE PTR [rax],al
  4058f0:	adc    BYTE PTR [rdx+0x40],cl
	...
  4058fe:	add    BYTE PTR [rax],al
  405900:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40590e:	add    BYTE PTR [rax],al
  405910:	add    BYTE PTR [rax+0x40],ah
	...
  40591e:	add    BYTE PTR [rax],al
  405920:	adc    BYTE PTR [rax+0x40],ah
	...
  40592e:	add    BYTE PTR [rax],al
  405930:	sbb    BYTE PTR [rax+0x40],ah
	...
  40593e:	add    BYTE PTR [rax],al
  405940:	xor    BYTE PTR [rax+0x40],ah
	...
  40594e:	add    BYTE PTR [rax],al
  405950:	rex add BYTE PTR [rax+0x0],0x0
	...
  40595d:	add    BYTE PTR [rax],al
  40595f:	add    BYTE PTR [rax+0x4086],dl
	...
  40596d:	add    BYTE PTR [rax],al
  40596f:	add    al,ah
  405971:	and    eax,DWORD PTR [rax+0x0]
	...
  405980:	xor    BYTE PTR [rbx],bl
  405982:	add    BYTE PTR [rax],al
	...
  40598d:	add    BYTE PTR [rax],al
  40598f:	add    BYTE PTR [rax-0x7a],al
  405992:	add    BYTE PTR [rax],al
	...
  40599d:	add    BYTE PTR [rax],al
  40599f:	add    BYTE PTR [rax-0x7a],dh
  4059a2:	add    BYTE PTR [rax],al
	...
  4059ad:	add    BYTE PTR [rax],al
  4059af:	add    BYTE PTR [rax-0x80],dl
  4059b2:	add    BYTE PTR [rax],al
	...
  4059bd:	add    BYTE PTR [rax],al
  4059bf:	add    BYTE PTR [rax-0x7a],bl
  4059c2:	add    BYTE PTR [rax],al
	...
  4059cd:	add    BYTE PTR [rax],al
  4059cf:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  4059df:	add    BYTE PTR [rax-0x7a],dl
  4059e2:	add    BYTE PTR [rax],al
	...
  4059ed:	add    BYTE PTR [rax],al
  4059ef:	add    BYTE PTR [rax-0x76],dl
  4059f2:	add    BYTE PTR [rax],al
	...
  4059fd:	add    BYTE PTR [rax],al
  4059ff:	add    BYTE PTR [rax+rax*2+0x40],ch
	...
  405a0f:	add    BYTE PTR [rdi+0x43],al
  405a12:	rex.XB cmp spl,BYTE PTR [r8]
  405a15:	sub    BYTE PTR [rdi+0x4e],al
  405a18:	push   rbp
  405a19:	sub    DWORD PTR [rax],esp
  405a1b:	xor    al,0x2e
  405a1d:	cmp    DWORD PTR [rsi],ebp
  405a1f:	xor    al,0x0
	...
  405a2d:	add    BYTE PTR [rax],al
  405a2f:	add    BYTE PTR [rdi+0x43],al
  405a32:	rex.XB cmp spl,BYTE PTR [r8]
  405a35:	sub    BYTE PTR [rdi+0x4e],al
  405a38:	push   rbp
  405a39:	sub    DWORD PTR [rax],esp
  405a3b:	xor    al,0x2e
  405a3d:	cmp    DWORD PTR [rsi],ebp
  405a3f:	xor    al,0x0
	...
  405a4d:	add    BYTE PTR [rax],al
  405a4f:	add    BYTE PTR [rdi+0x43],al
  405a52:	rex.XB cmp spl,BYTE PTR [r8]
  405a55:	sub    BYTE PTR [rdi+0x4e],al
  405a58:	push   rbp
  405a59:	sub    DWORD PTR [rax],esp
  405a5b:	xor    al,0x2e
  405a5d:	cmp    DWORD PTR [rsi],ebp
  405a5f:	xor    al,0x0
	...
  405a6d:	add    BYTE PTR [rax],al
  405a6f:	add    BYTE PTR [rdi+0x43],al
  405a72:	rex.XB cmp spl,BYTE PTR [r8]
  405a75:	sub    BYTE PTR [rdi+0x4e],al
  405a78:	push   rbp
  405a79:	sub    DWORD PTR [rax],esp
  405a7b:	xor    al,0x2e
  405a7d:	cmp    DWORD PTR [rsi],ebp
  405a7f:	xor    al,0x0
	...
  405a8d:	add    BYTE PTR [rax],al
  405a8f:	add    BYTE PTR [rdi+0x43],al
  405a92:	rex.XB cmp spl,BYTE PTR [r8]
  405a95:	sub    BYTE PTR [rdi+0x4e],al
  405a98:	push   rbp
  405a99:	sub    DWORD PTR [rax],esp
  405a9b:	xor    al,0x2e
  405a9d:	cmp    DWORD PTR [rsi],ebp
  405a9f:	xor    al,0x0
	...
  405aad:	add    BYTE PTR [rax],al
  405aaf:	add    BYTE PTR [rdi+0x43],al
  405ab2:	rex.XB cmp spl,BYTE PTR [r8]
  405ab5:	sub    BYTE PTR [rdi+0x4e],al
  405ab8:	push   rbp
  405ab9:	sub    DWORD PTR [rax],esp
  405abb:	xor    al,0x2e
  405abd:	cmp    DWORD PTR [rsi],ebp
  405abf:	xor    al,0x0
	...
  405acd:	add    BYTE PTR [rax],al
  405acf:	add    BYTE PTR [rdi+0x43],al
  405ad2:	rex.XB cmp spl,BYTE PTR [r8]
  405ad5:	sub    BYTE PTR [rdi+0x4e],al
  405ad8:	push   rbp
  405ad9:	sub    DWORD PTR [rax],esp
  405adb:	xor    al,0x2e
  405add:	cmp    DWORD PTR [rsi],ebp
  405adf:	xor    al,0x0
	...
  405aed:	add    BYTE PTR [rax],al
  405aef:	add    BYTE PTR [rdi+0x43],al
  405af2:	rex.XB cmp spl,BYTE PTR [r8]
  405af5:	sub    BYTE PTR [rdi+0x4e],al
  405af8:	push   rbp
  405af9:	sub    DWORD PTR [rax],esp
  405afb:	xor    al,0x2e
  405afd:	cmp    DWORD PTR [rsi],ebp
  405aff:	xor    al,0x0
	...
  405b0d:	add    BYTE PTR [rax],al
  405b0f:	add    BYTE PTR [rdi+0x43],al
  405b12:	rex.XB cmp spl,BYTE PTR [r8]
  405b15:	sub    BYTE PTR [rdi+0x4e],al
  405b18:	push   rbp
  405b19:	sub    DWORD PTR [rax],esp
  405b1b:	xor    al,0x2e
  405b1d:	cmp    DWORD PTR [rsi],ebp
  405b1f:	xor    al,0x0
	...
  405b2d:	add    BYTE PTR [rax],al
  405b2f:	add    BYTE PTR [rdi+0x43],al
  405b32:	rex.XB cmp spl,BYTE PTR [r8]
  405b35:	sub    BYTE PTR [rdi+0x4e],al
  405b38:	push   rbp
  405b39:	sub    DWORD PTR [rax],esp
  405b3b:	xor    al,0x2e
  405b3d:	cmp    DWORD PTR [rsi],ebp
  405b3f:	xor    al,0x0
	...
  405b4d:	add    BYTE PTR [rax],al
  405b4f:	add    BYTE PTR [rdi+0x43],al
  405b52:	rex.XB cmp spl,BYTE PTR [r8]
  405b55:	sub    BYTE PTR [rdi+0x4e],al
  405b58:	push   rbp
  405b59:	sub    DWORD PTR [rax],esp
  405b5b:	xor    al,0x2e
  405b5d:	cmp    DWORD PTR [rsi],ebp
  405b5f:	xor    al,0x0
	...
  405b6d:	add    BYTE PTR [rax],al
  405b6f:	add    BYTE PTR [rdi+0x43],al
  405b72:	rex.XB cmp spl,BYTE PTR [r8]
  405b75:	sub    BYTE PTR [rdi+0x4e],al
  405b78:	push   rbp
  405b79:	sub    DWORD PTR [rax],esp
  405b7b:	xor    al,0x2e
  405b7d:	cmp    DWORD PTR [rsi],ebp
  405b7f:	xor    al,0x0
	...
  405b8d:	add    BYTE PTR [rax],al
  405b8f:	add    BYTE PTR [rdi+0x43],al
  405b92:	rex.XB cmp spl,BYTE PTR [r8]
  405b95:	sub    BYTE PTR [rdi+0x4e],al
  405b98:	push   rbp
  405b99:	sub    DWORD PTR [rax],esp
  405b9b:	xor    al,0x2e
  405b9d:	cmp    DWORD PTR [rsi],ebp
  405b9f:	xor    al,0x0
	...
  405bad:	add    BYTE PTR [rax],al
  405baf:	add    BYTE PTR [rdi+0x43],al
  405bb2:	rex.XB cmp spl,BYTE PTR [r8]
  405bb5:	sub    BYTE PTR [rdi+0x4e],al
  405bb8:	push   rbp
  405bb9:	sub    DWORD PTR [rax],esp
  405bbb:	xor    al,0x2e
  405bbd:	cmp    DWORD PTR [rsi],ebp
  405bbf:	xor    al,0x0
	...
  405bcd:	add    BYTE PTR [rax],al
  405bcf:	add    BYTE PTR [rdi+0x43],al
  405bd2:	rex.XB cmp spl,BYTE PTR [r8]
  405bd5:	sub    BYTE PTR [rdi+0x4e],al
  405bd8:	push   rbp
  405bd9:	sub    DWORD PTR [rax],esp
  405bdb:	xor    al,0x2e
  405bdd:	cmp    DWORD PTR [rsi],ebp
  405bdf:	xor    al,0x0
	...
  405bed:	add    BYTE PTR [rax],al
  405bef:	add    BYTE PTR [rdi+0x43],al
  405bf2:	rex.XB cmp spl,BYTE PTR [r8]
  405bf5:	sub    BYTE PTR [rdi+0x4e],al
  405bf8:	push   rbp
  405bf9:	sub    DWORD PTR [rax],esp
  405bfb:	xor    al,0x2e
  405bfd:	cmp    DWORD PTR [rsi],ebp
  405bff:	xor    al,0x0
	...
  405c0d:	add    BYTE PTR [rax],al
  405c0f:	add    BYTE PTR [rdi+0x43],al
  405c12:	rex.XB cmp spl,BYTE PTR [r8]
  405c15:	sub    BYTE PTR [rdi+0x4e],al
  405c18:	push   rbp
  405c19:	sub    DWORD PTR [rax],esp
  405c1b:	xor    al,0x2e
  405c1d:	cmp    DWORD PTR [rsi],ebp
  405c1f:	xor    al,0x0
	...
  405c2d:	add    BYTE PTR [rax],al
  405c2f:	add    BYTE PTR [rdi+0x43],al
  405c32:	rex.XB cmp spl,BYTE PTR [r8]
  405c35:	sub    BYTE PTR [rdi+0x4e],al
  405c38:	push   rbp
  405c39:	sub    DWORD PTR [rax],esp
  405c3b:	xor    al,0x2e
  405c3d:	cmp    DWORD PTR [rsi],ebp
  405c3f:	xor    al,0x0
	...
  405c4d:	add    BYTE PTR [rax],al
  405c4f:	add    BYTE PTR [rdi+0x43],al
  405c52:	rex.XB cmp spl,BYTE PTR [r8]
  405c55:	sub    BYTE PTR [rdi+0x4e],al
  405c58:	push   rbp
  405c59:	sub    DWORD PTR [rax],esp
  405c5b:	xor    al,0x2e
  405c5d:	cmp    DWORD PTR [rsi],ebp
  405c5f:	xor    al,0x0
	...
  405c6d:	add    BYTE PTR [rax],al
  405c6f:	add    BYTE PTR [rdi+0x43],al
  405c72:	rex.XB cmp spl,BYTE PTR [r8]
  405c75:	sub    BYTE PTR [rdi+0x4e],al
  405c78:	push   rbp
  405c79:	sub    DWORD PTR [rax],esp
  405c7b:	xor    al,0x2e
  405c7d:	cmp    DWORD PTR [rsi],ebp
  405c7f:	xor    al,0x0
	...
  405c8d:	add    BYTE PTR [rax],al
  405c8f:	add    BYTE PTR [rdi+0x43],al
  405c92:	rex.XB cmp spl,BYTE PTR [r8]
  405c95:	sub    BYTE PTR [rdi+0x4e],al
  405c98:	push   rbp
  405c99:	sub    DWORD PTR [rax],esp
  405c9b:	xor    al,0x2e
  405c9d:	cmp    DWORD PTR [rsi],ebp
  405c9f:	xor    al,0x0
	...
  405cad:	add    BYTE PTR [rax],al
  405caf:	add    BYTE PTR [rdi+0x43],al
  405cb2:	rex.XB cmp spl,BYTE PTR [r8]
  405cb5:	sub    BYTE PTR [rdi+0x4e],al
  405cb8:	push   rbp
  405cb9:	sub    DWORD PTR [rax],esp
  405cbb:	xor    al,0x2e
  405cbd:	cmp    DWORD PTR [rsi],ebp
  405cbf:	xor    al,0x0
	...
  405ccd:	add    BYTE PTR [rax],al
  405ccf:	add    BYTE PTR [rdi+0x43],al
  405cd2:	rex.XB cmp spl,BYTE PTR [r8]
  405cd5:	sub    BYTE PTR [rdi+0x4e],al
  405cd8:	push   rbp
  405cd9:	sub    DWORD PTR [rax],esp
  405cdb:	xor    al,0x2e
  405cdd:	cmp    DWORD PTR [rsi],ebp
  405cdf:	xor    al,0x0
	...
  405ced:	add    BYTE PTR [rax],al
  405cef:	add    BYTE PTR [rdi+0x43],al
  405cf2:	rex.XB cmp spl,BYTE PTR [r8]
  405cf5:	sub    BYTE PTR [rdi+0x4e],al
  405cf8:	push   rbp
  405cf9:	sub    DWORD PTR [rax],esp
  405cfb:	xor    al,0x2e
  405cfd:	cmp    DWORD PTR [rsi],ebp
  405cff:	xor    al,0x0
	...
  405d0d:	add    BYTE PTR [rax],al
  405d0f:	add    BYTE PTR [rdi+0x43],al
  405d12:	rex.XB cmp spl,BYTE PTR [r8]
  405d15:	sub    BYTE PTR [rdi+0x4e],al
  405d18:	push   rbp
  405d19:	sub    DWORD PTR [rax],esp
  405d1b:	xor    al,0x2e
  405d1d:	cmp    DWORD PTR [rsi],ebp
  405d1f:	xor    al,0x0
	...
  405d2d:	add    BYTE PTR [rax],al
  405d2f:	add    BYTE PTR [rdi+0x43],al
  405d32:	rex.XB cmp spl,BYTE PTR [r8]
  405d35:	sub    BYTE PTR [rdi+0x4e],al
  405d38:	push   rbp
  405d39:	sub    DWORD PTR [rax],esp
  405d3b:	xor    al,0x2e
  405d3d:	cmp    DWORD PTR [rsi],ebp
  405d3f:	xor    al,0x0
	...
  405d4d:	add    BYTE PTR [rax],al
  405d4f:	add    BYTE PTR [rdi+0x43],al
  405d52:	rex.XB cmp spl,BYTE PTR [r8]
  405d55:	sub    BYTE PTR [rdi+0x4e],al
  405d58:	push   rbp
  405d59:	sub    DWORD PTR [rax],esp
  405d5b:	xor    al,0x2e
  405d5d:	cmp    DWORD PTR [rsi],ebp
  405d5f:	xor    al,0x0
	...
  405d6d:	add    BYTE PTR [rax],al
  405d6f:	add    BYTE PTR [rdi+0x43],al
  405d72:	rex.XB cmp spl,BYTE PTR [r8]
  405d75:	sub    BYTE PTR [rdi+0x4e],al
  405d78:	push   rbp
  405d79:	sub    DWORD PTR [rax],esp
  405d7b:	xor    al,0x2e
  405d7d:	cmp    DWORD PTR [rsi],ebp
  405d7f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x161f0000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0xffffffff90000070
  406055:	(bad)  
  406056:	add    BYTE PTR [rax],al
  406058:	(bad)  
  406059:	(bad)  
  40605a:	add    BYTE PTR [rax],al
  40605c:	mov    WORD PTR [rax+0x0],?
  40605f:	add    BYTE PTR [rax+0x17],al
  406062:	add    BYTE PTR [rax],al
  406064:	pop    rcx
  406065:	(bad)  
  406066:	add    BYTE PTR [rax],al
  406068:	xchg   esp,eax
  406069:	jo     0x40606b
  40606b:	add    BYTE PTR [rax+0x17],ah
  40606e:	add    BYTE PTR [rax],al
  406070:	xchg   ebp,eax
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	pushf  
  406075:	jo     0x406077
  406077:	add    BYTE PTR [rax-0xaffffe9],ah
  40607d:	(bad)  
  40607e:	add    BYTE PTR [rax],al
  406080:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  406081:	jo     0x406083
  406083:	add    BYTE PTR [rax],al
  406085:	sbb    BYTE PTR [rax],al
  406087:	add    BYTE PTR [rax+rbx*1],bl
  40608a:	add    BYTE PTR [rax],al
  40608c:	mov    al,0x70
  40608e:	add    BYTE PTR [rax],al
  406090:	and    BYTE PTR [rax],bl
  406092:	add    BYTE PTR [rax],al
  406094:	sub    bl,BYTE PTR [rax]
  406096:	add    BYTE PTR [rax],al
  406098:	mov    ah,0x70
  40609a:	add    BYTE PTR [rax],al
  40609c:	xor    BYTE PTR [rax],bl
  40609e:	add    BYTE PTR [rax],al
  4060a0:	xor    ebx,DWORD PTR [rax]
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	mov    eax,0x40000070
  4060a9:	sbb    BYTE PTR [rax],al
  4060ab:	add    BYTE PTR [rsi],dl
  4060ad:	sbb    DWORD PTR [rax],eax
  4060af:	add    BYTE PTR [rax+rsi*2+0x19200000],bh
  4060b6:	add    BYTE PTR [rax],al
  4060b8:	sbb    ebx,DWORD PTR [rdx]
  4060ba:	add    BYTE PTR [rax],al
  4060bc:	int3   
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax],ah
  4060c1:	sbb    al,BYTE PTR [rax]
  4060c3:	add    BYTE PTR [rdi+0x1a],cl
  4060c6:	add    BYTE PTR [rax],al
  4060c8:	fdiv   QWORD PTR [rax+0x0]
  4060cb:	add    BYTE PTR [rax+0x1a],dl
  4060ce:	add    BYTE PTR [rax],al
  4060d0:	mov    ecx,0xe400001a
  4060d5:	jo     0x4060d7
  4060d7:	add    al,al
  4060d9:	sbb    al,BYTE PTR [rax]
  4060db:	add    bl,al
  4060dd:	sbb    al,BYTE PTR [rax]
  4060df:	add    al,dh
  4060e1:	jo     0x4060e3
  4060e3:	add    al,dl
  4060e5:	sbb    al,BYTE PTR [rax]
  4060e7:	add    BYTE PTR [rcx],dl
  4060e9:	sbb    eax,DWORD PTR [rax]
  4060eb:	add    ah,dh
  4060ed:	jo     0x4060ef
  4060ef:	add    BYTE PTR [rax],ah
  4060f1:	sbb    eax,DWORD PTR [rax]
  4060f3:	add    BYTE PTR [rbx+rbx*1],ch
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	cld    
  4060f9:	jo     0x4060fb
  4060fb:	add    BYTE PTR [rax],dh
  4060fd:	sbb    eax,DWORD PTR [rax]
  4060ff:	add    BYTE PTR [rsp+rbx*1],ch
  406102:	add    BYTE PTR [rax],al
  406104:	add    BYTE PTR [rcx+0x0],dh
  406107:	add    BYTE PTR [rax],dh
  406109:	sbb    al,0x0
  40610b:	add    BYTE PTR [rbx],dh
  40610d:	sbb    al,0x0
  40610f:	add    BYTE PTR [rax],bl
  406111:	jno    0x406113
  406113:	add    BYTE PTR [rax+0x1c],al
  406116:	add    BYTE PTR [rax],al
  406118:	rex.R sbb al,0x0
  40611b:	add    BYTE PTR [rcx+rsi*2],bl
  40611e:	add    BYTE PTR [rax],al
  406120:	push   rax
  406121:	sbb    al,0x0
  406123:	add    BYTE PTR [rsp+rbx*1+0x0],dl
  406127:	add    BYTE PTR [rax],ah
  406129:	jno    0x40612b
  40612b:	add    BYTE PTR [rax+0x1c],ah
  40612e:	add    BYTE PTR [rax],al
  406130:	rcr    DWORD PTR [rax+rax*1],0x0
  406134:	and    al,0x71
  406136:	add    BYTE PTR [rax],al
  406138:	rcr    BYTE PTR [rax+rax*1],1
  40613b:	add    BYTE PTR [rdx],dh
  40613d:	(bad)  
  40613e:	add    BYTE PTR [rax],al
  406140:	xor    BYTE PTR [rcx+0x0],dh
  406143:	add    BYTE PTR [rax+0x1e],al
  406146:	add    BYTE PTR [rax],al
  406148:	cmp    DWORD PTR [rcx],esp
  40614a:	add    BYTE PTR [rax],al
  40614c:	rex.R jno 0x40614f
  40614f:	add    BYTE PTR [rax+0x21],al
  406152:	add    BYTE PTR [rax],al
  406154:	out    0x22,al
  406156:	add    BYTE PTR [rax],al
  406158:	pop    rsp
  406159:	jno    0x40615b
  40615b:	add    al,dh
  40615d:	and    al,BYTE PTR [rax]
  40615f:	add    ah,bl
  406161:	and    eax,DWORD PTR [rax]
  406163:	add    BYTE PTR [rcx+rsi*2+0x0],ah
  406167:	add    al,ah
  406169:	and    eax,DWORD PTR [rax]
  40616b:	add    BYTE PTR [rax+0x74000025],bl
  406171:	jno    0x406173
  406173:	add    BYTE PTR [rax+0xd000025],ah
  406179:	add    BYTE PTR es:[rax],al
  40617c:	jl     0x4061ef
  40617e:	add    BYTE PTR [rax],al
  406180:	adc    BYTE PTR [rsi],ah
  406182:	add    BYTE PTR [rax],al
  406184:	(bad)  
  406185:	add    BYTE PTR es:[rax],al
  406188:	mov    WORD PTR [rcx+0x0],?
  40618b:	add    BYTE PTR [rax+0x2f000026],dl
  406191:	(bad)  
  406192:	add    BYTE PTR [rax],al
  406194:	cwde   
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax],dh
  406199:	(bad)  
  40619a:	add    BYTE PTR [rax],al
  40619c:	or     ch,BYTE PTR [rax]
  40619e:	add    BYTE PTR [rax],al
  4061a0:	movabs al,ds:0x2f00002810000071
  4061a9:	sub    BYTE PTR [rax],al
  4061ab:	add    BYTE PTR [rax+0x30000071],ch
  4061b1:	sub    BYTE PTR [rax],al
  4061b3:	add    BYTE PTR [rdx+0x28],al
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	lods   al,BYTE PTR ds:[rsi]
  4061b9:	jno    0x4061bb
  4061bb:	add    BYTE PTR [rax+0x28],dl
  4061be:	add    BYTE PTR [rax],al
  4061c0:	xchg   ebp,eax
  4061c1:	sub    BYTE PTR [rax],al
  4061c3:	add    BYTE PTR [rax-0x5fffff8f],dh
  4061c9:	sub    BYTE PTR [rax],al
  4061cb:	add    BYTE PTR [rsi],bh
  4061cd:	sub    DWORD PTR [rax],eax
  4061cf:	add    BYTE PTR [rcx+rsi*2+0x29400000],dh
  4061d6:	add    BYTE PTR [rax],al
  4061d8:	sub    DWORD PTR [rcx],0x0
  4061db:	add    al,al
  4061dd:	jno    0x4061df
  4061df:	add    BYTE PTR [rax-0x34ffffd7],dl
  4061e5:	sub    DWORD PTR [rax],eax
  4061e7:	add    ah,cl
  4061e9:	jno    0x4061eb
  4061eb:	add    al,dl
  4061ed:	sub    DWORD PTR [rax],eax
  4061ef:	add    BYTE PTR [rsi+0x2a],bl
  4061f2:	add    BYTE PTR [rax],al
  4061f4:	(bad)  
  4061f5:	jno    0x4061f7
  4061f7:	add    BYTE PTR [rax+0x2a],ah
  4061fa:	add    BYTE PTR [rax],al
  4061fc:	cwde   
  4061fd:	sub    al,BYTE PTR [rax]
  4061ff:	add    al,ah
  406201:	jno    0x406203
  406203:	add    BYTE PTR [rax-0xaffffd6],ah
  406209:	sub    al,BYTE PTR [rax]
  40620b:	add    ah,ch
  40620d:	jno    0x40620f
  40620f:	add    BYTE PTR [rax],al
  406211:	sub    eax,DWORD PTR [rax]
  406213:	add    BYTE PTR [rsi-0x7ffffd5],ch
  406219:	jno    0x40621b
  40621b:	add    al,dh
  40621d:	sub    eax,DWORD PTR [rax]
  40621f:	add    BYTE PTR [rdx+0x800002c],bl
  406225:	jb     0x406227
  406227:	add    BYTE PTR [rax+0x2000002c],ah
  40622d:	sub    eax,0x72180000
  406232:	add    BYTE PTR [rax],al
  406234:	and    BYTE PTR [rip+0x30d60000],ch        # 0x3116623a
  40623a:	add    BYTE PTR [rax],al
  40623c:	and    al,0x72
  40623e:	add    BYTE PTR [rax],al
  406240:	loopne 0x406272
  406242:	add    BYTE PTR [rax],al
  406244:	(bad)
  406247:	add    BYTE PTR [rdx+rsi*2],bh
  40624a:	add    BYTE PTR [rax],al
  40624c:	shl    BYTE PTR [rdi],1
  40624e:	add    BYTE PTR [rax],al
  406250:	repnz (bad) 
  406252:	add    BYTE PTR [rax],al
  406254:	push   rsp
  406255:	jb     0x406257
  406257:	add    BYTE PTR [rax],al
  406259:	cmp    BYTE PTR [rax],al
  40625b:	add    BYTE PTR [rax],ah
  40625d:	cmp    BYTE PTR [rax],al
  40625f:	add    BYTE PTR [rdx+rsi*2+0x0],bl
  406263:	add    BYTE PTR [rax],ah
  406265:	cmp    BYTE PTR [rax],al
  406267:	add    BYTE PTR [rax+0x38],al
  40626a:	add    BYTE PTR [rax],al
  40626c:	fs jb  0x40626f
  40626f:	add    BYTE PTR [rax+0x39],al
  406272:	add    BYTE PTR [rax],al
  406274:	cmp    QWORD PTR [rax],rax
  406277:	add    BYTE PTR [rdx+rsi*2+0x0],ch
  40627b:	add    BYTE PTR [rax+0x39],dl
  40627e:	add    BYTE PTR [rax],al
  406280:	pop    rbx
  406281:	cmp    DWORD PTR [rax],eax
  406283:	add    BYTE PTR [rax+0x72],dh
  406286:	add    BYTE PTR [rax],al
  406288:	and    BYTE PTR [rdx],bh
  40628a:	add    BYTE PTR [rax],al
  40628c:	xor    eax,0x7400003e
  406291:	jo     0x406293
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	xor    BYTE PTR [rcx],bh
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	(bad)  
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    al,ah
  407041:	and    eax,DWORD PTR [rax]
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	xor    BYTE PTR [rcx],bh
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	add    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	sbb    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	loopne 0x407085
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rdi],eax
  40706a:	add    al,0x0
  40706c:	(bad)  
  40706d:	xor    al,BYTE PTR [rbx]
  40706f:	xor    BYTE PTR [rdx],al
  407071:	(bad)  
  407072:	add    DWORD PTR [rax+0x1],esi
  407075:	adc    ecx,DWORD PTR [rdx]
  407077:	add    BYTE PTR [rbx],dl
  407079:	add    DWORD PTR [rbx],ebx
  40707b:	add    BYTE PTR [rax+rsi*1],cl
  40707e:	or     esp,DWORD PTR [rax+0xa]
  407081:	jo     0x40708c
  407083:	push   rax
  407084:	or     al,al
  407086:	(bad)  
  407087:	rol    BYTE PTR [rax+riz*8],1
  40708a:	add    dh,al
  40708c:	add    DWORD PTR [rip+0x52050002],eax        # 0x52457094
  407092:	add    DWORD PTR [rax],esi
  407094:	add    DWORD PTR [rcx+rax*1],eax
  407097:	add    BYTE PTR [rdx+rax*2],al
  40709a:	add    BYTE PTR [rax],al
  40709c:	add    DWORD PTR [rcx+rax*1],eax
  40709f:	add    BYTE PTR [rdx+rax*2],al
  4070a2:	add    BYTE PTR [rax],al
  4070a4:	add    DWORD PTR [rsi],eax
  4070a6:	add    eax,DWORD PTR [rax]
  4070a8:	(bad)  
  4070a9:	rex.X add sil,BYTE PTR [rax]
  4070ac:	add    DWORD PTR [rax+0x0],esp
  4070af:	add    BYTE PTR [rcx],al
  4070b1:	add    BYTE PTR [rax],al
  4070b3:	add    BYTE PTR [rcx],al
  4070b5:	add    BYTE PTR [rax],al
  4070b7:	add    BYTE PTR [rcx],al
  4070b9:	add    BYTE PTR [rax],al
  4070bb:	add    BYTE PTR [rcx],al
  4070bd:	or     al,BYTE PTR [rsi]
  4070bf:	add    BYTE PTR [rdx],cl
  4070c1:	jb     0x4070c9
  4070c3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07529
  4070c9:	push   rax
  4070ca:	add    al,al
  4070cc:	add    DWORD PTR [rdx],ecx
  4070ce:	add    eax,0x6d20a05
  4070d3:	add    eax,DWORD PTR [rbx]
  4070d5:	xor    BYTE PTR [rdx],al
  4070d7:	(bad)  
  4070d8:	add    DWORD PTR [rax+0x0],edx
  4070db:	add    BYTE PTR [rcx],al
  4070dd:	add    al,0x1
  4070df:	add    BYTE PTR [rdx+rax*2],al
  4070e2:	add    BYTE PTR [rax],al
  4070e4:	add    DWORD PTR [rsi],eax
  4070e6:	add    eax,DWORD PTR [rax]
  4070e8:	(bad)  
  4070e9:	rex.X add sil,BYTE PTR [rax]
  4070ec:	add    DWORD PTR [rax+0x0],esp
  4070ef:	add    BYTE PTR [rcx],al
  4070f1:	add    BYTE PTR [rax],al
  4070f3:	add    BYTE PTR [rcx],al
  4070f5:	add    al,0x1
  4070f7:	add    BYTE PTR [rdx+riz*4],al
  4070fa:	add    BYTE PTR [rax],al
  4070fc:	add    DWORD PTR [rax],eax
  4070fe:	add    BYTE PTR [rax],al
  407100:	add    DWORD PTR [rsi],edx
  407102:	or     DWORD PTR [rax],eax
  407104:	(bad)  
  407105:	mov    BYTE PTR [rsi],al
  407107:	add    BYTE PTR [rax],dl
  407109:	js     0x407110
  40710b:	add    BYTE PTR [rbx],cl
  40710d:	push   0xffffffffe2060004
  407112:	add    dh,BYTE PTR [rax]
  407114:	add    DWORD PTR [rax+0x0],esp
  407117:	add    BYTE PTR [rcx],al
  407119:	add    BYTE PTR [rax],al
  40711b:	add    BYTE PTR [rcx],al
  40711d:	add    BYTE PTR [rax],al
  40711f:	add    BYTE PTR [rcx],al
  407121:	add    BYTE PTR [rax],al
  407123:	add    BYTE PTR [rcx],al
  407125:	(bad)  
  407126:	add    eax,DWORD PTR [rax]
  407128:	(bad)  
  407129:	(bad)  
  40712b:	xor    BYTE PTR [rcx],al
  40712d:	(bad)  
  40712e:	add    BYTE PTR [rax],al
  407130:	add    DWORD PTR [rdi+rax*1],ecx
  407133:	add    BYTE PTR [rdx+riz*4],cl
  407136:	or     BYTE PTR [rax],dh
  407138:	(bad)  
  407139:	(bad)  
  40713a:	(bad)  
  40713b:	jo     0x407142
  40713d:	push   rax
  40713e:	add    al,0xc0
  407140:	add    dl,al
  407142:	add    BYTE PTR [rax],al
  407144:	add    DWORD PTR [rcx],edx
  407146:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e235d
  40714c:	or     dh,BYTE PTR [rax]
  40714e:	or     DWORD PTR [rax+0x8],esp
  407151:	jo     0x40715a
  407153:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220752a
  40715a:	add    BYTE PTR [rax],al
  40715c:	add    DWORD PTR [rcx+rax*1],eax
  40715f:	add    BYTE PTR [rdx+rax*2],al
  407162:	add    BYTE PTR [rax],al
  407164:	add    DWORD PTR [rdx],ecx
  407166:	(bad)  
  407167:	add    BYTE PTR [rdx],cl
  407169:	xor    al,BYTE PTR [rsi]
  40716b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075d1
  407171:	push   rax
  407172:	add    al,al
  407174:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245717c
  40717a:	add    DWORD PTR [rax],esi
  40717c:	add    DWORD PTR [rax],ecx
  40717e:	add    eax,0x4420800
  407183:	xor    BYTE PTR [rbx],al
  407185:	(bad)  
  407186:	add    dh,BYTE PTR [rax+0x1]
  407189:	push   rax
  40718a:	add    BYTE PTR [rax],al
  40718c:	add    DWORD PTR [rdi],eax
  40718e:	add    al,0x0
  407190:	(bad)  
  407191:	xor    al,BYTE PTR [rbx]
  407193:	xor    BYTE PTR [rdx],al
  407195:	(bad)  
  407196:	add    DWORD PTR [rax+0x1],esi
  407199:	add    eax,0x32050002
  40719e:	add    DWORD PTR [rax],esi
  4071a0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571a8
  4071a6:	add    DWORD PTR [rax],esi
  4071a8:	add    DWORD PTR [rax],eax
  4071aa:	add    BYTE PTR [rax],al
  4071ac:	add    DWORD PTR [rax],eax
  4071ae:	add    BYTE PTR [rax],al
  4071b0:	add    DWORD PTR [rax],eax
  4071b2:	add    BYTE PTR [rax],al
  4071b4:	add    DWORD PTR [rdi],eax
  4071b6:	add    al,0x0
  4071b8:	(bad)  
  4071b9:	xor    al,BYTE PTR [rbx]
  4071bb:	xor    BYTE PTR [rdx],al
  4071bd:	(bad)  
  4071be:	add    DWORD PTR [rax+0x1],esi
  4071c1:	(bad)  
  4071c2:	add    eax,DWORD PTR [rax]
  4071c4:	(bad)  
  4071c5:	rex.X add sil,BYTE PTR [rax]
  4071c8:	add    DWORD PTR [rax+0x0],esp
  4071cb:	add    BYTE PTR [rcx],al
  4071cd:	add    eax,0x32050002
  4071d2:	add    DWORD PTR [rax],esi
  4071d4:	add    DWORD PTR [rdi],eax
  4071d6:	add    al,0x0
  4071d8:	(bad)  
  4071d9:	xor    al,BYTE PTR [rbx]
  4071db:	xor    BYTE PTR [rdx],al
  4071dd:	(bad)  
  4071de:	add    DWORD PTR [rax+0x1],esi
  4071e1:	(bad)  
  4071e2:	add    eax,DWORD PTR [rax]
  4071e4:	(bad)  
  4071e5:	rex.X add sil,BYTE PTR [rax]
  4071e8:	add    DWORD PTR [rax+0x0],esp
  4071eb:	add    BYTE PTR [rcx],al
  4071ed:	(bad)  
  4071ee:	add    eax,DWORD PTR [rax]
  4071f0:	(bad)  
  4071f1:	rex.X add sil,BYTE PTR [rax]
  4071f4:	add    DWORD PTR [rax+0x0],esp
  4071f7:	add    BYTE PTR [rcx],al
  4071f9:	or     BYTE PTR [rip+0x4420800],al        # 0x48279ff
  4071ff:	xor    BYTE PTR [rbx],al
  407201:	(bad)  
  407202:	add    dh,BYTE PTR [rax+0x1]
  407205:	push   rax
  407206:	add    BYTE PTR [rax],al
  407208:	add    DWORD PTR [rax],ecx
  40720a:	(bad)  
  40720b:	add    BYTE PTR [rax],cl
  40720d:	xor    BYTE PTR [rdi],al
  40720f:	(bad)  
  407210:	(bad)  
  407211:	jo     0x407218
  407213:	push   rax
  407214:	add    al,0xc0
  407216:	add    dl,al
  407218:	add    DWORD PTR [rdi],eax
  40721a:	add    al,0x0
  40721c:	(bad)  
  40721d:	push   rdx
  40721e:	add    esi,DWORD PTR [rax]
  407220:	add    ah,BYTE PTR [rax+0x1]
  407223:	jo     0x407226
  407225:	adc    BYTE PTR [rcx],cl
  407227:	add    BYTE PTR [rax],dl
  407229:	(bad)  
  40722a:	or     al,0x30
  40722c:	or     esp,DWORD PTR [rax+0xa]
  40722f:	jo     0x40723a
  407231:	push   rax
  407232:	or     al,al
  407234:	(bad)  
  407235:	rol    BYTE PTR [rax+riz*8],1
  407238:	add    dh,al
  40723a:	add    BYTE PTR [rax],al
  40723c:	add    DWORD PTR [rax],edx
  40723e:	or     DWORD PTR [rax],eax
  407240:	adc    BYTE PTR [rdx+0xc],ah
  407243:	xor    BYTE PTR [rbx],cl
  407245:	(bad)  
  407246:	or     dh,BYTE PTR [rax+0x9]
  407249:	push   rax
  40724a:	or     al,al
  40724c:	(bad)  
  40724d:	rol    BYTE PTR [rax+riz*8],1
  407250:	add    dh,al
  407252:	add    BYTE PTR [rax],al
  407254:	add    DWORD PTR [rcx+rax*1],eax
  407257:	add    BYTE PTR [rdx+riz*2],al
  40725a:	add    BYTE PTR [rax],al
  40725c:	add    DWORD PTR [rcx+rax*1],eax
  40725f:	add    BYTE PTR [rdx+riz*2],al
  407262:	add    BYTE PTR [rax],al
  407264:	add    DWORD PTR [rcx+rax*1],eax
  407267:	add    BYTE PTR [rdx+riz*2],al
  40726a:	add    BYTE PTR [rax],al
  40726c:	add    DWORD PTR [rax],eax
  40726e:	add    BYTE PTR [rax],al
  407270:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	fs nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	int3   
  40900d:	cdq    
  40900e:	add    BYTE PTR [rax],al
  409010:	(bad)  
  409011:	xchg   edx,eax
  409012:	add    BYTE PTR [rax],al
  409014:	mov    esp,0x90
  409019:	add    BYTE PTR [rax],al
  40901b:	add    BYTE PTR [rax],al
  40901d:	add    BYTE PTR [rax],al
  40901f:	add    al,dh
  409021:	cdq    
  409022:	add    BYTE PTR [rax],al
  409024:	sbb    al,0x93
  409026:	add    BYTE PTR [rax],al
  409028:	in     al,0x90
	...
  409032:	add    BYTE PTR [rax],al
  409034:	(bad)  
  409035:	(bad)  
  409036:	add    BYTE PTR [rax],al
  409038:	rex.R xchg ebx,eax
  40903a:	add    BYTE PTR [rax],al
  40903c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40903d:	xchg   ecx,eax
	...
  409046:	add    BYTE PTR [rax],al
  409048:	cld    
  409049:	(bad)  
  40904a:	add    BYTE PTR [rax],al
  40904c:	add    al,0x94
	...
  409062:	add    BYTE PTR [rax],al
  409064:	and    al,0x95
  409066:	add    BYTE PTR [rax],al
  409068:	add    BYTE PTR [rax],al
  40906a:	add    BYTE PTR [rax],al
  40906c:	cmp    BYTE PTR [rbp+0x0],dl
  409072:	add    BYTE PTR [rax],al
  409074:	rex.WR xchg rbp,rax
  409076:	add    BYTE PTR [rax],al
  409078:	add    BYTE PTR [rax],al
  40907a:	add    BYTE PTR [rax],al
  40907c:	fs xchg ebp,eax
  40907e:	add    BYTE PTR [rax],al
  409080:	add    BYTE PTR [rax],al
  409082:	add    BYTE PTR [rax],al
  409084:	js     0x40901b
  409086:	add    BYTE PTR [rax],al
  409088:	add    BYTE PTR [rax],al
  40908a:	add    BYTE PTR [rax],al
  40908c:	mov    WORD PTR [rbp+0x0],ss
  409092:	add    BYTE PTR [rax],al
  409094:	cwde   
  409095:	xchg   ebp,eax
  409096:	add    BYTE PTR [rax],al
  409098:	add    BYTE PTR [rax],al
  40909a:	add    BYTE PTR [rax],al
  40909c:	lods   al,BYTE PTR ds:[rsi]
  40909d:	xchg   ebp,eax
  40909e:	add    BYTE PTR [rax],al
  4090a0:	add    BYTE PTR [rax],al
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	rcl    BYTE PTR [rbp+0x0],0x0
  4090ab:	add    ah,dl
  4090ad:	xchg   ebp,eax
	...
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	loopne 0x409053
  4090be:	add    BYTE PTR [rax],al
  4090c0:	add    BYTE PTR [rax],al
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	lock xchg ebp,eax
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	add    BYTE PTR [rax],al
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    al,0x96
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	add    BYTE PTR [rax],al
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	sbb    BYTE PTR [rsi+0x0],dl
	...
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	sub    BYTE PTR [rsi+0x0],dl
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	rex xchg esi,eax
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	add    BYTE PTR [rax],al
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	pop    rax
  4090f5:	xchg   esi,eax
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	add    BYTE PTR [rax],al
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	ins    BYTE PTR es:[rdi],dx
  4090fd:	xchg   esi,eax
  4090fe:	add    BYTE PTR [rax],al
  409100:	add    BYTE PTR [rax],al
  409102:	add    BYTE PTR [rax],al
  409104:	(bad)  
  409105:	xchg   esi,eax
  409106:	add    BYTE PTR [rax],al
  409108:	add    BYTE PTR [rax],al
  40910a:	add    BYTE PTR [rax],al
  40910c:	cwde   
  40910d:	xchg   esi,eax
  40910e:	add    BYTE PTR [rax],al
  409110:	add    BYTE PTR [rax],al
  409112:	add    BYTE PTR [rax],al
  409114:	test   al,0x96
  409116:	add    BYTE PTR [rax],al
  409118:	add    BYTE PTR [rax],al
  40911a:	add    BYTE PTR [rax],al
  40911c:	mov    edx,0x96
  409121:	add    BYTE PTR [rax],al
  409123:	add    ah,dl
  409125:	xchg   esi,eax
  409126:	add    BYTE PTR [rax],al
  409128:	add    BYTE PTR [rax],al
  40912a:	add    BYTE PTR [rax],al
  40912c:	in     al,0x96
  40912e:	add    BYTE PTR [rax],al
  409130:	add    BYTE PTR [rax],al
  409132:	add    BYTE PTR [rax],al
  409134:	add    BYTE PTR [rdi+0x0],dl
  40913a:	add    BYTE PTR [rax],al
  40913c:	sbb    BYTE PTR [rdi+0x0],dl
  409142:	add    BYTE PTR [rax],al
  409144:	xor    dl,BYTE PTR [rdi+0x0]
  40914a:	add    BYTE PTR [rax],al
  40914c:	xchg   rdi,rax
  40914e:	add    BYTE PTR [rax],al
  409150:	add    BYTE PTR [rax],al
  409152:	add    BYTE PTR [rax],al
  409154:	pop    rsp
  409155:	xchg   edi,eax
  409156:	add    BYTE PTR [rax],al
  409158:	add    BYTE PTR [rax],al
  40915a:	add    BYTE PTR [rax],al
  40915c:	jbe    0x4090f5
  40915e:	add    BYTE PTR [rax],al
  409160:	add    BYTE PTR [rax],al
  409162:	add    BYTE PTR [rax],al
  409164:	mov    dl,BYTE PTR [rdi+0x0]
  40916a:	add    BYTE PTR [rax],al
  40916c:	test   al,0x97
  40916e:	add    BYTE PTR [rax],al
  409170:	add    BYTE PTR [rax],al
  409172:	add    BYTE PTR [rax],al
  409174:	mov    al,0x97
  409176:	add    BYTE PTR [rax],al
  409178:	add    BYTE PTR [rax],al
  40917a:	add    BYTE PTR [rax],al
  40917c:	(bad)  
  40917d:	xchg   edi,eax
  40917e:	add    BYTE PTR [rax],al
  409180:	add    BYTE PTR [rax],al
  409182:	add    BYTE PTR [rax],al
  409184:	rcl    BYTE PTR [rdi+0x0],cl
  40918a:	add    BYTE PTR [rax],al
  40918c:	out    dx,al
  40918d:	xchg   edi,eax
  40918e:	add    BYTE PTR [rax],al
  409190:	add    BYTE PTR [rax],al
  409192:	add    BYTE PTR [rax],al
  409194:	add    BYTE PTR [rax+0x0],bl
	...
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	adc    BYTE PTR [rax+0x0],bl
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	sub    BYTE PTR [rax+0x0],bl
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	xor    bl,BYTE PTR [rax+0x0]
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	rex cwde 
  4091be:	add    BYTE PTR [rax],al
  4091c0:	add    BYTE PTR [rax],al
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	push   rax
  4091c5:	cwde   
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	add    BYTE PTR [rax],al
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	pop    rsp
  4091cd:	cwde   
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	add    BYTE PTR [rax],al
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	push   0xffffffffffffff98
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	add    BYTE PTR [rax],al
  4091da:	add    BYTE PTR [rax],al
  4091dc:	jp     0x409176
  4091de:	add    BYTE PTR [rax],al
  4091e0:	add    BYTE PTR [rax],al
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	mov    WORD PTR [rax+0x0],ds
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	movabs al,ds:0xaa00000000000098
  4091f5:	cwde   
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	add    BYTE PTR [rax],al
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	mov    eax,0x98
  409201:	add    BYTE PTR [rax],al
  409203:	add    dl,al
  409205:	cwde   
  409206:	add    BYTE PTR [rax],al
  409208:	add    BYTE PTR [rax],al
  40920a:	add    BYTE PTR [rax],al
  40920c:	int3   
  40920d:	cwde   
  40920e:	add    BYTE PTR [rax],al
  409210:	add    BYTE PTR [rax],al
  409212:	add    BYTE PTR [rax],al
  409214:	fcomp  DWORD PTR [rax+0x0]
  40921a:	add    BYTE PTR [rax],al
  40921c:	loopne 0x4091b6
  40921e:	add    BYTE PTR [rax],al
  409220:	add    BYTE PTR [rax],al
  409222:	add    BYTE PTR [rax],al
  409224:	(bad)  
  409225:	cwde   
  409226:	add    BYTE PTR [rax],al
  409228:	add    BYTE PTR [rax],al
  40922a:	add    BYTE PTR [rax],al
  40922c:	hlt    
  40922d:	cwde   
  40922e:	add    BYTE PTR [rax],al
  409230:	add    BYTE PTR [rax],al
  409232:	add    BYTE PTR [rax],al
  409234:	cld    
  409235:	cwde   
  409236:	add    BYTE PTR [rax],al
  409238:	add    BYTE PTR [rax],al
  40923a:	add    BYTE PTR [rax],al
  40923c:	add    al,0x99
  40923e:	add    BYTE PTR [rax],al
  409240:	add    BYTE PTR [rax],al
  409242:	add    BYTE PTR [rax],al
  409244:	(bad)  
  409245:	cdq    
  409246:	add    BYTE PTR [rax],al
  409248:	add    BYTE PTR [rax],al
  40924a:	add    BYTE PTR [rax],al
  40924c:	(bad)  
  40924d:	cdq    
  40924e:	add    BYTE PTR [rax],al
  409250:	add    BYTE PTR [rax],al
  409252:	add    BYTE PTR [rax],al
  409254:	and    BYTE PTR [rcx+0x0],bl
  40925a:	add    BYTE PTR [rax],al
  40925c:	sub    BYTE PTR [rcx+0x0],bl
  409262:	add    BYTE PTR [rax],al
  409264:	xor    BYTE PTR [rcx+0x0],bl
  40926a:	add    BYTE PTR [rax],al
  40926c:	cmp    bl,BYTE PTR [rcx+0x0]
  409272:	add    BYTE PTR [rax],al
  409274:	rex.R cdq 
  409276:	add    BYTE PTR [rax],al
  409278:	add    BYTE PTR [rax],al
  40927a:	add    BYTE PTR [rax],al
  40927c:	rex.WRX cqo 
  40927e:	add    BYTE PTR [rax],al
  409280:	add    BYTE PTR [rax],al
  409282:	add    BYTE PTR [rax],al
  409284:	pop    rax
  409285:	cdq    
  409286:	add    BYTE PTR [rax],al
  409288:	add    BYTE PTR [rax],al
  40928a:	add    BYTE PTR [rax],al
  40928c:	(bad)  
  40928d:	cdq    
  40928e:	add    BYTE PTR [rax],al
  409290:	add    BYTE PTR [rax],al
  409292:	add    BYTE PTR [rax],al
  409294:	outs   dx,BYTE PTR ds:[rsi]
  409295:	cdq    
  409296:	add    BYTE PTR [rax],al
  409298:	add    BYTE PTR [rax],al
  40929a:	add    BYTE PTR [rax],al
  40929c:	js     0x409237
  40929e:	add    BYTE PTR [rax],al
  4092a0:	add    BYTE PTR [rax],al
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	(bad)  
  4092a5:	cdq    
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	add    BYTE PTR [rax],al
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	mov    WORD PTR [rcx+0x0],ds
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	xchg   esi,eax
  4092b5:	cdq    
	...
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	and    al,0x95
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	add    BYTE PTR [rax],al
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	cmp    BYTE PTR [rbp+0x0],dl
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	rex.WR xchg rbp,rax
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	add    BYTE PTR [rax],al
  4092da:	add    BYTE PTR [rax],al
  4092dc:	fs xchg ebp,eax
  4092de:	add    BYTE PTR [rax],al
  4092e0:	add    BYTE PTR [rax],al
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	js     0x40927b
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	add    BYTE PTR [rax],al
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	mov    WORD PTR [rbp+0x0],ss
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	cwde   
  4092f5:	xchg   ebp,eax
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	add    BYTE PTR [rax],al
  4092fa:	add    BYTE PTR [rax],al
  4092fc:	lods   al,BYTE PTR ds:[rsi]
  4092fd:	xchg   ebp,eax
  4092fe:	add    BYTE PTR [rax],al
  409300:	add    BYTE PTR [rax],al
  409302:	add    BYTE PTR [rax],al
  409304:	rcl    BYTE PTR [rbp+0x0],0x0
  40930b:	add    ah,dl
  40930d:	xchg   ebp,eax
	...
  40931a:	add    BYTE PTR [rax],al
  40931c:	loopne 0x4092b3
  40931e:	add    BYTE PTR [rax],al
  409320:	add    BYTE PTR [rax],al
  409322:	add    BYTE PTR [rax],al
  409324:	lock xchg ebp,eax
  409326:	add    BYTE PTR [rax],al
  409328:	add    BYTE PTR [rax],al
  40932a:	add    BYTE PTR [rax],al
  40932c:	add    al,0x96
  40932e:	add    BYTE PTR [rax],al
  409330:	add    BYTE PTR [rax],al
  409332:	add    BYTE PTR [rax],al
  409334:	sbb    BYTE PTR [rsi+0x0],dl
	...
  409342:	add    BYTE PTR [rax],al
  409344:	sub    BYTE PTR [rsi+0x0],dl
  40934a:	add    BYTE PTR [rax],al
  40934c:	rex xchg esi,eax
  40934e:	add    BYTE PTR [rax],al
  409350:	add    BYTE PTR [rax],al
  409352:	add    BYTE PTR [rax],al
  409354:	pop    rax
  409355:	xchg   esi,eax
  409356:	add    BYTE PTR [rax],al
  409358:	add    BYTE PTR [rax],al
  40935a:	add    BYTE PTR [rax],al
  40935c:	ins    BYTE PTR es:[rdi],dx
  40935d:	xchg   esi,eax
  40935e:	add    BYTE PTR [rax],al
  409360:	add    BYTE PTR [rax],al
  409362:	add    BYTE PTR [rax],al
  409364:	(bad)  
  409365:	xchg   esi,eax
  409366:	add    BYTE PTR [rax],al
  409368:	add    BYTE PTR [rax],al
  40936a:	add    BYTE PTR [rax],al
  40936c:	cwde   
  40936d:	xchg   esi,eax
  40936e:	add    BYTE PTR [rax],al
  409370:	add    BYTE PTR [rax],al
  409372:	add    BYTE PTR [rax],al
  409374:	test   al,0x96
  409376:	add    BYTE PTR [rax],al
  409378:	add    BYTE PTR [rax],al
  40937a:	add    BYTE PTR [rax],al
  40937c:	mov    edx,0x96
  409381:	add    BYTE PTR [rax],al
  409383:	add    ah,dl
  409385:	xchg   esi,eax
  409386:	add    BYTE PTR [rax],al
  409388:	add    BYTE PTR [rax],al
  40938a:	add    BYTE PTR [rax],al
  40938c:	in     al,0x96
  40938e:	add    BYTE PTR [rax],al
  409390:	add    BYTE PTR [rax],al
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rdi+0x0],dl
  40939a:	add    BYTE PTR [rax],al
  40939c:	sbb    BYTE PTR [rdi+0x0],dl
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	xor    dl,BYTE PTR [rdi+0x0]
  4093aa:	add    BYTE PTR [rax],al
  4093ac:	xchg   rdi,rax
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	add    BYTE PTR [rax],al
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	pop    rsp
  4093b5:	xchg   edi,eax
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	add    BYTE PTR [rax],al
  4093ba:	add    BYTE PTR [rax],al
  4093bc:	jbe    0x409355
  4093be:	add    BYTE PTR [rax],al
  4093c0:	add    BYTE PTR [rax],al
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	mov    dl,BYTE PTR [rdi+0x0]
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	test   al,0x97
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	add    BYTE PTR [rax],al
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	mov    al,0x97
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	add    BYTE PTR [rax],al
  4093da:	add    BYTE PTR [rax],al
  4093dc:	(bad)  
  4093dd:	xchg   edi,eax
  4093de:	add    BYTE PTR [rax],al
  4093e0:	add    BYTE PTR [rax],al
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	rcl    BYTE PTR [rdi+0x0],cl
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	out    dx,al
  4093ed:	xchg   edi,eax
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	add    BYTE PTR [rax],al
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	add    BYTE PTR [rax+0x0],bl
	...
  409402:	add    BYTE PTR [rax],al
  409404:	adc    BYTE PTR [rax+0x0],bl
  40940a:	add    BYTE PTR [rax],al
  40940c:	sub    BYTE PTR [rax+0x0],bl
  409412:	add    BYTE PTR [rax],al
  409414:	xor    bl,BYTE PTR [rax+0x0]
  40941a:	add    BYTE PTR [rax],al
  40941c:	rex cwde 
  40941e:	add    BYTE PTR [rax],al
  409420:	add    BYTE PTR [rax],al
  409422:	add    BYTE PTR [rax],al
  409424:	push   rax
  409425:	cwde   
  409426:	add    BYTE PTR [rax],al
  409428:	add    BYTE PTR [rax],al
  40942a:	add    BYTE PTR [rax],al
  40942c:	pop    rsp
  40942d:	cwde   
  40942e:	add    BYTE PTR [rax],al
  409430:	add    BYTE PTR [rax],al
  409432:	add    BYTE PTR [rax],al
  409434:	push   0xffffffffffffff98
  409436:	add    BYTE PTR [rax],al
  409438:	add    BYTE PTR [rax],al
  40943a:	add    BYTE PTR [rax],al
  40943c:	jp     0x4093d6
  40943e:	add    BYTE PTR [rax],al
  409440:	add    BYTE PTR [rax],al
  409442:	add    BYTE PTR [rax],al
  409444:	mov    WORD PTR [rax+0x0],ds
  40944a:	add    BYTE PTR [rax],al
  40944c:	movabs al,ds:0xaa00000000000098
  409455:	cwde   
  409456:	add    BYTE PTR [rax],al
  409458:	add    BYTE PTR [rax],al
  40945a:	add    BYTE PTR [rax],al
  40945c:	mov    eax,0x98
  409461:	add    BYTE PTR [rax],al
  409463:	add    dl,al
  409465:	cwde   
  409466:	add    BYTE PTR [rax],al
  409468:	add    BYTE PTR [rax],al
  40946a:	add    BYTE PTR [rax],al
  40946c:	int3   
  40946d:	cwde   
  40946e:	add    BYTE PTR [rax],al
  409470:	add    BYTE PTR [rax],al
  409472:	add    BYTE PTR [rax],al
  409474:	fcomp  DWORD PTR [rax+0x0]
  40947a:	add    BYTE PTR [rax],al
  40947c:	loopne 0x409416
  40947e:	add    BYTE PTR [rax],al
  409480:	add    BYTE PTR [rax],al
  409482:	add    BYTE PTR [rax],al
  409484:	(bad)  
  409485:	cwde   
  409486:	add    BYTE PTR [rax],al
  409488:	add    BYTE PTR [rax],al
  40948a:	add    BYTE PTR [rax],al
  40948c:	hlt    
  40948d:	cwde   
  40948e:	add    BYTE PTR [rax],al
  409490:	add    BYTE PTR [rax],al
  409492:	add    BYTE PTR [rax],al
  409494:	cld    
  409495:	cwde   
  409496:	add    BYTE PTR [rax],al
  409498:	add    BYTE PTR [rax],al
  40949a:	add    BYTE PTR [rax],al
  40949c:	add    al,0x99
  40949e:	add    BYTE PTR [rax],al
  4094a0:	add    BYTE PTR [rax],al
  4094a2:	add    BYTE PTR [rax],al
  4094a4:	(bad)  
  4094a5:	cdq    
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	add    BYTE PTR [rax],al
  4094aa:	add    BYTE PTR [rax],al
  4094ac:	(bad)  
  4094ad:	cdq    
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	add    BYTE PTR [rax],al
  4094b2:	add    BYTE PTR [rax],al
  4094b4:	and    BYTE PTR [rcx+0x0],bl
  4094ba:	add    BYTE PTR [rax],al
  4094bc:	sub    BYTE PTR [rcx+0x0],bl
  4094c2:	add    BYTE PTR [rax],al
  4094c4:	xor    BYTE PTR [rcx+0x0],bl
  4094ca:	add    BYTE PTR [rax],al
  4094cc:	cmp    bl,BYTE PTR [rcx+0x0]
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	rex.R cdq 
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	add    BYTE PTR [rax],al
  4094da:	add    BYTE PTR [rax],al
  4094dc:	rex.WRX cqo 
  4094de:	add    BYTE PTR [rax],al
  4094e0:	add    BYTE PTR [rax],al
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	pop    rax
  4094e5:	cdq    
  4094e6:	add    BYTE PTR [rax],al
  4094e8:	add    BYTE PTR [rax],al
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	(bad)  
  4094ed:	cdq    
  4094ee:	add    BYTE PTR [rax],al
  4094f0:	add    BYTE PTR [rax],al
  4094f2:	add    BYTE PTR [rax],al
  4094f4:	outs   dx,BYTE PTR ds:[rsi]
  4094f5:	cdq    
  4094f6:	add    BYTE PTR [rax],al
  4094f8:	add    BYTE PTR [rax],al
  4094fa:	add    BYTE PTR [rax],al
  4094fc:	js     0x409497
  4094fe:	add    BYTE PTR [rax],al
  409500:	add    BYTE PTR [rax],al
  409502:	add    BYTE PTR [rax],al
  409504:	(bad)  
  409505:	cdq    
  409506:	add    BYTE PTR [rax],al
  409508:	add    BYTE PTR [rax],al
  40950a:	add    BYTE PTR [rax],al
  40950c:	mov    WORD PTR [rcx+0x0],ds
  409512:	add    BYTE PTR [rax],al
  409514:	xchg   esi,eax
  409515:	cdq    
	...
  409522:	add    BYTE PTR [rax],al
  409524:	adc    al,0x0
  409526:	rex.RX movsxd r8d,DWORD PTR [rbx+0x68]
  40952a:	(bad)  
  40952b:	jb     0x409580
  40952d:	gs je  0x409573
  409530:	outs   dx,DWORD PTR ds:[rsi]
  409531:	jne    0x4095a1
  409533:	je     0x409535
  409535:	add    BYTE PTR [rax],al
  409537:	add    BYTE PTR [rax],bl
  409539:	add    BYTE PTR [rsi+0x63],al
  40953c:	rex.XB push 0x65537261
  409542:	je     0x409588
  409544:	gs jae 0x4095bb
  409547:	jb     0x4095b8
  409549:	jns    0x40954b
  40954b:	add    BYTE PTR [rdx],bl
  40954d:	add    BYTE PTR [rsi+0x63],al
  409550:	rex.XB push 0x65537261
  409556:	je     0x40959e
  409558:	imul   esi,DWORD PTR [rdx+0x73],0x67615074
  40955f:	add    BYTE PTR gs:[rax],al
  409562:	add    BYTE PTR [rax],al
  409564:	and    DWORD PTR [rax],eax
  409566:	rex.RX movsxd r8d,DWORD PTR [rbx+0x68]
  40956a:	(bad)  
  40956b:	jb     0x4095c0
  40956d:	gs je  0x4095be
  409570:	gs js  0x4095e7
  409573:	push   rax
  409574:	(bad)  
  409575:	add    BYTE PTR gs:[edx],ah
  409579:	add    BYTE PTR [rsi+0x63],al
  40957c:	rex.XB push 0x65537261
  409582:	je     0x4095d7
  409584:	jne    0x4095e8
  409586:	je     0x4095fa
  409588:	(bad)  
  409589:	movsxd esi,DWORD PTR [rax+rax*1+0x4f]
  40958d:	add    BYTE PTR [rsi+0x63],al
  409590:	rex.RX imul r13d,DWORD PTR [rsi+0x69],0x0
  409598:	pop    rbp
  409599:	add    BYTE PTR [rsi+0x63],al
  40959c:	rex.RX jb 0x409604
  40959f:	gs push rsp
  4095a1:	jns    0x409613
  4095a3:	gs rex.XB push 0x65537261
  4095aa:	je     0x4095ac
  4095ac:	imul   eax,DWORD PTR [rax],0x614c6346
  4095b2:	outs   dx,BYTE PTR ds:[rsi]
  4095b3:	addr32 rex.RXB
  4095b5:	gs je  0x4095fb
  4095b8:	push   0x65537261
  4095bd:	je     0x4095bf
  4095bf:	add    BYTE PTR [rdx+0x0],ch
  4095c2:	movsxd r9d,DWORD PTR [rcx+r12*2+0x6e]
  4095c7:	rex.WRX outs dx,DWORD PTR ds:[esi]
  4095ca:	jb     0x409639
  4095cc:	(bad)  
  4095cd:	ins    BYTE PTR es:[rdi],dx
  4095ce:	imul   edi,DWORD PTR [rdx+0x65],0xbb000000
  4095d5:	add    BYTE PTR [rsi+0x63],al
  4095d8:	push   rbx
  4095d9:	je     0x40964d
  4095db:	rex.RX jb 0x409643
  4095de:	add    BYTE PTR gs:[rcx],ah
  4095e1:	add    BYTE PTR [rsi+0x54],al
  4095e4:	pop    rdi
  4095e5:	rex.R outs dx,DWORD PTR ds:[rsi]
  4095e7:	outs   dx,BYTE PTR ds:[rsi]
  4095e8:	gs pop rdi
  4095ea:	rex.RX (bad) 
  4095ec:	movsxd esp,DWORD PTR [rbp+0x0]
  4095ef:	add    BYTE PTR [rdx],ah
  4095f1:	add    BYTE PTR [rsi+0x54],al
  4095f4:	pop    rdi
  4095f5:	rex.R outs dx,DWORD PTR ds:[rsi]
  4095f7:	outs   dx,BYTE PTR ds:[rsi]
  4095f8:	gs pop rdi
  4095fa:	rex.RX jb 0x409662
  4095fd:	gs push rsp
  4095ff:	jns    0x409671
  409601:	add    BYTE PTR gs:[rax],al
  409604:	(bad)  
  409605:	add    BYTE PTR [rsi+0x54],al
  409608:	pop    rdi
  409609:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40960b:	imul   esi,DWORD PTR [rdi+rbx*2+0x46],0x54656572
  409613:	jns    0x409685
  409615:	add    BYTE PTR gs:[rax],al
  409618:	jb     0x40961a
  40961a:	rex.RX push rsp
  40961c:	pop    rdi
  40961d:	rex.WRX
  40961e:	gs ja  0x409680
  409621:	rex.RX (bad) 
  409623:	movsxd esp,DWORD PTR [rbp+0x0]
  409626:	add    BYTE PTR [rax],al
  409628:	fadd   DWORD PTR [rax]
  40962a:	rex.R
  40962b:	gs ins BYTE PTR es:[rdi],dx
  40962d:	gs je  0x409695
  409630:	rex.XB jb 0x40969c
  409633:	je     0x40969e
  409635:	movsxd esp,DWORD PTR [rcx+0x6c]
  409638:	push   rbx
  409639:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40963e:	outs   dx,BYTE PTR ds:[rsi]
  40963f:	add    al,bh
  409641:	add    BYTE PTR [rbp+0x6e],al
  409644:	je     0x4096ab
  409646:	jb     0x40968b
  409648:	jb     0x4096b3
  40964a:	je     0x4096b5
  40964c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40964f:	push   rbx
  409650:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409655:	outs   dx,BYTE PTR ds:[rsi]
  409656:	add    BYTE PTR [rax],al
  409658:	int    0x1
  40965a:	rex.RXB
  40965b:	gs je  0x4096a1
  40965e:	jne    0x4096d2
  409660:	jb     0x4096c7
  409662:	outs   dx,BYTE PTR ds:[rsi]
  409663:	je     0x4096b5
  409665:	jb     0x4096d6
  409667:	movsxd esp,DWORD PTR [rbp+0x73]
  40966a:	jae    0x40966c
  40966c:	(bad)  
  40966d:	add    DWORD PTR [rdi+0x65],eax
  409670:	je     0x4096b5
  409672:	jne    0x4096e6
  409674:	jb     0x4096db
  409676:	outs   dx,BYTE PTR ds:[rsi]
  409677:	je     0x4096c9
  409679:	jb     0x4096ea
  40967b:	movsxd esp,DWORD PTR [rbp+0x73]
  40967e:	jae    0x4096c9
  409680:	fs add dl,dl
  409683:	add    DWORD PTR [rdi+0x65],eax
  409686:	je     0x4096cb
  409688:	jne    0x4096fc
  40968a:	jb     0x4096f1
  40968c:	outs   dx,BYTE PTR ds:[rsi]
  40968d:	je     0x4096e3
  40968f:	push   0x64616572
  409694:	rex.WB
  409695:	add    BYTE PTR fs:[rax],al
  409698:	adc    BYTE PTR [rdx],al
  40969a:	rex.RXB
  40969b:	gs je  0x4096ea
  40969e:	(bad)  
  40969f:	jae    0x409715
  4096a1:	rex.RB jb 0x409716
  4096a4:	outs   dx,DWORD PTR ds:[rsi]
  4096a5:	jb     0x4096a7
  4096a7:	add    BYTE PTR [rbx+0x2],dh
  4096aa:	rex.RXB
  4096ab:	gs je  0x409701
  4096ae:	je     0x409711
  4096b0:	jb     0x409726
  4096b2:	jne    0x409724
  4096b4:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4096b6:	outs   dx,WORD PTR ds:[rsi]
  4096b8:	add    BYTE PTR [r10+0x74654702],cl
  4096bf:	push   rbx
  4096c0:	jns    0x409735
  4096c2:	je     0x409729
  4096c4:	ins    DWORD PTR es:[rdi],dx
  4096c5:	push   rsp
  4096c6:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4096cd:	ins    BYTE PTR es:[rdi],dx
  4096ce:	gs push rsp
  4096d0:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4096d7:	gs je  0x40972e
  4096da:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4096e1:	je     0x4096e3
  4096e3:	add    cl,bh
  4096e5:	add    cl,BYTE PTR [rcx+0x6e]
  4096e8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4096f0:	rex.XB jb 0x40975c
  4096f3:	je     0x40975e
  4096f5:	movsxd esp,DWORD PTR [rcx+0x6c]
  4096f8:	push   rbx
  4096f9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4096fe:	outs   dx,BYTE PTR ds:[rsi]
  4096ff:	add    BYTE PTR [rbx+0x3],cl
  409702:	rex.WR
  409703:	gs (bad) 
  409705:	jbe    0x40976c
  409707:	rex.XB jb 0x409773
  40970a:	je     0x409775
  40970c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40970f:	push   rbx
  409710:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409715:	outs   dx,BYTE PTR ds:[rsi]
  409716:	add    BYTE PTR [rax],al
  409718:	mov    ebx,0x65755103
  40971d:	jb     0x409798
  40971f:	push   rax
  409720:	gs jb  0x409789
  409723:	outs   dx,DWORD PTR ds:[rsi]
  409724:	jb     0x409793
  409726:	(bad)  
  409727:	outs   dx,BYTE PTR ds:[rsi]
  409728:	movsxd esp,DWORD PTR [rbp+0x43]
  40972b:	outs   dx,DWORD PTR ds:[rsi]
  40972c:	jne    0x40979c
  40972e:	je     0x409795
  409730:	jb     0x409732
  409732:	add    DWORD PTR [rdx+rdx*2],eax
  409735:	je     0x4097a3
  409737:	rex.B
  409738:	fs fs rex.RX jne 0x4097ab
  40973d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409741:	outs   dx,BYTE PTR ds:[rsi]
  409742:	push   rsp
  409743:	(bad)  
  409744:	(bad)  
  409745:	ins    BYTE PTR es:[rdi],dx
  409746:	add    BYTE PTR gs:[rdx],al
  409749:	add    al,0x52
  40974b:	je     0x4097b9
  40974d:	rex.XB (bad) 
  40974f:	jo     0x4097c5
  409751:	jne    0x4097c5
  409753:	rex.XB outs dx,DWORD PTR gs:[rsi]
  409756:	outs   dx,BYTE PTR ds:[rsi]
  409757:	je     0x4097be
  409759:	js     0x4097cf
  40975b:	add    BYTE PTR [rcx],cl
  40975d:	add    al,0x52
  40975f:	je     0x4097cd
  409761:	rex.WR outs dx,DWORD PTR ds:[rsi]
  409763:	outs   dx,DWORD PTR ds:[rsi]
  409764:	imul   esi,DWORD PTR [rbp+0x70],0x46
  409768:	jne    0x4097d8
  40976a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40976e:	outs   dx,BYTE PTR ds:[rsi]
  40976f:	rex.RB outs dx,BYTE PTR ds:[rsi]
  409771:	je     0x4097e5
  409773:	jns    0x409775
  409775:	add    BYTE PTR [rax],dl
  409777:	add    al,0x52
  409779:	je     0x4097e7
  40977b:	push   rsi
  40977c:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  409783:	outs   dx,BYTE PTR ds:[rsi]
  409784:	ja     0x4097ef
  409786:	outs   dx,BYTE PTR ds:[rsi]
  409787:	add    BYTE PTR fs:[rax],al
  40978a:	lahf   
  40978b:	add    al,0x53
  40978d:	gs je  0x4097e5
  409790:	outs   dx,BYTE PTR ds:[rsi]
  409791:	push   0x6c646e61
  409796:	gs fs rex.RB js 0x4097fe
  40979b:	gs jo  0x409812
  40979e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4097a5:	gs jb  0x4097a8
  4097a8:	lods   al,BYTE PTR ds:[rsi]
  4097a9:	add    al,0x53
  4097ab:	ins    BYTE PTR es:[rdi],dx
  4097ac:	gs gs jo 0x4097b0
  4097b0:	mov    edx,0x72655404
  4097b5:	ins    DWORD PTR es:[rdi],dx
  4097b6:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4097bd:	outs   dx,DWORD PTR ds:[rsi]
  4097be:	movsxd esp,DWORD PTR [rbp+0x73]
  4097c1:	jae    0x4097c3
  4097c3:	add    cl,al
  4097c5:	add    al,0x54
  4097c7:	ins    BYTE PTR es:[rdi],dx
  4097c8:	jae    0x409811
  4097ca:	gs je  0x409823
  4097cd:	(bad)  
  4097ce:	ins    BYTE PTR es:[rdi],dx
  4097cf:	jne    0x409836
  4097d1:	add    dh,cl
  4097d3:	add    al,0x55
  4097d5:	outs   dx,BYTE PTR ds:[rsi]
  4097d6:	push   0x6c646e61
  4097db:	gs fs rex.RB js 0x409843
  4097e0:	gs jo  0x409857
  4097e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4097ea:	gs jb  0x4097ed
  4097ed:	add    ah,ch
  4097ef:	add    al,0x56
  4097f1:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4097f8:	jb     0x409869
  4097fa:	je     0x409861
  4097fc:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  409800:	out    dx,al
  409801:	add    al,0x56
  409803:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40980a:	jne    0x409871
  40980c:	jb     0x409887
  40980e:	add    BYTE PTR [rax],al
  409810:	(bad)  
  409811:	add    BYTE PTR [rdi+0x5f],bl
  409814:	rex.XB pop r15
  409816:	jae    0x409888
  409818:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40981c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409823:	ins    BYTE PTR es:[rdi],dx
  409824:	gs jb  0x409827
  409827:	add    BYTE PTR [rsi+0x0],al
  40982a:	pop    rdi
  40982b:	pop    rdi
  40982c:	(bad)  
  40982d:	jb     0x409896
  40982f:	jbe    0x409831
  409831:	add    BYTE PTR [rsi+0x0],cl
  409834:	pop    rdi
  409835:	pop    rdi
  409836:	fs ins BYTE PTR es:[rdi],dx
  409838:	ins    BYTE PTR es:[rdi],dx
  409839:	outs   dx,DWORD PTR ds:[rsi]
  40983a:	outs   dx,BYTE PTR ds:[rsi]
  40983b:	gs js  0x4098a7
  40983e:	je     0x409840
  409840:	push   rcx
  409841:	add    BYTE PTR [rdi+0x5f],bl
  409844:	addr32 gs je 0x4098b5
  409848:	(bad)  
  409849:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  409850:	push   rdx
  409851:	add    BYTE PTR [rdi+0x5f],bl
  409854:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40985b:	add    BYTE PTR [rbx+0x0],dl
  40985e:	pop    rdi
  40985f:	pop    rdi
  409860:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  409867:	movsxd eax,DWORD PTR [rax]
  409869:	add    BYTE PTR [rdx+0x0],bl
  40986c:	pop    rdi
  40986d:	pop    rdi
  40986e:	ins    BYTE PTR es:[rdi],dx
  40986f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409872:	jbe    0x4098d3
  409874:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40987b:	add    BYTE PTR [rdi+0x5f],bl
  40987e:	jae    0x4098e5
  409880:	je     0x4098e1
  409882:	(bad)  
  409883:	jo     0x4098f5
  409885:	pop    rdi
  409886:	je     0x409901
  409888:	jo     0x4098ef
  40988a:	add    BYTE PTR [rax],al
  40988c:	(bad)  
  40988d:	add    BYTE PTR [rdi+0x5f],bl
  409890:	jae    0x4098f7
  409892:	je     0x409909
  409894:	jae    0x4098fb
  409896:	jb     0x409905
  409898:	(bad)  
  409899:	je     0x409903
  40989b:	gs jb  0x409910
  40989e:	add    BYTE PTR [rax],al
  4098a0:	jno    0x4098a2
  4098a2:	pop    rdi
  4098a3:	(bad)  
  4098a4:	movsxd ebp,DWORD PTR [rbp+0x64]
  4098a7:	ins    BYTE PTR es:[rdi],dx
  4098a8:	outs   dx,BYTE PTR ds:[rsi]
  4098a9:	add    BYTE PTR [rax+0x0],bh
  4098ac:	pop    rdi
  4098ad:	(bad)  
  4098ae:	ins    DWORD PTR es:[rdi],dx
  4098af:	jae    0x409918
  4098b1:	pop    rdi
  4098b2:	gs js  0x40991e
  4098b5:	je     0x4098b7
  4098b7:	add    BYTE PTR [rdx+0x65635f00],cl
  4098bd:	js     0x409928
  4098bf:	je     0x4098c1
  4098c1:	add    dl,bl
  4098c3:	add    BYTE PTR [rdi+0x66],bl
  4098c6:	ins    DWORD PTR es:[rdi],dx
  4098c7:	outs   dx,DWORD PTR ds:[rsi]
  4098c8:	fs add BYTE PTR gs:[rax],al
  4098cc:	sbb    al,BYTE PTR [rcx]
  4098ce:	pop    rdi
  4098cf:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4098d6:	ins    DWORD PTR es:[rdi],dx
  4098d7:	add    BYTE PTR [rax+0x6f6c5f01],al
  4098dd:	movsxd ebp,DWORD PTR [rbx+0x0]
  4098e0:	and    eax,0x6e6f5f02
  4098e5:	gs js  0x409951
  4098e8:	je     0x4098ea
  4098ea:	(bad)
  4098ee:	outs   dx,BYTE PTR ds:[rsi]
  4098ef:	ins    BYTE PTR es:[rdi],dx
  4098f0:	outs   dx,DWORD PTR ds:[rsi]
  4098f1:	movsxd ebp,DWORD PTR [rbx+0x0]
  4098f4:	jg     0x4098f9
  4098f6:	(bad)  
  4098f7:	(bad)  
  4098f8:	outs   dx,DWORD PTR ds:[rsi]
  4098f9:	jb     0x40996f
  4098fb:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  409902:	add    BYTE PTR [rax],al
  409904:	nop
  409905:	add    esp,DWORD PTR [rbx+0x61]
  409908:	ins    BYTE PTR es:[rdi],dx
  409909:	ins    BYTE PTR es:[rdi],dx
  40990a:	outs   dx,DWORD PTR ds:[rsi]
  40990b:	movsxd eax,DWORD PTR [rax]
  40990d:	add    BYTE PTR [rbp+0x69786503],bl
  409913:	je     0x409915
  409915:	add    BYTE PTR [rax+0x72706603],dh
  40991b:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  409922:	data16 jo 0x40999a
  409925:	je     0x40998a
  409927:	add    BYTE PTR [rdi+0x65726603],dh
  40992d:	add    BYTE PTR gs:[rax],al
  409930:	ret    0x6603
  409933:	ja     0x4099a7
  409935:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  40993d:	gs je  0x4099a5
  409940:	outs   dx,BYTE PTR ds:[rsi]
  409941:	jbe    0x409943
  409943:	add    al,dh
  409945:	add    ebp,DWORD PTR [rbp+0x61]
  409948:	ins    BYTE PTR es:[rdi],dx
  409949:	ins    BYTE PTR es:[rdi],dx
  40994a:	outs   dx,DWORD PTR ds:[rsi]
  40994b:	movsxd eax,DWORD PTR [rax]
  40994d:	add    al,bh
  40994f:	add    ebp,DWORD PTR [rbp+0x65]
  409952:	ins    DWORD PTR es:[rdi],dx
  409953:	movsxd esi,DWORD PTR [rax+0x79]
  409956:	add    BYTE PTR [rax],al
  409958:	add    DWORD PTR [rax+rsi*2],eax
  40995b:	jb     0x4099c6
  40995d:	outs   dx,BYTE PTR ds:[rsi]
  40995e:	je     0x4099c6
  409960:	add    BYTE PTR [rax],al
  409962:	adc    al,0x4
  409964:	jae    0x4099cb
  409966:	je     0x4099d4
  409968:	outs   dx,DWORD PTR ds:[rsi]
  409969:	movsxd esp,DWORD PTR [rcx+0x6c]
  40996c:	add    BYTE PTR gs:[rsi],dl
  40996f:	add    al,0x73
  409971:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409978:	and    eax,DWORD PTR [rbx+rsi*2]
  40997b:	je     0x4099ef
  40997d:	movsxd ebp,DWORD PTR [rax+0x72]
  409980:	add    BYTE PTR [rax],al
  409982:	sub    eax,DWORD PTR [rbx+rsi*2]
  409985:	je     0x4099f9
  409987:	ins    BYTE PTR es:[rdi],dx
  409988:	outs   dx,BYTE PTR gs:[rsi]
  40998a:	add    BYTE PTR [rax],al
  40998c:	cs add al,0x73
  40998f:	je     0x409a03
  409991:	outs   dx,BYTE PTR ds:[rsi]
  409992:	movsxd ebp,DWORD PTR [rbp+0x70]
  409995:	add    BYTE PTR [rsi+0x4],cl
  409998:	jbe    0x409a00
  40999a:	jo     0x409a0e
  40999c:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  4099a3:	add    BYTE PTR [rax],al
  4099a5:	nop
  4099a6:	add    BYTE PTR [rax],al
  4099a8:	add    BYTE PTR [rax-0x70000000],dl
  4099ae:	add    BYTE PTR [rax],al
  4099b0:	add    BYTE PTR [rax-0x70000000],dl
  4099b6:	add    BYTE PTR [rax],al
  4099b8:	add    BYTE PTR [rax-0x70000000],dl
  4099be:	add    BYTE PTR [rax],al
  4099c0:	add    BYTE PTR [rax-0x70000000],dl
  4099c6:	add    BYTE PTR [rax],al
  4099c8:	add    BYTE PTR [rax+0x696c0000],dl
  4099ce:	(bad)  
  4099cf:	outs   dx,WORD PTR ds:[rsi]
  4099d1:	outs   dx,BYTE PTR ds:[rsi]
  4099d2:	je     0x409a37
  4099d4:	outs   dx,DWORD PTR ds:[rsi]
  4099d5:	outs   dx,BYTE PTR ds:[rsi]
  4099d6:	imul   sp,WORD PTR [rdi+0x2d],0x2e31
  4099dc:	fs ins BYTE PTR es:[rdi],dx
  4099de:	ins    BYTE PTR es:[rdi],dx
  4099df:	add    BYTE PTR [rax+rdx*4],dl
  4099e2:	add    BYTE PTR [rax],al
  4099e4:	adc    al,0x90
  4099e6:	add    BYTE PTR [rax],al
  4099e8:	adc    al,0x90
  4099ea:	add    BYTE PTR [rax],al
  4099ec:	adc    al,0x90
  4099ee:	add    BYTE PTR [rax],al
  4099f0:	ins    BYTE PTR es:[rdi],dx
  4099f1:	imul   esp,DWORD PTR [rdx+0x66],0x74656572
  4099f8:	jns    0x409a6a
  4099fa:	gs sub eax,0x6c642e36
  409a00:	ins    BYTE PTR es:[rdi],dx
  409a01:	add    BYTE PTR [rax],al
  409a03:	add    BYTE PTR [rax],ch
  409a05:	nop
  409a06:	add    BYTE PTR [rax],al
  409a08:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a0e:	add    BYTE PTR [rax],al
  409a10:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a16:	add    BYTE PTR [rax],al
  409a18:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a1e:	add    BYTE PTR [rax],al
  409a20:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a26:	add    BYTE PTR [rax],al
  409a28:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a2e:	add    BYTE PTR [rax],al
  409a30:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a36:	add    BYTE PTR [rax],al
  409a38:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a3e:	add    BYTE PTR [rax],al
  409a40:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a46:	add    BYTE PTR [rax],al
  409a48:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a4e:	add    BYTE PTR [rax],al
  409a50:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a56:	add    BYTE PTR [rax],al
  409a58:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a5e:	add    BYTE PTR [rax],al
  409a60:	rex.WXB
  409a61:	rex.RB push r10
  409a63:	rex.WRX
  409a64:	rex.RB
  409a65:	xor    r14,QWORD PTR [rdx]
  409a68:	cs fs ins BYTE PTR es:[rdi],dx
  409a6b:	ins    BYTE PTR es:[rdi],dx
  409a6c:	add    BYTE PTR [rax],al
  409a6e:	add    BYTE PTR [rax],al
  409a70:	cmp    al,0x90
  409a72:	add    BYTE PTR [rax],al
  409a74:	cmp    al,0x90
  409a76:	add    BYTE PTR [rax],al
  409a78:	cmp    al,0x90
  409a7a:	add    BYTE PTR [rax],al
  409a7c:	cmp    al,0x90
  409a7e:	add    BYTE PTR [rax],al
  409a80:	cmp    al,0x90
  409a82:	add    BYTE PTR [rax],al
  409a84:	cmp    al,0x90
  409a86:	add    BYTE PTR [rax],al
  409a88:	cmp    al,0x90
  409a8a:	add    BYTE PTR [rax],al
  409a8c:	cmp    al,0x90
  409a8e:	add    BYTE PTR [rax],al
  409a90:	cmp    al,0x90
  409a92:	add    BYTE PTR [rax],al
  409a94:	cmp    al,0x90
  409a96:	add    BYTE PTR [rax],al
  409a98:	cmp    al,0x90
  409a9a:	add    BYTE PTR [rax],al
  409a9c:	cmp    al,0x90
  409a9e:	add    BYTE PTR [rax],al
  409aa0:	cmp    al,0x90
  409aa2:	add    BYTE PTR [rax],al
  409aa4:	cmp    al,0x90
  409aa6:	add    BYTE PTR [rax],al
  409aa8:	cmp    al,0x90
  409aaa:	add    BYTE PTR [rax],al
  409aac:	cmp    al,0x90
  409aae:	add    BYTE PTR [rax],al
  409ab0:	cmp    al,0x90
  409ab2:	add    BYTE PTR [rax],al
  409ab4:	cmp    al,0x90
  409ab6:	add    BYTE PTR [rax],al
  409ab8:	cmp    al,0x90
  409aba:	add    BYTE PTR [rax],al
  409abc:	cmp    al,0x90
  409abe:	add    BYTE PTR [rax],al
  409ac0:	cmp    al,0x90
  409ac2:	add    BYTE PTR [rax],al
  409ac4:	cmp    al,0x90
  409ac6:	add    BYTE PTR [rax],al
  409ac8:	cmp    al,0x90
  409aca:	add    BYTE PTR [rax],al
  409acc:	cmp    al,0x90
  409ace:	add    BYTE PTR [rax],al
  409ad0:	cmp    al,0x90
  409ad2:	add    BYTE PTR [rax],al
  409ad4:	cmp    al,0x90
  409ad6:	add    BYTE PTR [rax],al
  409ad8:	cmp    al,0x90
  409ada:	add    BYTE PTR [rax],al
  409adc:	cmp    al,0x90
  409ade:	add    BYTE PTR [rax],al
  409ae0:	cmp    al,0x90
  409ae2:	add    BYTE PTR [rax],al
  409ae4:	cmp    al,0x90
  409ae6:	add    BYTE PTR [rax],al
  409ae8:	cmp    al,0x90
  409aea:	add    BYTE PTR [rax],al
  409aec:	cmp    al,0x90
  409aee:	add    BYTE PTR [rax],al
  409af0:	cmp    al,0x90
  409af2:	add    BYTE PTR [rax],al
  409af4:	cmp    al,0x90
  409af6:	add    BYTE PTR [rax],al
  409af8:	cmp    al,0x90
  409afa:	add    BYTE PTR [rax],al
  409afc:	ins    DWORD PTR es:[rdi],dx
  409afd:	jae    0x409b75
  409aff:	movsxd esi,DWORD PTR [rdx+0x74]
  409b02:	cs fs ins BYTE PTR es:[rdi],dx
  409b05:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax],ah
  40a029:	sbb    BYTE PTR [rax+0x0],al
	...
  40a040:	push   rax
  40a041:	sbb    al,BYTE PTR [rax+0x0]
  40a044:	add    BYTE PTR [rax],al
  40a046:	add    BYTE PTR [rax],al
  40a048:	and    BYTE PTR [rdx],bl
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
