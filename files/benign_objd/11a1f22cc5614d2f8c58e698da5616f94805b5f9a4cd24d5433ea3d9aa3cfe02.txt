
11a1f22cc5614d2f8c58e698da5616f94805b5f9a4cd24d5433ea3d9aa3cfe02.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x8],rbx
   14000100d:	shr    rdx,1
   140001010:	xor    ebx,ebx
   140001012:	mov    r10d,0x7ffffffe
   140001018:	mov    r9d,ebx
   14000101b:	mov    r11d,0x80070057
   140001021:	lea    rax,[rdx-0x1]
   140001025:	cmp    rax,r10
   140001028:	cmova  r9d,r11d
   14000102c:	test   r9d,r9d
   14000102f:	js     0x140001070
   140001031:	mov    r9d,ebx
   140001034:	test   rdx,rdx
   140001037:	je     0x140001064
   140001039:	sub    r10,rdx
   14000103c:	sub    r8,rcx
   14000103f:	lea    rax,[r10+rdx*1]
   140001043:	test   rax,rax
   140001046:	je     0x14000105f
   140001048:	movzx  eax,WORD PTR [r8+rcx*1]
   14000104d:	test   ax,ax
   140001050:	je     0x14000105f
   140001052:	mov    WORD PTR [rcx],ax
   140001055:	add    rcx,0x2
   140001059:	sub    rdx,0x1
   14000105d:	jne    0x14000103f
   14000105f:	test   rdx,rdx
   140001062:	jne    0x140001075
   140001064:	sub    rcx,0x2
   140001068:	mov    r9d,0x8007007a
   14000106e:	jmp    0x140001075
   140001070:	test   rdx,rdx
   140001073:	je     0x140001078
   140001075:	mov    WORD PTR [rcx],bx
   140001078:	mov    rbx,QWORD PTR [rsp+0x8]
   14000107d:	mov    eax,r9d
   140001080:	ret    
   140001081:	int3   
   140001082:	int3   
   140001083:	int3   
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	mov    QWORD PTR [rsp+0x8],rbx
   14000108d:	mov    QWORD PTR [rsp+0x10],rdi
   140001092:	xor    edi,edi
   140001094:	mov    r10,rdx
   140001097:	shr    r10,1
   14000109a:	mov    r9d,edi
   14000109d:	mov    edx,0x80070057
   1400010a2:	mov    r11,r8
   1400010a5:	mov    rbx,rcx
   1400010a8:	lea    rax,[r10-0x1]
   1400010ac:	cmp    rax,0x7ffffffe
   1400010b2:	cmova  r9d,edx
   1400010b6:	test   r9d,r9d
   1400010b9:	js     0x1400010e5
   1400010bb:	mov    rax,r10
   1400010be:	mov    r9d,edi
   1400010c1:	test   r10,r10
   1400010c4:	je     0x1400010e2
   1400010c6:	cmp    WORD PTR [rcx],di
   1400010c9:	je     0x1400010d5
   1400010cb:	add    rcx,0x2
   1400010cf:	sub    rax,0x1
   1400010d3:	jne    0x1400010c6
   1400010d5:	test   rax,rax
   1400010d8:	je     0x1400010e2
   1400010da:	mov    r8,r10
   1400010dd:	sub    r8,rax
   1400010e0:	jmp    0x1400010e8
   1400010e2:	mov    r9d,edx
   1400010e5:	mov    r8,rdi
   1400010e8:	test   r9d,r9d
   1400010eb:	js     0x140001140
   1400010ed:	mov    rdx,r10
   1400010f0:	lea    rcx,[rbx+r8*2]
   1400010f4:	mov    r9d,edi
   1400010f7:	sub    rdx,r8
   1400010fa:	je     0x140001133
   1400010fc:	mov    rax,rdx
   1400010ff:	sub    rax,r10
   140001102:	lea    r10,[r8+0x7ffffffe]
   140001109:	add    r10,rax
   14000110c:	sub    r11,rcx
   14000110f:	test   r10,r10
   140001112:	je     0x14000112e
   140001114:	movzx  eax,WORD PTR [r11+rcx*1]
   140001119:	test   ax,ax
   14000111c:	je     0x14000112e
   14000111e:	mov    WORD PTR [rcx],ax
   140001121:	dec    r10
   140001124:	add    rcx,0x2
   140001128:	sub    rdx,0x1
   14000112c:	jne    0x14000110f
   14000112e:	test   rdx,rdx
   140001131:	jne    0x14000113d
   140001133:	sub    rcx,0x2
   140001137:	mov    r9d,0x8007007a
   14000113d:	mov    WORD PTR [rcx],di
   140001140:	mov    rbx,QWORD PTR [rsp+0x8]
   140001145:	mov    eax,r9d
   140001148:	mov    rdi,QWORD PTR [rsp+0x10]
   14000114d:	ret    
   14000114e:	int3   
   14000114f:	int3   
   140001150:	int3   
   140001151:	int3   
   140001152:	int3   
   140001153:	int3   
   140001154:	mov    QWORD PTR [rsp+0x18],r8
   140001159:	mov    QWORD PTR [rsp+0x20],r9
   14000115e:	push   rbx
   14000115f:	push   rbp
   140001160:	push   rsi
   140001161:	push   rdi
   140001162:	sub    rsp,0x28
   140001166:	shr    rdx,1
   140001169:	xor    ebp,ebp
   14000116b:	mov    rdi,rcx
   14000116e:	mov    esi,ebp
   140001170:	mov    ecx,0x80070057
   140001175:	lea    rax,[rdx-0x1]
   140001179:	cmp    rax,0x7ffffffe
   14000117f:	cmova  esi,ecx
   140001182:	test   esi,esi
   140001184:	js     0x1400011bb
   140001186:	lea    rbx,[rdx-0x1]
   14000118a:	mov    rcx,rdi
   14000118d:	mov    rdx,rbx
   140001190:	lea    r9,[rsp+0x68]
   140001195:	mov    esi,ebp
   140001197:	call   QWORD PTR [rip+0x6283]        # 0x140007420
   14000119d:	test   eax,eax
   14000119f:	js     0x1400011b0
   1400011a1:	cdqe   
   1400011a3:	cmp    rax,rbx
   1400011a6:	ja     0x1400011b0
   1400011a8:	jne    0x1400011c3
   1400011aa:	mov    WORD PTR [rdi+rbx*2],bp
   1400011ae:	jmp    0x1400011c3
   1400011b0:	mov    WORD PTR [rdi+rbx*2],bp
   1400011b4:	mov    esi,0x8007007a
   1400011b9:	jmp    0x1400011c3
   1400011bb:	test   rdx,rdx
   1400011be:	je     0x1400011c3
   1400011c0:	mov    WORD PTR [rdi],bp
   1400011c3:	mov    eax,esi
   1400011c5:	add    rsp,0x28
   1400011c9:	pop    rdi
   1400011ca:	pop    rsi
   1400011cb:	pop    rbp
   1400011cc:	pop    rbx
   1400011cd:	ret    
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	int3   
   1400011d1:	int3   
   1400011d2:	int3   
   1400011d3:	int3   
   1400011d4:	mov    rax,rsp
   1400011d7:	mov    QWORD PTR [rax+0x8],rbx
   1400011db:	mov    QWORD PTR [rax+0x10],rsi
   1400011df:	mov    QWORD PTR [rax+0x18],rdi
   1400011e3:	push   rbp
   1400011e4:	push   r12
   1400011e6:	push   r13
   1400011e8:	push   r14
   1400011ea:	push   r15
   1400011ec:	lea    rbp,[rax-0x1e8]
   1400011f3:	sub    rsp,0x2c0
   1400011fa:	mov    rax,QWORD PTR [rip+0x7e07]        # 0x140009008
   140001201:	xor    rax,rsp
   140001204:	mov    QWORD PTR [rbp+0x1b0],rax
   14000120b:	mov    r13d,0xffffffff
   140001211:	xor    r15d,r15d
   140001214:	mov    r12d,r13d
   140001217:	mov    DWORD PTR [rsp+0x40],r13d
   14000121c:	mov    r14d,r15d
   14000121f:	call   QWORD PTR [rip+0x5e83]        # 0x1400070a8
   140001225:	mov    rdx,QWORD PTR [rip+0x86c4]        # 0x1400098f0
   14000122c:	lea    r9,[rip+0x8cbd]        # 0x140009ef0
   140001233:	mov    esi,eax
   140001235:	mov    DWORD PTR [rsp+0x44],0x30000
   14000123d:	lea    eax,[r15+0x1c]
   140001241:	mov    DWORD PTR [rsp+0x64],0x1
   140001249:	mov    DWORD PTR [rsp+0x58],eax
   14000124d:	lea    r8,[rip+0x313c]        # 0x140004390
   140001254:	mov    DWORD PTR [rsp+0x5c],eax
   140001258:	lea    rcx,[rip+0x8c41]        # 0x140009ea0
   14000125f:	mov    DWORD PTR [rsp+0x60],eax
   140001263:	mov    edi,r15d
   140001266:	xor    eax,eax
   140001268:	mov    QWORD PTR [rsp+0x50],r15
   14000126d:	mov    QWORD PTR [rsp+0x68],rax
   140001272:	mov    DWORD PTR [rsp+0x70],eax
   140001276:	lea    rax,[rsp+0x58]
   14000127b:	mov    QWORD PTR [rsp+0x30],rax
   140001280:	lea    rax,[rsp+0x44]
   140001285:	mov    QWORD PTR [rsp+0x28],rax
   14000128a:	lea    rax,[rip+0x8c37]        # 0x140009ec8
   140001291:	mov    QWORD PTR [rsp+0x20],rax
   140001296:	call   QWORD PTR [rip+0x5f14]        # 0x1400071b0
   14000129c:	mov    ebx,eax
   14000129e:	cmp    eax,0x80000052
   1400012a3:	jne    0x1400013eb
   1400012a9:	mov    rcx,QWORD PTR [rip+0x8cf0]        # 0x140009fa0
   1400012b0:	xor    edx,edx
   1400012b2:	call   QWORD PTR [rip+0x60b0]        # 0x140007368
   1400012b8:	lea    ecx,[r15+0x1]
   1400012bc:	call   0x140001d9c
   1400012c1:	mov    rdx,QWORD PTR [rip+0x8628]        # 0x1400098f0
   1400012c8:	lea    rax,[rsp+0x58]
   1400012cd:	mov    QWORD PTR [rsp+0x30],rax
   1400012d2:	lea    r9,[rip+0x8c17]        # 0x140009ef0
   1400012d9:	lea    rax,[rsp+0x44]
   1400012de:	mov    QWORD PTR [rsp+0x28],rax
   1400012e3:	lea    r8,[rip+0x30a6]        # 0x140004390
   1400012ea:	lea    rax,[rip+0x8bd7]        # 0x140009ec8
   1400012f1:	lea    rcx,[rip+0x8ba8]        # 0x140009ea0
   1400012f8:	mov    QWORD PTR [rsp+0x20],rax
   1400012fd:	call   QWORD PTR [rip+0x5ead]        # 0x1400071b0
   140001303:	mov    ebx,eax
   140001305:	cmp    eax,0x80000052
   14000130a:	jne    0x1400013d2
   140001310:	lea    r13,[rip+0x8bb1]        # 0x140009ec8
   140001317:	jmp    0x14000132f
   140001319:	lea    rcx,[rsp+0x78]
   14000131e:	call   QWORD PTR [rip+0x5f6c]        # 0x140007290
   140001324:	lea    rcx,[rsp+0x78]
   140001329:	call   QWORD PTR [rip+0x6049]        # 0x140007378
   14000132f:	xor    r9d,r9d
   140001332:	mov    DWORD PTR [rsp+0x20],0x1
   14000133a:	xor    r8d,r8d
   14000133d:	lea    rcx,[rsp+0x78]
   140001342:	xor    edx,edx
   140001344:	call   QWORD PTR [rip+0x5f76]        # 0x1400072c0
   14000134a:	test   eax,eax
   14000134c:	jne    0x140001319
   14000134e:	call   QWORD PTR [rip+0x5d54]        # 0x1400070a8
   140001354:	mov    ecx,eax
   140001356:	lea    eax,[rsi+0x1388]
   14000135c:	cmp    ecx,eax
   14000135e:	jbe    0x140001384
   140001360:	mov    rcx,QWORD PTR [rip+0x8c39]        # 0x140009fa0
   140001367:	mov    edx,0x610
   14000136c:	mov    r8d,0x5
   140001372:	call   0x140004c70
   140001377:	cmp    eax,0x2
   14000137a:	je     0x1400013cc
   14000137c:	call   QWORD PTR [rip+0x5d26]        # 0x1400070a8
   140001382:	mov    esi,eax
   140001384:	mov    rdx,QWORD PTR [rip+0x8565]        # 0x1400098f0
   14000138b:	lea    rax,[rsp+0x58]
   140001390:	mov    QWORD PTR [rsp+0x30],rax
   140001395:	lea    r9,[rip+0x8b54]        # 0x140009ef0
   14000139c:	lea    rax,[rsp+0x44]
   1400013a1:	mov    QWORD PTR [rsp+0x28],rax
   1400013a6:	lea    r8,[rip+0x2fe3]        # 0x140004390
   1400013ad:	lea    rcx,[rip+0x8aec]        # 0x140009ea0
   1400013b4:	mov    QWORD PTR [rsp+0x20],r13
   1400013b9:	call   QWORD PTR [rip+0x5df1]        # 0x1400071b0
   1400013bf:	mov    ebx,eax
   1400013c1:	cmp    eax,0x80000052
   1400013c6:	je     0x14000132f
   1400013cc:	mov    r13d,0xffffffff
   1400013d2:	xor    ecx,ecx
   1400013d4:	call   0x140001d9c
   1400013d9:	mov    rcx,QWORD PTR [rip+0x8bc0]        # 0x140009fa0
   1400013e0:	mov    edx,0x1
   1400013e5:	call   QWORD PTR [rip+0x5f7d]        # 0x140007368
   1400013eb:	test   ebx,ebx
   1400013ed:	je     0x1400013f6
   1400013ef:	mov    edi,ebx
   1400013f1:	jmp    0x140001761
   1400013f6:	lea    rax,[rsp+0x50]
   1400013fb:	mov    r9d,0x20019
   140001401:	xor    r8d,r8d
   140001404:	mov    QWORD PTR [rsp+0x20],rax
   140001409:	lea    rdx,[rip+0x60d0]        # 0x1400074e0
   140001410:	mov    rcx,0xffffffff80000001
   140001417:	call   QWORD PTR [rip+0x5bf3]        # 0x140007010
   14000141d:	mov    rcx,QWORD PTR [rsp+0x50]
   140001422:	lea    rax,[rsp+0x48]
   140001427:	mov    QWORD PTR [rsp+0x28],rax
   14000142c:	lea    rdx,[rip+0x6115]        # 0x140007548
   140001433:	lea    rax,[rbp-0x50]
   140001437:	mov    DWORD PTR [rsp+0x48],0x200
   14000143f:	xor    r9d,r9d
   140001442:	mov    QWORD PTR [rsp+0x20],rax
   140001447:	xor    r8d,r8d
   14000144a:	mov    WORD PTR [rbp-0x50],r15w
   14000144f:	call   QWORD PTR [rip+0x5bab]        # 0x140007000
   140001455:	test   eax,eax
   140001457:	jne    0x140001466
   140001459:	lea    rcx,[rbp-0x50]
   14000145d:	call   QWORD PTR [rip+0x5fc5]        # 0x140007428
   140001463:	mov    r13d,eax
   140001466:	mov    eax,DWORD PTR [rip+0x8a5c]        # 0x140009ec8
   14000146c:	mov    rbx,r12
   14000146f:	mov    DWORD PTR [rip+0x7bdf],ebx        # 0x140009054
   140001475:	mov    r15d,0x4
   14000147b:	test   eax,eax
   14000147d:	jne    0x1400014bf
   14000147f:	lea    esi,[rax+0x40]
   140001482:	mov    edx,r15d
   140001485:	mov    ecx,esi
   140001487:	call   QWORD PTR [rip+0x5be3]        # 0x140007070
   14000148d:	mov    edx,r15d
   140001490:	mov    ecx,esi
   140001492:	mov    QWORD PTR [rip+0x8d3f],rax        # 0x14000a1d8
   140001499:	call   QWORD PTR [rip+0x5bd1]        # 0x140007070
   14000149f:	mov    edx,0x214
   1400014a4:	mov    ecx,esi
   1400014a6:	mov    QWORD PTR [rip+0x8b03],rax        # 0x140009fb0
   1400014ad:	call   QWORD PTR [rip+0x5bbd]        # 0x140007070
   1400014b3:	mov    r14,rax
   1400014b6:	mov    rax,QWORD PTR [rip+0x8af3]        # 0x140009fb0
   1400014bd:	jmp    0x140001518
   1400014bf:	imul   rcx,rax,0x214
   1400014c6:	cmp    rcx,rbx
   1400014c9:	ja     0x14000175c
   1400014cf:	mov    edx,ecx
   1400014d1:	mov    esi,0x40
   1400014d6:	mov    ecx,esi
   1400014d8:	call   QWORD PTR [rip+0x5b92]        # 0x140007070
   1400014de:	mov    r14,rax
   1400014e1:	mov    eax,DWORD PTR [rip+0x89e1]        # 0x140009ec8
   1400014e7:	shl    rax,0x2
   1400014eb:	cmp    rax,rbx
   1400014ee:	ja     0x14000175c
   1400014f4:	mov    edx,eax
   1400014f6:	mov    ecx,esi
   1400014f8:	mov    ebx,eax
   1400014fa:	call   QWORD PTR [rip+0x5b70]        # 0x140007070
   140001500:	mov    edx,ebx
   140001502:	mov    ecx,esi
   140001504:	mov    QWORD PTR [rip+0x8ccd],rax        # 0x14000a1d8
   14000150b:	call   QWORD PTR [rip+0x5b5f]        # 0x140007070
   140001511:	mov    QWORD PTR [rip+0x8a98],rax        # 0x140009fb0
   140001518:	test   r14,r14
   14000151b:	je     0x14000175c
   140001521:	cmp    QWORD PTR [rip+0x8cb0],rdi        # 0x14000a1d8
   140001528:	je     0x14000175c
   14000152e:	test   rax,rax
   140001531:	je     0x14000175c
   140001537:	xor    ebx,ebx
   140001539:	xor    esi,esi
   14000153b:	cmp    DWORD PTR [rip+0x8987],ebx        # 0x140009ec8
   140001541:	jbe    0x1400015af
   140001543:	mov    eax,ebx
   140001545:	mov    ecx,ebx
   140001547:	imul   r12,rax,0x214
   14000154e:	add    r12,r14
   140001551:	mov    rdx,r12
   140001554:	call   0x140002f68
   140001559:	test   eax,eax
   14000155b:	jne    0x1400015a0
   14000155d:	mov    ecx,DWORD PTR [r12]
   140001561:	mov    rax,QWORD PTR [rip+0x8c70]        # 0x14000a1d8
   140001568:	mov    DWORD PTR [rax+rbx*4],ecx
   14000156b:	mov    rax,QWORD PTR [rip+0x8a3e]        # 0x140009fb0
   140001572:	mov    ecx,DWORD PTR [r12+0x10]
   140001577:	mov    DWORD PTR [rax+rbx*4],ecx
   14000157a:	cmp    DWORD PTR [r12+0x10],r13d
   14000157f:	mov    eax,DWORD PTR [rip+0x7acf]        # 0x140009054
   140001585:	cmove  eax,ebx
   140001588:	mov    DWORD PTR [rip+0x7ac6],eax        # 0x140009054
   14000158e:	cmp    DWORD PTR [r12+0x4],edi
   140001593:	je     0x1400015a0
   140001595:	inc    esi
   140001597:	mov    DWORD PTR [rsp+0x40],ebx
   14000159b:	mov    r12d,ebx
   14000159e:	jmp    0x1400015a5
   1400015a0:	mov    r12d,DWORD PTR [rsp+0x40]
   1400015a5:	inc    ebx
   1400015a7:	cmp    ebx,DWORD PTR [rip+0x891b]        # 0x140009ec8
   1400015ad:	jb     0x140001543
   1400015af:	mov    ebx,0xffffffff
   1400015b4:	cmp    DWORD PTR [rip+0x7a9a],ebx        # 0x140009054
   1400015ba:	jne    0x1400015e4
   1400015bc:	cmp    esi,0x1
   1400015bf:	jne    0x1400016c5
   1400015c5:	mov    DWORD PTR [rip+0x7a88],r12d        # 0x140009054
   1400015cc:	cmp    r13d,ebx
   1400015cf:	je     0x1400015e4
   1400015d1:	mov    rcx,QWORD PTR [rip+0x89c8]        # 0x140009fa0
   1400015d8:	lea    edx,[rsi+0x4]
   1400015db:	lea    r8d,[rsi+0x2f]
   1400015df:	call   0x140004c70
   1400015e4:	mov    eax,DWORD PTR [rip+0x7a6a]        # 0x140009054
   1400015ea:	lea    rcx,[rip+0x89cf]        # 0x140009fc0
   1400015f1:	imul   rax,rax,0x214
   1400015f8:	mov    edx,0x80
   1400015fd:	add    rax,r14
   140001600:	movups xmm0,XMMWORD PTR [rax]
   140001603:	movups xmm1,XMMWORD PTR [rax+0x10]
   140001607:	movups XMMWORD PTR [rcx],xmm0
   14000160a:	movups xmm0,XMMWORD PTR [rax+0x20]
   14000160e:	movups XMMWORD PTR [rcx+0x10],xmm1
   140001612:	movups xmm1,XMMWORD PTR [rax+0x30]
   140001616:	movups XMMWORD PTR [rcx+0x20],xmm0
   14000161a:	movups xmm0,XMMWORD PTR [rax+0x40]
   14000161e:	movups XMMWORD PTR [rcx+0x30],xmm1
   140001622:	movups xmm1,XMMWORD PTR [rax+0x50]
   140001626:	movups XMMWORD PTR [rcx+0x40],xmm0
   14000162a:	movups xmm0,XMMWORD PTR [rax+0x60]
   14000162e:	movups XMMWORD PTR [rcx+0x50],xmm1
   140001632:	movups xmm1,XMMWORD PTR [rax+0x70]
   140001636:	add    rax,rdx
   140001639:	movups XMMWORD PTR [rcx+0x60],xmm0
   14000163d:	add    rcx,rdx
   140001640:	movups XMMWORD PTR [rcx-0x10],xmm1
   140001644:	sub    r15,0x1
   140001648:	jne    0x140001600
   14000164a:	movups xmm0,XMMWORD PTR [rax]
   14000164d:	mov    eax,DWORD PTR [rax+0x10]
   140001650:	lea    rdx,[rip+0x5f11]        # 0x140007568
   140001657:	xor    r9d,r9d
   14000165a:	mov    DWORD PTR [rip+0x886b],r15d        # 0x140009ecc
   140001661:	movups XMMWORD PTR [rcx],xmm0
   140001664:	mov    DWORD PTR [rcx+0x10],eax
   140001667:	xor    r8d,r8d
   14000166a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000166f:	lea    rax,[rsp+0x48]
   140001674:	mov    QWORD PTR [rsp+0x28],rax
   140001679:	lea    rax,[rbp-0x50]
   14000167d:	mov    QWORD PTR [rsp+0x20],rax
   140001682:	mov    DWORD PTR [rsp+0x48],0x200
   14000168a:	mov    WORD PTR [rbp-0x50],r15w
   14000168f:	call   QWORD PTR [rip+0x596b]        # 0x140007000
   140001695:	test   eax,eax
   140001697:	jne    0x140001761
   14000169d:	lea    rcx,[rbp-0x50]
   1400016a1:	call   QWORD PTR [rip+0x5d81]        # 0x140007428
   1400016a7:	cmp    eax,DWORD PTR [rip+0x8913]        # 0x140009fc0
   1400016ad:	mov    DWORD PTR [rip+0x8819],eax        # 0x140009ecc
   1400016b3:	jb     0x140001761
   1400016b9:	mov    DWORD PTR [rip+0x880c],r15d        # 0x140009ecc
   1400016c0:	jmp    0x140001761
   1400016c5:	mov    rax,r14
   1400016c8:	lea    rcx,[rip+0x88f1]        # 0x140009fc0
   1400016cf:	mov    edx,0x80
   1400016d4:	movups xmm0,XMMWORD PTR [rax]
   1400016d7:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400016db:	movups XMMWORD PTR [rcx],xmm0
   1400016de:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400016e2:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400016e6:	movups xmm1,XMMWORD PTR [rax+0x30]
   1400016ea:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400016ee:	movups xmm0,XMMWORD PTR [rax+0x40]
   1400016f2:	movups XMMWORD PTR [rcx+0x30],xmm1
   1400016f6:	movups xmm1,XMMWORD PTR [rax+0x50]
   1400016fa:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400016fe:	movups xmm0,XMMWORD PTR [rax+0x60]
   140001702:	movups XMMWORD PTR [rcx+0x50],xmm1
   140001706:	movups xmm1,XMMWORD PTR [rax+0x70]
   14000170a:	add    rax,rdx
   14000170d:	movups XMMWORD PTR [rcx+0x60],xmm0
   140001711:	add    rcx,rdx
   140001714:	movups XMMWORD PTR [rcx-0x10],xmm1
   140001718:	sub    r15,0x1
   14000171c:	jne    0x1400016d4
   14000171e:	movups xmm0,XMMWORD PTR [rax]
   140001721:	mov    eax,DWORD PTR [rax+0x10]
   140001724:	lea    r9,[rip+0x1b05]        # 0x140003230
   14000172b:	mov    r8,QWORD PTR [rip+0x886e]        # 0x140009fa0
   140001732:	mov    edx,0x1f4
   140001737:	movups XMMWORD PTR [rcx],xmm0
   14000173a:	mov    DWORD PTR [rcx+0x10],eax
   14000173d:	mov    rcx,QWORD PTR [rip+0x81ac]        # 0x1400098f0
   140001744:	mov    QWORD PTR [rsp+0x20],0x2
   14000174d:	call   QWORD PTR [rip+0x5ab5]        # 0x140007208
   140001753:	cmp    rax,0xffffffffffffffff
   140001757:	cmove  edi,ebx
   14000175a:	jmp    0x140001761
   14000175c:	mov    edi,0x80000044
   140001761:	mov    rcx,QWORD PTR [rsp+0x50]
   140001766:	test   rcx,rcx
   140001769:	je     0x140001771
   14000176b:	call   QWORD PTR [rip+0x58a7]        # 0x140007018
   140001771:	test   r14,r14
   140001774:	je     0x14000177f
   140001776:	mov    rcx,r14
   140001779:	call   QWORD PTR [rip+0x5909]        # 0x140007088
   14000177f:	mov    eax,edi
   140001781:	mov    rcx,QWORD PTR [rbp+0x1b0]
   140001788:	xor    rcx,rsp
   14000178b:	call   0x140005ca0
   140001790:	lea    r11,[rsp+0x2c0]
   140001798:	mov    rbx,QWORD PTR [r11+0x30]
   14000179c:	mov    rsi,QWORD PTR [r11+0x38]
   1400017a0:	mov    rdi,QWORD PTR [r11+0x40]
   1400017a4:	mov    rsp,r11
   1400017a7:	pop    r15
   1400017a9:	pop    r14
   1400017ab:	pop    r13
   1400017ad:	pop    r12
   1400017af:	pop    rbp
   1400017b0:	ret    
   1400017b1:	int3   
   1400017b2:	int3   
   1400017b3:	int3   
   1400017b4:	int3   
   1400017b5:	int3   
   1400017b6:	int3   
   1400017b7:	int3   
   1400017b8:	mov    rax,rsp
   1400017bb:	mov    QWORD PTR [rax+0x8],rbx
   1400017bf:	mov    QWORD PTR [rax+0x10],rdi
   1400017c3:	mov    QWORD PTR [rax+0x18],r14
   1400017c7:	push   rbp
   1400017c8:	lea    rbp,[rax-0x5f]
   1400017cc:	sub    rsp,0xb0
   1400017d3:	xor    r9d,r9d
   1400017d6:	xor    r8d,r8d
   1400017d9:	xor    ecx,ecx
   1400017db:	lea    r14d,[r9+0x1]
   1400017df:	mov    edx,r14d
   1400017e2:	call   QWORD PTR [rip+0x5890]        # 0x140007078
   1400017e8:	xor    ecx,ecx
   1400017ea:	call   QWORD PTR [rip+0x58c0]        # 0x1400070b0
   1400017f0:	lea    r9d,[r14+0x3f]
   1400017f4:	mov    edx,0x386
   1400017f9:	lea    r8,[rip+0x86f0]        # 0x140009ef0
   140001800:	mov    QWORD PTR [rip+0x80e9],rax        # 0x1400098f0
   140001807:	mov    rcx,rax
   14000180a:	call   QWORD PTR [rip+0x5af8]        # 0x140007308
   140001810:	lea    r8,[rip+0x5d79]        # 0x140007590
   140001817:	mov    edx,r14d
   14000181a:	xor    ecx,ecx
   14000181c:	call   QWORD PTR [rip+0x5896]        # 0x1400070b8
   140001822:	mov    rdi,rax
   140001825:	call   QWORD PTR [rip+0x5895]        # 0x1400070c0
   14000182b:	cmp    eax,0xb7
   140001830:	jne    0x14000185a
   140001832:	xor    edx,edx
   140001834:	lea    rcx,[rip+0x77fd]        # 0x140009038
   14000183b:	call   QWORD PTR [rip+0x599f]        # 0x1400071e0
   140001841:	mov    rcx,rax
   140001844:	call   QWORD PTR [rip+0x59ce]        # 0x140007218
   14000184a:	mov    rcx,rdi
   14000184d:	call   QWORD PTR [rip+0x582d]        # 0x140007080
   140001853:	xor    eax,eax
   140001855:	jmp    0x140001a3a
   14000185a:	mov    rax,QWORD PTR [rip+0x59bf]        # 0x140007220
   140001861:	mov    rdx,r14
   140001864:	mov    rcx,QWORD PTR [rip+0x8085]        # 0x1400098f0
   14000186b:	and    DWORD PTR [rbp+0x17],0x0
   14000186f:	mov    QWORD PTR [rbp+0xf],rax
   140001873:	mov    QWORD PTR [rbp+0x1f],rcx
   140001877:	mov    DWORD PTR [rbp+0x7],0x2808
   14000187e:	mov    DWORD PTR [rbp+0x1b],0x1e
   140001885:	call   QWORD PTR [rip+0x5a1d]        # 0x1400072a8
   14000188b:	mov    edx,0x7f00
   140001890:	xor    ecx,ecx
   140001892:	mov    QWORD PTR [rbp+0x27],rax
   140001896:	call   QWORD PTR [rip+0x5954]        # 0x1400071f0
   14000189c:	mov    ecx,0x6
   1400018a1:	mov    QWORD PTR [rbp+0x2f],rax
   1400018a5:	call   QWORD PTR [rip+0x57b5]        # 0x140007060
   1400018ab:	and    QWORD PTR [rbp+0x3f],0x0
   1400018b0:	lea    rcx,[rip+0x7781]        # 0x140009038
   1400018b7:	mov    QWORD PTR [rbp+0x47],rcx
   1400018bb:	lea    rcx,[rbp+0x7]
   1400018bf:	mov    QWORD PTR [rbp+0x37],rax
   1400018c3:	call   QWORD PTR [rip+0x5a6f]        # 0x140007338
   1400018c9:	mov    rcx,QWORD PTR [rip+0x8020]        # 0x1400098f0
   1400018d0:	lea    r9,[rip+0x789]        # 0x140002060
   1400018d7:	and    QWORD PTR [rsp+0x20],0x0
   1400018dd:	xor    r8d,r8d
   1400018e0:	mov    edx,0xc8
   1400018e5:	call   QWORD PTR [rip+0x5a35]        # 0x140007320
   1400018eb:	mov    QWORD PTR [rip+0x86ae],rax        # 0x140009fa0
   1400018f2:	call   0x140001a5c
   1400018f7:	mov    rcx,QWORD PTR [rip+0x86a2]        # 0x140009fa0
   1400018fe:	mov    edx,0x5
   140001903:	call   QWORD PTR [rip+0x5a07]        # 0x140007310
   140001909:	mov    rcx,QWORD PTR [rip+0x8690]        # 0x140009fa0
   140001910:	call   QWORD PTR [rip+0x5a4a]        # 0x140007360
   140001916:	mov    rcx,QWORD PTR [rip+0x8683]        # 0x140009fa0
   14000191d:	mov    edx,0xc9
   140001922:	and    QWORD PTR [rsp+0x20],0x0
   140001928:	lea    r9d,[rdx-0x79]
   14000192c:	lea    r8d,[rdx+0x78]
   140001930:	call   QWORD PTR [rip+0x59b2]        # 0x1400072e8
   140001936:	call   0x1400011d4
   14000193b:	mov    ebx,eax
   14000193d:	test   eax,eax
   14000193f:	je     0x140001961
   140001941:	mov    rcx,QWORD PTR [rip+0x8658]        # 0x140009fa0
   140001948:	mov    r8d,0x30
   14000194e:	mov    edx,eax
   140001950:	call   0x140004c70
   140001955:	call   0x140001e08
   14000195a:	mov    eax,ebx
   14000195c:	jmp    0x140001a3a
   140001961:	mov    ecx,DWORD PTR [rip+0x8539]        # 0x140009ea0
   140001967:	mov    r9d,r14d
   14000196a:	mov    r8d,r14d
   14000196d:	xor    edx,edx
   14000196f:	call   QWORD PTR [rip+0x581b]        # 0x140007190
   140001975:	test   eax,eax
   140001977:	je     0x140001996
   140001979:	and    DWORD PTR [rip+0x8854],0x0        # 0x14000a1d4
   140001980:	mov    r8d,0x30
   140001986:	mov    rcx,QWORD PTR [rip+0x8613]        # 0x140009fa0
   14000198d:	mov    edx,eax
   14000198f:	call   0x140004c70
   140001994:	jmp    0x14000199d
   140001996:	mov    DWORD PTR [rip+0x8837],r14d        # 0x14000a1d4
   14000199d:	mov    rcx,QWORD PTR [rip+0x7f4c]        # 0x1400098f0
   1400019a4:	lea    rdx,[rip+0x8545]        # 0x140009ef0
   1400019ab:	call   QWORD PTR [rip+0x58e7]        # 0x140007298
   1400019b1:	mov    rbx,rax
   1400019b4:	jmp    0x140001a13
   1400019b6:	mov    rcx,QWORD PTR [rip+0x85e3]        # 0x140009fa0
   1400019bd:	test   rcx,rcx
   1400019c0:	je     0x1400019d7
   1400019c2:	lea    rdx,[rbp-0x29]
   1400019c6:	call   QWORD PTR [rip+0x58d4]        # 0x1400072a0
   1400019cc:	test   eax,eax
   1400019ce:	jne    0x1400019fc
   1400019d0:	mov    rcx,QWORD PTR [rip+0x85c9]        # 0x140009fa0
   1400019d7:	lea    r8,[rbp-0x29]
   1400019db:	mov    rdx,rbx
   1400019de:	call   QWORD PTR [rip+0x5874]        # 0x140007258
   1400019e4:	test   eax,eax
   1400019e6:	jne    0x1400019fc
   1400019e8:	lea    rcx,[rbp-0x29]
   1400019ec:	call   QWORD PTR [rip+0x589e]        # 0x140007290
   1400019f2:	lea    rcx,[rbp-0x29]
   1400019f6:	call   QWORD PTR [rip+0x597c]        # 0x140007378
   1400019fc:	cmp    DWORD PTR [rip+0x764d],0x0        # 0x140009050
   140001a03:	je     0x140001a13
   140001a05:	cmp    DWORD PTR [rip+0x7c08],0x0        # 0x140009614
   140001a0c:	je     0x140001a13
   140001a0e:	call   0x140004b00
   140001a13:	xor    r9d,r9d
   140001a16:	lea    rcx,[rbp-0x29]
   140001a1a:	xor    r8d,r8d
   140001a1d:	xor    edx,edx
   140001a1f:	call   QWORD PTR [rip+0x5823]        # 0x140007248
   140001a25:	test   eax,eax
   140001a27:	jne    0x1400019b6
   140001a29:	call   0x140001e08
   140001a2e:	mov    rcx,rdi
   140001a31:	call   QWORD PTR [rip+0x5649]        # 0x140007080
   140001a37:	mov    eax,DWORD PTR [rbp-0x19]
   140001a3a:	lea    r11,[rsp+0xb0]
   140001a42:	mov    rbx,QWORD PTR [r11+0x10]
   140001a46:	mov    rdi,QWORD PTR [r11+0x18]
   140001a4a:	mov    r14,QWORD PTR [r11+0x20]
   140001a4e:	mov    rsp,r11
   140001a51:	pop    rbp
   140001a52:	ret    
   140001a53:	int3   
   140001a54:	int3   
   140001a55:	int3   
   140001a56:	int3   
   140001a57:	int3   
   140001a58:	int3   
   140001a59:	int3   
   140001a5a:	int3   
   140001a5b:	int3   
   140001a5c:	mov    rax,rsp
   140001a5f:	mov    QWORD PTR [rax+0x8],rbx
   140001a63:	mov    QWORD PTR [rax+0x10],rsi
   140001a67:	mov    QWORD PTR [rax+0x18],rdi
   140001a6b:	push   rbp
   140001a6c:	push   r12
   140001a6e:	push   r13
   140001a70:	push   r14
   140001a72:	push   r15
   140001a74:	lea    rbp,[rax-0x2d8]
   140001a7b:	sub    rsp,0x3b0
   140001a82:	mov    rax,QWORD PTR [rip+0x757f]        # 0x140009008
   140001a89:	xor    rax,rsp
   140001a8c:	mov    QWORD PTR [rbp+0x2a0],rax
   140001a93:	xor    r14d,r14d
   140001a96:	lea    rcx,[rsp+0x62]
   140001a9b:	xor    edx,edx
   140001a9d:	mov    WORD PTR [rsp+0x60],r14w
   140001aa3:	lea    r8d,[r14+0x4e]
   140001aa7:	call   0x140006336
   140001aac:	lea    rax,[rsp+0x50]
   140001ab1:	mov    QWORD PTR [rsp+0x50],r14
   140001ab6:	mov    r9d,0x20019
   140001abc:	mov    QWORD PTR [rsp+0x20],rax
   140001ac1:	xor    r8d,r8d
   140001ac4:	lea    rdx,[rip+0x5a15]        # 0x1400074e0
   140001acb:	mov    rcx,0xffffffff80000001
   140001ad2:	call   QWORD PTR [rip+0x5538]        # 0x140007010
   140001ad8:	lea    r15d,[r14+0x1]
   140001adc:	mov    r12d,0xa0
   140001ae2:	movzx  edi,r15w
   140001ae6:	lea    rsi,[rip+0x7eb3]        # 0x1400099a0
   140001aed:	lea    r13d,[r14+0x8]
   140001af1:	movzx  ebx,di
   140001af4:	lea    r8,[rip+0x5add]        # 0x1400075d8
   140001afb:	mov    r9d,ebx
   140001afe:	lea    rcx,[rbp+0xa0]
   140001b05:	mov    edx,0x200
   140001b0a:	call   0x140001154
   140001b0f:	mov    rcx,QWORD PTR [rsp+0x50]
   140001b14:	lea    rax,[rsp+0x40]
   140001b19:	mov    QWORD PTR [rsp+0x28],rax
   140001b1e:	lea    rdx,[rbp+0xa0]
   140001b25:	lea    rax,[rbp-0x50]
   140001b29:	mov    WORD PTR [rbp-0x50],r14w
   140001b2e:	xor    r9d,r9d
   140001b31:	mov    QWORD PTR [rsp+0x20],rax
   140001b36:	xor    r8d,r8d
   140001b39:	mov    DWORD PTR [rsp+0x40],r12d
   140001b3e:	call   QWORD PTR [rip+0x54bc]        # 0x140007000
   140001b44:	cmp    WORD PTR [rbp-0x50],0x20
   140001b49:	lea    r8,[rbp-0x50]
   140001b4d:	jne    0x140001b5a
   140001b4f:	add    r8,0x2
   140001b53:	cmp    WORD PTR [r8],0x20
   140001b58:	je     0x140001b4f
   140001b5a:	cmp    r14w,WORD PTR [r8]
   140001b5e:	je     0x140001c12
   140001b64:	mov    rdx,r12
   140001b67:	mov    rcx,rsi
   140001b6a:	call   0x140001008
   140001b6f:	mov    r9d,ebx
   140001b72:	lea    r8,[rip+0x5a77]        # 0x1400075f0
   140001b79:	mov    edx,0x200
   140001b7e:	lea    rcx,[rbp+0xa0]
   140001b85:	call   0x140001154
   140001b8a:	mov    rcx,QWORD PTR [rsp+0x50]
   140001b8f:	lea    rax,[rsp+0x40]
   140001b94:	mov    QWORD PTR [rsp+0x28],rax
   140001b99:	lea    rdx,[rbp+0xa0]
   140001ba0:	lea    rax,[rsp+0x60]
   140001ba5:	mov    DWORD PTR [rsp+0x40],0x50
   140001bad:	xor    r9d,r9d
   140001bb0:	mov    QWORD PTR [rsp+0x20],rax
   140001bb5:	xor    r8d,r8d
   140001bb8:	call   QWORD PTR [rip+0x5442]        # 0x140007000
   140001bbe:	cmp    r14w,WORD PTR [rsp+0x60]
   140001bc4:	jne    0x140001bd8
   140001bc6:	mov    r8,rsi
   140001bc9:	lea    rcx,[rsp+0x60]
   140001bce:	mov    edx,0x50
   140001bd3:	call   0x140001008
   140001bd8:	mov    rcx,QWORD PTR [rip+0x83c1]        # 0x140009fa0
   140001bdf:	lea    r8,[rsp+0x60]
   140001be4:	add    ebx,0xd5
   140001bea:	mov    edx,ebx
   140001bec:	call   0x140004f2c
   140001bf1:	lea    rdx,[rbp+0x50]
   140001bf5:	lea    rcx,[rsp+0x60]
   140001bfa:	call   0x140005894
   140001bff:	mov    rcx,QWORD PTR [rip+0x839a]        # 0x140009fa0
   140001c06:	lea    r8,[rbp+0x50]
   140001c0a:	mov    edx,ebx
   140001c0c:	call   QWORD PTR [rip+0x573e]        # 0x140007350
   140001c12:	add    di,r15w
   140001c16:	add    rsi,r12
   140001c19:	cmp    di,r13w
   140001c1d:	jbe    0x140001af1
   140001c23:	movzx  ebx,r15w
   140001c27:	movzx  r9d,bx
   140001c2b:	lea    r8,[rip+0x59ce]        # 0x140007600
   140001c32:	mov    edx,0x200
   140001c37:	lea    rcx,[rbp+0xa0]
   140001c3e:	call   0x140001154
   140001c43:	mov    rcx,QWORD PTR [rsp+0x50]
   140001c48:	lea    rax,[rsp+0x40]
   140001c4d:	mov    QWORD PTR [rsp+0x28],rax
   140001c52:	lea    rdx,[rbp+0xa0]
   140001c59:	lea    rax,[rbp-0x50]
   140001c5d:	mov    DWORD PTR [rsp+0x40],r12d
   140001c62:	xor    r9d,r9d
   140001c65:	mov    QWORD PTR [rsp+0x20],rax
   140001c6a:	xor    r8d,r8d
   140001c6d:	mov    WORD PTR [rbp-0x50],r14w
   140001c72:	call   QWORD PTR [rip+0x5388]        # 0x140007000
   140001c78:	cmp    r14w,WORD PTR [rbp-0x50]
   140001c7d:	je     0x140001ca1
   140001c7f:	mov    rcx,QWORD PTR [rip+0x831a]        # 0x140009fa0
   140001c86:	lea    rax,[rbp-0x50]
   140001c8a:	mov    edx,0xc9
   140001c8f:	mov    QWORD PTR [rsp+0x20],rax
   140001c94:	xor    r9d,r9d
   140001c97:	lea    r8d,[rdx+0x7a]
   140001c9b:	call   QWORD PTR [rip+0x5647]        # 0x1400072e8
   140001ca1:	add    bx,r15w
   140001ca5:	cmp    bx,0x14
   140001ca9:	jbe    0x140001c27
   140001caf:	mov    rcx,QWORD PTR [rsp+0x50]
   140001cb4:	lea    rax,[rsp+0x40]
   140001cb9:	mov    QWORD PTR [rsp+0x28],rax
   140001cbe:	lea    rdx,[rip+0x595b]        # 0x140007620
   140001cc5:	lea    rax,[rsp+0x48]
   140001cca:	mov    DWORD PTR [rsp+0x40],r13d
   140001ccf:	mov    ebx,0x64
   140001cd4:	mov    QWORD PTR [rsp+0x20],rax
   140001cd9:	xor    r9d,r9d
   140001cdc:	mov    DWORD PTR [rsp+0x48],ebx
   140001ce0:	xor    r8d,r8d
   140001ce3:	mov    DWORD PTR [rsp+0x4c],ebx
   140001ce7:	call   QWORD PTR [rip+0x5313]        # 0x140007000
   140001ced:	cmp    DWORD PTR [rsp+0x48],r14d
   140001cf2:	jl     0x140001d2a
   140001cf4:	xor    ecx,ecx
   140001cf6:	call   QWORD PTR [rip+0x5644]        # 0x140007340
   140001cfc:	mov    edx,DWORD PTR [rsp+0x48]
   140001d00:	add    edx,0x32
   140001d03:	cmp    edx,eax
   140001d05:	jge    0x140001d2a
   140001d07:	cmp    DWORD PTR [rsp+0x4c],r14d
   140001d0c:	jl     0x140001d2a
   140001d0e:	mov    ecx,r15d
   140001d11:	call   QWORD PTR [rip+0x5629]        # 0x140007340
   140001d17:	mov    r9d,DWORD PTR [rsp+0x4c]
   140001d1c:	lea    ecx,[r9+0x32]
   140001d20:	cmp    ecx,eax
   140001d22:	jge    0x140001d2a
   140001d24:	mov    ebx,DWORD PTR [rsp+0x48]
   140001d28:	jmp    0x140001d35
   140001d2a:	mov    DWORD PTR [rsp+0x48],ebx
   140001d2e:	mov    r9d,ebx
   140001d31:	mov    DWORD PTR [rsp+0x4c],ebx
   140001d35:	mov    rcx,QWORD PTR [rip+0x8264]        # 0x140009fa0
   140001d3c:	mov    r8d,ebx
   140001d3f:	mov    DWORD PTR [rsp+0x30],0x1d
   140001d47:	xor    edx,edx
   140001d49:	mov    DWORD PTR [rsp+0x28],r14d
   140001d4e:	mov    DWORD PTR [rsp+0x20],r14d
   140001d53:	call   QWORD PTR [rip+0x559f]        # 0x1400072f8
   140001d59:	mov    rcx,QWORD PTR [rsp+0x50]
   140001d5e:	call   QWORD PTR [rip+0x52b4]        # 0x140007018
   140001d64:	mov    rcx,QWORD PTR [rbp+0x2a0]
   140001d6b:	xor    rcx,rsp
   140001d6e:	call   0x140005ca0
   140001d73:	lea    r11,[rsp+0x3b0]
   140001d7b:	mov    rbx,QWORD PTR [r11+0x30]
   140001d7f:	mov    rsi,QWORD PTR [r11+0x38]
   140001d83:	mov    rdi,QWORD PTR [r11+0x40]
   140001d87:	mov    rsp,r11
   140001d8a:	pop    r15
   140001d8c:	pop    r14
   140001d8e:	pop    r13
   140001d90:	pop    r12
   140001d92:	pop    rbp
   140001d93:	ret    
   140001d94:	int3   
   140001d95:	int3   
   140001d96:	int3   
   140001d97:	int3   
   140001d98:	int3   
   140001d99:	int3   
   140001d9a:	int3   
   140001d9b:	int3   
   140001d9c:	mov    QWORD PTR [rsp+0x8],rbx
   140001da1:	push   rdi
   140001da2:	sub    rsp,0x20
   140001da6:	xor    edi,edi
   140001da8:	mov    edx,0x1
   140001dad:	test   ecx,ecx
   140001daf:	mov    rcx,QWORD PTR [rip+0x81ea]        # 0x140009fa0
   140001db6:	sete   dil
   140001dba:	call   QWORD PTR [rip+0x5518]        # 0x1400072d8
   140001dc0:	mov    rcx,rax
   140001dc3:	mov    edx,edi
   140001dc5:	call   QWORD PTR [rip+0x559d]        # 0x140007368
   140001dcb:	mov    ebx,0xd6
   140001dd0:	mov    rcx,QWORD PTR [rip+0x81c9]        # 0x140009fa0
   140001dd7:	mov    edx,ebx
   140001dd9:	call   QWORD PTR [rip+0x54f9]        # 0x1400072d8
   140001ddf:	mov    rcx,rax
   140001de2:	mov    edx,edi
   140001de4:	call   QWORD PTR [rip+0x557e]        # 0x140007368
   140001dea:	inc    ebx
   140001dec:	cmp    ebx,0xdd
   140001df2:	jle    0x140001dd0
   140001df4:	mov    rbx,QWORD PTR [rsp+0x30]
   140001df9:	add    rsp,0x20
   140001dfd:	pop    rdi
   140001dfe:	ret    
   140001dff:	int3   
   140001e00:	int3   
   140001e01:	int3   
   140001e02:	int3   
   140001e03:	int3   
   140001e04:	int3   
   140001e05:	int3   
   140001e06:	int3   
   140001e07:	int3   
   140001e08:	mov    rax,rsp
   140001e0b:	mov    QWORD PTR [rax+0x8],rbx
   140001e0f:	mov    QWORD PTR [rax+0x10],rsi
   140001e13:	mov    QWORD PTR [rax+0x18],rdi
   140001e17:	mov    QWORD PTR [rax+0x20],r14
   140001e1b:	push   rbp
   140001e1c:	lea    rbp,[rax-0x228]
   140001e23:	sub    rsp,0x320
   140001e2a:	mov    rax,QWORD PTR [rip+0x71d7]        # 0x140009008
   140001e31:	xor    rax,rsp
   140001e34:	mov    QWORD PTR [rbp+0x210],rax
   140001e3b:	xor    r14d,r14d
   140001e3e:	lea    rcx,[rsp+0x72]
   140001e43:	xor    edx,edx
   140001e45:	mov    WORD PTR [rsp+0x70],r14w
   140001e4b:	mov    r8d,0x9e
   140001e51:	call   0x140006336
   140001e56:	mov    QWORD PTR [rsp+0x40],r14
   140001e5b:	lea    rax,[rsp+0x50]
   140001e60:	mov    QWORD PTR [rsp+0x38],rax
   140001e65:	lea    rdx,[rip+0x5674]        # 0x1400074e0
   140001e6c:	mov    QWORD PTR [rsp+0x30],r14
   140001e71:	xor    r9d,r9d
   140001e74:	mov    DWORD PTR [rsp+0x28],0x20006
   140001e7c:	xor    r8d,r8d
   140001e7f:	mov    rcx,0xffffffff80000001
   140001e86:	mov    DWORD PTR [rsp+0x20],r14d
   140001e8b:	mov    QWORD PTR [rsp+0x50],r14
   140001e90:	call   QWORD PTR [rip+0x5192]        # 0x140007028
   140001e96:	call   0x14000200c
   140001e9b:	mov    rcx,QWORD PTR [rip+0x80fe]        # 0x140009fa0
   140001ea2:	call   QWORD PTR [rip+0x5390]        # 0x140007238
   140001ea8:	test   eax,eax
   140001eaa:	jne    0x140001ee9
   140001eac:	mov    rcx,QWORD PTR [rip+0x80ed]        # 0x140009fa0
   140001eb3:	lea    rdx,[rsp+0x58]
   140001eb8:	call   QWORD PTR [rip+0x5392]        # 0x140007250
   140001ebe:	mov    rcx,QWORD PTR [rsp+0x50]
   140001ec3:	lea    rax,[rsp+0x58]
   140001ec8:	mov    DWORD PTR [rsp+0x28],0x8
   140001ed0:	lea    r9d,[r14+0x3]
   140001ed4:	xor    r8d,r8d
   140001ed7:	mov    QWORD PTR [rsp+0x20],rax
   140001edc:	lea    rdx,[rip+0x573d]        # 0x140007620
   140001ee3:	call   QWORD PTR [rip+0x5137]        # 0x140007020
   140001ee9:	mov    rcx,QWORD PTR [rip+0x80b0]        # 0x140009fa0
   140001ef0:	mov    edx,0xc9
   140001ef5:	xor    r9d,r9d
   140001ef8:	mov    QWORD PTR [rsp+0x20],r14
   140001efd:	lea    r8d,[rdx+0x7d]
   140001f01:	call   QWORD PTR [rip+0x53e1]        # 0x1400072e8
   140001f07:	movzx  esi,ax
   140001f0a:	mov    ebx,0x1
   140001f0f:	mov    rdi,r14
   140001f12:	cmp    ebx,esi
   140001f14:	ja     0x140001f3b
   140001f16:	mov    rcx,QWORD PTR [rip+0x8083]        # 0x140009fa0
   140001f1d:	lea    rax,[rsp+0x70]
   140001f22:	mov    edx,0xc9
   140001f27:	mov    QWORD PTR [rsp+0x20],rax
   140001f2c:	mov    r9,rdi
   140001f2f:	lea    r8d,[rdx+0x7f]
   140001f33:	call   QWORD PTR [rip+0x53af]        # 0x1400072e8
   140001f39:	jmp    0x140001f41
   140001f3b:	mov    WORD PTR [rsp+0x70],r14w
   140001f41:	mov    r9d,ebx
   140001f44:	lea    r8,[rip+0x56b5]        # 0x140007600
   140001f4b:	mov    edx,0x200
   140001f50:	lea    rcx,[rbp+0x10]
   140001f54:	call   0x140001154
   140001f59:	lea    rcx,[rsp+0x70]
   140001f5e:	call   QWORD PTR [rip+0x512c]        # 0x140007090
   140001f64:	mov    rcx,QWORD PTR [rsp+0x50]
   140001f69:	lea    rdx,[rbp+0x10]
   140001f6d:	mov    r9d,0x1
   140001f73:	xor    r8d,r8d
   140001f76:	lea    eax,[rax*2+0x2]
   140001f7d:	mov    DWORD PTR [rsp+0x28],eax
   140001f81:	lea    rax,[rsp+0x70]
   140001f86:	mov    QWORD PTR [rsp+0x20],rax
   140001f8b:	call   QWORD PTR [rip+0x508f]        # 0x140007020
   140001f91:	inc    ebx
   140001f93:	inc    rdi
   140001f96:	cmp    ebx,0x14
   140001f99:	jbe    0x140001f12
   140001f9f:	mov    rcx,QWORD PTR [rsp+0x50]
   140001fa4:	call   QWORD PTR [rip+0x506e]        # 0x140007018
   140001faa:	mov    rcx,QWORD PTR [rip+0x7fef]        # 0x140009fa0
   140001fb1:	lea    rdx,[rip+0x7068]        # 0x140009020
   140001fb8:	xor    r9d,r9d
   140001fbb:	lea    r8d,[r9+0x2]
   140001fbf:	call   QWORD PTR [rip+0x53ab]        # 0x140007370
   140001fc5:	mov    rcx,QWORD PTR [rip+0x7fd4]        # 0x140009fa0
   140001fcc:	call   QWORD PTR [rip+0x5296]        # 0x140007268
   140001fd2:	mov    QWORD PTR [rip+0x7fc7],r14        # 0x140009fa0
   140001fd9:	mov    rcx,QWORD PTR [rbp+0x210]
   140001fe0:	xor    rcx,rsp
   140001fe3:	call   0x140005ca0
   140001fe8:	lea    r11,[rsp+0x320]
   140001ff0:	mov    rbx,QWORD PTR [r11+0x10]
   140001ff4:	mov    rsi,QWORD PTR [r11+0x18]
   140001ff8:	mov    rdi,QWORD PTR [r11+0x20]
   140001ffc:	mov    r14,QWORD PTR [r11+0x28]
   140002000:	mov    rsp,r11
   140002003:	pop    rbp
   140002004:	ret    
   140002005:	int3   
   140002006:	int3   
   140002007:	int3   
   140002008:	int3   
   140002009:	int3   
   14000200a:	int3   
   14000200b:	int3   
   14000200c:	sub    rsp,0x28
   140002010:	mov    ecx,DWORD PTR [rip+0x7e8a]        # 0x140009ea0
   140002016:	xor    r9d,r9d
   140002019:	xor    edx,edx
   14000201b:	lea    r8d,[r9+0x1]
   14000201f:	call   QWORD PTR [rip+0x516b]        # 0x140007190
   140002025:	mov    ecx,DWORD PTR [rip+0x7fa1]        # 0x140009fcc
   14000202b:	test   ecx,ecx
   14000202d:	je     0x140002043
   14000202f:	call   QWORD PTR [rip+0x519b]        # 0x1400071d0
   140002035:	and    DWORD PTR [rip+0x7014],0x0        # 0x140009050
   14000203c:	and    DWORD PTR [rip+0x7f89],0x0        # 0x140009fcc
   140002043:	mov    ecx,DWORD PTR [rip+0x7e57]        # 0x140009ea0
   140002049:	add    rsp,0x28
   14000204d:	rex.W jmp QWORD PTR [rip+0x5114]        # 0x140007168
   140002054:	int3   
   140002055:	int3   
   140002056:	int3   
   140002057:	int3   
   140002058:	int3   
   140002059:	int3   
   14000205a:	int3   
   14000205b:	int3   
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	mov    QWORD PTR [rsp+0x8],rbx
   140002065:	mov    QWORD PTR [rsp+0x10],rsi
   14000206a:	push   rbp
   14000206b:	push   rdi
   14000206c:	push   r12
   14000206e:	push   r14
   140002070:	push   r15
   140002072:	lea    rbp,[rsp-0x2f0]
   14000207a:	sub    rsp,0x3f0
   140002081:	mov    rax,QWORD PTR [rip+0x6f80]        # 0x140009008
   140002088:	xor    rax,rsp
   14000208b:	mov    QWORD PTR [rbp+0x2e0],rax
   140002092:	mov    ecx,0x111
   140002097:	mov    rax,r9
   14000209a:	mov    r15,r8
   14000209d:	cmp    edx,ecx
   14000209f:	ja     0x140002935
   1400020a5:	je     0x14000218f
   1400020ab:	cmp    edx,0xf
   1400020ae:	je     0x14000211c
   1400020b0:	cmp    edx,0x53
   1400020b3:	je     0x1400020f4
   1400020b5:	cmp    edx,0x7b
   1400020b8:	je     0x1400020e9
   1400020ba:	cmp    edx,0x110
   1400020c0:	jne    0x140002a53
   1400020c6:	mov    rcx,QWORD PTR [rip+0x7823]        # 0x1400098f0
   1400020cd:	mov    edi,0x1
   1400020d2:	mov    edx,edi
   1400020d4:	call   QWORD PTR [rip+0x51ce]        # 0x1400072a8
   1400020da:	mov    QWORD PTR [rip+0x7dc7],rax        # 0x140009ea8
   1400020e1:	mov    rax,rdi
   1400020e4:	jmp    0x140002a55
   1400020e9:	mov    r8d,0xa
   1400020ef:	mov    rcx,r15
   1400020f2:	jmp    0x1400020fe
   1400020f4:	mov    rcx,QWORD PTR [rax+0x10]
   1400020f8:	mov    r8d,0xc
   1400020fe:	lea    r9,[rip+0x563b]        # 0x140007740
   140002105:	lea    rdx,[rip+0x6f14]        # 0x140009020
   14000210c:	call   QWORD PTR [rip+0x525e]        # 0x140007370
   140002112:	mov    eax,0x1
   140002117:	jmp    0x140002a55
   14000211c:	mov    rcx,QWORD PTR [rip+0x7e7d]        # 0x140009fa0
   140002123:	lea    rdx,[rsp+0x40]
   140002128:	call   QWORD PTR [rip+0x515a]        # 0x140007288
   14000212e:	mov    rcx,QWORD PTR [rip+0x7e6b]        # 0x140009fa0
   140002135:	call   QWORD PTR [rip+0x50fd]        # 0x140007238
   14000213b:	test   eax,eax
   14000213d:	je     0x14000215d
   14000213f:	mov    r9,QWORD PTR [rip+0x7d62]        # 0x140009ea8
   140002146:	test   r9,r9
   140002149:	je     0x14000217b
   14000214b:	mov    rcx,QWORD PTR [rsp+0x40]
   140002150:	xor    r8d,r8d
   140002153:	xor    edx,edx
   140002155:	call   QWORD PTR [rip+0x508d]        # 0x1400071e8
   14000215b:	jmp    0x14000217b
   14000215d:	mov    ecx,0xf
   140002162:	call   QWORD PTR [rip+0x51b0]        # 0x140007318
   140002168:	mov    rcx,QWORD PTR [rsp+0x40]
   14000216d:	lea    rdx,[rsp+0x4c]
   140002172:	mov    r8,rax
   140002175:	call   QWORD PTR [rip+0x50b5]        # 0x140007230
   14000217b:	mov    rcx,QWORD PTR [rip+0x7e1e]        # 0x140009fa0
   140002182:	lea    rdx,[rsp+0x40]
   140002187:	call   QWORD PTR [rip+0x50e3]        # 0x140007270
   14000218d:	jmp    0x140002112
   14000218f:	xor    r14d,r14d
   140002192:	lea    rcx,[rsp+0x42]
   140002197:	xor    edx,edx
   140002199:	mov    WORD PTR [rsp+0x40],r14w
   14000219f:	lea    r8d,[r14+0x4e]
   1400021a3:	call   0x140006336
   1400021a8:	mov    r12d,0x9e
   1400021ae:	mov    WORD PTR [rbp+0x40],r14w
   1400021b3:	mov    r8d,r12d
   1400021b6:	lea    rcx,[rbp+0x42]
   1400021ba:	xor    edx,edx
   1400021bc:	call   0x140006336
   1400021c1:	movzx  ecx,r15w
   1400021c5:	mov    edx,0x3ec
   1400021ca:	cmp    ecx,edx
   1400021cc:	jg     0x14000276e
   1400021d2:	je     0x140002766
   1400021d8:	lea    eax,[rdx-0x4]
   1400021db:	cmp    ecx,eax
   1400021dd:	jg     0x14000271b
   1400021e3:	je     0x14000270e
   1400021e9:	lea    edi,[r14+0x1]
   1400021ed:	lea    esi,[r12+0x2b]
   1400021f2:	cmp    ecx,edi
   1400021f4:	je     0x14000256a
   1400021fa:	cmp    ecx,esi
   1400021fc:	je     0x1400024d7
   140002202:	jle    0x140002a53
   140002208:	cmp    ecx,0xd5
   14000220e:	jle    0x1400023d9
   140002214:	cmp    ecx,0xdd
   14000221a:	jg     0x140002a53
   140002220:	lea    ebx,[rcx-0xd5]
   140002226:	mov    WORD PTR [rbp-0x70],r14w
   14000222b:	lea    rcx,[rbp-0x6e]
   14000222f:	mov    r8d,r12d
   140002232:	xor    edx,edx
   140002234:	call   0x140006336
   140002239:	lea    rax,[rsp+0x38]
   14000223e:	mov    QWORD PTR [rsp+0x38],r14
   140002243:	mov    r9d,0x20019
   140002249:	mov    QWORD PTR [rsp+0x20],rax
   14000224e:	xor    r8d,r8d
   140002251:	lea    rdx,[rip+0x5288]        # 0x1400074e0
   140002258:	mov    rcx,0xffffffff80000001
   14000225f:	call   QWORD PTR [rip+0x4dab]        # 0x140007010
   140002265:	mov    r12d,0x200
   14000226b:	lea    r8,[rip+0x537e]        # 0x1400075f0
   140002272:	mov    edx,r12d
   140002275:	lea    rcx,[rbp+0xe0]
   14000227c:	mov    r9d,ebx
   14000227f:	call   0x140001154
   140002284:	mov    rcx,QWORD PTR [rsp+0x38]
   140002289:	lea    rax,[rsp+0x30]
   14000228e:	mov    QWORD PTR [rsp+0x28],rax
   140002293:	lea    rdx,[rbp+0xe0]
   14000229a:	lea    rax,[rsp+0x40]
   14000229f:	mov    DWORD PTR [rsp+0x30],0x50
   1400022a7:	xor    r9d,r9d
   1400022aa:	mov    QWORD PTR [rsp+0x20],rax
   1400022af:	xor    r8d,r8d
   1400022b2:	call   QWORD PTR [rip+0x4d48]        # 0x140007000
   1400022b8:	lea    r9,[rip+0x5391]        # 0x140007650
   1400022bf:	mov    DWORD PTR [rsp+0x20],ebx
   1400022c3:	lea    r8,[rip+0x5396]        # 0x140007660
   1400022ca:	mov    edx,r12d
   1400022cd:	lea    rcx,[rbp+0xe0]
   1400022d4:	call   0x140001154
   1400022d9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400022de:	lea    rax,[rsp+0x30]
   1400022e3:	mov    QWORD PTR [rsp+0x28],rax
   1400022e8:	lea    rdx,[rbp+0xe0]
   1400022ef:	lea    rax,[rbp-0x70]
   1400022f3:	mov    DWORD PTR [rsp+0x30],0xa0
   1400022fb:	xor    r9d,r9d
   1400022fe:	mov    QWORD PTR [rsp+0x20],rax
   140002303:	xor    r8d,r8d
   140002306:	call   QWORD PTR [rip+0x4cf4]        # 0x140007000
   14000230c:	mov    rcx,QWORD PTR [rsp+0x38]
   140002311:	call   QWORD PTR [rip+0x4d01]        # 0x140007018
   140002317:	cmp    WORD PTR [rbp-0x70],0x20
   14000231c:	lea    r8,[rbp-0x70]
   140002320:	jne    0x14000232d
   140002322:	add    r8,0x2
   140002326:	cmp    WORD PTR [r8],0x20
   14000232b:	je     0x140002322
   14000232d:	lea    rcx,[rbx+rbx*4]
   140002331:	shl    rcx,0x5
   140002335:	lea    rdx,[rip+0xffffffffffffdcc4]        # 0x140000000
   14000233c:	lea    rbx,[rdx+0x9900]
   140002343:	mov    edx,0xa0
   140002348:	add    rbx,rcx
   14000234b:	mov    rcx,rbx
   14000234e:	call   0x140001008
   140002353:	cmp    WORD PTR [rbx],r14w
   140002357:	jne    0x140002370
   140002359:	movzx  eax,r15w
   14000235d:	lea    r9,[rip+0x1afc]        # 0x140003e60
   140002364:	mov    QWORD PTR [rsp+0x20],rax
   140002369:	mov    edx,0x190
   14000236e:	jmp    0x14000238e
   140002370:	cmp    DWORD PTR [rip+0x6cdd],0xffffffff        # 0x140009054
   140002377:	jne    0x1400023a7
   140002379:	mov    QWORD PTR [rsp+0x20],0x2
   140002382:	lea    r9,[rip+0xea7]        # 0x140003230
   140002389:	mov    edx,0x1f4
   14000238e:	mov    r8,QWORD PTR [rip+0x7c0b]        # 0x140009fa0
   140002395:	mov    rcx,QWORD PTR [rip+0x7554]        # 0x1400098f0
   14000239c:	call   QWORD PTR [rip+0x4e66]        # 0x140007208
   1400023a2:	jmp    0x140002a53
   1400023a7:	mov    rcx,QWORD PTR [rip+0x7bf2]        # 0x140009fa0
   1400023ae:	mov    edx,esi
   1400023b0:	call   QWORD PTR [rip+0x4f22]        # 0x1400072d8
   1400023b6:	cmp    WORD PTR [rbx],r14w
   1400023ba:	je     0x1400023c7
   1400023bc:	mov    rdx,rax
   1400023bf:	mov    rcx,rbx
   1400023c2:	call   0x140002a88
   1400023c7:	lea    rdx,[rsp+0x40]
   1400023cc:	mov    rcx,rbx
   1400023cf:	call   0x140002b54
   1400023d4:	jmp    0x140002a53
   1400023d9:	mov    rcx,QWORD PTR [rip+0x7bc0]        # 0x140009fa0
   1400023e0:	lea    rax,[rbp-0x70]
   1400023e4:	mov    r9d,0x51
   1400023ea:	mov    QWORD PTR [rsp+0x20],rax
   1400023ef:	mov    edx,esi
   1400023f1:	lea    r8d,[r9-0x44]
   1400023f5:	call   QWORD PTR [rip+0x4eed]        # 0x1400072e8
   1400023fb:	cmp    eax,0x50
   1400023fe:	jae    0x1400024a0
   140002404:	mov    ecx,DWORD PTR [rip+0x7b9e]        # 0x140009fa8
   14000240a:	cmp    ecx,eax
   14000240c:	mov    edx,DWORD PTR [rip+0x7b86]        # 0x140009f98
   140002412:	cmova  ecx,r14d
   140002416:	mov    DWORD PTR [rip+0x7b8c],ecx        # 0x140009fa8
   14000241c:	cmp    edx,eax
   14000241e:	ja     0x140002424
   140002420:	cmp    edx,ecx
   140002422:	jae    0x14000242c
   140002424:	mov    edx,eax
   140002426:	mov    DWORD PTR [rip+0x7b6c],eax        # 0x140009f98
   14000242c:	sub    eax,edx
   14000242e:	lea    r8d,[rdi+rax*1]
   140002432:	mov    eax,edx
   140002434:	lea    rdx,[rbp-0x70]
   140002438:	add    r8,r8
   14000243b:	lea    rdx,[rdx+rax*2]
   14000243f:	mov    eax,ecx
   140002441:	lea    rcx,[rbp-0x6e]
   140002445:	lea    rcx,[rcx+rax*2]
   140002449:	call   QWORD PTR [rip+0x4fe1]        # 0x140007430
   14000244f:	mov    ecx,DWORD PTR [rip+0x7b53]        # 0x140009fa8
   140002455:	lea    rdx,[rip+0xffffffffffffdba4]        # 0x140000000
   14000245c:	movzx  eax,r15w
   140002460:	xor    r9d,r9d
   140002463:	movzx  eax,WORD PTR [rdx+rax*2+0x758c]
   14000246b:	lea    r8d,[r9+0xc]
   14000246f:	mov    WORD PTR [rbp+rcx*2-0x70],ax
   140002474:	mov    edx,esi
   140002476:	mov    rcx,QWORD PTR [rip+0x7b23]        # 0x140009fa0
   14000247d:	lea    rax,[rbp-0x70]
   140002481:	mov    QWORD PTR [rsp+0x20],rax
   140002486:	call   QWORD PTR [rip+0x4e5c]        # 0x1400072e8
   14000248c:	mov    eax,DWORD PTR [rip+0x7b16]        # 0x140009fa8
   140002492:	add    eax,edi
   140002494:	mov    DWORD PTR [rip+0x7b0e],eax        # 0x140009fa8
   14000249a:	mov    DWORD PTR [rip+0x7af8],eax        # 0x140009f98
   1400024a0:	mov    rcx,QWORD PTR [rip+0x7af9]        # 0x140009fa0
   1400024a7:	mov    edx,edi
   1400024a9:	call   QWORD PTR [rip+0x4e29]        # 0x1400072d8
   1400024af:	mov    rcx,rax
   1400024b2:	call   QWORD PTR [rip+0x4dc8]        # 0x140007280
   1400024b8:	mov    rcx,QWORD PTR [rip+0x7ae1]        # 0x140009fa0
   1400024bf:	mov    edx,edi
   1400024c1:	call   QWORD PTR [rip+0x4e11]        # 0x1400072d8
   1400024c7:	mov    edx,edi
   1400024c9:	mov    rcx,rax
   1400024cc:	call   QWORD PTR [rip+0x4e96]        # 0x140007368
   1400024d2:	jmp    0x1400020e1
   1400024d7:	shr    r15,0x10
   1400024db:	cmp    r15w,0x9
   1400024e0:	jne    0x1400024fc
   1400024e2:	mov    rcx,QWORD PTR [rip+0x7ab7]        # 0x140009fa0
   1400024e9:	mov    edx,edi
   1400024eb:	call   QWORD PTR [rip+0x4de7]        # 0x1400072d8
   1400024f1:	mov    rcx,rax
   1400024f4:	mov    edx,edi
   1400024f6:	call   QWORD PTR [rip+0x4e6c]        # 0x140007368
   1400024fc:	lea    eax,[r15-0x9]
   140002500:	cmp    ax,di
   140002503:	jbe    0x14000253d
   140002505:	cmp    r15w,0x5
   14000250a:	jne    0x140002a53
   140002510:	mov    rcx,QWORD PTR [rip+0x7a89]        # 0x140009fa0
   140002517:	mov    edx,esi
   140002519:	call   QWORD PTR [rip+0x4db9]        # 0x1400072d8
   14000251f:	mov    rcx,rax
   140002522:	call   QWORD PTR [rip+0x4d38]        # 0x140007260
   140002528:	mov    rcx,QWORD PTR [rip+0x7a71]        # 0x140009fa0
   14000252f:	mov    edx,edi
   140002531:	mov    ebx,eax
   140002533:	call   QWORD PTR [rip+0x4d9f]        # 0x1400072d8
   140002539:	mov    edx,ebx
   14000253b:	jmp    0x1400024c9
   14000253d:	mov    rcx,QWORD PTR [rip+0x7a5c]        # 0x140009fa0
   140002544:	lea    rax,[rip+0x7a4d]        # 0x140009f98
   14000254b:	lea    r9,[rip+0x7a56]        # 0x140009fa8
   140002552:	mov    QWORD PTR [rsp+0x20],rax
   140002557:	mov    r8d,0x140
   14000255d:	mov    edx,esi
   14000255f:	call   QWORD PTR [rip+0x4d83]        # 0x1400072e8
   140002565:	jmp    0x140002a53
   14000256a:	mov    rcx,QWORD PTR [rip+0x7a2f]        # 0x140009fa0
   140002571:	mov    edx,esi
   140002573:	mov    QWORD PTR [rsp+0x38],r14
   140002578:	call   QWORD PTR [rip+0x4d5a]        # 0x1400072d8
   14000257e:	xor    r9d,r9d
   140002581:	xor    r8d,r8d
   140002584:	mov    rcx,rax
   140002587:	lea    edx,[r9+0xe]
   14000258b:	call   QWORD PTR [rip+0x4dc7]        # 0x140007358
   140002591:	test   rax,rax
   140002594:	jle    0x1400020e1
   14000259a:	mov    rcx,QWORD PTR [rip+0x79ff]        # 0x140009fa0
   1400025a1:	lea    r8,[rbp+0x40]
   1400025a5:	mov    r9d,0x50
   1400025ab:	mov    edx,esi
   1400025ad:	call   QWORD PTR [rip+0x4d95]        # 0x140007348
   1400025b3:	lea    rax,[rsp+0x38]
   1400025b8:	mov    r9d,0x20019
   1400025be:	xor    r8d,r8d
   1400025c1:	mov    QWORD PTR [rsp+0x20],rax
   1400025c6:	lea    rdx,[rip+0x4f13]        # 0x1400074e0
   1400025cd:	mov    rcx,0xffffffff80000001
   1400025d4:	call   QWORD PTR [rip+0x4a36]        # 0x140007010
   1400025da:	mov    ebx,edi
   1400025dc:	mov    r12d,0x200
   1400025e2:	mov    r9d,ebx
   1400025e5:	lea    r8,[rip+0x4fec]        # 0x1400075d8
   1400025ec:	mov    rdx,r12
   1400025ef:	lea    rcx,[rbp+0xe0]
   1400025f6:	call   0x140001154
   1400025fb:	mov    rcx,QWORD PTR [rsp+0x38]
   140002600:	lea    rax,[rsp+0x30]
   140002605:	mov    QWORD PTR [rsp+0x28],rax
   14000260a:	lea    rdx,[rbp+0xe0]
   140002611:	lea    rax,[rbp-0x70]
   140002615:	mov    DWORD PTR [rsp+0x30],0xa0
   14000261d:	xor    r9d,r9d
   140002620:	mov    QWORD PTR [rsp+0x20],rax
   140002625:	xor    r8d,r8d
   140002628:	call   QWORD PTR [rip+0x49d2]        # 0x140007000
   14000262e:	test   eax,eax
   140002630:	jne    0x140002649
   140002632:	lea    rdx,[rbp+0x40]
   140002636:	mov    WORD PTR [rbp+0x2e],r14w
   14000263b:	lea    rcx,[rbp-0x70]
   14000263f:	call   QWORD PTR [rip+0x4a53]        # 0x140007098
   140002645:	test   eax,eax
   140002647:	je     0x140002652
   140002649:	add    ebx,edi
   14000264b:	cmp    ebx,0x8
   14000264e:	ja     0x14000269f
   140002650:	jmp    0x1400025e2
   140002652:	mov    r9d,ebx
   140002655:	lea    r8,[rip+0x4f94]        # 0x1400075f0
   14000265c:	mov    rdx,r12
   14000265f:	lea    rcx,[rbp+0xe0]
   140002666:	call   0x140001154
   14000266b:	mov    rcx,QWORD PTR [rsp+0x38]
   140002670:	lea    rax,[rsp+0x30]
   140002675:	mov    QWORD PTR [rsp+0x28],rax
   14000267a:	lea    rdx,[rbp+0xe0]
   140002681:	lea    rax,[rsp+0x40]
   140002686:	mov    DWORD PTR [rsp+0x30],0x50
   14000268e:	xor    r9d,r9d
   140002691:	mov    QWORD PTR [rsp+0x20],rax
   140002696:	xor    r8d,r8d
   140002699:	call   QWORD PTR [rip+0x4961]        # 0x140007000
   14000269f:	mov    rcx,QWORD PTR [rsp+0x38]
   1400026a4:	call   QWORD PTR [rip+0x496e]        # 0x140007018
   1400026aa:	mov    rcx,QWORD PTR [rip+0x78ef]        # 0x140009fa0
   1400026b1:	mov    edx,edi
   1400026b3:	call   QWORD PTR [rip+0x4c1f]        # 0x1400072d8
   1400026b9:	mov    rcx,rax
   1400026bc:	call   QWORD PTR [rip+0x4bbe]        # 0x140007280
   1400026c2:	cmp    DWORD PTR [rip+0x698b],0xffffffff        # 0x140009054
   1400026c9:	jne    0x1400026d9
   1400026cb:	mov    QWORD PTR [rsp+0x20],0x2
   1400026d4:	jmp    0x1400028c9
   1400026d9:	mov    rcx,QWORD PTR [rip+0x78c0]        # 0x140009fa0
   1400026e0:	mov    edx,esi
   1400026e2:	call   QWORD PTR [rip+0x4bf0]        # 0x1400072d8
   1400026e8:	cmp    WORD PTR [rbp+0x40],r14w
   1400026ed:	je     0x1400026fb
   1400026ef:	mov    rdx,rax
   1400026f2:	lea    rcx,[rbp+0x40]
   1400026f6:	call   0x140002a88
   1400026fb:	lea    rdx,[rsp+0x40]
   140002700:	lea    rcx,[rbp+0x40]
   140002704:	call   0x140002b54
   140002709:	jmp    0x1400020e1
   14000270e:	xor    ecx,ecx
   140002710:	call   QWORD PTR [rip+0x4b2a]        # 0x140007240
   140002716:	jmp    0x140002112
   14000271b:	sub    ecx,0x3e9
   140002721:	je     0x140002741
   140002723:	sub    ecx,0x1
   140002726:	je     0x140002739
   140002728:	cmp    ecx,0x1
   14000272b:	jne    0x140002a53
   140002731:	mov    r8d,0x302
   140002737:	jmp    0x140002747
   140002739:	mov    r8d,0x301
   14000273f:	jmp    0x140002747
   140002741:	mov    r8d,0x300
   140002747:	mov    rcx,QWORD PTR [rip+0x7852]        # 0x140009fa0
   14000274e:	mov    edx,0xc9
   140002753:	xor    r9d,r9d
   140002756:	mov    QWORD PTR [rsp+0x20],r14
   14000275b:	call   QWORD PTR [rip+0x4b87]        # 0x1400072e8
   140002761:	jmp    0x140002112
   140002766:	mov    r8d,0x303
   14000276c:	jmp    0x140002747
   14000276e:	sub    ecx,0x3ed
   140002774:	je     0x1400028ee
   14000277a:	sub    ecx,0x1
   14000277d:	je     0x1400028bf
   140002783:	sub    ecx,0x2
   140002786:	je     0x140002841
   14000278c:	sub    ecx,0x2
   14000278f:	je     0x14000282e
   140002795:	sub    ecx,0x1
   140002798:	je     0x1400027f7
   14000279a:	sub    ecx,0x1
   14000279d:	je     0x1400027c8
   14000279f:	cmp    ecx,0x3
   1400027a2:	jne    0x140002a53
   1400027a8:	mov    rcx,QWORD PTR [rip+0x77f1]        # 0x140009fa0
   1400027af:	xor    r9d,r9d
   1400027b2:	mov    edx,0x112
   1400027b7:	mov    r8d,0xf180
   1400027bd:	call   QWORD PTR [rip+0x4a65]        # 0x140007228
   1400027c3:	jmp    0x140002112
   1400027c8:	call   QWORD PTR [rip+0x4b5a]        # 0x140007328
   1400027ce:	mov    rcx,QWORD PTR [rip+0x77cb]        # 0x140009fa0
   1400027d5:	cmp    rax,rcx
   1400027d8:	jne    0x140002112
   1400027de:	mov    edx,0xc9
   1400027e3:	call   QWORD PTR [rip+0x4aef]        # 0x1400072d8
   1400027e9:	mov    rcx,rax
   1400027ec:	call   QWORD PTR [rip+0x4a8e]        # 0x140007280
   1400027f2:	jmp    0x140002112
   1400027f7:	mov    rcx,QWORD PTR [rip+0x70f2]        # 0x1400098f0
   1400027fe:	mov    edi,0x1
   140002803:	mov    edx,edi
   140002805:	call   QWORD PTR [rip+0x4a9d]        # 0x1400072a8
   14000280b:	mov    rcx,QWORD PTR [rip+0x778e]        # 0x140009fa0
   140002812:	lea    r8,[rip+0x5167]        # 0x140007980
   140002819:	mov    r9,rax
   14000281c:	lea    rdx,[rip+0x76cd]        # 0x140009ef0
   140002823:	call   QWORD PTR [rip+0x490f]        # 0x140007138
   140002829:	jmp    0x1400020e1
   14000282e:	mov    rcx,QWORD PTR [rip+0x776b]        # 0x140009fa0
   140002835:	xor    r9d,r9d
   140002838:	lea    r8d,[r9+0x3]
   14000283c:	jmp    0x140002105
   140002841:	mov    r8,r12
   140002844:	mov    WORD PTR [rbp-0x70],r14w
   140002849:	xor    edx,edx
   14000284b:	lea    rcx,[rbp-0x6e]
   14000284f:	call   0x140006336
   140002854:	mov    rcx,QWORD PTR [rip+0x7745]        # 0x140009fa0
   14000285b:	lea    r8,[rbp+0x40]
   14000285f:	mov    r9d,0x50
   140002865:	lea    edx,[r9+0x79]
   140002869:	call   QWORD PTR [rip+0x4ad9]        # 0x140007348
   14000286f:	test   eax,eax
   140002871:	je     0x140002896
   140002873:	lea    rdx,[rbp-0x70]
   140002877:	lea    rcx,[rbp+0x40]
   14000287b:	call   0x140005290
   140002880:	test   eax,eax
   140002882:	jne    0x140002896
   140002884:	lea    r8,[rbp+0x40]
   140002888:	mov    edx,0xa0
   14000288d:	lea    rcx,[rbp-0x70]
   140002891:	call   0x140001008
   140002896:	mov    r9,QWORD PTR [rip+0x7703]        # 0x140009fa0
   14000289d:	lea    rax,[rbp-0x70]
   1400028a1:	mov    ecx,DWORD PTR [rip+0x75f9]        # 0x140009ea0
   1400028a7:	xor    edx,edx
   1400028a9:	mov    r8d,0x30000
   1400028af:	mov    QWORD PTR [rsp+0x20],rax
   1400028b4:	call   QWORD PTR [rip+0x48ee]        # 0x1400071a8
   1400028ba:	jmp    0x140002112
   1400028bf:	mov    edi,0x1
   1400028c4:	mov    QWORD PTR [rsp+0x20],rdi
   1400028c9:	mov    r8,QWORD PTR [rip+0x76d0]        # 0x140009fa0
   1400028d0:	lea    r9,[rip+0x959]        # 0x140003230
   1400028d7:	mov    rcx,QWORD PTR [rip+0x7012]        # 0x1400098f0
   1400028de:	mov    edx,0x1f4
   1400028e3:	call   QWORD PTR [rip+0x491f]        # 0x140007208
   1400028e9:	jmp    0x1400020e1
   1400028ee:	mov    r8,QWORD PTR [rip+0x76ab]        # 0x140009fa0
   1400028f5:	lea    r9,[rip+0xec4]        # 0x1400037c0
   1400028fc:	mov    rcx,QWORD PTR [rip+0x6fed]        # 0x1400098f0
   140002903:	mov    edx,0x12c
   140002908:	mov    QWORD PTR [rsp+0x20],r14
   14000290d:	call   QWORD PTR [rip+0x48f5]        # 0x140007208
   140002913:	mov    rcx,QWORD PTR [rip+0x7686]        # 0x140009fa0
   14000291a:	mov    edi,0x1
   14000291f:	mov    edx,edi
   140002921:	call   QWORD PTR [rip+0x49b1]        # 0x1400072d8
   140002927:	mov    rcx,rax
   14000292a:	call   QWORD PTR [rip+0x4950]        # 0x140007280
   140002930:	jmp    0x1400020e1
   140002935:	cmp    edx,0x112
   14000293b:	je     0x140002a42
   140002941:	cmp    edx,0x117
   140002947:	je     0x14000298c
   140002949:	lea    eax,[rdx-0x134]
   14000294f:	test   eax,0xfffffffa
   140002954:	jne    0x140002a53
   14000295a:	cmp    edx,0x139
   140002960:	je     0x140002a53
   140002966:	mov    ecx,0xf
   14000296b:	call   QWORD PTR [rip+0x497f]        # 0x1400072f0
   140002971:	mov    edx,eax
   140002973:	mov    rcx,r15
   140002976:	call   QWORD PTR [rip+0x46d4]        # 0x140007050
   14000297c:	mov    ecx,0xf
   140002981:	call   QWORD PTR [rip+0x4991]        # 0x140007318
   140002987:	jmp    0x140002a55
   14000298c:	mov    edi,0x1
   140002991:	cmp    ax,di
   140002994:	jne    0x140002a53
   14000299a:	call   QWORD PTR [rip+0x4870]        # 0x140007210
   1400029a0:	mov    rcx,rax
   1400029a3:	call   QWORD PTR [rip+0x484f]        # 0x1400071f8
   1400029a9:	mov    rcx,QWORD PTR [rip+0x75f0]        # 0x140009fa0
   1400029b0:	mov    esi,0xc9
   1400029b5:	mov    edx,esi
   1400029b7:	mov    rbx,rax
   1400029ba:	call   QWORD PTR [rip+0x4918]        # 0x1400072d8
   1400029c0:	xor    r14d,r14d
   1400029c3:	cmp    rbx,rax
   1400029c6:	je     0x1400029cc
   1400029c8:	mov    ebx,edi
   1400029ca:	jmp    0x1400029f9
   1400029cc:	mov    rcx,QWORD PTR [rip+0x75cd]        # 0x140009fa0
   1400029d3:	xor    r9d,r9d
   1400029d6:	mov    r8d,0x140
   1400029dc:	mov    QWORD PTR [rsp+0x20],r14
   1400029e1:	mov    edx,esi
   1400029e3:	call   QWORD PTR [rip+0x48ff]        # 0x1400072e8
   1400029e9:	mov    rcx,rax
   1400029ec:	mov    ebx,r14d
   1400029ef:	shr    rcx,0x10
   1400029f3:	cmp    cx,ax
   1400029f6:	sete   bl
   1400029f9:	mov    r8d,ebx
   1400029fc:	mov    edx,0x3e9
   140002a01:	mov    rcx,r15
   140002a04:	call   QWORD PTR [rip+0x48c6]        # 0x1400072d0
   140002a0a:	mov    r8d,ebx
   140002a0d:	mov    edx,0x3ea
   140002a12:	mov    rcx,r15
   140002a15:	call   QWORD PTR [rip+0x48b5]        # 0x1400072d0
   140002a1b:	mov    r8d,ebx
   140002a1e:	mov    edx,0x3ec
   140002a23:	mov    rcx,r15
   140002a26:	call   QWORD PTR [rip+0x48a4]        # 0x1400072d0
   140002a2c:	mov    ecx,edi
   140002a2e:	call   QWORD PTR [rip+0x47cc]        # 0x140007200
   140002a34:	test   eax,eax
   140002a36:	je     0x140002a53
   140002a38:	mov    ecx,edi
   140002a3a:	call   QWORD PTR [rip+0x4870]        # 0x1400072b0
   140002a40:	jmp    0x140002a53
   140002a42:	cmp    r8d,0xf060
   140002a49:	jne    0x140002a53
   140002a4b:	xor    ecx,ecx
   140002a4d:	call   QWORD PTR [rip+0x47ed]        # 0x140007240
   140002a53:	xor    eax,eax
   140002a55:	mov    rcx,QWORD PTR [rbp+0x2e0]
   140002a5c:	xor    rcx,rsp
   140002a5f:	call   0x140005ca0
   140002a64:	lea    r11,[rsp+0x3f0]
   140002a6c:	mov    rbx,QWORD PTR [r11+0x30]
   140002a70:	mov    rsi,QWORD PTR [r11+0x38]
   140002a74:	mov    rsp,r11
   140002a77:	pop    r15
   140002a79:	pop    r14
   140002a7b:	pop    r12
   140002a7d:	pop    rdi
   140002a7e:	pop    rbp
   140002a7f:	ret    
   140002a80:	int3   
   140002a81:	int3   
   140002a82:	int3   
   140002a83:	int3   
   140002a84:	int3   
   140002a85:	int3   
   140002a86:	int3   
   140002a87:	int3   
   140002a88:	mov    QWORD PTR [rsp+0x8],rbx
   140002a8d:	mov    QWORD PTR [rsp+0x10],rsi
   140002a92:	push   rdi
   140002a93:	sub    rsp,0x20
   140002a97:	mov    rbx,rdx
   140002a9a:	mov    rsi,rcx
   140002a9d:	mov    rcx,rbx
   140002aa0:	xor    r9d,r9d
   140002aa3:	xor    r8d,r8d
   140002aa6:	mov    edx,0x146
   140002aab:	call   QWORD PTR [rip+0x48a7]        # 0x140007358
   140002ab1:	mov    rdi,rax
   140002ab4:	test   ax,ax
   140002ab7:	je     0x140002af4
   140002ab9:	mov    r9,rsi
   140002abc:	xor    r8d,r8d
   140002abf:	mov    edx,0x14c
   140002ac4:	mov    rcx,rbx
   140002ac7:	call   QWORD PTR [rip+0x488b]        # 0x140007358
   140002acd:	cmp    eax,0xffffffff
   140002ad0:	je     0x140002ad7
   140002ad2:	mov    r8d,eax
   140002ad5:	jmp    0x140002ae3
   140002ad7:	cmp    di,0x14
   140002adb:	jne    0x140002af4
   140002add:	mov    r8d,0x13
   140002ae3:	xor    r9d,r9d
   140002ae6:	mov    edx,0x144
   140002aeb:	mov    rcx,rbx
   140002aee:	call   QWORD PTR [rip+0x4864]        # 0x140007358
   140002af4:	mov    r9,rsi
   140002af7:	xor    r8d,r8d
   140002afa:	mov    edx,0x14a
   140002aff:	mov    rcx,rbx
   140002b02:	call   QWORD PTR [rip+0x4850]        # 0x140007358
   140002b08:	xor    r9d,r9d
   140002b0b:	xor    r8d,r8d
   140002b0e:	mov    edx,0x14e
   140002b13:	mov    rcx,rbx
   140002b16:	call   QWORD PTR [rip+0x483c]        # 0x140007358
   140002b1c:	mov    rcx,QWORD PTR [rip+0x747d]        # 0x140009fa0
   140002b23:	mov    ebx,0x1
   140002b28:	mov    edx,ebx
   140002b2a:	call   QWORD PTR [rip+0x47a8]        # 0x1400072d8
   140002b30:	mov    rcx,rax
   140002b33:	mov    edx,ebx
   140002b35:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b3a:	mov    rsi,QWORD PTR [rsp+0x38]
   140002b3f:	add    rsp,0x20
   140002b43:	pop    rdi
   140002b44:	rex.W jmp QWORD PTR [rip+0x481d]        # 0x140007368
   140002b4b:	int3   
   140002b4c:	int3   
   140002b4d:	int3   
   140002b4e:	int3   
   140002b4f:	int3   
   140002b50:	int3   
   140002b51:	int3   
   140002b52:	int3   
   140002b53:	int3   
   140002b54:	mov    QWORD PTR [rsp+0x18],rbx
   140002b59:	push   rbp
   140002b5a:	push   rsi
   140002b5b:	push   rdi
   140002b5c:	push   r12
   140002b5e:	push   r13
   140002b60:	push   r14
   140002b62:	push   r15
   140002b64:	sub    rsp,0x110
   140002b6b:	mov    rax,QWORD PTR [rip+0x6496]        # 0x140009008
   140002b72:	xor    rax,rsp
   140002b75:	mov    QWORD PTR [rsp+0x100],rax
   140002b7d:	xor    r12d,r12d
   140002b80:	mov    rbp,rcx
   140002b83:	mov    rcx,rdx
   140002b86:	mov    DWORD PTR [rsp+0x50],r12d
   140002b8b:	mov    r15,rdx
   140002b8e:	lea    edi,[r12+0x28]
   140002b93:	call   QWORD PTR [rip+0x44f7]        # 0x140007090
   140002b99:	lea    r13d,[r12+0x1]
   140002b9e:	lea    edx,[rax+0x1]
   140002ba1:	cmp    edx,eax
   140002ba3:	jb     0x140002cc4
   140002ba9:	mov    esi,edx
   140002bab:	mov    eax,0xffffffff
   140002bb0:	add    rsi,rsi
   140002bb3:	cmp    rsi,rax
   140002bb6:	ja     0x140002cc4
   140002bbc:	mov    r9d,DWORD PTR [rip+0x7405]        # 0x140009fc8
   140002bc3:	lea    r8,[rsp+0x50]
   140002bc8:	mov    edx,DWORD PTR [rip+0x6486]        # 0x140009054
   140002bce:	mov    ecx,DWORD PTR [rip+0x72cc]        # 0x140009ea0
   140002bd4:	mov    QWORD PTR [rsp+0x40],r12
   140002bd9:	mov    DWORD PTR [rsp+0x38],r12d
   140002bde:	mov    DWORD PTR [rsp+0x30],r13d
   140002be3:	mov    QWORD PTR [rsp+0x28],r12
   140002be8:	mov    DWORD PTR [rsp+0x20],r12d
   140002bed:	call   QWORD PTR [rip+0x4585]        # 0x140007178
   140002bf3:	test   eax,eax
   140002bf5:	je     0x140002c0f
   140002bf7:	mov    rcx,QWORD PTR [rip+0x73a2]        # 0x140009fa0
   140002bfe:	lea    r8d,[r12+0x30]
   140002c03:	mov    edx,eax
   140002c05:	call   0x140004c70
   140002c0a:	jmp    0x140002cc4
   140002c0f:	mov    r14d,0x40
   140002c15:	jmp    0x140002c87
   140002c17:	lea    rdx,[rsp+0x60]
   140002c1c:	mov    DWORD PTR [rbx],edi
   140002c1e:	mov    rcx,rbp
   140002c21:	call   0x140005290
   140002c26:	test   eax,eax
   140002c28:	jne    0x140002c3c
   140002c2a:	mov    r8,rbp
   140002c2d:	lea    rcx,[rsp+0x60]
   140002c32:	mov    edx,0xa0
   140002c37:	call   0x140001008
   140002c3c:	mov    r8d,DWORD PTR [rip+0x7385]        # 0x140009fc8
   140002c43:	lea    r9,[rsp+0x60]
   140002c48:	mov    edx,DWORD PTR [rip+0x6406]        # 0x140009054
   140002c4e:	mov    ecx,DWORD PTR [rip+0x724c]        # 0x140009ea0
   140002c54:	mov    QWORD PTR [rsp+0x30],rbx
   140002c59:	mov    DWORD PTR [rsp+0x28],r12d
   140002c5e:	mov    DWORD PTR [rsp+0x20],r12d
   140002c63:	call   QWORD PTR [rip+0x454f]        # 0x1400071b8
   140002c69:	test   eax,eax
   140002c6b:	js     0x140002f54
   140002c71:	mov    eax,DWORD PTR [rbx+0x4]
   140002c74:	mov    rcx,rbx
   140002c77:	cmp    eax,DWORD PTR [rbx]
   140002c79:	jbe    0x140002d28
   140002c7f:	mov    edi,eax
   140002c81:	call   QWORD PTR [rip+0x4401]        # 0x140007088
   140002c87:	mov    rdx,rdi
   140002c8a:	mov    ecx,r14d
   140002c8d:	call   QWORD PTR [rip+0x43dd]        # 0x140007070
   140002c93:	mov    rbx,rax
   140002c96:	test   rax,rax
   140002c99:	jne    0x140002c17
   140002c9f:	mov    r8d,0x10
   140002ca5:	mov    edx,0x80000044
   140002caa:	mov    rcx,QWORD PTR [rip+0x72ef]        # 0x140009fa0
   140002cb1:	call   0x140004c70
   140002cb6:	test   rbx,rbx
   140002cb9:	je     0x140002cc4
   140002cbb:	mov    rcx,rbx
   140002cbe:	call   QWORD PTR [rip+0x43c4]        # 0x140007088
   140002cc4:	cmp    DWORD PTR [rip+0x6945],r12d        # 0x140009610
   140002ccb:	jg     0x140002ce2
   140002ccd:	cmp    DWORD PTR [rip+0x72f8],r12d        # 0x140009fcc
   140002cd4:	je     0x140002ce2
   140002cd6:	call   0x140004bc8
   140002cdb:	mov    DWORD PTR [rip+0x636e],r13d        # 0x140009050
   140002ce2:	mov    rcx,QWORD PTR [rip+0x72b7]        # 0x140009fa0
   140002ce9:	mov    edx,0xc9
   140002cee:	call   QWORD PTR [rip+0x45e4]        # 0x1400072d8
   140002cf4:	mov    rcx,rax
   140002cf7:	call   QWORD PTR [rip+0x4583]        # 0x140007280
   140002cfd:	mov    rcx,QWORD PTR [rsp+0x100]
   140002d05:	xor    rcx,rsp
   140002d08:	call   0x140005ca0
   140002d0d:	mov    rbx,QWORD PTR [rsp+0x160]
   140002d15:	add    rsp,0x110
   140002d1c:	pop    r15
   140002d1e:	pop    r14
   140002d20:	pop    r13
   140002d22:	pop    r12
   140002d24:	pop    rdi
   140002d25:	pop    rsi
   140002d26:	pop    rbp
   140002d27:	ret    
   140002d28:	call   0x1400051dc
   140002d2d:	test   eax,eax
   140002d2f:	je     0x140002d4f
   140002d31:	mov    rcx,QWORD PTR [rip+0x7268]        # 0x140009fa0
   140002d38:	mov    edx,0x4
   140002d3d:	lea    r8d,[rdx+0x10]
   140002d41:	call   0x140004c70
   140002d46:	cmp    eax,0x7
   140002d49:	je     0x140002cb6
   140002d4f:	lea    ebp,[rsi+0xb4]
   140002d55:	cmp    ebp,0xb4
   140002d5b:	jb     0x140002cb6
   140002d61:	mov    r14d,DWORD PTR [rbx+0x14]
   140002d65:	add    r14d,ebp
   140002d68:	cmp    r14d,ebp
   140002d6b:	jb     0x140002cb6
   140002d71:	mov    edx,r14d
   140002d74:	mov    ecx,0x40
   140002d79:	call   QWORD PTR [rip+0x42f1]        # 0x140007070
   140002d7f:	mov    rdi,rax
   140002d82:	test   rax,rax
   140002d85:	je     0x140002c9f
   140002d8b:	mov    DWORD PTR [rax],r14d
   140002d8e:	mov    DWORD PTR [rax+0x4],r13d
   140002d92:	mov    DWORD PTR [rax+0x10],0x4
   140002d99:	mov    DWORD PTR [rax+0x14],0x2
   140002da0:	mov    DWORD PTR [rax+0x18],r13d
   140002da4:	mov    eax,DWORD PTR [rip+0x7122]        # 0x140009ecc
   140002daa:	mov    DWORD PTR [rdi+0x1c],eax
   140002dad:	cmp    WORD PTR [r15],r12w
   140002db1:	je     0x140002dce
   140002db3:	mov    edx,esi
   140002db5:	lea    rcx,[rdi+0xb4]
   140002dbc:	mov    r8,r15
   140002dbf:	mov    DWORD PTR [rdi+0x40],esi
   140002dc2:	mov    DWORD PTR [rdi+0x44],0xb4
   140002dc9:	call   0x140001008
   140002dce:	mov    eax,DWORD PTR [rbx+0x14]
   140002dd1:	mov    DWORD PTR [rdi+0x38],eax
   140002dd4:	mov    DWORD PTR [rdi+0x3c],ebp
   140002dd7:	mov    r8d,DWORD PTR [rbx+0x18]
   140002ddb:	mov    edx,DWORD PTR [rbx+0x14]
   140002dde:	add    r8,rbx
   140002de1:	mov    esi,esi
   140002de3:	lea    rcx,[rsi+0xb4]
   140002dea:	add    rcx,rdi
   140002ded:	call   0x140001008
   140002df2:	mov    rcx,QWORD PTR [rip+0x70c7]        # 0x140009ec0
   140002df9:	test   rcx,rcx
   140002dfc:	je     0x140002e04
   140002dfe:	call   QWORD PTR [rip+0x4284]        # 0x140007088
   140002e04:	mov    rcx,QWORD PTR [rip+0x70a5]        # 0x140009eb0
   140002e0b:	test   rcx,rcx
   140002e0e:	je     0x140002e16
   140002e10:	call   QWORD PTR [rip+0x4272]        # 0x140007088
   140002e16:	mov    ebp,0x40
   140002e1b:	mov    rdx,rsi
   140002e1e:	mov    ecx,ebp
   140002e20:	call   QWORD PTR [rip+0x424a]        # 0x140007070
   140002e26:	mov    QWORD PTR [rip+0x7093],rax        # 0x140009ec0
   140002e2d:	test   rax,rax
   140002e30:	jne    0x140002e4e
   140002e32:	mov    rcx,QWORD PTR [rip+0x7167]        # 0x140009fa0
   140002e39:	mov    edx,0x80000044
   140002e3e:	mov    r8d,0x10
   140002e44:	call   0x140004c70
   140002e49:	jmp    0x140002f46
   140002e4e:	mov    r8,r15
   140002e51:	mov    rdx,rsi
   140002e54:	mov    rcx,rax
   140002e57:	call   0x140001008
   140002e5c:	mov    edx,DWORD PTR [rbx+0x14]
   140002e5f:	mov    ecx,ebp
   140002e61:	call   QWORD PTR [rip+0x4209]        # 0x140007070
   140002e67:	mov    QWORD PTR [rip+0x7042],rax        # 0x140009eb0
   140002e6e:	test   rax,rax
   140002e71:	je     0x140002e32
   140002e73:	mov    r8d,DWORD PTR [rbx+0x18]
   140002e77:	mov    rcx,rax
   140002e7a:	mov    edx,DWORD PTR [rbx+0x14]
   140002e7d:	add    r8,rbx
   140002e80:	call   0x140001008
   140002e85:	mov    ecx,DWORD PTR [rsp+0x50]
   140002e89:	lea    rdx,[rip+0x6788]        # 0x140009618
   140002e90:	mov    DWORD PTR [rip+0x6781],r12d        # 0x140009618
   140002e97:	xor    r9d,r9d
   140002e9a:	mov    r8d,DWORD PTR [rbx+0x10]
   140002e9e:	add    r8,rbx
   140002ea1:	mov    DWORD PTR [rip+0x7125],ecx        # 0x140009fcc
   140002ea7:	mov    DWORD PTR [rip+0x6762],r12d        # 0x140009610
   140002eae:	mov    QWORD PTR [rsp+0x20],rdi
   140002eb3:	call   QWORD PTR [rip+0x42df]        # 0x140007198
   140002eb9:	mov    DWORD PTR [rip+0x6751],eax        # 0x140009610
   140002ebf:	test   eax,eax
   140002ec1:	jle    0x140002ef8
   140002ec3:	mov    r8,QWORD PTR [rip+0x70d6]        # 0x140009fa0
   140002eca:	lea    r9,[rip+0x23f]        # 0x140003110
   140002ed1:	mov    rcx,QWORD PTR [rip+0x6a18]        # 0x1400098f0
   140002ed8:	mov    edx,0x239b
   140002edd:	mov    DWORD PTR [rip+0x616c],r12d        # 0x140009050
   140002ee4:	mov    DWORD PTR [rip+0x6fcd],r13d        # 0x140009eb8
   140002eeb:	mov    QWORD PTR [rsp+0x20],r12
   140002ef0:	call   QWORD PTR [rip+0x4312]        # 0x140007208
   140002ef6:	jmp    0x140002f46
   140002ef8:	cmp    eax,0x80000005
   140002efd:	jne    0x140002f26
   140002eff:	mov    r8,QWORD PTR [rip+0x709a]        # 0x140009fa0
   140002f06:	lea    r9,[rip+0x7b3]        # 0x1400036c0
   140002f0d:	mov    rcx,QWORD PTR [rip+0x69dc]        # 0x1400098f0
   140002f14:	mov    edx,0x514
   140002f19:	mov    QWORD PTR [rsp+0x20],r12
   140002f1e:	call   QWORD PTR [rip+0x42e4]        # 0x140007208
   140002f24:	jmp    0x140002f3a
   140002f26:	mov    rcx,QWORD PTR [rip+0x7073]        # 0x140009fa0
   140002f2d:	mov    r8d,0x30
   140002f33:	mov    edx,eax
   140002f35:	call   0x140004c70
   140002f3a:	call   0x140004bc8
   140002f3f:	mov    DWORD PTR [rip+0x610a],r13d        # 0x140009050
   140002f46:	mov    rcx,rdi
   140002f49:	call   QWORD PTR [rip+0x4139]        # 0x140007088
   140002f4f:	jmp    0x140002cb6
   140002f54:	mov    r8d,0x30
   140002f5a:	mov    edx,eax
   140002f5c:	jmp    0x140002caa
   140002f61:	int3   
   140002f62:	int3   
   140002f63:	int3   
   140002f64:	int3   
   140002f65:	int3   
   140002f66:	int3   
   140002f67:	int3   
   140002f68:	mov    r11,rsp
   140002f6b:	mov    QWORD PTR [r11+0x18],rbx
   140002f6f:	mov    QWORD PTR [r11+0x20],rbp
   140002f73:	push   rsi
   140002f74:	push   rdi
   140002f75:	push   r12
   140002f77:	push   r14
   140002f79:	push   r15
   140002f7b:	sub    rsp,0x50
   140002f7f:	mov    rax,QWORD PTR [rip+0x6082]        # 0x140009008
   140002f86:	xor    rax,rsp
   140002f89:	mov    QWORD PTR [rsp+0x40],rax
   140002f8e:	lea    r14,[rdx+0x8]
   140002f92:	mov    rbx,rdx
   140002f95:	lea    rax,[r11-0x48]
   140002f99:	mov    edx,ecx
   140002f9b:	mov    r15d,ecx
   140002f9e:	mov    QWORD PTR [r11-0x50],rax
   140002fa2:	mov    ecx,DWORD PTR [rip+0x6ef8]        # 0x140009ea0
   140002fa8:	xor    r12d,r12d
   140002fab:	mov    r9d,0x30000
   140002fb1:	mov    QWORD PTR [r11-0x58],r14
   140002fb5:	mov    r8d,0x10003
   140002fbb:	mov    ebp,r12d
   140002fbe:	call   QWORD PTR [rip+0x4204]        # 0x1400071c8
   140002fc4:	mov    esi,eax
   140002fc6:	test   eax,eax
   140002fc8:	je     0x140002fde
   140002fca:	mov    QWORD PTR [rbx],r12
   140002fcd:	mov    DWORD PTR [r14],r12d
   140002fd0:	mov    QWORD PTR [rbx+0xc],r12
   140002fd4:	mov    WORD PTR [rbx+0x14],r12w
   140002fd9:	jmp    0x140003063
   140002fde:	mov    esi,0x124
   140002fe3:	jmp    0x14000301d
   140002fe5:	mov    DWORD PTR [rdi],esi
   140002fe7:	xor    r9d,r9d
   140002fea:	mov    r8d,DWORD PTR [r14]
   140002fed:	mov    edx,r15d
   140002ff0:	mov    ecx,DWORD PTR [rip+0x6eaa]        # 0x140009ea0
   140002ff6:	mov    QWORD PTR [rsp+0x20],rdi
   140002ffb:	call   QWORD PTR [rip+0x41bf]        # 0x1400071c0
   140003001:	mov    esi,eax
   140003003:	test   eax,eax
   140003005:	jne    0x1400030fb
   14000300b:	mov    eax,DWORD PTR [rdi+0x4]
   14000300e:	cmp    eax,DWORD PTR [rdi]
   140003010:	jbe    0x14000308b
   140003012:	mov    rcx,rdi
   140003015:	mov    esi,eax
   140003017:	call   QWORD PTR [rip+0x406b]        # 0x140007088
   14000301d:	mov    rdx,rsi
   140003020:	mov    ecx,0x40
   140003025:	call   QWORD PTR [rip+0x4045]        # 0x140007070
   14000302b:	mov    rdi,rax
   14000302e:	test   rax,rax
   140003031:	jne    0x140002fe5
   140003033:	mov    QWORD PTR [rbx],r12
   140003036:	mov    DWORD PTR [r14],r12d
   140003039:	mov    QWORD PTR [rbx+0xc],r12
   14000303d:	mov    WORD PTR [rbx+0x14],r12w
   140003042:	mov    esi,0x80000044
   140003047:	test   rdi,rdi
   14000304a:	je     0x140003055
   14000304c:	mov    rcx,rdi
   14000304f:	call   QWORD PTR [rip+0x4033]        # 0x140007088
   140003055:	test   rbp,rbp
   140003058:	je     0x140003063
   14000305a:	mov    rcx,rbp
   14000305d:	call   QWORD PTR [rip+0x4025]        # 0x140007088
   140003063:	mov    eax,esi
   140003065:	mov    rcx,QWORD PTR [rsp+0x40]
   14000306a:	xor    rcx,rsp
   14000306d:	call   0x140005ca0
   140003072:	lea    r11,[rsp+0x50]
   140003077:	mov    rbx,QWORD PTR [r11+0x40]
   14000307b:	mov    rbp,QWORD PTR [r11+0x48]
   14000307f:	mov    rsp,r11
   140003082:	pop    r15
   140003084:	pop    r14
   140003086:	pop    r12
   140003088:	pop    rdi
   140003089:	pop    rsi
   14000308a:	ret    
   14000308b:	mov    eax,DWORD PTR [rdi+0x30]
   14000308e:	mov    r14d,0x200
   140003094:	mov    DWORD PTR [rbx],eax
   140003096:	mov    edx,r14d
   140003099:	mov    eax,DWORD PTR [rdi+0x3c]
   14000309c:	mov    ecx,0x40
   1400030a1:	shr    eax,0x2
   1400030a4:	and    eax,0x1
   1400030a7:	mov    DWORD PTR [rbx+0x4],eax
   1400030aa:	call   QWORD PTR [rip+0x3fc0]        # 0x140007070
   1400030b0:	mov    rbp,rax
   1400030b3:	test   rax,rax
   1400030b6:	je     0x140003042
   1400030b8:	mov    edx,r14d
   1400030bb:	mov    rcx,rax
   1400030be:	cmp    DWORD PTR [rdi+0x20],r12d
   1400030c2:	jbe    0x1400030d2
   1400030c4:	mov    r8d,DWORD PTR [rdi+0x24]
   1400030c8:	add    r8,rdi
   1400030cb:	call   0x140001008
   1400030d0:	jmp    0x1400030e1
   1400030d2:	mov    r9d,r15d
   1400030d5:	lea    r8,[rip+0x4594]        # 0x140007670
   1400030dc:	call   0x140001154
   1400030e1:	lea    rcx,[rbx+0x14]
   1400030e5:	mov    r8,rbp
   1400030e8:	mov    rdx,r14
   1400030eb:	call   0x140001008
   1400030f0:	mov    eax,DWORD PTR [rdi+0x1c]
   1400030f3:	mov    DWORD PTR [rbx+0x10],eax
   1400030f6:	jmp    0x140003047
   1400030fb:	mov    rcx,rdi
   1400030fe:	call   QWORD PTR [rip+0x3f84]        # 0x140007088
   140003104:	jmp    0x140002fca
   140003109:	int3   
   14000310a:	int3   
   14000310b:	int3   
   14000310c:	int3   
   14000310d:	int3   
   14000310e:	int3   
   14000310f:	int3   
   140003110:	rex push rdi
   140003112:	sub    rsp,0x80
   140003119:	mov    rax,QWORD PTR [rip+0x5ee8]        # 0x140009008
   140003120:	xor    rax,rsp
   140003123:	mov    QWORD PTR [rsp+0x70],rax
   140003128:	mov    rdi,rcx
   14000312b:	sub    edx,0x110
   140003131:	je     0x1400031cd
   140003137:	cmp    edx,0x1
   14000313a:	jne    0x14000320d
   140003140:	movzx  ecx,r8w
   140003144:	sub    ecx,edx
   140003146:	je     0x1400031be
   140003148:	cmp    ecx,edx
   14000314a:	jne    0x14000320d
   140003150:	cmp    DWORD PTR [rip+0x6d61],0x0        # 0x140009eb8
   140003157:	jne    0x14000318e
   140003159:	mov    ecx,DWORD PTR [rip+0x64b9]        # 0x140009618
   14000315f:	test   ecx,ecx
   140003161:	je     0x14000318e
   140003163:	xor    r8d,r8d
   140003166:	xor    edx,edx
   140003168:	call   QWORD PTR [rip+0x3fda]        # 0x140007148
   14000316e:	mov    DWORD PTR [rip+0x6d30],eax        # 0x140009ea4
   140003174:	test   eax,eax
   140003176:	jns    0x1400031a4
   140003178:	mov    rcx,QWORD PTR [rip+0x6d51]        # 0x140009ed0
   14000317f:	mov    r8d,0x10
   140003185:	mov    edx,eax
   140003187:	call   0x140004c70
   14000318c:	jmp    0x1400031a4
   14000318e:	call   0x140004bc8
   140003193:	and    DWORD PTR [rip+0x6d1e],0x0        # 0x140009eb8
   14000319a:	mov    DWORD PTR [rip+0x5eac],0x1        # 0x140009050
   1400031a4:	and    QWORD PTR [rip+0x6d24],0x0        # 0x140009ed0
   1400031ac:	xor    edx,edx
   1400031ae:	mov    rcx,rdi
   1400031b1:	call   QWORD PTR [rip+0x4129]        # 0x1400072e0
   1400031b7:	mov    eax,0x1
   1400031bc:	jmp    0x14000320f
   1400031be:	and    QWORD PTR [rip+0x6d0a],0x0        # 0x140009ed0
   1400031c6:	mov    edx,0x1
   1400031cb:	jmp    0x1400031ae
   1400031cd:	mov    QWORD PTR [rip+0x6cfc],rcx        # 0x140009ed0
   1400031d4:	lea    rdx,[rsp+0x20]
   1400031d9:	mov    rcx,QWORD PTR [rip+0x6ce0]        # 0x140009ec0
   1400031e0:	call   0x140005894
   1400031e5:	mov    r8,QWORD PTR [rip+0x6cc4]        # 0x140009eb0
   1400031ec:	mov    rcx,rdi
   1400031ef:	mov    edx,0x3ea
   1400031f4:	call   QWORD PTR [rip+0x4156]        # 0x140007350
   1400031fa:	lea    r8,[rsp+0x20]
   1400031ff:	mov    edx,0x3ec
   140003204:	mov    rcx,rdi
   140003207:	call   QWORD PTR [rip+0x4143]        # 0x140007350
   14000320d:	xor    eax,eax
   14000320f:	mov    rcx,QWORD PTR [rsp+0x70]
   140003214:	xor    rcx,rsp
   140003217:	call   0x140005ca0
   14000321c:	add    rsp,0x80
   140003223:	pop    rdi
   140003224:	ret    
   140003225:	int3   
   140003226:	int3   
   140003227:	int3   
   140003228:	int3   
   140003229:	int3   
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	mov    QWORD PTR [rsp+0x10],rbx
   140003235:	push   rbp
   140003236:	push   rdi
   140003237:	push   r14
   140003239:	lea    rbp,[rsp-0x170]
   140003241:	sub    rsp,0x270
   140003248:	mov    rax,QWORD PTR [rip+0x5db9]        # 0x140009008
   14000324f:	xor    rax,rsp
   140003252:	mov    QWORD PTR [rbp+0x160],rax
   140003259:	mov    rax,r9
   14000325c:	mov    r10,r8
   14000325f:	mov    rdi,rcx
   140003262:	sub    edx,0x53
   140003265:	je     0x140003668
   14000326b:	sub    edx,0x28
   14000326e:	je     0x14000365d
   140003274:	sub    edx,0x95
   14000327a:	je     0x140003501
   140003280:	cmp    edx,0x1
   140003283:	jne    0x140003659
   140003289:	movzx  ecx,r8w
   14000328d:	sub    ecx,edx
   14000328f:	je     0x14000334a
   140003295:	sub    ecx,edx
   140003297:	je     0x14000333a
   14000329d:	sub    ecx,0x1f3
   1400032a3:	je     0x1400032fc
   1400032a5:	cmp    ecx,0x5
   1400032a8:	jne    0x140003659
   1400032ae:	mov    edx,0x1f5
   1400032b3:	mov    rcx,rdi
   1400032b6:	call   QWORD PTR [rip+0x401c]        # 0x1400072d8
   1400032bc:	xor    r9d,r9d
   1400032bf:	xor    r8d,r8d
   1400032c2:	mov    rcx,rax
   1400032c5:	mov    edx,0x147
   1400032ca:	mov    rbx,rax
   1400032cd:	call   QWORD PTR [rip+0x4085]        # 0x140007358
   1400032d3:	movzx  r8d,ax
   1400032d7:	xor    r9d,r9d
   1400032da:	mov    edx,0x150
   1400032df:	mov    rcx,rbx
   1400032e2:	call   QWORD PTR [rip+0x4070]        # 0x140007358
   1400032e8:	xor    r8d,r8d
   1400032eb:	mov    rdx,rdi
   1400032ee:	mov    rcx,rax
   1400032f1:	call   QWORD PTR [rip+0x3e59]        # 0x140007150
   1400032f7:	jmp    0x140003659
   1400032fc:	shr    r10,0x10
   140003300:	cmp    r10w,0x9
   140003305:	jne    0x140003659
   14000330b:	mov    edx,0x1f6
   140003310:	mov    rcx,rdi
   140003313:	call   QWORD PTR [rip+0x3fbf]        # 0x1400072d8
   140003319:	mov    edx,0x1f5
   14000331e:	mov    rcx,rdi
   140003321:	mov    rbx,rax
   140003324:	call   QWORD PTR [rip+0x3fae]        # 0x1400072d8
   14000332a:	mov    rcx,rax
   14000332d:	mov    rdx,rbx
   140003330:	call   0x1400048dc
   140003335:	jmp    0x140003659
   14000333a:	xor    edx,edx
   14000333c:	mov    rcx,rdi
   14000333f:	call   QWORD PTR [rip+0x3f9b]        # 0x1400072e0
   140003345:	jmp    0x140003686
   14000334a:	xor    r14d,r14d
   14000334d:	lea    rax,[rsp+0x50]
   140003352:	mov    QWORD PTR [rsp+0x40],r14
   140003357:	lea    rdx,[rip+0x4182]        # 0x1400074e0
   14000335e:	mov    QWORD PTR [rsp+0x38],rax
   140003363:	xor    r9d,r9d
   140003366:	mov    QWORD PTR [rsp+0x30],r14
   14000336b:	xor    r8d,r8d
   14000336e:	mov    DWORD PTR [rsp+0x28],0x20006
   140003376:	mov    rcx,0xffffffff80000001
   14000337d:	mov    DWORD PTR [rsp+0x20],r14d
   140003382:	mov    QWORD PTR [rsp+0x50],r14
   140003387:	call   QWORD PTR [rip+0x3c9b]        # 0x140007028
   14000338d:	mov    edx,0x1f5
   140003392:	mov    rcx,rdi
   140003395:	call   QWORD PTR [rip+0x3f3d]        # 0x1400072d8
   14000339b:	xor    r9d,r9d
   14000339e:	xor    r8d,r8d
   1400033a1:	mov    rcx,rax
   1400033a4:	mov    edx,0x147
   1400033a9:	mov    rbx,rax
   1400033ac:	call   QWORD PTR [rip+0x3fa6]        # 0x140007358
   1400033b2:	xor    r9d,r9d
   1400033b5:	mov    edx,0x150
   1400033ba:	mov    r8,rax
   1400033bd:	mov    rcx,rbx
   1400033c0:	call   QWORD PTR [rip+0x3f92]        # 0x140007358
   1400033c6:	mov    ecx,eax
   1400033c8:	lea    r8d,[r14+0xa]
   1400033cc:	mov    DWORD PTR [rip+0x5c82],eax        # 0x140009054
   1400033d2:	lea    rdx,[rsp+0x60]
   1400033d7:	mov    rax,QWORD PTR [rip+0x6bd2]        # 0x140009fb0
   1400033de:	mov    ecx,DWORD PTR [rax+rcx*4]
   1400033e1:	call   QWORD PTR [rip+0x4031]        # 0x140007418
   1400033e7:	lea    rcx,[rsp+0x60]
   1400033ec:	call   QWORD PTR [rip+0x3c9e]        # 0x140007090
   1400033f2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400033f7:	lea    r9d,[r14+0x1]
   1400033fb:	xor    r8d,r8d
   1400033fe:	lea    rdx,[rip+0x4143]        # 0x140007548
   140003405:	lea    eax,[rax*2+0x2]
   14000340c:	mov    DWORD PTR [rsp+0x28],eax
   140003410:	lea    rax,[rsp+0x60]
   140003415:	mov    QWORD PTR [rsp+0x20],rax
   14000341a:	call   QWORD PTR [rip+0x3c00]        # 0x140007020
   140003420:	mov    edx,0x1f6
   140003425:	mov    rcx,rdi
   140003428:	call   QWORD PTR [rip+0x3eaa]        # 0x1400072d8
   14000342e:	xor    r9d,r9d
   140003431:	xor    r8d,r8d
   140003434:	mov    rcx,rax
   140003437:	mov    edx,0x147
   14000343c:	mov    rbx,rax
   14000343f:	call   QWORD PTR [rip+0x3f13]        # 0x140007358
   140003445:	xor    r9d,r9d
   140003448:	mov    edx,0x150
   14000344d:	mov    r8,rax
   140003450:	mov    rcx,rbx
   140003453:	call   QWORD PTR [rip+0x3eff]        # 0x140007358
   140003459:	mov    ecx,eax
   14000345b:	mov    DWORD PTR [rip+0x6a6b],eax        # 0x140009ecc
   140003461:	lea    r8d,[r14+0xa]
   140003465:	lea    rdx,[rsp+0x60]
   14000346a:	call   QWORD PTR [rip+0x3fa8]        # 0x140007418
   140003470:	lea    rcx,[rsp+0x60]
   140003475:	call   QWORD PTR [rip+0x3c15]        # 0x140007090
   14000347b:	mov    rcx,QWORD PTR [rsp+0x50]
   140003480:	lea    r9d,[r14+0x1]
   140003484:	xor    r8d,r8d
   140003487:	lea    rdx,[rip+0x40da]        # 0x140007568
   14000348e:	lea    eax,[rax*2+0x2]
   140003495:	mov    DWORD PTR [rsp+0x28],eax
   140003499:	lea    rax,[rsp+0x60]
   14000349e:	mov    QWORD PTR [rsp+0x20],rax
   1400034a3:	call   QWORD PTR [rip+0x3b77]        # 0x140007020
   1400034a9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400034ae:	call   QWORD PTR [rip+0x3b64]        # 0x140007018
   1400034b4:	xor    r9d,r9d
   1400034b7:	mov    QWORD PTR [rsp+0x20],r14
   1400034bc:	mov    edx,0x1f7
   1400034c1:	mov    r8d,0xf0
   1400034c7:	mov    rcx,rdi
   1400034ca:	call   QWORD PTR [rip+0x3e18]        # 0x1400072e8
   1400034d0:	mov    ecx,r14d
   1400034d3:	lea    r9d,[r14+0x1]
   1400034d7:	test   rax,rax
   1400034da:	setne  cl
   1400034dd:	xor    r8d,r8d
   1400034e0:	mov    DWORD PTR [rsp+0x28],ecx
   1400034e4:	xor    edx,edx
   1400034e6:	lea    rcx,[rip+0x41ab]        # 0x140007698
   1400034ed:	mov    QWORD PTR [rsp+0x20],r14
   1400034f2:	call   QWORD PTR [rip+0x3ca8]        # 0x1400071a0
   1400034f8:	lea    edx,[r14+0x1]
   1400034fc:	jmp    0x14000333c
   140003501:	xor    r14d,r14d
   140003504:	cmp    DWORD PTR [rip+0x69bd],r14d        # 0x140009ec8
   14000350b:	mov    DWORD PTR [rsp+0x50],r14d
   140003510:	jne    0x14000352b
   140003512:	mov    rcx,QWORD PTR [rip+0x6a87]        # 0x140009fa0
   140003519:	lea    edx,[r14+0x3]
   14000351d:	lea    r8d,[r14+0x30]
   140003521:	call   0x140004c70
   140003526:	jmp    0x14000333a
   14000352b:	cmp    rax,0x2
   14000352f:	je     0x140003545
   140003531:	or     edx,0xffffffff
   140003534:	call   QWORD PTR [rip+0x3d9e]        # 0x1400072d8
   14000353a:	mov    rcx,rax
   14000353d:	xor    edx,edx
   14000353f:	call   QWORD PTR [rip+0x3e23]        # 0x140007368
   140003545:	mov    edx,0x1f5
   14000354a:	mov    rcx,rdi
   14000354d:	call   QWORD PTR [rip+0x3d85]        # 0x1400072d8
   140003553:	mov    rcx,rax
   140003556:	call   0x140004790
   14000355b:	mov    edx,0x1f5
   140003560:	mov    rcx,rdi
   140003563:	mov    ebx,eax
   140003565:	call   QWORD PTR [rip+0x3d6d]        # 0x1400072d8
   14000356b:	mov    rcx,rax
   14000356e:	mov    edx,ebx
   140003570:	call   QWORD PTR [rip+0x3df2]        # 0x140007368
   140003576:	test   ebx,ebx
   140003578:	je     0x1400035ad
   14000357a:	mov    edx,0x1f6
   14000357f:	mov    rcx,rdi
   140003582:	call   QWORD PTR [rip+0x3d50]        # 0x1400072d8
   140003588:	mov    edx,0x1f5
   14000358d:	mov    rcx,rdi
   140003590:	mov    rbx,rax
   140003593:	call   QWORD PTR [rip+0x3d3f]        # 0x1400072d8
   140003599:	mov    rcx,rax
   14000359c:	mov    rdx,rbx
   14000359f:	call   0x1400048dc
   1400035a4:	mov    ebx,0x1
   1400035a9:	test   eax,eax
   1400035ab:	jne    0x1400035b0
   1400035ad:	mov    ebx,r14d
   1400035b0:	mov    edx,0x1f6
   1400035b5:	mov    rcx,rdi
   1400035b8:	call   QWORD PTR [rip+0x3d1a]        # 0x1400072d8
   1400035be:	mov    rcx,rax
   1400035c1:	mov    edx,ebx
   1400035c3:	call   QWORD PTR [rip+0x3d9f]        # 0x140007368
   1400035c9:	mov    edx,0x1
   1400035ce:	mov    rcx,rdi
   1400035d1:	call   QWORD PTR [rip+0x3d01]        # 0x1400072d8
   1400035d7:	mov    rcx,rax
   1400035da:	mov    edx,ebx
   1400035dc:	call   QWORD PTR [rip+0x3d86]        # 0x140007368
   1400035e2:	mov    edx,0x1fa
   1400035e7:	mov    rcx,rdi
   1400035ea:	call   QWORD PTR [rip+0x3ce8]        # 0x1400072d8
   1400035f0:	mov    rcx,rax
   1400035f3:	mov    edx,ebx
   1400035f5:	call   QWORD PTR [rip+0x3d6d]        # 0x140007368
   1400035fb:	lea    rax,[rsp+0x50]
   140003600:	mov    r9d,0x1
   140003606:	mov    QWORD PTR [rsp+0x28],rax
   14000360b:	lea    rcx,[rip+0x4086]        # 0x140007698
   140003612:	xor    r8d,r8d
   140003615:	mov    QWORD PTR [rsp+0x20],r14
   14000361a:	xor    edx,edx
   14000361c:	call   QWORD PTR [rip+0x3b66]        # 0x140007188
   140003622:	cmp    DWORD PTR [rsp+0x50],0x1
   140003627:	mov    edx,0x1f7
   14000362c:	mov    rcx,rdi
   14000362f:	sete   r14b
   140003633:	mov    r8d,r14d
   140003636:	call   QWORD PTR [rip+0x3cc4]        # 0x140007300
   14000363c:	mov    edx,0x1f7
   140003641:	mov    rcx,rdi
   140003644:	call   QWORD PTR [rip+0x3c8e]        # 0x1400072d8
   14000364a:	mov    edx,DWORD PTR [rip+0x6b84]        # 0x14000a1d4
   140003650:	mov    rcx,rax
   140003653:	call   QWORD PTR [rip+0x3d0f]        # 0x140007368
   140003659:	xor    eax,eax
   14000365b:	jmp    0x14000368b
   14000365d:	mov    r8d,0xa
   140003663:	mov    rcx,r10
   140003666:	jmp    0x140003672
   140003668:	mov    rcx,QWORD PTR [rax+0x10]
   14000366c:	mov    r8d,0xc
   140003672:	lea    r9,[rip+0x41cf]        # 0x140007848
   140003679:	lea    rdx,[rip+0x59a0]        # 0x140009020
   140003680:	call   QWORD PTR [rip+0x3cea]        # 0x140007370
   140003686:	mov    eax,0x1
   14000368b:	mov    rcx,QWORD PTR [rbp+0x160]
   140003692:	xor    rcx,rsp
   140003695:	call   0x140005ca0
   14000369a:	mov    rbx,QWORD PTR [rsp+0x298]
   1400036a2:	add    rsp,0x270
   1400036a9:	pop    r14
   1400036ab:	pop    rdi
   1400036ac:	pop    rbp
   1400036ad:	ret    
   1400036ae:	int3   
   1400036af:	int3   
   1400036b0:	int3   
   1400036b1:	int3   
   1400036b2:	int3   
   1400036b3:	int3   
   1400036b4:	int3   
   1400036b5:	int3   
   1400036b6:	int3   
   1400036b7:	int3   
   1400036b8:	int3   
   1400036b9:	int3   
   1400036ba:	int3   
   1400036bb:	int3   
   1400036bc:	int3   
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400036c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400036ca:	push   rdi
   1400036cb:	sub    rsp,0x20
   1400036cf:	mov    rsi,rcx
   1400036d2:	sub    edx,0x110
   1400036d8:	je     0x1400036fd
   1400036da:	cmp    edx,0x1
   1400036dd:	jne    0x1400036f6
   1400036df:	mov    ebx,edx
   1400036e1:	cmp    r8w,bx
   1400036e5:	jne    0x1400036f6
   1400036e7:	mov    edx,ebx
   1400036e9:	call   QWORD PTR [rip+0x3bf1]        # 0x1400072e0
   1400036ef:	mov    eax,ebx
   1400036f1:	jmp    0x14000379c
   1400036f6:	xor    eax,eax
   1400036f8:	jmp    0x14000379c
   1400036fd:	mov    edx,0x200
   140003702:	cmp    r9,0x4
   140003706:	je     0x140003752
   140003708:	cmp    r9,0x20
   14000370c:	je     0x14000374b
   14000370e:	cmp    r9,0x40
   140003712:	je     0x140003744
   140003714:	cmp    r9,rdx
   140003717:	je     0x14000373d
   140003719:	cmp    r9,0x400
   140003720:	je     0x140003736
   140003722:	mov    edi,0x612
   140003727:	cmp    r9,0x1000
   14000372e:	lea    eax,[rdi-0x6]
   140003731:	cmovne edi,eax
   140003734:	jmp    0x140003757
   140003736:	mov    edi,0x60e
   14000373b:	jmp    0x140003757
   14000373d:	mov    edi,0x60d
   140003742:	jmp    0x140003757
   140003744:	mov    edi,0x60b
   140003749:	jmp    0x140003757
   14000374b:	mov    edi,0x60a
   140003750:	jmp    0x140003757
   140003752:	mov    edi,0x609
   140003757:	mov    ecx,0x40
   14000375c:	call   QWORD PTR [rip+0x390e]        # 0x140007070
   140003762:	mov    rcx,QWORD PTR [rip+0x6187]        # 0x1400098f0
   140003769:	mov    r9d,0x100
   14000376f:	mov    r8,rax
   140003772:	mov    edx,edi
   140003774:	mov    rbx,rax
   140003777:	call   QWORD PTR [rip+0x3b8b]        # 0x140007308
   14000377d:	mov    r8,rbx
   140003780:	mov    edx,0x515
   140003785:	mov    rcx,rsi
   140003788:	call   QWORD PTR [rip+0x3bc2]        # 0x140007350
   14000378e:	mov    rcx,rbx
   140003791:	call   QWORD PTR [rip+0x38f1]        # 0x140007088
   140003797:	mov    eax,0x1
   14000379c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400037a1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400037a6:	add    rsp,0x20
   1400037aa:	pop    rdi
   1400037ab:	ret    
   1400037ac:	int3   
   1400037ad:	int3   
   1400037ae:	int3   
   1400037af:	int3   
   1400037b0:	int3   
   1400037b1:	int3   
   1400037b2:	int3   
   1400037b3:	int3   
   1400037b4:	int3   
   1400037b5:	int3   
   1400037b6:	int3   
   1400037b7:	int3   
   1400037b8:	int3   
   1400037b9:	int3   
   1400037ba:	int3   
   1400037bb:	int3   
   1400037bc:	int3   
   1400037bd:	int3   
   1400037be:	int3   
   1400037bf:	int3   
   1400037c0:	rex push rbp
   1400037c2:	push   rbx
   1400037c3:	push   rsi
   1400037c4:	push   rdi
   1400037c5:	push   r12
   1400037c7:	push   r13
   1400037c9:	push   r14
   1400037cb:	lea    rbp,[rsp-0x230]
   1400037d3:	sub    rsp,0x330
   1400037da:	mov    rax,QWORD PTR [rip+0x5827]        # 0x140009008
   1400037e1:	xor    rax,rsp
   1400037e4:	mov    QWORD PTR [rbp+0x220],rax
   1400037eb:	mov    QWORD PTR [rsp+0x70],rcx
   1400037f0:	mov    r10,r9
   1400037f3:	mov    rax,r8
   1400037f6:	mov    rdi,rcx
   1400037f9:	sub    edx,0x53
   1400037fc:	je     0x140003e13
   140003802:	mov    r13d,0x28
   140003808:	sub    edx,r13d
   14000380b:	je     0x140003e08
   140003811:	sub    edx,0x95
   140003817:	je     0x140003bc9
   14000381d:	cmp    edx,0x1
   140003820:	jne    0x140003e04
   140003826:	movzx  ecx,ax
   140003829:	mov    r14d,edx
   14000382c:	cmp    ecx,r14d
   14000382f:	je     0x140003a46
   140003835:	cmp    ecx,0x2
   140003838:	je     0x140003a3c
   14000383e:	cmp    ecx,0x12c
   140003844:	jle    0x140003e04
   14000384a:	mov    ebx,0x13d
   14000384f:	cmp    ecx,0x134
   140003855:	jle    0x1400039b6
   14000385b:	cmp    ecx,ebx
   14000385d:	je     0x1400038e7
   140003863:	lea    esi,[rbx+0x1]
   140003866:	cmp    ecx,esi
   140003868:	jne    0x140003e04
   14000386e:	shr    rax,0x10
   140003872:	mov    ecx,0x300
   140003877:	cmp    ax,cx
   14000387a:	jne    0x140003e04
   140003880:	mov    eax,DWORD PTR [rip+0x665a]        # 0x140009ee0
   140003886:	lea    r12,[rip+0x6073]        # 0x140009900
   14000388d:	lea    r9d,[r13+0x28]
   140003891:	mov    edx,esi
   140003893:	mov    rcx,rdi
   140003896:	lea    r8,[rax+rax*4]
   14000389a:	shl    r8,0x5
   14000389e:	add    r8,r12
   1400038a1:	call   QWORD PTR [rip+0x3aa1]        # 0x140007348
   1400038a7:	mov    eax,DWORD PTR [rip+0x6633]        # 0x140009ee0
   1400038ad:	xor    esi,esi
   1400038af:	lea    r8,[rax+rax*4]
   1400038b3:	shl    r8,0x5
   1400038b7:	cmp    WORD PTR [r8+r12*1],si
   1400038bc:	jne    0x140003e04
   1400038c2:	mov    r9d,r13d
   1400038c5:	lea    r8,[rbp-0x80]
   1400038c9:	mov    edx,ebx
   1400038cb:	mov    rcx,rdi
   1400038ce:	call   QWORD PTR [rip+0x3a74]        # 0x140007348
   1400038d4:	cmp    WORD PTR [rbp-0x80],si
   1400038d8:	jne    0x140003e04
   1400038de:	lea    r8,[rbp-0x80]
   1400038e2:	jmp    0x14000399c
   1400038e7:	shr    rax,0x10
   1400038eb:	mov    ecx,0x300
   1400038f0:	cmp    ax,cx
   1400038f3:	jne    0x140003e04
   1400038f9:	mov    r9d,r13d
   1400038fc:	lea    r8,[rbp-0x80]
   140003900:	mov    edx,ebx
   140003902:	mov    rcx,rdi
   140003905:	call   QWORD PTR [rip+0x3a3d]        # 0x140007348
   14000390b:	cmp    WORD PTR [rbp-0x80],0x20
   140003910:	lea    rbx,[rbp-0x80]
   140003914:	jne    0x140003920
   140003916:	add    rbx,0x2
   14000391a:	cmp    WORD PTR [rbx],0x20
   14000391e:	je     0x140003916
   140003920:	mov    r14d,DWORD PTR [rip+0x65b9]        # 0x140009ee0
   140003927:	lea    r13,[rip+0x5cf2]        # 0x140009620
   14000392e:	xor    esi,esi
   140003930:	lea    edx,[rsi+0x50]
   140003933:	cmp    WORD PTR [rbx],si
   140003936:	jne    0x140003966
   140003938:	lea    rax,[r14+r14*4]
   14000393c:	add    rax,rax
   14000393f:	lea    r8,[r14+r14*4]
   140003943:	shl    r8,0x5
   140003947:	lea    r12,[rip+0x5fb2]        # 0x140009900
   14000394e:	add    r8,r12
   140003951:	lea    rcx,[rbp-0x80]
   140003955:	mov    WORD PTR [r13+rax*8+0x0],si
   14000395b:	call   0x140001008
   140003960:	lea    rbx,[rbp-0x80]
   140003964:	jmp    0x140003979
   140003966:	lea    rcx,[r14+r14*4]
   14000396a:	mov    r8,rbx
   14000396d:	shl    rcx,0x4
   140003971:	add    rcx,r13
   140003974:	call   0x140001008
   140003979:	lea    edx,[r14+0x12c]
   140003980:	mov    rcx,rdi
   140003983:	lea    r8,[rbp-0x80]
   140003987:	call   0x140004f2c
   14000398c:	lea    rdx,[rbp-0x30]
   140003990:	mov    rcx,rbx
   140003993:	call   0x140005894
   140003998:	lea    r8,[rbp-0x30]
   14000399c:	mov    edx,DWORD PTR [rip+0x653e]        # 0x140009ee0
   1400039a2:	mov    rcx,rdi
   1400039a5:	add    edx,0x12c
   1400039ab:	call   QWORD PTR [rip+0x399f]        # 0x140007350
   1400039b1:	jmp    0x140003e04
   1400039b6:	lea    eax,[rcx-0x12c]
   1400039bc:	mov    edx,ebx
   1400039be:	lea    r8,[rax+rax*4]
   1400039c2:	mov    DWORD PTR [rip+0x6518],eax        # 0x140009ee0
   1400039c8:	shl    r8,0x4
   1400039cc:	lea    r13,[rip+0x5c4d]        # 0x140009620
   1400039d3:	add    r8,r13
   1400039d6:	mov    rcx,rdi
   1400039d9:	call   QWORD PTR [rip+0x3971]        # 0x140007350
   1400039df:	mov    eax,DWORD PTR [rip+0x64fb]        # 0x140009ee0
   1400039e5:	lea    r12,[rip+0x5f14]        # 0x140009900
   1400039ec:	mov    edx,0x13e
   1400039f1:	mov    rcx,rdi
   1400039f4:	lea    r8,[rax+rax*4]
   1400039f8:	shl    r8,0x5
   1400039fc:	add    r8,r12
   1400039ff:	call   QWORD PTR [rip+0x394b]        # 0x140007350
   140003a05:	mov    edx,ebx
   140003a07:	mov    rcx,rdi
   140003a0a:	call   QWORD PTR [rip+0x38c8]        # 0x1400072d8
   140003a10:	mov    rcx,rax
   140003a13:	call   QWORD PTR [rip+0x3867]        # 0x140007280
   140003a19:	mov    eax,0xffff0000
   140003a1e:	xor    r9d,r9d
   140003a21:	mov    r8d,0xb1
   140003a27:	mov    QWORD PTR [rsp+0x20],rax
   140003a2c:	mov    edx,ebx
   140003a2e:	mov    rcx,rdi
   140003a31:	call   QWORD PTR [rip+0x38b1]        # 0x1400072e8
   140003a37:	jmp    0x140003e04
   140003a3c:	xor    edx,edx
   140003a3e:	mov    rcx,rdi
   140003a41:	jmp    0x140003bbb
   140003a46:	xor    esi,esi
   140003a48:	lea    rax,[rsp+0x58]
   140003a4d:	mov    QWORD PTR [rsp+0x40],rsi
   140003a52:	lea    rdx,[rip+0x3a87]        # 0x1400074e0
   140003a59:	mov    QWORD PTR [rsp+0x38],rax
   140003a5e:	xor    r9d,r9d
   140003a61:	mov    QWORD PTR [rsp+0x30],rsi
   140003a66:	xor    r8d,r8d
   140003a69:	mov    DWORD PTR [rsp+0x28],0x20006
   140003a71:	mov    rcx,0xffffffff80000001
   140003a78:	mov    DWORD PTR [rsp+0x20],esi
   140003a7c:	mov    QWORD PTR [rsp+0x58],rsi
   140003a81:	call   QWORD PTR [rip+0x35a1]        # 0x140007028
   140003a87:	mov    edi,r14d
   140003a8a:	lea    r12,[rip+0x5e6f]        # 0x140009900
   140003a91:	lea    r13,[rip+0x5b88]        # 0x140009620
   140003a98:	mov    r9d,edi
   140003a9b:	lea    r8,[rip+0x3b4e]        # 0x1400075f0
   140003aa2:	mov    edx,0x200
   140003aa7:	lea    rcx,[rbp+0x20]
   140003aab:	call   0x140001154
   140003ab0:	mov    ebx,edi
   140003ab2:	lea    rax,[rbx+rbx*4]
   140003ab6:	shl    rax,0x4
   140003aba:	add    rax,r13
   140003abd:	mov    rcx,rax
   140003ac0:	mov    QWORD PTR [rsp+0x68],rax
   140003ac5:	call   QWORD PTR [rip+0x35c5]        # 0x140007090
   140003acb:	mov    rcx,QWORD PTR [rsp+0x58]
   140003ad0:	lea    rdx,[rbp+0x20]
   140003ad4:	mov    r9d,r14d
   140003ad7:	xor    r8d,r8d
   140003ada:	lea    eax,[rax*2+0x2]
   140003ae1:	mov    DWORD PTR [rsp+0x28],eax
   140003ae5:	mov    rax,QWORD PTR [rsp+0x68]
   140003aea:	mov    QWORD PTR [rsp+0x20],rax
   140003aef:	call   QWORD PTR [rip+0x352b]        # 0x140007020
   140003af5:	mov    r9d,edi
   140003af8:	lea    r8,[rip+0x3ad9]        # 0x1400075d8
   140003aff:	mov    edx,0x200
   140003b04:	lea    rcx,[rbp+0x20]
   140003b08:	call   0x140001154
   140003b0d:	lea    rbx,[rbx+rbx*4]
   140003b11:	shl    rbx,0x5
   140003b15:	add    rbx,r12
   140003b18:	mov    rcx,rbx
   140003b1b:	call   QWORD PTR [rip+0x356f]        # 0x140007090
   140003b21:	mov    rcx,QWORD PTR [rsp+0x58]
   140003b26:	lea    rdx,[rbp+0x20]
   140003b2a:	mov    r9d,r14d
   140003b2d:	xor    r8d,r8d
   140003b30:	lea    eax,[rax*2+0x2]
   140003b37:	mov    DWORD PTR [rsp+0x28],eax
   140003b3b:	mov    QWORD PTR [rsp+0x20],rbx
   140003b40:	call   QWORD PTR [rip+0x34da]        # 0x140007020
   140003b46:	mov    rax,QWORD PTR [rsp+0x68]
   140003b4b:	lea    rcx,[rbp-0x80]
   140003b4f:	mov    edx,0x50
   140003b54:	mov    r8,rbx
   140003b57:	cmp    WORD PTR [rax],si
   140003b5a:	je     0x140003b5f
   140003b5c:	mov    r8,rax
   140003b5f:	call   0x140001008
   140003b64:	mov    rcx,QWORD PTR [rip+0x6435]        # 0x140009fa0
   140003b6b:	lea    ebx,[rdi+0xd5]
   140003b71:	mov    edx,ebx
   140003b73:	lea    r8,[rbp-0x80]
   140003b77:	call   0x140004f2c
   140003b7c:	lea    rdx,[rbp-0x30]
   140003b80:	lea    rcx,[rbp-0x80]
   140003b84:	call   0x140005894
   140003b89:	mov    rcx,QWORD PTR [rip+0x6410]        # 0x140009fa0
   140003b90:	lea    r8,[rbp-0x30]
   140003b94:	mov    edx,ebx
   140003b96:	call   QWORD PTR [rip+0x37b4]        # 0x140007350
   140003b9c:	add    edi,r14d
   140003b9f:	cmp    edi,0x8
   140003ba2:	jbe    0x140003a98
   140003ba8:	mov    rcx,QWORD PTR [rsp+0x58]
   140003bad:	call   QWORD PTR [rip+0x3465]        # 0x140007018
   140003bb3:	mov    rcx,QWORD PTR [rsp+0x70]
   140003bb8:	mov    rdx,r14
   140003bbb:	call   QWORD PTR [rip+0x371f]        # 0x1400072e0
   140003bc1:	mov    rax,r14
   140003bc4:	jmp    0x140003e36
   140003bc9:	xor    esi,esi
   140003bcb:	lea    rcx,[rbp-0x7e]
   140003bcf:	or     ebx,0xffffffff
   140003bd2:	mov    WORD PTR [rbp-0x80],si
   140003bd6:	xor    edx,edx
   140003bd8:	mov    DWORD PTR [rsp+0x58],ebx
   140003bdc:	lea    r8d,[rsi+0x4e]
   140003be0:	call   0x140006336
   140003be5:	lea    rax,[rsp+0x68]
   140003bea:	mov    QWORD PTR [rsp+0x68],rsi
   140003bef:	mov    r9d,0x20019
   140003bf5:	mov    QWORD PTR [rsp+0x20],rax
   140003bfa:	xor    r8d,r8d
   140003bfd:	lea    rdx,[rip+0x38dc]        # 0x1400074e0
   140003c04:	mov    rcx,0xffffffff80000001
   140003c0b:	call   QWORD PTR [rip+0x33ff]        # 0x140007010
   140003c11:	lea    r14d,[rsi+0x1]
   140003c15:	mov    eax,r14d
   140003c18:	lea    r12,[rip+0x5ce1]        # 0x140009900
   140003c1f:	mov    DWORD PTR [rsp+0x50],eax
   140003c23:	lea    r13,[rip+0x59f6]        # 0x140009620
   140003c2a:	mov    r9d,eax
   140003c2d:	lea    r8,[rip+0x39bc]        # 0x1400075f0
   140003c34:	mov    edx,0x200
   140003c39:	lea    rcx,[rbp+0x20]
   140003c3d:	call   0x140001154
   140003c42:	mov    eax,DWORD PTR [rsp+0x50]
   140003c46:	lea    rcx,[rsp+0x60]
   140003c4b:	mov    QWORD PTR [rsp+0x28],rcx
   140003c50:	lea    rdx,[rbp+0x20]
   140003c54:	mov    rcx,QWORD PTR [rsp+0x68]
   140003c59:	xor    r9d,r9d
   140003c5c:	xor    r8d,r8d
   140003c5f:	mov    DWORD PTR [rsp+0x60],0x50
   140003c67:	lea    rax,[rax+rax*4]
   140003c6b:	shl    rax,0x4
   140003c6f:	add    rax,r13
   140003c72:	mov    QWORD PTR [rsp+0x70],rax
   140003c77:	mov    QWORD PTR [rsp+0x20],rax
   140003c7c:	call   QWORD PTR [rip+0x337e]        # 0x140007000
   140003c82:	cmp    ebx,0xffffffff
   140003c85:	jne    0x140003cab
   140003c87:	mov    rax,QWORD PTR [rsp+0x70]
   140003c8c:	cmp    WORD PTR [rax],si
   140003c8f:	jne    0x140003cab
   140003c91:	mov    eax,DWORD PTR [rsp+0x50]
   140003c95:	lea    rax,[rax+rax*4]
   140003c99:	shl    rax,0x5
   140003c9d:	cmp    WORD PTR [rax+r12*1],si
   140003ca2:	cmove  ebx,DWORD PTR [rsp+0x50]
   140003ca7:	mov    DWORD PTR [rsp+0x58],ebx
   140003cab:	mov    ebx,DWORD PTR [rsp+0x50]
   140003caf:	lea    r8,[rip+0x3922]        # 0x1400075d8
   140003cb6:	mov    r9d,ebx
   140003cb9:	lea    rcx,[rbp+0x20]
   140003cbd:	mov    edx,0x200
   140003cc2:	call   0x140001154
   140003cc7:	lea    rcx,[rsp+0x60]
   140003ccc:	mov    eax,ebx
   140003cce:	mov    QWORD PTR [rsp+0x28],rcx
   140003cd3:	lea    rdx,[rbp+0x20]
   140003cd7:	mov    rcx,QWORD PTR [rsp+0x68]
   140003cdc:	xor    r9d,r9d
   140003cdf:	xor    r8d,r8d
   140003ce2:	mov    DWORD PTR [rsp+0x60],0xa0
   140003cea:	lea    rax,[rax+rax*4]
   140003cee:	shl    rax,0x5
   140003cf2:	add    rax,r12
   140003cf5:	mov    QWORD PTR [rsp+0x78],rax
   140003cfa:	mov    QWORD PTR [rsp+0x20],rax
   140003cff:	call   QWORD PTR [rip+0x32fb]        # 0x140007000
   140003d05:	mov    rax,QWORD PTR [rsp+0x70]
   140003d0a:	lea    rcx,[rbp-0x80]
   140003d0e:	mov    edx,0x50
   140003d13:	mov    r8,rax
   140003d16:	cmp    si,WORD PTR [rax]
   140003d19:	jne    0x140003d20
   140003d1b:	mov    r8,QWORD PTR [rsp+0x78]
   140003d20:	call   0x140001008
   140003d25:	lea    r8,[rbp-0x80]
   140003d29:	mov    rcx,rdi
   140003d2c:	lea    edx,[rbx+0x12c]
   140003d32:	call   0x140004f2c
   140003d37:	lea    rdx,[rbp-0x30]
   140003d3b:	lea    rcx,[rbp-0x80]
   140003d3f:	call   0x140005894
   140003d44:	lea    r8,[rbp-0x30]
   140003d48:	mov    rcx,rdi
   140003d4b:	lea    edx,[rbx+0x12c]
   140003d51:	call   QWORD PTR [rip+0x35f9]        # 0x140007350
   140003d57:	mov    eax,ebx
   140003d59:	mov    ebx,DWORD PTR [rsp+0x58]
   140003d5d:	add    eax,r14d
   140003d60:	mov    DWORD PTR [rsp+0x50],eax
   140003d64:	cmp    eax,0x8
   140003d67:	jbe    0x140003c2a
   140003d6d:	mov    rcx,QWORD PTR [rsp+0x68]
   140003d72:	call   QWORD PTR [rip+0x32a0]        # 0x140007018
   140003d78:	mov    ebx,0x13d
   140003d7d:	mov    QWORD PTR [rsp+0x20],rsi
   140003d82:	mov    r9d,0x27
   140003d88:	mov    edx,ebx
   140003d8a:	mov    rcx,rdi
   140003d8d:	lea    r8d,[rbx-0x78]
   140003d91:	call   QWORD PTR [rip+0x3551]        # 0x1400072e8
   140003d97:	mov    QWORD PTR [rsp+0x20],rsi
   140003d9c:	lea    r8d,[rbx-0x78]
   140003da0:	lea    esi,[rbx+0x1]
   140003da3:	mov    r9d,0x4f
   140003da9:	mov    edx,esi
   140003dab:	mov    rcx,rdi
   140003dae:	call   QWORD PTR [rip+0x3534]        # 0x1400072e8
   140003db4:	mov    eax,DWORD PTR [rsp+0x58]
   140003db8:	cmp    eax,0xffffffff
   140003dbb:	jne    0x140003dea
   140003dbd:	lea    r8,[rip+0x58ac]        # 0x140009670
   140003dc4:	mov    DWORD PTR [rip+0x6115],r14d        # 0x140009ee0
   140003dcb:	mov    edx,ebx
   140003dcd:	mov    rcx,rdi
   140003dd0:	call   QWORD PTR [rip+0x357a]        # 0x140007350
   140003dd6:	lea    r8,[rip+0x5bc3]        # 0x1400099a0
   140003ddd:	mov    edx,esi
   140003ddf:	mov    rcx,rdi
   140003de2:	call   QWORD PTR [rip+0x3568]        # 0x140007350
   140003de8:	jmp    0x140003df0
   140003dea:	mov    DWORD PTR [rip+0x60f0],eax        # 0x140009ee0
   140003df0:	mov    edx,ebx
   140003df2:	mov    rcx,rdi
   140003df5:	call   QWORD PTR [rip+0x34dd]        # 0x1400072d8
   140003dfb:	mov    rcx,rax
   140003dfe:	call   QWORD PTR [rip+0x347c]        # 0x140007280
   140003e04:	xor    eax,eax
   140003e06:	jmp    0x140003e36
   140003e08:	mov    r8d,0xa
   140003e0e:	mov    rcx,rax
   140003e11:	jmp    0x140003e1d
   140003e13:	mov    rcx,QWORD PTR [r10+0x10]
   140003e17:	mov    r8d,0xc
   140003e1d:	lea    r9,[rip+0x3a9c]        # 0x1400078c0
   140003e24:	lea    rdx,[rip+0x51f5]        # 0x140009020
   140003e2b:	call   QWORD PTR [rip+0x353f]        # 0x140007370
   140003e31:	mov    eax,0x1
   140003e36:	mov    rcx,QWORD PTR [rbp+0x220]
   140003e3d:	xor    rcx,rsp
   140003e40:	call   0x140005ca0
   140003e45:	add    rsp,0x330
   140003e4c:	pop    r14
   140003e4e:	pop    r13
   140003e50:	pop    r12
   140003e52:	pop    rdi
   140003e53:	pop    rsi
   140003e54:	pop    rbx
   140003e55:	pop    rbp
   140003e56:	ret    
   140003e57:	int3   
   140003e58:	int3   
   140003e59:	int3   
   140003e5a:	int3   
   140003e5b:	int3   
   140003e5c:	int3   
   140003e5d:	int3   
   140003e5e:	int3   
   140003e5f:	int3   
   140003e60:	mov    QWORD PTR [rsp+0x10],rbx
   140003e65:	push   rbp
   140003e66:	push   rsi
   140003e67:	push   rdi
   140003e68:	push   r12
   140003e6a:	push   r13
   140003e6c:	push   r14
   140003e6e:	push   r15
   140003e70:	lea    rbp,[rsp-0x260]
   140003e78:	sub    rsp,0x360
   140003e7f:	mov    rax,QWORD PTR [rip+0x5182]        # 0x140009008
   140003e86:	xor    rax,rsp
   140003e89:	mov    QWORD PTR [rbp+0x250],rax
   140003e90:	mov    rbx,r9
   140003e93:	mov    r14,r8
   140003e96:	mov    r15,rcx
   140003e99:	sub    edx,0x53
   140003e9c:	je     0x140004335
   140003ea2:	sub    edx,0x28
   140003ea5:	je     0x14000432a
   140003eab:	sub    edx,0x95
   140003eb1:	je     0x1400041e0
   140003eb7:	cmp    edx,0x1
   140003eba:	jne    0x140004326
   140003ec0:	movzx  eax,r8w
   140003ec4:	mov    ebx,edx
   140003ec6:	mov    esi,0x191
   140003ecb:	cmp    eax,ebx
   140003ecd:	je     0x140003f34
   140003ecf:	cmp    eax,0x2
   140003ed2:	je     0x140003f2d
   140003ed4:	cmp    eax,esi
   140003ed6:	je     0x140003f34
   140003ed8:	add    eax,0xfffffe6e
   140003edd:	cmp    eax,ebx
   140003edf:	ja     0x140004326
   140003ee5:	shr    r14,0x10
   140003ee9:	mov    eax,0x300
   140003eee:	cmp    r14w,ax
   140003ef2:	jne    0x140004326
   140003ef8:	lea    edx,[rsi+0x2]
   140003efb:	call   QWORD PTR [rip+0x33d7]        # 0x1400072d8
   140003f01:	mov    rcx,rax
   140003f04:	call   QWORD PTR [rip+0x3356]        # 0x140007260
   140003f0a:	xor    edi,edi
   140003f0c:	mov    edx,esi
   140003f0e:	test   eax,eax
   140003f10:	mov    rcx,r15
   140003f13:	setg   dil
   140003f17:	call   QWORD PTR [rip+0x33bb]        # 0x1400072d8
   140003f1d:	mov    rcx,rax
   140003f20:	mov    edx,edi
   140003f22:	call   QWORD PTR [rip+0x3440]        # 0x140007368
   140003f28:	jmp    0x140004326
   140003f2d:	xor    edx,edx
   140003f2f:	jmp    0x1400041d2
   140003f34:	xor    edi,edi
   140003f36:	lea    rax,[rsp+0x50]
   140003f3b:	mov    QWORD PTR [rsp+0x40],rdi
   140003f40:	lea    rdx,[rip+0x3599]        # 0x1400074e0
   140003f47:	mov    QWORD PTR [rsp+0x38],rax
   140003f4c:	xor    r9d,r9d
   140003f4f:	mov    QWORD PTR [rsp+0x30],rdi
   140003f54:	xor    r8d,r8d
   140003f57:	mov    DWORD PTR [rsp+0x28],0x20006
   140003f5f:	mov    rcx,0xffffffff80000001
   140003f66:	mov    DWORD PTR [rsp+0x20],edi
   140003f6a:	mov    QWORD PTR [rsp+0x50],rdi
   140003f6f:	call   QWORD PTR [rip+0x30b3]        # 0x140007028
   140003f75:	lea    r9d,[rdi+0x50]
   140003f79:	mov    edx,0x193
   140003f7e:	lea    r8,[rbp-0x50]
   140003f82:	mov    rcx,r15
   140003f85:	call   QWORD PTR [rip+0x33bd]        # 0x140007348
   140003f8b:	mov    r12w,0x20
   140003f90:	lea    r8,[rbp-0x50]
   140003f94:	cmp    WORD PTR [rbp-0x50],r12w
   140003f99:	jne    0x140003fa5
   140003f9b:	add    r8,0x2
   140003f9f:	cmp    WORD PTR [r8],r12w
   140003fa3:	je     0x140003f9b
   140003fa5:	cmp    di,WORD PTR [r8]
   140003fa9:	jne    0x140004008
   140003fab:	mov    r9d,DWORD PTR [rip+0x5f32]        # 0x140009ee4
   140003fb2:	lea    r8,[rip+0x3637]        # 0x1400075f0
   140003fb9:	mov    r12d,0x200
   140003fbf:	lea    rcx,[rbp+0x50]
   140003fc3:	mov    edx,r12d
   140003fc6:	call   0x140001154
   140003fcb:	mov    rcx,QWORD PTR [rsp+0x50]
   140003fd0:	lea    rdx,[rbp+0x50]
   140003fd4:	call   QWORD PTR [rip+0x302e]        # 0x140007008
   140003fda:	mov    r9d,DWORD PTR [rip+0x5f03]        # 0x140009ee4
   140003fe1:	lea    r8,[rip+0x35f0]        # 0x1400075d8
   140003fe8:	mov    edx,r12d
   140003feb:	lea    rcx,[rbp+0x50]
   140003fef:	call   0x140001154
   140003ff4:	mov    rcx,QWORD PTR [rsp+0x50]
   140003ff9:	lea    rdx,[rbp+0x50]
   140003ffd:	call   QWORD PTR [rip+0x3005]        # 0x140007008
   140004003:	jmp    0x1400041c1
   140004008:	mov    eax,DWORD PTR [rip+0x5ed6]        # 0x140009ee4
   14000400e:	lea    r13,[rip+0x58eb]        # 0x140009900
   140004015:	mov    edx,0xa0
   14000401a:	lea    rcx,[rax+rax*4]
   14000401e:	shl    rcx,0x5
   140004022:	add    rcx,r13
   140004025:	call   0x140001008
   14000402a:	mov    r9d,0x28
   140004030:	lea    r8,[rbp-0x50]
   140004034:	mov    edx,0x192
   140004039:	mov    rcx,r15
   14000403c:	call   QWORD PTR [rip+0x3306]        # 0x140007348
   140004042:	lea    rsi,[rbp-0x50]
   140004046:	cmp    WORD PTR [rbp-0x50],r12w
   14000404b:	jne    0x140004057
   14000404d:	add    rsi,0x2
   140004051:	cmp    WORD PTR [rsi],r12w
   140004055:	je     0x14000404d
   140004057:	mov    r9d,DWORD PTR [rip+0x5e86]        # 0x140009ee4
   14000405e:	lea    r8,[rip+0x358b]        # 0x1400075f0
   140004065:	mov    r12d,0x200
   14000406b:	lea    rcx,[rbp+0x50]
   14000406f:	mov    edx,r12d
   140004072:	call   0x140001154
   140004077:	mov    rcx,rsi
   14000407a:	call   QWORD PTR [rip+0x3010]        # 0x140007090
   140004080:	mov    rcx,QWORD PTR [rsp+0x50]
   140004085:	lea    rdx,[rbp+0x50]
   140004089:	mov    r9d,ebx
   14000408c:	xor    r8d,r8d
   14000408f:	lea    eax,[rax*2+0x2]
   140004096:	mov    DWORD PTR [rsp+0x28],eax
   14000409a:	mov    QWORD PTR [rsp+0x20],rsi
   14000409f:	call   QWORD PTR [rip+0x2f7b]        # 0x140007020
   1400040a5:	mov    r9d,DWORD PTR [rip+0x5e38]        # 0x140009ee4
   1400040ac:	lea    r8,[rip+0x3525]        # 0x1400075d8
   1400040b3:	mov    edx,r12d
   1400040b6:	lea    rcx,[rbp+0x50]
   1400040ba:	call   0x140001154
   1400040bf:	mov    eax,DWORD PTR [rip+0x5e1f]        # 0x140009ee4
   1400040c5:	lea    rcx,[rax+rax*4]
   1400040c9:	shl    rcx,0x5
   1400040cd:	add    rcx,r13
   1400040d0:	call   QWORD PTR [rip+0x2fba]        # 0x140007090
   1400040d6:	mov    r9d,ebx
   1400040d9:	xor    r8d,r8d
   1400040dc:	lea    edx,[rax*2+0x2]
   1400040e3:	mov    eax,DWORD PTR [rip+0x5dfb]        # 0x140009ee4
   1400040e9:	mov    DWORD PTR [rsp+0x28],edx
   1400040ed:	lea    rdx,[rbp+0x50]
   1400040f1:	lea    rcx,[rax+rax*4]
   1400040f5:	shl    rcx,0x5
   1400040f9:	add    rcx,r13
   1400040fc:	mov    QWORD PTR [rsp+0x20],rcx
   140004101:	mov    rcx,QWORD PTR [rsp+0x50]
   140004106:	call   QWORD PTR [rip+0x2f14]        # 0x140007020
   14000410c:	mov    r12d,DWORD PTR [rip+0x5dd1]        # 0x140009ee4
   140004113:	cmp    WORD PTR [rsi],di
   140004116:	jne    0x140004135
   140004118:	lea    r8,[r12+r12*4]
   14000411c:	mov    edx,0xa0
   140004121:	shl    r8,0x5
   140004125:	lea    rcx,[rbp-0x50]
   140004129:	add    r8,r13
   14000412c:	call   0x140001008
   140004131:	lea    rsi,[rbp-0x50]
   140004135:	mov    rcx,QWORD PTR [rip+0x5e64]        # 0x140009fa0
   14000413c:	lea    edx,[r12+0xd5]
   140004144:	mov    r8,rsi
   140004147:	call   0x140004f2c
   14000414c:	lea    rdx,[rsp+0x60]
   140004151:	mov    rcx,rsi
   140004154:	call   0x140005894
   140004159:	mov    edx,DWORD PTR [rip+0x5d85]        # 0x140009ee4
   14000415f:	lea    r8,[rsp+0x60]
   140004164:	mov    rcx,QWORD PTR [rip+0x5e35]        # 0x140009fa0
   14000416b:	add    edx,0xd5
   140004171:	call   QWORD PTR [rip+0x31d9]        # 0x140007350
   140004177:	mov    eax,0x191
   14000417c:	cmp    r14w,ax
   140004180:	jne    0x1400041c1
   140004182:	mov    edx,DWORD PTR [rip+0x5d5c]        # 0x140009ee4
   140004188:	mov    rcx,QWORD PTR [rip+0x5e11]        # 0x140009fa0
   14000418f:	add    edx,0xd5
   140004195:	call   QWORD PTR [rip+0x313d]        # 0x1400072d8
   14000419b:	mov    ecx,0xd5
   1400041a0:	mov    r9,rax
   1400041a3:	movzx  eax,WORD PTR [rip+0x5d3a]        # 0x140009ee4
   1400041aa:	add    ax,cx
   1400041ad:	movzx  r8d,ax
   1400041b1:	lea    edx,[rcx+0x3c]
   1400041b4:	mov    rcx,QWORD PTR [rip+0x5de5]        # 0x140009fa0
   1400041bb:	call   QWORD PTR [rip+0x3067]        # 0x140007228
   1400041c1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400041c6:	call   QWORD PTR [rip+0x2e4c]        # 0x140007018
   1400041cc:	mov    rdx,rbx
   1400041cf:	mov    rcx,r15
   1400041d2:	call   QWORD PTR [rip+0x3108]        # 0x1400072e0
   1400041d8:	mov    rax,rbx
   1400041db:	jmp    0x140004358
   1400041e0:	xor    edi,edi
   1400041e2:	lea    rcx,[rsp+0x62]
   1400041e7:	xor    edx,edx
   1400041e9:	mov    WORD PTR [rsp+0x60],di
   1400041ee:	lea    r8d,[rdi+0x4e]
   1400041f2:	call   0x140006336
   1400041f7:	movzx  eax,bx
   1400041fa:	lea    rdx,[rip+0x32df]        # 0x1400074e0
   140004201:	sub    eax,0xd5
   140004206:	mov    QWORD PTR [rsp+0x58],rdi
   14000420b:	mov    DWORD PTR [rip+0x5cd3],eax        # 0x140009ee4
   140004211:	mov    r9d,0x20019
   140004217:	lea    rax,[rsp+0x58]
   14000421c:	xor    r8d,r8d
   14000421f:	mov    rcx,0xffffffff80000001
   140004226:	mov    QWORD PTR [rsp+0x20],rax
   14000422b:	call   QWORD PTR [rip+0x2ddf]        # 0x140007010
   140004231:	mov    r9d,DWORD PTR [rip+0x5cac]        # 0x140009ee4
   140004238:	lea    r8,[rip+0x33b1]        # 0x1400075f0
   14000423f:	mov    edx,0x200
   140004244:	lea    rcx,[rbp+0x50]
   140004248:	call   0x140001154
   14000424d:	mov    rcx,QWORD PTR [rsp+0x58]
   140004252:	lea    rax,[rsp+0x50]
   140004257:	mov    QWORD PTR [rsp+0x28],rax
   14000425c:	lea    rdx,[rbp+0x50]
   140004260:	lea    rax,[rsp+0x60]
   140004265:	mov    DWORD PTR [rsp+0x50],0x50
   14000426d:	xor    r9d,r9d
   140004270:	mov    QWORD PTR [rsp+0x20],rax
   140004275:	xor    r8d,r8d
   140004278:	call   QWORD PTR [rip+0x2d82]        # 0x140007000
   14000427e:	mov    rcx,QWORD PTR [rsp+0x58]
   140004283:	call   QWORD PTR [rip+0x2d8f]        # 0x140007018
   140004289:	mov    esi,0x192
   14000428e:	lea    r8,[rsp+0x60]
   140004293:	mov    edx,esi
   140004295:	mov    rcx,r15
   140004298:	call   QWORD PTR [rip+0x30b2]        # 0x140007350
   14000429e:	mov    eax,DWORD PTR [rip+0x5c40]        # 0x140009ee4
   1400042a4:	lea    r13,[rip+0x5655]        # 0x140009900
   1400042ab:	lea    edx,[rsi+0x1]
   1400042ae:	mov    rcx,r15
   1400042b1:	lea    r8,[rax+rax*4]
   1400042b5:	shl    r8,0x5
   1400042b9:	add    r8,r13
   1400042bc:	call   QWORD PTR [rip+0x308e]        # 0x140007350
   1400042c2:	mov    ebx,0xc5
   1400042c7:	mov    QWORD PTR [rsp+0x20],rdi
   1400042cc:	mov    r8d,ebx
   1400042cf:	lea    r9d,[rdi+0x27]
   1400042d3:	mov    edx,esi
   1400042d5:	mov    rcx,r15
   1400042d8:	call   QWORD PTR [rip+0x300a]        # 0x1400072e8
   1400042de:	lea    r9d,[rdi+0x4f]
   1400042e2:	mov    QWORD PTR [rsp+0x20],rdi
   1400042e7:	mov    r8d,ebx
   1400042ea:	lea    edx,[rsi+0x1]
   1400042ed:	mov    rcx,r15
   1400042f0:	call   QWORD PTR [rip+0x2ff2]        # 0x1400072e8
   1400042f6:	mov    edx,esi
   1400042f8:	mov    rcx,r15
   1400042fb:	call   QWORD PTR [rip+0x2fd7]        # 0x1400072d8
   140004301:	mov    rcx,rax
   140004304:	call   QWORD PTR [rip+0x2f76]        # 0x140007280
   14000430a:	mov    eax,0xffff0000
   14000430f:	lea    r8d,[rbx-0x14]
   140004313:	xor    r9d,r9d
   140004316:	mov    QWORD PTR [rsp+0x20],rax
   14000431b:	mov    edx,esi
   14000431d:	mov    rcx,r15
   140004320:	call   QWORD PTR [rip+0x2fc2]        # 0x1400072e8
   140004326:	xor    eax,eax
   140004328:	jmp    0x140004358
   14000432a:	mov    r8d,0xa
   140004330:	mov    rcx,r14
   140004333:	jmp    0x14000433f
   140004335:	mov    rcx,QWORD PTR [rbx+0x10]
   140004339:	mov    r8d,0xc
   14000433f:	lea    r9,[rip+0x353a]        # 0x140007880
   140004346:	lea    rdx,[rip+0x4cd3]        # 0x140009020
   14000434d:	call   QWORD PTR [rip+0x301d]        # 0x140007370
   140004353:	mov    eax,0x1
   140004358:	mov    rcx,QWORD PTR [rbp+0x250]
   14000435f:	xor    rcx,rsp
   140004362:	call   0x140005ca0
   140004367:	mov    rbx,QWORD PTR [rsp+0x3a8]
   14000436f:	add    rsp,0x360
   140004376:	pop    r15
   140004378:	pop    r14
   14000437a:	pop    r13
   14000437c:	pop    r12
   14000437e:	pop    rdi
   14000437f:	pop    rsi
   140004380:	pop    rbp
   140004381:	ret    
   140004382:	int3   
   140004383:	int3   
   140004384:	int3   
   140004385:	int3   
   140004386:	int3   
   140004387:	int3   
   140004388:	int3   
   140004389:	int3   
   14000438a:	int3   
   14000438b:	int3   
   14000438c:	int3   
   14000438d:	int3   
   14000438e:	int3   
   14000438f:	int3   
   140004390:	rex push rbx
   140004392:	push   rbp
   140004393:	push   rsi
   140004394:	push   rdi
   140004395:	sub    rsp,0x278
   14000439c:	mov    rax,QWORD PTR [rip+0x4c65]        # 0x140009008
   1400043a3:	xor    rax,rsp
   1400043a6:	mov    QWORD PTR [rsp+0x260],rax
   1400043ae:	mov    edi,DWORD PTR [rsp+0x2c0]
   1400043b5:	mov    ebx,r9d
   1400043b8:	mov    r9d,DWORD PTR [rsp+0x2c8]
   1400043c0:	mov    eax,r8d
   1400043c3:	mov    ebp,ecx
   1400043c5:	mov    esi,0x1
   1400043ca:	mov    ecx,DWORD PTR [rip+0x5248]        # 0x140009618
   1400043d0:	mov    DWORD PTR [rsp+0x30],eax
   1400043d4:	sub    edx,0x2
   1400043d7:	je     0x14000442b
   1400043d9:	sub    edx,esi
   1400043db:	je     0x14000463a
   1400043e1:	sub    edx,0x5
   1400043e4:	jne    0x140004464
   1400043e6:	bt     ebx,0x12
   1400043ea:	jae    0x14000440c
   1400043ec:	test   edi,edi
   1400043ee:	je     0x140004406
   1400043f0:	and    DWORD PTR [rsp+0x28],edx
   1400043f4:	mov    r8d,eax
   1400043f7:	and    DWORD PTR [rsp+0x20],edx
   1400043fb:	mov    ecx,ebp
   1400043fd:	mov    edx,edi
   1400043ff:	call   0x140004390
   140004404:	jmp    0x14000440c
   140004406:	mov    DWORD PTR [rip+0x5acc],esi        # 0x140009ed8
   14000440c:	bt     ebx,0x18
   140004410:	jae    0x14000476c
   140004416:	call   0x140004bc8
   14000441b:	mov    eax,DWORD PTR [rsp+0x30]
   14000441f:	xor    edi,edi
   140004421:	xor    r9d,r9d
   140004424:	xor    ebx,ebx
   140004426:	lea    edx,[rdi+0x3]
   140004429:	jmp    0x1400043ca
   14000442b:	cmp    ebp,ecx
   14000442d:	jne    0x14000476c
   140004433:	sub    ebx,esi
   140004435:	je     0x140004702
   14000443b:	sub    ebx,0x3f
   14000443e:	je     0x140004450
   140004440:	sub    ebx,0x40
   140004443:	jne    0x14000466e
   140004449:	mov    edi,0x100
   14000444e:	jmp    0x140004455
   140004450:	mov    edi,0x20
   140004455:	mov    ebx,0x4000
   14000445a:	mov    edx,0x2
   14000445f:	jmp    0x1400043d0
   140004464:	sub    edx,0x4
   140004467:	je     0x140004535
   14000446d:	sub    edx,esi
   14000446f:	je     0x140004522
   140004475:	cmp    edx,0x6
   140004478:	jne    0x14000476c
   14000447e:	cmp    ebx,DWORD PTR [rip+0x5a44]        # 0x140009ec8
   140004484:	jb     0x14000476c
   14000448a:	and    DWORD PTR [rsp+0x40],0x0
   14000448f:	lea    rcx,[rsp+0x44]
   140004494:	xor    edx,edx
   140004496:	mov    r8d,0x210
   14000449c:	call   0x140006336
   1400044a1:	lea    eax,[rbx+0x1]
   1400044a4:	mov    ecx,0x40
   1400044a9:	movsxd rdx,eax
   1400044ac:	shl    rdx,0x2
   1400044b0:	mov    DWORD PTR [rip+0x5a12],eax        # 0x140009ec8
   1400044b6:	call   QWORD PTR [rip+0x2bb4]        # 0x140007070
   1400044bc:	mov    r10,QWORD PTR [rip+0x5d15]        # 0x14000a1d8
   1400044c3:	xor    r9d,r9d
   1400044c6:	cmp    DWORD PTR [rip+0x59fc],esi        # 0x140009ec8
   1400044cc:	mov    rdi,rax
   1400044cf:	je     0x1400044e9
   1400044d1:	mov    edx,DWORD PTR [r10+r9*4]
   1400044d5:	mov    DWORD PTR [rdi+r9*4],edx
   1400044d9:	add    r9d,esi
   1400044dc:	mov    eax,DWORD PTR [rip+0x59e6]        # 0x140009ec8
   1400044e2:	dec    eax
   1400044e4:	cmp    r9d,eax
   1400044e7:	jb     0x1400044d1
   1400044e9:	mov    rcx,r10
   1400044ec:	call   QWORD PTR [rip+0x2b96]        # 0x140007088
   1400044f2:	lea    rdx,[rsp+0x40]
   1400044f7:	mov    QWORD PTR [rip+0x5cda],rdi        # 0x14000a1d8
   1400044fe:	mov    ecx,ebx
   140004500:	call   0x140002f68
   140004505:	test   eax,eax
   140004507:	jne    0x14000476c
   14000450d:	mov    rax,QWORD PTR [rip+0x5cc4]        # 0x14000a1d8
   140004514:	mov    ecx,DWORD PTR [rsp+0x40]
   140004518:	mov    edx,ebx
   14000451a:	mov    DWORD PTR [rax+rdx*4],ecx
   14000451d:	jmp    0x14000476c
   140004522:	cmp    ebx,esi
   140004524:	jne    0x14000476c
   14000452a:	mov    DWORD PTR [rip+0x50e4],esi        # 0x140009614
   140004530:	jmp    0x14000476c
   140004535:	cmp    ebx,DWORD PTR [rip+0x50d5]        # 0x140009610
   14000453b:	jne    0x1400045c5
   140004541:	test   edi,edi
   140004543:	je     0x1400045be
   140004545:	mov    rcx,QWORD PTR [rip+0x5984]        # 0x140009ed0
   14000454c:	test   rcx,rcx
   14000454f:	je     0x140004562
   140004551:	xor    r9d,r9d
   140004554:	mov    r8,rsi
   140004557:	mov    edx,0x111
   14000455c:	call   QWORD PTR [rip+0x2df6]        # 0x140007358
   140004562:	cmp    edi,0x80000005
   140004568:	jne    0x140004592
   14000456a:	and    QWORD PTR [rsp+0x20],0x0
   140004570:	lea    r9,[rip+0xfffffffffffff149]        # 0x1400036c0
   140004577:	mov    r8,QWORD PTR [rip+0x5a22]        # 0x140009fa0
   14000457e:	mov    edx,0x514
   140004583:	mov    rcx,QWORD PTR [rip+0x5366]        # 0x1400098f0
   14000458a:	call   QWORD PTR [rip+0x2c78]        # 0x140007208
   140004590:	jmp    0x1400045a6
   140004592:	mov    rcx,QWORD PTR [rip+0x5a07]        # 0x140009fa0
   140004599:	mov    r8d,0x30
   14000459f:	mov    edx,edi
   1400045a1:	call   0x140004c70
   1400045a6:	and    DWORD PTR [rip+0x506b],0x0        # 0x140009618
   1400045ad:	call   0x140004bc8
   1400045b2:	mov    ecx,DWORD PTR [rip+0x5060]        # 0x140009618
   1400045b8:	mov    DWORD PTR [rip+0x4a92],esi        # 0x140009050
   1400045be:	and    DWORD PTR [rip+0x58f3],0x0        # 0x140009eb8
   1400045c5:	cmp    ebx,DWORD PTR [rip+0x58d9]        # 0x140009ea4
   1400045cb:	jne    0x14000476c
   1400045d1:	mov    rax,QWORD PTR [rip+0x58f8]        # 0x140009ed0
   1400045d8:	test   rax,rax
   1400045db:	je     0x1400045f7
   1400045dd:	xor    r9d,r9d
   1400045e0:	mov    r8,rsi
   1400045e3:	mov    edx,0x111
   1400045e8:	mov    rcx,rax
   1400045eb:	call   QWORD PTR [rip+0x2d67]        # 0x140007358
   1400045f1:	mov    ecx,DWORD PTR [rip+0x5021]        # 0x140009618
   1400045f7:	test   edi,edi
   1400045f9:	jne    0x14000462a
   1400045fb:	cmp    DWORD PTR [rip+0x58b7],edi        # 0x140009eb8
   140004601:	jne    0x14000462a
   140004603:	test   ecx,ecx
   140004605:	je     0x14000462a
   140004607:	call   QWORD PTR [rip+0x2b53]        # 0x140007160
   14000460d:	test   eax,eax
   14000460f:	jns    0x140004623
   140004611:	mov    rcx,QWORD PTR [rip+0x5988]        # 0x140009fa0
   140004618:	lea    r8d,[rdi+0x10]
   14000461c:	mov    edx,eax
   14000461e:	call   0x140004c70
   140004623:	and    DWORD PTR [rip+0x4fee],0x0        # 0x140009618
   14000462a:	call   0x140004bc8
   14000462f:	mov    DWORD PTR [rip+0x4a1b],esi        # 0x140009050
   140004635:	jmp    0x14000476c
   14000463a:	cmp    DWORD PTR [rip+0x598c],ebp        # 0x140009fcc
   140004640:	jne    0x14000476c
   140004646:	mov    rcx,QWORD PTR [rip+0x5953]        # 0x140009fa0
   14000464d:	mov    edx,0x2
   140004652:	lea    r8d,[rdx+0x2e]
   140004656:	call   0x140004c70
   14000465b:	and    DWORD PTR [rip+0x596a],0x0        # 0x140009fcc
   140004662:	and    DWORD PTR [rip+0x49e7],0x0        # 0x140009050
   140004669:	jmp    0x140004765
   14000466e:	cmp    ebx,0x3f80
   140004674:	jne    0x14000476c
   14000467a:	test   edi,edi
   14000467c:	jne    0x140004682
   14000467e:	mov    edi,esi
   140004680:	jmp    0x14000469b
   140004682:	cmp    edi,0x10
   140004685:	ja     0x140004691
   140004687:	mov    eax,0x10106
   14000468c:	bt     eax,edi
   14000468f:	jb     0x14000469b
   140004691:	cmp    edi,0x800
   140004697:	je     0x14000469b
   140004699:	xor    esi,esi
   14000469b:	cmp    DWORD PTR [rip+0x5816],0x0        # 0x140009eb8
   1400046a2:	jne    0x1400046d1
   1400046a4:	test   ecx,ecx
   1400046a6:	je     0x1400046d1
   1400046a8:	xor    r8d,r8d
   1400046ab:	xor    edx,edx
   1400046ad:	call   QWORD PTR [rip+0x2a95]        # 0x140007148
   1400046b3:	mov    DWORD PTR [rip+0x57eb],eax        # 0x140009ea4
   1400046b9:	test   eax,eax
   1400046bb:	jns    0x1400046d1
   1400046bd:	mov    rcx,QWORD PTR [rip+0x58dc]        # 0x140009fa0
   1400046c4:	mov    r8d,0x10
   1400046ca:	mov    edx,eax
   1400046cc:	call   0x140004c70
   1400046d1:	test   esi,esi
   1400046d3:	jne    0x14000476c
   1400046d9:	mov    r8,QWORD PTR [rip+0x58c0]        # 0x140009fa0
   1400046e0:	lea    r9,[rip+0xffffffffffffefd9]        # 0x1400036c0
   1400046e7:	mov    rcx,QWORD PTR [rip+0x5202]        # 0x1400098f0
   1400046ee:	mov    edx,0x514
   1400046f3:	mov    eax,edi
   1400046f5:	mov    QWORD PTR [rsp+0x20],rax
   1400046fa:	call   QWORD PTR [rip+0x2b08]        # 0x140007208
   140004700:	jmp    0x14000476c
   140004702:	mov    rax,QWORD PTR [rip+0x57c7]        # 0x140009ed0
   140004709:	test   rax,rax
   14000470c:	je     0x140004728
   14000470e:	xor    r9d,r9d
   140004711:	mov    r8,rsi
   140004714:	mov    edx,0x111
   140004719:	mov    rcx,rax
   14000471c:	call   QWORD PTR [rip+0x2c36]        # 0x140007358
   140004722:	mov    ecx,DWORD PTR [rip+0x4ef0]        # 0x140009618
   140004728:	cmp    DWORD PTR [rip+0x5789],0x0        # 0x140009eb8
   14000472f:	jne    0x14000475a
   140004731:	test   ecx,ecx
   140004733:	je     0x14000475a
   140004735:	call   QWORD PTR [rip+0x2a25]        # 0x140007160
   14000473b:	test   eax,eax
   14000473d:	jns    0x140004753
   14000473f:	mov    rcx,QWORD PTR [rip+0x585a]        # 0x140009fa0
   140004746:	mov    r8d,0x10
   14000474c:	mov    edx,eax
   14000474e:	call   0x140004c70
   140004753:	and    DWORD PTR [rip+0x4ebe],0x0        # 0x140009618
   14000475a:	call   0x140004bc8
   14000475f:	mov    DWORD PTR [rip+0x48eb],esi        # 0x140009050
   140004765:	xor    ecx,ecx
   140004767:	call   0x140001d9c
   14000476c:	mov    rcx,QWORD PTR [rsp+0x260]
   140004774:	xor    rcx,rsp
   140004777:	call   0x140005ca0
   14000477c:	add    rsp,0x278
   140004783:	pop    rdi
   140004784:	pop    rsi
   140004785:	pop    rbp
   140004786:	pop    rbx
   140004787:	ret    
   140004788:	int3   
   140004789:	int3   
   14000478a:	int3   
   14000478b:	int3   
   14000478c:	int3   
   14000478d:	int3   
   14000478e:	int3   
   14000478f:	int3   
   140004790:	mov    rax,rsp
   140004793:	mov    QWORD PTR [rax+0x8],rbx
   140004797:	mov    QWORD PTR [rax+0x10],rbp
   14000479b:	mov    QWORD PTR [rax+0x18],rsi
   14000479f:	mov    QWORD PTR [rax+0x20],rdi
   1400047a3:	push   r12
   1400047a5:	push   r14
   1400047a7:	push   r15
   1400047a9:	sub    rsp,0x20
   1400047ad:	mov    eax,DWORD PTR [rip+0x5715]        # 0x140009ec8
   1400047b3:	mov    r12d,0xffffffff
   1400047b9:	mov    r14,rcx
   1400047bc:	mov    ebx,r12d
   1400047bf:	test   eax,eax
   1400047c1:	jne    0x1400047ca
   1400047c3:	mov    edx,0x214
   1400047c8:	jmp    0x1400047dc
   1400047ca:	imul   rcx,rax,0x214
   1400047d1:	cmp    rcx,r12
   1400047d4:	ja     0x1400048b2
   1400047da:	mov    edx,ecx
   1400047dc:	mov    ecx,0x40
   1400047e1:	call   QWORD PTR [rip+0x2889]        # 0x140007070
   1400047e7:	mov    rdi,rax
   1400047ea:	test   rax,rax
   1400047ed:	je     0x1400048b2
   1400047f3:	xor    esi,esi
   1400047f5:	cmp    DWORD PTR [rip+0x56cd],esi        # 0x140009ec8
   1400047fb:	jbe    0x14000486f
   1400047fd:	mov    r15d,esi
   140004800:	mov    ecx,esi
   140004802:	imul   rbp,r15,0x214
   140004809:	add    rbp,rdi
   14000480c:	mov    rdx,rbp
   14000480f:	call   0x140002f68
   140004814:	test   eax,eax
   140004816:	jne    0x140004860
   140004818:	lea    r9,[rbp+0x14]
   14000481c:	xor    r8d,r8d
   14000481f:	mov    edx,0x143
   140004824:	mov    rcx,r14
   140004827:	call   QWORD PTR [rip+0x2b2b]        # 0x140007358
   14000482d:	mov    rbp,rax
   140004830:	cmp    eax,0xfffffffd
   140004833:	ja     0x1400048a5
   140004835:	mov    r8d,eax
   140004838:	mov    r9d,r15d
   14000483b:	mov    edx,0x151
   140004840:	mov    rcx,r14
   140004843:	call   QWORD PTR [rip+0x2b0f]        # 0x140007358
   140004849:	cmp    esi,DWORD PTR [rip+0x4805]        # 0x140009054
   14000484f:	jne    0x140004855
   140004851:	mov    ebx,ebp
   140004853:	jmp    0x140004860
   140004855:	cmp    ebx,r12d
   140004858:	je     0x140004860
   14000485a:	cmp    ebp,ebx
   14000485c:	ja     0x140004860
   14000485e:	inc    ebx
   140004860:	inc    esi
   140004862:	cmp    esi,DWORD PTR [rip+0x5660]        # 0x140009ec8
   140004868:	jb     0x1400047fd
   14000486a:	cmp    ebx,r12d
   14000486d:	jne    0x140004871
   14000486f:	xor    ebx,ebx
   140004871:	xor    r9d,r9d
   140004874:	xor    r8d,r8d
   140004877:	mov    edx,0x146
   14000487c:	mov    rcx,r14
   14000487f:	call   QWORD PTR [rip+0x2ad3]        # 0x140007358
   140004885:	test   rax,rax
   140004888:	je     0x1400048a5
   14000488a:	mov    r8d,ebx
   14000488d:	xor    r9d,r9d
   140004890:	mov    edx,0x14e
   140004895:	mov    rcx,r14
   140004898:	call   QWORD PTR [rip+0x2aba]        # 0x140007358
   14000489e:	mov    eax,0x1
   1400048a3:	jmp    0x1400048b7
   1400048a5:	mov    rcx,rdi
   1400048a8:	call   QWORD PTR [rip+0x27da]        # 0x140007088
   1400048ae:	xor    eax,eax
   1400048b0:	jmp    0x1400048b7
   1400048b2:	mov    eax,0x80000044
   1400048b7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400048bc:	mov    rbp,QWORD PTR [rsp+0x48]
   1400048c1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400048c6:	mov    rdi,QWORD PTR [rsp+0x58]
   1400048cb:	add    rsp,0x20
   1400048cf:	pop    r15
   1400048d1:	pop    r14
   1400048d3:	pop    r12
   1400048d5:	ret    
   1400048d6:	int3   
   1400048d7:	int3   
   1400048d8:	int3   
   1400048d9:	int3   
   1400048da:	int3   
   1400048db:	int3   
   1400048dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400048e1:	mov    QWORD PTR [rsp+0x10],rbp
   1400048e6:	mov    QWORD PTR [rsp+0x18],rsi
   1400048eb:	push   rdi
   1400048ec:	push   r12
   1400048ee:	push   r13
   1400048f0:	push   r14
   1400048f2:	push   r15
   1400048f4:	sub    rsp,0x30
   1400048f8:	mov    r15,rdx
   1400048fb:	xor    r9d,r9d
   1400048fe:	mov    edx,0x146
   140004903:	xor    r8d,r8d
   140004906:	mov    rbx,rcx
   140004909:	or     edi,0xffffffff
   14000490c:	call   QWORD PTR [rip+0x2a46]        # 0x140007358
   140004912:	xor    r14d,r14d
   140004915:	test   rax,rax
   140004918:	jne    0x140004921
   14000491a:	xor    eax,eax
   14000491c:	jmp    0x140004a0f
   140004921:	xor    r9d,r9d
   140004924:	xor    r8d,r8d
   140004927:	mov    edx,0x147
   14000492c:	mov    rcx,rbx
   14000492f:	call   QWORD PTR [rip+0x2a23]        # 0x140007358
   140004935:	xor    r9d,r9d
   140004938:	mov    edx,0x150
   14000493d:	mov    r8,rax
   140004940:	mov    rcx,rbx
   140004943:	call   QWORD PTR [rip+0x2a0f]        # 0x140007358
   140004949:	xor    r9d,r9d
   14000494c:	xor    r8d,r8d
   14000494f:	mov    edx,0x14b
   140004954:	mov    rcx,r15
   140004957:	mov    r12,rax
   14000495a:	call   QWORD PTR [rip+0x29f8]        # 0x140007358
   140004960:	mov    rcx,QWORD PTR [rip+0x5871]        # 0x14000a1d8
   140004967:	mov    ebp,r14d
   14000496a:	mov    r13d,r12d
   14000496d:	cmp    DWORD PTR [rcx+r13*4],r14d
   140004971:	jbe    0x1400049eb
   140004973:	mov    edx,0xe4
   140004978:	mov    rsi,r14
   14000497b:	mov    r14d,edx
   14000497e:	jmp    0x1400049c6
   140004980:	mov    r9d,DWORD PTR [rip+0x5641]        # 0x140009fc8
   140004987:	mov    r8d,ebp
   14000498a:	mov    DWORD PTR [rbx],r14d
   14000498d:	mov    edx,r12d
   140004990:	mov    ecx,DWORD PTR [rip+0x550a]        # 0x140009ea0
   140004996:	xor    r14d,r14d
   140004999:	mov    QWORD PTR [rsp+0x28],rbx
   14000499e:	mov    DWORD PTR [rsp+0x20],r14d
   1400049a3:	call   QWORD PTR [rip+0x27d7]        # 0x140007180
   1400049a9:	test   eax,eax
   1400049ab:	jne    0x140004a74
   1400049b1:	mov    r14d,DWORD PTR [rbx+0x4]
   1400049b5:	cmp    r14d,DWORD PTR [rbx]
   1400049b8:	jbe    0x140004a2c
   1400049ba:	mov    rcx,rbx
   1400049bd:	call   QWORD PTR [rip+0x26c5]        # 0x140007088
   1400049c3:	mov    edx,r14d
   1400049c6:	mov    ecx,0x40
   1400049cb:	call   QWORD PTR [rip+0x269f]        # 0x140007070
   1400049d1:	mov    rbx,rax
   1400049d4:	test   rax,rax
   1400049d7:	jne    0x140004980
   1400049d9:	xor    r14d,r14d
   1400049dc:	mov    rax,QWORD PTR [rip+0x57f5]        # 0x14000a1d8
   1400049e3:	inc    ebp
   1400049e5:	cmp    ebp,DWORD PTR [rax+r13*4]
   1400049e9:	jb     0x140004973
   1400049eb:	cmp    r12d,DWORD PTR [rip+0x4662]        # 0x140009054
   1400049f2:	mov    edx,0x14e
   1400049f7:	mov    rcx,r15
   1400049fa:	cmovne edi,r14d
   1400049fe:	xor    r9d,r9d
   140004a01:	mov    r8d,edi
   140004a04:	call   QWORD PTR [rip+0x294e]        # 0x140007358
   140004a0a:	mov    eax,0x1
   140004a0f:	mov    rbx,QWORD PTR [rsp+0x60]
   140004a14:	mov    rbp,QWORD PTR [rsp+0x68]
   140004a19:	mov    rsi,QWORD PTR [rsp+0x70]
   140004a1e:	add    rsp,0x30
   140004a22:	pop    r15
   140004a24:	pop    r14
   140004a26:	pop    r13
   140004a28:	pop    r12
   140004a2a:	pop    rdi
   140004a2b:	ret    
   140004a2c:	mov    edx,0x200
   140004a31:	mov    ecx,0x40
   140004a36:	call   QWORD PTR [rip+0x2634]        # 0x140007070
   140004a3c:	xor    r14d,r14d
   140004a3f:	mov    rsi,rax
   140004a42:	test   rax,rax
   140004a45:	je     0x140004a83
   140004a47:	mov    edx,0x200
   140004a4c:	mov    rcx,rax
   140004a4f:	cmp    DWORD PTR [rbx+0x10],r14d
   140004a53:	jbe    0x140004a63
   140004a55:	mov    r8d,DWORD PTR [rbx+0x14]
   140004a59:	add    r8,rbx
   140004a5c:	call   0x140001008
   140004a61:	jmp    0x140004a83
   140004a63:	mov    r9d,ebp
   140004a66:	lea    r8,[rip+0x2c13]        # 0x140007680
   140004a6d:	call   0x140001154
   140004a72:	jmp    0x140004a83
   140004a74:	mov    r8d,0x10
   140004a7a:	mov    edx,eax
   140004a7c:	xor    ecx,ecx
   140004a7e:	call   0x140004c70
   140004a83:	mov    rcx,rbx
   140004a86:	call   QWORD PTR [rip+0x25fc]        # 0x140007088
   140004a8c:	test   rsi,rsi
   140004a8f:	je     0x1400049dc
   140004a95:	mov    r9,rsi
   140004a98:	xor    r8d,r8d
   140004a9b:	mov    edx,0x143
   140004aa0:	mov    rcx,r15
   140004aa3:	call   QWORD PTR [rip+0x28af]        # 0x140007358
   140004aa9:	mov    rbx,rax
   140004aac:	cmp    eax,0xfffffffd
   140004aaf:	ja     0x14000491a
   140004ab5:	mov    r9d,ebp
   140004ab8:	mov    edx,0x151
   140004abd:	mov    r8d,eax
   140004ac0:	mov    rcx,r15
   140004ac3:	call   QWORD PTR [rip+0x288f]        # 0x140007358
   140004ac9:	cmp    r12d,DWORD PTR [rip+0x4584]        # 0x140009054
   140004ad0:	jne    0x140004ae9
   140004ad2:	cmp    ebp,DWORD PTR [rip+0x53f4]        # 0x140009ecc
   140004ad8:	jne    0x140004ade
   140004ada:	mov    edi,ebx
   140004adc:	jmp    0x140004ae9
   140004ade:	cmp    edi,0xffffffff
   140004ae1:	je     0x140004ae9
   140004ae3:	cmp    ebx,edi
   140004ae5:	ja     0x140004ae9
   140004ae7:	inc    edi
   140004ae9:	mov    rcx,rsi
   140004aec:	call   QWORD PTR [rip+0x2596]        # 0x140007088
   140004af2:	jmp    0x1400049dc
   140004af7:	int3   
   140004af8:	int3   
   140004af9:	int3   
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	rex push rbx
   140004b02:	sub    rsp,0x30
   140004b06:	mov    edx,0x1e0
   140004b0b:	mov    ecx,0x40
   140004b10:	call   QWORD PTR [rip+0x255a]        # 0x140007070
   140004b16:	mov    rbx,rax
   140004b19:	test   rax,rax
   140004b1c:	je     0x140004bbc
   140004b22:	mov    rcx,QWORD PTR [rip+0x5477]        # 0x140009fa0
   140004b29:	call   QWORD PTR [rip+0x26e9]        # 0x140007218
   140004b2f:	mov    ecx,DWORD PTR [rip+0x536b]        # 0x140009ea0
   140004b35:	mov    r8,rbx
   140004b38:	mov    edx,0x1
   140004b3d:	call   QWORD PTR [rip+0x262d]        # 0x140007170
   140004b43:	test   eax,eax
   140004b45:	je     0x140004b6d
   140004b47:	cmp    eax,0x80000045
   140004b4c:	jne    0x140004b57
   140004b4e:	and    DWORD PTR [rip+0x4abf],0x0        # 0x140009614
   140004b55:	jmp    0x140004bb3
   140004b57:	mov    rcx,QWORD PTR [rip+0x5442]        # 0x140009fa0
   140004b5e:	mov    r8d,0x30
   140004b64:	mov    edx,eax
   140004b66:	call   0x140004c70
   140004b6b:	jmp    0x140004bb3
   140004b6d:	cmp    DWORD PTR [rip+0x44e0],0xffffffff        # 0x140009054
   140004b74:	jne    0x140004ba4
   140004b76:	mov    r8,QWORD PTR [rip+0x5423]        # 0x140009fa0
   140004b7d:	lea    r9,[rip+0xffffffffffffe6ac]        # 0x140003230
   140004b84:	mov    rcx,QWORD PTR [rip+0x4d65]        # 0x1400098f0
   140004b8b:	mov    edx,0x1f4
   140004b90:	mov    QWORD PTR [rsp+0x20],0x2
   140004b99:	call   QWORD PTR [rip+0x2669]        # 0x140007208
   140004b9f:	test   rax,rax
   140004ba2:	je     0x140004bb3
   140004ba4:	lea    rdx,[rbx+0xf0]
   140004bab:	mov    rcx,rbx
   140004bae:	call   0x140002b54
   140004bb3:	mov    rcx,rbx
   140004bb6:	call   QWORD PTR [rip+0x24cc]        # 0x140007088
   140004bbc:	add    rsp,0x30
   140004bc0:	pop    rbx
   140004bc1:	ret    
   140004bc2:	int3   
   140004bc3:	int3   
   140004bc4:	int3   
   140004bc5:	int3   
   140004bc6:	int3   
   140004bc7:	int3   
   140004bc8:	sub    rsp,0x28
   140004bcc:	mov    ecx,DWORD PTR [rip+0x53fa]        # 0x140009fcc
   140004bd2:	test   ecx,ecx
   140004bd4:	je     0x140004bfb
   140004bd6:	call   QWORD PTR [rip+0x25f4]        # 0x1400071d0
   140004bdc:	test   eax,eax
   140004bde:	je     0x140004bf4
   140004be0:	mov    rcx,QWORD PTR [rip+0x53b9]        # 0x140009fa0
   140004be7:	mov    r8d,0x10
   140004bed:	mov    edx,eax
   140004bef:	call   0x140004c70
   140004bf4:	and    DWORD PTR [rip+0x53d1],0x0        # 0x140009fcc
   140004bfb:	cmp    DWORD PTR [rip+0x52d6],0x0        # 0x140009ed8
   140004c02:	je     0x140004c65
   140004c04:	call   0x14000200c
   140004c09:	call   0x1400011d4
   140004c0e:	test   eax,eax
   140004c10:	je     0x140004c2f
   140004c12:	mov    rcx,QWORD PTR [rip+0x5387]        # 0x140009fa0
   140004c19:	mov    r8d,0x30
   140004c1f:	mov    edx,eax
   140004c21:	call   0x140004c70
   140004c26:	add    rsp,0x28
   140004c2a:	jmp    0x140001e08
   140004c2f:	mov    ecx,DWORD PTR [rip+0x526b]        # 0x140009ea0
   140004c35:	mov    r8d,0x1
   140004c3b:	mov    r9d,r8d
   140004c3e:	xor    edx,edx
   140004c40:	call   QWORD PTR [rip+0x254a]        # 0x140007190
   140004c46:	test   eax,eax
   140004c48:	je     0x140004c5e
   140004c4a:	mov    rcx,QWORD PTR [rip+0x534f]        # 0x140009fa0
   140004c51:	mov    r8d,0x30
   140004c57:	mov    edx,eax
   140004c59:	call   0x140004c70
   140004c5e:	and    DWORD PTR [rip+0x5273],0x0        # 0x140009ed8
   140004c65:	add    rsp,0x28
   140004c69:	ret    
   140004c6a:	int3   
   140004c6b:	int3   
   140004c6c:	int3   
   140004c6d:	int3   
   140004c6e:	int3   
   140004c6f:	int3   
   140004c70:	mov    rax,rsp
   140004c73:	mov    QWORD PTR [rax+0x8],rbx
   140004c77:	mov    QWORD PTR [rax+0x10],rbp
   140004c7b:	mov    QWORD PTR [rax+0x18],rsi
   140004c7f:	mov    QWORD PTR [rax+0x20],rdi
   140004c83:	push   r12
   140004c85:	push   r14
   140004c87:	push   r15
   140004c89:	sub    rsp,0x40
   140004c8d:	mov    edi,edx
   140004c8f:	mov    r15,rcx
   140004c92:	mov    r12d,0x200
   140004c98:	mov    ebx,0x40
   140004c9d:	mov    edx,r12d
   140004ca0:	mov    ecx,ebx
   140004ca2:	mov    r14d,r8d
   140004ca5:	call   QWORD PTR [rip+0x23c5]        # 0x140007070
   140004cab:	mov    rbp,rax
   140004cae:	test   rax,rax
   140004cb1:	jne    0x140004cba
   140004cb3:	xor    eax,eax
   140004cb5:	jmp    0x140004f07
   140004cba:	mov    edx,0x400
   140004cbf:	mov    ecx,ebx
   140004cc1:	call   QWORD PTR [rip+0x23a9]        # 0x140007070
   140004cc7:	mov    rsi,rax
   140004cca:	test   rax,rax
   140004ccd:	jne    0x140004cda
   140004ccf:	mov    rcx,rbp
   140004cd2:	call   QWORD PTR [rip+0x23b0]        # 0x140007088
   140004cd8:	jmp    0x140004cb3
   140004cda:	mov    eax,0x80000022
   140004cdf:	cmp    edi,eax
   140004ce1:	ja     0x140004e1b
   140004ce7:	je     0x140004e14
   140004ced:	mov    eax,0x8000000c
   140004cf2:	cmp    edi,eax
   140004cf4:	ja     0x140004dbc
   140004cfa:	je     0x140004db2
   140004d00:	cmp    edi,0x1
   140004d03:	je     0x140004d9e
   140004d09:	cmp    edi,0x2
   140004d0c:	je     0x140004da8
   140004d12:	cmp    edi,0x3
   140004d15:	je     0x140004d9e
   140004d1b:	cmp    edi,0x4
   140004d1e:	je     0x140004d94
   140004d20:	cmp    edi,0x5
   140004d23:	je     0x140004d8a
   140004d25:	cmp    edi,0x80000001
   140004d2b:	je     0x140004e74
   140004d31:	mov    ecx,edi
   140004d33:	movzx  edx,di
   140004d36:	and    ecx,0x10000000
   140004d3c:	lea    eax,[rdi+0x7000f000]
   140004d42:	lea    ebx,[rdi-0x7fff2000]
   140004d48:	cmovne ebx,eax
   140004d4b:	lea    rcx,[rip+0x295e]        # 0x1400076b0
   140004d52:	cmp    edi,0xffff0000
   140004d58:	cmova  ebx,edx
   140004d5b:	call   QWORD PTR [rip+0x234f]        # 0x1400070b0
   140004d61:	and    QWORD PTR [rsp+0x30],0x0
   140004d67:	xor    r9d,r9d
   140004d6a:	mov    rdx,rax
   140004d6d:	mov    DWORD PTR [rsp+0x28],r12d
   140004d72:	mov    r8d,ebx
   140004d75:	mov    QWORD PTR [rsp+0x20],rsi
   140004d7a:	mov    ecx,0x800
   140004d7f:	call   QWORD PTR [rip+0x231b]        # 0x1400070a0
   140004d85:	jmp    0x140004ea8
   140004d8a:	mov    edx,0x3d3
   140004d8f:	jmp    0x140004e95
   140004d94:	mov    edx,0x3d2
   140004d99:	jmp    0x140004e95
   140004d9e:	mov    edx,0x3af
   140004da3:	jmp    0x140004e95
   140004da8:	mov    edx,0x611
   140004dad:	jmp    0x140004e95
   140004db2:	mov    edx,0x3b5
   140004db7:	jmp    0x140004e95
   140004dbc:	cmp    edi,0x8000000e
   140004dc2:	je     0x140004e0a
   140004dc4:	cmp    edi,0x8000000f
   140004dca:	je     0x140004e74
   140004dd0:	cmp    edi,0x80000010
   140004dd6:	je     0x140004e00
   140004dd8:	cmp    edi,0x80000019
   140004dde:	je     0x140004df6
   140004de0:	cmp    edi,0x8000001c
   140004de6:	jne    0x140004d31
   140004dec:	mov    edx,0x60f
   140004df1:	jmp    0x140004e95
   140004df6:	mov    edx,0x60c
   140004dfb:	jmp    0x140004e95
   140004e00:	mov    edx,0x3b1
   140004e05:	jmp    0x140004e95
   140004e0a:	mov    edx,0x3f5
   140004e0f:	jmp    0x140004e95
   140004e14:	mov    edx,0x613
   140004e19:	jmp    0x140004e95
   140004e1b:	cmp    edi,0x80000042
   140004e21:	je     0x140004e90
   140004e23:	cmp    edi,0x80000043
   140004e29:	je     0x140004e89
   140004e2b:	cmp    edi,0x80000044
   140004e31:	je     0x140004e82
   140004e33:	cmp    edi,0x80000048
   140004e39:	je     0x140004e7b
   140004e3b:	cmp    edi,0x8000004b
   140004e41:	je     0x140004e74
   140004e43:	cmp    edi,0x80000053
   140004e49:	je     0x140004e6d
   140004e4b:	cmp    edi,0x80000054
   140004e51:	je     0x140004e66
   140004e53:	cmp    edi,0x80000056
   140004e59:	jne    0x140004d31
   140004e5f:	mov    edx,0x3fc
   140004e64:	jmp    0x140004e95
   140004e66:	mov    edx,0x3b8
   140004e6b:	jmp    0x140004e95
   140004e6d:	mov    edx,0x3b6
   140004e72:	jmp    0x140004e95
   140004e74:	mov    edx,0x3bc
   140004e79:	jmp    0x140004e95
   140004e7b:	mov    edx,0x3ae
   140004e80:	jmp    0x140004e95
   140004e82:	mov    edx,0x3ad
   140004e87:	jmp    0x140004e95
   140004e89:	mov    edx,0x3f6
   140004e8e:	jmp    0x140004e95
   140004e90:	mov    edx,0x3f8
   140004e95:	mov    rcx,QWORD PTR [rip+0x4a54]        # 0x1400098f0
   140004e9c:	mov    r9d,r12d
   140004e9f:	mov    r8,rsi
   140004ea2:	call   QWORD PTR [rip+0x2460]        # 0x140007308
   140004ea8:	test   eax,eax
   140004eaa:	jne    0x140004ec4
   140004eac:	mov    rcx,QWORD PTR [rip+0x4a3d]        # 0x1400098f0
   140004eb3:	mov    r9d,r12d
   140004eb6:	mov    r8,rsi
   140004eb9:	mov    edx,0x3ac
   140004ebe:	call   QWORD PTR [rip+0x2444]        # 0x140007308
   140004ec4:	mov    rcx,QWORD PTR [rip+0x4a25]        # 0x1400098f0
   140004ecb:	mov    r9d,0x100
   140004ed1:	mov    r8,rbp
   140004ed4:	mov    edx,0x3d1
   140004ed9:	call   QWORD PTR [rip+0x2429]        # 0x140007308
   140004edf:	mov    r9d,r14d
   140004ee2:	mov    r8,rbp
   140004ee5:	mov    rdx,rsi
   140004ee8:	mov    rcx,r15
   140004eeb:	call   QWORD PTR [rip+0x243f]        # 0x140007330
   140004ef1:	mov    rcx,rbp
   140004ef4:	mov    ebx,eax
   140004ef6:	call   QWORD PTR [rip+0x218c]        # 0x140007088
   140004efc:	mov    rcx,rsi
   140004eff:	call   QWORD PTR [rip+0x2183]        # 0x140007088
   140004f05:	mov    eax,ebx
   140004f07:	mov    rbx,QWORD PTR [rsp+0x60]
   140004f0c:	mov    rbp,QWORD PTR [rsp+0x68]
   140004f11:	mov    rsi,QWORD PTR [rsp+0x70]
   140004f16:	mov    rdi,QWORD PTR [rsp+0x78]
   140004f1b:	add    rsp,0x40
   140004f1f:	pop    r15
   140004f21:	pop    r14
   140004f23:	pop    r12
   140004f25:	ret    
   140004f26:	int3   
   140004f27:	int3   
   140004f28:	int3   
   140004f29:	int3   
   140004f2a:	int3   
   140004f2b:	int3   
   140004f2c:	mov    QWORD PTR [rsp+0x20],rbx
   140004f31:	push   rbp
   140004f32:	push   rsi
   140004f33:	push   rdi
   140004f34:	push   r12
   140004f36:	push   r13
   140004f38:	push   r14
   140004f3a:	push   r15
   140004f3c:	lea    rbp,[rsp-0x1d0]
   140004f44:	sub    rsp,0x2d0
   140004f4b:	mov    rax,QWORD PTR [rip+0x40b6]        # 0x140009008
   140004f52:	xor    rax,rsp
   140004f55:	mov    QWORD PTR [rbp+0x1c0],rax
   140004f5c:	xor    r14d,r14d
   140004f5f:	mov    r15,r8
   140004f62:	mov    QWORD PTR [rsp+0x28],r14
   140004f67:	call   QWORD PTR [rip+0x236b]        # 0x1400072d8
   140004f6d:	mov    rdi,rax
   140004f70:	test   rax,rax
   140004f73:	je     0x1400051a0
   140004f79:	lea    rdx,[rsp+0x48]
   140004f7e:	mov    rcx,rax
   140004f81:	call   QWORD PTR [rip+0x22f1]        # 0x140007278
   140004f87:	test   eax,eax
   140004f89:	je     0x1400051a0
   140004f8f:	mov    rcx,rdi
   140004f92:	call   QWORD PTR [rip+0x23e8]        # 0x140007380
   140004f98:	mov    rbx,rax
   140004f9b:	test   rax,rax
   140004f9e:	je     0x1400051a0
   140004fa4:	xor    r9d,r9d
   140004fa7:	lea    edx,[r14+0x31]
   140004fab:	xor    r8d,r8d
   140004fae:	mov    rcx,rdi
   140004fb1:	call   QWORD PTR [rip+0x23a1]        # 0x140007358
   140004fb7:	test   rax,rax
   140004fba:	jne    0x140004ff6
   140004fbc:	mov    esi,0x1f8
   140004fc1:	lea    rcx,[rsp+0x60]
   140004fc6:	mov    r8d,esi
   140004fc9:	xor    edx,edx
   140004fcb:	call   0x140006336
   140004fd0:	xor    r9d,r9d
   140004fd3:	mov    DWORD PTR [rsp+0x60],esi
   140004fd7:	lea    r8,[rsp+0x60]
   140004fdc:	mov    edx,esi
   140004fde:	lea    ecx,[r14+0x29]
   140004fe2:	call   QWORD PTR [rip+0x22d0]        # 0x1400072b8
   140004fe8:	test   eax,eax
   140004fea:	je     0x140005007
   140004fec:	lea    rcx,[rbp+0x40]
   140004ff0:	call   QWORD PTR [rip+0x2052]        # 0x140007048
   140004ff6:	mov    rdx,rax
   140004ff9:	mov    rcx,rbx
   140004ffc:	call   QWORD PTR [rip+0x2056]        # 0x140007058
   140005002:	mov    QWORD PTR [rsp+0x28],rax
   140005007:	mov    r8,r15
   14000500a:	lea    rcx,[rbp+0x160]
   140005011:	mov    edx,0x52
   140005016:	call   0x140001008
   14000501b:	lea    rcx,[rbp+0x160]
   140005022:	call   QWORD PTR [rip+0x2068]        # 0x140007090
   140005028:	movsxd rcx,eax
   14000502b:	mov    edx,0x58
   140005030:	lea    r8d,[rax+0x1]
   140005034:	movsxd rax,r8d
   140005037:	add    rax,rax
   14000503a:	mov    WORD PTR [rbp+rcx*2+0x160],dx
   140005042:	cmp    rax,0x52
   140005046:	jae    0x1400051d0
   14000504c:	lea    r9,[rsp+0x30]
   140005051:	mov    WORD PTR [rbp+rax*1+0x160],r14w
   14000505a:	lea    rdx,[rbp+0x160]
   140005061:	mov    rcx,rbx
   140005064:	call   QWORD PTR [rip+0x1fce]        # 0x140007038
   14000506a:	test   eax,eax
   14000506c:	je     0x140005186
   140005072:	mov    eax,DWORD PTR [rsp+0x30]
   140005076:	lea    rdx,[rsp+0x20]
   14000507b:	mov    r8d,0x1
   140005081:	mov    DWORD PTR [rsp+0x20],eax
   140005085:	mov    rcx,rbx
   140005088:	call   QWORD PTR [rip+0x1fb2]        # 0x140007040
   14000508e:	test   eax,eax
   140005090:	je     0x140005186
   140005096:	mov    eax,DWORD PTR [rsp+0x50]
   14000509a:	cmp    DWORD PTR [rsp+0x20],eax
   14000509e:	jle    0x140005186
   1400050a4:	mov    rcx,r15
   1400050a7:	call   QWORD PTR [rip+0x1fe3]        # 0x140007090
   1400050ad:	movsxd r13,eax
   1400050b0:	mov    esi,r14d
   1400050b3:	mov    r12,r14
   1400050b6:	test   eax,eax
   1400050b8:	jle    0x140005161
   1400050be:	lea    rcx,[rbp+0x164]
   1400050c5:	mov    rax,r15
   1400050c8:	sub    rax,rcx
   1400050cb:	mov    r14d,0x4
   1400050d1:	mov    QWORD PTR [rsp+0x40],rax
   1400050d6:	lea    rcx,[rbp+0x160]
   1400050dd:	add    rcx,r14
   1400050e0:	movzx  eax,WORD PTR [rax+rcx*1]
   1400050e4:	mov    WORD PTR [rcx-0x4],ax
   1400050e8:	mov    eax,0x58
   1400050ed:	mov    WORD PTR [rcx-0x2],ax
   1400050f1:	cmp    r14,0x52
   1400050f5:	jae    0x1400051ca
   1400050fb:	xor    eax,eax
   1400050fd:	lea    r8d,[rsi+0x2]
   140005101:	mov    WORD PTR [rcx],ax
   140005104:	lea    r9,[rsp+0x30]
   140005109:	mov    rcx,rbx
   14000510c:	lea    rdx,[rbp+0x160]
   140005113:	call   QWORD PTR [rip+0x1f1f]        # 0x140007038
   140005119:	test   eax,eax
   14000511b:	je     0x140005186
   14000511d:	mov    eax,DWORD PTR [rsp+0x30]
   140005121:	lea    rdx,[rsp+0x20]
   140005126:	mov    r8d,0x1
   14000512c:	mov    DWORD PTR [rsp+0x20],eax
   140005130:	mov    rcx,rbx
   140005133:	call   QWORD PTR [rip+0x1f07]        # 0x140007040
   140005139:	test   eax,eax
   14000513b:	je     0x140005186
   14000513d:	mov    eax,DWORD PTR [rsp+0x50]
   140005141:	cmp    DWORD PTR [rsp+0x20],eax
   140005145:	jg     0x14000515e
   140005147:	mov    rax,QWORD PTR [rsp+0x40]
   14000514c:	inc    esi
   14000514e:	inc    r12
   140005151:	add    r14,0x2
   140005155:	cmp    r12,r13
   140005158:	jl     0x1400050d6
   14000515e:	xor    r14d,r14d
   140005161:	cmp    esi,r13d
   140005164:	jge    0x140005186
   140005166:	movsxd rax,esi
   140005169:	lea    rdx,[r13*2+0x0]
   140005171:	lea    r8,[rip+0x2550]        # 0x1400076c8
   140005178:	mov    rcx,r15
   14000517b:	mov    WORD PTR [r15+rax*2-0x6],r14w
   140005181:	call   0x140001088
   140005186:	mov    rdx,QWORD PTR [rsp+0x28]
   14000518b:	mov    rcx,rbx
   14000518e:	call   QWORD PTR [rip+0x1ec4]        # 0x140007058
   140005194:	mov    rdx,rbx
   140005197:	mov    rcx,rdi
   14000519a:	call   QWORD PTR [rip+0x2128]        # 0x1400072c8
   1400051a0:	mov    rcx,QWORD PTR [rbp+0x1c0]
   1400051a7:	xor    rcx,rsp
   1400051aa:	call   0x140005ca0
   1400051af:	mov    rbx,QWORD PTR [rsp+0x328]
   1400051b7:	add    rsp,0x2d0
   1400051be:	pop    r15
   1400051c0:	pop    r14
   1400051c2:	pop    r13
   1400051c4:	pop    r12
   1400051c6:	pop    rdi
   1400051c7:	pop    rsi
   1400051c8:	pop    rbp
   1400051c9:	ret    
   1400051ca:	call   0x140005e78
   1400051cf:	int3   
   1400051d0:	call   0x140005e78
   1400051d5:	int3   
   1400051d6:	int3   
   1400051d7:	int3   
   1400051d8:	int3   
   1400051d9:	int3   
   1400051da:	int3   
   1400051db:	int3   
   1400051dc:	rex push rbx
   1400051de:	sub    rsp,0x30
   1400051e2:	mov    rax,QWORD PTR [rip+0x3e1f]        # 0x140009008
   1400051e9:	xor    rax,rsp
   1400051ec:	mov    QWORD PTR [rsp+0x28],rax
   1400051f1:	mov    edx,DWORD PTR [rcx+0x10]
   1400051f4:	xor    eax,eax
   1400051f6:	xor    ebx,ebx
   1400051f8:	mov    DWORD PTR [rsp+0x22],eax
   1400051fc:	add    rdx,rcx
   1400051ff:	mov    WORD PTR [rsp+0x20],bx
   140005204:	cmp    DWORD PTR [rcx+0x1c],0x1
   140005208:	mov    WORD PTR [rsp+0x26],ax
   14000520d:	jne    0x140005270
   14000520f:	mov    r10d,DWORD PTR [rcx+0xc]
   140005213:	mov    r8d,ebx
   140005216:	mov    r9d,ebx
   140005219:	test   r10d,r10d
   14000521c:	je     0x140005257
   14000521e:	movzx  ecx,WORD PTR [rdx]
   140005221:	lea    eax,[rcx-0x30]
   140005224:	cmp    eax,0x9
   140005227:	ja     0x14000524b
   140005229:	mov    eax,r9d
   14000522c:	inc    r9d
   14000522f:	mov    WORD PTR [rsp+rax*2+0x20],cx
   140005234:	mov    eax,r9d
   140005237:	add    rax,rax
   14000523a:	cmp    rax,0x8
   14000523e:	jae    0x140005283
   140005240:	mov    WORD PTR [rsp+rax*1+0x20],bx
   140005245:	cmp    r9d,0x3
   140005249:	je     0x140005257
   14000524b:	inc    r8d
   14000524e:	add    rdx,0x2
   140005252:	cmp    r8d,r10d
   140005255:	jb     0x14000521e
   140005257:	lea    rdx,[rip+0x2472]        # 0x1400076d0
   14000525e:	lea    rcx,[rsp+0x20]
   140005263:	call   QWORD PTR [rip+0x1e2f]        # 0x140007098
   140005269:	test   eax,eax
   14000526b:	sete   bl
   14000526e:	mov    eax,ebx
   140005270:	mov    rcx,QWORD PTR [rsp+0x28]
   140005275:	xor    rcx,rsp
   140005278:	call   0x140005ca0
   14000527d:	add    rsp,0x30
   140005281:	pop    rbx
   140005282:	ret    
   140005283:	call   0x140005e78
   140005288:	int3   
   140005289:	int3   
   14000528a:	int3   
   14000528b:	int3   
   14000528c:	int3   
   14000528d:	int3   
   14000528e:	int3   
   14000528f:	int3   
   140005290:	mov    QWORD PTR [rsp+0x18],rbx
   140005295:	push   rbp
   140005296:	push   rsi
   140005297:	push   rdi
   140005298:	push   r12
   14000529a:	push   r13
   14000529c:	push   r14
   14000529e:	push   r15
   1400052a0:	lea    rbp,[rsp-0xa0]
   1400052a8:	sub    rsp,0x1a0
   1400052af:	mov    rax,QWORD PTR [rip+0x3d52]        # 0x140009008
   1400052b6:	xor    rax,rsp
   1400052b9:	mov    QWORD PTR [rbp+0x90],rax
   1400052c0:	mov    r15,rcx
   1400052c3:	mov    r13,rdx
   1400052c6:	xor    ecx,ecx
   1400052c8:	mov    DWORD PTR [rsp+0x40],ecx
   1400052cc:	mov    ebx,ecx
   1400052ce:	mov    QWORD PTR [rsp+0x48],rcx
   1400052d3:	or     rax,0xffffffffffffffff
   1400052d7:	lea    r12d,[rcx+0x1]
   1400052db:	inc    rax
   1400052de:	cmp    WORD PTR [r15+rax*2],cx
   1400052e3:	jne    0x1400052db
   1400052e5:	mov    esi,0x50
   1400052ea:	cmp    rax,rsi
   1400052ed:	jae    0x1400053c0
   1400052f3:	lea    r14d,[rsi-0x28]
   1400052f7:	jmp    0x140005375
   1400052f9:	test   r12d,r12d
   1400052fc:	je     0x14000535a
   1400052fe:	mov    edx,DWORD PTR [rip+0x3d50]        # 0x140009054
   140005304:	xor    r9d,r9d
   140005307:	mov    ecx,DWORD PTR [rip+0x4b93]        # 0x140009ea0
   14000530d:	mov    r8d,0x10004
   140005313:	xor    r12d,r12d
   140005316:	mov    QWORD PTR [rsp+0x20],r15
   14000531b:	call   QWORD PTR [rip+0x1e87]        # 0x1400071a8
   140005321:	test   eax,eax
   140005323:	jne    0x1400053a4
   140005325:	xor    eax,eax
   140005327:	mov    r8d,DWORD PTR [rip+0x4c9a]        # 0x140009fc8
   14000532e:	mov    r9,r15
   140005331:	mov    edx,DWORD PTR [rip+0x3d1d]        # 0x140009054
   140005337:	mov    QWORD PTR [rsp+0x30],rdi
   14000533c:	mov    DWORD PTR [rdi],r14d
   14000533f:	mov    ecx,DWORD PTR [rip+0x4b5b]        # 0x140009ea0
   140005345:	mov    DWORD PTR [rsp+0x28],eax
   140005349:	mov    DWORD PTR [rsp+0x20],eax
   14000534d:	call   QWORD PTR [rip+0x1e65]        # 0x1400071b8
   140005353:	cmp    eax,0x8000000e
   140005358:	je     0x1400052f9
   14000535a:	test   eax,eax
   14000535c:	jne    0x1400053a4
   14000535e:	mov    eax,DWORD PTR [rdi+0x4]
   140005361:	cmp    eax,DWORD PTR [rdi]
   140005363:	jbe    0x1400053ee
   140005369:	mov    rcx,rdi
   14000536c:	mov    r14d,eax
   14000536f:	call   QWORD PTR [rip+0x1d13]        # 0x140007088
   140005375:	mov    rdx,r14
   140005378:	mov    ecx,0x40
   14000537d:	call   QWORD PTR [rip+0x1ced]        # 0x140007070
   140005383:	mov    rdi,rax
   140005386:	xor    eax,eax
   140005388:	test   rdi,rdi
   14000538b:	jne    0x140005327
   14000538d:	mov    edx,0x80000044
   140005392:	mov    rcx,QWORD PTR [rip+0x4c07]        # 0x140009fa0
   140005399:	mov    r8d,0x10
   14000539f:	call   0x140004c70
   1400053a4:	test   rdi,rdi
   1400053a7:	je     0x1400053b2
   1400053a9:	mov    rcx,rdi
   1400053ac:	call   QWORD PTR [rip+0x1cd6]        # 0x140007088
   1400053b2:	test   rbx,rbx
   1400053b5:	je     0x1400053c0
   1400053b7:	mov    rcx,rbx
   1400053ba:	call   QWORD PTR [rip+0x1cc8]        # 0x140007088
   1400053c0:	mov    eax,DWORD PTR [rsp+0x40]
   1400053c4:	mov    rcx,QWORD PTR [rbp+0x90]
   1400053cb:	xor    rcx,rsp
   1400053ce:	call   0x140005ca0
   1400053d3:	mov    rbx,QWORD PTR [rsp+0x1f0]
   1400053db:	add    rsp,0x1a0
   1400053e2:	pop    r15
   1400053e4:	pop    r14
   1400053e6:	pop    r13
   1400053e8:	pop    r12
   1400053ea:	pop    rdi
   1400053eb:	pop    rsi
   1400053ec:	pop    rbp
   1400053ed:	ret    
   1400053ee:	mov    r14d,0x1
   1400053f4:	test   BYTE PTR [rdi+0x24],r14b
   1400053f8:	jne    0x1400053a4
   1400053fa:	cmp    DWORD PTR [rdi+0x1c],r14d
   1400053fe:	jne    0x1400053a4
   140005400:	lea    rdx,[rip+0x22d1]        # 0x1400076d8
   140005407:	mov    rcx,r15
   14000540a:	call   QWORD PTR [rip+0x1ff8]        # 0x140007408
   140005410:	mov    r12,rax
   140005413:	inc    eax
   140005415:	movsxd rdx,eax
   140005418:	add    rdx,rdx
   14000541b:	shr    rdx,1
   14000541e:	cmp    rdx,0x7ffffffe
   140005425:	jbe    0x140005431
   140005427:	xor    r10d,r10d
   14000542a:	mov    WORD PTR [rbp-0x10],r10w
   14000542f:	jmp    0x140005471
   140005431:	lea    rax,[rbp-0x10]
   140005435:	mov    r9,r15
   140005438:	sub    r9,rax
   14000543b:	lea    rcx,[rbp-0x10]
   14000543f:	xor    r10d,r10d
   140005442:	mov    r8,rsi
   140005445:	lea    rax,[rdx-0x50]
   140005449:	add    rax,r8
   14000544c:	je     0x140005464
   14000544e:	movzx  eax,WORD PTR [r9+rcx*1]
   140005453:	test   ax,ax
   140005456:	je     0x140005464
   140005458:	mov    WORD PTR [rcx],ax
   14000545b:	add    rcx,0x2
   14000545f:	sub    r8,r14
   140005462:	jne    0x140005445
   140005464:	test   r8,r8
   140005467:	jne    0x14000546d
   140005469:	sub    rcx,0x2
   14000546d:	mov    WORD PTR [rcx],r10w
   140005471:	movsxd r14,r12d
   140005474:	lea    rax,[r14+r14*1]
   140005478:	cmp    rax,0xa0
   14000547e:	jae    0x140005888
   140005484:	lea    rdx,[rip+0x2255]        # 0x1400076e0
   14000548b:	mov    WORD PTR [rbp+rax*1-0x10],r10w
   140005491:	lea    rcx,[rbp-0x10]
   140005495:	call   QWORD PTR [rip+0x1f75]        # 0x140007410
   14000549b:	cmp    rax,r14
   14000549e:	jne    0x1400053a4
   1400054a4:	xor    eax,eax
   1400054a6:	mov    WORD PTR [rsp+0x50],ax
   1400054ab:	mov    ecx,eax
   1400054ad:	mov    edx,eax
   1400054af:	lea    r10d,[rax+0x30]
   1400054b3:	test   r12d,r12d
   1400054b6:	jle    0x1400054e7
   1400054b8:	lea    r8,[rsp+0x50]
   1400054bd:	lea    ebx,[rax+0x1]
   1400054c0:	movzx  r9d,WORD PTR [r15+rdx*2]
   1400054c5:	mov    eax,r9d
   1400054c8:	sub    eax,r10d
   1400054cb:	cmp    eax,0x9
   1400054ce:	ja     0x1400054da
   1400054d0:	add    ecx,ebx
   1400054d2:	mov    WORD PTR [r8],r9w
   1400054d6:	add    r8,0x2
   1400054da:	add    rdx,rbx
   1400054dd:	cmp    rdx,r14
   1400054e0:	jl     0x1400054c0
   1400054e2:	mov    rbx,QWORD PTR [rsp+0x48]
   1400054e7:	movsxd rax,ecx
   1400054ea:	add    rax,rax
   1400054ed:	cmp    rax,0xa0
   1400054f3:	jae    0x140005882
   1400054f9:	xor    r14d,r14d
   1400054fc:	mov    WORD PTR [rsp+rax*1+0x50],r14w
   140005502:	cmp    ecx,0x7
   140005505:	jl     0x1400053a4
   14000550b:	sub    ecx,0x7
   14000550e:	je     0x140005731
   140005514:	sub    ecx,0x1
   140005517:	je     0x14000569d
   14000551d:	sub    ecx,0x2
   140005520:	je     0x1400055c6
   140005526:	cmp    ecx,0x1
   140005529:	jne    0x1400053a4
   14000552f:	movzx  eax,WORD PTR [rsp+0x50]
   140005534:	mov    r14d,ecx
   140005537:	sub    ax,r10w
   14000553b:	cmp    ax,r14w
   14000553f:	ja     0x1400053a4
   140005545:	lea    r8d,[rcx+0x13]
   140005549:	lea    rcx,[rsp+0x50]
   14000554e:	lea    rdx,[rsp+0x52]
   140005553:	call   QWORD PTR [rip+0x1ed7]        # 0x140007430
   140005559:	xor    r15d,r15d
   14000555c:	lea    rdx,[rip+0x219d]        # 0x140007700
   140005563:	lea    rcx,[rbp-0x10]
   140005567:	mov    WORD PTR [rsp+0x64],r15w
   14000556d:	call   QWORD PTR [rip+0x1e95]        # 0x140007408
   140005573:	sub    r12d,r14d
   140005576:	lea    rdx,[rbp-0x10]
   14000557a:	mov    r9,rax
   14000557d:	mov    eax,r12d
   140005580:	sub    eax,r9d
   140005583:	movsxd r8,eax
   140005586:	add    r8,r8
   140005589:	lea    eax,[r9+0x1]
   14000558d:	movsxd rcx,eax
   140005590:	movsxd rax,r9d
   140005593:	lea    rdx,[rdx+rcx*2]
   140005597:	lea    rcx,[rbp-0x10]
   14000559b:	lea    rcx,[rcx+rax*2]
   14000559f:	call   QWORD PTR [rip+0x1e8b]        # 0x140007430
   1400055a5:	movsxd rax,r12d
   1400055a8:	mov    r12d,0xa0
   1400055ae:	add    rax,rax
   1400055b1:	cmp    rax,r12
   1400055b4:	jae    0x140005876
   1400055ba:	mov    WORD PTR [rbp+rax*1-0x10],r15w
   1400055c0:	lea    r10d,[r14+0x2f]
   1400055c4:	jmp    0x1400055d3
   1400055c6:	xor    r15d,r15d
   1400055c9:	mov    r12d,0xa0
   1400055cf:	lea    r14d,[r15+0x1]
   1400055d3:	movzx  eax,WORD PTR [rsp+0x50]
   1400055d8:	sub    ax,r10w
   1400055dc:	cmp    ax,r14w
   1400055e0:	jbe    0x1400053a4
   1400055e6:	movzx  eax,WORD PTR [rsp+0x56]
   1400055eb:	sub    ax,r10w
   1400055ef:	cmp    ax,r14w
   1400055f3:	jbe    0x1400053a4
   1400055f9:	lea    r8,[rip+0x2108]        # 0x140007708
   140005600:	mov    rdx,r12
   140005603:	mov    rcx,r13
   140005606:	call   0x140001008
   14000560b:	mov    rax,rsi
   14000560e:	mov    rcx,r13
   140005611:	cmp    WORD PTR [rcx],r15w
   140005615:	je     0x140005620
   140005617:	add    rcx,0x2
   14000561b:	sub    rax,r14
   14000561e:	jne    0x140005611
   140005620:	test   rax,rax
   140005623:	je     0x140005671
   140005625:	mov    rcx,rsi
   140005628:	sub    rcx,rax
   14000562b:	lea    rax,[r13+rcx*2+0x0]
   140005630:	sub    rsi,rcx
   140005633:	je     0x140005669
   140005635:	lea    rdx,[rcx-0x4d]
   140005639:	add    rdx,rsi
   14000563c:	lea    rcx,[rsp+0x50]
   140005641:	sub    rcx,rax
   140005644:	test   rdx,rdx
   140005647:	je     0x140005664
   140005649:	movzx  r8d,WORD PTR [rax+rcx*1]
   14000564e:	test   r8w,r8w
   140005652:	je     0x140005664
   140005654:	mov    WORD PTR [rax],r8w
   140005658:	sub    rdx,r14
   14000565b:	add    rax,0x2
   14000565f:	sub    rsi,r14
   140005662:	jne    0x140005644
   140005664:	test   rsi,rsi
   140005667:	jne    0x14000566d
   140005669:	sub    rax,0x2
   14000566d:	mov    WORD PTR [rax],r15w
   140005671:	lea    r8,[rip+0x209c]        # 0x140007714
   140005678:	mov    rdx,r12
   14000567b:	mov    rcx,r13
   14000567e:	call   0x140001088
   140005683:	lea    r8,[rsp+0x56]
   140005688:	mov    rdx,r12
   14000568b:	mov    rcx,r13
   14000568e:	call   0x140001088
   140005693:	mov    DWORD PTR [rsp+0x40],r14d
   140005698:	jmp    0x1400053a4
   14000569d:	movzx  eax,WORD PTR [rsp+0x50]
   1400056a2:	mov    ecx,0x1
   1400056a7:	sub    ax,r10w
   1400056ab:	cmp    ax,cx
   1400056ae:	ja     0x1400053a4
   1400056b4:	lea    r8d,[rcx+0xd]
   1400056b8:	lea    rcx,[rsp+0x50]
   1400056bd:	lea    rdx,[rsp+0x52]
   1400056c2:	call   QWORD PTR [rip+0x1d68]        # 0x140007430
   1400056c8:	lea    rdx,[rip+0x2031]        # 0x140007700
   1400056cf:	mov    WORD PTR [rsp+0x5e],r14w
   1400056d5:	lea    rcx,[rbp-0x10]
   1400056d9:	call   QWORD PTR [rip+0x1d29]        # 0x140007408
   1400056df:	dec    r12d
   1400056e2:	lea    rdx,[rbp-0x10]
   1400056e6:	mov    r9,rax
   1400056e9:	mov    eax,r12d
   1400056ec:	sub    eax,r9d
   1400056ef:	movsxd r8,eax
   1400056f2:	add    r8,r8
   1400056f5:	lea    eax,[r9+0x1]
   1400056f9:	movsxd rcx,eax
   1400056fc:	movsxd rax,r9d
   1400056ff:	lea    rdx,[rdx+rcx*2]
   140005703:	lea    rcx,[rbp-0x10]
   140005707:	lea    rcx,[rcx+rax*2]
   14000570b:	call   QWORD PTR [rip+0x1d1f]        # 0x140007430
   140005711:	movsxd rax,r12d
   140005714:	add    rax,rax
   140005717:	cmp    rax,0xa0
   14000571d:	jae    0x14000587c
   140005723:	xor    r12d,r12d
   140005726:	mov    WORD PTR [rbp+rax*1-0x10],r12w
   14000572c:	lea    r10d,[r12+0x30]
   140005731:	movzx  eax,WORD PTR [rsp+0x50]
   140005736:	mov    ecx,0x1
   14000573b:	sub    ax,r10w
   14000573f:	cmp    ax,cx
   140005742:	jbe    0x1400053a4
   140005748:	lea    r14d,[rcx+0x2b]
   14000574c:	jmp    0x140005781
   14000574e:	mov    edx,DWORD PTR [rip+0x4874]        # 0x140009fc8
   140005754:	mov    r8,rbx
   140005757:	mov    DWORD PTR [rbx],r14d
   14000575a:	mov    ecx,DWORD PTR [rip+0x4740]        # 0x140009ea0
   140005760:	call   QWORD PTR [rip+0x19f2]        # 0x140007158
   140005766:	test   eax,eax
   140005768:	jne    0x14000586f
   14000576e:	mov    eax,DWORD PTR [rbx+0x4]
   140005771:	cmp    eax,DWORD PTR [rbx]
   140005773:	jbe    0x14000579c
   140005775:	mov    rcx,rbx
   140005778:	mov    r14d,eax
   14000577b:	call   QWORD PTR [rip+0x1907]        # 0x140007088
   140005781:	mov    rdx,r14
   140005784:	mov    ecx,0x40
   140005789:	call   QWORD PTR [rip+0x18e1]        # 0x140007070
   14000578f:	mov    rbx,rax
   140005792:	test   rax,rax
   140005795:	jne    0x14000574e
   140005797:	jmp    0x14000538d
   14000579c:	mov    r12d,DWORD PTR [rbx+0x14]
   1400057a0:	xor    eax,eax
   1400057a2:	mov    edx,DWORD PTR [rbx+0xc]
   1400057a5:	add    r12,rbx
   1400057a8:	mov    r14d,eax
   1400057ab:	test   edx,edx
   1400057ad:	je     0x1400057d0
   1400057af:	mov    r8d,DWORD PTR [rbx+0x18]
   1400057b3:	lea    esi,[rax+0x1]
   1400057b6:	mov    eax,r14d
   1400057b9:	imul   rcx,rax,0x44
   1400057bd:	cmp    DWORD PTR [rcx+r12*1],r8d
   1400057c1:	je     0x1400057cb
   1400057c3:	add    r14d,esi
   1400057c6:	cmp    r14d,edx
   1400057c9:	jb     0x1400057b6
   1400057cb:	mov    esi,0x50
   1400057d0:	cmp    r14d,edx
   1400057d3:	je     0x1400053a4
   1400057d9:	lea    r8,[rip+0x1f28]        # 0x140007708
   1400057e0:	mov    edx,0xa0
   1400057e5:	mov    rcx,r13
   1400057e8:	call   0x140001008
   1400057ed:	mov    eax,r14d
   1400057f0:	mov    r14d,0xa0
   1400057f6:	imul   rcx,rax,0x44
   1400057fa:	mov    edx,r14d
   1400057fd:	mov    r8d,DWORD PTR [rcx+r12*1+0x14]
   140005802:	mov    rcx,r13
   140005805:	add    r8,rbx
   140005808:	call   0x140001088
   14000580d:	lea    r8,[rip+0x1f00]        # 0x140007714
   140005814:	mov    edx,r14d
   140005817:	mov    rcx,r13
   14000581a:	call   0x140001088
   14000581f:	lea    r8,[rsp+0x50]
   140005824:	mov    edx,r14d
   140005827:	mov    rcx,r13
   14000582a:	call   0x140001088
   14000582f:	lea    rdx,[rip+0x1ea2]        # 0x1400076d8
   140005836:	mov    rcx,r15
   140005839:	call   QWORD PTR [rip+0x1bc9]        # 0x140007408
   14000583f:	mov    rcx,r15
   140005842:	mov    r14,rax
   140005845:	call   QWORD PTR [rip+0x1845]        # 0x140007090
   14000584b:	cmp    r14d,eax
   14000584e:	je     0x140005862
   140005850:	movsxd rax,r14d
   140005853:	mov    rdx,rsi
   140005856:	mov    rcx,r13
   140005859:	lea    r8,[r15+rax*2]
   14000585d:	call   0x140001088
   140005862:	mov    DWORD PTR [rsp+0x40],0x1
   14000586a:	jmp    0x1400053a4
   14000586f:	mov    edx,eax
   140005871:	jmp    0x140005392
   140005876:	call   0x140005e78
   14000587b:	int3   
   14000587c:	call   0x140005e78
   140005881:	int3   
   140005882:	call   0x140005e78
   140005887:	int3   
   140005888:	call   0x140005e78
   14000588d:	int3   
   14000588e:	int3   
   14000588f:	int3   
   140005890:	int3   
   140005891:	int3   
   140005892:	int3   
   140005893:	int3   
   140005894:	xor    r9d,r9d
   140005897:	mov    r8d,r9d
   14000589a:	lea    r10d,[r9+0x26]
   14000589e:	cmp    WORD PTR [rcx],r10w
   1400058a2:	jne    0x1400058ac
   1400058a4:	mov    WORD PTR [rdx+r8*2],r10w
   1400058a9:	inc    r8
   1400058ac:	movzx  eax,WORD PTR [rcx]
   1400058af:	mov    WORD PTR [rdx+r8*2],ax
   1400058b4:	cmp    WORD PTR [rcx],r9w
   1400058b8:	je     0x1400058c7
   1400058ba:	inc    r8
   1400058bd:	add    rcx,0x2
   1400058c1:	cmp    r8,0x27
   1400058c5:	jl     0x14000589e
   1400058c7:	mov    WORD PTR [rdx+0x4e],r9w
   1400058cc:	ret    
   1400058cd:	int3   
   1400058ce:	int3   
   1400058cf:	int3   
   1400058d0:	int3   
   1400058d1:	int3   
   1400058d2:	int3   
   1400058d3:	int3   
   1400058d4:	int3   
   1400058d5:	int3   
   1400058d6:	int3   
   1400058d7:	int3   
   1400058d8:	int3   
   1400058d9:	int3   
   1400058da:	int3   
   1400058db:	int3   
   1400058dc:	int3   
   1400058dd:	int3   
   1400058de:	int3   
   1400058df:	int3   
   1400058e0:	jmp    QWORD PTR [rip+0x193a]        # 0x140007220
   1400058e6:	int3   
   1400058e7:	int3   
   1400058e8:	int3   
   1400058e9:	int3   
   1400058ea:	int3   
   1400058eb:	int3   
   1400058ec:	int3   
   1400058ed:	int3   
   1400058ee:	int3   
   1400058ef:	int3   
   1400058f0:	sub    rsp,0x28
   1400058f4:	mov    eax,0x5a4d
   1400058f9:	cmp    WORD PTR [rip+0xffffffffffffa700],ax        # 0x140000000
   140005900:	je     0x140005906
   140005902:	xor    eax,eax
   140005904:	jmp    0x140005955
   140005906:	movsxd rcx,DWORD PTR [rip+0xffffffffffffa72f]        # 0x14000003c
   14000590d:	lea    rax,[rip+0xffffffffffffa6ec]        # 0x140000000
   140005914:	add    rcx,rax
   140005917:	cmp    DWORD PTR [rcx],0x4550
   14000591d:	jne    0x140005902
   14000591f:	movzx  eax,WORD PTR [rcx+0x18]
   140005923:	cmp    eax,0x10b
   140005928:	je     0x140005944
   14000592a:	cmp    eax,0x20b
   14000592f:	jne    0x140005902
   140005931:	xor    eax,eax
   140005933:	cmp    DWORD PTR [rcx+0x84],0xe
   14000593a:	jbe    0x140005955
   14000593c:	cmp    DWORD PTR [rcx+0xf8],eax
   140005942:	jmp    0x140005952
   140005944:	xor    eax,eax
   140005946:	cmp    DWORD PTR [rcx+0x74],0xe
   14000594a:	jbe    0x140005955
   14000594c:	cmp    DWORD PTR [rcx+0xe8],eax
   140005952:	setne  al
   140005955:	mov    ecx,0x2
   14000595a:	mov    DWORD PTR [rip+0x3720],eax        # 0x140009080
   140005960:	call   0x140006048
   140005965:	mov    ecx,eax
   140005967:	call   QWORD PTR [rip+0x1a7b]        # 0x1400073e8
   14000596d:	mov    rcx,QWORD PTR [rip+0x1a2c]        # 0x1400073a0
   140005974:	or     rax,0xffffffffffffffff
   140005978:	mov    QWORD PTR [rip+0x45f1],rax        # 0x140009f70
   14000597f:	mov    QWORD PTR [rip+0x45f2],rax        # 0x140009f78
   140005986:	mov    eax,DWORD PTR [rip+0x3c80]        # 0x14000960c
   14000598c:	mov    DWORD PTR [rcx],eax
   14000598e:	mov    rcx,QWORD PTR [rip+0x1a03]        # 0x140007398
   140005995:	mov    eax,DWORD PTR [rip+0x3c65]        # 0x140009600
   14000599b:	mov    DWORD PTR [rcx],eax
   14000599d:	call   0x1400060a0
   1400059a2:	cmp    DWORD PTR [rip+0x3657],0x0        # 0x140009000
   1400059a9:	jne    0x1400059b8
   1400059ab:	lea    rcx,[rip+0x6ee]        # 0x1400060a0
   1400059b2:	call   QWORD PTR [rip+0x1a08]        # 0x1400073c0
   1400059b8:	xor    eax,eax
   1400059ba:	add    rsp,0x28
   1400059be:	ret    
   1400059bf:	int3   
   1400059c0:	int3   
   1400059c1:	int3   
   1400059c2:	int3   
   1400059c3:	int3   
   1400059c4:	int3   
   1400059c5:	int3   
   1400059c6:	int3   
   1400059c7:	int3   
   1400059c8:	int3   
   1400059c9:	int3   
   1400059ca:	int3   
   1400059cb:	int3   
   1400059cc:	int3   
   1400059cd:	int3   
   1400059ce:	int3   
   1400059cf:	int3   
   1400059d0:	sub    rsp,0x38
   1400059d4:	mov    eax,DWORD PTR [rip+0x3c2e]        # 0x140009608
   1400059da:	lea    r8,[rip+0x3697]        # 0x140009078
   1400059e1:	mov    r9d,DWORD PTR [rip+0x3c1c]        # 0x140009604
   1400059e8:	lea    rdx,[rip+0x3681]        # 0x140009070
   1400059ef:	mov    DWORD PTR [rip+0x368f],eax        # 0x140009084
   1400059f5:	lea    rcx,[rip+0x366c]        # 0x140009068
   1400059fc:	lea    rax,[rip+0x3681]        # 0x140009084
   140005a03:	mov    QWORD PTR [rsp+0x20],rax
   140005a08:	call   QWORD PTR [rip+0x19e2]        # 0x1400073f0
   140005a0e:	mov    DWORD PTR [rip+0x3658],eax        # 0x14000906c
   140005a14:	add    rsp,0x38
   140005a18:	ret    
   140005a19:	int3   
   140005a1a:	int3   
   140005a1b:	int3   
   140005a1c:	int3   
   140005a1d:	int3   
   140005a1e:	int3   
   140005a1f:	int3   
   140005a20:	sub    rsp,0x28
   140005a24:	call   0x140006194
   140005a29:	add    rsp,0x28
   140005a2d:	jmp    0x140005a38
   140005a32:	int3   
   140005a33:	int3   
   140005a34:	int3   
   140005a35:	int3   
   140005a36:	int3   
   140005a37:	int3   
   140005a38:	mov    rax,rsp
   140005a3b:	mov    QWORD PTR [rax+0x8],rbx
   140005a3f:	mov    QWORD PTR [rax+0x10],rsi
   140005a43:	mov    QWORD PTR [rax+0x18],rdi
   140005a47:	push   r15
   140005a49:	sub    rsp,0xb0
   140005a50:	and    DWORD PTR [rsp+0x20],0x0
   140005a55:	lea    rcx,[rax-0x78]
   140005a59:	call   QWORD PTR [rip+0x16c1]        # 0x140007120
   140005a5f:	nop
   140005a60:	mov    rax,QWORD PTR gs:0x30
   140005a69:	mov    rbx,QWORD PTR [rax+0x8]
   140005a6d:	xor    esi,esi
   140005a6f:	xor    eax,eax
   140005a71:	lock cmpxchg QWORD PTR [rip+0x4506],rbx        # 0x140009f80
   140005a7a:	je     0x140005a95
   140005a7c:	cmp    rax,rbx
   140005a7f:	jne    0x140005a88
   140005a81:	mov    esi,0x1
   140005a86:	jmp    0x140005a95
   140005a88:	mov    ecx,0x3e8
   140005a8d:	call   QWORD PTR [rip+0x1695]        # 0x140007128
   140005a93:	jmp    0x140005a6f
   140005a95:	mov    eax,DWORD PTR [rip+0x44ed]        # 0x140009f88
   140005a9b:	cmp    eax,0x1
   140005a9e:	jne    0x140005aaa
   140005aa0:	lea    ecx,[rax+0x1e]
   140005aa3:	call   0x140006094
   140005aa8:	jmp    0x140005b1b
   140005aaa:	mov    eax,DWORD PTR [rip+0x44d8]        # 0x140009f88
   140005ab0:	test   eax,eax
   140005ab2:	jne    0x140005b11
   140005ab4:	mov    DWORD PTR [rip+0x44ca],0x1        # 0x140009f88
   140005abe:	lea    r15,[rip+0x19c3]        # 0x140007488
   140005ac5:	lea    rbx,[rip+0x19a4]        # 0x140007470
   140005acc:	mov    QWORD PTR [rsp+0x38],rbx
   140005ad1:	mov    DWORD PTR [rsp+0x30],eax
   140005ad5:	cmp    rbx,r15
   140005ad8:	jae    0x140005b03
   140005ada:	test   eax,eax
   140005adc:	jne    0x140005b07
   140005ade:	mov    rdi,QWORD PTR [rbx]
   140005ae1:	test   rdi,rdi
   140005ae4:	je     0x140005af8
   140005ae6:	mov    rcx,rdi
   140005ae9:	mov    rax,QWORD PTR [rip+0x1958]        # 0x140007448
   140005af0:	call   rax
   140005af2:	call   rdi
   140005af4:	mov    DWORD PTR [rsp+0x30],eax
   140005af8:	add    rbx,0x8
   140005afc:	mov    QWORD PTR [rsp+0x38],rbx
   140005b01:	jmp    0x140005ad5
   140005b03:	test   eax,eax
   140005b05:	je     0x140005b1b
   140005b07:	mov    eax,0xff
   140005b0c:	jmp    0x140005c74
   140005b11:	mov    DWORD PTR [rip+0x3549],0x1        # 0x140009064
   140005b1b:	mov    eax,DWORD PTR [rip+0x4467]        # 0x140009f88
   140005b21:	cmp    eax,0x1
   140005b24:	jne    0x140005b43
   140005b26:	lea    rdx,[rip+0x193b]        # 0x140007468
   140005b2d:	lea    rcx,[rip+0x1924]        # 0x140007458
   140005b34:	call   0x14000626a
   140005b39:	mov    DWORD PTR [rip+0x4445],0x2        # 0x140009f88
   140005b43:	test   esi,esi
   140005b45:	jne    0x140005b50
   140005b47:	xor    eax,eax
   140005b49:	xchg   QWORD PTR [rip+0x4430],rax        # 0x140009f80
   140005b50:	cmp    QWORD PTR [rip+0x4438],0x0        # 0x140009f90
   140005b58:	je     0x140005b88
   140005b5a:	lea    rcx,[rip+0x442f]        # 0x140009f90
   140005b61:	call   0x140006100
   140005b66:	test   eax,eax
   140005b68:	je     0x140005b88
   140005b6a:	mov    rbx,QWORD PTR [rip+0x441f]        # 0x140009f90
   140005b71:	mov    rcx,rbx
   140005b74:	mov    rax,QWORD PTR [rip+0x18cd]        # 0x140007448
   140005b7b:	call   rax
   140005b7d:	xor    r8d,r8d
   140005b80:	lea    edx,[r8+0x2]
   140005b84:	xor    ecx,ecx
   140005b86:	call   rbx
   140005b88:	mov    rax,QWORD PTR [rip+0x1819]        # 0x1400073a8
   140005b8f:	mov    rbx,QWORD PTR [rax]
   140005b92:	mov    QWORD PTR [rsp+0x28],rbx
   140005b97:	mov    edi,DWORD PTR [rsp+0x20]
   140005b9b:	cmp    BYTE PTR [rbx],0x20
   140005b9e:	ja     0x140005c13
   140005ba0:	cmp    BYTE PTR [rbx],0x0
   140005ba3:	je     0x140005ba9
   140005ba5:	test   edi,edi
   140005ba7:	jne    0x140005c13
   140005ba9:	mov    al,BYTE PTR [rbx]
   140005bab:	dec    al
   140005bad:	cmp    al,0x1f
   140005baf:	ja     0x140005bbb
   140005bb1:	inc    rbx
   140005bb4:	mov    QWORD PTR [rsp+0x28],rbx
   140005bb9:	jmp    0x140005ba9
   140005bbb:	mov    ecx,DWORD PTR [rsp+0x7c]
   140005bbf:	movzx  eax,WORD PTR [rsp+0x80]
   140005bc7:	mov    r9d,0xa
   140005bcd:	and    cl,0x1
   140005bd0:	cmovne r9d,eax
   140005bd4:	mov    r8,rbx
   140005bd7:	xor    edx,edx
   140005bd9:	lea    rcx,[rip+0xffffffffffffa420]        # 0x140000000
   140005be0:	call   0x1400017b8
   140005be5:	mov    DWORD PTR [rip+0x3475],eax        # 0x140009060
   140005beb:	cmp    DWORD PTR [rip+0x348e],0x0        # 0x140009080
   140005bf2:	jne    0x140005bfc
   140005bf4:	mov    ecx,eax
   140005bf6:	call   QWORD PTR [rip+0x17e4]        # 0x1400073e0
   140005bfc:	cmp    DWORD PTR [rip+0x3461],0x0        # 0x140009064
   140005c03:	jne    0x140005c11
   140005c05:	call   QWORD PTR [rip+0x17c5]        # 0x1400073d0
   140005c0b:	mov    eax,DWORD PTR [rip+0x344f]        # 0x140009060
   140005c11:	jmp    0x140005c74
   140005c13:	cmp    BYTE PTR [rbx],0x22
   140005c16:	jne    0x140005c25
   140005c18:	xor    eax,eax
   140005c1a:	test   edi,edi
   140005c1c:	sete   al
   140005c1f:	mov    edi,eax
   140005c21:	mov    DWORD PTR [rsp+0x20],eax
   140005c25:	movzx  ecx,BYTE PTR [rbx]
   140005c28:	call   QWORD PTR [rip+0x179a]        # 0x1400073c8
   140005c2e:	test   eax,eax
   140005c30:	je     0x140005c3a
   140005c32:	inc    rbx
   140005c35:	mov    QWORD PTR [rsp+0x28],rbx
   140005c3a:	inc    rbx
   140005c3d:	mov    QWORD PTR [rsp+0x28],rbx
   140005c42:	jmp    0x140005b9b
   140005c47:	mov    DWORD PTR [rip+0x3413],eax        # 0x140009060
   140005c4d:	cmp    DWORD PTR [rip+0x342c],0x0        # 0x140009080
   140005c54:	jne    0x140005c5f
   140005c56:	mov    ecx,eax
   140005c58:	call   QWORD PTR [rip+0x177a]        # 0x1400073d8
   140005c5e:	int3   
   140005c5f:	cmp    DWORD PTR [rip+0x33fe],0x0        # 0x140009064
   140005c66:	jne    0x140005c74
   140005c68:	call   QWORD PTR [rip+0x1762]        # 0x1400073d0
   140005c6e:	mov    eax,DWORD PTR [rip+0x33ec]        # 0x140009060
   140005c74:	lea    r11,[rsp+0xb0]
   140005c7c:	mov    rbx,QWORD PTR [r11+0x10]
   140005c80:	mov    rsi,QWORD PTR [r11+0x18]
   140005c84:	mov    rdi,QWORD PTR [r11+0x20]
   140005c88:	mov    rsp,r11
   140005c8b:	pop    r15
   140005c8d:	ret    
   140005c8e:	int3   
   140005c8f:	int3   
   140005c90:	int3   
   140005c91:	int3   
   140005c92:	int3   
   140005c93:	int3   
   140005c94:	int3   
   140005c95:	int3   
   140005c96:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005ca0:	cmp    rcx,QWORD PTR [rip+0x3361]        # 0x140009008
   140005ca7:	jne    0x140005cb9
   140005ca9:	rol    rcx,0x10
   140005cad:	test   cx,0xffff
   140005cb2:	jne    0x140005cb5
   140005cb4:	ret    
   140005cb5:	ror    rcx,0x10
   140005cb9:	jmp    0x140005d00
   140005cbe:	int3   
   140005cbf:	int3   
   140005cc0:	int3   
   140005cc1:	int3   
   140005cc2:	int3   
   140005cc3:	int3   
   140005cc4:	rex push rbx
   140005cc6:	sub    rsp,0x20
   140005cca:	mov    rbx,rcx
   140005ccd:	xor    ecx,ecx
   140005ccf:	call   QWORD PTR [rip+0x1423]        # 0x1400070f8
   140005cd5:	mov    rcx,rbx
   140005cd8:	call   QWORD PTR [rip+0x1422]        # 0x140007100
   140005cde:	call   QWORD PTR [rip+0x140c]        # 0x1400070f0
   140005ce4:	mov    rcx,rax
   140005ce7:	mov    edx,0xc0000409
   140005cec:	add    rsp,0x20
   140005cf0:	pop    rbx
   140005cf1:	rex.W jmp QWORD PTR [rip+0x13f0]        # 0x1400070e8
   140005cf8:	int3   
   140005cf9:	int3   
   140005cfa:	int3   
   140005cfb:	int3   
   140005cfc:	int3   
   140005cfd:	int3   
   140005cfe:	int3   
   140005cff:	int3   
   140005d00:	mov    QWORD PTR [rsp+0x8],rcx
   140005d05:	sub    rsp,0x88
   140005d0c:	lea    rcx,[rip+0x341d]        # 0x140009130
   140005d13:	call   QWORD PTR [rip+0x13ff]        # 0x140007118
   140005d19:	mov    rax,QWORD PTR [rip+0x3508]        # 0x140009228
   140005d20:	mov    QWORD PTR [rsp+0x48],rax
   140005d25:	xor    r8d,r8d
   140005d28:	lea    rdx,[rsp+0x50]
   140005d2d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005d32:	call   QWORD PTR [rip+0x13d8]        # 0x140007110
   140005d38:	mov    QWORD PTR [rsp+0x40],rax
   140005d3d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005d43:	je     0x140005d87
   140005d45:	mov    QWORD PTR [rsp+0x38],0x0
   140005d4e:	lea    rax,[rsp+0x58]
   140005d53:	mov    QWORD PTR [rsp+0x30],rax
   140005d58:	lea    rax,[rsp+0x60]
   140005d5d:	mov    QWORD PTR [rsp+0x28],rax
   140005d62:	lea    rax,[rip+0x33c7]        # 0x140009130
   140005d69:	mov    QWORD PTR [rsp+0x20],rax
   140005d6e:	mov    r9,QWORD PTR [rsp+0x40]
   140005d73:	mov    r8,QWORD PTR [rsp+0x48]
   140005d78:	mov    rdx,QWORD PTR [rsp+0x50]
   140005d7d:	xor    ecx,ecx
   140005d7f:	call   QWORD PTR [rip+0x1383]        # 0x140007108
   140005d85:	jmp    0x140005daa
   140005d87:	mov    rax,QWORD PTR [rip+0x343a]        # 0x1400091c8
   140005d8e:	mov    rax,QWORD PTR [rax]
   140005d91:	mov    QWORD PTR [rip+0x3490],rax        # 0x140009228
   140005d98:	mov    rax,QWORD PTR [rip+0x3429]        # 0x1400091c8
   140005d9f:	add    rax,0x8
   140005da3:	mov    QWORD PTR [rip+0x341e],rax        # 0x1400091c8
   140005daa:	mov    rax,QWORD PTR [rip+0x3477]        # 0x140009228
   140005db1:	mov    QWORD PTR [rip+0x32e8],rax        # 0x1400090a0
   140005db8:	mov    rax,QWORD PTR [rsp+0x90]
   140005dc0:	mov    QWORD PTR [rip+0x33e9],rax        # 0x1400091b0
   140005dc7:	mov    DWORD PTR [rip+0x32bf],0xc0000409        # 0x140009090
   140005dd1:	mov    DWORD PTR [rip+0x32b9],0x1        # 0x140009094
   140005ddb:	mov    DWORD PTR [rip+0x32c3],0x3        # 0x1400090a8
   140005de5:	mov    eax,0x8
   140005dea:	imul   rax,rax,0x0
   140005dee:	lea    rcx,[rip+0x32bb]        # 0x1400090b0
   140005df5:	mov    QWORD PTR [rcx+rax*1],0x2
   140005dfd:	mov    eax,0x8
   140005e02:	imul   rax,rax,0x1
   140005e06:	lea    rcx,[rip+0x32a3]        # 0x1400090b0
   140005e0d:	mov    rdx,QWORD PTR [rip+0x31f4]        # 0x140009008
   140005e14:	mov    QWORD PTR [rcx+rax*1],rdx
   140005e18:	mov    eax,0x8
   140005e1d:	imul   rax,rax,0x2
   140005e21:	lea    rcx,[rip+0x3288]        # 0x1400090b0
   140005e28:	mov    rdx,QWORD PTR [rip+0x31e1]        # 0x140009010
   140005e2f:	mov    QWORD PTR [rcx+rax*1],rdx
   140005e33:	mov    eax,0x8
   140005e38:	imul   rax,rax,0x0
   140005e3c:	mov    rcx,QWORD PTR [rip+0x31c5]        # 0x140009008
   140005e43:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005e48:	mov    eax,0x8
   140005e4d:	imul   rax,rax,0x1
   140005e51:	mov    rcx,QWORD PTR [rip+0x31b8]        # 0x140009010
   140005e58:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005e5d:	lea    rcx,[rip+0x166c]        # 0x1400074d0
   140005e64:	call   0x140005cc4
   140005e69:	add    rsp,0x88
   140005e70:	ret    
   140005e71:	int3   
   140005e72:	int3   
   140005e73:	int3   
   140005e74:	int3   
   140005e75:	int3   
   140005e76:	int3   
   140005e77:	int3   
   140005e78:	sub    rsp,0x78
   140005e7c:	lea    rcx,[rip+0x32ad]        # 0x140009130
   140005e83:	call   QWORD PTR [rip+0x128f]        # 0x140007118
   140005e89:	mov    rax,QWORD PTR [rip+0x3398]        # 0x140009228
   140005e90:	mov    QWORD PTR [rsp+0x48],rax
   140005e95:	xor    r8d,r8d
   140005e98:	lea    rdx,[rsp+0x50]
   140005e9d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005ea2:	call   QWORD PTR [rip+0x1268]        # 0x140007110
   140005ea8:	mov    QWORD PTR [rsp+0x40],rax
   140005ead:	cmp    QWORD PTR [rsp+0x40],0x0
   140005eb3:	je     0x140005ef7
   140005eb5:	mov    QWORD PTR [rsp+0x38],0x0
   140005ebe:	lea    rax,[rsp+0x58]
   140005ec3:	mov    QWORD PTR [rsp+0x30],rax
   140005ec8:	lea    rax,[rsp+0x60]
   140005ecd:	mov    QWORD PTR [rsp+0x28],rax
   140005ed2:	lea    rax,[rip+0x3257]        # 0x140009130
   140005ed9:	mov    QWORD PTR [rsp+0x20],rax
   140005ede:	mov    r9,QWORD PTR [rsp+0x40]
   140005ee3:	mov    r8,QWORD PTR [rsp+0x48]
   140005ee8:	mov    rdx,QWORD PTR [rsp+0x50]
   140005eed:	xor    ecx,ecx
   140005eef:	call   QWORD PTR [rip+0x1213]        # 0x140007108
   140005ef5:	jmp    0x140005f1a
   140005ef7:	mov    rax,QWORD PTR [rip+0x32ca]        # 0x1400091c8
   140005efe:	mov    rax,QWORD PTR [rax]
   140005f01:	mov    QWORD PTR [rip+0x3320],rax        # 0x140009228
   140005f08:	mov    rax,QWORD PTR [rip+0x32b9]        # 0x1400091c8
   140005f0f:	add    rax,0x8
   140005f13:	mov    QWORD PTR [rip+0x32ae],rax        # 0x1400091c8
   140005f1a:	mov    rax,QWORD PTR [rip+0x3307]        # 0x140009228
   140005f21:	mov    QWORD PTR [rip+0x3178],rax        # 0x1400090a0
   140005f28:	mov    DWORD PTR [rip+0x315e],0xc0000409        # 0x140009090
   140005f32:	mov    DWORD PTR [rip+0x3158],0x1        # 0x140009094
   140005f3c:	mov    DWORD PTR [rip+0x3162],0x1        # 0x1400090a8
   140005f46:	mov    eax,0x8
   140005f4b:	imul   rax,rax,0x0
   140005f4f:	lea    rcx,[rip+0x315a]        # 0x1400090b0
   140005f56:	mov    QWORD PTR [rcx+rax*1],0x8
   140005f5e:	lea    rcx,[rip+0x156b]        # 0x1400074d0
   140005f65:	call   0x140005cc4
   140005f6a:	add    rsp,0x78
   140005f6e:	ret    
   140005f6f:	int3   
   140005f70:	int3   
   140005f71:	int3   
   140005f72:	int3   
   140005f73:	int3   
   140005f74:	int3   
   140005f75:	int3   
   140005f76:	int3   
   140005f77:	int3   
   140005f78:	int3   
   140005f79:	int3   
   140005f7a:	int3   
   140005f7b:	int3   
   140005f7c:	int3   
   140005f7d:	int3   
   140005f7e:	int3   
   140005f7f:	int3   
   140005f80:	sub    rsp,0x28
   140005f84:	mov    rax,QWORD PTR [rcx]
   140005f87:	cmp    DWORD PTR [rax],0xe06d7363
   140005f8d:	jne    0x140005fb2
   140005f8f:	cmp    DWORD PTR [rax+0x18],0x4
   140005f93:	jne    0x140005fb2
   140005f95:	mov    ecx,DWORD PTR [rax+0x20]
   140005f98:	lea    eax,[rcx-0x19930520]
   140005f9e:	cmp    eax,0x2
   140005fa1:	jbe    0x140005fab
   140005fa3:	cmp    ecx,0x1994000
   140005fa9:	jne    0x140005fb2
   140005fab:	call   QWORD PTR [rip+0x13df]        # 0x140007390
   140005fb1:	int3   
   140005fb2:	xor    eax,eax
   140005fb4:	add    rsp,0x28
   140005fb8:	ret    
   140005fb9:	int3   
   140005fba:	int3   
   140005fbb:	int3   
   140005fbc:	int3   
   140005fbd:	int3   
   140005fbe:	int3   
   140005fbf:	int3   
   140005fc0:	sub    rsp,0x28
   140005fc4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005f80
   140005fcb:	call   QWORD PTR [rip+0x1127]        # 0x1400070f8
   140005fd1:	xor    eax,eax
   140005fd3:	add    rsp,0x28
   140005fd7:	ret    
   140005fd8:	int3   
   140005fd9:	int3   
   140005fda:	int3   
   140005fdb:	int3   
   140005fdc:	int3   
   140005fdd:	int3   
   140005fde:	jmp    QWORD PTR [rip+0x141c]        # 0x140007400
   140005fe4:	int3   
   140005fe5:	int3   
   140005fe6:	int3   
   140005fe7:	int3   
   140005fe8:	int3   
   140005fe9:	int3   
   140005fea:	int3   
   140005feb:	int3   
   140005fec:	sub    rsp,0x18
   140005ff0:	xor    edx,edx
   140005ff2:	lea    rax,[rcx-0x1]
   140005ff6:	cmp    rax,0xfffffffffffffffd
   140005ffa:	ja     0x140006038
   140005ffc:	mov    eax,0x5a4d
   140006001:	cmp    WORD PTR [rcx],ax
   140006004:	jne    0x140006030
   140006006:	cmp    DWORD PTR [rcx+0x3c],edx
   140006009:	jl     0x140006030
   14000600b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140006012:	jae    0x140006030
   140006014:	movsxd rax,DWORD PTR [rcx+0x3c]
   140006018:	add    rax,rcx
   14000601b:	mov    QWORD PTR [rsp],rax
   14000601f:	cmp    DWORD PTR [rax],0x4550
   140006025:	cmovne rax,rdx
   140006029:	mov    rdx,rax
   14000602c:	mov    QWORD PTR [rsp],rax
   140006030:	jmp    0x140006038
   140006032:	xor    edx,edx
   140006034:	mov    QWORD PTR [rsp],rdx
   140006038:	mov    rax,rdx
   14000603b:	add    rsp,0x18
   14000603f:	ret    
   140006040:	int3   
   140006041:	int3   
   140006042:	int3   
   140006043:	int3   
   140006044:	int3   
   140006045:	int3   
   140006046:	int3   
   140006047:	int3   
   140006048:	rex push rbx
   14000604a:	sub    rsp,0x20
   14000604e:	mov    ebx,ecx
   140006050:	xor    ecx,ecx
   140006052:	call   QWORD PTR [rip+0x1058]        # 0x1400070b0
   140006058:	test   rax,rax
   14000605b:	je     0x140006085
   14000605d:	mov    rcx,rax
   140006060:	call   0x140005fec
   140006065:	test   rax,rax
   140006068:	je     0x140006085
   14000606a:	mov    ecx,0x2
   14000606f:	cmp    WORD PTR [rax+0x5c],cx
   140006073:	jne    0x140006079
   140006075:	mov    eax,ecx
   140006077:	jmp    0x140006087
   140006079:	cmp    WORD PTR [rax+0x5c],0x3
   14000607e:	mov    eax,0x1
   140006083:	je     0x140006087
   140006085:	mov    eax,ebx
   140006087:	add    rsp,0x20
   14000608b:	pop    rbx
   14000608c:	ret    
   14000608d:	int3   
   14000608e:	int3   
   14000608f:	int3   
   140006090:	int3   
   140006091:	int3   
   140006092:	int3   
   140006093:	int3   
   140006094:	jmp    QWORD PTR [rip+0x135e]        # 0x1400073f8
   14000609a:	int3   
   14000609b:	int3   
   14000609c:	int3   
   14000609d:	int3   
   14000609e:	int3   
   14000609f:	int3   
   1400060a0:	xor    eax,eax
   1400060a2:	ret    
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	int3   
   1400060a9:	int3   
   1400060aa:	int3   
   1400060ab:	int3   
   1400060ac:	int3   
   1400060ad:	int3   
   1400060ae:	int3   
   1400060af:	int3   
   1400060b0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400060b4:	xor    r9d,r9d
   1400060b7:	add    r8,rcx
   1400060ba:	mov    r10,rdx
   1400060bd:	movzx  eax,WORD PTR [r8+0x14]
   1400060c2:	movzx  r11d,WORD PTR [r8+0x6]
   1400060c7:	add    rax,0x18
   1400060cb:	add    rax,r8
   1400060ce:	test   r11d,r11d
   1400060d1:	je     0x1400060f1
   1400060d3:	mov    edx,DWORD PTR [rax+0xc]
   1400060d6:	cmp    r10,rdx
   1400060d9:	jb     0x1400060e5
   1400060db:	mov    ecx,DWORD PTR [rax+0x8]
   1400060de:	add    ecx,edx
   1400060e0:	cmp    r10,rcx
   1400060e3:	jb     0x1400060f3
   1400060e5:	inc    r9d
   1400060e8:	add    rax,0x28
   1400060ec:	cmp    r9d,r11d
   1400060ef:	jb     0x1400060d3
   1400060f1:	xor    eax,eax
   1400060f3:	ret    
   1400060f4:	int3   
   1400060f5:	int3   
   1400060f6:	int3   
   1400060f7:	int3   
   1400060f8:	int3   
   1400060f9:	int3   
   1400060fa:	int3   
   1400060fb:	int3   
   1400060fc:	int3   
   1400060fd:	int3   
   1400060fe:	int3   
   1400060ff:	int3   
   140006100:	mov    QWORD PTR [rsp+0x8],rbx
   140006105:	push   rdi
   140006106:	sub    rsp,0x20
   14000610a:	mov    rbx,rcx
   14000610d:	lea    rdi,[rip+0xffffffffffff9eec]        # 0x140000000
   140006114:	mov    rcx,rdi
   140006117:	call   0x140006160
   14000611c:	test   eax,eax
   14000611e:	je     0x140006142
   140006120:	sub    rbx,rdi
   140006123:	mov    rdx,rbx
   140006126:	mov    rcx,rdi
   140006129:	call   0x1400060b0
   14000612e:	test   rax,rax
   140006131:	je     0x140006142
   140006133:	mov    eax,DWORD PTR [rax+0x24]
   140006136:	shr    eax,0x1f
   140006139:	not    eax
   14000613b:	and    eax,0x1
   14000613e:	jmp    0x140006142
   140006140:	xor    eax,eax
   140006142:	mov    rbx,QWORD PTR [rsp+0x30]
   140006147:	add    rsp,0x20
   14000614b:	pop    rdi
   14000614c:	ret    
   14000614d:	int3   
   14000614e:	int3   
   14000614f:	int3   
   140006150:	int3   
   140006151:	int3   
   140006152:	int3   
   140006153:	int3   
   140006154:	int3   
   140006155:	int3   
   140006156:	int3   
   140006157:	int3   
   140006158:	int3   
   140006159:	int3   
   14000615a:	int3   
   14000615b:	int3   
   14000615c:	int3   
   14000615d:	int3   
   14000615e:	int3   
   14000615f:	int3   
   140006160:	mov    rax,rcx
   140006163:	mov    ecx,0x5a4d
   140006168:	cmp    WORD PTR [rax],cx
   14000616b:	je     0x140006170
   14000616d:	xor    eax,eax
   14000616f:	ret    
   140006170:	movsxd rcx,DWORD PTR [rax+0x3c]
   140006174:	add    rcx,rax
   140006177:	xor    eax,eax
   140006179:	cmp    DWORD PTR [rcx],0x4550
   14000617f:	jne    0x14000618d
   140006181:	mov    edx,0x20b
   140006186:	cmp    WORD PTR [rcx+0x18],dx
   14000618a:	sete   al
   14000618d:	ret    
   14000618e:	int3   
   14000618f:	int3   
   140006190:	int3   
   140006191:	int3   
   140006192:	int3   
   140006193:	int3   
   140006194:	mov    QWORD PTR [rsp+0x20],rbx
   140006199:	push   rbp
   14000619a:	mov    rbp,rsp
   14000619d:	sub    rsp,0x20
   1400061a1:	and    QWORD PTR [rbp+0x18],0x0
   1400061a6:	movabs rbx,0x2b992ddfa232
   1400061b0:	mov    rax,QWORD PTR [rip+0x2e51]        # 0x140009008
   1400061b7:	cmp    rax,rbx
   1400061ba:	jne    0x14000624f
   1400061c0:	lea    rcx,[rbp+0x18]
   1400061c4:	call   QWORD PTR [rip+0xf16]        # 0x1400070e0
   1400061ca:	mov    rax,QWORD PTR [rbp+0x18]
   1400061ce:	mov    QWORD PTR [rbp+0x10],rax
   1400061d2:	call   QWORD PTR [rip+0xef8]        # 0x1400070d0
   1400061d8:	mov    eax,eax
   1400061da:	xor    QWORD PTR [rbp+0x10],rax
   1400061de:	call   QWORD PTR [rip+0xee4]        # 0x1400070c8
   1400061e4:	mov    eax,eax
   1400061e6:	xor    QWORD PTR [rbp+0x10],rax
   1400061ea:	call   QWORD PTR [rip+0xeb8]        # 0x1400070a8
   1400061f0:	mov    eax,eax
   1400061f2:	shl    rax,0x18
   1400061f6:	xor    QWORD PTR [rbp+0x10],rax
   1400061fa:	call   QWORD PTR [rip+0xea8]        # 0x1400070a8
   140006200:	mov    eax,eax
   140006202:	lea    rcx,[rbp+0x10]
   140006206:	xor    rax,QWORD PTR [rbp+0x10]
   14000620a:	xor    rax,rcx
   14000620d:	lea    rcx,[rbp+0x20]
   140006211:	mov    QWORD PTR [rbp+0x10],rax
   140006215:	call   QWORD PTR [rip+0xebd]        # 0x1400070d8
   14000621b:	mov    eax,DWORD PTR [rbp+0x20]
   14000621e:	movabs rcx,0xffffffffffff
   140006228:	shl    rax,0x20
   14000622c:	xor    rax,QWORD PTR [rbp+0x20]
   140006230:	xor    rax,QWORD PTR [rbp+0x10]
   140006234:	and    rax,rcx
   140006237:	movabs rcx,0x2b992ddfa233
   140006241:	cmp    rax,rbx
   140006244:	cmove  rax,rcx
   140006248:	mov    QWORD PTR [rip+0x2db9],rax        # 0x140009008
   14000624f:	mov    rbx,QWORD PTR [rsp+0x48]
   140006254:	not    rax
   140006257:	mov    QWORD PTR [rip+0x2db2],rax        # 0x140009010
   14000625e:	add    rsp,0x20
   140006262:	pop    rbp
   140006263:	ret    
   140006264:	int3   
   140006265:	int3   
   140006266:	int3   
   140006267:	int3   
   140006268:	int3   
   140006269:	int3   
   14000626a:	jmp    QWORD PTR [rip+0x1148]        # 0x1400073b8
   140006270:	int3   
   140006271:	int3   
   140006272:	int3   
   140006273:	int3   
   140006274:	int3   
   140006275:	int3   
   140006276:	jmp    QWORD PTR [rip+0x1134]        # 0x1400073b0
   14000627c:	int3   
   14000627d:	int3   
   14000627e:	int3   
   14000627f:	int3   
   140006280:	int3   
   140006281:	int3   
   140006282:	int3   
   140006283:	int3   
   140006284:	int3   
   140006285:	int3   
   140006286:	int3   
   140006287:	int3   
   140006288:	int3   
   140006289:	int3   
   14000628a:	int3   
   14000628b:	int3   
   14000628c:	int3   
   14000628d:	int3   
   14000628e:	int3   
   14000628f:	int3   
   140006290:	ret    0x0
   140006293:	int3   
   140006294:	int3   
   140006295:	int3   
   140006296:	int3   
   140006297:	int3   
   140006298:	int3   
   140006299:	int3   
   14000629a:	int3   
   14000629b:	int3   
   14000629c:	int3   
   14000629d:	int3   
   14000629e:	int3   
   14000629f:	int3   
   1400062a0:	int3   
   1400062a1:	int3   
   1400062a2:	int3   
   1400062a3:	int3   
   1400062a4:	int3   
   1400062a5:	int3   
   1400062a6:	int3   
   1400062a7:	int3   
   1400062a8:	sub    rsp,0x28
   1400062ac:	mov    r8,QWORD PTR [r9+0x38]
   1400062b0:	mov    rcx,rdx
   1400062b3:	mov    rdx,r9
   1400062b6:	call   0x1400062cc
   1400062bb:	mov    eax,0x1
   1400062c0:	add    rsp,0x28
   1400062c4:	ret    
   1400062c5:	int3   
   1400062c6:	int3   
   1400062c7:	int3   
   1400062c8:	int3   
   1400062c9:	int3   
   1400062ca:	int3   
   1400062cb:	int3   
   1400062cc:	rex push rbx
   1400062ce:	sub    rsp,0x20
   1400062d2:	mov    r11d,DWORD PTR [r8]
   1400062d5:	mov    rbx,rdx
   1400062d8:	and    r11d,0xfffffff8
   1400062dc:	mov    r9,rcx
   1400062df:	test   BYTE PTR [r8],0x4
   1400062e3:	mov    r10,rcx
   1400062e6:	je     0x1400062fb
   1400062e8:	mov    eax,DWORD PTR [r8+0x8]
   1400062ec:	movsxd r10,DWORD PTR [r8+0x4]
   1400062f0:	neg    eax
   1400062f2:	add    r10,rcx
   1400062f5:	movsxd rcx,eax
   1400062f8:	and    r10,rcx
   1400062fb:	movsxd rax,r11d
   1400062fe:	mov    rdx,QWORD PTR [rax+r10*1]
   140006302:	mov    rax,QWORD PTR [rbx+0x10]
   140006306:	mov    ecx,DWORD PTR [rax+0x8]
   140006309:	add    rcx,QWORD PTR [rbx+0x8]
   14000630d:	test   BYTE PTR [rcx+0x3],0xf
   140006311:	je     0x14000631f
   140006313:	movzx  eax,BYTE PTR [rcx+0x3]
   140006317:	and    eax,0xfffffff0
   14000631a:	cdqe   
   14000631c:	add    r9,rax
   14000631f:	xor    r9,rdx
   140006322:	mov    rcx,r9
   140006325:	add    rsp,0x20
   140006329:	pop    rbx
   14000632a:	jmp    0x140005ca0
   14000632f:	int3   
   140006330:	int3   
   140006331:	int3   
   140006332:	int3   
   140006333:	int3   
   140006334:	int3   
   140006335:	int3   
   140006336:	jmp    QWORD PTR [rip+0x10fc]        # 0x140007438
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	int3   
   140006341:	int3   
   140006342:	int3   
   140006343:	int3   
   140006344:	int3   
   140006345:	int3   
   140006346:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006350:	jmp    rax
   140006352:	int3   
   140006353:	int3   
   140006354:	int3   
   140006355:	int3   
   140006356:	int3   
   140006357:	int3   
   140006358:	int3   
   140006359:	int3   
   14000635a:	int3   
   14000635b:	int3   
   14000635c:	int3   
   14000635d:	int3   
   14000635e:	int3   
   14000635f:	int3   
   140006360:	int3   
   140006361:	int3   
   140006362:	int3   
   140006363:	int3   
   140006364:	int3   
   140006365:	int3   
   140006366:	rex push rbp
   140006368:	sub    rsp,0x20
   14000636c:	mov    rbp,rdx
   14000636f:	mov    rax,QWORD PTR [rcx]
   140006372:	mov    rdx,rcx
   140006375:	mov    ecx,DWORD PTR [rax]
   140006377:	call   0x140005fde
   14000637c:	nop
   14000637d:	add    rsp,0x20
   140006381:	pop    rbp
   140006382:	ret    
   140006383:	int3   
   140006384:	int3   
   140006385:	int3   
   140006386:	int3   
   140006387:	int3   
   140006388:	int3   
   140006389:	int3   
   14000638a:	int3   
   14000638b:	int3   
   14000638c:	int3   
   14000638d:	int3   
   14000638e:	int3   
   14000638f:	int3   
   140006390:	rex push rbp
   140006392:	sub    rsp,0x20
   140006396:	mov    rbp,rdx
   140006399:	mov    rax,QWORD PTR [rcx]
   14000639c:	xor    ecx,ecx
   14000639e:	cmp    DWORD PTR [rax],0xc0000005
   1400063a4:	sete   cl
   1400063a7:	mov    eax,ecx
   1400063a9:	add    rsp,0x20
   1400063ad:	pop    rbp
   1400063ae:	ret    
   1400063af:	int3   

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	rol    BYTE PTR [rax+rax*1+0x0],cl
   140007007:	add    dh,ah
   140007009:	test   BYTE PTR [rax],al
   14000700b:	add    BYTE PTR [rax],al
   14000700d:	add    BYTE PTR [rax],al
   14000700f:	add    al,bh
   140007011:	test   BYTE PTR [rax],al
   140007013:	add    BYTE PTR [rax],al
   140007015:	add    BYTE PTR [rax],al
   140007017:	add    BYTE PTR [rax],cl
   140007019:	test   DWORD PTR [rax],eax
   14000701b:	add    BYTE PTR [rax],al
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rsi],dl
   140007021:	test   DWORD PTR [rax],eax
   140007023:	add    BYTE PTR [rax],al
   140007025:	add    BYTE PTR [rax],al
   140007027:	add    al,al
   140007029:	test   BYTE PTR [rax],al
	...
   140007037:	add    BYTE PTR [rax-0x7a],al
   14000703a:	add    BYTE PTR [rax],al
   14000703c:	add    BYTE PTR [rax],al
   14000703e:	add    BYTE PTR [rax],al
   140007040:	xchg   BYTE PTR ss:[rax],al
   140007043:	add    BYTE PTR [rax],al
   140007045:	add    BYTE PTR [rax],al
   140007047:	add    BYTE PTR [rax],ah
   140007049:	xchg   BYTE PTR [rax],al
   14000704b:	add    BYTE PTR [rax],al
   14000704d:	add    BYTE PTR [rax],al
   14000704f:	add    BYTE PTR [rdx],dl
   140007051:	xchg   BYTE PTR [rax],al
   140007053:	add    BYTE PTR [rax],al
   140007055:	add    BYTE PTR [rax],al
   140007057:	add    BYTE PTR [rdx],al
   140007059:	xchg   BYTE PTR [rax],al
   14000705b:	add    BYTE PTR [rax],al
   14000705d:	add    BYTE PTR [rax],al
   14000705f:	add    al,dh
   140007061:	test   DWORD PTR [rax],eax
	...
   14000706f:	add    BYTE PTR [rbp+rax*4+0x0],ah
   140007076:	add    BYTE PTR [rax],al
   140007078:	mov    dl,0x85
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	add    BYTE PTR [rax],al
   14000707e:	add    BYTE PTR [rax],al
   140007080:	enter  0x85,0x0
   140007084:	add    BYTE PTR [rax],al
   140007086:	add    BYTE PTR [rax],al
   140007088:	(bad)  
   140007089:	test   DWORD PTR [rax],eax
   14000708b:	add    BYTE PTR [rax],al
   14000708d:	add    BYTE PTR [rax],al
   14000708f:	add    BYTE PTR [rax+0x85],cl
   140007095:	add    BYTE PTR [rax],al
   140007097:	add    BYTE PTR [rbp+rax*4+0x0],bh
   14000709b:	add    BYTE PTR [rax],al
   14000709d:	add    BYTE PTR [rax],al
   14000709f:	add    BYTE PTR [rdx-0x7b],ch
   1400070a2:	add    BYTE PTR [rax],al
   1400070a4:	add    BYTE PTR [rax],al
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	pop    rdx
   1400070a9:	test   DWORD PTR [rax],eax
   1400070ab:	add    BYTE PTR [rax],al
   1400070ad:	add    BYTE PTR [rax],al
   1400070af:	add    BYTE PTR [rsi-0x7b],al
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	add    BYTE PTR [rax],al
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	test   DWORD PTR ss:[rax],eax
   1400070bb:	add    BYTE PTR [rax],al
   1400070bd:	add    BYTE PTR [rax],al
   1400070bf:	add    BYTE PTR [rbp+rax*4+0x0],dl
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	jb     0x140007057
   1400070ca:	add    BYTE PTR [rax],al
   1400070cc:	add    BYTE PTR [rax],al
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	pop    rsp
   1400070d1:	lea    eax,[rax]
   1400070d3:	add    BYTE PTR [rax],al
   1400070d5:	add    BYTE PTR [rax],al
   1400070d7:	add    BYTE PTR [rdx-0x73],al
   1400070da:	add    BYTE PTR [rax],al
   1400070dc:	add    BYTE PTR [rax],al
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	mov    BYTE PTR [rbp+0x0],cl
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	lea    eax,cs:[rax]
   1400070eb:	add    BYTE PTR [rax],al
   1400070ed:	add    BYTE PTR [rax],al
   1400070ef:	add    BYTE PTR [rdx],bl
   1400070f1:	lea    eax,[rax]
   1400070f3:	add    BYTE PTR [rax],al
   1400070f5:	add    BYTE PTR [rax],al
   1400070f7:	add    ah,bh
   1400070f9:	mov    WORD PTR [rax],es
   1400070fb:	add    BYTE PTR [rax],al
   1400070fd:	add    BYTE PTR [rax],al
   1400070ff:	add    al,ah
   140007101:	mov    WORD PTR [rax],es
   140007103:	add    BYTE PTR [rax],al
   140007105:	add    BYTE PTR [rax],al
   140007107:	add    ah,cl
   140007109:	mov    WORD PTR [rax],es
   14000710b:	add    BYTE PTR [rax],al
   14000710d:	add    BYTE PTR [rax],al
   14000710f:	add    BYTE PTR [rdx+0x8c],dh
   140007115:	add    BYTE PTR [rax],al
   140007117:	add    BYTE PTR [rsi+0x8c],bl
   14000711d:	add    BYTE PTR [rax],al
   14000711f:	add    BYTE PTR [rsp+rcx*4+0x0],cl
   140007126:	add    BYTE PTR [rax],al
   140007128:	test   BYTE PTR [rax+rax*1+0x0],cl
	...
   140007137:	add    ah,dh
   140007139:	mov    al,BYTE PTR [rax]
	...
   140007147:	add    BYTE PTR [rdx],ch
   140007149:	mov    WORD PTR [rax],es
   14000714b:	add    BYTE PTR [rax],al
   14000714d:	add    BYTE PTR [rax],al
   14000714f:	add    BYTE PTR [rsi],dh
   140007151:	mov    WORD PTR [rax],es
   140007153:	add    BYTE PTR [rax],al
   140007155:	add    BYTE PTR [rax],al
   140007157:	add    BYTE PTR [rdx-0x74],cl
   14000715a:	add    BYTE PTR [rax],al
   14000715c:	add    BYTE PTR [rax],al
   14000715e:	add    BYTE PTR [rax],al
   140007160:	(bad)  
   140007161:	mov    WORD PTR [rax],es
   140007163:	add    BYTE PTR [rax],al
   140007165:	add    BYTE PTR [rax],al
   140007167:	add    BYTE PTR [rdx],bl
   140007169:	mov    WORD PTR [rax],es
   14000716b:	add    BYTE PTR [rax],al
   14000716d:	add    BYTE PTR [rax],al
   14000716f:	add    dl,ah
   140007171:	mov    eax,DWORD PTR [rax]
   140007173:	add    BYTE PTR [rax],al
   140007175:	add    BYTE PTR [rax],al
   140007177:	add    dh,dl
   140007179:	mov    eax,DWORD PTR [rax]
   14000717b:	add    BYTE PTR [rax],al
   14000717d:	add    BYTE PTR [rax],al
   14000717f:	add    al,al
   140007181:	mov    eax,DWORD PTR [rax]
   140007183:	add    BYTE PTR [rax],al
   140007185:	add    BYTE PTR [rax],al
   140007187:	add    BYTE PTR [rdx+0x8b],ch
   14000718d:	add    BYTE PTR [rax],al
   14000718f:	add    BYTE PTR [rdx+0x8b],cl
   140007195:	add    BYTE PTR [rax],al
   140007197:	add    ah,dh
   140007199:	mov    eax,DWORD PTR [rax]
   14000719b:	add    BYTE PTR [rax],al
   14000719d:	add    BYTE PTR [rax],al
   14000719f:	add    BYTE PTR [rsp+rcx*4],al
   1400071a2:	add    BYTE PTR [rax],al
   1400071a4:	add    BYTE PTR [rax],al
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	(bad)  
   1400071a9:	mov    eax,DWORD PTR [rax]
   1400071ab:	add    BYTE PTR [rax],al
   1400071ad:	add    BYTE PTR [rax],al
   1400071af:	add    BYTE PTR [rdx],dh
   1400071b1:	mov    eax,DWORD PTR [rax]
   1400071b3:	add    BYTE PTR [rax],al
   1400071b5:	add    BYTE PTR [rax],al
   1400071b7:	add    BYTE PTR [rdx-0x75],dh
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	add    BYTE PTR [rax],al
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	rex.RX mov r8d,DWORD PTR [rax]
   1400071c3:	add    BYTE PTR [rax],al
   1400071c5:	add    BYTE PTR [rax],al
   1400071c7:	add    BYTE PTR [rax-0x75],bl
   1400071ca:	add    BYTE PTR [rax],al
   1400071cc:	add    BYTE PTR [rax],al
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	mov    eax,DWORD PTR es:[rax]
	...
   1400071df:	add    BYTE PTR [rsi+0x88],dl
   1400071e5:	add    BYTE PTR [rax],al
   1400071e7:	add    BYTE PTR [rax+rcx*4+0x0],ah
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	mov    al,0x88
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	add    BYTE PTR [rax],al
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	mov    esi,0x88
   1400071fd:	add    BYTE PTR [rax],al
   1400071ff:	add    dl,cl
   140007201:	mov    BYTE PTR [rax],al
   140007203:	add    BYTE PTR [rax],al
   140007205:	add    BYTE PTR [rax],al
   140007207:	add    al,ch
   140007209:	mov    BYTE PTR [rax],al
   14000720b:	add    BYTE PTR [rax],al
   14000720d:	add    BYTE PTR [rax],al
   14000720f:	add    dl,bh
   140007211:	mov    BYTE PTR [rax],al
   140007213:	add    BYTE PTR [rax],al
   140007215:	add    BYTE PTR [rax],al
   140007217:	add    BYTE PTR [rsi],al
   140007219:	mov    DWORD PTR [rax],eax
   14000721b:	add    BYTE PTR [rax],al
   14000721d:	add    BYTE PTR [rax],al
   14000721f:	add    BYTE PTR [rcx+rcx*4],bl
   140007222:	add    BYTE PTR [rax],al
   140007224:	add    BYTE PTR [rax],al
   140007226:	add    BYTE PTR [rax],al
   140007228:	sub    cl,BYTE PTR [rcx+0x0]
   14000722e:	add    BYTE PTR [rax],al
   140007230:	cmp    cl,BYTE PTR [rcx+0x0]
   140007236:	add    BYTE PTR [rax],al
   140007238:	rex.RX mov DWORD PTR [rax],r8d
   14000723b:	add    BYTE PTR [rax],al
   14000723d:	add    BYTE PTR [rax],al
   14000723f:	add    BYTE PTR [rdx-0x77],dl
   140007242:	add    BYTE PTR [rax],al
   140007244:	add    BYTE PTR [rax],al
   140007246:	add    BYTE PTR [rax],al
   140007248:	mov    DWORD PTR fs:[rax],eax
   14000724b:	add    BYTE PTR [rax],al
   14000724d:	add    BYTE PTR [rax],al
   14000724f:	add    BYTE PTR [rdx-0x77],dh
   140007252:	add    BYTE PTR [rax],al
   140007254:	add    BYTE PTR [rax],al
   140007256:	add    BYTE PTR [rax],al
   140007258:	(bad)  
   140007259:	mov    DWORD PTR [rax],eax
   14000725b:	add    BYTE PTR [rax],al
   14000725d:	add    BYTE PTR [rax],al
   14000725f:	add    BYTE PTR [rdx+0x89],bl
   140007265:	add    BYTE PTR [rax],al
   140007267:	add    BYTE PTR [rdx+0x89],dh
   14000726d:	add    BYTE PTR [rax],al
   14000726f:	add    dl,al
   140007271:	mov    DWORD PTR [rax],eax
   140007273:	add    BYTE PTR [rax],al
   140007275:	add    BYTE PTR [rax],al
   140007277:	add    BYTE PTR [rsi+0x88],al
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    BYTE PTR [rdx-0x78],bh
   140007282:	add    BYTE PTR [rax],al
   140007284:	add    BYTE PTR [rax],al
   140007286:	add    BYTE PTR [rax],al
   140007288:	ins    BYTE PTR es:[rdi],dx
   140007289:	mov    BYTE PTR [rax],al
   14000728b:	add    BYTE PTR [rax],al
   14000728d:	add    BYTE PTR [rax],al
   14000728f:	add    BYTE PTR [rax-0x78],dl
   140007292:	add    BYTE PTR [rax],al
   140007294:	add    BYTE PTR [rax],al
   140007296:	add    BYTE PTR [rax],al
   140007298:	cmp    al,0x88
   14000729a:	add    BYTE PTR [rax],al
   14000729c:	add    BYTE PTR [rax],al
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	sub    BYTE PTR [rax+0x0],cl
   1400072a6:	add    BYTE PTR [rax],al
   1400072a8:	sbb    al,0x88
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	add    BYTE PTR [rax],al
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	or     BYTE PTR [rax+0x0],cl
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	lock xchg DWORD PTR [rax],eax
   1400072bb:	add    BYTE PTR [rax],al
   1400072bd:	add    BYTE PTR [rax],al
   1400072bf:	add    al,ah
   1400072c1:	xchg   DWORD PTR [rax],eax
   1400072c3:	add    BYTE PTR [rax],al
   1400072c5:	add    BYTE PTR [rax],al
   1400072c7:	add    ah,dl
   1400072c9:	xchg   DWORD PTR [rax],eax
   1400072cb:	add    BYTE PTR [rax],al
   1400072cd:	add    BYTE PTR [rax],al
   1400072cf:	add    dl,al
   1400072d1:	xchg   DWORD PTR [rax],eax
   1400072d3:	add    BYTE PTR [rax],al
   1400072d5:	add    BYTE PTR [rax],al
   1400072d7:	add    BYTE PTR [rdi+rax*4+0x0],dh
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	test   al,0x87
   1400072e2:	add    BYTE PTR [rax],al
   1400072e4:	add    BYTE PTR [rax],al
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	xchg   edx,eax
   1400072e9:	xchg   DWORD PTR [rax],eax
   1400072eb:	add    BYTE PTR [rax],al
   1400072ed:	add    BYTE PTR [rax],al
   1400072ef:	add    BYTE PTR [rdi+rax*4+0x0],al
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	je     0x140007281
   1400072fa:	add    BYTE PTR [rax],al
   1400072fc:	add    BYTE PTR [rax],al
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	(bad)  
   140007301:	xchg   DWORD PTR [rax],eax
   140007303:	add    BYTE PTR [rax],al
   140007305:	add    BYTE PTR [rax],al
   140007307:	add    BYTE PTR [rdi+rax*4+0x0],dl
   14000730b:	add    BYTE PTR [rax],al
   14000730d:	add    BYTE PTR [rax],al
   14000730f:	add    BYTE PTR [rsi-0x79],al
   140007312:	add    BYTE PTR [rax],al
   140007314:	add    BYTE PTR [rax],al
   140007316:	add    BYTE PTR [rax],al
   140007318:	xor    al,BYTE PTR [rdi+0x0]
   14000731e:	add    BYTE PTR [rax],al
   140007320:	sbb    al,0x87
   140007322:	add    BYTE PTR [rax],al
   140007324:	add    BYTE PTR [rax],al
   140007326:	add    BYTE PTR [rax],al
   140007328:	or     al,BYTE PTR [rdi+0x0]
   14000732e:	add    BYTE PTR [rax],al
   140007330:	cld    
   140007331:	xchg   BYTE PTR [rax],al
   140007333:	add    BYTE PTR [rax],al
   140007335:	add    BYTE PTR [rax],al
   140007337:	add    dl,ch
   140007339:	xchg   BYTE PTR [rax],al
   14000733b:	add    BYTE PTR [rax],al
   14000733d:	add    BYTE PTR [rax],al
   14000733f:	add    dh,dl
   140007341:	xchg   BYTE PTR [rax],al
   140007343:	add    BYTE PTR [rax],al
   140007345:	add    BYTE PTR [rax],al
   140007347:	add    ah,al
   140007349:	xchg   BYTE PTR [rax],al
   14000734b:	add    BYTE PTR [rax],al
   14000734d:	add    BYTE PTR [rax],al
   14000734f:	add    BYTE PTR [rdx+0x86],dh
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    BYTE PTR [rdx+0x86],ah
   14000735d:	add    BYTE PTR [rax],al
   14000735f:	add    BYTE PTR [rdx+0x86],dl
   140007365:	add    BYTE PTR [rax],al
   140007367:	add    BYTE PTR [rdx+0x86],al
   14000736d:	add    BYTE PTR [rax],al
   14000736f:	add    BYTE PTR [rsi-0x7a],dh
   140007372:	add    BYTE PTR [rax],al
   140007374:	add    BYTE PTR [rax],al
   140007376:	add    BYTE PTR [rax],al
   140007378:	(bad)  
   140007379:	xchg   BYTE PTR [rax],al
   14000737b:	add    BYTE PTR [rax],al
   14000737d:	add    BYTE PTR [rax],al
   14000737f:	add    BYTE PTR [rax+rcx*4+0x0],ah
	...
   14000738f:	add    al,ah
   140007391:	mov    al,BYTE PTR [rax]
   140007393:	add    BYTE PTR [rax],al
   140007395:	add    BYTE PTR [rax],al
   140007397:	add    al,cl
   140007399:	mov    al,BYTE PTR [rax]
   14000739b:	add    BYTE PTR [rax],al
   14000739d:	add    BYTE PTR [rax],al
   14000739f:	add    BYTE PTR [rsi+0x8a],bh
   1400073a5:	add    BYTE PTR [rax],al
   1400073a7:	add    BYTE PTR [rdx+rcx*4+0x0],dh
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	pushf  
   1400073b1:	mov    al,BYTE PTR [rax]
   1400073b3:	add    BYTE PTR [rax],al
   1400073b5:	add    BYTE PTR [rax],al
   1400073b7:	add    BYTE PTR [rax+0x8a],dl
   1400073bd:	add    BYTE PTR [rax],al
   1400073bf:	add    BYTE PTR [rdx+rcx*4+0x0],bh
   1400073c3:	add    BYTE PTR [rax],al
   1400073c5:	add    BYTE PTR [rax],al
   1400073c7:	add    BYTE PTR [rsi-0x76],ch
   1400073ca:	add    BYTE PTR [rax],al
   1400073cc:	add    BYTE PTR [rax],al
   1400073ce:	add    BYTE PTR [rax],al
   1400073d0:	mov    al,BYTE PTR fs:[rax]
   1400073d3:	add    BYTE PTR [rax],al
   1400073d5:	add    BYTE PTR [rax],al
   1400073d7:	add    BYTE PTR [rdx+rcx*4+0x0],bl
   1400073db:	add    BYTE PTR [rax],al
   1400073dd:	add    BYTE PTR [rax],al
   1400073df:	add    BYTE PTR [rdx+rcx*4+0x0],dl
   1400073e3:	add    BYTE PTR [rax],al
   1400073e5:	add    BYTE PTR [rax],al
   1400073e7:	add    BYTE PTR [rdx-0x76],al
   1400073ea:	add    BYTE PTR [rax],al
   1400073ec:	add    BYTE PTR [rax],al
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	xor    cl,BYTE PTR [rdx+0x0]
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	and    al,0x8a
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	add    BYTE PTR [rax],al
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	(bad)  
   140007401:	mov    al,BYTE PTR [rax]
   140007403:	add    BYTE PTR [rax],al
   140007405:	add    BYTE PTR [rax],al
   140007407:	add    BYTE PTR [rdx+rcx*4],cl
   14000740a:	add    BYTE PTR [rax],al
   14000740c:	add    BYTE PTR [rax],al
   14000740e:	add    BYTE PTR [rax],al
   140007410:	add    cl,BYTE PTR [rdx+0x0]
   140007416:	add    BYTE PTR [rax],al
   140007418:	cli    
   140007419:	mov    DWORD PTR [rax],eax
   14000741b:	add    BYTE PTR [rax],al
   14000741d:	add    BYTE PTR [rax],al
   14000741f:	add    ah,ch
   140007421:	mov    DWORD PTR [rax],eax
   140007423:	add    BYTE PTR [rax],al
   140007425:	add    BYTE PTR [rax],al
   140007427:	add    ah,ah
   140007429:	mov    DWORD PTR [rax],eax
   14000742b:	add    BYTE PTR [rax],al
   14000742d:	add    BYTE PTR [rax],al
   14000742f:	add    dl,bl
   140007431:	mov    DWORD PTR [rax],eax
   140007433:	add    BYTE PTR [rax],al
   140007435:	add    BYTE PTR [rax],al
   140007437:	add    BYTE PTR [rdx+0x8d],ah
	...
   140007445:	add    BYTE PTR [rax],al
   140007447:	add    BYTE PTR [rax+0x1400062],dl
   14000744d:	add    BYTE PTR [rax],al
   14000744f:	add    BYTE PTR [rax+0x63],dl
   140007452:	add    BYTE PTR [rax+0x1],al
	...
   14000745d:	add    BYTE PTR [rax],al
   14000745f:	add    al,dl
   140007461:	pop    rcx
   140007462:	add    BYTE PTR [rax+0x1],al
	...
   140007475:	add    BYTE PTR [rax],al
   140007477:	add    al,dh
   140007479:	pop    rax
   14000747a:	add    BYTE PTR [rax+0x1],al
   14000747d:	add    BYTE PTR [rax],al
   14000747f:	add    al,al
   140007481:	pop    rdi
   140007482:	add    BYTE PTR [rax+0x1],al
	...
   14000748d:	add    BYTE PTR [rax],al
   14000748f:	add    BYTE PTR [rax+0x20],ah
   140007492:	add    BYTE PTR [rax],al
   140007494:	adc    BYTE PTR [rcx],dh
   140007496:	add    BYTE PTR [rax],al
   140007498:	xor    BYTE PTR [rdx],dh
   14000749a:	add    BYTE PTR [rax],al
   14000749c:	shl    BYTE PTR [rsi],0x0
   14000749f:	add    al,al
   1400074a1:	(bad)  
   1400074a2:	add    BYTE PTR [rax],al
   1400074a4:	(bad)  
   1400074a5:	add    BYTE PTR ds:[rax],al
   1400074a8:	nop
   1400074a9:	rex.XB add BYTE PTR [r8],al
   1400074ac:	loopne 0x140007506
   1400074ae:	add    BYTE PTR [rax],al
   1400074b0:	lock pop rax
   1400074b2:	add    BYTE PTR [rax],al
   1400074b4:	rcr    BYTE PTR [rcx+0x0],1
   1400074b7:	add    BYTE PTR [rax],ah
   1400074b9:	pop    rdx
   1400074ba:	add    BYTE PTR [rax],al
   1400074bc:	add    BYTE PTR [rbp+0x0],bl
   1400074bf:	add    BYTE PTR [rax-0x3fffffa1],al
   1400074c5:	pop    rdi
   1400074c6:	add    BYTE PTR [rax],al
   1400074c8:	movabs al,ds:0x9000006290000060
   1400074d1:	nop
   1400074d2:	add    BYTE PTR [rax+0x1],al
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rax],dh
   1400074d9:	xchg   ecx,eax
   1400074da:	add    BYTE PTR [rax+0x1],al
   1400074dd:	add    BYTE PTR [rax],al
   1400074df:	add    BYTE PTR [rbx+0x0],dl
   1400074e2:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   1400074e6:	push   rsp
   1400074e7:	add    BYTE PTR [rdi+0x0],dl
   1400074ea:	add    BYTE PTR [r10+0x0],dl
   1400074ee:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   1400074f3:	add    BYTE PTR [rcx+0x0],ch
   1400074f6:	movsxd eax,DWORD PTR [rax]
   1400074f8:	jb     0x1400074fa
   1400074fa:	outs   dx,DWORD PTR ds:[rsi]
   1400074fb:	add    BYTE PTR [rbx+0x0],dh
   1400074fe:	outs   dx,DWORD PTR ds:[rsi]
   1400074ff:	add    BYTE PTR [rsi+0x0],ah
   140007502:	je     0x140007504
   140007504:	pop    rsp
   140007505:	add    BYTE PTR [rdi+0x0],dl
   140007508:	imul   eax,DWORD PTR [rax],0x64006e
   14000750e:	outs   dx,DWORD PTR ds:[rsi]
   14000750f:	add    BYTE PTR [rdi+0x0],dh
   140007512:	jae    0x140007514
   140007514:	pop    rsp
   140007515:	add    BYTE PTR [rbx+0x0],al
   140007518:	jne    0x14000751a
   14000751a:	jb     0x14000751c
   14000751c:	jb     0x14000751e
   14000751e:	add    BYTE PTR gs:[rsi+0x0],ch
   140007522:	je     0x140007524
   140007524:	push   rsi
   140007525:	add    BYTE PTR [rbp+0x0],ah
   140007528:	jb     0x14000752a
   14000752a:	jae    0x14000752c
   14000752c:	imul   eax,DWORD PTR [rax],0x6e006f
   140007532:	pop    rsp
   140007533:	add    BYTE PTR [rax+rax*1+0x69],al
   140007537:	add    BYTE PTR [rcx+0x0],ah
   14000753a:	ins    BYTE PTR es:[rdi],dx
   14000753b:	add    BYTE PTR [rbp+0x0],ah
   14000753e:	jb     0x140007540
	...
   140007548:	push   rax
   140007549:	add    BYTE PTR [rdx+0x0],dh
   14000754c:	add    BYTE PTR gs:[rsi+0x0],ah
   140007550:	add    BYTE PTR gs:[rdx+0x0],dh
   140007554:	jb     0x140007556
   140007556:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000755b:	add    BYTE PTR [rax+rax*1+0x69],cl
   14000755f:	add    BYTE PTR [rsi+0x0],ch
   140007562:	add    BYTE PTR gs:[rax],al
   140007565:	add    BYTE PTR [rax],al
   140007567:	add    BYTE PTR [rax+0x0],dl
   14000756a:	jb     0x14000756c
   14000756c:	add    BYTE PTR gs:[rsi+0x0],ah
   140007570:	add    BYTE PTR gs:[rdx+0x0],dh
   140007574:	jb     0x140007576
   140007576:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000757b:	add    BYTE PTR [rcx+0x0],al
   14000757e:	add    BYTE PTR fs:[rax+rax*1+0x72],ah
   140007583:	add    BYTE PTR [rbp+0x0],ah
   140007586:	jae    0x140007588
   140007588:	jae    0x14000758a
   14000758a:	add    BYTE PTR [rax],al
   14000758c:	add    BYTE PTR [rax],al
   14000758e:	add    BYTE PTR [rax],al
   140007590:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140007594:	movsxd eax,DWORD PTR [rax]
   140007596:	(bad)  
   140007597:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000759b:	add    BYTE PTR [rax+rax*1+0x69],al
   14000759f:	add    BYTE PTR [rcx+0x0],ah
   1400075a2:	ins    BYTE PTR es:[rdi],dx
   1400075a3:	add    BYTE PTR [rbp+0x0],ah
   1400075a6:	jb     0x1400075a8
   1400075a8:	jae    0x1400075aa
   1400075aa:	rex.WB add BYTE PTR [r14+0x0],sil
   1400075ae:	add    BYTE PTR gs:[rdx+0x0],al
   1400075b2:	add    BYTE PTR gs:[rbp+0x0],ah
   1400075b6:	outs   dx,BYTE PTR ds:[rsi]
   1400075b7:	add    BYTE PTR [rbx+0x0],dl
   1400075ba:	je     0x1400075bc
   1400075bc:	(bad)  
   1400075bd:	add    BYTE PTR [rdx+0x0],dh
   1400075c0:	je     0x1400075c2
   1400075c2:	add    BYTE PTR gs:[rax+rax*1+0x4d],ah
   1400075c7:	add    BYTE PTR [rbp+0x0],dh
   1400075ca:	je     0x1400075cc
   1400075cc:	add    BYTE PTR gs:[rax+0x0],bh
	...
   1400075d8:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   1400075dc:	ins    DWORD PTR es:[rdi],dx
   1400075dd:	add    BYTE PTR [rdx+0x0],ah
   1400075e0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400075e4:	and    eax,0x6400
   1400075e9:	add    BYTE PTR [rax],al
   1400075eb:	add    BYTE PTR [rax],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rsi+0x0],cl
   1400075f2:	(bad)  
   1400075f3:	add    BYTE PTR [rbp+0x0],ch
   1400075f6:	add    BYTE PTR gs:[rip+0x6400],ah        # 0x14000d9fd
   1400075fd:	add    BYTE PTR [rax],al
   1400075ff:	add    BYTE PTR [rax+rax*1+0x61],cl
   140007603:	add    BYTE PTR [rbx+0x0],dh
   140007606:	je     0x140007608
   140007608:	and    BYTE PTR [rax],al
   14000760a:	add    BYTE PTR fs:[rcx+0x0],ch
   14000760e:	(bad)  
   14000760f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140007613:	add    BYTE PTR [rax+rax*1+0x20],ah
   140007617:	add    BYTE PTR [rip+0x6400],ah        # 0x14000da1d
   14000761d:	add    BYTE PTR [rax],al
   14000761f:	add    BYTE PTR [rbp+0x0],cl
   140007622:	(bad)  
   140007623:	add    BYTE PTR [rcx+0x0],ch
   140007626:	outs   dx,BYTE PTR ds:[rsi]
   140007627:	add    BYTE PTR [rax],ah
   140007629:	add    BYTE PTR [rdi+0x0],dl
   14000762c:	imul   eax,DWORD PTR [rax],0x64006e
   140007632:	outs   dx,DWORD PTR ds:[rsi]
   140007633:	add    BYTE PTR [rdi+0x0],dh
   140007636:	and    BYTE PTR [rax],al
   140007638:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14000763c:	data16 add BYTE PTR [rax+rax*1+0x2f],dh
   140007641:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140007645:	add    BYTE PTR [rax+0x0],dh
	...
   140007650:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   140007654:	ins    DWORD PTR es:[rdi],dx
   140007655:	add    BYTE PTR [rdx+0x0],ah
   140007658:	add    BYTE PTR gs:[rdx+0x0],dh
   14000765c:	add    BYTE PTR [rax],al
   14000765e:	add    BYTE PTR [rax],al
   140007660:	and    eax,0x25007300
   140007665:	add    BYTE PTR [rax+rax*1+0x0],ah
   140007669:	add    BYTE PTR [rax],al
   14000766b:	add    BYTE PTR [rax],al
   14000766d:	add    BYTE PTR [rax],al
   14000766f:	add    BYTE PTR [rax+rax*1+0x69],cl
   140007673:	add    BYTE PTR [rsi+0x0],ch
   140007676:	add    BYTE PTR gs:[rax],ah
   140007679:	add    BYTE PTR [rip+0x6400],ah        # 0x14000da7f
   14000767f:	add    BYTE PTR [rcx+0x0],al
   140007682:	add    BYTE PTR fs:[rax+rax*1+0x72],ah
   140007687:	add    BYTE PTR [rbp+0x0],ah
   14000768a:	jae    0x14000768c
   14000768c:	jae    0x14000768e
   14000768e:	and    BYTE PTR [rax],al
   140007690:	and    eax,0x6400
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    BYTE PTR [rax+rax*1+0x49],al
   14000769b:	add    BYTE PTR [rcx+0x0],al
   14000769e:	rex.WR add BYTE PTR [rbp+0x0],r8b
   1400076a2:	push   rdx
   1400076a3:	add    BYTE PTR [rsi],ch
   1400076a5:	add    BYTE PTR [rbp+0x0],al
   1400076a8:	pop    rax
   1400076a9:	add    BYTE PTR [rbp+0x0],al
   1400076ac:	add    BYTE PTR [rax],al
   1400076ae:	add    BYTE PTR [rax],al
   1400076b0:	push   rsp
   1400076b1:	add    BYTE PTR [rcx+0x0],al
   1400076b4:	push   rax
   1400076b5:	add    BYTE PTR [rcx+0x0],cl
   1400076b8:	xor    eax,DWORD PTR [rax]
   1400076ba:	xor    al,BYTE PTR [rax]
   1400076bc:	add    BYTE PTR cs:[rax+rax*1+0x4c],al
   1400076c1:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400076c5:	add    BYTE PTR [rax],al
   1400076c7:	add    BYTE PTR [rsi],ch
   1400076c9:	add    BYTE PTR [rsi],ch
   1400076cb:	add    BYTE PTR [rsi],ch
   1400076cd:	add    BYTE PTR [rax],al
   1400076cf:	add    BYTE PTR [rcx],bh
   1400076d1:	add    BYTE PTR [rcx],dh
   1400076d3:	add    BYTE PTR [rcx],dh
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    BYTE PTR [rax+rax*1+0x0],bh
   1400076db:	add    BYTE PTR [rax],al
   1400076dd:	add    BYTE PTR [rax],al
   1400076df:	add    BYTE PTR [rax],ah
   1400076e1:	add    BYTE PTR [rax],dh
   1400076e3:	add    BYTE PTR [rcx],dh
   1400076e5:	add    BYTE PTR [rdx],dh
   1400076e7:	add    BYTE PTR [rbx],dh
   1400076e9:	add    BYTE PTR [rax+rax*1],dh
   1400076ec:	xor    eax,0x37003600
   1400076f1:	add    BYTE PTR [rax],bh
   1400076f3:	add    BYTE PTR [rcx],bh
   1400076f5:	add    BYTE PTR [rax],ch
   1400076f7:	add    BYTE PTR [rcx],ch
   1400076f9:	add    BYTE PTR [rip+0x2e00],ch        # 0x14000a4ff
   1400076ff:	add    BYTE PTR [rax],dh
   140007701:	add    BYTE PTR [rcx],dh
   140007703:	add    BYTE PTR [rax],al
   140007705:	add    BYTE PTR [rax],al
   140007707:	add    BYTE PTR [rbx],ch
   140007709:	add    BYTE PTR [rcx],dh
   14000770b:	add    BYTE PTR [rax],ah
   14000770d:	add    BYTE PTR [rax],ch
   14000770f:	add    BYTE PTR [rax],al
   140007711:	add    BYTE PTR [rax],al
   140007713:	add    BYTE PTR [rcx],ch
   140007715:	add    BYTE PTR [rax],ah
	...
   14000771f:	add    BYTE PTR [rcx],dh
   140007721:	add    BYTE PTR [rdx],dh
   140007723:	add    BYTE PTR [rbx],dh
   140007725:	add    BYTE PTR [rax+rax*1],dh
   140007728:	xor    eax,0x37003600
   14000772d:	add    BYTE PTR [rax],bh
   14000772f:	add    BYTE PTR [rcx],bh
   140007731:	add    BYTE PTR [rax],dh
   140007733:	add    BYTE PTR [rdx],ch
   140007735:	add    BYTE PTR [rbx],ah
	...
   14000773f:	add    dh,bl
   140007741:	add    BYTE PTR [rax],al
   140007743:	add    bh,bh
   140007745:	(bad)  
   140007746:	(bad)  
   140007747:	(bad)  
   140007748:	fild   WORD PTR [rax]
   14000774a:	add    BYTE PTR [rax],al
   14000774c:	sti    
   14000774d:	add    eax,DWORD PTR [rax]
   14000774f:	add    cl,cl
   140007751:	add    BYTE PTR [rax],al
   140007753:	add    bl,bh
   140007755:	add    eax,DWORD PTR [rax]
   140007757:	add    BYTE PTR [rcx],al
   140007759:	add    BYTE PTR [rax],al
   14000775b:	add    ch,bh
   14000775d:	add    eax,DWORD PTR [rax]
   14000775f:	add    dh,dl
   140007761:	add    BYTE PTR [rax],al
   140007763:	add    ah,bh
   140007765:	add    eax,DWORD PTR [rax]
   140007767:	add    bh,dl
   140007769:	add    BYTE PTR [rax],al
   14000776b:	add    ah,bh
   14000776d:	add    eax,DWORD PTR [rax]
   14000776f:	add    al,bl
   140007771:	add    BYTE PTR [rax],al
   140007773:	add    ah,bh
   140007775:	add    eax,DWORD PTR [rax]
   140007777:	add    cl,bl
   140007779:	add    BYTE PTR [rax],al
   14000777b:	add    ah,bh
   14000777d:	add    eax,DWORD PTR [rax]
   14000777f:	add    dl,bl
   140007781:	add    BYTE PTR [rax],al
   140007783:	add    ah,bh
   140007785:	add    eax,DWORD PTR [rax]
   140007787:	add    bl,bl
   140007789:	add    BYTE PTR [rax],al
   14000778b:	add    ah,bh
   14000778d:	add    eax,DWORD PTR [rax]
   14000778f:	add    ah,bl
   140007791:	add    BYTE PTR [rax],al
   140007793:	add    ah,bh
   140007795:	add    eax,DWORD PTR [rax]
   140007797:	add    ch,bl
   140007799:	add    BYTE PTR [rax],al
   14000779b:	add    ah,bh
   14000779d:	add    eax,DWORD PTR [rax]
   14000779f:	add    cl,ah
   1400077a1:	add    BYTE PTR [rax],al
   1400077a3:	add    ah,bh
   1400077a5:	add    eax,DWORD PTR [rax]
   1400077a7:	add    dl,ah
   1400077a9:	add    BYTE PTR [rax],al
   1400077ab:	add    ah,bh
   1400077ad:	add    eax,DWORD PTR [rax]
   1400077af:	add    bl,ah
   1400077b1:	add    BYTE PTR [rax],al
   1400077b3:	add    ah,bh
   1400077b5:	add    eax,DWORD PTR [rax]
   1400077b7:	add    ah,ah
   1400077b9:	add    BYTE PTR [rax],al
   1400077bb:	add    ah,bh
   1400077bd:	add    eax,DWORD PTR [rax]
   1400077bf:	add    ch,ah
   1400077c1:	add    BYTE PTR [rax],al
   1400077c3:	add    ah,bh
   1400077c5:	add    eax,DWORD PTR [rax]
   1400077c7:	add    dh,ah
   1400077c9:	add    BYTE PTR [rax],al
   1400077cb:	add    ah,bh
   1400077cd:	add    eax,DWORD PTR [rax]
   1400077cf:	add    bh,ah
   1400077d1:	add    BYTE PTR [rax],al
   1400077d3:	add    ah,bh
   1400077d5:	add    eax,DWORD PTR [rax]
   1400077d7:	add    al,ch
   1400077d9:	add    BYTE PTR [rax],al
   1400077db:	add    ah,bh
   1400077dd:	add    eax,DWORD PTR [rax]
   1400077df:	add    dl,cl
   1400077e1:	add    BYTE PTR [rax],al
   1400077e3:	add    dh,bh
   1400077e5:	add    eax,DWORD PTR [rax]
   1400077e7:	add    bl,cl
   1400077e9:	add    BYTE PTR [rax],al
   1400077eb:	add    dh,bh
   1400077ed:	add    eax,DWORD PTR [rax]
   1400077ef:	add    ah,cl
   1400077f1:	add    BYTE PTR [rax],al
   1400077f3:	add    dh,bh
   1400077f5:	add    eax,DWORD PTR [rax]
   1400077f7:	add    ch,cl
   1400077f9:	add    BYTE PTR [rax],al
   1400077fb:	add    dh,bh
   1400077fd:	add    eax,DWORD PTR [rax]
   1400077ff:	add    dh,cl
   140007801:	add    BYTE PTR [rax],al
   140007803:	add    dh,bh
   140007805:	add    eax,DWORD PTR [rax]
   140007807:	add    bh,cl
   140007809:	add    BYTE PTR [rax],al
   14000780b:	add    dh,bh
   14000780d:	add    eax,DWORD PTR [rax]
   14000780f:	add    al,dl
   140007811:	add    BYTE PTR [rax],al
   140007813:	add    dh,bh
   140007815:	add    eax,DWORD PTR [rax]
   140007817:	add    cl,dl
   140007819:	add    BYTE PTR [rax],al
   14000781b:	add    dh,bh
   14000781d:	add    eax,DWORD PTR [rax]
   14000781f:	add    dl,dl
   140007821:	add    BYTE PTR [rax],al
   140007823:	add    dh,bh
   140007825:	add    eax,DWORD PTR [rax]
   140007827:	add    ah,dl
   140007829:	add    BYTE PTR [rax],al
   14000782b:	add    dh,bh
   14000782d:	add    eax,DWORD PTR [rax]
   14000782f:	add    bl,dl
   140007831:	add    BYTE PTR [rax],al
   140007833:	add    dh,bh
   140007835:	add    eax,DWORD PTR [rax]
   140007837:	add    ch,dl
   140007839:	add    BYTE PTR [rax],al
   14000783b:	add    dh,bh
   14000783d:	add    eax,DWORD PTR [rax]
	...
   140007847:	add    al,bh
   140007849:	add    DWORD PTR [rax],eax
   14000784b:	add    dl,dh
   14000784d:	add    eax,DWORD PTR [rax]
   14000784f:	add    ch,dh
   140007851:	add    DWORD PTR [rax],eax
   140007853:	add    dl,dh
   140007855:	add    eax,DWORD PTR [rax]
   140007857:	add    cl,bh
   140007859:	add    DWORD PTR [rax],eax
   14000785b:	add    cl,dh
   14000785d:	add    eax,DWORD PTR [rax]
   14000785f:	add    dh,dh
   140007861:	add    DWORD PTR [rax],eax
   140007863:	add    cl,dh
   140007865:	add    eax,DWORD PTR [rax]
   140007867:	add    bh,dh
   140007869:	add    DWORD PTR [rax],eax
   14000786b:	add    ah,dh
   14000786d:	add    eax,DWORD PTR [rax]
   14000786f:	add    dl,bh
   140007871:	add    DWORD PTR [rax],eax
   140007873:	add    BYTE PTR [rax],al
   140007875:	add    al,0x0
	...
   14000787f:	add    BYTE PTR [rcx],al
   140007881:	add    BYTE PTR [rax],al
   140007883:	add    cl,bh
   140007885:	add    eax,DWORD PTR [rax]
   140007887:	add    BYTE PTR [rcx-0x5ffffff],dl
   14000788d:	add    eax,DWORD PTR [rax]
   14000788f:	add    BYTE PTR [rbp-0x8ffffff],dl
   140007895:	add    eax,DWORD PTR [rax]
   140007897:	add    BYTE PTR [rdx-0x8ffffff],dl
   14000789d:	add    eax,DWORD PTR [rax]
   14000789f:	add    BYTE PTR [rsi-0x7ffffff],dl
   1400078a5:	add    eax,DWORD PTR [rax]
   1400078a7:	add    BYTE PTR [rbx-0x7ffffff],dl
   1400078ad:	add    eax,DWORD PTR [rax]
	...
   1400078bf:	add    BYTE PTR [rcx],al
   1400078c1:	add    BYTE PTR [rax],al
   1400078c3:	add    cl,bh
   1400078c5:	add    eax,DWORD PTR [rax]
   1400078c7:	add    BYTE PTR [rip+0x1000001],ch        # 0x1410078ce
   1400078cd:	add    al,0x0
   1400078cf:	add    BYTE PTR [rsi],ch
   1400078d1:	add    DWORD PTR [rax],eax
   1400078d3:	add    BYTE PTR [rcx],al
   1400078d5:	add    al,0x0
   1400078d7:	add    BYTE PTR [rdi],ch
   1400078d9:	add    DWORD PTR [rax],eax
   1400078db:	add    BYTE PTR [rcx],al
   1400078dd:	add    al,0x0
   1400078df:	add    BYTE PTR [rax],dh
   1400078e1:	add    DWORD PTR [rax],eax
   1400078e3:	add    BYTE PTR [rcx],al
   1400078e5:	add    al,0x0
   1400078e7:	add    BYTE PTR [rcx],dh
   1400078e9:	add    DWORD PTR [rax],eax
   1400078eb:	add    BYTE PTR [rcx],al
   1400078ed:	add    al,0x0
   1400078ef:	add    BYTE PTR [rdx],dh
   1400078f1:	add    DWORD PTR [rax],eax
   1400078f3:	add    BYTE PTR [rcx],al
   1400078f5:	add    al,0x0
   1400078f7:	add    BYTE PTR [rbx],dh
   1400078f9:	add    DWORD PTR [rax],eax
   1400078fb:	add    BYTE PTR [rcx],al
   1400078fd:	add    al,0x0
   1400078ff:	add    BYTE PTR [rcx+rax*1],dh
   140007902:	add    BYTE PTR [rax],al
   140007904:	add    DWORD PTR [rax+rax*1],eax
   140007907:	add    BYTE PTR [rcx+rax*1+0x0],al
   14000790b:	add    BYTE PTR [rcx],al
   14000790d:	add    al,0x0
   14000790f:	add    BYTE PTR [rbp+0x1],al
   140007912:	add    BYTE PTR [rax],al
   140007914:	add    DWORD PTR [rax+rax*1],eax
   140007917:	add    BYTE PTR [rsi+0x1],al
   14000791a:	add    BYTE PTR [rax],al
   14000791c:	add    DWORD PTR [rax+rax*1],eax
   14000791f:	add    BYTE PTR [rdi+0x1],al
   140007922:	add    BYTE PTR [rax],al
   140007924:	add    DWORD PTR [rax+rax*1],eax
   140007927:	add    BYTE PTR [rax+0x1],cl
   14000792a:	add    BYTE PTR [rax],al
   14000792c:	add    DWORD PTR [rax+rax*1],eax
   14000792f:	add    BYTE PTR [rcx+0x1],cl
   140007932:	add    BYTE PTR [rax],al
   140007934:	add    DWORD PTR [rax+rax*1],eax
   140007937:	add    BYTE PTR [rdx+0x1],cl
   14000793a:	add    BYTE PTR [rax],al
   14000793c:	add    DWORD PTR [rax+rax*1],eax
   14000793f:	add    BYTE PTR [rbx+0x1],cl
   140007942:	add    BYTE PTR [rax],al
   140007944:	add    DWORD PTR [rax+rax*1],eax
   140007947:	add    BYTE PTR [rcx+0x1],al
   14000794a:	add    BYTE PTR [rax],al
   14000794c:	test   DWORD PTR [rbx],0x13d0000
   140007952:	add    BYTE PTR [rax],al
   140007954:	test   DWORD PTR [rbx],0x1420000
   14000795a:	add    BYTE PTR [rax],al
   14000795c:	clc    
   14000795d:	add    eax,DWORD PTR [rax]
   14000795f:	add    BYTE PTR [rsi],bh
   140007961:	add    DWORD PTR [rax],eax
   140007963:	add    al,bh
   140007965:	add    eax,DWORD PTR [rax]
   140007967:	add    BYTE PTR [rdi],bh
   140007969:	add    DWORD PTR [rax],eax
   14000796b:	add    bh,bh
   14000796d:	(bad)  
   14000796e:	(bad)  
   14000796f:	inc    DWORD PTR [rax+0x1]
   140007972:	add    BYTE PTR [rax],al
   140007974:	(bad)  
   140007975:	(bad)  
   140007976:	(bad)  
   140007977:	inc    DWORD PTR [rax]
	...
   140007991:	add    BYTE PTR [rax],al
   140007993:	add    BYTE PTR [rbp+0x39],bh
   140007996:	lahf   
   140007997:	push   rbp
   140007998:	add    BYTE PTR [rax],al
   14000799a:	add    BYTE PTR [rax],al
   14000799c:	add    al,BYTE PTR [rax]
   14000799e:	add    BYTE PTR [rax],al
   1400079a0:	and    eax,DWORD PTR [rax]
   1400079a2:	add    BYTE PTR [rax],al
   1400079a4:	nop
   1400079a5:	jp     0x1400079a7
   1400079a7:	add    BYTE PTR [rax+0x62],dl
   1400079ad:	add    BYTE PTR [rax],al
   1400079af:	add    BYTE PTR [rbp+0x39],bh
   1400079b2:	lahf   
   1400079b3:	push   rbp
   1400079b4:	add    BYTE PTR [rax],al
   1400079b6:	add    BYTE PTR [rax],al
   1400079b8:	or     eax,0xe0000000
   1400079bd:	add    DWORD PTR [rax],eax
   1400079bf:	add    al,cl
   1400079c1:	jp     0x1400079c3
   1400079c3:	add    al,cl
   1400079c5:	(bad)  
	...
   1400079ee:	add    BYTE PTR [rax],al
   1400079f0:	movabs al,ds:0x0
	...
   140007a45:	add    BYTE PTR [rax],al
   140007a47:	add    BYTE PTR [rax],cl
   140007a49:	nop
   140007a4a:	add    BYTE PTR [rax+0x1],al
	...
   140007a5d:	add    BYTE PTR [rax],al
   140007a5f:	add    BYTE PTR [rax+0x74],cl
   140007a62:	add    BYTE PTR [rax+0x1],al
   140007a65:	add    BYTE PTR [rax],al
   140007a67:	add    BYTE PTR [rax+0x74],dl
   140007a6a:	add    BYTE PTR [rax+0x1],al
   140007a6d:	add    BYTE PTR [rax],al
   140007a6f:	add    BYTE PTR [rax+0x1400074],dl
   140007a75:	add    BYTE PTR [rax],al
   140007a77:	add    BYTE PTR [rax],dl
	...
   140007a81:	xor    eax,0x0
	...
   140007a8e:	add    BYTE PTR [rax],al
   140007a90:	push   rdx
   140007a91:	push   rbx
   140007a92:	rex.R push rbx
   140007a94:	(bad)  
   140007a95:	push   rsi
   140007a96:	and    eax,DWORD PTR [rdx+rcx*4-0x54b40acf]
   140007a9d:	jle    0x140007ad9
   140007a9f:	addr32 mov esp,0x1a6430a
   140007aa5:	add    BYTE PTR [rax],al
   140007aa7:	add    BYTE PTR [rcx+rbp*2+0x61],ah
   140007aab:	ins    BYTE PTR es:[rdi],dx
   140007aac:	gs jb  0x140007add
   140007aaf:	jo     0x140007b15
   140007ab1:	(bad)  
	...
   140007ac6:	add    BYTE PTR [rax],al
   140007ac8:	rex.RXB
   140007ac9:	rex.XB push r12
   140007acb:	rex.WR add BYTE PTR [rax],r10b
   140007ace:	add    BYTE PTR [rax],al
   140007ad0:	cmp    al,0x53
   140007ad2:	add    BYTE PTR [rax],al
   140007ad4:	cs je  0x140007b3c
   140007ad7:	js     0x140007b4d
   140007ad9:	and    al,0x6d
   140007adb:	outs   dx,BYTE PTR ds:[rsi]
   140007adc:	add    BYTE PTR [rax],al
   140007ade:	add    BYTE PTR [rax],al
   140007ae0:	rex movsxd eax,DWORD PTR [rax]
   140007ae3:	add    BYTE PTR [rdx],dl
   140007ae5:	add    BYTE PTR [rax],al
   140007ae7:	add    BYTE PTR [rsi],ch
   140007ae9:	je     0x140007b50
   140007aeb:	js     0x140007b61
   140007aed:	and    al,0x6d
   140007aef:	outs   dx,BYTE PTR ds:[rsi]
   140007af0:	and    al,0x30
   140007af2:	xor    BYTE PTR [rax],al
   140007af4:	(bad)  
   140007af5:	movsxd eax,DWORD PTR [rax]
   140007af7:	add    BYTE PTR [rax+0x0],dl
   140007afa:	add    BYTE PTR [rax],al
   140007afc:	cs je  0x140007b64
   140007aff:	js     0x140007b75
   140007b01:	and    al,0x78
   140007b03:	add    BYTE PTR [rax],al
   140007b05:	jo     0x140007b07
   140007b07:	add    BYTE PTR [rax+0x4],cl
   140007b0a:	add    BYTE PTR [rax],al
   140007b0c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140007b15:	add    BYTE PTR [rax],al
   140007b17:	add    BYTE PTR [rax+0x74],cl
   140007b1a:	add    BYTE PTR [rax],al
   140007b1c:	adc    BYTE PTR [rax],al
   140007b1e:	add    BYTE PTR [rax],al
   140007b20:	xor    BYTE PTR cs:[rax],dh
   140007b23:	movsxd esp,DWORD PTR [rsi+0x67]
   140007b26:	add    BYTE PTR [rax],al
   140007b28:	pop    rax
   140007b29:	je     0x140007b2b
   140007b2b:	add    BYTE PTR [rax],cl
   140007b2d:	add    BYTE PTR [rax],al
   140007b2f:	add    BYTE PTR [rsi],ch
   140007b31:	rex.XB push r10
   140007b33:	push   rsp
   140007b34:	and    al,0x58
   140007b36:	rex.XB
   140007b37:	add    BYTE PTR [r8],al
   140007b3a:	add    BYTE PTR [rax],al
   140007b3c:	(bad)  
   140007b3d:	je     0x140007b3f
   140007b3f:	add    BYTE PTR [rax],cl
   140007b41:	add    BYTE PTR [rax],al
   140007b43:	add    BYTE PTR [rsi],ch
   140007b45:	rex.XB push r10
   140007b47:	push   rsp
   140007b48:	and    al,0x58
   140007b4a:	rex.XB
   140007b4b:	rex.B
   140007b4c:	add    BYTE PTR [r8],al
   140007b4f:	add    BYTE PTR [rax+0x74],ch
   140007b52:	add    BYTE PTR [rax],al
   140007b54:	or     BYTE PTR [rax],al
   140007b56:	add    BYTE PTR [rax],al
   140007b58:	cs rex.XB push r10
   140007b5b:	push   rsp
   140007b5c:	and    al,0x58
   140007b5e:	rex.XB pop r10
   140007b60:	add    BYTE PTR [rax],al
   140007b62:	add    BYTE PTR [rax],al
   140007b64:	jo     0x140007bda
   140007b66:	add    BYTE PTR [rax],al
   140007b68:	or     BYTE PTR [rax],al
   140007b6a:	add    BYTE PTR [rax],al
   140007b6c:	cs rex.XB push r10
   140007b6f:	push   rsp
   140007b70:	and    al,0x58
   140007b72:	rex.WB
   140007b73:	add    BYTE PTR [r8],al
   140007b76:	add    BYTE PTR [rax],al
   140007b78:	js     0x140007bee
   140007b7a:	add    BYTE PTR [rax],al
   140007b7c:	or     BYTE PTR [rax],al
   140007b7e:	add    BYTE PTR [rax],al
   140007b80:	cs rex.XB push r10
   140007b83:	push   rsp
   140007b84:	and    al,0x58
   140007b86:	rex.WB
   140007b87:	rex.B
   140007b88:	add    BYTE PTR [r8],al
   140007b8b:	add    BYTE PTR [rax+0x8000074],al
   140007b91:	add    BYTE PTR [rax],al
   140007b93:	add    BYTE PTR [rsi],ch
   140007b95:	rex.XB push r10
   140007b97:	push   rsp
   140007b98:	and    al,0x58
   140007b9a:	rex.WB pop r9
   140007b9c:	add    BYTE PTR [rax],al
   140007b9e:	add    BYTE PTR [rax],al
   140007ba0:	mov    BYTE PTR [rax+rax*1+0x0],dh
   140007ba4:	or     BYTE PTR [rax],al
   140007ba6:	add    BYTE PTR [rax],al
   140007ba8:	cs rex.XB push r10
   140007bab:	push   rsp
   140007bac:	and    al,0x58
   140007bae:	rex.WB pop r10
   140007bb0:	add    BYTE PTR [rax],al
   140007bb2:	add    BYTE PTR [rax],al
   140007bb4:	nop
   140007bb5:	je     0x140007bb7
   140007bb7:	add    BYTE PTR [rax+0x0],al
   140007bba:	add    BYTE PTR [rax],al
   140007bbc:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140007bc5:	add    BYTE PTR [rax],al
   140007bc7:	add    al,dl
   140007bc9:	je     0x140007bcb
   140007bcb:	add    al,al
   140007bcd:	add    eax,0x722e0000
   140007bd2:	fs (bad) 
   140007bd4:	je     0x140007c37
   140007bd6:	add    BYTE PTR [rax],al
   140007bd8:	nop
   140007bd9:	jp     0x140007bdb
   140007bdb:	add    BYTE PTR [rax],bl
   140007bdd:	add    al,BYTE PTR [rax]
   140007bdf:	add    BYTE PTR [rsi],ch
   140007be1:	jb     0x140007c47
   140007be3:	(bad)  
   140007be4:	je     0x140007c47
   140007be6:	and    al,0x7a
   140007be8:	jp     0x140007c64
   140007bea:	fs (bad) 
   140007bec:	add    BYTE PTR [eax],al
   140007bef:	add    BYTE PTR [rax+0x2c00007c],ch
   140007bf5:	add    eax,DWORD PTR [rax]
   140007bf7:	add    BYTE PTR [rsi],ch
   140007bf9:	js     0x140007c5f
   140007bfb:	(bad)  
   140007bfc:	je     0x140007c5f
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	(bad)  
   140007c01:	jg     0x140007c03
   140007c03:	add    BYTE PTR [rax+rax*1+0x692e0000],cl
   140007c0a:	fs (bad) 
   140007c0c:	je     0x140007c6f
   140007c0e:	and    al,0x32
   140007c10:	add    BYTE PTR [rax],al
   140007c12:	add    BYTE PTR [rax],al
   140007c14:	(bad)  
   140007c15:	add    BYTE PTR [rax],0x0
   140007c18:	adc    al,0x0
   140007c1a:	add    BYTE PTR [rax],al
   140007c1c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140007c25:	add    BYTE PTR [rax],al
   140007c27:	add    BYTE PTR [rax-0x80],bh
   140007c2a:	add    BYTE PTR [rax],al
   140007c2c:	rex.W add al,0x0
   140007c2f:	add    BYTE PTR [rsi],ch
   140007c31:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140007c39:	add    BYTE PTR [rax],al
   140007c3b:	add    al,al
   140007c3d:	test   BYTE PTR [rax],al
   140007c3f:	add    ah,ch
   140007c41:	or     BYTE PTR [rax],al
   140007c43:	add    BYTE PTR [rsi],ch
   140007c45:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140007c4d:	add    BYTE PTR [rax],al
   140007c4f:	add    BYTE PTR [rax],al
   140007c51:	nop
   140007c52:	add    BYTE PTR [rax],al
   140007c54:	pop    rax
   140007c55:	add    BYTE PTR [rax],al
   140007c57:	add    BYTE PTR [rsi],ch
   140007c59:	fs (bad) 
   140007c5b:	je     0x140007cbe
   140007c5d:	add    BYTE PTR [rax],al
   140007c5f:	add    BYTE PTR [rax-0x70],ah
   140007c62:	add    BYTE PTR [rax],al
   140007c64:	adc    BYTE PTR [rcx],0x0
   140007c67:	add    BYTE PTR [rsi],ch
   140007c69:	(bad)  
   140007c6b:	jae    0x140007c6d
   140007c6d:	add    BYTE PTR [rax],al
   140007c6f:	add    BYTE PTR [rax],al
   140007c71:	mov    al,0x0
   140007c73:	add    BYTE PTR [rax],ch
   140007c75:	add    al,BYTE PTR [rax]
   140007c77:	add    BYTE PTR [rsi],ch
   140007c79:	jo     0x140007cdf
   140007c7b:	(bad)  
   140007c7c:	je     0x140007cdf
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	add    al,al
   140007c82:	add    BYTE PTR [rax],al
   140007c84:	adc    BYTE PTR [rdx],al
   140007c86:	add    BYTE PTR [rax],al
   140007c88:	cs jb  0x140007cfe
   140007c8b:	jb     0x140007cf0
   140007c8d:	and    al,0x30
   140007c8f:	xor    DWORD PTR [rax],eax
   140007c91:	add    BYTE PTR [rax],al
   140007c93:	add    BYTE PTR [rax],dl
   140007c95:	ret    0x0
   140007c98:	nop
   140007c99:	sldt   WORD PTR [rax]
   140007c9c:	cs jb  0x140007d12
   140007c9f:	jb     0x140007d04
   140007ca1:	and    al,0x30
   140007ca3:	xor    al,BYTE PTR [rax]
   140007ca5:	add    BYTE PTR [rax],al
   140007ca7:	add    BYTE PTR [rcx],al
   140007ca9:	add    eax,0x34050002
   140007cae:	add    DWORD PTR [rax],eax
   140007cb0:	add    DWORD PTR [rdx],ecx
   140007cb2:	add    al,0x0
   140007cb4:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   140007cb8:	add    eax,0x1000134
   140007cbd:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e428ec3
   140007cc3:	jo     0x140007cd2
   140007cc5:	(bad)  
   140007cc6:	or     al,0x50
   140007cc8:	or     esi,DWORD PTR [rax]
   140007cca:	add    BYTE PTR [rax],al
   140007ccc:	sbb    DWORD PTR [rdi],esi
   140007cce:	or     eax,0x60742600
   140007cd3:	add    BYTE PTR [rsi],ah
   140007cd5:	fs pop rdi
   140007cd7:	add    BYTE PTR [rsi],ah
   140007cd9:	xor    al,0x5e
   140007cdb:	add    BYTE PTR [rsi],ah
   140007cdd:	add    DWORD PTR [rax+0x0],ebx
   140007ce0:	sbb    al,dh
   140007ce2:	(bad)  
   140007ce3:	loopne 0x140007cf9
   140007ce5:	rcl    BYTE PTR [rdx],1
   140007ce7:	rcl    BYTE PTR [rax],0x50
   140007cea:	add    BYTE PTR [rax],al
   140007cec:	test   al,0x62
   140007cee:	add    BYTE PTR [rax],al
   140007cf0:	mov    al,0x2
   140007cf2:	add    BYTE PTR [rax],al
   140007cf4:	add    DWORD PTR [rbx],ebx
   140007cf6:	or     DWORD PTR [rax],eax
   140007cf8:	sbb    esp,esp
   140007cfa:	sbb    al,BYTE PTR [rax]
   140007cfc:	sbb    esi,DWORD PTR [rcx+rbx*1+0x0]
   140007d00:	sbb    esi,DWORD PTR [rax+rbx*1]
   140007d03:	add    BYTE PTR [rbx],bl
   140007d05:	add    DWORD PTR [rsi],edx
   140007d07:	add    BYTE PTR [rax],dl
   140007d09:	push   rax
   140007d0a:	add    BYTE PTR [rax],al
   140007d0c:	sbb    DWORD PTR [rdi],esi
   140007d0e:	or     eax,0x7e742600
   140007d13:	add    BYTE PTR [rsi],ah
   140007d15:	fs jge 0x140007d18
   140007d18:	es xor al,0x7c
   140007d1b:	add    BYTE PTR [rsi],ah
   140007d1d:	add    DWORD PTR [rsi+0x0],esi
   140007d20:	sbb    al,dh
   140007d22:	(bad)  
   140007d23:	loopne 0x140007d39
   140007d25:	rcl    BYTE PTR [rdx],1
   140007d27:	rcl    BYTE PTR [rax],0x50
   140007d2a:	add    BYTE PTR [rax],al
   140007d2c:	test   al,0x62
   140007d2e:	add    BYTE PTR [rax],al
   140007d30:	movabs al,ds:0xa00040a01000003
   140007d39:	xor    al,0x6
   140007d3b:	add    BYTE PTR [rdx],cl
   140007d3d:	xor    al,BYTE PTR [rsi]
   140007d3f:	jo     0x140007d5a
   140007d41:	xor    ecx,DWORD PTR [rbx]
   140007d43:	add    BYTE PTR [rdx],ah
   140007d45:	in     al,0x69
   140007d47:	add    BYTE PTR [rdx],ah
   140007d49:	je     0x140007db3
   140007d4b:	add    BYTE PTR [rdx],ah
   140007d4d:	add    BYTE PTR fs:[edx],ah
   140007d51:	xor    al,0x66
   140007d53:	add    BYTE PTR [rdx],ah
   140007d55:	add    DWORD PTR [rax+rax*1+0x14],esp
   140007d59:	push   rax
   140007d5a:	add    BYTE PTR [rax],al
   140007d5c:	test   al,0x62
   140007d5e:	add    BYTE PTR [rax],al
   140007d60:	adc    BYTE PTR [rbx],al
   140007d62:	add    BYTE PTR [rax],al
   140007d64:	add    DWORD PTR [rcx+rax*1],eax
   140007d67:	add    BYTE PTR [rdx+rax*2],al
   140007d6a:	add    BYTE PTR [rax],al
   140007d6c:	sbb    DWORD PTR [rdx],esi
   140007d6e:	or     eax,DWORD PTR [rax]
   140007d70:	and    DWORD PTR [rbp+rax*4+0x0],esp
   140007d74:	and    DWORD PTR [rsp+rax*4],esi
   140007d77:	add    BYTE PTR [rcx],ah
   140007d79:	add    DWORD PTR [rsi+0x0],edi
   140007d7c:	adc    dh,al
   140007d7e:	adc    al,ah
   140007d80:	(bad)  
   140007d81:	ror    BYTE PTR [rax+rsi*2],0xb
   140007d85:	push   rax
   140007d86:	add    BYTE PTR [rax],al
   140007d88:	test   al,0x62
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	loopne 0x140007d91
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	add    DWORD PTR [rdi],ecx
   140007d92:	(bad)  
   140007d93:	add    BYTE PTR [rdi],cl
   140007d95:	fs (bad) 
   140007d97:	add    BYTE PTR [rdi],cl
   140007d99:	xor    al,0x6
   140007d9b:	add    BYTE PTR [rdi],cl
   140007d9d:	xor    cl,BYTE PTR [rbx]
   140007d9f:	jo     0x140007dba
   140007da1:	sub    DWORD PTR [rbx],ecx
   140007da3:	add    BYTE PTR [rdi],dl
   140007da5:	xor    al,0x2c
   140007da7:	add    BYTE PTR [rdi],dl
   140007da9:	add    DWORD PTR [rdx],esp
   140007dab:	add    BYTE PTR [rax],dl
   140007dad:	lock (bad) 
   140007daf:	loopne 0x140007dbd
   140007db1:	ror    BYTE PTR [rdx],1
   140007db3:	ror    BYTE PTR [rax],0x70
   140007db6:	(bad)  
   140007db7:	(bad)  
   140007db8:	(bad)  
   140007db9:	push   rax
   140007dba:	add    BYTE PTR [rax],al
   140007dbc:	test   al,0x62
   140007dbe:	add    BYTE PTR [rax],al
   140007dc0:	add    BYTE PTR [rcx],al
   140007dc2:	add    BYTE PTR [rax],al
   140007dc4:	sbb    DWORD PTR [rsi],esp
   140007dc6:	or     al,BYTE PTR [rax]
   140007dc8:	(bad)  
   140007dc9:	push   rsp
   140007dca:	adc    eax,DWORD PTR [rax]
   140007dcc:	(bad)  
   140007dcd:	xor    al,0x12
   140007dcf:	add    BYTE PTR [rdi],dl
   140007dd1:	xchg   edx,eax
   140007dd2:	adc    esi,eax
   140007dd4:	adc    eax,esp
   140007dd6:	xadd   BYTE PTR [rip+0xffffffffa8600c70],cl        # 0xe8608a4d
   140007ddd:	(bad)  
   140007dde:	add    BYTE PTR [rax],al
   140007de0:	add    BYTE PTR [rax],al
   140007de3:	add    BYTE PTR [rcx],bl
   140007de5:	sbb    BYTE PTR [rdx],al
   140007de7:	add    BYTE PTR [rcx],cl
   140007de9:	repnz add dh,BYTE PTR [rax-0x58]
   140007ded:	(bad)  
   140007dee:	add    BYTE PTR [rax],al
   140007df0:	jo     0x140007df2
   140007df2:	add    BYTE PTR [rax],al
   140007df4:	sbb    DWORD PTR [rcx],ebp
   140007df6:	(bad)  
   140007df7:	add    BYTE PTR [rax],bl
   140007df9:	xor    al,0x53
   140007dfb:	add    BYTE PTR [rax],bl
   140007dfd:	add    DWORD PTR [rsi+0x0],ecx
   140007e00:	or     eax,esp
   140007e02:	(bad)  
   140007e03:	jo     0x140007e0b
   140007e05:	push   rax
   140007e06:	add    BYTE PTR [rax],al
   140007e08:	test   al,0x62
   140007e0a:	add    BYTE PTR [rax],al
   140007e0c:	(bad)  
   140007e0d:	add    al,BYTE PTR [rax]
   140007e0f:	add    BYTE PTR [rcx],bl
   140007e11:	sub    ecx,DWORD PTR [rcx]
   140007e13:	add    BYTE PTR [rdx],bl
   140007e15:	add    DWORD PTR [rsi+0x0],esp
   140007e18:	or     esp,eax
   140007e1a:	or     eax,edx
   140007e1c:	(bad)  
   140007e1d:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143608294
   140007e24:	add    dl,BYTE PTR [rax+0x0]
   140007e27:	add    BYTE PTR [rax+0x20000062],ch
   140007e2d:	add    eax,DWORD PTR [rax]
   140007e2f:	add    BYTE PTR [rcx],bl
   140007e31:	xor    BYTE PTR [rbx],cl
   140007e33:	add    BYTE PTR [rdi],bl
   140007e35:	xor    al,0x75
   140007e37:	add    BYTE PTR [rdi],bl
   140007e39:	add    DWORD PTR [rax+rax*1+0x10],ebp
   140007e3d:	lock (bad) 
   140007e3f:	loopne 0x140007e4d
   140007e41:	ror    BYTE PTR [rdx],1
   140007e43:	ror    BYTE PTR [rax],0x70
   140007e46:	(bad)  
   140007e47:	(bad)  
   140007e48:	(bad)  
   140007e49:	push   rax
   140007e4a:	add    BYTE PTR [rax],al
   140007e4c:	test   al,0x62
   140007e4e:	add    BYTE PTR [rax],al
   140007e50:	push   rax
   140007e51:	add    eax,DWORD PTR [rax]
   140007e53:	add    BYTE PTR [rcx],bl
   140007e55:	(bad)  
   140007e56:	(bad)  
   140007e57:	add    BYTE PTR [rcx+rax*1],cl
   140007e5a:	rex.WRXB add BYTE PTR [rip+0x3600470],r8b        # 0x1436082d1
   140007e61:	push   rax
   140007e62:	add    dh,BYTE PTR [rax]
   140007e64:	test   al,0x62
   140007e66:	add    BYTE PTR [rax],al
   140007e68:	(bad)  
   140007e69:	add    al,BYTE PTR [rax]
   140007e6b:	add    BYTE PTR [rcx],al
   140007e6d:	sbb    eax,0x741d000c
   140007e72:	or     eax,DWORD PTR [rax]
   140007e74:	sbb    eax,0x1d000a64
   140007e79:	push   rsp
   140007e7a:	or     DWORD PTR [rax],eax
   140007e7c:	sbb    eax,0x1d000834
   140007e81:	xor    bl,BYTE PTR [rcx]
   140007e83:	lock (bad) 
   140007e85:	loopne 0x140007e9c
   140007e87:	rol    BYTE PTR [rcx],0x1c
   140007e8a:	or     al,0x0
   140007e8c:	sbb    al,0x64
   140007e8e:	(bad)  
   140007e8f:	add    BYTE PTR [rsp+rdx*2],bl
   140007e92:	or     eax,0xc341c00
   140007e97:	add    BYTE PTR [rdx+rdx*2],bl
   140007e9a:	sbb    al,dh
   140007e9c:	(bad)  
   140007e9d:	loopne 0x140007eb3
   140007e9f:	rcl    BYTE PTR [rdx],1
   140007ea1:	rcl    BYTE PTR [rax],0x70
   140007ea4:	add    DWORD PTR [rsi],eax
   140007ea6:	add    al,BYTE PTR [rax]
   140007ea8:	(bad)  
   140007ea9:	push   rdx
   140007eaa:	add    dh,BYTE PTR [rax]
   140007eac:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41d7ebe
   140007eb2:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d008d1d
   140007eb9:	push   rsp
   140007eba:	or     eax,0xc341d00
   140007ebf:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f09837
   140007ec5:	loopne 0x140007edc
   140007ec7:	rcr    BYTE PTR [rcx],0x30
   140007eca:	or     eax,DWORD PTR [rax]
   140007ecc:	(bad)  
   140007ecd:	xor    al,0x65
   140007ecf:	add    BYTE PTR [rdi],bl
   140007ed1:	add    DWORD PTR [rdx+0x0],ebx
   140007ed4:	adc    al,dh
   140007ed6:	(bad)  
   140007ed7:	loopne 0x140007ee5
   140007ed9:	ror    BYTE PTR [rdx],1
   140007edb:	ror    BYTE PTR [rax],0x70
   140007ede:	(bad)  
   140007edf:	(bad)  
   140007ee0:	(bad)  
   140007ee1:	push   rax
   140007ee2:	add    BYTE PTR [rax],al
   140007ee4:	test   al,0x62
   140007ee6:	add    BYTE PTR [rax],al
   140007ee8:	rol    BYTE PTR [rdx],0x0
   140007eeb:	add    BYTE PTR [rcx],bl
   140007eed:	adc    eax,0x52060002
   140007ef2:	add    dh,BYTE PTR [rax]
   140007ef4:	test   al,0x62
   140007ef6:	add    BYTE PTR [rax],al
   140007ef8:	sub    BYTE PTR [rax],al
   140007efa:	add    BYTE PTR [rax],al
   140007efc:	sbb    DWORD PTR [rax],esi
   140007efe:	or     eax,DWORD PTR [rax]
   140007f00:	(bad)  
   140007f01:	xor    al,0x3e
   140007f03:	add    BYTE PTR [rdi],bl
   140007f05:	add    DWORD PTR [rax+rax*1],esi
   140007f08:	adc    al,dh
   140007f0a:	(bad)  
   140007f0b:	loopne 0x140007f19
   140007f0d:	ror    BYTE PTR [rdx],1
   140007f0f:	ror    BYTE PTR [rax],0x70
   140007f12:	(bad)  
   140007f13:	(bad)  
   140007f14:	(bad)  
   140007f15:	push   rax
   140007f16:	add    BYTE PTR [rax],al
   140007f18:	test   al,0x62
   140007f1a:	add    BYTE PTR [rax],al
   140007f1c:	nop
   140007f1d:	add    DWORD PTR [rax],eax
   140007f1f:	add    BYTE PTR [rcx],al
   140007f21:	add    al,0x1
   140007f23:	add    BYTE PTR [rdx+riz*2],al
   140007f26:	add    BYTE PTR [rax],al
   140007f28:	or     DWORD PTR [rax],ebx
   140007f2a:	or     DWORD PTR [rax],eax
   140007f2c:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   140007f30:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   140007f34:	sbb    BYTE PTR [rax+rbx*1],dh
   140007f37:	add    BYTE PTR [rax],bl
   140007f39:	add    DWORD PTR [rsi],edx
   140007f3b:	add    BYTE PTR [rcx],dl
   140007f3d:	lock add BYTE PTR [rax],al
   140007f40:	jbe    0x140007fa4
   140007f42:	add    BYTE PTR [rax],al
   140007f44:	add    DWORD PTR [rax],eax
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	(bad)  
   140007f49:	pop    rdx
   140007f4a:	add    BYTE PTR [rax],al
   140007f4c:	rex.RXB pop r12
   140007f4e:	add    BYTE PTR [rax],al
   140007f50:	movsxd ax,DWORD PTR [rax]
   140007f53:	add    BYTE PTR [rdi+0x5c],al
   140007f56:	add    BYTE PTR [rax],al
   140007f58:	add    DWORD PTR [rax],eax
   140007f5a:	add    BYTE PTR [rax],al
   140007f5c:	add    DWORD PTR [rcx+rax*1],eax
   140007f5f:	add    BYTE PTR [rdx+riz*8],al
   140007f62:	add    BYTE PTR [rax],al
   140007f64:	add    DWORD PTR [rdx+rax*1],ecx
   140007f67:	add    BYTE PTR [rcx+rax*1],cl
   140007f6a:	adc    DWORD PTR [rax],eax
   140007f6c:	or     DWORD PTR [rcx+rax*1],eax
   140007f6f:	add    BYTE PTR [rdx+riz*1],al
   140007f72:	add    BYTE PTR [rax],al
   140007f74:	jbe    0x140007fd8
   140007f76:	add    BYTE PTR [rax],al
   140007f78:	add    DWORD PTR [rax],eax
   140007f7a:	add    BYTE PTR [rax],al
   140007f7c:	cld    
   140007f7d:	pop    rdi
   140007f7e:	add    BYTE PTR [rax],al
   140007f80:	xor    ah,BYTE PTR [rax+0x0]
   140007f83:	add    BYTE PTR [rcx],al
   140007f85:	add    BYTE PTR [rax],al
   140007f87:	add    BYTE PTR [rdx],dh
   140007f89:	(bad)  
   140007f8a:	add    BYTE PTR [rax],al
   140007f8c:	add    DWORD PTR [rsi],eax
   140007f8e:	add    al,BYTE PTR [rax]
   140007f90:	(bad)  
   140007f91:	xor    al,BYTE PTR [rdx]
   140007f93:	xor    BYTE PTR [rcx],cl
   140007f95:	or     al,BYTE PTR [rax+rax*1]
   140007f98:	or     dh,BYTE PTR [rsi+rax*1]
   140007f9b:	add    BYTE PTR [rdx],cl
   140007f9d:	xor    al,BYTE PTR [rsi]
   140007f9f:	jo     0x140008017
   140007fa1:	(bad)  
   140007fa2:	add    BYTE PTR [rax],al
   140007fa4:	add    DWORD PTR [rax],eax
   140007fa6:	add    BYTE PTR [rax],al
   140007fa8:	or     eax,0x40000061
   140007fad:	(bad)  
   140007fae:	add    BYTE PTR [rax],al
   140007fb0:	nop
   140007fb1:	movsxd eax,DWORD PTR [rax]
   140007fb3:	add    BYTE PTR [rax+0x61],al
   140007fb6:	add    BYTE PTR [rax],al
   140007fb8:	add    DWORD PTR [rsi],eax
   140007fba:	add    al,BYTE PTR [rax]
   140007fbc:	(bad)  
   140007fbd:	xor    al,BYTE PTR [rdx]
   140007fbf:	push   rax
   140007fc0:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d7fca
   140007fc6:	or     DWORD PTR [rax],eax
   140007fc8:	or     eax,0x500632
   140007fcd:	add    BYTE PTR [rax],al
   140007fcf:	add    BYTE PTR [rcx],al
   140007fd1:	add    BYTE PTR [rax],al
   140007fd3:	add    BYTE PTR [rax-0x80],bh
	...
   140007fde:	add    BYTE PTR [rax],al
   140007fe0:	sub    BYTE PTR [rbp+0x70000000],al
   140007fe6:	add    BYTE PTR [rax],al
   140007fe8:	call   0x14000806d
   140007fed:	add    BYTE PTR [rax],al
   140007fef:	add    BYTE PTR [rax],al
   140007ff1:	add    BYTE PTR [rax],al
   140007ff3:	add    dl,ah
   140007ff5:	test   DWORD PTR [rax],eax
   140007ff7:	add    BYTE PTR [rax+0x70],dh
   140007ffa:	add    BYTE PTR [rax],al
   140007ffc:	mov    al,0x80
	...
   140008006:	add    BYTE PTR [rax],al
   140008008:	pop    rax
   140008009:	xchg   BYTE PTR [rax],al
   14000800b:	add    BYTE PTR [rax],bh
   14000800d:	jo     0x14000800f
   14000800f:	add    BYTE PTR [rax-0x7e],bl
	...
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	(bad)  
   14000801d:	mov    DWORD PTR [rax],eax
   14000801f:	add    al,ah
   140008021:	jno    0x140008023
   140008023:	add    BYTE PTR [rax],cl
   140008025:	test   BYTE PTR [rax],al
	...
   14000802f:	add    ah,dl
   140008031:	mov    al,BYTE PTR [rax]
   140008033:	add    BYTE PTR [rax-0x4fffff8d],dl
   140008039:	add    DWORD PTR [rax],0x0
   14000803f:	add    BYTE PTR [rax],al
   140008041:	add    BYTE PTR [rax],al
   140008043:	add    BYTE PTR [rdx],al
   140008045:	mov    eax,DWORD PTR [rax]
   140008047:	add    BYTE PTR [rax],bh
   140008049:	jno    0x14000804b
   14000804b:	add    al,al
   14000804d:	add    DWORD PTR [rax],0x0
   140008053:	add    BYTE PTR [rax],al
   140008055:	add    BYTE PTR [rax],al
   140008057:	add    BYTE PTR [rax-0x74],bh
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	rex.W jno 0x14000805f
	...
   140008077:	add    dl,dl
   140008079:	test   BYTE PTR [rax],al
   14000807b:	add    BYTE PTR [rax],al
   14000807d:	add    BYTE PTR [rax],al
   14000807f:	add    dh,ah
   140008081:	test   BYTE PTR [rax],al
   140008083:	add    BYTE PTR [rax],al
   140008085:	add    BYTE PTR [rax],al
   140008087:	add    al,bh
   140008089:	test   BYTE PTR [rax],al
   14000808b:	add    BYTE PTR [rax],al
   14000808d:	add    BYTE PTR [rax],al
   14000808f:	add    BYTE PTR [rax],cl
   140008091:	test   DWORD PTR [rax],eax
   140008093:	add    BYTE PTR [rax],al
   140008095:	add    BYTE PTR [rax],al
   140008097:	add    BYTE PTR [rsi],dl
   140008099:	test   DWORD PTR [rax],eax
   14000809b:	add    BYTE PTR [rax],al
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    al,al
   1400080a1:	test   BYTE PTR [rax],al
	...
   1400080af:	add    BYTE PTR [rax-0x7a],al
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	add    BYTE PTR [rax],al
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	xchg   BYTE PTR ss:[rax],al
   1400080bb:	add    BYTE PTR [rax],al
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rax],ah
   1400080c1:	xchg   BYTE PTR [rax],al
   1400080c3:	add    BYTE PTR [rax],al
   1400080c5:	add    BYTE PTR [rax],al
   1400080c7:	add    BYTE PTR [rdx],dl
   1400080c9:	xchg   BYTE PTR [rax],al
   1400080cb:	add    BYTE PTR [rax],al
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    BYTE PTR [rdx],al
   1400080d1:	xchg   BYTE PTR [rax],al
   1400080d3:	add    BYTE PTR [rax],al
   1400080d5:	add    BYTE PTR [rax],al
   1400080d7:	add    al,dh
   1400080d9:	test   DWORD PTR [rax],eax
	...
   1400080e7:	add    BYTE PTR [rbp+rax*4+0x0],ah
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	mov    dl,0x85
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	add    BYTE PTR [rax],al
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	enter  0x85,0x0
   1400080fc:	add    BYTE PTR [rax],al
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	(bad)  
   140008101:	test   DWORD PTR [rax],eax
   140008103:	add    BYTE PTR [rax],al
   140008105:	add    BYTE PTR [rax],al
   140008107:	add    BYTE PTR [rax+0x85],cl
   14000810d:	add    BYTE PTR [rax],al
   14000810f:	add    BYTE PTR [rbp+rax*4+0x0],bh
   140008113:	add    BYTE PTR [rax],al
   140008115:	add    BYTE PTR [rax],al
   140008117:	add    BYTE PTR [rdx-0x7b],ch
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	add    BYTE PTR [rax],al
   14000811e:	add    BYTE PTR [rax],al
   140008120:	pop    rdx
   140008121:	test   DWORD PTR [rax],eax
   140008123:	add    BYTE PTR [rax],al
   140008125:	add    BYTE PTR [rax],al
   140008127:	add    BYTE PTR [rsi-0x7b],al
   14000812a:	add    BYTE PTR [rax],al
   14000812c:	add    BYTE PTR [rax],al
   14000812e:	add    BYTE PTR [rax],al
   140008130:	test   DWORD PTR ss:[rax],eax
   140008133:	add    BYTE PTR [rax],al
   140008135:	add    BYTE PTR [rax],al
   140008137:	add    BYTE PTR [rbp+rax*4+0x0],dl
   14000813e:	add    BYTE PTR [rax],al
   140008140:	jb     0x1400080cf
   140008142:	add    BYTE PTR [rax],al
   140008144:	add    BYTE PTR [rax],al
   140008146:	add    BYTE PTR [rax],al
   140008148:	pop    rsp
   140008149:	lea    eax,[rax]
   14000814b:	add    BYTE PTR [rax],al
   14000814d:	add    BYTE PTR [rax],al
   14000814f:	add    BYTE PTR [rdx-0x73],al
   140008152:	add    BYTE PTR [rax],al
   140008154:	add    BYTE PTR [rax],al
   140008156:	add    BYTE PTR [rax],al
   140008158:	mov    BYTE PTR [rbp+0x0],cl
   14000815e:	add    BYTE PTR [rax],al
   140008160:	lea    eax,cs:[rax]
   140008163:	add    BYTE PTR [rax],al
   140008165:	add    BYTE PTR [rax],al
   140008167:	add    BYTE PTR [rdx],bl
   140008169:	lea    eax,[rax]
   14000816b:	add    BYTE PTR [rax],al
   14000816d:	add    BYTE PTR [rax],al
   14000816f:	add    ah,bh
   140008171:	mov    WORD PTR [rax],es
   140008173:	add    BYTE PTR [rax],al
   140008175:	add    BYTE PTR [rax],al
   140008177:	add    al,ah
   140008179:	mov    WORD PTR [rax],es
   14000817b:	add    BYTE PTR [rax],al
   14000817d:	add    BYTE PTR [rax],al
   14000817f:	add    ah,cl
   140008181:	mov    WORD PTR [rax],es
   140008183:	add    BYTE PTR [rax],al
   140008185:	add    BYTE PTR [rax],al
   140008187:	add    BYTE PTR [rdx+0x8c],dh
   14000818d:	add    BYTE PTR [rax],al
   14000818f:	add    BYTE PTR [rsi+0x8c],bl
   140008195:	add    BYTE PTR [rax],al
   140008197:	add    BYTE PTR [rsp+rcx*4+0x0],cl
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	test   BYTE PTR [rax+rax*1+0x0],cl
	...
   1400081af:	add    ah,dh
   1400081b1:	mov    al,BYTE PTR [rax]
	...
   1400081bf:	add    BYTE PTR [rdx],ch
   1400081c1:	mov    WORD PTR [rax],es
   1400081c3:	add    BYTE PTR [rax],al
   1400081c5:	add    BYTE PTR [rax],al
   1400081c7:	add    BYTE PTR [rsi],dh
   1400081c9:	mov    WORD PTR [rax],es
   1400081cb:	add    BYTE PTR [rax],al
   1400081cd:	add    BYTE PTR [rax],al
   1400081cf:	add    BYTE PTR [rdx-0x74],cl
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	add    BYTE PTR [rax],al
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	(bad)  
   1400081d9:	mov    WORD PTR [rax],es
   1400081db:	add    BYTE PTR [rax],al
   1400081dd:	add    BYTE PTR [rax],al
   1400081df:	add    BYTE PTR [rdx],bl
   1400081e1:	mov    WORD PTR [rax],es
   1400081e3:	add    BYTE PTR [rax],al
   1400081e5:	add    BYTE PTR [rax],al
   1400081e7:	add    dl,ah
   1400081e9:	mov    eax,DWORD PTR [rax]
   1400081eb:	add    BYTE PTR [rax],al
   1400081ed:	add    BYTE PTR [rax],al
   1400081ef:	add    dh,dl
   1400081f1:	mov    eax,DWORD PTR [rax]
   1400081f3:	add    BYTE PTR [rax],al
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    al,al
   1400081f9:	mov    eax,DWORD PTR [rax]
   1400081fb:	add    BYTE PTR [rax],al
   1400081fd:	add    BYTE PTR [rax],al
   1400081ff:	add    BYTE PTR [rdx+0x8b],ch
   140008205:	add    BYTE PTR [rax],al
   140008207:	add    BYTE PTR [rdx+0x8b],cl
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    ah,dh
   140008211:	mov    eax,DWORD PTR [rax]
   140008213:	add    BYTE PTR [rax],al
   140008215:	add    BYTE PTR [rax],al
   140008217:	add    BYTE PTR [rsp+rcx*4],al
   14000821a:	add    BYTE PTR [rax],al
   14000821c:	add    BYTE PTR [rax],al
   14000821e:	add    BYTE PTR [rax],al
   140008220:	(bad)  
   140008221:	mov    eax,DWORD PTR [rax]
   140008223:	add    BYTE PTR [rax],al
   140008225:	add    BYTE PTR [rax],al
   140008227:	add    BYTE PTR [rdx],dh
   140008229:	mov    eax,DWORD PTR [rax]
   14000822b:	add    BYTE PTR [rax],al
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	add    BYTE PTR [rdx-0x75],dh
   140008232:	add    BYTE PTR [rax],al
   140008234:	add    BYTE PTR [rax],al
   140008236:	add    BYTE PTR [rax],al
   140008238:	rex.RX mov r8d,DWORD PTR [rax]
   14000823b:	add    BYTE PTR [rax],al
   14000823d:	add    BYTE PTR [rax],al
   14000823f:	add    BYTE PTR [rax-0x75],bl
   140008242:	add    BYTE PTR [rax],al
   140008244:	add    BYTE PTR [rax],al
   140008246:	add    BYTE PTR [rax],al
   140008248:	mov    eax,DWORD PTR es:[rax]
	...
   140008257:	add    BYTE PTR [rsi+0x88],dl
   14000825d:	add    BYTE PTR [rax],al
   14000825f:	add    BYTE PTR [rax+rcx*4+0x0],ah
   140008266:	add    BYTE PTR [rax],al
   140008268:	mov    al,0x88
   14000826a:	add    BYTE PTR [rax],al
   14000826c:	add    BYTE PTR [rax],al
   14000826e:	add    BYTE PTR [rax],al
   140008270:	mov    esi,0x88
   140008275:	add    BYTE PTR [rax],al
   140008277:	add    dl,cl
   140008279:	mov    BYTE PTR [rax],al
   14000827b:	add    BYTE PTR [rax],al
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    al,ch
   140008281:	mov    BYTE PTR [rax],al
   140008283:	add    BYTE PTR [rax],al
   140008285:	add    BYTE PTR [rax],al
   140008287:	add    dl,bh
   140008289:	mov    BYTE PTR [rax],al
   14000828b:	add    BYTE PTR [rax],al
   14000828d:	add    BYTE PTR [rax],al
   14000828f:	add    BYTE PTR [rsi],al
   140008291:	mov    DWORD PTR [rax],eax
   140008293:	add    BYTE PTR [rax],al
   140008295:	add    BYTE PTR [rax],al
   140008297:	add    BYTE PTR [rcx+rcx*4],bl
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	sub    cl,BYTE PTR [rcx+0x0]
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	cmp    cl,BYTE PTR [rcx+0x0]
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	rex.RX mov DWORD PTR [rax],r8d
   1400082b3:	add    BYTE PTR [rax],al
   1400082b5:	add    BYTE PTR [rax],al
   1400082b7:	add    BYTE PTR [rdx-0x77],dl
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	add    BYTE PTR [rax],al
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	mov    DWORD PTR fs:[rax],eax
   1400082c3:	add    BYTE PTR [rax],al
   1400082c5:	add    BYTE PTR [rax],al
   1400082c7:	add    BYTE PTR [rdx-0x77],dh
   1400082ca:	add    BYTE PTR [rax],al
   1400082cc:	add    BYTE PTR [rax],al
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	(bad)  
   1400082d1:	mov    DWORD PTR [rax],eax
   1400082d3:	add    BYTE PTR [rax],al
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    BYTE PTR [rdx+0x89],bl
   1400082dd:	add    BYTE PTR [rax],al
   1400082df:	add    BYTE PTR [rdx+0x89],dh
   1400082e5:	add    BYTE PTR [rax],al
   1400082e7:	add    dl,al
   1400082e9:	mov    DWORD PTR [rax],eax
   1400082eb:	add    BYTE PTR [rax],al
   1400082ed:	add    BYTE PTR [rax],al
   1400082ef:	add    BYTE PTR [rsi+0x88],al
   1400082f5:	add    BYTE PTR [rax],al
   1400082f7:	add    BYTE PTR [rdx-0x78],bh
   1400082fa:	add    BYTE PTR [rax],al
   1400082fc:	add    BYTE PTR [rax],al
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	ins    BYTE PTR es:[rdi],dx
   140008301:	mov    BYTE PTR [rax],al
   140008303:	add    BYTE PTR [rax],al
   140008305:	add    BYTE PTR [rax],al
   140008307:	add    BYTE PTR [rax-0x78],dl
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	add    BYTE PTR [rax],al
   14000830e:	add    BYTE PTR [rax],al
   140008310:	cmp    al,0x88
   140008312:	add    BYTE PTR [rax],al
   140008314:	add    BYTE PTR [rax],al
   140008316:	add    BYTE PTR [rax],al
   140008318:	sub    BYTE PTR [rax+0x0],cl
   14000831e:	add    BYTE PTR [rax],al
   140008320:	sbb    al,0x88
   140008322:	add    BYTE PTR [rax],al
   140008324:	add    BYTE PTR [rax],al
   140008326:	add    BYTE PTR [rax],al
   140008328:	or     BYTE PTR [rax+0x0],cl
   14000832e:	add    BYTE PTR [rax],al
   140008330:	lock xchg DWORD PTR [rax],eax
   140008333:	add    BYTE PTR [rax],al
   140008335:	add    BYTE PTR [rax],al
   140008337:	add    al,ah
   140008339:	xchg   DWORD PTR [rax],eax
   14000833b:	add    BYTE PTR [rax],al
   14000833d:	add    BYTE PTR [rax],al
   14000833f:	add    ah,dl
   140008341:	xchg   DWORD PTR [rax],eax
   140008343:	add    BYTE PTR [rax],al
   140008345:	add    BYTE PTR [rax],al
   140008347:	add    dl,al
   140008349:	xchg   DWORD PTR [rax],eax
   14000834b:	add    BYTE PTR [rax],al
   14000834d:	add    BYTE PTR [rax],al
   14000834f:	add    BYTE PTR [rdi+rax*4+0x0],dh
   140008356:	add    BYTE PTR [rax],al
   140008358:	test   al,0x87
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	add    BYTE PTR [rax],al
   14000835e:	add    BYTE PTR [rax],al
   140008360:	xchg   edx,eax
   140008361:	xchg   DWORD PTR [rax],eax
   140008363:	add    BYTE PTR [rax],al
   140008365:	add    BYTE PTR [rax],al
   140008367:	add    BYTE PTR [rdi+rax*4+0x0],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	je     0x1400082f9
   140008372:	add    BYTE PTR [rax],al
   140008374:	add    BYTE PTR [rax],al
   140008376:	add    BYTE PTR [rax],al
   140008378:	(bad)  
   140008379:	xchg   DWORD PTR [rax],eax
   14000837b:	add    BYTE PTR [rax],al
   14000837d:	add    BYTE PTR [rax],al
   14000837f:	add    BYTE PTR [rdi+rax*4+0x0],dl
   140008383:	add    BYTE PTR [rax],al
   140008385:	add    BYTE PTR [rax],al
   140008387:	add    BYTE PTR [rsi-0x79],al
   14000838a:	add    BYTE PTR [rax],al
   14000838c:	add    BYTE PTR [rax],al
   14000838e:	add    BYTE PTR [rax],al
   140008390:	xor    al,BYTE PTR [rdi+0x0]
   140008396:	add    BYTE PTR [rax],al
   140008398:	sbb    al,0x87
   14000839a:	add    BYTE PTR [rax],al
   14000839c:	add    BYTE PTR [rax],al
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	or     al,BYTE PTR [rdi+0x0]
   1400083a6:	add    BYTE PTR [rax],al
   1400083a8:	cld    
   1400083a9:	xchg   BYTE PTR [rax],al
   1400083ab:	add    BYTE PTR [rax],al
   1400083ad:	add    BYTE PTR [rax],al
   1400083af:	add    dl,ch
   1400083b1:	xchg   BYTE PTR [rax],al
   1400083b3:	add    BYTE PTR [rax],al
   1400083b5:	add    BYTE PTR [rax],al
   1400083b7:	add    dh,dl
   1400083b9:	xchg   BYTE PTR [rax],al
   1400083bb:	add    BYTE PTR [rax],al
   1400083bd:	add    BYTE PTR [rax],al
   1400083bf:	add    ah,al
   1400083c1:	xchg   BYTE PTR [rax],al
   1400083c3:	add    BYTE PTR [rax],al
   1400083c5:	add    BYTE PTR [rax],al
   1400083c7:	add    BYTE PTR [rdx+0x86],dh
   1400083cd:	add    BYTE PTR [rax],al
   1400083cf:	add    BYTE PTR [rdx+0x86],ah
   1400083d5:	add    BYTE PTR [rax],al
   1400083d7:	add    BYTE PTR [rdx+0x86],dl
   1400083dd:	add    BYTE PTR [rax],al
   1400083df:	add    BYTE PTR [rdx+0x86],al
   1400083e5:	add    BYTE PTR [rax],al
   1400083e7:	add    BYTE PTR [rsi-0x7a],dh
   1400083ea:	add    BYTE PTR [rax],al
   1400083ec:	add    BYTE PTR [rax],al
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	(bad)  
   1400083f1:	xchg   BYTE PTR [rax],al
   1400083f3:	add    BYTE PTR [rax],al
   1400083f5:	add    BYTE PTR [rax],al
   1400083f7:	add    BYTE PTR [rax+rcx*4+0x0],ah
	...
   140008407:	add    al,ah
   140008409:	mov    al,BYTE PTR [rax]
   14000840b:	add    BYTE PTR [rax],al
   14000840d:	add    BYTE PTR [rax],al
   14000840f:	add    al,cl
   140008411:	mov    al,BYTE PTR [rax]
   140008413:	add    BYTE PTR [rax],al
   140008415:	add    BYTE PTR [rax],al
   140008417:	add    BYTE PTR [rsi+0x8a],bh
   14000841d:	add    BYTE PTR [rax],al
   14000841f:	add    BYTE PTR [rdx+rcx*4+0x0],dh
   140008426:	add    BYTE PTR [rax],al
   140008428:	pushf  
   140008429:	mov    al,BYTE PTR [rax]
   14000842b:	add    BYTE PTR [rax],al
   14000842d:	add    BYTE PTR [rax],al
   14000842f:	add    BYTE PTR [rax+0x8a],dl
   140008435:	add    BYTE PTR [rax],al
   140008437:	add    BYTE PTR [rdx+rcx*4+0x0],bh
   14000843b:	add    BYTE PTR [rax],al
   14000843d:	add    BYTE PTR [rax],al
   14000843f:	add    BYTE PTR [rsi-0x76],ch
   140008442:	add    BYTE PTR [rax],al
   140008444:	add    BYTE PTR [rax],al
   140008446:	add    BYTE PTR [rax],al
   140008448:	mov    al,BYTE PTR fs:[rax]
   14000844b:	add    BYTE PTR [rax],al
   14000844d:	add    BYTE PTR [rax],al
   14000844f:	add    BYTE PTR [rdx+rcx*4+0x0],bl
   140008453:	add    BYTE PTR [rax],al
   140008455:	add    BYTE PTR [rax],al
   140008457:	add    BYTE PTR [rdx+rcx*4+0x0],dl
   14000845b:	add    BYTE PTR [rax],al
   14000845d:	add    BYTE PTR [rax],al
   14000845f:	add    BYTE PTR [rdx-0x76],al
   140008462:	add    BYTE PTR [rax],al
   140008464:	add    BYTE PTR [rax],al
   140008466:	add    BYTE PTR [rax],al
   140008468:	xor    cl,BYTE PTR [rdx+0x0]
   14000846e:	add    BYTE PTR [rax],al
   140008470:	and    al,0x8a
   140008472:	add    BYTE PTR [rax],al
   140008474:	add    BYTE PTR [rax],al
   140008476:	add    BYTE PTR [rax],al
   140008478:	(bad)  
   140008479:	mov    al,BYTE PTR [rax]
   14000847b:	add    BYTE PTR [rax],al
   14000847d:	add    BYTE PTR [rax],al
   14000847f:	add    BYTE PTR [rdx+rcx*4],cl
   140008482:	add    BYTE PTR [rax],al
   140008484:	add    BYTE PTR [rax],al
   140008486:	add    BYTE PTR [rax],al
   140008488:	add    cl,BYTE PTR [rdx+0x0]
   14000848e:	add    BYTE PTR [rax],al
   140008490:	cli    
   140008491:	mov    DWORD PTR [rax],eax
   140008493:	add    BYTE PTR [rax],al
   140008495:	add    BYTE PTR [rax],al
   140008497:	add    ah,ch
   140008499:	mov    DWORD PTR [rax],eax
   14000849b:	add    BYTE PTR [rax],al
   14000849d:	add    BYTE PTR [rax],al
   14000849f:	add    ah,ah
   1400084a1:	mov    DWORD PTR [rax],eax
   1400084a3:	add    BYTE PTR [rax],al
   1400084a5:	add    BYTE PTR [rax],al
   1400084a7:	add    dl,bl
   1400084a9:	mov    DWORD PTR [rax],eax
   1400084ab:	add    BYTE PTR [rax],al
   1400084ad:	add    BYTE PTR [rax],al
   1400084af:	add    BYTE PTR [rdx+0x8d],ah
	...
   1400084bd:	add    BYTE PTR [rax],al
   1400084bf:	add    BYTE PTR [rsi+0x2],bl
   1400084c2:	push   rdx
   1400084c3:	gs addr32 rex.XB jb 0x14000852d
   1400084c8:	(bad)  
   1400084c9:	je     0x140008530
   1400084cb:	rex.WXB
   1400084cc:	gs jns 0x140008514
   1400084cf:	js     0x140008528
   1400084d1:	add    BYTE PTR [rbx+0x67655202],dl
   1400084d7:	push   rcx
   1400084d8:	jne    0x14000853f
   1400084da:	jb     0x140008555
   1400084dc:	push   rsi
   1400084dd:	(bad)  
   1400084de:	ins    BYTE PTR es:[rdi],dx
   1400084df:	jne    0x140008546
   1400084e1:	rex.RB js 0x14000853b
   1400084e4:	add    BYTE PTR [rax],al
   1400084e6:	ins    DWORD PTR es:[rdi],dx
   1400084e7:	add    dl,BYTE PTR [rdx+0x65]
   1400084ea:	addr32 rex.R
   1400084ec:	gs ins BYTE PTR es:[rdi],dx
   1400084ee:	gs je  0x140008556
   1400084f1:	push   rsi
   1400084f2:	(bad)  
   1400084f3:	ins    BYTE PTR es:[rdi],dx
   1400084f4:	jne    0x14000855b
   1400084f6:	push   rdi
   1400084f7:	add    BYTE PTR [rsi+0x67655202],al
   1400084fd:	rex.WRXB jo 0x140008565
   140008500:	outs   dx,BYTE PTR ds:[rsi]
   140008501:	rex.WXB
   140008502:	gs jns 0x14000854a
   140008505:	js     0x14000855e
   140008507:	add    BYTE PTR [rbp+0x2],dl
   14000850a:	push   rdx
   14000850b:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000850f:	outs   dx,DWORD PTR ds:[rsi]
   140008510:	jae    0x140008577
   140008512:	rex.WXB
   140008513:	gs jns 0x140008516
   140008516:	movabs ds:0x5674655367655202,eax
   14000851f:	(bad)  
   140008520:	ins    BYTE PTR es:[rdi],dx
   140008521:	jne    0x140008588
   140008523:	rex.RB js 0x14000857d
   140008526:	add    BYTE PTR [rax],al
   140008528:	rex.B
   140008529:	rex.R push rsi
   14000852b:	push   r8
   14000852d:	xor    rsi,QWORD PTR [r10]
   140008530:	cs fs ins BYTE PTR es:[rdi],dx
   140008533:	ins    BYTE PTR es:[rdi],dx
   140008534:	add    BYTE PTR [rax],al
   140008536:	iret   
   140008537:	add    BYTE PTR [rbx+0x72],al
   14000853a:	gs (bad) 
   14000853c:	je     0x1400085a3
   14000853e:	rex.WRB jne 0x1400085b5
   140008541:	gs js  0x14000859b
   140008544:	add    BYTE PTR [rax],al
   140008546:	outs   dx,BYTE PTR ds:[rsi]
   140008547:	add    al,BYTE PTR [rdi+0x65]
   14000854a:	je     0x140008599
   14000854c:	outs   dx,DWORD PTR ds:[rsi]
   14000854d:	fs jne 0x1400085bc
   140008550:	gs rex.W (bad) 
   140008553:	outs   dx,BYTE PTR ds:[rsi]
   140008554:	fs ins BYTE PTR es:[rdi],dx
   140008556:	gs push rdi
   140008558:	add    BYTE PTR [rax],al
   14000855a:	std    
   14000855b:	add    al,BYTE PTR [rdi+0x65]
   14000855e:	je     0x1400085b4
   140008560:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140008567:	je     0x140008569
   140008569:	add    BYTE PTR [rax+0x726f4601],ah
   14000856f:	ins    DWORD PTR es:[rdi],dx
   140008570:	(bad)  
   140008571:	je     0x1400085c0
   140008573:	gs jae 0x1400085e9
   140008576:	(bad)  
   140008577:	addr32 gs push rdi
   14000857a:	add    BYTE PTR [rax],al
   14000857c:	and    al,BYTE PTR [rsi]
   14000857e:	ins    BYTE PTR es:[rdi],dx
   14000857f:	jae    0x1400085f5
   140008581:	jb     0x1400085e6
   140008583:	ins    DWORD PTR es:[rdi],dx
   140008584:	jo     0x1400085dd
   140008586:	add    BYTE PTR [rax],al
   140008588:	cs (bad) 
   14000858a:	ins    BYTE PTR es:[rdi],dx
   14000858b:	jae    0x140008601
   14000858d:	jb     0x1400085fb
   14000858f:	outs   dx,BYTE PTR gs:[rsi]
   140008591:	push   rdi
   140008592:	add    BYTE PTR [rax],al
   140008594:	push   rdi
   140008595:	add    al,BYTE PTR [rdi+0x65]
   140008598:	je     0x1400085e6
   14000859a:	(bad)  
   14000859b:	jae    0x140008611
   14000859d:	rex.RB jb 0x140008612
   1400085a0:	outs   dx,DWORD PTR ds:[rsi]
   1400085a1:	jb     0x1400085a3
   1400085a3:	add    BYTE PTR [rbp+0x636f4c03],dh
   1400085a9:	(bad)  
   1400085aa:	ins    BYTE PTR es:[rdi],dx
   1400085ab:	rex.B ins BYTE PTR es:[rdi],dx
   1400085ad:	ins    BYTE PTR es:[rdi],dx
   1400085ae:	outs   dx,DWORD PTR ds:[rsi]
   1400085af:	movsxd eax,DWORD PTR [rax]
   1400085b1:	add    BYTE PTR [rbx+rax*1+0x48],al
   1400085b5:	gs (bad) 
   1400085b7:	jo     0x14000860c
   1400085b9:	gs je  0x140008605
   1400085bc:	outs   dx,BYTE PTR ds:[rsi]
   1400085bd:	outs   dx,WORD PTR ds:[rsi]
   1400085bf:	jb     0x14000862e
   1400085c1:	(bad)  
   1400085c2:	je     0x14000862d
   1400085c4:	outs   dx,DWORD PTR ds:[rsi]
   1400085c5:	outs   dx,BYTE PTR ds:[rsi]
   1400085c6:	add    BYTE PTR [rax],al
   1400085c8:	jge    0x1400085ca
   1400085ca:	rex.XB ins BYTE PTR es:[rdi],dx
   1400085cc:	outs   dx,DWORD PTR ds:[rsi]
   1400085cd:	jae    0x140008634
   1400085cf:	rex.W (bad) 
   1400085d1:	outs   dx,BYTE PTR ds:[rsi]
   1400085d2:	fs ins BYTE PTR es:[rdi],dx
   1400085d4:	add    BYTE PTR gs:[rcx+0x636f4c03],bh
   1400085db:	(bad)  
   1400085dc:	ins    BYTE PTR es:[rdi],dx
   1400085dd:	rex.RX jb 0x140008645
   1400085e0:	add    BYTE PTR gs:[rbx+0x45],cl
   1400085e4:	push   rdx
   1400085e5:	rex.WRX
   1400085e6:	rex.RB
   1400085e7:	xor    r14,QWORD PTR [rdx]
   1400085ea:	cs fs ins BYTE PTR es:[rdi],dx
   1400085ed:	ins    BYTE PTR es:[rdi],dx
   1400085ee:	add    BYTE PTR [rax],al
   1400085f0:	imul   eax,DWORD PTR [rdx],0x53746547
   1400085f6:	je     0x140008667
   1400085f8:	movsxd ebp,DWORD PTR [rbx+0x4f]
   1400085fb:	(bad)  
   1400085fc:	push   0x65
   1400085fe:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140008602:	add    eax,0x6c655303
   140008607:	movsxd esi,DWORD PTR gs:[rdi+rcx*2+0x62]
   14000860c:	push   0x65
   14000860e:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140008612:	or     al,0x3
   140008614:	push   rbx
   140008615:	gs je  0x14000865a
   140008618:	imul   eax,DWORD PTR [rbx+0x6f],0x6c
   14000861c:	outs   dx,DWORD PTR ds:[rsi]
   14000861d:	jb     0x14000861f
   14000861f:	add    BYTE PTR [rcx+0x0],al
   140008622:	rex.XB jb 0x14000868a
   140008625:	(bad)  
   140008626:	je     0x14000868d
   140008628:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000862a:	outs   dx,BYTE PTR ds:[rsi]
   14000862b:	je     0x140008676
   14000862d:	outs   dx,BYTE PTR ds:[rsi]
   14000862e:	imul   esi,DWORD PTR fs:[rdx+0x65],0x577463
   140008636:	nop
   140008637:	add    cl,BYTE PTR [rax+rdx*2+0x74]
   14000863b:	outs   dx,DWORD PTR ds:[rsi]
   14000863c:	rex.R push rax
   14000863e:	add    BYTE PTR [rax],al
   140008640:	jp     0x140008644
   140008642:	rex.RXB
   140008643:	gs je  0x14000869a
   140008646:	gs js  0x1400086bd
   140008649:	rex.RB js 0x1400086c0
   14000864c:	outs   dx,BYTE PTR gs:[rsi]
   14000864e:	je     0x1400086a0
   140008650:	outs   dx,DWORD PTR ds:[rsi]
   140008651:	imul   ebp,DWORD PTR [rsi+0x74],0x573233
   140008658:	rex.RXB
   140008659:	rex.R
   14000865a:	xor    rsi,QWORD PTR [r10]
   14000865d:	cs fs ins BYTE PTR es:[rdi],dx
   140008660:	ins    BYTE PTR es:[rdi],dx
   140008661:	add    BYTE PTR [rsi+0x73694400],dh
   140008667:	jo     0x1400086ca
   140008669:	je     0x1400086ce
   14000866b:	push   0x7373654d
   140008670:	(bad)  
   140008671:	addr32 gs push rdi
   140008674:	add    BYTE PTR [rax],al
   140008676:	popf   
   140008677:	add    edx,DWORD PTR [rdi+0x69]
   14000867a:	outs   dx,BYTE PTR ds:[rsi]
   14000867b:	rex.W
   14000867c:	gs ins BYTE PTR es:[rdi],dx
   14000867e:	jo     0x1400086d7
   140008680:	add    BYTE PTR [rax],al
   140008682:	out    0x0,al
   140008684:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140008686:	(bad)  
   140008687:	(bad)  
   140008688:	ins    BYTE PTR es:[rdi],dx
   140008689:	gs push rdi
   14000868b:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140008692:	add    DWORD PTR [rbx],0x55
   140008695:	jo     0x1400086fb
   140008697:	(bad)  
   140008698:	je     0x1400086ff
   14000869a:	push   rdi
   14000869b:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   1400086a2:	loop   0x1400086a6
   1400086a4:	push   rbx
   1400086a5:	outs   dx,BYTE PTR gs:[rsi]
   1400086a7:	fs rex.WRB
   1400086a9:	gs jae 0x14000871f
   1400086ac:	(bad)  
   1400086ad:	addr32 gs push rdi
   1400086b0:	add    BYTE PTR [rax],al
   1400086b2:	cli    
   1400086b3:	add    dl,BYTE PTR [rbx+0x65]
   1400086b6:	je     0x1400086fc
   1400086b8:	ins    BYTE PTR es:[rdi],dx
   1400086b9:	addr32 rex.WB je 0x140008722
   1400086bd:	ins    DWORD PTR es:[rdi],dx
   1400086be:	push   rsp
   1400086bf:	gs js  0x140008736
   1400086c2:	push   rdi
   1400086c3:	add    BYTE PTR [rbx+0x1],al
   1400086c6:	rex.RXB
   1400086c7:	gs je  0x14000870e
   1400086ca:	ins    BYTE PTR es:[rdi],dx
   1400086cb:	addr32 rex.WB je 0x140008734
   1400086cf:	ins    DWORD PTR es:[rdi],dx
   1400086d0:	push   rsp
   1400086d1:	gs js  0x140008748
   1400086d4:	push   rdi
   1400086d5:	add    BYTE PTR [rax+0x74654701],dh
   1400086db:	push   rbx
   1400086dc:	jns    0x140008751
   1400086de:	je     0x140008745
   1400086e0:	ins    DWORD PTR es:[rdi],dx
   1400086e1:	rex.WRB
   1400086e2:	gs je  0x140008757
   1400086e5:	imul   esp,DWORD PTR [rbx+0x73],0x2ad0000
   1400086ec:	push   rdx
   1400086ed:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   1400086f6:	(bad)  
   1400086f7:	jae    0x14000876c
   1400086f9:	push   rdi
   1400086fa:	add    BYTE PTR [rax],al
   1400086fc:	(bad)  
   1400086fd:	add    cl,BYTE PTR [rbp+0x65]
   140008700:	jae    0x140008775
   140008702:	(bad)  
   140008703:	rex.X outs dx,DWORD PTR gs:[esi]
   140008707:	js     0x140008760
   140008709:	add    BYTE PTR [rcx],dl
   14000870b:	add    DWORD PTR [rdi+0x65],eax
   14000870e:	je     0x140008751
   140008710:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140008714:	gs push rdi
   140008716:	imul   ebp,DWORD PTR [rsi+0x64],0x6600776f
   14000871d:	add    BYTE PTR [rbx+0x72],al
   140008720:	gs (bad) 
   140008722:	je     0x140008789
   140008724:	imul   r12d,DWORD PTR [rcx+0x6c],0x6150676f
   14000872c:	jb     0x14000878f
   14000872e:	ins    DWORD PTR es:[rdi],dx
   14000872f:	push   rdi
   140008730:	add    BYTE PTR [rax],al
   140008732:	scas   al,BYTE PTR es:[rdi]
   140008733:	add    DWORD PTR [rdi+0x65],eax
   140008736:	je     0x14000878b
   140008738:	jns    0x1400087ad
   14000873a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000873c:	ins    BYTE PTR es:[rdi],dx
   14000873d:	outs   dx,DWORD PTR ds:[rsi]
   14000873e:	jb     0x140008782
   140008740:	jb     0x1400087b7
   140008742:	jae    0x1400087ac
   140008744:	add    BYTE PTR [rax],al
   140008746:	add    r10,QWORD PTR [rbx+0x68]
   14000874a:	outs   dx,DWORD PTR ds:[rsi]
   14000874b:	ja     0x1400087a4
   14000874d:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140008754:	add    cl,BYTE PTR [r15+r13*2+0x61]
   140008759:	fs push rbx
   14000875b:	je     0x1400087cf
   14000875d:	imul   ebp,DWORD PTR [rsi+0x67],0x3e0057
   140008764:	rex.XB push 0x446b6365
   14000876a:	ins    BYTE PTR es:[rdi],dx
   14000876b:	addr32 rex.X jne 0x1400087e3
   14000876f:	je     0x1400087e0
   140008771:	outs   dx,BYTE PTR ds:[rsi]
   140008772:	add    BYTE PTR [rax],al
   140008774:	cmp    eax,DWORD PTR [rbx]
   140008776:	push   rbx
   140008777:	gs je  0x1400087d1
   14000877a:	imul   ebp,DWORD PTR [rsi+0x64],0x6f50776f
   140008781:	jae    0x140008783
   140008783:	add    BYTE PTR [rbp+0x74654701],ch
   140008789:	push   rbx
   14000878a:	jns    0x1400087ff
   14000878c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000878e:	ins    BYTE PTR es:[rdi],dx
   14000878f:	outs   dx,DWORD PTR ds:[rsi]
   140008790:	jb     0x140008792
   140008792:	fld    DWORD PTR [rdx]
   140008794:	push   rbx
   140008795:	outs   dx,BYTE PTR gs:[rsi]
   140008797:	fs rex.R ins BYTE PTR es:[rdi],dx
   14000879a:	addr32 rex.WB je 0x140008803
   14000879e:	ins    DWORD PTR es:[rdi],dx
   14000879f:	rex.WRB
   1400087a0:	gs jae 0x140008816
   1400087a3:	(bad)  
   1400087a4:	addr32 gs push rdi
   1400087a7:	add    cl,ch
   1400087a9:	add    BYTE PTR [rbp+0x6e],al
   1400087ac:	imul   r12d,DWORD PTR fs:[rcx+0x6c],0x4000676f
   1400087b5:	add    DWORD PTR [rdi+0x65],eax
   1400087b8:	je     0x1400087fe
   1400087ba:	ins    BYTE PTR es:[rdi],dx
   1400087bb:	addr32 rex.WB je 0x140008824
   1400087bf:	ins    DWORD PTR es:[rdi],dx
   1400087c0:	add    BYTE PTR [rax],al
   1400087c2:	loop   0x1400087c4
   1400087c4:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400087c6:	(bad)  
   1400087c7:	(bad)  
   1400087c8:	ins    BYTE PTR es:[rdi],dx
   1400087c9:	gs rex.WRB
   1400087cb:	outs   dx,BYTE PTR gs:[rsi]
   1400087cd:	jne    0x140008818
   1400087cf:	je     0x140008836
   1400087d1:	ins    DWORD PTR es:[rdi],dx
   1400087d2:	add    BYTE PTR [rax],al
   1400087d4:	retf   0x5202
   1400087d7:	gs ins BYTE PTR es:[rdi],dx
   1400087d9:	gs (bad) 
   1400087db:	jae    0x140008842
   1400087dd:	rex.R
   1400087de:	rex.XB add BYTE PTR [r15+0x2],dil
   1400087e2:	push   rax
   1400087e3:	gs imul ecx,DWORD PTR gs:[rbp+0x65],0x73
   1400087e9:	jae    0x14000884c
   1400087eb:	addr32 gs push rdi
   1400087ee:	add    BYTE PTR [rax],al
   1400087f0:	pop    rbx
   1400087f1:	add    edx,DWORD PTR [rbx+0x79]
   1400087f4:	jae    0x14000886a
   1400087f6:	gs ins DWORD PTR es:[rdi],dx
   1400087f8:	push   rax
   1400087f9:	(bad)  
   1400087fa:	jb     0x14000885d
   1400087fc:	ins    DWORD PTR es:[rdi],dx
   1400087fd:	gs je  0x140008865
   140008800:	jb     0x140008875
   140008802:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008804:	outs   dx,WORD PTR ds:[rsi]
   140008806:	push   rdi
   140008807:	add    BYTE PTR [rcx+rax*1],ch
   14000880a:	rex.RXB
   14000880b:	gs je  0x140008851
   14000880e:	ins    BYTE PTR es:[rdi],dx
   14000880f:	imul   esi,DWORD PTR [rax+0x62],0x6472616f
   140008816:	rex.R (bad) 
   140008818:	je     0x14000887b
   14000881a:	add    BYTE PTR [rax],al
   14000881c:	add    cl,BYTE PTR ss:[rdi+rbp*2+0x61]
   140008821:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   140008826:	push   rdi
   140008827:	add    BYTE PTR [rdi],cl
   140008829:	add    cl,BYTE PTR [rcx+0x73]
   14000882c:	imul   r12d,DWORD PTR [rcx+0x6c],0x654d676f
   140008834:	jae    0x1400088a9
   140008836:	(bad)  
   140008837:	addr32 gs push rdi
   14000883a:	add    BYTE PTR [rax],al
   14000883c:	add    cl,BYTE PTR cs:[rdi+rbp*2+0x61]
   140008841:	movsxd esp,DWORD PTR fs:[r11+0x65]
   140008846:	ins    BYTE PTR es:[rdi],dx
   140008847:	gs jb  0x1400088ab
   14000884a:	je     0x1400088bb
   14000884c:	jb     0x1400088c1
   14000884e:	push   rdi
   14000884f:	add    BYTE PTR [rbx+0x3],ch
   140008852:	push   rsp
   140008853:	jb     0x1400088b6
   140008855:	outs   dx,BYTE PTR ds:[rsi]
   140008856:	jae    0x1400088c4
   140008858:	(bad)  
   140008859:	je     0x1400088c0
   14000885b:	rex.WRB
   14000885c:	gs jae 0x1400088d2
   14000885f:	(bad)  
   140008860:	add    BYTE PTR gs:[eax],al
   140008864:	cmp    BYTE PTR [rcx],al
   140008866:	rex.RXB
   140008867:	gs je  0x1400088ae
   14000886a:	rex.XB add BYTE PTR [r14],cl
   14000886d:	add    BYTE PTR [rdx+0x65],al
   140008870:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
   140008878:	add    BYTE PTR [rax],al
   14000887a:	std    
   14000887b:	add    dl,BYTE PTR [rbx+0x65]
   14000887e:	je     0x1400088c6
   140008880:	outs   dx,DWORD PTR ds:[rsi]
   140008881:	movsxd esi,DWORD PTR [rbp+0x73]
   140008884:	add    BYTE PTR [rax],al
   140008886:	sub    DWORD PTR [rcx],eax
   140008888:	rex.RXB
   140008889:	gs je  0x1400088cf
   14000888c:	ins    BYTE PTR es:[rdi],dx
   14000888d:	imul   esp,DWORD PTR [rbp+0x6e],0x63655274
   140008894:	je     0x140008896
   140008896:	or     eax,DWORD PTR [rcx]
   140008898:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x646e6957
   1400088a0:	outs   dx,DWORD PTR ds:[rsi]
   1400088a1:	ja     0x1400088fa
   1400088a3:	add    dh,cl
   1400088a5:	add    BYTE PTR [rdx+rsi*2+0x61],al
   1400088a9:	ja     0x1400088f4
   1400088ab:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400088ae:	add    BYTE PTR [rax],al
   1400088b0:	xor    al,0x2
   1400088b2:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400088b4:	(bad)  
   1400088b5:	fs rex.XB jne 0x14000892b
   1400088b9:	jae    0x14000892a
   1400088bb:	jb     0x140008914
   1400088bd:	add    BYTE PTR [rdi+0x1],bh
   1400088c0:	rex.RXB
   1400088c1:	gs je  0x140008914
   1400088c4:	(bad)  
   1400088c5:	jb     0x14000892c
   1400088c7:	outs   dx,BYTE PTR ds:[rsi]
   1400088c8:	je     0x1400088ca
   1400088ca:	or     al,0x2
   1400088cc:	rex.WB jae 0x140008912
   1400088cf:	ins    BYTE PTR es:[rdi],dx
   1400088d0:	imul   esi,DWORD PTR [rax+0x62],0x6472616f
   1400088d7:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400088d9:	jb     0x140008948
   1400088db:	(bad)  
   1400088dc:	je     0x14000891f
   1400088de:	jbe    0x140008941
   1400088e0:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400088e8:	mov    bl,0x0
   1400088ea:	imul   r12d,DWORD PTR [rcx+0x6c],0x6f42676f
   1400088f2:	js     0x140008944
   1400088f4:	(bad)  
   1400088f5:	jb     0x140008958
   1400088f7:	ins    DWORD PTR es:[rdi],dx
   1400088f8:	push   rdi
   1400088f9:	add    BYTE PTR [rdi+0x1],al
   1400088fc:	rex.RXB
   1400088fd:	gs je  0x140008946
   140008900:	outs   dx,DWORD PTR ds:[rsi]
   140008901:	movsxd esi,DWORD PTR [rbp+0x73]
   140008904:	add    BYTE PTR [rax],al
   140008906:	inc    BYTE PTR [rdx]
   140008908:	push   rbx
   140008909:	gs je  0x140008952
   14000890c:	outs   dx,DWORD PTR ds:[rsi]
   14000890d:	jb     0x140008974
   14000890f:	addr32 jb 0x140008981
   140008912:	jne    0x140008982
   140008914:	fs push rdi
   140008916:	imul   ebp,DWORD PTR [rsi+0x64],0x9b00776f
   14000891d:	add    BYTE PTR [rbp+riz*2+0x66],al
   140008921:	rex.R ins BYTE PTR es:[rdi],dx
   140008923:	addr32 push rax
   140008925:	jb     0x140008996
   140008927:	movsxd edx,DWORD PTR [rdi+0x0]
   14000892a:	add    DWORD PTR [rdx],0x50
   14000892d:	outs   dx,DWORD PTR ds:[rsi]
   14000892e:	jae    0x1400089a4
   140008930:	rex.WRB
   140008931:	gs jae 0x1400089a7
   140008934:	(bad)  
   140008935:	addr32 gs push rdi
   140008938:	add    BYTE PTR [rax],al
   14000893a:	(bad)  
   14000893b:	add    DWORD PTR [rsi+0x69],eax
   14000893e:	ins    BYTE PTR es:[rdi],dx
   14000893f:	ins    BYTE PTR es:[rdi],dx
   140008940:	push   rdx
   140008941:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
   140008946:	adc    eax,DWORD PTR [rdx]
   140008948:	rex.WB jae 0x140008994
   14000894b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000894e:	imul   esp,DWORD PTR [rbx+0x0],0x50028400
   140008955:	outs   dx,DWORD PTR ds:[rsi]
   140008956:	jae    0x1400089cc
   140008958:	push   rcx
   140008959:	jne    0x1400089c4
   14000895b:	je     0x1400089aa
   14000895d:	gs jae 0x1400089d3
   140008960:	(bad)  
   140008961:	add    BYTE PTR gs:[eax+0x1],bh
   140008966:	rex.RXB
   140008967:	gs je  0x1400089b7
   14000896a:	gs jae 0x1400089e0
   14000896d:	(bad)  
   14000896e:	addr32 gs push rdi
   140008971:	add    ah,dl
   140008973:	add    DWORD PTR [rdi+0x65],eax
   140008976:	je     0x1400089cf
   140008978:	imul   ebp,DWORD PTR [rsi+0x64],0x6552776f
   14000897f:	movsxd esi,DWORD PTR [rax+rax*1+0x69]
   140008983:	add    edx,DWORD PTR [rdx+rsi*2+0x61]
   140008987:	outs   dx,BYTE PTR ds:[rsi]
   140008988:	jae    0x1400089f6
   14000898a:	(bad)  
   14000898b:	je     0x1400089f2
   14000898d:	movsxd esp,DWORD PTR [r11+0x65]
   140008991:	ins    BYTE PTR es:[rdi],dx
   140008992:	gs jb  0x1400089f6
   140008995:	je     0x140008a06
   140008997:	jb     0x1400089f0
   140008999:	add    dl,bl
   14000899b:	add    DWORD PTR [rdi+0x65],eax
   14000899e:	je     0x1400089f7
   1400089a0:	imul   ebp,DWORD PTR [rsi+0x64],0x6554776f
   1400089a7:	js     0x140008a1d
   1400089a9:	rex.WR
   1400089aa:	outs   dx,BYTE PTR gs:[rsi]
   1400089ac:	addr32 je 0x140008a17
   1400089af:	push   rdi
   1400089b0:	add    BYTE PTR [rax],al
   1400089b2:	scas   al,BYTE PTR es:[rdi]
   1400089b3:	add    BYTE PTR [rbp+riz*2+0x73],al
   1400089b7:	je     0x140008a2b
   1400089b9:	outs   dx,DWORD PTR ds:[rsi]
   1400089ba:	jns    0x140008a13
   1400089bc:	imul   ebp,DWORD PTR [rsi+0x64],0xeb00776f
   1400089c3:	add    BYTE PTR [rbp+0x6e],al
   1400089c6:	fs push rax
   1400089c8:	(bad)  
   1400089c9:	imul   ebp,DWORD PTR [rsi+0x74],0x53550000
   1400089d0:	rex.RB push r10
   1400089d2:	xor    esi,DWORD PTR [rdx]
   1400089d4:	cs fs ins BYTE PTR es:[rdi],dx
   1400089d7:	ins    BYTE PTR es:[rdi],dx
   1400089d8:	add    BYTE PTR [rax],al
   1400089da:	xchg   esp,eax
   1400089db:	add    al,0x6d
   1400089dd:	gs ins DWORD PTR es:[rdi],dx
   1400089df:	ins    DWORD PTR es:[rdi],dx
   1400089e0:	outs   dx,DWORD PTR ds:[rsi]
   1400089e1:	jbe    0x140008a48
   1400089e3:	add    BYTE PTR [rip+0x74775f04],al        # 0x1b477e8ed
   1400089e9:	outs   dx,DWORD PTR ds:[rsi]
   1400089ea:	imul   eax,DWORD PTR [rax],0x765f0369
   1400089f0:	jae    0x140008a60
   1400089f2:	ja     0x140008a64
   1400089f4:	jb     0x140008a5f
   1400089f6:	outs   dx,BYTE PTR ds:[rsi]
   1400089f7:	je     0x140008a5f
   1400089f9:	add    cl,bl
   1400089fb:	add    DWORD PTR [rdi+0x69],ebx
   1400089fe:	je     0x140008a6f
   140008a00:	ja     0x140008a02
   140008a02:	adc    eax,DWORD PTR [rip+0x73736377]        # 0x1b373ed7f
   140008a08:	jo     0x140008a78
   140008a0a:	add    BYTE PTR [rax],al
   140008a0c:	(bad)  
   140008a0d:	add    eax,0x63736377
   140008a12:	jae    0x140008a84
   140008a14:	outs   dx,BYTE PTR ds:[rsi]
   140008a15:	add    BYTE PTR [rbp+0x0],dl
   140008a18:	pop    rdi
   140008a19:	pop    rax
   140008a1a:	movsxd esi,DWORD PTR [rax+0x74]
   140008a1d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140008a26:	pop    rdi
   140008a27:	(bad)  
   140008a28:	ins    DWORD PTR es:[rdi],dx
   140008a29:	jae    0x140008a92
   140008a2b:	pop    rdi
   140008a2c:	gs js  0x140008a98
   140008a2f:	je     0x140008a31
   140008a31:	add    BYTE PTR [rdi+0x0],bh
   140008a34:	pop    rdi
   140008a35:	pop    rdi
   140008a36:	addr32 gs je 0x140008aa7
   140008a3a:	(bad)  
   140008a3b:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140008a42:	mov    es,WORD PTR [rax]
   140008a44:	pop    rdi
   140008a45:	pop    rdi
   140008a46:	jae    0x140008aad
   140008a48:	je     0x140008aa9
   140008a4a:	(bad)  
   140008a4b:	jo     0x140008abd
   140008a4d:	pop    rdi
   140008a4e:	je     0x140008ac9
   140008a50:	jo     0x140008ab7
   140008a52:	add    BYTE PTR [rax],al
   140008a54:	xor    al,BYTE PTR [riz*2+0x746978]
   140008a5b:	add    BYTE PTR [rsi],cl
   140008a5d:	add    DWORD PTR [rdi+0x65],ebx
   140008a60:	js     0x140008acb
   140008a62:	je     0x140008a64
   140008a64:	rol    DWORD PTR [rax],0x5f
   140008a67:	movsxd esp,DWORD PTR [rbp+0x78]
   140008a6a:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   140008a72:	jae    0x140008ae1
   140008a74:	(bad)
   140008a79:	add    BYTE PTR fs:[rax],al
   140008a7c:	nop
   140008a7d:	add    BYTE PTR [rdi+0x5f],bl
   140008a80:	jae    0x140008ae7
   140008a82:	je     0x140008af9
   140008a84:	jae    0x140008aeb
   140008a86:	jb     0x140008af5
   140008a88:	(bad)  
   140008a89:	je     0x140008af3
   140008a8b:	gs jb  0x140008b00
   140008a8e:	add    BYTE PTR [rax],al
   140008a90:	jge    0x140008a93
   140008a92:	pop    rdi
   140008a93:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140008a9a:	ins    DWORD PTR es:[rdi],dx
   140008a9b:	add    BYTE PTR [rdi+0x0],dl
   140008a9e:	pop    rdi
   140008a9f:	pop    rdi
   140008aa0:	rex.XB pop r15
   140008aa2:	jae    0x140008b14
   140008aa4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140008aa8:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140008aaf:	ins    BYTE PTR es:[rdi],dx
   140008ab0:	gs jb  0x140008ab3
   140008ab3:	add    BYTE PTR [rdx+0x63615f00],ah
   140008ab9:	ins    DWORD PTR es:[rdi],dx
   140008aba:	fs ins BYTE PTR es:[rdi],dx
   140008abc:	outs   dx,BYTE PTR ds:[rsi]
   140008abd:	add    BYTE PTR [rdi],ah
   140008abf:	add    DWORD PTR [rdi+0x66],ebx
   140008ac2:	ins    DWORD PTR es:[rdi],dx
   140008ac3:	outs   dx,DWORD PTR ds:[rsi]
   140008ac4:	fs add BYTE PTR gs:[rax],al
   140008ac8:	rol    BYTE PTR [rax],cl
   140008aca:	pop    rdi
   140008acb:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140008ace:	ins    DWORD PTR es:[rdi],dx
   140008acf:	outs   dx,DWORD PTR ds:[rsi]
   140008ad0:	fs add BYTE PTR gs:[rax],al
   140008ad4:	ins    DWORD PTR es:[rdi],dx
   140008ad5:	jae    0x140008b4d
   140008ad7:	movsxd esi,DWORD PTR [rdx+0x74]
   140008ada:	cs fs ins BYTE PTR es:[rdi],dx
   140008add:	ins    BYTE PTR es:[rdi],dx
   140008ade:	add    BYTE PTR [rax],al
   140008ae0:	(bad)  
   140008ae1:	add    BYTE PTR [rdi],bh
   140008ae3:	je     0x140008b4a
   140008ae5:	jb     0x140008b54
   140008ae7:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140008aee:	pop    rcx
   140008aef:	pop    r8
   140008af1:	pop    rax
   140008af2:	pop    rdx
   140008af3:	add    BYTE PTR [rsi+0x65685301],ch
   140008af9:	ins    BYTE PTR es:[rdi],dx
   140008afa:	ins    BYTE PTR es:[rdi],dx
   140008afb:	rex.B (bad) 
   140008afd:	outs   dx,DWORD PTR ds:[rsi]
   140008afe:	jne    0x140008b74
   140008b00:	push   rdi
   140008b01:	add    BYTE PTR [rbx+0x48],dl
   140008b04:	rex.RB
   140008b05:	rex.WR
   140008b06:	xor    r14,QWORD PTR [rdx]
   140008b09:	cs fs ins BYTE PTR es:[rdi],dx
   140008b0c:	ins    BYTE PTR es:[rdi],dx
   140008b0d:	add    bh,dl
   140008b0f:	add    BYTE PTR [rcx+rbp*2+0x6e],ch
   140008b13:	gs push rsp
   140008b15:	jb     0x140008b78
   140008b17:	outs   dx,BYTE PTR ds:[rsi]
   140008b18:	jae    0x140008b86
   140008b1a:	(bad)  
   140008b1b:	je     0x140008b82
   140008b1d:	imul   r12d,DWORD PTR [rcx+0x6c],0x57676f
   140008b25:	add    BYTE PTR [rdi],ah
   140008b27:	add    BYTE PTR [rcx+rbp*2+0x6e],ch
   140008b2b:	gs rex.XB ins BYTE PTR es:[rdi],dx
   140008b2e:	outs   dx,DWORD PTR ds:[rsi]
   140008b2f:	jae    0x140008b96
   140008b31:	add    BYTE PTR [rbp+0x6e696c00],cl
   140008b37:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140008b3a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008b42:	rex.RB js 0x140008b9c
   140008b45:	add    BYTE PTR [rdi+0x0],ah
   140008b48:	ins    BYTE PTR es:[rdi],dx
   140008b49:	imul   ebp,DWORD PTR [rsi+0x65],0x44746547
   140008b50:	gs jbe 0x140008b96
   140008b53:	(bad)  
   140008b54:	jo     0x140008bc9
   140008b56:	push   rdi
   140008b57:	add    BYTE PTR [rax+rax*1+0x656e696c],dl
   140008b5e:	rex.WRX
   140008b5f:	outs   dx,DWORD PTR gs:[esi]
   140008b62:	je     0x140008bcd
   140008b64:	(bad)  
   140008b65:	je     0x140008bcc
   140008b67:	push   r8
   140008b69:	rex.WB push r14
   140008b6b:	gs jb  0x140008be1
   140008b6e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c00d400
   140008b75:	imul   ebp,DWORD PTR [rsi+0x65],0x6e617254
   140008b7c:	jae    0x140008bea
   140008b7e:	(bad)  
   140008b7f:	je     0x140008be6
   140008b81:	rex.B
   140008b82:	fs fs jb 0x140008beb
   140008b86:	jae    0x140008bfb
   140008b88:	push   rdi
   140008b89:	add    BYTE PTR [rdi+0x6e696c00],ah
   140008b8f:	gs push rdx
   140008b91:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65527265
   140008b9a:	jno    0x140008c11
   140008b9c:	gs jae 0x140008c13
   140008b9f:	push   rdx
   140008ba0:	movsxd ebp,DWORD PTR gs:[rcx+0x70]
   140008ba4:	imul   esp,DWORD PTR [rbp+0x6e],0x5c000074
   140008bab:	add    BYTE PTR [rcx+rbp*2+0x6e],ch
   140008baf:	gs rex.RXB
   140008bb1:	gs je  0x140008bf5
   140008bb4:	jo     0x140008c26
   140008bb6:	push   rax
   140008bb7:	jb     0x140008c22
   140008bb9:	outs   dx,DWORD PTR ds:[rsi]
   140008bba:	jb     0x140008c25
   140008bbc:	je     0x140008c37
   140008bbe:	push   rdi
   140008bbf:	add    BYTE PTR [rax+0x0],cl
   140008bc2:	ins    BYTE PTR es:[rdi],dx
   140008bc3:	imul   ebp,DWORD PTR [rsi+0x65],0x41746547
   140008bca:	fs fs jb 0x140008c33
   140008bce:	jae    0x140008c43
   140008bd0:	rex.XB (bad) 
   140008bd2:	jo     0x140008c47
   140008bd4:	push   rdi
   140008bd5:	add    BYTE PTR [rax+0x6e696c00],bl
   140008bdb:	gs rex.WRXB jo 0x140008c44
   140008bdf:	outs   dx,BYTE PTR ds:[rsi]
   140008be0:	push   rdi
   140008be1:	add    BYTE PTR [rdx+0x6e696c00],al
   140008be7:	gs rex.RXB
   140008be9:	gs je  0x140008c3e
   140008bec:	gs jno 0x140008c64
   140008bef:	gs jae 0x140008c66
   140008bf2:	push   rdi
   140008bf3:	add    BYTE PTR [rax+0x6e696c00],dl
   140008bf9:	gs rex.WRB (bad) 
   140008bfc:	imul   esp,DWORD PTR [rbp+0x43],0x61
   140008c00:	ins    BYTE PTR es:[rdi],dx
   140008c01:	ins    BYTE PTR es:[rdi],dx
   140008c02:	push   rdi
   140008c03:	add    BYTE PTR [rbp+0x6e696c00],dh
   140008c09:	gs push rbx
   140008c0b:	gs je  0x140008c4f
   140008c0e:	jo     0x140008c80
   140008c10:	push   rax
   140008c11:	jb     0x140008c7c
   140008c13:	outs   dx,DWORD PTR ds:[rsi]
   140008c14:	jb     0x140008c7f
   140008c16:	je     0x140008c91
   140008c18:	push   rdi
   140008c19:	add    al,dl
   140008c1b:	add    BYTE PTR [rcx+rbp*2+0x6e],ch
   140008c1f:	gs push rbx
   140008c21:	push   0x6f647475
   140008c26:	ja     0x140008c96
   140008c28:	add    BYTE PTR [rax],al
   140008c2a:	cmp    eax,DWORD PTR [rax]
   140008c2c:	ins    BYTE PTR es:[rdi],dx
   140008c2d:	imul   ebp,DWORD PTR [rsi+0x65],0x706f7244
   140008c34:	add    BYTE PTR [rax],al
   140008c36:	(bad)  
   140008c37:	add    BYTE PTR [rcx+rbp*2+0x6e],ch
   140008c3b:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140008c3e:	outs   dx,BYTE PTR ds:[rsi]
   140008c3f:	imul   sp,WORD PTR [rdi+0x44],0x6169
   140008c45:	ins    BYTE PTR es:[rdi],dx
   140008c46:	outs   dx,DWORD PTR ds:[rsi]
   140008c47:	addr32 push rdi
   140008c49:	add    BYTE PTR [rsi+0x6e696c00],al
   140008c4f:	gs rex.RXB
   140008c51:	gs je  0x140008ca8
   140008c54:	jb     0x140008cb7
   140008c56:	outs   dx,BYTE PTR ds:[rsi]
   140008c57:	jae    0x140008cc5
   140008c59:	(bad)  
   140008c5a:	je     0x140008cc1
   140008c5c:	rex.XB (bad) 
   140008c5e:	jo     0x140008cd3
   140008c60:	push   rdi
   140008c61:	add    BYTE PTR [rip+0x6e696c00],dh        # 0x1ae69f867
   140008c67:	gs rex.R
   140008c69:	gs (bad) 
   140008c6b:	ins    BYTE PTR es:[rdi],dx
   140008c6c:	ins    BYTE PTR es:[rdi],dx
   140008c6d:	outs   dx,DWORD PTR ds:[rsi]
   140008c6e:	movsxd esp,DWORD PTR [rcx+0x74]
   140008c71:	gs rex.XB (bad) 
   140008c74:	ins    BYTE PTR es:[rdi],dx
   140008c75:	ins    BYTE PTR es:[rdi],dx
   140008c76:	add    BYTE PTR [rax],al
   140008c78:	push   rsp
   140008c79:	push   r8
   140008c7b:	xor    rsi,QWORD PTR [r10]
   140008c7e:	cs fs ins BYTE PTR es:[rdi],dx
   140008c81:	ins    BYTE PTR es:[rdi],dx
   140008c82:	add    BYTE PTR [rax],al
   140008c84:	ins    DWORD PTR es:[rdi],dx
   140008c85:	add    eax,0x65656c53
   140008c8a:	jo     0x140008c8c
   140008c8c:	mov    DWORD PTR [rdx],0x53746547
   140008c92:	je     0x140008cf5
   140008c94:	jb     0x140008d0a
   140008c96:	jne    0x140008d08
   140008c98:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008c9a:	outs   dx,WORD PTR ds:[rsi]
   140008c9c:	push   rdi
   140008c9d:	add    BYTE PTR [rdi+0x6c745204],dh
   140008ca3:	rex.XB (bad) 
   140008ca5:	jo     0x140008d1b
   140008ca7:	jne    0x140008d1b
   140008ca9:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140008cac:	outs   dx,BYTE PTR ds:[rsi]
   140008cad:	je     0x140008d14
   140008caf:	js     0x140008d25
   140008cb1:	add    BYTE PTR [rsi+0x6c745204],bh
   140008cb7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008cb9:	outs   dx,DWORD PTR ds:[rsi]
   140008cba:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140008cbe:	jne    0x140008d2e
   140008cc0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008cc4:	outs   dx,BYTE PTR ds:[rsi]
   140008cc5:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140008cc7:	je     0x140008d3b
   140008cc9:	jns    0x140008ccb
   140008ccb:	add    ch,al
   140008ccd:	add    al,0x52
   140008ccf:	je     0x140008d3d
   140008cd1:	push   rsi
   140008cd2:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140008cd9:	outs   dx,BYTE PTR ds:[rsi]
   140008cda:	ja     0x140008d45
   140008cdc:	outs   dx,BYTE PTR ds:[rsi]
   140008cdd:	add    BYTE PTR fs:[rax],al
   140008ce0:	sahf   
   140008ce1:	add    eax,0x61686e55
   140008ce6:	outs   dx,BYTE PTR ds:[rsi]
   140008ce7:	fs ins BYTE PTR es:[rdi],dx
   140008ce9:	gs fs rex.RB js 0x140008d51
   140008cee:	gs jo  0x140008d65
   140008cf1:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008cf8:	gs jb  0x140008cfb
   140008cfb:	add    BYTE PTR [rsi+0x5],bl
   140008cfe:	push   rbx
   140008cff:	gs je  0x140008d57
   140008d02:	outs   dx,BYTE PTR ds:[rsi]
   140008d03:	push   0x6c646e61
   140008d08:	gs fs rex.RB js 0x140008d70
   140008d0d:	gs jo  0x140008d84
   140008d10:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008d17:	gs jb  0x140008d1a
   140008d1a:	adc    BYTE PTR [rdx],al
   140008d1c:	rex.RXB
   140008d1d:	gs je  0x140008d63
   140008d20:	jne    0x140008d94
   140008d22:	jb     0x140008d89
   140008d24:	outs   dx,BYTE PTR ds:[rsi]
   140008d25:	je     0x140008d77
   140008d27:	jb     0x140008d98
   140008d29:	movsxd esp,DWORD PTR [rbp+0x73]
   140008d2c:	jae    0x140008d2e
   140008d2e:	jl     0x140008d35
   140008d30:	push   rsp
   140008d31:	gs jb  0x140008da1
   140008d34:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140008d3b:	outs   dx,DWORD PTR ds:[rsi]
   140008d3c:	movsxd esp,DWORD PTR [rbp+0x73]
   140008d3f:	jae    0x140008d41
   140008d41:	add    BYTE PTR [rsi],dh
   140008d43:	add    al,0x51
   140008d45:	jne    0x140008dac
   140008d47:	jb     0x140008dc2
   140008d49:	push   rax
   140008d4a:	gs jb  0x140008db3
   140008d4d:	outs   dx,DWORD PTR ds:[rsi]
   140008d4e:	jb     0x140008dbd
   140008d50:	(bad)  
   140008d51:	outs   dx,BYTE PTR ds:[rsi]
   140008d52:	movsxd esp,DWORD PTR [rbp+0x43]
   140008d55:	outs   dx,DWORD PTR ds:[rsi]
   140008d56:	jne    0x140008dc6
   140008d58:	je     0x140008dbf
   140008d5a:	jb     0x140008d5c
   140008d5c:	adc    DWORD PTR [rdx],eax
   140008d5e:	rex.RXB
   140008d5f:	gs je  0x140008da5
   140008d62:	jne    0x140008dd6
   140008d64:	jb     0x140008dcb
   140008d66:	outs   dx,BYTE PTR ds:[rsi]
   140008d67:	je     0x140008db9
   140008d69:	jb     0x140008dda
   140008d6b:	movsxd esp,DWORD PTR [rbp+0x73]
   140008d6e:	jae    0x140008db9
   140008d70:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465d479
   140008d77:	rex.XB jne 0x140008dec
   140008d7a:	jb     0x140008de1
   140008d7c:	outs   dx,BYTE PTR ds:[rsi]
   140008d7d:	je     0x140008dd3
   140008d7f:	push   0x64616572
   140008d84:	rex.WB
   140008d85:	add    BYTE PTR fs:[rax],al
   140008d88:	loopne 0x140008d8c
   140008d8a:	rex.RXB
   140008d8b:	gs je  0x140008de1
   140008d8e:	jns    0x140008e03
   140008d90:	je     0x140008df7
   140008d92:	ins    DWORD PTR es:[rdi],dx
   140008d93:	push   rsp
   140008d94:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140008d9b:	ins    BYTE PTR es:[rdi],dx
   140008d9c:	gs push rsp
   140008d9e:	imul   ebp,DWORD PTR [rbp+0x65],0x6d049600
   140008da5:	gs ins DWORD PTR es:[rdi],dx
   140008da7:	jae    0x140008e0e
   140008da9:	je     0x140008dab
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    DWORD PTR [rax],eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	int    0x5d
   140009012:	and    dl,dl
   140009014:	data16 (bad) 
   140009016:	(bad)  
   140009017:	inc    DWORD PTR [rax]
   140009019:	add    BYTE PTR [rax],al
   14000901b:	add    BYTE PTR [rax],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    BYTE PTR [rax+rax*1+0x49],al
   140009023:	add    BYTE PTR [rcx+0x0],al
   140009026:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000902a:	push   rdx
   14000902b:	add    BYTE PTR [rsi],ch
   14000902d:	add    BYTE PTR [rax+0x0],cl
   140009030:	rex.WR add BYTE PTR [rax+0x0],r10b
   140009034:	add    BYTE PTR [rax],al
   140009036:	add    BYTE PTR [rax],al
   140009038:	add    BYTE PTR [rcx+0x0],r13b
   14000903c:	(bad)  
   14000903d:	add    BYTE PTR [rax+rax*1+0x65],ch
   140009041:	add    BYTE PTR [rdx+0x0],dh
   140009044:	add    BYTE PTR [r8+r8*1+0x61],bpl
   140009049:	add    BYTE PTR [rbx+0x0],dh
   14000904c:	jae    0x14000904e
   14000904e:	add    BYTE PTR [rax],al
   140009050:	add    DWORD PTR [rax],eax
   140009052:	add    BYTE PTR [rax],al
   140009054:	(bad)  
   140009055:	(bad)  
   140009056:	(bad)  
   140009057:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	or     BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	adc    DWORD PTR [rax],0x7ca80000
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	mov    BYTE PTR [rax],dl
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	rex.WRX adc QWORD PTR [rax],r8
   14000b013:	add    BYTE PTR [rax+0x5400007c],dh
   14000b019:	adc    DWORD PTR [rax],eax
   14000b01b:	add    dh,cl
   14000b01d:	adc    DWORD PTR [rax],eax
   14000b01f:	add    BYTE PTR [rsp+rdi*2+0x11d40000],bh
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	mov    cl,0x17
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	int3   
   14000b02d:	jl     0x14000b02f
   14000b02f:	add    BYTE PTR [rax+0x53000017],bh
   14000b035:	sbb    al,BYTE PTR [rax]
   14000b037:	add    ah,dh
   14000b039:	jl     0x14000b03b
   14000b03b:	add    BYTE PTR [rdx+rbx*1+0x0],bl
   14000b03f:	add    BYTE PTR [rbp+rbx*1+0x7d0c0000],dl
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	pushf  
   14000b049:	sbb    eax,0x1dff0000
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	xor    al,0x7d
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	or     BYTE PTR [rsi],bl
   14000b056:	add    BYTE PTR [rax],al
   14000b058:	add    eax,0x40000020
   14000b05d:	jge    0x14000b05f
   14000b05f:	add    BYTE PTR [rax+riz*1],cl
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	push   rsp
   14000b065:	and    BYTE PTR [rax],al
   14000b067:	add    BYTE PTR [rbp+rdi*2+0x0],ah
   14000b06b:	add    BYTE PTR [rax+0x20],ah
   14000b06e:	add    BYTE PTR [rax],al
   14000b070:	sub    BYTE PTR [rdx],0x0
   14000b073:	add    BYTE PTR [rbp+rdi*2+0x0],ch
   14000b077:	add    BYTE PTR [rax+0x4b00002a],cl
   14000b07d:	sub    eax,DWORD PTR [rax]
   14000b07f:	add    BYTE PTR [rax+0x5400007d],dl
   14000b085:	sub    eax,DWORD PTR [rax]
   14000b087:	add    BYTE PTR [rcx+0x2f],ah
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	movabs al,ds:0x900002f6800007d
   14000b095:	xor    DWORD PTR [rax],eax
   14000b097:	add    ah,al
   14000b099:	jge    0x14000b09b
   14000b09b:	add    BYTE PTR [rax],dl
   14000b09d:	xor    DWORD PTR [rax],eax
   14000b09f:	add    BYTE PTR [rip+0xffffffffe4000032],ah        # 0x12400b0d7
   14000b0a5:	jge    0x14000b0a7
   14000b0a7:	add    BYTE PTR [rax],dh
   14000b0a9:	xor    al,BYTE PTR [rax]
   14000b0ab:	add    BYTE PTR [rsi-0xbffffca],ch
   14000b0b1:	jge    0x14000b0b3
   14000b0b3:	add    al,al
   14000b0b5:	add    BYTE PTR ss:[rax],al
   14000b0b8:	lods   al,BYTE PTR ds:[rsi]
   14000b0b9:	(bad)  
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	nop
   14000b0bd:	jge    0x14000b0bf
   14000b0bf:	add    al,al
   14000b0c1:	(bad)  
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	push   rdi
   14000b0c5:	add    BYTE PTR ds:[rax],al
   14000b0c8:	adc    BYTE PTR [rsi+0x0],bh
   14000b0cb:	add    BYTE PTR [rax+0x3e],ah
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	(bad)  
   14000b0d1:	rex.XB add BYTE PTR [r8],al
   14000b0d4:	xor    BYTE PTR [rsi+0x0],bh
   14000b0d7:	add    BYTE PTR [rax-0x77ffffbd],dl
   14000b0dd:	rex.RXB add BYTE PTR [r8],r8b
   14000b0e0:	push   rsp
   14000b0e1:	jle    0x14000b0e3
   14000b0e3:	add    BYTE PTR [rax-0x29ffffb9],dl
   14000b0e9:	rex.W add BYTE PTR [rax],al
   14000b0ec:	ins    BYTE PTR es:[rdi],dx
   14000b0ed:	jle    0x14000b0ef
   14000b0ef:	add    ah,bl
   14000b0f1:	rex.W add BYTE PTR [rax],al
   14000b0f4:	test   DWORD PTR [rdx+0x0],0x7e8800
   14000b0fb:	add    BYTE PTR [rax],al
   14000b0fd:	rex.WXB add BYTE PTR [r8],al
   14000b100:	ret    0x4b
   14000b103:	add    BYTE PTR [rsi+rdi*2+0x4bc80000],ah
   14000b10a:	add    BYTE PTR [rax],al
   14000b10c:	push   0x4c
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	fs jge 0x14000b113
   14000b113:	add    BYTE PTR [rax+0x4c],dh
   14000b116:	add    BYTE PTR [rax],al
   14000b118:	rex.WRXB add BYTE PTR es:[r8],r8b
   14000b11c:	lods   al,BYTE PTR ds:[rsi]
   14000b11d:	jle    0x14000b11f
   14000b11f:	add    BYTE PTR [rdi+rcx*2],ch
   14000b122:	add    BYTE PTR [rax],al
   14000b124:	(bad)  
   14000b125:	push   rcx
   14000b126:	add    BYTE PTR [rax],al
   14000b128:	enter  0x7e,0x0
   14000b12c:	fcom   QWORD PTR [rcx+0x0]
   14000b12f:	add    BYTE PTR [rcx-0x13ffffae],cl
   14000b135:	jle    0x14000b137
   14000b137:	add    BYTE PTR [rax-0x71ffffae],dl
   14000b13d:	pop    rax
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	cld    
   14000b141:	jle    0x14000b143
   14000b143:	add    al,dh
   14000b145:	pop    rax
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	mov    edi,0x64000059
   14000b14d:	jge    0x14000b14f
   14000b14f:	add    al,dl
   14000b151:	pop    rcx
   14000b152:	add    BYTE PTR [rax],al
   14000b154:	sbb    DWORD PTR [rdx+0x0],ebx
   14000b157:	add    BYTE PTR [rax],ah
   14000b159:	jg     0x14000b15b
   14000b15b:	add    BYTE PTR [rax],ah
   14000b15d:	pop    rdx
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	xor    bl,BYTE PTR [rdx+0x0]
   14000b163:	add    BYTE PTR [rbp+rdi*2+0x0],ah
   14000b167:	add    BYTE PTR [rax],bh
   14000b169:	pop    rdx
   14000b16a:	add    BYTE PTR [rax],al
   14000b16c:	mov    ds,WORD PTR [rax+rax*1+0x0]
   14000b170:	sub    BYTE PTR [rdi+0x0],bh
   14000b173:	add    BYTE PTR [rax-0x41ffffa4],ah
   14000b179:	pop    rsp
   14000b17a:	add    BYTE PTR [rax],al
   14000b17c:	pop    rax
   14000b17d:	jg     0x14000b17f
   14000b17f:	add    ah,al
   14000b181:	pop    rsp
   14000b182:	add    BYTE PTR [rax],al
   14000b184:	clc    
   14000b185:	pop    rsp
   14000b186:	add    BYTE PTR [rax],al
   14000b188:	mov    WORD PTR [rdi+0x0],?
   14000b18b:	add    BYTE PTR [rax],al
   14000b18d:	pop    rbp
   14000b18e:	add    BYTE PTR [rax],al
   14000b190:	jno    0x14000b1f0
   14000b192:	add    BYTE PTR [rax],al
   14000b194:	fs jg  0x14000b197
   14000b197:	add    BYTE PTR [rax+0x5e],bh
   14000b19a:	add    BYTE PTR [rax],al
   14000b19c:	outs   dx,DWORD PTR ds:[rsi]
   14000b19d:	pop    rdi
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	pop    rsp
   14000b1a1:	jg     0x14000b1a3
   14000b1a3:	add    BYTE PTR [rax-0x46ffffa1],al
   14000b1a9:	pop    rdi
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	fs jge 0x14000b1af
   14000b1af:	add    al,al
   14000b1b1:	pop    rdi
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	fcomp  DWORD PTR [rdi+0x0]
   14000b1b7:	add    BYTE PTR [rbp+rdi*2+0x0],ah
   14000b1bb:	add    ah,ch
   14000b1bd:	pop    rdi
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	rex (bad) 
   14000b1c2:	add    BYTE PTR [rax],al
   14000b1c4:	ins    BYTE PTR es:[rdi],dx
   14000b1c5:	jg     0x14000b1c7
   14000b1c7:	add    BYTE PTR [rax+0x60],cl
   14000b1ca:	add    BYTE PTR [rax],al
   14000b1cc:	lea    esp,[rax+0x0]
   14000b1cf:	add    BYTE PTR [rdi+rdi*2+0x61000000],cl
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	rex.WRB (bad) 
   14000b1da:	add    BYTE PTR [rax],al
   14000b1dc:	xchg   esp,eax
   14000b1dd:	jg     0x14000b1df
   14000b1df:	add    BYTE PTR [rcx+riz*2+0x62640000],dl
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	sar    BYTE PTR [rdi+0x0],0x0
   14000b1ec:	test   al,0x62
   14000b1ee:	add    BYTE PTR [rax],al
   14000b1f0:	(bad)
   14000b1f3:	add    BYTE PTR [rbp+rdi*2+0x0],ah
   14000b1f7:	add    ah,cl
   14000b1f9:	(bad)  
   14000b1fa:	add    BYTE PTR [rax],al
   14000b1fc:	(bad)  
   14000b1fd:	movsxd eax,DWORD PTR [rax]
   14000b1ff:	add    BYTE PTR [rdi+rdi*2+0x63500000],cl
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	push   rdx
   14000b209:	movsxd eax,DWORD PTR [rax]
   14000b20b:	add    al,dl
   14000b20d:	jg     0x14000b20f
   14000b20f:	add    BYTE PTR [rsi+0x63],ah
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	test   BYTE PTR [rbx+0x0],ah
   14000b217:	add    BYTE PTR [rax-0x6fffff81],bh
   14000b21d:	movsxd eax,DWORD PTR [rax]
   14000b21f:	add    BYTE PTR [rax-0x47ffff9d],dh
   14000b225:	jg     0x14000b227
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    DWORD PTR [rax],eax
   14000c00e:	add    al,0x0
   14000c010:	or     BYTE PTR [rdx],al
   14000c012:	add    BYTE PTR [rax-0x7fffffc8],al
   14000c018:	add    eax,DWORD PTR [rax]
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	push   rax
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	or     BYTE PTR [rsi],0x0
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	js     0x14000c026
   14000c026:	add    BYTE PTR [rax+0x10],al
   14000c02c:	cwde   
   14000c02d:	add    BYTE PTR [rax],al
   14000c02f:	sbb    BYTE PTR [rax],0x0
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	mov    al,0x0
   14000c036:	add    BYTE PTR [rax+0x0],al
	...
   14000c044:	add    BYTE PTR [rax],al
   14000c046:	add    DWORD PTR [rax],eax
   14000c048:	add    DWORD PTR [rax],eax
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	enter  0x0,0x80
	...
   14000c05c:	add    BYTE PTR [rax],al
   14000c05e:	add    eax,DWORD PTR [rax]
   14000c060:	add    DWORD PTR [rax],eax
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	loopne 0x14000c066
   14000c066:	add    BYTE PTR [rax+0x2],al
   14000c06c:	clc    
   14000c06d:	add    BYTE PTR [rax],al
   14000c06f:	add    BYTE PTR [rbx],0x0
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	adc    BYTE PTR [rcx],al
   14000c076:	add    BYTE PTR [rax+0x0],al
	...
   14000c084:	add    BYTE PTR [rax],al
   14000c086:	add    al,BYTE PTR [rax]
   14000c088:	add    DWORD PTR [rax],eax
   14000c08a:	add    BYTE PTR [rax],al
   14000c08c:	sub    BYTE PTR [rcx],al
   14000c08e:	add    BYTE PTR [rax+0x74],al
   14000c094:	rex add DWORD PTR [rax],eax
   14000c097:	add    BYTE PTR [rax],0x0
	...
   14000c0a6:	add    DWORD PTR [rax],eax
   14000c0a8:	add    DWORD PTR [rax],eax
   14000c0aa:	add    BYTE PTR [rax],al
   14000c0ac:	pop    rax
   14000c0ad:	add    DWORD PTR [rax],eax
   14000c0af:	add    BYTE PTR [rax],0x0
	...
   14000c0be:	add    DWORD PTR [rax],eax
   14000c0c0:	add    DWORD PTR [rax],eax
   14000c0c2:	add    BYTE PTR [rax],al
   14000c0c4:	jo     0x14000c0c7
   14000c0c6:	add    BYTE PTR [rax+0x0],al
	...
   14000c0d4:	add    BYTE PTR [rax],al
   14000c0d6:	add    DWORD PTR [rax],eax
   14000c0d8:	or     DWORD PTR [rax+rax*1],eax
   14000c0db:	add    BYTE PTR [rax+0x1],cl
	...
   14000c0ed:	add    BYTE PTR [rcx],al
   14000c0ef:	add    BYTE PTR [rcx],cl
   14000c0f1:	add    al,0x0
   14000c0f3:	add    BYTE PTR [rax+0x1],bl
	...
   14000c105:	add    BYTE PTR [rcx],al
   14000c107:	add    BYTE PTR [rcx],cl
   14000c109:	add    al,0x0
   14000c10b:	add    BYTE PTR [rax+0x1],ch
	...
   14000c11d:	add    BYTE PTR [rcx],al
   14000c11f:	add    BYTE PTR [rcx],cl
   14000c121:	add    al,0x0
   14000c123:	add    BYTE PTR [rax+0x1],bh
	...
   14000c135:	add    BYTE PTR [rcx],al
   14000c137:	add    BYTE PTR [rcx],cl
   14000c139:	add    al,0x0
   14000c13b:	add    al,cl
   14000c13d:	add    DWORD PTR [rax],eax
	...
   14000c14b:	add    BYTE PTR [rax],al
   14000c14d:	add    BYTE PTR [rcx],al
   14000c14f:	add    BYTE PTR [rcx],cl
   14000c151:	add    al,0x0
   14000c153:	add    al,bl
   14000c155:	add    DWORD PTR [rax],eax
	...
   14000c163:	add    BYTE PTR [rax],al
   14000c165:	add    BYTE PTR [rcx],al
   14000c167:	add    BYTE PTR [rcx],cl
   14000c169:	add    al,0x0
   14000c16b:	add    al,ch
   14000c16d:	add    DWORD PTR [rax],eax
	...
   14000c17b:	add    BYTE PTR [rax],al
   14000c17d:	add    BYTE PTR [rcx],al
   14000c17f:	add    BYTE PTR [rcx],cl
   14000c181:	add    al,0x0
   14000c183:	add    al,bh
   14000c185:	add    DWORD PTR [rax],eax
   14000c187:	add    BYTE PTR [rax-0x17ffff30],bh
	...
   14000c195:	add    BYTE PTR [rax],al
   14000c197:	add    BYTE PTR [rax-0x17ffff37],al
   14000c19d:	add    al,BYTE PTR [rax]
	...
   14000c1a7:	add    BYTE PTR [rax-0x34],ch
   14000c1aa:	add    BYTE PTR [rax],al
   14000c1ac:	sub    BYTE PTR [rcx],al
	...
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	mov    eax,0xe80000cd
   14000c1bd:	add    al,BYTE PTR [rax]
	...
   14000c1c7:	add    BYTE PTR [rax+0x220000cd],dl
	...
   14000c1d5:	add    BYTE PTR [rax],al
   14000c1d7:	add    BYTE PTR [rax+0x140000d0],ah
	...
   14000c1e5:	add    BYTE PTR [rax],al
   14000c1e7:	add    al,bl
   14000c1e9:	(bad)
   14000c1ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c1ed:	add    eax,DWORD PTR [rax]
	...
   14000c1f7:	add    BYTE PTR [rax],dl
   14000c1f9:	ret    0x0
   14000c1fc:	ret    0x3
	...
   14000c207:	add    BYTE PTR [rbx],al
   14000c209:	add    BYTE PTR [rbp+0x0],cl
   14000c20c:	push   rbp
   14000c20d:	add    BYTE PTR [rcx+0x0],cl
   14000c210:	cmp    al,0x3f
   14000c212:	js     0x14000c281
   14000c214:	ins    BYTE PTR es:[rdi],dx
   14000c215:	and    BYTE PTR [rsi+0x65],dh
   14000c218:	jb     0x14000c28d
   14000c21a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c221:	xor    BYTE PTR [rdx],ah
   14000c223:	and    BYTE PTR [rbp+0x6e],ah
   14000c226:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c229:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000c230:	rex.RX sub eax,0x73202238
   14000c236:	je     0x14000c299
   14000c238:	outs   dx,BYTE PTR ds:[rsi]
   14000c239:	fs (bad) 
   14000c23b:	ins    BYTE PTR es:[rdi],dx
   14000c23c:	outs   dx,DWORD PTR ds:[rsi]
   14000c23d:	outs   dx,BYTE PTR ds:[rsi]
   14000c23e:	gs cmp eax,0x73657922
   14000c244:	and    bh,BYTE PTR [rdi]
   14000c246:	ds or  eax,0x2d213c0a
   14000c24c:	sub    eax,0x706f4320
   14000c251:	jns    0x14000c2c5
   14000c253:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000c25a:	sub    DWORD PTR [rax],esp
   14000c25c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c264:	je     0x14000c286
   14000c266:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c268:	jb     0x14000c2da
   14000c26a:	outs   dx,DWORD PTR ds:[rsi]
   14000c26b:	jb     0x14000c2ce
   14000c26d:	je     0x14000c2d8
   14000c26f:	outs   dx,DWORD PTR ds:[rsi]
   14000c270:	outs   dx,BYTE PTR ds:[rsi]
   14000c271:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e00a4
   14000c277:	cmp    al,0x61
   14000c279:	jae    0x14000c2ee
   14000c27b:	gs ins DWORD PTR es:[rdi],dx
   14000c27d:	(bad)  
   14000c27e:	ins    BYTE PTR es:[rdi],dx
   14000c27f:	jns    0x14000c2a1
   14000c281:	js     0x14000c2f0
   14000c283:	ins    BYTE PTR es:[rdi],dx
   14000c284:	outs   dx,BYTE PTR ds:[rsi]
   14000c285:	jae    0x14000c2c4
   14000c287:	and    dh,BYTE PTR [rbp+0x72]
   14000c28a:	outs   dx,BYTE PTR ds:[rsi]
   14000c28b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c28e:	push   0x73616d65
   14000c293:	sub    eax,0x7263696d
   14000c298:	outs   dx,DWORD PTR ds:[rsi]
   14000c299:	jae    0x14000c30a
   14000c29b:	data16 je 0x14000c2cb
   14000c29e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c2a1:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c2a4:	ins    DWORD PTR es:[rdi],dx
   14000c2a5:	cs jbe 0x14000c2d9
   14000c2a8:	and    ah,BYTE PTR [rax]
   14000c2aa:	ins    DWORD PTR es:[rdi],dx
   14000c2ab:	(bad)  
   14000c2ac:	outs   dx,BYTE PTR ds:[rsi]
   14000c2ad:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c2b4:	jb     0x14000c329
   14000c2b6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c2bd:	xor    BYTE PTR [rdx],ah
   14000c2bf:	ds or  eax,0x2020200a
   14000c2c5:	and    BYTE PTR [rcx+riz*2],bh
   14000c2c8:	jae    0x14000c33d
   14000c2ca:	gs ins DWORD PTR es:[rdi],dx
   14000c2cc:	(bad)  
   14000c2cd:	ins    BYTE PTR es:[rdi],dx
   14000c2ce:	jns    0x14000c319
   14000c2d0:	fs outs dx,BYTE PTR gs:[rsi]
   14000c2d3:	je     0x14000c33e
   14000c2d5:	je     0x14000c350
   14000c2d7:	and    BYTE PTR [rsi+0x61],ch
   14000c2da:	ins    DWORD PTR es:[rdi],dx
   14000c2db:	gs cmp eax,0x63694d22
   14000c2e1:	jb     0x14000c352
   14000c2e3:	jae    0x14000c354
   14000c2e5:	data16 je 0x14000c316
   14000c2e8:	push   rdi
   14000c2e9:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c2f0:	rex.WRX
   14000c2f1:	gs je  0x14000c36b
   14000c2f4:	outs   dx,DWORD PTR ds:[rsi]
   14000c2f5:	jb     0x14000c362
   14000c2f7:	imul   ebp,DWORD PTR [rsi+0x67],0x6169442e
   14000c2fe:	ins    BYTE PTR es:[rdi],dx
   14000c2ff:	gs jb  0x14000c324
   14000c302:	and    BYTE PTR [rax+0x72],dh
   14000c305:	outs   dx,DWORD PTR ds:[rsi]
   14000c306:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c309:	jae    0x14000c37a
   14000c30b:	jb     0x14000c34e
   14000c30d:	jb     0x14000c372
   14000c30f:	push   0x63657469
   14000c314:	je     0x14000c38b
   14000c316:	jb     0x14000c37d
   14000c318:	cmp    eax,0x646d6122
   14000c31d:	ss xor al,0x22
   14000c320:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c324:	gs cmp eax,0x6e697722
   14000c32a:	xor    esi,DWORD PTR [rdx]
   14000c32c:	and    ah,BYTE PTR [rax]
   14000c32e:	jbe    0x14000c395
   14000c330:	jb     0x14000c3a5
   14000c332:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c339:	xor    BYTE PTR [rsi],ch
   14000c33b:	xor    BYTE PTR [rsi],ch
   14000c33d:	xor    BYTE PTR [rdx],ah
   14000c33f:	(bad)  
   14000c340:	ds or  eax,0x2020200a
   14000c346:	and    BYTE PTR [rsp+riz*2],bh
   14000c349:	gs jae 0x14000c3af
   14000c34c:	jb     0x14000c3b7
   14000c34e:	jo     0x14000c3c4
   14000c350:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f68503e
   14000c357:	outs   dx,BYTE PTR ds:[rsi]
   14000c358:	and    BYTE PTR gs:[rcx+rbp*2+0x61],al
   14000c35d:	ins    BYTE PTR es:[rdi],dx
   14000c35e:	gs jb  0x14000c39d
   14000c361:	(bad)  
   14000c362:	fs gs jae 0x14000c3c9
   14000c366:	jb     0x14000c3d1
   14000c368:	jo     0x14000c3de
   14000c36a:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   14000c371:	and    BYTE PTR [rax],ah
   14000c373:	and    BYTE PTR [rsp+riz*2],bh
   14000c376:	gs jo  0x14000c3de
   14000c379:	outs   dx,BYTE PTR ds:[rsi]
   14000c37a:	fs outs dx,BYTE PTR gs:[rsi]
   14000c37d:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000c380:	or     eax,0x2020200a
   14000c385:	and    BYTE PTR [rax],ah
   14000c387:	and    BYTE PTR [rax],ah
   14000c389:	and    BYTE PTR [rsp+riz*2],bh
   14000c38c:	gs jo  0x14000c3f4
   14000c38f:	outs   dx,BYTE PTR ds:[rsi]
   14000c390:	fs outs dx,BYTE PTR gs:[rsi]
   14000c393:	je     0x14000c3d6
   14000c395:	jae    0x14000c40a
   14000c397:	gs ins DWORD PTR es:[rdi],dx
   14000c399:	(bad)  
   14000c39a:	ins    BYTE PTR es:[rdi],dx
   14000c39b:	jns    0x14000c3db
   14000c39d:	or     eax,0x2020200a
   14000c3a2:	and    BYTE PTR [rax],ah
   14000c3a4:	and    BYTE PTR [rax],ah
   14000c3a6:	and    BYTE PTR [rcx+riz*2],bh
   14000c3a9:	jae    0x14000c41e
   14000c3ab:	gs ins DWORD PTR es:[rdi],dx
   14000c3ad:	(bad)  
   14000c3ae:	ins    BYTE PTR es:[rdi],dx
   14000c3af:	jns    0x14000c3fa
   14000c3b1:	fs outs dx,BYTE PTR gs:[rsi]
   14000c3b4:	je     0x14000c41f
   14000c3b6:	je     0x14000c431
   14000c3b8:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c3bc:	gs cmp eax,0x6e697722
   14000c3c2:	xor    esi,DWORD PTR [rdx]
   14000c3c4:	and    ah,BYTE PTR [rax]
   14000c3c6:	outs   dx,BYTE PTR ds:[rsi]
   14000c3c7:	(bad)  
   14000c3c8:	ins    DWORD PTR es:[rdi],dx
   14000c3c9:	gs cmp eax,0x63694d22
   14000c3cf:	jb     0x14000c440
   14000c3d1:	jae    0x14000c442
   14000c3d3:	data16 je 0x14000c404
   14000c3d6:	push   rdi
   14000c3d7:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c3de:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c3e0:	ins    DWORD PTR es:[rdi],dx
   14000c3e1:	ins    DWORD PTR es:[rdi],dx
   14000c3e2:	outs   dx,DWORD PTR ds:[rsi]
   14000c3e3:	outs   dx,BYTE PTR ds:[rsi]
   14000c3e4:	sub    eax,0x746e6f43
   14000c3e9:	jb     0x14000c45a
   14000c3eb:	ins    BYTE PTR es:[rdi],dx
   14000c3ec:	jae    0x14000c410
   14000c3ee:	and    BYTE PTR [rsi+0x65],dh
   14000c3f1:	jb     0x14000c466
   14000c3f3:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14000c3fa:	xor    BYTE PTR [rsi],ch
   14000c3fc:	xor    BYTE PTR [rsi],ch
   14000c3fe:	xor    BYTE PTR [rdx],ah
   14000c400:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000c404:	addr32 jne 0x14000c468
   14000c407:	addr32 gs cmp eax,0x20222a22
   14000c40e:	jo     0x14000c482
   14000c410:	outs   dx,DWORD PTR ds:[rsi]
   14000c411:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c414:	jae    0x14000c485
   14000c416:	jb     0x14000c459
   14000c418:	jb     0x14000c47d
   14000c41a:	push   0x63657469
   14000c41f:	je     0x14000c496
   14000c421:	jb     0x14000c488
   14000c423:	cmp    eax,0x20222a22
   14000c428:	jo     0x14000c49f
   14000c42a:	(bad)  
   14000c42b:	ins    BYTE PTR es:[rdi],dx
   14000c42c:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000c433:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000c437:	and    dh,BYTE PTR [rsi]
   14000c439:	xor    eax,0x36623539
   14000c43e:	xor    al,0x31
   14000c440:	xor    al,0x34
   14000c442:	movsxd esp,DWORD PTR [rbx+0x66]
   14000c445:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000c449:	(bad)  
   14000c44a:	ds or  eax,0x2020200a
   14000c450:	and    BYTE PTR [rax],ah
   14000c452:	and    BYTE PTR [rax],ah
   14000c454:	and    BYTE PTR [rdi+rbp*1],bh
   14000c457:	fs gs jo 0x14000c4c0
   14000c45b:	outs   dx,BYTE PTR ds:[rsi]
   14000c45c:	fs outs dx,BYTE PTR gs:[rsi]
   14000c45f:	je     0x14000c4a2
   14000c461:	jae    0x14000c4d6
   14000c463:	gs ins DWORD PTR es:[rdi],dx
   14000c465:	(bad)  
   14000c466:	ins    BYTE PTR es:[rdi],dx
   14000c467:	jns    0x14000c4a7
   14000c469:	or     eax,0x2020200a
   14000c46e:	and    BYTE PTR [rdi+rbp*1],bh
   14000c471:	fs gs jo 0x14000c4da
   14000c475:	outs   dx,BYTE PTR ds:[rsi]
   14000c476:	fs outs dx,BYTE PTR gs:[rsi]
   14000c479:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000c47c:	or     eax,0x2020200a
   14000c481:	and    BYTE PTR [rsp+rsi*2],bh
   14000c484:	jb     0x14000c4fb
   14000c486:	jae    0x14000c4fc
   14000c488:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c48a:	outs   dx,WORD PTR ds:[rsi]
   14000c48c:	and    BYTE PTR [rax+0x6d],bh
   14000c48f:	ins    BYTE PTR es:[rdi],dx
   14000c490:	outs   dx,BYTE PTR ds:[rsi]
   14000c491:	jae    0x14000c4d0
   14000c493:	and    dh,BYTE PTR [rbp+0x72]
   14000c496:	outs   dx,BYTE PTR ds:[rsi]
   14000c497:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c49a:	push   0x73616d65
   14000c49f:	sub    eax,0x7263696d
   14000c4a4:	outs   dx,DWORD PTR ds:[rsi]
   14000c4a5:	jae    0x14000c516
   14000c4a7:	data16 je 0x14000c4d7
   14000c4aa:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c4ad:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c4b0:	ins    DWORD PTR es:[rdi],dx
   14000c4b1:	cs jbe 0x14000c4e7
   14000c4b4:	and    bh,BYTE PTR [rsi]
   14000c4b6:	or     eax,0x2020200a
   14000c4bb:	and    BYTE PTR [rax],ah
   14000c4bd:	and    BYTE PTR [rax],ah
   14000c4bf:	and    BYTE PTR [rbx+rsi*2],bh
   14000c4c2:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c4c6:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c4ce:	and    BYTE PTR [rax],ah
   14000c4d0:	and    BYTE PTR [rax],ah
   14000c4d2:	and    BYTE PTR [rax],ah
   14000c4d4:	and    BYTE PTR [rax],ah
   14000c4d6:	and    BYTE PTR [rax],ah
   14000c4d8:	cmp    al,0x72
   14000c4da:	gs jno 0x14000c552
   14000c4dd:	gs jae 0x14000c554
   14000c4e0:	gs fs push rax
   14000c4e3:	jb     0x14000c54e
   14000c4e5:	jbe    0x14000c550
   14000c4e7:	ins    BYTE PTR es:[rdi],dx
   14000c4e8:	gs addr32 gs jae 0x14000c52b
   14000c4ed:	or     eax,0x2020200a
   14000c4f2:	and    BYTE PTR [rax],ah
   14000c4f4:	and    BYTE PTR [rax],ah
   14000c4f6:	and    BYTE PTR [rax],ah
   14000c4f8:	and    BYTE PTR [rax],ah
   14000c4fa:	and    BYTE PTR [rax],ah
   14000c4fc:	and    BYTE PTR [rax],ah
   14000c4fe:	and    BYTE PTR [rdx+rsi*2],bh
   14000c501:	gs jno 0x14000c579
   14000c504:	gs jae 0x14000c57b
   14000c507:	gs fs rex.RB js 0x14000c571
   14000c50c:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c50f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c516:	ins    BYTE PTR es:[rdi],dx
   14000c517:	or     eax,0x2020200a
   14000c51c:	and    BYTE PTR [rax],ah
   14000c51e:	and    BYTE PTR [rax],ah
   14000c520:	and    BYTE PTR [rax],ah
   14000c522:	and    BYTE PTR [rax],ah
   14000c524:	and    BYTE PTR [rax],ah
   14000c526:	and    BYTE PTR [rax],ah
   14000c528:	and    BYTE PTR [rax],ah
   14000c52a:	and    BYTE PTR [rax],ah
   14000c52c:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000c530:	gs ins BYTE PTR es:[rdi],dx
   14000c532:	cmp    eax,0x49736122
   14000c537:	outs   dx,BYTE PTR ds:[rsi]
   14000c538:	jbe    0x14000c5a9
   14000c53a:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c53e:	or     eax,0x2020200a
   14000c543:	and    BYTE PTR [rax],ah
   14000c545:	and    BYTE PTR [rax],ah
   14000c547:	and    BYTE PTR [rax],ah
   14000c549:	and    BYTE PTR [rax],ah
   14000c54b:	and    BYTE PTR [rax],ah
   14000c54d:	and    BYTE PTR [rax],ah
   14000c54f:	and    BYTE PTR [rax],ah
   14000c551:	and    BYTE PTR [rax],ah
   14000c553:	and    BYTE PTR [rbp+0x69],dh
   14000c556:	movsxd esp,DWORD PTR [r11+0x65]
   14000c55a:	jae    0x14000c5cf
   14000c55c:	cmp    eax,0x6c616622
   14000c561:	jae    0x14000c5c8
   14000c563:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020e573
   14000c569:	and    BYTE PTR [rax],ah
   14000c56b:	and    BYTE PTR [rax],ah
   14000c56d:	and    BYTE PTR [rax],ah
   14000c56f:	and    BYTE PTR [rax],ah
   14000c571:	and    BYTE PTR [rax],ah
   14000c573:	and    BYTE PTR [rax],ah
   14000c575:	and    BYTE PTR [rdi],ch
   14000c577:	ds or  eax,0x2020200a
   14000c57d:	and    BYTE PTR [rax],ah
   14000c57f:	and    BYTE PTR [rax],ah
   14000c581:	and    BYTE PTR [rax],ah
   14000c583:	and    BYTE PTR [rax],ah
   14000c585:	and    BYTE PTR [rdi+rbp*1],bh
   14000c588:	jb     0x14000c5ef
   14000c58a:	jno    0x14000c601
   14000c58c:	gs jae 0x14000c603
   14000c58f:	gs fs push rax
   14000c592:	jb     0x14000c5fd
   14000c594:	jbe    0x14000c5ff
   14000c596:	ins    BYTE PTR es:[rdi],dx
   14000c597:	gs addr32 gs jae 0x14000c5da
   14000c59c:	or     eax,0x2020200a
   14000c5a1:	and    BYTE PTR [rax],ah
   14000c5a3:	and    BYTE PTR [rax],ah
   14000c5a5:	and    BYTE PTR [rdi+rbp*1],bh
   14000c5a8:	jae    0x14000c60f
   14000c5aa:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c5ad:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c5b5:	and    BYTE PTR [rax],ah
   14000c5b7:	cmp    al,0x2f
   14000c5b9:	je     0x14000c62d
   14000c5bb:	jne    0x14000c630
   14000c5bd:	je     0x14000c608
   14000c5bf:	outs   dx,BYTE PTR ds:[rsi]
   14000c5c0:	outs   dx,WORD PTR ds:[rsi]
   14000c5c2:	ds or  eax,0x612f3c0a
   14000c5c8:	jae    0x14000c63d
   14000c5ca:	gs ins DWORD PTR es:[rdi],dx
   14000c5cc:	(bad)  
   14000c5cd:	ins    BYTE PTR es:[rdi],dx
   14000c5ce:	jns    0x14000c60e
   14000c5d0:	or     eax,0xa
   14000c5d5:	add    BYTE PTR [rax],al
   14000c5d7:	add    BYTE PTR [rbx+rax*1+0x34],ah
   14000c5de:	push   rsi
   14000c5df:	add    BYTE PTR [rbx+0x0],dl
   14000c5e2:	pop    rdi
   14000c5e3:	add    BYTE PTR [rsi+0x0],dl
   14000c5e6:	add    BYTE PTR [r10+0x0],r10b
   14000c5ea:	push   rbx
   14000c5eb:	add    BYTE PTR [rcx+0x0],cl
   14000c5ee:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c5f2:	pop    rdi
   14000c5f3:	add    BYTE PTR [rcx+0x0],cl
   14000c5f6:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c5fa:	rex.WRXB add BYTE PTR [r8],r8b
   14000c5fd:	add    BYTE PTR [rax],al
   14000c5ff:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c605:	add    BYTE PTR [rcx],al
   14000c607:	add    BYTE PTR [rax],al
   14000c609:	add    BYTE PTR [rdx],cl
   14000c60b:	add    BYTE PTR [rax],al
   14000c60d:	add    BYTE PTR [rax],bpl
   14000c610:	add    BYTE PTR [rax],al
   14000c612:	or     al,BYTE PTR [rax]
   14000c614:	add    BYTE PTR [rax+0x0],al
   14000c617:	sub    BYTE PTR [rdi],bh
   14000c619:	add    BYTE PTR [rax],al
   14000c61b:	add    BYTE PTR [rax],al
   14000c61d:	add    BYTE PTR [rax],al
   14000c61f:	add    BYTE PTR [rax+rax*1],al
   14000c622:	add    al,0x0
   14000c624:	add    DWORD PTR [rax],eax
	...
   14000c632:	add    BYTE PTR [rax],al
   14000c634:	add    al,BYTE PTR [rbx]
   14000c636:	add    BYTE PTR [rax],al
   14000c638:	add    DWORD PTR [rax],eax
   14000c63a:	push   rbx
   14000c63b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000c63f:	add    BYTE PTR [rcx+0x0],ch
   14000c642:	outs   dx,BYTE PTR ds:[rsi]
   14000c643:	add    BYTE PTR [rdi+0x0],ah
   14000c646:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c64a:	ins    BYTE PTR es:[rdi],dx
   14000c64b:	add    BYTE PTR [rbp+0x0],ah
   14000c64e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c652:	data16 add BYTE PTR [rdi+0x0],ch
   14000c656:	add    BYTE PTR [rax],al
   14000c658:	fiadd  WORD PTR [rdx]
   14000c65a:	add    BYTE PTR [rax],al
   14000c65c:	add    DWORD PTR [rax],eax
   14000c65e:	xor    BYTE PTR [rax],al
   14000c660:	xor    al,0x0
   14000c662:	xor    BYTE PTR [rax],al
   14000c664:	cmp    DWORD PTR [rax],eax
   14000c666:	xor    BYTE PTR [rax],al
   14000c668:	xor    al,0x0
   14000c66a:	rex.X add BYTE PTR [rax],sil
   14000c66d:	add    BYTE PTR [rax],al
   14000c66f:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c673:	add    BYTE PTR [rcx],al
   14000c675:	add    BYTE PTR [rbx+0x0],al
   14000c678:	outs   dx,DWORD PTR ds:[rsi]
   14000c679:	add    BYTE PTR [rbp+0x0],ch
   14000c67c:	jo     0x14000c67e
   14000c67e:	(bad)  
   14000c67f:	add    BYTE PTR [rsi+0x0],ch
   14000c682:	jns    0x14000c684
   14000c684:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c688:	ins    DWORD PTR es:[rdi],dx
   14000c689:	add    BYTE PTR [rbp+0x0],ah
   14000c68c:	add    BYTE PTR [rax],al
   14000c68e:	add    BYTE PTR [rax],al
   14000c690:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c694:	movsxd eax,DWORD PTR [rax]
   14000c696:	jb     0x14000c698
   14000c698:	outs   dx,DWORD PTR ds:[rsi]
   14000c699:	add    BYTE PTR [rbx+0x0],dh
   14000c69c:	outs   dx,DWORD PTR ds:[rsi]
   14000c69d:	add    BYTE PTR [rsi+0x0],ah
   14000c6a0:	je     0x14000c6a2
   14000c6a2:	and    BYTE PTR [rax],al
   14000c6a4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c6a8:	jb     0x14000c6aa
   14000c6aa:	jo     0x14000c6ac
   14000c6ac:	outs   dx,DWORD PTR ds:[rsi]
   14000c6ad:	add    BYTE PTR [rdx+0x0],dh
   14000c6b0:	(bad)  
   14000c6b1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c6b5:	add    BYTE PTR [rdi+0x0],ch
   14000c6b8:	outs   dx,BYTE PTR ds:[rsi]
   14000c6b9:	add    BYTE PTR [rax],al
   14000c6bb:	add    BYTE PTR [rsi+0x0],ah
   14000c6be:	(bad)  
   14000c6bf:	add    BYTE PTR [rcx],al
   14000c6c1:	add    BYTE PTR [rsi+0x0],al
   14000c6c4:	imul   eax,DWORD PTR [rax],0x65006c
   14000c6ca:	add    BYTE PTR [rbp+0x0],r12b
   14000c6ce:	jae    0x14000c6d0
   14000c6d0:	movsxd eax,DWORD PTR [rax]
   14000c6d2:	jb     0x14000c6d4
   14000c6d4:	imul   eax,DWORD PTR [rax],0x740070
   14000c6da:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c6e0:	add    BYTE PTR [rax],al
   14000c6e2:	add    BYTE PTR [rax],al
   14000c6e4:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c6e8:	movsxd eax,DWORD PTR [rax]
   14000c6ea:	jb     0x14000c6ec
   14000c6ec:	outs   dx,DWORD PTR ds:[rsi]
   14000c6ed:	add    BYTE PTR [rbx+0x0],dh
   14000c6f0:	outs   dx,DWORD PTR ds:[rsi]
   14000c6f1:	add    BYTE PTR [rsi+0x0],ah
   14000c6f4:	je     0x14000c6f6
   14000c6f6:	and    BYTE PTR [rax],al
   14000c6f8:	push   rdi
   14000c6f9:	add    BYTE PTR [rcx+0x0],ch
   14000c6fc:	outs   dx,BYTE PTR ds:[rsi]
   14000c6fd:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000c701:	add    BYTE PTR [rdi+0x0],dh
   14000c704:	jae    0x14000c706
   14000c706:	and    BYTE PTR [rax],al
   14000c708:	push   rax
   14000c709:	add    BYTE PTR [rax+0x0],ch
   14000c70c:	outs   dx,DWORD PTR ds:[rsi]
   14000c70d:	add    BYTE PTR [rsi+0x0],ch
   14000c710:	add    BYTE PTR gs:[rax],ah
   14000c713:	add    BYTE PTR [rax+rax*1+0x69],al
   14000c717:	add    BYTE PTR [rcx+0x0],ah
   14000c71a:	ins    BYTE PTR es:[rdi],dx
   14000c71b:	add    BYTE PTR [rbp+0x0],ah
   14000c71e:	jb     0x14000c720
   14000c720:	add    BYTE PTR [rax],al
   14000c722:	add    BYTE PTR [rax],al
   14000c724:	data16 add BYTE PTR [rbx],ah
   14000c727:	add    BYTE PTR [rcx],al
   14000c729:	add    BYTE PTR [rsi+0x0],al
   14000c72c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c732:	push   rsi
   14000c733:	add    BYTE PTR [rbp+0x0],ah
   14000c736:	jb     0x14000c738
   14000c738:	jae    0x14000c73a
   14000c73a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c740:	add    BYTE PTR [rax],al
   14000c742:	add    BYTE PTR [rax],al
   14000c744:	xor    DWORD PTR [rax],eax
   14000c746:	xor    BYTE PTR [rax],al
   14000c748:	add    BYTE PTR cs:[rax],dh
   14000c74b:	add    BYTE PTR [rsi],ch
   14000c74d:	add    BYTE PTR [rcx],dh
   14000c74f:	add    BYTE PTR [rax],dh
   14000c751:	add    BYTE PTR [rdx],dh
   14000c753:	add    BYTE PTR [rax+rax*1],dh
   14000c756:	xor    BYTE PTR [rax],al
   14000c758:	add    BYTE PTR cs:[rcx],dh
   14000c75b:	add    BYTE PTR [rsi],dh
   14000c75d:	add    BYTE PTR [rbx],dh
   14000c75f:	add    BYTE PTR [rax],bh
   14000c761:	add    BYTE PTR [rax+rax*1],dh
   14000c764:	and    BYTE PTR [rax],al
   14000c766:	sub    BYTE PTR [rax],al
   14000c768:	je     0x14000c76a
   14000c76a:	push   0x2e003100
   14000c76f:	add    BYTE PTR [rcx],dh
   14000c771:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f777
   14000c777:	add    BYTE PTR [rax],dh
   14000c779:	add    BYTE PTR [rcx],bh
   14000c77b:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f881
   14000c781:	add    BYTE PTR [rax],dh
   14000c783:	add    BYTE PTR [rax],dh
   14000c785:	add    BYTE PTR [rcx],ch
   14000c787:	add    BYTE PTR [rax],al
   14000c789:	add    BYTE PTR [rax],al
   14000c78b:	add    BYTE PTR [rsi],dh
   14000c78d:	add    BYTE PTR [rbx],cl
   14000c78f:	add    BYTE PTR [rcx],al
   14000c791:	add    BYTE PTR [rcx+0x0],cl
   14000c794:	outs   dx,BYTE PTR ds:[rsi]
   14000c795:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c799:	add    BYTE PTR [rdx+0x0],dh
   14000c79c:	outs   dx,BYTE PTR ds:[rsi]
   14000c79d:	add    BYTE PTR [rcx+0x0],ah
   14000c7a0:	ins    BYTE PTR es:[rdi],dx
   14000c7a1:	add    BYTE PTR [rsi+0x0],cl
   14000c7a4:	(bad)  
   14000c7a5:	add    BYTE PTR [rbp+0x0],ch
   14000c7a8:	add    BYTE PTR gs:[rax],al
   14000c7ab:	add    BYTE PTR [rax+rax*1+0x49],al
   14000c7af:	add    BYTE PTR [rcx+0x0],al
   14000c7b2:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14000c7b6:	push   rdx
   14000c7b7:	add    BYTE PTR [rsi],ch
   14000c7b9:	add    BYTE PTR [rbp+0x0],al
   14000c7bc:	pop    rax
   14000c7bd:	add    BYTE PTR [rbp+0x0],al
   14000c7c0:	add    BYTE PTR [rax],al
   14000c7c2:	add    BYTE PTR [rax],al
   14000c7c4:	add    BYTE PTR [rax],0x2e
   14000c7c7:	add    BYTE PTR [rcx],al
   14000c7c9:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c7cd:	add    BYTE PTR [rdi+0x0],ah
   14000c7d0:	(bad)  
   14000c7d1:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c7d5:	add    BYTE PTR [rdi+0x0],ch
   14000c7d8:	jo     0x14000c7da
   14000c7da:	jns    0x14000c7dc
   14000c7dc:	jb     0x14000c7de
   14000c7de:	imul   eax,DWORD PTR [rax],0x680067
   14000c7e4:	je     0x14000c7e6
   14000c7e6:	add    BYTE PTR [rax],al
   14000c7e8:	test   eax,0x4d002000
   14000c7ed:	add    BYTE PTR [rcx+0x0],ch
   14000c7f0:	movsxd eax,DWORD PTR [rax]
   14000c7f2:	jb     0x14000c7f4
   14000c7f4:	outs   dx,DWORD PTR ds:[rsi]
   14000c7f5:	add    BYTE PTR [rbx+0x0],dh
   14000c7f8:	outs   dx,DWORD PTR ds:[rsi]
   14000c7f9:	add    BYTE PTR [rsi+0x0],ah
   14000c7fc:	je     0x14000c7fe
   14000c7fe:	and    BYTE PTR [rax],al
   14000c800:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c804:	jb     0x14000c806
   14000c806:	jo     0x14000c808
   14000c808:	outs   dx,DWORD PTR ds:[rsi]
   14000c809:	add    BYTE PTR [rdx+0x0],dh
   14000c80c:	(bad)  
   14000c80d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c811:	add    BYTE PTR [rdi+0x0],ch
   14000c814:	outs   dx,BYTE PTR ds:[rsi]
   14000c815:	add    BYTE PTR [rsi],ch
   14000c817:	add    BYTE PTR [rax],ah
   14000c819:	add    BYTE PTR [rcx+0x0],al
   14000c81c:	ins    BYTE PTR es:[rdi],dx
   14000c81d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c821:	add    BYTE PTR [rdx+0x0],dh
   14000c824:	imul   eax,DWORD PTR [rax],0x680067
   14000c82a:	je     0x14000c82c
   14000c82c:	jae    0x14000c82e
   14000c82e:	and    BYTE PTR [rax],al
   14000c830:	jb     0x14000c832
   14000c832:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c836:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c83a:	jbe    0x14000c83c
   14000c83c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c841:	add    BYTE PTR [rax],al
   14000c843:	add    BYTE PTR [rsi],bh
   14000c845:	add    BYTE PTR [rbx],cl
   14000c847:	add    BYTE PTR [rcx],al
   14000c849:	add    BYTE PTR [rdi+0x0],cl
   14000c84c:	jb     0x14000c84e
   14000c84e:	imul   eax,DWORD PTR [rax],0x690067
   14000c854:	outs   dx,BYTE PTR ds:[rsi]
   14000c855:	add    BYTE PTR [rcx+0x0],ah
   14000c858:	ins    BYTE PTR es:[rdi],dx
   14000c859:	add    BYTE PTR [rsi+0x0],al
   14000c85c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c862:	outs   dx,BYTE PTR ds:[rsi]
   14000c863:	add    BYTE PTR [rcx+0x0],ah
   14000c866:	ins    DWORD PTR es:[rdi],dx
   14000c867:	add    BYTE PTR [rbp+0x0],ah
   14000c86a:	add    BYTE PTR [rax],al
   14000c86c:	add    BYTE PTR [rcx+0x0],r9b
   14000c870:	add    BYTE PTR [r8+rax*1+0x45],cl
   14000c875:	add    BYTE PTR [rdx+0x0],dl
   14000c878:	add    BYTE PTR cs:[rbp+0x0],al
   14000c87c:	pop    rax
   14000c87d:	add    BYTE PTR [rbp+0x0],al
   14000c880:	add    BYTE PTR [rax],al
   14000c882:	add    BYTE PTR [rax],al
   14000c884:	push   0x0
   14000c886:	and    eax,0x50000100
   14000c88b:	add    BYTE PTR [rdx+0x0],dh
   14000c88e:	outs   dx,DWORD PTR ds:[rsi]
   14000c88f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c893:	add    BYTE PTR [rbx+0x0],ah
   14000c896:	je     0x14000c898
   14000c898:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c89c:	ins    DWORD PTR es:[rdi],dx
   14000c89d:	add    BYTE PTR [rbp+0x0],ah
   14000c8a0:	add    BYTE PTR [rax],al
   14000c8a2:	add    BYTE PTR [rax],al
   14000c8a4:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c8a8:	movsxd eax,DWORD PTR [rax]
   14000c8aa:	jb     0x14000c8ac
   14000c8ac:	outs   dx,DWORD PTR ds:[rsi]
   14000c8ad:	add    BYTE PTR [rbx+0x0],dh
   14000c8b0:	outs   dx,DWORD PTR ds:[rsi]
   14000c8b1:	add    BYTE PTR [rsi+0x0],ah
   14000c8b4:	je     0x14000c8b6
   14000c8b6:	scas   al,BYTE PTR es:[rdi]
   14000c8b7:	add    BYTE PTR [rax],ah
   14000c8b9:	add    BYTE PTR [rdi+0x0],dl
   14000c8bc:	imul   eax,DWORD PTR [rax],0x64006e
   14000c8c2:	outs   dx,DWORD PTR ds:[rsi]
   14000c8c3:	add    BYTE PTR [rdi+0x0],dh
   14000c8c6:	jae    0x14000c8c8
   14000c8c8:	scas   al,BYTE PTR es:[rdi]
   14000c8c9:	add    BYTE PTR [rax],ah
   14000c8cb:	add    BYTE PTR [rdi+0x0],cl
   14000c8ce:	jo     0x14000c8d0
   14000c8d0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c8d4:	(bad)  
   14000c8d5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c8d9:	add    BYTE PTR [rsi+0x0],ch
   14000c8dc:	add    BYTE PTR [eax],ah
   14000c8df:	add    BYTE PTR [rbx+0x0],dl
   14000c8e2:	jns    0x14000c8e4
   14000c8e4:	jae    0x14000c8e6
   14000c8e6:	je     0x14000c8e8
   14000c8e8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c8ec:	add    BYTE PTR [rax],al
   14000c8ee:	add    BYTE PTR [rax],al
   14000c8f0:	rex.RX add BYTE PTR [rcx],r10b
   14000c8f3:	add    BYTE PTR [rcx],al
   14000c8f5:	add    BYTE PTR [rax+0x0],dl
   14000c8f8:	jb     0x14000c8fa
   14000c8fa:	outs   dx,DWORD PTR ds:[rsi]
   14000c8fb:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c8ff:	add    BYTE PTR [rbx+0x0],ah
   14000c902:	je     0x14000c904
   14000c904:	push   rsi
   14000c905:	add    BYTE PTR [rbp+0x0],ah
   14000c908:	jb     0x14000c90a
   14000c90a:	jae    0x14000c90c
   14000c90c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c912:	add    BYTE PTR [rax],al
   14000c914:	xor    DWORD PTR [rax],eax
   14000c916:	xor    BYTE PTR [rax],al
   14000c918:	add    BYTE PTR cs:[rax],dh
   14000c91b:	add    BYTE PTR [rsi],ch
   14000c91d:	add    BYTE PTR [rcx],dh
   14000c91f:	add    BYTE PTR [rax],dh
   14000c921:	add    BYTE PTR [rdx],dh
   14000c923:	add    BYTE PTR [rax+rax*1],dh
   14000c926:	xor    BYTE PTR [rax],al
   14000c928:	add    BYTE PTR cs:[rcx],dh
   14000c92b:	add    BYTE PTR [rsi],dh
   14000c92d:	add    BYTE PTR [rbx],dh
   14000c92f:	add    BYTE PTR [rax],bh
   14000c931:	add    BYTE PTR [rax+rax*1],dh
   14000c934:	add    BYTE PTR [rax],al
   14000c936:	add    BYTE PTR [rax],al
   14000c938:	add    BYTE PTR [rax],r8b
   14000c93b:	add    BYTE PTR [rcx],al
   14000c93d:	add    BYTE PTR [rsi+0x0],dl
   14000c940:	(bad)  
   14000c941:	add    BYTE PTR [rdx+0x0],dh
   14000c944:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c948:	ins    BYTE PTR es:[rdi],dx
   14000c949:	add    BYTE PTR [rbp+0x0],ah
   14000c94c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c950:	data16 add BYTE PTR [rdi+0x0],ch
   14000c954:	add    BYTE PTR [rax],al
   14000c956:	add    BYTE PTR [rax],al
   14000c958:	and    al,0x0
   14000c95a:	add    al,0x0
   14000c95c:	add    BYTE PTR [rax],al
   14000c95e:	push   rsp
   14000c95f:	add    BYTE PTR [rdx+0x0],dh
   14000c962:	(bad)  
   14000c963:	add    BYTE PTR [rsi+0x0],ch
   14000c966:	jae    0x14000c968
   14000c968:	ins    BYTE PTR es:[rdi],dx
   14000c969:	add    BYTE PTR [rcx+0x0],ah
   14000c96c:	je     0x14000c96e
   14000c96e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c974:	add    BYTE PTR [rax],al
   14000c976:	add    BYTE PTR [rax],al
   14000c978:	or     DWORD PTR [rax+rsi*4],eax
   14000c97b:	add    al,0x0
   14000c97d:	add    BYTE PTR [rax],al
   14000c97f:	add    BYTE PTR [rax],ch
   14000c981:	add    BYTE PTR [rax],al
   14000c983:	add    BYTE PTR [rax],ah
   14000c985:	add    BYTE PTR [rax],al
   14000c987:	add    BYTE PTR [rax+0x0],al
   14000c98a:	add    BYTE PTR [rax],al
   14000c98c:	add    DWORD PTR [rax],eax
   14000c98e:	add    al,0x0
   14000c990:	add    BYTE PTR [rax],al
   14000c992:	add    BYTE PTR [rax],al
   14000c994:	add    BYTE PTR [rdx],al
	...
   14000c9ae:	add    BYTE PTR [rax],0x0
   14000c9b1:	add    BYTE PTR [rax],0x0
   14000c9b4:	add    BYTE PTR [rax+0x800080],al
   14000c9ba:	add    BYTE PTR [rax],al
   14000c9bc:	add    BYTE PTR [rax],0x80
   14000c9bf:	add    BYTE PTR [rax-0x3fffff80],al
   14000c9c5:	rol    al,0x0
   14000c9c8:	add    BYTE PTR [rax+0x80],0xff
   14000c9cf:	add    BYTE PTR [rax],al
   14000c9d1:	inc    DWORD PTR [rax]
   14000c9d3:	add    BYTE PTR [rax],al
   14000c9d5:	(bad)  
   14000c9d6:	inc    DWORD PTR [rax]
   14000c9d8:	inc    DWORD PTR [rax]
   14000c9da:	add    BYTE PTR [rax],al
   14000c9dc:	inc    DWORD PTR [rax]
   14000c9de:	inc    DWORD PTR [rax]
   14000c9e0:	(bad)  
   14000c9e1:	inc    DWORD PTR [rax]
   14000c9e3:	add    bh,bh
   14000c9e5:	(bad)  
   14000c9e6:	inc    DWORD PTR [rax]
	...
   14000c9f4:	add    DWORD PTR [rax],eax
	...
   14000ca02:	add    BYTE PTR [rax],al
   14000ca04:	sbb    eax,0x0
	...
   14000ca11:	add    BYTE PTR [rax],al
   14000ca13:	add    ecx,ebx
   14000ca15:	adc    BYTE PTR [rax],al
	...
   14000ca23:	sbb    eax,0x9199
	...
   14000ca30:	add    BYTE PTR [rax],al
   14000ca32:	add    BYTE PTR [rcx],dl
   14000ca34:	fstp   DWORD PTR [rcx+0x10]
	...
   14000ca42:	add    BYTE PTR [rdi+0x1d],bh
   14000ca45:	cdq    
   14000ca46:	xchg   ecx,eax
	...
   14000ca4f:	add    BYTE PTR [rax],al
   14000ca51:	add    BYTE PTR [rdi],al
   14000ca53:	push   rcx
   14000ca55:	fstp   DWORD PTR [rcx+0x10]
   14000ca5b:	add    BYTE PTR [rax],al
   14000ca5d:	add    BYTE PTR [rax],al
   14000ca5f:	add    BYTE PTR [rax],al
   14000ca61:	add    BYTE PTR [rdi-0x1],bh
   14000ca64:	call   FWORD PTR [rip+0x91]        # 0x14000cafb
   14000ca6a:	add    BYTE PTR [rax],al
   14000ca6c:	add    BYTE PTR [rbx-0xf8ffd0],dh
   14000ca72:	(bad)  
   14000ca73:	(bad)  
   14000ca74:	push   QWORD PTR [rcx-0x30]
   14000ca77:	add    BYTE PTR [rax],al
   14000ca79:	add    BYTE PTR [rax],al
   14000ca7b:	add    BYTE PTR [rbx+0x73],bh
   14000ca7e:	xor    eax,DWORD PTR [rdi]
   14000ca80:	(bad)  
   14000ca81:	(bad)  
   14000ca82:	(bad)  
   14000ca83:	(bad)  
   14000ca84:	push   QWORD PTR [rcx+0x10]
   14000ca87:	add    BYTE PTR [rax],al
   14000ca89:	add    BYTE PTR [rax],al
   14000ca8b:	mov    bh,0xb7
   14000ca8d:	mov    bl,0x30
   14000ca8f:	jg     0x14000ca90
   14000ca91:	(bad)  
   14000ca92:	(bad)  
   14000ca93:	push   rdi
   14000ca95:	add    BYTE PTR [rax],al
   14000ca97:	add    BYTE PTR [rax],al
   14000ca99:	add    BYTE PTR [rbx+0x7b],bh
   14000ca9c:	jnp    0x14000ca91
   14000ca9e:	(bad)  
   14000ca9f:	(bad)  
   14000caa0:	(bad)  
   14000caa1:	(bad)  
   14000caa2:	(bad)  
   14000caa3:	push   rdi
   14000caa5:	add    BYTE PTR [rax],al
   14000caa7:	add    BYTE PTR [rax],dh
   14000caa9:	mov    bh,0xb7
   14000caab:	mov    bh,0xff
   14000caad:	lock jg 0x14000caaf
   14000cab0:	(bad)  
   14000cab1:	(bad)  
   14000cab2:	(bad)  
   14000cab3:	push   rdi
   14000cab5:	add    BYTE PTR [rax],al
   14000cab7:	add    BYTE PTR [rdi],dh
   14000cab9:	jnp    0x14000cb36
   14000cabb:	jg     0x14000cabc
   14000cabd:	(bad)  
   14000cabe:	clc    
   14000cabf:	add    BYTE PTR [rdi],cl
   14000cac1:	(bad)  
   14000cac2:	(bad)  
   14000cac3:	push   rdi
   14000cac5:	add    BYTE PTR [rax],al
   14000cac7:	add    BYTE PTR [rdi],dh
   14000cac9:	mov    bh,0xbf
   14000cacb:	push   QWORD PTR [rax-0x70cc7f81]
   14000cad1:	(bad)  
   14000cad2:	(bad)  
   14000cad3:	push   rdi
   14000cad5:	add    BYTE PTR [rax],al
   14000cad7:	add    BYTE PTR [rdi],dh
   14000cad9:	jg     0x14000cada
   14000cadb:	sti    
   14000cadc:	xor    al,bh
   14000cade:	or     esi,DWORD PTR [rbx-0x71]
   14000cae1:	(bad)  
   14000cae2:	(bad)  
   14000cae3:	push   rdi
   14000cae5:	add    eax,DWORD PTR [rax]
   14000cae7:	add    BYTE PTR [rdi],dh
   14000cae9:	(bad)  
   14000caea:	sti    
   14000caeb:	xor    bh,bh
   14000caed:	add    BYTE PTR [rbx-0x7049],bh
   14000caf3:	push   rdi
   14000caf5:	add    eax,DWORD PTR [rax]
   14000caf7:	add    BYTE PTR [rdi],dh
   14000caf9:	sti    
   14000cafa:	xor    bh,bh
   14000cafc:	cmp    esi,DWORD PTR [rax]
   14000cafe:	mov    ebx,0xff8ffb0
   14000cb03:	jo     0x14000cafc
   14000cb05:	add    BYTE PTR [rax],al
   14000cb07:	add    BYTE PTR [rbx],al
   14000cb09:	jnp    0x14000cb0a
   14000cb0b:	cmp    esi,DWORD PTR [rax]
   14000cb0d:	dec    DWORD PTR [rbx-0x87f00f1]
   14000cb13:	pshufw mm6,QWORD PTR [rbx],0x0
   14000cb17:	add    BYTE PTR [rax],al
   14000cb19:	(bad)  
   14000cb1a:	mov    ebx,0x308bff30
   14000cb1f:	(bad)  
   14000cb20:	clc    
   14000cb21:	pshufw mm6,mm7,0x3
   14000cb25:	xor    eax,DWORD PTR [rax]
   14000cb27:	add    BYTE PTR [rax],al
   14000cb29:	add    edi,DWORD PTR [rbx-0x1]
   14000cb2c:	mov    esi,DWORD PTR [rax]
   14000cb2e:	ud0    eax,DWORD PTR [rax-0x8ff009]
   14000cb35:	repz add BYTE PTR [rax],al
   14000cb38:	add    BYTE PTR [rax],al
   14000cb3a:	(bad)  
   14000cb3b:	mov    ebx,0xf8ff8f30
   14000cb40:	or     BYTE PTR [rax-0x40447078],cl
   14000cb46:	add    BYTE PTR [rax],al
   14000cb48:	add    BYTE PTR [rax],al
   14000cb4a:	add    BYTE PTR [rbx-0x1],bh
   14000cb4d:	(bad)  
   14000cb4e:	test   DWORD PTR [rax-0x40fc8cf5],0xb3bb
   14000cb58:	add    BYTE PTR [rax],al
   14000cb5a:	or     ecx,DWORD PTR [rbx]
   14000cb5c:	mov    ebx,0xb0088b8
   14000cb61:	jae    0x14000cb66
   14000cb63:	sti    
   14000cb64:	mov    ebx,0x30
   14000cb69:	add    edi,DWORD PTR [rbx+0x30b7bb30]
   14000cb6f:	xor    ecx,DWORD PTR [rdi]
   14000cb71:	mov    al,0x3f
   14000cb73:	mov    ebx,0xb3
   14000cb78:	add    BYTE PTR [rbx],al
   14000cb7a:	mov    bl,0x33
   14000cb7c:	add    BYTE PTR [rdi+0x3b03b30],dh
   14000cb82:	sti    
   14000cb83:	mov    ebx,0x30
   14000cb88:	add    BYTE PTR [rbx],al
   14000cb8a:	cmp    esi,DWORD PTR [rbx]
   14000cb8c:	xor    BYTE PTR [rdi-0x4444d0],dh
   14000cb92:	mov    ebx,0x33
   14000cb97:	add    BYTE PTR [rax],al
   14000cb99:	add    edi,DWORD PTR [rbx+0xbfb30b3]
   14000cb9f:	mov    ebx,0xb3bbff
   14000cba4:	add    BYTE PTR [rax],al
   14000cba6:	add    BYTE PTR [rax],al
   14000cba8:	add    BYTE PTR [rax],al
   14000cbaa:	cmp    edi,DWORD PTR [rbx-0x40ffcd]
   14000cbb0:	mov    ebx,0x30b3
   14000cbb5:	add    BYTE PTR [rax],al
   14000cbb7:	add    BYTE PTR [rax],al
   14000cbb9:	add    BYTE PTR [rbx],al
   14000cbbb:	mov    ebx,0xbbfbffff
   14000cbc0:	xor    esi,DWORD PTR [rax]
	...
   14000cbca:	add    BYTE PTR [rdi],bh
   14000cbcc:	mov    ebx,0x33b3bb
	...
   14000cbd9:	add    BYTE PTR [rax],al
   14000cbdb:	add    esi,DWORD PTR [rbx]
   14000cbdd:	xor    esi,DWORD PTR [rax]
	...
   14000cbe7:	add    bh,bh
   14000cbe9:	(bad)  
   14000cbea:	(bad)  
   14000cbeb:	mov    edi,0x1fffffff
   14000cbf0:	(bad)  
   14000cbf1:	(bad)  
   14000cbf2:	dec    BYTE PTR [rdi]
   14000cbf4:	(bad)  
   14000cbf5:	(bad)  
   14000cbf6:	cld    
   14000cbf7:	(bad)  
   14000cbf8:	(bad)  
   14000cbf9:	(bad)  
   14000cbfa:	cld    
   14000cbfb:	add    edi,edi
   14000cbfd:	(bad)  
   14000cbfe:	clc    
   14000cbff:	add    edi,edi
   14000cc01:	push   rax
   14000cc03:	add    bh,bh
   14000cc05:	mov    DWORD PTR [rax+0xff01],0xfc03
   14000cc0f:	(bad)  
   14000cc10:	lock add BYTE PTR [rax],al
   14000cc13:	(bad)  
   14000cc14:	rol    BYTE PTR [rax],0x0
   14000cc17:	(bad)  
   14000cc18:	add    BYTE PTR [rax],al
   14000cc1a:	add    BYTE PTR [rdi],bl
   14000cc1c:	add    BYTE PTR [rax],al
   14000cc1e:	add    BYTE PTR [rdi],cl
   14000cc20:	add    BYTE PTR [rax],al
   14000cc22:	add    BYTE PTR [rdi],cl
   14000cc24:	add    BYTE PTR [rax],al
   14000cc26:	add    BYTE PTR [rdi],al
   14000cc28:	add    BYTE PTR [rax],al
   14000cc2a:	add    BYTE PTR [rdi],al
   14000cc2c:	add    BYTE PTR [rax],al
   14000cc2e:	add    BYTE PTR [rdi],al
   14000cc30:	add    BYTE PTR [rax],0x0
   14000cc33:	(bad)  
   14000cc34:	rol    BYTE PTR [rax],0x0
   14000cc37:	(bad)  
   14000cc38:	loopne 0x14000cc3a
   14000cc3a:	add    BYTE PTR [rdi],al
   14000cc3c:	lock add BYTE PTR [rax],al
   14000cc3f:	(bad)  
   14000cc40:	clc    
   14000cc41:	add    BYTE PTR [rax],al
   14000cc43:	(bad)  
   14000cc45:	add    BYTE PTR [rax],al
   14000cc47:	(bad)  
   14000cc48:	loopne 0x14000cc4a
   14000cc4a:	add    BYTE PTR [rdi],bh
   14000cc4c:	loopne 0x14000cc4e
   14000cc4e:	add    BYTE PTR [rdi-0x20],bh
   14000cc51:	add    BYTE PTR [rax],al
   14000cc53:	jmp    rax
   14000cc55:	add    BYTE PTR [rbx],al
   14000cc57:	push   rax
   14000cc59:	add    BYTE PTR [rdi],al
   14000cc5b:	(bad)  
   14000cc5c:	clc    
   14000cc5d:	add    BYTE PTR [rdi],bl
   14000cc5f:	(bad)  
   14000cc60:	cld    
   14000cc61:	add    bh,bh
   14000cc63:	(bad)  
   14000cc64:	inc    BYTE PTR [rdi]
   14000cc66:	(bad)  
   14000cc67:	jmp    FWORD PTR [rax]
   14000cc69:	add    BYTE PTR [rax],al
   14000cc6b:	add    BYTE PTR [rax],dl
   14000cc6d:	add    BYTE PTR [rax],al
   14000cc6f:	add    BYTE PTR [rax],ah
   14000cc71:	add    BYTE PTR [rax],al
   14000cc73:	add    BYTE PTR [rcx],al
   14000cc75:	add    BYTE PTR [rax+rax*1],al
   14000cc78:	add    BYTE PTR [rax],al
   14000cc7a:	add    BYTE PTR [rax],al
   14000cc7c:	add    BYTE PTR [rax],0x0
	...
   14000cc93:	add    BYTE PTR [rax],al
   14000cc95:	add    BYTE PTR [rax+0x800000],al
   14000cc9b:	add    BYTE PTR [rax],al
   14000cc9d:	add    BYTE PTR [rax+0x8000],0x0
   14000cca4:	add    BYTE PTR [rax],0x80
   14000cca7:	add    BYTE PTR [rax-0x3fffff80],al
   14000ccad:	rol    al,0x0
   14000ccb0:	add    BYTE PTR [rax+0x80],0xff
   14000ccb7:	add    BYTE PTR [rax],al
   14000ccb9:	inc    DWORD PTR [rax]
   14000ccbb:	add    BYTE PTR [rax],al
   14000ccbd:	(bad)  
   14000ccbe:	inc    DWORD PTR [rax]
   14000ccc0:	inc    DWORD PTR [rax]
   14000ccc2:	add    BYTE PTR [rax],al
   14000ccc4:	inc    DWORD PTR [rax]
   14000ccc6:	inc    DWORD PTR [rax]
   14000ccc8:	(bad)  
   14000ccc9:	inc    DWORD PTR [rax]
   14000cccb:	add    bh,bh
   14000cccd:	(bad)  
   14000ccce:	inc    DWORD PTR [rax]
   14000ccd0:	add    BYTE PTR [rax],al
   14000ccd2:	add    BYTE PTR [rax],al
   14000ccd4:	add    BYTE PTR [rax],al
   14000ccd6:	adc    BYTE PTR [rax],al
   14000ccd8:	add    BYTE PTR [rax],al
   14000ccda:	add    BYTE PTR [rax],al
   14000ccdc:	add    BYTE PTR [rcx],al
   14000ccde:	fld    DWORD PTR [rax]
   14000cce0:	add    BYTE PTR [rax],al
   14000cce2:	add    BYTE PTR [rax],al
   14000cce4:	add    BYTE PTR [rdi],al
   14000cce6:	sbb    DWORD PTR [rax+0x77070000],edx
   14000ccec:	add    BYTE PTR [rdi-0xf],bh
   14000ccef:	nop
   14000ccf0:	add    BYTE PTR [rdi],al
   14000ccf2:	jnp    0x14000ccf4
   14000ccf4:	jg     0x14000ccf5
   14000ccf6:	not    DWORD PTR [rax]
   14000ccf8:	(bad)  
   14000ccf9:	jnp    0x14000ccab
   14000ccfb:	(bad)  
   14000ccfc:	(bad)  
   14000ccfd:	push   QWORD PTR [rax+0x0]
   14000cd00:	cmp    edi,DWORD PTR [rdi-0xf7f1]
   14000cd06:	jo     0x14000cd38
   14000cd08:	(bad)  
   14000cd09:	sti    
   14000cd0a:	cmp    BYTE PTR [rax+0x70ffff],0x3b
   14000cd11:	jae    0x14000cd86
   14000cd13:	jo     0x14000cd05
   14000cd15:	lock jo 0x14000cd48
   14000cd18:	add    esi,DWORD PTR [rdi+0x70f0f37]
   14000cd1e:	add    esi,DWORD PTR [rax]
   14000cd20:	add    BYTE PTR [rbx],bh
   14000cd22:	jo     0x14000cd14
   14000cd24:	add    BYTE PTR [rax],al
   14000cd26:	mov    ebx,0x8000073
   14000cd2b:	or     BYTE PTR [rax],bh
   14000cd2d:	mov    esi,DWORD PTR [rdi-0x4fc8ffd0]
   14000cd33:	jo     0x14000ccf0
   14000cd35:	mov    bh,0x33
   14000cd37:	add    BYTE PTR [rax],al
   14000cd39:	(bad)  
   14000cd3a:	mov    bh,0x8b
   14000cd3c:	mov    bh,0x33
   14000cd3e:	add    BYTE PTR [rax],al
   14000cd40:	add    BYTE PTR [rbx],al
   14000cd42:	jnp    0x14000ccfb
   14000cd44:	xor    eax,DWORD PTR [rax]
   14000cd46:	add    BYTE PTR [rax],al
   14000cd48:	add    BYTE PTR [rax],al
   14000cd4a:	xor    esi,DWORD PTR [rbx]
   14000cd4c:	add    BYTE PTR [rax],al
   14000cd4e:	add    BYTE PTR [rax],al
   14000cd50:	push   rbx
   14000cd52:	outs   dx,BYTE PTR ds:[rsi]
   14000cd53:	addr32 jmp rcx
   14000cd56:	ret    0xf800
   14000cd59:	shl    BYTE PTR [rdi-0x5cff2000],0x0
   14000cd60:	add    BYTE PTR [rcx],0x6f
   14000cd63:	add    BYTE PTR [rax],al
   14000cd65:	add    DWORD PTR [rax],eax
	...
   14000cd73:	add    BYTE PTR [rax-0x3fff9100],al
   14000cd79:	add    BYTE PTR [rax],al
   14000cd7b:	add    al,ah
   14000cd7d:	add    DWORD PTR [rax],eax
   14000cd7f:	add    al,al
   14000cd81:	add    eax,DWORD PTR [rax]
   14000cd83:	add    al,al
   14000cd85:	cmpps  xmm0,XMMWORD PTR [rax],0xe0
   14000cd89:	(bad)  
   14000cd8a:	imul   ebp,DWORD PTR [rsi-0x10],0x676eff
   14000cd91:	add    BYTE PTR [rcx],al
   14000cd93:	add    BYTE PTR [rdx],al
   14000cd95:	add    BYTE PTR [rax],ah
   14000cd97:	and    BYTE PTR [rax],dl
   14000cd99:	add    BYTE PTR [rcx],al
   14000cd9b:	add    BYTE PTR [rax+rax*1],al
   14000cd9e:	call   0x14100cda5
   14000cda3:	add    BYTE PTR [rax],dl
   14000cda5:	adc    BYTE PTR [rax],dl
   14000cda7:	add    BYTE PTR [rcx],al
   14000cda9:	add    BYTE PTR [rax+rax*1],al
   14000cdac:	sub    BYTE PTR [rcx],al
   14000cdae:	add    BYTE PTR [rax],al
   14000cdb0:	add    al,BYTE PTR [rax]
   14000cdb2:	add    BYTE PTR [rax],al
   14000cdb4:	add    BYTE PTR [rax],al
   14000cdb6:	add    BYTE PTR [rax],al
   14000cdb8:	sub    BYTE PTR [rax],al
   14000cdba:	add    BYTE PTR [rax],al
   14000cdbc:	and    BYTE PTR [rax],al
   14000cdbe:	add    BYTE PTR [rax],al
   14000cdc0:	add    BYTE PTR [rax],al
   14000cdc3:	add    BYTE PTR [rcx],al
   14000cdc5:	add    BYTE PTR [rax+rax*1],al
   14000cdc8:	add    BYTE PTR [rax],al
   14000cdca:	add    BYTE PTR [rax],al
   14000cdcc:	add    BYTE PTR [rdx],al
	...
   14000cde6:	add    BYTE PTR [rax],0x0
   14000cde9:	add    BYTE PTR [rax],0x0
   14000cdec:	add    BYTE PTR [rax+0x800080],al
   14000cdf2:	add    BYTE PTR [rax],al
   14000cdf4:	add    BYTE PTR [rax],0x80
   14000cdf7:	add    BYTE PTR [rax-0x3fffff80],al
   14000cdfd:	rol    al,0x0
   14000ce00:	add    BYTE PTR [rax+0x80],0xff
   14000ce07:	add    BYTE PTR [rax],al
   14000ce09:	inc    DWORD PTR [rax]
   14000ce0b:	add    BYTE PTR [rax],al
   14000ce0d:	(bad)  
   14000ce0e:	inc    DWORD PTR [rax]
   14000ce10:	inc    DWORD PTR [rax]
   14000ce12:	add    BYTE PTR [rax],al
   14000ce14:	inc    DWORD PTR [rax]
   14000ce16:	inc    DWORD PTR [rax]
   14000ce18:	(bad)  
   14000ce19:	inc    DWORD PTR [rax]
   14000ce1b:	add    bh,bh
   14000ce1d:	(bad)  
   14000ce1e:	inc    DWORD PTR [rax]
	...
   14000ce34:	add    BYTE PTR [rax],al
   14000ce36:	add    BYTE PTR [rax+0x0],dh
	...
   14000ce45:	add    BYTE PTR [rax],al
   14000ce47:	lock add BYTE PTR [rax],al
	...
   14000ce56:	add    al,dh
	...
   14000ce64:	add    BYTE PTR [rax],al
   14000ce66:	add    al,dh
	...
   14000ce70:	add    BYTE PTR [rdi],cl
   14000ce72:	(bad)  
   14000ce73:	ud0    edi,edi
   14000ce76:	push   rax
	...
   14000ce84:	add    BYTE PTR [rax],al
   14000ce86:	add    BYTE PTR [rdi],cl
	...
   14000ce90:	add    BYTE PTR [rax],cl
   14000ce92:	js     0x14000cf0c
   14000ce94:	js     0x14000cf0e
   14000ce96:	js     0x14000cf08
   14000ce98:	lock add BYTE PTR [rax],al
   14000ce9b:	add    BYTE PTR [rax],al
   14000ce9d:	add    BYTE PTR [rdi],cl
   14000ce9f:	add    BYTE PTR [rax],al
   14000cea1:	add    BYTE PTR [rax-0x70777778],cl
   14000cea7:	(bad)  
   14000cea8:	sldt   WORD PTR [rax]
   14000ceab:	add    BYTE PTR [rax],al
   14000cead:	add    al,dh
   14000ceaf:	add    BYTE PTR [rax],al
   14000ceb1:	add    BYTE PTR [rax],cl
   14000ceb3:	(bad)
   14000ceb8:	jo     0x14000ceaa
   14000ceba:	add    BYTE PTR [rax],al
   14000cebc:	add    BYTE PTR [rax],al
   14000cebe:	add    al,dh
   14000cec0:	add    BYTE PTR [rax],al
   14000cec2:	add    BYTE PTR [rdi+0x88ff008],cl
   14000cec8:	xchg   DWORD PTR [rdi],ecx
	...
   14000ced2:	add    BYTE PTR [rax],cl
   14000ced4:	(bad)
   14000ced9:	jo     0x14000cecb
	...
   14000cee3:	add    BYTE PTR [rdi+0x88ff008],cl
   14000cee9:	xchg   DWORD PTR [rdi],ecx
	...
   14000cefb:	lock add BYTE PTR [rax],al
   14000cefe:	add    BYTE PTR [rax],al
   14000cf00:	add    BYTE PTR [rax],al
   14000cf02:	add    BYTE PTR [rax],al
   14000cf04:	add    bh,bh
   14000cf06:	(bad)  
   14000cf07:	(bad)  
   14000cf08:	(bad)  
   14000cf09:	(bad)  
   14000cf0a:	push   rax
	...
   14000cf14:	add    BYTE PTR [rdi],cl
   14000cf16:	or     bh,bh
   14000cf18:	push   rax
   14000cf1a:	inc    DWORD PTR [rax]
   14000cf1c:	sldt   WORD PTR [rax]
   14000cf1f:	add    BYTE PTR [rax],al
   14000cf21:	add    BYTE PTR [rax],al
   14000cf23:	add    BYTE PTR [rax],al
   14000cf25:	sldt   WORD PTR [rax]
   14000cf28:	add    BYTE PTR [rax],al
   14000cf2a:	lock add al,dh
	...
   14000cf35:	str    WORD PTR [rax]
   14000cf38:	clc    
   14000cf39:	lock lock jo 0x14000cf41
   14000cf41:	add    BYTE PTR [rax],al
   14000cf43:	add    BYTE PTR [rax],al
   14000cf45:	str    WORD PTR [rdi]
   14000cf48:	add    BYTE PTR [rax],al
   14000cf4a:	lock add al,dh
	...
   14000cf55:	add    BYTE PTR [rax],al
   14000cf57:	or     BYTE PTR [rax],al
   14000cf59:	lock add BYTE PTR [rax],al
   14000cf5c:	add    BYTE PTR [rax],0x0
	...
   14000cf67:	add    BYTE PTR [rdi],cl
	...
   14000cf75:	add    BYTE PTR [rax],al
   14000cf77:	add    al,dh
	...
   14000cf85:	add    BYTE PTR [rax],0xf
	...
   14000cf94:	add    BYTE PTR [rax],cl
   14000cf96:	add    al,dh
	...
   14000cfa4:	push   rax
   14000cfa6:	add    BYTE PTR [rax],0x0
	...
   14000cfb1:	add    BYTE PTR [rax],al
   14000cfb3:	(bad)  
   14000cfb5:	clc    
   14000cfb6:	sldt   WORD PTR [rax]
	...
   14000cfc1:	add    BYTE PTR [rax],al
   14000cfc3:	(bad)  
   14000cfc4:	invd   
   14000cfc6:	sldt   WORD PTR [rax]
	...
   14000cfd1:	add    BYTE PTR [rax],al
   14000cfd3:	(bad)  
   14000cfd5:	mov    BYTE PTR [rdi],cl
	...
   14000cfe3:	add    BYTE PTR [rax+0xf080],cl
	...
   14000cff5:	sldt   WORD PTR [rax]
	...
   14000d004:	or     BYTE PTR [rax+0x0],al
	...
   14000d022:	(bad)  
   14000d023:	inc    DWORD PTR [rax]
   14000d025:	add    BYTE PTR [rdi],cl
   14000d027:	inc    DWORD PTR [rax]
   14000d029:	add    BYTE PTR [rbx],al
   14000d02b:	inc    DWORD PTR [rax]
   14000d02d:	add    BYTE PTR [rax],al
   14000d02f:	inc    DWORD PTR [rax]
   14000d031:	add    BYTE PTR [rax],al
   14000d033:	(bad)  
   14000d034:	add    BYTE PTR [rax],al
   14000d036:	add    BYTE PTR [rdi],cl
   14000d038:	add    BYTE PTR [rax],al
   14000d03a:	add    BYTE PTR [rbx],al
   14000d03c:	add    BYTE PTR [rax],0x0
   14000d03f:	add    eax,eax
   14000d041:	add    BYTE PTR [rax],al
   14000d043:	add    eax,esp
   14000d045:	add    BYTE PTR [rax],al
   14000d047:	add    al,dh
   14000d049:	add    BYTE PTR [rax],al
   14000d04b:	add    eax,edi
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    edi,esp
   14000d051:	add    BYTE PTR [rax],al
   14000d053:	add    edi,esi
   14000d055:	add    BYTE PTR [rax],al
   14000d057:	(bad)  
   14000d058:	inc    DWORD PTR [rax]
   14000d05a:	add    BYTE PTR [rdi],cl
   14000d05c:	inc    DWORD PTR [rax-0x3f00e100]
   14000d062:	add    BYTE PTR [rdi],bl
   14000d064:	inc    eax
   14000d066:	add    BYTE PTR [rdi],bh
   14000d068:	inc    eax
   14000d06a:	add    BYTE PTR [rdi],bh
   14000d06c:	inc    eax
   14000d06e:	add    bh,BYTE PTR [rdi]
   14000d070:	jmp    rax
   14000d072:	(bad)  
   14000d073:	jg     0x14000d074
   14000d075:	add    BYTE PTR [rdi],bh
   14000d077:	(bad)  
   14000d078:	inc    BYTE PTR [rax]
   14000d07a:	jg     0x14000d07b
   14000d07c:	cld    
   14000d07d:	add    bh,bh
   14000d07f:	(bad)  
   14000d080:	clc    
   14000d081:	add    edi,edi
   14000d083:	push   rax
   14000d085:	add    edi,edi
   14000d087:	push   rax
   14000d089:	add    edi,edi
   14000d08b:	push   rax
   14000d08d:	add    edi,edi
   14000d08f:	(bad)  
   14000d090:	clc    
   14000d091:	add    edi,edi
   14000d093:	(bad)  
   14000d094:	cld    
   14000d095:	(bad)  
   14000d096:	(bad)  
   14000d097:	(bad)  
   14000d098:	dec    BYTE PTR [rdi]
   14000d09a:	(bad)  
   14000d09b:	(bad)  
   14000d09c:	call   FWORD PTR [rdi]
   14000d09e:	(bad)  
   14000d09f:	inc    DWORD PTR [rax]
   14000d0a1:	add    BYTE PTR [rcx],al
   14000d0a3:	add    BYTE PTR [rcx],al
   14000d0a5:	add    BYTE PTR [rax],ah
   14000d0a7:	and    BYTE PTR [rax],dl
   14000d0a9:	add    BYTE PTR [rcx],al
   14000d0ab:	add    BYTE PTR [rax+rax*1],al
   14000d0ae:	call   0x14300d0b5
   14000d0b3:	add    BYTE PTR [rax],al
   14000d0b5:	add    BYTE PTR [rax],al
   14000d0b7:	add    ch,cl
   14000d0b9:	dec    ch
   14000d0bb:	(bad)  
   14000d0bc:	call   0x14000d0c1
   14000d0c1:	add    BYTE PTR [rcx],al
   14000d0c3:	add    BYTE PTR [rax],al
   14000d0c5:	add    BYTE PTR [rax],al
   14000d0c7:	add    BYTE PTR [rcx],dl
   14000d0c9:	add    BYTE PTR [rax],al
   14000d0cb:	add    BYTE PTR [rax],al
   14000d0cd:	add    BYTE PTR [rax],al
   14000d0cf:	add    BYTE PTR [rdx],al
   14000d0d1:	add    BYTE PTR [rax],al
   14000d0d3:	add    bl,ah
   14000d0d5:	(bad)  
   14000d0d6:	and    dl,0xd
   14000d0d9:	sbb    BYTE PTR [rax+0x1d8f5fcc],cl
   14000d0df:	pop    rsp
   14000d0e0:	sbb    al,0xec
   14000d0e2:	xchg   edi,eax
   14000d0e3:	push   rdx
   14000d0e4:	rex.WXB jns 0x14000d08a
   14000d0e7:	(bad)  
   14000d0e8:	movabs eax,ds:0xe1ec6d4b95d43f37
   14000d0f1:	(bad)  
   14000d0f2:	sub    al,dh
	...
   14000d10c:	mov    BYTE PTR [rax],al
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	(bad)  
   14000d111:	add    BYTE PTR [rax],al
   14000d113:	add    BYTE PTR [rax+0x10000000],bl
   14000d119:	add    BYTE PTR [rax],al
   14000d11b:	add    BYTE PTR [rax+0xe000000],ch
   14000d121:	add    BYTE PTR [rax],al
   14000d123:	add    BYTE PTR [rax+0x1c000000],bh
	...
   14000d131:	add    BYTE PTR [rax],al
   14000d133:	add    al,bl
   14000d135:	add    BYTE PTR [rax],al
   14000d137:	add    BYTE PTR [rax+rax*1],cl
   14000d13a:	add    BYTE PTR [rax],al
   14000d13c:	add    BYTE PTR [rax],al
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000d144:	rex.WB add BYTE PTR [r8],al
	...
   14000d14f:	add    BYTE PTR [rbx],al
   14000d151:	add    BYTE PTR [rax],al
   14000d153:	add    BYTE PTR [rsi],cl
   14000d155:	add    BYTE PTR [rax],al
   14000d157:	add    BYTE PTR [rax],dl
   14000d159:	add    BYTE PTR [rax],al
   14000d15b:	add    BYTE PTR [rax],bl
   14000d15d:	add    BYTE PTR [rax],al
   14000d15f:	add    BYTE PTR [rbp+0x0],cl
   14000d162:	push   rbp
   14000d163:	add    BYTE PTR [rcx+0x0],cl
	...
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	add    eax,DWORD PTR [rax]
   14000d172:	add    BYTE PTR [rax],al
   14000d174:	add    al,0x0
   14000d176:	add    BYTE PTR [rax],al
   14000d178:	add    eax,0x6000000
   14000d17d:	add    BYTE PTR [rax],al
   14000d17f:	add    BYTE PTR [rcx],cl
   14000d181:	add    BYTE PTR [rax],al
   14000d183:	add    BYTE PTR [rsi],cl
   14000d185:	add    BYTE PTR [rax],al
   14000d187:	add    BYTE PTR [rax],dl
   14000d189:	add    BYTE PTR [rax],al
   14000d18b:	add    BYTE PTR [rax],al
   14000d18d:	add    BYTE PTR [rax],al
   14000d18f:	add    BYTE PTR [rbp+0x0],ah
   14000d192:	outs   dx,BYTE PTR ds:[rsi]
   14000d193:	add    BYTE PTR [rip+0x53005500],ch        # 0x193012699
   14000d199:	add    BYTE PTR [rax],al
   14000d19b:	add    BYTE PTR [rax],al
   14000d19d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000e000 <.reloc>:
   14000e000:	add    BYTE PTR [rax+0x0],dh
   14000e003:	add    BYTE PTR [rax],ah
   14000e005:	add    BYTE PTR [rax],al
   14000e007:	add    BYTE PTR [rax-0x5c],cl
   14000e00a:	push   rax
   14000e00b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e00c:	(bad)  
   14000e00d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e00e:	js     0x14000dfb4
   14000e010:	and    BYTE PTR [rax+rdx*8+0x48a4d8a4],0xaa
   14000e018:	(bad)  
   14000e019:	stos   BYTE PTR es:[rdi],al
   14000e01a:	push   0xaa70aa
	...
