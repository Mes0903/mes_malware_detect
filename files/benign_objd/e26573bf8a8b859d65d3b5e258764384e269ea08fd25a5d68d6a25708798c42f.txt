
e26573bf8a8b859d65d3b5e258764384e269ea08fd25a5d68d6a25708798c42f.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x8],rbx
   14000100d:	mov    QWORD PTR [rsp+0x10],rbp
   140001012:	mov    QWORD PTR [rsp+0x18],rsi
   140001017:	push   rdi
   140001018:	sub    rsp,0x20
   14000101c:	xor    edx,edx
   14000101e:	xor    ecx,ecx
   140001020:	mov    rbp,r8
   140001023:	call   QWORD PTR [rip+0x10e7]        # 0x140002110
   140001029:	lea    rcx,[rip+0x1170]        # 0x1400021a0
   140001030:	call   QWORD PTR [rip+0xfca]        # 0x140002000
   140001036:	xor    ebx,ebx
   140001038:	mov    rsi,rax
   14000103b:	test   rax,rax
   14000103e:	jne    0x140001047
   140001040:	mov    edi,0x80004005
   140001045:	jmp    0x14000107d
   140001047:	mov    edx,0xbbc
   14000104c:	mov    rcx,rax
   14000104f:	call   QWORD PTR [rip+0xfb3]        # 0x140002008
   140001055:	mov    rdi,rax
   140001058:	test   rax,rax
   14000105b:	jne    0x140001064
   14000105d:	mov    edi,0x80004005
   140001062:	jmp    0x140001074
   140001064:	mov    rcx,rax
   140001067:	call   QWORD PTR [rip+0x10bb]        # 0x140002128
   14000106d:	mov    rcx,rbp
   140001070:	call   rdi
   140001072:	mov    edi,eax
   140001074:	mov    rcx,rsi
   140001077:	call   QWORD PTR [rip+0xf93]        # 0x140002010
   14000107d:	call   QWORD PTR [rip+0x1095]        # 0x140002118
   140001083:	mov    rbp,QWORD PTR [rsp+0x38]
   140001088:	test   edi,edi
   14000108a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000108f:	setns  bl
   140001092:	lea    eax,[rbx-0x1]
   140001095:	mov    rbx,QWORD PTR [rsp+0x30]
   14000109a:	add    rsp,0x20
   14000109e:	pop    rdi
   14000109f:	ret    
   1400010a0:	int3   
   1400010a1:	int3   
   1400010a2:	int3   
   1400010a3:	int3   
   1400010a4:	int3   
   1400010a5:	int3   
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	sub    rsp,0x28
   1400010b4:	mov    eax,0x5a4d
   1400010b9:	cmp    WORD PTR [rip+0xffffffffffffef40],ax        # 0x140000000
   1400010c0:	je     0x1400010c6
   1400010c2:	xor    eax,eax
   1400010c4:	jmp    0x140001115
   1400010c6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffef6f]        # 0x14000003c
   1400010cd:	lea    rax,[rip+0xffffffffffffef2c]        # 0x140000000
   1400010d4:	add    rcx,rax
   1400010d7:	cmp    DWORD PTR [rcx],0x4550
   1400010dd:	jne    0x1400010c2
   1400010df:	movzx  eax,WORD PTR [rcx+0x18]
   1400010e3:	cmp    eax,0x10b
   1400010e8:	je     0x140001104
   1400010ea:	cmp    eax,0x20b
   1400010ef:	jne    0x1400010c2
   1400010f1:	xor    eax,eax
   1400010f3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400010fa:	jbe    0x140001115
   1400010fc:	cmp    DWORD PTR [rcx+0xf8],eax
   140001102:	jmp    0x140001112
   140001104:	xor    eax,eax
   140001106:	cmp    DWORD PTR [rcx+0x74],0xe
   14000110a:	jbe    0x140001115
   14000110c:	cmp    DWORD PTR [rcx+0xe8],eax
   140001112:	setne  al
   140001115:	mov    ecx,0x2
   14000111a:	mov    DWORD PTR [rip+0x1f20],eax        # 0x140003040
   140001120:	call   0x140001588
   140001125:	mov    ecx,eax
   140001127:	call   QWORD PTR [rip+0xfcb]        # 0x1400020f8
   14000112d:	mov    rcx,QWORD PTR [rip+0xf84]        # 0x1400020b8
   140001134:	or     rax,0xffffffffffffffff
   140001138:	mov    QWORD PTR [rip+0x2499],rax        # 0x1400035d8
   14000113f:	mov    QWORD PTR [rip+0x249a],rax        # 0x1400035e0
   140001146:	mov    eax,DWORD PTR [rip+0x1f08]        # 0x140003054
   14000114c:	mov    DWORD PTR [rcx],eax
   14000114e:	mov    rcx,QWORD PTR [rip+0xf5b]        # 0x1400020b0
   140001155:	mov    eax,DWORD PTR [rip+0x1eed]        # 0x140003048
   14000115b:	mov    DWORD PTR [rcx],eax
   14000115d:	call   0x1400017a0
   140001162:	cmp    DWORD PTR [rip+0x1e97],0x0        # 0x140003000
   140001169:	jne    0x140001178
   14000116b:	lea    rcx,[rip+0x62e]        # 0x1400017a0
   140001172:	call   QWORD PTR [rip+0xf60]        # 0x1400020d8
   140001178:	xor    eax,eax
   14000117a:	add    rsp,0x28
   14000117e:	ret    
   14000117f:	int3   
   140001180:	int3   
   140001181:	int3   
   140001182:	int3   
   140001183:	int3   
   140001184:	int3   
   140001185:	int3   
   140001186:	int3   
   140001187:	int3   
   140001188:	int3   
   140001189:	int3   
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	sub    rsp,0x38
   140001194:	mov    eax,DWORD PTR [rip+0x1eb6]        # 0x140003050
   14000119a:	lea    r8,[rip+0x1e97]        # 0x140003038
   1400011a1:	mov    r9d,DWORD PTR [rip+0x1ea4]        # 0x14000304c
   1400011a8:	lea    rdx,[rip+0x1e81]        # 0x140003030
   1400011af:	mov    DWORD PTR [rip+0x1e8f],eax        # 0x140003044
   1400011b5:	lea    rcx,[rip+0x1e6c]        # 0x140003028
   1400011bc:	lea    rax,[rip+0x1e81]        # 0x140003044
   1400011c3:	mov    QWORD PTR [rsp+0x20],rax
   1400011c8:	call   QWORD PTR [rip+0xf32]        # 0x140002100
   1400011ce:	mov    DWORD PTR [rip+0x1e58],eax        # 0x14000302c
   1400011d4:	add    rsp,0x38
   1400011d8:	ret    
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400011ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400011ef:	push   r12
   1400011f1:	push   r14
   1400011f3:	push   r15
   1400011f5:	sub    rsp,0xb0
   1400011fc:	xor    r15d,r15d
   1400011ff:	mov    DWORD PTR [rsp+0x20],r15d
   140001204:	lea    rcx,[rsp+0x40]
   140001209:	call   QWORD PTR [rip+0xe69]        # 0x140002078
   14000120f:	nop
   140001210:	mov    rax,QWORD PTR gs:0x30
   140001219:	mov    rbx,QWORD PTR [rax+0x8]
   14000121d:	mov    r14d,r15d
   140001220:	xor    eax,eax
   140001222:	lock cmpxchg QWORD PTR [rip+0x23bd],rbx        # 0x1400035e8
   14000122b:	je     0x140001249
   14000122d:	cmp    rax,rbx
   140001230:	jne    0x14000123c
   140001232:	mov    edi,0x1
   140001237:	mov    r14d,edi
   14000123a:	jmp    0x14000124e
   14000123c:	mov    ecx,0x3e8
   140001241:	call   QWORD PTR [rip+0xe39]        # 0x140002080
   140001247:	jmp    0x140001220
   140001249:	mov    edi,0x1
   14000124e:	mov    eax,DWORD PTR [rip+0x239c]        # 0x1400035f0
   140001254:	cmp    eax,edi
   140001256:	jne    0x140001266
   140001258:	mov    esi,0x1f
   14000125d:	mov    ecx,esi
   14000125f:	call   0x1400015d4
   140001264:	jmp    0x1400012d7
   140001266:	mov    eax,DWORD PTR [rip+0x2384]        # 0x1400035f0
   14000126c:	test   eax,eax
   14000126e:	jne    0x1400012cc
   140001270:	mov    DWORD PTR [rip+0x237a],edi        # 0x1400035f0
   140001276:	lea    r12,[rip+0xeeb]        # 0x140002168
   14000127d:	lea    rbx,[rip+0xecc]        # 0x140002150
   140001284:	mov    QWORD PTR [rsp+0x30],rbx
   140001289:	mov    eax,r15d
   14000128c:	mov    DWORD PTR [rsp+0x24],eax
   140001290:	cmp    rbx,r12
   140001293:	jae    0x1400012be
   140001295:	test   eax,eax
   140001297:	jne    0x1400012c2
   140001299:	mov    rsi,QWORD PTR [rbx]
   14000129c:	test   rsi,rsi
   14000129f:	je     0x1400012b3
   1400012a1:	mov    rcx,rsi
   1400012a4:	mov    rax,QWORD PTR [rip+0xe7d]        # 0x140002128
   1400012ab:	call   rax
   1400012ad:	call   rsi
   1400012af:	mov    DWORD PTR [rsp+0x24],eax
   1400012b3:	add    rbx,0x8
   1400012b7:	mov    QWORD PTR [rsp+0x30],rbx
   1400012bc:	jmp    0x140001290
   1400012be:	test   eax,eax
   1400012c0:	je     0x1400012d2
   1400012c2:	mov    eax,0xff
   1400012c7:	jmp    0x140001433
   1400012cc:	mov    DWORD PTR [rip+0x1d52],edi        # 0x140003024
   1400012d2:	mov    esi,0x1f
   1400012d7:	mov    eax,DWORD PTR [rip+0x2313]        # 0x1400035f0
   1400012dd:	cmp    eax,edi
   1400012df:	jne    0x1400012fe
   1400012e1:	lea    rdx,[rip+0xe60]        # 0x140002148
   1400012e8:	lea    rcx,[rip+0xe49]        # 0x140002138
   1400012ef:	call   0x1400017aa
   1400012f4:	mov    DWORD PTR [rip+0x22f2],0x2        # 0x1400035f0
   1400012fe:	test   r14d,r14d
   140001301:	jne    0x14000130d
   140001303:	mov    rax,r15
   140001306:	xchg   QWORD PTR [rip+0x22db],rax        # 0x1400035e8
   14000130d:	cmp    QWORD PTR [rip+0x22e4],r15        # 0x1400035f8
   140001314:	je     0x140001344
   140001316:	lea    rcx,[rip+0x22db]        # 0x1400035f8
   14000131d:	call   0x140001630
   140001322:	test   eax,eax
   140001324:	je     0x140001344
   140001326:	mov    rbx,QWORD PTR [rip+0x22cb]        # 0x1400035f8
   14000132d:	mov    rcx,rbx
   140001330:	mov    rax,QWORD PTR [rip+0xdf1]        # 0x140002128
   140001337:	call   rax
   140001339:	xor    r8d,r8d
   14000133c:	lea    edx,[r8+0x2]
   140001340:	xor    ecx,ecx
   140001342:	call   rbx
   140001344:	mov    rax,QWORD PTR [rip+0xd75]        # 0x1400020c0
   14000134b:	mov    rdx,QWORD PTR [rax]
   14000134e:	test   rdx,rdx
   140001351:	jne    0x14000135d
   140001353:	mov    eax,0xff
   140001358:	jmp    0x140001433
   14000135d:	mov    QWORD PTR [rsp+0x28],rdx
   140001362:	mov    ecx,DWORD PTR [rsp+0x20]
   140001366:	cmp    WORD PTR [rdx],0x20
   14000136a:	ja     0x1400013e4
   14000136c:	cmp    WORD PTR [rdx],r15w
   140001370:	je     0x140001376
   140001372:	test   ecx,ecx
   140001374:	jne    0x1400013e4
   140001376:	movzx  eax,WORD PTR [rdx]
   140001379:	sub    ax,di
   14000137c:	cmp    ax,si
   14000137f:	ja     0x14000138c
   140001381:	add    rdx,0x2
   140001385:	mov    QWORD PTR [rsp+0x28],rdx
   14000138a:	jmp    0x140001376
   14000138c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140001390:	movzx  eax,WORD PTR [rsp+0x80]
   140001398:	mov    r9d,0xa
   14000139e:	and    cl,dil
   1400013a1:	cmovne r9d,eax
   1400013a5:	mov    r8,rdx
   1400013a8:	xor    edx,edx
   1400013aa:	lea    rcx,[rip+0xffffffffffffec4f]        # 0x140000000
   1400013b1:	call   0x140001008
   1400013b6:	mov    DWORD PTR [rip+0x1c64],eax        # 0x140003020
   1400013bc:	cmp    DWORD PTR [rip+0x1c7d],r15d        # 0x140003040
   1400013c3:	jne    0x1400013cd
   1400013c5:	mov    ecx,eax
   1400013c7:	call   QWORD PTR [rip+0xd23]        # 0x1400020f0
   1400013cd:	cmp    DWORD PTR [rip+0x1c50],r15d        # 0x140003024
   1400013d4:	jne    0x1400013e2
   1400013d6:	call   QWORD PTR [rip+0xd04]        # 0x1400020e0
   1400013dc:	mov    eax,DWORD PTR [rip+0x1c3e]        # 0x140003020
   1400013e2:	jmp    0x140001433
   1400013e4:	cmp    WORD PTR [rdx],0x22
   1400013e8:	jne    0x1400013f8
   1400013ea:	mov    eax,r15d
   1400013ed:	test   ecx,ecx
   1400013ef:	sete   al
   1400013f2:	mov    ecx,eax
   1400013f4:	mov    DWORD PTR [rsp+0x20],eax
   1400013f8:	add    rdx,0x2
   1400013fc:	mov    QWORD PTR [rsp+0x28],rdx
   140001401:	jmp    0x140001366
   140001406:	mov    DWORD PTR [rip+0x1c14],eax        # 0x140003020
   14000140c:	cmp    DWORD PTR [rip+0x1c2d],0x0        # 0x140003040
   140001413:	jne    0x14000141e
   140001415:	mov    ecx,eax
   140001417:	call   QWORD PTR [rip+0xccb]        # 0x1400020e8
   14000141d:	int3   
   14000141e:	cmp    DWORD PTR [rip+0x1bff],0x0        # 0x140003024
   140001425:	jne    0x140001433
   140001427:	call   QWORD PTR [rip+0xcb3]        # 0x1400020e0
   14000142d:	mov    eax,DWORD PTR [rip+0x1bed]        # 0x140003020
   140001433:	lea    r11,[rsp+0xb0]
   14000143b:	mov    rbx,QWORD PTR [r11+0x20]
   14000143f:	mov    rsi,QWORD PTR [r11+0x28]
   140001443:	mov    rdi,QWORD PTR [r11+0x30]
   140001447:	mov    rsp,r11
   14000144a:	pop    r15
   14000144c:	pop    r14
   14000144e:	pop    r12
   140001450:	ret    
   140001451:	int3   
   140001452:	int3   
   140001453:	int3   
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	int3   
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	sub    rsp,0x28
   140001464:	call   0x1400016c4
   140001469:	add    rsp,0x28
   14000146d:	jmp    0x1400011e0
   140001472:	int3   
   140001473:	int3   
   140001474:	int3   
   140001475:	int3   
   140001476:	int3   
   140001477:	int3   
   140001478:	int3   
   140001479:	int3   
   14000147a:	int3   
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	int3   
   140001481:	int3   
   140001482:	int3   
   140001483:	int3   
   140001484:	int3   
   140001485:	int3   
   140001486:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001490:	cmp    rcx,QWORD PTR [rip+0x1b71]        # 0x140003008
   140001497:	jne    0x1400014a9
   140001499:	rol    rcx,0x10
   14000149d:	test   cx,0xffff
   1400014a2:	jne    0x1400014a5
   1400014a4:	ret    
   1400014a5:	ror    rcx,0x10
   1400014a9:	jmp    0x140001820
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	int3   
   1400014b1:	int3   
   1400014b2:	int3   
   1400014b3:	int3   
   1400014b4:	int3   
   1400014b5:	int3   
   1400014b6:	int3   
   1400014b7:	int3   
   1400014b8:	int3   
   1400014b9:	int3   
   1400014ba:	int3   
   1400014bb:	int3   
   1400014bc:	int3   
   1400014bd:	int3   
   1400014be:	int3   
   1400014bf:	int3   
   1400014c0:	sub    rsp,0x28
   1400014c4:	mov    rax,QWORD PTR [rcx]
   1400014c7:	cmp    DWORD PTR [rax],0xe06d7363
   1400014cd:	jne    0x1400014f2
   1400014cf:	cmp    DWORD PTR [rax+0x18],0x4
   1400014d3:	jne    0x1400014f2
   1400014d5:	mov    ecx,DWORD PTR [rax+0x20]
   1400014d8:	lea    eax,[rcx-0x19930520]
   1400014de:	cmp    eax,0x2
   1400014e1:	jbe    0x1400014eb
   1400014e3:	cmp    ecx,0x1994000
   1400014e9:	jne    0x1400014f2
   1400014eb:	call   QWORD PTR [rip+0xba7]        # 0x140002098
   1400014f1:	int3   
   1400014f2:	xor    eax,eax
   1400014f4:	add    rsp,0x28
   1400014f8:	ret    
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	sub    rsp,0x28
   140001504:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400014c0
   14000150b:	call   QWORD PTR [rip+0xb5f]        # 0x140002070
   140001511:	xor    eax,eax
   140001513:	add    rsp,0x28
   140001517:	ret    
   140001518:	int3   
   140001519:	int3   
   14000151a:	int3   
   14000151b:	int3   
   14000151c:	int3   
   14000151d:	int3   
   14000151e:	jmp    QWORD PTR [rip+0xb7c]        # 0x1400020a0
   140001524:	int3   
   140001525:	int3   
   140001526:	int3   
   140001527:	int3   
   140001528:	int3   
   140001529:	int3   
   14000152a:	int3   
   14000152b:	int3   
   14000152c:	sub    rsp,0x18
   140001530:	xor    edx,edx
   140001532:	lea    rax,[rcx-0x1]
   140001536:	cmp    rax,0xfffffffffffffffd
   14000153a:	ja     0x140001578
   14000153c:	mov    eax,0x5a4d
   140001541:	cmp    WORD PTR [rcx],ax
   140001544:	jne    0x140001570
   140001546:	cmp    DWORD PTR [rcx+0x3c],edx
   140001549:	jl     0x140001570
   14000154b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140001552:	jae    0x140001570
   140001554:	movsxd rax,DWORD PTR [rcx+0x3c]
   140001558:	add    rax,rcx
   14000155b:	mov    QWORD PTR [rsp],rax
   14000155f:	cmp    DWORD PTR [rax],0x4550
   140001565:	cmovne rax,rdx
   140001569:	mov    rdx,rax
   14000156c:	mov    QWORD PTR [rsp],rax
   140001570:	jmp    0x140001578
   140001572:	xor    edx,edx
   140001574:	mov    QWORD PTR [rsp],rdx
   140001578:	mov    rax,rdx
   14000157b:	add    rsp,0x18
   14000157f:	ret    
   140001580:	int3   
   140001581:	int3   
   140001582:	int3   
   140001583:	int3   
   140001584:	int3   
   140001585:	int3   
   140001586:	int3   
   140001587:	int3   
   140001588:	rex push rbx
   14000158a:	sub    rsp,0x20
   14000158e:	mov    ebx,ecx
   140001590:	xor    ecx,ecx
   140001592:	call   QWORD PTR [rip+0xad0]        # 0x140002068
   140001598:	test   rax,rax
   14000159b:	je     0x1400015c5
   14000159d:	mov    rcx,rax
   1400015a0:	call   0x14000152c
   1400015a5:	test   rax,rax
   1400015a8:	je     0x1400015c5
   1400015aa:	mov    ecx,0x2
   1400015af:	cmp    WORD PTR [rax+0x5c],cx
   1400015b3:	jne    0x1400015b9
   1400015b5:	mov    eax,ecx
   1400015b7:	jmp    0x1400015c7
   1400015b9:	cmp    WORD PTR [rax+0x5c],0x3
   1400015be:	mov    eax,0x1
   1400015c3:	je     0x1400015c7
   1400015c5:	mov    eax,ebx
   1400015c7:	add    rsp,0x20
   1400015cb:	pop    rbx
   1400015cc:	ret    
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	int3   
   1400015d1:	int3   
   1400015d2:	int3   
   1400015d3:	int3   
   1400015d4:	jmp    QWORD PTR [rip+0xace]        # 0x1400020a8
   1400015da:	int3   
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400015e4:	xor    r9d,r9d
   1400015e7:	add    r8,rcx
   1400015ea:	mov    r10,rdx
   1400015ed:	movzx  eax,WORD PTR [r8+0x14]
   1400015f2:	movzx  r11d,WORD PTR [r8+0x6]
   1400015f7:	add    rax,0x18
   1400015fb:	add    rax,r8
   1400015fe:	test   r11d,r11d
   140001601:	je     0x140001621
   140001603:	mov    edx,DWORD PTR [rax+0xc]
   140001606:	cmp    r10,rdx
   140001609:	jb     0x140001615
   14000160b:	mov    ecx,DWORD PTR [rax+0x8]
   14000160e:	add    ecx,edx
   140001610:	cmp    r10,rcx
   140001613:	jb     0x140001623
   140001615:	inc    r9d
   140001618:	add    rax,0x28
   14000161c:	cmp    r9d,r11d
   14000161f:	jb     0x140001603
   140001621:	xor    eax,eax
   140001623:	ret    
   140001624:	int3   
   140001625:	int3   
   140001626:	int3   
   140001627:	int3   
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	mov    QWORD PTR [rsp+0x8],rbx
   140001635:	push   rdi
   140001636:	sub    rsp,0x20
   14000163a:	mov    rbx,rcx
   14000163d:	lea    rdi,[rip+0xffffffffffffe9bc]        # 0x140000000
   140001644:	mov    rcx,rdi
   140001647:	call   0x140001690
   14000164c:	test   eax,eax
   14000164e:	je     0x140001672
   140001650:	sub    rbx,rdi
   140001653:	mov    rdx,rbx
   140001656:	mov    rcx,rdi
   140001659:	call   0x1400015e0
   14000165e:	test   rax,rax
   140001661:	je     0x140001672
   140001663:	mov    eax,DWORD PTR [rax+0x24]
   140001666:	shr    eax,0x1f
   140001669:	not    eax
   14000166b:	and    eax,0x1
   14000166e:	jmp    0x140001672
   140001670:	xor    eax,eax
   140001672:	mov    rbx,QWORD PTR [rsp+0x30]
   140001677:	add    rsp,0x20
   14000167b:	pop    rdi
   14000167c:	ret    
   14000167d:	int3   
   14000167e:	int3   
   14000167f:	int3   
   140001680:	int3   
   140001681:	int3   
   140001682:	int3   
   140001683:	int3   
   140001684:	int3   
   140001685:	int3   
   140001686:	int3   
   140001687:	int3   
   140001688:	int3   
   140001689:	int3   
   14000168a:	int3   
   14000168b:	int3   
   14000168c:	int3   
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	mov    rax,rcx
   140001693:	mov    ecx,0x5a4d
   140001698:	cmp    WORD PTR [rax],cx
   14000169b:	je     0x1400016a0
   14000169d:	xor    eax,eax
   14000169f:	ret    
   1400016a0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400016a4:	add    rcx,rax
   1400016a7:	xor    eax,eax
   1400016a9:	cmp    DWORD PTR [rcx],0x4550
   1400016af:	jne    0x1400016bd
   1400016b1:	mov    edx,0x20b
   1400016b6:	cmp    WORD PTR [rcx+0x18],dx
   1400016ba:	sete   al
   1400016bd:	ret    
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	int3   
   1400016c1:	int3   
   1400016c2:	int3   
   1400016c3:	int3   
   1400016c4:	mov    QWORD PTR [rsp+0x20],rbx
   1400016c9:	push   rbp
   1400016ca:	mov    rbp,rsp
   1400016cd:	sub    rsp,0x20
   1400016d1:	and    QWORD PTR [rbp+0x18],0x0
   1400016d6:	movabs rbx,0x2b992ddfa232
   1400016e0:	mov    rax,QWORD PTR [rip+0x1921]        # 0x140003008
   1400016e7:	cmp    rax,rbx
   1400016ea:	jne    0x14000177f
   1400016f0:	lea    rcx,[rbp+0x18]
   1400016f4:	call   QWORD PTR [rip+0x94e]        # 0x140002048
   1400016fa:	mov    rax,QWORD PTR [rbp+0x18]
   1400016fe:	mov    QWORD PTR [rbp+0x10],rax
   140001702:	call   QWORD PTR [rip+0x950]        # 0x140002058
   140001708:	mov    eax,eax
   14000170a:	xor    QWORD PTR [rbp+0x10],rax
   14000170e:	call   QWORD PTR [rip+0x93c]        # 0x140002050
   140001714:	mov    eax,eax
   140001716:	xor    QWORD PTR [rbp+0x10],rax
   14000171a:	call   QWORD PTR [rip+0x920]        # 0x140002040
   140001720:	mov    eax,eax
   140001722:	shl    rax,0x18
   140001726:	xor    QWORD PTR [rbp+0x10],rax
   14000172a:	call   QWORD PTR [rip+0x910]        # 0x140002040
   140001730:	mov    eax,eax
   140001732:	lea    rcx,[rbp+0x10]
   140001736:	xor    rax,QWORD PTR [rbp+0x10]
   14000173a:	xor    rax,rcx
   14000173d:	lea    rcx,[rbp+0x20]
   140001741:	mov    QWORD PTR [rbp+0x10],rax
   140001745:	call   QWORD PTR [rip+0x915]        # 0x140002060
   14000174b:	mov    eax,DWORD PTR [rbp+0x20]
   14000174e:	movabs rcx,0xffffffffffff
   140001758:	shl    rax,0x20
   14000175c:	xor    rax,QWORD PTR [rbp+0x20]
   140001760:	xor    rax,QWORD PTR [rbp+0x10]
   140001764:	and    rax,rcx
   140001767:	movabs rcx,0x2b992ddfa233
   140001771:	cmp    rax,rbx
   140001774:	cmove  rax,rcx
   140001778:	mov    QWORD PTR [rip+0x1889],rax        # 0x140003008
   14000177f:	mov    rbx,QWORD PTR [rsp+0x48]
   140001784:	not    rax
   140001787:	mov    QWORD PTR [rip+0x1882],rax        # 0x140003010
   14000178e:	add    rsp,0x20
   140001792:	pop    rbp
   140001793:	ret    
   140001794:	int3   
   140001795:	int3   
   140001796:	int3   
   140001797:	int3   
   140001798:	int3   
   140001799:	int3   
   14000179a:	int3   
   14000179b:	int3   
   14000179c:	int3   
   14000179d:	int3   
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	xor    eax,eax
   1400017a2:	ret    
   1400017a3:	int3   
   1400017a4:	int3   
   1400017a5:	int3   
   1400017a6:	int3   
   1400017a7:	int3   
   1400017a8:	int3   
   1400017a9:	int3   
   1400017aa:	jmp    QWORD PTR [rip+0x920]        # 0x1400020d0
   1400017b0:	int3   
   1400017b1:	int3   
   1400017b2:	int3   
   1400017b3:	int3   
   1400017b4:	int3   
   1400017b5:	int3   
   1400017b6:	jmp    QWORD PTR [rip+0x90c]        # 0x1400020c8
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	int3   
   1400017c1:	int3   
   1400017c2:	int3   
   1400017c3:	int3   
   1400017c4:	int3   
   1400017c5:	int3   
   1400017c6:	int3   
   1400017c7:	int3   
   1400017c8:	int3   
   1400017c9:	int3   
   1400017ca:	int3   
   1400017cb:	int3   
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	ret    0x0
   1400017d3:	int3   
   1400017d4:	int3   
   1400017d5:	int3   
   1400017d6:	int3   
   1400017d7:	int3   
   1400017d8:	int3   
   1400017d9:	int3   
   1400017da:	int3   
   1400017db:	int3   
   1400017dc:	rex push rbx
   1400017de:	sub    rsp,0x20
   1400017e2:	mov    rbx,rcx
   1400017e5:	xor    ecx,ecx
   1400017e7:	call   QWORD PTR [rip+0x883]        # 0x140002070
   1400017ed:	mov    rcx,rbx
   1400017f0:	call   QWORD PTR [rip+0x82a]        # 0x140002020
   1400017f6:	call   QWORD PTR [rip+0x81c]        # 0x140002018
   1400017fc:	mov    rcx,rax
   1400017ff:	mov    edx,0xc0000409
   140001804:	add    rsp,0x20
   140001808:	pop    rbx
   140001809:	rex.W jmp QWORD PTR [rip+0x878]        # 0x140002088
   140001810:	int3   
   140001811:	int3   
   140001812:	int3   
   140001813:	int3   
   140001814:	int3   
   140001815:	int3   
   140001816:	int3   
   140001817:	int3   
   140001818:	int3   
   140001819:	int3   
   14000181a:	int3   
   14000181b:	int3   
   14000181c:	int3   
   14000181d:	int3   
   14000181e:	int3   
   14000181f:	int3   
   140001820:	mov    QWORD PTR [rsp+0x8],rcx
   140001825:	sub    rsp,0x88
   14000182c:	lea    rcx,[rip+0x18cd]        # 0x140003100
   140001833:	call   QWORD PTR [rip+0x7ff]        # 0x140002038
   140001839:	mov    rax,QWORD PTR [rip+0x19b8]        # 0x1400031f8
   140001840:	mov    QWORD PTR [rsp+0x48],rax
   140001845:	xor    r8d,r8d
   140001848:	lea    rdx,[rsp+0x50]
   14000184d:	mov    rcx,QWORD PTR [rsp+0x48]
   140001852:	call   QWORD PTR [rip+0x7d8]        # 0x140002030
   140001858:	mov    QWORD PTR [rsp+0x40],rax
   14000185d:	cmp    QWORD PTR [rsp+0x40],0x0
   140001863:	je     0x1400018a7
   140001865:	mov    QWORD PTR [rsp+0x38],0x0
   14000186e:	lea    rax,[rsp+0x58]
   140001873:	mov    QWORD PTR [rsp+0x30],rax
   140001878:	lea    rax,[rsp+0x60]
   14000187d:	mov    QWORD PTR [rsp+0x28],rax
   140001882:	lea    rax,[rip+0x1877]        # 0x140003100
   140001889:	mov    QWORD PTR [rsp+0x20],rax
   14000188e:	mov    r9,QWORD PTR [rsp+0x40]
   140001893:	mov    r8,QWORD PTR [rsp+0x48]
   140001898:	mov    rdx,QWORD PTR [rsp+0x50]
   14000189d:	xor    ecx,ecx
   14000189f:	call   QWORD PTR [rip+0x783]        # 0x140002028
   1400018a5:	jmp    0x1400018ca
   1400018a7:	mov    rax,QWORD PTR [rip+0x18ea]        # 0x140003198
   1400018ae:	mov    rax,QWORD PTR [rax]
   1400018b1:	mov    QWORD PTR [rip+0x1940],rax        # 0x1400031f8
   1400018b8:	mov    rax,QWORD PTR [rip+0x18d9]        # 0x140003198
   1400018bf:	add    rax,0x8
   1400018c3:	mov    QWORD PTR [rip+0x18ce],rax        # 0x140003198
   1400018ca:	mov    rax,QWORD PTR [rip+0x1927]        # 0x1400031f8
   1400018d1:	mov    QWORD PTR [rip+0x1798],rax        # 0x140003070
   1400018d8:	mov    rax,QWORD PTR [rsp+0x90]
   1400018e0:	mov    QWORD PTR [rip+0x1899],rax        # 0x140003180
   1400018e7:	mov    DWORD PTR [rip+0x176f],0xc0000409        # 0x140003060
   1400018f1:	mov    DWORD PTR [rip+0x1769],0x1        # 0x140003064
   1400018fb:	mov    DWORD PTR [rip+0x1773],0x3        # 0x140003078
   140001905:	mov    eax,0x8
   14000190a:	imul   rax,rax,0x0
   14000190e:	lea    rcx,[rip+0x176b]        # 0x140003080
   140001915:	mov    QWORD PTR [rcx+rax*1],0x2
   14000191d:	mov    eax,0x8
   140001922:	imul   rax,rax,0x1
   140001926:	lea    rcx,[rip+0x1753]        # 0x140003080
   14000192d:	mov    rdx,QWORD PTR [rip+0x16d4]        # 0x140003008
   140001934:	mov    QWORD PTR [rcx+rax*1],rdx
   140001938:	mov    eax,0x8
   14000193d:	imul   rax,rax,0x2
   140001941:	lea    rcx,[rip+0x1738]        # 0x140003080
   140001948:	mov    rdx,QWORD PTR [rip+0x16c1]        # 0x140003010
   14000194f:	mov    QWORD PTR [rcx+rax*1],rdx
   140001953:	mov    eax,0x8
   140001958:	imul   rax,rax,0x0
   14000195c:	mov    rcx,QWORD PTR [rip+0x16a5]        # 0x140003008
   140001963:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140001968:	mov    eax,0x8
   14000196d:	imul   rax,rax,0x1
   140001971:	mov    rcx,QWORD PTR [rip+0x1698]        # 0x140003010
   140001978:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000197d:	lea    rcx,[rip+0x80c]        # 0x140002190
   140001984:	call   0x1400017dc
   140001989:	add    rsp,0x88
   140001990:	ret    
   140001991:	int3   
   140001992:	int3   
   140001993:	int3   
   140001994:	int3   
   140001995:	int3   
   140001996:	int3   
   140001997:	int3   
   140001998:	int3   
   140001999:	int3   
   14000199a:	int3   
   14000199b:	int3   
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	int3   
   1400019a1:	int3   
   1400019a2:	int3   
   1400019a3:	int3   
   1400019a4:	int3   
   1400019a5:	int3   
   1400019a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400019b0:	jmp    rax
   1400019b2:	int3   
   1400019b3:	int3   
   1400019b4:	int3   
   1400019b5:	int3   
   1400019b6:	int3   
   1400019b7:	int3   
   1400019b8:	int3   
   1400019b9:	int3   
   1400019ba:	int3   
   1400019bb:	int3   
   1400019bc:	int3   
   1400019bd:	int3   
   1400019be:	int3   
   1400019bf:	int3   
   1400019c0:	int3   
   1400019c1:	int3   
   1400019c2:	int3   
   1400019c3:	int3   
   1400019c4:	int3   
   1400019c5:	int3   
   1400019c6:	rex push rbp
   1400019c8:	sub    rsp,0x20
   1400019cc:	mov    rbp,rdx
   1400019cf:	mov    rax,QWORD PTR [rcx]
   1400019d2:	mov    rdx,rcx
   1400019d5:	mov    ecx,DWORD PTR [rax]
   1400019d7:	call   0x14000151e
   1400019dc:	nop
   1400019dd:	add    rsp,0x20
   1400019e1:	pop    rbp
   1400019e2:	ret    
   1400019e3:	int3   
   1400019e4:	int3   
   1400019e5:	int3   
   1400019e6:	int3   
   1400019e7:	int3   
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	rex push rbp
   1400019f2:	sub    rsp,0x20
   1400019f6:	mov    rbp,rdx
   1400019f9:	mov    rax,QWORD PTR [rcx]
   1400019fc:	xor    ecx,ecx
   1400019fe:	cmp    DWORD PTR [rax],0xc0000005
   140001a04:	sete   cl
   140001a07:	mov    eax,ecx
   140001a09:	add    rsp,0x20
   140001a0d:	pop    rbp
   140001a0e:	ret    
   140001a0f:	int3   

Disassembly of section .rdata:

0000000140002000 <.rdata>:
   140002000:	sbb    BYTE PTR [rdi],ah
   140002002:	add    BYTE PTR [rax],al
   140002004:	add    BYTE PTR [rax],al
   140002006:	add    BYTE PTR [rax],al
   140002008:	sub    BYTE PTR [rdi],ah
   14000200a:	add    BYTE PTR [rax],al
   14000200c:	add    BYTE PTR [rax],al
   14000200e:	add    BYTE PTR [rax],al
   140002010:	cmp    ah,BYTE PTR [rdi]
   140002012:	add    BYTE PTR [rax],al
   140002014:	add    BYTE PTR [rax],al
   140002016:	add    BYTE PTR [rax],al
   140002018:	jo     0x140002043
   14000201a:	add    BYTE PTR [rax],al
   14000201c:	add    BYTE PTR [rax],al
   14000201e:	add    BYTE PTR [rax],al
   140002020:	push   rsp
   140002021:	sub    DWORD PTR [rax],eax
   140002023:	add    BYTE PTR [rax],al
   140002025:	add    BYTE PTR [rax],al
   140002027:	add    BYTE PTR [rax+0x29],al
   14000202a:	add    BYTE PTR [rax],al
   14000202c:	add    BYTE PTR [rax],al
   14000202e:	add    BYTE PTR [rax],al
   140002030:	sub    DWORD PTR es:[rax],eax
   140002033:	add    BYTE PTR [rax],al
   140002035:	add    BYTE PTR [rax],al
   140002037:	add    BYTE PTR [rdx],dl
   140002039:	sub    DWORD PTR [rax],eax
   14000203b:	add    BYTE PTR [rax],al
   14000203d:	add    BYTE PTR [rax],al
   14000203f:	add    BYTE PTR [rdx],al
   140002041:	sub    DWORD PTR [rax],eax
   140002043:	add    BYTE PTR [rax],al
   140002045:	add    BYTE PTR [rax],al
   140002047:	add    al,ch
   140002049:	sub    BYTE PTR [rax],al
   14000204b:	add    BYTE PTR [rax],al
   14000204d:	add    BYTE PTR [rax],al
   14000204f:	add    dl,dl
   140002051:	sub    BYTE PTR [rax],al
   140002053:	add    BYTE PTR [rax],al
   140002055:	add    BYTE PTR [rax],al
   140002057:	add    BYTE PTR [rax+rbp*1+0x0],bh
   14000205e:	add    BYTE PTR [rax],al
   140002060:	movabs ds:0x8e00000000000028,al
   140002069:	sub    BYTE PTR [rax],al
   14000206b:	add    BYTE PTR [rax],al
   14000206d:	add    BYTE PTR [rax],al
   14000206f:	add    BYTE PTR [rax+0x28],dh
   140002072:	add    BYTE PTR [rax],al
   140002074:	add    BYTE PTR [rax],al
   140002076:	add    BYTE PTR [rax],al
   140002078:	pop    rsi
   140002079:	sub    BYTE PTR [rax],al
   14000207b:	add    BYTE PTR [rax],al
   14000207d:	add    BYTE PTR [rax],al
   14000207f:	add    BYTE PTR [rsi+0x28],dl
   140002082:	add    BYTE PTR [rax],al
   140002084:	add    BYTE PTR [rax],al
   140002086:	add    BYTE PTR [rax],al
   140002088:	test   BYTE PTR [rcx],ch
	...
   140002096:	add    BYTE PTR [rax],al
   140002098:	adc    al,0x28
   14000209a:	add    BYTE PTR [rax],al
   14000209c:	add    BYTE PTR [rax],al
   14000209e:	add    BYTE PTR [rax],al
   1400020a0:	push   rsi
   1400020a1:	(bad)  
   1400020a2:	add    BYTE PTR [rax],al
   1400020a4:	add    BYTE PTR [rax],al
   1400020a6:	add    BYTE PTR [rax],al
   1400020a8:	fs (bad) 
   1400020aa:	add    BYTE PTR [rax],al
   1400020ac:	add    BYTE PTR [rax],al
   1400020ae:	add    BYTE PTR [rax],al
   1400020b0:	cld    
   1400020b1:	(bad)  
   1400020b2:	add    BYTE PTR [rax],al
   1400020b4:	add    BYTE PTR [rax],al
   1400020b6:	add    BYTE PTR [rax],al
   1400020b8:	repnz (bad) 
   1400020ba:	add    BYTE PTR [rax],al
   1400020bc:	add    BYTE PTR [rax],al
   1400020be:	add    BYTE PTR [rax],al
   1400020c0:	call   0x1400020ec
   1400020c5:	add    BYTE PTR [rax],al
   1400020c7:	add    al,dl
   1400020c9:	(bad)  
   1400020ca:	add    BYTE PTR [rax],al
   1400020cc:	add    BYTE PTR [rax],al
   1400020ce:	add    BYTE PTR [rax],al
   1400020d0:	(bad)  
   1400020d1:	(bad)  
   1400020d2:	add    BYTE PTR [rax],al
   1400020d4:	add    BYTE PTR [rax],al
   1400020d6:	add    BYTE PTR [rax],al
   1400020d8:	mov    al,0x27
   1400020da:	add    BYTE PTR [rax],al
   1400020dc:	add    BYTE PTR [rax],al
   1400020de:	add    BYTE PTR [rax],al
   1400020e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400020e1:	(bad)  
   1400020e2:	add    BYTE PTR [rax],al
   1400020e4:	add    BYTE PTR [rax],al
   1400020e6:	add    BYTE PTR [rax],al
   1400020e8:	sahf   
   1400020e9:	(bad)  
   1400020ea:	add    BYTE PTR [rax],al
   1400020ec:	add    BYTE PTR [rax],al
   1400020ee:	add    BYTE PTR [rax],al
   1400020f0:	xchg   esi,eax
   1400020f1:	(bad)  
   1400020f2:	add    BYTE PTR [rax],al
   1400020f4:	add    BYTE PTR [rax],al
   1400020f6:	add    BYTE PTR [rax],al
   1400020f8:	test   BYTE PTR [rdi],ah
   1400020fa:	add    BYTE PTR [rax],al
   1400020fc:	add    BYTE PTR [rax],al
   1400020fe:	add    BYTE PTR [rax],al
   140002100:	jb     0x140002129
	...
   14000210e:	add    BYTE PTR [rax],al
   140002110:	sub    BYTE PTR [rax],ch
   140002112:	add    BYTE PTR [rax],al
   140002114:	add    BYTE PTR [rax],al
   140002116:	add    BYTE PTR [rax],al
   140002118:	cmp    ch,BYTE PTR [rax]
	...
   140002126:	add    BYTE PTR [rax],al
   140002128:	rcl    BYTE PTR [rdi],1
   14000212a:	add    BYTE PTR [rax+0x1],al
   14000212d:	add    BYTE PTR [rax],al
   14000212f:	add    BYTE PTR [rax+0x1400019],dh
	...
   14000213d:	add    BYTE PTR [rax],al
   14000213f:	add    BYTE PTR [rax+0x1400011],dl
	...
   140002155:	add    BYTE PTR [rax],al
   140002157:	add    BYTE PTR [rax+0x1400010],dh
   14000215d:	add    BYTE PTR [rax],al
   14000215f:	add    BYTE PTR [rax],al
   140002161:	adc    eax,0x14000
	...
   14000216e:	add    BYTE PTR [rax],al
   140002170:	mov    al,0x10
   140002172:	add    BYTE PTR [rax],al
   140002174:	nop
   140002175:	adc    DWORD PTR [rax],eax
   140002177:	add    BYTE PTR [rax+0x14],ah
   14000217a:	add    BYTE PTR [rax],al
   14000217c:	rcl    BYTE PTR [rax+rax*1],0x0
   140002180:	add    BYTE PTR [rip+0x17a00000],dl        # 0x157a02186
   140002186:	add    BYTE PTR [rax],al
   140002188:	rcl    BYTE PTR [rdi],1
   14000218a:	add    BYTE PTR [rax],al
   14000218c:	and    BYTE PTR [rax],bl
   14000218e:	add    BYTE PTR [rax],al
   140002190:	(bad)  
   140002191:	xor    BYTE PTR [rax],al
   140002193:	rex add DWORD PTR [rax],eax
   140002196:	add    BYTE PTR [rax],al
   140002198:	add    BYTE PTR [rcx],dh
   14000219a:	add    BYTE PTR [rax+0x1],al
   14000219d:	add    BYTE PTR [rax],al
   14000219f:	add    BYTE PTR [rdi+0x0],dh
   1400021a2:	ins    DWORD PTR es:[rdi],dx
   1400021a3:	add    BYTE PTR [rax+0x0],dh
   1400021a6:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400021ab:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400021af:	add    BYTE PTR [rax],al
   1400021b1:	add    BYTE PTR [rax],al
   1400021b3:	add    BYTE PTR [rcx+0x559f38],al
   1400021b9:	add    BYTE PTR [rax],al
   1400021bb:	add    BYTE PTR [rdx],al
   1400021bd:	add    BYTE PTR [rax],al
   1400021bf:	add    BYTE PTR [rsi],ah
   1400021c1:	add    BYTE PTR [rax],al
   1400021c3:	add    BYTE PTR [rax-0x4fffffde],dh
   1400021c9:	adc    al,BYTE PTR [rax]
   1400021cb:	add    BYTE PTR [rax],al
   1400021cd:	add    BYTE PTR [rax],al
   1400021cf:	add    BYTE PTR [rcx+0x559f38],al
   1400021d5:	add    BYTE PTR [rax],al
   1400021d7:	add    BYTE PTR [rip+0xffffffffe0000000],cl        # 0x1200021dd
   1400021dd:	add    DWORD PTR [rax],eax
   1400021df:	add    ah,ch
   1400021e1:	and    al,BYTE PTR [rax]
   1400021e3:	add    ah,ch
   1400021e5:	adc    al,BYTE PTR [rax]
	...
   14000220f:	add    BYTE PTR [rax+0x0],ah
	...
   140002265:	add    BYTE PTR [rax],al
   140002267:	add    BYTE PTR [rax],cl
   140002269:	xor    BYTE PTR [rax],al
   14000226b:	rex add DWORD PTR [rax],eax
	...
   14000227e:	add    BYTE PTR [rax],al
   140002280:	sub    BYTE PTR [rcx],ah
   140002282:	add    BYTE PTR [rax+0x1],al
   140002285:	add    BYTE PTR [rax],al
   140002287:	add    BYTE PTR [rax],dh
   140002289:	and    DWORD PTR [rax],eax
   14000228b:	rex add DWORD PTR [rax],eax
   14000228e:	add    BYTE PTR [rax],al
   140002290:	jo     0x1400022b3
   140002292:	add    BYTE PTR [rax+0x1],al
   140002295:	add    BYTE PTR [rax],al
   140002297:	add    BYTE PTR [rax],cl
	...
   1400022a1:	xor    eax,0x0
	...
   1400022ae:	add    BYTE PTR [rax],al
   1400022b0:	push   rdx
   1400022b1:	push   rbx
   1400022b2:	rex.R push rbx
   1400022b4:	ins    BYTE PTR es:[rdi],dx
   1400022b5:	push   0x1b231bc9
   1400022ba:	rex.WR
   1400022bb:	rex.RXB xchg r12d,eax
   1400022bd:	movabs eax,ds:0x135cfc9afd26c
   1400022c6:	add    BYTE PTR [rax],al
   1400022c8:	ja     0x140002337
   1400022ca:	jo     0x14000232f
   1400022cc:	outs   dx,DWORD PTR ds:[rsi]
   1400022cd:	outs   dx,BYTE PTR ds:[rsi]
   1400022ce:	imul   sp,WORD PTR [rdi+0x2e],0x6470
   1400022d4:	(bad)  
	...
   1400022e9:	add    BYTE PTR [rax],al
   1400022eb:	add    BYTE PTR [rdi+0x43],al
   1400022ee:	push   rsp
   1400022ef:	rex.WR add BYTE PTR [rax],r10b
   1400022f2:	add    BYTE PTR [rax],al
   1400022f4:	movabs al,ds:0x747865742e000009
   1400022fd:	and    al,0x6d
   1400022ff:	outs   dx,BYTE PTR ds:[rsi]
   140002300:	add    BYTE PTR [rax],al
   140002302:	add    BYTE PTR [rax],al
   140002304:	movabs al,ds:0x2e00000012000019
   14000230d:	je     0x140002374
   14000230f:	js     0x140002385
   140002311:	and    al,0x6d
   140002313:	outs   dx,BYTE PTR ds:[rsi]
   140002314:	and    al,0x30
   140002316:	xor    BYTE PTR [rax],al
   140002318:	rcr    BYTE PTR [rcx],0x0
   14000231b:	add    BYTE PTR [rax+0x0],dl
   14000231e:	add    BYTE PTR [rax],al
   140002320:	cs je  0x140002388
   140002323:	js     0x140002399
   140002325:	and    al,0x78
   140002327:	add    BYTE PTR [rax],al
   140002329:	and    BYTE PTR [rax],al
   14000232b:	add    BYTE PTR [rax],ch
   14000232d:	add    DWORD PTR [rax],eax
   14000232f:	add    BYTE PTR [rsi],ch
   140002331:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140002339:	add    BYTE PTR [rax],al
   14000233b:	add    BYTE PTR [rax],ch
   14000233d:	and    DWORD PTR [rax],eax
   14000233f:	add    BYTE PTR [rax],dl
   140002341:	add    BYTE PTR [rax],al
   140002343:	add    BYTE PTR [rsi],ch
   140002345:	xor    BYTE PTR [rax],dh
   140002347:	movsxd esp,DWORD PTR [rsi+0x67]
   14000234a:	add    BYTE PTR [rax],al
   14000234c:	cmp    BYTE PTR [rcx],ah
   14000234e:	add    BYTE PTR [rax],al
   140002350:	or     BYTE PTR [rax],al
   140002352:	add    BYTE PTR [rax],al
   140002354:	cs rex.XB push r10
   140002357:	push   rsp
   140002358:	and    al,0x58
   14000235a:	rex.XB
   14000235b:	add    BYTE PTR [r8],al
   14000235e:	add    BYTE PTR [rax],al
   140002360:	rex and DWORD PTR [rax],eax
   140002363:	add    BYTE PTR [rax],cl
   140002365:	add    BYTE PTR [rax],al
   140002367:	add    BYTE PTR [rsi],ch
   140002369:	rex.XB push r10
   14000236b:	push   rsp
   14000236c:	and    al,0x58
   14000236e:	rex.XB
   14000236f:	rex.B
   140002370:	add    BYTE PTR [r8],al
   140002373:	add    BYTE PTR [rax+0x21],cl
   140002376:	add    BYTE PTR [rax],al
   140002378:	or     BYTE PTR [rax],al
   14000237a:	add    BYTE PTR [rax],al
   14000237c:	cs rex.XB push r10
   14000237f:	push   rsp
   140002380:	and    al,0x58
   140002382:	rex.XB pop r10
   140002384:	add    BYTE PTR [rax],al
   140002386:	add    BYTE PTR [rax],al
   140002388:	push   rax
   140002389:	and    DWORD PTR [rax],eax
   14000238b:	add    BYTE PTR [rax],cl
   14000238d:	add    BYTE PTR [rax],al
   14000238f:	add    BYTE PTR [rsi],ch
   140002391:	rex.XB push r10
   140002393:	push   rsp
   140002394:	and    al,0x58
   140002396:	rex.WB
   140002397:	add    BYTE PTR [r8],al
   14000239a:	add    BYTE PTR [rax],al
   14000239c:	pop    rax
   14000239d:	and    DWORD PTR [rax],eax
   14000239f:	add    BYTE PTR [rax],cl
   1400023a1:	add    BYTE PTR [rax],al
   1400023a3:	add    BYTE PTR [rsi],ch
   1400023a5:	rex.XB push r10
   1400023a7:	push   rsp
   1400023a8:	and    al,0x58
   1400023aa:	rex.WB
   1400023ab:	rex.B
   1400023ac:	add    BYTE PTR [r8],al
   1400023af:	add    BYTE PTR [rax+0x21],ah
   1400023b2:	add    BYTE PTR [rax],al
   1400023b4:	or     BYTE PTR [rax],al
   1400023b6:	add    BYTE PTR [rax],al
   1400023b8:	cs rex.XB push r10
   1400023bb:	push   rsp
   1400023bc:	and    al,0x58
   1400023be:	rex.WB pop r9
   1400023c0:	add    BYTE PTR [rax],al
   1400023c2:	add    BYTE PTR [rax],al
   1400023c4:	push   0x8000021
   1400023c9:	add    BYTE PTR [rax],al
   1400023cb:	add    BYTE PTR [rsi],ch
   1400023cd:	rex.XB push r10
   1400023cf:	push   rsp
   1400023d0:	and    al,0x58
   1400023d2:	rex.WB pop r10
   1400023d4:	add    BYTE PTR [rax],al
   1400023d6:	add    BYTE PTR [rax],al
   1400023d8:	jo     0x1400023fb
   1400023da:	add    BYTE PTR [rax],al
   1400023dc:	and    BYTE PTR [rax],al
   1400023de:	add    BYTE PTR [rax],al
   1400023e0:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   1400023e9:	add    BYTE PTR [rax],al
   1400023eb:	add    BYTE PTR [rax+0x20000021],dl
   1400023f1:	add    DWORD PTR [rax],eax
   1400023f3:	add    BYTE PTR [rsi],ch
   1400023f5:	jb     0x14000245b
   1400023f7:	(bad)  
   1400023f8:	je     0x14000245b
   1400023fa:	add    BYTE PTR [rax],al
   1400023fc:	mov    al,0x22
   1400023fe:	add    BYTE PTR [rax],al
   140002400:	sbb    al,0x2
   140002402:	add    BYTE PTR [rax],al
   140002404:	cs jb  0x14000246b
   140002407:	(bad)  
   140002408:	je     0x14000246b
   14000240a:	and    al,0x7a
   14000240c:	jp     0x140002488
   14000240e:	fs (bad) 
   140002410:	add    BYTE PTR [eax],al
   140002413:	add    al,dl
   140002415:	and    al,0x0
   140002417:	add    ah,cl
   140002419:	add    BYTE PTR [rax],al
   14000241b:	add    BYTE PTR [rsi],ch
   14000241d:	js     0x140002483
   14000241f:	(bad)  
   140002420:	je     0x140002483
   140002422:	add    BYTE PTR [rax],al
   140002424:	pushf  
   140002425:	and    eax,0x3c0000
   14000242a:	add    BYTE PTR [rax],al
   14000242c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140002435:	add    BYTE PTR [rax],al
   140002437:	add    al,bl
   140002439:	and    eax,0x140000
   14000243e:	add    BYTE PTR [rax],al
   140002440:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140002449:	add    BYTE PTR [rax],al
   14000244b:	add    al,dh
   14000244d:	and    eax,0x1280000
   140002452:	add    BYTE PTR [rax],al
   140002454:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   14000245d:	add    BYTE PTR [rax],al
   14000245f:	add    BYTE PTR [rax],bl
   140002461:	(bad)  
   140002462:	add    BYTE PTR [rax],al
   140002464:	add    BYTE PTR [rdx],0x0
   140002467:	add    BYTE PTR [rsi],ch
   140002469:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140002471:	add    BYTE PTR [rax],al
   140002473:	add    BYTE PTR [rax],al
   140002475:	xor    BYTE PTR [rax],al
   140002477:	add    BYTE PTR [rax],ah
   140002479:	add    BYTE PTR [rax],al
   14000247b:	add    BYTE PTR [rsi],ch
   14000247d:	fs (bad) 
   14000247f:	je     0x1400024e2
   140002481:	add    BYTE PTR [rax],al
   140002483:	add    BYTE PTR [rax],ah
   140002485:	xor    BYTE PTR [rax],al
   140002487:	add    al,ah
   140002489:	add    eax,0x622e0000
   14000248e:	jae    0x140002503
   140002490:	add    BYTE PTR [rax],al
   140002492:	add    BYTE PTR [rax],al
   140002494:	add    BYTE PTR [rax+0x0],al
   140002497:	add    ah,cl
   140002499:	add    BYTE PTR [rax],al
   14000249b:	add    BYTE PTR [rsi],ch
   14000249d:	jo     0x140002503
   14000249f:	(bad)  
   1400024a0:	je     0x140002503
   1400024a2:	add    BYTE PTR [rax],al
   1400024a4:	add    BYTE PTR [rax+0x0],dl
   1400024a7:	add    BYTE PTR [rsp+rax*1+0x0],cl
   1400024ab:	add    BYTE PTR [rsi],ch
   1400024ad:	jb     0x140002522
   1400024af:	jb     0x140002514
   1400024b1:	and    al,0x30
   1400024b3:	xor    DWORD PTR [rax],eax
   1400024b5:	add    BYTE PTR [rax],al
   1400024b7:	add    BYTE PTR [rax+0x54],dl
   1400024ba:	add    BYTE PTR [rax],al
   1400024bc:	add    BYTE PTR [rcx+0x1],dh
   1400024bf:	add    BYTE PTR [rsi],ch
   1400024c1:	jb     0x140002536
   1400024c3:	jb     0x140002528
   1400024c5:	and    al,0x30
   1400024c7:	xor    al,BYTE PTR [rax]
   1400024c9:	add    BYTE PTR [rax],al
   1400024cb:	add    BYTE PTR [rax],al
   1400024cd:	add    BYTE PTR [rax],al
   1400024cf:	add    BYTE PTR [rcx],al
   1400024d1:	adc    al,0x8
   1400024d3:	add    BYTE PTR [rsp+riz*2],dl
   1400024d6:	or     BYTE PTR [rax],al
   1400024d8:	adc    al,0x54
   1400024da:	(bad)  
   1400024db:	add    BYTE PTR [rsp+rsi*1],dl
   1400024de:	(bad)  
   1400024df:	add    BYTE PTR [rdx+rsi*1],dl
   1400024e2:	adc    BYTE PTR [rax+0x1],dh
   1400024e5:	add    al,0x1
   1400024e7:	add    BYTE PTR [rdx+rax*2],al
   1400024ea:	add    BYTE PTR [rax],al
   1400024ec:	add    DWORD PTR [rcx+rax*1],eax
   1400024ef:	add    BYTE PTR [rdx+riz*2],al
   1400024f2:	add    BYTE PTR [rax],al
   1400024f4:	or     DWORD PTR [rbx+rcx*1],ebx
   1400024f7:	add    BYTE PTR [rsp+rsi*2],bl
   1400024fa:	sbb    al,0x0
   1400024fc:	sbb    al,0x64
   1400024fe:	sbb    eax,DWORD PTR [rax]
   140002500:	sbb    al,0x34
   140002502:	sbb    al,BYTE PTR [rax]
   140002504:	sbb    al,0x1
   140002506:	(bad)  
   140002507:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e038fd
   14000250d:	rol    BYTE PTR [rax],0x0
   140002510:	mov    dh,0x17
   140002512:	add    BYTE PTR [rax],al
   140002514:	add    DWORD PTR [rax],eax
   140002516:	add    BYTE PTR [rax],al
   140002518:	adc    BYTE PTR [rdx],dl
   14000251a:	add    BYTE PTR [rax],al
   14000251c:	(bad)  
   14000251d:	adc    al,0x0
   14000251f:	add    dh,al
   140002521:	sbb    DWORD PTR [rax],eax
   140002523:	add    BYTE PTR [rsi],al
   140002525:	adc    al,0x0
   140002527:	add    BYTE PTR [rcx],al
   140002529:	add    BYTE PTR [rax],al
   14000252b:	add    BYTE PTR [rcx],cl
   14000252d:	add    al,0x1
   14000252f:	add    BYTE PTR [rdx+riz*1],al
   140002532:	add    BYTE PTR [rax],al
   140002534:	mov    dh,0x17
   140002536:	add    BYTE PTR [rax],al
   140002538:	add    DWORD PTR [rax],eax
   14000253a:	add    BYTE PTR [rax],al
   14000253c:	cmp    al,0x15
   14000253e:	add    BYTE PTR [rax],al
   140002540:	jb     0x140002557
   140002542:	add    BYTE PTR [rax],al
   140002544:	add    DWORD PTR [rax],eax
   140002546:	add    BYTE PTR [rax],al
   140002548:	jb     0x14000255f
   14000254a:	add    BYTE PTR [rax],al
   14000254c:	add    DWORD PTR [rsi],eax
   14000254e:	add    al,BYTE PTR [rax]
   140002550:	(bad)  
   140002551:	xor    al,BYTE PTR [rdx]
   140002553:	xor    BYTE PTR [rcx],cl
   140002555:	or     al,BYTE PTR [rax+rax*1]
   140002558:	or     dh,BYTE PTR [rsi+rax*1]
   14000255b:	add    BYTE PTR [rdx],cl
   14000255d:	xor    al,BYTE PTR [rsi]
   14000255f:	jo     0x140002517
   140002561:	(bad)  
   140002562:	add    BYTE PTR [rax],al
   140002564:	add    DWORD PTR [rax],eax
   140002566:	add    BYTE PTR [rax],al
   140002568:	cmp    eax,0x70000016
   14000256d:	(bad)  
   14000256e:	add    BYTE PTR [rax],al
   140002570:	lock sbb DWORD PTR [rax],eax
   140002573:	add    BYTE PTR [rax+0x16],dh
   140002576:	add    BYTE PTR [rax],al
   140002578:	add    DWORD PTR [rsi],eax
   14000257a:	add    al,BYTE PTR [rax]
   14000257c:	(bad)  
   14000257d:	xor    al,BYTE PTR [rdx]
   14000257f:	push   rax
   140002580:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d258a
   140002586:	or     DWORD PTR [rax],eax
   140002588:	or     eax,0x1500632
   14000258d:	or     al,0x2
   14000258f:	add    BYTE PTR [rcx+rax*1],cl
   140002592:	adc    DWORD PTR [rax],eax
   140002594:	add    BYTE PTR [rax],al
   140002596:	add    BYTE PTR [rax],al
   140002598:	add    DWORD PTR [rax],eax
   14000259a:	add    BYTE PTR [rax],al
   14000259c:	lock and eax,0x0
   1400025a2:	add    BYTE PTR [rax],al
   1400025a4:	add    BYTE PTR [rax],al
   1400025a6:	add    BYTE PTR [rax],al
   1400025a8:	rex.W (bad) 
   1400025aa:	add    BYTE PTR [rax],al
   1400025ac:	add    BYTE PTR [rax],ah
   1400025ae:	add    BYTE PTR [rax],al
   1400025b0:	mov    BYTE PTR [rsi],ah
	...
   1400025ba:	add    BYTE PTR [rax],al
   1400025bc:	or     BYTE PTR [rax],ch
   1400025be:	add    BYTE PTR [rax],al
   1400025c0:	cwde   
   1400025c1:	and    BYTE PTR [rax],al
   1400025c3:	add    BYTE PTR [rax],al
   1400025c5:	(bad)  
	...
   1400025ce:	add    BYTE PTR [rax],al
   1400025d0:	rex.WR sub BYTE PTR [rax],r8b
   1400025d3:	add    BYTE PTR [rax],dl
   1400025d5:	and    DWORD PTR [rax],eax
	...
   1400025ef:	add    BYTE PTR [rax],bl
   1400025f1:	(bad)  
   1400025f2:	add    BYTE PTR [rax],al
   1400025f4:	add    BYTE PTR [rax],al
   1400025f6:	add    BYTE PTR [rax],al
   1400025f8:	sub    BYTE PTR [rdi],ah
   1400025fa:	add    BYTE PTR [rax],al
   1400025fc:	add    BYTE PTR [rax],al
   1400025fe:	add    BYTE PTR [rax],al
   140002600:	cmp    ah,BYTE PTR [rdi]
   140002602:	add    BYTE PTR [rax],al
   140002604:	add    BYTE PTR [rax],al
   140002606:	add    BYTE PTR [rax],al
   140002608:	jo     0x140002633
   14000260a:	add    BYTE PTR [rax],al
   14000260c:	add    BYTE PTR [rax],al
   14000260e:	add    BYTE PTR [rax],al
   140002610:	push   rsp
   140002611:	sub    DWORD PTR [rax],eax
   140002613:	add    BYTE PTR [rax],al
   140002615:	add    BYTE PTR [rax],al
   140002617:	add    BYTE PTR [rax+0x29],al
   14000261a:	add    BYTE PTR [rax],al
   14000261c:	add    BYTE PTR [rax],al
   14000261e:	add    BYTE PTR [rax],al
   140002620:	sub    DWORD PTR es:[rax],eax
   140002623:	add    BYTE PTR [rax],al
   140002625:	add    BYTE PTR [rax],al
   140002627:	add    BYTE PTR [rdx],dl
   140002629:	sub    DWORD PTR [rax],eax
   14000262b:	add    BYTE PTR [rax],al
   14000262d:	add    BYTE PTR [rax],al
   14000262f:	add    BYTE PTR [rdx],al
   140002631:	sub    DWORD PTR [rax],eax
   140002633:	add    BYTE PTR [rax],al
   140002635:	add    BYTE PTR [rax],al
   140002637:	add    al,ch
   140002639:	sub    BYTE PTR [rax],al
   14000263b:	add    BYTE PTR [rax],al
   14000263d:	add    BYTE PTR [rax],al
   14000263f:	add    dl,dl
   140002641:	sub    BYTE PTR [rax],al
   140002643:	add    BYTE PTR [rax],al
   140002645:	add    BYTE PTR [rax],al
   140002647:	add    BYTE PTR [rax+rbp*1+0x0],bh
   14000264e:	add    BYTE PTR [rax],al
   140002650:	movabs ds:0x8e00000000000028,al
   140002659:	sub    BYTE PTR [rax],al
   14000265b:	add    BYTE PTR [rax],al
   14000265d:	add    BYTE PTR [rax],al
   14000265f:	add    BYTE PTR [rax+0x28],dh
   140002662:	add    BYTE PTR [rax],al
   140002664:	add    BYTE PTR [rax],al
   140002666:	add    BYTE PTR [rax],al
   140002668:	pop    rsi
   140002669:	sub    BYTE PTR [rax],al
   14000266b:	add    BYTE PTR [rax],al
   14000266d:	add    BYTE PTR [rax],al
   14000266f:	add    BYTE PTR [rsi+0x28],dl
   140002672:	add    BYTE PTR [rax],al
   140002674:	add    BYTE PTR [rax],al
   140002676:	add    BYTE PTR [rax],al
   140002678:	test   BYTE PTR [rcx],ch
	...
   140002686:	add    BYTE PTR [rax],al
   140002688:	adc    al,0x28
   14000268a:	add    BYTE PTR [rax],al
   14000268c:	add    BYTE PTR [rax],al
   14000268e:	add    BYTE PTR [rax],al
   140002690:	push   rsi
   140002691:	(bad)  
   140002692:	add    BYTE PTR [rax],al
   140002694:	add    BYTE PTR [rax],al
   140002696:	add    BYTE PTR [rax],al
   140002698:	fs (bad) 
   14000269a:	add    BYTE PTR [rax],al
   14000269c:	add    BYTE PTR [rax],al
   14000269e:	add    BYTE PTR [rax],al
   1400026a0:	cld    
   1400026a1:	(bad)  
   1400026a2:	add    BYTE PTR [rax],al
   1400026a4:	add    BYTE PTR [rax],al
   1400026a6:	add    BYTE PTR [rax],al
   1400026a8:	repnz (bad) 
   1400026aa:	add    BYTE PTR [rax],al
   1400026ac:	add    BYTE PTR [rax],al
   1400026ae:	add    BYTE PTR [rax],al
   1400026b0:	call   0x1400026dc
   1400026b5:	add    BYTE PTR [rax],al
   1400026b7:	add    al,dl
   1400026b9:	(bad)  
   1400026ba:	add    BYTE PTR [rax],al
   1400026bc:	add    BYTE PTR [rax],al
   1400026be:	add    BYTE PTR [rax],al
   1400026c0:	(bad)  
   1400026c1:	(bad)  
   1400026c2:	add    BYTE PTR [rax],al
   1400026c4:	add    BYTE PTR [rax],al
   1400026c6:	add    BYTE PTR [rax],al
   1400026c8:	mov    al,0x27
   1400026ca:	add    BYTE PTR [rax],al
   1400026cc:	add    BYTE PTR [rax],al
   1400026ce:	add    BYTE PTR [rax],al
   1400026d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400026d1:	(bad)  
   1400026d2:	add    BYTE PTR [rax],al
   1400026d4:	add    BYTE PTR [rax],al
   1400026d6:	add    BYTE PTR [rax],al
   1400026d8:	sahf   
   1400026d9:	(bad)  
   1400026da:	add    BYTE PTR [rax],al
   1400026dc:	add    BYTE PTR [rax],al
   1400026de:	add    BYTE PTR [rax],al
   1400026e0:	xchg   esi,eax
   1400026e1:	(bad)  
   1400026e2:	add    BYTE PTR [rax],al
   1400026e4:	add    BYTE PTR [rax],al
   1400026e6:	add    BYTE PTR [rax],al
   1400026e8:	test   BYTE PTR [rdi],ah
   1400026ea:	add    BYTE PTR [rax],al
   1400026ec:	add    BYTE PTR [rax],al
   1400026ee:	add    BYTE PTR [rax],al
   1400026f0:	jb     0x140002719
	...
   1400026fe:	add    BYTE PTR [rax],al
   140002700:	sub    BYTE PTR [rax],ch
   140002702:	add    BYTE PTR [rax],al
   140002704:	add    BYTE PTR [rax],al
   140002706:	add    BYTE PTR [rax],al
   140002708:	cmp    ch,BYTE PTR [rax]
	...
   140002716:	add    BYTE PTR [rax],al
   140002718:	scas   eax,DWORD PTR es:[rdi]
   140002719:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000271d:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140002726:	add    BYTE PTR [rax],al
   140002728:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140002729:	add    al,BYTE PTR [rdi+0x65]
   14000272c:	je     0x14000277e
   14000272e:	jb     0x14000279f
   140002730:	movsxd eax,DWORD PTR [rcx+0x64]
   140002733:	fs jb  0x14000279b
   140002736:	jae    0x1400027ab
   140002738:	add    BYTE PTR [rax],al
   14000273a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000273b:	add    DWORD PTR [rsi+0x72],eax
   14000273e:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140002748:	rex.WXB
   140002749:	rex.RB push r10
   14000274b:	rex.WRX
   14000274c:	rex.RB
   14000274d:	xor    r14,QWORD PTR [rdx]
   140002750:	cs fs ins BYTE PTR es:[rdi],dx
   140002753:	ins    BYTE PTR es:[rdi],dx
   140002754:	add    BYTE PTR [rax],al
   140002756:	push   rbp
   140002757:	add    BYTE PTR [rdi+0x58],bl
   14000275a:	movsxd esi,DWORD PTR [rax+0x74]
   14000275d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140002766:	pop    rdi
   140002767:	(bad)  
   140002768:	ins    DWORD PTR es:[rdi],dx
   140002769:	jae    0x1400027d2
   14000276b:	pop    rdi
   14000276c:	gs js  0x1400027d8
   14000276f:	je     0x140002771
   140002771:	add    BYTE PTR [rbp+0x775f5f00],bl
   140002777:	addr32 gs je 0x1400027e8
   14000277b:	(bad)  
   14000277c:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140002783:	add    BYTE PTR [rsi+0x735f5f00],cl
   140002789:	gs je  0x1400027eb
   14000278c:	(bad)  
   14000278d:	jo     0x1400027ff
   14000278f:	pop    rdi
   140002790:	je     0x14000280b
   140002792:	jo     0x1400027f9
   140002794:	add    BYTE PTR [rax],al
   140002796:	xor    al,BYTE PTR [riz*2+0x746978]
   14000279d:	add    BYTE PTR [rsi],cl
   14000279f:	add    DWORD PTR [rdi+0x65],ebx
   1400027a2:	js     0x14000280d
   1400027a4:	je     0x1400027a6
   1400027a6:	rol    DWORD PTR [rax],0x5f
   1400027a9:	movsxd esp,DWORD PTR [rbp+0x78]
   1400027ac:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   1400027b4:	jae    0x14000281b
   1400027b6:	je     0x14000282d
   1400027b8:	jae    0x14000281f
   1400027ba:	jb     0x140002829
   1400027bc:	(bad)  
   1400027bd:	je     0x140002827
   1400027bf:	gs jb  0x140002834
   1400027c2:	add    BYTE PTR [rax],al
   1400027c4:	jge    0x1400027c7
   1400027c6:	pop    rdi
   1400027c7:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400027ce:	ins    DWORD PTR es:[rdi],dx
   1400027cf:	add    BYTE PTR [rdi+0x0],dl
   1400027d2:	pop    rdi
   1400027d3:	pop    rdi
   1400027d4:	rex.XB pop r15
   1400027d6:	jae    0x140002848
   1400027d8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400027dc:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400027e3:	ins    BYTE PTR es:[rdi],dx
   1400027e4:	gs jb  0x1400027e7
   1400027e7:	add    BYTE PTR [rdx+0x63775f03],al
   1400027ed:	ins    DWORD PTR es:[rdi],dx
   1400027ee:	fs ins BYTE PTR es:[rdi],dx
   1400027f0:	outs   dx,BYTE PTR ds:[rsi]
   1400027f1:	add    BYTE PTR [rdi],ah
   1400027f3:	add    DWORD PTR [rdi+0x66],ebx
   1400027f6:	ins    DWORD PTR es:[rdi],dx
   1400027f7:	outs   dx,DWORD PTR ds:[rsi]
   1400027f8:	fs add BYTE PTR gs:[rax],al
   1400027fc:	rol    BYTE PTR [rax],cl
   1400027fe:	pop    rdi
   1400027ff:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140002802:	ins    DWORD PTR es:[rdi],dx
   140002803:	outs   dx,DWORD PTR ds:[rsi]
   140002804:	fs add BYTE PTR gs:[rax],al
   140002808:	ins    DWORD PTR es:[rdi],dx
   140002809:	jae    0x140002881
   14000280b:	movsxd esi,DWORD PTR [rdx+0x74]
   14000280e:	cs fs ins BYTE PTR es:[rdi],dx
   140002811:	ins    BYTE PTR es:[rdi],dx
   140002812:	add    BYTE PTR [rax],al
   140002814:	(bad)  
   140002815:	add    BYTE PTR [rdi],bh
   140002817:	je     0x14000287e
   140002819:	jb     0x140002888
   14000281b:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140002822:	pop    rcx
   140002823:	pop    r8
   140002825:	pop    rax
   140002826:	pop    rdx
   140002827:	add    BYTE PTR [rcx+0x0],ah
   14000282a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000282c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000282e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140002836:	rex.RB js 0x140002839
   140002839:	add    BYTE PTR [rax+0x556f4300],dl
   14000283f:	outs   dx,BYTE PTR ds:[rsi]
   140002840:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140002847:	imul   edi,DWORD PTR [rdx+0x65],0x6c6f0000
   14000284e:	xor    esi,DWORD PTR gs:[rdx]
   140002851:	cs fs ins BYTE PTR es:[rdi],dx
   140002854:	ins    BYTE PTR es:[rdi],dx
   140002855:	add    BYTE PTR [rbp+0x5],ch
   140002858:	push   rbx
   140002859:	ins    BYTE PTR es:[rdi],dx
   14000285a:	gs gs jo 0x14000285e
   14000285e:	mov    DWORD PTR [rdx],0x53746547
   140002864:	je     0x1400028c7
   140002866:	jb     0x1400028dc
   140002868:	jne    0x1400028da
   14000286a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000286c:	outs   dx,WORD PTR ds:[rsi]
   14000286e:	push   rdi
   14000286f:	add    BYTE PTR [rsi+0x5],bl
   140002872:	push   rbx
   140002873:	gs je  0x1400028cb
   140002876:	outs   dx,BYTE PTR ds:[rsi]
   140002877:	push   0x6c646e61
   14000287c:	gs fs rex.RB js 0x1400028e4
   140002881:	gs jo  0x1400028f8
   140002884:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000288b:	gs jb  0x14000288e
   14000288e:	outs   dx,BYTE PTR ds:[rsi]
   14000288f:	add    al,BYTE PTR [rdi+0x65]
   140002892:	je     0x1400028e1
   140002894:	outs   dx,DWORD PTR ds:[rsi]
   140002895:	fs jne 0x140002904
   140002898:	gs rex.W (bad) 
   14000289b:	outs   dx,BYTE PTR ds:[rsi]
   14000289c:	fs ins BYTE PTR es:[rdi],dx
   14000289e:	gs push rdi
   1400028a0:	add    BYTE PTR [rax],al
   1400028a2:	ss add al,0x51
   1400028a5:	jne    0x14000290c
   1400028a7:	jb     0x140002922
   1400028a9:	push   rax
   1400028aa:	gs jb  0x140002913
   1400028ad:	outs   dx,DWORD PTR ds:[rsi]
   1400028ae:	jb     0x14000291d
   1400028b0:	(bad)  
   1400028b1:	outs   dx,BYTE PTR ds:[rsi]
   1400028b2:	movsxd esp,DWORD PTR [rbp+0x43]
   1400028b5:	outs   dx,DWORD PTR ds:[rsi]
   1400028b6:	jne    0x140002926
   1400028b8:	je     0x14000291f
   1400028ba:	jb     0x1400028bc
   1400028bc:	adc    DWORD PTR [rdx],eax
   1400028be:	rex.RXB
   1400028bf:	gs je  0x140002905
   1400028c2:	jne    0x140002936
   1400028c4:	jb     0x14000292b
   1400028c6:	outs   dx,BYTE PTR ds:[rsi]
   1400028c7:	je     0x140002919
   1400028c9:	jb     0x14000293a
   1400028cb:	movsxd esp,DWORD PTR [rbp+0x73]
   1400028ce:	jae    0x140002919
   1400028d0:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b4656fd9
   1400028d7:	rex.XB jne 0x14000294c
   1400028da:	jb     0x140002941
   1400028dc:	outs   dx,BYTE PTR ds:[rsi]
   1400028dd:	je     0x140002933
   1400028df:	push   0x64616572
   1400028e4:	rex.WB
   1400028e5:	add    BYTE PTR fs:[rax],al
   1400028e8:	loopne 0x1400028ec
   1400028ea:	rex.RXB
   1400028eb:	gs je  0x140002941
   1400028ee:	jns    0x140002963
   1400028f0:	je     0x140002957
   1400028f2:	ins    DWORD PTR es:[rdi],dx
   1400028f3:	push   rsp
   1400028f4:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400028fb:	ins    BYTE PTR es:[rdi],dx
   1400028fc:	gs push rsp
   1400028fe:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   140002905:	gs je  0x14000295c
   140002908:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000290f:	je     0x140002911
   140002911:	add    BYTE PTR [rdi+0x6c745204],dh
   140002917:	rex.XB (bad) 
   140002919:	jo     0x14000298f
   14000291b:	jne    0x14000298f
   14000291d:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140002920:	outs   dx,BYTE PTR ds:[rsi]
   140002921:	je     0x140002988
   140002923:	js     0x140002999
   140002925:	add    BYTE PTR [rsi+0x6c745204],bh
   14000292b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000292d:	outs   dx,DWORD PTR ds:[rsi]
   14000292e:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140002932:	jne    0x1400029a2
   140002934:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140002938:	outs   dx,BYTE PTR ds:[rsi]
   140002939:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000293b:	je     0x1400029af
   14000293d:	jns    0x14000293f
   14000293f:	add    ch,al
   140002941:	add    al,0x52
   140002943:	je     0x1400029b1
   140002945:	push   rsi
   140002946:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000294d:	outs   dx,BYTE PTR ds:[rsi]
   14000294e:	ja     0x1400029b9
   140002950:	outs   dx,BYTE PTR ds:[rsi]
   140002951:	add    BYTE PTR fs:[rax],al
   140002954:	sahf   
   140002955:	add    eax,0x61686e55
   14000295a:	outs   dx,BYTE PTR ds:[rsi]
   14000295b:	fs ins BYTE PTR es:[rdi],dx
   14000295d:	gs fs rex.RB js 0x1400029c5
   140002962:	gs jo  0x1400029d9
   140002965:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000296c:	gs jb  0x14000296f
   14000296f:	add    BYTE PTR [rax],dl
   140002971:	add    al,BYTE PTR [rdi+0x65]
   140002974:	je     0x1400029b9
   140002976:	jne    0x1400029ea
   140002978:	jb     0x1400029df
   14000297a:	outs   dx,BYTE PTR ds:[rsi]
   14000297b:	je     0x1400029cd
   14000297d:	jb     0x1400029ee
   14000297f:	movsxd esp,DWORD PTR [rbp+0x73]
   140002982:	jae    0x140002984
   140002984:	jl     0x14000298b
   140002986:	push   rsp
   140002987:	gs jb  0x1400029f7
   14000298a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140002991:	outs   dx,DWORD PTR ds:[rsi]
   140002992:	movsxd esp,DWORD PTR [rbp+0x73]
   140002995:	jae    0x140002997
	...

Disassembly of section .data:

0000000140003000 <.data>:
   140003000:	add    DWORD PTR [rax],eax
   140003002:	add    BYTE PTR [rax],al
   140003004:	add    BYTE PTR [rax],al
   140003006:	add    BYTE PTR [rax],al
   140003008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000300e:	add    BYTE PTR [rax],al
   140003010:	int    0x5d
   140003012:	and    dl,dl
   140003014:	data16 (bad) 
   140003016:	(bad)  
   140003017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140004000 <.pdata>:
   140004000:	or     BYTE PTR [rax],dl
   140004002:	add    BYTE PTR [rax],al
   140004004:	movabs al,ds:0xb0000024d0000010
   14000400d:	adc    BYTE PTR [rax],al
   14000400f:	add    BYTE PTR [rdi+0x11],bh
   140004012:	add    BYTE PTR [rax],al
   140004014:	in     al,0x24
   140004016:	add    BYTE PTR [rax],al
   140004018:	nop
   140004019:	adc    DWORD PTR [rax],eax
   14000401b:	add    cl,bl
   14000401d:	adc    DWORD PTR [rax],eax
   14000401f:	add    ah,ch
   140004021:	and    al,0x0
   140004023:	add    al,ah
   140004025:	adc    DWORD PTR [rax],eax
   140004027:	add    BYTE PTR [rcx+0x14],dl
   14000402a:	add    BYTE PTR [rax],al
   14000402c:	hlt    
   14000402d:	and    al,0x0
   14000402f:	add    BYTE PTR [rax+0x14],ah
   140004032:	add    BYTE PTR [rax],al
   140004034:	jb     0x14000404a
   140004036:	add    BYTE PTR [rax],al
   140004038:	in     al,0x24
   14000403a:	add    BYTE PTR [rax],al
   14000403c:	nop
   14000403d:	adc    al,0x0
   14000403f:	add    BYTE PTR [rsi+0x28000014],ch
   140004045:	and    eax,0x14c00000
   14000404a:	add    BYTE PTR [rax],al
   14000404c:	stc    
   14000404d:	adc    al,0x0
   14000404f:	add    ah,ah
   140004051:	and    al,0x0
   140004053:	add    BYTE PTR [rax],al
   140004055:	adc    eax,0x15180000
   14000405a:	add    BYTE PTR [rax],al
   14000405c:	in     al,0x24
   14000405e:	add    BYTE PTR [rax],al
   140004060:	sub    al,0x15
   140004062:	add    BYTE PTR [rax],al
   140004064:	adc    BYTE PTR [rip+0x252c0000],0x0        # 0x1652c406b
   14000406b:	add    BYTE PTR [rax-0x32ffffeb],cl
   140004071:	adc    eax,0x254c0000
   140004076:	add    BYTE PTR [rax],al
   140004078:	xor    BYTE PTR [rsi],dl
   14000407a:	add    BYTE PTR [rax],al
   14000407c:	jge    0x140004094
   14000407e:	add    BYTE PTR [rax],al
   140004080:	push   rsp
   140004081:	and    eax,0x16c40000
   140004086:	add    BYTE PTR [rax],al
   140004088:	xchg   esp,eax
   140004089:	(bad)  
   14000408a:	add    BYTE PTR [rax],al
   14000408c:	and    BYTE PTR [rip+0x17dc0000],0x0        # 0x157dc4093
   140004093:	add    BYTE PTR [rax],dl
   140004095:	sbb    BYTE PTR [rax],al
   140004097:	add    BYTE PTR [rbp+riz*1+0x0],cl
   14000409b:	add    BYTE PTR [rax],ah
   14000409d:	sbb    BYTE PTR [rax],al
   14000409f:	add    BYTE PTR [rcx-0x73ffffe7],dl
   1400040a5:	and    eax,0x19b00000
   1400040aa:	add    BYTE PTR [rax],al
   1400040ac:	mov    dl,0x19
   1400040ae:	add    BYTE PTR [rax],al
   1400040b0:	cwde   
   1400040b1:	and    eax,0x19c60000
   1400040b6:	add    BYTE PTR [rax],al
   1400040b8:	in     al,0x19
   1400040ba:	add    BYTE PTR [rax],al
   1400040bc:	js     0x1400040e3
   1400040be:	add    BYTE PTR [rax],al
   1400040c0:	lock sbb DWORD PTR [rax],eax
   1400040c3:	add    BYTE PTR [rax],dl
   1400040c5:	sbb    al,BYTE PTR [rax]
   1400040c7:	add    BYTE PTR [rax+0x25],bh
	...

Disassembly of section .rsrc:

0000000140005000 <.rsrc>:
	...
   14000500c:	add    BYTE PTR [rax],al
   14000500e:	add    al,0x0
   140005010:	add    eax,DWORD PTR [rax]
   140005012:	add    BYTE PTR [rax],al
   140005014:	xor    BYTE PTR [rax],al
   140005016:	add    BYTE PTR [rax+0xe],al
   14000501c:	rol    BYTE PTR [rax],0x0
   14000501f:	adc    BYTE PTR [rax],0x0
   140005022:	add    BYTE PTR [rax],al
   140005024:	fadd   DWORD PTR [rax]
   140005026:	add    BYTE PTR [rax+0x18],al
   14000502c:	lock add BYTE PTR [rax],al
   14000502f:	add    BYTE PTR [rax],0x0
	...
   14000503e:	adc    BYTE PTR [rax],al
   140005040:	add    DWORD PTR [rax],eax
   140005042:	add    BYTE PTR [rax],al
   140005044:	adc    BYTE PTR [rcx],al
   140005046:	add    BYTE PTR [rax+0x2],al
   14000504c:	sub    BYTE PTR [rcx],al
   14000504e:	add    BYTE PTR [rax+0x3],al
   140005054:	rex add DWORD PTR [rax],eax
   140005057:	add    BYTE PTR [rax+rax*1],0x0
   14000505b:	add    BYTE PTR [rax+0x1],bl
   14000505e:	add    BYTE PTR [rax+0x5],al
   140005064:	jo     0x140005067
   140005066:	add    BYTE PTR [rax+0x6],al
   14000506c:	mov    BYTE PTR [rcx],al
   14000506e:	add    BYTE PTR [rax+0x7],al
   140005074:	movabs al,ds:0xb800000008800001
   14000507d:	add    DWORD PTR [rax],eax
   14000507f:	or     BYTE PTR [rcx],0x0
   140005082:	add    BYTE PTR [rax],al
   140005084:	rol    BYTE PTR [rcx],1
   140005086:	add    BYTE PTR [rax+0xa],al
   14000508c:	call   0x14b805092
   140005091:	add    BYTE PTR [rax],al
   140005093:	add    BYTE PTR [rax],al
   140005095:	add    al,BYTE PTR [rax]
   140005097:	or     BYTE PTR [rax+rax*1],0x0
   14000509b:	add    BYTE PTR [rax],bl
   14000509d:	add    al,BYTE PTR [rax]
   14000509f:	or     BYTE PTR [rip+0x30000000],0x2        # 0x1700050a6
   1400050a6:	add    BYTE PTR [rax+0xe],al
   1400050ac:	rex.W add al,BYTE PTR [rax]
   1400050af:	or     BYTE PTR [rdi],0x0
   1400050b2:	add    BYTE PTR [rax],al
   1400050b4:	(bad)  
   1400050b5:	add    al,BYTE PTR [rax]
   1400050b7:	adc    BYTE PTR [rax],0x0
   1400050ba:	add    BYTE PTR [rax],al
   1400050bc:	js     0x1400050c0
   1400050be:	add    BYTE PTR [rax+0x0],al
	...
   1400050cc:	add    DWORD PTR [rax],eax
   1400050ce:	add    BYTE PTR [rax],al
   1400050d0:	xor    BYTE PTR [rax+rax*1],al
   1400050d3:	adc    BYTE PTR [rax+0x800002],0x0
	...
   1400050e6:	add    DWORD PTR [rax],eax
   1400050e8:	add    DWORD PTR [rax],eax
   1400050ea:	add    BYTE PTR [rax],al
   1400050ec:	test   al,0x2
   1400050ee:	add    BYTE PTR [rax+0x0],al
	...
   1400050fc:	add    BYTE PTR [rax],al
   1400050fe:	add    al,BYTE PTR [rax]
   140005100:	add    DWORD PTR [rax],eax
   140005102:	add    BYTE PTR [rax],al
   140005104:	rol    BYTE PTR [rdx],0x0
   140005107:	and    BYTE PTR [rbx+0x0],0x0
   14000510b:	add    al,bl
   14000510d:	add    al,BYTE PTR [rax]
   14000510f:	add    BYTE PTR [rax],0x0
	...
   14000511e:	add    DWORD PTR [rax],eax
   140005120:	or     DWORD PTR [rax+rax*1],eax
   140005123:	add    al,dh
   140005125:	add    al,BYTE PTR [rax]
	...
   140005133:	add    BYTE PTR [rax],al
   140005135:	add    BYTE PTR [rcx],al
   140005137:	add    BYTE PTR [rcx],cl
   140005139:	add    al,0x0
   14000513b:	add    BYTE PTR [rax],al
   14000513d:	add    eax,DWORD PTR [rax]
	...
   14000514b:	add    BYTE PTR [rax],al
   14000514d:	add    BYTE PTR [rcx],al
   14000514f:	add    BYTE PTR [rcx],cl
   140005151:	add    al,0x0
   140005153:	add    BYTE PTR [rax],dl
   140005155:	add    eax,DWORD PTR [rax]
	...
   140005163:	add    BYTE PTR [rax],al
   140005165:	add    BYTE PTR [rcx],al
   140005167:	add    BYTE PTR [rcx],cl
   140005169:	add    al,0x0
   14000516b:	add    BYTE PTR [rax],ah
   14000516d:	add    eax,DWORD PTR [rax]
	...
   14000517b:	add    BYTE PTR [rax],al
   14000517d:	add    BYTE PTR [rcx],al
   14000517f:	add    BYTE PTR [rcx],cl
   140005181:	add    al,0x0
   140005183:	add    BYTE PTR [rax],dh
   140005185:	add    eax,DWORD PTR [rax]
	...
   140005193:	add    BYTE PTR [rax],al
   140005195:	add    BYTE PTR [rcx],al
   140005197:	add    BYTE PTR [rcx],cl
   140005199:	add    al,0x0
   14000519b:	add    BYTE PTR [rax+0x3],al
	...
   1400051ae:	add    DWORD PTR [rax],eax
   1400051b0:	or     DWORD PTR [rax+rax*1],eax
   1400051b3:	add    BYTE PTR [rax+0x3],dl
	...
   1400051c6:	add    DWORD PTR [rax],eax
   1400051c8:	or     DWORD PTR [rax+rax*1],eax
   1400051cb:	add    BYTE PTR [rax+0x3],ah
	...
   1400051de:	add    DWORD PTR [rax],eax
   1400051e0:	or     DWORD PTR [rax+rax*1],eax
   1400051e3:	add    BYTE PTR [rax+0x3],dh
	...
   1400051f6:	add    DWORD PTR [rax],eax
   1400051f8:	or     DWORD PTR [rax+rax*1],eax
   1400051fb:	add    BYTE PTR [rax+0x3],al
	...
   14000520d:	add    BYTE PTR [rcx],al
   14000520f:	add    BYTE PTR [rcx],cl
   140005211:	add    al,0x0
   140005213:	add    BYTE PTR [rax+0x3],dl
	...
   140005225:	add    BYTE PTR [rcx],al
   140005227:	add    BYTE PTR [rcx],cl
   140005229:	add    al,0x0
   14000522b:	add    BYTE PTR [rax+0x3],ah
	...
   14000523d:	add    BYTE PTR [rcx],al
   14000523f:	add    BYTE PTR [rcx],cl
   140005241:	add    al,0x0
   140005243:	add    BYTE PTR [rax+0x3],dh
	...
   140005255:	add    BYTE PTR [rcx],al
   140005257:	add    BYTE PTR [rcx],cl
   140005259:	add    al,0x0
   14000525b:	add    al,al
   14000525d:	add    eax,DWORD PTR [rax]
	...
   14000526b:	add    BYTE PTR [rax],al
   14000526d:	add    BYTE PTR [rcx],al
   14000526f:	add    BYTE PTR [rcx],cl
   140005271:	add    al,0x0
   140005273:	add    al,dl
   140005275:	add    eax,DWORD PTR [rax]
	...
   140005283:	add    BYTE PTR [rax],al
   140005285:	add    BYTE PTR [rcx],al
   140005287:	add    BYTE PTR [rcx],cl
   140005289:	add    al,0x0
   14000528b:	add    al,ah
   14000528d:	add    eax,DWORD PTR [rax]
	...
   14000529b:	add    BYTE PTR [rax],al
   14000529d:	add    BYTE PTR [rcx],al
   14000529f:	add    BYTE PTR [rcx],cl
   1400052a1:	add    al,0x0
   1400052a3:	add    al,dh
   1400052a5:	add    eax,DWORD PTR [rax]
	...
   1400052b3:	add    BYTE PTR [rax],al
   1400052b5:	add    BYTE PTR [rcx],al
   1400052b7:	add    BYTE PTR [rcx],cl
   1400052b9:	add    al,0x0
   1400052bb:	add    BYTE PTR [rax],al
   1400052bd:	add    al,0x0
	...
   1400052cb:	add    BYTE PTR [rax],al
   1400052cd:	add    BYTE PTR [rcx],al
   1400052cf:	add    BYTE PTR [rcx],cl
   1400052d1:	add    al,0x0
   1400052d3:	add    BYTE PTR [rax],dl
   1400052d5:	add    al,0x0
	...
   1400052e3:	add    BYTE PTR [rax],al
   1400052e5:	add    BYTE PTR [rcx],al
   1400052e7:	add    BYTE PTR [rcx],cl
   1400052e9:	add    al,0x0
   1400052eb:	add    BYTE PTR [rax],ah
   1400052ed:	add    al,0x0
   1400052ef:	add    BYTE PTR [rax],al
   1400052f1:	pop    rbx
   1400052f2:	add    BYTE PTR [rax],al
   1400052f4:	push   0xa
   1400052f9:	add    BYTE PTR [rax],al
   1400052fb:	add    BYTE PTR [rax],al
   1400052fd:	add    BYTE PTR [rax],al
   1400052ff:	add    BYTE PTR [rax+0x65],ch
   140005302:	add    BYTE PTR [rax],al
   140005304:	push   0x6
   140005309:	add    BYTE PTR [rax],al
   14000530b:	add    BYTE PTR [rax],al
   14000530d:	add    BYTE PTR [rax],al
   14000530f:	add    al,dl
   140005311:	imul   eax,DWORD PTR [rax],0x0
   140005314:	call   0x14000531b
   140005319:	add    BYTE PTR [rax],al
   14000531b:	add    BYTE PTR [rax],al
   14000531d:	add    BYTE PTR [rax],al
   14000531f:	add    BYTE PTR [rax-0x17ffff92],bh
   140005325:	add    DWORD PTR [rax],eax
	...
   14000532f:	add    BYTE PTR [rax+0x28000070],ah
   140005335:	add    DWORD PTR [rax],eax
	...
   14000533f:	add    al,cl
   140005341:	jno    0x140005343
   140005343:	add    BYTE PTR [rax],ch
   140005345:	(bad)  
	...
   14000534e:	add    BYTE PTR [rax],al
   140005350:	lock xchg DWORD PTR [rax],eax
   140005353:	add    BYTE PTR [rax+0xe],ch
   140005359:	add    BYTE PTR [rax],al
   14000535b:	add    BYTE PTR [rax],al
   14000535d:	add    BYTE PTR [rax],al
   14000535f:	add    BYTE PTR [rax-0x57ffff6a],bl
   140005365:	or     BYTE PTR [rax],al
	...
   14000536f:	add    BYTE PTR [rax-0x61],al
   140005372:	add    BYTE PTR [rax],al
   140005374:	enter  0x6,0x0
	...
   140005380:	or     BYTE PTR [rsi+0x5680000],ah
	...
   14000538e:	add    BYTE PTR [rax],al
   140005390:	jo     0x14000533d
   140005392:	add    BYTE PTR [rax],al
   140005394:	mov    edi,0x8f
   140005399:	add    BYTE PTR [rax],al
   14000539b:	add    BYTE PTR [rax],al
   14000539d:	add    BYTE PTR [rax],al
   14000539f:	add    BYTE PTR [rax],dh
   1400053a1:	cmp    eax,DWORD PTR [rcx]
   1400053a3:	add    BYTE PTR [rax],ch
   1400053a5:	rex.X add BYTE PTR [rax],al
	...
   1400053b0:	pop    rax
   1400053b1:	jge    0x1400053b4
   1400053b3:	add    BYTE PTR [rax+0x25],ch
	...
   1400053c1:	movabs ds:0x10a80001,eax
   1400053ca:	add    BYTE PTR [rax],al
   1400053cc:	add    BYTE PTR [rax],al
   1400053ce:	add    BYTE PTR [rax],al
   1400053d0:	test   al,0xb3
   1400053d2:	add    DWORD PTR [rax],eax
   1400053d4:	mov    BYTE PTR [rcx],cl
	...
   1400053de:	add    BYTE PTR [rax],al
   1400053e0:	xor    BYTE PTR [rbp+0x4680001],bh
	...
   1400053ee:	add    BYTE PTR [rax],al
   1400053f0:	cwde   
   1400053f1:	rol    DWORD PTR [rcx],0x0
   1400053f4:	out    0x0,al
	...
   1400053fe:	add    BYTE PTR [rax],al
   140005400:	push   rax
   140005401:	push   rdi
   140005402:	add    BYTE PTR [rax],al
   140005404:	lods   al,BYTE PTR ds:[rsi]
   140005405:	add    eax,DWORD PTR [rax]
	...
   14000540f:	add    BYTE PTR [rax+0x54],dl
   140005412:	add    BYTE PTR [rax],al
   140005414:	inc    BYTE PTR [rdx]
	...
   14000541e:	add    BYTE PTR [rax],al
   140005420:	add    dl,0x1
   140005423:	add    al,dl
   140005425:	add    al,BYTE PTR [rax]
	...
   14000542f:	add    BYTE PTR [rip+0x44004900],cl        # 0x184009d35
   140005435:	add    BYTE PTR [rdx+0x0],dl
   140005438:	pop    rdi
   140005439:	add    BYTE PTR [rbp+0x0],cl
   14000543c:	add    BYTE PTR [r9+0x0],cl
   140005440:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140005444:	push   rdx
   140005445:	add    BYTE PTR [rcx+0x0],al
   140005448:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14000544c:	add    BYTE PTR [rax],al
   14000544e:	add    BYTE PTR [rax],al
   140005450:	cmp    al,0x3f
   140005452:	js     0x1400054c1
   140005454:	ins    BYTE PTR es:[rdi],dx
   140005455:	and    BYTE PTR [rsi+0x65],dh
   140005458:	jb     0x1400054cd
   14000545a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31273d
   140005461:	xor    BYTE PTR [rdi],ah
   140005463:	and    BYTE PTR [rbp+0x6e],ah
   140005466:	movsxd ebp,DWORD PTR [rdi+0x64]
   140005469:	imul   ebp,DWORD PTR [rsi+0x67],0x7475273d
   140005470:	sub    ax,0x2738
   140005474:	and    BYTE PTR [rbx+0x74],dh
   140005477:	(bad)  
   140005478:	outs   dx,BYTE PTR ds:[rsi]
   140005479:	fs (bad) 
   14000547b:	ins    BYTE PTR es:[rdi],dx
   14000547c:	outs   dx,DWORD PTR ds:[rsi]
   14000547d:	outs   dx,BYTE PTR ds:[rsi]
   14000547e:	gs cmp eax,0x73657927
   140005484:	(bad)  
   140005485:	(bad)  
   140005486:	ds or  eax,0x2d213c0a
   14000548c:	sub    eax,0x706f4320
   140005491:	jns    0x140005505
   140005493:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000549a:	sub    DWORD PTR [rax],esp
   14000549c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400054a4:	je     0x1400054c6
   1400054a6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400054a8:	jb     0x14000551a
   1400054aa:	outs   dx,DWORD PTR ds:[rsi]
   1400054ab:	jb     0x14000550e
   1400054ad:	je     0x140005518
   1400054af:	outs   dx,DWORD PTR ds:[rsi]
   1400054b0:	outs   dx,BYTE PTR ds:[rsi]
   1400054b1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0d92e4
   1400054b7:	cmp    al,0x61
   1400054b9:	jae    0x14000552e
   1400054bb:	gs ins DWORD PTR es:[rdi],dx
   1400054bd:	(bad)  
   1400054be:	ins    BYTE PTR es:[rdi],dx
   1400054bf:	jns    0x1400054ce
   1400054c1:	or     ah,BYTE PTR [rax]
   1400054c3:	and    BYTE PTR [rax],ah
   1400054c5:	and    BYTE PTR [rax+0x6d],bh
   1400054c8:	ins    BYTE PTR es:[rdi],dx
   1400054c9:	outs   dx,BYTE PTR ds:[rsi]
   1400054ca:	jae    0x140005509
   1400054cc:	and    dh,BYTE PTR [rbp+0x72]
   1400054cf:	outs   dx,BYTE PTR ds:[rsi]
   1400054d0:	cmp    dh,BYTE PTR [rbx+0x63]
   1400054d3:	push   0x73616d65
   1400054d8:	sub    eax,0x7263696d
   1400054dd:	outs   dx,DWORD PTR ds:[rsi]
   1400054de:	jae    0x14000554f
   1400054e0:	data16 je 0x140005510
   1400054e3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400054e6:	cmp    ah,BYTE PTR [rcx+0x73]
   1400054e9:	ins    DWORD PTR es:[rdi],dx
   1400054ea:	cs jbe 0x14000551e
   1400054ed:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602074fd
   1400054f3:	and    BYTE PTR [rbp+0x61],ch
   1400054f6:	outs   dx,BYTE PTR ds:[rsi]
   1400054f7:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400054fe:	jb     0x140005573
   140005500:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140005507:	xor    BYTE PTR [rdx],ah
   140005509:	or     eax,0x2020200a
   14000550e:	and    BYTE PTR [rsi],bh
   140005510:	or     eax,0x3c20200a
   140005515:	(bad)  
   140005516:	jae    0x14000558b
   140005518:	gs ins DWORD PTR es:[rdi],dx
   14000551a:	(bad)  
   14000551b:	ins    BYTE PTR es:[rdi],dx
   14000551c:	jns    0x140005567
   14000551e:	fs outs dx,BYTE PTR gs:[rsi]
   140005521:	je     0x14000558c
   140005523:	je     0x14000559e
   140005525:	or     eax,0x2020200a
   14000552a:	and    BYTE PTR [rax],ah
   14000552c:	and    BYTE PTR [rsi+0x61],ch
   14000552f:	ins    DWORD PTR es:[rdi],dx
   140005530:	gs cmp eax,0x706d7722
   140005536:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140005539:	imul   sp,WORD PTR [rdi+0x22],0xa0d
   14000553f:	and    BYTE PTR [rax],ah
   140005541:	and    BYTE PTR [rax],ah
   140005543:	and    BYTE PTR [rax],ah
   140005545:	jo     0x1400055b9
   140005547:	outs   dx,DWORD PTR ds:[rsi]
   140005548:	movsxd esp,DWORD PTR [rbp+0x73]
   14000554b:	jae    0x1400055bc
   14000554d:	jb     0x140005590
   14000554f:	jb     0x1400055b4
   140005551:	push   0x63657469
   140005556:	je     0x1400055cd
   140005558:	jb     0x1400055bf
   14000555a:	cmp    eax,0x36385822
   14000555f:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020756f
   140005565:	and    BYTE PTR [rax],ah
   140005567:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000556b:	gs cmp eax,0x6e697722
   140005571:	xor    esi,DWORD PTR [rdx]
   140005573:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160207583
   140005579:	and    BYTE PTR [rax],ah
   14000557b:	and    BYTE PTR [rsi+0x65],dh
   14000557e:	jb     0x1400055f3
   140005580:	imul   ebp,DWORD PTR [rdi+0x6e],0x3131223d
   140005587:	xor    BYTE PTR cs:[rsi],ch
   14000558a:	xor    BYTE PTR [rsi],ch
   14000558c:	xor    BYTE PTR ss:[rax],dh
   14000558f:	xor    BYTE PTR [rdx],ah
   140005591:	or     eax,0x2020200a
   140005596:	and    BYTE PTR [rax],ah
   140005598:	and    BYTE PTR [rdi],ch
   14000559a:	ds or  eax,0x3c20200a
   1400055a0:	fs gs jae 0x140005607
   1400055a4:	jb     0x14000560f
   1400055a6:	jo     0x14000561c
   1400055a8:	imul   ebp,DWORD PTR [rdi+0x6e],0x7070413e
   1400055af:	ins    BYTE PTR es:[rdi],dx
   1400055b0:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400055b7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400055bb:	jo     0x140005622
   1400055bd:	jb     0x140005625
   1400055bf:	outs   dx,DWORD PTR ds:[rsi]
   1400055c0:	jb     0x14000562f
   1400055c2:	and    BYTE PTR [rbx+0x65],dh
   1400055c5:	je     0x14000563c
   1400055c7:	jo     0x1400055e9
   1400055c9:	je     0x14000562c
   1400055cb:	jae    0x140005638
   1400055cd:	jae    0x1400055ef
   1400055cf:	outs   dx,WORD PTR ds:[rsi]
   1400055d1:	jb     0x1400055f3
   1400055d3:	rex.W
   1400055d4:	rex.WRB
   1400055d5:	rex.RB
   1400055d6:	cs cmp al,0x2f
   1400055d9:	fs gs jae 0x140005640
   1400055dd:	jb     0x140005648
   1400055df:	jo     0x140005655
   1400055e1:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   1400055e8:	and    BYTE PTR [rcx+riz*1],bh
   1400055eb:	sub    eax,0x6449202d
   1400055f0:	outs   dx,BYTE PTR gs:[rsi]
   1400055f2:	je     0x14000565d
   1400055f4:	data16 jns 0x140005617
   1400055f7:	je     0x140005661
   1400055f9:	and    BYTE PTR gs:[rcx+0x70],ah
   1400055fd:	jo     0x14000566b
   1400055ff:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140005606:	and    BYTE PTR [rbx+0x65],dh
   140005609:	movsxd esi,DWORD PTR [rbp+0x72]
   14000560c:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
   140005614:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
   14000561b:	jae    0x14000564b
   14000561d:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0d9450
   140005623:	and    BYTE PTR [rax],ah
   140005625:	cmp    al,0x74
   140005627:	jb     0x14000569e
   140005629:	jae    0x14000569f
   14000562b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000562d:	outs   dx,WORD PTR ds:[rsi]
   14000562f:	and    BYTE PTR [rax+0x6d],bh
   140005632:	ins    BYTE PTR es:[rdi],dx
   140005633:	outs   dx,BYTE PTR ds:[rsi]
   140005634:	jae    0x140005673
   140005636:	and    dh,BYTE PTR [rbp+0x72]
   140005639:	outs   dx,BYTE PTR ds:[rsi]
   14000563a:	cmp    dh,BYTE PTR [rbx+0x63]
   14000563d:	push   0x73616d65
   140005642:	sub    eax,0x7263696d
   140005647:	outs   dx,DWORD PTR ds:[rsi]
   140005648:	jae    0x1400056b9
   14000564a:	data16 je 0x14000567a
   14000564d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140005650:	cmp    ah,BYTE PTR [rcx+0x73]
   140005653:	ins    DWORD PTR es:[rdi],dx
   140005654:	cs jbe 0x14000568a
   140005657:	and    bh,BYTE PTR [rsi]
   140005659:	or     eax,0x2020200a
   14000565e:	and    BYTE PTR [rbx+rsi*2],bh
   140005661:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140005665:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000566d:	and    BYTE PTR [rax],ah
   14000566f:	and    BYTE PTR [rax],ah
   140005671:	cmp    al,0x72
   140005673:	gs jno 0x1400056eb
   140005676:	gs jae 0x1400056ed
   140005679:	gs fs push rax
   14000567c:	jb     0x1400056e7
   14000567e:	jbe    0x1400056e9
   140005680:	ins    BYTE PTR es:[rdi],dx
   140005681:	gs addr32 gs jae 0x1400056c4
   140005686:	or     eax,0x2020200a
   14000568b:	and    BYTE PTR [rax],ah
   14000568d:	and    BYTE PTR [rax],ah
   14000568f:	and    BYTE PTR [rdx+rsi*2],bh
   140005692:	gs jno 0x14000570a
   140005695:	gs jae 0x14000570c
   140005698:	gs fs rex.RB js 0x140005702
   14000569d:	movsxd esi,DWORD PTR [rbp+0x74]
   1400056a0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400056a7:	ins    BYTE PTR es:[rdi],dx
   1400056a8:	or     eax,0x2020200a
   1400056ad:	and    BYTE PTR [rax],ah
   1400056af:	and    BYTE PTR [rax],ah
   1400056b1:	and    BYTE PTR [rax],ah
   1400056b3:	and    BYTE PTR [rax],ah
   1400056b5:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400056b9:	gs ins BYTE PTR es:[rdi],dx
   1400056bb:	cmp    eax,0x71657222
   1400056c0:	jne    0x14000572b
   1400056c2:	jb     0x140005729
   1400056c4:	rex.B
   1400056c5:	fs ins DWORD PTR es:[rdi],dx
   1400056c7:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   1400056ce:	je     0x14000573f
   1400056d0:	jb     0x1400056f4
   1400056d2:	or     eax,0x2020200a
   1400056d7:	and    BYTE PTR [rax],ah
   1400056d9:	and    BYTE PTR [rax],ah
   1400056db:	and    BYTE PTR [rax],ah
   1400056dd:	and    BYTE PTR [rax],ah
   1400056df:	and    BYTE PTR [rbp+0x69],dh
   1400056e2:	movsxd esp,DWORD PTR [r11+0x65]
   1400056e6:	jae    0x14000575b
   1400056e8:	cmp    eax,0x6c616622
   1400056ed:	jae    0x140005754
   1400056ef:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602076ff
   1400056f5:	and    BYTE PTR [rax],ah
   1400056f7:	and    BYTE PTR [rax],ah
   1400056f9:	and    BYTE PTR [rax],ah
   1400056fb:	and    BYTE PTR [rax],ah
   1400056fd:	and    BYTE PTR [rdi],ch
   1400056ff:	ds or  eax,0x2020200a
   140005705:	and    BYTE PTR [rax],ah
   140005707:	and    BYTE PTR [rdi+rbp*1],bh
   14000570a:	jb     0x140005771
   14000570c:	jno    0x140005783
   14000570e:	gs jae 0x140005785
   140005711:	gs fs push rax
   140005714:	jb     0x14000577f
   140005716:	jbe    0x140005781
   140005718:	ins    BYTE PTR es:[rdi],dx
   140005719:	gs addr32 gs jae 0x14000575c
   14000571e:	or     eax,0x2020200a
   140005723:	and    BYTE PTR [rdi+rbp*1],bh
   140005726:	jae    0x14000578d
   140005728:	movsxd esi,DWORD PTR [rbp+0x72]
   14000572b:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140005733:	cmp    al,0x2f
   140005735:	je     0x1400057a9
   140005737:	jne    0x1400057ac
   140005739:	je     0x140005784
   14000573b:	outs   dx,BYTE PTR ds:[rsi]
   14000573c:	outs   dx,WORD PTR ds:[rsi]
   14000573e:	ds or  eax,0x612f3c0a
   140005744:	jae    0x1400057b9
   140005746:	gs ins DWORD PTR es:[rdi],dx
   140005748:	(bad)  
   140005749:	ins    BYTE PTR es:[rdi],dx
   14000574a:	jns    0x14000578a
   14000574c:	or     eax,0xac00000a
   140005751:	add    esi,DWORD PTR [rax+rax*1]
   140005754:	add    BYTE PTR [rax],al
   140005756:	push   rsi
   140005757:	add    BYTE PTR [rbx+0x0],dl
   14000575a:	pop    rdi
   14000575b:	add    BYTE PTR [rsi+0x0],dl
   14000575e:	add    BYTE PTR [r10+0x0],r10b
   140005762:	push   rbx
   140005763:	add    BYTE PTR [rcx+0x0],cl
   140005766:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000576a:	pop    rdi
   14000576b:	add    BYTE PTR [rcx+0x0],cl
   14000576e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140005772:	rex.WRXB add BYTE PTR [r8],r8b
   140005775:	add    BYTE PTR [rax],al
   140005777:	add    BYTE PTR [rbp+0xfeef04],bh
   14000577d:	add    BYTE PTR [rcx],al
   14000577f:	add    BYTE PTR [rax],al
   140005781:	add    BYTE PTR [rax+rax*1],cl
   140005784:	add    BYTE PTR [rax+0x0],al
   140005787:	sub    BYTE PTR [rax],al
   140005789:	add    BYTE PTR [rax+rax*1],cl
   14000578c:	add    BYTE PTR [rax+0x0],al
   14000578f:	sub    BYTE PTR [rdi],bh
   140005791:	add    BYTE PTR [rax],al
   140005793:	add    BYTE PTR [rax],al
   140005795:	add    BYTE PTR [rax],al
   140005797:	add    BYTE PTR [rax+rax*1],al
   14000579a:	add    al,0x0
   14000579c:	add    DWORD PTR [rax],eax
	...
   1400057aa:	add    BYTE PTR [rax],al
   1400057ac:	or     al,BYTE PTR [rbx]
   1400057ae:	add    BYTE PTR [rax],al
   1400057b0:	add    DWORD PTR [rax],eax
   1400057b2:	push   rbx
   1400057b3:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400057b7:	add    BYTE PTR [rcx+0x0],ch
   1400057ba:	outs   dx,BYTE PTR ds:[rsi]
   1400057bb:	add    BYTE PTR [rdi+0x0],ah
   1400057be:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400057c2:	ins    BYTE PTR es:[rdi],dx
   1400057c3:	add    BYTE PTR [rbp+0x0],ah
   1400057c6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400057ca:	data16 add BYTE PTR [rdi+0x0],ch
   1400057ce:	add    BYTE PTR [rax],al
   1400057d0:	out    0x2,al
   1400057d2:	add    BYTE PTR [rax],al
   1400057d4:	add    DWORD PTR [rax],eax
   1400057d6:	xor    BYTE PTR [rax],al
   1400057d8:	xor    al,0x0
   1400057da:	xor    BYTE PTR [rax],al
   1400057dc:	cmp    DWORD PTR [rax],eax
   1400057de:	xor    BYTE PTR [rax],al
   1400057e0:	xor    al,0x0
   1400057e2:	rex.X add BYTE PTR [rax],sil
   1400057e5:	add    BYTE PTR [rax],al
   1400057e7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400057eb:	add    BYTE PTR [rcx],al
   1400057ed:	add    BYTE PTR [rbx+0x0],al
   1400057f0:	outs   dx,DWORD PTR ds:[rsi]
   1400057f1:	add    BYTE PTR [rbp+0x0],ch
   1400057f4:	jo     0x1400057f6
   1400057f6:	(bad)  
   1400057f7:	add    BYTE PTR [rsi+0x0],ch
   1400057fa:	jns    0x1400057fc
   1400057fc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140005800:	ins    DWORD PTR es:[rdi],dx
   140005801:	add    BYTE PTR [rbp+0x0],ah
   140005804:	add    BYTE PTR [rax],al
   140005806:	add    BYTE PTR [rax],al
   140005808:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000580c:	movsxd eax,DWORD PTR [rax]
   14000580e:	jb     0x140005810
   140005810:	outs   dx,DWORD PTR ds:[rsi]
   140005811:	add    BYTE PTR [rbx+0x0],dh
   140005814:	outs   dx,DWORD PTR ds:[rsi]
   140005815:	add    BYTE PTR [rsi+0x0],ah
   140005818:	je     0x14000581a
   14000581a:	and    BYTE PTR [rax],al
   14000581c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140005820:	jb     0x140005822
   140005822:	jo     0x140005824
   140005824:	outs   dx,DWORD PTR ds:[rsi]
   140005825:	add    BYTE PTR [rdx+0x0],dh
   140005828:	(bad)  
   140005829:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000582d:	add    BYTE PTR [rdi+0x0],ch
   140005830:	outs   dx,BYTE PTR ds:[rsi]
   140005831:	add    BYTE PTR [rax],al
   140005833:	add    BYTE PTR [rsi+0x0],ch
   140005836:	and    eax,DWORD PTR [rax]
   140005838:	add    DWORD PTR [rax],eax
   14000583a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000583e:	ins    BYTE PTR es:[rdi],dx
   14000583f:	add    BYTE PTR [rbp+0x0],ah
   140005842:	add    BYTE PTR [rbp+0x0],r12b
   140005846:	jae    0x140005848
   140005848:	movsxd eax,DWORD PTR [rax]
   14000584a:	jb     0x14000584c
   14000584c:	imul   eax,DWORD PTR [rax],0x740070
   140005852:	imul   eax,DWORD PTR [rax],0x6e006f
   140005858:	add    BYTE PTR [rax],al
   14000585a:	add    BYTE PTR [rax],al
   14000585c:	push   rdi
   14000585d:	add    BYTE PTR [rcx+0x0],ch
   140005860:	outs   dx,BYTE PTR ds:[rsi]
   140005861:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140005865:	add    BYTE PTR [rdi+0x0],dh
   140005868:	jae    0x14000586a
   14000586a:	and    BYTE PTR [rax],al
   14000586c:	rex.WRB add BYTE PTR [r13+0x0],r12b
   140005870:	add    BYTE PTR fs:[rcx+0x0],ch
   140005874:	(bad)  
   140005875:	add    BYTE PTR [rax],ah
   140005877:	add    BYTE PTR [rax+0x0],dl
   14000587a:	ins    BYTE PTR es:[rdi],dx
   14000587b:	add    BYTE PTR [rcx+0x0],ah
   14000587e:	jns    0x140005880
   140005880:	add    BYTE PTR gs:[rdx+0x0],dh
   140005884:	and    BYTE PTR [rax],al
   140005886:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000588a:	outs   dx,BYTE PTR ds:[rsi]
   14000588b:	add    BYTE PTR [rsi+0x0],ah
   14000588e:	imul   eax,DWORD PTR [rax],0x750067
   140005894:	jb     0x140005896
   140005896:	(bad)  
   140005897:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000589b:	add    BYTE PTR [rdi+0x0],ch
   14000589e:	outs   dx,BYTE PTR ds:[rsi]
   14000589f:	add    BYTE PTR [rax],al
   1400058a1:	add    BYTE PTR [rax],al
   1400058a3:	add    BYTE PTR [rsi+0x0],ah
   1400058a6:	and    eax,DWORD PTR [rax]
   1400058a8:	add    DWORD PTR [rax],eax
   1400058aa:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400058ae:	ins    BYTE PTR es:[rdi],dx
   1400058af:	add    BYTE PTR [rbp+0x0],ah
   1400058b2:	push   rsi
   1400058b3:	add    BYTE PTR [rbp+0x0],ah
   1400058b6:	jb     0x1400058b8
   1400058b8:	jae    0x1400058ba
   1400058ba:	imul   eax,DWORD PTR [rax],0x6e006f
   1400058c0:	add    BYTE PTR [rax],al
   1400058c2:	add    BYTE PTR [rax],al
   1400058c4:	xor    DWORD PTR [rax],eax
   1400058c6:	xor    al,BYTE PTR [rax]
   1400058c8:	add    BYTE PTR cs:[rax],dh
   1400058cb:	add    BYTE PTR [rsi],ch
   1400058cd:	add    BYTE PTR [rcx],dh
   1400058cf:	add    BYTE PTR [rax],dh
   1400058d1:	add    BYTE PTR [rdx],dh
   1400058d3:	add    BYTE PTR [rax+rax*1],dh
   1400058d6:	xor    BYTE PTR [rax],al
   1400058d8:	add    BYTE PTR cs:[rcx],dh
   1400058db:	add    BYTE PTR [rsi],dh
   1400058dd:	add    BYTE PTR [rbx],dh
   1400058df:	add    BYTE PTR [rax],bh
   1400058e1:	add    BYTE PTR [rax+rax*1],dh
   1400058e4:	and    BYTE PTR [rax],al
   1400058e6:	sub    BYTE PTR [rax],al
   1400058e8:	je     0x1400058ea
   1400058ea:	push   0x2e003100
   1400058ef:	add    BYTE PTR [rcx],dh
   1400058f1:	add    BYTE PTR [rip+0x37003000],dh        # 0x1770088f7
   1400058f7:	add    BYTE PTR [rax],dh
   1400058f9:	add    BYTE PTR [rcx],bh
   1400058fb:	add    BYTE PTR [rip+0x37003100],ch        # 0x177008a01
   140005901:	add    BYTE PTR [rax],dh
   140005903:	add    BYTE PTR [rax],dh
   140005905:	add    BYTE PTR [rcx],ch
   140005907:	add    BYTE PTR [rax],al
   140005909:	add    BYTE PTR [rax],al
   14000590b:	add    BYTE PTR [rax+rax*1],dh
   14000590e:	or     al,BYTE PTR [rax]
   140005910:	add    DWORD PTR [rax],eax
   140005912:	rex.WB add BYTE PTR [r14+0x0],bpl
   140005916:	je     0x140005918
   140005918:	add    BYTE PTR gs:[rdx+0x0],dh
   14000591c:	outs   dx,BYTE PTR ds:[rsi]
   14000591d:	add    BYTE PTR [rcx+0x0],ah
   140005920:	ins    BYTE PTR es:[rdi],dx
   140005921:	add    BYTE PTR [rsi+0x0],cl
   140005924:	(bad)  
   140005925:	add    BYTE PTR [rbp+0x0],ch
   140005928:	add    BYTE PTR gs:[rax],al
   14000592b:	add    BYTE PTR [rdi+0x0],dh
   14000592e:	ins    DWORD PTR es:[rdi],dx
   14000592f:	add    BYTE PTR [rax+0x0],dh
   140005932:	movsxd eax,DWORD PTR [rax]
   140005934:	outs   dx,DWORD PTR ds:[rsi]
   140005935:	add    BYTE PTR [rsi+0x0],ch
   140005938:	data16 add BYTE PTR [rcx+0x0],ch
   14000593c:	add    BYTE PTR [eax],al
   14000593f:	add    BYTE PTR [rax+0x1002e00],al
   140005945:	add    BYTE PTR [rax+rax*1+0x65],cl
   140005949:	add    BYTE PTR [rdi+0x0],ah
   14000594c:	(bad)  
   14000594d:	add    BYTE PTR [rax+rax*1+0x43],ch
   140005951:	add    BYTE PTR [rdi+0x0],ch
   140005954:	jo     0x140005956
   140005956:	jns    0x140005958
   140005958:	jb     0x14000595a
   14000595a:	imul   eax,DWORD PTR [rax],0x680067
   140005960:	je     0x140005962
   140005962:	add    BYTE PTR [rax],al
   140005964:	test   eax,0x4d002000
   140005969:	add    BYTE PTR [rcx+0x0],ch
   14000596c:	movsxd eax,DWORD PTR [rax]
   14000596e:	jb     0x140005970
   140005970:	outs   dx,DWORD PTR ds:[rsi]
   140005971:	add    BYTE PTR [rbx+0x0],dh
   140005974:	outs   dx,DWORD PTR ds:[rsi]
   140005975:	add    BYTE PTR [rsi+0x0],ah
   140005978:	je     0x14000597a
   14000597a:	and    BYTE PTR [rax],al
   14000597c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140005980:	jb     0x140005982
   140005982:	jo     0x140005984
   140005984:	outs   dx,DWORD PTR ds:[rsi]
   140005985:	add    BYTE PTR [rdx+0x0],dh
   140005988:	(bad)  
   140005989:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000598d:	add    BYTE PTR [rdi+0x0],ch
   140005990:	outs   dx,BYTE PTR ds:[rsi]
   140005991:	add    BYTE PTR [rsi],ch
   140005993:	add    BYTE PTR [rax],ah
   140005995:	add    BYTE PTR [rcx+0x0],al
   140005998:	ins    BYTE PTR es:[rdi],dx
   140005999:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000599d:	add    BYTE PTR [rdx+0x0],dh
   1400059a0:	imul   eax,DWORD PTR [rax],0x680067
   1400059a6:	je     0x1400059a8
   1400059a8:	jae    0x1400059aa
   1400059aa:	and    BYTE PTR [rax],al
   1400059ac:	jb     0x1400059ae
   1400059ae:	add    BYTE PTR gs:[rbx+0x0],dh
   1400059b2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400059b6:	jbe    0x1400059b8
   1400059b8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400059bd:	add    BYTE PTR [rax],al
   1400059bf:	add    BYTE PTR [rax+rax*1+0xe],al
   1400059c3:	add    BYTE PTR [rcx],al
   1400059c5:	add    BYTE PTR [rdi+0x0],cl
   1400059c8:	jb     0x1400059ca
   1400059ca:	imul   eax,DWORD PTR [rax],0x690067
   1400059d0:	outs   dx,BYTE PTR ds:[rsi]
   1400059d1:	add    BYTE PTR [rcx+0x0],ah
   1400059d4:	ins    BYTE PTR es:[rdi],dx
   1400059d5:	add    BYTE PTR [rsi+0x0],al
   1400059d8:	imul   eax,DWORD PTR [rax],0x65006c
   1400059de:	outs   dx,BYTE PTR ds:[rsi]
   1400059df:	add    BYTE PTR [rcx+0x0],ah
   1400059e2:	ins    DWORD PTR es:[rdi],dx
   1400059e3:	add    BYTE PTR [rbp+0x0],ah
   1400059e6:	add    BYTE PTR [rax],al
   1400059e8:	ja     0x1400059ea
   1400059ea:	ins    DWORD PTR es:[rdi],dx
   1400059eb:	add    BYTE PTR [rax+0x0],dh
   1400059ee:	movsxd eax,DWORD PTR [rax]
   1400059f0:	outs   dx,DWORD PTR ds:[rsi]
   1400059f1:	add    BYTE PTR [rsi+0x0],ch
   1400059f4:	data16 add BYTE PTR [rcx+0x0],ch
   1400059f8:	add    BYTE PTR [esi],ch
   1400059fb:	add    BYTE PTR [rbp+0x0],ah
   1400059fe:	js     0x140005a00
   140005a00:	add    BYTE PTR gs:[rax],al
   140005a03:	add    BYTE PTR [rdx+0x0],ch
   140005a06:	and    eax,0x50000100
   140005a0b:	add    BYTE PTR [rdx+0x0],dh
   140005a0e:	outs   dx,DWORD PTR ds:[rsi]
   140005a0f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140005a13:	add    BYTE PTR [rbx+0x0],ah
   140005a16:	je     0x140005a18
   140005a18:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140005a1c:	ins    DWORD PTR es:[rdi],dx
   140005a1d:	add    BYTE PTR [rbp+0x0],ah
   140005a20:	add    BYTE PTR [rax],al
   140005a22:	add    BYTE PTR [rax],al
   140005a24:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140005a28:	movsxd eax,DWORD PTR [rax]
   140005a2a:	jb     0x140005a2c
   140005a2c:	outs   dx,DWORD PTR ds:[rsi]
   140005a2d:	add    BYTE PTR [rbx+0x0],dh
   140005a30:	outs   dx,DWORD PTR ds:[rsi]
   140005a31:	add    BYTE PTR [rsi+0x0],ah
   140005a34:	je     0x140005a36
   140005a36:	scas   al,BYTE PTR es:[rdi]
   140005a37:	add    BYTE PTR [rax],ah
   140005a39:	add    BYTE PTR [rdi+0x0],dl
   140005a3c:	imul   eax,DWORD PTR [rax],0x64006e
   140005a42:	outs   dx,DWORD PTR ds:[rsi]
   140005a43:	add    BYTE PTR [rdi+0x0],dh
   140005a46:	jae    0x140005a48
   140005a48:	scas   al,BYTE PTR es:[rdi]
   140005a49:	add    BYTE PTR [rax],ah
   140005a4b:	add    BYTE PTR [rdi+0x0],cl
   140005a4e:	jo     0x140005a50
   140005a50:	add    BYTE PTR gs:[rdx+0x0],dh
   140005a54:	(bad)  
   140005a55:	add    BYTE PTR [rax+rax*1+0x69],dh
   140005a59:	add    BYTE PTR [rsi+0x0],ch
   140005a5c:	add    BYTE PTR [eax],ah
   140005a5f:	add    BYTE PTR [rbx+0x0],dl
   140005a62:	jns    0x140005a64
   140005a64:	jae    0x140005a66
   140005a66:	je     0x140005a68
   140005a68:	add    BYTE PTR gs:[rbp+0x0],ch
   140005a6c:	add    BYTE PTR [rax],al
   140005a6e:	add    BYTE PTR [rax],al
   140005a70:	rex.RX add BYTE PTR [rcx],r10b
   140005a73:	add    BYTE PTR [rcx],al
   140005a75:	add    BYTE PTR [rax+0x0],dl
   140005a78:	jb     0x140005a7a
   140005a7a:	outs   dx,DWORD PTR ds:[rsi]
   140005a7b:	add    BYTE PTR [rax+rax*1+0x75],ah
   140005a7f:	add    BYTE PTR [rbx+0x0],ah
   140005a82:	je     0x140005a84
   140005a84:	push   rsi
   140005a85:	add    BYTE PTR [rbp+0x0],ah
   140005a88:	jb     0x140005a8a
   140005a8a:	jae    0x140005a8c
   140005a8c:	imul   eax,DWORD PTR [rax],0x6e006f
   140005a92:	add    BYTE PTR [rax],al
   140005a94:	xor    DWORD PTR [rax],eax
   140005a96:	xor    al,BYTE PTR [rax]
   140005a98:	add    BYTE PTR cs:[rax],dh
   140005a9b:	add    BYTE PTR [rsi],ch
   140005a9d:	add    BYTE PTR [rcx],dh
   140005a9f:	add    BYTE PTR [rax],dh
   140005aa1:	add    BYTE PTR [rdx],dh
   140005aa3:	add    BYTE PTR [rax+rax*1],dh
   140005aa6:	xor    BYTE PTR [rax],al
   140005aa8:	add    BYTE PTR cs:[rcx],dh
   140005aab:	add    BYTE PTR [rsi],dh
   140005aad:	add    BYTE PTR [rbx],dh
   140005aaf:	add    BYTE PTR [rax],bh
   140005ab1:	add    BYTE PTR [rax+rax*1],dh
   140005ab4:	add    BYTE PTR [rax],al
   140005ab6:	add    BYTE PTR [rax],al
   140005ab8:	add    BYTE PTR [rax],r8b
   140005abb:	add    BYTE PTR [rcx],al
   140005abd:	add    BYTE PTR [rsi+0x0],dl
   140005ac0:	(bad)  
   140005ac1:	add    BYTE PTR [rdx+0x0],dh
   140005ac4:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140005ac8:	ins    BYTE PTR es:[rdi],dx
   140005ac9:	add    BYTE PTR [rbp+0x0],ah
   140005acc:	rex.WB add BYTE PTR [r14+0x0],bpl
   140005ad0:	data16 add BYTE PTR [rdi+0x0],ch
   140005ad4:	add    BYTE PTR [rax],al
   140005ad6:	add    BYTE PTR [rax],al
   140005ad8:	and    al,0x0
   140005ada:	add    al,0x0
   140005adc:	add    BYTE PTR [rax],al
   140005ade:	push   rsp
   140005adf:	add    BYTE PTR [rdx+0x0],dh
   140005ae2:	(bad)  
   140005ae3:	add    BYTE PTR [rsi+0x0],ch
   140005ae6:	jae    0x140005ae8
   140005ae8:	ins    BYTE PTR es:[rdi],dx
   140005ae9:	add    BYTE PTR [rcx+0x0],ah
   140005aec:	je     0x140005aee
   140005aee:	imul   eax,DWORD PTR [rax],0x6e006f
   140005af4:	add    BYTE PTR [rax],al
   140005af6:	add    BYTE PTR [rax],al
   140005af8:	or     DWORD PTR [rax+rsi*4],eax
   140005afb:	add    al,0x0
   140005afd:	add    BYTE PTR [rax],al
   140005aff:	add    BYTE PTR [rax],ch
   140005b01:	add    BYTE PTR [rax],al
   140005b03:	add    BYTE PTR [rax+0x0],al
   140005b06:	add    BYTE PTR [rax],al
   140005b08:	add    BYTE PTR [rax],0x0
   140005b0b:	add    BYTE PTR [rcx],al
   140005b0d:	add    BYTE PTR [rax+rax*1],al
   140005b10:	add    BYTE PTR [rax],al
   140005b12:	add    BYTE PTR [rax],al
   140005b14:	add    BYTE PTR [rax],cl
	...
   140005b2e:	add    BYTE PTR [rax],0x0
   140005b31:	add    BYTE PTR [rax],0x0
   140005b34:	add    BYTE PTR [rax+0x800080],al
   140005b3a:	add    BYTE PTR [rax],al
   140005b3c:	add    BYTE PTR [rax],0x80
   140005b3f:	add    BYTE PTR [rax-0x7fffff80],al
   140005b45:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140005b4c:	add    BYTE PTR [rax],al
   140005b4e:	inc    DWORD PTR [rax]
   140005b50:	add    bh,bh
   140005b52:	add    BYTE PTR [rax],al
   140005b54:	add    bh,bh
   140005b56:	inc    DWORD PTR [rax]
   140005b58:	inc    DWORD PTR [rax]
   140005b5a:	add    BYTE PTR [rax],al
   140005b5c:	inc    DWORD PTR [rax]
   140005b5e:	inc    DWORD PTR [rax]
   140005b60:	(bad)  
   140005b61:	inc    DWORD PTR [rax]
   140005b63:	add    bh,bh
   140005b65:	(bad)  
   140005b66:	inc    DWORD PTR [rax]
	...
   140005bf8:	add    BYTE PTR [rax],al
   140005bfa:	(bad)  
   140005bfb:	xchg   DWORD PTR [rdi+0x78],eax
	...
   140005c15:	add    BYTE PTR [rax],al
   140005c17:	ja     0x140005c90
   140005c19:	ja     0x140005ba9
   140005c1b:	mov    al,ch
   140005c1d:	mov    ?,WORD PTR [rax+0x0]
	...
   140005c30:	add    BYTE PTR [rax],al
   140005c32:	add    BYTE PTR [rdi],al
   140005c34:	ja     0x140005cad
   140005c36:	jle    0x140005bc0
   140005c38:	call   0xc888e4c5
   140005c3d:	mov    BYTE PTR [rax+0x78],ch
   140005c40:	jo     0x140005c42
	...
   140005c4e:	add    BYTE PTR [rax],al
   140005c50:	ja     0x140005cc9
   140005c52:	ja     0x140005c3c
   140005c54:	call   0xc888e4e1
   140005c59:	mov    cs,WORD PTR [rax-0x18777118]
   140005c5f:	mov    bh,ah
   140005c61:	js     0x140005c63
	...
   140005c6b:	add    BYTE PTR [rdi],al
   140005c6d:	xchg   BYTE PTR [rsi-0x77171789],al
   140005c73:	mov    BYTE PTR [rax-0x17771778],cl
   140005c79:	mov    BYTE PTR [rax-0x39777778],cl
   140005c7f:	mov    ?,WORD PTR [rax+rcx*4+0x60]
	...
   140005c8b:	(bad)  
   140005c8c:	jle    0x140005c16
   140005c8e:	mov    BYTE PTR [rdi-0x77777778],cl
   140005c94:	mov    cs,WORD PTR [rax-0x17771778]
   140005c9a:	call   0x127894587
   140005c9f:	mov    BYTE PTR [rsi-0x78],bh
   140005ca2:	out    0x0,eax
   140005ca4:	add    BYTE PTR [rax],al
   140005ca6:	add    BYTE PTR [rax],al
   140005ca8:	add    BYTE PTR [rax],al
   140005caa:	add    BYTE PTR [rsi],cl
   140005cac:	vpmacssdd xmm1,xmm14,xmm8,XMMWORD PTR [r8-0x77777172]
   140005cb6:	call   0xc888e543
   140005cbb:	mov    BYTE PTR [rax+0x7c8e7eef],cl
   140005cc1:	mov    BYTE PTR [rax+rax*1+0x0],bh
   140005cc5:	add    BYTE PTR [rax],al
   140005cc7:	add    BYTE PTR [rax],al
   140005cc9:	add    BYTE PTR [rax],al
   140005ccb:	or     BYTE PTR [rax-0x77770108],cl
   140005cd1:	(bad)  
   140005cd2:	clc    
   140005cd3:	mov    BYTE PTR [rax-0x48],bh
   140005cd6:	mov    BYTE PTR [rax-0x17077118],cl
   140005cdc:	mov    BYTE PTR [rax-0x7179771b],cl
   140005ce2:	xchg   BYTE PTR [rax],al
   140005ce4:	add    BYTE PTR [rax],al
   140005ce6:	add    BYTE PTR [rax],al
   140005ce8:	add    BYTE PTR [rax],al
   140005cea:	add    BYTE PTR [rax],cl
   140005cec:	(bad)
   140005cf0:	mov    bh,dh
   140005cf2:	cmp    DWORD PTR [rcx+0x789b9999],edi
   140005cf8:	mov    BYTE PTR [rax-0x10107778],cl
   140005cfe:	jle    0x140005c8e
   140005d00:	jle    0x140005c8a
   140005d02:	xchg   BYTE PTR [rax],al
   140005d04:	add    BYTE PTR [rax],al
   140005d06:	add    BYTE PTR [rax],al
   140005d08:	add    BYTE PTR [rax],al
   140005d0a:	add    BYTE PTR [rsi],cl
   140005d0c:	(bad)  
   140005d0d:	(bad)  
   140005d0e:	mov    cs,WORD PTR [rax+0x7bb97988]
   140005d14:	cmp    edi,DWORD PTR [rbx-0x69]
   140005d17:	cdq    
   140005d18:	mov    BYTE PTR [rax-0x77077711],cl
   140005d1e:	mov    WORD PTR [rax+0xe7888c],cs
   140005d24:	add    BYTE PTR [rax],al
   140005d26:	add    BYTE PTR [rax],al
   140005d28:	add    BYTE PTR [rax],al
   140005d2a:	add    BYTE PTR [rax],cl
   140005d2c:	mov    BYTE PTR [rax-0x64741078],cl
   140005d32:	jns    0x140005ced
   140005d34:	xchg   edi,eax
   140005d35:	xchg   ebx,eax
   140005d36:	jns    0x140005ceb
   140005d38:	fwait
   140005d39:	mov    BYTE PTR [rax-0x17771711],cl
   140005d3f:	mov    es,WORD PTR [rsi+0x86f8]
   140005d45:	add    BYTE PTR [rax],al
   140005d47:	add    BYTE PTR [rax],al
   140005d49:	add    BYTE PTR [rax],al
   140005d4b:	or     bh,ch
   140005d4d:	clc    
   140005d4e:	mov    ?,edi
   140005d50:	xchg   ebx,eax
   140005d51:	jns    0x140005d0c
   140005d53:	jns    0x140005d0e
   140005d55:	mov    ecx,0x98b989b9
   140005d5a:	mov    BYTE PTR [rax-0x77797078],cl
   140005d60:	mov    cs,WORD PTR [rax+0xe8]
   140005d66:	add    BYTE PTR [rax],al
   140005d68:	add    BYTE PTR [rax],al
   140005d6a:	add    BYTE PTR [rax],cl
   140005d6c:	(bad)  
   140005d6d:	(bad)
   140005d71:	mov    ecx,0x9898b779
   140005d76:	fwait
   140005d77:	fwait
   140005d78:	cwde   
   140005d79:	fwait
   140005d7a:	mov    BYTE PTR [rax-0x71181078],cl
   140005d80:	xchg   DWORD PTR [rax+0x86],ecx
   140005d86:	add    BYTE PTR [rax],al
   140005d88:	add    BYTE PTR [rax],al
   140005d8a:	add    BYTE PTR [rsi],cl
   140005d8c:	(bad)  
   140005d90:	cwde   
   140005d91:	lahf   
   140005d92:	clc    
   140005d93:	fwait
   140005d94:	fwait
   140005d95:	fwait
   140005d96:	xchg   edi,eax
   140005d97:	xchg   edi,eax
   140005d98:	fwait
   140005d99:	xchg   edi,eax
   140005d9a:	cwde   
   140005d9b:	mov    ?,eax
   140005d9d:	mov    BYTE PTR [rsi-0x17777178],cl
	...
   140005dab:	or     BYTE PTR [rdi-0x46467c71],cl
   140005db1:	(bad)  
   140005db2:	(bad)  
   140005db3:	clc    
   140005db4:	jns    0x140005d3f
   140005db6:	mov    ecx,0xb789b9b9
   140005dbb:	mov    BYTE PTR [rax-0x18771878],cl
   140005dc1:	mov    BYTE PTR [rsi+0x0],cl
   140005dc7:	add    BYTE PTR [rax],al
   140005dc9:	add    BYTE PTR [rax],al
   140005dcb:	or     BYTE PTR [rax-0x64887608],cl
   140005dd1:	(bad)  
   140005dd2:	(bad)  
   140005dd3:	dec    DWORD PTR [rbx-0x67748665]
   140005dd9:	fwait
   140005dda:	fwait
   140005ddb:	mov    BYTE PTR [rsi-0x73777108],cl
   140005de1:	clc    
   140005de2:	xchg   DWORD PTR [rax],eax
   140005de4:	add    BYTE PTR [rax],al
   140005de6:	add    BYTE PTR [rax],al
   140005de8:	add    BYTE PTR [rax],al
   140005dea:	add    BYTE PTR [rsi],cl
   140005dec:	(bad)
   140005df0:	ja     0x140005df1
   140005df2:	(bad)  
   140005df3:	(bad)  
   140005df4:	dec    DWORD PTR [rcx-0x68646875]
   140005dfa:	xchg   edi,eax
   140005dfb:	cwde   
   140005dfc:	mov    BYTE PTR [rax-0x7117777a],cl
   140005e02:	mov    es,WORD PTR [rax]
   140005e04:	add    BYTE PTR [rax],al
   140005e06:	add    BYTE PTR [rax],al
   140005e08:	add    BYTE PTR [rax],al
   140005e0a:	add    BYTE PTR [rax],cl
   140005e0c:	(bad)
   140005e10:	fwait
   140005e11:	(bad)  
   140005e12:	(bad)  
   140005e13:	(bad)  
   140005e14:	(bad)  
   140005e15:	clc    
   140005e16:	mov    ecx,0xb9b7b989
   140005e1b:	mov    eax,0x88e88888
   140005e20:	xchg   al,bh
   140005e22:	mov    BYTE PTR [rax],al
   140005e24:	add    BYTE PTR [rax],al
   140005e26:	add    BYTE PTR [rax],al
   140005e28:	add    BYTE PTR [rax],al
   140005e2a:	add    BYTE PTR [rax],cl
   140005e2c:	mov    BYTE PTR [rax-0x764647],cl
   140005e32:	(bad)  
   140005e33:	(bad)  
   140005e34:	(bad)  
   140005e35:	(bad)  
   140005e36:	clc    
   140005e37:	fwait
   140005e38:	jns    0x140005dc3
   140005e3a:	cwde   
   140005e3b:	cwde   
   140005e3c:	mov    ?,eax
   140005e3e:	mov    cs,WORD PTR [rsi+0xe7888e]
   140005e44:	add    BYTE PTR [rax],al
   140005e46:	add    BYTE PTR [rax],al
   140005e48:	add    BYTE PTR [rax],al
   140005e4a:	add    BYTE PTR [rsi],cl
   140005e4c:	pop    QWORD PTR [rbx-0x6764c9]
   140005e52:	(bad)  
   140005e53:	(bad)  
   140005e54:	(bad)  
   140005e55:	(bad)  
   140005e56:	push   rdi
   140005e58:	mov    ecx,0x88b7b9b9
   140005e5d:	mov    bh,ah
   140005e5f:	mov    BYTE PTR [rdi+0x8e88],al
   140005e65:	add    BYTE PTR [rax],al
   140005e67:	add    BYTE PTR [rax],al
   140005e69:	add    BYTE PTR [rax],al
   140005e6b:	or     BYTE PTR [rdi-0x64846485],cl
   140005e71:	(bad)  
   140005e72:	(bad)  
   140005e73:	(bad)  
   140005e74:	(bad)  
   140005e75:	(bad)  
   140005e76:	(bad)  
   140005e77:	dec    DWORD PTR [rax-0x77686468]
   140005e7d:	mov    bh,ah
   140005e7f:	mov    bh,ah
   140005e81:	mov    BYTE PTR [rax+0x0],cl
   140005e87:	add    BYTE PTR [rax],al
   140005e89:	add    BYTE PTR [rax],al
   140005e8b:	or     BYTE PTR [rax-0x76467677],cl
   140005e91:	(bad)  
   140005e92:	(bad)  
   140005e93:	(bad)  
   140005e94:	(bad)  
   140005e95:	(bad)  
   140005e96:	(bad)  
   140005e97:	(bad)  
   140005e98:	clc    
   140005e99:	mov    bh,0xb9
   140005e9b:	mov    DWORD PTR [rax-0x73017378],ecx
   140005ea1:	clc    
   140005ea2:	out    0x0,eax
   140005ea4:	add    BYTE PTR [rax],al
   140005ea6:	add    BYTE PTR [rax],al
   140005ea8:	add    BYTE PTR [rax],al
   140005eaa:	add    BYTE PTR [rsi],cl
   140005eac:	(bad)  
   140005ead:	jnp    0x140005e4a
   140005eaf:	jns    0x140005e69
   140005eb1:	(bad)  
   140005eb2:	(bad)  
   140005eb3:	(bad)  
   140005eb4:	(bad)  
   140005eb5:	(bad)  
   140005eb6:	(bad)  
   140005eb7:	(bad)  
   140005eb8:	push   rdi
   140005eba:	fwait
   140005ebb:	fwait
   140005ebc:	mov    BYTE PTR [rax-0x77717719],cl
   140005ec2:	mov    es,WORD PTR [rax]
   140005ec4:	add    BYTE PTR [rax],al
   140005ec6:	add    BYTE PTR [rax],al
   140005ec8:	add    BYTE PTR [rax],al
   140005eca:	add    BYTE PTR [rax],cl
   140005ecc:	(bad)  
   140005ecd:	cmp    ebx,DWORD PTR [rax-0x6465]
   140005ed3:	(bad)  
   140005ed4:	(bad)  
   140005ed5:	(bad)  
   140005ed6:	(bad)  
   140005ed7:	(bad)  
   140005ed8:	(bad)  
   140005ed9:	clc    
   140005eda:	mov    bh,0x98
   140005edc:	mov    BYTE PTR [rax-0x77797119],cl
   140005ee2:	call   0x140005ee7
   140005ee7:	add    BYTE PTR [rax],al
   140005ee9:	add    BYTE PTR [rax],al
   140005eeb:	or     BYTE PTR [rax-0x48674487],cl
   140005ef1:	(bad)  
   140005ef2:	(bad)  
   140005ef3:	(bad)  
   140005ef4:	(bad)  
   140005ef5:	(bad)  
   140005ef6:	(bad)  
   140005ef7:	(bad)  
   140005ef8:	(bad)  
   140005ef9:	clc    
   140005efa:	fwait
   140005efb:	fwait
   140005efc:	xchg   DWORD PTR [rdi-0x77717719],ecx
   140005f02:	xchg   BYTE PTR [rax],al
   140005f04:	add    BYTE PTR [rax],al
   140005f06:	add    BYTE PTR [rax],al
   140005f08:	add    BYTE PTR [rax],al
   140005f0a:	add    BYTE PTR [rsi],cl
   140005f0c:	(bad)  
   140005f0d:	jnp    0x140005ea7
   140005f0f:	mov    ecx,0xffff8f98
   140005f14:	(bad)  
   140005f15:	(bad)  
   140005f16:	(bad)  
   140005f17:	(bad)  
   140005f18:	dec    DWORD PTR [rbx-0x77776468]
   140005f1e:	xchg   BYTE PTR [rax+0x8e88e7],cl
   140005f24:	add    BYTE PTR [rax],al
   140005f26:	add    BYTE PTR [rax],al
   140005f28:	add    BYTE PTR [rax],al
   140005f2a:	add    BYTE PTR [rax],cl
   140005f2c:	(bad)  
   140005f2d:	jnp    0x140005fa8
   140005f2f:	mov    bh,0xb9
   140005f31:	(bad)  
   140005f32:	(bad)  
   140005f33:	(bad)  
   140005f34:	(bad)  
   140005f35:	(bad)  
   140005f36:	(bad)  
   140005f37:	(bad)  
   140005f38:	clc    
   140005f39:	fwait
   140005f3a:	jnp    0x140005ed4
   140005f3c:	mov    BYTE PTR [rdi-0x7737719],cl
   140005f42:	out    0x0,eax
   140005f44:	add    BYTE PTR [rax],al
   140005f46:	add    BYTE PTR [rax],al
   140005f48:	add    BYTE PTR [rax],al
   140005f4a:	add    BYTE PTR [rax],cl
   140005f4c:	mov    BYTE PTR [rcx-0x744647],cl
   140005f52:	(bad)  
   140005f53:	(bad)  
   140005f54:	(bad)  
   140005f55:	(bad)  
   140005f56:	(bad)  
   140005f57:	clc    
   140005f58:	mov    ecx,0x88b979b9
   140005f5d:	mov    bh,ah
   140005f5f:	mov    bh,ah
   140005f61:	(bad)  
   140005f62:	mov    es,WORD PTR [rax]
   140005f64:	add    BYTE PTR [rax],al
   140005f66:	add    BYTE PTR [rax],al
   140005f68:	add    BYTE PTR [rax],al
   140005f6a:	add    BYTE PTR [rsi],cl
   140005f6c:	pop    QWORD PTR [rbx-0x678c85]
   140005f72:	(bad)  
   140005f73:	(bad)  
   140005f74:	(bad)  
   140005f75:	(bad)  
   140005f76:	dec    DWORD PTR [rcx-0x67648475]
   140005f7c:	clc    
   140005f7d:	clc    
   140005f7e:	mov    cs,WORD PTR [rax+0xe788e7]
   140005f84:	add    BYTE PTR [rax],al
   140005f86:	add    BYTE PTR [rax],al
   140005f88:	add    BYTE PTR [rax],al
   140005f8a:	add    BYTE PTR [rax],cl
   140005f8c:	(bad)  
   140005f8d:	mov    edx,DWORD PTR [rdi-0x4665]
   140005f93:	(bad)  
   140005f94:	(bad)  
   140005f95:	dec    DWORD PTR [rbx-0x67676465]
   140005f9b:	mov    eax,0x88e78888
   140005fa0:	mov    cs,WORD PTR [rax+0x88]
   140005fa6:	add    BYTE PTR [rax],al
   140005fa8:	add    BYTE PTR [rax],al
   140005faa:	add    BYTE PTR [rax],cl
   140005fac:	mov    BYTE PTR [rdi-0x748645],al
   140005fb2:	(bad)  
   140005fb3:	(bad)  
   140005fb4:	(bad)  
   140005fb5:	clc    
   140005fb6:	mov    ecx,0x399b988b
   140005fbb:	mov    BYTE PTR [rdi-0x18771871],cl
   140005fc1:	mov    bh,ah
	...
   140005fcb:	(bad)  
   140005fcc:	(bad)  
   140005fcd:	idiv   DWORD PTR [rcx-0x45]
   140005fd0:	cwde   
   140005fd1:	(bad)  
   140005fd2:	(bad)  
   140005fd3:	(bad)  
   140005fd4:	clc    
   140005fd5:	mov    ecx,0x9b7b9b8b
   140005fda:	jnp    0x140005f64
   140005fdc:	mov    BYTE PTR [rax-0x7730774],cl
   140005fe2:	mov    es,WORD PTR [rax]
   140005fe4:	add    BYTE PTR [rax],al
   140005fe6:	add    BYTE PTR [rax],al
   140005fe8:	add    BYTE PTR [rax],al
   140005fea:	add    BYTE PTR [rax],cl
   140005fec:	mov    al,bh
   140005fee:	mov    bh,0x98
   140005ff0:	mov    ecx,0x8bffffff
   140005ff5:	jns    0x140005fb0
   140005ff7:	mov    DWORD PTR [rcx-0x7777777],edi
   140005ffd:	clc    
   140005ffe:	out    0x8e,eax
   140006000:	mov    cs,WORD PTR [rax+0xe7]
   140006006:	add    BYTE PTR [rax],al
   140006008:	add    BYTE PTR [rax],al
   14000600a:	add    BYTE PTR [rax],cl
   14000600c:	mov    al,bh
   14000600e:	cmp    DWORD PTR [rcx-0x74000048],0xffffff98
   140006015:	fwait
   140006016:	jnp    0x140005fb3
   140006018:	jae    0x140005fd2
   14000601a:	mov    eax,0xe788f888
   14000601f:	mov    bh,ah
   140006021:	mov    BYTE PTR [rsi+0x0],cl
   140006027:	add    BYTE PTR [rax],al
   140006029:	add    BYTE PTR [rax],al
   14000602b:	(bad)  
   14000602c:	clc    
   14000602d:	pop    QWORD PTR [rdi-0x77706485]
   140006033:	mov    bh,0xb9
   140006035:	mov    bh,0x9b
   140006037:	jns    0x140005ff1
   140006039:	mov    DWORD PTR [rax-0x18077778],ecx
   14000603f:	mov    BYTE PTR [rsi+0xe788],al
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    BYTE PTR [rax],al
   140006049:	add    BYTE PTR [rax],al
   14000604b:	or     BYTE PTR [rdi+0x799bf888],cl
   140006051:	mov    bh,0xb9
   140006053:	mov    DWORD PTR [rdi-0x76878465],esi
   140006059:	mov    eax,0x8ff88f88
   14000605e:	out    0x88,eax
   140006060:	call   0x14000e8ed
   140006065:	add    BYTE PTR [rax],al
   140006067:	add    BYTE PTR [rax],al
   140006069:	add    BYTE PTR [rax],al
   14000606b:	or     al,bh
   14000606d:	clc    
   14000606e:	mov    cs,WORD PTR [rcx-0x64646448]
   140006074:	cwde   
   140006075:	mov    eax,0x88b8b798
   14000607a:	mov    al,bh
   14000607c:	mov    BYTE PTR [rax-0x77187719],cl
   140006082:	out    0x0,eax
   140006084:	add    BYTE PTR [rax],al
   140006086:	add    BYTE PTR [rax],al
   140006088:	add    BYTE PTR [rax],al
   14000608a:	add    BYTE PTR [rax],cl
   14000608c:	mov    al,bh
   14000608e:	clc    
   14000608f:	mov    BYTE PTR [rcx-0x47777449],cl
   140006095:	cwde   
   140006096:	mov    eax,0x8f889b78
   14000609b:	(bad)
   14000609f:	mov    BYTE PTR [rsi+0x8e88],cl
   1400060a5:	add    BYTE PTR [rax],al
   1400060a7:	add    BYTE PTR [rax],al
   1400060a9:	add    BYTE PTR [rax],al
   1400060ab:	or     BYTE PTR [rax-0x77707708],cl
   1400060b1:	mov    esi,DWORD PTR [rdi-0x49]
   1400060b4:	mov    ecx,DWORD PTR [rbx-0x77474777]
   1400060ba:	clc    
   1400060bb:	mov    BYTE PTR [rax-0x18777178],cl
   1400060c1:	mov    bh,ah
	...
   1400060cb:	or     BYTE PTR [rax-0x7077171],cl
   1400060d1:	mov    BYTE PTR [rdi-0x77747677],dh
   1400060d7:	mov    eax,0x88f8f888
   1400060dc:	mov    BYTE PTR [rax-0x7737719],cl
   1400060e2:	mov    es,WORD PTR [rax]
   1400060e4:	add    BYTE PTR [rax],al
   1400060e6:	add    BYTE PTR [rax],al
   1400060e8:	add    BYTE PTR [rax],al
   1400060ea:	add    BYTE PTR [rax],cl
   1400060ec:	(bad)  
   1400060f0:	(bad)
   1400060f4:	mov    eax,0x8f8878b7
   1400060f9:	mov    BYTE PTR [rax-0x18707778],cl
   1400060ff:	mov    cs,WORD PTR [rsi+0xe788]
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    BYTE PTR [rax],al
   140006109:	add    BYTE PTR [rax],al
   14000610b:	or     bh,ch
   14000610d:	clc    
   14000610e:	mov    BYTE PTR [rax-0x77777778],cl
   140006114:	mov    BYTE PTR [rax-0x70777008],cl
   14000611a:	mov    BYTE PTR [rax-0x77187778],cl
   140006120:	xchg   DWORD PTR [rax+0x88],ecx
   140006126:	add    BYTE PTR [rax],al
   140006128:	add    BYTE PTR [rax],al
   14000612a:	add    BYTE PTR [rax],cl
   14000612c:	clc    
   14000612d:	clc    
   14000612e:	mov    ?,eax
   140006130:	mov    BYTE PTR [rax-0x70707071],cl
   140006136:	(bad)  
   14000613a:	mov    BYTE PTR [rax-0x7737078],cl
   140006140:	mov    cs,WORD PTR [rax+0x8e]
   140006146:	add    BYTE PTR [rax],al
   140006148:	add    BYTE PTR [rax],al
   14000614a:	add    BYTE PTR [rax],cl
   14000614c:	(bad)  
   14000614d:	(bad)  
   14000614e:	dec    DWORD PTR [rdi-0x77777771]
   140006154:	mov    BYTE PTR [rax-0x77770778],cl
   14000615a:	mov    BYTE PTR [rax-0x17177778],cl
   140006160:	mov    cs,WORD PTR [rax+0xe0]
   140006166:	add    BYTE PTR [rax],al
   140006168:	add    BYTE PTR [rax],al
   14000616a:	add    BYTE PTR [rax],al
   14000616c:	call   0x128e94a59
   140006171:	call   0xc8f8f05e
   140006176:	mov    BYTE PTR [rax-0x77777778],cl
   14000617c:	clc    
   14000617d:	mov    BYTE PTR [rax+0x8088],cl
	...
   140006193:	add    BYTE PTR [rax],al
   140006195:	mov    al,ch
   140006197:	call   0x12888f02a
   14000619c:	call   0x140006289
	...
   140006365:	add    BYTE PTR [rax],al
   140006367:	add    bh,bh
   140006369:	(bad)  
   14000636a:	(bad)  
   14000636b:	(bad)  
   14000636c:	(bad)  
   14000636d:	(bad)  
   14000636e:	(bad)  
   14000636f:	(bad)  
   140006370:	(bad)  
   140006371:	(bad)  
   140006372:	(bad)  
   140006373:	(bad)  
   140006374:	(bad)  
   140006375:	(bad)  
   140006376:	(bad)  
   140006377:	(bad)  
   140006378:	(bad)  
   140006379:	(bad)  
   14000637a:	(bad)  
   14000637b:	(bad)  
   14000637c:	(bad)  
   14000637d:	(bad)  
   14000637e:	(bad)  
   14000637f:	(bad)  
   140006380:	(bad)  
   140006381:	(bad)  
   140006382:	(bad)  
   140006383:	(bad)  
   140006384:	(bad)  
   140006385:	(bad)  
   140006386:	(bad)  
   140006387:	(bad)  
   140006388:	(bad)  
   140006389:	(bad)  
   14000638a:	(bad)  
   14000638b:	(bad)  
   14000638c:	clc    
   14000638d:	ud0    edi,edi
   140006390:	(bad)  
   140006391:	(bad)  
   140006392:	(bad)  
   140006393:	cld    
   140006394:	add    BYTE PTR [rdi],al
   140006396:	(bad)  
   140006397:	(bad)  
   140006398:	(bad)  
   140006399:	(bad)  
   14000639a:	inc    BYTE PTR [rax]
   14000639c:	add    BYTE PTR [rax],al
   14000639e:	jg     0x14000639f
   1400063a0:	(bad)  
   1400063a1:	inc    DWORD PTR [rax]
   1400063a3:	add    BYTE PTR [rax],al
   1400063a5:	add    BYTE PTR [rdi],cl
   1400063a7:	(bad)  
   1400063a8:	inc    DWORD PTR [rax+0x0]
   1400063ae:	(bad)  
   1400063af:	(bad)  
   1400063b0:	inc    BYTE PTR [rax]
   1400063b2:	add    BYTE PTR [rax],al
   1400063b4:	add    BYTE PTR [rax],al
   1400063b6:	add    edi,edi
   1400063b8:	inc    BYTE PTR [rax]
   1400063ba:	add    BYTE PTR [rax],al
   1400063bc:	add    BYTE PTR [rax],al
   1400063be:	add    edi,edi
   1400063c0:	inc    BYTE PTR [rax]
   1400063c2:	add    BYTE PTR [rax],al
   1400063c4:	add    BYTE PTR [rax],al
   1400063c6:	add    edi,edi
   1400063c8:	inc    BYTE PTR [rax]
   1400063ca:	add    BYTE PTR [rax],al
   1400063cc:	add    BYTE PTR [rax],al
   1400063ce:	add    edi,edi
   1400063d0:	inc    BYTE PTR [rax]
   1400063d2:	add    BYTE PTR [rax],al
   1400063d4:	add    BYTE PTR [rax],al
   1400063d6:	add    edi,edi
   1400063d8:	inc    BYTE PTR [rax]
   1400063da:	add    BYTE PTR [rax],al
   1400063dc:	add    BYTE PTR [rax],al
   1400063de:	add    edi,edi
   1400063e0:	inc    BYTE PTR [rax]
   1400063e2:	add    BYTE PTR [rax],al
   1400063e4:	add    BYTE PTR [rax],al
   1400063e6:	add    edi,edi
   1400063e8:	inc    BYTE PTR [rax]
   1400063ea:	add    BYTE PTR [rax],al
   1400063ec:	add    BYTE PTR [rax],al
   1400063ee:	add    edi,edi
   1400063f0:	inc    BYTE PTR [rax]
   1400063f2:	add    BYTE PTR [rax],al
   1400063f4:	add    BYTE PTR [rax],al
   1400063f6:	add    edi,edi
   1400063f8:	inc    BYTE PTR [rax]
   1400063fa:	add    BYTE PTR [rax],al
   1400063fc:	add    BYTE PTR [rax],al
   1400063fe:	add    edi,edi
   140006400:	inc    BYTE PTR [rax]
   140006402:	add    BYTE PTR [rax],al
   140006404:	add    BYTE PTR [rax],al
   140006406:	add    edi,edi
   140006408:	inc    BYTE PTR [rax]
   14000640a:	add    BYTE PTR [rax],al
   14000640c:	add    BYTE PTR [rax],al
   14000640e:	add    edi,edi
   140006410:	inc    BYTE PTR [rax]
   140006412:	add    BYTE PTR [rax],al
   140006414:	add    BYTE PTR [rax],al
   140006416:	add    edi,edi
   140006418:	inc    BYTE PTR [rax]
   14000641a:	add    BYTE PTR [rax],al
   14000641c:	add    BYTE PTR [rax],al
   14000641e:	add    edi,edi
   140006420:	inc    BYTE PTR [rax]
   140006422:	add    BYTE PTR [rax],al
   140006424:	add    BYTE PTR [rax],al
   140006426:	add    edi,edi
   140006428:	inc    BYTE PTR [rax]
   14000642a:	add    BYTE PTR [rax],al
   14000642c:	add    BYTE PTR [rax],al
   14000642e:	add    edi,edi
   140006430:	inc    BYTE PTR [rax]
   140006432:	add    BYTE PTR [rax],al
   140006434:	add    BYTE PTR [rax],al
   140006436:	add    edi,edi
   140006438:	inc    BYTE PTR [rax]
   14000643a:	add    BYTE PTR [rax],al
   14000643c:	add    BYTE PTR [rax],al
   14000643e:	add    edi,edi
   140006440:	inc    BYTE PTR [rax]
   140006442:	add    BYTE PTR [rax],al
   140006444:	add    BYTE PTR [rax],al
   140006446:	add    edi,edi
   140006448:	inc    BYTE PTR [rax]
   14000644a:	add    BYTE PTR [rax],al
   14000644c:	add    BYTE PTR [rax],al
   14000644e:	add    edi,edi
   140006450:	inc    BYTE PTR [rax]
   140006452:	add    BYTE PTR [rax],al
   140006454:	add    BYTE PTR [rax],al
   140006456:	add    edi,edi
   140006458:	inc    BYTE PTR [rax]
   14000645a:	add    BYTE PTR [rax],al
   14000645c:	add    BYTE PTR [rax],al
   14000645e:	add    edi,edi
   140006460:	inc    BYTE PTR [rax]
   140006462:	add    BYTE PTR [rax],al
   140006464:	add    BYTE PTR [rax],al
   140006466:	add    edi,edi
   140006468:	inc    BYTE PTR [rax]
   14000646a:	add    BYTE PTR [rax],al
   14000646c:	add    BYTE PTR [rax],al
   14000646e:	add    edi,edi
   140006470:	inc    BYTE PTR [rax]
   140006472:	add    BYTE PTR [rax],al
   140006474:	add    BYTE PTR [rax],al
   140006476:	add    edi,edi
   140006478:	inc    BYTE PTR [rax]
   14000647a:	add    BYTE PTR [rax],al
   14000647c:	add    BYTE PTR [rax],al
   14000647e:	add    edi,edi
   140006480:	inc    BYTE PTR [rax]
   140006482:	add    BYTE PTR [rax],al
   140006484:	add    BYTE PTR [rax],al
   140006486:	add    edi,edi
   140006488:	inc    BYTE PTR [rax]
   14000648a:	add    BYTE PTR [rax],al
   14000648c:	add    BYTE PTR [rax],al
   14000648e:	add    edi,edi
   140006490:	inc    BYTE PTR [rax]
   140006492:	add    BYTE PTR [rax],al
   140006494:	add    BYTE PTR [rax],al
   140006496:	add    edi,edi
   140006498:	inc    BYTE PTR [rax]
   14000649a:	add    BYTE PTR [rax],al
   14000649c:	add    BYTE PTR [rax],al
   14000649e:	add    edi,edi
   1400064a0:	inc    BYTE PTR [rax]
   1400064a2:	add    BYTE PTR [rax],al
   1400064a4:	add    BYTE PTR [rax],al
   1400064a6:	add    edi,edi
   1400064a8:	inc    BYTE PTR [rax]
   1400064aa:	add    BYTE PTR [rax],al
   1400064ac:	add    BYTE PTR [rax],al
   1400064ae:	add    edi,edi
   1400064b0:	inc    BYTE PTR [rax]
   1400064b2:	add    BYTE PTR [rax],al
   1400064b4:	add    BYTE PTR [rax],al
   1400064b6:	add    edi,edi
   1400064b8:	inc    BYTE PTR [rax]
   1400064ba:	add    BYTE PTR [rax],al
   1400064bc:	add    BYTE PTR [rax],al
   1400064be:	add    edi,edi
   1400064c0:	inc    BYTE PTR [rax]
   1400064c2:	add    BYTE PTR [rax],al
   1400064c4:	add    BYTE PTR [rax],al
   1400064c6:	add    edi,edi
   1400064c8:	inc    BYTE PTR [rax]
   1400064ca:	add    BYTE PTR [rax],al
   1400064cc:	add    BYTE PTR [rax],al
   1400064ce:	add    edi,edi
   1400064d0:	inc    BYTE PTR [rax]
   1400064d2:	add    BYTE PTR [rax],al
   1400064d4:	add    BYTE PTR [rax],al
   1400064d6:	add    edi,edi
   1400064d8:	inc    BYTE PTR [rax]
   1400064da:	add    BYTE PTR [rax],al
   1400064dc:	add    BYTE PTR [rax],al
   1400064de:	add    edi,edi
   1400064e0:	inc    BYTE PTR [rax]
   1400064e2:	add    BYTE PTR [rax],al
   1400064e4:	add    BYTE PTR [rax],al
   1400064e6:	(bad)  
   1400064e7:	(bad)  
   1400064e8:	inc    DWORD PTR [rax]
   1400064ea:	add    BYTE PTR [rax],al
   1400064ec:	add    BYTE PTR [rax],al
   1400064ee:	jg     0x1400064ef
   1400064f0:	(bad)  
   1400064f1:	(bad)  
   1400064f2:	inc    eax
   1400064f4:	add    BYTE PTR [rdi],cl
   1400064f6:	(bad)  
   1400064f7:	(bad)  
   1400064f8:	(bad)  
   1400064f9:	(bad)  
   1400064fa:	(bad)  
   1400064fb:	(bad)  
   1400064fc:	(bad)  
   1400064fd:	(bad)  
   1400064fe:	(bad)  
   1400064ff:	(bad)  
   140006500:	(bad)  
   140006501:	(bad)  
   140006502:	(bad)  
   140006503:	(bad)  
   140006504:	(bad)  
   140006505:	(bad)  
   140006506:	(bad)  
   140006507:	(bad)  
   140006508:	(bad)  
   140006509:	(bad)  
   14000650a:	(bad)  
   14000650b:	(bad)  
   14000650c:	(bad)  
   14000650d:	(bad)  
   14000650e:	(bad)  
   14000650f:	(bad)  
   140006510:	(bad)  
   140006511:	(bad)  
   140006512:	(bad)  
   140006513:	(bad)  
   140006514:	(bad)  
   140006515:	(bad)  
   140006516:	(bad)  
   140006517:	(bad)  
   140006518:	(bad)  
   140006519:	(bad)  
   14000651a:	(bad)  
   14000651b:	(bad)  
   14000651c:	(bad)  
   14000651d:	(bad)  
   14000651e:	(bad)  
   14000651f:	(bad)  
   140006520:	(bad)  
   140006521:	(bad)  
   140006522:	(bad)  
   140006523:	(bad)  
   140006524:	(bad)  
   140006525:	(bad)  
   140006526:	(bad)  
   140006527:	(bad)  
   140006528:	(bad)  
   140006529:	(bad)  
   14000652a:	(bad)  
   14000652b:	(bad)  
   14000652c:	(bad)  
   14000652d:	(bad)  
   14000652e:	(bad)  
   14000652f:	(bad)  
   140006530:	(bad)  
   140006531:	(bad)  
   140006532:	(bad)  
   140006533:	(bad)  
   140006534:	(bad)  
   140006535:	(bad)  
   140006536:	(bad)  
   140006537:	(bad)  
   140006538:	(bad)  
   140006539:	(bad)  
   14000653a:	(bad)  
   14000653b:	(bad)  
   14000653c:	(bad)  
   14000653d:	(bad)  
   14000653e:	(bad)  
   14000653f:	(bad)  
   140006540:	(bad)  
   140006541:	(bad)  
   140006542:	(bad)  
   140006543:	(bad)  
   140006544:	(bad)  
   140006545:	(bad)  
   140006546:	(bad)  
   140006547:	(bad)  
   140006548:	(bad)  
   140006549:	(bad)  
   14000654a:	(bad)  
   14000654b:	(bad)  
   14000654c:	(bad)  
   14000654d:	(bad)  
   14000654e:	(bad)  
   14000654f:	(bad)  
   140006550:	(bad)  
   140006551:	(bad)  
   140006552:	(bad)  
   140006553:	(bad)  
   140006554:	(bad)  
   140006555:	(bad)  
   140006556:	(bad)  
   140006557:	(bad)  
   140006558:	(bad)  
   140006559:	(bad)  
   14000655a:	(bad)  
   14000655b:	(bad)  
   14000655c:	(bad)  
   14000655d:	(bad)  
   14000655e:	(bad)  
   14000655f:	(bad)  
   140006560:	(bad)  
   140006561:	(bad)  
   140006562:	(bad)  
   140006563:	(bad)  
   140006564:	(bad)  
   140006565:	(bad)  
   140006566:	(bad)  
   140006567:	jmp    FWORD PTR [rax]
   140006569:	add    BYTE PTR [rax],al
   14000656b:	add    BYTE PTR [rax],dh
   14000656d:	add    BYTE PTR [rax],al
   14000656f:	add    BYTE PTR [rax+0x0],ah
   140006572:	add    BYTE PTR [rax],al
   140006574:	add    DWORD PTR [rax],eax
   140006576:	add    al,0x0
   140006578:	add    BYTE PTR [rax],al
   14000657a:	add    BYTE PTR [rax],al
   14000657c:	add    BYTE PTR [rax+rax*1],0x0
	...
   140006594:	add    BYTE PTR [rax],al
   140006596:	add    BYTE PTR [rax],0x0
   140006599:	add    BYTE PTR [rax],0x0
   14000659c:	add    BYTE PTR [rax+0x800080],al
   1400065a2:	add    BYTE PTR [rax],al
   1400065a4:	add    BYTE PTR [rax],0x80
   1400065a7:	add    BYTE PTR [rax-0x7fffff80],al
   1400065ad:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400065b4:	add    BYTE PTR [rax],al
   1400065b6:	inc    DWORD PTR [rax]
   1400065b8:	add    bh,bh
   1400065ba:	add    BYTE PTR [rax],al
   1400065bc:	add    bh,bh
   1400065be:	inc    DWORD PTR [rax]
   1400065c0:	inc    DWORD PTR [rax]
   1400065c2:	add    BYTE PTR [rax],al
   1400065c4:	inc    DWORD PTR [rax]
   1400065c6:	inc    DWORD PTR [rax]
   1400065c8:	(bad)  
   1400065c9:	inc    DWORD PTR [rax]
   1400065cb:	add    bh,bh
   1400065cd:	(bad)  
   1400065ce:	inc    DWORD PTR [rax]
	...
   14000660c:	add    BYTE PTR [rax],al
   14000660e:	mov    al,ch
   140006610:	jo     0x140006612
	...
   140006622:	mov    BYTE PTR [rsi-0x77777179],cl
   140006628:	mov    ?,WORD PTR [rax+0x0]
	...
   140006633:	add    BYTE PTR [rax],al
   140006635:	add    BYTE PTR [rax],cl
   140006637:	mov    bh,ah
   140006639:	mov    cs,WORD PTR [rsi-0x71777178]
   14000663f:	mov    BYTE PTR [rsi+0x70e6],al
   140006645:	add    BYTE PTR [rax],al
   140006647:	add    BYTE PTR [rax],al
   140006649:	add    BYTE PTR [rax],al
   14000664b:	mov    BYTE PTR [rsi-0x77171788],cl
   140006651:	mov    BYTE PTR [rax-0x77777778],cl
   140006657:	mov    cs,WORD PTR [rsi+0xce88]
   14000665d:	add    BYTE PTR [rax],al
   14000665f:	add    BYTE PTR [rax],al
   140006661:	or     BYTE PTR [rsi-0x77777772],cl
   140006667:	mov    BYTE PTR [rax-0x71177718],cl
   14000666d:	mov    cs,WORD PTR [rsi+0x67888c88]
   140006673:	push   0x0
   140006678:	add    BYTE PTR [rsi-0x71777778],cl
   14000667e:	mov    BYTE PTR [rax-0x77770718],cl
   140006684:	mov    BYTE PTR [rax-0x77717778],cl
   14000668a:	call   0x14000671d
   14000668f:	add    BYTE PTR [rax],al
   140006691:	mov    al,bh
   140006693:	clc    
   140006694:	mov    ?,eax
   140006696:	mov    BYTE PTR [rax-0x17777778],cl
   14000669c:	mov    cs,WORD PTR [rax-0x77717772]
   1400066a2:	outs   dx,BYTE PTR ds:[rsi]
   1400066a3:	xchg   BYTE PTR [rax],al
   1400066a5:	add    BYTE PTR [rax],al
   1400066a7:	add    BYTE PTR [rax],al
   1400066a9:	call   0xcf88f536
   1400066ae:	mov    BYTE PTR [rbx-0x67],bh
   1400066b1:	mov    ecx,0x8e888888
   1400066b6:	mov    BYTE PTR [rsi-0x7897770a],cl
   1400066bc:	add    BYTE PTR [rax],al
   1400066be:	add    BYTE PTR [rax],al
   1400066c0:	add    BYTE PTR [rax-0x77770708],cl
   1400066c6:	cmp    DWORD PTR [rcx-0x67646885],edi
   1400066cc:	mov    BYTE PTR [rax-0x77717778],cl
   1400066d2:	out    0x8e,eax
   1400066d4:	add    BYTE PTR [rax],al
   1400066d6:	add    BYTE PTR [rax],al
   1400066d8:	add    BYTE PTR [rax-0x78],bh
   1400066db:	dec    BYTE PTR [rax-0x6c68847d]
   1400066e1:	fwait
   1400066e2:	xchg   edi,eax
   1400066e3:	fwait
   1400066e4:	js     0x140006674
   1400066e6:	mov    al,ch
   1400066e8:	test   BYTE PTR [rax+0x8ec8],0x0
   1400066ef:	add    BYTE PTR [rax],al
   1400066f1:	call   0xf9885fee
   1400066f6:	cdq    
   1400066f7:	mov    ecx,0x999b98b7
   1400066fc:	mov    ecx,0x8e88888f
   140006701:	mov    al,ch
   140006703:	xchg   DWORD PTR [rax],eax
   140006705:	add    BYTE PTR [rax],al
   140006707:	add    BYTE PTR [rax],al
   140006709:	mov    BYTE PTR [rax-0x70847678],cl
   14000670f:	mov    DWORD PTR [rcx-0x47],edi
   140006712:	mov    ecx,0xe898988b
   140006717:	mov    ?,esi
   140006719:	mov    BYTE PTR [rsi-0x2],ch
   14000671c:	add    BYTE PTR [rax],al
   14000671e:	add    BYTE PTR [rax],al
   140006720:	add    al,ch
   140006722:	clc    
   140006723:	mov    BYTE PTR [rbx],bh
   140006725:	cwde   
   140006726:	(bad)  
   140006727:	(bad)  
   140006728:	mov    ecx,0x9b977b89
   14000672d:	jnp    0x1400066b7
   14000672f:	mov    BYTE PTR [rsi+0x8ce888],cl
   140006735:	add    BYTE PTR [rax],al
   140006737:	add    BYTE PTR [rax],al
   140006739:	mov    BYTE PTR [rdi-0x474679],cl
   14000673f:	(bad)  
   140006740:	clc    
   140006741:	mov    ecx,0x97b9b9b9
   140006746:	mov    al,ch
   140006748:	test   BYTE PTR [rax+0x8ec8],0x0
   14000674f:	add    BYTE PTR [rax],al
   140006751:	js     0x1400066db
   140006753:	mov    edx,DWORD PTR [rdi-0x68]
   140006759:	clc    
   14000675a:	xchg   edi,eax
   14000675b:	cwde   
   14000675c:	cwde   
   14000675d:	mov    ecx,0x888e8888
   140006762:	call   0x1400067f5
   140006767:	add    BYTE PTR [rax],al
   140006769:	out    dx,eax
   14000676a:	clc    
   14000676b:	(bad)  
   14000676c:	fwait
   14000676d:	lahf   
   14000676e:	(bad)  
   14000676f:	(bad)  
   140006770:	(bad)  
   140006771:	dec    DWORD PTR [rbx-0x67646465]
   140006777:	mov    BYTE PTR [rsi+0xf76e88],cl
   14000677d:	add    BYTE PTR [rax],al
   14000677f:	add    BYTE PTR [rax],al
   140006781:	mov    BYTE PTR [rax-0x677447],cl
   140006787:	(bad)  
   140006788:	(bad)  
   140006789:	(bad)  
   14000678a:	dec    DWORD PTR [rcx-0x71478677]
   140006790:	mov    WORD PTR [rax+0x8ee7],cs
   140006796:	add    BYTE PTR [rax],al
   140006798:	add    al,ch
   14000679a:	clc    
   14000679b:	fwait
   14000679c:	xchg   edi,eax
   14000679d:	mov    eax,0xffffffff
   1400067a2:	(bad)  
   1400067a3:	(bad)  
   1400067a4:	mov    ecx,0xfe8897b7
   1400067a9:	mov    al,cl
   1400067ab:	xchg   DWORD PTR [rax],eax
   1400067ad:	add    BYTE PTR [rax],al
   1400067af:	add    BYTE PTR [rax],al
   1400067b1:	mov    BYTE PTR [rax-0x6746c8],cl
   1400067b7:	(bad)  
   1400067b8:	(bad)  
   1400067b9:	(bad)  
   1400067ba:	(bad)  
   1400067bb:	(bad)  
   1400067bc:	clc    
   1400067bd:	fwait
   1400067be:	fwait
   1400067bf:	mov    BYTE PTR [rsi+0x8ee888],al
   1400067c5:	add    BYTE PTR [rax],al
   1400067c7:	add    BYTE PTR [rax],al
   1400067c9:	js     0x1400067be
   1400067cb:	fwait
   1400067cc:	fwait
   1400067cd:	mov    eax,0xffffffff
   1400067d2:	(bad)  
   1400067d3:	(bad)  
   1400067d4:	dec    DWORD PTR [rcx-0x77017177]
   1400067da:	out    0x8e,eax
   1400067dc:	add    BYTE PTR [rax],al
   1400067de:	add    BYTE PTR [rax],al
   1400067e0:	add    bh,ch
   1400067e2:	mov    BYTE PTR [rcx-0x6777],bh
   1400067e8:	(bad)  
   1400067e9:	(bad)  
   1400067ea:	(bad)  
   1400067eb:	(bad)  
   1400067ec:	(bad)  
   1400067ed:	mov    ecx,0x888c88bb
   1400067f2:	push   0x87
   1400067f7:	add    BYTE PTR [rax],al
   1400067f9:	mov    cl,bh
   1400067fb:	mov    ecx,0xffffb8b7
   140006800:	(bad)  
   140006801:	(bad)  
   140006802:	(bad)  
   140006803:	(bad)  
   140006804:	clc    
   140006805:	mov    edx,DWORD PTR [rdi-0x17777178]
   14000680b:	mov    es,WORD PTR [rax]
   14000680d:	add    BYTE PTR [rax],al
   14000680f:	add    BYTE PTR [rax],al
   140006811:	js     0x14000679b
   140006813:	cwde   
   140006814:	fwait
   140006815:	cwde   
   140006816:	(bad)  
   140006817:	(bad)  
   140006818:	(bad)  
   140006819:	(bad)  
   14000681a:	(bad)  
   14000681b:	dec    DWORD PTR [rbx-0x71786469]
   140006821:	mov    BYTE PTR [rsi-0x79],ch
   140006824:	add    BYTE PTR [rax],al
   140006826:	add    BYTE PTR [rax],al
   140006828:	add    bh,ch
   14000682a:	idiv   DWORD PTR [rbx-0x4768]
   140006830:	(bad)  
   140006831:	(bad)  
   140006832:	dec    DWORD PTR [rbx-0x77474667]
   140006838:	xchg   BYTE PTR [rax+0x8ee8],cl
   14000683e:	add    BYTE PTR [rax],al
   140006840:	add    BYTE PTR [rax-0x47866408],cl
   140006846:	(bad)  
   140006847:	(bad)  
   140006848:	(bad)  
   140006849:	(bad)  
   14000684a:	sti    
   14000684b:	xchg   edi,eax
   14000684c:	mov    bh,0xb7
   14000684e:	cwde   
   14000684f:	mov    cs,WORD PTR [rsi+0x86c888]
   140006855:	add    BYTE PTR [rax],al
   140006857:	add    BYTE PTR [rax],al
   140006859:	js     0x140006853
   14000685b:	jnp    0x1400067f8
   14000685d:	cwde   
   14000685e:	(bad)  
   14000685f:	(bad)  
   140006860:	(bad)  
   140006861:	clc    
   140006862:	mov    bh,0x9b
   140006864:	xchg   edi,eax
   140006865:	fwait
   140006866:	cwde   
   140006867:	mov    BYTE PTR [rdi+0x8ee8e8],al
   14000686d:	add    BYTE PTR [rax],al
   14000686f:	add    BYTE PTR [rax],al
   140006871:	out    dx,eax
   140006872:	(bad)  
   140006873:	jnp    0x1400068f0
   140006875:	lahf   
   140006876:	(bad)  
   140006877:	(bad)  
   140006878:	(bad)  
   140006879:	mov    ecx,0xb7b9b789
   14000687e:	mov    al,ch
   140006880:	mov    cs,WORD PTR [rax+0x8768]
   140006886:	add    BYTE PTR [rax],al
   140006888:	add    BYTE PTR [rax-0x77467608],cl
   14000688e:	(bad)  
   14000688f:	dec    DWORD PTR [rbx-0x48866485]
   140006895:	fwait
   140006896:	mov    BYTE PTR [rax-0x7117777a],cl
   14000689c:	add    BYTE PTR [rax],al
   14000689e:	add    BYTE PTR [rax],al
   1400068a0:	add    al,ch
   1400068a2:	clc    
   1400068a3:	div    DWORD PTR [rdi-0x46070048]
   1400068a9:	jns    0x140006862
   1400068ab:	mov    ecx,0x8887988b
   1400068b0:	dec    BYTE PTR [rax+0x8ec8]
   1400068b6:	add    BYTE PTR [rax],al
   1400068b8:	add    BYTE PTR [rax-0x46867771],cl
   1400068be:	clc    
   1400068bf:	mov    ecx,0x989bb8b9
   1400068c4:	fwait
   1400068c5:	mov    BYTE PTR [rax-0x17777918],cl
   1400068cb:	xchg   BYTE PTR [rax],al
   1400068cd:	add    BYTE PTR [rax],al
   1400068cf:	add    BYTE PTR [rax],al
   1400068d1:	call   0x1bb8bf8d5
   1400068d6:	fwait
   1400068d7:	fwait
   1400068d8:	ja     0x140006893
   1400068da:	mov    bh,0xb9
   1400068dc:	mov    ecx,0xfe888888
   1400068e1:	mov    BYTE PTR [rsi-0x2],ch
   1400068e4:	add    BYTE PTR [rax],al
   1400068e6:	add    BYTE PTR [rax],al
   1400068e8:	add    BYTE PTR [rdi-0x78],bh
   1400068eb:	clc    
   1400068ec:	call   0xf98a048c
   1400068f1:	mov    bh,0x9b
   1400068f3:	jnp    0x14000696d
   1400068f5:	mov    BYTE PTR [rax-0x17877178],cl
   1400068fb:	xchg   DWORD PTR [rax],eax
   1400068fd:	add    BYTE PTR [rax],al
   1400068ff:	add    BYTE PTR [rax],al
   140006901:	call   0xc78ff205
   140006906:	mov    ecx,0x797b9bb8
   14000690b:	mov    ecx,0xfe8e88f8
   140006910:	test   BYTE PTR [rax+0x8ec8],0x0
   140006917:	add    BYTE PTR [rax],al
   140006919:	mov    BYTE PTR [rax-0x74777778],cl
   14000691f:	fwait
   140006920:	mov    bh,0x9b
   140006922:	fwait
   140006923:	mov    BYTE PTR [rax-0x71707078],cl
   140006929:	mov    al,ch
   14000692b:	xchg   BYTE PTR [rax],al
   14000692d:	add    BYTE PTR [rax],al
   14000692f:	add    BYTE PTR [rax],al
   140006931:	js     0x140006932
   140006933:	mov    ?,eax
   140006935:	clc    
   140006936:	mov    BYTE PTR [rax-0x77777787],cl
   14000693c:	clc    
   14000693d:	mov    BYTE PTR [rax+0x6e88f688],cl
   140006943:	test   DWORD PTR [rax],0x0
   140006949:	out    dx,eax
   14000694a:	mov    al,bh
   14000694c:	mov    BYTE PTR [rax-0x77007711],cl
   140006952:	clc    
   140006953:	clc    
   140006954:	out    dx,eax
   140006955:	mov    BYTE PTR [rax-0x18877111],cl
   14000695b:	mov    es,WORD PTR [rax]
   14000695d:	add    BYTE PTR [rax],al
   14000695f:	add    BYTE PTR [rax],al
   140006961:	mov    bh,bh
   140006963:	clc    
   140006964:	clc    
   140006965:	(bad)  
   140006966:	clc    
   140006967:	(bad)  
   14000696b:	(bad)  
   14000696c:	(bad)
   140006970:	mov    cs,WORD PTR [rax+0xe8c8]
   140006976:	add    BYTE PTR [rax],al
   140006978:	add    BYTE PTR [rsi-0x71717182],cl
   14000697e:	mov    al,ch
   140006980:	mov    cs,WORD PTR [rax-0x77770772]
   140006986:	mov    al,bh
   140006988:	dec    dh
	...
   140006996:	add    BYTE PTR [rax-0x17771778],cl
   14000699c:	out    dx,al
   14000699d:	mov    cs,WORD PTR [rsi+0xe8e7]
	...
   140006a4f:	add    bh,bh
   140006a51:	(bad)  
   140006a52:	(bad)  
   140006a53:	(bad)  
   140006a54:	(bad)  
   140006a55:	inc    DWORD PTR [rax]
   140006a57:	add    bh,bh
   140006a59:	(bad)  
   140006a5a:	(bad)  
   140006a5b:	(bad)  
   140006a5c:	(bad)  
   140006a5d:	inc    DWORD PTR [rax]
   140006a5f:	add    bh,bh
   140006a61:	(bad)  
   140006a62:	push   rax
   140006a64:	jg     0x140006a65
   140006a66:	add    BYTE PTR [rax],al
   140006a68:	(bad)  
   140006a69:	push   rax
   140006a6b:	add    BYTE PTR [rdi],bl
   140006a6d:	inc    DWORD PTR [rax]
   140006a6f:	add    bh,bh
   140006a71:	clc    
   140006a72:	add    BYTE PTR [rax],al
   140006a74:	(bad)  
   140006a75:	inc    DWORD PTR [rax]
   140006a77:	add    ah,bh
   140006a79:	add    BYTE PTR [rax],al
   140006a7b:	add    BYTE PTR [rbx],al
   140006a7d:	inc    DWORD PTR [rax]
   140006a7f:	add    al,ah
   140006a81:	add    BYTE PTR [rax],al
   140006a83:	add    BYTE PTR [rax],al
   140006a85:	inc    DWORD PTR [rax]
   140006a87:	add    al,al
   140006a89:	add    BYTE PTR [rax],al
   140006a8b:	add    BYTE PTR [rax],al
   140006a8d:	inc    DWORD PTR [rax]
   140006a8f:	add    al,al
   140006a91:	add    BYTE PTR [rax],al
   140006a93:	add    BYTE PTR [rax],al
   140006a95:	inc    DWORD PTR [rax]
   140006a97:	add    al,al
   140006a99:	add    BYTE PTR [rax],al
   140006a9b:	add    BYTE PTR [rax],al
   140006a9d:	inc    DWORD PTR [rax]
   140006a9f:	add    al,al
   140006aa1:	add    BYTE PTR [rax],al
   140006aa3:	add    BYTE PTR [rax],al
   140006aa5:	inc    DWORD PTR [rax]
   140006aa7:	add    al,al
   140006aa9:	add    BYTE PTR [rax],al
   140006aab:	add    BYTE PTR [rax],al
   140006aad:	inc    DWORD PTR [rax]
   140006aaf:	add    al,al
   140006ab1:	add    BYTE PTR [rax],al
   140006ab3:	add    BYTE PTR [rax],al
   140006ab5:	inc    DWORD PTR [rax]
   140006ab7:	add    al,al
   140006ab9:	add    BYTE PTR [rax],al
   140006abb:	add    BYTE PTR [rax],al
   140006abd:	inc    DWORD PTR [rax]
   140006abf:	add    al,al
   140006ac1:	add    BYTE PTR [rax],al
   140006ac3:	add    BYTE PTR [rax],al
   140006ac5:	inc    DWORD PTR [rax]
   140006ac7:	add    al,al
   140006ac9:	add    BYTE PTR [rax],al
   140006acb:	add    BYTE PTR [rax],al
   140006acd:	inc    DWORD PTR [rax]
   140006acf:	add    al,al
   140006ad1:	add    BYTE PTR [rax],al
   140006ad3:	add    BYTE PTR [rax],al
   140006ad5:	inc    DWORD PTR [rax]
   140006ad7:	add    al,al
   140006ad9:	add    BYTE PTR [rax],al
   140006adb:	add    BYTE PTR [rax],al
   140006add:	inc    DWORD PTR [rax]
   140006adf:	add    al,al
   140006ae1:	add    BYTE PTR [rax],al
   140006ae3:	add    BYTE PTR [rax],al
   140006ae5:	inc    DWORD PTR [rax]
   140006ae7:	add    al,al
   140006ae9:	add    BYTE PTR [rax],al
   140006aeb:	add    BYTE PTR [rax],al
   140006aed:	inc    DWORD PTR [rax]
   140006aef:	add    al,al
   140006af1:	add    BYTE PTR [rax],al
   140006af3:	add    BYTE PTR [rax],al
   140006af5:	inc    DWORD PTR [rax]
   140006af7:	add    al,al
   140006af9:	add    BYTE PTR [rax],al
   140006afb:	add    BYTE PTR [rax],al
   140006afd:	inc    DWORD PTR [rax]
   140006aff:	add    al,al
   140006b01:	add    BYTE PTR [rax],al
   140006b03:	add    BYTE PTR [rax],al
   140006b05:	inc    DWORD PTR [rax]
   140006b07:	add    al,al
   140006b09:	add    BYTE PTR [rax],al
   140006b0b:	add    BYTE PTR [rax],al
   140006b0d:	inc    DWORD PTR [rax]
   140006b0f:	add    al,al
   140006b11:	add    BYTE PTR [rax],al
   140006b13:	add    BYTE PTR [rax],al
   140006b15:	inc    DWORD PTR [rax]
   140006b17:	add    al,al
   140006b19:	add    BYTE PTR [rax],al
   140006b1b:	add    BYTE PTR [rax],al
   140006b1d:	inc    DWORD PTR [rax]
   140006b1f:	add    al,al
   140006b21:	add    BYTE PTR [rax],al
   140006b23:	add    BYTE PTR [rax],al
   140006b25:	inc    DWORD PTR [rax]
   140006b27:	add    al,al
   140006b29:	add    BYTE PTR [rax],al
   140006b2b:	add    BYTE PTR [rax],al
   140006b2d:	inc    DWORD PTR [rax]
   140006b2f:	add    al,al
   140006b31:	add    BYTE PTR [rax],al
   140006b33:	add    BYTE PTR [rax],al
   140006b35:	inc    DWORD PTR [rax]
   140006b37:	add    al,al
   140006b39:	add    BYTE PTR [rax],al
   140006b3b:	add    BYTE PTR [rax],al
   140006b3d:	inc    DWORD PTR [rax]
   140006b3f:	add    al,al
   140006b41:	add    BYTE PTR [rax],al
   140006b43:	add    BYTE PTR [rax],al
   140006b45:	inc    DWORD PTR [rax]
   140006b47:	add    al,al
   140006b49:	add    BYTE PTR [rax],al
   140006b4b:	add    BYTE PTR [rax],al
   140006b4d:	inc    DWORD PTR [rax]
   140006b4f:	add    al,al
   140006b51:	add    BYTE PTR [rax],al
   140006b53:	add    BYTE PTR [rax],al
   140006b55:	inc    DWORD PTR [rax]
   140006b57:	add    al,al
   140006b59:	add    BYTE PTR [rax],al
   140006b5b:	add    BYTE PTR [rax],al
   140006b5d:	inc    DWORD PTR [rax]
   140006b5f:	add    al,al
   140006b61:	add    BYTE PTR [rax],al
   140006b63:	add    BYTE PTR [rax],al
   140006b65:	inc    DWORD PTR [rax]
   140006b67:	add    al,al
   140006b69:	add    BYTE PTR [rax],al
   140006b6b:	add    BYTE PTR [rax],al
   140006b6d:	inc    DWORD PTR [rax]
   140006b6f:	add    al,al
   140006b71:	add    BYTE PTR [rax],al
   140006b73:	add    BYTE PTR [rax],al
   140006b75:	inc    DWORD PTR [rax]
   140006b77:	add    al,al
   140006b79:	add    BYTE PTR [rax],al
   140006b7b:	add    BYTE PTR [rax],al
   140006b7d:	inc    DWORD PTR [rax]
   140006b7f:	add    al,al
   140006b81:	add    BYTE PTR [rax],al
   140006b83:	add    BYTE PTR [rax],al
   140006b85:	inc    DWORD PTR [rax]
   140006b87:	add    al,al
   140006b89:	add    BYTE PTR [rax],al
   140006b8b:	add    BYTE PTR [rdi],cl
   140006b8d:	inc    DWORD PTR [rax]
   140006b8f:	add    bh,bh
   140006b91:	cld    
   140006b92:	add    BYTE PTR [rax],al
   140006b94:	(bad)  
   140006b95:	inc    DWORD PTR [rax]
   140006b97:	add    bh,bh
   140006b99:	(bad)  
   140006b9a:	(bad)  
   140006b9b:	(bad)  
   140006b9c:	(bad)  
   140006b9d:	inc    DWORD PTR [rax]
   140006b9f:	add    bh,bh
   140006ba1:	(bad)  
   140006ba2:	(bad)  
   140006ba3:	(bad)  
   140006ba4:	(bad)  
   140006ba5:	inc    DWORD PTR [rax]
   140006ba7:	add    bh,bh
   140006ba9:	(bad)  
   140006baa:	(bad)  
   140006bab:	(bad)  
   140006bac:	(bad)  
   140006bad:	inc    DWORD PTR [rax]
   140006baf:	add    bh,bh
   140006bb1:	(bad)  
   140006bb2:	(bad)  
   140006bb3:	(bad)  
   140006bb4:	(bad)  
   140006bb5:	inc    DWORD PTR [rax]
   140006bb7:	add    bh,bh
   140006bb9:	(bad)  
   140006bba:	(bad)  
   140006bbb:	(bad)  
   140006bbc:	(bad)  
   140006bbd:	inc    DWORD PTR [rax]
   140006bbf:	add    bh,bh
   140006bc1:	(bad)  
   140006bc2:	(bad)  
   140006bc3:	(bad)  
   140006bc4:	(bad)  
   140006bc5:	inc    DWORD PTR [rax]
   140006bc7:	add    bh,bh
   140006bc9:	(bad)  
   140006bca:	(bad)  
   140006bcb:	(bad)  
   140006bcc:	(bad)  
   140006bcd:	inc    DWORD PTR [rax]
   140006bcf:	add    BYTE PTR [rax],ch
   140006bd1:	add    BYTE PTR [rax],al
   140006bd3:	add    BYTE PTR [rax],ah
   140006bd5:	add    BYTE PTR [rax],al
   140006bd7:	add    BYTE PTR [rax+0x0],al
   140006bda:	add    BYTE PTR [rax],al
   140006bdc:	add    DWORD PTR [rax],eax
   140006bde:	add    al,0x0
   140006be0:	add    BYTE PTR [rax],al
   140006be2:	add    BYTE PTR [rax],al
   140006be4:	add    BYTE PTR [rdx],al
	...
   140006bfe:	add    BYTE PTR [rax],0x0
   140006c01:	add    BYTE PTR [rax],0x0
   140006c04:	add    BYTE PTR [rax+0x800080],al
   140006c0a:	add    BYTE PTR [rax],al
   140006c0c:	add    BYTE PTR [rax],0x80
   140006c0f:	add    BYTE PTR [rax-0x7fffff80],al
   140006c15:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140006c1c:	add    BYTE PTR [rax],al
   140006c1e:	inc    DWORD PTR [rax]
   140006c20:	add    bh,bh
   140006c22:	add    BYTE PTR [rax],al
   140006c24:	add    bh,bh
   140006c26:	inc    DWORD PTR [rax]
   140006c28:	inc    DWORD PTR [rax]
   140006c2a:	add    BYTE PTR [rax],al
   140006c2c:	inc    DWORD PTR [rax]
   140006c2e:	inc    DWORD PTR [rax]
   140006c30:	(bad)  
   140006c31:	inc    DWORD PTR [rax]
   140006c33:	add    bh,bh
   140006c35:	(bad)  
   140006c36:	inc    DWORD PTR [rax]
	...
   140006c60:	add    BYTE PTR [rax+0x7888],cl
   140006c66:	add    BYTE PTR [rax],al
   140006c68:	add    BYTE PTR [rax],al
   140006c6a:	add    BYTE PTR [rax],al
   140006c6c:	add    BYTE PTR [rax-0x71777778],cl
   140006c72:	mov    bh,ah
   140006c74:	xchg   DWORD PTR [rax],eax
   140006c76:	add    BYTE PTR [rax],al
   140006c78:	add    BYTE PTR [rax-0x71778778],cl
   140006c7e:	mov    al,ch
   140006c80:	mov    cs,WORD PTR [rax-0x77717178]
   140006c86:	add    BYTE PTR [rax],al
   140006c88:	add    BYTE PTR [rsi-0x78],bh
   140006c8b:	mov    cs,WORD PTR [rax-0x77777778]
   140006c91:	mov    BYTE PTR [rax+0x8e8786],cl
   140006c97:	add    BYTE PTR [rax],al
   140006c99:	mov    al,bh
   140006c9b:	mov    BYTE PTR [rax-0x77c76789],cl
   140006ca1:	mov    cs,WORD PTR [rax+0x878e8e]
   140006ca7:	add    BYTE PTR [rax],al
   140006ca9:	call   0xdb83f536
   140006cae:	fwait
   140006caf:	xchg   edi,eax
   140006cb0:	cwde   
   140006cb1:	mov    BYTE PTR [rax+0x8e8787],cl
   140006cb7:	add    BYTE PTR [rax],al
   140006cb9:	mov    al,bh
   140006cbb:	xchg   DWORD PTR [rbx-0x48466869],ebx
   140006cc1:	mov    bh,ch
   140006cc3:	mov    cs,WORD PTR [rsi+0x87]
   140006cc9:	mov    ?,eax
   140006ccb:	mov    ebx,DWORD PTR [rdi-0x64686405]
   140006cd1:	cwde   
   140006cd2:	mov    BYTE PTR [rsi+0x87f7],al
   140006cd8:	add    BYTE PTR [rax-0x706678],cl
   140006cde:	mov    DWORD PTR [rcx-0x77718847],edi
   140006ce4:	mov    cs,WORD PTR [rsi-0x18000000]
   140006cea:	stc    
   140006ceb:	mov    bl,0x8f
   140006ced:	(bad)  
   140006cee:	dec    DWORD PTR [rcx-0x71774687]
   140006cf4:	xchg   DWORD PTR [rdi-0x78000000],eax
   140006cfa:	sbb    DWORD PTR [rbx-0x7000071],0xffffffb9
   140006d01:	jnp    0x140006d7b
   140006d03:	xchg   DWORD PTR [rsi+0x87],ecx
   140006d09:	mov    BYTE PTR [rbx-0x67],bh
   140006d0c:	(bad)  
   140006d0d:	(bad)  
   140006d0e:	(bad)  
   140006d0f:	(bad)  
   140006d10:	clc    
   140006d11:	cdq    
   140006d12:	mov    eax,0x8e878e
   140006d17:	add    BYTE PTR [rax],al
   140006d19:	call   0x13fc026b6
   140006d1e:	(bad)  
   140006d1f:	(bad)  
   140006d20:	push   QWORD PTR [rdi-0x78097368]
   140006d26:	add    BYTE PTR [rax],al
   140006d28:	add    BYTE PTR [rax-0x704887],cl
   140006d2e:	(bad)  
   140006d2f:	(bad)  
   140006d30:	dec    DWORD PTR [rcx-0x77711748]
   140006d36:	add    BYTE PTR [rax],al
   140006d38:	add    BYTE PTR [rax-0x706475],cl
   140006d3e:	(bad)  
   140006d3f:	(bad)  
   140006d40:	sti    
   140006d41:	fwait
   140006d42:	js     0x140006cca
   140006d44:	test   DWORD PTR [rsi-0x18000000],0xff8f8979
   140006d4e:	(bad)  
   140006d4f:	clc    
   140006d50:	fwait
   140006d51:	xchg   edi,eax
   140006d52:	js     0x140006ce2
   140006d54:	mov    es,WORD PTR [rdi-0x78000000]
   140006d5a:	mov    edi,DWORD PTR [rcx-0x46000041]
   140006d60:	mov    ecx,0x87878889
   140006d65:	mov    es,WORD PTR [rax]
   140006d67:	add    BYTE PTR [rax],al
   140006d69:	mov    BYTE PTR [rdi-0x76007065],al
   140006d6f:	mov    ecx,0x8e889b8b
   140006d74:	xchg   DWORD PTR [rdi-0x18000000],eax
   140006d7a:	clc    
   140006d7b:	jnp    0x140006d0c
   140006d7d:	mov    ebx,DWORD PTR [rbx-0x77886485]
   140006d83:	xchg   DWORD PTR [rsi+0x8e],ecx
   140006d89:	mov    BYTE PTR [rax+0x798bb989],cl
   140006d8f:	mov    ecx,0x8e888889
   140006d94:	xchg   DWORD PTR [rdi-0x18000000],eax
   140006d9a:	clc    
   140006d9b:	xchg   DWORD PTR [rbx-0x65],edi
   140006d9e:	cwde   
   140006d9f:	mov    ecx,0x8e8888b8
   140006da4:	mov    es,WORD PTR [rdi-0x78000000]
   140006daa:	mov    BYTE PTR [rdi-0x77467689],cl
   140006db0:	js     0x140006d3a
   140006db2:	mov    BYTE PTR [rdi+0x8e87],al
   140006db8:	add    BYTE PTR [rax-0x78],bh
   140006dbb:	call   0xc888f6b8
   140006dc0:	mov    BYTE PTR [rax-0x78717178],cl
   140006dc6:	add    BYTE PTR [rax],al
   140006dc8:	add    al,ch
   140006dca:	(bad)
   140006dce:	mov    ?,eax
   140006dd0:	mov    BYTE PTR [rax-0x77787111],cl
   140006dd6:	add    BYTE PTR [rax],al
   140006dd8:	add    BYTE PTR [rax],cl
   140006dda:	out    0xe7,eax
   140006ddc:	call   0x1be7f55c8
   140006de1:	jle    0x140006e59
   140006de3:	xchg   DWORD PTR [rax+0x0],esi
	...
   140006e36:	add    BYTE PTR [rax],al
   140006e38:	(bad)  
   140006e39:	(bad)  
   140006e3a:	(bad)  
   140006e3b:	(bad)  
   140006e3c:	(bad)  
   140006e3d:	(bad)  
   140006e3e:	(bad)  
   140006e3f:	(bad)  
   140006e40:	(bad)  
   140006e41:	inc    eax
   140006e43:	(bad)  
   140006e44:	inc    eax
   140006e46:	add    BYTE PTR [rdi],bh
   140006e48:	rol    BYTE PTR [rax],0x0
   140006e4b:	xadd   BYTE PTR [rax],al
   140006e4e:	add    BYTE PTR [rdi],cl
   140006e50:	rol    BYTE PTR [rax],0x0
   140006e53:	xadd   BYTE PTR [rax],al
   140006e56:	add    BYTE PTR [rdi],cl
   140006e58:	rol    BYTE PTR [rax],0x0
   140006e5b:	xadd   BYTE PTR [rax],al
   140006e5e:	add    BYTE PTR [rdi],cl
   140006e60:	rol    BYTE PTR [rax],0x0
   140006e63:	xadd   BYTE PTR [rax],al
   140006e66:	add    BYTE PTR [rdi],cl
   140006e68:	rol    BYTE PTR [rax],0x0
   140006e6b:	xadd   BYTE PTR [rax],al
   140006e6e:	add    BYTE PTR [rdi],cl
   140006e70:	rol    BYTE PTR [rax],0x0
   140006e73:	xadd   BYTE PTR [rax],al
   140006e76:	add    BYTE PTR [rdi],cl
   140006e78:	rol    BYTE PTR [rax],0x0
   140006e7b:	xadd   BYTE PTR [rax],al
   140006e7e:	add    BYTE PTR [rdi],cl
   140006e80:	rol    BYTE PTR [rax],0x0
   140006e83:	xadd   BYTE PTR [rax],al
   140006e86:	add    BYTE PTR [rdi],cl
   140006e88:	rol    BYTE PTR [rax],0x0
   140006e8b:	xadd   BYTE PTR [rax],al
   140006e8e:	add    BYTE PTR [rdi],cl
   140006e90:	rol    BYTE PTR [rax],0x0
   140006e93:	xadd   BYTE PTR [rax],al
   140006e96:	add    BYTE PTR [rdi],cl
   140006e98:	rol    BYTE PTR [rax],0x0
   140006e9b:	xadd   BYTE PTR [rax],al
   140006e9e:	add    BYTE PTR [rdi],cl
   140006ea0:	loopne 0x140006ea2
   140006ea2:	add    BYTE PTR [rdi-0x1],bh
   140006ea5:	(bad)  
   140006ea6:	(bad)  
   140006ea7:	(bad)  
   140006ea8:	(bad)  
   140006ea9:	(bad)  
   140006eaa:	(bad)  
   140006eab:	(bad)  
   140006eac:	(bad)  
   140006ead:	(bad)  
   140006eae:	(bad)  
   140006eaf:	(bad)  
   140006eb0:	(bad)  
   140006eb1:	(bad)  
   140006eb2:	(bad)  
   140006eb3:	(bad)  
   140006eb4:	(bad)  
   140006eb5:	(bad)  
   140006eb6:	(bad)  
   140006eb7:	jmp    FWORD PTR [rax]
   140006eb9:	add    BYTE PTR [rax],al
   140006ebb:	add    BYTE PTR [rax],bl
   140006ebd:	add    BYTE PTR [rax],al
   140006ebf:	add    BYTE PTR [rax],dh
   140006ec1:	add    BYTE PTR [rax],al
   140006ec3:	add    BYTE PTR [rcx],al
   140006ec5:	add    BYTE PTR [rax+rax*1],al
   140006ec8:	add    BYTE PTR [rax],al
   140006eca:	add    BYTE PTR [rax],al
   140006ecc:	and    BYTE PTR [rcx],al
	...
   140006ee6:	add    BYTE PTR [rax],0x0
   140006ee9:	add    BYTE PTR [rax],0x0
   140006eec:	add    BYTE PTR [rax+0x800080],al
   140006ef2:	add    BYTE PTR [rax],al
   140006ef4:	add    BYTE PTR [rax],0x80
   140006ef7:	add    BYTE PTR [rax-0x7fffff80],al
   140006efd:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140006f04:	add    BYTE PTR [rax],al
   140006f06:	inc    DWORD PTR [rax]
   140006f08:	add    bh,bh
   140006f0a:	add    BYTE PTR [rax],al
   140006f0c:	add    bh,bh
   140006f0e:	inc    DWORD PTR [rax]
   140006f10:	inc    DWORD PTR [rax]
   140006f12:	add    BYTE PTR [rax],al
   140006f14:	inc    DWORD PTR [rax]
   140006f16:	inc    DWORD PTR [rax]
   140006f18:	(bad)  
   140006f19:	inc    DWORD PTR [rax]
   140006f1b:	add    bh,bh
   140006f1d:	(bad)  
   140006f1e:	inc    DWORD PTR [rax]
   140006f20:	add    BYTE PTR [rax],al
   140006f22:	add    BYTE PTR [rax],al
   140006f24:	add    BYTE PTR [rax],al
   140006f26:	add    BYTE PTR [rax+0x7088],cl
   140006f2c:	add    BYTE PTR [rax],al
   140006f2e:	add    BYTE PTR [rax-0x71777778],cl
   140006f34:	mov    BYTE PTR [rsi-0x78f7ff88],cl
   140006f3a:	mov    BYTE PTR [rsi-0x77777178],cl
   140006f40:	mov    es,WORD PTR [rdi-0x77777f7a]
   140006f46:	mov    cs,WORD PTR [rax-0x77717779]
   140006f4c:	mov    BYTE PTR [rsi-0x7777978],cl
   140006f52:	(bad)
   140006f56:	js     0x140006ee0
   140006f58:	mov    BYTE PTR [rdi-0x71777772],al
   140006f5e:	xchg   DWORD PTR [rcx+0x78999bb7],ebx
   140006f64:	mov    BYTE PTR [rsi-0x7717979],cl
   140006f6a:	mov    ecx,0x8bb99988
   140006f6f:	xchg   edi,eax
   140006f70:	mov    es,WORD PTR [rdi-0x7777772]
   140006f76:	fwait
   140006f77:	(bad)  
   140006f78:	clc    
   140006f79:	fwait
   140006f7a:	cdq    
   140006f7b:	mov    ecx,0x86878e88
   140006f80:	mov    BYTE PTR [rcx-0x760000c7],cl
   140006f86:	mov    ecx,0x8887987b
   140006f8b:	mov    BYTE PTR [rax-0x8475],cl
   140006f91:	dec    DWORD PTR [rcx-0x79718847]
   140006f97:	mov    cs,WORD PTR [rax-0x4677]
   140006f9d:	(bad)  
   140006f9e:	(bad)  
   140006f9f:	jns    0x140006f58
   140006fa1:	xchg   DWORD PTR [rax-0x68847779],ecx
   140006fa7:	(bad)  
   140006fa8:	(bad)  
   140006fa9:	(bad)  
   140006faa:	(bad)  
   140006fab:	sti    
   140006fac:	xchg   edi,eax
   140006fad:	mov    cs,WORD PTR [rsi-0x46867772]
   140006fb3:	(bad)  
   140006fb4:	(bad)  
   140006fb5:	(bad)  
   140006fb6:	(bad)  
   140006fb7:	stc    
   140006fb8:	mov    bh,0x87
   140006fba:	xchg   DWORD PTR [rdi-0x647478],eax
   140006fc0:	(bad)  
   140006fc1:	(bad)  
   140006fc2:	clc    
   140006fc3:	mov    ecx,0x878e8778
   140006fc8:	mov    BYTE PTR [rcx-0x7049],cl
   140006fce:	mov    ecx,0x878e973b
   140006fd3:	mov    cs,WORD PTR [rax-0x6475]
   140006fd9:	mov    DWORD PTR [rcx-0x71784777],edi
   140006fdf:	test   DWORD PTR [rax-0x400c678],0x889b7b9b
   140006fe9:	mov    es,WORD PTR [rdi-0x44077779]
   140006fef:	mov    BYTE PTR [rbx+0x78b7989b],bl
   140006ff5:	xchg   DWORD PTR [rdi+0x79888e8e],eax
   140006ffb:	mov    ecx,0xb7b9b7b7
   140007000:	mov    BYTE PTR [rsi-0x7777872],cl
   140007006:	mov    BYTE PTR [rbx-0x65],bh
   140007009:	cdq    
   14000700a:	mov    bh,0x88
   14000700c:	mov    BYTE PTR [rdi-0x77777779],al
   140007012:	call   0xc888e79f
   140007017:	mov    BYTE PTR [rax-0x71797172],cl
   14000701d:	clc    
   14000701e:	mov    BYTE PTR [rax-0x77777771],cl
   140007024:	mov    BYTE PTR [rax+0x7e088088],cl
   14000702a:	mov    al,ch
   14000702c:	out    0x8e,eax
   14000702e:	jle    0x140006fbe
   140007030:	jle    0x140006fc0
	...
   14000703e:	add    BYTE PTR [rax],al
   140007040:	(bad)  
   140007041:	cld    
   140007042:	(bad)  
   140007043:	add    ah,bh
   140007045:	add    BYTE PTR [rbx],al
   140007047:	add    BYTE PTR [rax+0x100],al
	...
   140007095:	add    BYTE PTR [rcx],al
   140007097:	add    BYTE PTR [rax-0xfff100],al
   14000709d:	(bad)  
   14000709e:	inc    DWORD PTR [rax]
   1400070a0:	sub    BYTE PTR [rax],al
   1400070a2:	add    BYTE PTR [rax],al
   1400070a4:	adc    BYTE PTR [rax],al
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	and    BYTE PTR [rax],al
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	add    DWORD PTR [rax],eax
   1400070ae:	add    al,0x0
   1400070b0:	add    BYTE PTR [rax],al
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	add    BYTE PTR [rax],0x0
	...
   1400070cb:	add    BYTE PTR [rax],al
   1400070cd:	add    BYTE PTR [rax+0x800000],al
   1400070d3:	add    BYTE PTR [rax],al
   1400070d5:	add    BYTE PTR [rax+0x8000],0x0
   1400070dc:	add    BYTE PTR [rax],0x80
   1400070df:	add    BYTE PTR [rax-0x7fffff80],al
   1400070e5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	inc    DWORD PTR [rax]
   1400070f0:	add    bh,bh
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	add    bh,bh
   1400070f6:	inc    DWORD PTR [rax]
   1400070f8:	inc    DWORD PTR [rax]
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	inc    DWORD PTR [rax]
   1400070fe:	inc    DWORD PTR [rax]
   140007100:	(bad)  
   140007101:	inc    DWORD PTR [rax]
   140007103:	add    bh,bh
   140007105:	(bad)  
   140007106:	inc    DWORD PTR [rax]
   140007108:	xchg   BYTE PTR [rsi-0x7979797a],al
   14000710e:	xchg   BYTE PTR [rdi-0x77777788],al
   140007114:	mov    BYTE PTR [rax-0x71177178],cl
   14000711a:	mov    BYTE PTR [rdi+0x37],dh
   14000711d:	mov    ?,WORD PTR [rsi-0x79]
   140007120:	js     0x1400070aa
   140007122:	jae    0x1400070dd
   140007124:	mov    ecx,0x788e8737
   140007129:	out    0x9b,eax
   14000712b:	mov    ebx,DWORD PTR [rbx-0x10788765]
   140007131:	mov    ebx,DWORD PTR [rbx-0x68648401]
   140007137:	mov    ?,WORD PTR [rax+0x79]
   14000713a:	mov    ecx,0xb7b9f8ff
   14000713f:	xchg   DWORD PTR [rdi-0x47],edi
   140007142:	mov    ebx,0x938bffff
   140007147:	mov    gs,eax
   140007149:	jnp    0x1400070de
   14000714b:	(bad)  
   14000714c:	push   rdi
   14000714e:	mov    ecx,0xb3797f87
   140007153:	(bad)  
   140007154:	clc    
   140007155:	fwait
   140007156:	xchg   edi,eax
   140007157:	mov    ?,WORD PTR [rdi-0x75]
   14000715a:	fwait
   14000715b:	call   FWORD PTR [rbx-0x17784847]
   140007161:	idiv   DWORD PTR [rcx+0x789b9b8b]
   140007167:	mov    ?,WORD PTR [rdi-0x78]
   14000716a:	mov    DWORD PTR [rcx-0x78774847],edi
   140007170:	js     0x14000716a
   140007172:	clc    
   140007173:	mov    ebx,DWORD PTR [rax-0x10717188]
   140007179:	(bad)  
   14000717a:	(bad)  
   14000717b:	(bad)  
   14000717c:	(bad)  
   14000717d:	clc    
   14000717e:	mov    BYTE PTR [rdi-0x18181889],al
   140007184:	outs   dx,BYTE PTR ds:[rsi]
   140007185:	jle    0x140007205
   140007187:	js     0x140007189
	...
   1400071c5:	add    BYTE PTR [rax],al
   1400071c7:	add    BYTE PTR [rax],ch
   1400071c9:	add    BYTE PTR [rax],al
   1400071cb:	add    BYTE PTR [rax+0x0],al
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	add    BYTE PTR [rax],0x0
   1400071d3:	add    BYTE PTR [rcx],al
   1400071d5:	add    BYTE PTR [rax],cl
   1400071d7:	add    BYTE PTR [rax],al
   1400071d9:	add    BYTE PTR [rax],al
   1400071db:	add    BYTE PTR [rax],al
   1400071dd:	adc    BYTE PTR [rax],al
	...
   1400071e7:	add    BYTE PTR [rax],al
   1400071e9:	add    DWORD PTR [rax],eax
   1400071eb:	add    BYTE PTR [rax],al
   1400071ed:	add    DWORD PTR [rax],eax
   1400071ef:	add    BYTE PTR [rax],al
   1400071f1:	add    BYTE PTR [rax],al
   1400071f3:	add    BYTE PTR [rbp-0x6affd481],ch
   1400071f9:	jnp    0x14000724f
   1400071fb:	add    BYTE PTR [rsi-0x56ffcd7e],ch
   140007201:	test   DWORD PTR [rdi],edi
   140007203:	add    BYTE PTR [rcx-0x42ffca7a],dh
   140007209:	xchg   BYTE PTR [rcx],bh
   14000720b:	add    BYTE PTR [rbp-0x46ffc475],dh
   140007211:	(bad)  
   140007212:	cmp    eax,0x3f8cc000
   140007217:	add    BYTE PTR [rdx-0x51ffb87f],ch
   14000721d:	mov    al,BYTE PTR [rbx+0x0]
   140007220:	mov    ch,0x8f
   140007222:	add    BYTE PTR [r9-0x43ffb671],r14b
   140007229:	xchg   ebp,eax
   14000722a:	rex.W add BYTE PTR [rbx-0x44ffa372],sil
   140007231:	nop
   140007232:	push   rbx
   140007233:	add    BYTE PTR [rbp-0x46ffaf67],bh
   140007239:	xchg   edx,eax
   14000723a:	pop    rsp
   14000723b:	add    BYTE PTR [rdi-0x5fff9777],bl
   140007241:	xchg   BYTE PTR [rdx+0x0],ah
   140007244:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007245:	mov    WORD PTR [rax+rax*1-0x4c],gs
   140007249:	xchg   edx,eax
   14000724a:	(bad)  
   14000724b:	add    BYTE PTR [rax-0x49ff996a],bh
   140007251:	xchg   esi,eax
   140007252:	push   0x0
   140007254:	mov    bh,0x98
   140007256:	ins    DWORD PTR es:[rdi],dx
   140007257:	add    BYTE PTR [rdx-0x44ff9667],bh
   14000725d:	pushf  
   14000725e:	jb     0x140007260
   140007260:	mov    ebp,0xc4007ba1
   140007265:	xchg   ecx,eax
   140007266:	rex.XB add r9b,cl
   140007269:	xchg   esi,eax
   14000726a:	rex.W add sil,cl
   14000726d:	fwait
   14000726e:	rex.WXB add r8b,al
   140007271:	pushf  
   140007272:	push   rbp
   140007273:	add    al,al
   140007275:	sahf   
   140007276:	pop    rcx
   140007277:	add    bl,cl
   140007279:	pushf  
   14000727a:	pop    rdx
   14000727b:	add    al,cl
   14000727d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000727e:	pop    rax
   14000727f:	add    ah,dl
   140007281:	movabs ds:0xaee0005da4d70053,eax
   14000728a:	push   rdi
   14000728b:	add    cl,ah
   14000728d:	mov    al,0x59
   14000728f:	add    ch,al
   140007291:	popf   
   140007292:	fs add bl,cl
   140007295:	test   eax,0xa2c40061
   14000729a:	outs   dx,BYTE PTR ds:[rsi]
   14000729b:	add    ch,cl
   14000729d:	lods   eax,DWORD PTR ds:[rsi]
   14000729e:	imul   eax,DWORD PTR [rax],0xffffffd4
   1400072a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400072a2:	(bad)  
   1400072a3:	add    ch,dl
   1400072a5:	test   al,0x63
   1400072a7:	add    al,bl
   1400072a9:	stos   BYTE PTR es:[rdi],al
   1400072aa:	data16 add dl,bl
   1400072ad:	scas   al,BYTE PTR es:[rdi]
   1400072ae:	imul   eax,DWORD PTR [rax],0x6bb1dd
   1400072b4:	(bad)
   1400072b8:	ret    
   1400072b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400072ba:	jge    0x1400072bc
   1400072bc:	shr    BYTE PTR [rbp-0x4a21ff8a],cl
   1400072c2:	jb     0x1400072c4
   1400072c4:	shl    DWORD PTR [rax-0x4723ff81],1
   1400072ca:	jle    0x1400072cc
   1400072cc:	loop   0x140007285
   1400072ce:	imul   eax,DWORD PTR [rax],0xffffffe0
   1400072d1:	mov    ch,0x70
   1400072d3:	add    ah,ah
   1400072d5:	mov    edx,0xbee80075
   1400072da:	jne    0x1400072dc
   1400072dc:	in     eax,0xbc
   1400072de:	js     0x1400072e0
   1400072e0:	jmp    0x13600f0a9
   1400072e5:	(bad)  
   1400072e8:	sbb    BYTE PTR [rdi-0xd],bl
   1400072eb:	add    BYTE PTR [rdx],bl
   1400072ed:	data16 repnz add BYTE PTR [rip+0x2400f779],bl        # 0x164016a6e
   1400072f5:	ins    BYTE PTR es:[rdi],dx
   1400072f6:	icebp  
   1400072f7:	add    BYTE PTR [rip+0x3200f276],ah        # 0x172016573
   1400072fd:	jnp    0x1400072f4
   1400072ff:	add    BYTE PTR [rbx+0x7f],al
   140007302:	stc    
   140007303:	add    BYTE PTR [rdx-0x65],bh
   140007306:	mov    edx,0xdd8d3c00
   14000730b:	add    BYTE PTR [rdi],bl
   14000730d:	mov    dh,bh
   14000730f:	add    BYTE PTR [rsp+rcx*4],ch
   140007312:	in     eax,dx
   140007313:	add    BYTE PTR [rdi],dh
   140007315:	sub    ebx,0x0
   140007318:	xor    eax,0x2800e690
   14000731d:	xchg   esi,esi
   14000731f:	add    BYTE PTR [rax],bh
   140007321:	test   ebp,esi
   140007323:	add    BYTE PTR [rcx],ch
   140007325:	xchg   ecx,eax
   140007326:	clc    
   140007327:	add    BYTE PTR [rcx],bh
   140007329:	xchg   esi,eax
   14000732a:	test   DWORD PTR [rax],0xcc8f4f
   140007330:	push   rsi
   140007331:	nop
   140007332:	leave  
   140007333:	add    BYTE PTR [rbx-0x74],cl
   140007336:	xlat   BYTE PTR ds:[rbx]
   140007337:	add    BYTE PTR [rbx-0x72],dl
   14000733a:	(bad)  
   14000733b:	add    BYTE PTR [rcx-0x6b],ch
   14000733e:	int3   
   14000733f:	add    BYTE PTR [rbx-0x65],dh
   140007342:	(bad)  
   140007343:	add    BYTE PTR [rsi-0x62],al
   140007346:	out    dx,eax
   140007347:	add    BYTE PTR [rcx-0x7c],al
   14000734a:	repz add BYTE PTR [rdx-0x77],al
   14000734e:	hlt    
   14000734f:	add    BYTE PTR [rdx-0x73],cl
   140007352:	repz add BYTE PTR [rsi-0x79],al
   140007356:	cli    
   140007357:	add    BYTE PTR [rdx-0x7d],cl
   14000735a:	clc    
   14000735b:	add    BYTE PTR [rdx-0x76],cl
   14000735e:	cli    
   14000735f:	add    BYTE PTR [rbx-0x72],bl
   140007362:	test   BYTE PTR [rax],0x47
   140007365:	xchg   edi,eax
   140007366:	test   BYTE PTR [rax],0x54
   140007369:	xchg   edi,eax
   14000736a:	hlt    
   14000736b:	add    BYTE PTR [rdi+rdx*4-0x1a],ah
   14000736f:	add    BYTE PTR [rbp-0x66],ah
   140007372:	hlt    
   140007373:	add    BYTE PTR [rcx+riz*4-0x9],cl
   140007377:	add    BYTE PTR [rdx-0x58],bl
   14000737a:	stc    
   14000737b:	add    BYTE PTR [rdx-0x50],bl
   14000737e:	inc    DWORD PTR [rax]
   140007380:	push   0xffffffffffffffaf
   140007382:	in     al,dx
   140007383:	add    BYTE PTR [rcx-0x50],ch
   140007386:	out    dx,eax
   140007387:	add    BYTE PTR [rsi-0x4c],dh
   14000738a:	in     eax,dx
   14000738b:	add    BYTE PTR [rbx+rbp*4-0x8],ah
   14000738f:	add    BYTE PTR [rdi-0x59],dh
   140007392:	cmc    
   140007393:	add    BYTE PTR [rbx-0x4d],ch
   140007396:	cli    
   140007397:	add    BYTE PTR [rax-0x4c],dh
   14000739a:	stc    
   14000739b:	add    BYTE PTR [rdi+rbx*4-0x5e5aff7e],dh
   1400073a2:	mov    al,BYTE PTR [rax]
   1400073a4:	mov    edx,0xb50081a4
   1400073a9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400073aa:	mov    eax,DWORD PTR [rax]
   1400073ac:	stos   DWORD PTR es:[rdi],eax
   1400073ad:	movabs eax,ds:0xa3970097a7b30095
   1400073b6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400073b7:	add    BYTE PTR [rsi-0x52ff5353],ah
   1400073bd:	mov    bl,0xad
   1400073bf:	add    al,al
   1400073c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400073c2:	test   BYTE PTR [rax],al
   1400073c4:	(bad)
   1400073c7:	add    bh,al
   1400073c9:	scas   al,BYTE PTR es:[rdi]
   1400073ca:	mov    eax,DWORD PTR [rax]
   1400073cc:	leave  
   1400073cd:	scas   eax,DWORD PTR es:[rdi]
   1400073ce:	mov    al,BYTE PTR [rax]
   1400073d0:	int3   
   1400073d1:	mov    bl,0x8f
   1400073d3:	add    dl,dl
   1400073d5:	mov    bl,0x82
   1400073d7:	add    bl,bl
   1400073d9:	mov    ebx,0xb5d00084
   1400073de:	lea    eax,[rax]
   1400073e0:	xlat   BYTE PTR ds:[rbx]
   1400073e1:	mov    ebx,0xbdde008f
   1400073e6:	mov    eax,DWORD PTR [rax]
   1400073e8:	(bad)  
   1400073e9:	stos   DWORD PTR es:[rdi],eax
   1400073ea:	xchg   ebx,eax
   1400073eb:	add    dl,cl
   1400073ed:	mov    ah,0x94
   1400073ef:	add    bl,cl
   1400073f1:	mov    ah,0x9a
   1400073f3:	add    bh,cl
   1400073f5:	mov    edx,0xbcd2009c
   1400073fa:	xchg   esp,eax
   1400073fb:	add    dl,bl
   1400073fd:	mov    esi,0xbfdc0094
   140007402:	cwde   
   140007403:	add    cl,ah
   140007405:	mov    ebp,0xbbcd0089
   14000740a:	movabs ds:0xaebdd100a1bfd400,al
   140007413:	add    bl,dl
   140007415:	mov    esi,0xc0dd00b0
   14000741a:	lea    eax,[rax]
   14000741c:	fadd   st(2),st
   14000741e:	xchg   ebp,eax
   14000741f:	add    ah,bl
   140007421:	ret    
   140007422:	(bad)  
   140007423:	add    dl,ch
   140007425:	(bad)
   140007429:	ret    0x8c
   14000742c:	jmp    0x12e0100f6
   140007431:	leave  
   140007432:	mov    WORD PTR [rax],es
   140007434:	repnz mov BYTE PTR [rdx-0x6c3b1d00],0x0
   14000743c:	jmp    0x126010607
   140007441:	retf   
   140007442:	xchg   esp,eax
   140007443:	add    bl,ch
   140007445:	retf   
   140007446:	xchg   ebx,eax
   140007447:	add    dl,ah
   140007449:	(bad)  
   14000744a:	(bad)  
   14000744b:	add    ah,ah
   14000744d:	retf   0x9b
   140007450:	in     al,dx
   140007451:	int    0x9a
   140007453:	add    al,dh
   140007455:	int    0x91
   140007457:	add    bh,ch
   140007459:	rcr    DWORD PTR [rbp-0x682f0c00],1
   14000745f:	add    ah,dh
   140007461:	rcr    BYTE PTR [rbx-0x622a0800],cl
   140007467:	add    bl,bh
   140007469:	fcomp  DWORD PTR [rbp-0x593d2c00]
   14000746f:	add    cl,bl
   140007471:	ret    
   140007472:	movabs ds:0xa8c2d300a6cadd00,al
   14000747b:	add    ah,bl
   14000747d:	enter  0xac,0xca
   140007481:	ret    0xbb
   140007484:	fxch   st(0)
   140007486:	mov    bh,0x0
   140007488:	jrcxz  0x140007455
   14000748a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000748b:	add    bl,ch
   14000748d:	(bad)  
   14000748e:	movabs eax,ds:0xa4d2eb00aacde400
   140007497:	add    bl,ah
   140007499:	shr    BYTE PTR [rdi-0x532b1400],1
   14000749f:	add    dh,ch
   1400074a1:	fsubr  DWORD PTR [rbp-0x5c2b0e00]
   1400074a7:	add    al,bh
   1400074a9:	xlat   BYTE PTR ds:[rbx]
   1400074aa:	movabs eax,ds:0xa5d9f900a5d8f700
   1400074b3:	add    al,dh
   1400074b5:	(bad)  
   1400074b6:	stos   DWORD PTR es:[rdi],eax
   1400074b7:	add    cl,dh
   1400074b9:	fsubr  DWORD PTR [rax+rax*1+0xabdcfa]
   1400074c0:	in     eax,0xce
   1400074c2:	mov    dh,0x0
   1400074c4:	in     eax,0xd2
   1400074c6:	mov    ch,0x0
   1400074c8:	in     al,dx
   1400074c9:	(bad)  
   1400074ca:	mov    dl,0x0
   1400074cc:	out    dx,al
   1400074cd:	fnstenv [rsi-0x442c1d00]
   1400074d3:	add    dl,ch
   1400074d5:	(bad)  
   1400074d6:	mov    ecx,0xbcdaed00
   1400074db:	add    cl,dh
   1400074dd:	(bad)  [rax+rax*1+0xb3def8]
   1400074e4:	hlt    
   1400074e5:	fnstsw WORD PTR [rcx-0x44200700]
   1400074eb:	add    bl,bh
   1400074ed:	loopne 0x1400074a2
   1400074ef:	add    dh,dh
   1400074f1:	loopne 0x1400074af
   1400074f3:	add    bl,bh
   1400074f5:	jrcxz  0x1400074b3
   1400074f7:	add    bh,bh
   1400074f9:	(bad)  
   1400074fa:	mov    ebp,0xc3a79000
   1400074ff:	add    BYTE PTR [rdi-0x7dff2755],cl
   140007505:	mov    ah,0xdd
   140007507:	add    BYTE PTR [rdx-0x59ff2243],bl
   14000750d:	mov    eax,0xbcaa00c0
   140007512:	fild   WORD PTR [rax]
   140007514:	mov    ch,0xbf
   140007516:	(bad)  
   140007517:	add    BYTE PTR [rbx-0x69ff1557],cl
   14000751d:	mov    eax,0xa58000e8
   140007522:	repnz add BYTE PTR [rcx-0x73ff0b57],al
   140007529:	lods   eax,DWORD PTR ds:[rsi]
   14000752a:	icebp  
   14000752b:	add    BYTE PTR [rax-0x6dff0749],cl
   140007531:	mov    dh,0xf4
   140007533:	add    BYTE PTR [rsp+rdi*4-0x3f51ff1c],ah
   14000753a:	fild   DWORD PTR [rax]
   14000753c:	mov    eax,0x8f00d8c1
   140007541:	ret    0xfb
   140007544:	xchg   esi,eax
   140007545:	(bad)  
   140007546:	cli    
   140007547:	add    BYTE PTR [rax-0x4bff1135],ch
   14000754d:	(bad)
   140007550:	mov    eax,0xbd00e1cc
   140007555:	(bad)  
   140007556:	out    dx,al
   140007557:	add    BYTE PTR [rdi-0x4bff0936],ah
   14000755d:	iret   
   14000755e:	cli    
   14000755f:	add    BYTE PTR [rsi+rdx*8-0x3737ff06],bh
   140007566:	(bad)
   140007569:	int    0xc6
   14000756b:	add    cl,bl
   14000756d:	rol    dh,cl
   14000756f:	add    bl,ah
   140007571:	(bad)  
   140007572:	rol    BYTE PTR [rax],0xe5
   140007575:	fadd   st,st(2)
   140007577:	add    ch,ch
   140007579:	fadd   st(2),st
   14000757b:	add    al,ah
   14000757d:	ror    al,cl
   14000757f:	add    ah,ah
   140007581:	fcmove st,st(1)
   140007583:	add    cl,dh
   140007585:	ffreep st(3)
   140007587:	add    bh,ch
   140007589:	loopne 0x140007553
   14000758b:	add    ch,dh
   14000758d:	jrcxz  0x140007553
   14000758f:	add    bl,bh
   140007591:	in     eax,0xc2
   140007593:	add    dh,bh
   140007595:	call   0x124f4765f
   14000759a:	retf   0xf800
   14000759d:	out    0xc9,al
   14000759f:	add    ah,bh
   1400075a1:	jmp    0x121eb7671
   1400075a6:	rol    BYTE PTR [rax],1
   1400075a8:	out    0xe2,eax
   1400075aa:	fadd   DWORD PTR [rax]
   1400075ac:	cmc    
   1400075ad:	out    0xd1,eax
   1400075af:	add    bh,dh
   1400075b1:	jmp    0x140007588
   1400075b3:	add    ah,bh
   1400075b5:	in     al,dx
   1400075b6:	rol    DWORD PTR [rax],cl
   1400075b8:	cli    
   1400075b9:	out    dx,eax
   1400075ba:	fiadd  DWORD PTR [rax]
   1400075bc:	(bad)  
   1400075bd:	lock fadd DWORD PTR [rax]
   1400075c0:	(bad)  
   1400075c1:	(bad)  
   1400075c2:	jmp    0x120da4bc7
   1400075c7:	add    ah,al
   1400075c9:	fdiv   st(3),st
   1400075cb:	add    bh,al
   1400075cd:	loope  0x1400075cb
   1400075cf:	add    dh,dl
   1400075d1:	in     al,0xfb
   1400075d3:	add    ah,bh
   1400075d5:	repnz loope 0x1400075d8
   1400075d8:	out    0xef,al
   1400075da:	std    
   1400075db:	add    dl,ch
   1400075dd:	repz std 
   1400075df:	add    bl,dh
   1400075e1:	idiv   ah
   1400075e3:	add    al,bh
   1400075e5:	idiv   ebx
   1400075e7:	add    dh,dh
   1400075e9:	clc    
   1400075ea:	cld    
   1400075eb:	add    bh,bh
   1400075ed:	(bad)  
   1400075ee:	inc    DWORD PTR [rax]
	...
   140007714:	add    BYTE PTR [rsp+rbx*1],bl
   140007717:	sbb    al,0x1c
   140007719:	(bad)  
   14000771a:	sbb    ch,BYTE PTR [rbx+0x0]
	...
   14000774d:	add    BYTE PTR [rsi],dl
   14000774f:	(bad)  
   140007750:	(bad)  
   140007751:	(bad)  
   140007752:	(bad)  
   140007753:	(bad)  
   140007754:	sbb    al,0x32
   140007756:	jnp    0x1400076f8
   140007758:	stos   BYTE PTR es:[rdi],al
   140007759:	mov    edx,0xa85e5
	...
   140007786:	add    BYTE PTR [rsi],dl
   140007788:	(bad)  
   140007789:	(bad)  
   14000778a:	(bad)  
   14000778b:	(bad)  
   14000778c:	(bad)  
   14000778d:	sbb    dh,BYTE PTR [rdx]
   14000778f:	jnp    0x14000771d
   140007791:	test   al,0xba
   140007793:	in     eax,0xba
   140007795:	mov    edx,0xa8a8b6b9
   14000779a:	test   al,0xb6
   14000779c:	(bad)  
   14000779d:	adc    ebp,DWORD PTR [rsi+0x6d]
   1400077a0:	adc    eax,0x0
	...
   1400077bd:	add    BYTE PTR [rax],al
   1400077bf:	add    BYTE PTR [rsi],dl
   1400077c1:	(bad)  
   1400077c2:	(bad)  
   1400077c3:	(bad)  
   1400077c4:	(bad)  
   1400077c5:	bndldx (bad),[rcx]
   1400077c8:	jns    0x14000774e
   1400077ca:	test   al,0xba
   1400077cc:	in     eax,0xe6
   1400077ce:	loop   0x14000778a
   1400077d0:	stos   BYTE PTR es:[rdi],al
   1400077d1:	stos   BYTE PTR es:[rdi],al
   1400077d2:	test   al,0x96
   1400077d4:	xchg   esi,eax
   1400077d5:	xchg   edx,eax
   1400077d6:	xchg   edx,eax
   1400077d7:	xchg   ebx,eax
   1400077d8:	xchg   ebp,eax
   1400077d9:	xchg   ebp,eax
   1400077da:	fwait
   1400077db:	mov    dh,0x6
   1400077dd:	or     esp,DWORD PTR [rax+0x6f0225b6]
   1400077e3:	jo     0x1400077e5
	...
   1400077f9:	sub    BYTE PTR [rax],ch
   1400077fb:	sub    BYTE PTR [rax],ch
   1400077fd:	(bad)  
   1400077fe:	movlps xmm5,QWORD PTR [rdx]
   140007801:	xor    eax,0xe6baa67c
   140007806:	out    0xe2,al
   140007808:	loop   0x1400077c2
   14000780a:	stos   BYTE PTR es:[rdi],al
   14000780b:	test   al,0x96
   14000780d:	xchg   esi,eax
   14000780e:	xchg   edx,eax
   14000780f:	xchg   edx,eax
   140007810:	xchg   ebx,eax
   140007811:	xchg   ebx,eax
   140007812:	xchg   ebp,eax
   140007813:	xchg   ebp,eax
   140007814:	xchg   ebp,eax
   140007815:	(bad)  
   140007816:	(bad)  
   140007817:	cwde   
   140007818:	(bad)  
   140007819:	cwde   
   14000781a:	cwde   
   14000781b:	mov    dh,0x9
   14000781d:	or     edi,DWORD PTR [rbp+rsi*1+0x22]
   140007821:	add    DWORD PTR [rdx+rdx*4+0x10],esi
	...
   140007835:	add    BYTE PTR [rax],al
   140007837:	sub    BYTE PTR [rdx],dl
   140007839:	sub    BYTE PTR [rbx],dh
   14000783b:	jl     0x1400077e3
   14000783d:	mov    ebx,0xe2e6e6e2
   140007842:	mov    edx,0x9296a8aa
   140007847:	xchg   edx,eax
   140007848:	mov    cs,WORD PTR [rdi-0x676a7071]
   14000784e:	cwde   
   14000784f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007850:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007851:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007852:	cwde   
   140007853:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007854:	fwait
   140007855:	xchg   ebx,eax
   140007856:	xchg   ebp,eax
   140007857:	(bad)  
   140007858:	nop
   140007859:	nop
   14000785a:	fwait
   14000785b:	mov    dh,0x1d
   14000785d:	(bad)  
   14000785e:	xchg   edx,eax
   14000785f:	and    al,BYTE PTR ss:[rip+0x142d8386]        # 0x1542dfbec
	...
   140007876:	add    BYTE PTR [rip+0xfffffffff0f0f0af],bh        # 0x130f1692b
   14000787c:	out    0xe5,al
   14000787e:	stos   DWORD PTR es:[rdi],eax
   14000787f:	mov    ss,WORD PTR [rdx-0x646a706e]
   140007885:	popf   
   140007886:	mov    al,0xbb
   140007888:	mov    ebx,0xb3bfbaba
   14000788d:	(bad)  
   14000788e:	xchg   ebp,eax
   14000788f:	(bad)  
   140007890:	fwait
   140007891:	(bad)  
   140007892:	fwait
   140007893:	nop
   140007894:	fwait
   140007895:	fwait
   140007896:	fwait
   140007897:	popf   
   140007898:	(bad)  
   140007899:	popf   
   14000789a:	popf   
   14000789b:	mov    ebx,0x8a960c1e
   1400078a0:	sub    al,0x5
   1400078a2:	xchg   BYTE PTR [rbx+0x42c],al
	...
   1400078b4:	add    BYTE PTR [rax],al
   1400078b6:	add    BYTE PTR [rcx],bh
   1400078b8:	mov    ebx,0xecf0ecf0
   1400078bd:	fwait
   1400078be:	lea    ebx,[rbp-0x3d404c4d]
   1400078c4:	out    0xd7,al
   1400078c6:	int3   
   1400078c7:	pop    rsp
   1400078c8:	pop    rdx
   1400078c9:	pop    rdx
   1400078ca:	pop    rbx
   1400078cb:	(bad)  
   1400078cc:	retf   0xaac9
   1400078cf:	cwde   
   1400078d0:	xchg   ebp,eax
   1400078d1:	mov    al,0xb0
   1400078d3:	mov    al,0xaf
   1400078d5:	mov    al,0xaf
   1400078d7:	scas   eax,DWORD PTR es:[rdi]
   1400078d8:	popf   
   1400078d9:	scas   eax,DWORD PTR es:[rdi]
   1400078da:	scas   eax,DWORD PTR es:[rdi]
   1400078db:	mov    ebx,0x8ea60e1f
   1400078e0:	sub    eax,0x2d8c9f05
   1400078e5:	or     eax,DWORD PTR [rax]
	...
   1400078f7:	cmp    DWORD PTR [rdi-0x410c1310],edi
   1400078fd:	cmp    al,0x9d
   1400078ff:	mov    esi,0xcdeec2be
   140007904:	rex.XB (bad) 
   140007906:	(bad)  
   140007907:	(bad)  
   140007908:	(bad)  
   140007909:	(bad)  
   14000790a:	ds ds ds (bad) 
   14000790e:	rex.R retf 0x96a5
   140007912:	scas   eax,DWORD PTR es:[rdi]
   140007913:	mov    bl,0xb3
   140007915:	mov    bl,0xb0
   140007917:	mov    al,0xb0
   140007919:	mov    al,0xb0
   14000791b:	mov    esi,0x8ea70e24
   140007920:	(bad)  
   140007921:	add    eax,0xb30969f
	...
   140007936:	add    BYTE PTR [rcx],bh
   140007938:	mov    edi,0xbef3ecf0
   14000793d:	lea    ebx,[rbp+0x43d6e9c2]
   140007943:	ds rex.B
   140007945:	rex.B
   140007946:	rex.B
   140007947:	rex.B
   140007948:	rex.B
   140007949:	rex.B
   14000794a:	rex.B
   14000794b:	rex.B
   14000794c:	rex.B
   14000794d:	rex.B
   14000794e:	ds (bad) 
   140007950:	rex.R enter 0x96a0,0xb3
   140007955:	mov    bl,0xb3
   140007957:	mov    bl,0xb3
   140007959:	mov    al,0xb0
   14000795b:	call   0xd5ab8799
   140007960:	xor    BYTE PTR [rax],cl
   140007962:	mov    eax,0xd38a7
	...
   140007977:	cmp    DWORD PTR [rsi-0x41130c10],edi
   14000797d:	lea    ebx,[rsi+0x413e68e6]
   140007983:	rex.B
   140007984:	rex.B
   140007985:	rex.B
   140007986:	rex.B
   140007987:	rex.B
   140007988:	rex.B
   140007989:	rex.B
   14000798a:	rex.B
   14000798b:	rex.B
   14000798c:	rex.B
   14000798d:	rex.B
   14000798e:	rex.B
   14000798f:	rex.B
   140007990:	ds rex.B (bad) 
   140007993:	movabs ds:0xe8b3b3b3b3b3b38b,al
   14000799c:	cmp    al,0x11
   14000799e:	mov    cl,0x95
   1400079a0:	(bad)  
   1400079a1:	or     dl,ah
   1400079a3:	lods   al,BYTE PTR ds:[rsi]
   1400079a4:	cmp    BYTE PTR [rcx],dl
	...
   1400079b6:	add    BYTE PTR [rcx],bh
   1400079b8:	mov    edi,0xbef3ecf0
   1400079bd:	xchg   ecx,eax
   1400079be:	mov    ebx,0x42423f5c
   1400079c3:	rex.B
   1400079c4:	rex.B
   1400079c5:	rex.B
   1400079c6:	rex.B
   1400079c7:	rex.X
   1400079c8:	rex.B
   1400079c9:	rex.B
   1400079ca:	rex.B
   1400079cb:	rex.B
   1400079cc:	rex.B
   1400079cd:	rex.B
   1400079ce:	rex.B
   1400079cf:	rex.B
   1400079d0:	rex.B
   1400079d1:	rex.B
   1400079d2:	ds int 0xa2
   1400079d5:	test   BYTE PTR [rbx-0x4f4c4c4d],dh
   1400079db:	call   0xd5b18b6d
   1400079e0:	lea    ecx,[rsi]
   1400079e2:	loope  0x140007990
   1400079e4:	cmp    BYTE PTR [rbx],ah
	...
   1400079f6:	add    BYTE PTR [rcx],bh
   1400079f8:	mov    esi,0xbef3f3f3
   1400079fd:	(bad)  
   1400079fe:	pop    rdi
   1400079ff:	rex.X
   140007a00:	rex.B
   140007a01:	rex.B
   140007a02:	rex.X
   140007a03:	rex.B
   140007a04:	rex.B
   140007a05:	rex.X
   140007a06:	rex.B
   140007a07:	rex.X
   140007a08:	rex.B
   140007a09:	rex.B
   140007a0a:	rex.B
   140007a0b:	rex.B
   140007a0c:	rex.B
   140007a0d:	rex.B
   140007a0e:	rex.B
   140007a0f:	rex.B
   140007a10:	rex.B
   140007a11:	rex.B
   140007a12:	rex.B
   140007a13:	rol    BYTE PTR ds:[rcx-0x4c4c4074],1
   140007a1a:	mov    bl,0xe8
   140007a1c:	lea    edx,[rcx]
   140007a1e:	stos   DWORD PTR es:[rdi],eax
   140007a1f:	cwde   
   140007a20:	cdq    
   140007a21:	adc    DWORD PTR [rdx+0x2339ab],edi
	...
   140007a37:	cmp    DWORD PTR [rbx-0x160c1310],edi
   140007a3d:	(bad)  
   140007a3e:	rex
   140007a3f:	rex.B
   140007a40:	rex
   140007a41:	rex.X
   140007a42:	rex.WR fdiv st(0),st
   140007a45:	iret   
   140007a46:	push   rsi
   140007a47:	rex.X
   140007a48:	rex.X
   140007a49:	rex.X
   140007a4a:	rex.B
   140007a4b:	rex.XB
   140007a4c:	rex.B
   140007a4d:	rex.B
   140007a4e:	rex.B
   140007a4f:	rex.B
   140007a50:	rex.B
   140007a51:	rex.B
   140007a52:	rex.B
   140007a53:	rex.B
   140007a54:	rex.B xlat BYTE PTR ds:[rbx]
   140007a56:	jbe    0x1400079ff
   140007a58:	mov    edi,0x3ce8b3b3
   140007a5d:	adc    DWORD PTR [rsp+rdx*4-0x4d1eee67],ebp
   140007a64:	lea    esp,[rbx]
	...
   140007a76:	add    BYTE PTR [rbx],bh
   140007a78:	mov    esi,0xdff0f3f0
   140007a7d:	rex.X
   140007a7e:	rex.B
   140007a7f:	rex
   140007a80:	rex.X
   140007a81:	rex.B fdiv st(7),st
   140007a84:	(bad)  
   140007a85:	(bad)  
   140007a86:	clc    
   140007a87:	push   0x41414343
   140007a8c:	rex.B
   140007a8d:	rex.XB
   140007a8e:	rex.B
   140007a8f:	rex.B
   140007a90:	rex.B
   140007a91:	rex.B
   140007a92:	rex.B
   140007a93:	rex.B (bad) 
   140007a95:	pop    rdx
   140007a96:	fidivr WORD PTR [rax-0x41]
   140007a99:	mov    bl,0xb3
   140007a9b:	in     eax,0x8d
   140007a9d:	adc    DWORD PTR [rbp+rdx*4-0x5345f167],ebp
   140007aa4:	xchg   ebp,eax
   140007aa5:	sub    DWORD PTR [rax],eax
	...
   140007ab7:	cmp    edi,DWORD PTR [rdi+0x5fe9f3f0]
   140007abd:	rex.X
   140007abe:	rex
   140007abf:	rex.XB
   140007ac0:	rex.B
   140007ac1:	rex.WR sti 
   140007ac3:	(bad)  
   140007ac4:	(bad)  
   140007ac5:	(bad)  
   140007ac6:	(bad)  
   140007ac7:	std    
   140007ac8:	ficomp DWORD PTR [rdx+0x43]
   140007acb:	rex.XB
   140007acc:	rex.B
   140007acd:	rex.X
   140007ace:	rex.B
   140007acf:	rex.XB
   140007ad0:	rex.B
   140007ad1:	rex.XB
   140007ad2:	rex.B
   140007ad3:	rex.B
   140007ad4:	rex.XB (bad) 
   140007ad6:	sar    BYTE PTR [rax-0x58],1
   140007ad9:	mov    edi,0x118de8bf
   140007ade:	lods   al,BYTE PTR ds:[rsi]
   140007adf:	cwde   
   140007ae0:	cdq    
   140007ae1:	adc    ecx,esp
   140007ae3:	mov    dl,0x99
   140007ae5:	sub    DWORD PTR [rax],eax
	...
   140007af7:	cmp    eax,eax
   140007af9:	lock repz fld QWORD PTR [rax+0x40]
   140007afe:	rex.XB
   140007aff:	rex.X
   140007b00:	rex pop rax
   140007b02:	cld    
   140007b03:	(bad)  
   140007b04:	(bad)  
   140007b05:	(bad)  
   140007b06:	(bad)  
   140007b07:	(bad)  
   140007b08:	(bad)  
   140007b09:	cli    
   140007b0a:	int3   
   140007b0b:	rex.WR
   140007b0c:	rex.XB
   140007b0d:	rex.X
   140007b0e:	rex.B
   140007b0f:	rex.X
   140007b10:	rex.B
   140007b11:	rex.B
   140007b12:	rex.X
   140007b13:	rex.B
   140007b14:	rex.B
   140007b15:	pop    r9
   140007b17:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007b18:	js     0x140007acd
   140007b1a:	mov    edi,0xac1191e5
   140007b1f:	cwde   
   140007b20:	cdq    
   140007b21:	adc    ecx,esp
   140007b23:	lods   al,BYTE PTR ds:[rsi]
   140007b24:	cdq    
   140007b25:	sub    DWORD PTR [rax],eax
	...
   140007b37:	cmp    edi,DWORD PTR [rsi+0x4054ecf3]
   140007b3d:	rex.XB
   140007b3e:	rex.X
   140007b3f:	rex
   140007b40:	rex.X pop rax
   140007b42:	cld    
   140007b43:	(bad)  
   140007b44:	(bad)  
   140007b45:	(bad)  
   140007b46:	(bad)  
   140007b47:	(bad)  
   140007b48:	(bad)  
   140007b49:	(bad)  
   140007b4a:	(bad)  
   140007b4b:	fistp  DWORD PTR [rsp+rcx*2+0x43]
   140007b4f:	rex.B
   140007b50:	rex.XB
   140007b51:	rex.X
   140007b52:	rex.B
   140007b53:	rex.XB
   140007b54:	rex.B
   140007b55:	rex.B
   140007b56:	rex.B enter 0xab7e,0xbf
   140007b5b:	call   0xd8ac8cf1
   140007b60:	cdq    
   140007b61:	(bad)  
   140007b62:	mov    edx,0x2999ac
	...
   140007b77:	cmp    edi,DWORD PTR [rdx+0x4049baf3]
   140007b7d:	rex.WXB
   140007b7e:	rex.X
   140007b7f:	rex.WXB
   140007b80:	rex.X pop rax
   140007b82:	cld    
   140007b83:	(bad)  
   140007b84:	(bad)  
   140007b85:	(bad)  
   140007b86:	(bad)  
   140007b87:	(bad)  
   140007b88:	(bad)  
   140007b89:	(bad)  
   140007b8a:	(bad)  
   140007b8b:	(bad)  
   140007b8c:	cli    
   140007b8d:	(bad)  
   140007b8e:	push   rdi
   140007b8f:	rex.XB
   140007b90:	rex.X
   140007b91:	rex.X
   140007b92:	rex.X
   140007b93:	rex.B
   140007b94:	rex.X
   140007b95:	rex.X (bad) 
   140007b97:	push   0xffffffffe5bf8c86
   140007b9c:	(bad)  
   140007b9d:	adc    DWORD PTR [rax+rbx*4-0x531eee67],ebp
   140007ba4:	cdq    
   140007ba5:	sub    DWORD PTR [rax],eax
	...
   140007bb7:	cmp    edi,DWORD PTR [rsi+0x4b40a4f3]
   140007bbd:	rex.XB
   140007bbe:	rex
   140007bbf:	rex.XB
   140007bc0:	rex pop rax
   140007bc2:	cld    
   140007bc3:	(bad)  
   140007bc4:	(bad)  
   140007bc5:	(bad)  
   140007bc6:	(bad)  
   140007bc7:	(bad)  
   140007bc8:	(bad)  
   140007bc9:	(bad)  
   140007bca:	(bad)  
   140007bcb:	(bad)  
   140007bcc:	(bad)  
   140007bcd:	push   rsi
   140007bcf:	(bad)  
   140007bd0:	push   rsi
   140007bd1:	rex.XB
   140007bd2:	rex.X
   140007bd3:	rex.X
   140007bd4:	rex.X
   140007bd5:	rex.X
   140007bd6:	pop    r11
   140007bd8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007bd9:	js     0x140007b97
   140007bdb:	in     eax,0x37
   140007bdd:	adc    DWORD PTR [rax+rbx*4-0x531ef170],ebp
   140007be4:	cdq    
   140007be5:	sub    DWORD PTR [rax],eax
	...
   140007bf7:	cmp    eax,eax
   140007bf9:	icebp  
   140007bfa:	ret    
   140007bfb:	rex
   140007bfc:	rex.WXB
   140007bfd:	rex
   140007bfe:	rex.XB
   140007bff:	rex.WXB
   140007c00:	rex.X push rbp
   140007c02:	(bad)  
   140007c03:	(bad)  
   140007c04:	(bad)  
   140007c05:	(bad)  
   140007c06:	(bad)  
   140007c07:	(bad)  
   140007c08:	(bad)  
   140007c09:	(bad)  
   140007c0a:	(bad)  
   140007c0b:	(bad)  
   140007c0c:	(bad)  
   140007c0d:	(bad)  
   140007c0e:	(bad)  
   140007c0f:	sti    
   140007c10:	(bad)  
   140007c11:	pop    rax
   140007c12:	push   rsi
   140007c13:	rex.XB
   140007c14:	rex.X
   140007c15:	rex.X
   140007c16:	rex
   140007c17:	rex.XB fnstsw WORD PTR [r14-0x45]
   140007c1b:	mov    esi,0x98b61127
   140007c20:	cmp    al,0xe
   140007c22:	loope  0x140007bd0
   140007c24:	cdq    
   140007c25:	sub    DWORD PTR [rax],eax
	...
   140007c37:	cmp    eax,eax
   140007c39:	in     al,dx
   140007c3a:	push   rbx
   140007c3b:	rex
   140007c3c:	rex.WXB
   140007c3d:	rex.WXB
   140007c3e:	rex.WXB
   140007c3f:	rex.WXB
   140007c40:	rex pop rax
   140007c42:	cld    
   140007c43:	(bad)  
   140007c44:	(bad)  
   140007c45:	(bad)  
   140007c46:	(bad)  
   140007c47:	(bad)  
   140007c48:	(bad)  
   140007c49:	(bad)  
   140007c4a:	(bad)  
   140007c4b:	(bad)  
   140007c4c:	(bad)  
   140007c4d:	(bad)  
   140007c4e:	(bad)  
   140007c4f:	(bad)  
   140007c50:	push   rdi
   140007c52:	(bad)  
   140007c53:	push   rsi
   140007c54:	rex.XB
   140007c55:	rex.B
   140007c56:	rex.XB
   140007c57:	sar    BYTE PTR [rsi-0x54],cl
   140007c5b:	call   0xd8b68d87
   140007c60:	cmp    al,0xe
   140007c62:	loope  0x140007c10
   140007c64:	cdq    
   140007c65:	sub    DWORD PTR [rax],eax
	...
   140007c77:	cmp    edi,DWORD PTR [rsi+0x4b4052e9]
   140007c7d:	rex.WXB
   140007c7e:	rex.X
   140007c7f:	rex.XB
   140007c80:	rex.WXB push r13
   140007c82:	(bad)  
   140007c83:	(bad)  
   140007c84:	(bad)  
   140007c85:	(bad)  
   140007c86:	(bad)  
   140007c87:	(bad)  
   140007c88:	(bad)  
   140007c89:	(bad)  
   140007c8a:	(bad)  
   140007c8b:	(bad)  
   140007c8c:	(bad)  
   140007c8d:	(bad)  
   140007c8e:	(bad)  
   140007c8f:	(bad)  
   140007c90:	(bad)  
   140007c91:	(bad)  
   140007c92:	cld    
   140007c93:	(bad)  
   140007c94:	rex.WR
   140007c95:	rex
   140007c96:	rex.XB
   140007c97:	rex enter 0xab7e,0xe5
   140007c9c:	(bad)  
   140007c9d:	adc    DWORD PTR [rsi-0x1ef7c56c],esi
   140007ca3:	lods   al,BYTE PTR ds:[rsi]
   140007ca4:	cmp    al,0x29
	...
   140007cb6:	add    BYTE PTR [rbx],bh
   140007cb8:	in     eax,0xe8
   140007cba:	push   rcx
   140007cbb:	rex.RXB
   140007cbc:	rex.WXB
   140007cbd:	rex.WXB
   140007cbe:	rex.WXB
   140007cbf:	rex.WXB
   140007cc0:	rex pop rax
   140007cc2:	cld    
   140007cc3:	(bad)  
   140007cc4:	(bad)  
   140007cc5:	(bad)  
   140007cc6:	(bad)  
   140007cc7:	(bad)  
   140007cc8:	(bad)  
   140007cc9:	(bad)  
   140007cca:	(bad)  
   140007ccb:	(bad)  
   140007ccc:	(bad)  
   140007ccd:	(bad)  
   140007cce:	(bad)  
   140007ccf:	(bad)  
   140007cd0:	(bad)  
   140007cd1:	(bad)  
   140007cd2:	call   rbp
   140007cd4:	rex.WR
   140007cd5:	rex.XB
   140007cd6:	rex.X
   140007cd7:	rex.X retf 
   140007cd9:	jle    0x140007c86
   140007cdb:	call   0xd8b68e07
   140007ce0:	cmp    cl,BYTE PTR [rsi]
   140007ce2:	loope  0x140007c90
   140007ce4:	cmp    al,0x23
	...
   140007cf6:	add    BYTE PTR [rbx],bh
   140007cf8:	mov    esi,0x4b4751e5
   140007cfd:	rex.WXB
   140007cfe:	rex.WXB
   140007cff:	rex.WXB
   140007d00:	rex.WXB push r13
   140007d02:	cld    
   140007d03:	(bad)  
   140007d04:	(bad)  
   140007d05:	(bad)  
   140007d06:	(bad)  
   140007d07:	(bad)  
   140007d08:	(bad)  
   140007d09:	(bad)  
   140007d0a:	(bad)  
   140007d0b:	(bad)  
   140007d0c:	(bad)  
   140007d0d:	(bad)  
   140007d0e:	(bad)  
   140007d0f:	(bad)  
   140007d10:	(bad)  
   140007d11:	(bad)  
   140007d12:	dec    edi
   140007d14:	rex.WR
   140007d15:	rex
   140007d16:	rex
   140007d17:	rex sar DWORD PTR [rsi-0x4a],1
   140007d1b:	jmp    0x140007d44
   140007d1d:	adc    DWORD PTR [rsi-0x1ef1c568],esi
   140007d23:	lods   al,BYTE PTR ds:[rsi]
   140007d24:	cmp    ah,BYTE PTR [rbx]
	...
   140007d36:	add    BYTE PTR [rbx],bh
   140007d38:	mov    esi,0x4b4751e8
   140007d3d:	rex.WXB
   140007d3e:	rex.WXB
   140007d3f:	rex.WXB
   140007d40:	rex pop rax
   140007d42:	cld    
   140007d43:	(bad)  
   140007d44:	(bad)  
   140007d45:	(bad)  
   140007d46:	(bad)  
   140007d47:	(bad)  
   140007d48:	(bad)  
   140007d49:	(bad)  
   140007d4a:	(bad)  
   140007d4b:	(bad)  
   140007d4c:	(bad)  
   140007d4d:	(bad)  
   140007d4e:	(bad)  
   140007d4f:	(bad)  
   140007d50:	(bad)  
   140007d51:	(bad)  
   140007d52:	ficom  DWORD PTR [rbp+0x4c]
   140007d55:	rex.WXB
   140007d56:	rex.XB
   140007d57:	rex.WXB sar BYTE PTR [r14-0x46],cl
   140007d5b:	jmp    0x140007d84
   140007d5d:	or     eax,0xe3ab6ac
   140007d62:	loope  0x140007d1f
   140007d64:	cmp    al,0x23
	...
   140007d76:	add    BYTE PTR [rbx],bh
   140007d78:	call   0x18c47ce66
   140007d7d:	rex.WXB
   140007d7e:	rex.WXB
   140007d7f:	rex.WXB
   140007d80:	rex.WXB (bad) 
   140007d82:	(bad)  
   140007d83:	(bad)  
   140007d84:	(bad)  
   140007d85:	(bad)  
   140007d86:	(bad)  
   140007d87:	(bad)  
   140007d88:	(bad)  
   140007d89:	(bad)  
   140007d8a:	(bad)  
   140007d8b:	(bad)  
   140007d8c:	(bad)  
   140007d8d:	(bad)  
   140007d8e:	(bad)  
   140007d8f:	(bad)  
   140007d90:	cli    
   140007d91:	iret   
   140007d92:	pop    rbp
   140007d93:	rex.XB
   140007d94:	rex.WXB
   140007d95:	rex
   140007d96:	rex.XB
   140007d97:	rex.WXB leave 
   140007d99:	and    dh,0xec
   140007d9c:	(bad)  
   140007d9d:	adc    DWORD PTR [rdx-0x1ef7c554],edi
   140007da3:	call   0x14000a0e2
	...
   140007db4:	add    BYTE PTR [rax],al
   140007db6:	add    BYTE PTR [rbx],bh
   140007db8:	shr    ah,0x45
   140007dbb:	rex.RXB
   140007dbc:	rex.WXB
   140007dbd:	rex.WXB
   140007dbe:	rex.WXB
   140007dbf:	rex.WXB
   140007dc0:	rex.WXB pop r14
   140007dc2:	cld    
   140007dc3:	(bad)  
   140007dc4:	(bad)  
   140007dc5:	(bad)  
   140007dc6:	(bad)  
   140007dc7:	(bad)  
   140007dc8:	(bad)  
   140007dc9:	(bad)  
   140007dca:	(bad)  
   140007dcb:	(bad)  
   140007dcc:	(bad)  
   140007dcd:	(bad)  
   140007dce:	(bad)  
   140007dcf:	fsub   QWORD PTR [rdx+0x5d]
   140007dd2:	rex.XB
   140007dd3:	rex.RXB
   140007dd4:	rex.XB
   140007dd5:	rex.WXB
   140007dd6:	rex push rdi
   140007dd8:	frstor [rbp+0x1127e6eb]
   140007dde:	loop   0x140007d87
   140007de0:	cmp    cl,BYTE PTR [rsi]
   140007de2:	loope  0x140007dc9
   140007de4:	cmp    esp,DWORD PTR [rbx]
	...
   140007df6:	add    BYTE PTR [rbx],bh
   140007df8:	shl    bl,0x72
   140007dfb:	rex.RXB
   140007dfc:	rex.WXB
   140007dfd:	rex.WRB
   140007dfe:	rex.WXB
   140007dff:	rex.WXB
   140007e00:	rex.WXB (bad) 
   140007e02:	(bad)  
   140007e03:	(bad)  
   140007e04:	(bad)  
   140007e05:	(bad)  
   140007e06:	(bad)  
   140007e07:	(bad)  
   140007e08:	(bad)  
   140007e09:	(bad)  
   140007e0a:	(bad)  
   140007e0b:	(bad)  
   140007e0c:	(bad)  
   140007e0d:	sti    
   140007e0e:	iret   
   140007e0f:	pop    rbp
   140007e10:	rex.WR
   140007e11:	rex.WXB
   140007e12:	rex.WXB
   140007e13:	rex.WXB
   140007e14:	rex.WXB
   140007e15:	rex
   140007e16:	(bad)
   140007e1c:	(bad)  
   140007e1d:	adc    DWORD PTR [rdx-0x1ef1c557],edi
   140007e23:	sar    BYTE PTR [rbx],0x23
	...
   140007e36:	add    BYTE PTR [rbx],bh
   140007e38:	mov    edx,0x4d489ff3
   140007e3d:	rex.WXB
   140007e3e:	rex.WRB
   140007e3f:	rex.WXB
   140007e40:	rex.WXB (bad) 
   140007e42:	std    
   140007e43:	(bad)  
   140007e44:	(bad)  
   140007e45:	(bad)  
   140007e46:	(bad)  
   140007e47:	(bad)  
   140007e48:	(bad)  
   140007e49:	(bad)  
   140007e4a:	(bad)  
   140007e4b:	(bad)  
   140007e4c:	fsub   QWORD PTR [rdx+0x4e]
   140007e4f:	rex.WR
   140007e50:	rex.WXB
   140007e51:	rex.WXB
   140007e52:	rex.WXB
   140007e53:	rex.XB
   140007e54:	rex.WXB
   140007e55:	rex.WXB
   140007e56:	rex (bad) 
   140007e58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007e59:	mov    ecx,0x1127e6e8
   140007e5e:	mov    edx,0xe10e3aa7
   140007e63:	mov    ebx,0x233a
	...
   140007e74:	add    BYTE PTR [rax],al
   140007e76:	add    BYTE PTR [rcx],bh
   140007e78:	mov    esi,0x474fc0f3
   140007e7d:	rex.WRX
   140007e7e:	rex.WXB
   140007e7f:	rex.WRB
   140007e80:	rex.WXB (bad) 
   140007e82:	std    
   140007e83:	(bad)  
   140007e84:	(bad)  
   140007e85:	(bad)  
   140007e86:	(bad)  
   140007e87:	(bad)  
   140007e88:	(bad)  
   140007e89:	(bad)  
   140007e8a:	sti    
   140007e8b:	iret   
   140007e8c:	(bad)  
   140007e8d:	push   rdi
   140007e8e:	rex.WRB
   140007e8f:	rex.WXB
   140007e90:	rex.WXB
   140007e91:	rex.WXB
   140007e92:	rex.WXB
   140007e93:	rex.WXB
   140007e94:	rex
   140007e95:	rex.XB (bad) 
   140007e97:	cmc    
   140007e98:	mov    ch,ah
   140007e9a:	in     al,dx
   140007e9b:	jmp    0x140007ec4
   140007e9d:	adc    DWORD PTR [rdx-0x47f1c557],edi
   140007ea3:	mov    ebx,0x233a
	...
   140007eb4:	add    BYTE PTR [rax],al
   140007eb6:	add    BYTE PTR [rbx],bh
   140007eb8:	shl    bl,0xec
   140007ebb:	jno    0x140007f0a
   140007ebd:	rex.WXB
   140007ebe:	rex.WRB
   140007ebf:	rex.WRB
   140007ec0:	rex.WXB (bad) 
   140007ec2:	std    
   140007ec3:	(bad)  
   140007ec4:	(bad)  
   140007ec5:	(bad)  
   140007ec6:	(bad)  
   140007ec7:	(bad)  
   140007ec8:	push   rsi
   140007eca:	addr32 pop rbp
   140007ecc:	rex.WRB
   140007ecd:	rex.WXB
   140007ece:	rex.WXB
   140007ecf:	rex.WXB
   140007ed0:	rex.WXB
   140007ed1:	rex.WXB
   140007ed2:	rex.WXB
   140007ed3:	rex.WXB
   140007ed4:	rex.WR (bad) 
   140007ed6:	fcmovu st,st(6)
   140007ed8:	mov    eax,ebp
   140007eda:	in     al,dx
   140007edb:	jmp    0x140007f04
   140007edd:	adc    DWORD PTR [rdx-0x1ef1c554],edi
   140007ee3:	lods   al,BYTE PTR ds:[rsi]
   140007ee4:	cmp    al,0x23
	...
   140007ef6:	add    BYTE PTR [rcx],bh
   140007ef8:	mov    ebx,0x46aaf3f3
   140007efd:	rex.WRB
   140007efe:	rex.WRB
   140007eff:	rex.WRB
   140007f00:	rex.WXB (bad) 
   140007f02:	(bad)  
   140007f03:	std    
   140007f04:	(bad)  
   140007f05:	(bad)  
   140007f06:	(bad)  
   140007f07:	sti    
   140007f08:	(bad)  
   140007f09:	pop    rbp
   140007f0a:	rex.WRX
   140007f0b:	rex.WR
   140007f0c:	rex.WXB
   140007f0d:	rex.WXB
   140007f0e:	rex.WR
   140007f0f:	rex.WXB
   140007f10:	rex.WXB
   140007f11:	rex.WXB
   140007f12:	rex.WXB
   140007f13:	rex.WRX
   140007f14:	addr32 imul esi,esp,0xecece288
   140007f1b:	call   0xe7ba9047
   140007f20:	cmp    cl,BYTE PTR [rsi]
   140007f22:	mov    eax,0x233bbb
	...
   140007f37:	cmp    DWORD PTR [rdi+0x71e9f3f0],edi
   140007f3d:	rex.RXB
   140007f3e:	rex.WRB
   140007f3f:	rex.WRB
   140007f40:	rex.WRB (bad) 
   140007f42:	std    
   140007f43:	(bad)  
   140007f44:	(bad)  
   140007f45:	(bad)  
   140007f46:	clc    
   140007f47:	(bad)  
   140007f48:	pop    rbp
   140007f49:	rex.WRX
   140007f4a:	rex.WRB
   140007f4b:	rex.WXB
   140007f4c:	rex.WRB
   140007f4d:	rex.WXB
   140007f4e:	rex.WRB
   140007f4f:	rex.WXB
   140007f50:	rex.WXB
   140007f51:	rex.WXB (bad) 
   140007f53:	push   0xffffffffa5ded462
   140007f58:	call   0x167e76946
   140007f5d:	adc    DWORD PTR [rdx-0x49f1c557],edi
   140007f63:	mov    ebx,0x233a
	...
   140007f74:	add    BYTE PTR [rax],al
   140007f76:	add    BYTE PTR [rdi-0xc130f40],cl
   140007f7c:	stos   DWORD PTR es:[rdi],eax
   140007f7d:	rex.WRXB
   140007f7e:	rex.WRB
   140007f7f:	rex.WRB
   140007f80:	rex.WRB
   140007f81:	rex.WRB (bad) 
   140007f84:	cli    
   140007f85:	(bad)  
   140007f86:	(bad)  
   140007f87:	rex.WRX
   140007f88:	rex.WRB
   140007f89:	rex.WRB
   140007f8a:	rex.WRB
   140007f8b:	rex.WRB
   140007f8c:	rex.WRB
   140007f8d:	rex.WXB
   140007f8e:	rex.WXB
   140007f8f:	rex.WRB push r13
   140007f91:	push   0x69
   140007f93:	(bad)  
   140007f94:	imul   esi,ebp,0xe9e8e588
   140007f9a:	in     al,dx
   140007f9b:	call   0xe7bb90c7
   140007fa0:	cmp    cl,BYTE PTR [rsi]
   140007fa2:	mov    eax,0x233cb7
	...
   140007fb7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007fb8:	in     al,dx
   140007fb9:	repz icebp 
   140007fbb:	repz mov esi,0x4d4d4a74
   140007fc1:	rex.WRB
   140007fc2:	rex.WRB (bad) 
   140007fc4:	rex.WRX
   140007fc5:	rex.WRX
   140007fc6:	rex.WRB
   140007fc7:	rex.WRB
   140007fc8:	rex.WRB
   140007fc9:	rex.WRB
   140007fca:	rex.WXB
   140007fcb:	rex.WXB
   140007fcc:	rex.WRB
   140007fcd:	rex.WRX (bad) 
   140007fcf:	imul   ebp,DWORD PTR [rdx+0x62],0x89d96262
   140007fd6:	mov    eax,0xe9e9e8eb
   140007fdb:	out    0x27,al
   140007fdd:	adc    DWORD PTR [rdx-0x1ef1c557],edi
   140007fe3:	lods   al,BYTE PTR ds:[rsi]
   140007fe4:	cmp    ah,BYTE PTR [rbx]
	...
   140007ff6:	add    BYTE PTR [rax-0xc0c0c14],bl
   140007ffc:	mov    esi,0x4d486c91
   140008001:	rex.WRB
   140008002:	rex.WRB
   140008003:	rex.WRB
   140008004:	rex.WRB
   140008005:	rex.WRB
   140008006:	rex.WRB
   140008007:	rex.WRB
   140008008:	rex.WRB
   140008009:	rex.WRX
   14000800a:	rex.WRX (bad) 
   14000800c:	(bad)  
   14000800d:	push   0x6a
   14000800f:	addr32 addr32 (bad) 
   140008013:	(bad)  [rbp-0x1317145b]
   140008019:	call   0x151286907
   14000801e:	mov    ebx,0xe1083aa7
   140008023:	lods   al,BYTE PTR ds:[rsi]
   140008024:	cmp    al,0x23
	...
   140008036:	add    BYTE PTR [rax-0x6060c14],bl
   14000803c:	repz mov bl,0xb3
   14000803f:	jae    0x140008096
   140008041:	rex.WRX push rbp
   140008043:	rex.WRX
   140008044:	rex.WRX push rbp
   140008046:	(bad)  
   140008047:	(bad)  
   140008049:	imul   ebp,DWORD PTR [rcx+0x6a],0x67626769
   140008050:	(bad)  
   140008052:	fisub  DWORD PTR [rbp-0x1717144c]
   140008058:	jmp    0x167e76a46
   14000805d:	adc    DWORD PTR [rbx-0x55f1c554],edi
   140008063:	mov    ebx,0x233a
	...
   140008074:	add    BYTE PTR [rax],al
   140008076:	add    BYTE PTR [rbp-0xc0f0c1b],dl
   14000807c:	jmp    0x140008030
   14000807e:	ret    0xa5f1
   140008081:	vpunpckhwd xmm13,xmm2,XMMWORD PTR [rdx+0x69]
   140008086:	imul   ebp,DWORD PTR [rcx+0x69],0x63676369
   14000808d:	addr32 (bad) 
   140008090:	imul   ebx,eax,0xe8ebb4b4
   140008096:	call   0x129c36984
   14000809b:	call   0xe7bb91c7
   1400080a0:	cmp    cl,BYTE PTR [rsi]
   1400080a2:	loope  0x140008050
   1400080a4:	cmp    al,0x23
	...
   1400080b6:	add    BYTE PTR [rax-0xf0f0c18],bl
   1400080bc:	in     al,dx
   1400080bd:	scas   eax,DWORD PTR es:[rdi]
   1400080be:	mov    esp,0xc7bac2ec
   1400080c3:	movsxd esp,DWORD PTR gs:[rbx+0x63]
   1400080c7:	movsxd ebp,DWORD PTR [rcx+0x62]
   1400080ca:	movsxd esp,DWORD PTR [edx+0x63]
   1400080ce:	imul   edx,eax,0xe8e2b4de
   1400080d4:	call   0x129e96ac1
   1400080d9:	mov    esi,0x1127e5e9
   1400080de:	mov    ebx,0xe1083aa7
   1400080e3:	lods   al,BYTE PTR ds:[rsi]
   1400080e4:	cmp    al,0x23
	...
   1400080f6:	add    BYTE PTR [rax-0xf0f0f18],bl
   1400080fc:	call   0x131ea41b0
   140008101:	icebp  
   140008102:	mov    edi,0x66c5c7a1
   140008107:	movsxd esp,DWORD PTR [rdi+0x63]
   14000810a:	addr32 addr32 data16 (bad) 
   14000810e:	fucom  st(1)
   140008110:	mov    edx,0xe9e8e8e8
   140008115:	jmp    0x129bf4402
   14000811a:	jmp    0xfb11a808
   14000811f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008120:	cdq    
   140008121:	(bad)  
   140008122:	mov    dh,0xac
   140008124:	cmp    al,0x29
	...
   140008136:	add    BYTE PTR [rbp-0xf0f0c18],dl
   14000813c:	in     al,dx
   14000813d:	scas   eax,DWORD PTR es:[rdi]
   14000813e:	mov    edi,0xc2e9e9e9
   140008143:	mov    bl,0xc2
   140008145:	mov    edi,0xddddddb6
   14000814a:	fucom  st(1)
   14000814c:	mov    edx,0xe9c2bec0
   140008151:	call   0x129bf6b3f
   140008156:	mov    esi,0xbec2c2e9
   14000815b:	in     al,dx
   14000815c:	(bad)  
   14000815d:	adc    DWORD PTR [rbx-0x47dc5259],edi
   140008163:	mov    edx,0x2998
	...
   140008174:	add    BYTE PTR [rax],al
   140008176:	add    BYTE PTR [rax-0xc0f0f1b],bl
   14000817c:	call   0x129ed3d30
   140008181:	jmp    0x102c32f48
   140008186:	ret    0xc2c2
   140008189:	ret    0xc2c2
   14000818c:	ret    0xe9e9
   14000818f:	ret    0xc2e8
   140008192:	mov    esi,0xc2c2c2e9
   140008197:	mov    esi,0xf0e9e8c2
   14000819c:	(bad)  
   14000819d:	and    DWORD PTR [rbx-0x47de3f54],edi
   1400081a3:	mov    ebx,0x2bac
	...
   1400081b4:	add    BYTE PTR [rax],al
   1400081b6:	add    BYTE PTR [rbp-0x6060c42],dl
   1400081bc:	stc    
   1400081bd:	lock call 0x12cf16eb3
   1400081c3:	in     al,dx
   1400081c4:	jmp    0x128e96eae
   1400081c9:	call   0x128e96ab6
   1400081ce:	shr    al,0xbe
   1400081d1:	call   0xfebf4094
   1400081d6:	mov    esi,0xbfbebec2
   1400081db:	jmp    0xecb1a36d
   1400081e0:	lods   al,BYTE PTR ds:[rsi]
   1400081e1:	and    esp,ecx
   1400081e3:	sar    BYTE PTR [rax+rax*1],0x0
	...
   1400081f7:	add    BYTE PTR [rsi],dh
   1400081f9:	ss ss jl 0x14000818b
   1400081fd:	mov    ?,WORD PTR [rdx+rdi*2-0x7b]
   140008201:	mov    ss,WORD PTR [rdx-0x6969696c]
   140008207:	test   eax,0xb6acaaa9
   14000820c:	mov    dh,0xac
   14000820e:	mov    edx,0xe8e5c0ba
   140008213:	out    0xe9,al
   140008215:	in     al,dx
   140008216:	in     al,dx
   140008217:	jmp    0x140008209
   140008219:	in     al,dx
   14000821a:	in     al,dx
   14000821b:	rcr    BYTE PTR [rax-0x66675780],0x0
	...
   14000824a:	stos   BYTE PTR es:[rdi],al
   14000824b:	test   al,0xa1
   14000824d:	movabs eax,ds:0x8b8c8c8c8ba896a9
   140008256:	mov    WORD PTR [rbx-0x6b747475],cs
	...
   1400085f0:	(bad)  
   1400085f1:	(bad)  
   1400085f2:	(bad)  
   1400085f3:	(bad)  
   1400085f4:	(bad)  
   1400085f5:	(bad)  
   1400085f6:	(bad)  
   1400085f7:	(bad)  
   1400085f8:	(bad)  
   1400085f9:	(bad)  
   1400085fa:	(bad)  
   1400085fb:	(bad)  
   1400085fc:	(bad)  
   1400085fd:	(bad)  
   1400085fe:	(bad)  
   1400085ff:	(bad)  
   140008600:	(bad)  
   140008601:	(bad)  
   140008602:	(bad)  
   140008603:	(bad)  
   140008604:	(bad)  
   140008605:	(bad)  
   140008606:	(bad)  
   140008607:	(bad)  
   140008608:	(bad)  
   140008609:	(bad)  
   14000860a:	(bad)  
   14000860b:	(bad)  
   14000860c:	(bad)  
   14000860d:	(bad)  
   14000860e:	(bad)  
   14000860f:	(bad)  
   140008610:	(bad)  
   140008611:	(bad)  
   140008612:	(bad)  
   140008613:	(bad)  
   140008614:	clc    
   140008615:	ud0    edi,edi
   140008618:	(bad)  
   140008619:	(bad)  
   14000861a:	(bad)  
   14000861b:	cld    
   14000861c:	add    BYTE PTR [rdi],al
   14000861e:	(bad)  
   14000861f:	(bad)  
   140008620:	(bad)  
   140008621:	(bad)  
   140008622:	inc    BYTE PTR [rax]
   140008624:	add    BYTE PTR [rax],al
   140008626:	jg     0x140008627
   140008628:	(bad)  
   140008629:	inc    DWORD PTR [rax]
   14000862b:	add    BYTE PTR [rax],al
   14000862d:	add    BYTE PTR [rdi],cl
   14000862f:	(bad)  
   140008630:	inc    DWORD PTR [rax+0x0]
   140008636:	(bad)  
   140008637:	(bad)  
   140008638:	inc    BYTE PTR [rax]
   14000863a:	add    BYTE PTR [rax],al
   14000863c:	add    BYTE PTR [rax],al
   14000863e:	add    edi,edi
   140008640:	inc    BYTE PTR [rax]
   140008642:	add    BYTE PTR [rax],al
   140008644:	add    BYTE PTR [rax],al
   140008646:	add    edi,edi
   140008648:	inc    BYTE PTR [rax]
   14000864a:	add    BYTE PTR [rax],al
   14000864c:	add    BYTE PTR [rax],al
   14000864e:	add    edi,edi
   140008650:	inc    BYTE PTR [rax]
   140008652:	add    BYTE PTR [rax],al
   140008654:	add    BYTE PTR [rax],al
   140008656:	add    edi,edi
   140008658:	inc    BYTE PTR [rax]
   14000865a:	add    BYTE PTR [rax],al
   14000865c:	add    BYTE PTR [rax],al
   14000865e:	add    edi,edi
   140008660:	inc    BYTE PTR [rax]
   140008662:	add    BYTE PTR [rax],al
   140008664:	add    BYTE PTR [rax],al
   140008666:	add    edi,edi
   140008668:	inc    BYTE PTR [rax]
   14000866a:	add    BYTE PTR [rax],al
   14000866c:	add    BYTE PTR [rax],al
   14000866e:	add    edi,edi
   140008670:	inc    BYTE PTR [rax]
   140008672:	add    BYTE PTR [rax],al
   140008674:	add    BYTE PTR [rax],al
   140008676:	add    edi,edi
   140008678:	inc    BYTE PTR [rax]
   14000867a:	add    BYTE PTR [rax],al
   14000867c:	add    BYTE PTR [rax],al
   14000867e:	add    edi,edi
   140008680:	inc    BYTE PTR [rax]
   140008682:	add    BYTE PTR [rax],al
   140008684:	add    BYTE PTR [rax],al
   140008686:	add    edi,edi
   140008688:	inc    BYTE PTR [rax]
   14000868a:	add    BYTE PTR [rax],al
   14000868c:	add    BYTE PTR [rax],al
   14000868e:	add    edi,edi
   140008690:	inc    BYTE PTR [rax]
   140008692:	add    BYTE PTR [rax],al
   140008694:	add    BYTE PTR [rax],al
   140008696:	add    edi,edi
   140008698:	inc    BYTE PTR [rax]
   14000869a:	add    BYTE PTR [rax],al
   14000869c:	add    BYTE PTR [rax],al
   14000869e:	add    edi,edi
   1400086a0:	inc    BYTE PTR [rax]
   1400086a2:	add    BYTE PTR [rax],al
   1400086a4:	add    BYTE PTR [rax],al
   1400086a6:	add    edi,edi
   1400086a8:	inc    BYTE PTR [rax]
   1400086aa:	add    BYTE PTR [rax],al
   1400086ac:	add    BYTE PTR [rax],al
   1400086ae:	add    edi,edi
   1400086b0:	inc    BYTE PTR [rax]
   1400086b2:	add    BYTE PTR [rax],al
   1400086b4:	add    BYTE PTR [rax],al
   1400086b6:	add    edi,edi
   1400086b8:	inc    BYTE PTR [rax]
   1400086ba:	add    BYTE PTR [rax],al
   1400086bc:	add    BYTE PTR [rax],al
   1400086be:	add    edi,edi
   1400086c0:	inc    BYTE PTR [rax]
   1400086c2:	add    BYTE PTR [rax],al
   1400086c4:	add    BYTE PTR [rax],al
   1400086c6:	add    edi,edi
   1400086c8:	inc    BYTE PTR [rax]
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	add    BYTE PTR [rax],al
   1400086ce:	add    edi,edi
   1400086d0:	inc    BYTE PTR [rax]
   1400086d2:	add    BYTE PTR [rax],al
   1400086d4:	add    BYTE PTR [rax],al
   1400086d6:	add    edi,edi
   1400086d8:	inc    BYTE PTR [rax]
   1400086da:	add    BYTE PTR [rax],al
   1400086dc:	add    BYTE PTR [rax],al
   1400086de:	add    edi,edi
   1400086e0:	inc    BYTE PTR [rax]
   1400086e2:	add    BYTE PTR [rax],al
   1400086e4:	add    BYTE PTR [rax],al
   1400086e6:	add    edi,edi
   1400086e8:	inc    BYTE PTR [rax]
   1400086ea:	add    BYTE PTR [rax],al
   1400086ec:	add    BYTE PTR [rax],al
   1400086ee:	add    edi,edi
   1400086f0:	inc    BYTE PTR [rax]
   1400086f2:	add    BYTE PTR [rax],al
   1400086f4:	add    BYTE PTR [rax],al
   1400086f6:	add    edi,edi
   1400086f8:	inc    BYTE PTR [rax]
   1400086fa:	add    BYTE PTR [rax],al
   1400086fc:	add    BYTE PTR [rax],al
   1400086fe:	add    edi,edi
   140008700:	inc    BYTE PTR [rax]
   140008702:	add    BYTE PTR [rax],al
   140008704:	add    BYTE PTR [rax],al
   140008706:	add    edi,edi
   140008708:	inc    BYTE PTR [rax]
   14000870a:	add    BYTE PTR [rax],al
   14000870c:	add    BYTE PTR [rax],al
   14000870e:	add    edi,edi
   140008710:	inc    BYTE PTR [rax]
   140008712:	add    BYTE PTR [rax],al
   140008714:	add    BYTE PTR [rax],al
   140008716:	add    edi,edi
   140008718:	inc    BYTE PTR [rax]
   14000871a:	add    BYTE PTR [rax],al
   14000871c:	add    BYTE PTR [rax],al
   14000871e:	add    edi,edi
   140008720:	inc    BYTE PTR [rax]
   140008722:	add    BYTE PTR [rax],al
   140008724:	add    BYTE PTR [rax],al
   140008726:	add    edi,edi
   140008728:	inc    BYTE PTR [rax]
   14000872a:	add    BYTE PTR [rax],al
   14000872c:	add    BYTE PTR [rax],al
   14000872e:	add    edi,edi
   140008730:	inc    BYTE PTR [rax]
   140008732:	add    BYTE PTR [rax],al
   140008734:	add    BYTE PTR [rax],al
   140008736:	add    edi,edi
   140008738:	inc    BYTE PTR [rax]
   14000873a:	add    BYTE PTR [rax],al
   14000873c:	add    BYTE PTR [rax],al
   14000873e:	add    edi,edi
   140008740:	inc    BYTE PTR [rax]
   140008742:	add    BYTE PTR [rax],al
   140008744:	add    BYTE PTR [rax],al
   140008746:	add    edi,edi
   140008748:	inc    BYTE PTR [rax]
   14000874a:	add    BYTE PTR [rax],al
   14000874c:	add    BYTE PTR [rax],al
   14000874e:	add    edi,edi
   140008750:	inc    BYTE PTR [rax]
   140008752:	add    BYTE PTR [rax],al
   140008754:	add    BYTE PTR [rax],al
   140008756:	add    edi,edi
   140008758:	inc    BYTE PTR [rax]
   14000875a:	add    BYTE PTR [rax],al
   14000875c:	add    BYTE PTR [rax],al
   14000875e:	add    edi,edi
   140008760:	inc    BYTE PTR [rax]
   140008762:	add    BYTE PTR [rax],al
   140008764:	add    BYTE PTR [rax],al
   140008766:	add    edi,edi
   140008768:	inc    BYTE PTR [rax]
   14000876a:	add    BYTE PTR [rax],al
   14000876c:	add    BYTE PTR [rax],al
   14000876e:	(bad)  
   14000876f:	(bad)  
   140008770:	inc    DWORD PTR [rax]
   140008772:	add    BYTE PTR [rax],al
   140008774:	add    BYTE PTR [rax],al
   140008776:	jg     0x140008777
   140008778:	(bad)  
   140008779:	(bad)  
   14000877a:	inc    eax
   14000877c:	add    BYTE PTR [rdi],cl
   14000877e:	(bad)  
   14000877f:	(bad)  
   140008780:	(bad)  
   140008781:	(bad)  
   140008782:	(bad)  
   140008783:	(bad)  
   140008784:	(bad)  
   140008785:	(bad)  
   140008786:	(bad)  
   140008787:	(bad)  
   140008788:	(bad)  
   140008789:	(bad)  
   14000878a:	(bad)  
   14000878b:	(bad)  
   14000878c:	(bad)  
   14000878d:	(bad)  
   14000878e:	(bad)  
   14000878f:	(bad)  
   140008790:	(bad)  
   140008791:	(bad)  
   140008792:	(bad)  
   140008793:	(bad)  
   140008794:	(bad)  
   140008795:	(bad)  
   140008796:	(bad)  
   140008797:	(bad)  
   140008798:	(bad)  
   140008799:	(bad)  
   14000879a:	(bad)  
   14000879b:	(bad)  
   14000879c:	(bad)  
   14000879d:	(bad)  
   14000879e:	(bad)  
   14000879f:	(bad)  
   1400087a0:	(bad)  
   1400087a1:	(bad)  
   1400087a2:	(bad)  
   1400087a3:	(bad)  
   1400087a4:	(bad)  
   1400087a5:	(bad)  
   1400087a6:	(bad)  
   1400087a7:	(bad)  
   1400087a8:	(bad)  
   1400087a9:	(bad)  
   1400087aa:	(bad)  
   1400087ab:	(bad)  
   1400087ac:	(bad)  
   1400087ad:	(bad)  
   1400087ae:	(bad)  
   1400087af:	(bad)  
   1400087b0:	(bad)  
   1400087b1:	(bad)  
   1400087b2:	(bad)  
   1400087b3:	(bad)  
   1400087b4:	(bad)  
   1400087b5:	(bad)  
   1400087b6:	(bad)  
   1400087b7:	(bad)  
   1400087b8:	(bad)  
   1400087b9:	(bad)  
   1400087ba:	(bad)  
   1400087bb:	(bad)  
   1400087bc:	(bad)  
   1400087bd:	(bad)  
   1400087be:	(bad)  
   1400087bf:	(bad)  
   1400087c0:	(bad)  
   1400087c1:	(bad)  
   1400087c2:	(bad)  
   1400087c3:	(bad)  
   1400087c4:	(bad)  
   1400087c5:	(bad)  
   1400087c6:	(bad)  
   1400087c7:	(bad)  
   1400087c8:	(bad)  
   1400087c9:	(bad)  
   1400087ca:	(bad)  
   1400087cb:	(bad)  
   1400087cc:	(bad)  
   1400087cd:	(bad)  
   1400087ce:	(bad)  
   1400087cf:	(bad)  
   1400087d0:	(bad)  
   1400087d1:	(bad)  
   1400087d2:	(bad)  
   1400087d3:	(bad)  
   1400087d4:	(bad)  
   1400087d5:	(bad)  
   1400087d6:	(bad)  
   1400087d7:	(bad)  
   1400087d8:	(bad)  
   1400087d9:	(bad)  
   1400087da:	(bad)  
   1400087db:	(bad)  
   1400087dc:	(bad)  
   1400087dd:	(bad)  
   1400087de:	(bad)  
   1400087df:	(bad)  
   1400087e0:	(bad)  
   1400087e1:	(bad)  
   1400087e2:	(bad)  
   1400087e3:	(bad)  
   1400087e4:	(bad)  
   1400087e5:	(bad)  
   1400087e6:	(bad)  
   1400087e7:	(bad)  
   1400087e8:	(bad)  
   1400087e9:	(bad)  
   1400087ea:	(bad)  
   1400087eb:	(bad)  
   1400087ec:	(bad)  
   1400087ed:	(bad)  
   1400087ee:	(bad)  
   1400087ef:	jmp    FWORD PTR [rax]
   1400087f1:	add    BYTE PTR [rax],al
   1400087f3:	add    BYTE PTR [rax],dh
   1400087f5:	add    BYTE PTR [rax],al
   1400087f7:	add    BYTE PTR [rax+0x0],ah
   1400087fa:	add    BYTE PTR [rax],al
   1400087fc:	add    DWORD PTR [rax],eax
   1400087fe:	or     BYTE PTR [rax],al
   140008800:	add    BYTE PTR [rax],al
   140008802:	add    BYTE PTR [rax],al
   140008804:	add    BYTE PTR [rcx],cl
	...
   14000880e:	add    BYTE PTR [rax],al
   140008810:	add    BYTE PTR [rcx],al
   140008812:	add    BYTE PTR [rax],al
   140008814:	add    BYTE PTR [rcx],al
   140008816:	add    BYTE PTR [rax],al
   140008818:	add    BYTE PTR [rax],al
   14000881a:	add    BYTE PTR [rax],al
   14000881c:	scas   al,BYTE PTR es:[rdi]
   14000881d:	jg     0x140008836
   14000881f:	add    BYTE PTR [rbx-0x49ffe17b],dh
   140008825:	mov    BYTE PTR [rcx],ah
   140008827:	add    BYTE PTR [rbp-0x47ffd470],bh
   14000882d:	xchg   ecx,eax
   14000882e:	(bad)  
   14000882f:	add    dh,al
   140008831:	cwde   
   140008832:	xor    al,0x0
   140008834:	ret    0x3b98
   140008837:	add    bh,cl
   140008839:	movabs eax,ds:0x9cc100449cc2003c
   140008842:	rex.W add dl,al
   140008845:	popf   
   140008846:	rex.WRXB add r14b,r10b
   140008849:	test   eax,0xabcb0047
   14000884e:	pop    rdx
   14000884f:	add    cl,dl
   140008851:	lods   al,BYTE PTR ds:[rsi]
   140008852:	push   rsp
   140008853:	add    al,dl
   140008855:	scas   al,BYTE PTR es:[rdi]
   140008856:	pop    rax
   140008857:	add    ah,dl
   140008859:	mov    cl,0x5c
   14000885b:	add    ah,ah
   14000885d:	mov    ecx,0xaecf0057
   140008862:	(bad)  
   140008863:	add    dh,cl
   140008865:	mov    al,0x65
   140008867:	add    dh,dl
   140008869:	mov    bl,0x6b
   14000886b:	add    al,dl
   14000886d:	scas   eax,DWORD PTR es:[rdi]
   14000886e:	jo     0x140008870
   140008870:	shl    BYTE PTR [rbp-0x4928ff8e],cl
   140008876:	jbe    0x140008878
   140008878:	(bad)  
   140008879:	mov    eax,0xbbda0074
   14000887e:	jae    0x140008880
   140008880:	fnstcw WORD PTR [rax-0x4328ff89]
   140008886:	jge    0x140008888
   140008888:	fstp   TBYTE PTR [rsi-0x4424ff88]
   14000888e:	jge    0x140008890
   140008890:	or     al,0x63
   140008892:	repnz add BYTE PTR [rdx],dl
   140008895:	ins    BYTE PTR es:[rdi],dx
   140008896:	cmc    
   140008897:	add    BYTE PTR [rcx],bl
   140008899:	push   0x710a00f1
   14000889e:	stc    
   14000889f:	add    BYTE PTR [rip+0x1e00f678],dl        # 0x15e017f1d
   1400088a5:	jl     0x1400088a5
   1400088a7:	add    BYTE PTR [rbx],ah
   1400088a9:	push   0xffffffffffffffef
   1400088ab:	add    BYTE PTR [rip+0x2500eb7f],dh        # 0x165017430
   1400088b1:	ins    DWORD PTR es:[rdi],dx
   1400088b2:	icebp  
   1400088b3:	add    BYTE PTR [rip+0x2a00f271],ah        # 0x16a017b2a
   1400088b9:	je     0x1400088ac
   1400088bb:	add    BYTE PTR [rip+0x2b00f379],ah        # 0x16b017c3a
   1400088c1:	jnp    0x1400088b6
   1400088c3:	add    BYTE PTR [rdi],dh
   1400088c5:	jnp    0x1400088bd
   1400088c7:	add    BYTE PTR [rbx],dl
   1400088c9:	(bad)  
   1400088ca:	test   DWORD PTR [rax],0xfd871c
   1400088d0:	sbb    eax,0x1e00ff93
   1400088d5:	xchg   edi,eax
   1400088d6:	inc    DWORD PTR [rax]
   1400088d8:	cmp    eax,0x2000e490
   1400088dd:	xor    edi,0x0
   1400088e0:	(bad)  
   1400088e1:	xor    ch,0x0
   1400088e4:	sub    DWORD PTR [rbp-0x75dcff0b],eax
   1400088ea:	test   BYTE PTR [rax],0x2a
   1400088ed:	mov    dh,dh
   1400088ef:	add    BYTE PTR [rbx],ch
   1400088f1:	cmp    edi,0x0
   1400088f4:	and    BYTE PTR [rbx-0x72d5ff01],cl
   1400088fa:	std    
   1400088fb:	add    BYTE PTR [rbx],bh
   1400088fd:	mov    dh,dh
   1400088ff:	add    BYTE PTR [rax],ah
   140008901:	nop
   140008902:	test   DWORD PTR [rax],0xf7902c
   140008908:	and    edx,DWORD PTR [rbp-0x6bd3ff02]
   14000890e:	clc    
   14000890f:	add    BYTE PTR [rdi],ch
   140008911:	cwde   
   140008912:	cld    
   140008913:	add    BYTE PTR [rip+0x5b00f694],dh        # 0x19b017fad
   140008919:	popf   
   14000891a:	fild   DWORD PTR [rax]
   14000891c:	ins    DWORD PTR es:[rdi],dx
   14000891d:	movabs ds:0x8c5400ec844500d3,al
   140008926:	loope  0x140008928
   140008928:	push   rdi
   140008929:	xchg   edx,eax
   14000892a:	loope  0x14000892c
   14000892c:	rex.WXB test r13,rsi
   14000892f:	add    BYTE PTR [rax-0x71],dl
   140008932:	cmc    
   140008933:	add    BYTE PTR [rax-0x67],al
   140008936:	test   DWORD PTR [rax],0xf59a54
   14000893c:	gs (bad) 
   14000893e:	in     eax,dx
   14000893f:	add    BYTE PTR [rax-0x5a],dl
   140008942:	cli    
   140008943:	add    BYTE PTR [rdi-0x5e],dh
   140008946:	out    0x0,al
   140008948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   14000894a:	test   DWORD PTR [rax],0xf6a875
   140008950:	jp     0x140008904
   140008952:	test   DWORD PTR [rax],0xb8a68c
   140008958:	scas   eax,DWORD PTR es:[rdi]
   140008959:	mov    bh,0xac
   14000895b:	add    bl,al
   14000895d:	scas   al,BYTE PTR es:[rdi]
   14000895e:	xchg   DWORD PTR [rax],eax
   140008960:	sar    BYTE PTR [rax-0x432aff7f],1
   140008966:	mov    al,BYTE PTR [rax]
   140008968:	retf   0x95b8
   14000896b:	add    dl,dl
   14000896d:	mov    ebp,0xbdc50097
   140008972:	stos   DWORD PTR es:[rdi],eax
   140008973:	add    dl,bl
   140008975:	rol    DWORD PTR [rdi-0x773c2300],0x0
   14000897c:	ffree  st(5)
   14000897e:	mov    es,WORD PTR [rax]
   140008980:	(bad)  
   140008981:	rcr    DWORD PTR [rax+rax*1+0x9cc5db],0xe0
   140008989:	rol    BYTE PTR [rcx-0x7a2f1200],0x0
   140008990:	loopne 0x14000895a
   140008992:	xchg   ecx,eax
   140008993:	add    cl,ah
   140008995:	retf   0x95
   140008998:	loope  0x140008965
   14000899a:	cdq    
   14000899b:	add    bl,ah
   14000899d:	int    0x9a
   14000899f:	add    ch,ah
   1400089a1:	iret   
   1400089a2:	sahf   
   1400089a3:	add    ah,bl
   1400089a5:	leave  
   1400089a6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400089a7:	add    ch,cl
   1400089a9:	(bad)  
   1400089aa:	mov    al,0x0
   1400089ac:	retf   0xbec7
   1400089af:	add    ah,bl
   1400089b1:	int    0xb1
   1400089b3:	add    ah,ah
   1400089b5:	retf   
   1400089b6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400089b7:	add    dl,ah
   1400089b9:	int    0xaa
   1400089bb:	add    ch,ah
   1400089bd:	shl    DWORD PTR [rdx-0x5b2c1700],1
   1400089c3:	add    bh,ah
   1400089c5:	shr    DWORD PTR [rbp-0x542a1700],1
   1400089cb:	add    ah,ch
   1400089cd:	xlat   BYTE PTR ds:[rbx]
   1400089ce:	test   eax,0xaed8ee00
   1400089d3:	add    al,ah
   1400089d5:	shl    BYTE PTR [rax-0x4e271600],1
   1400089db:	add    ch,ch
   1400089dd:	fidiv  DWORD PTR [rcx-0x4a251400]
   1400089e3:	add    bh,ch
   1400089e5:	fdiv   QWORD PTR [rbp-0x47221600]
   1400089eb:	add    ch,ch
   1400089ed:	fdivr  QWORD PTR [rcx-0x42211100]
   1400089f3:	add    cl,dh
   1400089f5:	fnsave [rax+rax*1+0xb8def0]
   1400089fc:	repnz loopne 0x1400089bc
   1400089ff:	add    ah,bh
   140008a01:	jrcxz  0x1400089bf
   140008a03:	add    BYTE PTR [rsi-0x63ff2f5a],al
   140008a09:	mov    ah,0xdb
   140008a0b:	add    BYTE PTR [rsi-0x72ff3948],ah
   140008a11:	test   eax,0xaa9000e4
   140008a16:	out    0x0,al
   140008a18:	mov    ?,WORD PTR [rbx-0x477aff1b]
   140008a1e:	clc    
   140008a1f:	add    BYTE PTR [rdx-0x4aff0841],bl
   140008a25:	ror    ah,0x0
   140008a28:	xchg   edx,eax
   140008a29:	(bad)  
   140008a2a:	cli    
   140008a2b:	add    BYTE PTR [rbp-0x5bff0836],ah
   140008a31:	sar    ch,cl
   140008a33:	add    BYTE PTR [rbx+rdx*8-0x363cff06],dh
   140008a3a:	retf   0xda00
   140008a3d:	(bad)  
   140008a3e:	retf   0xee00
   140008a41:	loop   0x140008a0b
   140008a43:	add    cl,dh
   140008a45:	loop   0x140008a09
   140008a47:	add    bl,dh
   140008a49:	in     al,0xc1
   140008a4b:	add    ch,dh
   140008a4d:	in     al,0xc1
   140008a4f:	add    al,dh
   140008a51:	jrcxz  0x140008a19
   140008a53:	add    dl,dh
   140008a55:	in     eax,0xc5
   140008a57:	add    ch,dh
   140008a59:	in     al,0xc6
   140008a5b:	add    al,bh
   140008a5d:	out    0xc2,al
   140008a5f:	add    dl,dh
   140008a61:	out    0xca,al
   140008a63:	add    bh,dh
   140008a65:	out    0xc8,eax
   140008a67:	add    ah,dh
   140008a69:	call   0x12af98b3c
   140008a6e:	leave  
   140008a6f:	add    cl,bh
   140008a71:	jmp    0x126f18b42
   140008a76:	rol    BYTE PTR [rax],cl
   140008a78:	repz (bad) 
   140008a7a:	(bad)  
   140008a7b:	add    ch,dh
   140008a7d:	in     al,dx
   140008a7e:	fadd   DWORD PTR [rax]
   140008a80:	ret    
   140008a81:	(bad)  
   140008a83:	add    cl,bl
   140008a85:	call   0x131f68b86
   140008a8a:	out    0x0,eax
   140008a8c:	clc    
   140008a8d:	lock loopne 0x140008a90
   140008a90:	out    0xf2,al
   140008a92:	inc    BYTE PTR [rax]
   140008a94:	icebp  
   140008a95:	idiv   ch
   140008a97:	add    ah,dh
   140008a99:	clc    
   140008a9a:	std    
   140008a9b:	add    bl,bh
   140008a9d:	cld    
   140008a9e:	inc    BYTE PTR [rax]
   140008aa0:	(bad)  
   140008aa1:	(bad)  
   140008aa2:	inc    BYTE PTR [rax]
	...
   140008c14:	(bad)  
   140008c15:	(bad)  
   140008c16:	inc    DWORD PTR [rax]
	...
   140008c94:	push   rbx
   140008c95:	push   rdx
   140008c96:	sbb    BYTE PTR [rsi],dl
   140008c98:	adc    eax,0x0
	...
   140008cb9:	add    BYTE PTR [rax],al
   140008cbb:	add    BYTE PTR [rdx+0x53],bl
   140008cbe:	push   rdx
   140008cbf:	(bad)  
   140008cc0:	(bad)  
   140008cc1:	(bad)  
   140008cc2:	sbb    bl,BYTE PTR [rbx]
   140008cc4:	pop    rax
   140008cc5:	pop    rdi
   140008cc6:	push   0x6a
   140008cc8:	js     0x140008cd0
   140008cca:	(bad)  
	...
   140008ce3:	add    BYTE PTR [rax],al
   140008ce5:	pop    rdx
   140008ce6:	push   rbx
   140008ce7:	push   rdx
   140008ce8:	(bad)  
   140008ce9:	adc    eax,0x585c1816
   140008cee:	pop    rdi
   140008cef:	(bad)  
   140008cf0:	push   0x62
   140008cf2:	(bad)  
   140008cf3:	imul   ebp,DWORD PTR [rcx+0x69],0x6756262
   140008cfa:	(bad)  
   140008cfb:	add    cl,BYTE PTR [rdx]
	...
   140008d0d:	add    BYTE PTR [rbp+0x53],dl
   140008d10:	push   rdx
   140008d11:	adc    eax,0x5c181613
   140008d16:	pop    rax
   140008d17:	pop    rdi
   140008d18:	(bad)  
   140008d19:	ins    BYTE PTR es:[rdi],dx
   140008d1a:	ins    BYTE PTR es:[rdi],dx
   140008d1b:	ins    BYTE PTR es:[rdi],dx
   140008d1c:	ins    BYTE PTR es:[rdi],dx
   140008d1d:	imul   ebp,DWORD PTR [rcx+0x69],0x5f626262
   140008d24:	pop    rdi
   140008d25:	pop    rdi
   140008d26:	(bad)  
   140008d27:	pop    rsi
   140008d28:	js     0x140008d30
   140008d2a:	pop    rsp
   140008d2b:	ja     0x140008d2e
   140008d2d:	add    eax,0x0
	...
   140008d3a:	add    BYTE PTR [rbx+0x14],dl
   140008d3d:	sbb    BYTE PTR [rbx],bl
   140008d3f:	pop    rax
   140008d40:	pop    rdi
   140008d41:	(bad)  
   140008d42:	push   0x6a
   140008d44:	ins    BYTE PTR es:[rdi],dx
   140008d45:	ins    BYTE PTR es:[rdi],dx
   140008d46:	ins    BYTE PTR es:[rdi],dx
   140008d47:	ins    BYTE PTR es:[rdi],dx
   140008d48:	push   0x62
   140008d4a:	(bad)  
   140008d4c:	(bad)  
   140008d4e:	(bad)  
   140008d50:	(bad)  
   140008d51:	pop    rdi
   140008d52:	(bad)
   140008d57:	pop    rsi
   140008d58:	js     0x140008d60
   140008d5a:	pop    rsp
   140008d5b:	js     0x140008d5e
   140008d5d:	add    al,0x3
   140008d5f:	or     al,BYTE PTR [rax]
	...
   140008d69:	add    BYTE PTR [rdi+0x58],bl
   140008d6c:	jb     0x140008de0
   140008d6e:	jne    0x140008de5
   140008d70:	jb     0x140008dde
   140008d72:	ins    BYTE PTR es:[rdi],dx
   140008d73:	push   0x62
   140008d75:	(bad)  
   140008d76:	ins    BYTE PTR es:[rdi],dx
   140008d77:	push   0x6e
   140008d79:	outs   dx,BYTE PTR ds:[rsi]
   140008d7a:	outs   dx,BYTE PTR ds:[rsi]
   140008d7b:	outs   dx,BYTE PTR ds:[rsi]
   140008d7c:	ins    BYTE PTR es:[rdi],dx
   140008d7d:	push   0x62
   140008d7f:	imul   esp,DWORD PTR [rdx+0x62],0x5f5f5e5e
   140008d86:	pop    rsi
   140008d87:	pop    rdi
   140008d88:	ja     0x140008d90
   140008d8a:	pop    rsp
   140008d8b:	js     0x140008d8e
   140008d8d:	adc    eax,0xa75
	...
   140008d9a:	adc    esi,DWORD PTR [rdx-0x68]
   140008d9d:	xchg   edx,eax
   140008d9e:	cwde   
   140008d9f:	ins    BYTE PTR es:[rdi],dx
   140008da0:	pop    rsi
   140008da1:	outs   dx,BYTE PTR ds:[rsi]
   140008da2:	jb     0x140008e16
   140008da4:	jns    0x140008e20
   140008da6:	outs   dx,DWORD PTR ds:[rsi]
   140008da7:	jge    0x140008e27
   140008da9:	rex.WRB jg 0x140008e28
   140008dac:	mov    DWORD PTR [rdx+0x6c],esi
   140008daf:	(bad)  
   140008db1:	imul   ebp,DWORD PTR [rcx+0x69],0x62626262
   140008db8:	js     0x140008dc2
   140008dba:	pop    rsp
   140008dbb:	ja     0x140008dbe
   140008dbd:	(bad)  
   140008dbe:	nop
   140008dbf:	add    al,0x0
	...
   140008dc9:	add    BYTE PTR [rbx],dl
   140008dcb:	jne    0x140008d61
   140008dcd:	xchg   edx,eax
   140008dce:	xchg   esp,eax
   140008dcf:	pop    rdi
   140008dd0:	(bad)  
   140008dd2:	jns    0x140008e4e
   140008dd4:	gs rex.WB
   140008dd6:	sub    BYTE PTR [r14],r12b
   140008dd9:	and    al,0x28
   140008ddb:	sub    BYTE PTR [rbp+0x49],al
   140008dde:	jl     0x140008e4c
   140008de0:	push   0x5f
   140008de2:	ins    BYTE PTR es:[rdi],dx
   140008de3:	push   0x69
   140008de5:	imul   ebp,DWORD PTR [rcx+0x62],0x725c0879
   140008dec:	add    al,0x1a
   140008dee:	nop
   140008def:	(bad)  
	...
   140008df8:	add    BYTE PTR [rax],al
   140008dfa:	adc    esi,DWORD PTR [rdx-0x6c]
   140008dfd:	xchg   edx,eax
   140008dfe:	xchg   esp,eax
   140008dff:	pop    rdi
   140008e00:	pop    rdi
   140008e01:	nop
   140008e02:	jb     0x140008e7f
   140008e04:	and    eax,0x26262626
   140008e09:	es es and al,0x24
   140008e0d:	and    al,0x2b
   140008e0f:	and    QWORD PTR [r10+0x5f],0x6a
   140008e14:	push   0x6a
   140008e16:	imul   ebp,DWORD PTR [rcx+0x79],0x4775c08
   140008e1d:	(bad)  
   140008e1e:	nop
   140008e1f:	(bad)  
	...
   140008e28:	add    BYTE PTR [rax],al
   140008e2a:	adc    esi,DWORD PTR [rbp-0x6c]
   140008e2d:	xchg   edx,eax
   140008e2e:	xchg   esp,eax
   140008e2f:	pop    rax
   140008e30:	push   0x6f
   140008e32:	sub    r12d,DWORD PTR [rdi]
   140008e35:	(bad)  
   140008e36:	(bad)  
   140008e37:	es es es es es es es and al,0x24
   140008e40:	rex.RB jl 0x140008eac
   140008e43:	sbb    ebp,DWORD PTR [rdx+rbp*2+0x6a]
   140008e47:	imul   edx,DWORD PTR [rax+0x4775c08],0x8901b
	...
   140008e59:	add    BYTE PTR [rbx],dl
   140008e5b:	jb     0x140008df1
   140008e5d:	xchg   edx,eax
   140008e5e:	xchg   edx,eax
   140008e5f:	outs   dx,BYTE PTR ds:[rsi]
   140008e60:	rex.XB sub BYTE PTR [r15d],spl
   140008e64:	(bad)  
   140008e65:	(bad)  
   140008e66:	and    BYTE PTR [rsi],ah
   140008e68:	(bad)  
   140008e69:	es es es (bad) 
   140008e6d:	es es es es rex.X jl 0x140008ee0
   140008e74:	pop    rax
   140008e75:	ins    BYTE PTR es:[rdi],dx
   140008e76:	push   0x69
   140008e78:	jns    0x140008e82
   140008e7a:	pop    rsp
   140008e7b:	ja     0x140008e83
   140008e7d:	sbb    DWORD PTR [rax+0x8],edx
   140008e83:	add    BYTE PTR [rax],al
   140008e85:	add    BYTE PTR [rax],al
   140008e87:	add    BYTE PTR [rax],al
   140008e89:	add    BYTE PTR [rbx],dl
   140008e8b:	jne    0x140008e21
   140008e8d:	xchg   edx,eax
   140008e8e:	xchg   esp,eax
   140008e8f:	jb     0x140008ed4
   140008e91:	sub    DWORD PTR [rdi],esp
   140008e93:	(bad)  
   140008e94:	(bad)  
   140008e95:	(bad)  
   140008e96:	rex.WRB (bad) 
   140008e98:	es es (bad) 
   140008e9b:	(bad)  
   140008e9c:	(bad)  
   140008e9d:	es es es es rex.RB sbb DWORD PTR es:[r15+0x62],0x69
   140008ea7:	imul   edi,DWORD PTR [rcx+0x8],0x1906775c
   140008eae:	nop
   140008eaf:	or     BYTE PTR [rax],al
	...
   140008eb9:	add    BYTE PTR [rbx],dl
   140008ebb:	jb     0x140008e51
   140008ebd:	xchg   esp,eax
   140008ebe:	xchg   ebp,eax
   140008ebf:	jge    0x140008eea
   140008ec1:	sub    DWORD PTR [rax],esp
   140008ec3:	rex.WRB (bad) 
   140008ec5:	(bad)  
   140008ec6:	call   FWORD PTR [rbx+0x27272746]
   140008ecc:	(bad)  
   140008ecd:	(bad)  
   140008ece:	(bad)  
   140008ecf:	(bad)  
   140008ed0:	es es es rex.RX
   140008ed4:	gs pop rax
   140008ed6:	push   0x69
   140008ed8:	nop
   140008ed9:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   140008edd:	sbb    dl,BYTE PTR [rax+0x8]
   140008ee3:	add    BYTE PTR [rax],al
   140008ee5:	add    BYTE PTR [rax],al
   140008ee7:	add    BYTE PTR [rax],al
   140008ee9:	add    BYTE PTR [rbx],dl
   140008eeb:	jne    0x140008e81
   140008eed:	xchg   esp,eax
   140008eee:	jne    0x140008f15
   140008ef0:	sub    DWORD PTR [rcx],ebp
   140008ef2:	(bad)  
   140008ef3:	(bad)  
   140008ef4:	(bad)  
   140008ef5:	(bad)  
   140008ef6:	(bad)  
   140008ef7:	(bad)  
   140008ef8:	inc    DWORD PTR [rdx+0x2727272b]
   140008efe:	(bad)  
   140008eff:	(bad)  
   140008f00:	(bad)  
   140008f01:	(bad)  
   140008f02:	(bad)  
   140008f03:	sub    BYTE PTR [rax+0x796a585b],al
   140008f09:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   140008f0d:	sbb    DWORD PTR [rsi+0x8],ecx
   140008f13:	add    BYTE PTR [rax],al
   140008f15:	add    BYTE PTR [rax],al
   140008f17:	add    BYTE PTR [rax],al
   140008f19:	add    BYTE PTR [rbx],dl
   140008f1b:	jne    0x140008eb5
   140008f1d:	nop
   140008f1e:	jnp    0x140008f49
   140008f20:	sub    DWORD PTR [rcx],ebp
   140008f22:	(bad)  
   140008f23:	test   edi,edi
   140008f25:	(bad)  
   140008f26:	(bad)  
   140008f27:	(bad)  
   140008f28:	(bad)  
   140008f29:	call   FWORD PTR [rbx+0x2729284c]
   140008f2f:	sub    BYTE PTR [rdi],ah
   140008f31:	(bad)  
   140008f32:	(bad)  
   140008f33:	sub    BYTE PTR [rbx+0x50],al
   140008f36:	pop    rax
   140008f37:	push   0xffffffffffffff90
   140008f39:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   140008f3d:	sbb    dl,BYTE PTR [rax+0x8]
   140008f43:	add    BYTE PTR [rax],al
   140008f45:	add    BYTE PTR [rax],al
   140008f47:	add    BYTE PTR [rax],al
   140008f49:	add    BYTE PTR [rbx],dl
   140008f4b:	js     0x140008ee6
   140008f4d:	js     0x140008f72
   140008f4f:	sub    dh,BYTE PTR [rdx]
   140008f51:	sub    bl,BYTE PTR [rdi]
   140008f53:	test   edi,edi
   140008f55:	(bad)  
   140008f56:	(bad)  
   140008f57:	(bad)  
   140008f58:	(bad)  
   140008f59:	(bad)  
   140008f5a:	(bad)  
   140008f5b:	inc    DWORD PTR [rdx+0x27282945]
   140008f61:	sub    BYTE PTR [rax],ch
   140008f63:	sub    BYTE PTR [rip+0x7962537c],ah        # 0x1b962e2e5
   140008f69:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   140008f6d:	sbb    dl,BYTE PTR [rax+0x8]
   140008f73:	add    BYTE PTR [rax],al
   140008f75:	add    BYTE PTR [rax],al
   140008f77:	add    BYTE PTR [rax],al
   140008f79:	add    BYTE PTR [rbx],dl
   140008f7b:	jbe    0x140008f16
   140008f7d:	and    esi,DWORD PTR gs:[rdx]
   140008f80:	xor    dh,BYTE PTR [rdx]
   140008f82:	(bad)  
   140008f83:	test   edi,edi
   140008f85:	(bad)  
   140008f86:	(bad)  
   140008f87:	(bad)  
   140008f88:	(bad)  
   140008f89:	(bad)  
   140008f8a:	(bad)  
   140008f8b:	(bad)  
   140008f8c:	call   FWORD PTR [rdi+0x272a2b4c]
   140008f92:	(bad)  
   140008f93:	sub    DWORD PTR [rax],ebp
   140008f95:	rex.WXB push r13
   140008f97:	pop    rax
   140008f98:	nop
   140008f99:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   140008f9d:	sbb    dl,BYTE PTR [rax+0x8]
   140008fa3:	add    BYTE PTR [rax],al
   140008fa5:	add    BYTE PTR [rax],al
   140008fa7:	add    BYTE PTR [rax],al
   140008fa9:	add    BYTE PTR [rbx],dl
   140008fab:	nop
   140008fac:	xchg   esp,eax
   140008fad:	jnp    0x140008fd2
   140008faf:	xor    dh,BYTE PTR [rdx]
   140008fb1:	xor    bl,BYTE PTR [rdi]
   140008fb3:	test   edi,edi
   140008fb5:	(bad)  
   140008fb6:	(bad)  
   140008fb7:	(bad)  
   140008fb8:	(bad)  
   140008fb9:	(bad)  
   140008fba:	(bad)  
   140008fbb:	(bad)  
   140008fbc:	(bad)  
   140008fbd:	(bad)  
   140008fbe:	inc    DWORD PTR [rdi+0x272a2b46]
   140008fc4:	(bad)  
   140008fc5:	rex.RX
   140008fc6:	sbb    edi,DWORD PTR fs:[rcx+0x8]
   140008fca:	pop    rsp
   140008fcb:	ja     0x140008fd3
   140008fcd:	sbb    dl,BYTE PTR [rax+0x8]
   140008fd3:	add    BYTE PTR [rax],al
   140008fd5:	add    BYTE PTR [rax],al
   140008fd7:	add    BYTE PTR [rax],al
   140008fd9:	add    BYTE PTR [rbx],dl
   140008fdb:	mov    ss,WORD PTR [rbp+0x32333246]
   140008fe1:	xor    ah,BYTE PTR [rcx]
   140008fe3:	test   edi,edi
   140008fe5:	(bad)  
   140008fe6:	(bad)  
   140008fe7:	(bad)  
   140008fe8:	(bad)  
   140008fe9:	(bad)  
   140008fea:	(bad)  
   140008feb:	(bad)  
   140008fec:	(bad)  
   140008fed:	(bad)  
   140008fee:	(bad)  
   140008fef:	jmp    QWORD PTR [rax+0x2928394c]
   140008ff5:	mov    BYTE PTR ss:[rax],bl
   140008ff8:	nop
   140008ff9:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   140008ffd:	sbb    cl,BYTE PTR [rsi+0x8]
   140009003:	add    BYTE PTR [rax],al
   140009005:	add    BYTE PTR [rax],al
   140009007:	add    BYTE PTR [rax],al
   140009009:	add    BYTE PTR [rbx],dl
   14000900b:	nop
   14000900c:	nop
   14000900d:	xor    esi,DWORD PTR ss:[rbx]
   140009010:	xor    dh,BYTE PTR [rbx]
   140009012:	and    al,BYTE PTR [rbp-0x1]
   140009018:	(bad)  
   140009019:	(bad)  
   14000901a:	(bad)  
   14000901b:	(bad)  
   14000901c:	(bad)  
   14000901d:	(bad)  
   14000901e:	(bad)  
   14000901f:	(bad)  
   140009020:	(bad)  
   140009021:	dec    DWORD PTR [rax+0x2a]
   140009024:	sub    DWORD PTR [rsi],esi
   140009026:	sbb    DWORD PTR [rax],0xffffff90
   140009029:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000902d:	sbb    dl,BYTE PTR [rax+0x8]
   140009033:	add    BYTE PTR [rax],al
   140009035:	add    BYTE PTR [rax],al
   140009037:	add    BYTE PTR [rax],al
   140009039:	add    BYTE PTR [rbx],dl
   14000903b:	xchg   edx,eax
   14000903c:	nop
   14000903d:	xor    esi,DWORD PTR ss:[rbx]
   140009040:	xor    esi,DWORD PTR [rbx]
   140009042:	and    al,BYTE PTR [rbp-0x1]
   140009048:	(bad)  
   140009049:	(bad)  
   14000904a:	(bad)  
   14000904b:	(bad)  
   14000904c:	(bad)  
   14000904d:	(bad)  
   14000904e:	(bad)  
   14000904f:	(bad)  
   140009050:	(bad)  
   140009051:	dec    DWORD PTR [rbp+0x32]
   140009054:	sub    DWORD PTR [rbx],esp
   140009056:	sbb    DWORD PTR [rax],0x79
   140009059:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000905d:	sbb    dl,BYTE PTR [rax+0x8]
   140009063:	add    BYTE PTR [rax],al
   140009065:	add    BYTE PTR [rax],al
   140009067:	add    BYTE PTR [rax],al
   140009069:	add    BYTE PTR [rbx],dl
   14000906b:	xchg   edx,eax
   14000906c:	nop
   14000906d:	xor    esi,DWORD PTR ss:[rip+0xffffffff85223333]        # 0xc522c3a7
   140009074:	(bad)  
   140009075:	(bad)  
   140009076:	(bad)  
   140009077:	(bad)  
   140009078:	(bad)  
   140009079:	(bad)  
   14000907a:	(bad)  
   14000907b:	(bad)  
   14000907c:	(bad)  
   14000907d:	(bad)  
   14000907e:	(bad)  
   14000907f:	(bad)  
   140009080:	inc    DWORD PTR [rdi+0x36293248]
   140009086:	mov    BYTE PTR [rsi],dl
   140009088:	nop
   140009089:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000908d:	sbb    dl,BYTE PTR [rax+0x8]
   140009093:	add    BYTE PTR [rax],al
   140009095:	add    BYTE PTR [rax],al
   140009097:	add    BYTE PTR [rax],al
   140009099:	add    BYTE PTR [rbx],dl
   14000909b:	xchg   edx,eax
   14000909c:	xchg   edx,eax
   14000909d:	cmp    DWORD PTR [rip+0x22353335],esi        # 0x16235c3d8
   1400090a3:	xchg   edi,edi
   1400090a5:	(bad)  
   1400090a6:	(bad)  
   1400090a7:	(bad)  
   1400090a8:	(bad)  
   1400090a9:	(bad)  
   1400090aa:	(bad)  
   1400090ab:	(bad)  
   1400090ac:	(bad)  
   1400090ad:	(bad)  
   1400090ae:	call   FWORD PTR [rdi+0x32394881]
   1400090b4:	sub    DWORD PTR [rdi+0x65],eax
   1400090b7:	adc    edi,DWORD PTR [rcx+0x8]
   1400090ba:	pop    rsp
   1400090bb:	jb     0x1400090c3
   1400090bd:	sbb    dl,BYTE PTR [rax+0x8]
   1400090c3:	add    BYTE PTR [rax],al
   1400090c5:	add    BYTE PTR [rax],al
   1400090c7:	add    BYTE PTR [rax],al
   1400090c9:	add    BYTE PTR [rbx],dl
   1400090cb:	xchg   edx,eax
   1400090cc:	xchg   edi,eax
   1400090cd:	jnp    0x140009106
   1400090cf:	xor    eax,0x872c3335
   1400090d4:	(bad)  
   1400090d5:	(bad)  
   1400090d6:	(bad)  
   1400090d7:	(bad)  
   1400090d8:	(bad)  
   1400090d9:	(bad)  
   1400090da:	(bad)  
   1400090db:	(bad)  
   1400090dc:	(bad)  
   1400090dd:	inc    DWORD PTR [rsi+0x32323948]
   1400090e3:	xor    ah,BYTE PTR [rdx]
   1400090e5:	rex.WRB push r13
   1400090e7:	sbb    BYTE PTR [rax+0x6775c08],dl
   1400090ed:	sbb    cl,BYTE PTR [rsi+0x8]
   1400090f3:	add    BYTE PTR [rax],al
   1400090f5:	add    BYTE PTR [rax],al
   1400090f7:	add    BYTE PTR [rax],al
   1400090f9:	add    BYTE PTR [rbx],dl
   1400090fb:	xchg   edx,eax
   1400090fc:	cdq    
   1400090fd:	push   rsi
   1400090fe:	(bad)  
   1400090ff:	xor    eax,0x872c3535
   140009104:	(bad)  
   140009105:	(bad)  
   140009106:	(bad)  
   140009107:	(bad)  
   140009108:	(bad)  
   140009109:	(bad)  
   14000910a:	(bad)  
   14000910b:	call   FWORD PTR [rsi+0x32353981]
   140009111:	xor    esi,DWORD PTR [rdx]
   140009113:	xor    esp,DWORD PTR [rdx]
   140009115:	adc    BYTE PTR [rdx+0x5f],0x79
   140009119:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000911d:	sbb    dl,BYTE PTR [rax+0x8]
   140009123:	add    BYTE PTR [rax],al
   140009125:	add    BYTE PTR [rax],al
   140009127:	add    BYTE PTR [rax],al
   140009129:	add    BYTE PTR [rbx],dl
   14000912b:	xchg   edx,eax
   14000912c:	popf   
   14000912d:	outs   dx,DWORD PTR ds:[rsi]
   14000912e:	(bad)  
   14000912f:	xor    eax,0x872c353b
   140009134:	(bad)  
   140009135:	(bad)  
   140009136:	(bad)  
   140009137:	(bad)  
   140009138:	(bad)  
   140009139:	(bad)  
   14000913a:	call   FWORD PTR [rdx+0x32333947]
   140009140:	xor    dh,BYTE PTR [rip+0xffffffff83373233]        # 0xc337c379
   140009146:	punpckldq mm2,DWORD PTR [rax+0x6775c08]
   14000914d:	sbb    dl,BYTE PTR [rax+0x8]
   140009153:	add    BYTE PTR [rax],al
   140009155:	add    BYTE PTR [rax],al
   140009157:	add    BYTE PTR [rax],al
   140009159:	add    BYTE PTR [rbx],dl
   14000915b:	xchg   edx,eax
   14000915c:	popf   
   14000915d:	xchg   edx,eax
   14000915e:	cmp    rdi,QWORD PTR [r11]
   140009161:	cmp    ebp,DWORD PTR [rdi+rax*4]
   140009164:	(bad)  
   140009165:	(bad)  
   140009166:	(bad)  
   140009167:	(bad)  
   140009168:	jmp    QWORD PTR [rax+0x34393f4e]
   14000916e:	xor    esi,DWORD PTR [rip+0x32333335]        # 0x17233c4a9
   140009174:	rex.WR push rsp
   140009176:	(bad)  
   140009177:	push   0x7a
   140009179:	or     BYTE PTR [rax+0x77],bl
   14000917c:	(bad)  
   14000917d:	sbb    dl,BYTE PTR [rax+0x8]
   140009183:	add    BYTE PTR [rax],al
   140009185:	add    BYTE PTR [rax],al
   140009187:	add    BYTE PTR [rax],al
   140009189:	add    BYTE PTR [rbx],dl
   14000918b:	nop
   14000918c:	cdq    
   14000918d:	cwde   
   14000918e:	push   rsi
   14000918f:	cmp    edi,DWORD PTR cs:[rbx]
   140009192:	xor    al,BYTE PTR [rdi-0x1]
   140009198:	xchg   DWORD PTR [rdx+0x3b],ecx
   14000919b:	xor    eax,0x35353535
   1400091a0:	xor    esi,DWORD PTR [rip+0x16833735]        # 0x15683c8db
   1400091a6:	(bad)  
   1400091a7:	push   0xffffffffffffff91
   1400091a9:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   1400091ad:	sbb    dl,BYTE PTR [rax+0x8]
   1400091b3:	add    BYTE PTR [rax],al
   1400091b5:	add    BYTE PTR [rax],al
   1400091b7:	add    BYTE PTR [rax],al
   1400091b9:	add    BYTE PTR [rdx],dl
   1400091bb:	mov    bl,BYTE PTR [rcx+0x3c407899]
   1400091c1:	cmp    ebp,DWORD PTR [rax*4-0x7b5f0001]
   1400091c8:	(bad)  
   1400091c9:	(bad)  
   1400091ca:	xor    eax,0x35353535
   1400091cf:	xor    eax,0x4c323535
   1400091d4:	pop    rbx
   1400091d5:	sbb    ebp,DWORD PTR [rsi+rbp*2-0x70]
   1400091d9:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   1400091dd:	sbb    dl,BYTE PTR [rax+0x8]
   1400091e3:	add    BYTE PTR [rax],al
   1400091e5:	add    BYTE PTR [rax],al
   1400091e7:	add    BYTE PTR [rax],al
   1400091e9:	add    BYTE PTR [rdx],dl
   1400091eb:	mov    ds,WORD PTR [rcx+0x3c639999]
   1400091f1:	cmp    eax,0x8687473a
   1400091f6:	rex.WX (bad) 
   1400091f8:	cmp    esi,DWORD PTR [rbx+rdi*1]
   1400091fb:	cmp    esi,DWORD PTR [rip+0x3535353b]        # 0x17535c73c
   140009201:	xor    al,0x47
   140009203:	sbb    BYTE PTR gs:[rdx+0x6d],ch
   140009207:	ins    DWORD PTR es:[rdi],dx
   140009208:	jp     0x140009212
   14000920a:	pop    rax
   14000920b:	ja     0x140009213
   14000920d:	sbb    dl,BYTE PTR [rax+0x8]
   140009213:	add    BYTE PTR [rax],al
   140009215:	add    BYTE PTR [rax],al
   140009217:	add    BYTE PTR [rax],al
   140009219:	add    BYTE PTR [rdx],dl
   14000921b:	mov    bl,BYTE PTR [rcx+0x516c9999]
   140009221:	cs cmp eax,0x3a342d3a
   140009227:	cmp    edi,DWORD PTR [rbx]
   140009229:	cmp    edi,DWORD PTR [rbx]
   14000922b:	cmp    edi,DWORD PTR [rbx]
   14000922d:	cmp    edi,DWORD PTR [rbx]
   14000922f:	cmp    esi,DWORD PTR [rip+0x6a58833d]        # 0x1aa591572
   140009235:	ja     0x1400092a5
   140009237:	ins    DWORD PTR es:[rdi],dx
   140009238:	nop
   140009239:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000923d:	sbb    dl,BYTE PTR [rax+0x8]
   140009243:	add    BYTE PTR [rax],al
   140009245:	add    BYTE PTR [rax],al
   140009247:	add    BYTE PTR [rax],al
   140009249:	add    BYTE PTR [rip+0xffffffff99989990],cl        # 0xd9992bdf
   14000924f:	jb     0x1400092b3
   140009251:	push   rax
   140009252:	cmp    al,0x3e
   140009254:	cmp    eax,0x3d3d3d3d
   140009259:	cmp    edi,DWORD PTR [rbx]
   14000925b:	cmp    edi,DWORD PTR [rbx]
   14000925d:	cmp    edi,DWORD PTR [rbx]
   14000925f:	cmp    bh,BYTE PTR [rsi]
   140009261:	and    DWORD PTR [rdx+0x69],0x78
   140009265:	ja     0x1400092d9
   140009267:	outs   dx,BYTE PTR ds:[rsi]
   140009268:	jp     0x140009272
   14000926a:	pop    rsp
   14000926b:	ja     0x140009273
   14000926d:	sbb    dl,BYTE PTR [rax+0x8]
   140009273:	add    BYTE PTR [rax],al
   140009275:	add    BYTE PTR [rax],al
   140009277:	add    BYTE PTR [rax],al
   140009279:	add    BYTE PTR [rip+0xffffffff9898998e],cl        # 0xd8992c0d
   14000927f:	ins    BYTE PTR es:[rdi],dx
   140009280:	jb     0x1400092f4
   140009282:	push   rsp
   140009283:	(bad)  
   140009284:	cs cmp eax,0x3d3d3f3d
   14000928a:	cmp    eax,0x2e3b3d3b
   14000928f:	rex.RXB
   140009290:	gs (bad) 
   140009292:	ins    BYTE PTR es:[rdi],dx
   140009293:	jns    0x14000930d
   140009295:	ja     0x14000930e
   140009297:	outs   dx,BYTE PTR ds:[rsi]
   140009298:	xchg   esp,eax
   140009299:	or     BYTE PTR [rbx],bl
   14000929b:	outs   dx,BYTE PTR ds:[rsi]
   14000929c:	(bad)  
   14000929d:	sbb    dl,BYTE PTR [rax+0x8]
   1400092a3:	add    BYTE PTR [rax],al
   1400092a5:	add    BYTE PTR [rax],al
   1400092a7:	add    BYTE PTR [rax],al
   1400092a9:	add    BYTE PTR [rip+0xffffffff9898998a],cl        # 0xd8992c39
   1400092af:	ins    BYTE PTR es:[rdi],dx
   1400092b0:	ins    BYTE PTR es:[rdi],dx
   1400092b1:	xchg   esp,eax
   1400092b2:	jne    0x140009316
   1400092b4:	rex.WRXB (bad) 
   1400092b6:	cs (bad) 
   1400092b8:	cmp    al,0x3c
   1400092ba:	cmp    al,0x2e
   1400092bc:	cs cmp al,0x7c
   1400092bf:	push   0x7879726a
   1400092c4:	js     0x14000933d
   1400092c6:	jb     0x14000933a
   1400092c8:	xchg   ebp,eax
   1400092c9:	or     BYTE PTR [rbx],bl
   1400092cb:	outs   dx,BYTE PTR ds:[rsi]
   1400092cc:	(bad)  
   1400092cd:	sbb    dl,BYTE PTR [rax+0x8]
   1400092d3:	add    BYTE PTR [rax],al
   1400092d5:	add    BYTE PTR [rax],al
   1400092d7:	add    BYTE PTR [rax],al
   1400092d9:	add    BYTE PTR [rip+0xffffffff9898988a],cl        # 0xd8992b69
   1400092df:	ins    BYTE PTR es:[rdi],dx
   1400092e0:	ins    BYTE PTR es:[rdi],dx
   1400092e1:	xchg   edx,eax
   1400092e2:	xchg   edx,eax
   1400092e3:	jns    0x14000934e
   1400092e5:	ins    BYTE PTR es:[rdi],dx
   1400092e6:	push   rsi
   1400092e7:	rex.WRXB
   1400092e8:	xor    BYTE PTR [r9+0x4f],al
   1400092ec:	push   rsi
   1400092ed:	ins    BYTE PTR es:[rdi],dx
   1400092ee:	jb     0x140009362
   1400092f0:	nop
   1400092f1:	jns    0x14000936c
   1400092f3:	jns    0x14000936d
   1400092f5:	js     0x140009370
   1400092f7:	ja     0x14000928e
   1400092f9:	or     BYTE PTR [rdx],bl
   1400092fb:	ins    BYTE PTR es:[rdi],dx
   1400092fc:	(bad)  
   1400092fd:	sbb    dl,BYTE PTR [rax+0xc]
   140009303:	add    BYTE PTR [rax],al
   140009305:	add    BYTE PTR [rax],al
   140009307:	add    BYTE PTR [rax],al
   140009309:	add    BYTE PTR [rip+0xffffffff98989890],cl        # 0xd8992b9f
   14000930f:	ins    BYTE PTR es:[rdi],dx
   140009310:	ins    BYTE PTR es:[rdi],dx
   140009311:	xchg   edx,eax
   140009312:	nop
   140009313:	nop
   140009314:	outs   dx,BYTE PTR ds:[rsi]
   140009315:	jne    0x140009390
   140009317:	jne    0x14000938e
   140009319:	js     0x140009393
   14000931b:	jns    0x140009395
   14000931d:	js     0x1400092af
   14000931f:	jns    0x14000939a
   140009321:	jns    0x14000939c
   140009323:	jns    0x14000939e
   140009325:	jns    0x14000939e
   140009327:	jns    0x1400092be
   140009329:	or     BYTE PTR [rsi],dl
   14000932b:	push   0x6
   14000932d:	adc    al,0x5d
   14000932f:	adc    DWORD PTR [rax],eax
	...
   140009339:	add    BYTE PTR [rsi],dl
   14000933b:	mov    ds,WORD PTR [rbp-0x67666363]
   140009341:	cdq    
   140009342:	cdq    
   140009343:	cdq    
   140009344:	cdq    
   140009345:	xchg   esp,eax
   140009346:	xchg   esp,eax
   140009347:	xchg   esp,eax
   140009348:	xchg   esp,eax
   140009349:	xchg   esp,eax
   14000934a:	xchg   esp,eax
   14000934b:	xchg   edx,eax
   14000934c:	xchg   edx,eax
   14000934d:	xchg   edx,eax
   14000934e:	nop
   14000934f:	xchg   edx,eax
   140009350:	nop
   140009351:	nop
   140009352:	jns    0x1400092e4
   140009354:	jns    0x1400093cf
   140009356:	jne    0x1400093cf
   140009358:	xchg   ebp,eax
   140009359:	or     al,0x1b
   14000935b:	addr32 (bad) 
   14000935d:	movups xmm3,XMMWORD PTR [rdx]
	...
   140009368:	add    BYTE PTR [rax],al
   14000936a:	pop    rax
   14000936b:	sbb    ebx,DWORD PTR [rax]
   14000936d:	sbb    bl,BYTE PTR [rbx]
   14000936f:	sbb    DWORD PTR [rbx],ebx
   140009371:	pop    rsp
   140009372:	pop    rax
   140009373:	pop    rax
   140009374:	pop    rax
   140009375:	pop    rdi
   140009376:	pop    rdi
   140009377:	(bad)  
   140009379:	imul   ebp,DWORD PTR [rcx+0x6c],0x72727277
   140009380:	jne    0x140009312
   140009382:	mov    cs,WORD PTR [rsi-0x6b676e6c]
   140009388:	xchg   edx,eax
   140009389:	adc    DWORD PTR [rsp+rcx*1],ecx
	...
   1400093a4:	add    BYTE PTR [rax],al
   1400093a6:	(bad)  
   1400093a7:	pop    rdi
   1400093a8:	pop    rdi
   1400093a9:	pop    rdi
   1400093aa:	pop    rdi
   1400093ab:	pop    rcx
   1400093ac:	pop    rcx
   1400093ad:	sbb    ebx,DWORD PTR [rdx]
   1400093af:	sbb    BYTE PTR [rax],bl
   1400093b1:	adc    al,0x14
   1400093b3:	adc    edx,DWORD PTR [rdx]
   1400093b5:	adc    ecx,DWORD PTR [rsi]
   1400093b7:	or     eax,0x1a0f
	...
   140009518:	(bad)  
   140009519:	(bad)  
   14000951a:	(bad)  
   14000951b:	(bad)  
   14000951c:	(bad)  
   14000951d:	inc    DWORD PTR [rax]
   14000951f:	add    bh,bh
   140009521:	(bad)  
   140009522:	(bad)  
   140009523:	(bad)  
   140009524:	(bad)  
   140009525:	inc    DWORD PTR [rax]
   140009527:	add    bh,bh
   140009529:	(bad)  
   14000952a:	push   rax
   14000952c:	jg     0x14000952d
   14000952e:	add    BYTE PTR [rax],al
   140009530:	(bad)  
   140009531:	push   rax
   140009533:	add    BYTE PTR [rdi],bl
   140009535:	inc    DWORD PTR [rax]
   140009537:	add    bh,bh
   140009539:	clc    
   14000953a:	add    BYTE PTR [rax],al
   14000953c:	(bad)  
   14000953d:	inc    DWORD PTR [rax]
   14000953f:	add    ah,bh
   140009541:	add    BYTE PTR [rax],al
   140009543:	add    BYTE PTR [rbx],al
   140009545:	inc    DWORD PTR [rax]
   140009547:	add    al,ah
   140009549:	add    BYTE PTR [rax],al
   14000954b:	add    BYTE PTR [rax],al
   14000954d:	inc    DWORD PTR [rax]
   14000954f:	add    al,al
   140009551:	add    BYTE PTR [rax],al
   140009553:	add    BYTE PTR [rax],al
   140009555:	inc    DWORD PTR [rax]
   140009557:	add    al,al
   140009559:	add    BYTE PTR [rax],al
   14000955b:	add    BYTE PTR [rax],al
   14000955d:	inc    DWORD PTR [rax]
   14000955f:	add    al,al
   140009561:	add    BYTE PTR [rax],al
   140009563:	add    BYTE PTR [rax],al
   140009565:	inc    DWORD PTR [rax]
   140009567:	add    al,al
   140009569:	add    BYTE PTR [rax],al
   14000956b:	add    BYTE PTR [rax],al
   14000956d:	inc    DWORD PTR [rax]
   14000956f:	add    al,al
   140009571:	add    BYTE PTR [rax],al
   140009573:	add    BYTE PTR [rax],al
   140009575:	inc    DWORD PTR [rax]
   140009577:	add    al,al
   140009579:	add    BYTE PTR [rax],al
   14000957b:	add    BYTE PTR [rax],al
   14000957d:	inc    DWORD PTR [rax]
   14000957f:	add    al,al
   140009581:	add    BYTE PTR [rax],al
   140009583:	add    BYTE PTR [rax],al
   140009585:	inc    DWORD PTR [rax]
   140009587:	add    al,al
   140009589:	add    BYTE PTR [rax],al
   14000958b:	add    BYTE PTR [rax],al
   14000958d:	inc    DWORD PTR [rax]
   14000958f:	add    al,al
   140009591:	add    BYTE PTR [rax],al
   140009593:	add    BYTE PTR [rax],al
   140009595:	inc    DWORD PTR [rax]
   140009597:	add    al,al
   140009599:	add    BYTE PTR [rax],al
   14000959b:	add    BYTE PTR [rax],al
   14000959d:	inc    DWORD PTR [rax]
   14000959f:	add    al,al
   1400095a1:	add    BYTE PTR [rax],al
   1400095a3:	add    BYTE PTR [rax],al
   1400095a5:	inc    DWORD PTR [rax]
   1400095a7:	add    al,al
   1400095a9:	add    BYTE PTR [rax],al
   1400095ab:	add    BYTE PTR [rax],al
   1400095ad:	inc    DWORD PTR [rax]
   1400095af:	add    al,al
   1400095b1:	add    BYTE PTR [rax],al
   1400095b3:	add    BYTE PTR [rax],al
   1400095b5:	inc    DWORD PTR [rax]
   1400095b7:	add    al,al
   1400095b9:	add    BYTE PTR [rax],al
   1400095bb:	add    BYTE PTR [rax],al
   1400095bd:	inc    DWORD PTR [rax]
   1400095bf:	add    al,al
   1400095c1:	add    BYTE PTR [rax],al
   1400095c3:	add    BYTE PTR [rax],al
   1400095c5:	inc    DWORD PTR [rax]
   1400095c7:	add    al,al
   1400095c9:	add    BYTE PTR [rax],al
   1400095cb:	add    BYTE PTR [rax],al
   1400095cd:	inc    DWORD PTR [rax]
   1400095cf:	add    al,al
   1400095d1:	add    BYTE PTR [rax],al
   1400095d3:	add    BYTE PTR [rax],al
   1400095d5:	inc    DWORD PTR [rax]
   1400095d7:	add    al,al
   1400095d9:	add    BYTE PTR [rax],al
   1400095db:	add    BYTE PTR [rax],al
   1400095dd:	inc    DWORD PTR [rax]
   1400095df:	add    al,al
   1400095e1:	add    BYTE PTR [rax],al
   1400095e3:	add    BYTE PTR [rax],al
   1400095e5:	inc    DWORD PTR [rax]
   1400095e7:	add    al,al
   1400095e9:	add    BYTE PTR [rax],al
   1400095eb:	add    BYTE PTR [rax],al
   1400095ed:	inc    DWORD PTR [rax]
   1400095ef:	add    al,al
   1400095f1:	add    BYTE PTR [rax],al
   1400095f3:	add    BYTE PTR [rax],al
   1400095f5:	inc    DWORD PTR [rax]
   1400095f7:	add    al,al
   1400095f9:	add    BYTE PTR [rax],al
   1400095fb:	add    BYTE PTR [rax],al
   1400095fd:	inc    DWORD PTR [rax]
   1400095ff:	add    al,al
   140009601:	add    BYTE PTR [rax],al
   140009603:	add    BYTE PTR [rax],al
   140009605:	inc    DWORD PTR [rax]
   140009607:	add    al,al
   140009609:	add    BYTE PTR [rax],al
   14000960b:	add    BYTE PTR [rax],al
   14000960d:	inc    DWORD PTR [rax]
   14000960f:	add    al,al
   140009611:	add    BYTE PTR [rax],al
   140009613:	add    BYTE PTR [rax],al
   140009615:	inc    DWORD PTR [rax]
   140009617:	add    al,al
   140009619:	add    BYTE PTR [rax],al
   14000961b:	add    BYTE PTR [rax],al
   14000961d:	inc    DWORD PTR [rax]
   14000961f:	add    al,al
   140009621:	add    BYTE PTR [rax],al
   140009623:	add    BYTE PTR [rax],al
   140009625:	inc    DWORD PTR [rax]
   140009627:	add    al,al
   140009629:	add    BYTE PTR [rax],al
   14000962b:	add    BYTE PTR [rax],al
   14000962d:	inc    DWORD PTR [rax]
   14000962f:	add    al,al
   140009631:	add    BYTE PTR [rax],al
   140009633:	add    BYTE PTR [rax],al
   140009635:	inc    DWORD PTR [rax]
   140009637:	add    al,al
   140009639:	add    BYTE PTR [rax],al
   14000963b:	add    BYTE PTR [rax],al
   14000963d:	inc    DWORD PTR [rax]
   14000963f:	add    al,al
   140009641:	add    BYTE PTR [rax],al
   140009643:	add    BYTE PTR [rax],al
   140009645:	inc    DWORD PTR [rax]
   140009647:	add    al,al
   140009649:	add    BYTE PTR [rax],al
   14000964b:	add    BYTE PTR [rax],al
   14000964d:	inc    DWORD PTR [rax]
   14000964f:	add    al,al
   140009651:	add    BYTE PTR [rax],al
   140009653:	add    BYTE PTR [rdi],cl
   140009655:	inc    DWORD PTR [rax]
   140009657:	add    bh,bh
   140009659:	cld    
   14000965a:	add    BYTE PTR [rax],al
   14000965c:	(bad)  
   14000965d:	inc    DWORD PTR [rax]
   14000965f:	add    bh,bh
   140009661:	(bad)  
   140009662:	(bad)  
   140009663:	(bad)  
   140009664:	(bad)  
   140009665:	inc    DWORD PTR [rax]
   140009667:	add    bh,bh
   140009669:	(bad)  
   14000966a:	(bad)  
   14000966b:	(bad)  
   14000966c:	(bad)  
   14000966d:	inc    DWORD PTR [rax]
   14000966f:	add    bh,bh
   140009671:	(bad)  
   140009672:	(bad)  
   140009673:	(bad)  
   140009674:	(bad)  
   140009675:	inc    DWORD PTR [rax]
   140009677:	add    bh,bh
   140009679:	(bad)  
   14000967a:	(bad)  
   14000967b:	(bad)  
   14000967c:	(bad)  
   14000967d:	inc    DWORD PTR [rax]
   14000967f:	add    bh,bh
   140009681:	(bad)  
   140009682:	(bad)  
   140009683:	(bad)  
   140009684:	(bad)  
   140009685:	inc    DWORD PTR [rax]
   140009687:	add    bh,bh
   140009689:	(bad)  
   14000968a:	(bad)  
   14000968b:	(bad)  
   14000968c:	(bad)  
   14000968d:	inc    DWORD PTR [rax]
   14000968f:	add    bh,bh
   140009691:	(bad)  
   140009692:	(bad)  
   140009693:	(bad)  
   140009694:	(bad)  
   140009695:	inc    DWORD PTR [rax]
   140009697:	add    BYTE PTR [rax],ch
   140009699:	add    BYTE PTR [rax],al
   14000969b:	add    BYTE PTR [rax],ah
   14000969d:	add    BYTE PTR [rax],al
   14000969f:	add    BYTE PTR [rax+0x0],al
   1400096a2:	add    BYTE PTR [rax],al
   1400096a4:	add    DWORD PTR [rax],eax
   1400096a6:	or     BYTE PTR [rax],al
   1400096a8:	add    BYTE PTR [rax],al
   1400096aa:	add    BYTE PTR [rax],al
   1400096ac:	add    BYTE PTR [rax+rax*1],al
	...
   1400096b7:	add    BYTE PTR [rax],al
   1400096b9:	add    DWORD PTR [rax],eax
   1400096bb:	add    BYTE PTR [rax],al
   1400096bd:	add    DWORD PTR [rax],eax
   1400096bf:	add    BYTE PTR [rax],al
   1400096c1:	add    BYTE PTR [rax],al
   1400096c3:	add    BYTE PTR [rsi-0x4cffb067],bh
   1400096c9:	nop
   1400096ca:	push   rdi
   1400096cb:	add    BYTE PTR [rsi-0x42ffa36d],dh
   1400096d1:	pushf  
   1400096d2:	pop    rbp
   1400096d3:	add    BYTE PTR [rcx-0x42ff9e6a],bh
   1400096d9:	(bad)  
   1400096da:	add    BYTE PTR gs:[rdx-0x40ff9766],bh
   1400096e1:	popf   
   1400096e2:	imul   eax,DWORD PTR [rax],0xffffffbf
   1400096e5:	movabs eax,ds:0x9ecb00529cc00072
   1400096ee:	pop    rdi
   1400096ef:	add    dl,al
   1400096f1:	lahf   
   1400096f2:	ins    DWORD PTR es:[rdi],dx
   1400096f3:	add    ah,al
   1400096f5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400096f6:	push   0x6bb3d600
   1400096fb:	add    dl,al
   1400096fd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400096fe:	jbe    0x140009700
   140009700:	leave  
   140009701:	lods   al,BYTE PTR ds:[rsi]
   140009702:	jg     0x140009704
   140009704:	enter  0x7bb0,0x0
   140009708:	shl    BYTE PTR [rbp+0x630c0072],cl
   14000970e:	repnz add BYTE PTR [rdx],dl
   140009711:	ins    BYTE PTR es:[rdi],dx
   140009712:	cmc    
   140009713:	add    BYTE PTR [rcx],bl
   140009715:	push   0x710a00f1
   14000971a:	stc    
   14000971b:	add    BYTE PTR [rip+0x1e00f678],dl        # 0x15e018d99
   140009721:	jl     0x140009721
   140009723:	add    BYTE PTR [rbx],ah
   140009725:	push   0xffffffffffffffef
   140009727:	add    BYTE PTR [rip+0x3500e270],ch        # 0x17501799d
   14000972d:	jg     0x14000971a
   14000972f:	add    BYTE PTR [rip+0x2500f16d],ah        # 0x1650188a2
   140009735:	jno    0x140009729
   140009737:	add    BYTE PTR [rip+0x2b00f379],ah        # 0x16b018ab6
   14000973d:	jnp    0x140009732
   14000973f:	add    BYTE PTR [rip+0x3700fd70],ah        # 0x1770194b5
   140009745:	jnp    0x14000973d
   140009747:	add    BYTE PTR [rdx+0x7b],al
   14000974a:	xlat   BYTE PTR ds:[rbx]
   14000974b:	add    BYTE PTR [rsp+rdx*4-0x54],bh
   14000974f:	add    BYTE PTR [rbx],dl
   140009751:	(bad)  
   140009752:	test   DWORD PTR [rax],0xfd871c
   140009758:	sbb    eax,0x2c00ff93
   14000975d:	mov    esp,gs
   14000975f:	add    BYTE PTR [rcx],dh
   140009761:	mov    esp,edx
   140009763:	add    BYTE PTR [rax],ah
   140009765:	xor    edi,0x0
   140009768:	(bad)  
   140009769:	xor    ch,0x0
   14000976c:	sub    DWORD PTR [rbp-0x75dcff0b],eax
   140009772:	test   BYTE PTR [rax],0x2a
   140009775:	mov    dh,dh
   140009777:	add    BYTE PTR [rax],ah
   140009779:	mov    edi,edi
   14000977b:	add    BYTE PTR [rax],ah
   14000977d:	nop
   14000977e:	test   DWORD PTR [rax],0xf7902c
   140009784:	and    edx,DWORD PTR [rbp-0x6bd3ff02]
   14000978a:	clc    
   14000978b:	add    BYTE PTR [rdi],ch
   14000978d:	cwde   
   14000978e:	cld    
   14000978f:	add    BYTE PTR [rip+0x4b00f694],dh        # 0x18b018e29
   140009795:	(bad)  
   140009796:	(bad)  
   140009797:	add    BYTE PTR [rbx-0x77],dl
   14000979a:	xlat   BYTE PTR ds:[rbx]
   14000979b:	add    BYTE PTR [rsi-0x70],al
   14000979e:	xlat   BYTE PTR ds:[rbx]
   14000979f:	add    BYTE PTR [rbp-0x6c],ch
   1400097a2:	enter  0x4500,0x84
   1400097a6:	in     al,dx
   1400097a7:	add    BYTE PTR [rsp+rcx*4-0x1f],dl
   1400097ab:	add    BYTE PTR [rdi-0x6e],dl
   1400097ae:	loope  0x1400097b0
   1400097b0:	rex cdq 
   1400097b2:	test   DWORD PTR [rax],0xf59a54
   1400097b8:	gs (bad) 
   1400097ba:	in     eax,dx
   1400097bb:	add    BYTE PTR [rax-0x5a],dl
   1400097be:	cli    
   1400097bf:	add    BYTE PTR [rdi-0x5b],ah
   1400097c2:	test   DWORD PTR [rax],0xf6a875
   1400097c8:	jp     0x14000977c
   1400097ca:	test   DWORD PTR [rax],0x97958f
   1400097d0:	test   eax,0x9d00839e
   1400097d5:	movabs ds:0xa68c008ca2ae009a,eax
   1400097de:	mov    eax,0xacb7af00
   1400097e3:	add    bl,al
   1400097e5:	scas   al,BYTE PTR es:[rdi]
   1400097e6:	xchg   DWORD PTR [rax],eax
   1400097e8:	(bad)
   1400097eb:	add    cl,cl
   1400097ed:	mov    bl,0x88
   1400097ef:	add    dl,cl
   1400097f1:	mov    ah,0x8a
   1400097f3:	add    ah,cl
   1400097f5:	mov    dh,0x8d
   1400097f7:	add    ch,dl
   1400097f9:	mov    esp,0xb9ce008a
   1400097fe:	xchg   ecx,eax
   1400097ff:	add    dl,cl
   140009801:	mov    eax,0xbbd10095
   140009806:	xchg   edx,eax
   140009807:	add    dl,dl
   140009809:	mov    ebp,0xc1d50097
   14000980e:	pushf  
   14000980f:	add    bl,bl
   140009811:	(bad)
   140009814:	(bad)  
   140009815:	ret    
   140009816:	movabs al,ds:0xa6c9dc00a3c6d800
   14000981f:	add    ah,dl
   140009821:	(bad)
   140009824:	fcmovne st,st(2)
   140009826:	lods   al,BYTE PTR ds:[rsi]
   140009827:	add    dl,cl
   140009829:	(bad)  
   14000982a:	mov    esi,0xb1cddc00
   14000982f:	add    ch,bl
   140009831:	sar    DWORD PTR [rcx-0x5c371f00],1
   140009837:	add    ah,ah
   140009839:	retf   
   14000983a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000983b:	add    dl,ah
   14000983d:	int    0xaa
   14000983f:	add    ch,ah
   140009841:	shl    DWORD PTR [rdx-0x5b2c1700],1
   140009847:	add    bh,ah
   140009849:	shr    DWORD PTR [rbp-0x542a1700],1
   14000984f:	add    dh,ch
   140009851:	fsubr  DWORD PTR [rsi-0x4f2f2000]
   140009857:	add    bl,ah
   140009859:	shl    BYTE PTR [rbp-0x48291900],cl
   14000985f:	add    dl,ch
   140009861:	(bad)  
   140009862:	mov    dl,0x0
   140009864:	(bad)  
   140009865:	fdiv   DWORD PTR [rcx-0x49271500]
   14000986b:	add    ch,ch
   14000986d:	fidiv  DWORD PTR [rax+rax*1+0xb5dcef]
   140009874:	loope  0x14000984a
   140009876:	mov    esp,0xbfd7e500
   14000987b:	add    dl,ch
   14000987d:	fdivr  DWORD PTR [rdx-0x46251300]
   140009883:	add    ch,ch
   140009885:	fdivr  QWORD PTR [rcx-0x43241200]
   14000988b:	add    bl,dh
   14000988d:	fnsave [rax+rax*1+0xb4def6]
   140009894:	lock fidivr WORD PTR [rax-0x431f0e00]
   14000989b:	add    al,bh
   14000989d:	loopne 0x140009857
   14000989f:	add    ah,bh
   1400098a1:	jrcxz  0x14000985f
   1400098a3:	add    BYTE PTR [rsi-0x7aff2f5a],al
   1400098a9:	mov    eax,0xbf9a00f8
   1400098ae:	test   DWORD PTR [rax],0xccc0b5
   1400098b4:	xchg   edx,eax
   1400098b5:	(bad)  
   1400098b6:	cli    
   1400098b7:	add    BYTE PTR [rbp-0x25ff0836],ah
   1400098bd:	(bad)  
   1400098be:	retf   0xe500
   1400098c1:	fcmovb st,st(4)
   1400098c3:	add    al,ah
   1400098c5:	fcompp 
   1400098c7:	add    dh,ch
   1400098c9:	loop   0x140009893
   1400098cb:	add    bl,ch
   1400098cd:	loop   0x1400098a1
   1400098cf:	add    bh,ch
   1400098d1:	out    0xd7,al
   1400098d3:	add    cl,dh
   1400098d5:	out    0xd2,al
   1400098d7:	add    cl,dh
   1400098d9:	jmp    0x12cf599b9
   1400098de:	fadd   DWORD PTR [rax]
   1400098e0:	ret    
   1400098e1:	(bad)  
   1400098e3:	add    ch,bl
   1400098e5:	in     eax,dx
   1400098e6:	std    
   1400098e7:	add    dh,ah
   1400098e9:	repnz inc BYTE PTR [rax]
   1400098ec:	(bad)  
   1400098ed:	(bad)  
   1400098ee:	inc    BYTE PTR [rax]
	...
   140009abc:	(bad)  
   140009abd:	(bad)  
   140009abe:	inc    DWORD PTR [rax]
	...
   140009b10:	add    BYTE PTR [rax],al
   140009b12:	rex.WRXB
   140009b13:	rex.WRB
   140009b14:	rex.WRB
   140009b15:	rex.WRB
   140009b16:	adc    QWORD PTR [r8],rax
	...
   140009b29:	add    BYTE PTR [rdi+0x4f],cl
   140009b2c:	rex.WRB
   140009b2d:	rex.WRB
   140009b2e:	rex.WRX push rcx
   140009b30:	push   rcx
   140009b31:	push   rdx
   140009b32:	push   rsi
   140009b33:	push   rsi
   140009b34:	push   rsi
   140009b35:	push   rdi
   140009b36:	pop    rbp
   140009b37:	add    DWORD PTR [rbp+0xd],ecx
	...
   140009b42:	rex.WRB
   140009b43:	rex.WRXB
   140009b44:	rex.WRB
   140009b45:	rex.WRB
   140009b46:	rex.WB
   140009b47:	rex.WRB push r9
   140009b49:	push   rbx
   140009b4a:	push   rsp
   140009b4b:	push   rdi
   140009b4c:	pop    rdi
   140009b4d:	pop    rdi
   140009b4e:	push   rdi
   140009b4f:	push   rdi
   140009b50:	push   rdi
   140009b51:	(bad)  
   140009b52:	pop    rdi
   140009b53:	pop    rdi
   140009b54:	pop    rdi
   140009b55:	pop    rbp
   140009b56:	pop    rbp
   140009b57:	add    DWORD PTR [rdx+0x1],esp
   140009b5a:	rex.WX
   140009b5b:	rex.WRB add BYTE PTR [r8],r8b
   140009b5e:	add    BYTE PTR [rax],al
   140009b60:	add    BYTE PTR [rax],al
   140009b62:	adc    dl,BYTE PTR [rdi+riz*2+0x66]
   140009b66:	push   0x70666257
   140009b6b:	jbe    0x140009be5
   140009b6d:	js     0x140009bd8
   140009b6f:	imul   ebx,DWORD PTR [rdi+0x63],0x625d6062
   140009b76:	(bad)  
   140009b77:	add    DWORD PTR [rsi+0x1],esi
   140009b7a:	jbe    0x140009b87
   140009b7c:	add    BYTE PTR [rax],al
   140009b7e:	add    BYTE PTR [rax],al
   140009b80:	add    BYTE PTR [rax],al
   140009b82:	(bad)  
   140009b83:	xchg   WORD PTR [rdi+0x5f],sp
   140009b87:	push   rdi
   140009b88:	sbb    BYTE PTR [rdx+0x22],0x1a
   140009b8c:	adc    ebx,DWORD PTR [rcx]
   140009b8e:	and    bh,BYTE PTR [rax+rbx*2+0x51]
   140009b92:	(bad)  
   140009b93:	imul   ebp,DWORD PTR [rax+0x68],0xa690a63
   140009b9a:	jbe    0x140009b9d
   140009b9c:	add    BYTE PTR [rax],al
   140009b9e:	add    BYTE PTR [rax],al
   140009ba0:	add    BYTE PTR [rax],al
   140009ba2:	(bad)  
   140009ba3:	xchg   WORD PTR [rax+0x56],si
   140009ba7:	jg     0x140009bde
   140009ba9:	sbb    al,0x15
   140009bab:	sbb    al,0x19
   140009bad:	sbb    DWORD PTR [rip+0x495a1a13],edx        # 0x1895ab5c6
   140009bb3:	(bad)  
   140009bb4:	imul   ebp,DWORD PTR [rax+0x64],0x690a760a
   140009bbb:	or     al,BYTE PTR [rax]
   140009bbd:	add    BYTE PTR [rax],al
   140009bbf:	add    BYTE PTR [rax],al
   140009bc1:	add    BYTE PTR [rsi],cl
   140009bc3:	xchg   WORD PTR [rax+0x1514225a],ax
   140009bca:	adc    edx,DWORD PTR [rip+0x1c1c1c1c]        # 0x15c1cb7ec
   140009bd0:	adc    eax,0x63495a15
   140009bd5:	push   0xa750a64
   140009bda:	jbe    0x140009be6
   140009bdc:	add    BYTE PTR [rax],al
   140009bde:	add    BYTE PTR [rax],al
   140009be0:	add    BYTE PTR [rax],al
   140009be2:	(bad)  
   140009be3:	push   rdi
   140009be4:	xchg   DWORD PTR [rcx-0xe0eae5],eax
   140009bea:	mov    BYTE PTR [rcx],ah
   140009bec:	adc    ebx,DWORD PTR [rcx]
   140009bee:	sbb    eax,0x19191d1c
   140009bf3:	rex.W
   140009bf4:	rex.WB (bad) 
   140009bf6:	or     dh,BYTE PTR fs:[rsi+0xa]
   140009bfa:	jne    0x140009c06
   140009bfc:	add    BYTE PTR [rax],al
   140009bfe:	add    BYTE PTR [rax],al
   140009c00:	add    BYTE PTR [rax],al
   140009c02:	(bad)  
   140009c03:	ins    DWORD PTR es:[rdi],dx
   140009c04:	xchg   DWORD PTR [rsi],esi
   140009c06:	adc    al,0x14
   140009c08:	rex.B (bad) 
   140009c0a:	(bad)  
   140009c0b:	(bad)  
   140009c0c:	jnp    0x140009c23
   140009c0e:	adc    eax,0x151d1d1d
   140009c13:	xor    eax,0xa754f4f
   140009c18:	imul   ecx,DWORD PTR [rdx],0xa76
   140009c1e:	add    BYTE PTR [rax],al
   140009c20:	add    BYTE PTR [rax],al
   140009c22:	(bad)  
   140009c23:	and    WORD PTR [rax],0x131e
   140009c28:	rex.X (bad) 
   140009c2a:	(bad)  
   140009c2b:	(bad)  
   140009c2c:	dec    DWORD PTR [rcx+0x1d15153d]
   140009c32:	sbb    eax,0x75504814
   140009c37:	or     dh,BYTE PTR [rsi+0xa]
   140009c3a:	jne    0x140009c46
   140009c3c:	add    BYTE PTR [rax],al
   140009c3e:	add    BYTE PTR [rax],al
   140009c40:	add    BYTE PTR [rax],al
   140009c42:	(bad)  
   140009c43:	ins    DWORD PTR es:[rdi],dx
   140009c44:	jns    0x140009c5c
   140009c46:	sub    dl,BYTE PTR [rdx+rax*2]
   140009c49:	(bad)  
   140009c4a:	(bad)  
   140009c4b:	(bad)  
   140009c4c:	(bad)  
   140009c4d:	(bad)  
   140009c4e:	(bad)  
   140009c4f:	jle    0x140009c70
   140009c51:	adc    al,0x1d
   140009c53:	adc    al,0x38
   140009c55:	rex.WB jne 0x140009c62
   140009c58:	jne    0x140009c64
   140009c5a:	jbe    0x140009c66
   140009c5c:	add    BYTE PTR [rax],al
   140009c5e:	add    BYTE PTR [rax],al
   140009c60:	add    BYTE PTR [rax],al
   140009c62:	(bad)  
   140009c63:	ins    DWORD PTR es:[rdi],dx
   140009c64:	cmp    bl,BYTE PTR [rax]
   140009c66:	sub    edx,DWORD PTR [rsi]
   140009c68:	rex.X (bad) 
   140009c6a:	(bad)  
   140009c6b:	(bad)  
   140009c6c:	(bad)  
   140009c6d:	(bad)  
   140009c6e:	(bad)  
   140009c6f:	(bad)  
   140009c70:	inc    DWORD PTR [rcx+0x1e]
   140009c73:	adc    al,0x39
   140009c75:	rex.WRB (bad) 
   140009c77:	or     dh,BYTE PTR [rbp+0xa]
   140009c7a:	imul   ecx,DWORD PTR [rdx],0x0
   140009c80:	add    BYTE PTR [rax],al
   140009c82:	(bad)  
   140009c83:	sbb    bx,WORD PTR [rax]
   140009c86:	sub    edx,DWORD PTR [rsi]
   140009c88:	rex.X (bad) 
   140009c8a:	(bad)  
   140009c8b:	(bad)  
   140009c8c:	(bad)  
   140009c8d:	(bad)  
   140009c8e:	(bad)  
   140009c8f:	(bad)  
   140009c90:	(bad)  
   140009c91:	(bad)  
   140009c92:	ds adc al,0x1f
   140009c95:	movsxd r9,DWORD PTR [r10]
   140009c98:	jbe    0x140009ca4
   140009c9a:	jbe    0x140009ca6
   140009c9c:	add    BYTE PTR [rax],al
   140009c9e:	add    BYTE PTR [rax],al
   140009ca0:	add    BYTE PTR [rax],al
   140009ca2:	(bad)  
   140009ca3:	pop    rsp
   140009ca4:	sbb    esp,DWORD PTR [rip+0xffffffffff7a172d]        # 0x13f7ab3d7
   140009caa:	(bad)  
   140009cab:	(bad)  
   140009cac:	(bad)  
   140009cad:	(bad)  
   140009cae:	(bad)  
   140009caf:	(bad)  
   140009cb0:	(bad)  
   140009cb1:	inc    DWORD PTR [rcx+0x17]
   140009cb4:	(bad)  
   140009cb5:	movsxd r9,DWORD PTR [r10]
   140009cb8:	jne    0x140009cc4
   140009cba:	jne    0x140009cc6
   140009cbc:	add    BYTE PTR [rax],al
   140009cbe:	add    BYTE PTR [rax],al
   140009cc0:	add    BYTE PTR [rax],al
   140009cc2:	(bad)  
   140009cc3:	ins    DWORD PTR es:[rdi],dx
   140009cc4:	ss cs xor al,0x24
   140009cc8:	jp     0x140009cc9
   140009cca:	(bad)  
   140009ccb:	(bad)  
   140009ccc:	(bad)  
   140009ccd:	(bad)  
   140009cce:	(bad)  
   140009ccf:	dec    DWORD PTR [rdx+0x39162a40]
   140009cd5:	movsxd r9,DWORD PTR [r10]
   140009cd8:	jbe    0x140009ce4
   140009cda:	jne    0x140009ce6
   140009cdc:	add    BYTE PTR [rax],al
   140009cde:	add    BYTE PTR [rax],al
   140009ce0:	add    BYTE PTR [rax],al
   140009ce2:	(bad)  
   140009ce3:	ins    DWORD PTR es:[rdi],dx
   140009ce4:	cmp    BYTE PTR [rip+0xffffffffff7a243c],ah        # 0x13f7ac126
   140009cea:	(bad)  
   140009ceb:	(bad)  
   140009cec:	(bad)  
   140009ced:	(bad)  
   140009cee:	(bad)  
   140009cef:	jge    0x140009d1b
   140009cf1:	(bad)  
   140009cf2:	sub    dl,BYTE PTR [rdi]
   140009cf4:	cmp    BYTE PTR [rcx+0x75],cl
   140009cf7:	add    DWORD PTR [rbp+0xa],esi
   140009cfa:	jbe    0x140009d06
   140009cfc:	add    BYTE PTR [rax],al
   140009cfe:	add    BYTE PTR [rax],al
   140009d00:	add    BYTE PTR [rax],al
   140009d02:	(bad)  
   140009d03:	or     BYTE PTR [rax+0x2a],0x3c
   140009d07:	(bad)  
   140009d08:	jp     0x140009d09
   140009d0a:	(bad)  
   140009d0b:	(bad)  
   140009d0c:	dec    DWORD PTR [rdx+0x2a2a173d]
   140009d12:	sub    eax,0x754f4324
   140009d17:	or     dh,BYTE PTR [rax+0xa]
   140009d1a:	imul   ecx,DWORD PTR [rdx],0x0
   140009d20:	add    BYTE PTR [rax],al
   140009d22:	(bad)  
   140009d23:	ins    DWORD PTR es:[rdi],dx
   140009d24:	xor    DWORD PTR [rsi],0x33
   140009d27:	(bad)  
   140009d28:	jge    0x140009d29
   140009d2a:	(bad)  
   140009d2b:	(bad)  
   140009d2c:	jge    0x140009d5a
   140009d2e:	sub    ch,BYTE PTR [rbp*1+0x493b172d]
   140009d35:	(bad)  
   140009d36:	ja     0x140009d42
   140009d38:	jne    0x140009d44
   140009d3a:	jbe    0x140009d46
   140009d3c:	add    BYTE PTR [rax],al
   140009d3e:	add    BYTE PTR [rax],al
   140009d40:	add    BYTE PTR [rax],al
   140009d42:	(bad)  
   140009d43:	xchg   WORD PTR [rbp+0x27],ax
   140009d47:	rex.X dec DWORD PTR es:[rcx+0x30302f3f]
   140009d4f:	sub    eax,0x432b2b2d
   140009d54:	push   rcx
   140009d55:	js     0x140009dcc
   140009d57:	add    DWORD PTR [rsi+0xa],esi
   140009d5a:	jne    0x140009d66
   140009d5c:	add    BYTE PTR [rax],al
   140009d5e:	add    BYTE PTR [rax],al
   140009d60:	add    BYTE PTR [rax],al
   140009d62:	(bad)  
   140009d63:	push   rdi
   140009d64:	test   BYTE PTR [rbp+0x43],ch
   140009d67:	xor    BYTE PTR [rcx],dh
   140009d69:	cmp    al,0x30
   140009d6b:	(bad)  
   140009d6c:	xor    al,0x30
   140009d6e:	xor    al,0x30
   140009d70:	sub    eax,0x7651472a
   140009d75:	js     0x140009dee
   140009d77:	add    DWORD PTR [rbp+0xa],esi
   140009d7a:	jne    0x140009d86
   140009d7c:	add    BYTE PTR [rax],al
   140009d7e:	add    BYTE PTR [rax],al
   140009d80:	add    BYTE PTR [rax],al
   140009d82:	(bad)  
   140009d83:	pop    rbx
   140009d84:	test   DWORD PTR [rax+0x53],esi
   140009d87:	rex.XB sub BYTE PTR [rip+0x34343430],spl        # 0x17434d1be
   140009d8e:	xor    BYTE PTR [rax+rbp*1],ch
   140009d91:	rex.RXB
   140009d92:	imul   r14,QWORD PTR [r14+0x77],0xa760177
   140009d9a:	jne    0x140009da6
   140009d9c:	add    BYTE PTR [rax],al
   140009d9e:	add    BYTE PTR [rax],al
   140009da0:	add    BYTE PTR [rax],al
   140009da2:	(bad)  
   140009da3:	push   rdi
   140009da4:	test   DWORD PTR [rbp+0x5f],ebp
   140009da7:	jo     0x140009ded
   140009da9:	and    esi,DWORD PTR [rdi]
   140009dab:	(bad)  
   140009dac:	and    al,0x27
   140009dae:	(bad)  
   140009daf:	cmp    BYTE PTR [rsi+0x51],al
   140009db2:	jo     0x140009e2c
   140009db4:	jne    0x140009e2d
   140009db6:	je     0x140009db9
   140009db8:	jne    0x140009dc4
   140009dba:	jbe    0x140009dc6
   140009dbc:	add    BYTE PTR [rax],al
   140009dbe:	add    BYTE PTR [rax],al
   140009dc0:	add    BYTE PTR [rax],al
   140009dc2:	(bad)  
   140009dc3:	push   rdi
   140009dc4:	and    DWORD PTR [rsi+0x54],0x70
   140009dc8:	jo     0x140009e1e
   140009dca:	rex.WRXB
   140009dcb:	rex.WRXB push r8
   140009dcd:	rex.WRXB push r10
   140009dcf:	push   rdi
   140009dd0:	data16 jne 0x140009e4a
   140009dd3:	jne    0x140009e49
   140009dd5:	ja     0x140009e4b
   140009dd7:	or     dh,BYTE PTR [rbp+0xa]
   140009dda:	jbe    0x140009de0
   140009ddc:	add    BYTE PTR [rax],al
   140009dde:	add    BYTE PTR [rax],al
   140009de0:	add    BYTE PTR [rax],al
   140009de2:	(bad)  
   140009de3:	push   rdx
   140009de4:	(bad)  
   140009de5:	jo     0x140009e44
   140009de7:	imul   ebp,DWORD PTR [rcx+0x75],0x75757575
   140009dee:	ja     0x140009e65
   140009df0:	js     0x140009e69
   140009df2:	ja     0x140009e6b
   140009df4:	ja     0x140009e6d
   140009df6:	js     0x140009df9
   140009df8:	rex.WRX or r9b,BYTE PTR [rax+r10*1]
   140009dfc:	add    BYTE PTR [rax],al
   140009dfe:	add    BYTE PTR [rax],al
   140009e00:	add    BYTE PTR [rax],al
   140009e02:	add    BYTE PTR [rcx],cl
   140009e04:	or     DWORD PTR [rsp+rcx*1],ecx
   140009e07:	or     al,0xc
   140009e09:	or     al,0x6
   140009e0b:	(bad)  
   140009e0c:	(bad)  
   140009e0d:	(bad)  
   140009e0e:	add    eax,0x3030505
   140009e13:	add    eax,DWORD PTR [rdx]
   140009e15:	add    al,BYTE PTR [rsi]
   140009e17:	or     al,0xc
	...
   140009ebd:	add    BYTE PTR [rax],al
   140009ebf:	add    bh,bh
   140009ec1:	(bad)  
   140009ec2:	(bad)  
   140009ec3:	(bad)  
   140009ec4:	(bad)  
   140009ec5:	(bad)  
   140009ec6:	(bad)  
   140009ec7:	(bad)  
   140009ec8:	(bad)  
   140009ec9:	inc    eax
   140009ecb:	(bad)  
   140009ecc:	inc    eax
   140009ece:	add    BYTE PTR [rdi],bh
   140009ed0:	rol    BYTE PTR [rax],0x0
   140009ed3:	xadd   BYTE PTR [rax],al
   140009ed6:	add    BYTE PTR [rdi],cl
   140009ed8:	rol    BYTE PTR [rax],0x0
   140009edb:	xadd   BYTE PTR [rax],al
   140009ede:	add    BYTE PTR [rdi],cl
   140009ee0:	rol    BYTE PTR [rax],0x0
   140009ee3:	xadd   BYTE PTR [rax],al
   140009ee6:	add    BYTE PTR [rdi],cl
   140009ee8:	rol    BYTE PTR [rax],0x0
   140009eeb:	xadd   BYTE PTR [rax],al
   140009eee:	add    BYTE PTR [rdi],cl
   140009ef0:	rol    BYTE PTR [rax],0x0
   140009ef3:	xadd   BYTE PTR [rax],al
   140009ef6:	add    BYTE PTR [rdi],cl
   140009ef8:	rol    BYTE PTR [rax],0x0
   140009efb:	xadd   BYTE PTR [rax],al
   140009efe:	add    BYTE PTR [rdi],cl
   140009f00:	rol    BYTE PTR [rax],0x0
   140009f03:	xadd   BYTE PTR [rax],al
   140009f06:	add    BYTE PTR [rdi],cl
   140009f08:	rol    BYTE PTR [rax],0x0
   140009f0b:	xadd   BYTE PTR [rax],al
   140009f0e:	add    BYTE PTR [rdi],cl
   140009f10:	rol    BYTE PTR [rax],0x0
   140009f13:	xadd   BYTE PTR [rax],al
   140009f16:	add    BYTE PTR [rdi],cl
   140009f18:	rol    BYTE PTR [rax],0x0
   140009f1b:	xadd   BYTE PTR [rax],al
   140009f1e:	add    BYTE PTR [rdi],cl
   140009f20:	rol    BYTE PTR [rax],0x0
   140009f23:	xadd   BYTE PTR [rax],al
   140009f26:	add    BYTE PTR [rdi],cl
   140009f28:	loopne 0x140009f2a
   140009f2a:	add    BYTE PTR [rdi-0x1],bh
   140009f2d:	(bad)  
   140009f2e:	(bad)  
   140009f2f:	(bad)  
   140009f30:	(bad)  
   140009f31:	(bad)  
   140009f32:	(bad)  
   140009f33:	(bad)  
   140009f34:	(bad)  
   140009f35:	(bad)  
   140009f36:	(bad)  
   140009f37:	(bad)  
   140009f38:	(bad)  
   140009f39:	(bad)  
   140009f3a:	(bad)  
   140009f3b:	(bad)  
   140009f3c:	(bad)  
   140009f3d:	(bad)  
   140009f3e:	(bad)  
   140009f3f:	jmp    FWORD PTR [rax]
   140009f41:	add    BYTE PTR [rax],al
   140009f43:	add    BYTE PTR [rax],bl
   140009f45:	add    BYTE PTR [rax],al
   140009f47:	add    BYTE PTR [rax],dh
   140009f49:	add    BYTE PTR [rax],al
   140009f4b:	add    BYTE PTR [rcx],al
   140009f4d:	add    BYTE PTR [rax],cl
   140009f4f:	add    BYTE PTR [rax],al
   140009f51:	add    BYTE PTR [rax],al
   140009f53:	add    BYTE PTR [rax+0x2],al
	...
   140009f5e:	add    BYTE PTR [rax],al
   140009f60:	add    BYTE PTR [rcx],al
   140009f62:	add    BYTE PTR [rax],al
   140009f64:	add    BYTE PTR [rcx],al
   140009f66:	add    BYTE PTR [rax],al
   140009f68:	add    BYTE PTR [rax],al
   140009f6a:	add    BYTE PTR [rax],al
   140009f6c:	mov    bh,0x96
   140009f6e:	push   rbx
   140009f6f:	add    BYTE PTR [rax-0x47ffab69],bh
   140009f75:	cwde   
   140009f76:	push   rsi
   140009f77:	add    BYTE PTR [rbp-0x45ffa264],bh
   140009f7d:	(bad)  
   140009f7e:	push   0x7aa4ba00
   140009f83:	add    dl,al
   140009f85:	lahf   
   140009f86:	ins    DWORD PTR es:[rdi],dx
   140009f87:	add    ah,al
   140009f89:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009f8a:	push   0x6fabca00
   140009f8f:	add    dh,al
   140009f91:	lods   al,BYTE PTR ds:[rsi]
   140009f92:	js     0x140009f94
   140009f94:	shr    BYTE PTR [rdi+0x3b000070],1
   140009f9a:	inc    DWORD PTR [rax]
   140009f9c:	add    BYTE PTR [rbp-0xa],al
   140009f9f:	add    BYTE PTR [rax],cl
   140009fa1:	pop    rax
   140009fa2:	cli    
   140009fa3:	add    BYTE PTR [rbx+riz*2],cl
   140009fa6:	repnz add BYTE PTR [rdx],dl
   140009fa9:	ins    BYTE PTR es:[rdi],dx
   140009faa:	cmc    
   140009fab:	add    BYTE PTR [rcx],bl
   140009fad:	push   0x7f0100f1
   140009fb2:	hlt    
   140009fb3:	add    BYTE PTR [rdx],cl
   140009fb5:	jno    0x140009fb0
   140009fb7:	add    BYTE PTR [rip+0x1e00f678],dl        # 0x15e019635
   140009fbd:	jl     0x140009fbd
   140009fbf:	add    BYTE PTR [rbx],ah
   140009fc1:	push   0xffffffffffffffef
   140009fc3:	add    BYTE PTR [rip+0x2500eb7f],dh        # 0x165018b48
   140009fc9:	ins    DWORD PTR es:[rdi],dx
   140009fca:	icebp  
   140009fcb:	add    BYTE PTR [rip+0x2a00f271],ah        # 0x16a019242
   140009fd1:	je     0x140009fc4
   140009fd3:	add    BYTE PTR [rip+0x2b00f379],ah        # 0x16b019352
   140009fd9:	jnp    0x140009fce
   140009fdb:	add    BYTE PTR [rip+0x3700fd70],ah        # 0x177019d51
   140009fe1:	jnp    0x140009fd9
   140009fe3:	add    BYTE PTR [rsp+rdx*4-0x54],bh
   140009fe7:	add    BYTE PTR [rdx-0x78],ah
   140009fea:	mov    ch,0x0
   140009fec:	add    BYTE PTR [rbx-0x77ffff06],al
   140009ff2:	inc    DWORD PTR [rax]
   140009ff4:	or     al,0x8f
   140009ff6:	inc    DWORD PTR [rax]
   140009ff8:	adc    eax,DWORD PTR [rdx-0x78e3ff09]
   140009ffe:	std    
   140009fff:	add    BYTE PTR [rdi],al
   14000a001:	xchg   ebp,eax
   14000a002:	inc    DWORD PTR [rax]
   14000a004:	sbb    eax,0x2c00ff93
   14000a009:	mov    esp,gs
   14000a00b:	add    BYTE PTR [rax],ah
   14000a00d:	xor    edi,0x0
   14000a010:	(bad)  
   14000a011:	xor    ch,0x0
   14000a014:	sub    DWORD PTR [rbp-0x75dcff0b],eax
   14000a01a:	test   BYTE PTR [rax],0x2a
   14000a01d:	mov    dh,dh
   14000a01f:	add    BYTE PTR [rax],ah
   14000a021:	mov    edi,edi
   14000a023:	add    BYTE PTR [rdx],ch
   14000a025:	(bad)  
   14000a026:	std    
   14000a027:	add    BYTE PTR [rbx],bh
   14000a029:	mov    dh,dh
   14000a02b:	add    BYTE PTR [rax+rdx*4],ch
   14000a02e:	test   DWORD PTR [rax],0xf69435
   14000a034:	rex.WRX xchg rcx,rax
   14000a036:	leave  
   14000a037:	add    BYTE PTR [rbp-0x6a],bl
   14000a03a:	(bad)
   14000a03d:	nop
   14000a03e:	xlat   BYTE PTR ds:[rbx]
   14000a03f:	add    BYTE PTR [rbp-0x6c],ch
   14000a042:	enter  0x4b00,0x85
   14000a046:	cmc    
   14000a047:	add    BYTE PTR [rax-0x71],dl
   14000a04a:	cmc    
   14000a04b:	add    BYTE PTR [rax-0x67],al
   14000a04e:	test   DWORD PTR [rax],0xf59a54
   14000a054:	gs (bad) 
   14000a056:	in     eax,dx
   14000a057:	add    BYTE PTR [rdi-0x5b],ah
   14000a05a:	test   DWORD PTR [rax],0x97958f
   14000a060:	test   eax,0x9d00839e
   14000a065:	movabs ds:0xb7af00b8a68c009a,eax
   14000a06e:	lods   al,BYTE PTR ds:[rsi]
   14000a06f:	add    bl,al
   14000a071:	scas   al,BYTE PTR es:[rdi]
   14000a072:	xchg   DWORD PTR [rax],eax
   14000a074:	iret   
   14000a075:	mov    ch,0x83
   14000a077:	add    cl,cl
   14000a079:	mov    bl,0x85
   14000a07b:	add    dl,cl
   14000a07d:	mov    ah,0x8a
   14000a07f:	add    ah,cl
   14000a081:	mov    dh,0x8d
   14000a083:	add    dh,cl
   14000a085:	mov    ecx,0xb8ca0092
   14000a08a:	xchg   ebp,eax
   14000a08b:	add    cl,dl
   14000a08d:	mov    ebx,0xbcd10092
   14000a092:	xchg   esi,eax
   14000a093:	add    al,dl
   14000a095:	mov    ebp,0xc8cb0098
   14000a09a:	cdq    
   14000a09b:	add    ch,dl
   14000a09d:	rcr    DWORD PTR [rax+rax*1+0x9cc5db],0xd4
   14000a0a5:	leave  
   14000a0a6:	cwde   
   14000a0a7:	add    ch,dl
   14000a0a9:	ret    
   14000a0aa:	movabs al,ds:0xa6c9dc00a3c6d800
   14000a0b3:	add    bl,bl
   14000a0b5:	retf   0xac
   14000a0b8:	int    0xd0
   14000a0ba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a0bb:	add    dh,bl
   14000a0bd:	fldcw  WORD PTR [rdi-0x4f393300]
   14000a0c3:	add    ah,bl
   14000a0c5:	int    0xb1
   14000a0c7:	add    ch,bl
   14000a0c9:	sar    DWORD PTR [rcx-0x55321e00],1
   14000a0cf:	add    bh,ah
   14000a0d1:	shr    DWORD PTR [rbp-0x4f2f2000],1
   14000a0d7:	add    bl,ah
   14000a0d9:	shl    BYTE PTR [rbp-0x48291900],cl
   14000a0df:	add    dl,ch
   14000a0e1:	(bad)  
   14000a0e2:	mov    dl,0x0
   14000a0e4:	loopne 0x14000a0bf
   14000a0e6:	mov    ch,0x0
   14000a0e8:	(bad)  
   14000a0e9:	fdiv   DWORD PTR [rcx-0x49271500]
   14000a0ef:	add    ah,ch
   14000a0f1:	(bad)  [rdi-0x432b1f00]
   14000a0f7:	add    ch,ah
   14000a0f9:	xlat   BYTE PTR ds:[rbx]
   14000a0fa:	mov    edi,0xbad8ea00
   14000a0ff:	add    ch,ch
   14000a101:	fidivr DWORD PTR [rcx-0x46231300]
   14000a107:	add    dh,ch
   14000a109:	fstp   TBYTE PTR [rax+rax*1+0xbddeef]
   14000a110:	(bad)  
   14000a112:	mov    esi,0xe4a98d00
   14000a117:	add    BYTE PTR [rsi-0x7aff1a4d],cl
   14000a11d:	mov    eax,0xc0b500f8
   14000a122:	int3   
   14000a123:	add    BYTE PTR [rdx-0x5aff053c],dl
   14000a129:	retf   0xf7
   14000a12c:	mov    ah,0xd3
   14000a12e:	cli    
   14000a12f:	add    ch,ah
   14000a131:	fcmovb st,st(4)
   14000a133:	add    ch,dh
   14000a135:	in     al,0xc1
   14000a137:	add    ch,dh
   14000a139:	in     al,0xc6
   14000a13b:	add    al,bh
   14000a13d:	out    0xc2,al
   14000a13f:	add    bh,dh
   14000a141:	out    0xc8,eax
   14000a143:	add    cl,bh
   14000a145:	jmp    0x122eba216
   14000a14a:	rol    BYTE PTR [rax],cl
   14000a14c:	out    dx,eax
   14000a14d:	out    0xd7,al
   14000a14f:	add    dh,ch
   14000a151:	jmp    0x126f1a22a
   14000a156:	rol    BYTE PTR [rax],cl
   14000a158:	icebp  
   14000a159:	jmp    0x11bc3a239
   14000a15e:	cli    
   14000a15f:	add    cl,bl
   14000a161:	call   0x12ddda262
   14000a166:	std    
   14000a167:	add    ah,dh
   14000a169:	out    dx,al
   14000a16a:	loop   0x14000a16c
   14000a16c:	out    0xf2,al
   14000a16e:	inc    BYTE PTR [rax]
   14000a170:	icebp  
   14000a171:	idiv   ch
   14000a173:	add    ah,dh
   14000a175:	clc    
   14000a176:	std    
   14000a177:	add    al,bh
   14000a179:	clc    
   14000a17a:	clc    
   14000a17b:	add    bl,bh
   14000a17d:	cld    
   14000a17e:	inc    BYTE PTR [rax]
   14000a180:	(bad)  
   14000a181:	(bad)  
   14000a182:	inc    BYTE PTR [rax]
	...
   14000a364:	(bad)  
   14000a365:	(bad)  
   14000a366:	inc    DWORD PTR [rax]
	...
   14000a374:	add    BYTE PTR [rax],al
   14000a376:	rex.WXB
   14000a377:	rex.RXB
   14000a378:	rex.RX
   14000a379:	rex.RX
   14000a37a:	add    BYTE PTR [rax],r8b
	...
   14000a385:	add    BYTE PTR [rdx+0x47],cl
   14000a388:	rex.WX
   14000a389:	rex.WX
   14000a38a:	rex.RX
   14000a38b:	rex.RX
   14000a38c:	rex.WX
   14000a38d:	rex.WB
   14000a38e:	rex.WX
   14000a38f:	rex.WRB
   14000a390:	rex.WRB push r9
   14000a392:	pop    rbx
   14000a393:	add    al,0x8
   14000a395:	or     al,BYTE PTR [rax]
   14000a397:	add    BYTE PTR [rax],al
   14000a399:	rex.RXB
   14000a39a:	rex.RX
   14000a39b:	rex.X
   14000a39c:	rex.RX
   14000a39d:	rex.RX
   14000a39e:	rex.WX
   14000a39f:	rex.WRX push rdi
   14000a3a1:	pop    rbx
   14000a3a2:	pop    rdi
   14000a3a3:	pop    rax
   14000a3a4:	push   rdx
   14000a3a5:	push   rbx
   14000a3a6:	pop    rbx
   14000a3a7:	push   rbx
   14000a3a8:	push   rdx
   14000a3a9:	push   rdx
   14000a3aa:	pop    rbx
   14000a3ab:	add    DWORD PTR [rcx+0x3],edx
   14000a3ae:	(bad)  
   14000a3af:	add    BYTE PTR [rsi+0x63],cl
   14000a3b2:	jnp    0x14000a417
   14000a3b4:	pop    rbx
   14000a3b5:	movsxd ebx,DWORD PTR [rdi+0x54]
   14000a3b8:	rex.B
   14000a3b9:	rex
   14000a3ba:	rex
   14000a3bb:	push   r12
   14000a3bd:	rex.WRXB push r11
   14000a3bf:	pop    rcx
   14000a3c0:	push   rdx
   14000a3c1:	push   rdx
   14000a3c2:	pop    rdx
   14000a3c3:	add    DWORD PTR [rsi+0x1],esp
   14000a3c6:	je     0x14000a3cb
   14000a3c8:	rex.WX movsxd rax,DWORD PTR [rax+0x6c6a5153]
   14000a3cf:	sbb    eax,0xe0e0e0e
   14000a3d4:	(bad)  
   14000a3d5:	rex
   14000a3d6:	rex.WR push rbx
   14000a3d8:	pop    rdi
   14000a3d9:	pop    rbx
   14000a3da:	pop    rbx
   14000a3db:	add    esp,DWORD PTR [rsi+0x3]
   14000a3de:	je     0x14000a3e2
   14000a3e0:	rex.WX pop rax
   14000a3e2:	jnp    0x14000a437
   14000a3e4:	push   rsp
   14000a3e5:	(bad)  
   14000a3e6:	or     al,0xd
   14000a3e8:	bndldx bnd3,[rax]
   14000a3eb:	(bad)  
   14000a3ec:	(bad)  
   14000a3ed:	(bad)  
   14000a3ee:	(bad)  
   14000a3ef:	rex.X push rdx
   14000a3f1:	pop    rbp
   14000a3f2:	data16 add ah,BYTE PTR [rsi+0x3]
   14000a3f6:	jbe    0x14000a3fa
   14000a3f8:	rex.WX pop rax
   14000a3fa:	jl     0x14000a45b
   14000a3fc:	(bad)  
   14000a3fd:	or     eax,0xd18703b
   14000a402:	(bad)  
   14000a403:	sbb    bl,BYTE PTR [rdx]
   14000a405:	(bad)  
   14000a406:	(bad)  
   14000a407:	(bad)  
   14000a408:	(bad)  
   14000a409:	push   rbx
   14000a40a:	add    sp,WORD PTR [rsi+0x4]
   14000a40e:	je     0x14000a413
   14000a410:	rex.WX pop rax
   14000a412:	jp     0x14000a47f
   14000a414:	(bad)  
   14000a415:	adc    BYTE PTR [rsi-0x1],bh
   14000a418:	jle    0x14000a456
   14000a41a:	(bad)  
   14000a41b:	nop    DWORD PTR [rdx]
   14000a41e:	adc    DWORD PTR [rip+0x166461f],ebx        # 0x14166ea43
   14000a424:	add    WORD PTR [rsi+0x2],si
   14000a428:	rex.WX movsxd rbp,DWORD PTR [rdx+0x1d]
   14000a42c:	nop    DWORD PTR [rsi-0x1]
   14000a430:	(bad)  
   14000a431:	(bad)  
   14000a432:	jge    0x14000a450
   14000a434:	(bad)  
   14000a435:	adc    DWORD PTR [rdx],ebx
   14000a437:	adc    BYTE PTR [rsi],bl
   14000a439:	rex.X push rdx
   14000a43b:	add    esp,DWORD PTR [rsi+0x4]
   14000a43e:	je     0x14000a442
   14000a440:	movsxd rbp,DWORD PTR [r14+0x13]
   14000a444:	adc    al,0x1b
   14000a446:	jle    0x14000a447
   14000a448:	(bad)  
   14000a449:	(bad)  
   14000a44a:	inc    DWORD PTR [rbx+0x190f0f6d]
   14000a450:	adc    eax,0x6601513d
   14000a455:	add    esi,DWORD PTR [rsi+0x2]
   14000a458:	rex.WX movsxd rdi,DWORD PTR [rbx]
   14000a45b:	adc    eax,0xff7e2a14
   14000a460:	(bad)  
   14000a461:	(bad)  
   14000a462:	(bad)  
   14000a463:	(bad)  
   14000a464:	inc    DWORD PTR [rcx+0x1f150f38]
   14000a46a:	rex.WRB add al,0x66
   14000a46d:	add    esi,DWORD PTR [rsi+0x2]
   14000a470:	rex.WX pop rax
   14000a472:	xor    BYTE PTR [rdx],ch
   14000a474:	adc    al,0x2a
   14000a476:	jle    0x14000a477
   14000a478:	(bad)  
   14000a479:	(bad)  
   14000a47a:	(bad)  
   14000a47b:	(bad)  
   14000a47c:	(bad)  
   14000a47d:	inc    DWORD PTR [rdx+0x4d201317]
   14000a483:	add    DWORD PTR [rsi+0x4],esp
   14000a486:	je     0x14000a48a
   14000a488:	rex.WX pop rbx
   14000a48a:	xor    BYTE PTR [rip+0xffffffffff7e2b14],ah        # 0x13f7ecfa4
   14000a490:	(bad)  
   14000a491:	(bad)  
   14000a492:	(bad)  
   14000a493:	(bad)  
   14000a494:	(bad)  
   14000a495:	inc    DWORD PTR [rcx+0x4d201330]
   14000a49b:	add    al,0x66
   14000a49d:	add    DWORD PTR [rsi+0x2],esi
   14000a4a0:	rex.WX pop rax
   14000a4a2:	cmp    esp,DWORD PTR [rip+0xffffffffff7e2b14]        # 0x13f7ecfbc
   14000a4a8:	(bad)  
   14000a4a9:	(bad)  
   14000a4aa:	(bad)  
   14000a4ab:	(bad)  
   14000a4ac:	(bad)  
   14000a4ad:	jge    0x14000a4df
   14000a4af:	adc    al,0x2a
   14000a4b1:	(bad)  
   14000a4b2:	rex.WX add QWORD PTR [rsi+0x3],rsp
   14000a4b6:	jbe    0x14000a4ba
   14000a4b8:	rex.WX movsxd rax,DWORD PTR [rax+0x2e]
   14000a4bc:	and    al,0x2d
   14000a4be:	jle    0x14000a4bf
   14000a4c0:	(bad)  
   14000a4c1:	(bad)  
   14000a4c2:	inc    DWORD PTR [rcx+0x2414133c]
   14000a4c8:	cs cmp eax,0x166044d
   14000a4ce:	jbe    0x14000a4d2
   14000a4d0:	movsxd rdx,DWORD PTR [r14+0x25]
   14000a4d4:	and    al,0x28
   14000a4d6:	jle    0x14000a4d7
   14000a4d8:	(bad)  
   14000a4d9:	push   QWORD PTR [rcx+0x29]
   14000a4dc:	adc    ebp,DWORD PTR [rbx]
   14000a4de:	sub    esp,DWORD PTR [rip+0x3590639]        # 0x14359ab1d
   14000a4e4:	add    si,WORD PTR [rsi+0x2]
   14000a4e8:	rex.WX movsxd rdi,DWORD PTR [rax+0x36]
   14000a4ec:	and    dh,BYTE PTR [rcx]
   14000a4ee:	(bad)  
   14000a4ef:	(bad)  
   14000a4f0:	jle    0x14000a52e
   14000a4f2:	adc    esp,DWORD PTR [rbp*1+0x3d272a2d]
   14000a4f9:	rex.RX je 0x14000a4fd
   14000a4fc:	data16 add al,0x74
   14000a4ff:	add    ecx,DWORD PTR [rdx+0x58]
   14000a502:	jl     0x14000a54a
   14000a504:	and    esp,DWORD PTR [rbx]
   14000a506:	ins    DWORD PTR es:[rdi],dx
   14000a507:	outs   dx,DWORD PTR ds:[rsi]
   14000a508:	sub    eax,0x2d312c12
   14000a50d:	sub    eax,0x59053a23
   14000a512:	je     0x14000a517
   14000a514:	add    si,WORD PTR [rsi+0x2]
   14000a518:	rex.WB push r11
   14000a51a:	js     0x14000a573
   14000a51c:	and    ah,BYTE PTR ds:[rdx]
   14000a51f:	and    ch,BYTE PTR [rdx+rsi*1]
   14000a522:	xor    dh,BYTE PTR [rcx]
   14000a524:	(bad)  
   14000a525:	cmp    DWORD PTR es:[rsi],eax
   14000a528:	push   rbx
   14000a529:	imul   ax,WORD PTR [rbx],0x466
   14000a52e:	je     0x14000a533
   14000a530:	rex.RX push rdi
   14000a532:	js     0x14000a587
   14000a534:	push   rcx
   14000a535:	rex.RXB xor eax,0x26262626
   14000a53b:	es (bad) 
   14000a53d:	ss rex.X pop rcx
   14000a540:	data16 add bp,WORD PTR gs:[rcx+0x3]
   14000a546:	jbe    0x14000a54a
   14000a548:	rex.WX push rbx
   14000a54a:	js     0x14000a59d
   14000a54c:	push   rdx
   14000a54d:	jb     0x14000a59d
   14000a54f:	rex.R
   14000a550:	rex xor esi,DWORD PTR [rdi+rdi*1]
   14000a554:	rex.RXB
   14000a555:	rex.WRX pop rbx
   14000a557:	data16 (bad) 
   14000a559:	pop    rbx
   14000a55a:	je     0x14000a55d
   14000a55c:	add    si,WORD PTR [rdi+0x2]
   14000a560:	rex.WX
   14000a561:	rex.WRB jnp 0x14000a5bf
   14000a564:	push   rdx
   14000a565:	data16 (bad) 
   14000a567:	(bad)  
   14000a568:	(bad)  
   14000a569:	(bad)  
   14000a56a:	(bad)  
   14000a56b:	(bad)  
   14000a56c:	pop    rbp
   14000a56d:	imul   sp,WORD PTR [rsi+0x66],0x7466
   14000a573:	add    al,0x66
   14000a575:	or     BYTE PTR [rax+rax*1+0x0],al
   14000a579:	rex.X or ecx,DWORD PTR [rbx]
   14000a57c:	or     DWORD PTR [rbx],ecx
   14000a57e:	or     DWORD PTR [rcx],ecx
   14000a580:	or     DWORD PTR [rcx],ecx
   14000a582:	or     DWORD PTR [rbx],ecx
   14000a584:	or     BYTE PTR [rax],cl
   14000a586:	or     BYTE PTR [rax],cl
   14000a588:	or     BYTE PTR [rax],cl
   14000a58a:	or     BYTE PTR [rdx],cl
	...
   14000a5a8:	(bad)  
   14000a5a9:	cld    
   14000a5aa:	(bad)  
   14000a5ab:	add    ah,bh
   14000a5ad:	add    BYTE PTR [rbx],al
   14000a5af:	add    BYTE PTR [rax+0x100],al
	...
   14000a5fd:	add    BYTE PTR [rcx],al
   14000a5ff:	add    BYTE PTR [rax-0xfff100],al
   14000a605:	(bad)  
   14000a606:	inc    DWORD PTR [rax]
   14000a608:	sub    BYTE PTR [rax],al
   14000a60a:	add    BYTE PTR [rax],al
   14000a60c:	adc    BYTE PTR [rax],al
   14000a60e:	add    BYTE PTR [rax],al
   14000a610:	and    BYTE PTR [rax],al
   14000a612:	add    BYTE PTR [rax],al
   14000a614:	add    DWORD PTR [rax],eax
   14000a616:	or     BYTE PTR [rax],al
   14000a618:	add    BYTE PTR [rax],al
   14000a61a:	add    BYTE PTR [rax],al
   14000a61c:	add    BYTE PTR [rcx],al
	...
   14000a626:	add    BYTE PTR [rax],al
   14000a628:	add    BYTE PTR [rcx],al
   14000a62a:	add    BYTE PTR [rax],al
   14000a62c:	add    BYTE PTR [rcx],al
   14000a62e:	add    BYTE PTR [rax],al
   14000a630:	add    BYTE PTR [rax],al
   14000a632:	add    BYTE PTR [rax],al
   14000a634:	leave  
   14000a635:	cwde   
   14000a636:	push   rbp
   14000a637:	add    dl,cl
   14000a639:	(bad)  
   14000a63a:	pop    rax
   14000a63b:	add    bl,cl
   14000a63d:	sahf   
   14000a63e:	pop    rdi
   14000a63f:	add    dl,cl
   14000a641:	stos   DWORD PTR es:[rdi],eax
   14000a642:	outs   dx,DWORD PTR ds:[rsi]
   14000a643:	add    dh,dl
   14000a645:	mov    bl,0x6b
   14000a647:	add    cl,dl
   14000a649:	test   eax,0xafd00070
   14000a64e:	jo     0x14000a650
   14000a650:	fstp   TBYTE PTR [rbx+0x7820007d]
   14000a656:	retf   0x100
   14000a659:	jns    0x14000a643
   14000a65b:	add    BYTE PTR [rcx],al
   14000a65d:	jg     0x14000a653
   14000a65f:	add    BYTE PTR [rsp+rax*4-0x45],al
   14000a663:	add    BYTE PTR [rdx],ah
   14000a665:	adc    esi,0xfa830000
   14000a66b:	add    BYTE PTR [rax],al
   14000a66d:	mov    bh,bh
   14000a66f:	add    BYTE PTR [rdi+rcx*4],cl
   14000a672:	inc    DWORD PTR [rax]
   14000a674:	(bad)  
   14000a675:	xchg   edi,eax
   14000a676:	inc    DWORD PTR [rax]
   14000a678:	sub    al,0x8c
   14000a67a:	in     al,dx
   14000a67b:	add    BYTE PTR [rcx],dh
   14000a67d:	mov    esp,edx
   14000a67f:	add    BYTE PTR [rsi],bh
   14000a681:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a682:	inc    DWORD PTR [rax]
   14000a684:	rex.WRX xchg rcx,rax
   14000a686:	leave  
   14000a687:	add    BYTE PTR [rbp-0x6a],bl
   14000a68a:	(bad)
   14000a68d:	popf   
   14000a68e:	fild   DWORD PTR [rax]
   14000a690:	pop    rdi
   14000a691:	movabs eax,ds:0xa45e00d3a26d00d9
   14000a69a:	loope  0x14000a69c
   14000a69c:	push   rax
   14000a69d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a69e:	cli    
   14000a69f:	add    BYTE PTR [rdi-0x62ff686b],cl
   14000a6a5:	movabs ds:0xbcd500acb7af009a,eax
   14000a6ae:	mov    al,BYTE PTR [rax]
   14000a6b0:	loopne 0x14000a672
   14000a6b2:	add    DWORD PTR [rax],0x8dc0e2
   14000a6b8:	out    0xc5,al
   14000a6ba:	xchg   ebx,eax
   14000a6bb:	add    cl,ah
   14000a6bd:	enter  0xa3,0xe4
   14000a6c1:	retf   
   14000a6c2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a6c3:	add    dl,ah
   14000a6c5:	int    0xaa
   14000a6c7:	add    bh,ah
   14000a6c9:	shr    DWORD PTR [rbp-0x4d2a1600],1
   14000a6cf:	add    bl,ch
   14000a6d1:	fdiv   DWORD PTR [rsi-0x46251300]
   14000a6d7:	add    dh,ch
   14000a6d9:	fstp   TBYTE PTR [rax+rax*1+0xbfe2f3]
   14000a6e0:	cld    
   14000a6e1:	jrcxz  0x14000a69f
   14000a6e3:	add    BYTE PTR [rdx-0x5bff053c],dl
   14000a6e9:	sar    ch,cl
   14000a6eb:	add    bl,al
   14000a6ed:	leave  
   14000a6ee:	retf   0xf800
   14000a6f1:	out    0xc2,al
   14000a6f3:	add    bh,dh
   14000a6f5:	out    0xc8,eax
   14000a6f7:	add    cl,bh
   14000a6f9:	jmp    0x12efea7ca
   14000a6fe:	(bad)  
   14000a6ff:	add    ch,bl
   14000a701:	in     eax,dx
   14000a702:	std    
   14000a703:	add    dh,ah
   14000a705:	repnz inc BYTE PTR [rax]
	...
   14000aa2c:	(bad)  
   14000aa2d:	(bad)  
   14000aa2e:	inc    DWORD PTR [rax]
   14000aa30:	(bad)  
   14000aa31:	add    al,BYTE PTR [rcx]
   14000aa33:	add    DWORD PTR [rcx],eax
   14000aa35:	add    DWORD PTR [rcx],eax
   14000aa37:	add    DWORD PTR [rcx],eax
   14000aa39:	add    DWORD PTR [rcx],eax
   14000aa3b:	add    DWORD PTR [rcx],eax
   14000aa3d:	add    DWORD PTR [rdx],eax
   14000aa3f:	(bad)  
   14000aa40:	add    ch,BYTE PTR [rdx]
   14000aa42:	(bad)  
   14000aa43:	es es and eax,0x24242424
   14000aa4a:	and    al,0x24
   14000aa4c:	and    al,0x24
   14000aa4e:	(bad)  
   14000aa4f:	add    al,BYTE PTR [rdx]
   14000aa51:	sub    BYTE PTR [rcx],ah
   14000aa53:	and    BYTE PTR [rax],cl
   14000aa55:	sbb    eax,0xc0d0d15
   14000aa5a:	sbb    eax,0x24070706
   14000aa5f:	add    DWORD PTR [rcx],eax
   14000aa61:	sub    ah,BYTE PTR [rcx]
   14000aa63:	(bad)  
   14000aa64:	adc    eax,0xe0e0e0b
   14000aa69:	or     ecx,DWORD PTR [rdx]
   14000aa6b:	or     al,0x4
   14000aa6d:	(bad)  
   14000aa6e:	and    al,0x1
   14000aa70:	add    DWORD PTR [rdx],ebp
   14000aa72:	and    dl,BYTE PTR [rsi]
   14000aa74:	or     edx,DWORD PTR [rcx]
   14000aa76:	adc    BYTE PTR cs:[rdi],cl
   14000aa79:	pi2fw  mm1,QWORD PTR [rdx]
   14000aa7d:	add    eax,0x31010124
   14000aa82:	(bad)  
   14000aa83:	or     ecx,DWORD PTR [rdi]
   14000aa85:	adc    edi,edi
   14000aa87:	xor    eax,0xf0f0f1b
   14000aa8c:	or     bl,BYTE PTR [rsp]
   14000aa8f:	add    DWORD PTR [rcx],eax
   14000aa91:	xor    edx,DWORD PTR [rdi]
   14000aa93:	or     ecx,DWORD PTR [rdi]
   14000aa95:	adc    edi,edi
   14000aa97:	(bad)  
   14000aa98:	jmp    FWORD PTR [rsi]
   14000aa9a:	adc    BYTE PTR [rdi],cl
   14000aa9c:	or     ecx,DWORD PTR [rsp]
   14000aa9f:	add    DWORD PTR [rcx],eax
   14000aaa1:	xor    edx,DWORD PTR [rbx]
   14000aaa3:	(bad)  
   14000aaa4:	movups xmm7,xmm7
   14000aaa7:	(bad)  
   14000aaa8:	(bad)  
   14000aaa9:	push   QWORD PTR [rsp+rdx*1]
   14000aaac:	(bad)  
   14000aaad:	or     DWORD PTR [rcx+rax*1],esp
   14000aab0:	add    DWORD PTR [rbx],esi
   14000aab2:	adc    ecx,DWORD PTR [rsi]
   14000aab4:	movups xmm7,xmm7
   14000aab7:	(bad)  
   14000aab8:	(bad)  
   14000aab9:	push   QWORD PTR [rsp+rdx*1]
   14000aabc:	(bad)  
   14000aabd:	or     DWORD PTR [rcx+rax*1],esp
   14000aac0:	add    DWORD PTR [rbx],esi
   14000aac2:	(bad)  
   14000aac3:	(bad)  
   14000aac4:	movups xmm7,xmm7
   14000aac7:	(bad)  
   14000aac8:	jmp    FWORD PTR [rip+0xc0b0f10]        # 0x14c0bb9de
   14000aace:	and    al,0x1
   14000aad0:	add    DWORD PTR [rbx],esi
   14000aad2:	(bad)  
   14000aad3:	or     ecx,DWORD PTR [rdi]
   14000aad5:	adc    edi,edi
   14000aad7:	xor    eax,0xf0f0f14
   14000aadc:	or     bl,BYTE PTR [rip+0x33010125]        # 0x17301ac07
   14000aae2:	xor    BYTE PTR [rcx],bl
   14000aae4:	or     edx,DWORD PTR [rcx]
   14000aae6:	adc    BYTE PTR cs:[rdi],cl
   14000aae9:	(bad)  
   14000aaea:	ud2    
   14000aaec:	(bad)  
   14000aaed:	or     BYTE PTR [rsi],ah
   14000aaef:	add    DWORD PTR [rcx],eax
   14000aaf1:	xor    ebp,DWORD PTR [rbx+rbp*1]
   14000aaf4:	sbb    cl,BYTE PTR [rbx]
   14000aaf6:	(bad)  
   14000aaf7:	(bad)  
   14000aaf8:	(bad)  
   14000aaf9:	(bad)  
   14000aafa:	or     edx,DWORD PTR [rip+0x126201f]        # 0x14126cb1f
   14000ab00:	add    DWORD PTR [rbx],esi
   14000ab02:	sub    al,0x30
   14000ab04:	sub    al,0x2f
   14000ab06:	sbb    dl,BYTE PTR [rdx]
   14000ab08:	adc    bl,BYTE PTR [rax]
   14000ab0a:	(bad)  
   14000ab0b:	and    ah,BYTE PTR [rcx]
   14000ab0d:	and    DWORD PTR [rdi],esp
   14000ab0f:	add    DWORD PTR [rdx],eax
   14000ab11:	xor    esi,DWORD PTR [rbx]
   14000ab13:	xor    esi,DWORD PTR [rbx]
   14000ab15:	xor    esi,DWORD PTR [rbx]
   14000ab17:	xor    esi,DWORD PTR [rbx]
   14000ab19:	xor    esi,DWORD PTR [rdx]
   14000ab1b:	sub    ch,BYTE PTR [rdx]
   14000ab1d:	sub    BYTE PTR [rdx],ch
   14000ab1f:	add    al,BYTE PTR [rsi]
   14000ab21:	add    eax,DWORD PTR [rcx]
   14000ab23:	add    DWORD PTR [rcx],eax
   14000ab25:	add    DWORD PTR [rcx],eax
   14000ab27:	add    DWORD PTR [rcx],eax
   14000ab29:	add    DWORD PTR [rcx],eax
   14000ab2b:	add    DWORD PTR [rcx],eax
   14000ab2d:	add    DWORD PTR [rdx],eax
   14000ab2f:	(bad)  
	...
   14000ab70:	mov    DWORD PTR [rax+0x4e],edx
   14000ab73:	rex.RXB or eax,0xa1a0a
   14000ab79:	add    BYTE PTR [rax],al
   14000ab7b:	or     eax,0x52444849
   14000ab80:	add    BYTE PTR [rax],al
   14000ab82:	add    DWORD PTR [rax],eax
   14000ab84:	add    BYTE PTR [rax],al
   14000ab86:	add    DWORD PTR [rax],eax
   14000ab88:	or     BYTE PTR [rsi],al
   14000ab8a:	add    BYTE PTR [rax],al
   14000ab8c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   14000ab90:	data16 add BYTE PTR [rax],al
   14000ab93:	and    BYTE PTR [rax],al
   14000ab95:	rex.WB
   14000ab96:	rex.R
   14000ab97:	push   r12
   14000ab99:	js     0x14000ab37
   14000ab9b:	in     al,dx
   14000ab9c:	mov    ebp,0xd725b079
   14000aba1:	jns    0x14000abc2
   14000aba3:	idiv   bl
   14000aba5:	mov    esi,0xf7d77dd3
   14000abaa:	fmulp  st(4),st
   14000abac:	fwait
   14000abad:	add    eax,0x1d8300cb
   14000abb2:	and    BYTE PTR [rax],cl
   14000abb4:	outs   dx,BYTE PTR ds:[rsi]
   14000abb5:	and    cl,al
   14000abb7:	adc    r8b,BYTE PTR [r9+0x51]
   14000abbb:	mov    ah,0x23
   14000abbd:	mov    dl,BYTE PTR [rdx]
   14000abbf:	and    eax,0x5213a025
   14000abc4:	mov    eax,ebp
   14000abc6:	mov    BYTE PTR [rsi+0x4a],dl
   14000abc9:	rex.WRX stos BYTE PTR es:[rdi],al
   14000abcb:	loop   0x14000ac17
   14000abcd:	mov    ah,0x54
   14000abcf:	test   eax,0x4a54ae52
   14000abd4:	push   rsi
   14000abd5:	and    eax,0x5b2594a9
   14000abda:	xchg   ecx,eax
   14000abdb:	movabs ds:0xb15c64d94bcb6ca4,al
   14000abe4:	rex.WR push rdi
   14000abe6:	rex.WX mov fs,WORD PTR [rbx+r9*8]
   14000abea:	xchg   edx,eax
   14000abeb:	gs xchg ecx,eax
   14000abed:	or     al,0x17
   14000abef:	and    BYTE PTR [rcx+rax*1],ah
   14000abf2:	adc    BYTE PTR [rax+rax*8],al
   14000abf5:	rol    DWORD PTR [rax],0x43
   14000abf8:	(bad)  
   14000abf9:	xor    BYTE PTR [rbx],cl
   14000abfb:	data16 jnp 0x14000abf1
   14000abfe:	idiv   BYTE PTR [rbx-0x1a0c608b]
   14000ac04:	(bad)  
   14000ac05:	mov    bl,0xf4
   14000ac07:	jmp    0x14fbc77ca
   14000ac0c:	retf   
   14000ac0d:	cmp    al,0xcc
   14000ac0f:	rex.XB inc DWORD PTR [r8-0x112108c9]
   14000ac16:	shl    DWORD PTR [rdi-0x20c160b1],cl
   14000ac1c:	jp     0x14000abdc
   14000ac1e:	repz sbb eax,0x1a8d46a0
   14000ac24:	xor    eax,0x51a8d46a
   14000ac29:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac32:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac3b:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac44:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac4d:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac56:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac5f:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac68:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac71:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac7a:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac83:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac8c:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac95:	movabs ds:0x51a8d46a351a8d46,eax
   14000ac9e:	movabs ds:0x51a8d46a351a8d46,eax
   14000aca7:	movabs ds:0x51a8d46a351a8d46,eax
   14000acb0:	movabs ds:0x51a8d46a351a8d46,eax
   14000acb9:	movabs ds:0x51a8d46a351a8d46,eax
   14000acc2:	movabs ds:0x51a8d46a351a8d46,eax
   14000accb:	movabs ds:0x51a8d46a351a8d46,eax
   14000acd4:	movabs ds:0x51a8d46a351a8d46,eax
   14000acdd:	movabs ds:0x51a8d46a351a8d46,eax
   14000ace6:	movabs ds:0x51a8d46a351a8d46,eax
   14000acef:	movabs ds:0x51a8d46a351a8d46,eax
   14000acf8:	movabs ds:0x51a8d46a351a8d46,eax
   14000ad01:	movabs ds:0x51a8d46a351a8d46,eax
   14000ad0a:	movabs ds:0x51a8d46a351a8d46,eax
   14000ad13:	movabs ds:0x6a0375ed073d8d46,eax
   14000ad1c:	pop    rsp
   14000ad1d:	sbb    edi,DWORD PTR [rsi+rsi*8-0xd]
   14000ad21:	(bad)  
   14000ad23:	call   0x148403756
   14000ad28:	loopne 0x14000ad0a
   14000ad2a:	pushf  
   14000ad2b:	gs out dx,eax
   14000ad2d:	jo     0x14000adae
   14000ad2f:	repz loopne 0x14000acd2
   14000ad32:	stos   DWORD PTR es:[rdi],eax
   14000ad33:	jnp    0x14000ad51
   14000ad35:	(bad)  
   14000ad36:	add    BYTE PTR [rbx],dh
   14000ad38:	add    al,0xb0
   14000ad3b:	add    dl,BYTE PTR [rbx]
   14000ad3d:	movabs al,ds:0x5be4924c5f14a098
   14000ad46:	lea    esi,[rcx+rbx*8]
   14000ad49:	xor    al,0x82
   14000ad4b:	jrcxz  0x14000ad4d
   14000ad4d:	and    al,al
   14000ad4f:	cmp    al,BYTE PTR [rdi+rcx*2]
   14000ad52:	xor    eax,0xc7fdffc5
   14000ad58:	outs   dx,DWORD PTR ds:[rsi]
   14000ad59:	std    
   14000ad5a:	neg    BYTE PTR [rdi+rsi*8+0x350131ae]
   14000ad61:	add    edi,DWORD PTR [rax+0x15]
   14000ad64:	js     0x14000ad39
   14000ad66:	adc    edx,ebx
   14000ad68:	fwait
   14000ad69:	sbb    al,0xad
   14000ad6b:	test   cl,al
   14000ad6d:	cmp    al,0x7d
   14000ad6f:	call   0x15787aea5
   14000ad74:	fidivr DWORD PTR [rax+0x54c8d3d0]
   14000ad7a:	mov    al,ch
   14000ad7c:	push   rsi
   14000ad7d:	mov    dl,BYTE PTR [rsi+0x32]
   14000ad80:	mov    ecx,0xfbf2d1bc
   14000ad85:	sbb    edx,DWORD PTR [rdi]
   14000ad87:	iret   
   14000ad88:	cld    
   14000ad89:	xlat   BYTE PTR ds:[rbx]
   14000ad8a:	(bad)  
   14000ad8b:	(bad)  
   14000ad8c:	mov    edi,0x82accff
   14000ad91:	and    al,BYTE PTR [rdx]
   14000ad93:	adc    BYTE PTR [rcx+0x5e],al
   14000ad96:	jl     0x14000ad91
   14000ad98:	gs jns 0x14000ad3e
   14000ad9b:	fidivr DWORD PTR [rdi-0x2a136f61]
   14000ada1:	lea    edi,[rdi]
   14000ada3:	sti    
   14000ada4:	stc    
   14000ada5:	out    dx,eax
   14000ada6:	clc    
   14000ada7:	(bad)  
   14000ada8:	cli    
   14000ada9:	push   rcx
   14000adaa:	add    BYTE PTR [rdx+0x311982],al
   14000adb0:	adc    edx,DWORD PTR [rip+0x4d645f8d]        # 0x18d650d43
   14000adb6:	rex.WR movabs rbx,0xa1a7452772c22280
   14000adc0:	add    BYTE PTR [rax],al
   14000adc2:	add    al,0x1a
   14000adc4:	movsxd edi,ecx
   14000adc6:	mov    cl,BYTE PTR [rax]
   14000adc8:	or     eax,0xb23c1c55
   14000adcd:	(bad)  
   14000adce:	or     al,0x45
   14000add0:	enter  0x43fd,0x0
   14000add4:	push   rdx
   14000add5:	rex.RB out dx,al
   14000add7:	(bad)  
   14000add8:	or     DWORD PTR [rcx-0x16e3fbbf],0x45523636
   14000ade2:	retf   0x5217
   14000ade5:	add    BYTE PTR [rcx],dl
   14000ade7:	pop    rcx
   14000ade8:	and    DWORD PTR [rsi],ecx
   14000adea:	adc    BYTE PTR [rax+0x42c0bffc],cl
   14000adf0:	adc    ecx,0x60
   14000adf3:	push   0xffffffffffffff83
   14000adf5:	ins    BYTE PTR es:[rdi],dx
   14000adf6:	cmp    eax,0xdebedd71
   14000adfb:	jo     0x14000ae5c
   14000adfd:	sub    bl,bh
   14000adff:	jg     0x14000adb6
   14000ae01:	scas   eax,DWORD PTR es:[rdi]
   14000ae02:	mov    bh,0xbe
   14000ae04:	jb     0x14000adbc
   14000ae06:	xlat   BYTE PTR ds:[rbx]
   14000ae07:	pop    rbp
   14000ae08:	jmp    0x130d17ef8
   14000ae0d:	and    eax,0xb75ba7c1
   14000ae12:	sbb    al,0xbf
   14000ae14:	sbb    eax,eax
   14000ae16:	pop    rdi
   14000ae17:	add    ah,BYTE PTR [rax+0x8]
   14000ae1a:	rcl    BYTE PTR [rax],1
   14000ae1c:	in     al,0x77
   14000ae1e:	(bad)  
   14000ae1f:	mov    edi,0x1790034d
   14000ae24:	iret   
   14000ae25:	(bad)  
   14000ae26:	mov    WORD PTR [rax+0x16],fs
   14000ae29:	scas   al,BYTE PTR es:[rdi]
   14000ae2a:	mov    ecx,0xe7a4e006
   14000ae2f:	(bad)  
   14000ae30:	add    bh,al
   14000ae32:	imul   esi,DWORD PTR [rdi-0x38],0x4feed000
   14000ae39:	mov    ecx,0x39828c63
   14000ae3e:	mov    ebp,0x5694b469
   14000ae43:	movabs ds:0xdffa847ea818b8a0,al
   14000ae4c:	or     eax,0x35b24145
   14000ae51:	adc    al,0xa3
   14000ae53:	movabs eax,ds:0xfc3aa5445660d8d4
   14000ae5c:	icebp  
   14000ae5d:	(bad)
   14000ae60:	and    al,BYTE PTR [rdx-0x6e]
   14000ae63:	push   rax
   14000ae64:	lahf   
   14000ae65:	cdq    
   14000ae66:	xor    al,0x13
   14000ae68:	mov    BYTE PTR [rcx+rsi*4],bh
   14000ae6b:	test   BYTE PTR [rdx],bh
   14000ae6d:	in     al,dx
   14000ae6e:	out    dx,eax
   14000ae6f:	rex.X sub ax,0xa4c5
   14000ae74:	sub    BYTE PTR [rax],dl
   14000ae76:	cdq    
   14000ae77:	sub    eax,0x9fb79713
   14000ae7c:	adc    edi,DWORD PTR [rsi-0x39]
   14000ae7f:	in     eax,0x2b
   14000ae81:	xlat   BYTE PTR ds:[rbx]
   14000ae82:	pop    rbx
   14000ae83:	mov    ah,BYTE PTR [rbx+rbp*4+0x2dfcca20]
   14000ae8a:	std    
   14000ae8b:	stc    
   14000ae8c:	(bad)  
   14000ae8d:	ja     0x14000ae9f
   14000ae8f:	xchg   esp,eax
   14000ae90:	sub    ebx,DWORD PTR [rdi-0x17e5857d]
   14000ae96:	rex.RB push r15
   14000ae98:	xchg   DWORD PTR [rdx+0xbdc5fbe],esi
   14000ae9e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ae9f:	or     al,0xc8
   14000aea1:	xchg   DWORD PTR [rdx],ebx
   14000aea3:	fwait
   14000aea4:	(bad)  
   14000aea5:	sub    al,0xa2
   14000aea7:	(bad)  
   14000aea8:	add    al,0x40
   14000aeaa:	cmp    al,0x5f
   14000aeac:	adc    BYTE PTR [rdx+0x21],ah
   14000aeaf:	loope  0x14000ae7e
   14000aeb1:	or     al,0xeb
   14000aeb3:	rex.WXB or rax,0x72422b2c
   14000aeb9:	push   rbx
   14000aeba:	xchg   ebx,eax
   14000aebb:	out    dx,al
   14000aebc:	push   0x7e3c2c2a
   14000aec1:	mov    cl,0xaf
   14000aec3:	lahf   
   14000aec4:	pop    rbx
   14000aec5:	sbb    DWORD PTR [rcx+0x5c000ab1],ebp
   14000aecb:	cmp    bh,bh
   14000aecd:	retf   0xa763
   14000aed0:	rex.WRXB cmp rax,0x6cd575ff
   14000aed6:	push   0xffffffffffffffb5
   14000aed8:	jo     0x14000aec2
   14000aeda:	cwde   
   14000aedb:	push   0x74
   14000aedd:	xor    al,0x37
   14000aedf:	pop    rdx
   14000aee0:	rex.WXB xchg r12,rax
   14000aee2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000aee3:	(bad)  
   14000aee4:	adc    ah,BYTE PTR [rbp-0x4abb2c6a]
   14000aeea:	sbb    ecx,DWORD PTR [rcx+0x1254caba]
   14000aef0:	cs adc rax,0xffffffff83d6f57d
   14000aef7:	lea    edi,[rdi-0xa]
   14000aefa:	retf   
   14000aefb:	(bad)  
   14000aefc:	cmp    BYTE PTR [rdx-0x7e],dh
   14000aeff:	mov    ah,dh
   14000af01:	hlt    
   14000af02:	mov    bh,0xbf
   14000af04:	(bad)  
   14000af05:	jno    0x14000aed4
   14000af07:	mov    bl,ch
   14000af09:	mov    bl,0x9f
   14000af0b:	dec    esi
   14000af0d:	add    DWORD PTR [rax],eax
   14000af0f:	inc    DWORD PTR [rax+rax*8]
   14000af12:	and    eax,DWORD PTR [rax]
   14000af14:	test   BYTE PTR [rcx-0x2d888423],cl
   14000af1a:	lahf   
   14000af1b:	nop
   14000af1c:	add    edx,eax
   14000af1e:	adc    DWORD PTR [rcx+0x29],eax
   14000af21:	adc    al,0x0
   14000af24:	push   rdx
   14000af25:	(bad)
   14000af29:	stos   DWORD PTR es:[rdi],eax
   14000af2a:	push   rbx
   14000af2b:	rex.WXB and r13,rax
   14000af2e:	rex.XB clc 
   14000af30:	mov    ecx,DWORD PTR [rax-0x6c5f9e3f]
   14000af36:	xor    eax,0xb330012b
   14000af3b:	data16 movabs ds:0x8234c2d133ca553e,al
   14000af45:	cwde   
   14000af46:	cli    
   14000af47:	jnp    0x14000afb3
   14000af49:	cdq    
   14000af4a:	(bad)  
   14000af4b:	loopne 0x14000aee5
   14000af4d:	sub    DWORD PTR [rbx+0x52],ecx
   14000af50:	pop    rsi
   14000af51:	repz push rdx
   14000af53:	nop
   14000af54:	cdq    
   14000af55:	xor    al,0x11
   14000af57:	add    DWORD PTR [rsp+rdi*1+0x41],0x493c0897
   14000af5f:	(bad)  
   14000af60:	sbb    dl,BYTE PTR [rbx]
   14000af62:	lea    edi,[rbx+rdi*4+0x5c]
   14000af66:	adc    DWORD PTR [rsi-0x2b],esi
   14000af69:	add    dl,BYTE PTR [rax-0x2b33cc30]
   14000af6f:	and    esp,esi
   14000af71:	sahf   
   14000af72:	stos   DWORD PTR es:[rdi],eax
   14000af73:	add    eax,0x4962c224
   14000af78:	xchg   esp,eax
   14000af79:	movabs ds:0x880de21b9a0ff347,eax
   14000af82:	nop
   14000af83:	adc    al,cl
   14000af85:	add    BYTE PTR [rcx],cl
   14000af87:	mov    WORD PTR [rax-0x7e73527e],gs
   14000af8d:	add    BYTE PTR [rax+0x4a041440],dl
   14000af93:	(bad)  
   14000af94:	(bad)  
   14000af95:	(bad)  
   14000af96:	(bad)  
   14000af97:	adc    bh,bl
   14000af99:	mov    eax,0xbbeca046
   14000af9e:	(bad)  
   14000af9f:	cmp    al,0x96
   14000afa1:	fdivr  DWORD PTR [rsi+0x12888660]
   14000afa7:	pop    rbx
   14000afa8:	mov    gs,WORD PTR [rbx+0x1100965]
   14000afae:	mov    BYTE PTR [rcx],cl
   14000afb0:	and    BYTE PTR [rdx+0x22],ah
   14000afb3:	mov    BYTE PTR [rbp+0x6],dh
   14000afb6:	mov    BYTE PTR [rdi+0x60],bh
   14000afb9:	loopne 0x14000afa8
   14000afbb:	(bad)  
   14000afbc:	clc    
   14000afbd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000afbe:	mov    dh,0x42
   14000afc0:	jrcxz  0x14000b011
   14000afc2:	pop    rdi
   14000afc3:	faddp  st(6),st
   14000afc5:	and    BYTE PTR [rdi],dh
   14000afc7:	push   rcx
   14000afc8:	(bad)  
   14000afc9:	fldcw  WORD PTR [rdi]
   14000afcb:	jns    0x14000af63
   14000afcd:	(bad)  
   14000afce:	jrcxz  0x14000afa4
   14000afd0:	mov    bl,0x48
   14000afd2:	fwait
   14000afd3:	rex.WRB xor al,0x9b
   14000afd6:	or     ebp,DWORD PTR [rax-0x4c]
   14000afd9:	fisttp DWORD PTR [rax+0x1b]
   14000afdc:	rex.WRB jo 0x14000b002
   14000afdf:	add    DWORD PTR [rcx],ebp
   14000afe1:	test   DWORD PTR [rcx-0x5948c3da],eax
   14000afe7:	xchg   ecx,eax
   14000afe8:	sbb    eax,DWORD PTR [rcx+0x53]
   14000afeb:	jno    0x14000afa5
   14000afed:	mov    bh,0x38
   14000afef:	add    eax,0xefc12173
   14000aff4:	mov    esp,0xbfa3eafb
   14000aff9:	div    BYTE PTR [rdi]
   14000affb:	jg     0x14000afe2
   14000affd:	xchg   edi,eax
   14000affe:	mov    bh,0x40
   14000b000:	and    al,0x10
   14000b002:	xor    DWORD PTR [rax+0xb],edi
   14000b005:	push   0x184d710
   14000b00a:	jl     0x14000b002
   14000b00c:	repz fistp QWORD PTR [rcx]
   14000b00f:	movabs al,ds:0x2b1db0903c9c27af
   14000b019:	and    eax,0x948a88c9
   14000b01e:	mov    ecx,esi
   14000b020:	adc    DWORD PTR [rcx],eax
   14000b022:	lea    eax,[rdi+rsi*4+0x56f299a]
   14000b029:	mov    dl,0x28
   14000b02b:	or     BYTE PTR [rsi+0x60134889],cl
   14000b031:	cld    
   14000b032:	xor    eax,0xb751e289
   14000b037:	(bad)  
   14000b038:	pop    rax
   14000b039:	and    eax,0xa8e10180
   14000b03e:	(bad)  
   14000b03f:	xor    al,bl
   14000b041:	push   rax
   14000b042:	rol    BYTE PTR [rbp+r11*4+0x4e],1
   14000b047:	mov    edx,0x20b298a1
   14000b04c:	jmp    0x1805c8ca1
   14000b051:	and    BYTE PTR [rdx],dl
   14000b053:	(bad)  
   14000b054:	cmp    edx,DWORD PTR [rax]
   14000b056:	mov    ecx,0x66bd2691
   14000b05b:	stos   BYTE PTR es:[rdi],al
   14000b05c:	(bad)  
   14000b05d:	(bad)  
   14000b05e:	out    0x33,eax
   14000b060:	and    cl,BYTE PTR [rsi-0x77735f98]
   14000b066:	and    bh,bl
   14000b068:	cmp    eax,0xb4ee33e6
   14000b06d:	fsub   st,st(3)
   14000b06f:	and    ch,BYTE PTR [rsp+rax*1+0x9]
   14000b073:	sub    al,0x31
   14000b075:	push   rsp
   14000b076:	loopne 0x14000b03f
   14000b078:	sbb    edx,DWORD PTR [rcx-0x517bb8ef]
   14000b07e:	(bad)  
   14000b07f:	push   rdx
   14000b080:	mov    cl,0x48
   14000b082:	jl     0x14000b016
   14000b084:	or     BYTE PTR [rbp+0x49911520],0x84
   14000b08b:	sub    BYTE PTR [rcx-0x7bb7ed87],al
   14000b091:	adc    al,0x44
   14000b093:	enter  0x5ef2,0x44
   14000b097:	xchg   edx,eax
   14000b098:	sbb    eax,0x45049100
   14000b09d:	lahf   
   14000b09e:	adc    BYTE PTR [rbx-0x54],cl
   14000b0a2:	xor    DWORD PTR [rcx+0x2f6d6e39],esp
   14000b0a8:	push   rsi
   14000b0a9:	add    al,0x36
   14000b0ab:	rex.X (bad) 
   14000b0ad:	xchg   ebp,eax
   14000b0ae:	add    dl,BYTE PTR [rax]
   14000b0b0:	mov    eax,0x84bb9f5c
   14000b0b5:	mov    esp,0x5cbe22ea
   14000b0ba:	jl     0x14000b107
   14000b0bc:	not    eax
   14000b0be:	sahf   
   14000b0bf:	cdq    
   14000b0c0:	xchg   BYTE PTR [rbx+0x13e5812],al
   14000b0c6:	push   rax
   14000b0c7:	or     al,0xba
   14000b0c9:	outs   dx,DWORD PTR ds:[rsi]
   14000b0ca:	adc    ebx,ecx
   14000b0cc:	scas   eax,DWORD PTR es:[rdi]
   14000b0cd:	hlt    
   14000b0ce:	xor    bh,BYTE PTR [rdi+rdi*4]
   14000b0d1:	cmp    cl,BYTE PTR [rdx]
   14000b0d3:	lea    ecx,[rcx+rdx*4-0x2a1200c3]
   14000b0da:	jbe    0x14000b153
   14000b0dc:	cmp    bl,BYTE PTR [r13+0x581ee945]
   14000b0e3:	nop
   14000b0e4:	push   rsi
   14000b0e5:	mov    ebx,0x5737218b
   14000b0ea:	movzx  edx,WORD PTR [rbx+0x56852d43]
   14000b0f1:	sub    esp,DWORD PTR [rcx-0x21a16812]
   14000b0f7:	ror    BYTE PTR [rdi+0x5d],cl
   14000b0fa:	sbb    ch,BYTE PTR [rcx+0x7be0a7d8]
   14000b100:	mov    esp,0xfc7f87a1
   14000b105:	ret    0xefc9
   14000b108:	std    
   14000b109:	fiadd  WORD PTR [rax-0x6e]
   14000b10c:	and    DWORD PTR [rdi+0x1ced3ada],esi
   14000b112:	int3   
   14000b113:	sub    DWORD PTR [rcx-0x1c],ecx
   14000b116:	mov    dil,0xc3
   14000b119:	popf   
   14000b11a:	rex.RX movabs ds:0x36d84e22289c1a16,al
   14000b124:	ins    BYTE PTR es:[rdi],dx
   14000b125:	fs (bad) 
   14000b127:	sbb    al,0x6c
   14000b129:	stos   DWORD PTR es:[rdi],eax
   14000b12a:	(bad)  
   14000b12b:	jg     0x14000b126
   14000b12d:	add    DWORD PTR [rdi+0x4f],0x12
   14000b131:	push   rcx
   14000b132:	mov    gs,ebx
   14000b134:	adc    bh,dl
   14000b136:	test   BYTE PTR [rcx],al
   14000b138:	cld    
   14000b139:	out    0x5f,eax
   14000b13b:	clc    
   14000b13c:	out    dx,al
   14000b13d:	mov    edi,0x63e3706f
   14000b142:	rex.WB
   14000b143:	rex.X cmp BYTE PTR [rsi-0x58],sil
   14000b147:	add    DWORD PTR [rsi-0x56],0xffffffd0
   14000b14b:	outs   dx,BYTE PTR ds:[rsi]
   14000b14c:	sub    DWORD PTR [rbx+0x12361e2a],edx
   14000b152:	jne    0x14000b10d
   14000b154:	fisttp QWORD PTR [rax-0x32]
   14000b157:	mov    ah,0xd2
   14000b159:	in     al,0x6a
   14000b15b:	(bad)  
   14000b15c:	jo     0x14000b1ad
   14000b15e:	xor    DWORD PTR [rdi-0x439ae014],ecx
   14000b164:	mov    ecx,DWORD PTR [rsi+0x15]
   14000b167:	adc    DWORD PTR [rbp+0x3699248d],esp
   14000b16d:	in     eax,dx
   14000b16e:	sub    al,0xd7
   14000b170:	fstp   QWORD PTR [rbx+rbx*4+0x6e]
   14000b174:	cs push 0x1c549189
   14000b17a:	and    esi,DWORD PTR [rax-0x7d]
   14000b17d:	push   rcx
   14000b17e:	cmp    al,0x41
   14000b180:	cmp    esp,DWORD PTR [rdx+0x65]
   14000b183:	and    ecx,DWORD PTR [rax]
   14000b185:	add    al,0x41
   14000b187:	and    BYTE PTR [rbx],bh
   14000b189:	(bad)  
   14000b18a:	sbb    al,0xc9
   14000b18c:	mov    DWORD PTR [rcx],edx
   14000b18e:	add    eax,0x86958940
   14000b193:	jo     0x14000b20a
   14000b195:	lea    esi,[rbp+0x1c]
   14000b198:	pop    rcx
   14000b199:	mov    cl,0x41
   14000b19b:	loop   0x14000b1c2
   14000b19d:	pushf  
   14000b19e:	rex.R
   14000b19f:	or     BYTE PTR [r10+0x58807140],r8b
   14000b1a6:	ret    0xc062
   14000b1a9:	sub    al,BYTE PTR [rcx+rax*4]
   14000b1ac:	and    al,BYTE PTR [rax+riz*1]
   14000b1af:	xchg   BYTE PTR [rax],dl
   14000b1b1:	mov    ecx,0xc0b10836
   14000b1b6:	rex
   14000b1b7:	rex push 0xfffffffffffffffc
   14000b1ba:	jle    0x14000b1de
   14000b1bc:	add    BYTE PTR [rbx],bl
   14000b1be:	(bad)  
   14000b1bf:	fstp   QWORD PTR [rax+0x4]
   14000b1c2:	retf   0xc840
   14000b1c5:	xor    DWORD PTR [rdi-0x5761a7c0],ebx
   14000b1cb:	mov    BYTE PTR [rdx],cl
   14000b1cd:	(bad)  
   14000b1ce:	or     eax,DWORD PTR [rcx+0x5513420]
   14000b1d4:	adc    BYTE PTR [rdx],ah
   14000b1d6:	sub    bh,BYTE PTR [rax-0x19dfabae]
   14000b1dc:	xor    WORD PTR [rax],0x6209
   14000b1e1:	ins    DWORD PTR es:[rdi],dx
   14000b1e2:	div    DWORD PTR [rdx+0x55]
   14000b1e5:	mov    esi,0x6febac
   14000b1ea:	xor    BYTE PTR [rsi-0x65],bl
   14000b1ed:	sub    DWORD PTR [rbp+0x1b],edx
   14000b1f0:	xlat   BYTE PTR ds:[rbx]
   14000b1f1:	rex.WRXB cmp BYTE PTR [r13+0xc],0x7f
   14000b1f6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b1f7:	adc    BYTE PTR [rsi+rdi*4-0x16594e28],bh
   14000b1fe:	jbe    0x14000b253
   14000b200:	imul   edi,DWORD PTR [rip+0x32ac32b3],0x93c00010        # 0x172ace4bd
   14000b20a:	rex.WRXB popf 
   14000b20c:	cmp    BYTE PTR [rdi],bh
   14000b20e:	(bad)  
   14000b210:	pop    rdx
   14000b211:	ins    DWORD PTR es:[rdi],dx
   14000b212:	(bad)  
   14000b213:	(bad)  
   14000b214:	shr    ch,1
   14000b216:	vpaddusw ymm11,ymm11,YMMWORD PTR [rcx+0x5c]
   14000b21b:	xor    cl,BYTE PTR [rbp-0x6c67a892]
   14000b221:	push   rsp
   14000b222:	add    BYTE PTR [rsi-0x10b8fe83],bh
   14000b228:	call   0x16fc883fd
   14000b22d:	or     eax,0x6195b9e4
   14000b232:	add    bl,BYTE PTR [rax-0x2b]
   14000b235:	and    eax,DWORD PTR [rsi-0x42]
   14000b238:	jbe    0x14000b23b
   14000b23a:	jmp    0x14000b2b9
   14000b23c:	or     eax,0x6d2168d5
   14000b241:	xor    al,0xa1
   14000b243:	sbb    ch,BYTE PTR [rcx]
   14000b245:	xchg   esp,eax
   14000b246:	rex.WX mov al,0x36
   14000b249:	adc    ch,BYTE PTR [rbp+riz*2+0x6]
   14000b24d:	or     ebp,DWORD PTR [rcx]
   14000b24f:	rex.XB push r13
   14000b251:	fdiv   DWORD PTR [rsi+0x53]
   14000b254:	shr    edi,1
   14000b256:	dec    eax
   14000b258:	popf   
   14000b259:	or     edi,DWORD PTR [rdi+0x1cf793fa]
   14000b25f:	cmp    BYTE PTR [rip+0x6e6fa5de],bh        # 0x1ae705843
   14000b265:	mov    esp,0x9fc04ee1
   14000b26a:	sti    
   14000b26b:	ret    0x9fd3
   14000b26e:	rex.WRX cmp bpl,r15b
   14000b271:	fadd   st,st(1)
   14000b273:	outs   dx,BYTE PTR ds:[rsi]
   14000b274:	mov    ah,bl
   14000b276:	(bad)  
   14000b277:	sub    eax,0x7fd07140
   14000b27c:	mov    bl,0x46
   14000b27e:	movabs ds:0x7a669d4be99a772e,al
   14000b287:	test   eax,0x512b78a1
   14000b28c:	cmp    al,0x62
   14000b28e:	and    cl,BYTE PTR [rbp+0x44]
   14000b291:	(bad)  
   14000b292:	gs out 0xdf,eax
   14000b295:	rex.WR sbb BYTE PTR [rbx-0x4],r9b
   14000b299:	lea    edx,[rcx-0x6a]
   14000b29c:	(bad)  
   14000b29d:	cmc    
   14000b29e:	xor    edi,DWORD PTR [rbp+0x78]
   14000b2a1:	xchg   esp,eax
   14000b2a2:	jmp    0x14000b2e7
   14000b2a4:	fcmove st,st(0)
   14000b2a6:	movabs ds:0xcd04c1692b12d231,al
   14000b2af:	rex.WR (bad) 
   14000b2b1:	jbe    0x14000b2e3
   14000b2b3:	mov    edx,0xa44589ea
   14000b2b8:	cld    
   14000b2b9:	cmp    bh,ch
   14000b2bb:	shl    ch,0xda
   14000b2be:	movabs eax,ds:0x9304e146bc6cc21d
   14000b2c7:	rex.W rol BYTE PTR [rdx-0x5e],1
   14000b2cb:	jbe    0x14000b31f
   14000b2cd:	rex.WR ja 0x14000b315
   14000b2d0:	test   DWORD PTR [rsi+0x27572216],ebp
   14000b2d6:	pop    rbx
   14000b2d7:	adc    eax,0x8580faba
   14000b2dc:	(bad)
   14000b2e1:	lea    ecx,[rax]
   14000b2e3:	mov    bl,0xf5
   14000b2e5:	ins    DWORD PTR es:[rdi],dx
   14000b2e6:	xchg   ebp,eax
   14000b2e7:	in     eax,0x2a
   14000b2e9:	adc    DWORD PTR [rcx],ecx
   14000b2eb:	push   rdi
   14000b2ec:	xchg   esp,eax
   14000b2ed:	jae    0x14000b2d6
   14000b2ef:	add    dl,BYTE PTR [rdi]
   14000b2f1:	fbstp  TBYTE PTR [rbp-0x6a]
   14000b2f4:	xchg   DWORD PTR [rcx-0xb69136b],edx
   14000b2fa:	and    al,0xe6
   14000b2fc:	rex.XB (bad) 
   14000b2fe:	sti    
   14000b2ff:	rex.RX mov bpl,0xfb
   14000b302:	(bad)
   14000b306:	cld    
   14000b307:	cmp    eax,0x3c1265c2
   14000b30c:	adc    BYTE PTR [rsi-0x3a5eb739],dl
   14000b312:	(bad)  
   14000b313:	hlt    
   14000b314:	xor    eax,0x8904c5a6
   14000b319:	out    dx,eax
   14000b31a:	(bad)  
   14000b31b:	out    dx,al
   14000b31c:	stc    
   14000b31d:	mov    al,BYTE PTR [rdi*2-0x51a7ab60]
   14000b324:	xchg   ax,ax
   14000b326:	rex.XB sub eax,0x552d83a2
   14000b32c:	and    bh,BYTE PTR [rdi+rbp*4+0x27]
   14000b330:	mov    ah,0x12
   14000b332:	mov    ch,0x20
   14000b334:	lea    eax,[rcx+rbp*4]
   14000b337:	(bad)  
   14000b338:	imul   ebp,DWORD PTR [rax],0xa6450d32
   14000b33e:	popf   
   14000b33f:	sub    BYTE PTR [rax],dh
   14000b341:	sub    esp,DWORD PTR [rip+0xfa97422]        # 0x14faa2769
   14000b347:	rol    DWORD PTR [rdx-0x2322f04b],1
   14000b34d:	ds jl  0x14000b3b1
   14000b350:	cmp    eax,DWORD PTR [rbx+0x2371641f]
   14000b356:	outs   dx,DWORD PTR ds:[rsi]
   14000b357:	cmp    DWORD PTR [rsi+0x3ade8588],esi
   14000b35d:	cmp    cl,BYTE PTR [rbx+0x16dd8b0a]
   14000b363:	mov    dl,0xa4
   14000b365:	mov    ch,0xbe
   14000b367:	fsubr  QWORD PTR [rbp+0x77]
   14000b36a:	sbb    cl,BYTE PTR [rcx]
   14000b36c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b36d:	sub    eax,DWORD PTR [rbx+0x3cfff07c]
   14000b373:	mov    edi,0x82ea1ad9
   14000b378:	icebp  
   14000b379:	mov    eax,0xd5fd3f6b
   14000b37e:	rcr    ebx,cl
   14000b380:	out    dx,eax
   14000b381:	cli    
   14000b382:	xchg   ebx,eax
   14000b383:	out    dx,eax
   14000b384:	outs   dx,DWORD PTR ds:[rsi]
   14000b385:	jl     0x14000b379
   14000b387:	adc    esi,DWORD PTR [rdi+0x2d]
   14000b38a:	mov    ebp,0xdecfb138
   14000b38f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b390:	js     0x14000b355
   14000b392:	sbb    DWORD PTR [rax-0x56e40a9e],eax
   14000b398:	movabs ds:0x4cdfa98a3003f112,al
   14000b3a1:	xchg   edx,eax
   14000b3a2:	rex.WXB int 0x54
   14000b3a5:	lods   eax,DWORD PTR ds:[rsi]
   14000b3a6:	xor    eax,0x89a76f14
   14000b3ab:	sbb    dh,BYTE PTR [rdx+0x1998c275]
   14000b3b1:	(bad)  
   14000b3b2:	lea    eax,[rcx+0x0]
   14000b3b5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b3b6:	lea    esi,[rsi+rax*4]
   14000b3b9:	movabs ds:0xe6641a6fcb3f60fc,eax
   14000b3c2:	and    esi,DWORD PTR es:[rdx+0x10]
   14000b3c6:	(bad)  
   14000b3c7:	sub    eax,0x80222930
   14000b3cc:	mov    DWORD PTR [rsi+0x44],eax
   14000b3cf:	sbb    BYTE PTR [rcx],ch
   14000b3d1:	movabs ds:0x94c02c7191d27591,al
   14000b3da:	out    dx,al
   14000b3db:	out    0xc8,eax
   14000b3dd:	mov    WORD PTR [rcx],es
   14000b3df:	add    esp,DWORD PTR [rsi]
   14000b3e1:	movsxd ebp,DWORD PTR [rip+0x2c010176]        # 0x16c01b55d
   14000b3e7:	(bad)  
   14000b3e8:	rex.WX ins DWORD PTR es:[rdi],dx
   14000b3ea:	xor    DWORD PTR [rbp-0x48653a9b],0x4e35655e
   14000b3f4:	pop    rbp
   14000b3f5:	test   BYTE PTR [rcx+rsi*1-0x5637433a],0xb5
   14000b3fd:	sub    BYTE PTR [rsi-0x6a],cl
   14000b400:	(bad)  
   14000b401:	imul   ebx,edi,0x0
   14000b404:	stos   DWORD PTR es:[rdi],eax
   14000b405:	(bad)  
   14000b406:	or     ebx,DWORD PTR [rcx-0x77]
   14000b409:	leave  
   14000b40a:	push   rsi
   14000b40b:	std    
   14000b40c:	(bad)  
   14000b40d:	lahf   
   14000b40e:	xor    esp,DWORD PTR [rbx]
   14000b410:	rex.WRXB ja 0x14000b3b4
   14000b413:	and    eax,DWORD PTR [rbx+rax*4+0x3dd4a3c3]
   14000b41a:	xchg   ecx,eax
   14000b41b:	rex.R mov sil,0xbf
   14000b41e:	(bad)  
   14000b41f:	jns    0x14000b483
   14000b421:	jg     0x14000b464
   14000b423:	or     al,BYTE PTR [rsi-0x36a26fa8]
   14000b429:	in     al,dx
   14000b42a:	and    BYTE PTR [rdi],ch
   14000b42c:	xchg   edx,eax
   14000b42d:	sub    DWORD PTR [rsp+rdx*1+0x3f],ebx
   14000b431:	sbb    esp,eax
   14000b433:	xor    edi,DWORD PTR [rsi+rcx*1]
   14000b436:	xor    al,0x5c
   14000b438:	fadd   QWORD PTR [rcx-0x5e]
   14000b43b:	pop    rdx
   14000b43c:	(bad)  
   14000b43d:	mov    ch,0xa2
   14000b43f:	movabs ds:0x1b4575c5400e2277,al
   14000b448:	add    DWORD PTR [rsi+0x16],esp
   14000b44b:	shl    BYTE PTR [rax+0x4be64c99],0x49
   14000b452:	ret    0x253a
   14000b455:	fs or  eax,0x2640ad26
   14000b45b:	and    DWORD PTR [rsi],esi
   14000b45d:	mov    bl,BYTE PTR [rax+0x12]
   14000b460:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b461:	ret    0x6da3
   14000b464:	push   0x48
   14000b466:	pop    rdi
   14000b467:	out    0xdd,eax
   14000b469:	mov    ebx,0x8bad9b97
   14000b46e:	mov    ebp,0x6fab3ddc
   14000b473:	mov    BYTE PTR [rax-0x68],ah
   14000b476:	(bad)  
   14000b477:	scas   eax,DWORD PTR es:[rdi]
   14000b478:	ds dec ah
   14000b47b:	test   eax,0x2d2ee83f
   14000b480:	movhps QWORD PTR [rdi],xmm1
   14000b483:	fnstsw WORD PTR [rax]
   14000b485:	pop    rax
   14000b486:	cmp    bh,BYTE PTR [rdx+0x74]
   14000b489:	fmul   st,st(5)
   14000b48b:	xchg   ebx,eax
   14000b48c:	ins    BYTE PTR es:[rdi],dx
   14000b48d:	test   eax,0xd2de2c9d
   14000b492:	in     al,0xf
   14000b494:	std    
   14000b495:	cld    
   14000b496:	mov    ebx,0xfe07f97
   14000b49b:	rex.WRX ins DWORD PTR es:[rdi],dx
   14000b49d:	(bad)  
   14000b49e:	xlat   BYTE PTR ds:[rbx]
   14000b49f:	sti    
   14000b4a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b4a1:	imul   ebp,DWORD PTR [rdi-0x120550f8],0xfc1e5ecf
   14000b4ab:	iret   
   14000b4ac:	and    dh,dl
   14000b4ae:	fldpi  
   14000b4b0:	leave  
   14000b4b1:	cdq    
   14000b4b2:	clc    
   14000b4b3:	xchg   BYTE PTR [rbx],dh
   14000b4b5:	add    BYTE PTR [rdx],al
   14000b4b7:	fbstp  TBYTE PTR [rsi-0x14]
   14000b4ba:	jo     0x14000b4e3
   14000b4bc:	es jle 0x14000b4cf
   14000b4bf:	enter  0xa830,0xa7
   14000b4c3:	adc    al,0xf5
   14000b4c5:	push   rdx
   14000b4c6:	(bad)  
   14000b4c9:	pushf  
   14000b4ca:	push   rcx
   14000b4cb:	xchg   ebp,eax
   14000b4cc:	sbb    bh,ah
   14000b4ce:	lods   al,BYTE PTR ds:[rsi]
   14000b4cf:	pop    rsi
   14000b4d0:	cmp    bl,r9b
   14000b4d3:	jne    0x14000b48c
   14000b4d5:	lahf   
   14000b4d6:	jmp    0x14000b4f3
   14000b4d8:	rex.RX cdq 
   14000b4da:	cmp    DWORD PTR [rsi],esp
   14000b4dc:	and    al,BYTE PTR [rdi+0xa4da889]
   14000b4e2:	mov    cl,BYTE PTR [rcx+0x130d330c]
   14000b4e8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b4e9:	(bad)  
   14000b4ea:	movabs ds:0x270c35e446999b78,al
   14000b4f3:	lods   al,BYTE PTR ds:[rsi]
   14000b4f4:	fld    DWORD PTR es:[rax+0x4e]
   14000b4f8:	stos   BYTE PTR es:[rdi],al
   14000b4f9:	jnp    0x14000b502
   14000b4fb:	and    eax,0x53d9b58b
   14000b500:	ins    DWORD PTR es:[rdi],dx
   14000b501:	rex.WR retf 
   14000b503:	or     BYTE PTR [rcx+rdx*1+0x71208869],dl
   14000b50a:	stos   BYTE PTR es:[rdi],al
   14000b50b:	jne    0x14000b52e
   14000b50d:	hlt    
   14000b50e:	mov    esp,0x23408ae9
   14000b513:	adc    eax,0x65956046
   14000b518:	sub    eax,ecx
   14000b51a:	sub    DWORD PTR [rax+0x2],0xffffffb3
   14000b51e:	add    BYTE PTR [rdx+0x6d],ah
   14000b521:	mov    ebx,0xca889de4
   14000b526:	(bad)  
   14000b527:	fimul  DWORD PTR [rcx+0x4bf8292e]
   14000b52d:	and    DWORD PTR [rsi+0xf2bcba3],ecx
   14000b533:	jmp    0x14000b53e
   14000b535:	sub    esi,DWORD PTR [rdx]
   14000b537:	jnp    0x14000b55d
   14000b539:	lock xor DWORD PTR [rdx-0x45],0x6b1d97c4
   14000b541:	movabs eax,ds:0x68cd381009a9666f
   14000b54a:	push   rdx
   14000b54b:	inc    DWORD PTR [rsi-0x69]
   14000b54e:	mov    ecx,0xa3b7b37e
   14000b553:	jo     0x14000b530
   14000b555:	leave  
   14000b556:	push   rdi
   14000b557:	adc    DWORD PTR [rdx+rcx*1+0x0],ecx
   14000b55b:	and    ebp,DWORD PTR [rbp-0x3a]
   14000b55e:	push   rsp
   14000b55f:	ja     0x14000b561
   14000b561:	xor    BYTE PTR [rsi+0x6],al
   14000b564:	rex.X mov spl,0x2d
   14000b567:	rex.R (bad) 
   14000b569:	or     BYTE PTR [rsi],al
   14000b56b:	and    al,0x1a
   14000b56d:	(bad)  
   14000b56e:	(bad)  
   14000b56f:	cwde   
   14000b570:	movsxd eax,DWORD PTR [rsi+0x75191b24]
   14000b576:	outs   dx,DWORD PTR ds:[rsi]
   14000b577:	ins    BYTE PTR es:[rdi],dx
   14000b578:	stos   DWORD PTR es:[rdi],eax
   14000b579:	pop    rbx
   14000b57a:	rex.RXB (bad) 
   14000b57c:	xchg   ebx,eax
   14000b57d:	jge    0x14000b520
   14000b57f:	add    eax,0x34d1a624
   14000b584:	jns    0x14000b554
   14000b586:	cmp    cl,bh
   14000b588:	cmp    BYTE PTR [rbx],bl
   14000b58a:	cmc    
   14000b58b:	push   rbp
   14000b58c:	ficomp WORD PTR [rdi]
   14000b58e:	mov    al,0xe9
   14000b590:	out    0xd4,al
   14000b592:	ror    DWORD PTR [rbp-0x7284180b],cl
   14000b598:	(bad)  
   14000b599:	mov    ebp,0x7e0d9dbb
   14000b59e:	repnz scas al,BYTE PTR es:[rdi]
   14000b5a0:	(bad)
   14000b5a3:	jrcxz  0x14000b5bc
   14000b5a5:	mov    bh,0x90
   14000b5a7:	push   rbp
   14000b5a8:	scas   al,BYTE PTR es:[rdi]
   14000b5a9:	xlat   BYTE PTR ds:[rbx]
   14000b5aa:	(bad)  
   14000b5ab:	lahf   
   14000b5ac:	add    dh,BYTE PTR [rax+0x18]
   14000b5af:	shl    BYTE PTR [rbp+0x66fd8f59],0xc2
   14000b5b6:	sbb    ecx,edx
   14000b5b8:	add    dh,bh
   14000b5ba:	mov    edi,DWORD PTR [rdi-0x2]
   14000b5bd:	fadd   QWORD PTR [rdi+0x1]
   14000b5c0:	(bad)  
   14000b5c1:	movabs eax,ds:0x698a6533094f569b
   14000b5ca:	enter  0x23c4,0xe7
   14000b5ce:	and    edi,ebx
   14000b5d0:	xor    eax,0xce1114d7
   14000b5d5:	mov    ch,0x69
   14000b5d7:	(bad)  
   14000b5d8:	jae    0x14000b64d
   14000b5da:	and    bl,cl
   14000b5dc:	int    0x51
   14000b5de:	sub    eax,0x1d088872
   14000b5e3:	push   dx
   14000b5e5:	rex.R and al,0xcc
   14000b5e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b5e9:	adc    esp,esi
   14000b5eb:	jle    0x14000b610
   14000b5ed:	loope  0x14000b57c
   14000b5ef:	rex.R jno 0x14000b641
   14000b5f2:	adc    DWORD PTR [rdi-0x7b],esp
   14000b5f5:	xor    al,0x9b
   14000b5f7:	(bad)  
   14000b5f8:	repnz jrcxz 0x14000b5bc
   14000b5fb:	stos   BYTE PTR es:[rdi],al
   14000b5fc:	add    BYTE PTR [rbp+rcx*4-0x49697497],ch
   14000b603:	add    BYTE PTR [rbp+0x40],bl
   14000b606:	(bad)  
   14000b607:	rex.R xchg esp,eax
   14000b609:	adc    BYTE PTR [rcx+0x7],bl
   14000b60c:	(bad)  
   14000b60d:	adc    DWORD PTR [rcx+rax*4],ecx
   14000b610:	mov    ah,0x23
   14000b612:	xor    eax,0x80255b01
   14000b617:	or     eax,DWORD PTR [rdx+0x718b3e29]
   14000b61d:	(bad)  
   14000b61e:	or     BYTE PTR [rsi-0x78734b64],cl
   14000b624:	mov    esp,0x98c85277
   14000b629:	jne    0x14000b668
   14000b62b:	mov    DWORD PTR [rax],edx
   14000b62d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b62e:	(bad)  
   14000b62f:	ret    
   14000b630:	(bad)  
   14000b631:	xor    esi,DWORD PTR [rax-0x52e37224]
   14000b637:	xchg   ecx,eax
   14000b638:	outs   dx,DWORD PTR ds:[rsi]
   14000b639:	fist   DWORD PTR [rax+rdi*1]
   14000b63c:	ror    BYTE PTR [rsp+rcx*8],cl
   14000b63f:	mov    ecx,0xf2a81dca
   14000b644:	rex.WRB
   14000b645:	rex.WX sar BYTE PTR [rbp-0x59],cl
   14000b649:	xchg   BYTE PTR [rsi+0x2d],dl
   14000b64c:	movabs eax,ds:0x644436a28a48371
   14000b655:	stc    
   14000b656:	in     al,0xaa
   14000b658:	lea    edx,[rcx]
   14000b65a:	sub    eax,0xa06264c6
   14000b65f:	add    eax,0x16b10b9c
   14000b664:	and    ch,BYTE PTR [rbp-0x36]
   14000b667:	data16 sbb dh,BYTE PTR [rsi]
   14000b66a:	jae    0x14000b64a
   14000b66c:	cmp    BYTE PTR [rax+rdx*1+0x1c2a5b96],dl
   14000b673:	cmc    
   14000b674:	add    eax,0x40b29312
   14000b679:	and    BYTE PTR [rsi+0x13],al
   14000b67c:	rex.R (bad) 
   14000b67e:	sub    BYTE PTR [rdx+0x4fd538f2],r10b
   14000b685:	mov    edi,0x7992e0f2
   14000b68a:	out    dx,eax
   14000b68b:	ins    DWORD PTR es:[rdi],dx
   14000b68c:	rex.WXB imul rsp,r11,0xffffffff90035f72
   14000b693:	sar    BYTE PTR [rsp+rax*1],0xe8
   14000b697:	(bad)  
   14000b698:	(bad)  
   14000b699:	not    esi
   14000b69b:	jle    0x14000b6af
   14000b69d:	sar    BYTE PTR [rdi],0x9e
   14000b6a0:	jmp    0x14000b67b
   14000b6a2:	fild   WORD PTR [rax+rdi*4]
   14000b6a5:	add    DWORD PTR es:[rax-0x73],0x3046caaa
   14000b6ad:	(bad)  
   14000b6ae:	(bad)  
   14000b6af:	div    BYTE PTR [rsi+0x773f2169]
   14000b6b5:	push   rbx
   14000b6b6:	scas   eax,DWORD PTR es:[rdi]
   14000b6b7:	or     BYTE PTR [rax+0x6b],bl
   14000b6ba:	ror    esp,cl
   14000b6bc:	mov    ch,0x39
   14000b6be:	(bad)  
   14000b6bf:	mov    WORD PTR [rcx+rdx*1],gs
   14000b6c2:	movabs ds:0x88a30c44098ac4c5,eax
   14000b6cb:	repnz rex.R shl DWORD PTR [rax],1
   14000b6cf:	push   rcx
   14000b6d0:	cmp    al,0x50
   14000b6d2:	int3   
   14000b6d3:	sbb    DWORD PTR [rcx],edx
   14000b6d5:	hlt    
   14000b6d6:	mov    QWORD PTR [rdx+rbp*2-0x5e],r10
   14000b6db:	std    
   14000b6dc:	xor    BYTE PTR [rdx],ah
   14000b6de:	test   eax,0x6236d231
   14000b6e3:	(bad)  
   14000b6e4:	rex.R rol BYTE PTR [rsi],1
   14000b6e7:	enter  0x40cd,0x92
   14000b6eb:	adc    BYTE PTR [rax-0x67735dd5],dl
   14000b6f1:	jb     0x14000b6f5
   14000b6f3:	or     al,0x5
   14000b6f5:	iret   
   14000b6f6:	rex push rcx
   14000b6f8:	ret    
   14000b6f9:	and    al,0x82
   14000b6fb:	sub    eax,0x9f34b6db
   14000b700:	(bad)  
   14000b701:	rex.XB pop r14
   14000b703:	push   rdx
   14000b704:	rex.WRXB xchg r10,rax
   14000b706:	jge    0x14000b6dd
   14000b708:	fiadd  DWORD PTR [rip+0xffffffffbc317718]        # 0xfc322e26
   14000b70e:	scas   al,BYTE PTR es:[rdi]
   14000b70f:	cwde   
   14000b710:	(bad)  
   14000b711:	(bad)  
   14000b712:	movsxd ecx,DWORD PTR [rsi-0x7a]
   14000b715:	mov    ecx,0x32a8986a
   14000b71a:	rex.WRB (bad) 
   14000b71c:	xor    bh,dh
   14000b71e:	xchg   edx,eax
   14000b71f:	mov    bh,0x5c
   14000b721:	fimul  DWORD PTR [rax]
   14000b723:	mov    esp,0x7ac46909
   14000b728:	adc    eax,0x2a5956bc
   14000b72d:	cwde   
   14000b72e:	or     esi,DWORD PTR [rdx]
   14000b730:	pop    rax
   14000b731:	mov    DWORD PTR [rip+0xffffffff880445bd],edi        # 0xc804fcf4
   14000b737:	cdq    
   14000b738:	cld    
   14000b739:	cwde   
   14000b73a:	cmp    eax,0xb48e27cd
   14000b73f:	(bad)  
   14000b740:	xchg   DWORD PTR [rsi],eax
   14000b742:	mov    edx,0x3a3c00d0
   14000b747:	sub    DWORD PTR [rdi+0x378478e7],esi
   14000b74d:	or     eax,0x501222f6
   14000b752:	pushf  
   14000b753:	(bad)  
   14000b754:	xor    DWORD PTR [rsi-0x52d897ef],ecx
   14000b75a:	jbe    0x14000b795
   14000b75c:	(bad)  
   14000b75d:	test   DWORD PTR [rsp+rax*4+0x1b4b48b4],eax
   14000b764:	rol    DWORD PTR [rip+0x22b066d0],cl        # 0x162b11e3a
   14000b76a:	(bad)  
   14000b76b:	rex add ebp,DWORD PTR [rbx]
   14000b76e:	sub    eax,0x4c671335
   14000b773:	xchg   esp,eax
   14000b774:	xor    esp,DWORD PTR [rcx+0x57]
   14000b777:	sbb    al,BYTE PTR [rsi]
   14000b779:	add    DWORD PTR [rax],esi
   14000b77b:	and    ch,BYTE PTR [rbp+rcx*4-0x45b91b97]
   14000b782:	rex.RX shl BYTE PTR [rsi],1
   14000b785:	rex.X ret 
   14000b787:	rex.WRX jmp 0xd464b850
   14000b78d:	(bad)  
   14000b78e:	(bad)  
   14000b78f:	rex.RX
   14000b790:	rex.WR xchg rsi,rax
   14000b792:	add    eax,edi
   14000b794:	addr32 cwde 
   14000b796:	xchg   edi,eax
   14000b797:	leave  
   14000b798:	in     al,dx
   14000b799:	(bad)  
   14000b79a:	adc    al,0xfd
   14000b79c:	cmp    edi,DWORD PTR [rbx-0x2ccd1b24]
   14000b7a2:	cmp    bh,BYTE PTR [rax-0x49]
   14000b7a5:	(bad)  
   14000b7a6:	out    0xc5,eax
   14000b7a8:	ins    BYTE PTR es:[rdi],dx
   14000b7a9:	rex.RX and BYTE PTR [rbp+0x635cf352],r10b
   14000b7b0:	xor    eax,edx
   14000b7b2:	adc    edi,ecx
   14000b7b4:	mov    WORD PTR [rdx],cs
   14000b7b6:	(bad)  
   14000b7b7:	popf   
   14000b7b8:	js     0x14000b81d
   14000b7ba:	jmp    0x1ae423aad
   14000b7bf:	(bad)  
   14000b7c0:	mov    dh,bl
   14000b7c2:	sbb    BYTE PTR [rbx],dh
   14000b7c4:	rex.WRX (bad) 
   14000b7c6:	adc    eax,0x93a0c118
   14000b7cb:	xor    BYTE PTR [rdx+0x33],dh
   14000b7ce:	pop    rsi
   14000b7cf:	enter  0xdeec,0x8c
   14000b7d3:	fst    QWORD PTR [rbx-0x14]
   14000b7d6:	or     DWORD PTR [rbx],eax
   14000b7d8:	mov    BYTE PTR [rdi],bh
   14000b7da:	imul   ecx,DWORD PTR [rbp+rax*1-0x24],0x18906119
   14000b7e2:	mov    al,0xb1
   14000b7e4:	push   rbx
   14000b7e5:	je     0x14000b7f4
   14000b7e7:	add    DWORD PTR [rdx+rbx*2-0x3cdbeae2],edi
   14000b7ee:	add    al,0x3f
   14000b7f0:	stos   DWORD PTR es:[rdi],eax
   14000b7f1:	xor    BYTE PTR [rdi-0x43],dh
   14000b7f4:	scas   al,BYTE PTR es:[rdi]
   14000b7f5:	jno    0x14000b81b
   14000b7f7:	(bad)  
   14000b7f8:	rex.R add al,0x2d
   14000b7fb:	adc    DWORD PTR [rcx+0x12],ebp
   14000b7fe:	nop
   14000b7ff:	pop    rax
   14000b800:	loop   0x14000b7b9
   14000b802:	adc    dl,BYTE PTR [rsi+0x72315a19]
   14000b808:	es retf 0x6519
   14000b80c:	out    0xf2,al
   14000b80e:	cli    
   14000b80f:	xor    al,BYTE PTR [rax-0xeaf5ece]
   14000b815:	jne    0x14000b7ee
   14000b817:	push   rbp
   14000b818:	sar    al,1
   14000b81a:	movabs eax,ds:0x5d72608c5ebf8eb9
   14000b823:	rcr    DWORD PTR [rcx],cl
   14000b825:	shl    DWORD PTR [rbx+rdi*8+0x40262b0e],0x18
   14000b82d:	push   rax
   14000b82e:	mov    ebx,0xc020061
   14000b833:	repnz mov dl,0x1f
   14000b836:	xchg   ebp,eax
   14000b837:	adc    BYTE PTR [rcx],dh
   14000b839:	sbb    BYTE PTR [rip+0xffffffffb146002b],0xa        # 0xf146b86b
   14000b840:	loope  0x14000b82c
   14000b842:	rol    DWORD PTR [rsi-0x52],1
   14000b845:	sbb    eax,DWORD PTR [rdi]
   14000b847:	and    BYTE PTR [rax-0x263ff3c9],dh
   14000b84d:	add    esi,esp
   14000b84f:	sub    ah,BYTE PTR [rsi+rdi*8-0x5fae3aec]
   14000b856:	test   al,0xe2
   14000b858:	fwait
   14000b859:	(bad)  
   14000b85a:	rcr    DWORD PTR [rdx],0x6f
   14000b85d:	adc    al,0x9c
   14000b85f:	jns    0x14000b8d4
   14000b861:	xlat   BYTE PTR ds:[rbx]
   14000b862:	or     DWORD PTR [rbx+0x27],ebx
   14000b865:	mov    DWORD PTR [rax-0x7f6b6eee],ecx
   14000b86b:	rex.R
   14000b86c:	in     al,dx
   14000b86e:	(bad)  
   14000b870:	adc    BYTE PTR cs:[rsi+0x8],al
   14000b874:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b875:	jns    0x14000b83d
   14000b877:	je     0x14000b853
   14000b879:	imul   eax,DWORD PTR [rbx-0x2b],0x2c
   14000b87d:	xchg   edi,eax
   14000b87e:	sbb    eax,0xe4e3306e
   14000b883:	test   BYTE PTR [rbx+0x13],dl
   14000b886:	mov    DWORD PTR [rbx-0x36],edi
   14000b889:	sub    eax,0x6ee31166
   14000b88e:	pop    rdi
   14000b88f:	loopne 0x14000b905
   14000b891:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b892:	xor    ch,dh
   14000b894:	cld    
   14000b895:	fwait
   14000b896:	push   rsi
   14000b897:	jbe    0x14000b8f1
   14000b899:	jno    0x14000b89d
   14000b89b:	cli    
   14000b89c:	scas   eax,DWORD PTR es:[rdi]
   14000b89d:	fimul  DWORD PTR [rax+0x346358cc]
   14000b8a3:	jbe    0x14000b85c
   14000b8a5:	movabs eax,ds:0x32f385ec80278e
   14000b8ae:	and    DWORD PTR [rax-0x58],0x47a98f0b
   14000b8b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b8b6:	in     eax,0xba
   14000b8b8:	or     cl,BYTE PTR [rax]
   14000b8ba:	fimul  DWORD PTR [rbx]
   14000b8bc:	(bad)  
   14000b8bd:	loopne 0x14000b914
   14000b8bf:	gs (bad) 
   14000b8c1:	rex.WXB
   14000b8c2:	rex.W jae 0x14000b870
   14000b8c5:	rex.WR push rbx
   14000b8c7:	or     ch,dl
   14000b8c9:	(bad)  
   14000b8ca:	ror    BYTE PTR [rdx+0x5da7a23],1
   14000b8d0:	mov    bl,0xeb
   14000b8d2:	mov    eax,DWORD PTR [rsi]
   14000b8d4:	sbb    eax,0x24116001
   14000b8d9:	fisubr WORD PTR [rax-0x31ea2378]
   14000b8df:	stc    
   14000b8e0:	(bad)  
   14000b8e1:	sbb    DWORD PTR [rbp+0x3b1b9fa4],0xfe309d97
   14000b8eb:	out    0xba,al
   14000b8ed:	and    edi,0xfe5c53a7
   14000b8f3:	jae    0x14000b8a9
   14000b8f5:	addr32 loop 0x14000b88c
   14000b8f8:	enter  0xda9c,0xc3
   14000b8fc:	jmp    0x14000b8c1
   14000b8fe:	or     dh,ah
   14000b900:	rol    DWORD PTR [rsi],cl
   14000b902:	cli    
   14000b903:	stc    
   14000b904:	add    al,0xea
   14000b906:	xchg   ebx,esi
   14000b908:	mov    cs,WORD PTR [rdi+rbx*4+0x44]
   14000b90c:	sub    bh,bl
   14000b90e:	rex.WB sub bl,BYTE PTR [r10-0x72bbac7c]
   14000b915:	mov    ds,WORD PTR [rax]
   14000b917:	shr    BYTE PTR [rdi+rax*8],0xa8
   14000b91b:	add    cl,bl
   14000b91d:	add    al,0xd
   14000b91f:	(bad)  
   14000b920:	push   rsp
   14000b921:	imul   eax,DWORD PTR [rax],0x3b
   14000b924:	and    dh,BYTE PTR [rbx+rbp*4-0x67]
   14000b928:	cmp    al,0xe4
   14000b92a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b92b:	pop    rdi
   14000b92c:	push   rax
   14000b92d:	cmp    DWORD PTR [rsi],esi
   14000b92f:	imul   esp,DWORD PTR [rsi+0x6a],0x11670a9e
   14000b936:	jle    0x14000b930
   14000b938:	push   rcx
   14000b939:	xor    BYTE PTR [rdi+0x37],dh
   14000b93c:	iret   
   14000b93d:	pop    rbp
   14000b93e:	(bad)  
   14000b93f:	outs   dx,DWORD PTR ds:[rsi]
   14000b940:	mov    ecx,DWORD PTR [rdx+0x315c974e]
   14000b946:	(bad)  
   14000b947:	ret    
   14000b948:	(bad)  
   14000b949:	movabs ds:0xd00220d07f41e18d,al
   14000b952:	pop    rbx
   14000b953:	imul   ecx,DWORD PTR [rdx+0x6ad858b3],0x114a7e15
   14000b95d:	or     r11b,BYTE PTR [rdx+0x35]
   14000b961:	test   DWORD PTR [rax],esp
   14000b963:	xchg   edx,eax
   14000b964:	sub    BYTE PTR [rbp-0x5aedeeed],dl
   14000b96a:	xor    ah,BYTE PTR [rdx]
   14000b96c:	xchg   edx,eax
   14000b96d:	mov    ah,0xd3
   14000b96f:	sbb    eax,0x68c24a90
   14000b974:	(bad)  
   14000b975:	ror    BYTE PTR [rsi-0x46],0xc5
   14000b979:	popf   
   14000b97a:	rex.B xor al,0xd6
   14000b97d:	(bad)  
   14000b97e:	xor    ebx,ebp
   14000b980:	cld    
   14000b981:	xchg   ebp,eax
   14000b982:	jbe    0x14000b94f
   14000b984:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b985:	xor    ecx,0x21
   14000b988:	sbb    DWORD PTR [rdi],ebp
   14000b98a:	neg    DWORD PTR [rdx+0x18]
   14000b98d:	sar    DWORD PTR [rsi+riz*2],0x1
   14000b991:	rex.RB mov r15d,0x402d6e86
   14000b997:	jl     0x14000b936
   14000b999:	push   0x4053f9eb
   14000b99e:	(bad)  
   14000b99f:	or     DWORD PTR [rsi-0xbf3ffbd],esp
   14000b9a5:	cmp    BYTE PTR [rbp-0xa76e2e5],ch
   14000b9ab:	sbb    DWORD PTR [rbp+0x58],edx
   14000b9ae:	or     eax,0xa2a515c2
   14000b9b3:	mov    ss,WORD PTR [rcx-0x53]
   14000b9b6:	add    esp,ebp
   14000b9b8:	mov    BYTE PTR [rdx],dl
   14000b9ba:	(bad)
   14000b9bd:	(bad)
   14000b9c0:	cdq    
   14000b9c1:	mov    al,0x19
   14000b9c3:	adc    ecx,DWORD PTR [rdx+0x53]
   14000b9c6:	mov    ss,ecx
   14000b9c8:	lods   al,BYTE PTR ds:[rsi]
   14000b9c9:	jrcxz  0x14000ba30
   14000b9cb:	rex.X pop QWORD PTR [rdi]
   14000b9ce:	fs mov ch,0xde
   14000b9d1:	fisub  WORD PTR [rax-0x70]
   14000b9d4:	or     al,0xb6
   14000b9d6:	(bad)  
   14000b9d7:	pop    rdx
   14000b9d8:	jp     0x14000ba45
   14000b9da:	lods   eax,DWORD PTR ds:[rsi]
   14000b9db:	xor    DWORD PTR [rdx],ebx
   14000b9dd:	or     eax,0x52d36dd3
   14000b9e2:	in     al,dx
   14000b9e3:	ins    BYTE PTR es:[rdi],dx
   14000b9e4:	adc    al,0x1f
   14000b9e6:	std    
   14000b9e7:	ret    
   14000b9e8:	and    BYTE PTR [rax],dl
   14000b9ea:	rex.WXB and BYTE PTR [r14+0x26],dil
   14000b9ee:	imul   ecx,DWORD PTR [rdi+0x191022b2],0xffffff90
   14000b9f5:	out    dx,al
   14000b9f6:	or     DWORD PTR [rcx+0x1300e790],0x41
   14000b9fd:	xchg   ebx,eax
   14000b9fe:	or     eax,0xdb06c9b2
   14000ba03:	and    bh,BYTE PTR [rcx+0x39661836]
   14000ba09:	sub    ecx,esi
   14000ba0b:	add    eax,0xe69a7392
   14000ba10:	pushf  
   14000ba11:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ba12:	movabs ds:0x44c0175dbaa34d1a,al
   14000ba1b:	mov    dh,0xa3
   14000ba1d:	test   al,0x68
   14000ba1f:	mov    BYTE PTR gs:[rbx-0x24],dl
   14000ba23:	sbb    DWORD PTR [rcx],0xd2e6224c
   14000ba29:	mov    cl,0x68
   14000ba2b:	rol    BYTE PTR [rbx-0x3a],0xcb
   14000ba2f:	mov    ebp,0x16691
   14000ba34:	or     al,0x46
   14000ba36:	push   rbp
   14000ba37:	(bad)  
   14000ba38:	mov    edi,0x9df0b8c5
   14000ba3d:	ficom  WORD PTR [rdx]
   14000ba3f:	or     eax,0x6e248c09
   14000ba44:	xchg   esi,ecx
   14000ba46:	out    0x34,al
   14000ba48:	add    DWORD PTR [rax+rcx*8],eax
   14000ba4b:	es rex.WR
   14000ba4d:	rex.RXB
   14000ba4e:	lea    bx,[rdx+0x3]
   14000ba52:	fmul   DWORD PTR [rcx]
   14000ba54:	sbb    al,0xcf
   14000ba56:	stc    
   14000ba57:	adc    esp,DWORD PTR [rax]
   14000ba59:	rcr    DWORD PTR [rsp+rsi*2+0x1cff1173],cl
   14000ba60:	and    bl,BYTE PTR [rdi-0x4b09b304]
   14000ba66:	retf   
   14000ba67:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ba68:	(bad)  
   14000ba69:	and    ecx,edx
   14000ba6b:	(bad)  
   14000ba6c:	rex.WRB sub al,0x4e
   14000ba6f:	add    BYTE PTR [rcx+rdx*8+0x6d5cdbd4],dh
   14000ba76:	lea    ebp,[rsi+0xcaceb9c]
   14000ba7c:	xchg   ebx,eax
   14000ba7d:	xchg   BYTE PTR [rsi+0x42],al
   14000ba80:	and    BYTE PTR [rcx-0x3b2eed55],dh
   14000ba86:	sub    eax,0x622c45fa
   14000ba8b:	sbb    eax,0x371d664b
   14000ba90:	in     eax,0x67
   14000ba92:	add    BYTE PTR [rdx],al
   14000ba94:	(bad)  
   14000ba95:	in     eax,0x97
   14000ba97:	nop
   14000ba98:	(bad)  
   14000ba99:	adc    BYTE PTR [rip+0xffffffffe0201f7e],cl        # 0x12020da1d
   14000ba9f:	fisubr DWORD PTR [rdx]
   14000baa1:	rex
   14000baa2:	rex.RX
   14000baa3:	rex.WRB ins BYTE PTR es:[rdi],dx
   14000baa5:	xor    al,0x6e
   14000baa7:	add    al,BYTE PTR [rax]
   14000baa9:	lods   al,BYTE PTR ds:[rsi]
   14000baaa:	ss out dx,eax
   14000baac:	rex (bad) 
   14000baae:	pop    rbp
   14000baaf:	rex.RX scas eax,DWORD PTR es:[rdi]
   14000bab1:	jno    0x14000ba43
   14000bab3:	(bad)  
   14000bab4:	fidiv  DWORD PTR [rdi+0x29]
   14000bab7:	push   0x34
   14000bab9:	adc    eax,0x91126a91
   14000babe:	mov    BYTE PTR [rcx],dh
   14000bac0:	(bad)  
   14000bac1:	(bad)  
   14000bac2:	std    
   14000bac3:	ins    BYTE PTR es:[rdi],dx
   14000bac4:	mov    al,0xba
   14000bac6:	(bad)  
   14000bac7:	jmp    0xf349f208
   14000bacc:	test   eax,0x4936d3b9
   14000bad1:	mov    bl,0x6d
   14000bad3:	test   al,0xd1
   14000bad5:	xor    BYTE PTR [rsi+rsi*1-0x33fa677c],bl
   14000badc:	loop   0x14000bab3
   14000bade:	mov    WORD PTR [rcx-0x68],?
   14000bae1:	ror    DWORD PTR [rsi],0x26
   14000bae4:	push   rdx
   14000bae5:	cmp    BYTE PTR [rax],dl
   14000bae7:	jae    0x14000badc
   14000bae9:	mov    eax,0xbaa3aecc
   14000baee:	stos   BYTE PTR es:[rdi],al
   14000baef:	jne    0x14000ba88
   14000baf1:	jle    0x14000bb08
   14000baf3:	lods   eax,DWORD PTR ds:[rsi]
   14000baf4:	sbb    DWORD PTR [rcx+rbx*4+0x6],ecx
   14000baf8:	adc    al,0x99
   14000bafa:	and    al,0x4e
   14000bafc:	fild   DWORD PTR es:[rip+0xffffffff94919622]        # 0xd4925125
   14000bb03:	out    dx,al
   14000bb04:	rex.WRB
   14000bb05:	rex (bad) 
   14000bb07:	rex.RXB mov r11b,0x0
   14000bb0a:	mov    bl,0x4c
   14000bb0c:	add    BYTE PTR [rax+0x1f],bl
   14000bb0f:	rex.X mov bpl,0xc8
   14000bb12:	push   rax
   14000bb13:	jae    0x14000bac2
   14000bb15:	add    esp,ebp
   14000bb17:	add    BYTE PTR [rcx-0x49ff2e55],dh
   14000bb1d:	mov    cl,0xe2
   14000bb1f:	adc    edi,DWORD PTR [rbx-0x7085a387]
   14000bb25:	jae    0x14000bb02
   14000bb27:	test   eax,0x60675a0b
   14000bb2c:	(bad)  
   14000bb2d:	ret    0xee77
   14000bb30:	movabs al,ds:0x7cf57fa30345d7c9
   14000bb39:	imul   esi,DWORD PTR [rbx-0x1b],0xffffffd2
   14000bb3d:	or     ebx,0x24ca76a3
   14000bb43:	add    BYTE PTR [rdx-0x24779c98],bl
   14000bb49:	in     al,0x14
   14000bb4b:	outs   dx,BYTE PTR ds:[rsi]
   14000bb4c:	xor    eax,0x7f2c7067
   14000bb51:	sbb    DWORD PTR [rdi+0x44a025cc],eax
   14000bb57:	out    0xe3,al
   14000bb59:	int3   
   14000bb5a:	or     cl,dl
   14000bb5c:	xor    DWORD PTR [rdx-0x79bb5d54],ecx
   14000bb62:	cmp    BYTE PTR [rsp+rdi*2],dh
   14000bb65:	or     DWORD PTR [rax],eax
   14000bb67:	loope  0x14000bb59
   14000bb69:	lock je 0x14000bb55
   14000bb6c:	mov    dh,BYTE PTR [rbp+0x6cd81dd6]
   14000bb72:	fadd   QWORD PTR [rbp+rdx*4-0x4297f85b]
   14000bb79:	jae    0x14000bbb2
   14000bb7b:	(bad)  
   14000bb7c:	mov    cl,0xd5
   14000bb7e:	ins    BYTE PTR es:[rdi],dx
   14000bb7f:	(bad)  
   14000bb80:	jbe    0x14000bb9d
   14000bb82:	(bad)  
   14000bb83:	mov    ah,0x64
   14000bb85:	add    DWORD PTR [rcx+0x36],0x58
   14000bb89:	fistp  WORD PTR [rax]
   14000bb8b:	(bad)  
   14000bb8c:	hlt    
   14000bb8d:	(bad)  
   14000bb8e:	mov    al,0x52
   14000bb90:	movabs ds:0x2d9a4996cdcd6dba,al
   14000bb99:	ret    
   14000bb9a:	int    0xa6
   14000bb9c:	nop
   14000bb9d:	rex.WX mov WORD PTR [rbp+0x6],fs
   14000bba1:	pop    rsp
   14000bba2:	(bad)  
   14000bba3:	mov    ah,0xcf
   14000bba5:	jmp    0x1a3fc43dd
   14000bbaa:	in     al,dx
   14000bbab:	lea    edx,[rax+rbp*1-0x28]
   14000bbaf:	rex.RXB jg 0x14000bb6e
   14000bbb2:	sbb    al,BYTE PTR [rsi+0x30]
   14000bbb5:	(bad)  [rax+rax*2]
   14000bbb8:	pop    rax
   14000bbb9:	(bad)  
   14000bbba:	pop    rsp
   14000bbbb:	rex.RB (bad) 
   14000bbbd:	fdiv   QWORD PTR [rdx]
   14000bbbf:	stos   DWORD PTR es:[rdi],eax
   14000bbc0:	mov    DWORD PTR [rax],ebx
   14000bbc2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bbc3:	call   0x1a80a8509
   14000bbc8:	xor    eax,0x300692b1
   14000bbcd:	rex.XB (bad) 
   14000bbcf:	rol    BYTE PTR [rdx],1
   14000bbd1:	mov    WORD PTR [rdx],gs
   14000bbd3:	mov    bl,0x8
   14000bbd5:	mov    dh,0x6d
   14000bbd7:	mov    ch,0x9
   14000bbd9:	mov    al,0x13
   14000bbdb:	rex.WX
   14000bbdc:	rex.R out dx,eax
   14000bbde:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bbdf:	add    ebx,eax
   14000bbe1:	cmp    ebx,DWORD PTR [rdi-0x5f1015a5]
   14000bbe7:	test   al,0xcd
   14000bbe9:	push   rsp
   14000bbea:	mul    DWORD PTR [rdi+0x12]
   14000bbed:	ds rex.WX xchg rbp,rax
   14000bbf0:	adc    ecx,edx
   14000bbf2:	(bad)
   14000bbf5:	sbb    DWORD PTR [rax+rdi*1-0x3f],0xffffffe7
   14000bbfa:	mov    bh,0x92
   14000bbfc:	outs   dx,BYTE PTR ds:[rsi]
   14000bbfd:	(bad)  
   14000bbfe:	add    eax,0xb09616a2
   14000bc03:	mov    ?,WORD PTR [rbx+0x7b7873f5]
   14000bc09:	(bad)  
   14000bc0a:	xor    al,0x8e
   14000bc0c:	enter  0x9415,0xa5
   14000bc10:	push   rsi
   14000bc11:	rcr    eax,1
   14000bc13:	pop    rax
   14000bc14:	retf   0x9603
   14000bc17:	fsubr  st,st(5)
   14000bc19:	ret    
   14000bc1a:	pop    rbx
   14000bc1b:	xor    edx,ebp
   14000bc1d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bc1e:	mov    cl,0xc8
   14000bc20:	add    eax,0xc6b4d308
   14000bc25:	or     dh,BYTE PTR [rax-0x60]
   14000bc28:	call   QWORD PTR [rdx]
   14000bc2a:	(bad)  
   14000bc2b:	neg    BYTE PTR [rdi-0x3e]
   14000bc2e:	lods   eax,DWORD PTR ds:[rsi]
   14000bc2f:	jmp    0x14000bc10
   14000bc31:	rex (bad) 
   14000bc33:	sub    eax,0xc2efb46c
   14000bc38:	(bad)  
   14000bc39:	xor    DWORD PTR [rdi-0x442d352d],0x36ec5d28
   14000bc43:	(bad)  
   14000bc44:	xchg   esi,eax
   14000bc45:	(bad)  
   14000bc46:	sbb    ebx,ecx
   14000bc48:	sub    bl,cl
   14000bc4a:	xchg   ebx,ebx
   14000bc4c:	mov    ebp,0x5b1b7ac
   14000bc51:	(bad)  
   14000bc53:	sub    ebx,DWORD PTR [rbp-0x69123cd8]
   14000bc59:	push   rcx
   14000bc5a:	lods   eax,DWORD PTR ds:[rsi]
   14000bc5b:	xchg   esi,eax
   14000bc5c:	test   al,0x76
   14000bc5e:	push   rdi
   14000bc5f:	jae    0x14000bbf3
   14000bc61:	or     BYTE PTR [rdx+rbp*2-0x54],dl
   14000bc65:	fild   WORD PTR [rcx+0x33f3d55d]
   14000bc6b:	(bad)  
   14000bc6c:	test   eax,0x855c7baa
   14000bc71:	mov    esp,0x4b30463a
   14000bc76:	sbb    ebx,DWORD PTR [rax]
   14000bc78:	push   0xffffffffd7e53899
   14000bc7d:	popf   
   14000bc7e:	sub    cl,BYTE PTR [rsi-0x36]
   14000bc81:	xlat   BYTE PTR ds:[rbx]
   14000bc82:	add    edx,DWORD PTR [rbx]
   14000bc84:	pushf  
   14000bc85:	xor    BYTE PTR [rax-0x65b2b31d],0xdc
   14000bc8c:	lahf   
   14000bc8d:	add    BYTE PTR [rbx],al
   14000bc8f:	or     DWORD PTR [rdi],0x396f8e25
   14000bc95:	sbb    BYTE PTR [rcx+0x1d804da],bl
   14000bc9b:	movsxd esi,ecx
   14000bc9d:	out    dx,eax
   14000bc9e:	and    dl,BYTE PTR [rdx+0x4e]
   14000bca1:	clc    
   14000bca2:	adc    DWORD PTR [rdi],edx
   14000bca4:	fiadd  WORD PTR [rcx-0x1b]
   14000bca7:	scas   eax,DWORD PTR es:[rdi]
   14000bca8:	adc    ch,BYTE PTR [rax-0x36ecee55]
   14000bcae:	addr32 (bad) 
   14000bcb0:	test   BYTE PTR [rdi],bh
   14000bcb2:	push   rsi
   14000bcb3:	jrcxz  0x14000bd25
   14000bcb5:	or     ebx,ebx
   14000bcb7:	out    0x4e,eax
   14000bcb9:	loop   0x14000bc97
   14000bcbb:	jo     0x14000bcce
   14000bcbd:	rex.R or eax,0x784616e
   14000bcc3:	in     al,0x59
   14000bcc5:	cmp    al,0x90
   14000bcc7:	(bad)  
   14000bcc8:	sbb    DWORD PTR [rbx-0x34],0xffffffd9
   14000bccc:	jo     0x14000bd1d
   14000bcce:	mov    bh,0x78
   14000bcd0:	sub    BYTE PTR [rsi+rdx*4-0x11],bh
   14000bcd4:	jrcxz  0x14000bcdf
   14000bcd6:	fist   DWORD PTR [rcx]
   14000bcd8:	jl     0x14000bcaa
   14000bcda:	cdq    
   14000bcdb:	std    
   14000bcdc:	sbb    ah,BYTE PTR [rbp-0x59]
   14000bcdf:	xchg   esi,eax
   14000bce0:	fwait
   14000bce1:	push   0x4dc8836a
   14000bce6:	jns    0x14000bcad
   14000bce8:	rcr    DWORD PTR [rip+0xffffffffb5b77d5e],cl        # 0xf5b83a4c
   14000bcee:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bcef:	data16 mov bl,al
   14000bcf2:	pop    rbx
   14000bcf3:	ffreep st(3)
   14000bcf5:	movabs eax,ds:0xeac23f85c77167ad
   14000bcfe:	loop   0x14000bd3b
   14000bd00:	jo     0x14000bcf7
   14000bd02:	enter  0xb443,0xd5
   14000bd06:	mov    ebp,0xeb4ed27
   14000bd0b:	es rex.WXB retf 
   14000bd0e:	rex.WXB int 0xcd
   14000bd11:	cmc    
   14000bd12:	in     eax,dx
   14000bd13:	rex.B jg 0x14000bcc9
   14000bd16:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bd17:	repz lea ebp,[rip+0xffffffffa2fbb7ce]        # 0xe2fc74ec
   14000bd1e:	pop    rdx
   14000bd1f:	fisttp DWORD PTR [rdx+0x35]
   14000bd22:	pop    rbx
   14000bd23:	pop    rdx
   14000bd24:	jne    0x14000bd60
   14000bd26:	pop    rdx
   14000bd27:	xor    eax,0xd0118e5b
   14000bd2c:	stos   DWORD PTR es:[rdi],eax
   14000bd2d:	ror    BYTE PTR [rax],cl
   14000bd2f:	sub    dh,ah
   14000bd31:	ds stc 
   14000bd33:	in     al,0x6b
   14000bd35:	(bad)  
   14000bd36:	add    al,0xd5
   14000bd38:	cmp    ah,BYTE PTR [rdi]
   14000bd3a:	imul   eax,DWORD PTR [rax],0xee7b4022
   14000bd40:	add    bl,bl
   14000bd43:	repz ficom WORD PTR [rax+rcx*4+0x4f924305]
   14000bd4b:	movabs al,ds:0x16a8038d883549ea
   14000bd54:	sbb    ebp,eax
   14000bd56:	fiadd  DWORD PTR [rdi]
   14000bd58:	mov    al,0x13
   14000bd5a:	(bad)  
   14000bd5b:	lea    eax,[rip+0x8821031]        # 0x14882cd92
   14000bd61:	mov    BYTE PTR [rax-0xe],bh
   14000bd64:	movabs ds:0xc57eea01bfd5f89c,al
   14000bd6d:	sub    bl,BYTE PTR [rax+rdi*2+0x6a9b065e]
   14000bd74:	repz in al,dx
   14000bd76:	mov    esp,esi
   14000bd78:	cld    
   14000bd79:	call   0x1202dce7e
   14000bd7e:	add    BYTE PTR [rsi-0xf],dl
   14000bd81:	nop
   14000bd82:	jle    0x14000bda0
   14000bd84:	outs   dx,DWORD PTR ds:[rsi]
   14000bd85:	(bad)  
   14000bd86:	iret   
   14000bd87:	movabs al,ds:0xc4f956899b0ac321
   14000bd90:	rex.XB push r15
   14000bd92:	sbb    al,0x63
   14000bd94:	mov    dh,dl
   14000bd96:	cmc    
   14000bd97:	mov    BYTE PTR [rbx-0x7e],bl
   14000bd9a:	rex.RX
   14000bd9b:	adc    BYTE PTR [rbx],r10b
   14000bd9e:	mov    ecx,0xd0a5f1
   14000bda3:	mov    dl,BYTE PTR [rbp+0x6a]
   14000bda6:	lea    r8d,[r8+0x698e1663]
   14000bdad:	adc    al,0x2d
   14000bdaf:	mov    bh,0xac
   14000bdb1:	xor    cl,dl
   14000bdb3:	rex.XB sbb al,0x59
   14000bdb6:	jnp    0x14000bdd4
   14000bdb8:	rex.RXB xlat BYTE PTR ds:[rbx]
   14000bdba:	(bad)  
   14000bdbb:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000bdbd:	jge    0x14000bdd2
   14000bdbf:	scas   al,BYTE PTR es:[rdi]
   14000bdc0:	fdivr  st(0),st
   14000bdc2:	xor    BYTE PTR [rbp+0x6aa0fa1d],ch
   14000bdc8:	(bad)  
   14000bdc9:	pop    rcx
   14000bdca:	in     al,dx
   14000bdcb:	(bad)  
   14000bdcc:	rex.XB mov edi,DWORD PTR [r10+0x6d]
   14000bdd0:	ins    DWORD PTR es:[rdi],dx
   14000bdd1:	imul   esi,DWORD PTR [rax-0x28dc8a87],0x5b
   14000bdd8:	cmp    ecx,ebp
   14000bdda:	inc    BYTE PTR [rax-0x47584488]
   14000bde0:	fst    st(2)
   14000bde2:	imul   esi,DWORD PTR [rdi+0x477693ab],0x19532544
   14000bdec:	sar    DWORD PTR [rsi+rcx*1],0xbe
   14000bdf0:	rcl    BYTE PTR [rbx],1
   14000bdf2:	(bad)  
   14000bdf3:	(bad)  
   14000bdf4:	scas   eax,DWORD PTR es:[rdi]
   14000bdf5:	adc    DWORD PTR [rcx],0xa8dd5f54
   14000bdfb:	sbb    al,bl
   14000bdfd:	pop    rbx
   14000bdfe:	push   rsp
   14000bdff:	cmp    eax,0xa2034ff
   14000be04:	adc    esp,DWORD PTR [rax-0x61bf9888]
   14000be0a:	sbb    DWORD PTR [rcx-0x7c],ebp
   14000be0d:	retf   0x5c66
   14000be10:	(bad)  
   14000be11:	cmp    r12d,r10d
   14000be14:	fcomi  st,st(5)
   14000be16:	xor    edx,DWORD PTR [rbx-0x65]
   14000be19:	add    BYTE PTR [rbx],bh
   14000be1b:	or     al,0xbe
   14000be1e:	jnp    0x14000be82
   14000be20:	fwait
   14000be21:	pop    rax
   14000be22:	push   0x67
   14000be24:	leave  
   14000be25:	mov    edi,0xf2faf123
   14000be2a:	repz cmp DWORD PTR [rsi+riz*1-0xc1af395],esi
   14000be32:	pop    rcx
   14000be33:	outs   dx,DWORD PTR ds:[rsi]
   14000be34:	mov    ebp,0x67c5f97d
   14000be39:	outs   dx,DWORD PTR ds:[rsi]
   14000be3a:	(bad)  
   14000be3b:	cmp    edi,DWORD PTR [rdx]
   14000be3d:	fsub   DWORD PTR [rdx]
   14000be3f:	sbb    al,0xc0
   14000be41:	add    DWORD PTR [rcx+riz*8+0x78ebe6c3],ebp
   14000be48:	sar    BYTE PTR [rdi+rbp*2-0x3e],0x35
   14000be4d:	mov    cl,0x6d
   14000be4f:	(bad)  
   14000be50:	and    eax,0xa910360b
   14000be56:	sahf   
   14000be57:	pop    rsi
   14000be58:	rol    BYTE PTR [rsp+rcx*8-0x60],0x2c
   14000be5d:	in     eax,0x1
   14000be5f:	mov    edi,0x1d2fc69a
   14000be64:	je     0x14000bdeb
   14000be66:	and    bl,bl
   14000be68:	sub    DWORD PTR [rsi],ebx
   14000be6a:	mov    dl,0xf1
   14000be6c:	jge    0x14000bdf8
   14000be6e:	jnp    0x14000be79
   14000be70:	xor    BYTE PTR [rsi-0x1],0x15
   14000be74:	sbb    al,0x3f
   14000be76:	std    
   14000be77:	(bad)  
   14000be78:	jno    0x14000be4d
   14000be7a:	sub    edi,edi
   14000be7c:	(bad)  
   14000be7d:	xchg   edi,eax
   14000be7e:	outs   dx,DWORD PTR ds:[rsi]
   14000be7f:	stc    
   14000be80:	push   rcx
   14000be81:	lods   al,BYTE PTR ds:[rsi]
   14000be82:	(bad)  
   14000be83:	(bad)  
   14000be84:	movabs al,ds:0x25e1f0f752e8e1ba
   14000be8d:	jge    0x14000be74
   14000be8f:	repnz cli 
   14000be91:	(bad)  
   14000be92:	imul   ebp,DWORD PTR [rbp+0x53],0x1b
   14000be96:	fld    QWORD PTR [rdi+0x7a6c46c9]
   14000be9c:	jge    0x14000be43
   14000be9e:	(bad)  
   14000be9f:	cmp    bh,BYTE PTR [rdx]
   14000bea1:	jmp    0x1aad628d4
   14000bea6:	or     bl,al
   14000bea8:	xor    al,BYTE PTR [rdx]
   14000beaa:	es scas eax,DWORD PTR es:[rdi]
   14000beac:	retf   
   14000bead:	push   rsp
   14000beae:	pop    rcx
   14000beaf:	(bad)  [rsp+rdx*1+0xc]
   14000beb3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000beb4:	ror    ch,cl
   14000beb6:	adc    eax,0xc6baf046
   14000bebb:	int    0x4a
   14000bebd:	in     eax,0x73
   14000bebf:	push   rsi
   14000bec0:	ror    DWORD PTR [rdx-0x5a641ff7],1
   14000bec6:	jb     0x14000be8f
   14000bec8:	add    dl,ah
   14000beca:	adc    DWORD PTR [rbx],0x60
   14000becd:	push   rax
   14000bece:	(bad)
   14000bed3:	or     al,0x60
   14000bed5:	addr32 in al,dx
   14000bed7:	adc    dh,bh
   14000bed9:	mov    ebx,0x2eafe21b
   14000bede:	cmp    al,0x1b
   14000bee0:	addr32 or al,0x33
   14000bee3:	stos   DWORD PTR es:[rdi],eax
   14000bee4:	(bad)  
   14000bee5:	js     0x14000bed4
   14000bee7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bee8:	xchg   ebx,eax
   14000bee9:	rex.WRXB fidivr WORD PTR [r9+0x76]
   14000beed:	add    eax,DWORD PTR [rdi+0x7403a33]
   14000bef3:	mov    al,0x8a
   14000bef5:	xchg   ebp,ecx
   14000bef7:	movabs ds:0x6af7cd59419e4078,eax
   14000bf00:	mov    eax,0xd9124efd
   14000bf05:	imul   BYTE PTR [rax]
   14000bf07:	rex.WXB jno 0x14000bf39
   14000bf0a:	lods   eax,DWORD PTR ds:[rsi]
   14000bf0b:	mov    ebp,0xed6f8ee4
   14000bf10:	cmp    eax,0x662721d7
   14000bf15:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bf16:	sub    eax,0xe7a05d61
   14000bf1b:	or     eax,0xc100b325
   14000bf20:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bf21:	and    BYTE PTR [rip+0x44942ea],ah        # 0x1444a0211
   14000bf27:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bf28:	movabs ds:0xdcf471f7f17b1c55,eax
   14000bf31:	lahf   
   14000bf32:	(bad)  
   14000bf33:	in     eax,0xd6
   14000bf35:	(bad)  
   14000bf36:	movsxd esp,ebx
   14000bf38:	enter  0xd487,0xb1
   14000bf3c:	fwait
   14000bf3d:	xchg   edi,eax
   14000bf3e:	cmp    eax,ebx
   14000bf40:	rex.XB mov edi,r9d
   14000bf43:	sub    esp,edi
   14000bf45:	test   DWORD PTR cs:[rdi-0x3d],0xd5ad1911
   14000bf4d:	sub    bh,cl
   14000bf4f:	sub    bh,ch
   14000bf51:	cmc    
   14000bf52:	push   rbp
   14000bf53:	mov    dl,0xd0
   14000bf55:	(bad)  
   14000bf56:	leave  
   14000bf57:	ret    0x5692
   14000bf5a:	imul   ebp,DWORD PTR [rdx-0x40],0xc1b2fc4a
   14000bf61:	and    bl,al
   14000bf63:	movabs al,ds:0x5f54618944ccdfa4
   14000bf6c:	xchg   BYTE PTR [rcx-0xb],bh
   14000bf6f:	mov    es,edx
   14000bf71:	xlat   BYTE PTR ds:[rbx]
   14000bf72:	add    edx,DWORD PTR [rbx-0x18528234]
   14000bf78:	jae    0x14000bf7c
   14000bf7a:	rex.X
   14000bf7b:	fs loop 0x14000bf73
   14000bf7e:	pop    rcx
   14000bf7f:	sbb    eax,0x2623b408
   14000bf84:	icebp  
   14000bf85:	jmp    0x131173d7a
   14000bf8a:	rex.WRXB xchg r14,rax
   14000bf8c:	cli    
   14000bf8d:	adc    ecx,esi
   14000bf8f:	iret   
   14000bf90:	ins    DWORD PTR es:[rdi],dx
   14000bf91:	cs xchg esp,eax
   14000bf93:	push   rbp
   14000bf94:	mov    eax,0x3b9ead1
   14000bf99:	(bad)  
   14000bf9a:	jle    0x14000bf9b
   14000bf9c:	(bad)
   14000bf9f:	retf   0x6ab2
   14000bfa2:	rol    DWORD PTR [rax],cl
   14000bfa4:	(bad)  
   14000bfa5:	fs mov esi,0x13cbf789
   14000bfab:	push   0x2040862
   14000bfb0:	lods   eax,DWORD PTR ds:[rsi]
   14000bfb1:	js     0x14000bfa4
   14000bfb3:	(bad)  
   14000bfb4:	sbb    BYTE PTR [rbp-0x140842a2],bh
   14000bfba:	fsubr  st(3),st
   14000bfbc:	cmp    BYTE PTR [rdx+0x242fdd42],ah
   14000bfc2:	cmp    eax,DWORD PTR [rax-0x53b7c67e]
   14000bfc8:	(bad)  
   14000bfc9:	js     0x14000bf74
   14000bfcb:	sbb    esp,DWORD PTR [rdi]
   14000bfcd:	sbb    al,0x20
   14000bfcf:	xchg   edi,eax
   14000bfd0:	scas   eax,DWORD PTR es:[rdi]
   14000bfd1:	rcr    bh,cl
   14000bfd3:	ds cs add ecx,edi
   14000bfd7:	jno    0x14000bf63
   14000bfd9:	mov    edx,0x18d8fe23
   14000bfde:	scas   al,BYTE PTR es:[rdi]
   14000bfdf:	loop   0x14000bfc7
   14000bfe1:	push   rbx
   14000bfe2:	inc    DWORD PTR [rdx]
   14000bfe4:	(bad)  
   14000bfe5:	cs jge 0x14000bff3
   14000bfe8:	push   rdi
   14000bfe9:	out    dx,al
   14000bfea:	jl     0x14000bf70
   14000bfec:	xchg   edx,eax
   14000bfed:	test   DWORD PTR [rbx-0x2d],ebx
   14000bff0:	mov    ebx,0x5d59beef
   14000bff5:	pop    rdx
   14000bff6:	fstp   DWORD PTR [rsp+rbp*4]
   14000bff9:	pop    rsp
   14000bffa:	pop    rsp
   14000bffb:	int    0x25
   14000bffd:	iret   
   14000bffe:	fldcw  WORD PTR [rax-0x73]
   14000c001:	push   rcx
   14000c002:	and    dh,BYTE PTR ss:[rbx]
   14000c005:	sbb    al,0x70
   14000c007:	rcr    BYTE PTR [rbp-0x2c],cl
   14000c00a:	stos   BYTE PTR es:[rdi],al
   14000c00b:	fnsave [rsi]
   14000c00d:	pushf  
   14000c00e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c00f:	xchg   BYTE PTR [rax-0x7b],bl
   14000c012:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c013:	cmp    eax,0x260b5ede
   14000c018:	leave  
   14000c019:	sbb    al,0x3d
   14000c01b:	cmp    eax,0x29707351
   14000c020:	push   rsp
   14000c021:	pop    rsi
   14000c022:	ja     0x14000c091
   14000c024:	loopne 0x14000c07b
   14000c026:	cwde   
   14000c027:	mov    ebp,DWORD PTR [rdi+0x55]
   14000c02a:	in     al,dx
   14000c02b:	fnstcw WORD PTR [rsi+0x29180c00]
   14000c031:	and    al,BYTE PTR [rcx]
   14000c033:	fnstsw WORD PTR [rax+0x67f89f9a]
   14000c039:	rex.WB std 
   14000c03b:	imul   esp,ebp,0xe75563e2
   14000c041:	loope  0x14000c018
   14000c043:	adc    ebx,DWORD PTR [rdi-0x45]
   14000c046:	out    dx,eax
   14000c047:	(bad)  
   14000c048:	(bad)  
   14000c049:	rol    DWORD PTR [rbx],0x44
   14000c04c:	xchg   DWORD PTR [rax+0x3b],esi
   14000c04f:	popf   
   14000c050:	(bad)  
   14000c051:	rex.WRXB cdqe 
   14000c053:	(bad)  
   14000c054:	(bad)
   14000c057:	sub    DWORD PTR [rax-0x6e],0x8b188242
   14000c05e:	sub    eax,eax
   14000c060:	fcomp  st(2)
   14000c062:	lods   al,BYTE PTR ds:[rsi]
   14000c063:	(bad)  
   14000c064:	ret    
   14000c065:	sbb    eax,0x8100982f
   14000c06a:	rex.WXB sar BYTE PTR [r15],cl
   14000c06d:	adc    BYTE PTR [rdi-0x5d7e0a49],bh
   14000c073:	ficom  WORD PTR [rax+0x7f]
   14000c076:	movabs eax,ds:0xde84e67956d6dbd6
   14000c07f:	lock or al,0x24
   14000c082:	push   0xffffffffe2bebe07
   14000c087:	sbb    bh,bh
   14000c089:	lods   eax,DWORD PTR ds:[rsi]
   14000c08a:	mov    ebp,0xbfc70a79
   14000c08f:	repz sbb ebx,eax
   14000c092:	cmp    dh,dh
   14000c094:	ret    
   14000c095:	pop    rax
   14000c096:	mov    ebx,0xec7c93ed
   14000c09b:	xchg   BYTE PTR [rbx],al
   14000c09d:	in     eax,dx
   14000c09e:	in     eax,0xa5
   14000c0a0:	rex.WRX (bad) 
   14000c0a2:	repnz cdq 
   14000c0a4:	rex.WXB std 
   14000c0a6:	(bad)  
   14000c0a7:	jg     0x14000c0ad
   14000c0a9:	or     al,0x47
   14000c0ab:	pushf  
   14000c0ac:	out    0x9a,eax
   14000c0ae:	int3   
   14000c0af:	xor    BYTE PTR [rbx],ah
   14000c0b1:	mov    ch,0xd0
   14000c0b3:	(bad)  
   14000c0b4:	rex.WB ja 0x14000c0b8
   14000c0b7:	sub    ch,BYTE PTR [rbp+0x8]
   14000c0ba:	and    eax,0x6bfbc089
   14000c0bf:	(bad)  
   14000c0c0:	ss push rax
   14000c0c2:	in     al,0x2e
   14000c0c4:	cwde   
   14000c0c5:	(bad)  
   14000c0c6:	movsxd ecx,DWORD PTR [rax+riz*4-0xa6bed9e]
   14000c0cd:	mov    ecx,0x954a83dd
   14000c0d2:	mov    edi,0x3ff68ad6
   14000c0d7:	test   BYTE PTR [rcx+rax*1+0x8905f04],0x89
   14000c0df:	or     BYTE PTR [rbp+0x48ec7116],dl
   14000c0e5:	cld    
   14000c0e6:	adc    esi,DWORD PTR [rax]
   14000c0e8:	rcl    DWORD PTR [rax+rsi*2-0x27],1
   14000c0ec:	(bad)  
   14000c0ed:	adc    DWORD PTR [rdi],esp
   14000c0ef:	(bad)  
   14000c0f0:	mov    dl,0x31
   14000c0f2:	jb     0x14000c0f2
   14000c0f4:	addr32 mov dh,0xbd
   14000c0f7:	fidivr WORD PTR [rsi]
   14000c0f9:	cmc    
   14000c0fa:	fdiv   QWORD PTR [rbx+0x6f]
   14000c0fd:	pop    rbx
   14000c0fe:	xor    ecx,ebx
   14000c100:	leave  
   14000c101:	add    cl,BYTE PTR [rdi]
   14000c103:	icebp  
   14000c104:	or     ecx,edi
   14000c106:	push   rbx
   14000c107:	fmul   QWORD PTR [rbp+0x6d136097]
   14000c10d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c10e:	xchg   ebp,eax
   14000c10f:	jmp    0x175f609ba
   14000c114:	jbe    0x14000c0be
   14000c116:	adc    ch,BYTE PTR [rbx-0x6d3924a0]
   14000c11c:	fst    DWORD PTR [rdx]
   14000c11e:	mov    edx,0xbee43c4b
   14000c123:	(bad)  
   14000c124:	sbb    al,BYTE PTR [rbx+rbx*2]
   14000c127:	(bad)  
   14000c128:	pop    rdi
   14000c129:	mov    DWORD PTR [rax-0x75],eax
   14000c12c:	stc    
   14000c12d:	cmp    DWORD PTR [rax-0x41913569],0x29
   14000c134:	ins    BYTE PTR es:[rdi],dx
   14000c135:	ror    cl,1
   14000c137:	test   ax,0xfc10
   14000c13b:	cwde   
   14000c13c:	rex.RXB sub al,0xf6
   14000c13f:	xchg   edx,eax
   14000c140:	adc    DWORD PTR [rcx-0x17],esp
   14000c143:	cld    
   14000c144:	push   rdi
   14000c145:	sar    BYTE PTR [rcx-0x4151cb06],1
   14000c14b:	in     eax,dx
   14000c14c:	addr32 rex.WB sbb rax,0xffffffffffbd2fb8
   14000c153:	ficomp WORD PTR [rbx-0x2c]
   14000c156:	retf   
   14000c157:	out    0x56,eax
   14000c159:	cli    
   14000c15a:	imul   ebp,DWORD PTR [rbx],0xffffffeb
   14000c15d:	pop    rdx
   14000c15e:	mov    ah,0x26
   14000c160:	xor    ebp,eax
   14000c162:	sub    edx,ecx
   14000c164:	(bad)  
   14000c165:	and    al,0xcb
   14000c167:	sbb    BYTE PTR [rbp-0x38891952],bl
   14000c16d:	test   al,0x34
   14000c16f:	xor    eax,0x99824ac2
   14000c174:	adc    esi,ebp
   14000c176:	mov    ch,0xe0
   14000c178:	push   rbp
   14000c179:	xor    al,BYTE PTR [rdx+0x614992e8]
   14000c17f:	(bad)  
   14000c180:	jae    0x14000c105
   14000c182:	es jle 0x14000c202
   14000c185:	jne    0x14000c1dc
   14000c187:	mov    esp,0x3ae44c1e
   14000c18c:	rcr    BYTE PTR [rsi+0x54088031],0xda
   14000c193:	lods   al,BYTE PTR ds:[rsi]
   14000c194:	loope  0x14000c1eb
   14000c196:	adc    bh,BYTE PTR [rdi+0x767744f]
   14000c19c:	jmp    0x8a2f
   14000c1a0:	fsub   DWORD PTR es:[rbx-0x40]
   14000c1a4:	(bad)
   14000c1a7:	lea    edi,[rbx+rbp*8-0x3e]
   14000c1ab:	test   eax,0x6ecf27a3
   14000c1b0:	sbb    eax,0x3b88b1cf
   14000c1b5:	stc    
   14000c1b6:	or     al,0x3e
   14000c1b8:	rex.WRX pop rdi
   14000c1ba:	ret    0xb612
   14000c1bd:	add    BYTE PTR [rsp+rdi*4],dh
   14000c1c0:	imul   BYTE PTR [rsi-0x11]
   14000c1c3:	rex.WRXB sub BYTE PTR [r13-0x2d],r9b
   14000c1c7:	adc    DWORD PTR [rax+0x77],esp
   14000c1ca:	sub    eax,0x603eaa08
   14000c1cf:	movsxd ebx,DWORD PTR [rcx]
   14000c1d1:	movabs ds:0x887b49c8d88e13dc,eax
   14000c1da:	jbe    0x14000c185
   14000c1dc:	repz sbb al,0x51
   14000c1df:	xchg   ebx,eax
   14000c1e0:	test   eax,0x42053b90
   14000c1e5:	not    bh
   14000c1e7:	add    eax,0x1399dfb5
   14000c1ec:	sahf   
   14000c1ed:	fadd   DWORD PTR [rbx+0x2f62617f]
   14000c1f3:	rex.RB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c1f5:	push   rbp
   14000c1f6:	retf   0x59ff
   14000c1f9:	movabs eax,ds:0xe1b8ab064ceb630e
   14000c202:	leave  
   14000c203:	dec    DWORD PTR [rip+0x27e779b]        # 0x1427f39a4
   14000c209:	fwait
   14000c20a:	mov    bh,0x7f
   14000c20c:	xchg   edx,eax
   14000c20d:	out    dx,eax
   14000c20e:	mov    edx,0x656768ed
   14000c213:	mov    cl,0x3d
   14000c215:	cmp    al,0xfd
   14000c217:	rol    BYTE PTR [rbp+0x19031891],cl
   14000c21d:	(bad)  
   14000c21e:	pop    rcx
   14000c21f:	mov    ah,0x26
   14000c221:	cmp    DWORD PTR fs:[rcx],ebp
   14000c224:	popf   
   14000c225:	imul   esi,DWORD PTR [rbx+rdi*4-0x20],0x46
   14000c22a:	retf   
   14000c22b:	shl    BYTE PTR [rcx],0x1
   14000c22e:	xchg   esp,eax
   14000c22f:	cwde   
   14000c230:	rex fldenv [rax]
   14000c233:	cwde   
   14000c234:	xchg   edx,eax
   14000c235:	rex.WRXB movabs ds:0xc995294f8aaaeafa,rax
   14000c23f:	scas   al,BYTE PTR es:[rdi]
   14000c240:	call   0x1952164f5
   14000c245:	mov    ch,0xbc
   14000c247:	jns    0x14000c25a
   14000c249:	shl    BYTE PTR [rsi+rdi*4],cl
   14000c24c:	add    eax,0xce6b80b4
   14000c251:	add    BYTE PTR [rdx],ah
   14000c253:	popf   
   14000c254:	(bad)  
   14000c256:	rex.WRXB adc QWORD PTR [r9],0x6ef41330
   14000c25d:	mov    bh,bl
   14000c25f:	mov    ebp,0x92f5af1f
   14000c264:	(bad)  
   14000c265:	mov    ch,0xf7
   14000c267:	imul   ebp,DWORD PTR [rbp+0x11090899],0x109c44a5
   14000c271:	pop    rax
   14000c272:	stc    
   14000c273:	cmp    al,0x95
   14000c275:	cs adc eax,0x9fe795ed
   14000c27b:	mov    esp,0xad9bfbe3
   14000c280:	adc    DWORD PTR [rsp+rsi*4-0x7a41cf10],0xfffffff7
   14000c288:	retf   
   14000c289:	adc    ecx,DWORD PTR [rsi-0x1877e51c]
   14000c28f:	jmp    0x1812006df
   14000c294:	mov    WORD PTR [rsp+rsi*4+0x26],es
   14000c298:	adc    BYTE PTR [rbp+0x48],dl
   14000c29b:	jp     0x14000c30f
   14000c29d:	(bad)  
   14000c29e:	cmp    eax,0x6097139f
   14000c2a3:	mov    edi,0xc4810d7b
   14000c2a8:	adc    al,0x8e
   14000c2aa:	cmp    esi,DWORD PTR [rcx]
   14000c2ac:	sub    BYTE PTR [rsi],dl
   14000c2ae:	scas   eax,DWORD PTR es:[rdi]
   14000c2af:	adc    al,0x84
   14000c2b1:	push   0xffffffffffffff89
   14000c2b3:	popf   
   14000c2b4:	or     bl,BYTE PTR [rbx-0x31aa2bc2]
   14000c2ba:	cmp    eax,DWORD PTR [rax+rdx*2+0x3243dc7a]
   14000c2c1:	xchg   BYTE PTR [rax+0x57],dl
   14000c2c4:	cmc    
   14000c2c5:	xor    al,0x61
   14000c2c7:	icebp  
   14000c2c8:	(bad)  
   14000c2cb:	out    0xd5,al
   14000c2cd:	(bad)  
   14000c2ce:	mov    al,0xfe
   14000c2d0:	sahf   
   14000c2d1:	call   QWORD PTR [rdx-0x2f4bc792]
   14000c2d7:	in     al,dx
   14000c2d8:	jbe    0x14000c2c8
   14000c2da:	push   rax
   14000c2db:	(bad)  
   14000c2dc:	rex.WRXB sahf 
   14000c2de:	jmp    0x1660d664a
   14000c2e3:	iret   
   14000c2e4:	sub    bh,ch
   14000c2e6:	sbb    DWORD PTR [rbp-0x61b3634d],esp
   14000c2ec:	push   rbx
   14000c2ed:	mov    edx,0x5b355c84
   14000c2f2:	xchg   BYTE PTR [rax-0x47],bl
   14000c2f5:	rex.RX
   14000c2f6:	rex.WRB jle 0x14000c34c
   14000c2f9:	in     al,dx
   14000c2fa:	sub    BYTE PTR [rdx+0x27],dh
   14000c2fd:	rex.RX adc BYTE PTR [rdx-0x41fd99cf],r15b
   14000c304:	mov    ecx,0x4ee13d1
   14000c309:	sahf   
   14000c30a:	push   rdx
   14000c30b:	mov    eax,0x83cd57aa
   14000c310:	push   rdx
   14000c311:	ds jrcxz 0x14000c391
   14000c314:	mov    WORD PTR [rbx-0x36],gs
   14000c317:	add    BYTE PTR [rdx-0x75039f9f],ah
   14000c31d:	xor    eax,0x9cc01af1
   14000c322:	(bad)  
   14000c323:	out    dx,eax
   14000c324:	push   0x33ad03c
   14000c329:	lods   al,BYTE PTR ds:[rsi]
   14000c32a:	enter  0x11c6,0xb1
   14000c32e:	(bad)  
   14000c32f:	add    BYTE PTR [rbx],sil
   14000c332:	rex.W mov cl,0xdd
   14000c335:	push   rax
   14000c336:	and    ah,BYTE PTR [rcx+0x70]
   14000c339:	ret    0x38c5
   14000c33c:	cmp    eax,0xeed7f4ff
   14000c341:	(bad)  
   14000c342:	popf   
   14000c343:	sbb    eax,0xc3397669
   14000c348:	pop    rdi
   14000c349:	(bad)  
   14000c34a:	xchg   edi,eax
   14000c34b:	jno    0x14000c388
   14000c34d:	pop    rsi
   14000c34e:	(bad)  
   14000c34f:	sub    BYTE PTR [rcx],cl
   14000c351:	div    ebp
   14000c353:	sahf   
   14000c354:	test   BYTE PTR [rdx-0x2833da42],0x87
   14000c35b:	shl    DWORD PTR [rdx+rcx*4-0x6bb0c1d7],1
   14000c362:	pop    rsi
   14000c363:	rex.X (bad) 
   14000c365:	jns    0x14000c2e8
   14000c367:	add    eax,0x9bb90b36
   14000c36c:	mov    ebx,0x1a04017
   14000c371:	mov    cl,0xa9
   14000c373:	add    eax,DWORD PTR [rcx]
   14000c375:	rex.RXB cld 
   14000c377:	sahf   
   14000c378:	and    DWORD PTR [rax+0x4af0332a],ebx
   14000c37e:	mov    ch,0x4
   14000c380:	fistp  DWORD PTR [rsi+0x2a]
   14000c383:	mov    WORD PTR [rdx+0x66],fs
   14000c386:	xchg   BYTE PTR [rax+0x54dca4b1],dh
   14000c38c:	cmp    edi,esp
   14000c38e:	lahf   
   14000c38f:	shl    BYTE PTR [rdx+0xe02feb1],0x7f
   14000c396:	std    
   14000c397:	jg     0x14000c359
   14000c399:	cli    
   14000c39a:	rex.XB mov r15d,0x78e96a48
   14000c3a0:	cli    
   14000c3a1:	(bad)  
   14000c3a2:	ja     0x14000c380
   14000c3a4:	xchg   bh,ah
   14000c3a6:	mov    edi,0xb5b8617f
   14000c3ab:	mov    esi,0x9064c46d
   14000c3b0:	xchg   ecx,eax
   14000c3b1:	loope  0x14000c41f
   14000c3b3:	rex.XB xchg r11d,eax
   14000c3b5:	call   0xc3c69656
   14000c3ba:	jns    0x14000c39e
   14000c3bc:	sbb    al,0x84
   14000c3be:	and    BYTE PTR [rdi+0x7e],0x93
   14000c3c2:	rcl    DWORD PTR [rsi+0x676f4e2d],0xd4
   14000c3c9:	(bad)  
   14000c3ca:	cmp    BYTE PTR [rdi+0x74166972],ah
   14000c3d0:	(bad)  
   14000c3d1:	stos   DWORD PTR es:[rdi],eax
   14000c3d2:	fnstsw WORD PTR [rbp+0x5da330a6]
   14000c3d8:	xor    eax,DWORD PTR [rcx]
   14000c3da:	jp     0x14000c447
   14000c3dc:	xor    BYTE PTR [rcx+0xa00c66b],al
   14000c3e2:	leave  
   14000c3e3:	(bad)  
   14000c3e4:	lods   al,BYTE PTR ds:[rsi]
   14000c3e5:	mov    esp,0xdd8d8a30
   14000c3ea:	sbb    BYTE PTR [rdx+0x57],bl
   14000c3ed:	retf   
   14000c3ee:	mov    edx,0x3186c5ef
   14000c3f3:	add    BYTE PTR [rcx],dh
   14000c3f5:	rex retf 0xf5a9
   14000c3f9:	adc    BYTE PTR [rdx+0x72],cl
   14000c3fc:	rex.RB
   14000c3fd:	rex.WB retf 0x360
   14000c401:	adc    BYTE PTR [rbx-0x7e4a1fd3],dh
   14000c407:	(bad)  
   14000c408:	push   0x6
   14000c40a:	xchg   esp,eax
   14000c40b:	adc    BYTE PTR [rax+0x5b464489],bl
   14000c411:	lea    edx,[rbx]
   14000c413:	(bad)  
   14000c414:	rex.WRX fnsave [rbx+0x1b93472e]
   14000c41b:	stc    
   14000c41c:	or     bh,dh
   14000c41e:	adc    bh,BYTE PTR [rsi+0xab8c386]
   14000c424:	mov    BYTE PTR [rbp+0x187261c9],dh
   14000c42a:	cmp    eax,0xece67404
   14000c42f:	jl     0x14000c3e8
   14000c431:	ins    DWORD PTR es:[rdi],dx
   14000c432:	movabs eax,ds:0xf1df36e402e1d848
   14000c43b:	add    ebx,DWORD PTR [rsi+0x72d25053]
   14000c441:	mov    DWORD PTR [rcx],0x7850d71f
   14000c447:	retf   0xb595
   14000c44a:	call   FWORD PTR [rbp+0x3b776146]
   14000c450:	xor    ebp,DWORD PTR [rax]
   14000c452:	(bad)  
   14000c453:	add    eax,0x6ac033bc
   14000c458:	(bad)  
   14000c459:	fs (bad) 
   14000c45b:	xchg   esi,eax
   14000c45c:	(bad)  
   14000c45d:	(bad)  
   14000c45e:	pushf  
   14000c45f:	adc    BYTE PTR [rcx],dh
   14000c461:	mov    ?,WORD PTR [rcx+0x18]
   14000c464:	stos   DWORD PTR es:[rdi],eax
   14000c465:	sbb    ecx,DWORD PTR [rbx+0x3f380e3b]
   14000c46b:	rex.R and al,0xf6
   14000c46e:	(bad)  
   14000c46f:	(bad)  
   14000c470:	sub    al,0x23
   14000c472:	push   rcx
   14000c473:	pop    rdx
   14000c474:	repnz push fs
   14000c477:	mov    eax,0x9cdfd2a6
   14000c47c:	div    DWORD PTR [rcx-0x20]
   14000c47f:	pop    rbx
   14000c480:	jmp    FWORD PTR [rbx]
   14000c482:	cli    
   14000c483:	idiv   DWORD PTR [rdi+0xa]
   14000c486:	jl     0x14000c474
   14000c488:	ret    
   14000c489:	jmp    0xee40b349
   14000c48e:	mov    esi,0x6f4ce27b
   14000c493:	imul   edi,DWORD PTR [rbp-0x35],0xffffffc0
   14000c497:	push   0xffffffff9b9408c8
   14000c49c:	lods   eax,DWORD PTR ds:[rsi]
   14000c49d:	add    al,0x46
   14000c49f:	adc    ecx,esp
   14000c4a1:	sar    DWORD PTR [rcx+rbp*8],0x2e
   14000c4a5:	adc    BYTE PTR [rbx+0x274084d4],0x4c
   14000c4ac:	data16 add al,0x3c
   14000c4af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c4b0:	(bad)  
   14000c4b1:	(bad)  
   14000c4b2:	(bad)  
   14000c4b3:	adc    ebx,DWORD PTR [rax-0x1a7a89f1]
   14000c4b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c4ba:	and    eax,0x262bb01
   14000c4bf:	adc    ebx,r9d
   14000c4c2:	fisttp WORD PTR [rax+riz*8-0x66]
   14000c4c6:	xor    BYTE PTR [rax-0x7bf46a08],al
   14000c4cc:	mov    eax,0xb24d6162
   14000c4d1:	(bad)  
   14000c4d2:	cmp    eax,0x3ecd7be1
   14000c4d7:	jno    0x14000c54f
   14000c4d9:	mov    esp,0x6009e9b7
   14000c4de:	(bad)  
   14000c4df:	and    al,0x39
   14000c4e1:	rex.XB sub r15d,eax
   14000c4e4:	neg    BYTE PTR [rcx-0x5e33abd8]
   14000c4ea:	adc    ah,BYTE PTR [rdi-0x32]
   14000c4ed:	movzx  edx,dx
   14000c4f0:	(bad)  
   14000c4f1:	mov    edi,0x177de4f3
   14000c4f6:	repz and eax,0x80bc185e
   14000c4fc:	rex.WRXB mov ?,r14
   14000c4ff:	adc    DWORD PTR [rdx+0x316855f9],ebx
   14000c505:	nop
   14000c506:	sar    DWORD PTR [rdx],0x60
   14000c509:	je     0x14000c53f
   14000c50b:	ja     0x14000c56c
   14000c50d:	rex.R out 0x55,al
   14000c510:	mov    ch,0x4a
   14000c512:	rex.WXB
   14000c513:	rex.WRXB test r12,r14
   14000c516:	add    al,0xc8
   14000c518:	(bad)  
   14000c519:	add    edx,DWORD PTR [rax+0x39d01b4b]
   14000c51f:	fs rex.RXB ins BYTE PTR es:[rdi],dx
   14000c522:	movabs ds:0x7005cd0e65a6a80b,eax
   14000c52b:	rol    BYTE PTR [rcx-0x7288925c],cl
   14000c531:	(bad)  
   14000c532:	fisttp WORD PTR [rsi+0x22512084]
   14000c538:	or     eax,DWORD PTR [rcx-0x136e7a08]
   14000c53e:	cdq    
   14000c53f:	(bad)  
   14000c540:	shr    BYTE PTR [rip+0xffffffff83a67776],0x29        # 0xc3a73cbd
   14000c547:	int3   
   14000c548:	(bad)  
   14000c549:	ss add eax,0x439b4f61
   14000c54f:	or     ebp,DWORD PTR [rsi+0xa]
   14000c552:	or     edi,ecx
   14000c554:	adc    DWORD PTR [rcx-0x26],ebp
   14000c557:	adc    ecx,DWORD PTR [rdi-0xc5c114f]
   14000c55d:	hlt    
   14000c55e:	dec    DWORD PTR [rcx]
   14000c560:	adc    BYTE PTR [rcx],ah
   14000c562:	cmp    esi,esi
   14000c564:	(bad)  
   14000c565:	jle    0x14000c557
   14000c567:	(bad)  
   14000c568:	pop    rbx
   14000c569:	cmp    ecx,DWORD PTR [rdi-0x63]
   14000c56c:	cmp    bl,dl
   14000c56e:	fistp  DWORD PTR [rdi+rbx*8+0x36]
   14000c572:	rex.RX xor al,0x21
   14000c575:	(bad)  
   14000c576:	xchg   edx,eax
   14000c577:	outs   dx,DWORD PTR ds:[rsi]
   14000c578:	mov    DWORD PTR [rdx+0x66],eax
   14000c57b:	ins    BYTE PTR es:[rdi],dx
   14000c57c:	out    0x76,eax
   14000c57e:	mov    ebx,0x98e1aa50
   14000c583:	rex pop rsp
   14000c585:	outs   dx,DWORD PTR ds:[rsi]
   14000c586:	cdq    
   14000c587:	fdivr  DWORD PTR [rip+0x1189d87b]        # 0x1518a9e08
   14000c58d:	mov    esp,0xd4502676
   14000c592:	xor    ebp,ecx
   14000c594:	fmul   DWORD PTR [rsi-0x26]
   14000c597:	test   BYTE PTR [rdi-0x4011eca],dl
   14000c59d:	cwde   
   14000c59e:	or     esp,ebp
   14000c5a0:	mov    DWORD PTR [rbx],edx
   14000c5a2:	nop
   14000c5a3:	lods   al,BYTE PTR ds:[rsi]
   14000c5a4:	retf   
   14000c5a5:	ins    BYTE PTR es:[rdi],dx
   14000c5a6:	in     al,dx
   14000c5a7:	popf   
   14000c5a8:	jb     0x14000c5eb
   14000c5aa:	hlt    
   14000c5ab:	pop    rsi
   14000c5ac:	(bad)  
   14000c5ad:	out    0xc4,eax
   14000c5af:	(bad)  
   14000c5b0:	or     BYTE PTR [rsp+rdx*2],bl
   14000c5b3:	jle    0x14000c5ac
   14000c5b5:	sbb    eax,0x65162220
   14000c5ba:	rex.WRB add BYTE PTR [r11],r15b
   14000c5bd:	(bad)  
   14000c5be:	mov    BYTE PTR [rsp+rsi*8-0x4a0bfd29],ch
   14000c5c5:	enter  0x6468,0x34
   14000c5c9:	xor    esi,DWORD PTR [rsi]
   14000c5cb:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000c5cd:	gs jmp 0x14000c56b
   14000c5d0:	pop    rdi
   14000c5d1:	sti    
   14000c5d2:	retf   0xce07
   14000c5d5:	retf   
   14000c5d6:	push   rcx
   14000c5d7:	jle    0x14000c5d9
   14000c5d9:	(bad)  
   14000c5da:	loope  0x14000c58b
   14000c5dc:	loope  0x14000c5d5
   14000c5de:	rol    BYTE PTR [rdi+rbx*1-0x80],1
   14000c5e2:	(bad)  
   14000c5e3:	data16 fld TBYTE PTR [rdx+0x32a3e8e0]
   14000c5ea:	adc    eax,DWORD PTR [rax+0x5c]
   14000c5ed:	(bad)  
   14000c5ee:	(bad)  
   14000c5ef:	(bad)  
   14000c5f0:	femms  
   14000c5f2:	mov    edx,0x209efe62
   14000c5f7:	nop
   14000c5f8:	ficom  WORD PTR [rip+0xffffffffe2bfbdfb]        # 0x122c083f9
   14000c5fe:	cmp    al,0xfd
   14000c600:	idiv   BYTE PTR [rsi+rbp*8-0x15]
   14000c604:	imul   ebp,DWORD PTR [rsi],0xffffff81
   14000c607:	sbb    cl,BYTE PTR [rbx]
   14000c609:	movabs al,ds:0x80075a045cd022c6
   14000c612:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c613:	lea    esp,[rdx]
   14000c615:	rex.RXB ja 0x14000c684
   14000c618:	sub    BYTE PTR [rcx+0x3b89fa93],cl
   14000c61e:	outs   dx,DWORD PTR ds:[rsi]
   14000c61f:	rex (bad) 
   14000c621:	xor    eax,DWORD PTR [rax]
   14000c623:	add    esi,DWORD PTR [rcx]
   14000c625:	mov    edx,0x14d80ad0
   14000c62a:	in     eax,dx
   14000c62b:	adc    al,0x94
   14000c62d:	xchg   esp,eax
   14000c62e:	out    dx,al
   14000c62f:	sub    DWORD PTR [rsi+rsi*4],ecx
   14000c632:	test   BYTE PTR [rdx],dl
   14000c634:	rex.XB jo 0x14000c601
   14000c637:	rex.R imul ecx
   14000c63a:	(bad)  
   14000c63b:	and    BYTE PTR [rbx+0x79],bl
   14000c63e:	add    ebp,edi
   14000c640:	idiv   esp
   14000c642:	sbb    al,0xbf
   14000c644:	out    0x81,eax
   14000c646:	fstp   TBYTE PTR [rbx]
   14000c648:	rex.WRXB popf 
   14000c64a:	js     0x14000c605
   14000c64c:	mov    bh,0xb1
   14000c64e:	mov    edx,0xc8c22225
   14000c653:	xor    ecx,ecx
   14000c655:	rex.RB xchg r12d,eax
   14000c657:	lods   al,BYTE PTR ds:[rsi]
   14000c658:	pop    rsp
   14000c659:	rex.RB
   14000c65a:	rex.WXB add al,0xb4
   14000c65d:	mov    al,0x8
   14000c65f:	push   rsi
   14000c660:	test   eax,0x69909589
   14000c665:	adc    dl,BYTE PTR [rdi+0x234e3ba2]
   14000c66b:	lods   eax,DWORD PTR ds:[rsi]
   14000c66c:	rex.WB
   14000c66d:	rex.WR (bad) 
   14000c66f:	push   rdi
   14000c670:	jo     0x14000c657
   14000c672:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c673:	imul   eax,DWORD PTR [rdx],0x33
   14000c676:	mov    dl,bl
   14000c678:	imul   ebp,DWORD PTR [rdi+0x14],0x1f
   14000c67c:	(bad)  
   14000c67d:	mov    ah,0xba
   14000c67f:	jrcxz  0x14000c67b
   14000c681:	(bad)  
   14000c682:	(bad)  
   14000c683:	cmp    BYTE PTR [rcx],al
   14000c685:	sub    DWORD PTR [rsi+0x70258626],esp
   14000c68b:	and    DWORD PTR [rdx],ecx
   14000c68d:	cmp    ebp,ebp
   14000c68f:	jo     0x14000c673
   14000c691:	and    eax,0xf59bc13c
   14000c696:	pop    rsi
   14000c697:	cli    
   14000c698:	add    edi,DWORD PTR [rsi-0x7656ca64]
   14000c69e:	add    ah,ah
   14000c6a0:	(bad)  
   14000c6a1:	mov    dl,0x3e
   14000c6a3:	xor    BYTE PTR [rsi-0x28599251],ah
   14000c6a9:	int3   
   14000c6aa:	lea    ebp,[rbp-0x2d218eac]
   14000c6b0:	imul   esi,esp,0xffffffec
   14000c6b3:	movsxd ebx,DWORD PTR [rdi-0x3]
   14000c6b6:	sar    BYTE PTR [rcx+0x39],0xca
   14000c6ba:	(bad)  
   14000c6bb:	shl    DWORD PTR [rbx+0x42f8ebf8],0x90
   14000c6c2:	mov    dh,BYTE PTR [rcx-0x68]
   14000c6c5:	lods   eax,DWORD PTR ds:[rsi]
   14000c6c6:	outs   dx,DWORD PTR ds:[rsi]
   14000c6c7:	adc    al,BYTE PTR [rax]
   14000c6c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c6ca:	rex.WRB push r15
   14000c6cc:	(bad)  
   14000c6cd:	loope  0x14000c6e3
   14000c6cf:	(bad)  
   14000c6d1:	cmp    al,0xbb
   14000c6d3:	fisttp QWORD PTR [rip+0xffffffffcc7913d0]        # 0x10c79daa9
   14000c6d9:	shr    DWORD PTR [rax+0x3e24ddc4],1
   14000c6df:	ss pop rax
   14000c6e1:	xchg   DWORD PTR [rsi+rsi*1],ecx
   14000c6e4:	retf   0x5003
   14000c6e7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c6e8:	movabs al,ds:0x21ce80875a832d6
   14000c6f1:	xor    eax,0xad4e0097
   14000c6f6:	(bad)  
   14000c6f7:	loopne 0x14000c72d
   14000c6f9:	add    eax,DWORD PTR [rsi+rsi*8+0x68c0533a]
   14000c700:	adc    BYTE PTR [rdi-0x292fc4b2],ah
   14000c706:	shr    DWORD PTR [rax],0xba
   14000c709:	xor    BYTE PTR [rdi],ah
   14000c70b:	pushf  
   14000c70c:	ror    BYTE PTR [rbp+0x13],cl
   14000c70f:	push   rbp
   14000c710:	dec    DWORD PTR [rdx]
   14000c712:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c713:	xor    bl,al
   14000c715:	test   eax,0xafa5c070
   14000c71a:	cmp    al,0xa
   14000c71c:	nop
   14000c71d:	(bad)  
   14000c71e:	hlt    
   14000c71f:	sahf   
   14000c720:	iret   
   14000c721:	icebp  
   14000c722:	sub    DWORD PTR [rdi-0x41],0xffffffbd
   14000c726:	repz in al,0xb3
   14000c729:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c72a:	sti    
   14000c72b:	sbb    ebp,DWORD PTR [rbx+0x6610225b]
   14000c731:	popf   
   14000c732:	sbb    esi,DWORD PTR [rbx]
   14000c734:	call   0x121164a60
   14000c739:	es nop
   14000c73b:	and    eax,0x21398b0b
   14000c740:	xchg   ecx,eax
   14000c741:	mov    al,0x11
   14000c743:	xchg   esp,ebp
   14000c745:	adc    al,0x23
   14000c747:	xor    bl,bh
   14000c749:	cld    
   14000c74a:	sbb    BYTE PTR [rbx],al
   14000c74c:	jns    0x14000c75b
   14000c74e:	rex.WR movabs al,ds:0x673ec13aebcd20aa
   14000c758:	add    dl,bh
   14000c75a:	pushf  
   14000c75b:	add    DWORD PTR [rax+0x101721df],ecx
   14000c761:	xor    dh,BYTE PTR cs:[rbp+0x28]
   14000c765:	add    eax,0xde127288
   14000c76a:	stos   DWORD PTR es:[rdi],eax
   14000c76b:	cli    
   14000c76c:	rex.B in eax,0x8f
   14000c76f:	xor    al,0x3
   14000c771:	(bad)  
   14000c772:	sahf   
   14000c773:	ss pop rbx
   14000c775:	push   rdi
   14000c776:	cli    
   14000c777:	data16 je 0x14000c7f4
   14000c77a:	sub    eax,0x1cdd5adf
   14000c77f:	(bad)  
   14000c780:	and    al,0xe0
   14000c782:	jo     0x14000c716
   14000c784:	mov    dl,0xb0
   14000c786:	repnz pop rsp
   14000c788:	lahf   
   14000c789:	nop
   14000c78a:	out    0x9a,eax
   14000c78c:	sahf   
   14000c78d:	(bad)  
   14000c78e:	out    0x37,al
   14000c790:	out    dx,al
   14000c791:	mov    edi,0x23f84720
   14000c796:	js     0x14000c7ac
   14000c798:	mov    edi,0xa1705f20
   14000c79d:	mov    bh,0x85
   14000c79f:	popf   
   14000c7a0:	rex.WRX pop rsi
   14000c7a2:	repnz xchg ebp,eax
   14000c7a5:	xor    eax,0x16d42134
   14000c7aa:	adc    DWORD PTR [rbx+0x30],edx
   14000c7ad:	xchg   ecx,eax
   14000c7ae:	rex.WRX
   14000c7af:	rex.WX
   14000c7b0:	rex.WRX
   14000c7b1:	rex.WX (bad) 
   14000c7b3:	sahf   
   14000c7b4:	jns    0x14000c785
   14000c7b6:	pop    rax
   14000c7b7:	jl     0x14000c836
   14000c7b9:	test   BYTE PTR [rdx],ch
   14000c7bb:	and    ecx,DWORD PTR [rcx-0x2fc0926c]
   14000c7c1:	repnz sbb al,0xb2
   14000c7c4:	jne    0x14000c7df
   14000c7c6:	mov    dl,0x75
   14000c7c8:	test   eax,0x8b1be3b0
   14000c7cd:	movabs al,ds:0xd97b5006f75061ee
   14000c7d6:	xor    al,BYTE PTR [rdx+rdx*1]
   14000c7d9:	rex mov ecx,0x6220acf3
   14000c7df:	or     DWORD PTR [rip+0x60a9acac],ebx        # 0x1a0aa7491
   14000c7e5:	xor    al,0xec
   14000c7e7:	je     0x14000c84c
   14000c7e9:	loope  0x14000c82e
   14000c7eb:	lock rex.XB fbstp TBYTE PTR [r14-0x5415c351]
   14000c7f3:	cld    
   14000c7f4:	scas   eax,DWORD PTR es:[rdi]
   14000c7f5:	hlt    
   14000c7f6:	or     al,0xbe
   14000c7f8:	xchg   ebp,eax
   14000c7f9:	add    ah,BYTE PTR [rdi+riz*2-0x6f7bfce1]
   14000c800:	mov    ebp,0xd0fc73f7
   14000c805:	cmp    ebp,DWORD PTR [rsi+0x6f]
   14000c808:	jg     0x14000c805
   14000c80a:	cdq    
   14000c80b:	sar    ebp,cl
   14000c80d:	(bad)  
   14000c80e:	(bad)  
   14000c80f:	sub    eax,0x9d0c2063
   14000c814:	add    eax,ebx
   14000c816:	ds or  eax,0x255eaf
   14000c81c:	movabs rdx,0x32220cc044929a8b
   14000c826:	pop    rsi
   14000c827:	(bad)  
   14000c828:	rex.WXB cld 
   14000c82a:	mov    esp,0x1667df28
   14000c82f:	(bad)  
   14000c830:	xchg   ebp,eax
   14000c831:	sbb    eax,0xd919b381
   14000c836:	(bad)  
   14000c837:	repz xor ebx,DWORD PTR [rax+0x2a7af4c0]
   14000c83e:	fild   QWORD PTR [rbx]
   14000c840:	rex.WR (bad) 
   14000c842:	(bad)  
   14000c843:	(bad)  
   14000c844:	(bad)  
   14000c845:	rex.WR add al,r15b
   14000c848:	stc    
   14000c849:	jns    0x14000c86f
   14000c84b:	fs mov ebp,0xf04169f4
   14000c851:	sahf   
   14000c852:	add    DWORD PTR [rax+0x1b8eccfc],eax
   14000c858:	cmp    edi,ebp
   14000c85a:	sbb    al,0xbd
   14000c85c:	retf   
   14000c85d:	rex.XB mov r9d,0x6b2fb972
   14000c863:	sbb    DWORD PTR [rdx+rsi*8+0x5c],0xffffff9b
   14000c868:	div    BYTE PTR [rax]
   14000c86a:	xchg   ebx,eax
   14000c86b:	fstp   TBYTE PTR [rbp+rbx*4-0x2b]
   14000c86f:	xor    esp,esi
   14000c871:	ret    0xbfb7
   14000c874:	jb     0x14000c86e
   14000c876:	mov    dl,0x59
   14000c878:	out    0x7,al
   14000c87a:	lock add bh,dh
   14000c87d:	mov    edx,0xc200017c
   14000c882:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c883:	rcr    DWORD PTR [rsi+0x13280526],cl
   14000c889:	sub    ebx,DWORD PTR [rax+rax*8-0x5911fb0b]
   14000c890:	bsr    esp,DWORD PTR [rdi+rax*1+0x2fe4c5fc]
   14000c898:	(bad)  
   14000c899:	cmc    
   14000c89a:	xchg   ebp,eax
   14000c89b:	xor    eax,0xa5034980
   14000c8a0:	rex.X clc 
   14000c8a2:	test   DWORD PTR [rdi-0x31730237],esp
   14000c8a8:	lea    esi,[rsi]
   14000c8aa:	and    DWORD PTR [rbx+0x17d5c84d],esp
   14000c8b0:	ins    DWORD PTR es:[rdi],dx
   14000c8b1:	cdq    
   14000c8b2:	div    BYTE PTR [rdx]
   14000c8b4:	js     0x14000c897
   14000c8b6:	(bad)  
   14000c8b7:	(bad)  
   14000c8b8:	loope  0x14000c8c0
   14000c8ba:	push   rax
   14000c8bb:	movsxd ecx,ecx
   14000c8bd:	pop    rcx
   14000c8be:	or     ecx,DWORD PTR [rdx]
   14000c8c0:	loop   0x14000c895
   14000c8c2:	stos   BYTE PTR es:[rdi],al
   14000c8c3:	mov    al,al
   14000c8c5:	cmp    ah,BYTE PTR [rdx]
   14000c8c7:	or     eax,0xad8068c8
   14000c8cc:	mov    ecx,0x7761a220
   14000c8d1:	mov    eax,0xa5db5130
   14000c8d6:	lods   al,BYTE PTR ds:[rsi]
   14000c8d7:	movabs eax,ds:0x9ab09ad8a6b18c8
   14000c8e0:	pushf  
   14000c8e1:	jnp    0x14000c8f7
   14000c8e3:	push   0xfffffffff81fa1b5
   14000c8e8:	sbb    DWORD PTR [rsi-0x18],edi
   14000c8eb:	popf   
   14000c8ec:	ja     0x14000c8a2
   14000c8ee:	mov    edi,0xdea9e4f5
   14000c8f3:	out    0x66,al
   14000c8f5:	rex.WRXB add r8,r10
   14000c8f8:	rex.RX imul r12d,DWORD PTR [rax-0x30],0xffffffe7
   14000c8fd:	rcl    ebp,1
   14000c8ff:	(bad)  
   14000c900:	(bad)  
   14000c901:	sub    BYTE PTR [rcx+rbp*8],0x2c
   14000c905:	sbb    BYTE PTR [rsi+0x13],cl
   14000c908:	add    esp,DWORD PTR [rdx+0x26]
   14000c90b:	or     cl,BYTE PTR [rbx]
   14000c90d:	mov    esi,0xfa6acfc4
   14000c912:	sbb    ecx,ebp
   14000c914:	retf   
   14000c915:	add    al,0xa6
   14000c917:	ficom  DWORD PTR [rdx]
   14000c919:	push   rbx
   14000c91a:	mov    cl,BYTE PTR [rsi-0x45]
   14000c91d:	jle    0x14000c98d
   14000c91f:	es loopne 0x14000c926
   14000c922:	rex.XB test eax,0xe1b45dce
   14000c928:	jp     0x14000c8ec
   14000c92a:	mov    ch,0x9f
   14000c92c:	(bad)  
   14000c92d:	fs mov ebx,0xa222a3c9
   14000c933:	test   BYTE PTR [rcx-0x5b],cl
   14000c936:	rex.R
   14000c937:	xchg   r11,rax
   14000c939:	xchg   ecx,eax
   14000c93a:	xor    ah,BYTE PTR [rdx-0x6bd0c217]
   14000c940:	or     al,cl
   14000c942:	add    al,0xa3
   14000c944:	xchg   ebp,eax
   14000c945:	ds scas al,BYTE PTR es:[rdi]
   14000c947:	pop    rsi
   14000c948:	in     al,dx
   14000c949:	retf   
   14000c94a:	retf   0x2656
   14000c94d:	sub    DWORD PTR [rax-0x4510f652],0x50
   14000c954:	xlat   BYTE PTR ds:[rbx]
   14000c955:	xlat   BYTE PTR ds:[rbx]
   14000c956:	sahf   
   14000c957:	cld    
   14000c958:	xchg   ebx,eax
   14000c959:	hlt    
   14000c95a:	jb     0x14000c9d2
   14000c95c:	xchg   esp,eax
   14000c95d:	outs   dx,BYTE PTR ds:[rsi]
   14000c95e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c95f:	jae    0x14000c959
   14000c961:	outs   dx,DWORD PTR ds:[rsi]
   14000c962:	int    0xdf
   14000c964:	mov    bh,0x7a
   14000c966:	xchg   DWORD PTR [rbx+0x747bcbd9],esi
   14000c96c:	stc    
   14000c96d:	add    al,0x45
   14000c96f:	test   DWORD PTR [rsi],eax
   14000c971:	adc    BYTE PTR [rdx+0x7e5c7c8a],ah
   14000c977:	rex.R fcom DWORD PTR [rbx-0x700ed692]
   14000c97e:	xchg   edx,eax
   14000c97f:	xchg   ebp,eax
   14000c980:	cmp    eax,0x9e53cc1e
   14000c985:	xlat   BYTE PTR ds:[rbx]
   14000c986:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c987:	adc    dh,BYTE PTR [rcx+0x5fc71c5]
   14000c98d:	rex.XB jb 0x14000c9f4
   14000c990:	sar    DWORD PTR [rdi+0xabfd30a],1
   14000c996:	pop    rsp
   14000c997:	add    DWORD PTR ds:[rax+0x1bdd006],ebp
   14000c99e:	mov    esp,0x39d40c74
   14000c9a3:	(bad)  
   14000c9a4:	or     DWORD PTR [rdi+0x8ae76c4],ebx
   14000c9aa:	ins    BYTE PTR es:[rdi],dx
   14000c9ab:	and    ah,BYTE PTR [rbx-0x15]
   14000c9ae:	(bad)  
   14000c9af:	and    BYTE PTR [rbp+0x68],bl
   14000c9b2:	add    eax,0xb06bb462
   14000c9b7:	mov    cl,0xe6
   14000c9b9:	mov    edi,DWORD PTR [rax-0x3e]
   14000c9bc:	sbb    edi,DWORD PTR [rbx+0x7d69e97d]
   14000c9c2:	sti    
   14000c9c3:	xchg   edx,eax
   14000c9c4:	(bad)  
   14000c9c5:	inc    BYTE PTR [rdx]
   14000c9c7:	pop    rax
   14000c9c8:	cmp    cl,BYTE PTR [rsi]
   14000c9ca:	ds (bad) 
   14000c9cc:	xor    BYTE PTR [rdi+0x36775de7],bh
   14000c9d2:	(bad)  
   14000c9d3:	std    
   14000c9d4:	dec    DWORD PTR [rsi-0xc]
   14000c9d7:	mov    bl,0x4c
   14000c9d9:	or     ecx,DWORD PTR [rax+0x20]
   14000c9dc:	pop    rdx
   14000c9dd:	mov    ebx,DWORD PTR [rsi]
   14000c9df:	hlt    
   14000c9e0:	nop
   14000c9e1:	lods   eax,DWORD PTR ds:[rsi]
   14000c9e2:	xchg   edx,eax
   14000c9e3:	and    dl,BYTE PTR [rax+0x4e61d3a0]
   14000c9e9:	sbb    eax,DWORD PTR [rsi-0x14bd7d94]
   14000c9ef:	movabs ds:0x40982ed50a09221,al
   14000c9f8:	jg     0x14000c9ba
   14000c9fa:	mov    ?,WORD PTR [rax+0x2893ca7d]
   14000ca00:	xor    eax,0x55730262
   14000ca05:	push   rbx
   14000ca06:	imul   ecx,DWORD PTR [rcx-0x2b],0x705fb127
   14000ca0d:	in     eax,dx
   14000ca0e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ca0f:	add    DWORD PTR [rip+0xffffffffa7645557],ebx        # 0xe7651f6c
   14000ca15:	rcl    BYTE PTR [rbx+0x6],1
   14000ca18:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ca19:	mov    WORD PTR [rcx+rbx*2-0x1e],es
   14000ca1d:	(bad)  
   14000ca1e:	stos   BYTE PTR es:[rdi],al
   14000ca1f:	pop    rax
   14000ca20:	push   0x1f580006
   14000ca25:	(bad)  
   14000ca26:	jrcxz  0x14000c9fa
   14000ca28:	push   rax
   14000ca29:	scas   al,BYTE PTR es:[rdi]
   14000ca2a:	pop    rsp
   14000ca2b:	in     al,dx
   14000ca2c:	(bad)  
   14000ca2d:	(bad)  
   14000ca2e:	(bad)  
   14000ca2f:	cs jp  0x14000cab0
   14000ca32:	repnz pop rax
   14000ca34:	jo     0x14000c9e1
   14000ca36:	repnz add ah,dh
   14000ca39:	rex.WRX jle 0x14000ca51
   14000ca3c:	fucomip st,st(3)
   14000ca3e:	(bad)  
   14000ca3f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ca40:	sbb    ebp,DWORD PTR [rax+0x15]
   14000ca43:	jg     0x14000ca98
   14000ca45:	jle    0x14000ca62
   14000ca47:	sbb    eax,0xec77e00c
   14000ca4c:	mov    cs,WORD PTR [rcx+0x4b15d6df]
   14000ca52:	imul   eax,DWORD PTR [rcx],0x1c
   14000ca55:	rex.XB movabs al,ds:0xe5f6d8af3bf2daa2
   14000ca5f:	xor    DWORD PTR [rcx],edx
   14000ca61:	retf   
   14000ca62:	ror    al,1
   14000ca64:	jl     0x14000ca6e
   14000ca66:	(bad)  
   14000ca67:	movabs rax,ds:0x9aa152f72f42782a
   14000ca71:	test   dh,ch
   14000ca73:	sub    BYTE PTR [rbx],dh
   14000ca75:	add    al,0x10
   14000ca77:	cmp    BYTE PTR [rsp+rax*1-0x54],0x9f
   14000ca7c:	test   ecx,ebx
   14000ca7e:	cmp    BYTE PTR [rbx],cl
   14000ca80:	jo     0x14000ca84
   14000ca82:	pop    rdx
   14000ca83:	mov    esp,0xc78b419
   14000ca88:	call   0xecfe7fab
   14000ca8d:	add    al,0x22
   14000ca8f:	or     al,0xbb
   14000ca91:	cmpxchg BYTE PTR [rdx+0x301880e6],dh
   14000ca98:	pop    rcx
   14000ca99:	data16 (bad) 
   14000ca9b:	mov    ebx,ss
   14000ca9d:	or     al,ah
   14000ca9f:	rex.WRX
   14000caa0:	rex.WRXB xchg r10,rax
   14000caa2:	rol    DWORD PTR [r14],0xa2
   14000caa6:	xchg   edx,esi
   14000caa8:	cmp    al,0x2b
   14000caaa:	data16 or cl,cl
   14000caad:	jrcxz  0x14000caae
   14000caaf:	or     al,0x9a
   14000cab1:	sub    dh,0x6d
   14000cab4:	(bad)  
   14000cab6:	(bad)  
   14000cab7:	lock movabs eax,ds:0x62fba7b5fabe3b7
   14000cac1:	jbe    0x14000cad6
   14000cac3:	(bad)  
   14000cac4:	lods   eax,DWORD PTR ds:[rsi]
   14000cac5:	xchg   ecx,eax
   14000cac6:	psubd  mm1,QWORD PTR [rbx+rbx*2-0x76]
   14000cacb:	shl    DWORD PTR [rcx+rax*2-0x6fedb1f4],0xd7
   14000cad3:	jrcxz  0x14000ca9f
   14000cad5:	(bad)  [rbx-0x717b303b]
   14000cadb:	xor    eax,DWORD PTR [rcx]
   14000cadd:	fist   WORD PTR [rdi+0x13999ea5]
   14000cae3:	imul   dl
   14000cae5:	mov    DWORD PTR [rax+riz*2-0x69],ecx
   14000cae9:	jne    0x14000cb3f
   14000caeb:	out    dx,eax
   14000caec:	mov    ebx,0x1affe90f
   14000caf1:	add    r10,QWORD PTR [r10+0x4cb82cd]
   14000caf8:	sub    BYTE PTR [rsi],al
   14000cafa:	adc    al,BYTE PTR [rsi]
   14000cafc:	and    eax,0x2888a44c
   14000cb01:	and    DWORD PTR [rax],ebp
   14000cb03:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cb04:	(bad)  
   14000cb05:	sub    cl,bl
   14000cb07:	retf   0x2b00
   14000cb0a:	(bad)  
   14000cb0b:	cli    
   14000cb0c:	jb     0x14000cb73
   14000cb0e:	ins    DWORD PTR es:[rdi],dx
   14000cb0f:	test   ch,ch
   14000cb11:	rex.X xchg esi,eax
   14000cb13:	rex.WRX jg 0x14000cb37
   14000cb16:	rex.B adc eax,0xf3f22770
   14000cb1c:	(bad)  
   14000cb1d:	icebp  
   14000cb1e:	in     al,0xd5
   14000cb20:	cs (bad) 
   14000cb22:	test   al,0x87
   14000cb24:	pop    rdi
   14000cb25:	xchg   esp,eax
   14000cb26:	mov    edi,0x23f48e87
   14000cb2b:	pop    rcx
   14000cb2c:	sbb    al,0x13
   14000cb2e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cb2f:	(bad)
   14000cb33:	jmp    0x14000cb86
   14000cb35:	sbb    eax,0xd6f29890
   14000cb3a:	or     ebp,ebx
   14000cb3c:	(bad)  
   14000cb3d:	adc    ch,BYTE PTR [rsi+0x437c1cd3]
   14000cb43:	mov    esp,0x5d2411a6
   14000cb48:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cb49:	(bad)  
   14000cb4a:	clc    
   14000cb4b:	sbb    al,BYTE PTR [rdx+0x78]
   14000cb4e:	mov    cl,0xb8
   14000cb50:	sbb    ch,BYTE PTR [rbp-0x65]
   14000cb53:	mov    BYTE PTR [rax+0x4c180dc8],ch
   14000cb59:	cvtpi2ps xmm5,QWORD PTR [rsi-0x15]
   14000cb5d:	(bad)  
   14000cb5e:	sbb    eax,DWORD PTR [rcx]
   14000cb60:	rex.WR (bad) 
   14000cb62:	lods   al,BYTE PTR ds:[rsi]
   14000cb63:	popf   
   14000cb64:	sub    DWORD PTR [rbp+rbx*4-0xfe2e5ff],0xe0e031e2
   14000cb6f:	in     eax,dx
   14000cb70:	rex fiadd DWORD PTR [rsi-0x78]
   14000cb74:	pop    rdi
   14000cb75:	push   rax
   14000cb76:	or     al,0x32
   14000cb78:	xchg   esi,eax
   14000cb79:	sbb    DWORD PTR [rax-0x71499f2f],ecx
   14000cb7f:	rex.XB add ebp,DWORD PTR [r13-0x67]
   14000cb83:	add    BYTE PTR [rbx-0x5e33af0],bl
   14000cb89:	(bad)
   14000cb8c:	mov    BYTE PTR [rax+0x7d],al
   14000cb8f:	retf   
   14000cb90:	(bad)  
   14000cb91:	push   rbx
   14000cb92:	call   QWORD PTR [rdx]
   14000cb94:	out    0xc0,al
   14000cb96:	sbb    eax,0xd6cb3c58
   14000cb9b:	mov    bh,0xe1
   14000cb9d:	add    BYTE PTR [rax],al
   14000cb9f:	and    BYTE PTR [rax],al
   14000cba1:	rex.WB
   14000cba2:	rex.R
   14000cba3:	push   r12
   14000cba5:	js     0x14000cc22
   14000cba7:	repnz fiadd WORD PTR [rdi]
   14000cbaa:	out    dx,eax
   14000cbab:	imul   edi,DWORD PTR [rsi+rdi*8],0x3f230bc4
   14000cbb2:	xchg   edi,eax
   14000cbb3:	imul   esi,DWORD PTR [rsi+rax*2+0x4963d5b6],0x26286994
   14000cbbe:	loop   0x14000cb76
   14000cbc0:	and    DWORD PTR [rdx+rax*1-0x7b0750da],esp
   14000cbc7:	xlat   BYTE PTR ds:[rbx]
   14000cbc8:	rex.RX (bad) 
   14000cbca:	(bad)  
   14000cbcb:	movsxd esp,DWORD PTR fs:[rax-0x27100bda]
   14000cbd2:	xor    al,0xe2
   14000cbd4:	fcomp  QWORD PTR [rax+rax*8-0x4d]
   14000cbd8:	nop
   14000cbd9:	retf   0x7b8b
   14000cbdc:	xchg   ebp,eax
   14000cbdd:	adc    al,0x5c
   14000cbdf:	sbb    dh,BYTE PTR [rbx-0xd]
   14000cbe2:	jae    0x14000cb86
   14000cbe4:	jmp    0x14000cbe8
   14000cbe6:	xlat   BYTE PTR ds:[rbx]
   14000cbe7:	test   BYTE PTR [rcx],al
   14000cbe9:	sub    BYTE PTR [rdx-0x5f76606e],dh
   14000cbef:	mov    BYTE PTR [rax-0xcfa3ed0],dl
   14000cbf5:	mov    al,0xdf
   14000cbf7:	pop    rcx
   14000cbf8:	out    0xca,eax
   14000cbfa:	add    BYTE PTR [rdi+0x4e],dl
   14000cbfd:	outs   dx,DWORD PTR ds:[rsi]
   14000cbfe:	leave  
   14000cbff:	stc    
   14000cc00:	jle    0x14000cc10
   14000cc02:	mov    edi,0x2618ef83
   14000cc07:	adc    edi,DWORD PTR [rdi-0xb7f0719]
   14000cc0d:	(bad)  
   14000cc0e:	icebp  
   14000cc0f:	int3   
   14000cc10:	retf   
   14000cc11:	sub    esp,DWORD PTR [rax]
   14000cc13:	push   0xffffffffffffffe2
   14000cc15:	(bad)  
   14000cc16:	in     al,0xf3
   14000cc18:	cmp    BYTE PTR [rsi],ch
   14000cc1a:	out    0x1,eax
   14000cc1c:	rex.R
   14000cc1d:	rex.X (bad) 
   14000cc1f:	fcomi  st,st(3)
   14000cc21:	adc    eax,0xf40ed755
   14000cc26:	(bad)  
   14000cc27:	lods   eax,DWORD PTR ds:[rsi]
   14000cc28:	mov    esi,0x721403f7
   14000cc2d:	js     0x14000cc01
   14000cc2f:	fsub   DWORD PTR [rcx-0x21]
   14000cc32:	add    BYTE PTR [rax],ah
   14000cc34:	pop    rdx
   14000cc35:	add    eax,0x712b1108
   14000cc3a:	or     DWORD PTR [rsi],ebp
   14000cc3c:	push   rax
   14000cc3d:	(bad)  
   14000cc3e:	mov    al,0xb9
   14000cc40:	(bad)  
   14000cc41:	pushf  
   14000cc42:	sub    BYTE PTR [rbp-0x58a4920c],cl
   14000cc48:	rex.B pushf 
   14000cc4a:	sub    cl,ah
   14000cc4c:	adc    esp,DWORD PTR [rax-0x64]
   14000cc4f:	sbb    eax,0xb81cbcb8
   14000cc54:	push   0xffffffff816e58f3
   14000cc59:	(bad)  
   14000cc5a:	(bad)  
   14000cc5c:	clc    
   14000cc5d:	add    dh,BYTE PTR [rax-0x1b]
   14000cc60:	add    eax,0x7008f770
   14000cc65:	loopne 0x14000cc9f
   14000cc67:	mov    al,0x78
   14000cc69:	int3   
   14000cc6a:	jae    0x14000cccc
   14000cc6c:	mov    al,bl
   14000cc6e:	stc    
   14000cc6f:	adc    al,0x11
   14000cc71:	add    eax,0x99c30682
   14000cc76:	(bad)  
   14000cc77:	rex.RX sbb eax,0xffffffd8
   14000cc7b:	rex.W
   14000cc7c:	rex.R xlat BYTE PTR ds:[rbx]
   14000cc7e:	mov    dh,0xaa
   14000cc80:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cc81:	adc    edi,DWORD PTR [rdi+0x22]
   14000cc84:	jmp    0x14000cc09
   14000cc86:	mov    edi,0x1f901bf2
   14000cc8b:	call   FWORD PTR [rdi-0x18]
   14000cc8e:	out    0x43,al
   14000cc90:	mov    ecx,ebp
   14000cc92:	cmp    ebp,edi
   14000cc94:	mov    esp,0xe2f4bf49
   14000cc99:	add    eax,0x6b431e9b
   14000cc9e:	sbb    BYTE PTR [rax],cl
   14000cca0:	jmp    0xd1963a72
   14000cca5:	xor    al,ah
   14000cca7:	or     ah,BYTE PTR [rsi+0x4944a2c9]
   14000ccad:	adc    al,0x2c
   14000ccaf:	rex.R add al,0x9f
   14000ccb2:	mov    ebx,0x8b1e3edc
   14000ccb7:	or     eax,0xb4d0428f
   14000ccbc:	rex.WXB (bad) 
   14000ccbe:	shr    BYTE PTR [rbx+0x604d14c0],1
   14000ccc4:	sahf   
   14000ccc5:	(bad)  
   14000ccc6:	(bad)  
   14000ccc7:	cmc    
   14000ccc8:	outs   dx,DWORD PTR ds:[rsi]
   14000ccc9:	lahf   
   14000ccca:	jrcxz  0x14000cc66
   14000cccc:	xor    BYTE PTR [rax+0x8f77bc4],al
   14000ccd2:	push   rax
   14000ccd3:	sub    al,0x71
   14000ccd5:	mov    eax,0x648eaca6
   14000ccda:	jrcxz  0x14000ccc1
   14000ccdc:	xor    eax,0xa9a07273
   14000cce1:	pop    rdi
   14000cce2:	xchg   edx,eax
   14000cce3:	call   0xe0cbe1f6
   14000cce8:	clc    
   14000cce9:	(bad)  
   14000ccea:	xchg   ebp,eax
   14000cceb:	and    eax,DWORD PTR [rdx]
   14000cced:	movabs al,ds:0xc258faa93d4fd380
   14000ccf6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ccf7:	int3   
   14000ccf8:	mov    edi,0x5df1fbc1
   14000ccfd:	jmp    0x14000cd24
   14000ccff:	neg    esi
   14000cd01:	std    
   14000cd02:	fdiv   DWORD PTR [rbx-0x71]
   14000cd05:	ret    0x2dae
   14000cd08:	or     BYTE PTR [rbx+0x12afadec],bh
   14000cd0e:	pushf  
   14000cd0f:	push   rbp
   14000cd10:	adc    BYTE PTR [rax],bl
   14000cd12:	rex.W fidiv DWORD PTR [rsi]
   14000cd15:	mov    eax,0x2b0ed1a7
   14000cd1a:	add    al,BYTE PTR [rbx+0x24]
   14000cd1d:	(bad)  
   14000cd1e:	shr    esi,1
   14000cd20:	(bad)  
   14000cd21:	xchg   eax,ebp
   14000cd23:	or     al,0x50
   14000cd25:	(bad)  
   14000cd26:	sbb    ebp,DWORD PTR [rdi]
   14000cd28:	es ja  0x14000ccfe
   14000cd2b:	jno    0x14000cd42
   14000cd2d:	cmp    DWORD PTR [rdi],esp
   14000cd2f:	test   DWORD PTR [rdx-0x357261e1],ecx
   14000cd35:	rex.R pop rdi
   14000cd37:	int3   
   14000cd38:	and    al,al
   14000cd3a:	imul   eax,DWORD PTR [rbx],0xa70a51fe
   14000cd40:	gs mov ch,0x5f
   14000cd43:	(bad)  
   14000cd44:	add    cl,bl
   14000cd46:	mov    edx,0x2bed902
   14000cd4b:	test   al,0xef
   14000cd4d:	(bad)  
   14000cd4e:	xchg   edi,eax
   14000cd4f:	out    dx,eax
   14000cd50:	add    dl,BYTE PTR [rsi+0x4a904ef]
   14000cd56:	xor    BYTE PTR [rbp+0x1c],0x42
   14000cd5a:	sub    DWORD PTR [rax+0x1a400933],ecx
   14000cd60:	fs xor al,0x4
   14000cd63:	cmp    DWORD PTR [rsp+rbp*1+0x268c022e],ebp
   14000cd6a:	or     DWORD PTR [rbp+0x2],ecx
   14000cd6d:	and    BYTE PTR [rcx+0x1f],bh
   14000cd70:	hlt    
   14000cd71:	cmc    
   14000cd72:	fild   WORD PTR [rip+0xffffffffd2afc8fd]        # 0x112b09675
   14000cd78:	std    
   14000cd79:	ja     0x14000cd58
   14000cd7b:	fcomp  DWORD PTR [rsi+0x5b]
   14000cd7e:	fucomip st,st(2)
   14000cd80:	lods   eax,DWORD PTR ds:[rsi]
   14000cd81:	lods   eax,DWORD PTR ds:[rsi]
   14000cd82:	outs   dx,BYTE PTR ds:[rsi]
   14000cd83:	sbb    DWORD PTR [rcx],eax
   14000cd85:	add    DWORD PTR [rsi-0x38],eax
   14000cd88:	mov    WORD PTR [rsi-0x5c],es
   14000cd8b:	mov    bh,0xb6
   14000cd8d:	adc    bl,BYTE PTR [rbp+0xa425924]
   14000cd93:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cd94:	rex.B (bad) 
   14000cd96:	cwde   
   14000cd97:	pop    rcx
   14000cd98:	or     ah,BYTE PTR [rbp-0x29c0438]
   14000cd9e:	movabs ds:0x4be852c7f6c2304d,al
   14000cda7:	scas   eax,DWORD PTR es:[rdi]
   14000cda8:	jge    0x14000cd94
   14000cdaa:	ins    DWORD PTR es:[rdi],dx
   14000cdab:	ficom  WORD PTR [rax-0x1c]
   14000cdae:	lock jl 0x14000cdc4
   14000cdb1:	ins    BYTE PTR es:[rdi],dx
   14000cdb2:	mov    esi,0x3fea8fd
   14000cdb7:	xlat   BYTE PTR ds:[rbx]
   14000cdb8:	mov    al,BYTE PTR [rcx]
   14000cdba:	clc    
   14000cdbb:	cmp    DWORD PTR [rbp+0x2f53b862],edi
   14000cdc1:	xchg   ebx,eax
   14000cdc2:	in     al,dx
   14000cdc3:	in     eax,0xad
   14000cdc5:	sar    ecx,1
   14000cdc7:	mov    ecx,gs
   14000cdc9:	je     0x14000cdee
   14000cdcb:	rex.WRB
   14000cdcc:	rex.RX jle 0x14000cdf0
   14000cdcf:	(bad)  
   14000cdd0:	fadd   st(4),st
   14000cdd2:	(bad)  
   14000cdd3:	(bad)
   14000cdd6:	mov    al,0x79
   14000cdd8:	bnd jmp 0x14000cdb8
   14000cddb:	rex.WXB jp 0x14000cde7
   14000cdde:	outs   dx,DWORD PTR ds:[rsi]
   14000cddf:	(bad)  
   14000cde0:	repz js 0x14000ce27
   14000cde3:	(bad)  
   14000cde4:	adc    BYTE PTR [rsi-0x2f],bh
   14000cde7:	scas   eax,DWORD PTR es:[rdi]
   14000cde8:	add    al,0x29
   14000cdea:	in     al,dx
   14000cdeb:	(bad)  
   14000cdec:	ins    BYTE PTR es:[rdi],dx
   14000cded:	pop    rdi
   14000cdee:	fld    DWORD PTR [rdx+rax*1]
   14000cdf1:	mov    dl,BYTE PTR [rcx+0x3a]
   14000cdf4:	xchg   edi,eax
   14000cdf5:	mov    dh,0x81
   14000cdf7:	mov    BYTE PTR [rcx+0xc],0x6e
   14000cdfb:	jl     0x14000ce05
   14000cdfd:	mov    DWORD PTR [rcx],ebx
   14000cdff:	rex.B (bad) 
   14000ce01:	mov    dh,0xa4
   14000ce03:	fnstcw WORD PTR [rdi+0x7ff9614]
   14000ce09:	add    eax,0xcd939c59
   14000ce0e:	cmp    BYTE PTR [rdx+0x47a01932],al
   14000ce14:	or     dh,0x0
   14000ce17:	popf   
   14000ce18:	add    esp,DWORD PTR [rsi]
   14000ce1a:	jae    0x14000cddf
   14000ce1c:	pop    rbx
   14000ce1d:	sbb    edx,DWORD PTR es:[rdi+0x35e651d5]
   14000ce24:	add    DWORD PTR [rdi],ebx
   14000ce26:	sbb    ah,ch
   14000ce28:	mov    dl,dl
   14000ce2a:	cli    
   14000ce2b:	sub    BYTE PTR [rax-0x14],ch
   14000ce2e:	push   rdx
   14000ce2f:	add    BYTE PTR [rcx+0x42],dl
   14000ce32:	push   rcx
   14000ce33:	ja     0x14000ce63
   14000ce35:	retf   
   14000ce36:	movabs eax,ds:0x783a0f3d2e049d2f
   14000ce3f:	sub    edi,eax
   14000ce41:	enter  0x40bd,0xda
   14000ce45:	add    DWORD PTR [rax],esp
   14000ce47:	add    BYTE PTR ss:[rbx-0x28],al
   14000ce4b:	(bad)  
   14000ce4c:	(bad)  
   14000ce4d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ce4e:	rol    esp,0x10
   14000ce51:	jrcxz  0x14000ce87
   14000ce53:	add    ch,BYTE PTR [rax+0x4]
   14000ce56:	ja     0x14000ce9d
   14000ce58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ce59:	xchg   edi,eax
   14000ce5a:	add    bl,BYTE PTR [rdi-0x7e186a4]
   14000ce60:	(bad)  
   14000ce61:	inc    DWORD PTR [rbp-0x6b003e0c]
   14000ce67:	fcomip st,st(7)
   14000ce69:	scas   al,BYTE PTR es:[rdi]
   14000ce6a:	cmp    ebx,DWORD PTR [rbx-0x408005a1]
   14000ce70:	fcomi  st,st(7)
   14000ce72:	xlat   BYTE PTR ds:[rbx]
   14000ce73:	xor    al,0xeb
   14000ce76:	rcl    DWORD PTR [rax],1
   14000ce78:	pop    rcx
   14000ce79:	outs   dx,DWORD PTR ds:[rsi]
   14000ce7a:	rex.WXB push r9
   14000ce7c:	movabs ds:0x8f0990d4a0362944,al
   14000ce85:	rex.X and BYTE PTR [rdi-0xd],al
   14000ce89:	xchg   esi,eax
   14000ce8a:	sub    DWORD PTR [rax],esi
   14000ce8c:	mov    al,BYTE PTR [rax+0x42]
   14000ce8f:	call   FWORD PTR [rax-0x7e]
   14000ce92:	stc    
   14000ce93:	and    bl,BYTE PTR [rcx]
   14000ce95:	rex.WX pop rbp
   14000ce97:	pop    rcx
   14000ce98:	imul   ebp,DWORD PTR [rcx],0x81305d80
   14000ce9e:	sbb    DWORD PTR [rbp-0xa],eax
   14000cea1:	and    edx,DWORD PTR [rbx]
   14000cea3:	mov    eax,0x5d800c26
   14000cea8:	mov    BYTE PTR [rdi],bl
   14000ceaa:	enter  0xe946,0x9d
   14000ceae:	pop    rbx
   14000ceaf:	int    0xf4
   14000ceb1:	ficom  DWORD PTR [rax+0x36]
   14000ceb4:	pop    rdx
   14000ceb5:	int    0x46
   14000ceb7:	(bad)  
   14000ceb8:	jmp    0xc454babf
   14000cebd:	rex.RB popf 
   14000cebf:	(bad)  
   14000cec0:	mov    DWORD PTR [rbx+rbp*4],esi
   14000cec3:	push   0xffffffffffffffbf
   14000cec5:	(bad)  
   14000cec6:	xchg   esi,eax
   14000cec7:	pop    rdi
   14000cec8:	jns    0x14000cf33
   14000ceca:	stc    
   14000cecb:	(bad)  
   14000cecc:	mov    BYTE PTR [rdx-0x4e],0x40
   14000ced0:	cmp    eax,0x7f992fc
   14000ced5:	mov    cl,0xce
   14000ced7:	(bad)  
   14000ced9:	rex.WRB out 0x8f,eax
   14000cedc:	(bad)  
   14000cedd:	cli    
   14000cede:	lods   al,BYTE PTR ds:[rsi]
   14000cedf:	xor    DWORD PTR [rcx-0x22],r9d
   14000cee3:	rex.WRXB loopne 0x14000ce68
   14000cee6:	add    eax,DWORD PTR [rdx]
   14000cee8:	push   rcx
   14000cee9:	gs (bad) 
   14000ceeb:	jge    0x14000cebd
   14000ceed:	xor    al,0xde
   14000ceef:	sti    
   14000cef0:	pop    rcx
   14000cef1:	out    0xe3,al
   14000cef3:	(bad)  
   14000cef4:	mov    BYTE PTR [rbp-0x33bbee5e],al
   14000cefa:	rcl    BYTE PTR [rbp-0x3626f99],0x33
   14000cf01:	xor    DWORD PTR [rbx-0x71],0xffffff83
   14000cf05:	hlt    
   14000cf06:	add    cl,0x7e
   14000cf09:	cmp    eax,0x1280240
   14000cf0e:	cdq    
   14000cf0f:	(bad)  
   14000cf10:	movabs al,ds:0x4007a021e819965a
   14000cf19:	sahf   
   14000cf1a:	fnstenv [rbp+0x3dc26206]
   14000cf20:	rex.WB movabs ds:0x79e0c9bd79f8c428,al
   14000cf2a:	sbb    BYTE PTR [rdx+0x5306b132],cl
   14000cf30:	int3   
   14000cf31:	xchg   ebp,eax
   14000cf32:	jnp    0x14000cf7a
   14000cf34:	push   rsp
   14000cf35:	jmp    0x150ebe06e
   14000cf3a:	pop    rsp
   14000cf3b:	jg     0x14000cf56
   14000cf3d:	jp     0x14000cf2c
   14000cf3f:	rol    BYTE PTR gs:[rcx-0x85c1f1d],1
   14000cf46:	add    ch,BYTE PTR [rcx-0x29]
   14000cf49:	cmp    esi,DWORD PTR ds:[rcx]
   14000cf4c:	test   BYTE PTR [rsp+rax*4],dl
   14000cf4f:	xchg   ebp,eax
   14000cf50:	movsxd ebx,DWORD PTR [rsi+0x79]
   14000cf53:	movabs eax,ds:0xfeb8bcea504638cd
   14000cf5c:	(bad)  
   14000cf5d:	(bad)  
   14000cf5e:	sbb    al,0xb8
   14000cf60:	in     eax,0x7d
   14000cf62:	call   0x124f7c045
   14000cf67:	fucomp st(7)
   14000cf69:	mov    esi,0x93cefd3b
   14000cf6e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cf6f:	xor    al,BYTE PTR [rax]
   14000cf71:	(bad)  
   14000cf72:	mov    cl,0x98
   14000cf74:	mov    bl,0xe9
   14000cf76:	cmc    
   14000cf77:	xchg   ebx,eax
   14000cf78:	pop    rsp
   14000cf79:	and    eax,0xc51124a0
   14000cf7e:	pushf  
   14000cf7f:	or     esp,DWORD PTR [rdi]
   14000cf81:	test   edx,eax
   14000cf83:	in     eax,0x3b
   14000cf85:	fsubr  st(6),st
   14000cf87:	xchg   BYTE PTR [rdi],dh
   14000cf89:	(bad)  
   14000cf8a:	cs mov al,0x91
   14000cf8d:	sahf   
   14000cf8e:	rex.WRX shl QWORD PTR [rcx],1
   14000cf91:	(bad)  
   14000cf92:	out    dx,al
   14000cf93:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cf94:	sbb    al,0x5a
   14000cf96:	xor    eax,0x999af1b
   14000cf9b:	mov    ebp,ss
   14000cf9d:	and    edx,DWORD PTR [rbx]
   14000cf9f:	mov    gs,ebp
   14000cfa1:	subps  xmm4,XMMWORD PTR [rbx-0x5769ff4b]
   14000cfa8:	ss (bad) 
   14000cfaa:	(bad)  
   14000cfab:	addr32 (bad) 
   14000cfad:	rex.RX
   14000cfae:	es (bad) 
   14000cfb0:	shr    BYTE PTR [rcx-0x5e],1
   14000cfb3:	(bad)  
   14000cfb4:	rex.XB (bad) 
   14000cfb6:	and    eax,0xd2a0ab88
   14000cfbb:	rex.WRXB call 0x186e839b1
   14000cfc1:	pop    rcx
   14000cfc2:	fidivr WORD PTR [rax-0x17]
   14000cfc5:	in     al,dx
   14000cfc6:	mov    ecx,0xf8ba883b
   14000cfcb:	add    eax,0xa5b479f3
   14000cfd0:	pop    rdi
   14000cfd1:	push   rax
   14000cfd2:	test   BYTE PTR [rdi+0x501665fa],dl
   14000cfd8:	scas   al,BYTE PTR es:[rdi]
   14000cfd9:	shr    cl,1
   14000cfdb:	(bad)  
   14000cfdc:	and    DWORD PTR [rbp+0x48],ecx
   14000cfdf:	in     al,0x24
   14000cfe1:	shl    BYTE PTR [rdi+0x7d],1
   14000cfe4:	shl    BYTE PTR [rsi+rdi*8-0x64e4a07d],cl
   14000cfeb:	cmp    DWORD PTR [rdx-0x5b],esp
   14000cfee:	ror    BYTE PTR [rcx+0xa],0x1c
   14000cff2:	jnp    0x14000d013
   14000cff4:	(bad)  
   14000cff5:	mov    cl,0xf7
   14000cff7:	xor    DWORD PTR [rsi-0x2c2e7a5],eax
   14000cffd:	and    r9d,DWORD PTR [r15-0x1]
   14000d001:	sub    ecx,DWORD PTR [rsi]
   14000d003:	or     esp,0x80138020
   14000d009:	lods   eax,DWORD PTR ds:[rsi]
   14000d00a:	(bad)  
   14000d00b:	sahf   
   14000d00c:	push   rsp
   14000d00d:	or     bl,BYTE PTR [rax-0x67fc3fda]
   14000d013:	mov    esp,0x6881196f
   14000d018:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d019:	leave  
   14000d01a:	rex.R inc BYTE PTR [rdi-0x3a00b2e]
   14000d021:	or     DWORD PTR [rsp+rbp*8+0x780d9ec2],eax
   14000d028:	xchg   ebx,eax
   14000d029:	add    BYTE PTR [rax],cl
   14000d02b:	out    0x8d,al
   14000d02d:	out    0x19,eax
   14000d02f:	and    ebp,ebp
   14000d031:	(bad)  
   14000d032:	fs (bad) 
   14000d034:	(bad)  
   14000d035:	fnstsw WORD PTR [rbx-0x3]
   14000d038:	or     al,0xcc
   14000d03a:	cli    
   14000d03b:	sbb    DWORD PTR [rax-0xf],esp
   14000d03e:	(bad)  
   14000d03f:	lock or eax,0xb1a41f7
   14000d045:	rex.WRX stc 
   14000d047:	es imul esp,esi,0x10
   14000d04b:	pop    rbx
   14000d04c:	mov    bl,0x80
   14000d04e:	jb     0x14000cffb
   14000d050:	and    DWORD PTR [rax-0x20fca7],edi
   14000d056:	(bad)  
   14000d057:	cmp    cl,ah
   14000d059:	sti    
   14000d05a:	movabs r14,0x6dd36fea7e48bbfa
   14000d064:	(bad)  
   14000d065:	sbb    al,0x68
   14000d067:	popf   
   14000d068:	mov    edi,0xb95f5969
   14000d06d:	mov    eax,0xa2d07c6a
   14000d072:	in     al,0x9a
   14000d074:	rex.WRB movabs r15,0x935444e2152374af
   14000d07e:	mov    ch,0x10
   14000d080:	mov    edi,DWORD PTR [rbp-0x2eca06e3]
   14000d086:	sahf   
   14000d087:	push   rbx
   14000d088:	pop    rbx
   14000d089:	rex.RX loopne 0x14000d106
   14000d08c:	scas   eax,DWORD PTR es:[rdi]
   14000d08d:	(bad)  
   14000d08e:	add    dh,cl
   14000d090:	sub    BYTE PTR [rdx-0x3fb31cf1],bl
   14000d096:	rdpmc  
   14000d098:	fld    DWORD PTR [rbp+0x2d]
   14000d09b:	xchg   ebx,eax
   14000d09c:	jmp    0x14000d076
   14000d09e:	rex.WRXB cdqe 
   14000d0a0:	imul   ebx,DWORD PTR [rdx-0xc],0xffffffb5
   14000d0a4:	add    BYTE PTR [rbp+r11*2-0x6a020f33],bl
   14000d0ac:	and    DWORD PTR [rdx],esi
   14000d0ae:	and    eax,DWORD PTR [rsp+riz*8-0x2e]
   14000d0b2:	jrcxz  0x14000d0b4
   14000d0b4:	add    BYTE PTR [rax-0x5a],cl
   14000d0b7:	in     eax,dx
   14000d0b8:	(bad)  
   14000d0b9:	pop    rsp
   14000d0ba:	and    eax,0x6086b2fe
   14000d0bf:	mov    cl,0x7a
   14000d0c1:	loop   0x14000d12e
   14000d0c3:	(bad)  
   14000d0c4:	pop    rbx
   14000d0c5:	xchg   edi,eax
   14000d0c6:	cs mov edi,0x43c29e5f
   14000d0cc:	repnz push rsp
   14000d0ce:	jo     0x14000d130
   14000d0d0:	push   rcx
   14000d0d1:	jmp    0xd50933c0
   14000d0d6:	pop    QWORD PTR [rdi]
   14000d0d8:	push   0x29
   14000d0da:	or     bh,bl
   14000d0dc:	jns    0x14000d0a1
   14000d0de:	repz and ecx,DWORD PTR [rdi]
   14000d0e1:	out    0x8d,al
   14000d0e3:	sub    dh,cl
   14000d0e5:	adc    eax,eax
   14000d0e7:	pushf  
   14000d0e8:	adc    BYTE PTR [rdx+0x622f2514],0x73
   14000d0ef:	add    DWORD PTR [rbp-0x7238c179],ecx
   14000d0f5:	rex.WRXB (bad) 
   14000d0f7:	pop    rbp
   14000d0f8:	cwde   
   14000d0f9:	test   DWORD PTR [rbx+0x75],ebx
   14000d0fc:	loope  0x14000d0d1
   14000d0fe:	rol    BYTE PTR es:[rbp-0x16],0x81
   14000d103:	push   rbx
   14000d104:	mov    bpl,0x20
   14000d107:	lea    eax,[rbp+0x70]
   14000d10a:	jae    0x14000d115
   14000d10c:	xchg   esp,eax
   14000d10d:	mov    dh,0x1
   14000d10f:	xchg   ebp,eax
   14000d110:	pop    rdx
   14000d111:	cmc    
   14000d112:	rex.W in al,dx
   14000d114:	rex.X and cl,bl
   14000d117:	ja     0x14000d115
   14000d119:	rex jne 0x14000d111
   14000d11c:	jnp    0x14000d189
   14000d11e:	fcom   DWORD PTR [rbx+0x3]
   14000d121:	adc    eax,0x58fc42a9
   14000d126:	(bad)  
   14000d127:	add    edx,DWORD PTR [rdx+rsi*8]
   14000d12a:	rcl    BYTE PTR [rdx-0x5a],cl
   14000d12d:	ja     0x14000d17a
   14000d12f:	(bad)  
   14000d130:	cld    
   14000d131:	or     BYTE PTR [rsi-0x37a48868],ch
   14000d137:	(bad)  
   14000d138:	cmp    eax,ebp
   14000d13a:	(bad)  
   14000d13b:	inc    BYTE PTR [rdx]
   14000d13d:	out    0xdc,al
   14000d13f:	adc    eax,eax
   14000d141:	test   al,0xf
   14000d143:	mov    ebx,0x8c729053
   14000d148:	sub    eax,DWORD PTR [rip+0xdc40354]        # 0x14dc4d4a2
   14000d14e:	sbb    esi,DWORD PTR [rdx-0x54]
   14000d151:	xchg   esp,eax
   14000d152:	jrcxz  0x14000d129
   14000d154:	push   rsp
   14000d155:	in     al,dx
   14000d156:	xchg   esp,ebp
   14000d158:	mov    ch,0x93
   14000d15a:	lods   al,BYTE PTR ds:[rsi]
   14000d15b:	psllq  mm3,mm0
   14000d15e:	(bad)  
   14000d15f:	add    al,BYTE PTR [rbx-0x2d]
   14000d162:	rex.XB out dx,eax
   14000d164:	mov    eax,0xca2495bd
   14000d169:	sub    ebx,DWORD PTR [rdi-0x80]
   14000d16c:	sbb    BYTE PTR [rax-0x205939af],bl
   14000d172:	push   rdi
   14000d173:	xor    ch,dl
   14000d175:	sub    edx,ecx
   14000d177:	cdq    
   14000d178:	(bad)  
   14000d179:	mov    bh,0xb6
   14000d17b:	xor    dh,ah
   14000d17d:	movabs al,ds:0xd886bcec6230c60d
   14000d186:	pop    rcx
   14000d187:	add    DWORD PTR [rdi-0x9bdecec],esi
   14000d18d:	(bad)  
   14000d18e:	mov    WORD PTR [rip+0xc756bc6],ds        # 0x14c763d5a
   14000d194:	rex.WRB (bad) 
   14000d196:	push   rbx
   14000d197:	xor    edx,DWORD PTR [rcx+rcx*1-0x55323477]
   14000d19e:	movsxd edi,DWORD PTR [rdi-0x20]
   14000d1a1:	(bad)  
   14000d1a2:	xor    BYTE PTR [rax-0x47f968ed],al
   14000d1a8:	shl    bl,cl
   14000d1aa:	fst    DWORD PTR [rdx+0x79897005]
   14000d1b0:	add    al,0xc2
   14000d1b2:	adc    BYTE PTR [rsi+rdx*4-0x44db06e],0xfd
   14000d1ba:	sub    edx,0x2ff3cdb9
   14000d1c0:	fnsave [rsi+0x6a]
   14000d1c3:	stos   DWORD PTR es:[rdi],eax
   14000d1c4:	jae    0x14000d20d
   14000d1c6:	xchg   edi,eax
   14000d1c7:	cli    
   14000d1c8:	clc    
   14000d1c9:	add    eax,0xf2f779fd
   14000d1ce:	cld    
   14000d1cf:	sub    esi,DWORD PTR [rsi+0x12]
   14000d1d2:	adc    ecx,esi
   14000d1d4:	xor    DWORD PTR [rdi+rcx*2+0x10fe79a9],ecx
   14000d1db:	fxch   st(6)
   14000d1dd:	and    al,BYTE PTR [rax-0xd]
   14000d1e0:	jrcxz  0x14000d1a1
   14000d1e2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1e4:	sbb    eax,0xa9483111
   14000d1e9:	test   eax,0xdc8e8003
   14000d1ee:	mov    esi,esi
   14000d1f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d1f1:	dec    BYTE PTR [rdi]
   14000d1f3:	rex.RB out dx,eax
   14000d1f5:	jl     0x14000d1bb
   14000d1f7:	add    al,0x2a
   14000d1f9:	sub    ebx,DWORD PTR [rdx]
   14000d1fb:	outs   dx,DWORD PTR ds:[rsi]
   14000d1fc:	or     DWORD PTR [rbx+rdx*1+0x2e6853eb],ecx
   14000d203:	add    ch,BYTE PTR [rcx+0x17]
   14000d206:	movabs ds:0x90c73fa9d895109a,al
   14000d20f:	cmp    al,0xf1
   14000d211:	(bad)  
   14000d212:	rex.WX scas rax,QWORD PTR es:[rdi]
   14000d214:	(bad)  
   14000d215:	pop    rsp
   14000d216:	sti    
   14000d217:	out    0x3,eax
   14000d219:	mov    BYTE PTR [rdx-0x230eab7e],cl
   14000d21f:	(bad)  
   14000d220:	ins    DWORD PTR es:[rdi],dx
   14000d221:	hlt    
   14000d222:	movabs ds:0xb3b592ca9d59d7d5,al
   14000d22b:	xor    bh,bl
   14000d22d:	dec    DWORD PTR [rdx]
   14000d22f:	in     al,0xd2
   14000d231:	jae    0x14000d243
   14000d233:	xchg   ebx,eax
   14000d234:	pop    rbx
   14000d235:	or     eax,0x50659580
   14000d23a:	retf   0x231
   14000d23d:	push   0x0
   14000d23f:	rex.WB or spl,BYTE PTR [r9]
   14000d242:	adc    eax,0xe6029571
   14000d247:	fcom   QWORD PTR [rbx]
   14000d249:	nop
   14000d24a:	mov    bl,0x4f
   14000d24c:	movabs al,ds:0x1894dbfeefba9099
   14000d255:	adc    ecx,esi
   14000d257:	pop    rdx
   14000d258:	cwde   
   14000d259:	(bad)  
   14000d25a:	fs (bad) 
   14000d25c:	and    edx,esi
   14000d25e:	std    
   14000d25f:	mov    esi,0xc4a86c92
   14000d264:	push   0xffffffffa4488005
   14000d269:	cwde   
   14000d26a:	enter  0x5e28,0x91
   14000d26e:	adc    DWORD PTR [rax+0x57718111],ecx
   14000d274:	sbb    esi,DWORD PTR [rcx+0x6b]
   14000d277:	mov    dl,0xe7
   14000d279:	mov    cl,0xe0
   14000d27b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d27c:	xchg   edi,eax
   14000d27d:	jns    0x14000d294
   14000d27f:	push   0x3c
   14000d281:	xchg   ebp,eax
   14000d282:	ds rex.WX jne 0x14000d272
   14000d286:	(bad)  
   14000d287:	pop    rdi
   14000d288:	shl    BYTE PTR [rip+0x2dd50061],0x98        # 0x16dd5d2f0
   14000d28f:	add    BYTE PTR [rbx],ch
   14000d291:	jnp    0x14000d25c
   14000d293:	in     eax,0xc5
   14000d295:	(bad)  
   14000d296:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d297:	fiadd  WORD PTR [rdi-0x1b]
   14000d29a:	adc    bh,BYTE PTR es:[rdi]
   14000d29d:	add    DWORD PTR [rax],edi
   14000d29f:	jnp    0x14000d28b
   14000d2a1:	(bad)  
   14000d2a2:	jg     0x14000d2e6
   14000d2a4:	add    al,0xfc
   14000d2a6:	lods   al,BYTE PTR ds:[rsi]
   14000d2a7:	stc    
   14000d2a8:	and    bh,BYTE PTR [rdx]
   14000d2aa:	outs   dx,BYTE PTR ds:[rsi]
   14000d2ab:	jne    0x14000d24c
   14000d2ad:	rex.RB hlt 
   14000d2af:	movabs ds:0xe2fe8f7c0b1c20fc,al
   14000d2b8:	jrcxz  0x14000d2ca
   14000d2ba:	call   0xf465ca42
   14000d2bf:	jo     0x14000d334
   14000d2c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d2c2:	and    esp,esp
   14000d2c4:	adc    cl,BYTE PTR [rsi]
   14000d2c6:	ror    ah,1
   14000d2c8:	(bad)  
   14000d2c9:	(bad)  
   14000d2ca:	add    BYTE PTR [rbp+0x1b9e7e87],cl
   14000d2d0:	(bad)  
   14000d2d1:	icebp  
   14000d2d2:	ja     0x14000d334
   14000d2d4:	xchg   esi,eax
   14000d2d5:	mov    gs,ebx
   14000d2d7:	(bad)  
   14000d2d8:	sub    dl,al
   14000d2da:	adc    DWORD PTR [rip+0xffffffff9b894031],ecx        # 0xdb8a1311
   14000d2e0:	rex.WB call 0xe08bee68
   14000d2e6:	(bad)  
   14000d2e7:	push   0x3
   14000d2e9:	rex.X jbe 0x14000d356
   14000d2ec:	rcl    ebx,1
   14000d2ee:	(bad)  
   14000d2ef:	test   DWORD PTR [rsi+0x52],esi
   14000d2f2:	xchg   ecx,eax
   14000d2f3:	cmp    BYTE PTR [rax],cl
   14000d2f5:	(bad)  
   14000d2f6:	sahf   
   14000d2f7:	test   esi,0x2cfcf4d
   14000d2fd:	sti    
   14000d2fe:	mov    cl,ah
   14000d300:	hlt    
   14000d301:	loop   0x14000d2d4
   14000d303:	sub    edi,ebp
   14000d305:	sbb    al,BYTE PTR [rdi+0x20863b1c]
   14000d30b:	cmp    DWORD PTR es:[rcx-0x2b05ed84],0xffffff97
   14000d313:	and    DWORD PTR [rbx-0x19],ebp
   14000d316:	adc    BYTE PTR [rdi+rdx*1+0x48132c4a],dh
   14000d31d:	push   rdx
   14000d31e:	adc    bl,bl
   14000d320:	(bad)  
   14000d321:	jmp    0x14000d30e
   14000d323:	sub    dl,bh
   14000d325:	rcl    edi,0xaf
   14000d328:	lahf   
   14000d329:	clc    
   14000d32a:	out    0xa0,eax
   14000d32c:	shl    DWORD PTR [rsi],1
   14000d32e:	fnsave [rbx-0x14]
   14000d331:	push   rax
   14000d332:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d333:	mov    ebp,0x970bb1d0
   14000d338:	rex.RB (bad) 
   14000d33a:	rol    al,0xe4
   14000d33d:	sbb    DWORD PTR [rcx-0x3e66af3f],ebx
   14000d343:	adc    BYTE PTR [rcx+0x61310c67],0x9d
   14000d34a:	rex.RXB jns 0x14000d397
   14000d34d:	push   rsi
   14000d34e:	fdivr  QWORD PTR [rdi-0x37b7f672]
   14000d354:	mov    bl,0x66
   14000d356:	xchg   DWORD PTR fs:[rax+0x5e],ecx
   14000d35a:	fbld   TBYTE PTR [rdx-0x56]
   14000d35d:	sbb    al,0x8b
   14000d35f:	sub    bl,BYTE PTR [rdi+0x6be4f975]
   14000d365:	(bad)  
   14000d366:	pop    rsi
   14000d367:	mov    ch,0x44
   14000d369:	call   FWORD PTR [rsi-0x1]
   14000d36c:	mov    eax,0x80a00c26
   14000d371:	(bad)  
   14000d372:	(bad)  
   14000d373:	cmp    DWORD PTR [rax],eax
   14000d375:	js     0x14000d350
   14000d377:	test   dl,dh
   14000d379:	mov    cl,0xe8
   14000d37b:	jae    0x14000d37f
   14000d37d:	icebp  
   14000d37e:	add    eax,eax
   14000d380:	retf   
   14000d381:	iret   
   14000d382:	jl     0x14000d37f
   14000d384:	xchg   DWORD PTR [rdi],ebp
   14000d386:	cwde   
   14000d387:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d388:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d38a:	(bad)  
   14000d38b:	repz clc 
   14000d38d:	mov    BYTE PTR [rcx+0xc],bh
   14000d390:	in     eax,0x91
   14000d392:	pop    rdi
   14000d393:	(bad)  
   14000d394:	jns    0x14000d373
   14000d396:	(bad)  
   14000d397:	xor    ecx,edx
   14000d399:	xchg   DWORD PTR [rax],ecx
   14000d39b:	(bad)  
   14000d39c:	or     DWORD PTR [rdx],ebp
   14000d39e:	mov    dh,0x67
   14000d3a0:	adc    bh,BYTE PTR [rdi+riz*8+0x47]
   14000d3a4:	(bad)  
   14000d3a5:	cli    
   14000d3a6:	vmaxpd ymm9,ymm6,ymm7
   14000d3aa:	sub    eax,0xbdc8e83e
   14000d3af:	push   0xffffffff8abbf23f
   14000d3b4:	fcomip st,st(5)
   14000d3b6:	sub    DWORD PTR [rbx],edx
   14000d3b8:	rex.R jp 0x14000d3a4
   14000d3bb:	or     DWORD PTR [rcx],ebx
   14000d3bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d3be:	pop    rdx
   14000d3bf:	and    eax,0x16d2806d
   14000d3c4:	ror    BYTE PTR [rcx],0x44
   14000d3c7:	cmp    BYTE PTR [rax],dl
   14000d3c9:	cmp    al,0x51
   14000d3cb:	test   eax,0x100685d1
   14000d3d0:	rex.WB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000d3d2:	sar    BYTE PTR [rdx-0x15088b44],0x7f
   14000d3d9:	je     0x14000d419
   14000d3db:	(bad)  
   14000d3dc:	jbe    0x14000d38a
   14000d3de:	xor    al,BYTE PTR [rdx+rdx*2-0x33c14d0d]
   14000d3e5:	stc    
   14000d3e6:	(bad)  
   14000d3e7:	(bad)  
   14000d3e8:	rex.WRX jg 0x14000d408
   14000d3eb:	sbb    BYTE PTR [rbp-0x45],ch
   14000d3ee:	addr32 out 0x60,al
   14000d3f1:	adc    al,BYTE PTR [rax+0x25]
   14000d3f4:	push   rsi
   14000d3f5:	mov    esp,ecx
   14000d3f7:	add    al,0xce
   14000d3f9:	jno    0x14000d40a
   14000d3fb:	jb     0x14000d389
   14000d3fd:	rex.WXB mov r14b,0x57
   14000d400:	movabs al,ds:0xf7c1f4d041bffe9f
   14000d409:	fst    st(3)
   14000d40b:	add    al,0x91
   14000d40d:	xor    DWORD PTR [rdx],eax
   14000d40f:	xor    DWORD PTR [rdx-0x3c],ebx
   14000d412:	push   0x511c3d0d
   14000d417:	sbb    BYTE PTR ds:[rax+0x46090e19],dh
   14000d41e:	mov    ebx,0x3f360255
   14000d423:	rex.R ror DWORD PTR [rax],0xa
   14000d427:	adc    ecx,DWORD PTR [rax+0x3c]
   14000d42a:	loope  0x14000d3c3
   14000d42c:	sbb    ecx,eax
   14000d42e:	mov    WORD PTR [rsi+0xf],cs
   14000d431:	ss pop rsi
   14000d433:	rex.WB
   14000d434:	rex.RB fnstenv [r13+0x35e13eca]
   14000d43b:	out    dx,eax
   14000d43c:	(bad)  
   14000d43d:	mov    ch,0x3f
   14000d43f:	(bad)  
   14000d440:	xor    eax,0x8000066
   14000d445:	xchg   ah,bh
   14000d447:	retf   0xe514
   14000d44a:	movabs ds:0x7f434fc249341d7,eax
   14000d453:	ret    
   14000d454:	(bad)  
   14000d455:	(bad)  [rbx+0x20463fab]
   14000d45b:	jl     0x14000d4a7
   14000d45d:	push   QWORD PTR [rcx]
   14000d45f:	cld    
   14000d460:	int3   
   14000d461:	jno    0x14000d41b
   14000d463:	mov    al,0x10
   14000d465:	out    0x65,al
   14000d467:	sub    DWORD PTR [rdi-0x612f871e],ecx
   14000d46d:	push   rcx
   14000d46e:	add    al,0xe4
   14000d470:	clc    
   14000d471:	jae    0x14000d43c
   14000d473:	ins    DWORD PTR es:[rdi],dx
   14000d474:	(bad)  
   14000d475:	push   rax
   14000d476:	xchg   ebp,eax
   14000d477:	xchg   DWORD PTR ss:[rdx-0x62056155],ecx
   14000d47e:	nop
   14000d47f:	ds hlt 
   14000d481:	jae    0x14000d45f
   14000d483:	clc    
   14000d484:	in     al,0x6f
   14000d486:	rex.X (bad) 
   14000d488:	por    mm6,QWORD PTR [rcx]
   14000d48b:	rex.WRB test BYTE PTR [r8],r13b
   14000d48e:	clc    
   14000d48f:	(bad)  
   14000d490:	rcr    BYTE PTR [rax+0x0],1
   14000d493:	xchg   edx,eax
   14000d494:	scas   al,BYTE PTR es:[rdi]
   14000d495:	(bad)  
   14000d496:	or     al,0x92
   14000d498:	(bad)  
   14000d499:	out    0x33,al
   14000d49b:	(bad)
   14000d49f:	int    0x2f
   14000d4a1:	cwde   
   14000d4a2:	popf   
   14000d4a3:	push   rsp
   14000d4a4:	sahf   
   14000d4a5:	mov    cl,0xba
   14000d4a7:	enter  0x2a47,0xc7
   14000d4ab:	rex.WX
   14000d4ac:	lock repnz xor al,0x3e
   14000d4b0:	out    dx,eax
   14000d4b1:	sti    
   14000d4b2:	gs sti 
   14000d4b4:	stos   BYTE PTR es:[rdi],al
   14000d4b5:	cmc    
   14000d4b6:	subps  xmm7,XMMWORD PTR [rdx]
   14000d4b9:	loope  0x14000d529
   14000d4bb:	outs   dx,BYTE PTR ds:[rsi]
   14000d4bc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d4bd:	or     eax,ecx
   14000d4bf:	or     eax,0xb35a6920
   14000d4c4:	and    BYTE PTR [rcx+0x6d],cl
   14000d4c7:	ins    BYTE PTR es:[rdi],dx
   14000d4c8:	add    DWORD PTR [rip+0xfffffffffe27d1f7],edx        # 0x13e28a6c5
   14000d4ce:	sbb    eax,0xcb1975b0
   14000d4d3:	popf   
   14000d4d4:	mov    ah,0x79
   14000d4d6:	ret    
   14000d4d7:	or     eax,0xc337cacb
   14000d4dc:	sbb    BYTE PTR [rbx+0x74],ah
   14000d4df:	sahf   
   14000d4e0:	mov    esi,ebp
   14000d4e2:	cmovns ecx,DWORD PTR [rdi]
   14000d4e5:	xchg   DWORD PTR [rdx-0x4e],ecx
   14000d4e8:	adc    DWORD PTR [rbx-0x4c],eax
   14000d4eb:	(bad)  
   14000d4ec:	jl     0x14000d4d0
   14000d4ee:	movabs al,ds:0x600a12f798b9940d
   14000d4f7:	(bad)  
   14000d4f8:	int3   
   14000d4f9:	sahf   
   14000d4fa:	or     DWORD PTR [rax],esp
   14000d4fc:	xchg   edi,eax
   14000d4fd:	adc    dl,dl
   14000d4ff:	imul   edx,DWORD PTR [rsi],0xdaaa89e0
   14000d505:	sbb    al,0xb2
   14000d507:	cmp    esi,DWORD PTR [rdx-0x5a3a92ee]
   14000d50d:	(bad)  
   14000d50e:	jge    0x14000d495
   14000d510:	imul   ecx,eax,0x0
   14000d513:	sub    bl,BYTE PTR [rip+0xffffffffb8dc614f]        # 0xf8dd3668
   14000d519:	and    al,0xd9
   14000d51b:	adc    esi,DWORD PTR [rax]
   14000d51d:	rex.RB cmc 
   14000d51f:	jg     0x14000d50a
   14000d521:	fldenv [rdi]
   14000d523:	(bad)  
   14000d524:	mov    esi,0x23fb7685
   14000d529:	repnz sub dh,bl
   14000d52c:	es iret 
   14000d52e:	and    ebx,DWORD PTR [rax]
   14000d530:	repnz pop rsi
   14000d532:	push   rcx
   14000d533:	sbb    al,0x13
   14000d535:	mov    eax,0x5fb7f4b1
   14000d53a:	enter  0xcbe9,0x61
   14000d53e:	cmp    DWORD PTR [rax+0x6c],esi
   14000d541:	jg     0x14000d592
   14000d543:	imul   ecx,ebx,0xffffffab
   14000d546:	mov    WORD PTR [rbx],es
   14000d548:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d549:	and    esi,edi
   14000d54b:	movabs ds:0x36a3f3dc28efc8f3,al
   14000d554:	in     eax,dx
   14000d555:	pop    rcx
   14000d556:	imul   eax,DWORD PTR [rdi+0x19],0xa7105a6b
   14000d55d:	movabs al,ds:0x1b842e93093ac746
   14000d566:	jbe    0x14000d501
   14000d568:	scas   eax,DWORD PTR es:[rdi]
   14000d569:	(bad)  
   14000d56b:	nop
   14000d56c:	push   rdx
   14000d56d:	repz retf 
   14000d56f:	test   dh,ch
   14000d571:	sti    
   14000d572:	(bad)  
   14000d573:	xchg   edx,eax
   14000d574:	cld    
   14000d575:	mov    cl,0x8a
   14000d577:	(bad)  
   14000d578:	cmp    ch,BYTE PTR [rdi+0x12]
   14000d57b:	rol    edi,0x95
   14000d57e:	rex.W cmc 
   14000d580:	xchg   DWORD PTR [rax+0x2e],eax
   14000d583:	(bad)  
   14000d584:	(bad)  
   14000d585:	cld    
   14000d586:	(bad)  
   14000d587:	push   rdi
   14000d588:	add    cl,0xba
   14000d58b:	repz or ebx,DWORD PTR [rax+0x27]
   14000d58f:	and    DWORD PTR [rip+0xffffffffac349029],esp        # 0xec3565be
   14000d595:	mov    BYTE PTR [rdx-0x52],0x9d
   14000d599:	(bad)  
   14000d59a:	jbe    0x14000d565
   14000d59c:	mov    edi,0xd0410ff1
   14000d5a1:	hlt    
   14000d5a2:	(bad)  
   14000d5a3:	ja     0x14000d582
   14000d5a5:	shl    DWORD PTR [rsi-0x73],1
   14000d5a8:	adc    DWORD PTR [rcx],edx
   14000d5aa:	xor    DWORD PTR [rcx],0x94e59d02
   14000d5b0:	clts   
   14000d5b2:	xchg   edx,eax
   14000d5b3:	cmova  esp,DWORD PTR [rbx+riz*8+0xd]
   14000d5b8:	add    BYTE PTR [rax-0x479381cd],cl
   14000d5be:	or     cl,bh
   14000d5c0:	sbb    al,0x88
   14000d5c2:	push   rsp
   14000d5c3:	(bad)  
   14000d5c4:	jns    0x14000d5f8
   14000d5c6:	lods   eax,DWORD PTR ds:[rsi]
   14000d5c7:	in     eax,0x51
   14000d5c9:	rex.WRXB cmp r12b,BYTE PTR [r11]
   14000d5cc:	mov    ebp,ebp
   14000d5ce:	mov    edx,0xda92d8f2
   14000d5d3:	std    
   14000d5d4:	fwait
   14000d5d5:	movabs ds:0xd03d8fd48fdb7f2,eax
   14000d5de:	and    BYTE PTR [rdx-0x6b47fe40],dh
   14000d5e4:	cdq    
   14000d5e5:	outs   dx,BYTE PTR ds:[rsi]
   14000d5e6:	(bad)  
   14000d5e7:	push   0x27
   14000d5e9:	(bad)  
   14000d5ea:	lahf   
   14000d5eb:	add    ah,dh
   14000d5ed:	(bad)  
   14000d5ee:	ret    
   14000d5ef:	(bad)  
   14000d5f0:	vpaddd ymm0,ymm9,ymm3
   14000d5f4:	rex.R shl BYTE PTR [rdi+0x54461ff4],0x31
   14000d5fc:	rex.B ja 0x14000d5a7
   14000d5ff:	adc    BYTE PTR [rbp+0x18],bh
   14000d602:	rex.W mov cl,0x46
   14000d605:	in     eax,dx
   14000d606:	sub    DWORD PTR [rcx+0x47],ebp
   14000d609:	shl    eax,0x1a
   14000d60c:	rex.RXB
   14000d60d:	rex jae 0x14000d611
   14000d610:	int    0x87
   14000d612:	inc    DWORD PTR [rsi+0x6bfe3f4a]
   14000d618:	xor    BYTE PTR [rbp-0x59],ch
   14000d61b:	or     eax,0xd5e754c4
   14000d620:	in     al,dx
   14000d621:	mov    ah,0x5
   14000d623:	imul   ebp,DWORD PTR [rip+0xffffffffa04b9a82],0x4e105a4        # 0xe04c70af
   14000d62d:	add    al,0x67
   14000d62f:	jae    0x14000d5c0
   14000d631:	repz rcl al,1
   14000d634:	not    BYTE PTR [rdx-0x4c]
   14000d637:	(bad)  
   14000d638:	mov    ch,0xb9
   14000d63a:	ror    DWORD PTR [rax],cl
   14000d63c:	mov    esi,0x2eaaae74
   14000d641:	mov    ecx,0xd0227799
   14000d646:	jo     0x14000d64b
   14000d648:	cli    
   14000d649:	sti    
   14000d64a:	pop    rdi
   14000d64b:	sbb    DWORD PTR [rsi+rsi*8-0x26],0x2508280
   14000d653:	push   rax
   14000d654:	ret    
   14000d655:	push   0x2
   14000d657:	retf   0x232
   14000d65a:	jb     0x14000d66a
   14000d65c:	rex.X jae 0x14000d658
   14000d65f:	add    eax,0xd0e7c5c8
   14000d664:	push   rsi
   14000d665:	xchg   esp,eax
   14000d666:	fdiv   QWORD PTR [rbx-0x9]
   14000d669:	xor    ebp,esp
   14000d66b:	sbb    DWORD PTR [rax+0x679d0318],esi
   14000d671:	enter  0x3fa,0xca
   14000d675:	(bad)  
   14000d676:	add    ebp,eax
   14000d678:	ror    DWORD PTR [rax-0x7de2e73],1
   14000d67e:	xchg   DWORD PTR [rdx+rcx*4-0x6d083a3b],ebx
   14000d685:	rex.WRX (bad) 
   14000d687:	in     eax,0x49
   14000d689:	movabs ds:0xa86d9a14976220fe,al
   14000d692:	mov    ecx,0x9a5aedcf
   14000d697:	rex.XB pushf 
   14000d699:	stc    
   14000d69a:	movsxd edi,DWORD PTR es:[rbx+0xa]
   14000d69e:	jrcxz  0x14000d677
   14000d6a0:	in     al,dx
   14000d6a1:	(bad)  
   14000d6a2:	ds jo  0x14000d632
   14000d6a5:	sbb    al,al
   14000d6a7:	fdivr  DWORD PTR [rbx+0xb]
   14000d6aa:	std    
   14000d6ab:	imul   esi,DWORD PTR [rbx-0x1e],0xf5b2dcc9
   14000d6b2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d6b3:	addr32 lahf 
   14000d6b5:	cld    
   14000d6b6:	js     0x14000d646
   14000d6b8:	and    al,0x7d
   14000d6ba:	fdivr  DWORD PTR [rdx+rcx*4]
   14000d6bd:	ret    
   14000d6be:	mov    dl,0x1a
   14000d6c0:	push   0x1
   14000d6c2:	or     ah,BYTE PTR [rdx-0x4a]
   14000d6c5:	rex.WXB pop r15
   14000d6c7:	mov    ebp,0x5ce128c9
   14000d6cc:	mov    al,0xf5
   14000d6ce:	movabs ds:0xe3f9b08fd1b30456,eax
   14000d6d7:	rex.WRB pop r14
   14000d6d9:	adc    eax,0xd17bd8f8
   14000d6de:	jle    0x14000d6c4
   14000d6e0:	mov    bh,0x95
   14000d6e2:	fdiv   st(5),st
   14000d6e4:	movabs ds:0x8141263a156970ba,eax
   14000d6ed:	mov    eax,0xb60a7361
   14000d6f2:	(bad)  
   14000d6f3:	(bad)  
   14000d6f4:	sbb    ebx,DWORD PTR [rbp-0x15]
   14000d6f7:	or     BYTE PTR [rbx+0x6df0841d],0xb5
   14000d6fe:	(bad)  
   14000d6ff:	push   rdi
   14000d700:	ror    BYTE PTR [rdx+rcx*8-0x71],cl
   14000d704:	cmp    eax,0x8ffd3fd
   14000d709:	or     WORD PTR [rbp+0x125a0baf],dx
   14000d710:	loopne 0x14000d6af
   14000d712:	xchg   dh,ah
   14000d714:	ror    BYTE PTR [rcx-0x68],cl
   14000d717:	(bad)  
   14000d718:	mov    edi,0xc36d190e
   14000d71d:	addr32 pop rdi
   14000d71f:	and    eax,0x86bfba95
   14000d724:	cmc    
   14000d725:	or     eax,0xdfd5f238
   14000d72a:	std    
   14000d72b:	add    edx,DWORD PTR [rax-0x31004598]
   14000d731:	sbb    ebx,ebx
   14000d733:	test   cl,0x6d
   14000d736:	gs (bad) 
   14000d738:	sbb    BYTE PTR [rax+0x1fdd232c],bl
   14000d73e:	jo     0x14000d77e
   14000d740:	sbb    BYTE PTR [rcx-0x3f077232],cl
   14000d746:	movsxd esp,edi
   14000d748:	ins    DWORD PTR es:[rdi],dx
   14000d749:	jo     0x14000d797
   14000d74b:	rex cld 
   14000d74d:	ja     0x14000d6d3
   14000d74f:	(bad)  
   14000d750:	sbb    eax,0x139e5f61
   14000d755:	(bad)  
   14000d756:	push   rsi
   14000d757:	adc    DWORD PTR [rax-0x478399e7],esi
   14000d75d:	icebp  
   14000d75e:	(bad)  
   14000d75f:	(bad)  
   14000d760:	int3   
   14000d761:	jp     0x14000d760
   14000d763:	sti    
   14000d764:	(bad)  
   14000d765:	cli    
   14000d766:	jno    0x14000d6f5
   14000d768:	xor    eax,0xd9dee700
   14000d76d:	push   rcx
   14000d76e:	lea    ebx,[rbx-0x1ffe02da]
   14000d774:	loop   0x14000d760
   14000d776:	loopne 0x14000d7d9
   14000d778:	add    dh,al
   14000d77a:	sub    ebp,edi
   14000d77c:	rex.RXB xchg r9d,eax
   14000d77e:	xchg   ecx,eax
   14000d77f:	or     eax,DWORD PTR [rbp+riz*2-0x577d6f9a]
   14000d786:	movabs ds:0xd050ee7fd14f41,eax
   14000d78f:	retf   0xba3e
   14000d792:	imul   esi,eax,0xffffff96
   14000d795:	fwait
   14000d796:	mov    ebp,DWORD PTR [rax+0x7d]
   14000d799:	in     al,0x6f
   14000d79b:	test   al,0xf4
   14000d79d:	(bad)  
   14000d79e:	(bad)  
   14000d79f:	(bad)  
   14000d7a0:	je     0x14000d78d
   14000d7a2:	nop
   14000d7a3:	cs sbb al,0x92
   14000d7a6:	or     BYTE PTR [rdx-0x4e4ed770],dh
   14000d7ac:	add    ch,BYTE PTR [rbp+0xf34083]
   14000d7b2:	and    al,0x69
   14000d7b4:	fisub  DWORD PTR [rax+0x22]
   14000d7b7:	test   al,0x40
   14000d7b9:	nop
   14000d7ba:	sub    DWORD PTR [rcx-0x7b],0xa8a9ed2d
   14000d7c1:	adc    dl,BYTE PTR [ebx]
   14000d7c4:	or     BYTE PTR [rdi],bh
   14000d7c6:	and    dh,BYTE PTR [rbp+0x1]
   14000d7c9:	adc    al,0x4a
   14000d7cc:	pop    rax
   14000d7cd:	mov    esp,0xbb52f100
   14000d7d2:	pop    rsp
   14000d7d3:	fisubr WORD PTR [rdi+rbx*2-0x7b]
   14000d7d7:	ds cmc 
   14000d7d9:	gs sar dl,1
   14000d7dc:	cmp    DWORD PTR [rax-0x61],ebx
   14000d7df:	cmp    eax,DWORD PTR [rbx]
   14000d7e1:	stos   BYTE PTR es:[rdi],al
   14000d7e2:	add    DWORD PTR [rcx-0x57],edx
   14000d7e5:	rex.WXB movsxd rsp,DWORD PTR [r14+0x63]
   14000d7e9:	sbb    ecx,esp
   14000d7eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d7ec:	xchg   ebx,eax
   14000d7ed:	xor    BYTE PTR [rdi-0x4eb4bc62],dl
   14000d7f3:	(bad)  
   14000d7f4:	add    bh,ah
   14000d7f6:	mov    ebp,0x26b46045
   14000d7fb:	cmp    eax,0xd468d21c
   14000d800:	out    0x3c,eax
   14000d802:	(bad)  
   14000d803:	rcr    DWORD PTR [rax],0x63
   14000d806:	loop   0x14000d7dc
   14000d808:	test   al,0x41
   14000d80a:	cli    
   14000d80b:	push   rbx
   14000d80c:	(bad)  
   14000d80d:	or     BYTE PTR [rax+0x31803d67],bl
   14000d813:	loop   0x14000d7b7
   14000d815:	or     ebp,DWORD PTR [rbp+0x67]
   14000d818:	cmp    BYTE PTR [rdi-0x80],bl
   14000d81b:	iret   
   14000d81c:	(bad)  
   14000d81d:	pop    rcx
   14000d81e:	(bad)  
   14000d81f:	pop    rsp
   14000d820:	cdq    
   14000d821:	test   DWORD PTR [rdx-0x5aa04036],ebp
   14000d827:	(bad)  
   14000d828:	mov    al,0x17
   14000d82a:	rex.WRX rcl BYTE PTR [rdx+0x5a],0x5
   14000d82f:	add    DWORD PTR [rdx+0x4751db84],ecx
   14000d835:	rex.WRXB
   14000d836:	es (bad) 
   14000d838:	(bad)  
   14000d839:	mov    esi,0xe60fecf7
   14000d83e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d83f:	rol    BYTE PTR [rdi+0x6c3863cd],cl
   14000d845:	push   rsi
   14000d846:	ins    BYTE PTR es:[rdi],dx
   14000d847:	or     eax,0x7b0e7652
   14000d84c:	rex.WB out dx,eax
   14000d84e:	mov    DWORD PTR [rcx+0x4a577ddf],0x24156265
   14000d858:	xchg   edx,eax
   14000d859:	stos   BYTE PTR es:[rdi],al
   14000d85a:	push   rbp
   14000d85b:	sti    
   14000d85c:	cmp    eax,esp
   14000d85e:	lea    edi,[rcx-0xb]
   14000d861:	jl     0x14000d84f
   14000d863:	mov    r12b,0x1f
   14000d866:	stc    
   14000d867:	sbb    eax,0x6d38f725
   14000d86c:	movabs al,ds:0x4116b521273907aa
   14000d875:	frstor [rbx]
   14000d877:	rex movabs ds:0x272036c470d3f103,eax
   14000d881:	test   BYTE PTR [rip+0x319c3554],0x4e        # 0x1719d0ddc
   14000d888:	push   rax
   14000d889:	ds (bad) 
   14000d88b:	push   rdx
   14000d88c:	cmp    al,0x70
   14000d88e:	cmp    al,0x4b
   14000d890:	adc    BYTE PTR [rbx+0x44],dh
   14000d893:	jmp    0x14000d824
   14000d895:	repz (bad) 
   14000d897:	adc    DWORD PTR [rdi],esp
   14000d899:	rex.RX lea r8d,[rcx-0x33c704c2]
   14000d8a0:	sub    ebx,edi
   14000d8a2:	or     eax,0x4ed89bb2
   14000d8a7:	(bad)  
   14000d8a8:	push   rdx
   14000d8a9:	(bad)
   14000d8ae:	hlt    
   14000d8af:	ja     0x14000d8b0
   14000d8b1:	xor    eax,0x76de9a20
   14000d8b6:	out    0x4d,eax
   14000d8b8:	ins    DWORD PTR es:[rdi],dx
   14000d8b9:	iret   
   14000d8ba:	(bad)  
   14000d8bb:	lods   eax,DWORD PTR ds:[rsi]
   14000d8bc:	outs   dx,DWORD PTR ds:[rsi]
   14000d8bd:	pop    rdi
   14000d8be:	enter  0x9ce8,0x74
   14000d8c2:	outs   dx,DWORD PTR ds:[rsi]
   14000d8c3:	or     BYTE PTR [rip+0x5ad68a1c],bh        # 0x19ad762e5
   14000d8c9:	mov    ah,0x41
   14000d8cb:	cwde   
   14000d8cc:	sti    
   14000d8cd:	test   DWORD PTR [rdx+rcx*2-0x477bb9ca],0xbe667250
   14000d8d8:	or     BYTE PTR [rip+0x45a046d1],cl        # 0x185a11faf
   14000d8de:	rex.X test al,0x52
   14000d8e1:	rex.W sub bl,cl
   14000d8e4:	jbe    0x14000d8cb
   14000d8e6:	rex.B cmp al,0x79
   14000d8e9:	xor    bl,BYTE PTR [rbx]
   14000d8eb:	rol    esp,cl
   14000d8ed:	(bad)  
   14000d8ee:	ds jrcxz 0x14000d8f3
   14000d8f1:	xlat   BYTE PTR ds:[rbx]
   14000d8f2:	mov    WORD PTR [rcx],es
   14000d8f4:	push   rsp
   14000d8f5:	sbb    BYTE PTR [rdx-0x4],ch
   14000d8f8:	push   rbx
   14000d8f9:	sub    dh,bl
   14000d8fb:	cs jl  0x14000d944
   14000d8fe:	(bad)  
   14000d8ff:	pop    rdi
   14000d900:	mov    edx,0x4c93e170
   14000d905:	ror    BYTE PTR [rdi+0x60073fe9],0x89
   14000d90c:	cmp    cl,BYTE PTR [rax-0x6]
   14000d90f:	xor    BYTE PTR [rax-0x23],al
   14000d912:	jg     0x14000d992
   14000d914:	(bad)  
   14000d915:	rex.R stos DWORD PTR es:[rdi],eax
   14000d917:	jmp    0x14000d8db
   14000d919:	sub    eax,0x1a0f8222
   14000d91e:	jo     0x14000d8c4
   14000d920:	rex.WR pop rsp
   14000d922:	retf   
   14000d923:	xchg   edi,eax
   14000d924:	rex.WR
   14000d925:	sbb    edi,r8d
   14000d928:	xor    eax,0xfd466e18
   14000d92d:	adc    BYTE PTR [rbx+0x79],cl
   14000d930:	(bad)  
   14000d931:	test   eax,0x65ad026
   14000d936:	mov    ch,0xe
   14000d938:	pop    rax
   14000d939:	int    0xc0
   14000d93b:	rex.WB fidiv DWORD PTR [r10+0x7f885c75]
   14000d942:	mov    DWORD PTR [rbx+riz*4-0x341caa6e],esi
   14000d949:	(bad)
   14000d94c:	mov    bl,bl
   14000d94e:	rex.WB jmp 0x16405af10
   14000d954:	cmp    ch,ah
   14000d956:	push   rax
   14000d957:	fmul   QWORD PTR [rdi]
   14000d959:	add    al,0xb9
   14000d95b:	jp     0x14000d977
   14000d95d:	cli    
   14000d95e:	(bad)
   14000d961:	(bad)
   14000d964:	rex (bad) [rax]
   14000d967:	rex.X (bad) 
   14000d969:	retf   
   14000d96a:	or     ah,cl
   14000d96c:	xchg   ebp,eax
   14000d96d:	(bad)  
   14000d96e:	and    BYTE PTR [rdi+0x28a5a24e],dl
   14000d974:	mov    ecx,0x2a0df8ed
   14000d979:	push   rsp
   14000d97a:	sub    eax,DWORD PTR [rsi]
   14000d97c:	xlat   BYTE PTR es:[rbx]
   14000d97e:	ins    BYTE PTR es:[rdi],dx
   14000d97f:	rex.RX
   14000d980:	rex.XB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d982:	xchg   DWORD PTR [rbx],eax
   14000d984:	ss jns 0x14000d995
   14000d987:	and    esp,DWORD PTR [rdx]
   14000d989:	rex.RX
   14000d98a:	fs ins BYTE PTR es:[rdi],dx
   14000d98c:	mov    edx,0x66f4bcf
   14000d991:	movabs ds:0x26d72604619357c5,al
   14000d99a:	xlat   BYTE PTR ds:[rbx]
   14000d99b:	rex.RX mov spl,0x88
   14000d99e:	(bad)  
   14000d99f:	and    al,BYTE PTR [rsp+rbx*8]
   14000d9a2:	rex.X push rsp
   14000d9a4:	cs mov dl,0x4e
   14000d9a7:	in     eax,dx
   14000d9a8:	(bad)  
   14000d9a9:	out    0x4d,al
   14000d9ab:	push   rax
   14000d9ac:	adc    esi,esi
   14000d9ae:	stos   DWORD PTR es:[rdi],eax
   14000d9af:	(bad)  
   14000d9b0:	mov    al,0x7
   14000d9b2:	sbb    al,BYTE PTR [rax]
   14000d9b4:	add    BYTE PTR [rsi+rsi*4+0x5],dl
   14000d9b8:	xchg   esi,eax
   14000d9b9:	pop    rax
   14000d9ba:	or     ebx,DWORD PTR [rax+0x3e5ffd2c]
   14000d9c0:	jnp    0x14000d9ab
   14000d9c2:	scas   al,BYTE PTR es:[rdi]
   14000d9c3:	ins    DWORD PTR es:[rdi],dx
   14000d9c4:	imul   esi,DWORD PTR [rsi-0x12],0x56e3cf37
   14000d9cb:	jge    0x14000d9a3
   14000d9cd:	(bad)  
   14000d9ce:	fidiv  DWORD PTR [rax+0x3d8206b9]
   14000d9d4:	pop    rdi
   14000d9d5:	fsub   QWORD PTR [rcx-0x4ecd760e]
   14000d9db:	jnp    0x14000d9bf
   14000d9dd:	repnz (bad) 
   14000d9df:	add    DWORD PTR [rbx+rsi*1],0x1f58de2
   14000d9e6:	add    r11,rdi
   14000d9e9:	repnz pop rsi
   14000d9eb:	mov    ah,0x3e
   14000d9ed:	repz bswap ecx
   14000d9f0:	fdiv   st(0),st
   14000d9f2:	(bad)  
   14000d9f3:	mov    ebx,0x2647c6fa
   14000d9f8:	(bad)  
   14000d9f9:	in     eax,dx
   14000d9fa:	fwait
   14000d9fb:	ins    BYTE PTR es:[rdi],dx
   14000d9fc:	adc    BYTE PTR [rsi+0x63],cl
   14000d9ff:	add    DWORD PTR [rax+0x1d],ebp
   14000da02:	add    BYTE PTR [rbp-0x18e2c8e3],ah
   14000da08:	in     al,dx
   14000da09:	out    dx,al
   14000da0a:	retf   0x93b3
   14000da0d:	jae    0x14000d9bc
   14000da0f:	pop    rcx
   14000da10:	popf   
   14000da11:	fidiv  DWORD PTR [rcx]
   14000da13:	xchg   al,ah
   14000da15:	lock mov WORD PTR [rbx+rdi*2-0x3e107284],fs
   14000da1d:	mov    dl,0x3a
   14000da1f:	add    BYTE PTR [rdx],al
   14000da21:	xchg   ebp,eax
   14000da22:	push   rsi
   14000da23:	sbb    edx,edi
   14000da25:	loopne 0x14000da51
   14000da27:	adc    DWORD PTR [rcx-0x60be5094],eax
   14000da2d:	cld    
   14000da2e:	jae    0x14000d9d0
   14000da30:	mov    edi,0xb00dd766
   14000da35:	gs add al,0x42
   14000da38:	or     DWORD PTR [rax-0xd82fe6],esp
   14000da3e:	sbb    al,0x4
   14000da40:	rex.WRB neg r14
   14000da43:	jno    0x14000da98
   14000da45:	and    edi,DWORD PTR [rsi+0x64c0c11d]
   14000da4b:	cmp    ebp,esp
   14000da4d:	mov    ebp,0x88d9d281
   14000da52:	mov    esi,ss
   14000da54:	loop   0x14000da58
   14000da56:	xchg   DWORD PTR [rcx+rcx*4-0x21cc7f68],ecx
   14000da5d:	or     esp,DWORD PTR [rdi-0x22]
   14000da60:	(bad)  
   14000da61:	xor    BYTE PTR [rax+0x4cf245c9],al
   14000da67:	mov    edx,DWORD PTR [rsi]
   14000da69:	add    ebp,DWORD PTR [rip+0xffffffffe6b01305]        # 0x126b0ed74
   14000da6f:	rex cmp DWORD PTR [rsi],ebx
   14000da72:	jl     0x14000da96
   14000da74:	out    0xb3,al
   14000da76:	adc    esi,esi
   14000da78:	(bad)  
   14000da79:	scas   al,BYTE PTR es:[rdi]
   14000da7a:	or     DWORD PTR [rbx],eax
   14000da7c:	test   al,0xf4
   14000da7e:	xchg   edi,eax
   14000da7f:	(bad)  
   14000da80:	pop    rbp
   14000da81:	jrcxz  0x14000da04
   14000da83:	sbb    eax,0xfd763a33
   14000da88:	hlt    
   14000da89:	push   rbx
   14000da8a:	(bad)  
   14000da8b:	leave  
   14000da8c:	add    al,0xfa
   14000da8e:	mov    al,0xfe
   14000da90:	rex.RX xchg eax,eax
   14000da92:	jae    0x14000da8a
   14000da94:	adc    cl,BYTE PTR [rbx-0x4e]
   14000da97:	(bad)  
   14000da98:	jl     0x14000dab6
   14000da9a:	jl     0x14000da81
   14000da9c:	push   dx
   14000da9e:	test   al,0xc6
   14000daa0:	xchg   ecx,eax
   14000daa1:	cmc    
   14000daa2:	outs   dx,DWORD PTR ds:[rsi]
   14000daa3:	mov    edi,0xc51c2739
   14000daa8:	fwait
   14000daa9:	ror    ch,cl
   14000daab:	push   0xffffffffffffffc4
   14000daad:	sbb    edi,esp
   14000daaf:	loop   0x14000da5a
   14000dab1:	mov    ecx,0xfc4ff688
   14000dab6:	mov    edx,0xcbf63e4a
   14000dabb:	xor    BYTE PTR [rbp+0x47cfa14e],cl
   14000dac1:	pop    rdx
   14000dac2:	cmp    al,0xb1
   14000dac4:	add    ah,BYTE PTR [rip+0x8b5a04d]        # 0x148b67b17
   14000daca:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dacb:	sbb    eax,0xb33a6a90
   14000dad0:	add    BYTE PTR [rbx+0x6ab8e0b6],0x64
   14000dad7:	ror    BYTE PTR [rax],cl
   14000dad9:	mov    cl,ch
   14000dadb:	xlat   BYTE PTR ds:[rbx]
   14000dadc:	cmp    eax,0x21985711
   14000dae1:	lods   al,BYTE PTR ds:[rsi]
   14000dae2:	(bad)  
   14000dae3:	and    BYTE PTR [rax+0x4e3c747e],dl
   14000dae9:	xchg   esi,eax
   14000daea:	add    ch,BYTE PTR [rcx]
   14000daec:	jb     0x14000db02
   14000daee:	add    al,0x7f
   14000daf0:	mov    cl,dh
   14000daf2:	nop
   14000daf3:	mov    edi,0xeae035f8
   14000daf8:	rex.WXB
   14000daf9:	ss (bad) 
   14000dafb:	xchg   edi,eax
   14000dafc:	xchg   esp,eax
   14000dafd:	cmc    
   14000dafe:	push   rdi
   14000daff:	jo     0x14000db0b
   14000db01:	repz retf 0xc0b3
   14000db05:	test   BYTE PTR [rdx],0xe
   14000db08:	mov    dh,0xd3
   14000db0a:	out    0xe2,al
   14000db0c:	rex.X (bad) 
   14000db0e:	hlt    
   14000db0f:	movabs al,ds:0xbbf291a32c318d9d
   14000db18:	adc    BYTE PTR [rbx],bl
   14000db1a:	xor    DWORD PTR [rdx+0x0],esp
   14000db1d:	movabs ds:0x7e70181421318c45,eax
   14000db26:	and    DWORD PTR [rdi+riz*4+0x37],0xda3a1ce0
   14000db2e:	(bad)  
   14000db2f:	rex.WX
   14000db30:	mov    cx,0xd720
   14000db34:	(bad)  
   14000db35:	fidivr DWORD PTR [rdi]
   14000db37:	push   rsi
   14000db38:	in     al,dx
   14000db39:	adc    ebx,DWORD PTR [rax-0x3075ed02]
   14000db3f:	imul   ebx,DWORD PTR [rdx-0x40],0x4c1ec27e
   14000db46:	add    edx,DWORD PTR [rdx-0x51de75e1]
   14000db4c:	outs   dx,BYTE PTR ds:[rsi]
   14000db4d:	(bad)  
   14000db4e:	jmp    0x19a0cf392
   14000db53:	(bad)  
   14000db54:	rex.RX fstp st(3)
   14000db57:	mov    ebx,0xfce1e1e8
   14000db5c:	push   rcx
   14000db5d:	test   al,ah
   14000db5f:	popf   
   14000db60:	enter  0x156f,0xb6
   14000db64:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000db65:	repnz xchg edx,eax
   14000db67:	sub    DWORD PTR [rdx],esp
   14000db69:	add    BYTE PTR [rdi+0x1fddceaa],bh
   14000db6f:	mov    BYTE PTR [rsi-0x2d0f15d3],ch
   14000db75:	out    dx,eax
   14000db76:	lea    edi,[rax-0x16]
   14000db79:	fld    QWORD PTR [rcx-0x23]
   14000db7c:	stc    
   14000db7d:	push   rcx
   14000db7e:	mov    ah,0x3e
   14000db80:	std    
   14000db81:	bswap  eax
   14000db83:	fdiv   st(4),st
   14000db85:	movabs al,ds:0x5cdeebd6521ed89e
   14000db8e:	add    BYTE PTR [rdx+0xb],bl
   14000db91:	loopne 0x14000dbd9
   14000db93:	fld    TBYTE PTR [rdx+0x3]
   14000db96:	pushf  
   14000db97:	mov    edx,0x468a99e
   14000db9c:	sub    ah,ch
   14000db9e:	test   eax,0x416c618
   14000dba4:	xchg   esp,eax
   14000dba5:	sti    
   14000dba6:	(bad)  
   14000dba7:	out    dx,eax
   14000dba8:	mov    edx,0x1246d85a
   14000dbad:	cdq    
   14000dbae:	rex.WR
   14000dbaf:	ds jg  0x14000dc0a
   14000dbb2:	loope  0x14000db4e
   14000dbb4:	and    esp,DWORD PTR [rbx-0x60]
   14000dbb7:	pop    rdi
   14000dbb8:	jns    0x14000dbc4
   14000dbba:	jb     0x14000dba1
   14000dbbc:	jns    0x14000dc36
   14000dbbe:	jrcxz  0x14000dbcc
   14000dbc0:	ins    BYTE PTR es:[rdi],dx
   14000dbc1:	mov    ch,0x0
   14000dbc3:	repz ret 0x4097
   14000dbc7:	adc    BYTE PTR [rbx+rbp*8-0x3cb88e3],bh
   14000dbce:	cld    
   14000dbcf:	cmp    al,0x5c
   14000dbd1:	cmp    eax,0xc3d273a2
   14000dbd6:	movabs eax,ds:0x7642937030c67932
   14000dbdf:	xor    DWORD PTR [rax+0x2838bb1],edx
   14000dbe5:	(bad)  
   14000dbe6:	cwde   
   14000dbe7:	mov    eax,DWORD PTR [rax]
   14000dbe9:	ins    DWORD PTR es:[rdi],dx
   14000dbea:	fidivr WORD PTR [rcx+0x31]
   14000dbed:	rex.RX xchg eax,eax
   14000dbef:	sbb    esp,DWORD PTR [rbx+0x237208d]
   14000dbf5:	in     eax,dx
   14000dbf6:	(bad)  
   14000dbf7:	or     BYTE PTR [rip+0xffffffff9ed9a238],0xe8        # 0xdeda7e36
   14000dbfe:	jns    0x14000dbef
   14000dc00:	mov    ch,0xf
   14000dc02:	jo     0x14000dbd1
   14000dc04:	sbb    DWORD PTR [rax+0x4414005d],eax
   14000dc0a:	lods   eax,DWORD PTR ds:[rsi]
   14000dc0b:	xlat   BYTE PTR ds:[rbx]
   14000dc0c:	shl    BYTE PTR [rsi-0xc],1
   14000dc0f:	mov    eax,0x53a9f4e0
   14000dc14:	(bad)  
   14000dc15:	test   al,0xc8
   14000dc17:	lock ret 
   14000dc19:	cli    
   14000dc1a:	sbb    ebp,DWORD PTR [rsi-0x5a5be058]
   14000dc20:	(bad)  
   14000dc22:	fdivr  DWORD PTR [rip+0xffffffffd92fc739]        # 0x11930a361
   14000dc28:	scas   eax,DWORD PTR es:[rdi]
   14000dc29:	mov    ecx,0x6e1aca07
   14000dc2e:	(bad)  
   14000dc2f:	xor    eax,0x1d56fa23
   14000dc34:	(bad)  
   14000dc35:	xlat   BYTE PTR ds:[rbx]
   14000dc36:	sahf   
   14000dc37:	sub    edx,DWORD PTR [rax+0x73]
   14000dc3a:	adc    ebp,ebp
   14000dc3c:	(bad)  
   14000dc3d:	call   FWORD PTR [rbx+0x2a]
   14000dc40:	stc    
   14000dc41:	fsubr  DWORD PTR [rdi+0x48ed24c0]
   14000dc47:	xor    al,0xfb
   14000dc49:	movzx  edx,BYTE PTR [rdx+0x36]
   14000dc4d:	in     eax,dx
   14000dc4e:	add    ch,cl
   14000dc50:	add    eax,0xa006d390
   14000dc55:	push   rdx
   14000dc56:	mov    BYTE PTR [rdi-0x20fad878],cl
   14000dc5c:	frstor [rbx-0x34]
   14000dc5f:	sub    eax,0xc58a7e0a
   14000dc64:	popf   
   14000dc65:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dc66:	xor    DWORD PTR ds:[rsi-0x43],ebp
   14000dc6a:	adc    DWORD PTR [rdx+rbp*2],0x1061cfbf
   14000dc71:	sbb    DWORD PTR [rsi+0x45],ecx
   14000dc74:	adc    BYTE PTR [rbp+0x385cdfab],dl
   14000dc7a:	add    DWORD PTR [rcx],edi
   14000dc7c:	mul    DWORD PTR [rax+rdi*4+0x3f]
   14000dc80:	test   eax,0xe3f4fa04
   14000dc85:	and    BYTE PTR [rcx],dl
   14000dc87:	mov    edx,0x49a740f1
   14000dc8c:	(bad)  
   14000dc8d:	and    esp,edi
   14000dc8f:	sbb    esp,DWORD PTR [rsp+rsi*4+0x66]
   14000dc93:	xor    ebx,DWORD PTR [rdx+rsi*4]
   14000dc96:	sbb    DWORD PTR [rip+0x630d18d9],ecx        # 0x1a30df575
   14000dc9c:	xlat   BYTE PTR ds:[rbx]
   14000dc9d:	cld    
   14000dc9e:	mov    BYTE PTR [rax+0xd66e318],cl
   14000dca4:	lods   eax,DWORD PTR ds:[rsi]
   14000dca5:	pop    rdi
   14000dca6:	(bad)  
   14000dca7:	out    0x77,eax
   14000dca9:	push   rax
   14000dcaa:	adc    rbp,QWORD PTR [rbx-0x35]
   14000dcae:	or     DWORD PTR [rax],esp
   14000dcb0:	mov    ecx,0x6640d720
   14000dcb5:	or     al,0x72
   14000dcb7:	out    0x5f,eax
   14000dcb9:	add    ch,ch
   14000dcbb:	xor    dh,ch
   14000dcbd:	rex.WXB (bad) 
   14000dcbf:	mov    BYTE PTR [rcx-0x9],cl
   14000dcc2:	fadd   DWORD PTR [rdi-0x28]
   14000dcc5:	mov    eax,DWORD PTR [rax-0x60]
   14000dcc8:	cwde   
   14000dcc9:	fwait
   14000dcca:	xchg   ebx,eax
   14000dccb:	pop    rdi
   14000dccc:	or     esi,DWORD PTR [rax]
   14000dcce:	rex.WRB cli 
   14000dcd0:	adc    eax,DWORD PTR [rax+0x1fcb958d]
   14000dcd6:	add    BYTE PTR es:[rdi],cl
   14000dcd9:	out    0x8f,eax
   14000dcdb:	xchg   esi,eax
   14000dcdc:	ins    DWORD PTR es:[rdi],dx
   14000dcdd:	jnp    0x14000dce0
   14000dcdf:	stos   BYTE PTR es:[rdi],al
   14000dce0:	pop    rsi
   14000dce1:	jg     0x14000dce3
   14000dce3:	(bad)  
   14000dce4:	movabs ds:0x63d521d18b37d231,al
   14000dced:	rex.WRX sar al,0x89
   14000dcf1:	test   al,0x59
   14000dcf3:	js     0x14000dc78
   14000dcf5:	movsxd eax,DWORD PTR [rsi+riz*1]
   14000dcf8:	rex.B (bad) 
   14000dcfb:	ret    
   14000dcfc:	push   0xffffffff91efccfd
   14000dd01:	mov    ecx,0x451b41e5
   14000dd06:	push   0x74d77535
   14000dd0b:	(bad)  
   14000dd0c:	pop    rbp
   14000dd0d:	call   0xe349f328
   14000dd12:	add    ecx,DWORD PTR [rsi+0x3b]
   14000dd15:	(bad)  
   14000dd16:	rex.R push rax
   14000dd18:	or     eax,0x10b1f2f8
   14000dd1d:	(bad)  
   14000dd1f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dd20:	mov    al,0xa1
   14000dd22:	in     al,dx
   14000dd23:	outs   dx,DWORD PTR ds:[rsi]
   14000dd24:	mov    bh,0xe3
   14000dd26:	pop    rax
   14000dd27:	ror    DWORD PTR [rbp-0x12de8f4a],1
   14000dd2d:	std    
   14000dd2e:	xchg   DWORD PTR [rsp+rcx*8],edx
   14000dd31:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dd32:	loop   0x14000dd93
   14000dd34:	add    DWORD PTR [rsi+riz*8+0x20e7ab20],ebp
   14000dd3b:	addr32 mov esi,0x40bd9f0d
   14000dd41:	je     0x14000dd49
   14000dd43:	jae    0x14000dd2b
   14000dd45:	xor    DWORD PTR [rax],esi
   14000dd47:	sub    edi,0xd4e6f3be
   14000dd4d:	sbb    esp,ebx
   14000dd4f:	(bad)  
   14000dd50:	(bad)  
   14000dd51:	xchg   edx,eax
   14000dd52:	in     eax,0x64
   14000dd54:	(bad)  
   14000dd55:	rex.XB xchg r14b,cl
   14000dd58:	test   eax,0x18dca692
   14000dd5d:	mov    ebx,0xc4444094
   14000dd62:	in     al,dx
   14000dd63:	fdivr  st,st(3)
   14000dd65:	adc    eax,0x12aae081
   14000dd6a:	lods   eax,DWORD PTR ds:[rsi]
   14000dd6b:	movabs eax,ds:0x535ecc0e6b132135
   14000dd74:	and    cl,dh
   14000dd76:	fcom   st(3)
   14000dd78:	push   rbx
   14000dd79:	mov    ebp,ebp
   14000dd7b:	(bad)  
   14000dd7c:	in     al,dx
   14000dd7d:	test   DWORD PTR [rbx],edx
   14000dd7f:	shr    bl,1
   14000dd81:	test   al,0x0
   14000dd83:	sub    dl,BYTE PTR [rdi+rdi*1+0x6]
   14000dd87:	rcr    edx,0xc6
   14000dd8a:	(bad)  
   14000dd8b:	repnz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dd8d:	imul   ebx,DWORD PTR [rsi],0xe2ce4dba
   14000dd93:	push   rsi
   14000dd94:	jge    0x14000dd6c
   14000dd96:	rex.WB popf 
   14000dd98:	clc    
   14000dd99:	or     eax,0x7dfce656
   14000dd9e:	jge    0x14000dd3e
   14000dda0:	cmp    DWORD PTR [rbx+rdi*1],edx
   14000dda3:	jo     0x14000ddac
   14000dda5:	mov    bl,0xc1
   14000dda7:	out    0xa7,al
   14000dda9:	test   BYTE PTR [rsi+0x1d9ae2ac],0xc
   14000ddb0:	int3   
   14000ddb1:	pop    rbp
   14000ddb2:	(bad)  
   14000ddb3:	call   0x14dafe3a3
   14000ddb8:	lock (bad) 
   14000ddba:	cld    
   14000ddbb:	xchg   edx,eax
   14000ddbc:	xor    DWORD PTR [rcx-0x25],ecx
   14000ddbf:	mov    WORD PTR [rdi-0x6fb6526d],?
   14000ddc5:	jbe    0x14000dd47
   14000ddc7:	rex.RX (bad) 
   14000ddc9:	rex.W (bad) [rsi]
   14000ddcc:	cmp    cl,BYTE PTR [rdi-0x27]
   14000ddcf:	in     eax,0xbb
   14000ddd1:	loop   0x14000dddf
   14000ddd3:	scas   eax,DWORD PTR es:[rdi]
   14000ddd4:	js     0x14000ddc3
   14000ddd6:	lods   eax,DWORD PTR ds:[rsi]
   14000ddd7:	(bad)  
   14000ddd9:	push   rax
   14000ddda:	fsubr  QWORD PTR [rsi]
   14000dddc:	lea    edx,[rbx+rdx*2]
   14000dddf:	jne    0x14000de1d
   14000dde1:	fwait
   14000dde2:	adc    bh,cl
   14000dde4:	int3   
   14000dde5:	in     al,dx
   14000dde6:	xor    eax,0x3e28075e
   14000ddeb:	ret    
   14000ddec:	mov    dl,0xe4
   14000ddee:	(bad)  
   14000ddef:	(bad)  
   14000ddf0:	add    DWORD PTR [rsi-0x13],esp
   14000ddf3:	cmp    al,0xf4
   14000ddf5:	jmp    0xc19ddec1
   14000ddfa:	rcr    QWORD PTR [rax+rdi*8+0x1e],0x8
   14000de00:	rex.X mov dil,0xde
   14000de03:	jl     0x14000de49
   14000de05:	jno    0x14000de18
   14000de07:	clc    
   14000de08:	out    dx,eax
   14000de09:	ficom  DWORD PTR [rax+0x6c87ce93]
   14000de0f:	repnz pushf 
   14000de11:	(bad)
   14000de14:	movabs al,ds:0xd968c08c60080998
   14000de1d:	stc    
   14000de1e:	and    eax,0xae38bd54
   14000de23:	cmp    DWORD PTR [rdx-0x37e367e5],edx
   14000de29:	jb     0x14000de8e
   14000de2b:	pop    rbp
   14000de2c:	add    al,0xbb
   14000de2e:	(bad)  
   14000de2f:	call   FWORD PTR [rip+0xffffffffd8cf5f7e]        # 0x118d03db3
   14000de35:	stos   DWORD PTR es:[rdi],eax
   14000de36:	pop    rcx
   14000de37:	add    BYTE PTR [rdi],cl
   14000de39:	(bad)  
   14000de3a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000de3b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000de3c:	rex.WXB push QWORD PTR [r11]
   14000de3f:	out    0xaf,eax
   14000de41:	mov    esp,0x87e84993
   14000de46:	repnz outs dx,DWORD PTR ds:[rsi]
   14000de48:	mov    eax,0x90db1621
   14000de4d:	(bad)
   14000de50:	lahf   
   14000de51:	in     eax,0xce
   14000de53:	rcl    DWORD PTR [rdi-0x709da7db],0x92
   14000de5a:	gs (bad) 
   14000de5c:	(bad)  
   14000de5d:	icebp  
   14000de5e:	sbb    dl,ah
   14000de60:	dec    DWORD PTR [rcx]
   14000de62:	fiadd  DWORD PTR [rcx-0x47]
   14000de65:	cmp    eax,0xeef48d7b
   14000de6a:	(bad)  
   14000de6b:	loope  0x14000de43
   14000de6d:	iret   
   14000de6e:	cld    
   14000de6f:	(bad)  
   14000de70:	fwait
   14000de71:	and    esi,edi
   14000de73:	xchg   ebp,eax
   14000de74:	rex.R push rbx
   14000de76:	call   0xe4812cb8
   14000de7b:	or     DWORD PTR [rdx+0x74],ebp
   14000de7e:	lods   al,BYTE PTR ds:[rsi]
   14000de7f:	imul   esp,DWORD PTR [rax+0x4f4221da],0x1e866d88
   14000de89:	movabs eax,ds:0x263689e8667bdea0
   14000de92:	je     0x14000de43
   14000de94:	fiadd  WORD PTR [rbx]
   14000de96:	gs xchg ebx,eax
   14000de98:	sub    DWORD PTR [rsi+rax*1-0x53],edi
   14000de9c:	(bad)  
   14000de9e:	pop    rdx
   14000de9f:	pushf  
   14000dea0:	push   0x12
   14000dea2:	lods   eax,DWORD PTR ds:[rsi]
   14000dea3:	push   rsp
   14000dea4:	xchg   esp,eax
   14000dea5:	lods   eax,DWORD PTR ds:[rsi]
   14000dea6:	sub    edx,eax
   14000dea8:	(bad)  
   14000deaa:	cmp    ah,BYTE PTR [rdi+rbx*1]
   14000dead:	rex.B lahf 
   14000deaf:	cmp    eax,DWORD PTR [rcx]
   14000deb1:	hlt    
   14000deb2:	push   rsi
   14000deb3:	jo     0x14000de5d
   14000deb5:	fld    TBYTE PTR [rbp+rsi*4-0x6e]
   14000deb9:	xchg   esp,eax
   14000deba:	jge    0x14000de4e
   14000debc:	pop    rax
   14000debd:	add    al,BYTE PTR [rcx-0x4c]
   14000dec0:	nop
   14000dec1:	or     al,0x33
   14000dec3:	fld    DWORD PTR ss:[rax+0x4525e6ed]
   14000deca:	lahf   
   14000decb:	or     esp,eax
   14000decd:	(bad)  
   14000dece:	rex.WXB (bad) 
   14000ded0:	xchg   ecx,eax
   14000ded1:	fxch   st(3)
   14000ded3:	and    ebx,0xccb255b6
   14000ded9:	or     DWORD PTR [rdx+riz*4],eax
   14000dedc:	or     eax,0x332018c
   14000dee1:	(bad)  
   14000dee2:	pop    rdx
   14000dee3:	rex.WRXB xor rax,0x6dbf6050
   14000dee9:	add    eax,0x305ec556
   14000deee:	add    bh,dh
   14000def0:	rex.WRX popf 
   14000def2:	cmp    ebp,DWORD PTR ss:[rbx+0x4a]
   14000def6:	xchg   BYTE PTR [rax+0x1f33e5fe],al
   14000defc:	and    DWORD PTR [rax],eax
   14000defe:	pmulhw mm1,QWORD PTR [rdi-0x6a]
   14000df02:	(bad)  
   14000df03:	(bad)  
   14000df04:	cwde   
   14000df05:	rol    DWORD PTR [rdi],cl
   14000df07:	xchg   BYTE PTR [rax],al
   14000df09:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000df0a:	retf   0xdb86
   14000df0d:	rex.R push rdx
   14000df0f:	ds push rsi
   14000df11:	push   rdi
   14000df12:	movabs ds:0x8aaa19e637c163eb,eax
   14000df1b:	xchg   ebx,eax
   14000df1c:	(bad)  
   14000df1d:	add    DWORD PTR [rax+0x7ff688b9],ebp
   14000df23:	hlt    
   14000df24:	sbb    ecx,DWORD PTR [rdx+0x199fffdf]
   14000df2a:	xchg   ebx,eax
   14000df2b:	mov    dh,0x4d
   14000df2d:	(bad)  
   14000df2e:	pop    rdx
   14000df2f:	imul   BYTE PTR [rax+rax*1]
   14000df32:	add    eax,0x644ba6a8
   14000df37:	fidiv  DWORD PTR [rcx-0x67]
   14000df3a:	xchg   DWORD PTR [rbx+rax*4+0x1ea67d90],ebx
   14000df41:	stos   DWORD PTR es:[rdi],eax
   14000df42:	and    dl,BYTE PTR [rip+0xffffffffc493911a]        # 0x104947062
   14000df48:	cmp    DWORD PTR [rcx],0xf8ac5496
   14000df4e:	(bad)  
   14000df4f:	test   DWORD PTR [rip+0xffffffffe375fc65],esp        # 0x12376dbba
   14000df55:	sbb    eax,0x88ae9214
   14000df5a:	add    BYTE PTR [rbx+0x1e97e84d],al
   14000df60:	add    eax,0xe5790e49
   14000df65:	sbb    DWORD PTR [rax],edx
   14000df67:	add    al,0xc7
   14000df69:	outs   dx,DWORD PTR ds:[rsi]
   14000df6a:	cmp    ebp,DWORD PTR [rdx-0x650d9d6c]
   14000df70:	add    BYTE PTR [rax+0x48],cl
   14000df73:	repnz pushf 
   14000df75:	fs xchg esp,eax
   14000df77:	mov    cl,0x68
   14000df79:	in     eax,dx
   14000df7a:	xor    eax,ebp
   14000df7c:	xchg   edi,eax
   14000df7d:	fimul  WORD PTR [rdi+0x33b31811]
   14000df83:	xor    eax,0x13e37cba
   14000df88:	iret   
   14000df89:	mov    eax,eax
   14000df8b:	xor    DWORD PTR [rcx+0x5a7cff90],eax
   14000df91:	sub    eax,0xa3beb795
   14000df96:	jbe    0x14000e010
   14000df98:	std    
   14000df99:	(bad)  
   14000df9a:	(bad)  
   14000df9b:	xor    eax,0x1a6bd280
   14000dfa0:	xchg   edi,eax
   14000dfa1:	inc    BYTE PTR [rdx-0x252b9f02]
   14000dfa7:	xor    cl,ch
   14000dfa9:	ret    
   14000dfaa:	rex.RXB
   14000dfab:	fs add eax,0xc2d5cc87
   14000dfb1:	(bad)  
   14000dfb2:	(bad)  
   14000dfb3:	jrcxz  0x14000df6a
   14000dfb5:	cmp    BYTE PTR [rbx+0x13],ch
   14000dfb8:	or     ch,0x8e
   14000dfbb:	jrcxz  0x14000df92
   14000dfbd:	(bad)  
   14000dfbe:	xor    al,BYTE PTR [rcx-0xbb728ec]
   14000dfc4:	out    0xa7,eax
   14000dfc6:	and    edi,DWORD PTR [rcx+rbx*8+0x6a]
   14000dfca:	pop    rbx
   14000dfcb:	fimul  WORD PTR [rax+rcx*2-0x48f303e1]
   14000dfd2:	(bad)  
   14000dfd3:	stc    
   14000dfd4:	sub    eax,0xe9f72396
   14000dfd9:	mov    al,0x7a
   14000dfdb:	(bad)  
   14000dfdc:	(bad)  
   14000dfdd:	rol    DWORD PTR [rsi],0x9b
   14000dfe0:	jns    0x14000df6a
   14000dfe2:	xchg   edx,eax
   14000dfe3:	es and al,0xed
   14000dfe6:	add    BYTE PTR [rbp-0x29d2d7ca],cl
   14000dfec:	repnz (bad) 
   14000dfee:	ds jne 0x14000e05c
   14000dff1:	or     al,ah
   14000dff3:	or     esp,DWORD PTR [rdx-0x63aaef84]
   14000dff9:	movabs ds:0x1707871dee1cd5d0,eax
   14000e002:	mov    bl,0x83
   14000e004:	adc    eax,0xe7042e7
   14000e009:	adc    dl,al
   14000e00b:	pop    rdi
   14000e00c:	rex.RXB jle 0x14000dff9
   14000e00f:	jmp    0x14000dfe1
   14000e011:	addr32 lahf 
   14000e013:	add    ah,BYTE PTR [rax]
   14000e015:	je     0x14000e00a
   14000e017:	lea    eax,[rdi+0x62866612]
   14000e01d:	es mov ebx,0x24408c2b
   14000e023:	addr32 popf 
   14000e025:	or     eax,0xf1233a19
   14000e02a:	stc    
   14000e02b:	shr    DWORD PTR [rdx-0x37e2189],1
   14000e031:	xchg   ebp,eax
   14000e032:	lea    edx,[rdx+riz*4]
   14000e035:	rex.X mov cl,BYTE PTR [rdi+0x58769859]
   14000e03c:	enter  0xe34c,0x9e
   14000e040:	xchg   esp,eax
   14000e041:	rex.WXB iretq 
   14000e043:	hlt    
   14000e044:	data16 jle 0x14000e046
   14000e047:	scas   eax,DWORD PTR es:[rdi]
   14000e048:	(bad)  
   14000e049:	imul   BYTE PTR [rax+rdx*1]
   14000e04c:	enter  0x127d,0x61
   14000e050:	(bad)  
   14000e051:	rex.WB jmp 0x14000e044
   14000e054:	repnz cdq 
   14000e056:	rex.WXB out dx,eax
   14000e058:	fs xor dh,ah
   14000e05b:	fdivp  st(4),st
   14000e05d:	cmp    eax,DWORD PTR [rcx-0x3e]
   14000e060:	jnp    0x14000e089
   14000e062:	outs   dx,DWORD PTR ds:[rsi]
   14000e063:	in     al,0xe3
   14000e065:	rex.B cmp al,0x59
   14000e068:	adc    al,0xd1
   14000e06a:	rex.X jmp 0x17831fcb7
   14000e070:	(bad)  
   14000e071:	cwde   
   14000e072:	or     DWORD PTR [rdx+riz*8-0x4bfd9f86],ecx
   14000e079:	je     0x14000e0ee
   14000e07b:	rol    BYTE PTR [rsi],1
   14000e07d:	mov    ah,0xf7
   14000e07f:	or     eax,0x80265a04
   14000e084:	adc    eax,0x1a806938
   14000e089:	pop    rbp
   14000e08a:	push   rax
   14000e08b:	movsxd edx,ecx
   14000e08d:	sub    eax,0x92806a2c
   14000e092:	(bad)  
   14000e093:	in     al,dx
   14000e094:	(bad)  
   14000e095:	and    DWORD PTR [rbp-0x6e50e016],eax
   14000e09b:	or     BYTE PTR [rcx],dh
   14000e09d:	add    ch,BYTE PTR [rsi+0x108682cf]
   14000e0a3:	mov    ebp,0xc7ef6b35
   14000e0a8:	sbb    al,BYTE PTR [rbx+rbp*1+0x2463f91f]
   14000e0af:	out    dx,al
   14000e0b0:	(bad)  
   14000e0b1:	sar    DWORD PTR [rdx],0xf2
   14000e0b4:	(bad)  
   14000e0b5:	mov    esi,0x58fa8c08
   14000e0ba:	out    dx,al
   14000e0bb:	ss fwait
   14000e0bd:	mov    cl,BYTE PTR [rcx+0x4ccc1998]
   14000e0c3:	rex.WR add al,0x32
   14000e0c6:	sbb    BYTE PTR [rcx],0x66
   14000e0c9:	ins    BYTE PTR es:[rdi],dx
   14000e0ca:	mov    dl,0x8c
   14000e0cc:	(bad)  
   14000e0cd:	rex.WR loopne 0x14000e093
   14000e0d0:	xchg   ebp,eax
   14000e0d1:	div    DWORD PTR [rax]
   14000e0d3:	xchg   ebx,eax
   14000e0d4:	add    eax,0x87158410
   14000e0d9:	or     r12,QWORD PTR [rbx+0x2f]
   14000e0dd:	(bad)  
   14000e0de:	stos   BYTE PTR es:[rdi],al
   14000e0df:	movsxd ebp,DWORD PTR [rdx+0x3d]
   14000e0e2:	add    al,0x17
   14000e0e4:	(bad)
   14000e0e9:	std    
   14000e0ea:	ins    BYTE PTR es:[rdi],dx
   14000e0eb:	(bad)  
   14000e0ec:	in     al,dx
   14000e0ed:	xchg   ebp,eax
   14000e0ee:	adc    edx,eax
   14000e0f0:	jnp    0x14000e082
   14000e0f2:	imul   BYTE PTR es:[rdi+rcx*8-0x4e424524]
   14000e0fa:	jp     0x14000e11b
   14000e0fc:	add    esi,DWORD PTR [rdi+rdi*4+0x7e]
   14000e100:	cs pushf 
   14000e102:	or     esi,ecx
   14000e104:	jmp    0x14000e128
   14000e106:	and    edi,ecx
   14000e108:	pop    rbp
   14000e109:	lods   al,BYTE PTR ds:[rsi]
   14000e10a:	movabs ds:0x1e6284fc4f7dd495,al
   14000e113:	fcomp  QWORD PTR [rip+0x1361dc8f]        # 0x15362bda8
   14000e119:	(bad)  
   14000e11a:	scas   eax,DWORD PTR es:[rdi]
   14000e11b:	(bad)  
   14000e11c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e11d:	movd   DWORD PTR [rsi-0x481a8025],mm0
   14000e124:	fcomp  DWORD PTR [rdi*4-0x49d674b1]
   14000e12b:	(bad)  [rcx-0xf8d9b25]
   14000e131:	or     eax,0x3400b9a0
   14000e136:	(bad)  
   14000e137:	ret    0xa174
   14000e13a:	pop    rdi
   14000e13b:	push   rbx
   14000e13c:	loopne 0x14000e1b3
   14000e13e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e13f:	(bad)  
   14000e140:	(bad)  
   14000e141:	and    edi,DWORD PTR [rdx+0x49]
   14000e144:	adc    eax,0xaff45839
   14000e149:	rex.R (bad) 
   14000e14b:	mov    esp,0x5e3e5fca
   14000e150:	loope  0x14000e156
   14000e152:	nop
   14000e153:	lea    ecx,[rbx+0x5fc2fd0]
   14000e159:	and    BYTE PTR [rdx+0x4e1f3763],al
   14000e15f:	fdiv   DWORD PTR [rcx]
   14000e161:	add    ebp,eax
   14000e163:	in     al,dx
   14000e164:	cmp    BYTE PTR [rdx+0x588d9321],cl
   14000e16a:	ins    BYTE PTR es:[rdi],dx
   14000e16b:	xchg   al,dh
   14000e16d:	pop    rbp
   14000e16e:	or     DWORD PTR [rcx+0x38988988],0x44
   14000e175:	(bad)  
   14000e176:	(bad)  
   14000e177:	(bad)  
   14000e178:	sahf   
   14000e179:	xor    DWORD PTR [rsi],eax
   14000e17b:	and    al,BYTE PTR [rax+0x31]
   14000e17e:	sub    esp,DWORD PTR [rbp+0x37]
   14000e181:	mov    cl,0x2a
   14000e183:	fidiv  DWORD PTR [rcx-0x427f32b1]
   14000e189:	repnz add DWORD PTR [rax+0x4c],edi
   14000e18d:	loop   0x14000e181
   14000e18f:	add    DWORD PTR [rbx+0x447dd6de],esp
   14000e195:	sar    BYTE PTR [rbx-0x375db0ba],0xed
   14000e19c:	(bad)  
   14000e19d:	mov    bh,0x79
   14000e19f:	(bad)  
   14000e1a0:	adc    eax,0xc7d30742
   14000e1a5:	(bad)  
   14000e1a6:	adc    BYTE PTR [rcx-0x5b],ch
   14000e1a9:	shl    ecx,1
   14000e1ab:	shl    BYTE PTR [rbx],0x42
   14000e1ae:	or     BYTE PTR [rbx+0x1e4c1cf7],0x30
   14000e1b5:	outs   dx,DWORD PTR ds:[rsi]
   14000e1b6:	not    BYTE PTR [rdi+0xf81b41f]
   14000e1bc:	jle    0x14000e194
   14000e1be:	cwde   
   14000e1bf:	mov    ah,0x6d
   14000e1c1:	add    bh,bh
   14000e1c3:	sub    al,0x8e
   14000e1c5:	xchg   esp,eax
   14000e1c6:	pop    rbp
   14000e1c7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1c8:	pop    rdi
   14000e1c9:	push   0x74
   14000e1cb:	and    DWORD PTR [rbp-0x28b91ffd],ebp
   14000e1d1:	rex.WRX (bad) 
   14000e1d3:	cli    
   14000e1d4:	xor    BYTE PTR [rdx-0x29],ah
   14000e1d7:	(bad)  
   14000e1d8:	shl    DWORD PTR [rbx],0x2f
   14000e1db:	add    eax,0xe03087b1
   14000e1e0:	fcomp  DWORD PTR [rbx]
   14000e1e2:	call   0x1a387063e
   14000e1e7:	xchg   ebp,eax
   14000e1e8:	jmp    0x115988caf
   14000e1ed:	xor    DWORD PTR [rcx],ecx
   14000e1ef:	std    
   14000e1f0:	fcom   QWORD PTR [rdi-0x78f9dc0]
   14000e1f6:	rcl    BYTE PTR [rdx+0x1ca39f5d],1
   14000e1fc:	adc    edx,DWORD PTR [rax+0x44]
   14000e1ff:	fs or  al,0xa0
   14000e202:	xor    eax,0xd557eb43
   14000e207:	fisttp QWORD PTR [rdx+rax*1+0x66]
   14000e20b:	es rex.RB (bad) 
   14000e20e:	rex.RB ret 0xd741
   14000e212:	(bad)  
   14000e213:	mov    ebx,0x5984cae8
   14000e218:	sub    ebp,eax
   14000e21a:	lods   al,BYTE PTR ds:[rsi]
   14000e21b:	cmp    BYTE PTR [rcx],ch
   14000e21d:	lods   eax,DWORD PTR ds:[rsi]
   14000e21e:	adc    eax,0x83d88fdb
   14000e223:	in     eax,0xc0
   14000e225:	rex.B (bad) 
   14000e227:	cli    
   14000e228:	movabs ds:0xd6fafadcee40c5e5,eax
   14000e231:	repnz push rax
   14000e233:	sbb    cl,BYTE PTR [rbx+0x7fa48b6f]
   14000e239:	jo     0x14000e27b
   14000e23b:	rex.WB
   14000e23c:	rex.R test al,0x5e
   14000e23f:	(bad)  
   14000e240:	rex.RXB sar BYTE PTR [r14],cl
   14000e243:	and    BYTE PTR [rsi+0x4f],dl
   14000e246:	and    ebp,DWORD PTR [rbp-0x3f]
   14000e249:	lahf   
   14000e24a:	stos   DWORD PTR es:[rdi],eax
   14000e24b:	cli    
   14000e24c:	xchg   esp,eax
   14000e24d:	jge    0x14000e1d7
   14000e24f:	jmp    0x14000e246
   14000e251:	mov    esi,es
   14000e253:	jnp    0x14000e294
   14000e255:	int    0xad
   14000e257:	mov    edi,0x8fac5bf2
   14000e25c:	fisub  WORD PTR [rdi-0x52a786ef]
   14000e262:	ja     0x14000e230
   14000e264:	gs (bad) 
   14000e266:	rex.WX ins DWORD PTR es:[rdi],dx
   14000e268:	jp     0x14000e2dc
   14000e26a:	push   0x2e
   14000e26c:	(bad)  
   14000e26d:	sbb    ebp,DWORD PTR [rbp-0x69]
   14000e270:	fimul  DWORD PTR [rbx+0x59]
   14000e273:	(bad)  
   14000e274:	shl    BYTE PTR [rcx-0x2b],0xc8
   14000e278:	loop   0x14000e289
   14000e27a:	add    QWORD PTR [rcx+0x5f],r14
   14000e27e:	(bad)  
   14000e27f:	(bad)  
   14000e280:	je     0x14000e2d7
   14000e282:	test   eax,0xd886a8a6
   14000e287:	xor    al,0x0
   14000e289:	movabs al,ds:0x2dba96862012fb9f
   14000e292:	(bad)
   14000e295:	rcr    DWORD PTR [rax-0x4a],cl
   14000e298:	loop   0x14000e230
   14000e29a:	and    DWORD PTR [rdx-0xe],ecx
   14000e29d:	mov    WORD PTR [rcx],fs
   14000e29f:	(bad)  
   14000e2a0:	cld    
   14000e2a1:	ds mov es,eax
   14000e2a4:	cld    
   14000e2a5:	(bad)  
   14000e2a6:	rex.WXB
   14000e2a7:	adc    DWORD PTR cs:[rax],ecx
   14000e2aa:	adc    esi,DWORD PTR [rcx-0x54009dd6]
   14000e2b0:	gs jbe 0x14000e25d
   14000e2b3:	add    ecx,DWORD PTR [rdx-0x1a9d6a77]
   14000e2b9:	(bad)  
   14000e2ba:	adc    DWORD PTR [rcx],eax
   14000e2bc:	jae    0x14000e2ea
   14000e2be:	and    BYTE PTR [rdx+0x4e77b14e],bh
   14000e2c4:	rcr    BYTE PTR [rax+0x23],0x8f
   14000e2c8:	xor    bh,BYTE PTR [rsi]
   14000e2ca:	sti    
   14000e2cb:	mov    ds,WORD PTR [rsi+0x5d]
   14000e2ce:	fstp   TBYTE PTR [rdx]
   14000e2d0:	(bad)  
   14000e2d1:	xchg   esp,eax
   14000e2d2:	shl    DWORD PTR [rcx+0x7d],cl
   14000e2d5:	adc    BYTE PTR ss:[rax+0x4c],bh
   14000e2d9:	mov    edi,0xb17f1a5
   14000e2de:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e2df:	push   0x42
   14000e2e1:	or     al,0xa0
   14000e2e3:	rex.WR hlt 
   14000e2e5:	(bad)  
   14000e2e6:	jrcxz  0x14000e2d9
   14000e2e8:	mov    ch,0xde
   14000e2ea:	rex.WR test al,0x8e
   14000e2ed:	xchg   edx,eax
   14000e2ee:	jmp    0x14000e33c
   14000e2f0:	add    al,0xd0
   14000e2f2:	ror    ch,cl
   14000e2f4:	call   0xca1cd535
   14000e2f9:	(bad)  
   14000e2fa:	jl     0x14000e320
   14000e2fc:	add    al,0xcf
   14000e2fe:	js     0x14000e33f
   14000e300:	mov    DWORD PTR [rbx],ebp
   14000e302:	add    DWORD PTR [rsi-0x65],ecx
   14000e305:	cs js  0x14000e370
   14000e308:	or     DWORD PTR [rax+0x3a],ecx
   14000e30b:	adc    ch,dl
   14000e30d:	add    al,0xc8
   14000e30f:	in     eax,dx
   14000e310:	sbb    ecx,DWORD PTR [rax+0x68e4f768]
   14000e316:	xchg   edi,eax
   14000e317:	mov    esi,0x3e2d2732
   14000e31c:	(bad)  
   14000e31d:	(bad)  
   14000e31e:	cmp    al,0xc9
   14000e320:	add    al,0x2b
   14000e322:	cmc    
   14000e323:	icebp  
   14000e324:	(bad)  
   14000e325:	adc    esi,DWORD PTR [rdx-0xf]
   14000e328:	cmp    DWORD PTR [rsp+rsi*4],ebp
   14000e32b:	shl    BYTE PTR [rdi+rdx*8+0x70e71a1f],cl
   14000e332:	and    al,0xf2
   14000e334:	and    edx,eax
   14000e336:	mov    ecx,0x86328c66
   14000e33b:	jns    0x14000e352
   14000e33d:	pop    rdx
   14000e33e:	and    BYTE PTR [rbp+0x29026656],0x26
   14000e345:	xchg   ebp,eax
   14000e346:	add    al,0x26
   14000e348:	mov    al,0x3b
   14000e34a:	loop   0x14000e3b1
   14000e34c:	jb     0x14000e307
   14000e34e:	nop
   14000e34f:	xchg   ebp,eax
   14000e350:	push   rdx
   14000e351:	mov    dl,BYTE PTR [rax]
   14000e353:	xchg   esp,eax
   14000e354:	mov    ebp,edi
   14000e356:	push   0x9b5ec06
   14000e35b:	add    BYTE PTR [rax-0x38955b87],bh
   14000e361:	outs   dx,BYTE PTR ds:[rsi]
   14000e362:	ins    DWORD PTR es:[rdi],dx
   14000e363:	test   DWORD PTR [rdi-0x1a08bfcf],0xfaf145cf
   14000e36d:	sub    BYTE PTR [rcx-0x18],cl
   14000e370:	pop    rax
   14000e371:	repnz rex.XB and bpl,r9b
   14000e375:	pop    rdi
   14000e376:	jb     0x14000e373
   14000e378:	rex.WX
   14000e379:	movabs al,gs:0xa35d7838cf1c6c62
   14000e383:	icebp  
   14000e384:	movabs eax,ds:0xbc1c84df91e371cf
   14000e38d:	int    0x4e
   14000e38f:	ficom  DWORD PTR [rcx+0x41]
   14000e392:	int3   
   14000e393:	and    dh,BYTE PTR [rax+0x16d2bc69]
   14000e399:	rcr    BYTE PTR [rdx+0x2],1
   14000e39c:	xor    eax,0x33494017
   14000e3a1:	cmp    BYTE PTR [rax],cl
   14000e3a3:	loope  0x14000e378
   14000e3a5:	nop
   14000e3a6:	add    eax,0x11481994
   14000e3ab:	mov    cs,WORD PTR [rax+0x6aaf1d2]
   14000e3b1:	ss out dx,al
   14000e3b3:	(bad)  
   14000e3b4:	and    eax,ebp
   14000e3b6:	(bad)  
   14000e3b7:	(bad)  
   14000e3b8:	add    eax,DWORD PTR [rax+rdx*8+0x68]
   14000e3bc:	mov    bh,0xa4
   14000e3be:	(bad)  
   14000e3bf:	sbb    BYTE PTR [rcx],cl
   14000e3c1:	pop    rcx
   14000e3c2:	push   rcx
   14000e3c3:	rex.WXB
   14000e3c4:	rex.WR jbe 0x14000e35a
   14000e3c7:	xor    dh,BYTE PTR [rcx]
   14000e3c9:	cdq    
   14000e3ca:	mov    r9,QWORD PTR [r11+rdx*1-0x1a]
   14000e3cf:	sbb    BYTE PTR [rdi+0x20],ah
   14000e3d2:	(bad)  
   14000e3d3:	rol    BYTE PTR [rdx+riz*8-0x67],1
   14000e3d7:	add    BYTE PTR [rbx],ch
   14000e3d9:	push   rsi
   14000e3da:	(bad)  
   14000e3db:	in     al,0xe3
   14000e3dd:	jmp    rdi
   14000e3df:	and    ebx,esi
   14000e3e1:	fmul   QWORD PTR [rax-0x314dddda]
   14000e3e7:	rex.WB and al,0x2a
   14000e3ea:	movabs eax,ds:0xb8478ae603f8ad24
   14000e3f3:	rex.WRX mov al,0x57
   14000e3f6:	cmp    DWORD PTR [rcx],eax
   14000e3f8:	push   rcx
   14000e3f9:	adc    dh,bh
   14000e3fb:	mov    eax,0xfa004ffa
   14000e400:	fistp  DWORD PTR [rbx-0x9]
   14000e403:	xor    al,BYTE PTR [rax-0x1d66061d]
   14000e409:	mov    cl,BYTE PTR [rcx+0x2]
   14000e40c:	sub    BYTE PTR [rdx],ah
   14000e40e:	cli    
   14000e40f:	mov    cl,0x80
   14000e411:	xchg   ebp,eax
   14000e412:	sbb    BYTE PTR [rbx-0x77],dl
   14000e415:	fidivr WORD PTR [rbp-0x6]
   14000e418:	retf   0xff6
   14000e41b:	std    
   14000e41c:	add    eax,DWORD PTR [rax]
   14000e41e:	clc    
   14000e41f:	xchg   BYTE PTR [rbx-0x2f],bh
   14000e422:	dec    ah
   14000e424:	out    dx,eax
   14000e425:	xor    bh,BYTE PTR [rdi]
   14000e427:	clc    
   14000e428:	mov    ch,cl
   14000e42a:	test   eax,0xa0b56e4b
   14000e42f:	fbld   TBYTE PTR [rsp+0x2d1a8269]
   14000e436:	push   rax
   14000e437:	jmp    0x14000e459
   14000e439:	sar    BYTE PTR [rcx],1
   14000e43b:	ins    BYTE PTR es:[rdi],dx
   14000e43c:	sbb    eax,0x60134985
   14000e441:	mov    ?,WORD PTR [rsi]
   14000e443:	push   rdx
   14000e444:	sub    eax,0xf9c4ba53
   14000e449:	jnp    0x14000e3f5
   14000e44b:	in     al,dx
   14000e44c:	mov    esp,0x92759492
   14000e451:	(bad)
   14000e455:	add    DWORD PTR [rdx-0x68e45920],eax
   14000e45b:	stc    
   14000e45c:	int3   
   14000e45d:	sub    edx,DWORD PTR [rdi+0x7ee75a47]
   14000e463:	(bad)  
   14000e464:	sar    edx,1
   14000e466:	out    dx,eax
   14000e467:	mov    WORD PTR [rcx-0x3765b422],?
   14000e46d:	shl    DWORD PTR [rdi+0x7a47362],cl
   14000e473:	(bad)  
   14000e474:	and    eax,0x29026103
   14000e479:	jmp    0x14000e4dd
   14000e47b:	push   rax
   14000e47c:	rex.RB push 0xffffffffffffffb1
   14000e47f:	popf   
   14000e480:	movabs eax,ds:0x1351b203e597ba05
   14000e489:	pushf  
   14000e48a:	xor    ch,BYTE PTR [rbx]
   14000e48c:	es push rsi
   14000e48e:	jbe    0x14000e4f6
   14000e490:	shr    dh,0x60
   14000e493:	mov    ch,0x9f
   14000e495:	xchg   al,cl
   14000e497:	pop    rsi
   14000e498:	and    al,0x4
   14000e49a:	icebp  
   14000e49b:	mov    ebx,0xdc954ac1
   14000e4a0:	(bad)  
   14000e4a1:	cmp    ebp,DWORD PTR [rbx]
   14000e4a3:	(bad)  
   14000e4a4:	gs mov bh,0xb4
   14000e4a7:	rol    edi,1
   14000e4a9:	mov    dl,0x5e
   14000e4ab:	sbb    DWORD PTR [rdi],esp
   14000e4ad:	fdivp  st(0),st
   14000e4af:	gs rex.WRX push rdx
   14000e4b2:	stc    
   14000e4b3:	xor    edx,0x55784135
   14000e4b9:	in     al,dx
   14000e4ba:	xchg   BYTE PTR [rax-0x742aab9f],bl
   14000e4c0:	jge    0x14000e448
   14000e4c2:	(bad)  
   14000e4c3:	(bad)  
   14000e4c5:	mov    ds,WORD PTR [rbx]
   14000e4c7:	lahf   
   14000e4c8:	cli    
   14000e4c9:	rex.WRB call 0x18d8ec0b4
   14000e4cf:	es xchg edx,eax
   14000e4d1:	mov    eax,0x40d89e21
   14000e4d6:	movabs eax,ds:0xa832ee81746a09a4
   14000e4df:	mov    ebp,0x939d4a0c
   14000e4e4:	nop
   14000e4e5:	std    
   14000e4e6:	ss push 0x312e6776
   14000e4ec:	push   rdx
   14000e4ed:	mov    dl,BYTE PTR [rbx]
   14000e4ef:	add    BYTE PTR [rax-0x16],dl
   14000e4f2:	out    0xea,eax
   14000e4f4:	sub    al,bl
   14000e4f6:	push   0xffffffffffffffc2
   14000e4f8:	(bad)  
   14000e4f9:	or     BYTE PTR [rax+0x4e],ah
   14000e4fc:	jg     0x14000e509
   14000e4fe:	adc    BYTE PTR [rbx-0x39],al
   14000e501:	outs   dx,BYTE PTR ds:[rsi]
   14000e502:	cmp    al,bl
   14000e504:	enter  0x918d,0x73
   14000e508:	(bad)  
   14000e509:	scas   al,BYTE PTR es:[rdi]
   14000e50a:	in     al,0x22
   14000e50c:	and    BYTE PTR [rsi],ah
   14000e50e:	add    DWORD PTR [rax-0x68],esp
   14000e511:	(bad)  
   14000e512:	xor    BYTE PTR [rcx-0x35de4d9a],cl
   14000e518:	repz imul eax,DWORD PTR [rcx],0x2
   14000e51c:	lods   al,BYTE PTR ds:[rsi]
   14000e51d:	div    BYTE PTR [rbx-0x660ffe2]
   14000e523:	adc    DWORD PTR [rcx+rdi*2],0xffffffbf
   14000e527:	sar    BYTE PTR [rax+0x2e1a603f],0xac
   14000e52e:	outs   dx,BYTE PTR ds:[rsi]
   14000e52f:	lods   eax,DWORD PTR ds:[rsi]
   14000e530:	out    0xc6,al
   14000e532:	fs int3 
   14000e534:	ss leave 
   14000e536:	sub    BYTE PTR [rbx],al
   14000e538:	rex.WX push rcx
   14000e53a:	fsub   st,st(3)
   14000e53c:	jbe    0x14000e59d
   14000e53e:	pop    rcx
   14000e53f:	add    DWORD PTR [rbx+0x35],edi
   14000e542:	or     eax,0xdff0a008
   14000e547:	push   rbp
   14000e548:	lea    esi,[rcx+rax*8+0x40d2d470]
   14000e54f:	repz (bad) 
   14000e551:	cld    
   14000e552:	rex.WR pop rcx
   14000e554:	retf   0x1747
   14000e557:	rex.X pushf 
   14000e559:	xchg   BYTE PTR [rax],bh
   14000e55b:	rex.WB in eax,0x9c
   14000e55e:	movabs al,ds:0x68a1e1e582e617da
   14000e567:	cwde   
   14000e568:	and    bl,BYTE PTR [rax+0x7ebc4957]
   14000e56e:	shl    DWORD PTR [rdi],0xdc
   14000e571:	mov    ebp,esi
   14000e573:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e574:	jg     0x14000e511
   14000e576:	icebp  
   14000e577:	sahf   
   14000e578:	call   QWORD PTR [rax-0x6d]
   14000e57b:	jb     0x14000e598
   14000e57d:	xchg   edi,eax
   14000e57e:	adc    al,BYTE PTR [rcx-0x20cb46b8]
   14000e584:	rex.WRB jo 0x14000e559
   14000e587:	add    eax,0x16820e75
   14000e58c:	pop    QWORD PTR [rdx-0x5dc93426]
   14000e592:	xor    BYTE PTR [rcx+0x5a],ch
   14000e595:	rex.RX loope 0x14000e56a
   14000e598:	jg     0x14000e531
   14000e59a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e59b:	jl     0x14000e57d
   14000e59d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e59e:	rex.RB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e5a0:	sti    
   14000e5a1:	clc    
   14000e5a2:	(bad)  
   14000e5a3:	mov    al,0x2c
   14000e5a5:	fcmovnb st,st(1)
   14000e5a7:	ror    DWORD PTR [rsi+0x10057b59],cl
   14000e5ad:	shl    DWORD PTR [rcx+0x935685],0x6c
   14000e5b4:	cmc    
   14000e5b5:	xchg   dl,bh
   14000e5b7:	ror    dl,cl
   14000e5b9:	push   0xe
   14000e5bb:	jb     0x14000e5d0
   14000e5bd:	xchg   edi,eax
   14000e5be:	(bad)  
   14000e5bf:	mov    BYTE PTR [rbp-0xeef7d9a],cl
   14000e5c5:	cmp    al,0xd9
   14000e5c7:	add    BYTE PTR [rbx],cl
   14000e5c9:	fs (bad) 
   14000e5cc:	int    0x91
   14000e5ce:	out    dx,al
   14000e5cf:	add    DWORD PTR [rsi-0x7fc06218],edx
   14000e5d5:	adc    eax,0x30293c49
   14000e5da:	adc    eax,DWORD PTR [rsi+0x60]
   14000e5dd:	cs scas al,BYTE PTR es:[rdi]
   14000e5df:	not    DWORD PTR [rdi+0x41]
   14000e5e2:	adc    BYTE PTR [rsi],ah
   14000e5e4:	jo     0x14000e648
   14000e5e6:	(bad)  
   14000e5e7:	sub    DWORD PTR [rdx+0x6fb01fc8],edx
   14000e5ed:	jo     0x14000e5dc
   14000e5ef:	xchg   edi,eax
   14000e5f0:	add    ecx,DWORD PTR [rbx+0x71]
   14000e5f3:	rex.WRXB
   14000e5f4:	mov    r12b,BYTE PTR [r12+r8*2+0x4a]
   14000e5f9:	in     eax,dx
   14000e5fa:	mov    eax,0x98e3757a
   14000e5ff:	and    ah,BYTE PTR [rdx+0x7765e6e3]
   14000e605:	adc    DWORD PTR [rsi],esp
   14000e607:	jle    0x14000e65f
   14000e609:	push   rbx
   14000e60a:	jl     0x14000e623
   14000e60c:	(bad)  
   14000e60d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e60e:	mov    al,0x17
   14000e610:	rex.WX
   14000e611:	rex.WRX movabs rdi,0x261b1d17ca5d33c2
   14000e61b:	mov    esi,0xf6fe8a2e
   14000e620:	sbb    DWORD PTR [rdx+0x1f],ebx
   14000e623:	cld    
   14000e624:	stos   DWORD PTR es:[rdi],eax
   14000e625:	sub    bh,ch
   14000e627:	test   eax,0xe96611ff
   14000e62c:	push   rsi
   14000e62d:	sbb    eax,0x4974fe36
   14000e632:	cmp    al,0x24
   14000e634:	mov    cl,0x8b
   14000e636:	mov    ch,BYTE PTR [rax+0x1cea04b9]
   14000e63c:	add    ch,BYTE PTR [rdi]
   14000e63e:	sbb    al,0x2
   14000e640:	mov    ch,0x16
   14000e642:	and    DWORD PTR [rbp+rax*1-0x7ebf7d50],0x2cf8e6c8
   14000e64d:	lods   eax,DWORD PTR ds:[rsi]
   14000e64e:	shl    BYTE PTR [rdx+riz*1+0x7cb44317],0x28
   14000e656:	jl     0x14000e5e3
   14000e658:	jge    0x14000e68b
   14000e65a:	rex.R cmp BYTE PTR [rcx],0xfd
   14000e65e:	sbb    BYTE PTR [rdx-0x3b],dl
   14000e661:	fsubr  QWORD PTR [rsp+riz*4+0x24]
   14000e665:	and    BYTE PTR [rsp+rbp*4-0x64a41992],ch
   14000e66c:	add    ecx,edi
   14000e66e:	cdq    
   14000e66f:	mov    DWORD PTR [rbx+rdx*4+0x12],eax
   14000e673:	mov    cl,0x9
   14000e675:	xor    DWORD PTR [rsi+0x29],0xd946b775
   14000e67c:	push   0x37919b98
   14000e681:	add    eax,0x7c804fac
   14000e686:	stos   BYTE PTR es:[rdi],al
   14000e687:	lock mov ecx,0xe1f2cbd0
   14000e68d:	(bad)  
   14000e68e:	mul    BYTE PTR [rax+0x13]
   14000e691:	ss (bad) 
   14000e693:	or     ah,BYTE PTR [rdi]
   14000e695:	add    al,0xa5
   14000e697:	ins    BYTE PTR es:[rdi],dx
   14000e698:	loopne 0x14000e67c
   14000e69a:	pop    rsi
   14000e69b:	scas   eax,DWORD PTR es:[rdi]
   14000e69c:	lahf   
   14000e69d:	jns    0x14000e6fc
   14000e69f:	jno    0x14000e68e
   14000e6a1:	jge    0x14000e6a3
   14000e6a3:	adc    al,0x8c
   14000e6a5:	jg     0x14000e6a8
   14000e6a7:	test   ch,ch
   14000e6a9:	cmp    dh,BYTE PTR [rip+0xfffffffffdbc3437]        # 0x13dbd1ae6
   14000e6af:	fistp  WORD PTR [rdi]
   14000e6b1:	sbb    eax,0x9b6a1862
   14000e6b6:	jle    0x14000e6fc
   14000e6b8:	fcom   QWORD PTR [rcx*2-0x2edd9dff]
   14000e6bf:	(bad)  
   14000e6c0:	xchg   edx,eax
   14000e6c1:	(bad)  
   14000e6c2:	and    eax,0x4697bf0f
   14000e6c7:	rex ins BYTE PTR es:[rdi],dx
   14000e6c9:	mov    edi,0x22162596
   14000e6ce:	imul   esi,DWORD PTR [rbp+0xc7e690f],0x741ef47c
   14000e6d8:	(bad)  
   14000e6d9:	jrcxz  0x14000e6ba
   14000e6db:	push   rsp
   14000e6dc:	repnz (bad) 
   14000e6de:	(bad)  
   14000e6df:	xlat   BYTE PTR ds:[rbx]
   14000e6e0:	and    BYTE PTR [rdi-0xa24e82b],dh
   14000e6e6:	sti    
   14000e6e7:	ret    0x9009
   14000e6ea:	ss rex.B int 0x45
   14000e6ee:	jmp    0x14000e707
   14000e6f0:	call   0x14fb7ed11
   14000e6f5:	fcomp  st(7)
   14000e6f7:	imul   esi,DWORD PTR [rbx],0x16228c30
   14000e6fd:	(bad)  
   14000e6fe:	fdivr  QWORD PTR [rdx+0x12]
   14000e701:	rex.B leave 
   14000e703:	mov    ebx,0xd91817e3
   14000e708:	xchg   ebx,eax
   14000e709:	cmp    BYTE PTR [rcx],0x7f
   14000e70c:	add    dl,BYTE PTR [rax]
   14000e70e:	ror    DWORD PTR [rbp-0x1b59f179],0x7c
   14000e715:	xchg   edx,eax
   14000e716:	out    0x2e,eax
   14000e718:	scas   eax,DWORD PTR es:[rdi]
   14000e719:	fs jns 0x14000e6ca
   14000e71c:	and    esi,eax
   14000e71e:	nop
   14000e71f:	sbb    BYTE PTR [rcx],ah
   14000e721:	(bad)  
   14000e722:	jno    0x14000e6b2
   14000e724:	sar    DWORD PTR [rax],0xb0
   14000e727:	lods   al,BYTE PTR ds:[esi]
   14000e72a:	hlt    
   14000e72b:	jne    0x14000e77c
   14000e72d:	pop    rbx
   14000e72e:	jg     0x14000e730
   14000e730:	sub    DWORD PTR [rsi],eax
   14000e732:	(bad)  
   14000e733:	add    al,0x56
   14000e735:	ins    BYTE PTR es:[rdi],dx
   14000e736:	mov    DWORD PTR [rcx-0x2a],edi
   14000e739:	jne    0x14000e6ec
   14000e73b:	jp     0x14000e6f7
   14000e73d:	mov    dl,0x35
   14000e73f:	pop    rsp
   14000e740:	iret   
   14000e741:	mov    ah,0xc
   14000e743:	mov    al,al
   14000e745:	mov    ah,BYTE PTR [rax-0x49872024]
   14000e74b:	xchg   ebp,eax
   14000e74c:	jmp    0x14000e766
   14000e74e:	jnp    0x14000e6e6
   14000e750:	adc    cl,ah
   14000e752:	push   0x2
   14000e754:	fs ins BYTE PTR es:[rdi],dx
   14000e756:	add    dl,BYTE PTR [rdi+0x68eb3cf2]
   14000e75c:	xor    al,0x5a
   14000e75e:	es and bl,ah
   14000e761:	fwait
   14000e762:	cmp    eax,0x49ce7657
   14000e767:	sub    BYTE PTR [r15-0x3f],r8b
   14000e76b:	rex.B loope 0x14000e78a
   14000e76e:	movabs eax,ds:0x5b947caef9181958
   14000e777:	cmp    BYTE PTR [rdi],cl
   14000e779:	(bad)  
   14000e77a:	jl     0x14000e7e5
   14000e77c:	jmp    0x14000e7da
   14000e77e:	in     eax,dx
   14000e77f:	fist   WORD PTR [rdi+0x68]
   14000e782:	jge    0x14000e764
   14000e784:	addr32 push rbp
   14000e786:	cli    
   14000e787:	xchg   edi,eax
   14000e788:	jg     0x14000e793
   14000e78a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e78b:	jge    0x14000e75d
   14000e78d:	add    al,0x35
   14000e78f:	fucomip st,st(5)
   14000e791:	or     BYTE PTR [rcx+rcx*2],ch
   14000e794:	shr    DWORD PTR [rdx+0x3],cl
   14000e797:	popf   
   14000e798:	gs enter 0x51c2,0xd0
   14000e79d:	ret    0x7021
   14000e7a0:	imul   ecx,DWORD PTR [rcx],0x48
   14000e7a3:	fld    TBYTE PTR [rsi+0x61]
   14000e7a6:	push   rcx
   14000e7a7:	sbb    al,0x45
   14000e7a9:	or     al,bh
   14000e7ab:	and    al,0xa2
   14000e7ad:	add    DWORD PTR [rbx+0x53],0xd8a99d91
   14000e7b4:	jge    0x14000e77f
   14000e7b6:	std    
   14000e7b7:	pop    rsi
   14000e7b8:	cmp    ecx,DWORD PTR [rdi]
   14000e7ba:	rex jo 0x14000e7a0
   14000e7bd:	mov    cl,0xc3
   14000e7bf:	movabs eax,ds:0x325717f3973cf37b
   14000e7c8:	adc    ah,BYTE PTR [rcx]
   14000e7ca:	xor    bl,dl
   14000e7cc:	es repnz and al,0x21
   14000e7d0:	jbe    0x14000e775
   14000e7d2:	je     0x14000e77b
   14000e7d4:	test   DWORD PTR [rax-0xf],0xdac8117
   14000e7db:	repnz sahf 
   14000e7dd:	sti    
   14000e7de:	jmp    0x12b0c0799
   14000e7e3:	(bad)  
   14000e7e4:	out    0x7a,al
   14000e7e6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e7e7:	rex.RX
   14000e7e8:	rex.R (bad) 
   14000e7ea:	scas   eax,DWORD PTR es:[rdi]
   14000e7eb:	(bad)  
   14000e7ec:	scas   al,BYTE PTR es:[rdi]
   14000e7ed:	ror    BYTE PTR [rcx+0x2a],0x45
   14000e7f1:	push   rax
   14000e7f2:	sub    DWORD PTR [rcx],esp
   14000e7f4:	(bad)  [rdi+0x36]
   14000e7f7:	rcr    BYTE PTR [rsi-0x57],0x33
   14000e7fb:	pop    rsp
   14000e7fc:	jl     0x14000e81f
   14000e7fe:	(bad)  
   14000e7ff:	sub    ch,BYTE PTR [rdi]
   14000e801:	iret   
   14000e802:	int3   
   14000e803:	xor    bh,BYTE PTR [rbp-0x78]
   14000e806:	adc    DWORD PTR [rbx-0x70],ecx
   14000e809:	rex.X fcom QWORD PTR [rdi-0x5cbd3514]
   14000e810:	(bad)  
   14000e811:	js     0x14000e857
   14000e813:	and    al,0xdd
   14000e815:	rex.XB (bad) 
   14000e817:	(bad)  
   14000e818:	out    dx,eax
   14000e819:	add    BYTE PTR [rax-0x1255794b],cl
   14000e81f:	sbb    bl,BYTE PTR [rax+0x4a0cc148]
   14000e825:	int3   
   14000e826:	data16 (bad) 
   14000e828:	mov    ebp,0xd6f82af4
   14000e82d:	mul    DWORD PTR [rax-0x31402c0b]
   14000e833:	jb     0x14000e7fc
   14000e835:	punpckhdq mm5,mm7
   14000e838:	and    ah,dh
   14000e83a:	fiadd  DWORD PTR [rax]
   14000e83c:	shl    BYTE PTR [rsi],cl
   14000e83e:	test   al,0xd1
   14000e840:	(bad)  
   14000e841:	mov    bh,0xf
   14000e843:	add    ch,bl
   14000e845:	and    esp,DWORD PTR [rax-0x311f5c3b]
   14000e84b:	mov    dl,0x5d
   14000e84d:	imul   ebp,DWORD PTR [rax-0x61da7924],0xa67efa91
   14000e857:	test   al,0x4f
   14000e859:	sub    esi,eax
   14000e85b:	fucomp st(5)
   14000e85d:	addr32 add bl,dl
   14000e860:	int    0x38
   14000e862:	push   rdi
   14000e863:	sub    BYTE PTR [rcx+0x63],ah
   14000e866:	mov    ebx,0xb7d7566f
   14000e86b:	jae    0x14000e838
   14000e86d:	sub    BYTE PTR [rax+rbx*4+0x1e],cl
   14000e871:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e872:	pop    rbp
   14000e873:	cmp    esp,eax
   14000e875:	add    al,0x83
   14000e877:	adc    DWORD PTR [rsi-0x43],eax
   14000e87a:	rex.WR xchg sil,r9b
   14000e87d:	adc    al,0x60
   14000e87f:	in     eax,0xfe
   14000e881:	out    0xd1,al
   14000e883:	es jl  0x14000e807
   14000e886:	jle    0x14000e82e
   14000e888:	mov    bl,0x8d
   14000e88a:	int3   
   14000e88b:	lods   al,BYTE PTR ds:[rsi]
   14000e88c:	ret    
   14000e88d:	rex.WRX sub rax,0xfffffffff9b1a62a
   14000e893:	shr    ebx,1
   14000e895:	sbb    bh,BYTE PTR [rbx-0x3b]
   14000e898:	add    BYTE PTR [rsi+rax*2-0x5],bh
   14000e89c:	mov    QWORD PTR [rax+riz*4],rbp
   14000e8a0:	jne    0x14000e860
   14000e8a2:	rex.WR add al,0x3a
   14000e8a5:	xchg   esi,eax
   14000e8a6:	lahf   
   14000e8a7:	rex.B
   14000e8a8:	rex.WR mov cl,0x71
   14000e8ab:	cmp    al,0x7f
   14000e8ad:	mov    al,0x29
   14000e8af:	popf   
   14000e8b0:	stos   BYTE PTR es:[rdi],al
   14000e8b1:	out    dx,eax
   14000e8b2:	adc    edi,DWORD PTR [rsi-0x3c]
   14000e8b5:	pop    rsi
   14000e8b6:	rex.XB
   14000e8b7:	repnz mov edx,0x1debb065
   14000e8bd:	rex.WB
   14000e8be:	ror    QWORD PTR [r10+r8*2+0x42],0x8b
   14000e8c4:	enter  0x6445,0x2e
   14000e8c8:	pushf  
   14000e8c9:	lods   al,BYTE PTR ds:[rsi]
   14000e8ca:	xor    al,0x37
   14000e8cc:	add    ax,0x73fb
   14000e8d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e8d1:	sbb    BYTE PTR [rdx-0x3c29775],0xf3
   14000e8d8:	sub    bh,cl
   14000e8da:	loope  0x14000e8db
   14000e8dc:	or     ah,BYTE PTR [rsi+0x46ec6cb3]
   14000e8e2:	movabs al,ds:0xb9b90b2b77dece
   14000e8eb:	(bad)  
   14000e8ec:	(bad)  
   14000e8ed:	xchg   BYTE PTR [rsp+rbx*1],ch
   14000e8f0:	add    eax,0x3edd97b7
   14000e8f5:	add    eax,0xf2d3137e
   14000e8fa:	lods   al,BYTE PTR ds:[rsi]
   14000e8fb:	rex.WX imul rdi,QWORD PTR [rdx+0x16b8f0ac],0x16c1c37
   14000e906:	add    BYTE PTR [rsi-0x47],ch
   14000e909:	imul   edi,DWORD PTR [rcx],0xd5aa242d
   14000e90f:	rcr    BYTE PTR [rsi-0x47],1
   14000e912:	je     0x14000e949
   14000e914:	retf   
   14000e915:	repnz int3 
   14000e917:	rex.WX outs dx,BYTE PTR ds:[rsi]
   14000e919:	push   rdi
   14000e91a:	xchg   edi,eax
   14000e91b:	retf   
   14000e91c:	and    dh,BYTE PTR [rsi+0x1d5fceeb]
   14000e922:	rex.WB (bad) 
   14000e924:	ja     0x14000e979
   14000e926:	or     DWORD PTR [rdx-0x27ea513c],0x65
   14000e92d:	sbb    eax,0xabe56caf
   14000e932:	mov    ecx,0xb56088c1
   14000e937:	cmp    BYTE PTR [rcx+0x35],0x88
   14000e93b:	jmp    0x14000e93e
   14000e93d:	jnp    0x14000e979
   14000e93f:	or     eax,DWORD PTR [rax]
   14000e941:	cmp    BYTE PTR [rcx-0x1f],bh
   14000e944:	pushf  
   14000e945:	cmp    dh,0x84
   14000e948:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e949:	(bad)
   14000e94c:	(bad)  
   14000e94d:	push   rax
   14000e94e:	fs cdq 
   14000e950:	and    DWORD PTR [rdi+0x28],esp
   14000e953:	adc    al,0xcb
   14000e955:	pop    rdi
   14000e956:	test   eax,0x7151e870
   14000e95b:	ins    DWORD PTR es:[rdi],dx
   14000e95c:	adc    DWORD PTR [rsi-0x4304dc16],esi
   14000e962:	stos   BYTE PTR es:[rdi],al
   14000e963:	push   rax
   14000e964:	cwde   
   14000e965:	or     al,0x9e
   14000e967:	out    0x7d,al
   14000e969:	cdq    
   14000e96a:	and    al,BYTE PTR [rdi]
   14000e96c:	sahf   
   14000e96d:	xchg   BYTE PTR [rbx-0x4043a5cd],bl
   14000e974:	movabs eax,ds:0x58eff89f5a377d6e
   14000e97d:	out    dx,al
   14000e97e:	cld    
   14000e97f:	movabs al,ds:0x53885997201bef26
   14000e988:	push   rax
   14000e989:	rol    BYTE PTR [rdx],cl
   14000e98b:	mov    bh,0x96
   14000e98d:	in     al,dx
   14000e98e:	rex.WR or rdi,0xffffffffe895c43c
   14000e995:	rex.B adc al,0x8c
   14000e998:	xchg   edi,eax
   14000e999:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e99a:	jo     0x14000e94f
   14000e99c:	(bad)  
   14000e99d:	retf   
   14000e99e:	add    BYTE PTR [rax-0x6fed8747],al
   14000e9a4:	mov    al,0x7f
   14000e9a6:	rex.RXB mov DWORD PTR [r9-0x6a165c95],r14d
   14000e9ad:	retf   
   14000e9ae:	pop    rbx
   14000e9af:	and    edi,DWORD PTR [rdi-0x33e66f2c]
   14000e9b5:	jbe    0x14000e9f9
   14000e9b7:	jo     0x14000e9af
   14000e9b9:	js     0x14000e958
   14000e9bb:	lock sahf 
   14000e9bd:	rex.R (bad) 
   14000e9bf:	(bad)  
   14000e9c0:	rex.RX
   14000e9c1:	sbb    bp,WORD PTR [rsi+0x58]
   14000e9c5:	int    0xed
   14000e9c7:	or     BYTE PTR [rax+rdi*2-0x5a37ee42],cl
   14000e9ce:	mov    esi,0xac362b9
   14000e9d3:	not    edi
   14000e9d5:	push   0x3478f378
   14000e9da:	movabs ds:0x4c3390b1f947cd6e,eax
   14000e9e3:	loop   0x14000ea22
   14000e9e5:	(bad)  
   14000e9e6:	jl     0x14000e976
   14000e9e8:	cli    
   14000e9e9:	retf   0x4e7c
   14000e9ec:	rex.R (bad) 
   14000e9ee:	and    DWORD PTR [rdi-0x6e8f5c70],edi
   14000e9f4:	enter  0x87f1,0x72
   14000e9f8:	rex.R mov dil,0x37
   14000e9fb:	adc    DWORD PTR [rsp-0xbad2156],esp
   14000ea02:	ds adc esp,edx
   14000ea05:	pop    rdx
   14000ea06:	rex.R jmp 0x14000ea4c
   14000ea09:	jg     0x14000ea60
   14000ea0b:	test   eax,0xe835ff0f
   14000ea10:	rex.RX xlat BYTE PTR ds:[rbx]
   14000ea12:	shl    BYTE PTR [rax+rax*4-0x37],0x1
   14000ea17:	xchg   ebx,eax
   14000ea18:	fstp   TBYTE PTR [rip+0xffffffffda6d8917]        # 0x11a6e7335
   14000ea1e:	mov    cl,0xe6
   14000ea20:	movabs ds:0x5a16e57055941cdd,al
   14000ea29:	cwde   
   14000ea2a:	rex.RXB jns 0x14000ea8e
   14000ea2d:	adc    DWORD PTR [rcx-0x44bf0d23],edx
   14000ea33:	rex.WRX pop rdi
   14000ea35:	out    dx,al
   14000ea36:	mov    dh,0x9a
   14000ea38:	(bad)  
   14000ea39:	sti    
   14000ea3a:	mov    esi,DWORD PTR [rsi]
   14000ea3c:	mov    ah,0xd9
   14000ea3e:	sbb    ebp,edx
   14000ea40:	lea    esp,[rcx-0x67276a32]
   14000ea46:	rex.R movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ea48:	rex leave 
   14000ea4a:	rex.WRX or rax,0x4777f197
   14000ea50:	add    BYTE PTR [rdx+0x19],bh
   14000ea53:	rex.RX add r13d,DWORD PTR [rip+0xffffffffb6600043]        # 0xf660ea9d
   14000ea5a:	(bad)
   14000ea5e:	(bad)  
   14000ea5f:	cmp    eax,0x36b2fd83
   14000ea64:	rex.X outs dx,DWORD PTR ds:[rsi]
   14000ea66:	nop
   14000ea67:	leave  
   14000ea68:	add    BYTE PTR [rax+0x3d7087df],bl
   14000ea6e:	(bad)  
   14000ea6f:	out    dx,eax
   14000ea70:	repnz add DWORD PTR [rax],edi
   14000ea73:	(bad)  
   14000ea74:	shl    DWORD PTR cs:[rbx+0x14],0x9d
   14000ea79:	adc    al,0xd3
   14000ea7b:	mov    esi,0x208d3f25
   14000ea80:	sbb    edx,eax
   14000ea82:	mov    esi,DWORD PTR [rbp+0x4dac2472]
   14000ea88:	sub    DWORD PTR [rbp-0x25d4e907],eax
   14000ea8e:	ret    
   14000ea8f:	movabs ds:0x675355e908eca91e,al
   14000ea98:	jmp    0x14000ea95
   14000ea9a:	test   eax,0x7d46ff2b
   14000ea9f:	ror    BYTE PTR [rdx+0x60],1
   14000eaa2:	add    eax,ecx
   14000eaa4:	sub    al,0xd8
   14000eaa6:	(bad)  
   14000eaa9:	ds (bad) 
   14000eaab:	mov    edx,0x7d685de5
   14000eab0:	loop   0x14000eb09
   14000eab2:	fnstenv [rsi+rcx*1+0x1b]
   14000eab6:	sbb    BYTE PTR [rip+0x33a21ce8],cl        # 0x173a307a4
   14000eabc:	mov    BYTE PTR [rax-0x65],ch
   14000eabf:	pop    rax
   14000eac0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eac1:	shl    DWORD PTR [rsi+0x63884749],1
   14000eac7:	imul   ecx,DWORD PTR [rcx+rsi*4],0xffffffbf
   14000eacb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000eacc:	rcr    ah,1
   14000eace:	in     al,dx
   14000eacf:	or     esi,DWORD PTR [rdi]
   14000ead1:	cs (bad) 
   14000ead3:	adc    al,0x9
   14000ead5:	(bad)  
   14000ead6:	js     0x14000eac6
   14000ead8:	jnp    0x14000eb14
   14000eada:	rex.WRB lods al,BYTE PTR ds:[rsi]
   14000eadc:	or     eax,0x219e651
   14000eae1:	movabs ds:0xd9b1320d9db4ba73,eax
   14000eaea:	sbb    ah,dh
   14000eaec:	(bad)  
   14000eaed:	jg     0x14000ea96
   14000eaef:	rol    BYTE PTR [rdi-0x77],cl
   14000eaf2:	rex.WX push rdi
   14000eaf4:	rex.RXB mov r10b,0xed
   14000eaf7:	mov    gs,ebp
   14000eaf9:	push   0x5d
   14000eafb:	rex.WRXB pop r12
   14000eafd:	mov    DWORD PTR [rbp-0x6079a342],0xb827dc98
   14000eb07:	mov    dh,0xc
   14000eb09:	rcl    BYTE PTR [rbx+0x68],0x31
   14000eb0d:	cmp    al,0x26
   14000eb0f:	ficomp WORD PTR [rdi+0x11]
   14000eb12:	test   al,0x6d
   14000eb14:	jp     0x14000eaf9
   14000eb16:	(bad)  
   14000eb17:	movabs ds:0x25fa35f01cde6915,al
   14000eb20:	stos   DWORD PTR es:[rdi],eax
   14000eb21:	jle    0x14000eaed
   14000eb23:	iret   
   14000eb24:	out    dx,eax
   14000eb25:	adc    edx,DWORD PTR [rax]
   14000eb27:	stos   DWORD PTR es:[rdi],eax
   14000eb28:	movabs ds:0x267c4983ad10385,eax
   14000eb31:	xchg   ecx,eax
   14000eb32:	enter  0x819,0xc7
   14000eb36:	or     BYTE PTR [rdx-0x11],ah
   14000eb39:	fistp  QWORD PTR [rsi+0x7bbdd79]
   14000eb3f:	xor    eax,0xb1fad017
   14000eb44:	pop    rdi
   14000eb45:	(bad)  
   14000eb46:	rex.XB ins BYTE PTR es:[rdi],dx
   14000eb48:	(bad)  
   14000eb49:	xor    al,0xdc
   14000eb4b:	xchg   edx,eax
   14000eb4c:	pop    rbp
   14000eb4d:	or     ah,al
   14000eb4f:	lods   eax,DWORD PTR ds:[rsi]
   14000eb50:	sub    al,0x6c
   14000eb52:	ret    
   14000eb53:	(bad)  
   14000eb54:	or     BYTE PTR [rcx],al
   14000eb56:	sub    BYTE PTR [rcx+rsi*1],dh
   14000eb59:	add    dl,ah
   14000eb5b:	or     bh,bl
   14000eb5d:	sbb    bh,ch
   14000eb5f:	jae    0x14000eb62
   14000eb61:	(bad)  
   14000eb62:	sub    cl,BYTE PTR [rbp-0xe]
   14000eb65:	jle    0x14000eb90
   14000eb67:	es (bad) 
   14000eb69:	adc    eax,0x6d587e0a
   14000eb6e:	mov    WORD PTR [rbp+rbx*1-0x66],ds
   14000eb72:	and    ecx,eax
   14000eb74:	push   0x1
   14000eb76:	cmp    edi,DWORD PTR [rsi-0x627be679]
   14000eb7c:	imul   ebx,DWORD PTR [rax-0x44f9b353],0xc40882aa
   14000eb86:	rex.WX cdqe 
   14000eb88:	xchg   ebp,eax
   14000eb89:	add    BYTE PTR [rax+0x2f],al
   14000eb8c:	(bad)  
   14000eb8d:	push   0xfffffffffd9231d3
   14000eb92:	(bad)  
   14000eb93:	mov    ebp,0xbc0c00d0
   14000eb98:	repz iret 
   14000eb9a:	mov    al,BYTE PTR [rbp-0x5607c94f]
   14000eba0:	mov    edx,0xf1bdced2
   14000eba5:	(bad)  
   14000eba6:	xor    ah,BYTE PTR [rsi+0x200000a0]
   14000ebac:	add    BYTE PTR [rcx+0x44],cl
   14000ebaf:	push   r12
   14000ebb1:	loopne 0x14000eb34
   14000ebb3:	and    eax,0x79aaa0f8
   14000ebb8:	jmp    0xd2fd36dc
   14000ebbd:	imul   esi,DWORD PTR [rcx+0x4fe3e522],0x2a
   14000ebc4:	jle    0x14000eb4d
   14000ebc6:	sub    DWORD PTR [rbx],ebp
   14000ebc8:	repnz mul DWORD PTR [rdx]
   14000ebcb:	idiv   DWORD PTR [rdi+0x45]
   14000ebce:	mov    ah,0xbc
   14000ebd0:	(bad)
   14000ebd3:	add    eax,0x34fef7a8
   14000ebd8:	rex.R out 0xce,eax
   14000ebdb:	adc    al,0xd0
   14000ebdd:	adc    dh,0xce
   14000ebe0:	adc    al,0x68
   14000ebe2:	add    DWORD PTR [rax-0x43f37a27],esi
   14000ebe8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ebe9:	ja     0x14000ec06
   14000ebeb:	jp     0x14000ec32
   14000ebed:	ficomp DWORD PTR [rcx-0x37]
   14000ebf0:	add    eax,ebp
   14000ebf2:	int    0x1
   14000ebf4:	sbb    ebp,DWORD PTR [rbx-0x69785c7d]
   14000ebfa:	rex.WX fidivr DWORD PTR [rbp+0x4222977f]
   14000ec01:	imul   eax,DWORD PTR [rbx+0x19],0xfffffff6
   14000ec05:	mov    ch,0x35
   14000ec07:	(bad)  
   14000ec08:	out    0x8a,al
   14000ec0a:	add    eax,0xddfe2498
   14000ec0f:	iret   
   14000ec10:	mov    ch,0x91
   14000ec12:	hlt    
   14000ec13:	jbe    0x14000ec6f
   14000ec15:	(bad)
   14000ec18:	or     eax,0xaae40f2e
   14000ec1d:	int3   
   14000ec1e:	xchg   ecx,eax
   14000ec1f:	popf   
   14000ec20:	clc    
   14000ec21:	jp     0x14000ebe4
   14000ec23:	(bad)  
   14000ec24:	cdq    
   14000ec25:	add    BYTE PTR [rcx+rsi*1-0x43eca07b],ah
   14000ec2c:	push   rbx
   14000ec2d:	scas   eax,DWORD PTR es:[rdi]
   14000ec2e:	lods   al,BYTE PTR ds:[rsi]
   14000ec2f:	mov    esi,0xc520f78b
   14000ec34:	adc    al,dh
   14000ec36:	jg     0x14000ec7e
   14000ec38:	ss ds rex.X jns 0x14000ebf8
   14000ec3d:	rex.W
   14000ec3e:	rex mov WORD PTR [rcx],gs
   14000ec41:	push   rsp
   14000ec42:	sti    
   14000ec43:	push   0x19e2fca
   14000ec48:	mov    al,0x96
   14000ec4a:	test   BYTE PTR [rbx+rbp*8+0x13100683],al
   14000ec51:	call   FWORD PTR [rbx-0x6b]
   14000ec54:	cli    
   14000ec55:	sbb    eax,0x28fff71a
   14000ec5a:	or     esp,DWORD PTR [rdi-0x2e7feb3f]
   14000ec60:	sbb    BYTE PTR [rax],0x8
   14000ec63:	sub    DWORD PTR [rdi+0x3dc78870],esi
   14000ec69:	std    
   14000ec6a:	and    eax,0x4c4a8d33
   14000ec6f:	(bad)  
   14000ec70:	and    dh,BYTE PTR [rax]
   14000ec72:	stos   DWORD PTR es:[rdi],eax
   14000ec73:	out    0x1,eax
   14000ec75:	add    ch,cl
   14000ec77:	rex.RX movabs ds:0x5d5d7a2c5618718,eax
   14000ec81:	sub    eax,DWORD PTR [rbx-0x17]
   14000ec84:	cmp    esp,DWORD PTR [rsi-0x321ecc42]
   14000ec8a:	sub    BYTE PTR [rcx+0x4],ah
   14000ec8d:	mov    dl,0x61
   14000ec8f:	sbb    eax,0xca633b82
   14000ec94:	jmp    0x14000ecb4
   14000ec96:	in     al,0xc8
   14000ec98:	mov    ah,0xc8
   14000ec9a:	push   0x3ae3aae
   14000ec9f:	in     al,dx
   14000eca0:	cdq    
   14000eca1:	(bad)  
   14000eca2:	add    bh,ch
   14000eca4:	adc    al,0x9e
   14000eca6:	movabs al,ds:0xfff6a263dd0df801
   14000ecaf:	(bad)  
   14000ecb0:	pop    rcx
   14000ecb1:	imul   edx,DWORD PTR [rax+0x62],0x6
   14000ecb5:	pop    rsi
   14000ecb6:	lods   eax,DWORD PTR ds:[rsi]
   14000ecb7:	mul    esi
   14000ecb9:	xor    BYTE PTR [rbp+0x16],0x4a
   14000ecbd:	xchg   ecx,eax
   14000ecbe:	loop   0x14000ed3a
   14000ecc0:	rex.X
   14000ecc1:	rex.XB loop 0x14000ec8c
   14000ecc4:	(bad)  
   14000ecc5:	repnz (bad) 
   14000ecc7:	ins    BYTE PTR es:[rdi],dx
   14000ecc8:	adc    al,0x1c
   14000ecca:	push   rsp
   14000eccb:	rex.W jle 0x14000ed3d
   14000ecce:	(bad)  
   14000eccf:	mov    esp,0xdc8099b5
   14000ecd4:	cld    
   14000ecd5:	movsxd r14,DWORD PTR [rsi+r8*1-0x4f]
   14000ecda:	(bad)  [rbp-0x40]
   14000ecdd:	(bad)  
   14000ecde:	xlat   BYTE PTR ds:[rbx]
   14000ecdf:	adc    eax,0xa69b8052
   14000ece4:	test   DWORD PTR [rbx+0x37],edi
   14000ece7:	adc    esi,edi
   14000ece9:	push   0xc
   14000eceb:	sbb    DWORD PTR [rax-0x12],0x3f3d5df5
   14000ecf2:	fstp   DWORD PTR [rsi+rcx*4-0x3ffa9b5a]
   14000ecf9:	push   rsi
   14000ecfa:	fldenv es:[rsi+0x6e]
   14000ecfe:	mov    dl,0xdd
   14000ed00:	idiv   esi
   14000ed02:	clc    
   14000ed03:	pop    rbx
   14000ed04:	(bad)  
   14000ed06:	xor    dl,dl
   14000ed08:	scas   eax,DWORD PTR es:[rdi]
   14000ed09:	jno    0x14000ed44
   14000ed0b:	outs   dx,DWORD PTR ds:[rsi]
   14000ed0c:	outs   dx,BYTE PTR ds:[rsi]
   14000ed0d:	nop
   14000ed0e:	mov    ebp,0x4cdfeb96
   14000ed13:	fcom   DWORD PTR [rbx]
   14000ed15:	or     eax,0x455e9ca0
   14000ed1a:	ret    0x5d6c
   14000ed1d:	cmp    BYTE PTR [rdi],cl
   14000ed1f:	(bad)  
   14000ed20:	lahf   
   14000ed21:	push   QWORD PTR [rbp+0x45]
   14000ed24:	or     ch,BYTE PTR [rdi]
   14000ed26:	xor    bh,ah
   14000ed28:	rex.WRX mov bpl,0xf6
   14000ed2b:	rex.R in al,dx
   14000ed2d:	xchg   edx,eax
   14000ed2e:	popf   
   14000ed2f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ed30:	stos   BYTE PTR es:[rdi],al
   14000ed31:	xchg   edi,eax
   14000ed32:	(bad)  
   14000ed33:	(bad)  
   14000ed34:	(bad)
   14000ed37:	sbb    DWORD PTR [rdi-0x1810275d],edx
   14000ed3d:	(bad)  
   14000ed3e:	xchg   ecx,eax
   14000ed3f:	push   rax
   14000ed40:	sti    
   14000ed41:	pop    rbx
   14000ed42:	(bad)  
   14000ed43:	(bad)  
   14000ed44:	fld    QWORD PTR [rbx]
   14000ed46:	sbb    BYTE PTR [rbp+0x1d],ch
   14000ed49:	cmp    DWORD PTR [rdx],0x31067407
   14000ed4f:	mov    edx,0xaca49bd0
   14000ed54:	imul   edx,DWORD PTR [rip+0x7b2207f9],0x18c7bc2c        # 0x1bb22f557
   14000ed5e:	xor    ah,cl
   14000ed60:	fcmovne st,st(4)
   14000ed63:	rcl    DWORD PTR [rip+0xffffffffe0c8195d],0xf5        # 0x120c906c7
   14000ed6a:	sar    BYTE PTR [rbx+0x720cc08d],1
   14000ed70:	fstp   DWORD PTR [rcx+0x6cdc6780]
   14000ed76:	(bad)  
   14000ed77:	lea    eax,[rbp+rbx*1+0x8de5667]
   14000ed7e:	push   rsp
   14000ed7f:	or     BYTE PTR [rsi-0x54],bh
   14000ed82:	(bad)  
   14000ed83:	movsxd ecx,DWORD PTR [rip+0x9c2a480]        # 0x149c39209
   14000ed89:	loopne 0x14000ed48
   14000ed8b:	int    0x52
   14000ed8d:	jle    0x14000edd8
   14000ed8f:	fidivr WORD PTR [rdi]
   14000ed91:	call   0x11cb0722f
   14000ed96:	rex.WRXB add rax,0xffffffffc0844c56
   14000ed9c:	adc    BYTE PTR [rdx+0x698dd895],ch
   14000eda2:	sub    cl,ch
   14000eda4:	(bad)  
   14000eda5:	(bad)  
   14000eda7:	mov    bh,0xc
   14000eda9:	(bad)  
   14000edaa:	xchg   DWORD PTR [rsi+0x49],ebp
   14000edad:	(bad)  
   14000edae:	cmp    dh,BYTE PTR [rdi+0x23042bbd]
   14000edb4:	add    dl,dl
   14000edb6:	cmp    edx,eax
   14000edb8:	test   BYTE PTR [rbx+0x44],0x10
   14000edbc:	xor    DWORD PTR [rcx-0x28],edx
   14000edbf:	rex.RB loope 0x14000ed76
   14000edc2:	cmc    
   14000edc3:	sub    BYTE PTR [rcx+0x70],ch
   14000edc6:	xchg   ebx,eax
   14000edc7:	loope  0x14000edfd
   14000edc9:	rex.XB jrcxz 0x14000ee2b
   14000edcc:	add    al,0x0
   14000edce:	(bad)  
   14000edcf:	movabs al,ds:0xe735d5ef665afba1
   14000edd8:	stos   DWORD PTR es:[rdi],eax
   14000edd9:	rol    DWORD PTR [rsi],1
   14000eddb:	fidivr DWORD PTR [rdx+0x15]
   14000edde:	pop    rdi
   14000eddf:	jg     0x14000edcd
   14000ede1:	xor    al,0xc5
   14000ede3:	clc    
   14000ede4:	retw   
   14000ede6:	pop    rsi
   14000ede7:	xor    BYTE PTR [rax],al
   14000ede9:	cs xor al,0x0
   14000edec:	icebp  
   14000eded:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000edee:	pop    rbp
   14000edef:	(bad)  
   14000edf1:	(bad)  
   14000edf2:	sub    al,0x25
   14000edf4:	loope  0x14000ee01
   14000edf6:	(bad)  
   14000edf7:	jge    0x14000ee50
   14000edf9:	fsubr  st,st(5)
   14000edfb:	rex.R add al,0x89
   14000edfe:	rex.X
   14000edff:	rex.WRX ret 
   14000ee01:	jno    0x14000edfb
   14000ee03:	sbb    eax,0x19059ce9
   14000ee08:	xchg   edx,edi
   14000ee0a:	(bad)  
   14000ee0b:	(bad)  
   14000ee0c:	(bad)  
   14000ee0d:	stos   BYTE PTR es:[rdi],al
   14000ee0e:	mov    eax,0xebab7963
   14000ee13:	xor    DWORD PTR [rax+rcx*1-0x2e1c285d],eax
   14000ee1a:	scas   eax,DWORD PTR es:[rdi]
   14000ee1b:	outs   dx,DWORD PTR ds:[rsi]
   14000ee1c:	sbb    BYTE PTR [rbx],ah
   14000ee1e:	xchg   BYTE PTR [rsi+rsi*8+0x46767fa1],cl
   14000ee25:	shl    ah,0x51
   14000ee28:	outs   dx,BYTE PTR ds:[rsi]
   14000ee29:	rex.RB push r11
   14000ee2b:	cmp    BYTE PTR [rax+0x31],ah
   14000ee2e:	fisub  WORD PTR [rbp+0x21]
   14000ee31:	(bad)  
   14000ee32:	movsxd ecx,DWORD PTR [rbx+rax*1-0x78]
   14000ee36:	or     edi,DWORD PTR [rbx+0x5c69dabd]
   14000ee3c:	pop    rbx
   14000ee3d:	fcmovne st,st(2)
   14000ee3f:	and    al,0x9b
   14000ee41:	stc    
   14000ee42:	and    ah,dh
   14000ee44:	push   rdx
   14000ee45:	adc    DWORD PTR [rsi+0x7f],ebx
   14000ee48:	call   FWORD PTR [rbp-0x7f7ea409]
   14000ee4e:	push   rsp
   14000ee4f:	rcr    DWORD PTR [rbx],1
   14000ee51:	(bad)  
   14000ee52:	pop    rdx
   14000ee53:	ficomp WORD PTR [rax]
   14000ee55:	in     al,dx
   14000ee56:	add    eax,0x11be9803
   14000ee5b:	add    BYTE PTR [rbx+0x48],0x38
   14000ee5f:	adc    DWORD PTR [rbp-0x17],ecx
   14000ee62:	jns    0x14000ee06
   14000ee64:	cs xchg ebp,eax
   14000ee66:	repz cmp edx,edi
   14000ee69:	movabs ds:0x47d76f5ef0a50978,al
   14000ee72:	test   BYTE PTR [rdi],cl
   14000ee74:	jg     0x14000ee4a
   14000ee76:	js     0x14000eef3
   14000ee78:	(bad)  
   14000ee79:	rex.WRB push r9
   14000ee7b:	push   rcx
   14000ee7c:	clc    
   14000ee7d:	(bad)  
   14000ee7e:	mov    ecx,0x944a5931
   14000ee83:	rex.RX ja 0x14000ee48
   14000ee86:	or     al,0x16
   14000ee88:	icebp  
   14000ee89:	xchg   esi,eax
   14000ee8a:	shl    eax,0x95
   14000ee8d:	out    dx,eax
   14000ee8e:	imul   esi,DWORD PTR [rsi],0x803dcec5
   14000ee94:	pop    rax
   14000ee95:	xchg   ebx,eax
   14000ee96:	and    BYTE PTR [rsp+rdx*2-0x7],al
   14000ee9a:	mul    esp
   14000ee9c:	jle    0x14000eed8
   14000ee9e:	(bad)  
   14000ee9f:	ins    DWORD PTR es:[rdi],dx
   14000eea0:	loope  0x14000ee71
   14000eea2:	mov    cl,0xf0
   14000eea4:	xchg   ecx,eax
   14000eea5:	pushf  
   14000eea6:	test   ebx,esi
   14000eea8:	xor    eax,0x11a5a446
   14000eead:	jns    0x14000ee72
   14000eeaf:	add    al,BYTE PTR [rdx]
   14000eeb1:	cmp    edx,DWORD PTR [rbp+0x772363b7]
   14000eeb7:	js     0x14000ef02
   14000eeb9:	scas   eax,DWORD PTR es:[rdi]
   14000eeba:	(bad)  
   14000eebb:	cmp    ecx,DWORD PTR [rdi+riz*1-0xd2377c9]
   14000eec2:	rex (bad) 
   14000eec4:	sub    BYTE PTR [rdx],bl
   14000eec6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000eec8:	sahf   
   14000eec9:	loopne 0x14000ee85
   14000eecb:	cmp    DWORD PTR [rax+0x4d],esi
   14000eece:	sbb    DWORD PTR [rax],eax
   14000eed0:	xchg   ebp,eax
   14000eed1:	rex.RX (bad) 
   14000eed3:	je     0x14000ee85
   14000eed5:	fwait
   14000eed6:	add    eax,0x147c33b0
   14000eedb:	scas   al,BYTE PTR es:[rdi]
   14000eedc:	mov    bl,dl
   14000eede:	pop    rsp
   14000eedf:	xchg   DWORD PTR [rcx+0x1],ebx
   14000eee2:	adc    al,0x5e
   14000eee4:	sti    
   14000eee5:	loopne 0x14000eedb
   14000eee7:	mov    ecx,DWORD PTR [rax+0x1eb4bf]
   14000eeed:	add    eax,0xa79697e1
   14000eef2:	add    cl,BYTE PTR [rax+0x368c9163]
   14000eef8:	sbb    DWORD PTR [rax+0x65fb16b4],eax
   14000eefe:	call   0xce1c1ece
   14000ef03:	rex.WRB scas rax,QWORD PTR es:[rdi]
   14000ef05:	loopne 0x14000eefc
   14000ef07:	(bad)  
   14000ef08:	loope  0x14000eeb1
   14000ef0a:	(bad)  
   14000ef0b:	sbb    eax,0xf452297c
   14000ef10:	jg     0x14000ef23
   14000ef12:	ror    DWORD PTR [rcx+0x78405ac9],1
   14000ef18:	ins    DWORD PTR es:[rdi],dx
   14000ef19:	vpunpckldq ymm8,ymm8,YMMWORD PTR [rsi-0x58c3dc4e]
   14000ef21:	cwde   
   14000ef22:	adc    edi,0x8013fe4b
   14000ef28:	(bad)  
   14000ef29:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ef2a:	push   rdi
   14000ef2b:	jae    0x14000ef4e
   14000ef2d:	ret    0x98f6
   14000ef30:	loop   0x14000eecc
   14000ef32:	add    DWORD PTR [rbx+rax*4+0x1f],ecx
   14000ef36:	add    edx,DWORD PTR [rbx-0x77ce00c4]
   14000ef3c:	or     bl,0xad
   14000ef3f:	cmp    esp,DWORD PTR [rdx]
   14000ef41:	mov    ebx,0x494b5cb2
   14000ef46:	int    0x17
   14000ef48:	mov    edi,0x6d39da7
   14000ef4d:	ret    0x94e0
   14000ef50:	loopne 0x14000ef65
   14000ef52:	mov    al,0x3f
   14000ef54:	movsxd esi,ecx
   14000ef56:	pop    rdi
   14000ef57:	mul    BYTE PTR [rsi]
   14000ef59:	test   dh,dl
   14000ef5b:	rex.RB (bad) 
   14000ef5d:	(bad)  
   14000ef5e:	js     0x14000ef9a
   14000ef60:	out    dx,eax
   14000ef61:	call   FWORD PTR [rbx-0x63]
   14000ef64:	adc    eax,0xea0b70c8
   14000ef69:	hlt    
   14000ef6a:	(bad)  
   14000ef6b:	shl    DWORD PTR [rdx],cl
   14000ef6d:	loope  0x14000ef49
   14000ef6f:	cmc    
   14000ef70:	adc    esp,DWORD PTR [rbp+rax*1+0x4465c7c6]
   14000ef77:	jge    0x14000ef87
   14000ef79:	movsxd edi,DWORD PTR [rdi+0x17]
   14000ef7c:	scas   al,BYTE PTR es:[rdi]
   14000ef7d:	mov    esp,0x414af0
   14000ef82:	mov    WORD PTR [rdx+0x18],gs
   14000ef85:	in     eax,0x4e
   14000ef87:	rex.RXB out dx,eax
   14000ef89:	cmp    BYTE PTR [rbp+rdx*1-0x74],cl
   14000ef8d:	cmp    DWORD PTR [rdi+riz*8-0x3a],ebp
   14000ef91:	sub    al,0x2d
   14000ef93:	cld    
   14000ef94:	cmc    
   14000ef95:	jnp    0x14000ef2a
   14000ef97:	rex.WX
   14000ef98:	rex.RB (bad) 
   14000ef9a:	push   0x13c439b2
   14000ef9f:	mov    esi,0x6b804cbe
   14000efa4:	mov    ebp,0xb724402f
   14000efa9:	jrcxz  0x14000ef8e
   14000efab:	in     eax,0x94
   14000efad:	(bad)  
   14000efae:	lea    esi,[rcx+rdi*1]
   14000efb1:	(bad)  
   14000efb2:	rex.WR xchg rsi,rax
   14000efb4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000efb5:	ins    BYTE PTR es:[rdi],dx
   14000efb6:	(bad)  
   14000efb7:	mov    edx,0x65ef3969
   14000efbc:	xchg   esi,eax
   14000efbd:	jb     0x14000efcc
   14000efbf:	sahf   
   14000efc0:	xchg   esi,eax
   14000efc1:	sub    esp,edi
   14000efc3:	mov    ss,esp
   14000efc5:	jbe    0x14000ef50
   14000efc7:	rex.RXB movabs al,ds:0x57d3fe1646f1657f
   14000efd1:	rex.RXB ror DWORD PTR [r8+r8*4],1
   14000efd5:	stos   DWORD PTR es:[rdi],eax
   14000efd6:	ret    
   14000efd7:	rex.WRXB or rax,0xffffffffc13945bc
   14000efdd:	mul    BYTE PTR [rbx+0x5f]
   14000efe0:	int3   
   14000efe1:	cmp    bl,ch
   14000efe3:	jae    0x14000eff5
   14000efe5:	sar    BYTE PTR [rsi+0x310e4cdf],1
   14000efeb:	mov    ecx,0xdb14b8f7
   14000eff0:	mov    al,0x9b
   14000eff2:	xor    ch,BYTE PTR [rbx+0xd]
   14000eff5:	jle    0x14000f039
   14000eff7:	adc    al,0xdd
   14000eff9:	(bad)  
   14000effa:	sti    
   14000effb:	adc    bh,BYTE PTR ds:[rcx]
   14000effe:	std    
   14000efff:	adc    DWORD PTR [rsi+0x1e],ebx
   14000f002:	pop    rcx
   14000f003:	(bad)  
   14000f004:	mov    al,0x38
   14000f006:	in     eax,dx
   14000f007:	outs   dx,DWORD PTR ds:[rsi]
   14000f008:	(bad)  
   14000f009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f00a:	fisub  WORD PTR [rcx-0x1ea09320]
   14000f010:	jmp    0x14000f017
   14000f012:	es mov bh,0x3e
   14000f015:	cmp    dl,bh
   14000f017:	rex.WXB push r12
   14000f019:	ins    DWORD PTR es:[rdi],dx
   14000f01a:	add    ch,ah
   14000f01c:	add    al,0xef
   14000f01e:	add    al,0xf4
   14000f020:	mov    dl,0x61
   14000f022:	int3   
   14000f023:	or     eax,ecx
   14000f025:	(bad)  
   14000f026:	jge    0x14000f051
   14000f028:	xchg   esi,eax
   14000f029:	cld    
   14000f02a:	adc    eax,0x1f9ddc52
   14000f02f:	mov    edx,DWORD PTR [rdx]
   14000f031:	or     al,0x76
   14000f033:	jle    0x14000f051
   14000f035:	(bad)  
   14000f036:	ins    BYTE PTR es:[rdi],dx
   14000f037:	(bad)  
   14000f038:	rex.WRB xchg r15,rax
   14000f03a:	hlt    
   14000f03b:	mov    cl,0x1c
   14000f03d:	sub    ebx,ebx
   14000f03f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f040:	fisubr WORD PTR [rcx-0x12521fa8]
   14000f046:	or     BYTE PTR [rdi+rdx*1],dh
   14000f049:	pop    rdi
   14000f04a:	add    BYTE PTR [rip+0xffffffffe8b4c5fe],bh        # 0x128b5b64e
   14000f050:	rex.WXB xlat BYTE PTR ds:[rbx]
   14000f052:	mov    bl,0x46
   14000f054:	add    ebx,ecx
   14000f056:	enter  0x5b06,0xb9
   14000f05a:	test   eax,0x4caaf2d9
   14000f05f:	add    al,0xa6
   14000f061:	sbb    al,0x6b
   14000f063:	mul    DWORD PTR [rip+0x4b805d4d]        # 0x18b814db6
   14000f069:	sub    ebp,ebx
   14000f06b:	cmp    DWORD PTR [rax],edx
   14000f06d:	adc    al,0x6
   14000f06f:	or     BYTE PTR [rax+0x5c],cl
   14000f072:	(bad)  
   14000f073:	and    BYTE PTR [rcx],bl
   14000f075:	retf   
   14000f076:	sbb    bh,BYTE PTR [rbp-0x9c857e5]
   14000f07c:	test   DWORD PTR [rcx],ebp
   14000f07e:	xchg   edi,eax
   14000f07f:	pop    rbp
   14000f080:	(bad)  
   14000f081:	push   rdx
   14000f082:	mov    esp,0x1ad69efd
   14000f087:	shl    BYTE PTR [rax+rdi*2+0x1],0xed
   14000f08c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f08d:	add    DWORD PTR [rbx],eax
   14000f08f:	rex.RB push r14
   14000f091:	pop    rdi
   14000f092:	mov    dl,0x9b
   14000f094:	(bad)  
   14000f095:	xchg   esp,eax
   14000f096:	retf   
   14000f097:	lods   eax,DWORD PTR ds:[rsi]
   14000f098:	fisttp DWORD PTR [rbx]
   14000f09a:	rex.X mov esi,fs
   14000f09d:	jrcxz  0x14000f02a
   14000f09f:	sub    DWORD PTR [rip+0x52eb3c41],edi        # 0x192ec2ce6
   14000f0a5:	sub    al,0x10
   14000f0a7:	mov    bl,BYTE PTR [rip+0x362fee80]        # 0x17630df2d
   14000f0ad:	or     eax,0xd6c08522
   14000f0b2:	adc    al,0x3b
   14000f0b4:	sbb    al,0x11
   14000f0b6:	popf   
   14000f0b7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f0b8:	rex.X sbb edi,DWORD PTR [rax-0x75]
   14000f0bc:	rex.X (bad) 
   14000f0be:	(bad)  
   14000f0bf:	(bad)  
   14000f0c0:	sti    
   14000f0c1:	pop    rdi
   14000f0c2:	dec    DWORD PTR [rdi-0x26]
   14000f0c5:	cmp    esp,DWORD PTR [rsi-0x63]
   14000f0c8:	(bad)  
   14000f0c9:	(bad)  
   14000f0ca:	mov    dh,ah
   14000f0cc:	cmp    al,0x83
   14000f0ce:	in     al,0x43
   14000f0d0:	nop
   14000f0d1:	lahf   
   14000f0d2:	popf   
   14000f0d3:	mov    edi,DWORD PTR [rbx+0x4200d23b]
   14000f0d9:	pop    rbp
   14000f0da:	push   rbp
   14000f0db:	loop   0x14000f154
   14000f0dd:	sbb    BYTE PTR [rsi+0x27b9d8b2],cl
   14000f0e3:	cs jge 0x14000f075
   14000f0e6:	push   rax
   14000f0e7:	rex.RB cwde 
   14000f0e9:	out    dx,al
   14000f0ea:	xchg   esi,eax
   14000f0eb:	adc    ebp,esp
   14000f0ed:	cs popf 
   14000f0ef:	push   0x69eb8505
   14000f0f4:	sub    dl,BYTE PTR [rcx+rdi*4]
   14000f0f7:	sbb    eax,0x2890988d
   14000f0fc:	rex fxtract 
   14000f0ff:	rcl    edi,0x95
   14000f102:	(bad)  
   14000f103:	lock pushw 0xd8ec
   14000f108:	pop    rbx
   14000f109:	push   0xffffffffffffffb6
   14000f10b:	pop    rdx
   14000f10c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f10d:	mov    BYTE PTR [rax],cl
   14000f10f:	movabs ds:0x5efdaaa8fabc1ba4,eax
   14000f118:	ret    0x84c7
   14000f11b:	(bad)  
   14000f11c:	(bad)  
   14000f11d:	jns    0x14000f11e
   14000f11f:	sbb    eax,0xdb1fed85
   14000f124:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f125:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f126:	repnz adc DWORD PTR [rbx],esp
   14000f129:	lock fimul WORD PTR [rdx-0x52181c77]
   14000f130:	ret    
   14000f131:	or     eax,0x309e97b2
   14000f136:	mov    ebp,0x4637fc2f
   14000f13b:	cmc    
   14000f13c:	scas   al,BYTE PTR es:[rdi]
   14000f13d:	test   al,0x10
   14000f13f:	mov    edi,0xcc4ed809
   14000f144:	jae    0x14000f18e
   14000f146:	ds jo  0x14000f1aa
   14000f149:	shl    DWORD PTR [rdx],0xde
   14000f14c:	dec    DWORD PTR [rax+0x588fdbcb]
   14000f152:	adc    esp,DWORD PTR [rax]
   14000f154:	add    BYTE PTR [rax+rdi*8+0x78],bh
   14000f158:	push   rax
   14000f159:	(bad)  
   14000f15a:	ret    0xd635
   14000f15d:	hlt    
   14000f15e:	adc    ah,BYTE PTR [rdx+0x25]
   14000f161:	loopne 0x14000f140
   14000f163:	rex.WXB (bad) 
   14000f165:	js     0x14000f0f6
   14000f167:	test   eax,0xfc605c9
   14000f16c:	adc    DWORD PTR [rax+rdx*8-0x27b9649f],ebp
   14000f173:	stos   DWORD PTR es:[rdi],eax
   14000f174:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f175:	movsxd esi,ebp
   14000f177:	jmp    0xcec33397
   14000f17d:	call   0xd208222b
   14000f182:	in     al,0xfa
   14000f184:	rol    BYTE PTR [rax],cl
   14000f186:	mul    BYTE PTR [rdx+rbx*1+0x70]
   14000f18a:	rol    BYTE PTR [rcx+0x47],cl
   14000f18d:	jb     0x14000f1e5
   14000f18f:	mov    dh,0x13
   14000f191:	rex (bad) 
   14000f193:	mov    dl,0x91
   14000f195:	sbb    al,0xc5
   14000f197:	sub    eax,0xb14f1ab1
   14000f19c:	je     0x14000f165
   14000f19e:	test   BYTE PTR [rcx+0x27],al
   14000f1a1:	in     eax,0x11
   14000f1a3:	es xchg ebp,eax
   14000f1a5:	push   rbx
   14000f1a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f1a7:	mov    ecx,0x2878e2a8
   14000f1ac:	and    dl,BYTE PTR [rbx]
   14000f1ae:	jb     0x14000f18e
   14000f1b0:	mov    edi,0x4d832105
   14000f1b5:	hlt    
   14000f1b6:	mov    esi,0x7a734ff2
   14000f1bb:	neg    bh
   14000f1bd:	es sahf 
   14000f1bf:	and    DWORD PTR [rsi+0x48085969],eax
   14000f1c5:	imul   ebx,DWORD PTR [rax+0xe1a086c],0xffffffac
   14000f1cc:	std    
   14000f1cd:	out    dx,eax
   14000f1ce:	push   rdi
   14000f1cf:	(bad)  
   14000f1d0:	js     0x14000f1e7
   14000f1d2:	(bad)
   14000f1d6:	sbb    BYTE PTR [rax-0x30072faa],cl
   14000f1dc:	mov    ah,0xb3
   14000f1de:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f1df:	scas   al,BYTE PTR es:[rdi]
   14000f1e0:	ins    BYTE PTR es:[rdi],dx
   14000f1e1:	hlt    
   14000f1e2:	xor    dl,BYTE PTR [rsi+riz*8+0x56e20863]
   14000f1e9:	loope  0x14000f240
   14000f1eb:	xor    eax,0x443ddd80
   14000f1f0:	jns    0x14000f25e
   14000f1f2:	rex.WR loop 0x14000f219
   14000f1f5:	jle    0x14000f211
   14000f1f7:	pop    QWORD PTR [rax]
   14000f1f9:	mov    al,0x6b
   14000f1fb:	hlt    
   14000f1fc:	fdivr  DWORD PTR [rsi+0x7]
   14000f1ff:	shl    eax,cl
   14000f201:	sbb    BYTE PTR [rsi-0x5b06ea89],al
   14000f207:	xor    al,0x4c
   14000f209:	xor    eax,0xaa0a9803
   14000f20e:	xor    dl,BYTE PTR [rcx-0x75]
   14000f211:	push   rdx
   14000f212:	(bad)  
   14000f213:	or     eax,DWORD PTR [rax-0x2b04bd2a]
   14000f219:	jo     0x14000f296
   14000f21b:	rex.WXB (bad) 
   14000f21d:	sbb    eax,DWORD PTR [rdi-0x35]
   14000f220:	(bad)  
   14000f221:	(bad)  
   14000f222:	cmc    
   14000f223:	xchg   edx,eax
   14000f224:	retf   0x62a1
   14000f227:	movabs al,ds:0x10d68fd558b7714a
   14000f230:	mov    WORD PTR [rbp-0x12],ds
   14000f233:	fst    st(3)
   14000f235:	shl    BYTE PTR [rbp+rbp*4-0x1e],0x2d
   14000f23a:	rcr    BYTE PTR [rax],0x46
   14000f23d:	iret   
   14000f23e:	jge    0x14000f209
   14000f240:	or     al,0xbf
   14000f242:	cld    
   14000f243:	rex.WRXB test QWORD PTR [r15-0x487fdb51],r14
   14000f24a:	in     eax,0xa3
   14000f24c:	cld    
   14000f24d:	or     ah,BYTE PTR [rdx-0x6bff26df]
   14000f253:	cmc    
   14000f254:	and    BYTE PTR [rdx],bh
   14000f256:	add    esi,DWORD PTR [rcx+rcx*1-0x7eef6c72]
   14000f25d:	jmp    0xd1146fb7
   14000f262:	jne    0x14000f22c
   14000f264:	mov    ebp,0x8b5b3ee0
   14000f269:	adc    BYTE PTR [rax],dl
   14000f26b:	rex.RX pop rcx
   14000f26d:	out    dx,al
   14000f26e:	jbe    0x14000f2a2
   14000f270:	rex.RX pop rsp
   14000f272:	push   rsi
   14000f273:	rex.W mov cl,0xd8
   14000f276:	adc    eax,0xf3ecbb61
   14000f27b:	cmp    DWORD PTR [rbp+0x6],esi
   14000f27e:	add    ah,al
   14000f280:	push   rdx
   14000f281:	adc    DWORD PTR [rcx+rbp*1+0x6c26024b],eax
   14000f288:	(bad)  
   14000f289:	cmp    bl,BYTE PTR [rip+0x4a30ca2a]        # 0x18a31bcb9
   14000f28f:	(bad)  
   14000f290:	(bad)  
   14000f291:	movabs al,ds:0xca8848103bb0066a
   14000f29a:	mov    ebx,0x6a52904
   14000f29f:	(bad)  
   14000f2a0:	mov    WORD PTR [rbx],gs
   14000f2a2:	popf   
   14000f2a3:	cmp    ebp,DWORD PTR [rcx+rbx*1-0xe]
   14000f2a7:	stos   DWORD PTR es:[rdi],eax
   14000f2a8:	std    
   14000f2a9:	rex.WR movabs rax,ds:0x96de98a829afc5e3
   14000f2b3:	(bad)  
   14000f2b4:	pushf  
   14000f2b5:	div    cl
   14000f2b7:	stc    
   14000f2b8:	jno    0x14000f2ce
   14000f2ba:	sub    al,0x80
   14000f2bc:	and    al,BYTE PTR [rsi-0x20d5181f]
   14000f2c2:	rex.WX xchg rax,rax
   14000f2c4:	rcl    DWORD PTR [rsi],0xb6
   14000f2c7:	(bad)  
   14000f2c8:	lock outs dx,DWORD PTR ds:[rsi]
   14000f2ca:	imul   edi,DWORD PTR [rsi],0xfffffff3
   14000f2cd:	test   dl,dh
   14000f2cf:	jns    0x14000f280
   14000f2d1:	add    eax,0x4002e94e
   14000f2d6:	loop   0x14000f2ee
   14000f2d8:	add    BYTE PTR [rbp+0xfa8c0fa],cl
   14000f2de:	xchg   ebx,eax
   14000f2df:	or     eax,0xc161f01
   14000f2e4:	rcr    BYTE PTR [rdx-0x7a60ba9d],0xa3
   14000f2eb:	sub    DWORD PTR [rcx-0xec216b6],0x36fcd
   14000f2f5:	lods   al,BYTE PTR ds:[rsi]
   14000f2f6:	lods   eax,DWORD PTR ds:[rsi]
   14000f2f7:	outs   dx,DWORD PTR ds:[rsi]
   14000f2f8:	cdq    
   14000f2f9:	push   rdx
   14000f2fa:	adc    r13,QWORD PTR [r14+r8*4+0x21]
   14000f2ff:	xchg   ebp,eax
   14000f300:	or     cl,BYTE PTR [rax+0x1761e323]
   14000f306:	iret   
   14000f307:	xor    ah,BYTE PTR [rdi+0x39]
   14000f30a:	(bad)
   14000f30d:	(bad)  
   14000f30e:	imul   eax,DWORD PTR [rdx],0xda422d12
   14000f314:	test   eax,0xa061bf3e
   14000f319:	gs add dh,dh
   14000f31c:	jnp    0x14000f35b
   14000f31e:	or     esi,DWORD PTR [rax]
   14000f320:	add    esp,DWORD PTR [rcx]
   14000f322:	test   al,0xf
   14000f324:	xor    dl,BYTE PTR [rbx+0x1717764b]
   14000f32a:	iret   
   14000f32b:	scas   eax,DWORD PTR es:[rdi]
   14000f32c:	pop    rbp
   14000f32d:	mov    esp,0xadf6b58c
   14000f332:	and    edx,DWORD PTR [rcx]
   14000f334:	shr    DWORD PTR [rax],cl
   14000f336:	or     al,0xbb
   14000f338:	enter  0x9f2e,0x10
   14000f33c:	mov    ss,WORD PTR [eax+0x6a]
   14000f340:	repnz icebp 
   14000f342:	jb     0x14000f39f
   14000f344:	or     ah,dl
   14000f346:	(bad)  
   14000f347:	imul   DWORD PTR [rdi+0xc5424cf]
   14000f34d:	in     al,0x8a
   14000f34f:	ret    0x3132
   14000f352:	jp     0x14000f339
   14000f354:	cli    
   14000f355:	rex.RXB push QWORD PTR [r9+0x37cda17f]
   14000f35c:	call   QWORD PTR [rip+0xffffffffe2afaca9]        # 0x122b0a00b
   14000f362:	mov    bl,cl
   14000f364:	rol    BYTE PTR [rsp+rcx*4],0x81
   14000f368:	call   0x14035577e
   14000f36d:	in     eax,0x7d
   14000f36f:	cwde   
   14000f370:	ins    BYTE PTR es:[rdi],dx
   14000f371:	add    al,0xd2
   14000f373:	sbb    DWORD PTR [rax-0x74],esp
   14000f376:	mov    edi,ebp
   14000f378:	packssdw mm5,QWORD PTR [rcx]
   14000f37b:	in     eax,dx
   14000f37c:	jne    0x14000f3cf
   14000f37e:	lods   al,BYTE PTR ds:[rsi]
   14000f37f:	jg     0x14000f3d9
   14000f381:	mov    ebp,fs
   14000f383:	push   rdi
   14000f384:	gs mov edx,0xc703e5be
   14000f38a:	add    BYTE PTR [rdx-0x54],ah
   14000f38d:	ins    DWORD PTR es:[rdi],dx
   14000f38e:	test   DWORD PTR [rbx+0x26],0x948110a1
   14000f395:	adc    cl,BYTE PTR [rsi+0x54]
   14000f398:	xchg   ecx,eax
   14000f399:	nop    DWORD PTR [rax+0x20abe386]
   14000f3a0:	lods   eax,DWORD PTR ds:[rsi]
   14000f3a1:	mov    dl,BYTE PTR [rdx]
   14000f3a3:	sbb    BYTE PTR [rsi-0x712d7ff],cl
   14000f3a9:	jmp    0xe2626c03
   14000f3ae:	pop    rcx
   14000f3af:	xchg   ebx,eax
   14000f3b0:	mov    BYTE PTR [rcx+0x683163],dh
   14000f3b6:	shl    DWORD PTR [rax+0x5f8737a4],1
   14000f3bc:	ins    DWORD PTR es:[rdi],dx
   14000f3bd:	outs   dx,BYTE PTR ds:[rsi]
   14000f3be:	in     al,dx
   14000f3bf:	test   DWORD PTR [rsi],eax
   14000f3c1:	push   rax
   14000f3c2:	and    bh,BYTE PTR [rsi+0x41]
   14000f3c5:	mov    esp,0x28547c13
   14000f3ca:	push   rcx
   14000f3cb:	out    0x57,eax
   14000f3cd:	(bad)  [rdi-0xe35a521]
   14000f3d3:	outs   dx,DWORD PTR ds:[rsi]
   14000f3d4:	or     bh,BYTE PTR [rbx]
   14000f3d6:	mov    ebp,0xfeab5af4
   14000f3db:	(bad)  
   14000f3dc:	(bad)  
   14000f3dd:	jl     0x14000f401
   14000f3df:	(bad)  
   14000f3e0:	sub    eax,esi
   14000f3e2:	data16 add cl,BYTE PTR [rdx+0xeb1bea5]
   14000f3e9:	loopne 0x14000f408
   14000f3eb:	adc    DWORD PTR [rcx-0x71],eax
   14000f3ee:	rex.RB movabs eax,ds:0xaea4349966885008
   14000f3f8:	rex.WRXB cdqe 
   14000f3fa:	cmc    
   14000f3fb:	push   rdi
   14000f3fc:	mov    al,0xfd
   14000f3fe:	rex.RXB jg 0x14000f438
   14000f401:	push   rdi
   14000f402:	(bad)  
   14000f403:	rex.WRXB
   14000f404:	rex.R jrcxz 0x14000f3c7
   14000f407:	rex.RXB
   14000f408:	rex.W pop rdx
   14000f40a:	xchg   BYTE PTR [rdi+0x46],al
   14000f40d:	rex.XB
   14000f40e:	repnz and DWORD PTR [rax],esi
   14000f411:	fiadd  DWORD PTR [rsi]
   14000f413:	and    esp,DWORD PTR gs:[rdi-0x7f23240a]
   14000f41a:	fdivrp st(6),st
   14000f41c:	lods   eax,DWORD PTR ds:[rsi]
   14000f41d:	and    ch,BYTE PTR [rax+0x72e4fe]
   14000f423:	cmp    BYTE PTR [rip+0x32e00e22],dh        # 0x172e1024b
   14000f429:	(bad)  
   14000f42a:	(bad)  [rdi-0x50683dfb]
   14000f430:	ins    BYTE PTR es:[rdi],dx
   14000f431:	in     al,0xb1
   14000f433:	sbb    eax,DWORD PTR [rsi+0xa950240]
   14000f439:	xor    eax,0x3bcc4352
   14000f43e:	mov    al,0xf1
   14000f440:	pop    rbp
   14000f441:	movabs ds:0x40f475e1504f1b52,al
   14000f44a:	cmp    ecx,ebp
   14000f44c:	and    ch,BYTE PTR [rax+0x27d48aeb]
   14000f452:	jrcxz  0x14000f42e
   14000f454:	cli    
   14000f455:	add    BYTE PTR [rax+0x4fde3d44],ch
   14000f45b:	in     al,0x5
   14000f45d:	jo     0x14000f3e8
   14000f45f:	scas   al,BYTE PTR es:[rdi]
   14000f460:	shl    BYTE PTR [rdi*1-0x1a44d9d1],cl
   14000f467:	xchg   ebp,eax
   14000f468:	test   DWORD PTR [rdi-0x20],esi
   14000f46b:	out    0xcd,al
   14000f46d:	mov    cl,BYTE PTR [ebp+0x29]
   14000f471:	movsxd ebp,DWORD PTR [rdi-0x5aca4854]
   14000f477:	cmp    al,0x1d
   14000f479:	call   0x19182429b
   14000f47e:	rex.R jne 0x14000f4d8
   14000f481:	push   rdi
   14000f482:	movabs ds:0xb4c290a2dfbedac5,al
   14000f48b:	(bad)  
   14000f48c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f48d:	ror    dl,cl
   14000f48f:	cmp    al,0x49
   14000f491:	jmp    0xfef51444
   14000f496:	hlt    
   14000f497:	(bad)  
   14000f498:	mov    ch,0x79
   14000f49a:	cli    
   14000f49b:	rex.WRXB
   14000f49c:	rex.W
   14000f49d:	gs std 
   14000f49f:	xor    BYTE PTR [rsi],al
   14000f4a1:	(bad)  
   14000f4a2:	ja     0x14000f4af
   14000f4a4:	sbb    DWORD PTR [rip+0xffffffffa8cc11e8],ecx        # 0xe8cd0692
   14000f4aa:	(bad)  
   14000f4ab:	or     al,0x7b
   14000f4ad:	ss out 0xdf,al
   14000f4b0:	cmp    esp,edi
   14000f4b2:	loopne 0x14000f43c
   14000f4b4:	mov    edi,0x700b38ba
   14000f4b9:	rex.R
   14000f4ba:	rex.WRX mov al,0x33
   14000f4bd:	add    ebx,DWORD PTR [rax]
   14000f4bf:	(bad)  
   14000f4c0:	hlt    
   14000f4c1:	xchg   DWORD PTR [rdi],esi
   14000f4c3:	sbb    cl,BYTE PTR [rsi-0x4ff7ffc1]
   14000f4c9:	mov    dh,0xb9
   14000f4cb:	pop    rbp
   14000f4cc:	push   0x62804400
   14000f4d1:	movabs eax,ds:0xc3cfff64aa521124
   14000f4da:	or     DWORD PTR [rsi+0x2a],esi
   14000f4dd:	push   rbx
   14000f4de:	and    eax,0xf13b1568
   14000f4e3:	fsub   QWORD PTR [rdi+0x5e1a494c]
   14000f4e9:	lods   eax,DWORD PTR ds:[rsi]
   14000f4ea:	jnp    0x14000f4ab
   14000f4ec:	or     al,0x85
   14000f4ee:	mov    ebp,0xd30a00d0
   14000f4f3:	mov    dl,0x92
   14000f4f5:	sahf   
   14000f4f6:	xor    esi,esp
   14000f4f8:	add    DWORD PTR [rcx-0x66],ebp
   14000f4fb:	sahf   
   14000f4fc:	iret   
   14000f4fd:	rex.RX sub al,0x2b
   14000f500:	popf   
   14000f501:	cmp    esi,DWORD PTR [rax-0xd]
   14000f504:	out    0x33,al
   14000f506:	adc    edx,DWORD PTR [rdi+0x7e264e90]
   14000f50c:	(bad)  
   14000f50d:	imul   edi,esp,0x839688f7
   14000f513:	sbb    eax,0xe5ac2b1a
   14000f518:	(bad)  
   14000f519:	adc    al,0xca
   14000f51b:	jg     0x14000f516
   14000f51d:	jl     0x14000f4ff
   14000f51f:	pop    rbp
   14000f520:	xlat   BYTE PTR ds:[rbx]
   14000f521:	mov    ecx,0x3e2e6002
   14000f526:	(bad)  
   14000f527:	in     eax,dx
   14000f528:	jg     0x14000f51d
   14000f52a:	pop    rbx
   14000f52b:	(bad)  
   14000f52c:	push   rdi
   14000f52d:	iret   
   14000f52e:	sub    BYTE PTR [rsi-0xf],al
   14000f531:	cmp    BYTE PTR [rsi+0x1f],bl
   14000f534:	mov    dl,0x41
   14000f536:	cmp    eax,0x346439
   14000f53b:	rex.RX cmp eax,0x92011b20
   14000f541:	(bad)  
   14000f542:	jmp    0x14000f542
   14000f544:	movabs ds:0xa0ccc55d1616c54,eax
   14000f54d:	rex.XB (bad) 
   14000f54f:	rex.RB
   14000f550:	rex.RXB
   14000f551:	xchg   r8,rax
   14000f553:	cld    
   14000f554:	(bad)  
   14000f555:	gs and al,0xc7
   14000f558:	(bad)  
   14000f559:	adc    BYTE PTR [rax],al
   14000f55b:	mov    eax,0xd23d7574
   14000f560:	add    BYTE PTR [rsp+rcx*8],al
   14000f563:	or     al,0x4e
   14000f565:	push   rdx
   14000f566:	movsxd esp,DWORD PTR [rdi+0x1]
   14000f569:	push   0xffffffff824c8c6c
   14000f56e:	mov    edi,0x7ff19c55
   14000f573:	(bad)  
   14000f574:	jmp    0x13cf29d66
   14000f579:	cmc    
   14000f57a:	push   rbp
   14000f57b:	(bad)  
   14000f57c:	rcl    BYTE PTR [rsp+rbp*8+0x33],0xd7
   14000f581:	rcr    BYTE PTR [rsi+0x39],1
   14000f584:	add    DWORD PTR [rbx],ecx
   14000f586:	mov    bl,0x7b
   14000f588:	or     dl,dl
   14000f58a:	jbe    0x14000f57f
   14000f58c:	pop    rsp
   14000f58d:	(bad)  
   14000f58e:	fcmovnb st,st(6)
   14000f590:	mov    ecx,0x77eb77e5
   14000f595:	pop    rsi
   14000f596:	clc    
   14000f597:	and    esi,DWORD PTR [rip+0x210ee846]        # 0x1610fdde3
   14000f59d:	outs   dx,DWORD PTR ds:[rsi]
   14000f59e:	add    dl,cl
   14000f5a0:	mov    ah,0x39
   14000f5a2:	out    dx,al
   14000f5a3:	(bad)  
   14000f5a4:	mov    edx,DWORD PTR [rdi]
   14000f5a6:	or     al,BYTE PTR [rbp+0x2b]
   14000f5a9:	(bad)  
   14000f5aa:	fdivr  QWORD PTR [rdi]
   14000f5ac:	in     al,0x74
   14000f5ae:	jg     0x14000f5ca
   14000f5b0:	(bad)  
   14000f5b1:	sbb    ebx,DWORD PTR [rdx-0x4d8b5446]
   14000f5b7:	outs   dx,DWORD PTR ds:[rsi]
   14000f5b8:	xor    cl,al
   14000f5ba:	(bad)  
   14000f5bb:	adc    edi,DWORD PTR [rbp-0x636c00d1]
   14000f5c1:	sahf   
   14000f5c2:	std    
   14000f5c3:	mov    bl,0x44
   14000f5c5:	add    DWORD PTR [rdx-0x14],ebp
   14000f5c8:	rex.WB
   14000f5c9:	add    BYTE PTR [rbx+0x6600d941],r12b
   14000f5d0:	mov    eax,0x8843640d
   14000f5d5:	(bad)  
   14000f5d6:	in     al,dx
   14000f5d7:	xor    edi,DWORD PTR [rbx]
   14000f5d9:	rex.WRXB movabs r15,0xdd880febdd587d44
   14000f5e3:	sbb    DWORD PTR [rsi+0x60894831],0x2d6a797c
   14000f5ed:	and    ch,cl
   14000f5ef:	sbb    al,0x50
   14000f5f1:	push   rdi
   14000f5f2:	(bad)  
   14000f5f3:	mov    bh,0x42
   14000f5f5:	(bad)  
   14000f5f6:	(bad)  
   14000f5f7:	fucomip st,st(7)
   14000f5f9:	(bad)  
   14000f5fa:	rex.WX push rsp
   14000f5fc:	(bad)  
   14000f5fd:	sbb    bh,dh
   14000f5ff:	(bad)  
   14000f600:	fstp   TBYTE PTR [rbx-0xd]
   14000f603:	movabs al,ds:0xedce77f03eebae3b
   14000f60c:	out    dx,al
   14000f60d:	neg    esi
   14000f60f:	mov    bh,0x63
   14000f611:	(bad)  
   14000f612:	add    DWORD PTR [rax],edx
   14000f614:	loopne 0x14000f638
   14000f616:	xchg   ecx,eax
   14000f617:	xchg   edx,eax
   14000f618:	rex.WB lods rax,QWORD PTR ds:[rsi]
   14000f61a:	es gs rex.RXB xchg r10d,eax
   14000f61e:	movsxd ebx,DWORD PTR [rcx+0x56]
   14000f621:	pushf  
   14000f622:	rex.W retf 0xf638
   14000f626:	push   rsp
   14000f627:	and    eax,0x12b2ec91
   14000f62c:	fnstenv [rip+0x715264f6]        # 0x1b1535b28
   14000f632:	in     al,0x89
   14000f634:	(bad)  
   14000f635:	xor    eax,0x4f6c4933
   14000f63a:	lea    edi,[rip+0xffffffffe4a71ae5]        # 0x124a81125
   14000f640:	mov    WORD PTR [rdi],fs
   14000f642:	(bad)  
   14000f643:	(bad)  
   14000f644:	adc    ebx,ecx
   14000f646:	(bad)  
   14000f647:	jns    0x14000f5e6
   14000f649:	mov    eax,0x596c65e4
   14000f64e:	mov    esp,DWORD PTR [rip+0xffffffff89651b53]        # 0xc96611a7
   14000f654:	mov    ah,0x24
   14000f656:	pop    rdx
   14000f657:	and    al,0x25
   14000f659:	and    DWORD PTR [rdx],0xb1001241
   14000f65f:	adc    DWORD PTR [rax+rsi*8],eax
   14000f662:	lods   eax,DWORD PTR ds:[rsi]
   14000f663:	out    dx,eax
   14000f664:	mov    ebp,0xcce7beee
   14000f669:	(bad)  
   14000f66a:	neg    esi
   14000f66c:	out    dx,al
   14000f66d:	(bad)  
   14000f66f:	cli    
   14000f670:	add    DWORD PTR [rdi],ebx
   14000f672:	sub    DWORD PTR [rbx],ecx
   14000f674:	and    BYTE PTR [rax-0x10f0af89],ch
   14000f67a:	jge    0x14000f639
   14000f67c:	fidivr WORD PTR [rsi-0x53103083]
   14000f682:	neg    esp
   14000f684:	and    al,0xf1
   14000f686:	outs   dx,DWORD PTR ds:[rsi]
   14000f687:	xchg   ebp,eax
   14000f688:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f689:	add    al,0x8e
   14000f68b:	push   rcx
   14000f68c:	cdq    
   14000f68d:	and    BYTE PTR [rcx],al
   14000f68f:	rcr    BYTE PTR [rdx],0x56
   14000f692:	pop    rdx
   14000f693:	cld    
   14000f694:	push   0xffffffffe706dc98
   14000f699:	mov    cl,0xaf
   14000f69b:	fmul   QWORD PTR [rdx-0x1f]
   14000f69e:	cmp    dl,dl
   14000f6a0:	mov    al,BYTE PTR [rdx]
   14000f6a2:	pop    rsp
   14000f6a3:	mov    edi,0x747b7c6f
   14000f6a8:	lods   eax,DWORD PTR ds:[rsi]
   14000f6a9:	add    al,al
   14000f6ab:	mov    ebp,0x1f3cf6d9
   14000f6b0:	rex.WRXB or r12b,BYTE PTR [r8-0x50]
   14000f6b4:	mov    eax,0xe1746c74
   14000f6b9:	add    cl,dh
   14000f6bb:	(bad)  
   14000f6bc:	mov    esi,0xda6004a4
   14000f6c1:	push   rdx
   14000f6c2:	mov    esi,0xd9a7882d
   14000f6c7:	std    
   14000f6c8:	icebp  
   14000f6c9:	retf   0x5de3
   14000f6cc:	pop    rsi
   14000f6cd:	(bad)  
   14000f6ce:	push   0x6d0d7467
   14000f6d3:	movabs ds:0x9e2a33ae5a331a07,eax
   14000f6dc:	clc    
   14000f6dd:	(bad)  
   14000f6de:	mov    WORD PTR [rsi],?
   14000f6e0:	hlt    
   14000f6e1:	or     esi,DWORD PTR [rax]
   14000f6e3:	pop    rbx
   14000f6e4:	(bad)  
   14000f6e5:	xchg   ebx,eax
   14000f6e6:	not    BYTE PTR [rbx+0x38]
   14000f6e9:	test   eax,0xa1cd802e
   14000f6ee:	movabs ds:0x13385968231680d,eax
   14000f6f7:	push   rsp
   14000f6f8:	adc    dl,ch
   14000f6fa:	not    DWORD PTR [rbp-0xa]
   14000f6fd:	jl     0x14000f6eb
   14000f6ff:	fadd   QWORD PTR [rbx]
   14000f701:	movabs ds:0xe6b31b3d53e60f8e,al
   14000f70a:	(bad)
   14000f70d:	rex.WRB jae 0x14000f6d3
   14000f710:	in     eax,dx
   14000f711:	add    BYTE PTR [rcx],dl
   14000f713:	rex.WRX sahf 
   14000f715:	jns    0x14000f6bd
   14000f717:	push   0xfffffffffc7d5bb8
   14000f71c:	lahf   
   14000f71d:	mov    bl,0x9e
   14000f71f:	nop
   14000f720:	rex.WB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f722:	xchg   BYTE PTR [rax],al
   14000f724:	stos   DWORD PTR es:[rdi],eax
   14000f725:	clc    
   14000f726:	cmp    ebp,DWORD PTR [rdx-0x19]
   14000f729:	sbb    eax,0xd263f3f9
   14000f72e:	sub    DWORD PTR [rdi-0x69628e5],edi
   14000f734:	add    BYTE PTR [rdx+rsi*4+0x4e],ah
   14000f738:	jno    0x14000f7ae
   14000f73a:	(bad)  
   14000f73b:	jmp    0x14000f730
   14000f73d:	std    
   14000f73e:	pop    rdi
   14000f73f:	mov    gs,WORD PTR [rsi-0x3fabfff6]
   14000f745:	in     al,dx
   14000f746:	mov    BYTE PTR [rcx-0x18],0x62
   14000f74a:	mov    DWORD PTR [rbx-0x4c],edi
   14000f74d:	rex.WXB ret 0x349a
   14000f751:	jge    0x14000f7bf
   14000f753:	cmp    rbx,QWORD PTR [rdi-0x4c]
   14000f757:	rcr    edi,1
   14000f759:	cmp    ecx,0xffffffe1
   14000f75c:	cmp    DWORD PTR [rdi+rax*1],esi
   14000f75f:	push   rbp
   14000f760:	in     al,0x75
   14000f762:	(bad)  
   14000f763:	stos   BYTE PTR es:[rdi],al
   14000f764:	cmp    BYTE PTR [rsi-0x14],bh
   14000f767:	(bad)  
   14000f768:	add    BYTE PTR [rdx-0x58615f61],al
   14000f76e:	(bad)  
   14000f76f:	(bad)  
   14000f770:	xlat   BYTE PTR ds:[rbx]
   14000f771:	pop    rax
   14000f772:	(bad)  
   14000f773:	add    eax,0xdab2e049
   14000f778:	sar    BYTE PTR [rdx+0x59aed003],1
   14000f77e:	jb     0x14000f7bd
   14000f780:	nop
   14000f781:	mov    ss,esi
   14000f783:	mov    cl,0xf1
   14000f785:	movabs eax,ds:0xdbb6837bb1cd2a5f
   14000f78e:	call   0xcf309fae
   14000f793:	fiadd  WORD PTR ds:[rsi+rax*2]
   14000f797:	jmp    0x14000f7c7
   14000f799:	mov    ebx,0xdde74b4f
   14000f79e:	(bad)  
   14000f79f:	lods   eax,DWORD PTR ds:[rsi]
   14000f7a0:	xor    dh,BYTE PTR [rbx-0x126de6e6]
   14000f7a6:	rex.WRX test al,0x50
   14000f7a9:	(bad)  
   14000f7aa:	jb     0x14000f756
   14000f7ac:	mov    dh,0xe7
   14000f7ae:	push   0x50
   14000f7b0:	mov    bl,0x8c
   14000f7b2:	fwait
   14000f7b3:	mov    ebp,0xaa941fe3
   14000f7b8:	xor    BYTE PTR [rdi-0x61],ah
   14000f7bb:	pop    rcx
   14000f7bc:	(bad)  
   14000f7bd:	jmp    0x14000f7aa
   14000f7bf:	adc    BYTE PTR [rax-0x7612d6a8],cl
   14000f7c5:	sbb    DWORD PTR [rsp+rbp*1],ecx
   14000f7c8:	sbb    DWORD PTR [rdi+0x2],esp
   14000f7cb:	test   BYTE PTR [rbx-0x3c],cl
   14000f7ce:	adc    al,0x87
   14000f7d0:	fild   QWORD PTR [rdx-0x51248d19]
   14000f7d6:	clc    
   14000f7d7:	xchg   dl,ah
   14000f7d9:	imul   esi,DWORD PTR [rbp-0x7b],0xfffffff1
   14000f7dd:	sub    al,0xf1
   14000f7df:	test   BYTE PTR [rdx+0x2d642f7],ah
   14000f7e5:	scas   al,BYTE PTR es:[rdi]
   14000f7e6:	xchg   ecx,eax
   14000f7e7:	mov    rax,cr7
   14000f7ea:	in     al,0x5a
   14000f7ec:	jge    0x14000f799
   14000f7ee:	rex.WRB
   14000f7ef:	ds rex.WXB shr r12b,cl
   14000f7f3:	xor    DWORD PTR [rbp+0x3b13d6f2],edx
   14000f7f9:	mov    edi,0xea7d2f05
   14000f7fe:	iret   
   14000f7ff:	sbb    dh,BYTE PTR [rsi-0x4a6fe79a]
   14000f805:	fs or  ebx,edi
   14000f808:	(bad)  
   14000f809:	rcl    BYTE PTR [rax-0x17],0x84
   14000f80d:	sub    eax,0x1d21bfdb
   14000f812:	ret    0x1135
   14000f815:	pop    rsp
   14000f816:	add    eax,0x43aec35d
   14000f81b:	in     eax,dx
   14000f81c:	js     0x14000f83c
   14000f81e:	push   rbx
   14000f81f:	(bad)  
   14000f820:	xchg   ebp,eax
   14000f821:	jnp    0x14000f847
   14000f823:	dec    DWORD PTR [rbx+0x5b17065f]
   14000f829:	rex.WB (bad) 
   14000f82b:	rex.WX add BYTE PTR [rbp-0x35faa8bc],sil
   14000f832:	sbb    al,0xba
   14000f834:	jne    0x14000f83f
   14000f836:	sub    BYTE PTR [rbx+0x57],dh
   14000f839:	fld    DWORD PTR [rdi+0x7d]
   14000f83c:	xchg   ebp,eax
   14000f83d:	(bad)  
   14000f83e:	scas   eax,DWORD PTR es:[rdi]
   14000f83f:	out    dx,al
   14000f840:	stos   DWORD PTR es:[rdi],eax
   14000f841:	lahf   
   14000f842:	popf   
   14000f843:	adc    esp,ebx
   14000f845:	(bad)  
   14000f846:	in     eax,dx
   14000f847:	mov    ch,BYTE PTR [rcx+0x39]
   14000f84a:	push   rbx
   14000f84b:	test   eax,0x62ea9a56
   14000f850:	lods   al,BYTE PTR ds:[rsi]
   14000f851:	(bad)  
   14000f852:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f853:	(bad)  
   14000f854:	fmul   QWORD PTR [rax+rax*4]
   14000f857:	outs   dx,BYTE PTR ds:[rsi]
   14000f858:	jg     0x14000f817
   14000f85a:	add    BYTE PTR [rax],dh
   14000f85c:	rex.WRXB sahf 
   14000f85e:	cmp    DWORD PTR [rdi],ebx
   14000f860:	xlat   BYTE PTR ds:[rbx]
   14000f861:	out    0x53,al
   14000f863:	rex.WX mov WORD PTR [rdx-0x658d20a2],ds
   14000f86a:	sub    dl,BYTE PTR [rcx]
   14000f86c:	mov    ebx,0xfea1d271
   14000f871:	push   rdi
   14000f872:	mov    dh,0x7b
   14000f874:	and    al,0xfd
   14000f876:	std    
   14000f877:	outs   dx,DWORD PTR ds:[rsi]
   14000f878:	pop    rdi
   14000f879:	sub    DWORD PTR [rsi-0x21519aeb],ebp
   14000f87f:	jge    0x14000f814
   14000f881:	mov    WORD PTR [rcx+0x3a],gs
   14000f884:	add    ebp,edi
   14000f886:	jae    0x14000f8d8
   14000f888:	jrcxz  0x14000f83e
   14000f88a:	(bad)  
   14000f88b:	jne    0x14000f8eb
   14000f88d:	push   0xffffffff9cad7060
   14000f892:	or     dh,0x2c
   14000f895:	repz (bad) 
   14000f897:	jg     0x14000f86b
   14000f899:	mov    ebp,0x985b28e7
   14000f89e:	jnp    0x14000f918
   14000f8a0:	pushf  
   14000f8a1:	movsx  ebp,bx
   14000f8a4:	test   eax,0x7e3cdf5d
   14000f8a9:	jmp    0x14bd77801
   14000f8ae:	mov    fs,WORD PTR [rdi]
   14000f8b0:	add    BYTE PTR [rax],cl
   14000f8b2:	rol    ebx,0x36
   14000f8b5:	shl    DWORD PTR [rdi+0x3386fecc],cl
   14000f8bb:	scas   eax,DWORD PTR es:[rdi]
   14000f8bc:	cs adc eax,0x720d5716
   14000f8c2:	add    DWORD PTR [rdi-0x1e],0x31
   14000f8c6:	pop    rdx
   14000f8c7:	pop    rbp
   14000f8c8:	lods   al,BYTE PTR ds:[rsi]
   14000f8c9:	xor    eax,0xd783afc2
   14000f8ce:	(bad)  
   14000f8cf:	xchg   edi,eax
   14000f8d0:	rex.WRX movsxd r14,ebx
   14000f8d3:	iret   
   14000f8d4:	jle    0x14000f8b4
   14000f8d6:	repnz mov ecx,0xe1731a47
   14000f8dc:	push   0xffffffffffffffa9
   14000f8de:	out    dx,eax
   14000f8df:	(bad)  
   14000f8e0:	neg    BYTE PTR [rax]
   14000f8e2:	lods   eax,DWORD PTR ds:[rsi]
   14000f8e3:	rex.B
   14000f8e4:	rex.RXB
   14000f8e5:	fwait
   14000f8e6:	(bad)  
   14000f8e7:	(bad)  
   14000f8e8:	push   rdi
   14000f8e9:	jne    0x14000f920
   14000f8eb:	mov    bl,0x1b
   14000f8ed:	jg     0x101b0c7bd
   14000f8f3:	xor    DWORD PTR [rsi+0x11877df9],esi
   14000f8f9:	fdivr  QWORD PTR [rcx+0x6d77769d]
   14000f8ff:	ds push rsp
   14000f901:	xlat   BYTE PTR ds:[rbx]
   14000f902:	push   rbp
   14000f903:	(bad)
   14000f906:	int    0xe9
   14000f908:	fcmovbe st,st(6)
   14000f90a:	shr    BYTE PTR [rsi+0x59556fae],1
   14000f910:	add    BYTE PTR [rax+rax*1+0x19],0xa3
   14000f915:	rex.WB scas rax,QWORD PTR es:[rdi]
   14000f917:	(bad)  
   14000f918:	adc    cl,BYTE PTR fs:[rcx]
   14000f91b:	and    DWORD PTR [rbx+0x1c371eae],esp
   14000f921:	int3   
   14000f922:	mov    ebx,0xbf3c6cf6
   14000f927:	adc    DWORD PTR [rsi+0x888878c],r12d
   14000f92e:	xchg   edi,eax
   14000f92f:	cdq    
   14000f930:	sub    al,0xd8
   14000f932:	mov    cl,0xfd
   14000f934:	test   DWORD PTR [rax+0x6d703fe],ebp
   14000f93a:	add    BYTE PTR [rdx-0x59],ch
   14000f93d:	mov    bl,0x17
   14000f93f:	adc    al,BYTE PTR [rdx]
   14000f941:	rex.WR in al,0x4f
   14000f944:	sub    al,BYTE PTR [rax-0x5580cf9c]
   14000f94a:	loopne 0x14000f957
   14000f94c:	ret    
   14000f94d:	xor    edi,DWORD PTR [rbx-0x48506112]
   14000f953:	and    dl,BYTE PTR [rdx-0xd]
   14000f956:	std    
   14000f957:	push   rsi
   14000f958:	stos   BYTE PTR es:[rdi],al
   14000f959:	jmp    FWORD PTR [rsi+0x78]
   14000f95c:	movabs ds:0xe60dc17b0dba1e3,al
   14000f965:	(bad)  
   14000f966:	push   rbp
   14000f967:	mov    esp,0x468482c4
   14000f96c:	jne    0x14000f966
   14000f96e:	add    BYTE PTR [rsi+0x7d1fe603],ch
   14000f974:	out    0xf7,al
   14000f976:	ins    DWORD PTR es:[rdi],dx
   14000f977:	jns    0x14000f978
   14000f979:	sti    
   14000f97a:	enter  0x2394,0x13
   14000f97e:	stos   DWORD PTR es:[rdi],eax
   14000f97f:	loop   0x14000f956
   14000f981:	sub    dh,BYTE PTR fs:[rcx+0x31cb7cd0]
   14000f988:	jg     0x14000f923
   14000f98a:	sub    DWORD PTR [rax+rdi*4-0x5730c0f4],0xffffff8d
   14000f992:	jmp    0xe8cd826b
   14000f997:	call   0xc0163a9b
   14000f99c:	cli    
   14000f99d:	int    0x13
   14000f99f:	push   rbx
   14000f9a0:	mov    cl,0x45
   14000f9a2:	mov    esp,0x18354f5a
   14000f9a7:	add    BYTE PTR [rax-0x12],cl
   14000f9aa:	js     0x14000f9cf
   14000f9ac:	test   BYTE PTR [rdi-0x1dd3a332],spl
   14000f9b3:	stc    
   14000f9b4:	add    DWORD PTR [rax],esp
   14000f9b6:	(bad)  
   14000f9b7:	rex.WB push r10
   14000f9b9:	xor    DWORD PTR [rbp-0x2b71a42],edi
   14000f9bf:	out    dx,eax
   14000f9c0:	and    dl,BYTE PTR [rbx-0x53]
   14000f9c3:	rcr    BYTE PTR [rcx],1
   14000f9c5:	repnz out dx,eax
   14000f9c7:	cmp    ecx,0xffffffdf
   14000f9ca:	leave  
   14000f9cb:	mov    ecx,0x3ad4d9db
   14000f9d0:	movabs al,ds:0x746d7fadfff3cebe
   14000f9d9:	(bad)  
   14000f9da:	add    BYTE PTR [rax],ah
   14000f9dc:	rcr    BYTE PTR [rsi+0x4275315],cl
   14000f9e2:	jne    0x14000f9dd
   14000f9e4:	add    DWORD PTR [rdx+0x77e65187],esi
   14000f9ea:	cmp    eax,0x7c35ebb5
   14000f9ef:	loopne 0x14000f9ed
   14000f9f1:	addr32 sub esi,esp
   14000f9f4:	or     BYTE PTR [rdx+0x23],dl
   14000f9f7:	push   0x6d56c1eb
   14000f9fc:	xchg   edi,ebp
   14000f9fe:	fimul  DWORD PTR [rsi-0x22b76c1]
   14000fa04:	fidivr DWORD PTR [rcx+0x6d656cd5]
   14000fa0a:	or     al,0xc4
   14000fa0c:	(bad)  
   14000fa0d:	jp     0x14000fa0d
   14000fa0f:	cli    
   14000fa10:	add    ah,ah
   14000fa12:	int3   
   14000fa13:	and    ebx,eax
   14000fa15:	clc    
   14000fa16:	enter  0x96af,0xe6
   14000fa1a:	in     al,dx
   14000fa1b:	push   rdi
   14000fa1c:	xchg   edx,eax
   14000fa1d:	not    BYTE PTR [rdx-0x757aaf97]
   14000fa23:	add    eax,0x6b7431ca
   14000fa28:	fnstsw WORD PTR [rbp-0x25]
   14000fa2b:	ret    0xa1f5
   14000fa2e:	or     dl,al
   14000fa30:	stos   DWORD PTR es:[rdi],eax
   14000fa31:	mov    BYTE PTR [rbp-0x57],cl
   14000fa34:	es push rbp
   14000fa36:	(bad)  
   14000fa37:	mov    dh,0x5a
   14000fa39:	fwait
   14000fa3a:	outs   dx,DWORD PTR ds:[rsi]
   14000fa3b:	jnp    0x14000faac
   14000fa3d:	mov    ch,0xdd
   14000fa3f:	jmp    0x14000f9e9
   14000fa41:	pop    rsi
   14000fa42:	rex.WRX sub rax,0xfffffffff977dd39
   14000fa48:	mov    dh,BYTE PTR [rdi+0x79229916]
   14000fa4e:	repnz int3 
   14000fa50:	test   DWORD PTR [rdx+0x71],ebp
   14000fa53:	or     eax,0x51930225
   14000fa58:	retf   0x6206
   14000fa5b:	out    0xe7,al
   14000fa5d:	test   al,bl
   14000fa5f:	cmp    BYTE PTR [rbp-0xedae5d2],bh
   14000fa65:	cmc    
   14000fa66:	cdq    
   14000fa67:	sub    BYTE PTR [rdx+0x7a],ah
   14000fa6a:	out    0x4d,eax
   14000fa6c:	(bad)  
   14000fa6d:	clc    
   14000fa6e:	fisttp QWORD PTR [rsi-0x24a939e5]
   14000fa74:	mov    bl,0x61
   14000fa76:	out    0x6f,al
   14000fa78:	add    al,0xf5
   14000fa7a:	(bad)  
   14000fa7b:	mov    eax,0x280173a6
   14000fa80:	mov    esp,0x6dd709ad
   14000fa85:	int3   
   14000fa86:	imul   esp,DWORD PTR [rsi-0x30],0x7f
   14000fa8a:	rex.W (bad) 
   14000fa8c:	mov    bh,BYTE PTR [rbx-0x790fc762]
   14000fa92:	rol    ecx,1
   14000fa94:	repz lahf 
   14000fa96:	in     eax,dx
   14000fa97:	push   rdi
   14000fa98:	fisub  DWORD PTR [rdi-0x3]
   14000fa9b:	adc    eax,0x3b7abe31
   14000faa0:	xor    eax,0xa9a34f8a
   14000faa5:	mov    BYTE PTR [rsi],0xb7
   14000faa8:	push   rdx
   14000faa9:	ror    DWORD PTR [rdi+0x0],cl
   14000faac:	(bad)  
   14000faad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000faae:	ja     0x14000fadc
   14000fab0:	and    esi,edx
   14000fab2:	cmp    al,0x4e
   14000fab4:	add    esi,ebx
   14000fab6:	mov    esp,0x3e253de7
   14000fabb:	(bad)  
   14000fabc:	mov    esi,0xc89280c4
   14000fac1:	imul   esp,edi,0xffffff99
   14000fac4:	iret   
   14000fac5:	stos   DWORD PTR es:[rdi],eax
   14000fac6:	sti    
   14000fac7:	ret    
   14000fac8:	mov    ch,0x46
   14000faca:	xor    cl,BYTE PTR [rdi+0x48]
   14000facd:	shr    BYTE PTR [rcx-0x6ab567d8],cl
   14000fad3:	sbb    edi,0x7363f554
   14000fad9:	test   eax,0x40076293
   14000fade:	and    ebx,DWORD PTR [rdi+0x23]
   14000fae1:	(bad)  
   14000fae2:	push   rsi
   14000fae3:	bsf    ebx,ecx
   14000fae6:	rex.WXB fild WORD PTR [r8-0x80]
   14000faea:	loop   0x14000fa7d
   14000faec:	jrcxz  0x14000fa95
   14000faee:	(bad)  
   14000faef:	loope  0x14000fb01
   14000faf1:	add    dl,BYTE PTR [rdx+rdx*4-0x3f016cbc]
   14000faf8:	jb     0x14000fa8c
   14000fafa:	mov    dh,BYTE PTR [rsi+0x77db8b52]
   14000fb00:	ss pop rsp
   14000fb02:	xor    edi,DWORD PTR [rip+0x490d7c8]        # 0x14491d2d0
   14000fb08:	es (bad) 
   14000fb0a:	clc    
   14000fb0b:	jne    0x14000fb1e
   14000fb0d:	icebp  
   14000fb0e:	scas   eax,DWORD PTR es:[rdi]
   14000fb0f:	rex.WRB movabs ds:0x36ae07fd550bf,al
   14000fb19:	rex.WRB movabs r14,0x149afccca35e3f53
   14000fb23:	sbb    BYTE PTR [rcx-0x49a781a1],0x36
   14000fb2a:	xchg   DWORD PTR [rdi-0xa],esp
   14000fb2d:	mov    esi,0x799b97b6
   14000fb32:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fb33:	in     eax,0x66
   14000fb35:	movsxd esi,DWORD PTR [rax-0x3c]
   14000fb38:	jbe    0x14000fbb8
   14000fb3a:	fsub   DWORD PTR [rsi]
   14000fb3c:	rex.B
   14000fb3d:	rex.WX test QWORD PTR [rdx],rax
   14000fb40:	movabs al,ds:0xa99b185421a018e8
   14000fb49:	in     al,0x35
   14000fb4b:	adc    BYTE PTR [rdi-0x6b30601],bh
   14000fb51:	adc    ebx,DWORD PTR [rdi-0x40600e69]
   14000fb57:	pop    rbx
   14000fb58:	int    0xf0
   14000fb5a:	(bad)
   14000fb5f:	popf   
   14000fb60:	sub    BYTE PTR [rsi-0x23],cl
   14000fb63:	rex.RXB
   14000fb64:	test   BYTE PTR ds:[rsi+0xee15dd6],cl
   14000fb6b:	pop    rbx
   14000fb6c:	js     0x14000fb15
   14000fb6e:	mov    eax,DWORD PTR [rdi]
   14000fb70:	mov    ecx,0xdeabe7ae
   14000fb75:	rex.X mov bl,0xbf
   14000fb78:	(bad)  
   14000fb79:	jg     0x14000fbc2
   14000fb7b:	xor    eax,eax
   14000fb7d:	pop    rdx
   14000fb7e:	cld    
   14000fb7f:	xchg   bl,bh
   14000fb81:	(bad)  
   14000fb82:	cli    
   14000fb83:	pop    rbp
   14000fb84:	fcomp  QWORD PTR [rax-0x7efe690]
   14000fb8a:	xchg   bl,bl
   14000fb8c:	nop
   14000fb8d:	(bad)  
   14000fb8e:	sub    eax,0x9f276399
   14000fb93:	(bad)  
   14000fb94:	pop    rdi
   14000fb96:	jns    0x14000fb6d
   14000fb98:	int    0xcc
   14000fb9a:	add    al,0x4e
   14000fb9c:	push   rbx
   14000fb9d:	rex.WB (bad) 
   14000fb9f:	repz and eax,0xcec48925
   14000fba5:	mov    edi,0x193ce5c6
   14000fbaa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fbab:	mov    ch,cl
   14000fbad:	movsxd ecx,DWORD PTR [rdi]
   14000fbaf:	jle    0x14000fb8a
   14000fbb1:	cmp    al,0xec
   14000fbb3:	cmp    DWORD PTR [rbx-0x14],ecx
   14000fbb6:	retf   
   14000fbb7:	popf   
   14000fbb8:	xlat   BYTE PTR ds:[rbx]
   14000fbb9:	sub    DWORD PTR [rbp-0x29],0x5d5d35
   14000fbc0:	or     BYTE PTR [rcx-0x8],ch
   14000fbc3:	(bad)  
   14000fbc4:	ds rex xchg esp,eax
   14000fbc7:	mov    al,0x47
   14000fbc9:	lea    eax,[rbx+0x5a]
   14000fbcc:	mul    BYTE PTR [rsi-0x6a]
   14000fbcf:	ds ins BYTE PTR es:[rdi],dx
   14000fbd1:	mov    edi,DWORD PTR [rcx-0x4133145]
   14000fbd7:	push   rsi
   14000fbd8:	sbb    al,0x7e
   14000fbda:	(bad)  
   14000fbdb:	(bad)  
   14000fbdc:	(bad)  
   14000fbdd:	(bad)  
   14000fbde:	outs   dx,DWORD PTR ds:[rsi]
   14000fbdf:	add    esp,DWORD PTR [rcx-0x156a7b5d]
   14000fbe5:	stos   BYTE PTR es:[rdi],al
   14000fbe6:	sbb    eax,0x2bce3403
   14000fbeb:	jo     0x14000fc2c
   14000fbed:	mov    ch,0x52
   14000fbef:	repz sahf 
   14000fbf1:	iret   
   14000fbf2:	lods   al,BYTE PTR ds:[rsi]
   14000fbf3:	scas   eax,DWORD PTR es:[rdi]
   14000fbf4:	movabs ds:0xe97d25ebf3de6c75,eax
   14000fbfd:	rex.XB or DWORD PTR [r11],ebp
   14000fc00:	rex.B cdq 
   14000fc02:	cld    
   14000fc03:	mov    bh,BYTE PTR [rsi+rbx*2]
   14000fc06:	mov    bl,0xb1
   14000fc08:	(bad)  
   14000fc09:	jns    0x14000fc00
   14000fc0b:	rex.RXB sbb r10d,DWORD PTR [r8+0x2d8087c]
   14000fc12:	add    BYTE PTR [rsi],0x54
   14000fc15:	ins    BYTE PTR es:[rdi],dx
   14000fc16:	push   0xffffffffaa248d37
   14000fc1b:	rcl    ah,0xe1
   14000fc1e:	cmp    edi,esp
   14000fc20:	out    dx,al
   14000fc21:	add    cl,BYTE PTR [rdx-0x6a8835b8]
   14000fc27:	imul   ecx,DWORD PTR [rdi],0xfffffffd
   14000fc2a:	cmp    eax,0xfedfea01
   14000fc2f:	(bad)  
   14000fc30:	push   rdx
   14000fc31:	add    ebx,esi
   14000fc33:	enter  0xb3f1,0xe3
   14000fc37:	(bad)  
   14000fc38:	lea    edx,gs:[rcx-0x2d]
   14000fc3c:	fwait
   14000fc3d:	mov    bl,0x66
   14000fc3f:	(bad)  
   14000fc40:	fiadd  WORD PTR [rsi+0xcbd400c]
   14000fc46:	(bad)  
   14000fc47:	(bad)  
   14000fc48:	rex.WR adc rax,0x4000c7d3
   14000fc4e:	int3   
   14000fc4f:	push   rsp
   14000fc50:	xchg   ebp,eax
   14000fc51:	add    ebp,DWORD PTR [rbx+rbp*1+0x71]
   14000fc55:	xchg   ebx,eax
   14000fc56:	fwait
   14000fc57:	mov    dh,0x4f
   14000fc59:	sbb    eax,0x600bffea
   14000fc5e:	sbb    al,BYTE PTR [rax]
   14000fc60:	sub    BYTE PTR [rbx-0x37c7eaa1],0x4
   14000fc67:	imul   esi,DWORD PTR [rdx+rbp*2+0x7b],0xccb50c
   14000fc6f:	(bad)  
   14000fc70:	int    0xdd
   14000fc72:	iret   
   14000fc73:	mov    dl,0x7a
   14000fc75:	xlat   BYTE PTR ds:[rbx]
   14000fc76:	movabs ds:0x3a3f278dd6cf7f37,eax
   14000fc7f:	(bad)  
   14000fc80:	rex.WRX add QWORD PTR [rdx+0x4841196a],r8
   14000fc87:	rex.XB push r10
   14000fc89:	movabs eax,ds:0x25a44044ed409e73
   14000fc92:	(bad)  
   14000fc93:	(bad)  
   14000fc94:	ds pop rdi
   14000fc96:	add    DWORD PTR [rax],esp
   14000fc98:	dec    edx
   14000fc9a:	cmp    eax,0x37e7be32
   14000fc9f:	loopne 0x14000fc87
   14000fca1:	(bad)  
   14000fca2:	sti    
   14000fca3:	shr    DWORD PTR [rdi],1
   14000fca5:	(bad)  
   14000fca6:	rex.WRB
   14000fca7:	add    ecx,r11d
   14000fcaa:	adc    bl,BYTE PTR [rdx+0x4de3016f]
   14000fcb0:	out    0xe4,eax
   14000fcb2:	push   rbx
   14000fcb3:	cmc    
   14000fcb4:	jbe    0x14000fcb4
   14000fcb6:	and    al,0xd3
   14000fcb8:	add    esi,DWORD PTR [rcx-0x40b928c0]
   14000fcbe:	push   rbp
   14000fcbf:	add    eax,0x1341c23e
   14000fcc4:	imul   ebx,eax,0x23a02321
   14000fcca:	rex.RX xor ax,0x5428
   14000fccf:	movabs al,ds:0x280afbfb2f801c1e
   14000fcd8:	mov    ?,WORD PTR [rsi]
   14000fcda:	jns    0x14000fd06
   14000fcdc:	scas   eax,DWORD PTR es:[rdi]
   14000fcdd:	xchg   esp,eax
   14000fcde:	add    esp,DWORD PTR [rdx]
   14000fce0:	in     eax,0x24
   14000fce2:	adc    DWORD PTR [rbx],esi
   14000fce4:	cwde   
   14000fce5:	mov    bl,0x26
   14000fce7:	rex.WB adc rax,0xffffffffdfe94dc4
   14000fced:	mov    ah,0x54
   14000fcef:	add    BYTE PTR [rdi+riz*1],al
   14000fcf2:	loopne 0x14000fcd8
   14000fcf4:	rex.WR cmp al,0x44
   14000fcf7:	(bad)  
   14000fcf8:	gs jb  0x14000fcce
   14000fcfb:	mov    bl,0xa2
   14000fcfd:	test   al,0xc7
   14000fcff:	sahf   
   14000fd00:	sar    ecx,cl
   14000fd02:	xlat   BYTE PTR ds:[rbx]
   14000fd03:	or     ebx,DWORD PTR [rbp+0x33]
   14000fd06:	(bad)  
   14000fd07:	add    dl,0xdb
   14000fd0a:	jmp    FWORD PTR [rsi+0x1]
   14000fd0d:	test   al,0xea
   14000fd0f:	pop    rbp
   14000fd10:	ja     0x14000fcab
   14000fd12:	add    esp,edx
   14000fd14:	lahf   
   14000fd15:	(bad)  
   14000fd16:	rex.RX jrcxz 0x14000fd0e
   14000fd19:	mov    ebp,DWORD PTR [rbx+0x3b]
   14000fd1c:	pop    rsi
   14000fd1d:	mov    dl,0x73
   14000fd1f:	jae    0x14000fcd1
   14000fd21:	(bad)  
   14000fd22:	jae    0x14000fce7
   14000fd24:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fd25:	(bad)  
   14000fd26:	(bad)
   14000fd2a:	mov    ?,WORD PTR [rdx]
   14000fd2c:	xchg   edx,eax
   14000fd2d:	fcmovbe st,st(4)
   14000fd2f:	pop    rdx
   14000fd30:	and    eax,DWORD PTR [rbx-0x5c]
   14000fd33:	mov    cl,BYTE PTR [rdi-0x30e3365d]
   14000fd39:	(bad)  
   14000fd3a:	rcl    cl,cl
   14000fd3c:	cmp    dh,BYTE PTR [rsi]
   14000fd3e:	(bad)  
   14000fd3f:	in     al,0xe7
   14000fd41:	lods   al,BYTE PTR ds:[rsi]
   14000fd42:	cmp    ecx,esi
   14000fd44:	xor    BYTE PTR [rcx],0x20
   14000fd47:	sub    BYTE PTR [rcx+0x5d],dh
   14000fd4a:	sbb    al,0xc9
   14000fd4c:	scas   eax,DWORD PTR es:[rdi]
   14000fd4d:	(bad)  
   14000fd4e:	stos   DWORD PTR es:[rdi],eax
   14000fd4f:	in     eax,0x18
   14000fd51:	(bad)  
   14000fd52:	pop    fs
   14000fd54:	rex.RB (bad) 
   14000fd56:	mov    BYTE PTR [rbx+0x5ee41baa],bl
   14000fd5c:	mov    ebp,0x1734236
   14000fd61:	rex.WRXB (bad) 
   14000fd63:	repz xor eax,0x4675501a
   14000fd69:	sbb    al,0x65
   14000fd6b:	cdq    
   14000fd6c:	fs jle 0x14000fcef
   14000fd6f:	movabs ds:0xb11241554beaa63e,al
   14000fd78:	mov    esi,0x908120bf
   14000fd7d:	fdiv   st(1),st
   14000fd7f:	sbb    eax,0x9216e748
   14000fd84:	movsxd esp,DWORD PTR [rdi]
   14000fd86:	sahf   
   14000fd87:	(bad)  
   14000fd88:	(bad)  
   14000fd89:	pause  
   14000fd8b:	add    BYTE PTR [rax+0x20],cl
   14000fd8e:	push   ax
   14000fd90:	(bad)  
   14000fd91:	rex.WX (bad) 
   14000fd93:	(bad)  
   14000fd94:	dec    DWORD PTR [rcx]
   14000fd96:	jmp    0x19036daba
   14000fd9b:	sbb    eax,0x61d69805
   14000fda0:	fcmovnu st,st(2)
   14000fda2:	mov    ah,0x3d
   14000fda4:	rol    dh,cl
   14000fda6:	jo     0x14000fd99
   14000fda8:	fild   QWORD PTR [rdi]
   14000fdaa:	sbb    al,0x50
   14000fdac:	mov    eax,0x654c9a56
   14000fdb1:	mov    DWORD PTR [rbx-0x45],eax
   14000fdb4:	in     al,0xb
   14000fdb6:	rex.WRB stos BYTE PTR es:[rdi],al
   14000fdb8:	pop    rbp
   14000fdb9:	imul   ebp,edi,0xc7d6627e
   14000fdbf:	outs   dx,DWORD PTR ds:[rsi]
   14000fdc0:	sti    
   14000fdc1:	mov    esi,0x855b0861
   14000fdc6:	sbb    al,0x80
   14000fdc8:	mov    dh,0x7e
   14000fdca:	(bad)  
   14000fdcb:	rex.WXB scas rax,QWORD PTR es:[rdi]
   14000fdcd:	pop    rax
   14000fdce:	and    DWORD PTR [rax+0x5f],ebp
   14000fdd1:	mov    bl,0x21
   14000fdd3:	or     ebp,edi
   14000fdd5:	rex.WX imul BYTE PTR [ecx]
   14000fdd9:	scas   al,BYTE PTR es:[rdi]
   14000fdda:	xchg   ebp,eax
   14000fddb:	and    al,0x18
   14000fddd:	jg     0x14000fdc5
   14000fddf:	mul    DWORD PTR [rbp-0xd]
   14000fde2:	push   rdi
   14000fde3:	fisubr WORD PTR [rcx]
   14000fde5:	out    0xc4,al
   14000fde7:	add    eax,DWORD PTR [rsi-0x1f]
   14000fdea:	retf   0x5565
   14000fded:	sahf   
   14000fdee:	jge    0x14000fe2b
   14000fdf0:	div    BYTE PTR [rsi-0x2]
   14000fdf3:	(bad)  
   14000fdf4:	xor    ah,bl
   14000fdf6:	jo     0x14000fe0b
   14000fdf8:	js     0x14000fe66
   14000fdfa:	(bad)  
   14000fdfb:	pop    rax
   14000fdfc:	jmp    0x14000fd8d
   14000fdfe:	icebp  
   14000fdff:	data16 rex.WRB movabs r11,0x71ca1a3417305f66
   14000fe0a:	push   0xffffffffffffffaf
   14000fe0c:	mov    edx,0xbc8368d0
   14000fe11:	ss (bad) 
   14000fe13:	cdq    
   14000fe14:	and    esp,ebp
   14000fe16:	not    DWORD PTR [rdi-0x32]
   14000fe19:	pop    rax
   14000fe1a:	out    dx,eax
   14000fe1b:	rex.RX
   14000fe1c:	rex je 0x14000fdfa
   14000fe1f:	cld    
   14000fe20:	cmc    
   14000fe21:	(bad)  
   14000fe22:	cmp    BYTE PTR [rsi+0x5],dl
   14000fe25:	(bad)  
   14000fe26:	cmp    DWORD PTR [rsi+0x76],edi
   14000fe29:	mov    edx,?
   14000fe2b:	adc    cl,BYTE PTR [rdx]
   14000fe2d:	ss (bad) 
   14000fe2f:	hlt    
   14000fe30:	(bad)  
   14000fe31:	ins    DWORD PTR es:[rdi],dx
   14000fe32:	mov    dl,0x30
   14000fe34:	outs   dx,DWORD PTR ds:[rsi]
   14000fe35:	mov    DWORD PTR [rbx+0x53bdbae6],edx
   14000fe3b:	mov    eax,0x4fccfb76
   14000fe40:	xchg   ebx,eax
   14000fe41:	fwait
   14000fe42:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fe43:	pop    rdi
   14000fe44:	mov    dh,0xde
   14000fe46:	pop    rdi
   14000fe47:	fucom  st(0)
   14000fe49:	test   ebx,eax
   14000fe4b:	call   0x142ebe723
   14000fe50:	rex push rsp
   14000fe52:	out    0xbf,al
   14000fe54:	cli    
   14000fe55:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fe56:	out    0xf2,al
   14000fe58:	lahf   
   14000fe59:	pop    rbp
   14000fe5a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fe5b:	add    BYTE PTR [rdi+rdi*2-0x17],ch
   14000fe5f:	xchg   ebx,eax
   14000fe60:	test   BYTE PTR [rbx-0x68e882c9],r10b
   14000fe67:	rex.WB popf 
   14000fe69:	(bad)  
   14000fe6a:	movabs al,ds:0x369b2be7c5f714b1
   14000fe73:	mov    edx,0x6c38e551
   14000fe78:	test   eax,0x1be981bf
   14000fe7d:	fcmovb st,st(1)
   14000fe7f:	repz rex or edx,eax
   14000fe83:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000fe85:	mov    cl,0xf6
   14000fe87:	ficomp WORD PTR [rdi]
   14000fe89:	sub    ebp,ebp
   14000fe8b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fe8c:	jle    0x14000fe19
   14000fe8e:	test   eax,0xf189fa1c
   14000fe93:	(bad)  
   14000fe94:	cwde   
   14000fe95:	fistp  DWORD PTR [rdx-0x60]
   14000fe98:	sbb    BYTE PTR [rcx-0x79],al
   14000fe9b:	sbb    ebp,DWORD PTR [rsi]
   14000fe9d:	cdq    
   14000fe9e:	(bad)  
   14000fe9f:	fild   QWORD PTR [rdx+0x2556740b]
   14000fea5:	mov    edx,0x29b07ad0
   14000feaa:	imul   DWORD PTR [rcx-0x16164862]
   14000feb0:	outs   dx,DWORD PTR ds:[rsi]
   14000feb1:	int3   
   14000feb2:	mov    esi,0x6fad48d4
   14000feb7:	cmp    edi,edi
   14000feb9:	pop    rdx
   14000feba:	jge    0x14000ff11
   14000febc:	int    0xf8
   14000febe:	mov    ebx,DWORD PTR [rax-0x3f91a861]
   14000fec4:	loop   0x14000feb3
   14000fec6:	scas   eax,DWORD PTR es:[rdi]
   14000fec7:	leave  
   14000fec8:	repnz movabs ds:0x597571c9f57e2f90,al
   14000fed2:	es cwde 
   14000fed4:	sub    al,0xb3
   14000fed6:	jmp    0x1a9ca619d
   14000fedb:	scas   eax,DWORD PTR es:[rdi]
   14000fedc:	rex.WX inc BYTE PTR [rcx-0x15]
   14000fee0:	mov    dl,0xdb
   14000fee2:	jle    0x14000ff09
   14000fee4:	ins    DWORD PTR es:[rdi],dx
   14000fee5:	movabs eax,ds:0x7afb4eb9db5ae531
   14000feee:	(bad)  
   14000feef:	rex.R jmp 0x1671c5b04
   14000fef5:	(bad)  
   14000fef6:	rex.WR test BYTE PTR [rax+0x48],r9b
   14000fefa:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fefc:	cmp    edx,ebx
   14000fefe:	(bad)  
   14000feff:	rex
   14000ff00:	xor    eax,DWORD PTR gs:[rdx-0x66a500b7]
   14000ff07:	out    dx,al
   14000ff08:	jp     0x14000ff04
   14000ff0a:	shl    BYTE PTR [rdi-0xe1f819],1
   14000ff10:	repz or al,0x68
   14000ff13:	stos   BYTE PTR es:[rdi],al
   14000ff14:	mov    cl,0xe1
   14000ff16:	mov    eax,es
   14000ff18:	lock sar DWORD PTR [rbp+0x6b],1
   14000ff1c:	adc    esi,DWORD PTR [rbp+0x4ad25f11]
   14000ff22:	fld    TBYTE PTR [rax+0x44]
   14000ff25:	(bad)  
   14000ff26:	scas   al,BYTE PTR es:[rdi]
   14000ff27:	lock adc BYTE PTR [rdi+0x6f],bl
   14000ff2b:	leave  
   14000ff2c:	mov    al,0xf5
   14000ff2e:	xchg   edi,eax
   14000ff2f:	out    dx,eax
   14000ff30:	mov    cl,0xf2
   14000ff32:	loopne 0x14000ff3b
   14000ff34:	enter  0xc314,0x44
   14000ff38:	mov    DWORD PTR [rbp-0x11],ebx
   14000ff3b:	test   al,0xf8
   14000ff3d:	cmp    rax,QWORD PTR [r13-0xbce2fd1]
   14000ff44:	mov    edi,0x86dbefbd
   14000ff49:	cwde   
   14000ff4a:	mov    esi,0xc44f9b6f
   14000ff4f:	jno    0x14000ff9e
   14000ff51:	scas   al,BYTE PTR es:[rdi]
   14000ff52:	push   rbp
   14000ff53:	sbb    eax,DWORD PTR [rdx-0x6c]
   14000ff56:	clc    
   14000ff57:	xor    al,0x41
   14000ff59:	ins    DWORD PTR es:[rdi],dx
   14000ff5a:	pop    rbp
   14000ff5b:	sub    al,0x30
   14000ff5d:	mov    cl,0x56
   14000ff5f:	jmp    0x14000ff91
   14000ff61:	ss (bad) 
   14000ff63:	(bad)  
   14000ff64:	ins    BYTE PTR es:[rdi],dx
   14000ff65:	repnz push rdx
   14000ff67:	mov    ebx,0xa7d0bb7d
   14000ff6c:	bnd ja 0x14000ffee
   14000ff6f:	test   al,0x54
   14000ff71:	nop
   14000ff72:	stc    
   14000ff73:	(bad)  
   14000ff75:	jrcxz  0x14000ffd2
   14000ff77:	mov    ch,0x89
   14000ff79:	rex.B retf 0xf9ce
   14000ff7d:	(bad)  
   14000ff7e:	(bad)  
   14000ff80:	(bad)  
   14000ff81:	rex.WB
   14000ff82:	sar    DWORD PTR es:[rdx-0x4b],1
   14000ff86:	xlat   BYTE PTR ds:[rbx]
   14000ff87:	out    0x46,eax
   14000ff89:	fisubr DWORD PTR [rdx+0x17]
   14000ff8c:	xor    BYTE PTR [rcx+0x48],bl
   14000ff8f:	push   0x42fc0cbb
   14000ff94:	movsxd esi,esp
   14000ff96:	imul   esi,DWORD PTR [rbp+rbp*1+0x4c],0x163f9080
   14000ff9e:	rex.WR or BYTE PTR [rdx+0x1b],0x98
   14000ffa3:	cmp    al,0xb2
   14000ffa5:	mov    eax,eax
   14000ffa7:	jns    0x140010018
   14000ffa9:	icebp  
   14000ffaa:	ret    
   14000ffab:	rex.WR rcl BYTE PTR [rdi+0x5f],0xf9
   14000ffb0:	and    eax,DWORD PTR [rbp+0x35]
   14000ffb3:	(bad)  
   14000ffb4:	pop    rbx
   14000ffb5:	adc    bh,BYTE PTR [rsi-0x3e]
   14000ffb8:	xchg   DWORD PTR [rax],edx
   14000ffba:	or     DWORD PTR [rbx+0x0],eax
   14000ffbd:	mov    esi,0xa73f90aa
   14000ffc2:	vunpckhps ymm14,ymm15,YMMWORD PTR [rax-0x4c]
   14000ffc7:	xchg   ecx,esp
   14000ffc9:	push   rbp
   14000ffca:	sbb    cl,BYTE PTR [rbx]
   14000ffcc:	jb     0x14000ffb4
   14000ffce:	adc    DWORD PTR [rbp+rdi*4+0x7eac47e7],ebp
   14000ffd5:	out    dx,al
   14000ffd6:	jge    0x14000ff5e
   14000ffd8:	mov    dl,BYTE PTR [rcx]
   14000ffda:	sbb    eax,0xffffffdd
   14000ffdd:	fidiv  DWORD PTR [rbx]
   14000ffdf:	mov    ah,BYTE PTR ds:[rcx]
   14000ffe2:	je     0x14000ff98
   14000ffe4:	or     DWORD PTR [rsi+rsi*1-0x4bde1c60],ecx
   14000ffeb:	sub    al,0x10
   14000ffed:	push   rdx
   14000ffee:	jnp    0x14001005b
   14000fff0:	movabs ds:0xc686ae0d88c0fdbc,eax
   14000fff9:	add    al,0xa0
   14000fffb:	xchg   ecx,eax
   14000fffc:	int    0xd7
   14000fffe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ffff:	sub    edi,DWORD PTR [rbx+0x40a1093e]
   140010005:	js     0x14000ffce
   140010007:	imul   edi,ebp,0x7f2dec89
   14001000d:	mov    ebp,0xd72187d0
   140010012:	push   rdx
   140010013:	xor    DWORD PTR [rax-0x3],edi
   140010016:	fisttp DWORD PTR [rax]
   140010018:	push   rax
   140010019:	jl     0x14001000c
   14001001b:	call   0xf5413d11
   140010020:	adc    al,BYTE PTR [rcx-0x62db32d]
   140010026:	(bad)
   140010029:	jge    0x14001004c
   14001002b:	mov    ah,0xaa
   14001002d:	push   QWORD PTR [rbp*1+0xafbff12]
   140010034:	(bad)  
   140010035:	(bad)  
   140010036:	fidiv  DWORD PTR [rbx+0x5c]
   140010039:	jle    0x14001002e
   14001003b:	(bad)  
   14001003c:	sbb    DWORD PTR [rdi-0x18],0xffffffd2
   140010040:	(bad)  
   140010041:	mov    eax,0x89404efa
   140010046:	ds push rax
   140010048:	adc    BYTE PTR [rdx+rcx*2],0x55
   14001004c:	mov    dh,0x2a
   14001004e:	ficomp DWORD PTR [rdx+0x40]
   140010051:	xchg   ebx,eax
   140010052:	imul   DWORD PTR [rcx+rcx*2-0x70d8d5d1]
   140010059:	xchg   ebp,eax
   14001005a:	mov    ebp,0xdecf5b95
   14001005f:	repnz xchg esi,eax
   140010061:	jl     0x140010062
   140010063:	xor    DWORD PTR [rdi-0x5adec7fb],esp
   140010069:	or     eax,0xd2ac5e27
   14001006e:	(bad)  
   14001006f:	(bad)  
   140010070:	add    DWORD PTR [rdx+0x7b6da579],ebp
   140010076:	push   rsp
   140010077:	fcmovb st,st(3)
   140010079:	mov    ecx,0xf2fd9a47
   14001007e:	jne    0x140010096
   140010080:	cli    
   140010081:	cmp    bl,BYTE PTR [rdx-0x39]
   140010084:	(bad)  
   140010085:	cmp    eax,0x43d25ebf
   14001008a:	(bad)  
   14001008b:	rex.WX or al,0x91
   14001008e:	rex.B test al,0x2b
   140010091:	pop    rcx
   140010092:	gs icebp 
   140010094:	adc    eax,0x9f9ec66e
   140010099:	movabs ds:0x9a00335a96e496ef,eax
   1400100a2:	or     eax,0xdf4bdad4
   1400100a7:	jge    0x14001006c
   1400100a9:	cli    
   1400100aa:	addr32 popf 
   1400100ac:	adc    eax,0xb0d7dad9
   1400100b1:	fwait
   1400100b2:	mov    edx,0xbc0ab181
   1400100b7:	clc    
   1400100b8:	call   FWORD PTR [rbx]
   1400100ba:	ds add eax,0xdd7d6d7f
   1400100c0:	cmp    ecx,DWORD PTR [rdx+0x4a]
   1400100c3:	xor    esi,ebx
   1400100c5:	in     eax,0xc7
   1400100c7:	rex.WRXB or rax,0x6d0c6d2f
   1400100cd:	jne    0x140010143
   1400100cf:	(bad)  
   1400100d0:	(bad)  
   1400100d1:	hlt    
   1400100d2:	out    0x6d,al
   1400100d4:	mov    dh,0xb4
   1400100d6:	pop    rsp
   1400100d7:	xchg   edx,eax
   1400100d8:	rex.WB add rax,0xffffffffcbedbcd1
   1400100de:	loopne 0x1400100b1
   1400100e0:	mov    bl,0xa2
   1400100e2:	xor    rsp,QWORD PTR [r10+0x713027db]
   1400100e9:	fimul  WORD PTR [rbx]
   1400100eb:	(bad)  
   1400100ec:	iret   
   1400100ed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400100ee:	rcl    ch,cl
   1400100f0:	(bad)  
   1400100f1:	add    BYTE PTR [rax],bh
   1400100f3:	mov    edx,0x3a6fc567
   1400100f8:	adc    eax,0x40ce9b5a
   1400100fd:	add    eax,0xf83a790
   140010102:	xor    eax,DWORD PTR [rcx]
   140010104:	(bad)  
   140010105:	mov    ebp,0xc1145ffa
   14001010a:	xor    DWORD PTR [rip+0x547554a4],edx        # 0x1947655b4
   140010110:	loopne 0x14001009d
   140010112:	or     BYTE PTR [rdx+rbx*2],cl
   140010115:	xchg   ecx,eax
   140010116:	scas   al,BYTE PTR es:[rdi]
   140010117:	pop    rdx
   140010118:	and    al,BYTE PTR [rsi-0x4b7b6e61]
   14001011e:	pop    rbx
   14001011f:	stos   DWORD PTR es:[rdi],eax
   140010120:	sbb    eax,0x26bf2175
   140010125:	in     eax,dx
   140010126:	je     0x140010152
   140010128:	in     eax,0x8f
   14001012a:	jg     0x14001018a
   14001012c:	(bad)  
   14001012d:	push   rbx
   14001012f:	jg     0x14001019c
   140010131:	icebp  
   140010132:	loopne 0x1400100bb
   140010134:	pushf  
   140010135:	mov    edx,0x5404481f
   14001013a:	(bad)  
   14001013b:	(bad)  
   14001013c:	(bad)  
   14001013d:	fistp  QWORD PTR [rdx+0x237b43e4]
   140010143:	(bad)  
   140010144:	jrcxz  0x1400100fd
   140010146:	mov    dh,0x7e
   140010148:	rol    BYTE PTR [rsi-0x42],0x43
   14001014c:	call   0x14f8ae1fd
   140010151:	or     esp,DWORD PTR [rdi-0x624302a]
   140010157:	pop    rax
   140010158:	icebp  
   140010159:	neg    BYTE PTR [rax]
   14001015b:	rex.RXB add r8b,r14b
   14001015e:	(bad)  
   14001015f:	jmp    0xf4211338
   140010164:	xlat   BYTE PTR ds:[rbx]
   140010165:	push   0xffffffffea02f50c
   14001016a:	(bad)  
   14001016b:	movabs ds:0x9fe3e280a5df0ff7,al
   140010174:	(bad)  
   140010175:	cmp    cl,BYTE PTR [rdi+rsi*4]
   140010178:	jae    0x14001011b
   14001017a:	mov    edi,0xc5f9b24c
   14001017f:	and    ch,cl
   140010181:	iret   
   140010182:	pop    rcx
   140010183:	push   rax
   140010184:	stos   DWORD PTR es:[rdi],eax
   140010185:	ds rex.WB
   140010187:	rex.RXB cmp r12d,DWORD PTR [r13+0x3b]
   14001018b:	rex.XB mov r13b,0xc2
   14001018e:	mov    dl,0xaf
   140010190:	xchg   ecx,eax
   140010191:	xor    DWORD PTR [rbp-0xe],0xffffffe7
   140010195:	jbe    0x140010158
   140010197:	jrcxz  0x140010213
   140010199:	movabs ds:0x6ffbfa4aa406106b,eax
   1400101a2:	(bad)  
   1400101a3:	rex.B stos BYTE PTR es:[rdi],al
   1400101a5:	jge    0x14001016f
   1400101a7:	xchg   edi,eax
   1400101a8:	(bad)  
   1400101a9:	add    al,BYTE PTR [rsi+0x66]
   1400101ac:	jo     0x14001021a
   1400101ae:	rex.WRX
   1400101af:	rex.RX (bad) 
   1400101b1:	(bad)  
   1400101b3:	repnz lods eax,DWORD PTR ds:[rsi]
   1400101b5:	addr32 pop rsi
   1400101b7:	hlt    
   1400101b8:	(bad)  
   1400101b9:	(bad)  
   1400101ba:	fbld   TBYTE PTR [rbx-0x1cfcb011]
   1400101c0:	and    ch,BYTE PTR [rax+0x420f54b7]
   1400101c6:	(bad)  
   1400101c7:	push   rax
   1400101c8:	fnstsw WORD PTR [rcx-0x71244073]
   1400101ce:	mov    edi,0xdce60bfa
   1400101d3:	movabs ds:0xb6be0c31b5cb5759,eax
   1400101dc:	rex.B cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400101de:	movabs ds:0xec7a5a2ff9fe6c75,eax
   1400101e7:	pop    rsi
   1400101e8:	movsxd eax,DWORD PTR [rax]
   1400101ea:	movabs al,ds:0xcab85b7849d5f5b2
   1400101f3:	cmp    al,0xe3
   1400101f5:	and    DWORD PTR [rdx+rcx*1-0x41],edx
   1400101f9:	mov    ebp,0xafd319
   1400101fe:	xor    dl,cl
   140010200:	jrcxz  0x140010271
   140010202:	push   0x3e
   140010204:	sbb    eax,0x1ce88d9e
   140010209:	ja     0x14001020d
   14001020b:	push   0x30
   14001020d:	(bad)  
   14001020e:	out    0xf9,al
   140010210:	xor    eax,0x81bed670
   140010215:	loopne 0x14001027c
   140010217:	cdq    
   140010218:	mov    dh,0x6c
   14001021a:	ja     0x140010299
   14001021c:	lods   al,BYTE PTR ds:[rsi]
   14001021d:	add    ch,BYTE PTR [rdi+0x326567ff]
   140010223:	pop    rax
   140010224:	movabs rsi,0x6b0e6d2e8d4ec74
   14001022e:	push   rbp
   14001022f:	movsxd esi,DWORD PTR [rcx+rbp*8]
   140010232:	int    0xd9
   140010234:	ins    BYTE PTR es:[rdi],dx
   140010235:	imul   edi,DWORD PTR [rcx-0x96cdb1c],0xefae85f4
   14001023f:	addr32 rex.WXB iretq 
   140010242:	push   rbp
   140010243:	cli    
   140010244:	ja     0x1400101e3
   140010246:	mov    edi,0x27d71dbd
   14001024b:	pop    rbp
   14001024c:	mov    bl,0x84
   14001024e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001024f:	fisubr DWORD PTR [rdx]
   140010251:	add    eax,0x3d55d440
   140010256:	mov    dl,0x71
   140010258:	fs cmp al,0x20
   14001025b:	rex.RX
   14001025c:	data16 lock (bad) 
   14001025f:	es ret 0x7713
   140010263:	dec    ebx
   140010265:	pop    rsp
   140010266:	mov    dl,0x79
   140010268:	jg     0x1400101f3
   14001026a:	(bad)  
   14001026b:	mov    ecx,0xb1b50ac3
   140010270:	out    0x3f,eax
   140010272:	mov    dh,0xef
   140010274:	popf   
   140010275:	ficom  DWORD PTR [rcx-0x23]
   140010278:	(bad)  [rbx+0x0]
   14001027b:	and    DWORD PTR [rax+rbp*4-0x373c8740],esp
   140010282:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010283:	xor    edx,DWORD PTR [rbx+0x1996994d]
   140010289:	imul   DWORD PTR [rcx+rbp*1]
   14001028c:	push   rdx
   14001028e:	cmp    eax,0xef2bf9b2
   140010293:	adc    al,0x7a
   140010295:	hlt    
   140010296:	pop    rsi
   140010297:	mov    bh,0xc0
   140010299:	xor    al,0xf9
   14001029b:	(bad)  
   14001029c:	jl     0x1400102c0
   14001029e:	rex.WRX int 0x1f
   1400102a1:	scas   al,BYTE PTR es:[rdi]
   1400102a2:	rex.B (bad) 
   1400102a4:	cs mov eax,0xe2413d0a
   1400102aa:	(bad)  
   1400102ab:	out    0x6f,al
   1400102ad:	rex.WB
   1400102ae:	repz push 0xffffffffffffffca
   1400102b1:	outs   dx,BYTE PTR ds:[rsi]
   1400102b2:	xchg   ebp,eax
   1400102b3:	repnz pop rsp
   1400102b5:	ja     0x140010312
   1400102b7:	gs mov edi,0xfd7524b7
   1400102bd:	shr    BYTE PTR [rax+0x1534082d],1
   1400102c3:	mov    DWORD PTR [rax+0x4c],esi
   1400102c6:	and    eax,0xa893abe9
   1400102cb:	rol    DWORD PTR [rsi],1
   1400102cd:	or     eax,0x175505b9
   1400102d2:	jns    0x140010281
   1400102d4:	movabs ds:0xcdfc4fff4bcc88bf,eax
   1400102dd:	and    ebx,DWORD PTR [rbx+0x4d499b75]
   1400102e3:	xchg   edx,eax
   1400102e4:	rex.WX mov sil,0xb0
   1400102e7:	in     al,0xa4
   1400102e9:	(bad)  
   1400102ea:	sbb    ebp,DWORD PTR [rbp-0x80]
   1400102ed:	imul   eax,DWORD PTR [rdi-0x16d24d3e],0xad4e9d5f
   1400102f7:	mov    edi,0x22ba0f3b
   1400102fc:	xor    eax,0x502fc57c
   140010301:	jmp    0xcccc5f15
   140010306:	(bad)  
   140010307:	or     ch,dh
   140010309:	rex.RB xchg r13d,eax
   14001030b:	or     ecx,0x80bc6e8e
   140010311:	push   0xffffffffff716f0c
   140010316:	pop    rax
   140010317:	rex.B leave 
   140010319:	out    0x24,eax
   14001031b:	pop    rbx
   14001031c:	(bad)  
   14001031d:	popf   
   14001031e:	jl     0x1400102f9
   140010320:	jl     0xdfd49851
   140010326:	(bad)  
   140010327:	lock jg 0x14001036f
   14001032a:	rcr    BYTE PTR [rdi],cl
   14001032c:	in     eax,dx
   14001032d:	jmp    0x140010385
   14001032f:	out    dx,al
   140010330:	enter  0x14a6,0x5
   140010334:	and    dl,0xa1
   140010337:	(bad)  
   140010338:	rex.WR (bad) 
   14001033a:	add    DWORD PTR [rbp-0x61630f63],edx
   140010340:	sbb    BYTE PTR [rdx-0x17],dh
   140010343:	xor    al,0xd6
   140010345:	jg     0x14001033a
   140010347:	pop    rdi
   140010348:	fnclex 
   14001034a:	rex.WRXB jg 0x1400102eb
   14001034d:	adc    DWORD PTR [rbx-0x730f1231],0x3f
   140010354:	jbe    0x140010340
   140010356:	jle    0x140010380
   140010358:	int    0xe5
   14001035a:	(bad)  
   14001035b:	fnsave [rbx+0xbaf9b2e]
   140010361:	jl     0x140010365
   140010363:	or     BYTE PTR [rax-0x4d],ch
   140010366:	jg     0x1400103ca
   140010368:	out    0x4,al
   14001036a:	mov    esp,0x3b6b1479
   14001036f:	(bad)  
   140010371:	sub    eax,DWORD PTR [rcx+0x5b]
   140010374:	imul   ecx,DWORD PTR [rdx-0x6efd4610],0x66
   14001037b:	(bad)
   14001037f:	lea    ebx,[rbx+rdi*4+0x4]
   140010383:	add    bh,ch
   140010385:	xor    DWORD PTR [rdi+0x79],0xffffffe9
   140010389:	jg     0x140010405
   14001038b:	js     0x1400103f6
   14001038d:	(bad)  
   14001038e:	push   rbp
   14001038f:	(bad)  
   140010390:	push   rbp
   140010391:	jb     0x140010349
   140010393:	jg     0x140010367
   140010395:	pop    rdi
   140010396:	mov    al,0xd9
   140010398:	fcom   QWORD PTR [rdx+0x49]
   14001039b:	rex.WB cmp spl,BYTE PTR [r9]
   14001039e:	std    
   14001039f:	mov    ch,0x75
   1400103a1:	frstor [rdi-0x3d]
   1400103a4:	cld    
   1400103a5:	ins    DWORD PTR es:[rdi],dx
   1400103a6:	rex.WRB scas al,BYTE PTR es:[rdi]
   1400103a8:	xchg   ebx,eax
   1400103a9:	and    DWORD PTR [rdi+0x367c17d4],0xd1217fd7
   1400103b3:	push   rbp
   1400103b4:	add    DWORD PTR [rax-0x79948137],eax
   1400103ba:	jnp    0x1400103e6
   1400103bc:	mov    ecx,0x560ecdb5
   1400103c1:	add    bl,ch
   1400103c3:	cmp    al,0xf8
   1400103c5:	xor    BYTE PTR [rcx],dl
   1400103c7:	rex.RX out 0xee,eax
   1400103ca:	jl     0x140010407
   1400103cc:	mov    al,BYTE PTR [rbp-0x88b4a83]
   1400103d2:	and    esi,DWORD PTR [rbx]
   1400103d4:	out    0xd5,al
   1400103d6:	leave  
   1400103d7:	or     al,0xc0
   1400103d9:	pop    rdx
   1400103da:	push   0x35
   1400103dc:	push   0xffffffffffffffdb
   1400103de:	push   rbp
   1400103df:	push   0x2e
   1400103e1:	(bad)  
   1400103e2:	cld    
   1400103e3:	mov    ecx,0x950e6e3f
   1400103e8:	(bad)  
   1400103e9:	(bad)  
   1400103ea:	sub    eax,0xb49b7c35
   1400103ef:	cmc    
   1400103f0:	test   eax,0xbf9bb3df
   1400103f5:	icebp  
   1400103f6:	scas   eax,DWORD PTR es:[rdi]
   1400103f7:	test   BYTE PTR [rdi-0x6c62b82],bl
   1400103fd:	or     dh,bl
   1400103ff:	mov    ebx,0x2de3025f
   140010404:	(bad)  
   140010405:	imul   esp,DWORD PTR [rdi-0x15],0xe5bc7412
   14001040c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001040d:	mov    esi,0xb5fbf954
   140010412:	xlat   BYTE PTR ds:[rbx]
   140010413:	mov    esi,0xb9277d29
   140010418:	mov    al,0xd9
   14001041a:	(bad)  
   14001041b:	cmp    bh,BYTE PTR [rdi]
   14001041d:	movabs ds:0x95010035d10aa73e,al
   140010426:	mov    ah,0x7
   140010428:	mov    esp,0x69943ef7
   14001042d:	mov    DWORD PTR [rbp+0x35658a07],esi
   140010433:	rex.RB out 0x51,eax
   140010436:	adc    esi,DWORD PTR [rax+0x56]
   140010439:	outs   dx,BYTE PTR ds:[rsi]
   14001043a:	rex imul BYTE PTR [rbp+0x6f]
   14001043e:	(bad)  
   14001043f:	test   al,0xe2
   140010441:	movsxd ebx,DWORD PTR [rdi-0x87bc5c1]
   140010447:	or     eax,0xda4d4880
   14001044c:	xchg   ebx,eax
   14001044d:	ins    BYTE PTR es:[rdi],dx
   14001044e:	jno    0x140010409
   140010450:	xor    BYTE PTR [rbx-0x2da569f5],cl
   140010456:	mov    edi,0x2b3ca8ad
   14001045b:	out    0x8f,al
   14001045d:	test   eax,0xead136c3
   140010462:	mov    edi,0x18bdbf2b
   140010467:	test   BYTE PTR [rsi+0xa17a509],ah
   14001046d:	pop    rbp
   14001046e:	ins    DWORD PTR es:[rdi],dx
   14001046f:	or     eax,0xb53dc340
   140010474:	xor    eax,0x1d4af377
   140010479:	(bad)  
   14001047b:	add    al,BYTE PTR [rsi+0x48]
   14001047e:	cs (bad) 
   140010480:	xchg   ecx,eax
   140010481:	(bad)  
   140010482:	adc    eax,0xfa3c924c
   140010487:	ins    DWORD PTR es:[rdi],dx
   140010488:	(bad)  
   140010489:	xchg   ebp,eax
   14001048a:	add    ebx,ebp
   14001048c:	xchg   ecx,eax
   14001048d:	(bad)  
   14001048e:	rex.R push rdx
   140010490:	fdivp  st(5),st
   140010492:	sbb    DWORD PTR [rdx+rbx*1+0x504dc426],esp
   140010499:	movabs ds:0xe27da9abf67c1555,eax
   1400104a2:	(bad)  
   1400104a3:	push   rsi
   1400104a4:	jmp    0x1400104e9
   1400104a6:	fidivr WORD PTR [rbp+0x5b]
   1400104a9:	rex.WRX
   1400104aa:	rex.WRB (bad) 
   1400104ac:	cmp    ebp,edi
   1400104ae:	or     BYTE PTR [rsi+0x7f],dl
   1400104b1:	repz pop rbp
   1400104b3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400104b4:	jle    0x1400104b0
   1400104b6:	mov    bh,0xc
   1400104b8:	xchg   edi,eax
   1400104b9:	rex.XB push r15
   1400104bb:	retf   
   1400104bc:	es test dh,ch
   1400104bf:	rex.X and esi,ecx
   1400104c2:	lods   eax,DWORD PTR ds:[rsi]
   1400104c3:	mov    edx,DWORD PTR [rax-0x1cb0451f]
   1400104c9:	adc    eax,0x375d3550
   1400104ce:	rex.X mov cl,0x98
   1400104d1:	jmp    0x17035ddb7
   1400104d6:	je     0x140010513
   1400104d8:	xchg   esp,eax
   1400104d9:	xlat   BYTE PTR ds:[rbx]
   1400104da:	lock add eax,DWORD PTR [rdx+rdi*8-0x3a47ea04]
   1400104e2:	xchg   edi,eax
   1400104e3:	(bad)  
   1400104e4:	cli    
   1400104e5:	pop    rdx
   1400104e6:	push   rcx
   1400104e7:	pop    rdi
   1400104e8:	test   edx,edi
   1400104ea:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400104eb:	(bad)  
   1400104ec:	cmp    esi,DWORD PTR [rdx+0x3218a7aa]
   1400104f2:	add    ecx,edx
   1400104f4:	(bad)  
   1400104f5:	xchg   esi,eax
   1400104f6:	rex.X mov DWORD PTR es:[rdi],edi
   1400104fa:	lock out dx,al
   1400104fc:	shl    BYTE PTR [rcx+rbp*1],cl
   1400104ff:	(bad)  
   140010501:	lock mov cl,0x8d
   140010504:	mov    ch,0xcd
   140010506:	movabs eax,ds:0xdcc92a49ca81d9f5
   14001050f:	push   rdx
   140010510:	cdq    
   140010511:	in     eax,dx
   140010512:	fcomp  DWORD PTR [rcx+0x70]
   140010515:	xchg   edx,eax
   140010516:	xor    eax,0x12b8fe16
   14001051b:	lods   al,BYTE PTR ds:[rsi]
   14001051c:	outs   dx,BYTE PTR ds:[rsi]
   14001051d:	rex.WXB jp 0x140010567
   140010520:	out    dx,al
   140010521:	xchg   DWORD PTR [rdx+0x1c],edi
   140010524:	rex.RB push r9
   140010526:	mov    gs,WORD PTR [rbp+0x72]
   140010529:	outs   dx,DWORD PTR ds:[rsi]
   14001052a:	fnstsw WORD PTR [rbp-0x7c]
   14001052d:	sub    bh,BYTE PTR [rcx]
   14001052f:	jmp    0xdefacbb9
   140010534:	scas   al,BYTE PTR es:[rdi]
   140010535:	sbb    al,BYTE PTR [rax]
   140010537:	test   cl,dh
   140010539:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001053a:	pop    rbp
   14001053b:	scas   eax,DWORD PTR es:[rdi]
   14001053c:	mov    cl,0x51
   14001053e:	mov    edx,0x3cd7fb77
   140010543:	movsxd eax,DWORD PTR [rdi]
   140010545:	(bad)  
   140010546:	adc    esi,eax
   140010548:	cli    
   140010549:	call   0x1a793b11e
   14001054e:	outs   dx,BYTE PTR ds:[rsi]
   14001054f:	dec    dh
   140010551:	rex.RX sub DWORD PTR [rdi],r15d
   140010554:	cmc    
   140010555:	cmc    
   140010556:	jmp    0x140010533
   140010558:	xor    DWORD PTR [rdi+0x3f],ebp
   14001055b:	(bad)  
   14001055c:	(bad)  
   14001055d:	imul   eax,DWORD PTR [rsi],0xffffffb5
   140010560:	imul   rbp,QWORD PTR [rbx-0xe4fff50],0xffffffffffffffc1
   140010568:	pop    rdi
   140010569:	mov    ch,BYTE PTR [rbx-0x2a]
   14001056c:	test   DWORD PTR [rbx],eax
   14001056e:	add    DWORD PTR [rbp-0x39189525],esi
   140010574:	rex.RXB (bad) 
   140010576:	jae    0x1400105b1
   140010578:	jl     0x140010569
   14001057a:	(bad)  
   14001057b:	and    bh,BYTE PTR [rcx]
   14001057d:	test   DWORD PTR [rax+0x52],0x3108c815
   140010584:	std    
   140010585:	icebp  
   140010586:	(bad)  
   140010587:	je     0x14001056c
   140010589:	and    dh,BYTE PTR [rbx+rsi*2+0x15]
   14001058d:	(bad)  
   14001058e:	pop    QWORD PTR [rcx-0x3f]
   140010591:	(bad)  
   140010592:	outs   dx,DWORD PTR ds:[rsi]
   140010593:	cmp    al,0x4
   140010595:	adc    BYTE PTR [rsi],ah
   140010597:	rex.WX push rsp
   140010599:	rex.WR sbb r11b,BYTE PTR [rdi+rdi*8-0x2e907de6]
   1400105a1:	xor    ebp,DWORD PTR [rdx-0x15]
   1400105a4:	hlt    
   1400105a5:	movabs ds:0xd26845ff88dfe09,rax
   1400105af:	xchg   BYTE PTR [rsi+0x64],al
   1400105b2:	(bad)  
   1400105b3:	mov    ecx,0xcc6ea47e
   1400105b8:	mov    esp,DWORD PTR [rdi+rdi*2+0x792f1bf8]
   1400105bf:	mov    ebp,0x9be8bdcc
   1400105c4:	int    0xda
   1400105c6:	out    0xd0,al
   1400105c8:	fdivrp st(7),st
   1400105ca:	loopne 0x14001057d
   1400105cc:	xchg   ecx,eax
   1400105cd:	(bad)  
   1400105ce:	adc    DWORD PTR [rip+0xffffffff93d64c33],eax        # 0xd3d75207
   1400105d4:	fdivrp st(2),st
   1400105d6:	mov    ?,WORD PTR [rcx+rcx*8]
   1400105d9:	cli    
   1400105da:	xor    BYTE PTR ss:[rdi-0x78],bh
   1400105de:	or     DWORD PTR [rdi-0xb494bb3],esi
   1400105e4:	(bad)  
   1400105e6:	mov    al,0x68
   1400105e8:	rex.W clc 
   1400105ea:	out    dx,al
   1400105eb:	and    ebp,esi
   1400105ed:	pushf  
   1400105ee:	clc    
   1400105ef:	mov    eax,0xbb4c39a5
   1400105f4:	(bad)  
   1400105f5:	data16 outs dx,BYTE PTR ds:[rsi]
   1400105f7:	icebp  
   1400105f8:	xchg   ebp,eax
   1400105f9:	xor    ebx,DWORD PTR [rbx+0x2dcb9f27]
   1400105ff:	scas   al,BYTE PTR es:[rdi]
   140010600:	adc    eax,0x8d59d35d
   140010605:	movabs eax,ds:0xf9a3b6a803ed73ee
   14001060e:	ja     0x1400105c4
   140010610:	mov    ebp,0x1a9e6c25
   140010615:	and    eax,0x2700671f
   14001061a:	fdivp  st(0),st
   14001061c:	push   rbx
   14001061d:	nop
   14001061e:	(bad)  
   14001061f:	cmp    DWORD PTR [rdi+riz*1],eax
   140010622:	xchg   esi,eax
   140010623:	add    edx,DWORD PTR [rbx+0x2d620a66]
   140010629:	cmp    eax,0x6122ae15
   14001062e:	cmp    eax,0xb5382581
   140010633:	or     BYTE PTR [rbx+rsi*8],al
   140010636:	in     al,0x17
   140010638:	shl    cl,cl
   14001063a:	pop    rdi
   14001063b:	cld    
   14001063c:	jb     0x140010631
   14001063e:	jge    0x1400105c7
   140010640:	fdivr  DWORD PTR [rdx+rbx*2-0x9f5e4b4]
   140010647:	icebp  
   140010648:	iret   
   140010649:	(bad)  
   14001064a:	cmc    
   14001064b:	xlat   BYTE PTR ds:[rbx]
   14001064c:	jle    0x140010626
   14001064e:	shl    bh,cl
   140010650:	ficom  WORD PTR [rdi+0x549f3b04]
   140010656:	popf   
   140010657:	mov    edx,0xa5d0f9f
   14001065c:	out    dx,eax
   14001065d:	(bad)  
   14001065e:	and    eax,0xf5a6d0b7
   140010663:	leave  
   140010664:	cmp    al,0x41
   140010666:	(bad)  
   140010667:	(bad)  
   140010668:	imul   edx,DWORD PTR [rdx-0x68],0x1bd65874
   14001066f:	(bad)  
   140010670:	cmp    ebp,DWORD PTR [rax-0x452c3b1f]
   140010676:	(bad)  
   140010677:	sbb    esi,ebp
   140010679:	adc    ah,BYTE PTR [rdx-0x3b]
   14001067c:	and    bh,BYTE PTR [rdx-0x2a]
   14001067f:	jo     0x140010602
   140010681:	rcl    al,0x84
   140010684:	data16 lahf 
   140010686:	rex.R popf 
   140010688:	(bad)  
   140010689:	sub    DWORD PTR [rbp-0x37],ecx
   14001068c:	(bad)  
   14001068d:	fistp  WORD PTR [rdi+0x44]
   140010690:	out    dx,eax
   140010691:	popf   
   140010692:	inc    DWORD PTR [rdi-0x10ebd8]
   140010698:	(bad)  
   140010699:	sub    ebx,0xffffffa3
   14001069c:	mov    esp,0x304ab8f0
   1400106a1:	imul   ecx,DWORD PTR [rdi+0x7a],0xdef2bb4b
   1400106a8:	repnz rex.WX ror QWORD PTR [rcx+0x2a],0x8e
   1400106ae:	leave  
   1400106af:	sbb    ecx,ebp
   1400106b1:	(bad)  
   1400106b2:	cs ffreep st(1)
   1400106b5:	cld    
   1400106b6:	fneni(8087 only) 
   1400106b8:	fmul   QWORD PTR [rcx+0x7c]
   1400106bb:	movabs ds:0x510cfcba673f33e6,al
   1400106c4:	push   rcx
   1400106c5:	loopne 0x1400106a3
   1400106c7:	rex.RX mov ?,WORD PTR [rbx-0x7a39c695]
   1400106ce:	pop    rsp
   1400106cf:	outs   dx,BYTE PTR ds:[rsi]
   1400106d0:	imul   eax,ecx,0x555d1de7
   1400106d6:	add    al,dl
   1400106d8:	(bad)  
   1400106d9:	pop    rbp
   1400106da:	push   0xffffffffffffffad
   1400106dc:	gs rex.WRB (bad) 
   1400106df:	rcl    DWORD PTR [rdx-0x1f],cl
   1400106e2:	sar    dl,1
   1400106e4:	outs   dx,BYTE PTR ds:[rsi]
   1400106e5:	(bad)  
   1400106e6:	shl    BYTE PTR [rbx],0x5
   1400106e9:	lahf   
   1400106ea:	cmp    DWORD PTR [rbx],esi
   1400106ec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400106ed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400106ee:	xchg   ebx,eax
   1400106ef:	and    al,0xa3
   1400106f1:	(bad)  
   1400106f2:	fdivp  st(4),st
   1400106f4:	outs   dx,BYTE PTR ds:[rsi]
   1400106f5:	add    BYTE PTR [rbp-0x64bab52d],dh
   1400106fb:	(bad)  
   1400106fc:	xor    ch,bh
   1400106fe:	(bad)
   140010702:	imul   ebx,DWORD PTR [rbx-0x4c],0xe13332f9
   140010709:	cmp    al,0x7b
   14001070b:	iret   
   14001070c:	scas   eax,DWORD PTR es:[rdi]
   14001070d:	shr    al,cl
   14001070f:	(bad)  
   140010710:	(bad)  
   140010711:	cdq    
   140010712:	add    al,0x1
   140010714:	pop    rbx
   140010715:	rex.WRX test bpl,r12b
   140010718:	in     al,0xe2
   14001071a:	imul   ebp,DWORD PTR [rdi+rdi*4-0x2e359811],0x916ffbff
   140010725:	pop    rsp
   140010726:	cmp    ch,BYTE PTR [rcx-0x3e]
   140010729:	je     0x140010788
   14001072b:	xchg   edi,eax
   14001072c:	enter  0xe5b3,0xd5
   140010730:	std    
   140010731:	xor    eax,0x920d70e8
   140010736:	(bad)  
   140010737:	pop    rsp
   140010738:	mov    ch,0x1e
   14001073a:	xchg   ecx,eax
   14001073b:	jp     0x140010707
   14001073d:	out    dx,al
   14001073e:	and    al,0x27
   140010740:	and    BYTE PTR [rax],cl
   140010742:	(bad)  
   140010743:	(bad)  
   140010744:	add    BYTE PTR [rbp-0x5b6ac1b7],0xd7
   14001074b:	(bad)  
   14001074c:	rcl    edi,cl
   14001074e:	push   rbp
   14001074f:	lea    ebp,[rdx+0x6]
   140010752:	jo     0x140010723
   140010754:	sbb    eax,0x55750322
   140010759:	mov    ebp,0x6f83101a
   14001075e:	and    al,0xfe
   140010760:	mov    ah,0xa5
   140010762:	cld    
   140010763:	(bad)  
   140010764:	cli    
   140010765:	or     al,0xe2
   140010767:	je     0x1400107a3
   140010769:	test   DWORD PTR [rdx-0x1],eax
   14001076c:	leave  
   14001076d:	rex.WRXB (bad) 
   14001076f:	leave  
   140010770:	fcom   QWORD PTR [rdx-0x61b1387]
   140010776:	icebp  
   140010777:	jrcxz  0x1400107e0
   140010779:	sahf   
   14001077a:	jbe    0x1400107cf
   14001077c:	dec    BYTE PTR [rax]
   14001077e:	loopne 0x1400107a4
   140010780:	shl    DWORD PTR [rax+rsi*4+0x58],1
   140010784:	div    BYTE PTR [rdi-0x12]
   140010787:	retf   0xcd39
   14001078a:	rex.R popf 
   14001078c:	adc    eax,DWORD PTR [rdx-0x1d]
   14001078f:	not    ch
   140010791:	outs   dx,DWORD PTR ds:[rsi]
   140010792:	and    ebx,0x356687cb
   140010798:	mov    al,0x76
   14001079b:	test   eax,0xf9f5fccd
   1400107a0:	xchg   edi,eax
   1400107a1:	psraw  mm6,QWORD PTR [rsi]
   1400107a4:	(bad)  
   1400107a5:	pushf  
   1400107a6:	mov    dh,0xf7
   1400107a8:	xor    eax,0xc54bcdcf
   1400107ad:	test   eax,0x463631d5
   1400107b2:	xlat   BYTE PTR ds:[rbx]
   1400107b3:	adc    eax,0x957457df
   1400107b8:	repnz add dl,ah
   1400107bb:	sbb    BYTE PTR [rbx+rdx*1+0x74],0xe2
   1400107c0:	(bad)  
   1400107c1:	jle    0x140010779
   1400107c3:	xchg   ecx,eax
   1400107c4:	cmc    
   1400107c5:	jo     0x1400107b5
   1400107c7:	jrcxz  0x1400107b4
   1400107c9:	cmp    BYTE PTR [rbp-0x6d84b845],bh
   1400107cf:	rex.XB scas eax,DWORD PTR es:[rdi]
   1400107d1:	in     al,0xb3
   1400107d3:	(bad)  
   1400107d4:	jnp    0x1400107f1
   1400107d6:	idiv   BYTE PTR [rbp-0xf]
   1400107d9:	imul   ebx
   1400107db:	or     eax,DWORD PTR [rsi+0x1e]
   1400107de:	outs   dx,DWORD PTR ds:[rsi]
   1400107df:	xlat   BYTE PTR ds:[rbx]
   1400107e0:	xchg   edx,eax
   1400107e1:	push   rsi
   1400107e2:	cld    
   1400107e3:	cmp    ebx,DWORD PTR [rbx+rdx*2]
   1400107e6:	ins    DWORD PTR es:[rdi],dx
   1400107e7:	jae    0x140010804
   1400107e9:	mov    edx,ebp
   1400107eb:	mov    al,BYTE PTR [rdx-0x1b]
   1400107ee:	sti    
   1400107ef:	jle    0x140010783
   1400107f1:	cs ds je 0x140010804
   1400107f5:	xchg   esi,eax
   1400107f6:	mov    edi,0xaf047ff7
   1400107fb:	in     al,dx
   1400107fc:	scas   eax,DWORD PTR es:[rdi]
   1400107fd:	out    dx,al
   1400107fe:	scas   al,BYTE PTR es:[rdi]
   1400107ff:	ss (bad) 
   140010801:	and    DWORD PTR [rbp-0x14f38264],eax
   140010807:	idiv   esi
   140010809:	rex.B cdq 
   14001080b:	cmp    al,0xfe
   14001080d:	push   rdi
   14001080e:	or     DWORD PTR [rbx+0x54e44a26],ecx
   140010814:	jp     0x140010871
   140010816:	mov    edx,0xc72bdcc
   14001081b:	sub    eax,0x66d0b772
   140010820:	and    eax,0x466aa5f1
   140010825:	lods   al,BYTE PTR ds:[rsi]
   140010826:	mov    al,BYTE PTR [rdi-0x1754aa8a]
   14001082c:	sbb    BYTE PTR [rax+rbx*2+0x33],0x76
   140010831:	outs   dx,BYTE PTR ds:[rsi]
   140010832:	(bad)  
   140010833:	int3   
   140010834:	stos   DWORD PTR es:[rdi],eax
   140010835:	adc    DWORD PTR [rbx],edx
   140010837:	(bad)  
   140010838:	xlat   BYTE PTR ds:[rbx]
   140010839:	or     edi,esp
   14001083b:	push   rsi
   14001083c:	mov    ebp,0xed6ff14
   140010841:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010842:	lock addr32 push rsp
   140010845:	imul   DWORD PTR [rcx-0x2d713b09]
   14001084b:	push   rax
   14001084c:	push   0xffffffffffffffad
   14001084e:	cmp    al,bl
   140010850:	sub    DWORD PTR [rbx],0xffffffbf
   140010853:	(bad)  
   140010854:	int    0x32
   140010856:	ja     0x14001084f
   140010858:	ja     0x140010881
   14001085a:	movabs ds:0x55eb03e4f93fd0bc,eax
   140010863:	sbb    ebx,ecx
   140010865:	xchg   ebp,eax
   140010866:	cli    
   140010867:	out    dx,al
   140010868:	out    dx,eax
   140010869:	fdiv   DWORD PTR [rip+0xffffffff9673064e]        # 0xd6740ebd
   14001086f:	rex.WR jb 0x14001080b
   140010872:	(bad)  
   140010873:	lahf   
   140010874:	fsub   QWORD PTR [rsi+rdi*4-0x37]
   140010878:	(bad)  
   140010879:	pop    rsi
   14001087a:	sahf   
   14001087b:	movabs ds:0xddd793009a6c4976,al
   140010884:	(bad)  
   140010885:	mov    ch,0xfa
   140010887:	test   al,0xcd
   140010889:	cld    
   14001088a:	jmp    0x14001082f
   14001088c:	adc    cl,bh
   14001088e:	ins    BYTE PTR es:[rdi],dx
   14001088f:	xchg   ebp,eax
   140010890:	xchg   ebx,eax
   140010891:	xor    esp,DWORD PTR [rdi]
   140010893:	scas   eax,DWORD PTR es:[rdi]
   140010894:	and    edi,DWORD PTR [rdx+0x2c00f516]
   14001089a:	mov    QWORD PTR [r10],r8
   14001089d:	rex.R jrcxz 0x14001087f
   1400108a0:	int    0x77
   1400108a2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400108a3:	imul   ecx,ecx,0x8788441
   1400108a9:	adc    eax,0x2f17ec25
   1400108ae:	enter  0xebd6,0xf6
   1400108b2:	cdq    
   1400108b3:	test   DWORD PTR [rbx+0x58d7ffaf],ecx
   1400108b9:	cmp    DWORD PTR [rcx+0x3f],edi
   1400108bc:	mov    dl,0xf3
   1400108be:	(bad)  
   1400108bf:	cli    
   1400108c0:	mov    ebp,0x8e745bf5
   1400108c5:	sar    DWORD PTR [rdx-0x10],0xd7
   1400108c9:	test   eax,0xe9bd1c3
   1400108ce:	cmp    cl,BYTE PTR [rdx+0x7c390077]
   1400108d4:	and    BYTE PTR [rdi+rax*2-0x220f3e11],ah
   1400108db:	lahf   
   1400108dc:	sar    eax,0xe0
   1400108df:	sub    eax,DWORD PTR [rax+0x1795071d]
   1400108e5:	push   rsi
   1400108e6:	adc    al,0x6b
   1400108e8:	iret   
   1400108e9:	push   0xffffffffa209e17a
   1400108ee:	jl     0x1400108b8
   1400108f0:	rex.RX and eax,0xa59b8a81
   1400108f6:	push   rdi
   1400108f7:	mov    WORD PTR [rbp+0x32],?
   1400108fa:	pop    QWORD PTR [rip+0xffffffffe7abadc4]        # 0x127acb6c4
   140010900:	xchg   esi,eax
   140010901:	rcl    BYTE PTR [rsi-0x39],cl
   140010904:	cld    
   140010905:	xor    DWORD PTR [rdi],ecx
   140010907:	imul   eax,DWORD PTR [rsi+rdi*2],0xb55f0a91
   14001090e:	int    0x7b
   140010910:	in     al,dx
   140010911:	sub    ebp,edi
   140010913:	jge    0x14001094d
   140010915:	sub    eax,0xfe866676
   14001091a:	(bad)  
   14001091b:	sbb    dh,bl
   14001091d:	adc    eax,0xf95c12f4
   140010922:	in     eax,0xaa
   140010924:	inc    cl
   140010926:	test   BYTE PTR [rax-0x15],ch
   140010929:	rex.WRX adc BYTE PTR [rdx-0x224e5846],r9b
   140010930:	and    eax,DWORD PTR [rbp+0x1c7780aa]
   140010936:	rex.R test BYTE PTR [rsi-0x5af55f01],0xf7
   14001093e:	(bad)  
   140010940:	test   ebp,edx
   140010942:	xchg   ecx,eax
   140010943:	lahf   
   140010944:	out    dx,eax
   140010945:	scas   eax,DWORD PTR es:[rdi]
   140010946:	(bad)  
   140010947:	push   0xffffffffffffffb2
   140010949:	sahf   
   14001094a:	in     eax,dx
   14001094b:	(bad)  
   14001094c:	out    dx,eax
   14001094d:	(bad)  
   14001094e:	jnp    0x14001091b
   140010950:	sub    edi,DWORD PTR [rsi]
   140010952:	jmp    0x18d7487fe
   140010957:	ins    DWORD PTR es:[rdi],dx
   140010958:	scas   eax,DWORD PTR es:[rdi]
   140010959:	pop    rbx
   14001095a:	int    0x7e
   14001095c:	cs or  al,0x2b
   14001095f:	push   rbx
   140010960:	fcmovu st,st(6)
   140010962:	in     al,dx
   140010963:	mov    cl,0x6d
   140010965:	pop    rbp
   140010966:	push   0xffffffffffffffea
   140010968:	std    
   140010969:	or     edx,DWORD PTR [rcx-0x64]
   14001096c:	pop    rbx
   14001096d:	iret   
   14001096e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001096f:	in     al,dx
   140010970:	mov    ebp,0x22ae87e
   140010975:	rex cmp esp,DWORD PTR [rsi+0x55]
   140010979:	mov    ebp,0xb29a5510
   14001097e:	or     al,0xf4
   140010980:	adc    eax,0xdbe62040
   140010985:	mov    ch,0x31
   140010987:	in     al,dx
   140010988:	push   rdi
   140010989:	(bad)  
   14001098a:	push   rsp
   14001098b:	out    dx,al
   14001098c:	pop    rax
   14001098d:	rex.WB clc 
   14001098f:	icebp  
   140010990:	out    dx,eax
   140010991:	std    
   140010992:	adc    eax,0xdfbdf8bc
   140010997:	add    ecx,esi
   140010999:	(bad)  
   14001099a:	sbb    dh,bh
   14001099c:	cmc    
   14001099d:	movabs ds:0xaeb7dbbfb9670ab2,eax
   1400109a6:	mov    ecx,0x71951ac
   1400109ab:	and    dh,0x43
   1400109ae:	fs (bad) 
   1400109b0:	jg     0x1400109b8
   1400109b2:	cmp    BYTE PTR [rsi+0xaee2c14],ah
   1400109b8:	xor    ebp,DWORD PTR [rdx+0x7053b680]
   1400109be:	ret    0x7dbc
   1400109c1:	clc    
   1400109c2:	jnp    0x14001096c
   1400109c4:	or     al,BYTE PTR [rdx+0x6d]
   1400109c7:	ret    0xba58
   1400109ca:	push   rdi
   1400109cb:	mov    bh,0xf3
   1400109cd:	(bad)  
   1400109ce:	xor    al,0x55
   1400109d0:	mov    ebp,fs
   1400109d2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400109d3:	jno    0x140010a48
   1400109d5:	pop    rbx
   1400109d6:	shl    BYTE PTR [rax-0x5e],1
   1400109d9:	repz rcl DWORD PTR [rsi+rdx*8-0x2ad4ca2b],1
   1400109e1:	sub    BYTE PTR [rdx],0xd5
   1400109e4:	sahf   
   1400109e5:	pop    rdx
   1400109e6:	mov    DWORD PTR [rsi-0x62876b2],0x1004f86b
   1400109f0:	imul   edx,DWORD PTR [rcx],0xaca831ae
   1400109f6:	(bad)  
   1400109f7:	(bad)  
   1400109f8:	cmp    al,0xa
   1400109fa:	rex.X
   1400109fb:	repnz movabs ds:0xfa3f9f33249a5dbf,eax
   140010a05:	in     al,0xd6
   140010a07:	adc    esp,DWORD PTR [rdi-0x32]
   140010a0a:	mov    ebx,0x6ac4df72
   140010a0f:	xchg   edx,eax
   140010a10:	rex.R mov dl,0xc5
   140010a13:	xchg   ebp,eax
   140010a14:	movabs ds:0x4c4ecf59ce776bbf,al
   140010a1d:	imul   ebp
   140010a1f:	(bad)  
   140010a20:	mov    esi,0xf35d3d57
   140010a25:	(bad)  
   140010a26:	ins    BYTE PTR es:[rdi],dx
   140010a27:	(bad)  
   140010a28:	or     BYTE PTR [rdx-0x105df97b],ch
   140010a2e:	enter  0x980a,0xb8
   140010a32:	push   rdi
   140010a33:	(bad)  
   140010a34:	ins    DWORD PTR es:[rdi],dx
   140010a35:	rex.RXB cmc 
   140010a37:	pxor   mm5,QWORD PTR [rbx-0x7e]
   140010a3b:	scas   al,BYTE PTR es:[rdi]
   140010a3c:	push   rax
   140010a3d:	stos   DWORD PTR es:[rdi],eax
   140010a3e:	in     al,0xf9
   140010a40:	rex.RX push rdi
   140010a42:	fisttp DWORD PTR [rcx]
   140010a44:	pop    rax
   140010a45:	stc    
   140010a46:	mov    ah,0x0
   140010a48:	rcl    ch,0x6f
   140010a4b:	or     esi,DWORD PTR [rsi-0x203248a0]
   140010a51:	rex.RB or eax,0xf03a2c95
   140010a57:	mov    DWORD PTR [rip+0x452333d5],esi        # 0x185243e32
   140010a5d:	outs   dx,DWORD PTR ds:[rsi]
   140010a5e:	jno    0x140010a67
   140010a60:	rex.WRX jl 0x140010a52
   140010a63:	jg     0x1400109ef
   140010a65:	mov    ecx,esi
   140010a67:	rex.RXB jmp QWORD PTR [r11-0x7d9d37a2]
   140010a6e:	mul    DWORD PTR [rbx]
   140010a70:	cmp    eax,0xd5fcc5bb
   140010a75:	sub    BYTE PTR [rdx+0x4c],dl
   140010a78:	(bad)  
   140010a79:	xchg   BYTE PTR [rdx+0xa9c42fa],ch
   140010a7f:	test   al,0xf5
   140010a81:	push   rbp
   140010a82:	jp     0x140010a40
   140010a84:	(bad)  
   140010a85:	mov    bh,0x65
   140010a87:	sar    DWORD PTR [rbx-0x723d77b1],cl
   140010a8d:	push   0xffffffffc98ace8f
   140010a92:	sub    esi,DWORD PTR [rcx+rax*2+0x24]
   140010a96:	lods   eax,DWORD PTR ds:[rsi]
   140010a97:	sub    edx,ebp
   140010a99:	pushf  
   140010a9a:	stos   BYTE PTR es:[rdi],al
   140010a9b:	fild   WORD PTR [rcx+0x6a]
   140010a9e:	xlat   BYTE PTR ds:[rbx]
   140010a9f:	rol    DWORD PTR [rax+0x6350e1a0],1
   140010aa5:	adc    dh,0xf5
   140010aa8:	jmp    FWORD PTR [rax+0x4cd2cf1]
   140010aae:	test   al,0xe0
   140010ab0:	pop    rdi
   140010ab1:	push   rcx
   140010ab2:	fist   WORD PTR [rdx+rsi*2+0x61]
   140010ab6:	iret   
   140010ab7:	shl    BYTE PTR [rax-0xfbf00a6],1
   140010abd:	xchg   ebx,eax
   140010abe:	cwde   
   140010abf:	(bad)  
   140010ac0:	cli    
   140010ac1:	rex.RB
   140010ac2:	fwait
   140010ac3:	out    dx,al
   140010ac4:	mov    ecx,0xb8bb9cd1
   140010ac9:	push   rsi
   140010aca:	jle    0x140010abc
   140010acc:	xor    ebx,DWORD PTR [rdi-0x26]
   140010acf:	or     al,0x4e
   140010ad1:	(bad)  
   140010ad2:	ss rex.RX xchg ebx,eax
   140010ad5:	mov    ecx,0xbcb072a5
   140010ada:	sub    ecx,DWORD PTR [rdi+0x7a]
   140010add:	add    ecx,ebx
   140010adf:	pop    rsi
   140010ae0:	cmc    
   140010ae1:	scas   eax,DWORD PTR es:[rdi]
   140010ae2:	cmp    eax,0x4f7de198
   140010ae7:	jns    0x140010ad8
   140010ae9:	iret   
   140010aea:	cmp    ecx,0x9c1e0035
   140010af0:	jmp    0x10faed906
   140010af5:	(bad)  
   140010af7:	jo     0x140010ad0
   140010af9:	(bad)  
   140010afa:	push   rdi
   140010afb:	cmp    ecx,0x35
   140010afe:	cli    
   140010aff:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010b00:	sub    dl,BYTE PTR [rbx-0x594146e1]
   140010b06:	adc    bl,BYTE PTR [rbp+0x65]
   140010b09:	add    BYTE PTR [rax],ah
   140010b0b:	push   0xffffffffffffffdf
   140010b0d:	push   rbx
   140010b0e:	cmp    esp,esi
   140010b10:	pop    rsi
   140010b11:	jne    0x140010abe
   140010b13:	mov    ch,bl
   140010b15:	add    esp,DWORD PTR [rcx-0xf83eb13]
   140010b1b:	movabs ds:0x33a72f439850b562,al
   140010b24:	outs   dx,DWORD PTR ds:[rsi]
   140010b25:	(bad)  
   140010b26:	pop    rcx
   140010b27:	pop    rbx
   140010b28:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010b29:	mov    bh,0x5
   140010b2b:	(bad)  
   140010b2c:	or     eax,0xdedfb4ba
   140010b31:	mov    eax,0x6c748779
   140010b36:	xor    ebp,DWORD PTR [rax-0x76657585]
   140010b3c:	push   0xffffffffffffffa9
   140010b3e:	mov    WORD PTR [rsi+0x75bea392],ss
   140010b44:	push   rcx
   140010b45:	enter  0xe271,0x7a
   140010b49:	sbb    eax,0x680fed8c
   140010b4e:	xchg   esp,eax
   140010b4f:	(bad)  
   140010b50:	xlat   BYTE PTR ds:[rbx]
   140010b51:	sbb    dh,BYTE PTR [rip+0xffffffffd4dd12e3]        # 0x114de1e3a
   140010b57:	mov    edx,0xed8cfc4c
   140010b5c:	add    al,0xa7
   140010b5e:	jbe    0x140010b42
   140010b60:	push   rbx
   140010b61:	rex.XB jnp 0x140010aec
   140010b64:	xor    eax,0x5fef288b
   140010b69:	sbb    ecx,DWORD PTR [rdi+rbx*1+0x3f]
   140010b6d:	xchg   esi,eax
   140010b6e:	jmp    0x140010baf
   140010b70:	repz fidiv DWORD PTR [rdi+0x6f55ff49]
   140010b77:	out    0x71,al
   140010b79:	pop    rsi
   140010b7a:	call   0xfef188ee
   140010b7f:	rex.WXB stos BYTE PTR es:[rdi],al
   140010b81:	(bad)  
   140010b82:	mov    dl,BYTE PTR [rdx+rbx*1-0x319f365d]
   140010b89:	(bad)  
   140010b8a:	in     eax,dx
   140010b8b:	fdivr  DWORD PTR [rip+0x4a9696ce]        # 0x18a97a25f
   140010b91:	out    0xf5,eax
   140010b93:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010b94:	cli    
   140010b95:	pop    rbp
   140010b96:	test   DWORD PTR [rsi],esi
   140010b98:	rex.WRB jnp 0x140010b4a
   140010b9b:	fidiv  DWORD PTR [rcx-0x34471453]
   140010ba1:	sbb    eax,0xf54deda0
   140010ba6:	mov    al,0xbb
   140010ba8:	(bad)  
   140010baa:	and    BYTE PTR [rbp-0x7],bl
   140010bad:	(bad)  
   140010bae:	stos   BYTE PTR es:[rdi],al
   140010baf:	scas   al,BYTE PTR es:[rdi]
   140010bb0:	scas   al,BYTE PTR es:[rdi]
   140010bb1:	xchg   BYTE PTR [rcx-0x4d],ch
   140010bb4:	ins    DWORD PTR es:[rdi],dx
   140010bb5:	add    BYTE PTR [rax],al
   140010bb7:	and    BYTE PTR [rax],al
   140010bb9:	rex.WB
   140010bba:	rex.R
   140010bbb:	push   r12
   140010bbd:	rex.X sti 
   140010bbf:	movabs ds:0x2a6764d36800332a,eax
   140010bc8:	push   rdi
   140010bc9:	out    dx,eax
   140010bca:	rex.RXB movsxd r11d,DWORD PTR [r11-0x59104d90]
   140010bd1:	add    eax,0xa5341b4
   140010bd7:	(bad)
   140010bdb:	push   rdx
   140010bdc:	add    DWORD PTR [rbp-0x27],edi
   140010bdf:	pop    rbx
   140010be0:	clc    
   140010be1:	ret    0xffdd
   140010be4:	cmp    al,0x8f
   140010be6:	montmul (bad)
   140010be7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010be8:	(bad)  
   140010be9:	xchg   esp,eax
   140010bea:	rcl    dh,0x75
   140010bed:	loop   0x140010bff
   140010bef:	pop    rsp
   140010bf0:	sti    
   140010bf1:	(bad)  
   140010bf2:	shl    DWORD PTR [rsi+0x2d1ddf2a],1
   140010bf8:	imul   BYTE PTR [rax+0x30]
   140010bfb:	movabs ds:0xdb1f1e6962e9b356,al
   140010c04:	or     DWORD PTR ss:[rdx],eax
   140010c07:	(bad)  
   140010c08:	test   ch,al
   140010c0a:	shl    BYTE PTR [rdx+0x4f],cl
   140010c0d:	cmp    eax,0xbd556a88
   140010c12:	add    eax,0x100a213e
   140010c17:	cwde   
   140010c18:	mov    ecx,0xf8312f8d
   140010c1d:	test   BYTE PTR [rax],bh
   140010c1f:	cmp    BYTE PTR [rbx-0x4f94cb92],0x2
   140010c26:	retf   0x7b16
   140010c29:	je     0x140010c20
   140010c2b:	add    eax,0x5bd57e00
   140010c30:	gs lock std 
   140010c33:	jmp    FWORD PTR [rbx]
   140010c35:	lea    ecx,[rbx-0x7c0481be]
   140010c3b:	neg    DWORD PTR [rbp+0x1a]
   140010c3e:	lea    ebx,[rbp-0x5f]
   140010c41:	pop    rdi
   140010c42:	and    dl,dl
   140010c44:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010c45:	(bad)  
   140010c46:	sub    BYTE PTR [rdi],al
   140010c48:	cmp    esi,esi
   140010c4a:	lea    edi,[rbx+0x2b]
   140010c4d:	cmp    ecx,DWORD PTR [rbx]
   140010c4f:	rex.WRX sti 
   140010c51:	(bad)  
   140010c52:	(bad)  
   140010c53:	rex.WX movabs al,ds:0xa5d9dd778572fdd8
   140010c5d:	(bad)  [rdi]
   140010c5f:	jg     0x140010cd1
   140010c61:	push   rdi
   140010c62:	(bad)  
   140010c63:	sar    BYTE PTR [rdx],1
   140010c65:	hlt    
   140010c66:	cmp    BYTE PTR [rcx],bl
   140010c68:	icebp  
   140010c69:	test   al,0x41
   140010c6b:	jb     0x140010ce8
   140010c6d:	imul   edi
   140010c6f:	cmp    bl,BYTE PTR [rdi+0x75]
   140010c72:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010c73:	add    DWORD PTR [rsi+rdx*4-0x2c],ebx
   140010c77:	mov    ecx,0xb7e20d7a
   140010c7c:	shr    al,cl
   140010c7e:	lock retf 
   140010c80:	test   QWORD PTR [r9+0x20],rbp
   140010c84:	sar    BYTE PTR [rsp+rdx*8-0x2b075196],1
   140010c8b:	pop    rcx
   140010c8c:	sub    DWORD PTR [rax-0x20c40d80],ecx
   140010c92:	xchg   ebp,eax
   140010c93:	ins    BYTE PTR es:[rdi],dx
   140010c94:	mov    ebp,0x8c5d7be2
   140010c99:	rex.RX movabs ds:0xb2de41aa13e3aee5,al
   140010ca3:	test   eax,0x8e8e8663
   140010ca8:	pop    rbx
   140010caa:	push   0xffffffffa5b5a313
   140010caf:	adc    eax,0x95f363b4
   140010cb4:	test   BYTE PTR [rsi+0x67311a6e],ch
   140010cba:	add    BYTE PTR [rsi+0x18aaf896],cl
   140010cc0:	movabs ds:0x536aebd0ed7172b1,eax
   140010cc9:	xchg   ebp,eax
   140010cca:	lock adc al,0x49
   140010ccd:	clc    
   140010cce:	jp     0x140010c7d
   140010cd0:	(bad)  
   140010cd1:	mov    ah,0x6
   140010cd3:	jge    0x140010ca0
   140010cd5:	(bad)  
   140010cd6:	jrcxz  0x140010cb3
   140010cd8:	pop    rax
   140010cd9:	fnstsw WORD PTR [rax]
   140010cdb:	nop
   140010cdc:	out    0x1e,eax
   140010cde:	jae    0x140010cc0
   140010ce0:	jbe    0x140010cd6
   140010ce2:	(bad)  
   140010ce3:	fcos   
   140010ce5:	scas   al,BYTE PTR es:[rdi]
   140010ce6:	or     ah,al
   140010ce8:	and    esi,edi
   140010cea:	jge    0x140010d51
   140010cec:	jrcxz  0x140010cba
   140010cee:	test   ebp,edx
   140010cf0:	push   rdx
   140010cf1:	add    DWORD PTR [rax],edx
   140010cf3:	xchg   ebx,eax
   140010cf4:	(bad)  
   140010cf5:	mov    ah,0x6f
   140010cf7:	(bad)  
   140010cf8:	retf   
   140010cf9:	jnp    0x140010ced
   140010cfb:	fimul  WORD PTR [rsi-0x4b646a3]
   140010d01:	loop   0x140010cf5
   140010d03:	and    dl,bl
   140010d05:	out    dx,eax
   140010d06:	ins    DWORD PTR es:[rdi],dx
   140010d07:	repnz (bad) 
   140010d09:	mov    bh,0x6f
   140010d0b:	xor    eax,0x5c0d7c79
   140010d10:	(bad)  [rcx-0x475f271a]
   140010d16:	stc    
   140010d17:	int    0xc7
   140010d19:	mov    WORD PTR [rsi],?
   140010d1b:	ret    
   140010d1c:	rex.X
   140010d1d:	lock (bad) 
   140010d1f:	(bad)
   140010d22:	(bad)
   140010d25:	div    ebx
   140010d27:	lea    edx,[rbp-0x17]
   140010d2a:	(bad)  
   140010d2b:	pop    rsp
   140010d2c:	rex.WRXB je 0x140010ce4
   140010d2f:	xor    eax,DWORD PTR [rcx]
   140010d31:	mov    ebp,0x94d518f2
   140010d36:	mov    ebp,0x4e5a64c
   140010d3b:	movabs ds:0x55cd59862399095f,eax
   140010d44:	(bad)  
   140010d45:	mov    eax,0x6004aba0
   140010d4a:	repz int 0xff
   140010d4d:	fsubrp st(6),st
   140010d4f:	(bad)  
   140010d50:	mov    esp,0x7cce6cac
   140010d55:	jmp    0x165257712
   140010d5a:	(bad)  
   140010d5b:	popf   
   140010d5c:	sbb    dh,BYTE PTR gs:[rcx]
   140010d5f:	jo     0x140010d58
   140010d61:	jns    0x140010d34
   140010d63:	xor    esi,DWORD PTR [rip+0xffffffff9486bf25]        # 0xd487cc8e
   140010d69:	xchg   esp,eax
   140010d6a:	mov    eax,0xa96a2708
   140010d6f:	lea    esp,[rsi-0x4b4d5711]
   140010d75:	and    esp,esi
   140010d77:	lods   eax,DWORD PTR ds:[rsi]
   140010d78:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010d79:	sti    
   140010d7a:	rex.RX out 0x47,al
   140010d7d:	or     edx,DWORD PTR [rax]
   140010d7f:	loop   0x140010d37
   140010d81:	(bad)  
   140010d82:	jno    0x140010d80
   140010d84:	fadd   st,st(1)
   140010d86:	xchg   eax,ebp
   140010d88:	sahf   
   140010d89:	(bad)  
   140010d8a:	mov    ebp,0x6627cd2a
   140010d8f:	mov    dl,0xe0
   140010d91:	popf   
   140010d92:	hlt    
   140010d93:	test   DWORD PTR [rbx-0x7604c068],0x334e59f7
   140010d9d:	jle    0x140010d9e
   140010d9f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010da0:	mov    edi,0xaf85f6b4
   140010da5:	(bad)  
   140010da6:	(bad)  
   140010da7:	sub    edx,DWORD PTR [rax+riz*2]
   140010daa:	movabs ds:0xbfbc9ec760cbed26,eax
   140010db3:	jnp    0x140010e24
   140010db5:	outs   dx,BYTE PTR ds:[rsi]
   140010db6:	jp     0x140010dbb
   140010db8:	or     edi,DWORD PTR [rdi-0x4b22a03a]
   140010dbe:	out    0x42,al
   140010dc0:	push   rax
   140010dc1:	pop    rbp
   140010dc2:	int3   
   140010dc3:	(bad)  
   140010dc4:	stc    
   140010dc5:	cmp    ch,bl
   140010dc7:	mov    es,edx
   140010dc9:	test   eax,0x4497714
   140010dce:	adc    ebp,DWORD PTR ds:[rdx+0x7f]
   140010dd2:	add    eax,0x6173ee72
   140010dd7:	and    eax,edi
   140010dd9:	push   rbx
   140010dda:	(bad)  
   140010ddb:	xchg   BYTE PTR [rax-0x5c498b5b],dh
   140010de1:	cmp    cl,BYTE PTR [rbp-0x15]
   140010de4:	out    dx,eax
   140010de5:	rex.WRX (bad) 
   140010de7:	ror    BYTE PTR [rbx+rax*1-0x68],0x4e
   140010dec:	mov    esi,0x13191aef
   140010df1:	sbb    cl,BYTE PTR [rcx-0x77b5d40b]
   140010df7:	sub    ebp,esp
   140010df9:	add    ebp,DWORD PTR [rax+0x7802baba]
   140010dff:	jb     0x140010e44
   140010e01:	xchg   DWORD PTR [rdi],ecx
   140010e03:	lods   eax,DWORD PTR ds:[rsi]
   140010e04:	repz xor DWORD PTR [rbx+0x4c],esp
   140010e08:	mov    dl,0xf1
   140010e0a:	(bad)  
   140010e0b:	test   DWORD PTR [rdx+0x7e],0x9cacbc3
   140010e12:	mov    ebx,0x86ea6236
   140010e17:	fstp   QWORD PTR [rip+0x4f6449f6]        # 0x18f655813
   140010e1d:	push   rbx
   140010e1e:	sub    eax,0x8fa663d1
   140010e23:	(bad)  
   140010e24:	push   rcx
   140010e25:	cmc    
   140010e26:	movabs eax,ds:0x5f9799a7dc6d20e8
   140010e2f:	(bad)  
   140010e31:	test   al,0x1d
   140010e33:	xchg   ebx,eax
   140010e34:	xor    eax,ecx
   140010e36:	rex.WR and al,0xde
   140010e39:	push   0xffffffffd4cc5b73
   140010e3e:	or     eax,0x6efc6acc
   140010e43:	rex.WRX (bad) [rbp+0xfeeadb9]
   140010e4a:	jg     0x140010e19
   140010e4c:	cmp    BYTE PTR [rdi],ch
   140010e4e:	(bad)  
   140010e4f:	pushf  
   140010e50:	loop   0x140010ec9
   140010e52:	cdq    
   140010e53:	xor    DWORD PTR [rip+0xffffffffa1f27ff3],0x63        # 0xe1f38e4d
   140010e5a:	fwait
   140010e5b:	pop    rdi
   140010e5c:	js     0x140010e42
   140010e5e:	mov    DWORD PTR [rcx],esi
   140010e60:	mov    BYTE PTR [rax],al
   140010e62:	xor    ax,0x2669
   140010e66:	std    
   140010e67:	sbb    eax,0x3d83c77b
   140010e6c:	sti    
   140010e6d:	(bad)  
   140010e6e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010e6f:	(bad)  
   140010e70:	push   rdi
   140010e71:	(bad)  
   140010e72:	rex.WRX movabs rdi,0x2ec1e07f4f49d970
   140010e7c:	out    0x97,al
   140010e7e:	(bad)  
   140010e7f:	pop    rax
   140010e80:	rex.WR test QWORD PTR [rcx],0xffffffff923b69b5
   140010e87:	mov    edi,0x6b01563a
   140010e8c:	adc    eax,0xe2185d4f
   140010e91:	ret    0x5e46
   140010e94:	and    esi,0xffffff94
   140010e97:	rex.X stos BYTE PTR es:[rdi],al
   140010e99:	adc    esp,eax
   140010e9b:	xor    al,0x33
   140010e9d:	add    DWORD PTR [rsi-0x4af6c21d],ebx
   140010ea3:	movabs ds:0xfb2bbde0dd02af14,al
   140010eac:	add    edi,DWORD PTR [rdx-0x6033c258]
   140010eb2:	fadd   st,st(0)
   140010eb4:	xor    ebx,DWORD PTR [rdi-0x27]
   140010eb7:	xor    BYTE PTR [rdi],cl
   140010eb9:	mov    dl,0x31
   140010ebb:	leave  
   140010ebc:	lock xchg DWORD PTR [rsi+0x4b],edi
   140010ec0:	mov    bl,BYTE PTR [rbx+0x5e]
   140010ec3:	pop    rbx
   140010ec4:	push   rsi
   140010ec5:	cmp    esp,DWORD PTR [rbx]
   140010ec7:	rex.RX je 0x140010f36
   140010eca:	shl    BYTE PTR [rdx-0x2c],1
   140010ecd:	push   rcx
   140010ece:	and    al,0x99
   140010ed0:	mov    ch,0x79
   140010ed2:	(bad)  
   140010ed3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010ed4:	push   rbx
   140010ed5:	sub    eax,0xfc67b56e
   140010eda:	pop    rax
   140010edb:	movabs ds:0x3f9c35bfb6b79ea8,eax
   140010ee4:	movabs eax,ds:0x44bd19b21e0c4441
   140010eed:	(bad)  
   140010eee:	(bad)  
   140010eef:	jnp    0x140010ede
   140010ef1:	(bad)  
   140010ef2:	jo     0x140010e9c
   140010ef4:	adc    al,0xfc
   140010ef6:	or     ebp,ebx
   140010ef8:	cmp    eax,0x3c6bed11
   140010efd:	xchg   DWORD PTR [rsi],esi
   140010eff:	stos   DWORD PTR es:[rdi],eax
   140010f00:	inc    edx
   140010f02:	ret    
   140010f03:	adc    eax,0x569d6705
   140010f08:	and    BYTE PTR [rax],bl
   140010f0a:	xor    edi,edi
   140010f0c:	rex.XB (bad) 
   140010f0e:	rex.WRX (bad) 
   140010f10:	ds (bad) 
   140010f12:	mov    ecx,0x614e5ba3
   140010f17:	and    BYTE PTR [rip+0xfffffffff9fe6389],dh        # 0x139ff72a6
   140010f1d:	mov    ebp,0x6f49c7fb
   140010f22:	cmp    dh,bl
   140010f24:	jmp    0x140010f0a
   140010f26:	in     eax,dx
   140010f27:	cmp    ecx,DWORD PTR [rax+0x3cd1605a]
   140010f2d:	(bad)  
   140010f2e:	hlt    
   140010f2f:	jns    0x140010f18
   140010f31:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010f32:	jne    0x140010f82
   140010f34:	mov    ebp,0xb14d69f4
   140010f39:	punpcklbw mm7,DWORD PTR [rax]
   140010f3c:	cs lock (bad) 
   140010f3f:	xor    ebx,DWORD PTR [rbx+0x48cbcad8]
   140010f45:	(bad)  
   140010f46:	movabs ds:0x42b86d7b66a34963,eax
   140010f4f:	mov    bh,0x9
   140010f51:	xor    BYTE PTR [rbx],al
   140010f53:	or     bl,0x50
   140010f56:	mov    cl,bh
   140010f58:	sbb    edi,esi
   140010f5a:	rex.RB adc eax,0xf34a4fcc
   140010f60:	cmp    esp,DWORD PTR es:[rcx]
   140010f63:	fidivr WORD PTR [rdi+0x5]
   140010f66:	adc    BYTE PTR [rax+0x6b],al
   140010f69:	add    BYTE PTR [rip+0x1d4fc9be],bh        # 0x15d50d92d
   140010f6f:	fisttp QWORD PTR [rsi+rbx*1+0x30]
   140010f73:	(bad)  
   140010f74:	cwde   
   140010f75:	repnz sbb eax,0xdf5bc6bf
   140010f7b:	cli    
   140010f7c:	rex.WRX pop rdi
   140010f7e:	sahf   
   140010f7f:	sub    cl,BYTE PTR [rsi+0x77]
   140010f82:	(bad)
   140010f86:	sbb    cl,BYTE PTR [rcx+rdx*1-0x54e98e4]
   140010f8d:	push   rdi
   140010f8e:	out    0xcc,eax
   140010f90:	mov    bh,0x1d
   140010f92:	sbb    DWORD PTR [rdx+0x2d],0xf260d1da
   140010f99:	push   0xfffffffff8ae607f
   140010f9e:	pop    rsi
   140010f9f:	popf   
   140010fa0:	stos   BYTE PTR es:[rdi],al
   140010fa1:	jge    0x140010fbb
   140010fa3:	mov    BYTE PTR [rcx+0x5b],ah
   140010fa6:	mov    ebp,0x55a447d6
   140010fab:	mov    eax,0x12939cea
   140010fb0:	mov    esi,0x66d16605
   140010fb5:	test   BYTE PTR [rsi],dh
   140010fb7:	test   eax,0x10ac32cb
   140010fbc:	xor    BYTE PTR [rcx+rbp*1-0x34e048c4],dh
   140010fc3:	leave  
   140010fc4:	mov    ebp,esi
   140010fc6:	stos   BYTE PTR es:[rdi],al
   140010fc7:	cwde   
   140010fc8:	push   QWORD PTR [rbx+0x47]
   140010fcb:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140010fcd:	std    
   140010fce:	icebp  
   140010fcf:	(bad)  
   140010fd0:	(bad)  
   140010fd1:	pop    rax
   140010fd2:	ja     0x140010fc1
   140010fd4:	addr32 xor eax,0x1d832649
   140010fda:	sti    
   140010fdb:	(bad)  
   140010fdc:	or     edi,ebx
   140010fde:	(bad)  
   140010fdf:	mov    WORD PTR [rdx+0x49c95cfe],ss
   140010fe5:	pop    rdx
   140010fe6:	xor    DWORD PTR [rdi+0x71fcc9a2],edi
   140010fec:	jmp    0x140010fc8
   140010fee:	(bad)  
   140010fef:	(bad)  
   140010ff0:	in     al,dx
   140010ff1:	cld    
   140010ff2:	es ret 
   140010ff4:	rex.RX int3 
   140010ff6:	mov    edi,0x8eeff10d
   140010ffb:	or     esp,ecx
   140010ffd:	(bad)  
   140010ffe:	rex.RB cmp BYTE PTR [r8+0x12],0x51
   140011003:	pushf  
   140011004:	hlt    
   140011005:	sub    bh,BYTE PTR [rdi-0x7d]
   140011008:	sbb    ebx,0x7b474fda
   14001100e:	ret    
   14001100f:	mov    ebp,0xd3e26544
   140011014:	xchg   ebp,eax
   140011015:	mov    ebp,?
   140011017:	jl     0x140010fbf
   140011019:	imul   edx,DWORD PTR [rcx+0xfd14809],0xd
   140011020:	jmp    0x140011024
   140011022:	xor    al,0x6c
   140011024:	movsxd ebp,DWORD PTR [rdx+0xa976a0f]
   14001102a:	repz xchg eax,edi
   14001102d:	int3   
   14001102e:	mov    bh,0xfa
   140011030:	out    dx,eax
   140011031:	test   eax,0xb63b8fe4
   140011036:	shl    DWORD PTR [rdi],0x8
   140011039:	stos   BYTE PTR es:[rdi],al
   14001103a:	ja     0x14001106a
   14001103c:	jmp    0x13f2ef96c
   140011041:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011042:	(bad)  
   140011043:	and    al,0xc
   140011045:	(bad)  
   140011046:	idiv   esi
   140011048:	(bad)  
   140011049:	and    BYTE PTR [rsi+0x51],ch
   14001104c:	push   0x4fc2ad48
   140011051:	(bad)  
   140011052:	mov    esp,0xdf035090
   140011057:	sub    ch,BYTE PTR [rdx+0x36]
   14001105a:	mov    dh,0x35
   14001105c:	rcr    BYTE PTR [rbx+0x745da983],1
   140011062:	and    al,0x9e
   140011064:	rex.RX fistp DWORD PTR [rbp+0x45f2d7c5]
   14001106b:	push   rax
   14001106c:	jl     0x1400110bb
   14001106e:	lods   eax,DWORD PTR ds:[rsi]
   14001106f:	(bad)
   140011073:	outs   dx,BYTE PTR ds:[rsi]
   140011074:	rex.WR jl 0x1400110d9
   140011077:	rol    BYTE PTR [rdx],1
   140011079:	jl     0x140011089
   14001107b:	push   rbx
   14001107c:	sbb    QWORD PTR [rax+0x1f08d50e],rbp
   140011083:	movabs ds:0x7f3bde8ddfdde97d,al
   14001108c:	pop    rsi
   14001108d:	adc    eax,0x27fe6de4
   140011092:	(bad)  
   140011093:	or     dh,BYTE PTR [rbp+0x29]
   140011096:	mov    esi,0x560ecf59
   14001109b:	mul    dh
   14001109d:	repz sti 
   14001109f:	outs   dx,BYTE PTR ds:[rsi]
   1400110a0:	sbb    BYTE PTR [rbx-0x32dd9f22],bl
   1400110a6:	mov    bh,0x13
   1400110a8:	rcr    BYTE PTR [rbx-0x74],0xdf
   1400110ac:	push   0xffffffffc3e9eb7a
   1400110b1:	icebp  
   1400110b2:	in     eax,dx
   1400110b3:	sahf   
   1400110b4:	cdq    
   1400110b5:	lock iret 
   1400110b7:	mov    ah,0x68
   1400110b9:	sbb    dh,bl
   1400110bb:	outs   dx,DWORD PTR ds:[rsi]
   1400110bc:	jmp    0x1400110f8
   1400110be:	sub    eax,0x5605dfe9
   1400110c3:	(bad)  
   1400110c4:	out    dx,eax
   1400110c5:	(bad)  
   1400110c6:	xchg   DWORD PTR [rdi+0x57],ebx
   1400110c9:	pop    rax
   1400110ca:	sti    
   1400110cb:	stc    
   1400110cc:	rex.WR xlat BYTE PTR ds:[rbx]
   1400110ce:	jle    0x14001105d
   1400110d0:	ret    
   1400110d1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400110d2:	pop    rdi
   1400110d3:	lods   al,BYTE PTR ds:[rsi]
   1400110d4:	cli    
   1400110d5:	shl    ebp,1
   1400110d7:	mov    ch,BYTE PTR [rdi]
   1400110d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400110da:	or     DWORD PTR [rbp+rax*1+0x7d74b85d],esi
   1400110e1:	sbb    al,0xf0
   1400110e3:	fadd   DWORD PTR [rsi]
   1400110e5:	lahf   
   1400110e6:	js     0x140011148
   1400110e8:	xchg   ebp,eax
   1400110e9:	out    dx,eax
   1400110ea:	(bad)  
   1400110eb:	push   rax
   1400110ec:	outs   dx,BYTE PTR ds:[rsi]
   1400110ed:	fdivp  st(2),st
   1400110ef:	jrcxz  0x1400110ae
   1400110f1:	int    0x77
   1400110f3:	mov    esi,0x7c8aa367
   1400110f8:	sub    BYTE PTR [r15+riz*8],r10b
   1400110fc:	add    edi,DWORD PTR [rcx-0x27]
   1400110ff:	fistp  QWORD PTR [rbx+rax*2+0x41e45498]
   140011106:	(bad)  
   140011107:	(bad)  
   140011108:	rex (bad) 
   14001110a:	sbb    al,0x75
   14001110c:	cwde   
   14001110d:	(bad)  
   14001110e:	xor    al,0xdc
   140011110:	scas   eax,DWORD PTR es:[rdi]
   140011111:	rex.WX shr QWORD PTR [rax+0x447420fb],cl
   140011118:	retf   
   140011119:	or     al,0x99
   14001111b:	mov    eax,0x55f73697
   140011120:	adc    ebx,DWORD PTR [rdx+0x63ab5b5c]
   140011126:	pop    rdx
   140011127:	xor    esp,DWORD PTR [rbx*8-0x20c671a]
   14001112e:	outs   dx,BYTE PTR ds:[rsi]
   14001112f:	mov    edi,0xffc7fb2f
   140011134:	rex.WRX jnp 0x140011126
   140011137:	cld    
   140011138:	rsm    
   14001113a:	and    ah,bh
   14001113c:	fldenv [rdi-0x304a5e1]
   140011142:	movabs ds:0x37a6a320a0858e4f,eax
   14001114b:	mov    al,0xb
   14001114d:	jnp    0x14001115d
   14001114f:	(bad)  
   140011150:	out    0xf7,al
   140011152:	sbb    eax,0xa0de9918
   140011157:	fs xchg ebx,eax
   140011159:	sub    BYTE PTR [rsi-0x6ff019ba],bh
   14001115f:	(bad)  
   140011160:	mov    ah,0x97
   140011162:	imul   edi,DWORD PTR [rsi+rbp*4+0x53],0xf2a4403e
   14001116a:	shl    esp,cl
   14001116c:	icebp  
   14001116d:	icebp  
   14001116e:	mov    ebp,0x33b60383
   140011173:	adc    al,0x18
   140011175:	(bad)  
   140011176:	mov    edi,0x629e6da9
   14001117b:	xchg   ah,cl
   14001117d:	jl     0x14001117f
   14001117f:	(bad)  [rdx+0x2cbad0b6]
   140011185:	or     BYTE PTR [rdi+riz*2+0x62],dh
   140011189:	rex.WRB push r9
   14001118b:	int    0x3a
   14001118d:	(bad)  
   14001118e:	stos   DWORD PTR es:[rdi],eax
   14001118f:	(bad)  
   140011190:	jrcxz  0x1400111a5
   140011192:	fwait
   140011193:	je     0x14001117b
   140011195:	fdivrp st(3),st
   140011197:	cld    
   140011198:	imul   ebp,DWORD PTR [rbx-0x491086c],0xfff1833b
   1400111a2:	cld    
   1400111a3:	icebp  
   1400111a4:	and    DWORD PTR [rip+0x5de72b16],ecx        # 0x19de83cc0
   1400111aa:	sub    eax,0x4249db0d
   1400111af:	rex.WRX jmp 0x14001121a
   1400111b2:	xchg   esi,eax
   1400111b3:	xlat   BYTE PTR ds:[rbx]
   1400111b4:	stos   BYTE PTR es:[rdi],al
   1400111b5:	mov    bl,0xf0
   1400111b7:	(bad)  
   1400111b8:	mov    ch,0x7d
   1400111ba:	(bad)  
   1400111bb:	add    al,0x4
   1400111bd:	fsub   st(0),st
   1400111bf:	pop    rdx
   1400111c0:	nop
   1400111c1:	ret    
   1400111c2:	cmove  ecx,DWORD PTR [rax+0x1c]
   1400111c6:	sbb    cl,BYTE PTR [rbx+rdi*1+0x4389ab40]
   1400111cd:	adc    ecx,esi
   1400111cf:	mov    ecx,0xe5555200
   1400111d4:	lahf   
   1400111d5:	adc    BYTE PTR es:[rdx+rdi*4+0x53],dl
   1400111da:	add    BYTE PTR [rcx+0x16e4a546],dl
   1400111e0:	add    BYTE PTR [rcx-0x50],bh
   1400111e3:	push   rax
   1400111e4:	push   rbp
   1400111e5:	lock fcom QWORD PTR [rdx]
   1400111e8:	mov    dl,0x9f
   1400111ea:	clc    
   1400111eb:	add    ecx,DWORD PTR [rcx-0x21]
   1400111ee:	clc    
   1400111ef:	(bad)  
   1400111f0:	mov    edx,?
   1400111f2:	push   rdx
   1400111f3:	jg     0x1400111e2
   1400111f5:	rex.WRXB out dx,eax
   1400111f7:	mov    ebp,0x1eaff9f8
   1400111fc:	(bad)  
   1400111fd:	add    esp,DWORD PTR [rsp+rcx*2-0x3a464cba]
   140011204:	jb     0x140011277
   140011206:	out    dx,eax
   140011207:	(bad)  
   140011208:	ret    
   140011209:	shr    esi,0x3d
   14001120c:	jrcxz  0x1400111b2
   14001120e:	out    dx,eax
   14001120f:	and    al,0x3f
   140011211:	pop    rdx
   140011212:	fdivp  st(6),st
   140011214:	(bad)  
   140011215:	cmp    ebp,DWORD PTR [rax+0x31]
   140011218:	jae    0x140011215
   14001121a:	jge    0x140011252
   14001121c:	cwde   
   14001121d:	(bad)  
   14001121e:	rol    BYTE PTR [rsi+0x1a],cl
   140011221:	xlat   BYTE PTR ds:[rbx]
   140011222:	mov    BYTE PTR [rdi-0x79],bh
   140011225:	lods   al,BYTE PTR ds:[rsi]
   140011226:	retf   
   140011227:	(bad)  
   140011228:	(bad)  
   140011229:	jbe    0x14001121b
   14001122b:	fidiv  WORD PTR [rsp+rcx*8]
   14001122e:	add    al,0xd0
   140011230:	ins    DWORD PTR es:[rdi],dx
   140011231:	ret    
   140011232:	jnp    0x14001123a
   140011234:	outs   dx,BYTE PTR ds:[rsi]
   140011235:	fsub   DWORD PTR [rbp-0x30a8c953]
   14001123b:	in     al,0x67
   14001123d:	jb     0x140011205
   14001123f:	(bad)  
   140011240:	mov    cl,0x65
   140011242:	or     BYTE PTR [rip+0x7040175c],bh        # 0x1b04129a4
   140011248:	sub    eax,0xd70000f2
   14001124d:	cmp    esp,ebp
   14001124f:	stc    
   140011250:	leave  
   140011251:	stos   DWORD PTR es:[rdi],eax
   140011252:	lea    ebx,[rip+0x105dbe4c]        # 0x1505ed0a4
   140011258:	test   al,0x2e
   14001125a:	cmp    DWORD PTR [rcx-0x6249441],edi
   140011260:	xor    esi,edx
   140011262:	ds jo  0x1400111ff
   140011265:	ds mov dl,0x65
   140011268:	mov    cl,0x9a
   14001126a:	sub    eax,0x27e4cdef
   14001126f:	out    dx,eax
   140011270:	int    0xf5
   140011272:	(bad)
   140011275:	sbb    eax,DWORD PTR [rbx-0x4f]
   140011278:	and    DWORD PTR [rcx],esp
   14001127a:	(bad)  
   14001127b:	imul   edx,DWORD PTR [rcx+rbp*8-0x49],0x41
   140011280:	mov    cl,BYTE PTR [rax+0x4b]
   140011283:	jl     0x140011227
   140011285:	or     DWORD PTR [rcx+riz*1],esp
   140011288:	(bad)  
   140011289:	(bad)  
   14001128a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001128b:	ins    BYTE PTR es:[rdi],dx
   14001128c:	xor    eax,DWORD PTR [rbx+0x2f]
   14001128f:	(bad)  
   140011290:	mov    esi,0x84d56270
   140011295:	xchg   esi,eax
   140011296:	and    ebp,DWORD PTR [rsi+rdi*1]
   140011299:	xchg   dl,al
   14001129b:	rex.WRB sbb al,0x49
   14001129e:	mov    esp,0x719c5ff6
   1400112a3:	pop    rax
   1400112a4:	ffree  st(7)
   1400112a6:	mov    bh,0x3b
   1400112a8:	movabs al,ds:0x934145da7ad2a293
   1400112b1:	(bad)  
   1400112b2:	fisttp WORD PTR [rbp-0x3782b022]
   1400112b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400112b9:	(bad)  
   1400112ba:	mov    edi,0x5c5dce82
   1400112bf:	(bad)  
   1400112c0:	jg     0x1400112b7
   1400112c2:	std    
   1400112c3:	neg    DWORD PTR [rsi+0x38]
   1400112c6:	jge    0x140011329
   1400112c8:	lods   eax,DWORD PTR ds:[rsi]
   1400112c9:	add    al,0x1b
   1400112cb:	and    eax,0xb4b66893
   1400112d0:	stos   DWORD PTR es:[rdi],eax
   1400112d1:	pop    rax
   1400112d2:	fdiv   DWORD PTR [rdi-0x1d]
   1400112d5:	push   rsi
   1400112d6:	jg     0x1400112bf
   1400112d8:	scas   al,BYTE PTR es:[rdi]
   1400112d9:	pushf  
   1400112da:	mov    dl,0x81
   1400112dc:	sub    BYTE PTR [rdi],ah
   1400112de:	or     ah,BYTE PTR [rdx+0xd]
   1400112e1:	jbe    0x14001135f
   1400112e3:	(bad)  
   1400112e4:	repz (bad) 
   1400112e6:	faddp  st(3),st
   1400112e8:	in     al,0x7b
   1400112ea:	stos   BYTE PTR es:[rdi],al
   1400112eb:	xor    al,0x95
   1400112ed:	rex.WB jl 0x14001128b
   1400112f0:	cmp    dh,dl
   1400112f2:	std    
   1400112f3:	out    dx,al
   1400112f4:	(bad)  
   1400112f5:	xlat   BYTE PTR ds:[rbx]
   1400112f6:	in     al,dx
   1400112f7:	xor    al,0x75
   1400112f9:	imul   ecx,DWORD PTR [rsi+0x38],0x54
   1400112fd:	stos   DWORD PTR es:[rdi],eax
   1400112fe:	ds stos BYTE PTR es:[rdi],al
   140011300:	and    bh,al
   140011302:	in     al,0xda
   140011304:	ins    DWORD PTR es:[rdi],dx
   140011305:	ret    
   140011306:	stos   DWORD PTR es:[rdi],eax
   140011307:	rex add DWORD PTR [rdx],edx
   14001130a:	add    eax,0x8892929
   14001130f:	pop    rbx
   140011310:	sub    ebp,DWORD PTR [rsi+rdx*8]
   140011313:	push   rsi
   140011314:	(bad)  
   140011315:	push   rbp
   140011316:	mov    bh,0x84
   140011318:	push   rcx
   140011319:	xchg   edi,eax
   14001131a:	(bad)  
   14001131b:	and    BYTE PTR [rbp-0x5c7ffe73],ah
   140011321:	minps  xmm4,xmm1
   140011324:	jae    0x140011373
   140011326:	call   0xdc020e95
   14001132b:	mov    al,sil
   14001132e:	rex.W cld 
   140011330:	(bad)  
   140011331:	jmp    0x1400112f7
   140011333:	(bad)  [rdx-0x6ce05da1]
   140011339:	sti    
   14001133a:	jmp    0x1400112c7
   14001133c:	outs   dx,BYTE PTR ds:[rsi]
   14001133d:	xchg   edi,eax
   14001133e:	push   0xffffffffffffffe3
   140011340:	jbe    0x1400113a6
   140011342:	push   rcx
   140011343:	mov    esi,0xc4fa29ff
   140011348:	imul   esi,edi,0xffffffe0
   14001134b:	mov    ds,WORD PTR [rbx-0x17a44dea]
   140011351:	xchg   DWORD PTR [rdi-0x63],edi
   140011354:	rex.RX (bad) 
   140011357:	(bad)  
   140011358:	and    edi,ebp
   14001135a:	in     eax,dx
   14001135b:	ja     0x14001138a
   14001135d:	(bad)  
   14001135e:	rex.WX movabs rcx,0x3fef2a435dca7822
   140011368:	mov    ah,0xf2
   14001136a:	(bad)  
   14001136b:	push   rsp
   14001136c:	mov    DWORD PTR [rsi],0xd4aa3cbb
   140011372:	fist   DWORD PTR [rbp-0x1bd8abac]
   140011378:	(bad)  
   140011379:	rex.RB
   14001137a:	ss (bad) 
   14001137c:	mov    BYTE PTR [rcx+0x38],0x3e
   140011380:	cs ja  0x14001139f
   140011383:	sahf   
   140011384:	and    DWORD PTR [rax],esi
   140011386:	mov    edi,ds
   140011388:	pop    rsi
   140011389:	rex.WB
   14001138a:	repz test BYTE PTR [rdx+0x3d],0xc1
   14001138f:	mov    ecx,0x17a1da88
   140011394:	push   rsi
   140011395:	setnp  BYTE PTR [rdi+rsi*2]
   140011399:	adc    al,0xd9
   14001139b:	ja     0x14001135c
   14001139d:	rex.WXB jp 0x14001140f
   1400113a0:	stc    
   1400113a1:	out    dx,eax
   1400113a2:	mov    rax,rdi
   1400113a5:	movabs eax,ds:0x6d0fb3fcff0ccfc7
   1400113ae:	or     al,0xf3
   1400113b0:	adc    al,BYTE PTR [rsp+rbp*4+0x49]
   1400113b4:	fidiv  DWORD PTR [rdi+0x793d9583]
   1400113ba:	jg     0x140011435
   1400113bc:	addr32 sahf 
   1400113be:	sub    al,0x2c
   1400113c0:	xchg   esi,eax
   1400113c1:	xchg   esp,eax
   1400113c2:	data16 rex.X (bad) 
   1400113c5:	mov    BYTE PTR [rbp-0x41229703],bh
   1400113cb:	icebp  
   1400113cc:	(bad)  
   1400113cd:	pop    rdx
   1400113ce:	int3   
   1400113cf:	(bad)  
   1400113d1:	(bad)  
   1400113d2:	(bad)
   1400113d5:	dec    DWORD PTR [rsi+0x34cbad40]
   1400113db:	sbb    BYTE PTR [rdi-0x6d4b49ea],dl
   1400113e1:	movabs al,ds:0xd7a3fd583a266c5a
   1400113ea:	out    dx,eax
   1400113eb:	mov    edi,0x9126ef06
   1400113f0:	sub    al,ah
   1400113f2:	pop    rdx
   1400113f3:	push   rsi
   1400113f4:	adc    DWORD PTR [rsi-0x7ba9369b],esi
   1400113fa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400113fb:	sub    cl,bl
   1400113fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400113fe:	rex.RB fisttp QWORD PTR [rsi*2-0x3145d4ed]
   140011406:	xchg   edi,eax
   140011407:	jl     0x14001143c
   140011409:	and    ebx,0xcbcef6ab
   14001140f:	or     eax,0x9914b6d9
   140011414:	stos   BYTE PTR es:[rdi],al
   140011415:	mov    ah,0x4c
   140011417:	fsin   
   140011419:	pushf  
   14001141a:	jmp    0x170411789
   14001141f:	lock ret 0xaf68
   140011423:	cmp    dh,BYTE PTR [rbp-0x48740b13]
   140011429:	(bad)  
   14001142a:	int    0xd7
   14001142c:	or     DWORD PTR [rdi-0x17270ca9],esi
   140011432:	pop    rdx
   140011433:	lea    ecx,[rdx-0x5712acd]
   140011439:	rex.WRX or r12b,al
   14001143c:	fisub  WORD PTR [rdi-0x6e260f0f]
   140011442:	ds jae 0x14001143c
   140011445:	cs jp  0x14001142d
   140011448:	fsubr  QWORD PTR [rbx-0x40e7cd21]
   14001144e:	clc    
   14001144f:	mov    ch,0x1b
   140011451:	hlt    
   140011452:	cmp    edi,DWORD PTR [rdi]
   140011454:	(bad)  
   140011455:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011456:	rex.RXB out dx,al
   140011458:	rex.WRB ret 0x50dd
   14001145c:	or     eax,ebx
   14001145e:	mov    cl,al
   140011460:	and    DWORD PTR [rsi-0x60],0xffffff91
   140011464:	push   rsp
   140011465:	(bad)  
   140011466:	scas   al,BYTE PTR es:[rdi]
   140011467:	in     al,dx
   140011468:	out    0xf1,al
   14001146a:	rex.RXB (bad) [r11-0xb3f7dfc]
   140011471:	rex.WRB in eax,dx
   140011473:	and    eax,0x2c736320
   140011478:	push   rsp
   140011479:	mov    esp,0x6b85f7ef
   14001147e:	mov    ebx,0x5a68d54b
   140011483:	fnsave [rdi+0x1c9a28ea]
   140011489:	or     ecx,DWORD PTR cs:[r9]
   14001148d:	and    BYTE PTR [rax],al
   14001148f:	xlat   BYTE PTR ds:[rbx]
   140011490:	mul    ah
   140011492:	mov    dh,0xbb
   140011494:	xchg   ecx,eax
   140011495:	jl     0x140011496
   140011497:	iret   
   140011498:	rex.WX mov dl,0xff
   14001149b:	data16 sbb ah,ch
   14001149e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001149f:	(bad)  
   1400114a0:	jg     0x140011441
   1400114a2:	jle    0x14001151c
   1400114a4:	in     eax,dx
   1400114a5:	rex.WXB (bad) 
   1400114a7:	rex.WRXB in eax,0x44
   1400114aa:	lods   al,BYTE PTR ds:[rsi]
   1400114ab:	(bad)  
   1400114ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400114ad:	(bad)  
   1400114ae:	(bad)  
   1400114af:	(bad)  
   1400114b0:	retf   
   1400114b1:	ror    DWORD PTR [rsi-0xd211cc3],0x4a
   1400114b8:	(bad)  
   1400114b9:	jp     0x140011538
   1400114bb:	(bad)  
   1400114bc:	xchg   ebx,eax
   1400114bd:	or     BYTE PTR [rdx-0x34],bl
   1400114c0:	(bad)  
   1400114c1:	stc    
   1400114c2:	movabs ds:0x7e2bee1139d7c46b,eax
   1400114cb:	(bad)  
   1400114cc:	(bad)  [rdx]
   1400114ce:	repz fadd QWORD PTR [rcx-0x2e]
   1400114d2:	mov    WORD PTR [rip+0x3c4a8dac],ss        # 0x17c4ba284
   1400114d8:	mov    ebp,0x917cc63e
   1400114dd:	imul   ecx,edi,0xffffffb3
   1400114e0:	sahf   
   1400114e1:	stos   BYTE PTR es:[rdi],al
   1400114e2:	nop
   1400114e3:	mov    dl,BYTE PTR [rax-0x5556d56]
   1400114e9:	mov    eax,0x28856fb3
   1400114ee:	ror    DWORD PTR [rsi+rdi*4-0x49],0xb0
   1400114f3:	rex.WRXB (bad) 
   1400114f5:	rex.WB jl 0x14001150d
   1400114f8:	(bad)  
   1400114f9:	mov    ch,0x25
   1400114fb:	mov    ebp,DWORD PTR [rip+0xffffffffc224ca58]        # 0x10225df59
   140011501:	xchg   esp,eax
   140011502:	test   BYTE PTR [rax],al
   140011504:	cmp    cl,sil
   140011507:	(bad)  
   140011508:	repz mov cl,0x41
   14001150b:	xchg   ebx,eax
   14001150c:	scas   eax,DWORD PTR es:[rdi]
   14001150d:	mov    edx,0x4a72ff18
   140011512:	(bad)  
   140011513:	in     eax,0xb6
   140011515:	adc    DWORD PTR [rdx-0x598c1521],edi
   14001151b:	imul   edx,DWORD PTR [rcx],0x5
   14001151e:	add    BYTE PTR [rax-0x56],al
   140011521:	scas   al,BYTE PTR es:[rdi]
   140011522:	out    dx,al
   140011523:	xchg   ebx,eax
   140011524:	adc    ch,al
   140011526:	sub    ebx,DWORD PTR [rdx+0x3a]
   140011529:	jp     0x140011561
   14001152b:	and    al,dl
   14001152d:	out    dx,al
   14001152e:	sub    eax,0xbec95c02
   140011533:	(bad)  
   140011534:	mov    DWORD PTR [rdi-0x53],esp
   140011537:	add    BYTE PTR [rdi-0x45221e3],ah
   14001153d:	repnz shl DWORD PTR [rbp-0x64],1
   140011541:	cmp    DWORD PTR [rcx-0x7106e05b],edi
   140011547:	jge    0x14001153d
   140011549:	stos   BYTE PTR es:[rdi],al
   14001154a:	jge    0x140011597
   14001154c:	sub    edi,ebx
   14001154e:	jmp    0x1ad2811b2
   140011553:	jge    0x140011536
   140011555:	add    ebx,DWORD PTR [rbx]
   140011557:	leave  
   140011558:	jg     0x140011553
   14001155a:	ja     0x140011567
   14001155c:	cmp    bl,BYTE PTR [rbx+rbp*4+0x24]
   140011560:	imul   ebx,DWORD PTR [rcx+rbx*2-0x27885be9],0xb8f4275e
   14001156b:	mov    dh,0xc9
   14001156e:	rex.XB pop r14
   140011570:	ins    BYTE PTR es:[rdi],dx
   140011571:	mov    ah,0xfb
   140011573:	movabs al,ds:0x37c24ad7e662eaf5
   14001157c:	push   rsi
   14001157d:	(bad)  
   14001157e:	push   rdx
   14001157f:	(bad)  
   140011580:	adc    BYTE PTR [rax+rbx*4],0x3d
   140011584:	(bad)  
   140011585:	cmp    DWORD PTR [rdx+0x1a9b40c1],ecx
   14001158b:	rex.W (bad) 
   14001158d:	pop    rsi
   14001158e:	adc    BYTE PTR [rax-0x12],al
   140011591:	fwait
   140011592:	(bad)  
   140011593:	mov    ecx,eax
   140011595:	(bad)  
   140011596:	loope  0x140011527
   140011598:	push   0xfffffffffffffff6
   14001159a:	(bad)  
   14001159b:	ja     0x1400115dd
   14001159d:	mov    eax,ebp
   14001159f:	shl    DWORD PTR [rdi-0x8207032],1
   1400115a5:	leave  
   1400115a6:	mov    edi,0x85e71b59
   1400115ab:	adc    ah,BYTE PTR [rdi]
   1400115ad:	push   0xffffffffffffffd2
   1400115af:	sahf   
   1400115b0:	hlt    
   1400115b1:	xchg   edi,eax
   1400115b2:	jbe    0x14001159b
   1400115b4:	std    
   1400115b5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400115b6:	sbb    eax,0x673f3279
   1400115bb:	rex.WRB (bad) 
   1400115bd:	adc    ecx,DWORD PTR [rsi-0x71fe02c4]
   1400115c3:	scas   al,BYTE PTR es:[rdi]
   1400115c4:	xor    al,0x4
   1400115c6:	and    esp,ecx
   1400115c8:	ffree  st(1)
   1400115ca:	cld    
   1400115cb:	push   0x1618c9bc
   1400115d0:	stos   DWORD PTR es:[rdi],eax
   1400115d1:	pop    rdx
   1400115d2:	loop   0x1400115a1
   1400115d4:	push   rbx
   1400115d5:	stos   DWORD PTR es:[rdi],eax
   1400115d6:	addr32 mov dl,0xa
   1400115d9:	pushf  
   1400115da:	pop    rdi
   1400115db:	(bad)  
   1400115dc:	movsxd ebp,DWORD PTR [rbp-0x18]
   1400115df:	rex.WX (bad) 
   1400115e1:	stos   BYTE PTR es:[rdi],al
   1400115e2:	push   rbp
   1400115e3:	adc    al,BYTE PTR [rsi]
   1400115e5:	mov    DWORD PTR [rax-0x1a],edi
   1400115e8:	neg    DWORD PTR [rdi-0x6847252e]
   1400115ee:	pushf  
   1400115ef:	popf   
   1400115f0:	(bad)  
   1400115f1:	rex.RB (bad) 
   1400115f3:	sub    edx,DWORD PTR [rdx+rbp*2]
   1400115f6:	sub    eax,0xb6970a8b
   1400115fb:	xor    BYTE PTR [rbp-0x6f],al
   1400115fe:	(bad)  
   1400115ff:	rex.RB
   140011600:	ds mov dl,0x12
   140011603:	cmc    
   140011604:	mov    ah,0xd8
   140011606:	cmp    DWORD PTR [rsi-0x40],edx
   140011609:	push   rdi
   14001160a:	jb     0x140011676
   14001160c:	xchg   edx,eax
   14001160d:	int    0x47
   14001160f:	or     DWORD PTR [rax-0x4ca34554],eax
   140011615:	sbb    esi,DWORD PTR [rsi-0x49930205]
   14001161b:	push   rcx
   14001161c:	(bad)  
   14001161d:	mov    esi,0xb5d36d
   140011622:	add    BYTE PTR [rip+0x55468194],al        # 0x1954797bc
   140011628:	adc    BYTE PTR [rbp-0x15],ch
   14001162b:	rex popf 
   14001162d:	(bad)  
   14001162e:	mov    dh,0x40
   140011630:	loopne 0x14001167c
   140011632:	ja     0x140011635
   140011634:	mov    ch,dl
   140011636:	sti    
   140011637:	sbb    ah,BYTE PTR [rdx+rdi*1]
   14001163a:	(bad)  
   14001163b:	(bad)  
   14001163c:	mov    ebp,0xb234096a
   140011641:	sub    BYTE PTR [rdi],bh
   140011643:	jo     0x14001168f
   140011645:	out    dx,al
   140011646:	mov    edi,0x7ff6996d
   14001164b:	retf   
   14001164c:	outs   dx,BYTE PTR ds:[rsi]
   14001164d:	jp     0x140011634
   14001164f:	cld    
   140011650:	stos   DWORD PTR es:[rdi],eax
   140011651:	fistp  QWORD PTR [rdi+riz*1]
   140011654:	scas   eax,DWORD PTR es:[rdi]
   140011655:	js     0x1400116aa
   140011657:	ds cli 
   140011659:	lock dec DWORD PTR [rip+0x642fc0fa]        # 0x1a430d75a
   140011660:	lods   eax,DWORD PTR ds:[rsi]
   140011661:	ret    
   140011662:	imul   edi,DWORD PTR [rsi],0x75
   140011665:	push   QWORD PTR [rip+0xffffffffed93831c]        # 0x12d949987
   14001166b:	push   0xffffffffaa6d3ba9
   140011670:	jbe    0x1400116c4
   140011672:	mov    ah,0x21
   140011674:	jp     0x140011656
   140011676:	lock stos BYTE PTR es:[rdi],al
   140011678:	sbb    edx,0x5f
   14001167b:	or     DWORD PTR [rdx-0x33],0xd3ed13e8
   140011682:	jo     0x1400116fe
   140011684:	sub    BYTE PTR [rax],dl
   140011686:	push   rsi
   140011687:	xlat   BYTE PTR ds:[rbx]
   140011688:	adc    eax,0x37b21020
   14001168d:	jl     0x1400116ce
   14001168f:	shr    bh,cl
   140011691:	stc    
   140011692:	jno    0x1400116d5
   140011694:	jg     0x1400116d4
   140011696:	xchg   edx,eax
   140011697:	cli    
   140011698:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011699:	mov    DWORD PTR [rsp+rcx*1+0x4e],0x2fcd92fb
   1400116a1:	adc    eax,0x459de5fd
   1400116a6:	mov    dh,0xb8
   1400116a8:	push   rsp
   1400116a9:	cwde   
   1400116aa:	xor    al,0x13
   1400116ac:	rex.WRX push rdx
   1400116ae:	and    DWORD PTR [rsi],esi
   1400116b0:	add    BYTE PTR [rcx-0x13],dl
   1400116b3:	ss call 0x1837be519
   1400116b9:	lea    ebx,[rbx+rdx*1-0x4f]
   1400116bd:	jge    0x14001164e
   1400116bf:	sbb    bl,BYTE PTR [rip+0xffffffffd595f9b9]        # 0x11597107e
   1400116c5:	push   rdi
   1400116c6:	jge    0x1400116ff
   1400116c8:	ret    
   1400116c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400116ca:	jle    0x14001168b
   1400116cc:	(bad)  
   1400116cd:	pop    rsp
   1400116ce:	or     cl,dh
   1400116d0:	scas   al,BYTE PTR es:[rdi]
   1400116d1:	mov    ?,WORD PTR [rax]
   1400116d3:	cs (bad) 
   1400116d5:	stos   DWORD PTR es:[rdi],eax
   1400116d6:	cwde   
   1400116d7:	(bad)  
   1400116d9:	push   rbx
   1400116da:	xchg   ebx,eax
   1400116db:	cmp    DWORD PTR [rdx+0x58],edx
   1400116de:	push   rdx
   1400116df:	adc    eax,0x22b21556
   1400116e4:	int3   
   1400116e5:	push   rcx
   1400116e6:	mov    ebp,0x54428509
   1400116eb:	jl     0x140011752
   1400116ed:	(bad)  
   1400116ee:	rex.WB (bad) 
   1400116f0:	(bad)  
   1400116f1:	sub    DWORD PTR [rcx+0x54],ebx
   1400116f4:	pop    rax
   1400116f5:	(bad)  
   1400116f6:	mov    dl,0x3
   1400116f8:	adc    BYTE PTR [rbx+0x56],cl
   1400116fb:	sub    al,0x91
   1400116fd:	xlat   BYTE PTR ds:[rbx]
   1400116fe:	sub    BYTE PTR [rax],al
   140011700:	add    al,BYTE PTR [rax+0x36006874]
   140011707:	(bad)  
   140011708:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011709:	cwde   
   14001170a:	in     al,0xab
   14001170c:	scas   eax,DWORD PTR es:[rdi]
   14001170d:	add    eax,0x9efeba08
   140011712:	mov    dh,0xad
   140011714:	mov    ebp,0x6d748aff
   140011719:	repnz add BYTE PTR [rdx+0x4f],ch
   14001171d:	push   rcx
   14001171e:	js     0x140011753
   140011720:	ins    DWORD PTR es:[rdi],dx
   140011721:	jae    0x1400116e2
   140011723:	push   rbx
   140011724:	or     eax,DWORD PTR [rax]
   140011726:	mov    edx,0x34e14040
   14001172b:	or     dl,cl
   14001172d:	push   rsi
   14001172e:	sub    eax,0x16555206
   140011733:	rol    DWORD PTR [rbp+rdx*1+0xc],1
   140011737:	jbe    0x14001173f
   140011739:	jge    0x1400117a0
   14001173b:	cmp    ah,BYTE PTR [rbx]
   14001173d:	(bad)  
   14001173e:	pushf  
   14001173f:	cli    
   140011740:	scas   al,BYTE PTR es:[rdi]
   140011741:	(bad)  
   140011742:	lods   al,BYTE PTR ds:[rsi]
   140011743:	(bad)  
   140011744:	cdq    
   140011745:	jrcxz  0x140011762
   140011747:	mul    BYTE PTR [rbx]
   140011749:	fistp  QWORD PTR [rbx+rcx*4+0x4ae97d6f]
   140011750:	jbe    0x14001174d
   140011752:	loop   0x1400117af
   140011754:	jmp    QWORD PTR [rip+0x47786fc6]        # 0x187798720
   14001175a:	xor    esi,edi
   14001175c:	rcr    DWORD PTR [rdi+0x60],cl
   14001175f:	(bad)  
   140011760:	in     al,0x7b
   140011762:	rex.WRB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140011764:	(bad)  
   140011765:	push   rdi
   140011766:	ret    
   140011767:	adc    eax,0x1327b9de
   14001176c:	push   rdi
   14001176d:	mov    WORD PTR [rbp+0x6864c85e],fs
   140011773:	rex.WR
   140011774:	rex.RX or al,0x8d
   140011777:	test   al,0x92
   140011779:	jno    0x140011757
   14001177b:	ret    
   14001177c:	push   rbp
   14001177d:	xchg   edx,eax
   14001177e:	cmp    bh,BYTE PTR [rax]
   140011780:	rex.WXB movabs ds:0xabf17b1867a86390,al
   14001178a:	imul   esp,DWORD PTR ds:[rcx+0x11],0x40804e91
   140011792:	neg    BYTE PTR [rdx+0x7be4847f]
   140011798:	jle    0x1400117f6
   14001179a:	int    0x8e
   14001179c:	std    
   14001179d:	push   rax
   14001179e:	cmp    BYTE PTR [rsi],0xf1
   1400117a1:	shl    bl,1
   1400117a3:	sbb    ebx,DWORD PTR [rdi+0x61b1f07e]
   1400117a9:	pop    rsi
   1400117aa:	pop    rax
   1400117ab:	xor    eax,0xdcc92649
   1400117b0:	(bad)  
   1400117b1:	fstp   DWORD PTR [rdi-0x26]
   1400117b4:	push   rcx
   1400117b5:	hlt    
   1400117b6:	xchg   esi,eax
   1400117b7:	push   rdi
   1400117b8:	or     dl,BYTE PTR [rbx+0x73ef8c54]
   1400117be:	mov    dh,0x50
   1400117c0:	jns    0x140011806
   1400117c2:	jne    0x14001174e
   1400117c4:	call   0x1a1a69258
   1400117c9:	ss push rbp
   1400117cb:	sbb    BYTE PTR [rip+0x6713681c],0xba        # 0x1a7147fee
   1400117d2:	movsxd ebx,DWORD PTR [rdx]
   1400117d4:	pushf  
   1400117d5:	adc    bh,BYTE PTR [rcx]
   1400117d7:	or     bl,ah
   1400117d9:	in     eax,dx
   1400117da:	(bad)  
   1400117dc:	lods   eax,DWORD PTR ds:[rsi]
   1400117dd:	outs   dx,BYTE PTR ds:[rsi]
   1400117de:	xchg   ebp,eax
   1400117df:	js     0x14001185b
   1400117e1:	ins    DWORD PTR es:[rdi],dx
   1400117e2:	xor    al,0x51
   1400117e4:	mov    cl,bl
   1400117e6:	test   al,0x15
   1400117e8:	push   rbp
   1400117e9:	jno    0x140011795
   1400117eb:	mov    ebx,0xbb2a88a8
   1400117f0:	jmp    QWORD PTR [rip+0x1b75157e]        # 0x15b762d74
   1400117f6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400117f7:	xchg   BYTE PTR [rdi-0x77],ch
   1400117fa:	xchg   rbp,rax
   1400117fc:	(bad)  
   1400117fd:	(bad)  
   1400117fe:	test   al,0x15
   140011800:	movabs ds:0x4400f60ca26a35a5,eax
   140011809:	pop    rbp
   14001180a:	sbb    al,BYTE PTR [rax+rcx*1-0x522ed1fd]
   140011811:	repz adc DWORD PTR [rdi+0x40bb7bff],esi
   140011818:	push   rax
   140011819:	adc    eax,0xb77e8e56
   14001181e:	scas   eax,DWORD PTR es:[rdi]
   14001181f:	cmp    DWORD PTR [rbp-0x4bfff552],edx
   140011825:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011826:	mov    ebx,0x6cfa8c82
   14001182b:	rex jb 0x14001182c
   14001182e:	(bad)  
   14001182f:	rex.RX xchg ebp,eax
   140011831:	shr    BYTE PTR [rcx+0x20],1
   140011834:	add    BYTE PTR [rbp+rdi*8-0x4ddf539f],dh
   14001183b:	adc    BYTE PTR [rsi-0x75341880],0xc1
   140011842:	xchg   ebp,eax
   140011843:	push   rsp
   140011844:	sub    DWORD PTR [rbp-0x2f],edx
   140011847:	sahf   
   140011848:	mov    BYTE PTR [rsi-0x31be3734],ah
   14001184e:	sub    eax,0x3000831c
   140011853:	leave  
   140011854:	mov    dh,0x23
   140011856:	mov    esi,edx
   140011858:	fidiv  WORD PTR [rbx+0x72]
   14001185b:	hlt    
   14001185c:	loope  0x1400118b3
   14001185e:	cmp    eax,0xf8bb2df9
   140011863:	test   bl,0x8b
   140011866:	mov    eax,DWORD PTR [rdi+0x24fdb7b2]
   14001186c:	(bad)  
   14001186d:	call   rbp
   14001186f:	(bad)  
   140011870:	xchg   ebp,eax
   140011871:	stc    
   140011872:	lahf   
   140011873:	inc    BYTE PTR [rdx]
   140011875:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011877:	fmulp  st(3),st
   140011879:	lea    eax,[rsi+0x45]
   14001187c:	out    0x86,eax
   14001187e:	in     eax,dx
   14001187f:	fidivr DWORD PTR [rax-0x2d03328e]
   140011885:	stos   BYTE PTR es:[rdi],al
   140011886:	push   rax
   140011887:	pop    rsp
   140011888:	cmc    
   140011889:	mov    esp,edx
   14001188b:	addr32 (bad) 
   14001188d:	leave  
   14001188e:	rex.RB mov r14d,0x4c803c37
   140011894:	test   BYTE PTR [rax],dl
   140011896:	std    
   140011897:	jns    0x1400118e6
   140011899:	push   rbp
   14001189a:	(bad)  
   14001189b:	(bad)  
   14001189c:	pop    rsi
   14001189d:	jne    0x140011834
   14001189f:	(bad)  
   1400118a0:	(bad)  
   1400118a1:	(bad)  
   1400118a2:	and    bh,bl
   1400118a4:	(bad)  
   1400118a5:	out    dx,eax
   1400118a6:	xchg   cl,bh
   1400118a8:	scas   al,BYTE PTR es:[rdi]
   1400118a9:	(bad)  
   1400118aa:	jno    0x140011838
   1400118ac:	rex.WRXB rol BYTE PTR [r11+0x3f0ccec7],0xfa
   1400118b4:	rcl    cl,0xad
   1400118b7:	rex.WXB jmp 0x1400118fd
   1400118ba:	retf   
   1400118bb:	rex.WB sub bpl,r9b
   1400118be:	ret    0x9b92
   1400118c1:	(bad)
   1400118c4:	push   rdx
   1400118c5:	cwde   
   1400118c6:	xor    al,0x13
   1400118c8:	and    al,0x6
   1400118ca:	int3   
   1400118cb:	mov    edx,eax
   1400118cd:	xchg   DWORD PTR [rax-0x38],ebp
   1400118d0:	and    eax,0x919b503c
   1400118d5:	sbb    ebp,DWORD PTR [rbp-0x77]
   1400118d8:	ficomp WORD PTR [rbx+0x63]
   1400118db:	mov    ebx,0xe3c98207
   1400118e0:	stos   DWORD PTR es:[rdi],eax
   1400118e1:	jrcxz  0x14001190b
   1400118e3:	jle    0x1400118b0
   1400118e5:	rex.WRB
   1400118e6:	rex.WRB
   1400118e7:	rex.WB stos QWORD PTR es:[rdi],rax
   1400118e9:	lods   eax,DWORD PTR ds:[rsi]
   1400118ea:	add    DWORD PTR [rsi+rcx*8+0x5c],ebx
   1400118ee:	fcomp  QWORD PTR [rdx+0x1f7707e8]
   1400118f4:	icebp  
   1400118f5:	idiv   BYTE PTR [rsi+0x850a890]
   1400118fb:	in     eax,dx
   1400118fc:	jbe    0x1400118e4
   1400118fe:	adc    ecx,DWORD PTR [rcx+rsi*1+0x1]
   140011902:	enter  0xf2c7,0x55
   140011906:	xor    cl,dh
   140011908:	jl     0x14001189d
   14001190a:	xchg   edi,eax
   14001190b:	cwde   
   14001190c:	cmp    al,0x42
   14001190e:	lods   al,BYTE PTR ds:[rsi]
   14001190f:	ins    DWORD PTR es:[rdi],dx
   140011910:	(bad)  
   140011911:	sbb    bl,0xb8
   140011914:	jl     0x1400118ed
   140011916:	cmps   BYTE PTR gs:[rsi],BYTE PTR es:[rdi]
   140011918:	ins    BYTE PTR es:[rdi],dx
   140011919:	movabs ds:0xedbd303e9269fed6,eax
   140011922:	cmp    dh,bh
   140011924:	mov    dh,BYTE PTR [rbp+rdx*8+0x34]
   140011928:	sub    al,0x89
   14001192b:	rex.X
   14001192c:	rex.W (bad) 
   14001192e:	fwait
   14001192f:	add    DWORD PTR [rdx+0x41],ecx
   140011932:	mov    al,0x5d
   140011934:	or     DWORD PTR [rdx+rbx*4],eax
   140011937:	sti    
   140011938:	adc    rax,0xffffffff80544ca2
   14001193e:	push   0xffffffffaa91a00b
   140011943:	movabs al,cs:0x6f32296900222f62
   14001194d:	(bad)  
   14001194e:	(bad)  
   14001194f:	mov    ebx,DWORD PTR [rax-0x703bf264]
   140011955:	and    ch,BYTE PTR [rbp-0x21]
   140011958:	pmaddwd mm6,QWORD PTR [rbp-0x55]
   14001195c:	lods   eax,DWORD PTR ds:[rsi]
   14001195d:	xchg   edi,eax
   14001195e:	(bad)  
   14001195f:	mov    edx,0xf653a1f9
   140011964:	or     ecx,ebx
   140011966:	test   eax,0x7b35f57e
   14001196b:	int3   
   14001196c:	rex.WXB mov gs,WORD PTR [r14+r13*1]
   140011970:	(bad)  
   140011972:	jnp    0x14001194f
   140011974:	rex.WRXB xchg r10,rax
   140011976:	std    
   140011977:	scas   eax,DWORD PTR es:[rdi]
   140011978:	jg     0x1400119bc
   14001197a:	(bad)  
   14001197b:	out    dx,eax
   14001197c:	std    
   14001197d:	and    ebp,ecx
   14001197f:	jge    0x140011975
   140011981:	xchg   edi,eax
   140011982:	adc    edi,DWORD PTR [rcx+0x48ba2a78]
   140011988:	lods   al,BYTE PTR ds:[rsi]
   140011989:	movabs ds:0x3eab5a2c5ba83007,al
   140011992:	lock rex.RB
   140011994:	rex.RXB sbb r14d,DWORD PTR [r11+0x2bf22900]
   14001199b:	clc    
   14001199c:	cli    
   14001199d:	jge    0x140011974
   14001199f:	xor    DWORD PTR [rbx+rbp*2+0x2],edx
   1400119a3:	jno    0x140011948
   1400119a5:	imul   esi,DWORD PTR [rbp+0x3114551e],0x44
   1400119ac:	(bad)  
   1400119ad:	int3   
   1400119ae:	rcr    ebx,0x91
   1400119b1:	jge    0x14001197a
   1400119b3:	cmp    eax,eax
   1400119b5:	ja     0x140011976
   1400119b7:	push   rbp
   1400119b8:	mov    ecx,0xe1050737
   1400119bd:	mov    ecx,DWORD PTR [rdi-0xb82e161]
   1400119c3:	or     ecx,DWORD PTR [rdi+0x18da5d6c]
   1400119c9:	pop    rdx
   1400119ca:	xchg   ebx,eax
   1400119cb:	and    al,0xda
   1400119cd:	pop    rbx
   1400119ce:	fcomp  QWORD PTR [rcx-0xa]
   1400119d1:	xchg   esi,eax
   1400119d2:	ja     0x1400119b9
   1400119d4:	std    
   1400119d5:	xchg   ebp,eax
   1400119d6:	sbb    eax,0xb2a92705
   1400119db:	rex.WB test BYTE PTR [r8+0x20a52201],cl
   1400119e2:	jns    0x1400119c5
   1400119e4:	add    DWORD PTR [rbp-0x106c3d6e],esi
   1400119ea:	ss sbb al,0x13
   1400119ed:	outs   dx,DWORD PTR ds:[rsi]
   1400119ee:	push   rcx
   1400119ef:	jo     0x140011975
   1400119f1:	mov    ecx,esi
   1400119f3:	jns    0x140011a42
   1400119f5:	pop    rax
   1400119f6:	scas   eax,DWORD PTR es:[rdi]
   1400119f7:	(bad)  
   1400119f8:	fist   DWORD PTR [rcx+rax*4]
   1400119fb:	cmp    al,0xb1
   1400119fd:	lods   eax,DWORD PTR ds:[rsi]
   1400119fe:	xchg   ebx,eax
   1400119ff:	movabs ds:0x546a0af0d547d16b,eax
   140011a08:	jmp    0x140011a02
   140011a0a:	(bad)  
   140011a0b:	(bad)  
   140011a0c:	je     0x140011a4a
   140011a0e:	rex.WXB
   140011a0f:	gs pop sp
   140011a12:	sahf   
   140011a13:	push   rsp
   140011a14:	adc    eax,0x7b47652a
   140011a19:	sbb    ecx,ecx
   140011a1b:	or     BYTE PTR [rbp+0xc],bl
   140011a1e:	(bad)  
   140011a1f:	int    0x76
   140011a21:	popf   
   140011a22:	xchg   esp,eax
   140011a23:	rex.RXB xchg r11d,eax
   140011a25:	sti    
   140011a26:	cmp    dl,0x31
   140011a29:	movsxd ebp,DWORD PTR [rcx-0x540cce1]
   140011a2f:	mov    edi,0x8c7e5709
   140011a34:	stos   DWORD PTR es:[rdi],eax
   140011a35:	imul   eax,DWORD PTR [rdx],0x78
   140011a38:	push   rsi
   140011a39:	(bad)  
   140011a3a:	test   al,0xb2
   140011a3c:	sbb    edx,DWORD PTR [rax+0x4d]
   140011a3f:	rex.WRXB shl BYTE PTR [r11+0x5b060105],1
   140011a46:	(bad)  
   140011a47:	fidiv  WORD PTR [rdx]
   140011a49:	mov    DWORD PTR [rcx+0x1ba224],edi
   140011a4f:	xchg   esi,eax
   140011a50:	movabs eax,ds:0x233462c4b0ca4a30
   140011a59:	xchg   ebp,eax
   140011a5a:	(bad)
   140011a5d:	(bad)  
   140011a5e:	push   rcx
   140011a5f:	cdq    
   140011a60:	add    eax,DWORD PTR [rsi-0x67]
   140011a63:	test   eax,0x6cfccb40
   140011a68:	rex.WR
   140011a69:	rex.WB scas al,BYTE PTR es:[rdi]
   140011a6b:	(bad)  
   140011a6c:	push   rdx
   140011a6d:	fnstsw WORD PTR [rdi-0x55]
   140011a70:	cmp    DWORD PTR [rsi],esi
   140011a72:	ds je  0x140011a27
   140011a75:	cld    
   140011a76:	cld    
   140011a77:	jb     0x1400119ff
   140011a79:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011a7a:	outs   dx,DWORD PTR ds:[rsi]
   140011a7b:	fst    DWORD PTR [rbx+0x42d0f8bc]
   140011a81:	jg     0x140011a7a
   140011a83:	retf   0xbc77
   140011a86:	cmp    eax,0xa6de1bc1
   140011a8b:	pop    rbx
   140011a8c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011a8d:	mov    ss,WORD PTR [rip+0x65df89f2]        # 0x1a5e0a485
   140011a93:	(bad)  
   140011a94:	jmp    0x140011ad5
   140011a96:	rex.WR je 0x140011a51
   140011a99:	(bad)  
   140011a9a:	lea    esp,[rsi-0x56]
   140011a9d:	ficomp WORD PTR cs:[rax]
   140011aa0:	fstp   st(2)
   140011aa2:	fs clc 
   140011aa4:	lock xor ch,dh
   140011aa7:	fadd   QWORD PTR [rdx-0x632f85c8]
   140011aad:	and    edx,DWORD PTR [rax-0x65]
   140011ab0:	sbb    dl,BYTE PTR [r15]
   140011ab3:	out    dx,al
   140011ab4:	jno    0x140011afd
   140011ab6:	jp     0x140011abb
   140011ab8:	mov    BYTE PTR [rdi+0x1e],dh
   140011abb:	rex
   140011abc:	repnz mov dh,BYTE PTR [rdi]
   140011abf:	ret    0xfebc
   140011ac2:	lahf   
   140011ac3:	stos   BYTE PTR es:[rdi],al
   140011ac4:	cmp    DWORD PTR [rax+0x1b],edi
   140011ac7:	adc    al,0x84
   140011ac9:	push   rcx
   140011aca:	push   rcx
   140011acb:	(bad)  
   140011acc:	add    eax,DWORD PTR [rdi+0x4f]
   140011acf:	mov    esi,?
   140011ad1:	(bad)  
   140011ad2:	movabs eax,ds:0x2face591cdd5c363
   140011adb:	sbb    DWORD PTR [rbp+0x7],0xfffffff2
   140011adf:	inc    dl
   140011ae1:	rex.WX xchg rcx,rax
   140011ae3:	sub    eax,0x8936592d
   140011ae8:	push   rsp
   140011ae9:	push   rbx
   140011aea:	ja     0x140011b49
   140011aec:	cmp    BYTE PTR [ebp-0x3c],al
   140011af0:	(bad)  [rcx+rsi*8+0x1e232706]
   140011af7:	icebp  
   140011af8:	out    dx,eax
   140011af9:	cmp    BYTE PTR [rsi+0x55],0x43
   140011afd:	and    ebp,DWORD PTR [rcx]
   140011aff:	fucomip st,st(5)
   140011b01:	(bad)  
   140011b02:	cwde   
   140011b03:	cmp    dl,BYTE PTR [rbx-0x51]
   140011b06:	stc    
   140011b07:	enter  0xf38d,0xa6
   140011b0b:	iret   
   140011b0c:	mov    ecx,0x34dfff27
   140011b11:	(bad)  
   140011b12:	imul   ebx,DWORD PTR [rbp-0x59],0x1b
   140011b16:	add    dl,bl
   140011b18:	int    0x9d
   140011b1a:	rex.WX pop rbp
   140011b1c:	push   rcx
   140011b1d:	add    BYTE PTR [rdi+0x1e],ch
   140011b20:	cmp    al,0x5b
   140011b22:	adc    BYTE PTR [rax+0x3d40f1d2],bh
   140011b28:	mov    dl,0x18
   140011b2a:	mov    ch,0xd1
   140011b2c:	sbb    BYTE PTR [rbx-0xb31ec05],ch
   140011b32:	in     eax,dx
   140011b33:	rcl    BYTE PTR [rbp-0x9],1
   140011b36:	add    DWORD PTR [rax+0x21],edi
   140011b39:	xchg   ebp,eax
   140011b3a:	rcr    cl,0x49
   140011b3d:	and    al,0x8a
   140011b3f:	rex.R push rbp
   140011b41:	mov    DWORD PTR [rsi+rcx*8+0x10397a],edi
   140011b48:	(bad)  
   140011b49:	mov    dl,0x83
   140011b4b:	or     DWORD PTR [rdx-0x68],esp
   140011b4e:	xchg   esi,eax
   140011b50:	lock xor edx,DWORD PTR [rsi]
   140011b53:	cmp    BYTE PTR [rdi+0x55],ch
   140011b56:	xchg   esi,eax
   140011b57:	push   rbp
   140011b58:	cmp    BYTE PTR [rcx],dh
   140011b5a:	test   BYTE PTR [rcx+rbx*2+0x48],dl
   140011b5e:	sub    eax,0xc0030019
   140011b63:	out    dx,al
   140011b64:	add    al,0x0
   140011b66:	push   rbp
   140011b67:	sbb    BYTE PTR [rbx+0x78],ah
   140011b6a:	xchg   ebx,eax
   140011b6b:	mov    BYTE PTR [rdx],cl
   140011b6d:	and    cl,BYTE PTR [rax]
   140011b6f:	(bad)  
   140011b70:	stc    
   140011b71:	in     al,dx
   140011b72:	jae    0x140011bcc
   140011b74:	fcomp  QWORD PTR [rdx]
   140011b76:	mov    ebp,0xa7151b41
   140011b7b:	jo     0x140011b78
   140011b7d:	and    al,0x25
   140011b7f:	and    dl,BYTE PTR [rdx+0x3f565cb5]
   140011b85:	jl     0x140011b39
   140011b87:	clc    
   140011b88:	jl     0x140011bc9
   140011b8a:	div    r10b
   140011b8d:	sbb    eax,0x4b2dd0e6
   140011b92:	out    0xe0,al
   140011b94:	repnz rcr DWORD PTR [rbx+0x17],0xf5
   140011b99:	in     eax,dx
   140011b9a:	call   FWORD PTR [rsi]
   140011b9c:	hlt    
   140011b9d:	mov    dh,0x7f
   140011b9f:	stos   DWORD PTR es:[rdi],eax
   140011ba0:	jmp    0x140011b31
   140011ba2:	jg     0x140011c0d
   140011ba4:	(bad)  
   140011ba5:	pop    rdi
   140011ba6:	cld    
   140011ba7:	push   rax
   140011ba8:	retf   0xfd0f
   140011bab:	gs (bad) 
   140011bad:	rex.WRXB sbb rax,0xffffffffb5aa8c75
   140011bb3:	push   rsp
   140011bb4:	outs   dx,DWORD PTR ds:[rsi]
   140011bb5:	push   rsp
   140011bb6:	out    dx,al
   140011bb7:	(bad)  
   140011bb8:	pop    rdx
   140011bb9:	push   rdi
   140011bba:	xor    DWORD PTR [rsi],0x7ca36307
   140011bc0:	sbb    BYTE PTR [rax+0x6b],dl
   140011bc3:	add    eax,0xea3ffb5a
   140011bc8:	nop
   140011bc9:	movabs eax,ds:0xcee046fe5e49de4b
   140011bd2:	outs   dx,DWORD PTR ds:[rsi]
   140011bd3:	xlat   BYTE PTR ds:[rbx]
   140011bd4:	je     0x140011bd5
   140011bd6:	lods   eax,DWORD PTR ds:[rsi]
   140011bd7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011bd8:	(bad)  
   140011bd9:	stos   BYTE PTR es:[rdi],al
   140011bda:	add    BYTE PTR [rsi-0x1d160d84],bh
   140011be0:	retf   
   140011be1:	rex.WRXB sahf 
   140011be3:	int    0xbf
   140011be5:	lock call 0xe9284d74
   140011beb:	hlt    
   140011bec:	xchg   edi,eax
   140011bed:	jbe    0x140011bd6
   140011bef:	retf   
   140011bf0:	mov    ebx,0xcadef256
   140011bf5:	mov    ss,WORD PTR [rdx+0x2b0c9589]
   140011bfb:	adc    DWORD PTR [rip+0x13aee14c],0xd9d57bea        # 0x153affd51
   140011c05:	sub    eax,0x8d2df600
   140011c0a:	mov    dh,0xb5
   140011c0c:	(bad)  
   140011c0d:	xrelease mov BYTE PTR [rax+0x23],bh
   140011c11:	(bad)
   140011c15:	rex.XB xlat BYTE PTR ds:[rbx]
   140011c17:	in     eax,dx
   140011c18:	cs out 0xe4,eax
   140011c1b:	in     eax,dx
   140011c1c:	jb     0x140011bfc
   140011c1e:	test   DWORD PTR [rbx],edx
   140011c20:	movsxd esi,DWORD PTR [rbp+0x6eff515f]
   140011c26:	cmp    al,0x46
   140011c28:	rex.W fucompp 
   140011c2b:	lock loop 0x140011ca9
   140011c2e:	(bad)  
   140011c2f:	and    esp,DWORD PTR [rdi+0x4e]
   140011c32:	or     BYTE PTR [rcx+0x28943e96],ch
   140011c38:	rex.WRB
   140011c39:	es (bad) 
   140011c3b:	outs   dx,BYTE PTR ds:[rsi]
   140011c3c:	and    BYTE PTR [rdx],dl
   140011c3e:	out    0x3,eax
   140011c40:	test   al,0xb
   140011c42:	adc    DWORD PTR [rbx+riz*8-0x71725645],eax
   140011c49:	sar    DWORD PTR [rsi-0x67e1369d],cl
   140011c4f:	mov    ebp,0xdfc4066d
   140011c54:	shl    ah,0xee
   140011c57:	ins    DWORD PTR es:[rdi],dx
   140011c58:	shl    BYTE PTR [rbp-0x55bbf366],1
   140011c5e:	rex.W fld QWORD PTR [rdi-0x27]
   140011c62:	sub    cl,BYTE PTR [rbx+rax*1]
   140011c65:	ds xchg esi,eax
   140011c67:	xor    ebx,DWORD PTR [rbp+0x13]
   140011c6a:	jo     0x140011ceb
   140011c6c:	xlat   BYTE PTR ds:[rbx]
   140011c6d:	fiadd  DWORD PTR [rax-0x70f39e00]
   140011c73:	adc    eax,DWORD PTR [rbx+0x17]
   140011c76:	rex.WX movsxd rbx,DWORD PTR [rsi+0x54175292]
   140011c7d:	(bad)  
   140011c7e:	pop    rax
   140011c7f:	shl    BYTE PTR [rdx],1
   140011c81:	or     ebx,DWORD PTR [rcx]
   140011c83:	and    ah,BYTE PTR [rbp+0x29]
   140011c86:	xor    eax,0xce8b04d5
   140011c8b:	and    DWORD PTR [rax],ebp
   140011c8d:	test   eax,0x199366b1
   140011c92:	and    ecx,DWORD PTR [rdi]
   140011c94:	add    dl,BYTE PTR [rsi]
   140011c96:	rex.R xchg esi,eax
   140011c98:	add    DWORD PTR [rcx],esp
   140011c9a:	xchg   BYTE PTR [rip+0x5044a1df],dl        # 0x19045be7f
   140011ca0:	(bad)  
   140011ca1:	repz sbb al,0xa9
   140011ca4:	pop    rax
   140011ca5:	nop
   140011ca6:	jecxz  0x140011c89
   140011ca9:	pop    rsp
   140011caa:	sbb    BYTE PTR [rsi],dl
   140011cac:	(bad)  
   140011cad:	fbstp  TBYTE PTR [rdi-0x4a]
   140011cb0:	cmp    al,0x76
   140011cb2:	fistp  QWORD PTR [rcx+0x79bed8f2]
   140011cb8:	pop    rdx
   140011cb9:	mov    esi,0xb8392563
   140011cbe:	ja     0x140011c4e
   140011cc0:	ja     0x140011cf0
   140011cc2:	fbstp  TBYTE PTR [rdx-0x19]
   140011cc5:	adc    ch,BYTE PTR [rsi-0x47]
   140011cc8:	adc    edi,eax
   140011cca:	sahf   
   140011ccb:	call   FWORD PTR [rsi+0x64]
   140011cce:	cmp    al,0x92
   140011cd0:	rcl    DWORD PTR [rbx-0x270b68f1],1
   140011cd6:	out    0x12,eax
   140011cd8:	cmp    al,0xfc
   140011cda:	xchg   edi,eax
   140011cdb:	mov    DWORD PTR [rsi+0x38],ebx
   140011cde:	or     eax,0xaaa78b9
   140011ce3:	(bad)  
   140011ce4:	test   DWORD PTR [rcx],eax
   140011ce6:	pop    rdx
   140011ce7:	fwait
   140011ce8:	cmc    
   140011ce9:	xchg   ecx,eax
   140011cea:	xor    eax,esp
   140011cec:	and    DWORD PTR [rdx],0xe4ed78b0
   140011cf2:	(bad)  
   140011cf3:	cwde   
   140011cf4:	(bad)  
   140011cf5:	jge    0x140011d2a
   140011cf7:	js     0x140011ce0
   140011cf9:	rex.B cwde 
   140011cfb:	rex.XB (bad) 
   140011cfd:	sbb    esp,0xb7644afc
   140011d03:	mov    esi,0x75d835ca
   140011d08:	sub    edi,DWORD PTR [rip+0x3c82f676]        # 0x17c841384
   140011d0e:	hlt    
   140011d0f:	clc    
   140011d10:	cmp    ebx,edi
   140011d12:	lock icebp 
   140011d14:	xor    esp,ebp
   140011d16:	adc    BYTE PTR [rcx-0x2f],ch
   140011d19:	fwait
   140011d1a:	pop    rdi
   140011d1b:	sub    DWORD PTR [rsi],edx
   140011d1d:	(bad)  
   140011d1e:	fcomp  QWORD PTR [rcx-0xa]
   140011d21:	xchg   esi,eax
   140011d22:	xchg   edi,eax
   140011d23:	rex.WX add cl,BYTE PTR [rcx]
   140011d26:	or     DWORD PTR [rbp+0x9109112],0x4a44ca14
   140011d30:	push   rdx
   140011d31:	pop    rcx
   140011d32:	mul    DWORD PTR [rcx-0x386cb9e6]
   140011d38:	jne    0x140011d14
   140011d3a:	push   0xffffffffb34edf8a
   140011d3f:	nop
   140011d40:	(bad)  
   140011d41:	and    al,0xb3
   140011d43:	push   rbx
   140011d44:	out    0xf6,eax
   140011d46:	push   0x5b
   140011d48:	int3   
   140011d49:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011d4a:	adc    edx,edi
   140011d4c:	outs   dx,BYTE PTR ds:[rsi]
   140011d4d:	sbb    eax,0xa804c533
   140011d52:	mov    ss,WORD PTR [rdi+0x21]
   140011d55:	shl    bh,0x0
   140011d58:	pop    rax
   140011d59:	and    DWORD PTR [rip+0x75ba9521],esi        # 0x1b5bbb280
   140011d5f:	fild   QWORD PTR [rcx+0x150a0079]
   140011d65:	and    eax,0xaa80311f
   140011d6a:	lods   al,BYTE PTR ds:[rsi]
   140011d6c:	lods   eax,DWORD PTR ds:[rsi]
   140011d6d:	movabs ds:0x6a20093225de2200,eax
   140011d76:	ins    DWORD PTR es:[rdi],dx
   140011d77:	pushf  
   140011d78:	(bad)  
   140011d79:	mov    al,0x5d
   140011d7b:	(bad)  
   140011d7c:	lahf   
   140011d7d:	push   rsp
   140011d7e:	xchg   ebx,eax
   140011d7f:	pop    rdx
   140011d80:	xchg   edi,eax
   140011d81:	rex.RB int 0xdc
   140011d84:	gs hlt 
   140011d86:	mov    bh,0x6d
   140011d88:	jge    0x140011dec
   140011d8a:	(bad)  
   140011d8b:	fcom   DWORD PTR [rsi]
   140011d8d:	pop    rbp
   140011d8e:	sbb    eax,0xaa1c6027
   140011d93:	add    ah,BYTE PTR [rax+0x75554d0]
   140011d99:	push   rsi
   140011d9a:	in     al,dx
   140011d9b:	rcl    BYTE PTR [rsi-0x219ec09b],0xb0
   140011da2:	rex ret 0x8904
   140011da6:	push   rbp
   140011da7:	mov    al,0xa6
   140011da9:	(bad)  
   140011daa:	xlat   BYTE PTR ds:[rbx]
   140011dab:	sub    al,0xb6
   140011dad:	pop    rax
   140011dae:	add    DWORD PTR [rax+0x33743288],0x2c5a7049
   140011db8:	cmc    
   140011db9:	lods   al,BYTE PTR ds:[rsi]
   140011dba:	pop    rdx
   140011dbb:	test   eax,edx
   140011dbd:	pop    rsi
   140011dbe:	and    DWORD PTR [rax+rax*4],ebp
   140011dc1:	enter  0x6010,0xa8
   140011dc5:	mov    al,0x46
   140011dc7:	adc    eax,0xe52996f3
   140011dcc:	(bad)  
   140011dcd:	adc    dl,BYTE PTR cs:[rax+0x10]
   140011dd1:	push   rcx
   140011dd2:	outs   dx,BYTE PTR ds:[rsi]
   140011dd3:	cwde   
   140011dd4:	rex.WX add rax,0x70307b2c
   140011dda:	(bad)  
   140011ddb:	mov    dl,0xe4
   140011ddd:	cmp    edx,DWORD PTR [rcx+rbx*1-0x6eef7afe]
   140011de4:	test   al,0xaa
   140011de6:	adc    al,BYTE PTR [rcx+0x1c]
   140011de9:	adc    eax,DWORD PTR [rcx]
   140011deb:	push   rax
   140011dec:	add    DWORD PTR [rcx],edx
   140011dee:	jmp    0xdc6d539c
   140011df3:	pop    rsi
   140011df4:	sub    ecx,DWORD PTR [rsi-0x416a75fe]
   140011dfa:	sbb    esp,ebx
   140011dfc:	mov    esi,0x3fddec9c
   140011e01:	outs   dx,DWORD PTR ds:[rsi]
   140011e02:	jbe    0x140011df2
   140011e04:	cdq    
   140011e05:	jmp    0x140011df6
   140011e07:	cwde   
   140011e08:	mov    ebx,0xb70caeed
   140011e0d:	fld    QWORD PTR [rip+0xffffffffc587f9bc]        # 0x1058917cf
   140011e13:	mov    esp,DWORD PTR [rdx]
   140011e15:	fidivr DWORD PTR [rbx+rdi*2]
   140011e18:	(bad)  
   140011e19:	cwde   
   140011e1a:	or     al,0x57
   140011e1c:	sar    esp,cl
   140011e1e:	hlt    
   140011e1f:	jrcxz  0x140011e57
   140011e21:	mov    ebx,0x5b632278
   140011e26:	mov    al,0xaa
   140011e28:	(bad)  
   140011e29:	(bad)  
   140011e2a:	xchg   edi,edi
   140011e2c:	(bad)  
   140011e2d:	rol    DWORD PTR [rdx],1
   140011e2f:	repz rcl bh,cl
   140011e32:	imul   ebx,DWORD PTR [rsi-0x10484bf4],0xc160f308
   140011e3c:	pop    rbx
   140011e3d:	(bad)  
   140011e3e:	in     al,0x75
   140011e40:	rex.B ret 0x1753
   140011e44:	(bad)  
   140011e45:	in     al,0xd8
   140011e47:	shr    ebx,cl
   140011e49:	cli    
   140011e4a:	(bad)  
   140011e4b:	mov    ecx,0x56b13975
   140011e50:	pop    rdx
   140011e51:	fwait
   140011e52:	or     al,0xd4
   140011e54:	mov    ebx,DWORD PTR fs:[rdx+0x26837cde]
   140011e5b:	xor    cl,0x8a
   140011e5e:	rex.WRB (bad) 
   140011e60:	(bad)  
   140011e61:	and    esp,eax
   140011e63:	push   rax
   140011e64:	xchg   BYTE PTR [rdx],cl
   140011e66:	test   eax,0x4f1f225a
   140011e6b:	and    BYTE PTR [rbp+0x74cbf044],dh
   140011e71:	xchg   ebx,eax
   140011e72:	js     0x140011eb7
   140011e74:	rex.R
   140011e75:	rex xchg ebp,eax
   140011e77:	icebp  
   140011e78:	lods   al,BYTE PTR ds:[rsi]
   140011e79:	jo     0x140011e42
   140011e7b:	xchg   dh,ah
   140011e7d:	rex.WB js 0x140011eb9
   140011e80:	mov    dl,BYTE PTR [rsi+0x22]
   140011e83:	rcl    BYTE PTR [rbp*8-0x16297227],1
   140011e8a:	movsxd esi,DWORD PTR [rdx-0x4a569dc7]
   140011e90:	(bad)  
   140011e91:	dec    bl
   140011e93:	out    0x73,eax
   140011e95:	xor    QWORD PTR [rcx],r8
   140011e98:	mov    ah,0x4a
   140011e9a:	cmc    
   140011e9b:	rex.RB xchg r12d,eax
   140011e9d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011e9e:	(bad)  
   140011e9f:	(bad)  
   140011ea0:	rex.RX (bad) 
   140011ea2:	jmp    0x140011ef0
   140011ea4:	xor    DWORD PTR [rip+0xffffffffeb710154],esp        # 0x12b721ffe
   140011eaa:	(bad)
   140011ead:	xchg   r12d,eax
   140011eaf:	lods   al,BYTE PTR ds:[rsi]
   140011eb0:	sub    eax,0xf8d4d80d
   140011eb5:	sbb    al,0xfc
   140011eb7:	add    al,0x5d
   140011eb9:	rex.WRX shl BYTE PTR [rdx+0x1c],0xe7
   140011ebe:	add    DWORD PTR [rbx+rdx*2-0xb],ecx
   140011ec2:	(bad)  
   140011ec3:	xbegin 0x110c20eba
   140011ec9:	mov    cl,0xe4
   140011ecb:	jl     0x14c511930
   140011ed1:	add    al,0x71
   140011ed3:	rex.R (bad) 
   140011ed5:	pop    rbx
   140011ed6:	hlt    
   140011ed7:	cmc    
   140011ed8:	(bad)  
   140011ed9:	add    BYTE PTR [rdi],0x0
   140011edc:	movabs al,ds:0x3aaa56f35eb22dc8
   140011ee5:	outs   dx,DWORD PTR ds:[rsi]
   140011ee6:	rex.WXB movabs r11,0xdaa6e5c339ec2ca7
   140011ef0:	push   rdx
   140011ef1:	mov    BYTE PTR [rbp+0x49],cl
   140011ef4:	adc    BYTE PTR [rbp-0x4f],dl
   140011ef7:	fistp  WORD PTR [r15-0x3d7f6618]
   140011efe:	out    dx,al
   140011eff:	outs   dx,DWORD PTR ds:[rsi]
   140011f00:	(bad)  
   140011f01:	sub    DWORD PTR [rdx-0x5b],esp
   140011f04:	and    al,0x95
   140011f06:	mov    eax,DWORD PTR [rsi+0x4bc8a094]
   140011f0c:	enter  0x93a,0x76
   140011f10:	sub    cl,dl
   140011f12:	rex push rbp
   140011f14:	sti    
   140011f15:	(bad)  
   140011f16:	rex.WX
   140011f17:	xchg   rcx,rax
   140011f19:	rex shl DWORD PTR [rbp+riz*1+0x23],0xa6
   140011f1f:	xchg   esp,eax
   140011f20:	cmp    BYTE PTR [rcx+0x740d5152],0x9f
   140011f27:	(bad)  
   140011f28:	es xchg esp,eax
   140011f2a:	nop
   140011f2b:	and    eax,0x12076582
   140011f30:	add    ch,BYTE PTR [rax-0x7c3d1ddb]
   140011f36:	push   rbx
   140011f37:	rex.WB push r8
   140011f39:	and    eax,0x210412e2
   140011f3e:	addr32 (bad) 
   140011f40:	or     BYTE PTR [rcx],ch
   140011f42:	pop    rcx
   140011f43:	adc    ah,dh
   140011f45:	cdq    
   140011f46:	int    0xd2
   140011f48:	fidivr WORD PTR [rbx-0x1f9963af]
   140011f4e:	xchg   esp,eax
   140011f4f:	adc    dh,BYTE PTR [rdi+rax*2-0x61]
   140011f53:	sti    
   140011f54:	sti    
   140011f55:	out    0xcc,eax
   140011f57:	loop   0x140011f37
   140011f59:	mov    ecx,0x80d77e64
   140011f5e:	xchg   edi,eax
   140011f5f:	push   rdx
   140011f60:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011f61:	test   DWORD PTR fs:[rip+0xffffffff8000ed37],0x845796ec        # 0xc0020ca3
   140011f6c:	push   rax
   140011f6d:	rcl    DWORD PTR [rip+0x1f6d48b],1        # 0x141f7f3fe
   140011f73:	ins    BYTE PTR es:[rdi],dx
   140011f74:	in     eax,0x32
   140011f76:	pop    rsp
   140011f77:	(bad)  
   140011f78:	rex.WB jle 0x140011ff9
   140011f7b:	retf   
   140011f7c:	out    0x97,al
   140011f7e:	(bad)  
   140011f7f:	push   rdx
   140011f80:	sahf   
   140011f81:	pop    rcx
   140011f82:	(bad)  
   140011f83:	repnz (bad) 
   140011f85:	(bad)  
   140011f86:	in     al,0x85
   140011f88:	add    cl,BYTE PTR [rcx]
   140011f8a:	ror    BYTE PTR [rbx+0x60],1
   140011f8d:	cli    
   140011f8e:	fld    DWORD PTR es:[rcx]
   140011f91:	xchg   ebx,eax
   140011f92:	cmp    ch,BYTE PTR [rdi-0x79aa54c3]
   140011f98:	(bad)  
   140011f99:	add    eax,0x90c1de30
   140011f9e:	rol    BYTE PTR [rdx],0x6a
   140011fa1:	add    bl,dl
   140011fa3:	or     ah,bh
   140011fa5:	add    cl,ch
   140011fa7:	rex.WX adc BYTE PTR [rax-0x44ec0c09],0x85
   140011faf:	pop    rbx
   140011fb0:	jl     0x140011f34
   140011fb2:	xchg   esi,eax
   140011fb3:	rex.WRXB (bad) 
   140011fb5:	(bad)  
   140011fb6:	scas   eax,DWORD PTR es:[rdi]
   140011fb7:	adc    eax,0xea732b91
   140011fbc:	mov    ch,0x7
   140011fbe:	jo     0x140011f7c
   140011fc0:	enter  0x45a,0x6
   140011fc4:	in     al,0xf9
   140011fc6:	cmp    eax,0x2af0906
   140011fcb:	push   0x5969cce4
   140011fd0:	(bad)  
   140011fd1:	pop    rbp
   140011fd2:	movabs ds:0x76dcf1865c3a69b6,eax
   140011fdb:	(bad)  
   140011fdc:	(bad)  
   140011fdd:	xchg   esi,eax
   140011fde:	pop    rcx
   140011fdf:	rex.RB pop r8
   140011fe1:	rex.R pop rsp
   140011fe3:	sbb    BYTE PTR [rax+0x55542f15],dh
   140011fe9:	push   rsi
   140011fea:	popf   
   140011feb:	ret    0xcec0
   140011fee:	xor    al,0x30
   140011ff0:	mov    dh,0x2c
   140011ff2:	lea    esi,[rbp-0xcd75b1d]
   140011ff8:	and    al,0x2d
   140011ffa:	(bad)  
   140011ffb:	or     eax,0xa6455afb
   140012000:	fwait
   140012001:	add    BYTE PTR [rbp-0x6f],al
   140012004:	add    cl,BYTE PTR [rax-0x25]
   140012007:	iret   
   140012008:	sub    cl,0x4c
   14001200b:	fisub  WORD PTR [rip+0xe2663f5]        # 0x14e278406
   140012011:	int3   
   140012012:	pop    rbp
   140012013:	clc    
   140012014:	rex.WRXB or QWORD PTR [r8],r12
   140012017:	rex.RXB or eax,0xe030ed02
   14001201d:	mov    bl,0xa2
   14001201f:	scas   eax,DWORD PTR es:[rdi]
   140012020:	sub    eax,DWORD PTR [rax]
   140012022:	mov    esp,0x5f6efbe7
   140012027:	std    
   140012028:	rcr    edi,0xfd
   14001202b:	retf   0xf1d9
   14001202e:	xor    bh,bl
   140012030:	xlat   BYTE PTR ds:[rbx]
   140012031:	add    al,BYTE PTR [rax]
   140012033:	and    ebp,DWORD PTR [rdx-0x3c275af5]
   140012039:	pushf  
   14001203a:	out    0xe7,eax
   14001203c:	and    DWORD PTR [rsi-0x6c],esi
   14001203f:	sbb    dh,BYTE PTR [rsi+0x2aa1cd04]
   140012045:	(bad)  
   140012046:	(bad)  
   140012047:	xchg   ecx,eax
   140012048:	rex.WX stos QWORD PTR es:[rdi],rax
   14001204a:	jae    0x14001206d
   14001204c:	(bad)  
   14001204d:	adc    eax,0x705009a1
   140012052:	adc    edi,DWORD PTR [rsi]
   140012054:	(bad)  
   140012055:	stos   BYTE PTR es:[rdi],al
   140012056:	scas   al,BYTE PTR es:[rdi]
   140012057:	rex.B
   140012058:	rex.WB or al,0x68
   14001205b:	rex.WRB
   14001205c:	mov    eax,DWORD PTR [r10]
   14001205f:	int3   
   140012060:	adc    esi,DWORD PTR [rax]
   140012062:	adc    BYTE PTR [rax+0x5f],0x89
   140012066:	sti    
   140012067:	and    BYTE PTR [rbp+0x55],cl
   14001206a:	leave  
   14001206b:	nop
   14001206c:	and    BYTE PTR [rcx-0x40],dl
   14001206f:	rex xchg ecx,eax
   140012071:	adc    dl,BYTE PTR [rcx+0x42]
   140012074:	test   BYTE PTR [rax+riz*4],al
   140012077:	test   al,ah
   140012079:	(bad)  
   14001207a:	mov    dh,al
   14001207c:	mov    esi,edi
   14001207e:	rex.WRX xor r10b,BYTE PTR [rdx+0x2c082c82]
   140012085:	rex.R push 0x9
   140012088:	mov    al,0x64
   14001208a:	(bad)  
   14001208b:	add    dl,BYTE PTR [rdx+0x12]
   14001208e:	jno    0x140012059
   140012090:	add    BYTE PTR [rip+0x128524a1],0xa1        # 0x152864538
   140012097:	and    al,0x40
   140012099:	lods   eax,DWORD PTR ds:[rsi]
   14001209a:	rex.RXB jrcxz 0x140012090
   14001209d:	fwait
   14001209e:	(bad)  
   14001209f:	iret   
   1400120a0:	outs   dx,DWORD PTR ds:[rsi]
   1400120a1:	xchg   esi,eax
   1400120a2:	imul   eax,eax,0xfffffff8
   1400120a5:	adc    al,BYTE PTR [rcx+0x4f]
   1400120a8:	jb     0x14001204f
   1400120aa:	rex.WR xchg rbx,rax
   1400120ac:	out    dx,al
   1400120ad:	pop    rdi
   1400120ae:	rex.W (bad) 
   1400120b0:	cli    
   1400120b1:	or     DWORD PTR [rdi],esp
   1400120b3:	(bad)  
   1400120b5:	jb     0x14001207c
   1400120b7:	and    eax,0x7e62ec74
   1400120bc:	or     DWORD PTR [rsi-0x6b],ebp
   1400120bf:	nop
   1400120c0:	push   0x20
   1400120c2:	test   eax,0x4d942b28
   1400120c7:	add    al,BYTE PTR [rbx]
   1400120c9:	nop
   1400120ca:	add    DWORD PTR [rip+0x60146a03],0xa3005940        # 0x1a0158ad7
   1400120d4:	(bad)  
   1400120d5:	mov    bh,0x62
   1400120d7:	add    BYTE PTR [rdx+rcx*1+0x62],ah
   1400120db:	add    ah,BYTE PTR [rip+0x10589280]        # 0x15059b361
   1400120e1:	rex
   1400120e2:	rex.RX fld QWORD PTR [rdx+0x70aeacac]
   1400120e9:	pop    rsi
   1400120ea:	loop   0x1400120e9
   1400120ec:	sbb    eax,0xad9c10a0
   1400120f1:	push   rbp
   1400120f2:	adc    DWORD PTR [rip+0x4ca00158],esp        # 0x18ca12250
   1400120f8:	and    al,0x5a
   1400120fa:	add    DWORD PTR [rbx],eax
   1400120fc:	sub    esp,eax
   1400120fe:	add    DWORD PTR [rbp-0x12854b95],0xffffffc0
   140012105:	or     eax,0xea948744
   14001210a:	lock movabs ds:0x3fe4985a486bd9a1,al
   140012114:	xchg   edx,eax
   140012115:	mov    dh,0x11
   140012117:	shr    al,1
   140012119:	cdq    
   14001211a:	sub    al,BYTE PTR [rdi]
   14001211c:	movabs eax,ds:0x54556ca4d69c001b
   140012125:	add    BYTE PTR [rdi-0x4f5d5c30],dl
   14001212b:	sub    eax,0x87abf000
   140012130:	test   al,0x4e
   140012132:	scas   al,BYTE PTR es:[rdi]
   140012133:	out    0xe7,eax
   140012135:	adc    cl,BYTE PTR [rax-0x3cf554d4]
   14001213b:	(bad)  
   14001213c:	(bad)  
   14001213d:	pop    rdx
   14001213e:	movabs ds:0x44897426ceb85856,eax
   140012147:	frstor [rsi]
   140012149:	or     BYTE PTR [rax-0x59],0x9
   14001214d:	mov    al,0x1d
   14001214f:	or     ch,BYTE PTR [rbp-0x74]
   140012152:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012153:	jl     0x1400121b5
   140012155:	repnz add cl,BYTE PTR [rbp+0x0]
   140012159:	sub    BYTE PTR [rax],dh
   14001215b:	test   eax,0xd52b3ff2
   140012160:	(bad)  
   140012161:	rcl    bh,1
   140012163:	pop    rbx
   140012164:	add    esp,DWORD PTR [rax+0x5b]
   140012167:	out    0x3f,al
   140012169:	rex.RXB
   14001216a:	rex.WB out dx,eax
   14001216c:	(bad)  
   14001216d:	xchg   BYTE PTR [rbx+0x7be60c63],bl
   140012173:	shr    DWORD PTR [rsi],1
   140012175:	rex.WRB
   140012176:	rex.RB je 0x1400121c0
   140012179:	scas   al,BYTE PTR es:[rdi]
   14001217a:	jp     0x140012103
   14001217c:	rex.WX sub QWORD PTR [rdx+0x64],rax
   140012180:	cwde   
   140012181:	jmp    0x191022508
   140012186:	repnz lock stos BYTE PTR es:[rdi],al
   140012189:	and    al,BYTE PTR [rsp+rcx*8+0x5a]
   14001218d:	fistp  DWORD PTR [rdi-0x12]
   140012190:	rex.RB push r12
   140012192:	add    bh,BYTE PTR ds:[rdi+0x51290ddd]
   140012199:	add    eax,0x83940936
   14001219e:	int    0x2a
   1400121a0:	mov    esi,esi
   1400121a2:	xchg   ebp,eax
   1400121a3:	sub    DWORD PTR [rcx],esp
   1400121a5:	push   rax
   1400121a6:	or     dl,BYTE PTR [rax+0x2]
   1400121a9:	(bad)  
   1400121aa:	push   rsp
   1400121ab:	mov    DWORD PTR [rbx],edx
   1400121ad:	test   DWORD PTR [rax+riz*1-0x32],esp
   1400121b1:	add    dl,ch
   1400121b3:	or     DWORD PTR [rax+0x53dcccf],ebp
   1400121b9:	xor    dh,BYTE PTR [rsi+0x9]
   1400121bc:	out    dx,al
   1400121bd:	(bad)  
   1400121be:	sbb    al,0x1c
   1400121c0:	mov    ah,BYTE PTR [rdi]
   1400121c2:	(bad)  
   1400121c3:	fs sbb al,0x38
   1400121c6:	fadd   DWORD PTR [rdx+rax*4+0x1d74b2ab]
   1400121cd:	int    0xa4
   1400121cf:	loop   0x140012178
   1400121d1:	shr    DWORD PTR [rdx],0xbb
   1400121d4:	pop    r14
   1400121d6:	adc    ah,BYTE PTR [rax]
   1400121d8:	rex.WR sub BYTE PTR [rax+0x60],r12b
   1400121dc:	test   eax,0x77272584
   1400121e1:	sub    eax,0x244a9785
   1400121e6:	add    al,0x91
   1400121e8:	xchg   ebx,eax
   1400121e9:	stos   DWORD PTR es:[rdi],eax
   1400121ea:	mov    ecx,0x9d48d110
   1400121ef:	ja     0x1400121ba
   1400121f1:	out    0xc0,eax
   1400121f3:	test   BYTE PTR [rdx+0x42],bl
   1400121f6:	add    BYTE PTR [rcx+0x3d],ch
   1400121f9:	mov    bl,0xdc
   1400121fb:	cdq    
   1400121fc:	and    BYTE PTR [rdx-0x6b],dl
   1400121ff:	and    al,0x22
   140012201:	(bad)  
   140012202:	push   rbx
   140012203:	xor    BYTE PTR [rsi],ch
   140012205:	cs rex.RXB (bad) 
   140012208:	je     0x140012213
   14001220a:	xchg   BYTE PTR [rbp+0x33],dh
   14001220d:	xchg   esi,eax
   14001220e:	cdq    
   14001220f:	rol    BYTE PTR [rdx],0x30
   140012212:	sbb    rax,0x401b13a3
   140012218:	sbb    DWORD PTR [rdx+0x24],ecx
   14001221b:	stos   BYTE PTR es:[rdi],al
   14001221c:	mov    DWORD PTR [rdx],ebp
   14001221e:	and    eax,0xefb81a80
   140012223:	add    al,0x44
   140012225:	mov    DWORD PTR [rdi+0x1f],esp
   140012228:	shl    BYTE PTR [rdx],cl
   14001222a:	cmp    BYTE PTR [rdi-0x6b],ah
   14001222d:	xor    BYTE PTR [r8],spl
   140012230:	jne    0x140012287
   140012232:	pushf  
   140012233:	mov    DWORD PTR [rsp+rcx*2+0x4613fd9d],edx
   14001223a:	sbb    al,BYTE PTR [rcx-0x796cc23c]
   140012240:	adc    al,0x61
   140012242:	jmp    0x140012278
   140012244:	(bad)  
   140012245:	add    dh,ch
   140012247:	ja     0x14001222e
   140012249:	push   rdi
   14001224a:	rex.B xor eax,0xb81ea960
   140012250:	adc    al,0x7b
   140012252:	(bad)  
   140012253:	(bad)  
   140012254:	adc    BYTE PTR [rcx-0x5b],cl
   140012257:	rex
   140012258:	rex.R not edx
   14001225b:	movabs al,ds:0xab3d4cdc01314c11
   140012264:	and    al,0x2
   140012266:	pop    rax
   140012267:	rex.WXB (bad) 
   140012269:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001226a:	xchg   ebp,eax
   14001226b:	(bad)  
   14001226c:	and    edx,ecx
   14001226e:	in     al,dx
   14001226f:	(bad)  
   140012270:	(bad)  
   140012271:	(bad)  
   140012272:	xor    eax,0x2ac066bc
   140012277:	(bad)  
   140012278:	xor    eax,DWORD PTR [rdx]
   14001227a:	test   DWORD PTR [rbp+0x39],ebp
   14001227d:	and    BYTE PTR ss:[rsi-0x1a3adfed],ch
   140012284:	rex je 0x140012234
   140012287:	or     eax,ebp
   140012289:	(bad)  
   14001228a:	jrcxz  0x140012302
   14001228c:	addr32 fld st(6)
   14001228f:	cs xchg ebx,eax
   140012291:	ss jrcxz 0x14001225b
   140012294:	int3   
   140012295:	pop    rsi
   140012296:	mov    dh,0x3e
   140012298:	mov    cl,0xd4
   14001229a:	jg     0x1400122ea
   14001229c:	mov    WORD PTR [rdi],ds
   14001229e:	call   0x13805118e
   1400122a3:	jg     0x140012283
   1400122a5:	icebp  
   1400122a6:	repnz pop rdi
   1400122a8:	cld    
   1400122a9:	rcr    edi,0xfd
   1400122ac:	bnd call QWORD PTR [rsp+rcx*4-0x75]
   1400122b1:	mov    ebp,0x7cc18aaa
   1400122b6:	(bad)  
   1400122b7:	test   BYTE PTR [rdi],0xf4
   1400122ba:	rex.RB jne 0x14001231c
   1400122bd:	and    DWORD PTR [rax+rcx*1+0x4e28d164],edx
   1400122c4:	xchg   edx,eax
   1400122c5:	enter  0x5426,0x86
   1400122c9:	add    BYTE PTR [rdx+0x52],dh
   1400122cc:	imul   ecx,DWORD PTR [rcx+0x55],0x54
   1400122d0:	fisttp QWORD PTR [rbx+rdx*8+0x678588aa]
   1400122d7:	jp     0x14001228e
   1400122d9:	gs xor al,0x60
   1400122dc:	xor    al,0x7e
   1400122de:	int    0xbe
   1400122e0:	xchg   ebx,eax
   1400122e1:	test   al,0x20
   1400122e3:	xor    BYTE PTR [rcx],ch
   1400122e5:	mov    DWORD PTR [rcx+0x26],esi
   1400122e8:	cmp    al,0x19
   1400122ea:	adc    BYTE PTR [rbx+0x46702692],dl
   1400122f0:	pop    rbp
   1400122f1:	add    ah,dl
   1400122f3:	push   rsp
   1400122f4:	rex sub DWORD PTR [rax+0x3a89008c],ecx
   1400122fb:	enterw 0x9440,0x29
   140012300:	push   rcx
   140012301:	lahf   
   140012302:	fdiv   st,st(4)
   140012304:	mov    DWORD PTR [rax],ebp
   140012306:	jne    0x1400122d6
   140012308:	xor    ecx,DWORD PTR [rbp+0x9]
   14001230b:	int3   
   14001230c:	and    BYTE PTR [rsi+0x36c4c4],0xb
   140012313:	mov    ecx,0xf4227cac
   140012318:	sub    bl,bl
   14001231a:	mov    edx,0x394b8c74
   14001231f:	sub    DWORD PTR [rcx],esi
   140012321:	or     DWORD PTR [rbx+rdx*1+0x25a912c3],ebx
   140012328:	jne    0x140012317
   14001232a:	and    ebp,DWORD PTR [rax+0x9]
   14001232d:	(bad)  
   14001232e:	xlat   BYTE PTR ds:[rbx]
   14001232f:	sub    ah,BYTE PTR [rax]
   140012331:	mov    al,0xe2
   140012333:	pop    rsi
   140012334:	lods   al,BYTE PTR ds:[rsi]
   140012335:	dec    ebp
   140012337:	xchg   BYTE PTR [rsp+rbp*4],ch
   14001233a:	mov    esp,DWORD PTR [rip+0xffffffff9d6140c0]        # 0xdd626400
   140012340:	fdivr  st(1),st
   140012342:	out    dx,al
   140012343:	add    eax,0xb6c54120
   140012349:	out    dx,al
   14001234a:	xchg   ecx,eax
   14001234b:	popf   
   14001234c:	xor    edx,DWORD PTR [rax+0x1319a4e1]
   140012352:	cmp    DWORD PTR [rbp-0x4d7afbf6],esp
   140012358:	icebp  
   140012359:	xchg   edx,eax
   14001235a:	rol    DWORD PTR [rcx+0x55d3d51c],1
   140012360:	adc    eax,0x8464aac
   140012365:	lods   al,BYTE PTR ds:[rsi]
   140012366:	or     dh,BYTE PTR [rdi]
   140012368:	movabs ds:0xaa5a40130380294d,eax
   140012371:	icebp  
   140012372:	loop   0x14001230f
   140012374:	add    DWORD PTR [rax],ebx
   140012376:	and    dl,BYTE PTR [rax-0x59f7d958]
   14001237c:	test   BYTE PTR [rcx],cl
   14001237e:	sub    cl,BYTE PTR [rsi-0x4fcf55f9]
   140012384:	mov    esp,edx
   140012386:	add    DWORD PTR [rdx+0x202b3a8],0xffffffe8
   14001238d:	or     eax,eax
   14001238f:	loop   0x14001239f
   140012391:	icebp  
   140012392:	es cwde 
   140012394:	mov    bh,0xc2
   140012396:	add    DWORD PTR [rax],ebp
   140012398:	sbb    DWORD PTR [rdx+rdi*4+0x51],0x660cf1c8
   1400123a0:	(bad)  
   1400123a1:	xchg   esp,eax
   1400123a2:	sub    BYTE PTR [rax+0x5e175043],al
   1400123a8:	(bad)  
   1400123a9:	push   rbx
   1400123aa:	cmp    ebp,0x55063e27
   1400123b0:	sub    esp,DWORD PTR [rdi+0x1fd401e4]
   1400123b6:	and    eax,ecx
   1400123b8:	xchg   esp,eax
   1400123b9:	test   DWORD PTR [rsi],edi
   1400123bb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400123bc:	sahf   
   1400123bd:	(bad)  
   1400123be:	int    0x92
   1400123c0:	neg    DWORD PTR [rbp+0x7da43667]
   1400123c6:	mov    al,0xf1
   1400123c8:	add    esp,DWORD PTR [rbx+0x77]
   1400123cb:	xor    DWORD PTR [rsi-0x69],edi
   1400123ce:	mov    edx,0x73c7831f
   1400123d3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400123d4:	scas   eax,DWORD PTR es:[rdi]
   1400123d5:	(bad)  
   1400123d6:	add    BYTE PTR [rax],cl
   1400123d8:	add    BYTE PTR [rsi],bh
   1400123da:	cmc    
   1400123db:	enter  0x7f5f,0xd3
   1400123df:	rcr    ebx,0xee
   1400123e2:	jp     0x140012398
   1400123e4:	sub    al,0xca
   1400123e6:	xchg   ebp,eax
   1400123e7:	int    0x55
   1400123e9:	mov    esi,DWORD PTR [rbx+rcx*2]
   1400123ec:	xchg   ecx,eax
   1400123ed:	fs (bad) 
   1400123ef:	xor    DWORD PTR es:[rax],eax
   1400123f2:	xor    BYTE PTR [rax],dl
   1400123f4:	(bad)  
   1400123f5:	mov    ebp,0xa15a2c0a
   1400123fa:	fwait
   1400123fb:	sbb    esp,edi
   1400123fd:	xor    al,0x11
   1400123ff:	lods   eax,DWORD PTR ds:[rsi]
   140012400:	rex.XB jne 0x1400123a0
   140012403:	mov    BYTE PTR [rsi-0x54],al
   140012406:	mul    BYTE PTR [rdx]
   140012408:	rex.W
   140012409:	rex.WXB mov BYTE PTR [r8+r10*2],dl
   14001240d:	sub    eax,0x5554b6a1
   140012412:	xor    edi,0x263c36c4
   140012418:	movabs ds:0xaa77dbcd5859de44,al
   140012421:	imul   ecx,DWORD PTR [rcx],0xa85c4a00
   140012427:	stos   BYTE PTR es:[rdi],al
   140012428:	ja     0x140012414
   14001242a:	cmp    DWORD PTR [rip+0xffffffffc83130b7],0xfffffffd        # 0x1083254e8
   140012431:	add    dl,BYTE PTR es:[rax+0x20ab3310]
   140012438:	add    eax,0x9ccaa51
   14001243d:	adc    DWORD PTR [rbx+0x33],edi
   140012440:	or     DWORD PTR [rip+0x64215388],0x7111ee20        # 0x1a42277d2
   14001244a:	(bad)
   14001244e:	rex.WX adc rax,0x10600094
   140012454:	(bad)  
   140012455:	in     al,0x81
   140012457:	test   BYTE PTR [rcx-0x777b7ff4],cl
   14001245d:	jge    0x14001248d
   14001245f:	(bad)  
   140012460:	mov    ebx,0xd70863b1
   140012465:	fs es (bad) 
   140012468:	or     eax,0x500103c5
   14001246d:	rex.X leave 
   14001246f:	adc    bh,BYTE PTR [rax+0x110aa5b4]
   140012475:	xchg   edi,eax
   140012476:	push   rax
   140012477:	sub    BYTE PTR [rcx+0x27],bl
   14001247a:	sbb    eax,0x15515008
   14001247f:	and    bl,al
   140012481:	(bad)  
   140012482:	push   rcx
   140012483:	sub    cl,BYTE PTR [rip+0x25aee02]        # 0x1425c128b
   140012489:	xor    BYTE PTR [rcx],ch
   14001248b:	fcom   QWORD PTR [rax+rcx*1]
   14001248e:	xchg   DWORD PTR [rip+0x2c2fae],edx        # 0x1402d5442
   140012494:	mov    al,0x8b
   140012496:	ja     0x14001250a
   140012498:	xchg   ebp,eax
   140012499:	mov    ah,0xe2
   14001249b:	and    dl,BYTE PTR [rsp+rax*2-0x57f90316]
   1400124a2:	add    r14,QWORD PTR [rip+0x8106250]        # 0x1481186f9
   1400124a9:	(bad)  
   1400124aa:	mov    DWORD PTR [rax],r11d
   1400124ad:	movabs ds:0x304064d99c0c8089,al
   1400124b6:	or     al,0x66
   1400124b8:	test   al,0x1a
   1400124ba:	addr32 push rbp
   1400124bc:	adc    BYTE PTR [rbp+0x7989c860],0x26
   1400124c3:	rol    al,0x38
   1400124c6:	jge    0x1400124a7
   1400124c8:	(bad)  
   1400124c9:	push   rsp
   1400124ca:	(bad)  
   1400124cb:	sub    bh,bh
   1400124cd:	add    DWORD PTR [rsi+rcx*4],0x3833c2c3
   1400124d4:	mov    ch,0xd6
   1400124d6:	movabs eax,ds:0x5550aae75522580
   1400124df:	mov    DWORD PTR [rdx+rbx*2+0x28b9792],eax
   1400124e6:	adc    bh,dl
   1400124e8:	mov    edi,0xb4349a23
   1400124ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400124ee:	rex.WR (bad) 
   1400124f0:	stos   BYTE PTR es:[rdi],al
   1400124f1:	mov    esp,0x8a3e86
   1400124f6:	and    eax,0x855c7ad1
   1400124fb:	jae    0x14001252c
   1400124fd:	out    0x8c,eax
   1400124ff:	pushf  
   140012500:	rex.X sar dl,cl
   140012503:	(bad)  
   140012505:	loop   0x1400124be
   140012507:	and    eax,0x1fdad17d
   14001250c:	(bad)  
   14001250e:	pop    rdi
   14001250f:	adc    edx,ebx
   140012511:	(bad)  
   140012512:	je     0x140012569
   140012514:	movabs ds:0xbdf8b81fe9fc1f00,al
   14001251d:	push   rcx
   14001251f:	iret   
   140012520:	outs   dx,DWORD PTR ds:[rsi]
   140012521:	pop    rcx
   140012522:	fidiv  WORD PTR [rbx-0x8]
   140012525:	movsxd ebx,DWORD PTR [rcx-0x6e]
   140012528:	mov    ebp,0x28171f3c
   14001252d:	jb     0x140012546
   14001252f:	cmc    
   140012530:	and    eax,DWORD PTR [rax]
   140012532:	xor    DWORD PTR es:[rcx],ebx
   140012535:	xor    DWORD PTR [rdx+0x66],edx
   140012538:	pop    rsi
   140012539:	(bad)  
   14001253a:	loop   0x14001253f
   14001253c:	ins    BYTE PTR es:[rdi],dx
   14001253d:	enter  0x7312,0xc9
   140012541:	int3   
   140012542:	and    eax,0x2ddeb138
   140012547:	jnp    0x1400124e7
   140012549:	add    BYTE PTR [rdx+0x3a00cfa0],0x26
   140012550:	sub    edi,ecx
   140012552:	mov    cl,0xd8
   140012554:	push   rbp
   140012555:	push   rdx
   140012556:	mov    ebx,0xfc74b62a
   14001255b:	(bad)  
   14001255c:	add    al,ah
   14001255e:	(bad)  
   14001255f:	test   BYTE PTR [rbx],ah
   140012561:	imul   ebx,DWORD PTR [rcx+0x5ed229c8],0x5a
   140012568:	ret    0x173b
   14001256b:	adc    eax,0xcb4faa80
   140012570:	and    eax,DWORD PTR [rax]
   140012572:	push   rdx
   140012573:	or     BYTE PTR [rcx],al
   140012575:	or     al,0x22
   140012577:	add    eax,0x310a4331
   14001257c:	cs jo  0x1400125ce
   14001257f:	rex.WR
   140012580:	rex.WRX or al,0x91
   140012583:	xor    dl,BYTE PTR [rcx]
   140012585:	adc    al,0x86
   140012587:	cwde   
   140012588:	pop    rcx
   140012589:	sbb    eax,0x9c4a2753
   14001258e:	cmp    BYTE PTR [rax],0x55
   140012591:	(bad)  
   140012592:	add    DWORD PTR [rbx+0x2],esi
   140012595:	push   rax
   140012596:	or     ah,dl
   140012598:	adc    al,0xa0
   14001259a:	(bad)  
   14001259b:	mov    dl,bh
   14001259d:	retf   0x819c
   1400125a0:	cmp    BYTE PTR [rip+0x69d4e250],ah        # 0x1a9d607f6
   1400125a6:	rex.WRX add BYTE PTR [rax],r11b
   1400125a9:	and    dh,BYTE PTR [rdx]
   1400125ab:	and    BYTE PTR [rdx+0x8],cl
   1400125ae:	outs   dx,BYTE PTR ds:[rsi]
   1400125af:	fwait
   1400125b0:	rex.XB and DWORD PTR [r8],eax
   1400125b3:	or     BYTE PTR [rbx-0x46],0x75
   1400125b7:	data16 mov dl,0x38
   1400125ba:	mov    esi,0x80418c74
   1400125bf:	and    eax,0x49510585
   1400125c4:	(bad)  
   1400125c5:	sub    DWORD PTR [rdx+0x5403ff3],0xde7502a4
   1400125cf:	or     esi,DWORD PTR [rdx-0x1e]
   1400125d2:	(bad)  
   1400125d3:	imul   ecx,DWORD PTR [rsi+0xe],0x5e6abc58
   1400125da:	imul   edx,ebx,0x3f26f8de
   1400125e0:	cmp    eax,0x558483e
   1400125e5:	mov    al,al
   1400125e7:	rex.WRX push rbp
   1400125e9:	movabs al,ds:0xf51970844ba16a68
   1400125f2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400125f3:	push   rax
   1400125f4:	rex.XB and BYTE PTR [r14+0x21972192],al
   1400125fb:	int3   
   1400125fc:	(bad)  
   1400125fe:	shr    BYTE PTR [rdx],0x92
   140012601:	and    BYTE PTR [rax+0x54],0x91
   140012605:	(bad)  
   140012606:	enter  0x9110,0x51
   14001260a:	(bad)  
   14001260b:	movabs ds:0x315d0055e67224,eax
   140012614:	adc    ecx,DWORD PTR [rsi+riz*1+0x2d768d70]
   14001261b:	repnz lea edx,[rdi+rax*1]
   14001261f:	gs stos BYTE PTR es:[rdi],al
   140012621:	(bad)  
   140012622:	cli    
   140012623:	rex adc eax,0xb888a802
   140012629:	jrcxz  0x1400125d2
   14001262b:	sub    eax,0x4ca02dc7
   140012630:	add    eax,0x213e43a5
   140012635:	push   rcx
   140012636:	(bad)  
   140012637:	adc    al,0x20
   140012639:	adc    BYTE PTR [rax],dh
   14001263b:	stos   BYTE PTR es:[rdi],al
   14001263c:	stos   BYTE PTR es:[rdi],al
   14001263d:	and    DWORD PTR [rdi+0x54e2675],edx
   140012643:	xchg   edi,eax
   140012644:	mov    DWORD PTR [rbx],eax
   140012646:	ror    ecx,1
   140012648:	xchg   DWORD PTR [rbp-0x67],ecx
   14001264b:	(bad)  
   14001264c:	xchg   esi,eax
   14001264d:	(bad)  
   14001264e:	sub    ecx,0x6db40003
   140012654:	cli    
   140012655:	lock mov bh,0x44
   140012658:	fistp  WORD PTR [rdi+0x17]
   14001265b:	(bad)  
   14001265c:	pcmpeqb mm6,QWORD PTR [rip+0xffffffffe0004000]        # 0x120016663
   140012663:	(bad)  
   140012664:	fdivrp st(5),st
   140012666:	xchg   esi,eax
   140012667:	push   rbp
   140012668:	add    BYTE PTR [rdi-0xd405806],ch
   14001266e:	icebp  
   14001266f:	(bad)  
   140012670:	xor    bl,BYTE PTR [rbx-0x60285901]
   140012676:	jg     0x1400126c5
   140012678:	(bad)  
   140012679:	cmc    
   14001267a:	not    DWORD PTR [rdx]
   14001267c:	fwait
   14001267d:	mov    esi,0x60291088
   140012682:	or     ebp,DWORD PTR [rbx+0x8]
   140012685:	mov    BYTE PTR fs:[rdi+rdx*1+0x7514e095],bl
   14001268d:	and    dl,BYTE PTR [rdx+0x36]
   140012690:	mov    esp,0xcc4a440b
   140012695:	mov    ?,WORD PTR [rdi]
   140012697:	rex.WRB pop QWORD PTR [r11-0x61563a5b]
   14001269e:	add    DWORD PTR [rsp+rcx*8+0x2a],esi
   1400126a2:	out    dx,al
   1400126a3:	pop    rbx
   1400126a4:	in     al,dx
   1400126a5:	xchg   ebx,eax
   1400126a6:	xchg   esp,eax
   1400126a7:	(bad)  
   1400126a8:	or     ch,ah
   1400126aa:	clc    
   1400126ab:	jmp    0x161055958
   1400126b0:	cmp    BYTE PTR [rax],dl
   1400126b2:	push   rbp
   1400126b3:	rex.WB pop r9
   1400126b5:	jge    0x1400126dc
   1400126b7:	ins    DWORD PTR es:[rdi],dx
   1400126b8:	and    DWORD PTR [rdx],esi
   1400126ba:	jle    0x1400126dd
   1400126bc:	rex.WB push r9
   1400126be:	push   rdx
   1400126bf:	adc    DWORD PTR [rax],edx
   1400126c1:	imul   ebx,DWORD PTR [rcx-0x7],0x58b1d59f
   1400126c8:	xor    BYTE PTR [rsi+0x110c28a5],ch
   1400126ce:	rex.XB sbb al,0x23
   1400126d1:	clc    
   1400126d2:	rex.X jle 0x140012721
   1400126d5:	retf   0x5ec4
   1400126d8:	cld    
   1400126d9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400126da:	and    BYTE PTR [rsi-0x40],cl
   1400126dd:	mov    BYTE PTR fs:[rax],bh
   1400126e0:	and    eax,0x2654ab7
   1400126e5:	loop   0x1400126fb
   1400126e7:	sub    DWORD PTR [rax-0x3b9aefcd],r9d
   1400126ee:	es add edx,eax
   1400126f1:	(bad)  
   1400126f2:	(bad)  
   1400126f4:	loop   0x1400126ba
   1400126f6:	rex.X adc esp,DWORD PTR [rdi-0x55]
   1400126fa:	ret    
   1400126fb:	adc    ch,dl
   1400126fd:	stos   BYTE PTR es:[rdi],al
   1400126fe:	(bad)  
   1400126ff:	sti    
   140012700:	sub    DWORD PTR [rdi+0x6f3b545e],edi
   140012706:	mov    esp,0x9530b483
   14001270b:	pop    rdx
   14001270c:	pop    rcx
   14001270d:	mov    ecx,0x1756a754
   140012712:	rex.WR
   140012713:	fs (bad) 
   140012715:	test   ecx,edi
   140012717:	rex.R adc eax,0xa81203a5
   14001271d:	cmp    ch,cl
   14001271f:	stos   BYTE PTR es:[rdi],al
   140012720:	add    al,0xb5
   140012722:	lock (bad) 
   140012724:	cmp    BYTE PTR [rdx],ch
   140012726:	rol    BYTE PTR [rcx],0x0
   140012729:	push   rsi
   14001272a:	iret   
   14001272b:	adc    BYTE PTR [rdx+0x44],cl
   14001272e:	adc    dh,BYTE PTR [rdx]
   140012730:	std    
   140012731:	pop    rbp
   140012732:	sub    dh,BYTE PTR [rdx]
   140012734:	movabs al,ds:0x87d766b96e419aec
   14001273d:	push   rax
   14001273e:	addr32 cld 
   140012740:	rex
   140012741:	rex.W
   140012742:	rex.RB or eax,0x1739d988
   140012748:	xchg   ebp,eax
   140012749:	rex.WB fstp QWORD PTR [r11+0x4a06ab53]
   140012750:	rex.RX mov BYTE PTR [rdx-0x27facd6d],r8b
   140012757:	adc    BYTE PTR [rcx+0x42],ch
   14001275a:	or     al,BYTE PTR [rsi]
   14001275c:	xor    DWORD PTR [rcx+0x1a92570b],edx
   140012762:	(bad)  
   140012764:	(bad)  
   140012765:	xor    ch,dh
   140012767:	(bad)  
   140012768:	adc    eax,ecx
   14001276a:	and    BYTE PTR [rdx],bl
   14001276c:	hlt    
   14001276d:	(bad)  
   14001276e:	and    DWORD PTR [rsi-0x45188635],edi
   140012774:	xchg   DWORD PTR [rdi],edx
   140012776:	test   DWORD PTR [rcx+riz*2-0x6b],ecx
   14001277a:	rex.WXB add rax,0x5a5aaa97
   140012780:	(bad)  
   140012781:	rex.X push rbp
   140012783:	add    al,0x96
   140012785:	sub    al,0x39
   140012787:	out    0xa5,eax
   140012789:	mov    BYTE PTR [rbx+0x0],dh
   14001278c:	rex.XB mov r10d,0x6dbf8e2
   140012792:	sub    BYTE PTR [rsi+0x2a],0x36
   140012796:	(bad)  
   140012797:	pop    rbp
   140012798:	rex.X mov dil,0xb4
   14001279b:	cmovl  ebx,DWORD PTR [rip+0x6cbaf087]        # 0x1acbc1829
   1400127a2:	sti    
   1400127a3:	xor    bh,BYTE PTR [rdx]
   1400127a5:	(bad)  
   1400127a6:	jmp    0x14001276e
   1400127a8:	clc    
   1400127a9:	sub    DWORD PTR [rsi+0x902266],0xfb3f7dc0
   1400127b3:	add    ebx,DWORD PTR [rdi]
   1400127b5:	add    edx,ecx
   1400127b7:	and    eax,DWORD PTR [rax+0x4ec50ede]
   1400127bd:	(bad)  
   1400127be:	rex.WRX neg bpl
   1400127c1:	cmc    
   1400127c2:	test   DWORD PTR [rsi+0x73b8b64],0xd37d378b
   1400127cc:	rex.WXB
   1400127cd:	rex.WR fimul DWORD PTR [rbx+0x76]
   1400127d1:	sbb    al,0x7c
   1400127d3:	shr    DWORD PTR [rbx],1
   1400127d5:	(bad)  
   1400127d6:	leave  
   1400127d7:	(bad)  
   1400127d8:	pop    rcx
   1400127d9:	mov    edi,0xd4ea03bf
   1400127de:	rex.WB sub rax,0x738a0e4b
   1400127e4:	xor    eax,0x36009e0d
   1400127e9:	(bad)  
   1400127ea:	(bad)  
   1400127eb:	mov    ah,0x9f
   1400127ed:	or     al,0x41
   1400127ef:	rex
   1400127f0:	rex.RXB shr r12b,0x4
   1400127f4:	sub    eax,0x66011
   1400127f9:	je     0x14001283f
   1400127fb:	shl    BYTE PTR [rbx+0x2a44bd04],1
   140012801:	stos   DWORD PTR es:[rdi],eax
   140012802:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012803:	mov    edx,0xb9576a4a
   140012808:	int3   
   140012809:	iret   
   14001280a:	rex.X
   14001280b:	gs pop rsp
   14001280d:	sbb    DWORD PTR [rax+0x65530422],ebx
   140012813:	jb     0x14001284e
   140012815:	push   rdx
   140012816:	out    dx,eax
   140012817:	jo     0x14001284d
   140012819:	push   rax
   14001281a:	(bad)  
   14001281b:	xor    eax,0xe9420154
   140012820:	and    eax,0xef504974
   140012825:	(bad)  
   140012826:	jo     0x14001287a
   140012828:	adc    al,0x7e
   14001282a:	(bad)  
   14001282b:	xor    edx,DWORD PTR [rcx]
   14001282d:	xor    DWORD PTR [rcx+rdi*4],ebp
   140012830:	jns    0x140012840
   140012832:	(bad)  
   140012833:	push   rdx
   140012834:	or     dh,BYTE PTR [eax]
   140012837:	sbb    BYTE PTR [rcx],cl
   140012839:	enter  0x2b0,0xa9
   14001283d:	xor    ebp,DWORD PTR [rbx]
   14001283f:	cmp    BYTE PTR [rcx],ah
   140012841:	(bad)  
   140012842:	jrcxz  0x14001286a
   140012844:	and    DWORD PTR [rax-0x56],edx
   140012847:	(bad)  
   140012848:	sbb    DWORD PTR [rax+0x194179bc],ebx
   14001284e:	adc    DWORD PTR [rdi+0x60434e2],esp
   140012854:	jae    0x140012858
   140012856:	(bad)  
   140012857:	(bad)
   14001285b:	nop
   14001285c:	add    DWORD PTR [rbx],edi
   14001285e:	in     eax,dx
   14001285f:	rol    DWORD PTR [rdx+0x7b],0x20
   140012863:	sub    BYTE PTR [rbx+0x5a838b42],al
   140012869:	sub    eax,0x61725850
   14001286e:	mov    ecx,0x5729ce12
   140012873:	test   eax,0xd4a6e495
   140012878:	sub    esp,DWORD PTR [rcx+0x155bd52]
   14001287e:	or     edx,DWORD PTR [rax+0x240ef3f5]
   140012884:	mov    BYTE PTR [rdx+0x78],ah
   140012887:	int    0x97
   140012889:	jge    0x140012813
   14001288b:	rex.RX cmp al,0xe
   14001288e:	add    al,0xf5
   140012890:	retf   0x9532
   140012893:	push   rsp
   140012894:	add    eax,0x6544aa03
   140012899:	(bad)  
   14001289a:	xor    esi,DWORD PTR [rax]
   14001289c:	pop    rax
   14001289d:	and    DWORD PTR [rcx+riz*1],ecx
   1400128a0:	addr32 (bad) 
   1400128a2:	xchg   ebx,eax
   1400128a3:	cmp    BYTE PTR [rbp-0x392e163f],cl
   1400128a9:	xor    esp,DWORD PTR [rdx+rax*1-0x15]
   1400128ad:	rex.WRB
   1400128ae:	or     eax,DWORD PTR es:[rbx+0x4c]
   1400128b2:	rex.RX mov DWORD PTR [rcx+0xc2c128d],r11d
   1400128b9:	adc    ah,BYTE PTR [rdx]
   1400128bb:	push   rdx
   1400128bc:	(bad)  
   1400128bd:	pop    rdi
   1400128be:	lahf   
   1400128bf:	(bad)  
   1400128c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400128c1:	xchg   r10,rax
   1400128c3:	sub    al,0xb2
   1400128c5:	xor    edx,ecx
   1400128c7:	xchg   BYTE PTR [rip+0x25c025c4],al        # 0x165c14e91
   1400128cd:	rol    BYTE PTR [rip+0xffffffff88854a94],0x28        # 0xc8867368
   1400128d4:	pop    rcx
   1400128d5:	(bad)  
   1400128d6:	sub    eax,0xaa60f0ad
   1400128db:	or     DWORD PTR [rax+0x4bdc818d],esi
   1400128e1:	rex.WR out dx,eax
   1400128e3:	cdq    
   1400128e4:	cmc    
   1400128e5:	jl     0x140012949
   1400128e7:	cmp    eax,DWORD PTR [rcx]
   1400128e9:	jrcxz  0x14001291a
   1400128eb:	std    
   1400128ec:	(bad)  
   1400128ed:	iret   
   1400128ee:	jl     0x1400128f6
   1400128f0:	mov    ch,0xd4
   1400128f2:	outs   dx,BYTE PTR ds:[rsi]
   1400128f3:	jnp    0x1400128e8
   1400128f5:	fcmovnbe st,st(2)
   1400128f7:	mov    esi,0xb7f3c49d
   1400128fc:	loop   0x1400128d6
   1400128fe:	jnp    0x140012936
   140012900:	je     0x14001292f
   140012902:	xor    al,BYTE PTR [rcx]
   140012904:	sub    eax,0x78a017a0
   140012909:	add    al,0x44
   14001290b:	or     ebp,DWORD PTR [rdx]
   14001290d:	sar    BYTE PTR [rdi],cl
   14001290f:	jae    0x1400128f0
   140012911:	xchg   DWORD PTR [rsi],ebx
   140012913:	(bad)  
   140012914:	shl    bl,1
   140012916:	and    al,0xbd
   140012918:	xchg   edi,eax
   140012919:	rex.WR rcl BYTE PTR [rbx-0x4f],cl
   14001291d:	sbb    DWORD PTR [rdi],esp
   14001291f:	pop    rcx
   140012920:	rex.RX (bad) 
   140012922:	cwde   
   140012923:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012924:	fwait
   140012925:	out    dx,al
   140012926:	fdivr  DWORD PTR [rip+0xffffffffaec8ffbf]        # 0xeeca28eb
   14001292c:	fimul  WORD PTR [rsi-0x5a4d4403]
   140012932:	popf   
   140012933:	mov    ebx,0xedba1e76
   140012938:	gs rex.WB scas rax,QWORD PTR es:[rdi]
   14001293b:	xlat   BYTE PTR ds:[rbx]
   14001293c:	out    dx,eax
   14001293d:	movhps xmm1,QWORD PTR [rsi-0x4f6dced0]
   140012944:	out    dx,al
   140012945:	ins    BYTE PTR es:[rdi],dx
   140012946:	cwde   
   140012947:	rex.WRB out 0xbd,eax
   14001294a:	retf   0x2bc1
   14001294d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001294e:	rex.WR jge 0x140012961
   140012951:	sbb    eax,0x511d101
   140012956:	rex.XB mov DWORD PTR [r8],esp
   140012959:	pushf  
   14001295a:	add    ah,BYTE PTR [rsi-0x179ffff1]
   140012960:	xchg   ebx,eax
   140012961:	add    al,al
   140012963:	push   0xffffffffffffff9f
   140012965:	add    al,0x74
   140012967:	rex.R push rdx
   140012969:	sahf   
   14001296a:	xor    esp,DWORD PTR [rdx+0x57]
   14001296d:	and    ebp,esp
   14001296f:	push   0xffffffffffffff88
   140012971:	mov    gs,WORD PTR [rcx+0x6a858108]
   140012977:	mov    edi,0x141cd3bc
   14001297c:	add    BYTE PTR [rcx+rdx*2-0x6c0feffc],cl
   140012983:	xor    ch,BYTE PTR [rdx]
   140012985:	rex.RXB xchg r11d,eax
   140012987:	not    DWORD PTR [rbx+0x78]
   14001298a:	icebp  
   14001298b:	int    0x64
   14001298d:	rex.B
   14001298e:	rex.WX xchg rsi,rax
   140012990:	cwde   
   140012991:	mov    BYTE PTR [rcx],dl
   140012993:	rol    BYTE PTR [rcx-0x6b9eab77],0x60
   14001299a:	rex
   14001299b:	add    BYTE PTR fs:[rsi+0x1a],dh
   14001299f:	test   bl,bh
   1400129a1:	sbb    BYTE PTR [rax],dl
   1400129a3:	adc    ah,BYTE PTR [rbp+0x4e]
   1400129a6:	adc    eax,0xa1ed7994
   1400129ab:	rex.RXB (bad) 
   1400129ad:	cmp    eax,0x285a6761
   1400129b2:	xchg   ecx,eax
   1400129b3:	(bad)  
   1400129b4:	(bad)  
   1400129b6:	loop   0x140012938
   1400129b8:	(bad)  
   1400129b9:	adc    BYTE PTR [rbx+0x42],dl
   1400129bc:	jo     0x140012988
   1400129be:	adc    ebx,0xffffffb8
   1400129c1:	adc    eax,0x53b8e44c
   1400129c6:	pop    rbp
   1400129c7:	xchg   edx,eax
   1400129c8:	cmpps  xmm4,XMMWORD PTR [rax],0x55
   1400129cc:	mov    ch,0xc4
   1400129ce:	sub    BYTE PTR [rip+0x495928],dl        # 0x1404a82fc
   1400129d4:	xchg   esp,eax
   1400129d5:	(bad)  
   1400129d6:	mov    bh,0x60
   1400129d8:	lods   al,BYTE PTR ds:[rsi]
   1400129d9:	nop
   1400129da:	or     al,BYTE PTR [rcx-0x57b6f454]
   1400129e0:	and    BYTE PTR [rax+0x2d],0xa0
   1400129e4:	or     al,0xaa
   1400129e6:	(bad)  
   1400129e7:	pop    rax
   1400129e8:	jns    0x111e80e7b
   1400129ee:	or     DWORD PTR [rcx+0x30d11bdc],0x8421c033
   1400129f8:	or     BYTE PTR [rax-0x43e50428],0x3
   1400129ff:	movabs al,ds:0xceaaa301589422d2
   140012a08:	in     al,0x2
   140012a0a:	sbb    DWORD PTR [rip+0xffffffffd6312261],edx        # 0x116324c71
   140012a10:	(bad)  
   140012a11:	rex.B
   140012a12:	rex.W je 0x140012a21
   140012a15:	xchg   esi,eax
   140012a16:	xchg   esp,eax
   140012a17:	(bad)  
   140012a18:	add    DWORD PTR [rsi+riz*4],ecx
   140012a1b:	fcmovnu st,st(6)
   140012a1d:	mov    dl,BYTE PTR [rdx+rbp*2]
   140012a20:	adc    al,BYTE PTR [rdx-0x7b6d66b7]
   140012a26:	rex.WB adc al,BYTE PTR [r14+0x7c28ab32]
   140012a2d:	pop    rsp
   140012a2e:	leave  
   140012a2f:	and    eax,0xa3d339fa
   140012a34:	jae    0x140012a98
   140012a36:	rcl    DWORD PTR [rbp+0x5feefaab],cl
   140012a3c:	sbb    bl,ah
   140012a3e:	(bad)  
   140012a3f:	test   eax,0xd89b9f2f
   140012a44:	rex.WRX jbe 0x140012ac3
   140012a47:	(bad)  
   140012a48:	es and eax,0x6fb6db79
   140012a4e:	(bad)  
   140012a4f:	icebp  
   140012a50:	test   BYTE PTR [rdi+0x18],cl
   140012a53:	cmp    dl,BYTE PTR [rdi-0x7b]
   140012a56:	icebp  
   140012a57:	add    ebx,DWORD PTR [rbp+0x75]
   140012a5a:	add    BYTE PTR [rax-0x4],bh
   140012a5d:	(bad)  
   140012a5e:	jno    0x140012a65
   140012a60:	mov    al,0x71
   140012a62:	ror    DWORD PTR [rbp+0x3bbcb787],cl
   140012a68:	sub    BYTE PTR [rax-0x5e],bh
   140012a6b:	lea    edx,[rbp+rax*4+0x2912e941]
   140012a72:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012a73:	enter  0x33,0xbd
   140012a77:	addr32 (bad) 
   140012a79:	cli    
   140012a7a:	je     0x140012af2
   140012a7c:	loope  0x140012a49
   140012a7e:	lahf   
   140012a7f:	in     eax,dx
   140012a80:	xchg   ebx,eax
   140012a81:	xor    DWORD PTR [rbp-0x37],edi
   140012a84:	repz rex.WR movabs rax,ds:0xc9001256a7a6363d
   140012a8f:	lea    ebp,[rdi-0x4]
   140012a92:	(bad)  
   140012a93:	ja     0x140012a2f
   140012a95:	inc    dl
   140012a97:	ret    0xfefc
   140012a9a:	fwait
   140012a9b:	mov    cs,WORD PTR [rsi+rdx*1]
   140012a9e:	push   rdi
   140012a9f:	jbe    0x140012ace
   140012aa1:	in     eax,dx
   140012aa2:	mov    ebp,0x37ac96f1
   140012aa7:	fcomp  DWORD PTR [rcx+0x427cd965]
   140012aad:	add    al,0x6
   140012aaf:	ret    
   140012ab0:	mov    eax,0xfc087e1
   140012ab5:	adc    eax,0x8403105f
   140012aba:	and    eax,DWORD PTR [rdx]
   140012abc:	add    dl,BYTE PTR [rcx]
   140012abe:	(bad)  
   140012abf:	adc    DWORD PTR [rax],edx
   140012ac1:	(bad)  
   140012ac2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012ac3:	sub    BYTE PTR [rbp-0x76],bh
   140012ac6:	(bad)  
   140012ac7:	adc    DWORD PTR [rsi],ebp
   140012ac9:	adc    DWORD PTR [rbp+rdx*4+0x44],esi
   140012acd:	(bad)  
   140012ace:	rex
   140012acf:	gs int3 
   140012ad1:	push   0xffffffffffffff8f
   140012ad3:	add    ecx,DWORD PTR [rdx]
   140012ad5:	push   rbx
   140012ad6:	mov    cs,WORD PTR [rsi-0xef06e85]
   140012adc:	(bad)  
   140012add:	xor    DWORD PTR [rsi],0x34
   140012ae0:	(bad)  
   140012ae1:	out    dx,eax
   140012ae2:	xor    BYTE PTR [rdx],dh
   140012ae4:	rex.RX movabs ds:0x707a889a61b25c4,eax
   140012aee:	xchg   DWORD PTR [rbp+0x25d9400c],eax
   140012af4:	rex.WXB xor dl,BYTE PTR [r10+r13*2]
   140012af8:	loopne 0x140012adc
   140012afa:	push   0xffffffffffffffe4
   140012afc:	lods   al,BYTE PTR ds:[rsi]
   140012afd:	or     dh,BYTE PTR [rdx]
   140012aff:	jo     0x140012a86
   140012b01:	rex.WRB push r10
   140012b03:	adc    BYTE PTR [rip+0x673aae44],ah        # 0x1a73bd94d
   140012b09:	xor    BYTE PTR [rbx],dl
   140012b0b:	or     BYTE PTR [rdx+rbx*2+0x3103da76],bl
   140012b12:	add    BYTE PTR [edx],dh
   140012b15:	(bad)  
   140012b17:	repz and BYTE PTR [rax-0x3bbd96f0],dl
   140012b1e:	rex.RX rol BYTE PTR [rsi-0x234737c4],0x7
   140012b26:	stos   BYTE PTR es:[rdi],al
   140012b27:	movabs ds:0x51687bbc7a7e2c6f,al
   140012b30:	data16 mov BYTE PTR [edx-0x7af4d8fc],bh
   140012b38:	add    eax,0xcc3ea971
   140012b3d:	test   eax,0x40e4b50
   140012b42:	sub    bl,bh
   140012b44:	add    eax,edx
   140012b46:	and    dh,BYTE PTR ss:[rcx-0x2]
   140012b4a:	adc    eax,0x55301abf
   140012b4f:	rex.WRX js 0x140012bc7
   140012b52:	pop    rcx
   140012b53:	xchg   esp,eax
   140012b54:	add    DWORD PTR [rsi],ebx
   140012b56:	cmp    eax,0xedfbb60
   140012b5b:	scas   eax,DWORD PTR es:[rdi]
   140012b5c:	fucom  st(4)
   140012b5e:	or     al,0x82
   140012b60:	sub    dh,BYTE PTR [rcx+0x6aa241db]
   140012b66:	push   rsp
   140012b67:	mov    DWORD PTR [rbp-0x6b],edx
   140012b6a:	rex.WB test rax,0x5a67b004
   140012b70:	adc    al,0x60
   140012b72:	cmp    al,0x5c
   140012b74:	(bad)  
   140012b75:	scas   eax,DWORD PTR es:[rdi]
   140012b76:	add    bl,al
   140012b78:	and    al,0x64
   140012b7a:	rcr    BYTE PTR [rdx+rdx*8+0x494860b2],cl
   140012b81:	rex.WR test rax,0xffffffff80318251
   140012b87:	and    DWORD PTR [rsi-0x66],eax
   140012b8a:	adc    BYTE PTR [rbp-0x1b644b32],ah
   140012b90:	mov    ch,0x12
   140012b92:	pop    rax
   140012b93:	jl     0x140012b1b
   140012b95:	push   rdi
   140012b96:	ficomp WORD PTR [rax-0x4fcb919e]
   140012b9c:	std    
   140012b9d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012b9e:	jnp    0x140012c19
   140012ba0:	mov    edx,0x33a638b5
   140012ba5:	repz mov WORD PTR [rbx+0x6fb5833d],cs
   140012bac:	jg     0x140012b97
   140012bae:	adc    DWORD PTR [rdi+0x1b],0x8e27c1a6
   140012bb5:	sahf   
   140012bb6:	outs   dx,BYTE PTR ds:[rsi]
   140012bb7:	pushf  
   140012bb8:	rex.RXB test r13b,r10b
   140012bbb:	(bad)  
   140012bbc:	fdivp  st(7),st
   140012bbe:	or     eax,0x81d0
   140012bc3:	orps   xmm1,XMMWORD PTR [rcx+0x44]
   140012bc7:	push   r12
   140012bc9:	jmp    FWORD PTR [rbx]
   140012bcb:	(bad)  
   140012bcc:	or     DWORD PTR [rax-0x74],esp
   140012bcf:	movabs es:0xacff8c9305bfad17,eax
   140012bd9:	adc    edi,DWORD PTR [rax-0x2]
   140012bdc:	mov    dh,0xe8
   140012bde:	sbb    dl,BYTE PTR [rbp+0x389e0304]
   140012be4:	jno    0x140012ba2
   140012be6:	mov    dl,BYTE PTR [rip+0xffffffffbe6fdbc7]        # 0xfe7107b3
   140012bec:	icebp  
   140012bed:	mov    al,0x67
   140012bef:	xchg   ebx,eax
   140012bf0:	(bad)  
   140012bf1:	jrcxz  0x140012b86
   140012bf3:	xor    DWORD PTR [rcx+rdx*2+0x56caa9c0],ebp
   140012bfa:	xor    bh,BYTE PTR [rax-0x7621348c]
   140012c00:	jnp    0x140012c00
   140012c02:	retf   
   140012c03:	push   rcx
   140012c04:	sub    BYTE PTR [rdx+0xa],bh
   140012c07:	in     eax,dx
   140012c08:	add    ebp,eax
   140012c0a:	add    DWORD PTR [rcx+rdx*4-0x4581e75],edx
   140012c11:	out    dx,al
   140012c12:	(bad)  
   140012c13:	scas   al,BYTE PTR es:[rdi]
   140012c14:	pop    rbx
   140012c15:	sar    cl,cl
   140012c17:	in     eax,0x85
   140012c19:	test   DWORD PTR [rbx+0x2f],eax
   140012c1c:	cmp    ah,BYTE PTR [rdx+0x7a]
   140012c1f:	cmp    DWORD PTR [rcx+0x71dd377d],0x77
   140012c26:	(bad)  
   140012c28:	int    0xf
   140012c2a:	(bad)  
   140012c2b:	jae    0x140012be8
   140012c2d:	or     al,0x11
   140012c2f:	push   rdx
   140012c30:	jrcxz  0x140012c94
   140012c32:	pop    rcx
   140012c33:	sbb    DWORD PTR [rip+0x40154569],eax        # 0x1801671a2
   140012c39:	cmp    BYTE PTR [rdi-0x4ff750cc],dh
   140012c3f:	movabs ds:0x285148a182c47cc,al
   140012c48:	test   DWORD PTR [rcx],ebx
   140012c4a:	add    al,al
   140012c4c:	mov    BYTE PTR [rcx-0x31],cl
   140012c4f:	xchg   edx,eax
   140012c50:	(bad)  
   140012c51:	or     BYTE PTR [rcx],ch
   140012c53:	iret   
   140012c54:	xor    esp,eax
   140012c56:	cdq    
   140012c57:	(bad)  
   140012c58:	mov    dh,0x38
   140012c5a:	or     esi,DWORD PTR [rbp-0x7e3f1fc7]
   140012c60:	pop    rax
   140012c61:	sbb    ebx,DWORD PTR [rdx+0x383824c3]
   140012c67:	int    0xc1
   140012c69:	cmp    esp,DWORD PTR [rdi]
   140012c6b:	test   BYTE PTR [rdx],dl
   140012c6e:	(bad)  
   140012c6f:	jmp    0x140012c26
   140012c71:	jne    0x140012ccf
   140012c73:	ror    BYTE PTR [rbx+rcx*1+0x3b99f9c3],cl
   140012c7a:	mov    fs,WORD PTR [rcx-0x68]
   140012c7d:	adc    ah,ch
   140012c7f:	push   0x42
   140012c81:	rex.X
   140012c82:	sbb    BYTE PTR fs:[rax+0x4a],al
   140012c86:	in     al,dx
   140012c87:	int3   
   140012c88:	or     dl,BYTE PTR [rax-0x1dc35e8f]
   140012c8e:	xchg   esp,eax
   140012c8f:	mov    DWORD PTR [rip+0xffffffffd9f51040],ebx        # 0x119f63cd5
   140012c95:	jo     0x140012ca1
   140012c97:	idiv   DWORD PTR [rbx]
   140012c99:	(bad)  
   140012c9a:	or     bh,BYTE PTR [rcx+0xf]
   140012c9d:	xchg   esp,eax
   140012c9e:	(bad)  
   140012c9f:	loopne 0x140012c61
   140012ca1:	xchg   al,cl
   140012ca3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012ca4:	(bad)  
   140012ca5:	mov    ecx,0xebe142f6
   140012caa:	mov    dh,0x38
   140012cac:	lahf   
   140012cad:	or     DWORD PTR [rdi-0xc],0x71
   140012cb1:	jmp    0xe509c2ea
   140012cb6:	rex.X lods eax,DWORD PTR ds:[rsi]
   140012cb8:	(bad)  
   140012cb9:	sbb    al,0x50
   140012cbb:	rex add eax,0x3b9254c
   140012cc1:	lods   al,BYTE PTR ds:[rsi]
   140012cc2:	outs   dx,DWORD PTR ds:[rsi]
   140012cc3:	mov    esp,0x89270a07
   140012cc8:	adc    DWORD PTR [rbx],edi
   140012cca:	and    ecx,DWORD PTR [rcx]
   140012ccc:	movabs eax,ds:0xcfb5022f5692a6c4
   140012cd5:	adc    ah,BYTE PTR [rbp+0x70]
   140012cd8:	xor    DWORD PTR [rax],0x69
   140012cdb:	sets   BYTE PTR [rsi+0x2]
   140012cdf:	ins    BYTE PTR es:[rdi],dx
   140012ce0:	lods   eax,DWORD PTR ds:[rsi]
   140012ce1:	pop    rbp
   140012ce2:	cmp    ch,BYTE PTR [rcx+0x45]
   140012ce5:	mov    esp,0xcc155783
   140012cea:	push   rsp
   140012ceb:	stos   BYTE PTR es:[rdi],al
   140012cec:	xor    bl,BYTE PTR [rbx-0x39bddccc]
   140012cf2:	ins    BYTE PTR es:[rdi],dx
   140012cf3:	mov    dl,0xc4
   140012cf5:	jo     0x140012ca1
   140012cf7:	sub    DWORD PTR [rcx+rcx*1+0x30],0xb
   140012cfc:	pop    rbp
   140012cfd:	xlat   BYTE PTR ds:[rbx]
   140012cfe:	pop    rcx
   140012cff:	in     al,dx
   140012d00:	sbb    edi,DWORD PTR [rdi+riz*8+0x2b]
   140012d04:	outs   dx,DWORD PTR ds:[rsi]
   140012d05:	fdivr  st(3),st
   140012d07:	hlt    
   140012d08:	fsub   DWORD PTR [rax-0x1c80c8c9]
   140012d0e:	jmp    0x17fb5af64
   140012d13:	(bad)  
   140012d14:	or     DWORD PTR ss:[rsi-0x26],ebp
   140012d18:	cmp    ecx,DWORD PTR [rdi-0x7625e069]
   140012d1e:	pop    rdi
   140012d1f:	mov    ebp,0x2b76abe7
   140012d24:	scas   eax,DWORD PTR es:[rdi]
   140012d25:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012d26:	add    dh,BYTE PTR [rbx]
   140012d28:	loope  0x140012cf6
   140012d2a:	out    0x89,al
   140012d2c:	(bad)  
   140012d2d:	jg     0x140012d11
   140012d2f:	in     al,dx
   140012d30:	std    
   140012d31:	(bad)  
   140012d32:	cmp    BYTE PTR [rcx-0x66708b5a],cl
   140012d38:	(bad)  
   140012d39:	push   rsi
   140012d3a:	repz sub DWORD PTR [rbx-0x38],0x335d31f4
   140012d42:	add    BYTE PTR [rax-0x67bca1ba],bl
   140012d48:	stos   BYTE PTR es:[rdi],al
   140012d49:	(bad)  
   140012d4a:	add    r9b,r8b
   140012d4d:	ds add esp,0xffffffa9
   140012d51:	mov    ebp,0x195242e
   140012d56:	rex.W loope 0x140012dc5
   140012d59:	(bad)
   140012d5c:	std    
   140012d5d:	(bad)  
   140012d5e:	(bad)  
   140012d5f:	adc    cl,BYTE PTR [rax+0x54f680fa]
   140012d65:	mov    ch,0xff
   140012d67:	xor    BYTE PTR [rax+0x45064207],ch
   140012d6d:	xor    bl,al
   140012d6f:	jae    0x140012dd9
   140012d71:	jno    0x140012d5a
   140012d73:	sbb    eax,0xc1d6e77f
   140012d78:	scas   al,BYTE PTR es:[rdi]
   140012d79:	std    
   140012d7a:	jnp    0x140012df7
   140012d7c:	retf   
   140012d7d:	jnp    0x140012df5
   140012d7f:	scas   eax,DWORD PTR es:[rdi]
   140012d80:	in     al,dx
   140012d81:	(bad)  
   140012d82:	jl     0x140012d5f
   140012d84:	ret    0xcae2
   140012d87:	repnz (bad) 
   140012d89:	jle    0x140012dec
   140012d8b:	pop    rdi
   140012d8c:	(bad)  
   140012d8d:	rex.WR (bad) 
   140012d8f:	rex.WXB or al,0xc
   140012d92:	or     DWORD PTR [rdx+0x66],edi
   140012d95:	push   rdx
   140012d96:	jae    0x140012db8
   140012d98:	add    cl,BYTE PTR [rdx]
   140012d9a:	rex.RB pop r15
   140012d9c:	and    DWORD PTR [rbx],0xa4d412a5
   140012da2:	(bad)  
   140012da3:	sub    ebp,edx
   140012da5:	jmp    0x15ed1a778
   140012daa:	movabs al,ds:0x2a493e5b22308967
   140012db3:	movsxd eax,DWORD PTR [rsi+0x31d50b3d]
   140012db9:	fcomi  st,st(1)
   140012dbb:	cmp    DWORD PTR [rax+0x13b41c1b],esp
   140012dc1:	sbb    al,0x6a
   140012dc3:	rol    edx,cl
   140012dc5:	cdq    
   140012dc6:	int3   
   140012dc7:	ds loop 0x140012dab
   140012dca:	or     r8,QWORD PTR [r10]
   140012dcd:	fmul   DWORD PTR [rbp+0x3a]
   140012dd0:	adc    al,0x2
   140012dd2:	adc    ebp,0xf8bb3725
   140012dd8:	test   DWORD PTR [rbx-0x63f8c40b],ecx
   140012dde:	(bad)  
   140012ddf:	add    al,0x66
   140012de1:	mov    QWORD PTR [rax+r10*8+0x2],r9
   140012de6:	mov    esp,0x882940e6
   140012deb:	jnp    0x140012d73
   140012ded:	mov    ecx,0x48b4ce47
   140012df2:	mov    DWORD PTR [rip+0xffffffff8608f818],edi        # 0xc60a2610
   140012df8:	mov    ebx,DWORD PTR [rax+rsi*2-0x1e]
   140012dfc:	loop   0x140012e1f
   140012dfe:	pop    rsi
   140012dff:	jns    0x140012e31
   140012e01:	sbb    BYTE PTR [rbx-0x54f5b711],0xa0
   140012e08:	xchg   esp,eax
   140012e09:	lods   eax,DWORD PTR ds:[rsi]
   140012e0a:	xchg   esi,eax
   140012e0b:	stos   BYTE PTR es:[rdi],al
   140012e0c:	xor    BYTE PTR [rdx+rbp*2],ah
   140012e0f:	(bad)  
   140012e10:	sbb    ah,BYTE PTR [rdx]
   140012e12:	push   rcx
   140012e13:	push   0x6a10fce1
   140012e18:	adc    DWORD PTR [rax-0x3e],eax
   140012e1b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012e1c:	push   rbp
   140012e1d:	sub    ebx,esp
   140012e1f:	mov    esp,0x50c9710b
   140012e24:	and    al,0x60
   140012e26:	mov    BYTE PTR [rdi],ch
   140012e28:	(bad)  
   140012e29:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012e2a:	rex.X scas al,BYTE PTR es:[rdi]
   140012e2c:	(bad)  
   140012e2d:	adc    bh,0x10
   140012e30:	(bad)  
   140012e31:	sti    
   140012e32:	and    ebx,DWORD PTR [rsi+rcx*1-0x21]
   140012e36:	adc    al,0x13
   140012e38:	rcl    BYTE PTR [rsi],0xa3
   140012e3b:	rex.WXB jbe 0x140012ea6
   140012e3e:	retf   0x98d2
   140012e41:	(bad)  
   140012e42:	mov    esp,0xb5382c69
   140012e47:	push   rsi
   140012e48:	add    BYTE PTR [rsi+0x33],cl
   140012e4b:	movabs es:0xdc03b18d86270d84,al
   140012e55:	cmp    cl,0xfe
   140012e58:	sub    DWORD PTR [rsi-0x49c6499f],0x12ea7a38
   140012e62:	outs   dx,BYTE PTR ds:[rsi]
   140012e63:	cmp    DWORD PTR [rax-0x19a984e9],edi
   140012e69:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012e6b:	fwait
   140012e6c:	mul    BYTE PTR [rcx-0x31]
   140012e6f:	mov    fs,WORD PTR [rbp-0x5c]
   140012e72:	rex.WB (bad) 
   140012e74:	addr32 ss (bad) 
   140012e77:	js     0x140012e70
   140012e79:	(bad)  
   140012e7a:	mov    edi,0xfc7b9fac
   140012e7f:	pushf  
   140012e80:	retf   
   140012e81:	xchg   edi,eax
   140012e82:	and    al,0x1a
   140012e84:	xchg   ecx,eax
   140012e85:	sbb    eax,0xc7c4ffbf
   140012e8a:	jle    0x140012e7b
   140012e8c:	addr32 rex.WRXB fdivr st(3),st
   140012e90:	jnp    0x140012e39
   140012e92:	rcl    DWORD PTR [rdi+rbp*8+0x3],1
   140012e96:	ret    
   140012e97:	mov    bh,0x43
   140012e99:	js     0x140012e6a
   140012e9b:	or     eax,esi
   140012e9d:	pmuludq mm7,QWORD PTR [rbx+rax*1+0x4512b80]
   140012ea5:	adc    BYTE PTR [rcx-0x504f74dd],ah
   140012eab:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012eac:	cmp    eax,0xd42d378
   140012eb1:	adc    al,0x6
   140012eb3:	and    BYTE PTR [rdi+0x21c0eda3],dl
   140012eb9:	sbb    eax,0x77b27d3e
   140012ebe:	repnz movsxd edi,DWORD PTR [rdi-0x10]
   140012ec2:	(bad)  
   140012ec3:	add    al,0xf4
   140012ec5:	adc    al,0x3a
   140012ec7:	add    BYTE PTR [rax-0x5e3c253a],dl
   140012ecd:	(bad)  
   140012ece:	cld    
   140012ecf:	jrcxz  0x140012e68
   140012ed1:	and    eax,0xf3f38b73
   140012ed6:	sti    
   140012ed7:	outs   dx,DWORD PTR ds:[rsi]
   140012ed8:	cmp    ah,BYTE PTR [rdx-0x4e]
   140012edb:	(bad)  
   140012edc:	fmul   QWORD PTR [rip+0x477c5e47]        # 0x1877d8d29
   140012ee2:	ficomp DWORD PTR [rbx]
   140012ee4:	in     al,dx
   140012ee5:	cwde   
   140012ee6:	(bad)  
   140012ee7:	hlt    
   140012ee8:	(bad)  
   140012ee9:	adc    ah,BYTE PTR [rsi]
   140012eeb:	or     al,0x12
   140012eed:	add    esp,0x0
   140012ef0:	add    esp,DWORD PTR [rsi+0x631c1c08]
   140012ef6:	pop    rax
   140012ef7:	add    BYTE PTR [rsi+0x69],dl
   140012efa:	pop    rdi
   140012efb:	movabs eax,ds:0x6e379c4291d92480
   140012f04:	push   0xffffffffb5f32401
   140012f09:	imul   esp,DWORD PTR [rcx-0x544ef54e],0x412cf6ac
   140012f13:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012f15:	sbb    al,0x9d
   140012f17:	add    BYTE PTR [rcx+rbx*2+0x90702d1],bh
   140012f1e:	or     edx,DWORD PTR [rsi+0x18]
   140012f21:	mov    cs,ebp
   140012f23:	or     al,al
   140012f25:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012f26:	and    bh,BYTE PTR [rbx+0x26945a18]
   140012f2c:	sub    eax,0xd0b820ca
   140012f31:	sbb    eax,0x86140181
   140012f36:	cwde   
   140012f37:	ret    
   140012f38:	rex.WR (bad) 
   140012f3a:	(bad)  
   140012f3b:	ja     0x140012f89
   140012f3d:	sub    ch,BYTE PTR [rax]
   140012f3f:	gs data16 (bad) 
   140012f42:	push   rcx
   140012f43:	(bad)  
   140012f44:	fyl2xp1 
   140012f46:	(bad)  
   140012f47:	cwde   
   140012f48:	rex.WRB add r10b,BYTE PTR [r8+0x4a]
   140012f4c:	sub    DWORD PTR [rcx],r14d
   140012f4f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012f50:	cs push 0xffffffffffffffc1
   140012f53:	cmp    eax,0x9b119cc3
   140012f58:	xchg   esp,eax
   140012f59:	rex.XB cli 
   140012f5b:	mov    ah,0x65
   140012f5d:	ret    
   140012f5e:	(bad)  
   140012f5f:	out    0xe0,eax
   140012f61:	push   rdx
   140012f62:	xchg   edx,eax
   140012f63:	rex.WXB
   140012f64:	rex.WB cmp BYTE PTR [r8],dil
   140012f67:	add    BYTE PTR [rbx],dl
   140012f69:	(bad)  
   140012f6a:	fs test eax,0xf1648396
   140012f70:	mov    dl,0x5b
   140012f72:	adc    al,0xb0
   140012f74:	sub    BYTE PTR [rbp-0x7a],bl
   140012f77:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012f78:	sub    cl,BYTE PTR [rdx+0x62]
   140012f7b:	sub    eax,0x2a00e95d
   140012f80:	pop    rbp
   140012f81:	(bad)  
   140012f82:	(bad)  
   140012f83:	rex.R loope 0x140012fa9
   140012f86:	adc    eax,0x112c13ae
   140012f8b:	lods   al,BYTE PTR ds:[rsi]
   140012f8c:	rex.WXB xor rax,0x5ea78cba
   140012f92:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012f93:	adc    BYTE PTR [rip+0x5c8b290b],ch        # 0x19c8c58a4
   140012f99:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012f9a:	sub    al,0xd4
   140012f9c:	out    0x5,al
   140012f9e:	mov    ah,0x2c
   140012fa0:	fst    QWORD PTR [rax+rbp*1]
   140012fa3:	and    eax,0xe0494615
   140012fa8:	sub    ecx,0x5f1b4fcf
   140012fae:	stc    
   140012faf:	(bad)  
   140012fb1:	(bad)  
   140012fb2:	fcomip st,st(7)
   140012fb4:	rex.RXB mov r15d,0xdb993ef4
   140012fba:	mov    r10d,0xd21be6eb
   140012fc0:	pop    rbp
   140012fc1:	sti    
   140012fc2:	(bad)  
   140012fc3:	pmaxub mm7,mm2
   140012fc6:	rex.WRB ja 0x140012fbf
   140012fc9:	(bad)  
   140012fca:	jae    0x140013007
   140012fcc:	mov    WORD PTR [rcx+0x25],fs
   140012fcf:	xchg   ebp,eax
   140012fd0:	xchg   ebx,eax
   140012fd1:	sub    al,0xf6
   140012fd3:	xchg   esp,eax
   140012fd4:	sbb    eax,0x99f03c6f
   140012fd9:	(bad)  
   140012fda:	in     eax,dx
   140012fdb:	sti    
   140012fdc:	jle    0x140012ffb
   140012fde:	rex.WRB cmc 
   140012fe0:	mov    esi,0x3c07a9cb
   140012fe5:	iret   
   140012fe6:	cwde   
   140012fe7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012fe9:	jmp    0x140012ff9
   140012feb:	add    BYTE PTR [rsi],ch
   140012fed:	rex.RXB sub eax,0xa68ae1ed
   140012ff3:	add    eax,0x93b598b9
   140012ff8:	jb     0x14001303a
   140012ffa:	or     dl,BYTE PTR [rdi]
   140012ffc:	jle    0x140012fca
   140012ffe:	add    ah,dh
   140013000:	rex.WRXB jle 0x140012fef
   140013003:	jle    0x1aaab180b
   140013009:	(bad)  
   14001300a:	test   ah,dh
   14001300c:	mov    esp,DWORD PTR [rax-0x7bf0bff4]
   140013012:	je     0x140012ff3
   140013014:	pop    rbp
   140013015:	jg     0x140013006
   140013017:	(bad)  
   140013018:	fs jle 0x140013094
   14001301b:	(bad)  
   14001301c:	icebp  
   14001301d:	loopne 0x140012faa
   14001301f:	mov    ds,WORD PTR [rax-0x1232322]
   140013025:	fwait
   140013026:	pop    rsi
   140013027:	repnz (bad) 
   140013029:	(bad)  
   14001302a:	(bad)  
   14001302b:	outs   dx,BYTE PTR ds:[rsi]
   14001302c:	jle    0x14001308f
   14001302e:	(bad)  
   14001302f:	jle    0x140013080
   140013031:	retf   0x858c
   140013034:	pop    rsi
   140013035:	add    ah,BYTE PTR [rsi]
   140013037:	(bad)  
   140013038:	sub    DWORD PTR [rcx],esi
   14001303a:	rex.WRB jo 0x14001302d
   14001303d:	fcmovb st,st(4)
   14001303f:	mov    al,0xd0
   140013041:	adc    eax,0xd6c65605
   140013046:	rex xchg eax,eax
   140013048:	(bad)  
   140013049:	fs adc eax,0x66462885
   14001304f:	(bad)  
   140013050:	add    al,al
   140013052:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013053:	rex.WRXB stos BYTE PTR es:[rdi],al
   140013055:	(bad)  
   140013056:	mov    ch,al
   140013058:	sahf   
   140013059:	and    ecx,eax
   14001305b:	and    eax,0xb6355952
   140013060:	pop    rsp
   140013061:	and    ebp,DWORD PTR [rip+0x74845557]        # 0x1b48585be
   140013067:	mov    ah,dh
   140013069:	rex
   14001306a:	rex.B jae 0x1400130bd
   14001306d:	(bad)  
   14001306e:	mov    esp,0xed436007
   140013073:	xor    dl,BYTE PTR [rcx-0x4f]
   140013076:	push   0xffffffffffffffc3
   140013078:	cmp    BYTE PTR [rcx+riz*8+0x78],dh
   14001307c:	(bad)  
   14001307d:	sub    ecx,esp
   14001307f:	(bad)  
   140013080:	sub    eax,0x9c8a6d3b
   140013085:	jo     0x14001303e
   140013087:	(bad)  
   140013088:	cld    
   140013089:	(bad)  
   14001308a:	lock mov WORD PTR [rbp-0x34],cs
   14001308e:	or     DWORD PTR [rcx],edx
   140013090:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013091:	ins    BYTE PTR es:[rdi],dx
   140013092:	mov    WORD PTR [rcx],fs
   140013094:	push   rax
   140013095:	or     al,BYTE PTR [rbx-0x7a]
   140013098:	rex sbb DWORD PTR [rbx+0x23398949],edx
   14001309f:	push   rax
   1400130a0:	lahf   
   1400130a1:	or     al,0xa7
   1400130a3:	int3   
   1400130a4:	pushf  
   1400130a5:	xor    DWORD PTR [rbx+0x42],esi
   1400130a8:	xchg   esi,eax
   1400130a9:	cdq    
   1400130aa:	or     BYTE PTR [rcx],bl
   1400130ac:	adc    esi,DWORD PTR [rcx]
   1400130ae:	adc    dh,BYTE PTR [rdx]
   1400130b0:	add    al,0x32
   1400130b2:	in     al,dx
   1400130b3:	jb     0x1400130d4
   1400130b5:	cld    
   1400130b6:	cmp    al,0x79
   1400130b8:	push   rdx
   1400130b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400130ba:	jo     0x140013045
   1400130bc:	out    dx,al
   1400130be:	ins    DWORD PTR es:[rdi],dx
   1400130bf:	mov    ecx,0xaa144da5
   1400130c4:	(bad)  
   1400130c5:	stos   DWORD PTR es:[rdi],eax
   1400130c6:	sub    al,BYTE PTR [rdx+0x44]
   1400130c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400130ca:	sub    bl,BYTE PTR [rdi+rsi*8-0x647b5d22]
   1400130d1:	mov    eax,0x3bcf77d5
   1400130d6:	add    eax,0x8f127c00
   1400130db:	pop    rbx
   1400130dc:	in     eax,0xd7
   1400130de:	stos   BYTE PTR es:[rdi],al
   1400130df:	sbb    eax,DWORD PTR [rbx]
   1400130e1:	gs rex.WB (bad) 
   1400130e4:	mov    edx,0xa4040668
   1400130e9:	test   BYTE PTR [rbp+0x69e5fdcb],bh
   1400130ef:	sub    ah,BYTE PTR [rsi-0x4f]
   1400130f2:	jp     0x1400130ea
   1400130f4:	cmp    BYTE PTR [rip+0xffffffff8809f47d],bh        # 0xc80b2577
   1400130fa:	lods   al,BYTE PTR ds:[rsi]
   1400130fb:	retf   0x3f57
   1400130fe:	stc    
   1400130ff:	icebp  
   140013100:	lea    esi,[rdx+0x2cb87d58]
   140013106:	xchg   DWORD PTR [rsi+0x24],edx
   140013109:	(bad)  
   14001310a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001310b:	xor    ebp,DWORD PTR [rdi-0x47120733]
   140013111:	std    
   140013112:	repz xchg esi,eax
   140013114:	icebp  
   140013115:	add    edi,DWORD PTR [rbp+0x72e000a0]
   14001311b:	mov    ah,0x2d
   14001311d:	rol    DWORD PTR [rdx+0x1b],cl
   140013120:	fiadd  DWORD PTR [rbx-0x78]
   140013123:	leave  
   140013124:	xchg   ecx,ecx
   140013126:	sbb    eax,0x3d0819
   14001312b:	(bad)  
   14001312d:	sti    
   14001312e:	jmp    rdx
   140013130:	rex.WXB add r10b,dil
   140013133:	(bad)  
   140013134:	sbb    al,0xb2
   140013136:	xchg   DWORD PTR [rcx+0x7d],eax
   140013139:	mov    edi,0x3aefe93f
   14001313e:	mov    al,0xbc
   140013140:	jmp    0x140013110
   140013142:	xlat   BYTE PTR ds:[rbx]
   140013143:	fstp   QWORD PTR [rsp+rcx*2]
   140013146:	mov    eax,DWORD PTR [rbp-0x4d23c8c3]
   14001314c:	jnp    0x140013135
   14001314e:	sahf   
   14001314f:	pop    rbp
   140013150:	mov    ebp,0x8b7df9b9
   140013155:	sbb    DWORD PTR [rsi-0x2a],0x33
   140013159:	mov    WORD PTR [rcx+0x6a],es
   14001315c:	nop
   14001315d:	sbb    edx,eax
   14001315f:	(bad)  
   140013160:	(bad)  
   140013161:	sbb    esp,DWORD PTR [rsi+0x5]
   140013164:	adc    DWORD PTR [rax-0x58],0x3238b0a2
   14001316b:	sub    dl,BYTE PTR [rip+0xffffffffc3ede9a2]        # 0x103ef1b13
   140013171:	push   rdx
   140013172:	(bad)  
   140013173:	push   rbp
   140013174:	mov    cl,0x51
   140013176:	add    al,0xa7
   140013178:	cdq    
   140013179:	sahf   
   14001317a:	add    eax,0xe72a4474
   14001317f:	movabs al,ds:0x4b39b1249f29623a
   140013188:	jno    0x1400131e0
   14001318a:	rex.RB enter 0x5915,0xac
   14001318f:	or     esi,DWORD PTR [rax+0x4]
   140013192:	jo     0x1400131f4
   140013194:	(bad)  
   140013195:	(bad)  
   140013196:	rex.WB outs dx,DWORD PTR ds:[rsi]
   140013198:	(bad)  
   140013199:	sub    DWORD PTR [rax+riz*8],0x53
   14001319d:	test   ebp,edx
   14001319f:	stc    
   1400131a0:	(bad)  
   1400131a1:	pop    rbp
   1400131a2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400131a3:	add    al,0x0
   1400131a5:	xchg   esp,eax
   1400131a6:	and    DWORD PTR [rdx+0x20],ecx
   1400131a9:	es pop rax
   1400131ab:	lahf   
   1400131ac:	or     eax,0x79cb858
   1400131b1:	jbe    0x1400131fc
   1400131b3:	rex.WRB in al,dx
   1400131b5:	sbb    al,0x91
   1400131b7:	pushf  
   1400131b8:	add    BYTE PTR [rax+rsi*1-0x7a39bd8d],dl
   1400131bf:	fstp   DWORD PTR ss:[rcx-0x58f3e6ef]
   1400131c6:	rex.WR (bad) 
   1400131c8:	movsxd esi,DWORD PTR [rsi]
   1400131ca:	cdq    
   1400131cb:	(bad)  
   1400131cc:	retf   0x8802
   1400131cf:	mov    al,0xcb
   1400131d1:	cmc    
   1400131d2:	rex.W sub BYTE PTR [rcx+0x37],spl
   1400131d6:	pop    rbp
   1400131d7:	fwait
   1400131d8:	sub    BYTE PTR [rcx-0x4805870d],al
   1400131de:	(bad)  
   1400131df:	loopne 0x140013199
   1400131e1:	cdq    
   1400131e2:	push   rsp
   1400131e3:	rex and BYTE PTR [rcx],0x51
   1400131e7:	push   rbp
   1400131e8:	xor    DWORD PTR [rsi-0x46],esp
   1400131eb:	idiv   esi
   1400131ed:	repnz movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400131ef:	(bad)  
   1400131f0:	fwait
   1400131f1:	push   rdi
   1400131f2:	sub    dh,dh
   1400131f4:	(bad)  
   1400131f5:	femms  
   1400131f7:	jle    0x1400131ea
   1400131f9:	clc    
   1400131fa:	push   0xffffffffffffffd7
   1400131fc:	jno    0x1400131c3
   1400131fe:	cdq    
   1400131ff:	rex.WRXB cld 
   140013201:	inc    BYTE PTR [rdi+0x1]
   140013204:	ins    BYTE PTR es:[rdi],dx
   140013205:	mov    cl,0xae
   140013208:	shl    BYTE PTR [rip+0x6050dd51],1        # 0x1a0520f5f
   14001320e:	test   dh,ah
   140013210:	or     al,0xbc
   140013212:	cs rex.WB jg 0x1400131f3
   140013216:	xor    BYTE PTR [rbp+0x4c],bh
   140013219:	fbstp  TBYTE PTR [rax]
   14001321b:	add    BYTE PTR [rax+0x25],dh
   14001321e:	(bad)  
   14001321f:	rcr    BYTE PTR [rsi],1
   140013221:	mov    dh,dh
   140013223:	xor    DWORD PTR [rbp+0x13],ebp
   140013226:	sbb    DWORD PTR [rsp+rax*2+0x4091000b],0xffffff91
   14001322e:	mov    cs,esi
   140013230:	lahf   
   140013231:	retf   0x7e4e
   140013234:	in     al,dx
   140013235:	rsqrtps xmm5,XMMWORD PTR [rax-0x3e33fff2]
   14001323c:	add    DWORD PTR [rbx-0x10],eax
   14001323f:	rex.WRB hlt 
   140013241:	(bad)  
   140013242:	mov    edi,0x4aafede9
   140013247:	cli    
   140013248:	or     ecx,DWORD PTR [rbx+0x73]
   14001324b:	sti    
   14001324c:	pandn  mm4,QWORD PTR [rdx+rsi*4-0x2]
   140013251:	cld    
   140013252:	inc    BYTE PTR [rbx+0x6e64bd37]
   140013258:	(bad)  
   140013259:	jno    0x140013242
   14001325b:	sar    ah,cl
   14001325d:	fcom   QWORD PTR [rdx+0x6a]
   140013260:	sbb    BYTE PTR [rbx],ch
   140013262:	std    
   140013263:	adc    al,0x69
   140013265:	rex.X fdiv DWORD PTR [rbx]
   140013268:	(bad)  
   140013269:	sbb    eax,0x46c20b91
   14001326e:	cs sti 
   140013270:	sub    al,0x80
   140013272:	lods   eax,DWORD PTR ds:[rsi]
   140013273:	pop    rsp
   140013274:	mov    ds,WORD PTR [rax+0x1]
   140013277:	mov    dh,0x4a
   140013279:	std    
   14001327a:	mov    dh,0xb1
   14001327c:	push   rbp
   14001327d:	mov    WORD PTR [rdx+rax*1+0x672088c0],gs
   140013284:	rex.WB je 0x14001321c
   140013287:	and    BYTE PTR [rbx-0x3bd30954],ch
   14001328d:	mov    gs,WORD PTR [rcx-0x12be31d4]
   140013293:	fsubr  DWORD PTR [rcx+0xe]
   140013296:	push   rcx
   140013297:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013298:	pop    rdx
   140013299:	rcr    BYTE PTR [rax+riz*8],1
   14001329c:	repz sbb al,0xdc
   14001329f:	(bad)  
   1400132a0:	mov    al,0xd7
   1400132a2:	add    DWORD PTR [rbx+0x49d1edf],0xe30b5a27
   1400132ac:	sbb    ebp,edx
   1400132ae:	mov    eax,0x262525fc
   1400132b3:	xchg   edi,eax
   1400132b4:	repz loopne 0x1400132b1
   1400132b7:	rex.RB push r11
   1400132b9:	(bad)  
   1400132ba:	data16 lahf 
   1400132bc:	out    dx,eax
   1400132bd:	nop
   1400132be:	xor    dh,BYTE PTR [rbx-0x6b59f6fd]
   1400132c4:	cdq    
   1400132c5:	push   rdx
   1400132c6:	xchg   bx,ax
   1400132c8:	adc    BYTE PTR [rax+0x26338647],ch
   1400132ce:	(bad)  
   1400132cf:	mov    ebx,?
   1400132d1:	rex.WRX mov BYTE PTR [rax],r15b
   1400132d4:	xor    DWORD PTR [rcx-0x318da1fd],ecx
   1400132da:	or     al,BYTE PTR [rbx]
   1400132dc:	xchg   BYTE PTR [rcx+0x7929252],al
   1400132e2:	or     BYTE PTR [rsi+0x30003c49],0x77
   1400132e9:	loopne 0x1400132b0
   1400132eb:	outs   dx,DWORD PTR ds:[rsi]
   1400132ec:	rex.WX jp 0x1400132ac
   1400132ef:	cmp    al,0x31
   1400132f1:	leave  
   1400132f2:	test   eax,0x396f306c
   1400132f7:	rex.WXB (bad) 
   1400132f9:	push   rbx
   1400132fa:	ss mov edi,0xc367b109
   140013300:	xor    edi,ebx
   140013302:	je     0x140013364
   140013304:	out    0xa1,eax
   140013306:	sbb    eax,0x9f43fdf3
   14001330b:	cmp    BYTE PTR [rdx+0x74],bh
   14001330e:	loop   0x14001338c
   140013310:	pop    rcx
   140013311:	cmp    esi,ebx
   140013313:	fyl2x  
   140013315:	cdq    
   140013316:	(bad)  
   140013317:	lahf   
   140013318:	push   rsp
   140013319:	vandnpd ymm15,ymm15,YMMWORD PTR [rbp-0x55945ddc]
   140013321:	cmp    al,BYTE PTR [rbx+rsi*2+0x26]
   140013325:	pop    rsi
   140013326:	pushf  
   140013327:	int    0xa7
   140013329:	lods   eax,DWORD PTR ds:[rsi]
   14001332a:	iret   
   14001332b:	jne    0x140013374
   14001332d:	xor    eax,DWORD PTR [rax]
   14001332f:	js     0x140013347
   140013331:	mov    ah,0x5d
   140013333:	adc    eax,ebx
   140013335:	jns    0x140013323
   140013337:	mov    DWORD PTR [rcx-0x365a3f38],ecx
   14001333d:	add    BYTE PTR es:[rdx+0x25],dl
   140013341:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013342:	(bad)  
   140013343:	(bad)  
   140013344:	cli    
   140013345:	sti    
   140013346:	pop    gs
   140013348:	retf   0x8880
   14001334b:	jp     0x1400132f7
   14001334d:	call   0x14c8836e3
   140013352:	mov    bh,dh
   140013354:	(bad)  
   140013355:	xchg   edi,eax
   140013356:	fdivr  QWORD PTR [rbp+0x68]
   140013359:	loope  0x14001333b
   14001335b:	lods   eax,DWORD PTR ds:[rsi]
   14001335c:	sti    
   14001335d:	out    0xf,eax
   14001335f:	fdiv   QWORD PTR [rdx-0x75]
   140013362:	leave  
   140013363:	(bad)  
   140013364:	repz retf 
   140013366:	(bad)  
   140013367:	sbb    al,0xbe
   140013369:	jae    0x14001335a
   14001336b:	mov    ds,WORD PTR [rip+0x4b8bf373]        # 0x18b8d26e4
   140013371:	xchg   DWORD PTR [rsi],edx
   140013373:	jp     0x14001339e
   140013375:	(bad)  
   140013376:	test   eax,0x60cf5cc1
   14001337b:	xor    DWORD PTR [rbx-0x14],esp
   14001337e:	in     al,dx
   14001337f:	(bad)  
   140013380:	lea    ebp,[rax+0x16301105]
   140013386:	hlt    
   140013387:	(bad)  
   140013388:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013389:	(bad)  
   14001338a:	fldcw  WORD PTR [rax*1+0x631b1456]
   140013391:	sub    r8d,r8d
   140013394:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013395:	mov    cl,0x63
   140013397:	sbb    BYTE PTR [rdx+0x2400093c],al
   14001339d:	idiv   BYTE PTR [rax]
   14001339f:	push   rsp
   1400133a0:	rex.RX and al,0xe5
   1400133a3:	cmp    DWORD PTR [rdx+0x59],edx
   1400133a6:	(bad)  
   1400133a7:	xor    bl,BYTE PTR [rdi+0x23]
   1400133aa:	add    esp,DWORD PTR [rax]
   1400133ac:	or     ah,BYTE PTR [rbp+0x4a]
   1400133af:	add    BYTE PTR [rdi],al
   1400133b1:	test   DWORD PTR [rdx-0x3d],ecx
   1400133b4:	out    0xa0,eax
   1400133b6:	fsubp  st(1),st
   1400133b8:	shl    BYTE PTR [rbp-0x3d3e220d],0x17
   1400133bf:	(bad)  
   1400133c0:	mov    ah,0x10
   1400133c2:	clc    
   1400133c3:	leave  
   1400133c4:	int3   
   1400133c5:	lods   al,BYTE PTR ds:[rsi]
   1400133c6:	(bad)  
   1400133c7:	scas   eax,DWORD PTR es:[rdi]
   1400133c8:	fsub   st,st(5)
   1400133ca:	adc    DWORD PTR [r9+0x2219ec0b],r10d
   1400133d1:	xor    BYTE PTR [rax+0x3073b10d],cl
   1400133d7:	adc    dl,BYTE PTR [rbx+0x62]
   1400133da:	mov    WORD PTR [rbx],cs
   1400133dc:	imul   ebx,DWORD PTR [rdx],0x17
   1400133df:	ror    eax,0x88
   1400133e2:	cmp    BYTE PTR [rbp+0x43],ah
   1400133e5:	sbb    DWORD PTR [rbx],edx
   1400133e7:	neg    DWORD PTR [rax-0x5b39ccd8]
   1400133ed:	(bad)  
   1400133ee:	pushf  
   1400133ef:	rex.WX push 0xffffffffffffffe6
   1400133f2:	sbb    esi,0xe00d34fc
   1400133f8:	pop    rbx
   1400133f9:	(bad)  
   1400133fa:	sub    al,0xad
   1400133fc:	ins    BYTE PTR es:[rdi],dx
   1400133fd:	movabs al,ds:0x5003343bdf9bd307
   140013406:	outs   dx,DWORD PTR ds:[rsi]
   140013407:	(bad)  
   140013408:	fwait
   140013409:	xlat   BYTE PTR ds:[rbx]
   14001340a:	and    eax,0x28031b03
   14001340f:	rex.RX xchg DWORD PTR [rsi],r10d
   140013412:	int3   
   140013413:	cli    
   140013414:	fistp  QWORD PTR [rbp-0x18189693]
   14001341a:	(bad)  
   14001341b:	pop    rdi
   14001341c:	sub    BYTE PTR [rdi+0x6362ea7c],bh
   140013422:	in     al,dx
   140013423:	push   rbx
   140013424:	mov    ecx,0xbd8f37f5
   140013429:	out    0xdf,eax
   14001342b:	cld    
   14001342c:	(bad)  
   14001342d:	or     bl,BYTE PTR [rbp-0x4d]
   140013430:	(bad)  
   140013431:	(bad)  
   140013432:	xchg   ebp,eax
   140013433:	(bad)  
   140013434:	outs   dx,BYTE PTR ds:[rsi]
   140013435:	mov    cl,dl
   140013437:	rex.W
   140013438:	rex.RB jae 0x14001344c
   14001343b:	mov    DWORD PTR [rcx],ebx
   14001343d:	(bad)  
   14001343e:	mov    eax,0x177da54e
   140013443:	int    0x0
   140013445:	loopne 0x1400134b6
   140013447:	mov    DWORD PTR [rsi+0x3e1c6268],ebp
   14001344d:	rex.WR
   14001344e:	ds enter 0x44c5,0xcc
   140013453:	and    BYTE PTR [rdi],bh
   140013455:	push   rcx
   140013456:	xchg   BYTE PTR [rdx-0x7a263857],ch
   14001345c:	movabs ds:0x81ebef97ccf43ff7,eax
   140013465:	sub    DWORD PTR [rbx],esp
   140013467:	rex.RB (bad) 
   140013469:	rex.R cmp eax,0xfd003340
   14001346f:	mov    ecx,0x7657877d
   140013474:	fcomip st,st(1)
   140013476:	ficom  DWORD PTR [rdi]
   140013478:	div    DWORD PTR [rdi-0x12]
   14001347b:	fistp  WORD PTR [rdi-0x642512d3]
   140013481:	(bad)  
   140013482:	(bad)  
   140013483:	out    dx,eax
   140013484:	cmp    DWORD PTR [rax-0x10],esi
   140013487:	shl    cl,1
   140013489:	mov    ecx,0x7bfda585
   14001348e:	(bad)  
   14001348f:	(bad)  
   140013490:	cmp    eax,0xc5eec226
   140013495:	or     al,0xa9
   140013497:	(bad)  
   140013498:	sbb    al,0x5a
   14001349a:	rex.W sbb cl,BYTE PTR [rsi-0x37]
   14001349e:	add    BYTE PTR [rdx],dl
   1400134a0:	xchg   edi,eax
   1400134a1:	(bad)  
   1400134a2:	jb     0x140013448
   1400134a4:	push   rsp
   1400134a5:	(bad)  
   1400134a6:	cmp    eax,0x28a52397
   1400134ab:	(bad)  
   1400134ac:	rex.RX mov r12b,BYTE PTR [rcx+0x29]
   1400134b0:	sbb    BYTE PTR [rsi+0x559520a],dl
   1400134b6:	je     0x1400134cd
   1400134b8:	sub    ah,BYTE PTR [rdi+0x9]
   1400134bb:	sbb    BYTE PTR [rcx-0x67],dl
   1400134be:	(bad)  
   1400134bf:	(bad)  
   1400134c0:	adc    al,0x28
   1400134c2:	(bad)  
   1400134c3:	(bad)  
   1400134c4:	or     al,0xfb
   1400134c6:	or     bh,BYTE PTR [rcx]
   1400134c8:	pop    rsi
   1400134c9:	js     0x1b02ec56b
   1400134cf:	or     BYTE PTR [rcx+0x512eb03f],cl
   1400134d5:	mov    ch,BYTE PTR [rbx+rcx*4+0x57810013]
   1400134dc:	or     BYTE PTR [rsi+0x12],ch
   1400134df:	xchg   edx,eax
   1400134e0:	(bad)  
   1400134e1:	add    al,0x76
   1400134e3:	leave  
   1400134e4:	(bad)  
   1400134e5:	rex.WRX jnp 0x140013508
   1400134e8:	and    al,BYTE PTR [rbx-0x34]
   1400134eb:	or     al,0xf
   1400134ed:	or     al,0x4
   1400134ef:	xchg   BYTE PTR ss:[rbp-0x22c79f27],bh
   1400134f6:	xchg   ecx,eax
   1400134f7:	div    bh
   1400134f9:	add    esi,ebx
   1400134fb:	(bad)  
   1400134fc:	rex.WR jmp 0x1400134e2
   1400134ff:	mov    ebx,DWORD PTR [rbx-0x151009fb]
   140013505:	movsxd ebp,DWORD PTR [rcx+0x21]
   140013508:	vpsubq ymm2,ymm14,YMMWORD PTR [rdi]
   14001350c:	mov    cl,0xb8
   14001350e:	xor    BYTE PTR [rdi+0x1839b9b9],cl
   140013514:	xchg   ebx,eax
   140013515:	add    BYTE PTR [rax+0xffa113e],0x9c
   14001351c:	mov    esp,0x87d7ff24
   140013521:	mov    edi,0x67edd554
   140013526:	(bad)  
   140013527:	lods   eax,DWORD PTR ds:[rsi]
   140013528:	mov    esp,0xbf97e278
   14001352d:	cli    
   14001352e:	sahf   
   14001352f:	jmp    rcx
   140013531:	ja     0x1400134bb
   140013533:	push   0xffffffff96e5945c
   140013538:	mov    BYTE PTR [rip+0xffffffffce316596],bl        # 0x10e329ad4
   14001353e:	mov    esp,DWORD PTR [rdx-0x28978a40]
   140013544:	(bad)  
   140013545:	sbb    esp,DWORD PTR [rdx-0x5ccde0d5]
   14001354b:	scas   eax,DWORD PTR es:[rdi]
   14001354c:	(bad)  
   14001354d:	jne    0x140013596
   14001354f:	(bad)  
   140013550:	pushf  
   140013551:	cmovb  edi,DWORD PTR [rbp+0x54]
   140013555:	add    al,BYTE PTR [rax-0x5a]
   140013558:	and    bh,BYTE PTR [rip+0x7ce47a10]        # 0x1bce5af6e
   14001355e:	(bad)  
   14001355f:	cmp    eax,0xf400c9ff
   140013564:	(bad)  
   140013565:	mov    edi,0x54afede9
   14001356a:	adc    DWORD PTR [rbx+0x779df37c],esi
   140013570:	jb     0x140013548
   140013572:	fbstp  TBYTE PTR [rbx-0x3d]
   140013576:	movabs eax,ds:0x307e77b5dced775b
   14001357f:	pop    rax
   140013580:	pop    rdx
   140013581:	(bad)  
   140013582:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013583:	pop    rax
   140013584:	cdq    
   140013585:	rex.WRXB ror BYTE PTR [r11+0xc],1
   140013589:	xchg   esi,eax
   14001358a:	sti    
   14001358b:	(bad)  
   14001358c:	pop    rcx
   14001358d:	adc    eax,0x8835a8b9
   140013592:	movabs eax,ds:0x44282e5ac50b0c55
   14001359b:	mov    cl,0x36
   14001359d:	je     0x14001357e
   14001359f:	out    0x87,eax
   1400135a1:	(bad)  
   1400135a2:	or     cl,BYTE PTR [rax+rcx*2+0x21801ce4]
   1400135a9:	test   eax,0x3971073d
   1400135ae:	movaps xmm0,xmm6
   1400135b1:	rex.WRXB add r14,QWORD PTR [r10]
   1400135b4:	(bad)
   1400135b8:	xor    al,0xc0
   1400135ba:	add    DWORD PTR [rbp+0x44834568],ebp
   1400135c0:	xor    eax,0x44f73b54
   1400135c5:	(bad)  
   1400135c6:	adc    BYTE PTR [rdx+riz*2],al
   1400135c9:	cwde   
   1400135ca:	sbb    DWORD PTR [rdx],ebp
   1400135cc:	push   0xffffffffffffffc0
   1400135ce:	(bad)  
   1400135cf:	adc    BYTE PTR [rax-0x66ffbc9f],0x17
   1400135d6:	in     eax,dx
   1400135d7:	pop    rcx
   1400135d8:	mov    eax,0x765ebbf1
   1400135dd:	loopne 0x14001358c
   1400135df:	outs   dx,DWORD PTR ds:[rsi]
   1400135e0:	jmp    QWORD PTR [rbp-0xca18a71]
   1400135e6:	rol    BYTE PTR [rdi+0x7e],cl
   1400135e9:	jmp    0x17fed642d
   1400135ee:	xor    bh,BYTE PTR [rdi]
   1400135f0:	mov    edi,0xc2d2d0fb
   1400135f5:	(bad)  
   1400135f6:	and    esi,DWORD PTR [rdi]
   1400135f8:	out    dx,al
   1400135f9:	(bad)  
   1400135fa:	jo     0x1400135bf
   1400135fc:	sar    BYTE PTR [rsi+0x345e07bd],cl
   140013602:	sub    ch,BYTE PTR [rdi+rdi*4+0x28]
   140013606:	mov    ah,cl
   140013608:	adc    esp,DWORD PTR [rdi-0x50b09bd1]
   14001360e:	(bad)  
   14001360f:	or     al,0x13
   140013611:	pop    rbp
   140013612:	and    cl,al
   140013614:	or     DWORD PTR [rip+0xffffffffc1e47e6f],ebx        # 0x101e5b489
   14001361a:	ja     0x14001361b
   14001361c:	repz call QWORD PTR [rbx+0x1b380a98]
   140013623:	mov    edi,0x2f32cb28
   140013628:	mov    dh,BYTE PTR [rdx-0x57dd35d4]
   14001362e:	stc    
   14001362f:	ror    BYTE PTR [rbx],0x8c
   140013632:	jmp    0x1406ad09a
   140013637:	iret   
   140013638:	add    edi,DWORD PTR [rdx-0x2c8e9664]
   14001363e:	lea    eax,[rdi-0x6660d295]
   140013644:	rex add DWORD PTR [rax+rcx*8],ebx
   140013648:	add    BYTE PTR [rdx-0x32a9ea40],bl
   14001364e:	sahf   
   14001364f:	cld    
   140013650:	enter  0x3eef,0xc
   140013654:	and    BYTE PTR [rbx],al
   140013656:	test   al,0x7
   140013658:	movabs al,ds:0x3b7a293e84a6404f
   140013661:	pop    rdi
   140013662:	cli    
   140013663:	(bad)  
   140013664:	add    ecx,DWORD PTR [rbx]
   140013666:	(bad)  
   140013667:	outs   dx,BYTE PTR ds:[rsi]
   140013668:	mov    ecx,0x2dc0fe61
   14001366d:	mov    bh,0x70
   14001366f:	ficomp DWORD PTR [rdi-0x68]
   140013672:	fstp   TBYTE PTR [rbx-0x18]
   140013675:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013676:	(bad)  
   140013677:	in     eax,dx
   140013678:	fnsave [rip+0x6e96e66f]        # 0x1ae981ced
   14001367e:	cmp    al,0xb0
   140013680:	cmp    al,0x40
   140013682:	(bad)  
   140013683:	gs in  al,dx
   140013685:	pushf  
   140013686:	rex.WXB xchg r9,rax
   140013688:	sbb    al,dh
   14001368a:	sub    eax,0x35a4692b
   14001368f:	clc    
   140013690:	jns    0x14001364f
   140013692:	rex (bad) 
   140013694:	(bad)  
   140013696:	(bad)  
   140013697:	cs rex.R jno 0x140013704
   14001369b:	sub    al,0xb7
   14001369d:	(bad)  
   14001369e:	push   rsi
   14001369f:	jno    0x14001370a
   1400136a1:	push   0x602c59b1
   1400136a6:	mov    bl,0x10
   1400136a8:	nop
   1400136a9:	(bad)  
   1400136aa:	cmp    DWORD PTR [rbp+0x1d],edx
   1400136ad:	mov    cl,0xda
   1400136af:	(bad)  
   1400136b0:	movabs eax,ds:0x32e72442cf292632
   1400136b9:	(bad)  
   1400136ba:	(bad)  
   1400136bb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400136bc:	(bad)  
   1400136bd:	mov    BYTE PTR [rax+0x38c55dc0],0x9c
   1400136c4:	add    DWORD PTR [rcx+0x5a],edx
   1400136c7:	pop    rbx
   1400136c8:	fwait
   1400136c9:	(bad)  
   1400136ca:	add    al,0xa0
   1400136cc:	hlt    
   1400136cd:	rex.WXB mov r8b,0x2f
   1400136d0:	iret   
   1400136d1:	cdq    
   1400136d2:	faddp  st(4),st
   1400136d4:	rex.WB sahf 
   1400136d6:	rex.W in eax,dx
   1400136d8:	(bad)  
   1400136d9:	rcr    DWORD PTR [rdi-0x4],cl
   1400136dc:	(bad)  
   1400136dd:	push   rdi
   1400136de:	(bad)  
   1400136df:	lock mov DWORD PTR ds:[rbp+0x2b],esi
   1400136e4:	mov    dl,0x66
   1400136e6:	lods   eax,DWORD PTR ds:[rsi]
   1400136e7:	pop    rbp
   1400136e8:	sub    ecx,DWORD PTR [rdx+0x76b4bd62]
   1400136ee:	sub    BYTE PTR [rdx],ah
   1400136f0:	lea    ebp,[rsp+rdi*1+0x63]
   1400136f4:	mov    WORD PTR [rsi],fs
   1400136f6:	(bad)  
   1400136f7:	or     BYTE PTR [rbx],dh
   1400136f9:	or     eax,DWORD PTR [rax+0x25]
   1400136fc:	or     DWORD PTR [rdx+0x55],ecx
   1400136ff:	mov    ch,0x22
   140013701:	(bad)  
   140013702:	(bad)  
   140013703:	jns    0x140013783
   140013705:	(bad)  
   140013706:	repz icebp 
   140013708:	scas   eax,DWORD PTR es:[rdi]
   140013709:	and    eax,0x79e000cd
   14001370e:	rex.WRX
   14001370f:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140013711:	(bad)  
   140013712:	jp     0x140013755
   140013714:	jle    0x1400136d0
   140013716:	ins    DWORD PTR es:[rdi],dx
   140013717:	lods   eax,DWORD PTR ds:[rsi]
   140013718:	mov    r8d,0xa451de4
   14001371e:	rex.RX jp 0x140013702
   140013721:	sub    esi,edi
   140013723:	cmc    
   140013724:	(bad)  
   140013725:	jg     0x140013710
   140013727:	mov    bl,0x3d
   140013729:	and    ch,dl
   14001372b:	adc    eax,edx
   14001372d:	(bad)  
   14001372e:	movabs eax,ds:0xe1df6e620d3abf77
   140013737:	in     eax,0xdd
   140013739:	ja     0x1400136f9
   14001373b:	div    BYTE PTR [rsi-0x4023122]
   140013741:	mov    bl,0xc5
   140013743:	popf   
   140013744:	sti    
   140013745:	mov    dl,0x85
   140013747:	xchg   ebp,eax
   140013748:	fnstsw WORD PTR [rbx-0x4fc5108a]
   14001374e:	ja     0x14001373f
   140013750:	or     eax,0x59071687
   140013755:	outs   dx,DWORD PTR ds:[rsi]
   140013756:	jns    0x140013786
   140013758:	(bad)
   14001375b:	adc    al,0xbd
   14001375d:	xchg   esp,eax
   14001375e:	jno    0x140013743
   140013760:	rex.X mov bl,BYTE PTR [rbx]
   140013763:	(bad)  
   140013764:	(bad)  
   140013765:	adc    esp,DWORD PTR [rbx-0x4422f42a]
   14001376b:	pop    rcx
   14001376c:	or     BYTE PTR [rsi],ch
   14001376e:	(bad)  
   14001376f:	in     al,dx
   140013770:	loope  0x14001374e
   140013772:	sub    ch,BYTE PTR [rsi]
   140013774:	mov    es,WORD PTR [rip+0xffffffffbb38a179]        # 0xfb39d8f3
   14001377a:	pop    rcx
   14001377b:	add    ch,BYTE PTR [rdx+0x255d50ab]
   140013781:	xchg   ebp,eax
   140013782:	mov    bl,0x50
   140013784:	sbb    DWORD PTR [rcx+0xd],edi
   140013787:	(bad)  
   140013788:	int3   
   140013789:	test   ebx,ecx
   14001378b:	jns    0x140013735
   14001378d:	or     esi,DWORD PTR [rsi+rbx*2+0x1e]
   140013791:	sbb    al,0xe6
   140013793:	jnp    0x14001373b
   140013795:	test   DWORD PTR [rdx-0x194088e5],0x2cd7a7cb
   14001379f:	cmp    dl,BYTE PTR [rsi+0x67abb2de]
   1400137a5:	mov    esi,0x8aa86008
   1400137aa:	jne    0x140013754
   1400137ac:	scas   al,BYTE PTR es:[rdi]
   1400137ad:	mov    edx,ebp
   1400137af:	(bad)  
   1400137b0:	stos   BYTE PTR es:[rdi],al
   1400137b1:	outs   dx,BYTE PTR ds:[rsi]
   1400137b2:	test   al,0xea
   1400137b4:	sbb    ch,dh
   1400137b6:	(bad)  
   1400137b7:	fwait
   1400137b8:	adc    al,BYTE PTR [rax-0x4545294b]
   1400137be:	or     ah,BYTE PTR [rdx-0x667b666a]
   1400137c4:	jne    0x1400137fe
   1400137c6:	sbb    bh,BYTE PTR [rbp+0x177da5e0]
   1400137cc:	int    0x0
   1400137ce:	loopne 0x14001380a
   1400137d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400137d1:	mov    es,esp
   1400137d3:	sub    al,al
   1400137d5:	in     eax,0xa3
   1400137d7:	push   rdi
   1400137d8:	je     0x1400137cd
   1400137da:	loope  0x14001379f
   1400137dc:	mov    WORD PTR fs:[rbx-0x7cfafbe6],ds
   1400137e3:	mov    ch,bl
   1400137e5:	mov    esp,0xd38d987e
   1400137ea:	rex.WRXB hlt 
   1400137ec:	ss (bad) 
   1400137ee:	cmp    al,0xf1
   1400137f0:	xor    DWORD PTR [rdx],eax
   1400137f2:	push   rbp
   1400137f3:	(bad)  
   1400137f4:	rex.WRX test al,0x3
   1400137f7:	or     DWORD PTR [rax-0x202c806],eax
   1400137fd:	ja     0x1400137db
   1400137ff:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013800:	(bad)
   140013805:	jmp    0x156f7d41f
   14001380a:	mov    dl,0xe5
   14001380c:	pop    rbp
   14001380d:	(bad)  
   14001380e:	mov    ebp,0x8381e0e8
   140013813:	cmp    DWORD PTR [rcx-0x5a212d3f],0x1e
   14001381a:	cli    
   14001381b:	sub    DWORD PTR [rbx-0x9],esp
   14001381e:	jl     0x14001382f
   140013820:	mov    edi,DWORD PTR [rip+0x5ef981c6]        # 0x19efab9ec
   140013826:	add    eax,0x8bcda80a
   14001382b:	in     eax,0x53
   14001382d:	fwait
   14001382e:	in     eax,0x72
   140013830:	and    DWORD PTR [rdx-0x8],edi
   140013833:	ret    0x22d0
   140013836:	mov    bh,0x8a
   140013838:	addr32 mov dh,0x2c
   14001383b:	ss repnz rex.RB ins BYTE PTR es:[rdi],dx
   14001383f:	in     al,0x2
   140013841:	mov    BYTE PTR [rdi+riz*1],bl
   140013844:	enter  0x2218,0x67
   140013848:	rex.WB cmc 
   14001384a:	adc    ah,BYTE PTR [rsp+rbx*2+0x60d72923]
   140013851:	mov    esi,DWORD PTR [rbp-0x6b460130]
   140013857:	sti    
   140013858:	outs   dx,DWORD PTR ds:[rsi]
   140013859:	mov    edx,0xf477e0f3
   14001385e:	push   rbx
   14001385f:	mov    bl,0x74
   140013861:	fbld   TBYTE PTR [rbx-0x7d0b88b1]
   140013867:	out    0xa7,al
   140013869:	ds clc 
   14001386b:	stos   DWORD PTR es:[rdi],eax
   14001386c:	mov    edi,0x42a2e00d
   140013871:	(bad)  
   140013872:	mov    dl,ch
   140013874:	stos   BYTE PTR es:[rdi],al
   140013875:	mov    ch,BYTE PTR [rax+rbp*1+0x30]
   140013879:	push   rsi
   14001387a:	(bad)  
   14001387b:	adc    BYTE PTR [rdi+0x28d7146f],bh
   140013881:	lods   eax,DWORD PTR ds:[rsi]
   140013882:	push   rbp
   140013883:	sar    BYTE PTR [rsi+0x43],0x32
   140013887:	jge    0x1400138d5
   140013889:	xor    ebx,DWORD PTR [rdi]
   14001388b:	shl    BYTE PTR [rdi],0x38
   14001388e:	rex.WRB and al,0x48
   140013891:	add    eax,0x4a614313
   140013896:	xchg   ecx,eax
   140013897:	(bad)  
   140013898:	test   eax,0x12e444a6
   14001389d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001389e:	enter  0x8383,0xd3
   1400138a2:	and    bh,dl
   1400138a4:	mov    ebx,0x8ddd7cef
   1400138a9:	or     eax,DWORD PTR [rdi]
   1400138ab:	outs   dx,BYTE PTR ds:[rsi]
   1400138ac:	cmp    DWORD PTR [rax],edi
   1400138ae:	jg     0x140013873
   1400138b0:	int    0x2f
   1400138b2:	out    0xb4,al
   1400138b4:	mov    bh,0xd8
   1400138b6:	pop    rbx
   1400138b7:	fnstenv [rbx-0xd]
   1400138ba:	sahf   
   1400138bb:	sbb    eax,0xef763b4b
   1400138c0:	mov    ebp,0xbbd96e1
   1400138c5:	cmp    eax,0xec13f5cc
   1400138ca:	cdq    
   1400138cb:	iret   
   1400138cc:	ror    BYTE PTR [rbx+0x18],1
   1400138cf:	(bad)  
   1400138d0:	cs cmp ebx,edx
   1400138d3:	add    al,cl
   1400138d5:	xor    DWORD PTR [rcx],ecx
   1400138d7:	neg    edi
   1400138d9:	rex.RX
   1400138da:	cs pop rax
   1400138dc:	retf   
   1400138dd:	add    eax,0x187004cf
   1400138e2:	pop    rdx
   1400138e3:	in     al,0x85
   1400138e5:	loopne 0x1400138bb
   1400138e7:	rex.RX mov DWORD PTR [rbp-0x4bc66174],r12d
   1400138ee:	pushf  
   1400138ef:	loop   0x1400138c6
   1400138f1:	sti    
   1400138f2:	(bad)  
   1400138f3:	std    
   1400138f4:	xchg   ebp,eax
   1400138f5:	jle    0x140013929
   1400138f7:	jg     0x140013962
   1400138f9:	sub    ebp,DWORD PTR [rdi]
   1400138fb:	jg     0x1400138f9
   1400138fd:	ja     0x1400138ee
   1400138ff:	rex.WXB loop 0x14001393e
   140013902:	jl     0x140013906
   140013904:	repnz mov ch,0xbf
   140013907:	stc    
   140013908:	ror    bh,0x9c
   14001390b:	stc    
   14001390c:	retf   
   14001390d:	(bad)  
   14001390f:	lods   al,BYTE PTR ds:[rsi]
   140013910:	mov    bl,BYTE PTR [rsp+rbp*1-0x53]
   140013914:	mov    ebp,0x86c5e794
   140013919:	mov    BYTE PTR [rip+0x15852b5b],bl        # 0x15586647a
   14001391f:	jnp    0x1400138fe
   140013921:	es jmp 0x1419b4683
   140013927:	ror    BYTE PTR [rsi+rbp*1+0x17b98d4b],0xf5
   14001392f:	sbb    al,0x8c
   140013931:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013932:	sub    al,0xca
   140013934:	mov    WORD PTR [rax+0x3ea53052],cs
   14001393a:	scas   eax,DWORD PTR es:[rdi]
   14001393b:	(bad)  
   14001393c:	add    esp,DWORD PTR [rcx+0xe]
   14001393f:	(bad)  
   140013940:	mov    ah,0xc8
   140013942:	out    0xf,al
   140013944:	fdiv   QWORD PTR [rdx-0x40343095]
   14001394a:	in     eax,dx
   14001394b:	jbe    0x140013920
   14001394d:	sbb    ebp,esp
   14001394f:	cwde   
   140013950:	fstp   TBYTE PTR [rbx-0x1d]
   140013953:	lods   eax,DWORD PTR ds:[rsi]
   140013954:	jmp    0x1a4c00c35
   140013959:	outs   dx,BYTE PTR ds:[rsi]
   14001395a:	(bad)  
   14001395b:	iret   
   14001395c:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   14001395e:	ds jb  0x1400139d4
   140013961:	mov    edi,0x2ff6f597
   140013966:	div    DWORD PTR [rcx-0x2d4fb7c4]
   14001396c:	rex.WRXB mov r8b,0xd2
   14001396f:	xor    ebx,DWORD PTR [rax-0x16]
   140013972:	(bad)  
   140013973:	(bad)  
   140013974:	(bad)  
   140013975:	or     al,0xf9
   140013977:	int3   
   140013978:	add    DWORD PTR [rax+rcx*1],esp
   14001397b:	test   BYTE PTR [rcx+0x21],dl
   14001397e:	clc    
   14001397f:	jmp    0xce1e35c3
   140013984:	(bad)  
   140013985:	mov    bl,0x59
   140013987:	mov    ch,0x8d
   140013989:	(bad)  
   14001398a:	(bad)  
   14001398b:	outs   dx,DWORD PTR ds:[rsi]
   14001398c:	jle    0x140013983
   14001398e:	mov    bl,0x3f
   140013990:	jg     0x140013984
   140013992:	iret   
   140013993:	(bad)  
   140013994:	shl    DWORD PTR [rdi+0x54],cl
   140013997:	je     0x14001395c
   140013999:	pop    rdx
   14001399a:	mov    ebx,0x5872da51
   14001399f:	adc    al,0xc5
   1400139a1:	pop    rax
   1400139a2:	rex.R ins DWORD PTR es:[rdi],dx
   1400139a4:	imul   ecx,ebx,0xf72526eb
   1400139aa:	pop    rdx
   1400139ab:	ror    DWORD PTR [rax+rax*1],1
   1400139ae:	data16 hlt 
   1400139b0:	pushf  
   1400139b1:	jmp    0x15c02fd9c
   1400139b6:	(bad)  
   1400139b8:	jle    0x14001394a
   1400139ba:	rcr    DWORD PTR [rdx+rcx*4],cl
   1400139bd:	mov    dl,0x4c
   1400139bf:	fldcw  WORD PTR [rcx+0xd]
   1400139c2:	or     DWORD PTR [rcx],edx
   1400139c4:	gs lock jle 0x14001394f
   1400139c8:	add    BYTE PTR [rsi],cl
   1400139ca:	and    ah,dh
   1400139cc:	movsx  ebp,dh
   1400139cf:	(bad)  
   1400139d0:	mov    ebp,0xec2c1934
   1400139d5:	pop    rax
   1400139d6:	mov    esi,0x73978ef9
   1400139db:	xchg   edx,eax
   1400139dc:	sub    eax,0x6ebbcb66
   1400139e1:	cmp    bh,BYTE PTR [rdi+rsi*2-0x2d3d3509]
   1400139e8:	repnz (bad) 
   1400139ea:	std    
   1400139eb:	sub    edi,DWORD PTR [rbp+0xc]
   1400139ee:	push   rdx
   1400139ef:	add    edx,DWORD PTR [rbp+0x45]
   1400139f2:	pop    rsi
   1400139f3:	xchg   esp,eax
   1400139f4:	cmp    BYTE PTR [rdi+0x71],bh
   1400139f7:	mov    bl,0xf8
   1400139f9:	call   0x160d36181
   1400139fe:	stc    
   1400139ff:	or     eax,0xfd7683eb
   140013a04:	cld    
   140013a05:	(bad)  
   140013a06:	(bad)  
   140013a07:	std    
   140013a08:	in     eax,0x7f
   140013a0a:	cmc    
   140013a0b:	cmp    eax,DWORD PTR [rax+rbx*1-0x55]
   140013a0f:	push   0xffffffffffffffa1
   140013a11:	stos   BYTE PTR es:[rdi],al
   140013a12:	jrcxz  0x1400139e6
   140013a14:	fidivr DWORD PTR [rsp+rdi*1-0x32]
   140013a18:	mov    edx,DWORD PTR [rsi-0x3de400f9]
   140013a1e:	cdq    
   140013a1f:	neg    DWORD PTR [rcx+rbp*2+0x6]
   140013a23:	add    BYTE PTR [rbx],dh
   140013a25:	cli    
   140013a26:	mov    edx,0x801cd790
   140013a2b:	out    0x6a,al
   140013a2d:	shl    BYTE PTR [rsi],1
   140013a2f:	(bad)  
   140013a30:	mov    edx,DWORD PTR [rcx+rcx*8-0x1f0fda33]
   140013a37:	loopne 0x140013a1f
   140013a39:	pop    rax
   140013a3a:	clc    
   140013a3b:	cmp    DWORD PTR [rax],ebx
   140013a3d:	or     bl,BYTE PTR [rip+0xffffffffebd979ec]        # 0x12bdab42f
   140013a43:	outs   dx,DWORD PTR ds:[rsi]
   140013a44:	pop    rsp
   140013a45:	jl     0x140013a40
   140013a47:	sbb    edi,DWORD PTR [rdi-0x56f48573]
   140013a4d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013a4e:	sub    DWORD PTR [rdi+0x49e9496],0xffffff91
   140013a55:	test   al,0x2d
   140013a57:	xchg   ebx,eax
   140013a58:	(bad)  
   140013a59:	cld    
   140013a5a:	(bad)  
   140013a5c:	(bad)  
   140013a5d:	fdiv   DWORD PTR [rax-0x399a2b9f]
   140013a63:	lods   eax,DWORD PTR ds:[rsi]
   140013a64:	mov    dl,BYTE PTR [rsi+0x6d1c2bea]
   140013a6a:	ins    BYTE PTR es:[rdi],dx
   140013a6b:	ins    DWORD PTR es:[rdi],dx
   140013a6c:	jle    0x140013a31
   140013a6e:	js     0x140013a60
   140013a70:	push   QWORD PTR [rsi]
   140013a72:	push   0xffffffffba330006
   140013a77:	es je  0x140013a6d
   140013a7a:	lea    eax,[rdi+0x2c16ce29]
   140013a80:	retf   
   140013a81:	ret    0x68a8
   140013a84:	(bad)  
   140013a85:	push   rbx
   140013a86:	xor    BYTE PTR [rbx],0x10
   140013a89:	adc    ch,BYTE PTR [rax]
   140013a8b:	in     al,dx
   140013a8c:	cmp    BYTE PTR [rdi],bl
   140013a8e:	scas   eax,DWORD PTR es:[rdi]
   140013a8f:	lahf   
   140013a90:	cmp    eax,0x80073e7f
   140013a95:	sub    al,0x4d
   140013a97:	sbb    DWORD PTR [rax],eax
   140013a99:	xchg   edx,eax
   140013a9a:	and    al,0x21
   140013a9c:	imul   ebx,DWORD PTR [rbp-0x186390fd],0x71
   140013aa3:	fdiv   DWORD PTR [rsi+riz*4-0x1e]
   140013aa7:	(bad)  
   140013aa8:	rex.WXB (bad) 
   140013aaa:	add    eax,eax
   140013aac:	mov    WORD PTR [rsi+0x6c5aea17],gs
   140013ab2:	movsxd eax,esi
   140013ab4:	lock xor ebx,DWORD PTR [rdx+0x34668cd1]
   140013abb:	movabs ds:0x8cd19a334668cd19,eax
   140013ac4:	data16 xor al,0xa3
   140013ac7:	sbb    ebp,ecx
   140013ac9:	push   0xffffffffd19a3346
   140013ace:	mov    WORD PTR [rsi+0x34],fs
   140013ad1:	movabs ds:0x8cd19a334668cd19,eax
   140013ada:	data16 xor al,0xa3
   140013add:	sbb    ebp,ecx
   140013adf:	push   0xffffffffd19a3346
   140013ae4:	mov    WORD PTR [rsi+0x34],fs
   140013ae7:	movabs ds:0x8cd19a334668cd19,eax
   140013af0:	data16 xor al,0xa3
   140013af3:	sbb    ebp,ecx
   140013af5:	push   0xffffffffd19a3346
   140013afa:	mov    WORD PTR [rsi+0x34],fs
   140013afd:	movabs ds:0x8cd19a334668cd19,eax
   140013b06:	data16 xor al,0xa3
   140013b09:	sbb    ebp,ecx
   140013b0b:	push   0xffffffffd19a3346
   140013b10:	mov    WORD PTR [rsi+0x34],fs
   140013b13:	movabs ds:0xe33fff4005e8cd19,eax
   140013b1c:	push   0x2c
   140013b1e:	ins    BYTE PTR es:[rdi],dx
   140013b1f:	xchg   ecx,eax
   140013b20:	rex.W stc 
   140013b22:	add    eax,DWORD PTR [rax]
   140013b24:	add    BYTE PTR [rax],al
   140013b26:	add    BYTE PTR [rcx+0x45],cl
   140013b29:	rex.WRX
   140013b2a:	rex.R scas al,BYTE PTR es:[rdi]
   140013b2c:	rex.X (bad) 
   140013b2e:	(bad)  
   140013b2f:	add    BYTE PTR [rax],ch
   140013b31:	add    BYTE PTR [rax],al
   140013b33:	add    BYTE PTR [rax+0x0],al
   140013b36:	add    BYTE PTR [rax],al
   140013b38:	add    BYTE PTR [rax],0x0
   140013b3b:	add    BYTE PTR [rcx],al
   140013b3d:	add    BYTE PTR [rax],ah
   140013b3f:	add    BYTE PTR [rax],al
   140013b41:	add    BYTE PTR [rax],al
   140013b43:	add    BYTE PTR [rax],al
   140013b45:	rex.X add BYTE PTR [rax],al
	...
   140013ef0:	mov    esp,0xbc086f9d
   140013ef5:	popf   
   140013ef6:	outs   dx,DWORD PTR ds:[rsi]
   140013ef7:	adc    DWORD PTR [rbp+rbx*4-0x6243e291],edi
   140013efe:	outs   dx,DWORD PTR ds:[rsi]
   140013eff:	cs mov esp,0xbc456b9b
   140013f05:	popf   
   140013f06:	outs   dx,BYTE PTR ds:[rsi]
   140013f07:	sub    al,0xbc
   140013f09:	popf   
   140013f0a:	outs   dx,DWORD PTR ds:[rsi]
   140013f0b:	or     DWORD PTR [rax],eax
	...
   140013fd1:	add    BYTE PTR [rax],al
   140013fd3:	add    BYTE PTR [rbp+rbx*4-0x6243f891],bh
   140013fda:	outs   dx,DWORD PTR ds:[rsi]
   140013fdb:	adc    DWORD PTR [rbp+rbx*4-0x6243e391],edi
   140013fe2:	outs   dx,DWORD PTR ds:[rsi]
   140013fe3:	cs mov esp,0xbc45689a
   140013fe9:	xchg   edi,eax
   140013fea:	(bad)  
   140013feb:	pop    rdi
   140013fec:	mov    ebx,0xb2805a93
   140013ff1:	mov    dl,BYTE PTR [rcx-0x67]
   140013ff4:	stos   BYTE PTR es:[rdi],al
   140013ff5:	(bad)  
   140013ff6:	rex.WR lods al,BYTE PTR ds:[rsi]
   140013ff8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013ff9:	or     BYTE PTR [rax-0x40],0xab
   140013ffd:	test   BYTE PTR [rbp-0x2b],cl
   140014000:	mov    al,0x8a
   140014002:	push   rdx
   140014003:	fcom   QWORD PTR [rax-0x6853b98f]
   140014009:	jle    0x140014064
   14001400b:	gs mov esp,0xbc176f9d
   140014011:	popf   
   140014012:	outs   dx,DWORD PTR ds:[rsi]
   140014013:	add    al,0x0
	...
   1400140b5:	add    BYTE PTR [rax],al
   1400140b7:	add    BYTE PTR [rbp+rbx*4-0x6243f991],bh
   1400140be:	outs   dx,DWORD PTR ds:[rsi]
   1400140bf:	adc    BYTE PTR [rbp+rbx*4-0x6243e391],bh
   1400140c6:	outs   dx,DWORD PTR ds:[rsi]
   1400140c7:	(bad)  
   1400140c8:	mov    ebp,0xbb456699
   1400140cd:	xchg   ebp,eax
   1400140ce:	pop    rsi
   1400140cf:	(bad)  
   1400140d0:	mov    bh,0x8f
   1400140d2:	push   rdi
   1400140d3:	xchg   BYTE PTR [rsi-0x575fb17a],ch
   1400140d9:	or     DWORD PTR [rdx-0x4c],0xc5477ea6
   1400140e0:	stos   BYTE PTR es:[rdi],al
   1400140e1:	or     DWORD PTR [rax-0x27],0xe3548ab0
   1400140e8:	mov    bh,0x93
   1400140ea:	(bad)  
   1400140eb:	call   0x12b77e3b0
   1400140f0:	int    0xb2
   1400140f2:	mov    dh,ch
   1400140f4:	fld    st(1)
   1400140f6:	fwait
   1400140f7:	icebp  
   1400140f8:	in     al,0xd0
   1400140fa:	scas   eax,DWORD PTR es:[rdi]
   1400140fb:	repnz in al,dx
   1400140fd:	xlat   BYTE PTR ds:[rbx]
   1400140fe:	mov    dh,0xed
   140014100:	lock fnstsw WORD PTR [rdi-0x78431d1c]
   140014107:	sti    
   140014108:	movabs eax,ds:0xa77b415c6de63474
   140014111:	mov    esp,DWORD PTR [rdx+0x50]
   140014114:	mov    edx,0xbc4d6e9b
   140014119:	popf   
   14001411a:	outs   dx,DWORD PTR ds:[rsi]
   14001411b:	cmp    edi,DWORD PTR [rbp+rbx*4+0xe6f]
	...
   14001419a:	add    BYTE PTR [rax],al
   14001419c:	mov    esp,0xbc056f9d
   1400141a1:	popf   
   1400141a2:	outs   dx,DWORD PTR ds:[rsi]
   1400141a3:	(bad)  
   1400141a4:	mov    esp,0xbc1e6f9d
   1400141a9:	popf   
   1400141aa:	outs   dx,DWORD PTR ds:[rsi]
   1400141ab:	cs mov esp,0xbb446498
   1400141b1:	xchg   esp,eax
   1400141b2:	pop    rsp
   1400141b3:	(bad)  
   1400141b4:	mov    dl,0x8c
   1400141b6:	push   rbp
   1400141b7:	lea    ebp,[rcx-0x585ab27e]
   1400141bd:	or     BYTE PTR [rdx-0x43],0xa6
   1400141c1:	jle    0x14001420b
   1400141c3:	iret   
   1400141c4:	stos   BYTE PTR es:[rdi],al
   1400141c5:	or     DWORD PTR [rcx-0x22],0xe55086ad
   1400141cc:	mov    dh,0x91
   1400141ce:	pop    rdi
   1400141cf:	jmp    0x12e73e195
   1400141d4:	(bad)  
   1400141d5:	mov    al,0x85
   1400141d7:	lock fnstcw WORD PTR [rdi-0x321b0e6a]
   1400141de:	test   al,0xf0
   1400141e0:	out    dx,al
   1400141e1:	fstp   TBYTE PTR [rsp+rbp*8-0x1e442410]
   1400141e8:	jmp    0x1400141bf
   1400141ea:	mov    bl,0xd5
   1400141ec:	call   0x123c9edc2
   1400141f1:	leave  
   1400141f2:	movabs eax,ds:0x86b9d8b293c0debd
   1400141fb:	scas   al,BYTE PTR es:[rdi]
   1400141fc:	xlat   BYTE PTR ds:[rbx]
   1400141fd:	mov    bh,0x83
   1400141ff:	mov    dl,0xda
   140014201:	mov    edx,0xd1e7ba85
   140014206:	scas   eax,DWORD PTR es:[rdi]
   140014207:	in     eax,0xbf
   140014209:	xchg   DWORD PTR [rcx],edi
   14001420b:	call   QWORD PTR [rcx-0x5c22ae89]
   140014211:	mov    gs,WORD PTR [rsi-0x35]
   140014214:	test   al,0x8e
   140014216:	data16 rol BYTE PTR [rbp-0x7d41c59b],1
   14001421d:	ins    BYTE PTR es:[rdi],dx
   14001421e:	rex.WRB
   14001421f:	fs mov esp,0xbc216f9d
   140014225:	popf   
   140014226:	outs   dx,DWORD PTR ds:[rsi]
   140014227:	(bad)  
   140014228:	mov    esp,0xa6f9d
	...
   14001427d:	add    BYTE PTR [rax],al
   14001427f:	add    BYTE PTR [rbp+rbx*4-0x6243fc91],bh
   140014286:	outs   dx,DWORD PTR ds:[rsi]
   140014287:	or     eax,0x1e6f9dbc
   14001428c:	mov    esp,0xbc2e6c9c
   140014291:	xchg   edi,eax
   140014292:	movsxd eax,DWORD PTR [rdi+rsi*4-0x70]
   140014296:	pop    rdx
   140014297:	data16 lods al,BYTE PTR ds:[rsi]
   140014299:	xchg   BYTE PTR [rdx-0x69],dl
   14001429c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001429d:	or     BYTE PTR [rsi-0x50],0xa5
   1400142a1:	jg     0x1400142ed
   1400142a3:	(bad)
   1400142a6:	rex.W (bad) 
   1400142a8:	stos   BYTE PTR es:[rdi],al
   1400142a9:	or     DWORD PTR [rcx-0x1c],0xe84e84ac
   1400142b0:	mov    ch,0x90
   1400142b2:	pop    rbx
   1400142b3:	(bad)  
   1400142b4:	rcr    BYTE PTR [rbp-0x52311195],0x7e
   1400142bb:	lock fidivr DWORD PTR [rdx+rdx*4-0x5b341b10]
   1400142c3:	in     eax,dx
   1400142c4:	in     eax,dx
   1400142c5:	fdivr  DWORD PTR [rax-0x3f220f18]
   1400142cb:	fucomip st,st(4)
   1400142cd:	fnstcw WORD PTR [rdx-0x4f2e172c]
   1400142d3:	(bad)  
   1400142d4:	jrcxz  0x1400142a2
   1400142d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400142d7:	mov    esi,0xb89cc4df
   1400142dc:	fnstcw WORD PTR [rsi-0x48284a71]
   1400142e2:	(bad)  
   1400142e3:	mov    bh,0xd8
   1400142e5:	mov    bh,0x7f
   1400142e7:	rcr    bl,0xb9
   1400142ea:	or     bl,0xe0
   1400142ed:	mov    edx,0xbee3d781
   1400142f2:	test   dh,bl
   1400142f4:	call   0x12be5c8ba
   1400142f9:	(bad)  
   1400142fa:	xchg   ecx,ebp
   1400142fc:	in     eax,dx
   1400142fd:	(bad)
   140014300:	out    dx,eax
   140014301:	leave  
   140014302:	(bad)  
   140014303:	out    0xeb,eax
   140014305:	(bad)  
   140014306:	scas   al,BYTE PTR es:[rdi]
   140014307:	repz mov esp,0xaaff3a86
   14001430d:	xor    DWORD PTR [rsi],0xffffffee
   140014310:	int3   
   140014311:	scas   al,BYTE PTR es:[rdi]
   140014312:	jle    0x1400142cb
   140014314:	jrcxz  0x1400142dc
   140014316:	cwde   
   140014317:	ret    0xa4d7
   14001431a:	pop    rbp
   14001431b:	inc    DWORD PTR [rax+0x65d43261]
   140014321:	push   rsp
   140014322:	cmp    eax,0x3f5d728b
   140014327:	mov    DWORD PTR [rbx+rdi*2-0x624395aa],edx
   14001432e:	outs   dx,DWORD PTR ds:[rsi]
   14001432f:	sbb    eax,0x0
	...
   140014374:	mov    ebp,0xb72c669a
   140014379:	xchg   edx,eax
   14001437a:	pop    rdi
   14001437b:	je     0x140014328
   14001437d:	xchg   DWORD PTR [rbp-0x65],edx
   140014380:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014381:	or     DWORD PTR [rdi-0x46],0xcd4a7fa6
   140014388:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014389:	or     BYTE PTR [rax-0x24],0xab
   14001438d:	(bad)  
   14001438e:	rex.WX call 0x1294fc841
   140014394:	mov    ah,0x8b
   140014396:	push   rbx
   140014397:	in     eax,dx
   140014398:	rcr    DWORD PTR [rbp+riz*2+0x77abceef],0xef
   1400143a0:	fidivr DWORD PTR [rdx-0x371a1276]
   1400143a6:	sahf   
   1400143a7:	jmp    0x121b51a99
   1400143ac:	lock ffree st(0)
   1400143af:	fucomp st(4)
   1400143b1:	fidivr DWORD PTR [rbp-0x492b172d]
   1400143b7:	retf   0xcee3
   1400143ba:	lods   al,BYTE PTR ds:[rsi]
   1400143bb:	ret    0xc7de
   1400143be:	lahf   
   1400143bf:	mov    ebx,0xbb93bfda
   1400143c4:	fdivr  DWORD PTR [rcx-0x49274277]
   1400143ca:	add    esp,0xcf7fb8da
   1400143d0:	fidivr WORD PTR [rcx-0x441d2880]
   1400143d6:	and    eax,0xe683bee5
   1400143dc:	jmp    0x129ebcaa2
   1400143e1:	(bad)  
   1400143e2:	xchg   ecx,ebp
   1400143e4:	in     al,dx
   1400143e5:	(bad)  
   1400143e6:	mov    edi,esp
   1400143e8:	in     eax,dx
   1400143e9:	(bad)  
   1400143ea:	mov    esp,esp
   1400143ec:	in     al,dx
   1400143ed:	(bad)  
   1400143ee:	mov    eax,fs
   1400143f0:	in     eax,dx
   1400143f1:	(bad)  
   1400143f2:	(bad)  
   1400143f3:	fucomi st,st(4)
   1400143f5:	(bad)  
   1400143f6:	mov    edi,ss
   1400143f8:	jmp    0x1400143c0
   1400143fa:	mov    dl,ch
   1400143fc:	jmp    0x1400143c3
   1400143fe:	mov    ebp,edx
   140014400:	in     eax,dx
   140014401:	(bad)
   140014404:	jmp    0x1400143da
   140014406:	scas   al,BYTE PTR es:[rdi]
   140014407:	out    dx,al
   140014408:	ror    BYTE PTR [rdi+rdi*1+0x3583abff],0xf1
   140014410:	shr    BYTE PTR [rdi-0x4f2e2785],1
   140014416:	ja     0x140014405
   140014418:	leave  
   140014419:	(bad)  
   14001441a:	pop    rcx
   14001441b:	(bad)  
   14001441c:	lods   eax,DWORD PTR ds:[rsi]
   14001441d:	jle    0x140014449
   14001441f:	std    
   140014420:	mov    esi,0xe0df719e
   140014425:	mov    edi,0x88b6e38c
   14001442a:	rex.RX in al,dx
   14001442c:	push   0x7a3453
   140014431:	add    BYTE PTR [rax],al
   140014433:	or     al,0x0
   140014435:	add    BYTE PTR [rax],al
   140014437:	(bad)  
   140014438:	add    BYTE PTR [rax],al
   14001443a:	add    BYTE PTR [rcx],al
	...
   140014470:	(bad)  
   140014471:	(bad)  
   140014472:	call   FWORD PTR [rsi]
   140014474:	mov    ch,0x92
   140014476:	pop    rdi
   140014477:	mov    ecx,0xf2528cb7
   14001447c:	ret    0x5c98
   14001447f:	repnz shr BYTE PTR [rax-0x46230f92],1
   140014486:	test   ebp,ebp
   140014488:	in     eax,0xc7
   14001448a:	cwde   
   14001448b:	out    0xed,eax
   14001448d:	(bad)  
   14001448e:	lods   al,BYTE PTR ds:[rsi]
   14001448f:	fucomp st(5)
   140014491:	fnstcw WORD PTR [rax-0x4125122a]
   140014497:	(bad)  
   140014498:	jmp    0x126ccfe74
   14001449d:	shl    BYTE PTR [rax-0x58331e3c],cl
   1400144a3:	rcr    ebp,0xc4
   1400144a6:	popf   
   1400144a7:	rcr    edx,0xbc
   1400144aa:	mov    es,ebx
   1400144ac:	fnstcw WORD PTR [rax-0x4824367d]
   1400144b2:	jle    0x140014486
   1400144b4:	fistp  QWORD PTR [rcx-0x441c2683]
   1400144ba:	jge    0x14001449c
   1400144bc:	out    0xbe,al
   1400144be:	jle    0x1400144a6
   1400144c0:	call   0x129e8c685
   1400144c5:	ret    0xe783
   1400144c8:	(bad)  
   1400144c9:	(bad)
   1400144cc:	jmp    0x140014494
   1400144ce:	(bad)  
   1400144cf:	loop   0x1400144bb
   1400144d1:	(bad)  
   1400144d2:	(bad)  
   1400144d3:	fucomp st(2)
   1400144d5:	enter  0xd991,0xe9
   1400144d9:	(bad)  
   1400144da:	nop
   1400144db:	(bad)  
   1400144dc:	jmp    0x129d6d4a7
   1400144e1:	(bad)
   1400144e4:	(bad)  
   1400144e5:	(bad)
   1400144e8:	jmp    0x12bdeceb0
   1400144ed:	ret    
   1400144ee:	xchg   ecx,esp
   1400144f0:	in     al,dx
   1400144f1:	(bad)  
   1400144f2:	test   ebp,esp
   1400144f4:	in     al,dx
   1400144f5:	(bad)  
   1400144f6:	test   dl,ch
   1400144f8:	out    dx,al
   1400144f9:	mov    BYTE PTR [rbp-0x79391012],0xf1
   140014500:	repz retf 0xf08a
   140014504:	out    dx,al
   140014505:	(bad)  
   140014506:	mov    al,0xf9
   140014508:	(bad)  
   140014509:	xchg   ecx,eax
   14001450a:	rex.XB push QWORD PTR [r10-0x2209c678]
   140014511:	mov    edx,0xb5d7dd82
   140014516:	jbe    0x140014503
   140014518:	int    0x9f
   14001451a:	pop    rsp
   14001451b:	jmp    FWORD PTR [rsi+rdi*2-0x644b09d5]
   140014522:	jae    0x1400144cb
   140014524:	retf   
   140014525:	mov    dl,0x7e
   140014527:	rcl    esi,1
   140014529:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001452a:	(bad)  
   14001452b:	(bad)  
   14001452c:	jle    0x140014588
   14001452e:	sub    BYTE PTR [rdx+0x24000000],bh
   140014534:	add    BYTE PTR [rax],al
   140014536:	add    BYTE PTR [rdi],ah
   140014538:	add    BYTE PTR [rax],al
   14001453a:	add    BYTE PTR [rdx],bl
   14001453c:	add    BYTE PTR [rax],al
   14001453e:	add    BYTE PTR [rax+rax*1],cl
   140014541:	add    BYTE PTR [rax],al
   140014543:	add    al,BYTE PTR [rax]
	...
   14001456d:	add    BYTE PTR [rax],al
   14001456f:	add    bh,bh
   140014571:	(bad)  
   140014572:	call   FWORD PTR [rsi]
   140014574:	test   ch,0x79
   140014577:	push   rbp
   140014579:	rcr    DWORD PTR [rbx+rbp*8-0x36351908],cl
   140014580:	cmc    
   140014581:	in     al,0xc6
   140014583:	mov    edx,0xb1bdddf1
   140014588:	in     eax,dx
   140014589:	fdiv   DWORD PTR [rsi-0x59311857]
   14001458f:	mov    cl,0xe3
   140014591:	(bad)  
   140014592:	xchg   edx,eax
   140014593:	enter  0xb6de,0x7a
   140014597:	xlat   BYTE PTR ds:[rbx]
   140014598:	loop   0x140014556
   14001459a:	sbb    ah,0xe6
   14001459d:	mov    edi,0xc2e9e283
   1400145a2:	test   bh,ah
   1400145a4:	jmp    0x14001456a
   1400145a6:	test   dh,ah
   1400145a8:	lock mov DWORD PTR [rdi-0x712e061d],0x9dd7fbe4
   1400145b3:	out    0xf6,al
   1400145b5:	fldcw  WORD PTR [rcx-0x4c270f18]
   1400145bb:	out    0xef,al
   1400145bd:	fnstenv [rbp-0x4c260e1d]
   1400145c3:	(bad)  
   1400145c5:	fisubr DWORD PTR [rcx-0x652b0827]
   1400145cb:	xlat   BYTE PTR ds:[rbx]
   1400145cc:	icebp  
   1400145cd:	retf   0xda8d
   1400145d0:	in     al,dx
   1400145d1:	(bad)
   1400145d4:	in     eax,dx
   1400145d5:	enter  0xe58d,0xec
   1400145d9:	(bad)  
   1400145da:	mov    ebx,ebp
   1400145dc:	in     eax,dx
   1400145dd:	(bad)  
   1400145de:	mov    esi,ebp
   1400145e0:	out    dx,eax
   1400145e1:	(bad)  
   1400145e2:	mov    ecx,esi
   1400145e4:	lock enter 0xf08b,0xf1
   1400145e9:	retf   0xf08c
   1400145ec:	repz int3 
   1400145ee:	mov    gs,ebp
   1400145f0:	hlt    
   1400145f1:	int    0x8f
   1400145f3:	in     al,dx
   1400145f4:	hlt    
   1400145f5:	(bad)  
   1400145f6:	nop
   1400145f7:	jmp    0x1269114f1
   1400145fc:	test   bh,0x91
   1400145ff:	in     al,0xf8
   140014601:	rcl    DWORD PTR [rbx-0x4d270f1f],1
   140014607:	repnz leave 
   140014609:	xchg   esi,eax
   14001460a:	rex.W push QWORD PTR [rcx-0x200fc577]
   140014611:	mov    esp,0xb7d7ca87
   140014616:	jns    0x1400145fc
   140014618:	shl    BYTE PTR [rax+riz*2+0x2c81aeff],cl
   14001461f:	div    BYTE PTR [rdi-0x34528962]
   140014625:	mov    al,0x7c
   140014627:	rcl    esp,1
   140014629:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001462a:	(bad)  
   14001462b:	call   FWORD PTR [rdx+0xd81d70]
   140014631:	add    BYTE PTR [rax],al
   140014633:	and    eax,0x31000000
   140014638:	add    BYTE PTR [rax],al
   14001463a:	add    BYTE PTR [rcx],dh
   14001463c:	add    BYTE PTR [rax],al
   14001463e:	add    BYTE PTR [rbx],ch
   140014640:	add    BYTE PTR [rax],al
   140014642:	add    BYTE PTR [rsi],bl
   140014644:	add    BYTE PTR [rax],al
   140014646:	add    BYTE PTR [rip+0x3000000],cl        # 0x14301464c
	...
   140014670:	(bad)  
   140014671:	(bad)  
   140014672:	call   FWORD PTR [rsi]
   140014674:	in     eax,0xba
   140014676:	je     0x140014677
   140014678:	hlt    
   140014679:	int    0x91
   14001467b:	mov    dl,0xff
   14001467d:	fisubr WORD PTR [rbx-0x5621017a]
   140014683:	mov    ebp,?
   140014685:	fisubr WORD PTR [rbx-0x5b260576]
   14001468b:	xchg   esi,eax
   14001468c:	lock mov BYTE PTR [rsi-0x7c390f1d],0xfd
   140014694:	not    eax
   140014696:	xchg   ecx,eax
   140014697:	fdivp  st(1),st
   140014699:	(bad)  
   14001469a:	cdq    
   14001469b:	iret   
   14001469c:	stc    
   14001469d:	(bad)  
   14001469e:	cdq    
   14001469f:	leave  
   1400146a0:	(bad)  
   1400146a1:	fstp   DWORD PTR [rbx-0x531b003d]
   1400146a7:	int    0xe9
   1400146a9:	(bad)  
   1400146ab:	loope  0x14001465d
   1400146ad:	ret    0xf1e5
   1400146b0:	jge    0x140014655
   1400146b2:	repnz stc 
   1400146b4:	pop    rdx
   1400146b5:	mov    ?,esi
   1400146b7:	std    
   1400146b8:	rex.WX test al,dil
   1400146bb:	dec    DWORD PTR [rax-0x7f]
   1400146be:	clc    
   1400146bf:	dec    DWORD PTR [rsi-0x7b]
   1400146c2:	clc    
   1400146c3:	jmp    QWORD PTR [rbx-0x6e]
   1400146c6:	cmc    
   1400146c7:	dec    DWORD PTR [rax-0x47011459]
   1400146cd:	mov    edi,0xcddffed5
   1400146d2:	mov    cl,0xf9
   1400146d4:	in     al,dx
   1400146d5:	retf   0xf093
   1400146d8:	in     eax,dx
   1400146d9:	retf   0xe78e
   1400146dc:	not    ebx
   1400146de:	cdq    
   1400146df:	loop   0x1400146d9
   1400146e1:	(bad)  
   1400146e2:	pushf  
   1400146e3:	loope  0x1400146db
   1400146e5:	(bad)  
   1400146e6:	fwait
   1400146e7:	loopne 0x1400146e0
   1400146e9:	(bad)  
   1400146ea:	(bad)  
   1400146eb:	(bad)  
   1400146ed:	(bad)  
   1400146ee:	cdq    
   1400146ef:	(bad)  
   1400146f1:	rcr    DWORD PTR [rcx-0x682c0722],cl
   1400146f7:	loopne 0x1400146f1
   1400146f9:	rcl    DWORD PTR [rsi-0x6a2d0720],cl
   1400146ff:	loopne 0x1400146fc
   140014701:	(bad)  
   140014702:	xchg   esi,eax
   140014703:	fcomip st,st(3)
   140014705:	fidiv  DWORD PTR [rcx+rsi*8-0xb46432]
   14001470c:	mov    bl,0x8b
   14001470e:	cmp    ebp,edi
   140014710:	in     eax,0xc1
   140014712:	mov    cl,dl
   140014714:	fidivr WORD PTR [rbx-0x572a1c85]
   14001471a:	movsxd edi,edi
   14001471c:	mov    al,0x83
   14001471e:	(bad)  
   14001471f:	cmc    
   140014720:	shl    DWORD PTR [rbp-0x472a5084],0x82
   140014727:	rcr    eax,1
   140014729:	stos   BYTE PTR es:[rdi],al
   14001472a:	call   DWORD PTR [rdx+rsi*2+0xd51f]
   140014732:	add    BYTE PTR [rax+rax*1],dl
   140014735:	add    BYTE PTR [rax],al
   140014737:	and    al,BYTE PTR [rax]
   140014739:	add    BYTE PTR [rax],al
   14001473b:	and    eax,DWORD PTR [rax]
   14001473d:	add    BYTE PTR [rax],al
   14001473f:	add    BYTE PTR es:[rax],al
   140014742:	add    BYTE PTR [rsi],ah
   140014744:	add    BYTE PTR [rax],al
   140014746:	add    BYTE PTR [rsi],bl
   140014748:	add    BYTE PTR [rax],al
   14001474a:	add    BYTE PTR [rdx],dl
   14001474c:	add    BYTE PTR [rax],al
   14001474e:	add    BYTE PTR [rip+0x0],al        # 0x140014754
	...
   140014770:	(bad)  
   140014771:	(bad)  
   140014772:	call   FWORD PTR [rsi]
   140014774:	in     eax,0xba
   140014776:	jne    0x140014777
   140014778:	cmc    
   140014779:	rcl    BYTE PTR [rsi+rbp*4-0x76532001],1
   140014780:	(bad)  
   140014781:	fisubr WORD PTR [rbx-0x51200173]
   140014787:	mov    edi,esi
   140014789:	rcr    DWORD PTR [rcx+rbp*4-0x7e3c13],cl
   140014790:	hlt    
   140014791:	int    0x8f
   140014793:	out    0xfc,eax
   140014795:	(bad)  [rcx-0x60240143]
   14001479b:	mov    ecx,0xc2abe6ff
   1400147a0:	in     al,0xdf
   1400147a2:	(bad)  
   1400147a3:	loop   0x140014726
   1400147a5:	test   eax,0x7935fbf3
   1400147aa:	clc    
   1400147ab:	call   FWORD PTR [rdx]
   1400147ad:	gs hlt 
   1400147af:	call   FWORD PTR [rax]
   1400147b1:	(bad)  {k3}
   1400147b6:	icebp  
   1400147b7:	call   FWORD PTR [rsi]
   1400147b9:	gs icebp 
   1400147bb:	call   FWORD PTR [rsi]
   1400147bd:	fs icebp 
   1400147bf:	call   FWORD PTR [rip+0x1afff163]        # 0x15b013928
   1400147c5:	(bad)  
   1400147c6:	icebp  
   1400147c7:	call   FWORD PTR [rax]
   1400147c9:	pop    rdi
   1400147ca:	repz call FWORD PTR [rdi]
   1400147cd:	gs idiv bh
   1400147d0:	rex.XB jg 0x1400147cc
   1400147d3:	dec    DWORD PTR [rdi-0x2b021554]
   1400147d9:	leave  
   1400147da:	mov    ebx,0x90c3e1f4
   1400147df:	out    0xee,eax
   1400147e1:	int    0x96
   1400147e3:	(bad)  
   1400147e5:	fisub  DWORD PTR [rax-0x61290623]
   1400147eb:	fdivp  st(1),st
   1400147ed:	(bad)  
   1400147ee:	popf   
   1400147ef:	fdivp  st(1),st
   1400147f1:	(bad)  
   1400147f2:	pushf  
   1400147f3:	fdivp  st(2),st
   1400147f5:	(bad)  
   1400147f6:	(bad)  
   1400147f7:	fdivp  st(2),st
   1400147f9:	(bad)  
   1400147fa:	cdq    
   1400147fb:	(bad)  
   1400147fd:	(bad)  
   1400147fe:	cwde   
   1400147ff:	(bad)  
   140014801:	(bad)  
   140014802:	cwde   
   140014803:	(bad)  
   140014805:	fidivr WORD PTR [rax+0x53a3d4f1]
   14001480b:	push   QWORD PTR [rsp+rcx*4-0x3b1810c4]
   140014812:	mov    cs,ecx
   140014814:	loopne 0x1400147d4
   140014816:	jle    0x1400147fb
   140014818:	fldcw  WORD PTR [rbp-0x7a4d0098]
   14001481e:	xor    ah,dh
   140014820:	(bad)  
   140014821:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014822:	jge    0x1400147d3
   140014824:	fnstcw WORD PTR [rbx-0x50232f7d]
   14001482a:	push   0xffffffffffffffff
   14001482c:	sahf   
   14001482d:	je     0x14001484f
   14001482f:	rol    DWORD PTR [rax],cl
   140014831:	add    BYTE PTR [rax],al
   140014833:	or     DWORD PTR [rax],eax
   140014835:	add    BYTE PTR [rax],al
   140014837:	(bad)  
   140014838:	add    BYTE PTR [rax],al
   14001483a:	add    BYTE PTR [rip+0x14000000],dl        # 0x154014840
   140014840:	add    BYTE PTR [rax],al
   140014842:	add    BYTE PTR [rbx],dl
   140014844:	add    BYTE PTR [rax],al
   140014846:	add    BYTE PTR [rcx],dl
   140014848:	add    BYTE PTR [rax],al
   14001484a:	add    BYTE PTR [rip+0x4000000],cl        # 0x144014850
	...
   140014870:	(bad)  
   140014871:	(bad)  
   140014872:	call   FWORD PTR [rsi]
   140014874:	in     eax,0xba
   140014876:	jne    0x140014877
   140014878:	cmc    
   140014879:	rcl    BYTE PTR [rbp-0x53200052],1
   14001487f:	mov    ebp,edi
   140014881:	fisubr WORD PTR [rbx-0x501f0273]
   140014887:	mov    esi,esi
   140014889:	rcr    DWORD PTR [rbp-0x7d3b1254],cl
   14001488f:	push   rbp
   140014891:	rcl    BYTE PTR [rdx-0x5f220021],1
   140014897:	mov    ecx,0xd1bae7ff
   14001489c:	movabs al,ds:0x17fff87730f7ecbc
   1400148a5:	bnd jmp QWORD PTR fs:[rax]
   1400148a9:	push   0xfffffffffffffff1
   1400148ab:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x166013a1d
   1400148b1:	ins    BYTE PTR es:[rdi],dx
   1400148b2:	icebp  
   1400148b3:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x166013a25
   1400148b9:	imul   esi,ecx,0xffffffff
   1400148bc:	and    eax,0x25fff16b
   1400148c1:	push   0xfffffffffffffff1
   1400148c3:	jmp    QWORD PTR [rip+0x25fff169]        # 0x166013a32
   1400148c9:	imul   esi,ecx,0xf16824ff
   1400148cf:	call   FWORD PTR [rsi]
   1400148d1:	movsxd esi,eax
   1400148d3:	call   FWORD PTR [rax]
   1400148d5:	(bad)  
   1400148d6:	repz inc DWORD PTR [rdi+rdi*2-0x6]
   1400148db:	jmp    FWORD PTR [rbp-0x28032044]
   1400148e1:	mov    edi,0xc1e0ef9a
   1400148e6:	(bad)  
   1400148e7:	jrcxz  0x1400148e4
   1400148e9:	fldenv [rax-0x5e250423]
   1400148ef:	(bad)  
   1400148f1:	fcomp  DWORD PTR [rdi-0x61270423]
   1400148f7:	(bad)  
   1400148f9:	xlat   BYTE PTR ds:[rbx]
   1400148fa:	popf   
   1400148fb:	(bad)  
   1400148fd:	xlat   BYTE PTR ds:[rbx]
   1400148fe:	(bad)  
   140014901:	(bad)  
   140014902:	cdq    
   140014903:	(bad)  
   140014905:	loop   0x1400148c6
   140014907:	icebp  
   140014908:	loop   0x1400148c5
   14001490a:	je     0x14001490b
   14001490c:	mov    eax,0xecf04090
   140014911:	enter  0xc591,0xe4
   140014915:	ret    
   140014916:	sbb    esi,0xff6bb1dd
   14001491c:	mov    ah,0x88
   14001491e:	xor    esi,ebx
   140014920:	shl    DWORD PTR [rbp-0x3b1d6a75],1
   140014926:	mov    eax,edx
   140014928:	loope  0x1400148de
   14001492a:	outs   dx,BYTE PTR ds:[rsi]
   14001492b:	jmp    QWORD PTR [rax+0xd02176]
   140014931:	add    BYTE PTR [rax],al
   140014933:	add    DWORD PTR [rax],eax
   140014935:	add    BYTE PTR [rax],al
   140014937:	(bad)  
   140014938:	add    BYTE PTR [rax],al
   14001493a:	add    BYTE PTR [rip+0x4000000],al        # 0x144014940
   140014940:	add    BYTE PTR [rax],al
   140014942:	add    BYTE PTR [rdx],al
   140014944:	add    BYTE PTR [rax],al
   140014946:	add    BYTE PTR [rcx],al
	...
   140014970:	(bad)  
   140014971:	(bad)  
   140014972:	call   FWORD PTR [rsi]
   140014974:	in     eax,0xbb
   140014976:	jbe    0x140014977
   140014978:	hlt    
   140014979:	rcl    BYTE PTR [rsi-0x51200152],1
   14001497f:	mov    ebp,edi
   140014981:	fisubr WORD PTR [rbp+rcx*4-0x764f1f03]
   140014988:	not    bl
   14001498a:	popf   
   14001498b:	stos   DWORD PTR es:[rdi],eax
   14001498c:	in     eax,dx
   14001498d:	ret    
   14001498e:	cmp    edi,0xfffffffb
   140014991:	ror    DWORD PTR [rdi-0x3d1c0a22],cl
   140014997:	fsubr  DWORD PTR [rsi-0x62]
   14001499a:	repz (bad) 
   14001499c:	sbb    BYTE PTR [rax-0xb],ch
   14001499f:	jmp    QWORD PTR [rcx]
   1400149a1:	ins    BYTE PTR es:[rdi],dx
   1400149a2:	icebp  
   1400149a3:	jmp    QWORD PTR [rsi]
   1400149a5:	outs   dx,DWORD PTR ds:[rsi]
   1400149a6:	icebp  
   1400149a7:	jmp    QWORD PTR [rip+0x25fff26e]        # 0x166013c1b
   1400149ad:	outs   dx,BYTE PTR ds:[rsi]
   1400149ae:	icebp  
   1400149af:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x166013b23
   1400149b5:	ins    DWORD PTR es:[rdi],dx
   1400149b6:	icebp  
   1400149b7:	jmp    QWORD PTR [rsi]
   1400149b9:	ins    DWORD PTR es:[rdi],dx
   1400149ba:	icebp  
   1400149bb:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x166013b2d
   1400149c1:	ins    BYTE PTR es:[rdi],dx
   1400149c2:	icebp  
   1400149c3:	jmp    QWORD PTR [rip+0x25fff16b]        # 0x166013b34
   1400149c9:	imul   esi,ecx,0xffffffff
   1400149cc:	and    eax,0x25fff16a
   1400149d1:	push   0xfffffffffffffff1
   1400149d3:	jmp    QWORD PTR [rip+0x1cfff169]        # 0x15d013b42
   1400149d9:	movsxd esi,ecx
   1400149db:	jmp    QWORD PTR [rcx]
   1400149dd:	push   0xffffffffad8cfff7
   1400149e2:	icebp  
   1400149e3:	(bad)  
   1400149e4:	rol    eax,1
   1400149e6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400149e7:	repz (bad) 
   1400149e9:	mov    ecx,0xd8fae58b
   1400149ee:	movabs eax,ds:0x9ed6fadd9fd8fbdd
   1400149f7:	(bad)  
   1400149f9:	(bad)  
   1400149fa:	popf   
   1400149fb:	(bad)  
   1400149fd:	(bad)  
   1400149fe:	pushf  
   1400149ff:	(bad)  
   140014a01:	xlat   BYTE PTR ds:[rbx]
   140014a02:	(bad)  
   140014a05:	jrcxz  0x1400149c6
   140014a07:	icebp  
   140014a08:	call   0xfc00c9d1
   140014a0d:	xchg   ebx,eax
   140014a0e:	rex.R out dx,eax
   140014a10:	in     eax,dx
   140014a11:	leave  
   140014a12:	xchg   ebx,eax
   140014a13:	(bad)  
   140014a14:	out    0xc5,eax
   140014a16:	sbb    esp,0xffffffe1
   140014a19:	mov    dh,0x6e
   140014a1b:	push   QWORD PTR [rsi-0x270ccb76]
   140014a21:	mov    esp,0xcbea9292
   140014a26:	nop
   140014a27:	mov    edi,0xff70b5e0
   140014a2c:	scas   al,BYTE PTR es:[rdi]
   140014a2d:	and    DWORD PTR [rdi],0xce
	...
   140014a6f:	add    bh,bh
   140014a71:	(bad)  
   140014a72:	call   FWORD PTR [rsi]
   140014a74:	in     eax,0xbb
   140014a76:	jbe    0x140014a77
   140014a78:	hlt    
   140014a79:	rcl    BYTE PTR [rsi-0x501f0153],1
   140014a7f:	mov    ebp,edi
   140014a81:	fisubr WORD PTR [rsi-0x4e1f0273]
   140014a87:	mov    ebp,esi
   140014a89:	(bad)  
   140014a8a:	sahf   
   140014a8b:	stos   DWORD PTR es:[rdi],eax
   140014a8c:	repnz mov BYTE PTR [rax-0x4b271103],0xf5
   140014a94:	pop    rbx
   140014a95:	xchg   ebx,eax
   140014a96:	repnz (bad) 
   140014a98:	(bad)  
   140014a99:	imul   esi,esp,0xf27125ff
   140014a9f:	jmp    QWORD PTR [rsi]
   140014aa1:	jno    0x140014a95
   140014aa3:	jmp    QWORD PTR [rip+0x24fff26f]        # 0x165013d18
   140014aa9:	outs   dx,DWORD PTR ds:[rsi]
   140014aaa:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166013d20
   140014ab1:	outs   dx,DWORD PTR ds:[rsi]
   140014ab2:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166013d28
   140014ab9:	outs   dx,BYTE PTR ds:[rsi]
   140014aba:	icebp  
   140014abb:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x166013c2f
   140014ac1:	ins    DWORD PTR es:[rdi],dx
   140014ac2:	icebp  
   140014ac3:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x166013c36
   140014ac9:	ins    BYTE PTR es:[rdi],dx
   140014aca:	icebp  
   140014acb:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x166013c3d
   140014ad1:	imul   esi,ecx,0xffffffff
   140014ad4:	and    eax,0x25fff16b
   140014ad9:	imul   esi,ecx,0xffffffff
   140014adc:	and    ch,BYTE PTR [rax-0xf]
   140014adf:	call   FWORD PTR [rcx]
   140014ae1:	movsxd esi,ebp
   140014ae3:	inc    DWORD PTR [rcx-0x2f010958]
   140014ae9:	mov    esi,0xb7d4f4a4
   140014aee:	mov    esp,ebp
   140014af0:	cli    
   140014af1:	fsub   DWORD PTR [rdx-0x5f270523]
   140014af7:	(bad)  
   140014af9:	xlat   BYTE PTR ds:[rbx]
   140014afa:	lahf   
   140014afb:	(bad)  
   140014afd:	(bad)  
   140014afe:	popf   
   140014aff:	(bad)  
   140014b01:	xlat   BYTE PTR ds:[rbx]
   140014b02:	pushf  
   140014b03:	(bad)  
   140014b05:	jrcxz  0x140014ac7
   140014b07:	icebp  
   140014b08:	(bad)  
   140014b09:	mov    BYTE PTR [rax+0x4593baff],0xef
   140014b10:	in     al,dx
   140014b11:	leave  
   140014b12:	xchg   esp,eax
   140014b13:	(bad)  
   140014b14:	out    0xc6,eax
   140014b16:	xchg   ah,bl
   140014b18:	jmp    0x140014ae1
   140014b1a:	test   edi,edi
   140014b1c:	mov    ecx,0xd6f2398e
   140014b21:	mov    ebx,0xcceb9291
   140014b26:	xchg   ecx,eax
   140014b27:	mov    edi,0xff72b5de
   140014b2c:	mov    esp,0xce2d8c
	...
   140014b6d:	add    BYTE PTR [rax],al
   140014b6f:	add    bh,bh
   140014b71:	(bad)  
   140014b72:	call   FWORD PTR [rsi]
   140014b74:	in     eax,0xbb
   140014b76:	ja     0x140014b77
   140014b78:	hlt    
   140014b79:	rcl    BYTE PTR [rsi-0x501f0253],1
   140014b7f:	mov    ebp,edi
   140014b81:	fild   QWORD PTR [rdi-0x4c1e0273]
   140014b87:	mov    edi,esi
   140014b89:	(bad)  
   140014b8a:	pushf  
   140014b8b:	stos   BYTE PTR es:[rdi],al
   140014b8c:	repz rcr DWORD PTR [rbp-0x14659603],1
   140014b93:	call   FWORD PTR [rax]
   140014b95:	ins    BYTE PTR es:[rdi],dx
   140014b96:	cmc    
   140014b97:	jmp    QWORD PTR [rsi]
   140014b99:	jae    0x140014b8d
   140014b9b:	jmp    QWORD PTR [rdi]
   140014b9d:	jae    0x140014b91
   140014b9f:	jmp    QWORD PTR [rax]
   140014ba1:	outs   dx,DWORD PTR ds:[rsi]
   140014ba2:	bnd jmp QWORD PTR [rcx]
   140014ba5:	outs   dx,DWORD PTR ds:[rsi]
   140014ba6:	icebp  
   140014ba7:	jmp    QWORD PTR [rip+0x1ffff171]        # 0x160013d1e
   140014bad:	ins    DWORD PTR es:[rdi],dx
   140014bae:	bnd jmp QWORD PTR [rax+rsi*2]
   140014bb2:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166013e28
   140014bb9:	outs   dx,DWORD PTR ds:[rsi]
   140014bba:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166013e30
   140014bc1:	outs   dx,DWORD PTR ds:[rsi]
   140014bc2:	icebp  
   140014bc3:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x166013d37
   140014bc9:	outs   dx,BYTE PTR ds:[rsi]
   140014bca:	bnd jmp QWORD PTR [rip+0x26fff26e]        # 0x167013e3f
   140014bd1:	ins    DWORD PTR es:[rdi],dx
   140014bd2:	bnd jmp QWORD PTR [rip+0x25fff16d]        # 0x166013d46
   140014bd9:	ins    BYTE PTR es:[rdi],dx
   140014bda:	icebp  
   140014bdb:	jmp    QWORD PTR [rip+0x23fff16c]        # 0x164013d4d
   140014be1:	push   0xfffffffffffffff1
   140014be3:	call   FWORD PTR [rcx]
   140014be5:	fs hlt 
   140014be7:	call   QWORD PTR [rcx-0x32020e4f]
   140014bed:	mov    dh,0x97
   140014bef:	icebp  
   140014bf0:	fidivr DWORD PTR [rbp-0x25041b6e]
   140014bf6:	movabs ds:0x9ed7fadd9fd7fadd,eax
   140014bff:	(bad)  
   140014c01:	xlat   BYTE PTR ds:[rbx]
   140014c02:	popf   
   140014c03:	(bad)  
   140014c05:	jrcxz  0x140014bc8
   140014c07:	icebp  
   140014c08:	(bad)  
   140014c09:	mov    BYTE PTR [rax+0x4594baff],0xef
   140014c10:	(bad)  
   140014c11:	leave  
   140014c12:	xchg   ebp,eax
   140014c13:	(bad)  
   140014c14:	out    0xc6,al
   140014c16:	test   esp,ebx
   140014c18:	lock iret 
   140014c1a:	xchg   edx,eax
   140014c1b:	(bad)  
   140014c1c:	mov    esp,0xd6f34395
   140014c21:	mov    edx,0xcceb9291
   140014c26:	nop
   140014c27:	mov    edi,0xff74b9e2
   140014c2c:	mov    ebx,0xce2e8c
	...
   140014c6d:	add    BYTE PTR [rax],al
   140014c6f:	add    bh,bh
   140014c71:	(bad)  
   140014c72:	call   FWORD PTR [rsi]
   140014c74:	in     eax,0xbb
   140014c76:	ja     0x140014c77
   140014c78:	repz rcl BYTE PTR [rdi-0x50200252],1
   140014c7f:	mov    esp,edi
   140014c81:	fild   QWORD PTR [rdi-0x4d1f0373]
   140014c87:	xchg   edi,edi
   140014c89:	fsub   QWORD PTR [rbp-0x27547051]
   140014c8f:	(bad)  
   140014c90:	sbb    BYTE PTR [rdi-0x9],ch
   140014c93:	jmp    QWORD PTR [rsi]
   140014c95:	jne    0x140014c89
   140014c97:	jmp    QWORD PTR [rsi]
   140014c99:	jne    0x140014c8d
   140014c9b:	jmp    QWORD PTR [rax]
   140014c9d:	jo     0x140014c91
   140014c9f:	inc    DWORD PTR [rbx-0x7a]
   140014ca2:	repz (bad) 
   140014ca4:	mov    edi,0xd2fffad5
   140014ca9:	loope  0x140014ca6
   140014cab:	dec    DWORD PTR [rsi+0x40fff8b6]
   140014cb1:	xor    ebx,0xffffffff
   140014cb4:	sub    al,0x75
   140014cb6:	bnd jmp QWORD PTR [rsi]
   140014cb9:	jno    0x140014cad
   140014cbb:	jmp    QWORD PTR [rip+0x26fff270]        # 0x167013f31
   140014cc1:	jo     0x140014cb5
   140014cc3:	jmp    QWORD PTR [rsi]
   140014cc5:	jo     0x140014cb9
   140014cc7:	jmp    QWORD PTR [rsi]
   140014cc9:	outs   dx,DWORD PTR ds:[rsi]
   140014cca:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166013f40
   140014cd1:	outs   dx,DWORD PTR ds:[rsi]
   140014cd2:	icebp  
   140014cd3:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x166013e47
   140014cd9:	outs   dx,BYTE PTR ds:[rsi]
   140014cda:	icebp  
   140014cdb:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x166013e4e
   140014ce1:	ins    DWORD PTR es:[rdi],dx
   140014ce2:	icebp  
   140014ce3:	jmp    QWORD PTR [rdx]
   140014ce5:	push   0xfffffffffffffff1
   140014ce7:	jmp    QWORD PTR [rbp*2-0x3e4b0008]
   140014cee:	(bad)  
   140014cf0:	(bad)
   140014cf3:	in     eax,dx
   140014cf4:	jmp    0x13be2e7c4
   140014cf9:	fisub  DWORD PTR [rbx-0x60280623]
   140014cff:	(bad)  
   140014d01:	fcomp  DWORD PTR [rsi-0x3e1c0725]
   140014d07:	icebp  
   140014d08:	(bad)  
   140014d09:	(bad)  
   140014d0a:	jg     0x140014d0b
   140014d0c:	mov    edx,0xeaef4594
   140014d11:	leave  
   140014d12:	xchg   edi,eax
   140014d13:	(bad)  
   140014d14:	in     eax,0xc5
   140014d16:	test   esp,ebx
   140014d18:	lock (bad) 
   140014d1a:	nop
   140014d1b:	(bad)  
   140014d1c:	mov    esp,0xd5f34395
   140014d21:	mov    edx,0xcdeb9292
   140014d26:	xchg   edx,eax
   140014d27:	mov    edi,0xff85c5e9
   140014d2c:	mov    ebp,0xcd2f8f
	...
   140014d6d:	add    BYTE PTR [rax],al
   140014d6f:	add    bh,bh
   140014d71:	(bad)  
   140014d72:	call   FWORD PTR [rsi]
   140014d74:	in     eax,0xbb
   140014d76:	js     0x140014d77
   140014d78:	repz rcr BYTE PTR [rax-0x4f200252],1
   140014d7f:	mov    esp,edi
   140014d81:	fbstp  TBYTE PTR [rcx-0x4e1c0074]
   140014d87:	mov    esi,ecx
   140014d89:	leave  
   140014d8a:	ret    0x28d9
   140014d8d:	js     0x140014d84
   140014d8f:	jmp    QWORD PTR [rbx]
   140014d91:	jne    0x140014d86
   140014d93:	jmp    QWORD PTR [rdi]
   140014d95:	ja     0x140014d8a
   140014d97:	jmp    QWORD PTR [rip+0x21fff275]        # 0x162014012
   140014d9d:	jb     0x140014d91
   140014d9f:	(bad)  
   140014da0:	mov    ebx,0xfffefad4
   140014da5:	(bad)  
   140014da6:	(bad)  
   140014da7:	(bad)  
   140014da8:	(bad)  
   140014da9:	(bad)  
   140014daa:	(bad)  
   140014dab:	(bad)  
   140014dac:	(bad)  
   140014dad:	(bad)  
   140014dae:	(bad)  
   140014daf:	call   rbx
   140014db1:	loop   0x140014daf
   140014db3:	(bad)  
   140014db4:	ins    DWORD PTR es:[rdi],dx
   140014db5:	movabs eax,ds:0x752bfff37d36fef6
   140014dbe:	bnd jmp QWORD PTR [rip+0x25fff271]        # 0x166014036
   140014dc5:	jno    0x140014db9
   140014dc7:	jmp    QWORD PTR [rsi]
   140014dc9:	jno    0x140014dbd
   140014dcb:	jmp    QWORD PTR [rsi]
   140014dcd:	jo     0x140014dc1
   140014dcf:	jmp    QWORD PTR [rsi]
   140014dd1:	jo     0x140014dc5
   140014dd3:	jmp    QWORD PTR [rsi]
   140014dd5:	outs   dx,DWORD PTR ds:[rsi]
   140014dd6:	bnd jmp QWORD PTR [rsi]
   140014dd9:	outs   dx,DWORD PTR ds:[rsi]
   140014dda:	bnd jmp QWORD PTR [rsi]
   140014ddd:	outs   dx,DWORD PTR ds:[rsi]
   140014dde:	bnd jmp QWORD PTR [rip+0x25fff26e]        # 0x166014053
   140014de5:	outs   dx,BYTE PTR ds:[rsi]
   140014de6:	repnz call FWORD PTR [rdi+riz*2]
   140014dea:	icebp  
   140014deb:	dec    DWORD PTR [rbx-0x77]
   140014dee:	cli    
   140014def:	dec    esi
   140014df1:	ret    
   140014df2:	mov    edx,0x88adc8f5
   140014df7:	jmp    0x11da525f3
   140014dfc:	stc    
   140014dfd:	fsub   DWORD PTR [rcx-0x5f260523]
   140014e03:	(bad)  
   140014e05:	jrcxz  0x140014dc9
   140014e07:	icebp  
   140014e08:	(bad)  
   140014e09:	(bad)  
   140014e0a:	jg     0x140014e0b
   140014e0c:	mov    edx,0xe9ef4694
   140014e11:	retf   0xc498
   140014e14:	in     eax,0xc6
   140014e16:	test   esp,ebx
   140014e18:	lock (bad) 
   140014e1a:	nop
   140014e1b:	(bad)  
   140014e1c:	mov    esp,0xd5f34395
   140014e21:	mov    ebx,0xcdeb9293
   140014e26:	xchg   ebx,eax
   140014e27:	mov    edi,0xff94ceed
   140014e2c:	rcl    BYTE PTR [rsi+0xd03c],0x0
	...
   140014e6f:	add    bh,bh
   140014e71:	(bad)  
   140014e72:	call   FWORD PTR [rsi]
   140014e74:	in     al,0xbb
   140014e76:	js     0x140014e77
   140014e78:	repz rcr DWORD PTR [rax-0x4e1f0252],1
   140014e7f:	mov    ebp,edi
   140014e81:	loope  0x140014e35
   140014e83:	xchg   ebx,edi
   140014e85:	fild   QWORD PTR [rdi-0x1d6b9f57]
   140014e8b:	(bad)  
   140014e8c:	sbb    al,0x73
   140014e8e:	idiv   bh
   140014e90:	(bad)  
   140014e91:	js     0x140014e85
   140014e93:	jmp    QWORD PTR [rdi]
   140014e95:	js     0x140014e8a
   140014e97:	jmp    QWORD PTR [rdx]
   140014e99:	jne    0x140014e8e
   140014e9b:	(bad)  
   140014e9c:	cmp    eax,DWORD PTR [rbx+rsi*8-0x20c1402]
   140014ea3:	(bad)  
   140014ea4:	(bad)  
   140014ea5:	(bad)  
   140014ea6:	(bad)  
   140014ea7:	(bad)  
   140014ea8:	(bad)  
   140014ea9:	(bad)  
   140014eaa:	(bad)  
   140014eab:	(bad)  
   140014eac:	(bad)  
   140014ead:	(bad)  
   140014eae:	(bad)  
   140014eaf:	(bad)  
   140014eb0:	(bad)  
   140014eb1:	(bad)  
   140014eb2:	(bad)  
   140014eb3:	(bad)  
   140014eb4:	stc    
   140014eb5:	sti    
   140014eb6:	(bad)  
   140014eb7:	jmp    QWORD PTR [rdi+0x4dfef9c6]
   140014ebd:	(bad)  
   140014ebe:	hlt    
   140014ebf:	push   QWORD PTR [rdx]
   140014ec1:	jnp    0x140014eb6
   140014ec3:	jmp    FWORD PTR [rdx]
   140014ec5:	jne    0x140014eb9
   140014ec7:	jmp    QWORD PTR [rdx+rsi*2]
   140014eca:	bnd jmp QWORD PTR [rip+0x26fff272]        # 0x167014143
   140014ed1:	jb     0x140014ec5
   140014ed3:	jmp    QWORD PTR [rsi]
   140014ed5:	jno    0x140014ec9
   140014ed7:	jmp    QWORD PTR [rsi]
   140014ed9:	jno    0x140014ecd
   140014edb:	jmp    QWORD PTR [rsi]
   140014edd:	jo     0x140014ed1
   140014edf:	jmp    QWORD PTR [rsi]
   140014ee1:	jo     0x140014ed5
   140014ee3:	jmp    QWORD PTR [rsi]
   140014ee5:	outs   dx,DWORD PTR ds:[rsi]
   140014ee6:	bnd jmp QWORD PTR [rsi]
   140014ee9:	outs   dx,DWORD PTR ds:[rsi]
   140014eea:	repnz call FWORD PTR [rcx]
   140014eed:	push   0xffffffffb496fff4
   140014ef2:	in     al,dx
   140014ef3:	std    
   140014ef4:	(bad)  
   140014ef5:	scas   al,BYTE PTR es:[rdi]
   140014ef6:	nop
   140014ef7:	out    dx,eax
   140014ef8:	loop   0x140014ec0
   140014efa:	cdq    
   140014efb:	loop   0x140014ef8
   140014efd:	fisub  DWORD PTR [rbp-0x5d260623]
   140014f03:	(bad)  
   140014f05:	jrcxz  0x140014ec9
   140014f07:	icebp  
   140014f08:	(bad)  
   140014f09:	(bad)  
   140014f0a:	jg     0x140014f0b
   140014f0c:	mov    edx,0xe9ef4694
   140014f11:	retf   0xc499
   140014f14:	in     eax,0xc7
   140014f16:	xchg   ah,bl
   140014f18:	lock (bad) 
   140014f1a:	nop
   140014f1b:	(bad)  
   140014f1c:	mov    esp,0xd5f34395
   140014f21:	mov    ebx,0xcdeb9293
   140014f26:	xchg   edx,eax
   140014f27:	mov    edi,0xff92cded
   140014f2c:	rcr    DWORD PTR [rax+0xd13f],0x0
	...
   140014f6f:	add    bh,bh
   140014f71:	(bad)  
   140014f72:	call   FWORD PTR [rsi]
   140014f74:	in     al,0xbb
   140014f76:	js     0x140014f77
   140014f78:	repz rcr DWORD PTR [rcx-0x4c1e0253],1
   140014f7f:	mov    edi,edi
   140014f81:	in     al,0xb1
   140014f83:	mov    bl,al
   140014f85:	sar    DWORD PTR [rbx-0xb87dc25],0xff
   140014f8c:	es jp  0x140014f82
   140014f8f:	jmp    QWORD PTR [rdi]
   140014f91:	jp     0x140014f86
   140014f93:	jmp    QWORD PTR [rdi]
   140014f95:	jns    0x140014f89
   140014f97:	jmp    QWORD PTR [rax]
   140014f99:	jne    0x140014f8d
   140014f9b:	dec    DWORD PTR [rax-0x73]
   140014f9e:	repz std 
   140014fa0:	repnz idiv ch
   140014fa3:	(bad)  
   140014fa4:	std    
   140014fa5:	(bad)  
   140014fa6:	(bad)  
   140014fa7:	(bad)  
   140014fa8:	(bad)  
   140014fa9:	(bad)  
   140014faa:	(bad)  
   140014fab:	(bad)  
   140014fac:	(bad)  
   140014fad:	(bad)  
   140014fae:	(bad)  
   140014faf:	(bad)  
   140014fb0:	(bad)  
   140014fb1:	(bad)  
   140014fb2:	(bad)  
   140014fb3:	(bad)  
   140014fb4:	(bad)  
   140014fb5:	(bad)  
   140014fb6:	(bad)  
   140014fb7:	(bad)  
   140014fb8:	(bad)  
   140014fb9:	(bad)  
   140014fba:	(bad)  
   140014fbb:	(bad)  
   140014fbc:	fucomp st(1)
   140014fbe:	cld    
   140014fbf:	(bad)  
   140014fc0:	jp     0x140014f6c
   140014fc2:	idiv   dh
   140014fc4:	cmp    al,0x82
   140014fc6:	repz push QWORD PTR [rcx]
   140014fc9:	jnp    0x140014fbe
   140014fcb:	jmp    QWORD PTR [rdi]
   140014fcd:	je     0x140014fc1
   140014fcf:	jmp    QWORD PTR [rip+0x26fff272]        # 0x167014247
   140014fd5:	jb     0x140014fc9
   140014fd7:	jmp    QWORD PTR [rsi]
   140014fd9:	jb     0x140014fcd
   140014fdb:	jmp    QWORD PTR [rsi]
   140014fdd:	jb     0x140014fd1
   140014fdf:	jmp    QWORD PTR [rsi]
   140014fe1:	jno    0x140014fd5
   140014fe3:	jmp    QWORD PTR [rsi]
   140014fe5:	jno    0x140014fd9
   140014fe7:	jmp    QWORD PTR [rsi]
   140014fe9:	jo     0x140014fdd
   140014feb:	call   FWORD PTR [rdi]
   140014fed:	imul   esi,ecx,0xffffffff
   140014ff0:	rex.RX xchg edx,r15d
   140014ff3:	dec    esp
   140014ff5:	ret    0xf5ba
   140014ff8:	(bad)  
   140014ff9:	lods   eax,DWORD PTR ds:[rsi]
   140014ffa:	mov    ecx,ebp
   140014ffc:	clc    
   140014ffd:	fsub   DWORD PTR [rbx-0x5b260522]
   140015003:	(bad)  
   140015005:	jrcxz  0x140014fc9
   140015007:	icebp  
   140015008:	jmp    0x140014fd0
   14001500a:	jg     0x14001500b
   14001500c:	mov    edx,0xe9ef4694
   140015011:	retf   0xc49b
   140015014:	in     eax,0xc7
   140015016:	xchg   esp,ebx
   140015018:	lock (bad) 
   14001501a:	nop
   14001501b:	(bad)  
   14001501c:	mov    esp,0xd5f34495
   140015021:	mov    ebx,0xcdea9294
   140015026:	xchg   edx,eax
   140015027:	mov    edi,0xff92cded
   14001502c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   14001506f:	add    bh,bh
   140015071:	(bad)  
   140015072:	call   FWORD PTR [rsi]
   140015074:	in     al,0xbb
   140015076:	js     0x140015077
   140015078:	repz rcr DWORD PTR [rdx-0x4b1d0252],1
   14001507f:	test   esi,edi
   140015081:	fild   QWORD PTR [rbx-0x2b658e63]
   140015087:	sti    
   140015088:	sbb    esi,DWORD PTR [rdi-0x8]
   14001508b:	jmp    FWORD PTR [rax]
   14001508d:	jl     0x140015082
   14001508f:	jmp    FWORD PTR [rax]
   140015091:	jnp    0x140015086
   140015093:	jmp    FWORD PTR [rax]
   140015095:	jnp    0x14001508a
   140015097:	jmp    QWORD PTR [rax]
   140015099:	jbe    0x14001508d
   14001509b:	dec    DWORD PTR [rax-0x72]
   14001509e:	repz std 
   1400150a0:	icebp  
   1400150a1:	idiv   ch
   1400150a3:	(bad)  
   1400150a4:	std    
   1400150a5:	(bad)  
   1400150a6:	(bad)  
   1400150a7:	(bad)  
   1400150a8:	(bad)  
   1400150a9:	(bad)  
   1400150aa:	(bad)  
   1400150ab:	(bad)  
   1400150ac:	(bad)  
   1400150ad:	(bad)  
   1400150ae:	(bad)  
   1400150af:	(bad)  
   1400150b0:	(bad)  
   1400150b1:	(bad)  
   1400150b2:	(bad)  
   1400150b3:	(bad)  
   1400150b4:	(bad)  
   1400150b5:	(bad)  
   1400150b6:	(bad)  
   1400150b7:	(bad)  
   1400150b8:	(bad)  
   1400150b9:	(bad)  
   1400150ba:	(bad)  
   1400150bb:	(bad)  
   1400150bc:	(bad)  
   1400150bd:	(bad)  
   1400150be:	(bad)  
   1400150bf:	(bad)  
   1400150c0:	(bad)  
   1400150c1:	(bad)  
   1400150c2:	(bad)  
   1400150c3:	push   QWORD PTR [rdi+rcx*8-0x6ba90106]
   1400150ca:	hlt    
   1400150cb:	push   QWORD PTR [rdi]
   1400150cd:	xor    bl,0xff
   1400150d0:	sub    eax,0x25fff279
   1400150d5:	jae    0x1400150c9
   1400150d7:	jmp    QWORD PTR [rsi]
   1400150d9:	jae    0x1400150cd
   1400150db:	jmp    QWORD PTR [rsi]
   1400150dd:	jae    0x1400150d1
   1400150df:	jmp    QWORD PTR [rsi]
   1400150e1:	jae    0x1400150d5
   1400150e3:	jmp    QWORD PTR [rsi]
   1400150e5:	jno    0x1400150d9
   1400150e7:	jmp    QWORD PTR [rsi]
   1400150e9:	jb     0x1400150dd
   1400150eb:	jmp    QWORD PTR [rsi]
   1400150ed:	jno    0x1400150e1
   1400150ef:	call   FWORD PTR [rdi]
   1400150f1:	outs   dx,BYTE PTR ds:[rsi]
   1400150f2:	idiv   bh
   1400150f4:	stos   BYTE PTR es:[rdi],al
   1400150f5:	mov    esp,0xa8c1fae0
   1400150fa:	mov    ch,ch
   1400150fc:	(bad)  
   1400150fd:	(bad)  
   1400150fe:	lahf   
   1400150ff:	loope  0x1400150fc
   140015101:	(bad)  [rsi-0x3d1c0825]
   140015107:	icebp  
   140015108:	(bad)  
   140015109:	(bad)  
   14001510a:	jl     0x14001510b
   14001510c:	mov    edx,0xe8ef4694
   140015111:	retf   0xc49b
   140015114:	in     eax,0xc6
   140015116:	xchg   esp,ebx
   140015118:	lock (bad) 
   14001511a:	nop
   14001511b:	(bad)  
   14001511c:	mov    esp,0xd5f34495
   140015121:	mov    esp,0xcdea9295
   140015126:	xchg   ebx,eax
   140015127:	mov    edi,0xff92cded
   14001512c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   14001516f:	add    bh,bh
   140015171:	(bad)  
   140015172:	call   FWORD PTR [rsi]
   140015174:	in     al,0xbb
   140015176:	jns    0x140015177
   140015178:	repz rcr DWORD PTR [rdx-0x4a1b0053],1
   14001517f:	(bad)  
   140015180:	in     eax,0xce
   140015182:	test   eax,0xeb8337be
   140015187:	jmp    QWORD PTR [rbx]
   140015189:	jl     0x140015182
   14001518b:	jmp    QWORD PTR [rdi]
   14001518d:	jge    0x140015183
   14001518f:	jmp    QWORD PTR [rdi]
   140015191:	jge    0x140015187
   140015193:	jmp    QWORD PTR [rdi]
   140015195:	jl     0x14001518b
   140015197:	jmp    QWORD PTR [rcx]
   140015199:	js     0x14001518e
   14001519b:	dec    DWORD PTR [rcx-0x71]
   14001519e:	hlt    
   14001519f:	std    
   1400151a0:	repnz idiv ebp
   1400151a3:	(bad)  
   1400151a4:	(bad)  
   1400151a5:	(bad)  
   1400151a6:	(bad)  
   1400151a7:	(bad)  
   1400151a8:	(bad)  
   1400151a9:	(bad)  
   1400151aa:	(bad)  
   1400151ab:	(bad)  
   1400151ac:	(bad)  
   1400151ad:	(bad)  
   1400151ae:	(bad)  
   1400151af:	(bad)  
   1400151b0:	(bad)  
   1400151b1:	(bad)  
   1400151b2:	(bad)  
   1400151b3:	(bad)  
   1400151b4:	(bad)  
   1400151b5:	(bad)  
   1400151b6:	(bad)  
   1400151b7:	(bad)  
   1400151b8:	(bad)  
   1400151b9:	(bad)  
   1400151ba:	(bad)  
   1400151bb:	(bad)  
   1400151bc:	(bad)  
   1400151bd:	(bad)  
   1400151be:	(bad)  
   1400151bf:	(bad)  
   1400151c0:	(bad)  
   1400151c1:	(bad)  
   1400151c2:	(bad)  
   1400151c3:	(bad)  
   1400151c4:	(bad)  
   1400151c5:	(bad)  
   1400151c6:	(bad)  
   1400151c7:	jmp    rsi
   1400151c9:	out    dx,eax
   1400151ca:	std    
   1400151cb:	inc    DWORD PTR [rdi+0x44fef7b3]
   1400151d1:	mov    ebx,esi
   1400151d3:	push   QWORD PTR [rsi]
   1400151d5:	jg     0x1400151ca
   1400151d7:	jmp    FWORD PTR [rax]
   1400151d9:	ja     0x1400151cd
   1400151db:	jmp    QWORD PTR [rsi]
   1400151dd:	jae    0x1400151d1
   1400151df:	jmp    QWORD PTR [rsi]
   1400151e1:	je     0x1400151d5
   1400151e3:	jmp    QWORD PTR [rsi]
   1400151e5:	je     0x1400151d9
   1400151e7:	jmp    QWORD PTR [rip+0x27fff273]        # 0x168014460
   1400151ed:	jae    0x1400151e1
   1400151ef:	call   FWORD PTR [rdx]
   1400151f1:	imul   esi,ebx,0xffffffff
   1400151f4:	je     0x14001519a
   1400151f6:	hlt    
   1400151f7:	dec    bl
   1400151f9:	mov    ah,0x9c
   1400151fb:	icebp  
   1400151fc:	(bad)  
   1400151fd:	mov    esp,0xddfce595
   140015202:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015203:	(bad)  
   140015205:	loop   0x1400151c6
   140015207:	lock out 0xbc,al
   14001520a:	outs   dx,BYTE PTR ds:[rsi]
   14001520b:	(bad)  
   14001520c:	mov    ecx,0xe8ef4593
   140015211:	retf   0xc49c
   140015214:	in     eax,0xc7
   140015216:	mov    ah,bl
   140015218:	lock (bad) 
   14001521a:	nop
   14001521b:	(bad)  
   14001521c:	mov    esp,0xd4f34495
   140015221:	mov    esp,0xcdea9296
   140015226:	xchg   ebx,eax
   140015227:	mov    edi,0xff92cded
   14001522c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   14001526f:	add    bh,bh
   140015271:	(bad)  
   140015272:	call   FWORD PTR [rsi]
   140015274:	in     al,0xbb
   140015276:	jns    0x140015277
   140015278:	repz rcr DWORD PTR [rbx-0x4d1a0053],1
   14001527f:	test   DWORD PTR [rax+0x21ddb2b7],edi
   140015285:	jl     0x14001527e
   140015287:	jmp    QWORD PTR [rdi]
   140015289:	jg     0x140015280
   14001528b:	jmp    FWORD PTR [rax]
   14001528d:	jle    0x140015284
   14001528f:	jmp    QWORD PTR [rdi]
   140015291:	jle    0x140015288
   140015293:	jmp    QWORD PTR [rdi]
   140015295:	jle    0x14001528b
   140015297:	jmp    QWORD PTR [rax]
   140015299:	jns    0x14001528f
   14001529b:	dec    DWORD PTR [rcx-0x6f]
   14001529e:	cmc    
   14001529f:	std    
   1400152a0:	cmc    
   1400152a1:	clc    
   1400152a2:	std    
   1400152a3:	(bad)  
   1400152a4:	(bad)  
   1400152a5:	(bad)  
   1400152a6:	(bad)  
   1400152a7:	(bad)  
   1400152a8:	(bad)  
   1400152a9:	(bad)  
   1400152aa:	(bad)  
   1400152ab:	(bad)  
   1400152ac:	(bad)  
   1400152ad:	(bad)  
   1400152ae:	(bad)  
   1400152af:	(bad)  
   1400152b0:	(bad)  
   1400152b1:	(bad)  
   1400152b2:	(bad)  
   1400152b3:	(bad)  
   1400152b4:	(bad)  
   1400152b5:	(bad)  
   1400152b6:	(bad)  
   1400152b7:	(bad)  
   1400152b8:	(bad)  
   1400152b9:	(bad)  
   1400152ba:	(bad)  
   1400152bb:	(bad)  
   1400152bc:	(bad)  
   1400152bd:	(bad)  
   1400152be:	(bad)  
   1400152bf:	(bad)  
   1400152c0:	(bad)  
   1400152c1:	(bad)  
   1400152c2:	(bad)  
   1400152c3:	(bad)  
   1400152c4:	(bad)  
   1400152c5:	(bad)  
   1400152c6:	(bad)  
   1400152c7:	(bad)  
   1400152c8:	(bad)  
   1400152c9:	(bad)  
   1400152ca:	(bad)  
   1400152cb:	(bad)  
   1400152cc:	(bad)  
   1400152cd:	(bad)  
   1400152ce:	(bad)  
   1400152cf:	inc    ecx
   1400152d1:	fdivr  st,st(3)
   1400152d3:	(bad)  
   1400152d4:	(bad)  
   1400152d5:	pushf  
   1400152d6:	cmc    
   1400152d7:	(bad)  
   1400152d8:	cmp    eax,0x32fff485
   1400152dd:	jle    0x1400152d2
   1400152df:	jmp    QWORD PTR [rdi]
   1400152e1:	jne    0x1400152d5
   1400152e3:	jmp    QWORD PTR [rip+0x26fff274]        # 0x16701455d
   1400152e9:	je     0x1400152dd
   1400152eb:	jmp    QWORD PTR [rsi]
   1400152ed:	je     0x1400152e1
   1400152ef:	jmp    QWORD PTR [rdx]
   1400152f1:	jo     0x1400152e5
   1400152f3:	dec    DWORD PTR [rcx-0x74]
   1400152f6:	cli    
   1400152f7:	dec    edx
   1400152f9:	mov    esi,0xadc7f4b5
   1400152fe:	(bad)  
   1400152ff:	jmp    0x11ca92dfc
   140015304:	mul    cl
   140015306:	mov    ebp,0x60b4e2f0
   14001530b:	(bad)  
   14001530c:	mov    eax,0xe8ef4391
   140015311:	retf   
   140015312:	pushf  
   140015313:	(bad)  
   140015314:	in     al,0xc7
   140015316:	mov    ah,bl
   140015318:	out    dx,eax
   140015319:	int3   
   14001531a:	mov    edi,?
   14001531c:	mov    esp,0xd4f34294
   140015321:	mov    esp,0xcdea9297
   140015326:	xchg   esp,eax
   140015327:	mov    edi,0xff92cced
   14001532c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   14001536f:	add    bh,bh
   140015371:	(bad)  
   140015372:	call   FWORD PTR [rsi]
   140015374:	in     al,0xbb
   140015376:	jns    0x140015377
   140015378:	hlt    
   140015379:	rcr    BYTE PTR [rbp+rbp*4-0x72521d01],cl
   140015380:	mov    ah,BYTE PTR [rdx+0x7d1cf1c0]
   140015386:	sti    
   140015387:	jmp    FWORD PTR [rax]
   140015389:	xor    ebp,0xf58028ff
   14001538f:	jmp    FWORD PTR [rax]
   140015391:	xor    ch,0xff
   140015394:	sub    BYTE PTR [rdi-0xb],bh
   140015397:	jmp    QWORD PTR [rcx]
   140015399:	jnp    0x140015390
   14001539b:	dec    DWORD PTR [rdx-0x6d]
   14001539e:	cmc    
   14001539f:	std    
   1400153a0:	idiv   ecx
   1400153a2:	(bad)  
   1400153a3:	(bad)  
   1400153a4:	(bad)  
   1400153a5:	(bad)  
   1400153a6:	(bad)  
   1400153a7:	(bad)  
   1400153a8:	(bad)  
   1400153a9:	(bad)  
   1400153aa:	(bad)  
   1400153ab:	(bad)  
   1400153ac:	(bad)  
   1400153ad:	(bad)  
   1400153ae:	(bad)  
   1400153af:	(bad)  
   1400153b0:	(bad)  
   1400153b1:	(bad)  
   1400153b2:	(bad)  
   1400153b3:	(bad)  
   1400153b4:	(bad)  
   1400153b5:	(bad)  
   1400153b6:	(bad)  
   1400153b7:	(bad)  
   1400153b8:	(bad)  
   1400153b9:	(bad)  
   1400153ba:	(bad)  
   1400153bb:	(bad)  
   1400153bc:	(bad)  
   1400153bd:	(bad)  
   1400153be:	(bad)  
   1400153bf:	(bad)  
   1400153c0:	(bad)  
   1400153c1:	(bad)  
   1400153c2:	(bad)  
   1400153c3:	(bad)  
   1400153c4:	(bad)  
   1400153c5:	(bad)  
   1400153c6:	(bad)  
   1400153c7:	(bad)  
   1400153c8:	(bad)  
   1400153c9:	(bad)  
   1400153ca:	(bad)  
   1400153cb:	(bad)  
   1400153cc:	(bad)  
   1400153cd:	(bad)  
   1400153ce:	(bad)  
   1400153cf:	(bad)  
   1400153d0:	(bad)  
   1400153d1:	(bad)  
   1400153d2:	(bad)  
   1400153d3:	(bad)  
   1400153d4:	out    dx,eax
   1400153d5:	cmc    
   1400153d6:	(bad)  
   1400153d7:	call   QWORD PTR [rbx+rdi*4-0x72b50108]
   1400153de:	hlt    
   1400153df:	(bad)  
   1400153e0:	cmp    al,BYTE PTR [rsp+rsi*8-0xc84d201]
   1400153e7:	jmp    QWORD PTR [rsi]
   1400153e9:	jne    0x1400153dd
   1400153eb:	jmp    QWORD PTR [rip+0x24fff376]        # 0x165014767
   1400153f1:	jbe    0x1400153e5
   1400153f3:	push   QWORD PTR [rcx]
   1400153f5:	jg     0x1400153f1
   1400153f7:	inc    eax
   1400153f9:	ror    cl,0xf7
   1400153fc:	shl    BYTE PTR [rdi-0x290e1477],0xa4
   140015403:	(bad)  
   140015405:	loope  0x1400153c4
   140015407:	lock loope 0x1400153ba
   14001540a:	pop    rdx
   14001540b:	push   QWORD PTR [rdi-0x1710bd6f]
   140015411:	int3   
   140015412:	sahf   
   140015413:	(bad)  
   140015414:	in     al,0xc6
   140015416:	mov    ah,bl
   140015418:	in     al,dx
   140015419:	mov    BYTE PTR [rdx+0x3e91bbff],0xf3
   140015420:	(bad)  
   140015421:	mov    esp,0xceea9297
   140015426:	xchg   esp,eax
   140015427:	mov    edi,0xff91cded
   14001542c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   14001546f:	add    bh,bh
   140015471:	(bad)  
   140015472:	call   FWORD PTR [rsi]
   140015474:	in     al,0xbb
   140015476:	jns    0x140015477
   140015478:	hlt    
   140015479:	rcr    DWORD PTR [rbp-0x57230256],cl
   14001547f:	cdq    
   140015480:	push   0x1efccc94
   140015485:	jg     0x140015482
   140015487:	jmp    FWORD PTR [rax]
   140015489:	(bad)  
   14001548a:	cmc    
   14001548b:	jmp    FWORD PTR [rax]
   14001548d:	(bad)  
   14001548e:	cmc    
   14001548f:	jmp    FWORD PTR [rax]
   140015491:	xor    ebp,0xf58128ff
   140015497:	jmp    QWORD PTR [rcx]
   140015499:	jl     0x140015490
   14001549b:	dec    DWORD PTR [rdx-0x6c]
   14001549e:	cmc    
   14001549f:	std    
   1400154a0:	stc    
   1400154a1:	sti    
   1400154a2:	(bad)  
   1400154a3:	(bad)  
   1400154a4:	(bad)  
   1400154a5:	(bad)  
   1400154a6:	(bad)  
   1400154a7:	(bad)  
   1400154a8:	(bad)  
   1400154a9:	(bad)  
   1400154aa:	(bad)  
   1400154ab:	(bad)  
   1400154ac:	(bad)  
   1400154ad:	(bad)  
   1400154ae:	(bad)  
   1400154af:	(bad)  
   1400154b0:	(bad)  
   1400154b1:	(bad)  
   1400154b2:	(bad)  
   1400154b3:	(bad)  
   1400154b4:	(bad)  
   1400154b5:	(bad)  
   1400154b6:	(bad)  
   1400154b7:	(bad)  
   1400154b8:	(bad)  
   1400154b9:	(bad)  
   1400154ba:	(bad)  
   1400154bb:	(bad)  
   1400154bc:	(bad)  
   1400154bd:	(bad)  
   1400154be:	(bad)  
   1400154bf:	(bad)  
   1400154c0:	(bad)  
   1400154c1:	(bad)  
   1400154c2:	(bad)  
   1400154c3:	(bad)  
   1400154c4:	(bad)  
   1400154c5:	(bad)  
   1400154c6:	(bad)  
   1400154c7:	(bad)  
   1400154c8:	(bad)  
   1400154c9:	(bad)  
   1400154ca:	(bad)  
   1400154cb:	(bad)  
   1400154cc:	(bad)  
   1400154cd:	(bad)  
   1400154ce:	(bad)  
   1400154cf:	(bad)  
   1400154d0:	(bad)  
   1400154d1:	(bad)  
   1400154d2:	(bad)  
   1400154d3:	(bad)  
   1400154d4:	(bad)  
   1400154d5:	(bad)  
   1400154d6:	(bad)  
   1400154d7:	(bad)  
   1400154d8:	(bad)  
   1400154d9:	(bad)  
   1400154da:	(bad)  
   1400154db:	dec    ebp
   1400154dd:	(bad)  
   1400154df:	(bad)  
   1400154e0:	push   0x41fef6a0
   1400154e5:	mov    ebp,esi
   1400154e7:	jmp    FWORD PTR [rdx]
   1400154e9:	jns    0x1400154de
   1400154eb:	jmp    QWORD PTR [rip+0x26fff376]        # 0x167014867
   1400154f1:	jbe    0x1400154e5
   1400154f3:	jmp    QWORD PTR [rdi+rsi*2]
   1400154f6:	clc    
   1400154f7:	push   QWORD PTR [rcx-0x3f062742]
   1400154fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400154fe:	mov    ch,ch
   140015500:	in     al,dx
   140015501:	shl    DWORD PTR [rdx-0x421d0821],1
   140015507:	lock loope 0x1400154ba
   14001550a:	pop    rdx
   14001550b:	push   QWORD PTR [rdi-0x1710bd6f]
   140015511:	int3   
   140015512:	sahf   
   140015513:	(bad)  
   140015514:	in     al,0xc6
   140015516:	mov    ah,bl
   140015518:	jmp    0xfa00cddd
   14001551d:	(bad)  
   14001551e:	cmp    dh,bl
   140015520:	(bad)  
   140015521:	mov    ebp,0xcdea9298
   140015526:	xchg   esp,eax
   140015527:	mov    edi,0xff8bc9eb
   14001552c:	rcl    DWORD PTR [rsi+0xd03c],0x0
	...
   14001556f:	add    bh,bh
   140015571:	(bad)  
   140015572:	jmp    QWORD PTR [rcx]
   140015574:	in     al,0xbb
   140015576:	jns    0x140015577
   140015578:	cmc    
   140015579:	rcr    DWORD PTR [rbp-0x5c280757],cl
   14001557f:	movabs ds:0xfffb8121ffd58e53,al
   140015588:	sub    BYTE PTR [rbx-0x7cd6000b],al
   14001558e:	cmc    
   14001558f:	jmp    FWORD PTR [rcx]
   140015591:	(bad)  
   140015592:	cmc    
   140015593:	jmp    FWORD PTR [rax]
   140015595:	(bad)  
   140015596:	cmc    
   140015597:	jmp    QWORD PTR [rcx]
   140015599:	jle    0x140015590
   14001559b:	dec    DWORD PTR [rdx-0x6c]
   14001559e:	cmc    
   14001559f:	std    
   1400155a0:	clc    
   1400155a1:	cli    
   1400155a2:	std    
   1400155a3:	(bad)  
   1400155a4:	(bad)  
   1400155a5:	(bad)  
   1400155a6:	(bad)  
   1400155a7:	(bad)  
   1400155a8:	(bad)  
   1400155a9:	(bad)  
   1400155aa:	(bad)  
   1400155ab:	(bad)  
   1400155ac:	(bad)  
   1400155ad:	(bad)  
   1400155ae:	(bad)  
   1400155af:	(bad)  
   1400155b0:	(bad)  
   1400155b1:	(bad)  
   1400155b2:	(bad)  
   1400155b3:	(bad)  
   1400155b4:	(bad)  
   1400155b5:	(bad)  
   1400155b6:	(bad)  
   1400155b7:	(bad)  
   1400155b8:	(bad)  
   1400155b9:	(bad)  
   1400155ba:	(bad)  
   1400155bb:	(bad)  
   1400155bc:	(bad)  
   1400155bd:	(bad)  
   1400155be:	(bad)  
   1400155bf:	(bad)  
   1400155c0:	(bad)  
   1400155c1:	(bad)  
   1400155c2:	(bad)  
   1400155c3:	(bad)  
   1400155c4:	(bad)  
   1400155c5:	(bad)  
   1400155c6:	(bad)  
   1400155c7:	(bad)  
   1400155c8:	(bad)  
   1400155c9:	(bad)  
   1400155ca:	(bad)  
   1400155cb:	(bad)  
   1400155cc:	(bad)  
   1400155cd:	(bad)  
   1400155ce:	(bad)  
   1400155cf:	(bad)  
   1400155d0:	(bad)  
   1400155d1:	(bad)  
   1400155d2:	(bad)  
   1400155d3:	(bad)  
   1400155d4:	(bad)  
   1400155d5:	(bad)  
   1400155d6:	(bad)  
   1400155d7:	(bad)  
   1400155d8:	(bad)  
   1400155d9:	(bad)  
   1400155da:	(bad)  
   1400155db:	(bad)  
   1400155dc:	(bad)  
   1400155dd:	(bad)  
   1400155de:	(bad)  
   1400155df:	(bad)  
   1400155e0:	in     eax,dx
   1400155e1:	hlt    
   1400155e2:	(bad)  
   1400155e3:	(bad)  
   1400155e4:	(bad)  
   1400155e5:	sahf   
   1400155e6:	cmc    
   1400155e7:	(bad)  
   1400155e8:	cmp    al,BYTE PTR [rbp+0x7a26fff4]
   1400155ee:	repz jmp QWORD PTR [rsi]
   1400155f1:	js     0x1400155e6
   1400155f3:	jmp    QWORD PTR [rax]
   1400155f5:	jbe    0x1400155ee
   1400155f7:	jmp    QWORD PTR [rsi-0x3e052045]
   1400155fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400155fe:	(bad)  
   1400155ff:	in     eax,dx
   140015600:	jmp    0x138e0f7d3
   140015605:	loop   0x1400155c4
   140015607:	lock loope 0x1400155ba
   14001560a:	pop    rdx
   14001560b:	push   QWORD PTR [rdi-0x1710bd6f]
   140015611:	int3   
   140015612:	lahf   
   140015613:	(bad)  
   140015614:	in     al,0xc6
   140015616:	mov    ah,bl
   140015618:	jmp    0xfa00cbdb
   14001561d:	mov    ?,WORD PTR [rax]
   14001561f:	repnz (bad) 
   140015621:	mov    ebp,0xcde99299
   140015626:	xchg   esp,eax
   140015627:	mov    edi,0xff81c3e8
   14001562c:	mov    edi,0xcf3793
	...
   14001566d:	add    BYTE PTR [rax],al
   14001566f:	add    bh,bh
   140015671:	(bad)  
   140015672:	jmp    QWORD PTR [rcx]
   140015674:	in     al,0xbb
   140015676:	jns    0x140015677
   140015678:	cmc    
   140015679:	(bad)  
   14001567a:	popf   
   14001567b:	test   eax,0xa6a2d4f4
   140015680:	rex.WX mov rbx,rdx
   140015683:	jmp    QWORD PTR [rdx]
   140015685:	cmp    ebx,0xffffffff
   140015688:	sub    DWORD PTR [rsi+rsi*8-0x97bd601],eax
   14001568f:	jmp    FWORD PTR [rcx]
   140015691:	xor    ebp,0xffffffff
   140015694:	sub    DWORD PTR [rbx+0x7f22fff5],eax
   14001569a:	cmc    
   14001569b:	dec    DWORD PTR [rbx-0x6a]
   14001569e:	idiv   dh
   1400156a0:	idiv   cl
   1400156a2:	(bad)  
   1400156a3:	(bad)  
   1400156a4:	(bad)  
   1400156a5:	(bad)  
   1400156a6:	(bad)  
   1400156a7:	(bad)  
   1400156a8:	(bad)  
   1400156a9:	(bad)  
   1400156aa:	(bad)  
   1400156ab:	(bad)  
   1400156ac:	(bad)  
   1400156ad:	(bad)  
   1400156ae:	(bad)  
   1400156af:	(bad)  
   1400156b0:	(bad)  
   1400156b1:	(bad)  
   1400156b2:	(bad)  
   1400156b3:	(bad)  
   1400156b4:	(bad)  
   1400156b5:	(bad)  
   1400156b6:	(bad)  
   1400156b7:	(bad)  
   1400156b8:	(bad)  
   1400156b9:	(bad)  
   1400156ba:	(bad)  
   1400156bb:	(bad)  
   1400156bc:	(bad)  
   1400156bd:	(bad)  
   1400156be:	(bad)  
   1400156bf:	(bad)  
   1400156c0:	(bad)  
   1400156c1:	(bad)  
   1400156c2:	(bad)  
   1400156c3:	(bad)  
   1400156c4:	(bad)  
   1400156c5:	(bad)  
   1400156c6:	(bad)  
   1400156c7:	(bad)  
   1400156c8:	(bad)  
   1400156c9:	(bad)  
   1400156ca:	(bad)  
   1400156cb:	(bad)  
   1400156cc:	(bad)  
   1400156cd:	(bad)  
   1400156ce:	(bad)  
   1400156cf:	(bad)  
   1400156d0:	(bad)  
   1400156d1:	(bad)  
   1400156d2:	(bad)  
   1400156d3:	(bad)  
   1400156d4:	(bad)  
   1400156d5:	(bad)  
   1400156d6:	(bad)  
   1400156d7:	(bad)  
   1400156d8:	(bad)  
   1400156d9:	(bad)  
   1400156da:	(bad)  
   1400156db:	(bad)  
   1400156dc:	(bad)  
   1400156dd:	(bad)  
   1400156de:	(bad)  
   1400156df:	(bad)  
   1400156e0:	(bad)  
   1400156e1:	(bad)  
   1400156e2:	(bad)  
   1400156e3:	call   QWORD PTR [rdi+0x39fef8c0]
   1400156e9:	mov    ah,dh
   1400156eb:	jmp    FWORD PTR [rax]
   1400156ed:	jnp    0x1400156e2
   1400156ef:	jmp    QWORD PTR [rsi]
   1400156f1:	jns    0x1400156e5
   1400156f3:	call   FWORD PTR [rdi]
   1400156f5:	jbe    0x1400156ed
   1400156f7:	call   FWORD PTR [rbx-0x3d041d4a]
   1400156fd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400156fe:	mov    gs,esi
   140015700:	out    0xcd,eax
   140015702:	movabs al,ds:0x5ab0e1f0bfe3f8e0
   14001570b:	push   QWORD PTR [rdi-0x1710bd6f]
   140015711:	retf   
   140015712:	lahf   
   140015713:	(bad)  
   140015714:	in     al,0xc7
   140015716:	xchg   esp,ebx
   140015718:	jmp    0xfa00ccdb
   14001571d:	mov    ?,WORD PTR [rax]
   14001571f:	repnz (bad) 
   140015721:	mov    ebp,0xcdea9299
   140015726:	xchg   ebx,eax
   140015727:	mov    edi,0xff7abfe6
   14001572c:	mov    esi,0xcd3190
	...
   14001576d:	add    BYTE PTR [rax],al
   14001576f:	add    bh,bh
   140015771:	(bad)  
   140015772:	jmp    QWORD PTR [rcx]
   140015774:	in     al,0xbb
   140015776:	jns    0x140015777
   140015778:	cmc    
   140015779:	(bad)  
   14001577a:	popf   
   14001577b:	test   eax,0xa6a1d4f2
   140015780:	mov    r9,ds
   140015783:	jmp    QWORD PTR [rbx]
   140015785:	test   ebx,edi
   140015787:	jmp    FWORD PTR [rcx]
   140015789:	xchg   ch,dh
   14001578b:	jmp    FWORD PTR [rcx]
   14001578d:	test   esi,esi
   14001578f:	jmp    FWORD PTR [rcx]
   140015791:	test   esi,esi
   140015793:	jmp    FWORD PTR [rax]
   140015795:	test   ch,dh
   140015797:	jmp    QWORD PTR [rcx]
   140015799:	xor    ch,0xff
   14001579c:	rex.WXB xchg r15,rax
   14001579e:	idiv   edi
   1400157a0:	hlt    
   1400157a1:	clc    
   1400157a2:	(bad)  
   1400157a3:	(bad)  
   1400157a4:	(bad)  
   1400157a5:	(bad)  
   1400157a6:	(bad)  
   1400157a7:	(bad)  
   1400157a8:	(bad)  
   1400157a9:	(bad)  
   1400157aa:	(bad)  
   1400157ab:	(bad)  
   1400157ac:	(bad)  
   1400157ad:	(bad)  
   1400157ae:	(bad)  
   1400157af:	(bad)  
   1400157b0:	(bad)  
   1400157b1:	(bad)  
   1400157b2:	(bad)  
   1400157b3:	(bad)  
   1400157b4:	(bad)  
   1400157b5:	(bad)  
   1400157b6:	(bad)  
   1400157b7:	(bad)  
   1400157b8:	(bad)  
   1400157b9:	(bad)  
   1400157ba:	(bad)  
   1400157bb:	(bad)  
   1400157bc:	(bad)  
   1400157bd:	(bad)  
   1400157be:	(bad)  
   1400157bf:	(bad)  
   1400157c0:	(bad)  
   1400157c1:	(bad)  
   1400157c2:	(bad)  
   1400157c3:	(bad)  
   1400157c4:	(bad)  
   1400157c5:	(bad)  
   1400157c6:	(bad)  
   1400157c7:	(bad)  
   1400157c8:	(bad)  
   1400157c9:	(bad)  
   1400157ca:	(bad)  
   1400157cb:	(bad)  
   1400157cc:	(bad)  
   1400157cd:	(bad)  
   1400157ce:	(bad)  
   1400157cf:	(bad)  
   1400157d0:	(bad)  
   1400157d1:	(bad)  
   1400157d2:	(bad)  
   1400157d3:	(bad)  
   1400157d4:	(bad)  
   1400157d5:	(bad)  
   1400157d6:	(bad)  
   1400157d7:	(bad)  
   1400157d8:	(bad)  
   1400157d9:	(bad)  
   1400157da:	(bad)  
   1400157db:	(bad)  
   1400157dc:	(bad)  
   1400157dd:	(bad)  
   1400157de:	(bad)  
   1400157df:	(bad)  
   1400157e0:	sti    
   1400157e1:	(bad)  
   1400157e2:	(bad)  
   1400157e3:	inc    DWORD PTR [rdx+0x35fff8b4]
   1400157e9:	test   ah,dh
   1400157eb:	jmp    QWORD PTR [rdi]
   1400157ed:	jge    0x1400157e4
   1400157ef:	jmp    FWORD PTR [rax]
   1400157f1:	jnp    0x1400157e6
   1400157f3:	jmp    QWORD PTR [rdx]
   1400157f5:	jns    0x1400157ee
   1400157f7:	jmp    QWORD PTR [rax-0x3e041d47]
   1400157fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400157fe:	(bad)  
   1400157ff:	in     eax,dx
   140015800:	call   0x138e2fed5
   140015805:	out    0xc7,al
   140015807:	repz loope 0x1400157b9
   14001580a:	pop    rcx
   14001580b:	push   QWORD PTR [rdi-0x1710bd6f]
   140015811:	retf   
   140015812:	sahf   
   140015813:	ret    
   140015814:	out    0xc9,al
   140015816:	(bad)  
   140015817:	fsubp  st(1),st
   140015819:	mov    edi,0x8eb9ff76
   14001581e:	cmp    dl,dh
   140015820:	(bad)  
   140015821:	mov    ebp,0xcde99198
   140015826:	xchg   ebx,eax
   140015827:	shl    dh,0xbe
   14001582a:	jns    0x14001582b
   14001582c:	mov    ebp,0xcd2f8e
	...
   14001586d:	add    BYTE PTR [rax],al
   14001586f:	add    bh,bh
   140015871:	(bad)  
   140015872:	jmp    QWORD PTR [rcx]
   140015874:	in     al,0xbb
   140015876:	jns    0x140015877
   140015878:	cmc    
   140015879:	(bad)  
   14001587a:	sahf   
   14001587b:	test   eax,0xa5a0d3f5
   140015880:	rex.WRX (bad) 
   140015882:	(bad)  
   140015883:	jmp    QWORD PTR [rdx]
   140015885:	xchg   ebx,edi
   140015887:	jmp    FWORD PTR [rcx]
   140015889:	mov    dh,dh
   14001588b:	jmp    FWORD PTR [rcx]
   14001588d:	xchg   esi,esi
   14001588f:	jmp    FWORD PTR [rcx]
   140015891:	xchg   esi,esi
   140015893:	jmp    FWORD PTR [rcx]
   140015895:	xchg   dh,dh
   140015897:	jmp    QWORD PTR [rdx]
   140015899:	(bad)  
   14001589a:	cmc    
   14001589b:	dec    DWORD PTR [rdx-0x68]
   14001589e:	idiv   edi
   1400158a0:	repnz idiv ch
   1400158a3:	(bad)  
   1400158a4:	(bad)  
   1400158a5:	(bad)  
   1400158a6:	(bad)  
   1400158a7:	(bad)  
   1400158a8:	(bad)  
   1400158a9:	(bad)  
   1400158aa:	(bad)  
   1400158ab:	(bad)  
   1400158ac:	(bad)  
   1400158ad:	(bad)  
   1400158ae:	(bad)  
   1400158af:	(bad)  
   1400158b0:	(bad)  
   1400158b1:	(bad)  
   1400158b2:	(bad)  
   1400158b3:	(bad)  
   1400158b4:	(bad)  
   1400158b5:	(bad)  
   1400158b6:	(bad)  
   1400158b7:	(bad)  
   1400158b8:	(bad)  
   1400158b9:	(bad)  
   1400158ba:	(bad)  
   1400158bb:	(bad)  
   1400158bc:	(bad)  
   1400158bd:	(bad)  
   1400158be:	(bad)  
   1400158bf:	(bad)  
   1400158c0:	(bad)  
   1400158c1:	(bad)  
   1400158c2:	(bad)  
   1400158c3:	(bad)  
   1400158c4:	(bad)  
   1400158c5:	(bad)  
   1400158c6:	(bad)  
   1400158c7:	(bad)  
   1400158c8:	(bad)  
   1400158c9:	(bad)  
   1400158ca:	(bad)  
   1400158cb:	(bad)  
   1400158cc:	(bad)  
   1400158cd:	(bad)  
   1400158ce:	(bad)  
   1400158cf:	(bad)  
   1400158d0:	(bad)  
   1400158d1:	(bad)  
   1400158d2:	(bad)  
   1400158d3:	(bad)  
   1400158d4:	(bad)  
   1400158d5:	(bad)  
   1400158d6:	(bad)  
   1400158d7:	(bad)  
   1400158d8:	(bad)  
   1400158d9:	(bad)  
   1400158da:	(bad)  
   1400158db:	(bad)  
   1400158dc:	std    
   1400158dd:	(bad)  
   1400158de:	(bad)  
   1400158df:	jmp    FWORD PTR [rbp+0x50fff9cf]
   1400158e5:	cwde   
   1400158e6:	idiv   bh
   1400158e8:	sub    eax,0x28fff583
   1400158ed:	jle    0x1400158e5
   1400158ef:	jmp    FWORD PTR [rax]
   1400158f1:	jg     0x1400158eb
   1400158f3:	jmp    FWORD PTR [rcx]
   1400158f5:	xor    bh,0xfe
   1400158f8:	lods   eax,DWORD PTR ds:[rsi]
   1400158f9:	mov    edi,0xa3bff9db
   1400158fe:	mov    ch,ch
   140015900:	in     al,dx
   140015901:	fdivr  DWORD PTR [rax-0x35180719]
   140015907:	cmc    
   140015908:	loope  0x1400158b9
   14001590a:	pop    rax
   14001590b:	push   QWORD PTR [rdi-0x1710bd70]
   140015911:	int3   
   140015912:	lahf   
   140015913:	(bad)
   140015916:	movabs ds:0x388eb9ff77bfe9e3,al
   14001591f:	repnz sar BYTE PTR [rdi+rdx*4-0x5b2a126f],cl
   140015927:	leave  
   140015928:	out    0xbf,al
   14001592a:	jp     0x14001592b
   14001592c:	mov    ebp,0xcd2f8e
	...
   14001596d:	add    BYTE PTR [rax],al
   14001596f:	add    bh,bh
   140015971:	(bad)  
   140015972:	jmp    QWORD PTR [rcx]
   140015974:	in     al,0xbb
   140015976:	jns    0x140015977
   140015978:	cmc    
   140015979:	(bad)  
   14001597a:	sahf   
   14001597b:	test   eax,0x9da0d7fa
   140015980:	pop    rsp
   140015981:	xchg   ecx,eax
   140015982:	leave  
   140015983:	std    
   140015984:	and    DWORD PTR [rdi-0x77d60003],eax
   14001598a:	idiv   bh
   14001598c:	sub    DWORD PTR [rax-0x77d6000a],ecx
   140015992:	idiv   bh
   140015994:	sub    DWORD PTR [rax-0x7cdd000a],ecx
   14001599a:	cmc    
   14001599b:	call   QWORD PTR [rdx-0x63]
   14001599e:	idiv   edi
   1400159a0:	idiv   al
   1400159a2:	std    
   1400159a3:	(bad)  
   1400159a4:	std    
   1400159a5:	std    
   1400159a6:	(bad)  
   1400159a7:	(bad)  
   1400159a8:	(bad)  
   1400159a9:	(bad)  
   1400159aa:	(bad)  
   1400159ab:	(bad)  
   1400159ac:	(bad)  
   1400159ad:	(bad)  
   1400159ae:	(bad)  
   1400159af:	(bad)  
   1400159b0:	(bad)  
   1400159b1:	(bad)  
   1400159b2:	(bad)  
   1400159b3:	(bad)  
   1400159b4:	(bad)  
   1400159b5:	(bad)  
   1400159b6:	(bad)  
   1400159b7:	(bad)  
   1400159b8:	(bad)  
   1400159b9:	(bad)  
   1400159ba:	(bad)  
   1400159bb:	(bad)  
   1400159bc:	(bad)  
   1400159bd:	(bad)  
   1400159be:	(bad)  
   1400159bf:	(bad)  
   1400159c0:	(bad)  
   1400159c1:	(bad)  
   1400159c2:	(bad)  
   1400159c3:	(bad)  
   1400159c4:	(bad)  
   1400159c5:	(bad)  
   1400159c6:	(bad)  
   1400159c7:	(bad)  
   1400159c8:	(bad)  
   1400159c9:	(bad)  
   1400159ca:	(bad)  
   1400159cb:	(bad)  
   1400159cc:	(bad)  
   1400159cd:	(bad)  
   1400159ce:	(bad)  
   1400159cf:	(bad)  
   1400159d0:	(bad)  
   1400159d1:	(bad)  
   1400159d2:	(bad)  
   1400159d3:	(bad)  
   1400159d4:	(bad)  
   1400159d5:	(bad)  
   1400159d6:	(bad)  
   1400159d7:	(bad)  
   1400159d8:	call   0xca0158ce
   1400159dd:	mov    eax,0x954bfff9
   1400159e2:	idiv   edi
   1400159e4:	cs test esi,esi
   1400159e7:	jmp    FWORD PTR [rcx]
   1400159e9:	xor    ch,0xff
   1400159ec:	(bad)  
   1400159ed:	jle    0x1400159e4
   1400159ef:	jmp    FWORD PTR [rdx]
   1400159f1:	jle    0x1400159e9
   1400159f3:	push   QWORD PTR [rcx]
   1400159f5:	cmp    eax,0xfffffffe
   1400159f8:	mov    ecx,0xc6f7d0c0
   1400159fd:	lods   al,BYTE PTR ds:[rsi]
   1400159fe:	xchg   edi,eax
   1400159ff:	out    dx,al
   140015a00:	cmc    
   140015a01:	in     al,0xc8
   140015a03:	jmp    0x133c84000
   140015a08:	loope  0x1400159b9
   140015a0a:	pop    rax
   140015a0b:	push   QWORD PTR [rdi-0x1610be70]
   140015a11:	shr    DWORD PTR [rbx-0x5a2b1334],1
   140015a17:	in     al,0xe9
   140015a19:	mov    esi,0x8db9ff75
   140015a1e:	(bad)  
   140015a1f:	repnz sar DWORD PTR [rdi-0x210e6660],cl
   140015a26:	mov    bh,0xd0
   140015a28:	out    0xbe,al
   140015a2a:	js     0x140015a2b
   140015a2c:	mov    ebp,0xcd2f8e
	...
   140015a6d:	add    BYTE PTR [rax],al
   140015a6f:	add    bh,bh
   140015a71:	(bad)  
   140015a72:	jmp    QWORD PTR [rcx]
   140015a74:	in     al,0xbb
   140015a76:	js     0x140015a77
   140015a78:	hlt    
   140015a79:	rcr    DWORD PTR [rbp-0x59230155],cl
   140015a7f:	xchg   ecx,eax
   140015a80:	jbe    0x140015a1a
   140015a82:	mov    eax,0xfe881ff6
   140015a87:	jmp    FWORD PTR [rdx]
   140015a89:	mov    dh,dh
   140015a8b:	jmp    FWORD PTR [rdx]
   140015a8d:	mov    esi,esi
   140015a8f:	jmp    FWORD PTR [rdx]
   140015a91:	mov    esi,esi
   140015a93:	jmp    FWORD PTR [rcx]
   140015a95:	mov    esi,esi
   140015a97:	jmp    QWORD PTR [rcx]
   140015a99:	test   dh,dh
   140015a9b:	call   QWORD PTR [rbp-0x60]
   140015a9e:	idiv   edi
   140015aa0:	idiv   eax
   140015aa2:	cld    
   140015aa3:	(bad)  
   140015aa4:	std    
   140015aa5:	std    
   140015aa6:	(bad)  
   140015aa7:	(bad)  
   140015aa8:	(bad)  
   140015aa9:	(bad)  
   140015aaa:	(bad)  
   140015aab:	(bad)  
   140015aac:	(bad)  
   140015aad:	(bad)  
   140015aae:	(bad)  
   140015aaf:	(bad)  
   140015ab0:	(bad)  
   140015ab1:	(bad)  
   140015ab2:	(bad)  
   140015ab3:	(bad)  
   140015ab4:	(bad)  
   140015ab5:	(bad)  
   140015ab6:	(bad)  
   140015ab7:	(bad)  
   140015ab8:	(bad)  
   140015ab9:	(bad)  
   140015aba:	(bad)  
   140015abb:	(bad)  
   140015abc:	(bad)  
   140015abd:	(bad)  
   140015abe:	(bad)  
   140015abf:	(bad)  
   140015ac0:	(bad)  
   140015ac1:	(bad)  
   140015ac2:	(bad)  
   140015ac3:	(bad)  
   140015ac4:	(bad)  
   140015ac5:	(bad)  
   140015ac6:	(bad)  
   140015ac7:	(bad)  
   140015ac8:	(bad)  
   140015ac9:	(bad)  
   140015aca:	(bad)  
   140015acb:	(bad)  
   140015acc:	(bad)  
   140015acd:	(bad)  
   140015ace:	(bad)  
   140015acf:	(bad)  
   140015ad0:	(bad)  
   140015ad1:	(bad)  
   140015ad2:	(bad)  
   140015ad3:	(bad)  
   140015ad4:	mov    ebx,0x5efffbd7
   140015ad9:	movabs ds:0x862efff69143fff8,eax
   140015ae2:	cmc    
   140015ae3:	jmp    FWORD PTR [rax]
   140015ae5:	xor    ebp,0xf58128ff
   140015aeb:	jmp    QWORD PTR [rdi]
   140015aed:	jg     0x140015ae4
   140015aef:	jmp    QWORD PTR [rdi*2-0x71c2000a]
   140015af6:	sti    
   140015af7:	dec    edx
   140015af9:	vpmaddwd ymm2,ymm7,ymm4
   140015afd:	shr    DWORD PTR [rsi-0x3a19060f],0xe6
   140015b04:	mul    esp
   140015b06:	(bad)
   140015b09:	scas   eax,DWORD PTR es:[rdi]
   140015b0a:	push   rdi
   140015b0b:	(bad)  
   140015b0c:	mov    ecx,0xebf14593
   140015b11:	(bad)  
   140015b12:	mov    bl,0xcf
   140015b14:	jmp    0x129e2f3e7
   140015b19:	mov    esi,0x8fb9ff74
   140015b1e:	cmp    ebx,esi
   140015b20:	xlat   BYTE PTR ds:[rbx]
   140015b21:	(bad)  
   140015b22:	scas   al,BYTE PTR es:[rdi]
   140015b23:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015b24:	out    dx,eax
   140015b25:	fldcw  WORD PTR [rbx+rcx*8-0x87411a]
   140015b2c:	mov    ebp,0xcd2f8e
	...
   140015b6d:	add    BYTE PTR [rax],al
   140015b6f:	add    bh,bh
   140015b71:	(bad)  
   140015b72:	jmp    QWORD PTR [rcx]
   140015b74:	in     al,0xbb
   140015b76:	js     0x140015b77
   140015b78:	hlt    
   140015b79:	rcr    BYTE PTR [rbp+rbp*4-0x78521e01],cl
   140015b80:	popf   
   140015b81:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015b82:	movabs ds:0xf68c2afffc8920e6,eax
   140015b8b:	jmp    FWORD PTR [rdx]
   140015b8d:	mov    esi,esi
   140015b8f:	jmp    FWORD PTR [rdx]
   140015b91:	mov    dh,dh
   140015b93:	jmp    FWORD PTR [rdx]
   140015b95:	mov    dh,dh
   140015b97:	jmp    QWORD PTR [rdx]
   140015b99:	test   esi,esi
   140015b9b:	call   QWORD PTR [rbp-0x5f]
   140015b9e:	idiv   edi
   140015ba0:	idiv   eax
   140015ba2:	cld    
   140015ba3:	(bad)  
   140015ba4:	std    
   140015ba5:	std    
   140015ba6:	(bad)  
   140015ba7:	(bad)  
   140015ba8:	(bad)  
   140015ba9:	(bad)  
   140015baa:	(bad)  
   140015bab:	(bad)  
   140015bac:	(bad)  
   140015bad:	(bad)  
   140015bae:	(bad)  
   140015baf:	(bad)  
   140015bb0:	(bad)  
   140015bb1:	(bad)  
   140015bb2:	(bad)  
   140015bb3:	(bad)  
   140015bb4:	(bad)  
   140015bb5:	(bad)  
   140015bb6:	(bad)  
   140015bb7:	(bad)  
   140015bb8:	(bad)  
   140015bb9:	(bad)  
   140015bba:	(bad)  
   140015bbb:	(bad)  
   140015bbc:	(bad)  
   140015bbd:	(bad)  
   140015bbe:	(bad)  
   140015bbf:	(bad)  
   140015bc0:	(bad)  
   140015bc1:	(bad)  
   140015bc2:	(bad)  
   140015bc3:	(bad)  
   140015bc4:	(bad)  
   140015bc5:	(bad)  
   140015bc6:	(bad)  
   140015bc7:	(bad)  
   140015bc8:	(bad)  
   140015bc9:	(bad)  
   140015bca:	(bad)  
   140015bcb:	(bad)  
   140015bcc:	jmp    0xc7015ac4
   140015bd1:	mov    ecx,0x9445fff9
   140015bd6:	idiv   edi
   140015bd8:	cmp    BYTE PTR [rbx-0x7bd40009],cl
   140015bde:	cmc    
   140015bdf:	jmp    FWORD PTR [rcx]
   140015be1:	xor    ebp,0xffffffff
   140015be4:	sub    BYTE PTR [rbx-0x7dd8000b],al
   140015bea:	cmc    
   140015beb:	jmp    FWORD PTR [rax]
   140015bed:	xor    ebp,0xf57b1dff
   140015bf3:	call   FWORD PTR [rbp-0x5f]
   140015bf6:	stc    
   140015bf7:	(bad)  
   140015bf8:	(bad)  
   140015bfa:	(bad)  
   140015bfb:	cmc    
   140015bfc:	fcmove st,st(0)
   140015bfe:	mov    ah,0xef
   140015c00:	sti    
   140015c01:	in     eax,0xc1
   140015c03:	in     al,0xf7
   140015c05:	jrcxz  0x140015bcc
   140015c07:	repz loopne 0x140015bb9
   140015c0a:	pop    rax
   140015c0b:	(bad)  
   140015c0c:	mov    ecx,0xebf34995
   140015c11:	(bad)  
   140015c12:	lods   eax,DWORD PTR ds:[rsi]
   140015c13:	int3   
   140015c14:	call   0x128e2f2e6
   140015c19:	mov    esi,0x91bbff74
   140015c1e:	cmp    al,0xf6
   140015c20:	fmul   st,st(0)
   140015c22:	lods   eax,DWORD PTR ds:[rsi]
   140015c23:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015c24:	out    dx,al
   140015c25:	(bad)  
   140015c26:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015c27:	enter  0xbee6,0x78
   140015c2b:	(bad)  
   140015c2c:	mov    ebp,0xcd2f8e
	...
   140015c6d:	add    BYTE PTR [rax],al
   140015c6f:	add    bh,bh
   140015c71:	(bad)  
   140015c72:	jmp    QWORD PTR [rcx]
   140015c74:	in     al,0xbb
   140015c76:	js     0x140015c77
   140015c78:	repz rcr DWORD PTR [rdx-0x4b1b0053],1
   140015c7f:	or     ebx,0x2ccc92b7
   140015c85:	mov    ch,dh
   140015c87:	jmp    FWORD PTR [rax]
   140015c89:	(bad)  
   140015c8a:	clc    
   140015c8b:	jmp    FWORD PTR [rdx]
   140015c8d:	mov    esi,?
   140015c8f:	jmp    FWORD PTR [rdx]
   140015c91:	mov    esi,?
   140015c93:	jmp    FWORD PTR [rdx]
   140015c95:	mov    esi,esi
   140015c97:	jmp    QWORD PTR [rdx]
   140015c99:	xchg   esi,esi
   140015c9b:	call   QWORD PTR [rbp-0x5f]
   140015c9e:	idiv   edi
   140015ca0:	idiv   eax
   140015ca2:	cld    
   140015ca3:	(bad)  
   140015ca4:	std    
   140015ca5:	std    
   140015ca6:	(bad)  
   140015ca7:	(bad)  
   140015ca8:	(bad)  
   140015ca9:	(bad)  
   140015caa:	(bad)  
   140015cab:	(bad)  
   140015cac:	(bad)  
   140015cad:	(bad)  
   140015cae:	(bad)  
   140015caf:	(bad)  
   140015cb0:	(bad)  
   140015cb1:	(bad)  
   140015cb2:	(bad)  
   140015cb3:	(bad)  
   140015cb4:	(bad)  
   140015cb5:	(bad)  
   140015cb6:	(bad)  
   140015cb7:	(bad)  
   140015cb8:	(bad)  
   140015cb9:	(bad)  
   140015cba:	(bad)  
   140015cbb:	(bad)  
   140015cbc:	(bad)  
   140015cbd:	(bad)  
   140015cbe:	(bad)  
   140015cbf:	(bad)  
   140015cc0:	(bad)  
   140015cc1:	(bad)  
   140015cc2:	(bad)  
   140015cc3:	(bad)  
   140015cc4:	(bad)  
   140015cc5:	(bad)  
   140015cc6:	(bad)  
   140015cc7:	(bad)  
   140015cc8:	mov    ebp,0x5dfefcd9
   140015ccd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015cce:	clc    
   140015ccf:	(bad)  
   140015cd0:	(bad)  
   140015cd1:	xchg   edx,eax
   140015cd2:	idiv   bh
   140015cd4:	xor    al,0x8b
   140015cd6:	idiv   bh
   140015cd8:	sub    BYTE PTR [rbp+rsi*8-0xa7cd701],al
   140015cdf:	jmp    FWORD PTR [rcx]
   140015ce1:	test   ch,dh
   140015ce3:	jmp    FWORD PTR [rcx]
   140015ce5:	test   ch,dh
   140015ce7:	jmp    FWORD PTR [rcx]
   140015ce9:	xor    ebp,0xffffffff
   140015cec:	(bad)  
   140015ced:	xor    ebp,0xf67d1eff
   140015cf3:	jmp    QWORD PTR [rax-0x25020b3b]
   140015cf9:	enter  0xf3b8,0xe2
   140015cfd:	(bad)  
   140015cfe:	mov    ah,0xec
   140015d00:	std    
   140015d01:	out    0xc1,eax
   140015d03:	jrcxz  0x140015cfb
   140015d05:	jrcxz  0x140015ccc
   140015d07:	repz loopne 0x140015cb9
   140015d0a:	pop    rax
   140015d0b:	(bad)  
   140015d0c:	mov    ecx,0xeaf24693
   140015d11:	shr    BYTE PTR [rax-0x6a331736],1
   140015d17:	jrcxz  0x140015d01
   140015d19:	mov    esi,0x90baff74
   140015d1e:	cmp    esi,ebp
   140015d20:	(bad)  
   140015d21:	shl    DWORD PTR [rbx-0x5c2c1258],0xcd
   140015d28:	out    0xbe,al
   140015d2a:	js     0x140015d2b
   140015d2c:	mov    ebp,0xcd2f8e
	...
   140015d6d:	add    BYTE PTR [rax],al
   140015d6f:	add    bh,bh
   140015d71:	(bad)  
   140015d72:	jmp    QWORD PTR [rcx]
   140015d74:	in     al,0xbb
   140015d76:	js     0x140015d77
   140015d78:	repz rcr DWORD PTR [rcx-0x491c0053],1
   140015d7f:	xor    ecx,0xffffffcd
   140015d82:	xchg   esi,eax
   140015d83:	stos   BYTE PTR es:[rdi],al
   140015d84:	rex.WRXB (bad) 
   140015d86:	int3   
   140015d87:	jmp    QWORD PTR [rbx]
   140015d89:	(bad)  
   140015d8a:	(bad)  
   140015d8b:	jmp    FWORD PTR [rbx]
   140015d8d:	mov    ?,edi
   140015d8f:	jmp    FWORD PTR [rbx]
   140015d91:	(bad)  
   140015d92:	idiv   edi
   140015d94:	sub    ecx,DWORD PTR [rbp-0x77dd000a]
   140015d9a:	idiv   bh
   140015d9c:	push   rbp
   140015d9d:	movabs ds:0xfdfdfffbf7f7fff7,al
   140015da6:	(bad)  
   140015da7:	(bad)  
   140015da8:	(bad)  
   140015da9:	(bad)  
   140015daa:	(bad)  
   140015dab:	(bad)  
   140015dac:	(bad)  
   140015dad:	(bad)  
   140015dae:	(bad)  
   140015daf:	(bad)  
   140015db0:	(bad)  
   140015db1:	(bad)  
   140015db2:	(bad)  
   140015db3:	(bad)  
   140015db4:	(bad)  
   140015db5:	(bad)  
   140015db6:	(bad)  
   140015db7:	(bad)  
   140015db8:	(bad)  
   140015db9:	(bad)  
   140015dba:	(bad)  
   140015dbb:	(bad)  
   140015dbc:	(bad)  
   140015dbd:	(bad)  
   140015dbe:	(bad)  
   140015dbf:	(bad)  
   140015dc0:	in     al,dx
   140015dc1:	hlt    
   140015dc2:	(bad)  
   140015dc3:	dec    DWORD PTR [rbx+0x47fefabe]
   140015dc9:	cwde   
   140015dca:	idiv   edi
   140015dcc:	cmp    eax,0x2ffff793
   140015dd1:	mov    dh,dh
   140015dd3:	jmp    FWORD PTR [rax]
   140015dd5:	test   ebp,esi
   140015dd7:	jmp    FWORD PTR [rax]
   140015dd9:	xchg   dh,dh
   140015ddb:	jmp    FWORD PTR [rcx]
   140015ddd:	test   ebp,esi
   140015ddf:	jmp    FWORD PTR [rcx]
   140015de1:	test   ebp,esi
   140015de3:	jmp    FWORD PTR [rcx]
   140015de5:	test   esi,esi
   140015de7:	jmp    QWORD PTR [rip+0x27fff583]        # 0x168015370
   140015ded:	xor    ebp,0xffffffff
   140015df0:	pop    rbp
   140015df1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015df2:	cld    
   140015df3:	(bad)  
   140015df4:	fcomp  st(2)
   140015df6:	loopne 0x140015df1
   140015df8:	(bad)  
   140015df9:	mov    edx,0xd9eff1a9
   140015dfe:	mov    ecx,0xc2e7fde8
   140015e03:	in     eax,0xf6
   140015e05:	in     al,0xc6
   140015e07:	cmc    
   140015e08:	loopne 0x140015db9
   140015e0a:	pop    rax
   140015e0b:	(bad)  
   140015e0c:	mov    ecx,0xebf14593
   140015e11:	shr    BYTE PTR [rax-0x63311435],1
   140015e17:	out    0xe8,al
   140015e19:	mov    esi,0x8fbaff75
   140015e1e:	cmp    dh,ah
   140015e20:	(bad)  
   140015e21:	shl    DWORD PTR [rcx-0x5b2c1257],0xce
   140015e28:	out    0xbe,al
   140015e2a:	js     0x140015e2b
   140015e2c:	mov    ebp,0xcd2f8e
	...
   140015e6d:	add    BYTE PTR [rax],al
   140015e6f:	add    bh,bh
   140015e71:	(bad)  
   140015e72:	jmp    QWORD PTR [rcx]
   140015e74:	in     al,0xbb
   140015e76:	ja     0x140015e77
   140015e78:	hlt    
   140015e79:	rcr    DWORD PTR [rax-0x4c1e0253],1
   140015e7f:	mov    bh,bh
   140015e81:	fisubr WORD PTR [rax-0x60606c73]
   140015e87:	in     eax,dx
   140015e88:	and    DWORD PTR [rbp-0x70d50003],ecx
   140015e8e:	idiv   edi
   140015e90:	sub    ecx,DWORD PTR [rdi-0x71d40009]
   140015e96:	idiv   edi
   140015e98:	and    ecx,DWORD PTR [rdx-0x5ca90009]
   140015e9e:	idiv   edi
   140015ea0:	div    edi
   140015ea2:	sti    
   140015ea3:	(bad)  
   140015ea4:	std    
   140015ea5:	std    
   140015ea6:	(bad)  
   140015ea7:	(bad)  
   140015ea8:	(bad)  
   140015ea9:	(bad)  
   140015eaa:	(bad)  
   140015eab:	(bad)  
   140015eac:	(bad)  
   140015ead:	(bad)  
   140015eae:	(bad)  
   140015eaf:	(bad)  
   140015eb0:	(bad)  
   140015eb1:	(bad)  
   140015eb2:	(bad)  
   140015eb3:	(bad)  
   140015eb4:	(bad)  
   140015eb5:	(bad)  
   140015eb6:	(bad)  
   140015eb7:	(bad)  
   140015eb8:	(bad)  
   140015eb9:	(bad)  
   140015eba:	(bad)  
   140015ebb:	inc    eax
   140015ebd:	(bad)  
   140015ebf:	jmp    QWORD PTR [rax-0x58]
   140015ec2:	clc    
   140015ec3:	inc    DWORD PTR [rdx-0x6a]
   140015ec6:	idiv   edi
   140015ec8:	(bad)  
   140015ec9:	nop
   140015eca:	idiv   bh
   140015ecc:	sub    cl,BYTE PTR [rcx-0x77d7000a]
   140015ed2:	idiv   bh
   140015ed4:	sub    DWORD PTR [rax-0x77d6000a],ecx
   140015eda:	idiv   bh
   140015edc:	sub    DWORD PTR [rdi-0x78d6000a],eax
   140015ee2:	idiv   bh
   140015ee4:	and    eax,0x2ffff684
   140015ee9:	mov    esi,esi
   140015eeb:	call   FWORD PTR [rax-0x5f]
   140015eee:	clc    
   140015eef:	call   FWORD PTR [rbx-0x25000238]
   140015ef5:	int3   
   140015ef6:	shl    ebp,0xd5
   140015ef9:	shr    BYTE PTR [rsi+rbp*8-0x18401b06],0xfe
   140015f01:	(bad)  
   140015f02:	(bad)  
   140015f03:	call   0x135c843ff
   140015f08:	loopne 0x140015eb9
   140015f0a:	pop    rax
   140015f0b:	(bad)  
   140015f0c:	mov    ecx,0xecf14593
   140015f11:	shr    DWORD PTR [rbp-0x5d2d142f],cl
   140015f17:	jmp    0x13f771e04
   140015f1c:	mov    edx,0xd4f43a8f
   140015f21:	shl    BYTE PTR [rax-0x5c2c1257],0xce
   140015f28:	out    0xbe,al
   140015f2a:	js     0x140015f2b
   140015f2c:	mov    ebp,0xcd2f8e
	...
   140015f6d:	add    BYTE PTR [rax],al
   140015f6f:	add    bh,bh
   140015f71:	(bad)  
   140015f72:	jmp    QWORD PTR [rcx]
   140015f74:	in     al,0xbb
   140015f76:	ja     0x140015f77
   140015f78:	hlt    
   140015f79:	rcl    DWORD PTR [rdi-0x4e1f0253],1
   140015f7f:	mov    edi,edi
   140015f81:	jrcxz  0x140015f36
   140015f83:	test   ebp,ebx
   140015f85:	mov    edi,0x8d3cbe8d
   140015f8a:	(bad)  
   140015f8c:	es nop
   140015f8e:	cld    
   140015f8f:	jmp    FWORD PTR [rbx]
   140015f91:	nop
   140015f92:	idiv   edi
   140015f94:	sub    ecx,DWORD PTR [rdi-0x74dc0009]
   140015f9a:	idiv   bh
   140015f9c:	push   rdi
   140015f9d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015f9e:	idiv   edi
   140015fa0:	clc    
   140015fa1:	idiv   ebx
   140015fa3:	(bad)  
   140015fa4:	std    
   140015fa5:	std    
   140015fa6:	(bad)  
   140015fa7:	(bad)  
   140015fa8:	(bad)  
   140015fa9:	(bad)  
   140015faa:	(bad)  
   140015fab:	(bad)  
   140015fac:	(bad)  
   140015fad:	(bad)  
   140015fae:	(bad)  
   140015faf:	(bad)  
   140015fb0:	(bad)  
   140015fb1:	(bad)  
   140015fb2:	(bad)  
   140015fb3:	(bad)  
   140015fb4:	out    dx,al
   140015fb5:	idiv   dh
   140015fb7:	dec    DWORD PTR [rdi+0x49fefac2]
   140015fbd:	pushf  
   140015fbe:	clc    
   140015fbf:	(bad)  
   140015fc0:	ds xchg esi,eax
   140015fc2:	idiv   edi
   140015fc4:	(bad)  
   140015fc5:	mov    ?,esi
   140015fc7:	jmp    FWORD PTR [rax]
   140015fc9:	mov    esi,esi
   140015fcb:	jmp    FWORD PTR [rdx]
   140015fcd:	mov    dh,dh
   140015fcf:	jmp    FWORD PTR [rdx]
   140015fd1:	mov    esi,esi
   140015fd3:	jmp    FWORD PTR [rdx]
   140015fd5:	mov    esi,esi
   140015fd7:	jmp    FWORD PTR [rdx]
   140015fd9:	mov    esi,esi
   140015fdb:	jmp    QWORD PTR [rdi]
   140015fdd:	xchg   esi,esi
   140015fdf:	jmp    QWORD PTR [rip+0x3dfff686]        # 0x17e01566b
   140015fe5:	xchg   edx,eax
   140015fe6:	idiv   edi
   140015fe8:	push   0xffffffffffffffab
   140015fea:	clc    
   140015feb:	jmp    FWORD PTR [rcx-0x54]
   140015fee:	std    
   140015fef:	inc    edi
   140015ff1:	(bad)  
   140015ff2:	jmp    0xebbd31f2
   140015ff7:	icebp  
   140015ff8:	jmp    0x13eee19d2
   140015ffd:	call   0x12a0049c5
   140016002:	(bad)
   140016005:	jrcxz  0x140015fcc
   140016007:	cmc    
   140016008:	loopne 0x140015fb9
   14001600a:	pop    rax
   14001600b:	(bad)  
   14001600c:	mov    edx,0xecf44894
   140016011:	(bad)  
   140016012:	mov    al,0xd2
   140016014:	(bad)  
   140016015:	iret   
   140016016:	sahf   
   140016017:	out    0xe8,al
   140016019:	mov    esi,0x8fbaff75
   14001601e:	cmp    dh,ah
   140016020:	(bad)  
   140016021:	shl    BYTE PTR [rax-0x5c2c1257],0xce
   140016028:	out    0xbe,al
   14001602a:	js     0x14001602b
   14001602c:	mov    ebp,0xcd2f8e
	...
   14001606d:	add    BYTE PTR [rax],al
   14001606f:	add    bh,bh
   140016071:	(bad)  
   140016072:	jmp    QWORD PTR [rcx]
   140016074:	in     al,0xb9
   140016076:	je     0x140016077
   140016078:	hlt    
   140016079:	rcl    BYTE PTR [rsi-0x4f1f0253],1
   14001607f:	mov    ebp,edi
   140016081:	loopne 0x140016034
   140016083:	mov    edi,esi
   140016085:	(bad)  [rcx+rdx*4-0xf606272]
   14001608c:	and    cl,BYTE PTR [rdi-0x6ed30002]
   140016092:	idiv   edi
   140016094:	sub    al,0x91
   140016096:	idiv   edi
   140016098:	and    al,0x8d
   14001609a:	idiv   edi
   14001609c:	rex.WRX movabs rax,ds:0xfffffffbf8f9fff7
   1400160a6:	(bad)  
   1400160a7:	(bad)  
   1400160a8:	(bad)  
   1400160a9:	(bad)  
   1400160aa:	(bad)  
   1400160ab:	(bad)  
   1400160ac:	(bad)  
   1400160ad:	(bad)  
   1400160ae:	(bad)  
   1400160af:	inc    edi
   1400160b1:	loope  0x1400160af
   1400160b3:	jmp    QWORD PTR [rbx-0x55]
   1400160b6:	stc    
   1400160b7:	inc    BYTE PTR [rdx-0x66]
   1400160ba:	idiv   edi
   1400160bc:	cmp    BYTE PTR [rdi+rsi*8-0x973d401],dl
   1400160c3:	jmp    FWORD PTR [rcx]
   1400160c5:	mov    esi,esi
   1400160c7:	jmp    FWORD PTR [rdx]
   1400160c9:	mov    esi,esi
   1400160cb:	jmp    FWORD PTR [rdx]
   1400160cd:	mov    esi,esi
   1400160cf:	jmp    FWORD PTR [rdx]
   1400160d1:	mov    esi,esi
   1400160d3:	jmp    FWORD PTR [rcx]
   1400160d5:	mov    dh,dh
   1400160d7:	jmp    QWORD PTR [rip+0x2efff687]        # 0x16f015764
   1400160dd:	mov    esi,?
   1400160df:	call   QWORD PTR [rax+riz*4-0x8]
   1400160e3:	push   QWORD PTR [rdx-0x4f]
   1400160e6:	stc    
   1400160e7:	call   FWORD PTR [rsi-0x5b]
   1400160ea:	clc    
   1400160eb:	dec    DWORD PTR [rdi-0x2300033e]
   1400160f1:	int3   
   1400160f2:	ret    0xd6f5
   1400160f5:	ret    0xf0b1
   1400160f8:	cli    
   1400160f9:	in     eax,0xc2
   1400160fb:	(bad)  
   1400160fc:	std    
   1400160fd:	out    0xc0,al
   1400160ff:	call   0x127c44902
   140016104:	mul    ebx
   140016106:	(bad)  
   140016107:	cmc    
   140016108:	loopne 0x1400160b9
   14001610a:	pop    rax
   14001610b:	(bad)  
   14001610c:	mov    edx,0xebf34794
   140016111:	shr    DWORD PTR [rax+rdx*8-0x19623016],cl
   140016118:	call   0xfb00d6db
   14001611d:	(bad)  
   14001611e:	cmp    dh,ah
   140016120:	(bad)  
   140016121:	rcr    BYTE PTR [rdi-0x5c2c1257],0xce
   140016128:	out    0xbe,al
   14001612a:	js     0x14001612b
   14001612c:	mov    ebp,0xcd2f8e
	...
   14001616d:	add    BYTE PTR [rax],al
   14001616f:	add    bh,bh
   140016171:	(bad)  
   140016172:	jmp    QWORD PTR [rcx]
   140016174:	jmp    0x13500ec3d
   140016179:	rcl    BYTE PTR [rsi-0x52200153],1
   14001617f:	xchg   ebp,edi
   140016181:	fisubr WORD PTR [rbp-0x4c1c0073]
   140016187:	test   esi,esp
   140016189:	ret    
   14001618a:	mov    edi,DWORD PTR [rax+rdx*2+0x22ffc990]
   140016191:	xchg   edx,eax
   140016192:	(bad)  
   140016193:	jmp    FWORD PTR [rdx+rdx*4]
   140016196:	idiv   edi
   140016198:	sub    dl,BYTE PTR [rcx-0x6fd50009]
   14001619e:	idiv   edi
   1400161a0:	test   al,0xcf
   1400161a2:	clc    
   1400161a3:	push   rsi
   1400161a5:	clc    
   1400161a6:	sti    
   1400161a7:	jmp    rbx
   1400161a9:	lock (bad) 
   1400161ab:	call   QWORD PTR [rdx+0x49fffac6]
   1400161b1:	lahf   
   1400161b2:	clc    
   1400161b3:	(bad)  
   1400161b4:	ds cdq 
   1400161b6:	idiv   edi
   1400161b8:	xor    DWORD PTR [rdx-0x72d60009],edx
   1400161be:	idiv   edi
   1400161c0:	sub    ecx,DWORD PTR [rsi-0x72d4000a]
   1400161c6:	idiv   bh
   1400161c8:	sub    ecx,DWORD PTR [rbp-0x74d70009]
   1400161ce:	idiv   bh
   1400161d0:	and    eax,0x2dfff689
   1400161d5:	(bad)  
   1400161d6:	idiv   bh
   1400161d8:	rex.WX pushf 
   1400161da:	idiv   edi
   1400161dc:	imul   ebp,DWORD PTR [rsi-0x4f900007],0xfffffff9
   1400161e3:	call   FWORD PTR [rsi-0x5a]
   1400161e6:	clc    
   1400161e7:	jmp    QWORD PTR [rdi-0x52]
   1400161ea:	std    
   1400161eb:	call   rsp
   1400161ed:	fsub   st,st(0)
   1400161ef:	cli    
   1400161f0:	sar    DWORD PTR [rbx-0x25110c53],1
   1400161f6:	mov    esp,0xc0e7fdec
   1400161fb:	call   0x129c148fd
   140016200:	(bad)  
   140016201:	out    0xc4,eax
   140016203:	jmp    0x1400161fc
   140016205:	in     al,0xc5
   140016207:	mul    al
   140016209:	scas   eax,DWORD PTR es:[rdi]
   14001620a:	pop    rax
   14001620b:	(bad)  
   14001620c:	mov    edx,0xebf24693
   140016211:	shr    DWORD PTR [rdx-0x62301430],cl
   140016217:	out    0xe9,al
   140016219:	mov    esi,0x8fbaff75
   14001621e:	cmp    esp,esi
   140016220:	(bad)  
   140016221:	mov    edi,0xd3eda99e
   140016226:	movabs ds:0x2f8ebdff79bee6ce,al
   14001622f:	int    0x0
	...
   14001626d:	add    BYTE PTR [rax],al
   14001626f:	add    bh,bh
   140016271:	(bad)  
   140016272:	jmp    QWORD PTR [rcx]
   140016274:	out    dx,al
   140016275:	shl    DWORD PTR [rsi-0x471f0601],cl
   14001627b:	sar    esi,0xe2
   14001627e:	mov    dh,0x94
   140016280:	std    
   140016281:	fild   QWORD PTR [rsp+rcx*4-0x7a502003]
   140016288:	cld    
   140016289:	(bad)  
   14001628a:	pushf  
   14001628b:	test   eax,0xfd7fa7bc
   140016290:	xor    eax,0x26ffe690
   140016295:	xchg   ebx,eax
   140016296:	(bad)  
   140016297:	jmp    FWORD PTR [rip+0x2afff793]        # 0x16b015a30
   14001629d:	xchg   edx,eax
   14001629e:	idiv   edi
   1400162a0:	sub    dl,BYTE PTR [rcx-0x60b80009]
   1400162a6:	idiv   bh
   1400162a8:	rex pushf 
   1400162aa:	idiv   edi
   1400162ac:	xor    DWORD PTR [rdi+rsi*8-0x86bcd01],edx
   1400162b3:	jmp    FWORD PTR [rbx]
   1400162b5:	nop
   1400162b6:	idiv   edi
   1400162b8:	sub    cl,BYTE PTR [rdi-0x70d50009]
   1400162be:	idiv   edi
   1400162c0:	sub    BYTE PTR [rsi-0x73d90009],cl
   1400162c6:	idiv   edi
   1400162c8:	sub    BYTE PTR [rbp-0x6bca000a],cl
   1400162ce:	idiv   edi
   1400162d0:	rex.WRXB movabs rax,ds:0xb271fff9af6afff8
   1400162da:	cli    
   1400162db:	jmp    QWORD PTR [rbp-0x54]
   1400162de:	clc    
   1400162df:	call   FWORD PTR [rbp-0x59]
   1400162e2:	clc    
   1400162e3:	call   FWORD PTR [rdx-0x59]
   1400162e6:	cld    
   1400162e7:	(bad)  
   1400162e8:	mov    ebp,0xd6fdeed4
   1400162ed:	shl    DWORD PTR [rbp+rsi*8-0x114a311e],0xfd
   1400162f5:	out    0xc1,al
   1400162f7:	(bad)  
   1400162f8:	std    
   1400162f9:	out    0xc1,al
   1400162fb:	in     al,dx
   1400162fc:	std    
   1400162fd:	out    0xc0,al
   1400162ff:	in     eax,dx
   140016300:	jmp    rdi
   140016302:	ret    0xf7ea
   140016305:	in     al,0xc4
   140016307:	mul    al
   140016309:	scas   eax,DWORD PTR es:[rdi]
   14001630a:	pop    rax
   14001630b:	(bad)  
   14001630c:	mov    ecx,0xecf24693
   140016311:	shr    DWORD PTR [rcx-0x63301430],cl
   140016317:	out    0xe8,al
   140016319:	mov    esi,0x8fbaff75
   14001631e:	cmp    esp,esi
   140016320:	(bad)  
   140016321:	mov    edi,0xd3eda99d
   140016326:	movabs ds:0x2f8ebdff79bee6ce,al
   14001632f:	int    0x0
	...
   14001636d:	add    BYTE PTR [rax],al
   14001636f:	add    bh,bh
   140016371:	(bad)  
   140016372:	jmp    QWORD PTR [rcx]
   140016374:	in     al,dx
   140016375:	int    0x99
   140016377:	(bad)  
   140016378:	clc    
   140016379:	jrcxz  0x14001633b
   14001637b:	(bad)  
   14001637c:	(bad)  
   14001637d:	out    dx,eax
   14001637e:	(bad)  
   14001637f:	mov    cl,0xfe
   140016381:	(bad)  
   140016382:	retf   0xfeab
   140016385:	out    0xbe,al
   140016387:	cdq    
   140016388:	clc    
   140016389:	xlat   BYTE PTR ds:[rbx]
   14001638a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001638b:	scas   eax,DWORD PTR es:[rdi]
   14001638c:	hlt    
   14001638d:	mov    DWORD PTR [rdx-0x755e5a04],0xed8f2cfd
   140016397:	jmp    QWORD PTR [rdx+rdx*4]
   14001639a:	cld    
   14001639b:	jmp    FWORD PTR [rdx]
   14001639d:	xchg   edx,eax
   14001639e:	idiv   edi
   1400163a0:	sub    BYTE PTR [rcx-0x70dc0009],dl
   1400163a6:	idiv   edi
   1400163a8:	and    eax,0x27fff78f
   1400163ad:	nop
   1400163ae:	idiv   edi
   1400163b0:	es (bad) 
   1400163b2:	idiv   edi
   1400163b4:	(bad)  
   1400163b5:	(bad)  
   1400163b6:	idiv   edi
   1400163b8:	sub    DWORD PTR [rax-0x6dd10009],edx
   1400163be:	idiv   edi
   1400163c0:	cmp    DWORD PTR [rax-0x5eb40008],ebx
   1400163c6:	clc    
   1400163c7:	jmp    QWORD PTR [rax-0x55]
   1400163ca:	stc    
   1400163cb:	jmp    FWORD PTR [rdi-0x4d]
   1400163ce:	cli    
   1400163cf:	jmp    FWORD PTR [rdi-0x4d]
   1400163d2:	cli    
   1400163d3:	jmp    QWORD PTR [rbp-0x52]
   1400163d6:	stc    
   1400163d7:	call   FWORD PTR [rdi-0x56]
   1400163da:	clc    
   1400163db:	call   FWORD PTR [rbp-0x57]
   1400163de:	stc    
   1400163df:	call   QWORD PTR [rdi-0x59]
   1400163e2:	cld    
   1400163e3:	jmp    FWORD PTR [rbx-0x25010d33]
   1400163e9:	(bad)  
   1400163ea:	mov    esp,0xb2c7dcf7
   1400163ef:	icebp  
   1400163f0:	sti    
   1400163f1:	out    0xc0,al
   1400163f3:	in     eax,dx
   1400163f4:	(bad)  
   1400163f5:	out    0xc1,al
   1400163f7:	in     al,dx
   1400163f8:	std    
   1400163f9:	out    0xbf,al
   1400163fb:	jmp    0x1400163fb
   1400163fd:	out    0xbd,al
   1400163ff:	jmp    0x140016400
   140016401:	out    0xc1,eax
   140016403:	jmp    0x136c648ff
   140016408:	loopne 0x1400163b9
   14001640a:	pop    rax
   14001640b:	(bad)  
   14001640c:	mov    edx,0xedf24693
   140016411:	shr    DWORD PTR [rcx-0x63301430],cl
   140016417:	out    0xe8,al
   140016419:	mov    esi,0x8fbaff75
   14001641e:	cmp    esp,esi
   140016420:	(bad)  
   140016421:	mov    edi,0xd3eda99d
   140016426:	movabs ds:0x308fbdff79bee6ce,al
   14001642f:	(bad)  
	...
   140016470:	(bad)  
   140016471:	(bad)  
   140016472:	jmp    QWORD PTR [rcx]
   140016474:	in     al,dx
   140016475:	int3   
   140016476:	cwde   
   140016477:	(bad)  
   140016478:	clc    
   140016479:	loopne 0x140016432
   14001647b:	sar    edi,0xeb
   14001647e:	int3   
   14001647f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016480:	(bad)  
   140016481:	in     al,dx
   140016482:	iret   
   140016483:	scas   al,BYTE PTR es:[rdi]
   140016484:	(bad)  
   140016485:	out    dx,eax
   140016486:	(bad)  
   140016487:	mov    al,0xf9
   140016489:	out    0xc5,al
   14001648b:	(bad)  
   14001648c:	neg    cl
   14001648e:	stos   DWORD PTR es:[rdi],eax
   14001648f:	(bad)  
   140016490:	stc    
   140016491:	fldenv [rbp-0x554e5413]
   140016497:	test   BYTE PTR [rsi-0x62],0xef
   14001649b:	(bad)  
   14001649c:	cmp    DWORD PTR [rsi-0x62c20002],ebx
   1400164a2:	clc    
   1400164a3:	(bad)  
   1400164a4:	cmp    eax,0x3efff89d
   1400164a9:	popf   
   1400164aa:	clc    
   1400164ab:	inc    DWORD PTR [rbx-0x61]
   1400164ae:	clc    
   1400164af:	dec    DWORD PTR [rdx-0x5e]
   1400164b2:	clc    
   1400164b3:	call   QWORD PTR [rbx-0x59]
   1400164b6:	stc    
   1400164b7:	call   FWORD PTR [rdi-0x53]
   1400164ba:	stc    
   1400164bb:	jmp    FWORD PTR [rcx-0x4e]
   1400164be:	cli    
   1400164bf:	push   QWORD PTR [rax-0x4b]
   1400164c2:	cli    
   1400164c3:	push   QWORD PTR [rax-0x4b]
   1400164c6:	cli    
   1400164c7:	jmp    FWORD PTR [rcx-0x4f]
   1400164ca:	stc    
   1400164cb:	jmp    QWORD PTR [rdx-0x53]
   1400164ce:	stc    
   1400164cf:	call   FWORD PTR [rdi-0x55]
   1400164d2:	stc    
   1400164d3:	call   FWORD PTR [rdi-0x55]
   1400164d6:	stc    
   1400164d7:	call   FWORD PTR [rbx-0x57]
   1400164da:	cli    
   1400164db:	call   FWORD PTR [rdx-0x55]
   1400164de:	cld    
   1400164df:	jmp    FWORD PTR [rax-0x24011135]
   1400164e5:	leave  
   1400164e6:	mov    esp,0xb2c7ddf7
   1400164eb:	icebp  
   1400164ec:	sti    
   1400164ed:	in     eax,0xc0
   1400164ef:	jmp    0x1400164ef
   1400164f1:	out    0xc0,al
   1400164f3:	jmp    0x1400164f2
   1400164f5:	out    0xbf,al
   1400164f7:	jmp    0x1400164f7
   1400164f9:	out    0xbd,al
   1400164fb:	jmp    0x1400164fb
   1400164fd:	out    0xbd,al
   1400164ff:	jmp    0x140016500
   140016501:	out    0xc0,eax
   140016503:	jmp    0x136c648ff
   140016508:	loopne 0x1400164b9
   14001650a:	pop    rax
   14001650b:	(bad)  
   14001650c:	mov    edx,0xedf24593
   140016511:	shl    BYTE PTR [rdi-0x63301430],cl
   140016517:	out    0xe9,al
   140016519:	mov    esi,0x8fbaff75
   14001651e:	cmp    esp,esi
   140016520:	(bad)  
   140016521:	mov    edi,0xd3eda99d
   140016526:	movabs eax,ds:0x308fbdff79bee6ce
   14001652f:	(bad)  
	...
   140016570:	(bad)  
   140016571:	(bad)  
   140016572:	jmp    QWORD PTR [rcx]
   140016574:	in     al,dx
   140016575:	int3   
   140016576:	cwde   
   140016577:	push   rdi
   140016579:	fnsave [rbp-0x3a190439]
   14001657f:	scas   al,BYTE PTR es:[rdi]
   140016580:	sti    
   140016581:	in     eax,0xc4
   140016583:	mov    al,0xfb
   140016585:	out    0xc5,al
   140016587:	lods   eax,DWORD PTR ds:[rsi]
   140016588:	clc    
   140016589:	loopne 0x140016546
   14001658b:	(bad)
   14001658e:	test   eax,0xbce4fcff
   140016593:	jmp    0x140016594
   140016595:	jmp    0x10ad73e5c
   14001659a:	mov    bl,0xf1
   14001659c:	test   DWORD PTR [rbp-0x48960021],esi
   1400165a2:	(bad)  
   1400165a3:	jmp    FWORD PTR [rbp-0x48]
   1400165a6:	std    
   1400165a7:	push   QWORD PTR [rcx-0x49]
   1400165aa:	cli    
   1400165ab:	push   QWORD PTR [rcx-0x49]
   1400165ae:	cli    
   1400165af:	push   QWORD PTR [rax-0x4a]
   1400165b2:	cli    
   1400165b3:	jmp    FWORD PTR [rsi-0x4b]
   1400165b6:	cli    
   1400165b7:	jmp    FWORD PTR [rdx-0x4d]
   1400165ba:	cli    
   1400165bb:	jmp    QWORD PTR [rbp-0x50]
   1400165be:	stc    
   1400165bf:	jmp    QWORD PTR [rcx-0x52]
   1400165c2:	stc    
   1400165c3:	call   FWORD PTR [rdi-0x53]
   1400165c6:	stc    
   1400165c7:	call   FWORD PTR [rdi-0x53]
   1400165ca:	stc    
   1400165cb:	jmp    QWORD PTR [rax-0x53]
   1400165ce:	stc    
   1400165cf:	call   FWORD PTR [rsi-0x55]
   1400165d2:	stc    
   1400165d3:	call   QWORD PTR [rdi-0x57]
   1400165d6:	cld    
   1400165d7:	jmp    FWORD PTR [rcx-0x4f]
   1400165da:	sti    
   1400165db:	(bad)  
   1400165dc:	mov    eax,0xdefde1cc
   1400165e1:	enter  0xf5b9,0xe3
   1400165e5:	int    0xb3
   1400165e7:	out    dx,eax
   1400165e8:	cld    
   1400165e9:	in     eax,0xbf
   1400165eb:	jmp    0x1400165eb
   1400165ed:	out    0xbf,al
   1400165ef:	jmp    0x1400165ee
   1400165f1:	out    0xbe,al
   1400165f3:	jmp    0x1400165f3
   1400165f5:	out    0xbd,al
   1400165f7:	jmp    0x1400165f7
   1400165f9:	out    0xbd,al
   1400165fb:	jmp    0x1400165fb
   1400165fd:	in     eax,0xbc
   1400165ff:	jmp    0x140016600
   140016601:	out    0xbf,al
   140016603:	jmp    0x136c649ff
   140016608:	loopne 0x1400165b9
   14001660a:	pop    rax
   14001660b:	(bad)  
   14001660c:	mov    edx,0xedf24593
   140016611:	shl    BYTE PTR [rdi-0x63301430],cl
   140016617:	out    0xe9,al
   140016619:	mov    esi,0x8fbaff75
   14001661e:	cmp    esp,esi
   140016620:	(bad)  
   140016621:	mov    edi,0xd3eda99b
   140016626:	movabs eax,ds:0x2f8fbdff79bee6ce
   14001662f:	(bad)  
	...
   140016670:	(bad)  
   140016671:	(bad)  
   140016672:	jmp    QWORD PTR [rbx]
   140016674:	in     al,dx
   140016675:	int3   
   140016676:	xchg   edi,eax
   140016677:	(bad)  
   140016678:	clc    
   140016679:	fnsave [rdi+rax*8-0x513b1a05]
   140016680:	cli    
   140016681:	in     eax,0xc2
   140016683:	mov    cl,0xfb
   140016685:	out    0xc5,al
   140016687:	scas   al,BYTE PTR es:[rdi]
   140016688:	clc    
   140016689:	fidivr WORD PTR [rax-0x5b2a0c3b]
   14001668f:	(bad)  
   140016690:	stc    
   140016691:	fbstp  TBYTE PTR [rbx-0x40190115]
   140016697:	(bad)  
   140016698:	jmp    rdi
   14001669a:	mov    esi,0xadd1e7d5
   14001669f:	in     eax,0xa1
   1400166a1:	mov    dh,0xc0
   1400166a3:	cld    
   1400166a4:	push   0xffffffffffffffaf
   1400166a6:	in     al,dx
   1400166a7:	call   FWORD PTR [rcx-0x51]
   1400166aa:	(bad)  
   1400166ab:	call   FWORD PTR [rdx-0x50]
   1400166ae:	(bad)  
   1400166af:	call   FWORD PTR [rsi-0x51]
   1400166b2:	sti    
   1400166b3:	call   FWORD PTR [rdi-0x51]
   1400166b6:	sti    
   1400166b7:	jmp    QWORD PTR [rax-0x51]
   1400166ba:	cli    
   1400166bb:	jmp    QWORD PTR [rax-0x52]
   1400166be:	stc    
   1400166bf:	jmp    QWORD PTR [rax-0x52]
   1400166c2:	cli    
   1400166c3:	call   FWORD PTR [rdi-0x52]
   1400166c6:	cli    
   1400166c7:	call   FWORD PTR [rbx-0x53]
   1400166ca:	sti    
   1400166cb:	call   FWORD PTR [rax-0x54]
   1400166ce:	std    
   1400166cf:	jmp    QWORD PTR [rcx-0x51]
   1400166d2:	cli    
   1400166d3:	call   QWORD PTR [rax-0x2f001542]
   1400166d9:	int    0xca
   1400166db:	cli    
   1400166dc:	in     al,0xcc
   1400166de:	mov    bl,0xf2
   1400166e0:	out    dx,al
   1400166e1:	fdiv   DWORD PTR [rdi-0x40190113]
   1400166e7:	jmp    0x1400166e7
   1400166e9:	out    0xbe,al
   1400166eb:	jmp    0x1400166eb
   1400166ed:	out    0xbd,al
   1400166ef:	jmp    0x1400166ef
   1400166f1:	out    0xbd,al
   1400166f3:	jmp    0x1400166f3
   1400166f5:	out    0xbd,al
   1400166f7:	jmp    0x1400166f7
   1400166f9:	in     eax,0xbc
   1400166fb:	jmp    0x1400166fb
   1400166fd:	in     al,0xba
   1400166ff:	jmp    0x140016700
   140016701:	out    0xbe,al
   140016703:	jmp    0x136c64aff
   140016708:	loopne 0x1400166b9
   14001670a:	pop    rax
   14001670b:	(bad)  
   14001670c:	mov    edx,0xedf24593
   140016711:	shl    BYTE PTR [rsi-0x63301430],cl
   140016717:	out    0xe9,al
   140016719:	mov    esi,0x8fbaff75
   14001671e:	cmp    esp,esi
   140016720:	(bad)  
   140016721:	mov    edi,0xd3eda99b
   140016726:	movabs eax,ds:0x308fbdff79bee6ce
   14001672f:	(bad)  
	...
   140016770:	(bad)  
   140016771:	(bad)  
   140016772:	jmp    QWORD PTR [rbx+rbp*8]
   140016775:	int3   
   140016776:	xchg   edi,eax
   140016777:	push   rdi
   140016779:	fnsave [rdi+rax*8-0x513c1a05]
   140016780:	sti    
   140016781:	in     al,0xc2
   140016783:	mov    cl,0xfa
   140016785:	in     eax,0xc4
   140016787:	scas   al,BYTE PTR es:[rdi]
   140016788:	clc    
   140016789:	fidiv  WORD PTR [rdi-0x5b2a0c3b]
   14001678f:	(bad)  
   140016790:	stc    
   140016791:	fbstp  TBYTE PTR [rbx-0x421a0215]
   140016797:	(bad)  
   140016798:	std    
   140016799:	in     eax,0xbe
   14001679b:	fdivr  st,st(6)
   14001679d:	call   0x11efe3b63
   1400167a2:	scas   eax,DWORD PTR es:[rdi]
   1400167a3:	jmp    0x13fa83285
   1400167a8:	stos   DWORD PTR es:[rdi],eax
   1400167a9:	mov    ebx,0xb380fdc0
   1400167ae:	fdiv   st(7),st
   1400167b0:	imul   esi,DWORD PTR [rax-0x50a00011],0xae5bfff8
   1400167ba:	sti    
   1400167bb:	call   FWORD PTR [rbx-0x52]
   1400167be:	cld    
   1400167bf:	call   FWORD PTR [rsi+rbp*4-0x6]
   1400167c3:	jmp    QWORD PTR [rdi+rbp*4-0xa]
   1400167c7:	push   QWORD PTR [rsi-0x4c]
   1400167ca:	in     eax,dx
   1400167cb:	call   FWORD PTR [rdx-0x35012243]
   1400167d1:	retf   0xfac7
   1400167d4:	jmp    0x130f51fab
   1400167d9:	xlat   BYTE PTR ds:[rbx]
   1400167da:	mov    ch,0xed
   1400167dc:	sti    
   1400167dd:	jrcxz  0x14001679b
   1400167df:	jmp    0x1400167e0
   1400167e1:	out    0xbe,al
   1400167e3:	jmp    0x1400167e3
   1400167e5:	out    0xbd,al
   1400167e7:	jmp    0x1400167e7
   1400167e9:	in     eax,0xbd
   1400167eb:	jmp    0x1400167eb
   1400167ed:	in     eax,0xbd
   1400167ef:	jmp    0x1400167ef
   1400167f1:	in     eax,0xbc
   1400167f3:	jmp    0x1400167f3
   1400167f5:	in     al,0xbb
   1400167f7:	jmp    0x1400167f7
   1400167f9:	in     al,0xba
   1400167fb:	jmp    0x1400167fb
   1400167fd:	in     al,0xba
   1400167ff:	jmp    0x140016800
   140016801:	out    0xbd,al
   140016803:	jmp    0x136c74d00
   140016808:	loopne 0x1400167b8
   14001680a:	push   rsi
   14001680b:	(bad)  
   14001680c:	mov    ebx,0xedf34694
   140016811:	shl    BYTE PTR [rsi-0x64301430],cl
   140016817:	out    0xec,al
   140016819:	mov    DWORD PTR [rdi+0x4293bcff],0x9bbfd6f5
   140016823:	test   eax,0xcea2d3ed
   140016828:	jmp    0x10000eef2
   14001682d:	xchg   ebx,eax
   14001682e:	cmp    edi,ecx
	...
   140016870:	(bad)  
   140016871:	(bad)  
   140016872:	jmp    QWORD PTR [rbx+rbp*8]
   140016875:	int3   
   140016876:	xchg   edi,eax
   140016877:	push   rdi
   140016879:	fnsave [rbx-0x3c1a0439]
   14001687f:	scas   al,BYTE PTR es:[rdi]
   140016880:	sti    
   140016881:	in     al,0xc0
   140016883:	mov    cl,0xfb
   140016885:	in     eax,0xc4
   140016887:	scas   al,BYTE PTR es:[rdi]
   140016888:	clc    
   140016889:	fidivr WORD PTR [rax-0x5b2a0c3b]
   14001688f:	(bad)  
   140016890:	cli    
   140016891:	fbstp  TBYTE PTR [rdx-0x421b0215]
   140016897:	(bad)  
   140016898:	std    
   140016899:	in     al,0xbd
   14001689b:	fdivr  st,st(5)
   14001689d:	in     al,0xbe
   14001689f:	(bad)  
   1400168a0:	cld    
   1400168a1:	loope  0x140016859
   1400168a3:	jmp    0x13fa945a4
   1400168a8:	jmp    rdx
   1400168aa:	mov    ah,0xef
   1400168ac:	clc    
   1400168ad:	(bad)  [rcx-0x4c2d1b13]
   1400168b3:	repz ror bl,cl
   1400168b6:	mov    ebx,0xc1c8c5f6
   1400168bb:	stc    
   1400168bc:	(bad)
   1400168bf:	stc    
   1400168c0:	retf   
   1400168c1:	int3   
   1400168c2:	ret    
   1400168c3:	clc    
   1400168c4:	fst    st(3)
   1400168c6:	shl    ch,0xee
   1400168c9:	fnstcw WORD PTR [rdx-0x4822060f]
   1400168cf:	out    dx,al
   1400168d0:	sti    
   1400168d1:	loopne 0x14001688c
   1400168d3:	jmp    0x1400168d2
   1400168d5:	in     al,0xbc
   1400168d7:	(bad)  
   1400168d8:	jmp    rsi
   1400168da:	mov    esi,0xbde6ffea
   1400168df:	jmp    0x1400168df
   1400168e1:	in     eax,0xbc
   1400168e3:	jmp    0x1400168e3
   1400168e5:	in     eax,0xbc
   1400168e7:	jmp    0x1400168e7
   1400168e9:	in     al,0xbb
   1400168eb:	jmp    0x1400168eb
   1400168ed:	in     al,0xbb
   1400168ef:	jmp    0x1400168ef
   1400168f1:	in     al,0xba
   1400168f3:	jmp    0x1400168f3
   1400168f5:	in     al,0xba
   1400168f7:	jmp    0x1400168f7
   1400168f9:	in     al,0xba
   1400168fb:	jmp    0x1400168fb
   1400168fd:	in     al,0xb9
   1400168ff:	jmp    0x140016900
   140016901:	in     eax,0xbb
   140016903:	jmp    0x136cd5201
   140016908:	loope  0x1400168ba
   14001690a:	pop    rcx
   14001690b:	(bad)  
   14001690c:	mov    esp,0xeef34b96
   140016911:	shl    DWORD PTR [rax+rdx*8-0x19633015],1
   140016918:	lock shl DWORD PTR [rcx+0x4d99bfff],cl
   14001691f:	cmc    
   140016920:	(bad)  
   140016921:	mov    edi,0xd4eda89a
   140016926:	movabs ds:0x4599c1ff9aceecce,eax
   14001692f:	rol    BYTE PTR [rax],cl
	...
   14001696d:	add    BYTE PTR [rax],al
   14001696f:	add    bh,bh
   140016971:	(bad)  
   140016972:	jmp    QWORD PTR [rdx]
   140016974:	jmp    0x140016943
   140016976:	cwde   
   140016977:	push   rdi
   140016979:	fnsave [rdi+rax*8-0x513c1b05]
   140016980:	sti    
   140016981:	in     al,0xc0
   140016983:	mov    cl,0xfb
   140016985:	in     eax,0xc3
   140016987:	scas   al,BYTE PTR es:[rdi]
   140016988:	stc    
   140016989:	loopne 0x140016944
   14001698b:	shl    ebx,0xd3
   14001698e:	movabs ds:0xbde5feeeb0def9ff,al
   140016997:	(bad)  
   140016998:	(bad)  
   140016999:	in     eax,0xbd
   14001699b:	xlat   BYTE PTR ds:[rbx]
   14001699c:	(bad)  
   14001699d:	in     eax,0xbd
   14001699f:	(bad)  
   1400169a0:	std    
   1400169a1:	loop   0x14001695b
   1400169a3:	loope  0x14001699d
   1400169a5:	fisubr DWORD PTR [rcx-0x491e0203]
   1400169ab:	hlt    
   1400169ac:	jmp    rbp
   1400169ae:	mov    esp,0xbce6ffec
   1400169b3:	in     al,dx
   1400169b4:	jmp    rsi
   1400169b6:	mov    ecx,0xb9e6ffeb
   1400169bb:	jmp    0x1400169bc
   1400169bd:	out    0xb8,al
   1400169bf:	jmp    0x1400169c0
   1400169c1:	out    0xb9,al
   1400169c3:	jmp    0x1400169c4
   1400169c5:	out    0xbb,al
   1400169c7:	(bad)  
   1400169c8:	jmp    rsi
   1400169ca:	mov    esp,0xbde6ffeb
   1400169cf:	jmp    0x1400169d0
   1400169d1:	out    0xbd,al
   1400169d3:	jmp    0x1400169d4
   1400169d5:	in     eax,0xbc
   1400169d7:	in     al,dx
   1400169d8:	(bad)  
   1400169d9:	in     eax,0xbc
   1400169db:	jmp    0x1400169db
   1400169dd:	in     al,0xbc
   1400169df:	jmp    0x1400169df
   1400169e1:	in     al,0xbb
   1400169e3:	jmp    0x1400169e3
   1400169e5:	in     al,0xbb
   1400169e7:	jmp    0x1400169e7
   1400169e9:	in     al,0xba
   1400169eb:	jmp    0x1400169eb
   1400169ed:	in     al,0xba
   1400169ef:	jmp    0x1400169ef
   1400169f1:	in     al,0xba
   1400169f3:	jmp    0x1400169f3
   1400169f5:	in     al,0xba
   1400169f7:	jmp    0x1400169f8
   1400169f9:	in     al,0xb9
   1400169fb:	jmp    0x1400169fc
   1400169fd:	in     al,0xb9
   1400169ff:	jmp    0x140016a00
   140016a01:	in     eax,0xba
   140016a03:	jmp    0x136d35503
   140016a08:	in     al,0xba
   140016a0a:	outs   dx,BYTE PTR ds:[rsi]
   140016a0b:	(bad)  
   140016a0c:	mov    ebp,0xeef34f98
   140016a11:	shl    BYTE PTR [rbx-0x632f1431],1
   140016a17:	out    0xf6,al
   140016a19:	loopne 0x1400169d8
   140016a1b:	inc    ecx
   140016a1d:	lahf   
   140016a1e:	pop    rcx
   140016a1f:	cmc    
   140016a20:	sar    DWORD PTR [rax-0x2c13616f],cl
   140016a26:	movabs eax,ds:0x4d9dc3ffaed7f0c6
   140016a2f:	rol    DWORD PTR [rax],cl
	...
   140016a6d:	add    BYTE PTR [rax],al
   140016a6f:	add    bh,bh
   140016a71:	(bad)  
   140016a72:	inc    DWORD PTR [rdx+rbp*8]
   140016a75:	enter  0xff91,0xf5
   140016a79:	fisubr DWORD PTR [rdi-0x30140628]
   140016a7f:	ret    0xf1fc
   140016a82:	(bad)  
   140016a84:	sti    
   140016a85:	out    dx,eax
   140016a86:	fcmovne st,st(5)
   140016a88:	cld    
   140016a89:	out    dx,eax
   140016a8a:	fcmove st,st(5)
   140016a8c:	cli    
   140016a8d:	jmp    0x125fb525e
   140016a92:	(bad)  
   140016a93:	idiv   bl
   140016a95:	call   0x128fd5766
   140016a9a:	int    0xe9
   140016a9c:	sti    
   140016a9d:	jmp    0x129ff546e
   140016aa2:	retf   0xfae7
   140016aa5:	in     eax,0xc5
   140016aa7:	lock cli 
   140016aa9:	in     eax,0xc5
   140016aab:	hlt    
   140016aac:	cli    
   140016aad:	in     eax,0xc5
   140016aaf:	repz cli 
   140016ab1:	in     eax,0xc5
   140016ab3:	hlt    
   140016ab4:	cli    
   140016ab5:	in     al,0xc3
   140016ab7:	repnz cli 
   140016ab9:	in     al,0xc2
   140016abb:	hlt    
   140016abc:	sti    
   140016abd:	jrcxz  0x140016a7f
   140016abf:	repz cli 
   140016ac1:	loop   0x140016a83
   140016ac3:	repz cli 
   140016ac5:	jrcxz  0x140016a87
   140016ac7:	hlt    
   140016ac8:	cli    
   140016ac9:	jrcxz  0x140016a8b
   140016acb:	repz cli 
   140016acd:	jrcxz  0x140016a8f
   140016acf:	cmc    
   140016ad0:	cli    
   140016ad1:	loop   0x140016a91
   140016ad3:	repz cli 
   140016ad5:	jrcxz  0x140016a95
   140016ad7:	repz cli 
   140016ad9:	loop   0x140016a97
   140016adb:	repz cli 
   140016add:	loope  0x140016a9a
   140016adf:	repz cli 
   140016ae1:	loope  0x140016a9e
   140016ae3:	hlt    
   140016ae4:	cli    
   140016ae5:	loop   0x140016aa2
   140016ae7:	repz sti 
   140016ae9:	loop   0x140016aa6
   140016aeb:	hlt    
   140016aec:	cld    
   140016aed:	loope  0x140016aa8
   140016aef:	cmc    
   140016af0:	cld    
   140016af1:	loope  0x140016aac
   140016af3:	repz cld 
   140016af5:	loop   0x140016ab1
   140016af7:	hlt    
   140016af8:	cld    
   140016af9:	loope  0x140016ab2
   140016afb:	repnz std 
   140016afd:	loop   0x140016ab7
   140016aff:	repnz std 
   140016b01:	loopne 0x140016ab7
   140016b03:	icebp  
   140016b04:	stc    
   140016b05:	in     eax,0xc6
   140016b07:	clc    
   140016b08:	call   0x10000f0d1
   140016b0d:	pushf  
   140016b0e:	push   rbp
   140016b0f:	clc    
   140016b10:	in     eax,dx
   140016b11:	iret   
   140016b12:	movabs eax,ds:0xaed8f1efa7d5eeda
   140016b1b:	inc    ebp
   140016b1d:	movabs eax,ds:0xdbf6b39cc4defc57
   140016b26:	scas   eax,DWORD PTR es:[rdi]
   140016b27:	(bad)  
   140016b28:	call   0x13400f1f2
   140016b2d:	loopne 0x140016aee
   140016b2f:	outs   dx,DWORD PTR ds:[rsi]
	...
   140016b74:	(bad)  
   140016b75:	stos   DWORD PTR es:[rdi],eax
   140016b76:	push   0x73b3dc6b
   140016b7b:	in     al,dx
   140016b7c:	(bad)  
   140016b7d:	scas   eax,DWORD PTR es:[rdi]
   140016b7e:	outs   dx,DWORD PTR ds:[rsi]
   140016b7f:	loop   0x140016b58
   140016b81:	mov    cl,0x74
   140016b83:	loopne 0x140016b60
   140016b85:	mov    dh,0x7c
   140016b87:	loop   0x140016b65
   140016b89:	mov    eax,0xb8dce27e
   140016b8e:	jg     0x140016b72
   140016b90:	(bad)  [rsi-0x49241282]
   140016b96:	jle    0x140016b87
   140016b98:	fidivr WORD PTR [rdx-0x4020107d]
   140016b9e:	mov    ebx,esi
   140016ba0:	loop   0x140016b64
   140016ba2:	(bad)  
   140016ba3:	hlt    
   140016ba4:	jrcxz  0x140016b6a
   140016ba6:	xchg   edx,eax
   140016ba7:	repz in al,0xc4
   140016baa:	xchg   ebp,eax
   140016bab:	repz in al,0xc5
   140016bae:	xchg   ebp,eax
   140016baf:	hlt    
   140016bb0:	in     eax,0xc8
   140016bb2:	cdq    
   140016bb3:	repz out 0xcb,al
   140016bb6:	popf   
   140016bb7:	hlt    
   140016bb8:	out    0xcc,eax
   140016bba:	movabs al,ds:0xacd4edf3aad2ecf6
   140016bc3:	repz in eax,dx
   140016bc5:	(bad)  
   140016bc6:	lods   eax,DWORD PTR ds:[rsi]
   140016bc7:	hlt    
   140016bc8:	out    dx,al
   140016bc9:	(bad)  
   140016bca:	mov    cl,0xf3
   140016bcc:	out    dx,al
   140016bcd:	(bad)  
   140016bce:	mov    al,0xf7
   140016bd0:	lock fdiv DWORD PTR [rbp-0x48250f0a]
   140016bd7:	hlt    
   140016bd8:	repnz fdivr QWORD PTR [rcx-0x3e200a09]
   140016bdf:	cmc    
   140016be0:	cmc    
   140016be1:	loope  0x140016ba5
   140016be3:	hlt    
   140016be4:	cmc    
   140016be5:	loop   0x140016baa
   140016be7:	cmc    
   140016be8:	mul    bl
   140016bea:	(bad)  
   140016beb:	hlt    
   140016bec:	clc    
   140016bed:	in     al,0xc9
   140016bef:	hlt    
   140016bf0:	clc    
   140016bf1:	in     eax,0xcb
   140016bf3:	hlt    
   140016bf4:	clc    
   140016bf5:	out    0xcb,al
   140016bf7:	cmc    
   140016bf8:	clc    
   140016bf9:	call   0x12bfc61cc
   140016bfe:	shl    esp,1
   140016c00:	cli    
   140016c01:	call   0x11df562d2
   140016c06:	mov    ecx,0x9aceebff
   140016c0b:	inc    ecx
   140016c0d:	test   eax,0xbedbd582
   140016c12:	xchg   ecx,eax
   140016c13:	iret   
   140016c14:	in     eax,dx
   140016c15:	retf   
   140016c16:	xchg   ecx,eax
   140016c17:	loope  0x140016c06
   140016c19:	(bad)  
   140016c1c:	movabs eax,ds:0xec535989a6736b8c
   140016c25:	ret    
   140016c26:	jp     0x140016c81
   140016c28:	(bad)  
   140016c29:	leave  
   140016c2a:	mov    cs,WORD PTR [rax-0x7]
   140016c2d:	repnz loop 0x140016c33
	...
   140016c78:	iret   
   140016c79:	movabs ds:0x9cc829569eca195b,eax
   140016c82:	push   rbx
   140016c83:	sub    ecx,ecx
   140016c85:	popf   
   140016c86:	push   rsp
   140016c87:	xor    al,0xc9
   140016c89:	sahf   
   140016c8a:	push   rsp
   140016c8b:	cmp    cl,cl
   140016c8d:	sahf   
   140016c8e:	push   rbp
   140016c8f:	(bad)  
   140016c90:	retf   0x569f
   140016c93:	(bad)  
   140016c94:	retf   0x579f
   140016c97:	rex retf 0x579f
   140016c9b:	rex.X enter 0x559d,0x51
   140016ca0:	enter  0x559d,0x54
   140016ca4:	leave  
   140016ca5:	popf   
   140016ca6:	push   rsi
   140016ca7:	push   rsi
   140016ca8:	leave  
   140016ca9:	sahf   
   140016caa:	push   rsi
   140016cab:	(bad)  
   140016cac:	leave  
   140016cad:	lahf   
   140016cae:	push   rdi
   140016caf:	(bad)  
   140016cb0:	retf   
   140016cb1:	movabs al,ds:0xa1cb6f59a0cb6759
   140016cba:	pop    rdx
   140016cbb:	ins    DWORD PTR es:[rdi],dx
   140016cbc:	retf   0x5aa0
   140016cbf:	jl     0x140016c8b
   140016cc1:	movabs al,ds:0xa1cb815ba1ca815b
   140016cca:	pop    rsp
   140016ccb:	mov    ebx,cs
   140016ccd:	movabs ds:0xa5ce8f5fa3cc8f5d,al
   140016cd6:	movsxd ebx,DWORD PTR [rbx-0x639c5932]
   140016cdc:	int    0xa6
   140016cde:	movsxd esp,DWORD PTR [rdx-0x53995832]
   140016ce4:	(bad)  
   140016ce5:	test   al,0x67
   140016ce7:	stos   DWORD PTR es:[rdi],eax
   140016ce8:	iret   
   140016ce9:	test   eax,0xabd0ae6a
   140016cee:	ins    BYTE PTR es:[rdi],dx
   140016cef:	mov    dh,0xd0
   140016cf1:	stos   DWORD PTR es:[rdi],eax
   140016cf2:	ins    DWORD PTR es:[rdi],dx
   140016cf3:	mov    ah,0xd1
   140016cf5:	lods   eax,DWORD PTR ds:[rsi]
   140016cf6:	outs   dx,DWORD PTR ds:[rsi]
   140016cf7:	mov    ebp,0xc372aed2
   140016cfc:	shr    DWORD PTR [rsi-0x4d293a91],1
   140016d02:	jno    0x140016cc6
   140016d04:	fidiv  WORD PTR [rsi-0x522c4593]
   140016d0a:	imul   esi,DWORD PTR [rbx+0x2a],0x27
   140016d0e:	and    eax,0x3f67800e
   140016d13:	or     eax,0xf66bced
   140016d18:	cmc    
   140016d19:	(bad)  
   140016d1a:	mov    WORD PTR [rsi],es
	...
   140017b58:	(bad)  
   140017b59:	(bad)  
   140017b5a:	(bad)  
   140017b5b:	(bad)  
   140017b5c:	(bad)  
   140017b5d:	(bad)  
   140017b5e:	(bad)  
   140017b5f:	(bad)  
   140017b60:	(bad)  
   140017b61:	(bad)  
   140017b62:	(bad)  
   140017b63:	(bad)  
   140017b64:	(bad)  
   140017b65:	(bad)  
   140017b66:	(bad)  
   140017b67:	(bad)  
   140017b68:	(bad)  
   140017b69:	(bad)  
   140017b6a:	(bad)  
   140017b6b:	(bad)  
   140017b6c:	(bad)  
   140017b6d:	(bad)  
   140017b6e:	(bad)  
   140017b6f:	(bad)  
   140017b70:	(bad)  
   140017b71:	(bad)  
   140017b72:	(bad)  
   140017b73:	(bad)  
   140017b74:	cld    
   140017b75:	(bad)  
   140017b76:	(bad)  
   140017b77:	(bad)  
   140017b78:	(bad)  
   140017b79:	(bad)  
   140017b7a:	(bad)  
   140017b7b:	inc    BYTE PTR [rax]
   140017b7d:	add    edi,edi
   140017b7f:	(bad)  
   140017b80:	(bad)  
   140017b81:	(bad)  
   140017b82:	inc    DWORD PTR [rax]
   140017b84:	add    BYTE PTR [rax],al
   140017b86:	(bad)  
   140017b87:	(bad)  
   140017b88:	(bad)  
   140017b89:	inc    DWORD PTR [rax+0x7000000]
   140017b8f:	(bad)  
   140017b90:	inc    eax
   140017b92:	add    BYTE PTR [rax],al
   140017b94:	add    BYTE PTR [rax],al
   140017b96:	add    edi,edi
   140017b98:	inc    BYTE PTR [rax]
   140017b9a:	add    BYTE PTR [rax],al
   140017b9c:	add    BYTE PTR [rax],al
   140017b9e:	add    BYTE PTR [rdi-0x4],bh
   140017ba1:	add    BYTE PTR [rax],al
   140017ba3:	add    BYTE PTR [rax],al
   140017ba5:	add    BYTE PTR [rax],al
   140017ba7:	(bad)  
   140017ba8:	cld    
   140017ba9:	add    BYTE PTR [rax],al
   140017bab:	add    BYTE PTR [rax],al
   140017bad:	add    BYTE PTR [rax],al
   140017baf:	(bad)  
   140017bb0:	cld    
   140017bb1:	add    BYTE PTR [rax],al
   140017bb3:	add    BYTE PTR [rax],al
   140017bb5:	add    BYTE PTR [rax],al
   140017bb7:	add    edi,esp
   140017bb9:	add    BYTE PTR [rax],al
   140017bbb:	add    BYTE PTR [rax],al
   140017bbd:	add    BYTE PTR [rax],al
   140017bbf:	add    edi,esp
   140017bc1:	add    BYTE PTR [rax],al
   140017bc3:	add    BYTE PTR [rax],al
   140017bc5:	add    BYTE PTR [rax],al
   140017bc7:	paddb  mm0,QWORD PTR [rax]
   140017bca:	add    BYTE PTR [rax],al
   140017bcc:	add    BYTE PTR [rax],al
   140017bce:	add    edi,edi
   140017bd0:	cld    
   140017bd1:	add    BYTE PTR [rax],al
   140017bd3:	add    BYTE PTR [rax],al
   140017bd5:	add    BYTE PTR [rbx],al
   140017bd7:	(bad)  
   140017bd8:	cld    
   140017bd9:	add    BYTE PTR [rax],al
   140017bdb:	add    BYTE PTR [rax],al
   140017bdd:	add    BYTE PTR [rbx],al
   140017bdf:	(bad)  
   140017be0:	cld    
   140017be1:	add    BYTE PTR [rax],al
   140017be3:	add    BYTE PTR [rax],al
   140017be5:	add    BYTE PTR [rbx],al
   140017be7:	(bad)  
   140017be8:	cld    
   140017be9:	add    BYTE PTR [rax],al
   140017beb:	add    BYTE PTR [rax],al
   140017bed:	add    BYTE PTR [rbx],al
   140017bef:	(bad)  
   140017bf0:	cld    
   140017bf1:	add    BYTE PTR [rax],al
   140017bf3:	add    BYTE PTR [rax],al
   140017bf5:	add    BYTE PTR [rbx],al
   140017bf7:	(bad)  
   140017bf8:	cld    
   140017bf9:	add    BYTE PTR [rax],al
   140017bfb:	add    BYTE PTR [rax],al
   140017bfd:	add    BYTE PTR [rbx],al
   140017bff:	(bad)  
   140017c00:	cld    
   140017c01:	add    BYTE PTR [rax],al
   140017c03:	add    BYTE PTR [rax],al
   140017c05:	add    BYTE PTR [rbx],al
   140017c07:	(bad)  
   140017c08:	cld    
   140017c09:	add    BYTE PTR [rax],al
   140017c0b:	add    BYTE PTR [rax],al
   140017c0d:	add    BYTE PTR [rbx],al
   140017c0f:	(bad)  
   140017c10:	cld    
   140017c11:	add    BYTE PTR [rax],al
   140017c13:	add    BYTE PTR [rax],al
   140017c15:	add    BYTE PTR [rbx],al
   140017c17:	(bad)  
   140017c18:	cld    
   140017c19:	add    BYTE PTR [rax],al
   140017c1b:	add    BYTE PTR [rax],al
   140017c1d:	add    BYTE PTR [rbx],al
   140017c1f:	(bad)  
   140017c20:	cld    
   140017c21:	add    BYTE PTR [rax],al
   140017c23:	add    BYTE PTR [rax],al
   140017c25:	add    BYTE PTR [rbx],al
   140017c27:	(bad)  
   140017c28:	cld    
   140017c29:	add    BYTE PTR [rax],al
   140017c2b:	add    BYTE PTR [rax],al
   140017c2d:	add    BYTE PTR [rbx],al
   140017c2f:	(bad)  
   140017c30:	cld    
   140017c31:	add    BYTE PTR [rax],al
   140017c33:	add    BYTE PTR [rax],al
   140017c35:	add    BYTE PTR [rbx],al
   140017c37:	(bad)  
   140017c38:	cld    
   140017c39:	add    BYTE PTR [rax],al
   140017c3b:	add    BYTE PTR [rax],al
   140017c3d:	add    BYTE PTR [rbx],al
   140017c3f:	(bad)  
   140017c40:	cld    
   140017c41:	add    BYTE PTR [rax],al
   140017c43:	add    BYTE PTR [rax],al
   140017c45:	add    BYTE PTR [rbx],al
   140017c47:	(bad)  
   140017c48:	cld    
   140017c49:	add    BYTE PTR [rax],al
   140017c4b:	add    BYTE PTR [rax],al
   140017c4d:	add    BYTE PTR [rbx],al
   140017c4f:	(bad)  
   140017c50:	cld    
   140017c51:	add    BYTE PTR [rax],al
   140017c53:	add    BYTE PTR [rax],al
   140017c55:	add    BYTE PTR [rbx],al
   140017c57:	(bad)  
   140017c58:	cld    
   140017c59:	add    BYTE PTR [rax],al
   140017c5b:	add    BYTE PTR [rax],al
   140017c5d:	add    BYTE PTR [rbx],al
   140017c5f:	(bad)  
   140017c60:	cld    
   140017c61:	add    BYTE PTR [rax],al
   140017c63:	add    BYTE PTR [rax],al
   140017c65:	add    BYTE PTR [rbx],al
   140017c67:	(bad)  
   140017c68:	cld    
   140017c69:	add    BYTE PTR [rax],al
   140017c6b:	add    BYTE PTR [rax],al
   140017c6d:	add    BYTE PTR [rbx],al
   140017c6f:	(bad)  
   140017c70:	cld    
   140017c71:	add    BYTE PTR [rax],al
   140017c73:	add    BYTE PTR [rax],al
   140017c75:	add    BYTE PTR [rbx],al
   140017c77:	(bad)  
   140017c78:	cld    
   140017c79:	add    BYTE PTR [rax],al
   140017c7b:	add    BYTE PTR [rax],al
   140017c7d:	add    BYTE PTR [rbx],al
   140017c7f:	(bad)  
   140017c80:	cld    
   140017c81:	add    BYTE PTR [rax],al
   140017c83:	add    BYTE PTR [rax],al
   140017c85:	add    BYTE PTR [rbx],al
   140017c87:	(bad)  
   140017c88:	cld    
   140017c89:	add    BYTE PTR [rax],al
   140017c8b:	add    BYTE PTR [rax],al
   140017c8d:	add    BYTE PTR [rbx],al
   140017c8f:	(bad)  
   140017c90:	cld    
   140017c91:	add    BYTE PTR [rax],al
   140017c93:	add    BYTE PTR [rax],al
   140017c95:	add    BYTE PTR [rbx],al
   140017c97:	(bad)  
   140017c98:	cld    
   140017c99:	add    BYTE PTR [rax],al
   140017c9b:	add    BYTE PTR [rax],al
   140017c9d:	add    BYTE PTR [rbx],al
   140017c9f:	(bad)  
   140017ca0:	cld    
   140017ca1:	add    BYTE PTR [rax],al
   140017ca3:	add    BYTE PTR [rax],al
   140017ca5:	add    BYTE PTR [rbx],al
   140017ca7:	(bad)  
   140017ca8:	cld    
   140017ca9:	add    BYTE PTR [rax],al
   140017cab:	add    BYTE PTR [rax],al
   140017cad:	add    BYTE PTR [rbx],al
   140017caf:	(bad)  
   140017cb0:	cld    
   140017cb1:	add    BYTE PTR [rax],al
   140017cb3:	add    BYTE PTR [rax],al
   140017cb5:	add    BYTE PTR [rbx],al
   140017cb7:	(bad)  
   140017cb8:	cld    
   140017cb9:	add    BYTE PTR [rax],al
   140017cbb:	add    BYTE PTR [rax],al
   140017cbd:	add    BYTE PTR [rbx],al
   140017cbf:	(bad)  
   140017cc0:	cld    
   140017cc1:	add    BYTE PTR [rax],al
   140017cc3:	add    BYTE PTR [rax],al
   140017cc5:	add    BYTE PTR [rbx],al
   140017cc7:	(bad)  
   140017cc8:	cld    
   140017cc9:	add    BYTE PTR [rax],al
   140017ccb:	add    BYTE PTR [rax],al
   140017ccd:	add    BYTE PTR [rbx],al
   140017ccf:	(bad)  
   140017cd0:	cld    
   140017cd1:	add    BYTE PTR [rax],al
   140017cd3:	add    BYTE PTR [rax],al
   140017cd5:	add    BYTE PTR [rbx],al
   140017cd7:	(bad)  
   140017cd8:	inc    BYTE PTR [rax]
   140017cda:	add    BYTE PTR [rax],al
   140017cdc:	add    BYTE PTR [rax],al
   140017cde:	add    edi,edi
   140017ce0:	inc    DWORD PTR [rax]
   140017ce2:	add    BYTE PTR [rax],al
   140017ce4:	add    BYTE PTR [rax],al
   140017ce6:	jg     0x140017ce7
   140017ce8:	(bad)  
   140017ce9:	(bad)  
   140017cea:	(bad)  
   140017ceb:	(bad)  
   140017cec:	(bad)  
   140017ced:	(bad)  
   140017cee:	(bad)  
   140017cef:	(bad)  
   140017cf0:	(bad)  
   140017cf1:	(bad)  
   140017cf2:	(bad)  
   140017cf3:	(bad)  
   140017cf4:	(bad)  
   140017cf5:	(bad)  
   140017cf6:	(bad)  
   140017cf7:	(bad)  
   140017cf8:	(bad)  
   140017cf9:	(bad)  
   140017cfa:	(bad)  
   140017cfb:	(bad)  
   140017cfc:	(bad)  
   140017cfd:	(bad)  
   140017cfe:	(bad)  
   140017cff:	(bad)  
   140017d00:	(bad)  
   140017d01:	(bad)  
   140017d02:	(bad)  
   140017d03:	(bad)  
   140017d04:	(bad)  
   140017d05:	(bad)  
   140017d06:	(bad)  
   140017d07:	(bad)  
   140017d08:	(bad)  
   140017d09:	(bad)  
   140017d0a:	(bad)  
   140017d0b:	(bad)  
   140017d0c:	(bad)  
   140017d0d:	(bad)  
   140017d0e:	(bad)  
   140017d0f:	(bad)  
   140017d10:	(bad)  
   140017d11:	(bad)  
   140017d12:	(bad)  
   140017d13:	(bad)  
   140017d14:	(bad)  
   140017d15:	(bad)  
   140017d16:	(bad)  
   140017d17:	(bad)  
   140017d18:	(bad)  
   140017d19:	(bad)  
   140017d1a:	(bad)  
   140017d1b:	(bad)  
   140017d1c:	(bad)  
   140017d1d:	(bad)  
   140017d1e:	(bad)  
   140017d1f:	(bad)  
   140017d20:	(bad)  
   140017d21:	(bad)  
   140017d22:	(bad)  
   140017d23:	(bad)  
   140017d24:	(bad)  
   140017d25:	(bad)  
   140017d26:	(bad)  
   140017d27:	(bad)  
   140017d28:	(bad)  
   140017d29:	(bad)  
   140017d2a:	(bad)  
   140017d2b:	(bad)  
   140017d2c:	(bad)  
   140017d2d:	(bad)  
   140017d2e:	(bad)  
   140017d2f:	(bad)  
   140017d30:	(bad)  
   140017d31:	(bad)  
   140017d32:	(bad)  
   140017d33:	(bad)  
   140017d34:	(bad)  
   140017d35:	(bad)  
   140017d36:	(bad)  
   140017d37:	(bad)  
   140017d38:	(bad)  
   140017d39:	(bad)  
   140017d3a:	(bad)  
   140017d3b:	(bad)  
   140017d3c:	(bad)  
   140017d3d:	(bad)  
   140017d3e:	(bad)  
   140017d3f:	(bad)  
   140017d40:	(bad)  
   140017d41:	(bad)  
   140017d42:	(bad)  
   140017d43:	(bad)  
   140017d44:	(bad)  
   140017d45:	(bad)  
   140017d46:	(bad)  
   140017d47:	(bad)  
   140017d48:	(bad)  
   140017d49:	(bad)  
   140017d4a:	(bad)  
   140017d4b:	(bad)  
   140017d4c:	(bad)  
   140017d4d:	(bad)  
   140017d4e:	(bad)  
   140017d4f:	(bad)  
   140017d50:	(bad)  
   140017d51:	(bad)  
   140017d52:	(bad)  
   140017d53:	(bad)  
   140017d54:	(bad)  
   140017d55:	(bad)  
   140017d56:	(bad)  
   140017d57:	jmp    FWORD PTR [rax]
   140017d59:	add    BYTE PTR [rax],al
   140017d5b:	add    BYTE PTR [rax],dh
   140017d5d:	add    BYTE PTR [rax],al
   140017d5f:	add    BYTE PTR [rax+0x0],ah
   140017d62:	add    BYTE PTR [rax],al
   140017d64:	add    DWORD PTR [rax],eax
   140017d66:	and    BYTE PTR [rax],al
   140017d68:	add    BYTE PTR [rax],al
   140017d6a:	add    BYTE PTR [rax],al
   140017d6c:	and    BYTE PTR [rip+0x0],0x0        # 0x140017d73
	...
   140017de7:	add    al,BYTE PTR [rax]
   140017de9:	add    BYTE PTR [rax],al
   140017deb:	(bad)  
   140017dec:	adc    al,0x13
   140017dee:	adc    DWORD PTR [rip+0x10000000],ecx        # 0x150017df4
   140017df4:	add    BYTE PTR [rax],al
   140017df6:	add    BYTE PTR [rax+rax*1],dl
   140017df9:	add    BYTE PTR [rax],al
   140017dfb:	sbb    DWORD PTR [rax],eax
   140017dfd:	add    BYTE PTR [rax],al
   140017dff:	(bad)  
   140017e00:	or     BYTE PTR [rax],cl
   140017e02:	or     BYTE PTR [rax],ah
   140017e04:	add    BYTE PTR [rax],al
   140017e06:	add    BYTE PTR [rdi],bl
   140017e08:	add    BYTE PTR [rax],al
   140017e0a:	add    BYTE PTR [rdx],dl
   140017e0c:	add    BYTE PTR [rax],al
   140017e0e:	add    BYTE PTR [rcx],al
	...
   140017e88:	add    BYTE PTR [rax],al
   140017e8a:	add    BYTE PTR [rcx],al
   140017e8c:	add    BYTE PTR [rax],al
   140017e8e:	add    BYTE PTR [rsi],al
   140017e90:	add    BYTE PTR [rax],al
   140017e92:	add    BYTE PTR [rbx],cl
   140017e94:	add    BYTE PTR [rax],al
   140017e96:	add    BYTE PTR [rdi],cl
   140017e98:	add    BYTE PTR [rax],al
   140017e9a:	add    BYTE PTR [rbx],dl
   140017e9c:	add    BYTE PTR [rax],al
   140017e9e:	add    BYTE PTR [rcx],bl
   140017ea0:	add    BYTE PTR [rax],al
   140017ea2:	add    BYTE PTR [rip+0x210c0e0f],bl        # 0x1610d8cb7
   140017ea8:	(bad)  
   140017ea9:	adc    eax,0xd0f2211
   140017eae:	or     ah,BYTE PTR [rcx]
   140017eb0:	(bad)  
   140017eb1:	adc    al,0xf
   140017eb3:	and    ch,BYTE PTR [rcx]
   140017eb5:	and    eax,0x383f241c
   140017eba:	sub    BYTE PTR [rcx],ch
   140017ebc:	jbe    0x140017f20
   140017ebe:	ss cmp al,0x81
   140017ec1:	xor    BYTE PTR [edi+eax*1+0x6],al
   140017ec6:	add    esp,DWORD PTR [rax]
   140017ec8:	add    al,BYTE PTR [rax]
   140017eca:	add    BYTE PTR [rdi],bl
   140017ecc:	add    eax,DWORD PTR [rax]
   140017ece:	add    bl,BYTE PTR [rcx]
   140017ed0:	add    eax,DWORD PTR [rax]
   140017ed2:	add    BYTE PTR [rdi],al
	...
   140017f30:	add    BYTE PTR [rax],al
   140017f32:	add    BYTE PTR [rdx],al
   140017f34:	add    BYTE PTR [rax],al
   140017f36:	add    BYTE PTR [rdi],al
   140017f38:	add    BYTE PTR [rax],al
   140017f3a:	add    BYTE PTR [rip+0x12000000],cl        # 0x152017f40
   140017f40:	add    BYTE PTR [rax],al
   140017f42:	add    BYTE PTR [rcx],bl
   140017f44:	add    BYTE PTR [rax],al
   140017f46:	add    BYTE PTR [rsi+rax*1],bl
   140017f49:	add    eax,0xb0c2003
   140017f4e:	(bad)  
   140017f4f:	and    DWORD PTR [rsi],ecx
   140017f51:	or     al,0x3
   140017f53:	and    bl,BYTE PTR [rax]
   140017f55:	adc    al,0x5
   140017f57:	and    ebp,DWORD PTR [rdi]
   140017f59:	(bad)  
   140017f5a:	or     ch,BYTE PTR [rax]
   140017f5c:	cmp    eax,0x752a1633
   140017f61:	pop    rdi
   140017f62:	sub    al,0x3f
   140017f64:	mov    ebp,DWORD PTR [rdi+0x31]
   140017f67:	push   rcx
   140017f68:	sahf   
   140017f69:	jle    0x140017fa2
   140017f6b:	stos   BYTE PTR es:[edi],al
   140017f6d:	xchg   DWORD PTR [rdx],edi
   140017f6f:	jle    0x140017f20
   140017f71:	mov    DWORD PTR [rdx],esi
   140017f73:	lea    esi,[rsi-0x3e60c770]
   140017f79:	fwait
   140017f7a:	rex.RB mov r12d,0xc34c9ec3
   140017f80:	mov    bh,0x92
   140017f82:	cmp    BYTE PTR [rax+0x5d16536e],bh
   140017f88:	add    BYTE PTR [rax],al
   140017f8a:	add    BYTE PTR [rsi],bl
   140017f8c:	(bad)  
   140017f8d:	add    BYTE PTR [rax],al
   140017f8f:	(bad)  
   140017f90:	add    BYTE PTR [rax],al
   140017f92:	add    BYTE PTR [rdx],bl
   140017f94:	add    eax,DWORD PTR [rcx]
   140017f96:	add    cl,BYTE PTR [rip+0x0]        # 0x140017f9c
	...
   140017fd8:	add    BYTE PTR [rax],al
   140017fda:	add    BYTE PTR [rcx],al
   140017fdc:	add    BYTE PTR [rax],al
   140017fde:	add    BYTE PTR [rip+0x8000000],al        # 0x148017fe4
   140017fe4:	or     al,0xa
   140017fe6:	add    dl,BYTE PTR [rax]
   140017fe8:	or     DWORD PTR [rdi],eax
   140017fea:	add    edx,DWORD PTR [rdi]
   140017fec:	adc    eax,0x71e0b12
   140017ff1:	(bad)  
   140017ff2:	add    al,0x1f
   140017ff4:	(bad)  
   140017ff6:	add    esp,DWORD PTR [rdx]
   140017ff8:	adc    edx,DWORD PTR [rax]
   140017ffa:	add    al,0x23
   140017ffc:	(bad)  
   140017ffd:	sbb    DWORD PTR [rsi],eax
   140017fff:	and    al,0x34
   140018001:	sub    ecx,DWORD PTR [rbx]
   140018003:	sub    ah,BYTE PTR [rbp+0x52]
   140018006:	and    BYTE PTR [rax],bh
   140018008:	nop
   140018009:	jne    0x14001803f
   14001800b:	push   rbp
   14001800c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001800d:	test   BYTE PTR [rip+0x3687a96d],bh        # 0x176892980
   140018013:	(bad)  
   140018014:	mov    bl,0x8d
   140018016:	(bad)  
   140018017:	xchg   ebp,eax
   140018018:	mov    ebp,0xc2ae4498
   14001801d:	popf   
   14001801e:	rex.W ret 0xa0c5
   140018022:	rex.WRX leave 
   140018024:	(bad)  
   140018025:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018026:	push   rsp
   140018027:	(bad)  
   140018028:	retf   0x5ba8
   14001802b:	rcl    al,1
   14001802d:	mov    al,0x67
   14001802f:	fcom   st(7)
   140018031:	mov    ecx,0xc4e0e077
   140018036:	mov    eax,ebp
   140018038:	out    0xcf,eax
   14001803a:	cwde   
   14001803b:	in     al,dx
   14001803c:	jmp    0x12fef1c11
   140018041:	fdiv   QWORD PTR [rbx+0x399bc7ef]
   140018047:	jmp    rax
   140018049:	mov    eax,0x308c65a
   14001804e:	add    DWORD PTR [rdi],esp
   140018050:	add    DWORD PTR [rax],eax
   140018052:	add    BYTE PTR [rip+0x1b050402],bl        # 0x15b06845a
   140018058:	add    al,BYTE PTR [rcx]
   14001805a:	add    DWORD PTR [rax],edx
   14001805c:	(bad)  
   14001805d:	add    BYTE PTR [rcx],al
   14001805f:	add    al,0x0
	...
   14001808d:	add    BYTE PTR [rax],al
   14001808f:	add    BYTE PTR [rsp+rdx*2+0x28],ah
   140018093:	add    al,0x25
   140018095:	(bad)  
   140018096:	adc    DWORD PTR [rbx],ecx
   140018098:	prefetch BYTE PTR [rsp+rdx*1]
   14001809c:	sbb    edx,DWORD PTR [rsi]
   14001809e:	(bad)  
   14001809f:	(bad)  
   1400180a0:	sub    eax,0x4b280a25
   1400180a5:	(bad)  
   1400180a6:	(bad)  
   1400180a7:	(bad)  
   1400180a8:	outs   dx,BYTE PTR ds:[rsi]
   1400180a9:	pop    rbx
   1400180aa:	sub    edi,DWORD PTR [rbx]
   1400180ac:	xchg   esi,eax
   1400180ad:	jnp    0x1400180ea
   1400180af:	pop    rbx
   1400180b0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400180b1:	xchg   DWORD PTR [rcx+0x72],eax
   1400180b4:	stos   BYTE PTR es:[rdi],al
   1400180b5:	xchg   DWORD PTR [rdi],esi
   1400180b7:	(bad)  
   1400180b8:	mov    ah,0x90
   1400180ba:	cmp    eax,0x4598bd96
   1400180bf:	scas   al,BYTE PTR es:[rdi]
   1400180c0:	rcr    DWORD PTR [rbp-0x613b3cb8],0x4a
   1400180c7:	(bad)  
   1400180c8:	leave  
   1400180c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400180ca:	push   rsi
   1400180cb:	(bad)  
   1400180cc:	iret   
   1400180cd:	scas   al,BYTE PTR es:[rdi]
   1400180ce:	movsxd ebx,esi
   1400180d0:	xlat   BYTE PTR ds:[rbx]
   1400180d1:	mov    eax,0xc1dee672
   1400180d6:	sub    bh,0xe3
   1400180d9:	(bad)  
   1400180da:	mov    esi,ecx
   1400180dc:	out    0xce,eax
   1400180de:	xchg   esi,eax
   1400180df:	out    dx,al
   1400180e0:	in     eax,0xce
   1400180e2:	cwde   
   1400180e3:	call   0x122964bc9
   1400180e8:	(bad)  
   1400180ea:	nop
   1400180eb:	(bad)  
   1400180ed:	(bad)  
   1400180ee:	nop
   1400180ef:	(bad)  
   1400180f0:	faddp  st(7),st
   1400180f2:	xchg   ecx,eax
   1400180f3:	rcr    ebp,cl
   1400180f5:	(bad)  
   1400180f6:	xchg   ecx,eax
   1400180f7:	rcr    bl,1
   1400180f9:	ret    
   1400180fa:	mov    edx,edx
   1400180fc:	fld    st(0)
   1400180fe:	xchg   ebx,edx
   140018100:	out    dx,eax
   140018101:	fnsave [rsi+0x3599c7e8]
   140018107:	(bad)  
   140018108:	mov    esi,0xbefc3597
   14001810d:	xchg   ecx,eax
   14001810e:	sub    al,0xfe
   140018110:	retf   
   140018111:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018112:	push   rax
   140018113:	test   DWORD PTR [rax],ecx
   140018115:	add    al,BYTE PTR [rsi+rbx*1]
   140018118:	add    DWORD PTR [rax],eax
   14001811a:	add    BYTE PTR [rdx],bl
   14001811c:	or     DWORD PTR [rbx],eax
   14001811e:	add    DWORD PTR [rdx],edx
   140018120:	or     BYTE PTR [rdx],al
   140018122:	(bad)  
   140018123:	or     BYTE PTR [rax],al
	...
   140018145:	add    BYTE PTR [rax],al
   140018147:	add    BYTE PTR [rsi+0x74012683],bl
   14001814d:	pop    rbp
   14001814e:	and    al,0x20
   140018150:	xchg   ebp,eax
   140018151:	js     0x140018187
   140018153:	push   rax
   140018154:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018155:	test   BYTE PTR [rcx],bh
   140018157:	ins    DWORD PTR es:[rdi],dx
   140018158:	stos   BYTE PTR es:[rdi],al
   140018159:	xchg   BYTE PTR [rbx],dh
   14001815b:	test   BYTE PTR [rcx-0x415fbb6b],bh
   140018161:	fwait
   140018162:	rex.RXB mov r15b,0xc2
   140018165:	sahf   
   140018166:	rex.WX int3 
   140018168:	(bad)  
   140018169:	movabs eax,ds:0xafd1df59a9cbda4f
   140018172:	in     ax,0xd8
   140018175:	mov    ecx,0xbedcea73
   14001817a:	jle    0x140018164
   14001817c:	faddp  st(2),st
   14001817e:	test   edi,esp
   140018180:	loope  0x140018149
   140018182:	(bad)  
   140018183:	in     eax,0xe7
   140018185:	rcr    BYTE PTR [rbp-0x602e1820],1
   14001818b:	fsubrp st(5),st
   14001818d:	(bad)  
   14001818e:	pushf  
   14001818f:	fnclex 
   140018191:	retf   
   140018192:	cwde   
   140018193:	xlat   BYTE PTR ds:[rbx]
   140018194:	fmulp  st(0),st
   140018196:	xchg   ebx,eax
   140018197:	(bad)  
   140018198:	ffree  st(6)
   14001819a:	nop
   14001819b:	rcr    esi,cl
   14001819d:	(bad)  
   14001819e:	xchg   ecx,eax
   14001819f:	(bad)  
   1400181a0:	faddp  st(6),st
   1400181a2:	(bad)  
   1400181a3:	fcmovnu st,st(7)
   1400181a5:	(bad)  
   1400181a6:	nop
   1400181a7:	loope  0x140018189
   1400181a9:	(bad)  
   1400181aa:	mov    fs,ebp
   1400181ac:	ffreep st(6)
   1400181ae:	(bad)  
   1400181af:	out    0xde,al
   1400181b1:	(bad)  
   1400181b2:	mov    esp,edi
   1400181b4:	ffree  st(4)
   1400181b6:	mov    ah,dh
   1400181b8:	faddp  st(5),st
   1400181ba:	(bad)  
   1400181bb:	out    0xdc,al
   1400181bd:	ret    
   1400181be:	mov    ebx,esp
   1400181c0:	out    dx,eax
   1400181c1:	fdiv   QWORD PTR [rbp+rbp*8-0xca6639]
   1400181c8:	loope  0x140018186
   1400181ca:	ja     0x1400181bd
   1400181cc:	repnz fdiv QWORD PTR [rax+0x157caaf1]
   1400181d3:	(bad)  
   1400181d4:	mov    edx,0xacb9559b
   1400181d9:	xchg   ebp,eax
   1400181da:	imul   esi,DWORD PTR fs:[rdi],0x2e
   1400181de:	sbb    eax,DWORD PTR ss:[rdx]
   1400181e1:	(bad)  
   1400181e2:	add    edx,DWORD PTR [rdx]
   1400181e4:	rex.WRXB
   1400181e5:	rex.W push rdx
   1400181e7:	(bad)  
   1400181e8:	lods   al,BYTE PTR ds:[rsi]
   1400181e9:	(bad)  
   1400181ea:	scas   al,BYTE PTR es:[rdi]
   1400181eb:	add    DWORD PTR [rax],eax
	...
   140018205:	add    BYTE PTR [rax],al
   140018207:	add    dl,dl
   140018209:	ret    0x2690
   14001820c:	(bad)  
   14001820d:	movabs ds:0xaaccd751a3c7b352,eax
   140018216:	pop    rbp
   140018217:	(bad)  
   140018219:	mov    bl,0x6b
   14001821b:	loope  0x1400181f6
   14001821d:	mov    ebx,0xc6e2e779
   140018222:	mov    ecx,ebp
   140018224:	in     eax,0xcb
   140018226:	xchg   esp,eax
   140018227:	(bad)  
   140018228:	out    0xcd,al
   14001822a:	cwde   
   14001822b:	out    0xe4,al
   14001822d:	int    0x99
   14001822f:	(bad)  
   140018231:	int    0x9a
   140018233:	(bad)  
   140018234:	loop   0x140018202
   140018236:	cdq    
   140018237:	(bad)  
   140018238:	loop   0x140018206
   14001823a:	cdq    
   14001823b:	shl    edx,cl
   14001823d:	retf   
   14001823e:	cwde   
   14001823f:	(bad)  
   140018240:	loop   0x14001820c
   140018242:	xchg   edi,eax
   140018243:	(bad)  
   140018244:	loopne 0x14001820f
   140018246:	xchg   ebx,eax
   140018247:	(bad)  
   140018249:	(bad)  
   14001824a:	xchg   ecx,eax
   14001824b:	fucom  st(0)
   14001824d:	enter  0xe091,0xe1
   140018251:	leave  
   140018252:	xchg   edx,eax
   140018253:	in     al,0xe3
   140018255:	retf   0xe794
   140018258:	jrcxz  0x140018224
   14001825a:	xchg   esp,eax
   14001825b:	call   0x128944c42
   140018260:	loopne 0x14001822a
   140018262:	nop
   140018263:	out    0xe0,al
   140018265:	(bad)  
   140018266:	(bad)  
   140018267:	in     al,0xdf
   140018269:	(bad)  
   14001826a:	mov    fs,ebx
   14001826c:	faddp  st(5),st
   14001826e:	mov    esp,fs
   140018270:	ffreep st(6)
   140018272:	(bad)  
   140018273:	in     eax,0xdf
   140018275:	(bad)
   140018278:	ffreep st(5)
   14001827a:	mov    ecx,gs
   14001827c:	fcmovnb st,st(1)
   14001827e:	xchg   cl,ch
   140018280:	out    dx,al
   140018281:	fdiv   QWORD PTR [rbx+0x3599c7f3]
   140018287:	(bad)  
   140018288:	fistp  QWORD PTR [rbx-0x240f168a]
   14001828e:	mov    cl,0xef
   140018290:	test   eax,0xb9ff157b
   140018295:	lea    ebp,[rdx]
   140018297:	idiv   DWORD PTR [rax+rdx*4-0x382009d2]
   14001829e:	xchg   ebx,eax
   14001829f:	scas   eax,DWORD PTR es:[rdi]
   1400182a0:	ja     0x140018310
   1400182a2:	push   0x1314133d
   1400182a7:	(bad)  
   1400182a8:	sub    al,0x33
   1400182aa:	(bad)  
   1400182ab:	add    eax,0x0
	...
   1400182c8:	shl    DWORD PTR [rbp-0x4227438f],cl
   1400182ce:	jl     0x1400182ad
   1400182d0:	out    0xcf,eax
   1400182d2:	pushf  
   1400182d3:	retf   0xd1e8
   1400182d6:	movabs eax,ds:0xa2d0e5bea5d3e9c3
   1400182df:	mov    edi,0xc99bcce3
   1400182e4:	jrcxz  0x1400182b3
   1400182e6:	(bad)  
   1400182e7:	shl    bl,1
   1400182e9:	int    0x99
   1400182eb:	xlat   BYTE PTR ds:[rbx]
   1400182ec:	jrcxz  0x1400182ba
   1400182ee:	xchg   edi,eax
   1400182ef:	(bad)  
   1400182f1:	retf   0xe394
   1400182f4:	loope  0x1400182bf
   1400182f6:	xchg   edx,eax
   1400182f7:	in     al,0xe8
   1400182f9:	rcr    DWORD PTR [rbp-0x5e2a1419],1
   1400182ff:	jmp    0x129a558f0
   140018304:	out    dx,al
   140018305:	xlat   BYTE PTR ds:[rbx]
   140018306:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018307:	call   0x125a759f8
   14001830c:	jmp    0x1400182e3
   14001830e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001830f:	loopne 0x1400182f9
   140018311:	rcr    BYTE PTR [rdi-0x67321a21],cl
   140018317:	in     eax,0xe3
   140018319:	retf   
   14001831a:	xchg   ebp,eax
   14001831b:	out    0xe4,al
   14001831d:	int3   
   14001831e:	xchg   edi,eax
   14001831f:	out    0xe3,eax
   140018321:	retf   0xeb93
   140018324:	loop   0x1400182ef
   140018326:	xchg   ecx,eax
   140018327:	out    dx,al
   140018328:	loop   0x1400182f2
   14001832a:	(bad)  
   14001832b:	lock loop 0x1400182f5
   14001832e:	(bad)  
   14001832f:	icebp  
   140018330:	loopne 0x1400182f9
   140018332:	mov    ecx,?
   140018334:	ffreep st(6)
   140018336:	mov    ebp,edi
   140018338:	faddp  st(5),st
   14001833a:	mov    ebp,esi
   14001833c:	fadd   st(3),st
   14001833e:	xchg   ebx,ebp
   140018340:	out    dx,al
   140018341:	fdiv   QWORD PTR [rbx+0x399dcaf2]
   140018347:	(bad)  
   140018348:	fistp  QWORD PTR [rbx-0x240e1589]
   14001834e:	mov    cl,0xf0
   140018350:	scas   al,BYTE PTR es:[rdi]
   140018351:	jg     0x140018369
   140018353:	dec    esi
   140018355:	test   eax,0xdbece862
   14001835a:	mov    ch,0xe6
   14001835c:	mov    ebp,0xacec3594
   140018361:	xchg   ebx,eax
   140018362:	pop    rcx
   140018363:	or     ecx,DWORD PTR gs:[rip+0x1313150c]        # 0x153149876
   14001836a:	and    BYTE PTR [rdi],cl
   14001836c:	and    ebp,DWORD PTR cs:[rip+0x7]        # 0x14001837a
	...
   140018387:	add    al,dl
   140018389:	mov    cl,0x69
   14001838b:	jmp    rbx
   14001838d:	int    0x98
   14001838f:	mov    esp,0xa1b7def0
   140018394:	out    dx,al
   140018395:	fdiv   QWORD PTR [rbx-0x48211053]
   14001839b:	scas   al,BYTE PTR es:[rdi]
   14001839c:	out    0xce,al
   14001839e:	(bad)  
   14001839f:	fcmovnu st,st(7)
   1400183a1:	(bad)  
   1400183a2:	mov    esi,ebp
   1400183a4:	(bad)  
   1400183a5:	shl    DWORD PTR [rdx-0x5c2b1623],cl
   1400183ab:	fld1   
   1400183ad:	shl    DWORD PTR [rsp+rdx*8-0x254f220e],cl
   1400183b4:	cli    
   1400183b5:	in     al,0xb8
   1400183b7:	in     eax,dx
   1400183b8:	(bad)  
   1400183b9:	(bad)  
   1400183ba:	mov    dl,0xf6
   1400183bc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400183bd:	mov    bh,0xc6
   1400183bf:	cli    
   1400183c0:	lea    ebp,[rax-0x5d84001c]
   1400183c6:	idiv   edi
   1400183c8:	nop
   1400183c9:	stos   BYTE PTR es:[rdi],al
   1400183ca:	out    0xff,al
   1400183cc:	movabs al,ds:0xf1fbc5cfd2fedab3
   1400183d5:	fnsave [rbx-0x602b1406]
   1400183db:	repz in eax,0xcd
   1400183de:	xchg   ebp,eax
   1400183df:	in     al,dx
   1400183e0:	in     al,0xcc
   1400183e2:	xchg   ebp,eax
   1400183e3:	call   0x1279c53cf
   1400183e8:	in     al,0xcc
   1400183ea:	xchg   edi,eax
   1400183eb:	out    0xe3,eax
   1400183ed:	retf   
   1400183ee:	xchg   esi,eax
   1400183ef:	out    0xe3,al
   1400183f1:	retf   0xe694
   1400183f4:	loop   0x1400183c0
   1400183f6:	xchg   edx,eax
   1400183f7:	out    0xe2,al
   1400183f9:	retf   0xe692
   1400183fc:	ffreep st(7)
   1400183fe:	mov    fs,ebp
   140018400:	icebp  
   140018401:	fidiv  WORD PTR [rsi+0x399dcaf0]
   140018407:	(bad)  
   140018408:	fistp  QWORD PTR [rbx-0x240e1589]
   14001840e:	mov    cl,0xf0
   140018410:	mov    ch,0x86
   140018412:	sbb    al,0xff
   140018414:	shr    DWORD PTR [rsi-0x22111a99],1
   14001841a:	mov    ecx,0x2a90bee3
   14001841f:	(bad)  
   140018420:	mov    esi,0x26265a3
   140018425:	or     eax,DWORD PTR [rsi+rdx*1]
   140018428:	adc    DWORD PTR [rdi],ecx
   14001842a:	adc    dl,BYTE PTR [rdx]
   14001842c:	(bad)  
   14001842d:	sbb    BYTE PTR [rcx],bl
   14001842f:	or     al,0x29
   140018431:	sub    DWORD PTR [rcx],ebp
   140018433:	(bad)  
	...
   140018448:	(bad)  
   140018449:	mov    al,0x65
   14001844b:	jmp    rdi
   14001844d:	rcr    BYTE PTR [rdi-0x4b221046],1
   140018453:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018454:	out    dx,al
   140018455:	fdiv   QWORD PTR [rbx-0x49210f51]
   14001845b:	mov    dl,0xe0
   14001845d:	(bad)  
   14001845e:	mov    ecx,gs
   140018460:	loopne 0x140018428
   140018462:	mov    ebp,fs
   140018464:	jmp    0x14001843c
   140018466:	stos   BYTE PTR es:[rdi],al
   140018467:	int3   
   140018468:	repnz fidiv WORD PTR [rdx-0x461a032d]
   14001846f:	jmp    0x140018434
   140018471:	(bad)
   140018474:	ins    DWORD PTR es:[rdi],dx
   140018475:	(bad)  
   140018476:	out    0xfc,eax
   140018478:	rex.RB xor r9d,0xf5722ffd
   14001847f:	jmp    QWORD PTR [rsi]
   140018481:	push   0xfffffffffffffff4
   140018483:	jmp    QWORD PTR [rcx+rbp*2]
   140018486:	repnz jmp FWORD PTR [rdi]
   140018489:	jo     0x14001847f
   14001848b:	push   QWORD PTR [rsi]
   14001848d:	jne    0x140018483
   14001848f:	dec    DWORD PTR [rdx-0x7f]
   140018492:	hlt    
   140018493:	(bad)  
   140018494:	addr32 xchg ebp,eax
   140018496:	hlt    
   140018497:	(bad)  
   140018498:	sahf   
   140018499:	mov    ah,0xdc
   14001849b:	(bad)  
   14001849c:	jrcxz  0x140018470
   14001849e:	lods   eax,DWORD PTR ds:[rsi]
   14001849f:	cli    
   1400184a0:	(bad)  
   1400184a1:	rcr    DWORD PTR [rbp-0x7239200f],cl
   1400184a7:	out    0xe8,eax
   1400184a9:	rcr    BYTE PTR [rsi-0x6531191d],1
   1400184af:	in     eax,0xe5
   1400184b1:	int3   
   1400184b2:	cwde   
   1400184b3:	in     eax,0xe4
   1400184b5:	int3   
   1400184b6:	xchg   esi,eax
   1400184b7:	in     eax,0xe3
   1400184b9:	retf   
   1400184ba:	xchg   ebp,eax
   1400184bb:	in     eax,0xe0
   1400184bd:	leave  
   1400184be:	xchg   ecx,eax
   1400184bf:	in     al,0xf2
   1400184c1:	loopne 0x14001847b
   1400184c3:	out    dx,al
   1400184c4:	int    0x9e
   1400184c6:	cmp    bh,bh
   1400184c8:	fistp  QWORD PTR [rbx-0x240e1589]
   1400184ce:	mov    cl,0xf0
   1400184d0:	mov    ecx,0xd2ff228a
   1400184d5:	lods   eax,DWORD PTR ds:[rsi]
   1400184d6:	in     ax,0xef
   1400184d9:	fistp  QWORD PTR [rbx+0x3095c3e2]
   1400184df:	std    
   1400184e0:	retf   0x6eaf
   1400184e3:	pop    rsp
   1400184e4:	or     BYTE PTR [rax],cl
   1400184e6:	or     BYTE PTR [rsi],cl
   1400184e8:	adc    DWORD PTR [rax],edx
   1400184ea:	(bad)  
   1400184eb:	movups XMMWORD PTR [rip+0x18190e22],xmm2        # 0x1581a9314
   1400184f2:	(bad)  
   1400184f3:	or     edi,DWORD PTR [rcx]
   1400184f5:	xor    eax,0x5884042b
   1400184fa:	cmp    DWORD PTR [rcx],eax
	...
   140018508:	(bad)  
   140018509:	mov    al,0x65
   14001850b:	jmp    rbp
   14001850d:	iret   
   14001850e:	sahf   
   14001850f:	mov    ebp,0xa8b5ddef
   140018514:	out    dx,eax
   140018515:	fdiv   QWORD PTR [rbx-0x48210f4f]
   14001851b:	mov    bl,0xdf
   14001851d:	(bad)
   140018520:	faddp  st(4),st
   140018522:	mov    ecx,fs
   140018524:	cmc    
   140018525:	loopne 0x1400184db
   140018527:	fldl2t 
   140018529:	fnstenv [rax-0x30597f12]
   14001852f:	clc    
   140018530:	(bad)  
   140018531:	jp     0x140018523
   140018533:	std    
   140018534:	outs   dx,DWORD PTR es:[rsi]
   140018536:	lock jmp QWORD PTR [rsi]
   140018539:	outs   dx,BYTE PTR ds:[rsi]
   14001853a:	icebp  
   14001853b:	jmp    QWORD PTR [rsi]
   14001853d:	ins    DWORD PTR es:[rdi],dx
   14001853e:	icebp  
   14001853f:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x1660176b1
   140018545:	ins    BYTE PTR es:[rdi],dx
   140018546:	icebp  
   140018547:	jmp    QWORD PTR [rip+0x25fff16b]        # 0x1660176b8
   14001854d:	push   0xfffffffffffffff1
   14001854f:	jmp    QWORD PTR [rdx+rbp*2]
   140018552:	icebp  
   140018553:	jmp    QWORD PTR [rip+0x3efff069]        # 0x17f0175c2
   140018559:	jnp    0x14001854c
   14001855b:	(bad)  
   14001855c:	push   0xffffffffb8feed96
   140018561:	mov    edi,0xd0e8fdc7
   140018566:	fwait
   140018567:	hlt    
   140018568:	fadd   st(3),st
   14001856a:	xchg   ecx,ebp
   14001856c:	out    0xd1,eax
   14001856e:	sahf   
   14001856f:	jrcxz  0x140018557
   140018571:	(bad)  
   140018572:	(bad)  
   140018573:	in     al,0xe5
   140018575:	int    0x99
   140018577:	in     al,0xe4
   140018579:	int3   
   14001857a:	xchg   edi,eax
   14001857b:	in     al,0xe1
   14001857d:	retf   0xe394
   140018580:	repnz loopne 0x14001853c
   140018583:	in     eax,dx
   140018584:	int    0x9e
   140018586:	cmp    bh,bh
   140018588:	fistp  QWORD PTR [rbx-0x240e1589]
   14001858e:	mov    cl,0xf0
   140018590:	mov    esp,0xd4ff268e
   140018595:	scas   al,BYTE PTR es:[rdi]
   140018596:	in     ax,0xf2
   140018599:	loope  0x140018559
   14001859b:	loopne 0x140018561
   14001859d:	xchg   edi,eax
   14001859e:	xor    bh,ch
   1400185a0:	(bad)  
   1400185a1:	mov    ch,0x71
   1400185a3:	push   rdi
   1400185a4:	sub    al,0xc
   1400185a6:	adc    DWORD PTR [rip+0x81e0a1e],eax        # 0x1481f8fca
   1400185ac:	and    DWORD PTR [rcx],ebx
   1400185ae:	and    DWORD PTR [rax],ecx
   1400185b0:	(bad)  
   1400185b1:	es (bad) 
   1400185b3:	(bad)  
   1400185b4:	sub    esi,DWORD PTR [rax]
   1400185b6:	xor    al,0x7
   1400185b8:	outs   dx,BYTE PTR ds:[rsi]
   1400185b9:	xor    dh,BYTE PTR [rbx]
   1400185bb:	add    eax,ebp
   1400185bd:	lods   eax,DWORD PTR ds:[rsi]
   1400185be:	movabs eax,ds:0x1
   1400185c7:	add    dh,cl
   1400185c9:	mov    al,0x65
   1400185cb:	jmp    rbp
   1400185cd:	iret   
   1400185ce:	sahf   
   1400185cf:	mov    ebp,0xaab6deef
   1400185d4:	out    dx,eax
   1400185d5:	fdiv   QWORD PTR [rbx-0x48200f4f]
   1400185db:	mov    ch,0xdb
   1400185dd:	mov    esi,0xcfe9e683
   1400185e2:	(bad)  
   1400185e3:	(bad)  
   1400185e4:	fmulp  st(7),st
   1400185e6:	stos   DWORD PTR es:[rdi],eax
   1400185e7:	repz push rdi
   1400185e9:	nop
   1400185ea:	loopne 0x1400185e6
   1400185ec:	xor    bh,BYTE PTR [rax-0xf]
   1400185ef:	(bad)  
   1400185f0:	(bad)  
   1400185f1:	jno    0x1400185e5
   1400185f3:	jmp    QWORD PTR [rdi]
   1400185f5:	jo     0x1400185e9
   1400185f7:	jmp    QWORD PTR [rsi]
   1400185f9:	outs   dx,DWORD PTR ds:[rsi]
   1400185fa:	bnd jmp QWORD PTR [rip+0x25fff26e]        # 0x16601786f
   140018601:	outs   dx,BYTE PTR ds:[rsi]
   140018602:	icebp  
   140018603:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x166017776
   140018609:	ins    DWORD PTR es:[rdi],dx
   14001860a:	icebp  
   14001860b:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x16601777e
   140018611:	ins    BYTE PTR es:[rdi],dx
   140018612:	icebp  
   140018613:	jmp    QWORD PTR [rip+0x25fff16b]        # 0x166017784
   140018619:	imul   esi,ecx,0xffffffff
   14001861c:	and    ebp,DWORD PTR [rax-0x10]
   14001861f:	dec    DWORD PTR [rbx+rax*4-0xf]
   140018623:	(bad)  
   140018624:	popf   
   140018625:	mov    dl,0xd4
   140018627:	cld    
   140018628:	in     al,0xcf
   14001862a:	popf   
   14001862b:	not    esp
   14001862d:	mov    eax,0xd1e8ea77
   140018632:	lahf   
   140018633:	jrcxz  0x14001861a
   140018635:	(bad)  
   140018636:	cdq    
   140018637:	in     al,0xe5
   140018639:	int    0x98
   14001863b:	in     al,0xe1
   14001863d:	retf   0xe394
   140018640:	repnz loopne 0x1400185fd
   140018643:	in     eax,dx
   140018644:	int    0x9e
   140018646:	cmp    bh,bh
   140018648:	fistp  QWORD PTR [rbx-0x240e1589]
   14001864e:	mov    cl,0xf0
   140018650:	ret    
   140018651:	xchg   esp,eax
   140018652:	cs call rbp
   140018655:	mov    al,0x67
   140018657:	in     eax,0xf1
   140018659:	loope  0x140018618
   14001865b:	loopne 0x14001862b
   14001865d:	lahf   
   14001865e:	cmp    edi,edi
   140018660:	(bad)  
   140018661:	mov    eax,0x5774
	...
   140018672:	add    BYTE PTR [rax],al
   140018674:	rex.W outs dx,DWORD PTR ds:[rsi]
   140018676:	and    eax,DWORD PTR [rbx]
   140018678:	and    dh,BYTE PTR [rdi+0x77]
   14001867b:	add    eax,DWORD PTR [rax]
	...
   140018685:	add    BYTE PTR [rax],al
   140018687:	add    dh,cl
   140018689:	mov    al,0x65
   14001868b:	jmp    rbp
   14001868d:	iret   
   14001868e:	sahf   
   14001868f:	mov    ebp,0xaab6deef
   140018694:	out    dx,eax
   140018695:	fdiv   QWORD PTR [rdx+rsi*4-0x4c4a2312]
   14001869c:	jmp    0x14001866f
   14001869e:	sahf   
   14001869f:	out    0xe1,eax
   1400186a1:	int3   
   1400186a2:	movabs ds:0xf1752afbe18a4ff8,eax
   1400186ab:	jmp    QWORD PTR [rbx]
   1400186ad:	jo     0x1400186a1
   1400186af:	call   QWORD PTR [rcx]
   1400186b1:	gs icebp 
   1400186b3:	call   QWORD PTR [rdx]
   1400186b5:	fs icebp 
   1400186b7:	call   QWORD PTR [rip+0x22fff266]        # 0x163017923
   1400186bd:	ins    BYTE PTR es:[rdi],dx
   1400186be:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166017934
   1400186c5:	outs   dx,DWORD PTR ds:[rsi]
   1400186c6:	bnd jmp QWORD PTR [rsi]
   1400186c9:	outs   dx,DWORD PTR ds:[rsi]
   1400186ca:	icebp  
   1400186cb:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x16601783f
   1400186d1:	outs   dx,BYTE PTR ds:[rsi]
   1400186d2:	bnd jmp QWORD PTR [rsi]
   1400186d5:	ins    DWORD PTR es:[rdi],dx
   1400186d6:	bnd jmp QWORD PTR [rip+0x25fff16c]        # 0x166017849
   1400186dd:	ins    BYTE PTR es:[rdi],dx
   1400186de:	icebp  
   1400186df:	jmp    QWORD PTR [rdi]
   1400186e1:	ins    DWORD PTR es:[rdi],dx
   1400186e2:	icebp  
   1400186e3:	dec    DWORD PTR [rcx-0x7e]
   1400186e6:	out    dx,eax
   1400186e7:	(bad)  
   1400186e8:	cdq    
   1400186e9:	mov    bl,0xe5
   1400186eb:	(bad)  
   1400186ec:	jmp    0x118fa26c3
   1400186f1:	mov    esi,0xd0e7e97f
   1400186f6:	popf   
   1400186f7:	jrcxz  0x1400186de
   1400186f9:	int    0x98
   1400186fb:	in     al,0xe2
   1400186fd:	retf   
   1400186fe:	xchg   esp,eax
   1400186ff:	jrcxz  0x1400186f3
   140018701:	loopne 0x1400186bd
   140018703:	in     eax,dx
   140018704:	iret   
   140018705:	movabs eax,ds:0xdbf1ea77bbdfff3d
   14001870e:	mov    cl,0xf0
   140018710:	(bad)  
   140018711:	cdq    
   140018712:	xor    eax,0x67b0d5ff
   140018717:	in     eax,0xf0
   140018719:	loopne 0x1400186d8
   14001871b:	loopne 0x1400186eb
   14001871d:	lahf   
   14001871e:	cmp    bh,bh
   140018720:	fstp   TBYTE PTR [rbp+0x547d]
	...
   140018746:	add    BYTE PTR [rax],al
   140018748:	(bad)  
   140018749:	mov    al,0x65
   14001874b:	jmp    rsi
   14001874d:	iret   
   14001874e:	sahf   
   14001874f:	mov    esi,0xaab6deef
   140018754:	out    dx,al
   140018755:	fdiv   QWORD PTR [rbx+rsi*4-0x4c472111]
   14001875c:	lock fsubr QWORD PTR [rsi-0x2076ab16]
   140018763:	std    
   140018764:	(bad)  
   140018765:	ja     0x140018759
   140018767:	jmp    QWORD PTR [rbx]
   140018769:	jb     0x14001875d
   14001876b:	jmp    QWORD PTR [rbx+rsi*2]
   14001876e:	icebp  
   14001876f:	call   FWORD PTR [rcx-0x3b000943]
   140018775:	(bad)  
   140018777:	(bad)  
   140018778:	js     0x140018722
   14001877a:	idiv   bh
   14001877c:	sub    dh,BYTE PTR [rcx+rsi*8-0x1]
   140018780:	and    ebp,DWORD PTR [rsi-0xe]
   140018783:	jmp    QWORD PTR [rdi+rbp*2]
   140018786:	bnd jmp QWORD PTR [rsi]
   140018789:	jo     0x14001877d
   14001878b:	jmp    QWORD PTR [rsi]
   14001878d:	jo     0x140018781
   14001878f:	jmp    QWORD PTR [rsi]
   140018791:	outs   dx,DWORD PTR ds:[rsi]
   140018792:	bnd jmp QWORD PTR [rsi]
   140018795:	outs   dx,BYTE PTR ds:[rsi]
   140018796:	bnd jmp QWORD PTR [rip+0x25fff26e]        # 0x166017a0b
   14001879d:	ins    DWORD PTR es:[rdi],dx
   14001879e:	icebp  
   14001879f:	jmp    QWORD PTR [rip+0x27fff16d]        # 0x168017912
   1400187a5:	ins    BYTE PTR es:[rdi],dx
   1400187a6:	icebp  
   1400187a7:	dec    DWORD PTR [rbx-0x79]
   1400187aa:	icebp  
   1400187ab:	(bad)  
   1400187ac:	mov    cl,0xc1
   1400187ae:	(bad)  
   1400187b0:	loopne 0x140018778
   1400187b2:	(bad)  
   1400187b3:	repz ffreep st(6)
   1400187b6:	mov    fs,esi
   1400187b8:	out    0xcf,al
   1400187ba:	fwait
   1400187bb:	in     al,0xe2
   1400187bd:	retf   
   1400187be:	xchg   esp,eax
   1400187bf:	jrcxz  0x1400187b4
   1400187c1:	loopne 0x14001877d
   1400187c3:	in     eax,dx
   1400187c4:	(bad)  
   1400187c5:	movabs eax,ds:0xdbf1ea77bbdfff3c
   1400187ce:	mov    cl,0xf0
   1400187d0:	(bad)  
   1400187d1:	cdq    
   1400187d2:	xor    eax,0x67afd4ff
   1400187d7:	in     eax,0xf1
   1400187d9:	loope  0x140018798
   1400187db:	loopne 0x1400187ac
   1400187dd:	movabs eax,ds:0x537fbedbff3c
	...
   140018806:	add    BYTE PTR [rax],al
   140018808:	(bad)  
   140018809:	mov    al,0x65
   14001880b:	jmp    rsi
   14001880d:	iret   
   14001880e:	sahf   
   14001880f:	mov    esi,0xabb6def0
   140018814:	in     eax,dx
   140018815:	fdiv   QWORD PTR [rbp-0x441a0654]
   14001881b:	rcr    BYTE PTR [rbp+0x23f2c1b3],cl
   140018821:	jne    0x140018817
   140018823:	jmp    FWORD PTR [rax]
   140018825:	js     0x14001881a
   140018827:	call   QWORD PTR [rbx]
   140018829:	push   0xfffffffffffffff2
   14001882b:	push   QWORD PTR [rbx-0x59]
   14001882e:	idiv   bh
   140018830:	(bad)  
   140018831:	(bad)  
   140018832:	(bad)  
   140018833:	(bad)  
   140018834:	(bad)  
   140018835:	(bad)  
   140018836:	(bad)  
   140018837:	(bad)  
   140018838:	(bad)  
   140018839:	(bad)  
   14001883a:	(bad)  
   14001883b:	call   rdx
   14001883d:	jrcxz  0x140018839
   14001883f:	dec    DWORD PTR [rbp-0x73]
   140018842:	repz jmp QWORD PTR [rip+0x23fff272]        # 0x164017abb
   140018849:	jo     0x14001883d
   14001884b:	jmp    QWORD PTR [rbx]
   14001884d:	jno    0x140018841
   14001884f:	jmp    QWORD PTR [rsi]
   140018851:	jno    0x140018845
   140018853:	jmp    QWORD PTR [rsi]
   140018855:	jo     0x140018849
   140018857:	jmp    QWORD PTR [rsi]
   140018859:	jo     0x14001884d
   14001885b:	jmp    QWORD PTR [rsi]
   14001885d:	outs   dx,DWORD PTR ds:[rsi]
   14001885e:	bnd jmp QWORD PTR [rsi]
   140018861:	outs   dx,DWORD PTR ds:[rsi]
   140018862:	bnd jmp QWORD PTR [rip+0x26fff26e]        # 0x167017ad7
   140018869:	ins    DWORD PTR es:[rdi],dx
   14001886a:	icebp  
   14001886b:	call   FWORD PTR [rcx-0x71]
   14001886e:	repz dec esi
   140018871:	retf   0xfbbc
   140018874:	fnstcw WORD PTR [rbp-0x30191181]
   14001887a:	fwait
   14001887b:	jrcxz  0x140018860
   14001887d:	int3   
   14001887e:	xchg   edi,eax
   14001887f:	jrcxz  0x140018873
   140018881:	loopne 0x14001883d
   140018883:	in     eax,dx
   140018884:	(bad)  
   140018885:	movabs eax,ds:0xdbf1ea77bbdfff3c
   14001888e:	mov    al,0xf0
   140018890:	(bad)  
   140018891:	cdq    
   140018892:	xor    eax,0x67b0d4ff
   140018897:	in     eax,0xf0
   140018899:	loope  0x140018858
   14001889b:	loopne 0x14001886c
   14001889d:	movabs eax,ds:0x5886c2ddff3c
	...
   1400188c6:	add    BYTE PTR [rax],al
   1400188c8:	(bad)  
   1400188c9:	mov    al,0x65
   1400188cb:	jmp    rsi
   1400188cd:	iret   
   1400188ce:	sahf   
   1400188cf:	mov    esi,0xa9b5ddef
   1400188d4:	icebp  
   1400188d5:	loopne 0x14001888f
   1400188d7:	mov    ch,0xe6
   1400188d9:	xlat   BYTE PTR ds:[rbx]
   1400188da:	mov    cl,0xee
   1400188dc:	cs xor ecx,0xf37927fb
   1400188e3:	jmp    FWORD PTR [rax]
   1400188e5:	js     0x1400188da
   1400188e7:	call   QWORD PTR [rcx]
   1400188e9:	push   0xfffffffffffffff2
   1400188eb:	call   FWORD PTR [rdx-0x10940]
   1400188f1:	(bad)  
   1400188f2:	(bad)  
   1400188f3:	(bad)  
   1400188f4:	(bad)  
   1400188f5:	(bad)  
   1400188f6:	(bad)  
   1400188f7:	(bad)  
   1400188f8:	(bad)  
   1400188f9:	(bad)  
   1400188fa:	(bad)  
   1400188fb:	(bad)  
   1400188fc:	(bad)  
   1400188fd:	(bad)  
   1400188fe:	(bad)  
   1400188ff:	(bad)  
   140018900:	stc    
   140018901:	sti    
   140018902:	(bad)  
   140018903:	call   FWORD PTR [rdx+0x33fff7bf]
   140018909:	jge    0x1400188fd
   14001890b:	jmp    QWORD PTR [rip+0x23fff372]        # 0x164017c83
   140018911:	jo     0x140018905
   140018913:	jmp    QWORD PTR [rbx]
   140018915:	jno    0x140018909
   140018917:	jmp    QWORD PTR [rsi]
   140018919:	jb     0x14001890d
   14001891b:	jmp    QWORD PTR [rsi]
   14001891d:	jno    0x140018911
   14001891f:	jmp    QWORD PTR [rsi]
   140018921:	jno    0x140018915
   140018923:	jmp    QWORD PTR [rsi]
   140018925:	jo     0x140018919
   140018927:	jmp    QWORD PTR [rsi]
   140018929:	jo     0x14001891d
   14001892b:	jmp    FWORD PTR [rdi]
   14001892d:	jne    0x14001891e
   14001892f:	dec    DWORD PTR [rbp-0x27021550]
   140018935:	ret    
   140018936:	xchg   esp,eax
   140018937:	hlt    
   140018938:	fnstcw WORD PTR [rdi-0x311a177e]
   14001893e:	(bad)  
   14001893f:	loop   0x140018933
   140018941:	loopne 0x1400188fd
   140018943:	in     eax,dx
   140018944:	(bad)  
   140018945:	movabs eax,ds:0xdbf0ec78bce1ff3c
   14001894e:	mov    cl,0xef
   140018950:	(bad)  
   140018951:	cdq    
   140018952:	xor    eax,0x67b0d4ff
   140018957:	in     eax,0xf0
   140018959:	loope  0x140018918
   14001895b:	loopne 0x14001892c
   14001895d:	movabs eax,ds:0x5886c2ddff3c
	...
   140018986:	add    BYTE PTR [rax],al
   140018988:	iret   
   140018989:	mov    al,0x67
   14001898b:	(bad)  
   14001898c:	call   0x130c12f64
   140018991:	fidivr WORD PTR [rcx-0x4a1e0a5c]
   140018997:	int3   
   140018998:	and    DWORD PTR [rbx+0x7923f9ce],0xfffffff4
   14001899f:	jmp    FWORD PTR [rax]
   1400189a1:	jnp    0x140018996
   1400189a3:	jmp    FWORD PTR [rax]
   1400189a5:	jp     0x14001899a
   1400189a7:	call   QWORD PTR [rax]
   1400189a9:	ins    DWORD PTR es:[rdi],dx
   1400189aa:	bnd jmp QWORD PTR [rdx-0x10a3a]
   1400189b1:	(bad)  
   1400189b2:	(bad)  
   1400189b3:	(bad)  
   1400189b4:	(bad)  
   1400189b5:	(bad)  
   1400189b6:	(bad)  
   1400189b7:	(bad)  
   1400189b8:	(bad)  
   1400189b9:	(bad)  
   1400189ba:	(bad)  
   1400189bb:	(bad)  
   1400189bc:	(bad)  
   1400189bd:	(bad)  
   1400189be:	(bad)  
   1400189bf:	(bad)  
   1400189c0:	(bad)  
   1400189c1:	(bad)  
   1400189c2:	(bad)  
   1400189c3:	(bad)  
   1400189c4:	(bad)  
   1400189c5:	(bad)  
   1400189c6:	(bad)  
   1400189c7:	(bad)  
   1400189c8:	fsub   st,st(7)
   1400189ca:	sti    
   1400189cb:	jmp    FWORD PTR [rdx-0x60]
   1400189ce:	hlt    
   1400189cf:	jmp    FWORD PTR [rip+0x28fff378]        # 0x169017d4d
   1400189d5:	jne    0x1400189ca
   1400189d7:	jmp    QWORD PTR [rdx]
   1400189d9:	jb     0x1400189cd
   1400189db:	jmp    QWORD PTR [rsi]
   1400189dd:	jae    0x1400189d1
   1400189df:	jmp    QWORD PTR [rsi]
   1400189e1:	jae    0x1400189d5
   1400189e3:	jmp    QWORD PTR [rsi]
   1400189e5:	jb     0x1400189d9
   1400189e7:	jmp    QWORD PTR [rsi]
   1400189e9:	jno    0x1400189dd
   1400189eb:	jmp    FWORD PTR [rdx]
   1400189ed:	je     0x1400189e0
   1400189ef:	call   QWORD PTR [rdi-0x74]
   1400189f2:	out    0xfe,al
   1400189f4:	mov    bl,0xb8
   1400189f6:	mov    ch,0xf9
   1400189f8:	(bad)  
   1400189f9:	mov    ecx,0xcee6ee76
   1400189fe:	(bad)  
   1400189ff:	loop   0x1400189f3
   140018a01:	loopne 0x1400189bd
   140018a03:	in     eax,dx
   140018a04:	(bad)  
   140018a05:	movabs eax,ds:0xdaeee874badeff3c
   140018a0e:	mov    al,0xed
   140018a10:	(bad)  
   140018a11:	cdq    
   140018a12:	xor    eax,0x67b0d4ff
   140018a17:	in     eax,0xf0
   140018a19:	loope  0x1400189d8
   140018a1b:	loopne 0x1400189ec
   140018a1d:	movabs eax,ds:0x5886c2ddff3c
	...
   140018a46:	add    BYTE PTR [rax],al
   140018a48:	(bad)  
   140018a49:	mov    al,0x65
   140018a4b:	(bad)  
   140018a4c:	call   0x131c13225
   140018a51:	loop   0x140018a15
   140018a53:	movabs ds:0xffff771deab4def1,al
   140018a5c:	(bad)  
   140018a5d:	jge    0x140018a52
   140018a5f:	jmp    FWORD PTR [rax]
   140018a61:	jge    0x140018a57
   140018a63:	jmp    FWORD PTR [rax]
   140018a65:	jl     0x140018a5a
   140018a67:	call   QWORD PTR [rcx]
   140018a69:	ins    DWORD PTR es:[rdi],dx
   140018a6a:	bnd jmp QWORD PTR [rax-0x10a3a]
   140018a71:	(bad)  
   140018a72:	(bad)  
   140018a73:	(bad)  
   140018a74:	(bad)  
   140018a75:	(bad)  
   140018a76:	(bad)  
   140018a77:	(bad)  
   140018a78:	(bad)  
   140018a79:	(bad)  
   140018a7a:	(bad)  
   140018a7b:	(bad)  
   140018a7c:	(bad)  
   140018a7d:	(bad)  
   140018a7e:	(bad)  
   140018a7f:	(bad)  
   140018a80:	(bad)  
   140018a81:	(bad)  
   140018a82:	(bad)  
   140018a83:	(bad)  
   140018a84:	(bad)  
   140018a85:	(bad)  
   140018a86:	(bad)  
   140018a87:	(bad)  
   140018a88:	(bad)  
   140018a89:	(bad)  
   140018a8a:	(bad)  
   140018a8b:	(bad)  
   140018a8c:	(bad)  
   140018a8d:	(bad)  
   140018a8e:	(bad)  
   140018a8f:	call   FWORD PTR [rdi+0x44fff8c3]
   140018a95:	mov    ebx,esi
   140018a97:	jmp    FWORD PTR [rdx]
   140018a99:	js     0x140018a8e
   140018a9b:	jmp    QWORD PTR [rsi]
   140018a9d:	je     0x140018a91
   140018a9f:	jmp    QWORD PTR [rdx+rsi*2]
   140018aa2:	bnd jmp QWORD PTR [rsi]
   140018aa5:	je     0x140018a99
   140018aa7:	jmp    QWORD PTR [rsi]
   140018aa9:	jae    0x140018a9d
   140018aab:	jmp    FWORD PTR [rcx]
   140018aad:	je     0x140018aa0
   140018aaf:	(bad)  
   140018ab0:	cmp    BYTE PTR [rcx+rbp*8-0x2],bh
   140018ab4:	popf   
   140018ab5:	mov    ecx,0xbcd5fcdf
   140018aba:	xor    ecx,0xffffffe0
   140018abd:	enter  0xe38f,0xf3
   140018ac1:	loope  0x140018a7e
   140018ac3:	in     eax,dx
   140018ac4:	(bad)  
   140018ac5:	movabs eax,ds:0xd9eee773b9ddff3c
   140018ace:	mov    al,0xee
   140018ad0:	(bad)  
   140018ad1:	cdq    
   140018ad2:	xor    eax,0x67b0d4ff
   140018ad7:	in     eax,0xf0
   140018ad9:	loope  0x140018a98
   140018adb:	loopne 0x140018aac
   140018add:	movabs eax,ds:0x5886c2ddff3c
	...
   140018b06:	add    BYTE PTR [rax],al
   140018b08:	(bad)  
   140018b09:	mov    al,0x65
   140018b0b:	(bad)  
   140018b0c:	call   0x134bd34e5
   140018b11:	jrcxz  0x140018ad5
   140018b13:	scas   eax,DWORD PTR es:[rdi]
   140018b14:	retf   
   140018b15:	(bad)  
   140018b16:	mov    ebp,0xfc7a18ff
   140018b1b:	jmp    FWORD PTR [rcx]
   140018b1d:	jg     0x140018b14
   140018b1f:	jmp    QWORD PTR [rdi]
   140018b21:	jle    0x140018b18
   140018b23:	jmp    FWORD PTR [rax]
   140018b25:	jg     0x140018b1b
   140018b27:	call   QWORD PTR [rcx]
   140018b29:	outs   dx,DWORD PTR ds:[rsi]
   140018b2a:	hlt    
   140018b2b:	jmp    QWORD PTR [rbx-0x10938]
   140018b31:	(bad)  
   140018b32:	(bad)  
   140018b33:	(bad)  
   140018b34:	(bad)  
   140018b35:	(bad)  
   140018b36:	(bad)  
   140018b37:	(bad)  
   140018b38:	(bad)  
   140018b39:	(bad)  
   140018b3a:	(bad)  
   140018b3b:	(bad)  
   140018b3c:	(bad)  
   140018b3d:	(bad)  
   140018b3e:	(bad)  
   140018b3f:	(bad)  
   140018b40:	(bad)  
   140018b41:	(bad)  
   140018b42:	(bad)  
   140018b43:	(bad)  
   140018b44:	(bad)  
   140018b45:	(bad)  
   140018b46:	(bad)  
   140018b47:	(bad)  
   140018b48:	(bad)  
   140018b49:	(bad)  
   140018b4a:	(bad)  
   140018b4b:	(bad)  
   140018b4c:	(bad)  
   140018b4d:	(bad)  
   140018b4e:	(bad)  
   140018b4f:	(bad)  
   140018b50:	(bad)  
   140018b51:	(bad)  
   140018b52:	(bad)  
   140018b53:	push   rcx
   140018b55:	idiv   ah
   140018b57:	jmp    FWORD PTR [rsi-0x5c]
   140018b5a:	hlt    
   140018b5b:	push   QWORD PTR [rcx]
   140018b5d:	jle    0x140018b53
   140018b5f:	jmp    FWORD PTR [rcx+rdi*2]
   140018b62:	repz jmp QWORD PTR [rbx]
   140018b65:	je     0x140018b59
   140018b67:	jmp    QWORD PTR [rsp+rsi*2]
   140018b6a:	bnd jmp QWORD PTR [rdi]
   140018b6d:	jne    0x140018b61
   140018b6f:	jmp    FWORD PTR [rsi]
   140018b71:	js     0x140018b64
   140018b73:	push   QWORD PTR [rsi-0x5e]
   140018b76:	out    0xfe,al
   140018b78:	int3   
   140018b79:	mov    esp,0xbad5f695
   140018b7e:	jns    0x140018b67
   140018b80:	hlt    
   140018b81:	loop   0x140018b3f
   140018b83:	in     eax,dx
   140018b84:	(bad)  
   140018b85:	movabs eax,ds:0xdaeee773b9ddff3c
   140018b8e:	mov    al,0xee
   140018b90:	(bad)  
   140018b91:	cdq    
   140018b92:	xor    eax,0x67b0d4ff
   140018b97:	in     eax,0xf0
   140018b99:	loope  0x140018b58
   140018b9b:	loopne 0x140018b6c
   140018b9d:	movabs eax,ds:0x5886c2ddff3c
	...
   140018bc6:	add    BYTE PTR [rax],al
   140018bc8:	(bad)  
   140018bc9:	mov    al,0x65
   140018bcb:	(bad)  
   140018bcc:	jmp    0x135ba39a7
   140018bd1:	in     al,0xbf
   140018bd3:	ror    BYTE PTR [rsi+riz*4+0x7e1fffd6],0xf9
   140018bdb:	jmp    FWORD PTR [rax]
   140018bdd:	xor    ch,0xff
   140018be0:	sub    BYTE PTR [rax+0x7f29fff5],al
   140018be6:	cmc    
   140018be7:	call   QWORD PTR [rcx]
   140018be9:	jno    0x140018bdf
   140018beb:	jmp    QWORD PTR [rbp-0x10936]
   140018bf1:	(bad)  
   140018bf2:	(bad)  
   140018bf3:	(bad)  
   140018bf4:	(bad)  
   140018bf5:	(bad)  
   140018bf6:	(bad)  
   140018bf7:	(bad)  
   140018bf8:	(bad)  
   140018bf9:	(bad)  
   140018bfa:	(bad)  
   140018bfb:	(bad)  
   140018bfc:	(bad)  
   140018bfd:	(bad)  
   140018bfe:	(bad)  
   140018bff:	(bad)  
   140018c00:	(bad)  
   140018c01:	(bad)  
   140018c02:	(bad)  
   140018c03:	(bad)  
   140018c04:	(bad)  
   140018c05:	(bad)  
   140018c06:	(bad)  
   140018c07:	(bad)  
   140018c08:	(bad)  
   140018c09:	(bad)  
   140018c0a:	(bad)  
   140018c0b:	(bad)  
   140018c0c:	(bad)  
   140018c0d:	(bad)  
   140018c0e:	(bad)  
   140018c0f:	(bad)  
   140018c10:	(bad)  
   140018c11:	(bad)  
   140018c12:	(bad)  
   140018c13:	(bad)  
   140018c14:	(bad)  
   140018c15:	(bad)  
   140018c16:	(bad)  
   140018c17:	(bad)  
   140018c18:	(bad)  
   140018c19:	(bad)  
   140018c1a:	(bad)  
   140018c1b:	push   QWORD PTR [rsi+0x51fff9d1]
   140018c21:	xchg   ecx,eax
   140018c22:	repz push QWORD PTR [rbx]
   140018c25:	jg     0x140018c1b
   140018c27:	jmp    FWORD PTR [rdx+rdi*2]
   140018c2a:	repz jmp QWORD PTR [rip+0x23fff274]        # 0x164017ea5
   140018c31:	jno    0x140018c24
   140018c33:	dec    DWORD PTR [rsi-0x6d]
   140018c36:	(bad)  
   140018c37:	dec    edx
   140018c39:	(bad)  
   140018c3a:	scas   eax,DWORD PTR es:[rdi]
   140018c3b:	stc    
   140018c3c:	shl    DWORD PTR [rbp-0x1d0b1591],1
   140018c42:	mov    esp,0x3ca1ceed
   140018c47:	(bad)  
   140018c48:	fnstsw WORD PTR [rdx-0x2611188c]
   140018c4e:	mov    al,0xee
   140018c50:	(bad)  
   140018c51:	cdq    
   140018c52:	xor    eax,0x67b0d4ff
   140018c57:	in     eax,0xf0
   140018c59:	loope  0x140018c18
   140018c5b:	loopne 0x140018c2c
   140018c5d:	movabs eax,ds:0x5988c3deff3c
	...
   140018c86:	add    BYTE PTR [rax],al
   140018c88:	(bad)  
   140018c89:	mov    al,0x65
   140018c8b:	(bad)  
   140018c8c:	(bad)  
   140018c8d:	xlat   BYTE PTR ds:[rbx]
   140018c8e:	scas   eax,DWORD PTR es:[rdi]
   140018c8f:	mov    ch,0xf6
   140018c91:	in     al,0xbf
   140018c93:	rcl    BYTE PTR [rcx-0x72],1
   140018c96:	out    dx,eax
   140018c97:	jmp    QWORD PTR [rdx+rax*4]
   140018c9a:	idiv   bh
   140018c9c:	sub    BYTE PTR [rdx-0x7dd7000b],al
   140018ca2:	cmc    
   140018ca3:	jmp    FWORD PTR [rcx]
   140018ca5:	xor    ebp,0xf47211ff
   140018cab:	jmp    QWORD PTR [rsi-0x10835]
   140018cb1:	(bad)  
   140018cb2:	(bad)  
   140018cb3:	(bad)  
   140018cb4:	(bad)  
   140018cb5:	(bad)  
   140018cb6:	(bad)  
   140018cb7:	(bad)  
   140018cb8:	(bad)  
   140018cb9:	(bad)  
   140018cba:	(bad)  
   140018cbb:	(bad)  
   140018cbc:	(bad)  
   140018cbd:	(bad)  
   140018cbe:	(bad)  
   140018cbf:	(bad)  
   140018cc0:	(bad)  
   140018cc1:	(bad)  
   140018cc2:	(bad)  
   140018cc3:	(bad)  
   140018cc4:	(bad)  
   140018cc5:	(bad)  
   140018cc6:	(bad)  
   140018cc7:	(bad)  
   140018cc8:	(bad)  
   140018cc9:	(bad)  
   140018cca:	(bad)  
   140018ccb:	(bad)  
   140018ccc:	(bad)  
   140018ccd:	(bad)  
   140018cce:	(bad)  
   140018ccf:	(bad)  
   140018cd0:	(bad)  
   140018cd1:	(bad)  
   140018cd2:	(bad)  
   140018cd3:	(bad)  
   140018cd4:	(bad)  
   140018cd5:	(bad)  
   140018cd6:	(bad)  
   140018cd7:	(bad)  
   140018cd8:	(bad)  
   140018cd9:	(bad)  
   140018cda:	(bad)  
   140018cdb:	(bad)  
   140018cdc:	(bad)  
   140018cdd:	(bad)  
   140018cde:	(bad)  
   140018cdf:	push   rsp
   140018ce1:	clc    
   140018ce2:	std    
   140018ce3:	jmp    FWORD PTR [rbx-0x5d]
   140018ce6:	idiv   bh
   140018ce8:	cmp    eax,DWORD PTR [rbp+0x7826fff4]
   140018cee:	repz jmp QWORD PTR [rsi*2-0x7ccf000e]
   140018cf6:	(bad)  
   140018cf7:	(bad)  
   140018cf8:	mov    edi,0xd0fbc3c4
   140018cfd:	mov    ch,0x6f
   140018cff:	in     al,dx
   140018d00:	hlt    
   140018d01:	loop   0x140018cbf
   140018d03:	in     eax,dx
   140018d04:	(bad)  
   140018d05:	movabs eax,ds:0xd9eee774baddff3c
   140018d0e:	mov    al,0xee
   140018d10:	(bad)  
   140018d11:	cdq    
   140018d12:	xor    eax,0x67b0d4ff
   140018d17:	in     eax,0xf0
   140018d19:	loope  0x140018cd8
   140018d1b:	loopne 0x140018cec
   140018d1d:	movabs eax,ds:0x5e8ec6dfff3c
	...
   140018d46:	add    BYTE PTR [rax],al
   140018d48:	(bad)  
   140018d49:	mov    al,0x65
   140018d4b:	(bad)  
   140018d4c:	(bad)  
   140018d4d:	fdiv   DWORD PTR [rax-0x421d0b4c]
   140018d53:	fisubr DWORD PTR [rcx]
   140018d55:	cmp    edi,0xf68427ff
   140018d5b:	jmp    FWORD PTR [rcx]
   140018d5d:	xor    ebp,0xffffffff
   140018d60:	sub    DWORD PTR [rbx-0x7bd5000b],eax
   140018d66:	cmc    
   140018d67:	call   QWORD PTR [rdx]
   140018d69:	jne    0x140018d5f
   140018d6b:	jmp    QWORD PTR [rsi-0x10835]
   140018d71:	(bad)  
   140018d72:	(bad)  
   140018d73:	(bad)  
   140018d74:	(bad)  
   140018d75:	(bad)  
   140018d76:	(bad)  
   140018d77:	(bad)  
   140018d78:	(bad)  
   140018d79:	(bad)  
   140018d7a:	(bad)  
   140018d7b:	(bad)  
   140018d7c:	(bad)  
   140018d7d:	(bad)  
   140018d7e:	(bad)  
   140018d7f:	(bad)  
   140018d80:	(bad)  
   140018d81:	(bad)  
   140018d82:	(bad)  
   140018d83:	(bad)  
   140018d84:	(bad)  
   140018d85:	(bad)  
   140018d86:	(bad)  
   140018d87:	(bad)  
   140018d88:	(bad)  
   140018d89:	(bad)  
   140018d8a:	(bad)  
   140018d8b:	(bad)  
   140018d8c:	(bad)  
   140018d8d:	(bad)  
   140018d8e:	(bad)  
   140018d8f:	(bad)  
   140018d90:	(bad)  
   140018d91:	(bad)  
   140018d92:	(bad)  
   140018d93:	(bad)  
   140018d94:	(bad)  
   140018d95:	(bad)  
   140018d96:	(bad)  
   140018d97:	(bad)  
   140018d98:	(bad)  
   140018d99:	(bad)  
   140018d9a:	(bad)  
   140018d9b:	(bad)  
   140018d9c:	(bad)  
   140018d9d:	(bad)  
   140018d9e:	(bad)  
   140018d9f:	(bad)  
   140018da0:	(bad)  
   140018da1:	(bad)  
   140018da2:	(bad)  
   140018da3:	(bad)  
   140018da4:	(bad)  
   140018da5:	(bad)  
   140018da6:	std    
   140018da7:	call   QWORD PTR [rdi-0x68]
   140018daa:	repnz jmp FWORD PTR [rsp+rdi*2]
   140018dae:	repz jmp QWORD PTR [rdi+rsi*2]
   140018db2:	bnd jmp QWORD PTR [rsi]
   140018db5:	jg     0x140018db6
   140018db7:	push   QWORD PTR [rbp-0x31043440]
   140018dbd:	mov    bl,0x68
   140018dbf:	in     eax,dx
   140018dc0:	repz loope 0x140018d7e
   140018dc3:	in     eax,dx
   140018dc4:	(bad)  
   140018dc5:	movabs eax,ds:0xdaeee774baddff3c
   140018dce:	mov    al,0xee
   140018dd0:	(bad)  
   140018dd1:	cdq    
   140018dd2:	xor    eax,0x67b0d4ff
   140018dd7:	in     eax,0xf0
   140018dd9:	loope  0x140018d98
   140018ddb:	loopne 0x140018dac
   140018ddd:	movabs eax,ds:0x5e8ec6dfff3c
	...
   140018e06:	add    BYTE PTR [rax],al
   140018e08:	(bad)  
   140018e09:	mov    al,0x65
   140018e0b:	(bad)  
   140018e0c:	jmp    0x140018de8
   140018e0e:	mov    bl,0xb3
   140018e10:	icebp  
   140018e11:	fbstp  TBYTE PTR [rdi-0x7cd625]
   140018e17:	jmp    FWORD PTR [rax]
   140018e19:	xchg   dh,dh
   140018e1b:	jmp    FWORD PTR [rcx]
   140018e1d:	test   esi,esi
   140018e1f:	jmp    FWORD PTR [rcx]
   140018e21:	test   ch,dh
   140018e23:	jmp    FWORD PTR [rcx]
   140018e25:	test   ch,dh
   140018e27:	call   QWORD PTR [rdx]
   140018e29:	ja     0x140018e20
   140018e2b:	jmp    QWORD PTR [rdi-0x534]
   140018e31:	(bad)  
   140018e32:	(bad)  
   140018e33:	(bad)  
   140018e34:	(bad)  
   140018e35:	(bad)  
   140018e36:	(bad)  
   140018e37:	(bad)  
   140018e38:	(bad)  
   140018e39:	(bad)  
   140018e3a:	(bad)  
   140018e3b:	(bad)  
   140018e3c:	(bad)  
   140018e3d:	(bad)  
   140018e3e:	(bad)  
   140018e3f:	(bad)  
   140018e40:	(bad)  
   140018e41:	(bad)  
   140018e42:	(bad)  
   140018e43:	(bad)  
   140018e44:	(bad)  
   140018e45:	(bad)  
   140018e46:	(bad)  
   140018e47:	(bad)  
   140018e48:	(bad)  
   140018e49:	(bad)  
   140018e4a:	(bad)  
   140018e4b:	(bad)  
   140018e4c:	(bad)  
   140018e4d:	(bad)  
   140018e4e:	(bad)  
   140018e4f:	(bad)  
   140018e50:	(bad)  
   140018e51:	(bad)  
   140018e52:	(bad)  
   140018e53:	(bad)  
   140018e54:	(bad)  
   140018e55:	(bad)  
   140018e56:	(bad)  
   140018e57:	(bad)  
   140018e58:	(bad)  
   140018e59:	(bad)  
   140018e5a:	(bad)  
   140018e5b:	(bad)  
   140018e5c:	(bad)  
   140018e5d:	(bad)  
   140018e5e:	(bad)  
   140018e5f:	(bad)  
   140018e60:	(bad)  
   140018e61:	(bad)  
   140018e62:	(bad)  
   140018e63:	(bad)  
   140018e64:	(bad)  
   140018e65:	(bad)  
   140018e66:	(bad)  
   140018e67:	jmp    FWORD PTR [rsi-0x5a]
   140018e6a:	hlt    
   140018e6b:	jmp    FWORD PTR [rdi]
   140018e6d:	xor    ah,0xff
   140018e70:	and    al,0x78
   140018e72:	icebp  
   140018e73:	jmp    QWORD PTR [rip+0xffffffffb2ffff7e]        # 0xf3018df7
   140018e79:	ror    esp,0xfc
   140018e7c:	(bad)  
   140018e7d:	mov    bl,0x68
   140018e7f:	in     eax,dx
   140018e80:	repz loope 0x140018e3e
   140018e83:	in     eax,dx
   140018e84:	(bad)  
   140018e85:	movabs eax,ds:0xdaeee774baddff3c
   140018e8e:	mov    al,0xee
   140018e90:	(bad)  
   140018e91:	cdq    
   140018e92:	xor    eax,0x67b0d4ff
   140018e97:	in     eax,0xf0
   140018e99:	loope  0x140018e58
   140018e9b:	loopne 0x140018e6c
   140018e9d:	movabs eax,ds:0x5e8ec6dfff3c
	...
   140018ec6:	add    BYTE PTR [rax],al
   140018ec8:	(bad)  
   140018ec9:	mov    al,0x65
   140018ecb:	(bad)  
   140018ecc:	in     al,dx
   140018ecd:	(bad)  [rsi-0x441f0d4e]
   140018ed3:	fsubr  DWORD PTR [rcx]
   140018ed5:	test   bh,bh
   140018ed7:	jmp    FWORD PTR [rax]
   140018ed9:	xchg   edi,esi
   140018edb:	jmp    FWORD PTR [rcx]
   140018edd:	xchg   esi,esi
   140018edf:	jmp    FWORD PTR [rcx]
   140018ee1:	xchg   esi,esi
   140018ee3:	jmp    FWORD PTR [rdx]
   140018ee5:	test   esi,esi
   140018ee7:	call   QWORD PTR [rbx]
   140018ee9:	jns    0x140018ee0
   140018eeb:	jmp    QWORD PTR [rbp-0x535]
   140018ef1:	(bad)  
   140018ef2:	(bad)  
   140018ef3:	(bad)  
   140018ef4:	(bad)  
   140018ef5:	(bad)  
   140018ef6:	(bad)  
   140018ef7:	(bad)  
   140018ef8:	(bad)  
   140018ef9:	(bad)  
   140018efa:	(bad)  
   140018efb:	(bad)  
   140018efc:	(bad)  
   140018efd:	(bad)  
   140018efe:	(bad)  
   140018eff:	(bad)  
   140018f00:	(bad)  
   140018f01:	(bad)  
   140018f02:	(bad)  
   140018f03:	(bad)  
   140018f04:	(bad)  
   140018f05:	(bad)  
   140018f06:	(bad)  
   140018f07:	(bad)  
   140018f08:	(bad)  
   140018f09:	(bad)  
   140018f0a:	(bad)  
   140018f0b:	(bad)  
   140018f0c:	(bad)  
   140018f0d:	(bad)  
   140018f0e:	(bad)  
   140018f0f:	(bad)  
   140018f10:	(bad)  
   140018f11:	(bad)  
   140018f12:	(bad)  
   140018f13:	(bad)  
   140018f14:	(bad)  
   140018f15:	(bad)  
   140018f16:	(bad)  
   140018f17:	(bad)  
   140018f18:	(bad)  
   140018f19:	(bad)  
   140018f1a:	(bad)  
   140018f1b:	(bad)  
   140018f1c:	(bad)  
   140018f1d:	(bad)  
   140018f1e:	(bad)  
   140018f1f:	(bad)  
   140018f20:	(bad)  
   140018f21:	(bad)  
   140018f22:	(bad)  
   140018f23:	(bad)  
   140018f24:	mov    eax,0x5dfffad4
   140018f29:	sahf   
   140018f2a:	idiv   edi
   140018f2c:	sub    eax,0x24fff47f
   140018f31:	jp     0x140018f25
   140018f33:	jmp    FWORD PTR [rsi]
   140018f35:	xchg   bh,bh
   140018f37:	inc    eax
   140018f39:	(bad)
   140018f3c:	int    0xb1
   140018f3e:	(bad)  
   140018f3f:	in     eax,dx
   140018f40:	repz loope 0x140018efe
   140018f43:	in     eax,dx
   140018f44:	(bad)  
   140018f45:	movabs eax,ds:0xdaeee774baddff3c
   140018f4e:	mov    al,0xee
   140018f50:	(bad)  
   140018f51:	cdq    
   140018f52:	xor    eax,0x67b0d5ff
   140018f57:	in     eax,0xf0
   140018f59:	loopne 0x140018f18
   140018f5b:	loopne 0x140018f2c
   140018f5d:	movabs eax,ds:0x5e8ec6dfff3c
	...
   140018f86:	add    BYTE PTR [rax],al
   140018f88:	(bad)  
   140018f89:	mov    al,0x65
   140018f8b:	(bad)  
   140018f8c:	in     al,dx
   140018f8d:	fdiv   QWORD PTR [rsi-0x441f0e4d]
   140018f93:	(bad)  
   140018f94:	rex.XB (bad) 
   140018f96:	cmc    
   140018f97:	jmp    QWORD PTR [rdi]
   140018f99:	mov    al,bh
   140018f9b:	jmp    FWORD PTR [rcx]
   140018f9d:	mov    dh,dh
   140018f9f:	jmp    FWORD PTR [rcx]
   140018fa1:	mov    dh,dh
   140018fa3:	jmp    FWORD PTR [rdx]
   140018fa5:	mov    dh,dh
   140018fa7:	call   QWORD PTR [rbx]
   140018fa9:	jnp    0x140018fa1
   140018fab:	push   QWORD PTR [rdx-0x52d]
   140018fb1:	(bad)  
   140018fb2:	(bad)  
   140018fb3:	(bad)  
   140018fb4:	(bad)  
   140018fb5:	(bad)  
   140018fb6:	(bad)  
   140018fb7:	(bad)  
   140018fb8:	(bad)  
   140018fb9:	(bad)  
   140018fba:	(bad)  
   140018fbb:	(bad)  
   140018fbc:	(bad)  
   140018fbd:	(bad)  
   140018fbe:	(bad)  
   140018fbf:	(bad)  
   140018fc0:	(bad)  
   140018fc1:	(bad)  
   140018fc2:	(bad)  
   140018fc3:	(bad)  
   140018fc4:	(bad)  
   140018fc5:	(bad)  
   140018fc6:	(bad)  
   140018fc7:	(bad)  
   140018fc8:	(bad)  
   140018fc9:	(bad)  
   140018fca:	(bad)  
   140018fcb:	(bad)  
   140018fcc:	(bad)  
   140018fcd:	(bad)  
   140018fce:	(bad)  
   140018fcf:	(bad)  
   140018fd0:	(bad)  
   140018fd1:	(bad)  
   140018fd2:	(bad)  
   140018fd3:	(bad)  
   140018fd4:	(bad)  
   140018fd5:	(bad)  
   140018fd6:	(bad)  
   140018fd7:	(bad)  
   140018fd8:	(bad)  
   140018fd9:	(bad)  
   140018fda:	(bad)  
   140018fdb:	push   rcx
   140018fdd:	idiv   ch
   140018fdf:	inc    DWORD PTR [rdi+0x56fff8b8]
   140018fe5:	fwait
   140018fe6:	idiv   edi
   140018fe8:	cmp    ecx,DWORD PTR [rbx+0x7d24fff6]
   140018fee:	hlt    
   140018fef:	jmp    QWORD PTR [rbx]
   140018ff1:	jp     0x140018fe6
   140018ff3:	inc    DWORD PTR [rsi-0x6b]
   140018ff6:	std    
   140018ff7:	dec    esp
   140018ff9:	(bad)  
   140018ffa:	mov    ah,0xfa
   140018ffc:	leave  
   140018ffd:	lods   al,BYTE PTR ds:[rsi]
   140018ffe:	push   rdi
   140018fff:	jmp    0x140018ff5
   140019001:	loop   0x140018fbe
   140019003:	in     eax,dx
   140019004:	(bad)  
   140019005:	movabs eax,ds:0xdaeee774baddff3c
   14001900e:	mov    al,0xee
   140019010:	(bad)  
   140019011:	cdq    
   140019012:	xor    eax,0x67b0d5ff
   140019017:	in     eax,0xf1
   140019019:	loopne 0x140018fd8
   14001901b:	loopne 0x140018fec
   14001901d:	movabs eax,ds:0x5e8ec6dfff3c
	...
   140019046:	add    BYTE PTR [rax],al
   140019048:	(bad)  
   140019049:	mov    al,0x65
   14001904b:	(bad)  
   14001904c:	in     eax,dx
   14001904d:	fdiv   QWORD PTR [rdi-0x411f0f4b]
   140019053:	mov    ebp,0xffd3a383
   140019058:	and    cl,BYTE PTR [rbx-0x75d50002]
   14001905e:	idiv   bh
   140019060:	sub    cl,BYTE PTR [rcx-0x76d4000a]
   140019066:	idiv   bh
   140019068:	adc    edi,DWORD PTR [rbp-0xa]
   14001906b:	push   QWORD PTR [rbx+rdx*8-0x6]
   140019072:	(bad)  
   140019073:	(bad)  
   140019074:	(bad)  
   140019075:	(bad)  
   140019076:	(bad)  
   140019077:	(bad)  
   140019078:	(bad)  
   140019079:	(bad)  
   14001907a:	(bad)  
   14001907b:	(bad)  
   14001907c:	(bad)  
   14001907d:	(bad)  
   14001907e:	(bad)  
   14001907f:	(bad)  
   140019080:	(bad)  
   140019081:	(bad)  
   140019082:	(bad)  
   140019083:	(bad)  
   140019084:	(bad)  
   140019085:	(bad)  
   140019086:	(bad)  
   140019087:	(bad)  
   140019088:	(bad)  
   140019089:	(bad)  
   14001908a:	(bad)  
   14001908b:	(bad)  
   14001908c:	(bad)  
   14001908d:	(bad)  
   14001908e:	(bad)  
   14001908f:	(bad)  
   140019090:	(bad)  
   140019091:	(bad)  
   140019092:	(bad)  
   140019093:	(bad)  
   140019094:	(bad)  
   140019095:	(bad)  
   140019096:	(bad)  
   140019097:	jmp    FWORD PTR [rdi+rcx*8-0x66af0006]
   14001909e:	idiv   edi
   1400190a0:	(bad)  
   1400190a1:	mov    esi,esi
   1400190a3:	jmp    FWORD PTR [rcx]
   1400190a5:	(bad)  
   1400190a6:	cmc    
   1400190a7:	jmp    QWORD PTR [rsi+rdi*2]
   1400190aa:	cmc    
   1400190ab:	jmp    FWORD PTR [rax]
   1400190ad:	xor    ch,0xff
   1400190b0:	sbb    al,0x79
   1400190b2:	cmc    
   1400190b3:	jmp    FWORD PTR [rsi-0x56]
   1400190b6:	cmc    
   1400190b7:	dec    esp
   1400190b9:	mov    edx,0xb4cff798
   1400190be:	imul   ebp,ecx,0xfffffff4
   1400190c1:	loop   0x14001907f
   1400190c3:	in     eax,dx
   1400190c4:	(bad)  
   1400190c5:	movabs eax,ds:0xdaeee774baddff3c
   1400190ce:	mov    al,0xee
   1400190d0:	(bad)  
   1400190d1:	cdq    
   1400190d2:	xor    eax,0x67b0d5ff
   1400190d7:	in     eax,0xf1
   1400190d9:	loope  0x140019098
   1400190db:	loopne 0x1400190ac
   1400190dd:	movabs eax,ds:0x5f8fc6e0ff3c
	...
   140019106:	add    BYTE PTR [rax],al
   140019108:	(bad)  
   140019109:	mov    al,0x65
   14001910b:	(bad)  
   14001910c:	in     al,dx
   14001910d:	(bad)  [rsi-0x3b1c0d48]
   140019113:	lods   al,BYTE PTR ds:[rsi]
   140019114:	sar    DWORD PTR [rbx-0x73e00050],0xff
   14001911b:	jmp    FWORD PTR [rdx]
   14001911d:	mov    esi,ebp
   14001911f:	jmp    FWORD PTR [rdx]
   140019121:	mov    esi,esi
   140019123:	jmp    FWORD PTR [rbx]
   140019125:	mov    esi,esi
   140019127:	call   QWORD PTR [rdi+rdi*2]
   14001912a:	idiv   bh
   14001912c:	mov    ah,0xd3
   14001912e:	cli    
   14001912f:	(bad)  
   140019130:	(bad)  
   140019131:	(bad)  
   140019132:	(bad)  
   140019133:	(bad)  
   140019134:	(bad)  
   140019135:	(bad)  
   140019136:	(bad)  
   140019137:	(bad)  
   140019138:	(bad)  
   140019139:	(bad)  
   14001913a:	(bad)  
   14001913b:	(bad)  
   14001913c:	(bad)  
   14001913d:	(bad)  
   14001913e:	(bad)  
   14001913f:	(bad)  
   140019140:	(bad)  
   140019141:	(bad)  
   140019142:	(bad)  
   140019143:	(bad)  
   140019144:	(bad)  
   140019145:	(bad)  
   140019146:	(bad)  
   140019147:	(bad)  
   140019148:	(bad)  
   140019149:	(bad)  
   14001914a:	(bad)  
   14001914b:	(bad)  
   14001914c:	(bad)  
   14001914d:	(bad)  
   14001914e:	(bad)  
   14001914f:	jmp    rdi
   140019151:	repnz std 
   140019153:	inc    DWORD PTR [rcx+rdi*4-0x74c90007]
   14001915a:	idiv   bh
   14001915c:	xor    BYTE PTR [rax-0x7dd9000a],cl
   140019162:	cmc    
   140019163:	jmp    QWORD PTR [rsi]
   140019165:	xor    ebp,0xffffffff
   140019168:	sub    BYTE PTR [rbx-0x7dd5000b],al
   14001916e:	cmc    
   14001916f:	call   QWORD PTR [rsi]
   140019171:	jns    0x14001916c
   140019173:	call   QWORD PTR [rdx-0x32011848]
   140019179:	mov    ah,0x7c
   14001917b:	repz fcmovb st,st(0)
   14001917e:	and    esi,0xfffffff3
   140019181:	loopne 0x14001913e
   140019183:	in     eax,dx
   140019184:	(bad)  
   140019185:	movabs eax,ds:0xdaeee774baddff3c
   14001918e:	mov    al,0xee
   140019190:	(bad)  
   140019191:	cdq    
   140019192:	xor    eax,0x67b0d5ff
   140019197:	in     eax,0xf1
   140019199:	loopne 0x140019158
   14001919b:	loopne 0x14001916c
   14001919d:	movabs eax,ds:0x6495c9e1ff3c
	...
   1400191c6:	add    BYTE PTR [rax],al
   1400191c8:	iret   
   1400191c9:	mov    al,0x67
   1400191cb:	(bad)  
   1400191cc:	in     eax,dx
   1400191cd:	(bad)  [rbp-0x35190b46]
   1400191d3:	lahf   
   1400191d4:	fmulp  st(6),st
   1400191d6:	test   al,0xeb
   1400191d8:	and    cl,BYTE PTR [rdi+rdi*8-0x872d401]
   1400191df:	jmp    FWORD PTR [rbx]
   1400191e1:	(bad)  
   1400191e2:	idiv   edi
   1400191e4:	sub    ecx,DWORD PTR [rsi+rsi*8-0x97feb01]
   1400191eb:	push   QWORD PTR [rbx+rdx*8-0x7]
   1400191f2:	std    
   1400191f3:	(bad)  
   1400191f4:	(bad)  
   1400191f5:	(bad)  
   1400191f6:	(bad)  
   1400191f7:	(bad)  
   1400191f8:	(bad)  
   1400191f9:	(bad)  
   1400191fa:	(bad)  
   1400191fb:	(bad)  
   1400191fc:	(bad)  
   1400191fd:	(bad)  
   1400191fe:	(bad)  
   1400191ff:	(bad)  
   140019200:	(bad)  
   140019201:	(bad)  
   140019202:	(bad)  
   140019203:	(bad)  
   140019204:	(bad)  
   140019205:	(bad)  
   140019206:	(bad)  
   140019207:	(bad)  
   140019208:	(bad)  
   140019209:	(bad)  
   14001920a:	(bad)  
   14001920b:	inc    edx
   14001920d:	(bad)  
   14001920f:	dec    DWORD PTR [rbx+rbx*4-0xa]
   140019213:	push   QWORD PTR [rbx]
   140019215:	mov    esi,esi
   140019217:	jmp    FWORD PTR [rsi+rax*4]
   14001921a:	idiv   bh
   14001921c:	and    eax,0x28fff683
   140019221:	test   ebp,esi
   140019223:	jmp    FWORD PTR [rcx]
   140019225:	test   ch,dh
   140019227:	jmp    FWORD PTR [rcx]
   140019229:	test   dh,dh
   14001922b:	jmp    FWORD PTR [rax]
   14001922d:	xor    esp,0xffffffff
   140019230:	sub    ecx,DWORD PTR [rdx-0x434e0002]
   140019236:	(bad)  
   140019237:	cld    
   140019238:	enter  0x50aa,0xf0
   14001923c:	loope  0x140019207
   14001923e:	xchg   edx,eax
   14001923f:	jrcxz  0x140019235
   140019241:	loop   0x1400191fe
   140019243:	out    dx,al
   140019244:	(bad)  
   140019245:	movabs eax,ds:0xdaeee774baddff3c
   14001924e:	mov    al,0xee
   140019250:	(bad)  
   140019251:	cwde   
   140019252:	xor    edi,edi
   140019254:	(bad)  
   140019255:	scas   eax,DWORD PTR es:[rdi]
   140019256:	in     ax,0xf1
   140019259:	loope  0x140019219
   14001925b:	loopne 0x14001922c
   14001925d:	movabs eax,ds:0x6495c9e1ff3c
	...
   140019286:	add    BYTE PTR [rax],al
   140019288:	(bad)  
   140019289:	mov    al,0x65
   14001928b:	(bad)  
   14001928c:	in     eax,dx
   14001928d:	(bad)  [rbp-0x34180b46]
   140019293:	lahf   
   140019294:	in     eax,dx
   140019295:	fidivr WORD PTR [rcx-0x17629f37]
   14001929b:	jmp    FWORD PTR [rax]
   14001929d:	(bad)  
   14001929e:	sti    
   14001929f:	jmp    FWORD PTR [rbx]
   1400192a1:	(bad)  
   1400192a2:	idiv   edi
   1400192a4:	sub    al,0x8e
   1400192a6:	idiv   edi
   1400192a8:	adc    eax,0xb5fff682
   1400192ad:	(bad)  
   1400192ae:	stc    
   1400192af:	(bad)  
   1400192b0:	(bad)  
   1400192b1:	(bad)  
   1400192b2:	std    
   1400192b3:	(bad)  
   1400192b4:	(bad)  
   1400192b5:	(bad)  
   1400192b6:	(bad)  
   1400192b7:	(bad)  
   1400192b8:	(bad)  
   1400192b9:	(bad)  
   1400192ba:	(bad)  
   1400192bb:	(bad)  
   1400192bc:	(bad)  
   1400192bd:	(bad)  
   1400192be:	(bad)  
   1400192bf:	(bad)  
   1400192c0:	(bad)  
   1400192c1:	(bad)  
   1400192c2:	(bad)  
   1400192c3:	push   rbx
   1400192c5:	clc    
   1400192c6:	std    
   1400192c7:	(bad)  
   1400192c8:	jns    0x14001927e
   1400192ca:	stc    
   1400192cb:	(bad)  
   1400192cc:	cmp    al,0x93
   1400192ce:	idiv   edi
   1400192d0:	xor    DWORD PTR [rbp-0x78d7000a],ecx
   1400192d6:	idiv   bh
   1400192d8:	(bad)  
   1400192d9:	mov    dh,dh
   1400192db:	jmp    FWORD PTR [rcx]
   1400192dd:	xchg   esi,esi
   1400192df:	jmp    FWORD PTR [rcx]
   1400192e1:	xchg   esi,esi
   1400192e3:	jmp    FWORD PTR [rcx]
   1400192e5:	xchg   dh,dh
   1400192e7:	jmp    FWORD PTR [rcx]
   1400192e9:	xchg   dh,dh
   1400192eb:	jmp    QWORD PTR [rax]
   1400192ed:	xor    dh,0xff
   1400192f0:	pop    rsi
   1400192f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400192f2:	sti    
   1400192f3:	dec    esp
   1400192f5:	mov    eax,0xb0cdf691
   1400192fa:	(bad)  
   1400192fb:	in     al,dx
   1400192fc:	out    0xd0,al
   1400192fe:	pushf  
   1400192ff:	in     al,0xf6
   140019301:	in     eax,0xbe
   140019303:	icebp  
   140019304:	int    0x9f
   140019306:	cmp    bh,bh
   140019308:	fnstsw WORD PTR [rdx-0x2511188c]
   14001930e:	mov    al,0xee
   140019310:	(bad)  
   140019311:	cwde   
   140019312:	xor    edi,edi
   140019314:	(bad)  
   140019315:	scas   eax,DWORD PTR es:[rdi]
   140019316:	data16 in al,0xf3
   140019319:	loope  0x1400192d9
   14001931b:	jrcxz  0x1400192ec
   14001931d:	movabs eax,ds:0x6495c9e1ff3c
	...
   140019346:	add    BYTE PTR [rax],al
   140019348:	int    0xaf
   14001934a:	movsxd edi,edi
   14001934c:	in     al,dx
   14001934d:	fnstenv [rbx-0x381a0b46]
   140019353:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019354:	lock loop 0x140019318
   140019357:	mov    al,0xc9
   140019359:	mov    ebp,0x9220ffa5
   14001935e:	(bad)  
   14001935f:	jmp    FWORD PTR [rbx]
   140019361:	nop
   140019362:	idiv   edi
   140019364:	sub    al,0x8f
   140019366:	idiv   edi
   140019368:	adc    eax,0xb9fff684
   14001936d:	(bad)  
   14001936e:	stc    
   14001936f:	(bad)  
   140019370:	(bad)  
   140019371:	(bad)  
   140019372:	std    
   140019373:	(bad)  
   140019374:	(bad)  
   140019375:	(bad)  
   140019376:	(bad)  
   140019377:	(bad)  
   140019378:	(bad)  
   140019379:	(bad)  
   14001937a:	(bad)  
   14001937b:	(bad)  
   14001937c:	(bad)  
   14001937d:	(bad)  
   14001937e:	(bad)  
   14001937f:	push   QWORD PTR [rcx+0x54fffbd5]
   140019385:	movabs ds:0x8c2cfff78f33fff8,al
   14001938e:	idiv   bh
   140019390:	sub    BYTE PTR [rdx-0x76d6000a],cl
   140019396:	idiv   bh
   140019398:	sub    cl,BYTE PTR [rcx-0x76d5000a]
   14001939e:	idiv   bh
   1400193a0:	sub    DWORD PTR [rax-0x77d6000a],ecx
   1400193a6:	idiv   bh
   1400193a8:	sub    DWORD PTR [rdi-0x72d2000a],eax
   1400193ae:	cld    
   1400193af:	push   QWORD PTR [rax-0x3202293d]
   1400193b5:	mov    al,0x67
   1400193b7:	icebp  
   1400193b8:	loope  0x140019383
   1400193ba:	nop
   1400193bb:	(bad)  
   1400193bc:	jmp    0x140019391
   1400193be:	movabs ds:0x3fa3d0f0bee3f5e7,al
   1400193c7:	(bad)  
   1400193c8:	fnstsw WORD PTR [rdx-0x2511188c]
   1400193ce:	mov    al,0xee
   1400193d0:	(bad)  
   1400193d1:	cwde   
   1400193d2:	xor    edi,edi
   1400193d4:	xlat   BYTE PTR ds:[rbx]
   1400193d5:	mov    cl,0x6a
   1400193d7:	jmp    0x125c176d0
   1400193dc:	iret   
   1400193dd:	movabs eax,ds:0x6495c9e1ff3c
	...
   140019406:	add    BYTE PTR [rax],al
   140019408:	int3   
   140019409:	scas   al,BYTE PTR es:[rdi]
   14001940a:	(bad)  
   14001940b:	(bad)  
   14001940c:	jmp    0x1400193e7
   14001940e:	mov    bl,0xba
   140019410:	repnz in al,0xc5
   140019413:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019414:	repz in eax,0xc8
   140019417:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019418:	jmp    0x19fd544f4
   14001941d:	pushf  
   14001941e:	loopne 0x14001941f
   140019420:	(bad)  
   140019421:	xchg   esp,eax
   140019422:	(bad)  
   140019423:	jmp    FWORD PTR [rip+0x16fff791]        # 0x157018bba
   140019429:	xchg   dh,dh
   14001942b:	jmp    QWORD PTR [rsi-0x733]
   140019431:	(bad)  
   140019432:	(bad)  
   140019433:	(bad)  
   140019434:	(bad)  
   140019435:	(bad)  
   140019436:	(bad)  
   140019437:	push   rbx
   140019439:	clc    
   14001943a:	(bad)  
   14001943b:	dec    DWORD PTR [rbp+0x39fffac2]
   140019441:	xchg   esp,eax
   140019442:	idiv   edi
   140019444:	xor    edx,DWORD PTR [rcx-0x73d70009]
   14001944a:	idiv   bh
   14001944c:	sub    BYTE PTR [rdi+rsi*8-0x973d501],cl
   140019453:	jmp    FWORD PTR [rdx]
   140019455:	mov    esi,esi
   140019457:	jmp    FWORD PTR [rdx]
   140019459:	mov    esi,esi
   14001945b:	jmp    FWORD PTR [rdx]
   14001945d:	mov    dh,dh
   14001945f:	jmp    FWORD PTR [rdx]
   140019461:	mov    dh,dh
   140019463:	jmp    FWORD PTR [rdx]
   140019465:	mov    esi,esi
   140019467:	call   FWORD PTR [rdi]
   140019469:	test   edi,esi
   14001946b:	jmp    QWORD PTR [rbp-0x57]
   14001946e:	repnz (bad) 
   140019470:	(bad)  
   140019471:	mov    edi,0xb8d4f894
   140019476:	jne    0x140019466
   140019478:	jmp    0x14001944f
   14001947a:	movabs ds:0xbee4f6e69cd0e7e8,al
   140019483:	icebp  
   140019484:	shl    BYTE PTR [rbx-0x452200c1],1
   14001948a:	je     0x140019473
   14001948c:	out    dx,al
   14001948d:	fidiv  DWORD PTR [rax+0x3398c6ee]
   140019493:	call   rdi
   140019495:	mov    cl,0x6a
   140019497:	call   0x124c17690
   14001949c:	iret   
   14001949d:	movabs eax,ds:0x6495c9e1ff3c
	...
   1400194c6:	add    BYTE PTR [rax],al
   1400194c8:	int3   
   1400194c9:	lods   eax,DWORD PTR ds:[rsi]
   1400194ca:	pop    rdi
   1400194cb:	(bad)  
   1400194cc:	(bad)  
   1400194cd:	fnstenv [rdx-0x3b1c0e46]
   1400194d3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400194d4:	icebp  
   1400194d5:	jrcxz  0x14001949b
   1400194d7:	lods   al,BYTE PTR ds:[rsi]
   1400194d8:	icebp  
   1400194d9:	in     al,0xc6
   1400194db:	lods   eax,DWORD PTR ds:[rsi]
   1400194dc:	fcmovne st,st(1)
   1400194de:	movabs eax,ds:0xf9942bfff99627f8
   1400194e7:	jmp    QWORD PTR [rip+0x3bfff78e]        # 0x17c018c7b
   1400194ed:	cdq    
   1400194ee:	idiv   edi
   1400194f0:	mov    ebx,0xa7fff8d8
   1400194f5:	sar    edx,1
   1400194f7:	dec    DWORD PTR [rbp-0x5f]
   1400194fa:	clc    
   1400194fb:	push   QWORD PTR [rax]
   1400194fd:	xchg   edx,eax
   1400194fe:	idiv   edi
   140019500:	sub    eax,0x27fff790
   140019505:	(bad)  
   140019506:	idiv   edi
   140019508:	sub    cl,BYTE PTR [rsi-0x71d40009]
   14001950e:	idiv   edi
   140019510:	sub    ecx,DWORD PTR [rbp-0x72d4000a]
   140019516:	idiv   bh
   140019518:	sub    cl,BYTE PTR [rsi+rsi*8-0x973d501]
   14001951f:	jmp    FWORD PTR [rdx]
   140019521:	mov    esi,esi
   140019523:	jmp    QWORD PTR [rsi]
   140019525:	mov    esi,esi
   140019527:	(bad)  
   140019528:	ds pushf 
   14001952a:	sti    
   14001952b:	call   rdx
   14001952d:	retf   0xfdbb
   140019530:	shl    DWORD PTR [rbp-0x2f180d93],1
   140019536:	fwait
   140019537:	jmp    0x129a26a27
   14001953c:	(bad)  
   14001953d:	rcr    BYTE PTR [rdi-0x3f1a0715],cl
   140019543:	repz shl BYTE PTR [rdx-0x452200c3],1
   14001954a:	je     0x140019533
   14001954c:	out    dx,al
   14001954d:	fnstenv [rax+0x3398c6ee]
   140019553:	call   rdi
   140019555:	mov    cl,0x69
   140019557:	call   0x124c17750
   14001955c:	iret   
   14001955d:	movabs eax,ds:0x6596cae2ff3c
	...
   140019586:	add    BYTE PTR [rax],al
   140019588:	retf   
   140019589:	lods   al,BYTE PTR ds:[rsi]
   14001958a:	pop    rsi
   14001958b:	(bad)  
   14001958c:	(bad)  
   14001958d:	fnstenv [rdx-0x3d1d0f47]
   140019593:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019594:	lock loop 0x140019559
   140019597:	lods   eax,DWORD PTR ds:[rsi]
   140019598:	repnz in al,0xc6
   14001959b:	scas   eax,DWORD PTR es:[rdi]
   14001959c:	out    0xd0,al
   14001959e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001959f:	call   0x13f934563
   1400195a4:	sbb    al,0x98
   1400195a6:	(bad)  
   1400195a7:	jmp    FWORD PTR [rsp+rdx*4]
   1400195aa:	cli    
   1400195ab:	jmp    QWORD PTR [rdi+rcx*4]
   1400195ae:	idiv   edi
   1400195b0:	sbb    BYTE PTR [rax-0x74e2000a],cl
   1400195b6:	idiv   edi
   1400195b8:	(bad)  
   1400195b9:	(bad)  
   1400195ba:	idiv   edi
   1400195bc:	sub    dl,BYTE PTR [rax-0x6fd40009]
   1400195c2:	idiv   edi
   1400195c4:	sub    al,0x91
   1400195c6:	idiv   edi
   1400195c8:	sub    edx,DWORD PTR [rax-0x70d40009]
   1400195ce:	idiv   edi
   1400195d0:	sub    ecx,DWORD PTR [rdi-0x70d40009]
   1400195d6:	idiv   edi
   1400195d8:	sub    ecx,DWORD PTR [rsi-0x71d40009]
   1400195de:	idiv   bh
   1400195e0:	sub    BYTE PTR [rbx-0x6ad00009],cl
   1400195e6:	sti    
   1400195e7:	push   QWORD PTR [rbp+rdi*4-0x3d25033b]
   1400195ee:	mov    dh,ch
   1400195f0:	out    0xd1,eax
   1400195f2:	movabs al,ds:0xa6d7edebaddaefed
   1400195fb:	in     al,dx
   1400195fc:	(bad)  
   1400195fd:	rcr    BYTE PTR [rdi-0x411a0816],cl
   140019603:	repnz shl BYTE PTR [rdx-0x462300c3],1
   14001960a:	jae    0x1400195f3
   14001960c:	out    dx,al
   14001960d:	fidiv  DWORD PTR [rax+0x3398c6ee]
   140019613:	call   rsi
   140019615:	mov    al,0x69
   140019617:	call   0x124c17810
   14001961c:	iret   
   14001961d:	movabs eax,ds:0x6a9bcde3ff3c
	...
   140019646:	add    BYTE PTR [rax],al
   140019648:	retf   
   140019649:	lods   al,BYTE PTR ds:[rsi]
   14001964a:	pop    rsi
   14001964b:	(bad)  
   14001964c:	jmp    0x130bb4729
   140019651:	loop   0x140019615
   140019653:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019654:	lock loope 0x140019617
   140019657:	lods   eax,DWORD PTR ds:[rsi]
   140019658:	lock jrcxz 0x14001961e
   14001965b:	mov    al,0xe8
   14001965d:	shl    DWORD PTR [rdi-0x67361d1c],cl
   140019663:	out    dx,eax
   140019664:	mov    esp,0x21fea1b5
   140019669:	xchg   ebp,eax
   14001966a:	std    
   14001966b:	jmp    FWORD PTR [rdx]
   14001966d:	xchg   edi,eax
   14001966e:	(bad)  
   14001966f:	jmp    FWORD PTR [rsi]
   140019671:	xchg   esp,eax
   140019672:	idiv   edi
   140019674:	sub    al,0x93
   140019676:	idiv   edi
   140019678:	sub    al,0x93
   14001967a:	idiv   edi
   14001967c:	sub    al,0x93
   14001967e:	idiv   edi
   140019680:	sub    al,0x92
   140019682:	idiv   edi
   140019684:	sub    al,0x92
   140019686:	idiv   edi
   140019688:	sub    al,0x91
   14001968a:	idiv   edi
   14001968c:	sub    al,0x91
   14001968e:	idiv   edi
   140019690:	sub    edx,DWORD PTR [rax-0x6fd40009]
   140019696:	idiv   edi
   140019698:	sub    edx,DWORD PTR [rax-0x72db0009]
   14001969e:	clc    
   14001969f:	push   QWORD PTR [rbx]
   1400196a1:	cwde   
   1400196a2:	stc    
   1400196a3:	push   QWORD PTR [rbx-0x1e013740]
   1400196a9:	retf   0xf797
   1400196ac:	jrcxz  0x14001967b
   1400196ae:	fwait
   1400196af:	out    dx,eax
   1400196b0:	icebp  
   1400196b1:	fdiv   QWORD PTR [rbx-0x53251115]
   1400196b7:	jmp    0x1400196a7
   1400196b9:	fsubr  DWORD PTR [rdx-0x58291415]
   1400196bf:	(bad)  
   1400196c0:	mul    ebp
   1400196c2:	shl    edx,0xd0
   1400196c5:	movabs ds:0xdaefe673b9dcff3d,al
   1400196ce:	mov    al,0xed
   1400196d0:	(bad)  
   1400196d1:	cwde   
   1400196d2:	xor    edi,edi
   1400196d4:	xlat   BYTE PTR ds:[rbx]
   1400196d5:	mov    cl,0x69
   1400196d7:	call   0x124c178d0
   1400196dc:	iret   
   1400196dd:	movabs eax,ds:0x6a9bcde3ff3c
	...
   140019706:	add    BYTE PTR [rax],al
   140019708:	retf   0x5bac
   14001970b:	(bad)  
   14001970c:	jmp    0x130b947e9
   140019711:	loope  0x1400196d3
   140019713:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019714:	out    dx,eax
   140019715:	loopne 0x1400196d7
   140019717:	lods   al,BYTE PTR ds:[rsi]
   140019718:	lock loop 0x1400196dd
   14001971b:	scas   eax,DWORD PTR es:[rdi]
   14001971c:	out    0xd1,al
   14001971e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001971f:	call   0x123ad6d0d
   140019724:	(bad)  
   140019725:	xlat   BYTE PTR ds:[rbx]
   140019726:	scas   eax,DWORD PTR es:[rdi]
   140019727:	ffree  st(7)
   140019729:	mov    ecx,0x9634fc98
   14001972e:	hlt    
   14001972f:	jmp    QWORD PTR [rcx]
   140019731:	(bad)  
   140019732:	(bad)  
   140019733:	jmp    FWORD PTR [rsi+rdx*4]
   140019736:	cli    
   140019737:	jmp    FWORD PTR [rsi]
   140019739:	xchg   ebp,eax
   14001973a:	idiv   edi
   14001973c:	cs xchg esp,eax
   14001973e:	idiv   bh
   140019740:	sub    al,0x94
   140019742:	idiv   edi
   140019744:	sub    al,0x94
   140019746:	idiv   edi
   140019748:	sub    al,0x93
   14001974a:	idiv   edi
   14001974c:	sub    al,0x92
   14001974e:	idiv   bh
   140019750:	sub    al,0x92
   140019752:	idiv   edi
   140019754:	sub    DWORD PTR [rcx-0x6fe10008],edx
   14001975a:	(bad)  
   14001975b:	(bad)  
   14001975c:	ds sahf 
   14001975e:	std    
   14001975f:	dec    esi
   140019761:	enter  0xfebc,0xe0
   140019765:	retf   
   140019766:	cdq    
   140019767:	cmc    
   140019768:	out    0xd3,eax
   14001976a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001976b:	in     eax,dx
   14001976c:	icebp  
   14001976d:	fidiv  WORD PTR [rbp-0x4f241016]
   140019773:	jmp    0x140019764
   140019775:	fisubr DWORD PTR [rdi-0x52251115]
   14001977b:	jmp    0x140019769
   14001977d:	xlat   BYTE PTR ds:[rbx]
   14001977e:	stos   BYTE PTR es:[rdi],al
   14001977f:	(bad)  
   140019780:	clc    
   140019781:	out    0xc5,eax
   140019783:	repnz shl BYTE PTR [rdx-0x492500c3],1
   14001978a:	jo     0x140019775
   14001978c:	in     eax,dx
   14001978d:	fsubr  DWORD PTR [rbp+0x3398c6ee]
   140019793:	call   rdi
   140019795:	mov    cl,0x69
   140019797:	call   0x124c17990
   14001979c:	iret   
   14001979d:	movabs eax,ds:0x6a9bcde3ff3c
	...
   1400197c6:	add    BYTE PTR [rax],al
   1400197c8:	retf   
   1400197c9:	lods   al,BYTE PTR ds:[rsi]
   1400197ca:	pop    rbx
   1400197cb:	(bad)  
   1400197cc:	call   0x12fb948a8
   1400197d1:	loopne 0x140019793
   1400197d3:	movabs ds:0xafc2e1efacbfe0ef,eax
   1400197dc:	out    0xd1,al
   1400197de:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400197df:	call   0x126a86acb
   1400197e4:	repnz jrcxz 0x1400197a8
   1400197e7:	(bad)  
   1400197e8:	in     eax,dx
   1400197e9:	fnstenv [rbx-0x65351f26]
   1400197ef:	lock xchg edx,eax
   1400197f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400197f2:	scas   eax,DWORD PTR es:[rdi]
   1400197f3:	jmp    QWORD PTR [rax]
   1400197f5:	xchg   ebp,eax
   1400197f6:	(bad)  
   1400197f7:	call   FWORD PTR [rsi]
   1400197f9:	cwde   
   1400197fa:	(bad)  
   1400197fb:	jmp    QWORD PTR [rax]
   1400197fd:	cwde   
   1400197fe:	(bad)  
   1400197ff:	jmp    QWORD PTR [rbx]
   140019801:	xchg   edi,eax
   140019802:	(bad)  
   140019803:	jmp    QWORD PTR [rip+0x23ffff96]        # 0x16401979f
   140019809:	xchg   ebp,eax
   14001980a:	(bad)  
   14001980b:	call   FWORD PTR [rdi]
   14001980d:	xchg   esp,eax
   14001980e:	(bad)  
   14001980f:	call   FWORD PTR [rip+0x25ffff94]        # 0x1660197a9
   140019815:	xchg   esi,eax
   140019816:	(bad)  
   140019817:	call   QWORD PTR [rsi-0x1b002e4e]
   14001981d:	(bad)  
   14001981e:	test   al,0xfa
   140019820:	in     al,0xd0
   140019822:	movabs al,ds:0xb6deefebb3dceef0
   14001982b:	jmp    0x14001981c
   14001982d:	fdiv   QWORD PTR [rbx-0x4d241015]
   140019833:	jmp    0x140019824
   140019835:	(bad)  [rax-0x4f251015]
   14001983b:	jmp    0x14001982a
   14001983d:	fldcw  WORD PTR [rbp-0x38170616]
   140019843:	repnz shl BYTE PTR [rdx-0x4a2700c3],1
   14001984a:	outs   dx,DWORD PTR ds:[rsi]
   14001984b:	(bad)  
   14001984c:	jmp    0x140019824
   14001984e:	stos   DWORD PTR es:[rdi],eax
   14001984f:	out    dx,eax
   140019850:	(bad)  
   140019851:	cwde   
   140019852:	xor    edi,edi
   140019854:	xlat   BYTE PTR ds:[rbx]
   140019855:	mov    cl,0x69
   140019857:	call   0x124c17a50
   14001985c:	iret   
   14001985d:	movabs eax,ds:0x6a9bcde3ff3c
	...
   140019886:	add    BYTE PTR [rax],al
   140019888:	retf   
   140019889:	stos   DWORD PTR es:[rdi],eax
   14001988a:	pop    rbx
   14001988b:	(bad)  
   14001988c:	call   0x12fb94867
   140019891:	loopne 0x140019852
   140019893:	movabs ds:0xaec2e1efabbddfed,eax
   14001989c:	out    0xcf,al
   14001989e:	movabs ds:0xbee0f1e6a5d1e6e8,al
   1400198a7:	(bad)  
   1400198a8:	icebp  
   1400198a9:	loopne 0x140019869
   1400198ab:	xlat   BYTE PTR ds:[rbx]
   1400198ac:	out    dx,eax
   1400198ad:	fnsave [rdi-0x5e301923]
   1400198b3:	mul    edi
   1400198b5:	shr    DWORD PTR [rcx-0x5b443a0b],cl
   1400198bb:	cli    
   1400198bc:	(bad)  
   1400198bd:	movabs ds:0x9142ffcda171ffb1,eax
   1400198c6:	in     al,0xff
   1400198c8:	imul   ebx,DWORD PTR [rdi-0x556e002c],0xbdc3ffc0
   1400198d2:	lods   al,BYTE PTR ds:[rsi]
   1400198d3:	cld    
   1400198d4:	out    0xd1,al
   1400198d6:	stos   DWORD PTR es:[rdi],eax
   1400198d7:	imul   ebx
   1400198d9:	fldcw  WORD PTR [rdi-0x4f26140f]
   1400198df:	in     al,dx
   1400198e0:	lock fistp QWORD PTR [rax-0x48210f16]
   1400198e7:	jmp    0x1400198d8
   1400198e9:	fnsave [rsi-0x4a221015]
   1400198ef:	jmp    0x1400198e0
   1400198f1:	fdiv   QWORD PTR [rbx+rbp*8-0x144c2311]
   1400198f8:	out    dx,eax
   1400198f9:	(bad)  [rcx-0x4f251115]
   1400198ff:	(bad)  
   140019900:	stc    
   140019901:	jmp    0xe2d28bcf
   140019906:	cmp    eax,0x6db2d5ff
   14001990b:	jmp    0x1400198f6
   14001990d:	shl    DWORD PTR [rsi+0x3398c6f1],cl
   140019913:	call   rsi
   140019915:	mov    al,0x69
   140019917:	call   0x124c17b10
   14001991c:	fsubr  DWORD PTR [rdx-0x321c00ba]
   140019922:	fwait
   140019923:	push   0x0
	...
   140019945:	add    BYTE PTR [rax],al
   140019947:	add    dl,cl
   140019949:	stos   DWORD PTR es:[rdi],eax
   14001994a:	pop    rax
   14001994b:	(bad)  
   14001994c:	call   0x12eb84927
   140019951:	fidivr WORD PTR [rbp-0x4421135e]
   140019957:	stos   BYTE PTR es:[rdi],al
   140019958:	out    dx,al
   140019959:	fistp  QWORD PTR [rdi-0x5d311952]
   14001995f:	jmp    0x125a76b4b
   140019964:	icebp  
   140019965:	loopne 0x140019924
   140019967:	(bad)  
   140019968:	lock fistp QWORD PTR [rdi+rdx*8-0x22442010]
   140019970:	in     al,dx
   140019971:	(bad)  
   140019972:	lods   al,BYTE PTR ds:[rsi]
   140019973:	imul   dh
   140019975:	(bad)  [rbp+rbp*8-0x16472210]
   14001997c:	out    dx,al
   14001997d:	fdiv   QWORD PTR [rbp-0x4c241214]
   140019983:	out    dx,al
   140019984:	out    dx,al
   140019985:	fdiv   QWORD PTR [rax+rsi*8-0x114a2212]
   14001998c:	out    dx,eax
   14001998d:	fnsave [rdi-0x48221014]
   140019993:	(bad)  
   140019994:	out    dx,eax
   140019995:	fnsave [rdi-0x46200e17]
   14001999b:	jmp    0x12abb7990
   1400199a0:	lock fidiv WORD PTR [rdi-0x48210f15]
   1400199a7:	jmp    0x140019999
   1400199a9:	fnsave [rdi-0x49220f15]
   1400199af:	jmp    0x1400199a1
   1400199b1:	fnsave [rbp-0x4a230f15]
   1400199b7:	jmp    0x1400199a9
   1400199b9:	fdiv   QWORD PTR [rbx+rbp*8-0x164e2412]
   1400199c0:	stc    
   1400199c1:	jmp    0xe2d28c8f
   1400199c6:	cmp    eax,0x69afd4ff
   1400199cb:	bnd call 0x106f839a1
   1400199d1:	xchg   edi,eax
   1400199d2:	xor    edi,edi
   1400199d4:	fidiv  DWORD PTR [rcx-0x3011049e]
   1400199da:	cmp    edx,0xffffffe7
   1400199dd:	mov    esp,0xffffff5a
   1400199e2:	inc    DWORD PTR [rbp+0x0]
	...
   140019a05:	add    BYTE PTR [rax],al
   140019a07:	add    dl,dl
   140019a09:	mov    ch,0x6e
   140019a0b:	(bad)  
   140019a0c:	jmp    0x135cb4bea
   140019a11:	in     al,dx
   140019a12:	fadd   st,st(5)
   140019a14:	imul   dh
   140019a16:	fmul   st(7),st
   140019a18:	clc    
   140019a19:	lock loope 0x1400199f0
   140019a1c:	cmc    
   140019a1d:	(bad)  
   140019a1e:	(bad)  
   140019a1f:	jmp    0x140019a14
   140019a21:	call   0x12cf88df7
   140019a26:	fsubr  st,st(3)
   140019a28:	imul   ah
   140019a2a:	xlat   BYTE PTR ds:[rbx]
   140019a2b:	jmp    0x140019a23
   140019a2d:	in     al,dx
   140019a2e:	xlat   BYTE PTR ds:[rbx]
   140019a2f:	(bad)  
   140019a30:	cmc    
   140019a31:	(bad)  
   140019a32:	(bad)  
   140019a33:	icebp  
   140019a34:	hlt    
   140019a35:	call   0x127f68f09
   140019a3a:	int    0xf3
   140019a3c:	hlt    
   140019a3d:	out    0xcc,eax
   140019a3f:	repz hlt 
   140019a41:	out    0xcc,eax
   140019a43:	repz hlt 
   140019a45:	out    0xcc,eax
   140019a47:	repz hlt 
   140019a49:	out    0xcb,eax
   140019a4b:	repz repnz jrcxz 0x140019a14
   140019a4f:	icebp  
   140019a50:	repnz jrcxz 0x140019a19
   140019a53:	repnz repnz jrcxz 0x140019a1d
   140019a57:	repnz repnz jrcxz 0x140019a21
   140019a5b:	repnz repnz jrcxz 0x140019a24
   140019a5f:	repnz icebp 
   140019a61:	loope  0x140019a25
   140019a63:	icebp  
   140019a64:	icebp  
   140019a65:	loope  0x140019a29
   140019a67:	repnz icebp 
   140019a69:	loope  0x140019a2b
   140019a6b:	icebp  
   140019a6c:	icebp  
   140019a6d:	loope  0x140019a2f
   140019a6f:	repnz icebp 
   140019a71:	fistp  QWORD PTR [rsi-0x44210f0f]
   140019a77:	lock out dx,eax
   140019a79:	fnstsw WORD PTR [rax-0x4b231210]
   140019a7f:	in     eax,dx
   140019a80:	stc    
   140019a81:	(bad)  
   140019a82:	retf   0xd8f3
   140019a85:	stos   BYTE PTR es:[rdi],al
   140019a86:	rex.RXB call r13
   140019a89:	mov    dl,0x6f
   140019a8b:	jmp    0x140019a75
   140019a8d:	rcr    BYTE PTR [rdi+0x3398c6f6],1
   140019a93:	call   rdx
   140019a95:	stos   DWORD PTR es:[rdi],eax
   140019a96:	rex.WRB cmc 
   140019a98:	shr    DWORD PTR [rbx-0x4a2913b1],1
   140019a9e:	ins    DWORD PTR es:[rdi],dx
   140019a9f:	nop
   140019aa0:	(bad)  
   140019aa1:	(bad)  
   140019aa2:	call   FWORD PTR [rbx]
	...
   140019ac8:	int3   
   140019ac9:	lods   eax,DWORD PTR ds:[rsi]
   140019aca:	(bad)  
   140019acb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019acc:	(bad)  
   140019acd:	mov    ecx,0xb4d5f679
   140019ad2:	ins    BYTE PTR es:[rdi],dx
   140019ad3:	repz (bad) 
   140019ad5:	mov    dh,0x6e
   140019ad7:	repz xlat BYTE PTR ds:[rbx]
   140019ad9:	mov    dh,0x70
   140019adb:	cmc    
   140019adc:	fdivr  DWORD PTR [rcx-0x44250a8e]
   140019ae2:	js     0x140019ae0
   140019ae4:	ffree  st(0)
   140019ae6:	cmp    ebx,0xfc86c4de
   140019aec:	ffreep st(4)
   140019aee:	xchg   ebp,edi
   140019af0:	ffreep st(5)
   140019af2:	mov    esp,edi
   140019af4:	loope  0x140019abd
   140019af6:	mov    ?,esp
   140019af8:	in     al,0xcd
   140019afa:	xchg   edi,eax
   140019afb:	std    
   140019afc:	in     eax,0xce
   140019afe:	(bad)  
   140019aff:	cld    
   140019b00:	in     eax,0xcf
   140019b02:	popf   
   140019b03:	cld    
   140019b04:	out    0xd1,eax
   140019b06:	sahf   
   140019b07:	cld    
   140019b08:	call   0x12afd3dde
   140019b0d:	(bad)  
   140019b0e:	stos   BYTE PTR es:[rdi],al
   140019b0f:	sti    
   140019b10:	in     eax,dx
   140019b11:	fidiv  DWORD PTR [rdx-0x4e251306]
   140019b17:	sti    
   140019b18:	in     eax,dx
   140019b19:	fnstenv [rdx-0x4c241106]
   140019b1f:	cli    
   140019b20:	out    dx,eax
   140019b21:	fidivr WORD PTR [rbx-0x401f0e07]
   140019b27:	stc    
   140019b28:	repnz in al,0xc5
   140019b2b:	stc    
   140019b2c:	repnz in al,0xc6
   140019b2f:	clc    
   140019b30:	repnz in eax,0xc7
   140019b33:	clc    
   140019b34:	repz out 0xca,al
   140019b37:	clc    
   140019b38:	hlt    
   140019b39:	call   0x127f7930b
   140019b3e:	int3   
   140019b3f:	hlt    
   140019b40:	stc    
   140019b41:	jmp    0xf5e39a0e
   140019b46:	push   rbx
   140019b47:	call   rbx
   140019b49:	stos   BYTE PTR es:[rdi],al
   140019b4a:	rex.WB clc 
   140019b4c:	shl    BYTE PTR [rax+rax*2+0x54a9d0fc],cl
   140019b53:	jge    0x140019b54
   140019b55:	(bad)  
   140019b56:	inc    DWORD PTR [rsi]
	...
   140019b8c:	call   0x1141a3b62
   140019b91:	ret    0x3a8e
   140019b94:	fcmove st,st(0)
   140019b96:	nop
   140019b97:	(bad)  
   140019b98:	(bad)  
   140019b99:	sar    BYTE PTR [rdi+0x4b],0xd9
   140019b9d:	ret    0x5783
   140019ba0:	xlat   BYTE PTR ds:[rbx]
   140019ba1:	mov    edi,0xb9d4637b
   140019ba6:	outs   dx,BYTE PTR ds:[rsi]
   140019ba7:	gs iret 
   140019ba9:	scas   eax,DWORD PTR es:[rdi]
   140019baa:	pop    rax
   140019bab:	addr32 (bad) 
   140019bad:	scas   al,BYTE PTR es:[rdi]
   140019bae:	push   rbp
   140019baf:	ins    BYTE PTR es:[rdi],dx
   140019bb0:	iret   
   140019bb1:	scas   eax,DWORD PTR es:[rdi]
   140019bb2:	pop    rcx
   140019bb3:	ins    DWORD PTR es:[rdi],dx
   140019bb4:	(bad)  
   140019bb5:	scas   al,BYTE PTR es:[rdi]
   140019bb6:	pop    rcx
   140019bb7:	jg     0x140019b87
   140019bb9:	lods   eax,DWORD PTR ds:[rsi]
   140019bba:	pop    rcx
   140019bbb:	test   esi,ecx
   140019bbd:	lods   eax,DWORD PTR ds:[rsi]
   140019bbe:	pop    rcx
   140019bbf:	nop
   140019bc0:	(bad)  
   140019bc1:	lods   eax,DWORD PTR ds:[rsi]
   140019bc2:	pop    rcx
   140019bc3:	xchg   esp,eax
   140019bc4:	int    0xac
   140019bc6:	pop    rcx
   140019bc7:	fwait
   140019bc8:	shl    DWORD PTR [rbp-0x56325a96],cl
   140019bce:	push   rbx
   140019bcf:	mov    bh,0xd0
   140019bd1:	mov    cl,0x65
   140019bd3:	mov    al,0xcc
   140019bd5:	test   al,0x53
   140019bd7:	(bad)  
   140019bd8:	(bad)  
   140019bd9:	test   eax,0xa9cecd56
   140019bde:	push   rbp
   140019bdf:	ror    edi,1
   140019be1:	test   eax,0xa9ced655
   140019be6:	push   rbp
   140019be7:	(bad)  
   140019be9:	test   eax,0xa9cfe054
   140019bee:	push   rsi
   140019bef:	in     eax,0xd0
   140019bf1:	stos   DWORD PTR es:[rdi],eax
   140019bf2:	pop    rdx
   140019bf3:	repnz iret 
   140019bf5:	stos   BYTE PTR es:[rdi],al
   140019bf6:	pop    rax
   140019bf7:	repz (bad) 
   140019bf9:	test   al,0x54
   140019bfb:	hlt    
   140019bfc:	int3   
   140019bfd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019bfe:	rex.WB
   140019bff:	repz enter 0x3a9c,0xef
   140019c04:	(bad)
   140019c07:	test   BYTE PTR [rax],al
	...
   14001a17d:	add    BYTE PTR [rax],al
   14001a17f:	add    bh,bh
   14001a181:	(bad)  
   14001a182:	inc    DWORD PTR [rax+0xff0f]
   14001a188:	(bad)  
   14001a189:	inc    eax
   14001a18b:	add    BYTE PTR [rdi],al
   14001a18d:	inc    DWORD PTR [rax]
   14001a18f:	add    bh,bh
   14001a191:	lock add BYTE PTR [rax],al
   14001a194:	add    edi,edi
   14001a196:	add    BYTE PTR [rax],al
   14001a198:	cld    
   14001a199:	add    BYTE PTR [rax],al
   14001a19b:	add    BYTE PTR [rax],al
   14001a19d:	inc    DWORD PTR [rax]
   14001a19f:	add    al,dh
   14001a1a1:	add    BYTE PTR [rax],al
   14001a1a3:	add    BYTE PTR [rax],al
   14001a1a5:	jg     0x14001a1a7
   14001a1a7:	add    al,al
   14001a1a9:	add    BYTE PTR [rax],al
   14001a1ab:	add    BYTE PTR [rax],al
   14001a1ad:	(bad)  
   14001a1ae:	add    BYTE PTR [rax],al
   14001a1b0:	rol    BYTE PTR [rax],0x0
   14001a1b3:	add    BYTE PTR [rax],al
   14001a1b5:	(bad)  
   14001a1b6:	add    BYTE PTR [rax],al
   14001a1b8:	rol    BYTE PTR [rax],0x0
   14001a1bb:	add    BYTE PTR [rax],al
   14001a1bd:	sldt   WORD PTR [rax]
   14001a1c0:	rol    BYTE PTR [rax],0x0
   14001a1c3:	add    BYTE PTR [rax],al
   14001a1c5:	(bad)  
   14001a1c6:	add    BYTE PTR [rax],al
   14001a1c8:	rol    BYTE PTR [rax],0x0
   14001a1cb:	add    BYTE PTR [rax],al
   14001a1cd:	add    DWORD PTR [rax],eax
   14001a1cf:	add    al,al
   14001a1d1:	add    BYTE PTR [rax],al
   14001a1d3:	add    BYTE PTR [rax],al
   14001a1d5:	add    BYTE PTR [rax],al
   14001a1d7:	add    al,al
   14001a1d9:	add    BYTE PTR [rax],al
   14001a1db:	add    BYTE PTR [rax],al
   14001a1dd:	jns    0x14001a1df
   14001a1df:	add    al,al
   14001a1e1:	add    BYTE PTR [rax],al
   14001a1e3:	add    BYTE PTR [rax],al
   14001a1e5:	jg     0x14001a1e7
   14001a1e7:	add    al,al
   14001a1e9:	add    BYTE PTR [rax],al
   14001a1eb:	add    BYTE PTR [rax],al
   14001a1ed:	jg     0x14001a1ef
   14001a1ef:	add    al,al
   14001a1f1:	add    BYTE PTR [rax],al
   14001a1f3:	add    BYTE PTR [rax],al
   14001a1f5:	jg     0x14001a1f7
   14001a1f7:	add    al,al
   14001a1f9:	add    BYTE PTR [rax],al
   14001a1fb:	add    BYTE PTR [rax],al
   14001a1fd:	jg     0x14001a1ff
   14001a1ff:	add    al,al
   14001a201:	add    BYTE PTR [rax],al
   14001a203:	add    BYTE PTR [rax],al
   14001a205:	jg     0x14001a207
   14001a207:	add    al,al
   14001a209:	add    BYTE PTR [rax],al
   14001a20b:	add    BYTE PTR [rax],al
   14001a20d:	jg     0x14001a20f
   14001a20f:	add    al,al
   14001a211:	add    BYTE PTR [rax],al
   14001a213:	add    BYTE PTR [rax],al
   14001a215:	jg     0x14001a217
   14001a217:	add    al,al
   14001a219:	add    BYTE PTR [rax],al
   14001a21b:	add    BYTE PTR [rax],al
   14001a21d:	jg     0x14001a21f
   14001a21f:	add    al,al
   14001a221:	add    BYTE PTR [rax],al
   14001a223:	add    BYTE PTR [rax],al
   14001a225:	jg     0x14001a227
   14001a227:	add    al,al
   14001a229:	add    BYTE PTR [rax],al
   14001a22b:	add    BYTE PTR [rax],al
   14001a22d:	jg     0x14001a22f
   14001a22f:	add    al,al
   14001a231:	add    BYTE PTR [rax],al
   14001a233:	add    BYTE PTR [rax],al
   14001a235:	jg     0x14001a237
   14001a237:	add    al,al
   14001a239:	add    BYTE PTR [rax],al
   14001a23b:	add    BYTE PTR [rax],al
   14001a23d:	jg     0x14001a23f
   14001a23f:	add    al,al
   14001a241:	add    BYTE PTR [rax],al
   14001a243:	add    BYTE PTR [rax],al
   14001a245:	jg     0x14001a247
   14001a247:	add    al,al
   14001a249:	add    BYTE PTR [rax],al
   14001a24b:	add    BYTE PTR [rax],al
   14001a24d:	jg     0x14001a24f
   14001a24f:	add    al,al
   14001a251:	add    BYTE PTR [rax],al
   14001a253:	add    BYTE PTR [rax],al
   14001a255:	jg     0x14001a257
   14001a257:	add    al,al
   14001a259:	add    BYTE PTR [rax],al
   14001a25b:	add    BYTE PTR [rax],al
   14001a25d:	jg     0x14001a25f
   14001a25f:	add    al,al
   14001a261:	add    BYTE PTR [rax],al
   14001a263:	add    BYTE PTR [rax],al
   14001a265:	jg     0x14001a267
   14001a267:	add    al,al
   14001a269:	add    BYTE PTR [rax],al
   14001a26b:	add    BYTE PTR [rax],al
   14001a26d:	jg     0x14001a26f
   14001a26f:	add    al,al
   14001a271:	add    BYTE PTR [rax],al
   14001a273:	add    BYTE PTR [rax],al
   14001a275:	jg     0x14001a277
   14001a277:	add    al,al
   14001a279:	add    BYTE PTR [rax],al
   14001a27b:	add    BYTE PTR [rax],al
   14001a27d:	jg     0x14001a27f
   14001a27f:	add    al,al
   14001a281:	add    BYTE PTR [rax],al
   14001a283:	add    BYTE PTR [rax],al
   14001a285:	jg     0x14001a287
   14001a287:	add    al,al
   14001a289:	add    BYTE PTR [rax],al
   14001a28b:	add    BYTE PTR [rax],al
   14001a28d:	jg     0x14001a28f
   14001a28f:	add    al,al
   14001a291:	add    BYTE PTR [rax],al
   14001a293:	add    BYTE PTR [rax],al
   14001a295:	jg     0x14001a297
   14001a297:	add    al,al
   14001a299:	add    BYTE PTR [rax],al
   14001a29b:	add    BYTE PTR [rax],al
   14001a29d:	jg     0x14001a29f
   14001a29f:	add    al,al
   14001a2a1:	add    BYTE PTR [rax],al
   14001a2a3:	add    BYTE PTR [rax],al
   14001a2a5:	jg     0x14001a2a7
   14001a2a7:	add    al,al
   14001a2a9:	add    BYTE PTR [rax],al
   14001a2ab:	add    BYTE PTR [rax],al
   14001a2ad:	jg     0x14001a2af
   14001a2af:	add    al,al
   14001a2b1:	add    BYTE PTR [rax],al
   14001a2b3:	add    BYTE PTR [rax],al
   14001a2b5:	jg     0x14001a2b7
   14001a2b7:	add    al,al
   14001a2b9:	add    BYTE PTR [rax],al
   14001a2bb:	add    BYTE PTR [rbx],al
   14001a2bd:	inc    DWORD PTR [rax]
   14001a2bf:	add    al,ah
   14001a2c1:	add    BYTE PTR [rax],al
   14001a2c3:	add    BYTE PTR [rdi],bh
   14001a2c5:	inc    DWORD PTR [rax]
   14001a2c7:	add    bh,bh
   14001a2c9:	(bad)  
   14001a2ca:	(bad)  
   14001a2cb:	(bad)  
   14001a2cc:	(bad)  
   14001a2cd:	inc    DWORD PTR [rax]
   14001a2cf:	add    bh,bh
   14001a2d1:	(bad)  
   14001a2d2:	(bad)  
   14001a2d3:	(bad)  
   14001a2d4:	(bad)  
   14001a2d5:	inc    DWORD PTR [rax]
   14001a2d7:	add    bh,bh
   14001a2d9:	(bad)  
   14001a2da:	(bad)  
   14001a2db:	(bad)  
   14001a2dc:	(bad)  
   14001a2dd:	inc    DWORD PTR [rax]
   14001a2df:	add    bh,bh
   14001a2e1:	(bad)  
   14001a2e2:	(bad)  
   14001a2e3:	(bad)  
   14001a2e4:	(bad)  
   14001a2e5:	inc    DWORD PTR [rax]
   14001a2e7:	add    bh,bh
   14001a2e9:	(bad)  
   14001a2ea:	(bad)  
   14001a2eb:	(bad)  
   14001a2ec:	(bad)  
   14001a2ed:	inc    DWORD PTR [rax]
   14001a2ef:	add    bh,bh
   14001a2f1:	(bad)  
   14001a2f2:	(bad)  
   14001a2f3:	(bad)  
   14001a2f4:	(bad)  
   14001a2f5:	inc    DWORD PTR [rax]
   14001a2f7:	add    bh,bh
   14001a2f9:	(bad)  
   14001a2fa:	(bad)  
   14001a2fb:	(bad)  
   14001a2fc:	(bad)  
   14001a2fd:	inc    DWORD PTR [rax]
   14001a2ff:	add    BYTE PTR [rax],ch
   14001a301:	add    BYTE PTR [rax],al
   14001a303:	add    BYTE PTR [rax],ah
   14001a305:	add    BYTE PTR [rax],al
   14001a307:	add    BYTE PTR [rax+0x0],al
   14001a30a:	add    BYTE PTR [rax],al
   14001a30c:	add    DWORD PTR [rax],eax
   14001a30e:	and    BYTE PTR [rax],al
   14001a310:	add    BYTE PTR [rax],al
   14001a312:	add    BYTE PTR [rax],al
   14001a314:	adc    BYTE PTR [rax],0x0
	...
   14001a3d3:	add    bh,bh
   14001a3d5:	(bad)  
   14001a3d6:	inc    DWORD PTR [rcx]
	...
   14001a3e0:	(bad)  
   14001a3e1:	push   rsi
   14001a3e3:	add    DWORD PTR [rax],eax
   14001a3e5:	add    BYTE PTR [rax],al
   14001a3e7:	add    bh,bh
   14001a3e9:	(bad)  
   14001a3ea:	jmp    0x12701a2f2
   14001a3ef:	add    edi,edi
   14001a3f1:	jmp    rax
   14001a3f3:	add    eax,0x6dbffff
   14001a3f8:	jmp    0x14001a3da
   14001a3fa:	mov    al,0xd
   14001a3fc:	sar    DWORD PTR [rbx-0x593de176],1
   14001a402:	jae    0x14001a42f
   14001a404:	scas   al,BYTE PTR es:[rdi]
   14001a405:	xchg   edx,eax
   14001a406:	movsxd eax,DWORD PTR [rdx]
	...
   14001a43c:	scas   eax,DWORD PTR es:[rdi]
   14001a43d:	xchg   esp,eax
   14001a43e:	add    DWORD PTR gs:[rbp-0x41fe9567],esi
   14001a445:	movabs ds:0x718d013b68830374,al
   14001a44e:	rex.X add eax,0x6497894
   14001a454:	sahf   
   14001a455:	(bad)  
   14001a456:	push   rbx
   14001a457:	or     ch,BYTE PTR [rdi-0x48eda770]
   14001a45d:	cwde   
   14001a45e:	(bad)  
   14001a45f:	sbb    al,0xc2
   14001a461:	movabs ds:0x94b3455a92b13269,eax
   14001a46a:	pop    rsp
   14001a46b:	pop    rcx
   14001a46c:	mov    bl,0x94
   14001a46e:	pop    rsp
   14001a46f:	jno    0x14001a42a
   14001a471:	(bad)  
   14001a472:	(bad)  
   14001a473:	fwait
   14001a474:	mov    esp,0xbeb1669d
   14001a479:	movabs al,ds:0x9ab8c96ea2bfc36b
   14001a482:	gs (bad) 
   14001a484:	mov    dh,0x92
   14001a486:	rex.X mov spl,0x0
	...
   14001a4ad:	add    BYTE PTR [rax],al
   14001a4af:	add    BYTE PTR [rbx-0x67fe8f61],bh
   14001a4b5:	jl     0x14001a505
   14001a4b7:	(bad)  
   14001a4b8:	scas   al,BYTE PTR es:[rdi]
   14001a4b9:	(bad)  
   14001a4ba:	push   rsi
   14001a4bb:	(bad)  
   14001a4bc:	mov    bl,0x94
   14001a4be:	pop    rbx
   14001a4bf:	and    bh,BYTE PTR [rsp+rbx*4-0x5d3ed09e]
   14001a4c6:	push   0x5a97b741
   14001a4cb:	gs mov edx,0xbd7a5e99
   14001a4d1:	lahf   
   14001a4d2:	imul   edx,DWORD PTR [rbp-0x55965f43],0xbd6da1bd
   14001a4dc:	mov    edi,0xc7cf70a3
   14001a4e1:	stos   DWORD PTR es:[rdi],eax
   14001a4e2:	jns    0x14001a4bc
   14001a4e4:	shl    BYTE PTR [rsp+rax*4-0x77492e1f],1
   14001a4eb:	in     al,0xd1
   14001a4ed:	mov    bh,0x8a
   14001a4ef:	out    0xd5,eax
   14001a4f1:	mov    esi,0xbfd6e495
   14001a4f6:	cdq    
   14001a4f7:	in     al,0xd7
   14001a4f9:	rcr    BYTE PTR [rdx-0x643f281b],0xe4
   14001a500:	loope  0x14001a4ca
   14001a502:	popf   
   14001a503:	idiv   BYTE PTR [rsi-0x2c01b067]
   14001a509:	mov    ch,0x7b
   14001a50b:	in     eax,0xb2
   14001a50d:	lea    eax,[rcx-0x3a]
   14001a510:	cmp    bh,BYTE PTR [rdx]
   14001a512:	cmp    cl,BYTE PTR [rcx]
   14001a514:	add    BYTE PTR [rax],al
   14001a516:	add    BYTE PTR [rax],al
   14001a518:	cmp    bh,BYTE PTR [rdx]
   14001a51a:	cmp    al,BYTE PTR [rdx]
	...
   14001a530:	mov    dl,0x93
   14001a532:	pop    rcx
   14001a533:	sahf   
   14001a534:	mov    edx,0xbcad699d
   14001a539:	movabs al,ds:0xa4c0d36d9fbcc26c
   14001a542:	jae    0x14001a51f
   14001a544:	(bad)  
   14001a545:	lods   al,BYTE PTR ds:[rsi]
   14001a546:	jnp    0x14001a528
   14001a548:	shl    BYTE PTR [rsi-0x442a1975],1
   14001a54e:	xchg   edx,eax
   14001a54f:	call   0x12897662b
   14001a554:	fcmovnb st,st(4)
   14001a556:	pushf  
   14001a557:	call   0x129a26d3b
   14001a55c:	faddp  st(7),st
   14001a55e:	movabs eax,ds:0x9bc1d8e69ec4dbe9
   14001a567:	in     al,0xd9
   14001a569:	rcr    DWORD PTR [rbx-0x5c341d1e],0xe5
   14001a570:	loopne 0x14001a53a
   14001a572:	movabs eax,ds:0x9ec8e0e79fc7e0e5
   14001a57b:	(bad)  
   14001a57c:	ffreep st(7)
   14001a57e:	popf   
   14001a57f:	jmp    0x134a0716a
   14001a584:	mov    esp,0xe2fe4e98
   14001a589:	retf   
   14001a58a:	movabs ds:0x79acc8ff4f99bedd,eax
   14001a593:	loop   0x14001a557
   14001a595:	popf   
   14001a596:	push   rbx
   14001a597:	mov    al,0x3a
   14001a599:	cmp    bh,BYTE PTR [rdx]
   14001a59b:	sub    bh,BYTE PTR [rdx]
   14001a59d:	cmp    bh,BYTE PTR [rdx]
   14001a59f:	add    al,BYTE PTR [rax]
	...
   14001a5ad:	add    BYTE PTR [rax],al
   14001a5af:	add    ah,cl
   14001a5b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a5b2:	pop    rbx
   14001a5b3:	(bad)  
   14001a5b5:	ret    
   14001a5b6:	xchg   esi,eax
   14001a5b7:	std    
   14001a5b8:	jmp    0x123e25590
   14001a5bd:	int    0xa9
   14001a5bf:	loopne 0x14001a5a7
   14001a5c1:	iret   
   14001a5c2:	stos   BYTE PTR es:[rdi],al
   14001a5c3:	loop   0x14001a5a7
   14001a5c5:	int3   
   14001a5c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a5c7:	in     al,0xdc
   14001a5c9:	(bad)  
   14001a5ca:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a5cb:	loope  0x14001a5af
   14001a5cd:	int    0xaa
   14001a5cf:	fucomip st,st(4)
   14001a5d1:	(bad)  
   14001a5d2:	mov    dl,0xe6
   14001a5d4:	repz fdiv QWORD PTR [rbp-0x48200813]
   14001a5db:	icebp  
   14001a5dc:	neg    dh
   14001a5de:	mov    bh,0xee
   14001a5e0:	out    dx,al
   14001a5e1:	xlat   BYTE PTR ds:[rbx]
   14001a5e2:	mov    al,0xe9
   14001a5e4:	jmp    0x14001a5ba
   14001a5e6:	lods   eax,DWORD PTR ds:[rsi]
   14001a5e7:	call   0x127a570cd
   14001a5ec:	call   0x127ec4ac0
   14001a5f1:	int    0xa2
   14001a5f3:	in     eax,dx
   14001a5f4:	in     al,0xca
   14001a5f6:	lahf   
   14001a5f7:	in     eax,dx
   14001a5f8:	in     al,0xca
   14001a5fa:	lahf   
   14001a5fb:	out    dx,al
   14001a5fc:	jrcxz  0x14001a5c7
   14001a5fe:	lahf   
   14001a5ff:	jmp    0x14001a5eb
   14001a601:	iret   
   14001a602:	movabs ds:0xb7def5fe4f99bef6,al
   14001a60b:	cmc    
   14001a60c:	mov    ebp,0xf5ff4e98
   14001a611:	fidiv  WORD PTR [rdi+0x539dc2ee]
   14001a617:	repnz cmp bh,BYTE PTR [rdx]
   14001a61a:	cmp    al,BYTE PTR [rax+0x3a]
   14001a61d:	cmp    bh,BYTE PTR [rdx]
   14001a61f:	sub    BYTE PTR [rdx],bh
   14001a621:	cmp    bh,BYTE PTR [rdx]
   14001a623:	xor    edi,DWORD PTR [rdx]
   14001a625:	cmp    bh,BYTE PTR [rdx]
   14001a627:	or     eax,DWORD PTR [rax]
   14001a629:	add    BYTE PTR [rax],al
   14001a62b:	add    BYTE PTR [rax],al
   14001a62d:	add    BYTE PTR [rax],al
   14001a62f:	add    dl,bl
   14001a631:	mov    ch,0x6c
   14001a633:	sti    
   14001a634:	(bad)  
   14001a636:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a637:	int3   
   14001a638:	repnz jrcxz 0x14001a605
   14001a63b:	mov    dl,0xe5
   14001a63d:	iret   
   14001a63e:	stos   DWORD PTR es:[rdi],eax
   14001a63f:	(bad)  
   14001a640:	fcmovnb st,st(5)
   14001a642:	lahf   
   14001a643:	loop   0x14001a621
   14001a645:	(bad)  
   14001a646:	movabs eax,ds:0xbac0c0dfb9d4e2e0
   14001a64f:	test   BYTE PTR [rbx+0x7d],0xce
   14001a653:	std    
   14001a654:	sub    DWORD PTR [rdi-0x1b],ebp
   14001a657:	call   QWORD PTR [rip+0x26fff664]        # 0x167019cc1
   14001a65d:	push   0xffffffffffffffe9
   14001a65f:	inc    DWORD PTR [rsi+0x77]
   14001a662:	(bad)  
   14001a663:	push   QWORD PTR [rdi-0x2c003341]
   14001a669:	(bad)  
   14001a66a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a66b:	stc    
   14001a66c:	shl    BYTE PTR [rdi-0x341c0e70],1
   14001a672:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a673:	in     al,0xec
   14001a675:	shr    DWORD PTR [rcx-0x5930171c],cl
   14001a67b:	in     al,0xe7
   14001a67d:	(bad)  
   14001a67e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a67f:	loope  0x14001a66d
   14001a681:	shl    BYTE PTR [rsi+0x509abff1],cl
   14001a687:	std    
   14001a688:	lock (bad) [rbp+0x4f99befa]
   14001a68f:	push   rax
   14001a691:	fnsave [rsi+0x529cc1f8]
   14001a697:	(bad)  
   14001a698:	cmp    bh,BYTE PTR [rdx]
   14001a69a:	cmp    bl,BYTE PTR [rip+0x1d3a3a3a]        # 0x15d3be0da
   14001a6a0:	cmp    bh,BYTE PTR [rdx]
   14001a6a2:	cmp    bl,BYTE PTR [rip+0xe3a3a3a]        # 0x14e3be0e2
	...
   14001a6b0:	(bad)  
   14001a6b1:	mov    cl,0x66
   14001a6b3:	neg    ah
   14001a6b5:	(bad)  
   14001a6b6:	movabs ds:0xaccfe3b4c6e2f2d1,al
   14001a6bf:	rcl    esp,1
   14001a6c1:	mov    esi,0xcfd4e798
   14001a6c6:	(bad)
   14001a6c9:	jg     0x14001a69d
   14001a6cb:	clc    
   14001a6cc:	(bad)  
   14001a6cd:	outs   dx,BYTE PTR ds:[rsi]
   14001a6ce:	out    dx,eax
   14001a6cf:	std    
   14001a6d0:	sbb    BYTE PTR [rbp-0xe],ah
   14001a6d3:	jmp    QWORD PTR [rcx]
   14001a6d5:	push   0xfffffffffffffff1
   14001a6d7:	jmp    QWORD PTR [rbx+rbp*2]
   14001a6da:	out    dx,eax
   14001a6db:	jmp    QWORD PTR [rax]
   14001a6dd:	imul   ebp,edi,0xf1641aff
   14001a6e3:	dec    DWORD PTR [rip+0x31fff75f]        # 0x172019e48
   14001a6e9:	jo     0x14001a6ca
   14001a6eb:	inc    esp
   14001a6ed:	ret    0xffbe
   14001a6f0:	(bad)
   14001a6f3:	repnz loopne 0x14001a6bf
   14001a6f6:	movabs ds:0xa8d0e9e4acd5ede4,eax
   14001a6ff:	loope  0x14001a6ef
   14001a701:	(bad)  
   14001a702:	test   al,0xf1
   14001a704:	mov    edi,0xf0fd519b
   14001a709:	fdiv   QWORD PTR [rsi+0x509bbff9]
   14001a70f:	push   rax
   14001a711:	fnsave [rsi+0x529cc1f8]
   14001a717:	inc    DWORD PTR [rax]
	...
   14001a72d:	add    BYTE PTR [rax],al
   14001a72f:	add    ch,dl
   14001a731:	mov    al,0x66
   14001a733:	neg    ah
   14001a735:	(bad)  
   14001a736:	movabs ds:0xb1d1e3b3c7e1f1d1,al
   14001a73f:	retf   0xc6c6
   14001a742:	sar    dl,0x3b
   14001a745:	jge    0x14001a720
   14001a747:	sti    
   14001a748:	adc    eax,0x15fef267
   14001a74d:	data16 out dx,al
   14001a74f:	dec    DWORD PTR [rsi]
   14001a751:	(bad)  
   14001a752:	lock call QWORD PTR [rsi]
   14001a755:	bnd jmp WORD PTR [rsi]
   14001a759:	outs   dx,BYTE PTR ds:[rsi]
   14001a75a:	bnd jmp QWORD PTR [rdi]
   14001a75d:	outs   dx,BYTE PTR ds:[rsi]
   14001a75e:	bnd jmp QWORD PTR [rdi]
   14001a761:	ins    DWORD PTR es:[rdi],dx
   14001a762:	repnz jmp FWORD PTR [rcx]
   14001a765:	outs   dx,BYTE PTR ds:[rsi]
   14001a766:	repnz call FWORD PTR [rdi+riz*2]
   14001a76a:	out    dx,eax
   14001a76b:	call   FWORD PTR [rdx]
   14001a76d:	addr32 out dx,eax
   14001a76f:	(bad)  
   14001a770:	mov    esi,0xc3ffc2c1
   14001a775:	stos   BYTE PTR es:[rdi],al
   14001a776:	xor    bl,0xe5
   14001a779:	int    0xa5
   14001a77b:	jrcxz  0x14001a766
   14001a77d:	shr    DWORD PTR [rdx-0x562a101f],1
   14001a783:	icebp  
   14001a784:	rcr    BYTE PTR [rcx+rdx*2-0x49230f03],0xf9
   14001a78c:	rcr    BYTE PTR [rbx-0x210f00af],0xb6
   14001a793:	clc    
   14001a794:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001a7b0:	(bad)  
   14001a7b1:	mov    al,0x66
   14001a7b3:	neg    ah
   14001a7b5:	(bad)  
   14001a7b6:	movabs eax,ds:0xcfd9deafc9e0eed2
   14001a7bf:	fdiv   DWORD PTR [rsi]
   14001a7c1:	jp     0x14001a7ad
   14001a7c3:	(bad)  
   14001a7c4:	adc    ch,BYTE PTR [rax-0xd]
   14001a7c7:	jmp    FWORD PTR [rcx+rdi*2]
   14001a7ca:	repnz (bad) 
   14001a7cc:	(bad)  
   14001a7cd:	(bad)  
   14001a7ce:	std    
   14001a7cf:	dec    esi
   14001a7d1:	loopne 0x14001a7cd
   14001a7d3:	push   QWORD PTR [rip+0x6fff27c]        # 0x147019a55
   14001a7d9:	pop    rsi
   14001a7da:	repnz call FWORD PTR [rsi]
   14001a7dd:	ins    BYTE PTR es:[rdi],dx
   14001a7de:	bnd jmp QWORD PTR [rdi]
   14001a7e1:	jno    0x14001a7d5
   14001a7e3:	jmp    QWORD PTR [rsi]
   14001a7e5:	outs   dx,DWORD PTR ds:[rsi]
   14001a7e6:	bnd jmp QWORD PTR [rdi]
   14001a7e9:	outs   dx,DWORD PTR ds:[rsi]
   14001a7ea:	bnd jmp QWORD PTR [rdx]
   14001a7ed:	push   0xffffffffffffffef
   14001a7ef:	call   FWORD PTR [rsi]
   14001a7f1:	ins    BYTE PTR es:[rdi],dx
   14001a7f2:	in     eax,dx
   14001a7f3:	(bad)  
   14001a7f4:	mov    edi,0xbdffb1ba
   14001a7f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a7fa:	jge    0x14001a7ed
   14001a7fc:	in     al,0xcc
   14001a7fe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a7ff:	in     eax,0xef
   14001a801:	(bad)  
   14001a802:	test   eax,0x519cc0f1
   14001a807:	std    
   14001a808:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001a80f:	push   rax
   14001a811:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001a817:	inc    DWORD PTR [rax]
	...
   14001a82d:	add    BYTE PTR [rax],al
   14001a82f:	add    ch,dl
   14001a831:	mov    cl,0x66
   14001a833:	neg    cl
   14001a835:	(bad)
   14001a838:	in     al,dx
   14001a839:	loope  0x14001a807
   14001a83b:	mov    dl,0x5a
   14001a83d:	mov    edx,edi
   14001a83f:	call   QWORD PTR [rax]
   14001a841:	imul   edi,ebp,0xffffffff
   14001a844:	or     al,0x68
   14001a846:	lock (bad) 
   14001a848:	jnp    0x14001a7f6
   14001a84a:	idiv   bh
   14001a84c:	(bad)  
   14001a84d:	(bad)  
   14001a84e:	(bad)  
   14001a84f:	(bad)  
   14001a850:	(bad)  
   14001a851:	(bad)  
   14001a852:	(bad)  
   14001a853:	(bad)  
   14001a854:	(bad)  
   14001a855:	(bad)  
   14001a856:	(bad)  
   14001a857:	call   FWORD PTR [rax+0x18fff8be]
   14001a85d:	imul   esi,ecx,0xffffffff
   14001a860:	adc    ah,BYTE PTR [rbp-0xe]
   14001a863:	jmp    QWORD PTR [rbx]
   14001a865:	jo     0x14001a859
   14001a867:	jmp    QWORD PTR [rdi]
   14001a869:	jno    0x14001a85d
   14001a86b:	jmp    QWORD PTR [rdi]
   14001a86d:	jo     0x14001a861
   14001a86f:	call   QWORD PTR [rsi]
   14001a871:	repz dec DWORD PTR [ebx-0x7c]
   14001a876:	(bad)  
   14001a878:	shr    DWORD PTR [rsi-0x4d370675],0x8a
   14001a87f:	lock repnz fsubr DWORD PTR [rbp+0x519cc0f0]
   14001a887:	std    
   14001a888:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001a88f:	push   rax
   14001a891:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001a897:	inc    DWORD PTR [rax]
	...
   14001a8ad:	add    BYTE PTR [rax],al
   14001a8af:	add    ch,dl
   14001a8b1:	mov    cl,0x66
   14001a8b3:	neg    edx
   14001a8b5:	(bad)  
   14001a8b6:	test   al,0xc8
   14001a8b8:	(bad)  
   14001a8ba:	ror    dh,1
   14001a8bc:	and    BYTE PTR [rdx-0x6],dh
   14001a8bf:	jmp    QWORD PTR [rip+0xafff37b]        # 0x14b019c40
   14001a8c5:	push   0xffffffffb07ffff0
   14001a8ca:	idiv   bh
   14001a8cc:	(bad)  
   14001a8cd:	(bad)  
   14001a8ce:	(bad)  
   14001a8cf:	(bad)  
   14001a8d0:	(bad)  
   14001a8d1:	(bad)  
   14001a8d2:	(bad)  
   14001a8d3:	(bad)  
   14001a8d4:	(bad)  
   14001a8d5:	(bad)  
   14001a8d6:	(bad)  
   14001a8d7:	(bad)  
   14001a8d8:	(bad)  
   14001a8d9:	(bad)  
   14001a8da:	(bad)  
   14001a8db:	jmp    rdx
   14001a8dd:	in     eax,dx
   14001a8de:	sti    
   14001a8df:	call   FWORD PTR [rax-0x6a]
   14001a8e2:	repz call QWORD PTR [rdx]
   14001a8e5:	push   0x6e1bfff0
   14001a8ea:	bnd jmp QWORD PTR [rip+0x27fff273]        # 0x168019b64
   14001a8f1:	jae    0x14001a8e3
   14001a8f3:	call   QWORD PTR [rcx]
   14001a8f5:	push   0xfffffffffffffffa
   14001a8f7:	(bad)  
   14001a8f8:	mov    ebx,0xcaffb1b8
   14001a8fd:	mov    bl,0x8b
   14001a8ff:	out    dx,al
   14001a900:	cmc    
   14001a901:	fld    TBYTE PTR [rdi+0x519cc0ee]
   14001a907:	std    
   14001a908:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001a90f:	push   rax
   14001a911:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001a917:	inc    DWORD PTR [rax]
	...
   14001a92d:	add    BYTE PTR [rax],al
   14001a92f:	add    ch,dl
   14001a931:	mov    al,0x66
   14001a933:	neg    esp
   14001a935:	retf   0xc6ac
   14001a938:	jle    0x14001a8db
   14001a93a:	ret    
   14001a93b:	out    dx,al
   14001a93c:	adc    dh,BYTE PTR [rdx-0x4]
   14001a93f:	jmp    FWORD PTR [rcx+rax*4]
   14001a942:	hlt    
   14001a943:	dec    DWORD PTR [rax]
   14001a945:	imul   esi,esp,0xffffffff
   14001a948:	jle    0x14001a8fb
   14001a94a:	idiv   bh
   14001a94c:	(bad)  
   14001a94d:	(bad)  
   14001a94e:	(bad)  
   14001a94f:	(bad)  
   14001a950:	(bad)  
   14001a951:	(bad)  
   14001a952:	(bad)  
   14001a953:	(bad)  
   14001a954:	(bad)  
   14001a955:	(bad)  
   14001a956:	(bad)  
   14001a957:	(bad)  
   14001a958:	(bad)  
   14001a959:	(bad)  
   14001a95a:	(bad)  
   14001a95b:	(bad)  
   14001a95c:	(bad)  
   14001a95d:	(bad)  
   14001a95e:	(bad)  
   14001a95f:	(bad)  
   14001a960:	(bad)  
   14001a961:	(bad)  
   14001a962:	(bad)  
   14001a963:	jmp    FWORD PTR [rbp+0x2bfff9cc]
   14001a969:	jp     0x14001a95d
   14001a96b:	call   QWORD PTR [rcx]
   14001a96d:	push   0x7422fff3
   14001a972:	lock call QWORD PTR [rbx]
   14001a975:	imul   edi,ecx,0xffffffff
   14001a978:	fs mov esi,cs
   14001a97b:	inc    ebp
   14001a97d:	lods   eax,DWORD PTR ds:[rsi]
   14001a97e:	test   ah,dh
   14001a980:	repnz fsubr DWORD PTR [rbp+0x519cc0ee]
   14001a987:	std    
   14001a988:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001a98f:	push   rax
   14001a991:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001a997:	inc    DWORD PTR [rax]
	...
   14001a9ad:	add    BYTE PTR [rax],al
   14001a9af:	add    ch,dl
   14001a9b1:	mov    al,0x67
   14001a9b3:	neg    ah
   14001a9b5:	leave  
   14001a9b6:	stos   BYTE PTR es:[rdi],al
   14001a9b7:	retf   0x894c
   14001a9ba:	(bad)  
   14001a9bc:	sbb    BYTE PTR [rcx-0x2],bh
   14001a9bf:	jmp    FWORD PTR [rsp+rax*4]
   14001a9c2:	hlt    
   14001a9c3:	dec    DWORD PTR [rax]
   14001a9c5:	outs   dx,BYTE PTR ds:[rsi]
   14001a9c6:	cmc    
   14001a9c7:	inc    DWORD PTR [rax-0x84c]
   14001a9cd:	(bad)  
   14001a9ce:	(bad)  
   14001a9cf:	(bad)  
   14001a9d0:	(bad)  
   14001a9d1:	(bad)  
   14001a9d2:	(bad)  
   14001a9d3:	(bad)  
   14001a9d4:	(bad)  
   14001a9d5:	(bad)  
   14001a9d6:	(bad)  
   14001a9d7:	(bad)  
   14001a9d8:	(bad)  
   14001a9d9:	(bad)  
   14001a9da:	(bad)  
   14001a9db:	(bad)  
   14001a9dc:	(bad)  
   14001a9dd:	(bad)  
   14001a9de:	(bad)  
   14001a9df:	(bad)  
   14001a9e0:	(bad)  
   14001a9e1:	(bad)  
   14001a9e2:	(bad)  
   14001a9e3:	(bad)  
   14001a9e4:	(bad)  
   14001a9e5:	(bad)  
   14001a9e6:	(bad)  
   14001a9e7:	(bad)  
   14001a9e8:	(bad)  
   14001a9e9:	(bad)  
   14001a9ea:	(bad)  
   14001a9eb:	push   QWORD PTR [rax+rbp*4-0x9]
   14001a9ef:	jmp    QWORD PTR [rbx]
   14001a9f1:	ja     0x14001a9e7
   14001a9f3:	call   QWORD PTR [rip+0x40fff56d]        # 0x181019f66
   14001a9f9:	and    edi,0xffffffff
   14001a9fc:	(bad)  
   14001a9fd:	scas   al,BYTE PTR es:[rdi]
   14001a9fe:	test   edi,esi
   14001aa00:	in     al,dx
   14001aa01:	shl    BYTE PTR [rdi+0x529cc0ef],cl
   14001aa07:	std    
   14001aa08:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001aa0f:	push   rax
   14001aa11:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001aa17:	inc    DWORD PTR [rax]
	...
   14001aa2d:	add    BYTE PTR [rax],al
   14001aa2f:	add    ch,dl
   14001aa31:	mov    al,0x67
   14001aa33:	hlt    
   14001aa34:	fcmovb st,st(7)
   14001aa36:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001aa37:	(bad)  
   14001aa38:	xor    bh,BYTE PTR [rdi-0x14]
   14001aa3b:	(bad)  
   14001aa3c:	sbb    eax,0x2cffff7f
   14001aa41:	test   ebp,esi
   14001aa43:	dec    DWORD PTR [rcx]
   14001aa45:	jb     0x14001aa3c
   14001aa47:	inc    DWORD PTR [rcx-0x74b]
   14001aa4d:	(bad)  
   14001aa4e:	(bad)  
   14001aa4f:	(bad)  
   14001aa50:	(bad)  
   14001aa51:	(bad)  
   14001aa52:	(bad)  
   14001aa53:	(bad)  
   14001aa54:	(bad)  
   14001aa55:	(bad)  
   14001aa56:	(bad)  
   14001aa57:	(bad)  
   14001aa58:	(bad)  
   14001aa59:	(bad)  
   14001aa5a:	(bad)  
   14001aa5b:	(bad)  
   14001aa5c:	(bad)  
   14001aa5d:	(bad)  
   14001aa5e:	(bad)  
   14001aa5f:	(bad)  
   14001aa60:	(bad)  
   14001aa61:	(bad)  
   14001aa62:	(bad)  
   14001aa63:	(bad)  
   14001aa64:	(bad)  
   14001aa65:	(bad)  
   14001aa66:	(bad)  
   14001aa67:	(bad)  
   14001aa68:	(bad)  
   14001aa69:	(bad)  
   14001aa6a:	(bad)  
   14001aa6b:	(bad)  
   14001aa6c:	(bad)  
   14001aa6d:	(bad)  
   14001aa6e:	(bad)  
   14001aa6f:	jmp    QWORD PTR [rbx-0x61]
   14001aa72:	repz call QWORD PTR [rdx]
   14001aa75:	ins    DWORD PTR es:[rdi],dx
   14001aa76:	repz jmp FWORD PTR [rcx]
   14001aa79:	jnp    0x14001aa6e
   14001aa7b:	dec    eax
   14001aa7d:	scas   eax,DWORD PTR es:[rdi]
   14001aa7e:	test   eax,edi
   14001aa80:	jmp    0x100f04f54
   14001aa85:	pushf  
   14001aa86:	push   rdx
   14001aa87:	std    
   14001aa88:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001aa8f:	push   rax
   14001aa91:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001aa97:	inc    DWORD PTR [rax]
	...
   14001aaad:	add    BYTE PTR [rax],al
   14001aaaf:	add    ch,dl
   14001aab1:	mov    al,0x67
   14001aab3:	hlt    
   14001aab4:	fcmovb st,st(7)
   14001aab6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001aab7:	int    0x30
   14001aab9:	jg     0x14001aaa6
   14001aabb:	(bad)  
   14001aabc:	(bad)  
   14001aabd:	test   edi,edi
   14001aabf:	jmp    FWORD PTR [rdi]
   14001aac1:	mov    dh,ch
   14001aac3:	dec    DWORD PTR [rax+rdi*2]
   14001aac6:	idiv   bh
   14001aac8:	xor    BYTE PTR [rsi-0x7],0xff
   14001aacf:	(bad)  
   14001aad0:	(bad)  
   14001aad1:	(bad)  
   14001aad2:	(bad)  
   14001aad3:	(bad)  
   14001aad4:	(bad)  
   14001aad5:	(bad)  
   14001aad6:	(bad)  
   14001aad7:	(bad)  
   14001aad8:	(bad)  
   14001aad9:	(bad)  
   14001aada:	(bad)  
   14001aadb:	(bad)  
   14001aadc:	(bad)  
   14001aadd:	(bad)  
   14001aade:	(bad)  
   14001aadf:	(bad)  
   14001aae0:	(bad)  
   14001aae1:	(bad)  
   14001aae2:	(bad)  
   14001aae3:	(bad)  
   14001aae4:	(bad)  
   14001aae5:	(bad)  
   14001aae6:	(bad)  
   14001aae7:	(bad)  
   14001aae8:	(bad)  
   14001aae9:	(bad)  
   14001aaea:	(bad)  
   14001aaeb:	(bad)  
   14001aaec:	(bad)  
   14001aaed:	(bad)  
   14001aaee:	(bad)  
   14001aaef:	push   QWORD PTR [rcx-0x56]
   14001aaf2:	idiv   edi
   14001aaf4:	adc    esi,DWORD PTR [rax-0xc]
   14001aaf7:	jmp    FWORD PTR [rbx]
   14001aaf9:	jle    0x14001aaee
   14001aafb:	dec    eax
   14001aafd:	scas   eax,DWORD PTR es:[rdi]
   14001aafe:	test   eax,edi
   14001ab00:	jmp    0x14001aad3
   14001ab02:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ab03:	out    dx,al
   14001ab04:	rcr    BYTE PTR [rdx+rdx*2-0x49230f03],0xf9
   14001ab0c:	rcr    BYTE PTR [rbx-0x210f00af],0xb6
   14001ab13:	clc    
   14001ab14:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001ab30:	(bad)  
   14001ab31:	mov    al,0x67
   14001ab33:	neg    dl
   14001ab35:	(bad)  
   14001ab36:	test   al,0xcb
   14001ab38:	rex.W xchg dl,bl
   14001ab3b:	cli    
   14001ab3c:	and    DWORD PTR [rax-0x6dc90002],ecx
   14001ab42:	hlt    
   14001ab43:	call   QWORD PTR [rax]
   14001ab45:	xor    dh,0xff
   14001ab48:	xchg   DWORD PTR [rdx-0x7],edi
   14001ab4e:	(bad)  
   14001ab4f:	(bad)  
   14001ab50:	(bad)  
   14001ab51:	(bad)  
   14001ab52:	(bad)  
   14001ab53:	(bad)  
   14001ab54:	(bad)  
   14001ab55:	(bad)  
   14001ab56:	(bad)  
   14001ab57:	(bad)  
   14001ab58:	(bad)  
   14001ab59:	(bad)  
   14001ab5a:	(bad)  
   14001ab5b:	(bad)  
   14001ab5c:	(bad)  
   14001ab5d:	(bad)  
   14001ab5e:	(bad)  
   14001ab5f:	(bad)  
   14001ab60:	(bad)  
   14001ab61:	(bad)  
   14001ab62:	(bad)  
   14001ab63:	(bad)  
   14001ab64:	(bad)  
   14001ab65:	(bad)  
   14001ab66:	(bad)  
   14001ab67:	(bad)  
   14001ab68:	(bad)  
   14001ab69:	repz std 
   14001ab6b:	jmp    QWORD PTR [rdx-0x5d]
   14001ab6e:	clc    
   14001ab6f:	jmp    FWORD PTR [rdi]
   14001ab71:	(bad)  
   14001ab72:	idiv   bh
   14001ab74:	adc    esi,DWORD PTR [rbx-0x8]
   14001ab77:	inc    DWORD PTR [rbx-0x79]
   14001ab7a:	out    0xff,eax
   14001ab7c:	(bad)
   14001ab7f:	imul   ah
   14001ab81:	shl    BYTE PTR [rdi+0x529cc0ef],cl
   14001ab87:	std    
   14001ab88:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001ab8f:	push   rax
   14001ab91:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001ab97:	inc    DWORD PTR [rax]
	...
   14001abad:	add    BYTE PTR [rax],al
   14001abaf:	add    ch,dl
   14001abb1:	mov    cl,0x66
   14001abb3:	neg    esp
   14001abb5:	retf   0xc6ac
   14001abb8:	ins    DWORD PTR es:[rdi],dx
   14001abb9:	xchg   esp,eax
   14001abba:	mov    esi,0xfc881df2
   14001abbf:	(bad)  
   14001abc0:	ds cdq 
   14001abc2:	hlt    
   14001abc3:	call   QWORD PTR [rdx]
   14001abc5:	xchg   esi,esi
   14001abc7:	dec    DWORD PTR [rcx-0x644]
   14001abcd:	(bad)  
   14001abce:	(bad)  
   14001abcf:	(bad)  
   14001abd0:	(bad)  
   14001abd1:	(bad)  
   14001abd2:	(bad)  
   14001abd3:	(bad)  
   14001abd4:	(bad)  
   14001abd5:	(bad)  
   14001abd6:	(bad)  
   14001abd7:	(bad)  
   14001abd8:	(bad)  
   14001abd9:	(bad)  
   14001abda:	(bad)  
   14001abdb:	(bad)  
   14001abdc:	(bad)  
   14001abdd:	(bad)  
   14001abde:	(bad)  
   14001abdf:	(bad)  
   14001abe0:	(bad)  
   14001abe1:	(bad)  
   14001abe2:	(bad)  
   14001abe3:	call   QWORD PTR [rbp+0x26fffac2]
   14001abe9:	(bad)  
   14001abea:	idiv   edi
   14001abec:	sbb    DWORD PTR [rcx-0xa],edi
   14001abef:	jmp    QWORD PTR [rbx]
   14001abf1:	jg     0x14001abe6
   14001abf3:	call   QWORD PTR [rax+rdi*2]
   14001abf6:	cld    
   14001abf7:	jmp    FWORD PTR [rax-0x6e]
   14001abfa:	(bad)  
   14001abfb:	inc    ebx
   14001abfd:	stos   DWORD PTR es:[rdi],eax
   14001abfe:	xor    edx,0xfffffff2
   14001ac01:	fsubr  DWORD PTR [rbp+0x519cc0ee]
   14001ac07:	std    
   14001ac08:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001ac0f:	push   rax
   14001ac11:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001ac17:	inc    DWORD PTR [rax]
	...
   14001ac2d:	add    BYTE PTR [rax],al
   14001ac2f:	add    ch,dl
   14001ac31:	mov    al,0x66
   14001ac33:	clc    
   14001ac34:	(bad)  
   14001ac36:	scas   al,BYTE PTR es:[rdi]
   14001ac37:	(bad)  
   14001ac38:	pushf  
   14001ac39:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ac3a:	movabs al,ds:0xf99d40fffa8424e0
   14001ac43:	call   FWORD PTR [rcx]
   14001ac45:	(bad)  
   14001ac46:	idiv   edi
   14001ac48:	mov    BYTE PTR [rsi-0x8],bh
   14001ac4e:	(bad)  
   14001ac4f:	(bad)  
   14001ac50:	(bad)  
   14001ac51:	(bad)  
   14001ac52:	(bad)  
   14001ac53:	(bad)  
   14001ac54:	(bad)  
   14001ac55:	(bad)  
   14001ac56:	(bad)  
   14001ac57:	(bad)  
   14001ac58:	(bad)  
   14001ac59:	(bad)  
   14001ac5a:	(bad)  
   14001ac5b:	jmp    rbx
   14001ac5d:	lock std 
   14001ac5f:	call   QWORD PTR [rax-0x62]
   14001ac62:	clc    
   14001ac63:	call   QWORD PTR [rsi]
   14001ac65:	jnp    0x14001ac5d
   14001ac67:	call   FWORD PTR [rdi]
   14001ac69:	xor    dh,0xff
   14001ac6c:	sub    BYTE PTR [rbp-0x7bd5000a],al
   14001ac72:	cmc    
   14001ac73:	call   QWORD PTR [rip+0xffffffff8bfffa7e]        # 0xcc01a6f7
   14001ac79:	xchg   esp,eax
   14001ac7a:	lahf   
   14001ac7b:	std    
   14001ac7c:	(bad)
   14001ac7f:	in     al,dx
   14001ac80:	clc    
   14001ac81:	fdiv   QWORD PTR [rdx+0x509abfef]
   14001ac87:	std    
   14001ac88:	lock fdiv QWORD PTR [rsi+0x529cc1f9]
   14001ac8f:	push   rax
   14001ac91:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001ac97:	inc    DWORD PTR [rax]
	...
   14001acad:	add    BYTE PTR [rax],al
   14001acaf:	add    ah,dl
   14001acb1:	mov    al,0x66
   14001acb3:	neg    esp
   14001acb5:	leave  
   14001acb6:	test   al,0xcd
   14001acb8:	loope  0x14001ac90
   14001acba:	ret    0x53b9
   14001acbd:	mov    dl,dl
   14001acbf:	jmp    FWORD PTR [rdi]
   14001acc1:	cdq    
   14001acc2:	std    
   14001acc3:	call   FWORD PTR [rdx]
   14001acc5:	nop
   14001acc6:	cmc    
   14001acc7:	call   QWORD PTR [rbx+rax*8-0x8]
   14001acce:	(bad)  
   14001accf:	(bad)  
   14001acd0:	(bad)  
   14001acd1:	(bad)  
   14001acd2:	(bad)  
   14001acd3:	(bad)  
   14001acd4:	(bad)  
   14001acd5:	(bad)  
   14001acd6:	(bad)  
   14001acd7:	call   QWORD PTR [rcx+0x23fffbc2]
   14001acdd:	mov    ch,dh
   14001acdf:	call   FWORD PTR [rcx+rax*4]
   14001ace2:	idiv   bh
   14001ace4:	sub    BYTE PTR [rax-0x76d6000a],cl
   14001acea:	idiv   bh
   14001acec:	sub    al,0x88
   14001acee:	idiv   bh
   14001acf0:	(bad)  
   14001acf1:	jl     0x14001aceb
   14001acf3:	call   QWORD PTR [rbx-0x6e]
   14001acf6:	loope  0x14001acf7
   14001acf8:	mov    ebx,0xe5f684a7
   14001acfd:	(bad)  
   14001acfe:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001acff:	in     al,0xf8
   14001ad01:	fidiv  WORD PTR [rdx+0x519bbff3]
   14001ad07:	std    
   14001ad08:	lock fnsave [rsi+0x519cc0fa]
   14001ad0f:	push   rax
   14001ad11:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001ad17:	inc    DWORD PTR [rax]
	...
   14001ad2d:	add    BYTE PTR [rax],al
   14001ad2f:	add    ah,dl
   14001ad31:	mov    al,0x66
   14001ad33:	neg    edx
   14001ad35:	(bad)  
   14001ad36:	lahf   
   14001ad37:	shr    edi,1
   14001ad39:	loope  0x14001ad05
   14001ad3b:	scas   al,BYTE PTR es:[rdi]
   14001ad3c:	xchg   esi,eax
   14001ad3d:	(bad)  
   14001ad3e:	nop
   14001ad3f:	(bad)  
   14001ad40:	xor    ecx,DWORD PTR [rbp-0x68e20011]
   14001ad46:	sti    
   14001ad47:	jmp    FWORD PTR [rsi-0x51]
   14001ad4a:	idiv   edi
   14001ad4c:	(bad)  
   14001ad4d:	(bad)  
   14001ad4e:	(bad)  
   14001ad4f:	(bad)  
   14001ad50:	fucomi st,st(4)
   14001ad52:	cld    
   14001ad53:	call   QWORD PTR [rsi-0x58]
   14001ad56:	stc    
   14001ad57:	call   FWORD PTR [rdi]
   14001ad59:	mov    edi,?
   14001ad5b:	jmp    FWORD PTR [rdx]
   14001ad5d:	mov    ?,edi
   14001ad5f:	jmp    FWORD PTR [rsi+rcx*4]
   14001ad62:	idiv   edi
   14001ad64:	sub    ecx,DWORD PTR [rbp-0x74d5000a]
   14001ad6a:	idiv   edi
   14001ad6c:	es xchg ch,dh
   14001ad6f:	jmp    QWORD PTR [rax*4-0x6c720011]
   14001ad76:	pushf  
   14001ad77:	std    
   14001ad78:	sar    DWORD PTR [rbx-0x20070b6c],1
   14001ad7e:	mov    bh,0xe5
   14001ad80:	neg    esp
   14001ad82:	mov    al,0xf5
   14001ad84:	rcr    BYTE PTR [rdx+rdx*2-0x49220f02],0xfa
   14001ad8c:	rcr    BYTE PTR [rcx+rdx*2-0x49210f01],0xf8
   14001ad94:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001adb0:	(bad)  
   14001adb1:	mov    al,0x65
   14001adb3:	not    edi
   14001adb5:	rcr    DWORD PTR [rbp-0x3b21122f],0xb3
   14001adbc:	(bad)  
   14001adbe:	lods   eax,DWORD PTR ds:[rsi]
   14001adbf:	retf   
   14001adc0:	or     BYTE PTR [rbx-0x6ed60068],0xf2
   14001adc7:	jmp    QWORD PTR [rbx]
   14001adc9:	xchg   ebx,eax
   14001adca:	sti    
   14001adcb:	inc    DWORD PTR [rcx-0x61]
   14001adce:	idiv   bh
   14001add0:	sub    edx,DWORD PTR [rbx-0x6ddb000b]
   14001add6:	idiv   edi
   14001add8:	xor    edx,DWORD PTR [rbp-0x6ace0009]
   14001adde:	idiv   edi
   14001ade0:	xor    BYTE PTR [rbx-0x6fd00009],dl
   14001ade6:	idiv   edi
   14001ade8:	(bad)  
   14001ade9:	mov    dh,dh
   14001adeb:	call   FWORD PTR [rip+0xffffffff89fff184]        # 0xca019f75
   14001adf1:	movabs eax,ds:0xdaf2f790b7ceffbe
   14001adfa:	mov    cl,0xea
   14001adfc:	stc    
   14001adfd:	fbstp  TBYTE PTR [rbp-0x4f230817]
   14001ae03:	test   al,0x9c
   14001ae06:	push   rcx
   14001ae07:	std    
   14001ae08:	lock fnsave [rsi+0x519cc0fa]
   14001ae0f:	push   rax
   14001ae11:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001ae17:	inc    DWORD PTR [rax]
	...
   14001ae2d:	add    BYTE PTR [rax],al
   14001ae2f:	add    ah,dl
   14001ae31:	scas   eax,DWORD PTR es:[rdi]
   14001ae32:	gs not ebp
   14001ae35:	mov    edi,0xdbebd19b
   14001ae3a:	mov    edi,0xaed0e3b4
   14001ae3f:	iret   
   14001ae40:	sar    DWORD PTR [rbx-0x6c74116c],cl
   14001ae46:	cwde   
   14001ae47:	cld    
   14001ae48:	cmp    BYTE PTR [rsi-0x73e7001d],cl
   14001ae4e:	sti    
   14001ae4f:	jmp    FWORD PTR [rdx]
   14001ae51:	xchg   edx,eax
   14001ae52:	clc    
   14001ae53:	push   QWORD PTR [rdx*4-0x68c9000a]
   14001ae5a:	cmc    
   14001ae5b:	push   QWORD PTR [rsp+rdx*4]
   14001ae5e:	cmc    
   14001ae5f:	jmp    FWORD PTR [rsi+rcx*4]
   14001ae62:	cmc    
   14001ae63:	call   FWORD PTR [rip+0x34fffb87]        # 0x17501a9f0
   14001ae69:	mov    edx,esp
   14001ae6b:	dec    DWORD PTR [rdi-0x37004a60]
   14001ae71:	mov    cl,0x88
   14001ae73:	imul   dh
   14001ae75:	(bad)  
   14001ae76:	scas   al,BYTE PTR es:[rdi]
   14001ae77:	(bad)  
   14001ae78:	clc    
   14001ae79:	fidiv  WORD PTR [rbx+rbp*8-0x174e230b]
   14001ae80:	neg    esp
   14001ae82:	mov    al,0xf4
   14001ae84:	rcr    BYTE PTR [rcx+rdx*2-0x49220f02],0xfa
   14001ae8c:	rcr    BYTE PTR [rcx+rdx*2-0x48210f01],0xf9
   14001ae94:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001aeb0:	shr    DWORD PTR [rdi-0x412b089c],cl
   14001aeb6:	(bad)  
   14001aeb7:	shr    dl,1
   14001aeb9:	fidivr DWORD PTR [rsi-0x57321d4c]
   14001aebf:	rcr    esi,1
   14001aec1:	(bad)  
   14001aec2:	lahf   
   14001aec3:	(bad)  
   14001aec4:	in     eax,0xd0
   14001aec6:	scas   al,BYTE PTR es:[rdi]
   14001aec7:	(bad)  
   14001aec8:	movabs ds:0x46ffb09173f37c96,eax
   14001aed1:	mov    ds,ecx
   14001aed3:	jmp    QWORD PTR [rdi]
   14001aed5:	mov    esp,ebp
   14001aed7:	call   QWORD PTR [rip+0x28fff683]        # 0x16901a560
   14001aedd:	mov    ebp,ebp
   14001aedf:	inc    DWORD PTR [rdi-0x70]
   14001aee2:	(bad)  
   14001aee4:	jns    0x14001ae80
   14001aee6:	mov    esi,0x8ba1adff
   14001aeeb:	cld    
   14001aeec:	sar    DWORD PTR [rax-0x2810106f],1
   14001aef2:	scas   eax,DWORD PTR es:[rdi]
   14001aef3:	(bad)  
   14001aef4:	clc    
   14001aef5:	fnsave [rbx-0x4f250b15]
   14001aefb:	jmp    0x14001aef2
   14001aefd:	fdiv   QWORD PTR [rcx-0x4f230818]
   14001af03:	hlt    
   14001af04:	rcr    BYTE PTR [rcx+rdx*2-0x49220f02],0xfa
   14001af0c:	rcr    BYTE PTR [rcx+rdx*2-0x48210f01],0xf9
   14001af14:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001af30:	(bad)  
   14001af31:	mov    al,0x65
   14001af33:	clc    
   14001af34:	sar    BYTE PTR [rbp-0x28183266],cl
   14001af3a:	mov    ebp,0xa5c9dfb1
   14001af3f:	rcr    edx,1
   14001af41:	rcl    BYTE PTR [rsi+rbp*8-0x2c4f2a15],0xe6
   14001af49:	shr    DWORD PTR [rbp-0x643d252a],1
   14001af4f:	clc    
   14001af50:	enter  0x91b3,0xf9
   14001af54:	(bad)  
   14001af55:	mov    ch,0x95
   14001af57:	sti    
   14001af58:	(bad)  
   14001af59:	mov    dh,0x97
   14001af5b:	cld    
   14001af5c:	enter  0x98b6,0xfb
   14001af60:	iret   
   14001af61:	mov    ebx,0xc7ddfb99
   14001af66:	movabs ds:0xb4def7f0a8cbe0f7,eax
   14001af6f:	call   0x12ab38c69
   14001af74:	hlt    
   14001af75:	(bad)  [rax-0x4f250b15]
   14001af7b:	jmp    0x14001af72
   14001af7d:	fdiv   QWORD PTR [rcx-0x4f230818]
   14001af83:	hlt    
   14001af84:	rcr    BYTE PTR [rcx+rdx*2-0x48220f03],0xfa
   14001af8c:	rcr    BYTE PTR [rbx-0x210f00af],0xb8
   14001af93:	clc    
   14001af94:	mov    edx,0xf25595
	...
   14001afad:	add    BYTE PTR [rax],al
   14001afaf:	add    ah,dl
   14001afb1:	scas   eax,DWORD PTR es:[rdi]
   14001afb2:	addr32 cld 
   14001afb4:	shl    BYTE PTR [rdi-0x26131773],1
   14001afba:	mov    ecx,0xadd1e7c2
   14001afbf:	shl    ebp,cl
   14001afc1:	retf   0xf89c
   14001afc4:	out    dx,al
   14001afc5:	(bad)  
   14001afc6:	stos   DWORD PTR es:[rdi],eax
   14001afc7:	jmp    0x128ad84b9
   14001afcc:	neg    ebx
   14001afce:	scas   eax,DWORD PTR es:[rdi]
   14001afcf:	div    edi
   14001afd1:	fld    TBYTE PTR [rdi-0x51240a0a]
   14001afd7:	hlt    
   14001afd8:	neg    ah
   14001afda:	scas   eax,DWORD PTR es:[rdi]
   14001afdb:	hlt    
   14001afdc:	neg    esp
   14001afde:	mov    al,0xf4
   14001afe0:	neg    esp
   14001afe2:	mov    al,0xf4
   14001afe4:	cli    
   14001afe5:	loopne 0x14001af9a
   14001afe7:	hlt    
   14001afe8:	cld    
   14001afe9:	loop   0x14001afa1
   14001afeb:	hlt    
   14001afec:	stc    
   14001afed:	fbstp  TBYTE PTR [rdx-0x4d21070c]
   14001aff3:	repnz clc 
   14001aff5:	fidiv  WORD PTR [rdx-0x4d210710]
   14001affb:	out    dx,eax
   14001affc:	stc    
   14001affd:	fbstp  TBYTE PTR [rbx+rbp*8-0x44a1b01]
   14001b004:	rcr    DWORD PTR [rdx+rdx*2-0x79492c01],0xf8
   14001b00c:	vorps  xmm7,xmm11,xmm7
   14001b010:	mov    esp,0xbeea6399
   14001b015:	popf   
   14001b016:	push   0x9e
	...
   14001b02f:	add    BYTE PTR [rdi-0x4783a873],ch
   14001b035:	cwde   
   14001b036:	data16 ffree st(3)
   14001b039:	movabs al,ds:0x9fc3ff70a0c3ff70
   14001b042:	outs   dx,DWORD PTR ds:[rsi]
   14001b043:	inc    edx
   14001b045:	lahf   
   14001b046:	outs   dx,BYTE PTR ds:[rsi]
   14001b047:	inc    ecx
   14001b049:	sahf   
   14001b04a:	ins    DWORD PTR es:[rdi],dx
   14001b04b:	inc    eax
   14001b04d:	popf   
   14001b04e:	imul   edi,edi,0xffffffc0
   14001b051:	pushf  
   14001b052:	push   0xffffffffffffffff
   14001b054:	mov    ebp,0xbcff679b
   14001b059:	(bad)  
   14001b05a:	addr32 (bad) 
   14001b05c:	mov    esp,0xbaff6499
   14001b061:	xchg   edi,eax
   14001b062:	movsxd edi,edi
   14001b064:	mov    ecx,0xb8ff6096
   14001b069:	xchg   esi,eax
   14001b06a:	pop    rdi
   14001b06b:	push   QWORD PTR [rdi-0x4900a26d]
   14001b071:	xchg   ebx,eax
   14001b072:	pop    rbx
   14001b073:	push   QWORD PTR [rbp-0x4b00a46d]
   14001b079:	xchg   ecx,eax
   14001b07a:	pop    rax
   14001b07b:	push   QWORD PTR [rbx-0x4c00a870]
   14001b081:	(bad)  
   14001b082:	push   rdi
   14001b083:	push   QWORD PTR [rcx-0x4b17a872]
   14001b089:	xchg   ecx,eax
   14001b08a:	pop    rdx
   14001b08b:	mov    edi,0x59588eb0
   14001b090:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b091:	mov    BYTE PTR [rcx+0x15],bl
   14001b094:	test   al,0x8c
   14001b096:	pop    rbp
   14001b097:	(bad)  
	...
   14001b328:	(bad)  
   14001b329:	(bad)  
   14001b32a:	(bad)  
   14001b32b:	(bad)  
   14001b32c:	(bad)  
   14001b32d:	in     eax,dx
   14001b32e:	add    bh,bh
   14001b330:	clc    
   14001b331:	add    BYTE PTR [rax],al
   14001b333:	inc    eax
   14001b335:	add    BYTE PTR [rax],al
   14001b337:	(bad)  
   14001b338:	rol    BYTE PTR [rax],0x0
   14001b33b:	add    eax,eax
   14001b33d:	add    BYTE PTR [rax],al
   14001b33f:	add    al,al
   14001b341:	add    BYTE PTR [rax],al
   14001b343:	add    al,al
   14001b345:	add    BYTE PTR [rax],al
   14001b347:	xadd   BYTE PTR [rax],al
   14001b34a:	add    BYTE PTR [rdi],cl
   14001b34c:	rol    BYTE PTR [rax],0x0
   14001b34f:	xadd   BYTE PTR [rax],al
   14001b352:	add    BYTE PTR [rdi],cl
   14001b354:	rol    BYTE PTR [rax],0x0
   14001b357:	xadd   BYTE PTR [rax],al
   14001b35a:	add    BYTE PTR [rdi],cl
   14001b35c:	rol    BYTE PTR [rax],0x0
   14001b35f:	xadd   BYTE PTR [rax],al
   14001b362:	add    BYTE PTR [rdi],cl
   14001b364:	rol    BYTE PTR [rax],0x0
   14001b367:	xadd   BYTE PTR [rax],al
   14001b36a:	add    BYTE PTR [rdi],cl
   14001b36c:	rol    BYTE PTR [rax],0x0
   14001b36f:	xadd   BYTE PTR [rax],al
   14001b372:	add    BYTE PTR [rdi],cl
   14001b374:	rol    BYTE PTR [rax],0x0
   14001b377:	xadd   BYTE PTR [rax],al
   14001b37a:	add    BYTE PTR [rdi],cl
   14001b37c:	rol    BYTE PTR [rax],0x0
   14001b37f:	xadd   BYTE PTR [rax],al
   14001b382:	add    BYTE PTR [rdi],cl
   14001b384:	rol    BYTE PTR [rax],0x0
   14001b387:	xadd   BYTE PTR [rax],al
   14001b38a:	add    BYTE PTR [rdi],cl
   14001b38c:	rol    BYTE PTR [rax],0x0
   14001b38f:	xadd   BYTE PTR [rax],al
   14001b392:	add    BYTE PTR [rdi],cl
   14001b394:	(bad)  
   14001b395:	(bad)  
   14001b396:	(bad)  
   14001b397:	(bad)  
   14001b398:	(bad)  
   14001b399:	(bad)  
   14001b39a:	(bad)  
   14001b39b:	(bad)  
   14001b39c:	(bad)  
   14001b39d:	(bad)  
   14001b39e:	(bad)  
   14001b39f:	(bad)  
   14001b3a0:	(bad)  
   14001b3a1:	(bad)  
   14001b3a2:	(bad)  
   14001b3a3:	(bad)  
   14001b3a4:	(bad)  
   14001b3a5:	(bad)  
   14001b3a6:	(bad)  
   14001b3a7:	jmp    FWORD PTR [rax]
   14001b3a9:	add    BYTE PTR [rax],al
   14001b3ab:	add    BYTE PTR [rax],bl
   14001b3ad:	add    BYTE PTR [rax],al
   14001b3af:	add    BYTE PTR [rax],dh
   14001b3b1:	add    BYTE PTR [rax],al
   14001b3b3:	add    BYTE PTR [rcx],al
   14001b3b5:	add    BYTE PTR [rax],ah
   14001b3b7:	add    BYTE PTR [rax],al
   14001b3b9:	add    BYTE PTR [rax],al
   14001b3bb:	add    BYTE PTR [rax+0x9],ah
	...
   14001b3ea:	add    BYTE PTR [rax],al
   14001b3ec:	lea    ebp,[rdi+0x22]
   14001b3ef:	add    DWORD PTR [rsi-0x60fdc888],edx
   14001b3f5:	test   BYTE PTR [rcx+0x7],cl
   14001b3f8:	stos   DWORD PTR es:[rdi],eax
   14001b3f9:	xchg   ecx,eax
   14001b3fa:	pop    rbx
   14001b3fb:	or     eax,ecx
   14001b3fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b3fe:	jno    0x14001b42a
   14001b400:	mov    ch,0x98
   14001b402:	(bad)  
   14001b403:	(bad)  
   14001b404:	mov    ecx,0xbd64679f
   14001b409:	movabs ds:0xabc2a772a5be876f,eax
   14001b412:	jp     0x14001b3e1
   14001b414:	ret    
   14001b415:	stos   DWORD PTR es:[rdi],eax
   14001b416:	jp     0x14001b3f2
   14001b418:	shl    DWORD PTR [rdi+0x617bed71],0x2b
   14001b41f:	(bad)  
   14001b420:	(bad)  
   14001b421:	adc    ecx,DWORD PTR [rip+0x548aa614]        # 0x1948c5a3b
   14001b427:	add    DWORD PTR [rax],eax
	...
   14001b431:	add    BYTE PTR [rax],al
   14001b433:	add    BYTE PTR [rbx-0x4efdcd84],bl
   14001b439:	xchg   esp,eax
   14001b43a:	pop    rcx
   14001b43b:	and    BYTE PTR [rcx+rbx*4-0x5b41b29e],dh
   14001b442:	ins    DWORD PTR es:[rdi],dx
   14001b443:	mov    si,0x6ea4
   14001b447:	ja     0x14001b409
   14001b449:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b44a:	jb     0x14001b3e3
   14001b44c:	shl    BYTE PTR [rdi-0x553c548c],0x78
   14001b453:	ret    
   14001b454:	(bad)  
   14001b455:	stos   BYTE PTR es:[rdi],al
   14001b456:	js     0x14001b42b
   14001b458:	ret    
   14001b459:	stos   DWORD PTR es:[rdi],eax
   14001b45a:	js     0x14001b43e
   14001b45c:	(bad)  
   14001b45d:	scas   eax,DWORD PTR es:[rdi]
   14001b45e:	jge    0x14001b44a
   14001b460:	int    0xb6
   14001b462:	xchg   dh,ch
   14001b464:	(bad)  
   14001b465:	mov    eax,0xb9cff18c
   14001b46a:	mov    ?,eax
   14001b46c:	sar    DWORD PTR [rbp-0x412d106b],1
   14001b472:	xchg   edi,eax
   14001b473:	out    dx,eax
   14001b474:	rol    ecx,cl
   14001b476:	pushf  
   14001b477:	jmp    0x14001b456
   14001b479:	retf   
   14001b47a:	test   al,0xf1
   14001b47c:	mov    ebp,0xbfff5d9d
   14001b481:	movabs ds:0xa35e92abfa69,al
   14001b48a:	add    BYTE PTR [rcx],dl
   14001b48c:	add    BYTE PTR [rax],al
   14001b48e:	add    BYTE PTR [rax],al
   14001b490:	(bad)  
   14001b491:	mov    eax,0xafc65d90
   14001b496:	jg     0x14001b458
   14001b498:	(bad)  
   14001b499:	stos   BYTE PTR es:[rdi],al
   14001b49a:	js     0x14001b47d
   14001b49c:	ret    
   14001b49d:	test   eax,0xacc5e678
   14001b4a2:	jge    0x14001b48d
   14001b4a4:	retf   
   14001b4a5:	mov    dl,0x84
   14001b4a7:	lock iret 
   14001b4a9:	mov    ecx,0xbed3ee8c
   14001b4ae:	xchg   ebp,eax
   14001b4af:	out    dx,eax
   14001b4b0:	fcmovnb st,st(7)
   14001b4b2:	movabs ds:0xb1d0e2f0accddeef,eax
   14001b4bb:	out    dx,al
   14001b4bc:	(bad)  
   14001b4be:	scas   al,BYTE PTR es:[rdi]
   14001b4bf:	jmp    0x124a97c9b
   14001b4c4:	(bad)  
   14001b4c5:	(bad)  
   14001b4c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b4c7:	jrcxz  0x14001b4a8
   14001b4c9:	int    0xac
   14001b4cb:	out    0xda,eax
   14001b4cd:	(bad)  
   14001b4ce:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b4cf:	call   0x12ba37aad
   14001b4d4:	xlat   BYTE PTR ds:[rbx]
   14001b4d5:	ret    
   14001b4d6:	lahf   
   14001b4d7:	jmp    0x14001b4ba
   14001b4d9:	int    0xa6
   14001b4db:	out    dx,eax
   14001b4dc:	mov    dh,0x96
   14001b4de:	push   rbx
   14001b4df:	call   rdx
   14001b4e1:	mov    esi,0x99b9e097
   14001b4e6:	pop    rax
   14001b4e7:	(bad)  
   14001b4e8:	mov    edi,0xbbfb67a1
   14001b4ed:	movabs ds:0xd4e2e593bfd47f72,al
   14001b4f6:	mov    ecx,0xcae2effd
   14001b4fb:	shl    al,1
   14001b4fd:	shl    BYTE PTR [rsi-0x50312210],cl
   14001b503:	jmp    0x14001b4e5
   14001b505:	shl    BYTE PTR [rsi-0x552b2425],cl
   14001b50b:	ffreep st(7)
   14001b50d:	(bad)  
   14001b50e:	movabs ds:0xbeaa83f2afbaa1ea,eax
   14001b517:	test   DWORD PTR [rax-0x640a4754],0xcaf19bb7
   14001b521:	retf   
   14001b522:	fwait
   14001b523:	out    dx,eax
   14001b524:	rol    ebp,1
   14001b526:	nop
   14001b527:	in     al,dx
   14001b528:	fcmovnb st,st(6)
   14001b52a:	movabs eax,ds:0xa0c6dbeca5cbdfe8
   14001b533:	in     eax,dx
   14001b534:	xlat   BYTE PTR ds:[rbx]
   14001b535:	ret    
   14001b536:	popf   
   14001b537:	jmp    0x12eac851f
   14001b53c:	mov    bh,0x96
   14001b53e:	push   rsp
   14001b53f:	(bad)  
   14001b540:	(bad)  
   14001b541:	(bad)  
   14001b542:	mov    dl,0xec
   14001b544:	mov    bh,0x96
   14001b546:	push   rbx
   14001b547:	push   rcx
   14001b549:	fistp  QWORD PTR [rax+riz*8-0xa96748]
   14001b550:	iret   
   14001b551:	mov    ecx,0xcadafd8d
   14001b556:	scas   al,BYTE PTR es:[rdi]
   14001b557:	mov    esp,0xaed5e8f1
   14001b55c:	(bad)  
   14001b55d:	ret    
   14001b55e:	lahf   
   14001b55f:	(bad)  
   14001b561:	mov    ebp,0xdfd6e594
   14001b566:	stos   DWORD PTR es:[rdi],eax
   14001b567:	(bad)  
   14001b568:	mov    BYTE PTR [rsi+0x7130f8dd],ch
   14001b56e:	(bad)  
   14001b56f:	dec    DWORD PTR [rdi]
   14001b571:	pop    rbx
   14001b572:	(bad)  
   14001b573:	dec    DWORD PTR [rbx]
   14001b575:	push   rsi
   14001b576:	(bad)  
   14001b577:	dec    DWORD PTR [rip+0x11ffff54]        # 0x15201b4d1
   14001b57d:	pop    rax
   14001b57e:	(bad)  
   14001b57f:	(bad)  
   14001b580:	cmp    DWORD PTR [rdi-0x1],esi
   14001b583:	(bad)  
   14001b584:	jg     0x14001b524
   14001b586:	mov    bh,0xfb
   14001b588:	mov    ecx,0xc2d6eb8c
   14001b58e:	fsubrp st(3),st
   14001b591:	shr    BYTE PTR [rbp-0x5936221f],1
   14001b597:	(bad)  
   14001b599:	shr    BYTE PTR [rsi+0x5597b7e7],cl
   14001b59f:	(bad)  
   14001b5a0:	jmp    0x14001b579
   14001b5a2:	mov    ch,0xe7
   14001b5a4:	mov    bh,0x97
   14001b5a6:	push   rsp
   14001b5a7:	push   rbp
   14001b5a9:	loop   0x14001b56b
   14001b5ab:	out    0xb8,eax
   14001b5ad:	xchg   edi,eax
   14001b5ae:	push   rsp
   14001b5af:	dec    edi
   14001b5b1:	mov    ecx,0xc7d8f68d
   14001b5b6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b5b7:	retf   
   14001b5b8:	(bad)  
   14001b5b9:	ffree  st(6)
   14001b5bb:	mov    bl,0xd5
   14001b5bd:	ret    0xd99d
   14001b5c0:	leave  
   14001b5c1:	enter  0xf599,0x3b
   14001b5c5:	cmp    bh,0xff
   14001b5c8:	add    BYTE PTR [rbx],bh
   14001b5ca:	(bad)  
   14001b5cb:	inc    DWORD PTR [rax]
   14001b5cd:	rex
   14001b5ce:	lock dec DWORD PTR [rip+0x2bffef5f]        # 0x16c01a534
   14001b5d5:	jno    0x14001b5c5
   14001b5d7:	jmp    FWORD PTR [rax]
   14001b5d9:	outs   dx,DWORD PTR ds:[rsi]
   14001b5da:	in     eax,dx
   14001b5db:	jmp    QWORD PTR [rax]
   14001b5dd:	addr32 out dx,al
   14001b5df:	dec    DWORD PTR [rbx]
   14001b5e1:	pop    rdx
   14001b5e2:	clc    
   14001b5e3:	dec    DWORD PTR [rdx]
   14001b5e5:	pop    rbx
   14001b5e6:	(bad)  
   14001b5e7:	dec    DWORD PTR [rdx-0x7e]
   14001b5ea:	cld    
   14001b5eb:	push   QWORD PTR [rsi-0x290f8351]
   14001b5f1:	ret    0xe09c
   14001b5f4:	in     al,0xd1
   14001b5f6:	scas   al,BYTE PTR es:[rdi]
   14001b5f7:	(bad)  
   14001b5f9:	shr    BYTE PTR [rdi+0x5597b8e9],cl
   14001b5ff:	(bad)  
   14001b600:	jmp    0x14001b5d9
   14001b602:	mov    ch,0xe6
   14001b604:	mov    eax,0xf6ff5497
   14001b609:	jrcxz  0x14001b5cc
   14001b60b:	in     al,0xb8
   14001b60d:	xchg   edi,eax
   14001b60e:	push   rsp
   14001b60f:	call   rax
   14001b611:	mov    edx,0xc5d7f98f
   14001b616:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b617:	retf   0xe0ec
   14001b61a:	int3   
   14001b61b:	stos   DWORD PTR es:[rdi],eax
   14001b61c:	(bad)  
   14001b61e:	movabs ds:0xfc4900fffc7840df,eax
   14001b627:	jmp    QWORD PTR [rcx-0x66]
   14001b62a:	lock jmp QWORD PTR [rbp+0x20fff6c5]
   14001b631:	outs   dx,DWORD PTR ds:[rsi]
   14001b632:	icebp  
   14001b633:	inc    DWORD PTR [rax]
   14001b635:	push   rax
   14001b636:	icebp  
   14001b637:	call   FWORD PTR [rsi]
   14001b639:	imul   esi,edx,0xffffffff
   14001b63c:	sub    eax,0x2dfff274
   14001b641:	jb     0x14001b634
   14001b643:	call   FWORD PTR [rdi]
   14001b645:	addr32 out dx,al
   14001b647:	dec    DWORD PTR [rdx]
   14001b649:	(bad)  
   14001b64a:	(bad)  
   14001b64b:	dec    DWORD PTR [rsi-0x7a]
   14001b64e:	clc    
   14001b64f:	push   QWORD PTR [rbx-0x2c0f915c]
   14001b655:	rcr    BYTE PTR [rbx-0x48251225],0xe7
   14001b65c:	mov    bh,0x97
   14001b65e:	push   rbp
   14001b65f:	(bad)  
   14001b660:	jmp    0x14001b639
   14001b662:	mov    ah,0xe6
   14001b664:	mov    eax,0xf6ff5598
   14001b669:	in     al,0xc2
   14001b66b:	in     eax,0xb8
   14001b66d:	xchg   edi,eax
   14001b66e:	push   rsp
   14001b66f:	call   rcx
   14001b671:	mov    ebx,0xc5d7f990
   14001b676:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b677:	(bad)  
   14001b678:	out    0xe0,eax
   14001b67a:	ret    0x8bb3
   14001b67d:	test   al,0xe3
   14001b67f:	std    
   14001b680:	add    BYTE PTR [rsi-0x1],dl
   14001b683:	call   QWORD PTR [rsi]
   14001b685:	outs   dx,DWORD PTR ds:[rsi]
   14001b686:	in     eax,dx
   14001b687:	(bad)  
   14001b688:	fsub   st(2),st
   14001b68a:	cld    
   14001b68b:	(bad)  
   14001b68c:	(bad)  
   14001b68d:	(bad)  
   14001b68e:	(bad)  
   14001b68f:	(bad)  
   14001b690:	(bad)  
   14001b692:	sti    
   14001b693:	jmp    FWORD PTR [rbp-0x5e]
   14001b696:	idiv   edi
   14001b698:	add    BYTE PTR [rax-0x10],bl
   14001b69b:	dec    DWORD PTR [rcx]
   14001b69d:	pop    rsi
   14001b69e:	bnd jmp QWORD PTR [rdi]
   14001b6a1:	jno    0x14001b695
   14001b6a3:	jmp    FWORD PTR [rbx+rsi*2]
   14001b6a6:	repnz call FWORD PTR [rip+0x14fff167]        # 0x15501a814
   14001b6ad:	ins    DWORD PTR es:[rdi],dx
   14001b6ae:	(bad)  
   14001b6af:	dec    DWORD PTR [rbx-0x3f004d65]
   14001b6b5:	stos   DWORD PTR es:[rdi],eax
   14001b6b6:	jp     0x14001b69a
   14001b6b8:	out    0xd3,al
   14001b6ba:	mov    al,0xe4
   14001b6bc:	mov    eax,0xebff5597
   14001b6c1:	xlat   BYTE PTR ds:[rbx]
   14001b6c2:	mov    ch,0xe6
   14001b6c4:	mov    eax,0xf6ff5598
   14001b6c9:	in     al,0xc2
   14001b6cb:	in     eax,0xb8
   14001b6cd:	xchg   edi,eax
   14001b6ce:	push   rsp
   14001b6cf:	dec    edi
   14001b6d1:	mov    ecx,0xc8d9f88e
   14001b6d6:	stos   BYTE PTR es:[rdi],al
   14001b6d7:	ret    0xdad9
   14001b6da:	mov    ah,0xcf
   14001b6dc:	(bad)  
   14001b6dd:	outs   dx,BYTE PTR ds:[rsi]
   14001b6de:	(bad)  
   14001b6df:	inc    DWORD PTR [rdi+riz*2]
   14001b6e2:	icebp  
   14001b6e3:	jmp    FWORD PTR [rip+0xffffffffdafff07d]        # 0x11b01a766
   14001b6e9:	jmp    0x14001b6e9
   14001b6ee:	(bad)  
   14001b6ef:	(bad)  
   14001b6f0:	(bad)  
   14001b6f1:	(bad)  
   14001b6f2:	(bad)  
   14001b6f3:	(bad)  
   14001b6f4:	(bad)  
   14001b6f5:	(bad)  
   14001b6f6:	(bad)  
   14001b6f7:	inc    eax
   14001b6f9:	fdivr  st,st(1)
   14001b6fb:	push   QWORD PTR [rdx]
   14001b6fd:	jl     0x14001b6f0
   14001b6ff:	inc    DWORD PTR [rax]
   14001b701:	pop    rdx
   14001b702:	out    dx,eax
   14001b703:	call   FWORD PTR [rsi]
   14001b705:	outs   dx,DWORD PTR ds:[rsi]
   14001b706:	repnz jmp FWORD PTR [rbx]
   14001b709:	jne    0x14001b6fb
   14001b70b:	call   QWORD PTR [rdi]
   14001b70d:	ins    BYTE PTR es:[rdi],dx
   14001b70e:	cld    
   14001b70f:	(bad)  
   14001b710:	cmp    BYTE PTR [rsi-0x1],bh
   14001b713:	push   QWORD PTR [rdi-0x27118759]
   14001b719:	(bad)  
   14001b71a:	lahf   
   14001b71b:	jrcxz  0x14001b6d5
   14001b71d:	cwde   
   14001b71e:	push   rsi
   14001b71f:	(bad)  
   14001b720:	jmp    0x14001b6f9
   14001b722:	mov    ah,0xe6
   14001b724:	mov    eax,0xf6ff5598
   14001b729:	in     al,0xc2
   14001b72b:	in     eax,0xb8
   14001b72d:	xchg   edi,eax
   14001b72e:	push   rsp
   14001b72f:	call   rax
   14001b731:	mov    ecx,0xc9daf58e
   14001b736:	stos   DWORD PTR es:[rdi],eax
   14001b737:	ret    
   14001b738:	stos   DWORD PTR es:[rdi],eax
   14001b739:	mov    ebp,0x6f0df2cb
   14001b73e:	(bad)  
   14001b73f:	call   QWORD PTR [rsi]
   14001b741:	jb     0x14001b734
   14001b743:	jmp    QWORD PTR [rbx]
   14001b745:	jl     0x14001b73b
   14001b747:	call   rdi
   14001b749:	out    0xfb,eax
   14001b74b:	(bad)  
   14001b74c:	(bad)  
   14001b74d:	(bad)  
   14001b74e:	(bad)  
   14001b74f:	(bad)  
   14001b750:	(bad)  
   14001b751:	(bad)  
   14001b752:	(bad)  
   14001b753:	(bad)  
   14001b754:	(bad)  
   14001b755:	(bad)  
   14001b756:	(bad)  
   14001b757:	(bad)  
   14001b758:	(bad)  
   14001b759:	(bad)  
   14001b75a:	(bad)  
   14001b75b:	push   rbx
   14001b75d:	stc    
   14001b75e:	(bad)  
   14001b75f:	dec    DWORD PTR [rax+0x6fff7b3]
   14001b765:	movsxd esi,eax
   14001b767:	dec    DWORD PTR [riz*2+0x6f19fff2]
   14001b76e:	repz jmp QWORD PTR [rdx]
   14001b771:	jns    0x14001b772
   14001b773:	call   QWORD PTR [rcx-0x2d0a706a]
   14001b779:	mov    ebp,0x98b8e796
   14001b77e:	push   rsi
   14001b77f:	(bad)  
   14001b780:	jmp    0x14001b759
   14001b782:	mov    ah,0xe6
   14001b784:	mov    eax,0xf6ff5598
   14001b789:	in     al,0xc2
   14001b78b:	in     eax,0xb8
   14001b78d:	xchg   edi,eax
   14001b78e:	push   rsp
   14001b78f:	call   rax
   14001b791:	mov    ecx,0xc9dbf38f
   14001b796:	test   eax,0xec9a64c9
   14001b79b:	call   FWORD PTR [rax]
   14001b79d:	jnp    0x14001b79e
   14001b79f:	call   QWORD PTR [rsi+rsi*2]
   14001b7a2:	bnd jmp QWORD PTR [rsi]
   14001b7a5:	jg     0x14001b79c
   14001b7a7:	(bad)  
   14001b7a8:	(bad)  
   14001b7aa:	cld    
   14001b7ab:	(bad)  
   14001b7ac:	(bad)  
   14001b7ad:	(bad)  
   14001b7ae:	(bad)  
   14001b7af:	(bad)  
   14001b7b0:	(bad)  
   14001b7b1:	(bad)  
   14001b7b2:	(bad)  
   14001b7b3:	(bad)  
   14001b7b4:	(bad)  
   14001b7b5:	(bad)  
   14001b7b6:	(bad)  
   14001b7b7:	(bad)  
   14001b7b8:	(bad)  
   14001b7b9:	(bad)  
   14001b7ba:	(bad)  
   14001b7bb:	(bad)  
   14001b7bc:	(bad)  
   14001b7bd:	(bad)  
   14001b7be:	(bad)  
   14001b7bf:	(bad)  
   14001b7c0:	(bad)  
   14001b7c1:	(bad)  
   14001b7c2:	(bad)  
   14001b7c3:	jmp    rdi
   14001b7c5:	icebp  
   14001b7c6:	(bad)  
   14001b7c7:	dec    DWORD PTR [rdx-0x72]
   14001b7ca:	idiv   bh
   14001b7cc:	or     al,0x67
   14001b7ce:	repz call FWORD PTR [rip+0x74ffff7c]        # 0x1b501b751
   14001b7d5:	mov    fs,WORD PTR [rsi-0x6a422d08]
   14001b7db:	jmp    0x14001b795
   14001b7dd:	cwde   
   14001b7de:	push   rsi
   14001b7df:	(bad)  
   14001b7e0:	jmp    0x14001b7b9
   14001b7e2:	mov    ch,0xe7
   14001b7e4:	mov    eax,0xf6ff5598
   14001b7e9:	in     al,0xc2
   14001b7eb:	in     eax,0xb8
   14001b7ed:	xchg   edi,eax
   14001b7ee:	push   rsp
   14001b7ef:	call   rax
   14001b7f1:	mov    ecx,0xc5d6f08e
   14001b7f6:	movabs ds:0xfd821ffff98b3fcf,eax
   14001b7ff:	call   QWORD PTR [rbx]
   14001b801:	jbe    0x14001b7f6
   14001b803:	jmp    QWORD PTR [rsi]
   14001b805:	xor    dh,0xff
   14001b808:	fucompp 
   14001b80a:	cld    
   14001b80b:	(bad)  
   14001b80c:	(bad)  
   14001b80d:	(bad)  
   14001b80e:	(bad)  
   14001b80f:	(bad)  
   14001b810:	(bad)  
   14001b811:	(bad)  
   14001b812:	(bad)  
   14001b813:	(bad)  
   14001b814:	(bad)  
   14001b815:	(bad)  
   14001b816:	(bad)  
   14001b817:	(bad)  
   14001b818:	(bad)  
   14001b819:	(bad)  
   14001b81a:	(bad)  
   14001b81b:	(bad)  
   14001b81c:	(bad)  
   14001b81d:	(bad)  
   14001b81e:	(bad)  
   14001b81f:	(bad)  
   14001b820:	(bad)  
   14001b821:	(bad)  
   14001b822:	(bad)  
   14001b823:	(bad)  
   14001b824:	(bad)  
   14001b825:	(bad)  
   14001b826:	(bad)  
   14001b827:	push   rcx
   14001b829:	idiv   ch
   14001b82b:	push   QWORD PTR [rip+0xaffef82]        # 0x14b01a7b3
   14001b831:	jno    0x14001b832
   14001b833:	call   FWORD PTR [rsp+rax*4-0x4d]
   14001b837:	stc    
   14001b838:	sar    DWORD PTR [rsi-0x6847146a],cl
   14001b83e:	push   rbp
   14001b83f:	(bad)  
   14001b840:	jmp    0x14001b81a
   14001b842:	mov    dh,0xe7
   14001b844:	mov    eax,0xf6ff5598
   14001b849:	in     al,0xc2
   14001b84b:	in     eax,0xb8
   14001b84d:	xchg   edi,eax
   14001b84e:	push   rsp
   14001b84f:	call   rax
   14001b851:	mov    ecx,0xc5d7f08e
   14001b856:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b857:	(bad)  
   14001b858:	ds mov ecx,?
   14001b85b:	call   FWORD PTR [rdi]
   14001b85d:	xchg   ch,bh
   14001b85f:	call   QWORD PTR [rcx+rdi*2]
   14001b862:	repz jmp QWORD PTR [rip+0xffffffffd8fff782]        # 0x11901afeb
   14001b869:	jmp    0x14001b86b
   14001b86e:	(bad)  
   14001b86f:	(bad)  
   14001b870:	(bad)  
   14001b871:	(bad)  
   14001b872:	(bad)  
   14001b873:	(bad)  
   14001b874:	(bad)  
   14001b875:	(bad)  
   14001b876:	(bad)  
   14001b877:	(bad)  
   14001b878:	(bad)  
   14001b879:	(bad)  
   14001b87a:	(bad)  
   14001b87b:	(bad)  
   14001b87c:	(bad)  
   14001b87d:	(bad)  
   14001b87e:	(bad)  
   14001b87f:	(bad)  
   14001b880:	(bad)  
   14001b881:	(bad)  
   14001b882:	(bad)  
   14001b883:	(bad)  
   14001b884:	(bad)  
   14001b885:	(bad)  
   14001b886:	(bad)  
   14001b887:	(bad)  
   14001b888:	jmp    0x18001b67f
   14001b88d:	mov    esi,esp
   14001b88f:	dec    DWORD PTR [rdi+rsi*2]
   14001b892:	(bad)  
   14001b893:	call   FWORD PTR [rdi-0x7b]
   14001b896:	mov    dl,0xf9
   14001b898:	sar    BYTE PTR [rbp-0x6847146b],cl
   14001b89e:	push   rbp
   14001b89f:	(bad)  
   14001b8a0:	in     al,dx
   14001b8a1:	fidiv  DWORD PTR [rsi+0x5598b8e7]
   14001b8a7:	push   rsi
   14001b8a9:	in     al,0xc2
   14001b8ab:	out    0xb8,al
   14001b8ad:	xchg   edi,eax
   14001b8ae:	push   rsp
   14001b8af:	call   rax
   14001b8b1:	mov    ecx,0xc5d7f38f
   14001b8b6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b8b7:	retf   0x985f
   14001b8ba:	in     al,dx
   14001b8bb:	call   FWORD PTR [rsi]
   14001b8bd:	mov    bh,bh
   14001b8bf:	call   QWORD PTR [rsp+rdi*2]
   14001b8c2:	repnz jmp FWORD PTR [rdx]
   14001b8c5:	xchg   bh,dh
   14001b8c7:	(bad)  
   14001b8c8:	fucomp st(3)
   14001b8ca:	std    
   14001b8cb:	(bad)  
   14001b8cc:	(bad)  
   14001b8cd:	(bad)  
   14001b8ce:	(bad)  
   14001b8cf:	(bad)  
   14001b8d0:	(bad)  
   14001b8d1:	(bad)  
   14001b8d2:	(bad)  
   14001b8d3:	(bad)  
   14001b8d4:	(bad)  
   14001b8d5:	(bad)  
   14001b8d6:	(bad)  
   14001b8d7:	(bad)  
   14001b8d8:	(bad)  
   14001b8d9:	(bad)  
   14001b8da:	(bad)  
   14001b8db:	(bad)  
   14001b8dc:	(bad)  
   14001b8dd:	(bad)  
   14001b8de:	(bad)  
   14001b8df:	(bad)  
   14001b8e0:	cld    
   14001b8e1:	std    
   14001b8e2:	(bad)  
   14001b8e3:	inc    eax
   14001b8e5:	(bad)  
   14001b8e7:	push   QWORD PTR [rdi+rax*4]
   14001b8ea:	cmc    
   14001b8eb:	call   QWORD PTR [rip+0x1efff573]        # 0x15f01ae64
   14001b8f1:	test   edi,edi
   14001b8f3:	push   QWORD PTR [rsi-0x72]
   14001b8f6:	movabs ds:0x5698b8ea91b8cff7,eax
   14001b8ff:	(bad)  
   14001b900:	jmp    0x14001b8d9
   14001b902:	mov    ch,0xe7
   14001b904:	mov    eax,0xf6ff5497
   14001b909:	in     al,0xc2
   14001b90b:	out    0xb8,eax
   14001b90d:	xchg   edi,eax
   14001b90e:	push   rsp
   14001b90f:	call   rcx
   14001b911:	mov    edx,0xc8d9f78f
   14001b916:	stos   BYTE PTR es:[rdi],al
   14001b917:	ret    
   14001b918:	xchg   esp,eax
   14001b919:	test   eax,0x8a18f7ba
   14001b91e:	(bad)  
   14001b91f:	call   QWORD PTR [rdi+rdi*2]
   14001b922:	repz jmp FWORD PTR [rdx]
   14001b925:	mov    edi,esi
   14001b927:	(bad)  
   14001b928:	fsub   st(4),st
   14001b92a:	cld    
   14001b92b:	(bad)  
   14001b92c:	(bad)  
   14001b92d:	(bad)  
   14001b92e:	(bad)  
   14001b92f:	(bad)  
   14001b930:	(bad)  
   14001b931:	(bad)  
   14001b932:	(bad)  
   14001b933:	(bad)  
   14001b934:	(bad)  
   14001b935:	(bad)  
   14001b936:	(bad)  
   14001b937:	(bad)  
   14001b938:	(bad)  
   14001b939:	(bad)  
   14001b93a:	(bad)  
   14001b93b:	jmp    rsp
   14001b93d:	lock std 
   14001b93f:	jmp    QWORD PTR [rdx-0x5b]
   14001b942:	stc    
   14001b943:	inc    DWORD PTR [rcx]
   14001b945:	ins    DWORD PTR es:[rdi],dx
   14001b946:	idiv   bh
   14001b948:	(bad)  
   14001b949:	js     0x14001b940
   14001b94b:	call   FWORD PTR [rdx]
   14001b94d:	jle    0x14001b947
   14001b94f:	jmp    QWORD PTR [rsi]
   14001b951:	(bad)  
   14001b952:	(bad)  
   14001b953:	call   QWORD PTR [rsi-0x310b796e]
   14001b959:	mov    ecx,0x98b8e692
   14001b95e:	push   rsi
   14001b95f:	(bad)  
   14001b960:	(bad)  
   14001b961:	(bad)  
   14001b962:	mov    bl,0xe6
   14001b964:	mov    eax,0xf6ff5598
   14001b969:	in     al,0xc2
   14001b96b:	out    0xb8,eax
   14001b96d:	xchg   edi,eax
   14001b96e:	push   rsp
   14001b96f:	call   rax
   14001b971:	mov    edx,0xcadbfa8f
   14001b976:	lods   eax,DWORD PTR ds:[rsi]
   14001b977:	rol    esp,0xc2
   14001b97a:	pushf  
   14001b97b:	fcomp  DWORD PTR [rsi+rax*4]
   14001b97e:	(bad)  
   14001b97f:	dec    DWORD PTR [rdi]
   14001b981:	cmp    ecx,0xffffffff
   14001b984:	xor    BYTE PTR [rsp+rsi*8-0x4111e01],cl
   14001b98b:	(bad)  
   14001b98c:	(bad)  
   14001b98d:	(bad)  
   14001b98e:	(bad)  
   14001b98f:	(bad)  
   14001b990:	(bad)  
   14001b991:	(bad)  
   14001b992:	(bad)  
   14001b993:	(bad)  
   14001b994:	cld    
   14001b995:	cld    
   14001b996:	(bad)  
   14001b997:	jmp    FWORD PTR [rsi+0x23fffad2]
   14001b99d:	test   edi,esi
   14001b99f:	inc    DWORD PTR [rsi]
   14001b9a1:	jno    0x14001b999
   14001b9a3:	jmp    QWORD PTR [rbx]
   14001b9a5:	test   dh,dh
   14001b9a7:	jmp    FWORD PTR [rip+0x1afff485]        # 0x15b01ae32
   14001b9ad:	xchg   edi,edi
   14001b9af:	inc    DWORD PTR [rax-0x6c]
   14001b9b2:	hlt    
   14001b9b3:	push   QWORD PTR [rbx-0x22139065]
   14001b9b9:	leave  
   14001b9ba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b9bb:	in     eax,0xb8
   14001b9bd:	cwde   
   14001b9be:	push   rsi
   14001b9bf:	(bad)  
   14001b9c0:	jmp    0xf8e96d9b
   14001b9c5:	cwde   
   14001b9c6:	push   rbp
   14001b9c7:	push   rsi
   14001b9c9:	in     al,0xc2
   14001b9cb:	out    0xb8,al
   14001b9cd:	xchg   edi,eax
   14001b9ce:	push   rsp
   14001b9cf:	dec    edi
   14001b9d1:	mov    eax,0xc8d8fa8d
   14001b9d6:	test   eax,0xb9d7e1c5
   14001b9db:	mov    dh,0x67
   14001b9dd:	xchg   esp,eax
   14001b9de:	(bad)  
   14001b9df:	inc    DWORD PTR [rax]
   14001b9e1:	xchg   edi,edi
   14001b9e3:	push   QWORD PTR [rbx]
   14001b9e5:	(bad)  
   14001b9e6:	repz push rbp
   14001b9e9:	clc    
   14001b9ea:	cld    
   14001b9eb:	(bad)  
   14001b9ec:	(bad)  
   14001b9ed:	(bad)  
   14001b9ee:	(bad)  
   14001b9ef:	(bad)  
   14001b9f0:	fldl2e 
   14001b9f2:	std    
   14001b9f3:	jmp    QWORD PTR [rax-0x57]
   14001b9f6:	cli    
   14001b9f7:	inc    DWORD PTR [rdx]
   14001b9f9:	jne    0x14001b9f0
   14001b9fb:	call   QWORD PTR [rip+0x2cfff67e]        # 0x16d01b07f
   14001ba01:	mov    esi,esi
   14001ba03:	jmp    FWORD PTR [rsi]
   14001ba05:	mov    esi,esi
   14001ba07:	jmp    QWORD PTR [rcx]
   14001ba09:	cmp    eax,0xffffffff
   14001ba0c:	sbb    DWORD PTR [rdx-0x6a710001],edx
   14001ba12:	sahf   
   14001ba13:	cld    
   14001ba14:	shr    DWORD PTR [rcx-0x1b091b85],0xc2
   14001ba1b:	jmp    0x13f5651d8
   14001ba20:	out    dx,al
   14001ba21:	(bad)  [rdi+0x5598b8eb]
   14001ba27:	push   rsi
   14001ba29:	in     al,0xc3
   14001ba2b:	out    0xb8,al
   14001ba2d:	xchg   edi,eax
   14001ba2e:	push   rsp
   14001ba2f:	dec    edi
   14001ba31:	mov    ecx,0xc3d5fa8d
   14001ba36:	movabs ds:0x84b1bcacc8ddeac9,eax
   14001ba3f:	out    0xf,eax
   14001ba41:	xchg   esp,edi
   14001ba43:	dec    DWORD PTR [rbx]
   14001ba45:	nop
   14001ba46:	(bad)  
   14001ba47:	(bad)  
   14001ba48:	jle    0x14001ba00
   14001ba4a:	clc    
   14001ba4b:	call   FWORD PTR [rax+0x2dfff8c6]
   14001ba51:	xchg   ecx,eax
   14001ba52:	idiv   edi
   14001ba54:	add    eax,0x24fff77b
   14001ba59:	mov    dh,bh
   14001ba5b:	jmp    FWORD PTR [rsi]
   14001ba5d:	nop
   14001ba5e:	idiv   edi
   14001ba60:	(bad)  
   14001ba61:	(bad)  
   14001ba62:	idiv   bh
   14001ba64:	sub    BYTE PTR [rcx-0x6ef30009],cl
   14001ba6a:	(bad)  
   14001ba6b:	call   QWORD PTR [rdx-0x68]
   14001ba6e:	in     al,dx
   14001ba6f:	push   QWORD PTR [rbx-0x200e966b]
   14001ba75:	int3   
   14001ba76:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ba77:	in     al,0xf5
   14001ba79:	loope  0x14001ba3a
   14001ba7b:	out    dx,eax
   14001ba7c:	mov    eax,0xedff5497
   14001ba81:	fnstenv [rsi+0x5598b8e9]
   14001ba87:	push   rsi
   14001ba89:	in     al,0xc3
   14001ba8b:	out    0xb8,al
   14001ba8d:	xchg   edi,eax
   14001ba8e:	push   rsp
   14001ba8f:	dec    esi
   14001ba91:	mov    eax,0xc0d2fa8c
   14001ba96:	sahf   
   14001ba97:	retf   0xdbe8
   14001ba9a:	(bad)  
   14001ba9b:	mov    al,0xd7
   14001ba9d:	ret    
   14001ba9e:	movabs al,ds:0xff8902fe83a0aad6
   14001baa7:	inc    DWORD PTR [rax]
   14001baa9:	mov    edi,?
   14001baab:	dec    DWORD PTR [rdx]
   14001baad:	(bad)  
   14001baae:	clc    
   14001baaf:	call   FWORD PTR [rdi]
   14001bab1:	mov    ah,dh
   14001bab3:	push   QWORD PTR [rbx]
   14001bab5:	xchg   edx,eax
   14001bab6:	hlt    
   14001bab7:	push   QWORD PTR [rip+0x31fff491]        # 0x17201af4e
   14001babd:	nop
   14001babe:	repz call FWORD PTR [rsi]
   14001bac1:	(bad)  
   14001bac2:	(bad)  
   14001bac3:	inc    DWORD PTR [rsi]
   14001bac5:	xchg   esp,eax
   14001bac6:	(bad)  
   14001bac7:	inc    DWORD PTR [rsi+rdx*4-0xc]
   14001bacb:	push   QWORD PTR [rbx+rbx*4-0x38220b89]
   14001bad2:	movabs ds:0xb8dcefe8b8dbeee9,eax
   14001badb:	out    dx,eax
   14001badc:	mov    eax,0xedff5597
   14001bae1:	fidiv  DWORD PTR [rsi+0x5598b8ea]
   14001bae7:	push   rsi
   14001bae9:	in     al,0xc3
   14001baeb:	out    0xb8,eax
   14001baed:	xchg   edi,eax
   14001baee:	push   rsp
   14001baef:	dec    ebp
   14001baf1:	mov    dh,0x8a
   14001baf3:	cli    
   14001baf4:	sar    DWORD PTR [rdi-0x271a3563],1
   14001bafa:	shl    BYTE PTR [rbx-0x23603c29],0xd5
   14001bb01:	mov    edi,0xb2c0e798
   14001bb06:	mov    ch,al
   14001bb08:	rex.RX xchg edx,eax
   14001bb0a:	sar    edi,cl
   14001bb0c:	add    BYTE PTR [rcx-0x66f70001],dl
   14001bb12:	(bad)  
   14001bb13:	dec    DWORD PTR [rdi]
   14001bb15:	xchg   edi,eax
   14001bb16:	(bad)  
   14001bb17:	dec    DWORD PTR [rdx]
   14001bb19:	xchg   esp,eax
   14001bb1a:	(bad)  
   14001bb1b:	inc    DWORD PTR [rcx]
   14001bb1d:	xchg   ebx,eax
   14001bb1e:	(bad)  
   14001bb1f:	call   QWORD PTR [rdi]
   14001bb21:	xchg   esp,eax
   14001bb22:	(bad)  
   14001bb23:	jmp    FWORD PTR [rsp+rdx*4-0x40]
   14001bb27:	inc    edx
   14001bb29:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bb2a:	jns    0x14001bb1e
   14001bb2c:	ffree  st(7)
   14001bb2e:	movabs ds:0xaed2e5ebb4d9ece9,al
   14001bb37:	call   0x12eb9962a
   14001bb3c:	mov    eax,0xedff5597
   14001bb41:	fidiv  DWORD PTR [rsi+0x5598b8ea]
   14001bb47:	push   rsi
   14001bb49:	in     al,0xc3
   14001bb4b:	out    0xb8,eax
   14001bb4d:	xchg   edi,eax
   14001bb4e:	push   rsp
   14001bb4f:	dec    ebp
   14001bb51:	mov    bh,0x8b
   14001bb53:	stc    
   14001bb54:	rol    al,1
   14001bb56:	lahf   
   14001bb57:	ret    
   14001bb58:	jrcxz  0x14001bb31
   14001bb5a:	mov    edi,0x97bed2af
   14001bb5f:	loopne 0x14001bb37
   14001bb61:	ret    0xe49c
   14001bb64:	loop   0x14001bb38
   14001bb66:	mov    ah,0xc7
   14001bb68:	fld    st(1)
   14001bb6a:	xchg   edx,eax
   14001bb6b:	jmp    0x139906b31
   14001bb70:	and    DWORD PTR [rax-0x6ba90751],0xffffffcc
   14001bb77:	std    
   14001bb78:	pop    rsi
   14001bb79:	xchg   esi,eax
   14001bb7a:	(bad)  
   14001bb7b:	sti    
   14001bb7c:	xchg   edi,eax
   14001bb7d:	movabs ds:0xc1d9f190b3cbf8a6,eax
   14001bb86:	xchg   edx,eax
   14001bb87:	jmp    0x125ad8b6f
   14001bb8c:	jmp    0x125eb6d65
   14001bb91:	shr    BYTE PTR [rbx+rbp*8-0x1753301d],1
   14001bb98:	out    dx,al
   14001bb99:	fidiv  DWORD PTR [rdi+0x5597b8ed]
   14001bb9f:	(bad)  
   14001bba0:	in     eax,dx
   14001bba1:	fnstenv [rsi+0x5598b8e7]
   14001bba7:	(bad)  
   14001bba8:	cli    
   14001bba9:	out    0xc6,eax
   14001bbab:	jmp    0x13f565368
   14001bbb0:	sar    DWORD PTR [rdx+rdx*4-0x6e473201],cl
   14001bbb7:	loope  0x14001bba2
   14001bbb9:	fadd   st(2),st
   14001bbbb:	mov    eax,0xe0a5c8dd
   14001bbc0:	fmulp  st(0),st
   14001bbc2:	movabs al,ds:0xadd1e6e0b1d3e6fa
   14001bbcb:	lock (bad) 
   14001bbcd:	shr    DWORD PTR [rsi-0x502b1607],cl
   14001bbd3:	cmc    
   14001bbd4:	(bad)  
   14001bbd5:	(bad)  
   14001bbd6:	scas   eax,DWORD PTR es:[rdi]
   14001bbd7:	cmc    
   14001bbd8:	(bad)  
   14001bbd9:	(bad)  
   14001bbda:	mov    cl,0xf5
   14001bbdc:	(bad)  
   14001bbdd:	(bad)  
   14001bbde:	mov    al,0xf4
   14001bbe0:	(bad)  
   14001bbe1:	(bad)  
   14001bbe2:	mov    dl,0xf2
   14001bbe4:	in     eax,dx
   14001bbe5:	fnstenv [rbp-0x4824100f]
   14001bbeb:	repnz in eax,dx
   14001bbed:	fidiv  DWORD PTR [rbp-0x4b26130f]
   14001bbf3:	out    dx,eax
   14001bbf4:	in     al,dx
   14001bbf5:	fnstenv [rbp-0x3e1b0817]
   14001bbfb:	icebp  
   14001bbfc:	mov    esp,0xedff5b9d
   14001bc01:	fnstenv [rbp+rbp*8-0x97593a]
   14001bc08:	fcmovb st,st(4)
   14001bc0a:	popf   
   14001bc0b:	ror    ebp,0xb5
   14001bc0e:	mov    DWORD PTR [rcx-0x61],ebx
   14001bc11:	test   BYTE PTR [rcx+0x3a],cl
   14001bc14:	mov    eax,0xccd36f9e
   14001bc19:	scas   al,BYTE PTR es:[rdi]
   14001bc1a:	jb     0x14001bc1b
   14001bc1c:	int3   
   14001bc1d:	scas   al,BYTE PTR es:[rdi]
   14001bc1e:	jb     0x14001bc1f
   14001bc20:	int3   
   14001bc21:	scas   al,BYTE PTR es:[rdi]
   14001bc22:	jb     0x14001bc23
   14001bc24:	retf   
   14001bc25:	lods   eax,DWORD PTR ds:[rsi]
   14001bc26:	jno    0x14001bc27
   14001bc28:	retf   
   14001bc29:	lods   al,BYTE PTR ds:[rsi]
   14001bc2a:	jo     0x14001bc2b
   14001bc2c:	retf   
   14001bc2d:	lods   al,BYTE PTR ds:[rsi]
   14001bc2e:	jo     0x14001bc2f
   14001bc30:	retf   0x6fab
   14001bc33:	dec    ecx
   14001bc35:	stos   DWORD PTR es:[rdi],eax
   14001bc36:	ins    DWORD PTR es:[rdi],dx
   14001bc37:	dec    eax
   14001bc39:	stos   BYTE PTR es:[rdi],al
   14001bc3a:	ins    BYTE PTR es:[rdi],dx
   14001bc3b:	dec    eax
   14001bc3d:	test   eax,0xa8c7ff6b
   14001bc42:	push   0xffffffffffffffff
   14001bc44:	(bad)  
   14001bc45:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bc46:	imul   edi,edi,0xff68a6c6
   14001bc4c:	vpackuswb ymm7,ymm11,ymm7
   14001bc50:	(bad)  
   14001bc51:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bc52:	inc    dx
   14001bc55:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bc56:	gs inc edx
   14001bc59:	movabs ds:0x9ab5944f88a4ff64,eax
   14001bc62:	push   0x578da974
   14001bc67:	push   rdx
	...
   14001bcd0:	inc    BYTE PTR [rax]
   14001bcd2:	add    eax,DWORD PTR [rax]
   14001bcd4:	add    BYTE PTR [rax],0x1
	...
   14001bd27:	add    BYTE PTR [rax],al
   14001bd29:	add    BYTE PTR [rbx],al
   14001bd2b:	add    bh,bh
   14001bd2d:	(bad)  
   14001bd2e:	inc    DWORD PTR [rax]
   14001bd30:	sub    BYTE PTR [rax],al
   14001bd32:	add    BYTE PTR [rax],al
   14001bd34:	adc    BYTE PTR [rax],al
   14001bd36:	add    BYTE PTR [rax],al
   14001bd38:	and    BYTE PTR [rax],al
   14001bd3a:	add    BYTE PTR [rax],al
   14001bd3c:	add    DWORD PTR [rax],eax
   14001bd3e:	and    BYTE PTR [rax],al
   14001bd40:	add    BYTE PTR [rax],al
   14001bd42:	add    BYTE PTR [rax],al
   14001bd44:	add    al,0x0
	...
   14001bd57:	add    cl,cl
   14001bd59:	cwde   
   14001bd5a:	push   rbp
   14001bd5b:	xchg   ecx,ecx
   14001bd5d:	cwde   
   14001bd5e:	push   rbp
   14001bd5f:	lock leave 
   14001bd61:	cwde   
   14001bd62:	push   rbp
   14001bd63:	dec    ecx
   14001bd65:	cwde   
   14001bd66:	push   rbp
   14001bd67:	dec    ecx
   14001bd69:	cwde   
   14001bd6a:	push   rbp
   14001bd6b:	dec    ecx
   14001bd6d:	cwde   
   14001bd6e:	push   rbp
   14001bd6f:	dec    ecx
   14001bd71:	cwde   
   14001bd72:	push   rbp
   14001bd73:	dec    ecx
   14001bd75:	cwde   
   14001bd76:	push   rbp
   14001bd77:	dec    ecx
   14001bd79:	cwde   
   14001bd7a:	push   rbp
   14001bd7b:	dec    ecx
   14001bd7d:	cwde   
   14001bd7e:	push   rbp
   14001bd7f:	dec    ecx
   14001bd81:	cwde   
   14001bd82:	push   rbp
   14001bd83:	dec    ecx
   14001bd85:	cwde   
   14001bd86:	push   rbp
   14001bd87:	dec    ecx
   14001bd89:	cwde   
   14001bd8a:	push   rbp
   14001bd8b:	dec    ecx
   14001bd8d:	cwde   
   14001bd8e:	push   rbp
   14001bd8f:	dec    ecx
   14001bd91:	cwde   
   14001bd92:	push   rbp
   14001bd93:	repz leave 
   14001bd95:	cwde   
   14001bd96:	push   rbp
   14001bd97:	mov    cl,cl
   14001bd99:	cwde   
   14001bd9a:	push   rbp
   14001bd9b:	lock in al,dx
   14001bd9d:	(bad)  
   14001bd9e:	mov    ah,0xdd
   14001bda0:	jmp    0x14001bd76
   14001bda2:	mov    al,0xff
   14001bda4:	jmp    0x128016c7b
   14001bda9:	shr    BYTE PTR [rbx-0x56311901],1
   14001bdaf:	jmp    rbp
   14001bdb1:	int    0xa7
   14001bdb3:	jmp    rsp
   14001bdb5:	retf   
   14001bdb6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bdb7:	jmp    rsp
   14001bdb9:	retf   0xffa4
   14001bdbc:	in     al,0xca
   14001bdbe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bdbf:	jmp    rsp
   14001bdc1:	retf   0xffa4
   14001bdc4:	in     al,0xca
   14001bdc6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bdc7:	jmp    rsp
   14001bdc9:	retf   0xffa4
   14001bdcc:	in     al,0xca
   14001bdce:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bdcf:	jmp    rsp
   14001bdd1:	int3   
   14001bdd2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bdd3:	(bad)  
   14001bdd5:	cwde   
   14001bdd6:	push   rbp
   14001bdd7:	repz leave 
   14001bdd9:	cwde   
   14001bdda:	push   rbp
   14001bddb:	(bad)  
   14001bddc:	in     eax,dx
   14001bddd:	xlat   BYTE PTR ds:[rbx]
   14001bdde:	mov    bh,0xff
   14001bde0:	loope  0x14001bda1
   14001bde2:	mov    bh,bh
   14001bde4:	fistp  QWORD PTR [rbp+rax*4-0x7e462301]
   14001bdeb:	jmp    QWORD PTR [rax+0x4eff9aa6]
   14001bdf1:	mov    es,ebx
   14001bdf3:	jmp    QWORD PTR [rdx]
   14001bdf5:	(bad)  
   14001bdf6:	xlat   BYTE PTR ds:[rbx]
   14001bdf7:	jmp    QWORD PTR [rcx]
   14001bdf9:	jg     0x14001bdcf
   14001bdfb:	dec    DWORD PTR [rcx-0x77]
   14001bdfe:	mov    ebp,0x919e99ff
   14001be03:	call   rsp
   14001be05:	lods   eax,DWORD PTR ds:[rsi]
   14001be06:	jno    0x14001be07
   14001be08:	(bad)  
   14001be09:	lods   eax,DWORD PTR ds:[rsi]
   14001be0a:	jno    0x14001be0b
   14001be0c:	(bad)  
   14001be0d:	lods   eax,DWORD PTR ds:[rsi]
   14001be0e:	jno    0x14001be0f
   14001be10:	in     al,0xca
   14001be12:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001be13:	dec    ecx
   14001be15:	cwde   
   14001be16:	push   rbp
   14001be17:	dec    ecx
   14001be19:	cwde   
   14001be1a:	push   rbp
   14001be1b:	(bad)  
   14001be1c:	out    dx,eax
   14001be1d:	fidivr DWORD PTR [rcx-0x703e1c01]
   14001be23:	(bad)  
   14001be24:	fidivr DWORD PTR [rsp+rcx*4-0x356eb201]
   14001be2b:	inc    DWORD PTR [rax]
   14001be2d:	jg     0x14001be22
   14001be2f:	inc    DWORD PTR [rax]
   14001be31:	cmp    eax,0xffffffff
   14001be34:	add    BYTE PTR [rbx+rdi*8-0x57aff01],al
   14001be3b:	inc    DWORD PTR [rax]
   14001be3d:	xor    ah,0xff
   14001be40:	add    BYTE PTR [rcx-0x17],bh
   14001be43:	(bad)  
   14001be44:	(bad)  
   14001be45:	test   BYTE PTR [rdi+0x74aaccff],bh
   14001be4b:	call   rsp
   14001be4d:	lods   eax,DWORD PTR ds:[rsi]
   14001be4e:	jno    0x14001be4f
   14001be50:	in     al,0xca
   14001be52:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001be53:	dec    ecx
   14001be55:	cwde   
   14001be56:	push   rbp
   14001be57:	dec    ecx
   14001be59:	cwde   
   14001be5a:	push   rbp
   14001be5b:	push   rcx
   14001be5d:	fdivr  QWORD PTR [rbp-0x6c3a1901]
   14001be63:	call   FWORD PTR [rbp-0x6a]
   14001be66:	ret    
   14001be67:	inc    DWORD PTR [rax]
   14001be69:	xor    edi,0xff951eff
   14001be6f:	jmp    QWORD PTR [rbp+0xfffffd5]
   14001be75:	nop
   14001be76:	(bad)  
   14001be77:	inc    DWORD PTR [rax]
   14001be79:	mov    edi,edi
   14001be7b:	inc    DWORD PTR [rax]
   14001be7d:	mov    edi,edi
   14001be7f:	inc    DWORD PTR [rax]
   14001be81:	mov    bh,bh
   14001be83:	inc    DWORD PTR [rax]
   14001be85:	jnp    0x14001be73
   14001be87:	dec    DWORD PTR [rbx-0x7d]
   14001be8a:	mov    dl,0xff
   14001be8c:	(bad)  
   14001be8d:	lods   eax,DWORD PTR ds:[rsi]
   14001be8e:	jno    0x14001be8f
   14001be90:	in     al,0xca
   14001be92:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001be93:	dec    ecx
   14001be95:	cwde   
   14001be96:	push   rbp
   14001be97:	dec    ecx
   14001be99:	cwde   
   14001be9a:	push   rbp
   14001be9b:	(bad)  
   14001be9c:	stc    
   14001be9d:	out    0xcc,eax
   14001be9f:	jmp    FWORD PTR [rdi+0x3ffacb4]
   14001bea5:	jle    0x14001be97
   14001bea7:	inc    DWORD PTR [rax]
   14001bea9:	xchg   edi,edi
   14001beab:	call   FWORD PTR [rsi]
   14001bead:	xchg   esi,eax
   14001beae:	(bad)  
   14001beaf:	(bad)  
   14001beb0:	(bad)  
   14001beb1:	(bad)  
   14001beb2:	(bad)  
   14001beb3:	jmp    rsp
   14001beb5:	repz (bad) 
   14001beb7:	dec    DWORD PTR [rax-0x55]
   14001beba:	(bad)  
   14001bebb:	inc    DWORD PTR [rax]
   14001bebd:	mov    bh,bh
   14001bebf:	inc    DWORD PTR [rax]
   14001bec1:	mov    edi,edi
   14001bec3:	inc    DWORD PTR [rax]
   14001bec5:	mov    bh,bh
   14001bec7:	inc    DWORD PTR [rdx]
   14001bec9:	jbe    0x14001bead
   14001becb:	call   QWORD PTR [rbp-0x1b006f66]
   14001bed1:	retf   0xffa4
   14001bed4:	leave  
   14001bed5:	cwde   
   14001bed6:	push   rbp
   14001bed7:	dec    ecx
   14001bed9:	cwde   
   14001beda:	push   rbp
   14001bedb:	(bad)  
   14001bedc:	(bad)  
   14001bedd:	out    dx,al
   14001bede:	(bad)  
   14001bedf:	call   QWORD PTR [rdi-0x65]
   14001bee2:	(bad)  
   14001bee3:	inc    DWORD PTR [rax]
   14001bee5:	(bad)  
   14001bee6:	clc    
   14001bee7:	inc    DWORD PTR [rax]
   14001bee9:	xchg   edi,edi
   14001beeb:	call   FWORD PTR [rsi]
   14001beed:	xchg   edi,eax
   14001beee:	(bad)  
   14001beef:	(bad)  
   14001bef0:	(bad)  
   14001bef1:	(bad)  
   14001bef2:	(bad)  
   14001bef3:	(bad)  
   14001bef4:	(bad)  
   14001bef5:	(bad)  
   14001bef6:	(bad)  
   14001bef7:	(bad)  
   14001bef8:	(bad)  
   14001bef9:	(bad)  
   14001befa:	(bad)  
   14001befb:	call   FWORD PTR [rcx+0xcfffed0]
   14001bf01:	nop
   14001bf02:	(bad)  
   14001bf03:	inc    DWORD PTR [rax]
   14001bf05:	mov    edi,edi
   14001bf07:	inc    DWORD PTR [rax]
   14001bf09:	jle    0x14001befc
   14001bf0b:	(bad)  
   14001bf0c:	(bad)  
   14001bf0d:	(bad)  
   14001bf0e:	mov    esp,0xa4cae4ff
   14001bf13:	dec    ecx
   14001bf15:	cwde   
   14001bf16:	push   rbp
   14001bf17:	dec    ecx
   14001bf19:	cwde   
   14001bf1a:	push   rbp
   14001bf1b:	(bad)  
   14001bf1c:	(bad)  
   14001bf1d:	out    dx,al
   14001bf1e:	(bad)  
   14001bf1f:	push   QWORD PTR [rcx]
   14001bf21:	(bad)  
   14001bf22:	loop   0x14001bf23
   14001bf24:	add    BYTE PTR [rsp+rdi*8-0x77ff01],al
   14001bf2b:	call   FWORD PTR [rsi]
   14001bf2d:	xchg   edi,eax
   14001bf2e:	(bad)  
   14001bf2f:	(bad)  
   14001bf30:	(bad)  
   14001bf31:	(bad)  
   14001bf32:	(bad)  
   14001bf33:	(bad)  
   14001bf34:	(bad)  
   14001bf35:	(bad)  
   14001bf36:	(bad)  
   14001bf37:	(bad)  
   14001bf38:	(bad)  
   14001bf39:	(bad)  
   14001bf3a:	(bad)  
   14001bf3b:	(bad)  
   14001bf3c:	(bad)  
   14001bf3d:	(bad)  
   14001bf3e:	(bad)  
   14001bf3f:	(bad)  
   14001bf40:	fdivrp st(0),st
   14001bf42:	(bad)  
   14001bf43:	(bad)  
   14001bf44:	(bad)  
   14001bf45:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bf46:	(bad)  
   14001bf47:	inc    DWORD PTR [rax]
   14001bf49:	test   cl,bh
   14001bf4b:	jmp    QWORD PTR [rax]
   14001bf4d:	js     0x14001bf18
   14001bf4f:	jmp    rsp
   14001bf51:	retf   0xffa4
   14001bf54:	leave  
   14001bf55:	cwde   
   14001bf56:	push   rbp
   14001bf57:	dec    ecx
   14001bf59:	cwde   
   14001bf5a:	push   rbp
   14001bf5b:	(bad)  
   14001bf5c:	(bad)  
   14001bf5d:	out    dx,al
   14001bf5e:	(bad)  
   14001bf5f:	jmp    FWORD PTR [rdi]
   14001bf61:	mov    ebx,fs
   14001bf63:	inc    DWORD PTR [rax]
   14001bf65:	test   ah,bh
   14001bf67:	inc    DWORD PTR [rax]
   14001bf69:	xchg   edi,edi
   14001bf6b:	call   FWORD PTR [rsi]
   14001bf6d:	xchg   edi,eax
   14001bf6e:	(bad)  
   14001bf6f:	(bad)  
   14001bf70:	(bad)  
   14001bf71:	(bad)  
   14001bf72:	(bad)  
   14001bf73:	(bad)  
   14001bf74:	(bad)  
   14001bf75:	(bad)  
   14001bf76:	(bad)  
   14001bf77:	(bad)  
   14001bf78:	(bad)  
   14001bf79:	(bad)  
   14001bf7a:	(bad)  
   14001bf7b:	(bad)  
   14001bf7c:	(bad)  
   14001bf7d:	(bad)  
   14001bf7e:	(bad)  
   14001bf7f:	(bad)  
   14001bf80:	fsubr  st,st(5)
   14001bf82:	(bad)  
   14001bf83:	push   QWORD PTR [rsi]
   14001bf85:	movabs ds:0x781ffff98300ffff,al
   14001bf8e:	retf   0xe4ff
   14001bf91:	retf   
   14001bf92:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bf93:	dec    ecx
   14001bf95:	cwde   
   14001bf96:	push   rbp
   14001bf97:	dec    ecx
   14001bf99:	cwde   
   14001bf9a:	push   rbp
   14001bf9b:	(bad)  
   14001bf9c:	(bad)  
   14001bf9d:	out    dx,al
   14001bf9e:	(bad)  
   14001bf9f:	call   FWORD PTR [rdx-0x61]
   14001bfa2:	fdiv   st(7),st
   14001bfa4:	add    BYTE PTR [rcx-0x78ff0008],al
   14001bfaa:	(bad)  
   14001bfab:	call   FWORD PTR [rsi]
   14001bfad:	xchg   esi,eax
   14001bfae:	(bad)  
   14001bfaf:	(bad)  
   14001bfb0:	(bad)  
   14001bfb1:	(bad)  
   14001bfb2:	(bad)  
   14001bfb3:	(bad)  
   14001bfb4:	(bad)  
   14001bfb5:	(bad)  
   14001bfb6:	(bad)  
   14001bfb7:	(bad)  
   14001bfb8:	(bad)  
   14001bfb9:	(bad)  
   14001bfba:	(bad)  
   14001bfbb:	dec    DWORD PTR [rbp+0x9ffffcb]
   14001bfc1:	(bad)  
   14001bfc2:	(bad)  
   14001bfc3:	inc    DWORD PTR [rax]
   14001bfc5:	mov    bh,bh
   14001bfc7:	inc    DWORD PTR [rax]
   14001bfc9:	jg     0x14001bfbd
   14001bfcb:	inc    DWORD PTR [rdx-0x7c]
   14001bfce:	mov    edi,0xa7cde5ff
   14001bfd3:	dec    ecx
   14001bfd5:	cwde   
   14001bfd6:	push   rbp
   14001bfd7:	dec    ecx
   14001bfd9:	cwde   
   14001bfda:	push   rbp
   14001bfdb:	(bad)  
   14001bfdc:	(bad)  
   14001bfdd:	out    dx,al
   14001bfde:	(bad)  
   14001bfdf:	(bad)  
   14001bfe0:	mov    edi,0x3ffcaca
   14001bfe5:	jle    0x14001bfd7
   14001bfe7:	inc    DWORD PTR [rax]
   14001bfe9:	xchg   bh,bh
   14001bfeb:	call   FWORD PTR [rsi]
   14001bfed:	xchg   ebp,eax
   14001bfee:	(bad)  
   14001bfef:	(bad)  
   14001bff0:	(bad)  
   14001bff1:	(bad)  
   14001bff2:	(bad)  
   14001bff3:	jmp    rsp
   14001bff5:	repz (bad) 
   14001bff7:	inc    DWORD PTR [rbp-0x57]
   14001bffa:	(bad)  
   14001bffb:	inc    DWORD PTR [rax]
   14001bffd:	mov    edi,edi
   14001bfff:	inc    DWORD PTR [rax]
   14001c001:	mov    bh,bh
   14001c003:	inc    DWORD PTR [rax]
   14001c005:	xchg   edi,edi
   14001c007:	inc    DWORD PTR [rbx]
   14001c009:	jp     0x14001bff4
   14001c00b:	call   FWORD PTR [rbp-0x1900675d]
   14001c011:	(bad)  
   14001c012:	test   eax,0x5598c9ff
   14001c017:	dec    ecx
   14001c019:	cwde   
   14001c01a:	push   rbp
   14001c01b:	(bad)  
   14001c01c:	(bad)  
   14001c01d:	out    dx,al
   14001c01e:	(bad)  
   14001c01f:	(bad)  
   14001c020:	std    
   14001c021:	in     al,0xbf
   14001c023:	jmp    FWORD PTR [rsi+riz*4-0x27]
   14001c027:	inc    DWORD PTR [rax]
   14001c029:	xor    bh,0xff
   14001c02c:	(bad)  
   14001c02d:	xchg   esp,eax
   14001c02e:	(bad)  
   14001c02f:	jmp    QWORD PTR [rbp+0xfffffd5]
   14001c035:	mov    ?,edi
   14001c037:	inc    DWORD PTR [rax]
   14001c039:	mov    bh,bh
   14001c03b:	inc    DWORD PTR [rax]
   14001c03d:	xchg   edi,edi
   14001c03f:	inc    DWORD PTR [rax]
   14001c041:	xchg   edi,edi
   14001c043:	inc    DWORD PTR [rax]
   14001c045:	jg     0x14001c03b
   14001c047:	call   FWORD PTR [rbp-0x6d]
   14001c04a:	mov    ebp,0x81b9dcff
   14001c04f:	jmp    rdi
   14001c051:	shr    BYTE PTR [rbx+0x5598c9ff],1
   14001c057:	dec    ecx
   14001c059:	cwde   
   14001c05a:	push   rbp
   14001c05b:	(bad)  
   14001c05c:	(bad)  
   14001c05d:	out    dx,al
   14001c05e:	(bad)  
   14001c05f:	(bad)  
   14001c060:	std    
   14001c061:	in     al,0xbf
   14001c063:	push   rsi
   14001c065:	loope  0x14001c027
   14001c067:	call   FWORD PTR [rbx-0x5d]
   14001c06a:	loope  0x14001c06b
   14001c06c:	add    BYTE PTR [rax-0x7dff0009],al
   14001c072:	cli    
   14001c073:	inc    DWORD PTR [rax]
   14001c075:	test   ah,bh
   14001c077:	inc    DWORD PTR [rax]
   14001c079:	test   ah,bh
   14001c07b:	inc    DWORD PTR [rax]
   14001c07d:	cmp    ecx,0xffffffff
   14001c080:	add    BYTE PTR [rsi-0xc],bh
   14001c083:	dec    DWORD PTR [rsi-0x6d]
   14001c086:	int    0xff
   14001c088:	fidivr DWORD PTR [rsp+rcx*4-0x7a432001]
   14001c08f:	(bad)  
   14001c090:	jmp    0x10a016f67
   14001c095:	cwde   
   14001c096:	push   rbp
   14001c097:	dec    ecx
   14001c099:	cwde   
   14001c09a:	push   rbp
   14001c09b:	(bad)  
   14001c09c:	(bad)  
   14001c09d:	out    dx,al
   14001c09e:	(bad)  
   14001c09f:	(bad)  
   14001c0a0:	std    
   14001c0a1:	in     al,0xbf
   14001c0a3:	(bad)  
   14001c0a4:	std    
   14001c0a5:	in     al,0xbf
   14001c0a7:	(bad)  
   14001c0a8:	std    
   14001c0a9:	in     al,0xbf
   14001c0ab:	(bad)  
   14001c0ac:	mov    edi,0x60ffcccb
   14001c0b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c0b2:	loopne 0x14001c0b3
   14001c0b4:	sub    eax,0x2dffe990
   14001c0b9:	(bad)  
   14001c0bd:	movabs eax,ds:0xc5e6ffafb6b1ffd9
   14001c0c6:	xchg   ebx,eax
   14001c0c7:	jmp    rbx
   14001c0c9:	ror    DWORD PTR [rdi-0x75401e01],0xff
   14001c0d0:	jmp    0x14001c0a6
   14001c0d2:	mov    al,0xff
   14001c0d4:	leave  
   14001c0d5:	cwde   
   14001c0d6:	push   rbp
   14001c0d7:	dec    ecx
   14001c0d9:	cwde   
   14001c0da:	push   rbp
   14001c0db:	in     eax,dx
   14001c0dc:	cli    
   14001c0dd:	call   0x12f009fb0
   14001c0e2:	(bad)  
   14001c0e3:	(bad)  
   14001c0e4:	(bad)  
   14001c0e5:	out    dx,al
   14001c0e6:	(bad)  
   14001c0e7:	(bad)  
   14001c0e8:	(bad)  
   14001c0e9:	out    dx,al
   14001c0ea:	(bad)  
   14001c0eb:	(bad)  
   14001c0ec:	(bad)  
   14001c0ed:	out    dx,al
   14001c0ee:	(bad)  
   14001c0ef:	(bad)  
   14001c0f0:	(bad)  
   14001c0f1:	out    dx,al
   14001c0f2:	(bad)  
   14001c0f3:	(bad)  
   14001c0f4:	(bad)  
   14001c0f5:	out    dx,al
   14001c0f6:	(bad)  
   14001c0f7:	(bad)  
   14001c0f8:	(bad)  
   14001c0f9:	out    dx,al
   14001c0fa:	(bad)  
   14001c0fb:	(bad)  
   14001c0fc:	(bad)  
   14001c0fd:	out    dx,al
   14001c0fe:	(bad)  
   14001c0ff:	(bad)  
   14001c100:	stc    
   14001c101:	out    0xcc,eax
   14001c103:	push   rcx
   14001c105:	fdivr  QWORD PTR [rbp-0x46251001]
   14001c10b:	(bad)  
   14001c10c:	in     eax,dx
   14001c10d:	xlat   BYTE PTR ds:[rbx]
   14001c10e:	mov    bh,0xff
   14001c110:	in     al,dx
   14001c111:	(bad)  
   14001c112:	mov    ah,0xdd
   14001c114:	leave  
   14001c115:	cwde   
   14001c116:	push   rbp
   14001c117:	lock leave 
   14001c119:	cwde   
   14001c11a:	push   rbp
   14001c11b:	test   cl,cl
   14001c11d:	cwde   
   14001c11e:	push   rbp
   14001c11f:	in     eax,dx
   14001c120:	leave  
   14001c121:	cwde   
   14001c122:	push   rbp
   14001c123:	dec    ecx
   14001c125:	cwde   
   14001c126:	push   rbp
   14001c127:	dec    ecx
   14001c129:	cwde   
   14001c12a:	push   rbp
   14001c12b:	dec    ecx
   14001c12d:	cwde   
   14001c12e:	push   rbp
   14001c12f:	dec    ecx
   14001c131:	cwde   
   14001c132:	push   rbp
   14001c133:	dec    ecx
   14001c135:	cwde   
   14001c136:	push   rbp
   14001c137:	dec    ecx
   14001c139:	cwde   
   14001c13a:	push   rbp
   14001c13b:	dec    ecx
   14001c13d:	cwde   
   14001c13e:	push   rbp
   14001c13f:	dec    ecx
   14001c141:	cwde   
   14001c142:	push   rbp
   14001c143:	dec    ecx
   14001c145:	cwde   
   14001c146:	push   rbp
   14001c147:	dec    ecx
   14001c149:	cwde   
   14001c14a:	push   rbp
   14001c14b:	dec    ecx
   14001c14d:	cwde   
   14001c14e:	push   rbp
   14001c14f:	dec    ecx
   14001c151:	cwde   
   14001c152:	push   rbp
   14001c153:	lock leave 
   14001c155:	cwde   
   14001c156:	push   rbp
   14001c157:	xchg   DWORD PTR [rax],eax
	...
   14001c199:	add    BYTE PTR [rcx],al
   14001c19b:	add    BYTE PTR [rax],dl
   14001c19d:	add    BYTE PTR [rax+0x40],al
   14001c1a0:	adc    BYTE PTR [rax],al
   14001c1a2:	add    DWORD PTR [rax],eax
   14001c1a4:	add    al,0x0
   14001c1a6:	push   0x100000a
   14001c1ab:	add    BYTE PTR [rax],dh
   14001c1ad:	xor    BYTE PTR [rax],dl
   14001c1af:	add    BYTE PTR [rcx],al
   14001c1b1:	add    BYTE PTR [rax+rax*1],al
   14001c1b4:	push   0x2000006
   14001c1b9:	add    BYTE PTR [rax],ah
   14001c1bb:	and    BYTE PTR [rax],dl
   14001c1bd:	add    BYTE PTR [rcx],al
   14001c1bf:	add    BYTE PTR [rax+rax*1],al
   14001c1c2:	call   0x14301c1c9
   14001c1c7:	add    BYTE PTR [rax],bl
   14001c1c9:	sbb    BYTE PTR [rax],dl
   14001c1cb:	add    BYTE PTR [rcx],al
   14001c1cd:	add    BYTE PTR [rax+rax*1],al
   14001c1d0:	call   0x14401c1d6
   14001c1d5:	add    BYTE PTR [rax],dl
   14001c1d7:	adc    BYTE PTR [rax],dl
   14001c1d9:	add    BYTE PTR [rcx],al
   14001c1db:	add    BYTE PTR [rax+rax*1],al
   14001c1de:	sub    BYTE PTR [rcx],al
   14001c1e0:	add    BYTE PTR [rax],al
   14001c1e2:	add    eax,0x404000
   14001c1e7:	add    BYTE PTR [rcx],al
   14001c1e9:	add    BYTE PTR [rax],cl
   14001c1eb:	add    BYTE PTR [rax],ch
   14001c1ed:	(bad)  
   14001c1ee:	add    BYTE PTR [rax],al
   14001c1f0:	(bad)  
   14001c1f1:	add    BYTE PTR [rax],dh
   14001c1f3:	xor    BYTE PTR [rax],al
   14001c1f5:	add    BYTE PTR [rcx],al
   14001c1f7:	add    BYTE PTR [rax],cl
   14001c1f9:	add    BYTE PTR [rax+0x700000e],ch
   14001c1ff:	add    BYTE PTR [rax],ah
   14001c201:	and    BYTE PTR [rax],al
   14001c203:	add    BYTE PTR [rcx],al
   14001c205:	add    BYTE PTR [rax],cl
   14001c207:	add    BYTE PTR [rax+0x8000008],ch
   14001c20d:	add    BYTE PTR [rax],bl
   14001c20f:	sbb    BYTE PTR [rax],al
   14001c211:	add    BYTE PTR [rcx],al
   14001c213:	add    BYTE PTR [rax],cl
   14001c215:	add    al,cl
   14001c217:	(bad)  
   14001c218:	add    BYTE PTR [rax],al
   14001c21a:	or     DWORD PTR [rax],eax
   14001c21c:	adc    BYTE PTR [rax],dl
   14001c21e:	add    BYTE PTR [rax],al
   14001c220:	add    DWORD PTR [rax],eax
   14001c222:	or     BYTE PTR [rax],al
   14001c224:	push   0xa000005
   14001c229:	add    BYTE PTR [rax],al
   14001c22b:	add    BYTE PTR [rax],al
   14001c22d:	add    BYTE PTR [rcx],al
   14001c22f:	add    BYTE PTR [rax],ah
   14001c231:	add    BYTE PTR [rdi+0xb00008f],bh
   14001c237:	add    BYTE PTR [rax+0x40],al
   14001c23a:	add    BYTE PTR [rax],al
   14001c23c:	add    DWORD PTR [rax],eax
   14001c23e:	and    BYTE PTR [rax],al
   14001c240:	sub    BYTE PTR [rdx+0x0],al
   14001c243:	add    BYTE PTR [rax+rax*1],cl
   14001c246:	xor    BYTE PTR [rax],dh
   14001c248:	add    BYTE PTR [rax],al
   14001c24a:	add    DWORD PTR [rax],eax
   14001c24c:	and    BYTE PTR [rax],al
   14001c24e:	test   al,0x25
   14001c250:	add    BYTE PTR [rax],al
   14001c252:	or     eax,0x202000
   14001c257:	add    BYTE PTR [rcx],al
   14001c259:	add    BYTE PTR [rax],ah
   14001c25b:	add    BYTE PTR [rax+0xe000010],ch
   14001c261:	add    BYTE PTR [rax],bl
   14001c263:	sbb    BYTE PTR [rax],al
   14001c265:	add    BYTE PTR [rcx],al
   14001c267:	add    BYTE PTR [rax],ah
   14001c269:	add    BYTE PTR [rax+0xf000009],cl
   14001c26f:	add    BYTE PTR [rax],dl
   14001c271:	adc    BYTE PTR [rax],al
   14001c273:	add    BYTE PTR [rcx],al
   14001c275:	add    BYTE PTR [rax],ah
   14001c277:	add    BYTE PTR [rax+0x4],ch
   14001c27a:	add    BYTE PTR [rax],al
   14001c27c:	adc    BYTE PTR [rax],al
   14001c27e:	add    BYTE PTR [rax],al
   14001c280:	cmp    al,0x3f
   14001c282:	js     0x14001c2f1
   14001c284:	ins    BYTE PTR es:[rdi],dx
   14001c285:	and    BYTE PTR [rsi+0x65],dh
   14001c288:	jb     0x14001c2fd
   14001c28a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31273d
   14001c291:	xor    BYTE PTR [rdi],ah
   14001c293:	and    BYTE PTR [rbp+0x6e],ah
   14001c296:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001c299:	imul   ebp,DWORD PTR [rsi+0x67],0x7475273d
   14001c2a0:	sub    ax,0x2738
   14001c2a4:	and    BYTE PTR [rbx+0x74],dh
   14001c2a7:	(bad)  
   14001c2a8:	outs   dx,BYTE PTR ds:[rsi]
   14001c2a9:	fs (bad) 
   14001c2ab:	ins    BYTE PTR es:[rdi],dx
   14001c2ac:	outs   dx,DWORD PTR ds:[rsi]
   14001c2ad:	outs   dx,BYTE PTR ds:[rsi]
   14001c2ae:	gs cmp eax,0x73657927
   14001c2b4:	(bad)  
   14001c2b5:	(bad)  
   14001c2b6:	ds or  eax,0x73613c0a
   14001c2bc:	jae    0x14001c323
   14001c2be:	ins    DWORD PTR es:[rdi],dx
   14001c2bf:	(bad)  
   14001c2c0:	ins    BYTE PTR es:[rdi],dx
   14001c2c1:	jns    0x14001c2d0
   14001c2c3:	or     ah,BYTE PTR [rax]
   14001c2c5:	and    BYTE PTR [rax],ah
   14001c2c7:	and    BYTE PTR [rax+0x6d],bh
   14001c2ca:	ins    BYTE PTR es:[rdi],dx
   14001c2cb:	outs   dx,BYTE PTR ds:[rsi]
   14001c2cc:	jae    0x14001c30b
   14001c2ce:	and    dh,BYTE PTR [rbp+0x72]
   14001c2d1:	outs   dx,BYTE PTR ds:[rsi]
   14001c2d2:	cmp    dh,BYTE PTR [rbx+0x63]
   14001c2d5:	push   0x73616d65
   14001c2da:	sub    eax,0x7263696d
   14001c2df:	outs   dx,DWORD PTR ds:[rsi]
   14001c2e0:	jae    0x14001c351
   14001c2e2:	data16 je 0x14001c312
   14001c2e5:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001c2e8:	cmp    ah,BYTE PTR [rcx+0x73]
   14001c2eb:	ins    DWORD PTR es:[rdi],dx
   14001c2ec:	cs jbe 0x14001c320
   14001c2ef:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021e2ff
   14001c2f5:	and    BYTE PTR [rbp+0x61],ch
   14001c2f8:	outs   dx,BYTE PTR ds:[rsi]
   14001c2f9:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001c300:	jb     0x14001c375
   14001c302:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001c309:	xor    BYTE PTR [rdx],ah
   14001c30b:	or     eax,0x2020200a
   14001c310:	and    BYTE PTR [rsi],bh
   14001c312:	or     eax,0x3c20200a
   14001c317:	(bad)  
   14001c318:	jae    0x14001c38d
   14001c31a:	gs ins DWORD PTR es:[rdi],dx
   14001c31c:	(bad)  
   14001c31d:	ins    BYTE PTR es:[rdi],dx
   14001c31e:	jns    0x14001c369
   14001c320:	fs outs dx,BYTE PTR gs:[rsi]
   14001c323:	je     0x14001c38e
   14001c325:	je     0x14001c3a0
   14001c327:	or     eax,0x2020200a
   14001c32c:	and    BYTE PTR [rax],ah
   14001c32e:	and    BYTE PTR [rsi+0x61],ch
   14001c331:	ins    DWORD PTR es:[rdi],dx
   14001c332:	gs cmp eax,0x706d7722
   14001c338:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001c33b:	imul   sp,WORD PTR [rdi+0x22],0xa0d
   14001c341:	and    BYTE PTR [rax],ah
   14001c343:	and    BYTE PTR [rax],ah
   14001c345:	and    BYTE PTR [rax],ah
   14001c347:	jo     0x14001c3bb
   14001c349:	outs   dx,DWORD PTR ds:[rsi]
   14001c34a:	movsxd esp,DWORD PTR [rbp+0x73]
   14001c34d:	jae    0x14001c3be
   14001c34f:	jb     0x14001c392
   14001c351:	jb     0x14001c3b6
   14001c353:	push   0x63657469
   14001c358:	je     0x14001c3cf
   14001c35a:	jb     0x14001c3c1
   14001c35c:	cmp    eax,0x36385822
   14001c361:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021e371
   14001c367:	and    BYTE PTR [rax],ah
   14001c369:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001c36d:	gs cmp eax,0x6e697722
   14001c373:	xor    esi,DWORD PTR [rdx]
   14001c375:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021e385
   14001c37b:	and    BYTE PTR [rax],ah
   14001c37d:	and    BYTE PTR [rsi+0x65],dh
   14001c380:	jb     0x14001c3f5
   14001c382:	imul   ebp,DWORD PTR [rdi+0x6e],0x3131223d
   14001c389:	xor    BYTE PTR cs:[rsi],ch
   14001c38c:	xor    BYTE PTR [rsi],ch
   14001c38e:	xor    BYTE PTR ss:[rax],dh
   14001c391:	xor    BYTE PTR [rdx],ah
   14001c393:	or     eax,0x2020200a
   14001c398:	and    BYTE PTR [rax],ah
   14001c39a:	and    BYTE PTR [rdi],ch
   14001c39c:	ds or  eax,0x3c20200a
   14001c3a2:	fs gs jae 0x14001c409
   14001c3a6:	jb     0x14001c411
   14001c3a8:	jo     0x14001c41e
   14001c3aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x7070413e
   14001c3b1:	ins    BYTE PTR es:[rdi],dx
   14001c3b2:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001c3b9:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001c3bd:	jo     0x14001c424
   14001c3bf:	jb     0x14001c427
   14001c3c1:	outs   dx,DWORD PTR ds:[rsi]
   14001c3c2:	jb     0x14001c431
   14001c3c4:	and    BYTE PTR [rbx+0x65],dh
   14001c3c7:	je     0x14001c43e
   14001c3c9:	jo     0x14001c3eb
   14001c3cb:	je     0x14001c42e
   14001c3cd:	jae    0x14001c43a
   14001c3cf:	jae    0x14001c3f1
   14001c3d1:	outs   dx,WORD PTR ds:[rsi]
   14001c3d3:	jb     0x14001c3f5
   14001c3d5:	rex.W
   14001c3d6:	rex.WRB
   14001c3d7:	rex.RB
   14001c3d8:	cs cmp al,0x2f
   14001c3db:	fs gs jae 0x14001c442
   14001c3df:	jb     0x14001c44a
   14001c3e1:	jo     0x14001c457
   14001c3e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   14001c3ea:	and    BYTE PTR [rcx+riz*1],bh
   14001c3ed:	sub    eax,0x6449202d
   14001c3f2:	outs   dx,BYTE PTR gs:[rsi]
   14001c3f4:	je     0x14001c45f
   14001c3f6:	data16 jns 0x14001c419
   14001c3f9:	je     0x14001c463
   14001c3fb:	and    BYTE PTR gs:[rcx+0x70],ah
   14001c3ff:	jo     0x14001c46d
   14001c401:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001c408:	and    BYTE PTR [rbx+0x65],dh
   14001c40b:	movsxd esi,DWORD PTR [rbp+0x72]
   14001c40e:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
   14001c416:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
   14001c41d:	jae    0x14001c44d
   14001c41f:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0f0252
   14001c425:	and    BYTE PTR [rax],ah
   14001c427:	cmp    al,0x74
   14001c429:	jb     0x14001c4a0
   14001c42b:	jae    0x14001c4a1
   14001c42d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c42f:	outs   dx,WORD PTR ds:[rsi]
   14001c431:	and    BYTE PTR [rax+0x6d],bh
   14001c434:	ins    BYTE PTR es:[rdi],dx
   14001c435:	outs   dx,BYTE PTR ds:[rsi]
   14001c436:	jae    0x14001c475
   14001c438:	and    dh,BYTE PTR [rbp+0x72]
   14001c43b:	outs   dx,BYTE PTR ds:[rsi]
   14001c43c:	cmp    dh,BYTE PTR [rbx+0x63]
   14001c43f:	push   0x73616d65
   14001c444:	sub    eax,0x7263696d
   14001c449:	outs   dx,DWORD PTR ds:[rsi]
   14001c44a:	jae    0x14001c4bb
   14001c44c:	data16 je 0x14001c47c
   14001c44f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001c452:	cmp    ah,BYTE PTR [rcx+0x73]
   14001c455:	ins    DWORD PTR es:[rdi],dx
   14001c456:	cs jbe 0x14001c48c
   14001c459:	and    bh,BYTE PTR [rsi]
   14001c45b:	or     eax,0x2020200a
   14001c460:	and    BYTE PTR [rbx+rsi*2],bh
   14001c463:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001c467:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001c46f:	and    BYTE PTR [rax],ah
   14001c471:	and    BYTE PTR [rax],ah
   14001c473:	cmp    al,0x72
   14001c475:	gs jno 0x14001c4ed
   14001c478:	gs jae 0x14001c4ef
   14001c47b:	gs fs push rax
   14001c47e:	jb     0x14001c4e9
   14001c480:	jbe    0x14001c4eb
   14001c482:	ins    BYTE PTR es:[rdi],dx
   14001c483:	gs addr32 gs jae 0x14001c4c6
   14001c488:	or     eax,0x2020200a
   14001c48d:	and    BYTE PTR [rax],ah
   14001c48f:	and    BYTE PTR [rax],ah
   14001c491:	and    BYTE PTR [rdx+rsi*2],bh
   14001c494:	gs jno 0x14001c50c
   14001c497:	gs jae 0x14001c50e
   14001c49a:	gs fs rex.RB js 0x14001c504
   14001c49f:	movsxd esi,DWORD PTR [rbp+0x74]
   14001c4a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001c4a9:	ins    BYTE PTR es:[rdi],dx
   14001c4aa:	or     eax,0x2020200a
   14001c4af:	and    BYTE PTR [rax],ah
   14001c4b1:	and    BYTE PTR [rax],ah
   14001c4b3:	and    BYTE PTR [rax],ah
   14001c4b5:	and    BYTE PTR [rax],ah
   14001c4b7:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001c4bb:	gs ins BYTE PTR es:[rdi],dx
   14001c4bd:	cmp    eax,0x71657222
   14001c4c2:	jne    0x14001c52d
   14001c4c4:	jb     0x14001c52b
   14001c4c6:	rex.B
   14001c4c7:	fs ins DWORD PTR es:[rdi],dx
   14001c4c9:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   14001c4d0:	je     0x14001c541
   14001c4d2:	jb     0x14001c4f6
   14001c4d4:	or     eax,0x2020200a
   14001c4d9:	and    BYTE PTR [rax],ah
   14001c4db:	and    BYTE PTR [rax],ah
   14001c4dd:	and    BYTE PTR [rax],ah
   14001c4df:	and    BYTE PTR [rax],ah
   14001c4e1:	and    BYTE PTR [rbp+0x69],dh
   14001c4e4:	movsxd esp,DWORD PTR [r11+0x65]
   14001c4e8:	jae    0x14001c55d
   14001c4ea:	cmp    eax,0x6c616622
   14001c4ef:	jae    0x14001c556
   14001c4f1:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021e501
   14001c4f7:	and    BYTE PTR [rax],ah
   14001c4f9:	and    BYTE PTR [rax],ah
   14001c4fb:	and    BYTE PTR [rax],ah
   14001c4fd:	and    BYTE PTR [rax],ah
   14001c4ff:	and    BYTE PTR [rdi],ch
   14001c501:	ds or  eax,0x2020200a
   14001c507:	and    BYTE PTR [rax],ah
   14001c509:	and    BYTE PTR [rdi+rbp*1],bh
   14001c50c:	jb     0x14001c573
   14001c50e:	jno    0x14001c585
   14001c510:	gs jae 0x14001c587
   14001c513:	gs fs push rax
   14001c516:	jb     0x14001c581
   14001c518:	jbe    0x14001c583
   14001c51a:	ins    BYTE PTR es:[rdi],dx
   14001c51b:	gs addr32 gs jae 0x14001c55e
   14001c520:	or     eax,0x2020200a
   14001c525:	and    BYTE PTR [rdi+rbp*1],bh
   14001c528:	jae    0x14001c58f
   14001c52a:	movsxd esi,DWORD PTR [rbp+0x72]
   14001c52d:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001c535:	cmp    al,0x2f
   14001c537:	je     0x14001c5ab
   14001c539:	jne    0x14001c5ae
   14001c53b:	je     0x14001c586
   14001c53d:	outs   dx,BYTE PTR ds:[rsi]
   14001c53e:	outs   dx,WORD PTR ds:[rsi]
   14001c540:	ds or  eax,0x612f3c0a
   14001c546:	jae    0x14001c5bb
   14001c548:	gs ins DWORD PTR es:[rdi],dx
   14001c54a:	(bad)  
   14001c54b:	ins    BYTE PTR es:[rdi],dx
   14001c54c:	jns    0x14001c58c
   14001c54e:	.byte 0xd
   14001c54f:	.byte 0xa

Disassembly of section .reloc:

000000014001d000 <.reloc>:
   14001d000:	add    BYTE PTR [rax],ah
   14001d002:	add    BYTE PTR [rax],al
   14001d004:	and    BYTE PTR [rax],al
   14001d006:	add    BYTE PTR [rax],al
   14001d008:	sub    BYTE PTR [rcx-0x5ebf5ed0],ah
   14001d00e:	pop    rax
   14001d00f:	movabs eax,ds:0xa268a198a190a160
   14001d018:	and    BYTE PTR [rdx-0x5d6f5d78],0x0
	...
