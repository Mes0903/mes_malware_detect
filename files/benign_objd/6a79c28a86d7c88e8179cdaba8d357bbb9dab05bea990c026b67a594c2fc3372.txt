
6a79c28a86d7c88e8179cdaba8d357bbb9dab05bea990c026b67a594c2fc3372.exe:     file format pei-i386


Disassembly of section .text:

11002000 <.text>:
11002000:	shl    BYTE PTR [esi],0x0
11002003:	add    BYTE PTR [eax],al
11002005:	add    BYTE PTR [eax],al
11002007:	add    BYTE PTR [eax+0x0],cl
1100200a:	add    BYTE PTR [eax],al
1100200c:	add    al,BYTE PTR [eax]
1100200e:	add    eax,0x272000
11002013:	add    BYTE PTR [eax+0xd],dh
11002016:	add    BYTE PTR [eax],al
11002018:	or     DWORD PTR [eax],eax
1100201a:	add    BYTE PTR [eax],al
1100201c:	add    eax,0x90060000
11002021:	xor    al,0x0
11002023:	add    cl,dh
11002025:	add    DWORD PTR [eax],eax
11002027:	add    BYTE PTR [eax+0x20],dl
1100202a:	add    BYTE PTR [eax],al
1100202c:	add    BYTE PTR [eax],0x0
	...
1100204f:	add    BYTE PTR [ecx+0x7a],dh
11002052:	add    al,0x31
11002054:	and    al,BYTE PTR [esi+eax*4-0x23]
11002058:	xchg   BYTE PTR ds:0x325ec3cd,dl
1100205e:	adc    cl,BYTE PTR [ebp-0x5c]
11002061:	add    DWORD PTR [edi-0x34],0x2c
11002065:	xchg   edi,eax
11002066:	dec    esp
11002067:	sub    BYTE PTR [ebp-0x58],bh
1100206a:	leave  
1100206b:	ficomp WORD PTR ds:0x34335e16
11002071:	xor    esi,esp
11002073:	test   BYTE PTR [edi-0x196cfc17],al
11002079:	mov    dl,0x71
1100207b:	dec    ebp
1100207c:	cmp    DWORD PTR [esi-0x44],0x5d76791d
11002083:	push   ss
11002084:	sub    BYTE PTR gs:[ebx],0x91
11002088:	call   0x2a7f:0x322b8ab1
1100208f:	das    
11002090:	mov    edi,0xd1731e3b
11002095:	into   
11002096:	call   0x2fa9094b
1100209b:	inc    ebx
1100209c:	jb     0x11002090
1100209e:	mov    esi,0x8624a9f3
110020a3:	outs   dx,BYTE PTR ds:[esi]
110020a4:	sbb    ebx,esi
110020a6:	rcl    BYTE PTR [esi+0x5009a18a],0x95
110020ad:	ret    
110020ae:	jmp    0x110020fc
110020b0:	dec    edx
110020b1:	mov    eax,ds:0x75eb29a1
110020b6:	push   ebp
110020b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
110020b8:	fnstcw WORD PTR [edx]
110020ba:	lahf   
110020bb:	scas   al,BYTE PTR es:[edi]
110020bc:	push   esp
110020bd:	(bad)  
110020be:	std    
110020bf:	test   DWORD PTR [ebx+eax*4],esp
110020c2:	imul   eax,ecx,0x77bd185f
110020c8:	jmp    0x430d604f
110020cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
110020ce:	rol    DWORD PTR [ebx+edx*1+0x15000230],0x0
110020d6:	add    BYTE PTR [eax],al
110020d8:	add    BYTE PTR [eax],al
110020da:	add    BYTE PTR [eax],al
110020dc:	add    ah,BYTE PTR ds:0x3428
110020e2:	or     al,BYTE PTR [ebx]
110020e4:	jge    0x110020e7
110020e6:	add    BYTE PTR [eax],al
110020e8:	add    al,0x2
110020ea:	add    al,0x7d
110020ec:	add    al,BYTE PTR [eax]
110020ee:	add    BYTE PTR [edx+ebp*1],al
110020f1:	add    BYTE PTR [eax],al
110020f3:	add    BYTE PTR [ebx],dl
110020f5:	xor    BYTE PTR [ecx],al
110020f7:	add    BYTE PTR [edi],al
110020f9:	add    BYTE PTR [eax],al
110020fb:	add    BYTE PTR [eax],al
110020fd:	add    BYTE PTR [eax],al
110020ff:	add    BYTE PTR [edx],al
11002101:	jnp    0x11002104
11002103:	add    BYTE PTR [eax],al
11002105:	add    al,0x2a
11002107:	add    BYTE PTR [ebx],dl
11002109:	xor    BYTE PTR [ecx],al
1100210b:	add    BYTE PTR [edi],al
1100210d:	add    BYTE PTR [eax],al
1100210f:	add    BYTE PTR [eax],al
11002111:	add    BYTE PTR [eax],al
11002113:	add    BYTE PTR [edx],al
11002115:	jnp    0x11002119
11002117:	add    BYTE PTR [eax],al
11002119:	add    al,0x2a
1100211b:	add    BYTE PTR [ebx],dl
1100211d:	xor    BYTE PTR [edx],al
1100211f:	add    BYTE PTR [edi],ch
11002121:	add    BYTE PTR [eax],al
11002123:	add    BYTE PTR [ecx],al
11002125:	add    BYTE PTR [eax],al
11002127:	adc    DWORD PTR [edi],edx
11002129:	sub    eax,DWORD PTR [ebx]
1100212b:	push   ss
1100212c:	sub    eax,DWORD PTR [eax]
1100212e:	sub    al,0x0
11002130:	sub    BYTE PTR [eax+eax*1],cl
11002133:	add    BYTE PTR [edx],cl
11002135:	or     al,BYTE PTR [esi]
11002137:	outs   dx,DWORD PTR ds:[esi]
11002138:	or     eax,0x6f0a0000
1100213d:	push   cs
1100213e:	add    BYTE PTR [eax],al
11002140:	or     dh,BYTE PTR [edx+0x1]
11002143:	add    BYTE PTR [eax],al
11002145:	jo     0x1100216f
11002147:	sldt   WORD PTR [eax]
1100214a:	or     al,BYTE PTR [esi]
1100214c:	jae    0x1100215e
1100214e:	add    BYTE PTR [eax],al
11002150:	or     al,BYTE PTR [eax+0x4000006]
11002156:	sub    al,BYTE PTR [eax]
11002158:	sbb    esi,DWORD PTR [eax]
1100215a:	add    al,BYTE PTR [eax]
1100215c:	je     0x1100215f
1100215e:	add    BYTE PTR [eax],al
11002160:	add    al,BYTE PTR [eax]
11002162:	add    BYTE PTR [ecx],dl
11002164:	sub    esi,DWORD PTR [edx]
11002166:	or     DWORD PTR [ebp+0xb],eax
11002169:	add    BYTE PTR [eax],al
1100216b:	add    BYTE PTR [edi],ah
1100216d:	add    DWORD PTR [eax],eax
1100216f:	add    BYTE PTR [eax+eax*1+0x6c0000],dh
11002176:	add    BYTE PTR [eax],al
11002178:	xchg   DWORD PTR [eax],eax
1100217a:	add    BYTE PTR [eax],al
1100217c:	inc    eax
1100217d:	add    BYTE PTR [eax],al
1100217f:	add    dl,bh
11002181:	add    BYTE PTR [eax],al
11002183:	add    BYTE PTR [edx],bl
11002185:	add    BYTE PTR [eax],al
11002187:	add    BYTE PTR [ebp+0x0],dl
1100218a:	add    BYTE PTR [eax],al
1100218c:	pushf  
1100218d:	add    BYTE PTR [eax],al
1100218f:	add    BYTE PTR [ecx+eax*1],bh
11002192:	add    BYTE PTR [eax],al
11002194:	sldt   WORD PTR [eax]
11002197:	add    BYTE PTR [edx],al
11002199:	sub    BYTE PTR [esi],al
1100219b:	add    BYTE PTR [eax],al
1100219d:	push   es
1100219e:	or     ah,BYTE PTR [eax]
110021a0:	or     al,BYTE PTR [eax]
110021a2:	add    BYTE PTR [eax],al
110021a4:	or     eax,0x2c06bf2b
110021a9:	pop    edi
110021aa:	and    BYTE PTR [esi],al
110021ac:	add    BYTE PTR [eax],al
110021ae:	add    BYTE PTR ds:0x7f38b42b,cl
110021b4:	add    BYTE PTR [eax],al
110021b6:	add    BYTE PTR [esi+0x4],bh
110021b9:	add    BYTE PTR [eax],al
110021bb:	add    al,0x7e
110021bd:	add    eax,DWORD PTR [eax]
110021bf:	add    BYTE PTR [eax+ebp*1],al
110021c2:	adc    al,BYTE PTR [eax]
110021c4:	add    BYTE PTR [edx],cl
110021c6:	sub    BYTE PTR [ebx],dl
110021c8:	add    BYTE PTR [eax],al
110021ca:	or     al,BYTE PTR [eax+0x4000005]
110021d0:	and    BYTE PTR [eax+eax*1],al
110021d3:	add    BYTE PTR [eax],al
110021d5:	or     eax,0x742b8e2b
110021da:	pop    ss
110021db:	sub    eax,DWORD PTR [ebx]
110021dd:	push   ss
110021de:	sub    eax,DWORD PTR [eax]
110021e0:	sub    al,0x0
110021e2:	and    BYTE PTR [edi],al
110021e4:	add    BYTE PTR [eax],al
110021e6:	add    BYTE PTR ds:0xffff7938,cl
110021ec:	(bad)  
110021ed:	jle    0x110021f2
110021ef:	add    BYTE PTR [eax],al
110021f1:	add    al,0x28
110021f3:	adc    al,0x0
110021f5:	add    BYTE PTR [edx],cl
110021f7:	sub    eax,0x220be
110021fc:	add    BYTE PTR [eax],al
110021fe:	or     eax,0xffff6238
11002203:	(bad)  
11002204:	cmp    BYTE PTR [ebx+0x28000000],cl
1100220a:	or     BYTE PTR [eax],al
1100220c:	add    BYTE PTR [esi],al
1100220e:	add    ch,BYTE PTR [eax]
11002210:	or     DWORD PTR [eax],eax
11002212:	add    BYTE PTR [esi],al
11002214:	and    BYTE PTR [ebx],al
11002216:	add    BYTE PTR [eax],al
11002218:	add    BYTE PTR ds:0xffff4738,cl
1100221e:	(bad)  
1100221f:	jle    0x11002225
11002221:	add    BYTE PTR [eax],al
11002223:	add    al,0x3a
11002225:	mov    eax,DWORD PTR [eax]
11002227:	add    BYTE PTR [eax],al
11002229:	and    BYTE PTR [eax],cl
1100222b:	add    BYTE PTR [eax],al
1100222d:	add    BYTE PTR ds:0xffff3238,cl
11002233:	jmp    FWORD PTR [ebx]
11002235:	cmp    eax,0x1372
1100223a:	jo     0x11002242
1100223c:	sub    BYTE PTR ds:0x200a0000,dl
11002242:	add    DWORD PTR [eax],eax
11002244:	add    BYTE PTR [eax],al
11002246:	or     eax,0xffff1a38
1100224b:	jmp    FWORD PTR [ebx]
1100224d:	mov    ebx,0xa28
11002252:	push   es
11002253:	sub    BYTE PTR [ebx],cl
11002255:	add    BYTE PTR [eax],al
11002257:	push   es
11002258:	ficom  WORD PTR [eax]
1100225a:	or     eax,DWORD PTR [edi]
1100225c:	outs   dx,DWORD PTR ds:[esi]
1100225d:	push   ss
1100225e:	add    BYTE PTR [eax],al
11002260:	or     ch,BYTE PTR [eax]
11002262:	pop    ss
11002263:	add    BYTE PTR [eax],al
11002265:	or     dl,BYTE PTR [edi]
11002267:	or     al,0xde
11002269:	ins    BYTE PTR es:[edi],dx
1100226a:	push   ss
1100226b:	sub    ch,BYTE PTR [eax]
1100226d:	pop    es
1100226e:	add    BYTE PTR [eax],al
11002270:	push   es
11002271:	pop    ss
11002272:	sub    ch,BYTE PTR [eax]
11002274:	sbb    BYTE PTR [eax],al
11002276:	add    BYTE PTR [edx],cl
11002278:	jb     0x110022bb
1100227a:	add    BYTE PTR [eax],al
1100227c:	jo     0x110022a6
1100227e:	adc    eax,DWORD PTR [eax]
11002280:	add    BYTE PTR [edx],cl
11002282:	add    BYTE PTR [eax+eax*1],0x0
11002286:	add    al,0x20
11002288:	add    eax,0xd000000
1100228d:	cmp    ah,dl
1100228f:	(bad)  
11002290:	(bad)  
11002291:	jmp    FWORD PTR [ebx]
11002293:	and    BYTE PTR [esi+0x6],bh
11002296:	add    BYTE PTR [eax],al
11002298:	add    al,0x72
1100229a:	push   ebx
1100229b:	add    BYTE PTR [eax],al
1100229d:	jo     0x1100230e
1100229f:	sbb    DWORD PTR [eax],eax
110022a1:	add    BYTE PTR [edx],cl
110022a3:	jle    0x110022a8
110022a5:	add    BYTE PTR [eax],al
110022a7:	add    al,0x28
110022a9:	sbb    al,BYTE PTR [eax]
110022ab:	add    BYTE PTR [edx],cl
110022ad:	sub    BYTE PTR [edi],dl
110022af:	add    BYTE PTR [eax],al
110022b1:	or     dl,BYTE PTR [edi]
110022b3:	sub    ah,BYTE PTR [eax]
110022b5:	add    BYTE PTR [eax],al
110022b7:	add    BYTE PTR [eax],al
110022b9:	or     eax,0xfffea738
110022be:	(bad)  
110022bf:	jle    0x110022c4
110022c1:	add    BYTE PTR [eax],al
110022c3:	add    al,0x3a
110022c5:	adc    edi,edi
110022c7:	(bad)  
110022c8:	jmp    DWORD PTR [eax]
110022ca:	or     DWORD PTR [eax],eax
110022cc:	add    BYTE PTR [eax],al
110022ce:	or     eax,0xfffe9238
110022d3:	jmp    FWORD PTR [ebx]
110022d5:	xchg   esi,eax
110022d6:	or     BYTE PTR [edx],ch
110022d8:	add    DWORD PTR [eax],edx
110022da:	add    BYTE PTR [eax],al
110022dc:	add    BYTE PTR [eax],al
110022de:	jmp    0x1310:0xf60c00
110022e5:	add    BYTE PTR [eax],al
110022e7:	add    DWORD PTR [ebx],edx
110022e9:	xor    BYTE PTR [edx],al
110022eb:	add    BYTE PTR [ecx+eax*1],al
110022ee:	add    BYTE PTR [eax],al
110022f0:	add    eax,DWORD PTR [eax]
110022f2:	add    BYTE PTR [ecx],dl
110022f4:	push   ss
110022f5:	adc    eax,DWORD PTR ds:0x1450511
110022fb:	add    BYTE PTR [eax],al
110022fd:	add    BYTE PTR [eax],al
110022ff:	add    BYTE PTR [eax],al
11002301:	add    BYTE PTR [ebx],ch
11002303:	sub    edx,DWORD PTR [ecx]
11002305:	add    eax,0x945
1100230a:	add    BYTE PTR [edx-0x3e000000],cl
11002310:	add    BYTE PTR [eax],al
11002312:	add    BYTE PTR [ebx+0x4e000000],ah
11002318:	add    BYTE PTR [eax],al
1100231a:	add    BYTE PTR [ecx],ch
1100231c:	add    BYTE PTR [eax],al
1100231e:	add    BYTE PTR [ecx],bl
11002320:	add    BYTE PTR [eax],al
11002322:	add    BYTE PTR [edx+0x0],bh
11002325:	add    BYTE PTR [eax],al
11002327:	push   cs
11002328:	add    BYTE PTR [eax],al
1100232a:	add    BYTE PTR [ecx+0x0],ah
1100232d:	add    BYTE PTR [eax],al
1100232f:	add    cl,BYTE PTR ds:0x20041316
11002335:	pop    es
11002336:	add    BYTE PTR [eax],al
11002338:	add    BYTE PTR [ebx],dl
1100233a:	add    eax,0x2bc72b
1100233f:	and    BYTE PTR ds:0x13000000,al
11002345:	add    eax,0x411bc2b
1100234a:	or     DWORD PTR [esi+0x20303269],ecx
11002350:	add    al,0x0
11002352:	add    BYTE PTR [eax],al
11002354:	adc    eax,DWORD PTR ds:0x512bac2b
1100235a:	push   es
1100235b:	sbb    DWORD PTR [edi+0x1b],ebp
1100235e:	add    BYTE PTR [eax],al
11002360:	or     cl,BYTE PTR [ebx]
11002362:	sub    BYTE PTR [eax+eax*1],bl
11002365:	add    BYTE PTR [edx],cl
11002367:	pop    es
11002368:	jae    0x11002387
1100236a:	add    BYTE PTR [eax],al
1100236c:	or     ch,BYTE PTR [edi+0x1e]
1100236f:	add    BYTE PTR [eax],al
11002371:	or     al,BYTE PTR [edi]
11002373:	or     al,0x20
11002375:	add    eax,DWORD PTR [eax]
11002377:	add    BYTE PTR [eax],al
11002379:	adc    eax,DWORD PTR ds:0x77de872b
1100237f:	or     DWORD PTR [ecx],edx
11002381:	add    al,0x9a
11002383:	or     ah,BYTE PTR [eax]
11002385:	or     BYTE PTR [eax],al
11002387:	add    BYTE PTR [eax],al
11002389:	adc    eax,DWORD PTR ds:0xffff7438
1100238f:	inc    DWORD PTR [esi]
11002391:	jb     0x1100240a
11002393:	add    BYTE PTR [eax],al
11002395:	jo     0x11002406
11002397:	pop    ds
11002398:	add    BYTE PTR [eax],al
1100239a:	or     ch,BYTE PTR ds:0x620bd
110023a0:	add    BYTE PTR [eax],al
110023a2:	adc    eax,DWORD PTR ds:0xffff5b38
110023a8:	jmp    FWORD PTR [ebx]
110023aa:	add    dl,BYTE PTR [edx+ebp*1]
110023ad:	and    BYTE PTR [eax],al
110023af:	add    BYTE PTR [eax],al
110023b1:	add    BYTE PTR [ebx],dl
110023b3:	add    eax,0xffff4b38
110023b8:	inc    DWORD PTR [esi]
110023ba:	jb     0x1100243b
110023bc:	add    BYTE PTR [eax],al
110023be:	jo     0x1100242f
110023c0:	pop    ds
110023c1:	add    BYTE PTR [eax],al
110023c3:	or     ch,BYTE PTR [ecx+ebx*1]
110023c6:	and    BYTE PTR [edx],al
110023c8:	add    BYTE PTR [eax],al
110023ca:	add    BYTE PTR [ebx],dl
110023cc:	add    eax,0xffff3238
110023d1:	call   DWORD PTR [edi]
110023d3:	sub    eax,DWORD PTR [ebx]
110023d5:	push   ss
110023d6:	sub    eax,DWORD PTR [eax]
110023d8:	sub    al,0x0
110023da:	cmp    BYTE PTR [ebx-0x1],bh
110023dd:	(bad)  
110023de:	call   DWORD PTR [ecx]
110023e0:	add    al,0x17
110023e2:	pop    eax
110023e3:	adc    eax,DWORD PTR [eax+eiz*1]
110023e6:	add    DWORD PTR [eax],eax
110023e8:	add    BYTE PTR [eax],al
110023ea:	adc    eax,DWORD PTR ds:0xffff1338
110023f0:	(bad)  
110023f1:	cmp    BYTE PTR [ecx-0x1],cl
110023f4:	(bad)  
110023f5:	dec    DWORD PTR [eax]
110023f7:	sub    dl,BYTE PTR [ebx]
110023f9:	xor    BYTE PTR [edx],al
110023fb:	add    BYTE PTR ds:0x0,dl
11002401:	add    BYTE PTR [eax],al
11002403:	add    BYTE PTR [esi+0x6],bh
11002406:	add    BYTE PTR [eax],al
11002408:	add    al,0x72
1100240a:	xchg   DWORD PTR [eax],eax
1100240c:	add    BYTE PTR [eax+0x6f],dh
1100240f:	sbb    DWORD PTR [eax],eax
11002411:	add    BYTE PTR [edx],cl
11002413:	sub    BYTE PTR [edi],dl
11002415:	add    BYTE PTR [eax],al
11002417:	or     ch,BYTE PTR [edx]
11002419:	add    BYTE PTR [eax],al
1100241b:	add    BYTE PTR [ebx],al
1100241d:	xor    BYTE PTR [edx],al
1100241f:	add    BYTE PTR [edi+0x0],cl
11002422:	add    BYTE PTR [eax],al
11002424:	add    BYTE PTR [eax],al
11002426:	add    BYTE PTR [eax],al
11002428:	pop    ss
11002429:	sub    eax,DWORD PTR [ebx]
1100242b:	push   ss
1100242c:	sub    eax,DWORD PTR [eax]
1100242e:	sub    al,0x0
11002430:	jle    0x11002438
11002432:	add    BYTE PTR [eax],al
11002434:	add    al,0x72
11002436:	fwait
11002437:	add    BYTE PTR [eax],al
11002439:	jo     0x110024aa
1100243b:	sbb    DWORD PTR [eax],eax
1100243d:	add    BYTE PTR [edx],cl
1100243f:	sub    BYTE PTR [eax+eax*1],cl
11002442:	add    BYTE PTR [edx],cl
11002444:	outs   dx,DWORD PTR ds:[esi]
11002445:	or     eax,0x6f0a0000
1100244a:	and    BYTE PTR [eax],al
1100244c:	add    BYTE PTR [edx],cl
1100244e:	outs   dx,DWORD PTR ds:[esi]
1100244f:	and    DWORD PTR [eax],eax
11002451:	add    BYTE PTR [edx],cl
11002453:	sub    BYTE PTR [edx],bl
11002455:	add    BYTE PTR [eax],al
11002457:	or     ch,BYTE PTR [eax]
11002459:	pop    ss
1100245a:	add    BYTE PTR [eax],al
1100245c:	or     bh,BYTE PTR [esi+0x6]
1100245f:	add    BYTE PTR [eax],al
11002461:	add    al,0x72
11002463:	mov    ecx,0x6f700000
11002468:	sbb    DWORD PTR [eax],eax
1100246a:	add    BYTE PTR [edx],cl
1100246c:	sub    BYTE PTR [edi],dl
1100246e:	add    BYTE PTR [eax],al
11002470:	or     ch,BYTE PTR [eax]
11002472:	and    al,BYTE PTR [eax]
11002474:	add    BYTE PTR [edx],cl
11002476:	sub    al,BYTE PTR [eax]
11002478:	adc    esi,DWORD PTR [eax]
1100247a:	add    eax,DWORD PTR [eax]
1100247c:	icebp  
1100247d:	add    BYTE PTR [eax],al
1100247f:	add    BYTE PTR [eax+eax*1],al
11002482:	add    BYTE PTR [ecx],dl
11002484:	sub    esi,DWORD PTR [edx]
11002486:	pop    es
11002487:	inc    ebp
11002488:	or     eax,DWORD PTR [eax]
1100248a:	add    BYTE PTR [eax],al
1100248c:	xor    eax,0x93000000
11002491:	add    BYTE PTR [eax],al
11002493:	add    BYTE PTR [edi+0x3f000000],dh
11002499:	add    BYTE PTR [eax],al
1100249b:	add    BYTE PTR [eax+eax*1+0x0],dh
1100249f:	add    BYTE PTR [edx],ah
110024a1:	add    BYTE PTR [eax],al
110024a3:	add    BYTE PTR [edx+0x0],bl
110024a6:	add    BYTE PTR [eax],al
110024a8:	dec    ebp
110024a9:	add    BYTE PTR [eax],al
110024ab:	add    BYTE PTR [edx+0x18000000],ah
110024b1:	add    BYTE PTR [eax],al
110024b3:	add    BYTE PTR [edx],cl
110024b5:	add    BYTE PTR [eax],al
110024b7:	add    BYTE PTR [esi],dl
110024b9:	or     ah,BYTE PTR [eax]
110024bb:	or     al,BYTE PTR [eax]
110024bd:	add    BYTE PTR [eax],al
110024bf:	or     ebp,DWORD PTR [ebx]
110024c1:	les    eax,FWORD PTR [edx]
110024c3:	mov    gs,WORD PTR [ecx+0x16]
110024c6:	xor    DWORD PTR [edi],esp
110024c8:	and    BYTE PTR [ecx],cl
110024ca:	add    BYTE PTR [eax],al
110024cc:	add    BYTE PTR [ebx],cl
110024ce:	sub    esi,DWORD PTR [esi+0x520352b]
110024d4:	add    BYTE PTR [eax],al
110024d6:	add    BYTE PTR [ebx],cl
110024d8:	sub    ebp,DWORD PTR [edx+eax*1+0x1706698e]
110024df:	pop    eax
110024e0:	pop    DWORD PTR ds:[eax]
110024e3:	add    BYTE PTR [eax],al
110024e5:	and    BYTE PTR [eax],al
110024e7:	add    BYTE PTR [eax],al
110024e9:	add    BYTE PTR [ebx],cl
110024eb:	sub    ebx,DWORD PTR [ecx+0x3203f2b]
110024f1:	add    BYTE PTR [eax],al
110024f3:	add    BYTE PTR [ebx],cl
110024f5:	sub    ecx,DWORD PTR [edi+0x6698e02]
110024fb:	xor    ebp,edx
110024fd:	and    BYTE PTR [edi],al
110024ff:	add    BYTE PTR [eax],al
11002501:	add    BYTE PTR [ebx],cl
11002503:	sub    eax,DWORD PTR [ecx+0x620552b]
11002509:	add    BYTE PTR [eax],al
1100250b:	add    BYTE PTR [ebx],cl
1100250d:	cmp    BYTE PTR [edi+edi*8-0x1],dh
11002511:	inc    DWORD PTR [edx]
11002513:	push   ss
11002514:	call   0x6f70:0xd572
1100251b:	pop    ds
1100251c:	add    BYTE PTR [eax],al
1100251e:	or     ch,BYTE PTR [esi+ecx*8]
11002521:	and    BYTE PTR [eax+eax*1],al
11002524:	add    BYTE PTR [eax],al
11002526:	or     edi,DWORD PTR [eax]
11002528:	pop    edx
11002529:	(bad)  
1100252a:	(bad)  
1100252b:	jmp    FWORD PTR [ebx]
1100252d:	pop    ds
1100252e:	pop    ss
1100252f:	sub    eax,DWORD PTR [ebx]
11002531:	push   ss
11002532:	sub    eax,DWORD PTR [eax]
11002534:	sub    al,0x0
11002536:	add    al,BYTE PTR [esi]
11002538:	pop    ss
11002539:	pop    eax
1100253a:	call   0x2004:0x480
11002541:	add    DWORD PTR [eax],eax
11002543:	add    BYTE PTR [eax],al
11002545:	or     edi,DWORD PTR [eax]
11002547:	cmp    edi,edi
11002549:	(bad)  
1100254a:	jmp    FWORD PTR [ebx]
1100254c:	daa    
1100254d:	pop    ss
1100254e:	or     ah,BYTE PTR [eax]
11002550:	or     BYTE PTR [eax],al
11002552:	add    BYTE PTR [eax],al
11002554:	or     edi,DWORD PTR [eax]
11002556:	sub    al,0xff
11002558:	(bad)  
11002559:	jmp    FWORD PTR [ebx]
1100255b:	xchg   ebx,eax
1100255c:	add    al,BYTE PTR [esi]
1100255e:	call   0x2004:0x380
11002565:	add    al,BYTE PTR [eax]
11002567:	add    BYTE PTR [eax],al
11002569:	or     edi,DWORD PTR [eax]
1100256b:	pop    ss
1100256c:	(bad)  
1100256d:	(bad)  
1100256e:	(bad)  
1100256f:	cmp    BYTE PTR [esi-0x1],bl
11002572:	(bad)  
11002573:	jmp    FWORD PTR [edx]
11002575:	add    BYTE PTR [eax],al
11002577:	add    BYTE PTR [ebx],dl
11002579:	xor    BYTE PTR [ebx],al
1100257b:	add    BYTE PTR [eax+0x0],ah
1100257e:	add    BYTE PTR [eax],al
11002580:	add    eax,0x20110000
11002585:	add    al,BYTE PTR [eax]
11002587:	add    BYTE PTR [eax],al
11002589:	or     ch,BYTE PTR [ebx]
1100258b:	add    ch,BYTE PTR [ebx]
1100258d:	adc    al,BYTE PTR [esi]
1100258f:	inc    ebp
11002590:	add    eax,DWORD PTR [eax]
11002592:	add    BYTE PTR [eax],al
11002594:	sbb    al,0x0
11002596:	add    BYTE PTR [eax],al
11002598:	xor    DWORD PTR [eax],eax
1100259a:	add    BYTE PTR [eax],al
1100259c:	in     al,dx
1100259d:	(bad)  
1100259e:	(bad)  
1100259f:	call   DWORD PTR [edi]
110025a1:	sub    eax,DWORD PTR [ebx]
110025a3:	push   ss
110025a4:	sub    eax,DWORD PTR [eax]
110025a6:	sub    al,0x0
110025a8:	jle    0x110025ae
110025aa:	add    BYTE PTR [eax],al
110025ac:	add    al,0x28
110025ae:	and    eax,DWORD PTR [eax]
110025b0:	add    BYTE PTR [edx],cl
110025b2:	sub    eax,0x201f
110025b7:	add    BYTE PTR [eax],al
110025b9:	or     ch,BYTE PTR [ebx]
110025bb:	shr    BYTE PTR [ebx],cl
110025bd:	add    BYTE PTR [esi+0x4],bh
110025c0:	add    BYTE PTR [eax],al
110025c2:	add    al,0x28
110025c4:	and    al,0x0
110025c6:	add    BYTE PTR [edx],cl
110025c8:	and    BYTE PTR es:[ecx],al
110025cb:	add    BYTE PTR [eax],al
110025cd:	add    BYTE PTR [edx],cl
110025cf:	sub    edi,DWORD PTR [ebp+0x37e002b]
110025d5:	add    BYTE PTR [eax],al
110025d7:	add    al,0x7e
110025d9:	add    eax,0x17040000
110025de:	sub    BYTE PTR ds:0x2a0a0000,ah
110025e4:	sbb    esi,DWORD PTR [eax]
110025e6:	add    al,0x0
110025e8:	or     DWORD PTR [ecx],eax
110025ea:	add    BYTE PTR [eax],al
110025ec:	push   es
110025ed:	add    BYTE PTR [eax],al
110025ef:	adc    DWORD PTR [esi],edx
110025f1:	adc    eax,DWORD PTR [ecx+edx*1]
110025f4:	add    al,0x45
110025f6:	add    DWORD PTR [eax],eax
110025f8:	add    BYTE PTR [eax],al
110025fa:	add    BYTE PTR [eax],al
110025fc:	add    BYTE PTR [eax],al
110025fe:	pop    ss
110025ff:	sub    eax,DWORD PTR [ebx]
11002601:	push   ss
11002602:	sub    eax,DWORD PTR [eax]
11002604:	sub    al,0x0
11002606:	adc    al,0xa
11002608:	adc    al,0xb
1100260a:	sub    eax,DWORD PTR [eax]
1100260c:	jle    0x11002613
1100260e:	add    BYTE PTR [eax],al
11002610:	add    al,0x19
11002612:	pop    ss
11002613:	sbb    DWORD PTR [ebx+0x26],esi
11002616:	add    BYTE PTR [eax],al
11002618:	or     dh,BYTE PTR [ebx+0x27]
1100261b:	add    BYTE PTR [eax],al
1100261d:	or     cl,BYTE PTR [ebx]
1100261f:	pop    es
11002620:	outs   dx,DWORD PTR ds:[esi]
11002621:	sub    BYTE PTR [eax],al
11002623:	add    BYTE PTR [edx],cl
11002625:	pop    ds
11002626:	cmp    al,0x6a
11002628:	push   ss
11002629:	outs   dx,DWORD PTR ds:[esi]
1100262a:	sub    DWORD PTR [eax],eax
1100262c:	add    BYTE PTR [edx],cl
1100262e:	es pop es
11002630:	outs   dx,DWORD PTR ds:[esi]
11002631:	sub    al,BYTE PTR [eax]
11002633:	add    BYTE PTR [edx],cl
11002635:	or     al,0x7
11002637:	outs   dx,DWORD PTR ds:[esi]
11002638:	sub    BYTE PTR [eax],al
1100263a:	add    BYTE PTR [edx],cl
1100263c:	or     BYTE PTR [esi],bl
1100263e:	pop    eax
1100263f:	outs   dx,BYTE PTR ds:[esi]
11002640:	push   ss
11002641:	outs   dx,DWORD PTR ds:[esi]
11002642:	sub    DWORD PTR [eax],eax
11002644:	add    BYTE PTR [edx],cl
11002646:	es pop es
11002648:	outs   dx,DWORD PTR ds:[esi]
11002649:	sub    al,BYTE PTR [eax]
1100264b:	add    BYTE PTR [edx],cl
1100264d:	or     eax,0xd581709
11002652:	pop    es
11002653:	outs   dx,DWORD PTR ds:[esi]
11002654:	sub    eax,DWORD PTR [eax]
11002656:	add    BYTE PTR [edx],cl
11002658:	adc    al,0xb
1100265a:	jle    0x11002661
1100265c:	add    BYTE PTR [eax],al
1100265e:	add    al,0x19
11002660:	sbb    DWORD PTR [ebx+0x2c],esi
11002663:	add    BYTE PTR [eax],al
11002665:	or     dh,BYTE PTR [ebx+0x2d]
11002668:	add    BYTE PTR [eax],al
1100266a:	or     cl,BYTE PTR [edx]
1100266c:	push   es
1100266d:	outs   dx,DWORD PTR ds:[esi]
1100266e:	add    BYTE PTR cs:[eax],al
11002671:	or     cl,BYTE PTR [eax]
11002673:	push   ds
11002674:	pop    eax
11002675:	outs   dx,BYTE PTR ds:[esi]
11002676:	push   ss
11002677:	outs   dx,DWORD PTR ds:[esi]
11002678:	sub    DWORD PTR [eax],eax
1100267a:	add    BYTE PTR [edx],cl
1100267c:	es push es
1100267e:	or     DWORD PTR [edi+0x2f],ebp
11002681:	add    BYTE PTR [eax],al
11002683:	or     bl,dh
11002685:	jb     0x110026a7
11002687:	add    eax,0x13000000
1100268c:	add    al,0x2b
1100268e:	add    ch,BYTE PTR [ebx]
11002690:	pop    ds
11002691:	adc    DWORD PTR [eax*2+0x6],eax
11002698:	or     al,0x0
1100269a:	add    BYTE PTR [eax],al
1100269c:	add    BYTE PTR cs:[eax],al
1100269f:	add    BYTE PTR ds:0x39000000,bl
110026a5:	add    BYTE PTR [eax],al
110026a7:	add    BYTE PTR [ebp+0x0],al
110026aa:	add    BYTE PTR [eax],al
110026ac:	(bad)  
110026ae:	(bad)  
110026af:	inc    DWORD PTR [edi]
110026b1:	sub    al,0x2d
110026b3:	and    BYTE PTR [eax],al
110026b5:	add    BYTE PTR [eax],al
110026b7:	add    BYTE PTR [ebx],dl
110026b9:	add    al,0x2b
110026bb:	aad    0x2b
110026bd:	add    BYTE PTR [edi],al
110026bf:	outs   dx,DWORD PTR ds:[esi]
110026c0:	sub    eax,DWORD PTR [eax]
110026c2:	add    BYTE PTR [edx],cl
110026c4:	and    BYTE PTR [edx],al
110026c6:	add    BYTE PTR [eax],al
110026c8:	add    BYTE PTR [ebx],dl
110026ca:	add    al,0x2b
110026cc:	les    ebp,FWORD PTR [ebx]
110026ce:	adc    DWORD PTR [esi],eax
110026d0:	outs   dx,DWORD PTR ds:[esi]
110026d1:	xor    BYTE PTR [eax],al
110026d3:	add    BYTE PTR [edx],cl
110026d5:	and    BYTE PTR [ecx],al
110026d7:	add    BYTE PTR [eax],al
110026d9:	add    BYTE PTR [ebx],dl
110026db:	add    al,0x2b
110026dd:	mov    bl,0x2b
110026df:	pop    ss
110026e0:	and    BYTE PTR [ebx],al
110026e2:	add    BYTE PTR [eax],al
110026e4:	add    BYTE PTR [ebx],dl
110026e6:	add    al,0x2b
110026e8:	test   al,0x6
110026ea:	sub    al,0xb
110026ec:	and    BYTE PTR [eax+eax*1],al
110026ef:	add    BYTE PTR [eax],al
110026f1:	adc    eax,DWORD PTR [ebx+ebp*1]
110026f4:	pushf  
110026f5:	sub    ebx,eax
110026f7:	fsubr  QWORD PTR [edx]
110026f9:	add    BYTE PTR [eax],al
110026fb:	add    BYTE PTR [ecx],al
110026fd:	adc    BYTE PTR [eax],al
110026ff:	add    BYTE PTR [edx],al
11002701:	add    BYTE PTR [eax+eax*1],bl
11002704:	jp     0x1100269c
11002706:	add    BYTE PTR [edx+0x0],dh
11002709:	add    BYTE PTR [eax],al
1100270b:	add    BYTE PTR [ebx],dl
1100270d:	xor    BYTE PTR [ecx],al
1100270f:	add    BYTE PTR [edi],al
11002711:	add    BYTE PTR [eax],al
11002713:	add    BYTE PTR [eax],al
11002715:	add    BYTE PTR [eax],al
11002717:	add    BYTE PTR [edx],al
11002719:	sub    BYTE PTR [ecx],dh
1100271b:	add    BYTE PTR [eax],al
1100271d:	or     ch,BYTE PTR [edx]
1100271f:	add    BYTE PTR [edx+0x53],al
11002722:	dec    edx
11002723:	inc    edx
11002724:	add    DWORD PTR [eax],eax
11002726:	add    DWORD PTR [eax],eax
11002728:	add    BYTE PTR [eax],al
1100272a:	add    BYTE PTR [eax],al
1100272c:	or     al,0x0
1100272e:	add    BYTE PTR [eax],al
11002730:	jbe    0x11002766
11002732:	xor    BYTE PTR cs:[esi],ch
11002735:	xor    esi,DWORD PTR [eax]
11002737:	xor    esi,DWORD PTR [ecx]
11002739:	cmp    DWORD PTR [eax],eax
1100273b:	add    BYTE PTR [eax],al
1100273d:	add    BYTE PTR ds:0x6c00,al
11002743:	add    BYTE PTR [esp+eax*1+0x0],dl
11002747:	add    BYTE PTR [ebx],ah
11002749:	jle    0x1100274b
1100274b:	add    al,al
1100274d:	add    al,0x0
1100274f:	add    al,al
11002751:	add    al,0x0
11002753:	add    BYTE PTR [ebx],ah
11002755:	push   ebx
11002756:	je     0x110027ca
11002758:	imul   ebp,DWORD PTR [esi+0x67],0x73
1100275f:	add    BYTE PTR [eax-0x23fffff7],al
11002765:	add    BYTE PTR [eax],al
11002767:	add    BYTE PTR [ebx],ah
11002769:	push   ebp
1100276a:	push   ebx
1100276b:	add    BYTE PTR [edx+ecx*1+0x0],bl
1100276f:	add    BYTE PTR [eax],dl
11002771:	add    BYTE PTR [eax],al
11002773:	add    BYTE PTR [ebx],ah
11002775:	inc    edi
11002776:	push   ebp
11002777:	dec    ecx
11002778:	inc    esp
11002779:	add    BYTE PTR [eax],al
1100277b:	add    BYTE PTR [edx+ecx*1+0x0],ch
1100277f:	add    BYTE PTR [ebx+eax*1],al
11002782:	add    BYTE PTR [eax],al
11002784:	and    eax,DWORD PTR [edx+0x6c]
11002787:	outs   dx,DWORD PTR ds:[esi]
11002788:	bound  eax,QWORD PTR [eax]
1100278a:	add    BYTE PTR [eax],al
1100278c:	add    BYTE PTR [eax],al
1100278e:	add    BYTE PTR [eax],al
11002790:	add    al,BYTE PTR [eax]
11002792:	add    BYTE PTR [eax],al
11002794:	push   edi
11002795:	adc    eax,0x10901a2
1100279a:	add    BYTE PTR [eax],al
1100279c:	add    dl,bh
1100279e:	and    eax,0x160033
110027a3:	add    BYTE PTR [ecx],al
110027a5:	add    BYTE PTR [eax],al
110027a7:	add    BYTE PTR [edi],ah
110027a9:	add    BYTE PTR [eax],al
110027ab:	add    BYTE PTR [ebx],al
110027ad:	add    BYTE PTR [eax],al
110027af:	add    BYTE PTR [esi],al
110027b1:	add    BYTE PTR [eax],al
110027b3:	add    BYTE PTR [eax+eax*1],cl
110027b6:	add    BYTE PTR [eax],al
110027b8:	add    eax,0x34000000
110027bd:	add    BYTE PTR [eax],al
110027bf:	add    BYTE PTR [edi],cl
110027c1:	add    BYTE PTR [eax],al
110027c3:	add    BYTE PTR [esi],al
110027c5:	add    BYTE PTR [eax],al
110027c7:	add    BYTE PTR [ecx],al
110027c9:	add    BYTE PTR [eax],al
110027cb:	add    BYTE PTR [edx],al
110027cd:	add    BYTE PTR [eax],al
110027cf:	add    BYTE PTR [edx],al
110027d1:	add    BYTE PTR [eax],al
110027d3:	add    BYTE PTR [ecx],al
110027d5:	add    BYTE PTR [eax],al
110027d7:	add    BYTE PTR [ecx],al
110027d9:	add    BYTE PTR [eax],al
110027db:	add    BYTE PTR [ecx],al
110027dd:	add    BYTE PTR [eax],al
110027df:	add    BYTE PTR [eax],al
110027e1:	add    BYTE PTR [ecx+0x4],cl
110027e4:	add    DWORD PTR [eax],eax
110027e6:	add    BYTE PTR [eax],al
110027e8:	add    BYTE PTR [eax],al
110027ea:	push   es
110027eb:	add    BYTE PTR [eax+eax*1],bl
110027ee:	or     al,BYTE PTR [eax]
110027f0:	push   es
110027f1:	add    BYTE PTR [ebx+0x0],bl
110027f4:	cmp    eax,DWORD PTR [eax]
110027f6:	push   es
110027f7:	add    BYTE PTR [edx+0x6007900],cl
110027fd:	add    BYTE PTR [eax+eax*1+0x6000a],ch
11002804:	ret    
11002805:	add    BYTE PTR [edx],cl
11002807:	add    BYTE PTR [esi],al
11002809:	add    ah,bl
1100280b:	add    BYTE PTR [edx],cl
1100280d:	add    BYTE PTR [esi],al
1100280f:	add    BYTE PTR [ecx],dl
11002811:	add    edi,esi
11002813:	add    BYTE PTR [esi],al
11002815:	add    BYTE PTR [edx],ch
11002817:	add    DWORD PTR [edx],ecx
11002819:	add    BYTE PTR [esi],al
1100281b:	add    BYTE PTR [edi+0x1],al
1100281e:	or     al,BYTE PTR [eax]
11002820:	push   es
11002821:	add    BYTE PTR [esi+0x1],ah
11002824:	or     al,BYTE PTR [eax]
11002826:	push   es
11002827:	add    BYTE PTR [ecx+0x6003b01],al
1100282d:	add    BYTE PTR [eax+0x601a101],ch
11002833:	add    BYTE PTR [edi+0x601a101],ch
11002839:	add    BYTE PTR [ecx+0x6007901],bh
1100283f:	add    cl,cl
11002841:	add    DWORD PTR [edx],ecx
11002843:	add    BYTE PTR [esi],al
11002845:	add    bh,ah
11002847:	add    DWORD PTR [edx],ecx
11002849:	add    BYTE PTR [esi],al
1100284b:	add    BYTE PTR ds:0x601a102,al
11002851:	add    BYTE PTR [ebx],dl
11002853:	add    ah,BYTE PTR [ecx+0x30000601]
11002859:	add    ah,BYTE PTR [esi]
1100285b:	add    al,BYTE PTR [esi]
1100285d:	add    BYTE PTR [edx+eax*1],bh
11002860:	add    al,BYTE PTR es:[esi]
11002863:	add    BYTE PTR [ebp+0x2],dl
11002866:	add    al,BYTE PTR es:[esi]
11002869:	add    BYTE PTR [ecx+0x2],ah
1100286c:	mov    eax,ds:0x73000601
11002871:	add    ah,BYTE PTR [ecx-0x76fff9ff]
11002877:	add    ah,BYTE PTR [esi]
11002879:	add    al,BYTE PTR [esi]
1100287b:	add    bl,dl
1100287d:	add    al,dl
1100287f:	add    al,BYTE PTR [esi]
11002881:	add    BYTE PTR [ecx],al
11002883:	add    ebp,esp
11002885:	add    al,BYTE PTR [esi]
11002887:	add    BYTE PTR ds:0x601a103,ch
1100288d:	add    BYTE PTR [edx+0x3],cl
11002890:	add    al,BYTE PTR es:[esi]
11002893:	add    BYTE PTR [ebp+0x3],ch
11002896:	add    al,BYTE PTR es:[esi]
11002899:	add    BYTE PTR [edx+0x3],bh
1100289c:	add    al,BYTE PTR es:[esi]
1100289f:	add    BYTE PTR [edi+0x6022603],al
110028a5:	add    BYTE PTR [edx+0x6022603],dl
110028ab:	add    BYTE PTR [ebx+0x6022603],bl
110028b1:	add    BYTE PTR [esi+0x6022603],ah
110028b7:	add    BYTE PTR [eax+0x6022603],dh
110028bd:	add    dh,al
110028bf:	add    esp,DWORD PTR [esi]
110028c1:	add    al,BYTE PTR [esi]
110028c3:	add    ch,ch
110028c5:	add    esp,DWORD PTR [ecx+0x5000601]
110028cb:	add    al,0xa1
110028cd:	add    DWORD PTR [esi],eax
110028cf:	add    BYTE PTR ds:0x41604,dh
110028d5:	add    BYTE PTR [eax],al
110028d7:	add    BYTE PTR [ecx],al
110028d9:	add    BYTE PTR [eax],al
110028db:	add    BYTE PTR [eax],al
110028dd:	add    BYTE PTR [ecx],al
110028df:	add    BYTE PTR [ecx],al
110028e1:	add    BYTE PTR [ecx],al
110028e3:	add    DWORD PTR [eax],edx
110028e5:	add    BYTE PTR [ebx+0x4],ah
110028e8:	add    BYTE PTR [eax],al
110028ea:	xor    eax,0x1000100
110028ef:	add    BYTE PTR [eax],al
110028f1:	add    BYTE PTR [eax],al
110028f3:	add    BYTE PTR [eax+0x4],bh
110028f6:	add    BYTE PTR [eax],al
110028f8:	xor    DWORD PTR [eax],eax
110028fa:	add    eax,DWORD PTR [eax]
110028fc:	add    al,0x0
110028fe:	add    DWORD PTR [eax],eax
11002900:	jnp    0x11002906
11002902:	aam    0x0
11002904:	add    DWORD PTR [eax],eax
11002906:	jge    0x1100290c
11002908:	xlat   BYTE PTR ds:[ebx]
11002909:	add    BYTE PTR [ecx],dl
1100290b:	add    BYTE PTR [ebx+0x4],bh
1100290e:	aam    0x0
11002910:	adc    DWORD PTR [eax],eax
11002912:	jg     0x11002918
11002914:	aam    0x0
11002916:	adc    DWORD PTR [eax],eax
11002918:	jge    0x1100291e
1100291a:	aam    0x0
1100291c:	adc    DWORD PTR [eax],eax
1100291e:	jnp    0x11002924
11002920:	in     al,0x0
11002922:	shl    BYTE PTR [eax],1
11002924:	add    BYTE PTR [eax],al
11002926:	add    BYTE PTR [eax],al
11002928:	xchg   BYTE PTR [eax],bl
1100292a:	xor    eax,0x100da00
1100292f:	add    ah,dh
11002931:	and    BYTE PTR [eax],al
11002933:	add    BYTE PTR [eax],al
11002935:	add    BYTE PTR [esi+0x19047b00],al
1100293b:	add    BYTE PTR [ebx],al
1100293d:	add    BYTE PTR [eax],cl
1100293f:	and    DWORD PTR [eax],eax
11002941:	add    BYTE PTR [eax],al
11002943:	add    BYTE PTR [esi-0x1ffb8300],al
11002949:	add    BYTE PTR [ebx],al
1100294b:	add    BYTE PTR [ecx+eiz*1],bl
1100294e:	add    BYTE PTR [eax],al
11002950:	add    BYTE PTR [eax],al
11002952:	xchg   ecx,eax
11002953:	sbb    BYTE PTR [ecx+0x3006804],al
11002959:	add    BYTE PTR [eax+0x21],bl
1100295c:	add    BYTE PTR [eax],al
1100295e:	add    BYTE PTR [eax],al
11002960:	xchg   ecx,eax
11002961:	add    BYTE PTR [ebx+0x4],bh
11002964:	call   0xf9002c69
11002969:	and    al,BYTE PTR [eax]
1100296b:	add    BYTE PTR [eax],al
1100296d:	add    BYTE PTR [ecx-0xcfb8500],dl
11002973:	add    BYTE PTR [eax+eax*1],al
11002976:	clc    
11002977:	and    eax,DWORD PTR [eax]
11002979:	add    BYTE PTR [eax],al
1100297b:	add    BYTE PTR [ecx+0x68048c00],dl
11002981:	add    BYTE PTR ds:0x241c00,al
11002987:	add    BYTE PTR [eax],al
11002989:	add    BYTE PTR [ecx+0x68047d00],dl
1100298f:	add    BYTE PTR ds:0x247800,al
11002995:	add    BYTE PTR [eax],al
11002997:	add    BYTE PTR [ecx-0x6fb8500],dl
1100299d:	add    BYTE PTR ds:0x257800,al
110029a3:	add    BYTE PTR [eax],al
110029a5:	add    BYTE PTR [ecx+0x68047f00],dl
110029ab:	add    BYTE PTR [esi],al
110029ad:	add    ah,ah
110029af:	and    eax,0x0
110029b4:	xchg   ecx,eax
110029b5:	add    BYTE PTR [ebx+0x4],bh
110029b8:	push   0xc000600
110029bd:	daa    
110029be:	add    BYTE PTR [eax],al
110029c0:	add    BYTE PTR [eax],al
110029c2:	xchg   BYTE PTR [eax],bl
110029c4:	xor    eax,0x6000600
110029c9:	add    BYTE PTR [eax],al
110029cb:	add    BYTE PTR [ecx],al
110029cd:	add    BYTE PTR [ebx+0x4],bh
110029d0:	add    BYTE PTR [eax],al
110029d2:	add    al,BYTE PTR [eax]
110029d4:	jge    0x110029da
110029d6:	add    BYTE PTR [eax],al
110029d8:	add    DWORD PTR [eax],eax
110029da:	mov    BYTE PTR [eax+eax*1],al
110029dd:	add    BYTE PTR [ecx],al
110029df:	add    BYTE PTR [eax+0x1000004],cl
110029e5:	add    BYTE PTR [eax+0x35000904],cl
110029eb:	add    BYTE PTR [ecx],al
110029ed:	add    BYTE PTR [ecx],dl
110029ef:	add    BYTE PTR ds:0x19000600,dh
110029f5:	add    BYTE PTR ds:0x21000100,dh
110029fb:	add    BYTE PTR ds:0x29000100,dh
11002a01:	add    BYTE PTR ds:0x31000100,dh
11002a07:	add    BYTE PTR ds:0x39000100,dh
11002a0d:	add    BYTE PTR ds:0x41000100,dh
11002a13:	add    BYTE PTR ds:0x49000100,dh
11002a19:	add    BYTE PTR ds:0x51000100,dh
11002a1f:	add    BYTE PTR ds:0x59000100,dh
11002a25:	add    BYTE PTR ds:0x79000a00,dh
11002a2b:	add    dl,dl
11002a2d:	add    DWORD PTR [edi],ecx
11002a2f:	add    BYTE PTR [ecx+0x0],bh
11002a32:	hlt    
11002a33:	add    DWORD PTR [eax+eax*1],edx
11002a36:	add    DWORD PTR [eax],0x1901fc
11002a3c:	mov    DWORD PTR [eax],eax
11002a3e:	or     al,0x2
11002a40:	sbb    eax,0x35007100
11002a45:	add    BYTE PTR [ebx],ah
11002a47:	add    BYTE PTR [ecx+0x6003500],dl
11002a4d:	add    BYTE PTR [ecx+0x2a024100],ah
11002a53:	add    BYTE PTR [ecx+0x1d024d00],ah
11002a59:	add    BYTE PTR [ecx+0x2f025a00],ch
11002a5f:	add    BYTE PTR [ecx+0x34026900],dh
11002a65:	add    BYTE PTR [ecx+0x19027d00],bh
11002a6b:	add    BYTE PTR [ecx+0x3a026900],dh
11002a71:	add    cl,al
11002a73:	add    BYTE PTR [ebx+0x71003f02],dl
11002a79:	add    BYTE PTR [edi-0x76ffbcfe],ah
11002a7f:	add    BYTE PTR [ecx-0x76ffb7fe],dh
11002a85:	add    BYTE PTR [eax-0x36ffb1fe],bh
11002a8b:	add    dl,bl
11002a8d:	add    dl,BYTE PTR [ebx+0x0]
11002a90:	rol    DWORD PTR [eax],1
11002a92:	xor    eax,0xc9000100
11002a97:	add    BYTE PTR ds:0x89005803,cl
11002a9d:	add    BYTE PTR [edx],ah
11002a9f:	add    ebx,DWORD PTR [esi+0x0]
11002aa2:	add    DWORD PTR [eax],0x630335
11002aa8:	popa   
11002aa9:	add    BYTE PTR [ecx+0x3],al
11002aac:	sbb    DWORD PTR [eax],eax
11002aae:	mov    cl,0x0
11002ab0:	imul   eax,DWORD PTR [edx],0xc10068
11002ab6:	pop    edx
11002ab7:	add    ch,BYTE PTR [edi]
11002ab9:	add    cl,al
11002abb:	add    BYTE PTR [eax+0x3],bl
11002abe:	ins    BYTE PTR es:[edi],dx
11002abf:	add    BYTE PTR [ecx+0x72036800],ch
11002ac5:	add    cl,bh
11002ac7:	add    BYTE PTR ds:0xf1007900,dh
11002acd:	add    BYTE PTR ds:0xf1008700,dh
11002ad3:	add    BYTE PTR [edi+0x19008e03],dh
11002ad9:	add    ecx,edx
11002adb:	add    edx,DWORD PTR [eax+eax*1+0x3d600f1]
11002ae2:	pushf  
11002ae3:	add    cl,dh
11002ae5:	add    cl,ah
11002ae7:	add    eax,DWORD PTR [esi]
11002ae9:	add    cl,bh
11002aeb:	add    BYTE PTR ds:0xe900a000,dh
11002af1:	add    BYTE PTR ds:0xe9008700,dh
11002af7:	add    BYTE PTR [edi-0x16ff71fd],dh
11002afd:	add    bh,ah
11002aff:	add    ebp,DWORD PTR [ebx-0x1eff1700]
11002b05:	add    eax,DWORD PTR [esi]
11002b07:	add    BYTE PTR [ecx+0x0],ah
11002b0a:	xor    eax,0x29000600
11002b0f:	add    DWORD PTR ds:0x3900b000,esi
11002b15:	add    DWORD PTR ds:0x6900b700,esi
11002b1b:	add    BYTE PTR ds:0x2e000600,dh
11002b21:	add    BYTE PTR [ebx],ch
11002b23:	add    dl,bh
11002b25:	add    DWORD PTR [esi],ebp
11002b27:	add    BYTE PTR [ebx],dh
11002b29:	add    BYTE PTR [ecx],bl
11002b2b:	add    ch,BYTE PTR [esi]
11002b2d:	add    BYTE PTR [ebx],cl
11002b2f:	add    BYTE PTR [ecx+0x13002e01],ch
11002b35:	add    BYTE PTR [ecx+eax*1+0x1b002e],bh
11002b3c:	fild   DWORD PTR [ecx]
11002b3e:	add    BYTE PTR cs:[ebx],ah
11002b41:	add    al,ch
11002b43:	add    DWORD PTR [esi],ebp
11002b45:	add    BYTE PTR [ebx+0x0],cl
11002b48:	into   
11002b49:	add    BYTE PTR [esi],ch
11002b4b:	add    BYTE PTR [edx],cl
11002b4d:	add    BYTE PTR [ecx+0x3b002e02],bh
11002b53:	add    BYTE PTR [edi+0x2],al
11002b56:	add    BYTE PTR cs:[ebx+0x0],al
11002b5a:	into   
11002b5b:	add    BYTE PTR [esi],ch
11002b5d:	add    BYTE PTR [ebx+0x0],dl
11002b60:	into   
11002b61:	add    BYTE PTR [esi],ch
11002b63:	add    BYTE PTR [ebx+0x0],bl
11002b66:	pop    DWORD PTR [edx]
11002b68:	inc    ebx
11002b69:	add    BYTE PTR [ebx+0x4300c501],dl
11002b6f:	add    BYTE PTR [ebx-0x5fff31ff],bl
11002b75:	add    BYTE PTR [ebx-0x25ff1200],cl
11002b7b:	add    bl,bh
11002b7d:	add    ah,bh
11002b7f:	add    dh,cl
11002b81:	add    dh,dh
11002b83:	add    bh,dl
11002b85:	add    al,BYTE PTR [edx]
11002b87:	add    BYTE PTR [ecx],al
11002b89:	add    BYTE PTR [eax],al
11002b8b:	add    BYTE PTR [esi+0xff04],cl
11002b91:	add    BYTE PTR [eax+0x2010304],dl
11002b97:	add    BYTE PTR [edx],al
11002b99:	add    BYTE PTR [ebx],al
11002b9b:	add    BYTE PTR [edx],al
11002b9d:	add    BYTE PTR [ebx],al
11002b9f:	add    BYTE PTR ds:0x800400,al
11002ba5:	add    BYTE PTR ds:0x500,al
11002bab:	add    BYTE PTR [eax],al
11002bad:	add    BYTE PTR [ecx],al
11002baf:	add    BYTE PTR [eax],al
11002bb1:	add    BYTE PTR [edi],al
11002bb3:	add    DWORD PTR [edx+0x4000004],edx
	...
11002bc1:	add    BYTE PTR [eax],al
11002bc3:	add    BYTE PTR [eax+eax*1+0x45a],bh
11002bca:	add    BYTE PTR [eax],al
11002bcc:	add    BYTE PTR [eax],al
11002bce:	add    BYTE PTR [eax],al
11002bd0:	add    DWORD PTR [eax],eax
11002bd2:	add    BYTE PTR [eax],al
11002bd4:	lahf   
11002bd5:	add    al,0x0
	...
11002bdf:	add    BYTE PTR [eax],al
11002be1:	cmp    al,0x4d
11002be3:	outs   dx,DWORD PTR ds:[esi]
11002be4:	fs jne 0x11002c53
11002be7:	gs add BYTE PTR ds:[ebx+0x79],dl
11002bec:	jae    0x11002c62
11002bee:	gs ins DWORD PTR es:[edi],dx
11002bf0:	cs push edx
11002bf2:	gs data16 ins BYTE PTR es:[edi],dx
11002bf5:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
11002bfa:	outs   dx,BYTE PTR ds:[esi]
11002bfb:	add    BYTE PTR [ecx+0x73],al
11002bfe:	jae    0x11002c65
11002c00:	ins    DWORD PTR es:[edi],dx
11002c01:	bound  ebp,QWORD PTR [ecx+edi*2+0x50]
11002c05:	jb     0x11002c76
11002c07:	fs jne 0x11002c6d
11002c0a:	je     0x11002c4d
11002c0c:	je     0x11002c82
11002c0e:	jb     0x11002c79
11002c10:	bound  esi,QWORD PTR [ebp+0x74]
11002c13:	add    BYTE PTR gs:[esi],ch
11002c16:	arpl   WORD PTR [edi+ebp*2+0x72],si
11002c1a:	add    BYTE PTR [ebx+0x79],dl
11002c1d:	jae    0x11002c93
11002c1f:	gs ins DWORD PTR es:[edi],dx
11002c21:	cs push edx
11002c23:	jne    0x11002c93
11002c25:	je     0x11002c90
11002c27:	ins    DWORD PTR es:[edi],dx
11002c28:	gs cs inc ebx
11002c2b:	outs   dx,DWORD PTR ds:[esi]
11002c2c:	ins    DWORD PTR es:[edi],dx
11002c2d:	jo     0x11002c98
11002c2f:	ins    BYTE PTR es:[edi],dx
11002c30:	gs jb  0x11002c86
11002c33:	gs jb  0x11002cac
11002c36:	imul   esp,DWORD PTR [ebx+0x65],0x75520073
11002c3d:	outs   dx,BYTE PTR ds:[esi]
11002c3e:	je     0x11002ca9
11002c40:	ins    DWORD PTR es:[edi],dx
11002c41:	gs inc ebx
11002c43:	outs   dx,DWORD PTR ds:[esi]
11002c44:	ins    DWORD PTR es:[edi],dx
11002c45:	jo     0x11002ca8
11002c47:	je     0x11002cb2
11002c49:	bound  ebp,QWORD PTR [ecx+0x6c]
11002c4c:	imul   esi,DWORD PTR [ecx+edi*2+0x41],0x69727474
11002c54:	bound  esi,QWORD PTR [ebp+0x74]
11002c57:	add    BYTE PTR gs:[ebx+0x79],dl
11002c5b:	jae    0x11002cd1
11002c5d:	gs ins DWORD PTR es:[edi],dx
11002c5f:	cs push edx
11002c61:	gs jae 0x11002cd3
11002c64:	jne    0x11002cd8
11002c66:	arpl   WORD PTR [ebp+0x73],sp
11002c69:	add    BYTE PTR [ebx+0x61],dl
11002c6c:	je     0x11002cd3
11002c6e:	ins    BYTE PTR es:[edi],dx
11002c6f:	ins    BYTE PTR es:[edi],dx
11002c70:	imul   esi,DWORD PTR [ebp+eiz*2+0x43],0x72746e6f
11002c78:	popa   
11002c79:	arpl   WORD PTR [esi+edx*2+0x65],si
11002c7d:	jb     0x11002cf2
11002c7f:	imul   ebp,DWORD PTR [edi+0x6e],0x72747441
11002c86:	imul   esp,DWORD PTR [edx+0x75],0x41006574
11002c8d:	jae    0x11002d02
11002c8f:	gs ins DWORD PTR es:[edi],dx
11002c91:	bound  ebp,QWORD PTR [ecx+edi*2+0x54]
11002c95:	imul   esi,DWORD PTR [esp+ebp*2+0x65],0x72747441
11002c9d:	imul   esp,DWORD PTR [edx+0x75],0x41006574
11002ca4:	jae    0x11002d19
11002ca6:	gs ins DWORD PTR es:[edi],dx
11002ca8:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
11002cac:	outs   dx,DWORD PTR ds:[esi]
11002cad:	ins    DWORD PTR es:[edi],dx
11002cae:	jo     0x11002d11
11002cb0:	outs   dx,BYTE PTR ds:[esi]
11002cb1:	jns    0x11002cf4
11002cb3:	je     0x11002d29
11002cb5:	jb     0x11002d20
11002cb7:	bound  esi,QWORD PTR [ebp+0x74]
11002cba:	add    BYTE PTR gs:[ecx+0x73],al
11002cbe:	jae    0x11002d25
11002cc0:	ins    DWORD PTR es:[edi],dx
11002cc1:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
11002cc5:	outs   dx,DWORD PTR ds:[esi]
11002cc6:	jo     0x11002d41
11002cc8:	jb     0x11002d33
11002cca:	addr16 push 0x74744174
11002cd0:	jb     0x11002d3b
11002cd2:	bound  esi,QWORD PTR [ebp+0x74]
11002cd5:	add    BYTE PTR gs:[ebx+0x79],dl
11002cd9:	jae    0x11002d4f
11002cdb:	gs ins DWORD PTR es:[edi],dx
11002cdd:	cs push edx
11002cdf:	jne    0x11002d4f
11002ce1:	je     0x11002d4c
11002ce3:	ins    DWORD PTR es:[edi],dx
11002ce4:	gs cs push esi
11002ce7:	gs jb  0x11002d5d
11002cea:	imul   ebp,DWORD PTR [edi+0x6e],0x676e69
11002cf1:	push   esp
11002cf2:	popa   
11002cf3:	jb     0x11002d5c
11002cf5:	gs je  0x11002d3e
11002cf8:	jb     0x11002d5b
11002cfa:	ins    DWORD PTR es:[edi],dx
11002cfb:	gs ja  0x11002d6d
11002cfe:	jb     0x11002d6b
11002d00:	inc    ecx
11002d01:	je     0x11002d77
11002d03:	jb     0x11002d6e
11002d05:	bound  esi,QWORD PTR [ebp+0x74]
11002d08:	add    BYTE PTR gs:[ecx+0x73],al
11002d0c:	jae    0x11002d73
11002d0e:	ins    DWORD PTR es:[edi],dx
11002d0f:	bound  ebp,QWORD PTR [ecx+edi*2+0x44]
11002d13:	gs jae 0x11002d79
11002d16:	jb     0x11002d81
11002d18:	jo     0x11002d8e
11002d1a:	imul   ebp,DWORD PTR [edi+0x6e],0x72747441
11002d21:	imul   esp,DWORD PTR [edx+0x75],0x41006574
11002d28:	jae    0x11002d9d
11002d2a:	gs ins DWORD PTR es:[edi],dx
11002d2c:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
11002d30:	outs   dx,DWORD PTR ds:[esi]
11002d31:	outs   dx,BYTE PTR ds:[esi]
11002d32:	imul   sp,WORD PTR [edi+0x75],0x6172
11002d38:	je     0x11002da3
11002d3a:	outs   dx,DWORD PTR ds:[esi]
11002d3b:	outs   dx,BYTE PTR ds:[esi]
11002d3c:	inc    ecx
11002d3d:	je     0x11002db3
11002d3f:	jb     0x11002daa
11002d41:	bound  esi,QWORD PTR [ebp+0x74]
11002d44:	add    BYTE PTR gs:[ecx+0x73],al
11002d48:	jae    0x11002daf
11002d4a:	ins    DWORD PTR es:[edi],dx
11002d4b:	bound  ebp,QWORD PTR [ecx+edi*2+0x54]
11002d4f:	jb     0x11002db2
11002d51:	fs gs ins DWORD PTR es:[edi],dx
11002d54:	popa   
11002d55:	jb     0x11002dc2
11002d57:	inc    ecx
11002d58:	je     0x11002dce
11002d5a:	jb     0x11002dc5
11002d5c:	bound  esi,QWORD PTR [ebp+0x74]
11002d5f:	add    BYTE PTR gs:[ebx+0x6f],al
11002d63:	ins    DWORD PTR es:[edi],dx
11002d64:	jo     0x11002dcf
11002d66:	ins    BYTE PTR es:[edi],dx
11002d67:	popa   
11002d68:	je     0x11002dd3
11002d6a:	outs   dx,DWORD PTR ds:[esi]
11002d6b:	outs   dx,BYTE PTR ds:[esi]
11002d6c:	push   edx
11002d6d:	gs ins BYTE PTR es:[edi],dx
11002d6f:	popa   
11002d70:	js     0x11002dd3
11002d72:	je     0x11002ddd
11002d74:	outs   dx,DWORD PTR ds:[esi]
11002d75:	outs   dx,BYTE PTR ds:[esi]
11002d76:	jae    0x11002db9
11002d78:	je     0x11002dee
11002d7a:	jb     0x11002de5
11002d7c:	bound  esi,QWORD PTR [ebp+0x74]
11002d7f:	add    BYTE PTR gs:[ebx+0x79],dl
11002d83:	jae    0x11002df9
11002d85:	gs ins DWORD PTR es:[edi],dx
11002d87:	add    BYTE PTR [edi+0x62],cl
11002d8a:	push   0x65
11002d8c:	arpl   WORD PTR [eax+eax*1+0x41],si
11002d90:	je     0x11002e06
11002d92:	jb     0x11002dfd
11002d94:	bound  esi,QWORD PTR [ebp+0x74]
11002d97:	add    BYTE PTR gs:[edx+0x65],dl
11002d9b:	jae    0x11002e0c
11002d9d:	jne    0x11002e11
11002d9f:	arpl   WORD PTR [ebp+0x4d],sp
11002da2:	popa   
11002da3:	outs   dx,BYTE PTR ds:[esi]
11002da4:	popa   
11002da5:	addr16 gs jb 0x11002da9
11002da9:	inc    ecx
11002daa:	jae    0x11002e1f
11002dac:	gs ins DWORD PTR es:[edi],dx
11002dae:	bound  ebp,QWORD PTR [ecx+edi*2+0x0]
11002db2:	inc    edi
11002db3:	gs je  0x11002dfb
11002db6:	js     0x11002e1d
11002db8:	arpl   WORD PTR [ebp+0x74],si
11002dbb:	imul   ebp,DWORD PTR [esi+0x67],0x65737341
11002dc2:	ins    DWORD PTR es:[edi],dx
11002dc3:	bound  ebp,QWORD PTR [ecx+edi*2+0x0]
11002dc7:	inc    ecx
11002dc8:	jae    0x11002e3d
11002dca:	gs ins DWORD PTR es:[edi],dx
11002dcc:	bound  ebp,QWORD PTR [ecx+edi*2+0x4e]
11002dd0:	popa   
11002dd1:	ins    DWORD PTR es:[edi],dx
11002dd2:	add    BYTE PTR gs:[edi+0x65],al
11002dd6:	je     0x11002e26
11002dd8:	popa   
11002dd9:	ins    DWORD PTR es:[edi],dx
11002dda:	add    BYTE PTR gs:[edi+0x65],ah
11002dde:	je     0x11002e3f
11002de0:	dec    esi
11002de1:	popa   
11002de2:	ins    DWORD PTR es:[edi],dx
11002de3:	add    BYTE PTR gs:[ebx+0x74],dl
11002de7:	jb     0x11002e52
11002de9:	outs   dx,BYTE PTR ds:[esi]
11002dea:	add    BYTE PTR [bp+di+0x6f],al
11002dee:	outs   dx,BYTE PTR ds:[esi]
11002def:	arpl   WORD PTR [ecx+0x74],sp
11002df2:	add    BYTE PTR [ebx+0x54],dl
11002df5:	inc    ecx
11002df6:	push   esp
11002df7:	push   0x64616572
11002dfc:	inc    ecx
11002dfd:	je     0x11002e73
11002dff:	jb     0x11002e6a
11002e01:	bound  esi,QWORD PTR [ebp+0x74]
11002e04:	add    BYTE PTR gs:[ebx+0x79],dl
11002e08:	jae    0x11002e7e
11002e0a:	gs ins DWORD PTR es:[edi],dx
11002e0c:	cs dec ecx
11002e0e:	dec    edi
11002e0f:	add    BYTE PTR [ecx+0x4f],cl
11002e12:	inc    ebp
11002e13:	js     0x11002e78
11002e15:	gs jo  0x11002e8c
11002e18:	imul   ebp,DWORD PTR [edi+0x6e],0x74615000
11002e1f:	push   0x74654700
11002e24:	inc    esi
11002e25:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x656d61
11002e2d:	inc    ebx
11002e2e:	outs   dx,DWORD PTR ds:[esi]
11002e2f:	ins    DWORD PTR es:[edi],dx
11002e30:	bound  ebp,QWORD PTR [ecx+0x6e]
11002e33:	add    BYTE PTR gs:[esi+0x69],al
11002e37:	ins    BYTE PTR es:[edi],dx
11002e38:	add    BYTE PTR gs:[ebp+0x78],al
11002e3c:	imul   esi,DWORD PTR [ebx+0x74],0x6f430073
11002e43:	outs   dx,BYTE PTR ds:[esi]
11002e44:	jae    0x11002eb5
11002e46:	ins    BYTE PTR es:[edi],dx
11002e47:	add    BYTE PTR gs:[edi+0x72],dl
11002e4b:	imul   esi,DWORD PTR [ebp+eiz*2+0x4c],0x656e69
11002e53:	inc    ebp
11002e54:	js     0x11002eb9
11002e56:	gs jo  0x11002ecd
11002e59:	imul   ebp,DWORD PTR [edi+0x6e],0x74656700
11002e60:	pop    edi
11002e61:	dec    ebp
11002e62:	gs jae 0x11002ed8
11002e65:	popa   
11002e66:	add    BYTE PTR gs:[si+0x69],al
11002e6b:	jb     0x11002ed2
11002e6d:	arpl   WORD PTR [edi+ebp*2+0x72],si
11002e71:	jns    0x11002e73
11002e73:	inc    edi
11002e74:	gs je  0x11002eba
11002e77:	jne    0x11002eeb
11002e79:	jb     0x11002ee0
11002e7b:	outs   dx,BYTE PTR ds:[esi]
11002e7c:	je     0x11002ec2
11002e7e:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
11002e85:	jns    0x11002e87
11002e87:	inc    edi
11002e88:	gs je  0x11002ede
11002e8b:	je     0x11002eff
11002e8d:	imul   ebp,DWORD PTR [esi+0x67],0x726f4600
11002e94:	ins    DWORD PTR es:[edi],dx
11002e95:	popa   
11002e96:	je     0x11002e98
11002e98:	push   ebx
11002e99:	jne    0x11002efd
11002e9b:	jae    0x11002f11
11002e9d:	jb     0x11002f08
11002e9f:	outs   dx,BYTE PTR ds:[esi]
11002ea0:	add    BYTE PTR [bp+di+0x79],dl
11002ea4:	jae    0x11002f1a
11002ea6:	gs ins DWORD PTR es:[edi],dx
11002ea8:	cs push esp
11002eaa:	push   0x64616572
11002eaf:	imul   ebp,DWORD PTR [esi+0x67],0x72685400
11002eb6:	gs popa 
11002eb8:	add    BYTE PTR fs:[edi+0x65],ah
11002ebc:	je     0x11002f1d
11002ebe:	inc    ebx
11002ebf:	jne    0x11002f33
11002ec1:	jb     0x11002f28
11002ec3:	outs   dx,BYTE PTR ds:[esi]
11002ec4:	je     0x11002f1a
11002ec6:	push   0x64616572
11002ecb:	add    BYTE PTR [ebx+0x79],dl
11002ece:	jae    0x11002f44
11002ed0:	gs ins DWORD PTR es:[edi],dx
11002ed2:	cs inc edi
11002ed4:	ins    BYTE PTR es:[edi],dx
11002ed5:	outs   dx,DWORD PTR ds:[esi]
11002ed6:	bound  esp,QWORD PTR [ecx+0x6c]
11002ed9:	imul   edi,DWORD PTR [edx+0x61],0x6e6f6974
11002ee0:	add    BYTE PTR [ebx+0x75],al
11002ee3:	ins    BYTE PTR es:[edi],dx
11002ee4:	je     0x11002f5b
11002ee6:	jb     0x11002f4d
11002ee8:	dec    ecx
11002ee9:	outs   dx,BYTE PTR ds:[esi]
11002eea:	outs   dx,WORD PTR ds:[esi]
11002eec:	add    BYTE PTR [ebx+0x65],dh
11002eef:	je     0x11002f50
11002ef1:	inc    ebx
11002ef2:	jne    0x11002f66
11002ef4:	jb     0x11002f5b
11002ef6:	outs   dx,BYTE PTR ds:[esi]
11002ef7:	je     0x11002f4e
11002ef9:	dec    ecx
11002efa:	inc    ebx
11002efb:	jne    0x11002f69
11002efd:	je     0x11002f74
11002eff:	jb     0x11002f66
11002f01:	add    BYTE PTR [ebx+0x74],dl
11002f04:	popa   
11002f05:	jb     0x11002f7b
11002f07:	jae    0x11002f60
11002f09:	imul   esi,DWORD PTR [eax+ebp*2+0x0],0x73726556
11002f11:	imul   ebp,DWORD PTR [edi+0x6e],0x74656700
11002f18:	pop    edi
11002f19:	push   esi
11002f1a:	gs jb  0x11002f90
11002f1d:	imul   ebp,DWORD PTR [edi+0x6e],0x536f5400
11002f24:	je     0x11002f98
11002f26:	imul   ebp,DWORD PTR [esi+0x67],0x72694400
11002f2d:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
11002f32:	jns    0x11002f7d
11002f34:	outs   dx,BYTE PTR ds:[esi]
11002f35:	outs   dx,WORD PTR ds:[esi]
11002f37:	add    BYTE PTR [ebx+0x72],al
11002f3a:	gs popa 
11002f3c:	je     0x11002fa3
11002f3e:	inc    esp
11002f3f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
11002f46:	jns    0x11002f48
11002f48:	inc    ebx
11002f49:	outs   dx,DWORD PTR ds:[esi]
11002f4a:	jo     0x11002fc5
11002f4c:	add    BYTE PTR [edx+0x69],al
11002f4f:	outs   dx,BYTE PTR ds:[esi]
11002f50:	popa   
11002f51:	jb     0x11002fcc
11002f53:	push   edi
11002f54:	jb     0x11002fbf
11002f56:	je     0x11002fbd
11002f58:	jb     0x11002f5a
11002f5a:	inc    edx
11002f5b:	imul   ebp,DWORD PTR [esi+0x61],0x65527972
11002f62:	popa   
11002f63:	fs gs jb 0x11002f67
11002f67:	inc    esi
11002f68:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x61657274
11002f70:	ins    DWORD PTR es:[edi],dx
11002f71:	add    BYTE PTR [esi+0x69],al
11002f74:	ins    BYTE PTR es:[edi],dx
11002f75:	gs dec ebp
11002f77:	outs   dx,DWORD PTR ds:[esi]
11002f78:	fs add BYTE PTR gs:[esi+0x69],al
11002f7d:	ins    BYTE PTR es:[edi],dx
11002f7e:	gs inc ecx
11002f80:	arpl   WORD PTR [ebx+0x65],sp
11002f83:	jae    0x11002ff8
11002f85:	add    BYTE PTR [esi+0x69],al
11002f88:	ins    BYTE PTR es:[edi],dx
11002f89:	gs push ebx
11002f8b:	push   0x657261
11002f90:	push   ebx
11002f91:	je     0x11003005
11002f93:	gs popa 
11002f95:	ins    DWORD PTR es:[edi],dx
11002f96:	add    BYTE PTR [edi+0x65],ah
11002f99:	je     0x11002ffa
11002f9b:	inc    edx
11002f9c:	popa   
11002f9d:	jae    0x11003004
11002f9f:	push   ebx
11002fa0:	je     0x11003014
11002fa2:	gs popa 
11002fa4:	ins    DWORD PTR es:[edi],dx
11002fa5:	add    BYTE PTR [ebx+0x65],dl
11002fa8:	imul   ecx,DWORD PTR gs:[edi+0x72],0x69
11002fad:	imul   ebp,DWORD PTR [bp+0x0],0x6b656553
11002fb5:	add    BYTE PTR [edx+0x65],dl
11002fb8:	popa   
11002fb9:	fs push ebp
11002fbb:	dec    ecx
11002fbc:	outs   dx,BYTE PTR ds:[esi]
11002fbd:	je     0x11002ff2
11002fbf:	xor    al,BYTE PTR [eax]
11002fc1:	inc    ebx
11002fc2:	ins    BYTE PTR es:[edi],dx
11002fc3:	outs   dx,DWORD PTR ds:[esi]
11002fc4:	jae    0x1100302b
11002fc6:	add    BYTE PTR [edi+0x72],dl
11002fc9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x72747441
11002fd1:	imul   esp,DWORD PTR [edx+0x75],0x73556574
11002fd8:	popa   
11002fd9:	addr16 gs inc ecx
11002fdc:	je     0x11003052
11002fde:	jb     0x11003049
11002fe0:	bound  esi,QWORD PTR [ebp+0x74]
11002fe3:	add    BYTE PTR gs:[ecx+0x74],al
11002fe7:	je     0x1100305b
11002fe9:	imul   esp,DWORD PTR [edx+0x75],0x61546574
11002ff0:	jb     0x11003059
11002ff2:	gs je  0x11003068
11002ff5:	add    BYTE PTR [ebx+0x79],dl
11002ff8:	jae    0x1100306e
11002ffa:	gs ins DWORD PTR es:[edi],dx
11002ffc:	cs push edx
11002ffe:	jne    0x1100306e
11003000:	je     0x1100306b
11003002:	ins    DWORD PTR es:[edi],dx
11003003:	gs cs dec ecx
11003006:	outs   dx,BYTE PTR ds:[esi]
11003007:	je     0x1100306e
11003009:	jb     0x1100307a
1100300b:	jo     0x11003060
1100300d:	gs jb  0x11003086
11003010:	imul   esp,DWORD PTR [ebx+0x65],0x6f430073
11003017:	ins    DWORD PTR es:[edi],dx
11003018:	push   esi
11003019:	imul   esi,DWORD PTR [ebx+0x69],0x41656c62
11003020:	je     0x11003096
11003022:	jb     0x1100308d
11003024:	bound  esi,QWORD PTR [ebp+0x74]
11003027:	add    BYTE PTR gs:[ecx+eiz*2+0x6d],dl
1100302c:	jo     0x11003093
1100302e:	jb     0x11003084
11003030:	gs jae 0x110030a7
11003033:	gs jb  0x11003064
11003036:	gs js  0x1100309e
11003039:	add    BYTE PTR [ebp+0x73],ch
1100303c:	arpl   WORD PTR [edi+0x72],bp
1100303f:	ins    BYTE PTR es:[edi],dx
11003040:	imul   esp,DWORD PTR [edx+0x0],0x66746f44
11003047:	jne    0x110030bc
11003049:	arpl   WORD PTR [ecx+0x74],sp
1100304c:	outs   dx,DWORD PTR ds:[esi]
1100304d:	jb     0x11003090
1100304f:	je     0x110030c5
11003051:	jb     0x110030bc
11003053:	bound  esi,QWORD PTR [ebp+0x74]
11003056:	add    BYTE PTR gs:[edx+0x72],ch
1100305a:	add    BYTE PTR [ecx+0x0],ah
1100305d:	arpl   WORD PTR [eax],ax
1100305f:	bound  eax,QWORD PTR [eax]
11003061:	arpl   WORD PTR cs:[ebx+0x74],sp
11003065:	outs   dx,DWORD PTR ds:[esi]
11003066:	jb     0x11003068
11003068:	inc    ecx
11003069:	pop    edi
1100306a:	xor    BYTE PTR [eax],al
1100306c:	add    BYTE PTR fs:[ecx+0x0],al
11003070:	inc    ebx
11003071:	add    BYTE PTR [ecx+eiz*2+0x6d],dl
11003075:	jo     0x110030dc
11003077:	jb     0x110030cd
11003079:	gs jae 0x110030f0
1100307c:	gs jb  0x1100307f
1100307f:	push   esp
11003080:	popa   
11003081:	ins    DWORD PTR es:[edi],dx
11003082:	jo     0x110030e9
11003084:	jb     0x110030da
11003086:	gs jae 0x110030fd
11003089:	gs jb  0x110030ba
1100308c:	jae    0x11003102
1100308e:	jb     0x110030f9
11003090:	outs   dx,BYTE PTR ds:[esi]
11003091:	addr16 jae 0x110030c2
11003094:	jb     0x110030fb
11003096:	jae    0x11003107
11003098:	jne    0x1100310c
1100309a:	arpl   WORD PTR [ebp+0x73],sp
1100309d:	add    BYTE PTR [eax],al
1100309f:	add    BYTE PTR [eax],al
110030a1:	adc    DWORD PTR [esi],ebp
110030a3:	add    BYTE PTR [ebx+0x0],dh
110030a6:	je     0x110030a8
110030a8:	jb     0x110030aa
110030aa:	imul   eax,DWORD PTR [eax],0x67006e
110030b0:	jae    0x110030b2
110030b2:	add    BYTE PTR ds:0x650053,ch
110030b8:	je     0x110030ba
110030ba:	je     0x110030bc
110030bc:	imul   eax,DWORD PTR [eax],0x67006e
110030c2:	and    BYTE PTR [eax],al
110030c4:	arpl   WORD PTR [eax],ax
110030c6:	jne    0x110030c8
110030c8:	ins    BYTE PTR es:[edi],dx
110030c9:	add    BYTE PTR [eax+eax*1+0x75],dh
110030cd:	add    BYTE PTR [edx+0x0],dh
110030d0:	add    BYTE PTR gs:[eax],ah
110030d3:	add    BYTE PTR [eax+eax*1+0x6f],dh
110030d7:	add    BYTE PTR [eax],ah
110030d9:	add    BYTE PTR [ebx+0x0],bh
110030dc:	xor    BYTE PTR [eax],al
110030de:	jge    0x110030e0
110030e0:	add    BYTE PTR [ecx],dl
110030e2:	push   esp
110030e3:	add    BYTE PTR [ecx+0x0],ah
110030e6:	ins    DWORD PTR es:[edi],dx
110030e7:	add    BYTE PTR [eax+0x0],dh
110030ea:	add    BYTE PTR gs:[edx+0x0],dh
110030ee:	add    BYTE PTR gs:[eax+eax*1+0x0],ah
110030f3:	and    ecx,DWORD PTR [ebp+0x0]
110030f6:	push   ebx
110030f7:	add    BYTE PTR [edi+0x0],al
110030fa:	pop    edi
110030fb:	add    BYTE PTR [ebx+0x0],al
110030fe:	inc    ecx
110030ff:	add    BYTE PTR [esi+0x0],cl
11003102:	push   esp
11003103:	add    BYTE PTR [edi+0x0],bl
11003106:	inc    esi
11003107:	add    BYTE PTR [ecx+0x0],cl
1100310a:	dec    esi
1100310b:	add    BYTE PTR [eax+eax*1+0x5f],al
1100310f:	add    BYTE PTR [ecx+0x0],al
11003112:	push   ebx
11003113:	add    BYTE PTR [ebp+0x0],cl
11003116:	add    BYTE PTR [edi],al
11003118:	das    
11003119:	add    BYTE PTR [ebx+0x0],ah
1100311c:	cmp    al,BYTE PTR [eax]
1100311e:	add    BYTE PTR [edi],al
11003120:	sub    eax,0x3a006300
11003125:	add    BYTE PTR [ecx],al
11003127:	adc    ecx,DWORD PTR [ebp+0x0]
1100312a:	push   ebx
1100312b:	add    BYTE PTR [edi+0x0],al
1100312e:	pop    edi
1100312f:	add    BYTE PTR [ebp+0x0],dl
11003132:	push   ebx
11003133:	add    BYTE PTR [ecx+0x0],al
11003136:	inc    edi
11003137:	add    BYTE PTR [ebp+0x0],al
1100313a:	add    BYTE PTR ds:0x53004d,bl
11003140:	inc    edi
11003141:	add    BYTE PTR [edi+0x0],bl
11003144:	inc    ebx
11003145:	add    BYTE PTR [eax+eax*1+0x49],cl
11003149:	add    BYTE PTR [edi+0x0],bl
1100314c:	dec    eax
1100314d:	add    BYTE PTR [ebp+0x0],al
11003150:	inc    ecx
11003151:	add    BYTE PTR [eax+eax*1+0x45],al
11003155:	add    BYTE PTR [edx+0x0],dl
11003158:	add    BYTE PTR [ebx],bl
1100315a:	dec    ebp
1100315b:	add    BYTE PTR [ebx+0x0],dl
1100315e:	inc    edi
1100315f:	add    BYTE PTR [edi+0x0],bl
11003162:	inc    ebx
11003163:	add    BYTE PTR [edi+0x0],cl
11003166:	push   eax
11003167:	add    BYTE PTR [ecx+0x0],bl
1100316a:	push   edx
1100316b:	add    BYTE PTR [ecx+0x0],cl
1100316e:	inc    edi
1100316f:	add    BYTE PTR [eax+0x0],cl
11003172:	push   esp
11003173:	add    BYTE PTR [eax],al
11003175:	add    eax,0x63002d
1100317a:	add    DWORD PTR [eax],eax
1100317c:	dec    esp
1100317d:	mov    bl,0xfb
1100317f:	ret    
11003180:	pop    edx
11003181:	mov    BYTE PTR [esi+0x45],dl
11003184:	popf   
11003185:	ins    BYTE PTR es:[edi],dx
11003186:	test   al,0x98
11003188:	popa   
11003189:	adc    dh,bl
1100318b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100318c:	add    BYTE PTR [eax+eiz*1],al
1100318f:	add    DWORD PTR [ecx],eax
11003191:	push   cs
11003192:	add    esp,DWORD PTR [eax]
11003194:	add    BYTE PTR [ecx],al
11003196:	add    al,0x20
11003198:	add    DWORD PTR [ecx],eax
1100319a:	or     BYTE PTR [eax+eax*1],al
1100319d:	add    BYTE PTR [edx],dl
1100319f:	cmp    eax,0x12002004
110031a4:	inc    ecx
110031a5:	add    esp,DWORD PTR [eax]
110031a7:	add    BYTE PTR [esi],cl
110031a9:	add    eax,0xe0e0200
110031ae:	push   cs
110031af:	push   es
110031b0:	and    BYTE PTR [edx],al
110031b2:	add    DWORD PTR [esi],ecx
110031b4:	adc    bh,BYTE PTR ds:0xe010004
110031ba:	push   cs
110031bb:	add    al,0x0
110031bd:	add    DWORD PTR [edx],eax
110031bf:	push   cs
110031c0:	add    eax,0xe010200
110031c5:	sbb    al,0x4
110031c7:	add    BYTE PTR [ecx],al
110031c9:	add    DWORD PTR [esi],ecx
110031cb:	add    eax,DWORD PTR [eax]
110031cd:	add    BYTE PTR [esi],cl
110031cf:	add    al,0x20
110031d1:	add    DWORD PTR [esi],ecx
110031d3:	push   cs
110031d4:	add    eax,0xe0e0200
110031d9:	sbb    al,0x4
110031db:	and    BYTE PTR [ecx],al
110031dd:	push   cs
110031de:	or     BYTE PTR [eax+eax*1],al
110031e1:	add    BYTE PTR [edx],dl
110031e3:	gs add eax,0x12010120
110031e9:	imul   eax,DWORD PTR [eax+eiz*1],0x40e0201
110031f0:	and    BYTE PTR [eax],al
110031f2:	adc    ch,BYTE PTR [ebp+0x3]
110031f5:	add    BYTE PTR [eax],al
110031f7:	add    DWORD PTR ds:0x71120100,eax
110031fd:	push   cs
110031fe:	push   es
110031ff:	add    BYTE PTR [ebx],al
11003201:	add    DWORD PTR [esi],ecx
11003203:	push   cs
11003204:	add    cl,BYTE PTR ds:0xe010420
1100320a:	adc    DWORD PTR [eax-0x7a7fee7f],eax
11003210:	adc    DWORD PTR [eax+0x1200689],eax
11003216:	add    DWORD PTR [edx],edx
11003218:	or     BYTE PTR [ebp+0x12002005],0x80
1100321f:	lea    eax,[edi]
11003221:	and    BYTE PTR [edx],al
11003223:	or     cl,BYTE PTR [edx]
11003225:	adc    DWORD PTR [eax+0x200391],eax
1100322b:	or     DWORD PTR [edx],ecx
1100322d:	and    BYTE PTR [ebx],al
1100322f:	add    DWORD PTR [esi],ecx
11003231:	adc    DWORD PTR [eax-0x7a7fee7f],eax
11003237:	add    al,0x20
11003239:	add    DWORD PTR [ecx],eax
1100323b:	or     DWORD PTR [esi],eax
1100323d:	and    BYTE PTR [ecx],al
1100323f:	add    DWORD PTR [ecx],edx
11003241:	sbb    BYTE PTR [ecx+0x1012004],0x2
11003248:	or     BYTE PTR [edi+0x19565c7a],dh
1100324e:	xor    al,0xe0
11003250:	mov    DWORD PTR [eax],ecx
11003252:	add    DWORD PTR [eax],eax
11003254:	add    DWORD PTR [eax],eax
11003256:	add    BYTE PTR [eax],al
11003258:	add    BYTE PTR [eax],al
1100325a:	add    eax,0x1
1100325f:	add    BYTE PTR [edx],al
11003261:	push   es
11003262:	push   cs
11003263:	add    al,BYTE PTR [esi]
11003265:	or     BYTE PTR ds:0xe010220,al
1100326b:	or     BYTE PTR [ebx],al
1100326d:	and    BYTE PTR [eax],al
1100326f:	or     BYTE PTR [ebx],al
11003271:	push   es
11003272:	adc    bh,BYTE PTR [ecx]
11003274:	add    eax,0x1d080100
11003279:	push   cs
1100327a:	add    al,0x1
1100327c:	add    BYTE PTR [eax],al
1100327e:	add    BYTE PTR ds:0x1d0e0100,al
11003284:	push   cs
11003285:	add    eax,0x1d010100
1100328a:	push   cs
1100328b:	add    ebp,DWORD PTR [eax]
1100328d:	add    BYTE PTR [esi],cl
1100328f:	add    ebp,DWORD PTR [eax]
11003291:	add    BYTE PTR [eax],cl
11003293:	and    BYTE PTR [eax+0x2400],0x4
1100329a:	add    BYTE PTR [eax],0x0
1100329d:	xchg   esp,eax
1100329e:	add    BYTE PTR [eax],al
110032a0:	add    BYTE PTR [esi],al
110032a2:	add    al,BYTE PTR [eax]
110032a4:	add    BYTE PTR [eax],al
110032a6:	and    al,0x0
110032a8:	add    BYTE PTR [edx+0x53],dl
110032ab:	inc    ecx
110032ac:	xor    DWORD PTR [eax],eax
110032ae:	add    al,0x0
110032b0:	add    BYTE PTR [ecx],al
110032b2:	add    BYTE PTR [ecx],al
110032b4:	add    BYTE PTR [edi-0x5b65fa57],dl
110032ba:	push   ecx
110032bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110032bc:	push   edi
110032bd:	adc    DWORD PTR [edi+0x4d],ebx
110032c0:	sbb    eax,0x45dbaf04
110032c5:	fbstp  TBYTE PTR [eax+edi*1]
110032c8:	es push edi
110032ca:	cld    
110032cb:	xor    dl,BYTE PTR [ebx+edx*8-0x17]
110032cf:	fbstp  TBYTE PTR [edi-0x2e]
110032d2:	in     al,dx
110032d3:	pushf  
110032d4:	outs   dx,BYTE PTR ds:[esi]
110032d5:	inc    ecx
110032d6:	adc    DWORD PTR [ecx],esi
110032d8:	inc    esp
110032d9:	rol    BYTE PTR [edx-0x38],0xa2
110032dd:	rcr    DWORD PTR [ebp-0x6e],0x85
110032e1:	mov    esp,DWORD PTR [esi-0x6]
110032e4:	lahf   
110032e5:	or     ah,cl
110032e7:	adc    al,0xde
110032e9:	iret   
110032ea:	call   0x9f51fdb8
110032ef:	jbe    0x1100336f
110032f1:	leave  
110032f2:	(bad)
110032f5:	or     DWORD PTR [edi],esi
110032f7:	fcom   st(1)
110032f9:	add    eax,0xde8263f
110032fe:	push   edi
110032ff:	mov    edi,0xfa98ae6b
11003304:	dec    ecx
11003305:	xor    al,0xd6
11003307:	jge    0x1100336a
11003309:	in     al,0x45
1100330b:	scas   al,BYTE PTR es:[edi]
1100330c:	mov    WORD PTR [ecx+0x66b1018b],fs
11003312:	mov    ebp,0x45cf929c
11003317:	fcmove st,st(5)
11003319:	inc    ebx
1100331a:	or     eax,0xa58b9991
1100331f:	pusha  
11003320:	inc    edi
11003321:	adc    eax,0x2df0e00e
11003326:	retf   0xb3fa
11003329:	and    BYTE PTR [esi+0x59b94395],0x57
11003330:	out    0xc1,al
11003332:	call   0x1212dc76
11003337:	add    BYTE PTR ds:0x706d6154,cl
1100333d:	gs jb  0x11003360
11003340:	push   esp
11003341:	gs jae 0x110033b8
11003344:	gs jb  0x11003347
11003347:	add    BYTE PTR [esi],bl
11003349:	add    DWORD PTR [eax],eax
1100334b:	add    DWORD PTR [eax],eax
1100334d:	push   esp
1100334e:	add    dl,BYTE PTR [esi]
11003350:	push   edi
11003351:	jb     0x110033b4
11003353:	jo     0x110033a3
11003355:	outs   dx,DWORD PTR ds:[esi]
11003356:	outs   dx,BYTE PTR ds:[esi]
11003357:	inc    ebp
11003358:	js     0x110033bd
1100335a:	gs jo  0x110033d1
1100335d:	imul   ebp,DWORD PTR [edi+0x6e],0x6f726854
11003364:	ja     0x110033d9
11003366:	add    DWORD PTR [ecx+eax*1],ecx
11003369:	add    BYTE PTR [edi],al
1100336b:	xor    eax,0x302e352e
11003370:	xor    BYTE PTR cs:[eax],al
11003373:	add    BYTE PTR [ecx],dl
11003375:	add    DWORD PTR [eax],eax
11003377:	or     al,0x54
11003379:	popa   
1100337a:	ins    DWORD PTR es:[edi],dx
1100337b:	jo     0x110033e2
1100337d:	jb     0x110033d3
1100337f:	gs jae 0x110033f6
11003382:	gs jb  0x11003385
11003385:	add    BYTE PTR [esi],bl
11003387:	add    DWORD PTR [eax],eax
11003389:	sbb    DWORD PTR [eax+0x72],edx
1100338c:	gs inc ebp
1100338e:	ins    DWORD PTR es:[edi],dx
1100338f:	jo     0x11003405
11003391:	imul   esi,DWORD PTR [esi+0x65],0x6c6f5320
11003398:	jne    0x1100340e
1100339a:	imul   ebp,DWORD PTR [edi+0x6e],0x4c202c73
110033a1:	dec    esp
110033a2:	inc    ebx
110033a3:	add    BYTE PTR [eax],al
110033a5:	sub    eax,0x43280001
110033aa:	outs   dx,DWORD PTR ds:[esi]
110033ab:	jo     0x11003426
110033ad:	jb     0x11003418
110033af:	addr16 push 0x30322074
110033b5:	xor    BYTE PTR [edi],dh
110033b7:	sub    eax,0x32313032
110033bc:	sub    al,0x20
110033be:	inc    ecx
110033bf:	ins    BYTE PTR es:[edi],dx
110033c0:	ins    BYTE PTR es:[edi],dx
110033c1:	and    BYTE PTR [edx+0x69],dl
110033c4:	addr16 push 0x52207374
110033ca:	gs jae 0x11003432
110033cd:	jb     0x11003445
110033cf:	gs add BYTE PTR fs:[eax],al
110033d3:	inc    edi
110033d4:	add    DWORD PTR [eax],eax
110033d6:	sbb    ch,BYTE PTR [esi]
110033d8:	dec    esi
110033d9:	inc    ebp
110033da:	push   esp
110033db:	inc    esi
110033dc:	jb     0x1100343f
110033de:	ins    DWORD PTR es:[edi],dx
110033df:	gs ja  0x11003451
110033e2:	jb     0x1100344f
110033e4:	sub    al,0x56
110033e6:	gs jb  0x1100345c
110033e9:	imul   ebp,DWORD PTR [edi+0x6e],0x2e34763d
110033f0:	xor    BYTE PTR [ecx],al
110033f2:	add    BYTE PTR [esi+ecx*1+0x14],dl
110033f6:	inc    esi
110033f7:	jb     0x1100345a
110033f9:	ins    DWORD PTR es:[edi],dx
110033fa:	gs ja  0x1100346c
110033fd:	jb     0x1100346a
110033ff:	inc    esp
11003400:	imul   esi,DWORD PTR [ebx+0x70],0x4e79616c
11003407:	popa   
11003408:	ins    DWORD PTR es:[edi],dx
11003409:	adc    BYTE PTR gs:[esi],ch
1100340c:	dec    esi
1100340d:	inc    ebp
1100340e:	push   esp
1100340f:	and    BYTE PTR [esi+0x72],al
11003412:	popa   
11003413:	ins    DWORD PTR es:[edi],dx
11003414:	gs ja  0x11003486
11003417:	jb     0x11003484
11003419:	and    BYTE PTR [eax+ecx*1],dh
1100341c:	add    DWORD PTR [eax],eax
1100341e:	or     BYTE PTR [eax],al
11003420:	add    BYTE PTR [eax],al
11003422:	add    BYTE PTR [eax],al
11003424:	and    BYTE PTR [ecx],al
11003426:	or     esp,DWORD PTR [edx]
11003428:	cmp    eax,0x4a41413d
1100342d:	inc    edx
1100342e:	dec    esp
1100342f:	inc    ebx
11003430:	dec    esi
11003431:	dec    ecx
11003432:	inc    esp
11003433:	push   eax
11003434:	inc    esi
11003435:	dec    ebx
11003436:	dec    edx
11003437:	dec    ebx
11003438:	dec    esp
11003439:	dec    ebx
1100343a:	push   eax
1100343b:	push   ebx
1100343c:	pop    ecx
1100343d:	push   edx
1100343e:	pop    edx
1100343f:	and    esp,DWORD PTR [eiz*1+0x20282726]
11003446:	add    DWORD PTR [eax],eax
11003448:	pop    ss
11003449:	xor    DWORD PTR [eax],esi
1100344b:	xor    esi,DWORD PTR [edx]
1100344d:	cmp    dh,BYTE PTR [ecx]
1100344f:	cmp    dh,BYTE PTR [eax]
11003451:	cmp    dh,BYTE PTR [esi+ebp*1]
11003454:	cmp    DWORD PTR [esi],ebp
11003456:	xor    dh,BYTE PTR [eax]
11003458:	xor    BYTE PTR [eax],dh
1100345a:	xor    dh,BYTE PTR cs:[ecx+edi*1]
1100345e:	xor    DWORD PTR [eax],edi
11003460:	add    BYTE PTR [eax],al
11003462:	add    BYTE PTR [eax],al
11003464:	add    BYTE PTR [eax],al
11003466:	add    al,0x7
11003468:	add    DWORD PTR [edx],edx
1100346a:	cmp    eax,0xe040707
1100346f:	adc    cl,BYTE PTR [ebp+0x8]
11003472:	or     BYTE PTR [ecx],cl
11003474:	pop    es
11003475:	push   es
11003476:	push   cs
11003477:	push   cs
11003478:	push   cs
11003479:	sbb    eax,0x408080e
1100347e:	pop    es
1100347f:	add    cl,BYTE PTR [eax]
11003481:	or     BYTE PTR [ebx],al
11003483:	pop    es
11003484:	add    DWORD PTR [eax],ecx
11003486:	or     DWORD PTR [edi],eax
11003488:	add    eax,0x79127512
1100348d:	or     DWORD PTR [ecx],ecx
1100348f:	or     ch,ch
11003491:	add    DWORD PTR [eax],eax
11003493:	add    dh,cl
11003495:	retf   0xbeef
11003498:	add    DWORD PTR [eax],eax
1100349a:	add    BYTE PTR [eax],al
1100349c:	xchg   ecx,eax
1100349d:	add    BYTE PTR [eax],al
1100349f:	add    BYTE PTR [ebx+edx*2+0x79],ch
110034a3:	jae    0x11003519
110034a5:	gs ins DWORD PTR es:[edi],dx
110034a7:	cs push edx
110034a9:	gs jae 0x1100351b
110034ac:	jne    0x11003520
110034ae:	arpl   WORD PTR [ebp+0x73],sp
110034b1:	cs push edx
110034b3:	gs jae 0x11003525
110034b6:	jne    0x1100352a
110034b8:	arpl   WORD PTR [ebp+0x52],sp
110034bb:	gs popa 
110034bd:	fs gs jb 0x110034ed
110034c1:	and    BYTE PTR [ebp+0x73],ch
110034c4:	arpl   WORD PTR [edi+0x72],bp
110034c7:	ins    BYTE PTR es:[edi],dx
110034c8:	imul   esp,DWORD PTR [edx+0x2c],0x72655620
110034cf:	jae    0x1100353a
110034d1:	outs   dx,DWORD PTR ds:[esi]
110034d2:	outs   dx,BYTE PTR ds:[esi]
110034d3:	cmp    eax,0x2e302e34
110034d8:	xor    BYTE PTR [esi],ch
110034da:	xor    BYTE PTR [eax+eiz*1],ch
110034dd:	inc    ebx
110034de:	jne    0x1100354c
110034e0:	je     0x11003557
110034e2:	jb     0x11003549
110034e4:	cmp    eax,0x7475656e
110034e9:	jb     0x1100354c
110034eb:	ins    BYTE PTR es:[edi],dx
110034ec:	sub    al,0x20
110034ee:	push   eax
110034ef:	jne    0x11003553
110034f1:	ins    BYTE PTR es:[edi],dx
110034f2:	imul   esp,DWORD PTR [ebx+0x4b],0x6f547965
110034f9:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
110034fd:	bound  esi,QWORD PTR [edi]
110034ff:	aaa    
11003500:	popa   
11003501:	xor    eax,0x31363563
11003506:	cmp    DWORD PTR [ebx],esi
11003508:	xor    al,0x65
1100350a:	xor    BYTE PTR [eax],bh
1100350c:	cmp    DWORD PTR [ebx],esp
1100350e:	push   ebx
1100350f:	jns    0x11003584
11003511:	je     0x11003578
11003513:	ins    DWORD PTR es:[edi],dx
11003514:	cs push edx
11003516:	gs jae 0x11003588
11003519:	jne    0x1100358d
1100351b:	arpl   WORD PTR [ebp+0x73],sp
1100351e:	cs push edx
11003520:	jne    0x11003590
11003522:	je     0x1100358d
11003524:	ins    DWORD PTR es:[edi],dx
11003525:	gs push edx
11003527:	gs jae 0x11003599
1100352a:	jne    0x1100359e
1100352c:	arpl   WORD PTR [ebp+0x53],sp
1100352f:	gs je  0x11003534
11003532:	add    BYTE PTR [eax],al
11003534:	add    BYTE PTR [eax+eax*1],al
11003537:	add    BYTE PTR [eax],al
11003539:	add    BYTE PTR [eax],al
1100353b:	add    BYTE PTR [eax],al
1100353d:	push   eax
1100353e:	inc    ecx
1100353f:	inc    esp
11003540:	push   eax
11003541:	inc    ecx
11003542:	inc    esp
11003543:	push   eax
11003544:	out    0x39,al
11003546:	scas   al,BYTE PTR es:[edi]
11003547:	lahf   
11003548:	lds    eax,FWORD PTR [esi-0x23b9ef51]
1100354e:	leave  
1100354f:	add    DWORD PTR ss:[eax+0x7d],esi
11003553:	cmp    ah,BYTE PTR [edi+0x0]
11003556:	add    BYTE PTR [eax],al
11003558:	daa    
11003559:	add    BYTE PTR [eax],al
1100355b:	add    BYTE PTR [eax+0x0],cl
1100355e:	add    BYTE PTR [eax],al
11003560:	add    BYTE PTR [eax],al
11003562:	add    BYTE PTR [eax],al
11003564:	push   edx
11003565:	add    DWORD PTR [eax],eax
11003567:	add    BYTE PTR [edx],ah
11003569:	dec    ebp
1100356a:	add    BYTE PTR [ebx+0x0],dl
1100356d:	inc    edi
1100356e:	add    BYTE PTR [edi+0x0],bl
11003571:	inc    ebx
11003572:	add    BYTE PTR [ecx+0x0],al
11003575:	dec    esi
11003576:	add    BYTE PTR [eax+eax*1+0x5f],dl
1100357a:	add    BYTE PTR [esi+0x0],al
1100357d:	dec    ecx
1100357e:	add    BYTE PTR [esi+0x0],cl
11003581:	inc    esp
11003582:	add    BYTE PTR [edi+0x0],bl
11003585:	inc    ecx
11003586:	add    BYTE PTR [ebx+0x0],dl
11003589:	dec    ebp
1100358a:	add    BYTE PTR [eax],al
1100358c:	add    BYTE PTR [eax],al
1100358e:	add    BYTE PTR [ecx*2+0x47005300],bl
11003595:	add    BYTE PTR [edi+0x0],bl
11003598:	inc    ebx
11003599:	add    BYTE PTR [eax+eax*1+0x49],cl
1100359d:	add    BYTE PTR [edi+0x0],bl
110035a0:	dec    eax
110035a1:	add    BYTE PTR [ebp+0x0],al
110035a4:	inc    ecx
110035a5:	add    BYTE PTR [eax+eax*1+0x45],al
110035a9:	add    BYTE PTR [edx+0x0],dl
110035ac:	sbb    al,BYTE PTR [eax]
110035ae:	add    BYTE PTR [eax],al
110035b0:	sbb    cl,BYTE PTR [ebp+0x0]
110035b3:	push   ebx
110035b4:	add    BYTE PTR [edi+0x0],al
110035b7:	pop    edi
110035b8:	add    BYTE PTR [ebx+0x0],al
110035bb:	dec    edi
110035bc:	add    BYTE PTR [eax+0x0],dl
110035bf:	pop    ecx
110035c0:	add    BYTE PTR [edx+0x0],dl
110035c3:	dec    ecx
110035c4:	add    BYTE PTR [edi+0x0],al
110035c7:	dec    eax
110035c8:	add    BYTE PTR [eax+eax*1+0x36],dl
110035cc:	add    BYTE PTR [eax],al
110035ce:	add    BYTE PTR [edx],dl
110035d0:	dec    ebp
110035d1:	add    BYTE PTR [ebx+0x0],dl
110035d4:	inc    edi
110035d5:	add    BYTE PTR [edi+0x0],bl
110035d8:	push   ebp
110035d9:	add    BYTE PTR [ebx+0x0],dl
110035dc:	inc    ecx
110035dd:	add    BYTE PTR [edi+0x0],al
110035e0:	inc    ebp
110035e1:	add    BYTE PTR [ebp+0x0],ah
110035e4:	add    BYTE PTR [eax],al
110035e6:	add    DWORD PTR [eax],ebx
110035e8:	inc    ebx
110035e9:	popa   
110035ea:	outs   dx,BYTE PTR ds:[esi]
110035eb:	outs   dx,BYTE PTR ds:[esi]
110035ec:	outs   dx,DWORD PTR ds:[esi]
110035ed:	je     0x1100360f
110035ef:	imul   bp,WORD PTR [esi+0x64],0x6120
110035f5:	jae    0x1100366a
110035f7:	gs ins DWORD PTR es:[edi],dx
110035f9:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
110035fd:	jnp    0x1100362f
110035ff:	jge    0x11003602
11003601:	sbb    dl,BYTE PTR [ecx+eiz*2+0x6d]
11003605:	jo     0x1100366c
11003607:	jb     0x11003629
11003609:	push   esp
1100360a:	gs jae 0x11003681
1100360d:	gs jb  0x1100363e
11003610:	and    BYTE PTR [esi+0x65],dl
11003613:	jb     0x11003688
11003615:	imul   ebp,DWORD PTR [edi+0x6e],0x7d307b20
1100361c:	add    DWORD PTR ds:0x79706f43,ebp
11003622:	jb     0x1100368d
11003624:	addr16 push 0x30322074
1100362a:	xor    BYTE PTR [edi],dh
1100362c:	sub    eax,0x32313032
11003631:	and    BYTE PTR [eax+0x72],dl
11003634:	gs inc ebp
11003636:	ins    DWORD PTR es:[edi],dx
11003637:	jo     0x110036ad
11003639:	imul   esi,DWORD PTR [esi+0x65],0x6c6f5320
11003640:	jne    0x110036b6
11003642:	imul   ebp,DWORD PTR [edi+0x6e],0x4c202c73
11003649:	dec    esp
1100364a:	inc    ebx
1100364b:	add    DWORD PTR [edx*2+0x65676173],esi
11003652:	cmp    ah,BYTE PTR [eax]
11003654:	je     0x110036b7
11003656:	ins    DWORD PTR es:[edi],dx
11003657:	jo     0x110036be
11003659:	jb     0x110036cf
1100365b:	gs jae 0x110036d2
1100365e:	gs jb  0x11003681
11003661:	cmp    al,0x66
11003663:	imul   ebp,DWORD PTR [ebp+eiz*2+0x5f],0x656d616e
1100366b:	and    BYTE PTR ds:[ebx+0x64],bl
1100366f:	gs jae 0x110036e6
11003672:	imul   ebp,DWORD PTR [esi+0x61],0x6e6f6974
11003679:	and    BYTE PTR [esi+0x6f],ah
1100367c:	ins    BYTE PTR es:[edi],dx
1100367d:	fs gs jb 0x110036de
11003681:	add    BYTE PTR [eax],al
11003683:	add    BYTE PTR [esi+esi*1+0x0],ch
1100368a:	add    BYTE PTR [eax],al
1100368c:	add    BYTE PTR [eax],al
1100368e:	add    BYTE PTR [eax],al
11003690:	into   
11003691:	add    BYTE PTR ss:[eax],al
11003694:	add    BYTE PTR [eax],ah
	...
110036aa:	add    BYTE PTR [eax],al
110036ac:	shl    BYTE PTR [esi],0x0
	...
110036bf:	add    BYTE PTR [eax],al
110036c1:	add    BYTE PTR [edi+0x43],bl
110036c4:	outs   dx,DWORD PTR ds:[esi]
110036c5:	jb     0x1100370c
110036c7:	js     0x1100372e
110036c9:	dec    ebp
110036ca:	popa   
110036cb:	imul   ebp,DWORD PTR [esi+0x0],0x6f63736d
110036d2:	jb     0x11003739
110036d4:	gs cs fs ins BYTE PTR es:[edi],dx
110036d8:	ins    BYTE PTR es:[edi],dx
110036d9:	add    BYTE PTR [eax],al
110036db:	add    BYTE PTR [eax],al
110036dd:	add    bh,bh
110036df:	and    eax,0x11002000

Disassembly of section .rsrc:

11004000 <.rsrc>:
	...
1100400c:	add    BYTE PTR [eax],al
1100400e:	add    al,0x0
11004010:	add    eax,DWORD PTR [eax]
11004012:	add    BYTE PTR [eax],al
11004014:	xor    BYTE PTR [eax],al
11004016:	add    BYTE PTR [eax+0xe],al
1100401c:	fadd   DWORD PTR [eax]
1100401e:	add    BYTE PTR [eax+0x10],al
11004024:	lock add BYTE PTR [eax],al
11004027:	sbb    BYTE PTR [eax],0x0
1100402a:	add    BYTE PTR [eax],al
1100402c:	or     BYTE PTR [ecx],al
1100402e:	add    BYTE PTR [eax+0x0],al
	...
1100403c:	add    BYTE PTR [eax],al
1100403e:	adc    eax,DWORD PTR [eax]
11004040:	add    al,BYTE PTR [eax]
11004042:	add    BYTE PTR [eax],al
11004044:	and    BYTE PTR [ecx],al
11004046:	add    BYTE PTR [eax+0x3],al
1100404c:	cmp    BYTE PTR [ecx],al
1100404e:	add    BYTE PTR [eax+0x4],al
11004054:	push   eax
11004055:	add    DWORD PTR [eax],eax
11004057:	add    BYTE PTR ds:0x68000000,0x1
1100405e:	add    BYTE PTR [eax+0x6],al
11004064:	add    BYTE PTR [ecx],0x0
11004067:	add    BYTE PTR [edi],0x0
1100406a:	add    BYTE PTR [eax],al
1100406c:	cwde   
1100406d:	add    DWORD PTR [eax],eax
1100406f:	or     BYTE PTR [eax],0x0
11004072:	add    BYTE PTR [eax],al
11004074:	mov    al,0x1
11004076:	add    BYTE PTR [eax+0x9],al
1100407c:	enter  0x1,0x80
11004080:	or     al,BYTE PTR [eax]
11004082:	add    BYTE PTR [eax],al
11004084:	loopne 0x11004087
11004086:	add    BYTE PTR [eax+0xb],al
1100408c:	clc    
1100408d:	add    DWORD PTR [eax],eax
1100408f:	or     BYTE PTR [eax+eax*1],0x0
11004093:	add    BYTE PTR [eax],dl
11004095:	add    al,BYTE PTR [eax]
11004097:	or     BYTE PTR ds:0x28000000,0x2
1100409e:	add    BYTE PTR [eax+0xe],al
110040a4:	inc    eax
110040a5:	add    al,BYTE PTR [eax]
110040a7:	or     BYTE PTR [edi],0x0
110040aa:	add    BYTE PTR [eax],al
110040ac:	pop    eax
110040ad:	add    al,BYTE PTR [eax]
110040af:	adc    BYTE PTR [eax],0x0
110040b2:	add    BYTE PTR [eax],al
110040b4:	jo     0x110040b8
110040b6:	add    BYTE PTR [eax+0x11],al
110040bc:	mov    BYTE PTR [edx],al
110040be:	add    BYTE PTR [eax+0x12],al
110040c4:	mov    al,ds:0x13800002
110040c9:	add    BYTE PTR [eax],al
110040cb:	add    BYTE PTR [eax+0x14800002],bh
110040d1:	add    BYTE PTR [eax],al
110040d3:	add    al,dl
110040d5:	add    al,BYTE PTR [eax]
110040d7:	add    BYTE PTR [eax],0x0
	...
110040e6:	add    DWORD PTR [eax],eax
110040e8:	add    BYTE PTR [edi+0x0],bh
110040eb:	add    al,ch
110040ed:	add    al,BYTE PTR [eax]
110040ef:	add    BYTE PTR [eax],0x0
	...
110040fe:	add    DWORD PTR [eax],eax
11004100:	add    DWORD PTR [eax],eax
11004102:	add    BYTE PTR [eax],al
11004104:	add    BYTE PTR [ebx],al
11004106:	add    BYTE PTR [eax+0x0],al
	...
11004114:	add    BYTE PTR [eax],al
11004116:	add    DWORD PTR [eax],eax
11004118:	add    DWORD PTR [eax],eax
1100411a:	add    BYTE PTR [eax],al
1100411c:	sbb    BYTE PTR [ebx],al
1100411e:	add    BYTE PTR [eax+0x0],al
	...
1100412c:	add    BYTE PTR [eax],al
1100412e:	add    DWORD PTR [eax],eax
11004130:	add    BYTE PTR [eax],al
11004132:	add    BYTE PTR [eax],al
11004134:	xor    BYTE PTR [ebx],al
	...
11004146:	add    DWORD PTR [eax],eax
11004148:	add    BYTE PTR [eax],al
1100414a:	add    BYTE PTR [eax],al
1100414c:	inc    eax
1100414d:	add    eax,DWORD PTR [eax]
	...
1100415b:	add    BYTE PTR [eax],al
1100415d:	add    BYTE PTR [ecx],al
1100415f:	add    BYTE PTR [eax],al
11004161:	add    BYTE PTR [eax],al
11004163:	add    BYTE PTR [eax+0x3],dl
	...
11004176:	add    DWORD PTR [eax],eax
11004178:	add    BYTE PTR [eax],al
1100417a:	add    BYTE PTR [eax],al
1100417c:	pusha  
1100417d:	add    eax,DWORD PTR [eax]
	...
1100418b:	add    BYTE PTR [eax],al
1100418d:	add    BYTE PTR [ecx],al
1100418f:	add    BYTE PTR [eax],al
11004191:	add    BYTE PTR [eax],al
11004193:	add    BYTE PTR [eax+0x3],dh
	...
110041a6:	add    DWORD PTR [eax],eax
110041a8:	add    BYTE PTR [eax],al
110041aa:	add    BYTE PTR [eax],al
110041ac:	add    BYTE PTR [ebx],0x0
	...
110041bb:	add    BYTE PTR [eax],al
110041bd:	add    BYTE PTR [ecx],al
110041bf:	add    BYTE PTR [eax],al
110041c1:	add    BYTE PTR [eax],al
110041c3:	add    BYTE PTR [eax+0x3],dl
	...
110041d5:	add    BYTE PTR [ecx],al
110041d7:	add    BYTE PTR [eax],al
110041d9:	add    BYTE PTR [eax],al
110041db:	add    BYTE PTR [eax+0x3],ah
	...
110041ed:	add    BYTE PTR [ecx],al
110041ef:	add    BYTE PTR [eax],al
110041f1:	add    BYTE PTR [eax],al
110041f3:	add    BYTE PTR [eax+0x3],dh
	...
11004205:	add    BYTE PTR [ecx],al
11004207:	add    BYTE PTR [eax],al
11004209:	add    BYTE PTR [eax],al
1100420b:	add    al,al
1100420d:	add    eax,DWORD PTR [eax]
	...
1100421b:	add    BYTE PTR [eax],al
1100421d:	add    BYTE PTR [ecx],al
1100421f:	add    BYTE PTR [eax],al
11004221:	add    BYTE PTR [eax],al
11004223:	add    al,dl
11004225:	add    eax,DWORD PTR [eax]
	...
11004233:	add    BYTE PTR [eax],al
11004235:	add    BYTE PTR [ecx],al
11004237:	add    BYTE PTR [eax],al
11004239:	add    BYTE PTR [eax],al
1100423b:	add    al,ah
1100423d:	add    eax,DWORD PTR [eax]
	...
1100424b:	add    BYTE PTR [eax],al
1100424d:	add    BYTE PTR [ecx],al
1100424f:	add    BYTE PTR [eax],al
11004251:	add    BYTE PTR [eax],al
11004253:	add    al,dh
11004255:	add    eax,DWORD PTR [eax]
	...
11004263:	add    BYTE PTR [eax],al
11004265:	add    BYTE PTR [ecx],al
11004267:	add    BYTE PTR [eax],al
11004269:	add    BYTE PTR [eax],al
1100426b:	add    BYTE PTR [eax],al
1100426d:	add    al,0x0
	...
1100427b:	add    BYTE PTR [eax],al
1100427d:	add    BYTE PTR [ecx],al
1100427f:	add    BYTE PTR [eax],al
11004281:	add    BYTE PTR [eax],al
11004283:	add    BYTE PTR [eax],dl
11004285:	add    al,0x0
	...
11004293:	add    BYTE PTR [eax],al
11004295:	add    BYTE PTR [ecx],al
11004297:	add    BYTE PTR [eax],al
11004299:	add    BYTE PTR [eax],al
1100429b:	add    BYTE PTR [eax],ah
1100429d:	add    al,0x0
	...
110042ab:	add    BYTE PTR [eax],al
110042ad:	add    BYTE PTR [ecx],al
110042af:	add    BYTE PTR [eax],al
110042b1:	add    BYTE PTR [eax],al
110042b3:	add    BYTE PTR [eax],dh
110042b5:	add    al,0x0
	...
110042c3:	add    BYTE PTR [eax],al
110042c5:	add    BYTE PTR [ecx],al
110042c7:	add    BYTE PTR [eax],al
110042c9:	add    BYTE PTR [eax],al
110042cb:	add    BYTE PTR [eax+0x4],al
	...
110042de:	add    DWORD PTR [eax],eax
110042e0:	add    BYTE PTR [eax],al
110042e2:	add    BYTE PTR [eax],al
110042e4:	push   eax
110042e5:	add    al,0x0
	...
110042f3:	add    BYTE PTR [eax],al
110042f5:	add    BYTE PTR [ecx],al
110042f7:	add    BYTE PTR [eax],al
110042f9:	add    BYTE PTR [eax],al
110042fb:	add    BYTE PTR [eax+0x4],ah
	...
1100430e:	add    DWORD PTR [eax],eax
11004310:	add    BYTE PTR [eax],al
11004312:	add    BYTE PTR [eax],al
11004314:	jo     0x1100431a
	...
11004326:	add    DWORD PTR [eax],eax
11004328:	add    BYTE PTR [eax],al
1100432a:	add    BYTE PTR [eax],al
1100432c:	add    BYTE PTR [eax+eax*1],0x0
11004330:	nop
11004331:	inc    esp
11004332:	add    BYTE PTR [eax],al
11004334:	push   0xa
11004339:	add    BYTE PTR [eax],al
1100433b:	add    BYTE PTR [eax],al
1100433d:	add    BYTE PTR [eax],al
1100433f:	add    al,bh
11004341:	dec    esi
11004342:	add    BYTE PTR [eax],al
11004344:	push   0x6
11004349:	add    BYTE PTR [eax],al
1100434b:	add    BYTE PTR [eax],al
1100434d:	add    BYTE PTR [eax],al
1100434f:	add    BYTE PTR [eax+0x55],ah
11004352:	add    BYTE PTR [eax],al
11004354:	enter  0x4,0x0
	...
11004360:	sub    BYTE PTR [edx+0x0],bl
11004363:	add    al,ch
11004365:	add    al,BYTE PTR [eax]
	...
1100436f:	add    BYTE PTR [eax],dl
11004371:	pop    ebp
11004372:	add    BYTE PTR [eax],al
11004374:	call   0x1100437a
11004379:	add    BYTE PTR [eax],al
1100437b:	add    BYTE PTR [eax],al
1100437d:	add    BYTE PTR [eax],al
1100437f:	add    al,bh
11004381:	pop    esi
11004382:	add    BYTE PTR [eax],al
11004384:	sub    BYTE PTR [ecx],al
	...
1100438e:	add    BYTE PTR [eax],al
11004390:	and    BYTE PTR [eax+0x0],ah
11004393:	add    BYTE PTR [eax],ch
11004395:	push   ss
	...
1100439e:	add    BYTE PTR [eax],al
110043a0:	dec    eax
110043a1:	jbe    0x110043a3
110043a3:	add    BYTE PTR [eax+0xe],ch
110043a9:	add    BYTE PTR [eax],al
110043ab:	add    BYTE PTR [eax],al
110043ad:	add    BYTE PTR [eax],al
110043af:	add    al,dh
110043b1:	test   BYTE PTR [eax],al
110043b3:	add    BYTE PTR [eax+0xb],ch
110043b9:	add    BYTE PTR [eax],al
110043bb:	add    BYTE PTR [eax],al
110043bd:	add    BYTE PTR [eax],al
110043bf:	add    BYTE PTR [eax-0x57ffff70],bl
110043c5:	or     BYTE PTR [eax],al
	...
110043cf:	add    BYTE PTR [eax-0x67],al
110043d2:	add    BYTE PTR [eax],al
110043d4:	enter  0x6,0x0
	...
110043e0:	or     BYTE PTR [eax+0x5680000],ah
	...
110043ee:	add    BYTE PTR [eax],al
110043f0:	jo     0x11004397
110043f2:	add    BYTE PTR [eax],al
110043f4:	mov    es,WORD PTR ss:[eax]
	...
110043ff:	add    BYTE PTR [eax+0x28000133],ch
11004405:	inc    edx
	...
1100440e:	add    BYTE PTR [eax],al
11004410:	shl    BYTE PTR [ebp+0x1],1
11004413:	add    BYTE PTR [eax+0x25],ch
11004419:	add    BYTE PTR [eax],al
1100441b:	add    BYTE PTR [eax],al
1100441d:	add    BYTE PTR [eax],al
1100441f:	add    BYTE PTR [eax-0x65],bh
11004422:	add    DWORD PTR [eax],eax
11004424:	push   0x1a
11004429:	add    BYTE PTR [eax],al
1100442b:	add    BYTE PTR [eax],al
1100442d:	add    BYTE PTR [eax],al
1100442f:	add    al,ah
11004431:	mov    ch,0x1
11004433:	add    BYTE PTR [eax+0x10],ch
11004439:	add    BYTE PTR [eax],al
1100443b:	add    BYTE PTR [eax],al
1100443d:	add    BYTE PTR [eax],al
1100443f:	add    BYTE PTR [eax-0x77fffe3a],cl
11004445:	or     DWORD PTR [eax],eax
	...
1100444f:	add    BYTE PTR [eax],dl
11004451:	rol    BYTE PTR [ecx],1
11004453:	add    BYTE PTR [eax+0x4],ch
	...
1100445e:	add    BYTE PTR [eax],al
11004460:	js     0x11004436
11004462:	add    DWORD PTR [eax],eax
11004464:	adc    BYTE PTR [ecx],al
	...
1100446e:	add    BYTE PTR [eax],al
11004470:	mov    ch,dl
11004472:	add    DWORD PTR [eax],eax
11004474:	push   esp
11004475:	add    eax,DWORD PTR [eax]
	...
1100447f:	add    al,ah
11004481:	fadd   DWORD PTR [ecx]
11004483:	add    dl,ch
11004485:	add    DWORD PTR [eax],eax
	...
1100448f:	add    BYTE PTR [eax],ch
11004491:	add    BYTE PTR [eax],al
11004493:	add    BYTE PTR [eax+0x0],al
11004496:	add    BYTE PTR [eax],al
11004498:	add    BYTE PTR [eax],0x0
1100449b:	add    BYTE PTR [ecx],al
1100449d:	add    BYTE PTR [eax+eax*1],al
	...
110044bc:	add    BYTE PTR [eax],al
110044be:	add    BYTE PTR [eax],0x0
110044c1:	add    BYTE PTR [eax],0x0
110044c4:	add    BYTE PTR [eax+0x800080],al
110044ca:	add    BYTE PTR [eax],al
110044cc:	add    BYTE PTR [eax],0x80
110044cf:	add    BYTE PTR [eax-0x7fffff80],al
110044d5:	add    BYTE PTR [eax-0x1000000],0x0
110044dc:	add    bh,bh
110044de:	add    BYTE PTR [eax],al
110044e0:	add    bh,bh
110044e2:	inc    DWORD PTR [eax]
110044e4:	inc    DWORD PTR [eax]
110044e6:	add    BYTE PTR [eax],al
110044e8:	inc    DWORD PTR [eax]
110044ea:	inc    DWORD PTR [eax]
110044ec:	(bad)  
110044ed:	inc    DWORD PTR [eax]
110044ef:	add    al,al
110044f1:	rol    al,0x0
110044f4:	(bad)  
110044f5:	(bad)  
110044f6:	inc    DWORD PTR [eax]
	...
11004568:	inc    eax
	...
11004585:	add    BYTE PTR [eax],al
11004587:	outs   dx,DWORD PTR ds:[esi]
11004588:	repnz add BYTE PTR [eax],al
	...
110045a3:	add    BYTE PTR [eax],al
110045a5:	add    BYTE PTR [ecx],al
110045a7:	(bad)  
110045a8:	inc    DWORD PTR [eax+0x0]
	...
110045c3:	add    BYTE PTR [eax],al
110045c5:	add    BYTE PTR [edi-0x1],cl
110045c8:	push   eax
	...
110045e2:	add    BYTE PTR [eax],al
110045e4:	add    BYTE PTR [edx],al
110045e6:	(bad)  
110045e7:	(bad)  
110045e8:	(bad)  
110045e9:	inc    DWORD PTR [eax+0x0]
	...
11004604:	add    BYTE PTR [edi-0x1],cl
11004607:	(bad)  
11004608:	(bad)  
11004609:	push   eax
	...
1100461b:	add    BYTE PTR [eax],al
1100461d:	add    BYTE PTR [eax+0x4],al
11004620:	add    BYTE PTR [eax+0x0],al
11004623:	add    BYTE PTR [esi],al
11004625:	(bad)  
11004626:	(bad)  
11004627:	(bad)  
11004628:	(bad)  
11004629:	(bad)  
1100462a:	inc    DWORD PTR [eax+eax*1]
1100462d:	add    BYTE PTR [eax],al
1100462f:	add    BYTE PTR [eax],al
11004631:	add    al,0x0
11004633:	inc    eax
	...
1100463c:	add    dh,bl
1100463e:	fidivr WORD PTR [ebp+0x77]
11004641:	ja     0x11004687
11004643:	add    BYTE PTR [edi],cl
11004645:	(bad)  
11004646:	(bad)  
11004647:	(bad)  
11004648:	(bad)  
11004649:	(bad)  
1100464a:	push   edx
1100464c:	add    BYTE PTR [ebx+ebp*2],al
1100464f:	outs   dx,BYTE PTR ds:[esi]
11004650:	mov    esi,0x77db
	...
1100465d:	jnp    0x1100464a
1100465f:	jnp    0x110046d5
11004661:	inc    esp
11004662:	add    BYTE PTR [ecx],al
11004664:	(bad)  
11004665:	(bad)  
11004666:	(bad)  
11004667:	(bad)  
11004668:	(bad)  
11004669:	(bad)  
1100466a:	(bad)  
1100466b:	jmp    DWORD PTR [eax+0x0]
1100466e:	gs ja  0x1100462f
11004671:	mov    esi,0x40ee
11004676:	add    BYTE PTR [eax],al
11004678:	add    BYTE PTR [eax],al
1100467a:	add    BYTE PTR [eax],al
1100467c:	add    bl,ch
1100467e:	in     eax,dx
1100467f:	ja     0x110046e8
11004681:	pusha  
11004682:	add    BYTE PTR [edi-0x1],ch
11004685:	(bad)  
11004686:	(bad)  
11004687:	(bad)  
11004688:	(bad)  
11004689:	(bad)  
1100468a:	(bad)  
1100468b:	push   esi
1100468d:	add    BYTE PTR [edx],al
1100468f:	inc    esi
11004690:	outs   dx,BYTE PTR ds:[esi]
11004691:	mov    ebp,0xb7
11004696:	add    BYTE PTR [eax],al
11004698:	add    BYTE PTR [eax],al
1100469a:	add    BYTE PTR [eax],al
1100469c:	add    ch,ch
1100469e:	jnp    0x1100471b
110046a0:	add    BYTE PTR fs:[esi],al
110046a3:	(bad)  
110046a4:	(bad)  
110046a5:	(bad)  
110046a6:	(bad)  
110046a7:	(bad)  
110046a8:	(bad)  
110046a9:	(bad)  
110046aa:	(bad)  
110046ab:	(bad)  
110046ac:	inc    DWORD PTR [eax]
110046ae:	add    al,0x47
110046b0:	push   edi
110046b1:	mov    esi,0x4077
110046b6:	add    BYTE PTR [eax],al
110046b8:	add    BYTE PTR [eax],al
110046ba:	add    BYTE PTR [eax],al
110046bc:	add    BYTE PTR [esi+0x477b7],bh
110046c2:	ud0    edi,edi
110046c5:	(bad)  
110046c6:	(bad)  
110046c7:	(bad)  
110046c8:	(bad)  
110046c9:	(bad)  
110046ca:	(bad)  
110046cb:	(bad)  
110046cc:	push   ecx
110046ce:	add    BYTE PTR [edx],al
110046d0:	inc    esi
110046d1:	jnp    0x110046aa
	...
110046db:	add    BYTE PTR [eax],al
110046dd:	jge    0x11004753
110046df:	and    BYTE PTR fs:[ecx],al
110046e2:	(bad)  
110046e3:	(bad)  
110046e4:	(bad)  
110046e5:	(bad)  
110046e6:	(bad)  
110046e7:	(bad)  
110046e8:	(bad)  
110046e9:	(bad)  
110046ea:	(bad)  
110046eb:	(bad)  
110046ec:	(bad)  
110046ed:	jmp    DWORD PTR [eax+0x4]
110046f0:	inc    edi
110046f1:	inc    edi
110046f2:	jle    0x110046f4
	...
110046fc:	add    BYTE PTR [edi+0x4f004067],dh
11004702:	(bad)  
11004703:	(bad)  
11004704:	(bad)  
11004705:	(bad)  
11004706:	out    dx,al
11004707:	jmp    0x110046ee
11004709:	fsubp  st(7),st
1100470b:	(bad)  
1100470c:	(bad)  
1100470d:	push   eax
1100470f:	add    BYTE PTR [esi],dl
11004711:	inc    esi
11004712:	mov    bh,0x0
	...
1100471c:	add    BYTE PTR [edi+0x44],dh
1100471f:	add    BYTE PTR [edi+edi*8],al
11004722:	(bad)  
11004723:	(bad)  
11004724:	std    
11004725:	jmp    0x110047a2
11004727:	fstp   TBYTE PTR [ebx-0x2b]
1100472a:	mov    esi,0xffffffef
1100472f:	inc    eax
11004730:	add    BYTE PTR [ebp+0x67],ah
	...
1100473b:	add    BYTE PTR [eax],al
1100473d:	gs pusha 
1100473f:	add    al,0xf
11004741:	(bad)  
11004742:	(bad)  
11004743:	(bad)  
11004744:	jmp    0x1100471d
11004746:	mov    esi,0xb7bdbebe
1100474b:	imul   ebp,edi,0xffffffff
1100474e:	push   esi
11004750:	add    BYTE PTR [edi],al
11004752:	inc    edi
	...
1100475b:	add    BYTE PTR [eax],al
1100475d:	inc    esi
1100475e:	add    BYTE PTR [edi],al
11004760:	(bad)  
11004761:	(bad)  
11004762:	(bad)  
11004763:	jmp    0x11004750
11004765:	jmp    0x11004752
11004767:	fcmovnu st,st(3)
11004769:	jnp    0x11004756
1100476b:	fucomi st,st(3)
1100476d:	(bad)  
1100476e:	(bad)  
1100476f:	inc    DWORD PTR [eax]
11004771:	add    al,0x6
	...
1100477b:	add    BYTE PTR [eax],al
1100477d:	and    al,0x0
1100477f:	ud0    edi,edi
11004782:	out    dx,al
11004783:	mov    bh,0xeb
11004785:	jge    0x110047fe
11004787:	jmp    0x11004774
11004789:	fstp   TBYTE PTR [ebx+0x7b]
1100478c:	jge    0x1100474d
1100478e:	(bad)  
1100478f:	push   eax
11004791:	add    BYTE PTR [eax+0x0],al
	...
1100479c:	add    BYTE PTR [eax],al
1100479e:	add    edi,edi
110047a0:	(bad)  
110047a1:	(bad)  
110047a2:	mov    esi,0x7bebdbd7
110047a7:	fstp   TBYTE PTR [ebx-0x15]
110047aa:	jmp    0x11004781
110047ac:	mov    dh,0xbe
110047ae:	(bad)  
110047af:	(bad)  
110047b0:	inc    DWORD PTR [eax+0x4]
	...
110047bb:	add    BYTE PTR [eax],al
110047bd:	add    BYTE PTR [edi-0x1],cl
110047c0:	(bad)  
110047c1:	std    
110047c2:	jmp    0x110047af
110047c4:	in     eax,dx
110047c5:	jge    0x110047b2
110047c7:	out    0xeb,eax
110047c9:	(bad)  [ebp-0x25]
110047cc:	jmp    0x11004839
110047ce:	jg     0x110047cf
110047d0:	push   ebx
	...
110047da:	add    BYTE PTR [eax],al
110047dc:	add    BYTE PTR ds:0xeeffffff,al
110047e2:	ja     0x11004861
110047e4:	jmp    0x110047d1
110047e6:	jmp    0x11004863
110047e8:	fucomi st,st(3)
110047ea:	jmp    0x110047c7
110047ec:	jnp    0x1100485c
110047ee:	mov    esi,0x40ffffff
	...
110047fb:	add    BYTE PTR [eax],al
110047fd:	ud0    edi,edi
11004800:	push   DWORD PTR [edi-0x12144822]
11004806:	jge    0x110047f3
11004808:	in     eax,dx
11004809:	mov    bh,0xdb
1100480b:	jmp    0x110047f3
1100480d:	mov    bh,0xb6
1100480f:	(bad)  
11004810:	(bad)  
11004811:	jmp    edi
	...
1100481b:	add    BYTE PTR [esi],al
1100481d:	(bad)  
1100481e:	(bad)  
1100481f:	(bad)  
11004820:	(bad)  
11004821:	jge    0x1100480e
11004823:	in     eax,dx
11004824:	jmp    0x11004811
11004826:	jmp    0x11004813
11004828:	jmp    0x11004810
1100482a:	jnp    0x11004817
1100482c:	fucomi st,st(3)
1100482e:	fucomi st,st(7)
11004830:	(bad)  
11004831:	(bad)  
11004832:	inc    DWORD PTR [eax]
	...
1100483c:	pop    edi
1100483d:	(bad)  
1100483e:	(bad)  
1100483f:	(bad)  
11004840:	sti    
11004841:	jmp    0x1100482e
11004843:	jmp    0x11004832
11004845:	in     eax,dx
11004846:	int    0xeb
11004848:	fidivr WORD PTR [esi-0x48484142]
1100484e:	mov    bh,0xbf
11004850:	(bad)  
11004851:	(bad)  
11004852:	push   esp
11004854:	add    BYTE PTR [eax],al
11004856:	add    BYTE PTR [eax],al
11004858:	add    BYTE PTR [eax],al
1100485a:	add    BYTE PTR ds:0xffffffef,al
11004860:	in     eax,dx
11004861:	ja     0x11004850
11004863:	out    dx,al
11004864:	fidivr WORD PTR [esi-0x14141443]
1100486a:	jge    0x11004829
1100486c:	mov    esi,0xffdeb7bd
11004871:	(bad)  
11004872:	(bad)  
11004873:	inc    DWORD PTR [eax]
11004875:	add    BYTE PTR [eax],al
11004877:	add    BYTE PTR [eax],al
11004879:	add    BYTE PTR [eax],al
1100487b:	outs   dx,DWORD PTR ds:[esi]
1100487c:	(bad)  
1100487d:	(bad)  
1100487e:	(bad)  
1100487f:	(bad)  
11004880:	out    dx,al
11004881:	fidivr WORD PTR [esi-0x14114142]
11004887:	in     eax,dx
11004888:	jmp    0x11004868
1100488a:	mov    esi,0xb7bebdbe
1100488f:	mov    esi,0xffffffff
11004894:	repz add BYTE PTR [eax],al
11004897:	add    BYTE PTR [eax],al
11004899:	add    BYTE PTR [esi],al
1100489b:	(bad)  
1100489c:	(bad)  
1100489d:	(bad)  
1100489e:	(bad)  
1100489f:	(bad)  
110048a0:	jmp    0x1100488d
110048a2:	out    dx,al
110048a3:	fidiv  WORD PTR [edi-0x25]
110048a6:	jmp    0x11004893
110048a8:	jmp    0x11004895
110048aa:	in     eax,dx
110048ab:	mov    esi,0xbebdbebe
110048b0:	(bad)  
110048b1:	(bad)  
110048b2:	(bad)  
110048b3:	(bad)  
110048b4:	inc    DWORD PTR [eax]
110048b6:	add    BYTE PTR [eax],al
110048b8:	add    BYTE PTR [eax],al
110048ba:	pop    ds
110048bb:	(bad)  
110048bc:	(bad)  
110048bd:	(bad)  
110048be:	(bad)  
110048bf:	(bad)  
110048c0:	fsubp  st(3),st
110048c2:	out    dx,al
110048c3:	mov    esi,0xedde7e7e
110048c8:	in     eax,dx
110048c9:	jmp    0x110048b6
110048cb:	jmp    0x1100494a
110048cd:	mov    bh,0xb7
110048cf:	mov    dh,0xff
110048d1:	(bad)  
110048d2:	(bad)  
110048d3:	(bad)  
110048d4:	push   esi
110048d6:	add    BYTE PTR [eax],al
110048d8:	add    BYTE PTR [esi],al
110048da:	(bad)  
110048db:	(bad)  
110048dc:	(bad)  
110048dd:	(bad)  
110048de:	(bad)  
110048df:	(bad)  
110048e0:	jmp    0x110048cf
110048e2:	in     eax,dx
110048e3:	jle    0x110048bc
110048e5:	jge    0x1100495e
110048e7:	jnp    0x110048d4
110048e9:	jmp    0x110048d8
110048eb:	mov    esi,0xbebebeb7
110048f0:	(bad)  
110048f1:	(bad)  
110048f2:	(bad)  
110048f3:	(bad)  
110048f4:	(bad)  
110048f5:	inc    DWORD PTR [eax]
110048f7:	add    BYTE PTR [ecx],al
110048f9:	add    bh,bh
110048fb:	(bad)  
110048fc:	(bad)  
110048fd:	(bad)  
110048fe:	(bad)  
110048ff:	(bad)  
11004900:	jle    0x110048c0
11004902:	jle    0x11004982
11004904:	jle    0x11004984
11004906:	jle    0x11004986
11004908:	in     eax,dx
11004909:	jmp    0x110048f8
1100490b:	jge    0x110048f8
1100490d:	in     eax,dx
1100490e:	mov    ebp,0xffffffb7
11004913:	(bad)  
11004914:	(bad)  
11004915:	push   DWORD PTR [eax+0x0]
11004918:	add    BYTE PTR [eax],al
1100491a:	pop    ds
1100491b:	(bad)  
1100491c:	(bad)  
1100491d:	(bad)  
1100491e:	(bad)  
1100491f:	(bad)  
11004920:	in     eax,dx
11004921:	jle    0x110049a1
11004923:	out    dx,al
11004924:	fsubrp st(7),st
11004926:	xlat   BYTE PTR ds:[ebx]
11004927:	jge    0x110049a4
11004929:	jmp    0x11004916
1100492b:	jmp    0x11004918
1100492d:	fucomi st,st(3)
1100492f:	jmp    0x11004930
11004931:	(bad)  
11004932:	(bad)  
11004933:	(bad)  
11004934:	push   eax
11004936:	add    BYTE PTR [eax],al
11004938:	add    BYTE PTR [esi],al
1100493a:	add    bh,bh
1100493c:	(bad)  
1100493d:	(bad)  
1100493e:	(bad)  
1100493f:	jmp    edi
11004941:	out    dx,al
11004942:	fsubp  st(6),st
11004944:	out    dx,al
11004945:	out    dx,al
11004946:	out    dx,al
11004947:	jle    0x11004927
11004949:	in     eax,dx
1100494a:	jmp    0x11004937
1100494c:	jmp    0x11004939
1100494e:	jmp    0x11004927
11004950:	(bad)  
11004951:	(bad)  
11004952:	(bad)  
11004953:	(bad)  
11004954:	push   DWORD PTR [eax+0x0]
11004957:	add    BYTE PTR [eax],al
11004959:	add    BYTE PTR [eax],al
1100495b:	jg     0x1100495c
1100495d:	(bad)  
1100495e:	(bad)  
1100495f:	(bad)  
11004960:	out    dx,al
11004961:	fsubp  st(6),st
11004963:	in     eax,dx
11004964:	(bad)  
11004965:	fsubp  st(5),st
11004967:	ja     0x110049e0
11004969:	jnp    0x11004956
1100496b:	in     eax,dx
1100496c:	jge    0x110049eb
1100496e:	mov    esi,0xffffffbf
11004973:	push   ecx
11004975:	add    BYTE PTR [eax],al
11004977:	add    BYTE PTR [eax],al
11004979:	add    BYTE PTR [eax],al
1100497b:	add    bh,bh
1100497d:	(bad)  
1100497e:	(bad)  
1100497f:	(bad)  
11004980:	out    dx,al
11004981:	fsubp  st(6),st
11004983:	out    dx,al
11004984:	out    dx,al
11004985:	out    dx,al
11004986:	out    dx,al
11004987:	out    dx,al
11004988:	in     eax,dx
11004989:	out    dx,al
1100498a:	fidivr WORD PTR [esi-0x41424142]
11004990:	(bad)  
11004991:	(bad)  
11004992:	(bad)  
11004993:	inc    DWORD PTR [eax+0x0]
11004996:	add    BYTE PTR [eax],al
11004998:	add    BYTE PTR [eax],al
1100499a:	add    BYTE PTR [eax],al
1100499c:	jg     0x1100499d
1100499e:	(bad)  
1100499f:	(bad)  
110049a0:	(bad)  
110049a1:	out    dx,al
110049a2:	out    dx,al
110049a3:	out    dx,al
110049a4:	out    dx,al
110049a5:	out    dx,al
110049a6:	fidivr WORD PTR [ebp-0x15]
110049a9:	jmp    0x11004996
110049ab:	in     eax,dx
110049ac:	ja     0x11004a29
110049ae:	jmp    0x1100499f
110049b0:	(bad)  
110049b1:	(bad)  
110049b2:	push   ebx
	...
110049bc:	add    bh,bh
110049be:	(bad)  
110049bf:	(bad)  
110049c0:	(bad)  
110049c1:	in     eax,dx
110049c2:	out    dx,al
110049c3:	out    dx,al
110049c4:	out    dx,al
110049c5:	out    dx,al
110049c6:	out    dx,al
110049c7:	out    dx,al
110049c8:	jle    0x110049b7
110049ca:	out    dx,al
110049cb:	mov    esi,0xefbddeb7
110049d0:	(bad)  
110049d1:	(bad)  
110049d2:	inc    DWORD PTR [eax+0x0]
	...
110049dd:	outs   dx,DWORD PTR ds:[esi]
110049de:	(bad)  
110049df:	(bad)  
110049e0:	(bad)  
110049e1:	out    dx,al
110049e2:	out    dx,al
110049e3:	out    dx,eax
110049e4:	out    dx,al
110049e5:	out    dx,al
110049e6:	out    dx,al
110049e7:	out    dx,al
110049e8:	mov    esi,0xededebdb
110049ed:	jnp    0x110049da
110049ef:	(bad)  
110049f0:	(bad)  
110049f1:	push   eax
	...
110049fb:	add    BYTE PTR [eax],al
110049fd:	add    edi,edi
110049ff:	(bad)  
11004a00:	(bad)  
11004a01:	out    dx,al
11004a02:	out    dx,al
11004a03:	out    dx,al
11004a04:	(bad)  
11004a05:	out    dx,al
11004a06:	out    dx,al
11004a07:	fsubp  st(6),st
11004a09:	out    dx,al
11004a0a:	fidivr WORD PTR [esi-0x112449]
11004a10:	(bad)  
11004a11:	inc    DWORD PTR [eax+0x0]
	...
11004a1c:	add    BYTE PTR [eax+0x6e],al
11004a1f:	(bad)  
11004a20:	(bad)  
11004a21:	(bad)  
11004a22:	(bad)  
11004a23:	out    dx,eax
11004a24:	out    dx,al
11004a25:	out    dx,al
11004a26:	in     eax,dx
11004a27:	out    0xeb,eax
11004a29:	jmp    0x11004a12
11004a2b:	mov    esi,0xff7f77de
11004a30:	push   edx
	...
11004a3a:	add    BYTE PTR [eax],al
11004a3c:	add    BYTE PTR [eax-0xfd],dh
11004a42:	out    dx,al
11004a43:	out    dx,al
11004a44:	out    dx,al
11004a45:	out    dx,al
11004a46:	out    dx,al
11004a47:	jle    0x11004a36
11004a49:	out    0xd7,eax
11004a4b:	jmp    0x11004a38
11004a4d:	fdivp  st(7),st
11004a4f:	(bad)  
11004a50:	call   DWORD PTR [eax+0x47]
	...
11004a5b:	add    BYTE PTR [eax],al
11004a5d:	ja     0x11004a9f
11004a5f:	dec    edi
11004a60:	(bad)  
11004a61:	(bad)  
11004a62:	(bad)  
11004a63:	out    dx,al
11004a64:	out    dx,al
11004a65:	out    dx,al
11004a66:	out    dx,al
11004a67:	in     eax,dx
11004a68:	jmp    0x11004a51
11004a6a:	ja     0x11004ae9
11004a6c:	jmp    0x11004a5c
11004a6e:	(bad)  
11004a6f:	push   eax
11004a71:	add    bh,dl
11004a73:	inc    eax
	...
11004a7c:	add    bh,dl
11004a7e:	rol    BYTE PTR ds:0xeeffffff,1
11004a84:	fsubp  st(6),st
11004a86:	fsubrp st(7),st
11004a88:	in     eax,dx
11004a89:	ja     0x11004a69
11004a8b:	mov    ebp,0xffffffee
11004a90:	jo     0x11004ad9
11004a92:	mov    esi,0x0
11004a97:	add    BYTE PTR [eax],al
11004a99:	add    BYTE PTR [eax],al
11004a9b:	add    BYTE PTR [eax],al
11004a9d:	jnp    0x11004a8a
11004a9f:	add    al,0xf
11004aa1:	(bad)  
11004aa2:	(bad)  
11004aa3:	(bad)  
11004aa4:	out    dx,al
11004aa5:	out    dx,al
11004aa6:	out    0xeb,eax
11004aa8:	out    dx,al
11004aa9:	ja     0x11004b22
11004aab:	mov    esi,0xf1ffffef
11004ab0:	add    BYTE PTR [esi+0x7b],bh
11004ab6:	add    BYTE PTR [eax],al
11004ab8:	add    BYTE PTR [eax],al
11004aba:	add    BYTE PTR [eax],al
11004abc:	add    al,0xeb
11004abe:	in     eax,dx
11004abf:	loopne 0x11004ac7
11004ac1:	(bad)  
11004ac2:	(bad)  
11004ac3:	(bad)  
11004ac4:	(bad)  
11004ac5:	in     eax,dx
11004ac6:	out    0xde,eax
11004ac8:	mov    ebp,0xffefde77
11004acd:	(bad)  
11004ace:	inc    DWORD PTR [eax+0x47]
11004ad1:	mov    ebp,0xed
11004ad6:	add    BYTE PTR [eax],al
11004ad8:	add    BYTE PTR [eax],al
11004ada:	add    BYTE PTR [eax],al
11004adc:	add    bh,ah
11004ade:	jnp    0x11004acb
11004ae0:	and    al,0x1f
11004ae2:	(bad)  
11004ae3:	(bad)  
11004ae4:	(bad)  
11004ae5:	(bad)  
11004ae6:	out    dx,al
11004ae7:	out    dx,al
11004ae8:	out    dx,al
11004ae9:	out    dx,al
11004aea:	out    dx,eax
11004aeb:	(bad)  
11004aec:	(bad)  
11004aed:	push   eax
11004aef:	add    BYTE PTR [ebp+0x7e],bh
11004af2:	mov    esi,0x0
11004af7:	add    BYTE PTR [eax],al
11004af9:	add    BYTE PTR [eax],al
11004afb:	add    BYTE PTR [eax],al
11004afd:	mov    ebp,0xe0ebeb
11004b02:	(bad)  
11004b03:	(bad)  
11004b04:	(bad)  
11004b05:	(bad)  
11004b06:	(bad)  
11004b07:	(bad)  
11004b08:	(bad)  
11004b09:	(bad)  
11004b0a:	(bad)  
11004b0b:	(bad)  
11004b0c:	(bad)  
11004b0d:	jmp    DWORD PTR [eax+0x4b]
11004b10:	jmp    0x11004af0
11004b12:	mov    bh,0x0
	...
11004b1c:	add    BYTE PTR [ebp-0x15],bh
11004b1f:	in     eax,dx
11004b20:	jnp    0x11004b82
11004b22:	dec    edi
11004b23:	(bad)  
11004b24:	(bad)  
11004b25:	(bad)  
11004b26:	(bad)  
11004b27:	(bad)  
11004b28:	(bad)  
11004b29:	(bad)  
11004b2a:	(bad)  
11004b2b:	(bad)  
11004b2c:	push   eax
11004b2e:	add    al,0x7d
11004b30:	out    0xeb,eax
11004b32:	out    0x40,eax
	...
11004b3c:	add    al,0xeb
11004b3e:	jmp    0x11004b2b
11004b40:	jmp    0x11004bb2
11004b42:	add    edi,edi
11004b44:	(bad)  
11004b45:	(bad)  
11004b46:	(bad)  
11004b47:	(bad)  
11004b48:	(bad)  
11004b49:	(bad)  
11004b4a:	(bad)  
11004b4b:	(bad)  
11004b4c:	(bad)  
11004b4d:	jo     0x11004b5a
11004b4f:	jnp    0x11004bcc
11004b51:	jmp    0x11004b2a
	...
11004b5b:	add    BYTE PTR [eax],al
11004b5d:	ja     0x11004b36
11004b5f:	xlat   BYTE PTR ds:[ebx]
11004b60:	xlat   BYTE PTR ds:[ebx]
11004b61:	xlat   BYTE PTR ds:[ebx]
11004b62:	inc    eax
11004b63:	outs   dx,DWORD PTR ds:[esi]
11004b64:	(bad)  
11004b65:	(bad)  
11004b66:	(bad)  
11004b67:	(bad)  
11004b68:	(bad)  
11004b69:	(bad)  
11004b6a:	(bad)  
11004b6b:	push   eax
11004b6d:	add    BYTE PTR [esi-0x21282119],bh
11004b73:	inc    eax
	...
11004b7c:	add    bl,ch
11004b7e:	jmp    0x11004b6b
11004b80:	jmp    0x11004b6d
11004b82:	loopne 0x11004b84
11004b84:	(bad)  
11004b85:	(bad)  
11004b86:	(bad)  
11004b87:	(bad)  
11004b88:	(bad)  
11004b89:	(bad)  
11004b8a:	(bad)  
11004b8b:	inc    DWORD PTR [esi+ecx*1]
11004b8e:	mov    ebp,0xbebebebe
	...
11004b9b:	add    BYTE PTR [eax],al
11004b9d:	jge    0x11004c16
11004b9f:	jge    0x11004c18
11004ba1:	jge    0x11004c1e
11004ba3:	add    BYTE PTR [esi-0x1],bh
11004ba6:	(bad)  
11004ba7:	(bad)  
11004ba8:	(bad)  
11004ba9:	(bad)  
11004baa:	push   eax
11004bac:	add    BYTE PTR [edi-0x29],dh
11004baf:	ja     0x11004b88
11004bb1:	ja     0x11004b8a
	...
11004bc3:	add    BYTE PTR [eax],al
11004bc5:	(bad)  
11004bc6:	(bad)  
11004bc7:	(bad)  
11004bc8:	(bad)  
11004bc9:	(bad)  
11004bca:	push   DWORD PTR [eax+0x0]
	...
11004be5:	jg     0x11004be6
11004be7:	(bad)  
11004be8:	(bad)  
11004be9:	push   eax
	...
11004c03:	add    BYTE PTR [eax],al
11004c05:	add    bh,bh
11004c07:	(bad)  
11004c08:	(bad)  
11004c09:	push   DWORD PTR [eax+0x0]
	...
11004c24:	add    BYTE PTR [eax],al
11004c26:	jg     0x11004c27
11004c28:	push   eax
	...
11004c46:	add    bh,bh
11004c48:	push   DWORD PTR [eax+0x0]
	...
11004c67:	(bad)  
	...
11004c85:	add    BYTE PTR [edi],al
11004c87:	add    BYTE PTR [eax+0x0],dh
	...
11004ca6:	add    BYTE PTR [eax],al
11004ca8:	pop    es
	...
11004cf5:	add    BYTE PTR [eax],al
11004cf7:	add    bh,bh
11004cf9:	(bad)  
11004cfa:	(bad)  
11004cfb:	(bad)  
11004cfc:	(bad)  
11004cfd:	(bad)  
11004cfe:	(bad)  
11004cff:	(bad)  
11004d00:	(bad)  
11004d01:	(bad)  
11004d02:	(bad)  
11004d03:	(bad)  
11004d04:	jg     0x11004d05
11004d06:	(bad)  
11004d07:	(bad)  
11004d08:	(bad)  
11004d09:	(bad)  
11004d0a:	(bad)  
11004d0b:	cld    
11004d0c:	aas    
11004d0d:	(bad)  
11004d0e:	(bad)  
11004d0f:	(bad)  
11004d10:	(bad)  
11004d11:	(bad)  
11004d12:	(bad)  
11004d13:	clc    
11004d14:	pop    ds
11004d15:	(bad)  
11004d16:	(bad)  
11004d17:	(bad)  
11004d18:	(bad)  
11004d19:	(bad)  
11004d1a:	push   eax
11004d1c:	ud0    edi,edi
11004d1f:	(bad)  
11004d20:	(bad)  
11004d21:	(bad)  
11004d22:	jmp    eax
11004d24:	pop    es
11004d25:	(bad)  
11004d26:	(bad)  
11004d27:	(bad)  
11004d28:	(bad)  
11004d29:	(bad)  
11004d2a:	inc    eax
11004d2c:	add    edi,edi
11004d2e:	(bad)  
11004d2f:	(bad)  
11004d30:	(bad)  
11004d31:	(bad)  
11004d32:	inc    DWORD PTR [eax-0xff]
11004d38:	inc    DWORD PTR [eax]
11004d3a:	add    BYTE PTR [eax],al
11004d3c:	add    BYTE PTR [eax],al
11004d3e:	add    bh,bh
11004d40:	inc    DWORD PTR [eax]
11004d42:	add    BYTE PTR [eax],al
11004d44:	add    BYTE PTR [eax],al
11004d46:	add    bh,bh
11004d48:	inc    DWORD PTR [eax]
11004d4a:	add    BYTE PTR [eax],al
11004d4c:	add    BYTE PTR [eax],al
11004d4e:	add    bh,bh
11004d50:	inc    DWORD PTR [eax]
11004d52:	add    BYTE PTR [eax],al
11004d54:	add    BYTE PTR [eax],al
11004d56:	add    bh,bh
11004d58:	inc    DWORD PTR [eax]
11004d5a:	add    BYTE PTR [eax],al
11004d5c:	add    BYTE PTR [eax],al
11004d5e:	add    bh,bh
11004d60:	inc    DWORD PTR [eax]
11004d62:	add    BYTE PTR [eax],al
11004d64:	add    BYTE PTR [eax],al
11004d66:	add    bh,bh
11004d68:	inc    DWORD PTR [eax]
11004d6a:	add    BYTE PTR [eax],al
11004d6c:	add    BYTE PTR [eax],al
11004d6e:	add    bh,bh
11004d70:	inc    DWORD PTR [eax]
11004d72:	add    BYTE PTR [eax],al
11004d74:	add    BYTE PTR [eax],al
11004d76:	add    bh,bh
11004d78:	inc    DWORD PTR [eax]
11004d7a:	add    BYTE PTR [eax],al
11004d7c:	add    BYTE PTR [eax],al
11004d7e:	add    bh,bh
11004d80:	inc    DWORD PTR [eax]
11004d82:	add    BYTE PTR [eax],al
11004d84:	add    BYTE PTR [eax],al
11004d86:	add    bh,bh
11004d88:	inc    DWORD PTR [eax]
11004d8a:	add    BYTE PTR [eax],al
11004d8c:	add    BYTE PTR [eax],al
11004d8e:	add    bh,bh
11004d90:	inc    DWORD PTR [eax]
11004d92:	add    BYTE PTR [eax],al
11004d94:	add    BYTE PTR [eax],al
11004d96:	add    bh,bh
11004d98:	inc    DWORD PTR [eax]
11004d9a:	add    BYTE PTR [eax],al
11004d9c:	add    BYTE PTR [eax],al
11004d9e:	add    bh,bh
11004da0:	inc    DWORD PTR [eax]
11004da2:	add    BYTE PTR [eax],al
11004da4:	add    BYTE PTR [eax],al
11004da6:	add    bh,bh
11004da8:	inc    DWORD PTR [eax]
11004daa:	add    BYTE PTR [eax],al
11004dac:	add    BYTE PTR [eax],al
11004dae:	add    bh,bh
11004db0:	inc    DWORD PTR [eax]
11004db2:	add    BYTE PTR [eax],al
11004db4:	add    BYTE PTR [eax],al
11004db6:	add    bh,bh
11004db8:	inc    DWORD PTR [eax]
11004dba:	add    BYTE PTR [eax],al
11004dbc:	add    BYTE PTR [eax],al
11004dbe:	add    bh,bh
11004dc0:	inc    BYTE PTR [eax]
11004dc2:	add    BYTE PTR [eax],al
11004dc4:	add    BYTE PTR [eax],al
11004dc6:	add    BYTE PTR [edi-0x4],bh
11004dc9:	add    BYTE PTR [eax],al
11004dcb:	add    BYTE PTR [eax],al
11004dcd:	add    BYTE PTR [eax],al
11004dcf:	aas    
11004dd0:	clc    
11004dd1:	add    BYTE PTR [eax],al
11004dd3:	add    BYTE PTR [eax],al
11004dd5:	add    BYTE PTR [eax],al
11004dd7:	pop    ds
11004dd8:	lock add BYTE PTR [eax],al
11004ddb:	add    BYTE PTR [eax],al
11004ddd:	add    BYTE PTR [eax],al
11004ddf:	pavgb  mm0,QWORD PTR [eax]
11004de2:	add    BYTE PTR [eax],al
11004de4:	add    BYTE PTR [eax],al
11004de6:	add    BYTE PTR [edi],al
11004de8:	rol    BYTE PTR [eax],0x0
11004deb:	add    BYTE PTR [eax],al
11004ded:	add    BYTE PTR [eax],al
11004def:	add    eax,DWORD PTR [eax+0x0]
11004df5:	add    BYTE PTR [eax],al
11004df7:	add    DWORD PTR [eax+0x0],eax
11004dfd:	add    BYTE PTR [eax],al
11004dff:	add    eax,eax
11004e01:	add    BYTE PTR [eax],al
11004e03:	add    BYTE PTR [eax],al
11004e05:	add    BYTE PTR [eax],al
11004e07:	add    esp,eax
11004e09:	add    BYTE PTR [eax],al
11004e0b:	add    BYTE PTR [eax],al
11004e0d:	add    BYTE PTR [eax],al
11004e0f:	pop    es
11004e10:	lock add BYTE PTR [eax],al
11004e13:	add    BYTE PTR [eax],al
11004e15:	add    BYTE PTR [eax],al
11004e17:	psubb  mm0,QWORD PTR [eax]
11004e1a:	add    BYTE PTR [eax],al
11004e1c:	add    BYTE PTR [eax],al
11004e1e:	add    BYTE PTR [edi],bl
11004e20:	cld    
11004e21:	add    BYTE PTR [eax],al
11004e23:	add    BYTE PTR [eax],al
11004e25:	add    BYTE PTR [eax],al
11004e27:	aas    
11004e28:	inc    BYTE PTR [eax]
11004e2a:	add    BYTE PTR [eax],al
11004e2c:	add    BYTE PTR [eax],al
11004e2e:	add    BYTE PTR [edi-0x1],bh
11004e31:	add    BYTE PTR [eax],al
11004e33:	add    BYTE PTR [eax],al
11004e35:	add    BYTE PTR [eax],al
11004e37:	(bad)  
11004e38:	inc    DWORD PTR [eax]
11004e3a:	add    BYTE PTR [eax],al
11004e3c:	add    BYTE PTR [eax],al
11004e3e:	add    bh,bh
11004e40:	inc    DWORD PTR [eax]
11004e42:	add    BYTE PTR [eax],al
11004e44:	add    BYTE PTR [eax],al
11004e46:	add    bh,bh
11004e48:	inc    DWORD PTR [eax]
11004e4a:	add    BYTE PTR [eax],al
11004e4c:	add    BYTE PTR [eax],al
11004e4e:	add    bh,bh
11004e50:	inc    DWORD PTR [eax]
11004e52:	add    BYTE PTR [eax],al
11004e54:	add    BYTE PTR [eax],al
11004e56:	add    bh,bh
11004e58:	inc    DWORD PTR [eax]
11004e5a:	add    BYTE PTR [eax],al
11004e5c:	add    BYTE PTR [eax],al
11004e5e:	add    bh,bh
11004e60:	inc    DWORD PTR [eax]
11004e62:	add    BYTE PTR [eax],al
11004e64:	add    BYTE PTR [eax],al
11004e66:	add    bh,bh
11004e68:	inc    DWORD PTR [eax]
11004e6a:	add    BYTE PTR [eax],al
11004e6c:	add    BYTE PTR [eax],al
11004e6e:	add    bh,bh
11004e70:	inc    DWORD PTR [eax]
11004e72:	add    BYTE PTR [eax],al
11004e74:	add    BYTE PTR [eax],al
11004e76:	add    bh,bh
11004e78:	inc    DWORD PTR [eax]
11004e7a:	add    BYTE PTR [eax],al
11004e7c:	add    BYTE PTR [eax],al
11004e7e:	add    bh,bh
11004e80:	inc    DWORD PTR [eax]
11004e82:	add    BYTE PTR [eax],al
11004e84:	add    BYTE PTR [eax],al
11004e86:	add    bh,bh
11004e88:	inc    DWORD PTR [eax]
11004e8a:	add    BYTE PTR [eax],al
11004e8c:	add    BYTE PTR [eax],al
11004e8e:	add    bh,bh
11004e90:	inc    DWORD PTR [eax]
11004e92:	add    BYTE PTR [eax],al
11004e94:	add    BYTE PTR [eax],al
11004e96:	add    bh,bh
11004e98:	inc    DWORD PTR [eax]
11004e9a:	add    BYTE PTR [eax],al
11004e9c:	add    BYTE PTR [eax],al
11004e9e:	add    bh,bh
11004ea0:	inc    DWORD PTR [eax]
11004ea2:	add    BYTE PTR [eax],al
11004ea4:	add    BYTE PTR [eax],al
11004ea6:	add    bh,bh
11004ea8:	inc    DWORD PTR [eax]
11004eaa:	add    BYTE PTR [eax],al
11004eac:	add    BYTE PTR [eax],al
11004eae:	add    bh,bh
11004eb0:	inc    DWORD PTR [eax]
11004eb2:	add    BYTE PTR [eax],al
11004eb4:	add    BYTE PTR [eax],al
11004eb6:	add    bh,bh
11004eb8:	(bad)  
11004eb9:	(bad)  
11004eba:	inc    DWORD PTR [eax-0xff]
11004ec0:	(bad)  
11004ec1:	(bad)  
11004ec2:	inc    eax
11004ec4:	add    edi,edi
11004ec6:	(bad)  
11004ec7:	(bad)  
11004ec8:	(bad)  
11004ec9:	(bad)  
11004eca:	jmp    eax
11004ecc:	pop    es
11004ecd:	(bad)  
11004ece:	(bad)  
11004ecf:	(bad)  
11004ed0:	(bad)  
11004ed1:	(bad)  
11004ed2:	push   eax
11004ed4:	ud0    edi,edi
11004ed7:	(bad)  
11004ed8:	(bad)  
11004ed9:	(bad)  
11004eda:	(bad)  
11004edb:	clc    
11004edc:	pop    ds
11004edd:	(bad)  
11004ede:	(bad)  
11004edf:	(bad)  
11004ee0:	(bad)  
11004ee1:	(bad)  
11004ee2:	(bad)  
11004ee3:	cld    
11004ee4:	aas    
11004ee5:	(bad)  
11004ee6:	(bad)  
11004ee7:	(bad)  
11004ee8:	(bad)  
11004ee9:	(bad)  
11004eea:	(bad)  
11004eeb:	(bad)  
11004eec:	jg     0x11004eed
11004eee:	(bad)  
11004eef:	(bad)  
11004ef0:	(bad)  
11004ef1:	(bad)  
11004ef2:	(bad)  
11004ef3:	(bad)  
11004ef4:	(bad)  
11004ef5:	(bad)  
11004ef6:	(bad)  
11004ef7:	jmp    FWORD PTR [eax]
11004ef9:	add    BYTE PTR [eax],al
11004efb:	add    BYTE PTR [eax],dh
11004efd:	add    BYTE PTR [eax],al
11004eff:	add    BYTE PTR [eax+0x0],ah
11004f02:	add    BYTE PTR [eax],al
11004f04:	add    DWORD PTR [eax],eax
11004f06:	add    al,0x0
	...
11004f24:	add    BYTE PTR [eax],al
11004f26:	add    BYTE PTR [eax],0x0
11004f29:	add    BYTE PTR [eax],0x0
11004f2c:	add    BYTE PTR [eax+0x800080],al
11004f32:	add    BYTE PTR [eax],al
11004f34:	add    BYTE PTR [eax],0x80
11004f37:	add    BYTE PTR [eax-0x7fffff80],al
11004f3d:	add    BYTE PTR [eax-0x1000000],0x0
11004f44:	add    bh,bh
11004f46:	add    BYTE PTR [eax],al
11004f48:	add    bh,bh
11004f4a:	inc    DWORD PTR [eax]
11004f4c:	inc    DWORD PTR [eax]
11004f4e:	add    BYTE PTR [eax],al
11004f50:	inc    DWORD PTR [eax]
11004f52:	inc    DWORD PTR [eax]
11004f54:	(bad)  
11004f55:	inc    DWORD PTR [eax]
11004f57:	add    al,al
11004f59:	rol    al,0x0
11004f5c:	(bad)  
11004f5d:	(bad)  
11004f5e:	inc    DWORD PTR [eax]
	...
11004fb0:	add    BYTE PTR [eax],al
11004fb2:	add    BYTE PTR [edi],cl
11004fb4:	in     eax,0x0
	...
11004fca:	add    bh,bh
11004fcc:	inc    DWORD PTR [eax]
	...
11004fe2:	ud0    edi,edi
11004fe5:	lock add BYTE PTR [eax],al
	...
11004ff8:	add    BYTE PTR [edi+ebp*8],al
11004ffb:	(bad)  
11004ffc:	(bad)  
11004ffd:	inc    DWORD PTR [eax+0x0]
	...
11005008:	add    BYTE PTR [eax],al
1100500a:	add    BYTE PTR [esp+eiz*2],al
1100500d:	jbe    0x11005055
1100500f:	add    al,0x0
11005011:	dec    edi
11005012:	(bad)  
11005013:	(bad)  
11005014:	(bad)  
11005015:	jmp    eax
11005017:	add    BYTE PTR [edx+0x42],al
1100501a:	push   esi
1100501b:	inc    ax
1100501d:	add    BYTE PTR [eax],al
1100501f:	add    BYTE PTR [eax],al
11005021:	add    BYTE PTR [eax],al
11005023:	push   es
11005024:	jmp    0x11005011
11005026:	ja     0x11005088
11005028:	add    bh,bh
1100502a:	(bad)  
1100502b:	(bad)  
1100502c:	(bad)  
1100502d:	(bad)  
1100502e:	inc    DWORD PTR [eax]
11005030:	pop    es
11005031:	mov    dh,0xeb
11005033:	ja     0x11005095
11005035:	add    BYTE PTR [eax],al
11005037:	add    BYTE PTR [eax],al
11005039:	add    BYTE PTR [eax],al
1100503b:	pop    es
1100503c:	mov    esi,0xf0074db
11005041:	(bad)  
11005042:	(bad)  
11005043:	(bad)  
11005044:	(bad)  
11005045:	(bad)  
11005046:	jmp    esp
11005048:	add    BYTE PTR [edi+0x7b],al
1100504b:	in     eax,dx
1100504c:	inc    eax
1100504d:	add    BYTE PTR [eax],al
1100504f:	add    BYTE PTR [eax],al
11005051:	add    BYTE PTR [eax],al
11005053:	push   es
11005054:	mov    bh,0x76
11005056:	pusha  
11005057:	add    al,0xef
11005059:	(bad)  
1100505a:	(bad)  
1100505b:	(bad)  
1100505c:	(bad)  
1100505d:	(bad)  
1100505e:	(bad)  
1100505f:	inc    DWORD PTR [eax]
11005061:	and    al,0x67
11005063:	mov    esi,0x50
11005068:	add    BYTE PTR [eax],al
1100506a:	add    BYTE PTR [edi],al
1100506c:	ja     0x110050b2
1100506e:	add    BYTE PTR [edi-0x1],cl
11005071:	(bad)  
11005072:	(bad)  
11005073:	(bad)  
11005074:	(bad)  
11005075:	(bad)  
11005076:	(bad)  
11005077:	push   eax
11005079:	inc    eax
1100507a:	inc    edi
1100507b:	jbe    0x110050dd
1100507d:	add    BYTE PTR [eax],al
1100507f:	add    BYTE PTR [eax],al
11005081:	add    BYTE PTR [eax],al
11005083:	add    al,0x67
11005085:	fs add bh,bh
11005088:	(bad)  
11005089:	(bad)  
1100508a:	out    dx,al
1100508b:	jmp    0x11005068
1100508d:	out    dx,al
1100508e:	(bad)  
1100508f:	(bad)  
11005090:	inc    BYTE PTR [eax+0x24]
11005093:	inc    edi
11005094:	inc    eax
11005095:	add    BYTE PTR [eax],al
11005097:	add    BYTE PTR [eax],al
11005099:	add    BYTE PTR [eax],al
1100509b:	add    al,0x74
1100509d:	add    BYTE PTR [edi],bl
1100509f:	(bad)  
110050a0:	(bad)  
110050a1:	jmp    0x1100508e
110050a3:	xlat   BYTE PTR ds:[ebx]
110050a4:	mov    esi,0xffffbebd
110050a9:	lock add BYTE PTR [edi+0x40],ah
110050ad:	add    BYTE PTR [eax],al
110050af:	add    BYTE PTR [eax],al
110050b1:	add    BYTE PTR [eax],al
110050b3:	push   es
110050b4:	push   eax
110050b5:	add    al,0xef
110050b7:	(bad)  
110050b8:	sti    
110050b9:	in     eax,dx
110050ba:	mov    esi,0xbdb7bebd
110050bf:	mov    esi,0x740ffff
110050c4:	inc    eax
110050c5:	add    BYTE PTR [eax],al
110050c7:	add    BYTE PTR [eax],al
110050c9:	add    BYTE PTR [eax],al
110050cb:	add    al,0x0
110050cd:	das    
110050ce:	(bad)  
110050cf:	(bad)  
110050d0:	mov    esi,0xbebeb7be
110050d5:	mov    ebp,0xffefbeb7
110050da:	loopne 0x110050e0
110050dc:	and    BYTE PTR [eax],al
110050de:	add    BYTE PTR [eax],al
110050e0:	add    BYTE PTR [eax],al
110050e2:	add    BYTE PTR [eax],al
110050e4:	add    al,0xef
110050e6:	(bad)  
110050e7:	out    dx,al
110050e8:	fidivr WORD PTR [esi-0x41418283]
110050ee:	mov    bh,0xb7
110050f0:	mov    esi,0xffff
110050f5:	add    BYTE PTR [eax],al
110050f7:	add    BYTE PTR [eax],al
110050f9:	add    BYTE PTR [eax],al
110050fb:	add    BYTE PTR [edi],cl
110050fd:	(bad)  
110050fe:	(bad)  
110050ff:	fidivr WORD PTR [esi-0x41414843]
11005105:	mov    ebp,0xffbebdbe
1100510a:	jmp    esp
	...
11005114:	(bad)  
11005115:	(bad)  
11005116:	(bad)  
11005117:	mov    esi,0xbede7ede
1100511c:	fucomi st,st(3)
1100511e:	fstp   TBYTE PTR [ebx-0x25]
11005121:	jg     0x11005122
11005123:	inc    DWORD PTR [eax]
11005125:	add    BYTE PTR [eax],al
11005127:	add    BYTE PTR [eax],al
11005129:	add    BYTE PTR [eax],al
1100512b:	ud0    edi,edi
1100512e:	mul    edi
11005130:	mov    esi,0xbeb7bebe
11005135:	mov    ebp,0x7fdbeb7b
1100513a:	(bad)  
1100513b:	push   eax
1100513d:	add    BYTE PTR [eax],al
1100513f:	add    BYTE PTR [eax],al
11005141:	add    BYTE PTR [eax],al
11005143:	(bad)  
11005144:	(bad)  
11005145:	(bad)  
11005146:	sti    
11005147:	fidivr WORD PTR [ebp+0x7d]
1100514a:	out    dx,al
1100514b:	fidivr WORD PTR [esi+0x76ebdbbc]
11005151:	mov    esi,0xffffff
11005156:	add    BYTE PTR [eax],al
11005158:	add    BYTE PTR [eax],al
1100515a:	push   cs
1100515b:	(bad)  
1100515c:	(bad)  
1100515d:	(bad)  
1100515e:	in     eax,dx
1100515f:	out    dx,al
11005160:	mov    esi,0xedeb7be7
11005165:	ja     0x11005142
11005167:	jmp    0x11005144
11005169:	jle    0x1100516a
1100516b:	(bad)  
1100516c:	push   eax
1100516e:	add    BYTE PTR [eax],al
11005170:	add    BYTE PTR [edi+edi*8],al
11005173:	(bad)  
11005174:	(bad)  
11005175:	(bad)  
11005176:	jmp    0x11005165
11005178:	jmp    0x11005167
1100517a:	out    0x7e,eax
1100517c:	mov    esi,0xb7bebebe
11005181:	mov    bh,0xff
11005183:	(bad)  
11005184:	(bad)  
11005185:	(bad)  
11005186:	jo     0x11005188
11005188:	add    BYTE PTR [edi-0x1],ch
1100518b:	(bad)  
1100518c:	(bad)  
1100518d:	(bad)  
1100518e:	jmp    0x1100517e
11005190:	mov    esi,0xd7debede
11005195:	xlat   BYTE PTR ds:[ebx]
11005196:	mov    esi,0xffbdbebd
1100519b:	(bad)  
1100519c:	(bad)  
1100519d:	push   eax
1100519f:	add    BYTE PTR [ecx],al
110051a1:	ud0    edi,edi
110051a4:	(bad)  
110051a5:	(bad)  
110051a6:	jge    0x11005226
110051a8:	out    dx,al
110051a9:	jle    0x11005199
110051ab:	mov    esi,0xbe7eedeb
110051b0:	mov    bh,0xb7
110051b2:	(bad)  
110051b3:	(bad)  
110051b4:	(bad)  
110051b5:	push   eax
110051b7:	add    BYTE PTR [eax],al
110051b9:	add    bh,bh
110051bb:	(bad)  
110051bc:	(bad)  
110051bd:	jmp    edi
110051bf:	out    dx,al
110051c0:	fsubp  st(6),st
110051c2:	in     eax,dx
110051c3:	ja     0x110051b0
110051c5:	jmp    0x110051b2
110051c7:	xlat   BYTE PTR ds:[ebx]
110051c8:	fstp   TBYTE PTR [ebp-0x1]
110051cb:	(bad)  
110051cc:	(bad)  
110051cd:	inc    DWORD PTR [eax]
110051cf:	add    BYTE PTR [eax],al
110051d1:	add    BYTE PTR [edi],cl
110051d3:	(bad)  
110051d4:	(bad)  
110051d5:	(bad)  
110051d6:	in     eax,dx
110051d7:	out    dx,al
110051d8:	out    dx,al
110051d9:	fsubp  st(6),st
110051db:	in     eax,dx
110051dc:	out    0xed,eax
110051de:	jmp    0x110051cb
110051e0:	out    0xbe,eax
110051e2:	(bad)  
110051e3:	(bad)  
110051e4:	push   eax
110051e6:	add    BYTE PTR [eax],al
110051e8:	add    BYTE PTR [eax],al
110051ea:	add    bh,bh
110051ec:	(bad)  
110051ed:	(bad)  
110051ee:	(bad)  
110051ef:	out    dx,al
110051f0:	out    dx,al
110051f1:	out    dx,al
110051f2:	out    dx,al
110051f3:	fidivr WORD PTR [esi-0x14141425]
110051f9:	(bad)  
110051fb:	(bad)  
110051fc:	inc    DWORD PTR [eax]
110051fe:	add    BYTE PTR [eax],al
11005200:	add    BYTE PTR [eax],al
11005202:	add    BYTE PTR [edi],cl
11005204:	(bad)  
11005205:	(bad)  
11005206:	(bad)  
11005207:	fsubp  st(6),st
11005209:	(bad)  
1100520a:	out    dx,al
1100520b:	out    0xee,eax
1100520d:	ja     0x1100528c
1100520f:	in     eax,dx
11005210:	mov    bh,0xbf
11005212:	(bad)  
11005213:	push   eax
11005215:	add    BYTE PTR [eax],al
11005217:	add    BYTE PTR [eax],al
11005219:	add    BYTE PTR [eax],al
1100521b:	add    bh,bh
1100521d:	(bad)  
1100521e:	(bad)  
1100521f:	out    dx,al
11005220:	out    dx,eax
11005221:	out    dx,al
11005222:	in     eax,dx
11005223:	out    dx,al
11005224:	fidivr WORD PTR [esi-0x10414122]
1100522a:	(bad)  
1100522b:	inc    DWORD PTR [eax]
1100522d:	add    BYTE PTR [eax],al
1100522f:	add    BYTE PTR [eax],al
11005231:	add    BYTE PTR [eax],al
11005233:	add    BYTE PTR [edi],cl
11005235:	(bad)  
11005236:	(bad)  
11005237:	out    dx,al
11005238:	out    dx,al
11005239:	out    dx,al
1100523a:	out    dx,al
1100523b:	out    dx,al
1100523c:	int    0xee
1100523e:	mov    esi,0xffffbdde
11005243:	lock add BYTE PTR [eax],al
11005246:	add    BYTE PTR [eax],al
11005248:	add    BYTE PTR [eax],al
1100524a:	add    BYTE PTR [esp+eax*1],al
1100524d:	(bad)  
1100524e:	(bad)  
1100524f:	(bad)  
11005250:	out    dx,al
11005251:	out    dx,al
11005252:	out    dx,al
11005253:	out    0x7d,eax
11005255:	out    0xbe,eax
11005257:	mov    esi,0x40feffbf
1100525c:	inc    eax
1100525d:	add    BYTE PTR [eax],al
1100525f:	add    BYTE PTR [eax],al
11005261:	add    BYTE PTR [eax],al
11005263:	push   es
11005264:	jo     0x110052b4
11005266:	(bad)  
11005267:	(bad)  
11005268:	out    dx,al
11005269:	out    dx,al
1100526a:	out    dx,al
1100526b:	fsubp  st(3),st
1100526d:	in     eax,dx
1100526e:	out    0xde,eax
11005270:	out    dx,eax
11005271:	push   eax
11005273:	inc    edi
11005274:	inc    eax
11005275:	add    BYTE PTR [eax],al
11005277:	add    BYTE PTR [eax],al
11005279:	add    BYTE PTR [eax],al
1100527b:	push   es
1100527c:	jnp    0x110052be
1100527e:	(bad)  
1100527f:	(bad)  
11005280:	(bad)  
11005281:	out    dx,al
11005282:	out    dx,al
11005283:	jle    0x11005303
11005285:	jle    0x11005245
11005287:	mov    edi,0x7d00ffff
1100528c:	push   eax
1100528d:	add    BYTE PTR [eax],al
1100528f:	add    BYTE PTR [eax],al
11005291:	add    BYTE PTR [eax],al
11005293:	or     edi,DWORD PTR [ebp+0x70]
11005296:	ud0    edi,edi
11005299:	out    dx,al
1100529a:	fidivr WORD PTR [ebp+0x7d]
1100529d:	mov    esi,0xf0ffffde
110052a2:	dec    esi
110052a3:	mov    bh,0x60
110052a5:	add    BYTE PTR [eax],al
110052a7:	add    BYTE PTR [eax],al
110052a9:	add    BYTE PTR [eax],al
110052ab:	pop    es
110052ac:	ja     0x1100526c
110052ae:	inc    eax
110052af:	(bad)  
110052b0:	(bad)  
110052b1:	(bad)  
110052b2:	(bad)  
110052b3:	out    dx,al
110052b4:	out    dx,al
110052b5:	out    dx,al
110052b6:	(bad)  
110052b7:	(bad)  
110052b8:	inc    BYTE PTR [eax+0x77]
110052bb:	mov    esi,0xb0
110052c0:	add    BYTE PTR [eax],al
110052c2:	add    BYTE PTR [esi+ebx*8],al
110052c5:	mov    bh,0x70
110052c7:	ud0    edi,edi
110052ca:	(bad)  
110052cb:	(bad)  
110052cc:	(bad)  
110052cd:	(bad)  
110052ce:	(bad)  
110052cf:	push   edx
110052d1:	inc    edi
110052d2:	mov    esi,0x40de
110052d7:	add    BYTE PTR [eax],al
110052d9:	add    BYTE PTR [eax],al
110052db:	add    al,0xeb
110052dd:	in     eax,dx
110052de:	jnp    0x11005344
110052e0:	(bad)  
110052e1:	(bad)  
110052e2:	(bad)  
110052e3:	(bad)  
110052e4:	(bad)  
110052e5:	(bad)  
110052e6:	(bad)  
110052e7:	inc    DWORD PTR [eax]
110052e9:	jnp    0x110052d8
110052eb:	jnp    0x1100535d
110052ed:	add    BYTE PTR [eax],al
110052ef:	add    BYTE PTR [eax],al
110052f1:	add    BYTE PTR [eax],al
110052f3:	add    al,0xeb
110052f5:	jmp    0x110052e2
110052f7:	jo     0x11005308
110052f9:	(bad)  
110052fa:	(bad)  
110052fb:	(bad)  
110052fc:	(bad)  
110052fd:	(bad)  
110052fe:	push   eax
11005300:	inc    ebp
11005301:	fidiv  WORD PTR [edi+0x507d]
11005307:	add    BYTE PTR [eax],al
11005309:	add    BYTE PTR [eax],al
1100530b:	push   es
1100530c:	in     eax,dx
1100530d:	ja     0x110052e6
1100530f:	jbe    0x11005312
11005311:	(bad)  
11005312:	(bad)  
11005313:	(bad)  
11005314:	(bad)  
11005315:	(bad)  
11005316:	inc    DWORD PTR [eax]
11005318:	jbe    0x11005305
1100531a:	in     eax,dx
1100531b:	ja     0x1100537d
1100531d:	add    BYTE PTR [eax],al
1100531f:	add    BYTE PTR [eax],al
11005321:	add    BYTE PTR [eax],al
11005323:	add    BYTE PTR [esi+0x47],dl
11005326:	inc    esi
11005327:	push   esi
11005328:	inc    eax
11005329:	ud0    edi,edi
1100532c:	(bad)  
1100532d:	push   eax
1100532f:	push   es
11005330:	push   esi
11005331:	inc    edi
11005332:	inc    esi
11005333:	push   esi
	...
11005340:	add    BYTE PTR [eax],al
11005342:	(bad)  
11005343:	(bad)  
11005344:	(bad)  
11005345:	inc    DWORD PTR [eax]
	...
11005357:	add    BYTE PTR [eax],al
11005359:	add    BYTE PTR [edi],cl
1100535b:	(bad)  
1100535c:	push   eax
	...
11005372:	add    bh,bh
11005374:	inc    DWORD PTR [eax]
	...
1100538a:	add    BYTE PTR [edi],cl
1100538c:	lock add BYTE PTR [eax],al
	...
110053df:	add    bh,bh
110053e1:	(bad)  
110053e2:	(bad)  
110053e3:	(bad)  
110053e4:	(bad)  
110053e5:	inc    DWORD PTR [eax]
110053e7:	add    bh,bh
110053e9:	(bad)  
110053ea:	(bad)  
110053eb:	jg     0x110053ec
110053ed:	inc    DWORD PTR [eax]
110053ef:	add    bh,bh
110053f1:	(bad)  
110053f2:	cld    
110053f3:	aas    
110053f4:	(bad)  
110053f5:	inc    DWORD PTR [eax]
110053f7:	add    bh,bh
110053f9:	(bad)  
110053fa:	clc    
110053fb:	pop    ds
110053fc:	(bad)  
110053fd:	inc    DWORD PTR [eax]
110053ff:	add    bh,bh
11005401:	push   eax
11005403:	ud0    edi,edi
11005406:	add    BYTE PTR [eax],al
11005408:	(bad)  
11005409:	jmp    eax
1100540b:	pop    es
1100540c:	(bad)  
1100540d:	inc    DWORD PTR [eax]
1100540f:	add    ah,bh
11005411:	add    BYTE PTR [eax],al
11005413:	add    BYTE PTR [eax],al
11005415:	aas    
11005416:	add    BYTE PTR [eax],al
11005418:	cld    
11005419:	add    BYTE PTR [eax],al
1100541b:	add    BYTE PTR [eax],al
1100541d:	aas    
1100541e:	add    BYTE PTR [eax],al
11005420:	cld    
11005421:	add    BYTE PTR [eax],al
11005423:	add    BYTE PTR [eax],al
11005425:	aas    
11005426:	add    BYTE PTR [eax],al
11005428:	cld    
11005429:	add    BYTE PTR [eax],al
1100542b:	add    BYTE PTR [eax],al
1100542d:	aas    
1100542e:	add    BYTE PTR [eax],al
11005430:	cld    
11005431:	add    BYTE PTR [eax],al
11005433:	add    BYTE PTR [eax],al
11005435:	aas    
11005436:	add    BYTE PTR [eax],al
11005438:	cld    
11005439:	add    BYTE PTR [eax],al
1100543b:	add    BYTE PTR [eax],al
1100543d:	aas    
1100543e:	add    BYTE PTR [eax],al
11005440:	cld    
11005441:	add    BYTE PTR [eax],al
11005443:	add    BYTE PTR [eax],al
11005445:	aas    
11005446:	add    BYTE PTR [eax],al
11005448:	cld    
11005449:	add    BYTE PTR [eax],al
1100544b:	add    BYTE PTR [eax],al
1100544d:	aas    
1100544e:	add    BYTE PTR [eax],al
11005450:	cld    
11005451:	add    BYTE PTR [eax],al
11005453:	add    BYTE PTR [eax],al
11005455:	aas    
11005456:	add    BYTE PTR [eax],al
11005458:	cld    
11005459:	add    BYTE PTR [eax],al
1100545b:	add    BYTE PTR [eax],al
1100545d:	aas    
1100545e:	add    BYTE PTR [eax],al
11005460:	cld    
11005461:	add    BYTE PTR [eax],al
11005463:	add    BYTE PTR [eax],al
11005465:	aas    
11005466:	add    BYTE PTR [eax],al
11005468:	cld    
11005469:	add    BYTE PTR [eax],al
1100546b:	add    BYTE PTR [eax],al
1100546d:	aas    
1100546e:	add    BYTE PTR [eax],al
11005470:	cld    
11005471:	add    BYTE PTR [eax],al
11005473:	add    BYTE PTR [eax],al
11005475:	aas    
11005476:	add    BYTE PTR [eax],al
11005478:	clc    
11005479:	add    BYTE PTR [eax],al
1100547b:	add    BYTE PTR [eax],al
1100547d:	pop    ds
1100547e:	add    BYTE PTR [eax],al
11005480:	lock add BYTE PTR [eax],al
11005483:	add    BYTE PTR [eax],al
11005485:	sldt   WORD PTR [eax]
11005488:	loopne 0x1100548a
1100548a:	add    BYTE PTR [eax],al
1100548c:	add    BYTE PTR [edi],al
1100548e:	add    BYTE PTR [eax],al
11005490:	rol    BYTE PTR [eax],0x0
11005493:	add    BYTE PTR [eax],al
11005495:	add    eax,DWORD PTR [eax]
11005497:	add    BYTE PTR [eax+0x0],al
1100549d:	add    DWORD PTR [eax],eax
1100549f:	add    BYTE PTR [eax+0x0],al
110054a5:	add    DWORD PTR [eax],eax
110054a7:	add    al,al
110054a9:	add    BYTE PTR [eax],al
110054ab:	add    BYTE PTR [eax],al
110054ad:	add    eax,DWORD PTR [eax]
110054af:	add    al,ah
110054b1:	add    BYTE PTR [eax],al
110054b3:	add    BYTE PTR [eax],al
110054b5:	pop    es
110054b6:	add    BYTE PTR [eax],al
110054b8:	lock add BYTE PTR [eax],al
110054bb:	add    BYTE PTR [eax],al
110054bd:	sldt   WORD PTR [eax]
110054c0:	clc    
110054c1:	add    BYTE PTR [eax],al
110054c3:	add    BYTE PTR [eax],al
110054c5:	pop    ds
110054c6:	add    BYTE PTR [eax],al
110054c8:	cld    
110054c9:	add    BYTE PTR [eax],al
110054cb:	add    BYTE PTR [eax],al
110054cd:	aas    
110054ce:	add    BYTE PTR [eax],al
110054d0:	cld    
110054d1:	add    BYTE PTR [eax],al
110054d3:	add    BYTE PTR [eax],al
110054d5:	aas    
110054d6:	add    BYTE PTR [eax],al
110054d8:	cld    
110054d9:	add    BYTE PTR [eax],al
110054db:	add    BYTE PTR [eax],al
110054dd:	aas    
110054de:	add    BYTE PTR [eax],al
110054e0:	cld    
110054e1:	add    BYTE PTR [eax],al
110054e3:	add    BYTE PTR [eax],al
110054e5:	aas    
110054e6:	add    BYTE PTR [eax],al
110054e8:	cld    
110054e9:	add    BYTE PTR [eax],al
110054eb:	add    BYTE PTR [eax],al
110054ed:	aas    
110054ee:	add    BYTE PTR [eax],al
110054f0:	cld    
110054f1:	add    BYTE PTR [eax],al
110054f3:	add    BYTE PTR [eax],al
110054f5:	aas    
110054f6:	add    BYTE PTR [eax],al
110054f8:	cld    
110054f9:	add    BYTE PTR [eax],al
110054fb:	add    BYTE PTR [eax],al
110054fd:	aas    
110054fe:	add    BYTE PTR [eax],al
11005500:	cld    
11005501:	add    BYTE PTR [eax],al
11005503:	add    BYTE PTR [eax],al
11005505:	aas    
11005506:	add    BYTE PTR [eax],al
11005508:	cld    
11005509:	add    BYTE PTR [eax],al
1100550b:	add    BYTE PTR [eax],al
1100550d:	aas    
1100550e:	add    BYTE PTR [eax],al
11005510:	cld    
11005511:	add    BYTE PTR [eax],al
11005513:	add    BYTE PTR [eax],al
11005515:	aas    
11005516:	add    BYTE PTR [eax],al
11005518:	cld    
11005519:	add    BYTE PTR [eax],al
1100551b:	add    BYTE PTR [eax],al
1100551d:	aas    
1100551e:	add    BYTE PTR [eax],al
11005520:	cld    
11005521:	add    BYTE PTR [eax],al
11005523:	add    BYTE PTR [eax],al
11005525:	aas    
11005526:	add    BYTE PTR [eax],al
11005528:	cld    
11005529:	add    BYTE PTR [eax],al
1100552b:	add    BYTE PTR [eax],al
1100552d:	aas    
1100552e:	add    BYTE PTR [eax],al
11005530:	(bad)  
11005531:	jmp    eax
11005533:	pop    es
11005534:	(bad)  
11005535:	inc    DWORD PTR [eax]
11005537:	add    bh,bh
11005539:	push   eax
1100553b:	ud0    edi,edi
1100553e:	add    BYTE PTR [eax],al
11005540:	(bad)  
11005541:	(bad)  
11005542:	clc    
11005543:	pop    ds
11005544:	(bad)  
11005545:	inc    DWORD PTR [eax]
11005547:	add    bh,bh
11005549:	(bad)  
1100554a:	cld    
1100554b:	aas    
1100554c:	(bad)  
1100554d:	inc    DWORD PTR [eax]
1100554f:	add    bh,bh
11005551:	(bad)  
11005552:	(bad)  
11005553:	jg     0x11005554
11005555:	inc    DWORD PTR [eax]
11005557:	add    bh,bh
11005559:	(bad)  
1100555a:	(bad)  
1100555b:	(bad)  
1100555c:	(bad)  
1100555d:	inc    DWORD PTR [eax]
1100555f:	add    BYTE PTR [eax],ch
11005561:	add    BYTE PTR [eax],al
11005563:	add    BYTE PTR [eax],ch
11005565:	add    BYTE PTR [eax],al
11005567:	add    BYTE PTR [eax+0x0],dl
1100556a:	add    BYTE PTR [eax],al
1100556c:	add    DWORD PTR [eax],eax
1100556e:	add    al,0x0
	...
1100558c:	add    BYTE PTR [eax],al
1100558e:	add    BYTE PTR [eax],0x0
11005591:	add    BYTE PTR [eax],0x0
11005594:	add    BYTE PTR [eax+0x800080],al
1100559a:	add    BYTE PTR [eax],al
1100559c:	add    BYTE PTR [eax],0x80
1100559f:	add    BYTE PTR [eax-0x7fffff80],al
110055a5:	add    BYTE PTR [eax-0x1000000],0x0
110055ac:	add    bh,bh
110055ae:	add    BYTE PTR [eax],al
110055b0:	add    bh,bh
110055b2:	inc    DWORD PTR [eax]
110055b4:	inc    DWORD PTR [eax]
110055b6:	add    BYTE PTR [eax],al
110055b8:	inc    DWORD PTR [eax]
110055ba:	inc    DWORD PTR [eax]
110055bc:	(bad)  
110055bd:	inc    DWORD PTR [eax]
110055bf:	add    al,al
110055c1:	rol    al,0x0
110055c4:	(bad)  
110055c5:	(bad)  
110055c6:	inc    DWORD PTR [eax]
	...
110055f8:	add    BYTE PTR ds:0x70,al
	...
1100560a:	add    BYTE PTR [eax],al
1100560c:	add    BYTE PTR [edi-0x9],bh
	...
1100561f:	add    BYTE PTR [edi],al
11005621:	(bad)  
11005622:	push   DWORD PTR [eax+0x0]
	...
1100562d:	add    BYTE PTR [eax],al
1100562f:	add    BYTE PTR [eax+0x0],al
11005632:	add    BYTE PTR [eax],al
11005634:	jg     0x11005635
11005636:	push   edi
11005638:	add    BYTE PTR [eax],al
1100563a:	add    BYTE PTR [eax],al
1100563c:	add    al,0x0
1100563e:	add    BYTE PTR [eax],al
11005640:	add    BYTE PTR [eax],al
11005642:	add    al,0x7b
11005644:	jbe    0x1100569c
11005646:	inc    eax
11005647:	pop    es
11005648:	(bad)  
11005649:	(bad)  
1100564a:	(bad)  
1100564b:	push   DWORD PTR [eax+0x5]
1100564e:	imul   edi,DWORD PTR [ebx+0x76],0x0
11005652:	add    BYTE PTR [eax],al
11005654:	add    BYTE PTR [eax],al
11005656:	add    BYTE PTR [ebp+0x7b],bh
11005659:	jbe    0x1100565b
1100565b:	jg     0x1100565c
1100565d:	(bad)  
1100565e:	(bad)  
1100565f:	push   edi
11005661:	add    BYTE PTR [esi+0x77],al
11005664:	aad    0x40
11005666:	add    BYTE PTR [eax],al
11005668:	add    BYTE PTR [eax],al
1100566a:	add    BYTE PTR [edi-0xf8bb8a],dh
11005670:	(bad)  
11005671:	(bad)  
11005672:	(bad)  
11005673:	(bad)  
11005674:	push   DWORD PTR [eax+0x4]
11005677:	jnp    0x110056ef
11005679:	add    BYTE PTR [eax],al
1100567b:	add    BYTE PTR [eax],al
1100567d:	add    BYTE PTR [eax],al
1100567f:	addr16 mov bl,0x0
11005682:	jg     0x11005683
11005684:	(bad)  
11005685:	(bad)  
11005686:	(bad)  
11005687:	(bad)  
11005688:	push   edi
1100568a:	add    al,0x66
1100568c:	jbe    0x1100568e
1100568e:	add    BYTE PTR [eax],al
11005690:	add    BYTE PTR [eax],al
11005692:	add    BYTE PTR [esi+0x44],dh
11005695:	pop    es
11005696:	(bad)  
11005697:	(bad)  
11005698:	out    dx,al
11005699:	mov    esi,0xffffeebd
1100569e:	jo     0x110056a5
110056a0:	add    BYTE PTR [bx+si],al
110056a3:	add    BYTE PTR [eax],al
110056a5:	add    BYTE PTR [eax],al
110056a7:	add    BYTE PTR fs:[edi-0x1],bh
110056ab:	sti    
110056ac:	in     eax,dx
110056ad:	mov    esi,0xffee5bbd
110056b2:	test   DWORD PTR [esi+eax*2],0x0
110056b9:	add    BYTE PTR [eax],al
110056bb:	add    al,0x7
110056bd:	(bad)  
110056be:	(bad)  
110056bf:	fidiv  WORD PTR [edi-0x24241425]
110056c5:	out    dx,eax
110056c6:	push   DWORD PTR [eax+0x4]
110056c9:	add    BYTE PTR [eax],al
110056cb:	add    BYTE PTR [eax],al
110056cd:	add    BYTE PTR [eax],al
110056cf:	add    BYTE PTR [edi-0x1],bh
110056d2:	jmp    0x110056bb
110056d4:	mov    esi,0xb7beb7b7
110056d9:	mov    esi,0xf7ff
110056de:	add    BYTE PTR [eax],al
110056e0:	add    BYTE PTR [eax],al
110056e2:	add    BYTE PTR [edi],al
110056e4:	(bad)  
110056e5:	(bad)  
110056e6:	jmp    0x110056bf
110056e8:	jge    0x11005761
110056ea:	jge    0x110056aa
110056ec:	mov    ebp,0x70ffefb6
110056f1:	add    BYTE PTR [eax],al
110056f3:	add    BYTE PTR [eax],al
110056f5:	add    BYTE PTR [eax],al
110056f7:	jg     0x110056f8
110056f9:	(bad)  
110056fa:	outs   dx,BYTE PTR ds:[esi]
110056fb:	ja     0x11005778
110056fd:	jmp    0x1100577a
110056ff:	jnp    0x1100577c
11005701:	jmp    0x110056f2
11005703:	push   edi
11005705:	add    BYTE PTR [eax],al
11005707:	add    BYTE PTR [eax],al
11005709:	add    BYTE PTR [edi],al
1100570b:	(bad)  
1100570c:	(bad)  
1100570d:	out    dx,al
1100570e:	mov    esi,0x7d7dedd7
11005713:	jmp    0x110056f0
11005715:	imul   edi,DWORD PTR [esi+0x70ffff],0x0
1100571c:	add    BYTE PTR [eax],al
1100571e:	jg     0x1100571f
11005720:	(bad)  
11005721:	jmp    0x11005710
11005723:	jnp    0x11005710
11005725:	jmp    0x11005712
11005727:	jmp    0x11005714
11005729:	jmp    0x11005719
1100572b:	(bad)  
1100572c:	push   edi
1100572e:	add    BYTE PTR [eax],al
11005730:	add    BYTE PTR [edi],al
11005732:	(bad)  
11005733:	(bad)  
11005734:	(bad)  
11005735:	fidiv  WORD PTR [edi-0x12]
11005738:	fsubp  st(5),st
1100573a:	jmp    0x1100571a
1100573c:	mov    esi,0xffffb6bd
11005741:	(bad)  
11005742:	jo     0x11005744
11005744:	add    BYTE PTR [edi-0x1],bh
11005747:	(bad)  
11005748:	(bad)  
11005749:	jmp    0x11005738
1100574b:	jmp    0x11005738
1100574d:	jmp    0x1100573a
1100574f:	jmp    0x110057cc
11005751:	xlat   BYTE PTR ds:[ebx]
11005752:	mov    esi,0xf7ffffff
11005757:	add    BYTE PTR [eax],al
11005759:	jg     0x1100575a
1100575b:	(bad)  
1100575c:	(bad)  
1100575d:	mov    esi,0xeeedee7e
11005762:	jle    0x110057e1
11005764:	jmp    0x110057e3
11005766:	mov    bh,0xff
11005768:	(bad)  
11005769:	push   edi
1100576b:	add    BYTE PTR [eax],al
1100576d:	pop    es
1100576e:	(bad)  
1100576f:	(bad)  
11005770:	(bad)  
11005771:	in     eax,dx
11005772:	out    dx,al
11005773:	in     eax,dx
11005774:	out    dx,al
11005775:	jmp    0x11005764
11005777:	mov    esi,0xffebebbb
1100577c:	(bad)  
1100577d:	push   DWORD PTR [eax+0x0]
11005780:	add    BYTE PTR [eax],al
11005782:	jg     0x11005783
11005784:	(bad)  
11005785:	out    dx,al
11005786:	fsubp  st(6),st
11005788:	in     eax,dx
11005789:	out    dx,al
1100578a:	out    0x7e,eax
1100578c:	fidivr WORD PTR [ebp-0x8000042]
11005792:	add    BYTE PTR [eax],al
11005794:	add    BYTE PTR [eax],al
11005796:	pop    es
11005797:	(bad)  
11005798:	(bad)  
11005799:	out    dx,al
1100579a:	out    dx,al
1100579b:	out    dx,al
1100579c:	out    dx,al
1100579d:	out    dx,al
1100579e:	mov    ebp,0x7e77beed
110057a3:	(bad)  
110057a4:	push   DWORD PTR [eax+0x0]
110057a7:	add    BYTE PTR [eax],al
110057a9:	add    BYTE PTR [eax],al
110057ab:	jg     0x110057ac
110057ad:	(bad)  
110057ae:	out    dx,al
110057af:	out    dx,eax
110057b0:	out    dx,al
110057b1:	out    dx,al
110057b2:	jmp    0x110057a1
110057b4:	jmp    0x11005791
110057b6:	jg     0x110057b7
110057b8:	test   DWORD PTR [eax],0x0
110057be:	add    BYTE PTR [edi],al
110057c0:	(bad)  
110057c1:	(bad)  
110057c2:	out    dx,al
110057c3:	out    dx,eax
110057c4:	in     eax,dx
110057c5:	in     eax,dx
110057c6:	ja     0x110057b6
110057c8:	mov    esi,0x70ffef7e
110057cd:	add    BYTE PTR [eax],al
110057cf:	add    BYTE PTR [eax],al
110057d1:	add    BYTE PTR [eax],al
110057d3:	inc    eax
110057d4:	jg     0x110057d5
110057d6:	out    dx,al
110057d7:	out    dx,al
110057d8:	out    dx,al
110057d9:	out    dx,al
110057da:	jle    0x11005793
110057dc:	jge    0x1100579c
110057de:	push   edi
110057e0:	add    al,0x0
110057e2:	add    BYTE PTR [eax],al
110057e4:	add    BYTE PTR [eax],al
110057e6:	add    BYTE PTR [edi+0x47],dh
110057e9:	(bad)  
110057ea:	(bad)  
110057eb:	out    dx,al
110057ec:	out    dx,al
110057ed:	jle    0x1100586d
110057ef:	(bad)  
110057f1:	out    dx,eax
110057f2:	push   DWORD PTR [eax-0x49]
110057f5:	inc    eax
110057f6:	add    BYTE PTR [eax],al
110057f8:	add    BYTE PTR [eax],al
110057fa:	add    BYTE PTR [ebp-0x110080b0],bh
11005800:	out    dx,al
11005801:	xlat   BYTE PTR ds:[ebx]
11005802:	jmp    0x110057ef
11005804:	out    dx,al
11005805:	push   edi
11005807:	or     esi,DWORD PTR [edi+0x0]
1100580a:	add    BYTE PTR [eax],al
1100580c:	add    BYTE PTR [eax],al
1100580e:	add    BYTE PTR [ebp+0x7b],bh
11005811:	inc    edi
11005812:	(bad)  
11005813:	(bad)  
11005814:	out    dx,al
11005815:	out    0xed,eax
11005817:	out    dx,al
11005818:	(bad)  
11005819:	push   DWORD PTR [eax+0x7d]
1100581c:	jmp    0x1100581e
1100581e:	add    BYTE PTR [eax],al
11005820:	add    BYTE PTR [eax],al
11005822:	add    BYTE PTR [edi-0x809f22],dh
11005828:	(bad)  
11005829:	(bad)  
1100582a:	(bad)  
1100582b:	(bad)  
1100582c:	push   edi
1100582e:	or     ebp,ebx
11005830:	out    0x0,al
11005832:	add    BYTE PTR [eax],al
11005834:	add    BYTE PTR [eax],al
11005836:	add    BYTE PTR [esi-0x42],bh
11005839:	mov    bh,0x47
1100583b:	(bad)  
1100583c:	(bad)  
1100583d:	(bad)  
1100583e:	(bad)  
1100583f:	(bad)  
11005840:	push   DWORD PTR [eax+0x7d]
11005843:	jnp    0x1100582b
11005845:	inc    eax
11005846:	add    BYTE PTR [eax],al
11005848:	add    BYTE PTR [eax],al
1100584a:	add    BYTE PTR [edi+0x7f70777d],dh
11005850:	(bad)  
11005851:	(bad)  
11005852:	(bad)  
11005853:	push   edi
11005855:	or     esi,DWORD PTR [edi-0x22]
11005858:	mov    bh,0x0
1100585a:	add    BYTE PTR [eax],al
1100585c:	add    BYTE PTR [eax],al
1100585e:	add    BYTE PTR [edi+0x67],ah
11005861:	mov    bh,0x64
11005863:	pop    es
11005864:	(bad)  
11005865:	(bad)  
11005866:	(bad)  
11005867:	push   DWORD PTR [eax+0x47]
1100586a:	addr16 mov bh,0x67
	...
11005875:	add    BYTE PTR [eax],al
11005877:	add    BYTE PTR [edi-0x1],bh
1100587a:	push   edi
	...
1100588c:	pop    es
1100588d:	(bad)  
1100588e:	push   DWORD PTR [eax+0x0]
	...
110058a1:	jg     0x1100589a
	...
110058b3:	add    BYTE PTR [eax],al
110058b5:	pop    es
110058b6:	jo     0x110058b8
	...
110058e8:	(bad)  
110058e9:	(bad)  
110058ea:	(bad)  
110058eb:	(bad)  
110058ec:	inc    DWORD PTR [eax]
110058ee:	add    BYTE PTR [eax],al
110058f0:	(bad)  
110058f1:	jmp    edi
110058f3:	(bad)  
110058f4:	inc    DWORD PTR [eax]
110058f6:	add    BYTE PTR [eax],al
110058f8:	(bad)  
110058f9:	inc    ebx
110058fb:	(bad)  
110058fc:	inc    DWORD PTR [eax]
110058fe:	add    BYTE PTR [eax],al
11005900:	(bad)  
11005901:	inc    DWORD PTR [ecx+0xffff]
11005907:	add    bh,bh
11005909:	inc    DWORD PTR [eax]
1100590b:	(bad)  
1100590c:	inc    DWORD PTR [eax]
1100590e:	add    BYTE PTR [eax],al
11005910:	clc    
11005911:	add    BYTE PTR [eax],al
11005913:	add    BYTE PTR [edi],bl
11005915:	add    BYTE PTR [eax],al
11005917:	add    al,bh
11005919:	add    BYTE PTR [eax],al
1100591b:	add    BYTE PTR [edi],bl
1100591d:	add    BYTE PTR [eax],al
1100591f:	add    al,bh
11005921:	add    BYTE PTR [eax],al
11005923:	add    BYTE PTR [edi],bl
11005925:	add    BYTE PTR [eax],al
11005927:	add    al,bh
11005929:	add    BYTE PTR [eax],al
1100592b:	add    BYTE PTR [edi],bl
1100592d:	add    BYTE PTR [eax],al
1100592f:	add    al,bh
11005931:	add    BYTE PTR [eax],al
11005933:	add    BYTE PTR [edi],bl
11005935:	add    BYTE PTR [eax],al
11005937:	add    al,bh
11005939:	add    BYTE PTR [eax],al
1100593b:	add    BYTE PTR [edi],bl
1100593d:	add    BYTE PTR [eax],al
1100593f:	add    al,bh
11005941:	add    BYTE PTR [eax],al
11005943:	add    BYTE PTR [edi],bl
11005945:	add    BYTE PTR [eax],al
11005947:	add    al,bh
11005949:	add    BYTE PTR [eax],al
1100594b:	add    BYTE PTR [edi],bl
1100594d:	add    BYTE PTR [eax],al
1100594f:	add    al,bh
11005951:	add    BYTE PTR [eax],al
11005953:	add    BYTE PTR [edi],bl
11005955:	add    BYTE PTR [eax],al
11005957:	add    al,bh
11005959:	add    BYTE PTR [eax],al
1100595b:	add    BYTE PTR [edi],bl
1100595d:	add    BYTE PTR [eax],al
1100595f:	add    al,bh
11005961:	add    BYTE PTR [eax],al
11005963:	add    BYTE PTR [edi],bl
11005965:	add    BYTE PTR [eax],al
11005967:	add    al,dh
11005969:	add    BYTE PTR [eax],al
1100596b:	add    BYTE PTR [edi],cl
1100596d:	add    BYTE PTR [eax],al
1100596f:	add    al,ah
11005971:	add    BYTE PTR [eax],al
11005973:	add    BYTE PTR [edi],al
11005975:	add    BYTE PTR [eax],al
11005977:	add    al,al
11005979:	add    BYTE PTR [eax],al
1100597b:	add    BYTE PTR [ebx],al
1100597d:	add    BYTE PTR [eax],al
1100597f:	add    BYTE PTR [eax+0x1000000],al
11005985:	add    BYTE PTR [eax],al
11005987:	add    BYTE PTR [eax+0x1000000],al
1100598d:	add    BYTE PTR [eax],al
1100598f:	add    al,al
11005991:	add    BYTE PTR [eax],al
11005993:	add    BYTE PTR [ebx],al
11005995:	add    BYTE PTR [eax],al
11005997:	add    al,ah
11005999:	add    BYTE PTR [eax],al
1100599b:	add    BYTE PTR [edi],al
1100599d:	add    BYTE PTR [eax],al
1100599f:	add    al,dh
110059a1:	add    BYTE PTR [eax],al
110059a3:	add    BYTE PTR [edi],cl
110059a5:	add    BYTE PTR [eax],al
110059a7:	add    al,bh
110059a9:	add    BYTE PTR [eax],al
110059ab:	add    BYTE PTR [edi],bl
110059ad:	add    BYTE PTR [eax],al
110059af:	add    al,bh
110059b1:	add    BYTE PTR [eax],al
110059b3:	add    BYTE PTR [edi],bl
110059b5:	add    BYTE PTR [eax],al
110059b7:	add    al,bh
110059b9:	add    BYTE PTR [eax],al
110059bb:	add    BYTE PTR [edi],bl
110059bd:	add    BYTE PTR [eax],al
110059bf:	add    al,bh
110059c1:	add    BYTE PTR [eax],al
110059c3:	add    BYTE PTR [edi],bl
110059c5:	add    BYTE PTR [eax],al
110059c7:	add    al,bh
110059c9:	add    BYTE PTR [eax],al
110059cb:	add    BYTE PTR [edi],bl
110059cd:	add    BYTE PTR [eax],al
110059cf:	add    al,bh
110059d1:	add    BYTE PTR [eax],al
110059d3:	add    BYTE PTR [edi],bl
110059d5:	add    BYTE PTR [eax],al
110059d7:	add    al,bh
110059d9:	add    BYTE PTR [eax],al
110059db:	add    BYTE PTR [edi],bl
110059dd:	add    BYTE PTR [eax],al
110059df:	add    al,bh
110059e1:	add    BYTE PTR [eax],al
110059e3:	add    BYTE PTR [edi],bl
110059e5:	add    BYTE PTR [eax],al
110059e7:	add    al,bh
110059e9:	add    BYTE PTR [eax],al
110059eb:	add    BYTE PTR [edi],bl
110059ed:	add    BYTE PTR [eax],al
110059ef:	add    al,bh
110059f1:	add    BYTE PTR [eax],al
110059f3:	add    BYTE PTR [edi],bl
110059f5:	add    BYTE PTR [eax],al
110059f7:	add    al,bh
110059f9:	add    BYTE PTR [eax],al
110059fb:	add    BYTE PTR [edi],bl
110059fd:	add    BYTE PTR [eax],al
110059ff:	add    bh,bh
11005a01:	inc    DWORD PTR [eax]
11005a03:	(bad)  
11005a04:	inc    DWORD PTR [eax]
11005a06:	add    BYTE PTR [eax],al
11005a08:	(bad)  
11005a09:	inc    DWORD PTR [ecx+0xffff]
11005a0f:	add    bh,bh
11005a11:	inc    ebx
11005a13:	(bad)  
11005a14:	inc    DWORD PTR [eax]
11005a16:	add    BYTE PTR [eax],al
11005a18:	(bad)  
11005a19:	jmp    edi
11005a1b:	(bad)  
11005a1c:	inc    DWORD PTR [eax]
11005a1e:	add    BYTE PTR [eax],al
11005a20:	(bad)  
11005a21:	(bad)  
11005a22:	(bad)  
11005a23:	(bad)  
11005a24:	inc    DWORD PTR [eax]
11005a26:	add    BYTE PTR [eax],al
11005a28:	sub    BYTE PTR [eax],al
11005a2a:	add    BYTE PTR [eax],al
11005a2c:	and    BYTE PTR [eax],al
11005a2e:	add    BYTE PTR [eax],al
11005a30:	inc    eax
11005a31:	add    BYTE PTR [eax],al
11005a33:	add    BYTE PTR [ecx],al
11005a35:	add    BYTE PTR [eax+eax*1],al
	...
11005a54:	add    BYTE PTR [eax],al
11005a56:	add    BYTE PTR [eax],0x0
11005a59:	add    BYTE PTR [eax],0x0
11005a5c:	add    BYTE PTR [eax+0x800080],al
11005a62:	add    BYTE PTR [eax],al
11005a64:	add    BYTE PTR [eax],0x80
11005a67:	add    BYTE PTR [eax-0x7fffff80],al
11005a6d:	add    BYTE PTR [eax-0x1000000],0x0
11005a74:	add    bh,bh
11005a76:	add    BYTE PTR [eax],al
11005a78:	add    bh,bh
11005a7a:	inc    DWORD PTR [eax]
11005a7c:	inc    DWORD PTR [eax]
11005a7e:	add    BYTE PTR [eax],al
11005a80:	inc    DWORD PTR [eax]
11005a82:	inc    DWORD PTR [eax]
11005a84:	(bad)  
11005a85:	inc    DWORD PTR [eax]
11005a87:	add    al,al
11005a89:	rol    al,0x0
11005a8c:	(bad)  
11005a8d:	(bad)  
11005a8e:	inc    DWORD PTR [eax]
	...
11005ab4:	add    BYTE PTR [eax],al
11005ab6:	add    BYTE PTR [esi-0x20],ch
	...
11005ac5:	add    BYTE PTR [eax],al
11005ac7:	out    dx,eax
11005ac8:	inc    BYTE PTR [eax+0x0]
	...
11005ad3:	inc    eax
11005ad4:	inc    esp
11005ad5:	add    BYTE PTR [esi-0x1],cl
11005ad8:	jmp    eax
11005ada:	add    al,0x4
11005adc:	inc    eax
11005add:	add    BYTE PTR [eax],al
11005adf:	add    BYTE PTR [eax],al
11005ae1:	add    BYTE PTR [edi-0x15],al
11005ae4:	jnp    0x11005b46
11005ae6:	out    dx,eax
11005ae7:	(bad)  
11005ae8:	(bad)  
11005ae9:	inc    BYTE PTR [esi+0x77]
11005aec:	mov    esi,0xb4
11005af1:	add    BYTE PTR [ebx],cl
11005af3:	in     eax,dx
11005af4:	ja     0x11005b44
11005af6:	(bad)  
11005af7:	(bad)  
11005af8:	(bad)  
11005af9:	jmp    esi
11005afb:	mov    bh,0xd7
11005afd:	jo     0x11005aff
11005aff:	add    BYTE PTR [eax],al
11005b01:	add    BYTE PTR [edi],al
11005b03:	(bad)  [edi+ebp*8-0x1]
11005b07:	(bad)  
11005b08:	(bad)  
11005b09:	(bad)  
11005b0a:	inc    BYTE PTR [esi]
11005b0c:	jmp    0x11005af2
11005b0e:	add    BYTE PTR [eax],al
11005b10:	add    BYTE PTR [eax],al
11005b12:	dec    ebx
11005b13:	out    0x4e,al
11005b15:	(bad)  
11005b16:	out    dx,al
11005b17:	jmp    0x11005b90
11005b19:	out    dx,al
11005b1a:	jmp    edx
11005b1c:	pop    ebp
11005b1d:	jo     0x11005b1f
11005b1f:	add    BYTE PTR [eax],al
11005b21:	add    BYTE PTR [esi],cl
11005b23:	jo     0x11005b14
11005b25:	(bad)  
11005b26:	xlat   BYTE PTR ds:[ebx]
11005b27:	jnp    0x11005b04
11005b29:	fucomi st,st(7)
11005b2b:	inc    BYTE PTR [esi+0x74]
11005b2e:	add    BYTE PTR [eax],al
11005b30:	add    BYTE PTR [eax],al
11005b32:	push   es
11005b33:	dec    esi
11005b34:	(bad)  
11005b35:	jmp    0x11005b22
11005b37:	jmp    0x11005b24
11005b39:	jmp    0x11005b26
11005b3b:	jmp    ebp
11005b3d:	pusha  
11005b3e:	add    BYTE PTR [eax],al
11005b40:	add    BYTE PTR [eax],al
11005b42:	add    bh,ch
11005b44:	(bad)  
11005b45:	jmp    0x11005b32
11005b47:	fstp   TBYTE PTR [ebx+0x7b]
11005b4a:	mov    ebx,0xfeff
11005b4f:	add    BYTE PTR [eax],al
11005b51:	add    BYTE PTR [esi-0x1],cl
11005b54:	sti    
11005b55:	in     eax,dx
11005b56:	out    0xe7,eax
11005b58:	xlat   BYTE PTR ds:[ebx]
11005b59:	ja     0x11005b36
11005b5b:	jle    0x11005b5c
11005b5d:	in     al,0x0
11005b5f:	add    BYTE PTR [eax],al
11005b61:	add    bh,ch
11005b63:	(bad)  
11005b64:	in     eax,dx
11005b65:	out    0xbe,eax
11005b67:	mov    ebp,0xbebebdb7
11005b6c:	(bad)  
11005b6d:	inc    BYTE PTR [eax]
11005b6f:	add    BYTE PTR [eax],al
11005b71:	dec    esi
11005b72:	(bad)  
11005b73:	(bad)  
11005b74:	jmp    0x11005b63
11005b76:	out    0x7e,eax
11005b78:	out    dx,al
11005b79:	mov    esi,0xffffb7bd
11005b7e:	loope  0x11005b80
11005b80:	add    bh,ch
11005b82:	(bad)  
11005b83:	push   DWORD PTR [edi-0x22]
11005b86:	mov    esi,0xb7b7bdd7
11005b8b:	mov    bh,0xff
11005b8d:	(bad)  
11005b8e:	inc    BYTE PTR [eax]
11005b90:	add    bh,ch
11005b92:	(bad)  
11005b93:	jmp    edi
11005b95:	out    dx,al
11005b96:	out    0xee,eax
11005b98:	jle    0x11005b71
11005b9a:	jge    0x11005c12
11005b9c:	(bad)  
11005b9d:	(bad)  
11005b9e:	inc    BYTE PTR [eax]
11005ba0:	add    BYTE PTR [edi],cl
11005ba2:	(bad)  
11005ba3:	(bad)  
11005ba4:	in     eax,dx
11005ba5:	out    dx,al
11005ba6:	fsubp  st(5),st
11005ba8:	mov    esi,0xffbebebe
11005bad:	jmp    esi
11005baf:	add    BYTE PTR [eax],al
11005bb1:	add    bh,ch
11005bb3:	(bad)  
11005bb4:	out    dx,al
11005bb5:	out    dx,al
11005bb6:	out    dx,al
11005bb7:	out    dx,al
11005bb8:	out    dx,al
11005bb9:	fidivr WORD PTR [ebp+0xfeffbe]
11005bbf:	add    BYTE PTR [eax],al
11005bc1:	add    BYTE PTR [esi],cl
11005bc3:	(bad)  
11005bc4:	(bad)  
11005bc5:	out    dx,eax
11005bc6:	out    dx,al
11005bc7:	in     eax,dx
11005bc8:	jnp    0x11005bb5
11005bca:	in     eax,dx
11005bcb:	into   
11005bcc:	jmp    eax
11005bce:	add    BYTE PTR [eax],al
11005bd0:	add    BYTE PTR [eax],al
11005bd2:	add    bh,ch
11005bd4:	(bad)  
11005bd5:	out    dx,al
11005bd6:	out    dx,al
11005bd7:	out    dx,al
11005bd8:	in     eax,dx
11005bd9:	jle    0x11005b98
11005bdb:	out    dx,eax
11005bdc:	inc    BYTE PTR [eax]
11005bde:	add    BYTE PTR [eax],al
11005be0:	add    BYTE PTR [eax],al
11005be2:	pop    es
11005be3:	outs   dx,BYTE PTR ds:[esi]
11005be4:	(bad)  
11005be5:	out    dx,eax
11005be6:	out    dx,al
11005be7:	out    dx,al
11005be8:	jle    0x11005bd5
11005bea:	out    dx,al
11005beb:	out    dx,eax
11005bec:	in     al,0x74
11005bee:	add    BYTE PTR [eax],al
11005bf0:	add    BYTE PTR [eax],al
11005bf2:	dec    ebx
11005bf3:	jo     0x11005be4
11005bf5:	(bad)  
11005bf6:	out    dx,al
11005bf7:	fidivr WORD PTR [ebp+0x46feef7d]
11005bfd:	jo     0x11005bff
11005bff:	add    BYTE PTR [eax],al
11005c01:	add    BYTE PTR [esi],cl
11005c03:	aad    0x4e
11005c05:	(bad)  
11005c06:	(bad)  
11005c07:	out    dx,al
11005c08:	out    dx,al
11005c09:	out    dx,eax
11005c0a:	jmp    eax
11005c0c:	jle    0x11005bc2
11005c0e:	add    BYTE PTR [eax],al
11005c10:	add    BYTE PTR [eax],al
11005c12:	dec    ebx
11005c13:	jge    0x11005c85
11005c15:	out    dx,eax
11005c16:	(bad)  
11005c17:	(bad)  
11005c18:	(bad)  
11005c19:	(bad)  
11005c1a:	(bad)  
11005c1b:	jnp    0x11005c7a
11005c1d:	jo     0x11005c1f
11005c1f:	add    BYTE PTR [eax],al
11005c21:	add    BYTE PTR [edi],al
11005c23:	jmp    0x11005c10
11005c25:	dec    esi
11005c26:	(bad)  
11005c27:	(bad)  
11005c28:	(bad)  
11005c29:	jmp    ecx
11005c2b:	imul   ebp,ebp,0x74
11005c2e:	add    BYTE PTR [eax],al
11005c30:	add    BYTE PTR [eax],al
11005c32:	inc    esi
11005c33:	ja     0x11005c0c
11005c35:	jo     0x11005c26
11005c37:	(bad)  
11005c38:	(bad)  
11005c39:	inc    BYTE PTR [esi-0x1a]
11005c3c:	jmp    0x11005cae
11005c3e:	add    BYTE PTR [eax],al
11005c40:	add    BYTE PTR [eax],al
11005c42:	add    BYTE PTR [eax+eax*1],al
11005c45:	add    BYTE PTR [esi],cl
11005c47:	(bad)  
11005c48:	jmp    eax
11005c4a:	add    BYTE PTR [eax+eax*1],al
	...
11005c55:	add    BYTE PTR [eax],al
11005c57:	out    dx,eax
11005c58:	inc    BYTE PTR [eax]
	...
11005c66:	add    BYTE PTR [esi],cl
11005c68:	out    0x0,eax
	...
11005c8e:	add    BYTE PTR [eax],al
11005c90:	(bad)  
11005c91:	(bad)  
11005c92:	(bad)  
11005c93:	(bad)  
11005c94:	(bad)  
11005c95:	(bad)  
11005c96:	jg     0x11005c97
11005c98:	(bad)  
11005c99:	cld    
11005c9a:	aas    
11005c9b:	(bad)  
11005c9c:	(bad)  
11005c9d:	clc    
11005c9e:	pop    ds
11005c9f:	push   eax
11005ca1:	add    BYTE PTR [eax],al
11005ca3:	(bad)  
11005ca5:	add    BYTE PTR [eax],al
11005ca7:	(bad)  
11005ca9:	add    BYTE PTR [eax],al
11005cab:	(bad)  
11005cad:	add    BYTE PTR [eax],al
11005caf:	(bad)  
11005cb1:	add    BYTE PTR [eax],al
11005cb3:	(bad)  
11005cb5:	add    BYTE PTR [eax],al
11005cb7:	(bad)  
11005cb9:	add    BYTE PTR [eax],al
11005cbb:	(bad)  
11005cbd:	add    BYTE PTR [eax],al
11005cbf:	(bad)  
11005cc1:	add    BYTE PTR [eax],al
11005cc3:	pavgb  mm0,QWORD PTR [eax]
11005cc6:	add    BYTE PTR [edi],al
11005cc8:	rol    BYTE PTR [eax],0x0
11005ccb:	add    eax,DWORD PTR [eax-0x7fff0000]
11005cd1:	add    BYTE PTR [eax],al
11005cd3:	add    eax,eax
11005cd5:	add    BYTE PTR [eax],al
11005cd7:	add    esp,eax
11005cd9:	add    BYTE PTR [eax],al
11005cdb:	pop    es
11005cdc:	lock add BYTE PTR [eax],al
11005cdf:	(bad)  
11005ce1:	add    BYTE PTR [eax],al
11005ce3:	(bad)  
11005ce5:	add    BYTE PTR [eax],al
11005ce7:	(bad)  
11005ce9:	add    BYTE PTR [eax],al
11005ceb:	(bad)  
11005ced:	add    BYTE PTR [eax],al
11005cef:	(bad)  
11005cf1:	add    BYTE PTR [eax],al
11005cf3:	(bad)  
11005cf5:	add    BYTE PTR [eax],al
11005cf7:	(bad)  
11005cf9:	add    BYTE PTR [eax],al
11005cfb:	(bad)  
11005cfd:	add    BYTE PTR [eax],al
11005cff:	ud0    edi,eax
11005d02:	pop    ds
11005d03:	(bad)  
11005d04:	(bad)  
11005d05:	cld    
11005d06:	aas    
11005d07:	(bad)  
11005d08:	(bad)  
11005d09:	(bad)  
11005d0a:	jg     0x11005d0b
11005d0c:	(bad)  
11005d0d:	(bad)  
11005d0e:	(bad)  
11005d0f:	jmp    FWORD PTR [eax]
11005d11:	add    BYTE PTR [eax],al
11005d13:	add    BYTE PTR [eax],bl
11005d15:	add    BYTE PTR [eax],al
11005d17:	add    BYTE PTR [eax],dh
11005d19:	add    BYTE PTR [eax],al
11005d1b:	add    BYTE PTR [ecx],al
11005d1d:	add    BYTE PTR [eax+eax*1],al
	...
11005d3c:	add    BYTE PTR [eax],al
11005d3e:	add    BYTE PTR [eax],0x0
11005d41:	add    BYTE PTR [eax],0x0
11005d44:	add    BYTE PTR [eax+0x800080],al
11005d4a:	add    BYTE PTR [eax],al
11005d4c:	add    BYTE PTR [eax],0x80
11005d4f:	add    BYTE PTR [eax-0x7fffff80],al
11005d55:	add    BYTE PTR [eax-0x1000000],0x0
11005d5c:	add    bh,bh
11005d5e:	add    BYTE PTR [eax],al
11005d60:	add    bh,bh
11005d62:	inc    DWORD PTR [eax]
11005d64:	inc    DWORD PTR [eax]
11005d66:	add    BYTE PTR [eax],al
11005d68:	inc    DWORD PTR [eax]
11005d6a:	inc    DWORD PTR [eax]
11005d6c:	(bad)  
11005d6d:	inc    DWORD PTR [eax]
11005d6f:	add    al,al
11005d71:	rol    al,0x0
11005d74:	(bad)  
11005d75:	(bad)  
11005d76:	inc    DWORD PTR [eax]
	...
11005d88:	add    BYTE PTR [edi],al
	...
11005d92:	add    BYTE PTR [eax],al
11005d94:	add    BYTE PTR [edi-0x19],bh
11005d97:	add    BYTE PTR [eax],al
11005d99:	add    BYTE PTR [eax],al
11005d9b:	add    BYTE PTR [eax],al
11005d9d:	add    BYTE PTR [edx+0x46],al
11005da0:	add    eax,0x660ffef
11005da5:	push   es
11005da6:	add    BYTE PTR [eax],al
11005da8:	add    BYTE PTR [esi],al
11005daa:	mov    esi,0xffff6fb7
11005daf:	idiv   DWORD PTR [esi+0x40be]
11005db5:	add    dh,ch
11005db7:	gs (bad) 
11005db9:	(bad)  
11005dba:	(bad)  
11005dbb:	inc    DWORD PTR [edi+0x7d]
11005dbe:	inc    eax
11005dbf:	add    BYTE PTR [eax],al
11005dc1:	add    BYTE PTR [esi-0x411101a1],dh
11005dc7:	out    dx,eax
11005dc8:	repz mov bh,0x0
11005dcb:	add    BYTE PTR [eax],al
11005dcd:	add    al,0x77
11005dcf:	(bad)  
11005dd0:	fucomi st,st(3)
11005dd2:	fcmovnu st,st(3)
11005dd4:	jmp    DWORD PTR [edi+0x40]
11005dd7:	add    BYTE PTR [eax],al
11005dd9:	add    BYTE PTR [edi-0x2],cl
11005ddc:	jmp    0x11005dc9
11005dde:	jmp    0x11005dcb
11005de0:	jg     0x11005dc9
11005de2:	add    BYTE PTR [eax],al
11005de4:	add    BYTE PTR [edx],al
11005de6:	(bad)  
11005de7:	jmp    0x11005dd4
11005de9:	in     eax,dx
11005dea:	mov    bh,0xb7
11005dec:	mov    esi,0x70ff
11005df1:	jg     0x11005df2
11005df3:	in     eax,dx
11005df4:	jmp    0x11005ddd
11005df6:	fidivr WORD PTR [ebp+0xf0ffbe]
11005dfc:	pop    es
11005dfd:	(bad)  
11005dfe:	(bad)  
11005dff:	jge    0x11005dce
11005e01:	jmp    0x11005dee
11005e03:	jnp    0x11005df0
11005e05:	(bad)  
11005e06:	jmp    DWORD PTR [eax+0x0]
11005e09:	(bad)  
11005e0a:	(bad)  
11005e0b:	in     eax,dx
11005e0c:	out    dx,al
11005e0d:	out    0xed,eax
11005e0f:	jmp    0x11005dc8
11005e11:	(bad)  
11005e12:	push   DWORD PTR [eax+0x0]
11005e15:	jg     0x11005e16
11005e17:	out    dx,al
11005e18:	out    dx,al
11005e19:	(bad)  
11005e1b:	mov    esi,0xf1ffde
11005e20:	add    BYTE PTR [edi+edi*8],al
11005e23:	(bad)  
11005e24:	out    dx,al
11005e25:	out    dx,al
11005e26:	out    dx,al
11005e27:	mov    esi,0x20ffbe
11005e2c:	add    BYTE PTR [eax],al
11005e2e:	jg     0x11005e2e
11005e30:	out    dx,al
11005e31:	out    dx,al
11005e32:	mov    ebp,0xf6ee7d
11005e37:	add    BYTE PTR [eax],al
11005e39:	add    al,0x64
11005e3b:	(bad)  
11005e3c:	out    dx,al
11005e3d:	out    dx,al
11005e3e:	out    dx,al
11005e3f:	mov    esi,0x4056ff
11005e44:	add    BYTE PTR [eax],al
11005e46:	out    0x7f,eax
11005e48:	(bad)  
11005e49:	out    dx,al
11005e4a:	fsubp  st(7),st
11005e4c:	imul   DWORD PTR [esi+0x40]
11005e4f:	add    BYTE PTR [eax],al
11005e51:	add    al,0xb7
11005e53:	popa   
11005e54:	(bad)  
11005e55:	(bad)  
11005e56:	(bad)  
11005e57:	inc    DWORD PTR [edi-0x42]
11005e5a:	add    BYTE PTR [eax],al
11005e5c:	add    BYTE PTR [ebp*8-0x801a],al
11005e63:	lock jle 0x11005e44
11005e66:	inc    eax
11005e67:	add    BYTE PTR [eax],al
11005e69:	add    BYTE PTR [esp+eax*1],al
11005e6c:	add    bh,bh
11005e6e:	push   DWORD PTR [eax+0x4]
11005e71:	add    al,0x0
11005e73:	add    BYTE PTR [eax],al
11005e75:	add    BYTE PTR [eax],al
11005e77:	add    BYTE PTR [eax],al
11005e79:	jg     0x11005e6f
	...
11005e83:	add    BYTE PTR [eax],al
11005e85:	add    BYTE PTR [eax+0x0],dh
	...
11005e98:	(bad)  
11005e99:	(bad)  
11005e9a:	(bad)  
11005e9b:	(bad)  
11005e9c:	jmp    edi
11005e9e:	(bad)  
11005e9f:	(bad)  
11005ea0:	inc    ebx
11005ea2:	(bad)  
11005ea3:	jmp    eax
11005ea5:	add    BYTE PTR [edi],al
11005ea7:	jmp    eax
11005ea9:	add    BYTE PTR [edi],al
11005eab:	jmp    eax
11005ead:	add    BYTE PTR [edi],al
11005eaf:	jmp    eax
11005eb1:	add    BYTE PTR [edi],al
11005eb3:	jmp    eax
11005eb5:	add    BYTE PTR [edi],al
11005eb7:	jmp    eax
11005eb9:	add    BYTE PTR [edi],al
11005ebb:	jmp    eax
11005ebd:	add    BYTE PTR [edi],al
11005ebf:	inc    eax
11005ec1:	add    BYTE PTR [ebx],al
11005ec3:	inc    DWORD PTR [eax-0x7f00ff00]
11005ec9:	add    BYTE PTR [ecx],al
11005ecb:	inc    eax
11005ecd:	add    BYTE PTR [ebx],al
11005ecf:	jmp    eax
11005ed1:	add    BYTE PTR [edi],al
11005ed3:	jmp    eax
11005ed5:	add    BYTE PTR [edi],al
11005ed7:	jmp    eax
11005ed9:	add    BYTE PTR [edi],al
11005edb:	jmp    eax
11005edd:	add    BYTE PTR [edi],al
11005edf:	jmp    eax
11005ee1:	add    BYTE PTR [edi],al
11005ee3:	jmp    eax
11005ee5:	add    BYTE PTR [edi],al
11005ee7:	jmp    eax
11005ee9:	add    BYTE PTR [edi],al
11005eeb:	(bad)  
11005eec:	inc    ebx
11005eee:	(bad)  
11005eef:	(bad)  
11005ef0:	jmp    edi
11005ef2:	(bad)  
11005ef3:	(bad)  
11005ef4:	(bad)  
11005ef5:	(bad)  
11005ef6:	(bad)  
11005ef7:	jmp    FWORD PTR [eax]
11005ef9:	add    BYTE PTR [eax],al
11005efb:	add    BYTE PTR [eax],dl
11005efd:	add    BYTE PTR [eax],al
11005eff:	add    BYTE PTR [eax],ah
11005f01:	add    BYTE PTR [eax],al
11005f03:	add    BYTE PTR [ecx],al
11005f05:	add    BYTE PTR [eax+eax*1],al
	...
11005f24:	add    BYTE PTR [eax],al
11005f26:	add    BYTE PTR [eax],0x0
11005f29:	add    BYTE PTR [eax],0x0
11005f2c:	add    BYTE PTR [eax+0x800080],al
11005f32:	add    BYTE PTR [eax],al
11005f34:	add    BYTE PTR [eax],0x80
11005f37:	add    BYTE PTR [eax-0x7fffff80],al
11005f3d:	add    BYTE PTR [eax-0x1000000],0x0
11005f44:	add    bh,bh
11005f46:	add    BYTE PTR [eax],al
11005f48:	add    bh,bh
11005f4a:	inc    DWORD PTR [eax]
11005f4c:	inc    DWORD PTR [eax]
11005f4e:	add    BYTE PTR [eax],al
11005f50:	inc    DWORD PTR [eax]
11005f52:	inc    DWORD PTR [eax]
11005f54:	(bad)  
11005f55:	inc    DWORD PTR [eax]
11005f57:	add    al,al
11005f59:	rol    al,0x0
11005f5c:	(bad)  
11005f5d:	(bad)  
11005f5e:	inc    DWORD PTR [eax]
11005f60:	add    BYTE PTR [eax],al
11005f62:	add    BYTE PTR [esi],cl
11005f64:	jo     0x11005f66
11005f66:	add    BYTE PTR [eax],al
11005f68:	add    BYTE PTR [eax],al
11005f6a:	add    dh,ch
11005f6c:	jle    0x11005f6e
11005f6e:	add    BYTE PTR [eax],al
11005f70:	add    BYTE PTR ds:0x46fe7f64,al
11005f76:	inc    esp
11005f77:	add    BYTE PTR [eax],al
11005f79:	outs   dx,BYTE PTR ds:[esi]
11005f7a:	mov    esi,0xe4e4ffff
11005f7f:	add    BYTE PTR [eax],al
11005f81:	inc    esi
11005f82:	out    dx,eax
11005f83:	out    dx,al
11005f84:	mov    bh,0xf7
11005f86:	jbe    0x11005f88
11005f88:	add    BYTE PTR [esi-0x5],cl
11005f8b:	fucomi st,st(3)
11005f8d:	(bad)  
11005f8f:	add    BYTE PTR [edi],al
11005f91:	out    dx,al
11005f92:	out    dx,al
11005f93:	in     eax,dx
11005f94:	mov    esi,0xeee0f7be
11005f99:	(bad)  
11005f9a:	in     eax,dx
11005f9b:	mov    esi,0xe7ffb7be
11005fa0:	jle    0x11005fa1
11005fa2:	out    dx,al
11005fa3:	out    dx,al
11005fa4:	xlat   BYTE PTR ds:[ebx]
11005fa5:	jnp    0x11005fa6
11005fa7:	jle    0x11005fb7
11005fa9:	jg     0x11005f99
11005fab:	out    dx,al
11005fac:	jmp    0x11005f9b
11005fae:	(bad)  
11005faf:	loopne 0x11005fb1
11005fb1:	inc    edi
11005fb2:	(bad)  
11005fb3:	in     eax,dx
11005fb4:	jmp    0x11005fa5
11005fb6:	loopne 0x11005fb8
11005fb8:	add    BYTE PTR [edi-0x12],ah
11005fbb:	out    dx,al
11005fbc:	out    dx,al
11005fbd:	div    DWORD PTR [esi+0x6e4e0000]
11005fc3:	(bad)  
11005fc4:	jmp    esi
11005fc6:	out    0x0,al
11005fc8:	add    BYTE PTR [esi],al
11005fca:	push   eax
11005fcb:	out    dx,eax
11005fcc:	test   DWORD PTR [esi],0x50
11005fd2:	add    BYTE PTR [esi-0x12],bh
11005fd5:	add    BYTE PTR [eax],al
11005fd7:	add    BYTE PTR [eax],al
11005fd9:	add    BYTE PTR [eax],al
11005fdb:	push   cs
11005fdc:	jo     0x11005fde
11005fde:	add    BYTE PTR [eax],al
11005fe0:	(bad)  
11005fe1:	jg     0x11005fe2
11005fe3:	(bad)  
11005fe4:	cld    
11005fe5:	aas    
11005fe6:	(bad)  
11005fe7:	inc    eax
11005fe9:	add    edi,edi
11005feb:	inc    eax
11005fed:	add    edi,edi
11005fef:	inc    eax
11005ff1:	add    edi,edi
11005ff3:	inc    eax
11005ff5:	add    edi,edi
11005ff7:	inc    DWORD PTR [eax+0xffff01]
11005ffd:	add    bh,bh
11005fff:	inc    DWORD PTR [eax]
11006001:	add    bh,bh
11006003:	inc    DWORD PTR [eax-0x3f0000ff]
11006009:	add    edi,edi
1100600b:	inc    eax
1100600d:	add    edi,edi
1100600f:	inc    eax
11006011:	add    edi,edi
11006013:	inc    eax
11006015:	add    edi,edi
11006017:	(bad)  
11006018:	cld    
11006019:	aas    
1100601a:	(bad)  
1100601b:	(bad)  
1100601c:	(bad)  
1100601d:	jg     0x1100601e
1100601f:	jmp    FWORD PTR [eax]
11006021:	add    BYTE PTR [eax],al
11006023:	add    BYTE PTR [eax+0x0],al
11006026:	add    BYTE PTR [eax],al
11006028:	add    BYTE PTR [eax],0x0
1100602b:	add    BYTE PTR [ecx],al
1100602d:	add    BYTE PTR [eax],cl
	...
1100604b:	add    BYTE PTR [esi],al
1100604d:	add    eax,DWORD PTR [edx]
1100604f:	add    BYTE PTR [esi],al
11006051:	push   es
11006052:	push   es
11006053:	add    BYTE PTR [ecx],cl
11006055:	or     DWORD PTR [ecx],ecx
11006057:	add    BYTE PTR [esp+ecx*1],cl
1100605a:	or     al,0x0
1100605c:	push   ds
1100605d:	adc    DWORD PTR [edx],ecx
1100605f:	add    BYTE PTR [esp+edx*1],dl
11006062:	adc    al,0x0
11006064:	sbb    ebx,DWORD PTR [ebx]
11006066:	sbb    eax,DWORD PTR [eax]
11006068:	push   ds
11006069:	push   ds
1100606a:	push   ds
1100606b:	add    BYTE PTR [edi],ch
1100606d:	sbb    dl,BYTE PTR [ecx]
1100606f:	add    BYTE PTR [eax],dh
11006071:	sbb    dl,BYTE PTR [ecx]
11006073:	add    BYTE PTR [ecx],ah
11006075:	and    DWORD PTR [ecx],esp
11006077:	add    BYTE PTR [esp],ah
1100607a:	and    al,0x0
1100607c:	sub    ch,BYTE PTR [edx]
1100607e:	sub    al,BYTE PTR [eax]
11006080:	sub    eax,0x31002d2d
11006085:	xor    DWORD PTR [ecx],esi
11006087:	add    BYTE PTR [esp+esi*1],dh
1100608a:	xor    al,0x0
1100608c:	cmp    DWORD PTR [ecx],edi
1100608e:	cmp    DWORD PTR [eax],eax
11006090:	cmp    eax,0x4f003d3d
11006095:	sub    al,0x1d
11006097:	add    BYTE PTR [eax+0x2d],dl
1100609a:	sbb    eax,0x293f7000
1100609f:	add    BYTE PTR [ecx+0x41],al
110060a2:	inc    ecx
110060a3:	add    BYTE PTR [esi+0x46],al
110060a6:	inc    esi
110060a7:	add    BYTE PTR [edx+0x4a],cl
110060aa:	dec    edx
110060ab:	add    BYTE PTR [edi+0x4f],cl
110060ae:	dec    edi
110060af:	add    BYTE PTR [ecx+0x51],dl
110060b2:	push   ecx
110060b3:	add    BYTE PTR [ebp+0x55],dl
110060b6:	push   ebp
110060b7:	add    BYTE PTR [esp+ebx*2+0x5c],bl
110060bb:	add    BYTE PTR [ecx+0x61],ah
110060be:	popa   
110060bf:	add    BYTE PTR [esi+0x66],ah
110060c2:	data16 add BYTE PTR [eax+0x68],ch
110060c6:	push   0x6c6c6c00
110060cb:	add    BYTE PTR [eax+0x70],dh
110060ce:	jo     0x110060d0
110060d0:	jbe    0x11006148
110060d2:	jbe    0x110060d4
110060d4:	jp     0x11006150
110060d6:	jp     0x110060d8
110060d8:	jg     0x11006159
110060da:	jg     0x110060dc
110060dc:	xchg   edx,eax
110060dd:	push   edx
110060de:	ss add al,cl
110060e1:	push   edx
110060e2:	sub    eax,0x2f55ca00
110060e7:	add    dl,cl
110060e9:	push   ebp
110060ea:	xor    BYTE PTR [eax],al
110060ec:	int3   
110060ed:	pop    eax
110060ee:	xor    DWORD PTR [eax],eax
110060f0:	retf   
110060f1:	pop    eax
110060f2:	xor    al,0x0
110060f4:	into   
110060f5:	pop    edx
110060f6:	xor    al,0x0
110060f8:	into   
110060f9:	pop    esi
110060fa:	cmp    al,BYTE PTR [eax]
110060fc:	rcr    BYTE PTR [esi+esi*1+0x0],1
11006100:	rcr    BYTE PTR [edi+0x38],cl
11006103:	add    bl,dl
11006105:	pusha  
11006106:	cmp    DWORD PTR [eax],eax
11006108:	aam    0x62
1100610a:	cmp    al,BYTE PTR [eax]
1100610c:	aad    0x64
1100610e:	cmp    eax,DWORD PTR [eax]
11006110:	(bad)  
11006111:	gs cmp eax,0x3e67d800
11006117:	add    al,bl
11006119:	push   0x64b1003f
1100611e:	inc    ecx
1100611f:	add    dh,cl
11006121:	arpl   WORD PTR [ebx+0x0],ax
11006124:	shr    BYTE PTR [edi+eax*2+0x0],0xc1
11006129:	ins    DWORD PTR es:[edi],dx
1100612a:	dec    eax
1100612b:	add    ch,dl
1100612d:	push   0x6bd70042
11006132:	inc    esp
11006133:	add    cl,bl
11006135:	imul   eax,DWORD PTR [eax+0x0],0x436bdc
1100613c:	fld    TBYTE PTR [ebx+eax*2+0x0]
11006140:	fsubr  QWORD PTR [edx+eax*2+0x0]
11006144:	(bad)  [esi+0x44]
11006147:	add    dl,cl
11006149:	jb     0x11006196
1100614b:	add    dh,bl
1100614d:	jo     0x11006195
1100614f:	add    bh,dl
11006151:	jo     0x110061a0
11006153:	add    bh,bl
11006155:	jb     0x1100619f
11006157:	add    bl,dl
11006159:	je     0x110061b1
1100615b:	add    ah,bl
1100615d:	ja     0x110061b2
1100615f:	add    ah,bl
11006161:	jl     0x110061b5
11006163:	add    al,ah
11006165:	jno    0x110061ad
11006167:	add    al,ah
11006169:	jb     0x110061b3
1100616b:	add    cl,ah
1100616d:	je     0x110061b9
1100616f:	add    ah,ah
11006171:	ja     0x110061be
11006173:	add    dl,ah
11006175:	jbe    0x110061c3
11006177:	add    ah,ah
11006179:	ja     0x110061c7
1100617b:	add    bl,ah
1100617d:	js     0x110061cc
1100617f:	add    ah,ah
11006181:	jns    0x110061d0
11006183:	add    al,ch
11006185:	jl     0x110061d6
11006187:	add    bl,ah
11006189:	jns    0x110061db
1100618b:	add    ch,ah
1100618d:	jnp    0x110061df
1100618f:	add    dh,ah
11006191:	jl     0x110061e4
11006193:	add    bh,ah
11006195:	jg     0x110061eb
11006197:	add    al,ch
11006199:	jle    0x110061ec
1100619b:	add    al,ch
1100619d:	jg     0x110061f3
1100619f:	add    ch,ah
110061a1:	adc    BYTE PTR [ebp+0x0],0xeb
110061a5:	adc    BYTE PTR [ebx+0x0],0xe9
110061a9:	adc    DWORD PTR [ebp+0x0],0x5482ec
110061b0:	in     eax,dx
110061b1:	test   BYTE PTR [esi+0x0],dl
110061b4:	jmp    0xfc00ba3b
110061b9:	test   BYTE PTR [eax+0x0],bl
110061bc:	in     eax,dx
110061bd:	test   DWORD PTR [eax+0x0],ebx
110061c0:	jmp    0x11006149
110061c2:	pop    esp
110061c3:	add    bh,ch
110061c5:	mov    BYTE PTR [ebx+0x0],bl
110061c8:	in     eax,dx
110061c9:	mov    DWORD PTR [ebp+0x0],ebx
110061cc:	icebp  
110061cd:	mov    BYTE PTR [edx+0x0],bl
110061d0:	hlt    
110061d1:	mov    bl,BYTE PTR [ebx+0x0]
110061d4:	repnz mov ebx,DWORD PTR [eax+eax*1-0xe]
110061d9:	mov    WORD PTR [esi+0x0],ds
110061dc:	hlt    
110061dd:	lea    ebx,[esi+0x0]
110061e0:	fild   DWORD PTR [edx-0x7411ff9b]
110061e6:	pusha  
110061e7:	add    dh,ch
110061e9:	mov    WORD PTR [ecx+0x0],fs
110061ec:	loop   0x1100617a
110061ee:	ins    DWORD PTR es:[edi],dx
110061ef:	add    cl,dh
110061f1:	lea    esp,[ecx+0x0]
110061f4:	hlt    
110061f5:	mov    fs,WORD PTR [ecx+0x0]
110061f8:	lock mov fs,WORD PTR [eax+eax*1-0xc]
110061fd:	nop
110061fe:	arpl   WORD PTR [eax],ax
11006200:	icebp  
11006201:	nop
11006202:	gs add ah,dh
11006205:	xchg   ecx,eax
11006206:	gs add ah,dh
11006209:	xchg   esp,eax
1100620a:	addr16 add dl,dh
1100620d:	xchg   edx,eax
1100620e:	push   0x6893f400
11006213:	add    dl,dh
11006215:	xchg   esp,eax
11006216:	push   0x0
11006218:	hlt    
11006219:	xchg   ebp,eax
1100621a:	imul   eax,DWORD PTR [eax],0x6c96f4
11006220:	hlt    
11006221:	cwde   
11006222:	outs   dx,BYTE PTR ds:[esi]
11006223:	add    ah,dh
11006225:	call   0x77:0x9cf10071
1100622c:	cmc    
1100622d:	popf   
1100622e:	jne    0x11006230
11006230:	cmc    
11006231:	lahf   
11006232:	js     0x11006234
11006234:	cmc    
11006235:	mov    al,ds:0xa2f50079
1100623a:	jl     0x1100623c
1100623c:	cmc    
1100623d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100623e:	jle    0x11006240
11006240:	loopne 0x110061dd
11006242:	xchg   BYTE PTR [eax],al
11006244:	jecxz  0x110061e6
11006246:	mov    al,BYTE PTR [eax]
11006248:	mul    BYTE PTR [esi-0x5809ff7e]
1100624e:	test   BYTE PTR [eax],al
11006250:	imul   BYTE PTR [eax-0x5509ff7b]
11006256:	mov    BYTE PTR [eax],al
11006258:	imul   BYTE PTR [edx+ecx*4-0x72510a00]
1100625f:	add    bl,ah
11006261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11006262:	xchg   ebx,eax
11006263:	add    bl,ch
11006265:	stos   BYTE PTR es:[edi],al
11006266:	xchg   ebx,eax
11006267:	add    bh,ch
11006269:	scas   eax,DWORD PTR es:[edi]
1100626a:	xchg   esi,eax
1100626b:	add    bh,dh
1100626d:	mov    cl,0x92
1100626f:	add    bh,dh
11006271:	mov    bl,0x94
11006273:	add    bh,dh
11006275:	mov    ah,0x96
11006277:	add    al,bh
11006279:	mov    cl,0x91
1100627b:	add    al,bh
1100627d:	mov    ch,0x96
1100627f:	add    bh,dh
11006281:	mov    dh,0x99
11006283:	add    al,bh
11006285:	mov    dh,0x98
11006287:	add    bh,dh
11006289:	mov    eax,0xb8f8009b
1100628e:	fwait
1100628f:	add    al,bh
11006291:	mov    ecx,0xbdf4009d
11006296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11006297:	add    al,bh
11006299:	mov    ebx,0xbdf800a0
1100629e:	mov    eax,ds:0xa4bef800
110062a3:	add    al,bh
110062a5:	shl    BYTE PTR [esi-0x563d0800],0x0
110062ac:	stc    
110062ad:	lds    ebp,FWORD PTR [ebp-0x41351100]
110062b3:	add    cl,bh
110062b5:	enter  0xb1,0xf9
110062b9:	leave  
110062ba:	mov    ah,0x0
110062bc:	stc    
110062bd:	int3   
110062be:	mov    bh,0x0
110062c0:	stc    
110062c1:	int3   
110062c2:	mov    eax,0xbccff900
110062c7:	add    cl,bh
110062c9:	sar    BYTE PTR [ebp-0x3c2e0b00],1
110062cf:	add    dl,bh
110062d1:	rol    edx,cl
110062d3:	add    dl,bh
110062d5:	aam    0xc2
110062d7:	add    dl,bh
110062d9:	aad    0xc5
110062db:	add    dl,bh
110062dd:	fxch   st(2)
110062df:	add    bl,bh
110062e1:	fcmovne st,st(4)
110062e3:	add    ah,bh
110062e5:	fcmovne st,st(5)
110062e7:	add    bl,bh
110062e9:	fmul   st(6),st
110062eb:	add    bl,bh
110062ed:	(bad)  
110062ef:	add    ah,bh
110062f1:	fst    st(0)
110062f3:	add    ah,bh
110062f5:	loop   0x110062cd
110062f7:	add    dh,dh
110062f9:	loop   0x110062d7
110062fb:	add    bl,ch
110062fd:	jmp    0x110062ea
110062ff:	add    ah,ch
11006301:	in     al,dx
11006302:	in     al,dx
11006303:	add    bh,dh
11006305:	call   0xfaf763ed
1100630a:	in     al,0x0
1100630c:	sti    
1100630d:	in     eax,dx
1100630e:	out    0x0,eax
11006310:	std    
11006311:	in     al,dx
11006312:	in     al,0x0
11006314:	sti    
11006315:	in     eax,dx
11006316:	call   0xfbf15f1b
1100631b:	add    ch,bh
1100631d:	repz out dx,eax
1100631f:	add    ch,bh
11006321:	cmc    
11006322:	icebp  
11006323:	add    ah,bh
11006325:	clc    
11006326:	test   DWORD PTR [eax],0xf9fafd
1100632c:	(bad)  
1100632d:	cld    
1100632e:	sti    
1100632f:	add    ch,bh
11006331:	std    
11006332:	std    
11006333:	add    bh,bh
11006335:	jno    0x110062d3
11006337:	add    bh,bh
11006339:	xchg   ecx,eax
1100633a:	mov    dl,0x0
1100633c:	push   DWORD PTR [ecx-0x2e00ff38]
11006342:	fild   WORD PTR [eax]
11006344:	(bad)  
11006345:	(bad)  
11006346:	inc    DWORD PTR [eax]
11006348:	add    BYTE PTR [eax],al
1100634a:	add    BYTE PTR [eax],al
1100634c:	das    
1100634d:	add    BYTE PTR [eax],ah
1100634f:	add    BYTE PTR [eax+0x0],dl
11006352:	add    BYTE PTR ss:[eax+0x0],dh
11006356:	dec    esp
11006357:	add    BYTE PTR [eax-0x4fff9e00],dl
1100635d:	add    BYTE PTR [eax+0x0],bh
11006360:	iret   
11006361:	add    BYTE PTR [esi-0x5bff1000],cl
11006367:	add    bh,bh
11006369:	adc    DWORD PTR [ebx-0x41ce0100],esi
1100636f:	add    bh,bh
11006371:	push   ecx
11006372:	mov    DWORD PTR [eax],0xd171ff
11006378:	call   DWORD PTR [ecx-0x4e00ff24]
1100637e:	in     eax,0x0
11006380:	call   ecx
11006382:	lock add bh,bh
11006385:	(bad)  
11006386:	inc    DWORD PTR [eax]
11006388:	add    BYTE PTR [eax],al
1100638a:	add    BYTE PTR [eax],al
1100638c:	sub    al,0x0
1100638e:	das    
1100638f:	add    BYTE PTR [ebx+0x0],cl
11006392:	push   eax
11006393:	add    BYTE PTR [ecx+0x0],ch
11006396:	jo     0x11006398
11006398:	xchg   DWORD PTR [eax],eax
1100639a:	nop
1100639b:	add    BYTE PTR [ebp-0x3bff5000],ah
110063a1:	add    bh,cl
110063a3:	add    cl,ah
110063a5:	add    al,dh
110063a7:	add    al,dh
110063a9:	adc    edi,edi
110063ab:	add    dl,dh
110063ad:	xor    edi,edi
110063af:	add    ah,dh
110063b1:	push   ecx
110063b2:	inc    DWORD PTR [eax]
110063b4:	div    BYTE PTR [ecx-0x1]
110063b7:	add    bh,dh
110063b9:	xchg   ecx,eax
110063ba:	inc    DWORD PTR [eax]
110063bc:	stc    
110063bd:	mov    cl,0xff
110063bf:	add    bl,bh
110063c1:	sar    edi,1
110063c3:	add    bh,bh
110063c5:	(bad)  
110063c6:	inc    DWORD PTR [eax]
110063c8:	add    BYTE PTR [eax],al
110063ca:	add    BYTE PTR [eax],al
110063cc:	sbb    eax,DWORD PTR [eax]
110063ce:	das    
110063cf:	add    BYTE PTR ds:0x3f005000,ch
110063d5:	add    BYTE PTR [eax+0x0],dh
110063d8:	push   edx
110063d9:	add    BYTE PTR [eax-0x4fff9d00],dl
110063df:	add    BYTE PTR [esi+0x0],dh
110063e2:	iret   
110063e3:	add    BYTE PTR [eax-0x66ff1000],cl
110063e9:	adc    edi,edi
110063eb:	add    BYTE PTR [esi-0x4bff00cf],ah
110063f1:	push   ecx
110063f2:	inc    DWORD PTR [eax]
110063f4:	ret    0xff71
110063f7:	add    bh,cl
110063f9:	xchg   ecx,eax
110063fa:	inc    DWORD PTR [eax]
110063fc:	fdiv   QWORD PTR [ecx-0x2e14ff01]
11006402:	inc    DWORD PTR [eax]
11006404:	(bad)  
11006405:	(bad)  
11006406:	inc    DWORD PTR [eax]
11006408:	add    BYTE PTR [eax],al
1100640a:	add    BYTE PTR [eax],al
1100640c:	or     BYTE PTR [eax],al
1100640e:	das    
1100640f:	add    BYTE PTR [esi],cl
11006411:	add    BYTE PTR [eax+0x0],dl
11006414:	adc    eax,0x1b007000
11006419:	add    BYTE PTR [eax-0x4fffdf00],dl
1100641f:	add    BYTE PTR [esi],ah
11006421:	add    bh,cl
11006423:	add    BYTE PTR [eax+eax*1],ch
11006426:	lock add BYTE PTR [esi],bh
11006429:	adc    edi,edi
1100642b:	add    BYTE PTR [eax+0x31],bl
1100642e:	inc    DWORD PTR [eax]
11006430:	jno    0x11006483
11006432:	inc    DWORD PTR [eax]
11006434:	mov    WORD PTR [ecx-0x1],?
11006437:	add    BYTE PTR [esi-0x40ff006f],ah
1100643d:	mov    cl,0xff
1100643f:	add    dl,bl
11006441:	sar    edi,1
11006443:	add    bh,bh
11006445:	(bad)  
11006446:	inc    DWORD PTR [eax]
	...
110064a4:	add    BYTE PTR [eax],al
110064a6:	add    BYTE PTR [ebx],al
110064a8:	add    eax,DWORD PTR [eax]
	...
110064e6:	add    al,BYTE PTR [eax]
110064e8:	add    BYTE PTR [edx],al
	...
11006522:	add    BYTE PTR [eax],al
11006524:	add    BYTE PTR [edx],al
11006526:	add    BYTE PTR [eax],dl
11006528:	sldt   WORD PTR [edx]
	...
11006563:	add    BYTE PTR [edx],al
11006565:	add    BYTE PTR [eax],dl
11006567:	scas   al,BYTE PTR es:[edi]
11006568:	lods   eax,DWORD PTR ds:[esi]
11006569:	sldt   WORD PTR [edx]
	...
110065a0:	add    BYTE PTR [eax],al
110065a2:	add    BYTE PTR [edx],al
110065a4:	add    BYTE PTR [eax],dl
110065a6:	scas   al,BYTE PTR es:[edi]
110065a7:	mov    edx,0xfadba
110065ac:	add    al,BYTE PTR [eax]
	...
110065e2:	add    DWORD PTR [eax],eax
110065e4:	adc    BYTE PTR [esi-0x45404046],ch
110065ea:	lods   eax,DWORD PTR ds:[esi]
110065eb:	sldt   WORD PTR [ecx]
	...
1100661e:	add    BYTE PTR [eax],al
11006620:	add    BYTE PTR [ecx],al
11006622:	add    BYTE PTR [eax],dl
11006624:	scas   al,BYTE PTR es:[edi]
11006625:	mov    edx,0xbababfba
1100662a:	mov    edi,0x1000fad
	...
1100665f:	add    BYTE PTR [eax],al
11006661:	add    BYTE PTR [eax],dl
11006663:	scas   al,BYTE PTR es:[edi]
11006664:	mov    edx,0xbabababa
11006669:	mov    edx,0xfadbaba
	...
1100669e:	add    BYTE PTR [eax],al
110066a0:	add    BYTE PTR [eax],dl
110066a2:	scas   al,BYTE PTR es:[edi]
110066a3:	mov    edi,0xbfbfbabf
110066a8:	mov    edi,0xbfbfbfba
110066ad:	lods   eax,DWORD PTR ds:[esi]
110066ae:	sldt   WORD PTR [eax]
	...
110066d1:	add    BYTE PTR [edx+0x62],ah
110066d4:	bound  ebx,QWORD PTR [edi+0x5c]
110066d7:	inc    esi
110066d8:	inc    eax
110066d9:	xor    eax,0xa141525
110066de:	add    DWORD PTR [eax],eax
110066e0:	adc    BYTE PTR [esi-0x45404041],ch
110066e6:	mov    edx,0xbfbabfbf
110066eb:	mov    edi,0xfadbfbf
110066f0:	add    BYTE PTR [ecx],al
110066f2:	or     dl,BYTE PTR [edx*1+0x46403525]
110066f9:	pop    ebx
110066fa:	popa   
110066fb:	popa   
110066fc:	bound  esp,QWORD PTR [edx+0x0]
	...
1100670f:	add    BYTE PTR [eax],al
11006711:	add    BYTE PTR [edx+0x61],ah
11006714:	pop    edi
11006715:	pop    eax
11006716:	inc    esi
11006717:	inc    eax
11006718:	xor    eax,0xa141525
1100671d:	add    DWORD PTR [eax],eax
1100671f:	adc    BYTE PTR [esi-0x40404541],ch
11006725:	mov    edx,0xbabfbfba
1100672a:	mov    edi,0xbabfbfbf
1100672f:	scas   al,BYTE PTR es:[edi]
11006730:	sldt   WORD PTR [ecx]
11006733:	or     dl,BYTE PTR [edx*1+0x46403525]
1100673a:	pop    esp
1100673b:	popa   
1100673c:	popa   
1100673d:	bound  eax,QWORD PTR [eax]
	...
1100674f:	add    BYTE PTR [eax],al
11006751:	add    BYTE PTR [edx+0x5f],ah
11006754:	pop    esp
11006755:	inc    esi
11006756:	inc    eax
11006757:	xor    eax,0xa141525
1100675c:	add    DWORD PTR [eax],eax
1100675e:	adc    BYTE PTR [esi-0x40464041],ch
11006764:	mov    edx,0xbabababf
11006769:	mov    edx,0xbfbfbfbf
1100676e:	mov    edx,0xfadba
11006773:	add    DWORD PTR [edx],ecx
11006775:	adc    al,0x15
11006777:	and    eax,0x58464035
1100677c:	pop    edi
1100677d:	bound  eax,QWORD PTR [eax]
	...
1100678f:	add    BYTE PTR [eax],al
11006791:	add    BYTE PTR [ecx+0x5b],ah
11006794:	inc    esi
11006795:	inc    eax
11006796:	xor    eax,0xa141525
1100679b:	add    DWORD PTR [eax],eax
1100679d:	adc    BYTE PTR [esi-0x40454041],ch
110067a3:	mov    edi,0xbfbabfba
110067a8:	mov    edx,0xbfbabfba
110067ad:	mov    edx,0xadbababf
110067b2:	sldt   WORD PTR [ecx]
110067b5:	or     dl,BYTE PTR [edx*1+0x46403525]
110067bc:	pop    esp
110067bd:	pop    edi
	...
110067d2:	pop    edx
110067d3:	inc    esi
110067d4:	inc    eax
110067d5:	xor    eax,0xa141525
110067da:	add    DWORD PTR [eax],eax
110067dc:	adc    BYTE PTR [esi-0x40454046],ch
110067e2:	mov    edx,0xbababfbf
110067e7:	mov    edi,0xbabfbaba
110067ec:	mov    edx,0xbabababf
110067f1:	mov    edx,0x1000fae
110067f6:	or     dl,BYTE PTR [edx*1+0x46403525]
110067fd:	pop    ebx
	...
11006812:	inc    esi
11006813:	inc    eax
11006814:	xor    eax,0xa141525
11006819:	add    DWORD PTR [eax],eax
1100681b:	adc    BYTE PTR [esi-0x45454546],ch
11006821:	mov    edx,0xbabfbabf
11006826:	mov    edi,0xbababfba
1100682b:	mov    edx,0xbabfbfbf
11006830:	mov    edx,0xfadbaba
11006835:	add    BYTE PTR [ecx],al
11006837:	or     dl,BYTE PTR [edx*1+0x46403525]
	...
11006852:	inc    eax
11006853:	xor    eax,0xa141525
11006858:	add    DWORD PTR [eax],eax
1100685a:	adc    BYTE PTR [esi-0x40404046],ch
11006860:	mov    edx,0x87a1b7bf
11006865:	imul   eax,DWORD PTR [ebp+0x3a],0x7f664239
1100686c:	call   0xbaba:0xbfbabfb7
11006873:	mov    edi,0x1000fad
11006878:	or     DWORD PTR [ebx],edx
1100687a:	adc    eax,0x403525
	...
1100688f:	add    BYTE PTR [eax],al
11006891:	add    BYTE PTR ds:0xa141525,dh
11006897:	add    DWORD PTR [eax],eax
11006899:	adc    BYTE PTR [esi-0x45404546],ch
1100689f:	mov    edx,0x415088b3
110068a4:	cmp    esi,DWORD PTR ds:[ebx]
110068a7:	xor    dh,BYTE PTR [eax]
110068a9:	das    
110068aa:	sub    eax,0x7e2c292b
110068af:	mov    al,0xba
110068b1:	mov    edx,0xadbfbabf
110068b6:	sldt   WORD PTR [ecx]
110068b9:	or     dl,BYTE PTR [ebx]
110068bb:	adc    eax,0x3525
	...
110068d0:	add    BYTE PTR [eax],al
110068d2:	and    eax,0x10a1415
110068d7:	add    BYTE PTR [eax],dl
110068d9:	scas   al,BYTE PTR es:[edi]
110068da:	mov    edi,0xb9bfbabf
110068df:	xchg   ebx,eax
110068e0:	push   ebp
110068e1:	dec    edx
110068e2:	dec    edx
110068e3:	dec    eax
110068e4:	aas    
110068e5:	aas    
110068e6:	cmp    al,0x33
110068e8:	xor    dh,BYTE PTR [ecx]
110068ea:	cs sub eax,0x2a28292b
110068f0:	xchg   BYTE PTR [eax-0x40404046],bh
110068f6:	lods   eax,DWORD PTR ds:[esi]
110068f7:	sldt   WORD PTR [ecx]
110068fa:	or     DWORD PTR [edx*1+0x25],edx
	...
11006911:	add    BYTE PTR ds:0x10a14,dl
11006917:	adc    BYTE PTR [esi-0x45454041],ch
1100691d:	mov    ah,0x78
1100691f:	push   edi
11006920:	dec    edi
11006921:	dec    edi
11006922:	dec    esp
11006923:	dec    ecx
11006924:	dec    eax
11006925:	inc    edi
11006926:	aas    
11006927:	cmp    al,0x34
11006929:	xor    dh,BYTE PTR [eax]
1100692b:	das    
1100692c:	sub    eax,0x2628292b
11006931:	inc    esp
11006932:	mov    al,0xbf
11006934:	mov    edi,0xfadbfbf
11006939:	add    BYTE PTR [ecx],al
1100693b:	or     dl,BYTE PTR [edx*1+0x0]
	...
11006952:	adc    al,0xa
11006954:	add    DWORD PTR [eax],eax
11006956:	adc    BYTE PTR [esi-0x40404041],ch
1100695c:	mov    dl,0x74
1100695e:	pop    ebp
1100695f:	pop    ecx
11006960:	push   edi
11006961:	push   esp
11006962:	push   ecx
11006963:	dec    esi
11006964:	dec    esp
11006965:	dec    ecx
11006966:	dec    eax
11006967:	aas    
11006968:	cmp    al,0x3b
1100696a:	xor    dh,BYTE PTR [ecx]
1100696c:	das    
1100696d:	sub    eax,0x26282a2b
11006972:	lods   al,BYTE PTR ss:[esi]
11006974:	mov    edi,0xaebfbabf
11006979:	sldt   WORD PTR [ecx]
1100697c:	or     dl,BYTE PTR [eax+eax*1]
	...
1100698f:	add    BYTE PTR [eax],al
11006991:	add    BYTE PTR [edx],cl
11006993:	add    DWORD PTR [eax],eax
11006995:	adc    BYTE PTR [esi-0x40454046],ch
1100699b:	mov    ah,0x76
1100699d:	bound  esp,QWORD PTR [ecx+0x5d]
110069a0:	pop    edx
110069a1:	pop    ecx
110069a2:	push   ebp
110069a3:	dec    edi
110069a4:	dec    esi
110069a5:	dec    esp
110069a6:	dec    ecx
110069a7:	dec    eax
110069a8:	inc    ecx
110069a9:	cmp    al,0x3b
110069ab:	xor    esi,DWORD PTR [ecx]
110069ad:	das    
110069ae:	sub    al,0x2d
110069b0:	sub    DWORD PTR [eax],ebp
110069b2:	es ss mov al,0xbf
110069b6:	mov    edx,0xfaebabf
110069bb:	add    BYTE PTR [ecx],al
110069bd:	or     al,BYTE PTR [eax]
	...
110069cf:	add    BYTE PTR [eax],al
110069d1:	add    BYTE PTR [ecx],al
110069d3:	add    BYTE PTR [eax],dl
110069d5:	scas   al,BYTE PTR es:[edi]
110069d6:	mov    edi,0xb9babfbf
110069db:	jge    0x11006a42
110069dd:	bound  esp,QWORD PTR [ebx+0x63]
110069e0:	pop    edi
110069e1:	pop    ebp
110069e2:	pop    ecx
110069e3:	push   edi
110069e4:	push   esp
110069e5:	push   ecx
110069e6:	dec    esi
110069e7:	dec    ecx
110069e8:	inc    ebx
110069e9:	inc    ecx
110069ea:	cmp    eax,0x2f31333b
110069ef:	sub    ebp,DWORD PTR cs:[ecx]
110069f2:	sub    BYTE PTR [esi],ah
110069f4:	inc    esp
110069f5:	mov    eax,0xbababfba
110069fa:	lods   eax,DWORD PTR ds:[esi]
110069fb:	sldt   WORD PTR [ecx]
	...
11006a12:	add    BYTE PTR [eax],dl
11006a14:	scas   al,BYTE PTR es:[edi]
11006a15:	mov    edi,0xbfbabfbf
11006a1a:	cdq    
11006a1b:	gs gs imul esp,DWORD PTR gs:[ebp+0x64],0x61
11006a22:	pop    ebp
11006a23:	pop    esp
11006a24:	pop    eax
11006a25:	push   esp
11006a26:	push   edx
11006a27:	dec    ebp
11006a28:	dec    ecx
11006a29:	dec    eax
11006a2a:	inc    ecx
11006a2b:	cmp    eax,0x2f31333b
11006a30:	sub    ebp,DWORD PTR cs:[ecx]
11006a33:	sub    BYTE PTR [esi],ah
11006a35:	xchg   BYTE PTR [edx-0x40454541],bh
11006a3b:	lods   eax,DWORD PTR ds:[esi]
11006a3c:	sldt   WORD PTR [eax]
	...
11006a4f:	add    BYTE PTR [eax],al
11006a51:	add    BYTE PTR [eax],dl
11006a53:	scas   al,BYTE PTR es:[edi]
11006a54:	mov    edx,0xbfbabfba
11006a59:	mov    ah,0x6f
11006a5b:	imul   ebp,DWORD PTR gs:[ebx+0x6b],0x6b
11006a60:	imul   ebp,DWORD PTR [edx+0x63],0x5f
11006a64:	pop    ebp
11006a65:	pop    eax
11006a66:	push   ebp
11006a67:	push   edx
11006a68:	dec    esi
11006a69:	dec    ebx
11006a6a:	dec    eax
11006a6b:	inc    ecx
11006a6c:	aas    
11006a6d:	cmp    esi,DWORD PTR [ebx]
11006a6f:	xor    dh,BYTE PTR [eax]
11006a71:	cs sub eax,0xaf2a2829
11006a77:	mov    edi,0xbabababa
11006a7c:	scas   al,BYTE PTR es:[edi]
11006a7d:	sldt   WORD PTR [eax]
	...
11006a8c:	add    BYTE PTR [eax],al
11006a8e:	add    BYTE PTR [ebx],al
11006a90:	add    BYTE PTR [eax],dl
11006a92:	scas   al,BYTE PTR es:[edi]
11006a93:	mov    edi,0xbabfbabf
11006a98:	mov    edi,0x6d6b6595
11006a9d:	ins    DWORD PTR es:[edi],dx
11006a9e:	outs   dx,DWORD PTR ds:[esi]
11006a9f:	outs   dx,DWORD PTR ds:[esi]
11006aa0:	outs   dx,DWORD PTR ds:[esi]
11006aa1:	ins    DWORD PTR es:[edi],dx
11006aa2:	imul   esp,DWORD PTR [edi+0x5f],0x5e
11006aa6:	pop    ebx
11006aa7:	push   ebp
11006aa8:	push   edx
11006aa9:	dec    esi
11006aaa:	dec    ebx
11006aab:	inc    ebx
11006aac:	inc    ecx
11006aad:	cmp    eax,0x2f31333b
11006ab2:	sub    eax,0x7e27292b
11006ab7:	mov    edi,0xbabfbabf
11006abc:	mov    edi,0x1000fad
	...
11006acd:	add    BYTE PTR [ebx],al
11006acf:	add    BYTE PTR [eax],dl
11006ad1:	scas   al,BYTE PTR es:[edi]
11006ad2:	mov    edi,0xbfbfbfbf
11006ad7:	mov    edi,0x6d6b74b8
11006adc:	outs   dx,DWORD PTR ds:[esi]
11006add:	outs   dx,DWORD PTR ds:[esi]
11006ade:	jo     0x11006b52
11006ae0:	jo     0x11006b52
11006ae2:	jb     0x11006b52
11006ae4:	push   0x60
11006ae6:	pop    esi
11006ae7:	pop    ebx
11006ae8:	push   ebp
11006ae9:	push   edx
11006aea:	push   eax
11006aeb:	dec    ebx
11006aec:	inc    ebx
11006aed:	inc    ecx
11006aee:	cmp    eax,0x2f31333b
11006af3:	sub    eax,0xb72c2b2b
11006af8:	mov    edi,0xbfbabfba
11006afd:	mov    edi,0x1000fad
	...
11006b0a:	add    BYTE PTR [eax],al
11006b0c:	add    BYTE PTR [edx],al
11006b0e:	add    BYTE PTR [eax],dl
11006b10:	scas   al,BYTE PTR es:[edi]
11006b11:	mov    edi,0xbfbfbfbf
11006b16:	mov    edi,0x6f6ba7bf
11006b1b:	jo     0x11006b91
11006b1d:	je     0x11006b94
11006b1f:	jne    0x11006b96
11006b21:	jne    0x11006b98
11006b23:	je     0x11006b94
11006b25:	push   0x67
11006b27:	pop    esi
11006b28:	pop    esp
11006b29:	pop    eax
11006b2a:	push   edx
11006b2b:	push   eax
11006b2c:	dec    ebx
11006b2d:	inc    ebx
11006b2e:	inc    ecx
11006b2f:	aas    
11006b30:	cmp    esi,DWORD PTR [ebx]
11006b32:	xor    DWORD PTR [edi],ebp
11006b34:	sub    eax,0xbf9a292b
11006b39:	mov    edi,0xbfbfbfba
11006b3e:	mov    edi,0x2000fad
	...
11006b4b:	add    BYTE PTR [ebx],al
11006b4d:	add    BYTE PTR [eax],dl
11006b4f:	scas   al,BYTE PTR es:[edi]
11006b50:	mov    edi,0xbfbfbfbf
11006b55:	mov    edi,0x6f97bfbf
11006b5a:	je     0x11006bd1
11006b5c:	jbe    0x11006bd5
11006b5e:	ja     0x11006bd7
11006b60:	ja     0x11006bd9
11006b62:	ja     0x11006bd9
11006b64:	jne    0x11006bd8
11006b66:	outs   dx,BYTE PTR ds:[esi]
11006b67:	addr16 pusha 
11006b69:	pop    ebx
11006b6a:	push   esi
11006b6b:	push   edx
11006b6c:	push   eax
11006b6d:	dec    ebx
11006b6e:	inc    ebx
11006b6f:	inc    ecx
11006b70:	cmp    al,0x3b
11006b72:	xor    esi,DWORD PTR [ecx]
11006b74:	das    
11006b75:	sub    eax,0xbfba7f2d
11006b7a:	mov    edi,0xbfbfbfbf
11006b7f:	mov    edx,0x3000fad
11006b84:	add    BYTE PTR [eax],al
11006b86:	add    BYTE PTR [eax],al
11006b88:	add    BYTE PTR [eax],al
11006b8a:	add    BYTE PTR [eax+eax*1],al
11006b8d:	adc    BYTE PTR [esi-0x40404041],ch
11006b93:	mov    edi,0xbfbfbfbf
11006b98:	test   BYTE PTR [eax+0x75],dh
11006b9b:	ja     0x11006c14
11006b9d:	jns    0x11006c18
11006b9f:	jns    0x11006c1b
11006ba1:	jns    0x11006c1c
11006ba3:	ja     0x11006c1c
11006ba5:	jbe    0x11006c1b
11006ba7:	outs   dx,BYTE PTR ds:[esi]
11006ba8:	push   0x52585c60
11006bad:	push   eax
11006bae:	dec    ebx
11006baf:	dec    eax
11006bb0:	inc    ecx
11006bb1:	cmp    al,0x3b
11006bb3:	xor    esi,DWORD PTR [eax]
11006bb5:	das    
11006bb6:	sub    eax,0xbfbfba66
11006bbb:	mov    edi,0xbabfbfbf
11006bc0:	mov    edi,0x4000fad
11006bc5:	add    BYTE PTR [eax],al
11006bc7:	add    BYTE PTR [eax],al
11006bc9:	add    BYTE PTR [esi],al
11006bcb:	add    BYTE PTR [eax],dl
11006bcd:	scas   al,BYTE PTR es:[edi]
11006bce:	mov    edx,0xbabfbabf
11006bd3:	mov    edi,0xbabababa
11006bd8:	jnp    0x11006c4f
11006bda:	ja     0x11006c55
11006bdc:	jnp    0x11006c5a
11006bde:	jl     0x11006c5c
11006be0:	jl     0x11006c5e
11006be2:	jl     0x11006c5e
11006be4:	jns    0x11006c5f
11006be6:	ja     0x11006c5c
11006be8:	outs   dx,BYTE PTR ds:[esi]
11006be9:	push   0x60
11006beb:	pop    ebx
11006bec:	pop    eax
11006bed:	push   edx
11006bee:	dec    ebp
11006bef:	dec    ebx
11006bf0:	dec    eax
11006bf1:	aas    
11006bf2:	cmp    al,0x3b
11006bf4:	xor    dh,BYTE PTR [eax]
11006bf6:	das    
11006bf7:	inc    edx
11006bf8:	mov    edx,0xbabababf
11006bfd:	mov    edx,0xbabababa
11006c02:	scas   al,BYTE PTR es:[edi]
11006c03:	sldt   WORD PTR [esi]
11006c06:	add    BYTE PTR [eax],al
11006c08:	add    BYTE PTR [eax],cl
11006c0a:	add    BYTE PTR [eax],dl
11006c0c:	scas   al,BYTE PTR es:[edi]
11006c0d:	mov    edx,0xbfbabfbf
11006c12:	mov    edi,0xbfbabfbf
11006c17:	mov    edx,0x7c797777
11006c1c:	add    BYTE PTR [ecx-0x7e7d7d7f],0x80
11006c23:	jge    0x11006ca1
11006c25:	jp     0x11006ca0
11006c27:	jbe    0x11006c9d
11006c29:	outs   dx,DWORD PTR ds:[esi]
11006c2a:	addr16 pop esi
11006c2c:	pop    ebx
11006c2d:	push   edi
11006c2e:	push   ecx
11006c2f:	dec    ebp
11006c30:	dec    ebx
11006c31:	inc    edi
11006c32:	aas    
11006c33:	cmp    al,0x34
11006c35:	xor    dh,BYTE PTR [ecx]
11006c37:	cmp    DWORD PTR [edx-0x40404541],edi
11006c3d:	mov    edi,0xbabababf
11006c42:	mov    edx,0x8000fae
11006c47:	add    BYTE PTR [eax],al
11006c49:	or     eax,DWORD PTR [eax]
11006c4b:	adc    DWORD PTR [esi-0x40404041],ebp
11006c51:	mov    edi,0xbfbfbfbf
11006c56:	mov    edi,0x7c797abf
11006c5b:	add    DWORD PTR [esp+eax*4-0x7a737a74],0x7d808283
11006c66:	jp     0x11006ce1
11006c68:	ja     0x11006cde
11006c6a:	ins    BYTE PTR es:[edi],dx
11006c6b:	push   0x5e
11006c6d:	pop    ebx
11006c6e:	push   ebp
11006c6f:	push   edx
11006c70:	dec    esi
11006c71:	dec    ecx
11006c72:	dec    eax
11006c73:	aas    
11006c74:	xor    esi,DWORD PTR ds:[ebx]
11006c77:	cmp    bh,BYTE PTR [edx-0x40454041]
11006c7d:	mov    edi,0xbfbfbfbf
11006c82:	mov    edx,0xb0010ae
11006c87:	add    BYTE PTR [eax],al
11006c89:	add    BYTE PTR [ebx],cl
11006c8b:	add    BYTE PTR [eax],dl
11006c8d:	scas   al,BYTE PTR es:[edi]
11006c8e:	mov    edi,0xbfbfbaba
11006c93:	mov    edi,0xbabababf
11006c98:	cmp    DWORD PTR [ebx-0x7f],0x8f8d8c84
11006c9f:	(bad)  
11006ca0:	(bad)  
11006ca1:	lea    ecx,[esp+ecx*4+0x7b808183]
11006ca8:	jns    0x11006d20
11006caa:	je     0x11006d19
11006cac:	addr16 pop esi
11006cae:	pop    ebx
11006caf:	push   ebp
11006cb0:	push   ecx
11006cb1:	dec    ebp
11006cb2:	dec    ecx
11006cb3:	inc    edi
11006cb4:	aas    
11006cb5:	cmp    al,0x34
11006cb7:	inc    ebp
11006cb8:	mov    edx,0xbfbabfba
11006cbd:	mov    edi,0xbabababf
11006cc2:	scas   al,BYTE PTR es:[edi]
11006cc3:	adc    BYTE PTR [eax],al
11006cc5:	or     eax,DWORD PTR [eax]
11006cc7:	add    BYTE PTR [eax],al
11006cc9:	add    BYTE PTR [eax],al
11006ccb:	or     eax,DWORD PTR [eax]
11006ccd:	adc    DWORD PTR [esi-0x40454541],ebp
11006cd3:	mov    edi,0xbabfbabf
11006cd8:	(bad)  
11006cd9:	jge    0x11006c5f
11006cdb:	mov    DWORD PTR [ecx-0x69696a6b],edx
11006ce1:	xchg   esp,eax
11006ce2:	xchg   edx,eax
11006ce3:	lea    ecx,[esp+eax*4+0x797a7c81]
11006cea:	jne    0x11006d5d
11006cec:	ins    BYTE PTR es:[edi],dx
11006ced:	pusha  
11006cee:	pop    esp
11006cef:	pop    ebx
11006cf0:	push   edx
11006cf1:	push   ecx
11006cf2:	dec    esp
11006cf3:	dec    ecx
11006cf4:	inc    edi
11006cf5:	ds imul edi,DWORD PTR ds:[edi-0x45404546],0xbabababf
11006d01:	scas   al,BYTE PTR es:[edi]
11006d02:	adc    BYTE PTR [eax],al
11006d04:	or     BYTE PTR [eax],al
11006d06:	add    BYTE PTR [eax],al
11006d08:	add    BYTE PTR [eax],al
11006d0a:	add    BYTE PTR [eax],al
11006d0c:	or     eax,DWORD PTR [eax]
11006d0e:	adc    BYTE PTR [esi-0x40404541],ch
11006d14:	mov    edi,0x9cbabfba
11006d19:	or     DWORD PTR [ecx+edx*4-0x6666676a],0x94979999
11006d24:	(bad)  
11006d25:	mov    WORD PTR [ebx+0x77797b80],es
11006d2b:	jne    0x11006d9c
11006d2d:	push   0x5f
11006d2f:	pop    esp
11006d30:	pop    eax
11006d31:	push   edx
11006d32:	push   ecx
11006d33:	dec    edx
11006d34:	dec    eax
11006d35:	aas    
11006d36:	xchg   DWORD PTR ds:[edi-0x40404046],edi
11006d3d:	mov    edi,0x10aebabf
11006d42:	add    DWORD PTR [eax],ecx
	...
11006d4c:	add    BYTE PTR [ebx],cl
11006d4e:	add    BYTE PTR [eax],dl
11006d50:	scas   al,BYTE PTR es:[edi]
11006d51:	mov    edx,0xbabfbfbf
11006d56:	mov    edi,0x8d83abbf
11006d5b:	xchg   ebp,eax
11006d5c:	cdq    
11006d5d:	pushf  
11006d5e:	popf   
11006d5f:	lahf   
11006d60:	sahf   
11006d61:	popf   
11006d62:	cdq    
11006d63:	cwde   
11006d64:	xchg   esp,eax
11006d65:	lea    ecx,[ebx+eax*4+0x75797a7d]
11006d6c:	jb     0x11006ddc
11006d6e:	addr16 pop edi
11006d70:	pop    esp
11006d71:	push   ebp
11006d72:	dec    edi
11006d73:	dec    esi
11006d74:	dec    edx
11006d75:	inc    edi
11006d76:	inc    edi
11006d77:	mov    eax,ds:0xbabfbabf
11006d7c:	mov    edi,0x10aebfbf
11006d81:	add    BYTE PTR [esi],al
	...
11006d8b:	add    BYTE PTR [eax],al
11006d8d:	add    BYTE PTR [eax],cl
11006d8f:	add    BYTE PTR [eax],dl
11006d91:	scas   al,BYTE PTR es:[edi]
11006d92:	mov    edi,0xbfbfbaba
11006d97:	mov    edi,0x988f8cb9
11006d9c:	pushf  
11006d9d:	mov    al,ds:0xa0a2a3a2
11006da2:	sahf   
11006da3:	cdq    
11006da4:	xchg   edi,eax
11006da5:	xchg   edx,eax
11006da6:	mov    al,BYTE PTR [eax+eax*4+0x7476797b]
11006dad:	jb     0x11006e1c
11006daf:	fs pop ebp
11006db1:	pop    ecx
11006db2:	push   edi
11006db3:	dec    edi
11006db4:	dec    esp
11006db5:	dec    ecx
11006db6:	push   ecx
11006db7:	mov    eax,0xbfbfbfba
11006dbc:	mov    edx,0x10aebf
11006dc1:	add    al,0x0
	...
11006dcf:	or     BYTE PTR [eax],al
11006dd1:	adc    DWORD PTR [esi-0x40404041],ebp
11006dd7:	mov    edx,0x9891a0bf
11006ddc:	sahf   
11006ddd:	mov    ds:0xa4a5a6a5,eax
11006de2:	mov    al,ds:0x8d95999c
11006de7:	test   DWORD PTR [ecx+0x7577797c],eax
11006ded:	jb     0x11006e5c
11006def:	push   0x5f
11006df1:	pop    ebp
11006df2:	pop    ecx
11006df3:	push   esp
11006df4:	dec    esi
11006df5:	dec    edx
11006df6:	mov    BYTE PTR [edi-0x40404046],bh
11006dfc:	mov    edi,0x30010ae
	...
11006e11:	add    BYTE PTR [eax],dl
11006e13:	scas   al,BYTE PTR es:[edi]
11006e14:	mov    edi,0xbfbabfba
11006e19:	mov    dh,0x94
11006e1b:	cwde   
11006e1c:	sahf   
11006e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11006e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11006e1f:	test   eax,0x9ea3a6a8
11006e24:	cdq    
11006e25:	xchg   esi,eax
11006e26:	(bad)  
11006e27:	mov    WORD PTR [ecx+0x7577797c],es
11006e2d:	je     0x11006e9e
11006e2f:	ins    DWORD PTR es:[edi],dx
11006e30:	gs popa 
11006e32:	pop    edx
11006e33:	push   edi
11006e34:	push   esp
11006e35:	push   ebp
11006e36:	mov    cl,0xba
11006e38:	mov    edx,0xaebfbfba
11006e3d:	adc    BYTE PTR [eax],al
	...
11006e53:	adc    DWORD PTR [esi-0x40404041],ebp
11006e59:	mov    edi,0xa39d97a7
11006e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11006e5f:	test   eax,0x9fa3a7aa
11006e64:	fwait
11006e65:	xchg   esi,eax
11006e66:	(bad)  
11006e67:	mov    WORD PTR [edx+0x7577797d],es
11006e6d:	jo     0x11006ede
11006e6f:	imul   esp,DWORD PTR [ebp+0x63],0x5d
11006e73:	pop    ecx
11006e74:	push   edi
11006e75:	xchg   esi,eax
11006e76:	mov    edi,0xbfbfbfbf
11006e7b:	scas   al,BYTE PTR es:[edi]
11006e7c:	adc    BYTE PTR [eax],al
	...
11006e92:	add    eax,0xbfae1000
11006e97:	mov    edx,0x9db9bfbf
11006e9c:	fwait
11006e9d:	mov    al,ds:0xa6a7a7a5
11006ea2:	mov    ds:0x8f96999e,eax
11006ea7:	mov    WORD PTR [edx+0x75777a7c],es
11006ead:	jo     0x11006f1e
11006eaf:	imul   ebp,DWORD PTR [ebx+0x64],0x61
11006eb3:	pop    edx
11006eb4:	js     0x11006e6f
11006eb6:	mov    edi,0xaeb9bfbf
11006ebb:	adc    BYTE PTR [eax],al
11006ebd:	add    eax,0x0
	...
11006ed2:	aaa    
11006ed3:	add    eax,0xbfae1100
11006ed8:	mov    edi,0x9bb6bfbf
11006edd:	fwait
11006ede:	mov    al,ds:0xa0a3a4a3
11006ee3:	pushf  
11006ee4:	cdq    
11006ee5:	xchg   esp,eax
11006ee6:	lea    eax,[ebp+0x76797c81]
11006eec:	jne    0x11006f5e
11006eee:	ins    DWORD PTR es:[edi],dx
11006eef:	imul   esp,DWORD PTR [ebp+0x65],0x62
11006ef3:	jne    0x11006ea9
11006ef5:	mov    edi,0xaebfbfbf
11006efa:	adc    BYTE PTR [eax],al
11006efc:	add    eax,0x38
	...
11006f11:	add    BYTE PTR [esi+0x37],dl
11006f14:	add    eax,0xbfae1000
11006f19:	mov    edx,0x9bb5babf
11006f1e:	fwait
11006f1f:	pushf  
11006f20:	sahf   
11006f21:	sahf   
11006f22:	pushf  
11006f23:	cdq    
11006f24:	xchg   esi,eax
11006f25:	xchg   ecx,eax
11006f26:	mov    WORD PTR [ebx+0x76777a80],es
11006f2c:	je     0x11006f9d
11006f2e:	ins    DWORD PTR es:[edi],dx
11006f2f:	imul   esp,DWORD PTR [ebp+0x62],0x76
11006f33:	mov    dl,0xba
11006f35:	mov    edx,0x10aebfba
11006f3a:	add    BYTE PTR ds:0x5838,al
	...
11006f50:	add    BYTE PTR [eax],al
11006f52:	pop    ebp
11006f53:	push   esi
11006f54:	aaa    
11006f55:	add    eax,0xbfae1100
11006f5a:	mov    edi,0x9db6bfbf
11006f5f:	xchg   edi,eax
11006f60:	cwde   
11006f61:	cwde   
11006f62:	cwde   
11006f63:	xchg   ebp,eax
11006f64:	xchg   ecx,eax
11006f65:	mov    al,BYTE PTR [ecx+eax*4+0x7477797c]
11006f6c:	jb     0x11006fdb
11006f6e:	imul   esp,DWORD PTR [ebp+0x65],0x7d
11006f72:	mov    ah,0xbf
11006f74:	mov    edi,0x10aebfbf
11006f79:	add    BYTE PTR ds:0x5d5638,al
	...
11006f8f:	add    BYTE PTR [eax],al
11006f91:	add    BYTE PTR [ecx+0x5d],ah
11006f94:	push   esi
11006f95:	aaa    
11006f96:	add    eax,0xbfae1000
11006f9b:	mov    edi,0xa6b9bfbf
11006fa0:	xchg   esp,eax
11006fa1:	xchg   ecx,eax
11006fa2:	(bad)
11006fa6:	cmp    DWORD PTR [ecx+edi*2+0x77],0x6b6d7075
11006fae:	gs ins DWORD PTR es:[edi],dx
11006fb0:	cdq    
11006fb1:	mov    ecx,0xbfbfbfba
11006fb6:	scas   al,BYTE PTR es:[edi]
11006fb7:	adc    BYTE PTR [eax],al
11006fb9:	add    eax,0x615d5638
	...
11006fd2:	bound  esp,QWORD PTR [ecx+0x5d]
11006fd5:	push   esi
11006fd6:	aaa    
11006fd7:	add    eax,0xbfae1100
11006fdc:	mov    edx,0xb6bfbfbf
11006fe1:	mov    al,ds:0x7d81838c
11006fe6:	jnp    0x11007061
11006fe8:	ja     0x1100705f
11006fea:	jo     0x1100705b
11006fec:	imul   esi,DWORD PTR [eax-0x6b],0xffffffb4
11006ff0:	mov    edi,0xbfbfbfba
11006ff5:	scas   al,BYTE PTR es:[edi]
11006ff6:	adc    BYTE PTR [eax],al
11006ff8:	add    eax,0x615d5638
11006ffd:	bound  eax,QWORD PTR [eax]
	...
1100700f:	add    BYTE PTR [eax],al
11007011:	add    BYTE PTR [edx+0x62],ah
11007014:	popa   
11007015:	pop    ebp
11007016:	push   esi
11007017:	aaa    
11007018:	add    eax,0xbfae1000
1100701d:	mov    edi,0xbfbabfbf
11007022:	mov    ecx,0x818f9cab
11007027:	jp     0x110070a0
11007029:	jnp    0x11006faf
1100702b:	xchg   edi,eax
1100702c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100702d:	mov    eax,0xbabababa
11007032:	mov    edx,0x10aebf
11007037:	add    eax,0x615d5638
1100703c:	bound  esp,QWORD PTR [edx+0x0]
	...
1100704f:	add    BYTE PTR [eax],al
11007051:	add    BYTE PTR [edx+0x62],ah
11007054:	bound  esp,QWORD PTR [ecx+0x5d]
11007057:	push   esi
11007058:	aaa    
11007059:	add    eax,0xbfae1000
1100705e:	mov    edi,0xbfbfbabf
11007063:	mov    edx,0xbfbababf
11007068:	mov    edx,0xbfbabfba
1100706d:	mov    edi,0xbfbfbaba
11007072:	mov    edx,0x50010ae
11007077:	cmp    BYTE PTR [esi+0x5d],dl
1100707a:	popa   
1100707b:	bound  esp,QWORD PTR [edx+0x62]
	...
11007092:	bound  esp,QWORD PTR [edx+0x62]
11007095:	bound  esp,QWORD PTR [ecx+0x5d]
11007098:	push   esi
11007099:	aaa    
1100709a:	add    eax,0xbfae1000
1100709f:	mov    edi,0xbfbfbfba
110070a4:	mov    edi,0xbfbfbaba
110070a9:	mov    edx,0xbfbfbfbf
110070ae:	mov    edx,0xaebfbfba
110070b3:	adc    BYTE PTR [eax],al
110070b5:	add    eax,0x615d5638
110070ba:	bound  esp,QWORD PTR [edx+0x62]
110070bd:	bound  eax,QWORD PTR [eax]
	...
110070cf:	add    BYTE PTR [eax],al
110070d1:	add    BYTE PTR [edx+0x62],ah
110070d4:	bound  esp,QWORD PTR [edx+0x62]
110070d7:	popa   
110070d8:	pop    ebp
110070d9:	push   esi
110070da:	aaa    
110070db:	add    eax,0xbfae1100
110070e0:	mov    edx,0xbfbabfbf
110070e5:	mov    edi,0xbabfbfba
110070ea:	mov    edi,0xbabfbfbf
110070ef:	mov    edx,0x10aebf
110070f4:	add    eax,0x615d5638
110070f9:	bound  esp,QWORD PTR [edx+0x62]
110070fc:	bound  esp,QWORD PTR [edx+0x0]
	...
1100710f:	add    BYTE PTR [eax],al
11007111:	add    BYTE PTR [edx+0x62],ah
11007114:	bound  esp,QWORD PTR [edx+0x62]
11007117:	bound  esp,QWORD PTR [ecx+0x5d]
1100711a:	push   esi
1100711b:	aaa    
1100711c:	add    eax,0xbfae1000
11007121:	mov    edx,0xbfbfbfbf
11007126:	mov    edi,0xbfbabfbf
1100712b:	mov    edi,0xbabfbfbf
11007130:	scas   al,BYTE PTR es:[edi]
11007131:	adc    BYTE PTR [eax],al
11007133:	add    eax,0x615d5638
11007138:	bound  esp,QWORD PTR [edx+0x62]
1100713b:	bound  esp,QWORD PTR [edx+0x62]
	...
11007152:	bound  esp,QWORD PTR [edx+0x62]
11007155:	bound  esp,QWORD PTR [edx+0x62]
11007158:	bound  esp,QWORD PTR [ecx+0x5d]
1100715b:	push   esi
1100715c:	aaa    
1100715d:	add    eax,0xbfae1100
11007162:	mov    edx,0xbfbfbfbf
11007167:	mov    edi,0xbfbfbaba
1100716c:	mov    edi,0x10aebfbf
11007171:	add    BYTE PTR ds:0x615d5638,al
11007177:	bound  esp,QWORD PTR [edx+0x62]
1100717a:	bound  esp,QWORD PTR [edx+0x62]
1100717d:	bound  eax,QWORD PTR [eax]
	...
1100718f:	add    BYTE PTR [eax],al
11007191:	add    BYTE PTR [edx+0x62],ah
11007194:	bound  esp,QWORD PTR [edx+0x62]
11007197:	bound  esp,QWORD PTR [edx+0x62]
1100719a:	popa   
1100719b:	pop    ebp
1100719c:	push   esi
1100719d:	aaa    
1100719e:	add    eax,0xbfae1000
110071a3:	mov    edx,0xbfbfbabf
110071a8:	mov    edi,0xbfbfbfba
110071ad:	mov    edi,0x50010ae
110071b2:	cmp    BYTE PTR [esi+0x5d],dl
110071b5:	popa   
110071b6:	bound  esp,QWORD PTR [edx+0x62]
110071b9:	bound  esp,QWORD PTR [edx+0x62]
110071bc:	bound  esp,QWORD PTR [edx+0x0]
	...
110071df:	add    BYTE PTR [eax],al
110071e1:	adc    DWORD PTR [esi-0x45454541],ebp
110071e7:	mov    edi,0xbfbfbaba
110071ec:	mov    edx,0x10ae
	...
11007221:	add    BYTE PTR [eax],dl
11007223:	scas   al,BYTE PTR es:[edi]
11007224:	mov    edx,0xbabfbaba
11007229:	mov    edx,0x10aebfbf
	...
1100725e:	add    BYTE PTR [eax],al
11007260:	add    BYTE PTR [eax],cl
11007262:	add    BYTE PTR [ecx],dl
11007264:	scas   al,BYTE PTR es:[edi]
11007265:	mov    edi,0xbfbfbfbf
1100726a:	mov    edi,0x80010ae
	...
1100729f:	add    BYTE PTR [eax],al
110072a1:	add    BYTE PTR [eax],cl
110072a3:	add    BYTE PTR [eax],dl
110072a5:	scas   al,BYTE PTR es:[edi]
110072a6:	mov    edx,0xaebabfbf
110072ab:	adc    BYTE PTR [eax],al
110072ad:	or     eax,DWORD PTR [eax]
	...
110072e3:	or     eax,DWORD PTR [eax]
110072e5:	adc    DWORD PTR [esi+0x10aebabf],ebp
110072eb:	add    BYTE PTR [ebx],cl
	...
11007321:	add    BYTE PTR [eax],al
11007323:	add    BYTE PTR [ebx],cl
11007325:	add    BYTE PTR [eax],dl
11007327:	scas   al,BYTE PTR es:[edi]
11007328:	scas   al,BYTE PTR es:[edi]
11007329:	adc    DWORD PTR [eax],eax
1100732b:	or     al,0x0
	...
11007365:	or     eax,DWORD PTR [eax]
11007367:	adc    BYTE PTR [eax],dl
11007369:	add    BYTE PTR [ebx],cl
	...
110073a3:	add    BYTE PTR [eax],al
110073a5:	add    BYTE PTR [ebx],cl
110073a7:	add    BYTE PTR [eax],al
110073a9:	or     al,0x0
	...
110073e7:	or     al,0xc
	...
11007445:	add    BYTE PTR [eax],al
11007447:	add    bh,bh
11007449:	(bad)  
1100744a:	(bad)  
1100744b:	(bad)  
1100744c:	(bad)  
1100744d:	(bad)  
1100744e:	(bad)  
1100744f:	(bad)  
11007450:	(bad)  
11007451:	(bad)  
11007452:	(bad)  
11007453:	(bad)  
11007454:	jg     0x11007455
11007456:	(bad)  
11007457:	(bad)  
11007458:	(bad)  
11007459:	(bad)  
1100745a:	(bad)  
1100745b:	cld    
1100745c:	aas    
1100745d:	(bad)  
1100745e:	(bad)  
1100745f:	(bad)  
11007460:	(bad)  
11007461:	(bad)  
11007462:	(bad)  
11007463:	clc    
11007464:	pop    ds
11007465:	(bad)  
11007466:	(bad)  
11007467:	(bad)  
11007468:	(bad)  
11007469:	(bad)  
1100746a:	push   eax
1100746c:	ud0    edi,edi
1100746f:	(bad)  
11007470:	(bad)  
11007471:	(bad)  
11007472:	jmp    eax
11007474:	pop    es
11007475:	(bad)  
11007476:	(bad)  
11007477:	(bad)  
11007478:	(bad)  
11007479:	(bad)  
1100747a:	inc    eax
1100747c:	add    edi,edi
1100747e:	(bad)  
1100747f:	(bad)  
11007480:	(bad)  
11007481:	(bad)  
11007482:	inc    DWORD PTR [eax-0xff]
11007488:	inc    DWORD PTR [eax]
1100748a:	add    BYTE PTR [eax],al
1100748c:	add    BYTE PTR [eax],al
1100748e:	add    bh,bh
11007490:	inc    DWORD PTR [eax]
11007492:	add    BYTE PTR [eax],al
11007494:	add    BYTE PTR [eax],al
11007496:	add    bh,bh
11007498:	inc    DWORD PTR [eax]
1100749a:	add    BYTE PTR [eax],al
1100749c:	add    BYTE PTR [eax],al
1100749e:	add    bh,bh
110074a0:	inc    DWORD PTR [eax]
110074a2:	add    BYTE PTR [eax],al
110074a4:	add    BYTE PTR [eax],al
110074a6:	add    bh,bh
110074a8:	inc    DWORD PTR [eax]
110074aa:	add    BYTE PTR [eax],al
110074ac:	add    BYTE PTR [eax],al
110074ae:	add    bh,bh
110074b0:	inc    DWORD PTR [eax]
110074b2:	add    BYTE PTR [eax],al
110074b4:	add    BYTE PTR [eax],al
110074b6:	add    bh,bh
110074b8:	inc    DWORD PTR [eax]
110074ba:	add    BYTE PTR [eax],al
110074bc:	add    BYTE PTR [eax],al
110074be:	add    bh,bh
110074c0:	inc    DWORD PTR [eax]
110074c2:	add    BYTE PTR [eax],al
110074c4:	add    BYTE PTR [eax],al
110074c6:	add    bh,bh
110074c8:	inc    DWORD PTR [eax]
110074ca:	add    BYTE PTR [eax],al
110074cc:	add    BYTE PTR [eax],al
110074ce:	add    bh,bh
110074d0:	inc    DWORD PTR [eax]
110074d2:	add    BYTE PTR [eax],al
110074d4:	add    BYTE PTR [eax],al
110074d6:	add    bh,bh
110074d8:	inc    DWORD PTR [eax]
110074da:	add    BYTE PTR [eax],al
110074dc:	add    BYTE PTR [eax],al
110074de:	add    bh,bh
110074e0:	inc    DWORD PTR [eax]
110074e2:	add    BYTE PTR [eax],al
110074e4:	add    BYTE PTR [eax],al
110074e6:	add    bh,bh
110074e8:	inc    DWORD PTR [eax]
110074ea:	add    BYTE PTR [eax],al
110074ec:	add    BYTE PTR [eax],al
110074ee:	add    bh,bh
110074f0:	inc    DWORD PTR [eax]
110074f2:	add    BYTE PTR [eax],al
110074f4:	add    BYTE PTR [eax],al
110074f6:	add    bh,bh
110074f8:	inc    DWORD PTR [eax]
110074fa:	add    BYTE PTR [eax],al
110074fc:	add    BYTE PTR [eax],al
110074fe:	add    bh,bh
11007500:	inc    DWORD PTR [eax]
11007502:	add    BYTE PTR [eax],al
11007504:	add    BYTE PTR [eax],al
11007506:	add    bh,bh
11007508:	inc    DWORD PTR [eax]
1100750a:	add    BYTE PTR [eax],al
1100750c:	add    BYTE PTR [eax],al
1100750e:	add    bh,bh
11007510:	inc    BYTE PTR [eax]
11007512:	add    BYTE PTR [eax],al
11007514:	add    BYTE PTR [eax],al
11007516:	add    BYTE PTR [edi-0x4],bh
11007519:	add    BYTE PTR [eax],al
1100751b:	add    BYTE PTR [eax],al
1100751d:	add    BYTE PTR [eax],al
1100751f:	aas    
11007520:	clc    
11007521:	add    BYTE PTR [eax],al
11007523:	add    BYTE PTR [eax],al
11007525:	add    BYTE PTR [eax],al
11007527:	pop    ds
11007528:	lock add BYTE PTR [eax],al
1100752b:	add    BYTE PTR [eax],al
1100752d:	add    BYTE PTR [eax],al
1100752f:	pavgb  mm0,QWORD PTR [eax]
11007532:	add    BYTE PTR [eax],al
11007534:	add    BYTE PTR [eax],al
11007536:	add    BYTE PTR [edi],al
11007538:	rol    BYTE PTR [eax],0x0
1100753b:	add    BYTE PTR [eax],al
1100753d:	add    BYTE PTR [eax],al
1100753f:	add    eax,DWORD PTR [eax+0x0]
11007545:	add    BYTE PTR [eax],al
11007547:	add    DWORD PTR [eax+0x0],eax
1100754d:	add    BYTE PTR [eax],al
1100754f:	add    eax,eax
11007551:	add    BYTE PTR [eax],al
11007553:	add    BYTE PTR [eax],al
11007555:	add    BYTE PTR [eax],al
11007557:	add    esp,eax
11007559:	add    BYTE PTR [eax],al
1100755b:	add    BYTE PTR [eax],al
1100755d:	add    BYTE PTR [eax],al
1100755f:	pop    es
11007560:	lock add BYTE PTR [eax],al
11007563:	add    BYTE PTR [eax],al
11007565:	add    BYTE PTR [eax],al
11007567:	psubb  mm0,QWORD PTR [eax]
1100756a:	add    BYTE PTR [eax],al
1100756c:	add    BYTE PTR [eax],al
1100756e:	add    BYTE PTR [edi],bl
11007570:	cld    
11007571:	add    BYTE PTR [eax],al
11007573:	add    BYTE PTR [eax],al
11007575:	add    BYTE PTR [eax],al
11007577:	aas    
11007578:	inc    BYTE PTR [eax]
1100757a:	add    BYTE PTR [eax],al
1100757c:	add    BYTE PTR [eax],al
1100757e:	add    BYTE PTR [edi-0x1],bh
11007581:	add    BYTE PTR [eax],al
11007583:	add    BYTE PTR [eax],al
11007585:	add    BYTE PTR [eax],al
11007587:	(bad)  
11007588:	inc    DWORD PTR [eax]
1100758a:	add    BYTE PTR [eax],al
1100758c:	add    BYTE PTR [eax],al
1100758e:	add    bh,bh
11007590:	inc    DWORD PTR [eax]
11007592:	add    BYTE PTR [eax],al
11007594:	add    BYTE PTR [eax],al
11007596:	add    bh,bh
11007598:	inc    DWORD PTR [eax]
1100759a:	add    BYTE PTR [eax],al
1100759c:	add    BYTE PTR [eax],al
1100759e:	add    bh,bh
110075a0:	inc    DWORD PTR [eax]
110075a2:	add    BYTE PTR [eax],al
110075a4:	add    BYTE PTR [eax],al
110075a6:	add    bh,bh
110075a8:	inc    DWORD PTR [eax]
110075aa:	add    BYTE PTR [eax],al
110075ac:	add    BYTE PTR [eax],al
110075ae:	add    bh,bh
110075b0:	inc    DWORD PTR [eax]
110075b2:	add    BYTE PTR [eax],al
110075b4:	add    BYTE PTR [eax],al
110075b6:	add    bh,bh
110075b8:	inc    DWORD PTR [eax]
110075ba:	add    BYTE PTR [eax],al
110075bc:	add    BYTE PTR [eax],al
110075be:	add    bh,bh
110075c0:	inc    DWORD PTR [eax]
110075c2:	add    BYTE PTR [eax],al
110075c4:	add    BYTE PTR [eax],al
110075c6:	add    bh,bh
110075c8:	inc    DWORD PTR [eax]
110075ca:	add    BYTE PTR [eax],al
110075cc:	add    BYTE PTR [eax],al
110075ce:	add    bh,bh
110075d0:	inc    DWORD PTR [eax]
110075d2:	add    BYTE PTR [eax],al
110075d4:	add    BYTE PTR [eax],al
110075d6:	add    bh,bh
110075d8:	inc    DWORD PTR [eax]
110075da:	add    BYTE PTR [eax],al
110075dc:	add    BYTE PTR [eax],al
110075de:	add    bh,bh
110075e0:	inc    DWORD PTR [eax]
110075e2:	add    BYTE PTR [eax],al
110075e4:	add    BYTE PTR [eax],al
110075e6:	add    bh,bh
110075e8:	inc    DWORD PTR [eax]
110075ea:	add    BYTE PTR [eax],al
110075ec:	add    BYTE PTR [eax],al
110075ee:	add    bh,bh
110075f0:	inc    DWORD PTR [eax]
110075f2:	add    BYTE PTR [eax],al
110075f4:	add    BYTE PTR [eax],al
110075f6:	add    bh,bh
110075f8:	inc    DWORD PTR [eax]
110075fa:	add    BYTE PTR [eax],al
110075fc:	add    BYTE PTR [eax],al
110075fe:	add    bh,bh
11007600:	inc    DWORD PTR [eax]
11007602:	add    BYTE PTR [eax],al
11007604:	add    BYTE PTR [eax],al
11007606:	add    bh,bh
11007608:	(bad)  
11007609:	(bad)  
1100760a:	inc    DWORD PTR [eax-0xff]
11007610:	(bad)  
11007611:	(bad)  
11007612:	inc    eax
11007614:	add    edi,edi
11007616:	(bad)  
11007617:	(bad)  
11007618:	(bad)  
11007619:	(bad)  
1100761a:	jmp    eax
1100761c:	pop    es
1100761d:	(bad)  
1100761e:	(bad)  
1100761f:	(bad)  
11007620:	(bad)  
11007621:	(bad)  
11007622:	push   eax
11007624:	ud0    edi,edi
11007627:	(bad)  
11007628:	(bad)  
11007629:	(bad)  
1100762a:	(bad)  
1100762b:	clc    
1100762c:	pop    ds
1100762d:	(bad)  
1100762e:	(bad)  
1100762f:	(bad)  
11007630:	(bad)  
11007631:	(bad)  
11007632:	(bad)  
11007633:	cld    
11007634:	aas    
11007635:	(bad)  
11007636:	(bad)  
11007637:	(bad)  
11007638:	(bad)  
11007639:	(bad)  
1100763a:	(bad)  
1100763b:	(bad)  
1100763c:	jg     0x1100763d
1100763e:	(bad)  
1100763f:	(bad)  
11007640:	(bad)  
11007641:	(bad)  
11007642:	(bad)  
11007643:	(bad)  
11007644:	(bad)  
11007645:	(bad)  
11007646:	(bad)  
11007647:	jmp    FWORD PTR [eax]
11007649:	add    BYTE PTR [eax],al
1100764b:	add    BYTE PTR [eax],dh
1100764d:	add    BYTE PTR [eax],al
1100764f:	add    BYTE PTR [eax+0x0],ah
11007652:	add    BYTE PTR [eax],al
11007654:	add    DWORD PTR [eax],eax
11007656:	or     BYTE PTR [eax],al
	...
11007674:	add    al,0x2
11007676:	add    DWORD PTR [eax],eax
11007678:	add    al,0x4
1100767a:	add    al,0x0
1100767c:	or     BYTE PTR [eax],cl
1100767e:	or     BYTE PTR [eax],al
11007680:	or     eax,0x11000d0d
11007685:	or     DWORD PTR [esi],eax
11007687:	add    BYTE PTR [edx],dl
11007689:	adc    dl,BYTE PTR [edx]
1100768b:	add    BYTE PTR [esp+edx*1],dl
1100768e:	adc    al,0x0
11007690:	sbb    DWORD PTR [ecx],ebx
11007692:	sbb    DWORD PTR [eax],eax
11007694:	sbb    eax,0x27001d1d
11007699:	push   ss
1100769a:	push   cs
1100769b:	add    BYTE PTR [eax],ch
1100769d:	push   ss
1100769e:	push   cs
1100769f:	add    BYTE PTR [esi],ch
110076a1:	sbb    dl,BYTE PTR [ecx]
110076a3:	add    BYTE PTR ds:0x25001622,bh
110076a9:	and    eax,0x2c2c0025
110076ae:	sub    al,0x0
110076b0:	xor    DWORD PTR [ecx],esi
110076b2:	xor    DWORD PTR [eax],eax
110076b4:	cmp    BYTE PTR [eax],bh
110076b6:	cmp    BYTE PTR [eax],al
110076b8:	ds ds add BYTE PTR ds:[ebp+0x27],al
110076be:	sbb    DWORD PTR [eax],eax
110076c0:	push   ebx
110076c1:	das    
110076c2:	pop    ds
110076c3:	add    BYTE PTR [edx+0x33],bl
110076c6:	and    DWORD PTR [eax],eax
110076c8:	cmp    DWORD PTR gs:0x2a3f7000,esp
110076cf:	add    BYTE PTR [edx+0x40],dh
110076d2:	sub    al,BYTE PTR [eax]
110076d4:	jbe    0x11007719
110076d6:	sub    al,0x0
110076d8:	jns    0x1100771e
110076da:	sub    eax,0x40404000
110076df:	add    BYTE PTR [ebp+0x45],al
110076e2:	inc    ebp
110076e3:	add    BYTE PTR [eax+0x48],cl
110076e6:	dec    eax
110076e7:	add    BYTE PTR [ebx+0x53],dl
110076ea:	push   ebx
110076eb:	add    BYTE PTR [edi+0x57],dl
110076ee:	push   edi
110076ef:	add    BYTE PTR [ebp+0x5d],bl
110076f2:	pop    ebp
110076f3:	add    BYTE PTR [ecx+0x61],ah
110076f6:	popa   
110076f7:	add    BYTE PTR [ebp+0x65],ah
110076fa:	add    BYTE PTR gs:[edx+0x6a],ch
110076fe:	push   0x0
11007700:	outs   dx,BYTE PTR ds:[esi]
11007701:	outs   dx,BYTE PTR ds:[esi]
11007702:	outs   dx,BYTE PTR ds:[esi]
11007703:	add    BYTE PTR [edx+0x72],dh
11007706:	jb     0x11007708
11007708:	js     0x11007782
1100770a:	js     0x1100770c
1100770c:	jle    0x1100778c
1100770e:	jle    0x11007710
11007710:	xchg   DWORD PTR [edx+esi*1+0x0],ecx
11007714:	mov    BYTE PTR [edx+esi*1+0x0],cl
11007718:	leave  
11007719:	push   ebx
1100771a:	cs add bl,cl
1100771d:	push   ebp
1100771e:	xor    BYTE PTR [eax],al
11007720:	int    0x59
11007722:	xor    eax,DWORD PTR [eax]
11007724:	int3   
11007725:	pop    ecx
11007726:	xor    al,0x0
11007728:	int3   
11007729:	pop    esp
1100772a:	cmp    al,BYTE PTR [eax]
1100772c:	rcr    BYTE PTR [esi+esi*1+0x0],1
11007730:	shl    DWORD PTR [eax+0x38],cl
11007733:	add    ah,dl
11007735:	bound  edi,QWORD PTR [edx]
11007737:	add    ch,dl
11007739:	fs cmp al,0x0
1100773c:	fsub   DWORD PTR [edi+0x3e]
1100773f:	add    al,bl
11007741:	push   0x64b1003f
11007746:	inc    edx
11007747:	add    ch,dl
11007749:	addr16 inc edx
1100774b:	add    dl,bl
1100774d:	imul   eax,DWORD PTR [eax+0x0],0x436cdc
11007754:	fsubr  DWORD PTR [ebx+0x44]
11007757:	add    ch,bl
11007759:	ins    DWORD PTR es:[edi],dx
1100775a:	inc    esp
1100775b:	add    dh,bl
1100775d:	jo     0x110077a5
1100775f:	add    cl,dl
11007761:	jbe    0x110077b1
11007763:	add    bh,dl
11007765:	jb     0x110077b7
11007767:	add    dh,bl
11007769:	jnp    0x110077c2
1100776b:	add    al,ah
1100776d:	jno    0x110077b5
1100776f:	add    cl,ah
11007771:	jae    0x110077bc
11007773:	add    cl,ah
11007775:	je     0x110077c1
11007777:	add    bl,ah
11007779:	jbe    0x110077c7
1100777b:	add    ah,ah
1100777d:	ja     0x110077cc
1100777f:	add    ah,ah
11007781:	js     0x110077d0
11007783:	add    al,ch
11007785:	jl     0x110077d6
11007787:	add    dh,ah
11007789:	jnp    0x110077db
1100778b:	add    dh,ah
1100778d:	jl     0x110077e1
1100778f:	add    al,ch
11007791:	jge    0x110077e4
11007793:	add    cl,ch
11007795:	jg     0x110077eb
11007797:	add    ah,ah
11007799:	adc    DWORD PTR [ebp+0x0],0x5380eb
110077a0:	call   0xfd00ce27
110077a5:	adc    BYTE PTR [ebp+0x0],0xe9
110077a9:	sbb    BYTE PTR [eax+0x0],0xed
110077ad:	xchg   BYTE PTR [ecx+0x0],bl
110077b0:	in     al,dx
110077b1:	xchg   DWORD PTR [eax+eax*1-0x13],ebx
110077b5:	mov    BYTE PTR [ebp+0x0],bl
110077b8:	lock xchg DWORD PTR [ecx+0x0],ebx
110077bc:	repnz mov BYTE PTR [ecx+0x0],bl
110077c0:	icebp  
110077c1:	mov    bl,BYTE PTR [eax+eax*1-0xe]
110077c5:	mov    WORD PTR [edi+0x0],ds
110077c8:	hlt    
110077c9:	mov    WORD PTR [esi+0x0],ds
110077cc:	fisttp QWORD PTR [ebx-0x7422ff91]
110077d2:	jo     0x110077d4
110077d4:	fst    QWORD PTR [edx-0x7411ff86]
110077da:	pusha  
110077db:	add    bh,ch
110077dd:	mov    WORD PTR [edx+0x0],fs
110077e0:	icebp  
110077e1:	lea    esp,[ecx+0x0]
110077e4:	hlt    
110077e5:	mov    fs,WORD PTR [ecx+0x0]
110077e8:	icebp  
110077e9:	(bad)  
110077ea:	fs add ah,dh
110077ed:	nop
110077ee:	bound  eax,QWORD PTR [eax]
110077f0:	icebp  
110077f1:	xchg   ecx,eax
110077f2:	data16 add ah,dh
110077f5:	xchg   edx,eax
110077f6:	data16 add dl,dh
110077f9:	xchg   ebx,eax
110077fa:	push   0x6b96f300
110077ff:	add    ah,dh
11007801:	xchg   ebp,eax
11007802:	push   0x0
11007804:	hlt    
11007805:	xchg   esi,eax
11007806:	ins    BYTE PTR es:[edi],dx
11007807:	add    ah,dh
11007809:	cwde   
1100780a:	outs   dx,BYTE PTR ds:[esi]
1100780b:	add    dh,ah
1100780d:	xchg   edi,eax
1100780e:	jns    0x11007810
11007810:	cmc    
11007811:	call   0x75:0x9df50071
11007818:	neg    BYTE PTR [edi-0x5f0aff88]
1100781e:	jns    0x11007820
11007820:	mul    BYTE PTR [edx-0x5909ff83]
11007826:	add    DWORD PTR [eax],0x84a7f6
1100782c:	imul   DWORD PTR [eax-0x5408ff7c]
11007832:	mov    BYTE PTR [eax],al
11007834:	imul   DWORD PTR [ebp-0x550fff75]
1100783a:	mov    es,WORD PTR [eax]
1100783c:	imul   DWORD PTR [esi-0x4f08ff73]
11007842:	pop    DWORD PTR [eax]
11007844:	div    DWORD PTR [ecx-0x4a08ff70]
1100784a:	xchg   esi,eax
1100784b:	add    al,bh
1100784d:	mov    al,0x90
1100784f:	add    al,bh
11007851:	mov    bl,0x94
11007853:	add    al,bh
11007855:	mov    ah,0x96
11007857:	add    al,bh
11007859:	mov    dh,0x99
1100785b:	add    al,bh
1100785d:	mov    ecx,0xb4e8009d
11007862:	mov    ds:0xa6b5e800,eax
11007867:	add    al,bh
11007869:	mov    ebx,0xbdf800a0
1100786e:	mov    ds:0xa4bef900,al
11007873:	add    cl,dh
11007875:	mov    edi,0xc0f900ac
1100787a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100787b:	add    cl,bh
1100787d:	ret    0xaa
11007880:	stc    
11007881:	lds    ebp,FWORD PTR [ebp-0x463a1400]
11007887:	add    cl,bh
11007889:	(bad)  
1100788a:	mov    al,0x0
1100788c:	stc    
1100788d:	leave  
1100788e:	mov    ah,0x0
11007890:	stc    
11007891:	int3   
11007892:	mov    bh,0x0
11007894:	cli    
11007895:	int    0xb9
11007897:	add    dl,bh
11007899:	iret   
1100789a:	mov    esp,0xbdd0fa00
1100789f:	add    dl,bl
110078a1:	fcmovu st,st(2)
110078a3:	add    ah,bl
110078a5:	(bad)  
110078a7:	add    ah,bl
110078a9:	(bad)  
110078ab:	add    dl,bh
110078ad:	aam    0xc3
110078af:	add    dl,bh
110078b1:	(bad)  
110078b2:	mov    BYTE PTR [eax],0xfb
110078b5:	fadd   st,st(7)
110078b7:	add    dl,bh
110078b9:	xlat   BYTE PTR ds:[ebx]
110078ba:	enter  0xfb00,0xd9
110078be:	leave  
110078bf:	add    bl,bh
110078c1:	fcmovne st,st(5)
110078c3:	add    bl,bh
110078c5:	(bad)  
110078c7:	add    ah,bh
110078c9:	(bad)  
110078cb:	add    bl,bh
110078cd:	fst    st(0)
110078cf:	add    ah,bh
110078d1:	in     al,0xd9
110078d3:	add    ch,bh
110078d5:	jmp    0xfcf879ba
110078da:	out    0x0,eax
110078dc:	sti    
110078dd:	out    dx,eax
110078de:	jmp    0xfcf174e3
110078e3:	add    ch,bh
110078e5:	repnz in al,dx
110078e7:	add    ch,bh
110078e9:	div    dl
110078eb:	add    ch,bh
110078ed:	std    
110078ee:	std    
110078ef:	add    BYTE PTR [eax],al
110078f1:	add    BYTE PTR [eax],al
110078f3:	add    BYTE PTR [edi],ch
110078f5:	add    eax,DWORD PTR [eax]
110078f7:	add    BYTE PTR [eax+0x4],dl
110078fa:	add    BYTE PTR [eax],al
110078fc:	jo     0x11007904
110078fe:	add    BYTE PTR [eax],al
11007900:	nop
11007901:	or     DWORD PTR [eax],eax
11007903:	add    BYTE PTR [eax-0x30fffff6],dh
11007909:	or     al,0x0
1100790b:	add    al,dh
1100790d:	push   cs
1100790e:	add    BYTE PTR [eax],al
11007910:	jmp    DWORD PTR [eax]
11007912:	adc    al,BYTE PTR [eax]
11007914:	(bad)  
11007915:	xor    DWORD PTR ds:[eax],eax
11007918:	call   FWORD PTR [ecx+edx*2+0x0]
1100791c:	(bad)  
1100791d:	jp     0x11007990
1100791f:	add    bh,bh
11007921:	xchg   edi,eax
11007922:	xchg   ecx,eax
11007923:	add    bh,bh
11007925:	mov    dh,0xb1
11007927:	add    bh,bh
11007929:	aam    0xd1
1100792b:	add    bh,bh
1100792d:	(bad)  
1100792e:	inc    DWORD PTR [eax]
11007930:	add    BYTE PTR [eax],al
11007932:	add    BYTE PTR [eax],al
11007934:	das    
11007935:	add    BYTE PTR [esi],cl
11007937:	add    BYTE PTR [eax+0x0],dl
1100793a:	pop    ss
1100793b:	add    BYTE PTR [eax+0x0],dh
1100793e:	and    DWORD PTR [eax],eax
11007940:	nop
11007941:	add    BYTE PTR [ebx],ch
11007943:	add    BYTE PTR [eax-0x30ffca00],dh
11007949:	add    BYTE PTR [eax+0x0],al
1100794c:	lock add BYTE PTR [ecx+0x0],cl
11007950:	call   DWORD PTR [ecx]
11007952:	pop    edx
11007953:	add    bh,bh
11007955:	xor    DWORD PTR [eax+0x0],esi
11007958:	call   DWORD PTR [ecx-0x7a]
1100795b:	add    bh,bh
1100795d:	jno    0x110078fb
1100795f:	add    bh,bh
11007961:	xchg   ecx,eax
11007962:	mov    dl,0x0
11007964:	push   DWORD PTR [ecx-0x2e00ff38]
1100796a:	fild   WORD PTR [eax]
1100796c:	(bad)  
1100796d:	(bad)  
1100796e:	inc    DWORD PTR [eax]
11007970:	add    BYTE PTR [eax],al
11007972:	add    BYTE PTR [eax],al
11007974:	das    
11007975:	add    BYTE PTR [eax],ah
11007977:	add    BYTE PTR [eax+0x0],dl
1100797a:	add    BYTE PTR ss:[eax+0x0],dh
1100797e:	dec    esp
1100797f:	add    BYTE PTR [eax-0x4fff9e00],dl
11007985:	add    BYTE PTR [eax+0x0],bh
11007988:	iret   
11007989:	add    BYTE PTR [esi-0x5bff1000],cl
1100798f:	add    bh,bh
11007991:	adc    DWORD PTR [ebx-0x41ce0100],esi
11007997:	add    bh,bh
11007999:	push   ecx
1100799a:	mov    DWORD PTR [eax],0xd171ff
110079a0:	call   DWORD PTR [ecx-0x4e00ff24]
110079a6:	in     eax,0x0
110079a8:	call   ecx
110079aa:	lock add bh,bh
110079ad:	(bad)  
110079ae:	inc    DWORD PTR [eax]
110079b0:	add    BYTE PTR [eax],al
110079b2:	add    BYTE PTR [eax],al
110079b4:	sub    al,0x0
110079b6:	das    
110079b7:	add    BYTE PTR [ebx+0x0],cl
110079ba:	push   eax
110079bb:	add    BYTE PTR [ecx+0x0],ch
110079be:	jo     0x110079c0
110079c0:	xchg   DWORD PTR [eax],eax
110079c2:	nop
110079c3:	add    BYTE PTR [ebp-0x3bff5000],ah
110079c9:	add    bh,cl
110079cb:	add    cl,ah
110079cd:	add    al,dh
110079cf:	add    al,dh
110079d1:	adc    edi,edi
110079d3:	add    dl,dh
110079d5:	xor    edi,edi
110079d7:	add    ah,dh
110079d9:	push   ecx
110079da:	inc    DWORD PTR [eax]
110079dc:	div    BYTE PTR [ecx-0x1]
110079df:	add    bh,dh
110079e1:	xchg   ecx,eax
110079e2:	inc    DWORD PTR [eax]
110079e4:	stc    
110079e5:	mov    cl,0xff
110079e7:	add    bl,bh
110079e9:	sar    edi,1
110079eb:	add    bh,bh
110079ed:	(bad)  
110079ee:	inc    DWORD PTR [eax]
110079f0:	add    BYTE PTR [eax],al
110079f2:	add    BYTE PTR [eax],al
110079f4:	sbb    eax,DWORD PTR [eax]
110079f6:	das    
110079f7:	add    BYTE PTR ds:0x3f005000,ch
110079fd:	add    BYTE PTR [eax+0x0],dh
11007a00:	push   edx
11007a01:	add    BYTE PTR [eax-0x4fff9d00],dl
11007a07:	add    BYTE PTR [esi+0x0],dh
11007a0a:	iret   
11007a0b:	add    BYTE PTR [eax-0x66ff1000],cl
11007a11:	adc    edi,edi
11007a13:	add    BYTE PTR [esi-0x4bff00cf],ah
11007a19:	push   ecx
11007a1a:	inc    DWORD PTR [eax]
11007a1c:	ret    0xff71
11007a1f:	add    bh,cl
11007a21:	xchg   ecx,eax
11007a22:	inc    DWORD PTR [eax]
11007a24:	fdiv   QWORD PTR [ecx-0x2e14ff01]
11007a2a:	inc    DWORD PTR [eax]
11007a2c:	(bad)  
11007a2d:	(bad)  
11007a2e:	inc    DWORD PTR [eax]
11007a30:	add    BYTE PTR [eax],al
11007a32:	add    BYTE PTR [eax],al
11007a34:	or     BYTE PTR [eax],al
11007a36:	das    
11007a37:	add    BYTE PTR [esi],cl
11007a39:	add    BYTE PTR [eax+0x0],dl
11007a3c:	adc    eax,0x1b007000
11007a41:	add    BYTE PTR [eax-0x4fffdf00],dl
11007a47:	add    BYTE PTR [esi],ah
11007a49:	add    bh,cl
11007a4b:	add    BYTE PTR [eax+eax*1],ch
11007a4e:	lock add BYTE PTR [esi],bh
11007a51:	adc    edi,edi
11007a53:	add    BYTE PTR [eax+0x31],bl
11007a56:	inc    DWORD PTR [eax]
11007a58:	jno    0x11007aab
11007a5a:	inc    DWORD PTR [eax]
11007a5c:	mov    WORD PTR [ecx-0x1],?
11007a5f:	add    BYTE PTR [esi-0x40ff006f],ah
11007a65:	mov    cl,0xff
11007a67:	add    dl,bl
11007a69:	sar    edi,1
11007a6b:	add    bh,bh
11007a6d:	(bad)  
11007a6e:	inc    DWORD PTR [eax]
	...
11007ab4:	add    BYTE PTR [eax],al
11007ab6:	add    BYTE PTR [ebx],al
11007ab8:	add    al,BYTE PTR [eax]
	...
11007ae6:	add    cl,BYTE PTR [ecx]
11007ae8:	or     DWORD PTR [edx],eax
	...
11007b12:	add    BYTE PTR [eax],al
11007b14:	add    BYTE PTR [edx],al
11007b16:	or     DWORD PTR [esi+0x2098c],ecx
	...
11007b44:	add    DWORD PTR [ecx],ecx
11007b46:	mov    WORD PTR [edi+0x2098c9f],ds
	...
11007b70:	add    BYTE PTR [eax],al
11007b72:	add    BYTE PTR [ecx],al
11007b74:	or     DWORD PTR [ebp-0x60505051],ecx
11007b7a:	mov    WORD PTR [ecx],cs
	...
11007ba0:	add    DWORD PTR [eax],eax
11007ba2:	add    BYTE PTR [ecx],cl
11007ba4:	mov    WORD PTR [edi-0x50506061],gs
11007baa:	lahf   
11007bab:	mov    WORD PTR [ecx],cs
	...
11007bc5:	add    BYTE PTR [eax],al
11007bc7:	or     eax,0x18191a1a
11007bcc:	push   ss
11007bcd:	adc    al,0xd
11007bcf:	or     eax,DWORD PTR ds:0xaf8d0900
11007bd5:	scas   eax,DWORD PTR es:[edi]
11007bd6:	scas   eax,DWORD PTR es:[edi]
11007bd7:	scas   eax,DWORD PTR es:[edi]
11007bd8:	lahf   
11007bd9:	scas   eax,DWORD PTR es:[edi]
11007bda:	scas   eax,DWORD PTR es:[edi]
11007bdb:	lahf   
11007bdc:	mov    WORD PTR [ecx],cs
11007bde:	add    BYTE PTR ds:0x16140d0a,al
11007be4:	pop    ss
11007be5:	sbb    DWORD PTR [edx],ebx
11007be7:	sbb    cl,BYTE PTR ds:0x0
	...
11007bf5:	add    BYTE PTR [eax],al
11007bf7:	sbb    dl,BYTE PTR [edx+edx*2+0x4a]
11007bfb:	cmp    al,0x35
11007bfd:	sub    DWORD PTR ds:0x8d09010c,edx
11007c03:	scas   eax,DWORD PTR es:[edi]
11007c04:	scas   eax,DWORD PTR es:[edi]
11007c05:	scas   eax,DWORD PTR es:[edi]
11007c06:	lahf   
11007c07:	scas   eax,DWORD PTR es:[edi]
11007c08:	scas   eax,DWORD PTR es:[edi]
11007c09:	lahf   
11007c0a:	scas   eax,DWORD PTR es:[edi]
11007c0b:	scas   eax,DWORD PTR es:[edi]
11007c0c:	lahf   
11007c0d:	mov    WORD PTR [ecx],cs
11007c0f:	add    DWORD PTR [edx*1+0x4a3c3529],ecx
11007c16:	push   edx
11007c17:	push   ebx
11007c18:	sbb    al,BYTE PTR [ecx]
	...
11007c26:	add    BYTE PTR [edx],bl
11007c28:	push   edx
11007c29:	dec    edx
11007c2a:	cmp    al,0x35
11007c2c:	sub    BYTE PTR ds:0x8d09010c,dl
11007c32:	scas   eax,DWORD PTR es:[edi]
11007c33:	scas   eax,DWORD PTR es:[edi]
11007c34:	scas   eax,DWORD PTR es:[edi]
11007c35:	lahf   
11007c36:	scas   eax,DWORD PTR es:[edi]
11007c37:	scas   eax,DWORD PTR es:[edi]
11007c38:	lahf   
11007c39:	scas   eax,DWORD PTR es:[edi]
11007c3a:	lahf   
11007c3b:	scas   eax,DWORD PTR es:[edi]
11007c3c:	scas   eax,DWORD PTR es:[edi]
11007c3d:	lahf   
11007c3e:	mov    WORD PTR [ecx],cs
11007c40:	add    DWORD PTR [edx*1+0x4a3c3529],ecx
11007c47:	push   edx
11007c48:	sbb    al,BYTE PTR [eax]
	...
11007c56:	add    BYTE PTR [ecx],bl
11007c58:	dec    edx
11007c59:	cmp    al,0x35
11007c5b:	sub    DWORD PTR ds:0x8c09010c,edx
11007c61:	scas   eax,DWORD PTR es:[edi]
11007c62:	scas   eax,DWORD PTR es:[edi]
11007c63:	scas   eax,DWORD PTR es:[edi]
11007c64:	lahf   
11007c65:	scas   eax,DWORD PTR es:[edi]
11007c66:	scas   eax,DWORD PTR es:[edi]
11007c67:	lahf   
11007c68:	scas   eax,DWORD PTR es:[edi]
11007c69:	lahf   
11007c6a:	scas   eax,DWORD PTR es:[edi]
11007c6b:	scas   eax,DWORD PTR es:[edi]
11007c6c:	lahf   
11007c6d:	scas   eax,DWORD PTR es:[edi]
11007c6e:	scas   eax,DWORD PTR es:[edi]
11007c6f:	mov    WORD PTR [ecx],cs
11007c71:	add    DWORD PTR [edx*1+0x4a3c3529],ecx
11007c78:	sbb    al,BYTE PTR [eax]
	...
11007c86:	add    BYTE PTR [eax],bl
11007c88:	cmp    al,0x35
11007c8a:	sub    BYTE PTR ds:0x8e09010c,dl
11007c90:	scas   eax,DWORD PTR es:[edi]
11007c91:	scas   eax,DWORD PTR es:[edi]
11007c92:	lahf   
11007c93:	scas   eax,DWORD PTR es:[edi]
11007c94:	scas   eax,DWORD PTR es:[edi]
11007c95:	lahf   
11007c96:	scas   eax,DWORD PTR es:[edi]
11007c97:	lahf   
11007c98:	scas   eax,DWORD PTR es:[edi]
11007c99:	lahf   
11007c9a:	scas   eax,DWORD PTR es:[edi]
11007c9b:	lahf   
11007c9c:	scas   eax,DWORD PTR es:[edi]
11007c9d:	scas   eax,DWORD PTR es:[edi]
11007c9e:	lahf   
11007c9f:	scas   eax,DWORD PTR es:[edi]
11007ca0:	mov    WORD PTR [ecx],cs
11007ca2:	add    DWORD PTR [edx*1+0x173c3529],ecx
	...
11007cb5:	add    BYTE PTR [eax],al
11007cb7:	push   ss
11007cb8:	xor    eax,0x20c1528
11007cbd:	or     DWORD PTR [ebp-0x50606051],ecx
11007cc3:	fwait
11007cc4:	and    DWORD PTR [edi+0x3e],0x583d3639
11007ccb:	jl     0x11007c67
11007ccd:	scas   eax,DWORD PTR es:[edi]
11007cce:	scas   eax,DWORD PTR es:[edi]
11007ccf:	lahf   
11007cd0:	scas   eax,DWORD PTR es:[edi]
11007cd1:	mov    WORD PTR [ecx],cs
11007cd3:	add    DWORD PTR [edx*1+0x163528],ecx
	...
11007ce6:	add    BYTE PTR [ecx+ebp*1],dl
11007ce9:	adc    eax,0x8d09010c
11007cee:	scas   eax,DWORD PTR es:[edi]
11007cef:	scas   eax,DWORD PTR es:[edi]
11007cf0:	scas   eax,DWORD PTR es:[edi]
11007cf1:	pushf  
11007cf2:	jb     0x11007d38
11007cf4:	aas    
11007cf5:	cmp    bh,BYTE PTR [eax]
11007cf7:	xor    esi,DWORD PTR [edx]
11007cf9:	xor    BYTE PTR [edi],ch
11007cfb:	sub    al,0x2d
11007cfd:	pop    ecx
11007cfe:	call   0x109:0x8caf9faf
11007d05:	or     al,0x15
11007d07:	sub    DWORD PTR [eax+eax*1],edx
	...
11007d16:	add    BYTE PTR ds:0x9010c15,cl
11007d1c:	lea    ebp,[edi+0x5190afaf]
11007d22:	inc    ebp
11007d23:	inc    esp
11007d24:	inc    edx
11007d25:	aas    
11007d26:	cmp    edi,DWORD PTR [eax]
11007d28:	xor    al,0x32
11007d2a:	xor    DWORD PTR [edi],ebp
11007d2c:	sub    eax,0xaf852e2b
11007d31:	lahf   
11007d32:	scas   eax,DWORD PTR es:[edi]
11007d33:	mov    WORD PTR [ecx],cs
11007d35:	add    DWORD PTR [edx*1+0xd],ecx
	...
11007d44:	add    BYTE PTR [eax],al
11007d46:	add    BYTE PTR [ebx],cl
11007d48:	or     al,0x1
11007d4a:	or     DWORD PTR [ebp-0x75505051],ecx
11007d50:	push   ebx
11007d51:	dec    ebp
11007d52:	dec    ebx
11007d53:	dec    eax
11007d54:	inc    ebp
11007d55:	inc    edx
11007d56:	inc    eax
11007d57:	cmp    edi,DWORD PTR [eax]
11007d59:	xor    al,0x32
11007d5b:	xor    BYTE PTR [edi],ch
11007d5d:	sub    eax,0xaf7d2a2b
11007d62:	lahf   
11007d63:	scas   eax,DWORD PTR es:[edi]
11007d64:	mov    WORD PTR [ecx],cs
11007d66:	add    DWORD PTR [ebx+ecx*1],ecx
	...
11007d75:	add    BYTE PTR [eax],al
11007d77:	add    eax,0xaf8d0902
11007d7c:	scas   eax,DWORD PTR es:[edi]
11007d7d:	scas   eax,DWORD PTR es:[edi]
11007d7e:	xchg   ebx,eax
11007d7f:	push   esi
11007d80:	push   esp
11007d81:	push   ebx
11007d82:	dec    edi
11007d83:	dec    ebp
11007d84:	dec    ecx
11007d85:	inc    esi
11007d86:	inc    ebx
11007d87:	inc    eax
11007d88:	cmp    edi,DWORD PTR [eax]
11007d8a:	aaa    
11007d8b:	xor    dh,BYTE PTR [ecx]
11007d8d:	das    
11007d8e:	sub    eax,0xaf852a2b
11007d93:	scas   eax,DWORD PTR es:[edi]
11007d94:	scas   eax,DWORD PTR es:[edi]
11007d95:	mov    WORD PTR [ecx],cs
11007d97:	add    DWORD PTR ds:0x0,eax
	...
11007da5:	add    BYTE PTR [eax],al
11007da7:	add    BYTE PTR [ecx],cl
11007da9:	lea    ebp,[edi+0x619dafaf]
11007daf:	push   esi
11007db0:	pop    ebp
11007db1:	pop    ebp
11007db2:	push   esp
11007db3:	push   edx
11007db4:	dec    edi
11007db5:	dec    ecx
11007db6:	dec    eax
11007db7:	inc    esp
11007db8:	inc    ecx
11007db9:	cmp    edi,DWORD PTR [edx]
11007dbb:	aaa    
11007dbc:	xor    dh,BYTE PTR [ecx]
11007dbe:	das    
11007dbf:	das    
11007dc0:	sub    ebp,DWORD PTR [esi]
11007dc2:	call   0x9:0x8caf9faf
	...
11007dd5:	add    BYTE PTR [eax],al
11007dd7:	or     DWORD PTR [ebp-0x50605051],ecx
11007ddd:	jp     0x11007e3c
11007ddf:	pop    edi
11007de0:	pop    edi
11007de1:	pop    edi
11007de2:	pop    edi
11007de3:	push   ebp
11007de4:	push   ecx
11007de5:	dec    edi
11007de6:	dec    esp
11007de7:	inc    edi
11007de8:	inc    esi
11007de9:	inc    edx
11007dea:	cmp    edi,DWORD PTR [edx]
11007dec:	aaa    
11007ded:	xor    dh,BYTE PTR [edx]
11007def:	das    
11007df0:	sub    al,0x2b
11007df2:	pop    ecx
11007df3:	scas   eax,DWORD PTR es:[edi]
11007df4:	scas   eax,DWORD PTR es:[edi]
11007df5:	scas   eax,DWORD PTR es:[edi]
11007df6:	scas   eax,DWORD PTR es:[edi]
11007df7:	mov    WORD PTR [ecx],cs
	...
11007e05:	add    cl,BYTE PTR [ecx]
11007e07:	mov    WORD PTR [edi-0x62505051],gs
11007e0d:	pop    edi
11007e0e:	pop    edi
11007e0f:	popa   
11007e10:	popa   
11007e11:	popa   
11007e12:	popa   
11007e13:	popa   
11007e14:	pop    edi
11007e15:	pop    edx
11007e16:	push   eax
11007e17:	dec    esp
11007e18:	inc    edi
11007e19:	inc    esi
11007e1a:	inc    ecx
11007e1b:	cmp    edi,DWORD PTR [edx]
11007e1d:	aaa    
11007e1e:	xor    esi,DWORD PTR [ecx]
11007e20:	das    
11007e21:	sub    al,0x2d
11007e23:	call   0x98c:0xafafafaf
	...
11007e32:	add    BYTE PTR [eax],al
11007e34:	add    cl,BYTE PTR [ecx]
11007e36:	lea    ebp,[edi-0x50505051]
11007e3c:	mov    DWORD PTR [edi+0x61],ebx
11007e3f:	fs fs gs gs gs fs pusha 
11007e46:	pop    edx
11007e47:	push   ecx
11007e48:	dec    esi
11007e49:	inc    edi
11007e4a:	inc    esi
11007e4b:	inc    edx
11007e4c:	cmp    edi,DWORD PTR [edx]
11007e4e:	aaa    
11007e4f:	xor    dh,BYTE PTR [ecx]
11007e51:	das    
11007e52:	sub    al,0x7c
11007e54:	scas   eax,DWORD PTR es:[edi]
11007e55:	scas   eax,DWORD PTR es:[edi]
11007e56:	scas   eax,DWORD PTR es:[edi]
11007e57:	scas   eax,DWORD PTR es:[edi]
11007e58:	lahf   
11007e59:	mov    WORD PTR [ecx],cs
11007e5b:	add    DWORD PTR [eax],eax
11007e5d:	add    BYTE PTR [eax],al
11007e5f:	add    BYTE PTR [eax],al
11007e61:	add    BYTE PTR [eax],al
11007e63:	add    cl,BYTE PTR [ecx]
11007e65:	mov    gs,WORD PTR [edi-0x50505051]
11007e6b:	scas   eax,DWORD PTR es:[edi]
11007e6c:	js     0x11007ecf
11007e6e:	gs push 0x68686868
11007e74:	push   0x515b6165
11007e79:	dec    esi
11007e7a:	inc    edi
11007e7b:	inc    esi
11007e7c:	inc    ecx
11007e7d:	aas    
11007e7e:	cmp    dh,BYTE PTR [edi]
11007e80:	xor    dh,BYTE PTR [eax]
11007e82:	das    
11007e83:	pop    eax
11007e84:	scas   eax,DWORD PTR es:[edi]
11007e85:	lahf   
11007e86:	scas   eax,DWORD PTR es:[edi]
11007e87:	scas   eax,DWORD PTR es:[edi]
11007e88:	scas   eax,DWORD PTR es:[edi]
11007e89:	scas   eax,DWORD PTR es:[edi]
11007e8a:	mov    WORD PTR [ecx],cs
11007e8c:	add    al,BYTE PTR [eax]
11007e8e:	add    BYTE PTR [eax],al
11007e90:	add    BYTE PTR [eax],al
11007e92:	add    ecx,DWORD PTR [ecx]
11007e94:	mov    WORD PTR [edi-0x50505051],gs
11007e9a:	scas   eax,DWORD PTR es:[edi]
11007e9b:	scas   eax,DWORD PTR es:[edi]
11007e9c:	ins    BYTE PTR es:[edi],dx
11007e9d:	pushw  0x6b6a
11007ea1:	imul   ebp,DWORD PTR [ebx+0x6b],0x69
11007ea5:	push   0x515e6268
11007eaa:	dec    esi
11007eab:	inc    edi
11007eac:	inc    esi
11007ead:	inc    ecx
11007eae:	aas    
11007eaf:	cmp    BYTE PTR [edx+esi*1],dh
11007eb2:	xor    BYTE PTR ds:0xafafafaf,bh
11007eb8:	scas   eax,DWORD PTR es:[edi]
11007eb9:	scas   eax,DWORD PTR es:[edi]
11007eba:	lahf   
11007ebb:	mov    WORD PTR [ecx],cs
11007ebd:	add    eax,DWORD PTR [eax]
11007ebf:	add    BYTE PTR [eax],al
11007ec1:	add    al,0x9
11007ec3:	mov    gs,WORD PTR [edi-0x50505051]
11007ec9:	scas   eax,DWORD PTR es:[edi]
11007eca:	scas   eax,DWORD PTR es:[edi]
11007ecb:	scas   eax,DWORD PTR es:[edi]
11007ecc:	push   0x6f6d6b68
11007ed1:	outs   dx,BYTE PTR ds:[esi]
11007ed2:	outs   dx,DWORD PTR ds:[esi]
11007ed3:	ins    DWORD PTR es:[edi],dx
11007ed4:	ins    BYTE PTR es:[edi],dx
11007ed5:	imul   ebp,DWORD PTR [ecx+0x68],0x62
11007ed9:	pop    esp
11007eda:	push   ecx
11007edb:	dec    esi
11007edc:	inc    edi
11007edd:	inc    esp
11007ede:	inc    ecx
11007edf:	cmp    edi,DWORD PTR [eax]
11007ee1:	xor    esi,DWORD PTR [edx]
11007ee3:	ss scas eax,DWORD PTR es:[edi]
11007ee5:	scas   eax,DWORD PTR es:[edi]
11007ee6:	scas   eax,DWORD PTR es:[edi]
11007ee7:	scas   eax,DWORD PTR es:[edi]
11007ee8:	scas   eax,DWORD PTR es:[edi]
11007ee9:	scas   eax,DWORD PTR es:[edi]
11007eea:	lahf   
11007eeb:	scas   eax,DWORD PTR es:[edi]
11007eec:	mov    WORD PTR [ecx],cs
11007eee:	add    al,0x0
11007ef0:	add    BYTE PTR [edi],al
11007ef2:	or     DWORD PTR [esi-0x50505051],ecx
11007ef8:	scas   eax,DWORD PTR es:[edi]
11007ef9:	scas   eax,DWORD PTR es:[edi]
11007efa:	scas   eax,DWORD PTR es:[edi]
11007efb:	scas   eax,DWORD PTR es:[edi]
11007efc:	push   0x6b
11007efe:	outs   dx,DWORD PTR ds:[esi]
11007eff:	jno    0x11007f75
11007f01:	jne    0x11007f7a
11007f03:	jae    0x11007f75
11007f05:	outs   dx,DWORD PTR ds:[esi]
11007f06:	ins    BYTE PTR es:[edi],dx
11007f07:	push   0x68
11007f09:	bound  ebx,QWORD PTR [ebx+0x51]
11007f0c:	dec    esi
11007f0d:	dec    eax
11007f0e:	inc    esp
11007f0f:	inc    eax
11007f10:	aas    
11007f11:	cmp    BYTE PTR [ebx],dh
11007f13:	cmp    DWORD PTR [edi-0x60505051],ebp
11007f19:	lahf   
11007f1a:	scas   eax,DWORD PTR es:[edi]
11007f1b:	scas   eax,DWORD PTR es:[edi]
11007f1c:	lea    ecx,[ecx]
11007f1e:	push   es
11007f1f:	add    BYTE PTR [eax],al
11007f21:	add    BYTE PTR [esi],al
11007f23:	or     DWORD PTR [esi-0x50505051],ecx
11007f29:	scas   eax,DWORD PTR es:[edi]
11007f2a:	scas   eax,DWORD PTR es:[edi]
11007f2b:	scas   eax,DWORD PTR es:[edi]
11007f2c:	jo     0x11007f9b
11007f2e:	je     0x11007faa
11007f30:	jnp    0x11007fb0
11007f32:	jle    0x11007fae
11007f34:	js     0x11007fa9
11007f36:	outs   dx,DWORD PTR ds:[esi]
11007f37:	ins    BYTE PTR es:[edi],dx
11007f38:	imul   esp,DWORD PTR [esi+0x61],0x48494f5a
11007f3f:	inc    ebx
11007f40:	inc    eax
11007f41:	cmp    bh,BYTE PTR [eax]
11007f43:	ds scas eax,DWORD PTR es:[edi]
11007f45:	scas   eax,DWORD PTR es:[edi]
11007f46:	scas   eax,DWORD PTR es:[edi]
11007f47:	scas   eax,DWORD PTR es:[edi]
11007f48:	scas   eax,DWORD PTR es:[edi]
11007f49:	scas   eax,DWORD PTR es:[edi]
11007f4a:	lahf   
11007f4b:	mov    WORD PTR [ecx],cs
11007f4d:	push   es
11007f4e:	add    BYTE PTR [eax],al
11007f50:	add    BYTE PTR [eax],al
11007f52:	add    BYTE PTR [esi],al
11007f54:	or     DWORD PTR [esi-0x50505051],ecx
11007f5a:	scas   eax,DWORD PTR es:[edi]
11007f5b:	scas   eax,DWORD PTR es:[edi]
11007f5c:	xor    BYTE PTR [eax+0x7a],0x80
11007f60:	add    DWORD PTR [esp+eax*4+0x71767e83],0x6f
11007f68:	push   0x68
11007f6a:	gs pop esi
11007f6c:	pop    edx
11007f6d:	dec    edi
11007f6e:	dec    ecx
11007f6f:	inc    esi
11007f70:	inc    ebx
11007f71:	aas    
11007f72:	cmp    ah,BYTE PTR [edi-0x51]
11007f75:	scas   eax,DWORD PTR es:[edi]
11007f76:	scas   eax,DWORD PTR es:[edi]
11007f77:	scas   eax,DWORD PTR es:[edi]
11007f78:	lahf   
11007f79:	lahf   
11007f7a:	lea    ecx,[ecx]
11007f7c:	push   es
11007f7d:	add    BYTE PTR [eax],al
11007f7f:	add    BYTE PTR [eax],al
11007f81:	add    BYTE PTR [eax],al
11007f83:	add    BYTE PTR [esi],al
11007f85:	or     DWORD PTR [esi-0x50505051],ecx
11007f8b:	scas   eax,DWORD PTR es:[edi]
11007f8c:	xchg   ecx,eax
11007f8d:	je     0x1100800e
11007f8f:	xchg   BYTE PTR [ecx-0x7c787576],cl
11007f95:	jle    0x1100800f
11007f97:	jno    0x11008005
11007f99:	imul   esp,DWORD PTR [esi+0x64],0x494f515d
11007fa0:	inc    ebp
11007fa1:	inc    ecx
11007fa2:	aas    
11007fa3:	sub    DWORD PTR [edi-0x50505061],0x4098d
	...
11007fb5:	pop    es
11007fb6:	or     DWORD PTR [ebp-0x50505051],ecx
11007fbc:	sahf   
11007fbd:	jbe    0x11007f41
11007fbf:	mov    DWORD PTR [edi-0x78746f6e],ecx
11007fc5:	cmp    BYTE PTR [edx+0x73],0x6d
11007fc9:	push   0x68
11007fcb:	fs popa 
11007fcd:	push   ebp
11007fce:	push   edx
11007fcf:	dec    ebp
11007fd0:	dec    eax
11007fd1:	inc    esp
11007fd2:	inc    esp
11007fd3:	fwait
11007fd4:	scas   eax,DWORD PTR es:[edi]
11007fd5:	scas   eax,DWORD PTR es:[edi]
11007fd6:	scas   eax,DWORD PTR es:[edi]
11007fd7:	scas   eax,DWORD PTR es:[edi]
11007fd8:	mov    cs,WORD PTR [ecx]
11007fda:	add    eax,DWORD PTR [eax]
	...
11007fe4:	add    BYTE PTR [eax],al
11007fe6:	add    BYTE PTR [ecx],cl
11007fe8:	mov    gs,WORD PTR [edi-0x74505051]
11007fee:	or     DWORD PTR [edx-0x6f69696d],0xffffff8a
11007ff5:	test   BYTE PTR [ebx+0x77],bh
11007ff8:	outs   dx,DWORD PTR ds:[esi]
11007ff9:	imul   ebp,DWORD PTR [eax+0x65],0x61
11007ffd:	pop    edi
11007ffe:	push   esi
11007fff:	dec    edi
11008000:	dec    ebx
11008001:	inc    ebp
11008002:	jb     0x11007fb3
11008004:	scas   eax,DWORD PTR es:[edi]
11008005:	scas   eax,DWORD PTR es:[edi]
11008006:	scas   eax,DWORD PTR es:[edi]
11008007:	lea    ecx,[ecx]
11008009:	add    DWORD PTR [eax],eax
	...
11008017:	add    DWORD PTR [ecx],ecx
11008019:	mov    gs,WORD PTR [edi-0x7c615051]
1100801f:	mov    DWORD PTR [edx-0x756e6969],edx
11008025:	test   BYTE PTR [esi+0x75],bh
11008028:	outs   dx,DWORD PTR ds:[esi]
11008029:	push   0x68
1100802b:	gs popa 
1100802d:	pop    edi
1100802e:	pop    ebp
1100802f:	push   esp
11008030:	dec    ebp
11008031:	push   ecx
11008032:	pushf  
11008033:	scas   eax,DWORD PTR es:[edi]
11008034:	scas   eax,DWORD PTR es:[edi]
11008035:	scas   eax,DWORD PTR es:[edi]
11008036:	mov    cs,WORD PTR [ecx]
	...
11008044:	add    BYTE PTR [eax],al
11008046:	add    BYTE PTR [ebx],dl
11008048:	add    eax,0xafaf8e09
1100804d:	scas   eax,DWORD PTR es:[edi]
1100804e:	cdq    
1100804f:	xchg   BYTE PTR [ebx-0x76706c6d],cl
11008055:	cmp    DWORD PTR [ebx+0x77],0x6f
11008059:	push   0x68
1100805b:	gs popa 
1100805d:	pop    edi
1100805e:	pop    ebp
1100805f:	push   esi
11008060:	push   edx
11008061:	xchg   ecx,eax
11008062:	scas   eax,DWORD PTR es:[edi]
11008063:	scas   eax,DWORD PTR es:[edi]
11008064:	scas   eax,DWORD PTR es:[edi]
11008065:	lea    ecx,[ecx]
11008067:	add    eax,0x113
	...
11008074:	add    BYTE PTR [eax],al
11008076:	add    BYTE PTR [eax],bl
11008078:	xor    eax,0xaf8e0905
1100807d:	scas   eax,DWORD PTR es:[edi]
1100807e:	scas   eax,DWORD PTR es:[edi]
1100807f:	cwde   
11008080:	test   BYTE PTR [eax-0x7f797676],cl
11008086:	jns    0x110080f9
11008088:	ins    DWORD PTR es:[edi],dx
11008089:	push   0x66
1100808b:	fs popa 
1100808d:	pop    edi
1100808e:	push   esi
1100808f:	push   esi
11008090:	mov    ch,BYTE PTR [edi+0x98eafaf]
11008096:	add    eax,0x1835
	...
110080a7:	sbb    DWORD PTR [ebp+esi*1+0x5],ecx
110080ab:	or     DWORD PTR [esi-0x66505051],ecx
110080b1:	add    DWORD PTR [ebx+0x747a7f82],0x6e
110080b8:	ins    BYTE PTR es:[edi],dx
110080b9:	push   0x5d5f6165
110080be:	popa   
110080bf:	xchg   ebx,eax
110080c0:	scas   eax,DWORD PTR es:[edi]
110080c1:	scas   eax,DWORD PTR es:[edi]
110080c2:	scas   eax,DWORD PTR es:[edi]
110080c3:	mov    cs,WORD PTR [ecx]
110080c5:	add    eax,0x194f35
	...
110080d6:	add    BYTE PTR [edx],bl
110080d8:	push   ebx
110080d9:	dec    edi
110080da:	xor    eax,0xaf8e0905
110080df:	scas   eax,DWORD PTR es:[edi]
110080e0:	scas   eax,DWORD PTR es:[edi]
110080e1:	sahf   
110080e2:	mov    edi,DWORD PTR [ecx+0x74]
110080e5:	jo     0x11008154
110080e7:	imul   ebp,DWORD PTR [eax+0x65],0x62
110080eb:	pop    edi
110080ec:	pop    edi
110080ed:	jp     0x1100808c
110080ef:	scas   eax,DWORD PTR es:[edi]
110080f0:	scas   eax,DWORD PTR es:[edi]
110080f1:	scas   eax,DWORD PTR es:[edi]
110080f2:	mov    cs,WORD PTR [ecx]
110080f4:	add    eax,0x1a524e35
	...
11008105:	add    BYTE PTR [eax],al
11008107:	sbb    dl,BYTE PTR [ebx+0x53]
1100810a:	dec    esi
1100810b:	xor    eax,0xaf8e0905
11008110:	scas   eax,DWORD PTR es:[edi]
11008111:	scas   eax,DWORD PTR es:[edi]
11008112:	scas   eax,DWORD PTR es:[edi]
11008113:	sahf   
11008114:	xchg   ecx,eax
11008115:	xor    BYTE PTR [eax+0x6a],0x68
11008119:	ins    BYTE PTR es:[edi],dx
1100811a:	jne    0x110080a5
1100811c:	popf   
1100811d:	lahf   
1100811e:	scas   eax,DWORD PTR es:[edi]
1100811f:	scas   eax,DWORD PTR es:[edi]
11008120:	scas   eax,DWORD PTR es:[edi]
11008121:	mov    cs,WORD PTR [ecx]
11008123:	add    eax,0x53524f35
11008128:	sbb    al,BYTE PTR [ecx]
	...
11008136:	add    DWORD PTR [edx],ebx
11008138:	push   ebx
11008139:	push   ebx
1100813a:	push   ebx
1100813b:	dec    ebp
1100813c:	xor    eax,0xaf8e0905
11008141:	scas   eax,DWORD PTR es:[edi]
11008142:	scas   eax,DWORD PTR es:[edi]
11008143:	scas   eax,DWORD PTR es:[edi]
11008144:	scas   eax,DWORD PTR es:[edi]
11008145:	scas   eax,DWORD PTR es:[edi]
11008146:	scas   eax,DWORD PTR es:[edi]
11008147:	scas   eax,DWORD PTR es:[edi]
11008148:	scas   eax,DWORD PTR es:[edi]
11008149:	scas   eax,DWORD PTR es:[edi]
1100814a:	scas   eax,DWORD PTR es:[edi]
1100814b:	scas   eax,DWORD PTR es:[edi]
1100814c:	scas   eax,DWORD PTR es:[edi]
1100814d:	scas   eax,DWORD PTR es:[edi]
1100814e:	scas   eax,DWORD PTR es:[edi]
1100814f:	scas   eax,DWORD PTR es:[edi]
11008150:	mov    cs,WORD PTR [ecx]
11008152:	add    eax,0x53534c35
11008157:	push   ebx
11008158:	sbb    al,BYTE PTR [eax]
	...
11008166:	add    BYTE PTR [edx],bl
11008168:	push   ebx
11008169:	push   esi
1100816a:	push   ebx
1100816b:	push   ebx
1100816c:	dec    esp
1100816d:	xor    eax,0xaf8e0905
11008172:	scas   eax,DWORD PTR es:[edi]
11008173:	scas   eax,DWORD PTR es:[edi]
11008174:	scas   eax,DWORD PTR es:[edi]
11008175:	scas   eax,DWORD PTR es:[edi]
11008176:	scas   eax,DWORD PTR es:[edi]
11008177:	scas   eax,DWORD PTR es:[edi]
11008178:	scas   eax,DWORD PTR es:[edi]
11008179:	scas   eax,DWORD PTR es:[edi]
1100817a:	scas   eax,DWORD PTR es:[edi]
1100817b:	scas   eax,DWORD PTR es:[edi]
1100817c:	scas   eax,DWORD PTR es:[edi]
1100817d:	scas   eax,DWORD PTR es:[edi]
1100817e:	scas   eax,DWORD PTR es:[edi]
1100817f:	lea    ecx,[ecx]
11008181:	add    eax,0x53524f35
11008186:	push   esi
11008187:	push   ebx
11008188:	sbb    al,BYTE PTR [eax]
	...
11008196:	add    BYTE PTR [edx],bl
11008198:	push   esi
11008199:	push   ebx
1100819a:	push   esi
1100819b:	push   ebx
1100819c:	push   ebx
1100819d:	dec    esp
1100819e:	xor    eax,0xaf8e0905
110081a3:	scas   eax,DWORD PTR es:[edi]
110081a4:	scas   eax,DWORD PTR es:[edi]
110081a5:	scas   eax,DWORD PTR es:[edi]
110081a6:	scas   eax,DWORD PTR es:[edi]
110081a7:	scas   eax,DWORD PTR es:[edi]
110081a8:	scas   eax,DWORD PTR es:[edi]
110081a9:	scas   eax,DWORD PTR es:[edi]
110081aa:	scas   eax,DWORD PTR es:[edi]
110081ab:	scas   eax,DWORD PTR es:[edi]
110081ac:	lahf   
110081ad:	scas   eax,DWORD PTR es:[edi]
110081ae:	mov    cs,WORD PTR [ecx]
110081b0:	add    eax,0x53544c35
110081b5:	push   esi
110081b6:	push   ebx
110081b7:	push   ebx
110081b8:	sbb    al,BYTE PTR [eax]
	...
110081c6:	add    BYTE PTR [edx],bl
110081c8:	push   ebx
110081c9:	push   ebx
110081ca:	push   ebx
110081cb:	push   ebx
110081cc:	push   ebx
110081cd:	push   ebx
110081ce:	dec    esp
110081cf:	xor    eax,0xaf8e0905
110081d4:	scas   eax,DWORD PTR es:[edi]
110081d5:	scas   eax,DWORD PTR es:[edi]
110081d6:	scas   eax,DWORD PTR es:[edi]
110081d7:	scas   eax,DWORD PTR es:[edi]
110081d8:	scas   eax,DWORD PTR es:[edi]
110081d9:	scas   eax,DWORD PTR es:[edi]
110081da:	scas   eax,DWORD PTR es:[edi]
110081db:	scas   eax,DWORD PTR es:[edi]
110081dc:	scas   eax,DWORD PTR es:[edi]
110081dd:	mov    cs,WORD PTR [ecx]
110081df:	add    eax,0x53524e35
110081e4:	push   ebx
110081e5:	push   ebx
110081e6:	push   ebx
110081e7:	push   ebx
110081e8:	sbb    al,BYTE PTR [eax]
	...
110081f6:	add    BYTE PTR ds:0x1a1a1a1a,cl
110081fc:	sbb    bl,BYTE PTR [edx]
110081fe:	sbb    DWORD PTR [eax],ebx
11008200:	adc    eax,DWORD PTR [eax]
11008202:	or     DWORD PTR [esi-0x50505051],ecx
11008208:	scas   eax,DWORD PTR es:[edi]
11008209:	scas   eax,DWORD PTR es:[edi]
1100820a:	scas   eax,DWORD PTR es:[edi]
1100820b:	lahf   
1100820c:	mov    WORD PTR [ecx],cs
1100820e:	add    BYTE PTR [ebx],dl
11008210:	sbb    BYTE PTR [ecx],bl
11008212:	sbb    bl,BYTE PTR [edx]
11008214:	sbb    bl,BYTE PTR [edx]
11008216:	sbb    bl,BYTE PTR [edx]
11008218:	or     eax,0x0
	...
11008231:	add    BYTE PTR [eax],al
11008233:	or     DWORD PTR [esi-0x50505051],ecx
11008239:	scas   eax,DWORD PTR es:[edi]
1100823a:	scas   eax,DWORD PTR es:[edi]
1100823b:	mov    cs,WORD PTR [ecx]
	...
11008261:	add    BYTE PTR [eax],al
11008263:	push   es
11008264:	or     DWORD PTR [esi-0x50505051],ecx
1100826a:	lea    ecx,[ecx]
1100826c:	push   es
	...
11008291:	add    BYTE PTR [eax],al
11008293:	add    BYTE PTR [esi],al
11008295:	or     DWORD PTR [esi+0x98dafaf],ecx
1100829b:	pop    es
	...
110082c4:	add    BYTE PTR [esi],al
110082c6:	or     DWORD PTR [esi+0x6098e],ecx
	...
110082f4:	add    BYTE PTR [eax],al
110082f6:	push   es
110082f7:	or     DWORD PTR [ecx],ecx
110082f9:	pop    es
	...
11008326:	add    BYTE PTR [edi],al
11008328:	pop    es
	...
1100836d:	add    BYTE PTR [eax],al
1100836f:	add    bh,bh
11008371:	(bad)  
11008372:	(bad)  
11008373:	(bad)  
11008374:	(bad)  
11008375:	(bad)  
11008376:	(bad)  
11008377:	(bad)  
11008378:	(bad)  
11008379:	(bad)  
1100837a:	(bad)  
1100837b:	jg     0x1100837c
1100837d:	(bad)  
1100837e:	(bad)  
1100837f:	(bad)  
11008380:	(bad)  
11008381:	(bad)  
11008382:	cld    
11008383:	aas    
11008384:	(bad)  
11008385:	(bad)  
11008386:	(bad)  
11008387:	(bad)  
11008388:	(bad)  
11008389:	(bad)  
1100838a:	clc    
1100838b:	pop    ds
1100838c:	(bad)  
1100838d:	(bad)  
1100838e:	(bad)  
1100838f:	(bad)  
11008390:	(bad)  
11008391:	push   eax
11008393:	ud0    edi,edi
11008396:	(bad)  
11008397:	(bad)  
11008398:	(bad)  
11008399:	jmp    eax
1100839b:	pop    es
1100839c:	(bad)  
1100839d:	(bad)  
1100839e:	(bad)  
1100839f:	(bad)  
110083a0:	cld    
110083a1:	add    BYTE PTR [eax],al
110083a3:	add    BYTE PTR [eax],al
110083a5:	aas    
110083a6:	(bad)  
110083a7:	(bad)  
110083a8:	cld    
110083a9:	add    BYTE PTR [eax],al
110083ab:	add    BYTE PTR [eax],al
110083ad:	aas    
110083ae:	(bad)  
110083af:	(bad)  
110083b0:	cld    
110083b1:	add    BYTE PTR [eax],al
110083b3:	add    BYTE PTR [eax],al
110083b5:	aas    
110083b6:	(bad)  
110083b7:	(bad)  
110083b8:	cld    
110083b9:	add    BYTE PTR [eax],al
110083bb:	add    BYTE PTR [eax],al
110083bd:	aas    
110083be:	(bad)  
110083bf:	(bad)  
110083c0:	cld    
110083c1:	add    BYTE PTR [eax],al
110083c3:	add    BYTE PTR [eax],al
110083c5:	aas    
110083c6:	(bad)  
110083c7:	(bad)  
110083c8:	cld    
110083c9:	add    BYTE PTR [eax],al
110083cb:	add    BYTE PTR [eax],al
110083cd:	aas    
110083ce:	(bad)  
110083cf:	(bad)  
110083d0:	cld    
110083d1:	add    BYTE PTR [eax],al
110083d3:	add    BYTE PTR [eax],al
110083d5:	aas    
110083d6:	(bad)  
110083d7:	(bad)  
110083d8:	cld    
110083d9:	add    BYTE PTR [eax],al
110083db:	add    BYTE PTR [eax],al
110083dd:	aas    
110083de:	(bad)  
110083df:	(bad)  
110083e0:	cld    
110083e1:	add    BYTE PTR [eax],al
110083e3:	add    BYTE PTR [eax],al
110083e5:	aas    
110083e6:	(bad)  
110083e7:	(bad)  
110083e8:	cld    
110083e9:	add    BYTE PTR [eax],al
110083eb:	add    BYTE PTR [eax],al
110083ed:	aas    
110083ee:	(bad)  
110083ef:	(bad)  
110083f0:	cld    
110083f1:	add    BYTE PTR [eax],al
110083f3:	add    BYTE PTR [eax],al
110083f5:	aas    
110083f6:	(bad)  
110083f7:	(bad)  
110083f8:	cld    
110083f9:	add    BYTE PTR [eax],al
110083fb:	add    BYTE PTR [eax],al
110083fd:	aas    
110083fe:	(bad)  
110083ff:	(bad)  
11008400:	cld    
11008401:	add    BYTE PTR [eax],al
11008403:	add    BYTE PTR [eax],al
11008405:	aas    
11008406:	(bad)  
11008407:	(bad)  
11008408:	clc    
11008409:	add    BYTE PTR [eax],al
1100840b:	add    BYTE PTR [eax],al
1100840d:	pop    ds
1100840e:	(bad)  
1100840f:	push   eax
11008411:	add    BYTE PTR [eax],al
11008413:	add    BYTE PTR [eax],al
11008415:	ud0    edi,edi
11008418:	loopne 0x1100841a
1100841a:	add    BYTE PTR [eax],al
1100841c:	add    BYTE PTR [edi],al
1100841e:	(bad)  
1100841f:	inc    eax
11008421:	add    BYTE PTR [eax],al
11008423:	add    BYTE PTR [eax],al
11008425:	add    edi,edi
11008427:	inc    DWORD PTR [eax+0x0]
1100842d:	add    edi,edi
1100842f:	inc    DWORD PTR [eax+0x0]
11008435:	add    edi,edi
11008437:	inc    eax
11008439:	add    BYTE PTR [eax],al
1100843b:	add    BYTE PTR [eax],al
1100843d:	add    edi,edi
1100843f:	jmp    eax
11008441:	add    BYTE PTR [eax],al
11008443:	add    BYTE PTR [eax],al
11008445:	pop    es
11008446:	(bad)  
11008447:	push   eax
11008449:	add    BYTE PTR [eax],al
1100844b:	add    BYTE PTR [eax],al
1100844d:	ud0    edi,edi
11008450:	clc    
11008451:	add    BYTE PTR [eax],al
11008453:	add    BYTE PTR [eax],al
11008455:	pop    ds
11008456:	(bad)  
11008457:	(bad)  
11008458:	cld    
11008459:	add    BYTE PTR [eax],al
1100845b:	add    BYTE PTR [eax],al
1100845d:	aas    
1100845e:	(bad)  
1100845f:	(bad)  
11008460:	cld    
11008461:	add    BYTE PTR [eax],al
11008463:	add    BYTE PTR [eax],al
11008465:	aas    
11008466:	(bad)  
11008467:	(bad)  
11008468:	cld    
11008469:	add    BYTE PTR [eax],al
1100846b:	add    BYTE PTR [eax],al
1100846d:	aas    
1100846e:	(bad)  
1100846f:	(bad)  
11008470:	cld    
11008471:	add    BYTE PTR [eax],al
11008473:	add    BYTE PTR [eax],al
11008475:	aas    
11008476:	(bad)  
11008477:	(bad)  
11008478:	cld    
11008479:	add    BYTE PTR [eax],al
1100847b:	add    BYTE PTR [eax],al
1100847d:	aas    
1100847e:	(bad)  
1100847f:	(bad)  
11008480:	cld    
11008481:	add    BYTE PTR [eax],al
11008483:	add    BYTE PTR [eax],al
11008485:	aas    
11008486:	(bad)  
11008487:	(bad)  
11008488:	cld    
11008489:	add    BYTE PTR [eax],al
1100848b:	add    BYTE PTR [eax],al
1100848d:	aas    
1100848e:	(bad)  
1100848f:	(bad)  
11008490:	cld    
11008491:	add    BYTE PTR [eax],al
11008493:	add    BYTE PTR [eax],al
11008495:	aas    
11008496:	(bad)  
11008497:	(bad)  
11008498:	cld    
11008499:	add    BYTE PTR [eax],al
1100849b:	add    BYTE PTR [eax],al
1100849d:	aas    
1100849e:	(bad)  
1100849f:	(bad)  
110084a0:	cld    
110084a1:	add    BYTE PTR [eax],al
110084a3:	add    BYTE PTR [eax],al
110084a5:	aas    
110084a6:	(bad)  
110084a7:	(bad)  
110084a8:	cld    
110084a9:	add    BYTE PTR [eax],al
110084ab:	add    BYTE PTR [eax],al
110084ad:	aas    
110084ae:	(bad)  
110084af:	(bad)  
110084b0:	cld    
110084b1:	add    BYTE PTR [eax],al
110084b3:	add    BYTE PTR [eax],al
110084b5:	aas    
110084b6:	(bad)  
110084b7:	(bad)  
110084b8:	cld    
110084b9:	add    BYTE PTR [eax],al
110084bb:	add    BYTE PTR [eax],al
110084bd:	aas    
110084be:	(bad)  
110084bf:	(bad)  
110084c0:	(bad)  
110084c1:	jmp    eax
110084c3:	pop    es
110084c4:	(bad)  
110084c5:	(bad)  
110084c6:	(bad)  
110084c7:	(bad)  
110084c8:	(bad)  
110084c9:	push   eax
110084cb:	ud0    edi,edi
110084ce:	(bad)  
110084cf:	(bad)  
110084d0:	(bad)  
110084d1:	(bad)  
110084d2:	clc    
110084d3:	pop    ds
110084d4:	(bad)  
110084d5:	(bad)  
110084d6:	(bad)  
110084d7:	(bad)  
110084d8:	(bad)  
110084d9:	(bad)  
110084da:	cld    
110084db:	aas    
110084dc:	(bad)  
110084dd:	(bad)  
110084de:	(bad)  
110084df:	(bad)  
110084e0:	(bad)  
110084e1:	(bad)  
110084e2:	(bad)  
110084e3:	jg     0x110084e4
110084e5:	(bad)  
110084e6:	(bad)  
110084e7:	(bad)  
110084e8:	(bad)  
110084e9:	(bad)  
110084ea:	(bad)  
110084eb:	(bad)  
110084ec:	(bad)  
110084ed:	(bad)  
110084ee:	(bad)  
110084ef:	jmp    FWORD PTR [eax]
110084f1:	add    BYTE PTR [eax],al
110084f3:	add    BYTE PTR [eax],ch
110084f5:	add    BYTE PTR [eax],al
110084f7:	add    BYTE PTR [eax+0x0],dl
110084fa:	add    BYTE PTR [eax],al
110084fc:	add    DWORD PTR [eax],eax
110084fe:	or     BYTE PTR [eax],al
	...
1100851c:	add    eax,0xc000505
11008521:	pop    es
11008522:	add    al,0x0
11008524:	or     cl,BYTE PTR [edx]
11008526:	or     al,BYTE PTR [eax]
11008528:	push   cs
11008529:	push   cs
1100852a:	push   cs
1100852b:	add    BYTE PTR [edi+ecx*1],bl
1100852e:	or     al,BYTE PTR [eax]
11008530:	sbb    al,0x10
11008532:	or     al,BYTE PTR [eax]
11008534:	adc    BYTE PTR [eax],dl
11008536:	adc    BYTE PTR [eax],al
11008538:	push   ds
11008539:	push   ds
1100853a:	push   ds
1100853b:	add    BYTE PTR ds:0x29001019,ch
11008541:	sub    DWORD PTR [ecx],ebp
11008543:	add    BYTE PTR [esi],ch
11008545:	cs add BYTE PTR cs:[eax],dh
11008549:	xor    BYTE PTR [eax],dh
1100854b:	add    BYTE PTR [esi],dh
1100854d:	ss add BYTE PTR ss:[edx],bh
11008551:	cmp    bh,BYTE PTR [edx]
11008553:	add    BYTE PTR ds:0x45003d3d,bh
11008559:	daa    
1100855a:	sbb    DWORD PTR [eax],eax
1100855c:	arpl   WORD PTR [edi],si
1100855e:	and    al,0x0
11008560:	arpl   WORD PTR [eax],di
11008562:	and    al,0x0
11008564:	cmp    BYTE PTR fs:[eax+eax*1],ah
11008568:	ins    DWORD PTR es:[edi],dx
11008569:	cmp    eax,0x3f710028
1100856e:	sub    DWORD PTR [eax],eax
11008570:	jb     0x110085b2
11008572:	sub    al,BYTE PTR [eax]
11008574:	inc    edx
11008575:	inc    edx
11008576:	inc    edx
11008577:	add    BYTE PTR [esi+0x46],al
1100857a:	inc    esi
1100857b:	add    BYTE PTR [ecx+0x49],cl
1100857e:	dec    ecx
1100857f:	add    BYTE PTR [esi+0x4e],cl
11008582:	dec    esi
11008583:	add    BYTE PTR [edi+0x57],dl
11008586:	push   edi
11008587:	add    BYTE PTR [ecx+0x59],bl
1100858a:	pop    ecx
1100858b:	add    BYTE PTR [ebp+0x5d],bl
1100858e:	pop    ebp
1100858f:	add    BYTE PTR [ecx+0x61],ah
11008592:	popa   
11008593:	add    BYTE PTR [ebp+0x65],ah
11008596:	add    BYTE PTR gs:[eax+0x68],ch
1100859a:	push   0x6c6c6c00
1100859f:	add    BYTE PTR [ecx+0x79],bh
110085a2:	jns    0x110085a4
110085a4:	jle    0x11008624
110085a6:	jle    0x110085a8
110085a8:	mov    DWORD PTR [ebp+0x33],ecx
110085ab:	add    BYTE PTR [eax-0x67ffcaaf],dl
110085b1:	push   esi
110085b2:	cmp    BYTE PTR [eax],al
110085b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
110085b5:	pop    esi
110085b6:	add    BYTE PTR ds:[ecx-0x55ffc1a1],ch
110085bd:	pusha  
110085be:	aas    
110085bf:	add    cl,cl
110085c1:	push   ebx
110085c2:	cs add cl,cl
110085c5:	push   esp
110085c6:	das    
110085c7:	add    ah,cl
110085c9:	push   edi
110085ca:	xor    DWORD PTR [eax],eax
110085cc:	iret   
110085cd:	pop    ebx
110085ce:	xor    eax,0x385fd200
110085d3:	add    bl,dl
110085d5:	pusha  
110085d6:	cmp    DWORD PTR [eax],eax
110085d8:	aad    0x64
110085da:	cmp    al,0x0
110085dc:	fldcw  WORD PTR [eax+0x3f]
110085df:	add    BYTE PTR [esi-0x4dffbf9e],ch
110085e5:	fs inc edx
110085e7:	add    BYTE PTR [ebp-0x49ffbc9a],dh
110085ed:	inc    sp
110085ef:	add    ch,al
110085f1:	outs   dx,DWORD PTR ds:[esi]
110085f2:	dec    ecx
110085f3:	add    ch,dl
110085f5:	addr16 inc ecx
110085f7:	add    cl,bl
110085f9:	imul   eax,DWORD PTR [eax+0x0],0x426cdc
11008600:	fsubr  DWORD PTR [ebx+0x44]
11008603:	add    ch,bl
11008605:	outs   dx,BYTE PTR ds:[esi]
11008606:	inc    esp
11008607:	add    al,dl
11008609:	imul   ecx,DWORD PTR [ecx+0x0],0x4570df
11008610:	xlat   BYTE PTR ds:[ebx]
11008611:	jae    0x11008665
11008613:	add    bh,bl
11008615:	jle    0x11008671
11008617:	add    al,ah
11008619:	jno    0x11008662
1100861b:	add    al,ah
1100861d:	jb     0x11008668
1100861f:	add    dl,ah
11008621:	je     0x1100866c
11008623:	add    bl,ah
11008625:	ja     0x11008673
11008627:	add    bl,ah
11008629:	js     0x11008679
1100862b:	add    ch,ah
1100862d:	jns    0x1100867c
1100862f:	add    cl,ah
11008631:	jg     0x11008686
11008633:	add    bh,ah
11008635:	jge    0x11008689
11008637:	add    cl,ah
11008639:	jg     0x1100868f
1100863b:	add    bh,ah
1100863d:	jle    0x11008693
1100863f:	add    cl,ch
11008641:	jle    0x11008694
11008643:	add    cl,ch
11008645:	adc    DWORD PTR [esi+0x0],0x5582ec
1100864c:	jmp    0xfb00ddd5
11008651:	sbb    DWORD PTR [eax+0x0],0xffffffe9
11008655:	test   BYTE PTR [ecx+0x0],bl
11008658:	in     eax,dx
11008659:	xchg   BYTE PTR [eax+0x0],bl
1100865c:	in     eax,dx
1100865d:	mov    DWORD PTR [esi+0x0],ebx
11008660:	repnz mov BYTE PTR [edx+0x0],bl
11008664:	hlt    
11008665:	mov    bl,BYTE PTR [ebx+0x0]
11008668:	lock mov bl,BYTE PTR [ebp+0x0]
1100866c:	repnz mov WORD PTR [esi+0x0],ds
11008670:	ficom  WORD PTR [edx-0x7516ff87]
11008676:	arpl   WORD PTR [eax],ax
11008678:	in     eax,dx
11008679:	mov    esp,DWORD PTR [eax+0x0]
1100867c:	repnz mov fs,WORD PTR [ecx+0x0]
11008680:	hlt    
11008681:	mov    fs,WORD PTR [ecx+0x0]
11008684:	lock (bad) 
11008686:	fs add ah,dh
11008689:	nop
1100868a:	arpl   WORD PTR [eax],ax
1100868c:	repnz xchg ecx,eax
1100868e:	data16 add ah,dh
11008691:	xchg   edx,eax
11008692:	gs add cl,dh
11008695:	xchg   edx,eax
11008696:	push   0x6893f400
1100869b:	add    bl,dh
1100869d:	xchg   esp,eax
1100869e:	imul   eax,DWORD PTR [eax],0x6a95f4
110086a4:	hlt    
110086a5:	xchg   esi,eax
110086a6:	ins    BYTE PTR es:[edi],dx
110086a7:	add    ah,dh
110086a9:	cwde   
110086aa:	outs   dx,BYTE PTR ds:[esi]
110086ab:	add    ah,dh
110086ad:	call   0x73:0x9cf50071
110086b4:	cmc    
110086b5:	popf   
110086b6:	jne    0x110086b8
110086b8:	neg    BYTE PTR [edi-0x5e0aff88]
110086be:	jnp    0x110086c0
110086c0:	cmc    
110086c1:	mov    ds:0xa4f6007c,al
110086c6:	jle    0x110086c8
110086c8:	jmp    0xf1010b6c
110086cd:	popf   
110086ce:	mov    DWORD PTR [eax],eax
110086d0:	mul    BYTE PTR [ebp-0x5609ff7f]
110086d6:	xchg   BYTE PTR [eax],al
110086d8:	imul   BYTE PTR [ebx-0x5108ff78]
110086de:	lea    eax,[eax]
110086e0:	div    DWORD PTR [ecx-0x4b08ff6f]
110086e6:	xchg   esi,eax
110086e7:	add    al,bh
110086e9:	mov    dh,0x98
110086eb:	add    bh,dh
110086ed:	mov    eax,0xb9f8009b
110086f2:	sahf   
110086f3:	add    bh,dh
110086f5:	mov    ebx,0xbcf700a1
110086fa:	mov    ds:0xa0bbf800,al
110086ff:	add    al,bh
11008701:	mov    ebp,0xbef900a2
11008706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11008707:	add    cl,bh
11008709:	shl    BYTE PTR [edi-0x543c0800],0x0
11008710:	stc    
11008711:	les    ebp,FWORD PTR [ebp-0x46391300]
11008717:	add    cl,bh
11008719:	(bad)  
1100871a:	mov    al,0x0
1100871c:	stc    
1100871d:	enter  0xb2,0xf9
11008721:	leave  
11008722:	mov    ah,0x0
11008724:	stc    
11008725:	int    0xb8
11008727:	add    dl,bh
11008729:	sar    BYTE PTR [esi-0x3f310c00],1
1100872f:	add    dl,bh
11008731:	rol    ecx,cl
11008733:	add    cl,bh
11008735:	aad    0xc5
11008737:	add    bl,bh
11008739:	fxch   st(1)
1100873b:	add    bl,bh
1100873d:	fcmove st,st(4)
1100873f:	add    bl,bh
11008741:	fmul   st(5),st
11008743:	add    ah,bh
11008745:	loop   0x1100871d
11008747:	add    ah,bh
11008749:	call   0xafc882d
1100874e:	test   DWORD PTR [eax],0xfafafa
11008754:	std    
11008755:	cli    
11008756:	stc    
11008757:	add    ah,bh
11008759:	cld    
1100875a:	sti    
1100875b:	add    ch,bh
1100875d:	std    
1100875e:	std    
1100875f:	add    BYTE PTR [eax+0x22],dl
11008762:	add    BYTE PTR [eax],al
11008764:	jo     0x11008796
11008766:	add    BYTE PTR [eax],al
11008768:	nop
11008769:	add    BYTE PTR ds:[eax],al
1100876c:	mov    al,0x4d
1100876e:	add    BYTE PTR [eax],al
11008770:	iret   
11008771:	pop    ebx
11008772:	add    BYTE PTR [eax],al
11008774:	lock imul eax,DWORD PTR [eax],0x1179ff00
1100877b:	add    bh,bh
1100877d:	mov    dh,BYTE PTR [ecx]
1100877f:	add    bh,bh
11008781:	popf   
11008782:	push   ecx
11008783:	add    bh,bh
11008785:	scas   eax,DWORD PTR es:[edi]
11008786:	jno    0x11008788
11008788:	inc    ecx
1100878a:	xchg   ecx,eax
1100878b:	add    bh,bh
1100878d:	shl    BYTE PTR [ecx-0x2e1a0100],cl
11008793:	add    bh,bh
11008795:	(bad)  
11008796:	inc    DWORD PTR [eax]
11008798:	add    BYTE PTR [eax],al
1100879a:	add    BYTE PTR [eax],al
1100879c:	das    
1100879d:	add    eax,DWORD PTR [eax]
1100879f:	add    BYTE PTR [eax+0x4],dl
110087a2:	add    BYTE PTR [eax],al
110087a4:	jo     0x110087ac
110087a6:	add    BYTE PTR [eax],al
110087a8:	nop
110087a9:	or     DWORD PTR [eax],eax
110087ab:	add    BYTE PTR [eax-0x30fffff6],dh
110087b1:	or     al,0x0
110087b3:	add    al,dh
110087b5:	push   cs
110087b6:	add    BYTE PTR [eax],al
110087b8:	jmp    DWORD PTR [eax]
110087ba:	adc    al,BYTE PTR [eax]
110087bc:	(bad)  
110087bd:	xor    DWORD PTR ds:[eax],eax
110087c0:	call   FWORD PTR [ecx+edx*2+0x0]
110087c4:	(bad)  
110087c5:	jp     0x11008838
110087c7:	add    bh,bh
110087c9:	xchg   edi,eax
110087ca:	xchg   ecx,eax
110087cb:	add    bh,bh
110087cd:	mov    dh,0xb1
110087cf:	add    bh,bh
110087d1:	aam    0xd1
110087d3:	add    bh,bh
110087d5:	(bad)  
110087d6:	inc    DWORD PTR [eax]
110087d8:	add    BYTE PTR [eax],al
110087da:	add    BYTE PTR [eax],al
110087dc:	das    
110087dd:	add    BYTE PTR [esi],cl
110087df:	add    BYTE PTR [eax+0x0],dl
110087e2:	pop    ss
110087e3:	add    BYTE PTR [eax+0x0],dh
110087e6:	and    DWORD PTR [eax],eax
110087e8:	nop
110087e9:	add    BYTE PTR [ebx],ch
110087eb:	add    BYTE PTR [eax-0x30ffca00],dh
110087f1:	add    BYTE PTR [eax+0x0],al
110087f4:	lock add BYTE PTR [ecx+0x0],cl
110087f8:	call   DWORD PTR [ecx]
110087fa:	pop    edx
110087fb:	add    bh,bh
110087fd:	xor    DWORD PTR [eax+0x0],esi
11008800:	call   DWORD PTR [ecx-0x7a]
11008803:	add    bh,bh
11008805:	jno    0x110087a3
11008807:	add    bh,bh
11008809:	xchg   ecx,eax
1100880a:	mov    dl,0x0
1100880c:	push   DWORD PTR [ecx-0x2e00ff38]
11008812:	fild   WORD PTR [eax]
11008814:	(bad)  
11008815:	(bad)  
11008816:	inc    DWORD PTR [eax]
11008818:	add    BYTE PTR [eax],al
1100881a:	add    BYTE PTR [eax],al
1100881c:	das    
1100881d:	add    BYTE PTR [eax],ah
1100881f:	add    BYTE PTR [eax+0x0],dl
11008822:	add    BYTE PTR ss:[eax+0x0],dh
11008826:	dec    esp
11008827:	add    BYTE PTR [eax-0x4fff9e00],dl
1100882d:	add    BYTE PTR [eax+0x0],bh
11008830:	iret   
11008831:	add    BYTE PTR [esi-0x5bff1000],cl
11008837:	add    bh,bh
11008839:	adc    DWORD PTR [ebx-0x41ce0100],esi
1100883f:	add    bh,bh
11008841:	push   ecx
11008842:	mov    DWORD PTR [eax],0xd171ff
11008848:	call   DWORD PTR [ecx-0x4e00ff24]
1100884e:	in     eax,0x0
11008850:	call   ecx
11008852:	lock add bh,bh
11008855:	(bad)  
11008856:	inc    DWORD PTR [eax]
11008858:	add    BYTE PTR [eax],al
1100885a:	add    BYTE PTR [eax],al
1100885c:	sub    al,0x0
1100885e:	das    
1100885f:	add    BYTE PTR [ebx+0x0],cl
11008862:	push   eax
11008863:	add    BYTE PTR [ecx+0x0],ch
11008866:	jo     0x11008868
11008868:	xchg   DWORD PTR [eax],eax
1100886a:	nop
1100886b:	add    BYTE PTR [ebp-0x3bff5000],ah
11008871:	add    bh,cl
11008873:	add    cl,ah
11008875:	add    al,dh
11008877:	add    al,dh
11008879:	adc    edi,edi
1100887b:	add    dl,dh
1100887d:	xor    edi,edi
1100887f:	add    ah,dh
11008881:	push   ecx
11008882:	inc    DWORD PTR [eax]
11008884:	div    BYTE PTR [ecx-0x1]
11008887:	add    bh,dh
11008889:	xchg   ecx,eax
1100888a:	inc    DWORD PTR [eax]
1100888c:	stc    
1100888d:	mov    cl,0xff
1100888f:	add    bl,bh
11008891:	sar    edi,1
11008893:	add    bh,bh
11008895:	(bad)  
11008896:	inc    DWORD PTR [eax]
11008898:	add    BYTE PTR [eax],al
1100889a:	add    BYTE PTR [eax],al
1100889c:	sbb    eax,DWORD PTR [eax]
1100889e:	das    
1100889f:	add    BYTE PTR ds:0x3f005000,ch
110088a5:	add    BYTE PTR [eax+0x0],dh
110088a8:	push   edx
110088a9:	add    BYTE PTR [eax-0x4fff9d00],dl
110088af:	add    BYTE PTR [esi+0x0],dh
110088b2:	iret   
110088b3:	add    BYTE PTR [eax-0x66ff1000],cl
110088b9:	adc    edi,edi
110088bb:	add    BYTE PTR [esi-0x4bff00cf],ah
110088c1:	push   ecx
110088c2:	inc    DWORD PTR [eax]
110088c4:	ret    0xff71
110088c7:	add    bh,cl
110088c9:	xchg   ecx,eax
110088ca:	inc    DWORD PTR [eax]
110088cc:	fdiv   QWORD PTR [ecx-0x2e14ff01]
110088d2:	inc    DWORD PTR [eax]
110088d4:	(bad)  
110088d5:	(bad)  
110088d6:	inc    DWORD PTR [eax]
110088d8:	add    BYTE PTR [eax],al
110088da:	add    BYTE PTR [eax],al
110088dc:	or     BYTE PTR [eax],al
110088de:	das    
110088df:	add    BYTE PTR [esi],cl
110088e1:	add    BYTE PTR [eax+0x0],dl
110088e4:	adc    eax,0x1b007000
110088e9:	add    BYTE PTR [eax-0x4fffdf00],dl
110088ef:	add    BYTE PTR [esi],ah
110088f1:	add    bh,cl
110088f3:	add    BYTE PTR [eax+eax*1],ch
110088f6:	lock add BYTE PTR [esi],bh
110088f9:	adc    edi,edi
110088fb:	add    BYTE PTR [eax+0x31],bl
110088fe:	inc    DWORD PTR [eax]
11008900:	jno    0x11008953
11008902:	inc    DWORD PTR [eax]
11008904:	mov    WORD PTR [ecx-0x1],?
11008907:	add    BYTE PTR [esi-0x40ff006f],ah
1100890d:	mov    cl,0xff
1100890f:	add    dl,bl
11008911:	sar    edi,1
11008913:	add    bh,bh
11008915:	(bad)  
11008916:	inc    DWORD PTR [eax]
	...
11008950:	add    BYTE PTR [eax],al
11008952:	add    BYTE PTR [ecx],al
	...
11008978:	add    BYTE PTR [eax],al
1100897a:	add    DWORD PTR [eax],esp
1100897c:	pop    ds
1100897d:	add    DWORD PTR [eax],eax
	...
1100899f:	add    BYTE PTR [eax],al
110089a1:	add    DWORD PTR [eax],esp
110089a3:	nop
110089a4:	mov    ds,WORD PTR [edi]
	...
110089c6:	add    BYTE PTR [eax],al
110089c8:	add    BYTE PTR [eax],ah
110089ca:	nop
110089cb:	xchg   ecx,eax
110089cc:	xchg   ecx,eax
110089cd:	nop
110089ce:	pop    ds
	...
110089ef:	add    BYTE PTR [eax],ah
110089f1:	nop
110089f2:	xchg   ecx,eax
110089f3:	xchg   ecx,eax
110089f4:	xchg   ecx,eax
110089f5:	xchg   ecx,eax
110089f6:	nop
110089f7:	pop    ds
	...
11008a0c:	add    BYTE PTR [eax],al
11008a0e:	and    al,0x35
11008a10:	xor    ebp,DWORD PTR [eax]
11008a12:	and    eax,0x61014
11008a17:	and    BYTE PTR [esi-0x6e606e61],cl
11008a1d:	lahf   
11008a1e:	lahf   
11008a1f:	(bad)  
11008a20:	pop    ds
11008a21:	add    BYTE PTR ds:0x28251510,al
11008a27:	xor    esi,DWORD PTR ds:0x24
	...
11008a35:	add    BYTE PTR ds:0x26364650,dh
11008a3b:	adc    ecx,DWORD PTR [ecx]
11008a3d:	add    BYTE PTR [eax],ah
11008a3f:	nop
11008a40:	xchg   ecx,eax
11008a41:	xchg   ecx,eax
11008a42:	lahf   
11008a43:	xchg   ecx,eax
11008a44:	xchg   ecx,eax
11008a45:	lahf   
11008a46:	lahf   
11008a47:	xchg   ecx,eax
11008a48:	nop
11008a49:	pop    ds
11008a4a:	add    BYTE PTR [ecx],cl
11008a4c:	adc    esp,DWORD PTR [esi]
11008a4e:	ss dec eax
11008a50:	push   edx
11008a51:	xor    eax,0x0
	...
11008a5e:	xor    eax,DWORD PTR [esi+0x36]
11008a61:	adc    ecx,DWORD PTR es:[ecx]
11008a64:	add    BYTE PTR [eax],ah
11008a66:	nop
11008a67:	xchg   ecx,eax
11008a68:	lahf   
11008a69:	xchg   ecx,eax
11008a6a:	xchg   ecx,eax
11008a6b:	lahf   
11008a6c:	xchg   ecx,eax
11008a6d:	lahf   
11008a6e:	lahf   
11008a6f:	lahf   
11008a70:	xchg   ecx,eax
11008a71:	nop
11008a72:	pop    ds
11008a73:	add    DWORD PTR [ecx],ecx
11008a75:	adc    esp,DWORD PTR [esi]
11008a77:	ss dec eax
11008a79:	xor    eax,DWORD PTR [eax]
	...
11008a83:	add    BYTE PTR [eax],al
11008a85:	add    BYTE PTR [eax],ch
11008a87:	ss adc ecx,DWORD PTR es:[ecx]
11008a8b:	add    BYTE PTR [eax],ah
11008a8d:	nop
11008a8e:	xchg   ecx,eax
11008a8f:	xchg   ecx,eax
11008a90:	lahf   
11008a91:	xchg   ecx,eax
11008a92:	xchg   ecx,eax
11008a93:	xchg   ecx,eax
11008a94:	xchg   ecx,eax
11008a95:	xchg   ecx,eax
11008a96:	xchg   ecx,eax
11008a97:	xchg   ecx,eax
11008a98:	xchg   ecx,eax
11008a99:	xchg   ecx,eax
11008a9a:	mov    ds,WORD PTR [edi]
11008a9c:	add    BYTE PTR [ecx],cl
11008a9e:	adc    esp,DWORD PTR [esi]
11008aa0:	sub    BYTE PTR ss:[eax],al
	...
11008aab:	add    BYTE PTR [eax],al
11008aad:	add    BYTE PTR ds:0x91326,ah
11008ab3:	and    BYTE PTR [eax-0x7a706e61],dl
11008ab9:	ins    BYTE PTR es:[edi],dx
11008aba:	aas    
11008abb:	cmp    dh,BYTE PTR [edi]
11008abd:	ds push esi
11008abf:	jg     0x11008a4e
11008ac1:	lahf   
11008ac2:	xchg   ecx,eax
11008ac3:	nop
11008ac4:	pop    ds
11008ac5:	add    BYTE PTR [ecx],cl
11008ac7:	adc    esp,DWORD PTR [esi]
11008ac9:	and    eax,0x0
	...
11008ad6:	adc    al,0x13
11008ad8:	or     DWORD PTR [ecx],eax
11008ada:	and    BYTE PTR [eax+0x57879f9f],dl
11008ae0:	inc    edx
11008ae1:	cmp    eax,0x2f303139
11008ae6:	sub    eax,0x9f7f3c2c
11008aeb:	lahf   
11008aec:	nop
11008aed:	pop    ds
11008aee:	add    BYTE PTR [ecx],cl
11008af0:	adc    edx,DWORD PTR ds:0x0
	...
11008afe:	adc    BYTE PTR [ecx],cl
11008b00:	add    BYTE PTR [eax],ah
11008b02:	nop
11008b03:	lahf   
11008b04:	xchg   ecx,eax
11008b05:	ja     0x11008b53
11008b07:	dec    edx
11008b08:	inc    ebp
11008b09:	inc    edx
11008b0a:	inc    ecx
11008b0b:	cmp    edi,DWORD PTR [eax]
11008b0d:	xor    BYTE PTR [edi],ch
11008b0f:	sub    eax,0x916d2b2c
11008b14:	xchg   ecx,eax
11008b15:	nop
11008b16:	and    BYTE PTR [eax],al
11008b18:	or     DWORD PTR [eax],edx
	...
11008b26:	push   es
11008b27:	add    BYTE PTR [eax],ah
11008b29:	nop
11008b2a:	lahf   
11008b2b:	xchg   ecx,eax
11008b2c:	jnp    0x11008b81
11008b2e:	push   edx
11008b2f:	dec    esp
11008b30:	dec    ebx
11008b31:	inc    ebp
11008b32:	inc    ebx
11008b33:	inc    ecx
11008b34:	cmp    edi,DWORD PTR [eax]
11008b36:	xor    BYTE PTR [edi],ch
11008b38:	sub    eax,0x916d2a2c
11008b3d:	xchg   ecx,eax
11008b3e:	nop
11008b3f:	pop    ds
11008b40:	add    BYTE PTR [esi],al
	...
11008b4e:	add    BYTE PTR [eax],ah
11008b50:	nop
11008b51:	xchg   ecx,eax
11008b52:	lahf   
11008b53:	mov    BYTE PTR [ebp+0x55],dl
11008b56:	push   ebp
11008b57:	push   esp
11008b58:	push   eax
11008b59:	dec    ebx
11008b5a:	inc    edi
11008b5b:	inc    esp
11008b5c:	inc    ecx
11008b5d:	cmp    edi,DWORD PTR [eax]
11008b5f:	aaa    
11008b60:	das    
11008b61:	sub    eax,0x9f7f2b2c
11008b66:	xchg   ecx,eax
11008b67:	nop
11008b68:	pop    ds
	...
11008b75:	add    BYTE PTR [eax],ah
11008b77:	nop
11008b78:	xchg   ecx,eax
11008b79:	xchg   ecx,eax
11008b7a:	nop
11008b7b:	pop    dx
11008b7d:	pop    edx
11008b7e:	pop    esp
11008b7f:	pop    edx
11008b80:	push   ebp
11008b81:	push   eax
11008b82:	dec    esi
11008b83:	inc    edi
11008b84:	inc    ebp
11008b85:	inc    ecx
11008b86:	cmp    eax,0x2d2f303a
11008b8b:	sub    al,0x3c
11008b8d:	lea    edx,[ecx+0x1f9091]
	...
11008b9b:	add    BYTE PTR [ecx],al
11008b9d:	and    BYTE PTR [eax-0x77606e61],dl
11008ba3:	pop    edx
11008ba4:	pop    esi
11008ba5:	pop    esi
11008ba6:	pusha  
11008ba7:	pusha  
11008ba8:	pusha  
11008ba9:	pop    ecx
11008baa:	push   ecx
11008bab:	dec    esi
11008bac:	dec    ecx
11008bad:	inc    esp
11008bae:	inc    ecx
11008baf:	cmp    eax,0x2d2f3138
11008bb4:	sub    al,0x7f
11008bb6:	xchg   ecx,eax
11008bb7:	lahf   
11008bb8:	lahf   
11008bb9:	mov    ds,WORD PTR [edi]
11008bbb:	add    DWORD PTR [eax],eax
11008bbd:	add    BYTE PTR [eax],al
11008bbf:	add    BYTE PTR [eax],al
11008bc1:	add    BYTE PTR [eax],al
11008bc3:	add    DWORD PTR [eax],esp
11008bc5:	nop
11008bc6:	xchg   ecx,eax
11008bc7:	lahf   
11008bc8:	lahf   
11008bc9:	lahf   
11008bca:	je     0x11008c2a
11008bcc:	bound  esp,QWORD PTR [esp+eiz*2+0x64]
11008bd0:	bound  ebx,QWORD PTR fs:[ebp+0x51]
11008bd4:	dec    edi
11008bd5:	dec    ebx
11008bd6:	inc    esp
11008bd7:	inc    edx
11008bd8:	cmp    eax,0x2d2f3038
11008bdd:	push   esi
11008bde:	lahf   
11008bdf:	xchg   ecx,eax
11008be0:	lahf   
11008be1:	xchg   ecx,eax
11008be2:	nop
11008be3:	pop    ds
11008be4:	add    BYTE PTR [eax],al
11008be6:	add    BYTE PTR [eax],al
11008be8:	add    BYTE PTR [eax],al
11008bea:	add    DWORD PTR [eax],esp
11008bec:	nop
11008bed:	lahf   
11008bee:	lahf   
11008bef:	lahf   
11008bf0:	lahf   
11008bf1:	lahf   
11008bf2:	push   0x63
11008bf4:	addr16 pushw 0x6768
11008bf9:	fs pop bp
11008bfc:	pop    eax
11008bfd:	dec    edi
11008bfe:	dec    ecx
11008bff:	inc    esp
11008c00:	inc    ecx
11008c01:	cmp    edi,DWORD PTR [eax]
11008c03:	xor    BYTE PTR [esi],ch
11008c05:	ds xchg ecx,eax
11008c07:	lahf   
11008c08:	lahf   
11008c09:	lahf   
11008c0a:	xchg   ecx,eax
11008c0b:	nop
11008c0c:	pop    ds
11008c0d:	add    DWORD PTR [eax],eax
11008c0f:	add    BYTE PTR [eax],al
11008c11:	add    esp,DWORD PTR [eax]
11008c13:	nop
11008c14:	xchg   ecx,eax
11008c15:	xchg   ecx,eax
11008c16:	xchg   ecx,eax
11008c17:	xchg   ecx,eax
11008c18:	xchg   ecx,eax
11008c19:	xchg   ecx,eax
11008c1a:	addr16 pushw 0x6e
11008c1e:	outs   dx,BYTE PTR ds:[esi]
11008c1f:	outs   dx,BYTE PTR ds:[esi]
11008c20:	imul   ebp,DWORD PTR [ecx+0x67],0x65
11008c24:	pop    edi
11008c25:	pop    eax
11008c26:	dec    edi
11008c27:	dec    ecx
11008c28:	inc    esp
11008c29:	inc    ecx
11008c2a:	cmp    edi,DWORD PTR [eax]
11008c2c:	xor    BYTE PTR [edi],dh
11008c2e:	xchg   ecx,eax
11008c2f:	lahf   
11008c30:	xchg   ecx,eax
11008c31:	xchg   ecx,eax
11008c32:	xchg   ecx,eax
11008c33:	xchg   ecx,eax
11008c34:	mov    ds,WORD PTR [edi]
11008c36:	add    eax,DWORD PTR [eax]
11008c38:	add    BYTE PTR [eax+eiz*1],al
11008c3b:	nop
11008c3c:	xchg   ecx,eax
11008c3d:	lahf   
11008c3e:	xchg   ecx,eax
11008c3f:	lahf   
11008c40:	lahf   
11008c41:	lahf   
11008c42:	push   0x7272706b
11008c47:	jb     0x11008cba
11008c49:	jo     0x11008cb6
11008c4b:	push   0x4e515d65
11008c50:	inc    edi
11008c51:	inc    ebp
11008c52:	inc    ecx
11008c53:	cmp    esi,DWORD PTR [ecx]
11008c55:	cmp    dl,BYTE PTR [ecx-0x6e606e61]
11008c5b:	xchg   ecx,eax
11008c5c:	nop
11008c5d:	and    BYTE PTR [eax+eax*1],al
11008c60:	add    BYTE PTR [eax],al
11008c62:	add    al,0x20
11008c64:	nop
11008c65:	xchg   ecx,eax
11008c66:	xchg   ecx,eax
11008c67:	lahf   
11008c68:	xchg   ecx,eax
11008c69:	xchg   ecx,eax
11008c6a:	jno    0x11008cdc
11008c6c:	jae    0x11008ce7
11008c6e:	jp     0x11008ce9
11008c70:	jbe    0x11008ce4
11008c72:	jo     0x11008cdf
11008c74:	push   0x4e515b63
11008c79:	inc    edi
11008c7a:	inc    ebx
11008c7b:	inc    eax
11008c7c:	cmp    DWORD PTR [edi],edi
11008c7e:	xchg   ecx,eax
11008c7f:	lahf   
11008c80:	xchg   ecx,eax
11008c81:	lahf   
11008c82:	xchg   ecx,eax
11008c83:	nop
11008c84:	and    BYTE PTR [eax+eax*1],al
11008c87:	add    BYTE PTR [eax],al
11008c89:	add    BYTE PTR [eax],al
11008c8b:	add    al,0x20
11008c8d:	xchg   ecx,eax
11008c8e:	xchg   ecx,eax
11008c8f:	lahf   
11008c90:	xchg   ecx,eax
11008c91:	lahf   
11008c92:	jle    0x11008d06
11008c94:	jnp    0x11008c16
11008c96:	add    BYTE PTR [ecx+0x6f72797d],0x69
11008c9d:	gs popa 
11008c9f:	pop    ecx
11008ca0:	push   eax
11008ca1:	dec    ebx
11008ca2:	inc    edi
11008ca3:	inc    edx
11008ca4:	cmp    eax,0x919f916c
11008ca9:	lahf   
11008caa:	nop
11008cab:	and    BYTE PTR [ebx],al
11008cad:	add    BYTE PTR [eax],al
11008caf:	add    BYTE PTR [eax],al
11008cb1:	add    BYTE PTR [eax],al
11008cb3:	add    BYTE PTR [eax+eiz*1],al
11008cb6:	nop
11008cb7:	xchg   ecx,eax
11008cb8:	lahf   
11008cb9:	xchg   ecx,eax
11008cba:	mov    esi,DWORD PTR [eax+eax*4-0x7c]
11008cbe:	xchg   DWORD PTR [esi+0x71767d83],eax
11008cc4:	outs   dx,BYTE PTR ds:[esi]
11008cc5:	addr16 fs pop esi
11008cc8:	push   ebp
11008cc9:	push   eax
11008cca:	dec    esp
11008ccb:	inc    ebp
11008ccc:	inc    edx
11008ccd:	test   DWORD PTR [ecx+0x2090919f],edx
11008cd3:	add    DWORD PTR [eax],eax
	...
11008cdd:	add    BYTE PTR [eax],ah
11008cdf:	xchg   ecx,eax
11008ce0:	xchg   ecx,eax
11008ce1:	lahf   
11008ce2:	nop
11008ce3:	jl     0x11008c65
11008ce5:	mov    BYTE PTR [edx+0x7b818689],cl
11008ceb:	jb     0x11008d5b
11008ced:	push   0x545c6064
11008cf2:	push   eax
11008cf3:	dec    edx
11008cf4:	push   edi
11008cf5:	(bad)  
11008cf6:	xchg   ecx,eax
11008cf7:	xchg   ecx,eax
11008cf8:	nop
11008cf9:	and    BYTE PTR [eax],al
	...
11008d07:	and    BYTE PTR [eax+0x7e8c9f91],dl
11008d0d:	xchg   BYTE PTR [edx+0x7b82878a],cl
11008d13:	jb     0x11008d83
11008d15:	push   0x555c6064
11008d1a:	push   eax
11008d1b:	dec    esp
11008d1c:	xchg   DWORD PTR [edi+0x209091],ebx
	...
11008d2e:	adc    eax,0x9f902002
11008d33:	lahf   
11008d34:	mov    al,BYTE PTR [edx-0x7f7b787a]
11008d3a:	jns    0x11008dad
11008d3c:	outs   dx,BYTE PTR ds:[esi]
11008d3d:	addr16 fs pop esi
11008d40:	pop    esp
11008d41:	push   ebp
11008d42:	push   ebp
11008d43:	js     0x11008cd6
11008d45:	lahf   
11008d46:	nop
11008d47:	and    BYTE PTR [edx],al
11008d49:	push   ss
	...
11008d56:	xor    ch,BYTE PTR [ecx]
11008d58:	add    ah,BYTE PTR [eax]
11008d5a:	xchg   ecx,eax
11008d5b:	lahf   
11008d5c:	xchg   ecx,eax
11008d5d:	mov    bh,BYTE PTR [esi-0x7f]
11008d60:	jle    0x11008ddd
11008d62:	jae    0x11008dd4
11008d64:	push   0x65
11008d66:	bound  ebx,QWORD PTR [edx+ebx*2+0x55]
11008d6a:	jnp    0x11008cfc
11008d6c:	lahf   
11008d6d:	nop
11008d6e:	and    BYTE PTR [edx],al
11008d70:	sub    DWORD PTR [edx],esi
	...
11008d7e:	xor    al,0x4d
11008d80:	sub    DWORD PTR [edx],eax
11008d82:	and    BYTE PTR [eax+0x7c8c9f91],dl
11008d88:	je     0x11008dfc
11008d8a:	outs   dx,DWORD PTR ds:[esi]
11008d8b:	imul   esp,DWORD PTR [esi+0x63],0x5e
11008d8f:	pop    edx
11008d90:	mov    WORD PTR [ecx+0x2209091],dx
11008d97:	sub    DWORD PTR [ebp+0x34],ecx
	...
11008da6:	xor    eax,0x2284d52
11008dab:	and    BYTE PTR [ecx-0x7470606f],dl
11008db1:	jle    0x11008e24
11008db3:	push   0x88746a66
11008db8:	(bad)  
11008db9:	xchg   ecx,eax
11008dba:	xchg   ecx,eax
11008dbb:	nop
11008dbc:	and    BYTE PTR [edx],al
11008dbe:	sub    DWORD PTR [ebp+0x52],ecx
11008dc1:	xor    eax,0x0
	...
11008dce:	xor    eax,0x284d5253
11008dd3:	add    ah,BYTE PTR [eax]
11008dd5:	nop
11008dd6:	lahf   
11008dd7:	xchg   ecx,eax
11008dd8:	xchg   ecx,eax
11008dd9:	lahf   
11008dda:	xchg   ecx,eax
11008ddb:	xchg   ecx,eax
11008ddc:	xchg   ecx,eax
11008ddd:	lahf   
11008dde:	lahf   
11008ddf:	xchg   ecx,eax
11008de0:	xchg   ecx,eax
11008de1:	xchg   ecx,eax
11008de2:	nop
11008de3:	and    BYTE PTR [edx],al
11008de5:	sub    DWORD PTR [ebp+0x52],ecx
11008de8:	push   ebx
11008de9:	xor    eax,0x0
	...
11008df6:	xor    eax,0x4d525353
11008dfb:	sub    BYTE PTR [edx],al
11008dfd:	and    BYTE PTR [eax-0x606e606f],dl
11008e03:	xchg   ecx,eax
11008e04:	xchg   ecx,eax
11008e05:	lahf   
11008e06:	xchg   ecx,eax
11008e07:	lahf   
11008e08:	xchg   ecx,eax
11008e09:	nop
11008e0a:	and    BYTE PTR [edx],al
11008e0c:	sub    DWORD PTR [ebp+0x52],ecx
11008e0f:	push   ebx
11008e10:	push   ebx
11008e11:	xor    eax,0x0
	...
11008e1e:	xor    eax,0x52525353
11008e23:	dec    ebp
11008e24:	sub    BYTE PTR [edx],al
11008e26:	and    BYTE PTR [eax-0x606e606f],dl
11008e2c:	xchg   ecx,eax
11008e2d:	lahf   
11008e2e:	lahf   
11008e2f:	xchg   ecx,eax
11008e30:	nop
11008e31:	and    BYTE PTR [edx],al
11008e33:	sub    DWORD PTR [ebp+0x52],ecx
11008e36:	push   ebx
11008e37:	push   edx
11008e38:	push   edx
11008e39:	xor    eax,0x0
	...
11008e46:	and    al,0x35
11008e48:	xor    eax,0x32343535
11008e4d:	adc    eax,0x91902000
11008e52:	xchg   ecx,eax
11008e53:	xchg   ecx,eax
11008e54:	xchg   ecx,eax
11008e55:	lahf   
11008e56:	xchg   ecx,eax
11008e57:	nop
11008e58:	and    BYTE PTR [eax],al
11008e5a:	push   ss
11008e5b:	xor    dh,BYTE PTR [esi*1+0x24353535]
	...
11008e76:	add    BYTE PTR [eax],al
11008e78:	and    BYTE PTR [ecx-0x6e6e6e6f],dl
11008e7e:	nop
11008e7f:	and    BYTE PTR [eax],al
	...
11008e9d:	add    BYTE PTR [eax],al
11008e9f:	add    BYTE PTR [eax+eiz*1],al
11008ea2:	nop
11008ea3:	xchg   ecx,eax
11008ea4:	xchg   ecx,eax
11008ea5:	nop
11008ea6:	and    BYTE PTR [eax+eax*1],al
	...
11008ec9:	add    al,0x20
11008ecb:	nop
11008ecc:	nop
11008ecd:	and    BYTE PTR [eax+eax*1],al
	...
11008ef0:	add    BYTE PTR [eax],al
11008ef2:	add    al,0x20
11008ef4:	and    BYTE PTR [eax+eax*1],al
	...
11008f1b:	add    al,0x7
	...
11008f55:	add    BYTE PTR [eax],al
11008f57:	add    bh,bh
11008f59:	(bad)  
11008f5a:	(bad)  
11008f5b:	(bad)  
11008f5c:	(bad)  
11008f5d:	(bad)  
11008f5e:	(bad)  
11008f5f:	(bad)  
11008f60:	(bad)  
11008f61:	jmp    edi
11008f63:	(bad)  
11008f64:	(bad)  
11008f65:	(bad)  
11008f66:	(bad)  
11008f67:	(bad)  
11008f68:	(bad)  
11008f69:	inc    ebx
11008f6b:	(bad)  
11008f6c:	(bad)  
11008f6d:	(bad)  
11008f6e:	(bad)  
11008f6f:	(bad)  
11008f70:	(bad)  
11008f71:	inc    DWORD PTR [ecx-0x1]
11008f77:	(bad)  
11008f78:	(bad)  
11008f79:	inc    DWORD PTR [eax]
11008f7b:	(bad)  
11008f7c:	(bad)  
11008f7d:	(bad)  
11008f7e:	(bad)  
11008f7f:	(bad)  
11008f80:	clc    
11008f81:	add    BYTE PTR [eax],al
11008f83:	add    BYTE PTR [edi],bl
11008f85:	(bad)  
11008f86:	(bad)  
11008f87:	(bad)  
11008f88:	clc    
11008f89:	add    BYTE PTR [eax],al
11008f8b:	add    BYTE PTR [edi],bl
11008f8d:	(bad)  
11008f8e:	(bad)  
11008f8f:	(bad)  
11008f90:	clc    
11008f91:	add    BYTE PTR [eax],al
11008f93:	add    BYTE PTR [edi],bl
11008f95:	(bad)  
11008f96:	(bad)  
11008f97:	(bad)  
11008f98:	clc    
11008f99:	add    BYTE PTR [eax],al
11008f9b:	add    BYTE PTR [edi],bl
11008f9d:	(bad)  
11008f9e:	(bad)  
11008f9f:	(bad)  
11008fa0:	clc    
11008fa1:	add    BYTE PTR [eax],al
11008fa3:	add    BYTE PTR [edi],bl
11008fa5:	(bad)  
11008fa6:	(bad)  
11008fa7:	(bad)  
11008fa8:	clc    
11008fa9:	add    BYTE PTR [eax],al
11008fab:	add    BYTE PTR [edi],bl
11008fad:	(bad)  
11008fae:	(bad)  
11008faf:	(bad)  
11008fb0:	clc    
11008fb1:	add    BYTE PTR [eax],al
11008fb3:	add    BYTE PTR [edi],bl
11008fb5:	(bad)  
11008fb6:	(bad)  
11008fb7:	(bad)  
11008fb8:	clc    
11008fb9:	add    BYTE PTR [eax],al
11008fbb:	add    BYTE PTR [edi],bl
11008fbd:	(bad)  
11008fbe:	(bad)  
11008fbf:	(bad)  
11008fc0:	clc    
11008fc1:	add    BYTE PTR [eax],al
11008fc3:	add    BYTE PTR [edi],bl
11008fc5:	(bad)  
11008fc6:	(bad)  
11008fc7:	(bad)  
11008fc8:	clc    
11008fc9:	add    BYTE PTR [eax],al
11008fcb:	add    BYTE PTR [edi],bl
11008fcd:	(bad)  
11008fce:	(bad)  
11008fcf:	(bad)  
11008fd0:	clc    
11008fd1:	add    BYTE PTR [eax],al
11008fd3:	add    BYTE PTR [edi],bl
11008fd5:	(bad)  
11008fd6:	(bad)  
11008fd7:	push   eax
11008fd9:	add    BYTE PTR [eax],al
11008fdb:	add    BYTE PTR [edi],cl
11008fdd:	(bad)  
11008fde:	(bad)  
11008fdf:	jmp    eax
11008fe1:	add    BYTE PTR [eax],al
11008fe3:	add    BYTE PTR [edi],al
11008fe5:	(bad)  
11008fe6:	(bad)  
11008fe7:	inc    eax
11008fe9:	add    BYTE PTR [eax],al
11008feb:	add    BYTE PTR [ebx],al
11008fed:	(bad)  
11008fee:	(bad)  
11008fef:	inc    DWORD PTR [eax+0x1000000]
11008ff5:	(bad)  
11008ff6:	(bad)  
11008ff7:	inc    DWORD PTR [eax+0x1000000]
11008ffd:	(bad)  
11008ffe:	(bad)  
11008fff:	inc    eax
11009001:	add    BYTE PTR [eax],al
11009003:	add    BYTE PTR [ebx],al
11009005:	(bad)  
11009006:	(bad)  
11009007:	jmp    eax
11009009:	add    BYTE PTR [eax],al
1100900b:	add    BYTE PTR [edi],al
1100900d:	(bad)  
1100900e:	(bad)  
1100900f:	push   eax
11009011:	add    BYTE PTR [eax],al
11009013:	add    BYTE PTR [edi],cl
11009015:	(bad)  
11009016:	(bad)  
11009017:	(bad)  
11009018:	clc    
11009019:	add    BYTE PTR [eax],al
1100901b:	add    BYTE PTR [edi],bl
1100901d:	(bad)  
1100901e:	(bad)  
1100901f:	(bad)  
11009020:	clc    
11009021:	add    BYTE PTR [eax],al
11009023:	add    BYTE PTR [edi],bl
11009025:	(bad)  
11009026:	(bad)  
11009027:	(bad)  
11009028:	clc    
11009029:	add    BYTE PTR [eax],al
1100902b:	add    BYTE PTR [edi],bl
1100902d:	(bad)  
1100902e:	(bad)  
1100902f:	(bad)  
11009030:	clc    
11009031:	add    BYTE PTR [eax],al
11009033:	add    BYTE PTR [edi],bl
11009035:	(bad)  
11009036:	(bad)  
11009037:	(bad)  
11009038:	clc    
11009039:	add    BYTE PTR [eax],al
1100903b:	add    BYTE PTR [edi],bl
1100903d:	(bad)  
1100903e:	(bad)  
1100903f:	(bad)  
11009040:	clc    
11009041:	add    BYTE PTR [eax],al
11009043:	add    BYTE PTR [edi],bl
11009045:	(bad)  
11009046:	(bad)  
11009047:	(bad)  
11009048:	clc    
11009049:	add    BYTE PTR [eax],al
1100904b:	add    BYTE PTR [edi],bl
1100904d:	(bad)  
1100904e:	(bad)  
1100904f:	(bad)  
11009050:	clc    
11009051:	add    BYTE PTR [eax],al
11009053:	add    BYTE PTR [edi],bl
11009055:	(bad)  
11009056:	(bad)  
11009057:	(bad)  
11009058:	clc    
11009059:	add    BYTE PTR [eax],al
1100905b:	add    BYTE PTR [edi],bl
1100905d:	(bad)  
1100905e:	(bad)  
1100905f:	(bad)  
11009060:	clc    
11009061:	add    BYTE PTR [eax],al
11009063:	add    BYTE PTR [edi],bl
11009065:	(bad)  
11009066:	(bad)  
11009067:	(bad)  
11009068:	clc    
11009069:	add    BYTE PTR [eax],al
1100906b:	add    BYTE PTR [edi],bl
1100906d:	(bad)  
1100906e:	(bad)  
1100906f:	(bad)  
11009070:	(bad)  
11009071:	inc    DWORD PTR [eax]
11009073:	(bad)  
11009074:	(bad)  
11009075:	(bad)  
11009076:	(bad)  
11009077:	(bad)  
11009078:	(bad)  
11009079:	inc    DWORD PTR [ecx-0x1]
1100907f:	(bad)  
11009080:	(bad)  
11009081:	inc    ebx
11009083:	(bad)  
11009084:	(bad)  
11009085:	(bad)  
11009086:	(bad)  
11009087:	(bad)  
11009088:	(bad)  
11009089:	jmp    edi
1100908b:	(bad)  
1100908c:	(bad)  
1100908d:	(bad)  
1100908e:	(bad)  
1100908f:	(bad)  
11009090:	(bad)  
11009091:	(bad)  
11009092:	(bad)  
11009093:	(bad)  
11009094:	(bad)  
11009095:	(bad)  
11009096:	(bad)  
11009097:	jmp    FWORD PTR [eax]
11009099:	add    BYTE PTR [eax],al
1100909b:	add    BYTE PTR [eax],ah
1100909d:	add    BYTE PTR [eax],al
1100909f:	add    BYTE PTR [eax+0x0],al
110090a2:	add    BYTE PTR [eax],al
110090a4:	add    DWORD PTR [eax],eax
110090a6:	or     BYTE PTR [eax],al
	...
110090c4:	push   es
110090c5:	add    eax,DWORD PTR [edx]
110090c7:	add    BYTE PTR [eax],cl
110090c9:	add    al,0x3
110090cb:	add    BYTE PTR [edi],dl
110090cd:	pop    ss
110090ce:	pop    ss
110090cf:	add    BYTE PTR [ecx],bl
110090d1:	adc    edx,DWORD PTR [ecx]
110090d3:	add    BYTE PTR [ecx],bl
110090d5:	sbb    DWORD PTR [ecx],ebx
110090d7:	add    BYTE PTR [ecx],ah
110090d9:	adc    cl,BYTE PTR [eax+eax*1]
110090dc:	and    edx,DWORD PTR [ecx*1+0xf162800]
110090e3:	add    BYTE PTR [ebx],ch
110090e5:	sbb    eax,0x24240017
110090ea:	and    al,0x0
110090ec:	sub    eax,0x2d002729
110090f1:	sub    DWORD PTR [eax],ebp
110090f3:	add    BYTE PTR ds:0x80002d2d,ch
110090f9:	dec    eax
110090fa:	das    
110090fb:	add    BYTE PTR [eax-0x34ffc1a2],ch
11009101:	push   ebp
11009102:	xor    BYTE PTR [eax],al
11009104:	into   
11009105:	pop    edx
11009106:	xor    al,0x0
11009108:	shl    BYTE PTR [eax+0x38],cl
1100910b:	add    ah,dl
1100910d:	bound  edi,QWORD PTR [edx]
1100910f:	add    dh,dl
11009111:	gs cmp eax,0x3e67d800
11009117:	add    bh,cl
11009119:	arpl   WORD PTR [ecx+0x0],ax
1100911c:	aad    0x68
1100911e:	inc    edx
1100911f:	add    bl,bl
11009121:	imul   eax,DWORD PTR [edx+0x0],0xffffffdb
11009125:	ins    BYTE PTR es:[edi],dx
11009126:	inc    edx
11009127:	add    ah,bl
11009129:	ins    BYTE PTR es:[edi],dx
1100912a:	inc    ebx
1100912b:	add    cl,bl
1100912d:	ins    DWORD PTR es:[edi],dx
1100912e:	inc    esi
1100912f:	add    dh,bl
11009131:	outs   dx,DWORD PTR ds:[esi]
11009132:	inc    ebp
11009133:	add    dl,cl
11009135:	jno    0x11009182
11009137:	add    bh,bl
11009139:	jno    0x11009182
1100913b:	add    bh,dl
1100913d:	jbe    0x11009194
1100913f:	add    al,ah
11009141:	jb     0x1100918b
11009143:	add    cl,ah
11009145:	je     0x11009191
11009147:	add    bl,ah
11009149:	jbe    0x11009197
1100914b:	add    ah,ah
1100914d:	js     0x1100919d
1100914f:	add    bh,ah
11009151:	jl     0x110091a4
11009153:	add    bh,ah
11009155:	jle    0x110091ab
11009157:	add    al,ch
11009159:	jge    0x110091ac
1100915b:	add    al,ch
1100915d:	jg     0x110091b3
1100915f:	add    bh,dl
11009161:	jle    0x110091c6
11009163:	add    dl,ch
11009165:	adc    BYTE PTR [eax+eax*1-0x14],0x82
1100916a:	push   esi
1100916b:	add    al,ah
1100916d:	sbb    BYTE PTR [edi+0x0],0xeb
11009171:	xchg   BYTE PTR [ebx+0x0],bl
11009174:	out    dx,al
11009175:	test   DWORD PTR [eax+0x0],ebx
11009178:	jmp    0xfd00ee02
1100917d:	xchg   DWORD PTR [ebp+0x0],ebx
11009180:	repnz mov BYTE PTR [edx+0x0],bl
11009184:	hlt    
11009185:	mov    DWORD PTR [ebx+0x0],ebx
11009188:	lock mov ebx,DWORD PTR [edi+0x0]
1100918c:	repz mov WORD PTR [esi+0x0],ds
11009190:	hlt    
11009191:	mov    WORD PTR [esi+0x0],ds
11009194:	out    dx,eax
11009195:	mov    WORD PTR [eax+0x0],fs
11009198:	repz (bad) 
1100919a:	bound  eax,QWORD PTR [eax]
1100919c:	hlt    
1100919d:	(bad)  
1100919e:	bound  eax,QWORD PTR [eax]
110091a0:	icebp  
110091a1:	(bad)  
110091a2:	gs add bl,dh
110091a5:	nop
110091a6:	arpl   WORD PTR [eax],ax
110091a8:	hlt    
110091a9:	nop
110091aa:	arpl   WORD PTR [eax],ax
110091ac:	icebp  
110091ad:	nop
110091ae:	data16 add ah,dh
110091b1:	xchg   ecx,eax
110091b2:	gs add ah,dh
110091b5:	xchg   ebx,eax
110091b6:	push   0x6994f400
110091bb:	add    ah,dh
110091bd:	xchg   esi,eax
110091be:	ins    BYTE PTR es:[edi],dx
110091bf:	add    ah,dh
110091c1:	cwde   
110091c2:	outs   dx,BYTE PTR ds:[esi]
110091c3:	add    ah,dh
110091c5:	call   0x74:0x9cf40072
110091cc:	cmc    
110091cd:	mov    al,ds:0xa2f6007a
110091d2:	jl     0x110091d4
110091d4:	mul    BYTE PTR [esi+edi*2-0x48484900]
110091db:	add    BYTE PTR [eax-0x1cff4748],bh
110091e1:	mov    ds:0xa5f6008d,al
110091e6:	add    DWORD PTR [eax],0x85a8f5
110091ec:	imul   DWORD PTR [esi-0x5a1dff73]
110091f2:	xchg   edx,eax
110091f3:	add    dh,ch
110091f5:	mov    al,0x98
110091f7:	add    bh,dh
110091f9:	mov    cl,0x91
110091fb:	add    al,bh
110091fd:	mov    dl,0x93
110091ff:	add    al,bh
11009201:	mov    ah,0x95
11009203:	add    al,bh
11009205:	mov    ecx,0xbdf5009d
1100920a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100920b:	add    al,bh
1100920d:	mov    esp,0xbff800a2
11009212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11009213:	add    al,bh
11009215:	shl    BYTE PTR [esi-0x553d0800],0x0
1100921c:	clc    
1100921d:	les    ebp,FWORD PTR [eax+eax*1+0xb0c6f9]
11009224:	stc    
11009225:	retf   0xb6
11009228:	stc    
11009229:	int    0xba
1100922b:	add    cl,bh
1100922d:	iret   
1100922e:	mov    esp,0xbfd1fa00
11009233:	add    al,dh
11009235:	iret   
11009236:	lds    eax,FWORD PTR [eax]
11009238:	cli    
11009239:	aam    0xc3
1100923b:	add    bh,dh
1100923d:	fxch   st(5)
1100923f:	add    dl,bh
11009241:	fxch   st(2)
11009243:	add    al,bh
11009245:	fxch   st(5)
11009247:	add    bl,bh
11009249:	(bad)  
1100924b:	add    bl,bh
1100924d:	loopne 0x11009222
1100924f:	add    ah,bh
11009251:	jmp    0xee:0xf1fa00e1
11009258:	std    
11009259:	cmc    
1100925a:	repnz add dl,bh
1100925d:	cli    
1100925e:	cli    
1100925f:	add    ch,bh
11009261:	cli    
11009262:	stc    
11009263:	add    dh,bh
11009265:	(bad)  
11009266:	inc    BYTE PTR [eax]
11009268:	pushf  
11009269:	call   DWORD PTR [ecx+0x0]
1100926c:	scas   al,BYTE PTR es:[edi]
1100926d:	push   DWORD PTR [ecx+0x0]
11009270:	sar    bh,0x91
11009273:	add    dl,dl
11009275:	push   DWORD PTR [ecx-0x2e001c00]
1100927b:	add    bh,bh
1100927d:	(bad)  
1100927e:	inc    DWORD PTR [eax]
11009280:	add    BYTE PTR [eax],al
11009282:	add    BYTE PTR [eax],al
11009284:	es das 
11009286:	add    BYTE PTR [eax],al
11009288:	inc    eax
11009289:	push   eax
1100928a:	add    BYTE PTR [eax],al
1100928c:	pop    edx
1100928d:	jo     0x1100928f
1100928f:	add    BYTE PTR [eax+edx*4+0x0],dh
11009293:	add    BYTE PTR [esi-0x56ffff50],cl
11009299:	iret   
1100929a:	add    BYTE PTR [eax],al
1100929c:	ret    0xf0
1100929f:	add    cl,dl
110092a1:	call   DWORD PTR [ecx]
110092a3:	add    al,bl
110092a5:	push   DWORD PTR [ecx]
110092a7:	add    dh,bl
110092a9:	call   DWORD PTR [ecx+0x0]
110092ac:	jecxz  0x110092ad
110092ae:	jno    0x110092b0
110092b0:	jmp    0x124b4
110092b5:	push   DWORD PTR [ecx-0x2e000a00]
110092bb:	add    bh,bh
110092bd:	(bad)  
110092be:	inc    DWORD PTR [eax]
110092c0:	add    BYTE PTR [eax],al
110092c2:	add    BYTE PTR [eax],al
110092c4:	das    
110092c5:	add    BYTE PTR es:[eax],al
110092c8:	push   eax
110092c9:	inc    ecx
110092ca:	add    BYTE PTR [eax],al
110092cc:	jo     0x11009329
110092ce:	add    BYTE PTR [eax],al
110092d0:	nop
110092d1:	je     0x110092d3
110092d3:	add    BYTE PTR [eax-0x30ffff72],dh
110092d9:	test   eax,0xc3f00000
110092de:	add    BYTE PTR [eax],al
110092e0:	call   edx
110092e2:	adc    DWORD PTR [eax],eax
110092e4:	(bad)  
110092e5:	fdiv   DWORD PTR [ecx]
110092e7:	add    bh,bh
110092e9:	fst    QWORD PTR [ecx+0x0]
110092ec:	jmp    esp
110092ee:	jno    0x110092f0
110092f0:	(bad)  
110092f1:	jmp    0xb1:0xf0ff0091
110092f8:	push   esi
110092fa:	rol    DWORD PTR [eax],1
110092fc:	(bad)  
110092fd:	(bad)  
110092fe:	inc    DWORD PTR [eax]
11009300:	add    BYTE PTR [eax],al
11009302:	add    BYTE PTR [eax],al
11009304:	das    
11009305:	adc    al,0x0
11009307:	add    BYTE PTR [eax+0x22],dl
1100930a:	add    BYTE PTR [eax],al
1100930c:	jo     0x1100933e
1100930e:	add    BYTE PTR [eax],al
11009310:	nop
11009311:	add    BYTE PTR ds:[eax],al
11009314:	mov    al,0x4d
11009316:	add    BYTE PTR [eax],al
11009318:	iret   
11009319:	pop    ebx
1100931a:	add    BYTE PTR [eax],al
1100931c:	lock imul eax,DWORD PTR [eax],0x1179ff00
11009323:	add    bh,bh
11009325:	mov    dh,BYTE PTR [ecx]
11009327:	add    bh,bh
11009329:	popf   
1100932a:	push   ecx
1100932b:	add    bh,bh
1100932d:	scas   eax,DWORD PTR es:[edi]
1100932e:	jno    0x11009330
11009330:	inc    ecx
11009332:	xchg   ecx,eax
11009333:	add    bh,bh
11009335:	shl    BYTE PTR [ecx-0x2e1a0100],cl
1100933b:	add    bh,bh
1100933d:	(bad)  
1100933e:	inc    DWORD PTR [eax]
11009340:	add    BYTE PTR [eax],al
11009342:	add    BYTE PTR [eax],al
11009344:	das    
11009345:	add    eax,DWORD PTR [eax]
11009347:	add    BYTE PTR [eax+0x4],dl
1100934a:	add    BYTE PTR [eax],al
1100934c:	jo     0x11009354
1100934e:	add    BYTE PTR [eax],al
11009350:	nop
11009351:	or     DWORD PTR [eax],eax
11009353:	add    BYTE PTR [eax-0x30fffff6],dh
11009359:	or     al,0x0
1100935b:	add    al,dh
1100935d:	push   cs
1100935e:	add    BYTE PTR [eax],al
11009360:	jmp    DWORD PTR [eax]
11009362:	adc    al,BYTE PTR [eax]
11009364:	(bad)  
11009365:	xor    DWORD PTR ds:[eax],eax
11009368:	call   FWORD PTR [ecx+edx*2+0x0]
1100936c:	(bad)  
1100936d:	jp     0x110093e0
1100936f:	add    bh,bh
11009371:	xchg   edi,eax
11009372:	xchg   ecx,eax
11009373:	add    bh,bh
11009375:	mov    dh,0xb1
11009377:	add    bh,bh
11009379:	aam    0xd1
1100937b:	add    bh,bh
1100937d:	(bad)  
1100937e:	inc    DWORD PTR [eax]
11009380:	add    BYTE PTR [eax],al
11009382:	add    BYTE PTR [eax],al
11009384:	das    
11009385:	add    BYTE PTR [esi],cl
11009387:	add    BYTE PTR [eax+0x0],dl
1100938a:	pop    ss
1100938b:	add    BYTE PTR [eax+0x0],dh
1100938e:	and    DWORD PTR [eax],eax
11009390:	nop
11009391:	add    BYTE PTR [ebx],ch
11009393:	add    BYTE PTR [eax-0x30ffca00],dh
11009399:	add    BYTE PTR [eax+0x0],al
1100939c:	lock add BYTE PTR [ecx+0x0],cl
110093a0:	call   DWORD PTR [ecx]
110093a2:	pop    edx
110093a3:	add    bh,bh
110093a5:	xor    DWORD PTR [eax+0x0],esi
110093a8:	call   DWORD PTR [ecx-0x7a]
110093ab:	add    bh,bh
110093ad:	jno    0x1100934b
110093af:	add    bh,bh
110093b1:	xchg   ecx,eax
110093b2:	mov    dl,0x0
110093b4:	push   DWORD PTR [ecx-0x2e00ff38]
110093ba:	fild   WORD PTR [eax]
110093bc:	(bad)  
110093bd:	(bad)  
110093be:	inc    DWORD PTR [eax]
110093c0:	add    BYTE PTR [eax],al
110093c2:	add    BYTE PTR [eax],al
110093c4:	das    
110093c5:	add    BYTE PTR [eax],ah
110093c7:	add    BYTE PTR [eax+0x0],dl
110093ca:	add    BYTE PTR ss:[eax+0x0],dh
110093ce:	dec    esp
110093cf:	add    BYTE PTR [eax-0x4fff9e00],dl
110093d5:	add    BYTE PTR [eax+0x0],bh
110093d8:	iret   
110093d9:	add    BYTE PTR [esi-0x5bff1000],cl
110093df:	add    bh,bh
110093e1:	adc    DWORD PTR [ebx-0x41ce0100],esi
110093e7:	add    bh,bh
110093e9:	push   ecx
110093ea:	mov    DWORD PTR [eax],0xd171ff
110093f0:	call   DWORD PTR [ecx-0x4e00ff24]
110093f6:	in     eax,0x0
110093f8:	call   ecx
110093fa:	lock add bh,bh
110093fd:	(bad)  
110093fe:	inc    DWORD PTR [eax]
11009400:	add    BYTE PTR [eax],al
11009402:	add    BYTE PTR [eax],al
11009404:	sub    al,0x0
11009406:	das    
11009407:	add    BYTE PTR [ebx+0x0],cl
1100940a:	push   eax
1100940b:	add    BYTE PTR [ecx+0x0],ch
1100940e:	jo     0x11009410
11009410:	xchg   DWORD PTR [eax],eax
11009412:	nop
11009413:	add    BYTE PTR [ebp-0x3bff5000],ah
11009419:	add    bh,cl
1100941b:	add    cl,ah
1100941d:	add    al,dh
1100941f:	add    al,dh
11009421:	adc    edi,edi
11009423:	add    dl,dh
11009425:	xor    edi,edi
11009427:	add    ah,dh
11009429:	push   ecx
1100942a:	inc    DWORD PTR [eax]
1100942c:	div    BYTE PTR [ecx-0x1]
1100942f:	add    bh,dh
11009431:	xchg   ecx,eax
11009432:	inc    DWORD PTR [eax]
11009434:	stc    
11009435:	mov    cl,0xff
11009437:	add    bl,bh
11009439:	sar    edi,1
1100943b:	add    bh,bh
1100943d:	(bad)  
1100943e:	inc    DWORD PTR [eax]
11009440:	add    BYTE PTR [eax],al
11009442:	add    BYTE PTR [eax],al
11009444:	sbb    eax,DWORD PTR [eax]
11009446:	das    
11009447:	add    BYTE PTR ds:0x3f005000,ch
1100944d:	add    BYTE PTR [eax+0x0],dh
11009450:	push   edx
11009451:	add    BYTE PTR [eax-0x4fff9d00],dl
11009457:	add    BYTE PTR [esi+0x0],dh
1100945a:	iret   
1100945b:	add    BYTE PTR [eax-0x66ff1000],cl
11009461:	adc    edi,edi
11009463:	add    BYTE PTR [esi-0x4bff00cf],ah
11009469:	push   ecx
1100946a:	inc    DWORD PTR [eax]
1100946c:	ret    0xff71
1100946f:	add    bh,cl
11009471:	xchg   ecx,eax
11009472:	inc    DWORD PTR [eax]
11009474:	fdiv   QWORD PTR [ecx-0x2e14ff01]
1100947a:	inc    DWORD PTR [eax]
1100947c:	(bad)  
1100947d:	(bad)  
1100947e:	inc    DWORD PTR [eax]
11009480:	add    BYTE PTR [eax],al
11009482:	add    BYTE PTR [eax],al
11009484:	or     BYTE PTR [eax],al
11009486:	das    
11009487:	add    BYTE PTR [esi],cl
11009489:	add    BYTE PTR [eax+0x0],dl
1100948c:	adc    eax,0x1b007000
11009491:	add    BYTE PTR [eax-0x4fffdf00],dl
11009497:	add    BYTE PTR [esi],ah
11009499:	add    bh,cl
1100949b:	add    BYTE PTR [eax+eax*1],ch
1100949e:	lock add BYTE PTR [esi],bh
110094a1:	adc    edi,edi
110094a3:	add    BYTE PTR [eax+0x31],bl
110094a6:	inc    DWORD PTR [eax]
110094a8:	jno    0x110094fb
110094aa:	inc    DWORD PTR [eax]
110094ac:	mov    WORD PTR [ecx-0x1],?
110094af:	add    BYTE PTR [esi-0x40ff006f],ah
110094b5:	mov    cl,0xff
110094b7:	add    dl,bl
110094b9:	sar    edi,1
110094bb:	add    bh,bh
110094bd:	(bad)  
110094be:	inc    DWORD PTR [eax]
	...
110094ec:	add    BYTE PTR [eax],al
110094ee:	add    BYTE PTR [ebx],al
110094f0:	add    eax,0x0
	...
1100950d:	add    BYTE PTR ds:0xd4747,cl
	...
1100952b:	add    BYTE PTR [eax],al
1100952d:	add    eax,DWORD PTR [edi+0x67]
11009530:	addr16 inc edi
11009532:	add    eax,DWORD PTR [eax]
	...
11009544:	add    al,BYTE PTR [edi]
11009546:	or     BYTE PTR [eax],cl
11009548:	or     BYTE PTR [eax],cl
1100954a:	pop    es
1100954b:	add    cl,BYTE PTR [edx]
1100954d:	inc    edi
1100954e:	imul   ebp,DWORD PTR [ecx+0x6f],0x20a466f
11009555:	or     BYTE PTR [eax],cl
11009557:	or     BYTE PTR [eax],cl
11009559:	or     BYTE PTR [esi],al
1100955b:	add    al,BYTE PTR [eax]
1100955d:	add    BYTE PTR [eax],al
1100955f:	add    BYTE PTR [eax],al
11009561:	add    BYTE PTR [eax],al
11009563:	add    BYTE PTR [esi],al
11009565:	nop    DWORD PTR ds:0x40e1d1d
1100956c:	inc    edi
1100956d:	imul   ebp,DWORD PTR [bx+di+0x69],0x4476769
11009575:	push   cs
11009576:	sbb    eax,0xf1d1d1d
1100957b:	pop    es
	...
11009584:	or     BYTE PTR ds:0xf303131,bl
1100958a:	or     al,0x47
1100958c:	imul   ebp,DWORD PTR [ecx+0x69],0x69696f69
11009593:	imul   eax,DWORD PTR [edi+0xb],0x3431300f
1100959a:	sbb    eax,0x8
1100959f:	add    BYTE PTR [eax],al
110095a1:	add    BYTE PTR [eax],al
110095a3:	add    BYTE PTR [eax],cl
110095a5:	sbb    eax,0x90f3131
110095aa:	inc    edi
110095ab:	outs   dx,DWORD PTR ds:[si]
110095ad:	outs   dx,DWORD PTR ds:[esi]
110095ae:	imul   ebp,DWORD PTR [ecx+0x69],0x67696f69
110095b5:	inc    edi
110095b6:	or     DWORD PTR [edi],ecx
110095b8:	xor    DWORD PTR [ecx],esi
110095ba:	sbb    eax,0x8
110095bf:	add    BYTE PTR [eax],al
110095c1:	add    BYTE PTR [eax],al
110095c3:	add    BYTE PTR [eax],cl
110095c5:	sbb    eax,0x470c0f30
110095ca:	outs   dx,DWORD PTR ds:[esi]
110095cb:	push   0x1b2b4d5f
110095d0:	pop    ss
110095d1:	pop    ds
110095d2:	dec    eax
110095d3:	pop    ebp
110095d4:	push   0xf0b476f
110095d9:	xor    BYTE PTR ds:0x8,bl
110095df:	add    BYTE PTR [eax],al
110095e1:	add    BYTE PTR [eax],al
110095e3:	add    BYTE PTR [eax],cl
110095e5:	sbb    eax,0x6947090f
110095ea:	push   dx
110095ec:	and    bl,BYTE PTR cs:[eax+ebx*1]
110095f0:	adc    al,0x12
110095f2:	adc    DWORD PTR [esi],edx
110095f4:	dec    esp
110095f5:	gs addr16 inc edi
110095f8:	or     DWORD PTR [edi],ecx
110095fa:	sbb    eax,0x8
110095ff:	add    BYTE PTR [eax],al
11009601:	add    BYTE PTR [eax],al
11009603:	add    BYTE PTR [eax],cl
11009605:	push   cs
11009606:	or     al,0x47
11009608:	outs   dx,DWORD PTR ds:[esi]
11009609:	dec    dx
1100960b:	sub    eax,0x20222629
11009610:	sbb    DWORD PTR ds:0x28101112,edx
11009616:	imul   eax,DWORD PTR gs:[edi+0xc],0x70e
1100961e:	add    BYTE PTR [eax],al
11009620:	add    BYTE PTR [eax],al
11009622:	add    BYTE PTR [eax],al
11009624:	add    al,BYTE PTR [edi+eax*2]
11009627:	imul   ebp,DWORD PTR [eax+0x57],0x2a303434
1100962e:	and    ebx,DWORD PTR es:[esi]
11009631:	sbb    dl,BYTE PTR ds:0x4c101113
11009637:	push   0x2044767
	...
11009644:	or     al,BYTE PTR [edi+0x6f]
11009647:	outs   dx,DWORD PTR ds:[esi]
11009648:	arpl   WORD PTR [eax+0x3a],ax
1100964b:	cmp    al,0x37
1100964d:	xor    eax,0x2124272d
11009652:	sbb    dl,BYTE PTR ds:0x5d161113
11009658:	imul   ebp,DWORD PTR [edi+0x47],0xa
1100965f:	add    BYTE PTR [eax],al
11009661:	add    BYTE PTR [eax],al
11009663:	add    eax,0x6f6f6847
11009668:	push   ebp
11009669:	cmp    al,0x3e
1100966b:	ds ds ds ss sub al,0x25
11009671:	and    esp,DWORD PTR [ecx]
11009673:	sbb    dl,BYTE PTR ds:0x6f481112
11009679:	imul   esp,DWORD PTR [edi+0x47],0x3
11009680:	add    BYTE PTR [eax],al
11009682:	or     eax,0x6f6f6f47
11009687:	outs   dx,DWORD PTR ds:[esi]
11009688:	dec    ecx
11009689:	aas    
1100968a:	inc    edx
1100968b:	inc    edx
1100968c:	inc    edx
1100968d:	inc    ecx
1100968e:	aas    
1100968f:	cmp    al,0x2f
11009691:	sub    DWORD PTR [ebx],esp
11009693:	and    BYTE PTR [edx],bl
11009695:	adc    eax,0x6f6f1f12
1100969a:	outs   dx,DWORD PTR ds:[esi]
1100969b:	outs   dx,DWORD PTR ds:[esi]
1100969c:	inc    edi
1100969d:	or     eax,0x3000000
110096a2:	inc    edi
110096a3:	outs   dx,DWORD PTR ds:[si]
110096a5:	outs   dx,DWORD PTR ds:[esi]
110096a6:	outs   dx,DWORD PTR ds:[esi]
110096a7:	outs   dx,DWORD PTR ds:[esi]
110096a8:	inc    edx
110096a9:	inc    edx
110096aa:	inc    ebp
110096ab:	dec    ecx
110096ac:	inc    ebp
110096ad:	inc    esp
110096ae:	inc    edx
110096af:	inc    ecx
110096b0:	cmp    ch,BYTE PTR [edi]
110096b2:	and    eax,0x14191e23
110096b7:	pop    ss
110096b8:	imul   ebp,DWORD PTR [ecx+0x6f],0x547676f
110096bf:	add    BYTE PTR [eax],al
110096c1:	add    eax,DWORD PTR [edi+0x67]
110096c4:	outs   dx,DWORD PTR ds:[esi]
110096c5:	outs   dx,DWORD PTR ds:[esi]
110096c6:	outs   dx,DWORD PTR ds:[esi]
110096c7:	outs   dx,DWORD PTR ds:[esi]
110096c8:	inc    esp
110096c9:	dec    edx
110096ca:	dec    edi
110096cb:	push   eax
110096cc:	push   eax
110096cd:	dec    ebx
110096ce:	dec    edx
110096cf:	inc    esp
110096d0:	inc    ecx
110096d1:	cmp    ebp,DWORD PTR [edi+eiz*1]
110096d4:	and    esp,DWORD PTR [eax]
110096d6:	sbb    DWORD PTR [ebx],ebx
110096d8:	outs   dx,DWORD PTR ds:[esi]
110096d9:	outs   dx,DWORD PTR ds:[esi]
110096da:	outs   dx,DWORD PTR ds:[esi]
110096db:	outs   dx,DWORD PTR ds:[esi]
110096dc:	addr16 inc edi
110096de:	add    eax,DWORD PTR [eax]
110096e0:	add    BYTE PTR [eax],al
110096e2:	or     eax,0x6f6f6f47
110096e7:	outs   dx,DWORD PTR ds:[esi]
110096e8:	dec    edi
110096e9:	dec    esi
110096ea:	push   ebx
110096eb:	push   esi
110096ec:	push   ebp
110096ed:	push   ecx
110096ee:	dec    esi
110096ef:	dec    edx
110096f0:	inc    edx
110096f1:	inc    eax
110096f2:	xor    ebp,DWORD PTR ds:0x2b1c2224
110096f8:	imul   ebp,DWORD PTR [ecx+0x6f],0xd476f
110096ff:	add    BYTE PTR [eax],al
11009701:	add    BYTE PTR [eax],al
11009703:	add    eax,0x6f6f6747
11009708:	pop    esp
11009709:	push   ecx
1100970a:	pop    ecx
1100970b:	pop    esp
1100970c:	pop    ebx
1100970d:	pop    eax
1100970e:	push   ecx
1100970f:	dec    ebx
11009710:	inc    esp
11009711:	inc    ecx
11009712:	cmp    eax,0x22262a32
11009717:	dec    ebp
11009718:	outs   dx,DWORD PTR ds:[esi]
11009719:	outs   dx,DWORD PTR ds:[esi]
1100971a:	addr16 inc edi
1100971c:	add    eax,DWORD PTR [eax]
1100971e:	add    BYTE PTR [eax],al
11009720:	add    BYTE PTR [eax],al
11009722:	add    BYTE PTR [eax],al
11009724:	or     al,BYTE PTR [edi+0x6f]
11009727:	outs   dx,DWORD PTR ds:[esi]
11009728:	fs push esi
1100972a:	pop    esp
1100972b:	pusha  
1100972c:	pusha  
1100972d:	pop    ebx
1100972e:	push   ebp
1100972f:	dec    edi
11009730:	dec    ecx
11009731:	inc    ecx
11009732:	ds cmp al,0x30
11009735:	sub    DWORD PTR [ecx+eiz*2],ebp
11009738:	outs   dx,DWORD PTR ds:[esi]
11009739:	outs   dx,DWORD PTR ds:[esi]
1100973a:	inc    edi
1100973b:	or     al,BYTE PTR [eax]
1100973d:	add    BYTE PTR [eax],al
1100973f:	add    BYTE PTR [eax],al
11009741:	add    BYTE PTR [eax],al
11009743:	add    BYTE PTR [edx],al
11009745:	add    al,0x47
11009747:	imul   ebp,DWORD PTR [ecx+0x62],0x5c60605a
1100974e:	push   ebp
1100974f:	push   eax
11009750:	dec    ecx
11009751:	inc    edx
11009752:	cmp    dh,BYTE PTR ds:[eax+esi*1]
11009756:	push   esp
11009757:	imul   esp,DWORD PTR [edi+0x47],0x204
1100975e:	add    BYTE PTR [eax],al
11009760:	add    BYTE PTR [eax],al
11009762:	add    BYTE PTR [eax],al
11009764:	pop    es
11009765:	push   cs
11009766:	or     al,0x47
11009768:	outs   dx,DWORD PTR ds:[esi]
11009769:	push   0x595c5a5e
1100976e:	push   ebx
1100976f:	dec    edi
11009770:	inc    ebp
11009771:	inc    ecx
11009772:	cmp    dh,BYTE PTR ds:[edx+ecx*2]
11009776:	outs   dx,WORD PTR ds:[esi]
11009778:	inc    edi
11009779:	or     al,0xe
1100977b:	pop    es
	...
11009784:	or     BYTE PTR ds:0x6947090f,bl
1100978a:	push   0x4e515662
1100978f:	dec    ecx
11009790:	inc    ebx
11009791:	aas    
11009792:	cmp    al,0x40
11009794:	push   edi
11009795:	addr16 inc di
11009798:	or     DWORD PTR [edi],ecx
1100979a:	sbb    eax,0x8
1100979f:	add    BYTE PTR [eax],al
110097a1:	add    BYTE PTR [eax],al
110097a3:	add    BYTE PTR [eax],cl
110097a5:	sbb    eax,0x470c0f2d
110097aa:	outs   dx,DWORD PTR ds:[esi]
110097ab:	imul   esp,DWORD PTR [esp+ebx*2+0x50],0x55494244
110097b3:	arpl   WORD PTR [ecx+0x6f],bp
110097b6:	inc    edi
110097b7:	or     al,0xf
110097b9:	xor    BYTE PTR ds:0x8,bl
110097bf:	add    BYTE PTR [eax],al
110097c1:	add    BYTE PTR [eax],al
110097c3:	add    BYTE PTR [eax],cl
110097c5:	sbb    eax,0x90f3130
110097ca:	inc    edi
110097cb:	outs   dx,DWORD PTR ds:[si]
110097cd:	outs   dx,DWORD PTR ds:[esi]
110097ce:	outs   dx,DWORD PTR ds:[esi]
110097cf:	outs   dx,DWORD PTR ds:[esi]
110097d0:	outs   dx,DWORD PTR ds:[esi]
110097d1:	outs   dx,DWORD PTR ds:[esi]
110097d2:	outs   dx,DWORD PTR ds:[esi]
110097d3:	outs   dx,DWORD PTR ds:[esi]
110097d4:	imul   eax,DWORD PTR [edi+0x9],0x1d31310f
110097db:	or     BYTE PTR [eax],al
110097dd:	add    BYTE PTR [eax],al
110097df:	add    BYTE PTR [eax],al
110097e1:	add    BYTE PTR [eax],al
110097e3:	add    BYTE PTR [eax],cl
110097e5:	sbb    eax,0xf303131
110097ea:	or     al,0x47
110097ec:	outs   dx,DWORD PTR ds:[esi]
110097ed:	outs   dx,DWORD PTR ds:[esi]
110097ee:	outs   dx,DWORD PTR ds:[esi]
110097ef:	outs   dx,DWORD PTR ds:[esi]
110097f0:	outs   dx,DWORD PTR ds:[esi]
110097f1:	outs   dx,DWORD PTR ds:[esi]
110097f2:	outs   dx,DWORD PTR ds:[esi]
110097f3:	outs   dx,DWORD PTR ds:[esi]
110097f4:	inc    edi
110097f5:	or     al,0xf
110097f7:	sub    eax,0x81d3031
	...
11009804:	push   es
11009805:	nop    DWORD PTR ds:0x40e1d1d
1100980c:	inc    edi
1100980d:	outs   dx,DWORD PTR ds:[si]
1100980f:	outs   dx,DWORD PTR ds:[esi]
11009810:	outs   dx,DWORD PTR ds:[esi]
11009811:	outs   dx,DWORD PTR ds:[esi]
11009812:	addr16 inc edi
11009814:	add    al,0xe
11009816:	sbb    eax,0xf1d1d1d
1100981b:	push   es
	...
11009824:	add    DWORD PTR [esi],eax
11009826:	or     BYTE PTR [eax],cl
11009828:	or     BYTE PTR [eax],cl
1100982a:	pop    es
1100982b:	add    cl,BYTE PTR [edx]
1100982d:	inc    edi
1100982e:	outs   dx,DWORD PTR ds:[esi]
1100982f:	outs   dx,DWORD PTR ds:[esi]
11009830:	outs   dx,DWORD PTR ds:[esi]
11009831:	outs   dx,DWORD PTR ds:[esi]
11009832:	inc    edi
11009833:	or     al,BYTE PTR [edx]
11009835:	pop    es
11009836:	or     BYTE PTR [eax],cl
11009838:	or     BYTE PTR [eax],cl
1100983a:	push   es
1100983b:	add    DWORD PTR [eax],eax
	...
1100984d:	add    eax,DWORD PTR [edi+0x67]
11009850:	addr16 inc edi
11009852:	add    eax,DWORD PTR [eax]
	...
1100986c:	add    BYTE PTR [eax],al
1100986e:	or     eax,0xd4747
	...
1100988f:	add    eax,DWORD PTR [ebx]
	...
110098bd:	add    BYTE PTR [eax],al
110098bf:	add    bh,bh
110098c1:	(bad)  
110098c2:	(bad)  
110098c3:	(bad)  
110098c4:	(bad)  
110098c5:	(bad)  
110098c6:	jg     0x110098c7
110098c8:	(bad)  
110098c9:	cld    
110098ca:	aas    
110098cb:	(bad)  
110098cc:	(bad)  
110098cd:	clc    
110098ce:	pop    ds
110098cf:	push   eax
110098d1:	add    BYTE PTR [eax],al
110098d3:	(bad)  
110098d5:	add    BYTE PTR [eax],al
110098d7:	(bad)  
110098d9:	add    BYTE PTR [eax],al
110098db:	(bad)  
110098dd:	add    BYTE PTR [eax],al
110098df:	(bad)  
110098e1:	add    BYTE PTR [eax],al
110098e3:	(bad)  
110098e5:	add    BYTE PTR [eax],al
110098e7:	(bad)  
110098e9:	add    BYTE PTR [eax],al
110098eb:	(bad)  
110098ed:	add    BYTE PTR [eax],al
110098ef:	(bad)  
110098f1:	add    BYTE PTR [eax],al
110098f3:	pavgb  mm0,QWORD PTR [eax]
110098f6:	add    BYTE PTR [edi],al
110098f8:	rol    BYTE PTR [eax],0x0
110098fb:	add    eax,DWORD PTR [eax-0x7fff0000]
11009901:	add    BYTE PTR [eax],al
11009903:	add    eax,eax
11009905:	add    BYTE PTR [eax],al
11009907:	add    esp,eax
11009909:	add    BYTE PTR [eax],al
1100990b:	pop    es
1100990c:	lock add BYTE PTR [eax],al
1100990f:	(bad)  
11009911:	add    BYTE PTR [eax],al
11009913:	(bad)  
11009915:	add    BYTE PTR [eax],al
11009917:	(bad)  
11009919:	add    BYTE PTR [eax],al
1100991b:	(bad)  
1100991d:	add    BYTE PTR [eax],al
1100991f:	(bad)  
11009921:	add    BYTE PTR [eax],al
11009923:	(bad)  
11009925:	add    BYTE PTR [eax],al
11009927:	(bad)  
11009929:	add    BYTE PTR [eax],al
1100992b:	(bad)  
1100992d:	add    BYTE PTR [eax],al
1100992f:	ud0    edi,eax
11009932:	pop    ds
11009933:	(bad)  
11009934:	(bad)  
11009935:	cld    
11009936:	aas    
11009937:	(bad)  
11009938:	(bad)  
11009939:	(bad)  
1100993a:	jg     0x1100993b
1100993c:	(bad)  
1100993d:	(bad)  
1100993e:	(bad)  
1100993f:	jmp    FWORD PTR [eax]
11009941:	add    BYTE PTR [eax],al
11009943:	add    BYTE PTR [eax],bl
11009945:	add    BYTE PTR [eax],al
11009947:	add    BYTE PTR [eax],dh
11009949:	add    BYTE PTR [eax],al
1100994b:	add    BYTE PTR [ecx],al
1100994d:	add    BYTE PTR [eax],cl
	...
1100996b:	add    BYTE PTR [edi],cl
1100996d:	or     BYTE PTR ds:0x70b1300,al
11009973:	add    BYTE PTR [edx+eiz*1],bh
11009976:	push   ss
11009977:	add    BYTE PTR [ebp+0x45],al
1100997a:	inc    ebp
1100997b:	add    BYTE PTR [edx+0x48],cl
1100997e:	inc    edi
1100997f:	add    BYTE PTR [ecx+0x48],cl
11009982:	dec    eax
11009983:	add    BYTE PTR [ebp-0x32ffc2a3],ah
11009989:	pop    ecx
1100998a:	xor    eax,DWORD PTR [eax]
1100998c:	shl    DWORD PTR [eax+0x39],cl
1100998f:	add    al,bl
11009991:	addr16 aas 
11009993:	add    ch,dl
11009995:	addr16 inc ecx
11009997:	add    cl,bl
11009999:	push   0x6eda0040
1100999e:	inc    edi
1100999f:	add    dh,bl
110099a1:	outs   dx,DWORD PTR ds:[esi]
110099a2:	inc    ebp
110099a3:	add    dh,bl
110099a5:	jo     0x110099ed
110099a7:	add    bl,dl
110099a9:	jb     0x110099ff
110099ab:	add    cl,bl
110099ad:	jge    0x11009a0e
110099af:	add    bl,ah
110099b1:	jbe    0x110099fe
110099b3:	add    ah,ah
110099b5:	js     0x11009a05
110099b7:	add    al,ch
110099b9:	jle    0x11009a0c
110099bb:	add    cl,ch
110099bd:	adc    DWORD PTR [esi+0x0],0x5882e9
110099c4:	out    dx,al
110099c5:	xchg   BYTE PTR [ecx+0x0],bl
110099c8:	out    dx,al
110099c9:	mov    DWORD PTR [ebp+0x0],ebx
110099cc:	xrelease mov DWORD PTR [edx+0x0],ebx
110099d0:	hlt    
110099d1:	mov    DWORD PTR [ebx+0x0],ebx
110099d4:	repnz mov ebx,DWORD PTR [ebp+0x0]
110099d8:	repnz mov WORD PTR [ebp+0x0],ds
110099dc:	out    dx,al
110099dd:	mov    WORD PTR [ecx+0x0],fs
110099e0:	in     eax,0x8d
110099e2:	ins    BYTE PTR es:[edi],dx
110099e3:	add    ah,dh
110099e5:	(bad)  
110099e6:	popa   
110099e7:	add    bl,dh
110099e9:	nop
110099ea:	fs add ah,dh
110099ed:	xchg   ecx,eax
110099ee:	fs add bl,dh
110099f1:	xchg   esp,eax
110099f2:	push   0x0
110099f4:	cmc    
110099f5:	xchg   ebp,eax
110099f6:	push   0x0
110099f8:	hlt    
110099f9:	cwde   
110099fa:	outs   dx,BYTE PTR ds:[esi]
110099fb:	add    dh,dh
110099fd:	pushf  
110099fe:	jae    0x11009a00
11009a00:	icebp  
11009a01:	call   0x78:0x9ff50074
11009a08:	mul    BYTE PTR [ecx-0x5c09ff85]
11009a0e:	jge    0x11009a10
11009a10:	mul    BYTE PTR [esi+edi*2-0x7a570900]
11009a17:	add    bh,dh
11009a19:	lods   al,BYTE PTR ds:[esi]
11009a1a:	mov    eax,DWORD PTR [eax]
11009a1c:	imul   DWORD PTR [esi-0x4b07ff73]
11009a22:	xchg   ebp,eax
11009a23:	add    al,ch
11009a25:	mov    ch,0xa5
11009a27:	add    al,bh
11009a29:	mov    esp,0xc4f300a1
11009a2e:	mov    cl,0x0
11009a30:	stc    
11009a31:	(bad)  
11009a32:	mov    al,0x0
11009a34:	stc    
11009a35:	leave  
11009a36:	mov    bl,0x0
11009a38:	cli    
11009a39:	into   
11009a3a:	mov    edx,0xbccffa00
11009a3f:	add    bl,bh
11009a41:	(bad)  
11009a42:	mov    BYTE PTR [eax],0xfb
11009a45:	fmul   st,st(1)
11009a47:	add    ah,bh
11009a49:	(bad)  
11009a4b:	add    cl,bh
11009a4d:	in     al,dx
11009a4e:	call   0xfef39853
11009a53:	add    ch,dh
11009a55:	cmc    
11009a56:	cmc    
11009a57:	add    dh,bh
11009a59:	clc    
11009a5a:	cmc    
11009a5b:	add    ch,bh
11009a5d:	cli    
11009a5e:	stc    
11009a5f:	add    dh,bh
11009a61:	(bad)  
11009a62:	inc    BYTE PTR [eax]
11009a64:	(bad)  
11009a65:	(bad)  
11009a66:	inc    DWORD PTR [eax]
11009a68:	add    BYTE PTR [eax],al
11009a6a:	add    BYTE PTR [eax],al
11009a6c:	add    BYTE PTR [edi],ch
11009a6e:	push   cs
11009a6f:	add    BYTE PTR [eax],al
11009a71:	push   eax
11009a72:	sbb    BYTE PTR [eax],al
11009a74:	add    BYTE PTR [eax+0x22],dh
11009a77:	add    BYTE PTR [eax],al
11009a79:	nop
11009a7a:	sub    al,0x0
11009a7c:	add    BYTE PTR [eax-0x30ffffca],dh
11009a82:	inc    eax
11009a83:	add    BYTE PTR [eax],al
11009a85:	lock dec edx
11009a87:	add    BYTE PTR [ecx],dl
11009a89:	call   FWORD PTR [ebx+0x0]
11009a8c:	xor    edi,edi
11009a8e:	jno    0x11009a90
11009a90:	push   ecx
11009a91:	inc    DWORD PTR [edi-0x62008f00]
11009a97:	add    BYTE PTR [ecx-0x4eff4d01],dl
11009a9d:	dec    ecx
11009a9f:	add    cl,dl
11009aa1:	(bad)  
11009aa2:	fild   WORD PTR [eax]
11009aa4:	(bad)  
11009aa5:	(bad)  
11009aa6:	inc    DWORD PTR [eax]
11009aa8:	add    BYTE PTR [eax],al
11009aaa:	add    BYTE PTR [eax],al
11009aac:	add    ch,BYTE PTR [edi]
11009aae:	add    BYTE PTR [eax],al
11009ab0:	add    al,0x50
11009ab2:	add    BYTE PTR [eax],al
11009ab4:	push   es
11009ab5:	jo     0x11009ab7
11009ab7:	add    BYTE PTR [eax],cl
11009ab9:	nop
11009aba:	add    BYTE PTR [eax],al
11009abc:	or     dh,BYTE PTR [eax-0x30f50000]
11009ac2:	add    BYTE PTR [eax],al
11009ac4:	push   cs
11009ac5:	lock add BYTE PTR [eax],al
11009ac8:	and    bh,bh
11009aca:	adc    al,BYTE PTR [eax]
11009acc:	cmp    eax,0x5b0031ff
11009ad1:	call   DWORD PTR [ecx+0x0]
11009ad4:	jns    0x11009ad5
11009ad6:	jno    0x11009ad8
11009ad8:	cwde   
11009ad9:	call   DWORD PTR [ecx-0x4e004b00]
11009adf:	add    ah,dl
11009ae1:	call   ecx
11009ae3:	add    bh,bh
11009ae5:	(bad)  
11009ae6:	inc    DWORD PTR [eax]
11009ae8:	add    BYTE PTR [eax],al
11009aea:	add    BYTE PTR [eax],al
11009aec:	adc    al,0x2f
11009aee:	add    BYTE PTR [eax],al
11009af0:	and    dl,BYTE PTR [eax+0x0]
11009af3:	add    BYTE PTR [eax],dh
11009af5:	jo     0x11009af7
11009af7:	add    BYTE PTR ds:0x4c000090,bh
11009afd:	mov    al,0x0
11009aff:	add    BYTE PTR [ecx-0x31],bl
11009b02:	add    BYTE PTR [eax],al
11009b04:	lock add BYTE PTR [bx+si],al
11009b08:	js     0x11009b09
11009b0a:	adc    DWORD PTR [eax],eax
11009b0c:	mov    bh,bh
11009b0e:	xor    DWORD PTR [eax],eax
11009b10:	pushf  
11009b11:	call   DWORD PTR [ecx+0x0]
11009b14:	scas   al,BYTE PTR es:[edi]
11009b15:	push   DWORD PTR [ecx+0x0]
11009b18:	sar    bh,0x91
11009b1b:	add    dl,dl
11009b1d:	push   DWORD PTR [ecx-0x2e001c00]
11009b23:	add    bh,bh
11009b25:	(bad)  
11009b26:	inc    DWORD PTR [eax]
11009b28:	add    BYTE PTR [eax],al
11009b2a:	add    BYTE PTR [eax],al
11009b2c:	es das 
11009b2e:	add    BYTE PTR [eax],al
11009b30:	inc    eax
11009b31:	push   eax
11009b32:	add    BYTE PTR [eax],al
11009b34:	pop    edx
11009b35:	jo     0x11009b37
11009b37:	add    BYTE PTR [eax+edx*4+0x0],dh
11009b3b:	add    BYTE PTR [esi-0x56ffff50],cl
11009b41:	iret   
11009b42:	add    BYTE PTR [eax],al
11009b44:	ret    0xf0
11009b47:	add    cl,dl
11009b49:	call   DWORD PTR [ecx]
11009b4b:	add    al,bl
11009b4d:	push   DWORD PTR [ecx]
11009b4f:	add    dh,bl
11009b51:	call   DWORD PTR [ecx+0x0]
11009b54:	jecxz  0x11009b55
11009b56:	jno    0x11009b58
11009b58:	jmp    0x12d5c
11009b5d:	push   DWORD PTR [ecx-0x2e000a00]
11009b63:	add    bh,bh
11009b65:	(bad)  
11009b66:	inc    DWORD PTR [eax]
11009b68:	add    BYTE PTR [eax],al
11009b6a:	add    BYTE PTR [eax],al
11009b6c:	das    
11009b6d:	add    BYTE PTR es:[eax],al
11009b70:	push   eax
11009b71:	inc    ecx
11009b72:	add    BYTE PTR [eax],al
11009b74:	jo     0x11009bd1
11009b76:	add    BYTE PTR [eax],al
11009b78:	nop
11009b79:	je     0x11009b7b
11009b7b:	add    BYTE PTR [eax-0x30ffff72],dh
11009b81:	test   eax,0xc3f00000
11009b86:	add    BYTE PTR [eax],al
11009b88:	call   edx
11009b8a:	adc    DWORD PTR [eax],eax
11009b8c:	(bad)  
11009b8d:	fdiv   DWORD PTR [ecx]
11009b8f:	add    bh,bh
11009b91:	fst    QWORD PTR [ecx+0x0]
11009b94:	jmp    esp
11009b96:	jno    0x11009b98
11009b98:	(bad)  
11009b99:	jmp    0xb1:0xf0ff0091
11009ba0:	push   esi
11009ba2:	rol    DWORD PTR [eax],1
11009ba4:	(bad)  
11009ba5:	(bad)  
11009ba6:	inc    DWORD PTR [eax]
11009ba8:	add    BYTE PTR [eax],al
11009baa:	add    BYTE PTR [eax],al
11009bac:	das    
11009bad:	adc    al,0x0
11009baf:	add    BYTE PTR [eax+0x22],dl
11009bb2:	add    BYTE PTR [eax],al
11009bb4:	jo     0x11009be6
11009bb6:	add    BYTE PTR [eax],al
11009bb8:	nop
11009bb9:	add    BYTE PTR ds:[eax],al
11009bbc:	mov    al,0x4d
11009bbe:	add    BYTE PTR [eax],al
11009bc0:	iret   
11009bc1:	pop    ebx
11009bc2:	add    BYTE PTR [eax],al
11009bc4:	lock imul eax,DWORD PTR [eax],0x1179ff00
11009bcb:	add    bh,bh
11009bcd:	mov    dh,BYTE PTR [ecx]
11009bcf:	add    bh,bh
11009bd1:	popf   
11009bd2:	push   ecx
11009bd3:	add    bh,bh
11009bd5:	scas   eax,DWORD PTR es:[edi]
11009bd6:	jno    0x11009bd8
11009bd8:	inc    ecx
11009bda:	xchg   ecx,eax
11009bdb:	add    bh,bh
11009bdd:	shl    BYTE PTR [ecx-0x2e1a0100],cl
11009be3:	add    bh,bh
11009be5:	(bad)  
11009be6:	inc    DWORD PTR [eax]
11009be8:	add    BYTE PTR [eax],al
11009bea:	add    BYTE PTR [eax],al
11009bec:	das    
11009bed:	add    eax,DWORD PTR [eax]
11009bef:	add    BYTE PTR [eax+0x4],dl
11009bf2:	add    BYTE PTR [eax],al
11009bf4:	jo     0x11009bfc
11009bf6:	add    BYTE PTR [eax],al
11009bf8:	nop
11009bf9:	or     DWORD PTR [eax],eax
11009bfb:	add    BYTE PTR [eax-0x30fffff6],dh
11009c01:	or     al,0x0
11009c03:	add    al,dh
11009c05:	push   cs
11009c06:	add    BYTE PTR [eax],al
11009c08:	jmp    DWORD PTR [eax]
11009c0a:	adc    al,BYTE PTR [eax]
11009c0c:	(bad)  
11009c0d:	xor    DWORD PTR ds:[eax],eax
11009c10:	call   FWORD PTR [ecx+edx*2+0x0]
11009c14:	(bad)  
11009c15:	jp     0x11009c88
11009c17:	add    bh,bh
11009c19:	xchg   edi,eax
11009c1a:	xchg   ecx,eax
11009c1b:	add    bh,bh
11009c1d:	mov    dh,0xb1
11009c1f:	add    bh,bh
11009c21:	aam    0xd1
11009c23:	add    bh,bh
11009c25:	(bad)  
11009c26:	inc    DWORD PTR [eax]
11009c28:	add    BYTE PTR [eax],al
11009c2a:	add    BYTE PTR [eax],al
11009c2c:	das    
11009c2d:	add    BYTE PTR [esi],cl
11009c2f:	add    BYTE PTR [eax+0x0],dl
11009c32:	pop    ss
11009c33:	add    BYTE PTR [eax+0x0],dh
11009c36:	and    DWORD PTR [eax],eax
11009c38:	nop
11009c39:	add    BYTE PTR [ebx],ch
11009c3b:	add    BYTE PTR [eax-0x30ffca00],dh
11009c41:	add    BYTE PTR [eax+0x0],al
11009c44:	lock add BYTE PTR [ecx+0x0],cl
11009c48:	call   DWORD PTR [ecx]
11009c4a:	pop    edx
11009c4b:	add    bh,bh
11009c4d:	xor    DWORD PTR [eax+0x0],esi
11009c50:	call   DWORD PTR [ecx-0x7a]
11009c53:	add    bh,bh
11009c55:	jno    0x11009bf3
11009c57:	add    bh,bh
11009c59:	xchg   ecx,eax
11009c5a:	mov    dl,0x0
11009c5c:	push   DWORD PTR [ecx-0x2e00ff38]
11009c62:	fild   WORD PTR [eax]
11009c64:	(bad)  
11009c65:	(bad)  
11009c66:	inc    DWORD PTR [eax]
11009c68:	add    BYTE PTR [eax],al
11009c6a:	add    BYTE PTR [eax],al
11009c6c:	das    
11009c6d:	add    BYTE PTR [eax],ah
11009c6f:	add    BYTE PTR [eax+0x0],dl
11009c72:	add    BYTE PTR ss:[eax+0x0],dh
11009c76:	dec    esp
11009c77:	add    BYTE PTR [eax-0x4fff9e00],dl
11009c7d:	add    BYTE PTR [eax+0x0],bh
11009c80:	iret   
11009c81:	add    BYTE PTR [esi-0x5bff1000],cl
11009c87:	add    bh,bh
11009c89:	adc    DWORD PTR [ebx-0x41ce0100],esi
11009c8f:	add    bh,bh
11009c91:	push   ecx
11009c92:	mov    DWORD PTR [eax],0xd171ff
11009c98:	call   DWORD PTR [ecx-0x4e00ff24]
11009c9e:	in     eax,0x0
11009ca0:	call   ecx
11009ca2:	lock add bh,bh
11009ca5:	(bad)  
11009ca6:	inc    DWORD PTR [eax]
11009ca8:	add    BYTE PTR [eax],al
11009caa:	add    BYTE PTR [eax],al
11009cac:	sub    al,0x0
11009cae:	das    
11009caf:	add    BYTE PTR [ebx+0x0],cl
11009cb2:	push   eax
11009cb3:	add    BYTE PTR [ecx+0x0],ch
11009cb6:	jo     0x11009cb8
11009cb8:	xchg   DWORD PTR [eax],eax
11009cba:	nop
11009cbb:	add    BYTE PTR [ebp-0x3bff5000],ah
11009cc1:	add    bh,cl
11009cc3:	add    cl,ah
11009cc5:	add    al,dh
11009cc7:	add    al,dh
11009cc9:	adc    edi,edi
11009ccb:	add    dl,dh
11009ccd:	xor    edi,edi
11009ccf:	add    ah,dh
11009cd1:	push   ecx
11009cd2:	inc    DWORD PTR [eax]
11009cd4:	div    BYTE PTR [ecx-0x1]
11009cd7:	add    bh,dh
11009cd9:	xchg   ecx,eax
11009cda:	inc    DWORD PTR [eax]
11009cdc:	stc    
11009cdd:	mov    cl,0xff
11009cdf:	add    bl,bh
11009ce1:	sar    edi,1
11009ce3:	add    bh,bh
11009ce5:	(bad)  
11009ce6:	inc    DWORD PTR [eax]
11009ce8:	add    BYTE PTR [eax],al
11009cea:	add    BYTE PTR [eax],al
11009cec:	sbb    eax,DWORD PTR [eax]
11009cee:	das    
11009cef:	add    BYTE PTR ds:0x3f005000,ch
11009cf5:	add    BYTE PTR [eax+0x0],dh
11009cf8:	push   edx
11009cf9:	add    BYTE PTR [eax-0x4fff9d00],dl
11009cff:	add    BYTE PTR [esi+0x0],dh
11009d02:	iret   
11009d03:	add    BYTE PTR [eax-0x66ff1000],cl
11009d09:	adc    edi,edi
11009d0b:	add    BYTE PTR [esi-0x4bff00cf],ah
11009d11:	push   ecx
11009d12:	inc    DWORD PTR [eax]
11009d14:	ret    0xff71
11009d17:	add    bh,cl
11009d19:	xchg   ecx,eax
11009d1a:	inc    DWORD PTR [eax]
11009d1c:	fdiv   QWORD PTR [ecx-0x2e14ff01]
11009d22:	inc    DWORD PTR [eax]
11009d24:	(bad)  
11009d25:	(bad)  
11009d26:	inc    DWORD PTR [eax]
11009d28:	add    BYTE PTR [eax],al
11009d2a:	add    BYTE PTR [eax],al
11009d2c:	or     BYTE PTR [eax],al
11009d2e:	das    
11009d2f:	add    BYTE PTR [esi],cl
11009d31:	add    BYTE PTR [eax+0x0],dl
11009d34:	adc    eax,0x1b007000
11009d39:	add    BYTE PTR [eax-0x4fffdf00],dl
11009d3f:	add    BYTE PTR [esi],ah
11009d41:	add    bh,cl
11009d43:	add    BYTE PTR [eax+eax*1],ch
11009d46:	lock add BYTE PTR [esi],bh
11009d49:	adc    edi,edi
11009d4b:	add    BYTE PTR [eax+0x31],bl
11009d4e:	inc    DWORD PTR [eax]
11009d50:	jno    0x11009da3
11009d52:	inc    DWORD PTR [eax]
11009d54:	mov    WORD PTR [ecx-0x1],?
11009d57:	add    BYTE PTR [esi-0x40ff006f],ah
11009d5d:	mov    cl,0xff
11009d5f:	add    dl,bl
11009d61:	sar    edi,1
11009d63:	add    bh,bh
11009d65:	(bad)  
11009d66:	inc    DWORD PTR [eax]
	...
11009d88:	add    BYTE PTR [eax],al
11009d8a:	add    BYTE PTR [esi],al
11009d8c:	push   es
	...
11009da1:	add    BYTE PTR [esi],al
11009da3:	cmp    edi,DWORD PTR [ebx]
11009da5:	push   es
	...
11009db2:	add    BYTE PTR [edx],al
11009db4:	add    eax,DWORD PTR [ebx]
11009db6:	add    eax,DWORD PTR [ebx]
11009db8:	add    al,BYTE PTR [ebx+edi*1]
11009dbb:	aas    
11009dbc:	aas    
11009dbd:	cmp    eax,DWORD PTR [edx+eax*1]
11009dc0:	add    eax,DWORD PTR [ebx]
11009dc2:	add    eax,DWORD PTR [ebx]
11009dc4:	add    al,BYTE PTR [eax]
11009dc6:	add    BYTE PTR [eax],al
11009dc8:	add    BYTE PTR [eax],al
11009dca:	add    BYTE PTR [ebx],al
11009dcc:	sbb    bl,BYTE PTR [edx]
11009dce:	sbb    al,BYTE PTR [edi]
11009dd0:	add    eax,0x3f3f3f3b
11009dd5:	aas    
11009dd6:	cmp    eax,DWORD PTR ds:0x1c1a1a07
11009ddc:	add    eax,DWORD PTR [eax]
11009dde:	add    BYTE PTR [eax],al
11009de0:	add    BYTE PTR [eax],al
11009de2:	add    BYTE PTR [ebx],al
11009de4:	sbb    bl,BYTE PTR [edx]
11009de6:	pop    es
11009de7:	add    eax,0x3e3f3f3b
11009dec:	aas    
11009ded:	aas    
11009dee:	aas    
11009def:	cmp    eax,DWORD PTR ds:0x31a1f07
11009df5:	add    BYTE PTR [eax],al
11009df7:	add    BYTE PTR [eax],al
11009df9:	add    BYTE PTR [eax],al
11009dfb:	add    ebx,DWORD PTR [edx]
11009dfd:	pop    es
11009dfe:	push   es
11009dff:	cmp    edi,DWORD PTR ds:0xb0d1e31
11009e05:	adc    DWORD PTR [edi],ebp
11009e07:	cmp    eax,0x1a07053b
11009e0c:	add    eax,DWORD PTR [eax]
11009e0e:	add    BYTE PTR [eax],al
11009e10:	add    BYTE PTR [eax],al
11009e12:	add    BYTE PTR [ebx],al
11009e14:	pop    es
11009e15:	add    eax,0x14263a3d
11009e1a:	adc    cl,BYTE PTR [esi]
11009e1c:	or     al,0x9
11009e1e:	or     BYTE PTR [eax],dl
11009e20:	cmp    DWORD PTR [ebx],edi
11009e22:	add    eax,0x307
11009e27:	add    BYTE PTR [eax],al
11009e29:	add    BYTE PTR [eax],al
11009e2b:	add    al,BYTE PTR ds:0x1c293d3b
11009e31:	pop    ss
11009e32:	adc    eax,0x90c0f13
11009e37:	or     BYTE PTR [eax],dl
11009e39:	cmp    eax,0x2053b
11009e3e:	add    BYTE PTR [eax],al
11009e40:	add    BYTE PTR [eax],al
11009e42:	add    BYTE PTR [ebx+edi*1],al
11009e45:	aas    
11009e46:	xor    al,0x1f
11009e48:	and    DWORD PTR [ecx],esp
11009e4a:	sbb    BYTE PTR [esi],dl
11009e4c:	adc    ecx,DWORD PTR [edi]
11009e4e:	or     al,0x9
11009e50:	or     BYTE PTR [edi],ch
11009e52:	aas    
11009e53:	cmp    eax,DWORD PTR [eax+eax*1]
11009e56:	add    BYTE PTR [eax],al
11009e58:	add    BYTE PTR [eax],al
11009e5a:	push   es
11009e5b:	cmp    edi,DWORD PTR [edi]
11009e5d:	aas    
11009e5e:	sub    esp,DWORD PTR [ebx]
11009e60:	and    al,0x24
11009e62:	and    ebx,DWORD PTR ds:0xc0f1316
11009e68:	or     DWORD PTR [ecx],edx
11009e6a:	aas    
11009e6b:	aas    
11009e6c:	cmp    eax,DWORD PTR [esi]
11009e6e:	add    BYTE PTR [eax],al
11009e70:	add    BYTE PTR [esi],al
11009e72:	cmp    edi,DWORD PTR [edi]
11009e74:	aas    
11009e75:	ds and eax,0x272a2a27
11009e7b:	and    al,0x1d
11009e7d:	push   ss
11009e7e:	adc    ecx,DWORD PTR [edi]
11009e80:	or     al,0xb
11009e82:	aas    
11009e83:	aas    
11009e84:	aas    
11009e85:	cmp    eax,DWORD PTR [esi]
11009e87:	add    BYTE PTR [eax],al
11009e89:	push   es
11009e8a:	cmp    edi,DWORD PTR [esi]
11009e8c:	aas    
11009e8d:	aas    
11009e8e:	sub    ch,BYTE PTR ds:0x292c2e2e
11009e94:	and    al,0x1d
11009e96:	adc    eax,0x3f0d0f13
11009e9b:	aas    
11009e9c:	aas    
11009e9d:	cmp    eax,DWORD PTR [esi]
11009e9f:	add    BYTE PTR [eax],al
11009ea1:	add    BYTE PTR [esi],al
11009ea3:	cmp    edi,DWORD PTR [edi]
11009ea5:	xor    BYTE PTR ds:[eax],dh
11009ea8:	xor    esi,DWORD PTR [edx]
11009eaa:	xor    BYTE PTR [eax+ebp*1],ch
11009ead:	and    ebx,DWORD PTR [eax]
11009eaf:	adc    eax,0x3f3f1e12
11009eb4:	cmp    eax,DWORD PTR [esi]
11009eb6:	add    BYTE PTR [eax],al
11009eb8:	add    BYTE PTR [eax],al
11009eba:	add    BYTE PTR [esi],al
11009ebc:	cmp    edi,DWORD PTR [edi]
11009ebe:	cmp    BYTE PTR [edx],dh
11009ec0:	aaa    
11009ec1:	xor    ebp,DWORD PTR ss:[esi]
11009ec4:	sub    ah,BYTE PTR [ecx+eiz*1]
11009ec7:	pop    ss
11009ec8:	adc    al,0x31
11009eca:	aas    
11009ecb:	cmp    eax,DWORD PTR [eax+eax*1]
11009ece:	add    BYTE PTR [eax],al
11009ed0:	add    BYTE PTR [eax],al
11009ed2:	add    BYTE PTR [edx],al
11009ed4:	add    eax,0x37353e3b
11009ed9:	aaa    
11009eda:	xor    ebp,DWORD PTR [esi]
11009edc:	sub    ah,BYTE PTR [ecx+eiz*1]
11009edf:	sbb    al,0x26
11009ee1:	cmp    eax,0x2053b
11009ee6:	add    BYTE PTR [eax],al
11009ee8:	add    BYTE PTR [eax],al
11009eea:	add    BYTE PTR [ebx],al
11009eec:	pop    es
11009eed:	add    eax,0x33353c3b
11009ef2:	xor    BYTE PTR ds:0x291f2327,ch
11009ef8:	cmp    bh,BYTE PTR [ebx]
11009efa:	add    eax,0x307
11009eff:	add    BYTE PTR [eax],al
11009f01:	add    BYTE PTR [eax],al
11009f03:	add    ebx,DWORD PTR [edx]
11009f05:	pop    es
11009f06:	add    eax,0x30383e3b
11009f0b:	sub    ah,BYTE PTR ds:0x3b3e352b
11009f11:	add    eax,0x31a07
11009f16:	add    BYTE PTR [eax],al
11009f18:	add    BYTE PTR [eax],al
11009f1a:	add    BYTE PTR [ebx],al
11009f1c:	sbb    DWORD PTR [ecx],ebx
11009f1e:	pop    es
11009f1f:	add    eax,0x3f3f3f3b
11009f24:	aas    
11009f25:	aas    
11009f26:	aas    
11009f27:	cmp    eax,DWORD PTR ds:0x31a1a07
11009f2d:	add    BYTE PTR [eax],al
11009f2f:	add    BYTE PTR [eax],al
11009f31:	add    BYTE PTR [eax],al
11009f33:	add    ebx,DWORD PTR [ecx]
11009f35:	sbb    DWORD PTR [ecx],ebx
11009f37:	pop    es
11009f38:	add    eax,0x3f3f3f3b
11009f3d:	aas    
11009f3e:	cmp    eax,DWORD PTR ds:0x1a1a1a07
11009f44:	add    eax,DWORD PTR [eax]
11009f46:	add    BYTE PTR [eax],al
11009f48:	add    BYTE PTR [eax],al
11009f4a:	add    BYTE PTR [ecx],al
11009f4c:	add    eax,DWORD PTR [ebx]
11009f4e:	add    eax,DWORD PTR [ebx]
11009f50:	add    al,BYTE PTR [esi]
11009f52:	cmp    edi,DWORD PTR [edi]
11009f54:	aas    
11009f55:	cmp    eax,DWORD PTR [edx+eax*1]
11009f58:	add    eax,DWORD PTR [ebx]
11009f5a:	add    eax,DWORD PTR [ebx]
11009f5c:	add    DWORD PTR [eax],eax
	...
11009f6a:	push   es
11009f6b:	cmp    edi,DWORD PTR [ebx]
11009f6d:	push   es
	...
11009f82:	add    BYTE PTR [esi],al
11009f84:	push   es
	...
11009fa5:	add    BYTE PTR [eax],al
11009fa7:	add    bh,bh
11009fa9:	(bad)  
11009faa:	inc    DWORD PTR [eax]
11009fac:	jmp    edi
11009fae:	inc    DWORD PTR [eax]
11009fb0:	inc    ebx
11009fb2:	inc    DWORD PTR [eax]
11009fb4:	loopne 0x11009fb6
11009fb6:	pop    es
11009fb7:	add    al,ah
11009fb9:	add    BYTE PTR [edi],al
11009fbb:	add    al,ah
11009fbd:	add    BYTE PTR [edi],al
11009fbf:	add    al,ah
11009fc1:	add    BYTE PTR [edi],al
11009fc3:	add    al,ah
11009fc5:	add    BYTE PTR [edi],al
11009fc7:	add    al,ah
11009fc9:	add    BYTE PTR [edi],al
11009fcb:	add    al,ah
11009fcd:	add    BYTE PTR [edi],al
11009fcf:	add    al,al
11009fd1:	add    BYTE PTR [ebx],al
11009fd3:	add    BYTE PTR [eax-0x7fffff00],al
11009fd9:	add    BYTE PTR [ecx],al
11009fdb:	add    al,al
11009fdd:	add    BYTE PTR [ebx],al
11009fdf:	add    al,ah
11009fe1:	add    BYTE PTR [edi],al
11009fe3:	add    al,ah
11009fe5:	add    BYTE PTR [edi],al
11009fe7:	add    al,ah
11009fe9:	add    BYTE PTR [edi],al
11009feb:	add    al,ah
11009fed:	add    BYTE PTR [edi],al
11009fef:	add    al,ah
11009ff1:	add    BYTE PTR [edi],al
11009ff3:	add    al,ah
11009ff5:	add    BYTE PTR [edi],al
11009ff7:	add    al,ah
11009ff9:	add    BYTE PTR [edi],al
11009ffb:	add    bh,bh
11009ffd:	ret    
11009ffe:	inc    DWORD PTR [eax]
1100a000:	jmp    edi
1100a002:	inc    DWORD PTR [eax]
1100a004:	(bad)  
1100a005:	(bad)  
1100a006:	inc    DWORD PTR [eax]
1100a008:	sub    BYTE PTR [eax],al
1100a00a:	add    BYTE PTR [eax],al
1100a00c:	adc    BYTE PTR [eax],al
1100a00e:	add    BYTE PTR [eax],al
1100a010:	and    BYTE PTR [eax],al
1100a012:	add    BYTE PTR [eax],al
1100a014:	add    DWORD PTR [eax],eax
1100a016:	or     BYTE PTR [eax],al
	...
1100a034:	xor    bl,BYTE PTR [esi]
1100a036:	adc    eax,0x17233d00
1100a03b:	add    BYTE PTR [edx+0x45],bh
1100a03e:	add    BYTE PTR cs:[ebx-0x63ffc3a7],bl
1100a045:	pop    ecx
1100a046:	cmp    al,0x0
1100a048:	iret   
1100a049:	bound  edi,QWORD PTR [edi]
1100a04b:	add    ah,dl
1100a04d:	popa   
1100a04e:	cmp    al,BYTE PTR [eax]
1100a050:	(bad)  
1100a051:	imul   eax,DWORD PTR [eax+eax*1-0x24],0xdc00436c
1100a059:	ins    BYTE PTR es:[edi],dx
1100a05a:	inc    esp
1100a05b:	add    ch,bl
1100a05d:	jae    0x1100a0ab
1100a05f:	add    ah,ah
1100a061:	js     0x1100a0b1
1100a063:	add    ah,ch
1100a065:	adc    BYTE PTR [esi+0x0],0xec
1100a069:	xchg   BYTE PTR [ebx+0x0],bl
1100a06c:	in     eax,dx
1100a06d:	mov    BYTE PTR [esi+0x0],bl
1100a070:	hlt    
1100a071:	mov    bl,BYTE PTR [ebx+0x0]
1100a074:	fisttp QWORD PTR [ebp-0x6e0cff8d]
1100a07a:	data16 add ch,dh
1100a07d:	xchg   ebx,eax
1100a07e:	data16 add ah,dh
1100a081:	cwde   
1100a082:	outs   dx,BYTE PTR ds:[esi]
1100a083:	add    dh,dh
1100a085:	popf   
1100a086:	jne    0x1100a088
1100a088:	mul    BYTE PTR [eax-0x5a59ff87]
1100a08e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100a08f:	add    ch,ch
1100a091:	mov    ds:0xa8f70083,al
1100a096:	test   DWORD PTR [eax],eax
1100a098:	imul   DWORD PTR [ecx+ecx*4-0x6c4c0800]
1100a09f:	add    al,bh
1100a0a1:	mov    bh,0x9a
1100a0a3:	add    cl,bh
1100a0a5:	mov    ecx,0xcefb009c
1100a0aa:	mov    edx,0xbdd0fa00
1100a0af:	add    bl,bh
1100a0b1:	rol    al,cl
1100a0b3:	add    bh,dh
1100a0b5:	in     eax,0xdf
1100a0b7:	add    ah,bh
1100a0b9:	in     eax,dx
1100a0ba:	in     eax,0x0
1100a0bc:	(bad)  
1100a0bd:	cmc    
1100a0be:	icebp  
1100a0bf:	add    bh,bh
1100a0c1:	(bad)  
1100a0c2:	inc    DWORD PTR [eax]
1100a0c4:	add    BYTE PTR [ebp-0x3cffff50],ah
1100a0ca:	iret   
1100a0cb:	add    BYTE PTR [eax],al
1100a0cd:	loope  0x1100a0bf
1100a0cf:	add    BYTE PTR [ecx],dl
1100a0d1:	out    dx,eax
1100a0d2:	inc    DWORD PTR [eax]
1100a0d4:	xor    ecx,esi
1100a0d6:	inc    DWORD PTR [eax]
1100a0d8:	push   ecx
1100a0d9:	repz inc DWORD PTR [eax]
1100a0dc:	jno    0x1100a0d3
1100a0de:	inc    DWORD PTR [eax]
1100a0e0:	xchg   ecx,eax
1100a0e1:	idiv   edi
1100a0e3:	add    BYTE PTR [ecx-0x2eff0007],dh
1100a0e9:	sti    
1100a0ea:	inc    DWORD PTR [eax]
1100a0ec:	(bad)  
1100a0ed:	(bad)  
1100a0ee:	inc    DWORD PTR [eax]
1100a0f0:	add    BYTE PTR [eax],al
1100a0f2:	add    BYTE PTR [eax],al
1100a0f4:	add    BYTE PTR [edi],ch
1100a0f6:	and    DWORD PTR [eax],eax
1100a0f8:	add    BYTE PTR [eax+0x37],dl
1100a0fb:	add    BYTE PTR [eax],al
1100a0fd:	jo     0x1100a14b
1100a0ff:	add    BYTE PTR [eax],al
1100a101:	nop
1100a102:	arpl   WORD PTR [eax],ax
1100a104:	add    BYTE PTR [eax-0x30ffff87],dh
1100a10a:	pop    DWORD PTR [eax]
1100a10c:	add    al,dh
1100a10e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100a10f:	add    BYTE PTR [ecx],dl
1100a111:	push   DWORD PTR [eax+eax*1+0xbeff31]
1100a118:	push   ecx
1100a119:	dec    eax
1100a11b:	add    BYTE PTR [ecx-0x1],dh
1100a11e:	rol    DWORD PTR [eax],cl
1100a120:	xchg   ecx,eax
1100a121:	(bad)  
1100a122:	fadd   QWORD PTR [eax]
1100a124:	mov    cl,0xff
1100a126:	in     eax,0x0
1100a128:	sar    edi,1
1100a12a:	lock add bh,bh
1100a12d:	(bad)  
1100a12e:	inc    DWORD PTR [eax]
1100a130:	add    BYTE PTR [eax],al
1100a132:	add    BYTE PTR [eax],al
1100a134:	add    BYTE PTR [edi],ch
1100a136:	push   cs
1100a137:	add    BYTE PTR [eax],al
1100a139:	push   eax
1100a13a:	sbb    BYTE PTR [eax],al
1100a13c:	add    BYTE PTR [eax+0x22],dh
1100a13f:	add    BYTE PTR [eax],al
1100a141:	nop
1100a142:	sub    al,0x0
1100a144:	add    BYTE PTR [eax-0x30ffffca],dh
1100a14a:	inc    eax
1100a14b:	add    BYTE PTR [eax],al
1100a14d:	lock dec edx
1100a14f:	add    BYTE PTR [ecx],dl
1100a151:	call   FWORD PTR [ebx+0x0]
1100a154:	xor    edi,edi
1100a156:	jno    0x1100a158
1100a158:	push   ecx
1100a159:	inc    DWORD PTR [edi-0x62008f00]
1100a15f:	add    BYTE PTR [ecx-0x4eff4d01],dl
1100a165:	dec    ecx
1100a167:	add    cl,dl
1100a169:	(bad)  
1100a16a:	fild   WORD PTR [eax]
1100a16c:	(bad)  
1100a16d:	(bad)  
1100a16e:	inc    DWORD PTR [eax]
1100a170:	add    BYTE PTR [eax],al
1100a172:	add    BYTE PTR [eax],al
1100a174:	add    ch,BYTE PTR [edi]
1100a176:	add    BYTE PTR [eax],al
1100a178:	add    al,0x50
1100a17a:	add    BYTE PTR [eax],al
1100a17c:	push   es
1100a17d:	jo     0x1100a17f
1100a17f:	add    BYTE PTR [eax],cl
1100a181:	nop
1100a182:	add    BYTE PTR [eax],al
1100a184:	or     dh,BYTE PTR [eax-0x30f50000]
1100a18a:	add    BYTE PTR [eax],al
1100a18c:	push   cs
1100a18d:	lock add BYTE PTR [eax],al
1100a190:	and    bh,bh
1100a192:	adc    al,BYTE PTR [eax]
1100a194:	cmp    eax,0x5b0031ff
1100a199:	call   DWORD PTR [ecx+0x0]
1100a19c:	jns    0x1100a19d
1100a19e:	jno    0x1100a1a0
1100a1a0:	cwde   
1100a1a1:	call   DWORD PTR [ecx-0x4e004b00]
1100a1a7:	add    ah,dl
1100a1a9:	call   ecx
1100a1ab:	add    bh,bh
1100a1ad:	(bad)  
1100a1ae:	inc    DWORD PTR [eax]
1100a1b0:	add    BYTE PTR [eax],al
1100a1b2:	add    BYTE PTR [eax],al
1100a1b4:	adc    al,0x2f
1100a1b6:	add    BYTE PTR [eax],al
1100a1b8:	and    dl,BYTE PTR [eax+0x0]
1100a1bb:	add    BYTE PTR [eax],dh
1100a1bd:	jo     0x1100a1bf
1100a1bf:	add    BYTE PTR ds:0x4c000090,bh
1100a1c5:	mov    al,0x0
1100a1c7:	add    BYTE PTR [ecx-0x31],bl
1100a1ca:	add    BYTE PTR [eax],al
1100a1cc:	lock add BYTE PTR [bx+si],al
1100a1d0:	js     0x1100a1d1
1100a1d2:	adc    DWORD PTR [eax],eax
1100a1d4:	mov    bh,bh
1100a1d6:	xor    DWORD PTR [eax],eax
1100a1d8:	pushf  
1100a1d9:	call   DWORD PTR [ecx+0x0]
1100a1dc:	scas   al,BYTE PTR es:[edi]
1100a1dd:	push   DWORD PTR [ecx+0x0]
1100a1e0:	sar    bh,0x91
1100a1e3:	add    dl,dl
1100a1e5:	push   DWORD PTR [ecx-0x2e001c00]
1100a1eb:	add    bh,bh
1100a1ed:	(bad)  
1100a1ee:	inc    DWORD PTR [eax]
1100a1f0:	add    BYTE PTR [eax],al
1100a1f2:	add    BYTE PTR [eax],al
1100a1f4:	es das 
1100a1f6:	add    BYTE PTR [eax],al
1100a1f8:	inc    eax
1100a1f9:	push   eax
1100a1fa:	add    BYTE PTR [eax],al
1100a1fc:	pop    edx
1100a1fd:	jo     0x1100a1ff
1100a1ff:	add    BYTE PTR [eax+edx*4+0x0],dh
1100a203:	add    BYTE PTR [esi-0x56ffff50],cl
1100a209:	iret   
1100a20a:	add    BYTE PTR [eax],al
1100a20c:	ret    0xf0
1100a20f:	add    cl,dl
1100a211:	call   DWORD PTR [ecx]
1100a213:	add    al,bl
1100a215:	push   DWORD PTR [ecx]
1100a217:	add    dh,bl
1100a219:	call   DWORD PTR [ecx+0x0]
1100a21c:	jecxz  0x1100a21d
1100a21e:	jno    0x1100a220
1100a220:	jmp    0x13424
1100a225:	push   DWORD PTR [ecx-0x2e000a00]
1100a22b:	add    bh,bh
1100a22d:	(bad)  
1100a22e:	inc    DWORD PTR [eax]
1100a230:	add    BYTE PTR [eax],al
1100a232:	add    BYTE PTR [eax],al
1100a234:	das    
1100a235:	add    BYTE PTR es:[eax],al
1100a238:	push   eax
1100a239:	inc    ecx
1100a23a:	add    BYTE PTR [eax],al
1100a23c:	jo     0x1100a299
1100a23e:	add    BYTE PTR [eax],al
1100a240:	nop
1100a241:	je     0x1100a243
1100a243:	add    BYTE PTR [eax-0x30ffff72],dh
1100a249:	test   eax,0xc3f00000
1100a24e:	add    BYTE PTR [eax],al
1100a250:	call   edx
1100a252:	adc    DWORD PTR [eax],eax
1100a254:	(bad)  
1100a255:	fdiv   DWORD PTR [ecx]
1100a257:	add    bh,bh
1100a259:	fst    QWORD PTR [ecx+0x0]
1100a25c:	jmp    esp
1100a25e:	jno    0x1100a260
1100a260:	(bad)  
1100a261:	jmp    0xb1:0xf0ff0091
1100a268:	push   esi
1100a26a:	rol    DWORD PTR [eax],1
1100a26c:	(bad)  
1100a26d:	(bad)  
1100a26e:	inc    DWORD PTR [eax]
1100a270:	add    BYTE PTR [eax],al
1100a272:	add    BYTE PTR [eax],al
1100a274:	das    
1100a275:	adc    al,0x0
1100a277:	add    BYTE PTR [eax+0x22],dl
1100a27a:	add    BYTE PTR [eax],al
1100a27c:	jo     0x1100a2ae
1100a27e:	add    BYTE PTR [eax],al
1100a280:	nop
1100a281:	add    BYTE PTR ds:[eax],al
1100a284:	mov    al,0x4d
1100a286:	add    BYTE PTR [eax],al
1100a288:	iret   
1100a289:	pop    ebx
1100a28a:	add    BYTE PTR [eax],al
1100a28c:	lock imul eax,DWORD PTR [eax],0x1179ff00
1100a293:	add    bh,bh
1100a295:	mov    dh,BYTE PTR [ecx]
1100a297:	add    bh,bh
1100a299:	popf   
1100a29a:	push   ecx
1100a29b:	add    bh,bh
1100a29d:	scas   eax,DWORD PTR es:[edi]
1100a29e:	jno    0x1100a2a0
1100a2a0:	inc    ecx
1100a2a2:	xchg   ecx,eax
1100a2a3:	add    bh,bh
1100a2a5:	shl    BYTE PTR [ecx-0x2e1a0100],cl
1100a2ab:	add    bh,bh
1100a2ad:	(bad)  
1100a2ae:	inc    DWORD PTR [eax]
1100a2b0:	add    BYTE PTR [eax],al
1100a2b2:	add    BYTE PTR [eax],al
1100a2b4:	das    
1100a2b5:	add    eax,DWORD PTR [eax]
1100a2b7:	add    BYTE PTR [eax+0x4],dl
1100a2ba:	add    BYTE PTR [eax],al
1100a2bc:	jo     0x1100a2c4
1100a2be:	add    BYTE PTR [eax],al
1100a2c0:	nop
1100a2c1:	or     DWORD PTR [eax],eax
1100a2c3:	add    BYTE PTR [eax-0x30fffff6],dh
1100a2c9:	or     al,0x0
1100a2cb:	add    al,dh
1100a2cd:	push   cs
1100a2ce:	add    BYTE PTR [eax],al
1100a2d0:	jmp    DWORD PTR [eax]
1100a2d2:	adc    al,BYTE PTR [eax]
1100a2d4:	(bad)  
1100a2d5:	xor    DWORD PTR ds:[eax],eax
1100a2d8:	call   FWORD PTR [ecx+edx*2+0x0]
1100a2dc:	(bad)  
1100a2dd:	jp     0x1100a350
1100a2df:	add    bh,bh
1100a2e1:	xchg   edi,eax
1100a2e2:	xchg   ecx,eax
1100a2e3:	add    bh,bh
1100a2e5:	mov    dh,0xb1
1100a2e7:	add    bh,bh
1100a2e9:	aam    0xd1
1100a2eb:	add    bh,bh
1100a2ed:	(bad)  
1100a2ee:	inc    DWORD PTR [eax]
1100a2f0:	add    BYTE PTR [eax],al
1100a2f2:	add    BYTE PTR [eax],al
1100a2f4:	das    
1100a2f5:	add    BYTE PTR [esi],cl
1100a2f7:	add    BYTE PTR [eax+0x0],dl
1100a2fa:	pop    ss
1100a2fb:	add    BYTE PTR [eax+0x0],dh
1100a2fe:	and    DWORD PTR [eax],eax
1100a300:	nop
1100a301:	add    BYTE PTR [ebx],ch
1100a303:	add    BYTE PTR [eax-0x30ffca00],dh
1100a309:	add    BYTE PTR [eax+0x0],al
1100a30c:	lock add BYTE PTR [ecx+0x0],cl
1100a310:	call   DWORD PTR [ecx]
1100a312:	pop    edx
1100a313:	add    bh,bh
1100a315:	xor    DWORD PTR [eax+0x0],esi
1100a318:	call   DWORD PTR [ecx-0x7a]
1100a31b:	add    bh,bh
1100a31d:	jno    0x1100a2bb
1100a31f:	add    bh,bh
1100a321:	xchg   ecx,eax
1100a322:	mov    dl,0x0
1100a324:	push   DWORD PTR [ecx-0x2e00ff38]
1100a32a:	fild   WORD PTR [eax]
1100a32c:	(bad)  
1100a32d:	(bad)  
1100a32e:	inc    DWORD PTR [eax]
1100a330:	add    BYTE PTR [eax],al
1100a332:	add    BYTE PTR [eax],al
1100a334:	das    
1100a335:	add    BYTE PTR [eax],ah
1100a337:	add    BYTE PTR [eax+0x0],dl
1100a33a:	add    BYTE PTR ss:[eax+0x0],dh
1100a33e:	dec    esp
1100a33f:	add    BYTE PTR [eax-0x4fff9e00],dl
1100a345:	add    BYTE PTR [eax+0x0],bh
1100a348:	iret   
1100a349:	add    BYTE PTR [esi-0x5bff1000],cl
1100a34f:	add    bh,bh
1100a351:	adc    DWORD PTR [ebx-0x41ce0100],esi
1100a357:	add    bh,bh
1100a359:	push   ecx
1100a35a:	mov    DWORD PTR [eax],0xd171ff
1100a360:	call   DWORD PTR [ecx-0x4e00ff24]
1100a366:	in     eax,0x0
1100a368:	call   ecx
1100a36a:	lock add bh,bh
1100a36d:	(bad)  
1100a36e:	inc    DWORD PTR [eax]
1100a370:	add    BYTE PTR [eax],al
1100a372:	add    BYTE PTR [eax],al
1100a374:	sub    al,0x0
1100a376:	das    
1100a377:	add    BYTE PTR [ebx+0x0],cl
1100a37a:	push   eax
1100a37b:	add    BYTE PTR [ecx+0x0],ch
1100a37e:	jo     0x1100a380
1100a380:	xchg   DWORD PTR [eax],eax
1100a382:	nop
1100a383:	add    BYTE PTR [ebp-0x3bff5000],ah
1100a389:	add    bh,cl
1100a38b:	add    cl,ah
1100a38d:	add    al,dh
1100a38f:	add    al,dh
1100a391:	adc    edi,edi
1100a393:	add    dl,dh
1100a395:	xor    edi,edi
1100a397:	add    ah,dh
1100a399:	push   ecx
1100a39a:	inc    DWORD PTR [eax]
1100a39c:	div    BYTE PTR [ecx-0x1]
1100a39f:	add    bh,dh
1100a3a1:	xchg   ecx,eax
1100a3a2:	inc    DWORD PTR [eax]
1100a3a4:	stc    
1100a3a5:	mov    cl,0xff
1100a3a7:	add    bl,bh
1100a3a9:	sar    edi,1
1100a3ab:	add    bh,bh
1100a3ad:	(bad)  
1100a3ae:	inc    DWORD PTR [eax]
1100a3b0:	add    BYTE PTR [eax],al
1100a3b2:	add    BYTE PTR [eax],al
1100a3b4:	sbb    eax,DWORD PTR [eax]
1100a3b6:	das    
1100a3b7:	add    BYTE PTR ds:0x3f005000,ch
1100a3bd:	add    BYTE PTR [eax+0x0],dh
1100a3c0:	push   edx
1100a3c1:	add    BYTE PTR [eax-0x4fff9d00],dl
1100a3c7:	add    BYTE PTR [esi+0x0],dh
1100a3ca:	iret   
1100a3cb:	add    BYTE PTR [eax-0x66ff1000],cl
1100a3d1:	adc    edi,edi
1100a3d3:	add    BYTE PTR [esi-0x4bff00cf],ah
1100a3d9:	push   ecx
1100a3da:	inc    DWORD PTR [eax]
1100a3dc:	ret    0xff71
1100a3df:	add    bh,cl
1100a3e1:	xchg   ecx,eax
1100a3e2:	inc    DWORD PTR [eax]
1100a3e4:	fdiv   QWORD PTR [ecx-0x2e14ff01]
1100a3ea:	inc    DWORD PTR [eax]
1100a3ec:	(bad)  
1100a3ed:	(bad)  
1100a3ee:	inc    DWORD PTR [eax]
1100a3f0:	add    BYTE PTR [eax],al
1100a3f2:	add    BYTE PTR [eax],al
1100a3f4:	or     BYTE PTR [eax],al
1100a3f6:	das    
1100a3f7:	add    BYTE PTR [esi],cl
1100a3f9:	add    BYTE PTR [eax+0x0],dl
1100a3fc:	adc    eax,0x1b007000
1100a401:	add    BYTE PTR [eax-0x4fffdf00],dl
1100a407:	add    BYTE PTR [esi],ah
1100a409:	add    bh,cl
1100a40b:	add    BYTE PTR [eax+eax*1],ch
1100a40e:	lock add BYTE PTR [esi],bh
1100a411:	adc    edi,edi
1100a413:	add    BYTE PTR [eax+0x31],bl
1100a416:	inc    DWORD PTR [eax]
1100a418:	jno    0x1100a46b
1100a41a:	inc    DWORD PTR [eax]
1100a41c:	mov    WORD PTR [ecx-0x1],?
1100a41f:	add    BYTE PTR [esi-0x40ff006f],ah
1100a425:	mov    cl,0xff
1100a427:	add    dl,bl
1100a429:	sar    edi,1
1100a42b:	add    bh,bh
1100a42d:	(bad)  
1100a42e:	inc    DWORD PTR [eax]
1100a430:	add    BYTE PTR [eax],al
1100a432:	add    BYTE PTR [eax],al
1100a434:	add    BYTE PTR [eax],al
1100a436:	add    BYTE PTR [edi],dl
1100a438:	pop    ss
	...
1100a445:	add    BYTE PTR [edi],dl
1100a447:	pop    ss
1100a448:	pop    ss
1100a449:	pop    ss
	...
1100a452:	add    al,BYTE PTR [ebx]
1100a454:	add    eax,DWORD PTR [ecx]
1100a456:	pop    ss
1100a457:	and    al,0x24
1100a459:	pop    ss
1100a45a:	add    DWORD PTR [ebx],eax
1100a45c:	add    eax,DWORD PTR [edx]
1100a45e:	add    BYTE PTR [eax],al
1100a460:	add    BYTE PTR [eax],al
1100a462:	add    edx,DWORD PTR [eax]
1100a464:	add    eax,0x24242417
1100a469:	and    al,0x17
1100a46b:	add    eax,0x310
1100a470:	add    BYTE PTR [eax],al
1100a472:	add    eax,DWORD PTR ds:0xb182217
1100a478:	or     BYTE PTR [ecx],dl
1100a47a:	and    DWORD PTR [edi],edx
1100a47c:	add    eax,0x3
1100a481:	add    BYTE PTR [ecx],al
1100a483:	pop    ss
1100a484:	and    dl,BYTE PTR [ebx]
1100a486:	or     eax,0x607090c
1100a48b:	and    DWORD PTR [edi],edx
1100a48d:	add    DWORD PTR [eax],eax
1100a48f:	add    BYTE PTR [eax],al
1100a491:	pop    ss
1100a492:	pop    ss
1100a493:	and    al,0x1b
1100a495:	adc    edx,DWORD PTR [edx]
1100a497:	(bad)  
1100a499:	or     al,BYTE PTR [edi]
1100a49b:	adc    DWORD PTR [edi+edx*1],esp
1100a49e:	pop    ss
1100a49f:	add    BYTE PTR [edi],dl
1100a4a1:	pop    ss
1100a4a2:	and    al,0x24
1100a4a4:	adc    eax,0xf141616
1100a4a9:	or     al,0xa
1100a4ab:	or     BYTE PTR [esp],ah
1100a4ae:	pop    ss
1100a4af:	pop    ss
1100a4b0:	pop    ss
1100a4b1:	pop    ss
1100a4b2:	and    al,0x24
1100a4b4:	sbb    bl,BYTE PTR ds:0xe14191c
1100a4ba:	or     al,0xb
1100a4bc:	and    al,0x24
1100a4be:	pop    ss
1100a4bf:	pop    ss
1100a4c0:	add    BYTE PTR [edi],dl
1100a4c2:	pop    ss
1100a4c3:	and    al,0x1e
1100a4c5:	and    BYTE PTR [edi],bl
1100a4c7:	sbb    eax,0x180d1216
1100a4cc:	and    al,0x17
1100a4ce:	pop    ss
1100a4cf:	add    BYTE PTR [eax],al
1100a4d1:	add    BYTE PTR [ecx],al
1100a4d3:	pop    ss
1100a4d4:	and    esp,DWORD PTR [eax]
1100a4d6:	and    BYTE PTR ds:0x22131316,bl
1100a4dc:	pop    ss
1100a4dd:	add    DWORD PTR [eax],eax
1100a4df:	add    BYTE PTR [eax],al
1100a4e1:	add    BYTE PTR [ebx],al
1100a4e3:	add    al,0x17
1100a4e5:	and    ebx,DWORD PTR [esi]
1100a4e7:	sbb    dl,BYTE PTR ds:0x517221b
1100a4ed:	add    eax,DWORD PTR [eax]
1100a4ef:	add    BYTE PTR [eax],al
1100a4f1:	add    BYTE PTR [ebx],al
1100a4f3:	adc    BYTE PTR [edi+edx*1],al
1100a4f6:	and    al,0x24
1100a4f8:	and    al,0x24
1100a4fa:	pop    ss
1100a4fb:	add    eax,0x310
1100a500:	add    BYTE PTR [eax],al
1100a502:	add    al,BYTE PTR [ebx]
1100a504:	add    eax,DWORD PTR [ecx]
1100a506:	pop    ss
1100a507:	and    al,0x24
1100a509:	pop    ss
1100a50a:	add    DWORD PTR [ebx],eax
1100a50c:	add    eax,DWORD PTR [edx]
	...
1100a516:	pop    ss
1100a517:	pop    ss
1100a518:	pop    ss
1100a519:	pop    ss
	...
1100a526:	add    BYTE PTR [edi],dl
1100a528:	pop    ss
1100a529:	add    BYTE PTR [eax],al
1100a52b:	add    BYTE PTR [eax],al
1100a52d:	add    BYTE PTR [eax],al
1100a52f:	add    dh,bh
1100a531:	jg     0x1100a533
1100a533:	add    ah,bh
1100a535:	aas    
1100a536:	add    BYTE PTR [eax],al
1100a538:	rol    BYTE PTR [ebx],0x0
1100a53b:	add    al,al
1100a53d:	add    eax,DWORD PTR [eax]
1100a53f:	add    al,al
1100a541:	add    eax,DWORD PTR [eax]
1100a543:	add    al,al
1100a545:	add    eax,DWORD PTR [eax]
1100a547:	add    BYTE PTR [eax+0x1],al
1100a54d:	add    BYTE PTR [eax],al
1100a54f:	add    BYTE PTR [eax],al
1100a551:	add    BYTE PTR [eax],al
1100a553:	add    BYTE PTR [eax-0x3fffffff],al
1100a559:	add    eax,DWORD PTR [eax]
1100a55b:	add    al,al
1100a55d:	add    eax,DWORD PTR [eax]
1100a55f:	add    al,al
1100a561:	add    eax,DWORD PTR [eax]
1100a563:	add    al,al
1100a565:	add    eax,DWORD PTR [eax]
1100a567:	add    ah,bh
1100a569:	aas    
1100a56a:	add    BYTE PTR [eax],al
1100a56c:	(bad)  
1100a56d:	jg     0x1100a56f
1100a56f:	add    BYTE PTR [ecx+0xd474e50],cl
1100a575:	or     bl,BYTE PTR [edx]
1100a577:	or     al,BYTE PTR [eax]
1100a579:	add    BYTE PTR [eax],al
1100a57b:	or     eax,0x52444849
1100a580:	add    BYTE PTR [eax],al
1100a582:	add    DWORD PTR [eax],eax
1100a584:	add    BYTE PTR [eax],al
1100a586:	add    DWORD PTR [eax],eax
1100a588:	or     BYTE PTR [esi],al
1100a58a:	add    BYTE PTR [eax],al
1100a58c:	add    BYTE PTR [edx+esi*2-0x58],bl
1100a590:	data16 add BYTE PTR [eax],al
1100a593:	(bad)  
1100a594:	std    
1100a595:	dec    ecx
1100a596:	inc    esp
1100a597:	inc    ecx
1100a598:	push   esp
1100a599:	js     0x1100a575
1100a59b:	in     al,dx
1100a59c:	mov    ebp,0x456d9809
1100a5a1:	jne    0x1100a5d2
1100a5a3:	mov    esi,0x1df774ea
1100a5a8:	add    DWORD PTR [ebp+0x56],esp
1100a5ab:	data16 mov WORD PTR [ebx],?
1100a5ae:	sub    ah,BYTE PTR [eax-0x31f421e9]
1100a5b4:	push   0xa22fe6a2
1100a5b9:	test   al,0x51
1100a5bb:	sbb    DWORD PTR [ebp-0x1da1a077],ecx
1100a5c1:	dec    ebx
1100a5c2:	loop   0x1100a550
1100a5c4:	push   ebx
1100a5c5:	adc    al,0x4d
1100a5c7:	mov    ds:0x997c19a8,al
1100a5cc:	adc    esi,DWORD PTR [ebx]
1100a5ce:	test   al,0x8
1100a5d0:	mov    cl,ah
1100a5d2:	test   BYTE PTR [eax+0x53894146],cl
1100a5d8:	inc    esp
1100a5d9:	inc    esp
1100a5da:	push   es
1100a5db:	xchg   ebp,eax
1100a5dc:	sbb    DWORD PTR [edi+0x41],esp
1100a5df:	adc    al,0x11
1100a5e1:	das    
1100a5e2:	jo     0x1100a56b
1100a5e4:	out    dx,al
1100a5e5:	mov    bl,0xeb
1100a5e7:	mov    edi,0xb54d6aab
1100a5ec:	jbe    0x1100a5db
1100a5ee:	loope  0x1100a664
1100a5f0:	imul   ebp
1100a5f2:	jnp    0x1100a5a3
1100a5f4:	jbe    0x1100a673
1100a5f6:	fucomip st,st(6)
1100a5f8:	jae    0x1100a674
1100a5fa:	lahf   
1100a5fb:	cmp    eax,0x5abf5aef
1100a600:	jmp    0x1100a5b9
1100a602:	xchg   BYTE PTR [edx-0x50],dh
1100a605:	fdivr  QWORD PTR [esi+0x11]
1100a608:	call   0x8ea3:0x9f8f4fc3
1100a60f:	ins    DWORD PTR es:[edi],dx
1100a610:	fcmovbe st,st(6)
1100a612:	jns    0x1100a5c9
1100a614:	scas   al,BYTE PTR es:[edi]
1100a615:	xor    bl,bl
1100a617:	jns    0x1100a60e
1100a619:	jmp    0x7eff4df2
1100a61e:	mov    ecx,0x2dcd876d
1100a623:	cld    
1100a624:	adc    bl,cl
1100a626:	ins    DWORD PTR es:[edi],dx
1100a627:	sub    esi,DWORD PTR [edi]
1100a629:	sub    eax,0xb3acce88
1100a62e:	lahf   
1100a62f:	pop    ebp
1100a630:	sti    
1100a631:	xchg   ebp,eax
1100a632:	add    al,0xd9
1100a634:	pop    ss
1100a635:	ds dec ebx
1100a637:	fld    TBYTE PTR [esi]
1100a639:	add    eax,0x76
1100a63c:	ficom  DWORD PTR [esi+0x6efb6001]
1100a642:	jp     0x1100a678
1100a644:	jbe    0x1100a6ac
1100a646:	mov    ebp,0xad25b77d
1100a64b:	loopne 0x1100a6c4
1100a64d:	jmp    0xca08:0x7cbd5365
1100a654:	fiadd  DWORD PTR [eax-0x52b513ea]
1100a65a:	pop    ebx
1100a65b:	push   es
1100a65c:	sbb    DWORD PTR [edi-0x70],0xdb000cb6
1100a663:	addr16 mov bl,0xa3
1100a666:	mov    bh,0x7e
1100a668:	(bad)  
1100a669:	and    esi,DWORD PTR [ebx+0xf7c2b9d]
1100a66f:	sub    eax,0xd79fff08
1100a674:	retf   
1100a675:	out    0x7a,al
1100a677:	jns    0x1100a6ae
1100a679:	and    al,0x10
1100a67b:	sbb    BYTE PTR [ecx-0xb9691d],ch
1100a681:	mov    dh,0x75
1100a683:	retf   
1100a684:	out    0xc0,al
1100a686:	jbe    0x1100a662
1100a688:	xchg   esi,eax
1100a689:	add    DWORD PTR [eax-0x5],esp
1100a68c:	imul   ebx,DWORD PTR [edx-0x28],0x46
1100a690:	nop
1100a691:	add    DWORD PTR [eax+0x75b6f615],0x2f
1100a698:	stos   DWORD PTR es:[edi],eax
1100a699:	xchg   edi,eax
1100a69a:	not    esp
1100a69c:	retf   
1100a69d:	dec    edx
1100a69e:	cld    
1100a69f:	in     eax,dx
1100a6a0:	sahf   
1100a6a1:	jp     0x1100a71c
1100a6a3:	jge    0x1100a662
1100a6a5:	jl     0x1100a6b7
1100a6a7:	fs je  0x1100a719
1100a6aa:	adc    edi,DWORD PTR [edi+ebp*2-0x2a]
1100a6ae:	jmp    0xd5a714a8
1100a6b3:	jb     0x1100a690
1100a6b5:	inc    esi
1100a6b6:	(bad)  [edx]
1100a6b8:	add    BYTE PTR [edi+ebx*2-0x33],ch
1100a6bc:	or     bh,BYTE PTR [edi+0x2c06e75e]
1100a6c2:	popa   
1100a6c3:	lahf   
1100a6c4:	adc    esp,DWORD PTR [ecx]
1100a6c6:	(bad)  
1100a6c7:	cld    
1100a6c8:	sub    edx,esp
1100a6ca:	jle    0x1100a6ad
1100a6cc:	js     0x1100a6b9
1100a6ce:	jmp    0x1100a6b5
1100a6d0:	dec    ebp
1100a6d1:	cmc    
1100a6d2:	repnz out dx,eax
1100a6d4:	and    al,al
1100a6d6:	xor    dh,BYTE PTR [ecx+esi*2-0x50]
1100a6da:	or     al,0x2
1100a6dc:	(bad)  [ebp+0x5b]
1100a6df:	push   es
1100a6e0:	sub    ch,0xa7
1100a6e3:	mov    ch,0x9
1100a6e5:	aas    
1100a6e6:	lods   eax,DWORD PTR ds:[esi]
1100a6e7:	pop    ds
1100a6e8:	test   eax,0xfaf02d4f
1100a6ed:	sti    
1100a6ee:	icebp  
1100a6ef:	cmc    
1100a6f0:	repnz pop ss
1100a6f2:	cmc    
1100a6f3:	xor    dl,bl
1100a6f5:	jb     0x1100a6d3
1100a6f7:	add    BYTE PTR [edx],al
1100a6f9:	outs   dx,DWORD PTR ds:[esi]
1100a6fa:	xchg   BYTE PTR [esi+0x53415026],ah
1100a700:	call   0x2fd0ba8e
1100a705:	and    DWORD PTR [ebp+0x10],0xffffffd8
1100a709:	into   
1100a70a:	fidiv  DWORD PTR [edx]
1100a70c:	add    BYTE PTR [edi+ebx*1-0x53],ch
1100a710:	inc    esp
1100a711:	div    BYTE PTR [ebp-0x3eda0f73]
1100a717:	bswap  ebx
1100a719:	or     ebp,esi
1100a71b:	repnz fidivr WORD PTR [edx-0x67]
1100a71f:	out    dx,al
1100a720:	cmp    DWORD PTR [edi+0x30],edx
1100a723:	pop    es
1100a724:	and    BYTE PTR [esi],0xf0
1100a727:	popa   
1100a728:	cld    
1100a729:	pop    edi
1100a72a:	or     edi,DWORD PTR [edi+0x5]
1100a72d:	gs inc eax
1100a72f:	pop    eax
1100a730:	push   es
1100a731:	sub    ebp,0xc0032db4
1100a737:	mov    dh,0xdf
1100a739:	mov    edx,0xda34bf84
1100a73e:	jmp    0x1100a78f
1100a740:	pop    edx
1100a741:	dec    esi
1100a742:	stos   BYTE PTR es:[edi],al
1100a743:	xchg   edi,eax
1100a744:	ja     0x1100a6c8
1100a746:	mov    esp,?
1100a748:	jge    0x1100a778
1100a74a:	sar    BYTE PTR [ebx-0x15],0xe5
1100a74e:	(bad)  
1100a74f:	cmc    
1100a750:	jb     0x1100a758
1100a752:	(bad)  
1100a753:	pop    edi
1100a754:	test   eax,0x9431b425
1100a759:	add    DWORD PTR [eax],0x2c1a6ca0
1100a75f:	mov    bh,0x6d
1100a761:	mov    ah,0x2d
1100a763:	add    eax,eax
1100a765:	mov    dh,0xdd
1100a767:	dec    edx
1100a768:	ret    0xa6df
1100a76b:	jmp    0x4ff:0xf8412db7
1100a772:	(bad)  
1100a773:	out    0xd7,al
1100a775:	(bad)  
1100a776:	in     eax,dx
1100a777:	push   0x1
1100a779:	add    al,0x82
1100a77b:	cmp    DWORD PTR [eax+0x2],edx
1100a77e:	add    DWORD PTR [ebp+0x58002058],edi
1100a784:	push   es
1100a785:	sub    ebp,0xc0032da6
1100a78b:	mov    dh,0xdb
1100a78d:	mov    edx,0xe84bbf84
1100a792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100a793:	aam    0x67
1100a795:	push   eax
1100a796:	sti    
1100a797:	fild   WORD PTR [ecx]
1100a799:	mov    ecx,0x82d24ff0
1100a79e:	cmp    DWORD PTR [eax+0xa],esi
1100a7a1:	in     al,0xe6
1100a7a3:	rcr    BYTE PTR [eax],0x44
1100a7a6:	clc    
1100a7a7:	dec    ebx
1100a7a8:	call   0x8106:0x58178e80
1100a7af:	ins    DWORD PTR es:[edi],dx
1100a7b0:	mov    esp,0xb6c0032d
1100a7b5:	fldenv [esi]
1100a7b7:	adc    eax,0x7df529fe
1100a7bc:	sbb    bh,bh
1100a7be:	aas    
1100a7bf:	push   cs
1100a7c0:	ror    al,cl
1100a7c2:	aas    
1100a7c3:	xor    edi,eax
1100a7c5:	lods   al,BYTE PTR ds:[esi]
1100a7c6:	in     eax,0x76
1100a7c8:	nop    edi
1100a7cb:	xor    al,0xfc
1100a7cd:	jg     0x1100a7dd
1100a7cf:	jb     0x1100a7d1
1100a7d1:	mov    al,0xda
1100a7d3:	shl    BYTE PTR [edx],0x8
1100a7d6:	ins    BYTE PTR es:[edi],dx
1100a7d7:	inc    edi
1100a7d8:	ins    DWORD PTR es:[edi],dx
1100a7d9:	sbb    DWORD PTR [eax],eax
1100a7db:	mov    dh,0xbd
1100a7dd:	(bad)  
1100a7de:	es cld 
1100a7e0:	push   esi
1100a7e1:	fisttp QWORD PTR [edi]
1100a7e3:	fild   QWORD PTR [ebp+0x20cf87e0]
1100a7e9:	lock das 
1100a7eb:	scas   al,BYTE PTR es:[edi]
1100a7ec:	xchg   edi,eax
1100a7ed:	aas    
1100a7ee:	cmp    DWORD PTR [esi-0x3e],0x6f
1100a7f2:	push   0x3410200b
1100a7f7:	mov    DWORD PTR [ebx],esi
1100a7f9:	lock fiadd DWORD PTR [edx-0x3f7f6820]
1100a800:	adc    al,BYTE PTR [ebp-0x4fdf3500]
1100a806:	dec    ebp
1100a807:	mov    bh,0x65
1100a809:	add    al,bl
1100a80b:	mov    dh,0xda
1100a80d:	push   eax
1100a80e:	loope  0x1100a83f
1100a810:	test   eax,0x1cb8d3fb
1100a815:	or     ecx,DWORD PTR [ecx+0x58]
1100a818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100a819:	jnp    0x1100a7e9
1100a81b:	add    eax,DWORD PTR [edi]
1100a81d:	pop    ds
1100a81e:	jl     0x1100a7d0
1100a820:	lahf   
1100a821:	call   0xa579:0x5e57729a
1100a828:	out    dx,eax
1100a829:	fnstenv [esi]
1100a82b:	cld    
1100a82c:	push   ds
1100a82d:	cmp    BYTE PTR [ecx+0x47cbd7b7],al
1100a833:	and    DWORD PTR [ecx],ecx
1100a835:	ja     0x1100a837
1100a837:	add    BYTE PTR [edx],dl
1100a839:	cld    
1100a83a:	xor    esp,esp
1100a83c:	out    0xc0,al
1100a83e:	xor    cl,BYTE PTR [eax]
1100a840:	ins    BYTE PTR es:[edi],dx
1100a841:	daa    
1100a842:	ins    DWORD PTR es:[edi],dx
1100a843:	sbb    DWORD PTR [eax],eax
1100a845:	mov    dh,0x9d
1100a847:	ss inc esp
1100a849:	clc    
1100a84a:	cmc    
1100a84b:	test   al,0x3f
1100a84d:	gs xchg esi,eax
1100a84f:	xor    dl,dh
1100a851:	pop    es
1100a852:	mov    ch,0xff
1100a854:	ins    DWORD PTR es:[edi],dx
1100a855:	clc    
1100a856:	mov    ebp,0xb1e2d04d
1100a85b:	pop    ds
1100a85c:	sti    
1100a85d:	fadd   st,st(7)
1100a85f:	cli    
1100a860:	or     ebp,DWORD PTR [esi]
1100a862:	mov    eax,0xf7bdee00
1100a867:	pop    esi
1100a868:	ja     0x1100a84c
1100a86a:	mov    DWORD PTR [edi],esp
1100a86c:	cli    
1100a86d:	retf   
1100a86e:	das    
1100a86f:	mov    edi,0xbaebbc
1100a874:	(bad)  
1100a875:	jne    0x1100a896
1100a877:	push   ds
1100a878:	jmp    DWORD PTR [ebx-0x70]
1100a87b:	add    DWORD PTR [eax],0x2d
1100a87e:	ins    DWORD PTR es:[edi],dx
1100a87f:	add    al,0x21
1100a881:	in     eax,dx
1100a882:	mov    edi,0x58db020c
1100a887:	pop    ebx
1100a888:	push   es
1100a889:	sub    BYTE PTR [ebp-0x5d],0x4d
1100a88d:	xor    dh,dl
1100a88f:	xchg   ebx,eax
1100a890:	shr    BYTE PTR [ebx+0x7b],0x3f
1100a894:	or     BYTE PTR [eax+ecx*1-0xe],bh
1100a898:	jns    0x1100a8a5
1100a89a:	or     al,0x20
1100a89c:	cld    
1100a89d:	push   0xffffffe1
1100a89f:	ja     0x1100a8e2
1100a8a1:	clc    
1100a8a2:	neg    ecx
1100a8a4:	addr16 pop ds
1100a8a6:	pop    edi
1100a8a7:	aaa    
1100a8a8:	mov    eax,0xe11bc6f1
1100a8ad:	test   BYTE PTR [ebx],dl
1100a8af:	dec    esi
1100a8b0:	sub    BYTE PTR [edi+0x7d2be57c],0xd7
1100a8b7:	inc    esi
1100a8b8:	and    BYTE PTR [eax],dl
1100a8ba:	xor    al,0x81
1100a8bc:	xor    eax,DWORD PTR [ecx+0x4]
1100a8bf:	fild   QWORD PTR [edx+0x3]
1100a8c2:	retf   
1100a8c3:	and    BYTE PTR [eax+0x65b49d],dh
1100a8c9:	fdivr  st,st(2)
1100a8cb:	ins    DWORD PTR es:[edi],dx
1100a8cc:	and    edx,eax
1100a8ce:	pop    ds
1100a8cf:	push   ss
1100a8d0:	sbb    bh,cl
1100a8d2:	pop    es
1100a8d3:	or     edi,edi
1100a8d5:	jecxz  0x1100a8f5
1100a8d7:	idiv   DWORD PTR [eax]
1100a8d9:	cmp    bh,ch
1100a8db:	mov    esp,0xfbbedcf3
1100a8e0:	out    dx,al
1100a8e1:	retf   
1100a8e2:	ret    0x4017
1100a8e5:	loopne 0x1100a88d
1100a8e7:	fwait
1100a8e8:	outs   dx,BYTE PTR ds:[esi]
1100a8e9:	and    bl,0x8e
1100a8ec:	cmp    ecx,DWORD PTR [esi]
1100a8ee:	scas   al,BYTE PTR es:[edi]
1100a8ef:	mov    eax,0xd7218ae2
1100a8f4:	sbb    al,0xcc
1100a8f6:	add    eax,0x804e0431
1100a8fc:	xor    al,0x1
1100a8fe:	loop   0x1100a904
1100a900:	dec    edx
1100a901:	fcmovb st,st(0)
1100a903:	xor    cl,BYTE PTR [eax]
1100a905:	ins    BYTE PTR es:[edi],dx
1100a906:	mov    ds:0xb600196d,eax
1100a90b:	outs   dx,BYTE PTR ds:[esi]
1100a90c:	fwait
1100a90d:	(bad)  
1100a90e:	lock rcl DWORD PTR [edx],cl
1100a911:	test   BYTE PTR [edi],bh
1100a913:	or     BYTE PTR [eax+eiz*1-0x4],bh
1100a917:	dec    esi
1100a918:	add    DWORD PTR [ecx],0x8761df84
1100a91e:	sbb    eax,0x739ce706
1100a923:	push   cs
1100a924:	aam    0xc2
1100a926:	pop    edi
1100a927:	cld    
1100a928:	cmp    eax,0xc7b1c080
1100a92d:	push   ds
1100a92e:	cmp    edx,DWORD PTR [esp+eax*1]
1100a931:	add    dh,BYTE PTR [ecx]
1100a933:	js     0x1100a99f
1100a935:	mov    ebp,0x16b90e9c
1100a93a:	shl    BYTE PTR [esi+0x12],1
1100a93d:	sub    al,0x83
1100a93f:	shl    BYTE PTR [esi],0xd8
1100a942:	xchg   esi,eax
1100a943:	add    DWORD PTR [eax-0x15],esp
1100a946:	mov    ch,0xf9
1100a948:	or     bh,BYTE PTR [edi]
1100a94a:	test   eax,0xff0b13fd
1100a94f:	fldenv [edi-0x61]
1100a952:	sbb    eax,0xf6b9df85
1100a957:	xlat   BYTE PTR ds:[ebx]
1100a958:	push   ds
1100a959:	int3   
1100a95a:	and    ebx,0xcdbe3f8f
1100a960:	sbb    al,0xb0
1100a962:	sub    eax,0x30884080
1100a967:	cld    
1100a968:	or     ah,ah
1100a96a:	call   0x6d27:0x6c0832c0
1100a971:	sbb    DWORD PTR [eax],eax
1100a973:	mov    dh,0x4e
1100a975:	sub    edx,DWORD PTR [ebp-0x14]
1100a978:	imul   ecx,DWORD PTR [ebx-0x507d281f],0xd497fed5
1100a982:	retf   
1100a983:	pop    ebx
1100a984:	popa   
1100a985:	xor    al,0xa3
1100a988:	ficomp DWORD PTR [edi]
1100a98a:	test   DWORD PTR [edi],edi
1100a98c:	test   al,0xfb
1100a98e:	xor    eax,0x19f0b800
1100a993:	dec    edi
1100a994:	pop    esp
1100a995:	jg     0x1100a94c
1100a997:	fcmovnu st,st(7)
1100a999:	jo     0x1100a95e
1100a99b:	or     eax,0x2789e270
1100a9a0:	and    BYTE PTR [ecx],0x6
1100a9a3:	ins    DWORD PTR es:[edi],dx
1100a9a4:	rcl    DWORD PTR [eax],0xed
1100a9a7:	sbb    eax,0xc44853f8
1100a9ac:	and    BYTE PTR [ecx+0x2],ch
1100a9af:	pop    ebp
1100a9b0:	es inc ecx
1100a9b2:	sub    DWORD PTR [ebp+0x2f16a6d8],esp
1100a9b8:	mov    bh,0x25
1100a9ba:	push   0xffffffdb
1100a9bc:	or     eax,DWORD PTR [eax]
1100a9be:	ins    BYTE PTR es:[edi],dx
1100a9bf:	das    
1100a9c0:	xlat   BYTE PTR ds:[ebx]
1100a9c1:	cmp    ecx,ebp
1100a9c3:	mov    ebp,0x94f32574
1100a9c8:	inc    esi
1100a9c9:	jle    0x1100aa38
1100a9cb:	repz mov edi,0xbfb67219
1100a9d1:	xor    al,0x8a
1100a9d3:	mov    edx,0x7f9ff6c0
1100a9d8:	(bad)  
1100a9d9:	stc    
1100a9da:	sub    al,0xfc
1100a9dc:	adc    BYTE PTR [ebp-0x22],ah
1100a9df:	shl    DWORD PTR [edi+0xf],1
1100a9e2:	int    0x67
1100a9e4:	sbb    edi,DWORD PTR [edi+0x8]
1100a9e7:	call   0xd636:0xd2810280
1100a9ee:	cmp    edx,DWORD PTR [eax]
1100a9f0:	add    BYTE PTR [ebp+0x6b2c082c],0x2
1100a9f7:	or     ebp,DWORD PTR [ebx+0x5b]
1100a9fa:	cld    
1100a9fb:	pop    ecx
1100a9fc:	ins    BYTE PTR es:[edi],dx
1100a9fd:	mov    eax,DWORD PTR [edx-0x49651bcb]
1100aa03:	(bad)
1100aa06:	jp     0x1100aa77
1100aa08:	repz push ebp
1100aa0a:	sti    
1100aa0b:	dec    ecx
1100aa0c:	clc    
1100aa0d:	sbb    DWORD PTR [edi+0xdeb643f],0x61
1100aa14:	sti    
1100aa15:	add    ecx,ebx
1100aa17:	(bad)  
1100aa18:	and    al,dh
1100aa1a:	cld    
1100aa1b:	int3   
1100aa1c:	rol    BYTE PTR [eax+esi*8],1
1100aa1f:	jp     0x1100aa3e
1100aa21:	xor    eax,0x6fe210d4
1100aa26:	aaa    
1100aa27:	fnsave [ebx+edx*4-0x11]
1100aa2b:	lock push cs
1100aa2d:	fcom   DWORD PTR [esi]
1100aa2f:	inc    eax
1100aa30:	and    BYTE PTR [eax],dl
1100aa32:	and    esp,0x1d
1100aa35:	pop    eax
1100aa36:	push   es
1100aa37:	or     ecx,0x5efb90db
1100aa3d:	aam    0x67
1100aa3f:	mov    bl,0xad
1100aa41:	or     BYTE PTR [edx-0x24901865],dl
1100aa47:	sar    DWORD PTR [ebp+0x76],cl
1100aa4a:	(bad)  
1100aa4b:	cld    
1100aa4c:	inc    ebx
1100aa4d:	test   DWORD PTR [edi],edi
1100aa4f:	test   al,0xfd
1100aa51:	xor    al,0xf2
1100aa53:	ja     0x1100aa8b
1100aa55:	push   edx
1100aa56:	sti    
1100aa57:	xor    eax,0x43
1100aa5a:	mov    ebx,0x5cf6defa
1100aa5f:	js     0x1100a9fc
1100aa61:	jns    0x1100aadb
1100aa63:	pop    es
1100aa64:	fimul  WORD PTR ds:0x6581389
1100aa6a:	add    ebp,0xcf3f07b9
1100aa70:	fild   WORD PTR [esi]
1100aa72:	mov    ch,0xad
1100aa74:	sub    eax,0xeb016e18
1100aa79:	mov    bh,0xf6
1100aa7b:	mov    ch,0xcf
1100aa7d:	out    0x3e,eax
1100aa7f:	daa    
1100aa80:	mov    ch,0xf9
1100aa82:	xor    eax,0xf59bffdb
1100aa87:	repnz (bad) 
1100aa89:	and    BYTE PTR [esi],dh
1100aa8b:	jg     0x1100aa38
1100aa8d:	jmp    0xbfb6:0x439f848f
1100aa94:	dec    ebx
1100aa95:	ror    BYTE PTR [ebx-0x53],1
1100aa98:	mov    cl,0x3d
1100aa9a:	add    BYTE PTR [eax+0x2ba041af],0xb8
1100aaa1:	mov    dh,dl
1100aaa3:	pop    es
1100aaa4:	bound  esi,QWORD PTR [eax]
1100aaa6:	xchg   esp,eax
1100aaa7:	sbb    ecx,DWORD PTR [ebx]
1100aaa9:	adc    DWORD PTR [ebx+0x9303bda],eax
1100aaaf:	daa    
1100aab0:	push   eax
1100aab1:	inc    ecx
1100aab2:	pop    esi
1100aab3:	xchg   ebp,eax
1100aab4:	call   0xf20e4c50
1100aab9:	inc    ecx
1100aaba:	es pop ebp
1100aabc:	(bad)  
1100aabe:	mov    dh,0x96
1100aac0:	adc    ch,dh
1100aac2:	aad    0xa8
1100aac4:	mov    bh,0xeb
1100aac6:	mov    edx,0x75b6100
1100aacb:	cmp    cl,0x8
1100aace:	mov    edi,0xb7508106
1100aad3:	out    dx,eax
1100aad4:	add    eax,0x6b7f0b90
1100aad9:	push   ebx
1100aada:	ins    BYTE PTR es:[edi],dx
1100aadb:	jg     0x1100aaf1
1100aadd:	retf   0xcaa0
1100aae0:	xchg   ebx,eax
1100aae1:	int    0x8f
1100aae3:	test   BYTE PTR [edi-0x57],bl
1100aae6:	mov    WORD PTR [eax],?
1100aae8:	je     0x1100aa96
1100aaea:	mov    ebp,DWORD PTR ds:0x78130398
1100aaf0:	pop    es
1100aaf1:	dec    eax
1100aaf2:	adc    esp,DWORD PTR [eax]
1100aaf4:	dec    esi
1100aaf5:	pusha  
1100aaf6:	push   ss
1100aaf7:	jb     0x1100aaba
1100aaf9:	pop    edi
1100aafa:	es push es
1100aafc:	repz jnp 0x1100aaea
1100aaff:	adc    ebp,esp
1100ab01:	scas   al,BYTE PTR es:[edi]
1100ab02:	xchg   edx,eax
1100ab03:	in     eax,dx
1100ab04:	jge    0x1100aaf1
1100ab06:	cmp    bl,bl
1100ab08:	(bad)  
1100ab09:	adc    BYTE PTR [esi+0x377e13e],bl
1100ab0f:	xlat   BYTE PTR ds:[ebx]
1100ab10:	push   ecx
1100ab11:	sub    edx,DWORD PTR [ebp-0x25a92145]
1100ab17:	inc    edx
1100ab18:	test   DWORD PTR [edi],edi
1100ab1a:	test   al,0xfa
1100ab1c:	das    
1100ab1d:	and    BYTE PTR [ebx+esi*8+0xf],0x62
1100ab22:	sti    
1100ab23:	iret   
1100ab24:	cmp    eax,0xe46cdcf7
1100ab29:	inc    edi
1100ab2a:	shl    edi,0xff
1100ab2d:	int    0x2e
1100ab2f:	sbb    DWORD PTR [eax],esp
1100ab31:	adc    BYTE PTR [edi],ah
1100ab33:	rol    BYTE PTR [edx],1
1100ab35:	sbb    BYTE PTR [ecx-0x10fa0be8],al
1100ab3b:	inc    eax
1100ab3c:	jmp    0x8d1934df
1100ab41:	push   edi
1100ab42:	mov    ebp,0x202039c
1100ab47:	pop    edx
1100ab48:	or     esi,DWORD PTR [eax+0x206d8351]
1100ab4e:	pusha  
1100ab4f:	mov    edx,DWORD PTR [esi+edi*8-0x4f554a5e]
1100ab56:	scas   al,BYTE PTR es:[edi]
1100ab57:	or     eax,DWORD PTR [ebx+edi*8]
1100ab5a:	xor    BYTE PTR [ecx-0x5e],0xe7
1100ab5e:	mov    ah,0xd4
1100ab60:	add    al,ah
1100ab62:	cmp    bh,dh
1100ab64:	outs   dx,DWORD PTR ds:[esi]
1100ab65:	adc    edx,DWORD PTR [esi]
1100ab67:	sbb    al,bh
1100ab69:	call   esi
1100ab6b:	mov    esp,0xe86bbeaf
1100ab70:	mov    dl,0xf9
1100ab72:	sub    DWORD PTR [esi+0x7f364bf],edi
1100ab78:	loope  0x1100abb9
1100ab7a:	sbb    edi,edi
1100ab7c:	outs   dx,DWORD PTR ds:[esi]
1100ab7d:	push   ebx
1100ab7e:	stc    
1100ab7f:	jecxz  0x1100ab80
1100ab81:	dec    eax
1100ab82:	clc    
1100ab83:	mov    ecx,0x3bdef7bd
1100ab88:	lods   al,BYTE PTR ds:[esi]
1100ab89:	repz (bad) 
1100ab8b:	aad    0x47
1100ab8d:	push   ds
1100ab8e:	add    ah,bh
1100ab90:	lahf   
1100ab91:	mov    esp,0x2568d00
1100ab96:	or     al,0x22
1100ab98:	add    eax,0x6e1bf7c3
1100ab9d:	mov    eax,0xd2749fc1
1100aba2:	dec    ecx
1100aba3:	and    eax,0x4b812810
1100aba8:	add    BYTE PTR [ecx+0x2e742c10],al
1100abae:	xchg   esp,eax
1100abaf:	cmp    DWORD PTR [ecx-0x7e2349a1],eax
1100abb5:	scas   al,BYTE PTR es:[edi]
1100abb6:	xchg   ecx,eax
1100abb7:	fimul  WORD PTR [edi]
1100abb9:	cld    
1100abba:	jg     0x1100abc4
1100abbc:	adc    BYTE PTR [esi+edi*2],cl
1100abbf:	push   esi
1100abc0:	dec    ebx
1100abc1:	sub    DWORD PTR [eax],ebp
1100abc3:	jge    0x1100ab87
1100abc5:	out    dx,eax
1100abc6:	push   ss
1100abc7:	lock jge 0x1100ab92
1100abca:	std    
1100abcb:	ins    BYTE PTR es:[edi],dx
1100abcc:	lods   eax,DWORD PTR ds:[esi]
1100abcd:	jnp    0x1100abfc
1100abcf:	or     DWORD PTR [esi],edi
1100abd1:	inc    eax
1100abd2:	dec    eax
1100abd4:	pop    ds
1100abd5:	ins    BYTE PTR es:[edi],dx
1100abd6:	(bad)  
1100abd7:	xlat   BYTE PTR ds:[ebx]
1100abd8:	inc    eax
1100abd9:	mov    bl,0x92
1100abdb:	dec    edi
1100abdc:	push   0x10dffd5e
1100abe1:	jle    0x1100abe3
1100abe3:	jb     0x1100abda
1100abe5:	jnp    0x1100ac4e
1100abe7:	mov    dh,0xcd
1100abe9:	add    BYTE PTR [eax+0x1d11d848],0x4a
1100abf0:	inc    esp
1100abf1:	popa   
1100abf2:	push   ss
1100abf3:	daa    
1100abf4:	inc    eax
1100abf5:	and    BYTE PTR [edx],dl
1100abf7:	xor    al,0x1
1100abf9:	in     eax,0x1d
1100abfb:	call   0x1509c022
1100ac00:	inc    edx
1100ac01:	adc    eax,0xba04d262
1100ac06:	and    al,BYTE PTR [esi]
1100ac08:	jg     0x1100ab9b
1100ac0a:	jmp    0x156c:0xef250c09
1100ac11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100ac12:	stc    
1100ac13:	jl     0x1100ac44
1100ac15:	popf   
1100ac16:	outs   dx,DWORD PTR ds:[esi]
1100ac17:	shl    BYTE PTR [ebx+0x68a12a5a],1
1100ac1d:	adc    edi,DWORD PTR [esi+0x2b]
1100ac20:	shl    BYTE PTR [ebp+0x400b4bff],1
1100ac26:	sbb    DWORD PTR [esi+esi*4],eax
1100ac29:	add    eax,0xe46fa08d
1100ac2e:	das    
1100ac2f:	test   eax,0xffb636fd
1100ac34:	stc    
1100ac35:	cmc    
1100ac36:	repnz pop edx
1100ac38:	enter  0x7ed5,0x2b
1100ac3c:	cld    
1100ac3d:	mov    cl,0xad
1100ac3f:	pop    ebx
1100ac40:	mov    bh,0xce
1100ac42:	aad    0x6a
1100ac44:	mov    edi,0x12bf360f
1100ac49:	rol    BYTE PTR fs:[eax],cl
1100ac4c:	sbb    al,BYTE PTR [edx-0x77afffb7]
1100ac52:	add    esi,DWORD PTR [eax+0x71e00326]
1100ac58:	mov    dl,0xf3
1100ac5a:	xchg   ebx,eax
1100ac5b:	out    0x10,al
1100ac5d:	cmp    BYTE PTR [ecx-0x31c4711d],al
1100ac63:	pop    ebp
1100ac64:	jno    0x1100ac2b
1100ac66:	adc    eax,0xa81f5cde
1100ac6b:	jecxz  0x1100acbe
1100ac6d:	or     esp,DWORD PTR [eax]
1100ac6f:	lock mov esi,0xfa1b397a
1100ac75:	jae    0x1100ac7e
1100ac77:	jle    0x1100ac92
1100ac79:	inc    eax
1100ac7a:	mov    al,ds:0xca979a34
1100ac7f:	test   eax,0xf9681695
1100ac84:	mov    edi,0x67debe74
1100ac89:	mov    ch,0x14
1100ac8b:	xor    BYTE PTR [ecx],0x89
1100ac8e:	lock mov bh,0x9
1100ac91:	retf   
1100ac92:	and    al,0x60
1100ac94:	push   eax
1100ac95:	cmp    al,bh
1100ac97:	push   edx
1100ac98:	mov    ch,0x2e
1100ac9a:	aas    
1100ac9b:	aas    
1100ac9c:	jge    0x1100ad0d
1100ac9e:	retf   
1100ac9f:	in     eax,0xa7
1100aca1:	lods   al,BYTE PTR ds:[esi]
1100aca2:	mov    esi,0xdf8441a3
1100aca7:	mov    gs,WORD PTR [esi-0x27803727]
1100acad:	popa   
1100acae:	xchg   DWORD PTR [ecx+0x3b3ecfb3],edi
1100acb4:	or     bh,BYTE PTR [edi+0x6e3d356]
1100acba:	push   0x5f555bbf
1100acbf:	or     esi,DWORD PTR [edi-0xe2af7da]
1100acc5:	mov    ch,0xda
1100acc7:	dec    edi
1100acc8:	(bad)  [edi-0x26]
1100accb:	add    DWORD PTR [ebp+0x5c804107],ebx
1100acd1:	test   BYTE PTR [ebp+0x1a],ch
1100acd4:	add    BYTE PTR [ebp+0x4dfe0c40],dh
1100acda:	mov    ebp,0xb2c3079c
1100acdf:	or     BYTE PTR [ecx],al
1100ace1:	jle    0x1100ad14
1100ace3:	inc    eax
1100ace4:	inc    eax
1100ace5:	aas    
1100ace6:	xchg   DWORD PTR [esi],ebp
1100ace8:	mov    ch,0xbe
1100acea:	ins    DWORD PTR es:[edi],dx
1100aceb:	test   eax,0xd8283860
1100acf0:	jae    0x1100ac86
1100acf2:	dec    bh
1100acf4:	ficom  DWORD PTR [edx+0x3]
1100acf7:	rcl    BYTE PTR [eax],0xe1
1100acfa:	pop    ds
1100acfb:	mov    ch,0x7c
1100acfd:	jbe    0x1100ad7c
1100acff:	pop    es
1100ad00:	push   0xbadb4082
1100ad05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100ad06:	push   0x977f6eb6
1100ad0b:	scas   eax,DWORD PTR es:[edi]
1100ad0c:	pop    edi
1100ad0d:	or     edi,edi
1100ad0f:	push   ecx
1100ad10:	cmc    
1100ad11:	repnz sub cl,al
1100ad14:	test   DWORD PTR [edi+0x65bd3cf4],edi
1100ad1a:	sti    
1100ad1b:	and    DWORD PTR [edi],eax
1100ad1d:	mov    ecx,DWORD PTR [ebx+eax*1-0x1c4fa380]
1100ad24:	jmp    DWORD PTR [ebp+0x4b42a020]
1100ad2a:	or     BYTE PTR [ecx+0x425c57fe],ah
1100ad30:	cmp    al,0xa6
1100ad32:	dec    edx
1100ad33:	and    eax,0xb611992e
1100ad38:	add    eax,0xeb6fe04d
1100ad3d:	in     eax,0x42
1100ad3f:	enter  0xa041,0x2d
1100ad43:	mov    edx,DWORD PTR [eax-0x7c225c72]
1100ad49:	fistp  DWORD PTR [ebx+0x2b]
1100ad4c:	adc    DWORD PTR [eax+0x7aafe125],ebx
1100ad52:	mov    esi,0x9f6495b7
1100ad57:	xchg   esp,eax
1100ad58:	pop    ds
1100ad59:	enter  0x96da,0x16
1100ad5d:	mov    fs,WORD PTR [ecx-0x1ea8203e]
1100ad63:	mov    dh,0xf4
1100ad65:	fwait
1100ad66:	mov    ch,0xa9
1100ad68:	sti    
1100ad69:	shl    BYTE PTR [eax+0x29],0xee
1100ad6d:	mov    bl,0x74
1100ad6f:	jle    0x1100adec
1100ad71:	mov    ebp,0x41fcf96d
1100ad76:	clc    
1100ad77:	pop    edi
1100ad78:	add    ebp,ebp
1100ad7a:	ins    BYTE PTR es:[edi],dx
1100ad7b:	aas    
1100ad7c:	add    eax,DWORD PTR [edx-0x50]
1100ad7f:	stc    
1100ad80:	xor    DWORD PTR [ebp+0x6d6eff57],esp
1100ad86:	jmp    FWORD PTR [ebp+edi*2-0x39]
1100ad8a:	call   FWORD PTR [ebp-0x25]
1100ad8d:	mov    ah,0x6a
1100ad8f:	pop    ds
1100ad90:	cli    
1100ad91:	jle    0x1100add6
1100ad93:	out    dx,al
1100ad94:	ror    BYTE PTR [ecx+0x27],0x9d
1100ad98:	in     al,0x55
1100ad9a:	fdiv   DWORD PTR [eax+0x57]
1100ad9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100ad9e:	fist   DWORD PTR [eax+0x2f]
1100ada1:	jg     0x1100adfa
1100ada3:	das    
1100ada4:	pop    ds
1100ada5:	xchg   DWORD PTR [esi+0x2f2a5039],esp
1100adab:	push   esi
1100adac:	add    al,BYTE PTR [edx-0x492708d2]
1100adb2:	fcmovu st,st(2)
1100adb4:	in     al,dx
1100adb5:	ja     0x1100ade2
1100adb7:	in     al,dx
1100adb8:	push   ebp
1100adb9:	(bad)  
1100adba:	mov    edx,0x20b6fd2
1100adbf:	and    DWORD PTR [ebp-0xf6d7ffa],0xd7c2da6f
1100adc9:	lock or edx,ebp
1100adcc:	push   cs
1100adcd:	cmp    eax,0xf0b850f4
1100add2:	ret    0x10b
1100add5:	or     DWORD PTR [edi+0x5f7569ac],edi
1100addb:	(bad)  
1100addd:	retf   0x57ad
1100ade0:	cmp    al,0xa6
1100ade2:	fiadd  WORD PTR [esi-0x11]
1100ade5:	cmp    ecx,DWORD PTR [ecx+0x43]
1100ade8:	adc    al,ch
1100adea:	jae    0x1100adfd
1100adec:	cs mov bh,0x66
1100adef:	jnp    0x1100ae19
1100adf1:	xor    al,0xbd
1100adf3:	and    BYTE PTR [edx-0x4f],bh
1100adf6:	es xchg edx,eax
1100adf8:	das    
1100adf9:	ins    BYTE PTR es:[edi],dx
1100adfa:	ffreep st(6)
1100adfc:	adc    DWORD PTR [eax-0x49274006],eax
1100ae02:	and    al,0x0
1100ae04:	mov    ah,0x8d
1100ae06:	(bad)  
1100ae07:	jbe    0x1100aded
1100ae09:	fbstp  TBYTE PTR [eax+0x2fef9f65]
1100ae0f:	dec    esi
1100ae10:	xor    esi,DWORD PTR [ecx-0x31c10c03]
1100ae16:	inc    eax
1100ae17:	aaa    
1100ae18:	loopne 0x1100adde
1100ae1a:	(bad)  
1100ae1b:	mov    ds:0x6181e254,al
1100ae20:	ret    
1100ae21:	retf   
1100ae22:	sub    eax,0x594347b5
1100ae27:	call   0xeba73107
1100ae2c:	ret    0xe7a9
1100ae2f:	adc    eax,0x14b54c
1100ae34:	shl    BYTE PTR [edi-0x11],1
1100ae37:	fbstp  TBYTE PTR [edi+0x7b794f14]
1100ae3d:	outs   dx,DWORD PTR ds:[esi]
1100ae3e:	jmp    0x1100ae16
1100ae40:	lods   eax,DWORD PTR ds:[esi]
1100ae41:	jecxz  0x1100aea5
1100ae43:	push   ds
1100ae44:	jge    0x1100ae88
1100ae46:	push   0x7f
1100ae48:	lahf   
1100ae49:	inc    esp
1100ae4a:	test   al,0x17
1100ae4c:	mov    ds:0x61368405,al
1100ae51:	out    dx,al
1100ae52:	shl    BYTE PTR [edx+0x3],0x38
1100ae56:	or     al,0xda
1100ae58:	test   esi,ebx
1100ae5a:	cs ss nop
1100ae5d:	stos   BYTE PTR es:[edi],al
1100ae5e:	fs push ss
1100ae60:	or     al,0x25
1100ae62:	pop    es
1100ae63:	arpl   bx,bx
1100ae65:	push   edx
1100ae66:	add    al,dl
1100ae68:	xor    eax,0xfdfb5bfa
1100ae6d:	fisub  WORD PTR ds:0x6ddbd07a
1100ae73:	rol    ebp,cl
1100ae75:	cmp    al,0x86
1100ae77:	mov    ah,0xad
1100ae79:	or     DWORD PTR [eax],eax
1100ae7b:	mov    eax,ds:0x44c0832d
1100ae80:	in     eax,dx
1100ae81:	mov    DWORD PTR [eax+0x16],edx
1100ae84:	jp     0x1100aee3
1100ae86:	push   edi
1100ae87:	sar    DWORD PTR [edx+0x4d],0x2c
1100ae8b:	pop    eax
1100ae8c:	mov    ah,0xf1
1100ae8e:	add    al,BYTE PTR [eax]
1100ae90:	cmp    eax,0x696c05a
1100ae95:	sub    BYTE PTR [esi],0xd5
1100ae98:	lahf   
1100ae99:	xchg   esi,eax
1100ae9a:	cmc    
1100ae9b:	dec    ebx
1100ae9c:	imul   DWORD PTR [edi+esi*4-0x1b85941]
1100aea3:	sar    BYTE PTR [edx-0x7922882c],1
1100aea9:	outs   dx,BYTE PTR ds:[esi]
1100aeaa:	addr16 pop ebx
1100aeac:	or     DWORD PTR [esi+eax*4],ebp
1100aeaf:	sbb    al,0xcb
1100aeb1:	outs   dx,BYTE PTR ds:[esi]
1100aeb2:	rcl    DWORD PTR [ebx+0x68],cl
1100aeb5:	je     0x1100ae70
1100aeb7:	dec    ecx
1100aeb8:	jnp    0x1100aec0
1100aeba:	xchg   esp,eax
1100aebb:	test   DWORD PTR [esi+0x2720a96f],edi
1100aec1:	dec    edi
1100aec2:	xchg   esp,esp
1100aec4:	push   ebp
1100aec5:	ins    BYTE PTR es:[edi],dx
1100aec6:	jne    0x1100aec8
1100aec8:	sub    BYTE PTR ds:0x497bb8bc,dl
1100aece:	pop    ds
1100aecf:	div    DWORD PTR [esi-0x2c]
1100aed2:	nop
1100aed3:	in     eax,dx
1100aed4:	iret   
1100aed5:	test   BYTE PTR [edi],bh
1100aed7:	mov    ah,0x85
1100aed9:	(bad)  
1100aedb:	pop    ebp
1100aedc:	(bad)  
1100aedd:	cwde   
1100aede:	add    al,0x0
1100aee0:	in     al,dx
1100aee1:	jp     0x1100aede
1100aee3:	push   DWORD PTR [edx]
1100aee5:	xor    DWORD PTR [eax],edi
1100aee7:	test   al,0x3d
1100aee9:	bswap  edx
1100aeeb:	add    bh,BYTE PTR [esi]
1100aeed:	or     edx,DWORD PTR [edx-0x68405ec1]
1100aef3:	add    al,0x6
1100aef6:	push   edx
1100aef7:	mov    ch,0x69
1100aef9:	add    DWORD PTR [ebx+0x5],ebx
1100aefc:	add    BYTE PTR [edx+0x2e],cl
1100aeff:	xor    ebp,ebp
1100af01:	pop    es
1100af02:	mov    edi,0xf71f496b
1100af07:	jbe    0x1100aedb
1100af09:	mov    edx,0xb4d0fed8
1100af0e:	mov    al,ds:0xb43f165a
1100af13:	and    DWORD PTR [esi-0x80],ebx
1100af16:	sar    BYTE PTR [esi-0x4c],cl
1100af19:	out    dx,eax
1100af1a:	adc    BYTE PTR [edi-0x1ab96f3f],ch
1100af20:	lds    edx,FWORD PTR [esi+0x16d68135]
1100af26:	stos   BYTE PTR es:[edi],al
1100af27:	cmp    edx,DWORD PTR [ebp-0x54c817c]
1100af2d:	pop    edi
1100af2e:	jg     0x1100aee7
1100af30:	pusha  
1100af31:	xor    BYTE PTR [esi+eax*4],ah
1100af34:	bound  ebx,QWORD PTR [ebx-0x5c30000]
1100af3a:	imul   edi,DWORD PTR [edi],0xfffffff8
1100af3d:	popf   
1100af3e:	dec    ebx
1100af3f:	std    
1100af40:	les    esi,FWORD PTR [edi+0x7f6c46f5]
1100af46:	fwait
1100af47:	lock outs dx,DWORD PTR ds:[esi]
1100af49:	outs   dx,DWORD PTR ds:[esi]
1100af4a:	ins    DWORD PTR es:[edi],dx
1100af4b:	fnstcw WORD PTR [ebx]
1100af4d:	rcr    cl,1
1100af4f:	pop    esi
1100af50:	push   cs
1100af51:	and    cl,ah
1100af53:	push   esi
1100af54:	call   0x270dc634
1100af59:	ficom  DWORD PTR [eax+ebp*1]
1100af5c:	dec    ebp
1100af5d:	shl    DWORD PTR [esi-0x2a9fff1c],1
1100af63:	jg     0x1100af00
1100af65:	cld    
1100af66:	bound  esp,QWORD PTR [edi]
1100af68:	mov    cl,0xfc
1100af6a:	dec    ecx
1100af6b:	xlat   BYTE PTR ds:[ebx]
1100af6c:	ror    DWORD PTR [esi+0x5b3dcf7b],0xe6
1100af73:	mov    cl,0xf
1100af75:	ins    DWORD PTR es:[edi],dx
1100af76:	push   0x74
1100af78:	dec    esp
1100af79:	and    esp,DWORD PTR [ebp+0x5a]
1100af7c:	loop   0x1100aff5
1100af7e:	pop    edi
1100af7f:	lds    ecx,FWORD PTR [edi+0x1f]
1100af82:	aas    
1100af83:	jno    0x1100af2e
1100af85:	(bad)  
1100af86:	cmc    
1100af87:	xor    dl,BYTE PTR [edi]
1100af89:	aas    
1100af8a:	stos   DWORD PTR es:[edi],eax
1100af8b:	cli    
1100af8c:	mov    bl,0x1a
1100af8e:	outs   dx,DWORD PTR ds:[esi]
1100af8f:	xchg   bh,ch
1100af91:	pop    esp
1100af92:	jne    0x1100afaa
1100af94:	pop    esp
1100af95:	sti    
1100af96:	jmp    0x8e0092ee
1100af9b:	mov    esp,0xef868230
1100afa0:	xor    al,0x92
1100afa2:	loop   0x1100af9e
1100afa4:	dec    eax
1100afa5:	clc    
1100afa6:	aad    0x36
1100afa8:	(bad)  
1100afa9:	jle    0x1100af73
1100afab:	test   BYTE PTR [edi-0x16],0x96
1100afaf:	mov    ds:0x87dceceb,eax
1100afb4:	into   
1100afb5:	pop    ebp
1100afb6:	clc    
1100afb7:	mov    edi,0x507fb02d
1100afbc:	mov    bl,0xc7
1100afbe:	push   ebp
1100afbf:	lea    ecx,[eax-0xa81503f]
1100afc5:	retf   0xf4f0
1100afc8:	jo     0x1100af85
1100afca:	bound  edi,QWORD PTR [edx+0x3]
1100afcd:	dec    esp
1100afce:	scas   eax,DWORD PTR es:[edi]
1100afcf:	fadd   DWORD PTR [ecx]
1100afd1:	push   cs
1100afd2:	cmp    dh,dl
1100afd4:	aad    0x70
1100afd6:	shl    BYTE PTR [ecx],0x2f
1100afd9:	add    dh,BYTE PTR [edi]
1100afdb:	sbb    al,cl
1100afdd:	push   0x6a6e0334
1100afe2:	mov    edx,0xbd54fc3e
1100afe7:	mov    edx,gs
1100afe9:	jne    0x1100afe3
1100afeb:	mov    DWORD PTR [ebx+0x38],ecx
1100afee:	outs   dx,DWORD PTR ds:[esi]
1100afef:	mov    edx,0xd3cf875f
1100aff4:	fld    DWORD PTR [eax+ecx*4]
1100aff7:	jns    0x1100afb8
1100aff9:	inc    BYTE PTR [ebp-0x40a02c4a]
1100afff:	inc    ebx
1100b000:	fbld   TBYTE PTR [esi]
1100b002:	scas   eax,DWORD PTR es:[edi]
1100b003:	test   BYTE PTR [esp+eiz*2+0x27],bh
1100b007:	and    edi,ebx
1100b009:	test   BYTE PTR [ebx-0x7dbe5103],cl
1100b00f:	add    al,0xce
1100b012:	aad    0xd8
1100b014:	push   ss
1100b015:	dec    esi
1100b016:	fnstsw WORD PTR [eax-0x28]
1100b019:	dec    ebx
1100b01a:	add    eax,0xb00b5a00
1100b01f:	cdq    
1100b020:	outs   dx,DWORD PTR ds:[esi]
1100b021:	ja     0x1100b097
1100b023:	sbb    eax,0xc002ab6c
1100b028:	inc    edx
1100b029:	test   DWORD PTR [edi-0x52],edi
1100b02c:	push   ss
1100b02d:	(bad)  
1100b02e:	imul   ecx,esi,0xffffff81
1100b031:	imul   edi,DWORD PTR [esi],0xfffffff5
1100b034:	into   
1100b035:	mov    eax,0xa1c28be
1100b03a:	add    BYTE PTR [edx],dh
1100b03c:	mov    dh,0x1f
1100b03e:	test   DWORD PTR [ecx-0x3b],ecx
1100b041:	lock bnd jbe 0x1100b07b
1100b045:	push   0xc9013c7
1100b04a:	in     eax,0x6
1100b04c:	xor    al,0xe8
1100b04e:	cwde   
1100b04f:	std    
1100b050:	ins    BYTE PTR es:[edi],dx
1100b051:	dec    eax
1100b052:	mov    al,ds:0x32667e3d
1100b057:	xchg   esp,eax
1100b058:	inc    eax
1100b059:	lods   al,BYTE PTR ds:[esi]
1100b05a:	mov    ah,0x1d
1100b05c:	mov    dh,0x0
1100b05e:	add    al,bh
1100b060:	adc    esi,DWORD PTR [ecx]
1100b062:	fdivr  DWORD PTR [ecx-0x53]
1100b065:	push   cs
1100b066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100b067:	push   edi
1100b068:	scas   al,BYTE PTR es:[edi]
1100b069:	test   DWORD PTR [ebx+0x1adafa9e],eax
1100b06f:	add    al,0x5e
1100b071:	mov    eax,0xc0835d
1100b076:	add    BYTE PTR [eax],cl
1100b078:	and    eax,0x49a848de
1100b07d:	fadd   st,st(3)
1100b07f:	out    0x46,eax
1100b081:	adc    cl,al
1100b083:	xlat   BYTE PTR ds:[ebx]
1100b084:	fisttp WORD PTR [ebx-0x66]
1100b087:	inc    eax
1100b088:	leave  
1100b089:	cmp    edx,DWORD PTR [eax+0x4a]
1100b08c:	stos   BYTE PTR es:[edi],al
1100b08d:	rcr    BYTE PTR [edi-0x40e85b08],cl
1100b093:	jne    0x1100b03e
1100b095:	push   DWORD PTR [esi+0x5e]
1100b098:	mov    ebx,0xea3f0000
1100b09d:	cmp    bl,al
1100b09f:	push   esi
1100b0a0:	add    eax,DWORD PTR [eax-0x3006e6bb]
1100b0a6:	dec    esi
1100b0a7:	ret    0xc7ef
1100b0aa:	sub    bh,BYTE PTR [eax+0x7e1d08d6]
1100b0b0:	mov    bh,0x6c
1100b0b2:	inc    edx
1100b0b4:	fnstsw WORD PTR cs:[eax+0x45e5a101]
1100b0bb:	pop    ss
1100b0bc:	inc    eax
1100b0bd:	arpl   WORD PTR [esi],di
1100b0bf:	sbb    al,BYTE PTR [edi+0x6f]
1100b0c2:	push   ebx
1100b0c3:	out    0xb9,eax
1100b0c5:	icebp  
1100b0c6:	(bad)  
1100b0c7:	fwait
1100b0c8:	loopne 0x1100b08e
1100b0ca:	adc    ecx,DWORD PTR [edi+0x40]
1100b0cd:	bound  edx,QWORD PTR [eax]
1100b0cf:	iret   
1100b0d0:	inc    ebx
1100b0d1:	iret   
1100b0d2:	test   edi,edi
1100b0d4:	dec    ecx
1100b0d5:	ins    DWORD PTR es:[edi],dx
1100b0d6:	jp     0x1100b09d
1100b0d8:	sbb    bh,BYTE PTR [eax-0x2c]
1100b0db:	rcr    DWORD PTR [esi+0xf],cl
1100b0de:	sti    
1100b0df:	pop    ds
1100b0e0:	cld    
1100b0e1:	cmp    cl,0x83
1100b0e4:	cmp    BYTE PTR [ebp-0x2a],0x4b
1100b0e8:	fadd   QWORD PTR [esi]
1100b0ea:	add    BYTE PTR [eax+0x28],al
1100b0ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100b0ee:	stos   BYTE PTR es:[edi],al
1100b0ef:	test   DWORD PTR [edx-0x65c81fc],ebx
1100b0f5:	scas   al,BYTE PTR es:[edi]
1100b0f6:	xlat   BYTE PTR ds:[ebx]
1100b0f7:	imul   ecx,DWORD PTR [ebp-0x80],0x6bac080
1100b0fe:	pop    es
1100b0ff:	cdq    
1100b100:	add    DWORD PTR [ebx+0x9],ecx
1100b103:	add    BYTE PTR [ebp+0x75],ch
1100b106:	out    dx,al
1100b107:	outs   dx,DWORD PTR ds:[esi]
1100b108:	jmp    0x1100b144
1100b10a:	fcom   DWORD PTR [esi+0x1]
1100b10d:	add    BYTE PTR [ebp+0x10],0xfe
1100b111:	outs   dx,DWORD PTR ds:[esi]
1100b112:	jg     0x1100b101
1100b114:	arpl   WORD PTR [eax-0x13],si
1100b117:	and    eax,0xf91f6eef
1100b11c:	stc    
1100b11d:	imul   edi,DWORD PTR [ecx+0x2f9ff368],0xb75b3c05
1100b127:	fwait
1100b128:	push   0xb6dbef84
1100b12d:	lds    ecx,FWORD PTR [eax+ebp*2]
1100b130:	add    eax,0xe6fed28b
1100b135:	pop    ecx
1100b136:	or     eax,0x2e69b47b
1100b13b:	ret    0x5e93
1100b13e:	cli    
1100b13f:	push   edx
1100b140:	mov    eax,0x4397cbfc
1100b145:	ja     0x1100b17f
1100b147:	jg     0x1100b0f6
1100b149:	or     DWORD PTR [eax+ebx*2-0x58170f3],ebp
1100b150:	sbb    esp,DWORD PTR [ecx-0x41]
1100b153:	(bad)  
1100b154:	sbb    al,0xb3
1100b156:	pop    ebp
1100b157:	push   0x2
1100b159:	add    eax,DWORD PTR [eax]
1100b15b:	loopne 0x1100b18c
1100b15d:	mov    eax,ds:0xe887f6a9
1100b162:	pop    eax
1100b163:	adc    bh,al
1100b165:	or     eax,0x134db3e6
1100b16a:	push   0x55b2b42b
1100b16f:	add    DWORD PTR [eax-0x1afa0755],esp
1100b175:	mov    esi,0x60eba0ff
1100b17a:	dec    ebx
1100b17b:	push   cs
1100b17c:	add    BYTE PTR [ebx-0x61a803df],cl
1100b182:	or     DWORD PTR [edi-0x41],ebx
1100b185:	hlt    
1100b186:	mov    ebp,0x46b3fff5
1100b18b:	inc    eax
1100b18c:	push   esp
1100b18d:	sahf   
1100b18e:	or     al,0xa
1100b190:	fsub   QWORD PTR [ecx-0x27a00f4b]
1100b196:	inc    esi
1100b197:	clc    
1100b198:	add    eax,0x8aaaba35
1100b19d:	and    esi,DWORD PTR [edx-0x65]
1100b1a0:	mov    al,ds:0x887ab316
1100b1a5:	aad    0xef
1100b1a7:	mov    ebp,0x68acdcf5
1100b1ac:	cmc    
1100b1ad:	add    al,BYTE PTR [eax+0x47]
1100b1b0:	(bad)  
1100b1b1:	jmp    0xe08fd0b7
1100b1b6:	cmp    dh,cl
1100b1b8:	cmp    esi,DWORD PTR [eax-0x2e]
1100b1bb:	dec    ecx
1100b1bc:	lock xchg ebp,eax
1100b1be:	int3   
1100b1bf:	inc    ebp
1100b1c0:	pop    eax
1100b1c1:	retf   0x4a23
1100b1c4:	and    al,dh
1100b1c6:	test   al,0xa7
1100b1c8:	mov    ebp,0x9e04d6a1
1100b1cd:	mov    edi,0xc081dd
1100b1d2:	add    al,bh
1100b1d4:	pop    es
1100b1d5:	adc    BYTE PTR [ecx-0x2a],al
1100b1d8:	and    edi,ebp
1100b1da:	push   es
1100b1db:	pop    esp
1100b1dc:	out    dx,al
1100b1dd:	ret    
1100b1de:	(bad)  
1100b1df:	out    dx,eax
1100b1e0:	xor    edi,DWORD PTR [edi+0x3e686013]
1100b1e6:	mov    al,ds:0x40056454
1100b1eb:	add    BYTE PTR [eax],0x60
1100b1ee:	mov    DWORD PTR [eax],eax
1100b1f0:	mov    al,ds:0xd1a7fecf
1100b1f5:	aas    
1100b1f6:	push   esp
1100b1f7:	mov    ebx,0xc1d75ef9
1100b1fc:	xchg   esi,eax
1100b1fd:	adc    al,0x0
1100b1ff:	push   ss
1100b200:	imul   esp,esp,0xef25faff
1100b206:	sub    DWORD PTR [eax],ecx
1100b208:	jg     0x1100b1bd
1100b20a:	test   DWORD PTR [edx],ebx
1100b20c:	jle    0x1100b26f
1100b20e:	ror    BYTE PTR [esi+0x95fb656],cl
1100b214:	sar    DWORD PTR [edx+eax*1-0x16b92585],cl
1100b21b:	stc    
1100b21c:	push   0x77bf6d08
1100b221:	adc    BYTE PTR [edx-0x11e43883],cl
1100b227:	sbb    eax,0x381cd170
1100b22c:	call   0x886e89f9
1100b231:	pushf  
1100b232:	rol    BYTE PTR [eax],0x0
1100b235:	clc    
1100b236:	and    ah,ah
1100b238:	and    edi,ebx
1100b23a:	push   es
1100b23b:	enter  0xff85,0x3e
1100b23f:	enter  0xc081,0x6a
1100b243:	add    bl,dl
1100b245:	or     al,0xb0
1100b247:	pop    edx
1100b248:	inc    eax
1100b249:	mov    DWORD PTR [edi],eax
1100b24b:	fsubr  DWORD PTR [edx+0x0]
1100b24e:	push   eax
1100b24f:	stos   BYTE PTR es:[edi],al
1100b250:	jnp    0x1100b269
1100b252:	add    al,ah
1100b254:	mov    ebx,0x325b075d
1100b259:	add    BYTE PTR [eax+0xc],bl
1100b25c:	ret    0xeaef
1100b25f:	mov    bl,0xe0
1100b261:	call   0x43f6:0xafda9f4f
1100b268:	push   ds
1100b269:	ficomp WORD PTR [ebx+0x63baa88d]
1100b26f:	push   0x2f
1100b271:	inc    eax
1100b272:	xor    DWORD PTR [edi],0x497bec8
1100b278:	rcr    esp,1
1100b27a:	push   edi
1100b27b:	(bad)  
1100b27c:	xchg   esi,eax
1100b27d:	xchg   BYTE PTR [ecx+0x601b5a14],bl
1100b283:	xor    dl,al
1100b285:	cmp    al,0xb7
1100b287:	push   esi
1100b288:	bound  esi,QWORD PTR [eax+0x59ab7c70]
1100b28e:	inc    esp
1100b28f:	out    dx,eax
1100b290:	inc    eax
1100b291:	add    BYTE PTR [ecx+0x3c0138ae],al
1100b297:	(bad)  
1100b298:	hlt    
1100b299:	retf   0xe01d
1100b29c:	mov    al,ds:0xe1abca7
1100b2a1:	cmp    BYTE PTR [ecx+eax*1-0x22],dh
1100b2a5:	and    DWORD PTR ds:0x604e6,0xc5489840
1100b2af:	(bad)  
1100b2b1:	div    DWORD PTR [ebp+0x2c]
1100b2b4:	ins    DWORD PTR es:[edi],dx
1100b2b5:	jl     0x1100b2f7
1100b2b7:	imul   ecx,DWORD PTR [esi],0x26d86
1100b2bd:	lods   al,BYTE PTR ds:[esi]
1100b2be:	call   FWORD PTR [edi-0x31]
1100b2c1:	jno    0x1100b2da
1100b2c3:	add    al,ah
1100b2c5:	cmp    ebx,DWORD PTR [ebp+0x7]
1100b2c8:	pop    ebx
1100b2c9:	adc    al,BYTE PTR [eax]
1100b2cb:	pop    eax
1100b2cc:	sub    al,0xb6
1100b2ce:	(bad)  
1100b2cf:	mov    edi,0x3f090cfe
1100b2d4:	sub    eax,0xf6b54d00
1100b2d9:	mov    al,0xc3
1100b2db:	ja     0x9c3b8294
1100b2e1:	test   DWORD PTR [edi-0x3433ba15],edi
1100b2e7:	or     eax,0xb62f3d08
1100b2ec:	inc    ebx
1100b2ed:	clc    
1100b2ee:	pop    ss
1100b2ef:	mov    dl,0xef
1100b2f1:	mov    al,0x47
1100b2f3:	lods   eax,DWORD PTR ds:[esi]
1100b2f4:	add    bl,BYTE PTR [eax-0x29c8a310]
1100b2fa:	and    BYTE PTR [eax+0x2],dh
1100b2fd:	xchg   edi,eax
1100b2fe:	sbb    al,0xd7
1100b300:	scas   al,BYTE PTR es:[edi]
1100b301:	inc    ecx
1100b302:	jl     0x1100b37a
1100b304:	icebp  
1100b305:	pushf  
1100b306:	imul   ebp,ebp,0x181de6f6
1100b30c:	add    BYTE PTR [eax],al
1100b30e:	mov    eax,ds:0xe68d1242
1100b313:	xor    al,0xda
1100b315:	xchg   ebp,esp
1100b317:	pop    esi
1100b318:	pop    esp
1100b319:	cli    
1100b31a:	inc    eax
1100b31b:	rol    BYTE PTR [edx],0x80
1100b31e:	scas   al,BYTE PTR es:[edi]
1100b31f:	mov    dl,0xd4
1100b321:	push   ebp
1100b322:	push   ebx
1100b323:	and    ebp,ebx
1100b325:	(bad)  
1100b326:	push   ss
1100b327:	mov    eax,0xffb8b6e7
1100b32c:	lock pop ebp
1100b32e:	pop    ss
1100b32f:	shl    BYTE PTR [eax],0x0
1100b332:	clc    
1100b333:	jbe    0x1100b30c
1100b335:	shl    DWORD PTR [esi+0x3a2c0038],0xdb
1100b33c:	fbld   TBYTE PTR [ebx+0x75baff6]
1100b342:	out    0x12,eax
1100b344:	fisttp DWORD PTR [edi-0x5b1381ca]
1100b34a:	icebp  
1100b34b:	leave  
1100b34c:	xor    eax,0xb621a747
1100b351:	sti    
1100b352:	mov    al,0xb7
1100b354:	push   edx
1100b355:	(bad)  
1100b356:	and    BYTE PTR [ecx+ebp*2-0x1d8fe9f],ch
1100b35d:	pop    esi
1100b35e:	js     0x1100b3b6
1100b360:	lods   eax,DWORD PTR ds:[esi]
1100b361:	sbb    cl,BYTE PTR [ecx-0x11]
1100b364:	jecxz  0x1100b3d4
1100b366:	inc    esi
1100b367:	xor    BYTE PTR [esi-0x1a3f63ba],al
1100b36d:	pop    edi
1100b36e:	(bad)  
1100b36f:	jb     0x1100b33c
1100b371:	mov    ch,0x3
1100b373:	push   eax
1100b374:	fistp  WORD PTR [ebp+0x1e16b15e]
1100b37a:	cmc    
1100b37b:	mov    ah,0x93
1100b37d:	pop    ss
1100b37e:	(bad)  
1100b37f:	or     DWORD PTR [ecx+edx*4],ebp
1100b382:	xor    BYTE PTR es:[eax],al
1100b385:	add    BYTE PTR [edx+0x61],al
1100b388:	adc    al,0x6d
1100b38a:	imul   DWORD PTR [ebx+0x41]
1100b38d:	mov    edi,0x182d3f07
1100b392:	xchg   esp,eax
1100b393:	mov    ah,0x0
1100b395:	sbb    edx,DWORD PTR [ebx]
1100b397:	pusha  
1100b398:	jmp    0x1100b3a0
1100b39a:	pop    eax
1100b39b:	xor    dh,BYTE PTR [eax]
1100b39d:	(bad)  
1100b39f:	push   ss
1100b3a0:	mov    eax,0x1fc4aee7
1100b3a5:	pop    ebx
1100b3a6:	idiv   BYTE PTR [edx]
1100b3a8:	add    al,al
1100b3aa:	mov    bh,0xba
1100b3ac:	push   cs
1100b3ad:	mov    dh,0x45
1100b3af:	add    DWORD PTR [eax+0x29],esp
1100b3b2:	fnstcw WORD PTR [esi+0x48]
1100b3b5:	adc    DWORD PTR [esi-0x3f],edi
1100b3b8:	out    0x8f,al
1100b3ba:	ins    BYTE PTR es:[edi],dx
1100b3bb:	aas    
1100b3bc:	or     bh,BYTE PTR ds:0x468cfb07
1100b3c2:	lea    ebp,[ebx-0x36]
1100b3c5:	dec    eax
1100b3c6:	inc    eax
1100b3c7:	fidivr DWORD PTR [esi-0x3568b250]
1100b3cd:	popf   
1100b3ce:	mov    edi,0xc82fc719
1100b3d3:	pmullw mm0,QWORD PTR [eax]
1100b3d6:	or     ch,BYTE PTR [edx]
1100b3d8:	mov    edi,0x37eb4dfe
1100b3dd:	mov    dh,0x33
1100b3df:	stc    
1100b3e0:	add    DWORD PTR [esi],esp
1100b3e2:	sub    BYTE PTR [esi-0x29],0xdf
1100b3e6:	jo     0x1100b3eb
1100b3e8:	mov    esp,0x2c077a34
1100b3ed:	or     BYTE PTR [eax+0x2d],bl
1100b3f0:	push   0xfffffffb
1100b3f2:	icebp  
1100b3f3:	push   cs
1100b3f4:	or     al,0x0
1100b3f6:	or     BYTE PTR [edi+0x41],0x13
1100b3fa:	add    dh,ch
1100b3fc:	in     eax,dx
1100b3fd:	pop    eax
1100b3fe:	dec    eax
1100b3ff:	dec    ebx
1100b400:	mov    al,0x0
1100b402:	mov    al,ds:0x3cbb83c3
1100b407:	add    DWORD PTR [ebx+0x15],ebx
1100b40a:	add    BYTE PTR [esi+eax*1+0x6b700040],dh
1100b411:	xlat   BYTE PTR ds:[ebx]
1100b412:	shl    DWORD PTR [esi+0x362c0018],0xe1
1100b419:	mov    gs,WORD PTR [bx+di+0x1b]
1100b41d:	(bad)
1100b420:	lds    edi,FWORD PTR [esp+esi*4]
1100b423:	push   es
1100b424:	pusha  
1100b425:	ins    BYTE PTR es:[edi],dx
1100b426:	push   esp
1100b428:	mov    bl,0x83
1100b42a:	mov    dh,BYTE PTR [eax+eax*4]
1100b42d:	add    edx,eax
1100b42f:	fwait
1100b430:	mov    ebp,0x50d23684
1100b435:	add    DWORD PTR [edi-0x7],ecx
1100b438:	mov    cl,0x28
1100b43a:	add    DWORD PTR ds:0x67814509,ebp
1100b440:	and    cl,dh
1100b442:	int3   
1100b443:	loop   0x1100b43f
1100b445:	push   es
1100b446:	sbb    al,0xdf
1100b448:	repnz sbb edx,ecx
1100b44b:	inc    ebp
1100b44c:	pop    eax
1100b44d:	fwait
1100b44e:	add    esp,DWORD PTR [edi]
1100b450:	fisubr DWORD PTR [edx+eax*2]
1100b453:	mov    ds:0x714b5001,eax
1100b458:	add    ah,BYTE PTR [edi]
1100b45a:	das    
1100b45b:	sub    al,0x4e
1100b45d:	sar    BYTE PTR [ebx+ebx*4],0xc5
1100b461:	outs   dx,BYTE PTR ds:[esi]
1100b462:	add    eax,DWORD PTR [eax]
1100b464:	loopne 0x1100b419
1100b466:	shl    BYTE PTR [ebp+edi*8+0x49],1
1100b46a:	fsubr  st,st(7)
1100b46c:	xor    DWORD PTR [edi+0x1934001a],ebx
1100b472:	test   al,0xa3
1100b474:	add    ecx,DWORD PTR [ebx+0x51]
1100b477:	sbb    ebx,0xfb680014
1100b47d:	aas    
1100b47e:	sub    al,0xb7
1100b480:	je     0x1100b49f
1100b482:	ins    BYTE PTR es:[edi],dx
1100b483:	mov    eax,DWORD PTR [eax]
1100b485:	rcl    BYTE PTR [esi+0x463bfb60],0x60
1100b48c:	xor    edx,DWORD PTR [ecx-0x59]
1100b48f:	cmp    al,0x28
1100b491:	adc    al,0xd2
1100b493:	mov    dh,0xc
1100b495:	mov    esp,0x64002cd0
1100b49a:	not    eax
1100b49c:	xor    eax,0xc6fcf7ea
1100b4a1:	and    BYTE PTR [eax],dh
1100b4a3:	test   ch,ch
1100b4a5:	das    
1100b4a6:	cmp    eax,0xa805133b
1100b4ab:	(bad)  
1100b4ac:	xlat   BYTE PTR ds:[ebx]
1100b4ad:	or     dh,BYTE PTR [eax]
1100b4af:	inc    esi
1100b4b0:	mov    ds:0x7510ccc9,eax
1100b4b5:	in     al,dx
1100b4b6:	xchg   BYTE PTR [edi-0x60],dh
1100b4b9:	jecxz  0x1100b4d5
1100b4bb:	cmp    DWORD PTR [ecx],0xffffffb0
1100b4be:	sub    eax,0x6077b
1100b4c3:	shl    bh,0xa1
1100b4c6:	test   eax,0xa0006bfe
1100b4cb:	lds    ebx,FWORD PTR [edx+0x2c001601]
1100b4d1:	cmpxchg BYTE PTR [ebp+0x3],cl
1100b4d5:	adc    dh,0x0
1100b4d8:	xchg   esi,eax
1100b4d9:	push   ss
1100b4da:	add    BYTE PTR [esi],dl
1100b4dc:	test   ebp,ebp
1100b4de:	scas   eax,DWORD PTR es:[edi]
1100b4df:	ins    DWORD PTR es:[edi],dx
1100b4e0:	dec    BYTE PTR [edi-0x41]
1100b4e3:	dec    ebx
1100b4e4:	aam    0xfe
1100b4e6:	mov    cs,WORD PTR [esi+0x13]
1100b4e9:	fnstcw WORD PTR [esi+0x45]
1100b4ec:	clc    
1100b4ed:	cmp    DWORD PTR [ebp-0x12],esi
1100b4f0:	ds jg  0x1100b4ae
1100b4f3:	fimul  WORD PTR [esi-0x62]
1100b4f6:	scas   al,BYTE PTR es:[edi]
1100b4f7:	mov    WORD PTR [esi+0x21634c96],ss
1100b4fd:	jb     0x1100b56d
1100b4ff:	sar    BYTE PTR [ecx+0x24],1
1100b502:	cmp    BYTE PTR [ecx],dh
1100b504:	pop    ss
1100b505:	push   0x12
1100b507:	enter  0x6256,0x12
1100b50b:	xchg   BYTE PTR [edi+0x1c],dh
1100b50e:	outs   dx,DWORD PTR ds:[esi]
1100b50f:	mov    ss,edi
1100b511:	push   ebp
1100b512:	jo     0x1100b558
1100b514:	pop    ds
1100b515:	xchg   edi,eax
1100b516:	mov    ebp,0xa1172503
1100b51b:	or     DWORD PTR [edi],edi
1100b51d:	mov    ds,esi
1100b51f:	and    DWORD PTR [edi-0x7ef95942],0x40e6dcdf
1100b529:	pusha  
1100b52a:	add    BYTE PTR [eax],al
1100b52c:	cld    
1100b52d:	js     0xd00a6c63
1100b533:	push   es
1100b534:	add    DWORD PTR [ebx],ecx
1100b536:	add    BYTE PTR [esp+eax*1-0x6a],al
1100b53a:	mov    dl,0x4
1100b53c:	mov    bh,0x29
1100b53e:	add    BYTE PTR [eax+0x9614001],dh
1100b544:	adc    ebx,DWORD PTR [edi-0x22]
1100b547:	fdiv   QWORD PTR [ebp-0x50]
1100b54a:	inc    ebp
1100b54b:	add    eax,0xfc20c580
1100b550:	scas   al,BYTE PTR es:[edi]
1100b551:	ss ins BYTE PTR es:[edi],dx
1100b553:	aas    
1100b554:	fbstp  TBYTE PTR [ebp+0x73]
1100b557:	xchg   esp,eax
1100b558:	bound  edx,QWORD PTR [edi-0x21]
1100b55b:	jle    0x1100b558
1100b55d:	jne    0x1100b559
1100b55f:	(bad)  
1100b560:	cdq    
1100b561:	add    ebp,DWORD PTR [eax]
1100b563:	clc    
1100b564:	jmp    0x1100b5cf
1100b566:	les    ebx,FWORD PTR [esp+eax*2]
1100b569:	(bad)  
1100b56a:	gs mov ebx,0x740dc7b6
1100b570:	(bad)  
1100b571:	add    al,0x84
1100b573:	add    al,BYTE PTR [edi]
1100b575:	rcl    BYTE PTR ds:0x4d2508b,1
1100b57b:	in     al,dx
1100b57c:	xor    eax,0xdc96b5f6
1100b581:	test   al,ch
1100b583:	sbb    eax,0xe0772098
1100b588:	push   ecx
1100b589:	dec    edi
1100b58a:	jge    0x1100b5b9
1100b58c:	in     al,dx
1100b58d:	mov    edi,0x302698d
1100b592:	add    BYTE PTR [eax],ah
1100b594:	fdivr  DWORD PTR [edx]
1100b596:	(bad)  
1100b597:	out    dx,eax
1100b598:	jg     0x1100b5e9
1100b59a:	(bad)  
1100b59b:	mov    ds:0x3a2c2001,al
1100b5a0:	push   ds
1100b5a1:	rol    BYTE PTR [esi],0x4
1100b5a4:	ins    DWORD PTR es:[edi],dx
1100b5a5:	jae    0x1100b5a7
1100b5a7:	pusha  
1100b5a8:	cmp    DWORD PTR [eax+0x5372f555],eax
1100b5ae:	xlat   BYTE PTR ds:[ebx]
1100b5af:	rcl    DWORD PTR [esi],0xd
1100b5b2:	add    BYTE PTR [esi],dl
1100b5b4:	inc    ebx
1100b5b5:	in     eax,dx
1100b5b6:	(bad)  
1100b5b7:	lods   al,BYTE PTR ds:[esi]
1100b5b8:	mov    esi,0x467e122
1100b5bd:	adc    DWORD PTR [edi],esp
1100b5bf:	jmp    0xde6b:0x2fed894
1100b5c6:	xor    BYTE PTR [ecx],al
1100b5c8:	or     ch,BYTE PTR [edx-0x4f]
1100b5cb:	push   edi
1100b5cc:	es inc eax
1100b5ce:	ret    
1100b5cf:	mov    eax,ds:0xa7502438
1100b5d4:	mov    cl,0x3a
1100b5d6:	push   edi
1100b5d7:	mov    bh,0x87
1100b5d9:	call   0xea8c:0x6fceda00
1100b5e0:	jmp    0xc14:0xf3060013
1100b5e7:	ss sbb eax,0x8a8b10d7
1100b5ed:	adc    al,0x89
1100b5ef:	shl    DWORD PTR [esi+0x5b],0x14
1100b5f3:	out    dx,eax
1100b5f4:	inc    eax
1100b5f5:	loope  0x1100b5d5
1100b5f7:	pop    ss
1100b5f8:	rol    BYTE PTR [esi],cl
1100b5fa:	add    al,al
1100b5fc:	push   edi
1100b5fd:	mov    eax,ds:0x2d7fbe9
1100b602:	mov    edi,0x10009a1e
1100b607:	xor    al,0x1
1100b609:	ins    DWORD PTR es:[edi],dx
1100b60a:	add    al,BYTE PTR [edi+ecx*2-0x4c93fe35]
1100b611:	add    BYTE PTR [eax+0x1a580cd],ah
1100b617:	add    BYTE PTR [ebp-0x4d],0xf9
1100b61b:	fistp  WORD PTR [ebp+0x7766f4a7]
1100b621:	sub    eax,0xf784389d
1100b626:	pop    esi
1100b627:	inc    eax
1100b628:	ins    BYTE PTR es:[edi],dx
1100b629:	aas    
1100b62a:	cwde   
1100b62b:	xchg   ecx,eax
1100b62c:	shl    DWORD PTR [ebp+esi*8+0x55],cl
1100b630:	push   ebp
1100b631:	(bad)
1100b634:	test   BYTE PTR [ebx],dl
1100b636:	and    al,0x94
1100b638:	aaa    
1100b639:	and    ebx,eax
1100b63b:	push   0xe4f8f99b
1100b640:	lods   eax,DWORD PTR ds:[esi]
1100b641:	lea    edi,[esi]
1100b643:	and    BYTE PTR [ebx],bl
1100b645:	push   eax
1100b646:	scas   eax,DWORD PTR es:[edi]
1100b647:	mov    bh,0x2a
1100b649:	jl     0x1100b666
1100b64b:	or     BYTE PTR [edx+eiz*1],cl
1100b64e:	add    DWORD PTR [ecx-0x61],esi
1100b651:	dec    esi
1100b652:	int    0x2
1100b654:	add    cl,BYTE PTR [eax]
1100b656:	test   ah,bl
1100b658:	add    DWORD PTR [esp+ebp*1-0x6e408c2c],ebp
1100b65f:	sbb    BYTE PTR [edx+edi*8+0x1b],bh
1100b663:	popa   
1100b664:	inc    DWORD PTR [ebp-0x2ee9f888]
1100b66a:	inc    ebp
1100b66b:	cmp    BYTE PTR [eax],al
1100b66d:	add    BYTE PTR [esi+0x58003906],bh
1100b673:	cmc    
1100b674:	fild   WORD PTR [edx]
1100b676:	and    BYTE PTR ds:0x94003502,0x62
1100b67d:	add    DWORD PTR [esi+0x26d00049],esi
1100b683:	rcl    BYTE PTR [esi+0xaa58005],0xef
1100b68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100b68b:	fdivr  DWORD PTR [esi-0x56]
1100b68e:	in     al,0x13
1100b690:	test   BYTE PTR [edi+0x1b2f7225],bh
1100b696:	inc    ebp
1100b697:	lea    eax,[esi]
1100b699:	pusha  
1100b69a:	test   DWORD PTR [edi+edx*4+0x7dfd404],ebp
1100b6a1:	jp     0x1100b6aa
1100b6a3:	hlt    
1100b6a4:	repz call 0x762ee7b5
1100b6aa:	adc    eax,0x5d006976
1100b6af:	and    BYTE PTR [eax-0x80],al
1100b6b2:	xlat   BYTE PTR ds:[ebx]
1100b6b3:	mov    al,0xff
1100b6b5:	mov    ebx,0x20408e04
1100b6ba:	les    ecx,FWORD PTR [ecx]
1100b6bc:	or     al,0xac
1100b6be:	xor    DWORD PTR [eax],ebx
1100b6c0:	inc    ecx
1100b6c1:	loopne 0x1100b68b
1100b6c3:	pop    edx
1100b6c4:	adc    edi,DWORD PTR [eax]
1100b6c6:	fs jmp 0x1100b730
1100b6c9:	adc    DWORD PTR [esi],ecx
1100b6cb:	add    BYTE PTR [eax-0x8f0de55],al
1100b6d1:	sub    eax,0x40810001
1100b6d6:	mov    DWORD PTR [eax],ecx
1100b6d8:	sub    al,0x99
1100b6da:	add    bl,bl
1100b6dc:	add    eax,0x60179000
1100b6e1:	retf   
1100b6e2:	add    eax,eax
1100b6e4:	push   edx
1100b6e5:	(bad)  
1100b6e6:	not    bh
1100b6e8:	popf   
1100b6e9:	and    al,0xb2
1100b6eb:	std    
1100b6ec:	test   al,0xf6
1100b6ee:	addr16 inc edx
1100b6f0:	aad    0xa1
1100b6f2:	mov    ?,WORD PTR [edi]
1100b6f4:	xor    al,0x80
1100b6f6:	mov    ?,WORD PTR [eax]
1100b6f8:	adc    dl,0x7d
1100b6fb:	and    BYTE PTR gs:[eax-0x72],ah
1100b6ff:	cmp    eax,0x40b01b91
1100b704:	fisub  DWORD PTR cs:[ebx-0x4b]
1100b708:	xchg   ebp,eax
1100b709:	sbb    eax,0x91102803
1100b70e:	lods   eax,DWORD PTR ds:[esi]
1100b70f:	scas   eax,DWORD PTR es:[edi]
1100b710:	mov    al,fs:0xc1f7a006
1100b716:	arpl   si,bx
1100b718:	jl     0x1100b70d
1100b71a:	int    0xfd
1100b71c:	popa   
1100b71d:	ret    
1100b71e:	jmp    0xf177e7ed
1100b723:	mov    ch,0x5b
1100b725:	popf   
1100b726:	sbb    BYTE PTR [eax+ecx*1],bl
1100b729:	add    BYTE PTR [ebp+0x1a],ch
1100b72c:	sar    dl,0xc2
1100b72f:	not    DWORD PTR [edx+0x40]
1100b732:	nop
1100b733:	dec    esi
1100b734:	divps  xmm0,XMMWORD PTR [esi]
1100b737:	sbb    al,0x16
1100b73a:	sub    eax,edx
1100b73c:	dec    edi
1100b73d:	mov    bl,0xfd
1100b73f:	lds    ebx,FWORD PTR [ebx+0x4d]
1100b742:	(bad)  
1100b744:	mov    al,0xc3
1100b746:	test   ebp,ebp
1100b748:	outs   dx,DWORD PTR ds:[esi]
1100b749:	outs   dx,BYTE PTR ds:[esi]
1100b74a:	(bad)  
1100b74b:	add    al,0x80
1100b74d:	dec    esp
1100b74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100b74f:	jbe    0x1100b6ff
1100b751:	cmc    
1100b752:	inc    ebp
1100b753:	adc    al,0xfd
1100b755:	repnz push ss
1100b757:	and    al,0x68
1100b759:	sbb    edx,DWORD PTR [eax+eiz*8]
1100b75c:	mov    DWORD PTR [ebp+0x1b450000],edi
1100b762:	jle    0x1100b7a2
1100b764:	jne    0x1100b767
1100b766:	sbb    dl,BYTE PTR [ecx+0x68e71d85]
1100b76c:	fsubr  QWORD PTR [ebx-0x5affa0a3]
1100b772:	loope  0x1100b799
1100b774:	(bad)  
1100b775:	test   eax,0xf5d6c8a8
1100b77a:	push   cs
1100b77b:	or     al,0x0
1100b77d:	sub    BYTE PTR [ebx-0x5f],0x5d
1100b781:	add    edx,eax
1100b783:	mov    ds:0x1d0005bf,eax
1100b788:	or     esi,DWORD PTR [eax+0x5b59000c]
1100b78e:	ins    BYTE PTR es:[edi],dx
1100b78f:	mov    dh,0xdf
1100b791:	sbb    al,0xd3
1100b793:	mov    dh,0x75
1100b795:	xchg   DWORD PTR ds:0x4a98e706,ebx
1100b79b:	ds stc 
1100b79d:	adc    esi,DWORD PTR [ecx-0x7d]
1100b7a0:	inc    edi
1100b7a1:	(bad)
1100b7a4:	add    BYTE PTR [ecx-0x1df0cff7],bh
1100b7aa:	scas   eax,DWORD PTR es:[edi]
1100b7ab:	sti    
1100b7ac:	ins    DWORD PTR es:[edi],dx
1100b7ad:	int    0x63
1100b7af:	lahf   
1100b7b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100b7b1:	cmp    al,0x5e
1100b7b3:	mov    eax,ds:0x3c72524d
1100b7b8:	xchg   esp,eax
1100b7b9:	pop    ss
1100b7ba:	jnp    0x1100b790
1100b7bc:	xchg   ecx,eax
1100b7bd:	pop    ebx
1100b7be:	iret   
1100b7bf:	cmp    esi,DWORD PTR [eax]
1100b7c1:	adc    BYTE PTR [eax],al
1100b7c3:	ins    BYTE PTR es:[edi],dx
1100b7c4:	cld    
1100b7c5:	mov    edi,0xe7e0136
1100b7ca:	in     eax,0x78
1100b7cc:	and    BYTE PTR [ebp+0x0],0x28
1100b7d0:	mov    dh,0x5
1100b7d2:	or     edi,edi
1100b7d4:	sub    al,0x86
1100b7d6:	not    DWORD PTR [edx]
1100b7d8:	fisttp DWORD PTR [edi]
1100b7da:	xor    al,0x24
1100b7dc:	push   ss
1100b7dd:	cwde   
1100b7de:	cld    
1100b7df:	shl    dh,0x3f
1100b7e2:	ss addr16 sti 
1100b7e5:	stc    
1100b7e6:	mov    bh,0x42
1100b7e8:	sbb    BYTE PTR [edx+edi*2-0x5a11bb20],ch
1100b7ef:	jmp    0x1100b78b
1100b7f1:	cmp    al,0xf7
1100b7f3:	mov    esi,0x6dc82c71
1100b7f8:	out    dx,eax
1100b7f9:	(bad)  
1100b7fa:	lds    esp,FWORD PTR [eax-0x5d]
1100b7fd:	imul   ebx,eax,0x149d0f63
1100b803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100b804:	or     esi,DWORD PTR [eax+0x5605b94a]
1100b80a:	and    ebp,DWORD PTR [ecx-0x2d]
1100b80d:	js     0x1100b859
1100b80f:	imul   DWORD PTR [edx+0x5bfd4ac9]
1100b815:	loopne 0x1100b81b
1100b817:	dec    esi
1100b818:	mov    ds:0xe1b01dc,al
1100b81d:	popf   
1100b81e:	cmp    eax,0x622a77f
1100b823:	xchg   edi,eax
1100b824:	fidivr WORD PTR [ebx]
1100b826:	xor    BYTE PTR [eax],dl
1100b828:	add    BYTE PTR [edx+0x26],cl
1100b82b:	sbb    BYTE PTR [esi],0xf9
1100b82e:	mov    ch,0x29
1100b830:	mov    al,0xc
1100b832:	add    BYTE PTR [ebp+0x5fc23e6d],ch
1100b838:	(bad)  
1100b839:	lock jle 0x1100b878
1100b83c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100b83d:	test   bh,bh
1100b83f:	int3   
1100b840:	es fcmovnu st,st(7)
1100b843:	and    dl,al
1100b845:	mov    edx,0xa5c34798
1100b84a:	xor    eax,0x498f4a20
1100b84f:	rcl    dl,0x8b
1100b852:	mov    al,0xc9
1100b854:	inc    eax
1100b855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100b856:	jecxz  0x1100b866
1100b858:	ror    DWORD PTR [edx],1
1100b85a:	cmp    cl,dh
1100b85c:	fbstp  TBYTE PTR [ebp+0x6f]
1100b85f:	mov    dl,0x69
1100b861:	(bad)  [ebx]
1100b863:	mov    al,ds:0x7c55a58f
1100b868:	jle    0x1100b868
1100b86a:	sub    eax,0xf35455d7
1100b86f:	in     eax,dx
1100b870:	mov    dh,0x5d
1100b872:	sahf   
1100b873:	mov    esp,ecx
1100b875:	cmp    esi,DWORD PTR [eax]
1100b877:	jl     0x1100b857
1100b879:	and    esp,0xec03781d
1100b87f:	call   FWORD PTR [eax+0x18105a5]
1100b885:	add    al,dh
1100b887:	jne    0x1100b8f1
1100b889:	inc    esi
1100b88a:	add    DWORD PTR [esi],ebp
1100b88c:	add    eax,DWORD PTR [eax]
1100b88e:	mov    ch,0xc1
1100b890:	add    BYTE PTR [eax-0x2e003dd8],dh
1100b896:	pop    edx
1100b897:	clc    
1100b898:	or     edx,DWORD PTR [ebp-0x3dbdf584]
1100b89e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100b89f:	mov    ebx,0x3d9fdb35
1100b8a4:	test   DWORD PTR [ecx],ecx
1100b8a6:	push   ebp
1100b8a7:	neg    BYTE PTR [esi]
1100b8a9:	shl    DWORD PTR [ecx+0x5f340811],cl
1100b8af:	push   ebp
1100b8b0:	jnp    0x1100b8b3
1100b8b2:	inc    dx
1100b8b4:	xlat   BYTE PTR ds:[ebx]
1100b8b5:	sbb    al,0x2
1100b8b7:	(bad)  
1100b8ba:	xchg   BYTE PTR [edx],ch
1100b8bc:	iret   
1100b8bd:	jnp    0x1100b8d5
1100b8bf:	mov    ds:0xb069b97a,eax
1100b8c4:	cmp    DWORD PTR [eax-0x506e3f66],eax
1100b8ca:	pop    edi
1100b8cb:	cwde   
1100b8cc:	ja     0x1100b88e
1100b8ce:	fiadd  WORD PTR [ebx+0x4f]
1100b8d1:	pop    ebx
1100b8d2:	push   es
1100b8d3:	and    BYTE PTR [ebp+0xb058000],0x7f
1100b8da:	pusha  
1100b8db:	sti    
1100b8dc:	iret   
1100b8dd:	stos   BYTE PTR es:[edi],al
1100b8de:	test   edi,edi
1100b8e0:	aam    0xb2
1100b8e2:	lahf   
1100b8e3:	fbstp  TBYTE PTR [esp+eiz*8+0x50]
1100b8e7:	shl    BYTE PTR [ebx],0xa8
1100b8ea:	std    
1100b8eb:	sti    
1100b8ec:	add    al,0xb5
1100b8ee:	pop    ds
1100b8ef:	xlat   BYTE PTR ds:[ebx]
1100b8f0:	aaa    
1100b8f1:	enter  0x1eba,0x21
1100b8f5:	call   0x122d7e1f
1100b8fa:	ss push eax
1100b8fc:	jo     0x1100b8eb
1100b8fe:	icebp  
1100b8ff:	mov    ah,0xcb
1100b901:	cs sbb eax,0x4338fdb6
1100b907:	dec    ebx
1100b908:	xor    BYTE PTR [ebp-0x4a],0x96
1100b90c:	sar    DWORD PTR [ebx-0x664985bc],1
1100b912:	aaa    
1100b913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100b914:	jmp    0x1100b900
1100b916:	jb     0x1100b935
1100b918:	push   cs
1100b919:	and    al,BYTE PTR [esi]
1100b91b:	shl    DWORD PTR [ebx+ebx*2+0x14],1
1100b91f:	out    dx,eax
1100b920:	or     BYTE PTR [ecx-0x34951382],0x0
1100b927:	mov    al,0xa5
1100b929:	add    DWORD PTR [eax-0x4f],esp
1100b92c:	or     BYTE PTR [edi],bh
1100b92e:	sub    bl,ch
1100b930:	pop    ebp
1100b931:	cmp    bh,BYTE PTR [esi-0x275a2e86]
1100b937:	jle    0x1100b98b
1100b939:	ja     0x1100b9b6
1100b93b:	ins    DWORD PTR es:[edi],dx
1100b93c:	addr16 cmc 
1100b93e:	shr    BYTE PTR [ebp-0x90242b1],0xca
1100b945:	mov    edi,0xeaeab237
1100b94a:	into   
1100b94b:	dec    esp
1100b94c:	jl     0x1100b990
1100b94e:	clc    
1100b94f:	mov    eax,0x1dc01377
1100b954:	ja     0x1100b9d1
1100b956:	mov    eax,0x3f0067fd
1100b95b:	scas   eax,DWORD PTR es:[edi]
1100b95c:	mov    ebx,0x154d86cb
1100b961:	ins    BYTE PTR es:[edi],dx
1100b962:	cwde   
1100b963:	cmc    
1100b964:	cmc    
1100b965:	addr16 std 
1100b967:	fcmovnb st,st(6)
1100b969:	cli    
1100b96a:	jae    0x1100b91f
1100b96c:	xchg   ebp,esi
1100b96e:	sbb    eax,DWORD PTR [edx+0x27]
1100b971:	div    DWORD PTR [eax+0x610b7eba]
1100b977:	pop    ecx
1100b978:	mov    bl,0x12
1100b97a:	pusha  
1100b97b:	aad    0x8c
1100b97d:	adc    DWORD PTR [ebp+0x6ac3b2f5],0x7
1100b984:	cmp    edx,esi
1100b986:	retf   
1100b987:	pop    esi
1100b988:	mov    ebx,0xfef3d878
1100b98d:	and    ebx,eax
1100b98f:	popa   
1100b990:	lea    eax,[ebx+0x4d7dd729]
1100b996:	rol    BYTE PTR [ebx],cl
1100b998:	pop    esp
1100b999:	push   cs
1100b99a:	mov    ecx,fs
1100b99c:	fcmovbe st,st(0)
1100b99e:	popf   
1100b99f:	fxch   st(1)
1100b9a1:	add    DWORD PTR [eax+edi*2-0x2f594bd6],esi
1100b9a8:	(bad)  
1100b9a9:	pop    edx
1100b9aa:	jae    0x1100b9b3
1100b9ac:	lods   al,BYTE PTR ds:[esi]
1100b9ad:	mov    al,ds:0xc0ee712e
1100b9b2:	xor    al,BYTE PTR [eax]
1100b9b4:	ins    BYTE PTR es:[edi],dx
1100b9b5:	dec    ecx
1100b9b6:	add    al,bl
1100b9b8:	adc    dh,BYTE PTR [ecx+0x548476fd]
1100b9be:	stos   BYTE PTR es:[edi],al
1100b9bf:	jl     0x1100ba32
1100b9c1:	xchg   esi,eax
1100b9c2:	pop    esi
1100b9c3:	sbb    ch,BYTE PTR [ecx-0x6c2770df]
1100b9c9:	imul   ecx,edx,0xffffff8f
1100b9cc:	add    DWORD PTR [eax],eax
1100b9ce:	cdq    
1100b9cf:	and    BYTE PTR [esi+eax*2],dh
1100b9d2:	jns    0x1100b9b0
1100b9d4:	into   
1100b9d5:	add    dx,WORD PTR [esi-0x5fadfe8e]
1100b9dc:	adc    al,al
1100b9de:	dec    edi
1100b9df:	xlat   BYTE PTR ds:[ebx]
1100b9e0:	push   edi
1100b9e1:	jo     0x1100b9ae
1100b9e3:	ins    DWORD PTR es:[edi],dx
1100b9e4:	push   ds
1100b9e5:	mov    esi,0xdf05677f
1100b9ea:	std    
1100b9eb:	mov    cl,0x87
1100b9ed:	lahf   
1100b9ee:	fnstsw WORD PTR [ebx]
1100b9f0:	cmp    BYTE PTR [ecx-0x2626784f],0x71
1100b9f7:	in     al,dx
1100b9f8:	loopne 0x1100b9dd
1100b9fa:	icebp  
1100b9fb:	cmp    BYTE PTR [esi-0x1a30f57e],bh
1100ba01:	adc    DWORD PTR [edx+ebp*1],esp
1100ba04:	lahf   
1100ba05:	pusha  
1100ba06:	or     BYTE PTR [ecx+0x23],dh
1100ba09:	sbb    eax,0x424e51da
1100ba0e:	pop    eax
1100ba0f:	pop    ds
1100ba10:	into   
1100ba11:	jmp    0xd73f6477
1100ba16:	aam    0xf4
1100ba18:	xor    al,0xec
1100ba1a:	mov    dl,0x76
1100ba1c:	push   ss
1100ba1d:	push   ds
1100ba1e:	hlt    
1100ba1f:	adc    BYTE PTR [ecx],0xec
1100ba22:	mov    bl,0xab
1100ba24:	add    DWORD PTR [ebx-0x113ee40a],0xfffffff7
1100ba2b:	ja     0x1100ba5d
1100ba2d:	mov    dl,0x64
1100ba2f:	arpl   bx,cx
1100ba31:	sti    
1100ba32:	mov    eax,ds:0x9c0ba0e7
1100ba37:	je     0x1100bab2
1100ba39:	cmp    BYTE PTR [ecx+ebx*2-0x32e9a530],dh
1100ba40:	in     al,dx
1100ba41:	shr    ecx,cl
1100ba43:	sbb    eax,0xb0c7db30
1100ba48:	loope  0x1100ba6f
1100ba4a:	xor    BYTE PTR [edi],al
1100ba4c:	xchg   esi,eax
1100ba4d:	add    DWORD PTR [eax+0x4b],esp
1100ba50:	add    eax,eax
1100ba52:	and    al,BYTE PTR ds:0xf3148f9
1100ba58:	repz xor al,0x8c
1100ba5b:	or     bh,bh
1100ba5d:	fcom   DWORD PTR [eax-0x40]
1100ba60:	mov    bl,0xad
1100ba62:	je     0x1100ba1b
1100ba64:	imul   ebp,DWORD PTR [edi+0x6046dbba],0x15
1100ba6b:	jg     0x1100ba5c
1100ba6d:	fistp  DWORD PTR [edi]
1100ba6f:	fistp  DWORD PTR [ebp-0x723c215]
1100ba75:	or     DWORD PTR [edx],0x7e
1100ba78:	js     0x1100ba21
1100ba7a:	xchg   DWORD PTR [ebx-0x11],ebx
1100ba7d:	or     BYTE PTR [ebx-0x10fd7045],ah
1100ba83:	imul   esi,DWORD PTR [eax+ebp*4],0xffffffc2
1100ba87:	xor    ebp,DWORD PTR [eax-0xb079610]
1100ba8d:	cmp    al,dh
1100ba8f:	popa   
1100ba90:	hlt    
1100ba91:	or     eax,0xb0961d02
1100ba96:	or     eax,0x547c5602
1100ba9b:	hlt    
1100ba9c:	mov    DWORD PTR [edi-0x543e9430],ecx
1100baa2:	and    BYTE PTR [edx],al
1100baa4:	dec    esp
1100baa5:	mov    eax,0x9f4c7480
1100baaa:	pop    esi
1100baab:	arpl   WORD PTR [ebp+0x46fd74cd],di
1100bab1:	push   edi
1100bab2:	scas   eax,DWORD PTR es:[edi]
1100bab3:	jb     0x1100baa5
1100bab5:	lock mov ebp,0xcdddf601
1100babb:	shl    DWORD PTR [ecx],0xf
1100babe:	sbb    al,cl
1100bac0:	add    esi,DWORD PTR [esi+0x1e]
1100bac3:	in     eax,0x17
1100bac5:	pop    edx
1100bac6:	add    bl,dl
1100bac8:	and    al,BYTE PTR [eax]
1100baca:	mov    ah,0xdc
1100bacc:	out    dx,eax
1100bacd:	nop
1100bace:	fadd   DWORD PTR [ecx]
1100bad0:	fisttp DWORD PTR [edx+0x20c503b9]
1100bad6:	stos   BYTE PTR es:[edi],al
1100bad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100bad8:	icebp  
1100bad9:	push   cs
1100bada:	sub    al,0x3
1100badc:	rcl    BYTE PTR [esi+0x11458000],0xfe
1100bae3:	xor    esi,DWORD PTR [ecx]
1100bae5:	ret    0x2e6f
1100bae8:	pop    ds
1100bae9:	stc    
1100baea:	or     eax,DWORD PTR [edx+0x4a]
1100baed:	ins    BYTE PTR es:[edi],dx
1100baee:	aas    
1100baef:	adc    eax,0x5d1128f3
1100baf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100baf5:	add    DWORD PTR [esi+ebp*4-0x369890af],edx
1100bafc:	scas   eax,DWORD PTR es:[edi]
1100bafd:	dec    edx
1100bafe:	stos   DWORD PTR es:[edi],eax
1100baff:	mov    bh,0x5
1100bb01:	int    0x23
1100bb03:	stos   BYTE PTR es:[edi],al
1100bb04:	into   
1100bb05:	jne    0x1100baee
1100bb07:	pop    esp
1100bb08:	mov    edi,0xbe37c3c1
1100bb0d:	xor    ebp,DWORD PTR [esi-0x51c0f0e9]
1100bb13:	mov    ebx,0x2d5cdcc3
1100bb18:	enter  0xdd15,0x27
1100bb1c:	in     al,0x2
1100bb1e:	pop    ebp
1100bb1f:	add    eax,0x8e2af61
1100bb24:	dec    esi
1100bb25:	add    BYTE PTR [eax],dl
1100bb27:	inc    edi
1100bb28:	je     0x1100bb26
1100bb2a:	lods   eax,DWORD PTR ds:[esi]
1100bb2b:	repnz sub edx,edi
1100bb2e:	mov    al,0xf2
1100bb30:	sbb    BYTE PTR [esi-0x78],0x64
1100bb34:	pop    ds
1100bb35:	xchg   edi,edi
1100bb37:	inc    ebx
1100bb38:	xchg   edi,eax
1100bb39:	push   ds
1100bb3a:	repz enter 0xc72b,0x4
1100bb3f:	fsubr  QWORD PTR [esi]
1100bb41:	add    al,BYTE PTR [ecx]
1100bb43:	dec    edx
1100bb44:	gs push edx
1100bb46:	adc    al,0x82
1100bb48:	xor    ah,dl
1100bb4a:	ret    0x9b53
1100bb4d:	adc    bh,bl
1100bb4f:	out    dx,al
1100bb50:	ds add eax,0x4743f87
1100bb56:	xchg   DWORD PTR [edi],edi
1100bb58:	(bad)
1100bb5c:	mov    fs,WORD PTR [eax-0x2e14a5cc]
1100bb62:	jl     0x1100bbcc
1100bb64:	mov    ecx,0x8c820233
1100bb69:	retf   
1100bb6a:	loopne 0x1100bbe3
1100bb6c:	fild   QWORD PTR [ecx+esi*2+0x42]
1100bb70:	push   edx
1100bb71:	pop    ebx
1100bb72:	jb     0x1100bb30
1100bb74:	and    eax,0xc0813a6c
1100bb79:	xchg   esi,eax
1100bb7a:	sub    edi,DWORD PTR [ecx]
1100bb7c:	mov    esi,0xd8b000c
1100bb81:	add    BYTE PTR [ebx+0x3babde1d],cl
1100bb87:	test   DWORD PTR [ebp+0x38],ebp
1100bb8a:	repnz pop edi
1100bb8c:	and    BYTE PTR [ebp-0x14b94445],0xa1
1100bb93:	test   BYTE PTR [esi-0x7],dl
1100bb96:	mov    DWORD PTR [ebp-0xab24677],edx
1100bb9c:	imul   edi,DWORD PTR [esi+ebp*8+0x2a5ebe7b],0xfffffff8
1100bba4:	dec    BYTE PTR [edi+0x7c]
1100bba7:	sub    eax,0x2023ec8
1100bbac:	ins    DWORD PTR es:[edi],dx
1100bbad:	pop    ecx
1100bbae:	icebp  
1100bbaf:	test   al,0x4c
1100bbb1:	cmp    DWORD PTR ds:0xeb8f6549,eax
1100bbb7:	icebp  
1100bbb8:	dec    DWORD PTR [eax]
1100bbba:	add    BYTE PTR [ecx-0x20],dl
1100bbbd:	adc    eax,DWORD PTR [edi-0x70]
1100bbc0:	jle    0x1100bb95
1100bbc2:	and    edi,DWORD PTR [edi+0x7f7006d2]
1100bbc8:	(bad)  
1100bbc9:	and    BYTE PTR [eax+0x46],al
1100bbcc:	(bad)  
1100bbcd:	hlt    
1100bbce:	sbb    ebx,ebp
1100bbd0:	push   0x3ee224d2
1100bbd5:	push   0xffffffb8
1100bbd7:	mov    es,WORD PTR [edi-0x56]
1100bbda:	add    eax,0xc1da7a67
1100bbdf:	(bad)  
1100bbe0:	mov    ebx,0xc3eafc01
1100bbe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100bbe6:	loopne 0x1100bc67
1100bbe8:	aad    0xcb
1100bbea:	call   0xd010:0xa845e295
1100bbf1:	push   es
1100bbf2:	adc    DWORD PTR [edx+0x7d8c511d],ebx
1100bbf8:	lea    ecx,[ebx-0x540a8376]
1100bbfe:	vcvtsi2sd xmm1,xmm1,edi
1100bc02:	popf   
1100bc03:	jb     0x1100bc0c
1100bc05:	pop    esi
1100bc06:	mov    bh,0x45
1100bc08:	add    BYTE PTR [ebp+0x31600196],0x1
1100bc0f:	pusha  
1100bc10:	xor    DWORD PTR [edi+edi*8-0x141f4c56],eax
1100bc17:	lahf   
1100bc18:	cs mov al,0xfd
1100bc1b:	test   DWORD PTR [ecx],edx
1100bc1d:	cmp    cl,BYTE PTR [esi-0x29]
1100bc20:	adc    eax,0x594a7c82
1100bc25:	jge    0x1100bc9d
1100bc27:	mov    edi,0xc4b7cbc2
1100bc2c:	mov    al,ds:0x70576d2f
1100bc31:	repz fnsave [ebx-0x41547d5f]
1100bc38:	in     eax,0xe1
1100bc3a:	stos   BYTE PTR es:[edi],al
1100bc3b:	pop    ebx
1100bc3c:	sub    ebx,eax
1100bc3e:	cmp    al,0x1b
1100bc40:	add    al,0x7d
1100bc42:	mov    edi,?
1100bc44:	jmp    0x9f8130d
1100bc49:	mov    bp,0xf7ac
1100bc4d:	sub    BYTE PTR [ecx+edx*2-0x7dcaf88b],al
1100bc54:	pop    es
1100bc55:	shl    DWORD PTR [edi+0x5b],0xdf
1100bc59:	inc    ebp
1100bc5a:	int    0x21
1100bc5c:	mov    ah,0xa
1100bc5e:	and    eax,0xd612f638
1100bc63:	adc    cl,BYTE PTR [eax]
1100bc65:	dec    esp
1100bc66:	and    BYTE PTR [ebx+0x0],bl
1100bc69:	jnp    0x1100bcbd
1100bc6b:	clc    
1100bc6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100bc6d:	repnz xchg esp,eax
1100bc6f:	or     BYTE PTR [eax+eax*2-0x6fb56d20],al
1100bc76:	es std 
1100bc78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100bc79:	push   ds
1100bc7a:	xchg   esi,eax
1100bc7b:	pop    esi
1100bc7c:	dec    edx
1100bc7e:	cdq    
1100bc7f:	adc    DWORD PTR [ebp*8-0x587d620],edi
1100bc86:	and    DWORD PTR [ebx],esp
1100bc88:	mov    eax,0xdf975aff
1100bc8d:	mov    edi,0xee01de06
1100bc92:	ret    0x757c
1100bc95:	sahf   
1100bc96:	cmp    DWORD PTR [ecx-0x2175ea1d],ebp
1100bc9c:	sbb    DWORD PTR [esi],0x909c4ccf
1100bca2:	hlt    
1100bca3:	test   eax,0x6e392c0b
1100bca8:	scas   eax,DWORD PTR es:[edi]
1100bca9:	sbb    edx,DWORD PTR [esi+0xf16001]
1100bcaf:	pusha  
1100bcb0:	mov    eax,ds:0x5136dfc2
1100bcb5:	addr16 dec ecx
1100bcb7:	or     BYTE PTR [ebx],0x84
1100bcba:	pop    edi
1100bcbb:	stos   DWORD PTR es:[edi],eax
1100bcbc:	jg     0x1100bd19
1100bcbe:	adc    edi,DWORD PTR [ecx+0x23]
1100bcc1:	mov    cl,0x81
1100bcc3:	mov    ch,0x8a
1100bcc5:	pop    edx
1100bcc6:	dec    edx
1100bcc7:	repnz shl DWORD PTR [eax+0x43],1
1100bccb:	and    ebx,esp
1100bccd:	pop    ebp
1100bcce:	idiv   DWORD PTR [eax-0x48]
1100bcd1:	mov    dl,0x16
1100bcd3:	cli    
1100bcd4:	jmp    0x1100bc95
1100bcd6:	pop    ds
1100bcd7:	push   esp
1100bcd8:	cld    
1100bcd9:	je     0x1100bcfa
1100bcdb:	mov    eax,ds:0x439f6455
1100bce0:	scas   al,BYTE PTR es:[edi]
1100bce1:	xchg   esi,eax
1100bce2:	xchg   edi,eax
1100bce3:	mov    BYTE PTR [eax+ebp*4+0x134a541f],bh
1100bcea:	or     bl,bh
1100bcec:	push   edi
1100bced:	jmp    0x5dad24e
1100bcf2:	push   ecx
1100bcf3:	push   0x58a824d1
1100bcf8:	fdiv   DWORD PTR [ebx-0x3f]
1100bcfb:	scas   eax,DWORD PTR es:[edi]
1100bcfc:	adc    al,0xd0
1100bcfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100bcff:	arpl   WORD PTR [eax],ax
1100bd01:	imul   eax,DWORD PTR [eax],0xffffffa4
1100bd04:	adc    DWORD PTR [esp+esi*2+0xb],edx
1100bd08:	js     0x1100bcc6
1100bd0a:	push   0xe27df049
1100bd0f:	jne    0x1100bd49
1100bd11:	pop    ds
1100bd12:	pop    edi
1100bd13:	jmp    FWORD PTR [edx-0x400fcc6b]
1100bd19:	pop    ds
1100bd1a:	out    0xe0,al
1100bd1c:	xlat   BYTE PTR ds:[ebx]
1100bd1d:	push   cs
1100bd1e:	or     DWORD PTR [esi-0x2e92ee7b],ebx
1100bd24:	pop    ebx
1100bd25:	cmovo  ebp,DWORD PTR [edi+0x67]
1100bd29:	fild   WORD PTR [ecx-0x1d]
1100bd2c:	sbb    DWORD PTR [edi+0x3b],esp
1100bd2f:	sbb    DWORD PTR [eax],edx
1100bd31:	and    BYTE PTR [ebp-0x60],cl
1100bd34:	xor    eax,0xe4cb6286
1100bd39:	push   cs
1100bd3a:	sub    al,0x3
1100bd3c:	shl    BYTE PTR [edx+0x0],0xc0
1100bd40:	bound  esi,QWORD PTR [eax-0x4445ab03]
1100bd46:	mov    ds:0x25e412f9,al
1100bd4b:	fxch   st(6)
1100bd4d:	push   eax
1100bd4e:	call   0xb2ba:0xdb3a8
1100bd55:	out    dx,al
1100bd56:	mov    al,ds:0x7769bd6d
1100bd5b:	lods   eax,DWORD PTR ds:[esi]
1100bd5c:	scas   eax,DWORD PTR es:[edi]
1100bd5d:	loopne 0x1100bd8a
1100bd5f:	aaa    
1100bd60:	jns    0x1100bd1a
1100bd62:	in     eax,0xf6
1100bd64:	or     al,dh
1100bd66:	arpl   WORD PTR [ecx+0x1d57d4b7],di
1100bd6c:	or     ebp,DWORD PTR [ecx+0x6113bfdc]
1100bd72:	push   edi
1100bd73:	mov    ds:0x742518ff,eax
1100bd78:	cmp    al,0xc6
1100bd7a:	adc    ecx,ebx
1100bd7c:	out    0x42,eax
1100bd7e:	sahf   
1100bd7f:	add    BYTE PTR [eax],al
1100bd81:	test   DWORD PTR [edi],edi
1100bd83:	ins    BYTE PTR es:[edi],dx
1100bd84:	(bad)  
1100bd85:	or     al,0x1f
1100bd87:	add    eax,DWORD PTR [edx+0x7029e507]
1100bd8d:	or     ch,BYTE PTR [eax+0x7c]
1100bd90:	add    cl,BYTE PTR [esi]
1100bd92:	inc    eax
1100bd93:	xchg   ebx,eax
1100bd94:	and    ah,bl
1100bd96:	add    ecx,DWORD PTR [esi-0x47ae7704]
1100bd9c:	fisub  WORD PTR [ebx-0x2cbaaf87]
1100bda2:	rcl    BYTE PTR [ecx+0x22dd8149],0x8
1100bda9:	int    0x54
1100bdab:	mov    ebp,0xec1f63c
1100bdb0:	pop    esi
1100bdb1:	jo     0x1100bd77
1100bdb3:	xor    al,0xec
1100bdb5:	jno    0x1100be36
1100bdb7:	xlat   BYTE PTR ds:[ebx]
1100bdb8:	(bad)  
1100bdb9:	lods   al,BYTE PTR ds:[esi]
1100bdba:	pop    edx
1100bdbb:	cmp    BYTE PTR [ebx-0x969a6df],dl
1100bdc1:	mov    bh,0x58
1100bdc3:	jb     0x1100bdc1
1100bdc5:	les    edx,FWORD PTR [ebx]
1100bdc7:	loope  0x1100bdbb
1100bdc9:	fmulp  st(2),st
1100bdcb:	inc    edx
1100bdcc:	mov    ebp,edi
1100bdce:	sbb    eax,0x1de4fd38
1100bdd3:	mov    eax,ds:0x40032da7
1100bdd8:	xlat   BYTE PTR ds:[ebx]
1100bdd9:	ror    DWORD PTR [esi-0x1850885],0xbe
1100bde0:	test   al,0x6c
1100bde2:	mov    edi,0xdb153f55
1100bde7:	pop    ds
1100bde8:	or     bh,BYTE PTR [eax-0x12]
1100bdeb:	stos   DWORD PTR es:[edi],eax
1100bdec:	fdivr  st,st(6)
1100bdee:	(bad)  
1100bdef:	and    BYTE PTR [edi],bl
1100bdf1:	aad    0xe6
1100bdf3:	ret    
1100bdf4:	add    esp,ecx
1100bdf6:	(bad)  
1100bdf7:	scas   eax,DWORD PTR es:[edi]
1100bdf8:	call   0xd2cd7568
1100bdfd:	aad    0xb7
1100bdff:	inc    edx
1100be00:	and    bl,dh
1100be02:	rcr    BYTE PTR [esi],1
1100be04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100be05:	xor    DWORD PTR [ecx+0x67],0xffffffd7
1100be09:	mov    ds:0xcef93b2,eax
1100be0e:	adc    dl,BYTE PTR [ecx+0x4c424be8]
1100be14:	push   0xfffffffd
1100be16:	cwde   
1100be17:	ins    BYTE PTR es:[edi],dx
1100be18:	je     0x1100be5f
1100be1a:	add    dl,BYTE PTR [esi-0x4c]
1100be1d:	dec    ebp
1100be1e:	neg    BYTE PTR [ebx-0x50b438a9]
1100be24:	scas   eax,DWORD PTR es:[edi]
1100be25:	repnz xchg ebp,eax
1100be27:	ror    BYTE PTR [eax],cl
1100be29:	or     BYTE PTR [eax+0x7c],ah
1100be2c:	jmp    0x3f5f:0x280fcc49
1100be33:	enter  0x4436,0xeb
1100be37:	and    eax,0x147945ed
1100be3c:	lock dec edi
1100be3e:	ror    BYTE PTR [eax],0x5f
1100be41:	or     edx,esi
1100be43:	stos   BYTE PTR es:[edi],al
1100be44:	push   ebp
1100be45:	xor    esi,eax
1100be47:	aam    0x83
1100be49:	cmp    al,0x3c
1100be4b:	test   DWORD PTR [eax-0x22c6a7e7],0x75e48cfe
1100be55:	sub    eax,0x2e62d66c
1100be5a:	sub    al,BYTE PTR [edx-0x22]
1100be5d:	add    DWORD PTR [edx+0x5e],0xce2d9d07
1100be64:	inc    ebp
1100be65:	mov    eax,0x7822a2d0
1100be6a:	fisub  WORD PTR [ebp+0x0]
1100be6d:	pop    eax
1100be6e:	and    al,0x0
1100be70:	pop    eax
1100be71:	xor    al,0xc2
1100be73:	scas   eax,DWORD PTR es:[edi]
1100be74:	aam    0x10
1100be76:	add    BYTE PTR [edx+0x31],ah
1100be79:	sysexit 
1100be7b:	push   ecx
1100be7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100be7d:	cmc    
1100be7e:	xlat   BYTE PTR ds:[ebx]
1100be7f:	ja     0x1100be36
1100be81:	dec    ecx
1100be82:	cmp    ch,BYTE PTR [eax+0x38]
1100be85:	shl    BYTE PTR [edi-0x34012e16],cl
1100be8b:	aaa    
1100be8c:	push   esi
1100be8d:	mov    ch,0xbd
1100be8f:	pop    ds
1100be90:	cmp    cl,BYTE PTR [ebx-0x7b]
1100be93:	sub    bl,0x33
1100be96:	aad    0x36
1100be98:	icebp  
1100be99:	ins    DWORD PTR es:[edi],dx
1100be9a:	mov    ds:0xfa9f77cc,eax
1100be9f:	test   eax,0x8d3ed563
1100bea4:	ror    BYTE PTR [ecx+0x68],1
1100bea7:	xchg   ebx,eax
1100bea8:	test   eax,0xaaf35490
1100bead:	dec    edx
1100beae:	mov    dh,0x7a
1100beb0:	mov    eax,0x2571b9a6
1100beb5:	and    edi,DWORD PTR [ebp+ecx*1+0x6]
1100beb9:	ins    BYTE PTR es:[edi],dx
1100beba:	or     ah,BYTE PTR [eax]
1100bebc:	stos   DWORD PTR es:[edi],eax
1100bebd:	lahf   
1100bebe:	pop    esp
1100bebf:	xchg   DWORD PTR [edx+eax*4+0x2c],edx
1100bec3:	std    
1100bec4:	inc    esi
1100bec5:	fimul  WORD PTR [ecx]
1100bec7:	es or  eax,0xbf787af1
1100becd:	jo     0x1100be8e
1100becf:	fidiv  WORD PTR [ecx+0x126b514b]
1100bed5:	jmp    0x11047f8
1100beda:	or     al,0x2c
1100bedc:	jmp    0x9a6ce3b8
1100bee1:	lahf   
1100bee2:	sbb    al,0xc1
1100bee4:	outs   dx,BYTE PTR ds:[esi]
1100bee5:	cmp    ecx,DWORD PTR [ebp-0x29]
1100bee8:	fiadd  DWORD PTR [eax]
1100beea:	sar    bh,0x7a
1100beed:	clc    
1100beee:	je     0x1100bf13
1100bef0:	test   al,0x8a
1100bef2:	test   DWORD PTR [edi+0x10ea3a7],edi
1100bef8:	fistp  WORD PTR [eax+0x72]
1100befb:	cmp    al,0x4c
1100befd:	dec    ebp
1100befe:	jle    0x1100bed2
1100bf00:	mov    edx,esp
1100bf02:	sbb    eax,0xfc1af8c8
1100bf07:	ret    
1100bf08:	(bad)  
1100bf09:	loopne 0x1100bf2d
1100bf0b:	dec    esp
1100bf0c:	dec    eax
1100bf0d:	mov    edx,0xe2c026c
1100bf12:	add    BYTE PTR [eax*2-0x932e0db],ch
1100bf19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100bf1a:	aad    0x12
1100bf1c:	loopne 0x1100beb0
1100bf1e:	jne    0x1100beb6
1100bf20:	xchg   esi,eax
1100bf21:	jecxz  0x1100bea7
1100bf23:	in     eax,dx
1100bf24:	inc    esi
1100bf25:	and    edx,esp
1100bf27:	sub    eax,0x239d995f
1100bf2c:	jl     0x1100bf0c
1100bf2e:	jge    0x1100bedf
1100bf30:	xchg   DWORD PTR [edi],ebp
1100bf32:	pop    esi
1100bf33:	push   edi
1100bf34:	shr    DWORD PTR [ebp+0x3f],0x4d
1100bf38:	xlat   BYTE PTR ds:[ebx]
1100bf39:	cmp    eax,0x7830464a
1100bf3e:	pushf  
1100bf3f:	mov    ebp,0x125fe1c9
1100bf44:	rcl    BYTE PTR [ecx+0xc],0xe4
1100bf48:	xchg   ecx,eax
1100bf49:	shl    DWORD PTR [ecx+edx*1],1
1100bf4c:	jno    0x1100bfb0
1100bf4e:	scas   eax,DWORD PTR es:[edi]
1100bf4f:	imul   edx,DWORD PTR [ebp+0xff222be],0x55
1100bf56:	std    
1100bf57:	or     al,BYTE PTR ds:0xaa15c6f
1100bf5d:	pop    DWORD PTR [eax+eiz*2]
1100bf60:	lds    ebp,FWORD PTR [edx]
1100bf62:	mov    edi,0x91c76147
1100bf67:	sbb    eax,0x36e3b85
1100bf6c:	leave  
1100bf6d:	mov    dh,0xa7
1100bf6f:	arpl   WORD PTR [edx+0x70c01be6],ax
1100bf75:	adc    DWORD PTR [ebp+0x3b03da57],edx
1100bf7b:	or     al,BYTE PTR [esp+edx*4-0xe06e3fc]
1100bf82:	fcmovb st,st(5)
1100bf84:	ja     0x1100bf07
1100bf86:	(bad)  
1100bf87:	stos   BYTE PTR es:[edi],al
1100bf88:	mov    ebx,0x5c0e63c7
1100bf8d:	add    DWORD PTR [edi],ebp
1100bf8f:	jle    0x1100bf33
1100bf91:	cmp    DWORD PTR [ebp+0x5a6a6d77],0x4
1100bf98:	ret    0x6523
1100bf9b:	add    dh,BYTE PTR [esi+eiz*8+0x25]
1100bf9f:	cmp    BYTE PTR [edi+0x546a659e],ah
1100bfa5:	mov    DWORD PTR [eax],ebp
1100bfa7:	jp     0x1100bfb0
1100bfa9:	dec    esi
1100bfaa:	cmp    BYTE PTR [ecx-0x3f5baba7],ah
1100bfb0:	jmp    0x1100bfd6
1100bfb2:	jae    0x1100c014
1100bfb4:	popa   
1100bfb5:	fiadd  WORD PTR [ecx-0x7fca69cd]
1100bfbb:	test   DWORD PTR [ecx],eax
1100bfbd:	shl    BYTE PTR [ecx-0x19e30159],0x25
1100bfc4:	cld    
1100bfc5:	jge    0x1100c033
1100bfc7:	mov    edi,0x6530fffa
1100bfcc:	repz mov bh,0x96
1100bfcf:	leave  
1100bfd0:	jmp    0x9369:0x75a3e689
1100bfd7:	xchg   edx,eax
1100bfd8:	mov    eax,esp
1100bfda:	loopne 0x1100bfc2
1100bfdc:	fcmovnb st,st(6)
1100bfde:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100bfe0:	jmp    0x1100c00c
1100bfe2:	data16 loope 0x1100c028
1100bfe5:	sbb    BYTE PTR [esi-0x76],ch
1100bfe8:	push   ds
1100bfe9:	inc    esp
1100bfea:	add    al,dh
1100bfec:	mov    DWORD PTR [eax+0x63],ecx
1100bfef:	adc    DWORD PTR [ecx-0x6275cdae],ecx
1100bff5:	aaa    
1100bff6:	mov    bl,0xfd
1100bff8:	mov    ebp,0x3351f91e
1100bffd:	test   al,0xd2
1100bfff:	test   DWORD PTR [edx],0x78abec88
1100c005:	push   esp
1100c006:	cmovno eax,DWORD PTR [edx+0x4c]
1100c00a:	add    ah,dl
1100c00c:	call   0xf001f530
1100c011:	cmp    al,0x9e
1100c013:	daa    
1100c014:	repz mov eax,ds:0xf2bf1192
1100c01a:	sahf   
1100c01b:	iret   
1100c01c:	xchg   ebp,eax
1100c01d:	mov    BYTE PTR [ebp-0x737fd4a4],bh
1100c023:	das    
1100c024:	rol    BYTE PTR [edx-0x11],1
1100c027:	adc    cl,BYTE PTR [edi+0x41]
1100c02a:	fiadd  DWORD PTR [eax+0x7879ea77]
1100c030:	mov    esi,0x958f025f
1100c035:	mov    ch,0x2d
1100c037:	lock shl BYTE PTR [edi+0x3eafc34d],cl
1100c03e:	jl     0x1100c044
1100c040:	xchg   dl,dl
1100c042:	imul   edi,DWORD PTR [edi+0x7f],0xffffff85
1100c046:	fild   QWORD PTR [eax+ecx*8-0x4f]
1100c04a:	jge    0x1100c06b
1100c04c:	mov    ebp,0x4e3a03b9
1100c051:	pusha  
1100c052:	and    DWORD PTR [ecx-0x3d],0x53bc9c67
1100c059:	lahf   
1100c05a:	mov    esp,0xd740032c
1100c05f:	ror    DWORD PTR [esi+0x586ef53d],0x14
1100c066:	mov    dh,0xbf
1100c068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100c069:	jmp    0x65b7faf7
1100c06e:	fistp  DWORD PTR [edi+edi*4-0x76]
1100c072:	sub    ebp,DWORD PTR [edx+0x75]
1100c075:	jmp    esi
1100c077:	(bad)  [edx+0xf524278]
1100c07d:	shr    DWORD PTR [ebx+0xe1c8d18],cl
1100c083:	(bad)
1100c087:	enter  0x8bb,0x1b
1100c08b:	and    eax,DWORD PTR [edx]
1100c08d:	add    cl,dl
1100c08f:	or     dh,BYTE PTR [eax+eiz*8-0x12798f6d]
1100c096:	(bad)  
1100c097:	fs stos DWORD PTR es:[edi],eax
1100c099:	pop    es
1100c09a:	and    DWORD PTR [esi],ebx
1100c09c:	xchg   ebx,eax
1100c09d:	sbb    BYTE PTR [esi+0x5c601332],cl
1100c0a3:	or     DWORD PTR [ecx],ebx
1100c0a5:	dec    eax
1100c0a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100c0a7:	inc    edx
1100c0a8:	cmp    cl,BYTE PTR [esi]
1100c0aa:	test   esi,edi
1100c0ac:	inc    edx
1100c0ad:	fdiv   QWORD PTR [edi+0x2389542]
1100c0b3:	add    bh,dl
1100c0b5:	adc    eax,0x805693
1100c0ba:	push   eax
1100c0bb:	imul   edx,DWORD PTR [edx],0x793b5d32
1100c0c1:	sbb    ebx,DWORD PTR [eax+0x2b]
1100c0c4:	adc    BYTE PTR [eax],ch
1100c0c6:	xchg   ebx,eax
1100c0c7:	xlat   BYTE PTR ds:[ebx]
1100c0c8:	inc    eax
1100c0c9:	cmp    al,0x46
1100c0cb:	in     eax,0xa3
1100c0cd:	shl    al,0x3d
1100c0d0:	test   DWORD PTR [ebp-0x15],edi
1100c0d3:	xor    DWORD PTR [di],edi
1100c0d6:	cmp    eax,0xc57eeb03
1100c0db:	ret    
1100c0dc:	retf   
1100c0dd:	jle    0x1100c15c
1100c0df:	es out 0x25,al
1100c0e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100c0e3:	sti    
1100c0e4:	pop    ebp
1100c0e5:	cwde   
1100c0e6:	std    
1100c0e7:	pop    edi
1100c0e8:	push   0x37
1100c0ea:	fnstsw WORD PTR [ebx+esi*1+0x1c]
1100c0ee:	pop    edi
1100c0ef:	add    DWORD PTR [eax],0xffffff87
1100c0f2:	or     eax,0x1309b877
1100c0f7:	or     ah,cl
1100c0f9:	outs   dx,DWORD PTR ds:[esi]
1100c0fa:	inc    edx
1100c0fb:	shl    BYTE PTR [ebx],cl
1100c0fd:	fidiv  WORD PTR [eax-0x41]
1100c100:	mov    esi,0x8006594b
1100c105:	scas   al,BYTE PTR es:[edi]
1100c106:	sbb    DWORD PTR ds:0xe6cfea7b,0xffffffc7
1100c10d:	test   BYTE PTR [edi],0x98
1100c110:	test   al,0xd3
1100c112:	mov    dl,0xfd
1100c114:	ins    DWORD PTR es:[edi],dx
1100c115:	aad    0x7b
1100c117:	fwait
1100c118:	ja     0x1100c172
1100c11a:	or     cl,ch
1100c11c:	lds    ecx,FWORD PTR [esi+0x6a]
1100c11f:	mov    ch,0x80
1100c121:	lahf   
1100c122:	scas   al,BYTE PTR es:[edi]
1100c123:	div    eax
1100c125:	mov    ecx,0x9231566f
1100c12a:	iret   
1100c12b:	and    DWORD PTR [eax-0x2e3866bb],edx
1100c131:	sub    esp,esi
1100c133:	xchg   edi,eax
1100c134:	dec    esp
1100c135:	mov    ch,0xc5
1100c137:	aas    
1100c138:	cli    
1100c139:	lock jp 0x1100c150
1100c13c:	(bad)  
1100c13d:	jle    0x1100c1b7
1100c13f:	or     dl,ch
1100c141:	or     eax,0x20f3a1bf
1100c146:	jge    0x1100c167
1100c148:	mov    ds:0xe849e036,eax
1100c14d:	or     DWORD PTR [eax+0x12],eax
1100c150:	add    BYTE PTR [eax-0x1c],bh
1100c153:	pop    es
1100c154:	and    ah,BYTE PTR [eax+0x54]
1100c157:	adc    eax,0xfe25c31e
1100c15c:	and    al,ch
1100c15e:	and    ah,BYTE PTR [ebx+0x3a]
1100c161:	xchg   DWORD PTR [edi-0x33],esp
1100c164:	and    BYTE PTR [ebx+0x9],0x38
1100c168:	int3   
1100c169:	pop    eax
1100c16a:	mov    esp,0x680da40c
1100c16f:	or     eax,0xc542ba85
1100c174:	add    DWORD PTR [ecx],0xda00359e
1100c17a:	xchg   DWORD PTR [eax+0x7905f0d8],edi
1100c180:	dec    edx
1100c181:	sbb    al,0xc1
1100c183:	push   ebx
1100c184:	pop    eax
1100c185:	icebp  
1100c186:	sub    ebx,DWORD PTR [esi-0x2409fd43]
1100c18c:	mov    ebp,0xf8a8813b
1100c191:	pop    esi
1100c192:	mov    ah,0x26
1100c194:	mov    al,ds:0x77798fdf
1100c199:	in     al,dx
1100c19a:	sbb    eax,0xa809c88
1100c19f:	cmp    ch,BYTE PTR [esi-0x44]
1100c1a2:	pop    edi
1100c1a3:	or     bl,BYTE PTR [ebx]
1100c1a5:	jle    0x1100c1a4
1100c1a7:	(bad)  
1100c1a8:	rcl    DWORD PTR [eax-0x4790e63],cl
1100c1ae:	neg    DWORD PTR [ebp-0xb]
1100c1b1:	xor    al,BYTE PTR [eax]
1100c1b3:	je     0x1100c1d2
1100c1b5:	in     al,dx
1100c1b6:	and    eax,0x9e6bbaef
1100c1bb:	ins    BYTE PTR es:[edi],dx
1100c1bc:	jg     0x1100c14d
1100c1be:	int    0xaf
1100c1c0:	daa    
1100c1c1:	jmp    0xd4f3:0xc34fed6c
1100c1c8:	dec    ebx
1100c1c9:	inc    esp
1100c1ca:	aam    0x2d
1100c1cc:	mov    bh,0x7b
1100c1ce:	mov    eax,0xd3e0e6e2
1100c1d3:	lahf   
1100c1d4:	mov    eax,edx
1100c1d6:	pop    ds
1100c1d7:	inc    esi
1100c1d8:	sti    
1100c1d9:	xchg   ecx,eax
1100c1da:	add    esp,DWORD PTR [eax-0x35a3ce4f]
1100c1e0:	enter  0x36a1,0x80
1100c1e4:	fs cdq 
1100c1e6:	sbb    esp,DWORD PTR ds:0xc1484093
1100c1ec:	xchg   ecx,eax
1100c1ed:	(bad)  
1100c1ee:	clc    
1100c1ef:	xchg   ebx,eax
1100c1f0:	aaa    
1100c1f1:	inc    eax
1100c1f2:	adc    esi,DWORD PTR [esi+0x24]
1100c1f5:	int3   
1100c1f6:	mov    cl,ch
1100c1f8:	scas   eax,DWORD PTR es:[edi]
1100c1f9:	xor    ah,bl
1100c1fb:	ja     0x1100c1c9
1100c1fd:	add    BYTE PTR es:[ecx-0x6dfff606],dh
1100c204:	jbe    0x1100c1e6
1100c206:	xchg   esp,eax
1100c207:	std    
1100c208:	out    dx,eax
1100c209:	(bad)  [ebx]
1100c20b:	xor    BYTE PTR [esi-0x49],al
1100c20e:	ficomp WORD PTR [eax+0x668309a3]
1100c214:	loope  0x1100c196
1100c216:	inc    ebx
1100c217:	mov    es,ebx
1100c219:	mov    al,ds:0x5a407fdc
1100c21f:	add    al,0x8d
1100c221:	mul    BYTE PTR [edx-0x3fecbb63]
1100c227:	adc    DWORD PTR [ecx],ebx
1100c229:	test   al,0x1e
1100c22b:	adc    al,0x5e
1100c22d:	cmp    edx,DWORD PTR [ebx+0xb579081]
1100c233:	xchg   BYTE PTR es:[eax-0xb],ah
1100c237:	stos   BYTE PTR es:[edi],al
1100c238:	adc    eax,0x113ec70
1100c23d:	sahf   
1100c23e:	hlt    
1100c23f:	test   al,0xa9
1100c241:	inc    ecx
1100c242:	sbb    al,BYTE PTR [eax+0x57]
1100c245:	ins    DWORD PTR es:[edi],dx
1100c246:	xor    BYTE PTR [esi],0x10
1100c249:	xchg   ecx,eax
1100c24a:	fadd   QWORD PTR [ecx+0x12e2f9cb]
1100c250:	icebp  
1100c251:	pop    edx
1100c252:	fldenv [ebx-0x2dbd9431]
1100c258:	(bad)  
1100c259:	mov    esp,0xcbbee771
1100c25e:	pop    esi
1100c25f:	push   es
1100c260:	sub    BYTE PTR [esi-0x621b427d],0x77
1100c267:	cs push ds
1100c269:	loope  0x1100c1f2
1100c26b:	lea    ebp,[ebx]
1100c26d:	stc    
1100c26e:	nop
1100c26f:	lock mov bh,0x6c
1100c272:	aas    
1100c273:	fild   WORD PTR [edx+0x15]
1100c276:	mov    eax,ds:0xaedf35d
1100c27b:	mov    esi,0xd7883df9
1100c280:	cmp    BYTE PTR [edx+0x4e],al
1100c283:	mov    BYTE PTR [esi-0x2e8ac1ef],dl
1100c289:	add    al,0x4c
1100c28b:	push   ebp
1100c28c:	and    BYTE PTR [edi],ah
1100c28e:	and    BYTE PTR [eax+0x40488c04],dl
1100c294:	and    esi,ebx
1100c296:	mov    ah,0xe4
1100c299:	and    edi,ecx
1100c29b:	inc    edi
1100c29c:	add    bl,BYTE PTR [ebx-0x615b002c]
1100c2a2:	daa    
1100c2a3:	push   es
1100c2a4:	ffreep st(1)
1100c2a6:	sbb    al,0xda
1100c2a8:	sti    
1100c2a9:	push   ebp
1100c2aa:	inc    ebp
1100c2ab:	push   0x3f
1100c2ad:	cdq    
1100c2ae:	add    DWORD PTR [edx-0x63],ebp
1100c2b1:	mov    dl,BYTE PTR ds:0x12bfdb60
1100c2b7:	jae    0x1100c23c
1100c2b9:	dec    esp
1100c2ba:	add    bl,BYTE PTR [edx-0x69]
1100c2bd:	imul   eax,DWORD PTR [ecx],0x79
1100c2c0:	add    dl,BYTE PTR [edx]
1100c2c2:	stos   DWORD PTR es:[edi],eax
1100c2c3:	cld    
1100c2c4:	pop    esi
1100c2c5:	dec    ebp
1100c2c6:	dec    esp
1100c2c7:	iret   
1100c2c8:	cs dec ebp
1100c2ca:	adc    eax,0xb695e01b
1100c2cf:	in     al,0x80
1100c2d1:	inc    ecx
1100c2d2:	test   BYTE PTR [edx-0x63bb35af],bh
1100c2d8:	xchg   BYTE PTR [ebx-0x338f88f2],ah
1100c2de:	adc    DWORD PTR [ebx],esi
1100c2e0:	adc    esi,esp
1100c2e2:	shl    BYTE PTR [esi+0xc],0x41
1100c2e6:	and    ebx,DWORD PTR [esi-0x760842c0]
1100c2ec:	dec    ebx
1100c2ed:	mov    cs,WORD PTR [edi-0x20]
1100c2f0:	sbb    eax,0x769bc8f8
1100c2f5:	jmp    0x1133a735
1100c2fa:	je     0x1100c319
1100c2fc:	in     al,dx
1100c2fd:	lds    edi,FWORD PTR [edi-0xa]
1100c300:	xchg   ebx,eax
1100c301:	inc    ebp
1100c302:	adc    eax,0x3bba50fe
1100c307:	mov    esp,?
1100c309:	lds    edi,FWORD PTR [edx-0x6ac3d903]
1100c30f:	ret    
1100c310:	fcomp  QWORD PTR [ebx+0x6c]
1100c313:	ret    
1100c314:	(bad)  
1100c315:	cmp    dl,BYTE PTR [edi+0x1bf2f484]
1100c31b:	out    0xe0,eax
1100c31d:	pop    ebx
1100c31e:	mov    bh,0x87
1100c320:	inc    edi
1100c322:	push   ecx
1100c323:	nop
1100c324:	and    DWORD PTR [eax-0xfd7b971],0x0
1100c32b:	cld    
1100c32c:	aas    
1100c32d:	aas    
1100c32e:	sub    al,0xfe
1100c330:	and    ebp,DWORD PTR [edx+0x9361d34]
1100c336:	jns    0x1100c2cd
1100c338:	or     DWORD PTR [edx-0x4e],esp
1100c33b:	mov    edi,0x1c7d7849
1100c340:	icebp  
1100c341:	(bad)  
1100c342:	mov    ah,0x1e
1100c344:	add    eax,0xfd7c8e77
1100c349:	add    DWORD PTR [eax],eax
1100c34b:	mov    BYTE PTR [esp],0x41
1100c34f:	sbb    eax,DWORD PTR [eax]
1100c351:	into   
1100c352:	sbb    ah,dl
1100c354:	add    al,al
1100c356:	es inc esp
1100c358:	xchg   ebp,eax
1100c359:	bound  edx,QWORD PTR [edx]
1100c35b:	mov    ah,0xb6
1100c35d:	rol    DWORD PTR [eax-0x3d],0xae
1100c361:	dec    eax
1100c362:	rcr    DWORD PTR [eax],1
1100c364:	call   0xcabb753f
1100c369:	add    al,0xc
1100c36b:	stc    
1100c36c:	les    edi,FWORD PTR [edi]
1100c36e:	les    ebp,FWORD PTR [ebx+0x7]
1100c371:	mov    ecx,0xd26ed137
1100c376:	fst    QWORD PTR [ebx]
1100c378:	sbb    DWORD PTR [eax-0x5f],ebx
1100c37b:	or     ecx,esi
1100c37d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100c37e:	mov    WORD PTR [esi+esi*8],fs
1100c381:	sbb    ah,BYTE PTR [esp+esi*2-0x12c3ee1d]
1100c388:	nop
1100c389:	sbb    DWORD PTR [eax],edi
1100c38b:	(bad)  
1100c38c:	test   eax,0x5d9e0c53
1100c391:	out    dx,eax
1100c392:	retf   0x37a
1100c395:	lock xchg esp,ecx
1100c398:	lods   al,BYTE PTR ds:[esi]
1100c399:	imul   ecx,DWORD PTR [eax+ecx*2+0x7a],0xffffffd3
1100c39e:	dec    ebp
1100c39f:	xchg   ecx,eax
1100c3a0:	adc    ebp,DWORD PTR [eax-0x7c]
1100c3a3:	or     eax,0x1324da17
1100c3a8:	xchg   edx,eax
1100c3a9:	jle    0x1100c39f
1100c3ab:	int    0xbb
1100c3ad:	cmc    
1100c3ae:	leave  
1100c3af:	retf   
1100c3b0:	das    
1100c3b1:	xor    eax,0x41898400
1100c3b6:	outs   dx,BYTE PTR ds:[esi]
1100c3b7:	in     al,dx
1100c3b8:	cmp    bl,al
1100c3ba:	mov    edi,esi
1100c3bc:	hlt    
1100c3bd:	mov    gs,WORD PTR [esi-0x3e]
1100c3c0:	scas   eax,DWORD PTR es:[edi]
1100c3c1:	xor    al,0x51
1100c3c3:	addr16 icebp 
1100c3c5:	in     eax,0x39
1100c3c7:	pop    eax
1100c3c8:	ja     0x1100c3a2
1100c3ca:	cmp    ch,BYTE PTR [ecx-0x46072422]
1100c3d0:	inc    edi
1100c3d1:	mov    eax,0x7a8d1a7b
1100c3d6:	lahf   
1100c3d7:	sti    
1100c3d8:	(bad)  
1100c3d9:	sbb    BYTE PTR [esi-0x5],ch
1100c3dc:	test   eax,0x547f0c4f
1100c3e1:	sti    
1100c3e2:	push   ebx
1100c3e3:	daa    
1100c3e4:	sahf   
1100c3e5:	sbb    cl,BYTE PTR [ecx-0x4ec4e036]
1100c3eb:	adc    ebp,DWORD PTR [esi]
1100c3ed:	adc    BYTE PTR [ebp+0x4f],0xd6
1100c3f1:	add    eax,0x6870a4c8
1100c3f6:	(bad)  
1100c3f7:	jnp    0x1100c40e
1100c3f9:	les    eax,FWORD PTR [ebx-0x12]
1100c3fc:	ds scas eax,DWORD PTR es:[edi]
1100c3fe:	sbb    ch,bh
1100c400:	hlt    
1100c401:	leave  
1100c402:	and    edi,edi
1100c404:	cmp    BYTE PTR [ecx],cl
1100c406:	xor    al,0x6b
1100c408:	add    BYTE PTR [eax+0x2],cl
1100c40b:	mov    ?,WORD PTR [ebp+0x12be7c10]
1100c411:	sub    eax,0x385b1c22
1100c416:	add    al,0xad
1100c418:	adc    eax,0x29e19988
1100c41d:	dec    ebx
1100c41e:	shr    BYTE PTR [ebx+0x60],1
1100c421:	mov    ds:0x47947d,al
1100c426:	imul   ecx,DWORD PTR [esi-0x30],0x110201da
1100c42d:	xchg   DWORD PTR ds:0xfdd2ec93,ecx
1100c433:	push   esi
1100c434:	add    al,0x0
1100c436:	rol    bh,0xa7
1100c439:	sahf   
1100c43a:	les    esi,FWORD PTR [ecx+0x0]
1100c43d:	mov    ch,0x30
1100c43f:	std    
1100c440:	jmp    0xdaff:0x6fc05623
1100c447:	or     BYTE PTR [esi-0x5a],ah
1100c44a:	call   0xfbcd:0x91d8becf
1100c451:	jmp    0x1100c3ff
1100c453:	mov    esi,0x3bcd5ec
1100c458:	add    DWORD PTR [edx+edi*1],eax
1100c45b:	sti    
1100c45c:	add    al,BYTE PTR [esi+0x3fa53f0d]
1100c462:	ja     0x1100c444
1100c464:	int3   
1100c465:	mov    bh,0xec
1100c467:	rcl    edi,1
1100c469:	jne    0x1100c401
1100c46b:	add    DWORD PTR [eax-0x6409f15],esp
1100c471:	daa    
1100c472:	mov    bh,0x77
1100c474:	mov    bl,0xfd
1100c476:	mov    edx,0xf35b7774
1100c47b:	nop
1100c47c:	aad    0xed
1100c47e:	xlat   BYTE PTR ds:[ebx]
1100c47f:	enter  0x88df,0x21
1100c483:	aaa    
1100c484:	mov    edi,0xbdb52ac9
1100c489:	jne    0x1100c4bc
1100c48b:	aad    0xdf
1100c48d:	addr16 out 0x3c,eax
1100c490:	pop    esp
1100c491:	jbe    0x1100c500
1100c493:	add    eax,0x50afae77
1100c498:	mov    al,0x7d
1100c49a:	adc    al,0xfa
1100c49c:	sub    al,dh
1100c49e:	cmp    dl,bh
1100c4a0:	dec    edi
1100c4a1:	lea    ecx,[eax+0x1662f3f8]
1100c4a7:	test   al,0x57
1100c4a9:	mov    al,ds:0xc558d203
1100c4ae:	mov    BYTE PTR [ebx*4-0x21377bd8],0x8f
1100c4b6:	push   ecx
1100c4b7:	mov    al,0xc7
1100c4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100c4ba:	ficom  DWORD PTR [ebx-0x62d71c10]
1100c4c0:	inc    esi
1100c4c1:	jp     0x1100c492
1100c4c3:	int3   
1100c4c4:	(bad)  
1100c4c5:	fdivr  QWORD PTR [eax]
1100c4c7:	xchg   esp,eax
1100c4c8:	inc    eax
1100c4c9:	sbb    esi,DWORD PTR [ecx]
1100c4cb:	add    BYTE PTR [eax+0x3c],bh
1100c4ce:	inc    esi
1100c4cf:	call   0x1a32a7ed
1100c4d4:	mov    ah,0x83
1100c4d6:	cmp    al,0x64
1100c4d8:	sbb    BYTE PTR [edi+0x7c],al
1100c4db:	(bad)  
1100c4dc:	add    BYTE PTR [esp+edx*8-0x29],ah
1100c4e0:	mov    DWORD PTR [esi+0x15],eax
1100c4e3:	and    bl,BYTE PTR [edi]
1100c4e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100c4e6:	or     DWORD PTR [ebx-0x25c7a850],edx
1100c4ec:	jae    0x1100c50e
1100c4ee:	nop
1100c4ef:	(bad)  
1100c4f0:	mov    esp,0x15ed1a00
1100c4f5:	xchg   eax,eax
1100c4f7:	(bad)  
1100c4f8:	sbb    al,0x49
1100c4fa:	shl    ah,0x4c
1100c4fd:	jo     0x1100c51b
1100c4ff:	aas    
1100c500:	nop
1100c501:	ret    0xaba1
1100c504:	sub    BYTE PTR [ecx+eiz*1+0x5e],dl
1100c508:	loopne 0x1100c501
1100c50a:	sahf   
1100c50b:	in     eax,0x62
1100c50d:	add    eax,0x2bc746a3
1100c512:	les    eax,FWORD PTR [ecx]
1100c514:	xor    al,0xde
1100c516:	mov    ch,0x21
1100c518:	pop    es
1100c519:	jmp    0x2cafba02
1100c51e:	adc    edx,DWORD PTR [edx+0xd2d2476]
1100c524:	icebp  
1100c525:	push   cs
1100c526:	jl     0x1100c514
1100c528:	(bad)  
1100c529:	pop    ds
1100c52a:	shl    BYTE PTR [edi],1
1100c52c:	das    
1100c52d:	mov    edi,0x5e100094
1100c532:	pop    ds
1100c533:	int    0xd
1100c535:	js     0x1100c57a
1100c537:	xlat   BYTE PTR ds:[ebx]
1100c538:	rcr    DWORD PTR [esi-0x8],0x8e
1100c53c:	pop    ds
1100c53d:	mov    dh,0xb0
1100c53f:	std    
1100c540:	shl    DWORD PTR [di],0x9f
1100c544:	jp     0x1100c51d
1100c546:	and    BYTE PTR [esi+0x675131bf],dh
1100c54c:	jbe    0x1100c503
1100c54e:	int    0x70
1100c550:	pusha  
1100c551:	pop    esi
1100c552:	outs   dx,DWORD PTR ds:[esi]
1100c553:	or     BYTE PTR [ebp+0x647359b4],ah
1100c559:	or     dl,al
1100c55b:	jns    0x1100c526
1100c55d:	push   ebp
1100c55e:	arpl   ax,di
1100c560:	dec    ecx
1100c561:	sub    eax,0xc650a1fc
1100c566:	adc    al,0xaa
1100c568:	not    DWORD PTR [ebx+0x2c]
1100c56b:	clc    
1100c56c:	add    BYTE PTR [eax+eiz*4],0x67
1100c570:	push   cs
1100c571:	shl    BYTE PTR [ecx],0xf9
1100c574:	out    0x5c,eax
1100c576:	(bad)  
1100c577:	adc    dl,BYTE PTR [edx+0xfa06020]
1100c57d:	inc    ebp
1100c57e:	jmp    0x89839104
1100c583:	(bad)  
1100c584:	in     al,0xf3
1100c586:	addr16 inc ecx
1100c588:	jne    0x1100c542
1100c58a:	push   ds
1100c58b:	cwde   
1100c58c:	jmp    0xe83f1cb0
1100c591:	or     al,0x3c
1100c593:	jge    0x1100c58c
1100c595:	cdq    
1100c596:	mov    ecx,0xa0976630
1100c59b:	retf   
1100c59c:	add    cl,BYTE PTR [eax+0x22480028]
1100c5a2:	add    DWORD PTR ds:0xa6400ee6,ebx
1100c5a8:	or     DWORD PTR [eax],esi
1100c5aa:	or     BYTE PTR [eax+0x6e],al
1100c5ad:	adc    al,BYTE PTR [ebp+ebp*2-0x6df5b8c]
1100c5b4:	cli    
1100c5b5:	sbb    eax,0xe413dd0
1100c5ba:	add    ah,BYTE PTR [edx+0x15]
1100c5bd:	les    edi,FWORD PTR [ebx-0x5f]
1100c5c0:	and    BYTE PTR [ecx+0x375c7f08],ah
1100c5c6:	rol    DWORD PTR [ebp+0x41],0xb
1100c5ca:	and    al,dh
1100c5cc:	inc    edi
1100c5cd:	iret   
1100c5ce:	sbb    ebp,eax
1100c5d0:	addr16 pop ebp
1100c5d2:	jl     0x1100c56b
1100c5d4:	cld    
1100c5d5:	and    BYTE PTR [ebp-0x18],al
1100c5d8:	or     DWORD PTR [edi+0x1a],ebx
1100c5db:	out    0x1,al
1100c5dd:	xchg   ecx,eax
1100c5de:	test   BYTE PTR [eax],ah
1100c5e0:	out    dx,eax
1100c5e1:	and    DWORD PTR [esi+0x40ef671c],edx
1100c5e7:	ja     0x1100c640
1100c5e9:	out    dx,eax
1100c5ea:	sub    ebp,DWORD PTR [edx]
1100c5ec:	jb     0x1100c5c4
1100c5ee:	fcomi  st,st(6)
1100c5f0:	out    dx,al
1100c5f1:	xchg   ebx,eax
1100c5f2:	xchg   edi,eax
1100c5f3:	pop    edi
1100c5f4:	cmp    al,BYTE PTR [eax]
1100c5f6:	cwde   
1100c5f7:	add    DWORD PTR [ecx],eax
1100c5f9:	sbb    DWORD PTR [esi+0x0],0xdf29c178
1100c600:	fwait
1100c601:	mov    ebp,gs
1100c603:	aaa    
1100c604:	sbb    BYTE PTR [ebx],0xc2
1100c607:	jnp    0x1100c638
1100c609:	shl    BYTE PTR [edx+0x1e],0x45
1100c60d:	jb     0x1100c5d7
1100c60f:	jbe    0x1100c59b
1100c611:	push   ss
1100c612:	mov    ah,0xd7
1100c614:	and    edi,DWORD PTR [esi-0x3a]
1100c617:	xlat   BYTE PTR cs:[ebx]
1100c619:	imul   edi,edi,0xfffffffb
1100c61c:	jmp    0x1100c691
1100c61e:	push   ecx
1100c61f:	in     eax,dx
1100c620:	pop    ds
1100c621:	lea    ebp,[edx-0x2770c8a8]
1100c627:	(bad)  
1100c628:	test   eax,0xda3f0911
1100c62d:	std    
1100c62e:	test   al,0xd
1100c630:	xor    BYTE PTR [ecx],bl
1100c632:	mov    BYTE PTR [edi-0x75],cl
1100c635:	(bad)  
1100c636:	sub    edx,DWORD PTR [esi-0x1]
1100c639:	push   ecx
1100c63a:	adc    ch,BYTE PTR [edx]
1100c63c:	lahf   
1100c63d:	fcmovnu st,st(2)
1100c63f:	in     al,dx
1100c640:	(bad)  
1100c641:	repz and ah,al
1100c644:	arpl   WORD PTR [ebp+0x6],sp
1100c647:	mov    al,0x30
1100c649:	(bad)  
1100c64a:	jmp    0x1100c69d
1100c64c:	aas    
1100c64d:	test   BYTE PTR [esi],al
1100c64f:	inc    edi
1100c650:	aad    0xda
1100c652:	lds    ecx,FWORD PTR [eax+0x42]
1100c655:	loop   0x1100c660
1100c657:	mov    ds:0x839e8009,al
1100c65c:	stos   BYTE PTR es:[edi],al
1100c65d:	and    dl,BYTE PTR [ebx+0x41]
1100c660:	add    BYTE PTR [eax],ah
1100c662:	pop    esp
1100c663:	or     DWORD PTR [esi+0x2e98f015],0xffffffcc
1100c66a:	push   ecx
1100c66b:	sbb    DWORD PTR [eax],0x83fc43bc
1100c671:	nop
1100c672:	xchg   ebx,eax
1100c673:	adc    bh,BYTE PTR [eax]
1100c675:	inc    esp
1100c676:	push   ecx
1100c677:	mov    esp,DWORD PTR [eax+0x62]
1100c67a:	pop    ss
1100c67b:	enter  0x4fde,0xbd
1100c67f:	adc    bh,dh
1100c681:	inc    ebp
1100c682:	fwait
1100c683:	aas    
1100c684:	lds    eax,FWORD PTR ds:0x52984108
1100c68a:	or     DWORD PTR [edi+esi*2],ebx
1100c68d:	and    dl,dl
1100c68f:	inc    edx
1100c690:	adc    dh,BYTE PTR [ecx]
1100c692:	xor    BYTE PTR [edx+0x95a0e23],al
1100c698:	jmp    edi
1100c69a:	cdq    
1100c69b:	push   ebx
1100c69c:	adc    dh,BYTE PTR [eax]
1100c69e:	fs push esp
1100c6a0:	jnp    0x1100c6bd
1100c6a2:	inc    edx
1100c6a3:	fsubr  st(0),st
1100c6a5:	jno    0x1100c63b
1100c6a7:	inc    edi
1100c6a8:	inc    eax
1100c6a9:	ret    0xa5ae
1100c6ac:	pop    edi
1100c6ad:	xor    al,0x4a
1100c6af:	mov    ?,WORD PTR [edi-0x68]
1100c6b2:	add    DWORD PTR [ecx],0x4
1100c6b5:	fidivr DWORD PTR [ebx+eax*1+0x1bd29f67]
1100c6bc:	pop    edi
1100c6bd:	repnz dec ebx
1100c6bf:	add    eax,0x34fc2400
1100c6c4:	xor    DWORD PTR [eax+0x58],ebp
1100c6c7:	scas   al,BYTE PTR es:[edi]
1100c6c8:	out    dx,eax
1100c6c9:	cmp    bl,al
1100c6cb:	repz (bad) 
1100c6ce:	lods   eax,DWORD PTR ds:[esi]
1100c6cf:	pop    esp
1100c6d0:	clc    
1100c6d1:	scas   eax,DWORD PTR es:[edi]
1100c6d2:	cmp    al,0x13
1100c6d4:	mov    esi,0xdb7be97e
1100c6d9:	or     DWORD PTR [edi],edi
1100c6db:	cmc    
1100c6dc:	mov    ds:0xc69f256c,al
1100c6e1:	mov    ebp,DWORD PTR [esp+eax*2]
1100c6e4:	mov    ?,WORD PTR [ebp+0x1]
1100c6e7:	sbb    BYTE PTR ds:0xfcbb4255,0xc6
1100c6ee:	xor    esp,ebx
1100c6f0:	jp     0x1100c76d
1100c6f2:	adc    dh,bh
1100c6f4:	pop    edx
1100c6f5:	in     eax,0x8f
1100c6f7:	jbe    0x1100c776
1100c6f9:	adc    dh,dl
1100c6fb:	jmp    0x1cfb0429
1100c700:	movups xmm0,XMMWORD PTR [edi+0x7f]
1100c704:	aam    0x6
1100c706:	call   0xbbcfb07c
1100c70b:	fprem1 
1100c70d:	shr    BYTE PTR [edx],1
1100c70f:	adc    dh,BYTE PTR [esi+0x2d]
1100c712:	test   al,0x5
1100c714:	add    BYTE PTR [eax-0xd5181af],ah
1100c71a:	dec    eax
1100c71b:	fsub   QWORD PTR [ecx-0x67]
1100c71e:	xor    BYTE PTR [edi],bh
1100c720:	inc    edx
1100c721:	adc    eax,eax
1100c723:	and    eax,0x774680cd
1100c728:	sub    eax,0x366415fc
1100c72d:	call   FWORD PTR [eax-0x7fb2fe00]
1100c733:	mov    WORD PTR [eax],es
1100c735:	push   esp
1100c736:	es inc eax
1100c738:	test   ecx,ebx
1100c73a:	dec    ecx
1100c73b:	sbb    al,0xa3
1100c73d:	add    BYTE PTR [edx],bh
1100c73f:	jle    0x1100c761
1100c741:	fstp   QWORD PTR [ebx]
1100c743:	cdq    
1100c744:	push   cs
1100c745:	jl     0x1100c7b6
1100c747:	sbb    ah,ah
1100c749:	mov    al,ds:0x7d1112b
1100c74e:	and    cl,al
1100c750:	cwde   
1100c751:	mov    esi,0x243a76e3
1100c756:	sbb    BYTE PTR [ebx],ah
1100c758:	sbb    al,0xd3
1100c75a:	arpl   WORD PTR [ebx-0x45e0587e],bx
1100c760:	add    bh,BYTE PTR [esi-0x15]
1100c763:	jmp    0x7b3cc13b
1100c768:	jmp    0x6567b449
1100c76d:	out    dx,eax
1100c76e:	sbb    al,0x48
1100c770:	sbb    bh,BYTE PTR [edi+ebp*2+0x3df84580]
1100c777:	push   esi
1100c778:	push   ss
1100c779:	stos   BYTE PTR es:[edi],al
1100c77a:	xor    eax,0xb40e6881
1100c77f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100c780:	lea    edx,[ebx+0x13]
1100c783:	dec    ebp
1100c784:	and    BYTE PTR [edi-0x1218c7ed],cl
1100c78a:	pop    es
1100c78b:	hlt    
1100c78c:	leave  
1100c78d:	retf   
1100c78e:	das    
1100c78f:	or     eax,0xc1a9e800
1100c794:	leave  
1100c795:	add    edx,DWORD PTR [eax]
1100c797:	xor    al,0x80
1100c799:	jmp    0x1100c755
1100c79b:	push   cs
1100c79c:	jbe    0x1100c76a
1100c79e:	pop    ebx
1100c79f:	outs   dx,BYTE PTR ds:[esi]
1100c7a0:	sahf   
1100c7a1:	aaa    
1100c7a2:	fistp  DWORD PTR [edi]
1100c7a4:	mov    dl,0xfa
1100c7a6:	je     0x1100c791
1100c7a8:	out    dx,al
1100c7a9:	ss cmc 
1100c7ab:	scas   eax,DWORD PTR es:[edi]
1100c7ac:	xchg   esp,eax
1100c7ad:	pushw  0xffed
1100c7b0:	(bad)  
1100c7b1:	ror    BYTE PTR [eax],cl
1100c7b3:	adc    BYTE PTR [ebp+0x7d],bl
1100c7b6:	ffreep st(5)
1100c7b8:	xchg   ecx,eax
1100c7b9:	jg     0x1100c74f
1100c7bb:	stos   BYTE PTR es:[edi],al
1100c7bc:	out    0x6,al
1100c7be:	sti    
1100c7bf:	jle    0x1100c75b
1100c7c1:	add    eax,0xa98506be
1100c7c6:	add    al,0x8
1100c7c8:	push   ebx
1100c7c9:	dec    esi
1100c7ca:	or     DWORD PTR [edi-0x74],edi
1100c7cd:	lock adc edx,ecx
1100c7d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100c7d1:	mov    cl,0x28
1100c7d3:	jne    0x1100c7c2
1100c7d5:	and    al,0x74
1100c7d7:	mov    eax,ds:0x2efb158d
1100c7dc:	mov    ecx,0xb92380fc
1100c7e1:	push   es
1100c7e2:	pop    es
1100c7e3:	daa    
1100c7e4:	pop    edx
1100c7e5:	add    BYTE PTR [edi],0xac
1100c7e8:	sets   BYTE PTR [eax-0x45]
1100c7ec:	add    BYTE PTR [esi],al
1100c7ee:	ror    DWORD PTR ds:0x7de7ff18,0x2b
1100c7f5:	(bad)  
1100c7f6:	add    ah,al
1100c7f8:	xor    al,0xc8
1100c7fa:	inc    ebx
1100c7fb:	jle    0x1100c828
1100c7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100c7fe:	imul   esi,DWORD PTR [eax+0x7e],0xe30e8500
1100c805:	jae    0x1100c868
1100c807:	add    BYTE PTR [eax-0x7ffb9d4c],ah
1100c80d:	fs loop 0x1100c79b
1100c810:	imul   edx,DWORD PTR [eax-0x164d9ce2],0x25
1100c817:	cmp    BYTE PTR [eax+0x4f6e269f],cl
1100c81d:	adc    DWORD PTR [eax+0x44],edx
1100c820:	es jp  0x1100c7e0
1100c823:	adc    DWORD PTR [ebx-0x7eca616f],edx
1100c829:	push   eax
1100c82a:	shl    ah,0x98
1100c82d:	and    esp,DWORD PTR [esi+0x5c4f05e1]
1100c833:	and    eax,0x5d263127
1100c838:	fwait
1100c839:	push   es
1100c83a:	rcr    BYTE PTR [ebx-0x40],1
1100c83d:	adc    al,0x1b
1100c83f:	push   edi
1100c840:	push   ss
1100c841:	jmp    0x381d:0xecb08b9d
1100c848:	test   DWORD PTR [edi+0x1f],0x37dbb7dc
1100c84f:	and    BYTE PTR [edi+0x1217f017],bl
1100c855:	add    BYTE PTR [esi-0x4bfec8e0],ah
1100c85b:	push   es
1100c85c:	ror    BYTE PTR [ecx],1
1100c85e:	add    bh,cl
1100c860:	jge    0x1100c835
1100c862:	cmc    
1100c863:	gs mov dh,0x9f
1100c866:	dec    edi
1100c867:	aad    0x34
1100c869:	add    DWORD PTR [edx+0x6c],eax
1100c86c:	(bad)  
1100c86d:	fldcw  WORD PTR [ebp+0x6c]
1100c870:	mov    edi,0xd2f4aeda
1100c875:	dec    ebx
1100c876:	mov    WORD PTR [edx+0x69],?
1100c879:	pop    ebp
1100c87a:	or     dl,dh
1100c87c:	or     DWORD PTR [ecx],edi
1100c87e:	cld    
1100c87f:	loopne 0x1100c848
1100c881:	push   ecx
1100c882:	mov    eax,0xb464a6a7
1100c887:	daa    
1100c888:	push   ds
1100c889:	and    BYTE PTR [ebx+ebx*4+0x3fda891e],ch
1100c890:	bound  edx,QWORD PTR [eax]
1100c892:	dec    eax
1100c893:	pextrw esp,(bad),0xc5
1100c895:	and    DWORD PTR [edi],edx
1100c897:	shr    BYTE PTR [edx+0x30],0xb3
1100c89b:	out    0x2a,al
1100c89d:	(bad)  
1100c89e:	lahf   
1100c89f:	(bad)  
1100c8a1:	leave  
1100c8a2:	imul   BYTE PTR [edi+0x6b5fde24]
1100c8a8:	add    ebx,esp
1100c8aa:	dec    esp
1100c8ab:	sbb    esi,eax
1100c8ad:	mov    cl,BYTE PTR [ebx]
1100c8af:	mov    al,ds:0xafdf5ff0
1100c8b4:	add    DWORD PTR [eax-0xdd6f95],edx
1100c8ba:	ret    0x31ba
1100c8bd:	jo     0x1100c8f4
1100c8bf:	mov    eax,ds:0x3189790a
1100c8c4:	(bad)  
1100c8c5:	aam    0x64
1100c8c7:	ret    
1100c8c8:	sbb    ebp,DWORD PTR [esi]
1100c8ca:	adc    BYTE PTR [edx+0x4069b487],0xaa
1100c8d1:	aas    
1100c8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100c8d3:	cmp    al,0xf0
1100c8d5:	jle    0x1100c89d
1100c8d7:	sub    al,0x20
1100c8d9:	jne    0x1100c87a
1100c8db:	ds jmp 0xc998e6
1100c8e1:	sub    edi,DWORD PTR [ebp+0x4c]
1100c8e4:	pop    ds
1100c8e5:	pop    ds
1100c8e6:	clc    
1100c8e7:	retf   
1100c8e8:	lahf   
1100c8e9:	mov    ecx,0xb83c8e1a
1100c8ee:	and    eax,0x5d14d8a7
1100c8f3:	imul   ebp,DWORD PTR [ebx-0x73],0x5b6aeb32
1100c8fa:	cmp    DWORD PTR cs:[esi+0x14b204e3],ebp
1100c901:	(bad)  
1100c902:	stc    
1100c903:	fist   WORD PTR [esi]
1100c905:	adc    eax,0x8f9dff39
1100c90a:	call   0x1102e0a2
1100c90f:	call   0xddbc:0x6ced01b
1100c916:	add    eax,DWORD PTR [eax+0x10]
1100c919:	jl     0x1100c988
1100c91b:	add    ch,al
1100c91d:	sbb    BYTE PTR [eax+0x5a00f855],al
1100c923:	(bad)  [ebx+0x5e]
1100c926:	jg     0x1100c975
1100c928:	into   
1100c929:	neg    BYTE PTR [ebx+0xb4d10]
1100c92f:	(bad)
1100c932:	lods   eax,DWORD PTR ds:[esi]
1100c933:	push   edi
1100c934:	cmp    bl,ah
1100c936:	int    0xa7
1100c938:	fisttp DWORD PTR [edi-0x11]
1100c93b:	icebp  
1100c93c:	lock test eax,0x518220ab
1100c942:	adc    al,ch
1100c944:	test   al,0xee
1100c946:	inc    edi
1100c947:	or     eax,0x6bfd1ea0
1100c94c:	xor    al,0x98
1100c94e:	call   0x891e:0x982351f2
1100c955:	rcl    BYTE PTR [ebx+0x4f223ffa],0x80
1100c95c:	mov    ds:0x3a08c04b,eax
1100c961:	mov    dh,0x9d
1100c963:	ror    edi,1
1100c965:	dec    esi
1100c966:	and    esi,DWORD PTR [eax-0xde41f69]
1100c96c:	add    al,ch
1100c96e:	dec    eax
1100c96f:	mov    esi,0x55cf7230
1100c974:	and    cl,al
1100c976:	arpl   sp,cx
1100c978:	add    esp,DWORD PTR [eax]
1100c97a:	inc    ecx
1100c97b:	pop    ds
1100c97c:	xor    edi,DWORD PTR [ecx]
1100c97e:	cwde   
1100c97f:	shl    BYTE PTR [ebx-0x72],0x8
1100c983:	inc    ecx
1100c984:	dec    ebp
1100c985:	adc    dh,BYTE PTR es:[edi-0x7add1b40]
1100c98c:	std    
1100c98d:	jp     0x1100c91b
1100c98f:	add    dl,BYTE PTR [edx+ebx*1+0x8]
1100c993:	jnp    0x1100c9bd
1100c995:	repnz call 0xb12:0x7d91c04
1100c99d:	add    BYTE PTR [esi-0x5],ah
1100c9a0:	mov    ah,0x4a
1100c9a2:	inc    edi
1100c9a3:	out    0x21,eax
1100c9a5:	sbb    BYTE PTR [eax+0x5a],dl
1100c9a8:	xor    ecx,DWORD PTR [eax+0x99e9fff]
1100c9ae:	or     DWORD PTR [eax-0x26],0x440033de
1100c9b5:	or     eax,0xaa11cf04
1100c9ba:	or     eax,0x55f8fdbd
1100c9bf:	mov    al,0xff
1100c9c1:	sahf   
1100c9c2:	mov    ds:0xcf3797fe,eax
1100c9c7:	push   ss
1100c9c8:	mov    ebp,0xc083503
1100c9cd:	or     dl,BYTE PTR [esi]
1100c9cf:	pop    edx
1100c9d0:	mov    ecx,0xa9ea3c03
1100c9d5:	imul   eax,DWORD PTR [edx-0x2e],0xa83d4e0b
1100c9dc:	outs   dx,DWORD PTR ds:[esi]
1100c9dd:	jae    0x1100c9ea
1100c9df:	add    BYTE PTR [ecx-0x4f],ah
1100c9e2:	mov    bl,0x2
1100c9e4:	outs   dx,DWORD PTR ds:[esi]
1100c9e5:	mov    bh,0x0
1100c9e7:	mov    al,ds:0x12ffed
1100c9ec:	lods   al,BYTE PTR ds:[esi]
1100c9ed:	xchg   BYTE PTR [ecx+edi*1],dh
1100c9f0:	bound  ebp,QWORD PTR [ebx+0x3b]
1100c9f3:	clc    
1100c9f4:	sbb    DWORD PTR [edi+0x5c],edi
1100c9f7:	(bad)  
1100c9f8:	cld    
1100c9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100c9fa:	ret    0xc490
1100c9fd:	push   ds
1100c9fe:	data16 sti 
1100ca00:	neg    ebx
1100ca02:	scas   eax,DWORD PTR es:[edi]
1100ca03:	lods   al,BYTE PTR ds:[esi]
1100ca04:	out    0x85,al
1100ca06:	(bad)  
1100ca07:	ret    
1100ca08:	sbb    esp,DWORD PTR [edi+edi*2+0x6e3f8c0b]
1100ca0f:	adc    ecx,DWORD PTR [edx-0x3a83a388]
1100ca15:	sbb    dh,dl
1100ca17:	outs   dx,DWORD PTR ds:[esi]
1100ca18:	test   al,0xa2
1100ca1a:	push   eax
1100ca1b:	dec    edi
1100ca1c:	(bad)  
1100ca1d:	fs hlt 
1100ca1f:	pop    DWORD PTR [edx+0x4f]
1100ca22:	ret    0xeb8f
1100ca25:	pop    esp
1100ca26:	add    al,0x88
1100ca28:	repz cmp DWORD PTR fs:[bx+si],eax
1100ca2d:	sbb    BYTE PTR [edx],al
1100ca2f:	retf   
1100ca30:	cmp    eax,0x8c0125de
1100ca35:	add    al,0x1b
1100ca37:	or     DWORD PTR [ecx],esp
1100ca39:	fcmovnu st,st(7)
1100ca3b:	mov    al,ds:0x28f7e46
1100ca40:	out    dx,al
1100ca41:	aam    0x68
1100ca43:	out    dx,eax
1100ca44:	pop    eax
1100ca45:	ror    BYTE PTR [ecx+0x4b],1
1100ca48:	dec    eax
1100ca49:	idiv   BYTE PTR [edi+0x7b409363]
1100ca4f:	add    al,0x84
1100ca51:	push   ebx
1100ca52:	adc    BYTE PTR [eax-0x6d7f6cdf],al
1100ca58:	jg     0x1100ca92
1100ca5a:	popa   
1100ca5b:	test   al,0x12
1100ca5d:	add    BYTE PTR [eax],ah
1100ca5f:	jb     0x1100ca0f
1100ca61:	inc    edx
1100ca62:	iret   
1100ca63:	xchg   DWORD PTR [eax],ecx
1100ca65:	mov    esp,0xfaeb5612
1100ca6a:	ret    
1100ca6b:	lea    ebp,[edx]
1100ca6d:	or     dl,BYTE PTR ds:0xe35623f6
1100ca73:	xor    eax,0xbeb9ef43
1100ca78:	sbb    BYTE PTR [esi+0xf],ch
1100ca7b:	test   eax,0x84d58eab
1100ca80:	and    dl,BYTE PTR [edx+esi*4]
1100ca83:	sub    al,0x9c
1100ca85:	and    BYTE PTR [edi-0x2d],0x61
1100ca89:	scas   eax,DWORD PTR es:[edi]
1100ca8a:	frstor [esi-0x20]
1100ca8d:	aam    0xdf
1100ca8f:	pop    edx
1100ca90:	pop    ebx
1100ca91:	add    DWORD PTR [ecx-0x467a16d5],0x29
1100ca98:	inc    edi
1100ca99:	push   DWORD PTR [edi-0x50c57d68]
1100ca9f:	inc    ebx
1100caa0:	fwait
1100caa1:	add    ebx,0x595803bd
1100caa7:	call   0x66c3f215
1100caac:	pop    ss
1100caad:	mov    edi,0x12d36fb5
1100cab2:	add    BYTE PTR [esi+eiz*4-0x7c2c28fa],dl
1100cab9:	outs   dx,DWORD PTR ds:[esi]
1100caba:	pop    ss
1100cabb:	add    BYTE PTR [eax],dh
1100cabd:	sbb    BYTE PTR [ebx+eax*1-0x30],0xea
1100cac2:	aas    
1100cac3:	cdq    
1100cac4:	add    BYTE PTR [ecx],al
1100cac6:	add    BYTE PTR [esi+0x68d83ae9],ch
1100cacc:	push   0x6
1100cace:	push   ebx
1100cacf:	jp     0x1100ca72
1100cad1:	hlt    
1100cad2:	pop    edx
1100cad3:	mov    ecx,0x7a7f6c65
1100cad8:	fwait
1100cad9:	ret    
1100cada:	inc    edi
1100cadb:	not    DWORD PTR [edx+0x12]
1100cade:	dec    ecx
1100cadf:	sar    DWORD PTR [eax+esi*2],1
1100cae2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100cae4:	jmp    0x1100cb11
1100cae6:	mov    eax,0xb271b6f5
1100caeb:	out    dx,eax
1100caec:	inc    edi
1100caed:	leave  
1100caee:	xlat   BYTE PTR ds:[ebx]
1100caef:	pop    ds
1100caf0:	inc    edi
1100caf1:	jge    0x1100cb17
1100caf3:	(bad)  
1100caf4:	call   0x570801b4
1100caf9:	call   0x81:0x9427c3fc
1100cb00:	or     DWORD PTR [ecx],eax
1100cb02:	cwde   
1100cb03:	mov    edx,0xccf4287c
1100cb08:	cld    
1100cb09:	arpl   WORD PTR [edi+ebx*2+0x12],ax
1100cb0d:	bound  ebp,QWORD PTR [ebp+0x5a8bbc2]
1100cb13:	adc    BYTE PTR [edi],bl
1100cb15:	adc    BYTE PTR [esi],bh
1100cb17:	arpl   cx,bx
1100cb19:	jo     0x1100caef
1100cb1b:	sbb    ah,dh
1100cb1d:	out    0xb0,al
1100cb1f:	daa    
1100cb20:	push   0xc76da000
1100cb25:	push   ds
1100cb26:	fnstsw WORD PTR [ebp-0x6e]
1100cb29:	sbb    edx,DWORD PTR [eax-0x73]
1100cb2c:	push   ebp
1100cb2d:	js     0x1100cadf
1100cb2f:	rcl    BYTE PTR [edx],cl
1100cb31:	mov    eax,0x64008e0
1100cb36:	or     ah,BYTE PTR [edx-0x61]
1100cb39:	mov    ebx,DWORD PTR [ecx]
1100cb3b:	inc    ebx
1100cb3c:	and    eax,0x47dec5c6
1100cb41:	push   ebx
1100cb42:	(bad)  
1100cb43:	and    al,0xfa
1100cb45:	dec    edx
1100cb46:	loope  0x1100cb59
1100cb48:	pop    ds
1100cb49:	lahf   
1100cb4a:	pop    DWORD PTR [edi-0x6e]
1100cb4d:	and    DWORD PTR [ecx+0x5a14aa20],ebx
1100cb53:	test   DWORD PTR [esi+0xe476a3f],esi
1100cb59:	repz pop es
1100cb5b:	or     BYTE PTR [eax],al
1100cb5d:	or     bl,0xed
1100cb60:	icebp  
1100cb61:	(bad)  
1100cb62:	pushf  
1100cb63:	xchg   BYTE PTR [edi],bh
1100cb65:	jp     0x1100cb45
1100cb67:	fisub  DWORD PTR [edx-0x6c]
1100cb6a:	mov    al,ds:0x6bd30125
1100cb6f:	outs   dx,DWORD PTR ds:[esi]
1100cb70:	jns    0x1100cb41
1100cb72:	fiadd  DWORD PTR [eax+esi*1]
1100cb75:	and    cl,al
1100cb77:	fiadd  WORD PTR [ecx+0x5c62f2ae]
1100cb7d:	dec    edi
1100cb7e:	pusha  
1100cb7f:	or     eax,0xafbe6dcc
1100cb84:	scas   eax,DWORD PTR es:[edi]
1100cb85:	idiv   DWORD PTR [ebp+0x13]
1100cb88:	retf   0x1c
1100cb8b:	dec    ebp
1100cb8c:	or     eax,0xbb6041ae
1100cb91:	add    DWORD PTR [eax+0x353411],eax
1100cb97:	or     eax,0x14041400
1100cb9c:	dec    esp
1100cb9d:	sub    BYTE PTR [ebx+0x2fd68fbb],0xc8
1100cba4:	cmp    al,0x51
1100cba6:	addr16 dec edi
1100cba8:	jmp    0x1068cc1b
1100cbad:	mov    ebp,0x1d9b1e70
1100cbb2:	js     0x1100cba7
1100cbb4:	rdrand eax
1100cbb7:	(bad)
1100cbba:	leave  
1100cbbb:	aaa    
1100cbbc:	mov    fs,WORD PTR [ebx+0x53fdb13c]
1100cbc2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
1100cbc4:	mov    cl,0xa
1100cbc6:	sbb    BYTE PTR [eax],cl
1100cbc8:	pop    es
1100cbc9:	nop
1100cbca:	inc    esi
1100cbcb:	jle    0x1100cbd7
1100cbcd:	or     BYTE PTR [edx-0x5d],cl
1100cbd0:	or     dl,ch
1100cbd2:	add    BYTE PTR [eax+0x57],dl
1100cbd5:	add    BYTE PTR [ebx+0x16],0xa9
1100cbd9:	into   
1100cbda:	pop    esp
1100cbdb:	mov    dl,0xcb
1100cbdd:	sub    esi,DWORD PTR [edi]
1100cbdf:	lahf   
1100cbe0:	sbb    ch,BYTE PTR [ecx-0x5170b72d]
1100cbe6:	cmp    eax,0x999f425
1100cbeb:	push   eax
1100cbec:	xchg   ecx,eax
1100cbed:	push   eax
1100cbee:	pop    es
1100cbef:	lods   eax,DWORD PTR ds:[esi]
1100cbf0:	lds    esi,FWORD PTR [ebx+0x9a2017]
1100cbf6:	call   0x155b57bd
1100cbfb:	repz add eax,0x73c8db5a
1100cc01:	pop    es
1100cc02:	xor    al,0x19
1100cc04:	cwde   
1100cc05:	in     al,0x53
1100cc07:	inc    esi
1100cc08:	fs pop ebp
1100cc0a:	dec    esp
1100cc0b:	xchg   esp,eax
1100cc0c:	ins    DWORD PTR es:[edi],dx
1100cc0d:	jg     0x1100cc24
1100cc0f:	out    dx,al
1100cc10:	retf   
1100cc11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100cc12:	or     BYTE PTR [ebx-0x26],0x83
1100cc16:	into   
1100cc17:	jno    0x1100cc61
1100cc19:	jmp    0x1100cbac
1100cc1b:	add    esi,eax
1100cc1d:	pop    esp
1100cc1e:	inc    ebp
1100cc1f:	add    BYTE PTR [ebp+0x889829d],0x5c
1100cc26:	add    BYTE PTR [ebx-0x5e],cl
1100cc29:	(bad)  
1100cc2a:	mov    dl,0x8e
1100cc2c:	and    BYTE PTR [esi+0x3],ah
1100cc2f:	(bad)  
1100cc30:	ficom  DWORD PTR [ebx-0xb]
1100cc33:	pusha  
1100cc34:	icebp  
1100cc35:	mov    ah,bh
1100cc37:	lods   al,BYTE PTR ds:[esi]
1100cc38:	xchg   BYTE PTR [edi],ah
1100cc3a:	cmp    eax,0xb407ccaa
1100cc3f:	mov    ebp,0x3a94667b
1100cc44:	clc    
1100cc45:	add    ch,BYTE PTR [ebp-0x1f8cfb4f]
1100cc4b:	les    edx,FWORD PTR [ebx]
1100cc4d:	xor    BYTE PTR [edi+0x40],0x6b
1100cc51:	add    ah,BYTE PTR ds:0x8ba8a3bd
1100cc57:	fsub   DWORD PTR [esi-0x3fbf7fff]
1100cc5d:	mov    ?,esp
1100cc5f:	cli    
1100cc60:	jmp    FWORD PTR [ebp+0x1e]
1100cc63:	add    BYTE PTR [esi-0x16],al
1100cc66:	rcl    DWORD PTR [edx],cl
1100cc68:	sub    BYTE PTR [ebx],0xf0
1100cc6b:	xchg   ebx,eax
1100cc6c:	or     al,al
1100cc6e:	mov    al,ds:0x90b95c01
1100cc73:	xchg   ebx,eax
1100cc74:	cmp    eax,0x383add6e
1100cc79:	jae    0x898bc6fb
1100cc7f:	hlt    
1100cc80:	mov    dh,0xe
1100cc82:	push   edi
1100cc83:	iret   
1100cc84:	(bad)  
1100cc86:	stos   DWORD PTR es:[edi],eax
1100cc87:	mov    ecx,0xf039f2f0
1100cc8c:	mov    ch,0x14
1100cc8e:	dec    ebp
1100cc8f:	test   eax,0xd51a7e91
1100cc94:	std    
1100cc95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100cc96:	bnd jnp 0x1100cc3e
1100cc99:	or     eax,0xc41ae4b8
1100cc9e:	cwde   
1100cc9f:	add    BYTE PTR [ecx-0x7f63b404],cl
1100cca5:	adc    al,0xd4
1100cca7:	(bad)  
1100cca8:	dec    ebx
1100cca9:	dec    esp
1100ccaa:	adc    DWORD PTR [edx],esi
1100ccac:	stos   BYTE PTR es:[edi],al
1100ccad:	ret    0x548f
1100ccb0:	jecxz  0x1100ccd3
1100ccb2:	xor    eax,0x4ecaa3df
1100ccb7:	mov    WORD PTR [ebp+0x50e7c10],?
1100ccbd:	mov    edi,0xd45e7b62
1100ccc2:	jle    0x1100cd1b
1100ccc4:	add    eax,DWORD PTR [eax-0x6ce1f8b6]
1100ccca:	stos   DWORD PTR es:[edi],eax
1100cccb:	xor    bh,cl
1100cccd:	and    cl,BYTE PTR [esi+eiz*4+0x3]
1100ccd1:	(bad)  
1100ccd2:	add    ecx,DWORD PTR [eax]
1100ccd4:	outs   dx,BYTE PTR ds:[esi]
1100ccd5:	push   edi
1100ccd6:	(bad)  
1100ccd7:	cld    
1100ccd8:	jne    0x1100cceb
1100ccda:	adc    DWORD PTR [edx+0xb],esi
1100ccdd:	cmp    bh,dl
1100ccdf:	outs   dx,BYTE PTR ds:[esi]
1100cce0:	sub    cl,BYTE PTR [edx]
1100cce2:	add    edi,DWORD PTR [esi+0x77]
1100cce5:	xor    cl,BYTE PTR [edx-0x15]
1100cce8:	xchg   edx,eax
1100cce9:	pusha  
1100ccea:	cmp    al,al
1100ccec:	daa    
1100cced:	push   es
1100ccee:	daa    
1100ccef:	jnp    0x1100ccde
1100ccf1:	mul    DWORD PTR [edi+0x227c0379]
1100ccf7:	cld    
1100ccf8:	adc    al,0xbf
1100ccfa:	add    BYTE PTR [eax],bh
1100ccfc:	fidiv  DWORD PTR [ebx]
1100ccfe:	sti    
1100ccff:	scas   eax,DWORD PTR es:[edi]
1100cd00:	sahf   
1100cd01:	adc    DWORD PTR ds:0xf57b3d80,ebp
1100cd07:	retf   0x7819
1100cd0a:	xlat   BYTE PTR ds:[ebx]
1100cd0b:	retf   
1100cd0c:	(bad)  
1100cd0d:	ret    0x7bbe
1100cd10:	dec    esp
1100cd11:	addr16 out dx,eax
1100cd13:	sahf   
1100cd14:	test   DWORD PTR [edi-0x1f2ffcbb],edi
1100cd1a:	pusha  
1100cd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100cd1c:	and    ch,BYTE PTR [ebx]
1100cd1e:	adc    eax,0x8312297f
1100cd23:	ins    DWORD PTR es:[edi],dx
1100cd24:	std    
1100cd25:	test   al,0xbb
1100cd27:	add    eax,0x7e083c12
1100cd2c:	fwait
1100cd2d:	or     DWORD PTR [eax-0x649205e9],esp
1100cd33:	add    eax,0x2000ae80
1100cd38:	loop   0x1100cd3a
1100cd3a:	push   0x9acb0ff4
1100cd3f:	jp     0x1100cd2a
1100cd41:	addr16 push ebp
1100cd43:	pop    edx
1100cd44:	pop    edx
1100cd45:	xor    DWORD PTR [bx+0x7096],ecx
1100cd4a:	rcl    dl,1
1100cd4c:	or     ebp,DWORD PTR [edx]
1100cd4e:	push   esi
1100cd4f:	cld    
1100cd50:	xor    eax,0xaff1f1e0
1100cd55:	push   esi
1100cd56:	jo     0x1100cd1f
1100cd58:	pop    ebp
1100cd59:	arpl   WORD PTR [esi+esi*8-0x7f],sp
1100cd5d:	push   ebp
1100cd5e:	(bad)  
1100cd5f:	lock dec esp
1100cd62:	sub    BYTE PTR [ecx],dl
1100cd64:	jg     0x1100cd80
1100cd66:	adc    al,0x92
1100cd68:	or     edx,DWORD PTR [eax+0x5]
1100cd6b:	inc    DWORD PTR [eax]
1100cd6d:	adc    al,BYTE PTR [eax-0x257f2e8]
1100cd73:	push   DWORD PTR [edx+edi*8]
1100cd76:	mov    bl,0x1f
1100cd78:	pushf  
1100cd79:	fdivr  QWORD PTR [edx-0x22]
1100cd7c:	dec    ebx
1100cd7d:	xchg   esi,eax
1100cd7e:	pop    ds
1100cd7f:	(bad)  
1100cd81:	loop   0x1100cd85
1100cd83:	xchg   esp,eax
1100cd84:	int3   
1100cd85:	aas    
1100cd86:	popa   
1100cd87:	sti    
1100cd88:	sub    edx,ecx
1100cd8a:	das    
1100cd8b:	and    eax,0x217dc500
1100cd90:	test   BYTE PTR [ecx],ch
1100cd92:	push   edi
1100cd93:	es pop eax
1100cd95:	dec    eax
1100cd96:	xchg   ecx,eax
1100cd97:	cmp    DWORD PTR [edx],0x22
1100cd9a:	adc    BYTE PTR [edi-0x4bfc0ab1],dh
1100cda0:	loopne 0x1100cda5
1100cda2:	inc    edi
1100cda3:	push   cs
1100cda4:	retf   0x31c
1100cda7:	sahf   
1100cda8:	or     edx,DWORD PTR [eax+0x1f127d2]
1100cdae:	add    BYTE PTR [edx-0x237e2372],dh
1100cdb4:	cmp    eax,0xfbc05348
1100cdb9:	neg    BYTE PTR [eax]
1100cdbb:	dec    bl
1100cdbd:	repz sbb DWORD PTR [eax-0x551f84c0],edx
1100cdc4:	inc    esp
1100cdc5:	hlt    
1100cdc6:	dec    ecx
1100cdc7:	fiadd  WORD PTR [eax]
1100cdc9:	and    DWORD PTR ds:0xd24c033d,ebx
1100cdcf:	adc    BYTE PTR [esp+eax*2-0x29],bh
1100cdd3:	inc    ebx
1100cdd4:	push   ds
1100cdd5:	mov    esp,0xdc72de12
1100cdda:	ficom  DWORD PTR [edi+eiz*2+0x1]
1100cdde:	push   0x809133b
1100cde3:	add    eax,0x6cb9c013
1100cde8:	(bad)  [edx-0x6e]
1100cdeb:	cwde   
1100cdec:	fidivr DWORD PTR [esi-0x30]
1100cdef:	lods   al,BYTE PTR ds:[esi]
1100cdf0:	(bad)  
1100cdf1:	std    
1100cdf2:	sub    eax,0x91b4000
1100cdf7:	pop    eax
1100cdf8:	rol    BYTE PTR [eax+ecx*2],cl
1100cdfb:	dec    ebx
1100cdfc:	and    al,dl
1100cdfe:	fsub   DWORD PTR [esi+0x0]
1100ce01:	shr    BYTE PTR [ecx-0x11bee31],0x7f
1100ce08:	ins    DWORD PTR es:[edi],dx
1100ce09:	add    dl,BYTE PTR [eax]
1100ce0b:	sti    
1100ce0c:	dec    edi
1100ce0d:	sbb    al,al
1100ce0f:	xchg   edi,eax
1100ce10:	xchg   DWORD PTR [edi-0x39bfa1bf],ebx
1100ce16:	imul   bl
1100ce18:	pusha  
1100ce19:	xchg   ecx,eax
1100ce1a:	push   ss
1100ce1b:	ja     0x1100ce2c
1100ce1d:	mov    ebp,0xa1e90cd4
1100ce22:	(bad)  
1100ce23:	sbb    al,0xc0
1100ce25:	iret   
1100ce26:	outs   dx,DWORD PTR ds:[esi]
1100ce27:	std    
1100ce28:	enter  0x67c3,0xae
1100ce2c:	dec    ecx
1100ce2d:	jbe    0x1100ce2e
1100ce2f:	or     BYTE PTR [ecx+0x1df5197e],bl
1100ce35:	int3   
1100ce36:	dec    esp
1100ce37:	sar    DWORD PTR [edx],1
1100ce39:	mov    dl,0xff
1100ce3b:	ror    eax,cl
1100ce3d:	pop    ds
1100ce3e:	mov    bh,0x1f
1100ce40:	lea    esi,[eax]
1100ce42:	add    al,0x98
1100ce44:	cmp    BYTE PTR [edi+0x5c],0x8c
1100ce48:	adc    eax,0x65b50f60
1100ce4d:	aad    0xd3
1100ce4f:	dec    ebp
1100ce50:	sub    BYTE PTR [eax],al
1100ce52:	shr    BYTE PTR [edx+0x25f30eb9],1
1100ce58:	push   ss
1100ce59:	pop    edi
1100ce5a:	jno    0x1100ce5e
1100ce5c:	push   ebp
1100ce5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100ce5e:	(bad)  
1100ce5f:	or     ebx,edi
1100ce61:	dec    edi
1100ce62:	sbb    al,al
1100ce64:	pop    eax
1100ce65:	mov    ecx,0x301cc712
1100ce6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100ce6b:	mov    cl,BYTE PTR [eax+0xbaf4da0]
1100ce71:	mov    BYTE PTR [eax+0x5a],cl
1100ce74:	mov    al,0x8e
1100ce76:	dec    ebx
1100ce77:	dec    eax
1100ce78:	pop    ss
1100ce79:	pop    esi
1100ce7a:	push   ebp
1100ce7b:	je     0x1100ce2a
1100ce7d:	mov    edx,0x49cd06f0
1100ce82:	mov    al,ds:0x4f5f0081
1100ce87:	jl     0x1100ce8a
1100ce89:	push   edx
1100ce8a:	ds or  al,0x6f
1100ce8d:	xor    eax,0x673ca112
1100ce92:	mov    eax,ds:0x9c6f6247
1100ce97:	stos   DWORD PTR es:[edi],eax
1100ce98:	div    DWORD PTR [ebx*8-0x1dd0c0e7]
1100ce9f:	add    al,0x1c
1100cea1:	pop    esi
1100cea2:	pmullw mm4,QWORD PTR ds:0x9a32280c
1100cea9:	xchg   BYTE PTR [edi+0x3f],dl
1100ceac:	jg     0x1100cedb
1100ceae:	cmp    al,0xe1
1100ceb0:	shr    DWORD PTR [ebx],1
1100ceb2:	repz mov esi,0xb3e1d3d1
1100ceb8:	test   eax,0x31ff6cda
1100cebd:	std    
1100cebe:	mov    cl,BYTE PTR [esi+0x303b99d5]
1100cec4:	dec    esp
1100cec5:	or     ecx,DWORD PTR [eax]
1100cec7:	add    BYTE PTR [eax],dl
1100cec9:	test   BYTE PTR [eax+0x6ed004c],bl
1100cecf:	mov    ah,0xb
1100ced1:	std    
1100ced2:	inc    esi
1100ced3:	pusha  
1100ced4:	mov    cl,0xcd
1100ced6:	add    BYTE PTR [eax],al
1100ced8:	leave  
1100ced9:	push   ss
1100ceda:	fsin   
1100cedc:	inc    esp
1100cedd:	(bad)  
1100cede:	jmp    0x1500c9a8
1100cee3:	or     BYTE PTR [ecx*1-0x616cf420],al
1100ceea:	sub    al,0x8b
1100ceec:	in     eax,dx
1100ceed:	ja     0x1100cf15
1100ceef:	xchg   edx,eax
1100cef0:	into   
1100cef1:	add    al,0x80
1100cef3:	call   0xca70570f
1100cef8:	xor    eax,0x4694a7c8
1100cefd:	sbb    dl,BYTE PTR [edx-0x3d063184]
1100cf03:	sbb    al,0xdc
1100cf05:	mov    bh,0xb1
1100cf07:	mov    dh,BYTE PTR [esi]
1100cf09:	cmp    eax,0xf841f9a9
1100cf0e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
1100cf10:	xchg   edx,eax
1100cf11:	jp     0x1100cf52
1100cf13:	xor    ecx,DWORD PTR [ebp-0x16]
1100cf16:	jg     0x1100cea0
1100cf18:	dec    edi
1100cf19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100cf1a:	xchg   ecx,eax
1100cf1b:	aas    
1100cf1c:	cdq    
1100cf1d:	add    esi,ecx
1100cf1f:	push   ecx
1100cf20:	adc    dl,BYTE PTR [eax+0x22]
1100cf23:	mov    ecx,0xfe7989c2
1100cf28:	adc    BYTE PTR [edi],ch
1100cf2a:	pop    ds
1100cf2b:	cmp    cl,dl
1100cf2d:	push   cs
1100cf2e:	pop    eax
1100cf2f:	clc    
1100cf30:	dec    ebp
1100cf31:	push   es
1100cf32:	and    BYTE PTR ds:0xbc2a64f2,al
1100cf38:	dec    edx
1100cf39:	repz and eax,0xe64aa10d
1100cf3f:	inc    eax
1100cf40:	sub    cl,BYTE PTR [eax]
1100cf42:	adc    al,BYTE PTR [eax]
1100cf44:	pusha  
1100cf45:	pushf  
1100cf46:	mov    esi,0xd432e257
1100cf4b:	icebp  
1100cf4c:	add    ah,al
1100cf4e:	div    BYTE PTR [ebx+0x62]
1100cf51:	push   ecx
1100cf52:	xchg   ebp,eax
1100cf53:	and    al,BYTE PTR [edi]
1100cf55:	jne    0x1100cf1f
1100cf57:	jo     0x1100cf6f
1100cf59:	xchg   edx,eax
1100cf5a:	or     al,0x62
1100cf5c:	add    al,BYTE PTR [eax-0x7dedf1f6]
1100cf62:	push   ds
1100cf63:	dec    ecx
1100cf64:	inc    eax
1100cf65:	outs   dx,DWORD PTR ds:[esi]
1100cf66:	dec    eax
1100cf67:	inc    eax
1100cf68:	mov    edx,0x29beecdf
1100cf6d:	add    DWORD PTR [ecx],ebp
1100cf6f:	dec    ebp
1100cf70:	pusha  
1100cf71:	cmp    cl,BYTE PTR [esi+0x35a45f89]
1100cf77:	call   0x25eb2f0d
1100cf7c:	(bad)  
1100cf7d:	push   ebp
1100cf7e:	sub    al,BYTE PTR fs:[edi+esi*2-0x7eb231ca]
1100cf86:	rcl    BYTE PTR [ebx],1
1100cf88:	neg    ah
1100cf8a:	gs and eax,0x3b15efbc
1100cf90:	shr    DWORD PTR [edx-0x1f8067eb],0x9b
1100cf97:	adc    eax,0x62261a81
1100cf9c:	xchg   edi,eax
1100cf9d:	push   es
1100cf9e:	and    BYTE PTR ds:0x93dc21a9,bl
1100cfa4:	test   BYTE PTR ds:0x84885a17,cl
1100cfaa:	in     eax,dx
1100cfab:	repnz add al,BYTE PTR [ebp+eiz*8+0xe650e7]
1100cfb3:	add    ah,BYTE PTR [eax+0x6c]
1100cfb6:	jne    0x1100cfb8
1100cfb8:	shl    dl,1
1100cfba:	addr16 inc edi
1100cfbc:	jg     0x1100d02b
1100cfbe:	jmp    FWORD PTR [ebx-0x25]
1100cfc1:	lahf   
1100cfc2:	inc    esi
1100cfc3:	push   DWORD PTR [eax+0x19ff77fc]
1100cfc9:	in     al,0x32
1100cfcb:	jne    0x1100cfb6
1100cfcd:	out    dx,al
1100cfce:	xchg   edx,eax
1100cfcf:	fst    st(6)
1100cfd1:	adc    eax,0x42ea01d0
1100cfd6:	in     eax,dx
1100cfd7:	push   0xb7275d20
1100cfdc:	pop    ss
1100cfdd:	das    
1100cfde:	mov    edi,0xf9ae0e61
1100cfe3:	jbe    0x1100cffd
1100cfe5:	stc    
1100cfe6:	sub    esi,DWORD PTR [esi-0xd]
1100cfe9:	int    0x4c
1100cfeb:	mov    ds:0x1fbaa3a0,eax
1100cff0:	add    BYTE PTR [eax+0x4c69c108],al
1100cff6:	cld    
1100cff7:	and    DWORD PTR ds:0x8d000620,ebp
1100cffd:	sub    BYTE PTR [edi-0x18f57ac3],ch
1100d003:	fcom   QWORD PTR [eax]
1100d005:	test   eax,0x6301ecca
1100d00a:	fbstp  TBYTE PTR [edi+0x7533811e]
1100d010:	cmp    eax,0xf4a501ba
1100d015:	xchg   edi,eax
1100d016:	clc    
1100d017:	stc    
1100d018:	and    ebx,0x40485fd
1100d01e:	(bad)  
1100d01f:	add    BYTE PTR [edx+0x5c058ff0],ah
1100d025:	inc    esp
1100d026:	mov    eax,0x24258e9
1100d02b:	rcr    BYTE PTR [ecx+eax*1-0x69bf43c],cl
1100d032:	add    cl,BYTE PTR [edx+0x28040003]
1100d038:	jp     0x1100cfc0
1100d03a:	je     0x1100d04b
1100d03c:	in     al,0x26
1100d03e:	aam    0x75
1100d040:	jne    0x1100d00a
1100d042:	xor    eax,0xa401f9c8
1100d047:	mov    esi,0xc1a1457
1100d04c:	cdq    
1100d04d:	stos   DWORD PTR es:[edi],eax
1100d04e:	(bad)  
1100d04f:	repz or eax,eax
1100d052:	test   al,0xfd
1100d054:	in     al,0x29
1100d056:	mov    eax,ds:0xbe60218
1100d05b:	call   0x1b697ada
1100d060:	cmp    al,0xff
1100d062:	or     DWORD PTR [ebx+0x5f5f84e1],ebp
1100d068:	retf   
1100d069:	pusha  
1100d06a:	pop    edi
1100d06b:	sbb    al,cl
1100d06d:	cmc    
1100d06e:	shl    BYTE PTR [ecx-0x5],0x8d
1100d072:	out    dx,al
1100d073:	adc    esi,DWORD PTR [esi+0x3f]
1100d076:	(bad)  
1100d078:	inc    edx
1100d079:	les    esp,FWORD PTR [eax-0x54]
1100d07c:	sub    al,0xa4
1100d07e:	pop    ebp
1100d07f:	test   bl,al
1100d081:	inc    eax
1100d082:	and    ah,ah
1100d084:	ret    0x174
1100d087:	ror    bh,0xa1
1100d08a:	sbb    al,0xb
1100d08c:	inc    eax
1100d08d:	ret    0x961f
1100d090:	dec    ebp
1100d091:	mov    al,0x95
1100d093:	add    al,al
1100d095:	or     bh,BYTE PTR [edi+0x9]
1100d098:	add    BYTE PTR [edx+ecx*1-0x50],dh
1100d09c:	push   ds
1100d09d:	std    
1100d09e:	ret    
1100d09f:	mov    dl,0xb6
1100d0a1:	pop    esi
1100d0a2:	cs jmp 0xddbb1be7
1100d0a8:	enter  0xabf6,0xd2
1100d0ac:	fnsave [esi-0x2c]
1100d0af:	outs   dx,DWORD PTR ds:[esi]
1100d0b0:	jnp    0x1100d092
1100d0b2:	pop    ecx
1100d0b3:	lea    edi,[ecx-0x7d]
1100d0b6:	call   0xb0e40f18
1100d0bb:	aad    0x8f
1100d0bd:	clc    
1100d0be:	in     al,dx
1100d0bf:	iret   
1100d0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100d0c1:	cdq    
1100d0c2:	test   BYTE PTR [esi+0x7c845e47],ah
1100d0c8:	retf   0x9cc5
1100d0cb:	je     0x1100d0ef
1100d0cd:	sti    
1100d0ce:	in     al,0x3b
1100d0d0:	mov    ecx,0x77fc30fe
1100d0d5:	in     al,0xb9
1100d0d7:	in     al,0x97
1100d0d9:	push   ebx
1100d0da:	inc    ecx
1100d0db:	inc    eax
1100d0dc:	jl     0x1100d0f8
1100d0de:	dec    eax
1100d0df:	popa   
1100d0e0:	add    BYTE PTR [edx+ebp*8],dh
1100d0e3:	xchg   DWORD PTR [esi+0x55d1e757],edx
1100d0e9:	jle    0x1100d110
1100d0eb:	add    BYTE PTR [eax],ch
1100d0ed:	and    esi,edx
1100d0ef:	fsubr  DWORD PTR [eax+esi*2]
1100d0f2:	ret    0x63ec
1100d0f5:	sbb    al,0x0
1100d0f7:	jnp    0x1100d0fa
1100d0f9:	out    0x44,al
1100d0fb:	xchg   ebx,eax
1100d0fc:	pusha  
1100d0fd:	or     eax,0x500fc540
1100d102:	sbb    DWORD PTR [ecx],esi
1100d104:	sbb    cl,cl
1100d106:	shl    DWORD PTR [esp+eiz*2-0x2d54189c],cl
1100d10d:	popa   
1100d10e:	pop    esi
1100d10f:	mov    eax,0x24ad7887
1100d114:	in     al,0xc
1100d116:	pop    esp
1100d117:	xchg   edx,eax
1100d118:	adc    edx,DWORD PTR [eax]
1100d11a:	sub    BYTE PTR [eax-0x3c],0x79
1100d11e:	add    ch,cl
1100d120:	dec    ecx
1100d121:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100d123:	adc    ch,al
1100d125:	push   esp
1100d126:	xor    BYTE PTR [esp+esi*4+0xb],al
1100d12a:	push   es
1100d12b:	cmp    eax,0x1d
1100d12e:	repz push es
1100d130:	popf   
1100d131:	ret    
1100d132:	sbb    DWORD PTR [ebx+0x5c7a3ad2],edx
1100d138:	int3   
1100d139:	adc    DWORD PTR [eax-0x2f],edx
1100d13c:	push   edx
1100d13d:	add    al,0x80
1100d13f:	lock jg 0x1100d1b2
1100d142:	or     ebp,DWORD PTR [esi-0x1ed4aa6]
1100d148:	loop   0x1100d1c1
1100d14a:	xlat   BYTE PTR ds:[ebx]
1100d14b:	ret    0xbb5e
1100d14e:	dec    esi
1100d14f:	xor    eax,0x723f01fa
1100d154:	mov    ds:0x8a4a3631,eax
1100d159:	inc    ecx
1100d15a:	adc    esp,DWORD PTR [eax]
1100d15c:	mov    dl,0xae
1100d15e:	mov    ds:0x4e04bfa,al
1100d163:	dec    esi
1100d164:	cmp    BYTE PTR [ecx],dl
1100d166:	out    0x1d,eax
1100d168:	sbb    BYTE PTR [esi+0x40],cl
1100d16b:	xchg   DWORD PTR [eax+edi*8+0x2e],esi
1100d16f:	das    
1100d170:	add    BYTE PTR [esi],0x0
1100d173:	lods   eax,DWORD PTR ds:[esi]
1100d174:	add    eax,edx
1100d176:	test   BYTE PTR [ecx-0x10],0x49
1100d17a:	or     ebx,DWORD PTR [eax+0x52]
1100d17d:	add    BYTE PTR [eax-0x24a5e03e],dh
1100d183:	call   0x50ff7867
1100d188:	mov    edi,0xe4395e5e
1100d18d:	fs jmp 0x1100d1fa
1100d190:	fwait
1100d191:	(bad)  
1100d192:	fdiv   QWORD PTR [ebx-0x32]
1100d195:	imul   edx,esi,0x80a42bf0
1100d19b:	mul    BYTE PTR ds:0xe3aeb46e
1100d1a1:	lahf   
1100d1a2:	push   edx
1100d1a3:	out    0xff,eax
1100d1a5:	scas   eax,DWORD PTR es:[edi]
1100d1a6:	stos   DWORD PTR es:[edi],eax
1100d1a7:	shl    bh,1
1100d1a9:	pop    ds
1100d1aa:	aad    0x7d
1100d1ac:	push   esp
1100d1ad:	jmp    0x1100d1c8
1100d1af:	add    al,0x64
1100d1b1:	les    ecx,FWORD PTR [edi-0x2f]
1100d1b4:	jg     0x1100d204
1100d1b6:	test   eax,0xc405c2ff
1100d1bb:	loop   0x1100d21b
1100d1bd:	pushf  
1100d1be:	push   cs
1100d1bf:	lods   al,BYTE PTR ds:[esi]
1100d1c0:	xor    DWORD PTR cs:[ebx+0x13],edi
1100d1c4:	xor    al,0x72
1100d1c6:	test   eax,0x8950bd0a
1100d1cb:	lea    ebx,[esi+0x2a6e9a5]
1100d1d1:	pop    ds
1100d1d2:	cmp    al,0xe2
1100d1d4:	push   edi
1100d1d5:	push   esp
1100d1d6:	adc    DWORD PTR [eax-0x22fb7f40],ecx
1100d1dc:	jae    0x1100d1da
1100d1de:	rcr    BYTE PTR [edx*1-0x3f129ef8],0xe7
1100d1e6:	in     al,0x9f
1100d1e8:	es cld 
1100d1ea:	mov    al,0x9e
1100d1ec:	mov    al,ds:0xb09002e4
1100d1f1:	and    DWORD PTR [ebp+eax*1+0x1a],0x8c8a9012
1100d1f9:	es dec edx
1100d1fb:	dec    esi
1100d1fc:	retf   0x4985
1100d1ff:	pop    ecx
1100d200:	jo     0x1100d262
1100d202:	loope  0x1100d193
1100d204:	sahf   
1100d205:	add    BYTE PTR [edi+0x2f149134],dl
1100d20b:	and    BYTE PTR [ebx+0x545ecf3c],0x9
1100d212:	add    BYTE PTR [eax],ch
1100d214:	xlat   BYTE PTR ds:[ebx]
1100d215:	pusha  
1100d216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100d217:	add    eax,0x5691f202
1100d21c:	out    dx,al
1100d21d:	aad    0x6c
1100d21f:	dec    edx
1100d220:	sub    dh,BYTE PTR [esi-0x7e]
1100d223:	push   esp
1100d224:	js     0x1100d220
1100d226:	repz test bh,al
1100d229:	lods   al,BYTE PTR ds:[esi]
1100d22a:	test   edi,edx
1100d22c:	mov    ebp,0x6676c768
1100d231:	aas    
1100d232:	jnp    0x1100d237
1100d234:	aam    0x8d
1100d236:	repnz ins DWORD PTR es:[edi],dx
1100d238:	dec    ebx
1100d239:	jge    0x1100d1de
1100d23b:	ins    DWORD PTR es:[edi],dx
1100d23c:	pop    ebp
1100d23d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100d23e:	ja     0x1100d1e0
1100d240:	fdivr  QWORD PTR [esi+0x54]
1100d243:	das    
1100d244:	mov    eax,ds:0xe210547e
1100d249:	ds or  eax,0x1002c740
1100d24f:	push   0x3725cf84
1100d254:	add    edx,edi
1100d256:	test   BYTE PTR [edi+0x47fd14],bh
1100d25c:	adc    BYTE PTR [edi+edi*1-0x2b380158],al
1100d263:	retf   
1100d264:	stos   DWORD PTR es:[edi],eax
1100d265:	jo     0x1100d2e4
1100d267:	addr16 jmp 0x1100d276
1100d26a:	out    dx,eax
1100d26b:	sub    eax,0x6fae0001
1100d270:	jo     0x1100d275
1100d272:	lods   eax,DWORD PTR ds:[esi]
1100d273:	ja     0x1100d248
1100d275:	add    al,0x8c
1100d277:	xor    BYTE PTR [edi-0x21],bl
1100d27a:	cdq    
1100d27b:	lahf   
1100d27c:	dec    ebx
1100d27d:	iret   
1100d27e:	nop
1100d27f:	push   esp
1100d280:	dec    eax
1100d282:	out    dx,al
1100d283:	xlat   BYTE PTR ds:[ebx]
1100d284:	ja     0x1100d23a
1100d286:	bound  ebx,QWORD PTR [edx]
1100d288:	push   ebp
1100d289:	jl     0x1100d23f
1100d28b:	repz arpl sp,si
1100d28e:	pop    edi
1100d28f:	aam    0x4
1100d291:	xor    dl,ah
1100d293:	dec    edi
1100d294:	aad    0x1
1100d296:	jo     0x1100d2f4
1100d298:	adc    BYTE PTR [esp+eax*2+0x3e],al
1100d29c:	das    
1100d29d:	xor    al,0x92
1100d29f:	dec    esi
1100d2a0:	dec    edi
1100d2a1:	ret    0xf54f
1100d2a4:	add    eax,0xf6d37488
1100d2a9:	ja     0x1100d2cf
1100d2ab:	icebp  
1100d2ac:	(bad)  
1100d2ad:	cmp    DWORD PTR [eax],ebx
1100d2af:	dec    eax
1100d2b0:	add    al,0x20
1100d2b2:	jo     0x1100d298
1100d2b4:	fistp  QWORD PTR [eax+0x2c]
1100d2b7:	mov    al,ds:0x81d55630
1100d2bc:	xor    al,0x9
1100d2be:	dec    eax
1100d2bf:	inc    edx
1100d2c0:	aas    
1100d2c1:	push   edi
1100d2c2:	push   ecx
1100d2c3:	mov    WORD PTR [eax-0x3ebc10e],es
1100d2c9:	inc    DWORD PTR [edx]
1100d2cb:	dec    esi
1100d2cc:	loop   0x1100d27f
1100d2ce:	pusha  
1100d2cf:	(bad)  
1100d2d0:	mov    edi,0x2917b3ca
1100d2d5:	call   0x875c:0x1a3c0811
1100d2dc:	or     BYTE PTR [eax+0x65],bh
1100d2df:	test   DWORD PTR [edi-0x23db5ea3],edx
1100d2e5:	add    al,BYTE PTR [esp+ebp*2]
1100d2e8:	and    cl,BYTE PTR [ebp-0x31fb37b]
1100d2ee:	or     edx,0xfffffff3
1100d2f1:	enter  0x215f,0x7a
1100d2f5:	lds    ebp,FWORD PTR [ebx]
1100d2f7:	ja     0x1100d34c
1100d2f9:	lock imul DWORD PTR [edi+0x2d6b5dc]
1100d300:	inc    esi
1100d301:	mov    ecx,0x537e9b50
1100d306:	xor    al,BYTE PTR [ecx]
1100d308:	ins    BYTE PTR es:[edi],dx
1100d309:	inc    esp
1100d30a:	push   0x4b44229
1100d30f:	or     BYTE PTR [ecx-0x388e071c],ah
1100d315:	push   ds
1100d316:	cmp    edx,esp
1100d318:	cmp    edx,DWORD PTR [eax]
1100d31a:	add    al,0xf4
1100d31c:	xchg   ebp,esi
1100d31e:	repnz add edx,DWORD PTR [eax-0x2522af]
1100d325:	and    eax,0x2f6a057
1100d32a:	test   BYTE PTR ds:0x81007f08,ah
1100d330:	sub    eax,0xc26d000e
1100d335:	pop    edi
1100d336:	or     bh,ch
1100d338:	sub    eax,0xe104ff05
1100d33d:	mov    db7,edi
1100d340:	imul   esi,ecx,0xfffffff7
1100d343:	into   
1100d344:	imul   ebp,DWORD PTR [eax+0x15],0xfffffffe
1100d348:	and    DWORD PTR [ebx+0x6bb5497c],0x58f351de
1100d352:	xchg   edi,eax
1100d353:	pop    esp
1100d354:	cmp    eax,0xb77fd707
1100d359:	inc    edx
1100d35a:	es aas 
1100d35c:	imul   eax,DWORD PTR [eax],0x4ccfca34
1100d362:	push   ebx
1100d363:	mov    al,0xf
1100d365:	adc    al,BYTE PTR [edx+0x67f83ad3]
1100d36b:	test   BYTE PTR [ecx-0x41],ah
1100d36e:	push   edx
1100d36f:	push   cs
1100d370:	mov    ebp,?
1100d372:	call   FWORD PTR [ecx-0x4]
1100d375:	jg     0x1100d3e5
1100d377:	inc    ebx
1100d378:	jp     0x1100d3a0
1100d37a:	retf   0x828
1100d37d:	(bad)  
1100d37e:	test   eax,0x48e1df91
1100d383:	mov    cs,ecx
1100d385:	cmp    BYTE PTR [eax],al
1100d387:	inc    ebp
1100d388:	cmc    
1100d389:	lahf   
1100d38a:	fadd   QWORD PTR [edx+0x67c12673]
1100d390:	into   
1100d391:	test   BYTE PTR [ebx],cl
1100d393:	mov    bl,0xdd
1100d395:	outs   dx,DWORD PTR ds:[esi]
1100d396:	or     ecx,DWORD PTR [ebx-0x9dcacd8]
1100d39c:	dec    esp
1100d39d:	(bad)  
1100d39e:	add    BYTE PTR [eax+ebp*8],bl
1100d3a1:	retf   0xa4c1
1100d3a4:	mov    eax,ds:0x59ae4af8
1100d3a9:	fcomp  QWORD PTR [eax-0x6e737457]
1100d3af:	aam    0xcb
1100d3b1:	jmp    0x1100d3b4
1100d3b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100d3b4:	ins    DWORD PTR es:[edi],dx
1100d3b5:	add    cl,cl
1100d3b7:	or     BYTE PTR [esi+0x5],cl
1100d3ba:	cld    
1100d3bb:	push   esp
1100d3bc:	sub    DWORD PTR [edx+0x48],ecx
1100d3bf:	and    BYTE PTR [ebp-0x6160ea9e],0x13
1100d3c6:	fwait
1100d3c7:	sbb    BYTE PTR [edx+eax*4],dl
1100d3ca:	in     al,dx
1100d3cb:	add    eax,0xce1b6810
1100d3d0:	dec    edx
1100d3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100d3d2:	jecxz  0x1100d41b
1100d3d4:	loop   0x1100d445
1100d3d6:	add    al,0xcf
1100d3d8:	cmp    BYTE PTR [ebp+ecx*1-0x4],bh
1100d3dc:	(bad)  
1100d3dd:	sar    DWORD PTR [ebx],1
1100d3df:	dec    eax
1100d3e0:	js     0x1100d451
1100d3e2:	ror    ebp,0xab
1100d3e5:	jns    0x1100d406
1100d3e7:	scas   eax,DWORD PTR es:[edi]
1100d3e8:	sub    dl,BYTE PTR [ebx+edx*8]
1100d3eb:	sti    
1100d3ec:	sub    ch,ch
1100d3ee:	ret    
1100d3ef:	jge    0x1100d398
1100d3f1:	jo     0x1100d38f
1100d3f3:	ror    BYTE PTR [ecx],0x9c
1100d3f6:	xor    BYTE PTR [eax+0x57a428d0],dh
1100d3fc:	cli    
1100d3fd:	fnstsw WORD PTR [edx-0x7]
1100d400:	push   cs
1100d401:	mov    ah,0xc7
1100d403:	add    eax,ebp
1100d405:	test   al,0x40
1100d407:	dec    ebp
1100d408:	add    al,0x12
1100d40a:	add    BYTE PTR [eax-0x4fe96c10],dl
1100d410:	inc    ebp
1100d411:	add    BYTE PTR [eax+0x9f84b],ah
1100d417:	sub    al,0xf1
1100d419:	addr16 inc edi
1100d41b:	call   DWORD PTR [edi]
1100d41d:	or     DWORD PTR [eax],0x435e77f
1100d423:	fwait
1100d424:	(bad)  
1100d425:	mov    esp,0xb7dfe6da
1100d42a:	push   esp
1100d42b:	mov    edx,0xbe6c827b
1100d430:	in     al,dx
1100d431:	ja     0x1100d3c0
1100d433:	hlt    
1100d434:	sub    eax,0x46cf7017
1100d439:	nop    DWORD PTR [esp+0x1c73a2a8]
1100d441:	xlat   BYTE PTR ds:[ebx]
1100d442:	dec    edi
1100d443:	in     al,0x5e
1100d445:	jb     0x1100d440
1100d447:	inc    ecx
1100d448:	add    al,0x81
1100d44a:	and    ah,ah
1100d44c:	xor    edx,DWORD PTR [ebx+0xe]
1100d44f:	arpl   WORD PTR [ebx],ax
1100d451:	inc    esi
1100d452:	sbb    al,bh
1100d454:	add    edx,ecx
1100d456:	sbb    esp,eax
1100d458:	sbb    BYTE PTR [esp],al
1100d45b:	neg    bh
1100d45d:	cdq    
1100d45e:	xchg   ebx,eax
1100d45f:	jmp    0xd961eda4
1100d464:	and    eax,0x5c093784
1100d469:	pop    esi
1100d46a:	in     eax,dx
1100d46b:	xchg   DWORD PTR [ebp-0x7ff4acfd],esi
1100d471:	and    eax,DWORD PTR [edx]
1100d473:	imul   esi,DWORD PTR [edi+ebx*1-0x533fb3b5],0xdcabf955
1100d47e:	or     al,0xa8
1100d480:	adc    al,0x88
1100d482:	nop
1100d483:	sbb    cl,BYTE PTR [esi+0x1a]
1100d486:	test   ch,dl
1100d488:	or     dl,BYTE PTR [edx]
1100d48a:	mov    cl,0xe7
1100d48c:	xor    al,BYTE PTR [ecx]
1100d48e:	xchg   esp,eax
1100d48f:	dec    ecx
1100d490:	inc    esp
1100d491:	push   ebp
1100d492:	adc    BYTE PTR [ebx],dl
1100d494:	add    BYTE PTR [edx+edi*8],0xb0
1100d498:	jge    0x1100d449
1100d49a:	mov    dl,0xfa
1100d49c:	push   0xa5db8fb4
1100d4a1:	jmp    0x1100d484
1100d4a3:	lock pop esi
1100d4a5:	adc    ch,BYTE PTR [edx+eiz*2-0x2]
1100d4a9:	popf   
1100d4aa:	or     BYTE PTR [edi],bh
1100d4ac:	icebp  
1100d4ad:	push   es
1100d4ae:	in     al,0x5a
1100d4b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100d4b1:	xrelease xchg DWORD PTR [esi+0x21],edx
1100d4b5:	inc    edx
1100d4b6:	xor    DWORD PTR [eax],ebp
1100d4b8:	and    BYTE PTR [eax+0x2b95aac],al
1100d4be:	(bad)  
1100d4bf:	jmp    0x3fc40ff9
1100d4c4:	cmp    ecx,DWORD PTR [esi+0x6302335a]
1100d4ca:	mov    edi,0x12808d18
1100d4cf:	(bad)  
1100d4d0:	fisub  DWORD PTR [edx]
1100d4d2:	add    ebx,ebx
1100d4d4:	(bad)  
1100d4d5:	das    
1100d4d6:	mov    ch,0x86
1100d4d8:	ja     0x1100d47a
1100d4da:	mov    ebx,0xb9bd8105
1100d4df:	pop    esi
1100d4e0:	outs   dx,BYTE PTR ds:[esi]
1100d4e1:	test   DWORD PTR [esi+0x13],edi
1100d4e4:	xor    BYTE PTR [eax+eax*1],0x22
1100d4e8:	add    dh,BYTE PTR [edi]
1100d4ea:	adc    DWORD PTR [eax],0xb338e181
1100d4f0:	mov    al,0x5
1100d4f2:	add    BYTE PTR [eax-0x78],ah
1100d4f5:	lock xchg edi,eax
1100d4f7:	mov    BYTE PTR [edi],bh
1100d4f9:	pop    ebp
1100d4fa:	std    
1100d4fb:	out    0x25,eax
1100d4fd:	cmc    
1100d4fe:	repnz cmp dl,BYTE PTR [eax+0x5e55bf91]
1100d505:	and    ebx,ebx
1100d507:	jg     0x1100d4ea
1100d509:	test   DWORD PTR [ecx-0x7989f868],ebp
1100d50f:	cld    
1100d510:	push   0xffffff9a
1100d512:	(bad)  
1100d513:	(bad)  
1100d514:	into   
1100d515:	and    BYTE PTR [edi+0x6ffcbed2],cl
1100d51b:	push   ds
1100d51c:	jmp    0x3cec9b16
1100d521:	clc    
1100d522:	retf   0x738d
1100d525:	xor    DWORD PTR [ebx-0x402f591],edi
1100d52b:	cmp    cl,cl
1100d52d:	data16 mov cl,BYTE PTR [bp+si]
1100d531:	jle    0x1100d517
1100d533:	xchg   ecx,eax
1100d534:	jg     0x1100d507
1100d536:	dec    ebp
1100d537:	mov    BYTE PTR [ecx+0x3f],cl
1100d53a:	loope  0x1100d5b7
1100d53c:	jl     0x1100d57e
1100d53e:	sbb    al,bh
1100d540:	inc    ebx
1100d541:	inc    ecx
1100d542:	sub    ah,bh
1100d544:	sar    cl,1
1100d546:	sbb    dh,dl
1100d548:	push   0x1ba69938
1100d54d:	clc    
1100d54e:	xor    esp,DWORD PTR ds:0x4e4aa0f6
1100d554:	and    esi,DWORD PTR [esi]
1100d556:	mov    ebx,0x20a7ad04
1100d55b:	cld    
1100d55c:	ds ret 0xded1
1100d560:	sub    esi,DWORD PTR [edi-0x37da119f]
1100d566:	in     al,dx
1100d567:	jle    0x1100d51e
1100d569:	aas    
1100d56a:	adc    DWORD PTR [ebp+0x3a],edi
1100d56d:	mul    BYTE PTR [eax]
1100d56f:	fsin   
1100d571:	sub    dh,BYTE PTR [edi]
1100d573:	add    BYTE PTR [eax],ah
1100d575:	pop    ss
1100d576:	in     al,dx
1100d577:	or     al,0xc0
1100d579:	mov    ah,0xaa
1100d57b:	lahf   
1100d57c:	mov    esi,0x2a807730
1100d581:	add    BYTE PTR [eax-0x21cae87f],0xcb
1100d588:	xor    DWORD PTR [ecx],edi
1100d58a:	hlt    
1100d58b:	xchg   edi,eax
1100d58c:	inc    esi
1100d58d:	jl     0x1100d5c5
1100d58f:	xchg   ecx,eax
1100d590:	push   esp
1100d591:	nop
1100d592:	adc    BYTE PTR [ebx-0x52183aaf],al
1100d598:	(bad)  
1100d599:	adc    eax,0x25a2fc8f
1100d59e:	and    al,0x33
1100d5a0:	loopne 0x1100d53a
1100d5a2:	daa    
1100d5a3:	lods   eax,DWORD PTR ds:[esi]
1100d5a4:	adc    DWORD PTR [edi+0x794ec6fd],0xabf5281f
1100d5ae:	inc    edx
1100d5af:	pop    ds
1100d5b0:	imul   edx,esp,0x23736c12
1100d5b6:	push   ss
1100d5b7:	pop    edx
1100d5b8:	push   esi
1100d5b9:	push   esp
1100d5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100d5bb:	mov    edi,0xa10da105
1100d5c0:	rol    ecx,0x33
1100d5c3:	push   eax
1100d5c4:	and    al,BYTE PTR [ecx]
1100d5c6:	leave  
1100d5c7:	sbb    eax,0xbac00168
1100d5cc:	add    al,bh
1100d5ce:	push   0x59
1100d5d0:	adc    al,0x0
1100d5d2:	sbb    BYTE PTR [edx],ch
1100d5d4:	cld    
1100d5d5:	mov    dh,0xf0
1100d5d7:	xchg   DWORD PTR [esi],ebx
1100d5d9:	std    
1100d5da:	pop    DWORD PTR [ebp-0x2bd403dc]
1100d5e0:	icebp  
1100d5e1:	mov    dl,bh
1100d5e3:	mov    al,ds:0x2f8bfb63
1100d5e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100d5e9:	lock adc dh,BYTE PTR [edx]
1100d5ec:	push   ebp
1100d5ed:	pop    edi
1100d5ee:	ins    DWORD PTR es:[edi],dx
1100d5ef:	sar    DWORD PTR [eax+0x69],cl
1100d5f2:	test   DWORD PTR [ebx+0x68],esp
1100d5f5:	add    al,bl
1100d5f7:	xor    al,0xeb
1100d5f9:	loope  0x1100d5f8
1100d5fb:	lahf   
1100d5fc:	pushf  
1100d5fd:	cmp    DWORD PTR [ecx+0x6c12b1b9],0xffffff8c
1100d604:	test   BYTE PTR [ebx-0x6e],0x6f
1100d608:	retfw  0xd0a9
1100d60c:	fist   WORD PTR [ecx]
1100d60e:	fwait
1100d60f:	or     DWORD PTR [eax+edx*1],eax
1100d612:	icebp  
1100d613:	inc    ecx
1100d614:	mov    al,ds:0xc92a2027
1100d619:	cs (bad) 
1100d61b:	imul   BYTE PTR [ecx+0x69a03052]
1100d621:	and    al,ch
1100d623:	das    
1100d624:	dec    ecx
1100d625:	jne    0x1100d5cd
1100d627:	jl     0x1100d624
1100d629:	and    al,0x37
1100d62b:	in     al,0x93
1100d62d:	test   DWORD PTR [edx],0x6f0ab410
1100d633:	push   ebp
1100d634:	jp     0x1100d653
1100d636:	and    al,0x24
1100d638:	mov    ecx,0x8eb46101
1100d63d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100d63e:	and    DWORD PTR [edi-0xf70fcf4],eax
1100d644:	xor    DWORD PTR [ecx-0x78],edx
1100d647:	test   BYTE PTR [esi+0x324f5f85],bl
1100d64d:	and    ah,BYTE PTR [esi]
1100d64f:	pop    es
1100d650:	push   0x549ea020
1100d655:	add    DWORD PTR [edi-0x10],eax
1100d658:	mov    eax,esp
1100d65a:	rcl    esp,cl
1100d65c:	popa   
1100d65d:	call   0x80154e2d
1100d662:	push   eax
1100d663:	and    eax,0x7ad98f02
1100d668:	(bad)
1100d66b:	data16 loopne 0x1100d68a
1100d66e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100d66f:	sti    
1100d670:	jb     0x1100d6aa
1100d672:	xor    BYTE PTR [esi+0x24281d27],bh
1100d678:	rcl    DWORD PTR [ecx+0x5c16d679],cl
1100d67e:	or     BYTE PTR [edx-0x59adefde],al
1100d684:	add    edi,DWORD PTR [ebp+0x57abb5e7]
1100d68a:	sar    BYTE PTR [edi-0x27c89e43],0x61
1100d691:	int    0x54
1100d693:	ss ret 0x54eb
1100d697:	jecxz  0x1100d6ab
1100d699:	pop    es
1100d69a:	shl    dh,1
1100d69c:	pop    esi
1100d69d:	outs   dx,BYTE PTR ds:[esi]
1100d69e:	hlt    
1100d69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100d6a0:	push   edx
1100d6a1:	pop    ds
1100d6a2:	ret    
1100d6a3:	jmp    DWORD PTR [edi]
1100d6a5:	sub    DWORD PTR [edx],ebp
1100d6a7:	add    cl,BYTE PTR [ecx+0x7d]
1100d6aa:	psubw  mm6,QWORD PTR [ecx]
1100d6ad:	mov    eax,ds:0x4251052
1100d6b2:	jne    0x1100d66d
1100d6b4:	add    al,BYTE PTR [ebx+0x3fa34019]
1100d6ba:	add    eax,eax
1100d6bc:	sub    al,0xbe
1100d6be:	and    al,BYTE PTR [edx]
1100d6c0:	add    DWORD PTR ds:0xc224c001,0xbffaa6df
1100d6ca:	mov    eax,0xa204de5e
1100d6cf:	div    BYTE PTR [edi-0x2d453ca2]
1100d6d5:	inc    esp
1100d6d6:	popf   
1100d6d7:	hlt    
1100d6d8:	jo     0x1100d6e5
1100d6da:	ss jge 0x1100d70e
1100d6dd:	mov    edi,ss
1100d6df:	mov    esp,0xd0ab8698
1100d6e4:	mov    al,ds:0xb474803b
1100d6e9:	stos   DWORD PTR es:[edi],eax
1100d6ea:	mov    edi,0xd5e9700d
1100d6ef:	jecxz  0x1100d6eb
1100d6f1:	data16 (bad) 
1100d6f3:	call   0xbed4aee
1100d6f8:	and    edx,DWORD PTR [ebx+0x60]
1100d6fb:	mov    ah,BYTE PTR [edx+0x48c79d00]
1100d701:	rcl    BYTE PTR [ebx*8+0x11ff9897],0x16
1100d709:	add    eax,0x4c00712d
1100d70e:	dec    ecx
1100d70f:	repnz xchg ebp,eax
1100d711:	jno    0x1100d715
1100d713:	mov    WORD PTR [ebp+0x5edfa36b],?
1100d719:	gs push es
1100d71b:	jp     0x1100d77e
1100d71d:	cmc    
1100d71e:	pop    ecx
1100d71f:	call   0x3216c76d
1100d724:	test   al,0x63
1100d726:	cld    
1100d727:	(bad)  
1100d728:	or     al,0x14
1100d72a:	loop   0x1100d77d
1100d72c:	loopne 0x1100d7a8
1100d72e:	add    al,BYTE PTR [esi-0x7fea2b9c]
1100d734:	xor    dh,BYTE PTR [edi+0x1525691f]
1100d73a:	mov    cl,0xee
1100d73c:	cmp    BYTE PTR [ebp+0x58],bh
1100d73f:	inc    esp
1100d740:	sub    al,0x48
1100d742:	xor    DWORD PTR [ecx],eax
1100d744:	adc    al,0x10
1100d746:	inc    esp
1100d747:	fimul  WORD PTR [esp+ebx*1]
1100d74a:	int    0xc1
1100d74c:	mov    esi,eax
1100d74e:	push   ebx
1100d74f:	mov    dh,0x2f
1100d751:	xchg   ebx,eax
1100d752:	popf   
1100d753:	mov    bh,ah
1100d755:	mov    ds:0xe7803f4a,eax
1100d75a:	test   eax,0x3d122042
1100d75f:	and    eax,0xb3d2044e
1100d764:	and    ecx,DWORD PTR [ecx+0x45a4ff1]
1100d76a:	inc    edi
1100d76b:	pop    ds
1100d76c:	jmp    0xcbb0:0x4d222c4
1100d773:	(bad)  
1100d774:	fidiv  WORD PTR [ebx+0x77]
1100d777:	and    BYTE PTR [edi+0x1f],0xb1
1100d77b:	inc    ebx
1100d77c:	jno    0x1100d72e
1100d77e:	push   0x5a820373
1100d783:	fucomip st,st(2)
1100d785:	push   es
1100d786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100d787:	(bad)  
1100d788:	imul   esi,esi,0x2c4f03d3
1100d78e:	cmp    esi,ebx
1100d790:	pop    ds
1100d791:	ss dec esp
1100d793:	pop    es
1100d794:	or     DWORD PTR [eax],esp
1100d796:	adc    BYTE PTR [esi],dh
1100d798:	cld    
1100d799:	sbb    dl,BYTE PTR [ecx+edi*1+0x64000b00]
1100d7a0:	push   es
1100d7a1:	int3   
1100d7a2:	stos   BYTE PTR es:[edi],al
1100d7a3:	test   DWORD PTR [edi+edi*4],eax
1100d7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100d7a7:	add    eax,0x45af8594
1100d7ac:	cmp    BYTE PTR [edi],ah
1100d7ae:	adc    esi,edi
1100d7b0:	xchg   edx,eax
1100d7b1:	fucomi st,st(7)
1100d7b3:	aaa    
1100d7b4:	jmp    0x1100d79b
1100d7b6:	(bad)  
1100d7b7:	and    DWORD PTR [edi],edx
1100d7b9:	(bad)  
1100d7ba:	mov    ds:0x31513ffa,al
1100d7bf:	(bad)  
1100d7c0:	and    DWORD PTR [ebp-0x4964b73],ebp
1100d7c6:	mov    edi,0xcb91fefe
1100d7cb:	out    0xe0,al
1100d7cd:	pop    es
1100d7ce:	aas    
1100d7cf:	cdq    
1100d7d0:	dec    ebx
1100d7d1:	ret    0x581c
1100d7d4:	(bad)  
1100d7d5:	imul   esp,DWORD PTR [edi],0x13ca7e19
1100d7db:	adc    BYTE PTR [ecx],bl
1100d7dd:	call   DWORD PTR [ecx-0x7b]
1100d7e0:	jno    0x1100d7e1
1100d7e2:	xchg   esp,eax
1100d7e3:	stc    
1100d7e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100d7e5:	push   0x0
1100d7e7:	add    ah,BYTE PTR [eax-0x27]
1100d7ea:	das    
1100d7eb:	mov    BYTE PTR [esi-0x7630d59b],dh
1100d7f1:	aaa    
1100d7f2:	int    0x64
1100d7f4:	adc    BYTE PTR [esi],0xfe
1100d7f7:	je     0x1100d802
1100d7f9:	les    ebp,FWORD PTR [edx-0x71]
1100d7fc:	sub    esp,DWORD PTR [ecx]
1100d7fe:	add    ecx,DWORD PTR [ecx+0x48]
1100d801:	ins    BYTE PTR es:[edi],dx
1100d802:	cmc    
1100d803:	fisttp WORD PTR [eax+edi*4+0x73c0b363]
1100d80a:	sub    BYTE PTR cs:[eax+0x0],0xa9
1100d80f:	sub    al,0xb8
1100d811:	into   
1100d812:	add    DWORD PTR [eax],esp
1100d814:	lods   eax,DWORD PTR ds:[esi]
1100d815:	and    dl,0x1
1100d818:	and    al,0xde
1100d81a:	fbld   TBYTE PTR [ebx-0xb]
1100d81d:	pop    edi
1100d81e:	ins    DWORD PTR es:[edi],dx
1100d81f:	sti    
1100d820:	or     edx,ecx
1100d822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100d823:	int    0x13
1100d825:	scas   eax,DWORD PTR es:[edi]
1100d826:	test   BYTE PTR [eax-0x150bd21a],dl
1100d82c:	push   ds
1100d82d:	cmp    al,0x86
1100d82f:	daa    
1100d830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100d831:	push   edi
1100d832:	and    BYTE PTR [ecx+eax*4],bh
1100d835:	push   cs
1100d836:	(bad)  
1100d838:	pop    esi
1100d839:	add    BYTE PTR [edi+0x39b416e],al
1100d83f:	adc    bl,ah
1100d841:	jge    0x1100d7f7
1100d843:	push   es
1100d844:	add    cl,0x53
1100d847:	adc    al,0x27
1100d849:	and    BYTE PTR [ebx+0x38400913],dh
1100d84f:	push   es
1100d850:	es xchg edx,eax
1100d852:	stos   DWORD PTR es:[edi],eax
1100d853:	adc    DWORD PTR [esp+esi*2],ebx
1100d856:	loopne 0x1100d862
1100d858:	js     0x1100d849
1100d85a:	sub    esi,esi
1100d85c:	call   0x808b1b5
1100d861:	stos   DWORD PTR es:[edi],eax
1100d862:	sahf   
1100d863:	arpl   WORD PTR [edi*4+0x773c303],dx
1100d86a:	ret    0x418e
1100d86d:	mov    BYTE PTR [edi-0x59a8d6f8],bh
1100d873:	add    dl,BYTE PTR fs:[eax]
1100d876:	adc    DWORD PTR [eax+0x61],ecx
1100d879:	les    esp,FWORD PTR [ecx-0x5]
1100d87c:	add    BYTE PTR [edx],al
1100d87e:	inc    esp
1100d87f:	add    al,0xea
1100d881:	rcr    edi,1
1100d883:	push   0x1
1100d885:	jb     0x1100d824
1100d887:	pop    ebp
1100d888:	test   DWORD PTR [eax],0x1d7e13f3
1100d88e:	repz pop ds
1100d890:	inc    esi
1100d891:	jle    0x1100d8a5
1100d893:	jle    0x1100d8c0
1100d895:	hlt    
1100d896:	cdq    
1100d897:	or     DWORD PTR [eax+0x27],esp
1100d89a:	jmp    0xbda3:0x2de07dec
1100d8a1:	pop    esi
1100d8a2:	xchg   edi,eax
1100d8a3:	pop    es
1100d8a4:	fdiv   QWORD PTR [ebp-0x5342ff7d]
1100d8aa:	cmc    
1100d8ab:	cmc    
1100d8ac:	mov    ds:0xe78ba7fc,eax
1100d8b1:	and    BYTE PTR [esi+ebx*1+0x62],dl
1100d8b5:	lahf   
1100d8b6:	push   DWORD PTR [esp+edx*1+0x3f8aa0f7]
1100d8bd:	(bad)  
1100d8be:	cli    
1100d8bf:	push   ebx
1100d8c0:	scas   al,BYTE PTR es:[edi]
1100d8c1:	mov    edi,0xe089ff64
1100d8c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100d8c7:	or     al,0x40
1100d8c9:	push   edx
1100d8ca:	and    eax,0xf64fd549
1100d8cf:	lods   al,BYTE PTR ds:[esi]
1100d8d0:	dec    ebx
1100d8d1:	jg     0x1100d8ab
1100d8d3:	mov    fs,WORD PTR [ebp+0x35]
1100d8d6:	pop    ss
1100d8d7:	pop    ds
1100d8d8:	(bad)  
1100d8d9:	cwde   
1100d8da:	dec    ebp
1100d8db:	add    DWORD PTR [edx+0x2039b589],esi
1100d8e1:	xor    eax,DWORD PTR [ecx]
1100d8e3:	mov    DWORD PTR [eax+0x6fe8628e],eax
1100d8e9:	jb     0x1100d8ee
1100d8eb:	mov    cl,BYTE PTR [ecx]
1100d8ed:	inc    eax
1100d8ee:	or     al,0x3e
1100d8f0:	add    DWORD PTR [eax-0xc],eax
1100d8f3:	and    al,0xa0
1100d8f5:	sub    esi,DWORD PTR [ecx]
1100d8f7:	lea    ebx,[eax+0x9c4e92]
1100d8fd:	shl    BYTE PTR [ebx+0x7ea340c6],0x16
1100d904:	cwde   
1100d905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100d906:	mov    DWORD PTR [edi],esi
1100d908:	push   edx
1100d909:	sti    
1100d90a:	cdq    
1100d90b:	mov    eax,ds:0x9e7fb6b7
1100d910:	fsub   DWORD PTR [ebx]
1100d912:	and    al,0xa2
1100d914:	jo     0x1100d918
1100d916:	bound  eax,QWORD PTR [esi-0x30]
1100d919:	test   al,0x2e
1100d91b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100d91c:	enter  0x124,0x28
1100d920:	cmp    eax,0x1022aa95
1100d925:	adc    DWORD PTR [ebx-0x77c5a821],ebx
1100d92b:	or     BYTE PTR [edi-0x2b7e25ad],dh
1100d931:	adc    BYTE PTR [eax+0x6d],cl
1100d934:	lds    ecx,FWORD PTR [edx-0x6c2807e7]
1100d93a:	ja     0x1100d8c3
1100d93c:	fucomp st(6)
1100d93e:	aaa    
1100d93f:	push   ebp
1100d940:	out    dx,ax
1100d942:	ins    DWORD PTR es:[edi],dx
1100d943:	cmp    dh,BYTE PTR [eax-0x36d8c72b]
1100d949:	cs sub eax,0x8c70d9f4
1100d94f:	fwait
1100d950:	je     0x1100d940
1100d952:	inc    eax
1100d953:	jg     0x1100d960
1100d955:	sub    bh,ch
1100d957:	addr16 jmp 0xd005:0x8e504be5
1100d95f:	pop    ecx
1100d960:	and    DWORD PTR [ecx+eax*1-0x7a9fa898],0x16b9009f
1100d96b:	and    BYTE PTR [edi+0x30f976d9],dl
1100d971:	mov    ecx,0xbfaaebf0
1100d976:	inc    ecx
1100d977:	clc    
1100d978:	or     ebp,0xffffffff
1100d97b:	push   ss
1100d97c:	push   0xbcf4fc8e
1100d981:	jns    0x1100d9e0
1100d983:	fs sti 
1100d985:	iret   
1100d986:	cmp    ebp,DWORD PTR [edi-0x3490b4c4]
1100d98c:	ret    
1100d98d:	int3   
1100d98e:	lahf   
1100d98f:	mov    ch,0xcb
1100d991:	add    eax,0xbb38bf5d
1100d996:	jno    0x1100d933
1100d998:	mov    ecx,0xd2ff7f50
1100d99d:	or     eax,0xafeff863
1100d9a2:	push   edi
1100d9a3:	cmc    
1100d9a4:	dec    ebp
1100d9a5:	push   ebp
1100d9a6:	sub    al,0xd8
1100d9a8:	shr    DWORD PTR [esi-0x4011b161],1
1100d9ae:	adc    al,0xe8
1100d9b0:	xor    edx,DWORD PTR [edx]
1100d9b2:	inc    edx
1100d9b3:	xor    BYTE PTR [ebx+0x7fd29801],ch
1100d9b9:	arpl   sp,ax
1100d9bb:	pop    ds
1100d9bc:	inc    ebp
1100d9bd:	std    
1100d9be:	cmp    DWORD PTR [ecx+eax*1],esi
1100d9c1:	and    BYTE PTR [edi],dl
1100d9c3:	jl     0x1100d9c2
1100d9c5:	add    BYTE PTR [ecx+0x75],0xde
1100d9c9:	and    al,0xfc
1100d9cb:	mov    ds:0x1c42eae2,al
1100d9d0:	jp     0x1100d9ac
1100d9d2:	scas   eax,DWORD PTR es:[edi]
1100d9d3:	push   esp
1100d9d4:	shl    BYTE PTR [ebx],0x8f
1100d9d7:	loope  0x1100d9c0
1100d9d9:	inc    edx
1100d9da:	lahf   
1100d9db:	push   ds
1100d9dc:	cmp    BYTE PTR [edi],cl
1100d9de:	and    BYTE PTR ds:0x38b7e980,cl
1100d9e4:	dec    ebp
1100d9e5:	cmp    BYTE PTR [ebp+0x0],al
1100d9e8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100d9ea:	adc    DWORD PTR [esi+ecx*1+0x22],0x66
1100d9ef:	sahf   
1100d9f0:	jge    0x1100d9f1
1100d9f2:	pop    esi
1100d9f3:	add    al,0x8f
1100d9f5:	mov    ss,WORD PTR [ebp-0x17b9d567]
1100d9fb:	and    eax,0x89c2579c
1100da00:	and    eax,0x5a845765
1100da05:	or     BYTE PTR ds:0xa4857fbd,bh
1100da0b:	sahf   
1100da0c:	loop   0x1100da1d
1100da0e:	sub    BYTE PTR [eax+0x2304a2a8],cl
1100da14:	mov    ds:0x499211f,al
1100da19:	call   0xea90:0x47cd07fd
1100da20:	out    dx,eax
1100da21:	xor    DWORD PTR [esi],edx
1100da23:	sbb    esi,0xfcbc14f3
1100da29:	test   al,0xfb
1100da2b:	shl    ebx,0x9f
1100da2e:	mov    esp,0xe0403e43
1100da33:	jne    0x1100da08
1100da35:	sub    al,0xcd
1100da37:	lea    edi,[eax]
1100da39:	add    ch,dl
1100da3b:	scas   eax,DWORD PTR es:[edi]
1100da3c:	mov    dl,0x3e
1100da3e:	add    al,0xe5
1100da40:	xchg   ecx,eax
1100da41:	mov    esi,0xe04ecfaf
1100da46:	sbb    eax,0xe2e04d20
1100da4b:	jp     0x1100da46
1100da4d:	cmp    al,0xe4
1100da4f:	fiadd  WORD PTR [ecx]
1100da51:	sbb    eax,0x79a80d
1100da56:	add    al,BYTE PTR [ecx]
1100da58:	dec    ebp
1100da59:	add    dl,dl
1100da5b:	int3   
1100da5c:	cmp    DWORD PTR [edx+eax*1],eax
1100da5f:	or     eax,0xe6ebb481
1100da64:	and    edi,esp
1100da66:	pop    edx
1100da67:	cmc    
1100da68:	aas    
1100da69:	scas   al,BYTE PTR es:[edi]
1100da6a:	pop    esi
1100da6b:	fimul  WORD PTR [ecx+edi*2]
1100da6e:	nop
1100da6f:	dec    edi
1100da70:	imul   esp,esp,0x7a1e87f7
1100da76:	test   al,0xb
1100da78:	ins    BYTE PTR es:[edi],dx
1100da79:	jg     0x1100da07
1100da7b:	in     eax,dx
1100da7c:	imul   DWORD PTR [ecx]
1100da7e:	jnp    0x1100daae
1100da80:	cmp    eax,0x34d409e3
1100da85:	xlat   BYTE PTR ds:[ebx]
1100da86:	push   edx
1100da87:	push   es
1100da88:	stos   BYTE PTR es:[edi],al
1100da89:	icebp  
1100da8a:	cmp    BYTE PTR [ebp+0xffea0c6],cl
1100da90:	popf   
1100da91:	out    dx,al
1100da92:	fistp  QWORD PTR [esi]
1100da94:	xor    eax,0x8ddc7707
1100da99:	inc    ebp
1100da9a:	mov    ds:0x8f825370,eax
1100daa0:	fdivr  st,st(5)
1100daa2:	rcl    DWORD PTR [edx+edi*8-0x6411e35],cl
1100daa9:	les    ebx,FWORD PTR [edi]
1100daab:	test   eax,0xfed93032
1100dab0:	imul   ebp,DWORD PTR [edx-0x70c58b15],0xac094085
1100daba:	push   0xf91e0298
1100dabf:	test   eax,0x4afd1814
1100dac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100dac5:	sbb    al,0x31
1100dac7:	call   0x686c762e
1100dacc:	popf   
1100dacd:	xor    DWORD PTR [ebx],eax
1100dacf:	cmp    al,0x4d
1100dad1:	or     eax,0xe77a1526
1100dad6:	enter  0xc03c,0xe3
1100dada:	fs xor eax,0xfd512b05
1100dae0:	mov    DWORD PTR [edi+0x48],ebx
1100dae3:	inc    edx
1100dae4:	or     ch,BYTE PTR [ebp+ebp*2-0x2c32f730]
1100daeb:	xchg   DWORD PTR [ecx],eax
1100daed:	jo     0x1100da79
1100daef:	outs   dx,DWORD PTR ds:[esi]
1100daf0:	shl    BYTE PTR gs:[eax],0xed
1100daf4:	push   edi
1100daf5:	xor    DWORD PTR [edi],esp
1100daf7:	push   eax
1100daf8:	imul   esi,DWORD PTR [ebp+0x5e],0xa4854501
1100daff:	add    BYTE PTR [esi+edi*8+0x1f247cfa],0x57
1100db07:	inc    eax
1100db08:	xor    eax,DWORD PTR [edx]
1100db0a:	jmp    0xad51feb1
1100db0f:	imul   esp,esp,0xa87404af
1100db15:	iret   
1100db16:	lock jns 0x1100dad9
1100db19:	addr16 fs pusha 
1100db1c:	adc    dl,BYTE PTR [eax+eax*4+0x7]
1100db20:	out    dx,eax
1100db21:	mov    bl,0xa
1100db23:	(bad)  
1100db24:	not    ch
1100db26:	jnp    0x1100dab0
1100db28:	daa    
1100db29:	xchg   dh,dh
1100db2b:	int    0x66
1100db2d:	daa    
1100db2e:	push   ss
1100db2f:	dec    edi
1100db30:	lea    eax,[esi]
1100db32:	mov    DWORD PTR [esi+0xd],edx
1100db35:	pusha  
1100db36:	ret    0xd348
1100db39:	shl    BYTE PTR [esi],1
1100db3b:	lock push cs
1100db3d:	test   BYTE PTR [ebx-0x4f417efc],al
1100db43:	pop    esi
1100db44:	or     esp,DWORD PTR ds:[edx+0x2]
1100db48:	fmul   DWORD PTR [eax+0x12057240]
1100db4e:	pop    es
1100db4f:	inc    eax
1100db50:	mov    cl,0x0
1100db52:	ficomp DWORD PTR ds:0x2f8b5dc8
1100db58:	ror    DWORD PTR [edx-0x7a033ee],cl
1100db5e:	imul   esp,esp,0x26ffc20f
1100db64:	cld    
1100db65:	(bad)  
1100db67:	sbb    al,0xb1
1100db69:	std    
1100db6a:	pop    ecx
1100db6b:	(bad)  
1100db6d:	rol    BYTE PTR [esi-0x70626bdb],cl
1100db73:	pop    ecx
1100db74:	push   eax
1100db75:	ds js  0x1100db74
1100db78:	std    
1100db79:	into   
1100db7a:	lahf   
1100db7b:	push   edi
1100db7c:	lock (bad) 
1100db7e:	jmp    FWORD PTR [edx-0x7acafede]
1100db84:	push   ebp
1100db85:	jl     0x1100dbd9
1100db87:	neg    BYTE PTR [edi+0x6c0afb94]
1100db8d:	dec    esp
1100db8f:	xchg   esp,eax
1100db90:	push   ebx
1100db91:	push   0x3f
1100db93:	and    eax,0x5fc548fe
1100db98:	or     bh,cl
1100db9a:	jne    0x1100dbb4
1100db9c:	add    eax,DWORD PTR [eax]
1100db9e:	push   0x13308e8f
1100dba3:	nop
1100dba4:	out    dx,eax
1100dba5:	inc    edi
1100dba6:	and    al,0x9f
1100dba8:	int    0x1
1100dbaa:	pop    ebp
1100dbab:	pop    esi
1100dbac:	pop    ebx
1100dbad:	enter  0xa93f,0x88
1100dbb1:	and    eax,DWORD PTR [ebp+ebx*1+0x2fb004e6]
1100dbb8:	pop    edi
1100dbb9:	pop    es
1100dbba:	or     eax,0xb9c12d49
1100dbbf:	inc    esi
1100dbc0:	mov    esp,0x2020ebf
1100dbc5:	nop
1100dbc6:	or     al,al
1100dbc8:	mov    ds:0xcbcf805d,al
1100dbcd:	xchg   ecx,eax
1100dbce:	jnp    0x1100dc35
1100dbd0:	push   ds
1100dbd1:	jo     0x1100dc17
1100dbd3:	and    al,ch
1100dbd5:	adc    edi,ebx
1100dbd7:	xor    DWORD PTR [eax-0xf],ebp
1100dbda:	and    DWORD PTR fs:[edx-0x30],ebx
1100dbde:	xor    ebx,DWORD PTR [ebx+0x497dd45e]
1100dbe4:	sbb    eax,esi
1100dbe6:	sub    al,0x40
1100dbe8:	sbb    eax,0x278ea438
1100dbed:	fist   DWORD PTR [ebx]
1100dbef:	sub    DWORD PTR [eax],edi
1100dbf1:	push   ss
1100dbf2:	int    0x82
1100dbf4:	mov    dh,0x3
1100dbf6:	sbb    al,0xb5
1100dbf8:	dec    ecx
1100dbf9:	arpl   WORD PTR [ecx],ax
1100dbfb:	call   0x6f50:0x888a4895
1100dc02:	sahf   
1100dc03:	sahf   
1100dc04:	call   0xb01e:0xfd7e7f86
1100dc0b:	imul   esi
1100dc0d:	xor    ebp,DWORD PTR [ebp-0xf7c9f5a]
1100dc13:	imul   ebp,DWORD PTR [ecx+0xfdad111],0xffffffbb
1100dc1a:	cli    
1100dc1b:	lods   eax,DWORD PTR ds:[esi]
1100dc1c:	push   0x3
1100dc1e:	mov    ebp,0x807403
1100dc23:	add    ah,BYTE PTR [edi-0x29]
1100dc26:	retf   
1100dc27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100dc28:	and    DWORD PTR [edi],ebp
1100dc2a:	or     al,0x62
1100dc2c:	mov    DWORD PTR [eax+0x1d],eax
1100dc2f:	adc    ch,BYTE PTR [ecx+eax*1+0x0]
1100dc33:	std    
1100dc34:	xor    dl,BYTE PTR [edx+0x6001a5a3]
1100dc3a:	xor    DWORD PTR [edi+edi*1-0x327c0608],eax
1100dc41:	aas    
1100dc42:	arpl   WORD PTR [esi+0x1d8768d9],cx
1100dc48:	jbe    0x1100dbe2
1100dc4a:	mov    bl,0x84
1100dc4c:	pop    edi
1100dc4d:	leave  
1100dc4e:	aad    0x32
1100dc50:	fs pop esi
1100dc52:	clc    
1100dc53:	in     al,dx
1100dc54:	imul   edi,ecx,0x7a6e38f6
1100dc5a:	call   0xa9ff:0xb53e1fb9
1100dc61:	aad    0xff
1100dc63:	dec    edi
1100dc64:	pop    edi
1100dc65:	adc    eax,0x8e386f53
1100dc6a:	lahf   
1100dc6b:	mov    ebp,0xc3e41800
1100dc70:	pop    esi
1100dc71:	add    BYTE PTR [esi],al
1100dc73:	pop    es
1100dc74:	dec    ecx
1100dc75:	clc    
1100dc76:	mov    DWORD PTR [ecx+0x1c080a7f],ebx
1100dc7c:	jb     0x1100dc7e
1100dc7e:	je     0x1100dc8f
1100dc80:	mov    cs,WORD PTR [edi-0x67]
1100dc83:	int3   
1100dc84:	adc    DWORD PTR [ecx+0x1a23273],0xbff8b9a9
1100dc8e:	and    ebx,ebx
1100dc90:	mov    dl,0x44
1100dc92:	sbb    al,0xb4
1100dc94:	jmp    0x1100dc4b
1100dc96:	inc    eax
1100dc97:	mov    bl,0xc0
1100dc99:	push   esi
1100dc9a:	dec    ecx
1100dc9b:	sbb    BYTE PTR [eax],ch
1100dc9d:	xor    BYTE PTR [eax],ch
1100dc9f:	imul   ecx,DWORD PTR [edx],0xcca09669
1100dca5:	test   al,dl
1100dca7:	and    al,0xa2
1100dca9:	ds scas al,BYTE PTR es:[edi]
1100dcab:	cmp    DWORD PTR [edi],esp
1100dcad:	mov    cl,0xea
1100dcaf:	arpl   WORD PTR ds:0x3d0cf412,ax
1100dcb5:	fwait
1100dcb6:	and    eax,0x355017c4
1100dcbb:	loope  0x1100dcb1
1100dcbd:	mov    ds:0xf9424d67,eax
1100dcc2:	out    dx,al
1100dcc3:	inc    ecx
1100dcc4:	int3   
1100dcc5:	cdq    
1100dcc6:	xchg   esp,eax
1100dcc7:	add    al,0x24
1100dcc9:	lds    eax,FWORD PTR [edx+0x6c]
1100dccc:	fldcw  WORD PTR [edi]
1100dcce:	cdq    
1100dccf:	push   ebx
1100dcd0:	add    cl,al
1100dcd2:	sub    ch,0x7d
1100dcd5:	xor    cl,BYTE PTR [ebx]
1100dcd7:	sub    BYTE PTR [ebx+0x480cf730],al
1100dcdd:	or     BYTE PTR [edx-0x5a0e004e],dh
1100dce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100dce4:	inc    DWORD PTR [edi-0x10]
1100dce7:	sti    
1100dce8:	iret   
1100dce9:	fist   DWORD PTR ds:0xb5a4fb9e
1100dcef:	int    0xce
1100dcf1:	push   ebx
1100dcf2:	loopne 0x1100dcf4
1100dcf4:	cwde   
1100dcf5:	and    esi,eax
1100dcf7:	sub    DWORD PTR [eax+0x28],edx
1100dcfa:	jecxz  0x1100dd08
1100dcfc:	es jmp 0x8883:0xa3e8599
1100dd04:	inc    ecx
1100dd05:	fisttp QWORD PTR [ecx-0x53806f7d]
1100dd0b:	pop    esi
1100dd0c:	ds push cs
1100dd0e:	push   edx
1100dd0f:	cmp    eax,DWORD PTR [eax-0x39]
1100dd12:	add    ch,al
1100dd14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100dd15:	and    BYTE PTR [ebp+0x4],cl
1100dd18:	push   0x0
1100dd1a:	lock cli 
1100dd1c:	mov    eax,0x218b0f74
1100dd21:	cld    
1100dd22:	and    edx,eax
1100dd24:	out    dx,eax
1100dd25:	adc    al,0x28
1100dd27:	mov    ebx,0xa79f40fa
1100dd2c:	and    al,0xfc
1100dd2e:	mov    edx,edx
1100dd30:	dec    edx
1100dd31:	or     al,0x7f
1100dd33:	jp     0x1100dd17
1100dd35:	popf   
1100dd36:	fild   DWORD PTR [ebp+0x17f67197]
1100dd3c:	data16 loope 0x1100dcda
1100dd3f:	fistp  WORD PTR [ecx]
1100dd41:	jecxz  0x1100dd0b
1100dd43:	sbb    eax,0xba38fefc
1100dd48:	sub    edx,DWORD PTR [edi]
1100dd4a:	pusha  
1100dd4b:	clc    
1100dd4c:	sub    eax,0x18730095
1100dd51:	add    al,0x24
1100dd53:	push   ebx
1100dd54:	jle    0x1100dcfb
1100dd56:	rcr    BYTE PTR [edi+0x81138a],0x68
1100dd5d:	in     al,0x1f
1100dd5f:	test   eax,0x451c6030
1100dd64:	xor    ch,dl
1100dd66:	inc    ecx
1100dd67:	fdiv   DWORD PTR [ecx+0x2a]
1100dd6a:	dec    eax
1100dd6b:	shl    DWORD PTR [ebx-0x273a2399],0xe2
1100dd72:	adc    al,0x88
1100dd74:	ret    
1100dd75:	or     WORD PTR [edx+edx*8+0x6fc3f051],0x2caa
1100dd7f:	js     0x1100dda3
1100dd81:	add    DWORD PTR [ebp+0x4],esp
1100dd84:	push   di
1100dd86:	and    DWORD PTR [eax-0x4f],ecx
1100dd89:	push   ecx
1100dd8a:	(bad)  
1100dd8b:	cli    
1100dd8c:	dec    ecx
1100dd8d:	mov    ebp,0xd900b9d7
1100dd92:	inc    esp
1100dd93:	and    DWORD PTR [eax],esp
1100dd95:	and    esi,DWORD PTR [ecx-0x5c3f1974]
1100dd9b:	cmp    al,0xc5
1100dd9d:	sub    ah,BYTE PTR [ebx+eiz*1+0x3d]
1100dda1:	xchg   ebx,eax
1100dda2:	ja     0x1100de1c
1100dda4:	aas    
1100dda5:	nop
1100dda6:	test   BYTE PTR [ecx-0x3f5e0215],bl
1100ddac:	push   esi
1100ddad:	call   0x3405bddf
1100ddb2:	and    eax,0x2bf7c0dc
1100ddb7:	ret    0xb71f
1100ddba:	inc    ebp
1100ddbb:	xchg   ebp,eax
1100ddbc:	test   DWORD PTR [ebx],eax
1100ddbe:	mov    DWORD PTR [ebp+eax*8+0x7c],edi
1100ddc2:	add    DWORD PTR [ecx+0x0],esi
1100ddc5:	push   cs
1100ddc6:	(bad)
1100ddca:	add    BYTE PTR [eax],bh
1100ddcc:	jb     0x1100ddab
1100ddce:	push   cs
1100ddcf:	lock (bad) 
1100ddd1:	adc    esi,DWORD PTR [edi+0x6f]
1100ddd4:	int    0x11
1100ddd6:	popa   
1100ddd7:	popa   
1100ddd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100ddd9:	mov    esi,0x344092d3
1100ddde:	fist   WORD PTR [esi-0x66]
1100dde1:	ja     0x1100ddc3
1100dde3:	clc    
1100dde4:	not    BYTE PTR [edx+0xcc999e3]
1100ddea:	dec    ecx
1100ddeb:	enter  0x5c3f,0x2f
1100ddef:	pop    ss
1100ddf0:	xor    DWORD PTR [eax+0x0],0x64b02236
1100ddf7:	push   es
1100ddf8:	inc    esp
1100ddf9:	cld    
1100ddfa:	push   ebp
1100ddfb:	lahf   
1100ddfc:	cs cmc 
1100ddfe:	scas   al,BYTE PTR es:[edi]
1100ddff:	test   DWORD PTR [ebx],ecx
1100de01:	jg     0x1100de1b
1100de03:	in     eax,dx
1100de04:	ret    
1100de05:	enter  0x36ff,0xc8
1100de09:	fsin   
1100de0b:	xchg   BYTE PTR [eax-0x7a],bh
1100de0e:	cmc    
1100de0f:	jmp    0x1100dde7
1100de11:	lods   eax,DWORD PTR ds:[esi]
1100de12:	jae    0x1100ddfb
1100de14:	pushf  
1100de15:	jae    0x1100dda5
1100de17:	scas   eax,DWORD PTR es:[edi]
1100de18:	test   DWORD PTR [edi-0x42],edi
1100de1b:	add    BYTE PTR [edx+0x38],bl
1100de1e:	jb     0x1100ddd7
1100de20:	imul   ecx,DWORD PTR [edi+0x3d],0xfffffff9
1100de24:	loop   0x1100de1c
1100de26:	mov    eax,ds:0xdcf7bc9b
1100de2b:	pop    ecx
1100de2c:	fdivr  DWORD PTR [eax+0x245e2e69]
1100de32:	adc    eax,0xfef68cf3
1100de37:	je     0x1100de4b
1100de39:	lock sbb DWORD PTR ds:0x338537f9,ebx
1100de40:	std    
1100de41:	test   al,0x59
1100de43:	jg     0x1100ddec
1100de45:	loop   0x1100ddf7
1100de47:	pop    edi
1100de48:	mov    cl,0xdf
1100de4a:	pop    edi
1100de4b:	iret   
1100de4c:	dec    bl
1100de4e:	add    DWORD PTR [eax-0x8],eax
1100de51:	sbb    BYTE PTR [edx+0x4d],dl
1100de54:	inc    eax
1100de55:	iret   
1100de56:	int3   
1100de57:	xor    ebp,DWORD PTR [ecx-0x4ece5e02]
1100de5d:	lds    eax,FWORD PTR [edx]
1100de5f:	sub    BYTE PTR [eax],ah
1100de61:	shl    DWORD PTR [ebx],0xb1
1100de64:	call   0x7811:0x58b437b1
1100de6b:	sub    al,0x23
1100de6d:	cs jnp 0x1100de7d
1100de70:	jo     0x1100def1
1100de72:	mov    dh,0xf9
1100de74:	fst    DWORD PTR [eax+edx*8]
1100de77:	mov    bl,0x9
1100de79:	xor    eax,0xcc67c93
1100de7e:	dec    edx
1100de7f:	jns    0x1100debd
1100de81:	inc    eax
1100de82:	inc    ebp
1100de83:	out    dx,al
1100de84:	aaa    
1100de85:	enter  0x7a6d,0x2a
1100de89:	and    DWORD PTR [esi-0x15],eax
1100de8c:	sub    eax,DWORD PTR [eax+ecx*1-0x1e]
1100de90:	das    
1100de91:	push   0x142367a4
1100de96:	mov    bh,0x27
1100de98:	xor    BYTE PTR [eax-0x39],cl
1100de9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100de9c:	sub    BYTE PTR [esi],bh
1100de9e:	and    eax,0x67df64e0
1100dea3:	cmp    al,0x82
1100dea5:	es cld 
1100dea7:	stos   BYTE PTR es:[edi],al
1100dea8:	in     al,dx
1100dea9:	sbb    DWORD PTR [ecx-0x56d6c309],eax
1100deaf:	push   es
1100deb0:	add    DWORD PTR [edx],edx
1100deb2:	and    esp,edx
1100deb4:	add    eax,0x2bb5c76
1100deb9:	into   
1100deba:	jns    0x1100dea3
1100debc:	imul   ebx,DWORD PTR ds:[edx+0x38942d76],0xbba367c2
1100dec7:	push   ds
1100dec8:	inc    esp
1100dec9:	xchg   BYTE PTR [eax+0x4c7d2d9d],bl
1100decf:	mov    bh,0x52
1100ded1:	dec    esp
1100ded2:	inc    ecx
1100ded3:	xor    BYTE PTR [edi],al
1100ded5:	dec    esi
1100ded6:	sub    al,0x97
1100ded8:	sbb    al,0x2f
1100deda:	sbb    eax,0xbffb0824
1100dedf:	aad    0xcb
1100dee1:	jg     0x1100df23
1100dee3:	sahf   
1100dee4:	adc    eax,0x758243a8
1100dee9:	data16 and BYTE PTR [ecx],dl
1100deec:	sbb    DWORD PTR [edx],0x8e96bc04
1100def2:	test   DWORD PTR [eax],ecx
1100def4:	jg     0x1100dea6
1100def6:	stc    
1100def7:	lods   eax,DWORD PTR ds:[esi]
1100def8:	lahf   
1100def9:	mov    edi,0x7fcd82d8
1100defe:	(bad)  
1100deff:	stc    
1100df00:	out    0x7,eax
1100df02:	fwait
1100df03:	mov    edi,0x28b00718
1100df08:	add    BYTE PTR es:[esp+edx*2],dl
1100df0c:	xor    ecx,DWORD PTR [esi+0xc]
1100df0f:	imul   edi,esi,0xb4ffd61e
1100df15:	push   esi
1100df16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100df17:	(bad)  
1100df18:	out    0xa2,al
1100df1a:	push   eax
1100df1b:	cmp    edi,DWORD PTR [ebx+0xe]
1100df1e:	inc    esi
1100df1f:	and    DWORD PTR [ecx-0x60fd0df9],ebx
1100df25:	sub    DWORD PTR [ecx],ecx
1100df27:	enter  0xac71,0x3f
1100df2b:	add    DWORD PTR [ecx+0x1e07e163],eax
1100df31:	cmc    
1100df32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100df33:	lock leave 
1100df35:	push   ecx
1100df36:	push   ss
1100df37:	and    BYTE PTR [eax-0x3c],ah
1100df3a:	mov    edi,0x9ce386dc
1100df3f:	add    dl,ch
1100df41:	mov    eax,0x84883934
1100df46:	les    ebp,FWORD PTR [edx]
1100df48:	neg    BYTE PTR [ecx+edi*8-0x1d]
1100df4c:	mov    ch,0x6b
1100df4e:	mov    es,WORD PTR [esi+ecx*8]
1100df51:	cli    
1100df52:	cmc    
1100df53:	or     DWORD PTR [eax],eax
1100df55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100df56:	mov    ch,BYTE PTR [edi-0x92df4bc]
1100df5c:	cmp    dh,bh
1100df5e:	pop    edi
1100df5f:	out    0x16,eax
1100df61:	xor    BYTE PTR [ecx-0xa3fba19],dl
1100df67:	pop    esp
1100df68:	jg     0x1100dfcd
1100df6a:	mov    ah,0xb3
1100df6c:	cmc    
1100df6d:	ss xchg edx,eax
1100df6f:	mov    bl,0xe0
1100df71:	stc    
1100df72:	fiadd  DWORD PTR [eax-0x2b]
1100df75:	in     eax,dx
1100df76:	mov    bl,0x24
1100df78:	mov    eax,ds:0x7be49bc7
1100df7d:	aad    0x24
1100df7f:	and    BYTE PTR [eax+0x6],al
1100df82:	add    BYTE PTR [esi+edi*4-0x4f],al
1100df86:	sti    
1100df87:	xor    BYTE PTR [ebx-0x5],ah
1100df8a:	xchg   ebp,eax
1100df8b:	mov    edx,ecx
1100df8d:	out    0xdf,eax
1100df8f:	cmc    
1100df90:	mov    ebx,0x1a4b2f65
1100df95:	out    dx,al
1100df96:	push   ebx
1100df97:	lds    esi,FWORD PTR [eax-0x1f833a06]
1100df9d:	sub    eax,0xbb5ec37b
1100dfa2:	iret   
1100dfa3:	fs fucomi st,st(2)
1100dfa6:	mov    al,ds:0x5cdeb3
1100dfab:	fisttp DWORD PTR [edi+0x50499860]
1100dfb1:	retf   0xcc2c
1100dfb4:	mov    cl,BYTE PTR [edx+0x6d03bd34]
1100dfba:	sub    al,BYTE PTR [edi+0x0]
1100dfbd:	cmp    DWORD PTR [edi+0x0],0x208d8101
1100dfc4:	test   eax,0x401e3ac1
1100dfc9:	daa    
1100dfca:	push   es
1100dfcb:	xor    eax,0xd04902a2
1100dfd0:	out    0x2b,eax
1100dfd2:	cld    
1100dfd3:	mov    DWORD PTR [ebx-0x6d],0x6a2bf0
1100dfda:	dec    eax
1100dfdb:	clc    
1100dfdc:	cmp    esp,ecx
1100dfde:	out    0x8f,eax
1100dfe0:	iret   
1100dfe1:	retf   
1100dfe2:	push   ebx
1100dfe3:	or     DWORD PTR [edi-0xdf6c942],edx
1100dfe9:	mov    dh,0xed
1100dfeb:	(bad)  [esi+0x7f550b8d]
1100dff1:	(bad)  
1100dff2:	jo     0x1100dfc5
1100dff4:	push   edi
1100dff5:	adc    dl,BYTE PTR [eax-0x36]
1100dff8:	mov    dh,ch
1100dffa:	jno    0x1100dfc6
1100dffc:	das    
1100dffd:	(bad)  
1100dffe:	push   ebx
1100dfff:	jl     0x1100df86
1100e001:	out    dx,al
1100e002:	inc    ecx
1100e003:	(bad)  
1100e004:	jle    0x1100dfd7
1100e006:	add    bl,BYTE PTR [ebx+ebp*2]
1100e009:	add    eax,DWORD PTR [ecx+0x3a]
1100e00c:	inc    esi
1100e00d:	inc    eax
1100e00e:	rcl    BYTE PTR [eax+0x4692a3a],0x80
1100e015:	jmp    0x1100dfb0
1100e017:	dec    ebx
1100e018:	(bad)  
1100e019:	sti    
1100e01a:	pop    edi
1100e01b:	pop    es
1100e01c:	add    al,0x49
1100e01e:	cmp    esp,DWORD PTR cs:[edi-0x28]
1100e022:	mov    ecx,0xb2e68711
1100e027:	popf   
1100e028:	(bad)  
1100e029:	(bad)  
1100e02a:	sub    eax,0x991f255
1100e02f:	inc    ebx
1100e030:	inc    esp
1100e031:	pop    ebp
1100e032:	pop    ds
1100e033:	popa   
1100e034:	hlt    
1100e035:	pop    ebp
1100e036:	mov    esp,0x1f479882
1100e03b:	ds xchg ebx,eax
1100e03d:	mov    al,ds:0x8fcb3e7
1100e042:	or     DWORD PTR [eax-0x4b],ecx
1100e045:	cli    
1100e046:	sbb    al,0xc7
1100e048:	adc    al,0xa4
1100e04a:	jl     0x1100e0c9
1100e04c:	rol    BYTE PTR [edx+ebp*1],cl
1100e04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100e050:	call   0x167b:0x6a813993
1100e057:	scas   al,BYTE PTR es:[edi]
1100e058:	pushf  
1100e059:	mov    dh,0xe3
1100e05b:	shl    dh,cl
1100e05d:	mov    dl,bl
1100e05f:	and    BYTE PTR [edi-0x21],dl
1100e062:	sbb    BYTE PTR [ecx],dl
1100e064:	inc    esp
1100e065:	add    BYTE PTR [ecx],al
1100e067:	cmp    al,bh
1100e069:	mov    al,al
1100e06b:	and    ebx,DWORD PTR ds:0xb809aa97
1100e071:	adc    al,0xe7
1100e073:	rdmsr  
1100e075:	mov    ds:0x995fd1c7,al
1100e07a:	and    eax,0x6c91ae60
1100e07f:	jle    0x1100e0bb
1100e081:	jle    0x1100e0bd
1100e083:	xor    al,0x69
1100e085:	adc    BYTE PTR [ebx],ah
1100e087:	js     0x1100e06e
1100e089:	mov    esi,DWORD PTR [esi-0x79]
1100e08c:	mov    ds:0xd163b89e,eax
1100e091:	fs pop DWORD PTR fs:[eax+0x6127fd55]
1100e099:	sti    
1100e09a:	daa    
1100e09b:	mov    DWORD PTR [ecx],ebx
1100e09d:	push   eax
1100e09e:	lods   eax,DWORD PTR ds:[esi]
1100e09f:	loopne 0x1100e0be
1100e0a1:	mov    al,0x26
1100e0a3:	cmp    dh,0x1e
1100e0a6:	test   dh,bh
1100e0a8:	outs   dx,DWORD PTR ds:[esi]
1100e0a9:	jmp    0x1100e090
1100e0ab:	jl     0x1100e075
1100e0ad:	stos   DWORD PTR es:[edi],eax
1100e0ae:	add    edx,DWORD PTR [ecx-0x7d7c9fe7]
1100e0b4:	sbb    cl,cl
1100e0b6:	inc    ecx
1100e0b7:	and    al,0xe8
1100e0b9:	add    BYTE PTR [ebx-0x303e0325],dl
1100e0bf:	jmp    DWORD PTR [esi-0x18]
1100e0c2:	addr16 sti 
1100e0c4:	arpl   WORD PTR ds:0x77e47abf,cx
1100e0ca:	sbb    bl,bl
1100e0cc:	(bad)  
1100e0cd:	call   0xc256:0xd77f946f
1100e0d4:	imul   edx,DWORD PTR [ecx+0x35],0x0
1100e0d8:	cmc    
1100e0d9:	push   edx
1100e0da:	dec    eax
1100e0db:	adc    edx,eax
1100e0dd:	in     eax,dx
1100e0de:	mov    esp,0x57c1cd2f
1100e0e3:	outs   dx,DWORD PTR ds:[esi]
1100e0e4:	push   ds
1100e0e5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100e0e7:	popf   
1100e0e8:	xor    al,0xda
1100e0ea:	push   ebx
1100e0eb:	pop    ebp
1100e0ec:	aas    
1100e0ed:	or     dh,ah
1100e0ef:	dec    ecx
1100e0f0:	sub    BYTE PTR ds:0x291c02e,0x80
1100e0f7:	sbb    ch,dh
1100e0f9:	out    0x3c,eax
1100e0fb:	mov    ebx,0x97f4a8ff
1100e100:	repz sbb BYTE PTR [edx],al
1100e103:	in     al,dx
1100e104:	fs in  al,0x7
1100e107:	adc    al,0xe0
1100e109:	in     al,dx
1100e10a:	das    
1100e10b:	or     DWORD PTR [ebx-0x14],ecx
1100e10e:	test   eax,0xc50daaa9
1100e113:	aad    0x6b
1100e115:	loope  0x1100e0bd
1100e117:	dec    edi
1100e118:	and    ah,bh
1100e11a:	mov    dl,0xc9
1100e11c:	cmp    ebp,DWORD PTR [eax-0x27e70854]
1100e122:	jge    0x1100e14a
1100e124:	cmp    al,0xc1
1100e126:	dec    eax
1100e127:	push   0x1
1100e129:	loop   0x1100e129
1100e12b:	ins    DWORD PTR es:[edi],dx
1100e12c:	in     al,0x1f
1100e12e:	adc    edi,DWORD PTR [esi-0x62]
1100e131:	cmp    al,0xb
1100e133:	test   eax,0x4239b1bf
1100e138:	adc    DWORD PTR [edi+0x3088926c],eax
1100e13e:	mov    bl,0x4d
1100e140:	dec    edi
1100e141:	in     al,0x1d
1100e143:	imul   eax,DWORD PTR [esi],0x15
1100e146:	ror    edi,cl
1100e148:	jle    0x1100e176
1100e14a:	inc    ecx
1100e14b:	ds stc 
1100e14d:	or     al,0xc3
1100e14f:	push   0xffffffc4
1100e151:	(bad)  
1100e152:	sar    BYTE PTR ds:[ebx+eax*4-0x59],0xf0
1100e158:	fdivrp st(4),st
1100e15a:	xchg   esi,eax
1100e15b:	(bad)
1100e15e:	xor    al,0x0
1100e160:	push   eax
1100e161:	out    0x0,al
1100e163:	push   0x171d424d
1100e168:	dec    ebp
1100e169:	(bad)  
1100e16a:	addr16 aas 
1100e16c:	loope  0x1100e16c
1100e16e:	lock stos BYTE PTR es:[edi],al
1100e170:	pop    ss
1100e171:	out    dx,eax
1100e172:	xchg   edx,eax
1100e173:	neg    DWORD PTR [ebx]
1100e175:	dec    esi
1100e176:	and    al,0xca
1100e178:	or     DWORD PTR [edi],edi
1100e17a:	(bad)  [edi]
1100e17c:	jnp    0x1100e179
1100e17e:	pop    ecx
1100e17f:	pop    edi
1100e180:	pop    ds
1100e181:	ins    DWORD PTR es:[edi],dx
1100e182:	jmp    0x888db67a
1100e187:	mov    al,ds:0xa8c2410f
1100e18c:	push   DWORD PTR [edi]
1100e18e:	cmc    
1100e18f:	jb     0x1100e19f
1100e191:	and    al,0xc1
1100e193:	xlat   BYTE PTR ds:[ebx]
1100e194:	popa   
1100e195:	rcl    DWORD PTR [esi+0xb],0x68
1100e199:	mov    eax,0x4fb0b504
1100e19e:	and    bh,ah
1100e1a0:	and    edx,eax
1100e1a2:	(bad)  
1100e1a3:	ins    BYTE PTR es:[edi],dx
1100e1a4:	dec    dh
1100e1a6:	xchg   cl,ah
1100e1a8:	mov    ebp,0x633f090e
1100e1ad:	pop    esi
1100e1ae:	mov    ecx,0xb72b6c1a
1100e1b3:	test   al,0x0
1100e1b5:	push   eax
1100e1b6:	js     0x1100e158
1100e1b8:	jp     0x1100e177
1100e1ba:	mov    esi,0xbefefa00
1100e1bf:	or     esp,DWORD PTR [esi-0x1f]
1100e1c2:	(bad)  
1100e1c3:	ja     0x1100e1ec
1100e1c5:	add    dl,BYTE PTR [eax-0x84e8aba]
1100e1cb:	popf   
1100e1cc:	int3   
1100e1cd:	jmp    edi
1100e1cf:	push   esp
1100e1d0:	test   al,0xaf
1100e1d2:	cdq    
1100e1d3:	repnz fwait
1100e1d5:	sar    BYTE PTR [esi+0x47],cl
1100e1d8:	clc    
1100e1d9:	adc    al,0xc9
1100e1db:	mov    esi,0x63900264
1100e1e0:	adc    al,0x8e
1100e1e3:	jbe    0x1100e165
1100e1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100e1e6:	adc    DWORD PTR [ebx-0x5d],0xd99552be
1100e1ed:	cmc    
1100e1ee:	and    eax,0xd232b669
1100e1f3:	retf   0x4da8
1100e1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100e1f7:	add    DWORD PTR [ebp+eax*1+0x776a5093],0x80349561
1100e202:	int3   
1100e203:	arpl   WORD PTR [eax+0x61],ax
1100e206:	mov    ebx,0x899c0202
1100e20b:	pop    eax
1100e20c:	test   eax,0xd7765af0
1100e211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100e212:	sti    
1100e213:	dec    ecx
1100e214:	es inc esi
1100e216:	gs aam 0x7e
1100e219:	loope  0x1100e248
1100e21b:	and    BYTE PTR [ebx],ah
1100e21d:	daa    
1100e21e:	gs adc al,0xa6
1100e221:	jnp    0x1100e225
1100e223:	mov    esp,0xfbed0036
1100e228:	dec    edi
1100e229:	jne    0x1100e22a
1100e22b:	sub    BYTE PTR [edi+esi*1-0x1a311556],bh
1100e232:	ss adc DWORD PTR ds:[edx+0x55],edi
1100e237:	and    eax,0x7ed8a900
1100e23c:	jp     0x1100e1c4
1100e23e:	xor    ah,BYTE PTR [ecx]
1100e240:	mov    edx,edi
1100e242:	and    al,0xd7
1100e244:	pusha  
1100e245:	jl     0x1100e1cd
1100e247:	test   eax,0x7b81c056
1100e24c:	lods   eax,DWORD PTR ds:[esi]
1100e24d:	xchg   BYTE PTR [edi+0x7d],bh
1100e250:	xchg   ebx,eax
1100e251:	and    al,0x9b
1100e253:	inc    ebp
1100e254:	mov    ebp,0x22e639c0
1100e259:	ins    BYTE PTR es:[edi],dx
1100e25a:	(bad)  
1100e25c:	std    
1100e25d:	push   es
1100e25e:	add    dh,ah
1100e260:	ins    DWORD PTR es:[edi],dx
1100e261:	add    cl,BYTE PTR [ecx+ecx*8]
1100e264:	xor    DWORD PTR [eax-0x22],edx
1100e267:	adc    DWORD PTR [esi+0x3e],0x381ffd4d
1100e26e:	cmp    BYTE PTR [edi+0x40b397ae],0x34
1100e275:	add    BYTE PTR [edx],dh
1100e277:	add    ebp,DWORD PTR [esi+edx*1+0x7880b9a0]
1100e27e:	and    BYTE PTR [edx],ah
1100e280:	out    dx,al
1100e281:	fiadd  DWORD PTR [edi+ebx*2-0x35e10a69]
1100e288:	test   bh,0xd6
1100e28b:	and    bh,ah
1100e28d:	cdq    
1100e28e:	push   es
1100e28f:	mov    al,ds:0xb400041f
1100e294:	add    al,BYTE PTR [eax-0x1e8d5ed1]
1100e29a:	mov    eax,ds:0x3e08bdb7
1100e29f:	mov    ecx,0xa3481906
1100e2a4:	retf   
1100e2a5:	fcmovne st,st(7)
1100e2a7:	sbb    al,0xc3
1100e2a9:	fsubr  QWORD PTR [edx+ecx*2-0x60]
1100e2ad:	adc    dl,BYTE PTR [ebx]
1100e2af:	add    BYTE PTR [eax+0x1b],dl
1100e2b2:	nop
1100e2b3:	dec    ecx
1100e2b5:	(bad)  
1100e2b6:	aas    
1100e2b7:	jb     0x1100e2bb
1100e2b9:	add    dl,BYTE PTR [ebx+0x4e]
1100e2bc:	mov    eax,0x7d3fb880
1100e2c1:	inc    edx
1100e2c2:	jp     0x1100e24e
1100e2c4:	or     al,0x0
1100e2c6:	push   ds
1100e2c7:	and    BYTE PTR [edi],cl
1100e2c9:	xor    al,0x49
1100e2cb:	jg     0x1100e256
1100e2cd:	mov    dl,ch
1100e2cf:	scas   al,BYTE PTR es:[edi]
1100e2d0:	xor    dh,BYTE PTR [edx]
1100e2d2:	pop    es
1100e2d3:	push   edx
1100e2d4:	xchg   ebp,eax
1100e2d5:	sub    al,0xc9
1100e2d7:	xchg   ecx,eax
1100e2d8:	pop    es
1100e2d9:	int    0x1
1100e2db:	or     BYTE PTR [edx+0x7a46c809],0xc9
1100e2e2:	or     DWORD PTR [eax+0x6479bd8a],esp
1100e2e8:	lahf   
1100e2e9:	mov    dl,0xa9
1100e2eb:	xor    eax,0x7a000811
1100e2f0:	push   esi
1100e2f1:	bound  ecx,QWORD PTR [ecx-0x1256fc4e]
1100e2f7:	out    dx,eax
1100e2f8:	inc    ecx
1100e2f9:	mov    ecx,0xc91c7d04
1100e2fe:	jne    0x1100e34a
1100e300:	das    
1100e301:	or     edi,DWORD PTR [eax+edi*1]
1100e304:	push   ss
1100e305:	repnz stos BYTE PTR es:[edi],al
1100e307:	xchg   edx,eax
1100e308:	lods   al,BYTE PTR ds:[esi]
1100e309:	ds sbb eax,0x3f05cfab
1100e30f:	xor    edi,ebx
1100e311:	fisttp WORD PTR [ebx-0x6223bf97]
1100e317:	push   edi
1100e318:	add    DWORD PTR [eax+0x4a],eax
1100e31b:	mov    ebx,0x92417200
1100e320:	lock shl DWORD PTR [esi+0x3d1df495],cl
1100e327:	repnz push ebx
1100e329:	lods   eax,DWORD PTR ds:[esi]
1100e32a:	add    DWORD PTR [edx-0x49],ebx
1100e32d:	(bad)  
1100e32e:	in     eax,0x4a
1100e330:	clc    
1100e331:	clc    
1100e332:	pop    edi
1100e333:	in     al,dx
1100e334:	xchg   DWORD PTR [esi+0x1aa919a],esp
1100e33a:	sbb    al,0x80
1100e33c:	pop    ebp
1100e33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100e33e:	cmp    esi,DWORD PTR [edi]
1100e340:	sbb    eax,0x9507d1ab
1100e345:	cmp    ecx,edx
1100e347:	push   edi
1100e348:	ins    DWORD PTR es:[edi],dx
1100e349:	sub    ah,bh
1100e34b:	pop    DWORD PTR [ebp+0x45]
1100e34e:	cld    
1100e34f:	shl    BYTE PTR [eax+0x7f0200e1],0x5
1100e356:	leave  
1100e357:	dec    ebp
1100e358:	dec    eax
1100e359:	cmp    al,0x80
1100e35b:	test   BYTE PTR [esi],0x58
1100e35e:	sub    eax,0x2217620
1100e363:	xor    BYTE PTR [esi-0x1929a18e],0xf
1100e36a:	push   0xffffffff
1100e36c:	pop    ebx
1100e36d:	mov    eax,ds:0x4d8fed9b
1100e372:	xchg   ebp,eax
1100e373:	out    dx,al
1100e374:	dec    esi
1100e375:	jge    0x1100e313
1100e377:	and    al,0xde
1100e379:	mov    cl,0x5
1100e37b:	in     al,dx
1100e37c:	dec    edx
1100e37d:	cs xchg ebp,eax
1100e37f:	shr    DWORD PTR [esi-0x78efad6a],0x7a
1100e386:	jns    0x1100e37c
1100e388:	mov    ebp,0x37eb98ef
1100e38d:	js     0x1100e407
1100e38f:	neg    ecx
1100e391:	jae    0x1100e404
1100e393:	fs jo  0x1100e3b6
1100e396:	sbb    DWORD PTR [ecx+eax*8-0x3a],edi
1100e39a:	(bad)  
1100e39b:	ja     0x41a4e093
1100e3a1:	push   edi
1100e3a2:	int3   
1100e3a3:	clc    
1100e3a4:	dec    edi
1100e3a5:	mov    eax,ds:0x1f851fcd
1100e3aa:	mov    bh,0xf
1100e3ac:	out    0xa3,eax
1100e3ae:	dec    eax
1100e3af:	inc    esi
1100e3b0:	and    bh,dh
1100e3b2:	inc    esi
1100e3b3:	dec    esi
1100e3b4:	lea    ebx,[ebx]
1100e3b6:	es inc ebx
1100e3b8:	xchg   ecx,eax
1100e3b9:	mov    edi,0xe99db139
1100e3be:	sub    bh,BYTE PTR [ecx]
1100e3c0:	pop    DWORD PTR ds:0x551c5452
1100e3c6:	aam    0x21
1100e3c8:	xor    esp,DWORD PTR [eax-0x46384958]
1100e3ce:	repnz sbb al,0x48
1100e3d1:	fs lahf 
1100e3d3:	adc    ecx,DWORD PTR ds:0x43c0c080
1100e3d9:	ret    
1100e3da:	test   DWORD PTR [eax+0x49],ecx
1100e3dd:	inc    edi
1100e3de:	pop    ecx
1100e3df:	hlt    
1100e3e0:	sahf   
1100e3e1:	sub    ah,dh
1100e3e3:	and    eax,eax
1100e3e5:	mov    eax,ds:0x512af2a2
1100e3ea:	ret    
1100e3eb:	or     DWORD PTR [eax+0x69],ecx
1100e3ee:	hlt    
1100e3ef:	sbb    eax,0x2832448b
1100e3f4:	inc    ecx
1100e3f5:	xchg   ebp,eax
1100e3f6:	out    0x0,eax
1100e3f8:	add    BYTE PTR [ecx+0x1c269833],bl
1100e3fe:	imul   eax,DWORD PTR ds:0x6623c066,0x0
1100e405:	repz and edx,DWORD PTR [ebp+esi*1-0x2bbfbee8]
1100e40d:	jg     0x1100e3dc
1100e40f:	not    BYTE PTR [edi+0x63]
1100e412:	and    eax,0x8095fc
1100e417:	lods   eax,DWORD PTR ds:[esi]
1100e418:	mov    ds:0x2fd74ff3,eax
1100e41d:	in     al,dx
1100e41e:	arpl   WORD PTR [edi-0x4a],di
1100e421:	aas    
1100e422:	in     al,dx
1100e423:	jb     0x1100e3e4
1100e425:	imul   edi,DWORD PTR [esi+edx*1+0x12005e5],0x1f3d496d
1100e430:	les    eax,FWORD PTR [ebx]
1100e432:	je     0x1100e4a4
1100e434:	add    BYTE PTR [esi],dh
1100e436:	fnstsw WORD PTR [eax-0x3c8f2255]
1100e43c:	or     eax,0x22c1891e
1100e441:	jno    0x1100e3f1
1100e443:	ud2    
1100e445:	or     DWORD PTR [esi+ebx*8],eax
1100e448:	or     ecx,DWORD PTR [ecx+0x13]
1100e44b:	mov    al,0xc9
1100e44d:	inc    ecx
1100e44e:	lds    edx,FWORD PTR [edx+0x61]
1100e451:	loope  0x1100e4b3
1100e453:	popa   
1100e454:	push   esp
1100e455:	xlat   BYTE PTR ds:[ebx]
1100e456:	adc    edi,DWORD PTR [ecx+0x2e]
1100e459:	xchg   esp,eax
1100e45a:	in     eax,dx
1100e45b:	movups XMMWORD PTR [esi+0x3e],xmm7
1100e45f:	fdivr  st,st(4)
1100e461:	inc    esp
1100e462:	clc    
1100e463:	mov    esp,ebx
1100e465:	repz test DWORD PTR [edx-0x18ab06fb],edi
1100e46c:	dec    ecx
1100e46d:	mov    al,0x94
1100e46f:	fisubr DWORD PTR [ebp-0x700fa849]
1100e475:	pop    ss
1100e476:	iret   
1100e477:	inc    esi
1100e478:	fstp   TBYTE PTR [esi]
1100e47a:	or     DWORD PTR [eax],esi
1100e47c:	xchg   edx,eax
1100e47d:	jl     0x1100e497
1100e47f:	leave  
1100e480:	pop    ss
1100e481:	repz std 
1100e483:	push   ecx
1100e484:	std    
1100e485:	daa    
1100e486:	sbb    BYTE PTR [eax+0x7f9cc91a],0x14
1100e48d:	in     al,0x13
1100e48f:	jecxz  0x1100e491
1100e491:	jl     0x1100e48d
1100e493:	popf   
1100e494:	cli    
1100e495:	mov    cs,WORD PTR [esp+edi*8+0x3932a974]
1100e49c:	test   al,0xbe
1100e49e:	pop    ss
1100e49f:	retf   0xd382
1100e4a2:	sbb    al,BYTE PTR [eax]
1100e4a4:	int    0x80
1100e4a6:	inc    ebx
1100e4a7:	cmp    edx,esi
1100e4a9:	loop   0x1100e451
1100e4ab:	inc    ebx
1100e4ac:	mov    eax,ds:0x37cd9a04
1100e4b1:	pop    ss
1100e4b2:	out    0x28,al
1100e4b4:	cmp    BYTE PTR [esi+edi*1-0x7f6efba3],0x15
1100e4bc:	add    DWORD PTR [esi+edx*2+0x13c859f9],0x1223840
1100e4c7:	inc    ecx
1100e4c8:	fdivr  DWORD PTR [edi-0x76]
1100e4cb:	lock jecxz 0x1100e49f
1100e4ce:	mov    edx,0xc8cba5d2
1100e4d3:	lds    esp,FWORD PTR [edi]
1100e4d5:	out    0x0,al
1100e4d7:	lea    esi,[esi+0x4781b049]
1100e4dd:	jne    0x1100e535
1100e4df:	fild   WORD PTR [ecx-0x67]
1100e4e2:	cmp    BYTE PTR [edi+eiz*8+0x4b],ch
1100e4e6:	clc    
1100e4e7:	xor    BYTE PTR [ebx+0x4b01210e],bh
1100e4ed:	int3   
1100e4ee:	in     al,dx
1100e4ef:	sbb    ebp,ebx
1100e4f1:	and    BYTE PTR [edx],0xcf
1100e4f4:	add    BYTE PTR [eax],0x2e
1100e4f7:	(bad)  
1100e4f8:	clc    
1100e4f9:	arpl   WORD PTR [edi],bp
1100e4fb:	xor    BYTE PTR [edx+0x8e7e3f9],0x38
1100e502:	fisub  WORD PTR [eax]
1100e504:	jno    0x1100e537
1100e506:	push   ebx
1100e507:	lock push edi
1100e509:	scas   eax,DWORD PTR es:[edi]
1100e50a:	fimul  DWORD PTR [ebx]
1100e50c:	push   cs
1100e50d:	jns    0x1100e4d7
1100e50f:	push   0xffffffe9
1100e511:	xchg   esp,eax
1100e512:	aam    0x41
1100e514:	xor    eax,0xd0125800
1100e519:	idiv   BYTE PTR [ebx-0x497e66ff]
1100e51f:	or     eax,0x9ba426a9
1100e524:	add    al,BYTE PTR [ecx]
1100e526:	ds stos DWORD PTR es:[edi],eax
1100e528:	ds pushf 
1100e52a:	fnstcw WORD PTR [eax+eax*4]
1100e52d:	shr    BYTE PTR [ecx+0x2906a290],0x2f
1100e534:	mov    al,ds:0x1a880b4d
1100e539:	inc    eax
1100e53a:	dec    eax
1100e53b:	fldenv [ebp+0x4cf57c19]
1100e541:	ds mov edx,0xed8967a0
1100e547:	das    
1100e548:	ss (bad) 
1100e54a:	sti    
1100e54b:	mov    eax,esi
1100e54d:	sub    ecx,DWORD PTR [ecx]
1100e54f:	jg     0x1100e54f
1100e551:	sub    al,0xfc
1100e553:	in     al,0x1c
1100e555:	rol    BYTE PTR [esi+edi*1-0x612142aa],0xe3
1100e55d:	mov    esi,DWORD PTR [edi]
1100e55f:	js     0x1100e519
1100e561:	loopne 0x1100e5e2
1100e563:	jmp    0x70e0:0x70bdfd1
1100e56a:	inc    esp
1100e56b:	(bad)
1100e56f:	cld    
1100e570:	dec    eax
1100e571:	xor    eax,0xea9e2bfe
1100e576:	mov    edi,esp
1100e578:	cld    
1100e579:	xor    al,0xf1
1100e57b:	addr16 push edx
1100e57d:	std    
1100e57e:	sub    ecx,esi
1100e580:	cld    
1100e581:	dec    ebx
1100e582:	stos   BYTE PTR es:[edi],al
1100e583:	mov    edi,0x9a6fdd07
1100e588:	jae    0x1100e58c
1100e58a:	adc    BYTE PTR [edi],bh
1100e58c:	mov    al,ds:0x7896e59
1100e591:	dec    eax
1100e592:	sti    
1100e593:	mov    ?,WORD PTR [eax+0x7310ae52]
1100e599:	imul   eax,DWORD PTR [eax+0x25],0x6667c02d
1100e5a0:	inc    eax
1100e5a1:	adc    dh,BYTE PTR [ecx+eax*1]
1100e5a4:	add    al,0x17
1100e5a6:	mov    ebp,0xdec71508
1100e5ab:	push   edi
1100e5ac:	arpl   WORD PTR [ecx],bx
1100e5ae:	xchg   ebp,eax
1100e5af:	sub    esi,DWORD PTR [eax-0x36]
1100e5b2:	ds daa 
1100e5b4:	cmc    
1100e5b5:	lahf   
1100e5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100e5b7:	repz retf 0x7ed9
1100e5bb:	adc    bl,al
1100e5bd:	mov    esp,0x9d7a5774
1100e5c2:	sub    ecx,ebx
1100e5c4:	sub    BYTE PTR [ecx+0x6086c91e],bh
1100e5ca:	and    edx,DWORD PTR [ebx-0x55]
1100e5cd:	std    
1100e5ce:	cmp    bl,BYTE PTR [eax-0x6593f738]
1100e5d4:	aaa    
1100e5d5:	xor    BYTE PTR [edi],cl
1100e5d7:	jmp    ebp
1100e5d9:	jle    0x1100e61b
1100e5db:	rol    al,0xb5
1100e5de:	or     ah,BYTE PTR [ebp+0x2691824]
1100e5e4:	pop    ecx
1100e5e5:	loopne 0x1100e577
1100e5e7:	sbb    bh,cl
1100e5e9:	lds    eax,FWORD PTR ds:0x92340a08
1100e5ef:	or     al,0xfd
1100e5f1:	ror    DWORD PTR [ebx+0x3de784f7],1
1100e5f7:	jns    0x1100e5a0
1100e5f9:	fadd   QWORD PTR [eax+ebp*2]
1100e5fc:	jmp    0xe0de3c78
1100e601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100e602:	shl    BYTE PTR ds:0xb5b608eb,1
1100e608:	ss aaa 
1100e60a:	pusha  
1100e60b:	push   edi
1100e60c:	jg     0x1100e61b
1100e60e:	call   DWORD PTR [edx-0x64]
1100e611:	rol    BYTE PTR [esi+eiz*8],0x40
1100e615:	add    BYTE PTR [ecx+0x19900e60],al
1100e61b:	inc    eax
1100e61c:	pop    ecx
1100e61d:	sbb    BYTE PTR [ecx-0x6e],0x50
1100e621:	cmp    BYTE PTR [ebx-0x80],dh
1100e624:	inc    eax
1100e625:	add    al,BYTE PTR [eax-0x6f01274a]
1100e62b:	aad    0x57
1100e62d:	stos   BYTE PTR es:[edi],al
1100e62e:	ficomp WORD PTR [ebx-0x49b988b]
1100e634:	inc    ebx
1100e635:	bound  ecx,QWORD PTR [edi+0x43]
1100e638:	pop    ebp
1100e639:	inc    ecx
1100e63a:	or     eax,DWORD PTR [eax+0x3f]
1100e63d:	mov    bh,0xf9
1100e63f:	adc    DWORD PTR [ecx-0x5123bf0d],ebp
1100e645:	jbe    0x1100e638
1100e647:	push   edi
1100e648:	(bad)  
1100e649:	jo     0x1100e634
1100e64b:	aad    0x73
1100e64d:	pop    esp
1100e64e:	mov    edx,0x977bed8b
1100e653:	cld    
1100e654:	std    
1100e655:	mov    cl,0xc8
1100e657:	daa    
1100e658:	mov    ebx,0xf98abcfa
1100e65d:	daa    
1100e65e:	adc    BYTE PTR [eax+0x4c],dh
1100e661:	add    dl,BYTE PTR [edx-0x10170d08]
1100e667:	fsubr  st,st(3)
1100e669:	iret   
1100e66a:	test   BYTE PTR [edi],bl
1100e66c:	sub    DWORD PTR [ebx+0x48f004da],ebp
1100e672:	or     al,0xd2
1100e674:	outs   dx,DWORD PTR ds:[esi]
1100e675:	sahf   
1100e676:	add    eax,0x180023d3
1100e67b:	pop    edi
1100e67c:	mov    edx,0x1673f11a
1100e681:	popf   
1100e682:	dec    esp
1100e683:	pop    es
1100e684:	loope  0x1100e696
1100e686:	les    eax,FWORD PTR [eax+edx*8-0x3f]
1100e68a:	inc    eax
1100e68b:	mov    ah,0x8f
1100e68d:	adc    BYTE PTR [edi-0x4bfa4ee],cl
1100e693:	retf   0xae88
1100e696:	xor    eax,0x1d5e1201
1100e69b:	std    
1100e69c:	inc    edi
1100e69d:	mov    DWORD PTR [ebx],0x931f845
1100e6a3:	cmp    dh,al
1100e6a5:	jmp    0x4831:0x300c003e
1100e6ac:	mov    BYTE PTR [esi-0x7ab0fd99],dh
1100e6b2:	(bad)  
1100e6b4:	sub    BYTE PTR [ecx],ah
1100e6b6:	call   0x9f91:0xe03ee802
1100e6bd:	jns    0x1100e6c0
1100e6bf:	mov    edx,0xa0735516
1100e6c4:	retf   0x7e6d
1100e6c7:	mov    dh,BYTE PTR [edi+0x2d16e120]
1100e6cd:	bound  eax,QWORD PTR [edi+eiz*1]
1100e6d0:	cld    
1100e6d1:	(bad)  
1100e6d2:	scas   al,BYTE PTR es:[edi]
1100e6d3:	lock cmp ecx,edi
1100e6d6:	fnstcw WORD PTR [ecx+0x7e]
1100e6d9:	sbb    eax,0xd0b51167
1100e6de:	sahf   
1100e6df:	out    0x11,al
1100e6e1:	or     ah,bl
1100e6e3:	dec    ebp
1100e6e4:	aaa    
1100e6e5:	fucom  st(4)
1100e6e7:	daa    
1100e6e8:	cwde   
1100e6e9:	mov    edx,DWORD PTR [eax+0x2023e040]
1100e6ef:	data16 add BYTE PTR [ecx-0x7bf5937f],dl
1100e6f6:	mov    ebx,0x5dd14108
1100e6fb:	ins    BYTE PTR es:[edi],dx
1100e6fc:	jmp    FWORD PTR [ecx]
1100e6fe:	xor    BYTE PTR [eax-0x2ad8c410],dl
1100e704:	in     eax,dx
1100e705:	outs   dx,DWORD PTR ds:[esi]
1100e706:	jecxz  0x1100e6e8
1100e708:	loop   0x1100e76d
1100e70a:	pop    ebx
1100e70b:	hlt    
1100e70c:	(bad)  
1100e70d:	mov    bl,0x40
1100e70f:	inc    eax
1100e710:	cmp    bh,dh
1100e712:	mov    esp,DWORD PTR [ebx-0x8]
1100e715:	loop   0x1100e70c
1100e717:	jae    0x1100e6b1
1100e719:	test   eax,0x533b8927
1100e71e:	cmp    BYTE PTR [ebx],dl
1100e720:	nop
1100e721:	mov    ebp,edx
1100e723:	jle    0x1100e6cf
1100e725:	cmc    
1100e726:	pop    es
1100e727:	xchg   esp,eax
1100e728:	and    al,0xa4
1100e72a:	data16 cld 
1100e72c:	mov    edx,ebp
1100e72e:	jg     0x1100e6f8
1100e730:	clc    
1100e731:	shl    ecx,cl
1100e733:	mov    edi,0x229e828
1100e738:	shl    cl,1
1100e73a:	gs xchg BYTE PTR ss:[edi+0x42],bh
1100e73f:	add    bl,BYTE PTR [ecx+eax*2]
1100e742:	enter  0xab23,0x7d
1100e746:	out    0x6c,eax
1100e748:	jmp    FWORD PTR [edx-0x1f]
1100e74b:	xlat   BYTE PTR ds:[ebx]
1100e74c:	mov    esi,0x500dce75
1100e751:	idiv   BYTE PTR [ebx+ecx*1]
1100e754:	push   edx
1100e755:	fidivr DWORD PTR [edi-0x34]
1100e758:	cdq    
1100e759:	jne    0x1100e6ef
1100e75b:	imul   ebp,DWORD PTR [edi],0xffffffbf
1100e75e:	shl    DWORD PTR [ecx+0x2b],cl
1100e761:	mov    ah,0x8
1100e763:	cmp    eax,0x64114250
1100e768:	ret    0x8d5c
1100e76b:	aad    0x48
1100e76d:	push   cs
1100e76e:	add    BYTE PTR [esi-0x67],bl
1100e771:	add    eax,0x11439c52
1100e776:	mov    al,cl
1100e778:	xor    eax,0x24001e44
1100e77d:	xchg   esp,eax
1100e77e:	sbb    DWORD PTR [ebp-0x3],ebx
1100e781:	and    cl,al
1100e783:	add    BYTE PTR [esp+edi*8],ch
1100e786:	xchg   ecx,eax
1100e787:	xor    al,0x64
1100e789:	ret    0x728f
1100e78c:	adc    eax,esi
1100e78e:	push   ecx
1100e78f:	stc    
1100e790:	xor    al,0xb3
1100e793:	test   eax,0x9c0cf390
1100e798:	mov    ah,0x0
1100e79a:	adc    bh,BYTE PTR [esp+eax*2]
1100e79d:	(bad)  
1100e79e:	push   eax
1100e79f:	xchg   esp,eax
1100e7a0:	add    BYTE PTR [edi*8-0x2a1e625c],bl
1100e7a7:	(bad)  
1100e7a8:	out    dx,al
1100e7a9:	ds pop ecx
1100e7ab:	pop    edi
1100e7ac:	sbb    bl,BYTE PTR [edx]
1100e7ae:	jg     0x1100e762
1100e7b0:	js     0x1100e7df
1100e7b2:	xchg   ebx,eax
1100e7b3:	popf   
1100e7b4:	or     DWORD PTR [ecx+0x20],eax
1100e7b7:	in     al,0xa
1100e7b9:	mov    esp,0x80ce5ea7
1100e7be:	es or  ah,al
1100e7c1:	and    eax,0x2847741c
1100e7c6:	iret   
1100e7c7:	loopne 0x1100e804
1100e7c9:	xchg   ecx,eax
1100e7ca:	lock sub esi,DWORD PTR [esi+0x617a2e9f]
1100e7d1:	and    edi,DWORD PTR ds:0x4d2b604c
1100e7d7:	lock and ch,ah
1100e7da:	test   DWORD PTR [ebp+0x5c1cd971],ebx
1100e7e0:	jns    0x1100e7d5
1100e7e2:	sbb    al,0xda
1100e7e4:	clc    
1100e7e5:	mov    al,ds:0x5c5578ca
1100e7ea:	fdiv   QWORD PTR [ebx]
1100e7ec:	dec    esi
1100e7ed:	lock mov DWORD PTR [esi],ebx
1100e7f0:	adc    cl,0x28
1100e7f3:	das    
1100e7f4:	cmc    
1100e7f5:	inc    ebp
1100e7f6:	mov    ecx,0x6ace00
1100e7fb:	cmp    dh,0x7f
1100e7fe:	and    al,0xf9
1100e800:	enter  0x62cd,0x19
1100e804:	addr16 cs inc edx
1100e807:	mov    eax,ds:0x2409302e
1100e80c:	test   DWORD PTR [edx],ecx
1100e80e:	(bad)  
1100e80f:	jb     0x1100e7a8
1100e811:	sbb    ch,BYTE PTR [esi-0x2d]
1100e814:	pusha  
1100e815:	fst    st(5)
1100e817:	push   0x8038099e
1100e81c:	rcl    DWORD PTR [edx],1
1100e81e:	xor    BYTE PTR [ecx+0x7],dh
1100e821:	dec    edi
1100e822:	daa    
1100e823:	jl     0x1100e7a5
1100e825:	rol    BYTE PTR [esi],cl
1100e827:	sub    bl,BYTE PTR [edi+0x2b309b9]
1100e82d:	sahf   
1100e82e:	sub    al,al
1100e830:	xchg   DWORD PTR [ebx-0x7ea138ed],esp
1100e836:	xchg   esi,eax
1100e837:	push   edx
1100e838:	icebp  
1100e839:	mov    eax,edi
1100e83b:	and    esp,DWORD PTR [ecx-0x3a]
1100e83e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100e83f:	dec    edi
1100e840:	sahf   
1100e841:	sub    DWORD PTR [ecx+esi*2],0x19f73148
1100e848:	fwait
1100e849:	iret   
1100e84a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
1100e84c:	fdiv   st,st(6)
1100e84e:	arpl   WORD PTR [edi+esi*4+0x9],dx
1100e852:	add    BYTE PTR [eax+0x2302982c],bh
1100e858:	out    0xe4,eax
1100e85a:	sbb    DWORD PTR [edx+0x358ebd0],ecx
1100e860:	sbb    BYTE PTR [edi-0x1],0xdf
1100e864:	test   DWORD PTR [ebx+0x1ecbcb7],0x326c2fd2
1100e86e:	push   eax
1100e86f:	pop    ebx
1100e870:	aas    
1100e871:	pop    ebx
1100e872:	mov    al,ds:0x1c24fe0
1100e877:	mov    ah,0xc5
1100e879:	or     DWORD PTR [eax+0x51],esp
1100e87c:	xchg   ecx,eax
1100e87d:	and    DWORD PTR [edi],edx
1100e87f:	adc    DWORD PTR [edx],esi
1100e881:	push   es
1100e882:	fild   WORD PTR ds:0x4681349
1100e888:	pop    es
1100e889:	test   DWORD PTR [ebx],esp
1100e88b:	fistp  WORD PTR [edi]
1100e88d:	call   0x814f:0xfb607f36
1100e894:	add    DWORD PTR [ecx-0x781269c3],ecx
1100e89a:	push   cs
1100e89b:	shr    DWORD PTR [edi],0xd8
1100e89e:	push   ebp
1100e89f:	inc    ebp
1100e8a0:	jo     0x1100e83a
1100e8a2:	mov    ah,0x20
1100e8a4:	dec    eax
1100e8a5:	imul   esp,DWORD PTR [ecx-0x28bdaffa],0xffffffc2
1100e8ac:	sar    dh,cl
1100e8ae:	retf   
1100e8af:	daa    
1100e8b0:	aaa    
1100e8b1:	(bad)  
1100e8b2:	and    al,0x20
1100e8b4:	mov    ds,ebp
1100e8b6:	push   edi
1100e8b7:	jmp    0x7ed5:0x4def4ebf
1100e8be:	pop    esp
1100e8bf:	push   cs
1100e8c0:	add    al,ch
1100e8c2:	mul    BYTE PTR [ebx-0x2e]
1100e8c5:	bswap  edi
1100e8c7:	out    0x46,eax
1100e8c9:	xor    al,0xea
1100e8cb:	pop    ebx
1100e8cc:	or     eax,0xa325e5a0
1100e8d1:	(bad)  
1100e8d2:	fidivr DWORD PTR [ebx+0x1]
1100e8d5:	mov    BYTE PTR [eax*1-0x148f6bea],ch
1100e8dc:	out    dx,eax
1100e8dd:	dec    esp
1100e8de:	mov    BYTE PTR [ecx-0x43abefe4],bh
1100e8e4:	jle    0x1100e910
1100e8e6:	loope  0x1100e915
1100e8e8:	pop    esi
1100e8e9:	or     dl,0xee
1100e8ec:	iret   
1100e8ed:	sub    bh,BYTE PTR ds:0xc498b808
1100e8f3:	push   ds
1100e8f4:	mov    dh,al
1100e8f6:	xchg   ebx,eax
1100e8f7:	ret    0x9524
1100e8fa:	or     BYTE PTR [ecx],bh
1100e8fc:	push   eax
1100e8fd:	inc    esp
1100e8fe:	mov    al,ds:0xdc7bf1c4
1100e903:	mov    esi,0xef881191
1100e908:	ret    0x5c6
1100e90b:	pop    eax
1100e90c:	sbb    ebx,DWORD PTR [esi+0x4f]
1100e90f:	cmovbe ecx,edi
1100e912:	xor    BYTE PTR [esi+0x16],0x2f
1100e916:	test   DWORD PTR [edi-0x31],edx
1100e919:	dec    ecx
1100e91a:	js     0x1100e920
1100e91c:	push   eax
1100e91d:	fcomi  st,st(2)
1100e91f:	cld    
1100e920:	test   DWORD PTR [esi-0xa],ecx
1100e923:	adc    eax,0xf1e01112
1100e928:	(bad)  
1100e929:	fst    DWORD PTR [ecx]
1100e92b:	dec    esi
1100e92c:	std    
1100e92d:	mov    edi,0x3ab3c2cd
1100e932:	sbb    DWORD PTR [eax],ebp
1100e934:	jmp    0x1100e975
1100e936:	adc    ebp,DWORD PTR [eax-0x4b9d3a03]
1100e93c:	cli    
1100e93d:	clc    
1100e93e:	add    edi,DWORD PTR [ebp+0x154d6d00]
1100e944:	adc    eax,0x92c01d29
1100e949:	test   cl,al
1100e94b:	sbb    al,0xf8
1100e94d:	xchg   ebx,eax
1100e94e:	jp     0x1100e949
1100e950:	sub    BYTE PTR [eax-0x27],cl
1100e953:	lock push 0x430d8406
1100e959:	cmp    BYTE PTR [esi+eiz*2+0x49004ffb],dl
1100e960:	jmp    0xb109b1a
1100e965:	cdq    
1100e966:	cmp    BYTE PTR ds:0x71b71fdb,dl
1100e96c:	add    eax,0xf320eb58
1100e971:	cmp    BYTE PTR [esi],cl
1100e973:	sar    BYTE PTR [esi],0x88
1100e976:	inc    esi
1100e977:	mov    eax,ds:0xd783d94f
1100e97c:	xchg   ebp,eax
1100e97d:	jl     0x1100e92d
1100e97f:	hlt    
1100e980:	shr    BYTE PTR [ebp-0x40],0x8f
1100e984:	mov    esi,0xfe263e0e
1100e989:	(bad)  
1100e98a:	jmp    FWORD PTR [esi]
1100e98c:	fmul   QWORD PTR [edi+ebx*8]
1100e98f:	mov    edx,0x3cc98c7d
1100e994:	enter  0x4684,0x20
1100e998:	nop
1100e999:	cwde   
1100e99a:	add    BYTE PTR [edx-0x9],dl
1100e99d:	and    ebx,DWORD PTR [eax]
1100e99f:	inc    eax
1100e9a0:	adc    ch,ah
1100e9a2:	in     al,0x16
1100e9a4:	hlt    
1100e9a5:	pop    eax
1100e9a6:	out    dx,eax
1100e9a7:	dec    edi
1100e9a8:	data16 cld 
1100e9aa:	jne    0x1100e9f4
1100e9ac:	sti    
1100e9ad:	adc    ebx,ebx
1100e9af:	out    dx,eax
1100e9b0:	sub    BYTE PTR [eax+edx*8],bl
1100e9b3:	cmp    ebp,DWORD PTR [eax]
1100e9b5:	cvtpi2ps xmm4,QWORD PTR [eax+eiz*4]
1100e9b9:	mov    esp,0x89abdb37
1100e9be:	mov    edx,edi
1100e9c0:	sbb    al,BYTE PTR [eax-0x18a8d824]
1100e9c6:	and    eax,0xe3469e7b
1100e9cb:	fdiv   st,st(3)
1100e9cd:	push   ebp
1100e9ce:	push   esi
1100e9cf:	and    DWORD PTR [edx+0x14],edi
1100e9d2:	xchg   edx,eax
1100e9d3:	or     BYTE PTR [edx-0xc],0x1f
1100e9d7:	sbb    eax,0x37aa52a7
1100e9dc:	add    DWORD PTR [ecx+0x25],0x2a
1100e9e0:	mov    eax,0xfff88100
1100e9e5:	inc    ebx
1100e9e6:	and    eax,edx
1100e9e8:	das    
1100e9e9:	xor    ecx,DWORD PTR [ebx]
1100e9eb:	cmp    bl,ch
1100e9ed:	push   eax
1100e9ee:	push   esp
1100e9ef:	jg     0x1100ea0a
1100e9f1:	std    
1100e9f2:	icebp  
1100e9f3:	pushf  
1100e9f4:	es inc esp
1100e9f6:	cwde   
1100e9f7:	test   DWORD PTR [edi-0x67],ebx
1100e9fa:	add    edx,DWORD PTR [edx+0x38]
1100e9fd:	adc    al,0x23
1100e9ff:	or     BYTE PTR [ecx],dh
1100ea01:	xor    DWORD PTR [edx+0x697f9152],0x53
1100ea08:	or     DWORD PTR [esi],eax
1100ea0a:	bound  edx,QWORD PTR [ebx-0x3f68f63d]
1100ea10:	add    DWORD PTR es:0x22593455,edi
1100ea17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100ea18:	push   eax
1100ea19:	jg     0x1100ea39
1100ea1b:	cld    
1100ea1c:	nop
1100ea1d:	mov    ch,0xf0
1100ea1f:	ja     0x1100ea48
1100ea21:	out    dx,eax
1100ea22:	iret   
1100ea23:	movzx  esi,BYTE PTR [ebp-0x1420ae21]
1100ea2a:	icebp  
1100ea2b:	add    bl,al
1100ea2d:	repnz loope 0x1100e9ca
1100ea30:	push   esp
1100ea31:	sub    al,0xbd
1100ea33:	ja     0x1100ea1f
1100ea35:	xchg   edi,eax
1100ea36:	lds    ebp,FWORD PTR [edx-0x3d]
1100ea39:	sub    eax,0x82235f4d
1100ea3e:	xor    BYTE PTR [edi],0xde
1100ea41:	adc    DWORD PTR [edx-0xfdfb247],0x13397af6
1100ea4b:	les    esp,FWORD PTR [ebx]
1100ea4d:	xor    BYTE PTR [edi],dl
1100ea4f:	or     al,BYTE PTR ss:[esi-0x70]
1100ea53:	adc    eax,0xfed8befe
1100ea58:	call   0xd06dbe47
1100ea5d:	mov    eax,ds:0x37f8fc21
1100ea63:	int    0x6a
1100ea65:	call   0xeaa6:0xebbbec0b
1100ea6c:	push   ebp
1100ea6d:	ror    BYTE PTR [edx],1
1100ea6f:	cli    
1100ea70:	out    0x6d,al
1100ea72:	sub    esi,DWORD PTR [ebp+0x19bd9f77]
1100ea78:	outs   dx,BYTE PTR ds:[esi]
1100ea79:	sti    
1100ea7a:	jmp    0x7378f597
1100ea7f:	xor    DWORD PTR [edi],ecx
1100ea81:	dec    esp
1100ea82:	clc    
1100ea83:	mov    DWORD PTR [edx+0x17dca8ed],eax
1100ea89:	add    DWORD PTR [ebx+0x6782e653],eax
1100ea8f:	(bad)  
1100ea90:	lahf   
1100ea91:	and    al,BYTE PTR [eax]
1100ea93:	ret    
1100ea94:	popf   
1100ea95:	adc    DWORD PTR [edi],esi
1100ea97:	inc    eax
1100ea98:	ja     0x1100eae2
1100ea9a:	(bad)  
1100ea9c:	push   esp
1100ea9d:	and    edi,DWORD PTR [esi+0x22]
1100eaa0:	jmp    0xb03a:0xd9f6a93b
1100eaa7:	mov    ds:0x69976cbf,eax
1100eaac:	add    al,0x44
1100eaae:	inc    BYTE PTR [ecx+0x7c82a75a]
1100eab4:	sbb    BYTE PTR [esp+edx*4],dh
1100eab7:	retf   0x93ae
1100eaba:	jnp    0x1100eab0
1100eabc:	call   FWORD PTR [esi-0x7f]
1100eabf:	pextrw esp,mm6,0xeb
1100eac3:	add    ah,BYTE PTR [eax]
1100eac5:	icebp  
1100eac6:	adc    ecx,DWORD PTR [edi-0x3a]
1100eac9:	push   ebx
1100eaca:	jp     0x1100eaf5
1100eacc:	aaa    
1100eacd:	and    al,0x81
1100eacf:	pop    ebx
1100ead0:	cmp    al,0x23
1100ead2:	repz adc eax,esi
1100ead5:	mov    ?,edi
1100ead7:	out    0x78,al
1100ead9:	sbb    BYTE PTR [edi+0x3d3b2ac0],dh
1100eadf:	daa    
1100eae0:	in     eax,0x49
1100eae2:	pusha  
1100eae3:	inc    eax
1100eae4:	add    BYTE PTR [ebp-0x25],ah
1100eae7:	arpl   WORD PTR [ecx],bx
1100eae9:	xor    bh,BYTE PTR [edx]
1100eaeb:	mov    eax,ds:0x6314c
1100eaf0:	nop
1100eaf1:	imul   edx,DWORD PTR [ecx+eiz*8],0xfffffffb
1100eaf5:	cmp    DWORD PTR [ebx-0x51],0x7eded382
1100eafc:	and    BYTE PTR [edi-0x5dfbab95],ch
1100eb02:	jle    0x1100eb0a
1100eb04:	shr    BYTE PTR [edx-0xcdb006],1
1100eb0a:	test   BYTE PTR [esi+0x98858f],bh
1100eb10:	cli    
1100eb11:	pushf  
1100eb12:	cmp    eax,0xfe5a42c1
1100eb17:	or     BYTE PTR [esi+ebx*8],al
1100eb1a:	add    DWORD PTR [ecx+0x60648813],ecx
1100eb20:	clc    
1100eb21:	and    DWORD PTR [eax],ebx
1100eb23:	inc    ecx
1100eb24:	add    DWORD PTR [eax],eax
1100eb26:	dec    esi
1100eb27:	test   BYTE PTR [esp+eiz*8],dl
1100eb2a:	arpl   bx,bp
1100eb2c:	div    BYTE PTR [edi]
1100eb2e:	fcmovb st,st(1)
1100eb30:	pop    es
1100eb31:	pop    ds
1100eb32:	or     al,0x17
1100eb34:	pop    ebp
1100eb35:	je     0x1100eac8
1100eb37:	ret    
1100eb38:	dec    edx
1100eb39:	ds jge 0x1100eaea
1100eb3c:	ds mov ebx,0xe6adcd0e
1100eb42:	sub    ebx,0x74
1100eb45:	add    ecx,DWORD PTR [esi]
1100eb47:	mov    ah,0xbb
1100eb49:	ficom  DWORD PTR [eax-0x2fac0bb]
1100eb4f:	sti    
1100eb50:	fwait
1100eb51:	dec    edi
1100eb52:	fwait
1100eb53:	test   DWORD PTR [ebx-0x12],edi
1100eb56:	fwait
1100eb57:	lea    esp,[ebx-0x1a75f845]
1100eb5d:	ja     0x1100eb29
1100eb5f:	add    al,0x18
1100eb61:	test   eax,0x552a7e19
1100eb66:	jmp    0x1100ebb7
1100eb68:	push   esp
1100eb69:	jl     0x1100eaf2
1100eb6b:	pop    esi
1100eb6c:	add    dl,BYTE PTR [edx]
1100eb6e:	pop    ecx
1100eb6f:	pop    es
1100eb70:	xor    al,0xda
1100eb72:	sar    DWORD PTR ds:0x141c6fa4,cl
1100eb78:	xchg   esp,eax
1100eb79:	pop    ebp
1100eb7a:	mov    esp,ds
1100eb7c:	das    
1100eb7d:	stc    
1100eb7e:	call   0xb241:0x2e56b199
1100eb85:	sti    
1100eb86:	imul   edi,DWORD PTR [edi-0x550f5476],0x2407d3a
1100eb90:	scas   al,BYTE PTR es:[edi]
1100eb91:	mov    ah,0x8a
1100eb93:	cli    
1100eb94:	cli    
1100eb95:	sub    esi,esp
1100eb97:	jmp    0x1100eb2c
1100eb99:	stos   DWORD PTR es:[edi],eax
1100eb9a:	into   
1100eb9b:	xchg   edx,eax
1100eb9c:	mov    bh,BYTE PTR [edx-0x4e4bb850]
1100eba2:	(bad)  
1100eba3:	mov    ds:0xc00ccbe2,al
1100eba8:	push   0x80f6936f
1100ebad:	ror    DWORD PTR [ecx+0x20f54471],1
1100ebb3:	inc    ecx
1100ebb4:	inc    ecx
1100ebb5:	sbb    bh,BYTE PTR [esp+esi*8+0x5a84ad68]
1100ebbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100ebbd:	xor    dl,BYTE PTR [ebx+0x76]
1100ebc0:	and    BYTE PTR [ecx+0x7ffd7517],bh
1100ebc6:	fisttp DWORD PTR [ecx]
1100ebc8:	(bad)  
1100ebc9:	jae    0x1100eb5d
1100ebcb:	adc    BYTE PTR [edx+edx*2],dl
1100ebce:	jle    0x1100ebb7
1100ebd0:	cld    
1100ebd1:	pop    esp
1100ebd2:	dec    edx
1100ebd3:	std    
1100ebd4:	inc    ebp
1100ebd5:	jne    0x1100eb58
1100ebd7:	or     BYTE PTR [edi+0x400e62f6],0x6b
1100ebde:	add    BYTE PTR [eax],bl
1100ebe0:	jmp    0x6acb:0xb1efbe1b
1100ebe7:	cmp    bh,dh
1100ebe9:	cmp    eax,0x2d680039
1100ebee:	push   edx
1100ebef:	(bad)  
1100ebf1:	xchg   DWORD PTR ss:[ecx+eiz*1-0x47],esp
1100ebf6:	add    DWORD PTR [ebp-0x47],edi
1100ebf9:	add    BYTE PTR [ebp-0x25],ch
1100ebfc:	jmp    0xb96e:0x5bd907a6
1100ec03:	lds    edi,FWORD PTR [edi-0x7fd0fa20]
1100ec09:	stos   DWORD PTR es:[edi],eax
1100ec0a:	scas   eax,DWORD PTR es:[edi]
1100ec0b:	mov    esi,0xab0874ba
1100ec10:	lds    eax,FWORD PTR [edi]
1100ec12:	(bad)  
1100ec13:	lock adc al,0x48
1100ec16:	cs ret 0x8
1100ec1a:	popa   
1100ec1b:	or     BYTE PTR [edi],cl
1100ec1d:	add    BYTE PTR [eax],dl
1100ec1f:	inc    edx
1100ec20:	jl     0x1100ec25
1100ec22:	add    BYTE PTR [ecx+eax*4+0x499560e6],ch
1100ec29:	pop    esi
1100ec2a:	cmp    eax,0xce33bbfa
1100ec2f:	cmp    BYTE PTR [ebx],al
1100ec31:	push   ds
1100ec32:	cli    
1100ec33:	rol    BYTE PTR [edi-0x3c96e89a],1
1100ec39:	jnp    0x1100ec46
1100ec3b:	pop    ss
1100ec3c:	popf   
1100ec3d:	or     esi,esi
1100ec3f:	pusha  
1100ec40:	sti    
1100ec41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100ec42:	inc    ebx
1100ec43:	clc    
1100ec44:	sti    
1100ec45:	out    0x5,al
1100ec47:	push   0xc90670d8
1100ec4c:	fcomip st,st(2)
1100ec4e:	loope  0x1100eca9
1100ec50:	mov    eax,0xf4599efb
1100ec55:	shl    DWORD PTR [edi],1
1100ec57:	add    al,dl
1100ec59:	or     DWORD PTR ds:0x14bbfaac,edi
1100ec5f:	or     eax,ebp
1100ec61:	call   0x5308209d
1100ec66:	dec    ebx
1100ec67:	rol    DWORD PTR [ebx-0x2e],0x49
1100ec6b:	and    al,0x88
1100ec6d:	sub    al,0x3d
1100ec6f:	ds pop es
1100ec71:	push   es
1100ec72:	int3   
1100ec73:	int3   
1100ec74:	sti    
1100ec75:	or     edi,eax
1100ec77:	jecxz  0x1100ecb9
1100ec79:	push   ds
1100ec7a:	jns    0x1100ec71
1100ec7c:	nop
1100ec7d:	cld    
1100ec7e:	clc    
1100ec7f:	cmp    dh,BYTE PTR [ebx+0x1e686c4e]
1100ec85:	call   0x4c1133e
1100ec8a:	out    dx,eax
1100ec8b:	sub    DWORD PTR [ebp-0xe201d61],esi
1100ec91:	push   0x69
1100ec93:	dec    esi
1100ec94:	add    BYTE PTR [ecx],bh
1100ec96:	xchg   esi,eax
1100ec97:	fdiv   st,st(4)
1100ec99:	mov    eax,ds:0x718218c5
1100ec9e:	ds gs mov bh,0xd8
1100eca2:	cld    
1100eca3:	xor    al,0xca
1100eca5:	stos   BYTE PTR es:[edi],al
1100eca6:	cwde   
1100eca7:	add    BYTE PTR [edi+0x34],ch
1100ecaa:	add    edx,edx
1100ecac:	push   ds
1100ecad:	or     BYTE PTR [eax+edi*2+0x75304ea2],bl
1100ecb4:	add    al,0xf3
1100ecb6:	xchg   ecx,eax
1100ecb7:	mov    ecx,0xcbc80042
1100ecbc:	mov    BYTE PTR [ebx+0x7a],bh
1100ecbf:	inc    edx
1100ecc0:	imul   edi,DWORD PTR ds:0xa8b44701,0xe0f68bc
1100ecca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100eccb:	nop
1100eccc:	test   al,0x27
1100ecce:	aaa    
1100eccf:	sub    edx,esi
1100ecd1:	xor    BYTE PTR [ecx+ecx*4],al
1100ecd4:	lds    esp,FWORD PTR [eax-0x38bbbb6]
1100ecda:	fnsave [edi+0x5e]
1100ecdd:	add    eax,0xaff9ffe7
1100ece2:	dec    eax
1100ece3:	inc    edi
1100ece4:	xlat   BYTE PTR ds:[ebx]
1100ece5:	and    al,0x20
1100ece7:	test   DWORD PTR [ebp-0xc022709],ebx
1100eced:	mov    cl,0xe3
1100ecef:	pop    ss
1100ecf0:	push   ebx
1100ecf1:	add    ecx,DWORD PTR [eax]
1100ecf3:	sub    eax,0x1d470168
1100ecf8:	jne    0x1100ec8e
1100ecfa:	psubw  mm0,QWORD PTR [ebx]
1100ecfd:	(bad)  
1100ecfe:	into   
1100ecff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100ed00:	cmp    edx,DWORD PTR [edx+ebp*2+0x41]
1100ed04:	or     edi,DWORD PTR [eax]
1100ed06:	add    eax,0x6c285030
1100ed0b:	mov    al,0x1f
1100ed0d:	or     cl,bh
1100ed0f:	test   edx,0x419397a
1100ed15:	add    al,0x5a
1100ed17:	out    dx,eax
1100ed18:	in     al,dx
1100ed19:	lock ret 
1100ed1b:	ja     0x94f16b30
1100ed21:	out    dx,al
1100ed22:	popa   
1100ed23:	(bad)  
1100ed25:	cwde   
1100ed26:	ds inc ecx
1100ed28:	fistp  WORD PTR [ebp-0x6b]
1100ed2b:	mov    ah,0xdf
1100ed2d:	out    dx,al
1100ed2e:	jge    0x1100ecdc
1100ed30:	lock iret 
1100ed32:	xchg   DWORD PTR [ecx-0x62182713],eax
1100ed38:	pop    ds
1100ed39:	dec    ebx
1100ed3a:	or     BYTE PTR es:[esi-0x1e],0x61
1100ed3f:	and    DWORD PTR [edi+0x1ca68d57],ebp
1100ed45:	add    BYTE PTR [edx],0xf9
1100ed48:	repnz and DWORD PTR [ebx+0x1],esi
1100ed4c:	cmp    cl,BYTE PTR [esi+0x2]
1100ed4f:	jb     0x1100ecf3
1100ed51:	add    DWORD PTR [eax],ebp
1100ed53:	add    al,dl
1100ed55:	imul   esp,DWORD PTR ds:0xc7e27c05,0xff27972c
1100ed5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100ed60:	scas   al,BYTE PTR es:[edi]
1100ed61:	cmp    al,0x2a
1100ed63:	adc    eax,DWORD PTR [edx+0x776306ac]
1100ed69:	idiv   DWORD PTR [edx-0x3]
1100ed6c:	mov    BYTE PTR [ebp-0x7b],bl
1100ed6f:	add    BYTE PTR [edx+0x6f],dl
1100ed72:	pop    DWORD PTR ds:0xb572c39f
1100ed78:	cmp    eax,0xaa06e2ad
1100ed7d:	sub    al,BYTE PTR [ebx]
1100ed7f:	pop    es
1100ed80:	add    dl,BYTE PTR [esi+eiz*1]
1100ed83:	neg    DWORD PTR [eax]
1100ed85:	or     al,0x74
1100ed87:	pop    esp
1100ed88:	add    BYTE PTR [eax],ch
1100ed8a:	rol    DWORD PTR [ebp-0x2c],cl
1100ed8d:	ins    BYTE PTR es:[edi],dx
1100ed8e:	mov    dh,0xef
1100ed90:	dec    ecx
1100ed91:	clc    
1100ed92:	and    DWORD PTR ds:0xe1a711c3,ebx
1100ed98:	jae    0x1100ed27
1100ed9a:	rcl    BYTE PTR [edx],0x7c
1100ed9d:	fcom   QWORD PTR [ecx+0x2a]
1100eda0:	mov    DWORD PTR [esi+0x6125ebe4],edx
1100eda6:	inc    esi
1100eda7:	aad    0xc8
1100eda9:	sub    esi,eax
1100edab:	mov    bh,al
1100edad:	ret    0xd06b
1100edb0:	add    DWORD PTR [eax+0x78792424],0xffffffd0
1100edb7:	ds stos DWORD PTR es:[edi],eax
1100edb9:	loopne 0x1100ed7e
1100edbb:	jg     0x1100edaf
1100edbd:	sub    ebp,ebp
1100edbf:	popf   
1100edc0:	je     0x1100ed63
1100edc2:	outs   dx,BYTE PTR ds:[esi]
1100edc3:	mov    esi,0xa426e32d
1100edc8:	mov    al,0xfa
1100edca:	clc    
1100edcb:	std    
1100edcc:	cli    
1100edcd:	jmp    0x1100ed7e
1100edcf:	ja     0x1100eda0
1100edd1:	jge    0x1100edc1
1100edd3:	jae    0x1100edd8
1100edd5:	or     BYTE PTR [ebp+ebx*4+0x14e60f48],dh
1100eddc:	sub    bl,BYTE PTR [esp+edi*1]
1100eddf:	add    ah,BYTE PTR [ecx+0x54]
1100ede2:	fcomp  DWORD PTR [esi+edi*2]
1100ede5:	or     al,0x3a
1100ede7:	ror    BYTE PTR [edx],1
1100ede9:	mov    ch,0x84
1100edeb:	cdq    
1100edec:	jnp    0x1100eded
1100edee:	adc    BYTE PTR [edx],dl
1100edf0:	or     BYTE PTR [ebp+ebx*1-0x6bd361d0],dh
1100edf7:	idiv   BYTE PTR [edx]
1100edf9:	in     eax,dx
1100edfa:	mov    ah,0xd3
1100edfc:	and    BYTE PTR [esi],0x50
1100edff:	and    bl,BYTE PTR [esi]
1100ee01:	pop    edx
1100ee02:	sahf   
1100ee03:	test   eax,0x644c04a4
1100ee08:	add    cl,BYTE PTR [edi*2-0x128bdac6]
1100ee0f:	js     0x1100ee22
1100ee11:	jg     0x1100ee8c
1100ee13:	(bad)  
1100ee14:	mov    ax,0xb6f5
1100ee18:	jno    0x1100ee00
1100ee1a:	mov    edx,0x46080a73
1100ee1f:	sbb    BYTE PTR [edi],al
1100ee21:	adc    BYTE PTR [ecx],bh
1100ee23:	add    ch,bh
1100ee25:	mov    bl,0xd2
1100ee27:	fistp  WORD PTR [ecx]
1100ee29:	add    BYTE PTR [esp+ebx*1+0x1ed63677],cl
1100ee30:	adc    DWORD PTR [eax],eax
1100ee32:	sbb    al,0x92
1100ee34:	sbb    cl,0xc3
1100ee37:	sar    ah,1
1100ee39:	add    BYTE PTR [eax-0x1bdac520],dl
1100ee3f:	sahf   
1100ee40:	inc    edi
1100ee41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100ee42:	mov    esp,0x114fa7e3
1100ee47:	jl     0x1100ee16
1100ee49:	cli    
1100ee4a:	inc    ebx
1100ee4b:	and    al,cl
1100ee4d:	sub    BYTE PTR [ebp+0x18],ah
1100ee50:	aad    0x7e
1100ee52:	mov    ah,cl
1100ee54:	(bad)  
1100ee55:	sti    
1100ee56:	xchg   ecx,eax
1100ee57:	or     eax,0x5741295e
1100ee5c:	ret    0x444f
1100ee5f:	cdq    
1100ee60:	push   cs
1100ee61:	out    dx,eax
1100ee62:	gs pop esi
1100ee64:	add    DWORD PTR [esp+eax*2+0x22],edx
1100ee68:	xchg   ebx,eax
1100ee69:	adc    BYTE PTR [ebp-0x451b0cde],0x2b
1100ee70:	inc    esp
1100ee71:	sbb    dl,dl
1100ee73:	enter  0x4b59,0x50
1100ee77:	fs push es
1100ee79:	popf   
1100ee7a:	inc    ebx
1100ee7b:	mov    BYTE PTR [eax+0x35],al
1100ee7e:	ret    0xf5ab
1100ee81:	jp     0x1100ee07
1100ee83:	addr16 xchg edi,eax
1100ee85:	pusha  
1100ee86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100ee87:	add    eax,0x4dc2640
1100ee8c:	les    esp,FWORD PTR [ecx+eax*1+0x72434d68]
1100ee93:	adc    DWORD PTR [edx+0x53],ebp
1100ee96:	mul    BYTE PTR [ecx-0x21e01e95]
1100ee9c:	js     0x1100ee9e
1100ee9e:	aas    
1100ee9f:	out    dx,eax
1100eea0:	pusha  
1100eea1:	out    dx,al
1100eea2:	xchg   ecx,eax
1100eea3:	dec    ebx
1100eea4:	mov    cl,0x51
1100eea6:	adc    edx,DWORD PTR [eax-0x9]
1100eea9:	lds    eax,FWORD PTR ds:0x2624f50a
1100eeaf:	add    BYTE PTR [eax],ch
1100eeb1:	fnstenv [ecx-0x240f6a15]
1100eeb7:	in     eax,dx
1100eeb8:	mov    bl,0xde
1100eeba:	(bad)  
1100eebb:	jmp    0x1100eeff
1100eebd:	(bad)  
1100eebf:	inc    DWORD PTR [ebx+0x34f3f234]
1100eec5:	(bad)
1100eeca:	dec    esp
1100eecb:	fnstsw WORD PTR [ebp+0x5b9f3f0a]
1100eed1:	das    
1100eed2:	mov    edi,0x68104d03
1100eed7:	fdiv   st,st(6)
1100eed9:	popa   
1100eeda:	inc    edx
1100eedb:	(bad)  
1100eedc:	ror    DWORD PTR [edi+0x3f],cl
1100eedf:	fnstsw WORD PTR ds:0xe90f21e4
1100eee5:	mov    eax,0x808386df
1100eeea:	outs   dx,DWORD PTR ds:[esi]
1100eeeb:	stos   BYTE PTR es:[edi],al
1100eeec:	in     eax,dx
1100eeed:	popa   
1100eeee:	int3   
1100eeef:	sbb    eax,DWORD PTR [eax]
1100eef1:	ficomp DWORD PTR [esi+0x73093d16]
1100eef7:	mov    ?,WORD PTR [edi-0x6]
1100eefa:	les    ebp,FWORD PTR [esp+ebx*2]
1100eefd:	sti    
1100eefe:	in     eax,dx
1100eeff:	push   esp
1100ef00:	or     esp,DWORD PTR [eax]
1100ef02:	mov    ah,0x11
1100ef04:	(bad)  
1100ef05:	idiv   DWORD PTR [ebx+0x6]
1100ef08:	add    BYTE PTR [edi+0x78018053],al
1100ef0e:	dec    esp
1100ef0f:	repz xchg ebp,eax
1100ef11:	sbb    BYTE PTR [edi],0x87
1100ef14:	mov    WORD PTR [edi],?
1100ef16:	xchg   ebp,eax
1100ef17:	stc    
1100ef18:	add    ah,BYTE PTR [edi]
1100ef1a:	push   ebx
1100ef1b:	adc    DWORD PTR [ecx],0x38e800
1100ef21:	mov    es,WORD PTR [ebp+eiz*4+0x7]
1100ef25:	jmp    0x75f3:0x1a2d4a64
1100ef2c:	loope  0x1100ef3b
1100ef2e:	cmp    eax,0x4ab5387d
1100ef33:	cdq    
1100ef34:	add    BYTE PTR [eax],al
1100ef36:	and    BYTE PTR [edx+0x49],al
1100ef39:	outs   dx,DWORD PTR ds:[esi]
1100ef3a:	pop    edi
1100ef3b:	push   ebp
1100ef3c:	sti    
1100ef3d:	jne    0x1100ef70
1100ef3f:	pop    ss
1100ef40:	shl    BYTE PTR [ebx+0x5f],0xe6
1100ef44:	jp     0x1100eec8
1100ef46:	retf   0xc715
1100ef49:	mov    cl,0x0
1100ef4b:	and    al,0xbc
1100ef4d:	cdq    
1100ef4e:	pop    edi
1100ef4f:	aas    
1100ef50:	push   edi
1100ef51:	(bad)  
1100ef52:	sub    ebp,DWORD PTR [edx]
1100ef54:	les    eax,FWORD PTR [ecx-0x2062fd66]
1100ef5a:	xchg   ebx,eax
1100ef5b:	mov    ss:0x82d07f55,al
1100ef61:	lea    edi,[edi-0x790fbc1d]
1100ef67:	or     al,0xac
1100ef69:	je     0x1100ef99
1100ef6b:	adc    BYTE PTR [edi-0x3e],0x4f
1100ef6f:	dec    edi
1100ef70:	inc    ebp
1100ef71:	lds    esp,FWORD PTR [edx]
1100ef73:	and    al,0x63
1100ef75:	lods   al,BYTE PTR ds:[esi]
1100ef76:	retf   0xfa7
1100ef79:	scas   eax,DWORD PTR es:[edi]
1100ef7a:	mov    esp,0xa0d6bac8
1100ef7f:	push   0x64000517
1100ef84:	pop    esi
1100ef85:	cmp    eax,0xe09dd0e1
1100ef8a:	mov    ebp,0xf4afb47f
1100ef8f:	(bad)  
1100ef91:	mov    ds:0x70f13b36,al
1100ef96:	pop    ebx
1100ef97:	jge    0x1100ef1b
1100ef99:	push   eax
1100ef9a:	cmc    
1100ef9b:	and    DWORD PTR [ecx-0x4e9f0515],0x7e140ca3
1100efa5:	push   0x41
1100efa7:	fadd   DWORD PTR [ebx-0x1f]
1100efaa:	nop
1100efab:	inc    eax
1100efad:	out    dx,eax
1100efae:	push   esp
1100efaf:	cmp    DWORD PTR [eax],ebp
1100efb1:	push   0x0
1100efb3:	inc    ecx
1100efb4:	xchg   DWORD PTR [edi+0x9],ebx
1100efb7:	add    al,BYTE PTR [eax]
1100efb9:	mov    ah,0xfc
1100efbb:	jg     0x1100ef4d
1100efbd:	mov    cl,al
1100efbf:	push   ebp
1100efc0:	out    0x60,al
1100efc2:	or     eax,0xf9d422bb
1100efc7:	sti    
1100efc8:	lock xchg DWORD PTR [edi],edi
1100efcb:	fsubr  st(0),st
1100efcd:	add    al,0xc0
1100efcf:	or     BYTE PTR [edx],bh
1100efd1:	jne    0x1100efcb
1100efd3:	ror    ch,cl
1100efd5:	mov    dh,0x35
1100efd7:	cmp    eax,0xc826b365
1100efdc:	cmp    bh,ch
1100efde:	cld    
1100efdf:	retf   0x684d
1100efe2:	std    
1100efe3:	and    dh,dh
1100efe5:	pop    esp
1100efe6:	pop    ds
1100efe7:	mov    edx,0xdf970c74
1100efec:	cmp    BYTE PTR [edi-0x1b33458a],al
1100eff2:	dec    ebx
1100eff3:	mov    eax,ds:0xd81431bd
1100eff8:	shl    DWORD PTR [ebp+0x57],1
1100effb:	lods   al,BYTE PTR ds:[esi]
1100effc:	cli    
1100effd:	xor    edx,DWORD PTR [eax]
1100efff:	mov    al,ds:0x1398774
1100f004:	adc    edi,DWORD PTR [ecx]
1100f006:	in     eax,0x95
1100f008:	sti    
1100f009:	dec    edi
1100f00a:	xor    al,0x2
1100f00c:	bound  eax,QWORD PTR [ebx]
1100f00e:	sbb    ch,bh
1100f010:	or     BYTE PTR [edi+0x7b63ca95],ch
1100f016:	jb     0x1100f031
1100f018:	nop
1100f019:	ror    BYTE PTR [ebp-0x52b5a6ba],1
1100f01f:	not    BYTE PTR [esi]
1100f021:	push   0x2261bf46
1100f026:	nop
1100f027:	push   es
1100f028:	inc    eax
1100f029:	mov    eax,ds:0x5061a8c4
1100f02e:	ds aas 
1100f030:	in     eax,dx
1100f031:	scas   eax,DWORD PTR es:[edi]
1100f032:	ret    
1100f033:	jnp    0x1100f018
1100f035:	(bad)  
1100f036:	jno    0x1100efe6
1100f038:	or     DWORD PTR [edx],0xb69e1532
1100f03e:	ud2    
1100f040:	(bad)
1100f043:	stos   BYTE PTR es:[edi],al
1100f044:	dec    esi
1100f045:	fiadd  WORD PTR [edx+0x42437818]
1100f04b:	scas   al,BYTE PTR es:[edi]
1100f04c:	dec    edx
1100f04d:	jp     0x1100f038
1100f04f:	in     al,dx
1100f050:	cmp    al,0x1e
1100f052:	nop
1100f053:	mov    ecx,0x3563979c
1100f058:	outs   dx,BYTE PTR ds:[esi]
1100f05a:	out    0x94,eax
1100f05c:	shr    BYTE PTR [ebx-0x1831e19e],1
1100f062:	add    eax,0x44d42a43
1100f067:	enter  0x98dd,0xae
1100f06b:	cmp    esp,edi
1100f06d:	add    eax,edx
1100f06f:	daa    
1100f070:	pop    es
1100f071:	push   ebx
1100f072:	imul   ebp,DWORD PTR [ebp+0x33e78149],0xde19d88f
1100f07c:	cli    
1100f07d:	repnz mov ebp,0x90d97eb2
1100f083:	mov    ah,0x5c
1100f085:	adc    BYTE PTR [ebx],bl
1100f087:	std    
1100f088:	mov    dh,0x14
1100f08a:	mov    bl,0xe2
1100f08c:	cmp    dh,BYTE PTR [esi+0x5fefaf99]
1100f092:	imul   ecx,esi,0xffffffb5
1100f095:	lock inc ebx
1100f097:	inc    ecx
1100f098:	clc    
1100f099:	mov    bl,0x4b
1100f09b:	push   ebx
1100f09c:	fild   WORD PTR [ebx-0xa020031]
1100f0a2:	repnz dec ecx
1100f0a4:	dec    eax
1100f0a5:	fld    DWORD PTR [ecx+0x162c3e54]
1100f0ab:	push   cs
1100f0ac:	or     edi,edx
1100f0ae:	cli    
1100f0af:	or     BYTE PTR [eax],dl
1100f0b1:	loope  0x1100f112
1100f0b3:	lea    ecx,[ebx-0x8]
1100f0b6:	push   ds
1100f0b7:	inc    esi
1100f0b8:	jmp    DWORD PTR [edi+0x24088a43]
1100f0be:	iret   
1100f0bf:	cmp    BYTE PTR ds:0xcab06b09,0x1c
1100f0c6:	sub    ch,bh
1100f0c8:	fidiv  WORD PTR [esi+0x6c40106e]
1100f0ce:	leave  
1100f0cf:	push   ss
1100f0d0:	out    0x2,al
1100f0d2:	cld    
1100f0d3:	fdiv   QWORD PTR [edi]
1100f0d5:	xchg   bp,ax
1100f0d7:	or     DWORD PTR [eax],eax
1100f0d9:	sub    ch,BYTE PTR [eax-0x65868159]
1100f0df:	add    edx,DWORD PTR [eax-0x25]
1100f0e2:	xor    BYTE PTR [eax],al
1100f0e4:	mov    WORD PTR [esp+eiz*8-0x61de8ac9],fs
1100f0eb:	push   es
1100f0ec:	fsub   QWORD PTR [edx+0x16868390]
1100f0f2:	mov    ds:0x42d396df,al
1100f0f7:	int3   
1100f0f8:	fisttp DWORD PTR [ebp+0x202c4d94]
1100f0fe:	shl    BYTE PTR ds:0x85d,0xd8
1100f105:	into   
1100f106:	out    0xdf,al
1100f108:	jno    0x1100f185
1100f10a:	sbb    esi,DWORD PTR [ecx-0x69]
1100f10d:	pop    ss
1100f10e:	jmp    0x1100f0d0
1100f110:	jne    0x1100f0ca
1100f112:	mov    edi,0xca8bc9f6
1100f117:	in     al,dx
1100f118:	cmp    edi,edi
1100f11a:	lahf   
1100f11b:	into   
1100f11c:	sub    esp,eax
1100f11e:	and    al,0x8e
1100f120:	test   BYTE PTR [eax+0x56],0x82
1100f124:	pop    ss
1100f125:	xlat   BYTE PTR ds:[ebx]
1100f126:	pop    ebx
1100f127:	out    0x4a,al
1100f129:	les    ecx,FWORD PTR [ebx]
1100f12b:	rcl    DWORD PTR [ecx],cl
1100f12d:	jle    0x1100f188
1100f12f:	and    cl,BYTE PTR [edi-0x7346124e]
1100f135:	pop    ss
1100f136:	fwait
1100f137:	push   ds
1100f138:	js     0x1100f189
1100f13a:	ficom  WORD PTR [eax]
1100f13c:	test   BYTE PTR [edx+ecx*8],dh
1100f13f:	mov    bl,0x99
1100f141:	inc    edx
1100f142:	les    esp,FWORD PTR [edi+0x6e]
1100f145:	dec    esi
1100f146:	shl    BYTE PTR [ebx-0x145c945d],1
1100f14c:	ds out 0xc8,al
1100f14f:	pop    ebp
1100f150:	loope  0x1100f147
1100f152:	daa    
1100f153:	dec    esi
1100f154:	adc    BYTE PTR [ecx],cl
1100f156:	fcom   st(3)
1100f158:	cdq    
1100f159:	mov    eax,ds:0x3036ff67
1100f15e:	jmp    0x87f67435
1100f163:	add    DWORD PTR [esi+ebp*4],eax
1100f166:	mov    ebx,0x23d73aee
1100f16b:	cld    
1100f16c:	mov    edx,0x3e51854b
1100f171:	mov    eax,0x52033efc
1100f176:	cmp    al,0x54
1100f178:	xchg   edi,eax
1100f179:	adc    DWORD PTR [edi-0x37d71000],ecx
1100f17f:	add    DWORD PTR [eax-0x73],esp
1100f182:	cli    
1100f183:	or     al,0xcb
1100f185:	xchg   ebx,eax
1100f186:	jmp    0xdef5:0xa6dc68e5
1100f18d:	ret    
1100f18e:	mov    edx,0xdc3f0fc3
1100f193:	jge    0x1100f185
1100f195:	sbb    DWORD PTR [edi],0xffffff8c
1100f198:	and    BYTE PTR [eax+0x50],dl
1100f19b:	in     eax,0x33
1100f19d:	shr    BYTE PTR [eax],0xec
1100f1a0:	aas    
1100f1a1:	fadd   QWORD PTR [eax+ebp*8]
1100f1a4:	push   edx
1100f1a5:	mov    cl,0x4a
1100f1a7:	pop    es
1100f1a8:	cs cmp al,0x4c
1100f1ab:	pop    edx
1100f1ac:	ja     0x1100f17f
1100f1ae:	adc    eax,0x8ae27c15
1100f1b3:	mov    ecx,0x15714c48
1100f1b8:	pop    ds
1100f1b9:	push   esi
1100f1ba:	repz popf 
1100f1bc:	test   dl,bh
1100f1be:	adc    al,BYTE PTR [eax]
1100f1c0:	mov    al,ds:0x7b6d907b
1100f1c5:	xor    al,BYTE PTR [ecx]
1100f1c7:	pushf  
1100f1c8:	pushf  
1100f1c9:	fsubr  DWORD PTR [ecx+0x5aa80063]
1100f1cf:	cmp    BYTE PTR [ebp+edi*8-0x1a],0x62
1100f1d4:	aad    0xa7
1100f1d6:	push   ds
1100f1d7:	lds    ebp,FWORD PTR [ecx+0x54]
1100f1da:	add    eax,0x75000fcb
1100f1df:	call   0xb3112d80
1100f1e4:	dec    ebx
1100f1e5:	push   ebp
1100f1e6:	sbb    DWORD PTR [edx],eax
1100f1e8:	pusha  
1100f1e9:	neg    DWORD PTR [ebp-0x15684e32]
1100f1ef:	cmp    eax,0xeee7d0c2
1100f1f4:	inc    ecx
1100f1f5:	sbb    eax,0x6e234003
1100f1fa:	ficom  DWORD PTR [eax-0x205df79a]
1100f200:	cmp    BYTE PTR [ecx+0x67fae747],dh
1100f206:	or     DWORD PTR [edx-0x76],0x48fda408
1100f20d:	aad    0x7
1100f20f:	xchg   ebx,eax
1100f210:	sti    
1100f211:	iret   
1100f212:	mul    DWORD PTR [eax+ecx*4+0x48782ccf]
1100f219:	push   ss
1100f21a:	jp     0x1100f234
1100f21c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100f21d:	and    DWORD PTR [edx],ecx
1100f21f:	aas    
1100f220:	add    ch,dl
1100f222:	pushf  
1100f223:	push   0x3b
1100f225:	xor    bh,BYTE PTR [ecx]
1100f227:	lock loope 0x1100f1e8
1100f22a:	hlt    
1100f22b:	cmp    DWORD PTR [ebx-0x3e],edi
1100f22e:	out    dx,eax
1100f22f:	push   ds
1100f230:	mov    bl,0xbb
1100f232:	mov    esp,0x4ba6270a
1100f237:	outs   dx,DWORD PTR ds:[esi]
1100f238:	push   ecx
1100f239:	rol    BYTE PTR [edx],1
1100f23b:	mov    BYTE PTR [edi],ch
1100f23d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100f23e:	sbb    esi,DWORD PTR [eax-0xdc7e9fc]
1100f244:	xchg   esp,ecx
1100f246:	shr    BYTE PTR [esi-0x7b5a2ead],0xd1
1100f24d:	ds test al,0xfc
1100f250:	xchg   edi,eax
1100f251:	inc    ecx
1100f252:	pop    esi
1100f253:	ds cmp al,0x9b
1100f256:	dec    eax
1100f257:	and    al,0x6c
1100f259:	clc    
1100f25a:	sbb    BYTE PTR [eax],dl
1100f25c:	mov    ch,0x9f
1100f25e:	xor    al,0x80
1100f260:	nop
1100f261:	and    BYTE PTR [esi+eax*1-0x40003cc1],dh
1100f268:	pop    edx
1100f269:	das    
1100f26a:	iret   
1100f26b:	cmp    BYTE PTR [edx+eax*8-0x71],0xe2
1100f270:	leave  
1100f271:	or     ebx,esi
1100f273:	add    ebx,edi
1100f275:	jl     0x1100f2b3
1100f277:	cmp    eax,0xd42c1560
1100f27c:	sti    
1100f27d:	mov    al,ds:0xff09b5b8
1100f282:	cmp    al,0x19
1100f284:	xlat   BYTE PTR ds:[ebx]
1100f285:	iret   
1100f286:	jle    0x1100f265
1100f288:	ret    
1100f289:	cdq    
1100f28a:	call   FWORD PTR [ebp+0x6b]
1100f28d:	dec    ecx
1100f28e:	jle    0x1100f2be
1100f290:	(bad)  
1100f291:	rcr    BYTE PTR [edx-0x60],1
1100f294:	rcr    DWORD PTR [ebx],0xbf
1100f297:	mov    edi,0x930f504
1100f29c:	mov    bh,dl
1100f29e:	(bad)  
1100f29f:	pop    esi
1100f2a0:	and    edi,esp
1100f2a2:	popf   
1100f2a3:	mov    ch,0x1
1100f2a5:	arpl   WORD PTR [eax+esi*1+0x1113f050],ax
1100f2ac:	aas    
1100f2ad:	mov    dh,0x16
1100f2af:	repnz sub cl,BYTE PTR fs:[ebx+0x27]
1100f2b4:	enter  0x7bd4,0x7a
1100f2b8:	fsubr  QWORD PTR fs:[ecx+0x540affe5]
1100f2bf:	mov    ebp,0x4c523c7d
1100f2c4:	add    esi,esp
1100f2c6:	mov    dl,0xdb
1100f2c8:	xchg   edx,eax
1100f2c9:	jmp    0x6895f4f5
1100f2ce:	and    esi,esi
1100f2d0:	pushf  
1100f2d1:	jmp    0x471a:0x93e2a2b
1100f2d8:	sbb    al,0x2a
1100f2da:	loope  0x1100f26e
1100f2dc:	mov    al,BYTE PTR [ecx-0x26]
1100f2df:	cmp    al,0x0
1100f2e1:	ficomp WORD PTR [edi+0x516581c1]
1100f2e7:	pop    es
1100f2e8:	add    ch,BYTE PTR [ecx]
1100f2ea:	xor    al,dh
1100f2ec:	out    0xbb,al
1100f2ee:	es push es
1100f2f0:	add    DWORD PTR [ecx-0x713d2ff5],edi
1100f2f6:	lahf   
1100f2f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100f2f8:	fidivr DWORD PTR [edi+0x0]
1100f2fb:	sub    dl,BYTE PTR [edi]
1100f2fd:	inc    eax
1100f2fe:	imul   edx,DWORD PTR [eax+0x4],0xf566b516
1100f305:	ficom  DWORD PTR [ebx]
1100f307:	test   BYTE PTR [esi-0x1882c1e9],0x66
1100f30e:	pop    es
1100f30f:	ins    DWORD PTR es:[edi],dx
1100f310:	adc    edx,ecx
1100f312:	stc    
1100f313:	int3   
1100f314:	add    edi,DWORD PTR [eax]
1100f316:	mov    eax,0xdb6f775f
1100f31b:	gs repz xchg edi,eax
1100f31e:	xor    al,0xea
1100f320:	and    ah,bh
1100f322:	xchg   edi,eax
1100f323:	inc    edx
1100f324:	call   0x73b1:0x1026985d
1100f32b:	or     esi,eax
1100f32d:	xor    ah,dl
1100f32f:	popa   
1100f330:	jecxz  0x1100f375
1100f332:	and    BYTE PTR [ebp+0x34fc24ee],cl
1100f338:	repnz scas eax,DWORD PTR es:[edi]
1100f33a:	push   ebp
1100f33b:	dec    ebx
1100f33c:	clc    
1100f33d:	jg     0x1100f39c
1100f33f:	mov    ebp,0x6bba113c
1100f344:	add    al,ah
1100f346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100f347:	push   eax
1100f348:	xor    BYTE PTR [edi],al
1100f34a:	call   0xe7275950
1100f34f:	jl     0x1100f334
1100f351:	mov    al,ds:0x7f252f1b
1100f356:	bound  ebx,QWORD PTR [ecx+0xc]
1100f359:	add    BYTE PTR ds:0xb83ec6c4,bh
1100f35f:	out    dx,al
1100f360:	(bad)  
1100f361:	pop    ds
1100f362:	mov    ecx,fs
1100f364:	das    
1100f365:	das    
1100f366:	test   al,0x4d
1100f368:	add    dh,dl
1100f36a:	lahf   
1100f36b:	sbb    eax,0xf7e9f9da
1100f370:	adc    al,0xa
1100f372:	dec    esp
1100f373:	mov    ch,0xfc
1100f375:	stos   DWORD PTR es:[edi],eax
1100f376:	inc    esi
1100f377:	in     al,0x1f
1100f379:	add    DWORD PTR [eax],0xa88c01c5
1100f37f:	das    
1100f380:	cmp    BYTE PTR [edi+0x63d118c7],cl
1100f386:	dec    ecx
1100f387:	xor    eax,0x6f0bce7
1100f38c:	je     0x1100f3bb
1100f38e:	dec    ecx
1100f38f:	aad    0xf5
1100f391:	test   BYTE PTR [esi+eiz*8+0x723e5],cl
1100f398:	jb     0x1100f367
1100f39a:	inc    esp
1100f39b:	out    dx,al
1100f39c:	test   esi,eax
1100f39e:	ror    DWORD PTR [ecx-0x3b1fd66f],cl
1100f3a4:	mov    dh,0x4e
1100f3a6:	adc    BYTE PTR [edx+ebp*8],0x1
1100f3aa:	mov    WORD PTR [ecx-0x514e1cab],es
1100f3b0:	fisttp DWORD PTR [edi]
1100f3b2:	cmp    ebx,ecx
1100f3b4:	dec    edi
1100f3b5:	inc    esp
1100f3b6:	and    esi,edx
1100f3b8:	es test al,0x70
1100f3bb:	sti    
1100f3bc:	dec    esp
1100f3bd:	or     esp,DWORD PTR [eax]
1100f3bf:	or     eax,0xf03f8581
1100f3c4:	add    dl,BYTE PTR [edx]
1100f3c6:	pop    ebx
1100f3c7:	pushf  
1100f3c8:	push   ebp
1100f3c9:	hlt    
1100f3ca:	jno    0x1100f396
1100f3cc:	int3   
1100f3cd:	mov    al,ds:0xc7970364
1100f3d2:	add    DWORD PTR [eax+0x68],esi
1100f3d5:	scas   al,BYTE PTR es:[edi]
1100f3d6:	ficomp DWORD PTR [esi]
1100f3d8:	js     0x1100f43c
1100f3da:	xchg   ecx,eax
1100f3db:	inc    esp
1100f3dc:	cmp    BYTE PTR [esi],al
1100f3de:	xor    ebp,DWORD PTR [ebx+0x24372b1a]
1100f3e4:	or     BYTE PTR [eax+0x32],al
1100f3e7:	sbb    BYTE PTR [eax],ch
1100f3e9:	lods   eax,DWORD PTR ds:[esi]
1100f3ea:	and    BYTE PTR [ebx],dh
1100f3ec:	pop    edi
1100f3ed:	pop    eax
1100f3ee:	xchg   ebx,eax
1100f3ef:	add    al,0x76
1100f3f1:	and    eax,0xbfe1443a
1100f3f6:	jg     0x1100f3db
1100f3f8:	xor    eax,0xd0ec47d8
1100f3fe:	push   eax
1100f3ff:	(bad)  
1100f401:	mov    ebx,0x20e49ce2
1100f406:	dec    ebp
1100f407:	push   cs
1100f408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100f409:	and    al,0xfc
1100f40b:	pop    ebp
1100f40c:	mov    dh,0xfe
1100f40e:	adc    bh,bl
1100f410:	mov    esi,0xe1427cde
1100f415:	(bad)  
1100f417:	jg     0x1100f3b1
1100f419:	dec    eax
1100f41a:	xor    al,0xa4
1100f41c:	or     eax,DWORD PTR [esi]
1100f41e:	popa   
1100f41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100f420:	pop    ecx
1100f421:	test   BYTE PTR [ecx+0x16],ch
1100f424:	mov    eax,ds:0x200b4c
1100f429:	pop    eax
1100f42a:	or     eax,0xd680039
1100f42f:	cmp    BYTE PTR [esi+0xf6dc1af],0x7
1100f436:	sub    DWORD PTR [ecx],ecx
1100f438:	(bad)  
1100f439:	(bad)  
1100f43a:	loop   0x1100f440
1100f43c:	and    BYTE PTR [edi+0x7fba7e9f],ah
1100f442:	enter  0x1e43,0xc2
1100f446:	out    dx,al
1100f447:	aas    
1100f448:	jge    0x1100f409
1100f44a:	and    eax,0x8114c1
1100f44f:	sbb    BYTE PTR [esi+ecx*1],cl
1100f452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100f453:	cwde   
1100f454:	ins    DWORD PTR es:[edi],dx
1100f455:	pop    esp
1100f456:	outs   dx,DWORD PTR ds:[esi]
1100f457:	leave  
1100f458:	cwde   
1100f459:	in     al,dx
1100f45a:	popa   
1100f45b:	jecxz  0x1100f413
1100f45d:	ja     0x1100f43e
1100f45f:	jmp    0x1100f442
1100f461:	dec    ebp
1100f462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100f463:	int    0xc2
1100f465:	js     0x1100f4d5
1100f467:	mov    WORD PTR [edx],ds
1100f469:	inc    eax
1100f46a:	jp     0x1100f400
1100f46c:	mov    ds:0x11cfc791,eax
1100f471:	dec    edi
1100f472:	repz in eax,dx
1100f474:	jno    0x1100f45c
1100f476:	pop    ds
1100f477:	(bad)  
1100f478:	or     al,0xf8
1100f47a:	hlt    
1100f47b:	push   cs
1100f47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100f47d:	cli    
1100f47e:	mov    ds:0x18e9d272,al
1100f483:	outs   dx,BYTE PTR ds:[esi]
1100f484:	xchg   esp,eax
1100f485:	test   BYTE PTR [ecx-0x4ad97ecb],dl
1100f48b:	int3   
1100f48c:	pop    esi
1100f48d:	add    ebx,DWORD PTR [edx-0x71607085]
1100f493:	xchg   edi,eax
1100f494:	imul   DWORD PTR [ebx-0x269d8313]
1100f49a:	and    edi,ebx
1100f49c:	test   BYTE PTR [edi+0x72],al
1100f49f:	sar    bl,cl
1100f4a1:	xor    eax,0x89655027
1100f4a6:	cmp    al,0x1e
1100f4a8:	push   0xad2a0ed2
1100f4ad:	(bad)
1100f4b0:	pop    ds
1100f4b1:	inc    edi
1100f4b2:	ins    BYTE PTR es:[edi],dx
1100f4b3:	(bad)  
1100f4b4:	je     0x1100f4d2
1100f4b6:	in     eax,0xfe
1100f4b8:	mov    ds:0xa17e206b,eax
1100f4bd:	xchg   edx,eax
1100f4be:	test   al,0x3d
1100f4c0:	sbb    edx,DWORD PTR [eax]
1100f4c2:	and    al,0x61
1100f4c4:	leave  
1100f4c5:	(bad)  
1100f4c6:	(bad)  [edi+edi*4+0x29]
1100f4ca:	cmp    ebx,DWORD PTR [ebp+0x52809702]
1100f4d0:	jl     0x1100f523
1100f4d2:	sub    DWORD PTR [edx-0x32e879fa],ecx
1100f4d8:	add    eax,0xc897f5d0
1100f4dd:	or     DWORD PTR ds:[eax+0x12],esp
1100f4e1:	(bad)  
1100f4e2:	rcr    DWORD PTR [ebx],0x90
1100f4e5:	adc    ch,BYTE PTR [edi-0x78]
1100f4e8:	addr16 push eax
1100f4ea:	test   BYTE PTR [eax],cl
1100f4ec:	lods   al,BYTE PTR ds:[esi]
1100f4ed:	(bad)  
1100f4ee:	stc    
1100f4ef:	xlat   BYTE PTR ds:[ebx]
1100f4f0:	ja     0xa5a0e353
1100f4f6:	fisubr DWORD PTR [edx+esi*2+0x50]
1100f4fa:	scas   eax,DWORD PTR es:[edi]
1100f4fb:	xchg   edx,eax
1100f4fc:	jne    0x1100f4f6
1100f4fe:	jne    0x1100f534
1100f500:	dec    ebx
1100f501:	int    0x65
1100f503:	std    
1100f504:	imul   eax,eax,0x8717dd3a
1100f50a:	add    ecx,DWORD PTR es:0xb74fc20
1100f511:	dec    eax
1100f512:	jmp    ebp
1100f514:	jp     0x1100f4cf
1100f516:	push   ss
1100f517:	repnz xchg ecx,eax
1100f519:	(bad)  
1100f51b:	and    eax,0x63c00198
1100f520:	inc    ecx
1100f521:	xor    al,0x0
1100f523:	cmp    eax,0x80b497fa
1100f528:	mov    al,0x3c
1100f52a:	adc    dl,BYTE PTR [edx]
1100f52c:	adc    BYTE PTR [eax+0x10],ch
1100f52f:	sub    BYTE PTR [edx+0x2],dh
1100f532:	(bad)  
1100f533:	cmp    esp,DWORD PTR [eax+0x78]
1100f536:	add    al,dh
1100f538:	ficom  WORD PTR [edi-0x5149940a]
1100f53e:	sbb    ah,ch
1100f540:	push   ss
1100f541:	add    al,ch
1100f543:	dec    esp
1100f544:	enter  0xc750,0xb
1100f548:	imul   ah
1100f54a:	sub    edi,edi
1100f54c:	gs or  al,0xb3
1100f54f:	sbb    esi,DWORD PTR [edi]
1100f551:	and    DWORD PTR [edi+0x3b],0x9281031f
1100f558:	popa   
1100f559:	mov    BYTE PTR [ecx],dh
1100f55b:	add    cl,ah
1100f55d:	jnp    0x1100f4e4
1100f55f:	mov    esp,0xb0f62480
1100f564:	mov    ebx,0x7535ed90
1100f569:	or     dh,BYTE PTR [esi]
1100f56b:	add    edx,esi
1100f56d:	imul   edx,DWORD PTR [esi],0xffffffa3
1100f570:	xor    BYTE PTR [edx+0x9],0xb4
1100f574:	retf   0x8e9e
1100f577:	dec    edx
1100f578:	in     al,dx
1100f579:	mov    dh,0xb3
1100f57b:	pop    esi
1100f57c:	add    dh,bl
1100f57e:	inc    edx
1100f57f:	xchg   ecx,eax
1100f580:	pop    ebp
1100f581:	aam    0xa9
1100f583:	mov    al,0xa
1100f585:	imul   edx,DWORD PTR [esi+edx*1],0x85c3b91c
1100f58c:	(bad)
1100f590:	jb     0x1100f575
1100f592:	imul   edi,DWORD PTR [ebx+0x59],0x39d1fcea
1100f599:	sub    esp,DWORD PTR [ebp+0x47e10bf2]
1100f59f:	loope  0x1100f55e
1100f5a1:	jmp    0x4beb26d9
1100f5a6:	xor    BYTE PTR [eax-0x615b03e0],0xa3
1100f5ad:	jnp    0x1100f53e
1100f5af:	sar    DWORD PTR [eax+0x33],cl
1100f5b2:	jle    0x1100f575
1100f5b4:	fdivr  st,st(7)
1100f5b6:	hlt    
1100f5b7:	jg     0x1100f589
1100f5b9:	push   esp
1100f5ba:	sub    BYTE PTR [ecx+0x435d400a],cl
1100f5c0:	and    eax,0x49d608fc
1100f5c5:	retf   
1100f5c6:	aam    0x7c
1100f5c8:	dec    esp
1100f5c9:	pusha  
1100f5ca:	and    cl,BYTE PTR ds:0x5000d321
1100f5d0:	or     DWORD PTR [eax],0x3b
1100f5d3:	lods   al,BYTE PTR ds:[esi]
1100f5d4:	pop    esi
1100f5d5:	mov    ebp,0xc7f92e12
1100f5da:	xchg   DWORD PTR [ebx+0x29],esi
1100f5dd:	mov    bh,0x92
1100f5df:	or     DWORD PTR [eax-0x1e],edx
1100f5e2:	mov    ds:0x9b4002c,eax
1100f5e7:	jno    0x1100f58c
1100f5e9:	inc    esi
1100f5ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100f5eb:	fisub  DWORD PTR [esi-0x58]
1100f5ee:	push   es
1100f5ef:	adc    BYTE PTR [edi+edi*8+0x5e7bcf79],al
1100f5f6:	dec    esp
1100f5f7:	cli    
1100f5f8:	sbb    eax,edx
1100f5fa:	xor    al,0x5f
1100f5fd:	push   ebp
1100f5fe:	das    
1100f5ff:	popa   
1100f600:	arpl   WORD PTR [edx],dx
1100f602:	je     0x1100f63f
1100f604:	xchg   ebx,eax
1100f605:	lock jge 0x1100f668
1100f608:	es adc al,0x25
1100f60b:	add    al,dl
1100f60d:	idiv   BYTE PTR [edi+0x17]
1100f610:	add    ah,ch
1100f612:	sbb    bl,0x6
1100f615:	mov    DWORD PTR [esi],edi
1100f617:	or     dl,bl
1100f619:	rol    DWORD PTR [ebp-0x52bd09a7],cl
1100f61f:	or     BYTE PTR [edi],0x7d
1100f622:	call   0x919d366a
1100f627:	or     cl,BYTE PTR [eax]
1100f629:	loopne 0x1100f683
1100f62b:	out    0x21,al
1100f62d:	ja     0x1100f606
1100f62f:	fxtract 
1100f631:	ret    
1100f632:	push   esp
1100f633:	dec    eax
1100f634:	popf   
1100f635:	icebp  
1100f636:	imul   esp,esi,0xffffffa5
1100f639:	jmp    0xa0f7f155
1100f63e:	int3   
1100f63f:	ret    0xef0f
1100f642:	pushf  
1100f643:	add    edi,DWORD PTR [ebp+0x31]
1100f646:	xor    al,0x9d
1100f648:	push   edi
1100f649:	(bad)  
1100f64a:	stc    
1100f64b:	leave  
1100f64c:	mov    bh,0xef
1100f64e:	xchg   ecx,eax
1100f64f:	clc    
1100f650:	dec    ebx
1100f651:	test   eax,0x9d44e0c1
1100f656:	and    al,0xcd
1100f658:	sub    BYTE PTR [edi],0xc7
1100f65b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100f65c:	arpl   ax,dx
1100f65e:	push   ebp
1100f65f:	in     al,0x4
1100f661:	xchg   edx,eax
1100f662:	mov    ecx,0x3a80ee74
1100f667:	adc    BYTE PTR [eax],cl
1100f669:	adc    BYTE PTR [ebp+0x46],dh
1100f66c:	test   eax,0x24c79ad3
1100f671:	inc    esp
1100f672:	sbb    eax,0xaec439f0
1100f677:	neg    BYTE PTR [ecx+0x24]
1100f67a:	and    BYTE PTR [ecx-0x6fae5e31],ch
1100f680:	(bad)  
1100f681:	xlat   BYTE PTR ds:[ebx]
1100f682:	mov    WORD PTR [eax-0x4a8a60ab],?
1100f688:	pop    edi
1100f689:	push   ds
1100f68a:	xchg   ecx,eax
1100f68b:	inc    ebp
1100f68c:	clc    
1100f68d:	leave  
1100f68e:	(bad)  
1100f68f:	cmp    edi,DWORD PTR [bx]
1100f692:	sub    esp,eax
1100f694:	sub    DWORD PTR [ecx],edx
1100f696:	js     0x1100f672
1100f698:	in     eax,0x67
1100f69a:	aad    0x73
1100f69c:	dec    ebp
1100f69d:	ficomp DWORD PTR [ecx+0x52]
1100f6a0:	(bad)
1100f6a4:	popa   
1100f6a5:	xchg   ebx,eax
1100f6a6:	sbb    BYTE PTR [ebx-0x103fb8da],al
1100f6ac:	xlat   BYTE PTR ds:[ebx]
1100f6ad:	push   ebx
1100f6ae:	xor    eax,0x34af64
1100f6b3:	aad    0x1d
1100f6b5:	mov    ebp,0xb01e1344
1100f6ba:	imul   DWORD PTR [edx+0x38]
1100f6bd:	jmp    0x1100f6fc
1100f6bf:	setae  bl
1100f6c2:	push   ebx
1100f6c3:	mov    edi,0x2580e650
1100f6c8:	std    
1100f6c9:	mov    ah,0x7b
1100f6cb:	mov    ecx,0x5d430204
1100f6d0:	jl     0x1100f715
1100f6d2:	xor    al,0x80
1100f6d4:	xchg   esi,eax
1100f6d5:	xchg   ecx,eax
1100f6d6:	mov    edi,0xc20cc06d
1100f6db:	dec    ebp
1100f6dd:	jp     0x1100f698
1100f6df:	adc    eax,0xc2b78464
1100f6e4:	dec    edi
1100f6e5:	es inc eax
1100f6e7:	add    eax,DWORD PTR [eax]
1100f6e9:	push   cs
1100f6ea:	test   DWORD PTR [esi+0x2],esi
1100f6ed:	mov    al,0xa4
1100f6ef:	add    eax,edx
1100f6f1:	jb     0x1100f733
1100f6f3:	mov    ebp,0xa0a41c3c
1100f6f8:	push   0x1fc35ef1
1100f6fd:	dec    ebx
1100f6fe:	or     al,0x92
1100f700:	cmp    eax,edx
1100f702:	xchg   ebp,eax
1100f703:	aaa    
1100f704:	mov    al,ds:0xd41f15b
1100f709:	mov    ecx,ss
1100f70b:	push   ds
1100f70c:	repnz push edx
1100f70e:	dec    esi
1100f70f:	sti    
1100f710:	int3   
1100f711:	sbb    al,0x7c
1100f713:	(bad)  
1100f714:	sbb    esp,DWORD PTR [ebx+0x54]
1100f717:	loope  0x1100f74a
1100f719:	jp     0x1100f72a
1100f71b:	stc    
1100f71c:	repz cwde 
1100f71e:	out    dx,al
1100f71f:	cmp    edx,DWORD PTR [edx-0x28c3c2a6]
1100f725:	lahf   
1100f726:	adc    eax,ecx
1100f728:	mov    al,es:0x423b97a0
1100f72e:	mov    bl,0x20
1100f730:	and    DWORD PTR [ecx],0x3
1100f733:	push   edx
1100f734:	cdq    
1100f735:	(bad)  
1100f736:	ror    bl,1
1100f738:	jbe    0x1100f786
1100f73a:	sbb    ebp,DWORD PTR [edx+0x3f4c494e]
1100f740:	sbb    cl,BYTE PTR [esi+0x46]
1100f743:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
1100f745:	pop    ebp
1100f746:	adc    eax,0xb6099799
1100f74b:	retf   
1100f74c:	pop    ebp
1100f74d:	jno    0x1100f76d
1100f74f:	push   esp
1100f750:	mov    esp,0xa142643d
1100f755:	push   ebp
1100f756:	imul   BYTE PTR [esp+edi*4]
1100f759:	pop    ss
1100f75a:	inc    esp
1100f75b:	loopne 0x1100f7a6
1100f75d:	mov    al,0x74
1100f75f:	nop
1100f760:	dec    ebp
1100f761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100f762:	add    al,0xad
1100f764:	push   edx
1100f765:	ret    0xd299
1100f768:	xchg   edx,eax
1100f769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100f76a:	je     0x1100f7a3
1100f76c:	fnsave [ecx-0x603c0b53]
1100f772:	mov    eax,0xf3f1e71f
1100f777:	out    dx,eax
1100f778:	test   al,0xbe
1100f77a:	addr16 add al,0x20
1100f77d:	cdq    
1100f77e:	cmp    BYTE PTR [esi-0x65],al
1100f781:	push   eax
1100f782:	cmp    al,0x4
1100f784:	xchg   ebx,eax
1100f785:	stos   DWORD PTR es:[edi],eax
1100f786:	hlt    
1100f787:	ins    BYTE PTR es:[edi],dx
1100f788:	stos   DWORD PTR es:[edi],eax
1100f789:	mov    BYTE PTR fs:[ebp-0x158230ab],0x6e
1100f791:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100f793:	fild   QWORD PTR [esi-0x2a]
1100f796:	add    ch,al
1100f798:	jmp    0x90d57b25
1100f79d:	mov    ebx,0xffbea4fd
1100f7a2:	jmp    0x1100f752
1100f7a4:	mov    ebx,0x3fc8e2e
1100f7a9:	ins    DWORD PTR es:[edi],dx
1100f7aa:	(bad)  
1100f7ab:	and    ah,bh
1100f7ad:	inc    ecx
1100f7ae:	lock mov edi,0xdff0b90d
1100f7b4:	pop    ebx
1100f7b5:	clc    
1100f7b6:	sub    al,0x9a
1100f7b8:	add    BYTE PTR [ecx-0x63],al
1100f7bb:	pop    ds
1100f7bc:	stos   BYTE PTR es:[edi],al
1100f7bd:	add    eax,ebp
1100f7bf:	and    eax,0xbd7fb3ec
1100f7c4:	test   BYTE PTR [eax+0x6a],ah
1100f7c7:	add    al,BYTE PTR [ecx+0x16c645d2]
1100f7cd:	pop    esp
1100f7ce:	test   BYTE PTR [ecx+0x13],al
1100f7d1:	xor    ah,al
1100f7d3:	loopne 0x1100f805
1100f7d5:	adc    esp,DWORD PTR [eax-0x20]
1100f7d8:	retf   
1100f7d9:	cwde   
1100f7da:	outs   dx,DWORD PTR ds:[esi]
1100f7db:	sti    
1100f7dc:	in     al,dx
1100f7dd:	mov    ch,0x63
1100f7df:	cmp    bl,ah
1100f7e1:	mov    dl,0x30
1100f7e3:	popf   
1100f7e4:	into   
1100f7e5:	pushf  
1100f7e6:	loop   0x1100f7f6
1100f7e8:	and    al,0xee
1100f7ea:	aas    
1100f7eb:	fmul   DWORD PTR [ebx-0x4a287cf2]
1100f7f1:	stos   DWORD PTR es:[edi],eax
1100f7f2:	xor    BYTE PTR [ecx],al
1100f7f4:	ror    DWORD PTR [eax+0x5d],0xe
1100f7f8:	cdq    
1100f7f9:	add    BYTE PTR [ecx],bh
1100f7fb:	aas    
1100f7fc:	nop
1100f7fd:	sub    ebp,edi
1100f7ff:	out    0x36,al
1100f801:	and    al,0x38
1100f803:	and    BYTE PTR [ebp+0x2b088eb2],cl
1100f809:	test   BYTE PTR [ebx],al
1100f80b:	out    0x70,eax
1100f80d:	push   esi
1100f80e:	sbb    eax,0x69b11801
1100f813:	shl    DWORD PTR [esi],cl
1100f815:	inc    esp
1100f816:	add    dl,dl
1100f818:	jmp    FWORD PTR [esp+edi*8]
1100f81b:	stos   BYTE PTR es:[edi],al
1100f81c:	adc    dl,BYTE PTR [eax-0x24]
1100f81f:	push   edi
1100f820:	fimul  DWORD PTR gs:[ecx+0x1f848eea]
1100f827:	leave  
1100f828:	mov    dh,bh
1100f82a:	(bad)  [eax]
1100f82c:	int3   
1100f82d:	fs sbb ah,ah
1100f830:	(bad)  [ebx+0x64]
1100f833:	push   ds
1100f834:	sub    BYTE PTR [edi],dh
1100f836:	push   ds
1100f837:	jns    0x1100f83c
1100f839:	mov    BYTE PTR [esp+eax*8],bh
1100f83c:	pop    ebx
1100f83d:	outs   dx,DWORD PTR ds:[esi]
1100f83e:	xchg   esp,eax
1100f83f:	out    dx,al
1100f840:	scas   al,BYTE PTR es:[edi]
1100f841:	aam    0xff
1100f843:	xchg   ecx,eax
1100f844:	jl     0x1100f81a
1100f846:	xchg   ecx,eax
1100f847:	jl     0x1100f813
1100f849:	imul   DWORD PTR [edi+0x7c74f9b2]
1100f84f:	add    dh,bl
1100f851:	sbb    al,0xda
1100f853:	push   esp
1100f854:	add    DWORD PTR [ecx+0x31d0af4e],edi
1100f85a:	xor    ecx,DWORD PTR [edi]
1100f85c:	js     0x1100f8dd
1100f85e:	pop    es
1100f85f:	outs   dx,DWORD PTR ds:[esi]
1100f860:	jl     0x1100f83b
1100f862:	jle    0x1100f8d4
1100f864:	int3   
1100f865:	xchg   ecx,eax
1100f866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100f867:	push   ds
1100f868:	and    BYTE PTR [ecx+0x0],ch
1100f86b:	repz out dx,al
1100f86d:	xchg   esp,eax
1100f86e:	or     ebp,DWORD PTR [edi+0x3]
1100f871:	ins    DWORD PTR es:[edi],dx
1100f872:	jle    0x1100f8a1
1100f874:	cld    
1100f875:	ffreep st(3)
1100f877:	test   esp,edi
1100f879:	cld    
1100f87a:	jp     0x1100f830
1100f87c:	outs   dx,DWORD PTR ds:[esi]
1100f87d:	rol    DWORD PTR [eax],cl
1100f87f:	enter  0x100b,0x1
1100f883:	loopne 0x1100f8e5
1100f885:	push   0x817402f7
1100f88a:	add    BYTE PTR [ecx+0x652c430e],bh
1100f890:	add    BYTE PTR [edx],al
1100f892:	lods   eax,DWORD PTR ds:[esi]
1100f893:	or     DWORD PTR [eax+0xd],ebx
1100f896:	cmp    al,0xae
1100f898:	or     esp,esi
1100f89a:	inc    eax
1100f89b:	loopne 0x1100f8a1
1100f89d:	nop
1100f89e:	sbb    BYTE PTR [esi+edi*1-0x4ca603cb],ah
1100f8a5:	inc    ebx
1100f8a6:	pop    ebp
1100f8a7:	(bad)  
1100f8a8:	(bad)  
1100f8a9:	ss ret 
1100f8ab:	inc    esi
1100f8ac:	fldcw  WORD PTR [ebx-0x6]
1100f8af:	imul   esi,DWORD PTR [ebp-0x7f],0x7b771dc5
1100f8b6:	js     0x1100f893
1100f8b8:	jmp    0x4392fd05
1100f8bd:	mov    fs,WORD PTR [eax+eiz*1]
1100f8c0:	aad    0x4
1100f8c2:	xchg   esp,eax
1100f8c3:	in     al,0x1e
1100f8c5:	cld    
1100f8c6:	and    al,0x37
1100f8c8:	and    DWORD PTR [edx],eax
1100f8ca:	ror    al,0x89
1100f8cd:	fisttp DWORD PTR [esi]
1100f8cf:	lods   eax,DWORD PTR ds:[esi]
1100f8d0:	add    esi,esp
1100f8d2:	add    al,0x38
1100f8d4:	xor    edx,DWORD PTR [edx]
1100f8d6:	loopne 0x1100f8ed
1100f8d8:	popa   
1100f8d9:	js     0x1100f8fb
1100f8db:	jns    0x1100f8ec
1100f8dd:	push   0x95c4f728
1100f8e2:	mov    ds:0xba7c50e0,al
1100f8e7:	push   cs
1100f8e8:	adc    ah,BYTE PTR [edx]
1100f8ea:	test   DWORD PTR [eax+0x883c885],eax
1100f8f0:	cmp    eax,0xf3853f5e
1100f8f5:	(bad)  
1100f8f6:	out    dx,eax
1100f8f7:	int3   
1100f8f8:	and    eax,edx
1100f8fa:	mov    esp,0xcb45e80
1100f8ff:	add    cl,BYTE PTR [esi]
1100f901:	push   ds
1100f902:	jno    0x1100f929
1100f904:	inc    edi
1100f905:	add    BYTE PTR [eax+0x60e83f6e],ch
1100f90b:	and    ah,BYTE PTR ds:0xa7623c4c
1100f911:	mov    esp,DWORD PTR [edx-0x1f]
1100f914:	push   edi
1100f915:	and    eax,0x9c1abe
1100f91a:	jg     0x1100f913
1100f91c:	stc    
1100f91d:	sub    al,0xbe
1100f91f:	loope  0x1100f8bd
1100f921:	dec    esi
1100f922:	push   0x7
1100f924:	cmp    bh,BYTE PTR [ebp-0x24]
1100f927:	clc    
1100f928:	xchg   ecx,eax
1100f929:	fwait
1100f92a:	add    eax,0xf364466c
1100f92f:	or     al,0xa8
1100f931:	repz adc dl,0x2a
1100f935:	sub    dh,0x17
1100f938:	nop
1100f939:	enter  0x829d,0xb3
1100f93d:	(bad)  
1100f93e:	cld    
1100f93f:	popa   
1100f940:	mov    al,0xef
1100f942:	add    edx,DWORD PTR [esi+0x71]
1100f945:	aas    
1100f946:	jmp    0x8937:0x7eebcdf4
1100f94d:	push   es
1100f94e:	rcl    dl,1
1100f950:	fcmovu st,st(4)
1100f952:	adc    BYTE PTR [ebx],0xa
1100f955:	jg     0x1100f9cf
1100f957:	fidivr DWORD PTR [edi]
1100f959:	test   al,0x97
1100f95b:	(bad)  [eax]
1100f95d:	pslld  mm6,QWORD PTR [ecx-0x3ff6907e]
1100f964:	push   es
1100f965:	add    BYTE PTR [edx+ebx*1],bh
1100f968:	jb     0x1100f96a
1100f96a:	shl    BYTE PTR [esi+0x0],1
1100f96d:	sub    eax,0x359403b
1100f972:	pop    eax
1100f973:	(bad)  
1100f974:	sti    
1100f975:	out    dx,al
1100f976:	or     ebx,0xffffff94
1100f979:	xchg   esi,eax
1100f97a:	cmp    DWORD PTR [eax],ebp
1100f97c:	push   0x503bd603
1100f981:	push   0xffffffad
1100f983:	and    eax,0xbd845ac1
1100f988:	push   0xe070d80e
1100f98d:	mov    ss,WORD PTR [edi+0x6bc7ba14]
1100f993:	jmp    FWORD PTR ds:0x66f05a4
1100f999:	jb     0x1100f9bb
1100f99b:	dec    edx
1100f99c:	out    0x5f,al
1100f99e:	jb     0x1100f99a
1100f9a0:	cmp    edx,DWORD PTR [edx+esi*1-0x72b7d6e3]
1100f9a7:	retf   0xd382
1100f9aa:	dec    eax
1100f9ab:	in     eax,dx
1100f9ac:	imul   ebx,DWORD PTR [edi+0x3a],0x980ed296
1100f9b3:	test   eax,0xe360a057
1100f9b8:	std    
1100f9b9:	imul   edi,DWORD PTR [ebx-0x11],0xa2a00101
1100f9c0:	adc    BYTE PTR [edx+0x71],bh
1100f9c3:	adc    BYTE PTR [eax+0x32684f08],al
1100f9c9:	xchg   ecx,eax
1100f9ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100f9cb:	sub    al,al
1100f9cd:	pop    ecx
1100f9ce:	sbb    BYTE PTR [ecx],bl
1100f9d0:	or     DWORD PTR [ebx-0x44],ebp
1100f9d3:	push   ss
1100f9d4:	in     al,dx
1100f9d5:	dec    edx
1100f9d6:	mov    dh,0x4b
1100f9d8:	sti    
1100f9d9:	out    0x7e,eax
1100f9db:	jbe    0x1100fa18
1100f9dd:	outs   dx,DWORD PTR ds:[esi]
1100f9de:	lahf   
1100f9df:	out    0x13,al
1100f9e1:	loop   0x1100fa39
1100f9e3:	mov    edx,0x8e120780
1100f9e8:	xchg   ebp,eax
1100f9e9:	xchg   edi,eax
1100f9ea:	mov    eax,0xfc25683
1100f9ef:	xor    eax,0x992c7480
1100f9f4:	fcom   DWORD PTR [ebx-0x5]
1100f9f7:	std    
1100f9f8:	imul   eax,esp,0x2204b8a7
1100f9fe:	push   ss
1100f9ff:	cdq    
1100fa00:	sbb    ah,al
1100fa02:	jmp    0x1100fa13
1100fa04:	ins    DWORD PTR es:[edi],dx
1100fa05:	int3   
1100fa06:	(bad)  
1100fa07:	scas   eax,DWORD PTR es:[edi]
1100fa08:	push   edx
1100fa09:	add    al,0x25
1100fa0b:	mov    ebx,0xc2935101
1100fa10:	inc    ebx
1100fa12:	hlt    
1100fa13:	loopne 0x1100f9ac
1100fa15:	(bad)  
1100fa16:	repz inc ecx
1100fa18:	leave  
1100fa19:	ins    BYTE PTR es:[edi],dx
1100fa1a:	push   ebx
1100fa1b:	xlat   BYTE PTR ds:[ebx]
1100fa1c:	xchg   esp,eax
1100fa1d:	add    DWORD PTR [eax],eax
1100fa1f:	xchg   ebp,eax
1100fa20:	js     0x1100f9f4
1100fa22:	std    
1100fa23:	retf   0x5ba
1100fa26:	mov    eax,ds:0xbcba001d
1100fa2b:	pop    ecx
1100fa2c:	and    eax,0xf8401800
1100fa31:	jmp    0xc63d2ef7
1100fa36:	and    al,bh
1100fa38:	ja     0x1100f9ba
1100fa3a:	int3   
1100fa3b:	or     bl,BYTE PTR [esi+edx*1]
1100fa3e:	cmp    eax,0xd7e15bf2
1100fa43:	jmp    0x8038:0xc603453f
1100fa4a:	shr    dl,0xdb
1100fa4d:	inc    eax
1100fa4e:	and    BYTE PTR [ebx],ch
1100fa50:	in     al,dx
1100fa51:	pop    edx
1100fa52:	add    edx,eax
1100fa54:	rol    DWORD PTR [edx+0x401c3614],1
1100fa5a:	loopne 0x1100f9dd
1100fa5c:	nop
1100fa5d:	push   0xb
1100fa5f:	rcl    BYTE PTR [ebx+0x10372d73],1
1100fa65:	adc    ecx,DWORD PTR [eax+0x29c04d6a]
1100fa6b:	out    dx,eax
1100fa6c:	shl    BYTE PTR [eax+ebp*1+0x6a],0x90
1100fa71:	cmp    BYTE PTR [ebx+0x4d643005],cl
1100fa77:	xor    DWORD PTR [esi],edx
1100fa79:	sar    BYTE PTR [eax+ecx*8+0x3ffbffb0],0xb1
1100fa81:	sbb    esi,edi
1100fa83:	out    0x86,eax
1100fa85:	les    eax,FWORD PTR [ebx]
1100fa87:	test   BYTE PTR fs:[esi+0x2c],bl
1100fa8b:	stc    
1100fa8c:	test   DWORD PTR [edi],ebp
1100fa8e:	sub    al,0x74
1100fa90:	sub    al,0x4e
1100fa92:	or     dh,BYTE PTR [edx+0xc]
1100fa95:	or     ah,bh
1100fa97:	ret    0x9191
1100fa9a:	dec    edx
1100fa9b:	ret    0x469f
1100fa9e:	jae    0x1100fa67
1100faa0:	add    cl,BYTE PTR [edi-0x47fa57e1]
1100faa6:	xchg   ecx,eax
1100faa7:	cld    
1100faa8:	punpckhbw mm4,QWORD PTR [ebx+0x47]
1100faac:	lahf   
1100faad:	mov    edi,0xf57cc718
1100fab2:	pop    esi
1100fab3:	fstp   QWORD PTR [edx-0x5cdf910]
1100fab9:	jmp    0x1100fa85
1100fabb:	aaa    
1100fabc:	pop    esp
1100fabd:	leave  
1100fabe:	xchg   edi,eax
1100fabf:	and    bl,dl
1100fac1:	xor    BYTE PTR [esi],cl
1100fac3:	add    BYTE PTR [esi+0x74],0x1d
1100fac7:	dec    ecx
1100fac8:	inc    edi
1100fac9:	div    BYTE PTR [ebp+0x12]
1100facc:	or     al,0xd2
1100face:	adc    dh,BYTE PTR [edx-0x32]
1100fad1:	and    BYTE PTR [ecx],cl
1100fad3:	cwde   
1100fad4:	sub    dh,ah
1100fad6:	mov    eax,ds:0x93359f84
1100fadb:	test   BYTE PTR [esi],bl
1100fadd:	nop
1100fade:	pop    es
1100fadf:	adc    al,0xe5
1100fae1:	iret   
1100fae2:	cmp    eax,0x27f5fb53
1100fae7:	(bad)
1100faea:	xor    BYTE PTR [ebx-0x42],ah
1100faed:	dec    edi
1100faee:	sbb    al,0xb1
1100faf0:	xor    eax,eax
1100faf2:	dec    ecx
1100faf3:	mov    BYTE PTR [eax+edi*2+0x7a290110],ah
1100fafa:	dec    eax
1100fafb:	ins    BYTE PTR es:[edi],dx
1100fafc:	ss sub bl,dl
1100faff:	add    eax,0x7ccfb6d4
1100fb04:	ret    0xf0ae
1100fb07:	scas   eax,DWORD PTR es:[di]
1100fb09:	fcomp  DWORD PTR [edi+0x3a]
1100fb0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1100fb0d:	push   ecx
1100fb0e:	sti    
1100fb0f:	jne    0x1100fb2d
1100fb11:	sbb    dl,0xa8
1100fb14:	sub    ah,dl
1100fb16:	ins    DWORD PTR es:[edi],dx
1100fb17:	cmp    BYTE PTR [esi],0x49
1100fb1a:	sbb    al,0xc0
1100fb1c:	inc    eax
1100fb1d:	loope  0x1100fb26
1100fb1f:	loopne 0x1100fb7f
1100fb21:	add    al,0x3f
1100fb23:	stos   BYTE PTR es:[edi],al
1100fb24:	xchg   edi,eax
1100fb25:	cmp    eax,DWORD PTR [ecx-0x7c]
1100fb28:	lahf   
1100fb29:	test   dl,bl
1100fb2b:	mov    dl,0xff
1100fb2d:	neg    DWORD PTR [edx+0x7ce5b685]
1100fb33:	xor    BYTE PTR [eax-0x40],0x40
1100fb37:	in     al,0xe9
1100fb39:	inc    esp
1100fb3a:	mov    al,ds:0x36b03852
1100fb3f:	or     esi,edx
1100fb41:	inc    eax
1100fb42:	adc    eax,DWORD PTR [eax]
1100fb44:	ret    0x212
1100fb47:	test   BYTE PTR [edx+0x60],al
1100fb4a:	cmc    
1100fb4b:	fidivr WORD PTR [eax-0x5f]
1100fb4e:	and    eax,0x913f2117
1100fb53:	adc    BYTE PTR [esp+eiz*4],ch
1100fb56:	mov    ebp,0xcfad9d03
1100fb5b:	fisubr WORD PTR [edi]
1100fb5d:	mov    cl,0xb3
1100fb5f:	sbb    eax,0x6a9401a
1100fb64:	loope  0x1100fb8d
1100fb66:	mov    esi,0x7d670b3a
1100fb6b:	and    DWORD PTR [esi+esi*4+0x31],esi
1100fb6f:	retf   
1100fb70:	sub    ebp,DWORD PTR [ecx+0x0]
1100fb73:	jp     0x1100fbb9
1100fb75:	addr16 xchg edx,eax
1100fb77:	push   eax
1100fb78:	mov    ecx,0xf4f7f5ec
1100fb7d:	inc    ebp
1100fb7e:	pop    edi
1100fb7f:	stos   DWORD PTR es:[edi],eax
1100fb80:	scas   al,BYTE PTR es:[edi]
1100fb81:	push   cs
1100fb82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100fb83:	inc    eax
1100fb84:	add    bl,BYTE PTR [ebx+ebx*8]
1100fb87:	repnz mov ds:0x345002e6,al
1100fb8d:	and    ch,BYTE PTR [ebx+0x784e68da]
1100fb93:	ror    BYTE PTR [edi+0x1d75720],1
1100fb99:	mov    ah,0xfd
1100fb9b:	ins    DWORD PTR es:[edi],dx
1100fb9c:	push   esp
1100fb9d:	jnp    0x1100fbbd
1100fb9f:	jns    0x1100fc16
1100fba1:	jmp    0x3a3a1514
1100fba6:	push   edx
1100fba7:	(bad)  
1100fba8:	ror    DWORD PTR [ebx+0x242fba79],cl
1100fbae:	int3   
1100fbaf:	xchg   esp,eax
1100fbb0:	pop    ds
1100fbb1:	aas    
1100fbb2:	stos   DWORD PTR es:[edi],eax
1100fbb3:	sbb    eax,0x67f6a1d0
1100fbb8:	ds jle 0x1100fb3b
1100fbbb:	lods   al,BYTE PTR ds:[esi]
1100fbbc:	outs   dx,BYTE PTR ds:[esi]
1100fbbd:	add    ch,bh
1100fbbf:	scas   al,BYTE PTR es:[edi]
1100fbc0:	test   DWORD PTR [edi+0x4f],ebx
1100fbc3:	sub    esp,DWORD PTR [esi]
1100fbc5:	idiv   BYTE PTR [esi-0x44]
1100fbc8:	rcr    BYTE PTR [ebp+ebp*4+0x27],0x19
1100fbcd:	pop    ds
1100fbce:	push   edi
1100fbcf:	cld    
1100fbd0:	scas   al,BYTE PTR es:[edi]
1100fbd1:	jae    0x1100fb88
1100fbd3:	pop    edi
1100fbd4:	test   edx,edi
1100fbd6:	bnd jae 0x1100fba1
1100fbd9:	dec    ebp
1100fbda:	add    BYTE PTR [eax+0x7e3eafbc],0x6f
1100fbe1:	cmp    dh,dh
1100fbe3:	aaa    
1100fbe4:	jbe    0x1100fbb5
1100fbe6:	add    al,0xde
1100fbe8:	inc    ebx
1100fbe9:	ror    DWORD PTR [ebx],cl
1100fbeb:	xor    BYTE PTR [eax+eax*1],al
1100fbee:	fidivr DWORD PTR [ebx+0x744e6e64]
1100fbf4:	mov    cl,0xfd
1100fbf6:	add    ebx,DWORD PTR [ebp+edi*2+0x5a]
1100fbfa:	in     eax,dx
1100fbfb:	jb     0x58c95000
1100fc01:	jle    0x1100fbae
1100fc03:	(bad)  
1100fc04:	xchg   edi,eax
1100fc05:	inc    eax
1100fc06:	inc    eax
1100fc07:	(bad)  
1100fc08:	cld    
1100fc09:	pop    ecx
1100fc0a:	sub    BYTE PTR [eax-0x38],dh
1100fc0d:	jecxz  0x1100fbe4
1100fc0f:	fld    DWORD PTR [eax+0x6ba8193a]
1100fc15:	mov    cl,0x0
1100fc17:	inc    eax
1100fc18:	and    BYTE PTR [eax+0x5020e407],dh
1100fc1e:	loop   0x1100fc23
1100fc20:	loop   0x1100fc6f
1100fc22:	xchg   ebp,eax
1100fc23:	jb     0x1100fc2c
1100fc25:	pop    edx
1100fc26:	sbb    edi,edi
1100fc28:	push   ds
1100fc29:	add    BYTE PTR [eax],al
1100fc2b:	push   eax
1100fc2c:	sub    BYTE PTR [esi-0x7b],0x9f
1100fc30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100fc31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100fc32:	in     eax,0x78
1100fc34:	loope  0x1100fbd2
1100fc36:	mov    bh,0xdf
1100fc38:	xor    eax,0x787eb786
1100fc3d:	cs inc ebp
1100fc3f:	int    0x11
1100fc41:	xchg   al,dl
1100fc43:	mov    eax,ds:0xbf4bb08d
1100fc48:	push   eax
1100fc49:	pop    esi
1100fc4a:	add    BYTE PTR [ebp-0xf600fcb],ch
1100fc50:	dec    DWORD PTR [eax-0x64]
1100fc53:	jnp    0x1100fc77
1100fc55:	(bad)  
1100fc56:	cmp    DWORD PTR [edi],ebp
1100fc58:	shl    BYTE PTR [ebx+0x2487d11d],0x24
1100fc5f:	pop    esi
1100fc60:	gs inc ebx
1100fc62:	push   0x4d
1100fc64:	add    BYTE PTR [esi+0x55],0x51
1100fc68:	sti    
1100fc69:	inc    ebp
1100fc6a:	clc    
1100fc6b:	and    eax,0x7d6c47b0
1100fc70:	add    eax,0x457fb40a
1100fc75:	pop    esi
1100fc76:	add    ecx,ecx
1100fc78:	or     al,0x24
1100fc7a:	add    DWORD PTR [edi+edx*2],ebx
1100fc7d:	pop    edx
1100fc7e:	jo     0x1100fc91
1100fc80:	sbb    ah,dh
1100fc82:	cmp    DWORD PTR [ecx],ecx
1100fc84:	nop
1100fc85:	sub    BYTE PTR [ebx],cl
1100fc87:	push   eax
1100fc88:	addr16 cld 
1100fc8a:	stc    
1100fc8b:	inc    esp
1100fc8c:	push   eax
1100fc8d:	shl    BYTE PTR [edi+0x5d],1
1100fc90:	add    al,0x54
1100fc92:	ja     0x1100fcf7
1100fc94:	out    0x2b,al
1100fc96:	call   0x22db2df5
1100fc9b:	mov    dl,0xeb
1100fc9d:	xchg   esp,eax
1100fc9e:	xchg   edx,eax
1100fc9f:	sahf   
1100fca0:	sub    al,0xec
1100fca2:	adc    al,0x78
1100fca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1100fca5:	add    al,0x5f
1100fca7:	repz or eax,0x8dd01a64
1100fcad:	push   ebx
1100fcae:	in     al,0x25
1100fcb0:	popf   
1100fcb1:	sub    ebp,DWORD PTR [eax+0x59]
1100fcb4:	out    0xd4,eax
1100fcb6:	idiv   bh
1100fcb8:	(bad)  
1100fcb9:	jnp    0x1100fc68
1100fcbb:	out    dx,al
1100fcbc:	aaa    
1100fcbd:	ja     0x3303bcc3
1100fcc3:	add    DWORD PTR [ebx-0x28],ebx
1100fcc6:	inc    dh
1100fcc8:	out    0xf2,al
1100fcca:	aam    0xe0
1100fccc:	cs pop esp
1100fcce:	push   0xfc2b701a
1100fcd3:	push   esi
1100fcd4:	in     eax,0xd7
1100fcd6:	ret    0x1a4f
1100fcd9:	rol    BYTE PTR [esi+0x30],0xc9
1100fcdd:	inc    eax
1100fcde:	lar    eax,WORD PTR [ecx]
1100fce1:	adc    BYTE PTR [edx],0x8
1100fce4:	pop    eax
1100fce5:	(bad)  
1100fce6:	rcr    BYTE PTR [edx-0x17ffe5f7],1
1100fcec:	sbb    BYTE PTR [ecx],ah
1100fcee:	ret    
1100fcef:	bound  ebp,QWORD PTR [edi]
1100fcf1:	enter  0x8041,0xc5
1100fcf5:	inc    edx
1100fcf6:	fistp  WORD PTR [ecx+ecx*8+0x3b]
1100fcfa:	rcr    BYTE PTR [edx-0x1a],1
1100fcfd:	stos   DWORD PTR es:[edi],eax
1100fcfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100fcff:	xor    eax,0x84068c5e
1100fd04:	ret    0x6e4b
1100fd07:	stos   DWORD PTR es:[edi],eax
1100fd08:	inc    edx
1100fd09:	cld    
1100fd0a:	mov    cs,WORD PTR [edi+0x7e77c2ce]
1100fd10:	xor    al,0x9b
1100fd12:	in     eax,dx
1100fd13:	cmp    esp,DWORD PTR [edx+0x3a975090]
1100fd19:	pop    esi
1100fd1a:	xchg   esi,eax
1100fd1b:	xor    ah,ah
1100fd1d:	leave  
1100fd1e:	or     esp,eax
1100fd20:	and    eax,0x7f549814
1100fd25:	cmc    
1100fd26:	mov    ds:0x8a1af905,al
1100fd2b:	nop
1100fd2c:	test   al,0x82
1100fd2e:	xor    al,0xea
1100fd30:	sub    DWORD PTR [ebp-0x18d3c57d],ebp
1100fd36:	(bad)  
1100fd37:	adc    ebp,DWORD PTR [ebx+0x5cb5515e]
1100fd3d:	rcl    BYTE PTR [ecx+0x1e462414],0x8f
1100fd44:	and    eax,0xed08ea23
1100fd49:	imul   ebp,DWORD PTR [ebp-0x21],0x7b
1100fd4d:	nop
1100fd4e:	sbb    BYTE PTR [eax+edx*1-0x25],bh
1100fd52:	push   ds
1100fd53:	scas   eax,DWORD PTR es:[edi]
1100fd54:	dec    ecx
1100fd55:	fwait
1100fd56:	add    al,0xf2
1100fd58:	jg     0x1100fd14
1100fd5a:	outs   dx,BYTE PTR ds:[esi]
1100fd5b:	cmp    eax,0x7c51e7f2
1100fd60:	add    ah,BYTE PTR [edx]
1100fd62:	lods   al,BYTE PTR ds:[esi]
1100fd63:	test   BYTE PTR [ebx+0x41],bl
1100fd66:	push   edi
1100fd67:	add    cl,BYTE PTR [edi-0x78]
1100fd6a:	(bad)  
1100fd6b:	lds    ecx,FWORD PTR gs:[eax+0x78]
1100fd6f:	xor    eax,0x3f414177
1100fd74:	in     al,0xc3
1100fd76:	xlat   BYTE PTR ds:[ebx]
1100fd77:	and    edi,DWORD PTR [edi]
1100fd79:	inc    eax
1100fd7a:	dec    esi
1100fd7b:	add    BYTE PTR [edx-0x47a2e8a4],al
1100fd81:	push   cs
1100fd82:	adc    eax,0xe1eaad26
1100fd87:	pminub mm0,QWORD PTR [ecx]
1100fd8a:	dec    esi
1100fd8b:	jg     0x1100fd34
1100fd8d:	xor    bh,BYTE PTR ds:0xeb3c2f9
1100fd93:	xchg   ebp,eax
1100fd94:	or     DWORD PTR [edi+esi*8],edi
1100fd97:	lods   eax,DWORD PTR ds:[esi]
1100fd98:	push   edx
1100fd99:	push   0x1ff6970
1100fd9e:	std    
1100fd9f:	ss mov esp,?
1100fda2:	inc    edi
1100fda3:	pop    ds
1100fda4:	jge    0x1100fdda
1100fda6:	adc    al,0xca
1100fda8:	js     0x1100fd3f
1100fdaa:	pop    edx
1100fdab:	mov    eax,0xe5ebbbab
1100fdb0:	and    BYTE PTR [bp+di+0x7f],dl
1100fdb4:	jmp    0x1100fd87
1100fdb6:	pop    edi
1100fdb7:	or     edi,DWORD PTR [edx]
1100fdb9:	(bad)  
1100fdba:	cld    
1100fdbb:	fisub  DWORD PTR [eax+eiz*4]
1100fdbe:	dec    edi
1100fdbf:	adc    bh,ah
1100fdc1:	or     eax,0xf588c78
1100fdc6:	loopne 0x1100fdc8
1100fdc8:	enter  0x22b,0x59
1100fdcc:	mov    al,ds:0x35824cd
1100fdd2:	int    0x14
1100fdd4:	bound  eax,QWORD PTR [edx]
1100fdd6:	add    dl,dl
1100fdd8:	add    al,0x82
1100fdda:	dec    ecx
1100fddb:	xor    BYTE PTR ds:0x79762ded,al
1100fde1:	sub    al,0x2a
1100fde3:	add    ch,BYTE PTR [ebp-0x7bb5babb]
1100fde9:	lahf   
1100fdea:	jp     0x1100fddc
1100fdec:	pop    ecx
1100fded:	cs mov bh,0x12
1100fdf0:	mov    edx,0x10281bf8
1100fdf5:	add    BYTE PTR [edx],0x2b
1100fdf8:	test   eax,0x5c4fc5c8
1100fdfd:	cmp    DWORD PTR [esi-0x64c0c14d],eax
1100fe03:	ret    0xe942
1100fe06:	push   esp
1100fe07:	or     BYTE PTR [eax],al
1100fe09:	test   eax,0x459547de
1100fe0e:	cli    
1100fe0f:	ror    DWORD PTR [eax+0x4e],1
1100fe12:	jno    0x1100fe14
1100fe14:	xor    al,0x22
1100fe16:	mov    bl,BYTE PTR [edx+0x583df9f]
1100fe1c:	add    eax,0xb410126
1100fe21:	mov    al,ds:0x487a0f64
1100fe26:	pop    esi
1100fe27:	add    BYTE PTR [edi+0x46],ch
1100fe2a:	cli    
1100fe2b:	inc    esi
1100fe2c:	xor    eax,0x45563c5c
1100fe31:	int3   
1100fe32:	mov    edx,0x28bf2c97
1100fe37:	push   esp
1100fe38:	arpl   WORD PTR [esp+eiz*8],sp
1100fe3b:	inc    eax
1100fe3c:	aam    0xe7
1100fe3e:	mov    dl,dl
1100fe40:	cmc    
1100fe41:	shr    BYTE PTR [eax+0xb],0x20
1100fe45:	xor    eax,0x7ad9b301
1100fe4a:	xor    eax,0x3dc5406f
1100fe4f:	mov    ch,0xdd
1100fe51:	push   cs
1100fe52:	and    bl,BYTE PTR [eax]
1100fe54:	add    al,0x30
1100fe56:	sbb    al,0xdb
1100fe58:	dec    edi
1100fe59:	ret    0x29cf
1100fe5c:	add    edi,DWORD PTR [esi-0x1babe997]
1100fe62:	ss push esp
1100fe64:	push   0x7d
1100fe66:	and    eax,0xfce3d16f
1100fe6b:	test   BYTE PTR [eax+0x799f7aec],ah
1100fe71:	push   es
1100fe72:	inc    esp
1100fe73:	arpl   WORD PTR [eax+0x481acb77],sp
1100fe79:	js     0x1100fe09
1100fe7b:	xor    ebp,edi
1100fe7d:	js     0x1100fe83
1100fe7f:	scas   eax,DWORD PTR es:[edi]
1100fe80:	cmp    al,0x6e
1100fe82:	das    
1100fe83:	cmp    cl,dh
1100fe85:	test   al,0x3d
1100fe87:	retf   0x225e
1100fe8a:	ror    edi,cl
1100fe8c:	mov    bh,dh
1100fe8e:	ins    BYTE PTR es:[edi],dx
1100fe8f:	shl    edi,cl
1100fe91:	xor    dl,BYTE PTR [eax+0x30]
1100fe94:	pop    esi
1100fe95:	test   al,0x9
1100fe97:	cmp    DWORD PTR [edx+edi*4+0x64],0x24
1100fe9c:	or     bh,bh
1100fe9e:	iret   
1100fe9f:	inc    ecx
1100fea0:	inc    esi
1100fea1:	jle    0x1100fefd
1100fea3:	hlt    
1100fea4:	enter  0x17af,0x6d
1100fea8:	push   es
1100fea9:	nop
1100feaa:	int    0x9f
1100feac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100fead:	add    DWORD PTR [ebx-0x213f7ffe],eax
1100feb3:	imul   eax,DWORD PTR [eax],0xffffffb0
1100feb6:	jl     0x1100feb8
1100feb8:	imul   eax,DWORD PTR [edx],0xe0d02cd6
1100febe:	mov    al,ds:0x1356023d
1100fec3:	fcom   DWORD PTR [ebx]
1100fec5:	mov    edx,0xeb628583
1100feca:	add    eax,0x8d68e81
1100fecf:	sti    
1100fed0:	aad    0x9c
1100fed2:	cmp    BYTE PTR [esi+0x59],0x7a
1100fed6:	sti    
1100fed7:	add    cl,BYTE PTR [edx-0x78708a21]
1100fedd:	aaa    
1100fede:	jle    0x1100ff48
1100fee0:	push   cs
1100fee1:	ss ins DWORD PTR es:[edi],dx
1100fee3:	fmulp  st(4),st
1100fee5:	pop    ss
1100fee6:	fsub   DWORD PTR [eax-0x66]
1100feea:	mov    eax,0x8cc20843
1100feef:	cld    
1100fef0:	inc    ebx
1100fef1:	push   edx
1100fef2:	nop
1100fef3:	ins    BYTE PTR es:[edi],dx
1100fef4:	int    0xfc
1100fef6:	fs je  0x1100ff56
1100fef9:	mov    ?,WORD PTR [ebx]
1100fefb:	push   es
1100fefc:	xchg   ebp,eax
1100fefd:	icebp  
1100fefe:	leave  
1100feff:	xchg   ecx,eax
1100ff00:	test   ah,bl
1100ff02:	jns    0x1100ff59
1100ff04:	sbb    al,0x41
1100ff06:	sbb    BYTE PTR ds:0xd5919b83,bl
1100ff0c:	addr16 dec edi
1100ff0e:	idiv   BYTE PTR [ecx]
1100ff10:	mov    al,ds:0xbedb9026
1100ff15:	loop   0x1100ff1d
1100ff17:	push   esp
1100ff18:	sub    bh,BYTE PTR [ebp-0xb407559]
1100ff1e:	frstor [edi]
1100ff20:	xor    bl,0xe9
1100ff23:	scas   al,BYTE PTR es:[edi]
1100ff24:	je     0x1100ff82
1100ff26:	inc    eax
1100ff27:	mov    esp,0x6c86da7e
1100ff2c:	je     0x1100fefe
1100ff2e:	sbb    BYTE PTR [ebp-0x4cf2024d],0x2
1100ff35:	xchg   esp,eax
1100ff36:	lock or DWORD PTR [eax],0x7d
1100ff3a:	je     0x1100ffa9
1100ff3c:	data16 fiadd DWORD PTR [eax+0x681ed103]
1100ff43:	in     al,0x57
1100ff45:	aad    0x85
1100ff47:	inc    eax
1100ff48:	retf   0xc58c
1100ff4b:	jne    0x1100ffa9
1100ff4d:	test   BYTE PTR [ebx],0x3d
1100ff50:	pop    ss
1100ff51:	push   ebp
1100ff52:	push   cs
1100ff53:	cmp    al,0x64
1100ff55:	lock cmp ah,BYTE PTR ss:[edx+0x1329945b]
1100ff5d:	(bad)  
1100ff5e:	lahf   
1100ff5f:	cdq    
1100ff60:	sahf   
1100ff61:	xchg   bh,bh
1100ff63:	clc    
1100ff64:	jmp    0x1100ffad
1100ff66:	ret    0xbb1e
1100ff69:	int3   
1100ff6a:	xor    al,0x46
1100ff6c:	ja     0x1100ffd4
1100ff6e:	(bad)  
1100ff6f:	adc    eax,0xd25007
1100ff74:	aam    0xa
1100ff76:	jmp    0x119912ba
1100ff7b:	repz adc dh,bh
1100ff7e:	and    al,bh
1100ff80:	jmp    0x1100ffa3
1100ff82:	in     eax,0xf6
1100ff84:	pop    ebx
1100ff85:	aad    0x3f
1100ff87:	jl     0x1100ff1f
1100ff89:	test   bh,bl
1100ff8b:	mov    ?,esp
1100ff8d:	pop    edx
1100ff8e:	clc    
1100ff8f:	aaa    
1100ff90:	adc    BYTE PTR [esp+eax*1+0x5410008b],0x75
1100ff98:	call   0x6b9:0x83500b
1100ff9f:	xor    eax,0x40416831
1100ffa4:	fwait
1100ffa5:	or     DWORD PTR [edx],ebx
1100ffa7:	add    al,0x8
1100ffa9:	or     dl,al
1100ffab:	mov    cl,0x2
1100ffad:	or     BYTE PTR [eax+eax*1],bh
1100ffb0:	fimul  DWORD PTR [ecx+0x1de86e41]
1100ffb6:	sub    BYTE PTR [ebp+0x11],ah
1100ffb9:	jbe    0x1100ffad
1100ffbb:	add    dl,BYTE PTR [ebx]
1100ffbd:	xlat   BYTE PTR ds:[ebx]
1100ffbe:	data16 mov bh,0xeb
1100ffc1:	xchg   esp,eax
1100ffc2:	fwait
1100ffc3:	icebp  
1100ffc4:	pop    ebp
1100ffc5:	pop    ds
1100ffc6:	fild   DWORD PTR [edi+esi*1]
1100ffc9:	std    
1100ffca:	and    BYTE PTR [esi],0x4f
1100ffcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1100ffce:	inc    eax
1100ffcf:	sbb    eax,0xf3651382
1100ffd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1100ffd5:	pop    ds
1100ffd6:	mov    bl,0xef
1100ffd8:	sub    cl,BYTE PTR [esi-0x40b470f1]
1100ffde:	adc    edx,DWORD PTR [ecx-0x63fe8c58]
1100ffe4:	cmp    bl,BYTE PTR [esi-0x41c0b36]
1100ffea:	xchg   ecx,eax
1100ffeb:	repz mov eax,eax
1100ffee:	push   edi
1100ffef:	retf   0x4815
1100fff2:	inc    esp
1100fff3:	sahf   
1100fff4:	scas   al,BYTE PTR es:[edi]
1100fff5:	loopne 0x11010022
1100fff7:	bound  edx,QWORD PTR fs:[edx-0x684a63e9]
1100fffe:	add    cl,BYTE PTR [ecx+0xca0354c]
11010004:	cmp    al,0xc2
11010006:	xchg   esi,eax
11010007:	cdq    
11010008:	xchg   DWORD PTR [eax],eax
1101000a:	call   0x539:0x163b82e0
11010011:	ins    BYTE PTR es:[edi],dx
11010012:	cmp    al,0x8d
11010014:	aaa    
11010015:	mov    edi,0xaa7e1168
1101001a:	push   edi
1101001b:	cwde   
1101001c:	aam    0xf9
1101001e:	cmp    dl,0x4e
11010021:	add    BYTE PTR [edi-0x7c507740],ah
11010027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11010028:	add    BYTE PTR [edi],al
1101002a:	jns    0x110100a1
1101002c:	jp     0x11010078
1101002e:	xor    BYTE PTR [ebp-0x74],bh
11010031:	xchg   BYTE PTR [edi-0x705e24ff],dl
11010037:	mov    eax,0x29ebfc1f
1101003c:	ucomiss xmm6,xmm6
1101003f:	stos   DWORD PTR es:[edi],eax
11010040:	sbb    al,0x97
11010042:	sbb    eax,DWORD PTR [ebp+0x7c231a38]
11010048:	fild   QWORD PTR [si-0x7]
1101004c:	ins    DWORD PTR es:[edi],dx
1101004d:	ret    0xfed8
11010050:	mov    al,0x23
11010052:	test   eax,0x9f85af3
11010057:	add    BYTE PTR [eax+edx*4-0x49802369],dh
1101005e:	push   es
1101005f:	add    BYTE PTR [ebp+0x204db02],dl
11010065:	add    BYTE PTR [ecx-0x5ee787d4],dh
1101006b:	inc    ebx
1101006c:	dec    edx
1101006d:	push   esp
1101006e:	sbb    ecx,DWORD PTR [eax]
11010070:	pop    eax
11010071:	jae    0x11010033
11010073:	mov    edx,0xf962ed01
11010078:	xor    BYTE PTR [eax-0x54],0xdd
1101007c:	and    BYTE PTR [ecx+0x14083509],bh
11010082:	fwait
11010083:	into   
11010084:	sbb    eax,0xe8980b68
11010089:	jl     0x110100f5
1101008b:	sub    eax,0x71ec34fb
11010090:	and    eax,0xe2b6f88c
11010095:	retf   
11010096:	mov    ebp,0x38399af4
1101009b:	std    
1101009c:	xor    eax,ecx
1101009e:	sbb    eax,0x4b8a738
110100a3:	pushf  
110100a4:	xor    eax,DWORD PTR [eax-0x1b6b8c4a]
110100aa:	fwait
110100ab:	jnp    0x110100b1
110100ad:	push   0x13eda25b
110100b2:	cmp    eax,0x602bd8e0
110100b7:	jns    0x110100b9
110100b9:	cmp    ebp,DWORD PTR [eax+0x135f6f90]
110100bf:	ja     0x110100fb
110100c1:	jns    0x11010049
110100c3:	jp     0x1101010a
110100c5:	mov    ds:0xab002720,eax
110100ca:	mov    edx,0x362e2b3c
110100cf:	scas   al,BYTE PTR es:[edi]
110100d0:	mov    eax,0x812bc28b
110100d5:	cmp    DWORD PTR [esi-0x70fd78f0],esi
110100db:	mov    WORD PTR [ebp+0x17],ds
110100de:	out    dx,al
110100df:	and    BYTE PTR [ebp+0x663e0914],bl
110100e5:	fidiv  WORD PTR ds:0xfadb9017
110100eb:	xchg   ecx,eax
110100ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
110100ed:	loopne 0x110100f1
110100ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
110100f0:	(bad)  
110100f1:	call   FWORD PTR [ebx-0x25]
110100f4:	popf   
110100f5:	jb     0x11010114
110100f7:	inc    esp
110100f8:	mov    ebx,0xd5c8a011
110100fd:	jle    0x11010100
110100ff:	or     esi,ebx
11010101:	fimul  WORD PTR [ebx]
11010103:	loopne 0x11010117
11010105:	stc    
11010106:	(bad)  
11010107:	in     eax,0xd5
11010109:	hlt    
1101010a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101010b:	and    edi,DWORD PTR [esi+0x4]
1101010e:	daa    
1101010f:	call   esi
11010111:	pop    esi
11010112:	lock xchg edx,eax
11010114:	addr16 in eax,dx
11010116:	pop    ecx
11010117:	xchg   esp,eax
11010118:	xor    al,0xf0
1101011a:	cmp    DWORD PTR [ebx-0x21],ebx
1101011d:	push   ebp
1101011e:	adc    BYTE PTR [ebp+esi*4+0x7d08054c],al
11010125:	jge    0x1101019c
11010127:	push   ds
11010128:	and    edi,DWORD PTR [edi]
1101012a:	or     DWORD PTR [edx],esi
1101012c:	or     DWORD PTR [ebx+0x349fbb6],ebp
11010132:	shl    dh,1
11010134:	mov    esi,0xb91aff25
11010139:	call   DWORD PTR [eax-0x5d8e0171]
1101013f:	shl    BYTE PTR [eax-0x3b],1
11010142:	inc    ecx
11010143:	cmp    ch,dh
11010145:	aam    0x60
11010147:	sbb    al,BYTE PTR [eax]
11010149:	xor    al,0x27
1101014b:	push   eax
1101014c:	add    al,BYTE PTR [edx]
1101014e:	or     eax,0xd054da06
11010153:	call   0x3483:0x3ce12d00
1101015a:	add    esp,ecx
1101015c:	sbb    eax,0x4303bcc8
11010161:	pop    ebx
11010162:	das    
11010163:	add    al,ch
11010165:	pop    ss
11010166:	pop    ecx
11010167:	cmp    cl,bh
11010169:	jge    0x11010106
1101016b:	cmp    eax,0x665fe6bc
11010170:	popa   
11010171:	shl    DWORD PTR [esi-0x6a0bcea7],cl
11010177:	sub    ebx,DWORD PTR [edi-0x2f1383e7]
1101017d:	pop    esp
1101017e:	or     eax,0x78089d8
11010183:	ror    DWORD PTR [edi+0x7c],0x0
11010187:	mov    cl,0x7a
11010189:	jb     0x11010207
1101018b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1101018c:	add    eax,DWORD PTR [ecx-0x4d9a653c]
11010192:	dec    ebx
11010193:	addr16 inc edi
11010195:	push   0xffb38d92
1101019a:	test   al,0x20
1101019c:	inc    edi
1101019d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1101019e:	dec    eax
1101019f:	cmp    dl,BYTE PTR [esi]
110101a1:	or     BYTE PTR [ebp-0x7cedfd0e],ah
110101a7:	push   esp
110101a8:	sub    ebx,DWORD PTR [edi+0x9]
110101ab:	js     0x11010152
110101ad:	add    eax,0x5489d36
110101b2:	cmc    
110101b3:	test   al,0x63
110101b5:	mov    dl,0x26
110101b7:	and    DWORD PTR [edx+ebx*2-0x65],esp
110101bb:	lahf   
110101bc:	aas    
110101bd:	daa    
110101be:	adc    eax,0xdaf2c3d3
110101c3:	cmp    esp,DWORD PTR [eax+0x66]
110101c6:	adc    edx,DWORD PTR [edx]
110101c8:	loop   0x1101021b
110101ca:	adc    BYTE PTR [eax+0xaf51027],0x9c
110101d1:	je     0x1101019d
110101d3:	das    
110101d4:	and    cl,BYTE PTR [eax-0xc2f3862]
110101da:	cmp    cl,BYTE PTR [ebp+0x22]
110101dd:	add    bl,BYTE PTR [edi+0x2f]
110101e0:	or     ecx,0x82ae3b8e
110101e6:	mov    edi,esi
110101e8:	out    0x61,al
110101ea:	mov    al,0xd3
110101ec:	fisub  DWORD PTR [esi-0x2]
110101ef:	pop    edx
110101f0:	inc    ebx
110101f1:	mov    eax,0x1d8000c1
110101f6:	sub    al,0x6
110101f8:	idiv   BYTE PTR [ebx]
110101fa:	jmp    0x7012:0x7e10f35f
11010201:	adc    dl,BYTE PTR [ebp+edi*1-0xe]
11010205:	pop    ebx
11010206:	xchg   edi,eax
11010207:	pop    ds
11010208:	imul   eax,DWORD PTR [eax],0x763f015d
1101020e:	in     al,0x8f
11010210:	mov    ds:0x1006a03f,eax
11010215:	add    ah,BYTE PTR [edx+0x41fa1a7]
1101021b:	ins    BYTE PTR es:[edi],dx
1101021c:	mov    ah,0xa0
1101021e:	cmc    
1101021f:	adc    al,0x58
11010221:	ds xor dh,0x59
11010225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11010226:	mov    fs,WORD PTR [ebx+0x16ce8139]
1101022c:	xor    al,0x81
1101022e:	push   edx
1101022f:	push   ecx
11010230:	xchg   ecx,eax
11010231:	test   DWORD PTR [esi+0x817d086],esi
11010237:	(bad)  
11010238:	jae    0x110101f8
1101023a:	xor    BYTE PTR [edi],al
1101023c:	pop    ss
1101023d:	pop    ebp
1101023e:	mov    esi,0x800a819
11010243:	leave  
11010244:	xor    BYTE PTR [ebp-0x7221c506],al
1101024a:	push   esp
1101024b:	jle    0x110101ff
1101024d:	out    dx,eax
1101024e:	cmp    eax,0x4c88f10b
11010253:	or     BYTE PTR [ecx+eax*4+0x6cd4974],0x59
1101025b:	inc    edi
1101025c:	(bad)  
1101025d:	out    0x51,eax
1101025f:	call   0xa8f3:0x57630339
11010266:	or     al,0x72
11010268:	mov    ebp,0x1aaa08de
1101026d:	in     eax,dx
1101026e:	xchg   ebx,eax
1101026f:	jmp    0xf37b:0x424b249d
11010276:	mov    edx,0x957078fb
1101027b:	rcl    BYTE PTR [ebx-0x6e9976aa],0xb3
11010282:	std    
11010283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11010284:	lock fdivp st(0),st
11010287:	jg     0x110102b2
11010289:	enter  0xa687,0xf0
1101028d:	loop   0x110102f2
1101028f:	sub    BYTE PTR [ebx-0x3f],dl
11010292:	xchg   ebx,eax
11010293:	aaa    
11010294:	inc    ecx
11010295:	fsin   
11010297:	xchg   ebp,eax
11010298:	push   esp
11010299:	cs mov dh,0x36
1101029c:	mov    edi,0x4d58b5c
110102a1:	aam    0xf5
110102a3:	and    cl,0x2c
110102a6:	mov    ah,0xd9
110102a8:	push   edx
110102a9:	ja     0x11010262
110102ab:	jecxz  0x1101024c
110102ad:	mov    ebp,0xc4e6bc3b
110102b2:	jge    0x11010278
110102b4:	mov    edi,0x7be9505f
110102b9:	sub    edi,esi
110102bb:	mov    ah,0x99
110102bd:	mov    ds,WORD PTR ds:0x82fab82d
110102c3:	lock pcmpgtb mm7,mm3
110102c7:	ret    
110102c8:	ror    DWORD PTR [eax+0x60],0x83
110102cc:	loopne 0x11010261
110102ce:	mov    al,0x5a
110102d0:	lahf   
110102d1:	mov    edi,0xb69f44d
110102d6:	cli    
110102d7:	shr    DWORD PTR [esi+0x3f],1
110102da:	shl    BYTE PTR [edx],cl
110102dc:	data16 aad 0x12
110102df:	daa    
110102e0:	pop    es
110102e1:	mov    ebp,0xe0f4c81f
110102e6:	sbb    al,BYTE PTR [eax+ecx*1]
110102e9:	or     BYTE PTR [ecx+ebp*1-0x14fe8660],dh
110102f0:	add    eax,0xd6027128
110102f5:	sbb    al,0x20
110102f7:	dec    ebp
110102f8:	pusha  
110102f9:	dec    edi
110102fa:	sbb    BYTE PTR [eax+0xe],ah
110102fd:	mov    ah,0x12
110102ff:	sbb    DWORD PTR ds:0x52a8be0f,0xffffffb4
11010306:	and    BYTE PTR [eax+0x1b],bh
11010309:	sbb    ah,bh
1101030b:	lods   al,BYTE PTR ds:[esi]
1101030c:	jle    0x1101038a
1101030e:	outs   dx,DWORD PTR ds:[esi]
1101030f:	or     BYTE PTR [eax+eiz*8-0x3a],ah
11010313:	dec    ebp
11010314:	bound  eax,QWORD PTR [esi]
11010316:	test   al,0x48
11010318:	aas    
11010319:	push   ds
1101031a:	sar    BYTE PTR [ecx-0x43],0xee
1101031e:	and    esi,esp
11010320:	cmovo  ebp,DWORD PTR [ecx+0x52]
11010324:	push   eax
11010325:	test   DWORD PTR ds:0xb5e02668,eax
1101032b:	jns    0x11010349
1101032d:	fst    DWORD PTR [ebp+0x3245c009]
11010333:	je     0x1101031c
11010335:	fiadd  WORD PTR es:[bx+si-0x6ffc]
1101033b:	retf   0xce9d
1101033e:	loop   0x110102f3
11010340:	shl    BYTE PTR [eax-0x76],1
11010343:	or     eax,0x31f163c0
11010348:	mov    esp,0xe4aa8700
1101034d:	retf   
1101034e:	pop    ecx
1101034f:	je     0x1101037b
11010351:	inc    eax
11010352:	xchg   DWORD PTR [eax+edx*2+0x157816ea],eax
11010359:	jb     0x110103b7
1101035b:	adc    BYTE PTR [esi-0x2e],bh
1101035e:	add    cl,BYTE PTR [eax+0x74d3d7ed]
11010364:	icebp  
11010365:	mov    cl,0x0
11010367:	jb     0x110103ca
11010369:	jbe    0x11010375
1101036b:	nop
1101036c:	dec    eax
1101036d:	cmc    
1101036e:	aaa    
1101036f:	(bad)  [ebx+0x7f0b92e6]
11010375:	ds loop 0x1101035b
11010378:	jno    0x1101036b
1101037a:	cli    
1101037b:	push   edi
1101037c:	scas   al,BYTE PTR es:[edi]
1101037d:	cwde   
1101037e:	or     DWORD PTR [edi-0x4fbe2201],0xd33ceeb
11010388:	xchg   ebx,eax
11010389:	das    
1101038a:	jg     0x11010389
1101038c:	bound  ebp,QWORD PTR [esi-0x4b]
1101038f:	(bad)  
11010390:	out    0x6d,al
11010392:	jge    0x11010343
11010394:	aam    0xef
11010396:	out    0x31,al
11010398:	repnz xchg ebx,eax
1101039a:	call   0xfcb9:0xb6f7b34e
110103a1:	ret    0x2067
110103a4:	push   es
110103a5:	dec    ecx
110103a6:	lock xlat BYTE PTR ds:[ebx]
110103a8:	inc    ebx
110103a9:	into   
110103aa:	cli    
110103ab:	aaa    
110103ac:	mov    bh,BYTE PTR [edi+0x42]
110103af:	scas   al,BYTE PTR es:[edi]
110103b0:	cli    
110103b1:	addr16 xchg ebx,eax
110103b3:	sub    esi,0x8
110103b6:	or     DWORD PTR [eax],eax
110103b8:	ret    0x6ca8
110103bb:	add    DWORD PTR [eax-0x7d],eax
110103be:	inc    eax
110103bf:	fwait
110103c0:	cmp    DWORD PTR [eax+0x2],edx
110103c3:	xor    DWORD PTR [ebp-0x13f65030],0x81000b01
110103cd:	jns    0x110103d4
110103cf:	or     al,0xb5
110103d1:	mov    ch,0x82
110103d3:	aas    
110103d4:	test   DWORD PTR [ebx],0x65c1cc97
110103da:	xlat   BYTE PTR ds:[ebx]
110103db:	xchg   BYTE PTR [edi+0x54],ah
110103de:	mov    DWORD PTR [edi-0x5f],edx
110103e1:	adc    dh,BYTE PTR [edi]
110103e3:	pusha  
110103e4:	pop    edx
110103e5:	and    DWORD PTR [esi+ebx*8+0x8],eax
110103e9:	or     esi,DWORD PTR [edi-0x1c]
110103ec:	pushf  
110103ed:	inc    eax
110103ee:	jmp    0x19ae:0x80862916
110103f5:	sub    eax,0xc449a57d
110103fa:	sub    eax,0x6dc786c9
110103ff:	enter  0x3f77,0xa2
11010403:	mov    ecx,0x464114fd
11010408:	and    dh,0xd5
1101040b:	and    eax,0x6b52eb93
11010410:	add    bl,BYTE PTR [esi]
11010412:	arpl   si,sp
11010414:	(bad)  
11010415:	xchg   ebp,eax
11010416:	pop    esp
11010417:	xchg   DWORD PTR [esi-0x53],edx
1101041a:	sub    edx,DWORD PTR [ecx+0x4920aca3]
11010420:	pushf  
11010421:	dec    edx
11010422:	int3   
11010423:	mov    ebx,0xd8c6d8ac
11010428:	push   ebx
11010429:	lods   eax,DWORD PTR ds:[esi]
1101042a:	inc    ecx
1101042b:	(bad)
1101042e:	das    
1101042f:	add    eax,edx
11010431:	cmp    DWORD PTR [ebp+0x6a],esp
11010434:	xor    ch,BYTE PTR [esi]
11010436:	cmp    al,0xaa
11010438:	cs xchg esi,eax
1101043a:	add    edi,DWORD PTR [eax+0x54]
1101043d:	cwde   
1101043e:	das    
1101043f:	xchg   edi,eax
11010440:	add    ebx,eax
11010442:	rol    BYTE PTR [ebp+0x1a],cl
11010445:	(bad)  
11010447:	cmp    al,0x50
11010449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1101044a:	or     bh,BYTE PTR [eax]
1101044c:	retf   
1101044d:	popa   
1101044e:	fsubr  st,st(3)
11010450:	jno    0x1101044e
11010452:	ds pop esi
11010454:	clc    
11010455:	mov    WORD PTR [edi],es
11010457:	rcr    BYTE PTR [ebx+0x714fbe5e],0x60
1101045e:	sub    BYTE PTR [edx],cl
11010460:	repz and dl,BYTE PTR [eax+0x43f85180]
11010467:	nop
11010468:	iret   
11010469:	xor    dl,al
1101046b:	das    
1101046c:	xor    al,0x12
1101046e:	idiv   BYTE PTR [eax]
11010470:	arpl   WORD PTR [edi-0x604b93a6],cx
11010476:	push   ds
11010477:	cmc    
11010478:	ret    
11010479:	mov    dl,0x1e
1101047b:	fisubr DWORD PTR [ebp+0x7f]
1101047e:	add    cl,BYTE PTR [edi]
11010480:	sub    edi,esp
11010482:	mov    bl,0x78
11010484:	sahf   
11010485:	test   al,0x1
11010487:	add    al,0xa1
11010489:	popf   
1101048a:	push   edx
1101048b:	dec    ebx
1101048c:	dec    ecx
1101048d:	adc    esp,DWORD PTR [eax]
1101048f:	shr    DWORD PTR ds:0x40950b05,0xc0
11010496:	jb     0x1101049b
11010498:	push   esi
11010499:	sbb    esp,DWORD PTR [eax]
1101049b:	bound  esi,QWORD PTR [eax]
1101049d:	add    BYTE PTR [eax-0x49],0x39
110104a1:	push   eax
110104a2:	aas    
110104a3:	loopne 0x11010468
110104a5:	push   0x10
110104a7:	mov    al,ds:0xac21a160
110104ac:	imul   esp,DWORD PTR [ebx],0xc
110104af:	xchg   ebx,eax
110104b0:	jle    0x11010459
110104b2:	into   
110104b3:	mov    eax,ds:0x2eeb3a54
110104b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110104b9:	arpl   sp,bx
110104bb:	jbe    0x11010454
110104bd:	xchg   DWORD PTR [edi],edi
110104bf:	ds ins DWORD PTR es:[edi],dx
110104c1:	mov    dh,0x16
110104c3:	mov    esi,0x3ef81a31
110104c8:	shl    DWORD PTR [edx],cl
110104ca:	sbb    al,0xaa
110104cc:	clc    
110104cd:	and    edx,DWORD PTR [eax-0x2f1f8c]
110104d3:	inc    esi
110104d4:	ins    BYTE PTR es:[edi],dx
110104d5:	repz mov ebx,DWORD PTR [edx-0x3c7c25b2]
110104dc:	cmp    ebx,eax
110104de:	ins    DWORD PTR es:[edi],dx
110104df:	adc    BYTE PTR [edx-0x8],dl
110104e2:	cdq    
110104e3:	stos   BYTE PTR es:[edi],al
110104e4:	in     eax,0xb0
110104e6:	jo     0x110104bb
110104e8:	sub    al,ch
110104ea:	xor    BYTE PTR [ebx-0x5e6c8cd1],dh
110104f0:	push   0xffffffed
110104f2:	popf   
110104f3:	push   edx
110104f4:	int    0xc9
110104f6:	sub    eax,DWORD PTR [eax-0x3e]
110104f9:	pop    DWORD PTR [edx]
110104fb:	call   0xd0492e2c
11010500:	in     eax,0x84
11010502:	sbb    al,0x47
11010504:	and    DWORD PTR [eax+0x33],ebp
11010507:	add    DWORD PTR [edi-0x257da333],ecx
1101050d:	dec    esi
1101050e:	mov    dl,0xd
11010510:	inc    ecx
11010511:	scas   al,BYTE PTR es:[edi]
11010512:	cmp    DWORD PTR [esi],0xbb4e0b95
11010518:	sub    ch,cl
1101051a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101051b:	adc    eax,0x3b93f0a
11010520:	sbb    eax,0xf3df9b68
11010525:	std    
11010526:	mov    BYTE PTR [ecx-0x4720616f],bl
1101052c:	xor    bh,BYTE PTR [esi-0x2]
1101052f:	(bad)  
11010530:	mov    dh,0x20
11010532:	pop    esp
11010533:	add    eax,0x62b336fe
11010538:	add    eax,0x879ef99c
1101053d:	ret    0xf683
11010540:	pop    ebp
11010541:	ret    
11010542:	jge    0x110104c4
11010544:	cli    
11010545:	inc    esi
11010546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11010547:	or     DWORD PTR [eax-0x49537afa],esp
1101054d:	test   BYTE PTR ds:0x74a7ea86,bh
11010553:	mov    ebx,gs
11010555:	xor    edx,eax
11010557:	outs   dx,DWORD PTR ds:[esi]
11010558:	and    bl,bl
1101055a:	pop    ds
1101055b:	sbb    cl,BYTE PTR [ecx]
1101055d:	push   0xcf524a10
11010562:	dec    ebx
11010563:	lods   al,BYTE PTR ds:[esi]
11010564:	mov    edi,0x2efe15
11010569:	and    BYTE PTR [ebp+0x6ae4037f],dh
1101056f:	mov    edi,0x5c2a8006
11010574:	cmc    
11010575:	sub    dl,BYTE PTR [edx+eax*8]
11010578:	adc    cl,BYTE PTR [eax]
1101057a:	pop    eax
1101057b:	out    dx,eax
1101057c:	inc    eax
1101057d:	mov    DWORD PTR [ebx],edx
1101057f:	sub    ch,al
11010581:	or     ebp,DWORD PTR [ebp+eax*4+0x25026b2]
11010588:	and    DWORD PTR [esi],0x43685b2d
1101058e:	mov    ecx,eax
11010590:	push   esi
11010591:	adc    dl,BYTE PTR [eax]
11010593:	call   0x7502:0xe66d40c1
1101059a:	mov    bh,BYTE PTR [edi-0x7a63001]
110105a0:	retf   0x948d
110105a3:	and    cl,BYTE PTR [ecx+ecx*8]
110105a6:	es jne 0x1101055b
110105a9:	pop    edi
110105aa:	xchg   edx,eax
110105ab:	push   edi
110105ac:	or     DWORD PTR ds:0x60608066,eax
110105b2:	xchg   ecx,eax
110105b3:	xor    edi,DWORD PTR [eax]
110105b5:	jbe    0x110105b3
110105b7:	add    DWORD PTR [eax+0x71],edx
110105ba:	ja     0x10658976
110105c0:	dec    ecx
110105c1:	call   0x9ff7def3
110105c6:	ins    BYTE PTR es:[edi],dx
110105c7:	js     0x11010636
110105c9:	xlat   BYTE PTR ds:[ebx]
110105ca:	rol    ch,cl
110105cc:	sub    ebp,edi
110105ce:	add    BYTE PTR [ebp-0xb],ah
110105d1:	push   ecx
110105d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
110105d3:	gs xor cl,ah
110105d6:	leave  
110105d7:	in     al,0xa0
110105d9:	jmp    0x6546a8d6
110105de:	push   0x44
110105e0:	push   es
110105e1:	rol    BYTE PTR [esi],cl
110105e3:	cmp    al,0x6a
110105e5:	add    BYTE PTR [eax],ah
110105e7:	aad    0x88
110105e9:	jae    0x1101060a
110105eb:	jg     0x110105db
110105ed:	sub    eax,0xa51dfda0
110105f2:	push   cs
110105f3:	stos   DWORD PTR es:[edi],eax
110105f4:	rcr    DWORD PTR [edx],1
110105f6:	xchg   esp,eax
110105f7:	pop    es
110105f8:	adc    ch,0x73
110105fb:	push   eax
110105fc:	and    edi,DWORD PTR [edi+0x100ae5c]
11010602:	(bad)  
11010603:	das    
11010604:	shr    DWORD PTR [edi+edi*1+0x1],cl
11010608:	test   BYTE PTR [eax+0xe],ch
1101060b:	push   es
1101060c:	xor    al,0x84
1101060e:	sbb    al,0x31
11010610:	out    0x86,al
11010612:	and    DWORD PTR [ebx],0xf
11010615:	fistp  WORD PTR [ecx]
11010617:	(bad)  
11010618:	jmp    0x79bd:0xcc22bff5
1101061f:	(bad)  
11010620:	stc    
11010621:	stos   DWORD PTR es:[edi],eax
11010622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11010623:	jnp    0x11010695
11010625:	lea    edi,[esi+0x61]
11010628:	sti    
11010629:	xchg   ebp,eax
1101062a:	in     eax,dx
1101062b:	cmp    edx,DWORD PTR [edi+eax*2]
1101062e:	adc    BYTE PTR [esi+edi*8+0x63],ch
11010632:	adc    edi,DWORD PTR es:[esi-0x4a]
11010636:	(bad)  
11010637:	and    DWORD PTR [ecx],ecx
11010639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1101063a:	inc    BYTE PTR es:[edx]
1101063d:	or     BYTE PTR [edx+edx*8+0x3109697c],dl
11010644:	add    ch,BYTE PTR [ebp-0x4bbf010b]
1101064a:	or     cl,BYTE PTR [ebx]
1101064c:	add    ah,ah
1101064e:	out    0x8e,eax
11010650:	sbb    al,al
11010652:	dec    edx
11010653:	dec    eax
11010654:	add    al,dl
11010656:	push   es
11010657:	add    ah,BYTE PTR ds:0x40fa04e
1101065d:	fidiv  DWORD PTR [ecx+eax*4]
11010660:	xchg   edx,eax
11010661:	fwait
11010662:	lock adc DWORD PTR [ebx-0xf02ace2],eax
11010669:	(bad)  
1101066b:	in     al,dx
1101066c:	mov    al,0x8
1101066e:	add    ch,BYTE PTR [ebp-0x676cbbf7]
11010674:	add    BYTE PTR [edx-0x13],bl
11010677:	mov    bh,0x24
11010679:	movd   esi,mm7
1101067c:	call   0x7df24e8
11010681:	xchg   ecx,eax
11010682:	or     dh,BYTE PTR [esi]
11010684:	outs   dx,BYTE PTR ds:[esi]
11010685:	fsub   QWORD PTR [eax+edi*4+0x2]
11010689:	dec    ebx
1101068a:	add    cl,BYTE PTR [edx+0x40]
1101068d:	adc    dh,bh
1101068f:	sbb    al,0xbf
11010691:	and    eax,0xec0810f
11010696:	cmp    ecx,DWORD PTR [edi]
11010698:	js     0x110106ce
1101069a:	dec    ecx
1101069b:	mov    eax,ds:0xaf9332c3
110106a0:	call   0x6e40:0xcf22a2f8
110106a7:	addr16 sub edi,esi
110106aa:	dec    edi
110106ab:	inc    esi
110106ac:	repnz lock (bad) 
110106af:	jb     0x110106b5
110106b1:	loopne 0x110106c7
110106b3:	test   al,0xd0
110106b5:	mov    ch,0xd2
110106b7:	inc    esp
110106b8:	pushf  
110106b9:	mov    ecx,0x38236750
110106be:	mov    ebx,0x30b272f0
110106c3:	aad    0x0
110106c5:	xor    al,0x60
110106c7:	inc    eax
110106c8:	pop    ss
110106c9:	pop    eax
110106ca:	mov    ch,ch
110106cc:	pop    ss
110106cd:	sahf   
110106ce:	inc    ecx
110106cf:	std    
110106d0:	(bad)  
110106d1:	sti    
110106d2:	add    edi,ebx
110106d4:	inc    esp
110106d5:	push   ss
110106d6:	int3   
110106d7:	arpl   WORD PTR [esi],sp
110106d9:	push   ss
110106da:	mov    eax,ds:0x2373cf5
110106df:	pop    ebp
110106e0:	xchg   DWORD PTR [edx],edi
110106e2:	xchg   BYTE PTR [ebp+0x94f1434],cl
110106e8:	inc    esp
110106e9:	(bad)  
110106eb:	in     al,dx
110106ec:	mov    edi,0xf7ec047c
110106f1:	adc    BYTE PTR [ebp+0x687e1b45],0x1c
110106f8:	inc    eax
110106f9:	call   DWORD PTR [bp+si-0x15]
110106fd:	es mov ah,0xf9
11010700:	test   eax,0x904f486d
11010705:	in     eax,dx
11010706:	jb     0x1101072a
11010708:	jmp    0x11010752
1101070a:	add    ebp,DWORD PTR [eax]
1101070c:	or     edi,edi
1101070e:	jp     0x11010720
11010710:	push   cs
11010711:	rol    BYTE PTR [esi+0x1fb76afe],0xd9
11010718:	(bad)  
11010719:	push   esi
1101071a:	clc    
1101071b:	imul   ecx,DWORD PTR [ecx-0x2996c43],0xb0102c59
11010725:	mov    ecx,0x50922502
1101072a:	repz add cl,BYTE PTR [edi-0x2f5703e7]
11010731:	sbb    al,0x20
11010733:	out    dx,eax
11010734:	inc    eax
11010735:	inc    ebx
11010736:	sbb    eax,0x706c12cb
1101073b:	xchg   edi,eax
1101073c:	ret    0xd5cb
1101073f:	lods   al,BYTE PTR ds:[esi]
11010740:	pushf  
11010741:	(bad)  
11010742:	push   es
11010743:	in     al,dx
11010744:	jmp    ecx
11010746:	sti    
11010747:	cdq    
11010748:	lahf   
11010749:	fwait
1101074a:	test   DWORD PTR [ebx-0x5c71c541],ecx
11010750:	mov    edi,0x51dd0105
11010755:	pushf  
11010756:	sbb    edx,DWORD PTR ds:0xda75a511
1101075d:	adc    ecx,DWORD PTR [eax+0x23]
11010760:	xchg   ebp,eax
11010761:	sbb    ah,BYTE PTR [ebp-0x38]
11010764:	std    
11010765:	in     eax,0xb4
11010767:	add    BYTE PTR [edx+0x45],dl
1101076a:	pop    ebx
1101076b:	fadd   QWORD PTR [edi+0x7c]
1101076e:	repnz es rcl BYTE PTR cs:[ebx-0x40],0x4c
11010775:	out    dx,al
11010776:	jmp    0x82d9:0x97b90a6b
1101077d:	push   0x3555008e
11010782:	pop    ss
11010783:	int3   
11010784:	xor    DWORD PTR [edx+0x1074dd10],esi
1101078a:	xor    DWORD PTR [edi],edi
1101078c:	mov    esp,0xa5417815
11010791:	mov    ah,BYTE PTR [edi+0x63cdf6e8]
11010797:	sub    dh,BYTE PTR [ebp+0x3cfad49f]
1101079d:	ror    BYTE PTR [eax-0x33],0xf6
110107a1:	jmp    0x110107b7
110107a3:	and    DWORD PTR [eax],ecx
110107a5:	pusha  
110107a6:	out    dx,al
110107a7:	or     eax,0x374d5baf
110107ac:	out    dx,al
110107ad:	mov    esp,0x28d34bb8
110107b2:	ds or  eax,0x9ecc7dbf
110107b8:	lock xchg edi,eax
110107bb:	in     eax,dx
110107bc:	and    esp,esi
110107be:	adc    al,0xb4
110107c0:	sti    
110107c1:	div    DWORD PTR [ebp+0x50886]
110107c7:	call   0x58b00def
110107cc:	mov    dh,0x7f
110107ce:	inc    edx
110107cf:	loope  0x110107e0
110107d1:	sub    eax,0x3f092b08
110107d6:	xor    edi,edi
110107d8:	ss loop 0x110107aa
110107db:	stos   BYTE PTR es:[edi],al
110107dc:	(bad)  
110107dd:	aas    
110107de:	xchg   DWORD PTR [ebp+edi*8+0x27],ebx
110107e2:	or     eax,0x12fc8740
110107e7:	add    BYTE PTR [eax],dl
110107e9:	test   al,0xd0
110107eb:	cmp    edx,esp
110107ed:	enter  0x9f8f,0xd1
110107f1:	add    al,0x8
110107f3:	ret    0xa14d
110107f6:	mov    edx,0x90422161
110107fb:	add    BYTE PTR [eax+0x68312d3e],al
11010801:	cmp    DWORD PTR [ecx],eax
11010803:	sbb    esi,DWORD PTR [ecx]
11010805:	push   0x5cda0773
1101080a:	test   ebx,ebp
1101080c:	es jp  0x1101086b
1101080f:	cmc    
11010810:	ret    
11010811:	pop    esi
11010812:	idiv   DWORD PTR [eax+0x6c3bcdc7]
11010818:	cwde   
11010819:	mov    ?,WORD PTR [ecx]
1101081b:	push   esp
1101081c:	push   ebx
1101081d:	or     cl,ah
1101081f:	add    BYTE PTR [edi-0x2],ch
11010822:	shr    BYTE PTR [esp+edi*8],1
11010825:	clc    
11010826:	out    0xb3,eax
11010828:	inc    eax
11010829:	ret    
1101082a:	xchg   edx,eax
1101082b:	es out dx,eax
1101082d:	pop    eax
1101082e:	rcl    BYTE PTR [ebp+0xa],0xaf
11010832:	adc    BYTE PTR ds:0x4e400f54,al
11010838:	fwait
11010839:	jle    0x110108b1
1101083b:	cmp    al,0x22
1101083d:	xchg   BYTE PTR [esi+0x7e763409],dl
11010843:	pop    ds
11010844:	jb     0x1101083e
11010846:	xchg   ecx,eax
11010847:	push   ebx
11010848:	sbb    BYTE PTR [ebx],ch
1101084a:	xor    eax,0x34e68f5a
1101084f:	repnz (bad) 
11010851:	setle  BYTE PTR [ebx]
11010854:	and    BYTE PTR [edi],bh
11010856:	push   ds
11010857:	inc    DWORD PTR [esi-0x44]
1101085a:	or     BYTE PTR [ebp-0x4],cl
1101085d:	leave  
1101085e:	push   0xffffffbf
11010860:	(bad)  
11010861:	repnz loopne 0x11010882
11010864:	mov    ah,dl
11010866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11010867:	jmp    0x3ce23c30
1101086c:	dec    ebp
1101086d:	mov    esi,0x27864061
11010872:	add    DWORD PTR [ecx+0x23],edx
11010875:	mov    dh,0xce
11010877:	push   edi
11010878:	test   al,0x74
1101087a:	push   ebp
1101087b:	pusha  
1101087c:	pop    ebp
1101087d:	int    0xd7
1101087f:	shr    DWORD PTR [edi-0x7],cl
11010882:	jno    0x11010841
11010884:	xchg   edi,eax
11010885:	sub    DWORD PTR ds:0x9880,esp
1101088a:	sub    ebx,esi
1101088c:	cmp    al,0x17
1101088e:	push   eax
1101088f:	pusha  
11010890:	repz rcr ch,0x57
11010894:	ret    
11010895:	jns    0x11010886
11010897:	cmp    ecx,DWORD PTR [eax]
11010899:	(bad)  
1101089a:	lods   al,BYTE PTR ds:[esi]
1101089b:	sbb    ah,cl
1101089d:	rep lods al,BYTE PTR ds:[esi]
1101089f:	mov    edx,0xa018474d
110108a4:	add    eax,ebx
110108a6:	jge    0x11010918
110108a8:	mov    ebx,0xba7e1079
110108ad:	add    eax,0x6000b5c1
110108b2:	jge    0x110108b2
110108b4:	jp     0x1101089a
110108b6:	mov    bh,0x1a
110108b8:	add    BYTE PTR [ecx+0x6ff5cd80],al
110108be:	push   ebx
110108bf:	std    
110108c0:	pop    ecx
110108c1:	clc    
110108c2:	add    edi,ebx
110108c4:	clc    
110108c5:	adc    al,0x88
110108c7:	push   es
110108c8:	rol    BYTE PTR [esi],1
110108ca:	add    al,BYTE PTR [esp+eax*1]
110108cd:	xchg   ebx,eax
110108ce:	add    BYTE PTR [eax+0x49],0x13
110108d2:	mov    al,0x60
110108d4:	adc    BYTE PTR [esi-0x2b0c19dd],dl
110108da:	sbb    ah,BYTE PTR [ecx-0x3d]
110108dd:	sub    DWORD PTR ss:[ebx],eax
110108e0:	repnz rcr edi,1
110108e3:	adc    dh,BYTE PTR [esi]
110108e5:	fnstcw WORD PTR [edx-0x21a8806e]
110108eb:	xor    bh,BYTE PTR [ecx+edi*8-0x7a]
110108ef:	jno    0x110108d5
110108f1:	add    edx,edx
110108f3:	mov    bl,0x93
110108f5:	dec    ebp
110108f6:	sub    dl,BYTE PTR [ecx+eiz*8-0x2d]
110108fa:	call   FWORD PTR [edx-0x3c1235c0]
11010900:	fdivr  st(5),st
11010902:	inc    edi
11010903:	scas   al,BYTE PTR es:[edi]
11010904:	ds and esp,edi
11010907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11010908:	adc    ecx,DWORD PTR [ebx+0x6f0d8a50]
1101090e:	aad    0x66
11010910:	push   edx
11010911:	xchg   ebx,eax
11010912:	ror    DWORD PTR [esi+ebx*4+0x6ce97024],0x24
1101091a:	mov    esp,0x1e800bc9
1101091f:	add    bl,BYTE PTR [edx]
11010921:	xor    DWORD PTR [ecx+0x3cae4b4c],ebx
11010927:	(bad)  
11010928:	add    al,BYTE PTR [eax]
1101092a:	jb     0x1101090d
1101092c:	add    al,0x5
1101092e:	es dec edx
11010930:	int    0xe6
11010932:	imul   esi,DWORD PTR [edx],0x35
11010935:	cld    
11010936:	mov    bl,0xeb
11010938:	add    DWORD PTR [eax+0x26],edx
1101093b:	pop    es
1101093c:	test   ecx,esi
1101093e:	shl    BYTE PTR [ebx+0x57],cl
11010941:	leave  
11010942:	inc    edi
11010943:	stos   BYTE PTR es:[edi],al
11010944:	push   0xffffffb0
11010946:	js     0x11010979
11010948:	call   0x40f3:0x12f00ede
1101094f:	(bad)  
11010950:	lods   eax,DWORD PTR ds:[si]
11010952:	les    ebp,FWORD PTR [ebx+0x6f]
11010955:	inc    edi
11010956:	js     0x11010926
11010958:	shl    DWORD PTR [eax-0x16],cl
1101095b:	sub    esi,edi
1101095d:	xchg   DWORD PTR [edi+0x3d],esp
11010960:	jno    0x11010919
11010962:	in     al,dx
11010963:	cmp    eax,0x28d4f7ea
11010968:	and    ah,BYTE PTR [ebx-0x32c38f66]
1101096e:	loopne 0x11010990
11010970:	outs   dx,DWORD PTR ds:[esi]
11010971:	mov    dh,0x9f
11010973:	xor    BYTE PTR [edi+esi*4+0x6101eed4],bh
1101097a:	(bad)  
1101097b:	xor    eax,0x7d1367f9
11010980:	hlt    
11010981:	test   al,0xaf
11010983:	pop    ss
11010984:	dec    ebx
11010985:	(bad)  
11010986:	jmp    0xf8cdc913
1101098b:	(bad)  
1101098d:	add    BYTE PTR [esp+ecx*2-0x4a],al
11010991:	cmp    BYTE PTR [edi+0x23402018],0x3b
11010998:	adc    DWORD PTR [eax-0x61fb0a83],eax
1101099e:	cmp    bl,bh
110109a0:	daa    
110109a1:	xlat   BYTE PTR ds:[ebx]
110109a2:	or     BYTE PTR [esi],dl
110109a4:	push   0xb
110109a6:	fcomp  DWORD PTR [eax+0x75f715a4]
110109ac:	lock pop ss
110109ae:	out    0x8f,eax
110109b0:	loope  0x1101094c
110109b2:	pop    ebx
110109b3:	aaa    
110109b4:	xor    DWORD PTR [ecx],edx
110109b6:	sub    BYTE PTR [edi-0x9dfecd8],bh
110109bc:	pushf  
110109bd:	mov    edx,0x62128653
110109c2:	cmp    al,0xa
110109c4:	mov    ds:0x1de0b0ab,al
110109c9:	shl    BYTE PTR [esi-0x6562f4d3],1
110109cf:	add    eax,0xda751988
110109d4:	add    eax,0xa14a4947
110109d9:	dec    ebp
110109da:	inc    edx
110109db:	inc    edx
110109dc:	fnstcw WORD PTR [ebp+0x78]
110109df:	inc    ecx
110109e0:	lods   al,BYTE PTR ds:[esi]
110109e1:	outs   dx,BYTE PTR ds:[esi]
110109e2:	jnp    0x110109a9
110109e4:	or     eax,DWORD PTR [eax-0x5a]
110109e7:	mov    fs,WORD PTR [edi+0x6f4a94cd]
110109ed:	push   edx
110109ee:	xor    DWORD PTR [ebp+0x238dbd9f],0xffffffd0
110109f5:	push   ecx
110109f6:	jl     0x110109b2
110109f8:	sahf   
110109f9:	and    al,ch
110109fb:	jecxz  0x11010a00
110109fd:	or     dh,BYTE PTR [ebx-0x1d]
11010a00:	sbb    dl,dl
11010a02:	or     bl,BYTE PTR ds:0x88a62baa
11010a08:	inc    esp
11010a09:	cmc    
11010a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11010a0b:	sti    
11010a0c:	push   0x6a
11010a0e:	sbb    al,BYTE PTR [eax+0x3f4592a0]
11010a14:	jp     0x11010a47
11010a16:	or     DWORD PTR [esi],ecx
11010a18:	jnp    0x110109ee
11010a1a:	dec    esi
11010a1b:	lock (bad) 
11010a1d:	mov    bh,0x3f
11010a1f:	cmp    al,0xce
11010a21:	jmp    0xc53a:0x4d18f254
11010a28:	push   edi
11010a29:	pop    ebx
11010a2a:	test   ecx,ebp
11010a2c:	inc    ebp
11010a2d:	adc    dh,bh
11010a2f:	rol    BYTE PTR [edx+0x6e9a9310],1
11010a35:	inc    ebx
11010a36:	jle    0x11010a81
11010a38:	mov    eax,0x962cb7d7
11010a3d:	add    ah,dl
11010a3f:	mov    ds:0x6dfda93f,eax
11010a44:	mov    ds:0x56fd457f,eax
11010a49:	xchg   edi,eax
11010a4a:	lock pop edx
11010a4c:	sub    BYTE PTR [eax],cl
11010a4e:	fdivr  DWORD PTR [eax]
11010a50:	add    DWORD PTR [ebx],edi
11010a52:	cli    
11010a53:	xchg   edi,eax
11010a54:	stos   BYTE PTR es:[edi],al
11010a55:	or     edi,DWORD PTR [edi]
11010a57:	arpl   WORD PTR [ecx],sp
11010a59:	dec    edi
11010a5a:	iret   
11010a5b:	jp     0x11010a64
11010a5d:	mov    ah,0x2a
11010a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11010a60:	fwait
11010a61:	mov    dh,0xf1
11010a63:	sbb    ch,ah
11010a65:	in     eax,dx
11010a66:	add    BYTE PTR [ebp-0x11],dh
11010a69:	sti    
11010a6a:	ja     0x11010a66
11010a6c:	cmp    BYTE PTR [edi+0x40],bh
11010a6f:	or     al,0x11
11010a71:	(bad)  
11010a72:	(bad)  
11010a73:	mov    ds:0xff0a2040,al
11010a78:	lds    ebx,FWORD PTR [edi]
11010a7a:	mov    ds:0x12261d0a,eax
11010a7f:	icebp  
11010a80:	and    esi,DWORD PTR [eax*1-0x4760a2c0]
11010a87:	mov    ah,0x68
11010a89:	jg     0x11010a41
11010a8b:	stc    
11010a8c:	fxch   st(6)
11010a8e:	xchg   edi,eax
11010a8f:	test   eax,0xad88d2ca
11010a94:	mov    BYTE PTR [ecx-0xf603954],dh
11010a9a:	add    al,BYTE PTR [eax+0x529a7c6a]
11010aa0:	retf   
11010aa1:	jae    0x11010a4f
11010aa3:	inc    edx
11010aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11010aa5:	jp     0x11010b12
11010aa7:	in     eax,dx
11010aa8:	inc    edx
11010aa9:	imul   ebx,DWORD PTR [esi],0x92f2b39
11010aaf:	cmp    DWORD PTR [esi-0x18],edx
11010ab2:	inc    ebp
11010ab3:	imul   edx,DWORD PTR [ecx-0x7b],0x40
11010ab7:	dec    esp
11010ab8:	test   BYTE PTR [esi],bl
11010aba:	fld    QWORD PTR [edi+0x2]
11010abd:	or     BYTE PTR [ecx],dl
11010abf:	sub    bl,dl
11010ac1:	cs push ss
11010ac3:	cld    
11010ac4:	int3   
11010ac5:	jl     0x11010abd
11010ac7:	jmp    0x4794:0x8ff0543e
11010ace:	adc    ebx,DWORD PTR [esi]
11010ad0:	inc    ebx
11010ad1:	scas   al,BYTE PTR es:[edi]
11010ad2:	inc    edi
11010ad3:	(bad)  
11010ad4:	and    al,0x90
11010ad6:	lock jnp 0x11010ab1
11010ad9:	jno    0x11010a62
11010adb:	mov    ch,0x70
11010add:	cli    
11010ade:	mov    ebx,0x3c070c1f
11010ae3:	xor    BYTE PTR [edi-0x39d2412b],bl
11010ae9:	fcomip st,st(6)
11010aeb:	(bad)  
11010aec:	mov    dh,0x3e
11010aee:	popa   
11010aef:	xlat   BYTE PTR ds:[ebx]
11010af0:	inc    ebp
11010af1:	mov    dh,0xff
11010af3:	cwde   
11010af4:	arpl   WORD PTR [esi],dx
11010af6:	sub    bh,ah
11010af8:	mov    eax,ds:0xd5f5485
11010afd:	add    BYTE PTR [ebp-0x4a],ch
11010b00:	aas    
11010b01:	gs add eax,0x801345ea
11010b07:	and    eax,0x2d4e6ff2
11010b0c:	push   ss
11010b0d:	add    BYTE PTR [eax-0x639f14e1],bh
11010b13:	test   DWORD PTR [edx+0x74f72680],eax
11010b19:	adc    DWORD PTR [ecx-0x3],0xd1c082dd
11010b20:	or     edi,DWORD PTR [edx+0x7c]
11010b23:	in     al,0x1d
11010b25:	or     BYTE PTR [ecx],cl
11010b27:	inc    esp
11010b28:	push   esi
11010b29:	adc    ebx,DWORD PTR [eax-0x78fe4a60]
11010b2f:	(bad)  
11010b30:	in     eax,dx
11010b31:	mov    edx,edi
11010b33:	push   edi
11010b34:	lock dec BYTE PTR [edi-0x32]
11010b38:	aad    0x1d
11010b3a:	jg     0x11010b52
11010b3c:	dec    eax
11010b3d:	dec    eax
11010b3e:	ins    DWORD PTR es:[edi],dx
11010b3f:	pop    ecx
11010b40:	jo     0x11010ba4
11010b42:	sti    
11010b43:	push   ebx
11010b44:	adc    BYTE PTR [eax-0x767fff2a],ah
11010b4a:	aaa    
11010b4b:	popf   
11010b4c:	mov    bh,0xe
11010b4e:	push   si
11010b50:	push   ds
11010b51:	cmp    edi,DWORD PTR [edx+0x41e3763a]
11010b57:	idiv   BYTE PTR [ebx]
11010b59:	adc    ebp,DWORD PTR [ebp+0x6a]
11010b5c:	mov    dl,0x4e
11010b5e:	into   
11010b5f:	sub    dh,BYTE PTR [esp+eax*4]
11010b62:	mov    al,ds:0xaad1f20e
11010b67:	cmp    eax,DWORD PTR [ebx-0x663df37b]
11010b6d:	popf   
11010b6e:	popf   
11010b6f:	jge    0x11010b48
11010b71:	sbb    al,0x5
11010b73:	dec    eax
11010b74:	inc    ecx
11010b75:	dec    esi
11010b76:	test   eax,0xdf85a019
11010b7b:	adc    bh,BYTE PTR [esi+0x4a]
11010b7e:	clc    
11010b7f:	sub    ecx,edi
11010b81:	adc    eax,0x7cc0f186
11010b86:	std    
11010b87:	mov    ecx,0x238a369
11010b8c:	xchg   ebp,eax
11010b8d:	fadd   DWORD PTR [ebx+0x2e]
11010b90:	inc    edi
11010b91:	mov    edx,0xaa3cccb6
11010b96:	mov    ebx,0xc1fe9fe9
11010b9b:	xor    eax,0xdaeca79c
11010ba1:	jl     0x11010b2a
11010ba3:	pop    edx
11010ba4:	or     BYTE PTR [ebx],0x81
11010ba7:	pop    edi
11010ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11010ba9:	clc    
11010baa:	xchg   ecx,eax
11010bab:	mov    dh,0x36
11010bad:	dec    edi
11010bae:	mov    dh,0xbf
11010bb0:	lods   eax,DWORD PTR ds:[esi]
11010bb1:	test   DWORD PTR [edx],esp
11010bb3:	pop    ds
11010bb4:	and    eax,0xf46daff2
11010bb9:	xlat   BYTE PTR ds:[ebx]
11010bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11010bbb:	xor    BYTE PTR [ebp-0x1],0x91
11010bbf:	jmp    0xb0d0:0xaf353e1f
11010bc6:	std    
11010bc7:	icebp  
11010bc8:	fcom   QWORD PTR [ebp+0x7dfd7c15]
11010bce:	and    BYTE PTR ds:[eax-0x6a9281bd],ah
11010bd5:	popa   
11010bd6:	lods   eax,DWORD PTR ds:[esi]
11010bd7:	add    eax,0x51781068
11010bdc:	xlat   BYTE PTR ds:[ebx]
11010bdd:	ror    DWORD PTR [ecx-0x3f4b8eeb],cl
11010be3:	xchg   esp,eax
11010be4:	aaa    
11010be5:	retf   0x3bc
11010be8:	div    BYTE PTR [edi-0x6f3228d2]
11010bee:	es mov ss:0x78ba7f83,eax
11010bf5:	xor    edi,DWORD PTR [ecx+ebp*8-0x46]
11010bf9:	mov    ecx,0x9a8935c6
11010bfe:	push   0x4dfdd677
11010c03:	stos   DWORD PTR es:[edi],eax
11010c04:	cmc    
11010c05:	xor    al,0xa
11010c07:	cmp    ebp,DWORD PTR [ecx+eax*4]
11010c0a:	ins    DWORD PTR es:[edi],dx
11010c0b:	inc    esi
11010c0c:	pop    ebx
11010c0d:	lock fldenv ds:0xf829ffc6
11010c14:	(bad)  
11010c15:	jmp    0x11010ba8
11010c17:	adc    DWORD PTR [eax+eax*4],ecx
11010c1a:	js     0x11010c22
11010c1c:	sbb    ch,BYTE PTR [esi-0x193a180d]
11010c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11010c23:	lock pop eax
11010c25:	sbb    eax,ebp
11010c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11010c28:	inc    edi
11010c29:	not    BYTE PTR [edx]
11010c2b:	loope  0x11010c94
11010c2d:	leave  
11010c2e:	cmp    DWORD PTR [ebp+0x56e08889],ebp
11010c34:	out    0x18,al
11010c36:	dec    esi
11010c37:	jno    0x11010c4d
11010c39:	test   al,0xb6
11010c3b:	pop    ebx
11010c3c:	sbb    ebx,DWORD PTR [esi]
11010c3e:	adc    al,0x4f
11010c40:	loope  0x11010be6
11010c42:	cwde   
11010c43:	mov    DWORD PTR [esi-0xc1492f2],edi
11010c49:	mov    esi,0x4d2aec00
11010c4e:	adc    DWORD PTR [ebx+edx*2-0x13d85310],edx
11010c55:	add    ah,BYTE PTR [edi+0x6541eabe]
11010c5b:	or     eax,0xe9b50ad0
11010c60:	add    eax,DWORD PTR [ebx+0x1]
11010c63:	pusha  
11010c64:	and    ah,cl
11010c66:	dec    edi
11010c67:	push   0x61
11010c69:	fist   WORD PTR [esi-0x5f]
11010c6c:	les    edx,FWORD PTR [edi-0x13602e2]
11010c72:	das    
11010c73:	add    DWORD PTR [eax-0x30],eax
11010c76:	push   ss
11010c77:	sub    al,0x9
11010c79:	dec    eax
11010c7a:	fcmovnu st,st(2)
11010c7c:	mov    al,0x5f
11010c7e:	stos   DWORD PTR es:[edi],eax
11010c7f:	(bad)  
11010c80:	stos   BYTE PTR es:[di],al
11010c82:	aas    
11010c83:	sub    BYTE PTR [ebx],dl
11010c85:	sub    BYTE PTR [edi],0x17
11010c88:	push   ss
11010c89:	(bad)  
11010c8b:	ins    BYTE PTR es:[edi],dx
11010c8c:	repnz nop
11010c8e:	push   ebp
11010c8f:	sti    
11010c90:	inc    ebx
11010c91:	cdq    
11010c92:	jno    0x11010c96
11010c94:	adc    BYTE PTR [ebx],0xba
11010c97:	sahf   
11010c98:	into   
11010c99:	jmp    0xffd7:0x1b081e9d
11010ca0:	test   al,0x1f
11010ca2:	add    al,0xa0
11010ca4:	adc    BYTE PTR [esi],dh
11010ca6:	cmp    al,0x50
11010ca8:	rol    BYTE PTR [edi],1
11010caa:	fld    DWORD PTR [eax+edi*8+0xf66e37d]
11010cb1:	outs   dx,DWORD PTR ds:[esi]
11010cb2:	cmp    esp,DWORD PTR [ebx+0x33]
11010cb5:	fdiv   st(6),st
11010cb7:	ror    DWORD PTR [edx],cl
11010cb9:	js     0x11010ced
11010cbb:	shr    BYTE PTR [eax+0x2],1
11010cbe:	cmp    BYTE PTR [ecx-0x7e2c5895],ch
11010cc4:	mov    DWORD PTR [eax+0x272b7657],eax
11010cca:	lock sub BYTE PTR [edx],dh
11010ccd:	mov    al,BYTE PTR [edi+0x65]
11010cd0:	jl     0x11010cce
11010cd2:	adc    al,0xcd
11010cd4:	xchg   edi,eax
11010cd5:	es push es
11010cd7:	rcl    DWORD PTR [ecx+0x7480051e],0x8a
11010cde:	int3   
11010cdf:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
11010ce1:	arpl   WORD PTR [eax],bp
11010ce3:	or     BYTE PTR [esi-0x1bcda4d2],0x92
11010cea:	mov    al,ds:0x90bae1e5
11010cef:	sbb    eax,0x54b5f403
11010cf4:	or     al,BYTE PTR [eax+edi*2]
11010cf7:	push   0x6e
11010cf9:	mov    esp,0xcf2f2abe
11010cfe:	(bad)
11010d01:	(bad)  
11010d02:	out    dx,eax
11010d03:	and    eax,0xf23210aa
11010d08:	shr    BYTE PTR [edx-0x334b6504],cl
11010d0e:	test   bh,bl
11010d10:	add    DWORD PTR [edi-0x55],ebx
11010d13:	cwde   
11010d14:	xor    eax,0x91213eba
11010d19:	xchg   DWORD PTR [esi],ecx
11010d1b:	push   cs
11010d1c:	fdivr  QWORD PTR [ebx+0x2d]
11010d1f:	jl     0x11010d05
11010d21:	mov    ebp,0x1fd6608f
11010d26:	mov    WORD PTR [eax-0x4d],es
11010d29:	push   eax
11010d2a:	pop    ss
11010d2b:	xchg   edx,eax
11010d2c:	mov    edi,0x900eff40
11010d31:	outs   dx,DWORD PTR ds:[esi]
11010d32:	stos   DWORD PTR es:[edi],eax
11010d33:	pop    edx
11010d34:	je     0x11010d2b
11010d36:	or     eax,0x97ebfb65
11010d3b:	mov    edi,0xf7bbeea6
11010d40:	(bad)  
11010d42:	cmp    DWORD PTR [esi+0x4f91432d],0xffffffab
11010d49:	(bad)  
11010d4a:	jmp    0x11010d3e
11010d4c:	pop    esi
11010d4d:	jp     0x11010d33
11010d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11010d50:	rcr    DWORD PTR [edi-0x40138ac2],1
11010d56:	push   es
11010d57:	adc    BYTE PTR [esi-0x41],0x3f
11010d5b:	cs pushf 
11010d5d:	bound  esp,QWORD PTR fs:[ecx+0x6e]
11010d61:	xor    DWORD PTR [eax-0x40],eax
11010d64:	push   0x1
11010d66:	cmp    bh,BYTE PTR [eax]
11010d68:	dec    eax
11010d69:	iret   
11010d6a:	das    
11010d6b:	mov    al,0x16
11010d6d:	(bad)  
11010d6e:	jg     0x11010de9
11010d70:	xlat   BYTE PTR ds:[ebx]
11010d71:	rcr    ecx,cl
11010d73:	jns    0x11010d24
11010d75:	mov    eax,0xc7e7bc6
11010d7b:	sbb    ebp,DWORD PTR [edx+0x10]
11010d7e:	sbb    BYTE PTR [eax+0x503bc9a6],al
11010d84:	add    eax,0x43
11010d87:	daa    
11010d88:	dec    eax
11010d89:	and    BYTE PTR [edx],al
11010d8b:	push   eax
11010d8c:	sbb    al,0x41
11010d8e:	xchg   edi,eax
11010d8f:	mov    edi,0x7f77db17
11010d94:	in     al,dx
11010d95:	loope  0x11010df4
11010d97:	addr16 push edi
11010d99:	jo     0x11010d8a
11010d9b:	jge    0x11010db8
11010d9d:	add    DWORD PTR [edx-0x424700c6],esi
11010da3:	repz xor dh,BYTE PTR [ecx]
11010da6:	mov    BYTE PTR [ebx-0x6],ch
11010da9:	in     eax,dx
11010daa:	pop    ecx
11010dab:	inc    edx
11010dac:	sub    dl,BYTE PTR [ebp+0x7a]
11010daf:	mov    ecx,DWORD PTR [ecx+0x37]
11010db2:	pusha  
11010db3:	mov    bh,0x15
11010db5:	popf   
11010db6:	sbb    ebx,DWORD PTR [eax-0x78]
11010db9:	je     0x11010df3
11010dbb:	jo     0x11010db7
11010dbd:	push   ebp
11010dbe:	inc    esi
11010dbf:	jecxz  0x11010deb
11010dc1:	sbb    ebx,DWORD PTR [ecx]
11010dc3:	inc    ecx
11010dc4:	imul   edx,DWORD PTR [eax],0x264e6159
11010dca:	cld    
11010dcb:	or     ah,BYTE PTR [ebx]
11010dcd:	aas    
11010dce:	mov    ecx,0x3f8f30e4
11010dd3:	adc    edi,DWORD PTR [esi-0x59]
11010dd6:	scas   al,BYTE PTR es:[edi]
11010dd7:	inc    ebx
11010dd8:	cdq    
11010dd9:	push   es
11010dda:	adc    eax,0x1e5e5450
11010ddf:	outs   dx,BYTE PTR ds:[esi]
11010de0:	int3   
11010de1:	adc    eax,0x29880287
11010de6:	into   
11010de7:	sbb    BYTE PTR [esi+0x4abf5f31],0x42
11010dee:	rol    BYTE PTR [edi+ebx*1+0x75d41c7b],cl
11010df5:	xchg   ecx,eax
11010df6:	mul    BYTE PTR [ebx+0x29d89b4d]
11010dfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11010dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11010dfe:	loopne 0x11010d8c
11010e00:	ja     0x11010e41
11010e02:	adc    bl,BYTE PTR [esi]
11010e04:	icebp  
11010e05:	mov    al,ds:0x57efed35
11010e0a:	or     edi,DWORD PTR [eax-0x24526087]
11010e10:	fisub  DWORD PTR [eax]
11010e12:	lahf   
11010e13:	rol    edx,0xef
11010e16:	push   0xffffffe1
11010e18:	fisttp WORD PTR [ebx]
11010e1a:	push   esi
11010e1b:	scas   al,BYTE PTR es:[edi]
11010e1c:	fst    QWORD PTR ds:0x35e1faee
11010e22:	jge    0x11010e7f
11010e24:	call   FWORD PTR [eax]
11010e26:	test   ch,bh
11010e28:	das    
11010e29:	in     eax,0xfa
11010e2b:	xchg   ebx,eax
11010e2c:	lock jmp 0x11010dfe
11010e2f:	xchg   edx,eax
11010e30:	std    
11010e31:	scas   eax,DWORD PTR es:[edi]
11010e32:	mov    bl,0xfe
11010e34:	ficomp DWORD PTR [eax+0x59ff527f]
11010e3a:	adc    BYTE PTR [edx-0x31],cl
11010e3d:	mov    eax,ds:0x9046040b
11010e42:	pop    es
11010e43:	or     al,0x95
11010e45:	inc    eax
11010e46:	inc    eax
11010e47:	pop    es
11010e48:	or     bl,cl
11010e4a:	mov    al,BYTE PTR [edx-0x5b]
11010e4d:	cmp    DWORD PTR [edi],eax
11010e4f:	jmp    DWORD PTR [eax-0x45131615]
11010e55:	out    dx,eax
11010e56:	mov    edx,0xcdee6da
11010e5b:	fwait
11010e5c:	out    dx,al
11010e5d:	stc    
11010e5e:	or     esp,ebx
11010e60:	mov    bh,0xfe
11010e62:	test   BYTE PTR [ecx+0x20],0x70
11010e66:	fsub   st,st(1)
11010e68:	xchg   ebx,eax
11010e6a:	xchg   DWORD PTR [esp+eax*8-0x20],esi
11010e6e:	add    al,0x85
11010e70:	sbb    esi,DWORD PTR [edx-0x1cbfc413]
11010e76:	mov    dl,0xaf
11010e78:	(bad)  
11010e79:	loope  0x11010e7e
11010e7b:	xchg   edi,eax
11010e7c:	mov    WORD PTR [ecx+0x3c],fs
11010e7f:	sahf   
11010e80:	dec    ebx
11010e81:	icebp  
11010e82:	cld    
11010e83:	dec    edx
11010e84:	sbb    dl,ah
11010e86:	jns    0x11010e58
11010e88:	mov    BYTE PTR [esi],0x2d
11010e8b:	ins    BYTE PTR es:[edi],dx
11010e8c:	mov    al,ds:0x58a92cc9
11010e91:	stos   DWORD PTR es:[edi],eax
11010e92:	inc    edi
11010e93:	inc    esp
11010e94:	lods   eax,DWORD PTR ds:[esi]
11010e95:	jb     0x11010eea
11010e97:	sub    eax,0x762b3491
11010e9c:	and    eax,0x8778f3b3
11010ea1:	cs xor DWORD PTR ss:[edi],eax
11010ea5:	mov    eax,0x7ec36dfa
11010eaa:	dec    esi
11010eab:	fs sbb eax,0xd2b88add
11010eb1:	inc    eax
11010eb2:	dec    esp
11010eb3:	adc    eax,ecx
11010eb5:	aad    0x7e
11010eb7:	sub    DWORD PTR [ebp-0x6284135b],esp
11010ebd:	(bad)  
11010ebe:	shld   esi,ebp,0xa7
11010ec2:	lea    eax,[esp+edx*1]
11010ec5:	sbb    al,0x6f
11010ec7:	rcr    dh,0x1
11010eca:	das    
11010ecb:	call   0x6112:0xbe489903
11010ed2:	xchg   esi,eax
11010ed3:	jnp    0x11010e77
11010ed5:	arpl   ax,sp
11010ed7:	daa    
11010ed8:	dec    ebp
11010ed9:	lea    eax,[esi]
11010edb:	dec    ebp
11010edc:	xor    esp,DWORD PTR [edi]
11010ede:	lahf   
11010edf:	fstp   QWORD PTR [eax]
11010ee1:	loopne 0x11010f00
11010ee3:	scas   eax,DWORD PTR es:[edi]
11010ee4:	cmp    BYTE PTR [eax],al
11010ee6:	mov    ?,WORD PTR [ecx-0x6]
11010ee9:	push   ds
11010eea:	in     eax,dx
11010eeb:	out    dx,eax
11010eec:	push   ecx
11010eed:	cmc    
11010eee:	clc    
11010eef:	sbb    BYTE PTR cs:[eax-0x41],0x23
11010ef4:	(bad)  
11010ef5:	cmc    
11010ef6:	(bad)  [esi]
11010ef8:	push   edi
11010ef9:	sti    
11010efa:	ret    
11010efb:	enter  0x841f,0x7f
11010eff:	xor    al,0xb5
11010f01:	add    ch,dh
11010f03:	cld    
11010f04:	ficom  WORD PTR ds:0xc9847b7d
11010f0a:	cmp    eax,0x7daffb34
11010f0f:	call   esi
11010f11:	div    BYTE PTR [edi-0x9db000]
11010f17:	mov    DWORD PTR [edi-0x50],ecx
11010f1a:	cmp    DWORD PTR [edi],0xdd8fc41e
11010f20:	or     DWORD PTR [eax],eax
11010f22:	mov    ah,0xbe
11010f24:	(bad)  
11010f26:	ins    BYTE PTR es:[edi],dx
11010f27:	push   es
11010f28:	and    DWORD PTR ds:0xd6a302a5,ebp
11010f2e:	sbb    eax,0xd7804da8
11010f33:	jne    0x11010f72
11010f35:	popf   
11010f36:	fisttp QWORD PTR [edi]
11010f38:	cmp    al,0x2
11010f3a:	stos   BYTE PTR es:[edi],al
11010f3b:	mov    ecx,0x808193cd
11010f40:	or     DWORD PTR [ebx],ebx
11010f42:	(bad)  
11010f43:	das    
11010f44:	fbld   TBYTE PTR [esi]
11010f46:	and    DWORD PTR [ebp+eax*1+0x45],0xd6cfdbd3
11010f4e:	jmp    0x11010f9e
11010f50:	popa   
11010f51:	arpl   WORD PTR ds:0x2cc2fdce,cx
11010f57:	pop    esp
11010f58:	jo     0x11010f53
11010f5a:	cmp    BYTE PTR [edx],cl
11010f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11010f5d:	jbe    0x11010fa8
11010f5f:	dec    ecx
11010f60:	scas   eax,DWORD PTR es:[edi]
11010f61:	mov    ch,0x5
11010f63:	cmp    al,0x71
11010f65:	push   esp
11010f66:	lds    ebx,FWORD PTR [eax+0x57c6ccf9]
11010f6c:	les    ebx,FWORD PTR [esi-0x45cd8670]
11010f72:	push   edi
11010f73:	jbe    0x11010fd0
11010f75:	xor    BYTE PTR [edx-0x7f],al
11010f78:	add    al,BYTE PTR [edi+0x73]
11010f7b:	or     DWORD PTR [edx-0x6a],ebx
11010f7e:	lahf   
11010f7f:	mov    DWORD PTR [ebx],esi
11010f81:	sub    dh,BYTE PTR [eax+0x146e83a1]
11010f87:	out    dx,eax
11010f88:	adc    BYTE PTR [esi-0x5d9da8e5],dh
11010f8e:	nop
11010f8f:	sbb    ch,BYTE PTR [esi+0x5]
11010f92:	xor    al,0x81
11010f94:	cmovb  ebx,DWORD PTR [esi+0x63bde9b6]
11010f9b:	push   eax
11010f9c:	push   0x4fc48410
11010fa1:	nop
11010fa2:	pop    ss
11010fa3:	rcl    cl,0x3e
11010fa6:	mov    dl,BYTE PTR ss:[ecx-0x80]
11010faa:	lea    edx,ds:0x2443c315
11010fb0:	pop    edi
11010fb1:	retf   0xfe08
11010fb4:	loopne 0x11010fdb
11010fb6:	je     0x4061cf53
11010fbc:	jle    0x11011025
11010fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11010fbf:	cwde   
11010fc0:	jge    0x11010f9f
11010fc2:	test   eax,0x27c026ad
11010fc7:	mov    cl,0xb1
11010fc9:	and    DWORD PTR [eax-0x44],edi
11010fcc:	mov    DWORD PTR [ebp-0x3ff83881],eax
11010fd2:	retf   0x761d
11010fd5:	mov    eax,edx
11010fd7:	aas    
11010fd8:	xor    eax,0xf8ee02bd
11010fdd:	(bad)  
11010fde:	pop    ss
11010fdf:	sti    
11010fe0:	imul   BYTE PTR [edx-0x18dc8bc5]
11010fe6:	lahf   
11010fe7:	fdivr  DWORD PTR [edi+0x3b]
11010fea:	cli    
11010feb:	xchg   edi,eax
11010fec:	and    al,BYTE PTR [eax]
11010fee:	jne    0x11010fd6
11010ff0:	lahf   
11010ff1:	add    eax,0x667d4a80
11010ff6:	mov    dh,0xbf
11010ff8:	jle    0x11011020
11010ffa:	lods   eax,DWORD PTR ds:[esi]
11010ffb:	mov    bh,0x3
11010ffd:	ret    
11010ffe:	inc    eax
11010fff:	mov    al,ds:0xe6d44094
11011004:	sbb    dl,ah
11011006:	add    BYTE PTR [eax+0x20],al
11011009:	lock xchg esi,eax
1101100b:	scas   al,BYTE PTR es:[edi]
1101100c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1101100d:	repz add BYTE PTR [edi],0x3f
11011011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11011012:	push   ds
11011013:	gs aaa 
11011015:	iret   
11011016:	(bad)  
11011018:	or     BYTE PTR [ebx-0x37e0fc10],0x12
1101101f:	mov    BYTE PTR [eax-0x2b],bl
11011022:	aaa    
11011023:	aaa    
11011024:	scas   eax,DWORD PTR es:[edi]
11011025:	(bad)  
11011026:	out    dx,eax
11011027:	xor    eax,DWORD PTR [ebx]
11011029:	hlt    
1101102a:	xor    DWORD PTR [esi],edi
1101102c:	lock jmp 0x46ee086b
11011032:	and    DWORD PTR [edx+0x6f],ebp
11011035:	lods   al,BYTE PTR ds:[esi]
11011036:	ins    BYTE PTR es:[edi],dx
11011037:	dec    ebx
11011038:	adc    cl,ah
1101103a:	xlat   BYTE PTR ds:[ebx]
1101103b:	add    al,BYTE PTR [esi-0x17158396]
11011041:	sub    esi,esi
11011043:	lahf   
11011044:	out    0x21,eax
11011046:	inc    esi
11011047:	and    DWORD PTR [edx-0x1ae57c1d],0x13add334
11011051:	jo     0x11011005
11011053:	or     bh,BYTE PTR [ecx+0x767a916d]
11011059:	mov    ebx,0xcfa06f02
1101105e:	ror    DWORD PTR [eax-0x20ee5821],1
11011064:	(bad)  
11011066:	sbb    DWORD PTR [ecx+0x44d66c09],esp
1101106c:	jae    0x1101100f
1101106e:	repnz push edx
11011070:	clc    
11011071:	les    edi,FWORD PTR [esi-0x56]
11011074:	rcr    ebp,1
11011076:	mov    bh,0x5c
11011078:	inc    edi
11011079:	jecxz  0x11011075
1101107b:	jmp    0x50fa3b7a
11011080:	je     0x11011037
11011082:	adc    ecx,DWORD PTR [esi-0x8a1fc26]
11011088:	sar    BYTE PTR [ebp-0x46],cl
1101108b:	xor    eax,0xd5a4953a
11011090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11011091:	cli    
11011092:	repz jp 0x110110bc
11011095:	fimul  WORD PTR [eax-0x1500f707]
1101109b:	pop    edx
1101109c:	clc    
1101109d:	push   edi
1101109e:	mov    eax,ds:0x66a68ff0
110110a3:	pusha  
110110a4:	push   0x66
110110a6:	adc    eax,0x67d37edc
110110ab:	cli    
110110ac:	test   BYTE PTR [ebx+edx*2],0x7c
110110b0:	xchg   ebp,eax
110110b1:	inc    edx
110110b2:	jg     0x1101111d
110110b4:	xchg   esp,eax
110110b5:	mov    bh,0x0
110110b7:	pusha  
110110b8:	aad    0x7f
110110ba:	ins    DWORD PTR es:[edi],dx
110110bb:	(bad)  
110110bc:	jmp    0x11011072
110110be:	pop    edi
110110bf:	dec    edx
110110c0:	and    cl,BYTE PTR cs:0xf72000
110110c7:	jo     0x11011120
110110c9:	in     eax,dx
110110ca:	mov    esp,0x41c982d
110110cf:	dec    edx
110110d0:	scas   al,BYTE PTR es:[edi]
110110d1:	inc    ecx
110110d2:	sbb    eax,0x1e401b
110110d7:	add    al,BYTE PTR [ecx-0x7f4516c1]
110110dd:	mov    ebp,0x5accfe1e
110110e2:	clc    
110110e3:	aaa    
110110e4:	data16 and BYTE PTR [eax],dl
110110e7:	cmp    BYTE PTR [ecx+0x7a20c441],al
110110ed:	pop    es
110110ee:	jo     0x11011132
110110f0:	ror    dh,cl
110110f2:	in     eax,dx
110110f3:	call   0x82806c9d
110110f8:	push   ss
110110f9:	add    eax,0x8e6c87a6
110110fe:	push   ebp
110110ff:	pop    es
11011100:	clc    
11011101:	xchg   DWORD PTR [edi+0x372be18f],ecx
11011107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11011108:	aam    0x61
1101110a:	sbb    ebp,eax
1101110c:	sub    al,BYTE PTR [esi]
1101110e:	add    dh,cl
11011110:	mov    bl,0x4b
11011112:	push   eax
11011113:	or     al,0x87
11011115:	loop   0x11011151
11011117:	sbb    bh,BYTE PTR [ebp-0x1dcfb60d]
1101111d:	pop    es
1101111e:	dec    ebp
1101111f:	mov    esp,0xd438e5e1
11011124:	mov    esp,0x8563f2aa
11011129:	call   0x9b4f:0xb21bcc85
11011130:	pop    ss
11011131:	push   eax
11011132:	push   ss
11011133:	ss pop ebp
11011135:	push   ebx
11011136:	nop
11011137:	inc    edi
11011138:	gs adc eax,0x82f96b86
1101113e:	dec    esp
1101113f:	xor    esi,DWORD PTR [eax]
11011141:	jae    0x1101114f
11011143:	jmp    0x23d7:0xab5f5f91
1101114a:	aas    
1101114b:	scas   al,BYTE PTR es:[edi]
1101114c:	fiadd  WORD PTR [bx+di-0x13]
11011151:	ss scas eax,DWORD PTR es:[edi]
11011153:	push   es
11011154:	les    ebp,FWORD PTR [esi-0x9]
11011157:	in     al,dx
11011158:	daa    
11011159:	out    dx,eax
1101115a:	add    DWORD PTR [edi-0x6],edi
1101115d:	pop    es
1101115e:	sti    
1101115f:	ret    
11011160:	aam    0x88
11011162:	pop    esi
11011163:	xchg   DWORD PTR [edx+0x5f],edi
11011166:	fiadd  DWORD PTR [ebx+eax*1+0x39093f39]
1101116d:	mov    ah,0xbd
1101116f:	push   ebx
11011170:	cmc    
11011171:	sti    
11011172:	inc    edx
11011173:	test   BYTE PTR [edi],bh
11011175:	mov    esp,?
11011177:	mov    ds:0xe7f595e9,eax
1101117c:	dec    edx
1101117d:	clc    
1101117e:	shl    DWORD PTR [ebp-0x61],0xe8
11011182:	fstp   TBYTE PTR [ebx]
11011184:	mov    al,0x84
11011186:	push   ss
11011187:	add    BYTE PTR [ebp+edi*8-0x593fbe51],ch
1101118e:	add    BYTE PTR [edi-0x2a90027],dh
11011194:	outs   dx,DWORD PTR ds:[esi]
11011195:	fdivr  st,st(7)
11011197:	add    ch,bh
11011199:	add    BYTE PTR [eax-0x25],al
1101119c:	dec    esp
1101119d:	add    al,BYTE PTR [edx]
1101119f:	xor    esp,DWORD PTR [esi+0x29]
110111a2:	xchg   ebp,eax
110111a3:	adc    esp,DWORD PTR [ebx]
110111a5:	cmc    
110111a6:	aas    
110111a7:	add    al,al
110111a9:	jnp    0x11011166
110111ab:	dec    esi
110111ac:	mov    esi,0x868fa3ef
110111b1:	icebp  
110111b2:	in     al,dx
110111b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
110111b4:	stc    
110111b5:	add    DWORD PTR [eax],0x4c
110111b8:	loopne 0x110111d7
110111ba:	cwde   
110111bb:	addr16 add al,0xe1
110111be:	ins    BYTE PTR es:[edi],dx
110111bf:	std    
110111c0:	mov    bh,bl
110111c2:	ja     0x11011225
110111c4:	add    eax,0xe6d6ff5f
110111c9:	or     BYTE PTR [edx],al
110111cb:	or     eax,0xb0a48381
110111d0:	ss inc edi
110111d2:	xor    eax,0xb8a88639
110111d7:	push   0xd0a073b7
110111dc:	sub    BYTE PTR [ebx],cl
110111de:	add    al,0x8a
110111e0:	fist   DWORD PTR [esi+0xb9f7e46]
110111e6:	popf   
110111e7:	scas   al,BYTE PTR es:[edi]
110111e8:	xchg   BYTE PTR [ebx-0x7b],cl
110111eb:	xor    edx,esp
110111ed:	ja     0x1101124c
110111ef:	ins    BYTE PTR es:[edi],dx
110111f0:	xor    DWORD PTR ds:0x7ab23504,0x53
110111f7:	adc    ch,BYTE PTR [ebx+eax*1]
110111fa:	add    eax,esp
110111fc:	jmp    0x11011266
110111fe:	push   0xec2e551a
11011203:	ins    BYTE PTR es:[edi],dx
11011204:	out    dx,eax
11011205:	xor    edi,eax
11011207:	in     eax,0xb5
11011209:	or     eax,0xe17e1ab3
1101120e:	out    0xb1,eax
11011210:	or     DWORD PTR ss:[eax+0x1d],eax
11011214:	sub    eax,DWORD PTR [ecx-0x57fd28ee]
1101121a:	inc    ecx
1101121b:	loop   0x110111a5
1101121d:	inc    ebx
1101121e:	ja     0x110111a5
11011220:	mov    edi,0xb081e379
11011225:	bound  esp,QWORD PTR [esi]
11011227:	das    
11011228:	and    eax,0x61dc28d1
1101122d:	cmp    BYTE PTR [eax-0x2b01db2],al
11011233:	jle    0x11011252
11011235:	inc    esi
11011236:	clc    
11011237:	or     eax,0xa782fc25
1101123c:	push   0xffffffd5
1101123e:	fisub  DWORD PTR [esi+0x57a68ff0]
11011244:	shl    edi,0xae
11011247:	cmp    eax,0xdf08efbf
1101124c:	xchg   esi,ebp
1101124e:	call   0x59022512
11011253:	adc    eax,0xd8003480
11011258:	int3   
11011259:	mov    edi,0x626ff236
1101125e:	or     eax,0x10cd9e80
11011263:	adc    al,ch
11011265:	jae    0x11011274
11011267:	fisubr DWORD PTR [eax+0x7f0000c0]
1101126d:	fnsave [ebp+0x1]
11011270:	pop    es
11011271:	sbb    al,0xfa
11011273:	and    bl,BYTE PTR [eax]
11011275:	pop    es
11011276:	loope  0x110112e7
11011278:	add    DWORD PTR [ecx+0x4c01de41],eax
1101127e:	and    BYTE PTR [edx-0x62e438db],dh
11011284:	bound  ebx,QWORD PTR [esi]
11011286:	xor    eax,0xd86da8df
1101128b:	in     al,dx
1101128c:	loope  0x110112fd
1101128e:	call   ebx
11011290:	ret    
11011291:	xor    eax,0x59d7d4b7
11011296:	int    0xa5
11011298:	jecxz  0x110112d1
1101129a:	retf   0x2178
1101129d:	loope  0x11011266
1101129f:	pop    esi
110112a0:	sbb    BYTE PTR [ebx],dh
110112a2:	jp     0x1101130b
110112a4:	jle    0x1101131b
110112a6:	dec    ebp
110112a7:	or     al,0x2a
110112a9:	and    cl,BYTE PTR [ebx-0x3d7a2e9a]
110112af:	dec    eax
110112b0:	stos   DWORD PTR es:[edi],eax
110112b1:	inc    edi
110112b2:	pop    esp
110112b3:	and    eax,0x7ed88dd4
110112b8:	ins    DWORD PTR es:[edi],dx
110112b9:	cs pop eax
110112bb:	loope  0x11011264
110112bd:	stc    
110112be:	add    BYTE PTR [ecx-0x8],cl
110112c1:	jge    0x110112b6
110112c3:	clc    
110112c4:	dec    esi
110112c5:	pop    ds
110112c6:	xchg   DWORD PTR [esi+edx*4],eax
110112c9:	out    dx,eax
110112ca:	xchg   ebx,eax
110112cb:	xor    al,0xf
110112cd:	add    DWORD PTR [ecx],ecx
110112cf:	dec    ecx
110112d0:	sub    eax,0x2366ac4e
110112d5:	ret    
110112d6:	push   eax
110112d7:	push   cs
110112d8:	and    bh,bh
110112da:	add    DWORD PTR [edx],0x1
110112dd:	push   es
110112de:	int    0x11
110112e0:	sbb    al,0x71
110112e2:	enter  0xf0ce,0xe7
110112e6:	scas   eax,DWORD PTR es:[edi]
110112e7:	cmp    eax,0xd35c7610
110112ec:	xor    eax,0xfdf94cdf
110112f1:	jne    0x11011274
110112f3:	or     BYTE PTR [esi-0x14],0x19
110112f7:	sbb    al,0xde
110112f9:	sbb    eax,DWORD PTR [edi+edi*2-0x2bc9f839]
11011300:	jle    0x11011314
11011302:	(bad)  
11011303:	lock std 
11011305:	fist   DWORD PTR [edi+0x7e]
11011308:	mov    ah,0xef
1101130a:	sub    bh,bl
1101130c:	test   DWORD PTR [esi],esp
1101130e:	add    al,ch
11011310:	inc    eax
11011311:	lahf   
11011312:	lahf   
11011313:	inc    ebx
11011314:	push   ebx
11011315:	std    
11011316:	daa    
11011317:	add    BYTE PTR [eax+0x164001],dh
1101131d:	mov    ah,0xef
1101131f:	jg     0x1101137f
11011321:	add    BYTE PTR [eax-0x25],al
11011324:	or     al,0x5
11011326:	adc    DWORD PTR [edx-0xa],0x6c03e6a0
1101132d:	dec    esp
1101132e:	inc    eax
1101132f:	add    BYTE PTR [eax-0x6c51581],al
11011335:	scas   eax,DWORD PTR es:[edi]
11011336:	sbb    al,0x7e
11011338:	push   edx
11011339:	sub    eax,0x415b1bfc
1101133e:	pusha  
1101133f:	adc    cl,BYTE PTR [esi-0x80]
11011342:	sub    cl,BYTE PTR [ebx]
11011344:	xor    eax,0x4c603bc
11011349:	sub    BYTE PTR ds:0xac5f47d,ah
1101134f:	test   bh,bl
11011351:	(bad)  
11011352:	mov    ch,0x60
11011354:	(bad)  
11011355:	jecxz  0x1101131c
11011357:	arpl   ax,di
11011359:	shl    BYTE PTR [edi],cl
1101135b:	aaa    
1101135c:	jb     0x11011394
1101135e:	pop    ds
1101135f:	clc    
11011360:	pop    esp
11011361:	nop
11011362:	jne    0x110112e4
11011364:	(bad)  
11011365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11011366:	adc    al,0xe3
11011368:	jo     0x110113d6
1101136a:	sahf   
1101136b:	lea    eax,[edi-0x6f]
1101136e:	jp     0x110113da
11011370:	xchg   esp,eax
11011371:	and    al,0xb5
11011373:	cwde   
11011374:	sbb    bh,ch
11011376:	cs xor edx,ebp
11011379:	jns    0x110113f4
1101137b:	lods   eax,DWORD PTR ds:[esi]
1101137c:	dec    edx
1101137d:	test   DWORD PTR [edx],edx
1101137f:	aaa    
11011380:	xor    al,BYTE PTR [ebx]
11011382:	in     eax,dx
11011383:	or     BYTE PTR [esi],cl
11011385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11011386:	cmp    cl,BYTE PTR [ebx+0x6edda0e9]
1101138c:	xchg   ebp,eax
1101138d:	add    DWORD PTR [ecx+0x26644008],eax
11011393:	sbb    BYTE PTR [ecx-0x32],ah
11011396:	rol    edx,0xf1
11011399:	xor    DWORD PTR [edx-0x9b1be04],ebx
1101139f:	push   ebp
110113a0:	or     al,0x90
110113a2:	inc    esi
110113a3:	inc    ebx
110113a4:	popa   
110113a5:	ins    BYTE PTR es:[edi],dx
110113a6:	call   0xbc2b:0xbc9ea382
110113ad:	in     eax,dx
110113ae:	div    esi
110113b0:	adc    DWORD PTR [ebp+0x130d462b],0xffffffcd
110113b7:	mov    esi,0x80d7cd4f
110113bc:	jp     0x1101140c
110113be:	pop    ebp
110113bf:	out    dx,eax
110113c0:	js     0x110113f4
110113c2:	push   edi
110113c3:	pop    edi
110113c4:	lods   eax,DWORD PTR ds:[esi]
110113c5:	imul   bh
110113c7:	push   esp
110113c8:	stos   DWORD PTR es:[edi],eax
110113c9:	std    
110113ca:	imul   esi,DWORD PTR [esi-0x73],0x23
110113ce:	jle    0x11011419
110113d0:	clc    
110113d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
110113d2:	jmp    0xdf40:0xff2e5bcf
110113d9:	xchg   ecx,eax
110113da:	mov    esi,0x90007903
110113df:	int    0xfb
110113e1:	das    
110113e2:	imul   eax,DWORD PTR [eax],0x3488013a
110113e8:	add    BYTE PTR [ebx],cl
110113ea:	add    BYTE PTR [eax+edi*8],ah
110113ed:	(bad)  
110113ef:	aas    
110113f0:	das    
110113f1:	add    BYTE PTR [eax+0x408086ed],ah
110113f7:	pop    ss
110113f8:	and    DWORD PTR [eax+0x7c],ecx
110113fb:	add    BYTE PTR ds:0x3aef7f80,0xf1
11011402:	inc    ebx
11011403:	pop    ds
11011404:	(bad)  
11011405:	jg     0x11011471
11011407:	rcr    edi,0xb0
1101140a:	push   0x2a2c5020
1101140f:	push   edx
11011410:	sbb    cl,bh
11011412:	jmp    0x91366f9d
11011417:	inc    edx
11011418:	nop
11011419:	push   eax
1101141a:	fdivr  QWORD PTR [esi+ebx*8+0x6bfedff3]
11011421:	xor    ebx,DWORD PTR [edx+esi*8-0x4b]
11011425:	int    0xf5
11011427:	in     eax,0xcc
11011429:	test   eax,0xf9315f91
1101142e:	dec    esp
1101142f:	mov    al,ds:0x34ec1639
11011434:	mov    dl,0x2a
11011436:	cmp    edx,edi
11011438:	mov    WORD PTR [eax-0x6f2bf6b2],cs
1101143e:	aam    0x5c
11011440:	inc    ebp
11011441:	xor    DWORD PTR [ecx+ebp*2-0x43],esp
11011445:	pop    edx
11011446:	in     eax,dx
11011447:	scas   eax,DWORD PTR es:[edi]
11011448:	inc    eax
11011449:	fdivr  DWORD PTR [esi-0x1a]
1101144c:	and    al,0x40
1101144e:	stos   DWORD PTR es:[edi],eax
1101144f:	in     eax,dx
11011450:	and    al,0xb0
11011452:	mov    ch,ch
11011454:	div    edx
11011456:	dec    esp
11011457:	fiadd  DWORD PTR [edi+edi*1-0x33539975]
1101145e:	jp     0x110114d5
11011460:	sbb    eax,0x8d057ed9
11011465:	inc    ebp
11011466:	test   BYTE PTR [ebx+0xa],bh
11011469:	dec    esi
1101146a:	cmp    BYTE PTR [edx+0x4f],ch
1101146d:	js     0x1101143c
1101146f:	dec    ecx
11011470:	sti    
11011471:	xchg   esi,eax
11011472:	ins    DWORD PTR es:[edi],dx
11011473:	jle    0x110114ef
11011475:	pop    es
11011476:	sub    eax,0x8f7b3a9d
1101147b:	add    eax,0x89b4207e
11011480:	test   DWORD PTR [edi],edi
11011482:	fdivr  st,st(4)
11011484:	imul   edi,DWORD PTR [ebx-0x2183c07b],0xfffffff8
1101148b:	test   DWORD PTR [edi-0x14],edi
1101148e:	cmp    ebx,edx
11011490:	mov    bh,0xa1
11011492:	ins    BYTE PTR es:[edi],dx
11011493:	(bad)  
11011494:	jmp    0x11011416
11011496:	lahf   
11011497:	adc    al,BYTE PTR [ecx]
11011499:	push   0x75b3fbe7
1101149e:	push   DWORD PTR [esi+ebx*8-0x1]
110114a2:	add    BYTE PTR [ecx],0x80
110114a5:	mov    dh,0xed
110114a7:	add    eax,DWORD PTR [ecx-0x1b4f946e]
110114ad:	push   ss
110114ae:	aam    0x31
110114b0:	add    DWORD PTR [edi+0x74],esp
110114b3:	popf   
110114b4:	hlt    
110114b5:	xchg   ecx,eax
110114b6:	dec    edi
110114b7:	jns    0x110114ce
110114b9:	int3   
110114ba:	inc    ebp
110114bb:	add    BYTE PTR [eax+0x44],bl
110114be:	adc    al,al
110114c0:	cmp    BYTE PTR [ecx-0x70e3697b],al
110114c6:	cmovae ebp,DWORD PTR [ecx+0x0]
110114ca:	call   0xc136:0xe7d8fe8d
110114d1:	stc    
110114d2:	pop    edi
110114d3:	call   0x7e54:0x9c75afad
110114da:	scas   eax,DWORD PTR es:[edi]
110114db:	sahf   
110114dc:	cmp    al,0xb9
110114de:	add    DWORD PTR [ecx-0x27],eax
110114e1:	lock xchg ebp,eax
110114e3:	loop   0x110114f2
110114e5:	cmp    BYTE PTR [edx],0x36
110114e8:	jp     0x110114ac
110114ea:	stos   DWORD PTR es:[edi],eax
110114eb:	pushf  
110114ec:	push   ebx
110114ed:	add    BYTE PTR [eax],ch
110114ef:	or     DWORD PTR [edi],edi
110114f1:	cdq    
110114f2:	push   es
110114f3:	cmp    DWORD PTR [ecx-0x3ad2489a],edi
110114f9:	stc    
110114fa:	mov    eax,DWORD PTR [eax+0x17bc2342]
11011500:	sbb    ah,BYTE PTR [eax-0x60]
11011503:	test   BYTE PTR [ebx+esi*2],dh
11011506:	aad    0x9
11011508:	pop    eax
11011509:	xor    eax,0x7200140
1101150e:	pop    ds
1101150f:	lds    edx,FWORD PTR [ecx+0x14]
11011512:	mov    ch,0xd
11011514:	neg    BYTE PTR [eax]
11011516:	inc    eax
11011517:	in     al,dx
11011518:	dec    esi
11011519:	jg     0x1101150b
1101151b:	xchg   edx,eax
1101151c:	mov    ebp,0xd26faba2
11011521:	cmp    DWORD PTR [edx],esp
11011523:	jp     0x11011500
11011525:	mov    esp,0x933dbf09
1101152a:	int    0xdf
1101152c:	adc    dh,bh
1101152e:	xchg   ebp,eax
1101152f:	sub    al,0xf8
11011531:	push   ebx
11011532:	xor    ebp,DWORD PTR [ebx-0x101459f]
11011538:	int    0xcb
1101153a:	(bad)  
1101153c:	ja     0x11011502
1101153e:	outs   dx,DWORD PTR ds:[esi]
1101153f:	inc    ecx
11011540:	xor    edi,ebp
11011542:	push   edi
11011543:	fwait
11011544:	add    BYTE PTR [edi+0x43],dh
11011547:	dec    esi
11011548:	add    BYTE PTR [edx+0x0],bl
1101154b:	shr    cl,1
1101154d:	mov    edi,0x9ad45454
11011552:	add    BYTE PTR [ebx+0x7db40002],cl
11011558:	pop    ss
11011559:	or     BYTE PTR [eax+0x3e],bl
1101155c:	pusha  
1101155d:	inc    esi
1101155e:	jge    0x1101153a
11011560:	xchg   esp,eax
11011561:	popa   
11011562:	rol    BYTE PTR [eax],cl
11011564:	into   
11011565:	jmp    0x8ded:0x7fa3e13a
1101156c:	push   ecx
1101156d:	lock xchg DWORD PTR [eax+0x60c424c0],eax
11011574:	dec    esp
11011575:	and    eax,0x7cc09c0e
1101157a:	mov    ecx,DWORD PTR [edx+0x358a5698]
11011580:	mov    edi,0xf0cdaaf4
11011585:	mov    eax,ds:0xdf70c64b
1101158a:	xchg   BYTE PTR [ebp+0x7b568dbc],cl
11011590:	inc    ebp
11011591:	clc    
11011592:	jb     0x110115e6
11011594:	push   eax
11011595:	cwde   
11011596:	jp     0x11011522
11011598:	test   al,0x83
1101159a:	fcom   QWORD PTR [esi]
1101159c:	test   BYTE PTR [edx],0x20
1101159f:	je     0x11011555
110115a1:	sbb    al,0x80
110115a3:	adc    ch,BYTE PTR [edx+0x6d]
110115a6:	xor    DWORD PTR [edi],0xffffffbd
110115a9:	add    ah,bh
110115ab:	aas    
110115ac:	pop    ds
110115ad:	psubusb mm0,QWORD PTR [ecx+edx*4+0x10]
110115b2:	pusha  
110115b3:	fistp  QWORD PTR [eax-0x3542075a]
110115b9:	shl    DWORD PTR [eax],0xcb
110115bc:	cs aam 0xe7
110115bf:	shr    DWORD PTR [ebp+0x2a],0x7b
110115c3:	dec    ebp
110115c4:	or     eax,0xa3b7cfe1
110115c9:	mov    al,ds:0xdc3d51a6
110115ce:	mov    edi,0x2bf777f5
110115d3:	pop    es
110115d4:	stc    
110115d5:	fs mov ebp,0x6de47e72
110115db:	push   0x949bf091
110115e0:	in     eax,dx
110115e1:	das    
110115e2:	mov    ?,esp
110115e4:	dec    ebp
110115e5:	loope  0x110115f6
110115e7:	lahf   
110115e8:	xlat   BYTE PTR ds:[ebx]
110115e9:	jle    0x110115e5
110115eb:	pop    ebp
110115ec:	jge    0x11011635
110115ee:	mov    ebp,0xc0219a05
110115f3:	and    eax,0x2296017
110115f8:	rcl    BYTE PTR [esi-0x1],1
110115fb:	shl    DWORD PTR ds:0x8b7bf,1
11011601:	sar    BYTE PTR [esi],1
11011603:	jge    0x11011625
11011605:	pusha  
11011606:	cmp    eax,0xdbbe102
1101160b:	adc    DWORD PTR [esi],esp
1101160d:	or     eax,0x93ae82e0
11011612:	sbb    eax,0xa077acf2
11011617:	loopne 0x11011688
11011619:	cmp    BYTE PTR [ecx+0x48bf828],0x2
11011620:	sbb    eax,0xf68a8595
11011625:	gs dec edi
11011627:	imul   eax,DWORD PTR [edi+ecx*4-0x1188181e],0xffffffa8
1101162f:	loopne 0x110116ae
11011631:	out    0x6d,eax
11011633:	sbb    BYTE PTR [edi],0xfc
11011636:	fs push cs
11011638:	retf   
11011639:	ins    DWORD PTR es:[edi],dx
1101163a:	sub    edx,DWORD PTR [esi+0x5d]
1101163d:	or     eax,0xf42295d3
11011642:	clc    
11011643:	fsub   QWORD PTR [esi+eiz*1+0x30]
11011647:	jno    0x110115f0
11011649:	inc    edi
1101164a:	jbe    0x110116b1
1101164c:	scas   eax,DWORD PTR es:[edi]
1101164d:	and    edx,0x3
11011650:	inc    eax
11011651:	mov    ah,0x80
11011653:	hlt    
11011654:	bound  ebp,QWORD PTR [eax+0x62]
11011657:	adc    BYTE PTR [esp+ebx*8],ch
1101165a:	test   eax,0x7366fda6
1101165f:	inc    edx
11011660:	imul   edx,DWORD PTR [esi],0xead024da
11011666:	cmp    DWORD PTR [eax],ebp
11011668:	loopne 0x11011633
1101166a:	add    DWORD PTR [ecx-0x52],ecx
1101166d:	push   ebp
1101166e:	test   BYTE PTR [edi],bh
11011670:	iret   
11011671:	xor    eax,edx
11011673:	sbb    al,BYTE PTR [eax+0x6]
11011676:	jp     0x110116a2
11011678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11011679:	mov    bh,0xaa
1101167b:	and    al,0x4c
1101167d:	cmp    BYTE PTR [ecx+ebx*1+0xab3ee07],cl
11011684:	dec    esi
11011685:	jge    0x1101166c
11011687:	xor    DWORD PTR [ecx],0xefdad7bc
1101168d:	ins    DWORD PTR es:[edi],dx
1101168e:	out    dx,eax
1101168f:	adc    edi,DWORD PTR [ecx+edi*1-0x36]
11011693:	mov    bl,0x2d
11011695:	pop    ss
11011696:	pusha  
11011697:	(bad)
1101169c:	imul   eax,DWORD PTR [esi-0x51a780f5],0xffffffba
110116a3:	clc    
110116a4:	lods   eax,DWORD PTR ds:[esi]
110116a5:	jge    0x110116ee
110116a7:	mov    esi,0x7e93ca19
110116ac:	pop    eax
110116ad:	das    
110116ae:	or     BYTE PTR [ebp+0x1736c00],0x6e
110116b5:	jno    0x110116b7
110116b7:	mov    al,ds:0xd0204afd
110116bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
110116bd:	add    eax,0x99a5ef84
110116c2:	xchg   DWORD PTR [ebx],eax
110116c4:	or     BYTE PTR [esp+ebx*8+0x75],bl
110116c8:	mov    ds:0xbde73dc7,al
110116cd:	or     al,0x0
110116cf:	xchg   ebx,eax
110116d0:	add    al,0x42
110116d3:	mov    esp,0x86d98d03
110116d8:	aad    0x3a
110116da:	jmp    0x1101173a
110116dc:	loop   0x11011736
110116de:	jg     0x11011710
110116e0:	rol    DWORD PTR [ebx-0x53915c56],1
110116e6:	pop    edi
110116e7:	int    0xfb
110116e9:	das    
110116ea:	mov    esi,0x8dff3e17
110116ef:	stos   BYTE PTR es:[edi],al
110116f0:	(bad)  
110116f1:	fs sub edx,DWORD PTR ss:[edx]
110116f5:	mov    edx,cs
110116f7:	push   esp
110116f8:	test   eax,0x3bb4bfca
110116fd:	in     eax,0x9
110116ff:	call   0xdc6c17c0
11011704:	stos   DWORD PTR es:[edi],eax
11011705:	xchg   ecx,eax
11011706:	mov    bh,0x32
11011708:	add    BYTE PTR [ecx-0x60],0xc1
1101170c:	xchg   ebp,eax
1101170d:	outs   dx,BYTE PTR ds:[esi]
1101170e:	icebp  
1101170f:	xchg   BYTE PTR [edx],ah
11011711:	shr    BYTE PTR [eax-0x44f97ea4],1
11011717:	pop    ds
11011718:	iret   
11011719:	lea    edx,[ebp-0x7f]
1101171c:	or     ebx,DWORD PTR [ebx+eax*4]
1101171f:	(bad)  
11011720:	push   esi
11011721:	mov    eax,0xecab0770
11011726:	xchg   esi,eax
11011727:	lahf   
11011728:	push   eax
11011729:	pusha  
1101172a:	inc    esp
1101172b:	push   0xffffffbf
1101172d:	jb     0x11011724
1101172f:	imul   eax,DWORD PTR [eax+0x21],0xf354268d
11011736:	jns    0x1101171e
11011738:	jecxz  0x110117b1
1101173a:	adc    DWORD PTR [ebx+0x7e],0xbd587f7f
11011741:	jb     0x11011707
11011743:	not    edx
11011745:	add    BYTE PTR [eax],al
11011747:	fwait
11011748:	rcr    bl,cl
1101174a:	rol    DWORD PTR [ecx],0x84
1101174d:	inc    esi
1101174e:	xlat   BYTE PTR ds:[ebx]
1101174f:	dec    edx
11011750:	ins    DWORD PTR es:[edi],dx
11011751:	pop    esi
11011752:	ins    BYTE PTR es:[edi],dx
11011753:	mov    edi,0xd083f91e
11011758:	xlat   BYTE PTR ds:[ebx]
11011759:	add    bl,bh
1101175b:	and    eax,0xeaf961fc
11011760:	test   DWORD PTR [edi-0x6785c415],ebp
11011766:	xor    cl,al
11011768:	call   0x4040:0xd0035600
1101176f:	add    BYTE PTR [ecx+0x2ed409e7],ah
11011775:	shl    BYTE PTR ds:0xd7da0001,0x82
1101177c:	inc    eax
1101177d:	pop    ss
1101177e:	pop    ss
1101177f:	shl    BYTE PTR [esi+0x6],1
11011782:	jl     0x1101172e
11011784:	jmp    0x110117aa
11011786:	xchg   DWORD PTR [edi],edi
11011788:	jmp    FWORD PTR [edi+0xa4f90a3]
1101178e:	add    cl,BYTE PTR [ebx]
11011790:	test   BYTE PTR [esi],0x84
11011793:	ss test eax,0xd91a3006
11011799:	xchg   ebp,eax
1101179a:	jb     0x11011758
1101179c:	cli    
1101179d:	sti    
1101179e:	xlat   BYTE PTR gs:[ebx]
110117a0:	into   
110117a1:	ret    0x5f3f
110117a4:	je     0x11011805
110117a6:	or     eax,0xa010e308
110117ab:	iret   
110117ac:	push   ebx
110117ad:	lea    edx,[ebp+0x4a]
110117b0:	and    BYTE PTR [ebx],dh
110117b2:	dec    edi
110117b3:	add    DWORD PTR [edi-0x2f0eeb22],ebx
110117b9:	les    ebx,FWORD PTR [edx+0x61100506]
110117bf:	popa   
110117c0:	mov    eax,ds:0x25d95207
110117c5:	stos   DWORD PTR es:[edi],eax
110117c6:	into   
110117c7:	mov    edx,0x23f68ee
110117cc:	add    DWORD PTR [esi-0x8],0x35a31e2e
110117d3:	outs   dx,BYTE PTR ds:[esi]
110117d4:	pop    edi
110117d5:	popf   
110117d6:	xchg   DWORD PTR ds:0x641fb51a,esi
110117dc:	not    DWORD PTR [ebx-0x78]
110117df:	jo     0x11011825
110117e1:	push   ebx
110117e2:	fs (bad) 
110117e4:	sbb    eax,0xbfc9c0d6
110117e9:	cmc    
110117ea:	inc    eax
110117eb:	cmp    dl,ch
110117ed:	sub    DWORD PTR [ebx+0x7bf36336],edi
110117f3:	stos   BYTE PTR es:[edi],al
110117f4:	hlt    
110117f5:	and    ax,0xbe
110117f9:	sbb    bh,bl
110117fb:	imul   esp,DWORD PTR [eax],0xffffff9f
110117fe:	dec    esp
110117ff:	clc    
11011800:	or     ebp,DWORD PTR [edi+edi*1-0x6d]
11011804:	jge    0x110117e3
11011806:	ret    0x7e1f
11011809:	mov    edi,0xec3f9cfc
1101180e:	cmp    eax,DWORD PTR [ebx-0x50]
11011811:	cmp    eax,0xfa8092da
11011816:	or     BYTE PTR [eax-0x1e],al
11011819:	add    BYTE PTR [esi-0x12ffff6],dh
1101181f:	and    eax,0x4792810
11011824:	ret    0x9362
11011827:	test   BYTE PTR [edx],al
11011829:	add    BYTE PTR [esi+eiz*4-0x15],bh
1101182d:	add    al,0xbf
1101182f:	cli    
11011830:	loop   0x11011829
11011832:	mov    ds:0x10596fb0,eax
11011837:	push   0x3cda0778
1101183c:	add    ebp,DWORD PTR ds:0xd0d0a0
11011842:	loop   0x1101180e
11011844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11011845:	div    al
11011847:	fnstsw WORD PTR [ebx]
11011849:	(bad)  
1101184a:	lock ror DWORD PTR [edi+0x6d],0x82
1101184f:	scas   eax,DWORD PTR es:[edi]
11011850:	fnsave [ecx+eax*4+0x5194f827]
11011857:	push   edx
11011858:	jns    0x11011861
1101185a:	sub    ch,dl
1101185c:	aad    0x99
1101185e:	mov    dl,0x58
11011860:	xchg   esi,eax
11011861:	pop    es
11011862:	sar    bh,1
11011864:	sbb    edx,DWORD PTR [esi+0x32fdab5d]
1101186a:	add    eax,0xfe1b07b9
1101186f:	stos   DWORD PTR es:[edi],eax
11011870:	test   DWORD PTR [ecx],ebx
11011872:	inc    eax
11011873:	mov    ecx,0xb6746914
11011878:	ins    BYTE PTR es:[edi],dx
11011879:	mov    edi,0x2409f11e
1101187e:	ret    0xef68
11011881:	mov    al,cl
11011883:	xor    esp,esi
11011885:	test   BYTE PTR [edx],al
11011887:	das    
11011888:	push   edx
11011889:	sti    
1101188a:	lds    esp,FWORD PTR [ebp-0x3eb2a9e8]
11011890:	popa   
11011891:	(bad)  
11011892:	pop    esp
11011893:	or     ebp,DWORD PTR [edi-0x3]
11011896:	mov    ebp,0xaa7f6003
1101189b:	in     al,0x53
1101189d:	dec    edx
1101189e:	loopne 0x110118d2
110118a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
110118a1:	fsubr  QWORD PTR [ebp-0x6f88d97a]
110118a7:	jg     0x1101186f
110118a9:	cmc    
110118aa:	cwde   
110118ab:	pop    edx
110118ac:	sbb    eax,0xef3cf92a
110118b1:	cwde   
110118b2:	arpl   WORD PTR [esi],sp
110118b4:	pusha  
110118b5:	sti    
110118b6:	or     eax,0xf08137e1
110118bb:	dec    edi
110118bc:	xlat   BYTE PTR ds:[ebx]
110118bd:	lahf   
110118be:	pop    edi
110118bf:	cld    
110118c0:	call   0x23d01490
110118c5:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
110118c7:	push   esp
110118c8:	(bad)  
110118c9:	mov    ebx,0x2d8810ad
110118ce:	add    DWORD PTR [esi-0x717ffeab],edi
110118d4:	mov    eax,ds:0x1c14a041
110118d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110118da:	cmp    eax,0x80b5a02
110118df:	add    al,dh
110118e1:	mov    ecx,0xe13f83ae
110118e6:	clc    
110118e7:	rcl    DWORD PTR [eax-0x40],cl
110118ea:	out    0x7,eax
110118ec:	add    dl,BYTE PTR [ebx+0x2c8712a4]
110118f2:	ret    0x70d3
110118f5:	push   es
110118f6:	and    ch,ah
110118f8:	push   ebp
110118f9:	lea    edx,[ecx-0x44]
110118fc:	lods   eax,DWORD PTR ds:[esi]
110118fd:	icebp  
110118fe:	add    ebp,DWORD PTR [eax]
11011900:	clc    
11011901:	xchg   edi,eax
11011902:	in     eax,dx
11011903:	jno    0x11011947
11011905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11011906:	std    
11011907:	ret    0x37d7
1101190a:	rol    DWORD PTR [edi-0x11fe4ac2],0xb8
11011911:	imul   ebp,DWORD PTR [esi],0x5e
11011914:	pop    ebx
11011915:	retf   0x2ff9
11011918:	xchg   esp,eax
11011919:	add    ebx,edx
1101191b:	in     eax,0xbb
1101191d:	sub    esp,DWORD PTR [ebx]
1101191f:	cld    
11011920:	pusha  
11011921:	inc    eax
11011922:	add    BYTE PTR [edi],ch
11011924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11011925:	in     al,0xd6
11011927:	add    eax,DWORD PTR [edx]
11011929:	xchg   ebx,eax
1101192a:	mov    cl,0x61
1101192c:	repz mov ch,0x7a
1101192f:	(bad)  
11011930:	xchg   edi,eax
11011931:	dec    edx
11011932:	adc    edi,DWORD PTR [ebx+0x14]
11011935:	test   DWORD PTR [edi],ebx
11011937:	or     ah,BYTE PTR [eax]
11011939:	mov    al,ds:0x78650ea3
1101193e:	dec    edi
1101193f:	(bad)  
11011940:	fisttp DWORD PTR [ecx+0x19811543]
11011946:	mov    edx,0xcebb9ec4
1101194b:	shr    BYTE PTR [ebx-0x61f427b2],0xf1
11011952:	clc    
11011953:	pop    ebp
11011954:	jecxz  0x110118da
11011956:	stos   BYTE PTR es:[edi],al
11011957:	lds    esp,FWORD PTR [edi+0x5b]
1101195a:	rol    BYTE PTR [eax],1
1101195c:	mov    edx,0xc2b5f366
11011961:	scas   eax,DWORD PTR es:[edi]
11011962:	ins    DWORD PTR es:[edi],dx
11011963:	(bad)  
11011964:	mov    ds:0xf39d44c3,eax
11011969:	gs sti 
1101196b:	daa    
1101196c:	adc    al,0xfe
1101196e:	mov    al,0xcd
11011970:	out    0x3e,eax
11011972:	jl     0x110119b6
11011974:	fistp  WORD PTR [ecx+0x6900002]
1101197a:	mov    al,ds:0xaaecfc27
1101197f:	add    ebp,DWORD PTR [eax+0x4b]
11011982:	adc    BYTE PTR [edi+0x325bfde6],0x0
11011989:	mov    al,ds:0xef73d0e3
1101198e:	mov    ecx,DWORD PTR [ebx]
11011990:	mov    al,0x0
11011992:	rcr    BYTE PTR [ecx-0x681b0ad2],1
11011998:	jle    0x11011946
1101199a:	push   ss
1101199b:	out    dx,al
1101199c:	dec    ebp
1101199d:	or     eax,DWORD PTR [esi]
1101199f:	add    ecx,0x26b5c361
110119a5:	jo     0x11011a21
110119a7:	and    DWORD PTR [edi-0x60],esi
110119aa:	sub    al,bl
110119ac:	jmp    0xf049e038
110119b1:	mov    BYTE PTR [ecx],ah
110119b3:	xor    BYTE PTR [esi],ah
110119b5:	add    eax,0xeb1bb2d9
110119ba:	xlat   BYTE PTR ds:[ebx]
110119bb:	jne    0x110119b3
110119bd:	addr16 out dx,eax
110119bf:	cmp    edi,0xfffffff8
110119c2:	lahf   
110119c3:	int    0x71
110119c5:	repnz adc DWORD PTR [ebp+0x46],ebx
110119c9:	mov    edi,DWORD PTR [ebp+0x6bb6ac00]
110119cf:	loope  0x11011a02
110119d1:	cmp    al,0x40
110119d3:	sub    DWORD PTR [ebx+0x5813e32f],esi
110119d9:	iret   
110119da:	inc    esi
110119db:	repz (bad) 
110119de:	and    al,0x28
110119e0:	mov    ch,0x1c
110119e2:	add    al,0x30
110119e4:	fs add al,0x4f
110119e7:	mov    edi,0xe4f62334
110119ec:	jnp    0x11011a31
110119ee:	mov    ch,0x47
110119f0:	outs   dx,DWORD PTR ds:[esi]
110119f1:	inc    edx
110119f2:	aam    0x8
110119f4:	fdiv   DWORD PTR [ebx+0x2b1c0c00]
110119fa:	push   edi
110119fb:	dec    esp
110119fc:	ret    
110119fd:	or     edi,ecx
110119ff:	fiadd  WORD PTR [ebx]
11011a01:	jle    0x110119fe
11011a03:	cwde   
11011a04:	pop    es
11011a05:	ret    0xd59a
11011a08:	push   ebx
11011a09:	(bad)  
11011a0a:	out    0xaa,eax
11011a0c:	ret    
11011a0d:	jp     0x11011a38
11011a0f:	and    BYTE PTR [edx+0x3f],cl
11011a12:	(bad)  
11011a13:	into   
11011a14:	jmp    0xd2dbbd5
11011a19:	adc    eax,edi
11011a1b:	imul   BYTE PTR [edi+0x4fda9f9d]
11011a21:	ret    0xaa3f
11011a24:	mov    bh,0xb9
11011a26:	in     al,dx
11011a27:	fistp  WORD PTR [edi-0x28]
11011a2a:	ja     0x110119e2
11011a2c:	jmp    0x110119cf
11011a2e:	cmp    edi,esi
11011a30:	pop    edi
11011a31:	mov    DWORD PTR [ebx],eax
11011a33:	sub    BYTE PTR [ecx+0x0],bh
11011a36:	dec    edx
11011a37:	inc    ecx
11011a38:	inc    eax
11011a39:	pop    ebx
11011a3a:	add    eax,0x6cb1f400
11011a3f:	pop    esp
11011a40:	add    BYTE PTR [esi],0x81
11011a43:	mov    al,ds:0x80fce801
11011a48:	add    BYTE PTR [eax],al
11011a4a:	pop    edi
11011a4b:	out    dx,al
11011a4c:	cmp    ch,al
11011a4e:	xchg   ecx,eax
11011a4f:	mov    edi,0xec126173
11011a54:	ds adc al,bl
11011a57:	mov    esp,0x45bb701
11011a5c:	adc    BYTE PTR [eax],ch
11011a5e:	in     al,0xe
11011a60:	call   0x1a47dbb1
11011a65:	jb     0x11011a3c
11011a67:	jns    0x11011a84
11011a69:	test   eax,0xc4e826a8
11011a6e:	fisubr DWORD PTR [edx+0x7f0fdd61]
11011a74:	xor    al,BYTE PTR [esi+0xdd2e33]
11011a7a:	lahf   
11011a7b:	mov    edi,0x9afabef6
11011a80:	cmp    eax,0x48ca1146
11011a85:	push   0xffffffdd
11011a87:	jg     0x11011a16
11011a89:	cli    
11011a8a:	add    al,BYTE PTR [eax]
11011a8c:	in     eax,0xf0
11011a8e:	ficom  WORD PTR [esi]
11011a90:	ins    DWORD PTR es:[edi],dx
11011a91:	mov    al,ds:0x34cf8d4d
11011a96:	add    ebx,DWORD PTR [ebx-0x49]
11011a99:	lahf   
11011a9a:	iret   
11011a9b:	pop    ecx
11011a9c:	lock push cs
11011a9e:	inc    eax
11011a9f:	and    eax,ebx
11011aa1:	dec    eax
11011aa2:	adc    edx,DWORD PTR [edx+edx*2-0x71e9536f]
11011aa9:	imul   edi,DWORD PTR [eax-0x1e],0xabc23ba1
11011ab0:	dec    edi
11011ab1:	fadd   QWORD PTR [edi]
11011ab3:	test   BYTE PTR ds:0x3e79beea,0xfa
11011aba:	cmp    DWORD PTR [esi-0x21cb06fb],esi
11011ac0:	inc    ecx
11011ac1:	jmp    0x5ee4c67f
11011ac6:	pop    edx
11011ac7:	int3   
11011ac8:	mov    ds:0x53cff6c1,eax
11011acd:	clc    
11011ace:	ret    
11011acf:	jle    0x11011a68
11011ad1:	mov    esi,0x677d39ff
11011ad6:	mov    esp,0x799a0e
11011adb:	jbe    0x11011acf
11011add:	bts    DWORD PTR [ecx],eax
11011ae0:	ins    BYTE PTR es:[edi],dx
11011ae1:	xchg   ebx,eax
11011ae2:	add    BYTE PTR [eax+0x4026478f],ah
11011ae8:	clc    
11011ae9:	mov    edi,0x89ac1e14
11011aee:	ror    dh,0x8a
11011af1:	or     DWORD PTR [edi+0x4c9f7bf6],edi
11011af7:	add    bl,bh
11011af9:	pop    es
11011afa:	add    dh,BYTE PTR [ebx-0x34918148]
11011b00:	js     0x11011b09
11011b02:	sbb    bl,BYTE PTR ds:0xc834c5b2
11011b08:	cmp    ah,BYTE PTR [edx-0x3a22316]
11011b0e:	add    ebp,ebp
11011b10:	idiv   ebp
11011b12:	pop    ds
11011b13:	iret   
11011b14:	sar    DWORD PTR [ecx-0x61],0xbb
11011b18:	ucomiss xmm7,DWORD PTR [ebx-0x2793ec86]
11011b1f:	sbb    BYTE PTR [edx-0x2b9b18f8],ah
11011b25:	mov    bh,0x95
11011b27:	jl     0x11011afd
11011b29:	icebp  
11011b2a:	sbb    al,BYTE PTR [edx-0x39]
11011b2d:	cmp    esp,edi
11011b2f:	ds mov esi,0x3f6a8f05
11011b35:	out    0xe7,eax
11011b37:	jnp    0x11011b3a
11011b39:	or     edx,DWORD PTR [esi]
11011b3b:	dec    ah
11011b3d:	ins    DWORD PTR es:[edi],dx
11011b3e:	test   al,0x38
11011b40:	mov    esp,ebp
11011b42:	cmp    al,0x6a
11011b44:	mov    edx,0x36104572
11011b49:	dec    edx
11011b4a:	ja     0x11011af7
11011b4c:	jb     0x11011bac
11011b4e:	imul   edx,ebp,0x18ac5608
11011b54:	rcl    ecx,0x4f
11011b57:	fst    DWORD PTR ds:0xddacf25e
11011b5d:	loopne 0x11011ba0
11011b5f:	sti    
11011b60:	lods   al,BYTE PTR ds:[esi]
11011b61:	into   
11011b62:	sahf   
11011b63:	jne    0x11011b4e
11011b65:	stc    
11011b66:	or     eax,0x4016c172
11011b6b:	rol    BYTE PTR [edx+0x7e1252f2],0x56
11011b72:	clc    
11011b73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11011b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11011b75:	push   esi
11011b76:	ret    0xfea7
11011b79:	mov    cl,0xb7
11011b7b:	call   0x47812235
11011b80:	adc    eax,DWORD PTR [eax+0x3]
11011b83:	xor    BYTE PTR [esi],0x1
11011b86:	mov    dh,0x39
11011b88:	add    BYTE PTR [eax+0x6f],cl
11011b8b:	pop    ebx
11011b8c:	ds ins DWORD PTR es:[edi],dx
11011b8e:	mov    es,WORD PTR [eax]
11011b90:	imul   eax,DWORD PTR [eax],0x7a181514
11011b96:	ret    0x5d95
11011b99:	pop    es
11011b9a:	jnp    0x11011b62
11011b9c:	(bad)  
11011b9d:	std    
11011b9e:	dec    esp
11011b9f:	adc    al,0xde
11011ba1:	lds    eax,FWORD PTR [edx]
11011ba3:	or     DWORD PTR [ecx+0x39b503bc],0xb5062360
11011bad:	sub    DWORD PTR [eax-0x16],edx
11011bb0:	jo     0x11011be8
11011bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11011bb3:	mov    eax,0xbad007c8
11011bb8:	inc    edx
11011bb9:	sbb    dh,BYTE PTR [edx+0x68]
11011bbc:	aas    
11011bbd:	pop    ebp
11011bbe:	pop    edi
11011bbf:	rol    DWORD PTR ds:0x3e17bf9f,0x71
11011bc6:	stc    
11011bc7:	inc    esi
11011bc8:	mov    eax,0x8c71bef7
11011bcd:	pop    ds
11011bce:	loopne 0x11011b99
11011bd0:	xor    eax,0xd0adc048
11011bd5:	icebp  
11011bd6:	outs   dx,DWORD PTR ds:[esi]
11011bd7:	cmp    BYTE PTR [edx-0x4d],ah
11011bda:	retf   
11011bdb:	dec    ebp
11011bdc:	(bad)  
11011bdd:	sbb    BYTE PTR [eax-0x7248ee5c],al
11011be3:	cld    
11011be4:	or     al,0x24
11011be6:	sub    eax,0xcf59bf36
11011beb:	les    esp,FWORD PTR [edx-0x3a]
11011bee:	aaa    
11011bef:	nop
11011bf0:	loop   0x11011c22
11011bf2:	add    eax,0xd30ed3b
11011bf7:	iret   
11011bf8:	jns    0x11011bec
11011bfa:	std    
11011bfb:	loopne 0x11011ba2
11011bfd:	iret   
11011bfe:	fst    DWORD PTR [ebx]
11011c00:	jbe    0x11011bdd
11011c02:	jns    0x11011c49
11011c04:	xchg   ebx,eax
11011c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11011c06:	jmp    0x11011c1b
11011c08:	je     0x11011c05
11011c0a:	mov    esp,0x5b3f63a
11011c0f:	inc    ecx
11011c10:	push   ss
11011c11:	sbb    al,0xdb
11011c13:	mov    edi,0xc70fe140
11011c18:	stc    
11011c19:	in     al,0xdf
11011c1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11011c1d:	out    dx,eax
11011c1e:	int3   
11011c1f:	fild   WORD PTR [esi+esi*2+0x654a013]
11011c26:	jl     0x11011bc3
11011c28:	pop    es
11011c29:	add    BYTE PTR [ebp+0x2],ch
11011c2c:	pop    eax
11011c2d:	xchg   edi,eax
11011c2e:	and    BYTE PTR [ecx],cl
11011c30:	aas    
11011c31:	cdq    
11011c32:	add    DWORD PTR [ecx-0x47],esp
11011c35:	mov    edx,0x7acf60eb
11011c3a:	in     eax,0x17
11011c3c:	pop    eax
11011c3d:	js     0x11011bf6
11011c3f:	push   es
11011c40:	or     BYTE PTR [ebp+ecx*2+0x48],dh
11011c44:	push   0x3b
11011c46:	jno    0x11011ca7
11011c48:	test   al,0x2a
11011c4a:	ins    DWORD PTR es:[edi],dx
11011c4b:	lahf   
11011c4c:	in     eax,dx
11011c4d:	fcomi  st,st(1)
11011c4f:	adc    ch,dh
11011c51:	fst    DWORD PTR [eax-0x3f]
11011c54:	addr16 mov edi,0x7b3e01b6
11011c5a:	aad    0x7d
11011c5c:	jo     0x11011c41
11011c5e:	test   esi,0x158439b0
11011c64:	and    ebx,DWORD PTR [eax]
11011c66:	add    BYTE PTR [eax],ch
11011c68:	popa   
11011c69:	push   ebx
11011c6a:	push   0x3f
11011c6c:	xchg   edi,eax
11011c6d:	add    eax,0x924e7263
11011c72:	nop
11011c73:	lods   al,BYTE PTR ds:[esi]
11011c74:	dec    ecx
11011c75:	loopne 0x11011c44
11011c77:	dec    eax
11011c78:	cs cmp al,0x43
11011c7b:	out    dx,al
11011c7c:	add    eax,0xb4040c8
11011c81:	aas    
11011c82:	std    
11011c83:	stos   BYTE PTR es:[edi],al
11011c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11011c85:	test   BYTE PTR [esi],0x82
11011c88:	xor    al,0x3d
11011c8a:	xor    eax,0x643f4782
11011c8f:	sub    eax,0xdeffdafc
11011c94:	or     DWORD PTR [esi-0x1d],edi
11011c97:	mov    DWORD PTR [ebx+0x466b8ec2],edi
11011c9d:	jns    0x11011d1d
11011c9f:	inc    ebp
11011ca0:	retf   
11011ca1:	cmp    eax,0xe9621577
11011ca6:	jp     0x11011cf6
11011ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11011ca9:	arpl   WORD PTR [eax+edi*1],bp
11011cac:	mov    esp,0x3f841177
11011cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11011cb2:	push   es
11011cb3:	jg     0x11011cb1
11011cb5:	jge    0x11011c74
11011cb7:	adc    ebx,DWORD PTR [edi+0x69]
11011cba:	add    al,dl
11011cbc:	adc    BYTE PTR es:0xaedfc,0xda
11011cc4:	enter  0x52c0,0x8a
11011cc8:	lock mov ch,0x5d
11011ccb:	pop    es
11011ccc:	jnp    0x11011cc4
11011cce:	imul   ebp,DWORD PTR [esi-0x2c887a58],0xffffffa2
11011cd5:	add    eax,0x44
11011cd8:	popa   
11011cd9:	ret    
11011cda:	add    edi,DWORD PTR [ebx+eax*1+0x468de3a1]
11011ce1:	mov    ds:0xdbcf7d86,eax
11011ce6:	sar    bh,1
11011ce8:	xchg   BYTE PTR [edi],bh
11011cea:	mov    al,ds:0x218a1f20
11011cef:	enter  0x5b8,0x0
11011cf3:	jbe    0x11011d54
11011cf5:	std    
11011cf6:	in     al,0xee
11011cf8:	xor    DWORD PTR [esi+esi*2-0x2b],ebx
11011cfc:	push   es
11011cfd:	clc    
11011cfe:	hlt    
11011cff:	adc    eax,0x6f77c2f7
11011d04:	lahf   
11011d05:	sbb    ecx,0xffffffb9
11011d08:	adc    al,0x55
11011d0a:	enter  0x673,0xd8
11011d0e:	js     0x11011d10
11011d10:	stos   BYTE PTR es:[edi],al
11011d11:	ret    
11011d12:	bndldx (bad),[eax]
11011d15:	xchg   esp,eax
11011d16:	jo     0x11011d73
11011d18:	outs   dx,DWORD PTR ds:[esi]
11011d19:	inc    edx
11011d1a:	and    eax,0x6424c6a2
11011d1f:	pop    ds
11011d20:	fcmovne st,st(7)
11011d22:	sar    BYTE PTR [edx*1+0x3d0f183d],cl
11011d29:	pusha  
11011d2a:	or     eax,0x3bf1eb3c
11011d2f:	ret    
11011d30:	xor    ecx,DWORD PTR [esi-0x4e13c048]
11011d36:	retf   
11011d37:	dec    esp
11011d38:	icebp  
11011d39:	pop    ecx
11011d3a:	xchg   esi,eax
11011d3b:	and    dh,dl
11011d3d:	cmp    dh,BYTE PTR [ebx]
11011d3f:	sti    
11011d40:	cmp    dh,dh
11011d42:	imul   edx,DWORD PTR [eax],0x3afdf8ad
11011d48:	lods   al,BYTE PTR ds:[esi]
11011d49:	fidivr WORD PTR [ebx+0x497f6c94]
11011d4f:	clc    
11011d50:	inc    ebx
11011d51:	mov    dh,al
11011d53:	inc    ebp
11011d54:	jg     0x11011d27
11011d56:	cmp    esi,ebp
11011d58:	in     eax,0x37
11011d5a:	loopne 0x11011d5b
11011d5c:	outs   dx,DWORD PTR ds:[esi]
11011d5d:	out    dx,eax
11011d5e:	fidivr DWORD PTR [edx+0x2d]
11011d61:	sub    DWORD PTR [edx+0x1cfbdaf0],ebp
11011d67:	data16 out 0xcc,al
11011d6a:	test   DWORD PTR [ebx+0x218808ca],ecx
11011d70:	pop    esi
11011d71:	adc    cl,BYTE PTR [esi+edi*1-0x7437f074]
11011d78:	jmp    DWORD PTR [ecx-0x78]
11011d7b:	inc    esp
11011d7c:	push   ecx
11011d7d:	hlt    
11011d7e:	jg     0x11011d00
11011d80:	test   al,0x84
11011d82:	mov    al,ds:0x20afc222
11011d87:	push   ecx
11011d88:	pop    es
11011d89:	outs   dx,DWORD PTR ds:[esi]
11011d8a:	shr    eax,1
11011d8c:	sub    DWORD PTR [edi],0xffffffbe
11011d8f:	clc    
11011d90:	loopne 0x11011d15
11011d92:	rcl    DWORD PTR [eax],1
11011d94:	arpl   WORD PTR [edx],sp
11011d96:	push   cs
11011d97:	fs add cl,dl
11011d9a:	jo     0x11011db1
11011d9c:	add    al,0xb9
11011d9e:	popf   
11011d9f:	mov    ecx,0xbb66739c
11011da4:	imul   esi,DWORD PTR [edi-0x51],0xffffffbd
11011da8:	mov    edi,0xaaadfd5e
11011dad:	jmp    0x57b3:0x32fbddde
11011db4:	dec    esi
11011db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11011db6:	das    
11011db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11011db8:	ja     0x11011e2f
11011dba:	push   ebp
11011dbb:	ja     0x11011d6c
11011dbd:	scas   eax,DWORD PTR es:[edi]
11011dbe:	(bad)  
11011dbf:	lods   eax,DWORD PTR ds:[esi]
11011dc0:	push   esi
11011dc1:	aad    0x53
11011dc3:	sbb    DWORD PTR [edi+0x11],0x3236000
11011dca:	(bad)  [ecx+eax*8]
11011dcd:	and    esp,ebp
11011dcf:	add    esi,DWORD PTR [eax-0x17]
11011dd2:	hlt    
11011dd3:	jge    0x11011e54
11011dd5:	fwait
11011dd6:	sub    al,0xc4
11011dd8:	ror    DWORD PTR [edi],1
11011dda:	or     BYTE PTR [ecx+edi*1-0x19287efa],bh
11011de1:	repnz push cs
11011de3:	sub    BYTE PTR [ecx+0x4a092ac1],bh
11011de9:	lea    ebp,[esp+ebp*4-0x22]
11011ded:	xchg   edi,eax
11011dee:	(bad)  
11011df0:	xchg   ebx,eax
11011df1:	mov    edi,0x9e49733c
11011df6:	jns    0x11011de9
11011df8:	mov    esp,0x45ecf9fc
11011dfd:	jns    0x11011e7e
11011dff:	ja     0x11011e80
11011e01:	fsubr  QWORD PTR [edi-0x67583fce]
11011e07:	or     ecx,DWORD PTR [ebx+ecx*4]
11011e0a:	outs   dx,DWORD PTR ds:[esi]
11011e0b:	xchg   esp,eax
11011e0c:	and    BYTE PTR [ebx-0x917ff16],ah
11011e12:	xor    edi,DWORD PTR [ebx+0x5c38ecc1]
11011e18:	ss pop ebp
11011e1a:	dec    ebx
11011e1b:	adc    BYTE PTR [edx],al
11011e1d:	js     0x11011e8f
11011e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11011e20:	mov    ds:0x36e3ad49,al
11011e25:	sbb    eax,0x2f92d9df
11011e2a:	jle    0x11011e2a
11011e2c:	test   BYTE PTR [esi+esi*8-0x6d],bh
11011e30:	(bad)  
11011e31:	in     al,0x8b
11011e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11011e34:	mov    cs,ecx
11011e36:	(bad)  
11011e37:	outs   dx,DWORD PTR ds:[esi]
11011e38:	cmp    ah,BYTE PTR [edx]
11011e3a:	rol    DWORD PTR [edi+0x30],1
11011e3d:	test   al,0x2e
11011e3f:	rcr    BYTE PTR [ecx],cl
11011e41:	xor    esp,eax
11011e43:	pop    ecx
11011e44:	xor    eax,0x8fa2b621
11011e49:	pop    esi
11011e4a:	pop    ds
11011e4b:	push   0x657ec415
11011e50:	(bad)  
11011e51:	push   eax
11011e52:	fild   QWORD PTR [edi+0x1f]
11011e55:	aas    
11011e56:	xchg   ebp,eax
11011e57:	push   0x45
11011e59:	clc    
11011e5a:	(bad)  
11011e5b:	jae    0x11011de9
11011e5d:	sbb    BYTE PTR [eax],0x4
11011e60:	mov    ah,0x36
11011e62:	add    BYTE PTR [eax+0x4a802a],al
11011e68:	ss push ds
11011e6a:	loopne 0x11011e8b
11011e6c:	mov    cl,0xca
11011e6e:	out    dx,al
11011e6f:	jp     0x11011e51
11011e71:	imul   ebx,DWORD PTR [ecx],0x6afec1d
11011e77:	or     BYTE PTR [eax-0x11],bl
11011e7a:	xor    al,0x50
11011e7d:	loopne 0x11011eab
11011e7f:	fnsave [esi-0x450b0e08]
11011e85:	and    DWORD PTR [edx+0x7],edi
11011e88:	inc    eax
11011e89:	push   edx
11011e8a:	shl    BYTE PTR [ebp-0x43],1
11011e8d:	test   al,0xfe
11011e8f:	pop    ebx
11011e90:	(bad)  
11011e91:	or     BYTE PTR [edx+edi*8-0xac3611a],bh
11011e98:	in     al,dx
11011e99:	add    eax,0x9ed2f739
11011e9e:	cmp    al,0xfd
11011ea0:	ret    0x7905
11011ea3:	in     eax,0xcd
11011ea5:	mov    cl,0x84
11011ea7:	mov    al,0xb7
11011ea9:	pop    edi
11011eaa:	js     0x11011ec0
11011eac:	rol    BYTE PTR [eax+0x557de2a7],0x94
11011eb3:	scas   eax,DWORD PTR es:[edi]
11011eb4:	inc    esi
11011eb5:	sbb    eax,0x4817734e
11011eba:	cmp    ebp,edi
11011ebc:	js     0x11011f3a
11011ebe:	std    
11011ebf:	(bad)  
11011ec0:	pop    eax
11011ec1:	cmp    cl,BYTE PTR [ecx]
11011ec3:	outs   dx,BYTE PTR ds:[esi]
11011ec4:	mov    ebx,0xe40c3793
11011ec9:	aam    0xed
11011ecb:	(bad)  
11011ecc:	in     al,0x33
11011ece:	jecxz  0x11011e61
11011ed0:	dec    BYTE PTR [ebx]
11011ed2:	lahf   
11011ed3:	cmp    ebp,DWORD PTR [edx]
11011ed5:	mov    bh,0x9e
11011ed7:	sbb    al,0x7f
11011ed9:	lock ret 
11011edb:	add    DWORD PTR [ebp+0x54],esp
11011ede:	das    
11011edf:	aad    0x96
11011ee1:	mov    ebp,0x2be21926
11011ee6:	sbb    al,0x28
11011ee8:	out    0x5e,al
11011eea:	test   al,0xb3
11011eec:	arpl   WORD PTR [ebx+0x3f],bp
11011eef:	arpl   si,di
11011ef1:	rcl    esi,0xb6
11011ef4:	cld    
11011ef5:	out    0xd1,al
11011ef7:	iret   
11011ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11011ef9:	pop    edx
11011efa:	ret    0xc000
11011efd:	mov    ?,esp
11011eff:	imul   ecx,DWORD PTR ds:0xd8419800,0x66
11011f06:	or     cl,BYTE PTR [edx]
11011f08:	adc    al,al
11011f0a:	fstp   DWORD PTR [eax+0x65]
11011f0d:	pop    edi
11011f0e:	cli    
11011f0f:	div    BYTE PTR [ebx-0x2c4f36d]
11011f15:	add    BYTE PTR [eax-0x42],0x77
11011f19:	mov    al,ds:0x519102b6
11011f1e:	pop    es
11011f1f:	sub    cl,BYTE PTR [ecx+0x4943cc28]
11011f25:	xor    cl,BYTE PTR [eax-0x75ca8cee]
11011f2b:	push   esp
11011f2c:	je     0x11011f16
11011f2e:	call   0x6bb2:0x11da10f1
11011f35:	mov    ebp,0xfc81def3
11011f3a:	sti    
11011f3b:	cmc    
11011f3c:	dec    ebx
11011f3d:	repnz cld 
11011f3f:	dec    ebx
11011f40:	xchg   edi,eax
11011f41:	in     al,0xad
11011f43:	ja     0x11011f54
11011f45:	in     al,0xdd
11011f47:	div    edi
11011f49:	gs test edx,0xfe707c81
11011f50:	mov    dl,0xbc
11011f52:	mov    bh,0x7b
11011f54:	and    bh,ch
11011f56:	jge    0x11011fc8
11011f58:	and    bh,ch
11011f5a:	pop    edi
11011f5b:	sbb    BYTE PTR [edx+edx*2-0x68],cl
11011f5f:	popf   
11011f60:	cmp    BYTE PTR [edx],bl
11011f62:	inc    esi
11011f63:	repz mov eax,ds:0xeaeb1f1c
11011f69:	mov    esi,0xb647a3db
11011f6f:	in     al,0xda
11011f71:	arpl   WORD PTR [ebx+0x72],bx
11011f74:	ret    
11011f75:	mov    ch,0xdb
11011f77:	bnd jmp 0x38cc2ed8
11011f7d:	outs   dx,BYTE PTR ds:[esi]
11011f7e:	cmp    DWORD PTR [edi+edx*8],ebp
11011f81:	popf   
11011f82:	fcomp  DWORD PTR [esi]
11011f84:	jmp    0x11011f7c
11011f86:	jne    0x11011fce
11011f88:	mov    ch,0x36
11011f8a:	or     eax,0x88db5aa4
11011f8f:	mov    cl,0x34
11011f91:	push   0x28
11011f93:	xor    eax,0x60d73de7
11011f98:	mov    eax,0x7ed6d966
11011f9d:	(bad)  
11011f9e:	cld    
11011f9f:	ret    
11011fa0:	loope  0x11011f58
11011fa2:	cld    
11011fa3:	cli    
11011fa4:	xchg   ecx,eax
11011fa5:	fist   DWORD PTR [ebx-0x53]
11011fa8:	push   ecx
11011fa9:	add    BYTE PTR [eax+0x2a],ah
11011fac:	rcl    BYTE PTR ds:0x2a360003,0x10
11011fb3:	and    eax,0x95626780
11011fb8:	(bad)  
11011fba:	loopne 0x11011faf
11011fbc:	test   ecx,esp
11011fbe:	jmp    0x11012032
11011fc0:	dec    eax
11011fc1:	mov    edx,0x84c08059
11011fc6:	stc    
11011fc7:	daa    
11011fc8:	int3   
11011fc9:	jnp    0x11011f7c
11011fcb:	fs (bad) 
11011fcd:	xor    DWORD PTR [ebx-0x69],edx
11011fd0:	add    DWORD PTR [eax-0x5],0x28250208
11011fd7:	in     al,dx
11011fd8:	push   edi
11011fd9:	add    al,BYTE PTR [ebp-0x5fffebd2]
11011fdf:	mov    edi,0xa830c8eb
11011fe4:	or     al,0x40
11011fe6:	xchg   edi,eax
11011fe7:	popf   
11011fe8:	mov    fs,esp
11011fea:	and    BYTE PTR [ecx+eiz*8],bl
11011fed:	and    ah,BYTE PTR [ecx-0x4297451c]
11011ff3:	mov    DWORD PTR [esi-0x46],esi
11011ff6:	xlat   BYTE PTR ds:[ebx]
11011ff7:	inc    ebp
11011ff8:	inc    bh
11011ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11011ffb:	xor    eax,0x4cb58be3
11012000:	int    0x22
11012002:	lock inc esp
11012004:	jl     0x1101200f
11012006:	mov    BYTE PTR [ecx+0x0],cl
11012009:	mov    ah,0x3d
1101200b:	es lahf 
1101200d:	lahf   
1101200e:	inc    esp
1101200f:	aam    0x80
11012011:	xor    BYTE PTR [ebp-0x33f91109],ah
11012017:	jg     0x1101208d
11012019:	int3   
1101201a:	cld    
1101201b:	xchg   DWORD PTR [ebx+0x39],ebp
1101201e:	cld    
1101201f:	retf   0x7d99
11012022:	xor    cl,BYTE PTR gs:[edi-0xe7f9413]
11012029:	daa    
1101202a:	(bad)  
1101202b:	or     al,BYTE PTR [eax]
1101202d:	inc    edi
1101202e:	jmp    0xf303:0xd3028113
11012035:	cmpxchg8b (bad)
11012036:	(bad)  
11012037:	int3   
11012038:	aas    
11012039:	sbb    BYTE PTR [esi+0x25b86041],cl
1101203f:	mov    edi,0x52a7defa
11012044:	sub    eax,0x1570bbfa
11012049:	loopne 0x11011fd5
1101204b:	pop    es
1101204c:	add    BYTE PTR ds:0xfb5be881,al
11012052:	repnz inc ebx
11012054:	jmp    FWORD PTR [edx]
11012056:	and    al,0x80
11012058:	dec    esi
11012059:	inc    ecx
1101205a:	loopne 0x11012058
1101205c:	cwde   
1101205d:	icebp  
1101205e:	das    
1101205f:	mov    dh,0x7
11012061:	add    DWORD PTR [ecx+0x20ac4aad],ebx
11012067:	nop
11012068:	arpl   WORD PTR [ebx],ax
1101206a:	lock hlt 
1101206c:	jge    0x110120e8
1101206e:	mov    esi,0xab52e265
11012073:	adc    esp,edi
11012075:	call   0xeb390a4b
1101207a:	pusha  
1101207b:	mov    esi,0x67c3cdbd
11012080:	inc    ecx
11012081:	add    ah,BYTE PTR [ebx+ebx*4+0x74a9a1c]
11012088:	into   
11012089:	outs   dx,DWORD PTR ds:[esi]
1101208a:	mov    edx,0x8cdbdec9
1101208f:	stc    
11012090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11012091:	and    edi,DWORD PTR [edi-0x7e]
11012094:	stc    
11012095:	add    DWORD PTR [eax+esi*8],0xffffffcb
11012099:	xchg   DWORD PTR [edi+0x4b],ebp
1101209c:	mov    ch,0x4a
1101209e:	add    eax,eax
110120a0:	dec    ebx
110120a1:	or     BYTE PTR [edx+0x45],dh
110120a4:	add    al,BYTE PTR [eax]
110120a6:	stos   BYTE PTR es:[edi],al
110120a7:	add    BYTE PTR [ecx+0x0],dl
110120aa:	clc    
110120ab:	retf   0x2fc3
110120ae:	dec    edi
110120af:	push   edx
110120b0:	imul   esi,DWORD PTR [ebp+0xf],0x2
110120b4:	pop    esp
110120b5:	adc    ch,BYTE PTR [eax-0x64]
110120b8:	push   esp
110120b9:	lods   al,BYTE PTR fs:[esi]
110120bb:	push   cs
110120bc:	add    al,0x9b
110120be:	add    BYTE PTR [ebx-0x3b565c10],cl
110120c4:	retf   
110120c5:	call   DWORD PTR ds:0x1c18a587
110120cb:	mov    esp,0x63a01a07
110120d0:	(bad)  
110120d1:	std    
110120d2:	mov    bl,al
110120d4:	outs   dx,DWORD PTR ds:[esi]
110120d5:	into   
110120d6:	iret   
110120d7:	outs   dx,BYTE PTR ds:[esi]
110120d8:	lds    esp,FWORD PTR [ebx]
110120da:	or     al,0xbd
110120dc:	mov    edx,0x5c39236a
110120e1:	dec    edi
110120e2:	out    dx,eax
110120e3:	pop    ss
110120e4:	repz rol DWORD PTR [ebx+0x735362aa],0xc7
110120ec:	pop    esp
110120ed:	jge    0x11012084
110120ef:	mov    esi,0x6540aa39
110120f4:	add    DWORD PTR [edi],ecx
110120f6:	rol    DWORD PTR [esi-0x6752c0],cl
110120fc:	les    ecx,FWORD PTR [ebp-0x5943399d]
11012102:	adc    esp,esi
11012104:	lahf   
11012105:	stos   BYTE PTR es:[edi],al
11012106:	push   cs
11012107:	push   cs
11012108:	repz xchg ebp,ebp
1101210b:	das    
1101210c:	push   ds
1101210d:	mov    edx,0xabb2d535
11012112:	sbb    al,BYTE PTR [eax]
11012114:	add    BYTE PTR [eax+edx*1],0x7d
11012118:	jnp    0x11012111
1101211a:	jl     0x11012113
1101211c:	aad    0xc2
1101211e:	adc    ch,0xb
11012121:	or     BYTE PTR [eax+0x49],dh
11012124:	mov    al,ds:0x2ce394eb
11012129:	pop    ebp
1101212a:	jne    0x11012199
1101212c:	mov    esi,0x5407f540
11012131:	and    al,0x66
11012133:	and    bh,BYTE PTR [eax-0x7a188e33]
11012139:	sub    bh,dl
1101213b:	ret    0x8991
1101213e:	sub    BYTE PTR [edi+0x19],ch
11012141:	int    0x15
11012143:	retf   
11012144:	pop    ecx
11012145:	fisttp QWORD PTR [esi-0x5c950ef]
1101214b:	jecxz  0x11012140
1101214d:	dec    eax
1101214e:	cmc    
1101214f:	cmp    edx,esi
11012151:	jmp    DWORD PTR [esi-0x51a3812a]
11012157:	imul   edx,DWORD PTR [ecx-0x34],0x1f
1101215b:	retf   0x1fcf
1101215e:	mov    esp,0xdbad539
11012163:	add    ah,al
11012165:	sub    bh,BYTE PTR [ebx+0x17affbe7]
1101216b:	or     ebx,DWORD PTR [edi+0x76]
1101216e:	add    al,BYTE PTR [edx]
11012170:	out    0x21,eax
11012172:	mov    ebp,0x68125a58
11012177:	mov    ah,0x20
11012179:	test   eax,0x7d522a49
1101217e:	and    bh,BYTE PTR [esi+0x6fd35f6e]
11012184:	adc    esp,DWORD PTR [edx]
11012186:	xor    al,0x23
11012188:	cmc    
11012189:	inc    eax
1101218a:	mov    al,ds:0xbf303114
1101218f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11012190:	inc    esi
11012191:	cmp    bh,BYTE PTR [eax]
11012193:	mov    DWORD PTR [esi-0x3],0xedadeb98
1101219a:	xchg   ebx,edx
1101219c:	push   esp
1101219d:	add    eax,0x7306fca8
110121a2:	clc    
110121a3:	mov    ch,0x58
110121a5:	test   al,0x93
110121a7:	in     eax,0xed
110121a9:	fucomip st,st(2)
110121ab:	xchg   ecx,eax
110121ac:	stc    
110121ad:	ret    
110121ae:	call   0x5347:0xcefb3f0e
110121b5:	sub    eax,0x2001aabc
110121ba:	xchg   esp,eax
110121bb:	jae    0x1101216e
110121bd:	retf   0xfabe
110121c0:	enter  0xc51b,0x48
110121c4:	mov    esp,0x9bd81008
110121c9:	iret   
110121ca:	cmp    esp,DWORD PTR [eax+0x23a24549]
110121d0:	popf   
110121d1:	stc    
110121d2:	sbb    eax,0xb7f41555
110121d7:	jp     0x11012239
110121d9:	inc    edi
110121da:	jp     0x110121f0
110121dc:	xchg   ebx,eax
110121dd:	cmp    edx,0x0
110121e0:	sub    esi,ebx
110121e2:	jmpw   0xd3d1
110121e6:	adc    esi,ebx
110121e8:	pushf  
110121e9:	iret   
110121ea:	sbb    DWORD PTR [ebp+0x2771c251],ebp
110121f0:	call   0xe0946135
110121f5:	lds    ebp,FWORD PTR [ebp-0xa]
110121f8:	mov    al,ds:0xe6efc185
110121fd:	cmp    DWORD PTR [ecx+0xffb583f],ebx
11012203:	mov    bh,0x62
11012205:	(bad)  
11012206:	push   eax
11012207:	jle    0x11012203
11012209:	in     eax,dx
1101220a:	sbb    edx,DWORD PTR [ebx-0x53]
1101220d:	fadd   QWORD PTR [eax]
1101220f:	inc    eax
11012210:	lods   al,BYTE PTR ds:[esi]
11012211:	mov    dl,0xaf
11012213:	std    
11012214:	loopne 0x110121d5
11012216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11012217:	btc    DWORD PTR [edi+0x10],edi
1101221b:	cwde   
1101221c:	add    al,BYTE PTR [ecx-0x6d]
1101221f:	mov    al,0x61
11012221:	pusha  
11012222:	int3   
11012223:	pop    eax
11012224:	fdiv   DWORD PTR [eax-0x74]
11012227:	call   0xf7fd6d94
1101222c:	hlt    
1101222d:	fiadd  WORD PTR [ebp+0x5]
11012230:	aad    0xb6
11012232:	inc    esp
11012233:	fisttp WORD PTR [esi+0x44]
11012236:	jl     0x110121cf
11012238:	xchg   BYTE PTR [ebx-0x335afcc5],ah
1101223e:	mov    esp,0xc104d909
11012243:	inc    ebx
11012244:	int    0xc5
11012246:	jle    0x110122ae
11012248:	in     eax,dx
11012249:	outs   dx,DWORD PTR ds:[esi]
1101224a:	iret   
1101224b:	cld    
1101224c:	sub    DWORD PTR [ebx+0x50fe659f],eax
11012252:	sahf   
11012253:	cld    
11012254:	(bad)  
11012255:	xchg   DWORD PTR [ebx+0x2d],edx
11012258:	fld    QWORD PTR [eax]
1101225a:	inc    eax
1101225b:	lods   al,BYTE PTR ds:[esi]
1101225c:	mov    dl,0x7b
1101225e:	pop    ds
1101225f:	jge    0x1101220c
11012261:	or     al,0x56
11012263:	pop    ecx
11012264:	popa   
11012265:	adc    BYTE PTR [eax],al
11012267:	mov    dl,0xde
11012269:	or     ecx,0x5d02f103
1101226f:	jo     0x11012253
11012271:	adc    BYTE PTR [ecx+0x550206ce],bh
11012277:	in     al,dx
11012278:	push   es
11012279:	sub    esi,esp
1101227b:	(bad)  
1101227c:	jns    0x1101228f
1101227e:	mov    al,0xe
11012280:	push   ebx
11012281:	pop    ss
11012282:	jae    0x11012287
11012284:	pop    edx
11012285:	and    DWORD PTR [ebx-0x53],0x2e
11012289:	repnz xor DWORD PTR ds:0x50660372,esi
11012290:	pop    ss
11012291:	or     esi,DWORD PTR [ebp-0x4e]
11012294:	mov    esp,0xe611dbfd
11012299:	(bad)  
1101229b:	call   FWORD PTR [edi+edx*2]
1101229e:	lahf   
1101229f:	gs (bad) 
110122a1:	jo     0x110122a2
110122a3:	loope  0x11012245
110122a5:	cwde   
110122a6:	push   eax
110122a8:	in     al,0x3
110122aa:	pop    ds
110122ab:	dec    edx
110122ac:	mov    ch,0x76
110122ae:	add    eax,DWORD PTR [eax]
110122b0:	mov    cl,0xca
110122b2:	out    dx,al
110122b3:	jge    0x110122a9
110122b5:	ins    DWORD PTR es:[edi],dx
110122b6:	cdq    
110122b7:	inc    ebp
110122b8:	lods   al,BYTE PTR ds:[esi]
110122b9:	jns    0x110122db
110122bb:	mov    al,0x5f
110122bd:	or     DWORD PTR [esi],edx
110122bf:	jmp    0xc8c1:0x866a0403
110122c6:	dec    eax
110122c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
110122c8:	fiadd  WORD PTR [ecx]
110122ca:	sbb    ch,BYTE PTR [esp+eiz*8]
110122cd:	ds mov ch,0x48
110122d0:	retf   0x14b1
110122d3:	adc    esi,DWORD PTR [esi]
110122d5:	jo     0x110122ee
110122d7:	mov    edx,0xacdb85aa
110122dc:	stos   BYTE PTR es:[edi],al
110122dd:	std    
110122de:	mov    al,ds:0xdca8004b
110122e3:	and    edx,DWORD PTR [edx]
110122e5:	xor    al,0x34
110122e7:	mov    bh,0xab
110122e9:	das    
110122ea:	ins    BYTE PTR es:[edi],dx
110122eb:	daa    
110122ec:	jle    0x110122e9
110122ee:	pop    esp
110122ef:	out    0xcf,al
110122f1:	div    ebx
110122f3:	xor    esp,esi
110122f5:	das    
110122f6:	inc    esi
110122f7:	jmp    edx
110122f9:	sar    DWORD PTR [edi-0xe],cl
110122fc:	sub    ebx,0xde2d53
11012302:	inc    eax
11012303:	lods   al,BYTE PTR ds:[esi]
11012304:	mov    dl,0xaf
11012306:	push   eax
11012308:	popf   
11012309:	xchg   edx,eax
1101230a:	jmp    0xda3143b9
1101230f:	pop    esp
11012310:	cmp    eax,DWORD PTR [ecx]
11012312:	add    BYTE PTR [ebx],0xa
11012315:	add    dl,BYTE PTR [ebp+0x2026c188]
1101231b:	xor    ch,dh
1101231d:	sbb    BYTE PTR [esp+ebx*4+0x72],dh
11012321:	fdiv   QWORD PTR [ebx+0x31e3bb6]
11012327:	mov    edx,0x685e313a
1101232c:	inc    esi
1101232d:	outs   dx,BYTE PTR ds:[esi]
1101232e:	xlat   BYTE PTR ds:[ebx]
1101232f:	mov    ss,WORD PTR [eax]
11012331:	mov    edi,DWORD PTR [eax]
11012333:	les    edi,FWORD PTR [edx-0x45de225e]
11012339:	mov    ebx,0x89c41e95
1101233e:	add    al,0x4c
11012340:	mov    ah,0xd1
11012342:	ins    DWORD PTR es:[edi],dx
11012343:	sub    ebx,DWORD PTR [edx]
11012345:	cld    
11012346:	call   0x884b:0xf0887f30
1101234d:	std    
1101234e:	xor    esp,esi
11012350:	vmptrst QWORD PTR [ebx]
11012353:	popf   
11012354:	sbb    esp,edi
11012356:	sub    al,0xf3
11012358:	xchg   ebp,ebp
1101235a:	cdq    
1101235b:	outs   dx,DWORD PTR ds:[esi]
1101235c:	pop    esi
1101235d:	xchg   edi,eax
1101235e:	push   0xfffffff5
11012360:	push   es
11012361:	add    BYTE PTR [edx-0x6b],ah
11012364:	jge    0x11012363
11012366:	mov    cl,0x77
11012368:	dec    ebx
11012369:	shl    DWORD PTR [ebx+edi*1+0x61b7d810],1
11012370:	ret    
11012371:	adc    eax,0xe52fe810
11012376:	js     0x110123c5
11012378:	cld    
11012379:	sub    eax,0x3131780d
1101237e:	fcom   DWORD PTR [ebx]
11012380:	xchg   ebx,eax
11012381:	cdq    
11012382:	sub    BYTE PTR [ebp+0x3ff63fee],cl
11012388:	outs   dx,DWORD PTR ds:[esi]
11012389:	stos   BYTE PTR es:[edi],al
1101238a:	sub    eax,0x7d3459d6
1101238f:	adc    BYTE PTR ds:0x97693cf,dl
11012395:	bound  edx,QWORD PTR [ebx-0x50]
11012398:	icebp  
11012399:	pop    es
1101239a:	test   eax,0x9e7a853e
1101239f:	or     DWORD PTR [ebx+0x7f99b2fa],esi
110123a5:	and    BYTE PTR [edi+0x4f],al
110123a8:	fsubr  QWORD PTR [edi+eax*4]
110123ab:	(bad)  
110123ac:	aaa    
110123ad:	arpl   si,di
110123af:	dec    ecx
110123b0:	mov    eax,0x3a01daaf
110123b5:	data16 (bad) 
110123b7:	shl    bl,1
110123b9:	xor    ebx,edi
110123bb:	mov    esp,0xdf2d536
110123c0:	add    ah,al
110123c2:	sub    bl,BYTE PTR [ebx+0x75f14000]
110123c8:	je     0x110123d0
110123ca:	add    bl,BYTE PTR [eax]
110123cc:	pop    es
110123cd:	rol    BYTE PTR [esi],1
110123cf:	add    al,0x9a
110123d1:	fadd   DWORD PTR [esi+eiz*1]
110123d4:	dec    ecx
110123d5:	inc    ebp
110123d6:	(bad)  
110123d7:	jmp    0xfd94:0xea8edc0
110123de:	cdq    
110123df:	sbb    bh,dl
110123e1:	hlt    
110123e2:	popa   
110123e3:	cdq    
110123e4:	pusha  
110123e5:	sbb    BYTE PTR [ebp-0x11],cl
110123e8:	pop    ebp
110123e9:	leave  
110123ea:	mov    BYTE PTR [ebx+0x52055314],cl
110123f0:	ss add bl,bh
110123f3:	sti    
110123f4:	jmp    0x61080322
110123f9:	push   ebx
110123fa:	sbb    eax,0xd78800c4
110123ff:	ds nop
11012401:	push   ss
11012402:	inc    esi
11012403:	fcomp  DWORD PTR [edi+0x56e074c8]
11012409:	mov    bl,0xfa
1101240b:	sbb    cl,BYTE PTR [esi-0x6c0cd104]
11012411:	fdivr  st,st(6)
11012413:	ss int3 
11012415:	pop    ds
11012416:	dec    dh
11012418:	fdivr  QWORD PTR [edi+0xb98001]
1101241e:	loopne 0x1101243b
11012420:	(bad)  
11012421:	mov    ebp,0xd13c4d37
11012426:	or     DWORD PTR [eax],ecx
11012428:	les    esp,FWORD PTR [esi]
1101242a:	adc    ch,dh
1101242c:	add    DWORD PTR [edx],eax
1101242e:	loopne 0x1101244d
11012430:	or     BYTE PTR [edx-0x592e6280],dl
11012436:	mov    ecx,0x808c72f4
1101243b:	adc    eax,0xc01f3b6a
11012440:	jae    0x11012443
11012442:	dec    esi
11012443:	stos   DWORD PTR es:[edi],eax
11012444:	jne    0x11012482
11012446:	adc    dl,BYTE PTR [edx-0x71]
11012449:	add    ah,BYTE PTR [ebx+eiz*4+0x157da278]
11012450:	leave  
11012451:	inc    ebp
11012452:	clc    
11012453:	pop    es
11012454:	fsubr  DWORD PTR [edx-0x5f]
11012457:	into   
11012458:	ins    BYTE PTR es:[edi],dx
11012459:	sbb    edi,0xffffffe2
1101245c:	cwde   
1101245d:	aas    
1101245e:	mov    esp,0x7fdc9fc1
11012463:	and    dl,ch
11012465:	or     DWORD PTR ds:0xb2ac400,0x0
1101246c:	push   eax
1101246d:	jl     0x1101249b
1101246f:	imul   ecx,DWORD PTR [edx+eax*1],0xffffffc2
11012473:	mov    ebp,0xec628d03
11012478:	sbb    edx,DWORD PTR [eax-0x1e9e0ff3]
1101247e:	ret    
1101247f:	test   eax,0xdb37f1df
11012484:	cmp    al,0xc6
11012486:	mov    al,ds:0xfca01736
1101248b:	lahf   
1101248c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1101248d:	inc    edx
1101248e:	je     0x11012447
11012490:	push   eax
11012491:	out    0xf2,eax
11012493:	cdq    
11012494:	aas    
11012495:	rol    BYTE PTR [esi],1
11012497:	add    BYTE PTR [edx],bh
11012499:	add    al,BYTE PTR [eax+0x3d59e3e2]
1101249f:	adc    BYTE PTR [eax+0x62],ch
110124a2:	sbb    ah,bh
110124a4:	inc    edx
110124a5:	sbb    DWORD PTR [ecx],esi
110124a7:	sbb    BYTE PTR [ebx+eax*4],cl
110124aa:	leave  
110124ab:	dec    ecx
110124ac:	cmp    al,BYTE PTR [esi+0x3d]
110124af:	mov    al,0xe4
110124b1:	xor    DWORD PTR [ecx+0x2518b17d],edi
110124b7:	cmp    BYTE PTR [eax-0x5d9b8606],dh
110124bd:	dec    esi
110124be:	imul   ebx,DWORD PTR [ebx],0x40
110124c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
110124c2:	popf   
110124c3:	jp     0x110124f1
110124c5:	ret    0x34fb
110124c8:	pop    ecx
110124c9:	mov    ah,0x23
110124cb:	mov    esp,?
110124cd:	jae    0x110124fe
110124cf:	aam    0xa9
110124d1:	xchg   esi,eax
110124d2:	cld    
110124d3:	popf   
110124d4:	mov    ecx,0xf4a75f98
110124d9:	push   cs
110124da:	xchg   bl,bl
110124dc:	lods   eax,DWORD PTR ds:[esi]
110124dd:	cwde   
110124de:	aas    
110124df:	rol    BYTE PTR [esi],1
110124e1:	add    dh,ah
110124e3:	add    eax,0x37dfc780
110124e8:	inc    esi
110124e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
110124ea:	cmc    
110124eb:	push   es
110124ec:	add    ebp,esi
110124ee:	push   cs
110124ef:	jl     0x1101252b
110124f1:	dec    esp
110124f2:	and    BYTE PTR [edx],dl
110124f4:	pusha  
110124f5:	es inc edi
110124f7:	xchg   DWORD PTR [edi+0x13],ebp
110124fa:	jbe    0x110124c7
110124fc:	inc    esi
110124fd:	fld    QWORD PTR [ecx-0x5a]
11012500:	mov    ah,0xd1
11012502:	imul   DWORD PTR [ecx+eax*2+0x34a802ab]
11012509:	shr    BYTE PTR [edx+eax*8],1
1101250c:	scas   eax,DWORD PTR es:[edi]
1101250d:	loope  0x11012551
1101250f:	popf   
11012510:	xchg   DWORD PTR [esi-0x6a],esi
11012513:	ret    0xa1fc
11012516:	popf   
11012517:	aas    
11012518:	mov    ecx,0x37aa78ef
1101251d:	sbb    eax,DWORD PTR [eax]
1101251f:	mov    BYTE PTR [ebp+0x36],dl
11012522:	add    DWORD PTR [eax+0x7e9943f2],eax
11012528:	inc    esp
11012529:	mov    eax,DWORD PTR [ecx+eax*4]
1101252c:	dec    ebx
1101252d:	std    
1101252e:	das    
1101252f:	dec    eax
11012530:	dec    edx
11012531:	lea    eax,[eax-0x1603a98]
11012537:	xor    al,0x92
11012539:	imul   esp,DWORD PTR [eax],0x31
1101253c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1101253d:	ficomp WORD PTR [esi+0x1269f047]
11012543:	scas   al,BYTE PTR es:[edi]
11012544:	int3   
11012545:	cmp    al,0x4
11012547:	in     al,dx
11012548:	xlat   BYTE PTR ds:[ebx]
11012549:	sub    al,0xa6
1101254b:	mov    eax,ds:0x3f04d466
11012550:	call   FWORD PTR [ebx+ecx*1+0x75]
11012554:	data16 lods al,BYTE PTR ds:[esi]
11012556:	rcr    bl,cl
11012558:	es cdq 
1101255a:	(bad)  
1101255b:	mov    esp,0x3681fcc
11012560:	add    BYTE PTR [ebp+0x1],bl
11012563:	or     al,0x72
11012566:	inc    eax
11012567:	mov    al,ds:0xa508b58f
1101256c:	hlt    
1101256d:	push   cs
1101256e:	inc    eax
1101256f:	mov    ds:0x48193a51,al
11012574:	cdq    
11012575:	or     eax,0xddae7cf
1101257a:	call   0x89f5:0xc47d3f5e
11012581:	dec    ecx
11012582:	mov    cl,0x18
11012584:	jle    0x11012601
11012586:	cs add eax,0x37d5cc28
1101258c:	push   edi
1101258d:	es lahf 
1101258f:	adc    eax,0x1b40fe66
11012594:	add    al,ch
11012596:	adc    al,BYTE PTR [eax]
11012598:	mov    ch,BYTE PTR [edi]
1101259a:	push   0x20cebbb6
1101259f:	adc    BYTE PTR [ebx+eax*1-0x3b07cf3f],bh
110125a6:	adc    edi,esi
110125a8:	fadd   QWORD PTR [ecx]
110125aa:	je     0x11012547
110125ac:	inc    ebp
110125ad:	mov    ch,cl
110125af:	jmp    0x71:0x56bdc8c3
110125b6:	loop   0x11012637
110125b8:	sbb    al,0x8d
110125ba:	ins    BYTE PTR es:[edi],dx
110125bb:	add    BYTE PTR [ecx-0x53520007],dl
110125c1:	std    
110125c2:	imul   esi,DWORD PTR [edx],0xfffffff2
110125c5:	sub    ebp,DWORD PTR [ebp+0x0]
110125c8:	mov    al,ds:0x3f28006b
110125cd:	mov    al,ds:0x833aeee9
110125d2:	adc    BYTE PTR [esi+ebx*8],0x1
110125d6:	xchg   esp,eax
110125d7:	add    al,0xea
110125d9:	pop    ebp
110125da:	and    eax,0xfc72ba29
110125df:	std    
110125e0:	mov    cl,0x17
110125e2:	adc    al,0x19
110125e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
110125e5:	xor    eax,0x230dc940
110125ea:	outs   dx,BYTE PTR ds:[esi]
110125eb:	cmp    bl,cl
110125ed:	enter  0x5fd6,0xd6
110125f1:	shr    DWORD PTR [eax+ecx*8],cl
110125f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
110125f5:	(bad)  
110125f7:	fnstsw WORD PTR [ebp+0x31]
110125fa:	jg     0x1101259c
110125fc:	or     al,0x0
110125fe:	or     BYTE PTR [ecx-0xf],ch
11012601:	jno    0x11012678
11012603:	loopne 0x11012612
11012605:	add    BYTE PTR [eax],ah
11012607:	push   ecx
11012608:	add    BYTE PTR [eax],cl
1101260a:	mov    ah,0xe2
1101260c:	and    al,dl
1101260e:	aam    0x3b
11012610:	lock mov ds:0xef001360,eax
11012616:	shr    BYTE PTR [ebx+ebx*4+0x73728dcd],0xcd
1101261e:	xlat   BYTE PTR ds:[ebx]
1101261f:	lahf   
11012620:	jecxz  0x110125d9
11012622:	pop    ecx
11012623:	xor    al,0x28
11012625:	xchg   edi,eax
11012626:	call   0xae43e889
1101262b:	mov    esp,DWORD PTR [esi-0x2]
1101262e:	inc    eax
1101262f:	cdq    
11012630:	add    al,al
11012632:	jb     0x11012636
11012634:	push   0x79
11012636:	xlat   BYTE PTR ds:[ebx]
11012637:	sbb    al,0x6f
11012639:	add    BYTE PTR [eax+0x4a],ah
1101263c:	retf   
1101263d:	push   es
1101263e:	sub    DWORD PTR [esi+0x73652416],0xeafda607
11012648:	ror    BYTE PTR [ebx],0xd0
1101264b:	shr    BYTE PTR [ebp+0x27],1
1101264e:	sub    eax,0x56972740
11012653:	xor    DWORD PTR [ebp+0x77],esi
11012656:	pop    edi
11012657:	int3   
11012658:	pop    ds
11012659:	sub    BYTE PTR [ebx],dl
1101265b:	add    BYTE PTR [ecx+eiz*4+0x4f],dh
1101265f:	xchg   esp,eax
11012660:	add    ah,ch
11012662:	call   0xf98431f6
11012667:	cmc    
11012668:	push   edi
11012669:	cmp    DWORD PTR [eax],eax
1101266b:	add    al,0x5a
1101266d:	or     BYTE PTR es:[ecx+ebx*4+0x72],dh
11012672:	pop    esp
11012673:	mov    al,ch
11012675:	inc    edi
11012676:	jle    0x11012694
11012678:	dec    ecx
11012679:	cmp    esi,ecx
1101267b:	cli    
1101267c:	fdivr  QWORD PTR [edx+0x36]
1101267f:	mov    al,ds:0x82cc2e93
11012684:	add    eax,0xfec5e94b
11012689:	push   edi
1101268a:	cmp    al,0xff
1101268c:	stos   BYTE PTR es:[edi],al
1101268d:	in     eax,dx
1101268e:	rcl    edx,0xdc
11012691:	(bad)  
11012692:	(bad)  
11012693:	xor    eax,0x1940fe63
11012698:	add    BYTE PTR [eax],dl
1101269a:	xchg   esi,eax
1101269b:	(bad)  
1101269c:	arpl   WORD PTR [edx],bp
1101269e:	add    BYTE PTR [edx],dh
110126a0:	cmp    eax,0xf2dd8003
110126a5:	ja     0x11012712
110126a7:	or     eax,DWORD PTR [eax]
110126a9:	mov    edx,0x7cf04a
110126ae:	adc    BYTE PTR [eax-0x3b],ch
110126b1:	inc    ecx
110126b2:	mov    al,ds:0x90a482d1
110126b7:	pop    ecx
110126b8:	test   al,0xe8
110126ba:	push   es
110126bb:	(bad)  
110126bc:	int    0x4f
110126be:	out    0xd4,al
110126c0:	dec    ebx
110126c1:	add    DWORD PTR [ebx+0x183c493],eax
110126c7:	or     ch,0x67
110126ca:	mov    BYTE PTR [ecx],dh
110126cc:	cld    
110126cd:	sub    edi,ebp
110126cf:	add    BYTE PTR [edx-0x2752553e],0xb3
110126d6:	or     dh,ah
110126d8:	sete   BYTE PTR [ecx]
110126db:	add    BYTE PTR [esi+0xa56004],bl
110126e1:	adc    eax,0xf07971ff
110126e6:	mov    esp,DWORD PTR [ebp-0x27]
110126e9:	xchg   ebx,eax
110126ea:	xor    eax,0x81050002
110126ef:	nop
110126f0:	adc    eax,0xdbbb5cf8
110126f5:	pop    esp
110126f6:	mov    ecx,0xadc36184
110126fb:	ins    BYTE PTR es:[edi],dx
110126fc:	add    BYTE PTR [ebx-0x78],dh
110126ff:	lock jae 0x11012707
11012702:	add    bh,BYTE PTR [ecx]
11012704:	aam    0x28
11012706:	ret    0xeaef
11012709:	mov    ds:0x12f8abf,eax
1101270e:	pop    eax
1101270f:	sub    DWORD PTR [eax-0x34e8ff57],eax
11012715:	fbld   TBYTE PTR [ebx]
11012717:	repz scas eax,DWORD PTR es:[edi]
11012719:	xor    al,0x0
1101271b:	loopne 0x1101273f
1101271d:	mov    eax,ds:0xa870001b
11012722:	xchg   esi,eax
11012723:	push   esp
11012724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11012725:	add    eax,0xa7d1f135
1101272a:	sub    al,0xfc
1101272c:	ins    DWORD PTR es:[edi],dx
1101272d:	jg     0x1101274a
1101272f:	inc    esi
11012730:	(bad)  
11012731:	mov    ebx,0xce4bbaee
11012736:	popf   
11012737:	fstp   TBYTE PTR [esi+eiz*2+0x2a929e87]
1101273e:	add    BYTE PTR [edx+edx*1+0x9050003],al
11012745:	aad    0xff
11012747:	adc    DWORD PTR [eax],eax
11012749:	inc    edx
1101274a:	or     DWORD PTR [edi+edi*4+0x20a000b2],ecx
11012751:	sub    BYTE PTR [edx],0xc0
11012754:	jae    0x110127a1
11012756:	jle    0x11012759
11012758:	sub    ecx,DWORD PTR [ebx+0x6c]
1101275b:	sub    eax,0x8da9bec2
11012760:	add    al,0xe0
11012762:	add    DWORD PTR [eax-0x5d],eax
11012765:	mov    DWORD PTR ds:0x45fd2f57,edi
1101276b:	mov    ds:0x5b000339,ax
11012771:	push   eax
11012772:	cld    
11012773:	not    DWORD PTR [eax+eax*4+0x3]
11012777:	pop    ecx
11012778:	inc    ecx
11012779:	add    BYTE PTR [eax+0x21ab042b],dh
1101277f:	lock stc 
11012781:	and    eax,0xa69580bf
11012786:	and    BYTE PTR ss:[eax],dh
11012789:	xchg   edi,eax
1101278a:	pop    ss
1101278b:	and    BYTE PTR [edx+0x6d09a3b0],dl
11012791:	cwde   
11012792:	aas    
11012793:	fwait
11012794:	(bad)  
11012795:	and    al,0xb3
11012797:	rcr    esp,1
11012799:	scas   al,BYTE PTR es:[edi]
1101279a:	punpckhbw mm1,QWORD PTR [ebx+0x8d1ffd5]
110127a1:	push   0x6597006d
110127a6:	test   DWORD PTR [ecx],eax
110127a8:	add    BYTE PTR [edi+0x4000db07],dl
110127ae:	sub    dh,0x80
110127b1:	pop    ecx
110127b2:	test   BYTE PTR [ecx-0x137e27],bh
110127b8:	mov    dl,0xd6
110127ba:	pop    ss
110127bb:	call   0x75712708
110127c0:	in     eax,dx
110127c1:	(bad)  
110127c3:	pop    ds
110127c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
110127c5:	pusha  
110127c6:	bound  ebx,QWORD PTR [ebx]
110127c8:	or     eax,0x19804168
110127cd:	add    BYTE PTR [ebp+0x5],dl
110127d0:	push   eax
110127d1:	das    
110127d2:	add    dl,bl
110127d4:	add    BYTE PTR [esi+0x16],dl
110127d7:	add    al,dl
110127d9:	push   es
110127da:	adc    BYTE PTR [eax],al
110127dc:	loopne 0x11012763
110127de:	and    eax,0x20b580bf
110127e3:	cmp    esi,DWORD PTR [edi-0x40]
110127e6:	push   edx
110127e7:	fistp  DWORD PTR [ebx+edi*8+0x29]
110127eb:	retf   0x17a9
110127ee:	add    DWORD PTR [esi+0x33],esp
110127f1:	repnz aaa 
110127f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
110127f4:	aas    
110127f5:	enter  0xc,0xd8
110127f9:	sub    al,cl
110127fb:	mov    eax,0xa003165
11012800:	add    dh,dl
11012802:	push   es
11012803:	mov    al,0x92
11012805:	add    al,al
11012807:	bound  eax,QWORD PTR [ecx]
11012809:	(bad)  
1101280a:	mov    ecx,0x3ebfe7dc
1101280f:	inc    esp
11012810:	xchg   ebx,eax
11012811:	mov    dh,BYTE PTR [esp+ecx*2-0xd]
11012815:	dec    eax
11012816:	add    DWORD PTR [ebx],ebx
11012818:	out    0x6f,al
1101281a:	inc    ebp
1101281b:	mov    edi,0x6f289997
11012820:	add    DWORD PTR [eax+0x23fe2b15],eax
11012826:	add    BYTE PTR [eax],dh
11012828:	xadd   dl,cl
1101282b:	add    BYTE PTR [eax-0x28],al
1101282e:	inc    edi
1101282f:	or     DWORD PTR [eax-0x2b],eax
11012832:	adc    BYTE PTR [edi],0x97
11012835:	sti    
11012836:	cld    
11012837:	xlat   BYTE PTR ds:[ebx]
11012838:	mov    esi,DWORD PTR [edx-0x43]
1101283b:	add    ebx,esi
1101283d:	enter  0xf2cd,0xef
11012841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11012842:	sub    BYTE PTR [edi+0x45],ah
11012845:	lahf   
11012846:	mov    bl,0x65
11012848:	ins    BYTE PTR es:[edi],dx
11012849:	inc    esi
1101284b:	fcmovu st,st(7)
1101284d:	cwde   
1101284e:	jle    0x11012877
11012850:	jne    0x11012852
11012852:	inc    eax
11012853:	arpl   WORD PTR [eax],sp
11012855:	add    al,BYTE PTR [edx+0x42000d]
1101285b:	or     BYTE PTR [edi+ecx*4+0x51784012],cl
11012862:	dec    ebx
11012863:	add    eax,0xfcc84080
11012868:	sub    al,0x16
1101286a:	inc    eax
1101286b:	in     eax,dx
1101286c:	add    BYTE PTR [edi-0x60],al
1101286f:	sbb    al,0x25
11012871:	in     eax,0x58
11012873:	pop    ecx
11012874:	jbe    0x11012840
11012876:	adc    cl,dh
11012878:	sbb    eax,0xc52aa286
1101287d:	fadd   QWORD PTR ss:[ebx]
11012880:	out    dx,eax
11012881:	cmp    eax,0x5bb2ed30
11012886:	test   BYTE PTR [eax+esi*2+0x6b],0xf7
1101288b:	adc    esp,ebx
1101288d:	fdiv   DWORD PTR [ecx]
1101288f:	outs   dx,BYTE PTR ds:[esi]
11012890:	xchg   esp,esp
11012892:	pop    edx
11012893:	mov    dh,0xaf
11012895:	in     eax,dx
11012896:	dec    esi
11012897:	mov    esi,0x64186b13
1101289c:	int3   
1101289d:	cdq    
1101289e:	xchg   ebp,eax
1101289f:	adc    eax,0x93c41138
110128a4:	fwait
110128a5:	adc    DWORD PTR [eax-0x5c50373b],ebp
110128ab:	push   ebp
110128ac:	and    ah,bh
110128ae:	inc    eax
110128af:	in     eax,dx
110128b0:	(bad)  
110128b1:	gs jae 0x110128b2
110128b4:	xor    bh,BYTE PTR [ecx-0x7894e272]
110128ba:	in     al,dx
110128bb:	outs   dx,BYTE PTR ds:[esi]
110128bd:	lds    edi,FWORD PTR [ecx]
110128bf:	sahf   
110128c0:	xchg   esp,ebp
110128c2:	jge    0x11012931
110128c4:	pop    edi
110128c5:	je     0x1101293b
110128c7:	push   esi
110128c8:	or     ax,0x22e5
110128cc:	adc    al,0x14
110128ce:	out    dx,eax
110128cf:	sub    eax,0x4163d3
110128d4:	pusha  
110128d5:	cli    
110128d6:	mov    edi,0x6f78004a
110128db:	sti    
110128dc:	cmp    al,0x8a
110128de:	ja     0x110128bd
110128e0:	popa   
110128e1:	out    0xb1,eax
110128e3:	dec    esi
110128e4:	add    al,0x0
110128e6:	cmp    eax,0x2baa92de
110128eb:	adc    BYTE PTR [ecx],al
110128ed:	and    BYTE PTR [eax],dh
110128ef:	jno    0x110128fb
110128f1:	add    al,0xb4
110128f3:	sbb    al,0x31
110128f5:	inc    ebp
110128f6:	push   ebp
110128f7:	or     DWORD PTR [ebp+0x4c83ef13],ebp
110128fd:	es mov al,0xf5
11012900:	sahf   
11012901:	add    ebx,ebx
11012903:	mov    bh,0xe0
11012905:	xor    DWORD PTR [ebp+0x59],0x1f8cb646
1101290c:	cmp    eax,edi
1101290e:	jmp    0x7408:0x31a8d551
11012915:	dec    ecx
11012916:	dec    ebp
11012917:	push   edi
11012918:	in     al,dx
11012919:	imul   ebp,DWORD PTR [eax-0x10],0x7ed58fd3
11012920:	pushf  
11012921:	xchg   edi,eax
11012922:	dec    ecx
11012923:	sbb    DWORD PTR ds:0x105059ce,esp
11012929:	test   eax,0x31ec7f
1101292e:	call   0x7e539211
11012933:	add    eax,DWORD PTR [edx]
11012935:	rol    DWORD PTR [ecx],cl
11012937:	adc    al,0x65
11012939:	push   esp
1101293a:	adc    eax,0xb2982fdd
1101293f:	sbb    ebp,DWORD PTR [ecx]
11012941:	ins    BYTE PTR es:[edi],dx
11012942:	hlt    
11012943:	inc    edi
11012944:	add    al,al
11012946:	sti    
11012947:	and    BYTE PTR [eax],al
11012949:	loope  0x1101297e
1101294b:	cdq    
1101294c:	shl    BYTE PTR [edx],cl
1101294e:	add    eax,eax
11012950:	mov    BYTE PTR [edx],0x28
11012953:	add    BYTE PTR [eax+0x3c],ch
11012956:	add    BYTE PTR [edx+0x40cc8ec0],0x40
1101295d:	inc    edi
1101295e:	jnp    0x1101293d
11012960:	xlat   BYTE PTR ds:[ebx]
11012961:	adc    bh,0xe3
11012964:	call   0x29c129f8
11012969:	xchg   esp,eax
1101296a:	mov    ch,0xd5
1101296c:	jnp    0x1101297c
1101296e:	inc    ebx
1101296f:	mov    dl,0xef
11012971:	(bad)  
11012972:	loopne 0x11012900
11012974:	leave  
11012975:	mov    bh,0x84
11012977:	xor    edi,DWORD PTR [ebp-0x54]
1101297a:	or     al,0x64
1101297c:	push   es
1101297d:	push   0xeaa377c9
11012982:	and    bh,0x1d
11012985:	jo     0x110129e6
11012987:	push   eax
11012988:	add    eax,DWORD PTR [ebx+0x6ffc4c61]
1101298e:	enter  0xe1fc,0xc7
11012992:	cli    
11012993:	shl    DWORD PTR [ebx],0xc6
11012996:	mov    ss,WORD PTR [ebp+0x207c903]
1101299c:	dec    edi
1101299d:	fdivr  QWORD PTR [ebp-0x93c25b4]
110129a3:	mov    ebx,0x58cd2622
110129a8:	add    BYTE PTR [eax+0x29],dl
110129ab:	inc    eax
110129ac:	cdq    
110129ad:	cmp    DWORD PTR [ebx+esi*8-0x2ff470ae],edx
110129b4:	jge    0x11012a0b
110129b6:	adc    esi,eax
110129b8:	cli    
110129b9:	cmp    eax,0xef6000e1
110129be:	das    
110129bf:	mov    dl,0x40
110129c1:	add    al,dl
110129c3:	lods   eax,DWORD PTR ds:[esi]
110129c4:	sbb    eax,0x8014ace5
110129c9:	add    DWORD PTR [ecx+0x4c],eax
110129cc:	adc    eax,0x31d82040
110129d1:	(bad)  
110129d2:	aas    
110129d3:	add    al,0x25
110129d5:	dec    BYTE PTR es:[edi]
110129d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
110129d9:	ds jp  0x110129a3
110129dc:	sahf   
110129dd:	adc    DWORD PTR [ebp+0x31981802],0x162b2703
110129e7:	mov    eax,?
110129e9:	fcomp  DWORD PTR [esi+0x54ab36c7]
110129ef:	xchg   esp,eax
110129f0:	jl     0x11012a31
110129f2:	pop    ebp
110129f3:	sbb    eax,DWORD PTR [esi]
110129f5:	jae    0x11012a3e
110129f7:	call   DWORD PTR [esi]
110129f9:	int3   
110129fa:	scas   eax,DWORD PTR es:[edi]
110129fb:	mov    ds:0xbb086595,eax
11012a00:	jg     0x11012a62
11012a02:	idiv   BYTE PTR ds:0x60806000
11012a08:	lds    ebp,FWORD PTR [esi+0x11]
11012a0b:	cs add eax,0x15dc7388
11012a11:	loope  0x110129d0
11012a13:	sub    eax,0xe0355958
11012a18:	adc    dl,BYTE PTR [esp+ebx*1]
11012a1b:	fst    QWORD PTR [ecx]
11012a1d:	add    al,0x2e
11012a1f:	or     BYTE PTR [edi],dl
11012a21:	std    
11012a22:	mov    ebp,0x5e7c2000
11012a27:	add    ch,BYTE PTR [ebp-0x58]
11012a2a:	cmc    
11012a2b:	mov    ecx,0x3cf0006f
11012a30:	add    DWORD PTR [ebp+ecx*1-0x30],ecx
11012a34:	(bad)  
11012a35:	fimul  WORD PTR [edx+0x2]
11012a38:	enter  0x38f8,0xfa
11012a3c:	and    esi,ebx
11012a3e:	pop    ds
11012a3f:	xchg   edx,eax
11012a40:	sub    bh,BYTE PTR [eax+0x191ff158]
11012a46:	cdq    
11012a47:	cmc    
11012a48:	fstp   TBYTE PTR [ebx]
11012a4a:	mov    dh,0x7d
11012a4c:	mov    ecx,ebp
11012a4e:	icebp  
11012a4f:	push   ds
11012a50:	sub    DWORD PTR [edi+0x25],0xffffffca
11012a54:	push   eax
11012a55:	cmp    BYTE PTR [eax],ch
11012a57:	call   0x192982cf
11012a5c:	in     al,0x4
11012a5e:	add    dh,BYTE PTR ds:0x8543f9d4
11012a64:	cmp    ah,BYTE PTR [edx+0x31]
11012a67:	inc    di
11012a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11012a6a:	test   DWORD PTR [edx],0xb8b9eb5e
11012a70:	cmp    al,0x49
11012a72:	inc    eax
11012a73:	fs jno 0x11012a76
11012a76:	pusha  
11012a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11012a78:	or     bl,bl
11012a7a:	push   ds
11012a7b:	fld    TBYTE PTR [edi]
11012a7d:	xchg   ebp,eax
11012a7e:	mov    BYTE PTR [eax+eax*1],dl
11012a81:	push   eax
11012a82:	or     al,BYTE PTR [eax+0x20]
11012a85:	pusha  
11012a86:	and    edi,DWORD PTR [edi]
11012a88:	add    al,BYTE PTR [edi]
11012a8a:	sbb    edi,ebp
11012a8c:	sbb    DWORD PTR [eax],esi
11012a8e:	(bad)  
11012a8f:	cli    
11012a90:	mov    esp,0x3b500048
11012a95:	add    BYTE PTR ds:0x66626401,0xf
11012a9c:	cmp    BYTE PTR [edx-0x32],ah
11012a9f:	and    ebx,esi
11012aa1:	mov    ds:0xff131fee,eax
11012aa6:	push   ebx
11012aa7:	add    BYTE PTR [eax],ah
11012aa9:	into   
11012aaa:	call   DWORD PTR [ebx-0x3a]
11012aad:	aas    
11012aae:	imul   esp,eax,0xffffffc4
11012ab1:	jnp    0x11012b16
11012ab3:	jnp    0x11012a6b
11012ab5:	popf   
11012ab6:	jae    0x11012ace
11012ab8:	or     al,0x50
11012aba:	jp     0x11012a95
11012abc:	xchg   edx,eax
11012abd:	sbb    eax,ebp
11012abf:	gs stos DWORD PTR es:[edi],eax
11012ac1:	add    eax,ecx
11012ac3:	cmp    esi,DWORD PTR [eax]
11012ac5:	outs   dx,DWORD PTR ds:[esi]
11012ac6:	and    al,0x60
11012ac8:	in     al,dx
11012ac9:	fiadd  DWORD PTR [esi-0x383d84ed]
11012acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11012ad0:	and    edx,DWORD PTR [edi-0x26927ceb]
11012ad6:	ja     0x11012ace
11012ad8:	cmp    eax,0xae86b030
11012add:	pop    esp
11012ade:	arpl   WORD PTR [eax],sp
11012ae0:	mov    dh,0xad
11012ae2:	imul   esp,DWORD PTR [edx+0x0],0xffffff90
11012ae6:	push   edx
11012ae7:	add    edx,esp
11012ae9:	push   ss
11012aea:	and    BYTE PTR [eax],0x80
11012aed:	cmp    bh,BYTE PTR [esi-0xcdff04b]
11012af3:	mov    ds:0x4f9f6ff8,eax
11012af8:	or     cl,BYTE PTR [edi+eiz*1]
11012afb:	aam    0x37
11012afd:	add    BYTE PTR [edx+esi*8],al
11012b00:	in     al,dx
11012b01:	add    BYTE PTR [eax+0x124c406],ch
11012b07:	(bad)  
11012b09:	jmp    DWORD PTR [ecx]
11012b0b:	push   0x31fcc78
11012b10:	sbb    BYTE PTR [eax-0x25],0x3d
11012b14:	adc    eax,0x4f0003c0
11012b19:	in     al,0xb7
11012b1b:	int3   
11012b1c:	mov    esi,0x63c7d91d
11012b21:	sub    ebx,DWORD PTR ds:0xa9640da8
11012b27:	xchg   cl,al
11012b29:	inc    eax
11012b2a:	sub    eax,0xb49d7e46
11012b2f:	bound  ebx,QWORD PTR [ecx]
11012b31:	pop    ds
11012b32:	(bad)
11012b35:	les    esi,FWORD PTR [ecx+0x26cc4dfd]
11012b3b:	pusha  
11012b3c:	aas    
11012b3d:	jp     0x11012ad0
11012b3f:	stos   BYTE PTR es:[edi],al
11012b40:	out    dx,al
11012b41:	out    dx,eax
11012b42:	dec    ecx
11012b43:	add    bh,BYTE PTR [ebp-0x70]
11012b46:	pop    es
11012b47:	add    BYTE PTR [esp+eax*1],cl
11012b4a:	nop
11012b4b:	cdq    
11012b4c:	xchg   ebp,eax
11012b4d:	shl    DWORD PTR [ecx-0x4c],0x8f
11012b51:	(bad)  
11012b52:	cld    
11012b53:	sahf   
11012b54:	clc    
11012b55:	iret   
11012b56:	push   esp
11012b57:	mov    eax,ds:0x517df5a
11012b5c:	add    BYTE PTR [edx-0x12fd5d0b],bh
11012b62:	cld    
11012b63:	add    BYTE PTR [ecx+eax*1],al
11012b66:	mov    ebx,0xf5ae087f
11012b6b:	je     0x11012bec
11012b6d:	imul   esp,DWORD PTR [ebp-0x29],0xfffffff6
11012b71:	in     al,0x82
11012b73:	adc    BYTE PTR [eax+0xdb178df],0xe8
11012b7a:	loope  0x11012bdc
11012b7c:	and    bh,bh
11012b7e:	jbe    0x11012b24
11012b80:	pop    esp
11012b81:	adc    edi,ecx
11012b83:	pop    ds
11012b84:	(bad)  
11012b85:	adc    DWORD PTR [eax],eax
11012b87:	loopne 0x11012c01
11012b89:	dec    esi
11012b8a:	sti    
11012b8b:	xor    eax,0x4e3186c
11012b90:	mov    edx,0x82d00b98
11012b95:	stc    
11012b96:	aad    0x87
11012b98:	int    0xac
11012b9a:	fistp  WORD PTR [eax-0xa]
11012b9d:	pushf  
11012b9e:	repz push ss
11012ba0:	or     al,0x3c
11012ba2:	sub    DWORD PTR [eax],esp
11012ba4:	push   edi
11012ba5:	add    al,al
11012ba7:	ins    DWORD PTR es:[edi],dx
11012ba8:	ffreep st(4)
11012baa:	add    al,cl
11012bac:	add    dl,BYTE PTR [esi]
11012bae:	jae    0x11012bb9
11012bb0:	xor    dh,BYTE PTR [ebp-0x40]
11012bb3:	out    dx,al
11012bb4:	fstp   TBYTE PTR [eax-0x7005d081]
11012bba:	jns    0x11012c01
11012bbc:	push   0xffffffcf
11012bbe:	mov    al,ds:0x7ac0000f
11012bc3:	mov    ebp,0xc9471351
11012bc8:	mov    al,0x45
11012bca:	data16 ds adc al,0x29
11012bce:	or     BYTE PTR [edx],dl
11012bd0:	xor    ecx,edx
11012bd2:	mov    edi,0xfdeff8a9
11012bd7:	iret   
11012bd8:	push   ebx
11012bd9:	add    DWORD PTR [eax+0x37a99ff5],ebx
11012bdf:	or     al,0x0
11012be1:	sub    al,0x78
11012be3:	fnstcw WORD PTR [ebp+0x6]
11012be6:	add    al,0x61
11012be8:	sbb    esp,edx
11012bea:	and    BYTE PTR [esi-0x70],cl
11012bed:	jbe    0x11012bc5
11012bef:	mov    dl,0x86
11012bf1:	imul   ebx,eax,0xd013e430
11012bf7:	xchg   edi,eax
11012bf8:	ds mov al,bh
11012bfb:	inc    bh
11012bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11012bfe:	inc    esi
11012bff:	xor    DWORD PTR [edx+0x1f],0xffffff81
11012c03:	pusha  
11012c04:	xor    al,0x66
11012c06:	inc    BYTE PTR [ecx-0x7a]
11012c09:	ror    DWORD PTR [edi-0x25],0x11
11012c0d:	mov    dh,0x21
11012c0f:	(bad)  
11012c10:	pop    ebp
11012c11:	sbb    ch,bh
11012c13:	cmp    eax,0x178fd7c6
11012c18:	inc    edi
11012c19:	mov    cl,0x3d
11012c1b:	mov    DWORD PTR [ebx],eax
11012c1d:	and    BYTE PTR [edi+0x13],0xc8
11012c21:	icebp  
11012c22:	add    cl,BYTE PTR [eax+ecx*2+0x1ca2fb1b]
11012c29:	xor    eax,0x580aa620
11012c2e:	and    BYTE PTR [eax+0x5],ah
11012c31:	lahf   
11012c32:	sbb    edx,ebx
11012c34:	inc    ebp
11012c35:	cwde   
11012c36:	pop    edx
11012c37:	adc    al,0x33
11012c39:	sub    BYTE PTR [esi],0x14
11012c3c:	add    BYTE PTR [edx],al
11012c3e:	(bad)
11012c41:	retf   
11012c42:	sbb    al,0xca
11012c44:	call   0x7f5515df
11012c49:	aas    
11012c4a:	or     eax,DWORD PTR [eax]
11012c4c:	and    bh,cl
11012c4e:	mov    ds:0x90bb6dbf,eax
11012c53:	fbstp  TBYTE PTR [ebx]
11012c55:	jecxz  0x11012c76
11012c57:	repz jb 0x11012cd2
11012c5a:	mov    ds:0x586095bf,eax
11012c5f:	fild   QWORD PTR [edi+ebx*1-0x4b]
11012c63:	lahf   
11012c64:	inc    ecx
11012c65:	or     bh,BYTE PTR [eax+0x6352da0e]
11012c6b:	jle    0x11012caa
11012c6d:	jg     0x11012c56
11012c6f:	popf   
11012c70:	ja     0x11012c80
11012c72:	shl    BYTE PTR [eax],0x38
11012c75:	add    eax,0x27df4480
11012c7a:	and    BYTE PTR [eax],al
11012c7c:	mov    ds:0x13f984ff,eax
11012c81:	and    edi,DWORD PTR [edi]
11012c83:	(bad)  
11012c84:	sbb    eax,0x624d3a3e
11012c89:	imul   ebx,ebp,0xc3a4765d
11012c8f:	(bad)  
11012c91:	lahf   
11012c92:	ins    BYTE PTR es:[edi],dx
11012c93:	in     eax,dx
11012c94:	call   0x5b5dd01f
11012c99:	add    eax,0xf87ea910
11012c9e:	fmul   st,st(6)
11012ca0:	gs dec eax
11012ca2:	add    DWORD PTR [eax+eax*1],ecx
11012ca5:	bound  ebp,QWORD PTR [esi+0x41]
11012ca8:	push   es
11012ca9:	push   es
11012caa:	idiv   BYTE PTR [ecx+0x661fa4e1]
11012cb0:	cld    
11012cb1:	ret    
11012cb2:	sti    
11012cb3:	cs adc eax,0x74cb7400
11012cb9:	or     eax,DWORD PTR [bx+si]
11012cbc:	ins    BYTE PTR es:[edi],dx
11012cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11012cbe:	fs dec esp
11012cc0:	pop    DWORD PTR [ebp+0x18d1b9]
11012cc6:	xor    al,0xed
11012cc8:	das    
11012cc9:	add    eax,DWORD PTR [eax]
11012ccb:	or     eax,DWORD PTR [edx]
11012ccd:	sahf   
11012cce:	adc    eax,edx
11012cd0:	add    eax,DWORD PTR [eax]
11012cd2:	fs out dx,al
11012cd4:	ret    
11012cd5:	push   edx
11012cd6:	xchg   edi,eax
11012cd7:	js     0x11012cf1
11012cd9:	lock fnstcw WORD PTR [esi+0x7]
11012cdd:	sub    eax,esp
11012cdf:	cli    
11012ce0:	mov    esi,?
11012ce2:	mov    WORD PTR [edx-0x11],cs
11012ce5:	shl    BYTE PTR [eax+0x2a07781],0x14
11012cec:	mov    ds,eax
11012cee:	(bad)  
11012cef:	mov    al,ds:0x1dff9963
11012cf4:	sub    DWORD PTR [edx],edx
11012cf6:	pop    eax
11012cf7:	sub    bl,ah
11012cf9:	pop    edx
11012cfa:	(bad)  
11012cfb:	mov    edi,0xac56b644
11012d00:	cmc    
11012d01:	and    al,0x1
11012d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11012d04:	push   es
11012d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11012d06:	hlt    
11012d07:	inc    DWORD PTR [ebp+0x33]
11012d0a:	mov    ebp,0xc8e7d
11012d0f:	cwde   
11012d10:	sbb    edx,esp
11012d12:	push   ebx
11012d13:	(bad)  
11012d14:	test   al,0xbe
11012d17:	sub    eax,0xfa286929
11012d1c:	sbb    al,0x16
11012d1e:	or     eax,0x89c8de00
11012d23:	push   esi
11012d24:	repnz fcom QWORD PTR [edx-0xf4206e6]
11012d2b:	fbstp  TBYTE PTR [esi]
11012d2d:	std    
11012d2e:	pusha  
11012d2f:	jge    0x11012ce1
11012d31:	std    
11012d32:	pusha  
11012d33:	mov    dh,0x0
11012d35:	stos   DWORD PTR es:[edi],eax
11012d36:	jmp    0x11012d13
11012d38:	push   ecx
11012d39:	aas    
11012d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11012d3b:	jmp    0x2c23:0xad0738b0
11012d42:	cmp    bh,BYTE PTR [edi-0x43]
11012d45:	les    esp,FWORD PTR ds:0x2ecbc99b
11012d4b:	mov    ebp,0xcccc8303
11012d50:	inc    edx
11012d51:	adc    ecx,DWORD PTR [ecx]
11012d53:	pusha  
11012d54:	cmp    BYTE PTR [esi+ecx*4],bl
11012d57:	into   
11012d58:	sahf   
11012d59:	cmp    eax,0x3f30483b
11012d5e:	push   edx
11012d5f:	clc    
11012d60:	loopne 0x11012d40
11012d62:	xchg   esi,eax
11012d63:	(bad)  
11012d64:	hlt    
11012d65:	mov    bh,0x1f
11012d67:	xor    BYTE PTR [edx],dh
11012d69:	cmp    dl,BYTE PTR [ebx]
11012d6b:	ins    DWORD PTR es:[edi],dx
11012d6c:	xor    DWORD PTR [eax+0x39020625],ebx
11012d72:	loop   0x11012df3
11012d74:	mov    gs,edi
11012d76:	jg     0x11012dc9
11012d78:	in     al,0x85
11012d7a:	add    eax,0x390248e7
11012d7f:	test   DWORD PTR [ecx+0x40db1b44],edi
11012d85:	cli    
11012d86:	push   es
11012d87:	add    ah,bl
11012d89:	idiv   esp
11012d8b:	out    0xcc,eax
11012d8d:	js     0x11012d55
11012d8f:	sub    al,0xe8
11012d91:	int3   
11012d92:	ins    DWORD PTR es:[edi],dx
11012d93:	push   ss
11012d94:	or     ebp,DWORD PTR [edi-0x1249843b]
11012d9a:	xor    edi,ebx
11012d9c:	ins    DWORD PTR es:[edi],dx
11012d9d:	retf   0xc01b
11012da0:	aam    0x0
11012da2:	push   es
11012da3:	add    BYTE PTR [edi-0x7afbe55b],al
11012da9:	(bad)  
11012daa:	iret   
11012dab:	inc    ebx
11012dac:	in     al,0x9c
11012dae:	dec    edx
11012daf:	or     edi,edx
11012db1:	sub    al,0x2
11012db3:	add    ah,bl
11012db5:	add    BYTE PTR [ebp-0x4b],bh
11012db8:	xor    al,0x7d
11012dba:	fnstenv [edi-0x24]
11012dbd:	jno    0x11012d86
11012dbf:	add    BYTE PTR [ebp+0x5006c403],bh
11012dc5:	popa   
11012dc6:	in     al,dx
11012dc7:	jb     0x11012dad
11012dc9:	pop    ds
11012dca:	lea    ebx,[ecx-0x379ed5c1]
11012dd0:	dec    esp
11012dd1:	lahf   
11012dd2:	(bad)  
11012dd3:	scas   eax,DWORD PTR es:[edi]
11012dd4:	adc    al,0xa3
11012dd6:	mov    edi,0xecc8f8c7
11012ddb:	ins    BYTE PTR es:[edi],dx
11012ddc:	lahf   
11012ddd:	mov    ecx,0xdb85acb5
11012de2:	mov    ?,WORD PTR [esi+0x36]
11012de5:	aam    0x35
11012de7:	mul    cl
11012de9:	das    
11012dea:	xchg   edx,eax
11012deb:	cwde   
11012dec:	mov    ebx,0x64106531
11012df1:	out    dx,al
11012df2:	push   ecx
11012df3:	es std 
11012df5:	les    ebp,FWORD PTR [ecx+eiz*1+0x29]
11012df9:	sub    DWORD PTR [eax+0xbe8f3e],ecx
11012dff:	add    bl,ch
11012e01:	into   
11012e02:	xor    DWORD PTR [ecx+esi*1+0x38152095],esp
11012e09:	adc    edx,DWORD PTR [ebx]
11012e0b:	sti    
11012e0c:	fucomi st,st(0)
11012e0e:	(bad)  
11012e0f:	mov    cl,0x3e
11012e11:	xor    al,0xe9
11012e13:	xchg   DWORD PTR ds:0x86953270,esi
11012e19:	xor    DWORD PTR [eax+0x31e078f5],edi
11012e1f:	push   ebx
11012e20:	adc    edx,DWORD PTR [esp+eax*1]
11012e23:	ds dec esp
11012e25:	cli    
11012e26:	imul   eax,DWORD PTR [edi-0x16],0xeb010051
11012e2d:	sbb    eax,0xf3a39420
11012e32:	arpl   bp,di
11012e34:	popa   
11012e35:	sti    
11012e36:	out    0xb8,al
11012e38:	cld    
11012e39:	dec    edi
11012e3a:	jmp    0x5e8c:0x7465bea2
11012e41:	arpl   WORD PTR [esi],bp
11012e43:	sub    eax,0x898ae066
11012e48:	push   DWORD PTR [ecx+0x46da0079]
11012e4e:	mov    dh,0xbf
11012e50:	push   0x4f00b662
11012e55:	sbb    eax,0xe5460548
11012e5a:	fadd   DWORD PTR [eax+0x1a]
11012e5d:	jns    0x11012e9f
11012e5f:	push   ss
11012e60:	add    DWORD PTR [eax],eax
11012e62:	mov    eax,0x7a823b9f
11012e67:	xchg   ecx,eax
11012e68:	jne    0x11012e13
11012e6a:	push   ecx
11012e6b:	aas    
11012e6c:	inc    edi
11012e6d:	in     al,dx
11012e6e:	outs   dx,DWORD PTR ds:[esi]
11012e6f:	fisub  DWORD PTR [edi-0x3]
11012e72:	rcr    BYTE PTR [ecx+0x7173c137],1
11012e78:	jp     0x11012eeb
11012e7a:	add    BYTE PTR [ecx],dh
11012e7c:	icebp  
11012e7d:	pop    ds
11012e7e:	jecxz  0x11012e9c
11012e80:	xor    BYTE PTR [esi],al
11012e82:	add    BYTE PTR [ecx+0x1124a02],0x4
11012e89:	ds add ch,ch
11012e8c:	jae    0x11012e9b
11012e8e:	and    DWORD PTR [ebx+0x75],0x60
11012e92:	sub    BYTE PTR [ecx],0xc7
11012e95:	shl    edx,1
11012e97:	das    
11012e98:	repz xlat BYTE PTR ds:[ebx]
11012e9b:	rol    BYTE PTR [esi+eiz*2+0x3a],0xff
11012ea0:	sbb    esi,DWORD PTR [edx]
11012ea2:	arpl   WORD PTR [esi-0x1a],di
11012ea5:	retf   
11012ea6:	mov    dh,0x3e
11012ea8:	in     eax,dx
11012ea9:	or     edx,DWORD PTR [edx+0x5]
11012eac:	add    ecx,DWORD PTR [ebx]
11012eae:	adc    cl,ah
11012eb0:	enter  0x1315,0x77
11012eb4:	cmp    eax,0xac22f74b
11012eb9:	std    
11012eba:	push   ds
11012ebb:	lea    esp,[edx]
11012ebd:	out    0x58,eax
11012ebf:	test   al,0x72
11012ec1:	dec    esp
11012ec2:	sbb    ah,BYTE PTR [eax+0x6]
11012ec5:	ds dec ax
11012ec9:	xchg   ecx,eax
11012eca:	adc    BYTE PTR [esi],0xe
11012ecd:	add    BYTE PTR [esi+0x1aa0dcfe],dh
11012ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11012ed4:	sbb    al,ah
11012ed6:	data16 xlat BYTE PTR ds:[ebx]
11012ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11012ed9:	je     0x11012ed9
11012edb:	cs cli 
11012edd:	cwde   
11012ede:	add    al,BYTE PTR [ecx]
11012ee0:	push   ss
11012ee1:	in     eax,dx
11012ee2:	enter  0xc040,0x5a
11012ee6:	std    
11012ee7:	sbb    DWORD PTR [ebx+0x4238005b],eax
11012eed:	(bad)  
11012eee:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
11012ef0:	and    DWORD PTR [eax+0x6928dc0a],0x7798789
11012efa:	es jge 0x11012ec8
11012efd:	fs jle 0x11012ea5
11012f00:	lock rol DWORD PTR [ebp-0xed2006f],0x47
11012f08:	jl     0x11012f25
11012f0a:	les    esp,FWORD PTR [edx-0x49]
11012f0d:	neg    dl
11012f0f:	cwde   
11012f10:	xchg   ebp,eax
11012f11:	sbb    eax,DWORD PTR [edi+0x3e]
11012f14:	stos   DWORD PTR es:[edi],eax
11012f15:	inc    ebx
11012f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11012f17:	es std 
11012f19:	sub    al,0x9b
11012f1b:	cmp    al,0x83
11012f1d:	and    BYTE PTR [ebx+0x1f67809],dh
11012f23:	out    0xe2,al
11012f25:	dec    ebx
11012f26:	mov    ecx,0xa024b2fb
11012f2b:	inc    ebp
11012f2c:	add    eax,DWORD PTR [eax-0x151d3923]
11012f32:	cdq    
11012f33:	popa   
11012f34:	iret   
11012f35:	cmp    eax,DWORD PTR [edi-0x4102260b]
11012f3b:	sti    
11012f3c:	ret    0x154
11012f3f:	iret   
11012f40:	scas   al,BYTE PTR es:[edi]
11012f41:	popa   
11012f42:	out    0x3f,eax
11012f44:	mov    al,ds:0x7e8bc00d
11012f49:	(bad)  
11012f4a:	leave  
11012f4b:	dec    edi
11012f4c:	pop    esi
11012f4d:	cmp    BYTE PTR [eax+ebp*4-0x19],dh
11012f51:	inc    ebx
11012f52:	push   edx
11012f53:	add    BYTE PTR [eax+0x1a501367],0x95
11012f5a:	or     edx,DWORD PTR [edx+0xd830d4e]
11012f60:	cmp    DWORD PTR [esp+esi*2-0x1c],0xffffffb7
11012f65:	int3   
11012f66:	(bad)  
11012f67:	mov    ds:0x98f08ebd,al
11012f6c:	mov    bh,0xfe
11012f6e:	mov    ds:0xb2d8b354,al
11012f73:	rcr    DWORD PTR [edi+0x19676bcd],1
11012f79:	outs   dx,BYTE PTR ds:[esi]
11012f7a:	mov    esp,0x1155bf68
11012f7f:	sti    
11012f80:	jmp    0xb1cf46f8
11012f85:	ins    BYTE PTR es:[edi],dx
11012f86:	(bad)  
11012f87:	mov    al,ds:0xf5e62e77
11012f8c:	mov    BYTE PTR [ecx+0x34bfc],cl
11012f92:	jnp    0x11012f23
11012f94:	pop    esp
11012f95:	mov    ebx,0xf6c6db00
11012f9a:	inc    ebp
11012f9b:	cmp    bl,dl
11012f9d:	test   DWORD PTR [ecx],0x98eeac04
11012fa3:	sub    al,al
11012fa5:	add    BYTE PTR [eax-0x1669fd57],al
11012fab:	adc    DWORD PTR [esi+esi*2],ecx
11012fae:	pushf  
11012faf:	call   FWORD PTR [ecx+0x10]
11012fb2:	or     dh,dh
11012fb4:	adc    BYTE PTR [ebx+0x77ab7e89],0x60
11012fbb:	jo     0x11012fa3
11012fbd:	int3   
11012fbe:	cdq    
11012fbf:	rol    ecx,1
11012fc1:	rol    ecx,0xe0
11012fc4:	hlt    
11012fc5:	jmp    0x10997d9d
11012fca:	aas    
11012fcb:	push   edx
11012fcc:	xor    BYTE PTR [edi-0x56ba12ce],bh
11012fd2:	xor    edi,DWORD PTR [edi+0x6cb5ec57]
11012fd8:	hlt    
11012fd9:	inc    edi
11012fda:	(bad)  
11012fdb:	mov    edi,0x1eedb9d
11012fe0:	add    BYTE PTR [ebx-0xdeaa00b],cl
11012fe6:	out    0x21,al
11012fe8:	js     0x11013018
11012fea:	inc    edx
11012feb:	outs   dx,DWORD PTR ds:[esi]
11012fec:	mov    edi,0x9093c069
11012ff1:	std    
11012ff2:	sbb    ch,BYTE PTR ds:0x38f0001a
11012ff8:	push   es
11012ff9:	add    bl,BYTE PTR [esi-0x8ecef8c]
11012fff:	arpl   WORD PTR [eax-0x2d],ax
11013002:	jne    0x11013083
11013004:	lods   al,BYTE PTR ds:[esi]
11013005:	cmp    dl,BYTE PTR [eax-0x3727f6dd]
1101300b:	inc    eax
1101300c:	or     si,WORD PTR [eax+0x7057bfa2]
11013013:	push   esi
11013014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11013015:	push   ebp
11013016:	or     DWORD PTR [edx+0x64a4e03d],eax
1101301c:	dec    eax
1101301d:	add    ah,BYTE PTR [edi-0x13e562b2]
11013023:	out    dx,al
11013024:	out    dx,al
11013025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
11013026:	sar    BYTE PTR [eax-0x5f],cl
11013029:	into   
1101302a:	(bad)  
1101302b:	mov    edx,0x8adf98cc
11013030:	lock mov ecx,fs
11013033:	jne    0x11012ff9
11013035:	mov    bh,0x92
11013037:	and    BYTE PTR [ebp+0x7e],0xcc
1101303b:	imul   eax,DWORD PTR [edi-0x2656922f],0x7fde2c6d
11013045:	adc    eax,0x98cc63c9
1101304a:	pop    edx
1101304b:	adc    bl,dh
1101304d:	jo     0x11013083
1101304f:	xor    esi,esi
11013051:	sub    eax,0x7dd8001d
11013056:	bound  esp,QWORD PTR [eax]
11013058:	pusha  
11013059:	(bad)  
1101305a:	jae    0x11012ff4
1101305c:	(bad)
11013060:	test   al,0x3
11013062:	push   ds
11013063:	or     BYTE PTR [eax-0x6d],bh
11013066:	lahf   
11013067:	shl    BYTE PTR [ebx],1
11013069:	pusha  
1101306a:	xor    esp,DWORD PTR [ebx]
1101306c:	pop    ebx
1101306d:	sub    DWORD PTR [eax+0x708ec001],eax
11013073:	adc    BYTE PTR [eax-0x6d],ah
11013076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11013077:	add    cl,BYTE PTR [eax]
11013079:	jl     0x110130cf
1101307b:	jl     0x110130c6
1101307d:	pusha  
1101307e:	fs cli 
11013080:	pusha  
11013081:	iret   
11013082:	(bad)  [ebx+0x65]
11013085:	(bad)  
11013086:	loopne 0x11013076
11013088:	arpl   WORD PTR [ebx],si
1101308a:	xlat   BYTE PTR ds:[ebx]
1101308b:	fcom   DWORD PTR [esi+edx*2]
1101308e:	cmp    al,0xc6
11013090:	cmp    esp,ebp
11013092:	jbe    0x110130c2
11013094:	cmp    ebx,DWORD PTR [ebx+0x3fcc8ad2]
1101309a:	xchg   edx,eax
1101309b:	stos   BYTE PTR es:[edi],al
1101309c:	add    al,0xe0
1101309e:	xor    eax,eax
110130a0:	sub    dl,dl
110130a2:	sub    BYTE PTR [ecx-0x62],dh
110130a5:	dec    ecx
110130a6:	xor    BYTE PTR [ecx-0xcc8c134],bh
110130ac:	pop    es
110130ad:	pop    edx
110130ae:	adc    al,0x0
110130b0:	mov    al,0x7b
110130b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
110130b3:	or     al,0x84
110130b5:	dec    ebp
110130b6:	div    BYTE PTR [ebx-0x6]
110130b9:	mov    bl,0xc
110130bb:	adc    BYTE PTR [eax+0x2bcc4201],dh
110130c1:	mov    al,ds:0x16cf0136
110130c6:	mov    al,0x3
110130c8:	pop    ebx
110130c9:	fwait
110130ca:	sbb    eax,DWORD PTR [ecx]
110130cc:	push   ebp
110130cd:	add    ch,BYTE PTR [ebx]
110130cf:	or     eax,0x26e07504
110130d4:	icebp  
110130d5:	inc    ecx
110130d6:	inc    eax
110130d7:	leave  
110130d8:	cmc    
110130d9:	sbb    dl,BYTE PTR [edi+eiz*8-0x19ce0cfd]
110130e0:	mov    bh,0x53
110130e2:	push   esi
110130e3:	xchg   ecx,eax
110130e4:	loope  0x11013153
110130e6:	repnz or bl,BYTE PTR [ebx+0x6c4ec2c4]
110130ed:	icebp  
110130ee:	hlt    
110130ef:	jle    0x11013140
110130f1:	in     al,dx
110130f2:	(bad)  
110130f3:	mov    dl,0x2c
110130f5:	imul   edi,DWORD PTR [edi-0x76],0x46
110130f9:	cdq    
110130fa:	dec    DWORD PTR [ebx+0x3eee4081]
11013100:	mov    ebx,0x5933d65f
11013105:	and    al,0x0
11013107:	mov    al,0xfb
11013109:	in     eax,0xd8
1101310b:	pop    es
1101310c:	and    al,0xf3
1101310e:	js     0x11013129
11013110:	std    
11013111:	retf   0x8105
11013114:	cwde   
11013115:	cmp    eax,0x601d500
1101311a:	add    dh,BYTE PTR [esi-0x2c]
1101311d:	(bad)  
1101311e:	mov    ah,0x68
11013120:	or     BYTE PTR [edx],cl
11013122:	int3   
11013123:	push   ebp
11013124:	sbb    BYTE PTR [ecx+eax*4],ah
11013127:	fwait
11013128:	mov    eax,ds:0xb766294d
1101312d:	adc    al,0x98
1101312f:	lock xor eax,0x98fe2c29
11013135:	les    edx,FWORD PTR [edx]
11013137:	cdq    
11013138:	pop    ds
11013139:	xchg   edi,eax
1101313a:	test   al,0xc2
1101313c:	je     0x11013194
1101313e:	test   al,0x2
11013140:	pop    eax
11013141:	std    
11013142:	fbstp  TBYTE PTR [edx]
11013144:	aas    
11013145:	(bad)  
11013146:	cld    
11013147:	out    0xb8,eax
11013149:	sti    
1101314a:	push   esi
1101314b:	jge    0x11013131
1101314d:	imul   DWORD PTR [eax]
1101314f:	adc    DWORD PTR es:[edx+esi*1-0x30b8c71],ecx
11013157:	in     al,dx
11013158:	addr16 mov bl,0x68
1101315b:	add    al,dh
1101315d:	out    dx,al
1101315e:	cdq    
1101315f:	rcr    bh,cl
11013161:	arpl   WORD PTR [edx],sp
11013163:	jle    0x110131af
11013165:	xlat   BYTE PTR ds:[ebx]
11013166:	pop    ebp
11013167:	fs jg  0x1101313a
1101316a:	sub    BYTE PTR [eax],bl
1101316c:	repz push 0xffffffd8
1101316f:	or     cl,al
11013171:	sbb    al,0x10
11013173:	mov    al,0x19
11013175:	xchg   edx,eax
11013176:	mov    cs,WORD PTR [edx-0x62]
11013179:	and    al,0x10
1101317b:	inc    eax
1101317c:	loopne 0x110131a4
1101317e:	push   0x2d564793
11013183:	inc    eax
11013184:	out    0xb7,al
11013186:	xchg   esi,eax
11013187:	jle    0x110131af
11013189:	neg    bl
1101318b:	pushf  
1101318c:	jne    0x110131c4
1101318e:	ja     0x1101320d
11013190:	mov    ecx,?
11013192:	mov    ebp,0xa9a9f67c
11013197:	lods   eax,DWORD PTR ds:[esi]
11013198:	jbe    0x11013219
1101319a:	sbb    eax,0x622fd989
1101319f:	dec    esp
110131a0:	sahf   
110131a1:	jmp    0xc:0xb1e7a37b
110131a8:	lock out dx,al
110131aa:	sbb    edi,DWORD PTR [ebx]
110131ac:	pop    ss
110131ad:	sbb    ebp,ecx
110131af:	xchg   edi,eax
110131b0:	aad    0x7
110131b2:	scas   eax,DWORD PTR es:[edi]
110131b3:	in     eax,dx
110131b4:	sub    DWORD PTR [eax],edx
110131b6:	pusha  
110131b7:	add    DWORD PTR ss:[esi+0x7edd4d1e],edx
110131be:	or     al,0x4
110131c0:	je     0x110131a1
110131c2:	add    BYTE PTR [eax+0x26d6054a],0x10
110131c9:	mov    WORD PTR [edx+0x7c20404d],es
110131cf:	xchg   esp,eax
110131d0:	scas   eax,DWORD PTR es:[edi]
110131d1:	dec    eax
110131d2:	popa   
110131d3:	icebp  
110131d4:	(bad)  
110131d5:	mov    WORD PTR ds:0x176fd89e,?
110131db:	stos   DWORD PTR es:[edi],eax
110131dc:	fcom   DWORD PTR [ebp-0x7a700e56]
110131e2:	inc    dh
110131e4:	xchg   edx,eax
110131e5:	pop    ecx
110131e6:	pop    esp
110131e7:	sub    eax,0xc87dafcc
110131ec:	mov    ch,0x15
110131ee:	mov    al,0xff
110131f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
110131f1:	into   
110131f2:	inc    ebp
110131f3:	imul   ebx,ecx,0x8454d3cc
110131f9:	iret   
110131fa:	aad    0xf7
110131fc:	xchg   edi,eax
110131fd:	fst    QWORD PTR [edi+0x53c040ae]
11013203:	add    eax,0xb54d26c
11013208:	adc    ah,cl
1101320a:	cmp    edx,DWORD PTR [eax]
1101320c:	inc    eax
1101320d:	loopne 0x110131a5
1101320f:	repnz mov esi,0x5ff9908c
11013215:	xchg   edx,eax
11013216:	ret    0xcfd7
11013219:	cld    
1101321a:	cld    
1101321b:	sahf   
1101321c:	mov    esi,0xf580128f
11013221:	stc    
11013222:	mov    bl,0xc
11013224:	mov    dh,0x76
11013226:	stos   BYTE PTR es:[edi],al
11013227:	out    dx,eax
11013228:	aad    0xc8
1101322a:	cld    
1101322b:	dec    eax
1101322c:	cmp    DWORD PTR [ebp+0x6b],edi
1101322f:	jp     0x1101326f
11013231:	dec    ecx
11013232:	stos   DWORD PTR es:[edi],eax
11013233:	ret    0x7d44
11013236:	sbb    ebp,edi
11013238:	push   esi
11013239:	shl    DWORD PTR [esi],1
1101323b:	loopne 0x11013242
1101323d:	or     ecx,ebx
1101323f:	or     DWORD PTR [ebx+0x28],eax
11013242:	or     DWORD PTR [eax+0x35],ebx
11013245:	add    BYTE PTR [edi+0x416848d6],dh
1101324b:	and    ah,dl
1101324d:	sbb    eax,0xf156e040
11013252:	and    eax,0xff84c081
11013257:	xchg   esi,eax
11013258:	inc    edx
11013259:	in     al,dx
1101325a:	(bad)  
1101325b:	xchg   ecx,eax
1101325c:	fild   WORD PTR [esi-0xe]
1101325f:	pop    ecx
11013260:	cmp    eax,0x2b01251f
11013265:	mul    bl
11013267:	jmp    0x9fdf:0xd1f996b5
1101326e:	mov    ds:0xc1aaaff3,eax
11013273:	iret   
11013274:	mov    ds:0x6b9ada2e,eax
11013279:	dec    esp
1101327a:	ins    BYTE PTR es:[edi],dx
1101327b:	inc    ebp
1101327c:	stos   DWORD PTR es:[edi],eax
1101327d:	add    al,BYTE PTR [eax]
1101327f:	dec    ebp
11013280:	(bad)  [edx+ecx*4+0x75b6c6ed]
11013287:	add    eax,0x9026cc02
1101328c:	bound  edi,QWORD PTR [esi+0xb]
1101328f:	add    dh,BYTE PTR [esi]
11013291:	jns    0x110132fd
11013293:	jo     0x110132a4
11013295:	fisub  WORD PTR [esi]
11013297:	xor    ecx,DWORD PTR [ecx+0x0]
1101329a:	jne    0x1101329a
1101329c:	pop    ss
1101329d:	gs es mul bl
110132a1:	les    ebx,FWORD PTR [esi]
110132a3:	stos   DWORD PTR es:[edi],eax
110132a4:	repz jnp 0x11013273
110132a7:	outs   dx,DWORD PTR ds:[esi]
110132a8:	lds    edi,FWORD PTR [esi+0x1b]
110132ab:	repz iret 
110132ad:	or     al,0x7e
110132af:	call   0xce4269e
110132b4:	push   edi
110132b5:	(bad)  
110132b7:	fist   WORD PTR ds:0xa77430e5
110132bd:	add    BYTE PTR [eax-0x714b7336],bh
110132c3:	in     eax,dx
110132c4:	(bad)  
110132c5:	div    dh
110132c7:	add    DWORD PTR [edx],eax
110132c9:	sub    DWORD PTR [ecx+0x20],ecx
110132cc:	push   es
110132cd:	add    BYTE PTR [esi],dl
110132cf:	add    al,0x3e
110132d1:	and    eax,0xcc081033
110132d6:	test   edx,0x332abcb8
110132dc:	out    0xb4,al
110132de:	(bad)  
110132df:	jle    0x110132f5
110132e1:	in     eax,dx
110132e2:	sbb    DWORD PTR [eax],ecx
110132e4:	pop    eax
110132e5:	mov    cl,0x9f
110132e7:	xor    DWORD PTR [edi+0x64d3f4cd],edi
110132ed:	push   esi
110132ee:	fcmovnbe st,st(5)
110132f0:	dec    eax
110132f1:	mov    ebp,0x18dd7df7
110132f6:	imul   ebx,DWORD PTR [ebp+0x9b0ba8],0xffffffaa
110132fd:	add    dl,BYTE PTR [esi]
110132ff:	add    al,0x3c
11013301:	out    dx,eax
11013302:	inc    eax
11013303:	dec    edx
11013304:	or     eax,0xc1ca69d0
11013309:	push   ds
1101330a:	mov    al,ds:0x1b9f83e9
1101330f:	xchg   edi,eax
11013310:	xchg   edi,eax
11013311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11013312:	call   0x98a7:0xfba6269d
11013319:	pop    ds
1101331a:	sub    eax,0xdf766cfe
1101331f:	inc    esi
11013320:	out    0x5f,eax
11013322:	adc    edx,ebx
11013324:	add    BYTE PTR [eax-0x41],al
11013327:	aam    0xb7
11013329:	and    al,0xc0
1101332b:	bound  eax,QWORD PTR [esp+ebp*4]
1101332e:	mov    cl,0xd0
11013330:	pop    ebx
11013331:	inc    ecx
11013332:	sub    esp,ebx
11013334:	sti    
11013335:	arpl   WORD PTR [ebp-0x65],sp
11013338:	pop    esi
11013339:	xchg   esi,eax
1101333a:	cdq    
1101333b:	sbb    dh,ch
1101333d:	sub    eax,0x542de95c
11013342:	loope  0x1101332d
11013344:	cld    
11013345:	ins    BYTE PTR es:[edi],dx
11013346:	in     al,0xdf
11013348:	mov    ch,bh
1101334a:	sub    eax,DWORD PTR [esi+0x1b]
1101334d:	add    al,ch
1101334f:	lahf   
11013350:	cli    
11013351:	mov    ah,0x9
11013353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11013354:	out    0xa,al
11013356:	pop    eax
11013357:	xor    eax,0xf731ae0
1101335c:	ins    DWORD PTR es:[edi],dx
1101335d:	pop    DWORD PTR [esi-0x24]
11013360:	mov    cl,0x25
11013362:	stos   DWORD PTR es:[edi],eax
11013363:	push   edx
11013364:	adc    edi,DWORD PTR [eax+ebx*2-0x68]
11013368:	outs   dx,DWORD PTR ds:[esi]
11013369:	pop    ss
1101336a:	int3   
1101336b:	mov    edi,0xb5bf066e
11013370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
11013371:	or     eax,0x16862c00
11013376:	popa   
11013377:	sbb    ah,dh
11013379:	or     ax,0x5a
1101337d:	push   eax
1101337e:	or     DWORD PTR [eax],eax
11013380:	cmp    eax,0xa0001e01
11013385:	xor    DWORD PTR [edi],ebp
11013387:	mov    dh,0x52
11013389:	lea    esp,[ebp-0x4]
1101338c:	int    0xc8
1101338e:	mov    edi,0x597ff426
11013393:	cmp    eax,eax
11013395:	or     cl,BYTE PTR [edi+0xcde27]
1101339b:	add    BYTE PTR [eax],al
1101339d:	add    BYTE PTR [ecx+0x45],cl
110133a0:	dec    esi
110133a1:	inc    esp
110133a2:	scas   al,BYTE PTR es:[edi]
110133a3:	inc    edx
110133a4:	pusha  
110133a5:	add    BYTE PTR [eax],0x0
110133a8:	sub    BYTE PTR [eax],al
110133aa:	add    BYTE PTR [eax],al
110133ac:	inc    eax
110133ad:	add    BYTE PTR [eax],al
110133af:	add    BYTE PTR [eax+0x1000000],al
110133b5:	add    BYTE PTR [eax],ah
	...
1101342b:	add    DWORD PTR [eax],eax
1101342d:	add    BYTE PTR [eax],al
1101342f:	add    eax,0xc000000
11013434:	add    BYTE PTR [eax],al
11013436:	add    BYTE PTR [eax],bl
11013438:	add    BYTE PTR [eax],al
1101343a:	add    BYTE PTR [ebx],ch
1101343c:	add    BYTE PTR [eax],al
1101343e:	add    BYTE PTR [ebp+0x0],al
11013441:	add    BYTE PTR [eax],al
11013443:	add    BYTE PTR gs:[eax],al
11013446:	add    BYTE PTR [ebp-0x60000000],al
1101344c:	add    BYTE PTR [eax],al
1101344e:	add    BYTE PTR [esi-0x4a000000],dh
11013454:	add    BYTE PTR [eax],al
11013456:	add    BYTE PTR [eax-0x7b000000],ah
1101345c:	add    BYTE PTR [eax],al
1101345e:	add    BYTE PTR [eax+eax*1+0x0],ah
11013462:	add    BYTE PTR [ebp+0x0],al
11013465:	add    BYTE PTR [eax],al
11013467:	sub    eax,DWORD PTR [eax]
11013469:	add    BYTE PTR [eax],al
1101346b:	sbb    BYTE PTR [eax],al
1101346d:	add    BYTE PTR [eax],al
1101346f:	or     al,0x0
11013471:	add    BYTE PTR [eax],al
11013473:	add    al,0x0
11013475:	add    BYTE PTR [eax],al
11013477:	add    DWORD PTR [eax],eax
	...
110134f5:	add    BYTE PTR [eax],al
110134f7:	add    DWORD PTR [eax],eax
110134f9:	add    BYTE PTR [eax],al
110134fb:	add    al,BYTE PTR [eax]
110134fd:	add    BYTE PTR [eax],al
110134ff:	add    al,BYTE PTR [eax]
11013501:	add    BYTE PTR [eax],al
11013503:	add    al,BYTE PTR [eax]
11013505:	add    BYTE PTR [eax],al
11013507:	add    al,BYTE PTR [eax]
11013509:	add    BYTE PTR [eax],al
1101350b:	add    al,BYTE PTR [eax]
1101350d:	add    BYTE PTR [eax],al
1101350f:	add    al,BYTE PTR [eax]
11013511:	add    BYTE PTR [eax],al
11013513:	add    al,BYTE PTR [eax]
11013515:	add    BYTE PTR [eax],al
11013517:	add    al,BYTE PTR [eax]
11013519:	add    BYTE PTR [eax],al
1101351b:	add    al,BYTE PTR [eax]
1101351d:	add    BYTE PTR [eax],al
1101351f:	add    al,BYTE PTR [eax]
11013521:	add    BYTE PTR [eax],al
11013523:	add    eax,DWORD PTR [eax]
11013525:	add    BYTE PTR [eax],al
11013527:	add    al,0x0
11013529:	add    BYTE PTR [eax],al
1101352b:	pop    es
1101352c:	add    BYTE PTR [eax],al
1101352e:	add    BYTE PTR [esi],cl
11013530:	add    BYTE PTR [eax],al
11013532:	add    BYTE PTR [ebx],bl
11013534:	add    BYTE PTR [eax],al
11013536:	add    BYTE PTR ds:0x47000000,ch
1101353c:	add    BYTE PTR [eax],al
1101353e:	add    BYTE PTR [edi+0x0],ah
11013541:	add    BYTE PTR [eax],al
11013543:	mov    al,BYTE PTR [eax]
11013545:	add    BYTE PTR [eax],al
11013547:	stos   BYTE PTR es:[edi],al
11013548:	add    BYTE PTR [eax],al
1101354a:	add    al,cl
1101354c:	add    BYTE PTR [eax],al
1101354e:	add    dh,dh
11013550:	add    BYTE PTR [eax],al
11013552:	add    dh,dh
11013554:	add    BYTE PTR [eax],al
11013556:	add    bh,al
11013558:	add    BYTE PTR [eax],al
1101355a:	add    BYTE PTR [edx-0x76000000],ch
11013560:	add    BYTE PTR [eax],al
11013562:	add    BYTE PTR [edi+0x0],ah
11013565:	add    BYTE PTR [eax],al
11013567:	inc    edi
11013568:	add    BYTE PTR [eax],al
1101356a:	add    BYTE PTR ds:0x1a000000,ch
11013570:	add    BYTE PTR [eax],al
11013572:	add    BYTE PTR [esi],cl
11013574:	add    BYTE PTR [eax],al
11013576:	add    BYTE PTR [edi],al
11013578:	add    BYTE PTR [eax],al
1101357a:	add    BYTE PTR [ebx],al
1101357c:	add    BYTE PTR [eax],al
1101357e:	add    BYTE PTR [ebx],al
11013580:	add    BYTE PTR [eax],al
11013582:	add    BYTE PTR [edx],al
11013584:	add    BYTE PTR [eax],al
11013586:	add    BYTE PTR [edx],al
11013588:	add    BYTE PTR [eax],al
1101358a:	add    BYTE PTR [edx],al
1101358c:	add    BYTE PTR [eax],al
1101358e:	add    BYTE PTR [edx],al
11013590:	add    BYTE PTR [eax],al
11013592:	add    BYTE PTR [edx],al
11013594:	add    BYTE PTR [eax],al
11013596:	add    BYTE PTR [edx],al
11013598:	add    BYTE PTR [eax],al
1101359a:	add    BYTE PTR [edx],al
1101359c:	add    BYTE PTR [eax],al
1101359e:	add    BYTE PTR [edx],al
110135a0:	add    BYTE PTR [eax],al
110135a2:	add    BYTE PTR [edx],al
110135a4:	add    BYTE PTR [eax],al
110135a6:	add    BYTE PTR [edx],al
110135a8:	add    BYTE PTR [eax],al
110135aa:	add    BYTE PTR [edx],al
110135ac:	add    BYTE PTR [eax],al
110135ae:	add    BYTE PTR [edx],al
110135b0:	add    BYTE PTR [eax],al
110135b2:	add    BYTE PTR [edx],al
110135b4:	add    BYTE PTR [eax],al
110135b6:	add    BYTE PTR [edx],al
110135b8:	add    BYTE PTR [eax],al
110135ba:	add    BYTE PTR [ecx],al
	...
110135ec:	add    BYTE PTR [eax],al
110135ee:	add    BYTE PTR [ecx],al
110135f0:	add    BYTE PTR [eax],al
110135f2:	add    BYTE PTR [edx],al
110135f4:	add    BYTE PTR [eax],al
110135f6:	add    BYTE PTR [eax+eax*1],al
110135f9:	add    BYTE PTR [eax],al
110135fb:	push   es
110135fc:	add    BYTE PTR [eax],al
110135fe:	add    BYTE PTR [eax],cl
11013600:	add    BYTE PTR [eax],al
11013602:	add    BYTE PTR [ecx],cl
11013604:	add    BYTE PTR [eax],al
11013606:	add    BYTE PTR [edx],cl
11013608:	add    BYTE PTR [eax],al
1101360a:	add    BYTE PTR [edx],cl
1101360c:	add    BYTE PTR [eax],al
1101360e:	add    BYTE PTR [edx],cl
11013610:	add    BYTE PTR [eax],al
11013612:	add    BYTE PTR [edx],cl
11013614:	add    BYTE PTR [eax],al
11013616:	add    BYTE PTR [edx],cl
11013618:	add    BYTE PTR [eax],al
1101361a:	add    BYTE PTR [edx],cl
1101361c:	add    BYTE PTR [eax],al
1101361e:	add    BYTE PTR [edx],cl
11013620:	add    BYTE PTR [eax],al
11013622:	add    BYTE PTR [ebx],cl
11013624:	add    BYTE PTR [eax],al
11013626:	add    BYTE PTR [edi],cl
11013628:	add    BYTE PTR [eax],al
1101362a:	add    BYTE PTR [esi],dl
1101362c:	add    BYTE PTR [eax],al
1101362e:	add    BYTE PTR [edx],ah
11013630:	add    BYTE PTR [eax],al
11013632:	add    BYTE PTR [ebx],dh
11013634:	add    BYTE PTR [eax],al
11013636:	add    BYTE PTR [ebp+0x0],cl
11013639:	add    BYTE PTR [eax],al
1101363b:	ins    BYTE PTR es:[edi],dx
1101363c:	add    BYTE PTR [eax],al
1101363e:	add    BYTE PTR [esi-0x51000000],cl
11013644:	add    BYTE PTR [eax],al
11013646:	add    dh,cl
11013648:	add    BYTE PTR [eax],al
1101364a:	add    al,bh
1101364c:	add    BYTE PTR [eax],al
1101364e:	add    bh,bh
11013650:	add    BYTE PTR [eax],al
11013652:	add    bh,bh
11013654:	add    BYTE PTR [eax],al
11013656:	add    al,bh
11013658:	add    BYTE PTR [eax],al
1101365a:	add    dh,cl
1101365c:	add    BYTE PTR [eax],al
1101365e:	add    BYTE PTR [edi-0x72000000],ch
11013664:	add    BYTE PTR [eax],al
11013666:	add    BYTE PTR [ebx+0x0],ch
11013669:	add    BYTE PTR [eax],al
1101366b:	dec    ebp
1101366c:	add    BYTE PTR [eax],al
1101366e:	add    BYTE PTR [ebx],dh
11013670:	add    BYTE PTR [eax],al
11013672:	add    BYTE PTR [ecx],ah
11013674:	add    BYTE PTR [eax],al
11013676:	add    BYTE PTR [esi],dl
11013678:	add    BYTE PTR [eax],al
1101367a:	add    BYTE PTR [esi],cl
1101367c:	add    BYTE PTR [eax],al
1101367e:	add    BYTE PTR [ebx],cl
11013680:	add    BYTE PTR [eax],al
11013682:	add    BYTE PTR [edx],cl
11013684:	add    BYTE PTR [eax],al
11013686:	add    BYTE PTR [edx],cl
11013688:	add    BYTE PTR [eax],al
1101368a:	add    BYTE PTR [edx],cl
1101368c:	add    BYTE PTR [eax],al
1101368e:	add    BYTE PTR [edx],cl
11013690:	add    BYTE PTR [eax],al
11013692:	add    BYTE PTR [edx],cl
11013694:	add    BYTE PTR [eax],al
11013696:	add    BYTE PTR [edx],cl
11013698:	add    BYTE PTR [eax],al
1101369a:	add    BYTE PTR [edx],cl
1101369c:	add    BYTE PTR [eax],al
1101369e:	add    BYTE PTR [edx],cl
110136a0:	add    BYTE PTR [eax],al
110136a2:	add    BYTE PTR [edx],cl
110136a4:	add    BYTE PTR [eax],al
110136a6:	add    BYTE PTR [edx],cl
110136a8:	add    BYTE PTR [eax],al
110136aa:	add    BYTE PTR [edx],cl
110136ac:	add    BYTE PTR [eax],al
110136ae:	add    BYTE PTR [ecx],cl
110136b0:	add    BYTE PTR [eax],al
110136b2:	add    BYTE PTR [eax],cl
110136b4:	add    BYTE PTR [eax],al
110136b6:	add    BYTE PTR [esi],al
110136b8:	add    BYTE PTR [eax],al
110136ba:	add    BYTE PTR [eax+eax*1],al
110136bd:	add    BYTE PTR [eax],al
110136bf:	add    al,BYTE PTR [eax]
110136c1:	add    BYTE PTR [eax],al
110136c3:	add    DWORD PTR [eax],eax
	...
110136e9:	add    BYTE PTR [eax],al
110136eb:	add    DWORD PTR [eax],eax
110136ed:	add    BYTE PTR [eax],al
110136ef:	add    eax,DWORD PTR [eax]
110136f1:	add    BYTE PTR [eax],al
110136f3:	push   es
110136f4:	add    BYTE PTR [eax],al
110136f6:	add    BYTE PTR [ebx],cl
110136f8:	add    BYTE PTR [eax],al
110136fa:	add    BYTE PTR [eax],dl
110136fc:	add    BYTE PTR [eax],al
110136fe:	add    BYTE PTR ds:0x18000000,dl
11013704:	add    BYTE PTR [eax],al
11013706:	add    BYTE PTR [edx],bl
11013708:	add    BYTE PTR [eax],al
1101370a:	add    BYTE PTR [ebx],bl
1101370c:	add    BYTE PTR [eax],al
1101370e:	add    BYTE PTR [ebx],bl
11013710:	add    BYTE PTR [eax],al
11013712:	add    BYTE PTR [ebx],bl
11013714:	add    BYTE PTR [eax],al
11013716:	add    BYTE PTR [ebx],bl
11013718:	add    BYTE PTR [eax],al
1101371a:	add    BYTE PTR [ebx],bl
1101371c:	add    BYTE PTR [eax],al
1101371e:	add    BYTE PTR [eax+eax*1],bl
11013721:	add    BYTE PTR [eax],al
11013723:	pop    ds
11013724:	add    BYTE PTR [eax],al
11013726:	add    BYTE PTR [esi],ah
11013728:	add    BYTE PTR [eax],al
1101372a:	add    BYTE PTR [ecx],dh
1101372c:	add    BYTE PTR [eax],al
1101372e:	add    BYTE PTR [ecx+0x0],al
11013731:	add    BYTE PTR [eax],al
11013733:	pop    ecx
11013734:	add    BYTE PTR [eax],al
11013736:	add    BYTE PTR [esi+0x0],dh
11013739:	add    BYTE PTR [eax],al
1101373b:	xchg   ebp,eax
1101373c:	add    BYTE PTR [eax],al
1101373e:	add    BYTE PTR [eax+eax*1+0xd20000],dh
11013745:	add    BYTE PTR [eax],al
11013747:	stc    
11013748:	add    BYTE PTR [eax],al
1101374a:	add    bh,bh
1101374c:	xor    al,0x34
1101374e:	xor    al,0xfe
11013750:	xor    DWORD PTR [ecx],esi
11013752:	xor    edi,edi
11013754:	add    BYTE PTR [eax],al
11013756:	add    bh,bh
11013758:	add    BYTE PTR [eax],al
1101375a:	add    cl,bh
1101375c:	add    BYTE PTR [eax],al
1101375e:	add    dl,dl
11013760:	add    BYTE PTR [eax],al
11013762:	add    BYTE PTR [eax+eax*1+0x950000],dh
11013769:	add    BYTE PTR [eax],al
1101376b:	jne    0x1101376d
1101376d:	add    BYTE PTR [eax],al
1101376f:	pop    ecx
11013770:	add    BYTE PTR [eax],al
11013772:	add    BYTE PTR [ecx+0x0],al
11013775:	add    BYTE PTR [eax],al
11013777:	xor    BYTE PTR [eax],al
11013779:	add    BYTE PTR [eax],al
1101377b:	and    eax,0x1f000000
11013780:	add    BYTE PTR [eax],al
11013782:	add    BYTE PTR [eax+eax*1],bl
11013785:	add    BYTE PTR [eax],al
11013787:	sbb    eax,DWORD PTR [eax]
11013789:	add    BYTE PTR [eax],al
1101378b:	sbb    eax,DWORD PTR [eax]
1101378d:	add    BYTE PTR [eax],al
1101378f:	sbb    eax,DWORD PTR [eax]
11013791:	add    BYTE PTR [eax],al
11013793:	sbb    eax,DWORD PTR [eax]
11013795:	add    BYTE PTR [eax],al
11013797:	sbb    eax,DWORD PTR [eax]
11013799:	add    BYTE PTR [eax],al
1101379b:	sbb    eax,DWORD PTR [eax]
1101379d:	add    BYTE PTR [eax],al
1101379f:	sbb    eax,DWORD PTR [eax]
110137a1:	add    BYTE PTR [eax],al
110137a3:	sbb    eax,DWORD PTR [eax]
110137a5:	add    BYTE PTR [eax],al
110137a7:	sbb    eax,DWORD PTR [eax]
110137a9:	add    BYTE PTR [eax],al
110137ab:	sbb    al,BYTE PTR [eax]
110137ad:	add    BYTE PTR [eax],al
110137af:	sbb    BYTE PTR [eax],al
110137b1:	add    BYTE PTR [eax],al
110137b3:	adc    eax,0x10000000
110137b8:	add    BYTE PTR [eax],al
110137ba:	add    BYTE PTR [ebx],cl
110137bc:	add    BYTE PTR [eax],al
110137be:	add    BYTE PTR [esi],al
110137c0:	add    BYTE PTR [eax],al
110137c2:	add    BYTE PTR [ebx],al
110137c4:	add    BYTE PTR [eax],al
110137c6:	add    BYTE PTR [ecx],al
	...
110137e8:	add    BYTE PTR [eax],al
110137ea:	add    BYTE PTR [edx],al
110137ec:	add    BYTE PTR [eax],al
110137ee:	add    BYTE PTR [esi],al
110137f0:	add    BYTE PTR [eax],al
110137f2:	add    BYTE PTR ds:0x17000000,cl
110137f8:	add    BYTE PTR [eax],al
110137fa:	add    BYTE PTR [ebx],ah
110137fc:	add    BYTE PTR [eax],al
110137fe:	add    BYTE PTR ds:0x34000000,ch
11013804:	add    BYTE PTR [eax],al
11013806:	add    BYTE PTR [eax],bh
11013808:	add    BYTE PTR [eax],al
1101380a:	add    BYTE PTR [edx],bh
1101380c:	add    BYTE PTR [eax],al
1101380e:	add    BYTE PTR [edx],bh
11013810:	add    BYTE PTR [eax],al
11013812:	add    BYTE PTR [edx],bh
11013814:	add    BYTE PTR [eax],al
11013816:	add    BYTE PTR [edx],bh
11013818:	add    BYTE PTR [eax],al
1101381a:	add    BYTE PTR [ebx],bh
1101381c:	add    BYTE PTR [eax],al
1101381e:	add    BYTE PTR [esi],bh
11013820:	add    BYTE PTR [eax],al
11013822:	add    BYTE PTR [ebx+0x0],al
11013825:	add    BYTE PTR [eax],al
11013827:	dec    ebp
11013828:	add    BYTE PTR [eax],al
1101382a:	add    BYTE PTR [ebx+0x0],bl
1101382d:	add    BYTE PTR [eax],al
1101382f:	outs   dx,DWORD PTR ds:[esi]
11013830:	add    BYTE PTR [eax],al
11013832:	add    BYTE PTR [eax-0x5d000000],cl
11013838:	add    BYTE PTR [eax],al
1101383a:	add    BYTE PTR [esi-0x29000000],bh
11013840:	add    BYTE PTR [eax],al
11013842:	add    cl,bh
11013844:	add    BYTE PTR [eax],al
11013846:	add    bh,bh
11013848:	xor    al,0x34
1101384a:	xor    al,0xff
1101384c:	in     al,dx
1101384d:	in     al,dx
1101384e:	in     al,dx
1101384f:	(bad)  
11013850:	jmp    0x1101383d
11013852:	jmp    0x11013853
11013854:	xor    DWORD PTR [ecx],esi
11013856:	xor    edi,edi
11013858:	add    BYTE PTR [eax],al
1101385a:	add    bh,bh
1101385c:	add    BYTE PTR [eax],al
1101385e:	add    cl,bh
11013860:	add    BYTE PTR [eax],al
11013862:	add    bh,dl
11013864:	add    BYTE PTR [eax],al
11013866:	add    BYTE PTR [esi-0x5d000000],bh
1101386c:	add    BYTE PTR [eax],al
1101386e:	add    BYTE PTR [eax+0x6f000000],cl
11013874:	add    BYTE PTR [eax],al
11013876:	add    BYTE PTR [ebx+0x0],bl
11013879:	add    BYTE PTR [eax],al
1101387b:	dec    esp
1101387c:	add    BYTE PTR [eax],al
1101387e:	add    BYTE PTR [ebx+0x0],al
11013881:	add    BYTE PTR [eax],al
11013883:	cmp    eax,0x3b000000
11013888:	add    BYTE PTR [eax],al
1101388a:	add    BYTE PTR [edx],bh
1101388c:	add    BYTE PTR [eax],al
1101388e:	add    BYTE PTR [edx],bh
11013890:	add    BYTE PTR [eax],al
11013892:	add    BYTE PTR [edx],bh
11013894:	add    BYTE PTR [eax],al
11013896:	add    BYTE PTR [edx],bh
11013898:	add    BYTE PTR [eax],al
1101389a:	add    BYTE PTR [edx],bh
1101389c:	add    BYTE PTR [eax],al
1101389e:	add    BYTE PTR [edx],bh
110138a0:	add    BYTE PTR [eax],al
110138a2:	add    BYTE PTR [edx],bh
110138a4:	add    BYTE PTR [eax],al
110138a6:	add    BYTE PTR [edx],bh
110138a8:	add    BYTE PTR [eax],al
110138aa:	add    BYTE PTR [eax],bh
110138ac:	add    BYTE PTR [eax],al
110138ae:	add    BYTE PTR [eax+eax*1],dh
110138b1:	add    BYTE PTR [eax],al
110138b3:	sub    eax,0x23000000
110138b8:	add    BYTE PTR [eax],al
110138ba:	add    BYTE PTR [edi],dl
110138bc:	add    BYTE PTR [eax],al
110138be:	add    BYTE PTR ds:0x6000000,cl
110138c4:	add    BYTE PTR [eax],al
110138c6:	add    BYTE PTR [edx],al
	...
110138e4:	add    BYTE PTR [eax],al
110138e6:	add    BYTE PTR [ecx],al
110138e8:	add    BYTE PTR [eax],al
110138ea:	add    BYTE PTR [eax+eax*1],al
110138ed:	add    BYTE PTR [eax],al
110138ef:	or     eax,DWORD PTR [eax]
110138f1:	add    BYTE PTR [eax],al
110138f3:	pop    ss
110138f4:	add    BYTE PTR [eax],al
110138f6:	add    BYTE PTR [ecx],ch
110138f8:	add    BYTE PTR [eax],al
110138fa:	add    BYTE PTR ds:0x4f000000,bh
11013900:	add    BYTE PTR [eax],al
11013902:	add    BYTE PTR [ebx+0x0],bl
11013905:	add    BYTE PTR [eax],al
11013907:	bound  eax,QWORD PTR [eax]
11013909:	add    BYTE PTR [eax],al
1101390b:	add    BYTE PTR gs:[eax],al
1101390e:	add    BYTE PTR [esi+0x0],ah
11013911:	add    BYTE PTR [eax],al
11013913:	data16 add BYTE PTR [eax],al
11013916:	add    BYTE PTR [edi+0x0],ah
11013919:	add    BYTE PTR [eax],al
1101391b:	imul   eax,DWORD PTR [eax],0x6d0000
11013921:	add    BYTE PTR [eax],al
11013923:	jne    0x11013925
11013925:	add    BYTE PTR [eax],al
11013927:	add    BYTE PTR [eax],0x0
1101392a:	add    BYTE PTR [edi-0x5d000000],cl
11013930:	add    BYTE PTR [eax],al
11013932:	add    BYTE PTR [eax-0x34000000],bh
11013938:	add    BYTE PTR [eax],al
1101393a:	add    al,ah
1101393c:	add    BYTE PTR [eax],al
1101393e:	add    dl,bh
11013940:	add    BYTE PTR [eax],al
11013942:	add    bh,bh
11013944:	xor    al,0x34
11013946:	xor    al,0xff
11013948:	in     al,dx
11013949:	in     al,dx
1101394a:	in     al,dx
1101394b:	(bad)  
1101394c:	std    
1101394d:	std    
1101394e:	std    
1101394f:	(bad)  
11013950:	std    
11013951:	std    
11013952:	std    
11013953:	(bad)  
11013954:	jmp    0x11013941
11013956:	jmp    0x11013957
11013958:	xor    DWORD PTR [ecx],esi
1101395a:	xor    edi,edi
1101395c:	add    BYTE PTR [eax],al
1101395e:	add    bh,bh
11013960:	add    BYTE PTR [eax],al
11013962:	add    dl,bh
11013964:	add    BYTE PTR [eax],al
11013966:	add    al,ah
11013968:	add    BYTE PTR [eax],al
1101396a:	add    ah,cl
1101396c:	add    BYTE PTR [eax],al
1101396e:	add    BYTE PTR [eax-0x5e000000],bh
11013974:	add    BYTE PTR [eax],al
11013976:	add    BYTE PTR [edi+0x7f000000],cl
1101397c:	add    BYTE PTR [eax],al
1101397e:	add    BYTE PTR [eax+eax*1+0x0],dh
11013982:	add    BYTE PTR [ebp+0x0],ch
11013985:	add    BYTE PTR [eax],al
11013987:	imul   eax,DWORD PTR [eax],0x670000
1101398d:	add    BYTE PTR [eax],al
1101398f:	data16 add BYTE PTR [eax],al
11013992:	add    BYTE PTR [esi+0x0],ah
11013995:	add    BYTE PTR [eax],al
11013997:	data16 add BYTE PTR [eax],al
1101399a:	add    BYTE PTR [esi+0x0],ah
1101399d:	add    BYTE PTR [eax],al
1101399f:	data16 add BYTE PTR [eax],al
110139a2:	add    BYTE PTR [esi+0x0],ah
110139a5:	add    BYTE PTR [eax],al
110139a7:	add    BYTE PTR gs:[eax],al
110139aa:	add    BYTE PTR [edx+0x0],ah
110139ad:	add    BYTE PTR [eax],al
110139af:	pop    ebx
110139b0:	add    BYTE PTR [eax],al
110139b2:	add    BYTE PTR [edi+0x0],cl
110139b5:	add    BYTE PTR [eax],al
110139b7:	cmp    eax,0x29000000
110139bc:	add    BYTE PTR [eax],al
110139be:	add    BYTE PTR [edi],dl
110139c0:	add    BYTE PTR [eax],al
110139c2:	add    BYTE PTR [ebx],cl
110139c4:	add    BYTE PTR [eax],al
110139c6:	add    BYTE PTR [eax+eax*1],al
110139c9:	add    BYTE PTR [eax],al
110139cb:	add    DWORD PTR [eax],eax
	...
110139e5:	add    BYTE PTR [eax],al
110139e7:	add    al,BYTE PTR [eax]
110139e9:	add    BYTE PTR [eax],al
110139eb:	push   es
110139ec:	add    BYTE PTR [eax],al
110139ee:	add    BYTE PTR [eax],dl
110139f0:	add    BYTE PTR [eax],al
110139f2:	add    BYTE PTR [ebx],ah
110139f4:	add    BYTE PTR [eax],al
110139f6:	add    BYTE PTR ds:0x5b000000,bh
110139fc:	add    BYTE PTR [eax],al
110139fe:	add    BYTE PTR [esi+0x0],dh
11013a01:	add    BYTE PTR [eax],al
11013a03:	mov    BYTE PTR [eax],al
11013a05:	add    BYTE PTR [eax],al
11013a07:	xchg   edx,eax
11013a08:	add    BYTE PTR [eax],al
11013a0a:	add    BYTE PTR [edi-0x68000000],dl
11013a10:	add    BYTE PTR [eax],al
11013a12:	add    BYTE PTR [ecx-0x66000000],bl
11013a18:	add    BYTE PTR [eax],al
11013a1a:	add    BYTE PTR [ebp-0x5e000000],bl
11013a20:	add    BYTE PTR [eax],al
11013a22:	add    BYTE PTR [ecx-0x4c000000],ch
11013a28:	add    BYTE PTR [eax],al
11013a2a:	add    cl,al
11013a2c:	add    BYTE PTR [eax],al
11013a2e:	add    bh,cl
11013a30:	add    BYTE PTR [eax],al
11013a32:	add    ch,bl
11013a34:	add    BYTE PTR [eax],al
11013a36:	add    dl,ch
11013a38:	add    BYTE PTR [eax],al
11013a3a:	add    ah,bh
11013a3c:	add    BYTE PTR [eax],al
11013a3e:	add    bh,bh
11013a40:	xor    al,0x34
11013a42:	xor    al,0xff
11013a44:	in     al,dx
11013a45:	in     al,dx
11013a46:	in     al,dx
11013a47:	(bad)  
11013a48:	std    
11013a49:	std    
11013a4a:	std    
11013a4b:	(bad)  
11013a4c:	(bad)  
11013a4d:	(bad)  
11013a4e:	(bad)  
11013a4f:	(bad)  
11013a50:	(bad)  
11013a51:	(bad)  
11013a52:	(bad)  
11013a53:	(bad)  
11013a54:	std    
11013a55:	std    
11013a56:	std    
11013a57:	(bad)  
11013a58:	jmp    0x11013a45
11013a5a:	jmp    0x11013a5b
11013a5c:	xor    DWORD PTR [ecx],esi
11013a5e:	xor    edi,edi
11013a60:	add    BYTE PTR [eax],al
11013a62:	add    bh,bh
11013a64:	add    BYTE PTR [eax],al
11013a66:	add    ah,bh
11013a68:	add    BYTE PTR [eax],al
11013a6a:	add    dl,ch
11013a6c:	add    BYTE PTR [eax],al
11013a6e:	add    ah,bl
11013a70:	add    BYTE PTR [eax],al
11013a72:	add    bh,cl
11013a74:	add    BYTE PTR [eax],al
11013a76:	add    cl,al
11013a78:	add    BYTE PTR [eax],al
11013a7a:	add    BYTE PTR [eax+eax*1+0xa90000],dh
11013a81:	add    BYTE PTR [eax],al
11013a83:	mov    ds:0x9d000000,al
11013a88:	add    BYTE PTR [eax],al
11013a8a:	add    BYTE PTR [edx-0x67000000],bl
11013a90:	add    BYTE PTR [eax],al
11013a92:	add    BYTE PTR [eax-0x68000000],bl
11013a98:	add    BYTE PTR [eax],al
11013a9a:	add    BYTE PTR [eax-0x68000000],bl
11013aa0:	add    BYTE PTR [eax],al
11013aa2:	add    BYTE PTR [eax-0x69000000],bl
11013aa8:	add    BYTE PTR [eax],al
11013aaa:	add    BYTE PTR [edx-0x78000000],dl
11013ab0:	add    BYTE PTR [eax],al
11013ab2:	add    BYTE PTR [esi+0x0],dh
11013ab5:	add    BYTE PTR [eax],al
11013ab7:	pop    ebx
11013ab8:	add    BYTE PTR [eax],al
11013aba:	add    BYTE PTR ds:0x23000000,bh
11013ac0:	add    BYTE PTR [eax],al
11013ac2:	add    BYTE PTR [eax],dl
11013ac4:	add    BYTE PTR [eax],al
11013ac6:	add    BYTE PTR [esi],al
11013ac8:	add    BYTE PTR [eax],al
11013aca:	add    BYTE PTR [edx],al
	...
11013ae4:	add    BYTE PTR [eax],al
11013ae6:	add    BYTE PTR [edx],al
11013ae8:	add    BYTE PTR [eax],al
11013aea:	add    BYTE PTR [eax],cl
11013aec:	add    BYTE PTR [eax],al
11013aee:	add    BYTE PTR ds:0x2d000000,dl
11013af4:	add    BYTE PTR [eax],al
11013af6:	add    BYTE PTR [edi+0x0],cl
11013af9:	add    BYTE PTR [eax],al
11013afb:	jbe    0x11013afd
11013afd:	add    BYTE PTR [eax],al
11013aff:	cwde   
11013b00:	add    BYTE PTR [eax],al
11013b02:	add    BYTE PTR [eax-0x43000000],dh
11013b08:	add    BYTE PTR [eax],al
11013b0a:	add    bl,al
11013b0c:	add    BYTE PTR [eax],al
11013b0e:	add    ch,al
11013b10:	add    BYTE PTR [eax],al
11013b12:	add    dh,al
11013b14:	add    BYTE PTR [eax],al
11013b16:	add    bh,al
11013b18:	add    BYTE PTR [eax],al
11013b1a:	add    dl,cl
11013b1c:	add    BYTE PTR [eax],al
11013b1e:	add    dh,cl
11013b20:	add    BYTE PTR [eax],al
11013b22:	add    ah,dl
11013b24:	add    BYTE PTR [eax],al
11013b26:	add    ah,bl
11013b28:	add    BYTE PTR [eax],al
11013b2a:	add    ah,ah
11013b2c:	add    BYTE PTR [eax],al
11013b2e:	add    bl,ch
11013b30:	add    BYTE PTR [eax],al
11013b32:	add    bl,dh
11013b34:	add    BYTE PTR [eax],al
11013b36:	add    ch,bh
11013b38:	add    BYTE PTR [eax],al
11013b3a:	add    bh,bh
11013b3c:	xor    al,0x34
11013b3e:	xor    al,0xff
11013b40:	in     al,dx
11013b41:	in     al,dx
11013b42:	in     al,dx
11013b43:	(bad)  
11013b44:	std    
11013b45:	std    
11013b46:	std    
11013b47:	(bad)  
11013b48:	std    
11013b49:	std    
11013b4a:	std    
11013b4b:	(bad)  
11013b4c:	(bad)  
11013b4d:	(bad)  
11013b4e:	(bad)  
11013b4f:	(bad)  
11013b50:	std    
11013b51:	std    
11013b52:	std    
11013b53:	(bad)  
11013b54:	std    
11013b55:	std    
11013b56:	std    
11013b57:	(bad)  
11013b58:	(bad)  
11013b59:	(bad)  
11013b5a:	(bad)  
11013b5b:	(bad)  
11013b5c:	jmp    0x11013b49
11013b5e:	jmp    0x11013b5f
11013b60:	xor    DWORD PTR [ecx],esi
11013b62:	xor    edi,edi
11013b64:	add    BYTE PTR [eax],al
11013b66:	add    bh,bh
11013b68:	add    BYTE PTR [eax],al
11013b6a:	add    ch,bh
11013b6c:	add    BYTE PTR [eax],al
11013b6e:	add    bl,dh
11013b70:	add    BYTE PTR [eax],al
11013b72:	add    bl,ch
11013b74:	add    BYTE PTR [eax],al
11013b76:	add    ah,ah
11013b78:	add    BYTE PTR [eax],al
11013b7a:	add    ah,bl
11013b7c:	add    BYTE PTR [eax],al
11013b7e:	add    ah,dl
11013b80:	add    BYTE PTR [eax],al
11013b82:	add    dh,cl
11013b84:	add    BYTE PTR [eax],al
11013b86:	add    dl,cl
11013b88:	add    BYTE PTR [eax],al
11013b8a:	add    bh,al
11013b8c:	add    BYTE PTR [eax],al
11013b8e:	add    dh,al
11013b90:	add    BYTE PTR [eax],al
11013b92:	add    ch,al
11013b94:	add    BYTE PTR [eax],al
11013b96:	add    ch,al
11013b98:	add    BYTE PTR [eax],al
11013b9a:	add    ch,al
11013b9c:	add    BYTE PTR [eax],al
11013b9e:	add    ch,al
11013ba0:	add    BYTE PTR [eax],al
11013ba2:	add    ch,al
11013ba4:	add    BYTE PTR [eax],al
11013ba6:	add    bl,al
11013ba8:	add    BYTE PTR [eax],al
11013baa:	add    BYTE PTR [ebp-0x50000000],bh
11013bb0:	add    BYTE PTR [eax],al
11013bb2:	add    BYTE PTR [eax+0x76000000],bl
11013bb8:	add    BYTE PTR [eax],al
11013bba:	add    BYTE PTR [edi+0x0],cl
11013bbd:	add    BYTE PTR [eax],al
11013bbf:	sub    eax,0x15000000
11013bc4:	add    BYTE PTR [eax],al
11013bc6:	add    BYTE PTR [eax],cl
11013bc8:	add    BYTE PTR [eax],al
11013bca:	add    BYTE PTR [edx],al
	...
11013be4:	add    BYTE PTR [eax],al
11013be6:	add    BYTE PTR [edx],al
11013be8:	add    BYTE PTR [eax],al
11013bea:	add    BYTE PTR [ecx],cl
11013bec:	add    BYTE PTR [eax],al
11013bee:	add    BYTE PTR [eax],bl
11013bf0:	add    BYTE PTR [eax],al
11013bf2:	add    bh,bh
11013bf4:	add    BYTE PTR [eax],al
11013bf6:	add    bh,bh
11013bf8:	add    BYTE PTR [eax],al
11013bfa:	add    bh,bh
11013bfc:	add    BYTE PTR [eax],al
11013bfe:	add    bh,bh
11013c00:	add    BYTE PTR [eax],al
11013c02:	add    bh,bh
11013c04:	add    BYTE PTR [eax],al
11013c06:	add    bh,bh
11013c08:	add    BYTE PTR [eax],al
11013c0a:	add    bh,bh
11013c0c:	add    BYTE PTR [eax],al
11013c0e:	add    bh,bh
11013c10:	add    BYTE PTR [eax],al
11013c12:	add    bh,bh
11013c14:	add    BYTE PTR [eax],al
11013c16:	add    bh,bh
11013c18:	add    BYTE PTR [eax],al
11013c1a:	add    bh,bh
11013c1c:	add    BYTE PTR [eax],al
11013c1e:	add    bh,bh
11013c20:	add    BYTE PTR [eax],al
11013c22:	add    bh,bh
11013c24:	add    BYTE PTR [eax],al
11013c26:	add    bh,bh
11013c28:	add    BYTE PTR [eax],al
11013c2a:	add    bh,bh
11013c2c:	add    BYTE PTR [eax],al
11013c2e:	add    bh,bh
11013c30:	add    BYTE PTR [eax],al
11013c32:	add    bh,bh
11013c34:	add    BYTE PTR [eax],al
11013c36:	add    bh,bh
11013c38:	xor    al,0x34
11013c3a:	xor    al,0xff
11013c3c:	in     al,dx
11013c3d:	in     al,dx
11013c3e:	in     al,dx
11013c3f:	(bad)  
11013c40:	std    
11013c41:	std    
11013c42:	std    
11013c43:	(bad)  
11013c44:	std    
11013c45:	std    
11013c46:	std    
11013c47:	(bad)  
11013c48:	std    
11013c49:	std    
11013c4a:	std    
11013c4b:	(bad)  
11013c4c:	std    
11013c4d:	std    
11013c4e:	std    
11013c4f:	(bad)  
11013c50:	std    
11013c51:	std    
11013c52:	std    
11013c53:	(bad)  
11013c54:	std    
11013c55:	std    
11013c56:	std    
11013c57:	(bad)  
11013c58:	std    
11013c59:	std    
11013c5a:	std    
11013c5b:	(bad)  
11013c5c:	std    
11013c5d:	std    
11013c5e:	std    
11013c5f:	(bad)  
11013c60:	jmp    0x11013c4d
11013c62:	jmp    0x11013c63
11013c64:	xor    DWORD PTR [ecx],esi
11013c66:	xor    edi,edi
11013c68:	add    BYTE PTR [eax],al
11013c6a:	add    bh,bh
11013c6c:	add    BYTE PTR [eax],al
11013c6e:	add    bh,bh
11013c70:	add    BYTE PTR [eax],al
11013c72:	add    bh,bh
11013c74:	add    BYTE PTR [eax],al
11013c76:	add    bh,bh
11013c78:	add    BYTE PTR [eax],al
11013c7a:	add    bh,bh
11013c7c:	add    BYTE PTR [eax],al
11013c7e:	add    bh,bh
11013c80:	add    BYTE PTR [eax],al
11013c82:	add    bh,bh
11013c84:	add    BYTE PTR [eax],al
11013c86:	add    bh,bh
11013c88:	add    BYTE PTR [eax],al
11013c8a:	add    bh,bh
11013c8c:	add    BYTE PTR [eax],al
11013c8e:	add    bh,bh
11013c90:	add    BYTE PTR [eax],al
11013c92:	add    bh,bh
11013c94:	add    BYTE PTR [eax],al
11013c96:	add    bh,bh
11013c98:	add    BYTE PTR [eax],al
11013c9a:	add    bh,bh
11013c9c:	add    BYTE PTR [eax],al
11013c9e:	add    bh,bh
11013ca0:	add    BYTE PTR [eax],al
11013ca2:	add    bh,bh
11013ca4:	add    BYTE PTR [eax],al
11013ca6:	add    bh,bh
11013ca8:	add    BYTE PTR [eax],al
11013caa:	add    bh,bh
11013cac:	add    BYTE PTR [eax],al
11013cae:	add    bh,bh
11013cb0:	add    BYTE PTR [eax],al
11013cb2:	add    BYTE PTR [eax-0x78000000],dh
11013cb8:	add    BYTE PTR [eax],al
11013cba:	add    BYTE PTR [ebx+0x0],bl
11013cbd:	add    BYTE PTR [eax],al
11013cbf:	xor    al,0x0
11013cc1:	add    BYTE PTR [eax],al
11013cc3:	sbb    BYTE PTR [eax],al
11013cc5:	add    BYTE PTR [eax],al
11013cc7:	or     DWORD PTR [eax],eax
11013cc9:	add    BYTE PTR [eax],al
11013ccb:	add    al,BYTE PTR [eax]
	...
11013ce5:	add    BYTE PTR [eax],al
11013ce7:	add    al,BYTE PTR [eax]
11013ce9:	add    BYTE PTR [eax],al
11013ceb:	or     al,BYTE PTR [eax]
11013ced:	add    BYTE PTR [eax],al
11013cef:	sbb    al,BYTE PTR [eax]
11013cf1:	add    BYTE PTR [eax],al
11013cf3:	inc    DWORD PTR [eax]
11013cf5:	add    BYTE PTR [eax],al
11013cf7:	inc    DWORD PTR [eax]
11013cf9:	add    BYTE PTR [eax],al
11013cfb:	inc    DWORD PTR [eax]
11013cfd:	add    BYTE PTR [eax],al
11013cff:	inc    DWORD PTR [eax]
11013d01:	add    BYTE PTR [eax],al
11013d03:	inc    DWORD PTR [eax]
11013d05:	add    BYTE PTR [eax],al
11013d07:	inc    DWORD PTR [eax]
11013d09:	add    BYTE PTR [eax],al
11013d0b:	inc    DWORD PTR [eax]
11013d0d:	add    BYTE PTR [eax],al
11013d0f:	inc    DWORD PTR [eax]
11013d11:	add    BYTE PTR [eax],al
11013d13:	inc    DWORD PTR [eax]
11013d15:	add    BYTE PTR [eax],al
11013d17:	inc    DWORD PTR [eax]
11013d19:	add    BYTE PTR [eax],al
11013d1b:	inc    DWORD PTR [eax]
11013d1d:	add    BYTE PTR [eax],al
11013d1f:	inc    DWORD PTR [eax]
11013d21:	add    BYTE PTR [eax],al
11013d23:	inc    DWORD PTR [eax]
11013d25:	add    BYTE PTR [eax],al
11013d27:	inc    DWORD PTR [eax]
11013d29:	add    BYTE PTR [eax],al
11013d2b:	inc    DWORD PTR [eax]
11013d2d:	add    BYTE PTR [eax],al
11013d2f:	inc    DWORD PTR [eax]
11013d31:	add    BYTE PTR [eax],al
11013d33:	push   DWORD PTR [esp+esi*1]
11013d36:	xor    al,0xff
11013d38:	in     al,dx
11013d39:	in     al,dx
11013d3a:	in     al,dx
11013d3b:	(bad)  
11013d3c:	(bad)  
11013d3d:	(bad)  
11013d3e:	(bad)  
11013d3f:	(bad)  
11013d40:	(bad)  
11013d41:	(bad)  
11013d42:	(bad)  
11013d43:	(bad)  
11013d44:	std    
11013d45:	std    
11013d46:	std    
11013d47:	(bad)  
11013d48:	(bad)  
11013d49:	(bad)  
11013d4a:	(bad)  
11013d4b:	(bad)  
11013d4c:	(bad)  
11013d4d:	(bad)  
11013d4e:	(bad)  
11013d4f:	(bad)  
11013d50:	(bad)  
11013d51:	(bad)  
11013d52:	(bad)  
11013d53:	(bad)  
11013d54:	std    
11013d55:	std    
11013d56:	std    
11013d57:	(bad)  
11013d58:	(bad)  
11013d59:	(bad)  
11013d5a:	(bad)  
11013d5b:	(bad)  
11013d5c:	(bad)  
11013d5d:	(bad)  
11013d5e:	(bad)  
11013d5f:	(bad)  
11013d60:	(bad)  
11013d61:	(bad)  
11013d62:	(bad)  
11013d63:	(bad)  
11013d64:	jmp    0x11013d51
11013d66:	jmp    0x11013d67
11013d68:	xor    DWORD PTR [ecx],esi
11013d6a:	xor    edi,edi
11013d6c:	add    BYTE PTR [eax],al
11013d6e:	add    bh,bh
11013d70:	add    BYTE PTR [eax],al
11013d72:	add    bh,bh
11013d74:	add    BYTE PTR [eax],al
11013d76:	add    bh,bh
11013d78:	add    BYTE PTR [eax],al
11013d7a:	add    bh,bh
11013d7c:	add    BYTE PTR [eax],al
11013d7e:	add    bh,bh
11013d80:	add    BYTE PTR [eax],al
11013d82:	add    bh,bh
11013d84:	add    BYTE PTR [eax],al
11013d86:	add    bh,bh
11013d88:	add    BYTE PTR [eax],al
11013d8a:	add    bh,bh
11013d8c:	add    BYTE PTR [eax],al
11013d8e:	add    bh,bh
11013d90:	add    BYTE PTR [eax],al
11013d92:	add    bh,bh
11013d94:	add    BYTE PTR [eax],al
11013d96:	add    bh,bh
11013d98:	add    BYTE PTR [eax],al
11013d9a:	add    bh,bh
11013d9c:	add    BYTE PTR [eax],al
11013d9e:	add    bh,bh
11013da0:	add    BYTE PTR [eax],al
11013da2:	add    bh,bh
11013da4:	add    BYTE PTR [eax],al
11013da6:	add    bh,bh
11013da8:	add    BYTE PTR [eax],al
11013daa:	add    bh,bh
11013dac:	add    BYTE PTR [eax],al
11013dae:	add    bh,bh
11013db0:	add    BYTE PTR [eax],al
11013db2:	add    BYTE PTR [ebp-0x6d000000],bh
11013db8:	add    BYTE PTR [eax],al
11013dba:	add    BYTE PTR [edx+0x0],ah
11013dbd:	add    BYTE PTR [eax],al
11013dbf:	cmp    BYTE PTR [eax],al
11013dc1:	add    BYTE PTR [eax],al
11013dc3:	sbb    al,BYTE PTR [eax]
11013dc5:	add    BYTE PTR [eax],al
11013dc7:	or     al,BYTE PTR [eax]
11013dc9:	add    BYTE PTR [eax],al
11013dcb:	add    al,BYTE PTR [eax]
	...
11013de5:	add    BYTE PTR [eax],al
11013de7:	add    al,BYTE PTR [eax]
11013de9:	add    BYTE PTR [eax],al
11013deb:	or     al,BYTE PTR [eax]
11013ded:	add    BYTE PTR [eax],al
11013def:	sbb    eax,DWORD PTR [eax]
11013df1:	add    BYTE PTR [eax],al
11013df3:	inc    DWORD PTR [eax]
11013df5:	add    BYTE PTR [eax],al
11013df7:	push   esp
11013df9:	mov    bl,BYTE PTR [ebx-0x1]
11013dfc:	xrelease mov DWORD PTR [ebx-0x1],ebx
11013e00:	repnz mov DWORD PTR [edx-0x1],ebx
11013e04:	out    dx,eax
11013e05:	xchg   DWORD PTR [ecx-0x1],ebx
11013e08:	call   0xee009490
11013e0d:	jl     0x11013e61
11013e0f:	dec    edx
11013e11:	jb     0x11013e5e
11013e13:	push   DWORD PTR [ecx-0x6d00be9c]
11013e19:	push   edx
11013e1a:	push   DWORD PTR ss:[eax+0x3f]
11013e1e:	sub    edi,edi
11013e20:	dec    edi
11013e21:	sub    al,0x1d
11013e23:	push   DWORD PTR [eax]
11013e25:	sbb    edx,DWORD PTR [ecx]
11013e27:	inc    DWORD PTR [esi]
11013e29:	add    eax,DWORD PTR [edx]
11013e2b:	inc    DWORD PTR [eax]
11013e2d:	add    BYTE PTR [eax],al
11013e2f:	push   DWORD PTR ds:0xecff3435
11013e35:	in     al,dx
11013e36:	in     al,dx
11013e37:	(bad)  
11013e38:	(bad)  
11013e39:	(bad)  
11013e3a:	std    
11013e3b:	(bad)  
11013e3c:	(bad)  
11013e3d:	(bad)  
11013e3e:	(bad)  
11013e3f:	(bad)  
11013e40:	(bad)  
11013e41:	(bad)  
11013e42:	(bad)  
11013e43:	(bad)  
11013e44:	(bad)  
11013e45:	(bad)  
11013e46:	std    
11013e47:	(bad)  
11013e48:	std    
11013e49:	std    
11013e4a:	std    
11013e4b:	(bad)  
11013e4c:	(bad)  
11013e4d:	(bad)  
11013e4e:	(bad)  
11013e4f:	(bad)  
11013e50:	(bad)  
11013e51:	(bad)  
11013e52:	(bad)  
11013e53:	(bad)  
11013e54:	std    
11013e55:	std    
11013e56:	std    
11013e57:	(bad)  
11013e58:	(bad)  
11013e59:	(bad)  
11013e5a:	(bad)  
11013e5b:	(bad)  
11013e5c:	(bad)  
11013e5d:	(bad)  
11013e5e:	(bad)  
11013e5f:	(bad)  
11013e60:	(bad)  
11013e61:	(bad)  
11013e62:	(bad)  
11013e63:	(bad)  
11013e64:	(bad)  
11013e65:	(bad)  
11013e66:	(bad)  
11013e67:	(bad)  
11013e68:	jmp    0x11013e55
11013e6a:	jmp    0x11013e6b
11013e6c:	xor    DWORD PTR [ecx],esi
11013e6e:	xor    edi,edi
11013e70:	add    BYTE PTR [eax],al
11013e72:	add    bh,bh
11013e74:	push   es
11013e75:	add    eax,DWORD PTR [edx]
11013e77:	push   DWORD PTR [eax]
11013e79:	sbb    dl,BYTE PTR [ecx]
11013e7b:	dec    DWORD PTR [edi+0x2c]
11013e7e:	sbb    eax,0x293f70ff
11013e83:	call   DWORD PTR [edx-0x4e00c9ae]
11013e89:	fs inc edx
11013e8b:	dec    ebx
11013e8d:	jb     0x11013eda
11013e8f:	(bad)  
11013e90:	fdivr  QWORD PTR [edx+edx*2-0x1]
11013e94:	call   0x100951c
11013e99:	xchg   DWORD PTR [ecx-0x1],ebx
11013e9c:	repnz mov BYTE PTR [edx-0x1],bl
11013ea0:	xrelease mov DWORD PTR [ebx-0x1],ebx
11013ea4:	hlt    
11013ea5:	mov    bl,BYTE PTR [ebx-0x1]
11013ea8:	add    BYTE PTR [eax],al
11013eaa:	add    bh,bh
11013eac:	add    BYTE PTR [eax],al
11013eae:	add    bh,bh
11013eb0:	add    BYTE PTR [eax],al
11013eb2:	add    bl,al
11013eb4:	add    BYTE PTR [eax],al
11013eb6:	add    BYTE PTR [edi+0x65000000],dl
11013ebc:	add    BYTE PTR [eax],al
11013ebe:	add    BYTE PTR [edx],bh
11013ec0:	add    BYTE PTR [eax],al
11013ec2:	add    BYTE PTR [ebx],bl
11013ec4:	add    BYTE PTR [eax],al
11013ec6:	add    BYTE PTR [edx],cl
11013ec8:	add    BYTE PTR [eax],al
11013eca:	add    BYTE PTR [edx],al
	...
11013ee4:	add    BYTE PTR [eax],al
11013ee6:	add    BYTE PTR [edx],al
11013ee8:	add    BYTE PTR [eax],al
11013eea:	add    BYTE PTR [edx],cl
11013eec:	add    BYTE PTR [eax],al
11013eee:	add    BYTE PTR [ebx],bl
11013ef0:	add    BYTE PTR [eax],al
11013ef2:	add    bh,bh
11013ef4:	add    BYTE PTR [eax],al
11013ef6:	add    bh,bh
11013ef8:	xrelease mov DWORD PTR [ebx-0x1],ebx
11013efc:	repnz mov DWORD PTR [edx-0x1],ebx
11013f00:	out    dx,eax
11013f01:	xchg   DWORD PTR [ecx-0x1],ebx
11013f04:	call   0xee00958c
11013f09:	jl     0x11013f5d
11013f0b:	dec    edx
11013f0d:	jb     0x11013f5a
11013f0f:	push   DWORD PTR [ecx-0x6d00be9c]
11013f15:	push   edx
11013f16:	push   DWORD PTR ss:[eax+0x3f]
11013f1a:	sub    edi,edi
11013f1c:	dec    edi
11013f1d:	sub    al,0x1d
11013f1f:	push   DWORD PTR [eax]
11013f21:	sbb    edx,DWORD PTR [ecx]
11013f23:	inc    DWORD PTR [esi]
11013f25:	add    eax,DWORD PTR [edx]
11013f27:	inc    DWORD PTR [eax]
11013f29:	add    BYTE PTR [eax],al
11013f2b:	push   DWORD PTR [esp+esi*1]
11013f2e:	xor    al,0xff
11013f30:	in     al,dx
11013f31:	in     al,dx
11013f32:	in     al,dx
11013f33:	(bad)  
11013f34:	(bad)  
11013f35:	(bad)  
11013f36:	(bad)  
11013f37:	(bad)  
11013f38:	(bad)  
11013f39:	(bad)  
11013f3a:	std    
11013f3b:	(bad)  
11013f3c:	(bad)  
11013f3d:	(bad)  
11013f3e:	(bad)  
11013f3f:	(bad)  
11013f40:	(bad)  
11013f41:	(bad)  
11013f42:	std    
11013f43:	(bad)  
11013f44:	(bad)  
11013f45:	(bad)  
11013f46:	std    
11013f47:	(bad)  
11013f48:	std    
11013f49:	std    
11013f4a:	std    
11013f4b:	(bad)  
11013f4c:	(bad)  
11013f4d:	(bad)  
11013f4e:	(bad)  
11013f4f:	(bad)  
11013f50:	(bad)  
11013f51:	(bad)  
11013f52:	(bad)  
11013f53:	(bad)  
11013f54:	std    
11013f55:	std    
11013f56:	std    
11013f57:	(bad)  
11013f58:	(bad)  
11013f59:	(bad)  
11013f5a:	(bad)  
11013f5b:	(bad)  
11013f5c:	(bad)  
11013f5d:	(bad)  
11013f5e:	(bad)  
11013f5f:	(bad)  
11013f60:	(bad)  
11013f61:	(bad)  
11013f62:	(bad)  
11013f63:	(bad)  
11013f64:	(bad)  
11013f65:	(bad)  
11013f66:	(bad)  
11013f67:	(bad)  
11013f68:	(bad)  
11013f69:	(bad)  
11013f6a:	std    
11013f6b:	(bad)  
11013f6c:	jmp    0x11013f59
11013f6e:	jmp    0x11013f6f
11013f70:	xor    DWORD PTR [ecx],esi
11013f72:	xor    edi,edi
11013f74:	add    BYTE PTR [eax],al
11013f76:	add    bh,bh
11013f78:	push   es
11013f79:	add    eax,DWORD PTR [edx]
11013f7b:	push   DWORD PTR [eax]
11013f7d:	sbb    dl,BYTE PTR [ecx]
11013f7f:	dec    DWORD PTR [edi+0x2d]
11013f82:	sbb    eax,0x293f70ff
11013f87:	call   DWORD PTR [edx-0x4e00c9ae]
11013f8d:	fs inc edx
11013f8f:	dec    ebx
11013f91:	jb     0x11013fde
11013f93:	(bad)  
11013f94:	fdivr  QWORD PTR [edx+edx*2-0x1]
11013f98:	call   0x1009620
11013f9d:	xchg   DWORD PTR [ecx-0x1],ebx
11013fa0:	repnz mov BYTE PTR [edx-0x1],bl
11013fa4:	xrelease mov DWORD PTR [ebx-0x1],ebx
11013fa8:	add    BYTE PTR [eax],al
11013faa:	add    bh,bh
11013fac:	add    BYTE PTR [eax],al
11013fae:	add    bh,bh
11013fb0:	add    BYTE PTR [eax],al
11013fb2:	add    ch,al
11013fb4:	add    BYTE PTR [eax],al
11013fb6:	add    BYTE PTR [eax+0x66000000],bl
11013fbc:	add    BYTE PTR [eax],al
11013fbe:	add    BYTE PTR [edx],bh
11013fc0:	add    BYTE PTR [eax],al
11013fc2:	add    BYTE PTR [ebx],bl
11013fc4:	add    BYTE PTR [eax],al
11013fc6:	add    BYTE PTR [edx],cl
11013fc8:	add    BYTE PTR [eax],al
11013fca:	add    BYTE PTR [edx],al
	...
11013fe4:	add    BYTE PTR [eax],al
11013fe6:	add    BYTE PTR [edx],al
11013fe8:	add    BYTE PTR [eax],al
11013fea:	add    BYTE PTR [edx],cl
11013fec:	add    BYTE PTR [eax],al
11013fee:	add    BYTE PTR [ebx],bl
11013ff0:	add    BYTE PTR [eax],al
11013ff2:	add    bh,bh
11013ff4:	add    BYTE PTR [eax],al
11013ff6:	add    bh,bh
11013ff8:	repnz mov DWORD PTR [edx-0x1],ebx
11013ffc:	out    dx,eax
11013ffd:	xchg   DWORD PTR [ecx-0x1],ebx
11014000:	call   0xee009688
11014005:	jl     0x11014059
11014007:	dec    edx
11014009:	jb     0x11014056
1101400b:	push   DWORD PTR [ecx-0x6d00be9c]
11014011:	push   edx
11014012:	push   DWORD PTR ss:[eax+0x3f]
11014016:	sub    edi,edi
11014018:	dec    edi
11014019:	sub    al,0x1d
1101401b:	push   DWORD PTR [eax]
1101401d:	sbb    edx,DWORD PTR [ecx]
1101401f:	inc    DWORD PTR [esi]
11014021:	add    eax,DWORD PTR [edx]
11014023:	inc    DWORD PTR [eax]
11014025:	add    BYTE PTR [eax],al
11014027:	push   DWORD PTR [esp+esi*1]
1101402a:	xor    al,0xff
1101402c:	in     al,dx
1101402d:	in     al,dx
1101402e:	in     al,dx
1101402f:	(bad)  
11014030:	(bad)  
11014031:	(bad)  
11014032:	std    
11014033:	(bad)  
11014034:	(bad)  
11014035:	(bad)  
11014036:	(bad)  
11014037:	(bad)  
11014038:	(bad)  
11014039:	(bad)  
1101403a:	std    
1101403b:	(bad)  
1101403c:	(bad)  
1101403d:	(bad)  
1101403e:	std    
1101403f:	(bad)  
11014040:	(bad)  
11014041:	(bad)  
11014042:	std    
11014043:	(bad)  
11014044:	(bad)  
11014045:	(bad)  
11014046:	std    
11014047:	(bad)  
11014048:	(bad)  
11014049:	(bad)  
1101404a:	std    
1101404b:	(bad)  
1101404c:	(bad)  
1101404d:	(bad)  
1101404e:	std    
1101404f:	(bad)  
11014050:	std    
11014051:	std    
11014052:	std    
11014053:	(bad)  
11014054:	std    
11014055:	std    
11014056:	std    
11014057:	(bad)  
11014058:	(bad)  
11014059:	(bad)  
1101405a:	(bad)  
1101405b:	(bad)  
1101405c:	(bad)  
1101405d:	(bad)  
1101405e:	(bad)  
1101405f:	(bad)  
11014060:	(bad)  
11014061:	(bad)  
11014062:	(bad)  
11014063:	(bad)  
11014064:	(bad)  
11014065:	(bad)  
11014066:	(bad)  
11014067:	(bad)  
11014068:	std    
11014069:	std    
1101406a:	std    
1101406b:	(bad)  
1101406c:	std    
1101406d:	std    
1101406e:	std    
1101406f:	(bad)  
11014070:	jmp    0x1101405d
11014072:	jmp    0x11014073
11014074:	xor    DWORD PTR [ecx],esi
11014076:	xor    edi,edi
11014078:	add    BYTE PTR [eax],al
1101407a:	add    bh,bh
1101407c:	push   es
1101407d:	add    eax,DWORD PTR [edx]
1101407f:	push   DWORD PTR [eax]
11014081:	sbb    edx,DWORD PTR [ecx]
11014083:	dec    DWORD PTR [edi+0x2d]
11014086:	sbb    eax,0x293f70ff
1101408b:	call   DWORD PTR [edx-0x4e00c9ae]
11014091:	fs inc edx
11014093:	dec    ebx
11014095:	jb     0x110140e2
11014097:	(bad)  
11014098:	fdivr  QWORD PTR [edx+edx*2-0x1]
1101409c:	call   0x1009724
110140a1:	xchg   DWORD PTR [ecx-0x1],ebx
110140a4:	repnz mov BYTE PTR [edx-0x1],bl
110140a8:	add    BYTE PTR [eax],al
110140aa:	add    bh,bh
110140ac:	add    BYTE PTR [eax],al
110140ae:	add    bh,bh
110140b0:	add    BYTE PTR [eax],al
110140b2:	add    ch,al
110140b4:	add    BYTE PTR [eax],al
110140b6:	add    BYTE PTR [eax+0x66000000],bl
110140bc:	add    BYTE PTR [eax],al
110140be:	add    BYTE PTR [edx],bh
110140c0:	add    BYTE PTR [eax],al
110140c2:	add    BYTE PTR [ebx],bl
110140c4:	add    BYTE PTR [eax],al
110140c6:	add    BYTE PTR [edx],cl
110140c8:	add    BYTE PTR [eax],al
110140ca:	add    BYTE PTR [edx],al
	...
110140e4:	add    BYTE PTR [eax],al
110140e6:	add    BYTE PTR [edx],al
110140e8:	add    BYTE PTR [eax],al
110140ea:	add    BYTE PTR [edx],cl
110140ec:	add    BYTE PTR [eax],al
110140ee:	add    BYTE PTR [ebx],bl
110140f0:	add    BYTE PTR [eax],al
110140f2:	add    bh,bh
110140f4:	add    BYTE PTR [eax],al
110140f6:	add    bh,bh
110140f8:	out    dx,eax
110140f9:	xchg   DWORD PTR [ecx-0x1],ebx
110140fc:	call   0xee009784
11014101:	jl     0x11014155
11014103:	dec    edx
11014105:	jb     0x11014152
11014107:	push   DWORD PTR [ecx-0x6d00be9c]
1101410d:	push   edx
1101410e:	push   DWORD PTR ss:[eax+0x3f]
11014112:	sub    edi,edi
11014114:	dec    edi
11014115:	sub    al,0x1d
11014117:	push   DWORD PTR [eax]
11014119:	sbb    edx,DWORD PTR [ecx]
1101411b:	inc    DWORD PTR [esi]
1101411d:	add    eax,DWORD PTR [edx]
1101411f:	inc    DWORD PTR [eax]
11014121:	add    BYTE PTR [eax],al
11014123:	push   DWORD PTR [esp+esi*1]
11014126:	xor    al,0xff
11014128:	in     al,dx
11014129:	in     al,dx
1101412a:	in     al,dx
1101412b:	(bad)  
1101412c:	(bad)  
1101412d:	(bad)  
1101412e:	(bad)  
1101412f:	(bad)  
11014130:	(bad)  
11014131:	(bad)  
11014132:	(bad)  
11014133:	(bad)  
11014134:	(bad)  
11014135:	(bad)  
11014136:	(bad)  
11014137:	(bad)  
11014138:	(bad)  
11014139:	(bad)  
1101413a:	(bad)  
1101413b:	(bad)  
1101413c:	(bad)  
1101413d:	(bad)  
1101413e:	(bad)  
1101413f:	(bad)  
11014140:	(bad)  
11014141:	(bad)  
11014142:	std    
11014143:	(bad)  
11014144:	(bad)  
11014145:	(bad)  
11014146:	std    
11014147:	(bad)  
11014148:	std    
11014149:	std    
1101414a:	std    
1101414b:	(bad)  
1101414c:	(bad)  
1101414d:	(bad)  
1101414e:	(bad)  
1101414f:	(bad)  
11014150:	(bad)  
11014151:	(bad)  
11014152:	std    
11014153:	(bad)  
11014154:	std    
11014155:	std    
11014156:	std    
11014157:	(bad)  
11014158:	(bad)  
11014159:	(bad)  
1101415a:	(bad)  
1101415b:	(bad)  
1101415c:	(bad)  
1101415d:	(bad)  
1101415e:	std    
1101415f:	(bad)  
11014160:	(bad)  
11014161:	(bad)  
11014162:	(bad)  
11014163:	(bad)  
11014164:	(bad)  
11014165:	(bad)  
11014166:	(bad)  
11014167:	(bad)  
11014168:	(bad)  
11014169:	(bad)  
1101416a:	std    
1101416b:	(bad)  
1101416c:	std    
1101416d:	std    
1101416e:	std    
1101416f:	(bad)  
11014170:	(bad)  
11014171:	(bad)  
11014172:	(bad)  
11014173:	(bad)  
11014174:	jmp    0x11014161
11014176:	jmp    0x11014177
11014178:	xor    DWORD PTR [ecx],esi
1101417a:	xor    edi,edi
1101417c:	add    BYTE PTR [eax],al
1101417e:	add    bh,bh
11014180:	push   es
11014181:	add    eax,DWORD PTR [edx]
11014183:	push   DWORD PTR [eax]
11014185:	sbb    edx,DWORD PTR [ecx]
11014187:	call   DWORD PTR [eax+0x2d]
1101418a:	sbb    eax,0x293f70ff
1101418f:	call   DWORD PTR [ebx-0x4e00c9ae]
11014195:	fs inc edx
11014197:	dec    ebx
11014199:	jb     0x110141e6
1101419b:	(bad)  
1101419c:	fdivr  QWORD PTR [edx+edx*2-0x1]
110141a0:	call   0x1009828
110141a5:	xchg   DWORD PTR [ecx-0x1],ebx
110141a8:	add    BYTE PTR [eax],al
110141aa:	add    bh,bh
110141ac:	add    BYTE PTR [eax],al
110141ae:	add    bh,bh
110141b0:	add    BYTE PTR [eax],al
110141b2:	add    ch,al
110141b4:	add    BYTE PTR [eax],al
110141b6:	add    BYTE PTR [eax+0x66000000],bl
110141bc:	add    BYTE PTR [eax],al
110141be:	add    BYTE PTR [edx],bh
110141c0:	add    BYTE PTR [eax],al
110141c2:	add    BYTE PTR [ebx],bl
110141c4:	add    BYTE PTR [eax],al
110141c6:	add    BYTE PTR [edx],cl
110141c8:	add    BYTE PTR [eax],al
110141ca:	add    BYTE PTR [edx],al
	...
110141e4:	add    BYTE PTR [eax],al
110141e6:	add    BYTE PTR [edx],al
110141e8:	add    BYTE PTR [eax],al
110141ea:	add    BYTE PTR [edx],cl
110141ec:	add    BYTE PTR [eax],al
110141ee:	add    BYTE PTR [ebx],bl
110141f0:	add    BYTE PTR [eax],al
110141f2:	add    bh,bh
110141f4:	add    BYTE PTR [eax],al
110141f6:	add    bh,bh
110141f8:	call   0xef009880
110141fd:	jl     0x11014251
110141ff:	dec    ebx
11014201:	jb     0x1101424e
11014203:	push   DWORD PTR [ecx-0x6d00bd9c]
11014209:	push   edx
1101420a:	push   DWORD PTR ss:[eax+0x3f]
1101420e:	sub    edi,edi
11014210:	push   eax
11014211:	sub    eax,0x1b30ff1d
11014216:	adc    edi,edi
11014218:	push   es
11014219:	add    eax,DWORD PTR [edx]
1101421b:	inc    DWORD PTR [eax]
1101421d:	add    BYTE PTR [eax],al
1101421f:	push   DWORD PTR [esp+esi*1]
11014222:	xor    al,0xff
11014224:	in     al,dx
11014225:	in     al,dx
11014226:	in     al,dx
11014227:	(bad)  
11014228:	std    
11014229:	std    
1101422a:	std    
1101422b:	(bad)  
1101422c:	(bad)  
1101422d:	(bad)  
1101422e:	std    
1101422f:	(bad)  
11014230:	std    
11014231:	std    
11014232:	std    
11014233:	(bad)  
11014234:	(bad)  
11014235:	(bad)  
11014236:	std    
11014237:	(bad)  
11014238:	std    
11014239:	std    
1101423a:	std    
1101423b:	(bad)  
1101423c:	(bad)  
1101423d:	(bad)  
1101423e:	std    
1101423f:	(bad)  
11014240:	(bad)  
11014241:	(bad)  
11014242:	std    
11014243:	(bad)  
11014244:	std    
11014245:	std    
11014246:	std    
11014247:	(bad)  
11014248:	std    
11014249:	std    
1101424a:	std    
1101424b:	(bad)  
1101424c:	(bad)  
1101424d:	(bad)  
1101424e:	std    
1101424f:	(bad)  
11014250:	(bad)  
11014251:	(bad)  
11014252:	std    
11014253:	(bad)  
11014254:	std    
11014255:	std    
11014256:	std    
11014257:	(bad)  
11014258:	(bad)  
11014259:	(bad)  
1101425a:	(bad)  
1101425b:	(bad)  
1101425c:	std    
1101425d:	std    
1101425e:	std    
1101425f:	(bad)  
11014260:	(bad)  
11014261:	(bad)  
11014262:	std    
11014263:	(bad)  
11014264:	(bad)  
11014265:	(bad)  
11014266:	(bad)  
11014267:	(bad)  
11014268:	std    
11014269:	std    
1101426a:	std    
1101426b:	(bad)  
1101426c:	std    
1101426d:	std    
1101426e:	std    
1101426f:	(bad)  
11014270:	std    
11014271:	std    
11014272:	std    
11014273:	(bad)  
11014274:	std    
11014275:	std    
11014276:	std    
11014277:	(bad)  
11014278:	jmp    0x11014265
1101427a:	jmp    0x1101427b
1101427c:	xor    DWORD PTR [ecx],esi
1101427e:	xor    edi,edi
11014280:	add    BYTE PTR [eax],al
11014282:	add    bh,bh
11014284:	push   es
11014285:	add    eax,DWORD PTR [edx]
11014287:	push   DWORD PTR [eax]
11014289:	sbb    edx,DWORD PTR [ecx]
1101428b:	call   DWORD PTR [eax+0x2d]
1101428e:	sbb    eax,0x293f71ff
11014293:	call   DWORD PTR [ebx-0x4d00c9ae]
11014299:	fs inc edx
1101429b:	dec    ebx
1101429d:	jb     0x110142ea
1101429f:	(bad)  
110142a0:	fdivr  QWORD PTR [edx+edx*2-0x1]
110142a4:	call   0x1200992c
110142a9:	add    BYTE PTR [eax],al
110142ab:	inc    DWORD PTR [eax]
110142ad:	add    BYTE PTR [eax],al
110142af:	inc    DWORD PTR [eax]
110142b1:	add    BYTE PTR [eax],al
110142b3:	lds    eax,FWORD PTR [eax]
110142b5:	add    BYTE PTR [eax],al
110142b7:	cwde   
110142b8:	add    BYTE PTR [eax],al
110142ba:	add    BYTE PTR [esi+0x0],ah
110142bd:	add    BYTE PTR [eax],al
110142bf:	cmp    al,BYTE PTR [eax]
110142c1:	add    BYTE PTR [eax],al
110142c3:	sbb    eax,DWORD PTR [eax]
110142c5:	add    BYTE PTR [eax],al
110142c7:	or     al,BYTE PTR [eax]
110142c9:	add    BYTE PTR [eax],al
110142cb:	add    al,BYTE PTR [eax]
	...
110142e5:	add    BYTE PTR [eax],al
110142e7:	add    al,BYTE PTR [eax]
110142e9:	add    BYTE PTR [eax],al
110142eb:	or     al,BYTE PTR [eax]
110142ed:	add    BYTE PTR [eax],al
110142ef:	sbb    al,0x0
110142f1:	add    BYTE PTR [eax],al
110142f3:	inc    DWORD PTR [eax]
110142f5:	add    BYTE PTR [eax],al
110142f7:	(bad)  
110142f8:	fnstsw WORD PTR [edx+edx*2-0x1]
110142fc:	retf   
110142fd:	jb     0x1101434a
110142ff:	push   DWORD PTR [ecx-0x6d00bd9c]
11014305:	push   edx
11014306:	push   DWORD PTR ss:[ecx+0x3f]
1101430a:	sub    edi,edi
1101430c:	push   eax
1101430d:	sub    eax,0x1b30ff1d
11014312:	adc    edi,edi
11014314:	push   es
11014315:	add    eax,DWORD PTR [edx]
11014317:	inc    DWORD PTR [eax]
11014319:	add    BYTE PTR [eax],al
1101431b:	push   DWORD PTR [esp+esi*1]
1101431e:	xor    al,0xff
11014320:	in     al,dx
11014321:	in     al,dx
11014322:	in     al,dx
11014323:	(bad)  
11014324:	(bad)  
11014325:	(bad)  
11014326:	std    
11014327:	(bad)  
11014328:	(bad)  
11014329:	(bad)  
1101432a:	std    
1101432b:	(bad)  
1101432c:	(bad)  
1101432d:	(bad)  
1101432e:	std    
1101432f:	(bad)  
11014330:	std    
11014331:	std    
11014332:	std    
11014333:	(bad)  
11014334:	(bad)  
11014335:	(bad)  
11014336:	std    
11014337:	(bad)  
11014338:	(bad)  
11014339:	(bad)  
1101433a:	std    
1101433b:	(bad)  
1101433c:	(bad)  
1101433d:	(bad)  
1101433e:	std    
1101433f:	(bad)  
11014340:	(bad)  
11014341:	(bad)  
11014342:	std    
11014343:	(bad)  
11014344:	(bad)  
11014345:	(bad)  
11014346:	std    
11014347:	(bad)  
11014348:	(bad)  
11014349:	(bad)  
1101434a:	std    
1101434b:	(bad)  
1101434c:	(bad)  
1101434d:	(bad)  
1101434e:	std    
1101434f:	(bad)  
11014350:	(bad)  
11014351:	(bad)  
11014352:	std    
11014353:	(bad)  
11014354:	(bad)  
11014355:	(bad)  
11014356:	std    
11014357:	(bad)  
11014358:	(bad)  
11014359:	(bad)  
1101435a:	std    
1101435b:	(bad)  
1101435c:	std    
1101435d:	std    
1101435e:	std    
1101435f:	(bad)  
11014360:	(bad)  
11014361:	(bad)  
11014362:	(bad)  
11014363:	(bad)  
11014364:	(bad)  
11014365:	(bad)  
11014366:	(bad)  
11014367:	(bad)  
11014368:	(bad)  
11014369:	(bad)  
1101436a:	(bad)  
1101436b:	(bad)  
1101436c:	std    
1101436d:	std    
1101436e:	std    
1101436f:	(bad)  
11014370:	(bad)  
11014371:	(bad)  
11014372:	std    
11014373:	(bad)  
11014374:	std    
11014375:	std    
11014376:	std    
11014377:	(bad)  
11014378:	std    
11014379:	std    
1101437a:	std    
1101437b:	(bad)  
1101437c:	jmp    0x11014369
1101437e:	jmp    0x1101437f
11014380:	xor    DWORD PTR [ecx],esi
11014382:	xor    edi,edi
11014384:	add    BYTE PTR [eax],al
11014386:	add    bh,bh
11014388:	push   es
11014389:	add    eax,DWORD PTR [edx]
1101438b:	push   DWORD PTR [eax]
1101438d:	sbb    edx,DWORD PTR [ecx]
1101438f:	call   DWORD PTR [eax+0x2d]
11014392:	sbb    eax,0x293f71ff
11014397:	call   DWORD PTR [ebx-0x4e00c9ae]
1101439d:	fs inc edx
1101439f:	dec    ebx
110143a1:	jb     0x110143ee
110143a3:	(bad)  
110143a4:	fdivr  QWORD PTR [edx+edx*2-0x1]
110143a8:	add    BYTE PTR [eax],al
110143aa:	add    bh,bh
110143ac:	add    BYTE PTR [eax],al
110143ae:	add    bh,bh
110143b0:	add    BYTE PTR [eax],al
110143b2:	add    ch,al
110143b4:	add    BYTE PTR [eax],al
110143b6:	add    BYTE PTR [eax+0x66000000],bl
110143bc:	add    BYTE PTR [eax],al
110143be:	add    BYTE PTR [edx],bh
110143c0:	add    BYTE PTR [eax],al
110143c2:	add    BYTE PTR [ebx],bl
110143c4:	add    BYTE PTR [eax],al
110143c6:	add    BYTE PTR [edx],cl
110143c8:	add    BYTE PTR [eax],al
110143ca:	add    BYTE PTR [edx],al
	...
110143e4:	add    BYTE PTR [eax],al
110143e6:	add    BYTE PTR [ebx],al
110143e8:	add    BYTE PTR [eax],al
110143ea:	add    BYTE PTR [ebx],cl
110143ec:	add    BYTE PTR [eax],al
110143ee:	add    BYTE PTR [edi],bl
110143f0:	add    BYTE PTR [eax],al
110143f2:	add    bh,bh
110143f4:	add    BYTE PTR [eax],al
110143f6:	add    bh,bh
110143f8:	retf   0x4b72
110143fb:	push   DWORD PTR [ecx-0x6d00be9c]
11014401:	push   edx
11014402:	push   DWORD PTR ss:[eax+0x3f]
11014406:	sub    edi,edi
11014408:	dec    edi
11014409:	sub    al,0x1d
1101440b:	push   DWORD PTR [eax]
1101440d:	sbb    edx,DWORD PTR [ecx]
1101440f:	inc    DWORD PTR [esi]
11014411:	add    eax,DWORD PTR [edx]
11014413:	inc    DWORD PTR [eax]
11014415:	add    BYTE PTR [eax],al
11014417:	push   DWORD PTR [esp+esi*1]
1101441a:	xor    al,0xff
1101441c:	in     al,dx
1101441d:	in     al,dx
1101441e:	in     al,dx
1101441f:	(bad)  
11014420:	(bad)  
11014421:	(bad)  
11014422:	std    
11014423:	(bad)  
11014424:	(bad)  
11014425:	(bad)  
11014426:	(bad)  
11014427:	(bad)  
11014428:	(bad)  
11014429:	(bad)  
1101442a:	(bad)  
1101442b:	(bad)  
1101442c:	(bad)  
1101442d:	(bad)  
1101442e:	(bad)  
1101442f:	(bad)  
11014430:	(bad)  
11014431:	(bad)  
11014432:	std    
11014433:	(bad)  
11014434:	(bad)  
11014435:	(bad)  
11014436:	(bad)  
11014437:	(bad)  
11014438:	std    
11014439:	stc    
1101443a:	idiv   edi
1101443c:	cmc    
1101443d:	rol    ebx,1
1101443f:	(bad)  
11014440:	jmp    0x110143ed
11014442:	xchg   ebx,eax
11014443:	jmp    ebx
11014445:	lea    ebp,[ebp-0x1]
11014448:	fdiv   QWORD PTR [edi+0x53]
1101444b:	call   edi
1101444d:	imul   eax,DWORD PTR [edi+edi*8-0x2b],0x68
11014452:	inc    edx
11014453:	call   edi
11014455:	jo     0x110144a4
11014457:	(bad)  
11014458:	fild   DWORD PTR [edx-0x5f1c009b]
1101445e:	mov    bh,bh
11014460:	out    dx,eax
11014461:	retf   0xffbe
11014464:	cld    
11014465:	clc    
11014466:	idiv   edi
11014468:	(bad)  
11014469:	(bad)  
1101446a:	(bad)  
1101446b:	(bad)  
1101446c:	std    
1101446d:	std    
1101446e:	std    
1101446f:	(bad)  
11014470:	(bad)  
11014471:	(bad)  
11014472:	(bad)  
11014473:	(bad)  
11014474:	(bad)  
11014475:	(bad)  
11014476:	std    
11014477:	(bad)  
11014478:	std    
11014479:	std    
1101447a:	std    
1101447b:	(bad)  
1101447c:	(bad)  
1101447d:	(bad)  
1101447e:	(bad)  
1101447f:	(bad)  
11014480:	jmp    0x1101446d
11014482:	jmp    0x11014483
11014484:	xor    DWORD PTR [ecx],esi
11014486:	xor    edi,edi
11014488:	add    BYTE PTR [eax],al
1101448a:	add    bh,bh
1101448c:	push   es
1101448d:	add    eax,DWORD PTR [edx]
1101448f:	jmp    FWORD PTR [edi]
11014491:	sbb    dl,BYTE PTR [ecx]
11014493:	dec    DWORD PTR [edi+0x2c]
11014496:	sbb    eax,0x293f70ff
1101449b:	call   DWORD PTR [edx-0x4e00c9ae]
110144a1:	fs inc edx
110144a3:	dec    ebx
110144a5:	jb     0x110144f2
110144a7:	inc    DWORD PTR [eax]
110144a9:	add    BYTE PTR [eax],al
110144ab:	inc    DWORD PTR [eax]
110144ad:	add    BYTE PTR [eax],al
110144af:	inc    DWORD PTR [eax]
110144b1:	add    BYTE PTR [eax],al
110144b3:	mov    BYTE PTR [eax],0x0
110144b6:	add    BYTE PTR [ecx+0x66000000],bl
110144bc:	add    BYTE PTR [eax],al
110144be:	add    BYTE PTR [edx],bh
110144c0:	add    BYTE PTR [eax],al
110144c2:	add    BYTE PTR [ebx],bl
110144c4:	add    BYTE PTR [eax],al
110144c6:	add    BYTE PTR [edx],cl
110144c8:	add    BYTE PTR [eax],al
110144ca:	add    BYTE PTR [edx],al
	...
110144e4:	add    BYTE PTR [eax],al
110144e6:	add    BYTE PTR [eax+eax*1],al
110144e9:	add    BYTE PTR [eax],al
110144eb:	sldt   WORD PTR [eax]
110144ee:	add    BYTE PTR [esi],ah
110144f0:	add    BYTE PTR [eax],al
110144f2:	add    bh,bh
110144f4:	add    BYTE PTR [eax],al
110144f6:	add    bh,bh
110144f8:	mov    cl,0x64
110144fa:	inc    ecx
110144fb:	call   DWORD PTR [edx+0x70ff3652]
11014501:	aas    
11014502:	sub    edi,edi
11014504:	dec    edi
11014505:	sub    al,0x1d
11014507:	push   DWORD PTR [eax]
11014509:	sbb    edx,DWORD PTR [ecx]
1101450b:	inc    DWORD PTR [esi]
1101450d:	add    eax,DWORD PTR [edx]
1101450f:	inc    DWORD PTR [eax]
11014511:	add    BYTE PTR [eax],al
11014513:	push   DWORD PTR ds:0xecff3435
11014519:	in     al,dx
1101451a:	in     al,dx
1101451b:	(bad)  
1101451c:	(bad)  
1101451d:	(bad)  
1101451e:	std    
1101451f:	(bad)  
11014520:	std    
11014521:	std    
11014522:	std    
11014523:	(bad)  
11014524:	(bad)  
11014525:	(bad)  
11014526:	(bad)  
11014527:	(bad)  
11014528:	(bad)  
11014529:	(bad)  
1101452a:	std    
1101452b:	(bad)  
1101452c:	(bad)  
1101452d:	(bad)  
1101452e:	std    
1101452f:	(bad)  
11014530:	sti    
11014531:	in     eax,dx
11014532:	call   0xa7b13536
11014537:	jmp    ebx
11014539:	jns    0x1101458b
1101453b:	(bad)  
1101453c:	fisubr WORD PTR [edi+0x44]
1101453f:	(bad)  
11014540:	fsubr  QWORD PTR [edx+eax*2-0x1]
11014544:	fisubr DWORD PTR [edx+0x41]
11014547:	(bad)  
11014548:	fldenv [edi+0x3e]
1101454b:	call   esi
1101454d:	gs cmp al,0xff
11014550:	aam    0x62
11014552:	cmp    bh,bh
11014554:	rcr    DWORD PTR [edi+0x38],cl
11014557:	call   eax
11014559:	pop    esp
1101455a:	ss dec esi
1101455d:	pop    edx
1101455e:	xor    al,0xff
11014560:	int3   
11014561:	pop    eax
11014562:	xor    edi,edi
11014564:	into   
11014565:	pop    esi
11014566:	cmp    bh,bh
11014568:	loopne 0x11014505
1101456a:	xchg   bh,bh
1101456c:	imul   ecx
1101456e:	in     al,0xff
11014570:	std    
11014571:	std    
11014572:	std    
11014573:	(bad)  
11014574:	std    
11014575:	std    
11014576:	std    
11014577:	(bad)  
11014578:	(bad)  
11014579:	(bad)  
1101457a:	std    
1101457b:	(bad)  
1101457c:	(bad)  
1101457d:	(bad)  
1101457e:	std    
1101457f:	(bad)  
11014580:	(bad)  
11014581:	(bad)  
11014582:	(bad)  
11014583:	(bad)  
11014584:	jmp    0x11014571
11014586:	jmp    0x11014587
11014588:	xor    DWORD PTR [ecx],esi
1101458a:	xor    edi,edi
1101458c:	add    BYTE PTR [eax],al
1101458e:	add    bh,bh
11014590:	push   es
11014591:	add    eax,DWORD PTR [edx]
11014593:	jmp    FWORD PTR [edi]
11014595:	sbb    dl,BYTE PTR [ecx]
11014597:	dec    DWORD PTR [edi+0x2c]
1101459a:	sbb    eax,0x293f70ff
1101459f:	call   DWORD PTR [edx-0x4e00c9ae]
110145a5:	fs inc edx
110145a7:	inc    DWORD PTR [eax]
110145a9:	add    BYTE PTR [eax],al
110145ab:	inc    DWORD PTR [eax]
110145ad:	add    BYTE PTR [eax],al
110145af:	inc    DWORD PTR [eax]
110145b1:	add    BYTE PTR [eax],al
110145b3:	mov    DWORD PTR [eax],0x9a0000
110145b9:	add    BYTE PTR [eax],al
110145bb:	add    BYTE PTR [bx+si],al
110145be:	add    BYTE PTR [edx],bh
110145c0:	add    BYTE PTR [eax],al
110145c2:	add    BYTE PTR [ebx],bl
110145c4:	add    BYTE PTR [eax],al
110145c6:	add    BYTE PTR [edx],cl
110145c8:	add    BYTE PTR [eax],al
110145ca:	add    BYTE PTR [edx],al
	...
110145e0:	add    BYTE PTR [eax],al
110145e2:	add    BYTE PTR [ecx],al
110145e4:	add    BYTE PTR [eax],al
110145e6:	add    BYTE PTR [edi],al
110145e8:	add    BYTE PTR [eax],al
110145ea:	add    BYTE PTR [esi],dl
110145ec:	add    BYTE PTR [eax],al
110145ee:	add    BYTE PTR [ecx],dh
110145f0:	add    BYTE PTR [eax],al
110145f2:	add    bh,bh
110145f4:	add    BYTE PTR [eax],al
110145f6:	add    bh,bh
110145f8:	xchg   edx,eax
110145f9:	push   edx
110145fa:	push   DWORD PTR ss:[eax+0x3f]
110145fe:	sub    edi,edi
11014600:	dec    edi
11014601:	sub    al,0x1d
11014603:	push   DWORD PTR [eax]
11014605:	sbb    edx,DWORD PTR [ecx]
11014607:	inc    DWORD PTR [esi]
11014609:	add    eax,DWORD PTR [edx]
1101460b:	inc    DWORD PTR [eax]
1101460d:	add    BYTE PTR [eax],al
1101460f:	push   DWORD PTR [esp+esi*1]
11014612:	xor    al,0xff
11014614:	in     eax,dx
11014615:	in     eax,dx
11014616:	in     al,dx
11014617:	(bad)  
11014618:	(bad)  
11014619:	(bad)  
1101461a:	(bad)  
1101461b:	(bad)  
1101461c:	(bad)  
1101461d:	(bad)  
1101461e:	(bad)  
1101461f:	(bad)  
11014620:	(bad)  
11014621:	(bad)  
11014622:	std    
11014623:	(bad)  
11014624:	(bad)  
11014625:	(bad)  
11014626:	(bad)  
11014627:	(bad)  
11014628:	(bad)  
11014629:	sti    
1101462a:	cli    
1101462b:	push   esp
1101462d:	mov    ebp,0x7ee8ffa5
11014632:	push   ebx
11014633:	jmp    esp
11014635:	ja     0x11014682
11014637:	jmp    ebx
11014639:	jne    0x11014684
1101463b:	jmp    eax
1101463d:	jb     0x11014686
1101463f:	(bad)  
11014640:	fisubr WORD PTR [edi+0x44]
11014643:	(bad)  
11014644:	(bad)  [ebp+0x43]
11014647:	(bad)  
11014648:	fld    TBYTE PTR [edx+0x41]
1101464b:	(bad)  
1101464c:	fsub   DWORD PTR [edi+0x3f]
1101464f:	call   esi
11014651:	gs cmp eax,0x3b63d5ff
11014657:	call   edx
11014659:	pop    edi
1101465a:	cmp    bh,bh
1101465c:	rcr    BYTE PTR [ebp+0x36],1
1101465f:	dec    edi
11014661:	pop    edx
11014662:	xor    al,0xff
11014664:	int    0x58
11014666:	xor    bh,bh
11014668:	retf   0x2f55
1101466b:	dec    ebx
1101466d:	pop    eax
1101466e:	xor    al,0xff
11014670:	jecxz  0x11014618
11014672:	xchg   ebx,eax
11014673:	(bad)  
11014674:	cld    
11014675:	cli    
11014676:	stc    
11014677:	(bad)  
11014678:	(bad)  
11014679:	(bad)  
1101467a:	std    
1101467b:	(bad)  
1101467c:	(bad)  
1101467d:	(bad)  
1101467e:	(bad)  
1101467f:	(bad)  
11014680:	(bad)  
11014681:	(bad)  
11014682:	(bad)  
11014683:	(bad)  
11014684:	(bad)  
11014685:	(bad)  
11014686:	(bad)  
11014687:	(bad)  
11014688:	jmp    0x11014675
1101468a:	jmp    0x1101468b
1101468c:	xor    DWORD PTR [ecx],esi
1101468e:	xor    edi,edi
11014690:	add    BYTE PTR [eax],al
11014692:	add    bh,bh
11014694:	push   es
11014695:	add    eax,DWORD PTR [edx]
11014697:	jmp    FWORD PTR [edi]
11014699:	sbb    dl,BYTE PTR [ecx]
1101469b:	dec    DWORD PTR [edi+0x2c]
1101469e:	sbb    eax,0x293f70ff
110146a3:	call   DWORD PTR [edx+0xff3652]
110146a9:	add    BYTE PTR [eax],al
110146ab:	inc    DWORD PTR [eax]
110146ad:	add    BYTE PTR [eax],al
110146af:	inc    DWORD PTR [eax]
110146b1:	add    BYTE PTR [eax],al
110146b3:	retf   0x0
110146b6:	add    BYTE PTR [ebp+0x69000000],bl
110146bc:	add    BYTE PTR [eax],al
110146be:	add    BYTE PTR [ebx],bh
110146c0:	add    BYTE PTR [eax],al
110146c2:	add    BYTE PTR [ebx],bl
110146c4:	add    BYTE PTR [eax],al
110146c6:	add    BYTE PTR [edx],cl
110146c8:	add    BYTE PTR [eax],al
110146ca:	add    BYTE PTR [edx],al
	...
110146dc:	add    BYTE PTR [eax],al
110146de:	add    BYTE PTR [ecx],al
110146e0:	add    BYTE PTR [eax],al
110146e2:	add    BYTE PTR ds:0xe000000,al
110146e8:	add    BYTE PTR [eax],al
110146ea:	add    BYTE PTR [edx],ah
110146ec:	add    BYTE PTR [eax],al
110146ee:	add    BYTE PTR [ecx+0x0],al
110146f1:	add    BYTE PTR [eax],al
110146f3:	inc    DWORD PTR [eax]
110146f5:	add    BYTE PTR [eax],al
110146f7:	push   DWORD PTR [eax+0x3f]
110146fa:	sub    edi,edi
110146fc:	dec    edi
110146fd:	sub    al,0x1d
110146ff:	push   DWORD PTR [eax]
11014701:	sbb    edx,DWORD PTR [ecx]
11014703:	inc    DWORD PTR [esi]
11014705:	add    eax,DWORD PTR [edx]
11014707:	inc    DWORD PTR [eax]
11014709:	add    BYTE PTR [eax],al
1101470b:	push   DWORD PTR ds:0xecff3435
11014711:	in     al,dx
11014712:	in     al,dx
11014713:	(bad)  
11014714:	(bad)  
11014715:	(bad)  
11014716:	(bad)  
11014717:	(bad)  
11014718:	(bad)  
11014719:	(bad)  
1101471a:	(bad)  
1101471b:	(bad)  
1101471c:	(bad)  
1101471d:	(bad)  
1101471e:	std    
1101471f:	(bad)  
11014720:	(bad)  
11014721:	(bad)  
11014722:	std    
11014723:	(bad)  
11014724:	cld    
11014725:	lock jmp 0xeaff:0x779cf1ff
1101472d:	jg     0x11014780
1101472f:	(bad)  
11014730:	call   0xf80096b1
11014735:	jp     0x11014784
11014737:	jmp    esp
11014739:	js     0x11014787
1101473b:	jmp    edx
1101473d:	jne    0x11014789
1101473f:	jmp    eax
11014741:	jb     0x1101478b
11014743:	(bad)  
11014744:	fbstp  TBYTE PTR [eax+0x46]
11014747:	(bad)  
11014748:	(bad)  [esi+0x44]
1101474b:	(bad)  
1101474c:	fisubr DWORD PTR [ebx+0x41]
1101474f:	(bad)  
11014750:	fsubr  DWORD PTR [eax+0x3f]
11014753:	call   esi
11014755:	gs cmp eax,0x3b62d4ff
1101475b:	call   edx
1101475d:	pop    edi
1101475e:	cmp    edi,edi
11014760:	rcr    BYTE PTR [ebp+0x36],1
11014763:	dec    esi
11014765:	pop    edx
11014766:	xor    al,0xff
11014768:	int3   
11014769:	pop    eax
1101476a:	xor    bh,bh
1101476c:	retf   0x3055
1101476f:	dec    eax
11014771:	push   edx
11014772:	sub    eax,0x5674d3ff
11014777:	push   edi
11014779:	jmp    0x10004763
1101477e:	(bad)  
1101477f:	(bad)  
11014780:	(bad)  
11014781:	(bad)  
11014782:	(bad)  
11014783:	(bad)  
11014784:	(bad)  
11014785:	(bad)  
11014786:	(bad)  
11014787:	(bad)  
11014788:	(bad)  
11014789:	(bad)  
1101478a:	(bad)  
1101478b:	(bad)  
1101478c:	jmp    0x11014779
1101478e:	jmp    0x1101478f
11014790:	xor    DWORD PTR [ecx],esi
11014792:	xor    edi,edi
11014794:	add    BYTE PTR [eax],al
11014796:	add    bh,bh
11014798:	push   es
11014799:	add    eax,DWORD PTR [edx]
1101479b:	push   DWORD PTR [eax]
1101479d:	sbb    dl,BYTE PTR [ecx]
1101479f:	dec    DWORD PTR [edi+0x2d]
110147a2:	sbb    eax,0x293f70ff
110147a7:	inc    DWORD PTR [eax]
110147a9:	add    BYTE PTR [eax],al
110147ab:	inc    DWORD PTR [eax]
110147ad:	add    BYTE PTR [eax],al
110147af:	inc    DWORD PTR [eax]
110147b1:	add    BYTE PTR [eax],al
110147b3:	into   
110147b4:	add    BYTE PTR [eax],al
110147b6:	add    BYTE PTR [edx+0x6d000000],ah
110147bc:	add    BYTE PTR [eax],al
110147be:	add    BYTE PTR ds:0x1c000000,bh
110147c4:	add    BYTE PTR [eax],al
110147c6:	add    BYTE PTR [edx],cl
110147c8:	add    BYTE PTR [eax],al
110147ca:	add    BYTE PTR [edx],al
	...
110147d8:	add    BYTE PTR [eax],al
110147da:	add    BYTE PTR [ecx],al
110147dc:	add    BYTE PTR [eax],al
110147de:	add    BYTE PTR [eax+eax*1],al
110147e1:	add    BYTE PTR [eax],al
110147e3:	or     al,0x0
110147e5:	add    BYTE PTR [eax],al
110147e7:	sbb    eax,DWORD PTR [eax]
110147e9:	add    BYTE PTR [eax],al
110147eb:	xor    eax,DWORD PTR [eax]
110147ed:	add    BYTE PTR [eax],al
110147ef:	pop    ecx
110147f0:	add    BYTE PTR [eax],al
110147f2:	add    bh,bh
110147f4:	add    BYTE PTR [eax],al
110147f6:	add    bh,bh
110147f8:	dec    edi
110147f9:	sub    al,0x1d
110147fb:	push   DWORD PTR [eax]
110147fd:	sbb    edx,DWORD PTR [ecx]
110147ff:	inc    DWORD PTR [esi]
11014801:	add    eax,DWORD PTR [edx]
11014803:	inc    DWORD PTR [eax]
11014805:	add    BYTE PTR [eax],al
11014807:	push   DWORD PTR [esp+esi*1]
1101480a:	xor    al,0xff
1101480c:	in     al,dx
1101480d:	in     al,dx
1101480e:	in     al,dx
1101480f:	(bad)  
11014810:	(bad)  
11014811:	(bad)  
11014812:	(bad)  
11014813:	(bad)  
11014814:	(bad)  
11014815:	(bad)  
11014816:	(bad)  
11014817:	(bad)  
11014818:	(bad)  
11014819:	(bad)  
1101481a:	(bad)  
1101481b:	(bad)  
1101481c:	(bad)  
1101481d:	(bad)  
1101481e:	(bad)  
1101481f:	(bad)  
11014820:	std    
11014821:	in     al,dx
11014822:	in     al,0xff
11014824:	repz xchg esp,eax
11014826:	push   0xffffffff
11014828:	out    dx,al
11014829:	test   BYTE PTR [esi-0x1],dl
1101482c:	in     al,dx
1101482d:	adc    BYTE PTR [edi+edi*8-0x15],0x80
11014832:	push   ebx
11014833:	(bad)  
11014834:	call   0xf80099b6
11014839:	jnp    0x1101488a
1101483b:	jmp    ebp
1101483d:	jns    0x1101488c
1101483f:	jmp    ebx
11014841:	jbe    0x1101488e
11014843:	jmp    ecx
11014845:	jae    0x11014890
11014847:	jmp    eax
11014849:	jno    0x11014892
1101484b:	(bad)  
1101484c:	(bad)  [esi+0x44]
1101484f:	(bad)  
11014850:	fld    TBYTE PTR [ebx+0x42]
11014853:	(bad)  
11014854:	fldcw  WORD PTR [eax+0x40]
11014857:	call   esi
11014859:	cmp    ax,0xd4ff
1101485d:	arpl   WORD PTR [ebx],di
1101485f:	call   edx
11014861:	pop    edi
11014862:	cmp    edi,edi
11014864:	rcr    BYTE PTR [ebp+0x37],1
11014867:	dec    esi
11014869:	pop    edx
1101486a:	xor    al,0xff
1101486c:	int3   
1101486d:	pop    eax
1101486e:	xor    bh,bh
11014870:	retf   0x3055
11014873:	dec    eax
11014875:	push   edx
11014876:	sub    eax,0x4363ceff
1101487b:	push   esi
1101487d:	loop   0x1101485b
1101487f:	(bad)  
11014880:	(bad)  
11014881:	(bad)  
11014882:	(bad)  
11014883:	(bad)  
11014884:	(bad)  
11014885:	(bad)  
11014886:	(bad)  
11014887:	(bad)  
11014888:	(bad)  
11014889:	(bad)  
1101488a:	std    
1101488b:	(bad)  
1101488c:	(bad)  
1101488d:	(bad)  
1101488e:	(bad)  
1101488f:	(bad)  
11014890:	jmp    0x1101487d
11014892:	jmp    0x11014893
11014894:	xor    DWORD PTR [ecx],esi
11014896:	xor    edi,edi
11014898:	add    BYTE PTR [eax],al
1101489a:	add    bh,bh
1101489c:	push   es
1101489d:	add    eax,DWORD PTR [edx]
1101489f:	push   DWORD PTR [eax]
110148a1:	sbb    edx,DWORD PTR [ecx]
110148a3:	call   DWORD PTR [eax+0x2d]
110148a6:	sbb    eax,0xff
110148ab:	inc    DWORD PTR [eax]
110148ad:	add    BYTE PTR [eax],al
110148af:	inc    DWORD PTR [eax]
110148b1:	add    BYTE PTR [eax],al
110148b3:	aam    0x0
110148b5:	add    BYTE PTR [eax],al
110148b7:	test   eax,0x74000000
110148bc:	add    BYTE PTR [eax],al
110148be:	add    BYTE PTR [ebx+0x0],al
110148c1:	add    BYTE PTR [eax],al
110148c3:	pop    ds
110148c4:	add    BYTE PTR [eax],al
110148c6:	add    BYTE PTR [ebx],cl
110148c8:	add    BYTE PTR [eax],al
110148ca:	add    BYTE PTR [ebx],al
	...
110148d4:	add    BYTE PTR [eax],al
110148d6:	add    BYTE PTR [ecx],al
110148d8:	add    BYTE PTR [eax],al
110148da:	add    BYTE PTR [eax+eax*1],al
110148dd:	add    BYTE PTR [eax],al
110148df:	or     al,0x0
110148e1:	add    BYTE PTR [eax],al
110148e3:	sbb    BYTE PTR [eax],al
110148e5:	add    BYTE PTR [eax],al
110148e7:	sub    eax,0x4c000000
110148ec:	add    BYTE PTR [eax],al
110148ee:	add    BYTE PTR [esi+0x0],dh
110148f1:	add    BYTE PTR [eax],al
110148f3:	inc    DWORD PTR [eax]
110148f5:	add    BYTE PTR [eax],al
110148f7:	push   DWORD PTR [eax]
110148f9:	sbb    edx,DWORD PTR [ecx]
110148fb:	inc    DWORD PTR [esi]
110148fd:	add    eax,DWORD PTR [edx]
110148ff:	inc    DWORD PTR [eax]
11014901:	add    BYTE PTR [eax],al
11014903:	push   DWORD PTR ds:0xecff3435
11014909:	in     al,dx
1101490a:	in     al,dx
1101490b:	(bad)  
1101490c:	std    
1101490d:	std    
1101490e:	std    
1101490f:	(bad)  
11014910:	(bad)  
11014911:	(bad)  
11014912:	std    
11014913:	(bad)  
11014914:	(bad)  
11014915:	(bad)  
11014916:	std    
11014917:	(bad)  
11014918:	(bad)  
11014919:	(bad)  
1101491a:	std    
1101491b:	(bad)  
1101491c:	std    
1101491d:	lock jmp 0xf2ff:0x6e98f5ff
11014925:	mov    bl,BYTE PTR [ebx-0x1]
11014928:	lock mov BYTE PTR [ecx-0x1],bl
1101492c:	out    dx,al
1101492d:	test   DWORD PTR [edi-0x1],edx
11014930:	in     eax,dx
11014931:	adc    DWORD PTR [esi-0x1],0xffffffeb
11014935:	adc    DWORD PTR [edi+edi*8-0x17],0xe7ff527e
1101493d:	jl     0x1101498f
1101493f:	jmp    ebp
11014941:	jns    0x11014991
11014943:	jmp    ebx
11014945:	ja     0x11014993
11014947:	jmp    edx
11014949:	je     0x11014995
1101494b:	(bad)  
1101494c:	fbstp  TBYTE PTR [ecx+0x47]
1101494f:	(bad)  
11014950:	fisubr WORD PTR [esi+0x45]
11014953:	(bad)  
11014954:	fsubr  QWORD PTR [ebx+0x43]
11014957:	(bad)  
11014958:	fldcw  WORD PTR [eax+0x40]
1101495b:	call   edi
1101495d:	cmp    ax,0xd4ff
11014961:	arpl   WORD PTR [ebx],di
11014963:	call   ebx
11014965:	pusha  
11014966:	cmp    edi,edi
11014968:	rcr    BYTE PTR [ebp+0x37],1
1101496b:	dec    edi
1101496d:	pop    ebx
1101496e:	xor    eax,0x3258ccff
11014973:	dec    edx
11014975:	push   ebp
11014976:	xor    bh,bh
11014978:	leave  
11014979:	push   edx
1101497a:	cs dec esi
1101497d:	arpl   WORD PTR [ebx-0x1],ax
11014980:	imul   ecx
11014982:	in     eax,0xff
11014984:	(bad)  
11014985:	(bad)  
11014986:	std    
11014987:	(bad)  
11014988:	(bad)  
11014989:	(bad)  
1101498a:	std    
1101498b:	(bad)  
1101498c:	(bad)  
1101498d:	(bad)  
1101498e:	std    
1101498f:	(bad)  
11014990:	(bad)  
11014991:	(bad)  
11014992:	std    
11014993:	(bad)  
11014994:	jmp    0x11014981
11014996:	jmp    0x11014997
11014998:	xor    DWORD PTR [ecx],esi
1101499a:	xor    edi,edi
1101499c:	add    BYTE PTR [eax],al
1101499e:	add    bh,bh
110149a0:	push   es
110149a1:	add    eax,DWORD PTR [edx]
110149a3:	push   DWORD PTR [eax]
110149a5:	sbb    edx,DWORD PTR [ecx]
110149a7:	inc    DWORD PTR [eax]
110149a9:	add    BYTE PTR [eax],al
110149ab:	inc    DWORD PTR [eax]
110149ad:	add    BYTE PTR [eax],al
110149af:	inc    DWORD PTR [eax]
110149b1:	add    BYTE PTR [eax],al
110149b3:	fadd   QWORD PTR [eax]
110149b5:	add    BYTE PTR [eax],al
110149b7:	mov    ah,0x0
110149b9:	add    BYTE PTR [eax],al
110149bb:	jg     0x110149bd
110149bd:	add    BYTE PTR [eax],al
110149bf:	dec    esp
110149c0:	add    BYTE PTR [eax],al
110149c2:	add    BYTE PTR ds:0xe000000,ah
110149c8:	add    BYTE PTR [eax],al
110149ca:	add    BYTE PTR [eax+eax*1],al
110149cd:	add    BYTE PTR [eax],al
110149cf:	add    BYTE PTR [eax],al
110149d1:	add    BYTE PTR [eax],al
110149d3:	add    DWORD PTR [eax],eax
110149d5:	add    BYTE PTR [eax],al
110149d7:	add    al,0x0
110149d9:	add    BYTE PTR [eax],al
110149db:	or     eax,DWORD PTR [eax]
110149dd:	add    BYTE PTR [eax],al
110149df:	sbb    BYTE PTR [eax],al
110149e1:	add    BYTE PTR [eax],al
110149e3:	sub    eax,DWORD PTR [eax]
110149e5:	add    BYTE PTR [eax],al
110149e7:	inc    edi
110149e8:	add    BYTE PTR [eax],al
110149ea:	add    BYTE PTR [ebx+0x0],ch
110149ed:	add    BYTE PTR [eax],al
110149ef:	xchg   ebp,eax
110149f0:	add    BYTE PTR [eax],al
110149f2:	add    bh,bh
110149f4:	add    BYTE PTR [eax],al
110149f6:	add    bh,bh
110149f8:	push   es
110149f9:	add    eax,DWORD PTR [edx]
110149fb:	inc    DWORD PTR [eax]
110149fd:	add    BYTE PTR [eax],al
110149ff:	push   DWORD PTR [esp+esi*1]
11014a02:	xor    al,0xff
11014a04:	in     al,dx
11014a05:	in     al,dx
11014a06:	in     al,dx
11014a07:	(bad)  
11014a08:	(bad)  
11014a09:	(bad)  
11014a0a:	(bad)  
11014a0b:	(bad)  
11014a0c:	(bad)  
11014a0d:	(bad)  
11014a0e:	(bad)  
11014a0f:	(bad)  
11014a10:	(bad)  
11014a11:	(bad)  
11014a12:	std    
11014a13:	(bad)  
11014a14:	(bad)  
11014a15:	(bad)  
11014a16:	std    
11014a17:	(bad)  
11014a18:	std    
11014a19:	sti    
11014a1a:	cli    
11014a1b:	push   esi
11014a1d:	mov    ds:0x8bf3ff7e,eax
11014a22:	pop    esp
11014a23:	push   ebx
11014a25:	mov    ebx,DWORD PTR [edi+edi*8-0xe]
11014a29:	mov    ebx,DWORD PTR [ebp-0x1]
11014a2c:	lock mov DWORD PTR [ebx-0x1],ebx
11014a30:	out    dx,eax
11014a31:	xchg   DWORD PTR [edx-0x1],ebx
11014a34:	in     eax,dx
11014a35:	test   BYTE PTR [edi-0x1],dl
11014a38:	jmp    0x110149bc
11014a3a:	push   ebp
11014a3b:	(bad)  
11014a3c:	jmp    0xf9009dc0
11014a41:	jge    0x11014a94
11014a43:	jmp    ebp
11014a45:	jp     0x11014a96
11014a47:	jmp    esp
11014a49:	js     0x11014a98
11014a4b:	jmp    ecx
11014a4d:	je     0x11014a98
11014a4f:	(bad)  
11014a50:	fbstp  TBYTE PTR [ecx+0x47]
11014a53:	(bad)  
11014a54:	(bad)  [edi+0x45]
11014a57:	(bad)  
11014a58:	fld    TBYTE PTR [ebx+eax*2-0x1]
11014a5c:	fldcw  WORD PTR [eax+0x40]
11014a5f:	call   edi
11014a61:	gs notrack call ebp
11014a65:	arpl   WORD PTR [ebx],di
11014a67:	call   ebx
11014a69:	pusha  
11014a6a:	cmp    edi,edi
11014a6c:	rcr    DWORD PTR [ebp+0x37],1
11014a6f:	dec    esi
11014a71:	pop    edx
11014a72:	xor    eax,0x3258ccff
11014a77:	dec    edx
11014a79:	push   ebp
11014a7a:	xor    bh,bh
11014a7c:	enter  0x2d52,0xff
11014a80:	shl    DWORD PTR [esi+edx*2-0x1],cl
11014a84:	cld    
11014a85:	cli    
11014a86:	stc    
11014a87:	(bad)  
11014a88:	std    
11014a89:	std    
11014a8a:	std    
11014a8b:	(bad)  
11014a8c:	(bad)  
11014a8d:	(bad)  
11014a8e:	std    
11014a8f:	(bad)  
11014a90:	std    
11014a91:	std    
11014a92:	std    
11014a93:	(bad)  
11014a94:	std    
11014a95:	std    
11014a96:	std    
11014a97:	(bad)  
11014a98:	jmp    0x11014a85
11014a9a:	jmp    0x11014a9b
11014a9c:	xor    DWORD PTR [ecx],esi
11014a9e:	xor    edi,edi
11014aa0:	add    BYTE PTR [eax],al
11014aa2:	add    bh,bh
11014aa4:	push   es
11014aa5:	add    eax,DWORD PTR [edx]
11014aa7:	inc    DWORD PTR [eax]
11014aa9:	add    BYTE PTR [eax],al
11014aab:	inc    DWORD PTR [eax]
11014aad:	add    BYTE PTR [eax],al
11014aaf:	inc    DWORD PTR [eax]
11014ab1:	add    BYTE PTR [eax],al
11014ab3:	in     al,0x0
11014ab5:	add    BYTE PTR [eax],al
11014ab7:	rol    DWORD PTR [eax],0x0
11014aba:	add    BYTE PTR [edi+0x5b000000],cl
11014ac0:	add    BYTE PTR [eax],al
11014ac2:	add    BYTE PTR [eax],dh
11014ac4:	add    BYTE PTR [eax],al
11014ac6:	add    BYTE PTR ds:0x7000000,dl
11014acc:	add    BYTE PTR [eax],al
11014ace:	add    BYTE PTR [ecx],al
11014ad0:	add    BYTE PTR [eax],al
11014ad2:	add    BYTE PTR [eax+eax*1],al
11014ad5:	add    BYTE PTR [eax],al
11014ad7:	or     eax,DWORD PTR [eax]
11014ad9:	add    BYTE PTR [eax],al
11014adb:	sbb    BYTE PTR [eax],al
11014add:	add    BYTE PTR [eax],al
11014adf:	sub    eax,DWORD PTR [eax]
11014ae1:	add    BYTE PTR [eax],al
11014ae3:	inc    ebp
11014ae4:	add    BYTE PTR [eax],al
11014ae6:	add    BYTE PTR [edi+0x0],ah
11014ae9:	add    BYTE PTR [eax],al
11014aeb:	lea    eax,[eax]
11014aed:	add    BYTE PTR [eax],al
11014aef:	mov    ah,0x0
11014af1:	add    BYTE PTR [eax],al
11014af3:	inc    DWORD PTR [eax]
11014af5:	add    BYTE PTR [eax],al
11014af7:	inc    DWORD PTR [eax]
11014af9:	add    BYTE PTR [eax],al
11014afb:	push   DWORD PTR [esp+esi*1]
11014afe:	xor    al,0xff
11014b00:	in     al,dx
11014b01:	in     al,dx
11014b02:	in     al,dx
11014b03:	(bad)  
11014b04:	(bad)  
11014b05:	(bad)  
11014b06:	(bad)  
11014b07:	(bad)  
11014b08:	(bad)  
11014b09:	(bad)  
11014b0a:	(bad)  
11014b0b:	(bad)  
11014b0c:	(bad)  
11014b0d:	(bad)  
11014b0e:	(bad)  
11014b0f:	(bad)  
11014b10:	(bad)  
11014b11:	(bad)  
11014b12:	std    
11014b13:	(bad)  
11014b14:	(bad)  
11014b15:	(bad)  
11014b16:	(bad)  
11014b17:	(bad)  
11014b18:	stc    
11014b19:	les    ebp,FWORD PTR [edi+edi*8-0xa2740e]
11014b20:	repz mov WORD PTR [esi-0x1],ds
11014b24:	repz lea ebx,[esi-0x1]
11014b28:	repz lea ebx,[edi-0x1]
11014b2c:	repz lea ebx,[edi-0x1]
11014b30:	icebp  
11014b31:	mov    ebx,DWORD PTR [esi-0x1]
11014b34:	out    dx,eax
11014b35:	mov    BYTE PTR [ebx-0x1],bl
11014b38:	in     eax,dx
11014b39:	xchg   BYTE PTR [ecx-0x1],bl
11014b3c:	jmp    0x11014ac1
11014b3e:	push   edi
11014b3f:	(bad)  
11014b40:	jmp    0xf900a0c5
11014b45:	jge    0x11014b99
11014b47:	jmp    esi
11014b49:	jnp    0x11014b9b
11014b4b:	jmp    ebx
11014b4d:	js     0x11014b9c
11014b4f:	jmp    ecx
11014b51:	je     0x11014b9e
11014b53:	jmp    eax
11014b55:	jno    0x11014b9f
11014b57:	(bad)  
11014b58:	(bad)  [edi+0x45]
11014b5b:	(bad)  
11014b5c:	fld    TBYTE PTR [ebx+eax*2-0x1]
11014b60:	fldcw  WORD PTR [eax+0x40]
11014b63:	call   edi
11014b65:	notrack call bp
11014b69:	arpl   WORD PTR [ebx],di
11014b6b:	call   ebx
11014b6d:	pusha  
11014b6e:	cmp    edi,edi
11014b70:	rcr    DWORD PTR [ebp+0x37],1
11014b73:	dec    esi
11014b75:	pop    edx
11014b76:	xor    eax,0x3258cdff
11014b7b:	dec    edx
11014b7d:	push   ebp
11014b7e:	xor    bh,bh
11014b80:	enter  0x2d52,0xff
11014b84:	jecxz  0x11014b2c
11014b86:	xchg   ebx,eax
11014b87:	(bad)  
11014b88:	(bad)  
11014b89:	(bad)  
11014b8a:	std    
11014b8b:	(bad)  
11014b8c:	(bad)  
11014b8d:	(bad)  
11014b8e:	(bad)  
11014b8f:	(bad)  
11014b90:	(bad)  
11014b91:	(bad)  
11014b92:	std    
11014b93:	(bad)  
11014b94:	std    
11014b95:	std    
11014b96:	std    
11014b97:	(bad)  
11014b98:	(bad)  
11014b99:	(bad)  
11014b9a:	(bad)  
11014b9b:	(bad)  
11014b9c:	jmp    0x11014b89
11014b9e:	jmp    0x11014b9f
11014ba0:	xor    DWORD PTR [ecx],esi
11014ba2:	xor    edi,edi
11014ba4:	add    BYTE PTR [eax],al
11014ba6:	add    bh,bh
11014ba8:	add    BYTE PTR [eax],al
11014baa:	add    bh,bh
11014bac:	add    BYTE PTR [eax],al
11014bae:	add    bh,bh
11014bb0:	add    BYTE PTR [eax],al
11014bb2:	add    bl,ch
11014bb4:	add    BYTE PTR [eax],al
11014bb6:	add    bh,cl
11014bb8:	add    BYTE PTR [eax],al
11014bba:	add    BYTE PTR [edx+0x6f000000],ah
11014bc0:	add    BYTE PTR [eax],al
11014bc2:	add    BYTE PTR [ecx+0x0],al
11014bc5:	add    BYTE PTR [eax],al
11014bc7:	and    DWORD PTR [eax],eax
11014bc9:	add    BYTE PTR [eax],al
11014bcb:	push   cs
11014bcc:	add    BYTE PTR [eax],al
11014bce:	add    BYTE PTR [eax+eax*1],al
11014bd1:	add    BYTE PTR [eax],al
11014bd3:	or     eax,DWORD PTR [eax]
11014bd5:	add    BYTE PTR [eax],al
11014bd7:	sbb    BYTE PTR [eax],al
11014bd9:	add    BYTE PTR [eax],al
11014bdb:	sub    eax,DWORD PTR [eax]
11014bdd:	add    BYTE PTR [eax],al
11014bdf:	inc    ebp
11014be0:	add    BYTE PTR [eax],al
11014be2:	add    BYTE PTR [esi+0x0],ah
11014be5:	add    BYTE PTR [eax],al
11014be7:	mov    eax,DWORD PTR [eax]
11014be9:	add    BYTE PTR [eax],al
11014beb:	scas   eax,DWORD PTR es:[edi]
11014bec:	add    BYTE PTR [eax],al
11014bee:	add    dl,dl
11014bf0:	add    BYTE PTR [eax],al
11014bf2:	add    bh,bh
11014bf4:	add    BYTE PTR [eax],al
11014bf6:	add    bh,bh
11014bf8:	xor    al,0x34
11014bfa:	xor    al,0xff
11014bfc:	in     al,dx
11014bfd:	in     al,dx
11014bfe:	in     al,dx
11014bff:	(bad)  
11014c00:	std    
11014c01:	std    
11014c02:	std    
11014c03:	(bad)  
11014c04:	std    
11014c05:	std    
11014c06:	std    
11014c07:	(bad)  
11014c08:	(bad)  
11014c09:	(bad)  
11014c0a:	std    
11014c0b:	(bad)  
11014c0c:	std    
11014c0d:	std    
11014c0e:	std    
11014c0f:	(bad)  
11014c10:	(bad)  
11014c11:	(bad)  
11014c12:	std    
11014c13:	(bad)  
11014c14:	std    
11014c15:	lock jmp 0xf3ff:0x6390f5ff
11014c1d:	lea    ebx,[edi-0x1]
11014c20:	hlt    
11014c21:	mov    fs,WORD PTR [eax-0x1]
11014c24:	hlt    
11014c25:	(bad)  
11014c26:	popa   
11014c27:	push   esp
11014c29:	(bad)  
11014c2a:	(bad)  
11014c2b:	push   esp
11014c2d:	(bad)  
11014c2e:	(bad)  
11014c2f:	push   esp
11014c31:	(bad)  
11014c32:	(bad)  
11014c33:	push   ecx
11014c35:	mov    WORD PTR [eax-0x1],fs
11014c38:	out    dx,eax
11014c39:	mov    bl,BYTE PTR [ebp-0x1]
11014c3c:	out    dx,al
11014c3d:	xchg   DWORD PTR [ebx-0x1],ebx
11014c40:	in     al,dx
11014c41:	test   BYTE PTR [ecx-0x1],bl
11014c44:	jmp    0x547f:0xe8ff5681
11014c4b:	jmp    esi
11014c4d:	jnp    0x11014c9f
11014c4f:	jmp    esp
11014c51:	js     0x11014ca1
11014c53:	jmp    edx
11014c55:	jne    0x11014ca2
11014c57:	jmp    eax
11014c59:	jb     0x11014ca3
11014c5b:	(bad)  
11014c5c:	(bad)  [edi+0x46]
11014c5f:	(bad)  
11014c60:	fsubr  QWORD PTR [esp+eax*2-0x1]
11014c64:	fisubr DWORD PTR [ecx+0x41]
11014c67:	call   edi
11014c69:	notrack call bp
11014c6d:	fs cmp al,0xff
11014c70:	aam    0x61
11014c72:	cmp    edi,edi
11014c74:	rcr    DWORD PTR [ebp+0x37],1
11014c77:	dec    edi
11014c79:	pop    ebx
11014c7a:	xor    eax,0x3258cdff
11014c7f:	dec    ebx
11014c81:	push   ebp
11014c82:	xor    bh,bh
11014c84:	retf   
11014c85:	pop    eax
11014c86:	xor    al,0xff
11014c88:	imul   eax
11014c8a:	jecxz  0x11014c8b
11014c8c:	(bad)  
11014c8d:	(bad)  
11014c8e:	std    
11014c8f:	(bad)  
11014c90:	std    
11014c91:	std    
11014c92:	std    
11014c93:	(bad)  
11014c94:	std    
11014c95:	std    
11014c96:	std    
11014c97:	(bad)  
11014c98:	std    
11014c99:	std    
11014c9a:	std    
11014c9b:	(bad)  
11014c9c:	std    
11014c9d:	std    
11014c9e:	std    
11014c9f:	(bad)  
11014ca0:	jmp    0x11014c8d
11014ca2:	jmp    0x11014ca3
11014ca4:	xor    DWORD PTR [ecx],esi
11014ca6:	xor    edi,edi
11014ca8:	add    BYTE PTR [eax],al
11014caa:	add    bh,bh
11014cac:	add    BYTE PTR [eax],al
11014cae:	add    bh,bh
11014cb0:	add    BYTE PTR [eax],al
11014cb2:	add    bl,dh
11014cb4:	add    BYTE PTR [eax],al
11014cb6:	add    ch,bl
11014cb8:	add    BYTE PTR [eax],al
11014cba:	add    BYTE PTR [eax-0x78000000],bh
11014cc0:	add    BYTE PTR [eax],al
11014cc2:	add    BYTE PTR [ecx+0x0],bl
11014cc5:	add    BYTE PTR [eax],al
11014cc7:	xor    eax,DWORD PTR [eax]
11014cc9:	add    BYTE PTR [eax],al
11014ccb:	sbb    al,BYTE PTR [eax]
11014ccd:	add    BYTE PTR [eax],al
11014ccf:	or     eax,DWORD PTR [eax]
11014cd1:	add    BYTE PTR [eax],al
11014cd3:	push   ss
11014cd4:	add    BYTE PTR [eax],al
11014cd6:	add    BYTE PTR [ecx],ch
11014cd8:	add    BYTE PTR [eax],al
11014cda:	add    BYTE PTR [eax+eax*1+0x0],al
11014cde:	add    BYTE PTR [ebp+0x0],ah
11014ce1:	add    BYTE PTR [eax],al
11014ce3:	mov    DWORD PTR [eax],eax
11014ce5:	add    BYTE PTR [eax],al
11014ce7:	lods   al,BYTE PTR ds:[esi]
11014ce8:	add    BYTE PTR [eax],al
11014cea:	add    dh,cl
11014cec:	add    BYTE PTR [eax],al
11014cee:	add    al,bh
11014cf0:	add    BYTE PTR [eax],al
11014cf2:	add    bh,bh
11014cf4:	xor    al,0x34
11014cf6:	xor    al,0xff
11014cf8:	in     al,dx
11014cf9:	in     al,dx
11014cfa:	in     al,dx
11014cfb:	(bad)  
11014cfc:	(bad)  
11014cfd:	(bad)  
11014cfe:	(bad)  
11014cff:	(bad)  
11014d00:	(bad)  
11014d01:	(bad)  
11014d02:	(bad)  
11014d03:	(bad)  
11014d04:	std    
11014d05:	std    
11014d06:	std    
11014d07:	(bad)  
11014d08:	(bad)  
11014d09:	(bad)  
11014d0a:	std    
11014d0b:	(bad)  
11014d0c:	std    
11014d0d:	std    
11014d0e:	std    
11014d0f:	(bad)  
11014d10:	(bad)  
11014d11:	(bad)  
11014d12:	(bad)  
11014d13:	(bad)  
11014d14:	stc    
11014d15:	mov    ebp,0x8ef4ffa2
11014d1a:	pop    edi
11014d1b:	push   ebx
11014d1d:	mov    fs,WORD PTR [eax-0x1]
11014d20:	hlt    
11014d21:	(bad)  
11014d22:	(bad)  
11014d23:	push   esp
11014d25:	nop
11014d26:	arpl   di,di
11014d28:	hlt    
11014d29:	xchg   ecx,eax
11014d2a:	fs push esp
11014d2d:	xchg   ecx,eax
11014d2e:	gs push esp
11014d31:	xchg   ecx,eax
11014d32:	gs push ebx
11014d35:	nop
11014d36:	fs push ecx
11014d39:	mov    fs,WORD PTR [edx-0x1]
11014d3c:	out    dx,eax
11014d3d:	mov    ebx,DWORD PTR [edi-0x1]
11014d40:	in     eax,dx
11014d41:	mov    BYTE PTR [edi+edi*8-0x14],bl
11014d45:	test   DWORD PTR [edx-0x1],ebx
11014d48:	jmp    0x547f:0xe7ff5782
11014d4f:	jmp    esi
11014d51:	jl     0x11014da4
11014d53:	jmp    esp
11014d55:	jns    0x11014da5
11014d57:	jmp    ecx
11014d59:	jne    0x11014da6
11014d5b:	(bad)  
11014d5c:	fbstp  TBYTE PTR [edx+0x48]
11014d5f:	(bad)  
11014d60:	(bad)  [edi+0x46]
11014d63:	(bad)  
11014d64:	fld    TBYTE PTR [ebx+eax*2-0x1]
11014d68:	fldcw  WORD PTR [ecx+0x41]
11014d6b:	call   edi
11014d6d:	notrack call bp
11014d71:	fs cmp edi,edi
11014d74:	shl    DWORD PTR [eax+0x39],cl
11014d77:	call   eax
11014d79:	pop    ebp
11014d7a:	aaa    
11014d7b:	dec    esi
11014d7d:	pop    edx
11014d7e:	xor    al,0xff
11014d80:	int3   
11014d81:	pop    eax
11014d82:	xor    bh,bh
11014d84:	retf   0x2f55
11014d87:	jmp    eax
11014d89:	fwait
11014d8a:	xchg   bh,bh
11014d8c:	(bad)  
11014d8d:	(bad)  
11014d8e:	(bad)  
11014d8f:	(bad)  
11014d90:	(bad)  
11014d91:	(bad)  
11014d92:	(bad)  
11014d93:	(bad)  
11014d94:	std    
11014d95:	std    
11014d96:	std    
11014d97:	(bad)  
11014d98:	(bad)  
11014d99:	(bad)  
11014d9a:	std    
11014d9b:	(bad)  
11014d9c:	(bad)  
11014d9d:	(bad)  
11014d9e:	(bad)  
11014d9f:	(bad)  
11014da0:	(bad)  
11014da1:	(bad)  
11014da2:	std    
11014da3:	(bad)  
11014da4:	jmp    0x11014d91
11014da6:	jmp    0x11014da7
11014da8:	xor    DWORD PTR [ecx],esi
11014daa:	xor    edi,edi
11014dac:	add    BYTE PTR [eax],al
11014dae:	add    bh,bh
11014db0:	add    BYTE PTR [eax],al
11014db2:	add    ch,bh
11014db4:	add    BYTE PTR [eax],al
11014db6:	add    dl,ch
11014db8:	add    BYTE PTR [eax],al
11014dba:	add    ah,cl
11014dbc:	add    BYTE PTR [eax],al
11014dbe:	add    BYTE PTR [ebx+0x75000000],ah
11014dc4:	add    BYTE PTR [eax],al
11014dc6:	add    BYTE PTR [ebx+0x0],cl
11014dc9:	add    BYTE PTR [eax],al
11014dcb:	sub    eax,DWORD PTR [eax]
11014dcd:	add    BYTE PTR [eax],al
11014dcf:	push   ss
11014dd0:	add    BYTE PTR [eax],al
11014dd2:	add    BYTE PTR [ebx],ah
11014dd4:	add    BYTE PTR [eax],al
11014dd6:	add    BYTE PTR [esi],bh
11014dd8:	add    BYTE PTR [eax],al
11014dda:	add    BYTE PTR [eax+0x0],ah
11014ddd:	add    BYTE PTR [eax],al
11014ddf:	xchg   BYTE PTR [eax],al
11014de1:	add    BYTE PTR [eax],al
11014de3:	stos   BYTE PTR es:[edi],al
11014de4:	add    BYTE PTR [eax],al
11014de6:	add    ch,cl
11014de8:	add    BYTE PTR [eax],al
11014dea:	add    al,bh
11014dec:	add    BYTE PTR [eax],al
11014dee:	add    bh,bh
11014df0:	xor    al,0x34
11014df2:	xor    al,0xff
11014df4:	in     al,dx
11014df5:	in     al,dx
11014df6:	in     al,dx
11014df7:	(bad)  
11014df8:	(bad)  
11014df9:	(bad)  
11014dfa:	(bad)  
11014dfb:	(bad)  
11014dfc:	(bad)  
11014dfd:	(bad)  
11014dfe:	(bad)  
11014dff:	(bad)  
11014e00:	(bad)  
11014e01:	(bad)  
11014e02:	(bad)  
11014e03:	(bad)  
11014e04:	(bad)  
11014e05:	(bad)  
11014e06:	(bad)  
11014e07:	(bad)  
11014e08:	(bad)  
11014e09:	(bad)  
11014e0a:	(bad)  
11014e0b:	(bad)  
11014e0c:	(bad)  
11014e0d:	(bad)  
11014e0e:	(bad)  
11014e0f:	(bad)  
11014e10:	(bad)  
11014e11:	cli    
11014e12:	clc    
11014e13:	push   esp
11014e15:	xchg   esp,eax
11014e16:	push   0x618ff4ff
11014e1b:	push   esp
11014e1d:	nop
11014e1e:	arpl   di,di
11014e20:	hlt    
11014e21:	xchg   edx,eax
11014e22:	gs push ebx
11014e25:	xchg   edx,eax
11014e26:	push   sp
11014e29:	xchg   ebx,eax
11014e2a:	addr16 push esp
11014e2d:	xchg   ebx,eax
11014e2e:	push   0x6894f4ff
11014e33:	push   esp
11014e35:	xchg   ebx,eax
11014e36:	addr16 push esp
11014e39:	xchg   edx,eax
11014e3a:	addr16 push ecx
11014e3d:	(bad)  
11014e3e:	fs (bad) 
11014e40:	out    dx,eax
11014e41:	mov    WORD PTR [eax-0x1],fs
11014e44:	in     eax,dx
11014e45:	mov    DWORD PTR [esi-0x1],ebx
11014e48:	in     al,dx
11014e49:	xchg   BYTE PTR [ebx-0x1],bl
11014e4c:	jmp    0xfa00a5d3
11014e51:	jg     0x11014ea7
11014e53:	jmp    ebp
11014e55:	jl     0x11014ea9
11014e57:	jmp    ebx
11014e59:	jns    0x11014ea9
11014e5b:	jmp    ecx
11014e5d:	jne    0x11014eaa
11014e5f:	(bad)  
11014e60:	fbstp  TBYTE PTR [edx+0x48]
11014e63:	(bad)  
11014e64:	(bad)  [edi+0x45]
11014e67:	(bad)  
11014e68:	fld    TBYTE PTR [ebx+eax*2-0x1]
11014e6c:	fisubr DWORD PTR [ecx+0x41]
11014e6f:	call   edi
11014e71:	notrack call bp
11014e75:	arpl   WORD PTR [ebx],di
11014e77:	call   ebx
11014e79:	pusha  
11014e7a:	cmp    edi,edi
11014e7c:	rcr    BYTE PTR [ebp+0x37],1
11014e7f:	dec    esi
11014e81:	pop    edx
11014e82:	xor    al,0xff
11014e84:	int3   
11014e85:	pop    eax
11014e86:	xor    bh,bh
11014e88:	into   
11014e89:	pop    esi
11014e8a:	cmp    bh,bh
11014e8c:	cld    
11014e8d:	clc    
11014e8e:	idiv   edi
11014e90:	(bad)  
11014e91:	(bad)  
11014e92:	std    
11014e93:	(bad)  
11014e94:	std    
11014e95:	std    
11014e96:	std    
11014e97:	(bad)  
11014e98:	(bad)  
11014e99:	(bad)  
11014e9a:	(bad)  
11014e9b:	(bad)  
11014e9c:	(bad)  
11014e9d:	(bad)  
11014e9e:	std    
11014e9f:	(bad)  
11014ea0:	(bad)  
11014ea1:	(bad)  
11014ea2:	(bad)  
11014ea3:	(bad)  
11014ea4:	(bad)  
11014ea5:	(bad)  
11014ea6:	(bad)  
11014ea7:	(bad)  
11014ea8:	jmp    0x11014e95
11014eaa:	jmp    0x11014eab
11014eac:	xor    DWORD PTR [ecx],esi
11014eae:	xor    edi,edi
11014eb0:	add    BYTE PTR [eax],al
11014eb2:	add    bh,bh
11014eb4:	add    BYTE PTR [eax],al
11014eb6:	add    ah,bh
11014eb8:	add    BYTE PTR [eax],al
11014eba:	add    al,ah
11014ebc:	add    BYTE PTR [eax],al
11014ebe:	add    BYTE PTR [ebp-0x6d000000],bh
11014ec4:	add    BYTE PTR [eax],al
11014ec6:	add    BYTE PTR [edi+0x0],ah
11014ec9:	add    BYTE PTR [eax],al
11014ecb:	inc    eax
11014ecc:	add    BYTE PTR [eax],al
11014ece:	add    BYTE PTR [ebx],ah
11014ed0:	add    BYTE PTR [eax],al
11014ed2:	add    BYTE PTR [ecx],dh
11014ed4:	add    BYTE PTR [eax],al
11014ed6:	add    BYTE PTR [eax+eax*1+0x0],dl
11014eda:	add    BYTE PTR [eax+eax*1+0x0],bh
11014ede:	add    BYTE PTR [ebx-0x38000000],ah
11014ee4:	add    BYTE PTR [eax],al
11014ee6:	add    al,bh
11014ee8:	add    BYTE PTR [eax],al
11014eea:	add    bh,bh
11014eec:	xor    al,0x34
11014eee:	xor    al,0xff
11014ef0:	in     al,dx
11014ef1:	in     al,dx
11014ef2:	in     al,dx
11014ef3:	(bad)  
11014ef4:	(bad)  
11014ef5:	(bad)  
11014ef6:	(bad)  
11014ef7:	(bad)  
11014ef8:	(bad)  
11014ef9:	(bad)  
11014efa:	(bad)  
11014efb:	(bad)  
11014efc:	(bad)  
11014efd:	(bad)  
11014efe:	(bad)  
11014eff:	(bad)  
11014f00:	(bad)  
11014f01:	(bad)  
11014f02:	(bad)  
11014f03:	(bad)  
11014f04:	(bad)  
11014f05:	(bad)  
11014f06:	(bad)  
11014f07:	(bad)  
11014f08:	(bad)  
11014f09:	(bad)  
11014f0a:	(bad)  
11014f0b:	(bad)  
11014f0c:	(bad)  
11014f0d:	(bad)  
11014f0e:	(bad)  
11014f0f:	(bad)  
11014f10:	cld    
11014f11:	fcmovne st,st(5)
11014f13:	push   esp
11014f15:	(bad)  
11014f16:	popa   
11014f17:	push   ebp
11014f19:	xchg   ecx,eax
11014f1a:	fs push esp
11014f1d:	xchg   ebx,eax
11014f1e:	push   sp
11014f21:	xchg   esp,eax
11014f22:	imul   edi,edi,0xff6a95f4
11014f28:	hlt    
11014f29:	xchg   esi,eax
11014f2a:	imul   edi,edi,0xfffffff4
11014f2d:	xchg   esi,eax
11014f2e:	imul   edi,edi,0xfffffff5
11014f31:	xchg   esi,eax
11014f32:	ins    BYTE PTR es:[edi],dx
11014f33:	push   esp
11014f35:	xchg   esi,eax
11014f36:	imul   edi,edi,0xfffffff4
11014f39:	xchg   ebp,eax
11014f3a:	imul   edi,edi,0xfffffff3
11014f3d:	xchg   esp,eax
11014f3e:	imul   edi,edi,0xff6691f1
11014f44:	out    dx,eax
11014f45:	lea    esp,[edx-0x1]
11014f48:	out    dx,al
11014f49:	mov    bl,BYTE PTR [edi-0x1]
11014f4c:	jmp    0x11014ed5
11014f4e:	pop    esp
11014f4f:	(bad)  
11014f50:	jmp    0xfa00a7d8
11014f55:	adc    BYTE PTR [ebp-0x1],0xe5
11014f59:	jl     0x11014fad
11014f5b:	jmp    ebx
11014f5d:	jns    0x11014fad
11014f5f:	jmp    ecx
11014f61:	jne    0x11014fae
11014f63:	(bad)  
11014f64:	fbstp  TBYTE PTR [edx+0x49]
11014f67:	(bad)  
11014f68:	(bad)  [edi+0x46]
11014f6b:	(bad)  
11014f6c:	fsubr  QWORD PTR [ebp+0x44]
11014f6f:	(bad)  
11014f70:	fisubr DWORD PTR [ecx+0x41]
11014f73:	call   edi
11014f75:	notrack call bp
11014f79:	fs cmp edi,edi
11014f7c:	rcr    BYTE PTR [edi+0x39],cl
11014f7f:	call   eax
11014f81:	pop    ebp
11014f82:	ss dec esi
11014f85:	pop    edx
11014f86:	xor    al,0xff
11014f88:	int    0x58
11014f8a:	xor    bh,bh
11014f8c:	out    dx,eax
11014f8d:	retf   0xffbe
11014f90:	(bad)  
11014f91:	(bad)  
11014f92:	(bad)  
11014f93:	(bad)  
11014f94:	(bad)  
11014f95:	(bad)  
11014f96:	std    
11014f97:	(bad)  
11014f98:	(bad)  
11014f99:	(bad)  
11014f9a:	(bad)  
11014f9b:	(bad)  
11014f9c:	(bad)  
11014f9d:	(bad)  
11014f9e:	(bad)  
11014f9f:	(bad)  
11014fa0:	(bad)  
11014fa1:	(bad)  
11014fa2:	(bad)  
11014fa3:	(bad)  
11014fa4:	(bad)  
11014fa5:	(bad)  
11014fa6:	(bad)  
11014fa7:	(bad)  
11014fa8:	(bad)  
11014fa9:	(bad)  
11014faa:	(bad)  
11014fab:	(bad)  
11014fac:	jmp    0x11014f99
11014fae:	jmp    0x11014faf
11014fb0:	xor    DWORD PTR [ecx],esi
11014fb2:	xor    edi,edi
11014fb4:	add    BYTE PTR [eax],al
11014fb6:	add    bh,bh
11014fb8:	add    BYTE PTR [eax],al
11014fba:	add    dl,bh
11014fbc:	add    BYTE PTR [eax],al
11014fbe:	add    ah,dl
11014fc0:	add    BYTE PTR [eax],al
11014fc2:	add    BYTE PTR [eax+eax*1+0x800000],ch
11014fc9:	add    BYTE PTR [eax],al
11014fcb:	push   ebp
11014fcc:	add    BYTE PTR [eax],al
11014fce:	add    BYTE PTR [edx],dh
11014fd0:	add    BYTE PTR [eax],al
11014fd2:	add    BYTE PTR [eax+eax*1],bh
11014fd5:	add    BYTE PTR [eax],al
11014fd7:	bound  eax,QWORD PTR [eax]
11014fd9:	add    BYTE PTR [eax],al
11014fdb:	lea    eax,[eax]
11014fdd:	add    BYTE PTR [eax],al
11014fdf:	mov    edx,0xf6000000
11014fe4:	add    BYTE PTR [eax],al
11014fe6:	add    bh,bh
11014fe8:	xor    al,0x34
11014fea:	xor    al,0xfe
11014fec:	in     al,dx
11014fed:	in     al,dx
11014fee:	in     al,dx
11014fef:	(bad)  
11014ff0:	(bad)  
11014ff1:	(bad)  
11014ff2:	(bad)  
11014ff3:	(bad)  
11014ff4:	(bad)  
11014ff5:	(bad)  
11014ff6:	(bad)  
11014ff7:	(bad)  
11014ff8:	(bad)  
11014ff9:	(bad)  
11014ffa:	(bad)  
11014ffb:	(bad)  
11014ffc:	(bad)  
11014ffd:	(bad)  
11014ffe:	(bad)  
11014fff:	(bad)  
11015000:	(bad)  
11015001:	(bad)  
11015002:	(bad)  
11015003:	(bad)  
11015004:	(bad)  
11015005:	(bad)  
11015006:	(bad)  
11015007:	(bad)  
11015008:	(bad)  
11015009:	(bad)  
1101500a:	(bad)  
1101500b:	(bad)  
1101500c:	(bad)  
1101500d:	(bad)  
1101500e:	(bad)  
1101500f:	(bad)  
11015010:	stc    
11015011:	shl    BYTE PTR [esi+0x6491f4ff],0xff
11015018:	cmc    
11015019:	xchg   esp,eax
1101501a:	push   0x6b95f4ff
1101501f:	push   esp
11015021:	cwde   
11015022:	outs   dx,BYTE PTR ds:[esi]
11015023:	push   esp
11015025:	cdq    
11015026:	outs   dx,DWORD PTR ds:[esi]
11015027:	push   ebp
11015029:	cdq    
1101502a:	jo     0x1101502b
1101502c:	cmc    
1101502d:	cdq    
1101502e:	jo     0x1101502f
11015030:	cmc    
11015031:	call   0xff70:0x99f5ff71
11015038:	cmc    
11015039:	cdq    
1101503a:	outs   dx,DWORD PTR ds:[esi]
1101503b:	push   esp
1101503d:	xchg   edi,eax
1101503e:	ins    DWORD PTR es:[edi],dx
1101503f:	push   ebx
11015041:	xchg   ebp,eax
11015042:	imul   edi,edi,0xfffffff2
11015045:	xchg   edx,eax
11015046:	push   0x648ff0ff
1101504b:	(bad)  
1101504c:	out    dx,al
1101504d:	mov    esp,DWORD PTR [eax-0x1]
11015050:	jmp    0x11014fd9
11015052:	pop    ebp
11015053:	(bad)  
11015054:	jmp    0xf900a9dc
11015059:	adc    BYTE PTR [ebp-0x1],0xe5
1101505d:	jl     0x110150b1
1101505f:	jmp    ebx
11015061:	jns    0x110150b1
11015063:	jmp    ecx
11015065:	jne    0x110150b3
11015067:	(bad)  
11015068:	fbstp  TBYTE PTR [edx+0x48]
1101506b:	(bad)  
1101506c:	fisubr WORD PTR [edi+0x46]
1101506f:	(bad)  
11015070:	fsubr  QWORD PTR [esp+eax*2-0x1]
11015074:	fldcw  WORD PTR [eax+0x40]
11015077:	call   edi
11015079:	notrack call bp
1101507d:	arpl   WORD PTR [ebx],di
1101507f:	call   edx
11015081:	pop    edi
11015082:	cmp    edi,edi
11015084:	rcr    DWORD PTR [ebp+0x36],1
11015087:	dec    edi
11015089:	pop    ebx
1101508a:	xor    al,0xff
1101508c:	jecxz  0x1101502e
1101508e:	mov    bh,bh
11015090:	(bad)  
11015091:	(bad)  
11015092:	std    
11015093:	(bad)  
11015094:	(bad)  
11015095:	(bad)  
11015096:	std    
11015097:	(bad)  
11015098:	(bad)  
11015099:	(bad)  
1101509a:	(bad)  
1101509b:	(bad)  
1101509c:	(bad)  
1101509d:	(bad)  
1101509e:	(bad)  
1101509f:	(bad)  
110150a0:	(bad)  
110150a1:	(bad)  
110150a2:	(bad)  
110150a3:	(bad)  
110150a4:	(bad)  
110150a5:	(bad)  
110150a6:	(bad)  
110150a7:	(bad)  
110150a8:	(bad)  
110150a9:	(bad)  
110150aa:	(bad)  
110150ab:	(bad)  
110150ac:	std    
110150ad:	std    
110150ae:	std    
110150af:	(bad)  
110150b0:	jmp    0x1101509d
110150b2:	jmp    0x110150b3
110150b4:	xor    DWORD PTR [ecx],esi
110150b6:	xor    edi,edi
110150b8:	add    BYTE PTR [eax],al
110150ba:	add    bh,bh
110150bc:	add    BYTE PTR [eax],al
110150be:	add    al,bh
110150c0:	add    BYTE PTR [eax],al
110150c2:	add    cl,al
110150c4:	add    BYTE PTR [eax],al
110150c6:	add    BYTE PTR [ecx+0x64000000],dl
110150cc:	add    BYTE PTR [eax],al
110150ce:	add    BYTE PTR [eax+eax*1],bh
110150d1:	add    BYTE PTR [eax],al
110150d3:	add    BYTE PTR ds:[eax],al
110150d6:	add    BYTE PTR [ebp+0x0],ah
110150d9:	add    BYTE PTR [eax],al
110150db:	call   0x0:0xf2000000
110150e2:	add    bh,bh
110150e4:	xor    al,0x34
110150e6:	xor    al,0xff
110150e8:	in     al,dx
110150e9:	in     al,dx
110150ea:	in     al,dx
110150eb:	(bad)  
110150ec:	(bad)  
110150ed:	(bad)  
110150ee:	(bad)  
110150ef:	(bad)  
110150f0:	(bad)  
110150f1:	(bad)  
110150f2:	(bad)  
110150f3:	(bad)  
110150f4:	(bad)  
110150f5:	(bad)  
110150f6:	(bad)  
110150f7:	(bad)  
110150f8:	(bad)  
110150f9:	(bad)  
110150fa:	(bad)  
110150fb:	(bad)  
110150fc:	(bad)  
110150fd:	(bad)  
110150fe:	(bad)  
110150ff:	(bad)  
11015100:	(bad)  
11015101:	(bad)  
11015102:	(bad)  
11015103:	(bad)  
11015104:	(bad)  
11015105:	(bad)  
11015106:	(bad)  
11015107:	(bad)  
11015108:	(bad)  
11015109:	(bad)  
1101510a:	(bad)  
1101510b:	(bad)  
1101510c:	(bad)  
1101510d:	(bad)  
1101510e:	(bad)  
1101510f:	push   edi
11015111:	lods   al,BYTE PTR ds:[esi]
11015112:	mov    bh,bh
11015114:	hlt    
11015115:	xchg   ebx,eax
11015116:	addr16 push ebp
11015119:	xchg   esi,eax
1101511a:	ins    BYTE PTR es:[edi],dx
1101511b:	push   esp
1101511d:	cdq    
1101511e:	outs   dx,DWORD PTR ds:[esi]
1101511f:	push   ebp
11015121:	fwait
11015122:	jae    0x11015123
11015124:	cmc    
11015125:	popf   
11015126:	jne    0x11015127
11015128:	cmc    
11015129:	popf   
1101512a:	jbe    0x1101512b
1101512c:	cmc    
1101512d:	popf   
1101512e:	jbe    0x1101512f
11015130:	cmc    
11015131:	sahf   
11015132:	jbe    0x11015133
11015134:	cmc    
11015135:	popf   
11015136:	jne    0x11015137
11015138:	cmc    
11015139:	pushf  
1101513a:	je     0x1101513b
1101513c:	cmc    
1101513d:	fwait
1101513e:	jb     0x1101513f
11015140:	cmc    
11015141:	call   0xff6e:0x98f4ff70
11015148:	repz xchg esp,eax
1101514a:	push   0xffffffff
1101514c:	lock (bad) 
1101514e:	gs (bad) 
11015150:	out    dx,al
11015151:	mov    WORD PTR [ecx-0x1],fs
11015154:	in     al,dx
11015155:	mov    BYTE PTR [ebp-0x1],bl
11015158:	jmp    0xfa00aae0
1101515d:	adc    BYTE PTR [ebp-0x1],0xe5
11015161:	jl     0x110151b5
11015163:	jmp    ebx
11015165:	jns    0x110151b5
11015167:	jmp    ecx
11015169:	jne    0x110151b6
1101516b:	jmp    eax
1101516d:	jb     0x110151b7
1101516f:	(bad)  
11015170:	fisubr WORD PTR [edi+0x46]
11015173:	(bad)  
11015174:	fld    TBYTE PTR [ebx+eax*2-0x1]
11015178:	fisubr DWORD PTR [ecx+0x40]
1101517b:	call   esi
1101517d:	cmp    ax,0xd4ff
11015181:	bound  edi,QWORD PTR [ebx]
11015183:	call   edx
11015185:	pop    edi
11015186:	cmp    bh,bh
11015188:	rcr    DWORD PTR [ebp+0x36],1
1101518b:	(bad)  
1101518c:	fild   DWORD PTR [ebx-0x101009b]
11015192:	std    
11015193:	(bad)  
11015194:	(bad)  
11015195:	(bad)  
11015196:	std    
11015197:	(bad)  
11015198:	(bad)  
11015199:	(bad)  
1101519a:	(bad)  
1101519b:	(bad)  
1101519c:	(bad)  
1101519d:	(bad)  
1101519e:	(bad)  
1101519f:	(bad)  
110151a0:	(bad)  
110151a1:	(bad)  
110151a2:	(bad)  
110151a3:	(bad)  
110151a4:	(bad)  
110151a5:	(bad)  
110151a6:	(bad)  
110151a7:	(bad)  
110151a8:	(bad)  
110151a9:	(bad)  
110151aa:	(bad)  
110151ab:	(bad)  
110151ac:	std    
110151ad:	std    
110151ae:	std    
110151af:	(bad)  
110151b0:	(bad)  
110151b1:	(bad)  
110151b2:	(bad)  
110151b3:	(bad)  
110151b4:	jmp    0x110151a1
110151b6:	jmp    0x110151b7
110151b8:	xor    DWORD PTR [ecx],esi
110151ba:	xor    edi,edi
110151bc:	add    BYTE PTR [eax],al
110151be:	add    bh,bh
110151c0:	add    BYTE PTR [eax],al
110151c2:	add    bl,dh
110151c4:	add    BYTE PTR [eax],al
110151c6:	add    BYTE PTR [esi+0x66000000],bl
110151cc:	add    BYTE PTR [eax],al
110151ce:	add    BYTE PTR ds:0x36000000,bh
110151d4:	add    BYTE PTR [eax],al
110151d6:	add    BYTE PTR [ebx+0x0],ch
110151d9:	add    BYTE PTR [eax],al
110151db:	jmp    0x110151dd
110151dd:	add    BYTE PTR [eax],al
110151df:	push   DWORD PTR [esp+esi*1]
110151e2:	xor    al,0xff
110151e4:	in     al,dx
110151e5:	in     al,dx
110151e6:	in     al,dx
110151e7:	(bad)  
110151e8:	std    
110151e9:	std    
110151ea:	std    
110151eb:	(bad)  
110151ec:	(bad)  
110151ed:	(bad)  
110151ee:	(bad)  
110151ef:	(bad)  
110151f0:	std    
110151f1:	std    
110151f2:	std    
110151f3:	(bad)  
110151f4:	std    
110151f5:	std    
110151f6:	std    
110151f7:	(bad)  
110151f8:	(bad)  
110151f9:	(bad)  
110151fa:	std    
110151fb:	(bad)  
110151fc:	(bad)  
110151fd:	(bad)  
110151fe:	std    
110151ff:	(bad)  
11015200:	std    
11015201:	std    
11015202:	std    
11015203:	(bad)  
11015204:	std    
11015205:	std    
11015206:	std    
11015207:	(bad)  
11015208:	std    
11015209:	std    
1101520a:	std    
1101520b:	(bad)  
1101520c:	std    
1101520d:	std    
1101520e:	std    
1101520f:	push   esi
11015211:	mov    al,ds:0x96f4ff79
11015216:	imul   edi,edi,0xfffffff5
11015219:	call   0xff75:0x9df5ff71
11015220:	cmc    
11015221:	mov    al,ds:0xa1f5ff79
11015226:	jnp    0x11015227
11015228:	cmc    
11015229:	mov    ds:0xa3f5ff7d,al
1101522e:	jge    0x1101522f
11015230:	mul    BYTE PTR [ebx-0x5d0a0083]
11015236:	jl     0x11015237
11015238:	cmc    
11015239:	mov    eax,ds:0x9ff5ff7a
1101523e:	js     0x1101523f
11015240:	cmc    
11015241:	popf   
11015242:	jne    0x11015243
11015244:	cmc    
11015245:	fwait
11015246:	jae    0x11015247
11015248:	cmc    
11015249:	cdq    
1101524a:	outs   dx,DWORD PTR ds:[esi]
1101524b:	push   edx
1101524d:	xchg   esp,eax
1101524e:	push   0xffffffff
11015250:	lock nop
11015252:	data16 (bad) 
11015254:	out    dx,eax
11015255:	mov    WORD PTR [ecx-0x1],fs
11015258:	in     al,dx
11015259:	mov    BYTE PTR [ebp-0x1],bl
1101525c:	jmp    0xfa00abe4
11015261:	adc    BYTE PTR [ebp-0x1],0xe5
11015265:	jl     0x110152b9
11015267:	jmp    ebx
11015269:	js     0x110152b9
1101526b:	jmp    edx
1101526d:	jne    0x110152ba
1101526f:	jmp    eax
11015271:	jb     0x110152bb
11015273:	(bad)  
11015274:	(bad)  [edi+0x45]
11015277:	(bad)  
11015278:	fsubr  QWORD PTR [ebx+eax*2-0x1]
1101527c:	fldcw  WORD PTR [ecx+0x3f]
1101527f:	call   esi
11015281:	gs cmp eax,0x3b62d4ff
11015287:	call   ebx
11015289:	pop    edi
1101528a:	cmp    bh,bh
1101528c:	xlat   BYTE PTR ds:[ebx]
1101528d:	jo     0x110152dc
1101528f:	(bad)  
11015290:	(bad)  
11015291:	(bad)  
11015292:	std    
11015293:	(bad)  
11015294:	std    
11015295:	std    
11015296:	std    
11015297:	(bad)  
11015298:	std    
11015299:	std    
1101529a:	std    
1101529b:	(bad)  
1101529c:	std    
1101529d:	std    
1101529e:	std    
1101529f:	(bad)  
110152a0:	std    
110152a1:	std    
110152a2:	std    
110152a3:	(bad)  
110152a4:	std    
110152a5:	std    
110152a6:	std    
110152a7:	(bad)  
110152a8:	std    
110152a9:	std    
110152aa:	std    
110152ab:	(bad)  
110152ac:	std    
110152ad:	std    
110152ae:	std    
110152af:	(bad)  
110152b0:	std    
110152b1:	std    
110152b2:	std    
110152b3:	(bad)  
110152b4:	std    
110152b5:	std    
110152b6:	std    
110152b7:	(bad)  
110152b8:	jmp    0x110152a5
110152ba:	jmp    0x110152bb
110152bc:	xor    DWORD PTR [ecx],esi
110152be:	xor    edi,edi
110152c0:	add    BYTE PTR [eax],al
110152c2:	add    bh,bh
110152c4:	add    BYTE PTR [eax],al
110152c6:	add    bl,ch
110152c8:	add    BYTE PTR [eax],al
110152ca:	add    BYTE PTR [ebx+0x0],ch
110152cd:	add    BYTE PTR [eax],al
110152cf:	add    BYTE PTR ss:[eax],al
110152d2:	add    BYTE PTR [edi],bh
110152d4:	add    BYTE PTR [eax],al
110152d6:	add    dl,ah
110152d8:	add    BYTE PTR [eax],al
110152da:	add    dh,bh
110152dc:	xor    al,0x34
110152de:	xor    al,0xff
110152e0:	in     al,dx
110152e1:	in     al,dx
110152e2:	in     al,dx
110152e3:	(bad)  
110152e4:	(bad)  
110152e5:	(bad)  
110152e6:	(bad)  
110152e7:	(bad)  
110152e8:	(bad)  
110152e9:	(bad)  
110152ea:	(bad)  
110152eb:	(bad)  
110152ec:	(bad)  
110152ed:	(bad)  
110152ee:	(bad)  
110152ef:	(bad)  
110152f0:	std    
110152f1:	std    
110152f2:	std    
110152f3:	(bad)  
110152f4:	std    
110152f5:	std    
110152f6:	std    
110152f7:	(bad)  
110152f8:	(bad)  
110152f9:	(bad)  
110152fa:	(bad)  
110152fb:	(bad)  
110152fc:	(bad)  
110152fd:	(bad)  
110152fe:	(bad)  
110152ff:	(bad)  
11015300:	(bad)  
11015301:	(bad)  
11015302:	(bad)  
11015303:	(bad)  
11015304:	(bad)  
11015305:	(bad)  
11015306:	std    
11015307:	(bad)  
11015308:	(bad)  
11015309:	(bad)  
1101530a:	(bad)  
1101530b:	(bad)  
1101530c:	std    
1101530d:	std    
1101530e:	std    
1101530f:	push   ebp
11015311:	fwait
11015312:	jb     0x11015313
11015314:	hlt    
11015315:	cdq    
11015316:	outs   dx,DWORD PTR ds:[esi]
11015317:	push   esi
11015319:	sahf   
1101531a:	jbe    0x1101531b
1101531c:	cmc    
1101531d:	mov    eax,ds:0xa5f6ff7b
11015322:	cmp    bh,0xf6
11015325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11015326:	cmp    edi,0xfffffff6
11015329:	test   al,0x84
1101532b:	push   esi
1101532d:	test   al,0x85
1101532f:	push   esi
11015331:	test   al,0x85
11015333:	push   esi
11015335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11015336:	cmp    edi,0xfffffff6
11015339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1101533a:	cmp    edi,0xff7ea4f5
11015340:	cmc    
11015341:	mov    eax,ds:0x9ff5ff7b
11015346:	ja     0x11015347
11015348:	cmc    
11015349:	pushf  
1101534a:	je     0x1101534b
1101534c:	hlt    
1101534d:	cdq    
1101534e:	outs   dx,DWORD PTR ds:[esi]
1101534f:	push   edx
11015351:	xchg   esp,eax
11015352:	push   0xffffffff
11015354:	lock nop
11015356:	gs (bad) 
11015358:	out    dx,al
11015359:	mov    esp,DWORD PTR [ecx-0x1]
1101535c:	jmp    0x110152e5
1101535e:	pop    esp
1101535f:	(bad)  
11015360:	jmp    0xf900abe7
11015365:	jg     0x110153bb
11015367:	jmp    ebp
11015369:	jnp    0x110153bc
1101536b:	jmp    ebx
1101536d:	js     0x110153bd
1101536f:	jmp    edx
11015371:	jne    0x110153be
11015373:	(bad)  
11015374:	fbstp  TBYTE PTR [ecx+0x47]
11015377:	(bad)  
11015378:	(bad)  [esi+0x45]
1101537b:	(bad)  
1101537c:	fld    TBYTE PTR [ebx+0x42]
1101537f:	(bad)  
11015380:	fsubr  DWORD PTR [eax+0x3f]
11015383:	call   esi
11015385:	gs cmp eax,0x3a63d5ff
1101538b:	call   ebp
1101538d:	push   0xfefeff42
11015392:	std    
11015393:	(bad)  
11015394:	(bad)  
11015395:	(bad)  
11015396:	std    
11015397:	(bad)  
11015398:	(bad)  
11015399:	(bad)  
1101539a:	std    
1101539b:	(bad)  
1101539c:	(bad)  
1101539d:	(bad)  
1101539e:	(bad)  
1101539f:	(bad)  
110153a0:	(bad)  
110153a1:	(bad)  
110153a2:	(bad)  
110153a3:	(bad)  
110153a4:	(bad)  
110153a5:	(bad)  
110153a6:	(bad)  
110153a7:	(bad)  
110153a8:	(bad)  
110153a9:	(bad)  
110153aa:	(bad)  
110153ab:	(bad)  
110153ac:	std    
110153ad:	std    
110153ae:	std    
110153af:	(bad)  
110153b0:	std    
110153b1:	std    
110153b2:	std    
110153b3:	(bad)  
110153b4:	std    
110153b5:	std    
110153b6:	std    
110153b7:	(bad)  
110153b8:	std    
110153b9:	std    
110153ba:	std    
110153bb:	(bad)  
110153bc:	jmp    0x110153a9
110153be:	jmp    0x110153bf
110153c0:	xor    DWORD PTR [ecx],esi
110153c2:	xor    edi,edi
110153c4:	add    BYTE PTR [eax],al
110153c6:	add    dh,bh
110153c8:	add    BYTE PTR [eax],al
110153ca:	add    dl,ah
110153cc:	add    BYTE PTR [eax],al
110153ce:	add    BYTE PTR [esi],bh
110153d0:	add    BYTE PTR [eax],al
110153d2:	add    BYTE PTR [edx],dh
110153d4:	add    BYTE PTR [eax],al
110153d6:	add    bh,bl
110153d8:	add    BYTE PTR [eax],al
110153da:	add    dh,bh
110153dc:	xor    eax,0xedfe3535
110153e1:	in     eax,dx
110153e2:	in     eax,dx
110153e3:	(bad)  
110153e4:	(bad)  
110153e5:	(bad)  
110153e6:	(bad)  
110153e7:	(bad)  
110153e8:	(bad)  
110153e9:	(bad)  
110153ea:	(bad)  
110153eb:	(bad)  
110153ec:	(bad)  
110153ed:	(bad)  
110153ee:	(bad)  
110153ef:	(bad)  
110153f0:	(bad)  
110153f1:	(bad)  
110153f2:	(bad)  
110153f3:	(bad)  
110153f4:	(bad)  
110153f5:	(bad)  
110153f6:	(bad)  
110153f7:	(bad)  
110153f8:	(bad)  
110153f9:	(bad)  
110153fa:	(bad)  
110153fb:	(bad)  
110153fc:	(bad)  
110153fd:	(bad)  
110153fe:	(bad)  
110153ff:	(bad)  
11015400:	(bad)  
11015401:	(bad)  
11015402:	(bad)  
11015403:	(bad)  
11015404:	(bad)  
11015405:	(bad)  
11015406:	(bad)  
11015407:	(bad)  
11015408:	(bad)  
11015409:	(bad)  
1101540a:	(bad)  
1101540b:	(bad)  
1101540c:	(bad)  
1101540d:	(bad)  
1101540e:	std    
1101540f:	push   esi
11015411:	sahf   
11015412:	jbe    0x11015413
11015414:	cmc    
11015415:	popf   
11015416:	je     0x11015417
11015418:	mul    BYTE PTR [edx-0x58090084]
1101541e:	cmp    edi,0xfffffff6
11015421:	stos   DWORD PTR es:[edi],eax
11015422:	mov    bh,bh
11015424:	imul   BYTE PTR [ebp-0x51080074]
1101542a:	mov    ?,edi
1101542c:	imul   DWORD PTR [edi-0x50080072]
11015432:	mov    ?,edi
11015434:	imul   DWORD PTR [ebp-0x54090074]
1101543a:	mov    edi,edi
1101543c:	imul   BYTE PTR [ecx-0x5909007a]
11015442:	cmp    bh,0xf6
11015445:	mov    ds:0xa0f6ff7e,eax
1101544a:	jns    0x1101544b
1101544c:	cmc    
1101544d:	popf   
1101544e:	je     0x1101544f
11015450:	hlt    
11015451:	cdq    
11015452:	jo     0x11015453
11015454:	repz xchg esp,eax
11015456:	push   0xffffffff
11015458:	lock (bad) 
1101545a:	gs (bad) 
1101545c:	out    dx,al
1101545d:	mov    esp,DWORD PTR [eax-0x1]
11015460:	jmp    0x110153e9
11015462:	pop    esp
11015463:	(bad)  
11015464:	jmp    0xfa00aceb
11015469:	jg     0x110154bf
1101546b:	jmp    esi
1101546d:	jnp    0x110154bf
1101546f:	jmp    esp
11015471:	js     0x110154c1
11015473:	jmp    ecx
11015475:	je     0x110154c1
11015477:	jmp    eax
11015479:	jno    0x110154c3
1101547b:	(bad)  
1101547c:	(bad)  [esi+0x44]
1101547f:	(bad)  
11015480:	fisubr DWORD PTR [ebx+0x41]
11015483:	(bad)  
11015484:	fsub   DWORD PTR [edi+0x3f]
11015487:	call   edi
11015489:	gs cmp al,0xff
1101548c:	xlat   BYTE PTR ds:[ebx]
1101548d:	imul   eax,DWORD PTR [edi+edi*8-0x2],0xfffffffe
11015492:	std    
11015493:	(bad)  
11015494:	(bad)  
11015495:	(bad)  
11015496:	std    
11015497:	(bad)  
11015498:	(bad)  
11015499:	(bad)  
1101549a:	(bad)  
1101549b:	(bad)  
1101549c:	(bad)  
1101549d:	(bad)  
1101549e:	std    
1101549f:	(bad)  
110154a0:	(bad)  
110154a1:	(bad)  
110154a2:	(bad)  
110154a3:	(bad)  
110154a4:	(bad)  
110154a5:	(bad)  
110154a6:	(bad)  
110154a7:	(bad)  
110154a8:	(bad)  
110154a9:	(bad)  
110154aa:	(bad)  
110154ab:	(bad)  
110154ac:	(bad)  
110154ad:	(bad)  
110154ae:	(bad)  
110154af:	(bad)  
110154b0:	(bad)  
110154b1:	(bad)  
110154b2:	(bad)  
110154b3:	(bad)  
110154b4:	(bad)  
110154b5:	(bad)  
110154b6:	(bad)  
110154b7:	(bad)  
110154b8:	std    
110154b9:	std    
110154ba:	std    
110154bb:	(bad)  
110154bc:	in     al,dx
110154bd:	in     al,dx
110154be:	in     al,dx
110154bf:	push   DWORD PTR [esp+esi*1]
110154c2:	xor    al,0xfe
110154c4:	add    BYTE PTR [eax],al
110154c6:	add    dh,bh
110154c8:	add    BYTE PTR [eax],al
110154ca:	add    ch,bl
110154cc:	add    BYTE PTR [eax],al
110154ce:	add    BYTE PTR [ecx],dh
110154d0:	add    BYTE PTR [eax],al
110154d2:	add    BYTE PTR [esi],cl
110154d4:	add    BYTE PTR [eax],al
110154d6:	add    BYTE PTR [eax+eax*1],dh
110154d9:	add    BYTE PTR [eax],al
110154db:	fild   WORD PTR [eax]
110154dd:	add    BYTE PTR [eax],al
110154df:	(bad)  
110154e0:	xor    eax,0xedfe3535
110154e5:	in     eax,dx
110154e6:	in     eax,dx
110154e7:	(bad)  
110154e8:	(bad)  
110154e9:	(bad)  
110154ea:	(bad)  
110154eb:	(bad)  
110154ec:	(bad)  
110154ed:	(bad)  
110154ee:	(bad)  
110154ef:	(bad)  
110154f0:	std    
110154f1:	std    
110154f2:	std    
110154f3:	(bad)  
110154f4:	std    
110154f5:	std    
110154f6:	std    
110154f7:	(bad)  
110154f8:	(bad)  
110154f9:	(bad)  
110154fa:	(bad)  
110154fb:	(bad)  
110154fc:	(bad)  
110154fd:	(bad)  
110154fe:	(bad)  
110154ff:	(bad)  
11015500:	(bad)  
11015501:	(bad)  
11015502:	(bad)  
11015503:	(bad)  
11015504:	std    
11015505:	std    
11015506:	std    
11015507:	(bad)  
11015508:	std    
11015509:	std    
1101550a:	std    
1101550b:	(bad)  
1101550c:	std    
1101550d:	std    
1101550e:	std    
1101550f:	push   edi
11015511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11015512:	cmp    edi,0xfffffff5
11015515:	mov    al,ds:0xa7f7ff7a
1101551a:	cmp    edi,0xfffffff6
1101551d:	lods   eax,DWORD PTR ds:[esi]
1101551e:	mov    edi,edi
11015520:	clc    
11015521:	mov    cl,0x92
11015523:	push   edi
11015525:	mov    ah,0x96
11015527:	(bad)  
11015528:	clc    
11015529:	mov    dh,0x98
1101552b:	(bad)  
1101552c:	clc    
1101552d:	mov    dh,0x99
1101552f:	(bad)  
11015530:	clc    
11015531:	mov    dh,0x99
11015533:	push   edi
11015535:	mov    ah,0x96
11015537:	(bad)  
11015538:	clc    
11015539:	mov    dl,0x93
1101553b:	push   edi
1101553d:	scas   eax,DWORD PTR es:[edi]
1101553e:	mov    ?,edi
11015540:	imul   DWORD PTR [ebx-0x58080077]
11015546:	test   bh,bh
11015548:	mul    BYTE PTR [edi+edi*2+0x79a0f5ff]
1101554f:	push   ebp
11015551:	pushf  
11015552:	je     0x11015553
11015554:	cmc    
11015555:	cdq    
11015556:	outs   dx,DWORD PTR ds:[esi]
11015557:	push   edx
11015559:	xchg   ebx,eax
1101555a:	imul   edi,edi,0xff648ef0
11015560:	out    dx,al
11015561:	mov    bl,BYTE PTR [edi-0x1]
11015564:	in     al,dx
11015565:	xchg   BYTE PTR [ebx-0x1],bl
11015568:	jmp    0xfa00acef
1101556d:	jle    0x110155c2
1101556f:	jmp    esi
11015571:	jnp    0x110155c3
11015573:	jmp    esp
11015575:	js     0x110155c4
11015577:	jmp    edx
11015579:	je     0x110155c5
1101557b:	jmp    eax
1101557d:	jno    0x110155c6
1101557f:	(bad)  
11015580:	(bad)  [esi+0x43]
11015583:	(bad)  
11015584:	fld    TBYTE PTR [edx+0x41]
11015587:	(bad)  
11015588:	fldcw  WORD PTR [eax+0x3f]
1101558b:	(bad)  
1101558c:	fdiv   QWORD PTR [edi+0x53]
1101558f:	(bad)  
11015590:	(bad)  
11015591:	(bad)  
11015592:	std    
11015593:	(bad)  
11015594:	std    
11015595:	std    
11015596:	std    
11015597:	(bad)  
11015598:	(bad)  
11015599:	(bad)  
1101559a:	std    
1101559b:	(bad)  
1101559c:	(bad)  
1101559d:	(bad)  
1101559e:	std    
1101559f:	(bad)  
110155a0:	(bad)  
110155a1:	(bad)  
110155a2:	std    
110155a3:	(bad)  
110155a4:	(bad)  
110155a5:	(bad)  
110155a6:	(bad)  
110155a7:	(bad)  
110155a8:	(bad)  
110155a9:	(bad)  
110155aa:	(bad)  
110155ab:	(bad)  
110155ac:	std    
110155ad:	std    
110155ae:	std    
110155af:	(bad)  
110155b0:	std    
110155b1:	std    
110155b2:	std    
110155b3:	(bad)  
110155b4:	std    
110155b5:	std    
110155b6:	std    
110155b7:	(bad)  
110155b8:	in     al,dx
110155b9:	in     al,dx
110155ba:	in     al,dx
110155bb:	(bad)  
110155bc:	xor    al,0x34
110155be:	xor    al,0xfe
110155c0:	add    BYTE PTR [eax],al
110155c2:	add    dh,bh
110155c4:	add    BYTE PTR [eax],al
110155c6:	add    dh,bl
110155c8:	add    BYTE PTR [eax],al
110155ca:	add    BYTE PTR ds:0xe000000,dh
110155d0:	add    BYTE PTR [eax],al
110155d2:	add    BYTE PTR [esi],al
110155d4:	add    BYTE PTR [eax],al
110155d6:	add    BYTE PTR [edi],cl
110155d8:	add    BYTE PTR [eax],al
110155da:	add    BYTE PTR ds:0xdf000000,dh
110155e0:	add    BYTE PTR [eax],al
110155e2:	add    dh,bh
110155e4:	xor    eax,0xedfe3535
110155e9:	in     eax,dx
110155ea:	in     eax,dx
110155eb:	(bad)  
110155ec:	(bad)  
110155ed:	(bad)  
110155ee:	(bad)  
110155ef:	(bad)  
110155f0:	std    
110155f1:	std    
110155f2:	std    
110155f3:	(bad)  
110155f4:	std    
110155f5:	std    
110155f6:	std    
110155f7:	(bad)  
110155f8:	(bad)  
110155f9:	(bad)  
110155fa:	std    
110155fb:	(bad)  
110155fc:	(bad)  
110155fd:	(bad)  
110155fe:	std    
110155ff:	(bad)  
11015600:	(bad)  
11015601:	(bad)  
11015602:	(bad)  
11015603:	(bad)  
11015604:	(bad)  
11015605:	(bad)  
11015606:	std    
11015607:	(bad)  
11015608:	(bad)  
11015609:	(bad)  
1101560a:	std    
1101560b:	(bad)  
1101560c:	std    
1101560d:	std    
1101560e:	std    
1101560f:	(bad)  
11015610:	clc    
11015611:	mov    dh,0x98
11015613:	push   ebp
11015615:	mov    ds:0xabf7ff7e,eax
1101561a:	mov    edi,edi
1101561c:	div    DWORD PTR [edx-0x4807006d]
11015622:	fwait
11015623:	(bad)  
11015624:	clc    
11015625:	mov    ebx,0xbdf8ffa0
1101562a:	mov    ds:0xa3bdf8ff,al
1101562f:	(bad)  
11015630:	clc    
11015631:	mov    esi,0xbcf8ffa3
11015636:	mov    al,ds:0x9cb9f8ff
1101563b:	push   edi
1101563d:	mov    ch,0x97
1101563f:	push   edi
11015641:	mov    al,0x90
11015643:	push   esi
11015645:	lods   al,BYTE PTR ds:[esi]
11015646:	mov    bh,bh
11015648:	mul    BYTE PTR [edi-0x5d0a007c]
1101564e:	jge    0x1101564f
11015650:	cmc    
11015651:	lahf   
11015652:	ja     0x11015653
11015654:	cmc    
11015655:	fwait
11015656:	jb     0x11015657
11015658:	hlt    
11015659:	xchg   edi,eax
1101565a:	ins    DWORD PTR es:[edi],dx
1101565b:	push   ecx
1101565d:	xchg   edx,eax
1101565e:	addr16 (bad) 
11015660:	out    dx,eax
11015661:	lea    esp,[edx-0x1]
11015664:	in     eax,dx
11015665:	mov    DWORD PTR [esi-0x1],ebx
11015668:	jmp    0x110155ef
1101566a:	pop    ecx
1101566b:	(bad)  
1101566c:	jmp    0xf900acf2
11015671:	jge    0x110156c5
11015673:	jmp    ebp
11015675:	jp     0x110156c6
11015677:	jmp    esp
11015679:	ja     0x110156c7
1101567b:	jmp    ecx
1101567d:	jae    0x110156c8
1101567f:	(bad)  
11015680:	fidiv  WORD PTR [eax+0x45]
11015683:	(bad)  
11015684:	fsubr  QWORD PTR [ebp+0x42]
11015687:	(bad)  
11015688:	fld    TBYTE PTR [edx+0x41]
1101568b:	jmp    edx
1101568d:	mov    WORD PTR [ebp-0x1],gs
11015690:	(bad)  
11015691:	(bad)  
11015692:	std    
11015693:	(bad)  
11015694:	std    
11015695:	std    
11015696:	std    
11015697:	(bad)  
11015698:	(bad)  
11015699:	(bad)  
1101569a:	std    
1101569b:	(bad)  
1101569c:	(bad)  
1101569d:	(bad)  
1101569e:	std    
1101569f:	(bad)  
110156a0:	(bad)  
110156a1:	(bad)  
110156a2:	std    
110156a3:	(bad)  
110156a4:	(bad)  
110156a5:	(bad)  
110156a6:	std    
110156a7:	(bad)  
110156a8:	std    
110156a9:	std    
110156aa:	std    
110156ab:	(bad)  
110156ac:	std    
110156ad:	std    
110156ae:	std    
110156af:	(bad)  
110156b0:	std    
110156b1:	std    
110156b2:	std    
110156b3:	(bad)  
110156b4:	in     al,dx
110156b5:	in     al,dx
110156b6:	in     al,dx
110156b7:	push   DWORD PTR [esp+esi*1]
110156ba:	xor    al,0xfe
110156bc:	add    BYTE PTR [eax],al
110156be:	add    dh,bh
110156c0:	add    BYTE PTR [eax],al
110156c2:	add    al,ah
110156c4:	add    BYTE PTR [eax],al
110156c6:	add    BYTE PTR [ebx],bh
110156c8:	add    BYTE PTR [eax],al
110156ca:	add    BYTE PTR [edx],dl
110156cc:	add    BYTE PTR [eax],al
110156ce:	add    BYTE PTR [edi],al
110156d0:	add    BYTE PTR [eax],al
110156d2:	add    BYTE PTR [edx],al
110156d4:	add    BYTE PTR [eax],al
110156d6:	add    BYTE PTR [edi],al
110156d8:	add    BYTE PTR [eax],al
110156da:	add    BYTE PTR [edi],cl
110156dc:	add    BYTE PTR [eax],al
110156de:	add    BYTE PTR ds:0xdf000000,dh
110156e4:	add    BYTE PTR [eax],al
110156e6:	add    dh,bh
110156e8:	xor    eax,0xeefe3535
110156ed:	out    dx,al
110156ee:	out    dx,al
110156ef:	(bad)  
110156f0:	std    
110156f1:	std    
110156f2:	std    
110156f3:	(bad)  
110156f4:	std    
110156f5:	std    
110156f6:	std    
110156f7:	(bad)  
110156f8:	(bad)  
110156f9:	(bad)  
110156fa:	(bad)  
110156fb:	(bad)  
110156fc:	(bad)  
110156fd:	(bad)  
110156fe:	(bad)  
110156ff:	(bad)  
11015700:	(bad)  
11015701:	(bad)  
11015702:	(bad)  
11015703:	(bad)  
11015704:	(bad)  
11015705:	(bad)  
11015706:	std    
11015707:	(bad)  
11015708:	(bad)  
11015709:	(bad)  
1101570a:	std    
1101570b:	(bad)  
1101570c:	(bad)  
1101570d:	(bad)  
1101570e:	std    
1101570f:	(bad)  
11015710:	cli    
11015711:	retf   0xffb4
11015714:	mul    BYTE PTR [edi-0x5008007d]
1101571a:	(bad)  
1101571b:	push   edi
1101571d:	mov    bh,0x9b
1101571f:	(bad)  
11015720:	clc    
11015721:	mov    esi,0xc2f8ffa4
11015726:	stos   BYTE PTR es:[edi],al
11015727:	(bad)  
11015728:	stc    
11015729:	lds    ebp,FWORD PTR [esi-0x50390601]
1101572f:	(bad)  
11015730:	stc    
11015731:	lds    ebp,FWORD PTR [esi-0x543c0701]
11015737:	(bad)  
11015738:	clc    
11015739:	shl    BYTE PTR [esi-0x5f440701],0xff
11015740:	div    DWORD PTR [esi-0x4f080068]
11015746:	xchg   ecx,eax
11015747:	push   edi
11015749:	stos   DWORD PTR es:[edi],eax
1101574a:	mov    edi,edi
1101574c:	mul    BYTE PTR [esi-0x5e0a007f]
11015752:	jnp    0x11015753
11015754:	cmc    
11015755:	popf   
11015756:	jne    0x11015757
11015758:	cmc    
11015759:	cdq    
1101575a:	outs   dx,DWORD PTR ds:[esi]
1101575b:	push   ebx
1101575d:	xchg   ebp,eax
1101575e:	imul   edi,edi,0xfffffff1
11015761:	xchg   ecx,eax
11015762:	gs (bad) 
11015764:	out    dx,eax
11015765:	mov    WORD PTR [eax-0x1],fs
11015768:	in     eax,dx
11015769:	mov    BYTE PTR [edi+edi*8-0x15],bl
1101576d:	test   BYTE PTR [eax-0x1],bl
11015770:	jmp    0xf900acf5
11015775:	jge    0x110157c8
11015777:	jmp    esi
11015779:	jns    0x110157c9
1101577b:	jmp    ebx
1101577d:	jbe    0x110157ca
1101577f:	jmp    eax
11015781:	jb     0x110157ca
11015783:	(bad)  
11015784:	fisubr WORD PTR [edi+0x44]
11015787:	(bad)  
11015788:	fsubr  QWORD PTR [ebp+0x42]
1101578b:	(bad)  
1101578c:	jmp    0x11015738
1101578e:	xchg   ebx,eax
1101578f:	(bad)  
11015790:	(bad)  
11015791:	(bad)  
11015792:	std    
11015793:	(bad)  
11015794:	(bad)  
11015795:	(bad)  
11015796:	std    
11015797:	(bad)  
11015798:	(bad)  
11015799:	(bad)  
1101579a:	std    
1101579b:	(bad)  
1101579c:	(bad)  
1101579d:	(bad)  
1101579e:	std    
1101579f:	(bad)  
110157a0:	(bad)  
110157a1:	(bad)  
110157a2:	std    
110157a3:	(bad)  
110157a4:	(bad)  
110157a5:	(bad)  
110157a6:	(bad)  
110157a7:	(bad)  
110157a8:	(bad)  
110157a9:	(bad)  
110157aa:	(bad)  
110157ab:	(bad)  
110157ac:	std    
110157ad:	std    
110157ae:	std    
110157af:	(bad)  
110157b0:	in     al,dx
110157b1:	in     al,dx
110157b2:	in     al,dx
110157b3:	push   DWORD PTR [esp+esi*1]
110157b6:	xor    al,0xff
110157b8:	add    BYTE PTR [eax],al
110157ba:	add    dh,bh
110157bc:	add    BYTE PTR [eax],al
110157be:	add    bl,ah
110157c0:	add    BYTE PTR [eax],al
110157c2:	add    BYTE PTR [ecx+0x0],cl
110157c5:	add    BYTE PTR [eax],al
110157c7:	sbb    DWORD PTR [eax],eax
110157c9:	add    BYTE PTR [eax],al
110157cb:	or     DWORD PTR [eax],eax
110157cd:	add    BYTE PTR [eax],al
110157cf:	add    al,BYTE PTR [eax]
110157d1:	add    BYTE PTR [eax],al
110157d3:	add    BYTE PTR [eax],al
110157d5:	add    BYTE PTR [eax],al
110157d7:	add    al,BYTE PTR [eax]
110157d9:	add    BYTE PTR [eax],al
110157db:	pop    es
110157dc:	add    BYTE PTR [eax],al
110157de:	add    BYTE PTR [edi],cl
110157e0:	add    BYTE PTR [eax],al
110157e2:	add    BYTE PTR ds:0xdf000000,dh
110157e8:	add    BYTE PTR [eax],al
110157ea:	add    dh,bh
110157ec:	xor    eax,0xedfe3535
110157f1:	in     eax,dx
110157f2:	in     eax,dx
110157f3:	(bad)  
110157f4:	(bad)  
110157f5:	(bad)  
110157f6:	(bad)  
110157f7:	(bad)  
110157f8:	(bad)  
110157f9:	(bad)  
110157fa:	(bad)  
110157fb:	(bad)  
110157fc:	(bad)  
110157fd:	(bad)  
110157fe:	(bad)  
110157ff:	(bad)  
11015800:	(bad)  
11015801:	(bad)  
11015802:	(bad)  
11015803:	(bad)  
11015804:	(bad)  
11015805:	(bad)  
11015806:	std    
11015807:	(bad)  
11015808:	(bad)  
11015809:	(bad)  
1101580a:	(bad)  
1101580b:	(bad)  
1101580c:	(bad)  
1101580d:	(bad)  
1101580e:	std    
1101580f:	(bad)  
11015810:	cld    
11015811:	loop   0x110157e9
11015813:	push   esi
11015815:	stos   BYTE PTR es:[edi],al
11015816:	xchg   edi,edi
11015818:	div    DWORD PTR [ebx-0x4207006c]
1101581e:	mov    ds:0xacc4f9ff,al
11015823:	(bad)  
11015824:	stc    
11015825:	leave  
11015826:	mov    ah,0xff
11015828:	stc    
11015829:	int3   
1101582a:	mov    eax,0xbacefaff
1101582f:	(bad)  
11015830:	stc    
11015831:	int3   
11015832:	mov    eax,0xb5caf8ff
11015837:	(bad)  
11015838:	stc    
11015839:	(bad)  
1101583a:	scas   eax,DWORD PTR es:[edi]
1101583b:	(bad)  
1101583c:	clc    
1101583d:	shr    DWORD PTR [eax-0x5f440701],0xff
11015844:	div    DWORD PTR [ebp-0x50080069]
1101584a:	mov    ?,edi
1101584c:	imul   BYTE PTR [ecx-0x5c09007a]
11015852:	jle    0x11015853
11015854:	cmc    
11015855:	lahf   
11015856:	js     0x11015857
11015858:	cmc    
11015859:	call   0xff6d:0x97f4ff72
11015860:	repz xchg ebx,eax
11015862:	push   0x638ff1ff
11015867:	(bad)  
11015868:	out    dx,eax
11015869:	mov    ebx,DWORD PTR [edi-0x1]
1101586c:	out    dx,al
1101586d:	xchg   DWORD PTR [ebx-0x1],ebx
11015870:	jmp    0x110157f5
11015872:	push   edi
11015873:	(bad)  
11015874:	jmp    0xf900acf8
11015879:	jl     0x110158cb
1101587b:	jmp    ebp
1101587d:	js     0x110158cc
1101587f:	jmp    edx
11015881:	jne    0x110158cd
11015883:	jmp    eax
11015885:	jno    0x110158cd
11015887:	(bad)  
11015888:	fild   QWORD PTR [edi+0x45]
1101588b:	push   ebp
1101588d:	rol    ebx,1
1101588f:	(bad)  
11015890:	(bad)  
11015891:	(bad)  
11015892:	(bad)  
11015893:	(bad)  
11015894:	(bad)  
11015895:	(bad)  
11015896:	std    
11015897:	(bad)  
11015898:	(bad)  
11015899:	(bad)  
1101589a:	(bad)  
1101589b:	(bad)  
1101589c:	(bad)  
1101589d:	(bad)  
1101589e:	std    
1101589f:	(bad)  
110158a0:	(bad)  
110158a1:	(bad)  
110158a2:	(bad)  
110158a3:	(bad)  
110158a4:	(bad)  
110158a5:	(bad)  
110158a6:	(bad)  
110158a7:	(bad)  
110158a8:	(bad)  
110158a9:	(bad)  
110158aa:	(bad)  
110158ab:	(bad)  
110158ac:	in     al,dx
110158ad:	in     al,dx
110158ae:	in     al,dx
110158af:	push   DWORD PTR [esp+esi*1]
110158b2:	xor    al,0xff
110158b4:	add    BYTE PTR [eax],al
110158b6:	add    bh,bh
110158b8:	add    BYTE PTR [eax],al
110158ba:	add    cl,ch
110158bc:	add    BYTE PTR [eax],al
110158be:	add    BYTE PTR [ecx+0x0],ah
110158c1:	add    BYTE PTR [eax],al
110158c3:	sub    DWORD PTR [eax],eax
110158c5:	add    BYTE PTR [eax],al
110158c7:	adc    BYTE PTR [eax],al
110158c9:	add    BYTE PTR [eax],al
110158cb:	add    eax,0x0
	...
110158d8:	add    BYTE PTR [eax],al
110158da:	add    BYTE PTR [edx],al
110158dc:	add    BYTE PTR [eax],al
110158de:	add    BYTE PTR [edi],al
110158e0:	add    BYTE PTR [eax],al
110158e2:	add    BYTE PTR [edi],cl
110158e4:	add    BYTE PTR [eax],al
110158e6:	add    BYTE PTR [edi],dh
110158e8:	add    BYTE PTR [eax],al
110158ea:	add    al,ah
110158ec:	add    BYTE PTR [eax],al
110158ee:	add    dh,bh
110158f0:	xor    eax,0xedff3535
110158f5:	in     eax,dx
110158f6:	in     eax,dx
110158f7:	(bad)  
110158f8:	(bad)  
110158f9:	(bad)  
110158fa:	std    
110158fb:	(bad)  
110158fc:	std    
110158fd:	std    
110158fe:	std    
110158ff:	(bad)  
11015900:	(bad)  
11015901:	(bad)  
11015902:	std    
11015903:	(bad)  
11015904:	(bad)  
11015905:	(bad)  
11015906:	std    
11015907:	(bad)  
11015908:	(bad)  
11015909:	(bad)  
1101590a:	std    
1101590b:	(bad)  
1101590c:	(bad)  
1101590d:	(bad)  
1101590e:	std    
1101590f:	(bad)  
11015910:	(bad)  
11015911:	sti    
11015912:	stc    
11015913:	(bad)  
11015914:	clc    
11015915:	mov    cl,0x91
11015917:	(bad)  
11015918:	clc    
11015919:	mov    dh,0x98
1101591b:	(bad)  
1101591c:	clc    
1101591d:	shl    BYTE PTR [edi-0x4b360601],0xff
11015924:	stc    
11015925:	sar    BYTE PTR [ebp-0x3d2c0501],1
1101592b:	(bad)  
1101592c:	cli    
1101592d:	aad    0xc3
1101592f:	(bad)  
11015930:	cli    
11015931:	rol    edx,cl
11015933:	(bad)  
11015934:	cli    
11015935:	sar    BYTE PTR [esi-0x48330601],1
1101593b:	(bad)  
1101593c:	clc    
1101593d:	(bad)  
1101593e:	scas   eax,DWORD PTR es:[edi]
1101593f:	(bad)  
11015940:	stc    
11015941:	shl    BYTE PTR [esi-0x62460701],0xff
11015948:	div    DWORD PTR [ebx-0x5308006d]
1101594e:	mov    bh,bh
11015950:	mul    BYTE PTR [esi-0x5e0a007f]
11015956:	jp     0x11015957
11015958:	cmc    
11015959:	pushf  
1101595a:	je     0x1101595b
1101595c:	cmc    
1101595d:	cwde   
1101595e:	outs   dx,BYTE PTR ds:[esi]
1101595f:	push   esp
11015961:	xchg   ebp,eax
11015962:	push   0xffffffff
11015964:	repz xchg edx,eax
11015966:	addr16 push ecx
11015969:	mov    fs,WORD PTR [edx-0x1]
1101596c:	out    dx,eax
1101596d:	mov    bl,BYTE PTR [ebp-0x1]
11015970:	out    dx,al
11015971:	xchg   BYTE PTR [ecx-0x1],bl
11015974:	jmp    0x110158f8
11015976:	push   ebp
11015977:	(bad)  
11015978:	jmp    0x4f7b:0xe7ff537f
1101597f:	jmp    esp
11015981:	js     0x110159cf
11015983:	jmp    edx
11015985:	je     0x110159cf
11015987:	jmp    ebx
11015989:	jp     0x110159dc
1101598b:	(bad)  
1101598c:	std    
1101598d:	stc    
1101598e:	idiv   edi
11015990:	(bad)  
11015991:	(bad)  
11015992:	std    
11015993:	(bad)  
11015994:	std    
11015995:	std    
11015996:	std    
11015997:	(bad)  
11015998:	(bad)  
11015999:	(bad)  
1101599a:	(bad)  
1101599b:	(bad)  
1101599c:	(bad)  
1101599d:	(bad)  
1101599e:	(bad)  
1101599f:	(bad)  
110159a0:	std    
110159a1:	std    
110159a2:	std    
110159a3:	(bad)  
110159a4:	(bad)  
110159a5:	(bad)  
110159a6:	std    
110159a7:	(bad)  
110159a8:	in     al,dx
110159a9:	in     al,dx
110159aa:	in     al,dx
110159ab:	push   DWORD PTR [esp+esi*1]
110159ae:	xor    al,0xff
110159b0:	add    BYTE PTR [eax],al
110159b2:	add    bh,bh
110159b4:	add    BYTE PTR [eax],al
110159b6:	add    al,dh
110159b8:	add    BYTE PTR [eax],al
110159ba:	add    BYTE PTR [eax+eax*1+0x460000],al
110159c1:	add    BYTE PTR [eax],al
110159c3:	and    DWORD PTR [eax],eax
110159c5:	add    BYTE PTR [eax],al
110159c7:	or     al,0x0
110159c9:	add    BYTE PTR [eax],al
110159cb:	add    eax,DWORD PTR [eax]
	...
110159dd:	add    BYTE PTR [eax],al
110159df:	add    al,BYTE PTR [eax]
110159e1:	add    BYTE PTR [eax],al
110159e3:	pop    es
110159e4:	add    BYTE PTR [eax],al
110159e6:	add    BYTE PTR [edx],dl
110159e8:	add    BYTE PTR [eax],al
110159ea:	add    BYTE PTR ds:0xe2000000,bh
110159f0:	add    BYTE PTR [eax],al
110159f2:	add    bh,bh
110159f4:	xor    eax,0xeeff3535
110159f9:	out    dx,al
110159fa:	in     eax,dx
110159fb:	(bad)  
110159fc:	(bad)  
110159fd:	(bad)  
110159fe:	(bad)  
110159ff:	(bad)  
11015a00:	(bad)  
11015a01:	(bad)  
11015a02:	(bad)  
11015a03:	(bad)  
11015a04:	(bad)  
11015a05:	(bad)  
11015a06:	(bad)  
11015a07:	(bad)  
11015a08:	(bad)  
11015a09:	(bad)  
11015a0a:	(bad)  
11015a0b:	(bad)  
11015a0c:	(bad)  
11015a0d:	(bad)  
11015a0e:	std    
11015a0f:	(bad)  
11015a10:	(bad)  
11015a11:	(bad)  
11015a12:	(bad)  
11015a13:	(bad)  
11015a14:	cli    
11015a15:	sar    DWORD PTR [esi-0x65480701],1
11015a1b:	(bad)  
11015a1c:	clc    
11015a1d:	ret    0xffaa
11015a20:	stc    
11015a21:	int3   
11015a22:	mov    eax,0xc3d4faff
11015a27:	(bad)  
11015a28:	cli    
11015a29:	fmul   st,st(1)
11015a2b:	(bad)  
11015a2c:	sti    
11015a2d:	fcmove st,st(3)
11015a2f:	(bad)  
11015a30:	sti    
11015a31:	fxch   st(2)
11015a33:	(bad)  
11015a34:	cli    
11015a35:	aad    0xc5
11015a37:	(bad)  
11015a38:	cli    
11015a39:	sar    BYTE PTR [ebp-0x4a350601],1
11015a3f:	(bad)  
11015a40:	stc    
11015a41:	ret    
11015a42:	stos   DWORD PTR es:[edi],eax
11015a43:	(bad)  
11015a44:	clc    
11015a45:	mov    esp,0xb5f8ffa1
11015a4a:	xchg   esi,eax
11015a4b:	push   edi
11015a4d:	lods   eax,DWORD PTR ds:[esi]
11015a4e:	mov    edi,?
11015a50:	mul    BYTE PTR [edi-0x5d09007d]
11015a56:	jl     0x11015a57
11015a58:	cmc    
11015a59:	popf   
11015a5a:	jne    0x11015a5b
11015a5c:	cmc    
11015a5d:	cdq    
11015a5e:	jo     0x11015a5f
11015a60:	hlt    
11015a61:	xchg   esi,eax
11015a62:	imul   edi,edi,0xfffffff4
11015a65:	xchg   ebx,eax
11015a66:	push   0x6490f3ff
11015a6b:	push   ecx
11015a6d:	lea    esp,[eax-0x1]
11015a70:	out    dx,eax
11015a71:	mov    DWORD PTR [edi+edi*8-0x13],ebx
11015a75:	test   DWORD PTR [eax-0x1],ebx
11015a78:	jmp    0x110159fb
11015a7a:	push   esp
11015a7b:	(bad)  
11015a7c:	call   0xf800abfe
11015a81:	jp     0x11015ad0
11015a83:	jmp    esp
11015a85:	ja     0x11015ad2
11015a87:	(bad)  
11015a88:	out    dx,eax
11015a89:	scas   eax,DWORD PTR es:[edi]
11015a8a:	xchg   esi,eax
11015a8b:	(bad)  
11015a8c:	(bad)  
11015a8d:	(bad)  
11015a8e:	(bad)  
11015a8f:	(bad)  
11015a90:	std    
11015a91:	std    
11015a92:	std    
11015a93:	(bad)  
11015a94:	(bad)  
11015a95:	(bad)  
11015a96:	std    
11015a97:	(bad)  
11015a98:	(bad)  
11015a99:	(bad)  
11015a9a:	(bad)  
11015a9b:	(bad)  
11015a9c:	(bad)  
11015a9d:	(bad)  
11015a9e:	(bad)  
11015a9f:	(bad)  
11015aa0:	(bad)  
11015aa1:	(bad)  
11015aa2:	(bad)  
11015aa3:	(bad)  
11015aa4:	in     al,dx
11015aa5:	in     al,dx
11015aa6:	in     al,dx
11015aa7:	push   DWORD PTR [esp+esi*1]
11015aaa:	xor    al,0xff
11015aac:	add    BYTE PTR [eax],al
11015aae:	add    bh,bh
11015ab0:	add    BYTE PTR [eax],al
11015ab2:	add    dh,dh
11015ab4:	add    BYTE PTR [eax],al
11015ab6:	add    BYTE PTR [eax+eax*1+0x6f0000],ch
11015abd:	add    BYTE PTR [eax],al
11015abf:	aas    
11015ac0:	add    BYTE PTR [eax],al
11015ac2:	add    BYTE PTR ds:0xa000000,bl
11015ac8:	add    BYTE PTR [eax],al
11015aca:	add    BYTE PTR [edx],al
	...
11015ae0:	add    BYTE PTR [eax],al
11015ae2:	add    BYTE PTR [edx],al
11015ae4:	add    BYTE PTR [eax],al
11015ae6:	add    BYTE PTR [ecx],cl
11015ae8:	add    BYTE PTR [eax],al
11015aea:	add    BYTE PTR [ecx],bl
11015aec:	add    BYTE PTR [eax],al
11015aee:	add    BYTE PTR [edx+0x0],cl
11015af1:	add    BYTE PTR [eax],al
11015af3:	inc    DWORD PTR [eax]
11015af5:	add    BYTE PTR [eax],al
11015af7:	push   DWORD PTR [esi]
11015af9:	ss xor eax,0xedededff
11015aff:	(bad)  
11015b00:	(bad)  
11015b01:	(bad)  
11015b02:	std    
11015b03:	(bad)  
11015b04:	std    
11015b05:	std    
11015b06:	std    
11015b07:	(bad)  
11015b08:	(bad)  
11015b09:	(bad)  
11015b0a:	std    
11015b0b:	(bad)  
11015b0c:	(bad)  
11015b0d:	(bad)  
11015b0e:	std    
11015b0f:	(bad)  
11015b10:	(bad)  
11015b11:	(bad)  
11015b12:	std    
11015b13:	(bad)  
11015b14:	std    
11015b15:	cmc    
11015b16:	lock (bad) 
11015b18:	clc    
11015b19:	mov    edx,0xc2f9ff9e
11015b1e:	test   eax,0xb9cdfaff
11015b23:	(bad)  
11015b24:	cli    
11015b25:	aad    0xc5
11015b27:	(bad)  
11015b28:	sti    
11015b29:	fcmovne st,st(5)
11015b2b:	(bad)  
11015b2c:	sti    
11015b2d:	(bad)  
11015b2f:	(bad)  
11015b30:	sti    
11015b31:	fmul   st(6),st
11015b33:	(bad)  
11015b34:	sti    
11015b35:	fxch   st(2)
11015b37:	(bad)  
11015b38:	cli    
11015b39:	aam    0xc2
11015b3b:	(bad)  
11015b3c:	stc    
11015b3d:	int3   
11015b3e:	mov    eax,0xaec5f9ff
11015b43:	(bad)  
11015b44:	stc    
11015b45:	mov    esi,0xb7f8ffa4
11015b4a:	cdq    
11015b4b:	push   edi
11015b4d:	scas   eax,DWORD PTR es:[edi]
11015b4e:	mov    ?,edi
11015b50:	imul   DWORD PTR [eax-0x5c09007b]
11015b56:	jge    0x11015b57
11015b58:	neg    BYTE PTR [esi-0x650a008a]
11015b5e:	jo     0x11015b5f
11015b60:	cmc    
11015b61:	xchg   esi,eax
11015b62:	ins    BYTE PTR es:[edi],dx
11015b63:	push   ebp
11015b65:	xchg   esp,eax
11015b66:	push   0x6592f4ff
11015b6b:	push   esp
11015b6d:	(bad)  
11015b6e:	(bad)  
11015b6f:	push   edx
11015b71:	mov    WORD PTR [esi-0x1],ds
11015b74:	out    dx,eax
11015b75:	xchg   DWORD PTR [edx-0x1],ebx
11015b78:	in     eax,dx
11015b79:	test   BYTE PTR [esi-0x1],dl
11015b7c:	jmp    0x11015afe
11015b7e:	push   ebx
11015b7f:	(bad)  
11015b80:	call   0xfa00ac02
11015b85:	jle    0x11015bda
11015b87:	(bad)  
11015b88:	sti    
11015b89:	in     eax,dx
11015b8a:	out    0xff,eax
11015b8c:	(bad)  
11015b8d:	(bad)  
11015b8e:	std    
11015b8f:	(bad)  
11015b90:	std    
11015b91:	std    
11015b92:	std    
11015b93:	(bad)  
11015b94:	std    
11015b95:	std    
11015b96:	std    
11015b97:	(bad)  
11015b98:	(bad)  
11015b99:	(bad)  
11015b9a:	std    
11015b9b:	(bad)  
11015b9c:	(bad)  
11015b9d:	(bad)  
11015b9e:	(bad)  
11015b9f:	(bad)  
11015ba0:	in     al,dx
11015ba1:	in     al,dx
11015ba2:	in     al,dx
11015ba3:	push   DWORD PTR ds:0xff3435
11015ba9:	add    BYTE PTR [eax],al
11015bab:	inc    DWORD PTR [eax]
11015bad:	add    BYTE PTR [eax],al
11015baf:	inc    DWORD PTR [eax]
11015bb1:	add    BYTE PTR [eax],al
11015bb3:	iret   
11015bb4:	add    BYTE PTR [eax],al
11015bb6:	add    BYTE PTR [edi+0x6a000000],bl
11015bbc:	add    BYTE PTR [eax],al
11015bbe:	add    BYTE PTR [eax+eax*1],bh
11015bc1:	add    BYTE PTR [eax],al
11015bc3:	sbb    al,0x0
11015bc5:	add    BYTE PTR [eax],al
11015bc7:	or     al,BYTE PTR [eax]
11015bc9:	add    BYTE PTR [eax],al
11015bcb:	add    al,BYTE PTR [eax]
	...
11015be5:	add    BYTE PTR [eax],al
11015be7:	add    eax,0x11000000
11015bec:	add    BYTE PTR [eax],al
11015bee:	add    BYTE PTR [ecx],ch
11015bf0:	add    BYTE PTR [eax],al
11015bf2:	add    bh,bh
11015bf4:	add    BYTE PTR [eax],al
11015bf6:	add    bh,bh
11015bf8:	add    BYTE PTR [eax],al
11015bfa:	add    bh,bh
11015bfc:	xor    eax,0xeeff3535
11015c01:	out    dx,al
11015c02:	in     eax,dx
11015c03:	(bad)  
11015c04:	(bad)  
11015c05:	(bad)  
11015c06:	(bad)  
11015c07:	(bad)  
11015c08:	(bad)  
11015c09:	(bad)  
11015c0a:	(bad)  
11015c0b:	(bad)  
11015c0c:	(bad)  
11015c0d:	(bad)  
11015c0e:	std    
11015c0f:	(bad)  
11015c10:	(bad)  
11015c11:	(bad)  
11015c12:	(bad)  
11015c13:	(bad)  
11015c14:	(bad)  
11015c15:	(bad)  
11015c16:	(bad)  
11015c17:	(bad)  
11015c18:	sti    
11015c19:	fcmovne st,st(4)
11015c1b:	(bad)  
11015c1c:	clc    
11015c1d:	shl    BYTE PTR [esi-0x4a350601],0xff
11015c24:	cli    
11015c25:	aam    0xc3
11015c27:	(bad)  
11015c28:	sti    
11015c29:	fcmovne st,st(4)
11015c2b:	(bad)  
11015c2c:	sti    
11015c2d:	(bad)  
11015c2f:	(bad)  
11015c30:	cld    
11015c31:	fst    st(0)
11015c33:	(bad)  
11015c34:	sti    
11015c35:	fcmove st,st(3)
11015c37:	(bad)  
11015c38:	cli    
11015c39:	aam    0xc3
11015c3b:	(bad)  
11015c3c:	stc    
11015c3d:	into   
11015c3e:	mov    edx,0xafc6f9ff
11015c43:	(bad)  
11015c44:	clc    
11015c45:	mov    esi,0xb7f8ffa4
11015c4a:	cdq    
11015c4b:	push   edi
11015c4d:	scas   eax,DWORD PTR es:[edi]
11015c4e:	mov    ?,edi
11015c50:	imul   BYTE PTR [eax-0x5c09007b]
11015c56:	jge    0x11015c57
11015c58:	cmc    
11015c59:	popf   
11015c5a:	jbe    0x11015c5b
11015c5c:	cmc    
11015c5d:	cdq    
11015c5e:	jo     0x11015c5f
11015c60:	hlt    
11015c61:	xchg   esi,eax
11015c62:	imul   edi,edi,0xfffffff4
11015c65:	xchg   esp,eax
11015c66:	push   0x6491f4ff
11015c6b:	push   esp
11015c6d:	(bad)  
11015c6e:	(bad)  
11015c6f:	push   ebx
11015c71:	lea    ebx,[edi-0x1]
11015c74:	lock mov DWORD PTR [ebx-0x1],ebx
11015c78:	out    dx,al
11015c79:	test   DWORD PTR [eax-0x1],ebx
11015c7c:	in     al,dx
11015c7d:	adc    BYTE PTR [edi+edi*8-0x16],0x7f
11015c82:	push   ecx
11015c83:	push   esp
11015c85:	mov    ebp,0xfefeffa5
11015c8a:	std    
11015c8b:	(bad)  
11015c8c:	(bad)  
11015c8d:	(bad)  
11015c8e:	(bad)  
11015c8f:	(bad)  
11015c90:	(bad)  
11015c91:	(bad)  
11015c92:	(bad)  
11015c93:	(bad)  
11015c94:	(bad)  
11015c95:	(bad)  
11015c96:	std    
11015c97:	(bad)  
11015c98:	(bad)  
11015c99:	(bad)  
11015c9a:	(bad)  
11015c9b:	(bad)  
11015c9c:	in     al,dx
11015c9d:	in     al,dx
11015c9e:	in     al,dx
11015c9f:	push   DWORD PTR [esp+esi*1]
11015ca2:	xor    al,0xff
11015ca4:	add    BYTE PTR [eax],al
11015ca6:	add    bh,bh
11015ca8:	add    BYTE PTR [eax],al
11015caa:	add    bh,bh
11015cac:	add    BYTE PTR [eax],al
11015cae:	add    bh,bh
11015cb0:	add    BYTE PTR [eax],al
11015cb2:	add    al,cl
11015cb4:	add    BYTE PTR [eax],al
11015cb6:	add    BYTE PTR [ebx+0x68000000],bl
11015cbc:	add    BYTE PTR [eax],al
11015cbe:	add    BYTE PTR [edx],bh
11015cc0:	add    BYTE PTR [eax],al
11015cc2:	add    BYTE PTR [ebx],bl
11015cc4:	add    BYTE PTR [eax],al
11015cc6:	add    BYTE PTR [edx],cl
11015cc8:	add    BYTE PTR [eax],al
11015cca:	add    BYTE PTR [edx],al
	...
11015ce4:	add    BYTE PTR [eax],al
11015ce6:	add    BYTE PTR [ebx],al
11015ce8:	add    BYTE PTR [eax],al
11015cea:	add    BYTE PTR [eax+eax*1],cl
11015ced:	add    BYTE PTR [eax],al
11015cef:	and    DWORD PTR [eax],eax
11015cf1:	add    BYTE PTR [eax],al
11015cf3:	inc    DWORD PTR [eax]
11015cf5:	add    BYTE PTR [eax],al
11015cf7:	call   FWORD PTR [esi]
11015cf9:	adc    DWORD PTR [ebx],ecx
11015cfb:	inc    DWORD PTR [eax]
11015cfd:	add    BYTE PTR [eax],al
11015cff:	push   DWORD PTR ds:0xeeff3535
11015d05:	out    dx,al
11015d06:	in     eax,dx
11015d07:	(bad)  
11015d08:	(bad)  
11015d09:	(bad)  
11015d0a:	(bad)  
11015d0b:	(bad)  
11015d0c:	(bad)  
11015d0d:	(bad)  
11015d0e:	std    
11015d0f:	(bad)  
11015d10:	(bad)  
11015d11:	(bad)  
11015d12:	(bad)  
11015d13:	(bad)  
11015d14:	(bad)  
11015d15:	(bad)  
11015d16:	(bad)  
11015d17:	(bad)  
11015d18:	(bad)  
11015d19:	cld    
11015d1a:	sti    
11015d1b:	(bad)  
11015d1c:	cli    
11015d1d:	int3   
11015d1e:	mov    bh,0xff
11015d20:	stc    
11015d21:	(bad)  
11015d22:	scas   eax,DWORD PTR es:[edi]
11015d23:	(bad)  
11015d24:	stc    
11015d25:	sar    BYTE PTR [ebp-0x38280501],1
11015d2b:	(bad)  
11015d2c:	sti    
11015d2d:	fcmovne st,st(4)
11015d2f:	(bad)  
11015d30:	sti    
11015d31:	fcmovne st,st(5)
11015d33:	(bad)  
11015d34:	sti    
11015d35:	fmul   st,st(1)
11015d37:	(bad)  
11015d38:	cli    
11015d39:	rol    edx,cl
11015d3b:	(bad)  
11015d3c:	stc    
11015d3d:	int    0xb8
11015d3f:	(bad)  
11015d40:	stc    
11015d41:	lds    ebp,FWORD PTR [esi-0x5c410601]
11015d47:	(bad)  
11015d48:	clc    
11015d49:	mov    dh,0x98
11015d4b:	push   edi
11015d4d:	scas   eax,DWORD PTR es:[edi]
11015d4e:	mov    ?,edi
11015d50:	imul   BYTE PTR [eax-0x5c09007b]
11015d56:	jge    0x11015d57
11015d58:	cmc    
11015d59:	popf   
11015d5a:	jbe    0x11015d5b
11015d5c:	cmc    
11015d5d:	call   0xff6b:0x96f4ff70
11015d64:	hlt    
11015d65:	xchg   esp,eax
11015d66:	addr16 push esp
11015d69:	xchg   ecx,eax
11015d6a:	fs push ebp
11015d6d:	(bad)  
11015d6e:	(bad)  
11015d6f:	push   ebx
11015d71:	mov    ds,WORD PTR [edi-0x1]
11015d74:	repnz mov WORD PTR [ebp-0x1],ds
11015d78:	icebp  
11015d79:	mov    BYTE PTR [edx-0x1],bl
11015d7c:	out    dx,al
11015d7d:	test   BYTE PTR [esi-0x1],dl
11015d80:	icebp  
11015d81:	pushf  
11015d82:	ja     0x11015d83
11015d84:	(bad)  
11015d85:	sti    
11015d86:	cli    
11015d87:	(bad)  
11015d88:	(bad)  
11015d89:	(bad)  
11015d8a:	std    
11015d8b:	(bad)  
11015d8c:	(bad)  
11015d8d:	(bad)  
11015d8e:	(bad)  
11015d8f:	(bad)  
11015d90:	(bad)  
11015d91:	(bad)  
11015d92:	std    
11015d93:	(bad)  
11015d94:	std    
11015d95:	std    
11015d96:	std    
11015d97:	(bad)  
11015d98:	in     al,dx
11015d99:	in     al,dx
11015d9a:	in     al,dx
11015d9b:	push   DWORD PTR [esp+esi*1]
11015d9e:	xor    al,0xff
11015da0:	add    BYTE PTR [eax],al
11015da2:	add    bh,bh
11015da4:	pop    ds
11015da5:	adc    DWORD PTR [ebx],ecx
11015da7:	inc    DWORD PTR [eax]
11015da9:	add    BYTE PTR [eax],al
11015dab:	inc    DWORD PTR [eax]
11015dad:	add    BYTE PTR [eax],al
11015daf:	inc    DWORD PTR [eax]
11015db1:	add    BYTE PTR [eax],al
11015db3:	mov    BYTE PTR [eax],0x0
11015db6:	add    BYTE PTR [ecx+0x67000000],bl
11015dbc:	add    BYTE PTR [eax],al
11015dbe:	add    BYTE PTR [edx],bh
11015dc0:	add    BYTE PTR [eax],al
11015dc2:	add    BYTE PTR [ebx],bl
11015dc4:	add    BYTE PTR [eax],al
11015dc6:	add    BYTE PTR [edx],cl
11015dc8:	add    BYTE PTR [eax],al
11015dca:	add    BYTE PTR [edx],al
	...
11015de4:	add    BYTE PTR [eax],al
11015de6:	add    BYTE PTR [edx],al
11015de8:	add    BYTE PTR [eax],al
11015dea:	add    BYTE PTR [edx],cl
11015dec:	add    BYTE PTR [eax],al
11015dee:	add    BYTE PTR ds:0xff000000,bl
11015df4:	add    BYTE PTR [eax],al
11015df6:	add    bh,bh
11015df8:	shr    BYTE PTR [edi+eax*2-0x1],0x1d
11015dfd:	adc    BYTE PTR [edx],cl
11015dff:	inc    DWORD PTR [eax]
11015e01:	add    BYTE PTR [eax],al
11015e03:	push   DWORD PTR ds:0xeeff3535
11015e09:	out    dx,al
11015e0a:	in     eax,dx
11015e0b:	(bad)  
11015e0c:	(bad)  
11015e0d:	(bad)  
11015e0e:	(bad)  
11015e0f:	(bad)  
11015e10:	(bad)  
11015e11:	(bad)  
11015e12:	(bad)  
11015e13:	(bad)  
11015e14:	(bad)  
11015e15:	(bad)  
11015e16:	(bad)  
11015e17:	(bad)  
11015e18:	(bad)  
11015e19:	(bad)  
11015e1a:	(bad)  
11015e1b:	(bad)  
11015e1c:	std    
11015e1d:	div    bl
11015e1f:	(bad)  
11015e20:	stc    
11015e21:	enter  0xffb1,0xf9
11015e25:	enter  0xffb2,0xf9
11015e29:	iret   
11015e2a:	mov    esp,0xc3d4faff
11015e2f:	(bad)  
11015e30:	cli    
11015e31:	aad    0xc5
11015e33:	(bad)  
11015e34:	cli    
11015e35:	aam    0xc3
11015e37:	(bad)  
11015e38:	cli    
11015e39:	sar    BYTE PTR [ebp-0x4b350601],1
11015e3f:	(bad)  
11015e40:	stc    
11015e41:	ret    
11015e42:	stos   BYTE PTR es:[edi],al
11015e43:	(bad)  
11015e44:	clc    
11015e45:	mov    esp,0xb4f7ffa0
11015e4a:	xchg   esi,eax
11015e4b:	push   edi
11015e4d:	lods   eax,DWORD PTR ds:[esi]
11015e4e:	mov    edi,?
11015e50:	mul    BYTE PTR [edi-0x5d09007d]
11015e56:	jl     0x11015e57
11015e58:	cmc    
11015e59:	popf   
11015e5a:	jne    0x11015e5b
11015e5c:	cmc    
11015e5d:	cdq    
11015e5e:	outs   dx,DWORD PTR ds:[esi]
11015e5f:	push   esp
11015e61:	xchg   ebp,eax
11015e62:	imul   edi,edi,0xfffffff4
11015e65:	xchg   ebx,eax
11015e66:	addr16 push esp
11015e69:	nop
11015e6a:	arpl   di,di
11015e6c:	hlt    
11015e6d:	mov    fs,WORD PTR [ecx-0x1]
11015e70:	hlt    
11015e71:	lea    ebx,[edi-0x1]
11015e74:	repz mov WORD PTR [ebp-0x1],ds
11015e78:	repz mov bl,BYTE PTR [ebx-0x1]
11015e7c:	repz xchg ebp,eax
11015e7e:	imul   edi,edi,0xfffffffc
11015e81:	lock jmp 0xfeff:0xfefefeff
11015e89:	(bad)  
11015e8a:	(bad)  
11015e8b:	(bad)  
11015e8c:	(bad)  
11015e8d:	(bad)  
11015e8e:	(bad)  
11015e8f:	(bad)  
11015e90:	(bad)  
11015e91:	(bad)  
11015e92:	std    
11015e93:	(bad)  
11015e94:	in     al,dx
11015e95:	in     al,dx
11015e96:	in     al,dx
11015e97:	push   DWORD PTR [esp+esi*1]
11015e9a:	xor    al,0xff
11015e9c:	add    BYTE PTR [eax],al
11015e9e:	add    bh,bh
11015ea0:	pop    ds
11015ea1:	adc    DWORD PTR [ebx],ecx
11015ea3:	inc    ecx
11015ea5:	ins    DWORD PTR es:[edi],dx
11015ea6:	inc    edi
11015ea7:	inc    DWORD PTR [eax]
11015ea9:	add    BYTE PTR [eax],al
11015eab:	inc    DWORD PTR [eax]
11015ead:	add    BYTE PTR [eax],al
11015eaf:	inc    DWORD PTR [eax]
11015eb1:	add    BYTE PTR [eax],al
11015eb3:	lds    eax,FWORD PTR [eax]
11015eb5:	add    BYTE PTR [eax],al
11015eb7:	cwde   
11015eb8:	add    BYTE PTR [eax],al
11015eba:	add    BYTE PTR [esi+0x0],ah
11015ebd:	add    BYTE PTR [eax],al
11015ebf:	cmp    al,BYTE PTR [eax]
11015ec1:	add    BYTE PTR [eax],al
11015ec3:	sbb    eax,DWORD PTR [eax]
11015ec5:	add    BYTE PTR [eax],al
11015ec7:	or     al,BYTE PTR [eax]
11015ec9:	add    BYTE PTR [eax],al
11015ecb:	add    al,BYTE PTR [eax]
	...
11015ee5:	add    BYTE PTR [eax],al
11015ee7:	add    al,BYTE PTR [eax]
11015ee9:	add    BYTE PTR [eax],al
11015eeb:	or     al,BYTE PTR [eax]
11015eed:	add    BYTE PTR [eax],al
11015eef:	sbb    al,0x0
11015ef1:	add    BYTE PTR [eax],al
11015ef3:	inc    DWORD PTR [eax]
11015ef5:	add    BYTE PTR [eax],al
11015ef7:	jmp    ebp
11015ef9:	adc    DWORD PTR [ebp-0x1],0xff476cc0
11015f00:	push   ds
11015f01:	adc    DWORD PTR [edx],ecx
11015f03:	inc    DWORD PTR [eax]
11015f05:	add    BYTE PTR [eax],al
11015f07:	push   DWORD PTR [esi]
11015f09:	xor    eax,0xededff35
11015f0e:	in     eax,dx
11015f0f:	(bad)  
11015f10:	(bad)  
11015f11:	(bad)  
11015f12:	std    
11015f13:	(bad)  
11015f14:	(bad)  
11015f15:	(bad)  
11015f16:	std    
11015f17:	(bad)  
11015f18:	(bad)  
11015f19:	(bad)  
11015f1a:	(bad)  
11015f1b:	(bad)  
11015f1c:	std    
11015f1d:	std    
11015f1e:	std    
11015f1f:	(bad)  
11015f20:	std    
11015f21:	repz out dx,eax
11015f23:	(bad)  
11015f24:	stc    
11015f25:	enter  0xffb1,0xf9
11015f29:	(bad)  
11015f2a:	scas   eax,DWORD PTR es:[edi]
11015f2b:	(bad)  
11015f2c:	stc    
11015f2d:	retf   0xffb5
11015f30:	stc    
11015f31:	int    0xb9
11015f33:	(bad)  
11015f34:	stc    
11015f35:	int3   
11015f36:	mov    eax,0xb4caf9ff
11015f3b:	(bad)  
11015f3c:	stc    
11015f3d:	les    ebp,FWORD PTR [edi+edi*8-0x5b4108]
11015f44:	idiv   DWORD PTR [eax-0x4e080065]
11015f4a:	xchg   edx,eax
11015f4b:	push   esi
11015f4d:	stos   BYTE PTR es:[edi],al
11015f4e:	mov    bh,bh
11015f50:	mul    BYTE PTR [ebp-0x5f0a0080]
11015f56:	jns    0x11015f57
11015f58:	cmc    
11015f59:	fwait
11015f5a:	jb     0x11015f5b
11015f5c:	hlt    
11015f5d:	xchg   edi,eax
11015f5e:	ins    DWORD PTR es:[edi],dx
11015f5f:	push   esp
11015f61:	xchg   esp,eax
11015f62:	imul   edi,edi,0xff6591f4
11015f68:	hlt    
11015f69:	(bad)  
11015f6a:	(bad)  
11015f6b:	push   esp
11015f6d:	mov    fs,WORD PTR [eax-0x1]
11015f70:	repz mov WORD PTR [esi-0x1],ds
11015f74:	repz mov ebx,DWORD PTR [edi+edi*8-0xb]
11015f79:	cwde   
11015f7a:	outs   dx,BYTE PTR ds:[esi]
11015f7b:	(bad)  
11015f7c:	std    
11015f7d:	in     al,dx
11015f7e:	in     al,0xff
11015f80:	(bad)  
11015f81:	(bad)  
11015f82:	std    
11015f83:	(bad)  
11015f84:	(bad)  
11015f85:	(bad)  
11015f86:	std    
11015f87:	(bad)  
11015f88:	(bad)  
11015f89:	(bad)  
11015f8a:	std    
11015f8b:	(bad)  
11015f8c:	(bad)  
11015f8d:	(bad)  
11015f8e:	std    
11015f8f:	(bad)  
11015f90:	in     al,dx
11015f91:	in     al,dx
11015f92:	in     al,dx
11015f93:	push   DWORD PTR ds:0xff3435
11015f99:	add    BYTE PTR [eax],al
11015f9b:	call   FWORD PTR [edi]
11015f9d:	adc    DWORD PTR [ebx],ecx
11015f9f:	inc    ecx
11015fa1:	ins    DWORD PTR es:[edi],dx
11015fa2:	dec    eax
11015fa3:	jmp    ebp
11015fa5:	adc    DWORD PTR [ebp-0x1],0xff000000
11015fac:	add    BYTE PTR [eax],al
11015fae:	add    bh,bh
11015fb0:	add    BYTE PTR [eax],al
11015fb2:	add    ch,al
11015fb4:	add    BYTE PTR [eax],al
11015fb6:	add    BYTE PTR [eax+0x66000000],bl
11015fbc:	add    BYTE PTR [eax],al
11015fbe:	add    BYTE PTR [edx],bh
11015fc0:	add    BYTE PTR [eax],al
11015fc2:	add    BYTE PTR [ebx],bl
11015fc4:	add    BYTE PTR [eax],al
11015fc6:	add    BYTE PTR [edx],cl
11015fc8:	add    BYTE PTR [eax],al
11015fca:	add    BYTE PTR [edx],al
	...
11015fe4:	add    BYTE PTR [eax],al
11015fe6:	add    BYTE PTR [edx],al
11015fe8:	add    BYTE PTR [eax],al
11015fea:	add    BYTE PTR [edx],cl
11015fec:	add    BYTE PTR [eax],al
11015fee:	add    BYTE PTR [ebx],bl
11015ff0:	add    BYTE PTR [eax],al
11015ff2:	add    bh,bh
11015ff4:	add    BYTE PTR [eax],al
11015ff6:	add    bh,bh
11015ff8:	in     eax,dx
11015ff9:	test   DWORD PTR [eax-0x1],ebx
11015ffc:	in     eax,0x81
11015ffe:	push   ebp
11015fff:	inc    eax
11016001:	ins    BYTE PTR es:[edi],dx
11016002:	inc    edi
11016003:	call   FWORD PTR [esi]
11016005:	adc    DWORD PTR [edx],ecx
11016007:	inc    DWORD PTR [eax]
11016009:	add    BYTE PTR [eax],al
1101600b:	push   DWORD PTR ds:0xeeff3535
11016011:	out    dx,al
11016012:	in     eax,dx
11016013:	(bad)  
11016014:	(bad)  
11016015:	(bad)  
11016016:	(bad)  
11016017:	(bad)  
11016018:	(bad)  
11016019:	(bad)  
1101601a:	(bad)  
1101601b:	(bad)  
1101601c:	(bad)  
1101601d:	(bad)  
1101601e:	(bad)  
1101601f:	(bad)  
11016020:	std    
11016021:	std    
11016022:	std    
11016023:	(bad)  
11016024:	std    
11016025:	div    bl
11016027:	(bad)  
11016028:	cli    
11016029:	retf   
1101602a:	mov    dh,0xff
1101602c:	clc    
1101602d:	mov    edi,0xc2f9ffa6
11016032:	test   eax,0xa9c2f9ff
11016037:	(bad)  
11016038:	clc    
11016039:	shl    BYTE PTR [edi-0x5d420701],0xff
11016040:	clc    
11016041:	mov    eax,0xb2f7ff9b
11016046:	xchg   ebx,eax
11016047:	push   edi
11016049:	lods   eax,DWORD PTR ds:[esi]
1101604a:	mov    edi,edi
1101604c:	mul    BYTE PTR [edi-0x5d09007d]
11016052:	jl     0x11016053
11016054:	cmc    
11016055:	popf   
11016056:	jne    0x11016057
11016058:	cmc    
11016059:	cdq    
1101605a:	outs   dx,DWORD PTR ds:[esi]
1101605b:	push   esp
1101605d:	xchg   ebp,eax
1101605e:	push   0xffffffff
11016060:	hlt    
11016061:	xchg   edx,eax
11016062:	addr16 push esp
11016065:	nop
11016066:	arpl   di,di
11016068:	hlt    
11016069:	(bad)  
1101606a:	pusha  
1101606b:	push   esp
1101606d:	lea    ebx,[edi-0x1]
11016070:	hlt    
11016071:	mov    WORD PTR [ebp-0x1],ds
11016074:	mul    BYTE PTR [ebx-0xf030082]
1101607a:	jmp    0xfeff:0xfefefeff
11016081:	(bad)  
11016082:	(bad)  
11016083:	(bad)  
11016084:	(bad)  
11016085:	(bad)  
11016086:	(bad)  
11016087:	(bad)  
11016088:	(bad)  
11016089:	(bad)  
1101608a:	std    
1101608b:	(bad)  
1101608c:	in     eax,dx
1101608d:	in     eax,dx
1101608e:	in     al,dx
1101608f:	push   DWORD PTR ds:0xff3435
11016095:	add    BYTE PTR [eax],al
11016097:	call   FWORD PTR [edi]
11016099:	adc    DWORD PTR [ebx],ecx
1101609b:	inc    edx
1101609d:	ins    DWORD PTR es:[edi],dx
1101609e:	dec    eax
1101609f:	jmp    ebp
110160a1:	adc    DWORD PTR [ebp-0x1],0xff5885ed
110160a8:	add    BYTE PTR [eax],al
110160aa:	add    bh,bh
110160ac:	add    BYTE PTR [eax],al
110160ae:	add    bh,bh
110160b0:	add    BYTE PTR [eax],al
110160b2:	add    ch,al
110160b4:	add    BYTE PTR [eax],al
110160b6:	add    BYTE PTR [eax+0x66000000],bl
110160bc:	add    BYTE PTR [eax],al
110160be:	add    BYTE PTR [edx],bh
110160c0:	add    BYTE PTR [eax],al
110160c2:	add    BYTE PTR [ebx],bl
110160c4:	add    BYTE PTR [eax],al
110160c6:	add    BYTE PTR [edx],cl
110160c8:	add    BYTE PTR [eax],al
110160ca:	add    BYTE PTR [edx],al
	...
110160e4:	add    BYTE PTR [eax],al
110160e6:	add    BYTE PTR [edx],al
110160e8:	add    BYTE PTR [eax],al
110160ea:	add    BYTE PTR [edx],cl
110160ec:	add    BYTE PTR [eax],al
110160ee:	add    BYTE PTR [ebx],bl
110160f0:	add    BYTE PTR [eax],al
110160f2:	add    bh,bh
110160f4:	add    BYTE PTR [eax],al
110160f6:	add    bh,bh
110160f8:	icebp  
110160f9:	mov    BYTE PTR [edx-0x1],bl
110160fc:	in     eax,dx
110160fd:	test   DWORD PTR [eax-0x1],ebx
11016100:	in     eax,0x81
11016102:	push   ebp
11016103:	inc    eax
11016105:	ins    BYTE PTR es:[edi],dx
11016106:	inc    edi
11016107:	call   FWORD PTR [esi]
11016109:	adc    DWORD PTR [edx],ecx
1101610b:	inc    DWORD PTR [eax]
1101610d:	add    BYTE PTR [eax],al
1101610f:	push   DWORD PTR [esi]
11016111:	ss xor eax,0xeeeeeeff
11016117:	(bad)  
11016118:	(bad)  
11016119:	(bad)  
1101611a:	std    
1101611b:	(bad)  
1101611c:	(bad)  
1101611d:	(bad)  
1101611e:	(bad)  
1101611f:	(bad)  
11016120:	(bad)  
11016121:	(bad)  
11016122:	std    
11016123:	(bad)  
11016124:	(bad)  
11016125:	(bad)  
11016126:	(bad)  
11016127:	(bad)  
11016128:	(bad)  
11016129:	cld    
1101612a:	sti    
1101612b:	(bad)  
1101612c:	sti    
1101612d:	fcmovne st,st(4)
1101612f:	(bad)  
11016130:	clc    
11016131:	mov    edx,0xb7f7ff9e
11016136:	call   0xf7ff:0x98b5f7ff
1101613d:	mov    bl,0x94
1101613f:	push   esi
11016141:	scas   eax,DWORD PTR es:[edi]
11016142:	(bad)  
11016143:	push   esi
11016145:	stos   DWORD PTR es:[edi],eax
11016146:	mov    edi,edi
11016148:	mul    BYTE PTR [edi-0x5d0a007d]
1101614e:	jl     0x1101614f
11016150:	cmc    
11016151:	popf   
11016152:	jbe    0x11016153
11016154:	cmc    
11016155:	call   0xff6b:0x96f4ff71
1101615c:	hlt    
1101615d:	xchg   ebx,eax
1101615e:	addr16 push esp
11016161:	nop
11016162:	fs push esp
11016165:	(bad)  
11016166:	popa   
11016167:	push   ebx
11016169:	lea    ebx,[edi-0x1]
1101616c:	hlt    
1101616d:	nop
1101616e:	arpl   di,di
11016170:	cli    
11016171:	les    ebp,FWORD PTR [edi+edi*8-0x50402]
11016178:	std    
11016179:	std    
1101617a:	std    
1101617b:	(bad)  
1101617c:	(bad)  
1101617d:	(bad)  
1101617e:	(bad)  
1101617f:	(bad)  
11016180:	(bad)  
11016181:	(bad)  
11016182:	(bad)  
11016183:	(bad)  
11016184:	(bad)  
11016185:	(bad)  
11016186:	(bad)  
11016187:	(bad)  
11016188:	in     al,dx
11016189:	in     al,dx
1101618a:	in     al,dx
1101618b:	push   DWORD PTR ds:0xff3435
11016191:	add    BYTE PTR [eax],al
11016193:	call   FWORD PTR [edi]
11016195:	adc    cl,BYTE PTR [ebx]
11016197:	inc    ecx
11016199:	ins    DWORD PTR es:[edi],dx
1101619a:	dec    eax
1101619b:	jmp    ebp
1101619d:	adc    DWORD PTR [ebp-0x1],0xff5885ed
110161a4:	icebp  
110161a5:	mov    BYTE PTR [edx-0x1],bl
110161a8:	add    BYTE PTR [eax],al
110161aa:	add    bh,bh
110161ac:	add    BYTE PTR [eax],al
110161ae:	add    bh,bh
110161b0:	add    BYTE PTR [eax],al
110161b2:	add    ch,al
110161b4:	add    BYTE PTR [eax],al
110161b6:	add    BYTE PTR [eax+0x66000000],bl
110161bc:	add    BYTE PTR [eax],al
110161be:	add    BYTE PTR [edx],bh
110161c0:	add    BYTE PTR [eax],al
110161c2:	add    BYTE PTR [ebx],bl
110161c4:	add    BYTE PTR [eax],al
110161c6:	add    BYTE PTR [edx],cl
110161c8:	add    BYTE PTR [eax],al
110161ca:	add    BYTE PTR [edx],al
	...
110161e4:	add    BYTE PTR [eax],al
110161e6:	add    BYTE PTR [edx],al
110161e8:	add    BYTE PTR [eax],al
110161ea:	add    BYTE PTR [edx],cl
110161ec:	add    BYTE PTR [eax],al
110161ee:	add    BYTE PTR [ebx],bl
110161f0:	add    BYTE PTR [eax],al
110161f2:	add    bh,bh
110161f4:	add    BYTE PTR [eax],al
110161f6:	add    bh,bh
110161f8:	xrelease mov DWORD PTR [ebx-0x1],ebx
110161fc:	icebp  
110161fd:	mov    BYTE PTR [edx-0x1],bl
11016200:	in     eax,dx
11016201:	test   DWORD PTR [eax-0x1],ebx
11016204:	in     eax,0x81
11016206:	push   ebp
11016207:	inc    eax
11016209:	ins    BYTE PTR es:[edi],dx
1101620a:	inc    edi
1101620b:	call   FWORD PTR ds:0xff0a11
11016211:	add    BYTE PTR [eax],al
11016213:	push   DWORD PTR [esi]
11016215:	ss xor eax,0xedeeeeff
1101621b:	(bad)  
1101621c:	(bad)  
1101621d:	(bad)  
1101621e:	(bad)  
1101621f:	(bad)  
11016220:	(bad)  
11016221:	(bad)  
11016222:	std    
11016223:	(bad)  
11016224:	(bad)  
11016225:	(bad)  
11016226:	(bad)  
11016227:	(bad)  
11016228:	(bad)  
11016229:	(bad)  
1101622a:	(bad)  
1101622b:	(bad)  
1101622c:	(bad)  
1101622d:	(bad)  
1101622e:	(bad)  
1101622f:	(bad)  
11016230:	std    
11016231:	cmc    
11016232:	lock (bad) 
11016234:	cli    
11016235:	sar    DWORD PTR [esi-0x6e4e0701],1
1101623b:	push   esi
1101623d:	stos   BYTE PTR es:[edi],al
1101623e:	xchg   edi,edi
11016240:	mul    BYTE PTR [edi-0x5b09007d]
11016246:	jg     0x11016247
11016248:	mul    BYTE PTR [eax-0x630a0086]
1101624e:	je     0x1101624f
11016250:	cmc    
11016251:	cdq    
11016252:	jo     0x11016253
11016254:	cmc    
11016255:	xchg   esi,eax
11016256:	imul   edi,edi,0xfffffff4
11016259:	xchg   ebx,eax
1101625a:	addr16 push esp
1101625d:	xchg   ecx,eax
1101625e:	fs push esp
11016261:	(bad)  
11016262:	popa   
11016263:	push   ebp
11016265:	xchg   esp,eax
11016266:	push   0xa2bef9ff
1101626b:	(bad)  
1101626c:	std    
1101626d:	lock jmp 0xfeff:0xfefefeff
11016275:	(bad)  
11016276:	std    
11016277:	(bad)  
11016278:	(bad)  
11016279:	(bad)  
1101627a:	(bad)  
1101627b:	(bad)  
1101627c:	(bad)  
1101627d:	(bad)  
1101627e:	(bad)  
1101627f:	(bad)  
11016280:	(bad)  
11016281:	(bad)  
11016282:	(bad)  
11016283:	(bad)  
11016284:	in     al,dx
11016285:	in     al,dx
11016286:	in     al,dx
11016287:	push   DWORD PTR ds:0xff3435
1101628d:	add    BYTE PTR [eax],al
1101628f:	call   FWORD PTR [edi]
11016291:	adc    DWORD PTR [ebx],ecx
11016293:	inc    ecx
11016295:	ins    DWORD PTR es:[edi],dx
11016296:	dec    eax
11016297:	jmp    ebp
11016299:	adc    DWORD PTR [ebp-0x1],0xff5885ed
110162a0:	icebp  
110162a1:	mov    BYTE PTR [edx-0x1],bl
110162a4:	xrelease mov DWORD PTR [edx-0x1],ebx
110162a8:	add    BYTE PTR [eax],al
110162aa:	add    bh,bh
110162ac:	add    BYTE PTR [eax],al
110162ae:	add    bh,bh
110162b0:	add    BYTE PTR [eax],al
110162b2:	add    ch,al
110162b4:	add    BYTE PTR [eax],al
110162b6:	add    BYTE PTR [eax+0x66000000],bl
110162bc:	add    BYTE PTR [eax],al
110162be:	add    BYTE PTR [edx],bh
110162c0:	add    BYTE PTR [eax],al
110162c2:	add    BYTE PTR [ebx],bl
110162c4:	add    BYTE PTR [eax],al
110162c6:	add    BYTE PTR [edx],cl
110162c8:	add    BYTE PTR [eax],al
110162ca:	add    BYTE PTR [edx],al
	...
110162e4:	add    BYTE PTR [eax],al
110162e6:	add    BYTE PTR [edx],al
110162e8:	add    BYTE PTR [eax],al
110162ea:	add    BYTE PTR [edx],cl
110162ec:	add    BYTE PTR [eax],al
110162ee:	add    BYTE PTR [ebx],bl
110162f0:	add    BYTE PTR [eax],al
110162f2:	add    bh,bh
110162f4:	add    BYTE PTR [eax],al
110162f6:	add    bh,bh
110162f8:	hlt    
110162f9:	mov    bl,BYTE PTR [ebx-0x1]
110162fc:	xrelease mov DWORD PTR [ebx-0x1],ebx
11016300:	icebp  
11016301:	mov    BYTE PTR [edx-0x1],bl
11016304:	in     eax,dx
11016305:	test   DWORD PTR [eax-0x1],ebx
11016308:	in     eax,0x81
1101630a:	push   ebp
1101630b:	inc    eax
1101630d:	ins    BYTE PTR es:[edi],dx
1101630e:	inc    edi
1101630f:	call   FWORD PTR [esi]
11016311:	adc    DWORD PTR [edx],ecx
11016313:	inc    DWORD PTR [eax]
11016315:	add    BYTE PTR [eax],al
11016317:	push   DWORD PTR [esi]
11016319:	ss xor eax,0xedededff
1101631f:	(bad)  
11016320:	(bad)  
11016321:	(bad)  
11016322:	std    
11016323:	(bad)  
11016324:	(bad)  
11016325:	(bad)  
11016326:	(bad)  
11016327:	(bad)  
11016328:	(bad)  
11016329:	(bad)  
1101632a:	std    
1101632b:	(bad)  
1101632c:	(bad)  
1101632d:	(bad)  
1101632e:	(bad)  
1101632f:	(bad)  
11016330:	(bad)  
11016331:	(bad)  
11016332:	std    
11016333:	(bad)  
11016334:	(bad)  
11016335:	(bad)  
11016336:	(bad)  
11016337:	(bad)  
11016338:	std    
11016339:	sti    
1101633a:	stc    
1101633b:	(bad)  
1101633c:	cld    
1101633d:	loop   0x11016315
1101633f:	(bad)  
11016340:	cli    
11016341:	retf   0xffb4
11016344:	clc    
11016345:	mov    dh,0x98
11016347:	push   edi
11016349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1101634a:	cmp    edi,0xfffffff6
1101634d:	sahf   
1101634e:	jbe    0x1101634f
11016350:	cmc    
11016351:	fwait
11016352:	jb     0x11016353
11016354:	mul    DWORD PTR [eax-0x53080087]
1101635a:	mov    bh,bh
1101635c:	stc    
1101635d:	shl    BYTE PTR [esi-0x33240401],0xff
11016364:	(bad)  
11016365:	cli    
11016366:	clc    
11016367:	(bad)  
11016368:	(bad)  
11016369:	(bad)  
1101636a:	std    
1101636b:	(bad)  
1101636c:	std    
1101636d:	std    
1101636e:	std    
1101636f:	(bad)  
11016370:	(bad)  
11016371:	(bad)  
11016372:	std    
11016373:	(bad)  
11016374:	(bad)  
11016375:	(bad)  
11016376:	std    
11016377:	(bad)  
11016378:	std    
11016379:	std    
1101637a:	std    
1101637b:	(bad)  
1101637c:	(bad)  
1101637d:	(bad)  
1101637e:	(bad)  
1101637f:	(bad)  
11016380:	in     al,dx
11016381:	in     al,dx
11016382:	in     al,dx
11016383:	push   DWORD PTR ds:0xff3435
11016389:	add    BYTE PTR [eax],al
1101638b:	call   FWORD PTR [edi]
1101638d:	adc    DWORD PTR [ebx],ecx
1101638f:	inc    edx
11016391:	ins    DWORD PTR es:[edi],dx
11016392:	dec    eax
11016393:	jmp    ebp
11016395:	adc    DWORD PTR [ebp-0x1],0xff5885ed
1101639c:	icebp  
1101639d:	mov    BYTE PTR [edx-0x1],bl
110163a0:	xrelease mov DWORD PTR [edx-0x1],ebx
110163a4:	hlt    
110163a5:	mov    bl,BYTE PTR [ebx-0x1]
110163a8:	add    BYTE PTR [eax],al
110163aa:	add    bh,bh
110163ac:	add    BYTE PTR [eax],al
110163ae:	add    bh,bh
110163b0:	add    BYTE PTR [eax],al
110163b2:	add    ch,al
110163b4:	add    BYTE PTR [eax],al
110163b6:	add    BYTE PTR [eax+0x66000000],bl
110163bc:	add    BYTE PTR [eax],al
110163be:	add    BYTE PTR [edx],bh
110163c0:	add    BYTE PTR [eax],al
110163c2:	add    BYTE PTR [ebx],bl
110163c4:	add    BYTE PTR [eax],al
110163c6:	add    BYTE PTR [edx],cl
110163c8:	add    BYTE PTR [eax],al
110163ca:	add    BYTE PTR [edx],al
	...
110163e4:	add    BYTE PTR [eax],al
110163e6:	add    BYTE PTR [edx],al
110163e8:	add    BYTE PTR [eax],al
110163ea:	add    BYTE PTR [edx],cl
110163ec:	add    BYTE PTR [eax],al
110163ee:	add    BYTE PTR [ebx],bl
110163f0:	add    BYTE PTR [eax],al
110163f2:	add    bh,bh
110163f4:	add    BYTE PTR [eax],al
110163f6:	add    bh,bh
110163f8:	hlt    
110163f9:	mov    bl,BYTE PTR [ebx-0x1]
110163fc:	hlt    
110163fd:	mov    bl,BYTE PTR [ebx-0x1]
11016400:	xrelease mov DWORD PTR [ebx-0x1],ebx
11016404:	icebp  
11016405:	mov    BYTE PTR [edx-0x1],bl
11016408:	in     eax,dx
11016409:	test   DWORD PTR [eax-0x1],ebx
1101640c:	in     eax,0x81
1101640e:	push   ebp
1101640f:	inc    eax
11016411:	ins    BYTE PTR es:[edi],dx
11016412:	inc    edi
11016413:	call   FWORD PTR [esi]
11016415:	adc    DWORD PTR [edx],ecx
11016417:	inc    DWORD PTR [eax]
11016419:	add    BYTE PTR [eax],al
1101641b:	push   DWORD PTR ds:0xedff3535
11016421:	in     eax,dx
11016422:	in     eax,dx
11016423:	(bad)  
11016424:	(bad)  
11016425:	(bad)  
11016426:	(bad)  
11016427:	(bad)  
11016428:	(bad)  
11016429:	(bad)  
1101642a:	std    
1101642b:	(bad)  
1101642c:	(bad)  
1101642d:	(bad)  
1101642e:	std    
1101642f:	(bad)  
11016430:	(bad)  
11016431:	(bad)  
11016432:	std    
11016433:	(bad)  
11016434:	(bad)  
11016435:	(bad)  
11016436:	(bad)  
11016437:	(bad)  
11016438:	(bad)  
11016439:	(bad)  
1101643a:	std    
1101643b:	(bad)  
1101643c:	(bad)  
1101643d:	(bad)  
1101643e:	std    
1101643f:	(bad)  
11016440:	(bad)  
11016441:	(bad)  
11016442:	std    
11016443:	(bad)  
11016444:	std    
11016445:	std    
11016446:	std    
11016447:	(bad)  
11016448:	std    
11016449:	std    
1101644a:	std    
1101644b:	(bad)  
1101644c:	(bad)  
1101644d:	(bad)  
1101644e:	std    
1101644f:	(bad)  
11016450:	std    
11016451:	std    
11016452:	std    
11016453:	(bad)  
11016454:	std    
11016455:	std    
11016456:	std    
11016457:	(bad)  
11016458:	(bad)  
11016459:	(bad)  
1101645a:	(bad)  
1101645b:	(bad)  
1101645c:	std    
1101645d:	std    
1101645e:	std    
1101645f:	(bad)  
11016460:	(bad)  
11016461:	(bad)  
11016462:	(bad)  
11016463:	(bad)  
11016464:	(bad)  
11016465:	(bad)  
11016466:	(bad)  
11016467:	(bad)  
11016468:	std    
11016469:	std    
1101646a:	std    
1101646b:	(bad)  
1101646c:	std    
1101646d:	std    
1101646e:	std    
1101646f:	(bad)  
11016470:	(bad)  
11016471:	(bad)  
11016472:	(bad)  
11016473:	(bad)  
11016474:	(bad)  
11016475:	(bad)  
11016476:	(bad)  
11016477:	(bad)  
11016478:	std    
11016479:	std    
1101647a:	std    
1101647b:	(bad)  
1101647c:	in     al,dx
1101647d:	in     al,dx
1101647e:	in     al,dx
1101647f:	push   DWORD PTR ds:0xff3435
11016485:	add    BYTE PTR [eax],al
11016487:	call   FWORD PTR [edi]
11016489:	adc    DWORD PTR [ebx],ecx
1101648b:	inc    ecx
1101648d:	ins    DWORD PTR es:[edi],dx
1101648e:	dec    eax
1101648f:	jmp    ebp
11016491:	adc    DWORD PTR [ebp-0x1],0xff5885ed
11016498:	icebp  
11016499:	mov    BYTE PTR [edx-0x1],bl
1101649c:	xrelease mov DWORD PTR [edx-0x1],ebx
110164a0:	hlt    
110164a1:	mov    bl,BYTE PTR [ebx-0x1]
110164a4:	hlt    
110164a5:	mov    bl,BYTE PTR [ebx-0x1]
110164a8:	add    BYTE PTR [eax],al
110164aa:	add    bh,bh
110164ac:	add    BYTE PTR [eax],al
110164ae:	add    bh,bh
110164b0:	add    BYTE PTR [eax],al
110164b2:	add    ch,al
110164b4:	add    BYTE PTR [eax],al
110164b6:	add    BYTE PTR [eax+0x66000000],bl
110164bc:	add    BYTE PTR [eax],al
110164be:	add    BYTE PTR [edx],bh
110164c0:	add    BYTE PTR [eax],al
110164c2:	add    BYTE PTR [ebx],bl
110164c4:	add    BYTE PTR [eax],al
110164c6:	add    BYTE PTR [edx],cl
110164c8:	add    BYTE PTR [eax],al
110164ca:	add    BYTE PTR [edx],al
	...
110164e4:	add    BYTE PTR [eax],al
110164e6:	add    BYTE PTR [edx],al
110164e8:	add    BYTE PTR [eax],al
110164ea:	add    BYTE PTR [edx],cl
110164ec:	add    BYTE PTR [eax],al
110164ee:	add    BYTE PTR [ebx],bl
110164f0:	add    BYTE PTR [eax],al
110164f2:	add    bh,bh
110164f4:	add    BYTE PTR [eax],al
110164f6:	add    bh,bh
110164f8:	hlt    
110164f9:	mov    bl,BYTE PTR [ebx-0x1]
110164fc:	hlt    
110164fd:	mov    bl,BYTE PTR [ebx-0x1]
11016500:	hlt    
11016501:	mov    bl,BYTE PTR [ebx-0x1]
11016504:	xrelease mov DWORD PTR [ebx-0x1],ebx
11016508:	icebp  
11016509:	mov    BYTE PTR [edx-0x1],bl
1101650c:	in     eax,dx
1101650d:	test   DWORD PTR [eax-0x1],ebx
11016510:	in     eax,0x81
11016512:	push   ebp
11016513:	inc    eax
11016515:	ins    BYTE PTR es:[edi],dx
11016516:	inc    edi
11016517:	call   FWORD PTR [esi]
11016519:	adc    DWORD PTR [edx],ecx
1101651b:	inc    DWORD PTR [eax]
1101651d:	add    BYTE PTR [eax],al
1101651f:	push   DWORD PTR [esi]
11016521:	ss xor eax,0xedededff
11016527:	(bad)  
11016528:	(bad)  
11016529:	(bad)  
1101652a:	(bad)  
1101652b:	(bad)  
1101652c:	(bad)  
1101652d:	(bad)  
1101652e:	(bad)  
1101652f:	(bad)  
11016530:	std    
11016531:	std    
11016532:	std    
11016533:	(bad)  
11016534:	(bad)  
11016535:	(bad)  
11016536:	(bad)  
11016537:	(bad)  
11016538:	(bad)  
11016539:	(bad)  
1101653a:	std    
1101653b:	(bad)  
1101653c:	(bad)  
1101653d:	(bad)  
1101653e:	(bad)  
1101653f:	(bad)  
11016540:	(bad)  
11016541:	(bad)  
11016542:	std    
11016543:	(bad)  
11016544:	(bad)  
11016545:	(bad)  
11016546:	std    
11016547:	(bad)  
11016548:	std    
11016549:	std    
1101654a:	std    
1101654b:	(bad)  
1101654c:	(bad)  
1101654d:	(bad)  
1101654e:	(bad)  
1101654f:	(bad)  
11016550:	(bad)  
11016551:	(bad)  
11016552:	std    
11016553:	(bad)  
11016554:	std    
11016555:	std    
11016556:	std    
11016557:	(bad)  
11016558:	(bad)  
11016559:	(bad)  
1101655a:	(bad)  
1101655b:	(bad)  
1101655c:	(bad)  
1101655d:	(bad)  
1101655e:	(bad)  
1101655f:	(bad)  
11016560:	(bad)  
11016561:	(bad)  
11016562:	(bad)  
11016563:	(bad)  
11016564:	(bad)  
11016565:	(bad)  
11016566:	(bad)  
11016567:	(bad)  
11016568:	(bad)  
11016569:	(bad)  
1101656a:	std    
1101656b:	(bad)  
1101656c:	std    
1101656d:	std    
1101656e:	std    
1101656f:	(bad)  
11016570:	(bad)  
11016571:	(bad)  
11016572:	(bad)  
11016573:	(bad)  
11016574:	(bad)  
11016575:	(bad)  
11016576:	(bad)  
11016577:	(bad)  
11016578:	in     al,dx
11016579:	in     al,dx
1101657a:	in     al,dx
1101657b:	push   DWORD PTR [esp+esi*1]
1101657e:	xor    al,0xff
11016580:	add    BYTE PTR [eax],al
11016582:	add    bh,bh
11016584:	pop    ds
11016585:	adc    DWORD PTR [ebx],ecx
11016587:	inc    ecx
11016589:	ins    DWORD PTR es:[edi],dx
1101658a:	dec    eax
1101658b:	jmp    ebp
1101658d:	adc    DWORD PTR [ebp-0x1],0xff5885ed
11016594:	icebp  
11016595:	mov    BYTE PTR [edx-0x1],bl
11016598:	xrelease mov DWORD PTR [edx-0x1],ebx
1101659c:	hlt    
1101659d:	mov    bl,BYTE PTR [ebx-0x1]
110165a0:	hlt    
110165a1:	mov    bl,BYTE PTR [ebx-0x1]
110165a4:	hlt    
110165a5:	mov    bl,BYTE PTR [ebx-0x1]
110165a8:	add    BYTE PTR [eax],al
110165aa:	add    bh,bh
110165ac:	add    BYTE PTR [eax],al
110165ae:	add    bh,bh
110165b0:	add    BYTE PTR [eax],al
110165b2:	add    bl,al
110165b4:	add    BYTE PTR [eax],al
110165b6:	add    BYTE PTR [edi+0x65000000],dl
110165bc:	add    BYTE PTR [eax],al
110165be:	add    BYTE PTR [edx],bh
110165c0:	add    BYTE PTR [eax],al
110165c2:	add    BYTE PTR [ebx],bl
110165c4:	add    BYTE PTR [eax],al
110165c6:	add    BYTE PTR [edx],cl
110165c8:	add    BYTE PTR [eax],al
110165ca:	add    BYTE PTR [edx],al
	...
110165e4:	add    BYTE PTR [eax],al
110165e6:	add    BYTE PTR [edx],al
110165e8:	add    BYTE PTR [eax],al
110165ea:	add    BYTE PTR [edx],cl
110165ec:	add    BYTE PTR [eax],al
110165ee:	add    BYTE PTR [edx],bl
110165f0:	add    BYTE PTR [eax],al
110165f2:	add    bh,bh
110165f4:	add    BYTE PTR [eax],al
110165f6:	add    bh,bh
110165f8:	hlt    
110165f9:	mov    bl,BYTE PTR [ebx-0x1]
110165fc:	hlt    
110165fd:	mov    bl,BYTE PTR [ebx-0x1]
11016600:	hlt    
11016601:	mov    bl,BYTE PTR [ebx-0x1]
11016604:	hlt    
11016605:	mov    bl,BYTE PTR [ebx-0x1]
11016608:	xrelease mov DWORD PTR [ebx-0x1],ebx
1101660c:	icebp  
1101660d:	mov    BYTE PTR [edx-0x1],bl
11016610:	in     eax,dx
11016611:	test   DWORD PTR [eax-0x1],ebx
11016614:	in     eax,0x81
11016616:	push   ebp
11016617:	inc    eax
11016619:	ins    BYTE PTR es:[edi],dx
1101661a:	inc    edi
1101661b:	call   FWORD PTR [esi]
1101661d:	adc    DWORD PTR [edx],ecx
1101661f:	inc    DWORD PTR [eax]
11016621:	add    BYTE PTR [eax],al
11016623:	push   DWORD PTR ds:0xeeff3535
11016629:	out    dx,al
1101662a:	in     eax,dx
1101662b:	(bad)  
1101662c:	(bad)  
1101662d:	(bad)  
1101662e:	(bad)  
1101662f:	(bad)  
11016630:	std    
11016631:	std    
11016632:	std    
11016633:	(bad)  
11016634:	(bad)  
11016635:	(bad)  
11016636:	(bad)  
11016637:	(bad)  
11016638:	(bad)  
11016639:	(bad)  
1101663a:	(bad)  
1101663b:	(bad)  
1101663c:	(bad)  
1101663d:	(bad)  
1101663e:	std    
1101663f:	(bad)  
11016640:	(bad)  
11016641:	(bad)  
11016642:	std    
11016643:	(bad)  
11016644:	(bad)  
11016645:	(bad)  
11016646:	std    
11016647:	(bad)  
11016648:	std    
11016649:	std    
1101664a:	std    
1101664b:	(bad)  
1101664c:	(bad)  
1101664d:	(bad)  
1101664e:	(bad)  
1101664f:	(bad)  
11016650:	(bad)  
11016651:	(bad)  
11016652:	std    
11016653:	(bad)  
11016654:	std    
11016655:	std    
11016656:	std    
11016657:	(bad)  
11016658:	(bad)  
11016659:	(bad)  
1101665a:	(bad)  
1101665b:	(bad)  
1101665c:	(bad)  
1101665d:	(bad)  
1101665e:	(bad)  
1101665f:	(bad)  
11016660:	(bad)  
11016661:	(bad)  
11016662:	(bad)  
11016663:	(bad)  
11016664:	(bad)  
11016665:	(bad)  
11016666:	(bad)  
11016667:	(bad)  
11016668:	std    
11016669:	std    
1101666a:	std    
1101666b:	(bad)  
1101666c:	std    
1101666d:	std    
1101666e:	std    
1101666f:	(bad)  
11016670:	(bad)  
11016671:	(bad)  
11016672:	(bad)  
11016673:	(bad)  
11016674:	in     al,dx
11016675:	in     al,dx
11016676:	in     al,dx
11016677:	push   DWORD PTR ds:0xff3435
1101667d:	add    BYTE PTR [eax],al
1101667f:	call   FWORD PTR [edi]
11016681:	adc    DWORD PTR [ebx],ecx
11016683:	inc    edx
11016685:	ins    DWORD PTR es:[edi],dx
11016686:	dec    eax
11016687:	jmp    ebp
11016689:	adc    DWORD PTR [ebp-0x1],0xff5885ed
11016690:	icebp  
11016691:	mov    BYTE PTR [edx-0x1],bl
11016694:	xrelease mov DWORD PTR [edx-0x1],ebx
11016698:	hlt    
11016699:	mov    bl,BYTE PTR [ebx-0x1]
1101669c:	hlt    
1101669d:	mov    bl,BYTE PTR [ebx-0x1]
110166a0:	hlt    
110166a1:	mov    bl,BYTE PTR [ebx-0x1]
110166a4:	hlt    
110166a5:	mov    bl,BYTE PTR [ebx-0x1]
110166a8:	add    BYTE PTR [eax],al
110166aa:	add    bh,bh
110166ac:	add    BYTE PTR [eax],al
110166ae:	add    bh,bh
110166b0:	add    BYTE PTR [eax],al
110166b2:	add    BYTE PTR [ebp-0x6d000000],bh
110166b8:	add    BYTE PTR [eax],al
110166ba:	add    BYTE PTR [edx+0x0],ah
110166bd:	add    BYTE PTR [eax],al
110166bf:	cmp    BYTE PTR [eax],al
110166c1:	add    BYTE PTR [eax],al
110166c3:	sbb    al,BYTE PTR [eax]
110166c5:	add    BYTE PTR [eax],al
110166c7:	or     al,BYTE PTR [eax]
110166c9:	add    BYTE PTR [eax],al
110166cb:	add    al,BYTE PTR [eax]
	...
110166e5:	add    BYTE PTR [eax],al
110166e7:	add    al,BYTE PTR [eax]
110166e9:	add    BYTE PTR [eax],al
110166eb:	or     DWORD PTR [eax],eax
110166ed:	add    BYTE PTR [eax],al
110166ef:	sbb    BYTE PTR [eax],al
110166f1:	add    BYTE PTR [eax],al
110166f3:	inc    DWORD PTR [eax]
110166f5:	add    BYTE PTR [eax],al
110166f7:	push   esp
110166f9:	mov    bl,BYTE PTR [ebx-0x1]
110166fc:	hlt    
110166fd:	mov    bl,BYTE PTR [ebx-0x1]
11016700:	hlt    
11016701:	mov    bl,BYTE PTR [ebx-0x1]
11016704:	hlt    
11016705:	mov    bl,BYTE PTR [ebx-0x1]
11016708:	hlt    
11016709:	mov    bl,BYTE PTR [ebx-0x1]
1101670c:	xrelease mov DWORD PTR [ebx-0x1],ebx
11016710:	icebp  
11016711:	mov    BYTE PTR [edx-0x1],bl
11016714:	in     eax,dx
11016715:	test   DWORD PTR [eax-0x1],ebx
11016718:	in     eax,0x81
1101671a:	push   ebp
1101671b:	inc    eax
1101671d:	ins    BYTE PTR es:[edi],dx
1101671e:	inc    edi
1101671f:	call   FWORD PTR [esi]
11016721:	adc    DWORD PTR [edx],ecx
11016723:	inc    DWORD PTR [eax]
11016725:	add    BYTE PTR [eax],al
11016727:	push   DWORD PTR ds:0xeeff3535
1101672d:	out    dx,al
1101672e:	in     eax,dx
1101672f:	(bad)  
11016730:	(bad)  
11016731:	(bad)  
11016732:	std    
11016733:	(bad)  
11016734:	(bad)  
11016735:	(bad)  
11016736:	(bad)  
11016737:	(bad)  
11016738:	(bad)  
11016739:	(bad)  
1101673a:	std    
1101673b:	(bad)  
1101673c:	(bad)  
1101673d:	(bad)  
1101673e:	(bad)  
1101673f:	(bad)  
11016740:	(bad)  
11016741:	(bad)  
11016742:	(bad)  
11016743:	(bad)  
11016744:	(bad)  
11016745:	(bad)  
11016746:	(bad)  
11016747:	(bad)  
11016748:	(bad)  
11016749:	(bad)  
1101674a:	(bad)  
1101674b:	(bad)  
1101674c:	(bad)  
1101674d:	(bad)  
1101674e:	(bad)  
1101674f:	(bad)  
11016750:	(bad)  
11016751:	(bad)  
11016752:	(bad)  
11016753:	(bad)  
11016754:	std    
11016755:	std    
11016756:	std    
11016757:	(bad)  
11016758:	(bad)  
11016759:	(bad)  
1101675a:	(bad)  
1101675b:	(bad)  
1101675c:	(bad)  
1101675d:	(bad)  
1101675e:	(bad)  
1101675f:	(bad)  
11016760:	(bad)  
11016761:	(bad)  
11016762:	(bad)  
11016763:	(bad)  
11016764:	(bad)  
11016765:	(bad)  
11016766:	(bad)  
11016767:	(bad)  
11016768:	(bad)  
11016769:	(bad)  
1101676a:	(bad)  
1101676b:	(bad)  
1101676c:	std    
1101676d:	std    
1101676e:	std    
1101676f:	(bad)  
11016770:	in     al,dx
11016771:	in     al,dx
11016772:	in     al,dx
11016773:	push   DWORD PTR [esp+esi*1]
11016776:	xor    al,0xff
11016778:	add    BYTE PTR [eax],al
1101677a:	add    bh,bh
1101677c:	pop    ds
1101677d:	adc    DWORD PTR [ebx],ecx
1101677f:	inc    ecx
11016781:	ins    DWORD PTR es:[edi],dx
11016782:	dec    eax
11016783:	jmp    ebp
11016785:	adc    DWORD PTR [ebp-0x1],0xff5885ed
1101678c:	icebp  
1101678d:	mov    BYTE PTR [edx-0x1],bl
11016790:	xrelease mov DWORD PTR [edx-0x1],ebx
11016794:	hlt    
11016795:	mov    bl,BYTE PTR [ebx-0x1]
11016798:	hlt    
11016799:	mov    bl,BYTE PTR [ebx-0x1]
1101679c:	hlt    
1101679d:	mov    bl,BYTE PTR [ebx-0x1]
110167a0:	hlt    
110167a1:	mov    bl,BYTE PTR [ebx-0x1]
110167a4:	hlt    
110167a5:	mov    bl,BYTE PTR [ebx-0x1]
110167a8:	add    BYTE PTR [eax],al
110167aa:	add    bh,bh
110167ac:	add    BYTE PTR [eax],al
110167ae:	add    bh,bh
110167b0:	add    BYTE PTR [eax],al
110167b2:	add    BYTE PTR [eax-0x78000000],dh
110167b8:	add    BYTE PTR [eax],al
110167ba:	add    BYTE PTR [ebx+0x0],bl
110167bd:	add    BYTE PTR [eax],al
110167bf:	xor    al,0x0
110167c1:	add    BYTE PTR [eax],al
110167c3:	sbb    BYTE PTR [eax],al
110167c5:	add    BYTE PTR [eax],al
110167c7:	or     DWORD PTR [eax],eax
110167c9:	add    BYTE PTR [eax],al
110167cb:	add    al,BYTE PTR [eax]
	...
110167e5:	add    BYTE PTR [eax],al
110167e7:	add    al,BYTE PTR [eax]
110167e9:	add    BYTE PTR [eax],al
110167eb:	or     BYTE PTR [eax],al
110167ed:	add    BYTE PTR [eax],al
110167ef:	adc    eax,0xff000000
110167f4:	add    BYTE PTR [eax],al
110167f6:	add    bh,bh
110167f8:	hlt    
110167f9:	mov    bl,BYTE PTR [ebx-0x1]
110167fc:	hlt    
110167fd:	mov    bl,BYTE PTR [ebx-0x1]
11016800:	hlt    
11016801:	mov    bl,BYTE PTR [ebx-0x1]
11016804:	hlt    
11016805:	mov    bl,BYTE PTR [ebx-0x1]
11016808:	hlt    
11016809:	mov    bl,BYTE PTR [ebx-0x1]
1101680c:	hlt    
1101680d:	mov    bl,BYTE PTR [ebx-0x1]
11016810:	xrelease mov DWORD PTR [ebx-0x1],ebx
11016814:	icebp  
11016815:	mov    BYTE PTR [edx-0x1],bl
11016818:	in     eax,dx
11016819:	test   DWORD PTR [eax-0x1],ebx
1101681c:	in     eax,0x81
1101681e:	push   ebp
1101681f:	inc    eax
11016821:	ins    BYTE PTR es:[edi],dx
11016822:	inc    edi
11016823:	call   FWORD PTR ds:0xff0a11
11016829:	add    BYTE PTR [eax],al
1101682b:	push   DWORD PTR ds:0xedff3535
11016831:	in     eax,dx
11016832:	in     eax,dx
11016833:	(bad)  
11016834:	(bad)  
11016835:	(bad)  
11016836:	(bad)  
11016837:	(bad)  
11016838:	std    
11016839:	std    
1101683a:	std    
1101683b:	(bad)  
1101683c:	(bad)  
1101683d:	(bad)  
1101683e:	std    
1101683f:	(bad)  
11016840:	(bad)  
11016841:	(bad)  
11016842:	(bad)  
11016843:	(bad)  
11016844:	(bad)  
11016845:	(bad)  
11016846:	std    
11016847:	(bad)  
11016848:	(bad)  
11016849:	(bad)  
1101684a:	std    
1101684b:	(bad)  
1101684c:	(bad)  
1101684d:	(bad)  
1101684e:	(bad)  
1101684f:	(bad)  
11016850:	std    
11016851:	std    
11016852:	std    
11016853:	(bad)  
11016854:	std    
11016855:	std    
11016856:	std    
11016857:	(bad)  
11016858:	(bad)  
11016859:	(bad)  
1101685a:	(bad)  
1101685b:	(bad)  
1101685c:	(bad)  
1101685d:	(bad)  
1101685e:	std    
1101685f:	(bad)  
11016860:	(bad)  
11016861:	(bad)  
11016862:	(bad)  
11016863:	(bad)  
11016864:	(bad)  
11016865:	(bad)  
11016866:	(bad)  
11016867:	(bad)  
11016868:	(bad)  
11016869:	(bad)  
1101686a:	(bad)  
1101686b:	(bad)  
1101686c:	in     al,dx
1101686d:	in     al,dx
1101686e:	in     al,dx
1101686f:	push   DWORD PTR [esp+esi*1]
11016872:	xor    al,0xff
11016874:	add    BYTE PTR [eax],al
11016876:	add    bh,bh
11016878:	pop    ds
11016879:	adc    DWORD PTR [ebx],ecx
1101687b:	inc    ecx
1101687d:	ins    DWORD PTR es:[edi],dx
1101687e:	inc    edi
1101687f:	jmp    ebp
11016881:	adc    DWORD PTR [ebp-0x1],0xff5885ed
11016888:	icebp  
11016889:	mov    BYTE PTR [edx-0x1],bl
1101688c:	xrelease mov DWORD PTR [edx-0x1],ebx
11016890:	hlt    
11016891:	mov    bl,BYTE PTR [ebx-0x1]
11016894:	hlt    
11016895:	mov    bl,BYTE PTR [ebx-0x1]
11016898:	hlt    
11016899:	mov    bl,BYTE PTR [ebx-0x1]
1101689c:	hlt    
1101689d:	mov    bl,BYTE PTR [ebx-0x1]
110168a0:	hlt    
110168a1:	mov    bl,BYTE PTR [ebx-0x1]
110168a4:	hlt    
110168a5:	mov    bl,BYTE PTR [ebx-0x1]
110168a8:	add    BYTE PTR [eax],al
110168aa:	add    bh,bh
110168ac:	add    BYTE PTR [eax],al
110168ae:	add    bh,bh
110168b0:	add    BYTE PTR [eax],al
110168b2:	add    BYTE PTR [eax+0x76000000],bl
110168b8:	add    BYTE PTR [eax],al
110168ba:	add    BYTE PTR [edi+0x0],cl
110168bd:	add    BYTE PTR [eax],al
110168bf:	sub    eax,0x15000000
110168c4:	add    BYTE PTR [eax],al
110168c6:	add    BYTE PTR [eax],cl
110168c8:	add    BYTE PTR [eax],al
110168ca:	add    BYTE PTR [edx],al
	...
110168e4:	add    BYTE PTR [eax],al
110168e6:	add    BYTE PTR [edx],al
110168e8:	add    BYTE PTR [eax],al
110168ea:	add    BYTE PTR [esi],al
110168ec:	add    BYTE PTR [eax],al
110168ee:	add    BYTE PTR [eax],dl
110168f0:	add    BYTE PTR [eax],al
110168f2:	add    bh,bh
110168f4:	add    BYTE PTR [eax],al
110168f6:	add    bh,bh
110168f8:	hlt    
110168f9:	mov    bl,BYTE PTR [ebx-0x1]
110168fc:	hlt    
110168fd:	mov    bl,BYTE PTR [ebx-0x1]
11016900:	hlt    
11016901:	mov    bl,BYTE PTR [ebx-0x1]
11016904:	hlt    
11016905:	mov    bl,BYTE PTR [ebx-0x1]
11016908:	hlt    
11016909:	mov    bl,BYTE PTR [ebx-0x1]
1101690c:	hlt    
1101690d:	mov    bl,BYTE PTR [ebx-0x1]
11016910:	hlt    
11016911:	mov    bl,BYTE PTR [ebx-0x1]
11016914:	xrelease mov DWORD PTR [ebx-0x1],ebx
11016918:	icebp  
11016919:	mov    BYTE PTR [edx-0x1],bl
1101691c:	in     eax,dx
1101691d:	test   DWORD PTR [eax-0x1],ebx
11016920:	in     eax,0x81
11016922:	push   ebp
11016923:	inc    eax
11016925:	ins    BYTE PTR es:[edi],dx
11016926:	inc    edi
11016927:	call   FWORD PTR [esi]
11016929:	adc    DWORD PTR [ebx],ecx
1101692b:	inc    DWORD PTR [eax]
1101692d:	add    BYTE PTR [eax],al
1101692f:	push   DWORD PTR [esi]
11016931:	ss xor eax,0xedeeeeff
11016937:	(bad)  
11016938:	(bad)  
11016939:	(bad)  
1101693a:	std    
1101693b:	(bad)  
1101693c:	(bad)  
1101693d:	(bad)  
1101693e:	(bad)  
1101693f:	(bad)  
11016940:	(bad)  
11016941:	(bad)  
11016942:	(bad)  
11016943:	(bad)  
11016944:	std    
11016945:	std    
11016946:	std    
11016947:	(bad)  
11016948:	(bad)  
11016949:	(bad)  
1101694a:	std    
1101694b:	(bad)  
1101694c:	(bad)  
1101694d:	(bad)  
1101694e:	(bad)  
1101694f:	(bad)  
11016950:	(bad)  
11016951:	(bad)  
11016952:	(bad)  
11016953:	(bad)  
11016954:	std    
11016955:	std    
11016956:	std    
11016957:	(bad)  
11016958:	(bad)  
11016959:	(bad)  
1101695a:	(bad)  
1101695b:	(bad)  
1101695c:	(bad)  
1101695d:	(bad)  
1101695e:	(bad)  
1101695f:	(bad)  
11016960:	(bad)  
11016961:	(bad)  
11016962:	(bad)  
11016963:	(bad)  
11016964:	(bad)  
11016965:	(bad)  
11016966:	(bad)  
11016967:	(bad)  
11016968:	in     al,dx
11016969:	in     al,dx
1101696a:	in     al,dx
1101696b:	push   DWORD PTR ds:0xff3435
11016971:	add    BYTE PTR [eax],al
11016973:	call   FWORD PTR [edi]
11016975:	adc    DWORD PTR [ebx],ecx
11016977:	inc    edx
11016979:	ins    DWORD PTR es:[edi],dx
1101697a:	dec    eax
1101697b:	jmp    ebp
1101697d:	adc    DWORD PTR [ebp-0x1],0xff5885ed
11016984:	icebp  
11016985:	mov    BYTE PTR [edx-0x1],bl
11016988:	xrelease mov DWORD PTR [edx-0x1],ebx
1101698c:	hlt    
1101698d:	mov    bl,BYTE PTR [ebx-0x1]
11016990:	hlt    
11016991:	mov    bl,BYTE PTR [ebx-0x1]
11016994:	hlt    
11016995:	mov    bl,BYTE PTR [ebx-0x1]
11016998:	hlt    
11016999:	mov    bl,BYTE PTR [ebx-0x1]
1101699c:	hlt    
1101699d:	mov    bl,BYTE PTR [ebx-0x1]
110169a0:	hlt    
110169a1:	mov    bl,BYTE PTR [ebx-0x1]
110169a4:	hlt    
110169a5:	mov    bl,BYTE PTR [ebx-0x1]
110169a8:	add    BYTE PTR [eax],al
110169aa:	add    bh,bh
110169ac:	add    BYTE PTR [eax],al
110169ae:	add    bh,bh
110169b0:	add    BYTE PTR [eax],al
110169b2:	add    BYTE PTR [esi+0x0],dh
110169b5:	add    BYTE PTR [eax],al
110169b7:	pop    ebx
110169b8:	add    BYTE PTR [eax],al
110169ba:	add    BYTE PTR ds:0x23000000,bh
110169c0:	add    BYTE PTR [eax],al
110169c2:	add    BYTE PTR [eax],dl
110169c4:	add    BYTE PTR [eax],al
110169c6:	add    BYTE PTR [esi],al
110169c8:	add    BYTE PTR [eax],al
110169ca:	add    BYTE PTR [edx],al
	...
110169e4:	add    BYTE PTR [eax],al
110169e6:	add    BYTE PTR [ecx],al
110169e8:	add    BYTE PTR [eax],al
110169ea:	add    BYTE PTR [eax+eax*1],al
110169ed:	add    BYTE PTR [eax],al
110169ef:	or     eax,DWORD PTR [eax]
110169f1:	add    BYTE PTR [eax],al
110169f3:	inc    DWORD PTR [eax]
110169f5:	add    BYTE PTR [eax],al
110169f7:	inc    DWORD PTR [eax]
110169f9:	add    BYTE PTR [eax],al
110169fb:	inc    DWORD PTR [eax]
110169fd:	add    BYTE PTR [eax],al
110169ff:	inc    DWORD PTR [eax]
11016a01:	add    BYTE PTR [eax],al
11016a03:	inc    DWORD PTR [eax]
11016a05:	add    BYTE PTR [eax],al
11016a07:	inc    DWORD PTR [eax]
11016a09:	add    BYTE PTR [eax],al
11016a0b:	inc    DWORD PTR [eax]
11016a0d:	add    BYTE PTR [eax],al
11016a0f:	inc    DWORD PTR [eax]
11016a11:	add    BYTE PTR [eax],al
11016a13:	inc    DWORD PTR [eax]
11016a15:	add    BYTE PTR [eax],al
11016a17:	inc    DWORD PTR [eax]
11016a19:	add    BYTE PTR [eax],al
11016a1b:	inc    DWORD PTR [eax]
11016a1d:	add    BYTE PTR [eax],al
11016a1f:	inc    DWORD PTR [eax]
11016a21:	add    BYTE PTR [eax],al
11016a23:	inc    DWORD PTR [eax]
11016a25:	add    BYTE PTR [eax],al
11016a27:	inc    DWORD PTR [eax]
11016a29:	add    BYTE PTR [eax],al
11016a2b:	inc    DWORD PTR [eax]
11016a2d:	add    BYTE PTR [eax],al
11016a2f:	inc    DWORD PTR [eax]
11016a31:	add    BYTE PTR [eax],al
11016a33:	push   DWORD PTR ds:0xedff3535
11016a39:	in     eax,dx
11016a3a:	in     eax,dx
11016a3b:	(bad)  
11016a3c:	(bad)  
11016a3d:	(bad)  
11016a3e:	(bad)  
11016a3f:	(bad)  
11016a40:	std    
11016a41:	std    
11016a42:	std    
11016a43:	(bad)  
11016a44:	std    
11016a45:	std    
11016a46:	std    
11016a47:	(bad)  
11016a48:	std    
11016a49:	std    
11016a4a:	std    
11016a4b:	(bad)  
11016a4c:	(bad)  
11016a4d:	(bad)  
11016a4e:	(bad)  
11016a4f:	(bad)  
11016a50:	std    
11016a51:	std    
11016a52:	std    
11016a53:	(bad)  
11016a54:	std    
11016a55:	std    
11016a56:	std    
11016a57:	(bad)  
11016a58:	(bad)  
11016a59:	(bad)  
11016a5a:	(bad)  
11016a5b:	(bad)  
11016a5c:	(bad)  
11016a5d:	(bad)  
11016a5e:	(bad)  
11016a5f:	(bad)  
11016a60:	(bad)  
11016a61:	(bad)  
11016a62:	(bad)  
11016a63:	(bad)  
11016a64:	in     al,dx
11016a65:	in     al,dx
11016a66:	in     al,dx
11016a67:	push   DWORD PTR [esp+esi*1]
11016a6a:	xor    al,0xff
11016a6c:	add    BYTE PTR [eax],al
11016a6e:	add    bh,bh
11016a70:	add    BYTE PTR [eax],al
11016a72:	add    bh,bh
11016a74:	add    BYTE PTR [eax],al
11016a76:	add    bh,bh
11016a78:	add    BYTE PTR [eax],al
11016a7a:	add    bh,bh
11016a7c:	add    BYTE PTR [eax],al
11016a7e:	add    bh,bh
11016a80:	add    BYTE PTR [eax],al
11016a82:	add    bh,bh
11016a84:	add    BYTE PTR [eax],al
11016a86:	add    bh,bh
11016a88:	add    BYTE PTR [eax],al
11016a8a:	add    bh,bh
11016a8c:	add    BYTE PTR [eax],al
11016a8e:	add    bh,bh
11016a90:	add    BYTE PTR [eax],al
11016a92:	add    bh,bh
11016a94:	add    BYTE PTR [eax],al
11016a96:	add    bh,bh
11016a98:	add    BYTE PTR [eax],al
11016a9a:	add    bh,bh
11016a9c:	add    BYTE PTR [eax],al
11016a9e:	add    bh,bh
11016aa0:	add    BYTE PTR [eax],al
11016aa2:	add    bh,bh
11016aa4:	add    BYTE PTR [eax],al
11016aa6:	add    bh,bh
11016aa8:	add    BYTE PTR [eax],al
11016aaa:	add    bh,bh
11016aac:	add    BYTE PTR [eax],al
11016aae:	add    bh,bh
11016ab0:	add    BYTE PTR [eax],al
11016ab2:	add    BYTE PTR [edi+0x0],cl
11016ab5:	add    BYTE PTR [eax],al
11016ab7:	cmp    eax,0x29000000
11016abc:	add    BYTE PTR [eax],al
11016abe:	add    BYTE PTR [edi],dl
11016ac0:	add    BYTE PTR [eax],al
11016ac2:	add    BYTE PTR [ebx],cl
11016ac4:	add    BYTE PTR [eax],al
11016ac6:	add    BYTE PTR [eax+eax*1],al
11016ac9:	add    BYTE PTR [eax],al
11016acb:	add    DWORD PTR [eax],eax
	...
11016ae9:	add    BYTE PTR [eax],al
11016aeb:	add    al,BYTE PTR [eax]
11016aed:	add    BYTE PTR [eax],al
11016aef:	push   es
11016af0:	add    BYTE PTR [eax],al
11016af2:	add    bh,bh
11016af4:	add    BYTE PTR [eax],al
11016af6:	add    bh,bh
11016af8:	add    BYTE PTR [eax],al
11016afa:	add    bh,bh
11016afc:	add    BYTE PTR [eax],al
11016afe:	add    bh,bh
11016b00:	add    BYTE PTR [eax],al
11016b02:	add    bh,bh
11016b04:	add    BYTE PTR [eax],al
11016b06:	add    bh,bh
11016b08:	add    BYTE PTR [eax],al
11016b0a:	add    bh,bh
11016b0c:	add    BYTE PTR [eax],al
11016b0e:	add    bh,bh
11016b10:	add    BYTE PTR [eax],al
11016b12:	add    bh,bh
11016b14:	add    BYTE PTR [eax],al
11016b16:	add    bh,bh
11016b18:	add    BYTE PTR [eax],al
11016b1a:	add    bh,bh
11016b1c:	add    BYTE PTR [eax],al
11016b1e:	add    bh,bh
11016b20:	add    BYTE PTR [eax],al
11016b22:	add    bh,bh
11016b24:	add    BYTE PTR [eax],al
11016b26:	add    bh,bh
11016b28:	add    BYTE PTR [eax],al
11016b2a:	add    bh,bh
11016b2c:	add    BYTE PTR [eax],al
11016b2e:	add    bh,bh
11016b30:	add    BYTE PTR [eax],al
11016b32:	add    bh,bh
11016b34:	add    BYTE PTR [eax],al
11016b36:	add    bh,bh
11016b38:	xor    eax,0xedff3535
11016b3d:	in     eax,dx
11016b3e:	in     eax,dx
11016b3f:	(bad)  
11016b40:	std    
11016b41:	std    
11016b42:	std    
11016b43:	(bad)  
11016b44:	std    
11016b45:	std    
11016b46:	std    
11016b47:	(bad)  
11016b48:	std    
11016b49:	std    
11016b4a:	std    
11016b4b:	(bad)  
11016b4c:	(bad)  
11016b4d:	(bad)  
11016b4e:	(bad)  
11016b4f:	(bad)  
11016b50:	std    
11016b51:	std    
11016b52:	std    
11016b53:	(bad)  
11016b54:	std    
11016b55:	std    
11016b56:	std    
11016b57:	(bad)  
11016b58:	(bad)  
11016b59:	(bad)  
11016b5a:	(bad)  
11016b5b:	(bad)  
11016b5c:	(bad)  
11016b5d:	(bad)  
11016b5e:	(bad)  
11016b5f:	(bad)  
11016b60:	in     al,dx
11016b61:	in     al,dx
11016b62:	in     al,dx
11016b63:	push   DWORD PTR [esp+esi*1]
11016b66:	xor    al,0xff
11016b68:	add    BYTE PTR [eax],al
11016b6a:	add    bh,bh
11016b6c:	add    BYTE PTR [eax],al
11016b6e:	add    bh,bh
11016b70:	add    BYTE PTR [eax],al
11016b72:	add    bh,bh
11016b74:	add    BYTE PTR [eax],al
11016b76:	add    bh,bh
11016b78:	add    BYTE PTR [eax],al
11016b7a:	add    bh,bh
11016b7c:	add    BYTE PTR [eax],al
11016b7e:	add    bh,bh
11016b80:	add    BYTE PTR [eax],al
11016b82:	add    bh,bh
11016b84:	add    BYTE PTR [eax],al
11016b86:	add    bh,bh
11016b88:	add    BYTE PTR [eax],al
11016b8a:	add    bh,bh
11016b8c:	add    BYTE PTR [eax],al
11016b8e:	add    bh,bh
11016b90:	add    BYTE PTR [eax],al
11016b92:	add    bh,bh
11016b94:	add    BYTE PTR [eax],al
11016b96:	add    bh,bh
11016b98:	add    BYTE PTR [eax],al
11016b9a:	add    bh,bh
11016b9c:	add    BYTE PTR [eax],al
11016b9e:	add    bh,bh
11016ba0:	add    BYTE PTR [eax],al
11016ba2:	add    bh,bh
11016ba4:	add    BYTE PTR [eax],al
11016ba6:	add    bh,bh
11016ba8:	add    BYTE PTR [eax],al
11016baa:	add    bh,bh
11016bac:	add    BYTE PTR [eax],al
11016bae:	add    bh,bh
11016bb0:	add    BYTE PTR [eax],al
11016bb2:	add    BYTE PTR ds:0x23000000,ch
11016bb8:	add    BYTE PTR [eax],al
11016bba:	add    BYTE PTR [edi],dl
11016bbc:	add    BYTE PTR [eax],al
11016bbe:	add    BYTE PTR ds:0x6000000,cl
11016bc4:	add    BYTE PTR [eax],al
11016bc6:	add    BYTE PTR [edx],al
	...
11016be8:	add    BYTE PTR [eax],al
11016bea:	add    BYTE PTR [ecx],al
11016bec:	add    BYTE PTR [eax],al
11016bee:	add    BYTE PTR [ebx],al
11016bf0:	add    BYTE PTR [eax],al
11016bf2:	add    BYTE PTR [esi],al
11016bf4:	add    BYTE PTR [eax],al
11016bf6:	add    BYTE PTR [ebx],cl
11016bf8:	add    BYTE PTR [eax],al
11016bfa:	add    BYTE PTR [eax],dl
11016bfc:	add    BYTE PTR [eax],al
11016bfe:	add    BYTE PTR ds:0x18000000,dl
11016c04:	add    BYTE PTR [eax],al
11016c06:	add    BYTE PTR [edx],bl
11016c08:	add    BYTE PTR [eax],al
11016c0a:	add    BYTE PTR [ebx],bl
11016c0c:	add    BYTE PTR [eax],al
11016c0e:	add    BYTE PTR [ebx],bl
11016c10:	add    BYTE PTR [eax],al
11016c12:	add    BYTE PTR [ebx],bl
11016c14:	add    BYTE PTR [eax],al
11016c16:	add    BYTE PTR [ebx],bl
11016c18:	add    BYTE PTR [eax],al
11016c1a:	add    BYTE PTR [ebx],bl
11016c1c:	add    BYTE PTR [eax],al
11016c1e:	add    BYTE PTR [ebx],bl
11016c20:	add    BYTE PTR [eax],al
11016c22:	add    BYTE PTR [eax+eax*1],bl
11016c25:	add    BYTE PTR [eax],al
11016c27:	sbb    eax,0x21000000
11016c2c:	add    BYTE PTR [eax],al
11016c2e:	add    BYTE PTR [ecx],ch
11016c30:	add    BYTE PTR [eax],al
11016c32:	add    BYTE PTR [edx+0x0],cl
11016c35:	add    BYTE PTR [eax],al
11016c37:	loop   0x11016c39
11016c39:	add    BYTE PTR [eax],al
11016c3b:	(bad)  
11016c3c:	xor    eax,0xedfe3535
11016c41:	in     eax,dx
11016c42:	in     eax,dx
11016c43:	(bad)  
11016c44:	(bad)  
11016c45:	(bad)  
11016c46:	(bad)  
11016c47:	(bad)  
11016c48:	(bad)  
11016c49:	(bad)  
11016c4a:	(bad)  
11016c4b:	(bad)  
11016c4c:	(bad)  
11016c4d:	(bad)  
11016c4e:	(bad)  
11016c4f:	(bad)  
11016c50:	(bad)  
11016c51:	(bad)  
11016c52:	(bad)  
11016c53:	(bad)  
11016c54:	(bad)  
11016c55:	(bad)  
11016c56:	(bad)  
11016c57:	(bad)  
11016c58:	(bad)  
11016c59:	(bad)  
11016c5a:	(bad)  
11016c5b:	(bad)  
11016c5c:	in     al,dx
11016c5d:	in     al,dx
11016c5e:	in     al,dx
11016c5f:	push   DWORD PTR [esp+esi*1]
11016c62:	xor    al,0xff
11016c64:	add    BYTE PTR [eax],al
11016c66:	add    dh,bh
11016c68:	add    BYTE PTR [eax],al
11016c6a:	add    al,ah
11016c6c:	add    BYTE PTR [eax],al
11016c6e:	add    BYTE PTR [ecx+0x0],cl
11016c71:	add    BYTE PTR [eax],al
11016c73:	sub    DWORD PTR [eax],eax
11016c75:	add    BYTE PTR [eax],al
11016c77:	and    DWORD PTR [eax],eax
11016c79:	add    BYTE PTR [eax],al
11016c7b:	sbb    eax,0x1c000000
11016c80:	add    BYTE PTR [eax],al
11016c82:	add    BYTE PTR [ebx],bl
11016c84:	add    BYTE PTR [eax],al
11016c86:	add    BYTE PTR [ebx],bl
11016c88:	add    BYTE PTR [eax],al
11016c8a:	add    BYTE PTR [ebx],bl
11016c8c:	add    BYTE PTR [eax],al
11016c8e:	add    BYTE PTR [ebx],bl
11016c90:	add    BYTE PTR [eax],al
11016c92:	add    BYTE PTR [ebx],bl
11016c94:	add    BYTE PTR [eax],al
11016c96:	add    BYTE PTR [ebx],bl
11016c98:	add    BYTE PTR [eax],al
11016c9a:	add    BYTE PTR [ebx],bl
11016c9c:	add    BYTE PTR [eax],al
11016c9e:	add    BYTE PTR [ebx],bl
11016ca0:	add    BYTE PTR [eax],al
11016ca2:	add    BYTE PTR [ebx],bl
11016ca4:	add    BYTE PTR [eax],al
11016ca6:	add    BYTE PTR [ebx],bl
11016ca8:	add    BYTE PTR [eax],al
11016caa:	add    BYTE PTR [edx],bl
11016cac:	add    BYTE PTR [eax],al
11016cae:	add    BYTE PTR [eax],bl
11016cb0:	add    BYTE PTR [eax],al
11016cb2:	add    BYTE PTR ds:0x10000000,dl
11016cb8:	add    BYTE PTR [eax],al
11016cba:	add    BYTE PTR [ebx],cl
11016cbc:	add    BYTE PTR [eax],al
11016cbe:	add    BYTE PTR [esi],al
11016cc0:	add    BYTE PTR [eax],al
11016cc2:	add    BYTE PTR [ebx],al
11016cc4:	add    BYTE PTR [eax],al
11016cc6:	add    BYTE PTR [ecx],al
	...
11016cec:	add    BYTE PTR [eax],al
11016cee:	add    BYTE PTR [ecx],al
11016cf0:	add    BYTE PTR [eax],al
11016cf2:	add    BYTE PTR [edx],al
11016cf4:	add    BYTE PTR [eax],al
11016cf6:	add    BYTE PTR [eax+eax*1],al
11016cf9:	add    BYTE PTR [eax],al
11016cfb:	push   es
11016cfc:	add    BYTE PTR [eax],al
11016cfe:	add    BYTE PTR [eax],cl
11016d00:	add    BYTE PTR [eax],al
11016d02:	add    BYTE PTR [ecx],cl
11016d04:	add    BYTE PTR [eax],al
11016d06:	add    BYTE PTR [edx],cl
11016d08:	add    BYTE PTR [eax],al
11016d0a:	add    BYTE PTR [edx],cl
11016d0c:	add    BYTE PTR [eax],al
11016d0e:	add    BYTE PTR [edx],cl
11016d10:	add    BYTE PTR [eax],al
11016d12:	add    BYTE PTR [edx],cl
11016d14:	add    BYTE PTR [eax],al
11016d16:	add    BYTE PTR [edx],cl
11016d18:	add    BYTE PTR [eax],al
11016d1a:	add    BYTE PTR [edx],cl
11016d1c:	add    BYTE PTR [eax],al
11016d1e:	add    BYTE PTR [edx],cl
11016d20:	add    BYTE PTR [eax],al
11016d22:	add    BYTE PTR [edx],cl
11016d24:	add    BYTE PTR [eax],al
11016d26:	add    BYTE PTR [edx],cl
11016d28:	add    BYTE PTR [eax],al
11016d2a:	add    BYTE PTR [eax+eax*1],cl
11016d2d:	add    BYTE PTR [eax],al
11016d2f:	adc    DWORD PTR [eax],eax
11016d31:	add    BYTE PTR [eax],al
11016d33:	sbb    DWORD PTR [eax],eax
11016d35:	add    BYTE PTR [eax],al
11016d37:	cmp    eax,0xe0000000
11016d3c:	add    BYTE PTR [eax],al
11016d3e:	add    dh,bh
11016d40:	xor    eax,0xedfe3535
11016d45:	in     eax,dx
11016d46:	in     eax,dx
11016d47:	(bad)  
11016d48:	std    
11016d49:	std    
11016d4a:	std    
11016d4b:	(bad)  
11016d4c:	(bad)  
11016d4d:	(bad)  
11016d4e:	(bad)  
11016d4f:	(bad)  
11016d50:	(bad)  
11016d51:	(bad)  
11016d52:	(bad)  
11016d53:	(bad)  
11016d54:	std    
11016d55:	std    
11016d56:	std    
11016d57:	(bad)  
11016d58:	in     eax,dx
11016d59:	in     eax,dx
11016d5a:	in     eax,dx
11016d5b:	(bad)  
11016d5c:	xor    al,0x34
11016d5e:	xor    al,0xfe
11016d60:	add    BYTE PTR [eax],al
11016d62:	add    dh,bh
11016d64:	add    BYTE PTR [eax],al
11016d66:	add    bh,bl
11016d68:	add    BYTE PTR [eax],al
11016d6a:	add    BYTE PTR [eax+eax*1],bh
11016d6d:	add    BYTE PTR [eax],al
11016d6f:	sbb    DWORD PTR [eax],eax
11016d71:	add    BYTE PTR [eax],al
11016d73:	adc    BYTE PTR [eax],al
11016d75:	add    BYTE PTR [eax],al
11016d77:	or     al,0x0
11016d79:	add    BYTE PTR [eax],al
11016d7b:	or     al,BYTE PTR [eax]
11016d7d:	add    BYTE PTR [eax],al
11016d7f:	or     al,BYTE PTR [eax]
11016d81:	add    BYTE PTR [eax],al
11016d83:	or     al,BYTE PTR [eax]
11016d85:	add    BYTE PTR [eax],al
11016d87:	or     al,BYTE PTR [eax]
11016d89:	add    BYTE PTR [eax],al
11016d8b:	or     al,BYTE PTR [eax]
11016d8d:	add    BYTE PTR [eax],al
11016d8f:	or     al,BYTE PTR [eax]
11016d91:	add    BYTE PTR [eax],al
11016d93:	or     al,BYTE PTR [eax]
11016d95:	add    BYTE PTR [eax],al
11016d97:	or     al,BYTE PTR [eax]
11016d99:	add    BYTE PTR [eax],al
11016d9b:	or     al,BYTE PTR [eax]
11016d9d:	add    BYTE PTR [eax],al
11016d9f:	or     al,BYTE PTR [eax]
11016da1:	add    BYTE PTR [eax],al
11016da3:	or     al,BYTE PTR [eax]
11016da5:	add    BYTE PTR [eax],al
11016da7:	or     al,BYTE PTR [eax]
11016da9:	add    BYTE PTR [eax],al
11016dab:	or     al,BYTE PTR [eax]
11016dad:	add    BYTE PTR [eax],al
11016daf:	or     DWORD PTR [eax],eax
11016db1:	add    BYTE PTR [eax],al
11016db3:	or     BYTE PTR [eax],al
11016db5:	add    BYTE PTR [eax],al
11016db7:	push   es
11016db8:	add    BYTE PTR [eax],al
11016dba:	add    BYTE PTR [eax+eax*1],al
11016dbd:	add    BYTE PTR [eax],al
11016dbf:	add    al,BYTE PTR [eax]
11016dc1:	add    BYTE PTR [eax],al
11016dc3:	add    DWORD PTR [eax],eax
	...
11016df5:	add    BYTE PTR [eax],al
11016df7:	add    DWORD PTR [eax],eax
11016df9:	add    BYTE PTR [eax],al
11016dfb:	add    al,BYTE PTR [eax]
11016dfd:	add    BYTE PTR [eax],al
11016dff:	add    al,BYTE PTR [eax]
11016e01:	add    BYTE PTR [eax],al
11016e03:	add    al,BYTE PTR [eax]
11016e05:	add    BYTE PTR [eax],al
11016e07:	add    al,BYTE PTR [eax]
11016e09:	add    BYTE PTR [eax],al
11016e0b:	add    al,BYTE PTR [eax]
11016e0d:	add    BYTE PTR [eax],al
11016e0f:	add    al,BYTE PTR [eax]
11016e11:	add    BYTE PTR [eax],al
11016e13:	add    al,BYTE PTR [eax]
11016e15:	add    BYTE PTR [eax],al
11016e17:	add    al,BYTE PTR [eax]
11016e19:	add    BYTE PTR [eax],al
11016e1b:	add    al,BYTE PTR [eax]
11016e1d:	add    BYTE PTR [eax],al
11016e1f:	add    al,BYTE PTR [eax]
11016e21:	add    BYTE PTR [eax],al
11016e23:	add    al,BYTE PTR [eax]
11016e25:	add    BYTE PTR [eax],al
11016e27:	add    al,BYTE PTR [eax]
11016e29:	add    BYTE PTR [eax],al
11016e2b:	add    eax,DWORD PTR [eax]
11016e2d:	add    BYTE PTR [eax],al
11016e2f:	add    eax,0x9000000
11016e34:	add    BYTE PTR [eax],al
11016e36:	add    BYTE PTR [edx],dl
11016e38:	add    BYTE PTR [eax],al
11016e3a:	add    BYTE PTR [edi],dh
11016e3c:	add    BYTE PTR [eax],al
11016e3e:	add    bh,bl
11016e40:	add    BYTE PTR [eax],al
11016e42:	add    dh,bh
11016e44:	xor    eax,0xedfe3535
11016e49:	in     eax,dx
11016e4a:	in     eax,dx
11016e4b:	(bad)  
11016e4c:	(bad)  
11016e4d:	(bad)  
11016e4e:	(bad)  
11016e4f:	(bad)  
11016e50:	(bad)  
11016e51:	(bad)  
11016e52:	(bad)  
11016e53:	(bad)  
11016e54:	in     al,dx
11016e55:	in     al,dx
11016e56:	in     al,dx
11016e57:	(bad)  
11016e58:	xor    al,0x34
11016e5a:	xor    al,0xfe
11016e5c:	add    BYTE PTR [eax],al
11016e5e:	add    dh,bh
11016e60:	add    BYTE PTR [eax],al
11016e62:	add    dh,bl
11016e64:	add    BYTE PTR [eax],al
11016e66:	add    BYTE PTR [esi],dh
11016e68:	add    BYTE PTR [eax],al
11016e6a:	add    BYTE PTR [edx],dl
11016e6c:	add    BYTE PTR [eax],al
11016e6e:	add    BYTE PTR [ecx],cl
11016e70:	add    BYTE PTR [eax],al
11016e72:	add    BYTE PTR ds:0x3000000,al
11016e78:	add    BYTE PTR [eax],al
11016e7a:	add    BYTE PTR [edx],al
11016e7c:	add    BYTE PTR [eax],al
11016e7e:	add    BYTE PTR [edx],al
11016e80:	add    BYTE PTR [eax],al
11016e82:	add    BYTE PTR [edx],al
11016e84:	add    BYTE PTR [eax],al
11016e86:	add    BYTE PTR [edx],al
11016e88:	add    BYTE PTR [eax],al
11016e8a:	add    BYTE PTR [edx],al
11016e8c:	add    BYTE PTR [eax],al
11016e8e:	add    BYTE PTR [edx],al
11016e90:	add    BYTE PTR [eax],al
11016e92:	add    BYTE PTR [edx],al
11016e94:	add    BYTE PTR [eax],al
11016e96:	add    BYTE PTR [edx],al
11016e98:	add    BYTE PTR [eax],al
11016e9a:	add    BYTE PTR [edx],al
11016e9c:	add    BYTE PTR [eax],al
11016e9e:	add    BYTE PTR [edx],al
11016ea0:	add    BYTE PTR [eax],al
11016ea2:	add    BYTE PTR [edx],al
11016ea4:	add    BYTE PTR [eax],al
11016ea6:	add    BYTE PTR [edx],al
11016ea8:	add    BYTE PTR [eax],al
11016eaa:	add    BYTE PTR [edx],al
11016eac:	add    BYTE PTR [eax],al
11016eae:	add    BYTE PTR [edx],al
11016eb0:	add    BYTE PTR [eax],al
11016eb2:	add    BYTE PTR [edx],al
11016eb4:	add    BYTE PTR [eax],al
11016eb6:	add    BYTE PTR [edx],al
11016eb8:	add    BYTE PTR [eax],al
11016eba:	add    BYTE PTR [ecx],al
	...
11016f30:	add    BYTE PTR [eax],al
11016f32:	add    BYTE PTR [edx],al
11016f34:	add    BYTE PTR [eax],al
11016f36:	add    BYTE PTR [edi],al
11016f38:	add    BYTE PTR [eax],al
11016f3a:	add    BYTE PTR [edi],cl
11016f3c:	add    BYTE PTR [eax],al
11016f3e:	add    BYTE PTR ds:0xdf000000,dh
11016f44:	add    BYTE PTR [eax],al
11016f46:	add    dh,bh
11016f48:	xor    eax,0xeefe3535
11016f4d:	out    dx,al
11016f4e:	out    dx,al
11016f4f:	(bad)  
11016f50:	in     eax,dx
11016f51:	in     eax,dx
11016f52:	in     eax,dx
11016f53:	(bad)  
11016f54:	xor    al,0x34
11016f56:	xor    al,0xfe
11016f58:	add    BYTE PTR [eax],al
11016f5a:	add    dh,bh
11016f5c:	add    BYTE PTR [eax],al
11016f5e:	add    ch,bl
11016f60:	add    BYTE PTR [eax],al
11016f62:	add    BYTE PTR [eax+eax*1],dh
11016f65:	add    BYTE PTR [eax],al
11016f67:	adc    BYTE PTR [eax],al
11016f69:	add    BYTE PTR [eax],al
11016f6b:	pop    es
11016f6c:	add    BYTE PTR [eax],al
11016f6e:	add    BYTE PTR [edx],al
	...
11017034:	add    BYTE PTR [eax],al
11017036:	add    BYTE PTR [edx],al
11017038:	add    BYTE PTR [eax],al
1101703a:	add    BYTE PTR [esi],al
1101703c:	add    BYTE PTR [eax],al
1101703e:	add    BYTE PTR [edi],cl
11017040:	add    BYTE PTR [eax],al
11017042:	add    BYTE PTR [ebx],dh
11017044:	add    BYTE PTR [eax],al
11017046:	add    dh,bl
11017048:	add    BYTE PTR [eax],al
1101704a:	add    dh,bh
1101704c:	xor    eax,0x34fe3535
11017051:	xor    al,0x34
11017053:	inc    BYTE PTR [eax]
11017055:	add    BYTE PTR [eax],al
11017057:	inc    BYTE PTR [eax]
11017059:	add    BYTE PTR [eax],al
1101705b:	fld    QWORD PTR [eax]
1101705d:	add    BYTE PTR [eax],al
1101705f:	xor    DWORD PTR [eax],eax
11017061:	add    BYTE PTR [eax],al
11017063:	sldt   WORD PTR [eax]
11017066:	add    BYTE PTR [esi],al
11017068:	add    BYTE PTR [eax],al
1101706a:	add    BYTE PTR [edx],al
	...
11017138:	add    BYTE PTR [eax],al
1101713a:	add    BYTE PTR [edx],al
1101713c:	add    BYTE PTR [eax],al
1101713e:	add    BYTE PTR [esi],al
11017140:	add    BYTE PTR [eax],al
11017142:	add    BYTE PTR ds:0x2e000000,cl
11017148:	add    BYTE PTR [eax],al
1101714a:	add    ch,bl
1101714c:	add    BYTE PTR [eax],al
1101714e:	add    dh,bh
11017150:	add    BYTE PTR [eax],al
11017152:	add    dh,bh
11017154:	add    BYTE PTR [eax],al
11017156:	add    bl,bl
11017158:	add    BYTE PTR [eax],al
1101715a:	add    BYTE PTR ds:0xd000000,ch
11017160:	add    BYTE PTR [eax],al
11017162:	add    BYTE PTR [esi],al
11017164:	add    BYTE PTR [eax],al
11017166:	add    BYTE PTR [edx],al
	...
1101723c:	add    BYTE PTR [eax],al
1101723e:	add    BYTE PTR [edx],al
11017240:	add    BYTE PTR [eax],al
11017242:	add    BYTE PTR [eax+eax*1],al
11017245:	add    BYTE PTR [eax],al
11017247:	or     DWORD PTR [eax],eax
11017249:	add    BYTE PTR [eax],al
1101724b:	daa    
1101724c:	add    BYTE PTR [eax],al
1101724e:	add    ah,bl
11017250:	add    BYTE PTR [eax],al
11017252:	add    dl,bl
11017254:	add    BYTE PTR [eax],al
11017256:	add    BYTE PTR [esi],ah
11017258:	add    BYTE PTR [eax],al
1101725a:	add    BYTE PTR [ecx],cl
1101725c:	add    BYTE PTR [eax],al
1101725e:	add    BYTE PTR ds:0x2000000,al
	...
11017340:	add    BYTE PTR [eax],al
11017342:	add    BYTE PTR [ecx],al
11017344:	add    BYTE PTR [eax],al
11017346:	add    BYTE PTR [ebx],al
11017348:	add    BYTE PTR [eax],al
1101734a:	add    BYTE PTR [eax+eax*1],al
1101734d:	add    BYTE PTR [eax],al
1101734f:	and    DWORD PTR [eax],eax
11017351:	add    BYTE PTR [eax],al
11017353:	pop    ds
11017354:	add    BYTE PTR [eax],al
11017356:	add    BYTE PTR [eax+eax*1],al
11017359:	add    BYTE PTR [eax],al
1101735b:	add    eax,DWORD PTR [eax]
1101735d:	add    BYTE PTR [eax],al
1101735f:	add    DWORD PTR [eax],eax
	...
110173cd:	add    BYTE PTR [eax],al
110173cf:	add    bh,bh
110173d1:	(bad)  
110173d2:	cld    
110173d3:	add    BYTE PTR [eax],al
110173d5:	aas    
110173d6:	(bad)  
110173d7:	(bad)  
110173d8:	inc    DWORD PTR [eax+0x0]
110173de:	add    BYTE PTR [edi],bl
110173e0:	inc    BYTE PTR [eax]
110173e2:	add    BYTE PTR [eax],al
110173e4:	add    BYTE PTR [eax],al
110173e6:	add    BYTE PTR [edi],al
110173e8:	cld    
110173e9:	add    BYTE PTR [eax],al
110173eb:	add    BYTE PTR [eax],al
110173ed:	add    BYTE PTR [eax],al
110173ef:	add    edi,esp
110173f1:	add    BYTE PTR [eax],al
110173f3:	add    BYTE PTR [eax],al
110173f5:	add    BYTE PTR [eax],al
110173f7:	add    edi,eax
110173f9:	add    BYTE PTR [eax],al
110173fb:	add    BYTE PTR [eax],al
110173fd:	add    BYTE PTR [eax],al
110173ff:	add    eax,edi
11017401:	add    BYTE PTR [eax],al
11017403:	add    BYTE PTR [eax],al
11017405:	add    BYTE PTR [eax],al
11017407:	add    eax,edi
11017409:	add    BYTE PTR [eax],al
1101740b:	add    BYTE PTR [eax],al
1101740d:	add    BYTE PTR [eax],al
1101740f:	add    eax,edi
11017411:	add    BYTE PTR [eax],al
11017413:	add    BYTE PTR [eax],al
11017415:	add    BYTE PTR [eax],al
11017417:	add    eax,edi
11017419:	add    BYTE PTR [eax],al
1101741b:	add    BYTE PTR [eax],al
1101741d:	add    BYTE PTR [eax],al
1101741f:	add    eax,edi
11017421:	add    BYTE PTR [eax],al
11017423:	add    BYTE PTR [eax],al
11017425:	add    BYTE PTR [eax],al
11017427:	add    eax,edi
11017429:	add    BYTE PTR [eax],al
1101742b:	add    BYTE PTR [eax],al
1101742d:	add    BYTE PTR [eax],al
1101742f:	add    eax,edi
11017431:	add    BYTE PTR [eax],al
11017433:	add    BYTE PTR [eax],al
11017435:	add    BYTE PTR [eax],al
11017437:	add    eax,edi
11017439:	add    BYTE PTR [eax],al
1101743b:	add    BYTE PTR [eax],al
1101743d:	add    BYTE PTR [eax],al
1101743f:	add    eax,edi
11017441:	add    BYTE PTR [eax],al
11017443:	add    BYTE PTR [eax],al
11017445:	add    BYTE PTR [eax],al
11017447:	add    eax,edi
11017449:	add    BYTE PTR [eax],al
1101744b:	add    BYTE PTR [eax],al
1101744d:	add    BYTE PTR [eax],al
1101744f:	add    eax,edi
11017451:	add    BYTE PTR [eax],al
11017453:	add    BYTE PTR [eax],al
11017455:	add    BYTE PTR [eax],al
11017457:	add    eax,edi
11017459:	add    BYTE PTR [eax],al
1101745b:	add    BYTE PTR [eax],al
1101745d:	add    BYTE PTR [eax],al
1101745f:	add    eax,esi
11017461:	add    BYTE PTR [eax],al
11017463:	add    BYTE PTR [eax],al
11017465:	add    BYTE PTR [eax],al
11017467:	add    eax,esp
11017469:	add    BYTE PTR [eax],al
1101746b:	add    BYTE PTR [eax],al
1101746d:	add    BYTE PTR [eax],al
1101746f:	add    eax,eax
11017471:	add    BYTE PTR [eax],al
11017473:	add    BYTE PTR [eax],al
11017475:	add    BYTE PTR [eax],al
11017477:	add    DWORD PTR [eax+0x0],eax
1101747d:	add    BYTE PTR [eax],al
1101747f:	add    DWORD PTR [eax],eax
	...
110174ed:	add    BYTE PTR [eax],al
110174ef:	add    BYTE PTR [eax+0x0],al
110174f5:	add    BYTE PTR [eax],al
110174f7:	add    eax,eax
110174f9:	add    BYTE PTR [eax],al
110174fb:	add    BYTE PTR [eax],al
110174fd:	add    BYTE PTR [eax],al
110174ff:	add    eax,esp
11017501:	add    BYTE PTR [eax],al
11017503:	add    BYTE PTR [eax],al
11017505:	add    BYTE PTR [eax],al
11017507:	add    eax,esi
11017509:	add    BYTE PTR [eax],al
1101750b:	add    BYTE PTR [eax],al
1101750d:	add    BYTE PTR [eax],al
1101750f:	add    eax,edi
11017511:	add    BYTE PTR [eax],al
11017513:	add    BYTE PTR [eax],al
11017515:	add    BYTE PTR [eax],al
11017517:	add    eax,edi
11017519:	add    BYTE PTR [eax],al
1101751b:	add    BYTE PTR [eax],al
1101751d:	add    BYTE PTR [eax],al
1101751f:	add    eax,edi
11017521:	add    BYTE PTR [eax],al
11017523:	add    BYTE PTR [eax],al
11017525:	add    BYTE PTR [eax],al
11017527:	add    eax,edi
11017529:	add    BYTE PTR [eax],al
1101752b:	add    BYTE PTR [eax],al
1101752d:	add    BYTE PTR [eax],al
1101752f:	add    eax,edi
11017531:	add    BYTE PTR [eax],al
11017533:	add    BYTE PTR [eax],al
11017535:	add    BYTE PTR [eax],al
11017537:	add    eax,edi
11017539:	add    BYTE PTR [eax],al
1101753b:	add    BYTE PTR [eax],al
1101753d:	add    BYTE PTR [eax],al
1101753f:	add    eax,edi
11017541:	add    BYTE PTR [eax],al
11017543:	add    BYTE PTR [eax],al
11017545:	add    BYTE PTR [eax],al
11017547:	add    eax,edi
11017549:	add    BYTE PTR [eax],al
1101754b:	add    BYTE PTR [eax],al
1101754d:	add    BYTE PTR [eax],al
1101754f:	add    eax,edi
11017551:	add    BYTE PTR [eax],al
11017553:	add    BYTE PTR [eax],al
11017555:	add    BYTE PTR [eax],al
11017557:	add    eax,edi
11017559:	add    BYTE PTR [eax],al
1101755b:	add    BYTE PTR [eax],al
1101755d:	add    BYTE PTR [eax],al
1101755f:	add    eax,edi
11017561:	add    BYTE PTR [eax],al
11017563:	add    BYTE PTR [eax],al
11017565:	add    BYTE PTR [eax],al
11017567:	add    eax,edi
11017569:	add    BYTE PTR [eax],al
1101756b:	add    BYTE PTR [eax],al
1101756d:	add    BYTE PTR [eax],al
1101756f:	add    eax,edi
11017571:	add    BYTE PTR [eax],al
11017573:	add    BYTE PTR [eax],al
11017575:	add    BYTE PTR [eax],al
11017577:	add    eax,edi
11017579:	add    BYTE PTR [eax],al
1101757b:	add    BYTE PTR [eax],al
1101757d:	add    BYTE PTR [eax],al
1101757f:	add    eax,edi
11017581:	add    BYTE PTR [eax],al
11017583:	add    BYTE PTR [eax],al
11017585:	add    BYTE PTR [eax],al
11017587:	add    esp,edi
11017589:	add    BYTE PTR [eax],al
1101758b:	add    BYTE PTR [eax],al
1101758d:	add    BYTE PTR [eax],al
1101758f:	add    edi,esp
11017591:	add    BYTE PTR [eax],al
11017593:	add    BYTE PTR [eax],al
11017595:	add    BYTE PTR [eax],al
11017597:	add    edi,esi
11017599:	add    BYTE PTR [eax],al
1101759b:	add    BYTE PTR [eax],al
1101759d:	add    BYTE PTR [eax],al
1101759f:	pop    es
110175a0:	inc    DWORD PTR [eax+0x0]
110175a6:	add    BYTE PTR [edi],bl
110175a8:	(bad)  
110175a9:	(bad)  
110175aa:	inc    DWORD PTR [eax]
110175ac:	add    bh,bh
110175ae:	(bad)  
110175af:	(bad)  
110175b0:	(bad)  
110175b1:	(bad)  
110175b2:	inc    DWORD PTR [eax-0xff]
110175b8:	(bad)  
110175b9:	(bad)  
110175ba:	inc    eax
110175bc:	add    edi,edi
110175be:	(bad)  
110175bf:	(bad)  
110175c0:	(bad)  
110175c1:	(bad)  
110175c2:	jmp    eax
110175c4:	pop    es
110175c5:	(bad)  
110175c6:	(bad)  
110175c7:	(bad)  
110175c8:	(bad)  
110175c9:	(bad)  
110175ca:	push   eax
110175cc:	ud0    edi,edi
110175cf:	jmp    FWORD PTR [eax]
110175d1:	add    BYTE PTR [eax],al
110175d3:	add    BYTE PTR [eax],dh
110175d5:	add    BYTE PTR [eax],al
110175d7:	add    BYTE PTR [eax+0x0],ah
110175da:	add    BYTE PTR [eax],al
110175dc:	add    DWORD PTR [eax],eax
110175de:	and    BYTE PTR [eax],al
	...
11017638:	add    BYTE PTR [eax],al
1101763a:	add    BYTE PTR [ecx],al
1101763c:	add    BYTE PTR [eax],al
1101763e:	add    BYTE PTR ds:0x10000000,al
11017644:	add    BYTE PTR [eax],al
11017646:	add    BYTE PTR ds:0x46000000,ah
1101764c:	add    BYTE PTR [eax],al
1101764e:	add    BYTE PTR [ecx+0x0],dh
11017651:	add    BYTE PTR [eax],al
11017653:	call   0x0:0xbe000000
1101765a:	add    BYTE PTR [esi-0x66000000],bh
11017660:	add    BYTE PTR [eax],al
11017662:	add    BYTE PTR [eax+0x0],dh
11017665:	add    BYTE PTR [eax],al
11017667:	inc    esi
11017668:	add    BYTE PTR [eax],al
1101766a:	add    BYTE PTR ds:0x10000000,ah
11017670:	add    BYTE PTR [eax],al
11017672:	add    BYTE PTR ds:0x1000000,al
	...
110176d0:	add    BYTE PTR [eax],al
110176d2:	add    BYTE PTR [ecx],al
110176d4:	add    BYTE PTR [eax],al
110176d6:	add    BYTE PTR [ebx],al
110176d8:	add    BYTE PTR [eax],al
110176da:	add    BYTE PTR [eax+eax*1],al
110176dd:	add    BYTE PTR [eax],al
110176df:	add    eax,0x5000000
110176e4:	add    BYTE PTR [eax],al
110176e6:	add    BYTE PTR [esi],al
110176e8:	add    BYTE PTR [eax],al
110176ea:	add    BYTE PTR [esi],al
110176ec:	add    BYTE PTR [eax],al
110176ee:	add    BYTE PTR [esi],al
110176f0:	add    BYTE PTR [eax],al
110176f2:	add    BYTE PTR [esi],al
110176f4:	add    BYTE PTR [eax],al
110176f6:	add    BYTE PTR [esi],al
110176f8:	add    BYTE PTR [eax],al
110176fa:	add    BYTE PTR [ebx],cl
110176fc:	add    BYTE PTR [eax],al
110176fe:	add    BYTE PTR ds:0x2a000000,dl
11017704:	add    BYTE PTR [eax],al
11017706:	add    BYTE PTR [edx+0x0],cl
11017709:	add    BYTE PTR [eax],al
1101770b:	je     0x1101770d
1101770d:	add    BYTE PTR [eax],al
1101770f:	mov    ds:0xcd000000,al
11017714:	add    BYTE PTR [eax],al
11017716:	add    dl,bh
11017718:	add    BYTE PTR [eax],al
1101771a:	add    dl,bh
1101771c:	add    BYTE PTR [eax],al
1101771e:	add    ch,cl
11017720:	add    BYTE PTR [eax],al
11017722:	add    BYTE PTR [edx+0x74000000],ah
11017728:	add    BYTE PTR [eax],al
1101772a:	add    BYTE PTR [edx+0x0],cl
1101772d:	add    BYTE PTR [eax],al
1101772f:	sub    DWORD PTR [eax],eax
11017731:	add    BYTE PTR [eax],al
11017733:	adc    eax,0xa000000
11017738:	add    BYTE PTR [eax],al
1101773a:	add    BYTE PTR [esi],al
1101773c:	add    BYTE PTR [eax],al
1101773e:	add    BYTE PTR [esi],al
11017740:	add    BYTE PTR [eax],al
11017742:	add    BYTE PTR [esi],al
11017744:	add    BYTE PTR [eax],al
11017746:	add    BYTE PTR [esi],al
11017748:	add    BYTE PTR [eax],al
1101774a:	add    BYTE PTR [esi],al
1101774c:	add    BYTE PTR [eax],al
1101774e:	add    BYTE PTR [esi],al
11017750:	add    BYTE PTR [eax],al
11017752:	add    BYTE PTR [esi],al
11017754:	add    BYTE PTR [eax],al
11017756:	add    BYTE PTR [esi],al
11017758:	add    BYTE PTR [eax],al
1101775a:	add    BYTE PTR ds:0x5000000,al
11017760:	add    BYTE PTR [eax],al
11017762:	add    BYTE PTR [eax+eax*1],al
11017765:	add    BYTE PTR [eax],al
11017767:	add    eax,DWORD PTR [eax]
11017769:	add    BYTE PTR [eax],al
1101776b:	add    DWORD PTR [eax],eax
	...
1101778d:	add    BYTE PTR [eax],al
1101778f:	add    al,BYTE PTR [eax]
11017791:	add    BYTE PTR [eax],al
11017793:	push   es
11017794:	add    BYTE PTR [eax],al
11017796:	add    BYTE PTR [eax+eax*1],cl
11017799:	add    BYTE PTR [eax],al
1101779b:	adc    al,BYTE PTR [eax]
1101779d:	add    BYTE PTR [eax],al
1101779f:	push   ss
110177a0:	add    BYTE PTR [eax],al
110177a2:	add    BYTE PTR [edi],dl
110177a4:	add    BYTE PTR [eax],al
110177a6:	add    BYTE PTR [eax],bl
110177a8:	add    BYTE PTR [eax],al
110177aa:	add    BYTE PTR [eax],bl
110177ac:	add    BYTE PTR [eax],al
110177ae:	add    BYTE PTR [eax],bl
110177b0:	add    BYTE PTR [eax],al
110177b2:	add    BYTE PTR [ecx],bl
110177b4:	add    BYTE PTR [eax],al
110177b6:	add    BYTE PTR [eax+eax*1],bl
110177b9:	add    BYTE PTR [eax],al
110177bb:	add    BYTE PTR es:[eax],al
110177be:	add    BYTE PTR [eax],bh
110177c0:	add    BYTE PTR [eax],al
110177c2:	add    BYTE PTR [edi+0x0],dl
110177c5:	add    BYTE PTR [eax],al
110177c7:	jle    0x110177c9
110177c9:	add    BYTE PTR [eax],al
110177cb:	test   al,0x0
110177cd:	add    BYTE PTR [eax],al
110177cf:	rol    BYTE PTR [eax],cl
110177d1:	add    BYTE PTR [eax],al
110177d3:	sti    
110177d4:	sbb    eax,0x1cff1d1d
110177d9:	sbb    al,0x1c
110177db:	inc    DWORD PTR [eax]
110177dd:	add    BYTE PTR [eax],al
110177df:	sti    
110177e0:	add    BYTE PTR [eax],al
110177e2:	add    dl,dl
110177e4:	add    BYTE PTR [eax],al
110177e6:	add    BYTE PTR [eax+0x7e000000],ch
110177ec:	add    BYTE PTR [eax],al
110177ee:	add    BYTE PTR [esi+0x0],dl
110177f1:	add    BYTE PTR [eax],al
110177f3:	cmp    BYTE PTR [eax],al
110177f5:	add    BYTE PTR [eax],al
110177f7:	add    BYTE PTR es:[eax],al
110177fa:	add    BYTE PTR [eax+eax*1],bl
110177fd:	add    BYTE PTR [eax],al
110177ff:	sbb    DWORD PTR [eax],eax
11017801:	add    BYTE PTR [eax],al
11017803:	sbb    BYTE PTR [eax],al
11017805:	add    BYTE PTR [eax],al
11017807:	sbb    BYTE PTR [eax],al
11017809:	add    BYTE PTR [eax],al
1101780b:	sbb    BYTE PTR [eax],al
1101780d:	add    BYTE PTR [eax],al
1101780f:	sbb    BYTE PTR [eax],al
11017811:	add    BYTE PTR [eax],al
11017813:	sbb    BYTE PTR [eax],al
11017815:	add    BYTE PTR [eax],al
11017817:	sbb    BYTE PTR [eax],al
11017819:	add    BYTE PTR [eax],al
1101781b:	pop    ss
1101781c:	add    BYTE PTR [eax],al
1101781e:	add    BYTE PTR [esi],dl
11017820:	add    BYTE PTR [eax],al
11017822:	add    BYTE PTR [edx],dl
11017824:	add    BYTE PTR [eax],al
11017826:	add    BYTE PTR [eax+eax*1],cl
11017829:	add    BYTE PTR [eax],al
1101782b:	push   es
1101782c:	add    BYTE PTR [eax],al
1101782e:	add    BYTE PTR [edx],al
	...
11017848:	add    BYTE PTR [eax],al
1101784a:	add    BYTE PTR [ecx],al
1101784c:	add    BYTE PTR [eax],al
1101784e:	add    BYTE PTR [esi],al
11017850:	add    BYTE PTR [eax],al
11017852:	add    BYTE PTR [ecx],dl
11017854:	add    BYTE PTR [eax],al
11017856:	add    BYTE PTR [ecx],ah
11017858:	add    BYTE PTR [eax],al
1101785a:	add    BYTE PTR [ecx],dh
1101785c:	add    BYTE PTR [eax],al
1101785e:	add    BYTE PTR [ebx],bh
11017860:	add    BYTE PTR [eax],al
11017862:	add    BYTE PTR [eax+0x0],al
11017865:	add    BYTE PTR [eax],al
11017867:	inc    ecx
11017868:	add    BYTE PTR [eax],al
1101786a:	add    BYTE PTR [ecx+0x0],al
1101786d:	add    BYTE PTR [eax],al
1101786f:	inc    edx
11017870:	add    BYTE PTR [eax],al
11017872:	add    BYTE PTR [ebp+0x0],al
11017875:	add    BYTE PTR [eax],al
11017877:	dec    ebp
11017878:	add    BYTE PTR [eax],al
1101787a:	add    BYTE PTR [eax+eax*1+0x0],bl
1101787e:	add    BYTE PTR [eax+eax*1+0x0],dh
11017882:	add    BYTE PTR [ebp-0x49000000],dl
11017888:	add    BYTE PTR [eax],al
1101788a:	add    dl,bl
1101788c:	add    BYTE PTR [eax],al
1101788e:	add    ah,bh
11017890:	pop    ds
11017891:	pop    ds
11017892:	pop    ds
11017893:	(bad)  
11017894:	fcmovu st,st(2)
11017896:	(bad)  
11017898:	fcomp  st(0)
1101789a:	fdivr  st,st(7)
1101789c:	sbb    eax,0xff1d1d
110178a1:	add    BYTE PTR [eax],al
110178a3:	cld    
110178a4:	add    BYTE PTR [eax],al
110178a6:	add    cl,bl
110178a8:	add    BYTE PTR [eax],al
110178aa:	add    BYTE PTR [edi-0x6b000000],dh
110178b0:	add    BYTE PTR [eax],al
110178b2:	add    BYTE PTR [eax+eax*1+0x0],dh
110178b6:	add    BYTE PTR [eax+eax*1+0x0],bl
110178ba:	add    BYTE PTR [eax+eax*1+0x0],cl
110178be:	add    BYTE PTR [ebp+0x0],al
110178c1:	add    BYTE PTR [eax],al
110178c3:	inc    edx
110178c4:	add    BYTE PTR [eax],al
110178c6:	add    BYTE PTR [ecx+0x0],al
110178c9:	add    BYTE PTR [eax],al
110178cb:	inc    ecx
110178cc:	add    BYTE PTR [eax],al
110178ce:	add    BYTE PTR [ecx+0x0],al
110178d1:	add    BYTE PTR [eax],al
110178d3:	inc    ecx
110178d4:	add    BYTE PTR [eax],al
110178d6:	add    BYTE PTR [ecx+0x0],al
110178d9:	add    BYTE PTR [eax],al
110178db:	inc    eax
110178dc:	add    BYTE PTR [eax],al
110178de:	add    BYTE PTR [ebx],bh
110178e0:	add    BYTE PTR [eax],al
110178e2:	add    BYTE PTR [ecx],dh
110178e4:	add    BYTE PTR [eax],al
110178e6:	add    BYTE PTR [ecx],ah
110178e8:	add    BYTE PTR [eax],al
110178ea:	add    BYTE PTR [ecx],dl
110178ec:	add    BYTE PTR [eax],al
110178ee:	add    BYTE PTR [esi],al
110178f0:	add    BYTE PTR [eax],al
110178f2:	add    BYTE PTR [ecx],al
	...
11017908:	add    BYTE PTR [eax],al
1101790a:	add    BYTE PTR [ebx],al
1101790c:	add    BYTE PTR [eax],al
1101790e:	add    BYTE PTR [eax+eax*1],cl
11017911:	add    BYTE PTR [eax],al
11017913:	and    DWORD PTR [eax],eax
11017915:	add    BYTE PTR [eax],al
11017917:	inc    eax
11017918:	add    BYTE PTR [eax],al
1101791a:	add    BYTE PTR [edi+0x0],bl
1101791d:	add    BYTE PTR [eax],al
1101791f:	je     0x11017921
11017921:	add    BYTE PTR [eax],al
11017923:	jge    0x11017925
11017925:	add    BYTE PTR [eax],al
11017927:	jg     0x11017929
11017929:	add    BYTE PTR [eax],al
1101792b:	add    BYTE PTR [eax],0x0
1101792e:	add    BYTE PTR [edx-0x79000000],al
11017934:	add    BYTE PTR [eax],al
11017936:	add    BYTE PTR [ecx-0x5f000000],dl
1101793c:	add    BYTE PTR [eax],al
1101793e:	add    BYTE PTR [edi-0x32000000],dh
11017944:	add    BYTE PTR [eax],al
11017946:	add    ch,ah
11017948:	add    BYTE PTR [eax],al
1101794a:	add    ah,bh
1101794c:	pop    ds
1101794d:	pop    ds
1101794e:	pop    ds
1101794f:	(bad)  
11017950:	(bad)  
11017952:	fcos   
11017954:	std    
11017955:	std    
11017956:	std    
11017957:	(bad)  
11017958:	std    
11017959:	std    
1101795a:	std    
1101795b:	call   edi
1101795d:	xlat   BYTE PTR ds:[ebx]
1101795e:	xlat   BYTE PTR ds:[ebx]
1101795f:	call   FWORD PTR ds:0xff1d1d
11017965:	add    BYTE PTR [eax],al
11017967:	cld    
11017968:	add    BYTE PTR [eax],al
1101796a:	add    ch,ah
1101796c:	add    BYTE PTR [eax],al
1101796e:	add    dh,cl
11017970:	add    BYTE PTR [eax],al
11017972:	add    BYTE PTR [edi-0x5f000000],dh
11017978:	add    BYTE PTR [eax],al
1101797a:	add    BYTE PTR [ecx-0x79000000],dl
11017980:	add    BYTE PTR [eax],al
11017982:	add    BYTE PTR [edx-0x80000000],al
11017988:	add    BYTE PTR [eax],al
1101798a:	add    BYTE PTR [edi+0x0],bh
1101798d:	add    BYTE PTR [eax],al
1101798f:	jg     0x11017991
11017991:	add    BYTE PTR [eax],al
11017993:	jg     0x11017995
11017995:	add    BYTE PTR [eax],al
11017997:	jg     0x11017999
11017999:	add    BYTE PTR [eax],al
1101799b:	jge    0x1101799d
1101799d:	add    BYTE PTR [eax],al
1101799f:	je     0x110179a1
110179a1:	add    BYTE PTR [eax],al
110179a3:	pop    edi
110179a4:	add    BYTE PTR [eax],al
110179a6:	add    BYTE PTR [eax+0x0],al
110179a9:	add    BYTE PTR [eax],al
110179ab:	and    DWORD PTR [eax],eax
110179ad:	add    BYTE PTR [eax],al
110179af:	or     al,0x0
110179b1:	add    BYTE PTR [eax],al
110179b3:	add    eax,DWORD PTR [eax]
	...
110179c9:	add    BYTE PTR [eax],al
110179cb:	add    al,0x0
110179cd:	add    BYTE PTR [eax],al
110179cf:	adc    al,BYTE PTR [eax]
110179d1:	add    BYTE PTR [eax],al
110179d3:	xor    DWORD PTR [eax],eax
110179d5:	add    BYTE PTR [eax],al
110179d7:	pop    edi
110179d8:	add    BYTE PTR [eax],al
110179da:	add    BYTE PTR [ebp-0x54000000],cl
110179e0:	add    BYTE PTR [eax],al
110179e2:	add    BYTE PTR [ecx-0x43000000],bh
110179e8:	add    BYTE PTR [eax],al
110179ea:	add    BYTE PTR [edi-0x3f000000],bh
110179f0:	add    BYTE PTR [eax],al
110179f2:	add    dh,al
110179f4:	add    BYTE PTR [eax],al
110179f6:	add    bh,cl
110179f8:	add    BYTE PTR [eax],al
110179fa:	add    dl,bl
110179fc:	add    BYTE PTR [eax],al
110179fe:	add    dh,ah
11017a00:	add    BYTE PTR [eax],al
11017a02:	add    cl,dh
11017a04:	add    BYTE PTR [eax],al
11017a06:	add    dh,bh
11017a08:	sbb    eax,0xdaff1d1d
11017a0d:	fcmovu st,st(2)
11017a0f:	(bad)  
11017a10:	std    
11017a11:	std    
11017a12:	std    
11017a13:	(bad)  
11017a14:	std    
11017a15:	std    
11017a16:	std    
11017a17:	(bad)  
11017a18:	std    
11017a19:	std    
11017a1a:	std    
11017a1b:	(bad)  
11017a1c:	std    
11017a1d:	std    
11017a1e:	std    
11017a1f:	(bad)  
11017a20:	fcomp  st(0)
11017a22:	fdivr  st,st(7)
11017a24:	sbb    al,0x1c
11017a26:	sbb    al,0xff
11017a28:	add    BYTE PTR [eax],al
11017a2a:	add    ch,bh
11017a2c:	add    BYTE PTR [eax],al
11017a2e:	add    cl,dh
11017a30:	add    BYTE PTR [eax],al
11017a32:	add    dh,ah
11017a34:	add    BYTE PTR [eax],al
11017a36:	add    dl,bl
11017a38:	add    BYTE PTR [eax],al
11017a3a:	add    bh,cl
11017a3c:	add    BYTE PTR [eax],al
11017a3e:	add    dh,al
11017a40:	add    BYTE PTR [eax],al
11017a42:	add    cl,al
11017a44:	add    BYTE PTR [eax],al
11017a46:	add    BYTE PTR [edi-0x42000000],bh
11017a4c:	add    BYTE PTR [eax],al
11017a4e:	add    BYTE PTR [esi-0x42000000],bh
11017a54:	add    BYTE PTR [eax],al
11017a56:	add    BYTE PTR [ebp-0x47000000],bh
11017a5c:	add    BYTE PTR [eax],al
11017a5e:	add    BYTE PTR [eax+eax*1+0x8d0000],ch
11017a65:	add    BYTE PTR [eax],al
11017a67:	pop    edi
11017a68:	add    BYTE PTR [eax],al
11017a6a:	add    BYTE PTR [ecx],dh
11017a6c:	add    BYTE PTR [eax],al
11017a6e:	add    BYTE PTR [edx],dl
11017a70:	add    BYTE PTR [eax],al
11017a72:	add    BYTE PTR [eax+eax*1],al
	...
11017a89:	add    BYTE PTR [eax],al
11017a8b:	add    eax,0x16000000
11017a90:	add    BYTE PTR [eax],al
11017a92:	add    bh,bh
11017a94:	add    BYTE PTR [eax],al
11017a96:	add    bh,bh
11017a98:	add    BYTE PTR [eax],al
11017a9a:	add    bh,bh
11017a9c:	add    BYTE PTR [eax],al
11017a9e:	add    bh,bh
11017aa0:	add    BYTE PTR [eax],al
11017aa2:	add    bh,bh
11017aa4:	add    BYTE PTR [eax],al
11017aa6:	add    bh,bh
11017aa8:	add    BYTE PTR [eax],al
11017aaa:	add    bh,bh
11017aac:	add    BYTE PTR [eax],al
11017aae:	add    bh,bh
11017ab0:	add    BYTE PTR [eax],al
11017ab2:	add    bh,bh
11017ab4:	add    BYTE PTR [eax],al
11017ab6:	add    bh,bh
11017ab8:	add    BYTE PTR [eax],al
11017aba:	add    bh,bh
11017abc:	add    BYTE PTR [eax],al
11017abe:	add    bh,bh
11017ac0:	add    BYTE PTR [eax],al
11017ac2:	add    bh,bh
11017ac4:	pop    ds
11017ac5:	pop    ds
11017ac6:	pop    ds
11017ac7:	(bad)  
11017ac8:	(bad)  
11017aca:	fcos   
11017acc:	std    
11017acd:	std    
11017ace:	std    
11017acf:	(bad)  
11017ad0:	std    
11017ad1:	std    
11017ad2:	std    
11017ad3:	(bad)  
11017ad4:	std    
11017ad5:	std    
11017ad6:	std    
11017ad7:	(bad)  
11017ad8:	std    
11017ad9:	std    
11017ada:	std    
11017adb:	(bad)  
11017adc:	std    
11017add:	std    
11017ade:	std    
11017adf:	(bad)  
11017ae0:	std    
11017ae1:	std    
11017ae2:	std    
11017ae3:	(bad)  
11017ae4:	fcomp  st(0)
11017ae6:	fdivr  st,st(7)
11017ae8:	push   ds
11017ae9:	push   ds
11017aea:	push   ds
11017aeb:	inc    DWORD PTR [eax]
11017aed:	add    BYTE PTR [eax],al
11017aef:	inc    DWORD PTR [eax]
11017af1:	add    BYTE PTR [eax],al
11017af3:	inc    DWORD PTR [eax]
11017af5:	add    BYTE PTR [eax],al
11017af7:	inc    DWORD PTR [eax]
11017af9:	add    BYTE PTR [eax],al
11017afb:	inc    DWORD PTR [eax]
11017afd:	add    BYTE PTR [eax],al
11017aff:	inc    DWORD PTR [eax]
11017b01:	add    BYTE PTR [eax],al
11017b03:	inc    DWORD PTR [eax]
11017b05:	add    BYTE PTR [eax],al
11017b07:	inc    DWORD PTR [eax]
11017b09:	add    BYTE PTR [eax],al
11017b0b:	inc    DWORD PTR [eax]
11017b0d:	add    BYTE PTR [eax],al
11017b0f:	inc    DWORD PTR [eax]
11017b11:	add    BYTE PTR [eax],al
11017b13:	inc    DWORD PTR [eax]
11017b15:	add    BYTE PTR [eax],al
11017b17:	inc    DWORD PTR [eax]
11017b19:	add    BYTE PTR [eax],al
11017b1b:	inc    DWORD PTR [eax]
11017b1d:	add    BYTE PTR [eax],al
11017b1f:	inc    DWORD PTR [eax]
11017b21:	add    BYTE PTR [eax],al
11017b23:	lods   al,BYTE PTR ds:[esi]
11017b24:	add    BYTE PTR [eax],al
11017b26:	add    BYTE PTR [ebx+0x0],dh
11017b29:	add    BYTE PTR [eax],al
11017b2b:	cmp    eax,DWORD PTR [eax]
11017b2d:	add    BYTE PTR [eax],al
11017b2f:	push   ss
11017b30:	add    BYTE PTR [eax],al
11017b32:	add    BYTE PTR ds:0x0,al
	...
11017b48:	add    BYTE PTR [eax],al
11017b4a:	add    BYTE PTR [esi],al
11017b4c:	add    BYTE PTR [eax],al
11017b4e:	add    BYTE PTR [eax],bl
11017b50:	add    BYTE PTR [eax],al
11017b52:	add    bh,bh
11017b54:	cmp    al,0x22
11017b56:	push   ss
11017b57:	(bad)  
11017b58:	jns    0x11017b9e
11017b5a:	sub    eax,0x2d4479ff
11017b5f:	push   DWORD PTR [esi+0x43]
11017b62:	sub    al,0xff
11017b64:	jo     0x11017ba5
11017b66:	sub    edi,edi
11017b68:	cmp    DWORD PTR gs:0x1e2f53ff,esp
11017b6f:	(bad)  
11017b70:	cmp    eax,0x27ff1622
11017b75:	push   ss
11017b76:	push   cs
11017b77:	call   DWORD PTR [eax]
11017b79:	or     DWORD PTR ds:0xff,eax
11017b7f:	call   FWORD PTR [edi]
11017b81:	pop    ds
11017b82:	pop    ds
11017b83:	(bad)  
11017b84:	(bad)  
11017b86:	fcos   
11017b88:	(bad)  
11017b89:	(bad)  
11017b8a:	(bad)  
11017b8b:	(bad)  
11017b8c:	(bad)  
11017b8d:	(bad)  
11017b8e:	std    
11017b8f:	(bad)  
11017b90:	(bad)  
11017b91:	(bad)  
11017b92:	std    
11017b93:	(bad)  
11017b94:	(bad)  
11017b95:	(bad)  
11017b96:	(bad)  
11017b97:	(bad)  
11017b98:	(bad)  
11017b99:	(bad)  
11017b9a:	std    
11017b9b:	(bad)  
11017b9c:	(bad)  
11017b9d:	(bad)  
11017b9e:	(bad)  
11017b9f:	(bad)  
11017ba0:	(bad)  
11017ba1:	(bad)  
11017ba2:	(bad)  
11017ba3:	(bad)  
11017ba4:	(bad)  
11017ba5:	(bad)  
11017ba6:	(bad)  
11017ba7:	call   edi
11017ba9:	xlat   BYTE PTR ds:[ebx]
11017baa:	xlat   BYTE PTR ds:[ebx]
11017bab:	call   FWORD PTR [esi]
11017bad:	push   ds
11017bae:	push   ds
11017baf:	inc    DWORD PTR [eax]
11017bb1:	add    BYTE PTR [eax],al
11017bb3:	call   DWORD PTR [eax]
11017bb5:	or     DWORD PTR ds:0xe1627ff,eax
11017bbb:	(bad)  
11017bbc:	cmp    eax,0x53ff1622
11017bc1:	das    
11017bc2:	pop    ds
11017bc3:	jmp    DWORD PTR [ebp+0x39]
11017bc6:	and    eax,0x293f70ff
11017bcb:	push   DWORD PTR [esi+0x43]
11017bce:	sub    al,0xff
11017bd0:	jns    0x11017c16
11017bd2:	sub    eax,0x2d4479ff
11017bd7:	(bad)  
11017bd8:	cmp    al,0x22
11017bda:	push   ss
11017bdb:	inc    DWORD PTR [eax]
11017bdd:	add    BYTE PTR [eax],al
11017bdf:	inc    DWORD PTR [eax]
11017be1:	add    BYTE PTR [eax],al
11017be3:	mov    ecx,0x7d000000
11017be8:	add    BYTE PTR [eax],al
11017bea:	add    BYTE PTR [eax+0x0],al
11017bed:	add    BYTE PTR [eax],al
11017bef:	sbb    BYTE PTR [eax],al
11017bf1:	add    BYTE PTR [eax],al
11017bf3:	push   es
	...
11017c08:	add    BYTE PTR [eax],al
11017c0a:	add    BYTE PTR [esi],al
11017c0c:	add    BYTE PTR [eax],al
11017c0e:	add    BYTE PTR [eax],bl
11017c10:	add    BYTE PTR [eax],al
11017c12:	add    bh,bh
11017c14:	jns    0x11017c5a
11017c16:	sub    eax,0x5a89f3ff
11017c1b:	(bad)  
11017c1c:	out    dx,eax
11017c1d:	xchg   DWORD PTR [eax-0x1],ebx
11017c20:	in     al,0x81
11017c22:	push   esp
11017c23:	call   ecx
11017c25:	jbe    0x11017c74
11017c27:	push   DWORD PTR [eax-0x7800be9c]
11017c2d:	dec    esp
11017c2e:	xor    edi,edi
11017c30:	pop    edx
11017c31:	xor    esp,DWORD PTR [ecx]
11017c33:	jmp    FWORD PTR [esi]
11017c35:	sbb    dl,BYTE PTR [ecx]
11017c37:	inc    DWORD PTR [edx+eax*1]
11017c3a:	add    edi,edi
11017c3c:	sbb    eax,0xdaff1d1d
11017c41:	fcmovu st,st(2)
11017c43:	(bad)  
11017c44:	(bad)  
11017c45:	(bad)  
11017c46:	std    
11017c47:	(bad)  
11017c48:	(bad)  
11017c49:	(bad)  
11017c4a:	(bad)  
11017c4b:	(bad)  
11017c4c:	(bad)  
11017c4d:	(bad)  
11017c4e:	std    
11017c4f:	(bad)  
11017c50:	(bad)  
11017c51:	(bad)  
11017c52:	std    
11017c53:	(bad)  
11017c54:	(bad)  
11017c55:	(bad)  
11017c56:	(bad)  
11017c57:	(bad)  
11017c58:	std    
11017c59:	std    
11017c5a:	std    
11017c5b:	(bad)  
11017c5c:	(bad)  
11017c5d:	(bad)  
11017c5e:	(bad)  
11017c5f:	(bad)  
11017c60:	(bad)  
11017c61:	(bad)  
11017c62:	(bad)  
11017c63:	(bad)  
11017c64:	(bad)  
11017c65:	(bad)  
11017c66:	(bad)  
11017c67:	(bad)  
11017c68:	(bad)  
11017c69:	(bad)  
11017c6a:	std    
11017c6b:	(bad)  
11017c6c:	fcomp  st(0)
11017c6e:	fdivr  st,st(7)
11017c70:	sbb    al,0x1c
11017c72:	sbb    al,0xff
11017c74:	add    eax,DWORD PTR [edx]
11017c76:	add    edi,edi
11017c78:	sbb    DWORD PTR cs:[eax],edx
11017c7b:	call   FWORD PTR [edx+0x33]
11017c7e:	and    edi,edi
11017c80:	xchg   DWORD PTR [edx+esi*1-0x1],ecx
11017c84:	mov    cl,0x64
11017c86:	inc    ecx
11017c87:	call   ecx
11017c89:	jbe    0x11017cd8
11017c8b:	jmp    esp
11017c8d:	adc    DWORD PTR [ebp-0x1],0xff5987ef
11017c94:	xrelease mov DWORD PTR [edx-0x1],ebx
11017c98:	jns    0x11017cde
11017c9a:	sub    eax,0xff
11017c9f:	inc    DWORD PTR [eax]
11017ca1:	add    BYTE PTR [eax],al
11017ca3:	mov    ebp,0x7f000000
11017ca8:	add    BYTE PTR [eax],al
11017caa:	add    BYTE PTR [ecx+0x0],al
11017cad:	add    BYTE PTR [eax],al
11017caf:	sbb    BYTE PTR [eax],al
11017cb1:	add    BYTE PTR [eax],al
11017cb3:	push   es
	...
11017cc8:	add    BYTE PTR [eax],al
11017cca:	add    BYTE PTR [esi],al
11017ccc:	add    BYTE PTR [eax],al
11017cce:	add    BYTE PTR [eax],bl
11017cd0:	add    BYTE PTR [eax],al
11017cd2:	add    bh,bh
11017cd4:	jns    0x11017d1a
11017cd6:	sub    eax,0x5887efff
11017cdb:	jmp    esp
11017cdd:	adc    DWORD PTR [edi+edi*8-0x30],0xb0ff4d76
11017ce5:	fs inc ecx
11017ce7:	inc    DWORD PTR [esi+0x5aff314c]
11017ced:	xor    esp,DWORD PTR [ecx]
11017cef:	jmp    FWORD PTR [esi]
11017cf1:	sbb    dl,BYTE PTR [ecx]
11017cf3:	inc    DWORD PTR [ebx]
11017cf5:	add    al,BYTE PTR [ecx]
11017cf7:	call   FWORD PTR [edi]
11017cf9:	pop    ds
11017cfa:	pop    ds
11017cfb:	(bad)  
11017cfc:	fcmovu st,st(2)
11017cfe:	(bad)  
11017d00:	(bad)  
11017d01:	(bad)  
11017d02:	std    
11017d03:	(bad)  
11017d04:	(bad)  
11017d05:	(bad)  
11017d06:	std    
11017d07:	(bad)  
11017d08:	(bad)  
11017d09:	(bad)  
11017d0a:	std    
11017d0b:	(bad)  
11017d0c:	std    
11017d0d:	std    
11017d0e:	std    
11017d0f:	(bad)  
11017d10:	(bad)  
11017d11:	(bad)  
11017d12:	std    
11017d13:	(bad)  
11017d14:	(bad)  
11017d15:	(bad)  
11017d16:	std    
11017d17:	(bad)  
11017d18:	std    
11017d19:	std    
11017d1a:	std    
11017d1b:	(bad)  
11017d1c:	(bad)  
11017d1d:	(bad)  
11017d1e:	(bad)  
11017d1f:	(bad)  
11017d20:	(bad)  
11017d21:	(bad)  
11017d22:	(bad)  
11017d23:	(bad)  
11017d24:	(bad)  
11017d25:	(bad)  
11017d26:	(bad)  
11017d27:	(bad)  
11017d28:	(bad)  
11017d29:	(bad)  
11017d2a:	std    
11017d2b:	(bad)  
11017d2c:	std    
11017d2d:	std    
11017d2e:	std    
11017d2f:	(bad)  
11017d30:	fcomp  st(0)
11017d32:	fdivr  st,st(7)
11017d34:	push   ds
11017d35:	push   ds
11017d36:	sbb    eax,0x10203ff
11017d3b:	jmp    FWORD PTR [esi]
11017d3d:	sbb    dl,BYTE PTR [ecx]
11017d3f:	call   FWORD PTR [edx+0x33]
11017d42:	and    edi,edi
11017d44:	xchg   DWORD PTR [edx+esi*1-0x1],ecx
11017d48:	mov    cl,0x64
11017d4a:	inc    ecx
11017d4b:	call   ecx
11017d4d:	jbe    0x11017d9c
11017d4f:	jmp    esp
11017d51:	adc    DWORD PTR [ebp-0x1],0xff5987ef
11017d58:	jns    0x11017d9e
11017d5a:	sub    eax,0xff
11017d5f:	inc    DWORD PTR [eax]
11017d61:	add    BYTE PTR [eax],al
11017d63:	mov    esi,0x7f000000
11017d68:	add    BYTE PTR [eax],al
11017d6a:	add    BYTE PTR [ecx+0x0],al
11017d6d:	add    BYTE PTR [eax],al
11017d6f:	sbb    BYTE PTR [eax],al
11017d71:	add    BYTE PTR [eax],al
11017d73:	push   es
	...
11017d88:	add    BYTE PTR [eax],al
11017d8a:	add    BYTE PTR [esi],al
11017d8c:	add    BYTE PTR [eax],al
11017d8e:	add    BYTE PTR [eax],bl
11017d90:	add    BYTE PTR [eax],al
11017d92:	add    bh,bh
11017d94:	jbe    0x11017dd9
11017d96:	sub    al,0xff
11017d98:	in     eax,0x81
11017d9a:	push   ebp
11017d9b:	call   ecx
11017d9d:	jbe    0x11017dec
11017d9f:	push   DWORD PTR [ecx-0x7800be9c]
11017da5:	dec    esp
11017da6:	xor    bh,bh
11017da8:	pop    edx
11017da9:	xor    esp,DWORD PTR [ecx]
11017dab:	jmp    FWORD PTR [esi]
11017dad:	sbb    dl,BYTE PTR [eax]
11017daf:	inc    DWORD PTR [edx+eax*1]
11017db2:	add    edi,edi
11017db4:	pop    ds
11017db5:	pop    ds
11017db6:	pop    ds
11017db7:	(bad)  
11017db8:	(bad)  
11017dba:	fcos   
11017dbc:	(bad)  
11017dbd:	(bad)  
11017dbe:	std    
11017dbf:	(bad)  
11017dc0:	std    
11017dc1:	std    
11017dc2:	std    
11017dc3:	(bad)  
11017dc4:	(bad)  
11017dc5:	(bad)  
11017dc6:	std    
11017dc7:	(bad)  
11017dc8:	(bad)  
11017dc9:	(bad)  
11017dca:	std    
11017dcb:	(bad)  
11017dcc:	(bad)  
11017dcd:	(bad)  
11017dce:	std    
11017dcf:	(bad)  
11017dd0:	std    
11017dd1:	std    
11017dd2:	std    
11017dd3:	(bad)  
11017dd4:	(bad)  
11017dd5:	(bad)  
11017dd6:	std    
11017dd7:	(bad)  
11017dd8:	(bad)  
11017dd9:	(bad)  
11017dda:	std    
11017ddb:	(bad)  
11017ddc:	(bad)  
11017ddd:	(bad)  
11017dde:	(bad)  
11017ddf:	(bad)  
11017de0:	(bad)  
11017de1:	(bad)  
11017de2:	std    
11017de3:	(bad)  
11017de4:	(bad)  
11017de5:	(bad)  
11017de6:	(bad)  
11017de7:	(bad)  
11017de8:	(bad)  
11017de9:	(bad)  
11017dea:	(bad)  
11017deb:	(bad)  
11017dec:	std    
11017ded:	std    
11017dee:	std    
11017def:	(bad)  
11017df0:	std    
11017df1:	std    
11017df2:	std    
11017df3:	call   edi
11017df5:	xlat   BYTE PTR ds:[ebx]
11017df6:	xlat   BYTE PTR ds:[ebx]
11017df7:	call   FWORD PTR [esi]
11017df9:	push   ds
11017dfa:	sbb    eax,0x10204ff
11017dff:	jmp    FWORD PTR [esi]
11017e01:	sbb    dl,BYTE PTR [ecx]
11017e03:	call   FWORD PTR [edx+0x33]
11017e06:	and    edi,edi
11017e08:	xchg   DWORD PTR [edx+esi*1-0x1],ecx
11017e0c:	mov    cl,0x64
11017e0e:	inc    edx
11017e0f:	call   ecx
11017e11:	jbe    0x11017e61
11017e13:	jmp    ebp
11017e15:	adc    DWORD PTR [ebp-0x1],0xff2c4376
11017e1c:	add    BYTE PTR [eax],al
11017e1e:	add    bh,bh
11017e20:	add    BYTE PTR [eax],al
11017e22:	add    BYTE PTR [esi+0x7f000000],bh
11017e28:	add    BYTE PTR [eax],al
11017e2a:	add    BYTE PTR [ecx+0x0],al
11017e2d:	add    BYTE PTR [eax],al
11017e2f:	sbb    BYTE PTR [eax],al
11017e31:	add    BYTE PTR [eax],al
11017e33:	push   es
	...
11017e48:	add    BYTE PTR [eax],al
11017e4a:	add    BYTE PTR [esi],al
11017e4c:	add    BYTE PTR [eax],al
11017e4e:	add    BYTE PTR [eax],bl
11017e50:	add    BYTE PTR [eax],al
11017e52:	add    bh,bh
11017e54:	jo     0x11017e95
11017e56:	sub    edi,edi
11017e58:	shl    DWORD PTR [esi+0x4e],1
11017e5b:	push   DWORD PTR [ecx-0x7800be9c]
11017e61:	dec    esp
11017e62:	xor    bh,bh
11017e64:	pop    ebx
11017e65:	xor    esp,DWORD PTR [ecx]
11017e67:	jmp    FWORD PTR [esi]
11017e69:	sbb    dl,BYTE PTR [ecx]
11017e6b:	inc    DWORD PTR [ebx]
11017e6d:	add    al,BYTE PTR [ecx]
11017e6f:	call   FWORD PTR ds:0xdaff1d1d
11017e75:	fcmovu st,st(1)
11017e77:	(bad)  
11017e78:	std    
11017e79:	std    
11017e7a:	std    
11017e7b:	(bad)  
11017e7c:	(bad)  
11017e7d:	(bad)  
11017e7e:	std    
11017e7f:	(bad)  
11017e80:	std    
11017e81:	std    
11017e82:	std    
11017e83:	(bad)  
11017e84:	(bad)  
11017e85:	(bad)  
11017e86:	std    
11017e87:	(bad)  
11017e88:	(bad)  
11017e89:	(bad)  
11017e8a:	std    
11017e8b:	(bad)  
11017e8c:	(bad)  
11017e8d:	(bad)  
11017e8e:	std    
11017e8f:	(bad)  
11017e90:	std    
11017e91:	std    
11017e92:	std    
11017e93:	(bad)  
11017e94:	std    
11017e95:	std    
11017e96:	std    
11017e97:	(bad)  
11017e98:	(bad)  
11017e99:	(bad)  
11017e9a:	std    
11017e9b:	(bad)  
11017e9c:	(bad)  
11017e9d:	(bad)  
11017e9e:	std    
11017e9f:	(bad)  
11017ea0:	std    
11017ea1:	std    
11017ea2:	std    
11017ea3:	(bad)  
11017ea4:	(bad)  
11017ea5:	(bad)  
11017ea6:	(bad)  
11017ea7:	(bad)  
11017ea8:	(bad)  
11017ea9:	(bad)  
11017eaa:	std    
11017eab:	(bad)  
11017eac:	std    
11017ead:	std    
11017eae:	std    
11017eaf:	(bad)  
11017eb0:	std    
11017eb1:	std    
11017eb2:	std    
11017eb3:	(bad)  
11017eb4:	std    
11017eb5:	std    
11017eb6:	std    
11017eb7:	(bad)  
11017eb8:	fcomp  st(0)
11017eba:	fdivr  st,st(7)
11017ebc:	sbb    al,0x1c
11017ebe:	sbb    edi,edi
11017ec0:	add    al,0x2
11017ec2:	add    edi,edi
11017ec4:	sbb    dl,BYTE PTR cs:[ecx]
11017ec7:	call   FWORD PTR [ebx+0x33]
11017eca:	and    edi,edi
11017ecc:	mov    BYTE PTR [edx+esi*1-0x1],cl
11017ed0:	mov    cl,0x64
11017ed2:	inc    ecx
11017ed3:	call   ecx
11017ed5:	jbe    0x11017f25
11017ed7:	push   DWORD PTR [eax+0x3f]
11017eda:	sub    edi,edi
11017edc:	add    BYTE PTR [eax],al
11017ede:	add    bh,bh
11017ee0:	add    BYTE PTR [eax],al
11017ee2:	add    BYTE PTR [esi+0x7f000000],bh
11017ee8:	add    BYTE PTR [eax],al
11017eea:	add    BYTE PTR [ecx+0x0],al
11017eed:	add    BYTE PTR [eax],al
11017eef:	sbb    BYTE PTR [eax],al
11017ef1:	add    BYTE PTR [eax],al
11017ef3:	push   es
	...
11017f08:	add    BYTE PTR [eax],al
11017f0a:	add    BYTE PTR [edi],al
11017f0c:	add    BYTE PTR [eax],al
11017f0e:	add    BYTE PTR [eax+eax*1],bl
11017f11:	add    BYTE PTR [eax],al
11017f13:	jmp    DWORD PTR [ebp+0x39]
11017f16:	and    eax,0x4164b0ff
11017f1b:	inc    DWORD PTR [esi+0x5aff314b]
11017f21:	xor    ah,BYTE PTR [ecx]
11017f23:	jmp    FWORD PTR [esi]
11017f25:	sbb    dl,BYTE PTR [ecx]
11017f27:	inc    DWORD PTR [ebx]
11017f29:	add    al,BYTE PTR [ecx]
11017f2b:	call   FWORD PTR [edi]
11017f2d:	pop    ds
11017f2e:	pop    ds
11017f2f:	(bad)  
11017f30:	fcmovu st,st(2)
11017f32:	(bad)  
11017f34:	(bad)  
11017f35:	(bad)  
11017f36:	std    
11017f37:	(bad)  
11017f38:	(bad)  
11017f39:	(bad)  
11017f3a:	(bad)  
11017f3b:	(bad)  
11017f3c:	(bad)  
11017f3d:	(bad)  
11017f3e:	std    
11017f3f:	(bad)  
11017f40:	(bad)  
11017f41:	(bad)  
11017f42:	std    
11017f43:	(bad)  
11017f44:	sti    
11017f45:	in     eax,dx
11017f46:	call   0xbcc1704a
11017f4b:	jmp    esi
11017f4d:	xchg   esi,eax
11017f4e:	jns    0x11017f4f
11017f50:	fidivr WORD PTR [ebx+0x57]
11017f53:	(bad)  
11017f54:	fsubr  DWORD PTR [ebx+0x44]
11017f57:	call   ebp
11017f59:	addr16 inc ecx
11017f5b:	call   edi
11017f5d:	jno    0x11017fae
11017f5f:	(bad)  
11017f60:	fmul   QWORD PTR [edx-0x4b170091]
11017f66:	mov    ds:0xe5e9f8ff,eax
11017f6b:	(bad)  
11017f6c:	std    
11017f6d:	std    
11017f6e:	std    
11017f6f:	(bad)  
11017f70:	(bad)  
11017f71:	(bad)  
11017f72:	std    
11017f73:	(bad)  
11017f74:	std    
11017f75:	std    
11017f76:	std    
11017f77:	(bad)  
11017f78:	(bad)  
11017f79:	(bad)  
11017f7a:	(bad)  
11017f7b:	(bad)  
11017f7c:	fcomp  st(0)
11017f7e:	fdivr  st,st(7)
11017f80:	sbb    eax,0x3ff1d1d
11017f85:	add    al,BYTE PTR [ecx]
11017f87:	jmp    FWORD PTR [esi]
11017f89:	sbb    DWORD PTR [eax],edx
11017f8b:	call   FWORD PTR [edx+0x32]
11017f8e:	and    edi,edi
11017f90:	xchg   BYTE PTR [ecx+esi*1-0x1],cl
11017f94:	mov    cl,0x64
11017f96:	inc    ecx
11017f97:	jmp    DWORD PTR [ebp+0x39]
11017f9a:	and    eax,0xff
11017f9f:	inc    DWORD PTR [eax]
11017fa1:	add    BYTE PTR [eax],al
11017fa3:	mov    edi,0x80000000
11017fa8:	add    BYTE PTR [eax],al
11017faa:	add    BYTE PTR [ecx+0x0],al
11017fad:	add    BYTE PTR [eax],al
11017faf:	sbb    BYTE PTR [eax],al
11017fb1:	add    BYTE PTR [eax],al
11017fb3:	push   es
	...
11017fc4:	add    BYTE PTR [eax],al
11017fc6:	add    BYTE PTR [ecx],al
11017fc8:	add    BYTE PTR [eax],al
11017fca:	add    BYTE PTR [ebx],cl
11017fcc:	add    BYTE PTR [eax],al
11017fce:	add    BYTE PTR [esi],ah
11017fd0:	add    BYTE PTR [eax],al
11017fd2:	add    bh,bh
11017fd4:	push   ebx
11017fd5:	das    
11017fd6:	push   ds
11017fd7:	inc    DWORD PTR [edi+0x5aff314c]
11017fdd:	xor    ah,BYTE PTR [ecx]
11017fdf:	jmp    FWORD PTR [esi]
11017fe1:	sbb    dl,BYTE PTR [eax]
11017fe3:	inc    DWORD PTR [edx+eax*1]
11017fe6:	add    edi,edi
11017fe8:	pop    ds
11017fe9:	pop    ds
11017fea:	pop    ds
11017feb:	(bad)  
11017fec:	(bad)  
11017fee:	fcos   
11017ff0:	(bad)  
11017ff1:	(bad)  
11017ff2:	(bad)  
11017ff3:	(bad)  
11017ff4:	(bad)  
11017ff5:	(bad)  
11017ff6:	(bad)  
11017ff7:	(bad)  
11017ff8:	(bad)  
11017ff9:	(bad)  
11017ffa:	(bad)  
11017ffb:	(bad)  
11017ffc:	cld    
11017ffd:	out    dx,eax
11017ffe:	jmp    0xe4ff:0x8eaaefff
11018005:	js     0x11018055
11018007:	jmp    eax
11018009:	jno    0x11018051
1101800b:	(bad)  
1101800c:	(bad)  [ebp+0x43]
1101800f:	(bad)  
11018010:	fisubr DWORD PTR [edx+0x40]
11018013:	(bad)  
11018014:	fsub   DWORD PTR [esi+0x3e]
11018017:	call   ebp
11018019:	arpl   WORD PTR [ebx],di
1101801b:	call   edx
1101801d:	pop    edi
1101801e:	cmp    bh,bh
11018020:	rcr    BYTE PTR [ebp+esi*1-0x1],1
11018024:	int    0x59
11018026:	xor    bh,bh
11018028:	int3   
11018029:	pop    edx
1101802a:	xor    eax,0x7a91ddff
1101802f:	(bad)  
11018030:	clc    
11018031:	jmp    0xfffd:0xfefeffe6
11018038:	(bad)  
11018039:	(bad)  
1101803a:	(bad)  
1101803b:	(bad)  
1101803c:	(bad)  
1101803d:	(bad)  
1101803e:	(bad)  
1101803f:	(bad)  
11018040:	fcomp  st(0)
11018042:	xlat   BYTE PTR ds:[ebx]
11018043:	call   FWORD PTR ds:0x3ff1d1d
11018049:	add    al,BYTE PTR [ecx]
1101804b:	jmp    FWORD PTR [esi]
1101804d:	sbb    DWORD PTR [eax],edx
1101804f:	call   FWORD PTR [edx+0x32]
11018052:	and    edi,edi
11018054:	xchg   DWORD PTR [edx+esi*1-0x1],ecx
11018058:	push   ebx
11018059:	das    
1101805a:	pop    ds
1101805b:	inc    DWORD PTR [eax]
1101805d:	add    BYTE PTR [eax],al
1101805f:	inc    DWORD PTR [eax]
11018061:	add    BYTE PTR [eax],al
11018063:	rol    DWORD PTR [eax],0x0
11018066:	add    BYTE PTR [edx+0x42000000],al
1101806c:	add    BYTE PTR [eax],al
1101806e:	add    BYTE PTR [eax],bl
11018070:	add    BYTE PTR [eax],al
11018072:	add    BYTE PTR [esi],al
	...
11018080:	add    BYTE PTR [eax],al
11018082:	add    BYTE PTR [ecx],al
11018084:	add    BYTE PTR [eax],al
11018086:	add    BYTE PTR ds:0x15000000,al
1101808c:	add    BYTE PTR [eax],al
1101808e:	add    BYTE PTR [eax],bh
11018090:	add    BYTE PTR [eax],al
11018092:	add    bh,bh
11018094:	cmp    eax,0x5aff1622
11018099:	xor    esp,DWORD PTR [ecx]
1101809b:	jmp    FWORD PTR [esi]
1101809d:	sbb    dl,BYTE PTR [ecx]
1101809f:	inc    DWORD PTR [edx+eax*1]
110180a2:	add    edi,edi
110180a4:	sbb    eax,0xdaff1d1d
110180a9:	fcmovu st,st(2)
110180ab:	(bad)  
110180ac:	(bad)  
110180ad:	(bad)  
110180ae:	(bad)  
110180af:	(bad)  
110180b0:	(bad)  
110180b1:	(bad)  
110180b2:	std    
110180b3:	(bad)  
110180b4:	(bad)  
110180b5:	(bad)  
110180b6:	std    
110180b7:	(bad)  
110180b8:	stc    
110180b9:	(bad)  
110180ba:	(bad)  
110180bb:	(bad)  
110180bc:	in     al,dx
110180bd:	mov    BYTE PTR [ebp-0x1],bl
110180c0:	call   0xf700d041
110180c5:	jns    0x11018113
110180c7:	jmp    edx
110180c9:	jne    0x11018114
110180cb:	jmp    eax
110180cd:	jno    0x11018116
110180cf:	(bad)  
110180d0:	(bad)  [esi+0x44]
110180d3:	(bad)  
110180d4:	fisubr DWORD PTR [ebx+0x41]
110180d7:	(bad)  
110180d8:	fsub   DWORD PTR [edi+0x3f]
110180db:	call   ebp
110180dd:	arpl   WORD PTR [edi+edi*8],di
110180e0:	rcr    BYTE PTR [edi+0x39],cl
110180e3:	call   eax
110180e5:	pop    esp
110180e6:	xor    eax,0x3259cdff
110180eb:	dec    edx
110180ed:	push   ebp
110180ee:	xor    bh,bh
110180f0:	int3   
110180f1:	pop    ebp
110180f2:	cmp    edi,edi
110180f4:	in     al,dx
110180f5:	les    edi,FWORD PTR [eax-0x1010101]
110180fb:	(bad)  
110180fc:	(bad)  
110180fd:	(bad)  
110180fe:	(bad)  
110180ff:	(bad)  
11018100:	(bad)  
11018101:	(bad)  
11018102:	(bad)  
11018103:	(bad)  
11018104:	fcomp  st(0)
11018106:	fdivr  st,st(7)
11018108:	sbb    al,0x1c
1101810a:	sbb    edi,edi
1101810c:	add    eax,DWORD PTR [edx]
1101810e:	add    edi,edi
11018110:	sbb    DWORD PTR cs:[eax],edx
11018113:	call   FWORD PTR [edx+0x33]
11018116:	and    edi,edi
11018118:	cmp    eax,0xff1622
1101811d:	add    BYTE PTR [eax],al
1101811f:	inc    DWORD PTR [eax]
11018121:	add    BYTE PTR [eax],al
11018123:	mov    BYTE PTR [eax],0x0
11018126:	add    BYTE PTR [edi+0x45000000],al
1101812c:	add    BYTE PTR [eax],al
1101812e:	add    BYTE PTR [ecx],bl
11018130:	add    BYTE PTR [eax],al
11018132:	add    BYTE PTR [esi],al
	...
1101813c:	add    BYTE PTR [eax],al
1101813e:	add    BYTE PTR [ecx],al
11018140:	add    BYTE PTR [eax],al
11018142:	add    BYTE PTR ds:0x10000000,al
11018148:	add    BYTE PTR [eax],al
1101814a:	add    BYTE PTR [edx],ch
1101814c:	add    BYTE PTR [eax],al
1101814e:	add    BYTE PTR [edi+0x0],dl
11018151:	add    BYTE PTR [eax],al
11018153:	jmp    DWORD PTR [edi]
11018155:	push   ss
11018156:	push   cs
11018157:	jmp    FWORD PTR [esi]
11018159:	sbb    dl,BYTE PTR [ecx]
1101815b:	inc    DWORD PTR [ebx]
1101815d:	add    al,BYTE PTR [ecx]
1101815f:	call   FWORD PTR [edi]
11018161:	pop    ds
11018162:	pop    ds
11018163:	(bad)  
11018164:	fcmovu st,st(2)
11018166:	(bad)  
11018168:	(bad)  
11018169:	(bad)  
1101816a:	(bad)  
1101816b:	(bad)  
1101816c:	(bad)  
1101816d:	(bad)  
1101816e:	(bad)  
1101816f:	(bad)  
11018170:	(bad)  
11018171:	(bad)  
11018172:	std    
11018173:	(bad)  
11018174:	cli    
11018175:	int    0xb9
11018177:	push   eax
11018179:	xchg   DWORD PTR [ecx-0x1],ebx
1101817c:	in     eax,dx
1101817d:	adc    DWORD PTR [ebp-0x1],0xffffffea
11018181:	adc    BYTE PTR [ebx-0x1],0xe8
11018185:	jge    0x110181d7
11018187:	jmp    ebp
11018189:	jns    0x110181d9
1101818b:	jmp    ebx
1101818d:	jbe    0x110181da
1101818f:	jmp    ecx
11018191:	jb     0x110181db
11018193:	(bad)  
11018194:	fisubr WORD PTR [edi+0x45]
11018197:	(bad)  
11018198:	fld    TBYTE PTR [ebx+0x42]
1101819b:	(bad)  
1101819c:	fsub   DWORD PTR [edi+0x3f]
1101819f:	call   ebp
110181a1:	fs cmp al,0xff
110181a4:	rcr    BYTE PTR [edi+0x39],cl
110181a7:	call   eax
110181a9:	pop    esp
110181aa:	ss dec ebp
110181ad:	pop    ecx
110181ae:	xor    edi,edi
110181b0:	retf   0x2f55
110181b3:	dec    ecx
110181b5:	push   ebx
110181b6:	das    
110181b7:	jmp    edi
110181b9:	mov    ah,0xa4
110181bb:	(bad)  
110181bc:	(bad)  
110181bd:	(bad)  
110181be:	(bad)  
110181bf:	(bad)  
110181c0:	(bad)  
110181c1:	(bad)  
110181c2:	(bad)  
110181c3:	(bad)  
110181c4:	(bad)  
110181c5:	(bad)  
110181c6:	(bad)  
110181c7:	(bad)  
110181c8:	fcomp  st(0)
110181ca:	fdivr  st,st(7)
110181cc:	push   ds
110181cd:	push   ds
110181ce:	sbb    eax,0x10203ff
110181d3:	jmp    FWORD PTR [esi]
110181d5:	sbb    dl,BYTE PTR [ecx]
110181d7:	jmp    DWORD PTR [edi]
110181d9:	push   ss
110181da:	push   cs
110181db:	inc    DWORD PTR [eax]
110181dd:	add    BYTE PTR [eax],al
110181df:	inc    DWORD PTR [eax]
110181e1:	add    BYTE PTR [eax],al
110181e3:	iret   
110181e4:	add    BYTE PTR [eax],al
110181e6:	add    BYTE PTR [ecx+0x4c000000],dl
110181ec:	add    BYTE PTR [eax],al
110181ee:	add    BYTE PTR [eax+eax*1],bl
110181f1:	add    BYTE PTR [eax],al
110181f3:	push   es
110181f4:	add    BYTE PTR [eax],al
110181f6:	add    BYTE PTR [eax],al
110181f8:	add    BYTE PTR [eax],al
110181fa:	add    BYTE PTR [ecx],al
110181fc:	add    BYTE PTR [eax],al
110181fe:	add    BYTE PTR ds:0xf000000,al
11018204:	add    BYTE PTR [eax],al
11018206:	add    BYTE PTR ds:0x49000000,ah
1101820c:	add    BYTE PTR [eax],al
1101820e:	add    BYTE PTR [esi+0x0],bh
11018211:	add    BYTE PTR [eax],al
11018213:	call   DWORD PTR [eax]
11018215:	or     DWORD PTR ds:0x10204ff,eax
1101821b:	call   FWORD PTR [edi]
1101821d:	pop    ds
1101821e:	pop    ds
1101821f:	(bad)  
11018220:	(bad)  
11018222:	fcos   
11018224:	std    
11018225:	std    
11018226:	std    
11018227:	(bad)  
11018228:	std    
11018229:	std    
1101822a:	std    
1101822b:	(bad)  
1101822c:	(bad)  
1101822d:	(bad)  
1101822e:	std    
1101822f:	(bad)  
11018230:	sti    
11018231:	fmul   st,st(0)
11018233:	push   esp
11018235:	mov    WORD PTR [ebp-0x1],ds
11018238:	repnz mov bl,BYTE PTR [ebx-0x1]
1101823c:	out    dx,eax
1101823d:	xchg   DWORD PTR [ecx-0x1],ebx
11018240:	in     eax,dx
11018241:	test   DWORD PTR [edi-0x1],edx
11018244:	jmp    0x110181c8
11018246:	push   ebp
11018247:	(bad)  
11018248:	call   0xf800d4cb
1101824d:	jnp    0x1101829e
1101824f:	jmp    ebx
11018251:	ja     0x1101829f
11018253:	jmp    ecx
11018255:	jae    0x110182a0
11018257:	(bad)  
11018258:	fidiv  WORD PTR [eax+0x46]
1101825b:	(bad)  
1101825c:	fld    TBYTE PTR [ebx+0x43]
1101825f:	(bad)  
11018260:	fsub   DWORD PTR [edi+0x3f]
11018263:	call   ebp
11018265:	fs cmp al,0xff
11018268:	shl    DWORD PTR [eax+0x39],cl
1101826b:	call   eax
1101826d:	pop    esp
1101826e:	ss dec ebp
11018271:	pop    ecx
11018272:	xor    edi,edi
11018274:	retf   0x3055
11018277:	dec    ecx
11018279:	push   ebx
1101827a:	das    
1101827b:	(bad)  
1101827c:	in     al,dx
1101827d:	les    edi,FWORD PTR [eax-0x2010101]
11018283:	(bad)  
11018284:	(bad)  
11018285:	(bad)  
11018286:	std    
11018287:	(bad)  
11018288:	std    
11018289:	std    
1101828a:	std    
1101828b:	call   edi
1101828d:	xlat   BYTE PTR ds:[ebx]
1101828e:	xlat   BYTE PTR ds:[ebx]
1101828f:	call   FWORD PTR [esi]
11018291:	push   ds
11018292:	sbb    eax,0x10204ff
11018297:	call   DWORD PTR [eax]
11018299:	or     DWORD PTR ds:0xff,eax
1101829f:	inc    DWORD PTR [eax]
110182a1:	add    BYTE PTR [eax],al
110182a3:	fiadd  DWORD PTR [eax]
110182a5:	add    BYTE PTR [eax],al
110182a7:	mov    eax,ds:0x5c000000
110182ac:	add    BYTE PTR [eax],al
110182ae:	add    BYTE PTR [esi],ah
110182b0:	add    BYTE PTR [eax],al
110182b2:	add    BYTE PTR [edx],cl
110182b4:	add    BYTE PTR [eax],al
110182b6:	add    BYTE PTR [ecx],al
110182b8:	add    BYTE PTR [eax],al
110182ba:	add    BYTE PTR ds:0xf000000,al
110182c0:	add    BYTE PTR [eax],al
110182c2:	add    BYTE PTR [eax+eax*1],ah
110182c5:	add    BYTE PTR [eax],al
110182c7:	inc    esi
110182c8:	add    BYTE PTR [eax],al
110182ca:	add    BYTE PTR [eax+eax*1+0x0],dh
110182ce:	add    BYTE PTR [eax-0x1000000],ch
110182d4:	add    BYTE PTR [eax],al
110182d6:	add    bh,bh
110182d8:	sbb    eax,0xdaff1d1d
110182dd:	fcmovu st,st(2)
110182df:	(bad)  
110182e0:	(bad)  
110182e1:	(bad)  
110182e2:	(bad)  
110182e3:	(bad)  
110182e4:	(bad)  
110182e5:	(bad)  
110182e6:	std    
110182e7:	(bad)  
110182e8:	(bad)  
110182e9:	(bad)  
110182ea:	std    
110182eb:	(bad)  
110182ec:	std    
110182ed:	icebp  
110182ee:	jmp    0x110182ef
110182f0:	hlt    
110182f1:	xchg   ebx,eax
110182f2:	push   0x5e8cf3ff
110182f7:	push   ebx
110182f9:	lea    ebx,[esi-0x1]
110182fc:	repnz lea ebx,[edi-0x1]
11018300:	icebp  
11018301:	mov    bl,BYTE PTR [ebp-0x1]
11018304:	out    dx,al
11018305:	xchg   BYTE PTR [edx-0x1],bl
11018308:	jmp    0x1101828d
1101830a:	push   edi
1101830b:	(bad)  
1101830c:	jmp    0xf800d790
11018311:	jnp    0x11018363
11018313:	jmp    esp
11018315:	js     0x11018364
11018317:	jmp    ecx
11018319:	jae    0x11018365
1101831b:	(bad)  
1101831c:	fidiv  WORD PTR [eax+0x46]
1101831f:	(bad)  
11018320:	fld    TBYTE PTR [ebx+eax*2-0x1]
11018324:	fsub   DWORD PTR [edi+0x3f]
11018327:	call   esi
11018329:	fs cmp al,0xff
1101832c:	shl    DWORD PTR [eax+0x39],cl
1101832f:	call   eax
11018331:	pop    esp
11018332:	ss dec ebp
11018335:	pop    ecx
11018336:	xor    edi,edi
11018338:	retf   0x3055
1101833b:	dec    esp
1101833d:	pop    ebp
1101833e:	cmp    edi,edi
11018340:	clc    
11018341:	jmp    0xfffe:0xfefeffe6
11018348:	std    
11018349:	std    
1101834a:	std    
1101834b:	(bad)  
1101834c:	(bad)  
1101834d:	(bad)  
1101834e:	std    
1101834f:	(bad)  
11018350:	fcomp  st(0)
11018352:	fdivr  st,st(7)
11018354:	sbb    al,0x1c
11018356:	sbb    al,0xff
11018358:	add    BYTE PTR [eax],al
1101835a:	add    bh,bh
1101835c:	add    BYTE PTR [eax],al
1101835e:	add    bh,bh
11018360:	add    BYTE PTR [eax],al
11018362:	add    dh,ah
11018364:	add    BYTE PTR [eax],al
11018366:	add    BYTE PTR [edi+0x74000000],dh
1101836c:	add    BYTE PTR [eax],al
1101836e:	add    BYTE PTR [eax],bh
11018370:	add    BYTE PTR [eax],al
11018372:	add    BYTE PTR ds:0x5000000,dl
11018378:	add    BYTE PTR [eax],al
1101837a:	add    BYTE PTR [edi],cl
1101837c:	add    BYTE PTR [eax],al
1101837e:	add    BYTE PTR [eax+eax*1],ah
11018381:	add    BYTE PTR [eax],al
11018383:	inc    esi
11018384:	add    BYTE PTR [eax],al
11018386:	add    BYTE PTR [edx+0x0],dh
11018389:	add    BYTE PTR [eax],al
1101838b:	mov    ds:0xd2000000,al
11018390:	add    BYTE PTR [eax],al
11018392:	add    bh,bh
11018394:	pop    ds
11018395:	pop    ds
11018396:	pop    ds
11018397:	(bad)  
11018398:	fcmovu st,st(2)
1101839a:	fcos   
1101839c:	std    
1101839d:	std    
1101839e:	std    
1101839f:	(bad)  
110183a0:	std    
110183a1:	std    
110183a2:	std    
110183a3:	(bad)  
110183a4:	std    
110183a5:	std    
110183a6:	std    
110183a7:	(bad)  
110183a8:	(bad)  
110183a9:	(bad)  
110183aa:	std    
110183ab:	(bad)  
110183ac:	clc    
110183ad:	mov    bh,0x99
110183af:	push   ebx
110183b1:	lea    ebx,[edi-0x1]
110183b4:	hlt    
110183b5:	mov    fs,WORD PTR [eax-0x1]
110183b8:	hlt    
110183b9:	(bad)  
110183ba:	(bad)  
110183bb:	push   esp
110183bd:	(bad)  
110183be:	(bad)  
110183bf:	push   ebx
110183c1:	(bad)  
110183c2:	(bad)  
110183c3:	push   ecx
110183c5:	mov    WORD PTR [edi-0x1],ds
110183c8:	out    dx,al
110183c9:	mov    BYTE PTR [edi+edi*8-0x14],bl
110183cd:	test   BYTE PTR [ecx-0x1],bl
110183d0:	jmp    0xf800d955
110183d5:	jl     0x11018429
110183d7:	jmp    esp
110183d9:	js     0x11018429
110183db:	jmp    ecx
110183dd:	je     0x11018429
110183df:	(bad)  
110183e0:	fidiv  WORD PTR [eax+0x46]
110183e3:	(bad)  
110183e4:	fld    TBYTE PTR [ebx+eax*2-0x1]
110183e8:	fldcw  WORD PTR [eax+0x40]
110183eb:	call   esi
110183ed:	fs cmp al,0xff
110183f0:	shl    DWORD PTR [eax+0x39],cl
110183f3:	call   eax
110183f5:	pop    esp
110183f6:	ss dec ebp
110183f9:	pop    ecx
110183fa:	xor    edi,edi
110183fc:	retf   
110183fd:	push   ebp
110183fe:	xor    bh,bh
11018400:	fst    QWORD PTR [ecx-0x2010086]
11018406:	std    
11018407:	(bad)  
11018408:	std    
11018409:	std    
1101840a:	std    
1101840b:	(bad)  
1101840c:	std    
1101840d:	std    
1101840e:	std    
1101840f:	(bad)  
11018410:	(bad)  
11018411:	(bad)  
11018412:	std    
11018413:	(bad)  
11018414:	fcomp  st(0)
11018416:	fdivr  st,st(7)
11018418:	push   ds
11018419:	push   ds
1101841a:	push   ds
1101841b:	inc    DWORD PTR [eax]
1101841d:	add    BYTE PTR [eax],al
1101841f:	inc    DWORD PTR [eax]
11018421:	add    BYTE PTR [eax],al
11018423:	icebp  
11018424:	add    BYTE PTR [eax],al
11018426:	add    bh,cl
11018428:	add    BYTE PTR [eax],al
1101842a:	add    BYTE PTR [ebp+0x56000000],dl
11018430:	add    BYTE PTR [eax],al
11018432:	add    BYTE PTR [ecx],ch
11018434:	add    BYTE PTR [eax],al
11018436:	add    BYTE PTR [edi],cl
11018438:	add    BYTE PTR [eax],al
1101843a:	add    BYTE PTR [eax],ah
1101843c:	add    BYTE PTR [eax],al
1101843e:	add    BYTE PTR [edx+0x0],al
11018441:	add    BYTE PTR [eax],al
11018443:	outs   dx,DWORD PTR ds:[esi]
11018444:	add    BYTE PTR [eax],al
11018446:	add    BYTE PTR [eax-0x31000000],ah
1101844c:	add    BYTE PTR [eax],al
1101844e:	add    bl,bh
11018450:	pop    ds
11018451:	pop    ds
11018452:	pop    ds
11018453:	(bad)  
11018454:	(bad)  
11018456:	fcos   
11018458:	(bad)  
11018459:	(bad)  
1101845a:	std    
1101845b:	(bad)  
1101845c:	(bad)  
1101845d:	(bad)  
1101845e:	std    
1101845f:	(bad)  
11018460:	(bad)  
11018461:	(bad)  
11018462:	std    
11018463:	(bad)  
11018464:	(bad)  
11018465:	(bad)  
11018466:	std    
11018467:	(bad)  
11018468:	std    
11018469:	icebp  
1101846a:	jmp    0x1101846b
1101846c:	hlt    
1101846d:	xchg   ecx,eax
1101846e:	fs push ebx
11018471:	(bad)  
11018472:	popa   
11018473:	push   esp
11018475:	xchg   ecx,eax
11018476:	fs push esp
11018479:	xchg   edx,eax
1101847a:	gs push esp
1101847d:	xchg   edx,eax
1101847e:	push   sp
11018481:	xchg   ebx,eax
11018482:	push   bx
11018485:	xchg   ecx,eax
11018486:	gs push ecx
11018489:	lea    esp,[edx-0x1]
1101848c:	out    dx,al
1101848d:	mov    DWORD PTR [esi-0x1],ebx
11018490:	in     al,dx
11018491:	xchg   BYTE PTR [edx-0x1],bl
11018494:	jmp    0xf800db1a
11018499:	jge    0x110184ed
1101849b:	jmp    ebx
1101849d:	jns    0x110184ed
1101849f:	jmp    ecx
110184a1:	je     0x110184ed
110184a3:	(bad)  
110184a4:	fidiv  WORD PTR [eax+0x47]
110184a7:	(bad)  
110184a8:	fld    TBYTE PTR [ebx+eax*2-0x1]
110184ac:	fldcw  WORD PTR [eax+0x40]
110184af:	call   esi
110184b1:	fs cmp al,0xff
110184b4:	shl    DWORD PTR [eax+0x39],cl
110184b7:	call   eax
110184b9:	pop    esp
110184ba:	ss dec ebp
110184bd:	pop    ecx
110184be:	xor    bh,bh
110184c0:	int3   
110184c1:	pop    ecx
110184c2:	xor    eax,0xe5eaf8ff
110184c7:	(bad)  
110184c8:	std    
110184c9:	std    
110184ca:	std    
110184cb:	(bad)  
110184cc:	(bad)  
110184cd:	(bad)  
110184ce:	std    
110184cf:	(bad)  
110184d0:	(bad)  
110184d1:	(bad)  
110184d2:	std    
110184d3:	(bad)  
110184d4:	std    
110184d5:	std    
110184d6:	std    
110184d7:	call   edi
110184d9:	xlat   BYTE PTR ds:[ebx]
110184da:	xlat   BYTE PTR ds:[ebx]
110184db:	call   FWORD PTR [esi]
110184dd:	push   ds
110184de:	push   ds
110184df:	inc    DWORD PTR [eax]
110184e1:	add    BYTE PTR [eax],al
110184e3:	inc    BYTE PTR [eax]
110184e5:	add    BYTE PTR [eax],al
110184e7:	in     eax,0x0
110184e9:	add    BYTE PTR [eax],al
110184eb:	mov    bh,0x0
110184ed:	add    BYTE PTR [eax],al
110184ef:	jl     0x110184f1
110184f1:	add    BYTE PTR [eax],al
110184f3:	inc    esi
110184f4:	add    BYTE PTR [eax],al
110184f6:	add    BYTE PTR [eax],ah
110184f8:	add    BYTE PTR [eax],al
110184fa:	add    BYTE PTR [eax+eax*1],dh
110184fd:	add    BYTE PTR [eax],al
110184ff:	arpl   WORD PTR [eax],ax
11018501:	add    BYTE PTR [eax],al
11018503:	cwde   
11018504:	add    BYTE PTR [eax],al
11018506:	add    ah,cl
11018508:	add    BYTE PTR [eax],al
1101850a:	add    dl,bh
1101850c:	sbb    eax,0xdaff1d1d
11018511:	fcmovu st,st(2)
11018513:	(bad)  
11018514:	(bad)  
11018515:	(bad)  
11018516:	(bad)  
11018517:	(bad)  
11018518:	(bad)  
11018519:	(bad)  
1101851a:	std    
1101851b:	(bad)  
1101851c:	(bad)  
1101851d:	(bad)  
1101851e:	(bad)  
1101851f:	(bad)  
11018520:	(bad)  
11018521:	(bad)  
11018522:	(bad)  
11018523:	(bad)  
11018524:	(bad)  
11018525:	(bad)  
11018526:	(bad)  
11018527:	(bad)  
11018528:	cli    
11018529:	int    0xb8
1101852b:	push   esp
1101852d:	nop
1101852e:	(bad)  
1101852f:	push   esp
11018531:	xchg   edx,eax
11018532:	gs push esp
11018535:	xchg   esp,eax
11018536:	push   0x6a95f4ff
1101853b:	push   esp
1101853d:	xchg   ebp,eax
1101853e:	imul   edi,edi,0xfffffff4
11018541:	xchg   esi,eax
11018542:	imul   edi,edi,0xfffffff4
11018545:	xchg   ebp,eax
11018546:	push   0xffffffff
11018548:	repz xchg ebx,eax
1101854a:	push   0x648ff1ff
1101854f:	(bad)  
11018550:	out    dx,al
11018551:	mov    esp,DWORD PTR [eax-0x1]
11018554:	jmp    0x110184dd
11018556:	pop    esp
11018557:	(bad)  
11018558:	jmp    0xf800dcdf
1101855d:	jge    0x110185b2
1101855f:	jmp    ebx
11018561:	jns    0x110185b1
11018563:	jmp    eax
11018565:	je     0x110185b1
11018567:	(bad)  
11018568:	fidiv  WORD PTR [eax+0x47]
1101856b:	(bad)  
1101856c:	fld    TBYTE PTR [ebx+eax*2-0x1]
11018570:	fldcw  WORD PTR [eax+0x40]
11018573:	call   esi
11018575:	fs cmp al,0xff
11018578:	shl    BYTE PTR [eax+0x39],cl
1101857b:	call   eax
1101857d:	pop    esp
1101857e:	xor    eax,0x3259cdff
11018583:	(bad)  
11018584:	call   0x1001293d
11018589:	(bad)  
1101858a:	(bad)  
1101858b:	(bad)  
1101858c:	(bad)  
1101858d:	(bad)  
1101858e:	(bad)  
1101858f:	(bad)  
11018590:	(bad)  
11018591:	(bad)  
11018592:	(bad)  
11018593:	(bad)  
11018594:	(bad)  
11018595:	(bad)  
11018596:	(bad)  
11018597:	(bad)  
11018598:	(bad)  
11018599:	(bad)  
1101859a:	(bad)  
1101859b:	(bad)  
1101859c:	fcomp  st(0)
1101859e:	fdivr  st,st(7)
110185a0:	sbb    al,0x1c
110185a2:	sbb    al,0xff
110185a4:	add    BYTE PTR [eax],al
110185a6:	add    ah,bh
110185a8:	add    BYTE PTR [eax],al
110185aa:	add    al,bl
110185ac:	add    BYTE PTR [eax],al
110185ae:	add    BYTE PTR [eax+0x66000000],ah
110185b4:	add    BYTE PTR [eax],al
110185b6:	add    BYTE PTR ds:0x43000000,dh
110185bc:	add    BYTE PTR [eax],al
110185be:	add    BYTE PTR [ecx+0x0],bh
110185c1:	add    BYTE PTR [eax],al
110185c3:	mov    edx,0xfa000000
110185c8:	pop    ds
110185c9:	pop    ds
110185ca:	pop    ds
110185cb:	(bad)  
110185cc:	fcmovu st,st(2)
110185ce:	(bad)  
110185d0:	(bad)  
110185d1:	(bad)  
110185d2:	(bad)  
110185d3:	(bad)  
110185d4:	(bad)  
110185d5:	(bad)  
110185d6:	(bad)  
110185d7:	(bad)  
110185d8:	(bad)  
110185d9:	(bad)  
110185da:	(bad)  
110185db:	(bad)  
110185dc:	(bad)  
110185dd:	(bad)  
110185de:	(bad)  
110185df:	(bad)  
110185e0:	(bad)  
110185e1:	(bad)  
110185e2:	(bad)  
110185e3:	(bad)  
110185e4:	(bad)  
110185e5:	(bad)  
110185e6:	(bad)  
110185e7:	(bad)  
110185e8:	clc    
110185e9:	mov    cl,0x91
110185eb:	push   esp
110185ed:	xchg   ebx,eax
110185ee:	addr16 push esp
110185f1:	xchg   esi,eax
110185f2:	imul   edi,edi,0xfffffff5
110185f5:	cwde   
110185f6:	outs   dx,DWORD PTR ds:[esi]
110185f7:	push   ebp
110185f9:	call   0xff71:0x9af5ff71
11018600:	cmc    
11018601:	call   0xff70:0x99f5ff71
11018608:	hlt    
11018609:	cwde   
1101860a:	outs   dx,DWORD PTR ds:[esi]
1101860b:	push   esp
1101860d:	xchg   esi,eax
1101860e:	ins    BYTE PTR es:[edi],dx
1101860f:	push   ecx
11018611:	xchg   ecx,eax
11018612:	addr16 (bad) 
11018614:	out    dx,eax
11018615:	mov    WORD PTR [edx-0x1],fs
11018618:	in     al,dx
11018619:	xchg   DWORD PTR [ebp-0x1],ebx
1101861c:	jmp    0xf800dea3
11018621:	jge    0x11018676
11018623:	jmp    ebx
11018625:	jns    0x11018676
11018627:	jmp    ecx
11018629:	je     0x11018675
1101862b:	(bad)  
1101862c:	fidiv  WORD PTR [eax+0x47]
1101862f:	(bad)  
11018630:	fsubr  QWORD PTR [ebx+eax*2-0x1]
11018634:	fldcw  WORD PTR [eax+0x3f]
11018637:	call   ebp
11018639:	fs cmp al,0xff
1101863c:	rcr    BYTE PTR [edi+0x39],cl
1101863f:	call   eax
11018641:	pop    esp
11018642:	xor    eax,0x6f8addff
11018647:	(bad)  
11018648:	(bad)  
11018649:	(bad)  
1101864a:	std    
1101864b:	(bad)  
1101864c:	(bad)  
1101864d:	(bad)  
1101864e:	(bad)  
1101864f:	(bad)  
11018650:	(bad)  
11018651:	(bad)  
11018652:	(bad)  
11018653:	(bad)  
11018654:	(bad)  
11018655:	(bad)  
11018656:	(bad)  
11018657:	(bad)  
11018658:	(bad)  
11018659:	(bad)  
1101865a:	(bad)  
1101865b:	(bad)  
1101865c:	std    
1101865d:	std    
1101865e:	std    
1101865f:	(bad)  
11018660:	fcomp  st(0)
11018662:	fdivr  st,st(7)
11018664:	sbb    eax,0xff1d1d
11018669:	add    BYTE PTR [eax],al
1101866b:	sti    
1101866c:	add    BYTE PTR [eax],al
1101866e:	add    BYTE PTR [edi+0x7b000000],bh
11018674:	add    BYTE PTR [eax],al
11018676:	add    BYTE PTR [ebx+0x0],al
11018679:	add    BYTE PTR [eax],al
1101867b:	inc    ecx
1101867c:	add    BYTE PTR [eax],al
1101867e:	add    BYTE PTR [ebp-0xa000000],cl
11018684:	pop    ds
11018685:	pop    ds
11018686:	pop    ds
11018687:	(bad)  
11018688:	(bad)  
1101868a:	fcos   
1101868c:	(bad)  
1101868d:	(bad)  
1101868e:	(bad)  
1101868f:	(bad)  
11018690:	std    
11018691:	std    
11018692:	std    
11018693:	(bad)  
11018694:	std    
11018695:	std    
11018696:	std    
11018697:	(bad)  
11018698:	(bad)  
11018699:	(bad)  
1101869a:	(bad)  
1101869b:	(bad)  
1101869c:	(bad)  
1101869d:	(bad)  
1101869e:	std    
1101869f:	(bad)  
110186a0:	(bad)  
110186a1:	(bad)  
110186a2:	(bad)  
110186a3:	(bad)  
110186a4:	(bad)  
110186a5:	(bad)  
110186a6:	(bad)  
110186a7:	push   esi
110186a9:	mov    eax,ds:0x96f4ff7b
110186ae:	ins    BYTE PTR es:[edi],dx
110186af:	push   ebp
110186b1:	fwait
110186b2:	jno    0x110186b3
110186b4:	cmc    
110186b5:	sahf   
110186b6:	jbe    0x110186b7
110186b8:	cmc    
110186b9:	lahf   
110186ba:	js     0x110186bb
110186bc:	cmc    
110186bd:	mov    al,ds:0xa0f5ff79
110186c2:	jns    0x110186c3
110186c4:	cmc    
110186c5:	lahf   
110186c6:	js     0x110186c7
110186c8:	cmc    
110186c9:	popf   
110186ca:	jne    0x110186cb
110186cc:	cmc    
110186cd:	fwait
110186ce:	jb     0x110186cf
110186d0:	hlt    
110186d1:	cwde   
110186d2:	outs   dx,BYTE PTR ds:[esi]
110186d3:	push   edx
110186d5:	xchg   edx,eax
110186d6:	imul   edi,edi,0xff638def
110186dc:	in     al,dx
110186dd:	mov    BYTE PTR [ebp-0x1],bl
110186e0:	jmp    0xf800df67
110186e5:	jge    0x1101873a
110186e7:	jmp    ebx
110186e9:	jns    0x11018739
110186eb:	jmp    ecx
110186ed:	je     0x11018739
110186ef:	(bad)  
110186f0:	fidiv  WORD PTR [eax+0x46]
110186f3:	(bad)  
110186f4:	fld    TBYTE PTR [ebx+eax*2-0x1]
110186f8:	fsub   DWORD PTR [edi+0x3f]
110186fb:	call   ebp
110186fd:	arpl   WORD PTR [edi+edi*8],di
11018700:	rcr    BYTE PTR [edi+0x38],cl
11018703:	call   edi
11018705:	jb     0x11018757
11018707:	(bad)  
11018708:	(bad)  
11018709:	(bad)  
1101870a:	std    
1101870b:	(bad)  
1101870c:	(bad)  
1101870d:	(bad)  
1101870e:	(bad)  
1101870f:	(bad)  
11018710:	(bad)  
11018711:	(bad)  
11018712:	(bad)  
11018713:	(bad)  
11018714:	(bad)  
11018715:	(bad)  
11018716:	(bad)  
11018717:	(bad)  
11018718:	(bad)  
11018719:	(bad)  
1101871a:	(bad)  
1101871b:	(bad)  
1101871c:	std    
1101871d:	std    
1101871e:	std    
1101871f:	(bad)  
11018720:	std    
11018721:	std    
11018722:	std    
11018723:	call   edi
11018725:	xlat   BYTE PTR ds:[ebx]
11018726:	xlat   BYTE PTR ds:[ebx]
11018727:	call   FWORD PTR ds:0xff1d1d
1101872d:	add    BYTE PTR [eax],al
1101872f:	test   BYTE PTR [eax],0x0
11018732:	add    BYTE PTR [esi+0x41000000],cl
11018738:	add    BYTE PTR [eax],al
1101873a:	add    BYTE PTR [eax+eax*1+0x0],dl
1101873e:	add    bh,ch
11018740:	sbb    eax,0xdaff1d1d
11018745:	fcmovu st,st(2)
11018747:	(bad)  
11018748:	std    
11018749:	std    
1101874a:	std    
1101874b:	(bad)  
1101874c:	(bad)  
1101874d:	(bad)  
1101874e:	(bad)  
1101874f:	(bad)  
11018750:	std    
11018751:	std    
11018752:	std    
11018753:	(bad)  
11018754:	std    
11018755:	std    
11018756:	std    
11018757:	(bad)  
11018758:	std    
11018759:	std    
1101875a:	std    
1101875b:	(bad)  
1101875c:	std    
1101875d:	std    
1101875e:	std    
1101875f:	(bad)  
11018760:	(bad)  
11018761:	(bad)  
11018762:	std    
11018763:	(bad)  
11018764:	std    
11018765:	std    
11018766:	std    
11018767:	push   ebp
11018769:	fwait
1101876a:	jb     0x1101876b
1101876c:	cmc    
1101876d:	fwait
1101876e:	jb     0x1101876f
11018770:	cmc    
11018771:	mov    al,ds:0xa4f6ff79
11018776:	jg     0x11018777
11018778:	mul    BYTE PTR [esi-0x5809007e]
1101877e:	cmp    edi,0xfffffff6
11018781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11018782:	cmp    edi,0xfffffff6
11018785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
11018786:	cmp    edi,0xff7da3f5
1101878c:	cmc    
1101878d:	mov    al,ds:0x9df5ff79
11018792:	jne    0x11018793
11018794:	hlt    
11018795:	cdq    
11018796:	jo     0x11018797
11018798:	repnz xchg ebx,eax
1101879a:	imul   edi,edi,0xff628def
110187a0:	jmp    0x11018729
110187a2:	pop    esp
110187a3:	(bad)  
110187a4:	call   0xf800df2a
110187a9:	jge    0x110187fd
110187ab:	jmp    ebx
110187ad:	js     0x110187fd
110187af:	jmp    ecx
110187b1:	jae    0x110187fc
110187b3:	(bad)  
110187b4:	fisubr WORD PTR [edi+0x46]
110187b7:	(bad)  
110187b8:	fld    TBYTE PTR [ebx+0x42]
110187bb:	call   edi
110187bd:	addr16 notrack call ebp
110187c1:	arpl   WORD PTR [ebx],di
110187c3:	call   ebp
110187c5:	addr16 inc ecx
110187c7:	(bad)  
110187c8:	std    
110187c9:	std    
110187ca:	std    
110187cb:	(bad)  
110187cc:	(bad)  
110187cd:	(bad)  
110187ce:	std    
110187cf:	(bad)  
110187d0:	(bad)  
110187d1:	(bad)  
110187d2:	std    
110187d3:	(bad)  
110187d4:	std    
110187d5:	std    
110187d6:	std    
110187d7:	(bad)  
110187d8:	std    
110187d9:	std    
110187da:	std    
110187db:	(bad)  
110187dc:	std    
110187dd:	std    
110187de:	std    
110187df:	(bad)  
110187e0:	std    
110187e1:	std    
110187e2:	std    
110187e3:	(bad)  
110187e4:	std    
110187e5:	std    
110187e6:	std    
110187e7:	(bad)  
110187e8:	fcomp  st(0)
110187ea:	fdivr  st,st(7)
110187ec:	sbb    al,0x1c
110187ee:	sbb    al,0xff
110187f0:	add    BYTE PTR [eax],al
110187f2:	add    bh,ch
110187f4:	add    BYTE PTR [eax],al
110187f6:	add    BYTE PTR [eax+eax*1+0x0],dl
110187fa:	add    BYTE PTR [ebx+0x0],al
110187fd:	add    BYTE PTR [eax],al
110187ff:	jmp    0x1101881f
11018801:	push   ds
11018802:	push   ds
11018803:	(bad)  
11018804:	fcmovnu st,st(3)
11018806:	(bad)  
11018808:	(bad)  
11018809:	(bad)  
1101880a:	(bad)  
1101880b:	(bad)  
1101880c:	(bad)  
1101880d:	(bad)  
1101880e:	(bad)  
1101880f:	(bad)  
11018810:	(bad)  
11018811:	(bad)  
11018812:	(bad)  
11018813:	(bad)  
11018814:	(bad)  
11018815:	(bad)  
11018816:	std    
11018817:	(bad)  
11018818:	(bad)  
11018819:	(bad)  
1101881a:	(bad)  
1101881b:	(bad)  
1101881c:	(bad)  
1101881d:	(bad)  
1101881e:	(bad)  
1101881f:	(bad)  
11018820:	(bad)  
11018821:	(bad)  
11018822:	(bad)  
11018823:	(bad)  
11018824:	(bad)  
11018825:	(bad)  
11018826:	std    
11018827:	push   esi
11018829:	sahf   
1101882a:	ja     0x1101882b
1101882c:	cmc    
1101882d:	mov    al,ds:0xa7f6ff79
11018832:	cmp    edi,0xfffffff7
11018835:	lods   al,BYTE PTR ds:[esi]
11018836:	mov    bh,bh
11018838:	imul   DWORD PTR [edi-0x4f080072]
1101883e:	nop
1101883f:	push   edi
11018841:	mov    al,0x90
11018843:	push   edi
11018845:	scas   al,BYTE PTR es:[edi]
11018846:	mov    edi,?
11018848:	imul   BYTE PTR [edx-0x58090078]
1101884e:	cmp    bh,0xf6
11018851:	mov    ds:0x9ef5ff7c,al
11018856:	jbe    0x11018857
11018858:	hlt    
11018859:	cdq    
1101885a:	jo     0x1101885b
1101885c:	repnz xchg edx,eax
1101885e:	push   0x618ceeff
11018863:	(bad)  
11018864:	jmp    0x110187ed
11018866:	pop    esp
11018867:	(bad)  
11018868:	jmp    0xf800deee
1101886d:	jl     0x110188c1
1101886f:	jmp    esp
11018871:	js     0x110188c0
11018873:	jmp    ecx
11018875:	jae    0x110188c0
11018877:	(bad)  
11018878:	fisubr WORD PTR [edi+0x46]
1101887b:	(bad)  
1101887c:	fisubr DWORD PTR [ebx+0x41]
1101887f:	(bad)  
11018880:	fsub   DWORD PTR [esi+0x3e]
11018883:	(bad)  
11018884:	fsubr  DWORD PTR [ebx+0x44]
11018887:	(bad)  
11018888:	(bad)  
11018889:	(bad)  
1101888a:	std    
1101888b:	(bad)  
1101888c:	(bad)  
1101888d:	(bad)  
1101888e:	std    
1101888f:	(bad)  
11018890:	(bad)  
11018891:	(bad)  
11018892:	std    
11018893:	(bad)  
11018894:	(bad)  
11018895:	(bad)  
11018896:	(bad)  
11018897:	(bad)  
11018898:	(bad)  
11018899:	(bad)  
1101889a:	(bad)  
1101889b:	(bad)  
1101889c:	std    
1101889d:	std    
1101889e:	std    
1101889f:	(bad)  
110188a0:	(bad)  
110188a1:	(bad)  
110188a2:	(bad)  
110188a3:	(bad)  
110188a4:	std    
110188a5:	std    
110188a6:	std    
110188a7:	(bad)  
110188a8:	fcmovu st,st(2)
110188aa:	(bad)  
110188ac:	sbb    eax,0xfe1d1d
110188b1:	add    BYTE PTR [eax],al
110188b3:	jmp    0x0:0x41000000
110188ba:	add    BYTE PTR [eax+eax*1],cl
110188bd:	add    BYTE PTR [eax],al
110188bf:	inc    esi
110188c0:	add    BYTE PTR [eax],al
110188c2:	add    bl,ch
110188c4:	and    BYTE PTR [eax],ah
110188c6:	and    dh,bh
110188c8:	fcmovu st,st(2)
110188ca:	(bad)  
110188cc:	(bad)  
110188cd:	(bad)  
110188ce:	(bad)  
110188cf:	(bad)  
110188d0:	std    
110188d1:	std    
110188d2:	std    
110188d3:	(bad)  
110188d4:	std    
110188d5:	std    
110188d6:	std    
110188d7:	(bad)  
110188d8:	(bad)  
110188d9:	(bad)  
110188da:	std    
110188db:	(bad)  
110188dc:	(bad)  
110188dd:	(bad)  
110188de:	std    
110188df:	(bad)  
110188e0:	(bad)  
110188e1:	(bad)  
110188e2:	(bad)  
110188e3:	(bad)  
110188e4:	std    
110188e5:	std    
110188e6:	std    
110188e7:	push   edi
110188e9:	stos   BYTE PTR es:[edi],al
110188ea:	mov    bh,bh
110188ec:	mul    BYTE PTR [ebp-0x5108007f]
110188f2:	(bad)  
110188f3:	(bad)  
110188f4:	clc    
110188f5:	mov    ch,0x97
110188f7:	(bad)  
110188f8:	clc    
110188f9:	mov    eax,0xbaf8ff9c
110188fe:	sahf   
110188ff:	(bad)  
11018900:	clc    
11018901:	mov    edx,0xb7f8ff9d
11018906:	cdq    
11018907:	push   edi
11018909:	mov    dl,0x93
1101890b:	push   edi
1101890d:	lods   eax,DWORD PTR ds:[esi]
1101890e:	mov    edi,?
11018910:	mul    BYTE PTR [edi-0x5d0a007c]
11018916:	jl     0x11018917
11018918:	cmc    
11018919:	popf   
1101891a:	jne    0x1101891b
1101891c:	hlt    
1101891d:	xchg   edi,eax
1101891e:	outs   dx,BYTE PTR ds:[esi]
1101891f:	push   ecx
11018921:	xchg   ecx,eax
11018922:	data16 (bad) 
11018924:	out    dx,al
11018925:	mov    esp,DWORD PTR [eax-0x1]
11018928:	jmp    0x110188af
1101892a:	pop    edx
1101892b:	(bad)  
1101892c:	jmp    0xf800deb1
11018931:	jnp    0x11018983
11018933:	jmp    esp
11018935:	ja     0x11018983
11018937:	jmp    ecx
11018939:	jb     0x11018983
1101893b:	(bad)  
1101893c:	(bad)  [esi+0x44]
1101893f:	(bad)  
11018940:	fisubr DWORD PTR [edx+0x40]
11018943:	(bad)  
11018944:	fidivr WORD PTR [ebx+0x57]
11018947:	(bad)  
11018948:	std    
11018949:	std    
1101894a:	std    
1101894b:	(bad)  
1101894c:	(bad)  
1101894d:	(bad)  
1101894e:	std    
1101894f:	(bad)  
11018950:	(bad)  
11018951:	(bad)  
11018952:	std    
11018953:	(bad)  
11018954:	(bad)  
11018955:	(bad)  
11018956:	std    
11018957:	(bad)  
11018958:	(bad)  
11018959:	(bad)  
1101895a:	std    
1101895b:	(bad)  
1101895c:	std    
1101895d:	std    
1101895e:	std    
1101895f:	(bad)  
11018960:	std    
11018961:	std    
11018962:	std    
11018963:	(bad)  
11018964:	(bad)  
11018966:	fcos   
11018968:	pop    ds
11018969:	pop    ds
1101896a:	pop    ds
1101896b:	inc    BYTE PTR [eax]
1101896d:	add    BYTE PTR [eax],al
1101896f:	jmp    0x11018971
11018971:	add    BYTE PTR [eax],al
11018973:	dec    eax
11018974:	add    BYTE PTR [eax],al
11018976:	add    BYTE PTR [eax+eax*1],cl
11018979:	add    BYTE PTR [eax],al
1101897b:	add    eax,DWORD PTR [eax]
1101897d:	add    BYTE PTR [eax],al
1101897f:	or     al,0x0
11018981:	add    BYTE PTR [eax],al
11018983:	inc    ebp
11018984:	add    BYTE PTR [eax],al
11018986:	add    ch,ch
11018988:	and    BYTE PTR [eax],ah
1101898a:	and    dh,bh
1101898c:	fcmovnu st,st(3)
1101898e:	(bad)  
11018990:	std    
11018991:	std    
11018992:	std    
11018993:	(bad)  
11018994:	std    
11018995:	std    
11018996:	std    
11018997:	(bad)  
11018998:	(bad)  
11018999:	(bad)  
1101899a:	std    
1101899b:	(bad)  
1101899c:	(bad)  
1101899d:	(bad)  
1101899e:	std    
1101899f:	(bad)  
110189a0:	(bad)  
110189a1:	(bad)  
110189a2:	std    
110189a3:	(bad)  
110189a4:	(bad)  
110189a5:	(bad)  
110189a6:	std    
110189a7:	(bad)  
110189a8:	clc    
110189a9:	mov    ebp,0xaaf6ffa2
110189ae:	mov    bh,bh
110189b0:	div    DWORD PTR [ebp-0x41070069]
110189b6:	mov    ds:0xaac2f8ff,eax
110189bb:	(bad)  
110189bc:	stc    
110189bd:	les    ebp,FWORD PTR [ebp-0x543b0601]
110189c3:	(bad)  
110189c4:	clc    
110189c5:	shl    BYTE PTR [edi-0x60440701],0xff
110189cc:	div    DWORD PTR [esi+edx*4-0x73520801]
110189d3:	push   esi
110189d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
110189d6:	cmp    bh,0xf5
110189d9:	mov    al,ds:0x9bf5ff79
110189de:	jb     0x110189df
110189e0:	repz xchg ebp,eax
110189e2:	imul   edi,edi,0xfffffff0
110189e5:	(bad)  
110189e6:	fs (bad) 
110189e8:	out    dx,al
110189e9:	mov    DWORD PTR [esi-0x1],ebx
110189ec:	jmp    0x11018972
110189ee:	pop    eax
110189ef:	(bad)  
110189f0:	jmp    0xf800dd74
110189f5:	jnp    0x11018a46
110189f7:	jmp    ebx
110189f9:	jbe    0x11018a46
110189fb:	(bad)  
110189fc:	fbstp  TBYTE PTR [ecx+0x46]
110189ff:	(bad)  
11018a00:	(bad)  [ebp+0x43]
11018a03:	jmp    esi
11018a05:	xchg   esi,eax
11018a06:	jns    0x11018a07
11018a08:	(bad)  
11018a09:	(bad)  
11018a0a:	std    
11018a0b:	(bad)  
11018a0c:	(bad)  
11018a0d:	(bad)  
11018a0e:	std    
11018a0f:	(bad)  
11018a10:	(bad)  
11018a11:	(bad)  
11018a12:	std    
11018a13:	(bad)  
11018a14:	(bad)  
11018a15:	(bad)  
11018a16:	std    
11018a17:	(bad)  
11018a18:	(bad)  
11018a19:	(bad)  
11018a1a:	std    
11018a1b:	(bad)  
11018a1c:	std    
11018a1d:	std    
11018a1e:	std    
11018a1f:	(bad)  
11018a20:	(bad)  
11018a22:	fcos   
11018a24:	pop    ds
11018a25:	pop    ds
11018a26:	pop    ds
11018a27:	inc    DWORD PTR [eax]
11018a29:	add    BYTE PTR [eax],al
11018a2b:	out    dx,eax
11018a2c:	add    BYTE PTR [eax],al
11018a2e:	add    BYTE PTR [eax+eax*1+0x0],dl
11018a32:	add    BYTE PTR [edx],dl
11018a34:	add    BYTE PTR [eax],al
11018a36:	add    BYTE PTR [eax+eax*1],al
11018a39:	add    BYTE PTR [eax],al
11018a3b:	add    BYTE PTR [eax],al
11018a3d:	add    BYTE PTR [eax],al
11018a3f:	add    eax,DWORD PTR [eax]
11018a41:	add    BYTE PTR [eax],al
11018a43:	or     al,0x0
11018a45:	add    BYTE PTR [eax],al
11018a47:	inc    ebp
11018a48:	add    BYTE PTR [eax],al
11018a4a:	add    bl,ch
11018a4c:	push   ds
11018a4d:	push   ds
11018a4e:	push   ds
11018a4f:	(bad)  
11018a50:	fcmovnu st,st(3)
11018a52:	(bad)  
11018a54:	(bad)  
11018a55:	(bad)  
11018a56:	(bad)  
11018a57:	(bad)  
11018a58:	(bad)  
11018a59:	(bad)  
11018a5a:	(bad)  
11018a5b:	(bad)  
11018a5c:	(bad)  
11018a5d:	(bad)  
11018a5e:	(bad)  
11018a5f:	(bad)  
11018a60:	(bad)  
11018a61:	(bad)  
11018a62:	(bad)  
11018a63:	(bad)  
11018a64:	(bad)  
11018a65:	(bad)  
11018a66:	std    
11018a67:	(bad)  
11018a68:	sti    
11018a69:	xlat   BYTE PTR ds:[ebx]
11018a6a:	(bad)  
11018a6b:	push   edi
11018a6d:	scas   eax,DWORD PTR es:[edi]
11018a6e:	mov    ?,edi
11018a70:	clc    
11018a71:	mov    esp,0xc6f9ffa0
11018a76:	scas   eax,DWORD PTR es:[edi]
11018a77:	(bad)  
11018a78:	stc    
11018a79:	int3   
11018a7a:	mov    eax,0xbbcffaff
11018a7f:	(bad)  
11018a80:	stc    
11018a81:	int    0xb9
11018a83:	(bad)  
11018a84:	stc    
11018a85:	leave  
11018a86:	mov    bl,0xff
11018a88:	clc    
11018a89:	ret    
11018a8a:	stos   DWORD PTR es:[edi],eax
11018a8b:	(bad)  
11018a8c:	clc    
11018a8d:	mov    ebx,0xb3f7ffa0
11018a92:	xchg   esp,eax
11018a93:	push   esi
11018a95:	stos   BYTE PTR es:[edi],al
11018a96:	mov    bh,bh
11018a98:	mul    BYTE PTR [ebx-0x620a0082]
11018a9e:	jne    0x11018a9f
11018aa0:	hlt    
11018aa1:	cwde   
11018aa2:	outs   dx,BYTE PTR ds:[esi]
11018aa3:	push   ebx
11018aa5:	xchg   ebx,eax
11018aa6:	push   0x628df0ff
11018aab:	(bad)  
11018aac:	out    dx,al
11018aad:	mov    BYTE PTR [edi+edi*8-0x15],bl
11018ab1:	adc    DWORD PTR [edi-0x1],0xffffffe9
11018ab5:	jle    0x11018b09
11018ab7:	jmp    ebp
11018ab9:	jns    0x11018b09
11018abb:	jmp    edx
11018abd:	jne    0x11018b08
11018abf:	jmp    eax
11018ac1:	jno    0x11018b09
11018ac3:	push   ecx
11018ac5:	mov    edi,0xfefeffab
11018aca:	std    
11018acb:	(bad)  
11018acc:	(bad)  
11018acd:	(bad)  
11018ace:	std    
11018acf:	(bad)  
11018ad0:	(bad)  
11018ad1:	(bad)  
11018ad2:	std    
11018ad3:	(bad)  
11018ad4:	(bad)  
11018ad5:	(bad)  
11018ad6:	(bad)  
11018ad7:	(bad)  
11018ad8:	(bad)  
11018ad9:	(bad)  
11018ada:	(bad)  
11018adb:	(bad)  
11018adc:	fcmovu st,st(2)
11018ade:	(bad)  
11018ae0:	sbb    eax,0xff1d1d
11018ae5:	add    BYTE PTR [eax],al
11018ae7:	repz add BYTE PTR [eax],al
11018aea:	add    BYTE PTR [ecx+0x0],dh
11018aed:	add    BYTE PTR [eax],al
11018aef:	and    eax,DWORD PTR [eax]
11018af1:	add    BYTE PTR [eax],al
11018af3:	or     DWORD PTR [eax],eax
11018af5:	add    BYTE PTR [eax],al
11018af7:	add    DWORD PTR [eax],eax
	...
11018b01:	add    BYTE PTR [eax],al
11018b03:	add    eax,DWORD PTR [eax]
11018b05:	add    BYTE PTR [eax],al
11018b07:	or     eax,0x49000000
11018b0c:	add    BYTE PTR [eax],al
11018b0e:	add    ah,ch
11018b10:	and    BYTE PTR [eax],ah
11018b12:	and    bh,bh
11018b14:	fcmovu st,st(2)
11018b16:	(bad)  
11018b18:	(bad)  
11018b19:	(bad)  
11018b1a:	std    
11018b1b:	(bad)  
11018b1c:	(bad)  
11018b1d:	(bad)  
11018b1e:	std    
11018b1f:	(bad)  
11018b20:	(bad)  
11018b21:	(bad)  
11018b22:	std    
11018b23:	(bad)  
11018b24:	(bad)  
11018b25:	(bad)  
11018b26:	std    
11018b27:	(bad)  
11018b28:	std    
11018b29:	hlt    
11018b2a:	lock (bad) 
11018b2c:	clc    
11018b2d:	mov    ah,0x96
11018b2f:	(bad)  
11018b30:	clc    
11018b31:	shl    BYTE PTR [esi-0x47330601],0xff
11018b38:	cli    
11018b39:	aam    0xc3
11018b3b:	(bad)  
11018b3c:	cli    
11018b3d:	xlat   BYTE PTR ds:[ebx]
11018b3e:	(bad)  
11018b3f:	(bad)  
11018b40:	cli    
11018b41:	(bad)  
11018b42:	(bad)  
11018b45:	sar    DWORD PTR [esi-0x4b360601],1
11018b4b:	(bad)  
11018b4c:	clc    
11018b4d:	shl    BYTE PTR [edi-0x65480701],0xff
11018b54:	imul   DWORD PTR [esi-0x59090073]
11018b5a:	cmp    edi,0xff789ff5
11018b60:	cmc    
11018b61:	cdq    
11018b62:	jo     0x11018b63
11018b64:	hlt    
11018b65:	xchg   ebp,eax
11018b66:	push   0xffffffff
11018b68:	repz xchg ecx,eax
11018b6a:	gs push ecx
11018b6d:	mov    WORD PTR [edi-0x1],ds
11018b70:	out    dx,al
11018b71:	xchg   DWORD PTR [edx-0x1],ebx
11018b74:	jmp    0x11018af8
11018b76:	push   ebp
11018b77:	(bad)  
11018b78:	call   0xf700dbfa
11018b7d:	js     0x11018bcb
11018b7f:	jmp    esp
11018b81:	js     0x11018bd1
11018b83:	(bad)  
11018b84:	sti    
11018b85:	in     eax,dx
11018b86:	call   0xeff898a
11018b8b:	(bad)  
11018b8c:	(bad)  
11018b8d:	(bad)  
11018b8e:	std    
11018b8f:	(bad)  
11018b90:	(bad)  
11018b91:	(bad)  
11018b92:	(bad)  
11018b93:	(bad)  
11018b94:	(bad)  
11018b95:	(bad)  
11018b96:	std    
11018b97:	(bad)  
11018b98:	(bad)  
11018b9a:	fcos   
11018b9c:	pop    ds
11018b9d:	pop    ds
11018b9e:	pop    ds
11018b9f:	inc    DWORD PTR [eax]
11018ba1:	add    BYTE PTR [eax],al
11018ba3:	clc    
11018ba4:	add    BYTE PTR [eax],al
11018ba6:	add    BYTE PTR [esi+0x4a000000],bl
11018bac:	add    BYTE PTR [eax],al
11018bae:	add    BYTE PTR [ebx],bl
11018bb0:	add    BYTE PTR [eax],al
11018bb2:	add    BYTE PTR [esi],al
	...
11018bc4:	add    BYTE PTR [eax],al
11018bc6:	add    BYTE PTR [eax+eax*1],al
11018bc9:	add    BYTE PTR [eax],al
11018bcb:	adc    al,BYTE PTR [eax]
11018bcd:	add    BYTE PTR [eax],al
11018bcf:	push   ebp
11018bd0:	add    BYTE PTR [eax],al
11018bd2:	add    bh,bh
11018bd4:	and    BYTE PTR [eax],ah
11018bd6:	and    bh,bh
11018bd8:	fcmovnu st,st(3)
11018bda:	(bad)  
11018bdc:	(bad)  
11018bdd:	(bad)  
11018bde:	std    
11018bdf:	(bad)  
11018be0:	(bad)  
11018be1:	(bad)  
11018be2:	std    
11018be3:	(bad)  
11018be4:	std    
11018be5:	std    
11018be6:	std    
11018be7:	(bad)  
11018be8:	(bad)  
11018be9:	(bad)  
11018bea:	std    
11018beb:	(bad)  
11018bec:	cli    
11018bed:	sar    BYTE PTR [ebp-0x583f0701],1
11018bf3:	(bad)  
11018bf4:	cli    
11018bf5:	into   
11018bf6:	mov    ebx,0xc9d8faff
11018bfb:	(bad)  
11018bfc:	sti    
11018bfd:	fmul   st(7),st
11018bff:	(bad)  
11018c00:	sti    
11018c01:	fcmovne st,st(5)
11018c03:	(bad)  
11018c04:	cli    
11018c05:	(bad)  
11018c06:	(bad)  
11018c09:	int    0xb9
11018c0b:	(bad)  
11018c0c:	stc    
11018c0d:	les    ebp,FWORD PTR [edi+edi*8-0x614508]
11018c14:	div    DWORD PTR [eax-0x58080070]
11018c1a:	cmp    edi,0xfffffff6
11018c1d:	mov    al,ds:0x9af5ff79
11018c22:	jno    0x11018c23
11018c24:	cmc    
11018c25:	xchg   esi,eax
11018c26:	imul   edi,edi,0xfffffff4
11018c29:	xchg   ebx,eax
11018c2a:	push   sp
11018c2d:	(bad)  
11018c2e:	(bad)  
11018c2f:	push   ecx
11018c31:	mov    bl,BYTE PTR [ebp-0x1]
11018c34:	out    dx,al
11018c35:	test   DWORD PTR [eax-0x1],ebx
11018c38:	jmp    0x11018bba
11018c3a:	push   ebx
11018c3b:	(bad)  
11018c3c:	call   0x100dbbd
11018c41:	stos   BYTE PTR es:[edi],al
11018c42:	(bad)  
11018c43:	(bad)  
11018c44:	(bad)  
11018c45:	(bad)  
11018c46:	std    
11018c47:	(bad)  
11018c48:	std    
11018c49:	std    
11018c4a:	std    
11018c4b:	(bad)  
11018c4c:	std    
11018c4d:	std    
11018c4e:	std    
11018c4f:	(bad)  
11018c50:	(bad)  
11018c51:	(bad)  
11018c52:	(bad)  
11018c53:	(bad)  
11018c54:	fcmovu st,st(2)
11018c56:	(bad)  
11018c58:	pop    ds
11018c59:	pop    ds
11018c5a:	pop    ds
11018c5b:	inc    DWORD PTR [eax]
11018c5d:	add    BYTE PTR [eax],al
11018c5f:	inc    DWORD PTR [eax]
11018c61:	add    BYTE PTR [eax],al
11018c63:	int3   
11018c64:	add    BYTE PTR [eax],al
11018c66:	add    BYTE PTR [ebp+0x44000000],al
11018c6c:	add    BYTE PTR [eax],al
11018c6e:	add    BYTE PTR [eax],bl
11018c70:	add    BYTE PTR [eax],al
11018c72:	add    BYTE PTR [esi],al
	...
11018c84:	add    BYTE PTR [eax],al
11018c86:	add    BYTE PTR [ecx],al
11018c88:	add    BYTE PTR [eax],al
11018c8a:	add    BYTE PTR [ecx],cl
11018c8c:	add    BYTE PTR [eax],al
11018c8e:	add    BYTE PTR [ebx],ah
11018c90:	add    BYTE PTR [eax],al
11018c92:	add    bh,bh
11018c94:	add    BYTE PTR [eax],al
11018c96:	add    bh,bh
11018c98:	push   ds
11018c99:	push   ds
11018c9a:	push   ds
11018c9b:	(bad)  
11018c9c:	fcmovnu st,st(3)
11018c9e:	(bad)  
11018ca0:	(bad)  
11018ca1:	(bad)  
11018ca2:	(bad)  
11018ca3:	(bad)  
11018ca4:	(bad)  
11018ca5:	(bad)  
11018ca6:	std    
11018ca7:	(bad)  
11018ca8:	(bad)  
11018ca9:	(bad)  
11018caa:	(bad)  
11018cab:	(bad)  
11018cac:	std    
11018cad:	div    dl
11018caf:	(bad)  
11018cb0:	stc    
11018cb1:	ret    
11018cb2:	stos   BYTE PTR es:[edi],al
11018cb3:	(bad)  
11018cb4:	stc    
11018cb5:	retf   
11018cb6:	mov    bh,0xff
11018cb8:	cli    
11018cb9:	xlat   BYTE PTR ds:[ebx]
11018cba:	(bad)  
11018cbb:	(bad)  
11018cbc:	sti    
11018cbd:	(bad)  
11018cbf:	(bad)  
11018cc0:	sti    
11018cc1:	fmul   st(7),st
11018cc3:	(bad)  
11018cc4:	cli    
11018cc5:	xlat   BYTE PTR ds:[ebx]
11018cc6:	(bad)  
11018cc7:	(bad)  
11018cc8:	cli    
11018cc9:	iret   
11018cca:	mov    ebx,0xadc5f9ff
11018ccf:	(bad)  
11018cd0:	clc    
11018cd1:	mov    edx,0xb0f7ff9e
11018cd6:	nop
11018cd7:	push   edi
11018cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11018cda:	test   bh,bh
11018cdc:	cmc    
11018cdd:	mov    al,ds:0x9af5ff79
11018ce2:	jno    0x11018ce3
11018ce4:	hlt    
11018ce5:	xchg   ebp,eax
11018ce6:	imul   edi,edi,0xfffffff4
11018ce9:	xchg   edx,eax
11018cea:	push   sp
11018ced:	nop
11018cee:	arpl   di,di
11018cf0:	repz lea ebx,[edi-0x1]
11018cf4:	lock mov BYTE PTR [edx-0x1],bl
11018cf8:	in     eax,dx
11018cf9:	adc    DWORD PTR [ebp-0x1],0xffffffec
11018cfd:	mov    BYTE PTR [ebp-0x1],bl
11018d00:	cld    
11018d01:	out    dx,eax
11018d02:	jmp    0xfeff:0xfefefeff
11018d09:	(bad)  
11018d0a:	std    
11018d0b:	(bad)  
11018d0c:	(bad)  
11018d0d:	(bad)  
11018d0e:	std    
11018d0f:	(bad)  
11018d10:	fcmovu st,st(2)
11018d12:	(bad)  
11018d14:	sbb    eax,0xff1d1d
11018d19:	add    BYTE PTR [eax],al
11018d1b:	inc    DWORD PTR [eax]
11018d1d:	add    BYTE PTR [eax],al
11018d1f:	inc    DWORD PTR [eax]
11018d21:	add    BYTE PTR [eax],al
11018d23:	rol    DWORD PTR [eax],0x0
11018d26:	add    BYTE PTR [ecx+0x42000000],al
11018d2c:	add    BYTE PTR [eax],al
11018d2e:	add    BYTE PTR [eax],bl
11018d30:	add    BYTE PTR [eax],al
11018d32:	add    BYTE PTR [esi],al
	...
11018d48:	add    BYTE PTR [eax],al
11018d4a:	add    BYTE PTR [esi],al
11018d4c:	add    BYTE PTR [eax],al
11018d4e:	add    BYTE PTR [ebx],bl
11018d50:	add    BYTE PTR [eax],al
11018d52:	add    bh,bh
11018d54:	inc    esp
11018d55:	es sbb edi,edi
11018d58:	adc    cl,BYTE PTR [edx]
11018d5a:	push   es
11018d5b:	jmp    DWORD PTR [eax]
11018d5d:	and    BYTE PTR [eax],ah
11018d5f:	(bad)  
11018d60:	fcmovu st,st(2)
11018d62:	(bad)  
11018d64:	(bad)  
11018d65:	(bad)  
11018d66:	(bad)  
11018d67:	(bad)  
11018d68:	(bad)  
11018d69:	(bad)  
11018d6a:	(bad)  
11018d6b:	(bad)  
11018d6c:	(bad)  
11018d6d:	(bad)  
11018d6e:	(bad)  
11018d6f:	(bad)  
11018d70:	cld    
11018d71:	jmp    0xd6fb8d56
11018d76:	scas   al,BYTE PTR es:[edi]
11018d77:	(bad)  
11018d78:	stc    
11018d79:	sar    BYTE PTR [ebp-0x38280501],1
11018d7f:	(bad)  
11018d80:	sti    
11018d81:	fmul   st,st(1)
11018d83:	(bad)  
11018d84:	cli    
11018d85:	aam    0xc3
11018d87:	(bad)  
11018d88:	stc    
11018d89:	int3   
11018d8a:	mov    eax,0xabc3f9ff
11018d8f:	(bad)  
11018d90:	clc    
11018d91:	mov    ecx,0xaff7ff9c
11018d96:	(bad)  
11018d97:	push   esi
11018d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11018d9a:	cmp    edi,0xfffffff5
11018d9d:	mov    al,ds:0x9af5ff79
11018da2:	jo     0x11018da3
11018da4:	hlt    
11018da5:	xchg   ebp,eax
11018da6:	push   0xffffffff
11018da8:	hlt    
11018da9:	xchg   edx,eax
11018daa:	gs push esp
11018dad:	(bad)  
11018dae:	(bad)  
11018daf:	push   ebx
11018db1:	lea    ebx,[edi-0x1]
11018db4:	repnz mov ebx,DWORD PTR [edi+edi*8-0x10]
11018db9:	xchg   DWORD PTR [ecx-0x1],ebx
11018dbc:	stc    
11018dbd:	(bad)  
11018dbe:	(bad)  
11018dbf:	(bad)  
11018dc0:	(bad)  
11018dc1:	(bad)  
11018dc2:	(bad)  
11018dc3:	(bad)  
11018dc4:	(bad)  
11018dc5:	(bad)  
11018dc6:	(bad)  
11018dc7:	(bad)  
11018dc8:	(bad)  
11018dc9:	(bad)  
11018dca:	std    
11018dcb:	(bad)  
11018dcc:	(bad)  
11018dce:	fcos   
11018dd0:	pop    ds
11018dd1:	pop    ds
11018dd2:	pop    ds
11018dd3:	call   DWORD PTR [ebx]
11018dd5:	or     al,BYTE PTR [edi]
11018dd7:	inc    DWORD PTR [ebp+0x27]
11018dda:	sbb    edi,edi
11018ddc:	add    BYTE PTR [eax],al
11018dde:	add    bh,bh
11018de0:	add    BYTE PTR [eax],al
11018de2:	add    BYTE PTR [esi-0x80000000],bh
11018de8:	add    BYTE PTR [eax],al
11018dea:	add    BYTE PTR [ecx+0x0],al
11018ded:	add    BYTE PTR [eax],al
11018def:	sbb    BYTE PTR [eax],al
11018df1:	add    BYTE PTR [eax],al
11018df3:	push   es
	...
11018e08:	add    BYTE PTR [eax],al
11018e0a:	add    BYTE PTR [esi],al
11018e0c:	add    BYTE PTR [eax],al
11018e0e:	add    BYTE PTR [eax],bl
11018e10:	add    BYTE PTR [eax],al
11018e12:	add    bh,bh
11018e14:	jb     0x11018e56
11018e16:	sub    bh,bh
11018e18:	mov    cl,0x64
11018e1a:	inc    ecx
11018e1b:	call   DWORD PTR [ecx]
11018e1d:	or     DWORD PTR [esi],eax
11018e1f:	jmp    DWORD PTR [eax]
11018e21:	and    BYTE PTR [eax],ah
11018e23:	(bad)  
11018e24:	fcmovnu st,st(3)
11018e26:	(bad)  
11018e28:	(bad)  
11018e29:	(bad)  
11018e2a:	std    
11018e2b:	(bad)  
11018e2c:	(bad)  
11018e2d:	(bad)  
11018e2e:	(bad)  
11018e2f:	(bad)  
11018e30:	(bad)  
11018e31:	(bad)  
11018e32:	(bad)  
11018e33:	(bad)  
11018e34:	cld    
11018e35:	jecxz  0x11018e0f
11018e37:	(bad)  
11018e38:	clc    
11018e39:	lds    ebp,FWORD PTR [esi-0x48340601]
11018e3f:	(bad)  
11018e40:	stc    
11018e41:	into   
11018e42:	mov    ebx,0xb8ccf9ff
11018e47:	(bad)  
11018e48:	stc    
11018e49:	(bad)  
11018e4a:	scas   eax,DWORD PTR es:[edi]
11018e4b:	(bad)  
11018e4c:	clc    
11018e4d:	mov    esi,0xb5f7ffa4
11018e52:	xchg   edi,eax
11018e53:	push   esi
11018e55:	lods   al,BYTE PTR ds:[esi]
11018e56:	mov    bh,bh
11018e58:	mul    BYTE PTR [edi+edi*2+0x769ef5ff]
11018e5f:	push   ebp
11018e61:	cwde   
11018e62:	outs   dx,BYTE PTR ds:[esi]
11018e63:	push   esp
11018e65:	xchg   esp,eax
11018e66:	push   0x6391f4ff
11018e6b:	push   esp
11018e6d:	mov    fs,WORD PTR [eax-0x1]
11018e70:	repz mov WORD PTR [ebp-0x1],ds
11018e74:	repz mov WORD PTR [esi-0x1],ds
11018e78:	cli    
11018e79:	int    0xb9
11018e7b:	(bad)  
11018e7c:	(bad)  
11018e7d:	(bad)  
11018e7e:	std    
11018e7f:	(bad)  
11018e80:	(bad)  
11018e81:	(bad)  
11018e82:	(bad)  
11018e83:	(bad)  
11018e84:	(bad)  
11018e85:	(bad)  
11018e86:	std    
11018e87:	(bad)  
11018e88:	fcmovu st,st(2)
11018e8a:	fcos   
11018e8c:	pop    ds
11018e8d:	pop    ds
11018e8e:	pop    ds
11018e8f:	call   DWORD PTR [ecx]
11018e91:	or     al,BYTE PTR [esi]
11018e93:	push   DWORD PTR [edx+0x72ff4265]
11018e99:	inc    eax
11018e9a:	sub    bh,bh
11018e9c:	add    BYTE PTR [eax],al
11018e9e:	add    bh,bh
11018ea0:	add    BYTE PTR [eax],al
11018ea2:	add    BYTE PTR [esi+0x7f000000],bh
11018ea8:	add    BYTE PTR [eax],al
11018eaa:	add    BYTE PTR [ecx+0x0],al
11018ead:	add    BYTE PTR [eax],al
11018eaf:	sbb    BYTE PTR [eax],al
11018eb1:	add    BYTE PTR [eax],al
11018eb3:	push   es
	...
11018ec8:	add    BYTE PTR [eax],al
11018eca:	add    BYTE PTR [esi],al
11018ecc:	add    BYTE PTR [eax],al
11018ece:	add    BYTE PTR [eax],bl
11018ed0:	add    BYTE PTR [eax],al
11018ed2:	add    bh,bh
11018ed4:	ja     0x11018f19
11018ed6:	sub    al,0xff
11018ed8:	call   0xc300e560
11018edd:	fs inc ecx
11018edf:	call   DWORD PTR [edx]
11018ee1:	or     al,BYTE PTR [esi]
11018ee3:	call   FWORD PTR [esi]
11018ee5:	push   ds
11018ee6:	push   ds
11018ee7:	(bad)  
11018ee8:	fcmovnu st,st(3)
11018eea:	(bad)  
11018eec:	(bad)  
11018eed:	(bad)  
11018eee:	(bad)  
11018eef:	(bad)  
11018ef0:	(bad)  
11018ef1:	(bad)  
11018ef2:	(bad)  
11018ef3:	(bad)  
11018ef4:	(bad)  
11018ef5:	(bad)  
11018ef6:	(bad)  
11018ef7:	(bad)  
11018ef8:	cld    
11018ef9:	jmp    0xd3fb8ede
11018efe:	stos   BYTE PTR es:[edi],al
11018eff:	(bad)  
11018f00:	clc    
11018f01:	shl    BYTE PTR [edi-0x59400701],0xff
11018f08:	clc    
11018f09:	mov    ebx,0xb5f7ffa0
11018f0e:	cwde   
11018f0f:	push   edi
11018f11:	scas   al,BYTE PTR es:[edi]
11018f12:	(bad)  
11018f13:	push   esi
11018f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11018f16:	cmp    edi,0xfffffff5
11018f19:	mov    al,ds:0x9af5ff7a
11018f1e:	jno    0x11018f1f
11018f20:	hlt    
11018f21:	xchg   ebp,eax
11018f22:	push   0xffffffff
11018f24:	hlt    
11018f25:	xchg   edx,eax
11018f26:	gs push esp
11018f29:	(bad)  
11018f2a:	popa   
11018f2b:	push   ebx
11018f2d:	lea    ebx,[edi-0x1]
11018f30:	cmc    
11018f31:	xchg   esp,eax
11018f32:	push   0xc8d8fbff
11018f37:	(bad)  
11018f38:	(bad)  
11018f39:	(bad)  
11018f3a:	(bad)  
11018f3b:	(bad)  
11018f3c:	(bad)  
11018f3d:	(bad)  
11018f3e:	(bad)  
11018f3f:	(bad)  
11018f40:	(bad)  
11018f41:	(bad)  
11018f42:	(bad)  
11018f43:	(bad)  
11018f44:	fcmovu st,st(2)
11018f46:	(bad)  
11018f48:	sbb    eax,0x13ff1d1d
11018f4d:	or     eax,DWORD PTR [edi]
11018f4f:	push   DWORD PTR [edx-0x1700bd9b]
11018f55:	adc    BYTE PTR [esi-0x1],0x77
11018f59:	inc    ebx
11018f5a:	sub    al,0xff
11018f5c:	add    BYTE PTR [eax],al
11018f5e:	add    bh,bh
11018f60:	add    BYTE PTR [eax],al
11018f62:	add    BYTE PTR [esi+0x7f000000],bh
11018f68:	add    BYTE PTR [eax],al
11018f6a:	add    BYTE PTR [ecx+0x0],al
11018f6d:	add    BYTE PTR [eax],al
11018f6f:	sbb    BYTE PTR [eax],al
11018f71:	add    BYTE PTR [eax],al
11018f73:	push   es
	...
11018f88:	add    BYTE PTR [eax],al
11018f8a:	add    BYTE PTR [esi],al
11018f8c:	add    BYTE PTR [eax],al
11018f8e:	add    BYTE PTR [eax],bl
11018f90:	add    BYTE PTR [eax],al
11018f92:	add    bh,bh
11018f94:	jns    0x11018fda
11018f96:	sub    eax,0x5987f0ff
11018f9b:	jmp    edi
11018f9d:	adc    BYTE PTR [esi-0x1],0xb0
11018fa1:	arpl   WORD PTR [ecx-0x1],ax
11018fa4:	adc    cl,BYTE PTR [edx]
11018fa6:	push   es
11018fa7:	jmp    DWORD PTR [eax]
11018fa9:	and    BYTE PTR [eax],ah
11018fab:	(bad)  
11018fac:	fcmovu st,st(2)
11018fae:	(bad)  
11018fb0:	(bad)  
11018fb1:	(bad)  
11018fb2:	(bad)  
11018fb3:	(bad)  
11018fb4:	(bad)  
11018fb5:	(bad)  
11018fb6:	std    
11018fb7:	(bad)  
11018fb8:	(bad)  
11018fb9:	(bad)  
11018fba:	(bad)  
11018fbb:	(bad)  
11018fbc:	std    
11018fbd:	div    dl
11018fbf:	(bad)  
11018fc0:	cli    
11018fc1:	sar    BYTE PTR [ebp-0x6a4b0801],1
11018fc7:	push   esi
11018fc9:	scas   al,BYTE PTR es:[edi]
11018fca:	mov    ?,edi
11018fcc:	imul   BYTE PTR [edx-0x5a090078]
11018fd2:	cmp    edi,0xff79a0f5
11018fd8:	cmc    
11018fd9:	fwait
11018fda:	jb     0x11018fdb
11018fdc:	hlt    
11018fdd:	xchg   esi,eax
11018fde:	ins    BYTE PTR es:[edi],dx
11018fdf:	push   esp
11018fe1:	xchg   edx,eax
11018fe2:	push   sp
11018fe5:	(bad)  
11018fe6:	(bad)  
11018fe7:	push   esp
11018fe9:	xchg   ecx,eax
11018fea:	fs (bad) 
11018fec:	clc    
11018fed:	mov    bh,0x99
11018fef:	(bad)  
11018ff0:	std    
11018ff1:	icebp  
11018ff2:	jmp    0x11018ff3
11018ff4:	(bad)  
11018ff5:	(bad)  
11018ff6:	std    
11018ff7:	(bad)  
11018ff8:	(bad)  
11018ff9:	(bad)  
11018ffa:	(bad)  
11018ffb:	(bad)  
11018ffc:	(bad)  
11018ffd:	(bad)  
11018ffe:	(bad)  
11018fff:	(bad)  
11019000:	(bad)  
11019002:	fcos   
11019004:	and    BYTE PTR [edi],bl
11019006:	pop    ds
11019007:	call   DWORD PTR [ebx]
11019009:	or     eax,DWORD PTR [edi]
1101900b:	push   DWORD PTR [edx-0x1800bd9c]
11019011:	adc    BYTE PTR [esi-0x1],0xf0
11019015:	xchg   DWORD PTR [ecx-0x1],ebx
11019018:	jns    0x1101905e
1101901a:	sub    eax,0xff
1101901f:	inc    DWORD PTR [eax]
11019021:	add    BYTE PTR [eax],al
11019023:	mov    esi,0x7f000000
11019028:	add    BYTE PTR [eax],al
1101902a:	add    BYTE PTR [ecx+0x0],al
1101902d:	add    BYTE PTR [eax],al
1101902f:	sbb    BYTE PTR [eax],al
11019031:	add    BYTE PTR [eax],al
11019033:	push   es
	...
11019048:	add    BYTE PTR [eax],al
1101904a:	add    BYTE PTR [esi],al
1101904c:	add    BYTE PTR [eax],al
1101904e:	add    BYTE PTR [eax],bl
11019050:	add    BYTE PTR [eax],al
11019052:	add    bh,bh
11019054:	jp     0x1101909b
11019056:	sub    eax,0x5a89f3ff
1101905b:	push   eax
1101905d:	xchg   DWORD PTR [ecx-0x1],ebx
11019060:	out    0x82,eax
11019062:	push   esi
11019063:	push   DWORD PTR [ecx+0x11ff4164]
11019069:	or     al,BYTE PTR [esi]
1101906b:	jmp    DWORD PTR [eax]
1101906d:	and    BYTE PTR [eax],ah
1101906f:	(bad)  
11019070:	fcmovnu st,st(3)
11019072:	(bad)  
11019074:	(bad)  
11019075:	(bad)  
11019076:	std    
11019077:	(bad)  
11019078:	(bad)  
11019079:	(bad)  
1101907a:	(bad)  
1101907b:	(bad)  
1101907c:	(bad)  
1101907d:	(bad)  
1101907e:	(bad)  
1101907f:	(bad)  
11019080:	(bad)  
11019081:	(bad)  
11019082:	std    
11019083:	(bad)  
11019084:	std    
11019085:	hlt    
11019086:	lock (bad) 
11019088:	sti    
11019089:	xlat   BYTE PTR ds:[ebx]
1101908a:	(bad)  
1101908b:	(bad)  
1101908c:	stc    
1101908d:	mov    esi,0xabf7ffa3
11019092:	mov    bh,bh
11019094:	neg    BYTE PTR [esi-0x640a0089]
1101909a:	jb     0x1101909b
1101909c:	mul    BYTE PTR [ecx-0x4e070085]
110190a2:	xchg   ecx,eax
110190a3:	(bad)  
110190a4:	cli    
110190a5:	int    0xb8
110190a7:	(bad)  
110190a8:	std    
110190a9:	icebp  
110190aa:	jmp    0x110190ab
110190ac:	(bad)  
110190ad:	(bad)  
110190ae:	std    
110190af:	(bad)  
110190b0:	(bad)  
110190b1:	(bad)  
110190b2:	std    
110190b3:	(bad)  
110190b4:	std    
110190b5:	std    
110190b6:	std    
110190b7:	(bad)  
110190b8:	(bad)  
110190b9:	(bad)  
110190ba:	(bad)  
110190bb:	(bad)  
110190bc:	fcmovu st,st(2)
110190be:	(bad)  
110190c0:	and    BYTE PTR [eax],ah
110190c2:	pop    ds
110190c3:	call   DWORD PTR [edx]
110190c5:	or     al,BYTE PTR [esi]
110190c7:	push   DWORD PTR [edx-0x1800bd9b]
110190cd:	adc    BYTE PTR [esi-0x1],0xf0
110190d1:	xchg   DWORD PTR [ecx-0x1],ebx
110190d4:	xrelease mov DWORD PTR [edx-0x1],ebx
110190d8:	jns    0x1101911e
110190da:	sub    eax,0xff
110190df:	inc    DWORD PTR [eax]
110190e1:	add    BYTE PTR [eax],al
110190e3:	mov    esi,0x7f000000
110190e8:	add    BYTE PTR [eax],al
110190ea:	add    BYTE PTR [ecx+0x0],al
110190ed:	add    BYTE PTR [eax],al
110190ef:	sbb    BYTE PTR [eax],al
110190f1:	add    BYTE PTR [eax],al
110190f3:	push   es
	...
11019108:	add    BYTE PTR [eax],al
1101910a:	add    BYTE PTR [esi],al
1101910c:	add    BYTE PTR [eax],al
1101910e:	add    BYTE PTR [eax],bl
11019110:	add    BYTE PTR [eax],al
11019112:	add    bh,bh
11019114:	jp     0x1101915b
11019116:	sub    eax,0x5a89f3ff
1101911b:	push   ebx
1101911d:	mov    DWORD PTR [edx-0x1],ebx
11019120:	lock xchg DWORD PTR [ecx-0x1],ebx
11019124:	call   0xc300e7ac
11019129:	fs inc ecx
1101912b:	call   DWORD PTR [edx]
1101912d:	or     al,BYTE PTR [esi]
1101912f:	call   FWORD PTR [esi]
11019131:	push   ds
11019132:	push   ds
11019133:	(bad)  
11019134:	fcmovnu st,st(3)
11019136:	(bad)  
11019138:	(bad)  
11019139:	(bad)  
1101913a:	(bad)  
1101913b:	(bad)  
1101913c:	(bad)  
1101913d:	(bad)  
1101913e:	std    
1101913f:	(bad)  
11019140:	std    
11019141:	std    
11019142:	std    
11019143:	(bad)  
11019144:	(bad)  
11019145:	(bad)  
11019146:	std    
11019147:	(bad)  
11019148:	(bad)  
11019149:	(bad)  
1101914a:	std    
1101914b:	(bad)  
1101914c:	(bad)  
1101914d:	(bad)  
1101914e:	std    
1101914f:	(bad)  
11019150:	std    
11019151:	std    
11019152:	std    
11019153:	(bad)  
11019154:	(bad)  
11019155:	(bad)  
11019156:	std    
11019157:	(bad)  
11019158:	std    
11019159:	std    
1101915a:	std    
1101915b:	(bad)  
1101915c:	(bad)  
1101915d:	(bad)  
1101915e:	(bad)  
1101915f:	(bad)  
11019160:	(bad)  
11019161:	(bad)  
11019162:	(bad)  
11019163:	(bad)  
11019164:	(bad)  
11019165:	(bad)  
11019166:	(bad)  
11019167:	(bad)  
11019168:	(bad)  
11019169:	(bad)  
1101916a:	std    
1101916b:	(bad)  
1101916c:	std    
1101916d:	std    
1101916e:	std    
1101916f:	(bad)  
11019170:	(bad)  
11019171:	(bad)  
11019172:	std    
11019173:	(bad)  
11019174:	std    
11019175:	std    
11019176:	std    
11019177:	(bad)  
11019178:	fcmovu st,st(2)
1101917a:	(bad)  
1101917c:	sbb    eax,0x13ff1d1d
11019181:	or     al,BYTE PTR [edi]
11019183:	push   DWORD PTR [edx-0x1700bd9b]
11019189:	adc    BYTE PTR [esi-0x1],0xf0
1101918d:	xchg   DWORD PTR [ecx-0x1],ebx
11019190:	xrelease mov DWORD PTR [edx-0x1],ebx
11019194:	xrelease mov DWORD PTR [edx-0x1],ebx
11019198:	jns    0x110191de
1101919a:	sub    eax,0xff
1101919f:	inc    DWORD PTR [eax]
110191a1:	add    BYTE PTR [eax],al
110191a3:	mov    ebp,0x7f000000
110191a8:	add    BYTE PTR [eax],al
110191aa:	add    BYTE PTR [ecx+0x0],al
110191ad:	add    BYTE PTR [eax],al
110191af:	sbb    BYTE PTR [eax],al
110191b1:	add    BYTE PTR [eax],al
110191b3:	push   es
	...
110191c8:	add    BYTE PTR [eax],al
110191ca:	add    BYTE PTR [esi],al
110191cc:	add    BYTE PTR [eax],al
110191ce:	add    BYTE PTR [eax],bl
110191d0:	add    BYTE PTR [eax],al
110191d2:	add    bh,bh
110191d4:	jp     0x1101921b
110191d6:	sub    eax,0x5a89f3ff
110191db:	push   ebx
110191dd:	mov    DWORD PTR [edx-0x1],ebx
110191e0:	xrelease mov DWORD PTR [edx-0x1],ebx
110191e4:	lock xchg DWORD PTR [ecx-0x1],ebx
110191e8:	out    0x82,eax
110191ea:	push   esi
110191eb:	push   DWORD PTR [eax+0x12ff4163]
110191f1:	or     al,BYTE PTR [esi]
110191f3:	jmp    DWORD PTR [eax]
110191f5:	and    BYTE PTR [eax],ah
110191f7:	(bad)  
110191f8:	fcmovu st,st(2)
110191fa:	(bad)  
110191fc:	(bad)  
110191fd:	(bad)  
110191fe:	(bad)  
110191ff:	(bad)  
11019200:	std    
11019201:	std    
11019202:	std    
11019203:	(bad)  
11019204:	(bad)  
11019205:	(bad)  
11019206:	std    
11019207:	(bad)  
11019208:	(bad)  
11019209:	(bad)  
1101920a:	(bad)  
1101920b:	(bad)  
1101920c:	(bad)  
1101920d:	(bad)  
1101920e:	std    
1101920f:	(bad)  
11019210:	(bad)  
11019211:	(bad)  
11019212:	(bad)  
11019213:	(bad)  
11019214:	(bad)  
11019215:	(bad)  
11019216:	(bad)  
11019217:	(bad)  
11019218:	(bad)  
11019219:	(bad)  
1101921a:	std    
1101921b:	(bad)  
1101921c:	(bad)  
1101921d:	(bad)  
1101921e:	(bad)  
1101921f:	(bad)  
11019220:	(bad)  
11019221:	(bad)  
11019222:	(bad)  
11019223:	(bad)  
11019224:	(bad)  
11019225:	(bad)  
11019226:	(bad)  
11019227:	(bad)  
11019228:	(bad)  
11019229:	(bad)  
1101922a:	std    
1101922b:	(bad)  
1101922c:	std    
1101922d:	std    
1101922e:	std    
1101922f:	(bad)  
11019230:	(bad)  
11019231:	(bad)  
11019232:	(bad)  
11019233:	(bad)  
11019234:	(bad)  
11019236:	fcos   
11019238:	pop    ds
11019239:	pop    ds
1101923a:	pop    ds
1101923b:	call   DWORD PTR [ebx]
1101923d:	or     al,BYTE PTR [edi]
1101923f:	push   DWORD PTR [edx-0x1800bd9c]
11019245:	adc    BYTE PTR [esi-0x1],0xf0
11019249:	xchg   DWORD PTR [ecx-0x1],ebx
1101924c:	xrelease mov DWORD PTR [edx-0x1],ebx
11019250:	xrelease mov DWORD PTR [edx-0x1],ebx
11019254:	xrelease mov DWORD PTR [edx-0x1],ebx
11019258:	jns    0x1101929e
1101925a:	sub    eax,0xff
1101925f:	inc    DWORD PTR [eax]
11019261:	add    BYTE PTR [eax],al
11019263:	mov    ecx,0x7d000000
11019268:	add    BYTE PTR [eax],al
1101926a:	add    BYTE PTR [eax+0x0],al
1101926d:	add    BYTE PTR [eax],al
1101926f:	sbb    BYTE PTR [eax],al
11019271:	add    BYTE PTR [eax],al
11019273:	push   es
	...
11019288:	add    BYTE PTR [eax],al
1101928a:	add    BYTE PTR ds:0x16000000,al
11019290:	add    BYTE PTR [eax],al
11019292:	add    bh,bh
11019294:	jp     0x110192db
11019296:	sub    eax,0x5a89f3ff
1101929b:	push   ebx
1101929d:	mov    DWORD PTR [edx-0x1],ebx
110192a0:	xrelease mov DWORD PTR [edx-0x1],ebx
110192a4:	xrelease mov DWORD PTR [edx-0x1],ebx
110192a8:	lock xchg DWORD PTR [ecx-0x1],ebx
110192ac:	out    0x82,eax
110192ae:	push   esi
110192af:	push   DWORD PTR [ecx+0x11ff4164]
110192b5:	or     DWORD PTR [esi],eax
110192b7:	jmp    DWORD PTR [eax]
110192b9:	and    BYTE PTR [eax],ah
110192bb:	(bad)  
110192bc:	fcmovnu st,st(3)
110192be:	(bad)  
110192c0:	(bad)  
110192c1:	(bad)  
110192c2:	std    
110192c3:	(bad)  
110192c4:	(bad)  
110192c5:	(bad)  
110192c6:	std    
110192c7:	(bad)  
110192c8:	(bad)  
110192c9:	(bad)  
110192ca:	(bad)  
110192cb:	(bad)  
110192cc:	(bad)  
110192cd:	(bad)  
110192ce:	std    
110192cf:	(bad)  
110192d0:	(bad)  
110192d1:	(bad)  
110192d2:	std    
110192d3:	(bad)  
110192d4:	(bad)  
110192d5:	(bad)  
110192d6:	(bad)  
110192d7:	(bad)  
110192d8:	std    
110192d9:	std    
110192da:	std    
110192db:	(bad)  
110192dc:	(bad)  
110192dd:	(bad)  
110192de:	std    
110192df:	(bad)  
110192e0:	(bad)  
110192e1:	(bad)  
110192e2:	std    
110192e3:	(bad)  
110192e4:	(bad)  
110192e5:	(bad)  
110192e6:	(bad)  
110192e7:	(bad)  
110192e8:	(bad)  
110192e9:	(bad)  
110192ea:	(bad)  
110192eb:	(bad)  
110192ec:	std    
110192ed:	std    
110192ee:	std    
110192ef:	(bad)  
110192f0:	fcmovu st,st(2)
110192f2:	(bad)  
110192f4:	and    BYTE PTR [edi],bl
110192f6:	pop    ds
110192f7:	call   DWORD PTR [ecx]
110192f9:	or     al,BYTE PTR [esi]
110192fb:	push   DWORD PTR [edx-0x1800bd9b]
11019301:	adc    BYTE PTR [esi-0x1],0xf0
11019305:	xchg   DWORD PTR [ecx-0x1],ebx
11019308:	xrelease mov DWORD PTR [edx-0x1],ebx
1101930c:	xrelease mov DWORD PTR [edx-0x1],ebx
11019310:	xrelease mov DWORD PTR [edx-0x1],ebx
11019314:	xrelease mov DWORD PTR [edx-0x1],ebx
11019318:	jns    0x1101935e
1101931a:	sub    eax,0xff
1101931f:	inc    DWORD PTR [eax]
11019321:	add    BYTE PTR [eax],al
11019323:	lods   al,BYTE PTR ds:[esi]
11019324:	add    BYTE PTR [eax],al
11019326:	add    BYTE PTR [ebx+0x0],dh
11019329:	add    BYTE PTR [eax],al
1101932b:	cmp    eax,DWORD PTR [eax]
1101932d:	add    BYTE PTR [eax],al
1101932f:	push   ss
11019330:	add    BYTE PTR [eax],al
11019332:	add    BYTE PTR ds:0x0,al
	...
11019348:	add    BYTE PTR [eax],al
1101934a:	add    BYTE PTR [eax+eax*1],al
1101934d:	add    BYTE PTR [eax],al
1101934f:	adc    al,BYTE PTR [eax]
11019351:	add    BYTE PTR [eax],al
11019353:	(bad)  
11019354:	jp     0x1101939b
11019356:	sub    eax,0x5a89f3ff
1101935b:	push   ebx
1101935d:	mov    DWORD PTR [edx-0x1],ebx
11019360:	xrelease mov DWORD PTR [edx-0x1],ebx
11019364:	xrelease mov DWORD PTR [edx-0x1],ebx
11019368:	xrelease mov DWORD PTR [edx-0x1],ebx
1101936c:	lock xchg DWORD PTR [ecx-0x1],ebx
11019370:	call   0xc300e9f8
11019375:	fs inc ecx
11019377:	call   DWORD PTR [edx]
11019379:	or     al,BYTE PTR [esi]
1101937b:	call   FWORD PTR [esi]
1101937d:	push   ds
1101937e:	push   ds
1101937f:	(bad)  
11019380:	fcmovnu st,st(3)
11019382:	(bad)  
11019384:	(bad)  
11019385:	(bad)  
11019386:	std    
11019387:	(bad)  
11019388:	(bad)  
11019389:	(bad)  
1101938a:	std    
1101938b:	(bad)  
1101938c:	(bad)  
1101938d:	(bad)  
1101938e:	std    
1101938f:	(bad)  
11019390:	(bad)  
11019391:	(bad)  
11019392:	std    
11019393:	(bad)  
11019394:	(bad)  
11019395:	(bad)  
11019396:	std    
11019397:	(bad)  
11019398:	std    
11019399:	std    
1101939a:	std    
1101939b:	(bad)  
1101939c:	(bad)  
1101939d:	(bad)  
1101939e:	(bad)  
1101939f:	(bad)  
110193a0:	(bad)  
110193a1:	(bad)  
110193a2:	std    
110193a3:	(bad)  
110193a4:	(bad)  
110193a5:	(bad)  
110193a6:	(bad)  
110193a7:	(bad)  
110193a8:	(bad)  
110193a9:	(bad)  
110193aa:	std    
110193ab:	(bad)  
110193ac:	fcmovu st,st(2)
110193ae:	fcos   
110193b0:	sbb    eax,0x13ff1d1d
110193b5:	or     eax,DWORD PTR [edi]
110193b7:	push   DWORD PTR [edx-0x1700bd9b]
110193bd:	adc    BYTE PTR [esi-0x1],0xf0
110193c1:	xchg   DWORD PTR [ecx-0x1],ebx
110193c4:	xrelease mov DWORD PTR [edx-0x1],ebx
110193c8:	xrelease mov DWORD PTR [edx-0x1],ebx
110193cc:	xrelease mov DWORD PTR [edx-0x1],ebx
110193d0:	xrelease mov DWORD PTR [edx-0x1],ebx
110193d4:	xrelease mov DWORD PTR [edx-0x1],ebx
110193d8:	jns    0x1101941e
110193da:	sub    eax,0xff
110193df:	inc    DWORD PTR [eax]
110193e1:	add    BYTE PTR [eax],al
110193e3:	lea    eax,[eax]
110193e5:	add    BYTE PTR [eax],al
110193e7:	pop    edi
110193e8:	add    BYTE PTR [eax],al
110193ea:	add    BYTE PTR [ecx],dh
110193ec:	add    BYTE PTR [eax],al
110193ee:	add    BYTE PTR [edx],dl
110193f0:	add    BYTE PTR [eax],al
110193f2:	add    BYTE PTR [eax+eax*1],al
	...
11019409:	add    BYTE PTR [eax],al
1101940b:	add    eax,DWORD PTR [eax]
1101940d:	add    BYTE PTR [eax],al
1101940f:	or     al,0x0
11019411:	add    BYTE PTR [eax],al
11019413:	(bad)  
11019414:	cmp    eax,0x7aff1622
11019419:	inc    ebp
1101941a:	sub    eax,0x2d457aff
1101941f:	(bad)  
11019420:	jp     0x11019467
11019422:	sub    eax,0x2d457aff
11019427:	(bad)  
11019428:	jp     0x1101946f
1101942a:	sub    eax,0x2d4479ff
1101942f:	push   DWORD PTR [edi+0x43]
11019432:	sub    al,0xff
11019434:	jb     0x11019476
11019436:	sub    bh,bh
11019438:	inc    esp
11019439:	es sbb edi,edi
1101943c:	add    BYTE PTR [eax],al
1101943e:	add    bh,bh
11019440:	and    BYTE PTR [eax],ah
11019442:	and    bh,bh
11019444:	fcmovu st,st(2)
11019446:	(bad)  
11019448:	(bad)  
11019449:	(bad)  
1101944a:	(bad)  
1101944b:	(bad)  
1101944c:	std    
1101944d:	std    
1101944e:	std    
1101944f:	(bad)  
11019450:	std    
11019451:	std    
11019452:	std    
11019453:	(bad)  
11019454:	(bad)  
11019455:	(bad)  
11019456:	std    
11019457:	(bad)  
11019458:	std    
11019459:	std    
1101945a:	std    
1101945b:	(bad)  
1101945c:	(bad)  
1101945d:	(bad)  
1101945e:	std    
1101945f:	(bad)  
11019460:	(bad)  
11019461:	(bad)  
11019462:	(bad)  
11019463:	(bad)  
11019464:	(bad)  
11019465:	(bad)  
11019466:	(bad)  
11019467:	(bad)  
11019468:	(bad)  
1101946a:	fcos   
1101946c:	pop    ds
1101946d:	pop    ds
1101946e:	pop    ds
1101946f:	inc    DWORD PTR [eax]
11019471:	add    BYTE PTR [eax],al
11019473:	inc    DWORD PTR [ebp+0x27]
11019476:	sbb    edi,edi
11019478:	jb     0x110194ba
1101947a:	sub    bh,bh
1101947c:	ja     0x110194c1
1101947e:	sub    al,0xff
11019480:	jns    0x110194c6
11019482:	sub    eax,0x2d4479ff
11019487:	(bad)  
11019488:	jns    0x110194ce
1101948a:	sub    eax,0x2d4479ff
1101948f:	(bad)  
11019490:	jns    0x110194d6
11019492:	sub    eax,0x2d4479ff
11019497:	(bad)  
11019498:	cmp    al,0x22
1101949a:	push   ss
1101949b:	inc    DWORD PTR [eax]
1101949d:	add    BYTE PTR [eax],al
1101949f:	inc    DWORD PTR [eax]
110194a1:	add    BYTE PTR [eax],al
110194a3:	pop    edi
110194a4:	add    BYTE PTR [eax],al
110194a6:	add    BYTE PTR [eax+0x0],al
110194a9:	add    BYTE PTR [eax],al
110194ab:	and    DWORD PTR [eax],eax
110194ad:	add    BYTE PTR [eax],al
110194af:	or     al,0x0
110194b1:	add    BYTE PTR [eax],al
110194b3:	add    eax,DWORD PTR [eax]
	...
110194c9:	add    BYTE PTR [eax],al
110194cb:	add    DWORD PTR [eax],eax
110194cd:	add    BYTE PTR [eax],al
110194cf:	push   es
110194d0:	add    BYTE PTR [eax],al
110194d2:	add    bh,bh
110194d4:	add    BYTE PTR [eax],al
110194d6:	add    bh,bh
110194d8:	add    BYTE PTR [eax],al
110194da:	add    bh,bh
110194dc:	add    BYTE PTR [eax],al
110194de:	add    bh,bh
110194e0:	add    BYTE PTR [eax],al
110194e2:	add    bh,bh
110194e4:	add    BYTE PTR [eax],al
110194e6:	add    bh,bh
110194e8:	add    BYTE PTR [eax],al
110194ea:	add    bh,bh
110194ec:	add    BYTE PTR [eax],al
110194ee:	add    bh,bh
110194f0:	add    BYTE PTR [eax],al
110194f2:	add    bh,bh
110194f4:	add    BYTE PTR [eax],al
110194f6:	add    bh,bh
110194f8:	add    BYTE PTR [eax],al
110194fa:	add    bh,bh
110194fc:	add    BYTE PTR [eax],al
110194fe:	add    bh,bh
11019500:	add    BYTE PTR [eax],al
11019502:	add    bh,bh
11019504:	and    BYTE PTR [eax],ah
11019506:	and    bh,bh
11019508:	fcmovnu st,st(3)
1101950a:	(bad)  
1101950c:	std    
1101950d:	std    
1101950e:	std    
1101950f:	(bad)  
11019510:	std    
11019511:	std    
11019512:	std    
11019513:	(bad)  
11019514:	(bad)  
11019515:	(bad)  
11019516:	(bad)  
11019517:	(bad)  
11019518:	std    
11019519:	std    
1101951a:	std    
1101951b:	(bad)  
1101951c:	std    
1101951d:	std    
1101951e:	std    
1101951f:	(bad)  
11019520:	(bad)  
11019521:	(bad)  
11019522:	(bad)  
11019523:	(bad)  
11019524:	fcmovu st,st(2)
11019526:	(bad)  
11019528:	pop    ds
11019529:	pop    ds
1101952a:	pop    ds
1101952b:	inc    DWORD PTR [eax]
1101952d:	add    BYTE PTR [eax],al
1101952f:	inc    DWORD PTR [eax]
11019531:	add    BYTE PTR [eax],al
11019533:	inc    DWORD PTR [eax]
11019535:	add    BYTE PTR [eax],al
11019537:	inc    DWORD PTR [eax]
11019539:	add    BYTE PTR [eax],al
1101953b:	inc    DWORD PTR [eax]
1101953d:	add    BYTE PTR [eax],al
1101953f:	inc    DWORD PTR [eax]
11019541:	add    BYTE PTR [eax],al
11019543:	inc    DWORD PTR [eax]
11019545:	add    BYTE PTR [eax],al
11019547:	inc    DWORD PTR [eax]
11019549:	add    BYTE PTR [eax],al
1101954b:	inc    DWORD PTR [eax]
1101954d:	add    BYTE PTR [eax],al
1101954f:	inc    DWORD PTR [eax]
11019551:	add    BYTE PTR [eax],al
11019553:	inc    DWORD PTR [eax]
11019555:	add    BYTE PTR [eax],al
11019557:	inc    DWORD PTR [eax]
11019559:	add    BYTE PTR [eax],al
1101955b:	inc    DWORD PTR [eax]
1101955d:	add    BYTE PTR [eax],al
1101955f:	inc    DWORD PTR [eax]
11019561:	add    BYTE PTR [eax],al
11019563:	xor    DWORD PTR [eax],eax
11019565:	add    BYTE PTR [eax],al
11019567:	and    DWORD PTR [eax],eax
11019569:	add    BYTE PTR [eax],al
1101956b:	adc    DWORD PTR [eax],eax
1101956d:	add    BYTE PTR [eax],al
1101956f:	push   es
11019570:	add    BYTE PTR [eax],al
11019572:	add    BYTE PTR [ecx],al
	...
1101958c:	add    BYTE PTR [eax],al
1101958e:	add    BYTE PTR [edx],al
11019590:	add    BYTE PTR [eax],al
11019592:	add    BYTE PTR [esi],al
11019594:	add    BYTE PTR [eax],al
11019596:	add    BYTE PTR [eax+eax*1],cl
11019599:	add    BYTE PTR [eax],al
1101959b:	adc    al,BYTE PTR [eax]
1101959d:	add    BYTE PTR [eax],al
1101959f:	push   ss
110195a0:	add    BYTE PTR [eax],al
110195a2:	add    BYTE PTR [edi],dl
110195a4:	add    BYTE PTR [eax],al
110195a6:	add    BYTE PTR [eax],bl
110195a8:	add    BYTE PTR [eax],al
110195aa:	add    BYTE PTR [eax],bl
110195ac:	add    BYTE PTR [eax],al
110195ae:	add    BYTE PTR [eax],bl
110195b0:	add    BYTE PTR [eax],al
110195b2:	add    BYTE PTR [eax],bl
110195b4:	add    BYTE PTR [eax],al
110195b6:	add    BYTE PTR [eax],bl
110195b8:	add    BYTE PTR [eax],al
110195ba:	add    BYTE PTR [ebx],bl
110195bc:	add    BYTE PTR [eax],al
110195be:	add    BYTE PTR [ebx],ah
110195c0:	add    BYTE PTR [eax],al
110195c2:	add    BYTE PTR [ebp+0x0],dl
110195c5:	add    BYTE PTR [eax],al
110195c7:	in     al,dx
110195c8:	push   ds
110195c9:	push   ds
110195ca:	push   ds
110195cb:	(bad)  
110195cc:	fcmovnu st,st(3)
110195ce:	(bad)  
110195d0:	(bad)  
110195d1:	(bad)  
110195d2:	(bad)  
110195d3:	(bad)  
110195d4:	(bad)  
110195d5:	(bad)  
110195d6:	(bad)  
110195d7:	(bad)  
110195d8:	(bad)  
110195d9:	(bad)  
110195da:	(bad)  
110195db:	(bad)  
110195dc:	(bad)  
110195dd:	(bad)  
110195de:	(bad)  
110195df:	(bad)  
110195e0:	fcmovu st,st(2)
110195e2:	(bad)  
110195e4:	sbb    eax,0xff1d1d
110195e9:	add    BYTE PTR [eax],al
110195eb:	jmp    0x110195ed
110195ed:	add    BYTE PTR [eax],al
110195ef:	push   esp
110195f0:	add    BYTE PTR [eax],al
110195f2:	add    BYTE PTR [ebx],ah
110195f4:	add    BYTE PTR [eax],al
110195f6:	add    BYTE PTR [ebx],bl
110195f8:	add    BYTE PTR [eax],al
110195fa:	add    BYTE PTR [eax],bl
110195fc:	add    BYTE PTR [eax],al
110195fe:	add    BYTE PTR [eax],bl
11019600:	add    BYTE PTR [eax],al
11019602:	add    BYTE PTR [eax],bl
11019604:	add    BYTE PTR [eax],al
11019606:	add    BYTE PTR [eax],bl
11019608:	add    BYTE PTR [eax],al
1101960a:	add    BYTE PTR [eax],bl
1101960c:	add    BYTE PTR [eax],al
1101960e:	add    BYTE PTR [eax],bl
11019610:	add    BYTE PTR [eax],al
11019612:	add    BYTE PTR [eax],bl
11019614:	add    BYTE PTR [eax],al
11019616:	add    BYTE PTR [eax],bl
11019618:	add    BYTE PTR [eax],al
1101961a:	add    BYTE PTR [edi],dl
1101961c:	add    BYTE PTR [eax],al
1101961e:	add    BYTE PTR [esi],dl
11019620:	add    BYTE PTR [eax],al
11019622:	add    BYTE PTR [edx],dl
11019624:	add    BYTE PTR [eax],al
11019626:	add    BYTE PTR [eax+eax*1],cl
11019629:	add    BYTE PTR [eax],al
1101962b:	push   es
1101962c:	add    BYTE PTR [eax],al
1101962e:	add    BYTE PTR [edx],al
	...
11019650:	add    BYTE PTR [eax],al
11019652:	add    BYTE PTR [ecx],al
11019654:	add    BYTE PTR [eax],al
11019656:	add    BYTE PTR [ebx],al
11019658:	add    BYTE PTR [eax],al
1101965a:	add    BYTE PTR [eax+eax*1],al
1101965d:	add    BYTE PTR [eax],al
1101965f:	add    eax,0x5000000
11019664:	add    BYTE PTR [eax],al
11019666:	add    BYTE PTR [esi],al
11019668:	add    BYTE PTR [eax],al
1101966a:	add    BYTE PTR [esi],al
1101966c:	add    BYTE PTR [eax],al
1101966e:	add    BYTE PTR [esi],al
11019670:	add    BYTE PTR [eax],al
11019672:	add    BYTE PTR [esi],al
11019674:	add    BYTE PTR [eax],al
11019676:	add    BYTE PTR [esi],al
11019678:	add    BYTE PTR [eax],al
1101967a:	add    BYTE PTR [esi],al
1101967c:	add    BYTE PTR [eax],al
1101967e:	add    BYTE PTR [ecx],cl
11019680:	add    BYTE PTR [eax],al
11019682:	add    BYTE PTR [edx],dl
11019684:	add    BYTE PTR [eax],al
11019686:	add    BYTE PTR [ecx+0x0],cl
11019689:	add    BYTE PTR [eax],al
1101968b:	jmp    0x110196ad
1101968d:	and    BYTE PTR [eax],ah
1101968f:	(bad)  
11019690:	fcmovu st,st(2)
11019692:	(bad)  
11019694:	(bad)  
11019695:	(bad)  
11019696:	(bad)  
11019697:	(bad)  
11019698:	std    
11019699:	std    
1101969a:	std    
1101969b:	(bad)  
1101969c:	(bad)  
1101969e:	fcos   
110196a0:	pop    ds
110196a1:	pop    ds
110196a2:	pop    ds
110196a3:	inc    BYTE PTR [eax]
110196a5:	add    BYTE PTR [eax],al
110196a7:	jmp    0x0:0x48000000
110196ae:	add    BYTE PTR [edx],dl
110196b0:	add    BYTE PTR [eax],al
110196b2:	add    BYTE PTR [ecx],cl
110196b4:	add    BYTE PTR [eax],al
110196b6:	add    BYTE PTR [esi],al
110196b8:	add    BYTE PTR [eax],al
110196ba:	add    BYTE PTR [esi],al
110196bc:	add    BYTE PTR [eax],al
110196be:	add    BYTE PTR [esi],al
110196c0:	add    BYTE PTR [eax],al
110196c2:	add    BYTE PTR [esi],al
110196c4:	add    BYTE PTR [eax],al
110196c6:	add    BYTE PTR [esi],al
110196c8:	add    BYTE PTR [eax],al
110196ca:	add    BYTE PTR [esi],al
110196cc:	add    BYTE PTR [eax],al
110196ce:	add    BYTE PTR [esi],al
110196d0:	add    BYTE PTR [eax],al
110196d2:	add    BYTE PTR [esi],al
110196d4:	add    BYTE PTR [eax],al
110196d6:	add    BYTE PTR [esi],al
110196d8:	add    BYTE PTR [eax],al
110196da:	add    BYTE PTR ds:0x5000000,al
110196e0:	add    BYTE PTR [eax],al
110196e2:	add    BYTE PTR [eax+eax*1],al
110196e5:	add    BYTE PTR [eax],al
110196e7:	add    eax,DWORD PTR [eax]
110196e9:	add    BYTE PTR [eax],al
110196eb:	add    DWORD PTR [eax],eax
	...
1101973d:	add    BYTE PTR [eax],al
1101973f:	add    DWORD PTR [eax],eax
11019741:	add    BYTE PTR [eax],al
11019743:	add    al,0x0
11019745:	add    BYTE PTR [eax],al
11019747:	or     eax,0x45000000
1101974c:	add    BYTE PTR [eax],al
1101974e:	add    ch,ch
11019750:	and    BYTE PTR [eax],ah
11019752:	and    dh,bh
11019754:	fcmovnu st,st(3)
11019756:	(bad)  
11019758:	fcmovu st,st(2)
1101975a:	(bad)  
1101975c:	pop    ds
1101975d:	pop    ds
1101975e:	pop    ds
1101975f:	inc    BYTE PTR [eax]
11019761:	add    BYTE PTR [eax],al
11019763:	in     al,dx
11019764:	add    BYTE PTR [eax],al
11019766:	add    BYTE PTR [eax+eax*1+0x0],al
1101976a:	add    BYTE PTR ds:0x4000000,cl
11019770:	add    BYTE PTR [eax],al
11019772:	add    BYTE PTR [ecx],al
	...
11019804:	add    BYTE PTR [eax],al
11019806:	add    BYTE PTR [ebx],al
11019808:	add    BYTE PTR [eax],al
1101980a:	add    BYTE PTR [eax+eax*1],cl
1101980d:	add    BYTE PTR [eax],al
1101980f:	inc    edx
11019810:	add    BYTE PTR [eax],al
11019812:	add    dl,ch
11019814:	push   ds
11019815:	push   ds
11019816:	push   ds
11019817:	(bad)  
11019818:	sbb    eax,0xfe1d1d
1101981d:	add    BYTE PTR [eax],al
1101981f:	jmp    0x52019824
11019824:	add    BYTE PTR [eax],al
11019826:	add    BYTE PTR [eax+eax*1],cl
11019829:	add    BYTE PTR [eax],al
1101982b:	add    eax,DWORD PTR [eax]
	...
110198c9:	add    BYTE PTR [eax],al
110198cb:	add    eax,DWORD PTR [eax]
110198cd:	add    BYTE PTR [eax],al
110198cf:	or     DWORD PTR [eax],eax
110198d1:	add    BYTE PTR [eax],al
110198d3:	cmp    eax,0xe9000000
110198d8:	add    BYTE PTR [eax],al
110198da:	add    al,ch
110198dc:	add    BYTE PTR [eax],al
110198de:	add    BYTE PTR [ebx],bh
110198e0:	add    BYTE PTR [eax],al
110198e2:	add    BYTE PTR [ecx],cl
110198e4:	add    BYTE PTR [eax],al
110198e6:	add    BYTE PTR [ebx],al
	...
1101998c:	add    BYTE PTR [eax],al
1101998e:	add    BYTE PTR [edx],al
11019990:	add    BYTE PTR [eax],al
11019992:	add    BYTE PTR ds:0x34000000,al
11019998:	add    BYTE PTR [eax],al
1101999a:	add    BYTE PTR [ebx],dh
1101999c:	add    BYTE PTR [eax],al
1101999e:	add    BYTE PTR ds:0x2000000,al
	...
110199f8:	(bad)  
110199f9:	inc    DWORD PTR [eax]
110199fb:	add    bh,bh
110199fd:	(bad)  
110199fe:	(bad)  
110199ff:	(bad)  
11019a00:	cld    
11019a01:	add    BYTE PTR [eax],al
11019a03:	add    BYTE PTR [eax],al
11019a05:	pop    es
11019a06:	(bad)  
11019a07:	(bad)  
11019a08:	clc    
11019a09:	add    BYTE PTR [eax],al
11019a0b:	add    BYTE PTR [eax],al
11019a0d:	add    edi,edi
11019a0f:	push   eax
11019a11:	add    BYTE PTR [eax],al
11019a13:	add    BYTE PTR [eax],al
11019a15:	add    edi,edi
11019a17:	push   eax
11019a19:	add    BYTE PTR [eax],al
11019a1b:	add    BYTE PTR [eax],al
11019a1d:	add    edi,edi
11019a1f:	push   eax
11019a21:	add    BYTE PTR [eax],al
11019a23:	add    BYTE PTR [eax],al
11019a25:	add    edi,edi
11019a27:	push   eax
11019a29:	add    BYTE PTR [eax],al
11019a2b:	add    BYTE PTR [eax],al
11019a2d:	add    edi,edi
11019a2f:	push   eax
11019a31:	add    BYTE PTR [eax],al
11019a33:	add    BYTE PTR [eax],al
11019a35:	add    edi,edi
11019a37:	push   eax
11019a39:	add    BYTE PTR [eax],al
11019a3b:	add    BYTE PTR [eax],al
11019a3d:	add    edi,edi
11019a3f:	push   eax
11019a41:	add    BYTE PTR [eax],al
11019a43:	add    BYTE PTR [eax],al
11019a45:	add    edi,edi
11019a47:	push   eax
11019a49:	add    BYTE PTR [eax],al
11019a4b:	add    BYTE PTR [eax],al
11019a4d:	add    edi,edi
11019a4f:	push   eax
11019a51:	add    BYTE PTR [eax],al
11019a53:	add    BYTE PTR [eax],al
11019a55:	add    edi,edi
11019a57:	push   eax
11019a59:	add    BYTE PTR [eax],al
11019a5b:	add    BYTE PTR [eax],al
11019a5d:	add    edi,edi
11019a5f:	jmp    eax
11019a61:	add    BYTE PTR [eax],al
11019a63:	add    BYTE PTR [eax],al
11019a65:	add    edi,edi
11019a67:	inc    eax
11019a69:	add    BYTE PTR [eax],al
11019a6b:	add    BYTE PTR [eax],al
11019a6d:	add    edi,edi
11019a6f:	inc    DWORD PTR [eax+0x0]
11019a75:	add    edi,edi
11019a77:	inc    DWORD PTR [eax]
11019a79:	add    BYTE PTR [eax],al
11019a7b:	add    BYTE PTR [eax],al
11019a7d:	add    bh,bh
11019a7f:	inc    DWORD PTR [eax]
11019a81:	add    BYTE PTR [eax],al
11019a83:	add    BYTE PTR [eax],al
11019a85:	add    bh,bh
11019a87:	inc    DWORD PTR [eax]
11019a89:	add    BYTE PTR [eax],al
11019a8b:	add    BYTE PTR [eax],al
11019a8d:	add    bh,bh
11019a8f:	inc    DWORD PTR [eax]
11019a91:	add    BYTE PTR [eax],al
11019a93:	add    BYTE PTR [eax],al
11019a95:	add    bh,bh
11019a97:	inc    DWORD PTR [eax]
11019a99:	add    BYTE PTR [eax],al
11019a9b:	add    BYTE PTR [eax],al
11019a9d:	add    bh,bh
11019a9f:	inc    DWORD PTR [eax]
11019aa1:	add    BYTE PTR [eax],al
11019aa3:	add    BYTE PTR [eax],al
11019aa5:	add    bh,bh
11019aa7:	inc    DWORD PTR [eax]
11019aa9:	add    BYTE PTR [eax],al
11019aab:	add    BYTE PTR [eax],al
11019aad:	add    bh,bh
11019aaf:	inc    DWORD PTR [eax]
11019ab1:	add    BYTE PTR [eax],al
11019ab3:	add    BYTE PTR [eax],al
11019ab5:	add    bh,bh
11019ab7:	inc    DWORD PTR [eax]
11019ab9:	add    BYTE PTR [eax],al
11019abb:	add    BYTE PTR [eax],al
11019abd:	add    bh,bh
11019abf:	inc    DWORD PTR [eax]
11019ac1:	add    BYTE PTR [eax],al
11019ac3:	add    BYTE PTR [eax],al
11019ac5:	add    bh,bh
11019ac7:	inc    DWORD PTR [eax]
11019ac9:	add    BYTE PTR [eax],al
11019acb:	add    BYTE PTR [eax],al
11019acd:	add    bh,bh
11019acf:	inc    DWORD PTR [eax+0x0]
11019ad5:	add    bh,bh
11019ad7:	inc    eax
11019ad9:	add    BYTE PTR [eax],al
11019adb:	add    BYTE PTR [eax],al
11019add:	add    edi,edi
11019adf:	jmp    eax
11019ae1:	add    BYTE PTR [eax],al
11019ae3:	add    BYTE PTR [eax],al
11019ae5:	add    edi,edi
11019ae7:	jmp    eax
11019ae9:	add    BYTE PTR [eax],al
11019aeb:	add    BYTE PTR [eax],al
11019aed:	add    edi,edi
11019aef:	push   eax
11019af1:	add    BYTE PTR [eax],al
11019af3:	add    BYTE PTR [eax],al
11019af5:	add    edi,edi
11019af7:	push   eax
11019af9:	add    BYTE PTR [eax],al
11019afb:	add    BYTE PTR [eax],al
11019afd:	add    edi,edi
11019aff:	push   eax
11019b01:	add    BYTE PTR [eax],al
11019b03:	add    BYTE PTR [eax],al
11019b05:	add    edi,edi
11019b07:	push   eax
11019b09:	add    BYTE PTR [eax],al
11019b0b:	add    BYTE PTR [eax],al
11019b0d:	add    edi,edi
11019b0f:	push   eax
11019b11:	add    BYTE PTR [eax],al
11019b13:	add    BYTE PTR [eax],al
11019b15:	add    edi,edi
11019b17:	push   eax
11019b19:	add    BYTE PTR [eax],al
11019b1b:	add    BYTE PTR [eax],al
11019b1d:	add    edi,edi
11019b1f:	push   eax
11019b21:	add    BYTE PTR [eax],al
11019b23:	add    BYTE PTR [eax],al
11019b25:	add    edi,edi
11019b27:	push   eax
11019b29:	add    BYTE PTR [eax],al
11019b2b:	add    BYTE PTR [eax],al
11019b2d:	add    edi,edi
11019b2f:	push   eax
11019b31:	add    BYTE PTR [eax],al
11019b33:	add    BYTE PTR [eax],al
11019b35:	add    edi,edi
11019b37:	push   eax
11019b39:	add    BYTE PTR [eax],al
11019b3b:	add    BYTE PTR [eax],al
11019b3d:	add    edi,edi
11019b3f:	push   eax
11019b41:	add    BYTE PTR [eax],al
11019b43:	add    BYTE PTR [eax],al
11019b45:	add    edi,edi
11019b47:	(bad)  
11019b48:	clc    
11019b49:	add    BYTE PTR [eax],al
11019b4b:	add    BYTE PTR [eax],al
11019b4d:	add    edi,edi
11019b4f:	(bad)  
11019b50:	cld    
11019b51:	add    BYTE PTR [eax],al
11019b53:	add    BYTE PTR [eax],al
11019b55:	pop    es
11019b56:	(bad)  
11019b57:	(bad)  
11019b58:	(bad)  
11019b59:	inc    DWORD PTR [eax-0xff]
11019b5f:	(bad)  
11019b60:	(bad)  
11019b61:	jmp    eax
11019b63:	pop    es
11019b64:	(bad)  
11019b65:	(bad)  
11019b66:	(bad)  
11019b67:	(bad)  
11019b68:	(bad)  
11019b69:	push   eax
11019b6b:	ud0    edi,edi
11019b6e:	(bad)  
11019b6f:	(bad)  
11019b70:	(bad)  
11019b71:	(bad)  
11019b72:	clc    
11019b73:	pop    ds
11019b74:	(bad)  
11019b75:	(bad)  
11019b76:	(bad)  
11019b77:	jmp    FWORD PTR [eax]
11019b79:	add    BYTE PTR [eax],al
11019b7b:	add    BYTE PTR [eax],ch
11019b7d:	add    BYTE PTR [eax],al
11019b7f:	add    BYTE PTR [eax+0x0],dl
11019b82:	add    BYTE PTR [eax],al
11019b84:	add    DWORD PTR [eax],eax
11019b86:	and    BYTE PTR [eax],al
	...
11019bbc:	add    BYTE PTR [eax],al
11019bbe:	add    BYTE PTR [ecx],al
11019bc0:	add    BYTE PTR [eax],al
11019bc2:	add    BYTE PTR [ecx],al
11019bc4:	add    BYTE PTR [eax],al
11019bc6:	add    BYTE PTR [ecx],al
11019bc8:	add    BYTE PTR [eax],al
11019bca:	add    BYTE PTR [ecx],al
11019bcc:	add    BYTE PTR [eax],al
11019bce:	add    BYTE PTR [ecx],al
11019bd0:	add    BYTE PTR [eax],al
11019bd2:	add    BYTE PTR [ecx],al
11019bd4:	add    BYTE PTR [eax],al
11019bd6:	add    BYTE PTR [ecx],al
11019bd8:	add    BYTE PTR [eax],al
11019bda:	add    BYTE PTR [esi],al
11019bdc:	add    BYTE PTR [eax],al
11019bde:	add    BYTE PTR [eax+eax*1],dl
11019be1:	add    BYTE PTR [eax],al
11019be3:	xor    DWORD PTR [eax],eax
11019be5:	add    BYTE PTR [eax],al
11019be7:	pusha  
11019be8:	add    BYTE PTR [eax],al
11019bea:	add    BYTE PTR [ebx-0x3f000000],dl
11019bf0:	add    BYTE PTR [eax],al
11019bf2:	add    cl,al
11019bf4:	add    BYTE PTR [eax],al
11019bf6:	add    BYTE PTR [ebx+0x5f000000],dl
11019bfc:	add    BYTE PTR [eax],al
11019bfe:	add    BYTE PTR [ecx],dh
11019c00:	add    BYTE PTR [eax],al
11019c02:	add    BYTE PTR [eax+eax*1],dl
11019c05:	add    BYTE PTR [eax],al
11019c07:	push   es
11019c08:	add    BYTE PTR [eax],al
11019c0a:	add    BYTE PTR [ecx],al
11019c0c:	add    BYTE PTR [eax],al
11019c0e:	add    BYTE PTR [ecx],al
11019c10:	add    BYTE PTR [eax],al
11019c12:	add    BYTE PTR [ecx],al
11019c14:	add    BYTE PTR [eax],al
11019c16:	add    BYTE PTR [ecx],al
11019c18:	add    BYTE PTR [eax],al
11019c1a:	add    BYTE PTR [ecx],al
11019c1c:	add    BYTE PTR [eax],al
11019c1e:	add    BYTE PTR [ecx],al
11019c20:	add    BYTE PTR [eax],al
11019c22:	add    BYTE PTR [ecx],al
11019c24:	add    BYTE PTR [eax],al
11019c26:	add    BYTE PTR [ecx],al
11019c28:	add    BYTE PTR [eax],al
11019c2a:	add    BYTE PTR [ecx],al
11019c2c:	add    BYTE PTR [eax],al
11019c2e:	add    BYTE PTR [ecx],al
	...
11019c50:	add    BYTE PTR [eax],al
11019c52:	add    BYTE PTR [ecx],al
11019c54:	add    BYTE PTR [eax],al
11019c56:	add    BYTE PTR [ebx],al
11019c58:	add    BYTE PTR [eax],al
11019c5a:	add    BYTE PTR [esi],al
11019c5c:	add    BYTE PTR [eax],al
11019c5e:	add    BYTE PTR [eax],cl
11019c60:	add    BYTE PTR [eax],al
11019c62:	add    BYTE PTR [ecx],cl
11019c64:	add    BYTE PTR [eax],al
11019c66:	add    BYTE PTR [edx],cl
11019c68:	add    BYTE PTR [eax],al
11019c6a:	add    BYTE PTR [edx],cl
11019c6c:	add    BYTE PTR [eax],al
11019c6e:	add    BYTE PTR [edx],cl
11019c70:	add    BYTE PTR [eax],al
11019c72:	add    BYTE PTR [edx],cl
11019c74:	add    BYTE PTR [eax],al
11019c76:	add    BYTE PTR [edi],cl
11019c78:	add    BYTE PTR [eax],al
11019c7a:	add    BYTE PTR [eax+eax*1],bl
11019c7d:	add    BYTE PTR [eax],al
11019c7f:	cmp    DWORD PTR [eax],eax
11019c81:	add    BYTE PTR [eax],al
11019c83:	add    BYTE PTR gs:[eax],al
11019c86:	add    BYTE PTR [edx-0x30000000],bl
11019c8c:	add    BYTE PTR [eax],al
11019c8e:	add    ah,bh
11019c90:	add    BYTE PTR [eax],al
11019c92:	add    ah,bh
11019c94:	add    BYTE PTR [eax],al
11019c96:	add    al,dl
11019c98:	add    BYTE PTR [eax],al
11019c9a:	add    BYTE PTR [edx+0x65000000],bl
11019ca0:	add    BYTE PTR [eax],al
11019ca2:	add    BYTE PTR [eax],bh
11019ca4:	add    BYTE PTR [eax],al
11019ca6:	add    BYTE PTR [eax+eax*1],bl
11019ca9:	add    BYTE PTR [eax],al
11019cab:	sldt   WORD PTR [eax]
11019cae:	add    BYTE PTR [edx],cl
11019cb0:	add    BYTE PTR [eax],al
11019cb2:	add    BYTE PTR [edx],cl
11019cb4:	add    BYTE PTR [eax],al
11019cb6:	add    BYTE PTR [edx],cl
11019cb8:	add    BYTE PTR [eax],al
11019cba:	add    BYTE PTR [edx],cl
11019cbc:	add    BYTE PTR [eax],al
11019cbe:	add    BYTE PTR [edx],cl
11019cc0:	add    BYTE PTR [eax],al
11019cc2:	add    BYTE PTR [edx],cl
11019cc4:	add    BYTE PTR [eax],al
11019cc6:	add    BYTE PTR [ecx],cl
11019cc8:	add    BYTE PTR [eax],al
11019cca:	add    BYTE PTR [ecx],cl
11019ccc:	add    BYTE PTR [eax],al
11019cce:	add    BYTE PTR [edi],al
11019cd0:	add    BYTE PTR [eax],al
11019cd2:	add    BYTE PTR [eax+eax*1],al
11019cd5:	add    BYTE PTR [eax],al
11019cd7:	add    al,BYTE PTR [eax]
	...
11019cf1:	add    BYTE PTR [eax],al
11019cf3:	add    al,0x0
11019cf5:	add    BYTE PTR [eax],al
11019cf7:	or     al,0x0
11019cf9:	add    BYTE PTR [eax],al
11019cfb:	sbb    BYTE PTR [eax],al
11019cfd:	add    BYTE PTR [eax],al
11019cff:	and    eax,DWORD PTR [eax]
11019d01:	add    BYTE PTR [eax],al
11019d03:	sub    BYTE PTR [eax],al
11019d05:	add    BYTE PTR [eax],al
11019d07:	sub    al,BYTE PTR [eax]
11019d09:	add    BYTE PTR [eax],al
11019d0b:	sub    al,BYTE PTR [eax]
11019d0d:	add    BYTE PTR [eax],al
11019d0f:	sub    al,BYTE PTR [eax]
11019d11:	add    BYTE PTR [eax],al
11019d13:	add    BYTE PTR cs:[eax],al
11019d16:	add    BYTE PTR [edx],bh
11019d18:	add    BYTE PTR [eax],al
11019d1a:	add    BYTE PTR [edx+0x0],dl
11019d1d:	add    BYTE PTR [eax],al
11019d1f:	jns    0x11019d21
11019d21:	add    BYTE PTR [eax],al
11019d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
11019d24:	add    BYTE PTR [eax],al
11019d26:	add    dh,dl
11019d28:	add    BYTE PTR [eax],al
11019d2a:	add    ah,bh
11019d2c:	addr16 addr16 jmp DWORD PTR [di+0x65]
11019d32:	inc    DWORD PTR gs:[eax]
11019d35:	add    BYTE PTR [eax],al
11019d37:	cld    
11019d38:	add    BYTE PTR [eax],al
11019d3a:	add    dh,dl
11019d3c:	add    BYTE PTR [eax],al
11019d3e:	add    BYTE PTR [esi+0x78000000],ah
11019d44:	add    BYTE PTR [eax],al
11019d46:	add    BYTE PTR [edx+0x0],dl
11019d49:	add    BYTE PTR [eax],al
11019d4b:	cmp    DWORD PTR [eax],eax
11019d4d:	add    BYTE PTR [eax],al
11019d4f:	add    BYTE PTR cs:[eax],al
11019d52:	add    BYTE PTR [edx],ch
11019d54:	add    BYTE PTR [eax],al
11019d56:	add    BYTE PTR [edx],ch
11019d58:	add    BYTE PTR [eax],al
11019d5a:	add    BYTE PTR [edx],ch
11019d5c:	add    BYTE PTR [eax],al
11019d5e:	add    BYTE PTR [edx],ch
11019d60:	add    BYTE PTR [eax],al
11019d62:	add    BYTE PTR [edx],ch
11019d64:	add    BYTE PTR [eax],al
11019d66:	add    BYTE PTR [ecx],ch
11019d68:	add    BYTE PTR [eax],al
11019d6a:	add    BYTE PTR [esi],ah
11019d6c:	add    BYTE PTR [eax],al
11019d6e:	add    BYTE PTR [esi],bl
11019d70:	add    BYTE PTR [eax],al
11019d72:	add    BYTE PTR [edx],dl
11019d74:	add    BYTE PTR [eax],al
11019d76:	add    BYTE PTR [edi],al
11019d78:	add    BYTE PTR [eax],al
11019d7a:	add    BYTE PTR [edx],al
	...
11019d8c:	add    BYTE PTR [eax],al
11019d8e:	add    BYTE PTR [ecx],al
11019d90:	add    BYTE PTR [eax],al
11019d92:	add    BYTE PTR [ecx],cl
11019d94:	add    BYTE PTR [eax],al
11019d96:	add    BYTE PTR [esi],bl
11019d98:	add    BYTE PTR [eax],al
11019d9a:	add    BYTE PTR [esi],bh
11019d9c:	add    BYTE PTR [eax],al
11019d9e:	add    BYTE PTR [edx+0x0],bl
11019da1:	add    BYTE PTR [eax],al
11019da3:	push   0x6b000000
11019da8:	add    BYTE PTR [eax],al
11019daa:	add    BYTE PTR [eax+eax*1+0x0],ch
11019dae:	add    BYTE PTR [esi+0x0],ch
11019db1:	add    BYTE PTR [eax],al
11019db3:	jbe    0x11019db5
11019db5:	add    BYTE PTR [eax],al
11019db7:	xchg   DWORD PTR [eax],eax
11019db9:	add    BYTE PTR [eax],al
11019dbb:	mov    eax,ds:0xc1000000
11019dc0:	add    BYTE PTR [eax],al
11019dc2:	add    cl,ah
11019dc4:	add    BYTE PTR [eax],al
11019dc6:	add    ch,bh
11019dc8:	push   0xfbff6868
11019dcd:	sti    
11019dce:	sti    
11019dcf:	(bad)  
11019dd0:	cli    
11019dd1:	cli    
11019dd2:	cli    
11019dd3:	jmp    DWORD PTR [ebp+0x65]
11019dd6:	inc    DWORD PTR gs:[eax]
11019dd9:	add    BYTE PTR [eax],al
11019ddb:	std    
11019ddc:	add    BYTE PTR [eax],al
11019dde:	add    cl,ah
11019de0:	add    BYTE PTR [eax],al
11019de2:	add    cl,al
11019de4:	add    BYTE PTR [eax],al
11019de6:	add    BYTE PTR [ecx-0x79000000],ah
11019dec:	add    BYTE PTR [eax],al
11019dee:	add    BYTE PTR [esi+0x0],dh
11019df1:	add    BYTE PTR [eax],al
11019df3:	outs   dx,BYTE PTR ds:[esi]
11019df4:	add    BYTE PTR [eax],al
11019df6:	add    BYTE PTR [eax+eax*1+0x0],ch
11019dfa:	add    BYTE PTR [eax+eax*1+0x0],ch
11019dfe:	add    BYTE PTR [eax+eax*1+0x0],ch
11019e02:	add    BYTE PTR [eax+eax*1+0x0],ch
11019e06:	add    BYTE PTR [edx+0x0],ch
11019e09:	add    BYTE PTR [eax],al
11019e0b:	arpl   WORD PTR [eax],ax
11019e0d:	add    BYTE PTR [eax],al
11019e0f:	dec    esi
11019e10:	add    BYTE PTR [eax],al
11019e12:	add    BYTE PTR [esi],ch
11019e14:	add    BYTE PTR [eax],al
11019e16:	add    BYTE PTR [edx],dl
11019e18:	add    BYTE PTR [eax],al
11019e1a:	add    BYTE PTR [eax+eax*1],al
	...
11019e2d:	add    BYTE PTR [eax],al
11019e2f:	add    eax,DWORD PTR [eax]
11019e31:	add    BYTE PTR [eax],al
11019e33:	adc    BYTE PTR [eax],al
11019e35:	add    BYTE PTR [eax],al
11019e37:	xor    eax,DWORD PTR [eax]
11019e39:	add    BYTE PTR [eax],al
11019e3b:	push   0x0
11019e3d:	add    BYTE PTR [eax],al
11019e3f:	call   0x0:0xb1000000
11019e46:	add    BYTE PTR [edi-0x47000000],dh
11019e4c:	add    BYTE PTR [eax],al
11019e4e:	add    BYTE PTR [ebp-0x3c000000],bh
11019e54:	add    BYTE PTR [eax],al
11019e56:	add    cl,dl
11019e58:	add    BYTE PTR [eax],al
11019e5a:	add    al,ah
11019e5c:	add    BYTE PTR [eax],al
11019e5e:	add    al,dh
11019e60:	add    BYTE PTR [eax],al
11019e62:	add    dh,bh
11019e64:	addr16 addr16 addr16 (bad) 
11019e68:	sti    
11019e69:	sti    
11019e6a:	sti    
11019e6b:	(bad)  
11019e6c:	std    
11019e6d:	std    
11019e6e:	std    
11019e6f:	(bad)  
11019e70:	std    
11019e71:	std    
11019e72:	std    
11019e73:	(bad)  
11019e74:	sti    
11019e75:	sti    
11019e76:	sti    
11019e77:	jmp    DWORD PTR [ebp+0x65]
11019e7a:	inc    DWORD PTR gs:[eax]
11019e7d:	add    BYTE PTR [eax],al
11019e7f:	inc    BYTE PTR [eax]
11019e81:	add    BYTE PTR [eax],al
11019e83:	lock add BYTE PTR [eax],al
11019e86:	add    al,ah
11019e88:	add    BYTE PTR [eax],al
11019e8a:	add    cl,dl
11019e8c:	add    BYTE PTR [eax],al
11019e8e:	add    ah,al
11019e90:	add    BYTE PTR [eax],al
11019e92:	add    BYTE PTR [eax+eax*1+0xb90000],bh
11019e99:	add    BYTE PTR [eax],al
11019e9b:	mov    eax,0xb8000000
11019ea0:	add    BYTE PTR [eax],al
11019ea2:	add    BYTE PTR [eax-0x4b000000],bh
11019ea8:	add    BYTE PTR [eax],al
11019eaa:	add    BYTE PTR [eax-0x7c000000],ch
11019eb0:	add    BYTE PTR [eax],al
11019eb2:	add    BYTE PTR [esi+0x0],cl
11019eb5:	add    BYTE PTR [eax],al
11019eb7:	push   ds
11019eb8:	add    BYTE PTR [eax],al
11019eba:	add    BYTE PTR [edi],al
11019ebc:	add    BYTE PTR [eax],al
11019ebe:	add    BYTE PTR [ecx],al
	...
11019ecc:	add    BYTE PTR [eax],al
11019ece:	add    BYTE PTR [ebx],al
11019ed0:	add    BYTE PTR [eax],al
11019ed2:	add    BYTE PTR [eax+eax*1],dl
11019ed5:	add    BYTE PTR [eax],al
11019ed7:	inc    DWORD PTR [eax]
11019ed9:	add    BYTE PTR [eax],al
11019edb:	inc    DWORD PTR [eax]
11019edd:	add    BYTE PTR [eax],al
11019edf:	inc    DWORD PTR [eax]
11019ee1:	add    BYTE PTR [eax],al
11019ee3:	inc    DWORD PTR [eax]
11019ee5:	add    BYTE PTR [eax],al
11019ee7:	inc    DWORD PTR [eax]
11019ee9:	add    BYTE PTR [eax],al
11019eeb:	inc    DWORD PTR [eax]
11019eed:	add    BYTE PTR [eax],al
11019eef:	inc    DWORD PTR [eax]
11019ef1:	add    BYTE PTR [eax],al
11019ef3:	inc    DWORD PTR [eax]
11019ef5:	add    BYTE PTR [eax],al
11019ef7:	inc    DWORD PTR [eax]
11019ef9:	add    BYTE PTR [eax],al
11019efb:	inc    DWORD PTR [eax]
11019efd:	add    BYTE PTR [eax],al
11019eff:	jmp    FWORD PTR [eax+0x68]
11019f02:	push   0xfbfbfbff
11019f07:	(bad)  
11019f08:	std    
11019f09:	std    
11019f0a:	std    
11019f0b:	(bad)  
11019f0c:	std    
11019f0d:	std    
11019f0e:	std    
11019f0f:	(bad)  
11019f10:	std    
11019f11:	std    
11019f12:	std    
11019f13:	(bad)  
11019f14:	std    
11019f15:	std    
11019f16:	std    
11019f17:	(bad)  
11019f18:	sti    
11019f19:	sti    
11019f1a:	sti    
11019f1b:	jmp    DWORD PTR [ebp+0x65]
11019f1e:	inc    DWORD PTR gs:[eax]
11019f21:	add    BYTE PTR [eax],al
11019f23:	inc    DWORD PTR [eax]
11019f25:	add    BYTE PTR [eax],al
11019f27:	inc    DWORD PTR [eax]
11019f29:	add    BYTE PTR [eax],al
11019f2b:	inc    DWORD PTR [eax]
11019f2d:	add    BYTE PTR [eax],al
11019f2f:	inc    DWORD PTR [eax]
11019f31:	add    BYTE PTR [eax],al
11019f33:	inc    DWORD PTR [eax]
11019f35:	add    BYTE PTR [eax],al
11019f37:	inc    DWORD PTR [eax]
11019f39:	add    BYTE PTR [eax],al
11019f3b:	inc    DWORD PTR [eax]
11019f3d:	add    BYTE PTR [eax],al
11019f3f:	inc    DWORD PTR [eax]
11019f41:	add    BYTE PTR [eax],al
11019f43:	inc    DWORD PTR [eax]
11019f45:	add    BYTE PTR [eax],al
11019f47:	inc    DWORD PTR [eax]
11019f49:	add    BYTE PTR [eax],al
11019f4b:	inc    DWORD PTR [eax]
11019f4d:	add    BYTE PTR [eax],al
11019f4f:	test   al,0x0
11019f51:	add    BYTE PTR [eax],al
11019f53:	arpl   WORD PTR [eax],ax
11019f55:	add    BYTE PTR [eax],al
11019f57:	add    BYTE PTR es:[eax],al
11019f5a:	add    BYTE PTR [ecx],cl
11019f5c:	add    BYTE PTR [eax],al
11019f5e:	add    BYTE PTR [ecx],al
	...
11019f6c:	add    BYTE PTR [eax],al
11019f6e:	add    BYTE PTR [ebx],al
11019f70:	add    BYTE PTR [eax],al
11019f72:	add    BYTE PTR ds:0xff000000,dl
11019f78:	mov    DWORD PTR [ebp+0x33],ecx
11019f7b:	push   DWORD PTR [esi-0x4d00bb9a]
11019f81:	fs inc edx
11019f83:	jmp    DWORD PTR [edi-0x6f00c1a2]
11019f89:	push   ecx
11019f8a:	xor    eax,0x283d6dff
11019f8f:	inc    DWORD PTR [ebp+0x27]
11019f92:	sbb    edi,edi
11019f94:	sbb    al,0x10
11019f96:	or     bh,bh
11019f98:	add    BYTE PTR [eax],al
11019f9a:	add    bh,bh
11019f9c:	push   0xfbff6868
11019fa1:	sti    
11019fa2:	cli    
11019fa3:	(bad)  
11019fa4:	(bad)  
11019fa5:	(bad)  
11019fa6:	(bad)  
11019fa7:	(bad)  
11019fa8:	std    
11019fa9:	std    
11019faa:	std    
11019fab:	(bad)  
11019fac:	(bad)  
11019fad:	(bad)  
11019fae:	(bad)  
11019faf:	(bad)  
11019fb0:	std    
11019fb1:	std    
11019fb2:	std    
11019fb3:	(bad)  
11019fb4:	(bad)  
11019fb5:	(bad)  
11019fb6:	(bad)  
11019fb7:	(bad)  
11019fb8:	(bad)  
11019fb9:	(bad)  
11019fba:	(bad)  
11019fbb:	(bad)  
11019fbc:	sti    
11019fbd:	sti    
11019fbe:	cli    
11019fbf:	jmp    DWORD PTR [ebp+0x65]
11019fc2:	inc    DWORD PTR gs:[eax]
11019fc5:	add    BYTE PTR [eax],al
11019fc7:	call   FWORD PTR [edi+ecx*1]
11019fca:	or     bh,bh
11019fcc:	inc    ebp
11019fcd:	daa    
11019fce:	sbb    edi,edi
11019fd0:	ins    DWORD PTR es:[edi],dx
11019fd1:	cmp    eax,0x5190ff28
11019fd6:	xor    eax,0x3e5ea7ff
11019fdb:	push   DWORD PTR [edx-0x4900bd9c]
11019fe1:	inc    sp
11019fe3:	dec    DWORD PTR [ecx+0xff334d]
11019fe9:	add    BYTE PTR [eax],al
11019feb:	inc    DWORD PTR [eax]
11019fed:	add    BYTE PTR [eax],al
11019fef:	mov    ch,0x0
11019ff1:	add    BYTE PTR [eax],al
11019ff3:	push   0x0
11019ff5:	add    BYTE PTR [eax],al
11019ff7:	sub    DWORD PTR [eax],eax
11019ff9:	add    BYTE PTR [eax],al
11019ffb:	or     al,BYTE PTR [eax]
11019ffd:	add    BYTE PTR [eax],al
11019fff:	add    DWORD PTR [eax],eax
	...
1101a00d:	add    BYTE PTR [eax],al
1101a00f:	add    eax,DWORD PTR [eax]
1101a011:	add    BYTE PTR [eax],al
1101a013:	push   ss
1101a014:	add    BYTE PTR [eax],al
1101a016:	add    bh,bh
1101a018:	mov    dh,0x66
1101a01a:	inc    esp
1101a01b:	(bad)  
1101a01c:	out    dx,al
1101a01d:	xchg   DWORD PTR [eax-0x1],ebx
1101a020:	loope  0x1101a0a1
1101a022:	push   ebx
1101a023:	inc    ebp
1101a025:	outs   dx,DWORD PTR ds:[esi]
1101a026:	dec    ecx
1101a027:	call   FWORD PTR [eax+0x63ff3856]
1101a02d:	cmp    BYTE PTR [edi+edi*8],ah
1101a030:	sub    eax,0x2ff1019
1101a035:	add    DWORD PTR [ecx],eax
1101a037:	jmp    DWORD PTR [edi+0x67]
1101a03a:	addr16 (bad) 
1101a03c:	sti    
1101a03d:	sti    
1101a03e:	sti    
1101a03f:	(bad)  
1101a040:	(bad)  
1101a041:	(bad)  
1101a042:	std    
1101a043:	(bad)  
1101a044:	(bad)  
1101a045:	(bad)  
1101a046:	std    
1101a047:	(bad)  
1101a048:	(bad)  
1101a049:	(bad)  
1101a04a:	std    
1101a04b:	(bad)  
1101a04c:	(bad)  
1101a04d:	(bad)  
1101a04e:	std    
1101a04f:	(bad)  
1101a050:	std    
1101a051:	std    
1101a052:	std    
1101a053:	(bad)  
1101a054:	(bad)  
1101a055:	(bad)  
1101a056:	(bad)  
1101a057:	(bad)  
1101a058:	(bad)  
1101a059:	(bad)  
1101a05a:	(bad)  
1101a05b:	(bad)  
1101a05c:	(bad)  
1101a05d:	(bad)  
1101a05e:	std    
1101a05f:	(bad)  
1101a060:	sti    
1101a061:	sti    
1101a062:	sti    
1101a063:	jmp    DWORD PTR [ebp+0x65]
1101a066:	inc    DWORD PTR gs:[edx]
1101a069:	add    DWORD PTR [ecx],eax
1101a06b:	jmp    FWORD PTR ds:0x63ff1019
1101a071:	cmp    BYTE PTR [edi+edi*8],ah
1101a074:	cwde   
1101a075:	push   esi
1101a076:	cmp    bh,bh
1101a078:	lds    ebp,FWORD PTR [edi+0x49]
1101a07b:	jmp    ecx
1101a07d:	jg     0x1101a0d2
1101a07f:	(bad)  
1101a080:	out    dx,al
1101a081:	xchg   BYTE PTR [eax-0x1],bl
1101a084:	mov    dh,0x66
1101a086:	inc    esp
1101a087:	inc    DWORD PTR [eax]
1101a089:	add    BYTE PTR [eax],al
1101a08b:	inc    DWORD PTR [eax]
1101a08d:	add    BYTE PTR [eax],al
1101a08f:	mov    eax,0x6c000000
1101a094:	add    BYTE PTR [eax],al
1101a096:	add    BYTE PTR [edx],ch
1101a098:	add    BYTE PTR [eax],al
1101a09a:	add    BYTE PTR [edx],cl
1101a09c:	add    BYTE PTR [eax],al
1101a09e:	add    BYTE PTR [ecx],al
	...
1101a0ac:	add    BYTE PTR [eax],al
1101a0ae:	add    BYTE PTR [ebx],al
1101a0b0:	add    BYTE PTR [eax],al
1101a0b2:	add    BYTE PTR [esi],dl
1101a0b4:	add    BYTE PTR [eax],al
1101a0b6:	add    bh,bh
1101a0b8:	mov    dl,0x64
1101a0ba:	inc    edx
1101a0bb:	jmp    ecx
1101a0bd:	jg     0x1101a112
1101a0bf:	inc    ebp
1101a0c1:	outs   dx,DWORD PTR ds:[esi]
1101a0c2:	dec    ecx
1101a0c3:	call   FWORD PTR [eax+0x63ff3856]
1101a0c9:	cmp    BYTE PTR [edi+edi*8],ah
1101a0cc:	sub    eax,0x2ff1019
1101a0d1:	add    DWORD PTR [ecx],eax
1101a0d3:	jmp    FWORD PTR [eax+0x68]
1101a0d6:	push   0xfbfbfbff
1101a0db:	(bad)  
1101a0dc:	(bad)  
1101a0dd:	(bad)  
1101a0de:	std    
1101a0df:	(bad)  
1101a0e0:	(bad)  
1101a0e1:	(bad)  
1101a0e2:	(bad)  
1101a0e3:	(bad)  
1101a0e4:	(bad)  
1101a0e5:	(bad)  
1101a0e6:	std    
1101a0e7:	(bad)  
1101a0e8:	(bad)  
1101a0e9:	(bad)  
1101a0ea:	std    
1101a0eb:	(bad)  
1101a0ec:	(bad)  
1101a0ed:	(bad)  
1101a0ee:	std    
1101a0ef:	(bad)  
1101a0f0:	std    
1101a0f1:	std    
1101a0f2:	std    
1101a0f3:	(bad)  
1101a0f4:	(bad)  
1101a0f5:	(bad)  
1101a0f6:	(bad)  
1101a0f7:	(bad)  
1101a0f8:	(bad)  
1101a0f9:	(bad)  
1101a0fa:	(bad)  
1101a0fb:	(bad)  
1101a0fc:	(bad)  
1101a0fd:	(bad)  
1101a0fe:	(bad)  
1101a0ff:	(bad)  
1101a100:	std    
1101a101:	std    
1101a102:	std    
1101a103:	(bad)  
1101a104:	sti    
1101a105:	sti    
1101a106:	sti    
1101a107:	jmp    DWORD PTR [ebp+0x65]
1101a10a:	inc    DWORD PTR gs:[edx]
1101a10d:	add    DWORD PTR [ecx],eax
1101a10f:	jmp    FWORD PTR [esi]
1101a111:	sbb    DWORD PTR [eax],edx
1101a113:	jmp    DWORD PTR [ebx+0x38]
1101a116:	and    al,0xff
1101a118:	cdq    
1101a119:	push   esi
1101a11a:	cmp    bh,bh
1101a11c:	lds    ebp,FWORD PTR [edi+0x49]
1101a11f:	jmp    ecx
1101a121:	jg     0x1101a177
1101a123:	push   DWORD PTR [edx+0xff4264]
1101a129:	add    BYTE PTR [eax],al
1101a12b:	inc    DWORD PTR [eax]
1101a12d:	add    BYTE PTR [eax],al
1101a12f:	mov    eax,0x6c000000
1101a134:	add    BYTE PTR [eax],al
1101a136:	add    BYTE PTR [edx],ch
1101a138:	add    BYTE PTR [eax],al
1101a13a:	add    BYTE PTR [edx],cl
1101a13c:	add    BYTE PTR [eax],al
1101a13e:	add    BYTE PTR [ecx],al
	...
1101a14c:	add    BYTE PTR [eax],al
1101a14e:	add    BYTE PTR [ebx],al
1101a150:	add    BYTE PTR [eax],al
1101a152:	add    BYTE PTR [esi],dl
1101a154:	add    BYTE PTR [eax],al
1101a156:	add    bh,bh
1101a158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1101a159:	pop    esi
1101a15a:	ds inc ebp
1101a15d:	outs   dx,DWORD PTR ds:[esi]
1101a15e:	dec    ecx
1101a15f:	call   FWORD PTR [eax+0x64ff3856]
1101a165:	cmp    BYTE PTR [edi+edi*8],ah
1101a168:	sub    eax,0x2ff1019
1101a16d:	add    DWORD PTR [eax],eax
1101a16f:	jmp    DWORD PTR [edi+0x67]
1101a172:	addr16 (bad) 
1101a174:	sti    
1101a175:	sti    
1101a176:	sti    
1101a177:	(bad)  
1101a178:	std    
1101a179:	std    
1101a17a:	std    
1101a17b:	(bad)  
1101a17c:	std    
1101a17d:	std    
1101a17e:	std    
1101a17f:	(bad)  
1101a180:	(bad)  
1101a181:	(bad)  
1101a182:	std    
1101a183:	(bad)  
1101a184:	(bad)  
1101a185:	(bad)  
1101a186:	std    
1101a187:	(bad)  
1101a188:	std    
1101a189:	std    
1101a18a:	std    
1101a18b:	(bad)  
1101a18c:	std    
1101a18d:	std    
1101a18e:	std    
1101a18f:	(bad)  
1101a190:	std    
1101a191:	std    
1101a192:	std    
1101a193:	(bad)  
1101a194:	std    
1101a195:	std    
1101a196:	std    
1101a197:	(bad)  
1101a198:	std    
1101a199:	std    
1101a19a:	std    
1101a19b:	(bad)  
1101a19c:	(bad)  
1101a19d:	(bad)  
1101a19e:	std    
1101a19f:	(bad)  
1101a1a0:	std    
1101a1a1:	std    
1101a1a2:	std    
1101a1a3:	(bad)  
1101a1a4:	std    
1101a1a5:	std    
1101a1a6:	std    
1101a1a7:	(bad)  
1101a1a8:	cli    
1101a1a9:	cli    
1101a1aa:	cli    
1101a1ab:	jmp    DWORD PTR [ebp+0x65]
1101a1ae:	inc    DWORD PTR gs:[edx]
1101a1b1:	add    DWORD PTR [ecx],eax
1101a1b3:	jmp    FWORD PTR [esi]
1101a1b5:	sbb    dl,BYTE PTR [eax]
1101a1b7:	jmp    DWORD PTR [eax+edi*1+0x25]
1101a1bb:	call   FWORD PTR [ecx-0x3a00c7aa]
1101a1c1:	outs   dx,DWORD PTR ds:[esi]
1101a1c2:	dec    ecx
1101a1c3:	jmp    DWORD PTR [edi+0xff3e5e]
1101a1c9:	add    BYTE PTR [eax],al
1101a1cb:	inc    DWORD PTR [eax]
1101a1cd:	add    BYTE PTR [eax],al
1101a1cf:	mov    eax,0x6c000000
1101a1d4:	add    BYTE PTR [eax],al
1101a1d6:	add    BYTE PTR [edx],ch
1101a1d8:	add    BYTE PTR [eax],al
1101a1da:	add    BYTE PTR [edx],cl
1101a1dc:	add    BYTE PTR [eax],al
1101a1de:	add    BYTE PTR [ecx],al
	...
1101a1ec:	add    BYTE PTR [eax],al
1101a1ee:	add    BYTE PTR [eax+eax*1],al
1101a1f1:	add    BYTE PTR [eax],al
1101a1f3:	sbb    al,BYTE PTR [eax]
1101a1f5:	add    BYTE PTR [eax],al
1101a1f7:	call   DWORD PTR [eax-0x6700caaf]
1101a1fd:	push   esi
1101a1fe:	cmp    bh,bh
1101a200:	arpl   WORD PTR [edi],si
1101a202:	and    al,0xff
1101a204:	sub    eax,0x2ff1019
1101a209:	add    DWORD PTR [ecx],eax
1101a20b:	jmp    FWORD PTR [eax+0x68]
1101a20e:	push   0xfbfbfbff
1101a213:	(bad)  
1101a214:	(bad)  
1101a215:	(bad)  
1101a216:	(bad)  
1101a217:	(bad)  
1101a218:	(bad)  
1101a219:	(bad)  
1101a21a:	std    
1101a21b:	(bad)  
1101a21c:	std    
1101a21d:	cli    
1101a21e:	clc    
1101a21f:	push   esp
1101a221:	into   
1101a222:	sar    bh,0xe9
1101a225:	lahf   
1101a226:	test   bh,bh
1101a228:	fistp  QWORD PTR [esi+0x5a]
1101a22b:	(bad)  
1101a22c:	fsubr  DWORD PTR [ebx+0x44]
1101a22f:	call   ebp
1101a231:	addr16 inc ecx
1101a233:	call   edi
1101a235:	jae    0x1101a289
1101a237:	(bad)  
1101a238:	ficom  WORD PTR [edx-0x3a120087]
1101a23e:	mov    eax,0xf7f9fcff
1101a243:	(bad)  
1101a244:	(bad)  
1101a245:	(bad)  
1101a246:	std    
1101a247:	(bad)  
1101a248:	std    
1101a249:	std    
1101a24a:	std    
1101a24b:	(bad)  
1101a24c:	sti    
1101a24d:	sti    
1101a24e:	sti    
1101a24f:	jmp    DWORD PTR [ebp+0x65]
1101a252:	inc    DWORD PTR gs:[edx]
1101a255:	add    DWORD PTR [ecx],eax
1101a257:	jmp    FWORD PTR ds:0x63ff1019
1101a25d:	aaa    
1101a25e:	and    al,0xff
1101a260:	cwde   
1101a261:	push   esi
1101a262:	cmp    bh,bh
1101a264:	nop
1101a265:	push   ecx
1101a266:	xor    eax,0xff
1101a26b:	inc    DWORD PTR [eax]
1101a26d:	add    BYTE PTR [eax],al
1101a26f:	mov    ecx,0x6c000000
1101a274:	add    BYTE PTR [eax],al
1101a276:	add    BYTE PTR [edx],ch
1101a278:	add    BYTE PTR [eax],al
1101a27a:	add    BYTE PTR [edx],cl
1101a27c:	add    BYTE PTR [eax],al
1101a27e:	add    BYTE PTR [ecx],al
	...
1101a288:	add    BYTE PTR [eax],al
1101a28a:	add    BYTE PTR [ecx],al
1101a28c:	add    BYTE PTR [eax],al
1101a28e:	add    BYTE PTR [ecx],cl
1101a290:	add    BYTE PTR [eax],al
1101a292:	add    BYTE PTR [edi],ah
1101a294:	add    BYTE PTR [eax],al
1101a296:	add    bh,bh
1101a298:	ins    DWORD PTR es:[edi],dx
1101a299:	cmp    eax,0x3863ff28
1101a29e:	and    al,0xff
1101a2a0:	sub    eax,0x2ff1019
1101a2a5:	add    DWORD PTR [ecx],eax
1101a2a7:	jmp    FWORD PTR [eax+0x68]
1101a2aa:	push   0xfbfbfbff
1101a2af:	(bad)  
1101a2b0:	(bad)  
1101a2b1:	(bad)  
1101a2b2:	std    
1101a2b3:	(bad)  
1101a2b4:	(bad)  
1101a2b5:	(bad)  
1101a2b6:	(bad)  
1101a2b7:	(bad)  
1101a2b8:	clc    
1101a2b9:	aad    0xc6
1101a2bb:	(bad)  
1101a2bc:	jmp    0x4975:0xe2ff638a
1101a2c3:	(bad)  
1101a2c4:	fbstp  TBYTE PTR [eax+0x45]
1101a2c7:	(bad)  
1101a2c8:	fsubr  QWORD PTR [edx+eax*2-0x1]
1101a2cc:	fldcw  WORD PTR [eax+0x3f]
1101a2cf:	call   esi
1101a2d1:	fs cmp al,0xff
1101a2d4:	rcr    BYTE PTR [edi+0x38],cl
1101a2d7:	dec    edi
1101a2d9:	pop    ebx
1101a2da:	xor    eax,0x3157ccff
1101a2df:	call   eax
1101a2e1:	imul   ecx,DWORD PTR [ecx-0x1],0xffbbc7ed
1101a2e8:	(bad)  
1101a2e9:	(bad)  
1101a2ea:	std    
1101a2eb:	(bad)  
1101a2ec:	(bad)  
1101a2ed:	(bad)  
1101a2ee:	(bad)  
1101a2ef:	(bad)  
1101a2f0:	sti    
1101a2f1:	sti    
1101a2f2:	sti    
1101a2f3:	jmp    DWORD PTR [ebp+0x65]
1101a2f6:	inc    DWORD PTR gs:[edx]
1101a2f9:	add    DWORD PTR [eax],eax
1101a2fb:	jmp    FWORD PTR ds:0x63ff1019
1101a301:	cmp    BYTE PTR [edi+edi*8],ah
1101a304:	ins    DWORD PTR es:[edi],dx
1101a305:	cmp    eax,0xff28
1101a30a:	add    bh,bh
1101a30c:	add    BYTE PTR [eax],al
1101a30e:	add    BYTE PTR [ebp+0x6e000000],bh
1101a314:	add    BYTE PTR [eax],al
1101a316:	add    BYTE PTR [edx],ch
1101a318:	add    BYTE PTR [eax],al
1101a31a:	add    BYTE PTR [edx],cl
1101a31c:	add    BYTE PTR [eax],al
1101a31e:	add    BYTE PTR [ecx],al
1101a320:	add    BYTE PTR [eax],al
1101a322:	add    BYTE PTR [eax],al
1101a324:	add    BYTE PTR [eax],al
1101a326:	add    BYTE PTR [ecx],al
1101a328:	add    BYTE PTR [eax],al
1101a32a:	add    BYTE PTR ds:0x17000000,al
1101a330:	add    BYTE PTR [eax],al
1101a332:	add    BYTE PTR [edx+0x0],al
1101a335:	add    BYTE PTR [eax],al
1101a337:	inc    DWORD PTR [ebp+0x27]
1101a33a:	sbb    edi,edi
1101a33c:	sub    eax,0x2ff1019
1101a341:	add    DWORD PTR [ecx],eax
1101a343:	jmp    DWORD PTR [edi+0x67]
1101a346:	addr16 (bad) 
1101a348:	cld    
1101a349:	cld    
1101a34a:	cld    
1101a34b:	(bad)  
1101a34c:	(bad)  
1101a34d:	(bad)  
1101a34e:	(bad)  
1101a34f:	(bad)  
1101a350:	std    
1101a351:	cld    
1101a352:	cld    
1101a353:	push   edi
1101a355:	mov    ebx,0x82ecffa1
1101a35a:	push   esp
1101a35b:	(bad)  
1101a35c:	jmp    0xf700f3de
1101a361:	jp     0x1101a3b0
1101a363:	jmp    edx
1101a365:	jne    0x1101a3b1
1101a367:	jmp    eax
1101a369:	jno    0x1101a3b2
1101a36b:	(bad)  
1101a36c:	(bad)  [ebp+0x44]
1101a36f:	(bad)  
1101a370:	fldcw  WORD PTR [ecx+0x40]
1101a373:	call   ebp
1101a375:	fs cmp al,0xff
1101a378:	rcr    BYTE PTR [edi+0x39],cl
1101a37b:	dec    edi
1101a37d:	pop    ebx
1101a37e:	xor    eax,0x3157ccff
1101a383:	dec    ecx
1101a385:	push   ebx
1101a386:	das    
1101a387:	jmp    eax
1101a389:	popf   
1101a38a:	mov    edi,edi
1101a38c:	std    
1101a38d:	cld    
1101a38e:	cld    
1101a38f:	(bad)  
1101a390:	(bad)  
1101a391:	(bad)  
1101a392:	(bad)  
1101a393:	(bad)  
1101a394:	sti    
1101a395:	sti    
1101a396:	sti    
1101a397:	jmp    DWORD PTR [ebp+0x65]
1101a39a:	inc    DWORD PTR gs:[edx]
1101a39d:	add    DWORD PTR [ecx],eax
1101a39f:	jmp    FWORD PTR ds:0x45ff1019
1101a3a5:	daa    
1101a3a6:	sbb    edi,edi
1101a3a8:	add    BYTE PTR [eax],al
1101a3aa:	add    bh,bh
1101a3ac:	add    BYTE PTR [eax],al
1101a3ae:	add    ah,al
1101a3b0:	add    BYTE PTR [eax],al
1101a3b2:	add    BYTE PTR [esi+0x0],dh
1101a3b5:	add    BYTE PTR [eax],al
1101a3b7:	add    BYTE PTR cs:[eax],al
1101a3ba:	add    BYTE PTR [edx],cl
1101a3bc:	add    BYTE PTR [eax],al
1101a3be:	add    BYTE PTR [ecx],al
1101a3c0:	add    BYTE PTR [eax],al
1101a3c2:	add    BYTE PTR [eax],al
1101a3c4:	add    BYTE PTR [eax],al
1101a3c6:	add    BYTE PTR ds:0x13000000,al
1101a3cc:	add    BYTE PTR [eax],al
1101a3ce:	add    BYTE PTR [ebx],dh
1101a3d0:	add    BYTE PTR [eax],al
1101a3d2:	add    BYTE PTR [eax+eax*1+0x0],ch
1101a3d6:	add    bh,bh
1101a3d8:	sbb    al,0x10
1101a3da:	or     bh,bh
1101a3dc:	add    al,BYTE PTR [ecx]
1101a3de:	add    edi,edi
1101a3e0:	push   0xfbff6868
1101a3e5:	sti    
1101a3e6:	sti    
1101a3e7:	(bad)  
1101a3e8:	(bad)  
1101a3e9:	(bad)  
1101a3ea:	std    
1101a3eb:	(bad)  
1101a3ec:	(bad)  
1101a3ed:	(bad)  
1101a3ee:	std    
1101a3ef:	(bad)  
1101a3f0:	stc    
1101a3f1:	mov    esi,0x8af2ffa4
1101a3f6:	pop    ebx
1101a3f7:	(bad)  
1101a3f8:	out    dx,eax
1101a3f9:	xchg   BYTE PTR [eax-0x1],bl
1101a3fc:	in     al,dx
1101a3fd:	adc    DWORD PTR [esi-0x1],0xffffffe9
1101a401:	jg     0x1101a456
1101a403:	jmp    esi
1101a405:	jnp    0x1101a456
1101a407:	jmp    ebx
1101a409:	ja     0x1101a457
1101a40b:	jmp    eax
1101a40d:	jb     0x1101a457
1101a40f:	(bad)  
1101a410:	(bad)  [esi+0x45]
1101a413:	(bad)  
1101a414:	fldcw  WORD PTR [ecx+0x40]
1101a417:	call   esi
1101a419:	gs cmp al,0xff
1101a41c:	shl    DWORD PTR [eax+0x39],cl
1101a41f:	dec    edi
1101a421:	pop    ebx
1101a422:	xor    eax,0x3157ccff
1101a427:	dec    ecx
1101a429:	push   ebx
1101a42a:	cs jmp eax
1101a42d:	popf   
1101a42e:	mov    edi,edi
1101a430:	(bad)  
1101a431:	(bad)  
1101a432:	std    
1101a433:	(bad)  
1101a434:	(bad)  
1101a435:	(bad)  
1101a436:	std    
1101a437:	(bad)  
1101a438:	sti    
1101a439:	sti    
1101a43a:	cli    
1101a43b:	jmp    DWORD PTR [esi+0x66]
1101a43e:	inc    DWORD PTR gs:[edx]
1101a441:	add    DWORD PTR [ecx],eax
1101a443:	call   FWORD PTR [eax+edx*1]
1101a446:	or     bh,bh
1101a448:	add    BYTE PTR [eax],al
1101a44a:	add    bh,bh
1101a44c:	add    BYTE PTR [eax],al
1101a44e:	add    cl,dl
1101a450:	add    BYTE PTR [eax],al
1101a452:	add    BYTE PTR [edi+0x39000000],al
1101a458:	add    BYTE PTR [eax],al
1101a45a:	add    BYTE PTR [esi],cl
1101a45c:	add    BYTE PTR [eax],al
1101a45e:	add    BYTE PTR [ecx],al
1101a460:	add    BYTE PTR [eax],al
1101a462:	add    BYTE PTR ds:0x13000000,al
1101a468:	add    BYTE PTR [eax],al
1101a46a:	add    BYTE PTR [eax],dh
1101a46c:	add    BYTE PTR [eax],al
1101a46e:	add    BYTE PTR [ecx+0x0],ah
1101a471:	add    BYTE PTR [eax],al
1101a473:	sahf   
1101a474:	add    BYTE PTR [eax],al
1101a476:	add    bh,bh
1101a478:	add    BYTE PTR [eax],al
1101a47a:	add    bh,bh
1101a47c:	addr16 addr16 addr16 (bad) 
1101a480:	sti    
1101a481:	sti    
1101a482:	sti    
1101a483:	(bad)  
1101a484:	(bad)  
1101a485:	(bad)  
1101a486:	std    
1101a487:	(bad)  
1101a488:	(bad)  
1101a489:	(bad)  
1101a48a:	std    
1101a48b:	(bad)  
1101a48c:	sti    
1101a48d:	fcmove st,st(2)
1101a48f:	push   ebx
1101a491:	mov    WORD PTR [esi-0x1],ds
1101a494:	repz mov WORD PTR [esi-0x1],ds
1101a498:	repnz mov WORD PTR [esi-0x1],ds
1101a49c:	lock mov DWORD PTR [edi+edi*8-0x13],ebx
1101a4a1:	test   DWORD PTR [eax-0x1],ebx
1101a4a4:	jmp    0xf900fa29
1101a4a9:	jl     0x1101a4fc
1101a4ab:	jmp    esp
1101a4ad:	js     0x1101a4fc
1101a4af:	jmp    eax
1101a4b1:	jae    0x1101a4fc
1101a4b3:	(bad)  
1101a4b4:	(bad)  [esi+0x45]
1101a4b7:	(bad)  
1101a4b8:	fisubr DWORD PTR [ecx+0x41]
1101a4bb:	call   esi
1101a4bd:	gs cmp eax,0x3960d3ff
1101a4c3:	dec    edi
1101a4c5:	pop    ebx
1101a4c6:	ss dec esp
1101a4c9:	push   edi
1101a4ca:	xor    edi,edi
1101a4cc:	leave  
1101a4cd:	push   esp
1101a4ce:	das    
1101a4cf:	(bad)  
1101a4d0:	in     eax,dx
1101a4d1:	(bad)  
1101a4d2:	mov    ebx,0xfdfefeff
1101a4d7:	(bad)  
1101a4d8:	std    
1101a4d9:	std    
1101a4da:	std    
1101a4db:	(bad)  
1101a4dc:	sti    
1101a4dd:	sti    
1101a4de:	sti    
1101a4df:	jmp    DWORD PTR [ebp+0x65]
1101a4e2:	inc    DWORD PTR gs:[eax]
1101a4e5:	add    BYTE PTR [eax],al
1101a4e7:	inc    DWORD PTR [eax]
1101a4e9:	add    BYTE PTR [eax],al
1101a4eb:	inc    DWORD PTR [eax]
1101a4ed:	add    BYTE PTR [eax],al
1101a4ef:	loopne 0x1101a4f1
1101a4f1:	add    BYTE PTR [eax],al
1101a4f3:	mov    eax,ds:0x52000000
1101a4f8:	add    BYTE PTR [eax],al
1101a4fa:	add    BYTE PTR [eax+eax*1],bl
1101a4fd:	add    BYTE PTR [eax],al
1101a4ff:	add    eax,0x12000000
1101a504:	add    BYTE PTR [eax],al
1101a506:	add    BYTE PTR [eax],dh
1101a508:	add    BYTE PTR [eax],al
1101a50a:	add    BYTE PTR [eax+0x0],ah
1101a50d:	add    BYTE PTR [eax],al
1101a50f:	cdq    
1101a510:	add    BYTE PTR [eax],al
1101a512:	add    dl,dl
1101a514:	add    BYTE PTR [eax],al
1101a516:	add    bh,bh
1101a518:	push   0xfbff6868
1101a51d:	sti    
1101a51e:	sti    
1101a51f:	(bad)  
1101a520:	std    
1101a521:	std    
1101a522:	std    
1101a523:	(bad)  
1101a524:	std    
1101a525:	std    
1101a526:	std    
1101a527:	(bad)  
1101a528:	std    
1101a529:	sti    
1101a52a:	stc    
1101a52b:	push   ebp
1101a52d:	pushf  
1101a52e:	jae    0x1101a52f
1101a530:	repz mov fs,WORD PTR [eax-0x1]
1101a534:	hlt    
1101a535:	(bad)  
1101a536:	popa   
1101a537:	push   esp
1101a539:	(bad)  
1101a53a:	arpl   di,di
1101a53c:	repz (bad) 
1101a53e:	(bad)  
1101a53f:	push   eax
1101a541:	mov    ebx,DWORD PTR [edi-0x1]
1101a544:	in     eax,dx
1101a545:	xchg   DWORD PTR [ebx-0x1],ebx
1101a548:	jmp    0x527d:0xe7ff5782
1101a54f:	jmp    esp
1101a551:	js     0x1101a5a1
1101a553:	jmp    eax
1101a555:	jae    0x1101a5a1
1101a557:	(bad)  
1101a558:	(bad)  [edi+0x45]
1101a55b:	(bad)  
1101a55c:	fisubr DWORD PTR [edx+0x41]
1101a55f:	call   esi
1101a561:	gs cmp eax,0x3960d3ff
1101a567:	dec    edi
1101a569:	pop    ebx
1101a56a:	ss dec esp
1101a56d:	push   edi
1101a56e:	xor    edi,edi
1101a570:	shr    BYTE PTR [ecx+0x49],1
1101a573:	(bad)  
1101a574:	cld    
1101a575:	stc    
1101a576:	idiv   edi
1101a578:	std    
1101a579:	std    
1101a57a:	std    
1101a57b:	(bad)  
1101a57c:	(bad)  
1101a57d:	(bad)  
1101a57e:	std    
1101a57f:	(bad)  
1101a580:	sti    
1101a581:	sti    
1101a582:	sti    
1101a583:	jmp    DWORD PTR [ebp+0x65]
1101a586:	inc    DWORD PTR gs:[eax]
1101a589:	add    BYTE PTR [eax],al
1101a58b:	inc    DWORD PTR [eax]
1101a58d:	add    BYTE PTR [eax],al
1101a58f:	lock add BYTE PTR [eax],al
1101a592:	add    dl,al
1101a594:	add    BYTE PTR [eax],al
1101a596:	add    BYTE PTR [ecx+0x0],bh
1101a599:	add    BYTE PTR [eax],al
1101a59b:	cmp    BYTE PTR [eax],al
1101a59d:	add    BYTE PTR [eax],al
1101a59f:	adc    eax,DWORD PTR [eax]
1101a5a1:	add    BYTE PTR [eax],al
1101a5a3:	sub    al,BYTE PTR [eax]
1101a5a5:	add    BYTE PTR [eax],al
1101a5a7:	pop    edx
1101a5a8:	add    BYTE PTR [eax],al
1101a5aa:	add    BYTE PTR [ebp-0x31000000],dl
1101a5b0:	add    BYTE PTR [eax],al
1101a5b2:	add    ah,bh
1101a5b4:	push   0xfbff6868
1101a5b9:	sti    
1101a5ba:	sti    
1101a5bb:	(bad)  
1101a5bc:	(bad)  
1101a5bd:	(bad)  
1101a5be:	(bad)  
1101a5bf:	(bad)  
1101a5c0:	(bad)  
1101a5c1:	(bad)  
1101a5c2:	(bad)  
1101a5c3:	(bad)  
1101a5c4:	(bad)  
1101a5c5:	(bad)  
1101a5c6:	std    
1101a5c7:	(bad)  
1101a5c8:	sti    
1101a5c9:	fmul   st,st(0)
1101a5cb:	push   esp
1101a5cd:	(bad)  
1101a5ce:	popa   
1101a5cf:	push   esp
1101a5d1:	xchg   ecx,eax
1101a5d2:	fs push esp
1101a5d5:	xchg   edx,eax
1101a5d6:	push   sp
1101a5d9:	xchg   ebx,eax
1101a5da:	addr16 push esp
1101a5dd:	xchg   ebx,eax
1101a5de:	push   0x6692f3ff
1101a5e3:	push   eax
1101a5e5:	lea    esp,[edx-0x1]
1101a5e8:	in     eax,dx
1101a5e9:	mov    BYTE PTR [ebp-0x1],bl
1101a5ec:	jmp    0x537e:0xe7ff5883
1101a5f3:	jmp    ebx
1101a5f5:	js     0x1101a645
1101a5f7:	jmp    eax
1101a5f9:	jae    0x1101a645
1101a5fb:	(bad)  
1101a5fc:	(bad)  [esi+0x45]
1101a5ff:	(bad)  
1101a600:	fisubr DWORD PTR [edx+0x41]
1101a603:	call   esi
1101a605:	gs cmp eax,0x3960d3ff
1101a60b:	dec    edi
1101a60d:	pop    ebx
1101a60e:	xor    eax,0x3157ccff
1101a613:	(bad)  
1101a614:	in     eax,dx
1101a615:	lds    edi,FWORD PTR [eax-0x2020201]
1101a61b:	(bad)  
1101a61c:	(bad)  
1101a61d:	(bad)  
1101a61e:	(bad)  
1101a61f:	(bad)  
1101a620:	(bad)  
1101a621:	(bad)  
1101a622:	std    
1101a623:	(bad)  
1101a624:	sti    
1101a625:	sti    
1101a626:	cli    
1101a627:	jmp    DWORD PTR [ebp+0x65]
1101a62a:	inc    DWORD PTR gs:[eax]
1101a62d:	add    BYTE PTR [eax],al
1101a62f:	inc    BYTE PTR [eax]
1101a631:	add    BYTE PTR [eax],al
1101a633:	loope  0x1101a635
1101a635:	add    BYTE PTR [eax],al
1101a637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1101a638:	add    BYTE PTR [eax],al
1101a63a:	add    BYTE PTR [eax+0x0],ah
1101a63d:	add    BYTE PTR [eax],al
1101a63f:	sub    al,BYTE PTR [eax]
1101a641:	add    BYTE PTR [eax],al
1101a643:	inc    edx
1101a644:	add    BYTE PTR [eax],al
1101a646:	add    BYTE PTR [ecx-0x39000000],al
1101a64c:	add    BYTE PTR [eax],al
1101a64e:	add    ah,bh
1101a650:	addr16 addr16 addr16 (bad) 
1101a654:	sti    
1101a655:	sti    
1101a656:	sti    
1101a657:	(bad)  
1101a658:	(bad)  
1101a659:	(bad)  
1101a65a:	(bad)  
1101a65b:	(bad)  
1101a65c:	(bad)  
1101a65d:	(bad)  
1101a65e:	(bad)  
1101a65f:	(bad)  
1101a660:	(bad)  
1101a661:	(bad)  
1101a662:	(bad)  
1101a663:	(bad)  
1101a664:	(bad)  
1101a665:	(bad)  
1101a666:	(bad)  
1101a667:	(bad)  
1101a668:	clc    
1101a669:	mov    dh,0x98
1101a66b:	push   esp
1101a66d:	xchg   edx,eax
1101a66e:	gs push esp
1101a671:	xchg   ebp,eax
1101a672:	push   0xffffffff
1101a674:	hlt    
1101a675:	xchg   edi,eax
1101a676:	ins    DWORD PTR es:[edi],dx
1101a677:	push   esp
1101a679:	cwde   
1101a67a:	outs   dx,BYTE PTR ds:[esi]
1101a67b:	push   ebp
1101a67d:	cwde   
1101a67e:	outs   dx,BYTE PTR ds:[esi]
1101a67f:	push   esp
1101a681:	xchg   edi,eax
1101a682:	ins    DWORD PTR es:[edi],dx
1101a683:	push   ebx
1101a685:	xchg   esp,eax
1101a686:	push   0xffffffff
1101a688:	lock (bad) 
1101a68a:	gs (bad) 
1101a68c:	in     eax,dx
1101a68d:	mov    bl,BYTE PTR [edi-0x1]
1101a690:	jmp    0x547e:0xe7ff5984
1101a697:	jmp    ebx
1101a699:	jns    0x1101a6e9
1101a69b:	jmp    eax
1101a69d:	jae    0x1101a6e9
1101a69f:	(bad)  
1101a6a0:	(bad)  [edi+0x45]
1101a6a3:	(bad)  
1101a6a4:	fisubr DWORD PTR [ecx+0x41]
1101a6a7:	call   esi
1101a6a9:	gs cmp eax,0x395fd2ff
1101a6af:	dec    edi
1101a6b1:	pop    ebx
1101a6b2:	xor    eax,0x7992dfff
1101a6b7:	(bad)  
1101a6b8:	(bad)  
1101a6b9:	(bad)  
1101a6ba:	std    
1101a6bb:	(bad)  
1101a6bc:	(bad)  
1101a6bd:	(bad)  
1101a6be:	(bad)  
1101a6bf:	(bad)  
1101a6c0:	(bad)  
1101a6c1:	(bad)  
1101a6c2:	(bad)  
1101a6c3:	(bad)  
1101a6c4:	(bad)  
1101a6c5:	(bad)  
1101a6c6:	(bad)  
1101a6c7:	(bad)  
1101a6c8:	sti    
1101a6c9:	sti    
1101a6ca:	sti    
1101a6cb:	jmp    DWORD PTR [ebp+0x65]
1101a6ce:	inc    DWORD PTR gs:[eax]
1101a6d1:	add    BYTE PTR [eax],al
1101a6d3:	std    
1101a6d4:	add    BYTE PTR [eax],al
1101a6d6:	add    dh,cl
1101a6d8:	add    BYTE PTR [eax],al
1101a6da:	add    BYTE PTR [ebp+0x42000000],al
1101a6e0:	add    BYTE PTR [eax],al
1101a6e2:	add    BYTE PTR [eax+0x0],cl
1101a6e5:	add    BYTE PTR [eax],al
1101a6e7:	mov    al,ds:0xfa000000
1101a6ec:	push   0xfbff6868
1101a6f1:	sti    
1101a6f2:	sti    
1101a6f3:	(bad)  
1101a6f4:	(bad)  
1101a6f5:	(bad)  
1101a6f6:	(bad)  
1101a6f7:	(bad)  
1101a6f8:	(bad)  
1101a6f9:	(bad)  
1101a6fa:	std    
1101a6fb:	(bad)  
1101a6fc:	(bad)  
1101a6fd:	(bad)  
1101a6fe:	(bad)  
1101a6ff:	(bad)  
1101a700:	(bad)  
1101a701:	(bad)  
1101a702:	(bad)  
1101a703:	(bad)  
1101a704:	(bad)  
1101a705:	(bad)  
1101a706:	(bad)  
1101a707:	push   esi
1101a709:	mov    ds:0x96f4ff7c,al
1101a70e:	ins    BYTE PTR es:[edi],dx
1101a70f:	push   ebp
1101a711:	fwait
1101a712:	jb     0x1101a713
1101a714:	cmc    
1101a715:	popf   
1101a716:	jne    0x1101a717
1101a718:	cmc    
1101a719:	sahf   
1101a71a:	ja     0x1101a71b
1101a71c:	cmc    
1101a71d:	sahf   
1101a71e:	ja     0x1101a71f
1101a720:	cmc    
1101a721:	popf   
1101a722:	jne    0x1101a723
1101a724:	cmc    
1101a725:	fwait
1101a726:	jb     0x1101a727
1101a728:	hlt    
1101a729:	xchg   edi,eax
1101a72a:	outs   dx,BYTE PTR ds:[esi]
1101a72b:	push   ecx
1101a72d:	xchg   ecx,eax
1101a72e:	addr16 (bad) 
1101a730:	out    dx,al
1101a731:	mov    esp,DWORD PTR [eax-0x1]
1101a734:	jmp    0x547e:0xe7ff5a84
1101a73b:	jmp    ebx
1101a73d:	jns    0x1101a78e
1101a73f:	jmp    eax
1101a741:	jae    0x1101a78d
1101a743:	(bad)  
1101a744:	(bad)  [esi+0x45]
1101a747:	(bad)  
1101a748:	fisubr DWORD PTR [ecx+0x41]
1101a74b:	call   esi
1101a74d:	fs cmp al,0xff
1101a750:	rcr    BYTE PTR [edi+0x38],cl
1101a753:	call   edi
1101a755:	jae    0x1101a7a9
1101a757:	(bad)  
1101a758:	std    
1101a759:	std    
1101a75a:	std    
1101a75b:	(bad)  
1101a75c:	(bad)  
1101a75d:	(bad)  
1101a75e:	(bad)  
1101a75f:	(bad)  
1101a760:	(bad)  
1101a761:	(bad)  
1101a762:	(bad)  
1101a763:	(bad)  
1101a764:	(bad)  
1101a765:	(bad)  
1101a766:	(bad)  
1101a767:	(bad)  
1101a768:	std    
1101a769:	std    
1101a76a:	std    
1101a76b:	(bad)  
1101a76c:	sti    
1101a76d:	sti    
1101a76e:	sti    
1101a76f:	jmp    DWORD PTR [ebp+0x65]
1101a772:	inc    DWORD PTR gs:[eax]
1101a775:	add    BYTE PTR [eax],al
1101a777:	sti    
1101a778:	add    BYTE PTR [eax],al
1101a77a:	add    BYTE PTR [ebx+0x48000000],ah
1101a780:	add    BYTE PTR [eax],al
1101a782:	add    BYTE PTR [ecx+0x0],ah
1101a785:	add    BYTE PTR [eax],al
1101a787:	hlt    
1101a788:	addr16 addr16 addr16 (bad) 
1101a78c:	sti    
1101a78d:	sti    
1101a78e:	sti    
1101a78f:	(bad)  
1101a790:	(bad)  
1101a791:	(bad)  
1101a792:	(bad)  
1101a793:	(bad)  
1101a794:	std    
1101a795:	std    
1101a796:	std    
1101a797:	(bad)  
1101a798:	std    
1101a799:	std    
1101a79a:	std    
1101a79b:	(bad)  
1101a79c:	std    
1101a79d:	std    
1101a79e:	std    
1101a79f:	(bad)  
1101a7a0:	(bad)  
1101a7a1:	(bad)  
1101a7a2:	std    
1101a7a3:	(bad)  
1101a7a4:	std    
1101a7a5:	std    
1101a7a6:	std    
1101a7a7:	push   ebp
1101a7a9:	call   0xff74:0x9cf5ff72
1101a7b0:	cmc    
1101a7b1:	mov    ds:0xa5f6ff7c,al
1101a7b6:	cmp    bh,0xf6
1101a7b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1101a7ba:	cmp    bh,0xf6
1101a7bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1101a7be:	cmp    bh,0xf6
1101a7c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101a7c2:	jg     0x1101a7c3
1101a7c4:	cmc    
1101a7c5:	mov    eax,ds:0x9df5ff7b
1101a7ca:	jbe    0x1101a7cb
1101a7cc:	hlt    
1101a7cd:	cdq    
1101a7ce:	outs   dx,DWORD PTR ds:[esi]
1101a7cf:	push   ecx
1101a7d1:	xchg   edx,eax
1101a7d2:	push   0x608bedff
1101a7d7:	(bad)  
1101a7d8:	jmp    0xf9010161
1101a7dd:	jle    0x1101a832
1101a7df:	jmp    ebx
1101a7e1:	js     0x1101a831
1101a7e3:	jmp    eax
1101a7e5:	jae    0x1101a830
1101a7e7:	(bad)  
1101a7e8:	(bad)  [esi+0x45]
1101a7eb:	(bad)  
1101a7ec:	fldcw  WORD PTR [ecx+0x40]
1101a7ef:	call   ebp
1101a7f1:	fs cmp al,0xff
1101a7f4:	aad    0x67
1101a7f6:	inc    ecx
1101a7f7:	(bad)  
1101a7f8:	std    
1101a7f9:	std    
1101a7fa:	std    
1101a7fb:	(bad)  
1101a7fc:	(bad)  
1101a7fd:	(bad)  
1101a7fe:	std    
1101a7ff:	(bad)  
1101a800:	std    
1101a801:	std    
1101a802:	std    
1101a803:	(bad)  
1101a804:	std    
1101a805:	std    
1101a806:	std    
1101a807:	(bad)  
1101a808:	std    
1101a809:	std    
1101a80a:	std    
1101a80b:	(bad)  
1101a80c:	std    
1101a80d:	std    
1101a80e:	std    
1101a80f:	(bad)  
1101a810:	cli    
1101a811:	cli    
1101a812:	cli    
1101a813:	jmp    DWORD PTR [ebp+0x65]
1101a816:	inc    DWORD PTR gs:[eax]
1101a819:	add    BYTE PTR [eax],al
1101a81b:	hlt    
1101a81c:	add    BYTE PTR [eax],al
1101a81e:	add    BYTE PTR [ecx+0x0],ah
1101a821:	add    BYTE PTR [eax],al
1101a823:	dec    esp
1101a824:	add    BYTE PTR [eax],al
1101a826:	add    cl,dh
1101a828:	push   0xfbfe6868
1101a82d:	sti    
1101a82e:	sti    
1101a82f:	(bad)  
1101a830:	(bad)  
1101a831:	(bad)  
1101a832:	(bad)  
1101a833:	(bad)  
1101a834:	(bad)  
1101a835:	(bad)  
1101a836:	(bad)  
1101a837:	(bad)  
1101a838:	(bad)  
1101a839:	(bad)  
1101a83a:	std    
1101a83b:	(bad)  
1101a83c:	(bad)  
1101a83d:	(bad)  
1101a83e:	(bad)  
1101a83f:	(bad)  
1101a840:	(bad)  
1101a841:	(bad)  
1101a842:	(bad)  
1101a843:	(bad)  
1101a844:	(bad)  
1101a845:	(bad)  
1101a846:	std    
1101a847:	push   esi
1101a849:	lahf   
1101a84a:	js     0x1101a84b
1101a84c:	mul    BYTE PTR [ebx-0x54090083]
1101a852:	mov    bh,bh
1101a854:	imul   DWORD PTR [edi-0x4e080071]
1101a85a:	xchg   ecx,eax
1101a85b:	push   edi
1101a85d:	mov    cl,0x91
1101a85f:	push   edi
1101a861:	scas   al,BYTE PTR es:[edi]
1101a862:	mov    edi,?
1101a864:	imul   BYTE PTR [ecx-0x5b09007a]
1101a86a:	jg     0x1101a86b
1101a86c:	cmc    
1101a86d:	lahf   
1101a86e:	ja     0x1101a86f
1101a870:	hlt    
1101a871:	cdq    
1101a872:	jo     0x1101a873
1101a874:	icebp  
1101a875:	xchg   ecx,eax
1101a876:	addr16 (bad) 
1101a878:	in     eax,dx
1101a879:	mov    bl,BYTE PTR [edi-0x1]
1101a87c:	jmp    0x527d:0xe7ff5883
1101a883:	jmp    esp
1101a885:	js     0x1101a8d4
1101a887:	jmp    ecx
1101a889:	jb     0x1101a8d4
1101a88b:	(bad)  
1101a88c:	(bad)  [ebp+0x44]
1101a88f:	(bad)  
1101a890:	fldcw  WORD PTR [eax+0x3f]
1101a893:	(bad)  
1101a894:	fsubr  DWORD PTR [ebx+0x44]
1101a897:	(bad)  
1101a898:	std    
1101a899:	std    
1101a89a:	std    
1101a89b:	(bad)  
1101a89c:	(bad)  
1101a89d:	(bad)  
1101a89e:	std    
1101a89f:	(bad)  
1101a8a0:	(bad)  
1101a8a1:	(bad)  
1101a8a2:	std    
1101a8a3:	(bad)  
1101a8a4:	(bad)  
1101a8a5:	(bad)  
1101a8a6:	(bad)  
1101a8a7:	(bad)  
1101a8a8:	std    
1101a8a9:	std    
1101a8aa:	std    
1101a8ab:	(bad)  
1101a8ac:	(bad)  
1101a8ad:	(bad)  
1101a8ae:	(bad)  
1101a8af:	(bad)  
1101a8b0:	sti    
1101a8b1:	sti    
1101a8b2:	sti    
1101a8b3:	jmp    DWORD PTR [edi+0x67]
1101a8b6:	inc    BYTE PTR [bx+si]
1101a8b9:	add    BYTE PTR [eax],al
1101a8bb:	lock add BYTE PTR [eax],al
1101a8be:	add    BYTE PTR [ebx+0x0],cl
1101a8c1:	add    BYTE PTR [eax],al
1101a8c3:	or     al,BYTE PTR [eax]
1101a8c5:	add    BYTE PTR [eax],al
1101a8c7:	dec    esi
1101a8c8:	add    BYTE PTR [eax],al
1101a8ca:	add    cl,dh
1101a8cc:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbfe
1101a8d3:	(bad)  
1101a8d4:	std    
1101a8d5:	std    
1101a8d6:	std    
1101a8d7:	(bad)  
1101a8d8:	std    
1101a8d9:	std    
1101a8da:	std    
1101a8db:	(bad)  
1101a8dc:	(bad)  
1101a8dd:	(bad)  
1101a8de:	(bad)  
1101a8df:	(bad)  
1101a8e0:	(bad)  
1101a8e1:	(bad)  
1101a8e2:	std    
1101a8e3:	(bad)  
1101a8e4:	std    
1101a8e5:	std    
1101a8e6:	std    
1101a8e7:	push   edi
1101a8e9:	lods   eax,DWORD PTR ds:[esi]
1101a8ea:	mov    edi,?
1101a8ec:	imul   BYTE PTR [edx-0x4b080079]
1101a8f2:	xchg   esi,eax
1101a8f3:	(bad)  
1101a8f4:	clc    
1101a8f5:	mov    edx,0xbdf8ff9f
1101a8fa:	mov    ds:0xa1bcf8ff,al
1101a8ff:	push   edi
1101a901:	mov    eax,0xb2f7ff9b
1101a906:	xchg   ebx,eax
1101a907:	push   esi
1101a909:	stos   DWORD PTR es:[edi],eax
1101a90a:	mov    edi,edi
1101a90c:	mul    BYTE PTR [esi+edi*2+0x759df5ff]
1101a913:	push   esp
1101a915:	xchg   edi,eax
1101a916:	ins    DWORD PTR es:[edi],dx
1101a917:	push   eax
1101a919:	(bad)  
1101a91a:	fs (bad) 
1101a91c:	in     eax,dx
1101a91d:	mov    BYTE PTR [ebp-0x1],bl
1101a920:	jmp    0x517c:0xe7ff5782
1101a927:	jmp    ebx
1101a929:	ja     0x1101a977
1101a92b:	(bad)  
1101a92c:	fbstp  TBYTE PTR [ecx+0x47]
1101a92f:	(bad)  
1101a930:	fsubr  QWORD PTR [edx+eax*2-0x1]
1101a934:	fistp  QWORD PTR [esi+0x5a]
1101a937:	(bad)  
1101a938:	std    
1101a939:	std    
1101a93a:	std    
1101a93b:	(bad)  
1101a93c:	(bad)  
1101a93d:	(bad)  
1101a93e:	std    
1101a93f:	(bad)  
1101a940:	(bad)  
1101a941:	(bad)  
1101a942:	std    
1101a943:	(bad)  
1101a944:	(bad)  
1101a945:	(bad)  
1101a946:	std    
1101a947:	(bad)  
1101a948:	std    
1101a949:	std    
1101a94a:	std    
1101a94b:	(bad)  
1101a94c:	sti    
1101a94d:	sti    
1101a94e:	sti    
1101a94f:	jmp    FWORD PTR [eax+0x68]
1101a952:	push   0xfe
1101a957:	repnz add BYTE PTR [eax],al
1101a95a:	add    BYTE PTR [edx+0x0],dl
1101a95d:	add    BYTE PTR [eax],al
1101a95f:	or     eax,DWORD PTR [eax]
1101a961:	add    BYTE PTR [eax],al
1101a963:	add    al,BYTE PTR [eax]
1101a965:	add    BYTE PTR [eax],al
1101a967:	or     al,BYTE PTR [eax]
1101a969:	add    BYTE PTR [eax],al
1101a96b:	dec    esi
1101a96c:	add    BYTE PTR [eax],al
1101a96e:	add    cl,dh
1101a970:	push   0xfcfe6868
1101a975:	cld    
1101a976:	cld    
1101a977:	(bad)  
1101a978:	std    
1101a979:	std    
1101a97a:	std    
1101a97b:	(bad)  
1101a97c:	(bad)  
1101a97d:	(bad)  
1101a97e:	(bad)  
1101a97f:	(bad)  
1101a980:	(bad)  
1101a981:	(bad)  
1101a982:	std    
1101a983:	(bad)  
1101a984:	(bad)  
1101a985:	(bad)  
1101a986:	std    
1101a987:	(bad)  
1101a988:	stc    
1101a989:	les    ebp,FWORD PTR [edi+edi*8-0x6f4f09]
1101a990:	clc    
1101a991:	mov    esi,0xc6f9ffa3
1101a996:	scas   eax,DWORD PTR es:[edi]
1101a997:	(bad)  
1101a998:	stc    
1101a999:	leave  
1101a99a:	mov    ah,0xff
1101a99c:	stc    
1101a99d:	enter  0xffb2,0xf8
1101a9a1:	ret    
1101a9a2:	stos   DWORD PTR es:[edi],eax
1101a9a3:	(bad)  
1101a9a4:	clc    
1101a9a5:	mov    ebx,0xb2f7ffa0
1101a9aa:	xchg   ebx,eax
1101a9ab:	push   esi
1101a9ad:	test   eax,0xa1f5ff86
1101a9b2:	jnp    0x1101a9b3
1101a9b4:	cmc    
1101a9b5:	call   0xff69:0x94f3ff71
1101a9bc:	lock lea esp,[ecx-0x1]
1101a9c0:	in     eax,dx
1101a9c1:	xchg   DWORD PTR [ebx-0x1],ebx
1101a9c4:	jmp    0x4f7b:0xe7ff5580
1101a9cb:	jmp    edx
1101a9cd:	jne    0x1101aa19
1101a9cf:	(bad)  
1101a9d0:	fbstp  TBYTE PTR [eax+0x45]
1101a9d3:	(bad)  
1101a9d4:	jmp    0xf012e78
1101a9d9:	std    
1101a9da:	std    
1101a9db:	(bad)  
1101a9dc:	(bad)  
1101a9dd:	(bad)  
1101a9de:	std    
1101a9df:	(bad)  
1101a9e0:	(bad)  
1101a9e1:	(bad)  
1101a9e2:	std    
1101a9e3:	(bad)  
1101a9e4:	(bad)  
1101a9e5:	(bad)  
1101a9e6:	(bad)  
1101a9e7:	(bad)  
1101a9e8:	sti    
1101a9e9:	sti    
1101a9ea:	sti    
1101a9eb:	jmp    DWORD PTR [edi+0x67]
1101a9ee:	inc    DWORD PTR [bx+si]
1101a9f1:	add    BYTE PTR [eax],al
1101a9f3:	cmc    
1101a9f4:	add    BYTE PTR [eax],al
1101a9f6:	add    BYTE PTR [edi+0x0],ah
1101a9f9:	add    BYTE PTR [eax],al
1101a9fb:	adc    eax,DWORD PTR [eax]
1101a9fd:	add    BYTE PTR [eax],al
1101a9ff:	add    eax,DWORD PTR [eax]
1101aa01:	add    BYTE PTR [eax],al
1101aa03:	add    BYTE PTR [eax],al
1101aa05:	add    BYTE PTR [eax],al
1101aa07:	add    al,BYTE PTR [eax]
1101aa09:	add    BYTE PTR [eax],al
1101aa0b:	or     al,BYTE PTR [eax]
1101aa0d:	add    BYTE PTR [eax],al
1101aa0f:	push   eax
1101aa10:	add    BYTE PTR [eax],al
1101aa12:	add    cl,dh
1101aa14:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbff
1101aa1b:	(bad)  
1101aa1c:	(bad)  
1101aa1d:	(bad)  
1101aa1e:	std    
1101aa1f:	(bad)  
1101aa20:	(bad)  
1101aa21:	(bad)  
1101aa22:	(bad)  
1101aa23:	(bad)  
1101aa24:	(bad)  
1101aa25:	(bad)  
1101aa26:	std    
1101aa27:	(bad)  
1101aa28:	cld    
1101aa29:	loop   0x1101aa01
1101aa2b:	push   edi
1101aa2d:	mov    ch,0x97
1101aa2f:	(bad)  
1101aa30:	stc    
1101aa31:	lds    ebp,FWORD PTR [esi-0x412f0501]
1101aa37:	(bad)  
1101aa38:	cli    
1101aa39:	aad    0xc4
1101aa3b:	(bad)  
1101aa3c:	cli    
1101aa3d:	rol    ecx,cl
1101aa3f:	(bad)  
1101aa40:	stc    
1101aa41:	int    0xb8
1101aa43:	(bad)  
1101aa44:	clc    
1101aa45:	ret    
1101aa46:	stos   DWORD PTR es:[edi],eax
1101aa47:	(bad)  
1101aa48:	clc    
1101aa49:	mov    eax,0xaef7ff9c
1101aa4e:	(bad)  
1101aa4f:	push   esi
1101aa51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101aa52:	jg     0x1101aa53
1101aa54:	cmc    
1101aa55:	popf   
1101aa56:	je     0x1101aa57
1101aa58:	hlt    
1101aa59:	xchg   edi,eax
1101aa5a:	ins    BYTE PTR es:[edi],dx
1101aa5b:	push   ebx
1101aa5d:	xchg   edx,eax
1101aa5e:	push   ax
1101aa61:	mov    ebx,DWORD PTR [edi-0x1]
1101aa64:	in     eax,dx
1101aa65:	test   DWORD PTR [eax-0x1],ebx
1101aa68:	jmp    0x4e7a:0xe6ff537f
1101aa6f:	jmp    edx
1101aa71:	je     0x1101aabb
1101aa73:	push   esp
1101aa75:	iret   
1101aa76:	sar    bh,0xfd
1101aa79:	std    
1101aa7a:	std    
1101aa7b:	(bad)  
1101aa7c:	(bad)  
1101aa7d:	(bad)  
1101aa7e:	(bad)  
1101aa7f:	(bad)  
1101aa80:	(bad)  
1101aa81:	(bad)  
1101aa82:	std    
1101aa83:	(bad)  
1101aa84:	sti    
1101aa85:	sti    
1101aa86:	sti    
1101aa87:	jmp    FWORD PTR [eax+0x68]
1101aa8a:	push   0xff
1101aa8f:	stc    
1101aa90:	add    BYTE PTR [eax],al
1101aa92:	add    BYTE PTR [ebx+0x32000000],dl
1101aa98:	add    BYTE PTR [eax],al
1101aa9a:	add    BYTE PTR [eax+eax*1],cl
1101aa9d:	add    BYTE PTR [eax],al
1101aa9f:	add    DWORD PTR [eax],eax
	...
1101aaa9:	add    BYTE PTR [eax],al
1101aaab:	add    al,BYTE PTR [eax]
1101aaad:	add    BYTE PTR [eax],al
1101aaaf:	push   cs
1101aab0:	add    BYTE PTR [eax],al
1101aab2:	add    BYTE PTR [ebx+0x0],bl
1101aab5:	add    BYTE PTR [eax],al
1101aab7:	jmp    FWORD PTR [ecx+0x69]
1101aaba:	imul   edi,edi,0xfffcfcfc
1101aac0:	(bad)  
1101aac1:	(bad)  
1101aac2:	std    
1101aac3:	(bad)  
1101aac4:	(bad)  
1101aac5:	(bad)  
1101aac6:	std    
1101aac7:	(bad)  
1101aac8:	std    
1101aac9:	sti    
1101aaca:	cli    
1101aacb:	(bad)  
1101aacc:	stc    
1101aacd:	shl    DWORD PTR [edi-0x4e380601],0xff
1101aad4:	cli    
1101aad5:	(bad)  
1101aad6:	(bad)  
1101aad9:	fmul   st(6),st
1101aadb:	(bad)  
1101aadc:	sti    
1101aadd:	fcmove st,st(4)
1101aadf:	(bad)  
1101aae0:	cli    
1101aae1:	rol    ecx,cl
1101aae3:	(bad)  
1101aae4:	stc    
1101aae5:	enter  0xffb2,0xf9
1101aae9:	mov    ebp,0xb1f7ffa2
1101aaee:	xchg   ecx,eax
1101aaef:	push   esi
1101aaf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1101aaf2:	cmp    bh,0xf6
1101aaf5:	sahf   
1101aaf6:	ja     0x1101aaf7
1101aaf8:	cmc    
1101aaf9:	cwde   
1101aafa:	outs   dx,BYTE PTR ds:[esi]
1101aafb:	push   esp
1101aafd:	xchg   ebx,eax
1101aafe:	push   0x638ff3ff
1101ab03:	push   eax
1101ab05:	mov    DWORD PTR [edi+edi*8-0x14],ebx
1101ab09:	adc    DWORD PTR [esi-0x1],0xffffffe9
1101ab0d:	jle    0x1101ab60
1101ab0f:	(bad)  
1101ab10:	jmp    0xf010e9f
1101ab15:	cli    
1101ab16:	clc    
1101ab17:	(bad)  
1101ab18:	std    
1101ab19:	std    
1101ab1a:	std    
1101ab1b:	(bad)  
1101ab1c:	(bad)  
1101ab1d:	(bad)  
1101ab1e:	std    
1101ab1f:	(bad)  
1101ab20:	sti    
1101ab21:	sti    
1101ab22:	sti    
1101ab23:	jmp    FWORD PTR [eax+0x68]
1101ab26:	push   0xff
1101ab2b:	inc    DWORD PTR [eax]
1101ab2d:	add    BYTE PTR [eax],al
1101ab2f:	leave  
1101ab30:	add    BYTE PTR [eax],al
1101ab32:	add    BYTE PTR [ecx+0x0],dh
1101ab35:	add    BYTE PTR [eax],al
1101ab37:	sub    eax,DWORD PTR [eax]
1101ab39:	add    BYTE PTR [eax],al
1101ab3b:	or     al,BYTE PTR [eax]
1101ab3d:	add    BYTE PTR [eax],al
1101ab3f:	add    DWORD PTR [eax],eax
	...
1101ab4d:	add    BYTE PTR [eax],al
1101ab4f:	add    eax,0x1f000000
1101ab54:	add    BYTE PTR [eax],al
1101ab56:	add    bh,bh
1101ab58:	add    DWORD PTR [eax],eax
1101ab5a:	add    bh,bh
1101ab5c:	push   0xfbff6868
1101ab61:	sti    
1101ab62:	sti    
1101ab63:	(bad)  
1101ab64:	(bad)  
1101ab65:	(bad)  
1101ab66:	std    
1101ab67:	(bad)  
1101ab68:	(bad)  
1101ab69:	(bad)  
1101ab6a:	(bad)  
1101ab6b:	(bad)  
1101ab6c:	cld    
1101ab6d:	call   0xd5fbab51
1101ab72:	lods   eax,DWORD PTR ds:[esi]
1101ab73:	(bad)  
1101ab74:	cli    
1101ab75:	rol    edx,cl
1101ab77:	(bad)  
1101ab78:	sti    
1101ab79:	fmul   st(6),st
1101ab7b:	(bad)  
1101ab7c:	sti    
1101ab7d:	fmul   st(6),st
1101ab7f:	(bad)  
1101ab80:	cli    
1101ab81:	aad    0xc4
1101ab83:	(bad)  
1101ab84:	stc    
1101ab85:	retf   0xffb4
1101ab88:	clc    
1101ab89:	mov    ebp,0xb1f7ffa3
1101ab8e:	xchg   ecx,eax
1101ab8f:	push   esi
1101ab91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1101ab92:	cmp    edi,0xfffffff5
1101ab95:	sahf   
1101ab96:	ja     0x1101ab97
1101ab98:	cmc    
1101ab99:	cwde   
1101ab9a:	outs   dx,BYTE PTR ds:[esi]
1101ab9b:	push   esp
1101ab9d:	xchg   ebx,eax
1101ab9e:	addr16 push esp
1101aba1:	nop
1101aba2:	arpl   di,di
1101aba4:	repnz lea ebx,[esi-0x1]
1101aba8:	out    dx,eax
1101aba9:	xchg   DWORD PTR [ecx-0x1],ebx
1101abac:	in     al,dx
1101abad:	adc    BYTE PTR [edi+edi*8-0x8],0xd5
1101abb2:	(bad)  
1101abb3:	(bad)  
1101abb4:	(bad)  
1101abb5:	(bad)  
1101abb6:	std    
1101abb7:	(bad)  
1101abb8:	(bad)  
1101abb9:	(bad)  
1101abba:	std    
1101abbb:	(bad)  
1101abbc:	sti    
1101abbd:	sti    
1101abbe:	sti    
1101abbf:	jmp    DWORD PTR [edi+0x67]
1101abc2:	inc    DWORD PTR [bx+di]
1101abc5:	add    DWORD PTR [eax],eax
1101abc7:	inc    DWORD PTR [eax]
1101abc9:	add    BYTE PTR [eax],al
1101abcb:	inc    DWORD PTR [eax]
1101abcd:	add    BYTE PTR [eax],al
1101abcf:	mov    edx,0x6d000000
1101abd4:	add    BYTE PTR [eax],al
1101abd6:	add    BYTE PTR [edx],ch
1101abd8:	add    BYTE PTR [eax],al
1101abda:	add    BYTE PTR [edx],cl
1101abdc:	add    BYTE PTR [eax],al
1101abde:	add    BYTE PTR [ecx],al
	...
1101abec:	add    BYTE PTR [eax],al
1101abee:	add    BYTE PTR [ebx],al
1101abf0:	add    BYTE PTR [eax],al
1101abf2:	add    BYTE PTR [edi],dl
1101abf4:	add    BYTE PTR [eax],al
1101abf6:	add    bh,bh
1101abf8:	jno    0x1101ac39
1101abfa:	sub    edi,edi
1101abfc:	or     al,0x7
1101abfe:	add    al,0xff
1101ac00:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbff
1101ac07:	(bad)  
1101ac08:	(bad)  
1101ac09:	(bad)  
1101ac0a:	(bad)  
1101ac0b:	(bad)  
1101ac0c:	(bad)  
1101ac0d:	(bad)  
1101ac0e:	(bad)  
1101ac0f:	(bad)  
1101ac10:	sti    
1101ac11:	fmul   st(6),st
1101ac13:	(bad)  
1101ac14:	stc    
1101ac15:	retf   0xffb4
1101ac18:	cli    
1101ac19:	rol    edx,cl
1101ac1b:	(bad)  
1101ac1c:	cli    
1101ac1d:	(bad)  
1101ac1e:	(bad)  
1101ac21:	sar    BYTE PTR [esi-0x4f390601],1
1101ac27:	(bad)  
1101ac28:	clc    
1101ac29:	mov    ebx,0xaff7ff9f
1101ac2e:	(bad)  
1101ac2f:	push   esi
1101ac31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1101ac32:	cmp    edi,0xff759df5
1101ac38:	hlt    
1101ac39:	xchg   edi,eax
1101ac3a:	ins    DWORD PTR es:[edi],dx
1101ac3b:	push   esp
1101ac3d:	xchg   ebx,eax
1101ac3e:	push   sp
1101ac41:	(bad)  
1101ac42:	(bad)  
1101ac43:	push   ebx
1101ac45:	lea    ebx,[esi-0x1]
1101ac48:	repnz mov bl,BYTE PTR [ebx-0x1]
1101ac4c:	idiv   DWORD PTR [edx+eiz*4-0x1010101]
1101ac53:	(bad)  
1101ac54:	(bad)  
1101ac55:	(bad)  
1101ac56:	(bad)  
1101ac57:	(bad)  
1101ac58:	sti    
1101ac59:	sti    
1101ac5a:	sti    
1101ac5b:	jmp    FWORD PTR [eax+0x68]
1101ac5e:	push   0x5070dff
1101ac63:	push   DWORD PTR [edx+0x40]
1101ac66:	sub    bh,bh
1101ac68:	add    BYTE PTR [eax],al
1101ac6a:	add    bh,bh
1101ac6c:	add    BYTE PTR [eax],al
1101ac6e:	add    BYTE PTR [eax+0x6c000000],bh
1101ac74:	add    BYTE PTR [eax],al
1101ac76:	add    BYTE PTR [edx],ch
1101ac78:	add    BYTE PTR [eax],al
1101ac7a:	add    BYTE PTR [edx],cl
1101ac7c:	add    BYTE PTR [eax],al
1101ac7e:	add    BYTE PTR [ecx],al
	...
1101ac8c:	add    BYTE PTR [eax],al
1101ac8e:	add    BYTE PTR [ebx],al
1101ac90:	add    BYTE PTR [eax],al
1101ac92:	add    BYTE PTR [esi],dl
1101ac94:	add    BYTE PTR [eax],al
1101ac96:	add    bh,bh
1101ac98:	scas   al,BYTE PTR es:[edi]
1101ac99:	bound  eax,QWORD PTR [eax-0x1]
1101ac9c:	test   eax,0xcff3e5f
1101aca1:	pop    es
1101aca2:	add    al,0xff
1101aca4:	push   0xfcff6868
1101aca9:	cld    
1101acaa:	cld    
1101acab:	(bad)  
1101acac:	(bad)  
1101acad:	(bad)  
1101acae:	(bad)  
1101acaf:	(bad)  
1101acb0:	std    
1101acb1:	std    
1101acb2:	cld    
1101acb3:	(bad)  
1101acb4:	sti    
1101acb5:	fmul   st(5),st
1101acb7:	(bad)  
1101acb8:	stc    
1101acb9:	les    ebp,FWORD PTR [ebp-0x4e380601]
1101acbf:	(bad)  
1101acc0:	stc    
1101acc1:	lds    ebp,FWORD PTR [esi-0x5c410701]
1101acc7:	push   edi
1101acc9:	mov    ah,0x96
1101accb:	push   esi
1101accd:	stos   DWORD PTR es:[edi],eax
1101acce:	mov    bh,bh
1101acd0:	mul    BYTE PTR [edx-0x650a0084]
1101acd6:	jb     0x1101acd7
1101acd8:	hlt    
1101acd9:	xchg   ebp,eax
1101acda:	imul   edi,edi,0xff6491f4
1101ace0:	hlt    
1101ace1:	mov    fs,WORD PTR [eax-0x1]
1101ace4:	repz mov WORD PTR [esi-0x1],ds
1101ace8:	stc    
1101ace9:	mov    esi,0xfcfdffa4
1101acee:	cld    
1101acef:	(bad)  
1101acf0:	(bad)  
1101acf1:	(bad)  
1101acf2:	(bad)  
1101acf3:	(bad)  
1101acf4:	cld    
1101acf5:	cld    
1101acf6:	sti    
1101acf7:	jmp    DWORD PTR [edi+0x67]
1101acfa:	dec    DWORD PTR [di]
1101acfd:	pop    es
1101acfe:	add    eax,0x3f60aaff
1101ad03:	jmp    FWORD PTR [esi+0xff4062]
1101ad09:	add    BYTE PTR [eax],al
1101ad0b:	inc    DWORD PTR [eax]
1101ad0d:	add    BYTE PTR [eax],al
1101ad0f:	mov    eax,0x6c000000
1101ad14:	add    BYTE PTR [eax],al
1101ad16:	add    BYTE PTR [edx],ch
1101ad18:	add    BYTE PTR [eax],al
1101ad1a:	add    BYTE PTR [edx],cl
1101ad1c:	add    BYTE PTR [eax],al
1101ad1e:	add    BYTE PTR [ecx],al
	...
1101ad2c:	add    BYTE PTR [eax],al
1101ad2e:	add    BYTE PTR [ebx],al
1101ad30:	add    BYTE PTR [eax],al
1101ad32:	add    BYTE PTR [esi],dl
1101ad34:	add    BYTE PTR [eax],al
1101ad36:	add    bh,bh
1101ad38:	mov    ch,0x66
1101ad3a:	inc    ebx
1101ad3b:	(bad)  
1101ad3c:	jmp    0xbb0104c5
1101ad41:	pop    edi
1101ad42:	dec    DWORD PTR ds:0x69ff0407
1101ad49:	imul   ebp,DWORD PTR [ecx-0x1],0xfffbfbfb
1101ad50:	(bad)  
1101ad51:	(bad)  
1101ad52:	std    
1101ad53:	(bad)  
1101ad54:	(bad)  
1101ad55:	(bad)  
1101ad56:	(bad)  
1101ad57:	(bad)  
1101ad58:	cld    
1101ad59:	call   0xd1fbad3d
1101ad5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1101ad5f:	push   edi
1101ad61:	mov    ch,0x97
1101ad63:	push   edi
1101ad65:	mov    al,0x90
1101ad67:	push   esi
1101ad69:	stos   BYTE PTR es:[edi],al
1101ad6a:	xchg   edi,edi
1101ad6c:	cmc    
1101ad6d:	mov    ds:0x9cf5ff7d,eax
1101ad72:	je     0x1101ad73
1101ad74:	hlt    
1101ad75:	xchg   esi,eax
1101ad76:	imul   edi,edi,0xfffffff4
1101ad79:	xchg   ecx,eax
1101ad7a:	gs push ebx
1101ad7d:	mov    fs,WORD PTR [eax-0x1]
1101ad80:	cmc    
1101ad81:	fwait
1101ad82:	jae    0x1101ad83
1101ad84:	sti    
1101ad85:	fcmove st,st(2)
1101ad87:	(bad)  
1101ad88:	(bad)  
1101ad89:	(bad)  
1101ad8a:	std    
1101ad8b:	(bad)  
1101ad8c:	(bad)  
1101ad8d:	(bad)  
1101ad8e:	(bad)  
1101ad8f:	(bad)  
1101ad90:	sti    
1101ad91:	sti    
1101ad92:	sti    
1101ad93:	jmp    FWORD PTR [eax+0x68]
1101ad96:	push   0x5070dff
1101ad9b:	jmp    FWORD PTR [edx-0x1600c0a0]
1101ada1:	test   BYTE PTR [edi-0x1],dl
1101ada4:	mov    ch,0x66
1101ada6:	inc    ebx
1101ada7:	inc    DWORD PTR [eax]
1101ada9:	add    BYTE PTR [eax],al
1101adab:	inc    DWORD PTR [eax]
1101adad:	add    BYTE PTR [eax],al
1101adaf:	mov    eax,0x6c000000
1101adb4:	add    BYTE PTR [eax],al
1101adb6:	add    BYTE PTR [edx],ch
1101adb8:	add    BYTE PTR [eax],al
1101adba:	add    BYTE PTR [edx],cl
1101adbc:	add    BYTE PTR [eax],al
1101adbe:	add    BYTE PTR [ecx],al
	...
1101adcc:	add    BYTE PTR [eax],al
1101adce:	add    BYTE PTR [ebx],al
1101add0:	add    BYTE PTR [eax],al
1101add2:	add    BYTE PTR [esi],dl
1101add4:	add    BYTE PTR [eax],al
1101add6:	add    bh,bh
1101add8:	mov    dh,0x67
1101adda:	inc    esp
1101addb:	push   ecx
1101addd:	mov    BYTE PTR [edx-0x1],bl
1101ade0:	jmp    0xbb010569
1101ade5:	pop    edi
1101ade6:	dec    DWORD PTR ds:[edi+eax*1]
1101adea:	add    al,0xff
1101adec:	imul   ebp,DWORD PTR [ecx+0x69],0xfcfcfcff
1101adf3:	(bad)  
1101adf4:	(bad)  
1101adf5:	(bad)  
1101adf6:	(bad)  
1101adf7:	(bad)  
1101adf8:	(bad)  
1101adf9:	(bad)  
1101adfa:	(bad)  
1101adfb:	(bad)  
1101adfc:	(bad)  
1101adfd:	sti    
1101adfe:	cli    
1101adff:	(bad)  
1101ae00:	cld    
1101ae01:	loop   0x1101add9
1101ae03:	(bad)  
1101ae04:	stc    
1101ae05:	les    ebp,FWORD PTR [edi+edi*8-0x735109]
1101ae0c:	neg    BYTE PTR [edi-0x640a0088]
1101ae12:	jb     0x1101ae13
1101ae14:	mul    BYTE PTR [edx-0x49070084]
1101ae1a:	cwde   
1101ae1b:	(bad)  
1101ae1c:	sti    
1101ae1d:	fmul   st,st(0)
1101ae1f:	(bad)  
1101ae20:	std    
1101ae21:	cli    
1101ae22:	stc    
1101ae23:	(bad)  
1101ae24:	(bad)  
1101ae25:	(bad)  
1101ae26:	std    
1101ae27:	(bad)  
1101ae28:	std    
1101ae29:	std    
1101ae2a:	std    
1101ae2b:	(bad)  
1101ae2c:	cld    
1101ae2d:	cld    
1101ae2e:	cld    
1101ae2f:	jmp    FWORD PTR [eax+0x68]
1101ae32:	push   0x4070cff
1101ae37:	jmp    FWORD PTR [edx-0x1600c0a0]
1101ae3d:	adc    DWORD PTR [edi-0x1],0xfffffff1
1101ae41:	mov    BYTE PTR [edx-0x1],bl
1101ae44:	mov    dh,0x67
1101ae46:	inc    esp
1101ae47:	inc    DWORD PTR [eax]
1101ae49:	add    BYTE PTR [eax],al
1101ae4b:	inc    DWORD PTR [eax]
1101ae4d:	add    BYTE PTR [eax],al
1101ae4f:	mov    eax,0x6c000000
1101ae54:	add    BYTE PTR [eax],al
1101ae56:	add    BYTE PTR [edx],ch
1101ae58:	add    BYTE PTR [eax],al
1101ae5a:	add    BYTE PTR [edx],cl
1101ae5c:	add    BYTE PTR [eax],al
1101ae5e:	add    BYTE PTR [ecx],al
	...
1101ae6c:	add    BYTE PTR [eax],al
1101ae6e:	add    BYTE PTR [ebx],al
1101ae70:	add    BYTE PTR [eax],al
1101ae72:	add    BYTE PTR [esi],dl
1101ae74:	add    BYTE PTR [eax],al
1101ae76:	add    bh,bh
1101ae78:	mov    bh,0x67
1101ae7a:	inc    esp
1101ae7b:	push   ebx
1101ae7d:	mov    DWORD PTR [edx-0x1],ebx
1101ae80:	icebp  
1101ae81:	mov    BYTE PTR [edx-0x1],bl
1101ae84:	jmp    0x3e5f:0xa9ff5784
1101ae8b:	dec    DWORD PTR ds:0x68ff0407
1101ae91:	push   0xfbfbff68
1101ae96:	sti    
1101ae97:	(bad)  
1101ae98:	(bad)  
1101ae99:	(bad)  
1101ae9a:	std    
1101ae9b:	(bad)  
1101ae9c:	std    
1101ae9d:	std    
1101ae9e:	std    
1101ae9f:	(bad)  
1101aea0:	(bad)  
1101aea1:	(bad)  
1101aea2:	std    
1101aea3:	(bad)  
1101aea4:	(bad)  
1101aea5:	(bad)  
1101aea6:	std    
1101aea7:	(bad)  
1101aea8:	std    
1101aea9:	std    
1101aeaa:	std    
1101aeab:	(bad)  
1101aeac:	(bad)  
1101aead:	(bad)  
1101aeae:	std    
1101aeaf:	(bad)  
1101aeb0:	std    
1101aeb1:	std    
1101aeb2:	std    
1101aeb3:	(bad)  
1101aeb4:	(bad)  
1101aeb5:	(bad)  
1101aeb6:	(bad)  
1101aeb7:	(bad)  
1101aeb8:	(bad)  
1101aeb9:	(bad)  
1101aeba:	(bad)  
1101aebb:	(bad)  
1101aebc:	(bad)  
1101aebd:	(bad)  
1101aebe:	(bad)  
1101aebf:	(bad)  
1101aec0:	std    
1101aec1:	std    
1101aec2:	std    
1101aec3:	(bad)  
1101aec4:	(bad)  
1101aec5:	(bad)  
1101aec6:	std    
1101aec7:	(bad)  
1101aec8:	sti    
1101aec9:	sti    
1101aeca:	sti    
1101aecb:	jmp    DWORD PTR [edi+0x67]
1101aece:	dec    DWORD PTR [di]
1101aed1:	pop    es
1101aed2:	add    al,0xff
1101aed4:	stos   BYTE PTR es:[edi],al
1101aed5:	pusha  
1101aed6:	aas    
1101aed7:	(bad)  
1101aed8:	jmp    0x5a88:0xf1ff5784
1101aedf:	push   ebx
1101aee1:	mov    DWORD PTR [edx-0x1],ebx
1101aee4:	mov    bh,0x67
1101aee6:	inc    esp
1101aee7:	inc    DWORD PTR [eax]
1101aee9:	add    BYTE PTR [eax],al
1101aeeb:	inc    DWORD PTR [eax]
1101aeed:	add    BYTE PTR [eax],al
1101aeef:	mov    bh,0x0
1101aef1:	add    BYTE PTR [eax],al
1101aef3:	imul   eax,DWORD PTR [eax],0x0
1101aef6:	add    BYTE PTR [edx],ch
1101aef8:	add    BYTE PTR [eax],al
1101aefa:	add    BYTE PTR [edx],cl
1101aefc:	add    BYTE PTR [eax],al
1101aefe:	add    BYTE PTR [ecx],al
	...
1101af0c:	add    BYTE PTR [eax],al
1101af0e:	add    BYTE PTR [ebx],al
1101af10:	add    BYTE PTR [eax],al
1101af12:	add    BYTE PTR ds:0xff000000,dl
1101af18:	mov    bh,0x67
1101af1a:	inc    esp
1101af1b:	push   esp
1101af1d:	mov    bl,BYTE PTR [ebx-0x1]
1101af20:	xrelease mov DWORD PTR [ebx-0x1],ebx
1101af24:	icebp  
1101af25:	mov    BYTE PTR [edx-0x1],bl
1101af28:	jmp    0xbb0106b1
1101af2d:	pop    edi
1101af2e:	dec    DWORD PTR ds:[edi+eax*1]
1101af32:	add    al,0xff
1101af34:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbff
1101af3b:	(bad)  
1101af3c:	std    
1101af3d:	std    
1101af3e:	std    
1101af3f:	(bad)  
1101af40:	(bad)  
1101af41:	(bad)  
1101af42:	(bad)  
1101af43:	(bad)  
1101af44:	(bad)  
1101af45:	(bad)  
1101af46:	std    
1101af47:	(bad)  
1101af48:	(bad)  
1101af49:	(bad)  
1101af4a:	std    
1101af4b:	(bad)  
1101af4c:	(bad)  
1101af4d:	(bad)  
1101af4e:	(bad)  
1101af4f:	(bad)  
1101af50:	(bad)  
1101af51:	(bad)  
1101af52:	std    
1101af53:	(bad)  
1101af54:	(bad)  
1101af55:	(bad)  
1101af56:	(bad)  
1101af57:	(bad)  
1101af58:	(bad)  
1101af59:	(bad)  
1101af5a:	(bad)  
1101af5b:	(bad)  
1101af5c:	(bad)  
1101af5d:	(bad)  
1101af5e:	(bad)  
1101af5f:	(bad)  
1101af60:	std    
1101af61:	std    
1101af62:	std    
1101af63:	(bad)  
1101af64:	sti    
1101af65:	sti    
1101af66:	sti    
1101af67:	jmp    FWORD PTR [eax+0x68]
1101af6a:	push   0x4070dff
1101af6f:	jmp    FWORD PTR [edx-0x1600c0a0]
1101af75:	adc    DWORD PTR [edi-0x1],0xfffffff1
1101af79:	mov    BYTE PTR [edx-0x1],bl
1101af7c:	xrelease mov DWORD PTR [edx-0x1],ebx
1101af80:	xrelease mov DWORD PTR [edx-0x1],ebx
1101af84:	mov    bh,0x67
1101af86:	inc    esp
1101af87:	inc    DWORD PTR [eax]
1101af89:	add    BYTE PTR [eax],al
1101af8b:	inc    DWORD PTR [eax]
1101af8d:	add    BYTE PTR [eax],al
1101af8f:	mov    cl,0x0
1101af91:	add    BYTE PTR [eax],al
1101af93:	push   0x28000000
1101af98:	add    BYTE PTR [eax],al
1101af9a:	add    BYTE PTR [ecx],cl
1101af9c:	add    BYTE PTR [eax],al
1101af9e:	add    BYTE PTR [ecx],al
	...
1101afac:	add    BYTE PTR [eax],al
1101afae:	add    BYTE PTR [ebx],al
1101afb0:	add    BYTE PTR [eax],al
1101afb2:	add    BYTE PTR [edx],dl
1101afb4:	add    BYTE PTR [eax],al
1101afb6:	add    bh,bh
1101afb8:	mov    bh,0x67
1101afba:	inc    esp
1101afbb:	push   esp
1101afbd:	mov    bl,BYTE PTR [ebx-0x1]
1101afc0:	hlt    
1101afc1:	mov    bl,BYTE PTR [ebx-0x1]
1101afc4:	xrelease mov DWORD PTR [edx-0x1],ebx
1101afc8:	icebp  
1101afc9:	mov    BYTE PTR [edx-0x1],bl
1101afcc:	jmp    0xbb010755
1101afd1:	pop    edi
1101afd2:	dec    DWORD PTR ds:[edi+eax*1]
1101afd6:	add    al,0xff
1101afd8:	push   0xfcff6868
1101afdd:	cld    
1101afde:	cld    
1101afdf:	(bad)  
1101afe0:	(bad)  
1101afe1:	(bad)  
1101afe2:	std    
1101afe3:	(bad)  
1101afe4:	(bad)  
1101afe5:	(bad)  
1101afe6:	(bad)  
1101afe7:	(bad)  
1101afe8:	(bad)  
1101afe9:	(bad)  
1101afea:	std    
1101afeb:	(bad)  
1101afec:	(bad)  
1101afed:	(bad)  
1101afee:	(bad)  
1101afef:	(bad)  
1101aff0:	std    
1101aff1:	std    
1101aff2:	std    
1101aff3:	(bad)  
1101aff4:	(bad)  
1101aff5:	(bad)  
1101aff6:	(bad)  
1101aff7:	(bad)  
1101aff8:	(bad)  
1101aff9:	(bad)  
1101affa:	(bad)  
1101affb:	(bad)  
1101affc:	(bad)  
1101affd:	(bad)  
1101affe:	(bad)  
1101afff:	(bad)  
1101b000:	sti    
1101b001:	sti    
1101b002:	sti    
1101b003:	jmp    DWORD PTR [edi+0x67]
1101b006:	dec    DWORD PTR [di]
1101b009:	pop    es
1101b00a:	add    al,0xff
1101b00c:	stos   BYTE PTR es:[edi],al
1101b00d:	pusha  
1101b00e:	aas    
1101b00f:	(bad)  
1101b010:	jmp    0x3010799
1101b015:	mov    BYTE PTR [edx-0x1],bl
1101b018:	xrelease mov DWORD PTR [edx-0x1],ebx
1101b01c:	xrelease mov DWORD PTR [edx-0x1],ebx
1101b020:	xrelease mov DWORD PTR [edx-0x1],ebx
1101b024:	mov    bh,0x67
1101b026:	inc    esp
1101b027:	inc    DWORD PTR [eax]
1101b029:	add    BYTE PTR [eax],al
1101b02b:	inc    DWORD PTR [eax]
1101b02d:	add    BYTE PTR [eax],al
1101b02f:	call   0x0:0x5a000000
1101b036:	add    BYTE PTR [ebx],ah
1101b038:	add    BYTE PTR [eax],al
1101b03a:	add    BYTE PTR [eax],cl
1101b03c:	add    BYTE PTR [eax],al
1101b03e:	add    BYTE PTR [ecx],al
	...
1101b04c:	add    BYTE PTR [eax],al
1101b04e:	add    BYTE PTR [edx],al
1101b050:	add    BYTE PTR [eax],al
1101b052:	add    BYTE PTR ds:0xff000000,cl
1101b058:	mov    DWORD PTR [ebp+0x33],ecx
1101b05b:	push   DWORD PTR [edi-0x4800bb99]
1101b061:	addr16 inc esp
1101b063:	push   DWORD PTR [edi-0x4900bb99]
1101b069:	addr16 inc esp
1101b06b:	push   DWORD PTR [ebp-0x5100bc9a]
1101b071:	bound  eax,QWORD PTR [eax-0x1]
1101b074:	jno    0x1101b0b5
1101b076:	sub    edi,edi
1101b078:	add    DWORD PTR [eax],eax
1101b07a:	add    bh,bh
1101b07c:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbff
1101b083:	(bad)  
1101b084:	(bad)  
1101b085:	(bad)  
1101b086:	std    
1101b087:	(bad)  
1101b088:	std    
1101b089:	std    
1101b08a:	std    
1101b08b:	(bad)  
1101b08c:	(bad)  
1101b08d:	(bad)  
1101b08e:	std    
1101b08f:	(bad)  
1101b090:	std    
1101b091:	std    
1101b092:	std    
1101b093:	(bad)  
1101b094:	(bad)  
1101b095:	(bad)  
1101b096:	(bad)  
1101b097:	(bad)  
1101b098:	(bad)  
1101b099:	(bad)  
1101b09a:	std    
1101b09b:	(bad)  
1101b09c:	sti    
1101b09d:	sti    
1101b09e:	sti    
1101b09f:	jmp    FWORD PTR [eax+0x68]
1101b0a2:	push   0x1ff
1101b0a7:	push   DWORD PTR [edx+0x40]
1101b0aa:	sub    bh,bh
1101b0ac:	scas   al,BYTE PTR es:[edi]
1101b0ad:	bound  eax,QWORD PTR [eax-0x1]
1101b0b0:	mov    ch,0x66
1101b0b2:	inc    ebx
1101b0b3:	push   DWORD PTR [esi-0x4900bb99]
1101b0b9:	addr16 inc esp
1101b0bb:	push   DWORD PTR [esi-0x4900bb99]
1101b0c1:	addr16 inc esp
1101b0c3:	dec    DWORD PTR [ecx+0xff334d]
1101b0c9:	add    BYTE PTR [eax],al
1101b0cb:	inc    DWORD PTR [eax]
1101b0cd:	add    BYTE PTR [eax],al
1101b0cf:	push   0x0
1101b0d1:	add    BYTE PTR [eax],al
1101b0d3:	add    BYTE PTR ds:[eax],al
1101b0d6:	add    BYTE PTR [eax],bl
1101b0d8:	add    BYTE PTR [eax],al
1101b0da:	add    BYTE PTR [esi],al
	...
1101b0ec:	add    BYTE PTR [eax],al
1101b0ee:	add    BYTE PTR [ecx],al
1101b0f0:	add    BYTE PTR [eax],al
1101b0f2:	add    BYTE PTR [esi],al
1101b0f4:	add    BYTE PTR [eax],al
1101b0f6:	add    bh,bh
1101b0f8:	add    BYTE PTR [eax],al
1101b0fa:	add    bh,bh
1101b0fc:	add    BYTE PTR [eax],al
1101b0fe:	add    bh,bh
1101b100:	add    BYTE PTR [eax],al
1101b102:	add    bh,bh
1101b104:	add    BYTE PTR [eax],al
1101b106:	add    bh,bh
1101b108:	add    BYTE PTR [eax],al
1101b10a:	add    bh,bh
1101b10c:	add    BYTE PTR [eax],al
1101b10e:	add    bh,bh
1101b110:	add    BYTE PTR [eax],al
1101b112:	add    bh,bh
1101b114:	add    BYTE PTR [eax],al
1101b116:	add    bh,bh
1101b118:	add    BYTE PTR [eax],al
1101b11a:	add    bh,bh
1101b11c:	add    BYTE PTR [eax],al
1101b11e:	add    bh,bh
1101b120:	imul   ebp,DWORD PTR [ecx+0x69],0xfcfcfcff
1101b127:	(bad)  
1101b128:	std    
1101b129:	std    
1101b12a:	std    
1101b12b:	(bad)  
1101b12c:	(bad)  
1101b12d:	(bad)  
1101b12e:	(bad)  
1101b12f:	(bad)  
1101b130:	std    
1101b131:	std    
1101b132:	std    
1101b133:	(bad)  
1101b134:	(bad)  
1101b135:	(bad)  
1101b136:	(bad)  
1101b137:	(bad)  
1101b138:	sti    
1101b139:	sti    
1101b13a:	sti    
1101b13b:	jmp    FWORD PTR [eax+0x68]
1101b13e:	push   0xff
1101b143:	inc    DWORD PTR [eax]
1101b145:	add    BYTE PTR [eax],al
1101b147:	inc    DWORD PTR [eax]
1101b149:	add    BYTE PTR [eax],al
1101b14b:	inc    DWORD PTR [eax]
1101b14d:	add    BYTE PTR [eax],al
1101b14f:	inc    DWORD PTR [eax]
1101b151:	add    BYTE PTR [eax],al
1101b153:	inc    DWORD PTR [eax]
1101b155:	add    BYTE PTR [eax],al
1101b157:	inc    DWORD PTR [eax]
1101b159:	add    BYTE PTR [eax],al
1101b15b:	inc    DWORD PTR [eax]
1101b15d:	add    BYTE PTR [eax],al
1101b15f:	inc    DWORD PTR [eax]
1101b161:	add    BYTE PTR [eax],al
1101b163:	inc    DWORD PTR [eax]
1101b165:	add    BYTE PTR [eax],al
1101b167:	inc    DWORD PTR [eax]
1101b169:	add    BYTE PTR [eax],al
1101b16b:	inc    DWORD PTR [eax]
1101b16d:	add    BYTE PTR [eax],al
1101b16f:	xor    eax,DWORD PTR [eax]
1101b171:	add    BYTE PTR [eax],al
1101b173:	push   ds
1101b174:	add    BYTE PTR [eax],al
1101b176:	add    BYTE PTR [eax+eax*1],cl
1101b179:	add    BYTE PTR [eax],al
1101b17b:	add    eax,DWORD PTR [eax]
	...
1101b191:	add    BYTE PTR [eax],al
1101b193:	add    al,BYTE PTR [eax]
1101b195:	add    BYTE PTR [eax],al
1101b197:	push   es
1101b198:	add    BYTE PTR [eax],al
1101b19a:	add    BYTE PTR ds:0x12000000,cl
1101b1a0:	add    BYTE PTR [eax],al
1101b1a2:	add    BYTE PTR ds:0x16000000,dl
1101b1a8:	add    BYTE PTR [eax],al
1101b1aa:	add    BYTE PTR [esi],dl
1101b1ac:	add    BYTE PTR [eax],al
1101b1ae:	add    BYTE PTR [esi],dl
1101b1b0:	add    BYTE PTR [eax],al
1101b1b2:	add    BYTE PTR [esi],dl
1101b1b4:	add    BYTE PTR [eax],al
1101b1b6:	add    BYTE PTR [edi],dl
1101b1b8:	add    BYTE PTR [eax],al
1101b1ba:	add    BYTE PTR [edi],bl
1101b1bc:	add    BYTE PTR [eax],al
1101b1be:	add    BYTE PTR [edx+0x0],bl
1101b1c1:	add    BYTE PTR [eax],al
1101b1c3:	icebp  
1101b1c4:	push   0xfbfe6868
1101b1c9:	sti    
1101b1ca:	sti    
1101b1cb:	(bad)  
1101b1cc:	(bad)  
1101b1cd:	(bad)  
1101b1ce:	(bad)  
1101b1cf:	(bad)  
1101b1d0:	std    
1101b1d1:	std    
1101b1d2:	std    
1101b1d3:	(bad)  
1101b1d4:	sti    
1101b1d5:	sti    
1101b1d6:	sti    
1101b1d7:	jmp    DWORD PTR [edi+0x67]
1101b1da:	inc    BYTE PTR [bx+si]
1101b1dd:	add    BYTE PTR [eax],al
1101b1df:	icebp  
1101b1e0:	add    BYTE PTR [eax],al
1101b1e2:	add    BYTE PTR [ecx+0x0],bl
1101b1e5:	add    BYTE PTR [eax],al
1101b1e7:	pop    ds
1101b1e8:	add    BYTE PTR [eax],al
1101b1ea:	add    BYTE PTR [edi],dl
1101b1ec:	add    BYTE PTR [eax],al
1101b1ee:	add    BYTE PTR [esi],dl
1101b1f0:	add    BYTE PTR [eax],al
1101b1f2:	add    BYTE PTR [esi],dl
1101b1f4:	add    BYTE PTR [eax],al
1101b1f6:	add    BYTE PTR [esi],dl
1101b1f8:	add    BYTE PTR [eax],al
1101b1fa:	add    BYTE PTR [esi],dl
1101b1fc:	add    BYTE PTR [eax],al
1101b1fe:	add    BYTE PTR [esi],dl
1101b200:	add    BYTE PTR [eax],al
1101b202:	add    BYTE PTR [esi],dl
1101b204:	add    BYTE PTR [eax],al
1101b206:	add    BYTE PTR ds:0x14000000,dl
1101b20c:	add    BYTE PTR [eax],al
1101b20e:	add    BYTE PTR [eax],dl
1101b210:	add    BYTE PTR [eax],al
1101b212:	add    BYTE PTR [ecx],cl
1101b214:	add    BYTE PTR [eax],al
1101b216:	add    BYTE PTR [ebx],al
1101b218:	add    BYTE PTR [eax],al
1101b21a:	add    BYTE PTR [ecx],al
	...
1101b234:	add    BYTE PTR [eax],al
1101b236:	add    BYTE PTR [ecx],al
1101b238:	add    BYTE PTR [eax],al
1101b23a:	add    BYTE PTR [edx],al
1101b23c:	add    BYTE PTR [eax],al
1101b23e:	add    BYTE PTR [ebx],al
1101b240:	add    BYTE PTR [eax],al
1101b242:	add    BYTE PTR [ebx],al
1101b244:	add    BYTE PTR [eax],al
1101b246:	add    BYTE PTR [ebx],al
1101b248:	add    BYTE PTR [eax],al
1101b24a:	add    BYTE PTR [ebx],al
1101b24c:	add    BYTE PTR [eax],al
1101b24e:	add    BYTE PTR [ebx],al
1101b250:	add    BYTE PTR [eax],al
1101b252:	add    BYTE PTR [ebx],al
1101b254:	add    BYTE PTR [eax],al
1101b256:	add    BYTE PTR [ebx],al
1101b258:	add    BYTE PTR [eax],al
1101b25a:	add    BYTE PTR ds:0xe000000,al
1101b260:	add    BYTE PTR [eax],al
1101b262:	add    BYTE PTR [eax+0x0],dl
1101b265:	add    BYTE PTR [eax],al
1101b267:	icebp  
1101b268:	imul   ebp,DWORD PTR [ecx+0x69],0xfbfbfbfe
1101b26f:	(bad)  
1101b270:	sti    
1101b271:	sti    
1101b272:	sti    
1101b273:	jmp    FWORD PTR [eax+0x68]
1101b276:	push   0xfe
1101b27b:	lock add BYTE PTR [eax],al
1101b27e:	add    BYTE PTR [edi+0x0],cl
1101b281:	add    BYTE PTR [eax],al
1101b283:	push   cs
1101b284:	add    BYTE PTR [eax],al
1101b286:	add    BYTE PTR ds:0x3000000,al
1101b28c:	add    BYTE PTR [eax],al
1101b28e:	add    BYTE PTR [ebx],al
1101b290:	add    BYTE PTR [eax],al
1101b292:	add    BYTE PTR [ebx],al
1101b294:	add    BYTE PTR [eax],al
1101b296:	add    BYTE PTR [ebx],al
1101b298:	add    BYTE PTR [eax],al
1101b29a:	add    BYTE PTR [ebx],al
1101b29c:	add    BYTE PTR [eax],al
1101b29e:	add    BYTE PTR [ebx],al
1101b2a0:	add    BYTE PTR [eax],al
1101b2a2:	add    BYTE PTR [ebx],al
1101b2a4:	add    BYTE PTR [eax],al
1101b2a6:	add    BYTE PTR [ebx],al
1101b2a8:	add    BYTE PTR [eax],al
1101b2aa:	add    BYTE PTR [ebx],al
1101b2ac:	add    BYTE PTR [eax],al
1101b2ae:	add    BYTE PTR [edx],al
1101b2b0:	add    BYTE PTR [eax],al
1101b2b2:	add    BYTE PTR [ecx],al
	...
1101b2fc:	add    BYTE PTR [eax],al
1101b2fe:	add    BYTE PTR [edx],al
1101b300:	add    BYTE PTR [eax],al
1101b302:	add    BYTE PTR [edx],cl
1101b304:	add    BYTE PTR [eax],al
1101b306:	add    BYTE PTR [ebp+0x0],cl
1101b309:	add    BYTE PTR [eax],al
1101b30b:	icebp  
1101b30c:	push   0x67fe6868
1101b311:	addr16 inc BYTE PTR [bx+si]
1101b315:	add    BYTE PTR [eax],al
1101b317:	lock add BYTE PTR [eax],al
1101b31a:	add    BYTE PTR [ebx+0x0],cl
1101b31d:	add    BYTE PTR [eax],al
1101b31f:	or     al,BYTE PTR [eax]
1101b321:	add    BYTE PTR [eax],al
1101b323:	add    al,BYTE PTR [eax]
	...
1101b3a1:	add    BYTE PTR [eax],al
1101b3a3:	add    al,BYTE PTR [eax]
1101b3a5:	add    BYTE PTR [eax],al
1101b3a7:	or     DWORD PTR [eax],eax
1101b3a9:	add    BYTE PTR [eax],al
1101b3ab:	dec    eax
1101b3ac:	add    BYTE PTR [eax],al
1101b3ae:	add    al,dh
1101b3b0:	add    BYTE PTR [eax],al
1101b3b2:	add    bh,ch
1101b3b4:	add    BYTE PTR [eax],al
1101b3b6:	add    BYTE PTR [esi+0x0],al
1101b3b9:	add    BYTE PTR [eax],al
1101b3bb:	or     DWORD PTR [eax],eax
1101b3bd:	add    BYTE PTR [eax],al
1101b3bf:	add    al,BYTE PTR [eax]
	...
1101b445:	add    BYTE PTR [eax],al
1101b447:	add    DWORD PTR [eax],eax
1101b449:	add    BYTE PTR [eax],al
1101b44b:	add    eax,0x3f000000
1101b450:	add    BYTE PTR [eax],al
1101b452:	add    BYTE PTR ds:0x5000000,bh
1101b458:	add    BYTE PTR [eax],al
1101b45a:	add    BYTE PTR [ecx],al
	...
1101b4a0:	inc    BYTE PTR [eax]
1101b4a2:	add    BYTE PTR [eax],al
1101b4a4:	ud0    edi,edi
1101b4a7:	push   eax
1101b4a9:	add    BYTE PTR [eax],al
1101b4ab:	add    BYTE PTR [ebx],al
1101b4ad:	(bad)  
1101b4ae:	(bad)  
1101b4af:	push   eax
1101b4b1:	add    BYTE PTR [eax],al
1101b4b3:	add    BYTE PTR [ecx],al
1101b4b5:	(bad)  
1101b4b6:	(bad)  
1101b4b7:	jmp    eax
1101b4b9:	add    BYTE PTR [eax],al
1101b4bb:	add    BYTE PTR [ecx],al
1101b4bd:	(bad)  
1101b4be:	(bad)  
1101b4bf:	jmp    eax
1101b4c1:	add    BYTE PTR [eax],al
1101b4c3:	add    BYTE PTR [eax],al
1101b4c5:	(bad)  
1101b4c6:	(bad)  
1101b4c7:	jmp    eax
1101b4c9:	add    BYTE PTR [eax],al
1101b4cb:	add    BYTE PTR [eax],al
1101b4cd:	(bad)  
1101b4ce:	(bad)  
1101b4cf:	jmp    eax
1101b4d1:	add    BYTE PTR [eax],al
1101b4d3:	add    BYTE PTR [eax],al
1101b4d5:	(bad)  
1101b4d6:	(bad)  
1101b4d7:	jmp    eax
1101b4d9:	add    BYTE PTR [eax],al
1101b4db:	add    BYTE PTR [eax],al
1101b4dd:	(bad)  
1101b4de:	(bad)  
1101b4df:	jmp    eax
1101b4e1:	add    BYTE PTR [eax],al
1101b4e3:	add    BYTE PTR [eax],al
1101b4e5:	(bad)  
1101b4e6:	(bad)  
1101b4e7:	jmp    eax
1101b4e9:	add    BYTE PTR [eax],al
1101b4eb:	add    BYTE PTR [eax],al
1101b4ed:	(bad)  
1101b4ee:	(bad)  
1101b4ef:	jmp    eax
1101b4f1:	add    BYTE PTR [eax],al
1101b4f3:	add    BYTE PTR [eax],al
1101b4f5:	(bad)  
1101b4f6:	(bad)  
1101b4f7:	inc    eax
1101b4f9:	add    BYTE PTR [eax],al
1101b4fb:	add    BYTE PTR [eax],al
1101b4fd:	(bad)  
1101b4fe:	(bad)  
1101b4ff:	inc    DWORD PTR [eax+0x0]
1101b505:	(bad)  
1101b506:	(bad)  
1101b507:	inc    DWORD PTR [eax+0x0]
1101b50d:	(bad)  
1101b50e:	(bad)  
1101b50f:	inc    DWORD PTR [eax]
1101b511:	add    BYTE PTR [eax],al
1101b513:	add    BYTE PTR [eax],al
1101b515:	(bad)  
1101b516:	(bad)  
1101b517:	inc    DWORD PTR [eax]
1101b519:	add    BYTE PTR [eax],al
1101b51b:	add    BYTE PTR [eax],al
1101b51d:	(bad)  
1101b51e:	(bad)  
1101b51f:	inc    DWORD PTR [eax]
1101b521:	add    BYTE PTR [eax],al
1101b523:	add    BYTE PTR [eax],al
1101b525:	(bad)  
1101b526:	(bad)  
1101b527:	inc    DWORD PTR [eax]
1101b529:	add    BYTE PTR [eax],al
1101b52b:	add    BYTE PTR [eax],al
1101b52d:	(bad)  
1101b52e:	(bad)  
1101b52f:	inc    DWORD PTR [eax]
1101b531:	add    BYTE PTR [eax],al
1101b533:	add    BYTE PTR [eax],al
1101b535:	(bad)  
1101b536:	(bad)  
1101b537:	inc    DWORD PTR [eax]
1101b539:	add    BYTE PTR [eax],al
1101b53b:	add    BYTE PTR [eax],al
1101b53d:	(bad)  
1101b53e:	(bad)  
1101b53f:	inc    DWORD PTR [eax]
1101b541:	add    BYTE PTR [eax],al
1101b543:	add    BYTE PTR [eax],al
1101b545:	(bad)  
1101b546:	(bad)  
1101b547:	inc    DWORD PTR [eax]
1101b549:	add    BYTE PTR [eax],al
1101b54b:	add    BYTE PTR [eax],al
1101b54d:	(bad)  
1101b54e:	(bad)  
1101b54f:	inc    DWORD PTR [eax]
1101b551:	add    BYTE PTR [eax],al
1101b553:	add    BYTE PTR [eax],al
1101b555:	(bad)  
1101b556:	(bad)  
1101b557:	inc    DWORD PTR [eax+0x0]
1101b55d:	(bad)  
1101b55e:	(bad)  
1101b55f:	inc    eax
1101b561:	add    BYTE PTR [eax],al
1101b563:	add    BYTE PTR [eax],al
1101b565:	(bad)  
1101b566:	(bad)  
1101b567:	jmp    eax
1101b569:	add    BYTE PTR [eax],al
1101b56b:	add    BYTE PTR [eax],al
1101b56d:	(bad)  
1101b56e:	(bad)  
1101b56f:	jmp    eax
1101b571:	add    BYTE PTR [eax],al
1101b573:	add    BYTE PTR [eax],al
1101b575:	(bad)  
1101b576:	(bad)  
1101b577:	jmp    eax
1101b579:	add    BYTE PTR [eax],al
1101b57b:	add    BYTE PTR [eax],al
1101b57d:	(bad)  
1101b57e:	(bad)  
1101b57f:	jmp    eax
1101b581:	add    BYTE PTR [eax],al
1101b583:	add    BYTE PTR [eax],al
1101b585:	(bad)  
1101b586:	(bad)  
1101b587:	jmp    eax
1101b589:	add    BYTE PTR [eax],al
1101b58b:	add    BYTE PTR [eax],al
1101b58d:	(bad)  
1101b58e:	(bad)  
1101b58f:	jmp    eax
1101b591:	add    BYTE PTR [eax],al
1101b593:	add    BYTE PTR [eax],al
1101b595:	(bad)  
1101b596:	(bad)  
1101b597:	jmp    eax
1101b599:	add    BYTE PTR [eax],al
1101b59b:	add    BYTE PTR [eax],al
1101b59d:	(bad)  
1101b59e:	(bad)  
1101b59f:	jmp    eax
1101b5a1:	add    BYTE PTR [eax],al
1101b5a3:	add    BYTE PTR [eax],al
1101b5a5:	(bad)  
1101b5a6:	(bad)  
1101b5a7:	jmp    eax
1101b5a9:	add    BYTE PTR [eax],al
1101b5ab:	add    BYTE PTR [ecx],al
1101b5ad:	(bad)  
1101b5ae:	(bad)  
1101b5af:	jmp    eax
1101b5b1:	add    BYTE PTR [eax],al
1101b5b3:	add    BYTE PTR [ecx],al
1101b5b5:	(bad)  
1101b5b6:	(bad)  
1101b5b7:	push   eax
1101b5b9:	add    BYTE PTR [eax],al
1101b5bb:	add    BYTE PTR [ecx],al
1101b5bd:	(bad)  
1101b5be:	(bad)  
1101b5bf:	(bad)  
1101b5c0:	clc    
1101b5c1:	add    BYTE PTR [eax],al
1101b5c3:	add    BYTE PTR [edi],al
1101b5c5:	(bad)  
1101b5c6:	(bad)  
1101b5c7:	(bad)  
1101b5c8:	(bad)  
1101b5c9:	inc    BYTE PTR [eax]
1101b5cb:	jg     0x1101b5cc
1101b5cd:	(bad)  
1101b5ce:	(bad)  
1101b5cf:	(bad)  
1101b5d0:	(bad)  
1101b5d1:	inc    DWORD PTR [eax]
1101b5d3:	(bad)  
1101b5d4:	(bad)  
1101b5d5:	(bad)  
1101b5d6:	(bad)  
1101b5d7:	(bad)  
1101b5d8:	(bad)  
1101b5d9:	inc    DWORD PTR [ecx-0x1]
1101b5df:	jmp    FWORD PTR [eax]
1101b5e1:	add    BYTE PTR [eax],al
1101b5e3:	add    BYTE PTR [eax],ah
1101b5e5:	add    BYTE PTR [eax],al
1101b5e7:	add    BYTE PTR [eax+0x0],al
1101b5ea:	add    BYTE PTR [eax],al
1101b5ec:	add    DWORD PTR [eax],eax
1101b5ee:	and    BYTE PTR [eax],al
	...
1101b61c:	add    BYTE PTR [eax],al
1101b61e:	add    BYTE PTR [ecx],al
1101b620:	add    BYTE PTR [eax],al
1101b622:	add    BYTE PTR [ecx],al
1101b624:	add    BYTE PTR [eax],al
1101b626:	add    BYTE PTR [ecx],al
1101b628:	add    BYTE PTR [eax],al
1101b62a:	add    BYTE PTR [ecx],al
1101b62c:	add    BYTE PTR [eax],al
1101b62e:	add    BYTE PTR [ecx],al
1101b630:	add    BYTE PTR [eax],al
1101b632:	add    BYTE PTR [edx],al
1101b634:	add    BYTE PTR [eax],al
1101b636:	add    BYTE PTR [edi],al
1101b638:	add    BYTE PTR [eax],al
1101b63a:	add    BYTE PTR [ebx],bl
1101b63c:	add    BYTE PTR [eax],al
1101b63e:	add    BYTE PTR [eax+0x0],cl
1101b641:	add    BYTE PTR [eax],al
1101b643:	mov    BYTE PTR [eax],al
1101b645:	add    BYTE PTR [eax],al
1101b647:	lds    eax,FWORD PTR [eax]
1101b649:	add    BYTE PTR [eax],al
1101b64b:	lds    eax,FWORD PTR [eax]
1101b64d:	add    BYTE PTR [eax],al
1101b64f:	xchg   DWORD PTR [eax],eax
1101b651:	add    BYTE PTR [eax],al
1101b653:	inc    edi
1101b654:	add    BYTE PTR [eax],al
1101b656:	add    BYTE PTR [ebx],bl
1101b658:	add    BYTE PTR [eax],al
1101b65a:	add    BYTE PTR [edi],al
1101b65c:	add    BYTE PTR [eax],al
1101b65e:	add    BYTE PTR [edx],al
1101b660:	add    BYTE PTR [eax],al
1101b662:	add    BYTE PTR [ecx],al
1101b664:	add    BYTE PTR [eax],al
1101b666:	add    BYTE PTR [ecx],al
1101b668:	add    BYTE PTR [eax],al
1101b66a:	add    BYTE PTR [ecx],al
1101b66c:	add    BYTE PTR [eax],al
1101b66e:	add    BYTE PTR [ecx],al
1101b670:	add    BYTE PTR [eax],al
1101b672:	add    BYTE PTR [ecx],al
1101b674:	add    BYTE PTR [eax],al
1101b676:	add    BYTE PTR [ecx],al
1101b678:	add    BYTE PTR [eax],al
1101b67a:	add    BYTE PTR [ecx],al
	...
1101b694:	add    BYTE PTR [eax],al
1101b696:	add    BYTE PTR [ecx],al
1101b698:	add    BYTE PTR [eax],al
1101b69a:	add    BYTE PTR [esi],al
1101b69c:	add    BYTE PTR [eax],al
1101b69e:	add    BYTE PTR ds:0x11000000,cl
1101b6a4:	add    BYTE PTR [eax],al
1101b6a6:	add    BYTE PTR [ebx],dl
1101b6a8:	add    BYTE PTR [eax],al
1101b6aa:	add    BYTE PTR [ebx],dl
1101b6ac:	add    BYTE PTR [eax],al
1101b6ae:	add    BYTE PTR [ebx],dl
1101b6b0:	add    BYTE PTR [eax],al
1101b6b2:	add    BYTE PTR [eax],bl
1101b6b4:	add    BYTE PTR [eax],al
1101b6b6:	add    BYTE PTR [edx],ch
1101b6b8:	add    BYTE PTR [eax],al
1101b6ba:	add    BYTE PTR [eax+eax*1+0x0],dl
1101b6be:	add    BYTE PTR [ecx-0x2e000000],dl
1101b6c4:	or     eax,0xcfd0d0d
1101b6c9:	or     al,0xc
1101b6cb:	std    
1101b6cc:	add    BYTE PTR [eax],al
1101b6ce:	add    dl,dl
1101b6d0:	add    BYTE PTR [eax],al
1101b6d2:	add    BYTE PTR [eax+0x53000000],dl
1101b6d8:	add    BYTE PTR [eax],al
1101b6da:	add    BYTE PTR [edx],ch
1101b6dc:	add    BYTE PTR [eax],al
1101b6de:	add    BYTE PTR [eax],bl
1101b6e0:	add    BYTE PTR [eax],al
1101b6e2:	add    BYTE PTR [ebx],dl
1101b6e4:	add    BYTE PTR [eax],al
1101b6e6:	add    BYTE PTR [ebx],dl
1101b6e8:	add    BYTE PTR [eax],al
1101b6ea:	add    BYTE PTR [ebx],dl
1101b6ec:	add    BYTE PTR [eax],al
1101b6ee:	add    BYTE PTR [ebx],dl
1101b6f0:	add    BYTE PTR [eax],al
1101b6f2:	add    BYTE PTR [ebx],dl
1101b6f4:	add    BYTE PTR [eax],al
1101b6f6:	add    BYTE PTR [ecx],dl
1101b6f8:	add    BYTE PTR [eax],al
1101b6fa:	add    BYTE PTR ds:0x6000000,cl
1101b700:	add    BYTE PTR [eax],al
1101b702:	add    BYTE PTR [ecx],al
	...
1101b714:	add    BYTE PTR [eax],al
1101b716:	add    BYTE PTR [esi],al
1101b718:	add    BYTE PTR [eax],al
1101b71a:	add    BYTE PTR [ecx],bl
1101b71c:	add    BYTE PTR [eax],al
1101b71e:	add    BYTE PTR [edi],dh
1101b720:	add    BYTE PTR [eax],al
1101b722:	add    BYTE PTR [edx+0x0],cl
1101b725:	add    BYTE PTR [eax],al
1101b727:	push   eax
1101b728:	add    BYTE PTR [eax],al
1101b72a:	add    BYTE PTR [eax+0x0],dl
1101b72d:	add    BYTE PTR [eax],al
1101b72f:	push   esp
1101b730:	add    BYTE PTR [eax],al
1101b732:	add    BYTE PTR [ecx+0x0],ah
1101b735:	add    BYTE PTR [eax],al
1101b737:	jg     0x1101b739
1101b739:	add    BYTE PTR [eax],al
1101b73b:	lods   al,BYTE PTR ds:[esi]
1101b73c:	add    BYTE PTR [eax],al
1101b73e:	add    ah,bl
1101b740:	or     eax,0xc2fd0d0d
1101b745:	ret    0xffc2
1101b748:	rol    ecx,0xc1
1101b74b:	dec    DWORD PTR [esp+ecx*1]
1101b74e:	or     al,0xfd
1101b750:	add    BYTE PTR [eax],al
1101b752:	add    ah,bl
1101b754:	add    BYTE PTR [eax],al
1101b756:	add    BYTE PTR [eax+eax*1+0x7f0000],ch
1101b75d:	add    BYTE PTR [eax],al
1101b75f:	popa   
1101b760:	add    BYTE PTR [eax],al
1101b762:	add    BYTE PTR [eax+eax*1+0x0],dl
1101b766:	add    BYTE PTR [eax+0x0],dl
1101b769:	add    BYTE PTR [eax],al
1101b76b:	push   eax
1101b76c:	add    BYTE PTR [eax],al
1101b76e:	add    BYTE PTR [eax+0x0],dl
1101b771:	add    BYTE PTR [eax],al
1101b773:	push   eax
1101b774:	add    BYTE PTR [eax],al
1101b776:	add    BYTE PTR [edx+0x0],cl
1101b779:	add    BYTE PTR [eax],al
1101b77b:	aaa    
1101b77c:	add    BYTE PTR [eax],al
1101b77e:	add    BYTE PTR [ecx],bl
1101b780:	add    BYTE PTR [eax],al
1101b782:	add    BYTE PTR [esi],al
	...
1101b790:	add    BYTE PTR [eax],al
1101b792:	add    BYTE PTR [ecx],al
1101b794:	add    BYTE PTR [eax],al
1101b796:	add    BYTE PTR ds:0x37000000,cl
1101b79c:	add    BYTE PTR [eax],al
1101b79e:	add    BYTE PTR [eax+0x0],bh
1101b7a1:	add    BYTE PTR [eax],al
1101b7a3:	mov    ds:0xae000000,al
1101b7a8:	add    BYTE PTR [eax],al
1101b7aa:	add    BYTE PTR [eax-0x4a000000],dh
1101b7b0:	add    BYTE PTR [eax],al
1101b7b2:	add    bl,al
1101b7b4:	add    BYTE PTR [eax],al
1101b7b6:	add    al,bl
1101b7b8:	add    BYTE PTR [eax],al
1101b7ba:	add    dh,ch
1101b7bc:	or     eax,0xc2fe0d0d
1101b7c1:	ret    0xffc2
1101b7c4:	std    
1101b7c5:	std    
1101b7c6:	std    
1101b7c7:	(bad)  
1101b7c8:	std    
1101b7c9:	std    
1101b7ca:	std    
1101b7cb:	inc    ecx
1101b7cd:	rol    ecx,0xff
1101b7d0:	or     al,0xc
1101b7d2:	or     al,0xfe
1101b7d4:	add    BYTE PTR [eax],al
1101b7d6:	add    dh,ch
1101b7d8:	add    BYTE PTR [eax],al
1101b7da:	add    al,bl
1101b7dc:	add    BYTE PTR [eax],al
1101b7de:	add    bl,al
1101b7e0:	add    BYTE PTR [eax],al
1101b7e2:	add    BYTE PTR [esi-0x50000000],dh
1101b7e8:	add    BYTE PTR [eax],al
1101b7ea:	add    BYTE PTR [edi-0x51000000],ch
1101b7f0:	add    BYTE PTR [eax],al
1101b7f2:	add    BYTE PTR [esi-0x5e000000],ch
1101b7f8:	add    BYTE PTR [eax],al
1101b7fa:	add    BYTE PTR [eax+0x0],bh
1101b7fd:	add    BYTE PTR [eax],al
1101b7ff:	aaa    
1101b800:	add    BYTE PTR [eax],al
1101b802:	add    BYTE PTR ds:0x1000000,cl
	...
1101b810:	add    BYTE PTR [eax],al
1101b812:	add    BYTE PTR [ecx],al
1101b814:	add    BYTE PTR [eax],al
1101b816:	add    BYTE PTR [ecx],dl
1101b818:	add    BYTE PTR [eax],al
1101b81a:	add    bh,bh
1101b81c:	add    BYTE PTR [eax],al
1101b81e:	add    bh,bh
1101b820:	add    BYTE PTR [eax],al
1101b822:	add    bh,bh
1101b824:	add    BYTE PTR [eax],al
1101b826:	add    bh,bh
1101b828:	add    BYTE PTR [eax],al
1101b82a:	add    bh,bh
1101b82c:	add    BYTE PTR [eax],al
1101b82e:	add    bh,bh
1101b830:	add    BYTE PTR [eax],al
1101b832:	add    bh,bh
1101b834:	add    BYTE PTR [eax],al
1101b836:	add    bh,bh
1101b838:	or     eax,0xc2ff0d0d
1101b83d:	ret    0xffc2
1101b840:	std    
1101b841:	std    
1101b842:	std    
1101b843:	(bad)  
1101b844:	std    
1101b845:	std    
1101b846:	std    
1101b847:	(bad)  
1101b848:	std    
1101b849:	std    
1101b84a:	std    
1101b84b:	(bad)  
1101b84c:	std    
1101b84d:	std    
1101b84e:	std    
1101b84f:	inc    ecx
1101b851:	rol    ecx,0xff
1101b854:	or     al,0xc
1101b856:	or     al,0xff
1101b858:	add    BYTE PTR [eax],al
1101b85a:	add    bh,bh
1101b85c:	add    BYTE PTR [eax],al
1101b85e:	add    bh,bh
1101b860:	add    BYTE PTR [eax],al
1101b862:	add    bh,bh
1101b864:	add    BYTE PTR [eax],al
1101b866:	add    bh,bh
1101b868:	add    BYTE PTR [eax],al
1101b86a:	add    bh,bh
1101b86c:	add    BYTE PTR [eax],al
1101b86e:	add    bh,bh
1101b870:	add    BYTE PTR [eax],al
1101b872:	add    bh,bh
1101b874:	add    BYTE PTR [eax],al
1101b876:	add    bh,bh
1101b878:	add    BYTE PTR [eax],al
1101b87a:	add    BYTE PTR [edx+0x4a000000],ah
1101b880:	add    BYTE PTR [eax],al
1101b882:	add    BYTE PTR [ecx],dl
1101b884:	add    BYTE PTR [eax],al
1101b886:	add    BYTE PTR [ecx],al
	...
1101b890:	add    BYTE PTR [eax],al
1101b892:	add    BYTE PTR [ecx],al
1101b894:	add    BYTE PTR [eax],al
1101b896:	add    BYTE PTR [ebx],dl
1101b898:	add    BYTE PTR [eax],al
1101b89a:	add    bh,bh
1101b89c:	xrelease mov DWORD PTR [edx-0x1],ebx
1101b8a0:	out    dx,al
1101b8a1:	xchg   BYTE PTR [eax-0x1],bl
1101b8a4:	fstp   TBYTE PTR [ebx+0x51]
1101b8a7:	jmp    FWORD PTR [edi+0x70ff4163]
1101b8ad:	aas    
1101b8ae:	sub    edi,edi
1101b8b0:	sub    eax,0xeff1019
1101b8b5:	push   cs
1101b8b6:	or     eax,0xc2c3c3ff
1101b8bb:	(bad)  
1101b8bc:	(bad)  
1101b8bd:	(bad)  
1101b8be:	std    
1101b8bf:	(bad)  
1101b8c0:	(bad)  
1101b8c1:	(bad)  
1101b8c2:	std    
1101b8c3:	(bad)  
1101b8c4:	(bad)  
1101b8c5:	(bad)  
1101b8c6:	std    
1101b8c7:	(bad)  
1101b8c8:	std    
1101b8c9:	std    
1101b8ca:	std    
1101b8cb:	(bad)  
1101b8cc:	(bad)  
1101b8cd:	(bad)  
1101b8ce:	(bad)  
1101b8cf:	(bad)  
1101b8d0:	(bad)  
1101b8d1:	(bad)  
1101b8d2:	(bad)  
1101b8d3:	inc    ecx
1101b8d5:	rol    ecx,0xff
1101b8d8:	push   cs
1101b8d9:	or     eax,0x192dff0d
1101b8de:	adc    bh,bh
1101b8e0:	jo     0x1101b921
1101b8e2:	sub    edi,edi
1101b8e4:	mov    al,0x63
1101b8e6:	inc    ecx
1101b8e7:	(bad)  
1101b8e8:	fstp   TBYTE PTR [ecx+edx*2-0x1]
1101b8ec:	out    dx,al
1101b8ed:	xchg   BYTE PTR [eax-0x1],bl
1101b8f0:	xrelease mov DWORD PTR [edx-0x1],ebx
1101b8f4:	add    BYTE PTR [eax],al
1101b8f6:	add    bh,bh
1101b8f8:	add    BYTE PTR [eax],al
1101b8fa:	add    BYTE PTR [esi+0x50000000],ch
1101b900:	add    BYTE PTR [eax],al
1101b902:	add    BYTE PTR [ebx],dl
1101b904:	add    BYTE PTR [eax],al
1101b906:	add    BYTE PTR [ecx],al
	...
1101b910:	add    BYTE PTR [eax],al
1101b912:	add    BYTE PTR [ecx],al
1101b914:	add    BYTE PTR [eax],al
1101b916:	add    BYTE PTR [ebx],dl
1101b918:	add    BYTE PTR [eax],al
1101b91a:	add    bh,bh
1101b91c:	out    dx,al
1101b91d:	xchg   BYTE PTR [eax-0x1],bl
1101b920:	fstp   TBYTE PTR [ebx+0x51]
1101b923:	push   DWORD PTR [eax+0x70ff4163]
1101b929:	aas    
1101b92a:	sub    edi,edi
1101b92c:	sub    eax,0xeff1019
1101b931:	push   cs
1101b932:	or     eax,0xc3c3c3ff
1101b937:	(bad)  
1101b938:	(bad)  
1101b939:	(bad)  
1101b93a:	(bad)  
1101b93b:	(bad)  
1101b93c:	(bad)  
1101b93d:	(bad)  
1101b93e:	std    
1101b93f:	(bad)  
1101b940:	(bad)  
1101b941:	(bad)  
1101b942:	std    
1101b943:	(bad)  
1101b944:	(bad)  
1101b945:	(bad)  
1101b946:	std    
1101b947:	(bad)  
1101b948:	std    
1101b949:	std    
1101b94a:	std    
1101b94b:	(bad)  
1101b94c:	(bad)  
1101b94d:	(bad)  
1101b94e:	(bad)  
1101b94f:	(bad)  
1101b950:	(bad)  
1101b951:	(bad)  
1101b952:	(bad)  
1101b953:	(bad)  
1101b954:	std    
1101b955:	std    
1101b956:	std    
1101b957:	inc    ecx
1101b959:	rol    ecx,0xff
1101b95c:	push   cs
1101b95d:	or     eax,0x192dff0c
1101b962:	adc    bh,bh
1101b964:	jno    0x1101b9a5
1101b966:	sub    edi,edi
1101b968:	mov    al,0x63
1101b96a:	inc    ecx
1101b96b:	(bad)  
1101b96c:	fstp   TBYTE PTR [ecx+edx*2-0x1]
1101b970:	out    dx,al
1101b971:	xchg   BYTE PTR [eax-0x1],bl
1101b974:	add    BYTE PTR [eax],al
1101b976:	add    bh,bh
1101b978:	add    BYTE PTR [eax],al
1101b97a:	add    BYTE PTR [edi+0x50000000],ch
1101b980:	add    BYTE PTR [eax],al
1101b982:	add    BYTE PTR [ebx],dl
1101b984:	add    BYTE PTR [eax],al
1101b986:	add    BYTE PTR [ecx],al
	...
1101b990:	add    BYTE PTR [eax],al
1101b992:	add    BYTE PTR [ecx],al
1101b994:	add    BYTE PTR [eax],al
1101b996:	add    BYTE PTR [ebx],dl
1101b998:	add    BYTE PTR [eax],al
1101b99a:	add    bh,bh
1101b99c:	fstp   TBYTE PTR [ecx+edx*2-0x1]
1101b9a0:	mov    al,0x63
1101b9a2:	inc    ecx
1101b9a3:	push   DWORD PTR [ecx+0x40]
1101b9a6:	sub    edi,edi
1101b9a8:	sub    eax,0xeff1019
1101b9ad:	push   cs
1101b9ae:	or     eax,0xc2c3c3ff
1101b9b3:	(bad)  
1101b9b4:	(bad)  
1101b9b5:	(bad)  
1101b9b6:	std    
1101b9b7:	(bad)  
1101b9b8:	std    
1101b9b9:	std    
1101b9ba:	std    
1101b9bb:	(bad)  
1101b9bc:	(bad)  
1101b9bd:	(bad)  
1101b9be:	std    
1101b9bf:	(bad)  
1101b9c0:	(bad)  
1101b9c1:	(bad)  
1101b9c2:	std    
1101b9c3:	(bad)  
1101b9c4:	std    
1101b9c5:	std    
1101b9c6:	std    
1101b9c7:	(bad)  
1101b9c8:	std    
1101b9c9:	std    
1101b9ca:	std    
1101b9cb:	(bad)  
1101b9cc:	(bad)  
1101b9cd:	(bad)  
1101b9ce:	std    
1101b9cf:	(bad)  
1101b9d0:	(bad)  
1101b9d1:	(bad)  
1101b9d2:	std    
1101b9d3:	(bad)  
1101b9d4:	std    
1101b9d5:	std    
1101b9d6:	std    
1101b9d7:	(bad)  
1101b9d8:	std    
1101b9d9:	std    
1101b9da:	std    
1101b9db:	inc    ecx
1101b9dd:	rol    ecx,0xff
1101b9e0:	push   cs
1101b9e1:	or     eax,0x192dff0d
1101b9e6:	adc    bh,bh
1101b9e8:	jno    0x1101ba2a
1101b9ea:	sub    bh,bh
1101b9ec:	mov    al,0x63
1101b9ee:	inc    ecx
1101b9ef:	(bad)  
1101b9f0:	fstp   TBYTE PTR [ecx+edx*2-0x1]
1101b9f4:	add    BYTE PTR [eax],al
1101b9f6:	add    bh,bh
1101b9f8:	add    BYTE PTR [eax],al
1101b9fa:	add    BYTE PTR [edi+0x50000000],ch
1101ba00:	add    BYTE PTR [eax],al
1101ba02:	add    BYTE PTR [ebx],dl
1101ba04:	add    BYTE PTR [eax],al
1101ba06:	add    BYTE PTR [ecx],al
	...
1101ba10:	add    BYTE PTR [eax],al
1101ba12:	add    BYTE PTR [edx],al
1101ba14:	add    BYTE PTR [eax],al
1101ba16:	add    BYTE PTR [eax],bl
1101ba18:	add    BYTE PTR [eax],al
1101ba1a:	add    bh,bh
1101ba1c:	scas   eax,DWORD PTR es:[edi]
1101ba1d:	arpl   WORD PTR [ecx-0x1],ax
1101ba20:	jo     0x1101ba61
1101ba22:	sub    edi,edi
1101ba24:	sub    eax,0xeff1019
1101ba29:	push   cs
1101ba2a:	or     eax,0xc3c3c3ff
1101ba2f:	(bad)  
1101ba30:	(bad)  
1101ba31:	(bad)  
1101ba32:	(bad)  
1101ba33:	(bad)  
1101ba34:	(bad)  
1101ba35:	(bad)  
1101ba36:	std    
1101ba37:	(bad)  
1101ba38:	stc    
1101ba39:	out    0xde,al
1101ba3b:	(bad)  
1101ba3c:	in     eax,dx
1101ba3d:	lods   eax,DWORD PTR ds:[esi]
1101ba3e:	xchg   esp,eax
1101ba3f:	jmp    ecx
1101ba41:	and    DWORD PTR [ecx-0x1],0xffffffd9
1101ba45:	imul   eax,DWORD PTR [edi+edi*8-0x2b],0x66
1101ba4a:	inc    eax
1101ba4b:	call   edi
1101ba4d:	jbe    0x1101baa5
1101ba4f:	jmp    ecx
1101ba51:	sahf   
1101ba52:	mov    bh,bh
1101ba54:	cmc    
1101ba55:	loopne 0x1101ba30
1101ba57:	(bad)  
1101ba58:	(bad)  
1101ba59:	(bad)  
1101ba5a:	std    
1101ba5b:	(bad)  
1101ba5c:	(bad)  
1101ba5d:	(bad)  
1101ba5e:	std    
1101ba5f:	inc    ecx
1101ba61:	rol    ecx,0xff
1101ba64:	push   cs
1101ba65:	or     eax,0x192dff0d
1101ba6a:	adc    bh,bh
1101ba6c:	jo     0x1101baad
1101ba6e:	sub    edi,edi
1101ba70:	mov    al,0x63
1101ba72:	inc    ecx
1101ba73:	inc    DWORD PTR [eax]
1101ba75:	add    BYTE PTR [eax],al
1101ba77:	inc    DWORD PTR [eax]
1101ba79:	add    BYTE PTR [eax],al
1101ba7b:	mov    al,0x0
1101ba7d:	add    BYTE PTR [eax],al
1101ba7f:	push   eax
1101ba80:	add    BYTE PTR [eax],al
1101ba82:	add    BYTE PTR [ebx],dl
1101ba84:	add    BYTE PTR [eax],al
1101ba86:	add    BYTE PTR [ecx],al
	...
1101ba90:	add    BYTE PTR [eax],al
1101ba92:	add    BYTE PTR [edi],al
1101ba94:	add    BYTE PTR [eax],al
1101ba96:	add    BYTE PTR [edx],ch
1101ba98:	add    BYTE PTR [eax],al
1101ba9a:	add    bh,bh
1101ba9c:	jo     0x1101badd
1101ba9e:	sub    edi,edi
1101baa0:	sub    eax,0xeff1019
1101baa5:	push   cs
1101baa6:	or     eax,0xc3c3c3ff
1101baab:	(bad)  
1101baac:	(bad)  
1101baad:	(bad)  
1101baae:	(bad)  
1101baaf:	(bad)  
1101bab0:	std    
1101bab1:	cli    
1101bab2:	clc    
1101bab3:	push   ebx
1101bab5:	mov    ch,0x9a
1101bab7:	jmp    edi
1101bab9:	jnp    0x1101bb09
1101babb:	jmp    edx
1101babd:	jne    0x1101bb08
1101babf:	(bad)  
1101bac0:	fidiv  WORD PTR [eax+0x45]
1101bac3:	(bad)  
1101bac4:	fld    TBYTE PTR [ebx+0x41]
1101bac7:	call   esi
1101bac9:	gs cmp eax,0x395fd2ff
1101bacf:	dec    esi
1101bad1:	pop    edx
1101bad2:	xor    al,0xff
1101bad4:	retf   
1101bad5:	push   esi
1101bad6:	xor    edi,edi
1101bad8:	fistp  WORD PTR [ecx-0x603007c]
1101bade:	idiv   edi
1101bae0:	(bad)  
1101bae1:	(bad)  
1101bae2:	(bad)  
1101bae3:	inc    ecx
1101bae5:	rol    ecx,0xff
1101bae8:	push   cs
1101bae9:	or     eax,0x192dff0c
1101baee:	adc    bh,bh
1101baf0:	jo     0x1101bb31
1101baf2:	sub    edi,edi
1101baf4:	add    BYTE PTR [eax],al
1101baf6:	add    bh,bh
1101baf8:	add    BYTE PTR [eax],al
1101bafa:	add    BYTE PTR [esi+0x54000000],dh
1101bb00:	add    BYTE PTR [eax],al
1101bb02:	add    BYTE PTR [ebx],dl
1101bb04:	add    BYTE PTR [eax],al
1101bb06:	add    BYTE PTR [ecx],al
1101bb08:	add    BYTE PTR [eax],al
1101bb0a:	add    BYTE PTR [eax],al
1101bb0c:	add    BYTE PTR [eax],al
1101bb0e:	add    BYTE PTR ds:0x1b000000,al
1101bb14:	add    BYTE PTR [eax],al
1101bb16:	add    BYTE PTR [eax+eax*1+0x0],dl
1101bb1a:	add    bh,bh
1101bb1c:	sub    eax,0xeff1019
1101bb21:	push   cs
1101bb22:	or     eax,0xc2c3c3ff
1101bb27:	(bad)  
1101bb28:	(bad)  
1101bb29:	(bad)  
1101bb2a:	(bad)  
1101bb2b:	(bad)  
1101bb2c:	std    
1101bb2d:	cli    
1101bb2e:	stc    
1101bb2f:	push   esi
1101bb31:	test   al,0x86
1101bb33:	(bad)  
1101bb34:	out    dx,al
1101bb35:	test   DWORD PTR [edi-0x1],edx
1101bb38:	jmp    0x507b:0xe7ff5380
1101bb3f:	jmp    ebx
1101bb41:	jbe    0x1101bb8e
1101bb43:	(bad)  
1101bb44:	fbstp  TBYTE PTR [ecx+0x47]
1101bb47:	(bad)  
1101bb48:	fld    TBYTE PTR [ebx+0x42]
1101bb4b:	call   edi
1101bb4d:	cmp    ax,0xd2ff
1101bb51:	pusha  
1101bb52:	cmp    edi,edi
1101bb54:	into   
1101bb55:	pop    edx
1101bb56:	xor    al,0xff
1101bb58:	retf   0x2f55
1101bb5b:	call   edi
1101bb5d:	jg     0x1101bbc3
1101bb5f:	(bad)  
1101bb60:	cld    
1101bb61:	stc    
1101bb62:	idiv   edi
1101bb64:	(bad)  
1101bb65:	(bad)  
1101bb66:	std    
1101bb67:	inc    ecx
1101bb69:	rol    ecx,0xff
1101bb6c:	push   cs
1101bb6d:	or     eax,0x192dff0c
1101bb72:	adc    bh,bh
1101bb74:	add    BYTE PTR [eax],al
1101bb76:	add    bh,bh
1101bb78:	add    BYTE PTR [eax],al
1101bb7a:	add    bl,al
1101bb7c:	add    BYTE PTR [eax],al
1101bb7e:	add    BYTE PTR [ecx+0x0],ah
1101bb81:	add    BYTE PTR [eax],al
1101bb83:	sbb    BYTE PTR [eax],al
1101bb85:	add    BYTE PTR [eax],al
1101bb87:	add    al,BYTE PTR [eax]
1101bb89:	add    BYTE PTR [eax],al
1101bb8b:	add    eax,0x19000000
1101bb90:	add    BYTE PTR [eax],al
1101bb92:	add    BYTE PTR [edi+0x0],al
1101bb95:	add    BYTE PTR [eax],al
1101bb97:	nop
1101bb98:	add    BYTE PTR [eax],al
1101bb9a:	add    bh,bh
1101bb9c:	push   cs
1101bb9d:	push   cs
1101bb9e:	or     eax,0xc3c3c3ff
1101bba3:	(bad)  
1101bba4:	(bad)  
1101bba5:	(bad)  
1101bba6:	(bad)  
1101bba7:	(bad)  
1101bba8:	(bad)  
1101bba9:	(bad)  
1101bbaa:	std    
1101bbab:	(bad)  
1101bbac:	clc    
1101bbad:	mov    ebx,0x8cf3ffa0
1101bbb2:	pop    ebp
1101bbb3:	push   edx
1101bbb5:	mov    WORD PTR [esi-0x1],ds
1101bbb8:	out    dx,eax
1101bbb9:	mov    BYTE PTR [edx-0x1],bl
1101bbbc:	jmp    0x1101bb41
1101bbbe:	push   esi
1101bbbf:	jmp    edi
1101bbc1:	jge    0x1101bc15
1101bbc3:	jmp    esp
1101bbc5:	ja     0x1101bc14
1101bbc7:	(bad)  
1101bbc8:	fbstp  TBYTE PTR [ecx+0x48]
1101bbcb:	(bad)  
1101bbcc:	fld    TBYTE PTR [ebx+eax*2-0x1]
1101bbd0:	xlat   BYTE PTR ds:[ebx]
1101bbd1:	notrack call bx
1101bbd5:	pusha  
1101bbd6:	cmp    edi,edi
1101bbd8:	into   
1101bbd9:	pop    edx
1101bbda:	xor    al,0xff
1101bbdc:	retf   0x3055
1101bbdf:	(bad)  
1101bbe0:	fistp  WORD PTR [ecx-0x101007c]
1101bbe6:	std    
1101bbe7:	(bad)  
1101bbe8:	std    
1101bbe9:	std    
1101bbea:	std    
1101bbeb:	inc    ecx
1101bbed:	rol    ecx,0xff
1101bbf0:	push   cs
1101bbf1:	or     eax,0xff0d
1101bbf6:	add    bh,bh
1101bbf8:	add    BYTE PTR [eax],al
1101bbfa:	add    al,bl
1101bbfc:	add    BYTE PTR [eax],al
1101bbfe:	add    BYTE PTR [edi+0x0],bh
1101bc01:	add    BYTE PTR [eax],al
1101bc03:	sub    al,BYTE PTR [eax]
1101bc05:	add    BYTE PTR [eax],al
1101bc07:	push   es
1101bc08:	add    BYTE PTR [eax],al
1101bc0a:	add    BYTE PTR [eax],bl
1101bc0c:	add    BYTE PTR [eax],al
1101bc0e:	add    BYTE PTR [esi+0x0],al
1101bc11:	add    BYTE PTR [eax],al
1101bc13:	mov    al,BYTE PTR [eax]
1101bc15:	add    BYTE PTR [eax],al
1101bc17:	ror    BYTE PTR ds:0xc3ff0d0d,cl
1101bc1d:	ret    
1101bc1e:	ret    0xfdff
1101bc21:	std    
1101bc22:	std    
1101bc23:	(bad)  
1101bc24:	std    
1101bc25:	std    
1101bc26:	std    
1101bc27:	(bad)  
1101bc28:	cld    
1101bc29:	jmp    0xff60:0x8ef4ffe2
1101bc30:	hlt    
1101bc31:	(bad)  
1101bc32:	(bad)  
1101bc33:	push   esp
1101bc35:	nop
1101bc36:	arpl   di,di
1101bc38:	repz (bad) 
1101bc3a:	arpl   di,di
1101bc3c:	out    dx,eax
1101bc3d:	mov    bl,BYTE PTR [esi-0x1]
1101bc40:	in     al,dx
1101bc41:	test   DWORD PTR [ecx-0x1],ebx
1101bc44:	call   0xf60110c8
1101bc49:	js     0x1101bc99
1101bc4b:	(bad)  
1101bc4c:	fbstp  TBYTE PTR [edx+0x48]
1101bc4f:	(bad)  
1101bc50:	fld    TBYTE PTR [ebx+eax*2-0x1]
1101bc54:	xlat   BYTE PTR ds:[ebx]
1101bc55:	notrack call bx
1101bc59:	pusha  
1101bc5a:	cmp    edi,edi
1101bc5c:	iret   
1101bc5d:	pop    ebx
1101bc5e:	xor    eax,0x3156cbff
1101bc63:	push   ebp
1101bc65:	loopne 0x1101bc40
1101bc67:	(bad)  
1101bc68:	std    
1101bc69:	std    
1101bc6a:	std    
1101bc6b:	(bad)  
1101bc6c:	(bad)  
1101bc6d:	(bad)  
1101bc6e:	std    
1101bc6f:	inc    ecx
1101bc71:	rol    ecx,0xff
1101bc74:	or     al,0xc
1101bc76:	or     al,0xff
1101bc78:	add    BYTE PTR [eax],al
1101bc7a:	add    dh,ch
1101bc7c:	add    BYTE PTR [eax],al
1101bc7e:	add    BYTE PTR [eax+eax*1+0x530000],ch
1101bc85:	add    BYTE PTR [eax],al
1101bc87:	sbb    DWORD PTR [eax],eax
1101bc89:	add    BYTE PTR [eax],al
1101bc8b:	cmp    al,BYTE PTR [eax]
1101bc8d:	add    BYTE PTR [eax],al
1101bc8f:	add    DWORD PTR [eax],0xdce0000
1101bc95:	or     eax,0xc3c3fd0d
1101bc9a:	ret    
1101bc9b:	(bad)  
1101bc9c:	(bad)  
1101bc9d:	(bad)  
1101bc9e:	(bad)  
1101bc9f:	(bad)  
1101bca0:	(bad)  
1101bca1:	(bad)  
1101bca2:	(bad)  
1101bca3:	(bad)  
1101bca4:	(bad)  
1101bca5:	(bad)  
1101bca6:	(bad)  
1101bca7:	(bad)  
1101bca8:	clc    
1101bca9:	mov    esi,0x91f4ffa4
1101bcae:	fs push esp
1101bcb1:	xchg   ebx,eax
1101bcb2:	push   0x6995f4ff
1101bcb7:	push   esp
1101bcb9:	xchg   ebp,eax
1101bcba:	push   0xffffffff
1101bcbc:	repz xchg ebx,eax
1101bcbe:	addr16 (bad) 
1101bcc0:	out    dx,eax
1101bcc1:	lea    esp,[edx-0x1]
1101bcc4:	in     al,dx
1101bcc5:	xchg   BYTE PTR [ebx-0x1],bl
1101bcc8:	call   0xf501124c
1101bccd:	jns    0x1101bd1d
1101bccf:	(bad)  
1101bcd0:	fbstp  TBYTE PTR [edx+0x48]
1101bcd3:	(bad)  
1101bcd4:	fld    TBYTE PTR [ebx+eax*2-0x1]
1101bcd8:	xlat   BYTE PTR ds:[ebx]
1101bcd9:	notrack call bx
1101bcdd:	pusha  
1101bcde:	cmp    edi,edi
1101bce0:	into   
1101bce1:	pop    edx
1101bce2:	xor    al,0xff
1101bce4:	loope  0x1101bc84
1101bce6:	mov    bh,bh
1101bce8:	(bad)  
1101bce9:	(bad)  
1101bcea:	std    
1101bceb:	(bad)  
1101bcec:	(bad)  
1101bced:	(bad)  
1101bcee:	(bad)  
1101bcef:	(bad)  
1101bcf0:	(bad)  
1101bcf1:	(bad)  
1101bcf2:	(bad)  
1101bcf3:	inc    ecx
1101bcf5:	rol    ecx,0xff
1101bcf8:	or     al,0xc
1101bcfa:	or     al,0xfe
1101bcfc:	add    BYTE PTR [eax],al
1101bcfe:	add    bl,bl
1101bd00:	add    BYTE PTR [eax],al
1101bd02:	add    BYTE PTR [ecx+0x3a000000],cl
1101bd08:	add    BYTE PTR [eax],al
1101bd0a:	add    BYTE PTR [eax+0x0],dl
1101bd0d:	add    BYTE PTR [eax],al
1101bd0f:	mov    ch,0xd
1101bd11:	or     eax,0xc3c3fd0d
1101bd16:	ret    
1101bd17:	(bad)  
1101bd18:	(bad)  
1101bd19:	(bad)  
1101bd1a:	(bad)  
1101bd1b:	(bad)  
1101bd1c:	(bad)  
1101bd1d:	(bad)  
1101bd1e:	(bad)  
1101bd1f:	(bad)  
1101bd20:	(bad)  
1101bd21:	(bad)  
1101bd22:	(bad)  
1101bd23:	(bad)  
1101bd24:	(bad)  
1101bd25:	(bad)  
1101bd26:	(bad)  
1101bd27:	push   esi
1101bd29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101bd2a:	jg     0x1101bd2b
1101bd2c:	hlt    
1101bd2d:	xchg   esi,eax
1101bd2e:	imul   edi,edi,0xfffffff5
1101bd31:	call   0xff73:0x9bf5ff71
1101bd38:	cmc    
1101bd39:	fwait
1101bd3a:	jae    0x1101bd3b
1101bd3c:	cmc    
1101bd3d:	call   0xff6c:0x96f4ff71
1101bd44:	lock (bad) 
1101bd46:	gs (bad) 
1101bd48:	in     al,dx
1101bd49:	xchg   DWORD PTR [ebp-0x1],ebx
1101bd4c:	out    0x80,eax
1101bd4e:	push   ebp
1101bd4f:	jmp    ebx
1101bd51:	jns    0x1101bda2
1101bd53:	(bad)  
1101bd54:	fbstp  TBYTE PTR [edx+0x48]
1101bd57:	(bad)  
1101bd58:	fld    TBYTE PTR [ebx+eax*2-0x1]
1101bd5c:	xlat   BYTE PTR ds:[ebx]
1101bd5d:	notrack call dx
1101bd61:	pop    edi
1101bd62:	cmp    bh,bh
1101bd64:	xlat   BYTE PTR ds:[ebx]
1101bd65:	ja     0x1101bdbd
1101bd67:	(bad)  
1101bd68:	(bad)  
1101bd69:	(bad)  
1101bd6a:	std    
1101bd6b:	(bad)  
1101bd6c:	(bad)  
1101bd6d:	(bad)  
1101bd6e:	(bad)  
1101bd6f:	(bad)  
1101bd70:	(bad)  
1101bd71:	(bad)  
1101bd72:	(bad)  
1101bd73:	(bad)  
1101bd74:	std    
1101bd75:	std    
1101bd76:	std    
1101bd77:	inc    ecx
1101bd79:	rol    ecx,0xff
1101bd7c:	or     al,0xc
1101bd7e:	or     al,0xfd
1101bd80:	add    BYTE PTR [eax],al
1101bd82:	add    BYTE PTR [ecx+0x51000000],bh
1101bd88:	add    BYTE PTR [eax],al
1101bd8a:	add    BYTE PTR [eax+0xd],dh
1101bd8d:	or     eax,0xc3c3fa0d
1101bd92:	ret    
1101bd93:	(bad)  
1101bd94:	(bad)  
1101bd95:	(bad)  
1101bd96:	(bad)  
1101bd97:	(bad)  
1101bd98:	std    
1101bd99:	std    
1101bd9a:	std    
1101bd9b:	(bad)  
1101bd9c:	(bad)  
1101bd9d:	(bad)  
1101bd9e:	std    
1101bd9f:	(bad)  
1101bda0:	(bad)  
1101bda1:	(bad)  
1101bda2:	std    
1101bda3:	(bad)  
1101bda4:	std    
1101bda5:	std    
1101bda6:	std    
1101bda7:	push   ebp
1101bda9:	call   0xff76:0x9ef5ff71
1101bdb0:	mul    BYTE PTR [ebx-0x5a090082]
1101bdb6:	cmp    edi,0xff80a5f6
1101bdbc:	mul    BYTE PTR [edx-0x610a0084]
1101bdc2:	jbe    0x1101bdc3
1101bdc4:	hlt    
1101bdc5:	cwde   
1101bdc6:	outs   dx,DWORD PTR ds:[esi]
1101bdc7:	push   eax
1101bdc9:	nop
1101bdca:	data16 (bad) 
1101bdcc:	jmp    0x1101bd55
1101bdce:	pop    ebp
1101bdcf:	jmp    edi
1101bdd1:	jg     0x1101be28
1101bdd3:	jmp    ebx
1101bdd5:	js     0x1101be25
1101bdd7:	(bad)  
1101bdd8:	fbstp  TBYTE PTR [edx+0x48]
1101bddb:	(bad)  
1101bddc:	fld    TBYTE PTR [ebx+0x42]
1101bddf:	call   esi
1101bde1:	gs cmp eax,0x4066d5ff
1101bde7:	(bad)  
1101bde8:	std    
1101bde9:	std    
1101bdea:	std    
1101bdeb:	(bad)  
1101bdec:	std    
1101bded:	std    
1101bdee:	std    
1101bdef:	(bad)  
1101bdf0:	(bad)  
1101bdf1:	(bad)  
1101bdf2:	std    
1101bdf3:	(bad)  
1101bdf4:	std    
1101bdf5:	std    
1101bdf6:	std    
1101bdf7:	(bad)  
1101bdf8:	std    
1101bdf9:	std    
1101bdfa:	std    
1101bdfb:	inc    ecx
1101bdfd:	rol    ecx,0xff
1101be00:	or     al,0xc
1101be02:	or     al,0xfa
1101be04:	add    BYTE PTR [eax],al
1101be06:	add    BYTE PTR [eax+0x0],dh
1101be09:	add    BYTE PTR [eax],al
1101be0b:	push   ebp
1101be0c:	or     eax,0xc3f60d0d
1101be11:	ret    
1101be12:	ret    
1101be13:	(bad)  
1101be14:	(bad)  
1101be15:	(bad)  
1101be16:	(bad)  
1101be17:	(bad)  
1101be18:	std    
1101be19:	std    
1101be1a:	std    
1101be1b:	(bad)  
1101be1c:	(bad)  
1101be1d:	(bad)  
1101be1e:	(bad)  
1101be1f:	(bad)  
1101be20:	(bad)  
1101be21:	(bad)  
1101be22:	(bad)  
1101be23:	(bad)  
1101be24:	(bad)  
1101be25:	(bad)  
1101be26:	std    
1101be27:	push   esi
1101be29:	mov    al,ds:0xa7f6ff7a
1101be2e:	cmp    edi,0xfffffff7
1101be31:	scas   eax,DWORD PTR es:[edi]
1101be32:	(bad)  
1101be33:	push   edi
1101be35:	mov    dl,0x93
1101be37:	push   edi
1101be39:	mov    dl,0x92
1101be3b:	push   edi
1101be3d:	lods   eax,DWORD PTR ds:[esi]
1101be3e:	mov    edi,?
1101be40:	mul    BYTE PTR [edi-0x5f09007d]
1101be46:	jns    0x1101be47
1101be48:	hlt    
1101be49:	cdq    
1101be4a:	outs   dx,DWORD PTR ds:[esi]
1101be4b:	push   eax
1101be4d:	(bad)  
1101be4e:	fs (bad) 
1101be50:	jmp    0x1101bdd8
1101be52:	pop    ebx
1101be53:	(bad)  
1101be54:	call   0xf60112d7
1101be59:	ja     0x1101bea8
1101be5b:	jmp    eax
1101be5d:	jno    0x1101bea6
1101be5f:	(bad)  
1101be60:	fisubr DWORD PTR [edx+0x41]
1101be63:	(bad)  
1101be64:	fldcw  WORD PTR [ebp+eax*2-0x1]
1101be68:	(bad)  
1101be69:	(bad)  
1101be6a:	std    
1101be6b:	(bad)  
1101be6c:	(bad)  
1101be6d:	(bad)  
1101be6e:	std    
1101be6f:	(bad)  
1101be70:	(bad)  
1101be71:	(bad)  
1101be72:	(bad)  
1101be73:	(bad)  
1101be74:	std    
1101be75:	std    
1101be76:	std    
1101be77:	(bad)  
1101be78:	std    
1101be79:	std    
1101be7a:	std    
1101be7b:	inc    ebx
1101be7d:	ret    
1101be7e:	ret    
1101be7f:	dec    DWORD PTR ds:0xf60d0d
1101be85:	add    BYTE PTR [eax],al
1101be87:	push   esp
1101be88:	add    BYTE PTR [eax],al
1101be8a:	add    BYTE PTR [eax],cl
1101be8c:	add    BYTE PTR [eax],al
1101be8e:	add    BYTE PTR [esi+0xd],dl
1101be91:	or     eax,0xc3c3f60d
1101be96:	ret    
1101be97:	(bad)  
1101be98:	std    
1101be99:	std    
1101be9a:	std    
1101be9b:	(bad)  
1101be9c:	(bad)  
1101be9d:	(bad)  
1101be9e:	std    
1101be9f:	(bad)  
1101bea0:	(bad)  
1101bea1:	(bad)  
1101bea2:	std    
1101bea3:	(bad)  
1101bea4:	(bad)  
1101bea5:	(bad)  
1101bea6:	std    
1101bea7:	push   edi
1101bea9:	mov    dl,0x93
1101beab:	push   edi
1101bead:	mov    cl,0x91
1101beaf:	(bad)  
1101beb0:	clc    
1101beb1:	mov    ebp,0xc1f9ffa2
1101beb6:	test   al,0xff
1101beb8:	clc    
1101beb9:	shl    BYTE PTR [edi-0x61450701],0xff
1101bec0:	div    DWORD PTR [ecx-0x5809006f]
1101bec6:	cmp    edi,0xfffffff5
1101bec9:	sahf   
1101beca:	jbe    0x1101becb
1101becc:	repz xchg esi,eax
1101bece:	ins    BYTE PTR es:[edi],dx
1101becf:	(bad)  
1101bed0:	out    dx,eax
1101bed1:	lea    esp,[ecx-0x1]
1101bed4:	jmp    0x1101be5a
1101bed6:	pop    ecx
1101bed7:	jmp    edi
1101bed9:	jge    0x1101bf2d
1101bedb:	jmp    ebx
1101bedd:	jbe    0x1101bf2a
1101bedf:	(bad)  
1101bee0:	fisubr WORD PTR [edi+0x45]
1101bee3:	jmp    ecx
1101bee5:	and    DWORD PTR [ecx-0x1],0xfffffffe
1101bee9:	(bad)  
1101beea:	std    
1101beeb:	(bad)  
1101beec:	(bad)  
1101beed:	(bad)  
1101beee:	std    
1101beef:	(bad)  
1101bef0:	(bad)  
1101bef1:	(bad)  
1101bef2:	std    
1101bef3:	(bad)  
1101bef4:	std    
1101bef5:	std    
1101bef6:	std    
1101bef7:	inc    edx
1101bef9:	ret    0xffc2
1101befc:	or     eax,0xf80d0d
1101bf01:	add    BYTE PTR [eax],al
1101bf03:	pop    edi
1101bf04:	add    BYTE PTR [eax],al
1101bf06:	add    BYTE PTR [ecx],cl
1101bf08:	add    BYTE PTR [eax],al
1101bf0a:	add    BYTE PTR [ecx],al
1101bf0c:	add    BYTE PTR [eax],al
1101bf0e:	add    BYTE PTR [eax],cl
1101bf10:	add    BYTE PTR [eax],al
1101bf12:	add    BYTE PTR [edi+0xd],dl
1101bf15:	or     eax,0xc3c3f70d
1101bf1a:	ret    
1101bf1b:	(bad)  
1101bf1c:	(bad)  
1101bf1d:	(bad)  
1101bf1e:	std    
1101bf1f:	(bad)  
1101bf20:	(bad)  
1101bf21:	(bad)  
1101bf22:	std    
1101bf23:	(bad)  
1101bf24:	(bad)  
1101bf25:	(bad)  
1101bf26:	std    
1101bf27:	(bad)  
1101bf28:	cli    
1101bf29:	into   
1101bf2a:	mov    edx,0x9dbaf8ff
1101bf2f:	(bad)  
1101bf30:	stc    
1101bf31:	retf   0xffb4
1101bf34:	cli    
1101bf35:	sar    BYTE PTR [esi-0x44310601],1
1101bf3b:	(bad)  
1101bf3c:	stc    
1101bf3d:	(bad)  
1101bf3e:	scas   eax,DWORD PTR es:[edi]
1101bf3f:	(bad)  
1101bf40:	clc    
1101bf41:	mov    edx,0xadf7ff9e
1101bf46:	mov    edi,?
1101bf48:	mul    BYTE PTR [edx-0x660a0084]
1101bf4e:	jo     0x1101bf4f
1101bf50:	repz xchg edx,eax
1101bf52:	addr16 (bad) 
1101bf54:	out    dx,eax
1101bf55:	mov    bl,BYTE PTR [esi-0x1]
1101bf58:	jmp    0x1101bedd
1101bf5a:	push   esi
1101bf5b:	jmp    edi
1101bf5d:	jl     0x1101bfaf
1101bf5f:	jmp    edx
1101bf61:	jne    0x1101bfac
1101bf63:	(bad)  
1101bf64:	in     eax,dx
1101bf65:	lods   eax,DWORD PTR ds:[esi]
1101bf66:	xchg   esp,eax
1101bf67:	(bad)  
1101bf68:	(bad)  
1101bf69:	(bad)  
1101bf6a:	std    
1101bf6b:	(bad)  
1101bf6c:	(bad)  
1101bf6d:	(bad)  
1101bf6e:	(bad)  
1101bf6f:	(bad)  
1101bf70:	(bad)  
1101bf71:	(bad)  
1101bf72:	std    
1101bf73:	inc    edx
1101bf75:	ret    0xffc2
1101bf78:	or     eax,0xfb0d0d
1101bf7d:	add    BYTE PTR [eax],al
1101bf7f:	test   DWORD PTR [eax],eax
1101bf81:	add    BYTE PTR [eax],al
1101bf83:	sbb    al,BYTE PTR [eax]
1101bf85:	add    BYTE PTR [eax],al
1101bf87:	add    al,BYTE PTR [eax]
1101bf89:	add    BYTE PTR [eax],al
1101bf8b:	add    BYTE PTR [eax],al
1101bf8d:	add    BYTE PTR [eax],al
1101bf8f:	add    DWORD PTR [eax],eax
1101bf91:	add    BYTE PTR [eax],al
1101bf93:	or     DWORD PTR [eax],eax
1101bf95:	add    BYTE PTR [eax],al
1101bf97:	pusha  
1101bf98:	or     eax,0xc4ff0d0d
1101bf9d:	(bad)  
1101bfa1:	(bad)  
1101bfa2:	std    
1101bfa3:	(bad)  
1101bfa4:	(bad)  
1101bfa5:	(bad)  
1101bfa6:	std    
1101bfa7:	(bad)  
1101bfa8:	std    
1101bfa9:	lock jmp 0xfaff:0xa3bdf8ff
1101bfb1:	sar    DWORD PTR [esi-0x33250401],1
1101bfb7:	(bad)  
1101bfb8:	sti    
1101bfb9:	fxch   st(2)
1101bfbb:	(bad)  
1101bfbc:	cli    
1101bfbd:	iret   
1101bfbe:	mov    ebx,0xa7c1f9ff
1101bfc3:	push   edi
1101bfc5:	mov    dl,0x92
1101bfc7:	push   esi
1101bfc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1101bfca:	cmp    bh,0xf5
1101bfcd:	fwait
1101bfce:	jae    0x1101bfcf
1101bfd0:	hlt    
1101bfd1:	xchg   ebp,eax
1101bfd2:	push   0xffffffff
1101bfd4:	repz (bad) 
1101bfd6:	arpl   di,di
1101bfd8:	out    dx,eax
1101bfd9:	mov    BYTE PTR [ebx-0x1],bl
1101bfdc:	jmp    0x1101bf5f
1101bfde:	push   esp
1101bfdf:	jmp    edi
1101bfe1:	jnp    0x1101c032
1101bfe3:	(bad)  
1101bfe4:	stc    
1101bfe5:	out    0xde,al
1101bfe7:	(bad)  
1101bfe8:	std    
1101bfe9:	std    
1101bfea:	std    
1101bfeb:	(bad)  
1101bfec:	(bad)  
1101bfed:	(bad)  
1101bfee:	(bad)  
1101bfef:	inc    ebx
1101bff1:	ret    
1101bff2:	ret    0xdff
1101bff5:	or     eax,0xff0d
1101bffa:	add    ah,al
1101bffc:	add    BYTE PTR [eax],al
1101bffe:	add    BYTE PTR [ebp+0x0],dl
1101c001:	add    BYTE PTR [eax],al
1101c003:	adc    eax,DWORD PTR [eax]
1101c005:	add    BYTE PTR [eax],al
1101c007:	add    DWORD PTR [eax],eax
	...
1101c011:	add    BYTE PTR [eax],al
1101c013:	add    al,BYTE PTR [eax]
1101c015:	add    BYTE PTR [eax],al
1101c017:	sbb    al,BYTE PTR [eax]
1101c019:	add    BYTE PTR [eax],al
1101c01b:	call   DWORD PTR ds:0xc4ff1011
1101c021:	(bad)  
1101c025:	(bad)  
1101c026:	(bad)  
1101c027:	(bad)  
1101c028:	(bad)  
1101c029:	(bad)  
1101c02a:	(bad)  
1101c02b:	(bad)  
1101c02c:	sti    
1101c02d:	fxch   st(1)
1101c02f:	(bad)  
1101c030:	stc    
1101c031:	int    0xb9
1101c033:	(bad)  
1101c034:	sti    
1101c035:	fcmove st,st(4)
1101c037:	(bad)  
1101c038:	sti    
1101c039:	fcmovne st,st(4)
1101c03b:	(bad)  
1101c03c:	cli    
1101c03d:	sar    BYTE PTR [esi-0x563d0601],1
1101c043:	push   edi
1101c045:	mov    bl,0x93
1101c047:	push   esi
1101c049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1101c04a:	cmp    edi,0xff739bf5
1101c050:	hlt    
1101c051:	xchg   ebp,eax
1101c052:	imul   edi,edi,0xff6390f4
1101c058:	repnz mov WORD PTR [esi-0x1],ds
1101c05c:	out    dx,al
1101c05d:	test   DWORD PTR [edi-0x1],edx
1101c060:	repz mov ch,0x9a
1101c063:	(bad)  
1101c064:	(bad)  
1101c065:	(bad)  
1101c066:	(bad)  
1101c067:	(bad)  
1101c068:	(bad)  
1101c069:	(bad)  
1101c06a:	std    
1101c06b:	inc    ebx
1101c06d:	ret    
1101c06e:	ret    
1101c06f:	call   DWORD PTR ds:0xff1011
1101c075:	add    BYTE PTR [eax],al
1101c077:	inc    DWORD PTR [eax]
1101c079:	add    BYTE PTR [eax],al
1101c07b:	mov    cl,0x0
1101c07d:	add    BYTE PTR [eax],al
1101c07f:	push   ecx
1101c080:	add    BYTE PTR [eax],al
1101c082:	add    BYTE PTR [ebx],dl
1101c084:	add    BYTE PTR [eax],al
1101c086:	add    BYTE PTR [ecx],al
	...
1101c090:	add    BYTE PTR [eax],al
1101c092:	add    BYTE PTR [ecx],al
1101c094:	add    BYTE PTR [eax],al
1101c096:	add    BYTE PTR [ebx],dl
1101c098:	add    BYTE PTR [eax],al
1101c09a:	add    bh,bh
1101c09c:	mov    eax,ds:0x15ff3b5a
1101c0a1:	adc    DWORD PTR [eax],edx
1101c0a3:	inc    esp
1101c0a5:	(bad)  
1101c0a9:	(bad)  
1101c0aa:	std    
1101c0ab:	(bad)  
1101c0ac:	(bad)  
1101c0ad:	cld    
1101c0ae:	sti    
1101c0af:	(bad)  
1101c0b0:	cli    
1101c0b1:	rol    ecx,cl
1101c0b3:	(bad)  
1101c0b4:	stc    
1101c0b5:	int    0xb9
1101c0b7:	(bad)  
1101c0b8:	cli    
1101c0b9:	sar    DWORD PTR [esi-0x4b350601],1
1101c0bf:	(bad)  
1101c0c0:	clc    
1101c0c1:	mov    ebp,0xaff7ffa2
1101c0c6:	(bad)  
1101c0c7:	push   esi
1101c0c9:	mov    ds:0x9af5ff7e,eax
1101c0ce:	jno    0x1101c0cf
1101c0d0:	hlt    
1101c0d1:	xchg   ebx,eax
1101c0d2:	push   0x618ff4ff
1101c0d7:	push   ebx
1101c0d9:	mov    WORD PTR [ebp-0x1],ds
1101c0dc:	imul   BYTE PTR [ecx-0x502007a]
1101c0e2:	stc    
1101c0e3:	(bad)  
1101c0e4:	(bad)  
1101c0e5:	(bad)  
1101c0e6:	(bad)  
1101c0e7:	inc    ebx
1101c0e9:	ret    
1101c0ea:	ret    0x15ff
1101c0ed:	adc    DWORD PTR [eax],edx
1101c0ef:	jmp    DWORD PTR [edx+0xff3c5b]
1101c0f5:	add    BYTE PTR [eax],al
1101c0f7:	inc    DWORD PTR [eax]
1101c0f9:	add    BYTE PTR [eax],al
1101c0fb:	scas   eax,DWORD PTR es:[edi]
1101c0fc:	add    BYTE PTR [eax],al
1101c0fe:	add    BYTE PTR [eax+0x0],dl
1101c101:	add    BYTE PTR [eax],al
1101c103:	adc    eax,DWORD PTR [eax]
1101c105:	add    BYTE PTR [eax],al
1101c107:	add    DWORD PTR [eax],eax
	...
1101c111:	add    BYTE PTR [eax],al
1101c113:	add    DWORD PTR [eax],eax
1101c115:	add    BYTE PTR [eax],al
1101c117:	adc    eax,DWORD PTR [eax]
1101c119:	add    BYTE PTR [eax],al
1101c11b:	(bad)  
1101c11c:	in     al,dx
1101c11d:	test   DWORD PTR [eax-0x1],ebx
1101c120:	mov    eax,ds:0x15ff3b5b
1101c125:	adc    DWORD PTR [eax],edx
1101c127:	inc    esp
1101c129:	(bad)  
1101c12d:	(bad)  
1101c12e:	(bad)  
1101c12f:	(bad)  
1101c130:	(bad)  
1101c131:	cld    
1101c132:	sti    
1101c133:	(bad)  
1101c134:	sti    
1101c135:	fmul   st,st(1)
1101c137:	(bad)  
1101c138:	clc    
1101c139:	mov    ebp,0xb9f8ffa3
1101c13e:	popf   
1101c13f:	push   edi
1101c141:	mov    cl,0x91
1101c143:	push   esi
1101c145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1101c146:	cmp    edi,0xfffffff5
1101c149:	popf   
1101c14a:	jbe    0x1101c14b
1101c14c:	hlt    
1101c14d:	xchg   esi,eax
1101c14e:	imul   edi,edi,0xfffffff4
1101c151:	nop
1101c152:	fs push esp
1101c155:	mov    fs,WORD PTR [eax-0x1]
1101c158:	clc    
1101c159:	mov    esp,0xfafdffa0
1101c15e:	stc    
1101c15f:	(bad)  
1101c160:	(bad)  
1101c161:	(bad)  
1101c162:	(bad)  
1101c163:	inc    ebx
1101c165:	ret    
1101c166:	ret    
1101c167:	call   DWORD PTR ds:0xa2ff1011
1101c16d:	pop    ebx
1101c16e:	cmp    al,0xff
1101c170:	in     al,dx
1101c171:	test   DWORD PTR [eax-0x1],ebx
1101c174:	add    BYTE PTR [eax],al
1101c176:	add    bh,bh
1101c178:	add    BYTE PTR [eax],al
1101c17a:	add    BYTE PTR [edi+0x50000000],ch
1101c180:	add    BYTE PTR [eax],al
1101c182:	add    BYTE PTR [ebx],dl
1101c184:	add    BYTE PTR [eax],al
1101c186:	add    BYTE PTR [ecx],al
	...
1101c190:	add    BYTE PTR [eax],al
1101c192:	add    BYTE PTR [ecx],al
1101c194:	add    BYTE PTR [eax],al
1101c196:	add    BYTE PTR [ebx],dl
1101c198:	add    BYTE PTR [eax],al
1101c19a:	add    bh,bh
1101c19c:	xrelease mov DWORD PTR [edx-0x1],ebx
1101c1a0:	in     al,dx
1101c1a1:	test   DWORD PTR [eax-0x1],ebx
1101c1a4:	mov    eax,ds:0x15ff3b5a
1101c1a9:	adc    dl,BYTE PTR [eax]
1101c1ab:	inc    esp
1101c1ad:	(bad)  
1101c1b1:	(bad)  
1101c1b2:	std    
1101c1b3:	(bad)  
1101c1b4:	(bad)  
1101c1b5:	(bad)  
1101c1b6:	(bad)  
1101c1b7:	(bad)  
1101c1b8:	std    
1101c1b9:	lock jmp 0xf7ff:0xbacefaff
1101c1c1:	mov    bl,0x93
1101c1c3:	push   esi
1101c1c5:	mov    al,ds:0x9bf5ff7a
1101c1ca:	jb     0x1101c1cb
1101c1cc:	mul    BYTE PTR [edi+edi*2-0x5c410601]
1101c1d3:	(bad)  
1101c1d4:	cld    
1101c1d5:	jmp    0xfffd:0xfefeffe2
1101c1dc:	(bad)  
1101c1dd:	(bad)  
1101c1de:	std    
1101c1df:	inc    ebx
1101c1e1:	ret    
1101c1e2:	ret    
1101c1e3:	call   DWORD PTR ds:0xa2ff1011
1101c1e9:	pop    ebx
1101c1ea:	cmp    al,0xff
1101c1ec:	in     al,dx
1101c1ed:	test   DWORD PTR [eax-0x1],ebx
1101c1f0:	xrelease mov DWORD PTR [edx-0x1],ebx
1101c1f4:	add    BYTE PTR [eax],al
1101c1f6:	add    bh,bh
1101c1f8:	add    BYTE PTR [eax],al
1101c1fa:	add    BYTE PTR [edi+0x50000000],ch
1101c200:	add    BYTE PTR [eax],al
1101c202:	add    BYTE PTR [ebx],dl
1101c204:	add    BYTE PTR [eax],al
1101c206:	add    BYTE PTR [ecx],al
	...
1101c210:	add    BYTE PTR [eax],al
1101c212:	add    BYTE PTR [ecx],al
1101c214:	add    BYTE PTR [eax],al
1101c216:	add    BYTE PTR [ebx],dl
1101c218:	add    BYTE PTR [eax],al
1101c21a:	add    bh,bh
1101c21c:	hlt    
1101c21d:	mov    bl,BYTE PTR [ebx-0x1]
1101c220:	xrelease mov DWORD PTR [edx-0x1],ebx
1101c224:	in     al,dx
1101c225:	test   DWORD PTR [eax-0x1],ebx
1101c228:	mov    eax,ds:0x15ff3b5b
1101c22d:	adc    DWORD PTR [eax],edx
1101c22f:	inc    esp
1101c231:	(bad)  
1101c235:	(bad)  
1101c236:	(bad)  
1101c237:	(bad)  
1101c238:	(bad)  
1101c239:	(bad)  
1101c23a:	std    
1101c23b:	(bad)  
1101c23c:	(bad)  
1101c23d:	(bad)  
1101c23e:	std    
1101c23f:	(bad)  
1101c240:	(bad)  
1101c241:	(bad)  
1101c242:	std    
1101c243:	(bad)  
1101c244:	(bad)  
1101c245:	(bad)  
1101c246:	std    
1101c247:	(bad)  
1101c248:	std    
1101c249:	std    
1101c24a:	std    
1101c24b:	(bad)  
1101c24c:	(bad)  
1101c24d:	(bad)  
1101c24e:	(bad)  
1101c24f:	(bad)  
1101c250:	(bad)  
1101c251:	(bad)  
1101c252:	(bad)  
1101c253:	(bad)  
1101c254:	std    
1101c255:	std    
1101c256:	std    
1101c257:	(bad)  
1101c258:	(bad)  
1101c259:	(bad)  
1101c25a:	(bad)  
1101c25b:	inc    ebx
1101c25d:	ret    
1101c25e:	ret    0x15ff
1101c261:	adc    DWORD PTR [eax],edx
1101c263:	jmp    DWORD PTR [edx-0x1300c3a5]
1101c269:	test   DWORD PTR [eax-0x1],ebx
1101c26c:	xrelease mov DWORD PTR [edx-0x1],ebx
1101c270:	hlt    
1101c271:	mov    bl,BYTE PTR [ebx-0x1]
1101c274:	add    BYTE PTR [eax],al
1101c276:	add    bh,bh
1101c278:	add    BYTE PTR [eax],al
1101c27a:	add    BYTE PTR [esi+0x50000000],ch
1101c280:	add    BYTE PTR [eax],al
1101c282:	add    BYTE PTR [ebx],dl
1101c284:	add    BYTE PTR [eax],al
1101c286:	add    BYTE PTR [ecx],al
	...
1101c290:	add    BYTE PTR [eax],al
1101c292:	add    BYTE PTR [ecx],al
1101c294:	add    BYTE PTR [eax],al
1101c296:	add    BYTE PTR [ecx],dl
1101c298:	add    BYTE PTR [eax],al
1101c29a:	add    bh,bh
1101c29c:	hlt    
1101c29d:	mov    bl,BYTE PTR [ebx-0x1]
1101c2a0:	hlt    
1101c2a1:	mov    bl,BYTE PTR [ebx-0x1]
1101c2a4:	xrelease mov DWORD PTR [edx-0x1],ebx
1101c2a8:	in     al,dx
1101c2a9:	test   DWORD PTR [eax-0x1],ebx
1101c2ac:	mov    eax,ds:0x15ff3b5b
1101c2b1:	adc    DWORD PTR [eax],edx
1101c2b3:	inc    esp
1101c2b5:	(bad)  
1101c2b9:	(bad)  
1101c2ba:	std    
1101c2bb:	(bad)  
1101c2bc:	(bad)  
1101c2bd:	(bad)  
1101c2be:	std    
1101c2bf:	(bad)  
1101c2c0:	(bad)  
1101c2c1:	(bad)  
1101c2c2:	std    
1101c2c3:	(bad)  
1101c2c4:	(bad)  
1101c2c5:	(bad)  
1101c2c6:	(bad)  
1101c2c7:	(bad)  
1101c2c8:	(bad)  
1101c2c9:	(bad)  
1101c2ca:	std    
1101c2cb:	(bad)  
1101c2cc:	(bad)  
1101c2cd:	(bad)  
1101c2ce:	(bad)  
1101c2cf:	(bad)  
1101c2d0:	(bad)  
1101c2d1:	(bad)  
1101c2d2:	(bad)  
1101c2d3:	(bad)  
1101c2d4:	std    
1101c2d5:	std    
1101c2d6:	std    
1101c2d7:	inc    ebx
1101c2d9:	ret    
1101c2da:	ret    
1101c2db:	call   DWORD PTR ds:0xa2ff1011
1101c2e1:	pop    ebx
1101c2e2:	cmp    al,0xff
1101c2e4:	in     al,dx
1101c2e5:	test   DWORD PTR [eax-0x1],ebx
1101c2e8:	xrelease mov DWORD PTR [edx-0x1],ebx
1101c2ec:	hlt    
1101c2ed:	mov    bl,BYTE PTR [ebx-0x1]
1101c2f0:	hlt    
1101c2f1:	mov    bl,BYTE PTR [ebx-0x1]
1101c2f4:	add    BYTE PTR [eax],al
1101c2f6:	add    bh,bh
1101c2f8:	add    BYTE PTR [eax],al
1101c2fa:	add    BYTE PTR [edx+0x4a000000],ah
1101c300:	add    BYTE PTR [eax],al
1101c302:	add    BYTE PTR [ecx],dl
1101c304:	add    BYTE PTR [eax],al
1101c306:	add    BYTE PTR [ecx],al
	...
1101c310:	add    BYTE PTR [eax],al
1101c312:	add    BYTE PTR [ecx],al
1101c314:	add    BYTE PTR [eax],al
1101c316:	add    BYTE PTR ds:0xff000000,cl
1101c31c:	hlt    
1101c31d:	mov    bl,BYTE PTR [ebx-0x1]
1101c320:	hlt    
1101c321:	mov    bl,BYTE PTR [ebx-0x1]
1101c324:	hlt    
1101c325:	mov    bl,BYTE PTR [ebx-0x1]
1101c328:	xrelease mov DWORD PTR [edx-0x1],ebx
1101c32c:	in     al,dx
1101c32d:	test   DWORD PTR [eax-0x1],ebx
1101c330:	mov    eax,ds:0x15ff3b5a
1101c335:	adc    DWORD PTR [eax],edx
1101c337:	inc    esp
1101c339:	(bad)  
1101c33d:	(bad)  
1101c33e:	std    
1101c33f:	(bad)  
1101c340:	(bad)  
1101c341:	(bad)  
1101c342:	std    
1101c343:	(bad)  
1101c344:	(bad)  
1101c345:	(bad)  
1101c346:	std    
1101c347:	(bad)  
1101c348:	(bad)  
1101c349:	(bad)  
1101c34a:	std    
1101c34b:	(bad)  
1101c34c:	(bad)  
1101c34d:	(bad)  
1101c34e:	(bad)  
1101c34f:	(bad)  
1101c350:	(bad)  
1101c351:	(bad)  
1101c352:	(bad)  
1101c353:	inc    ebx
1101c355:	ret    
1101c356:	ret    0x15ff
1101c359:	adc    DWORD PTR [eax],edx
1101c35b:	jmp    DWORD PTR [edx-0x1300c3a5]
1101c361:	test   DWORD PTR [eax-0x1],ebx
1101c364:	xrelease mov DWORD PTR [edx-0x1],ebx
1101c368:	hlt    
1101c369:	mov    bl,BYTE PTR [ebx-0x1]
1101c36c:	hlt    
1101c36d:	mov    bl,BYTE PTR [ebx-0x1]
1101c370:	hlt    
1101c371:	mov    bl,BYTE PTR [ebx-0x1]
1101c374:	add    BYTE PTR [eax],al
1101c376:	add    bh,bh
1101c378:	add    BYTE PTR [eax],al
1101c37a:	add    BYTE PTR [eax+0x0],bh
1101c37d:	add    BYTE PTR [eax],al
1101c37f:	aaa    
1101c380:	add    BYTE PTR [eax],al
1101c382:	add    BYTE PTR ds:0x1000000,cl
	...
1101c394:	add    BYTE PTR [eax],al
1101c396:	add    BYTE PTR [esi],al
1101c398:	add    BYTE PTR [eax],al
1101c39a:	add    bh,bh
1101c39c:	add    BYTE PTR [eax],al
1101c39e:	add    bh,bh
1101c3a0:	add    BYTE PTR [eax],al
1101c3a2:	add    bh,bh
1101c3a4:	add    BYTE PTR [eax],al
1101c3a6:	add    bh,bh
1101c3a8:	add    BYTE PTR [eax],al
1101c3aa:	add    bh,bh
1101c3ac:	add    BYTE PTR [eax],al
1101c3ae:	add    bh,bh
1101c3b0:	add    BYTE PTR [eax],al
1101c3b2:	add    bh,bh
1101c3b4:	add    BYTE PTR [eax],al
1101c3b6:	add    bh,bh
1101c3b8:	or     eax,0xc3ff0d0d
1101c3bd:	ret    
1101c3be:	ret    
1101c3bf:	(bad)  
1101c3c0:	std    
1101c3c1:	std    
1101c3c2:	std    
1101c3c3:	(bad)  
1101c3c4:	std    
1101c3c5:	std    
1101c3c6:	std    
1101c3c7:	(bad)  
1101c3c8:	std    
1101c3c9:	std    
1101c3ca:	std    
1101c3cb:	(bad)  
1101c3cc:	(bad)  
1101c3cd:	(bad)  
1101c3ce:	(bad)  
1101c3cf:	inc    ebx
1101c3d1:	ret    
1101c3d2:	ret    
1101c3d3:	dec    DWORD PTR ds:0xff0d0d
1101c3d9:	add    BYTE PTR [eax],al
1101c3db:	inc    DWORD PTR [eax]
1101c3dd:	add    BYTE PTR [eax],al
1101c3df:	inc    DWORD PTR [eax]
1101c3e1:	add    BYTE PTR [eax],al
1101c3e3:	inc    DWORD PTR [eax]
1101c3e5:	add    BYTE PTR [eax],al
1101c3e7:	inc    DWORD PTR [eax]
1101c3e9:	add    BYTE PTR [eax],al
1101c3eb:	inc    DWORD PTR [eax]
1101c3ed:	add    BYTE PTR [eax],al
1101c3ef:	inc    DWORD PTR [eax]
1101c3f1:	add    BYTE PTR [eax],al
1101c3f3:	inc    DWORD PTR [eax]
1101c3f5:	add    BYTE PTR [eax],al
1101c3f7:	inc    DWORD PTR [eax]
1101c3f9:	add    BYTE PTR [eax],al
1101c3fb:	aaa    
1101c3fc:	add    BYTE PTR [eax],al
1101c3fe:	add    BYTE PTR [ecx],bl
1101c400:	add    BYTE PTR [eax],al
1101c402:	add    BYTE PTR [esi],al
	...
1101c414:	add    BYTE PTR [eax],al
1101c416:	add    BYTE PTR [ecx],al
1101c418:	add    BYTE PTR [eax],al
1101c41a:	add    BYTE PTR [esi],al
1101c41c:	add    BYTE PTR [eax],al
1101c41e:	add    BYTE PTR ds:0x11000000,cl
1101c424:	add    BYTE PTR [eax],al
1101c426:	add    BYTE PTR [ebx],dl
1101c428:	add    BYTE PTR [eax],al
1101c42a:	add    BYTE PTR [ebx],dl
1101c42c:	add    BYTE PTR [eax],al
1101c42e:	add    BYTE PTR [ebx],dl
1101c430:	add    BYTE PTR [eax],al
1101c432:	add    BYTE PTR [ebx],dl
1101c434:	add    BYTE PTR [eax],al
1101c436:	add    BYTE PTR [edx],bl
1101c438:	add    BYTE PTR [eax],al
1101c43a:	add    BYTE PTR [eax+0xd],ah
1101c43d:	or     eax,0xc3c3f70d
1101c442:	ret    
1101c443:	(bad)  
1101c444:	(bad)  
1101c445:	(bad)  
1101c446:	(bad)  
1101c447:	(bad)  
1101c448:	std    
1101c449:	std    
1101c44a:	std    
1101c44b:	inc    ebx
1101c44d:	ret    
1101c44e:	ret    
1101c44f:	dec    BYTE PTR ds:0xf60d0d
1101c455:	add    BYTE PTR [eax],al
1101c457:	pop    edi
1101c458:	add    BYTE PTR [eax],al
1101c45a:	add    BYTE PTR [edx],bl
1101c45c:	add    BYTE PTR [eax],al
1101c45e:	add    BYTE PTR [ebx],dl
1101c460:	add    BYTE PTR [eax],al
1101c462:	add    BYTE PTR [ebx],dl
1101c464:	add    BYTE PTR [eax],al
1101c466:	add    BYTE PTR [ebx],dl
1101c468:	add    BYTE PTR [eax],al
1101c46a:	add    BYTE PTR [ebx],dl
1101c46c:	add    BYTE PTR [eax],al
1101c46e:	add    BYTE PTR [ebx],dl
1101c470:	add    BYTE PTR [eax],al
1101c472:	add    BYTE PTR [ebx],dl
1101c474:	add    BYTE PTR [eax],al
1101c476:	add    BYTE PTR [ecx],dl
1101c478:	add    BYTE PTR [eax],al
1101c47a:	add    BYTE PTR ds:0x6000000,cl
1101c480:	add    BYTE PTR [eax],al
1101c482:	add    BYTE PTR [ecx],al
	...
1101c49c:	add    BYTE PTR [eax],al
1101c49e:	add    BYTE PTR [ecx],al
1101c4a0:	add    BYTE PTR [eax],al
1101c4a2:	add    BYTE PTR [ecx],al
1101c4a4:	add    BYTE PTR [eax],al
1101c4a6:	add    BYTE PTR [ecx],al
1101c4a8:	add    BYTE PTR [eax],al
1101c4aa:	add    BYTE PTR [ecx],al
1101c4ac:	add    BYTE PTR [eax],al
1101c4ae:	add    BYTE PTR [ecx],al
1101c4b0:	add    BYTE PTR [eax],al
1101c4b2:	add    BYTE PTR [ecx],al
1101c4b4:	add    BYTE PTR [eax],al
1101c4b6:	add    BYTE PTR [edx],al
1101c4b8:	add    BYTE PTR [eax],al
1101c4ba:	add    BYTE PTR [ecx],cl
1101c4bc:	add    BYTE PTR [eax],al
1101c4be:	add    BYTE PTR [edi+0xd],dl
1101c4c1:	or     eax,0xc4c4f60d
1101c4c6:	(bad)  
1101c4c7:	inc    bl
1101c4c9:	ret    
1101c4ca:	ret    
1101c4cb:	dec    BYTE PTR ds:0xf60d0d
1101c4d1:	add    BYTE PTR [eax],al
1101c4d3:	push   esi
1101c4d4:	add    BYTE PTR [eax],al
1101c4d6:	add    BYTE PTR [ecx],cl
1101c4d8:	add    BYTE PTR [eax],al
1101c4da:	add    BYTE PTR [edx],al
1101c4dc:	add    BYTE PTR [eax],al
1101c4de:	add    BYTE PTR [ecx],al
1101c4e0:	add    BYTE PTR [eax],al
1101c4e2:	add    BYTE PTR [ecx],al
1101c4e4:	add    BYTE PTR [eax],al
1101c4e6:	add    BYTE PTR [ecx],al
1101c4e8:	add    BYTE PTR [eax],al
1101c4ea:	add    BYTE PTR [ecx],al
1101c4ec:	add    BYTE PTR [eax],al
1101c4ee:	add    BYTE PTR [ecx],al
1101c4f0:	add    BYTE PTR [eax],al
1101c4f2:	add    BYTE PTR [ecx],al
1101c4f4:	add    BYTE PTR [eax],al
1101c4f6:	add    BYTE PTR [ecx],al
1101c4f8:	add    BYTE PTR [eax],al
1101c4fa:	add    BYTE PTR [ecx],al
	...
1101c538:	add    BYTE PTR [eax],al
1101c53a:	add    BYTE PTR [ecx],al
1101c53c:	add    BYTE PTR [eax],al
1101c53e:	add    BYTE PTR [edi],al
1101c540:	add    BYTE PTR [eax],al
1101c542:	add    BYTE PTR [ebx+0xd],dl
1101c545:	or     eax,0xd0df60d
1101c54a:	or     eax,0xf5
1101c54f:	push   edx
1101c550:	add    BYTE PTR [eax],al
1101c552:	add    BYTE PTR [edi],al
1101c554:	add    BYTE PTR [eax],al
1101c556:	add    BYTE PTR [ecx],al
	...
1101c5bc:	add    BYTE PTR [eax],al
1101c5be:	add    BYTE PTR [ecx],al
1101c5c0:	add    BYTE PTR [eax],al
1101c5c2:	add    BYTE PTR [eax+eax*1],al
1101c5c5:	add    BYTE PTR [eax],al
1101c5c7:	dec    edx
1101c5c8:	add    BYTE PTR [eax],al
1101c5ca:	add    BYTE PTR [ecx+0x0],cl
1101c5cd:	add    BYTE PTR [eax],al
1101c5cf:	add    al,0x0
1101c5d1:	add    BYTE PTR [eax],al
1101c5d3:	add    DWORD PTR [eax],eax
	...
1101c605:	add    BYTE PTR [eax],al
1101c607:	add    al,bh
1101c609:	add    BYTE PTR [eax],al
1101c60b:	pop    es
1101c60c:	loopne 0x1101c60e
1101c60e:	add    BYTE PTR [ecx],al
1101c610:	loopne 0x1101c612
1101c612:	add    BYTE PTR [ecx],al
1101c614:	rol    BYTE PTR [eax],0x0
1101c617:	add    al,al
1101c619:	add    BYTE PTR [eax],al
1101c61b:	add    al,al
1101c61d:	add    BYTE PTR [eax],al
1101c61f:	add    al,al
1101c621:	add    BYTE PTR [eax],al
1101c623:	add    al,al
1101c625:	add    BYTE PTR [eax],al
1101c627:	add    al,al
1101c629:	add    BYTE PTR [eax],al
1101c62b:	add    al,al
1101c62d:	add    BYTE PTR [eax],al
1101c62f:	add    BYTE PTR [eax+0x0],al
	...
1101c651:	add    BYTE PTR [eax],al
1101c653:	add    BYTE PTR [eax-0x40000000],al
1101c659:	add    BYTE PTR [eax],al
1101c65b:	add    al,al
1101c65d:	add    BYTE PTR [eax],al
1101c65f:	add    al,al
1101c661:	add    BYTE PTR [eax],al
1101c663:	add    al,al
1101c665:	add    BYTE PTR [eax],al
1101c667:	add    al,al
1101c669:	add    BYTE PTR [eax],al
1101c66b:	add    al,al
1101c66d:	add    BYTE PTR [eax],al
1101c66f:	add    al,al
1101c671:	add    BYTE PTR [eax],al
1101c673:	add    al,ah
1101c675:	add    BYTE PTR [eax],al
1101c677:	add    eax,esp
1101c679:	add    BYTE PTR [eax],al
1101c67b:	add    eax,edi
1101c67d:	add    BYTE PTR [eax],al
1101c67f:	pop    es
1101c680:	push   eax
1101c682:	ud0    edi,edi
1101c685:	clc    
1101c686:	pop    ds
1101c687:	jmp    FWORD PTR [eax]
1101c689:	add    BYTE PTR [eax],al
1101c68b:	add    BYTE PTR [eax],bl
1101c68d:	add    BYTE PTR [eax],al
1101c68f:	add    BYTE PTR [eax],dh
1101c691:	add    BYTE PTR [eax],al
1101c693:	add    BYTE PTR [ecx],al
1101c695:	add    BYTE PTR [eax],ah
	...
1101c6bf:	add    DWORD PTR [eax],eax
1101c6c1:	add    BYTE PTR [eax],al
1101c6c3:	add    al,BYTE PTR [eax]
1101c6c5:	add    BYTE PTR [eax],al
1101c6c7:	add    eax,DWORD PTR [eax]
1101c6c9:	add    BYTE PTR [eax],al
1101c6cb:	add    eax,DWORD PTR [eax]
1101c6cd:	add    BYTE PTR [eax],al
1101c6cf:	add    eax,DWORD PTR [eax]
1101c6d1:	add    BYTE PTR [eax],al
1101c6d3:	or     al,BYTE PTR [eax]
1101c6d5:	add    BYTE PTR [eax],al
1101c6d7:	sub    al,BYTE PTR [eax]
1101c6d9:	add    BYTE PTR [eax],al
1101c6db:	jae    0x1101c6dd
1101c6dd:	add    BYTE PTR [eax],al
1101c6df:	enter  0x0,0x0
1101c6e3:	enter  0x0,0x0
1101c6e7:	jae    0x1101c6e9
1101c6e9:	add    BYTE PTR [eax],al
1101c6eb:	sub    al,BYTE PTR [eax]
1101c6ed:	add    BYTE PTR [eax],al
1101c6ef:	or     DWORD PTR [eax],eax
1101c6f1:	add    BYTE PTR [eax],al
1101c6f3:	add    eax,DWORD PTR [eax]
1101c6f5:	add    BYTE PTR [eax],al
1101c6f7:	add    eax,DWORD PTR [eax]
1101c6f9:	add    BYTE PTR [eax],al
1101c6fb:	add    eax,DWORD PTR [eax]
1101c6fd:	add    BYTE PTR [eax],al
1101c6ff:	add    eax,DWORD PTR [eax]
1101c701:	add    BYTE PTR [eax],al
1101c703:	add    al,BYTE PTR [eax]
1101c705:	add    BYTE PTR [eax],al
1101c707:	add    al,BYTE PTR [eax]
	...
1101c719:	add    BYTE PTR [eax],al
1101c71b:	add    al,BYTE PTR [eax]
1101c71d:	add    BYTE PTR [eax],al
1101c71f:	adc    DWORD PTR [eax],eax
1101c721:	add    BYTE PTR [eax],al
1101c723:	and    eax,0x2c000000
1101c728:	add    BYTE PTR [eax],al
1101c72a:	add    BYTE PTR ds:0x32000000,ch
1101c730:	add    BYTE PTR [eax],al
1101c732:	add    BYTE PTR [eax+eax*1+0x0],cl
1101c736:	add    BYTE PTR [eax-0x2c000000],cl
1101c73c:	inc    ebp
1101c73d:	inc    ebp
1101c73e:	inc    ebp
1101c73f:	inc    BYTE PTR [esp+eax*2+0x44]
1101c743:	inc    BYTE PTR [eax]
1101c745:	add    BYTE PTR [eax],al
1101c747:	aam    0x0
1101c749:	add    BYTE PTR [eax],al
1101c74b:	mov    BYTE PTR [eax],al
1101c74d:	add    BYTE PTR [eax],al
1101c74f:	dec    esp
1101c750:	add    BYTE PTR [eax],al
1101c752:	add    BYTE PTR [edx],dh
1101c754:	add    BYTE PTR [eax],al
1101c756:	add    BYTE PTR ds:0x2c000000,ch
1101c75c:	add    BYTE PTR [eax],al
1101c75e:	add    BYTE PTR [eax+eax*1],ch
1101c761:	add    BYTE PTR [eax],al
1101c763:	sub    al,BYTE PTR [eax]
1101c765:	add    BYTE PTR [eax],al
1101c767:	sbb    al,0x0
1101c769:	add    BYTE PTR [eax],al
1101c76b:	or     BYTE PTR [eax],al
	...
1101c779:	add    BYTE PTR [eax],al
1101c77b:	or     DWORD PTR [eax],eax
1101c77d:	add    BYTE PTR [eax],al
1101c77f:	cmp    al,0x0
1101c781:	add    BYTE PTR [eax],al
1101c783:	add    DWORD PTR [eax],0x0
1101c786:	add    BYTE PTR [eax+eax*1+0xa00000],bl
1101c78d:	add    BYTE PTR [eax],al
1101c78f:	stos   DWORD PTR es:[edi],eax
1101c790:	add    BYTE PTR [eax],al
1101c792:	add    dh,al
1101c794:	add    BYTE PTR [eax],al
1101c796:	add    al,ch
1101c798:	inc    ebp
1101c799:	inc    ebp
1101c79a:	inc    ebp
1101c79b:	(bad)  
1101c79c:	hlt    
1101c79d:	hlt    
1101c79e:	hlt    
1101c79f:	push   ebx
1101c7a1:	repz repz inc DWORD PTR [esp+eax*2+0x44]
1101c7a7:	inc    BYTE PTR [eax]
1101c7a9:	add    BYTE PTR [eax],al
1101c7ab:	call   0xd701c7b0
1101c7b0:	add    BYTE PTR [eax],al
1101c7b2:	add    BYTE PTR [ebx-0x60000000],ch
1101c7b8:	add    BYTE PTR [eax],al
1101c7ba:	add    BYTE PTR [esi-0x62000000],bl
1101c7c0:	add    BYTE PTR [eax],al
1101c7c2:	add    BYTE PTR [esi+0x63000000],dl
1101c7c8:	add    BYTE PTR [eax],al
1101c7ca:	add    BYTE PTR [eax+eax*1],bl
1101c7cd:	add    BYTE PTR [eax],al
1101c7cf:	add    al,BYTE PTR [eax]
	...
1101c7d9:	add    BYTE PTR [eax],al
1101c7db:	push   cs
1101c7dc:	invd   
1101c7de:	add    eax,0x16223cff
1101c7e3:	(bad)  
1101c7e4:	cmp    DWORD PTR [eax],esp
1101c7e6:	adc    eax,0x101a2eff
1101c7eb:	call   FWORD PTR [ecx]
1101c7ed:	push   cs
1101c7ee:	or     edi,edi
1101c7f0:	add    al,0x2
1101c7f2:	add    edi,edi
1101c7f4:	inc    ebp
1101c7f5:	inc    ebp
1101c7f6:	inc    ebp
1101c7f7:	push   esp
1101c7f9:	hlt    
1101c7fa:	hlt    
1101c7fb:	(bad)  
1101c7fc:	std    
1101c7fd:	std    
1101c7fe:	std    
1101c7ff:	(bad)  
1101c800:	std    
1101c801:	std    
1101c802:	std    
1101c803:	push   esp
1101c805:	hlt    
1101c806:	hlt    
1101c807:	inc    DWORD PTR [esp+eax*2+0x44]
1101c80b:	inc    DWORD PTR [edx+eax*1]
1101c80e:	add    edi,edi
1101c810:	sbb    DWORD PTR [esi],ecx
1101c812:	or     edi,edi
1101c814:	sbb    dl,BYTE PTR cs:[ecx]
1101c817:	(bad)  
1101c818:	cmp    DWORD PTR [eax],esp
1101c81a:	adc    eax,0x16223cff
1101c81f:	dec    DWORD PTR [edi]
1101c821:	or     BYTE PTR ds:0xff,al
1101c827:	xchg   ebp,eax
1101c828:	add    BYTE PTR [eax],al
1101c82a:	add    BYTE PTR [edx],ch
1101c82c:	add    BYTE PTR [eax],al
1101c82e:	add    BYTE PTR [ebx],al
	...
1101c838:	add    BYTE PTR [eax],al
1101c83a:	add    BYTE PTR [edi],cl
1101c83c:	cmp    al,0x22
1101c83e:	push   ss
1101c83f:	(bad)  
1101c840:	in     eax,dx
1101c841:	xchg   BYTE PTR [edi-0x1],dl
1101c844:	int    0x74
1101c846:	dec    ebx
1101c847:	inc    DWORD PTR [ebp+0x2eff314b]
1101c84d:	sbb    dl,BYTE PTR [ecx]
1101c84f:	inc    DWORD PTR [esi+0x46]
1101c852:	inc    ebp
1101c853:	push   ebp
1101c855:	cmc    
1101c856:	hlt    
1101c857:	(bad)  
1101c858:	std    
1101c859:	std    
1101c85a:	std    
1101c85b:	(bad)  
1101c85c:	(bad)  
1101c85d:	(bad)  
1101c85e:	std    
1101c85f:	(bad)  
1101c860:	std    
1101c861:	std    
1101c862:	std    
1101c863:	(bad)  
1101c864:	(bad)  
1101c865:	(bad)  
1101c866:	(bad)  
1101c867:	push   esp
1101c869:	hlt    
1101c86a:	repz inc DWORD PTR [ebp+0x45]
1101c86e:	inc    esp
1101c86f:	jmp    FWORD PTR [esi]
1101c871:	sbb    dl,BYTE PTR [eax]
1101c873:	inc    DWORD PTR [esi-0x3200ceb5]
1101c879:	je     0x1101c8c7
1101c87b:	(bad)  
1101c87c:	in     eax,dx
1101c87d:	xchg   BYTE PTR [eax-0x1],bl
1101c880:	cmp    al,0x22
1101c882:	push   ss
1101c883:	inc    DWORD PTR [eax]
1101c885:	add    BYTE PTR [eax],al
1101c887:	sahf   
1101c888:	add    BYTE PTR [eax],al
1101c88a:	add    BYTE PTR [eax+eax*1],ch
1101c88d:	add    BYTE PTR [eax],al
1101c88f:	add    eax,DWORD PTR [eax]
	...
1101c899:	add    BYTE PTR [eax],al
1101c89b:	(bad)  
1101c89d:	and    BYTE PTR ds:0x4c74ceff,dl
1101c8a3:	inc    DWORD PTR [esi+0x2eff314b]
1101c8a9:	sbb    dl,BYTE PTR [eax]
1101c8ab:	inc    DWORD PTR [esi+0x46]
1101c8ae:	inc    ebp
1101c8af:	push   esp
1101c8b1:	hlt    
1101c8b2:	hlt    
1101c8b3:	(bad)  
1101c8b4:	std    
1101c8b5:	std    
1101c8b6:	std    
1101c8b7:	(bad)  
1101c8b8:	(bad)  
1101c8b9:	(bad)  
1101c8ba:	std    
1101c8bb:	(bad)  
1101c8bc:	std    
1101c8bd:	std    
1101c8be:	std    
1101c8bf:	(bad)  
1101c8c0:	(bad)  
1101c8c1:	(bad)  
1101c8c2:	std    
1101c8c3:	(bad)  
1101c8c4:	std    
1101c8c5:	std    
1101c8c6:	std    
1101c8c7:	(bad)  
1101c8c8:	std    
1101c8c9:	std    
1101c8ca:	std    
1101c8cb:	push   ebx
1101c8cd:	repz repz inc DWORD PTR [ebp+0x45]
1101c8d2:	inc    esp
1101c8d3:	jmp    FWORD PTR [esi]
1101c8d5:	sbb    dl,BYTE PTR [ecx]
1101c8d7:	inc    DWORD PTR [esi-0x3100ceb5]
1101c8dd:	je     0x1101c92b
1101c8df:	(bad)  
1101c8e0:	cmp    DWORD PTR [eax],esp
1101c8e2:	adc    eax,0xff
1101c8e7:	sahf   
1101c8e8:	add    BYTE PTR [eax],al
1101c8ea:	add    BYTE PTR [eax+eax*1],ch
1101c8ed:	add    BYTE PTR [eax],al
1101c8ef:	add    eax,DWORD PTR [eax]
	...
1101c8f9:	add    BYTE PTR [eax],al
1101c8fb:	adc    eax,0xff101a2e
1101c900:	test   DWORD PTR [ebx+0x31],ecx
1101c903:	jmp    FWORD PTR [esi]
1101c905:	sbb    dl,BYTE PTR [eax]
1101c907:	inc    DWORD PTR [esi+0x46]
1101c90a:	inc    esi
1101c90b:	push   ebp
1101c90d:	cmc    
1101c90e:	hlt    
1101c90f:	(bad)  
1101c910:	std    
1101c911:	cli    
1101c912:	clc    
1101c913:	push   ebx
1101c915:	ret    
1101c916:	mov    al,0xff
1101c918:	in     al,0x8c
1101c91a:	imul   edi,edi,0xffffffda
1101c91d:	ins    DWORD PTR es:[edi],dx
1101c91e:	inc    esi
1101c91f:	call   esp
1101c921:	inc    ax
1101c923:	(bad)  
1101c924:	fdivr  DWORD PTR [esi+ebx*2-0x1]
1101c928:	out    0xb4,eax
1101c92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101c92b:	(bad)  
1101c92c:	cld    
1101c92d:	clc    
1101c92e:	idiv   edi
1101c930:	hlt    
1101c931:	hlt    
1101c932:	hlt    
1101c933:	inc    DWORD PTR [ebp+0x45]
1101c936:	inc    esp
1101c937:	jmp    FWORD PTR [esi]
1101c939:	sbb    DWORD PTR [eax],edx
1101c93b:	inc    DWORD PTR [esi+0x2eff314b]
1101c941:	sbb    dl,BYTE PTR [ecx]
1101c943:	inc    DWORD PTR [eax]
1101c945:	add    BYTE PTR [eax],al
1101c947:	mov    al,ds:0x2d000000
1101c94c:	add    BYTE PTR [eax],al
1101c94e:	add    BYTE PTR [ebx],al
1101c950:	add    BYTE PTR [eax],al
1101c952:	add    BYTE PTR [eax],al
1101c954:	add    BYTE PTR [eax],al
1101c956:	add    BYTE PTR [edi],al
1101c958:	add    BYTE PTR [eax],al
1101c95a:	add    BYTE PTR [ecx+ebx*1],dh
1101c95d:	push   cs
1101c95e:	or     edi,edi
1101c960:	sbb    dl,BYTE PTR cs:[ecx]
1101c963:	inc    DWORD PTR [esi+0x46]
1101c966:	inc    ebp
1101c967:	push   ebp
1101c969:	cmc    
1101c96a:	cmc    
1101c96b:	(bad)  
1101c96c:	std    
1101c96d:	icebp  
1101c96e:	in     al,dx
1101c96f:	push   eax
1101c971:	call   0xff4f:0x7ce7ff74
1101c978:	loop   0x1101c9ef
1101c97a:	dec    edx
1101c97b:	(bad)  
1101c97c:	(bad)  [esi+0x44]
1101c97f:	(bad)  
1101c980:	fsub   DWORD PTR [edi+0x3f]
1101c983:	call   edx
1101c985:	pop    edi
1101c986:	cmp    bh,bh
1101c988:	int    0x58
1101c98a:	xor    bh,bh
1101c98c:	shl    BYTE PTR [edx+0x54],cl
1101c98f:	(bad)  
1101c990:	clc    
1101c991:	jmp    0x1101c97a
1101c993:	push   esp
1101c995:	hlt    
1101c996:	hlt    
1101c997:	inc    DWORD PTR [ebp+0x45]
1101c99a:	inc    esp
1101c99b:	jmp    FWORD PTR [esi]
1101c99d:	sbb    dl,BYTE PTR [eax]
1101c99f:	call   FWORD PTR [ecx]
1101c9a1:	push   cs
1101c9a2:	or     edi,edi
1101c9a4:	add    BYTE PTR [eax],al
1101c9a6:	add    BYTE PTR [ebx+0x32000000],ch
1101c9ac:	add    BYTE PTR [eax],al
1101c9ae:	add    BYTE PTR [ebx],al
1101c9b0:	add    BYTE PTR [eax],al
1101c9b2:	add    BYTE PTR [esi],al
1101c9b4:	add    BYTE PTR [eax],al
1101c9b6:	add    BYTE PTR [eax],ch
1101c9b8:	add    BYTE PTR [eax],al
1101c9ba:	add    BYTE PTR [ecx+0x4],bh
1101c9bd:	add    al,BYTE PTR [ecx]
1101c9bf:	inc    DWORD PTR [esi+0x46]
1101c9c2:	inc    ebp
1101c9c3:	push   esp
1101c9c5:	hlt    
1101c9c6:	hlt    
1101c9c7:	(bad)  
1101c9c8:	std    
1101c9c9:	cli    
1101c9ca:	clc    
1101c9cb:	push   ebp
1101c9cd:	mov    al,ds:0x8af1ff7a
1101c9d2:	pop    esp
1101c9d3:	(bad)  
1101c9d4:	in     eax,dx
1101c9d5:	test   DWORD PTR [eax-0x1],ebx
1101c9d8:	call   0xf5011d5b
1101c9dd:	ja     0x1101ca2b
1101c9df:	(bad)  
1101c9e0:	fisubr WORD PTR [edi+0x46]
1101c9e3:	(bad)  
1101c9e4:	fsub   DWORD PTR [edi+0x3f]
1101c9e7:	call   ebx
1101c9e9:	pusha  
1101c9ea:	cmp    edi,edi
1101c9ec:	int    0x58
1101c9ee:	xor    edi,edi
1101c9f0:	shl    BYTE PTR [edx+0x54],cl
1101c9f3:	(bad)  
1101c9f4:	cld    
1101c9f5:	stc    
1101c9f6:	idiv   edi
1101c9f8:	repz repz repz inc DWORD PTR [ebp+0x45]
1101c9fe:	inc    esp
1101c9ff:	inc    DWORD PTR [edx+eax*1]
1101ca02:	add    edi,edi
1101ca04:	add    BYTE PTR [eax],al
1101ca06:	add    dh,al
1101ca08:	add    BYTE PTR [eax],al
1101ca0a:	add    BYTE PTR [eax+eax*1+0x0],cl
1101ca0e:	add    BYTE PTR [ecx],cl
1101ca10:	add    BYTE PTR [eax],al
1101ca12:	add    BYTE PTR ds:0x72000000,ah
1101ca18:	add    BYTE PTR [eax],al
1101ca1a:	add    al,dl
1101ca1c:	inc    ebp
1101ca1d:	inc    ebp
1101ca1e:	inc    ebp
1101ca1f:	push   esp
1101ca21:	hlt    
1101ca22:	hlt    
1101ca23:	(bad)  
1101ca24:	std    
1101ca25:	std    
1101ca26:	std    
1101ca27:	(bad)  
1101ca28:	stc    
1101ca29:	int    0xb9
1101ca2b:	push   ebx
1101ca2d:	mov    fs,WORD PTR [ecx-0x1]
1101ca30:	hlt    
1101ca31:	nop
1101ca32:	arpl   di,di
1101ca34:	repnz (bad) 
1101ca36:	arpl   di,di
1101ca38:	out    dx,al
1101ca39:	mov    BYTE PTR [ebp-0x1],bl
1101ca3c:	jmp    0xf5011fc1
1101ca41:	js     0x1101ca91
1101ca43:	(bad)  
1101ca44:	fidiv  WORD PTR [eax+0x46]
1101ca47:	(bad)  
1101ca48:	fsubr  DWORD PTR [eax+0x3f]
1101ca4b:	call   ebx
1101ca4d:	pusha  
1101ca4e:	cmp    edi,edi
1101ca50:	int    0x58
1101ca52:	xor    bh,bh
1101ca54:	out    0xb4,eax
1101ca56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101ca57:	(bad)  
1101ca58:	std    
1101ca59:	std    
1101ca5a:	std    
1101ca5b:	push   esp
1101ca5d:	hlt    
1101ca5e:	repz inc DWORD PTR [esp+eax*2+0x44]
1101ca63:	inc    DWORD PTR [eax]
1101ca65:	add    BYTE PTR [eax],al
1101ca67:	jmp    0x9901ca6c
1101ca6c:	add    BYTE PTR [eax],al
1101ca6e:	add    BYTE PTR [eax],ch
1101ca70:	add    BYTE PTR [eax],al
1101ca72:	add    BYTE PTR [ebp+0x0],dl
1101ca75:	add    BYTE PTR [eax],al
1101ca77:	mov    BYTE PTR [ebp+0x45],0x45
1101ca7b:	(bad)  
1101ca7c:	cmc    
1101ca7d:	cmc    
1101ca7e:	cmc    
1101ca7f:	(bad)  
1101ca80:	(bad)  
1101ca81:	(bad)  
1101ca82:	std    
1101ca83:	(bad)  
1101ca84:	(bad)  
1101ca85:	(bad)  
1101ca86:	(bad)  
1101ca87:	push   esi
1101ca89:	test   al,0x84
1101ca8b:	push   esp
1101ca8d:	xchg   ebp,eax
1101ca8e:	imul   edi,edi,0xff6d97f4
1101ca94:	hlt    
1101ca95:	xchg   edi,eax
1101ca96:	ins    DWORD PTR es:[edi],dx
1101ca97:	push   ebx
1101ca99:	xchg   esp,eax
1101ca9a:	imul   edi,edi,0xff618bee
1101caa0:	jmp    0xf5012227
1101caa5:	js     0x1101caf5
1101caa7:	(bad)  
1101caa8:	fidiv  WORD PTR [eax+0x46]
1101caab:	(bad)  
1101caac:	fldcw  WORD PTR [eax+0x3f]
1101caaf:	call   edx
1101cab1:	pop    edi
1101cab2:	cmp    bh,bh
1101cab4:	fdivr  DWORD PTR [esi+ebx*2-0x1]
1101cab8:	(bad)  
1101cab9:	(bad)  
1101caba:	std    
1101cabb:	(bad)  
1101cabc:	(bad)  
1101cabd:	(bad)  
1101cabe:	(bad)  
1101cabf:	push   esp
1101cac1:	hlt    
1101cac2:	hlt    
1101cac3:	inc    DWORD PTR [esp+eax*2+0x44]
1101cac7:	inc    BYTE PTR [eax]
1101cac9:	add    BYTE PTR [eax],al
1101cacb:	int3   
1101cacc:	add    BYTE PTR [eax],al
1101cace:	add    BYTE PTR [esi+0x0],dl
1101cad1:	add    BYTE PTR [eax],al
1101cad3:	test   BYTE PTR [ebp+0x45],al
1101cad6:	inc    ebp
1101cad7:	std    
1101cad8:	hlt    
1101cad9:	hlt    
1101cada:	hlt    
1101cadb:	(bad)  
1101cadc:	std    
1101cadd:	std    
1101cade:	std    
1101cadf:	(bad)  
1101cae0:	std    
1101cae1:	std    
1101cae2:	std    
1101cae3:	(bad)  
1101cae4:	std    
1101cae5:	std    
1101cae6:	std    
1101cae7:	push   ebp
1101cae9:	fwait
1101caea:	jb     0x1101caeb
1101caec:	cmc    
1101caed:	lahf   
1101caee:	ja     0x1101caef
1101caf0:	cmc    
1101caf1:	mov    ds:0xa2f5ff7d,eax
1101caf6:	jge    0x1101caf7
1101caf8:	cmc    
1101caf9:	sahf   
1101cafa:	ja     0x1101cafb
1101cafc:	repz cwde 
1101cafe:	outs   dx,DWORD PTR ds:[esi]
1101caff:	(bad)  
1101cb00:	out    dx,eax
1101cb01:	lea    esp,[edx-0x1]
1101cb04:	call   0xf501228a
1101cb09:	js     0x1101cb59
1101cb0b:	(bad)  
1101cb0c:	fisubr WORD PTR [edi+0x46]
1101cb0f:	call   edi
1101cb11:	addr16 notrack call esp
1101cb15:	inc    cx
1101cb17:	(bad)  
1101cb18:	std    
1101cb19:	std    
1101cb1a:	std    
1101cb1b:	(bad)  
1101cb1c:	std    
1101cb1d:	std    
1101cb1e:	std    
1101cb1f:	(bad)  
1101cb20:	std    
1101cb21:	std    
1101cb22:	std    
1101cb23:	push   ebx
1101cb25:	repz repz inc DWORD PTR [esp+eax*2+0x44]
1101cb2b:	std    
1101cb2c:	add    BYTE PTR [eax],al
1101cb2e:	add    BYTE PTR [eax+eax*1+0x46600000],al
1101cb35:	inc    esi
1101cb36:	inc    esi
1101cb37:	cli    
1101cb38:	cmc    
1101cb39:	cmc    
1101cb3a:	cmc    
1101cb3b:	(bad)  
1101cb3c:	std    
1101cb3d:	std    
1101cb3e:	std    
1101cb3f:	(bad)  
1101cb40:	(bad)  
1101cb41:	(bad)  
1101cb42:	std    
1101cb43:	(bad)  
1101cb44:	std    
1101cb45:	std    
1101cb46:	std    
1101cb47:	push   esi
1101cb49:	mov    ds:0xadf7ff7e,eax
1101cb4e:	mov    edi,?
1101cb50:	div    DWORD PTR [esi+edx*4-0x6b4c0801]
1101cb57:	push   esi
1101cb59:	lods   al,BYTE PTR ds:[esi]
1101cb5a:	mov    bh,bh
1101cb5c:	cmc    
1101cb5d:	mov    ds:0x97f3ff7c,al
1101cb62:	outs   dx,BYTE PTR ds:[esi]
1101cb63:	(bad)  
1101cb64:	out    dx,al
1101cb65:	mov    esp,DWORD PTR [eax-0x1]
1101cb68:	call   0xf50120ed
1101cb6d:	ja     0x1101cbbb
1101cb6f:	(bad)  
1101cb70:	(bad)  [esi+0x44]
1101cb73:	(bad)  
1101cb74:	fisubr DWORD PTR [ebp+0x46]
1101cb77:	(bad)  
1101cb78:	std    
1101cb79:	std    
1101cb7a:	std    
1101cb7b:	(bad)  
1101cb7c:	(bad)  
1101cb7d:	(bad)  
1101cb7e:	std    
1101cb7f:	(bad)  
1101cb80:	std    
1101cb81:	std    
1101cb82:	std    
1101cb83:	push   esp
1101cb85:	hlt    
1101cb86:	hlt    
1101cb87:	inc    DWORD PTR [ebp+0x45]
1101cb8a:	inc    ebp
1101cb8b:	cli    
1101cb8c:	add    BYTE PTR [eax],al
1101cb8e:	add    BYTE PTR [eax+0x0],ah
1101cb91:	add    BYTE PTR [eax],al
1101cb93:	add    al,0x0
1101cb95:	add    BYTE PTR [eax],al
1101cb97:	popa   
1101cb98:	inc    esi
1101cb99:	inc    esi
1101cb9a:	inc    esi
1101cb9b:	cli    
1101cb9c:	hlt    
1101cb9d:	hlt    
1101cb9e:	hlt    
1101cb9f:	(bad)  
1101cba0:	(bad)  
1101cba1:	(bad)  
1101cba2:	std    
1101cba3:	(bad)  
1101cba4:	(bad)  
1101cba5:	(bad)  
1101cba6:	std    
1101cba7:	(bad)  
1101cba8:	clc    
1101cba9:	mov    ebx,0xbdf8ff9f
1101cbae:	mov    ds:0xb2c8f9ff,al
1101cbb3:	(bad)  
1101cbb4:	clc    
1101cbb5:	(bad)  
1101cbb6:	scas   eax,DWORD PTR es:[edi]
1101cbb7:	push   edi
1101cbb9:	mov    ebx,0xacf6ffa0
1101cbbe:	mov    bh,bh
1101cbc0:	cmc    
1101cbc1:	sahf   
1101cbc2:	ja     0x1101cbc3
1101cbc4:	repnz xchg ebx,eax
1101cbc6:	imul   edi,edi,0xff5d88ed
1101cbcc:	call   0xf4011e4f
1101cbd1:	jne    0x1101cc1d
1101cbd3:	jmp    ebp
1101cbd5:	mov    WORD PTR [ebx-0x1],gs
1101cbd8:	(bad)  
1101cbd9:	(bad)  
1101cbda:	std    
1101cbdb:	(bad)  
1101cbdc:	(bad)  
1101cbdd:	(bad)  
1101cbde:	std    
1101cbdf:	push   esp
1101cbe1:	hlt    
1101cbe2:	hlt    
1101cbe3:	inc    DWORD PTR [ebp+0x45]
1101cbe6:	inc    ebp
1101cbe7:	cld    
1101cbe8:	add    BYTE PTR [eax],al
1101cbea:	add    BYTE PTR [esi+0x0],dh
1101cbed:	add    BYTE PTR [eax],al
1101cbef:	or     BYTE PTR [eax],al
1101cbf1:	add    BYTE PTR [eax],al
1101cbf3:	add    BYTE PTR [eax],al
1101cbf5:	add    BYTE PTR [eax],al
1101cbf7:	add    eax,0x67000000
1101cbfc:	inc    esi
1101cbfd:	inc    esi
1101cbfe:	inc    esi
1101cbff:	push   ebp
1101cc01:	cmc    
1101cc02:	hlt    
1101cc03:	(bad)  
1101cc04:	std    
1101cc05:	std    
1101cc06:	std    
1101cc07:	(bad)  
1101cc08:	sti    
1101cc09:	fst    st(0)
1101cc0b:	(bad)  
1101cc0c:	clc    
1101cc0d:	(bad)  
1101cc0e:	mov    al,0xff
1101cc10:	cli    
1101cc11:	xlat   BYTE PTR ds:[ebx]
1101cc12:	enter  0xfaff,0xd6
1101cc16:	(bad)  
1101cc19:	(bad)  
1101cc1a:	mov    al,0xff
1101cc1c:	div    DWORD PTR [ebx-0x5c09006b]
1101cc22:	jge    0x1101cc23
1101cc24:	hlt    
1101cc25:	xchg   edi,eax
1101cc26:	ins    DWORD PTR es:[edi],dx
1101cc27:	push   ebx
1101cc29:	(bad)  
1101cc2a:	arpl   di,di
1101cc2c:	out    dx,al
1101cc2d:	xchg   BYTE PTR [ecx-0x1],bl
1101cc30:	call   0x5011bb1
1101cc35:	ret    
1101cc36:	mov    al,0xff
1101cc38:	std    
1101cc39:	std    
1101cc3a:	std    
1101cc3b:	push   ebp
1101cc3d:	cmc    
1101cc3e:	hlt    
1101cc3f:	inc    DWORD PTR [ebp+0x45]
1101cc42:	inc    ebp
1101cc43:	inc    DWORD PTR [eax]
1101cc45:	add    BYTE PTR [eax],al
1101cc47:	mov    edx,0x30000000
1101cc4c:	add    BYTE PTR [eax],al
1101cc4e:	add    BYTE PTR [ebx],al
	...
1101cc58:	add    BYTE PTR [eax],al
1101cc5a:	add    BYTE PTR [ebx],dl
1101cc5c:	adc    DWORD PTR [ecx],ecx
1101cc5e:	push   es
1101cc5f:	dec    DWORD PTR [edx+0x48]
1101cc62:	inc    edi
1101cc63:	push   ebp
1101cc65:	cmc    
1101cc66:	hlt    
1101cc67:	(bad)  
1101cc68:	std    
1101cc69:	cld    
1101cc6a:	sti    
1101cc6b:	(bad)  
1101cc6c:	stc    
1101cc6d:	iret   
1101cc6e:	mov    ebx,0xc6d6faff
1101cc73:	(bad)  
1101cc74:	cli    
1101cc75:	xlat   BYTE PTR ds:[ebx]
1101cc76:	enter  0xf9ff,0xc8
1101cc7a:	mov    dl,0xff
1101cc7c:	div    DWORD PTR [esi+edx*4+0x7ea3f5ff]
1101cc83:	push   esp
1101cc85:	xchg   edi,eax
1101cc86:	ins    DWORD PTR es:[edi],dx
1101cc87:	push   esp
1101cc89:	nop
1101cc8a:	fs push edx
1101cc8d:	mov    ebx,DWORD PTR [ebp-0x1]
1101cc90:	lock call 0xfff9:0xfafdff74
1101cc98:	hlt    
1101cc99:	hlt    
1101cc9a:	hlt    
1101cc9b:	dec    DWORD PTR [edx+0x48]
1101cc9e:	inc    edi
1101cc9f:	call   DWORD PTR [ecx]
1101cca1:	or     DWORD PTR [esi],eax
1101cca3:	inc    DWORD PTR [eax]
1101cca5:	add    BYTE PTR [eax],al
1101cca7:	mov    al,ds:0x2d000000
1101ccac:	add    BYTE PTR [eax],al
1101ccae:	add    BYTE PTR [ebx],al
	...
1101ccb8:	add    BYTE PTR [eax],al
1101ccba:	add    BYTE PTR [edi],cl
1101ccbc:	cmp    ah,BYTE PTR [eax]
1101ccbe:	adc    eax,0x375596ff
1101ccc3:	dec    DWORD PTR [edx+0x48]
1101ccc6:	inc    edi
1101ccc7:	push   ebp
1101ccc9:	cmc    
1101ccca:	cmc    
1101cccb:	(bad)  
1101cccc:	std    
1101cccd:	div    esp
1101cccf:	(bad)  
1101ccd0:	stc    
1101ccd1:	into   
1101ccd2:	mov    ebx,0xb0c6f8ff
1101ccd7:	(bad)  
1101ccd8:	clc    
1101ccd9:	mov    ebp,0xadf6ffa2
1101ccde:	mov    edi,?
1101cce0:	cmc    
1101cce1:	lahf   
1101cce2:	js     0x1101cce3
1101cce4:	hlt    
1101cce5:	xchg   esp,eax
1101cce6:	imul   edi,edi,0xff608ef3
1101ccec:	cmc    
1101cced:	mov    eax,ds:0xf1fdff7a
1101ccf2:	in     al,dx
1101ccf3:	push   ebp
1101ccf5:	cmc    
1101ccf6:	hlt    
1101ccf7:	dec    DWORD PTR [edx+0x48]
1101ccfa:	inc    edi
1101ccfb:	call   DWORD PTR [edi+0x3aff3855]
1101cd01:	and    BYTE PTR ds:0xff,dl
1101cd07:	sahf   
1101cd08:	add    BYTE PTR [eax],al
1101cd0a:	add    BYTE PTR [eax+eax*1],ch
1101cd0d:	add    BYTE PTR [eax],al
1101cd0f:	add    eax,DWORD PTR [eax]
	...
1101cd19:	add    BYTE PTR [eax],al
1101cd1b:	(bad)  
1101cd1d:	and    dl,BYTE PTR [esi]
1101cd1f:	(bad)  
1101cd20:	out    dx,al
1101cd21:	xchg   BYTE PTR [eax-0x1],bl
1101cd24:	xchg   esi,eax
1101cd25:	push   esp
1101cd26:	aaa    
1101cd27:	dec    DWORD PTR [edx+0x49]
1101cd2a:	dec    eax
1101cd2b:	push   ebp
1101cd2d:	cmc    
1101cd2e:	hlt    
1101cd2f:	(bad)  
1101cd30:	std    
1101cd31:	cld    
1101cd32:	sti    
1101cd33:	(bad)  
1101cd34:	sti    
1101cd35:	(bad)  
1101cd37:	(bad)  
1101cd38:	clc    
1101cd39:	mov    ebx,0xa3f6ffa0
1101cd3e:	jle    0x1101cd3f
1101cd40:	cmc    
1101cd41:	fwait
1101cd42:	jb     0x1101cd43
1101cd44:	mul    BYTE PTR [edi-0x3206007c]
1101cd4a:	mov    ecx,0xf8fafdff
1101cd4f:	push   ebp
1101cd51:	cmc    
1101cd52:	cmc    
1101cd53:	dec    DWORD PTR [edx+0x48]
1101cd56:	inc    edi
1101cd57:	call   DWORD PTR [edi-0x1100c7ab]
1101cd5d:	xchg   BYTE PTR [eax-0x1],bl
1101cd60:	cmp    al,0x22
1101cd62:	push   ss
1101cd63:	inc    DWORD PTR [eax]
1101cd65:	add    BYTE PTR [eax],al
1101cd67:	sahf   
1101cd68:	add    BYTE PTR [eax],al
1101cd6a:	add    BYTE PTR [eax+eax*1],ch
1101cd6d:	add    BYTE PTR [eax],al
1101cd6f:	add    eax,DWORD PTR [eax]
	...
1101cd79:	add    BYTE PTR [eax],al
1101cd7b:	(bad)  
1101cd7d:	and    dl,BYTE PTR [esi]
1101cd7f:	push   ebx
1101cd81:	mov    DWORD PTR [edx-0x1],ebx
1101cd84:	out    dx,al
1101cd85:	xchg   BYTE PTR [eax-0x1],bl
1101cd88:	xchg   esi,eax
1101cd89:	push   esp
1101cd8a:	aaa    
1101cd8b:	dec    DWORD PTR [edx+0x48]
1101cd8e:	inc    edi
1101cd8f:	push   ebp
1101cd91:	cmc    
1101cd92:	hlt    
1101cd93:	(bad)  
1101cd94:	std    
1101cd95:	std    
1101cd96:	std    
1101cd97:	(bad)  
1101cd98:	(bad)  
1101cd99:	(bad)  
1101cd9a:	std    
1101cd9b:	(bad)  
1101cd9c:	std    
1101cd9d:	std    
1101cd9e:	std    
1101cd9f:	(bad)  
1101cda0:	std    
1101cda1:	std    
1101cda2:	std    
1101cda3:	(bad)  
1101cda4:	(bad)  
1101cda5:	(bad)  
1101cda6:	(bad)  
1101cda7:	(bad)  
1101cda8:	std    
1101cda9:	std    
1101cdaa:	std    
1101cdab:	push   esp
1101cdad:	hlt    
1101cdae:	hlt    
1101cdaf:	dec    DWORD PTR [edx+0x48]
1101cdb2:	inc    edi
1101cdb3:	call   DWORD PTR [edi-0x1100c7ab]
1101cdb9:	xchg   BYTE PTR [eax-0x1],bl
1101cdbc:	xrelease mov DWORD PTR [edx-0x1],ebx
1101cdc0:	cmp    al,0x22
1101cdc2:	push   ss
1101cdc3:	inc    DWORD PTR [eax]
1101cdc5:	add    BYTE PTR [eax],al
1101cdc7:	pushf  
1101cdc8:	add    BYTE PTR [eax],al
1101cdca:	add    BYTE PTR [eax+eax*1],ch
1101cdcd:	add    BYTE PTR [eax],al
1101cdcf:	add    eax,DWORD PTR [eax]
	...
1101cdd9:	add    BYTE PTR [eax],al
1101cddb:	or     al,0x3d
1101cddd:	and    dl,BYTE PTR [esi]
1101cddf:	push   ebx
1101cde1:	mov    DWORD PTR [edx-0x1],ebx
1101cde4:	xrelease mov DWORD PTR [edx-0x1],ebx
1101cde8:	out    dx,al
1101cde9:	xchg   BYTE PTR [eax-0x1],bl
1101cdec:	xchg   esi,eax
1101cded:	push   ebp
1101cdee:	aaa    
1101cdef:	dec    DWORD PTR [edx+0x48]
1101cdf2:	inc    edi
1101cdf3:	push   ebp
1101cdf5:	cmc    
1101cdf6:	hlt    
1101cdf7:	(bad)  
1101cdf8:	(bad)  
1101cdf9:	(bad)  
1101cdfa:	std    
1101cdfb:	(bad)  
1101cdfc:	(bad)  
1101cdfd:	(bad)  
1101cdfe:	std    
1101cdff:	(bad)  
1101ce00:	std    
1101ce01:	std    
1101ce02:	std    
1101ce03:	(bad)  
1101ce04:	(bad)  
1101ce05:	(bad)  
1101ce06:	std    
1101ce07:	push   esp
1101ce09:	hlt    
1101ce0a:	hlt    
1101ce0b:	dec    DWORD PTR [edx+0x48]
1101ce0e:	inc    edi
1101ce0f:	call   DWORD PTR [edi-0x1100c7ab]
1101ce15:	xchg   BYTE PTR [eax-0x1],bl
1101ce18:	xrelease mov DWORD PTR [edx-0x1],ebx
1101ce1c:	xrelease mov DWORD PTR [edx-0x1],ebx
1101ce20:	cmp    al,0x22
1101ce22:	push   ss
1101ce23:	inc    DWORD PTR [eax]
1101ce25:	add    BYTE PTR [eax],al
1101ce27:	add    DWORD PTR [eax],0x0
1101ce2a:	add    BYTE PTR ds:0x2000000,ah
	...
1101ce38:	add    BYTE PTR [eax],al
1101ce3a:	add    BYTE PTR [esi],al
1101ce3c:	invd   
1101ce3e:	add    eax,0x16223dff
1101ce43:	(bad)  
1101ce44:	cmp    eax,0x3cff1622
1101ce49:	and    dl,BYTE PTR [esi]
1101ce4b:	(bad)  
1101ce4c:	cmp    ah,BYTE PTR [eax]
1101ce4e:	adc    eax,0x60911ff
1101ce53:	inc    DWORD PTR [esi+0x46]
1101ce56:	inc    esi
1101ce57:	push   esp
1101ce59:	hlt    
1101ce5a:	hlt    
1101ce5b:	(bad)  
1101ce5c:	std    
1101ce5d:	std    
1101ce5e:	std    
1101ce5f:	(bad)  
1101ce60:	std    
1101ce61:	std    
1101ce62:	std    
1101ce63:	push   ebp
1101ce65:	cmc    
1101ce66:	cmc    
1101ce67:	inc    DWORD PTR [ebp+0x45]
1101ce6a:	inc    ebp
1101ce6b:	call   DWORD PTR [ecx]
1101ce6d:	or     DWORD PTR [esi],eax
1101ce6f:	(bad)  
1101ce70:	cmp    ah,BYTE PTR [eax]
1101ce72:	adc    eax,0x16223cff
1101ce77:	(bad)  
1101ce78:	cmp    al,0x22
1101ce7a:	push   ss
1101ce7b:	(bad)  
1101ce7c:	cmp    al,0x22
1101ce7e:	push   ss
1101ce7f:	dec    DWORD PTR [edi]
1101ce81:	or     BYTE PTR ds:0xff,al
1101ce87:	cmp    al,0x0
1101ce89:	add    BYTE PTR [eax],al
1101ce8b:	adc    DWORD PTR [eax],eax
1101ce8d:	add    BYTE PTR [eax],al
1101ce8f:	add    DWORD PTR [eax],eax
	...
1101ce9d:	add    BYTE PTR [eax],al
1101ce9f:	push   es
1101cea0:	add    BYTE PTR [eax],al
1101cea2:	add    BYTE PTR [eax+eax*1],cl
1101cea5:	add    BYTE PTR [eax],al
1101cea7:	push   cs
1101cea8:	add    BYTE PTR [eax],al
1101ceaa:	add    BYTE PTR [edi],cl
1101ceac:	add    BYTE PTR [eax],al
1101ceae:	add    BYTE PTR [edi],cl
1101ceb0:	add    BYTE PTR [eax],al
1101ceb2:	add    BYTE PTR [ebx],dl
1101ceb4:	add    BYTE PTR [eax],al
1101ceb6:	add    BYTE PTR [edi+0x46],ah
1101ceb9:	inc    esi
1101ceba:	inc    esi
1101cebb:	cli    
1101cebc:	cmc    
1101cebd:	cmc    
1101cebe:	cmc    
1101cebf:	push   esp
1101cec1:	hlt    
1101cec2:	hlt    
1101cec3:	inc    DWORD PTR [ebp+0x45]
1101cec6:	inc    ebp
1101cec7:	stc    
1101cec8:	add    BYTE PTR [eax],al
1101ceca:	add    BYTE PTR [esi+0x0],ah
1101cecd:	add    BYTE PTR [eax],al
1101cecf:	adc    eax,DWORD PTR [eax]
1101ced1:	add    BYTE PTR [eax],al
1101ced3:	sldt   WORD PTR [eax]
1101ced6:	add    BYTE PTR [edi],cl
1101ced8:	add    BYTE PTR [eax],al
1101ceda:	add    BYTE PTR [edi],cl
1101cedc:	add    BYTE PTR [eax],al
1101cede:	add    BYTE PTR [edi],cl
1101cee0:	add    BYTE PTR [eax],al
1101cee2:	add    BYTE PTR [esi],cl
1101cee4:	add    BYTE PTR [eax],al
1101cee6:	add    BYTE PTR [ecx],cl
1101cee8:	add    BYTE PTR [eax],al
1101ceea:	add    BYTE PTR [edx],al
	...
1101cf14:	add    BYTE PTR [eax],al
1101cf16:	add    BYTE PTR ds:0x60000000,al
1101cf1c:	inc    esi
1101cf1d:	inc    esi
1101cf1e:	inc    esi
1101cf1f:	stc    
1101cf20:	inc    ebp
1101cf21:	inc    ebp
1101cf22:	inc    ebp
1101cf23:	stc    
1101cf24:	add    BYTE PTR [eax],al
1101cf26:	add    BYTE PTR [edi+0x0],bl
1101cf29:	add    BYTE PTR [eax],al
1101cf2b:	add    eax,0x0
	...
1101cf78:	add    BYTE PTR [eax],al
1101cf7a:	add    BYTE PTR [eax+eax*1],al
1101cf7d:	add    BYTE PTR [eax],al
1101cf7f:	pop    eax
1101cf80:	add    BYTE PTR [eax],al
1101cf82:	add    BYTE PTR [edi+0x0],dl
1101cf85:	add    BYTE PTR [eax],al
1101cf87:	add    al,0x0
	...
1101cfad:	add    BYTE PTR [eax],al
1101cfaf:	add    al,ah
1101cfb1:	add    BYTE PTR [ebx],al
1101cfb3:	inc    ecx
1101cfb4:	rol    BYTE PTR [eax],0x1
1101cfb7:	inc    ecx
1101cfb8:	rol    BYTE PTR [eax],0x0
1101cfbb:	inc    ecx
1101cfbc:	rol    BYTE PTR [eax],0x0
1101cfbf:	inc    ecx
1101cfc0:	rol    BYTE PTR [eax],0x0
1101cfc3:	inc    ecx
1101cfc4:	rol    BYTE PTR [eax],0x0
1101cfc7:	inc    ecx
1101cfc8:	rol    BYTE PTR [eax],0x0
1101cfcb:	inc    ecx
1101cfcc:	add    BYTE PTR [eax],0x0
1101cfcf:	inc    ecx
1101cfd0:	add    BYTE PTR [eax],al
1101cfd2:	add    BYTE PTR [ecx+0x0],al
1101cfd5:	add    BYTE PTR [eax],al
1101cfd7:	inc    ecx
1101cfd8:	add    BYTE PTR [eax],al
1101cfda:	add    BYTE PTR [ecx+0x0],al
1101cfdd:	add    BYTE PTR [eax],al
1101cfdf:	inc    ecx
1101cfe0:	add    BYTE PTR [eax],al
1101cfe2:	add    BYTE PTR [ecx+0x0],al
1101cfe5:	add    BYTE PTR [eax],al
1101cfe7:	inc    ecx
1101cfe8:	add    BYTE PTR [eax],0x0
1101cfeb:	inc    ecx
1101cfec:	rol    BYTE PTR [eax],0x0
1101cfef:	inc    ecx
1101cff0:	rol    BYTE PTR [eax],0x0
1101cff3:	inc    ecx
1101cff4:	rol    BYTE PTR [eax],0x0
1101cff7:	inc    ecx
1101cff8:	rol    BYTE PTR [eax],0x0
1101cffb:	inc    ecx
1101cffc:	rol    BYTE PTR [eax],0x0
1101cfff:	inc    ecx
1101d000:	rol    BYTE PTR [eax],0x0
1101d003:	inc    ecx
1101d004:	loopne 0x1101d006
1101d006:	add    DWORD PTR [ecx-0x1],eax
1101d009:	cmp    edi,0xffc3ff41
1101d00f:	inc    ecx
1101d010:	sub    BYTE PTR [eax],al
1101d012:	add    BYTE PTR [eax],al
1101d014:	adc    BYTE PTR [eax],al
1101d016:	add    BYTE PTR [eax],al
1101d018:	and    BYTE PTR [eax],al
1101d01a:	add    BYTE PTR [eax],al
1101d01c:	add    DWORD PTR [eax],eax
1101d01e:	and    BYTE PTR [eax],al
	...
1101d040:	add    BYTE PTR [eax],al
1101d042:	add    BYTE PTR ds:0xa000000,al
1101d048:	add    BYTE PTR [eax],al
1101d04a:	add    BYTE PTR [edx],cl
1101d04c:	add    BYTE PTR [eax],al
1101d04e:	add    BYTE PTR [ebx],dl
1101d050:	add    BYTE PTR [eax],al
1101d052:	add    BYTE PTR [edx+0x3],dl
1101d055:	add    eax,DWORD PTR [ebx]
1101d057:	mov    DWORD PTR [ebx],0xc70303
1101d05d:	add    BYTE PTR [eax],al
1101d05f:	push   edx
1101d060:	add    BYTE PTR [eax],al
1101d062:	add    BYTE PTR [edx],dl
1101d064:	add    BYTE PTR [eax],al
1101d066:	add    BYTE PTR [edx],cl
1101d068:	add    BYTE PTR [eax],al
1101d06a:	add    BYTE PTR [edx],cl
1101d06c:	add    BYTE PTR [eax],al
1101d06e:	add    BYTE PTR [edx],cl
1101d070:	add    BYTE PTR [eax],al
1101d072:	add    BYTE PTR ds:0x0,al
1101d078:	add    BYTE PTR [eax],al
1101d07a:	add    BYTE PTR [eax],al
1101d07c:	add    BYTE PTR [eax],al
1101d07e:	add    BYTE PTR ds:0x40000000,al
1101d084:	add    BYTE PTR [eax],al
1101d086:	add    BYTE PTR [edx+0x0],bh
1101d089:	add    BYTE PTR [eax],al
1101d08b:	add    DWORD PTR [eax],0x0
1101d08e:	add    BYTE PTR [edi-0x22fcfcfd],bl
1101d094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d097:	jmp    DWORD PTR [ebx+0x3ffa3a3]
1101d09d:	add    eax,DWORD PTR [ebx]
1101d09f:	fld    QWORD PTR [eax]
1101d0a1:	add    BYTE PTR [eax],al
1101d0a3:	lahf   
1101d0a4:	add    BYTE PTR [eax],al
1101d0a6:	add    BYTE PTR [edx+0x7f000000],al
1101d0ac:	add    BYTE PTR [eax],al
1101d0ae:	add    BYTE PTR [edx+0x0],bh
1101d0b1:	add    BYTE PTR [eax],al
1101d0b3:	inc    eax
1101d0b4:	add    BYTE PTR [eax],al
1101d0b6:	add    BYTE PTR ds:0x0,al
1101d0bc:	add    BYTE PTR [eax],al
1101d0be:	add    BYTE PTR [edx],cl
1101d0c0:	cmp    al,0x22
1101d0c2:	push   ss
1101d0c3:	push   DWORD PTR [edx+0x40]
1101d0c6:	sub    bh,bh
1101d0c8:	dec    eax
1101d0c9:	sub    BYTE PTR [edx],bl
1101d0cb:	dec    DWORD PTR [edi]
1101d0cd:	or     DWORD PTR [edi],eax
1101d0cf:	jmp    DWORD PTR [esp+eiz*4-0x202005c]
1101d0d6:	std    
1101d0d7:	(bad)  
1101d0d8:	std    
1101d0d9:	std    
1101d0da:	std    
1101d0db:	jmp    DWORD PTR [ebx+0xeffa3a3]
1101d0e1:	or     DWORD PTR [edi],eax
1101d0e3:	dec    DWORD PTR [eax+0x28]
1101d0e6:	sbb    bh,bh
1101d0e8:	jb     0x1101d12a
1101d0ea:	sub    bh,bh
1101d0ec:	cmp    al,0x22
1101d0ee:	push   ss
1101d0ef:	inc    DWORD PTR [eax]
1101d0f1:	add    BYTE PTR [eax],al
1101d0f3:	jp     0x1101d0f5
1101d0f5:	add    BYTE PTR [eax],al
1101d0f7:	or     al,BYTE PTR [eax]
1101d0f9:	add    BYTE PTR [eax],al
1101d0fb:	add    BYTE PTR [eax],al
1101d0fd:	add    BYTE PTR [eax],al
1101d0ff:	or     dh,BYTE PTR [edx+0x40]
1101d102:	sub    bh,bh
1101d104:	stos   DWORD PTR es:[edi],eax
1101d105:	pusha  
1101d106:	aas    
1101d107:	push   DWORD PTR [esi]
1101d109:	and    BYTE PTR [esi],dl
1101d10b:	jmp    DWORD PTR [esp+eiz*4-0x101005c]
1101d112:	std    
1101d113:	(bad)  
1101d114:	(bad)  
1101d115:	(bad)  
1101d116:	std    
1101d117:	(bad)  
1101d118:	(bad)  
1101d119:	(bad)  
1101d11a:	std    
1101d11b:	(bad)  
1101d11c:	(bad)  
1101d11d:	(bad)  
1101d11e:	std    
1101d11f:	jmp    DWORD PTR [ebx+0x36ffa3a3]
1101d125:	and    BYTE PTR [esi],dl
1101d127:	jmp    FWORD PTR [ebx+0x72ff3f60]
1101d12d:	inc    eax
1101d12e:	sub    bh,bh
1101d130:	add    BYTE PTR [eax],al
1101d132:	add    BYTE PTR [edi+0x0],bh
1101d135:	add    BYTE PTR [eax],al
1101d137:	or     al,BYTE PTR [eax]
1101d139:	add    BYTE PTR [eax],al
1101d13b:	add    BYTE PTR [eax],al
1101d13d:	add    BYTE PTR [eax],al
1101d13f:	adc    ecx,DWORD PTR [eax+0x28]
1101d142:	sbb    bh,bh
1101d144:	and    BYTE PTR ss:[esi],dl
1101d147:	jmp    DWORD PTR [esp+eiz*4-0x1404005c]
1101d14e:	jecxz  0x1101d14f
1101d150:	in     al,dx
1101d151:	mov    eax,ds:0x72ddff82
1101d156:	dec    ebx
1101d157:	call   ebp
1101d159:	push   0x8cdcff43
1101d15e:	jb     0x1101d15f
1101d160:	mul    bl
1101d162:	(bad)  
1101d164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d165:	mov    ds:0x2036ffa3,eax
1101d16a:	push   ss
1101d16b:	dec    DWORD PTR [eax+0x28]
1101d16e:	sbb    bh,bh
1101d170:	add    BYTE PTR [eax],al
1101d172:	add    BYTE PTR [edx+0xa000000],al
1101d178:	add    BYTE PTR [eax],al
1101d17a:	add    BYTE PTR [ecx],cl
1101d17c:	add    BYTE PTR [eax],al
1101d17e:	add    BYTE PTR [edx+0xf],dl
1101d181:	or     DWORD PTR [edi],eax
1101d183:	jmp    DWORD PTR [esp+eiz*4-0x1303005c]
1101d18a:	in     eax,0xff
1101d18c:	repnz xchg ecx,eax
1101d18e:	data16 (bad) 
1101d190:	jmp    0x1101d113
1101d192:	push   ebp
1101d193:	jmp    ebx
1101d195:	ja     0x1101d1e3
1101d197:	(bad)  
1101d198:	fld    TBYTE PTR [ebx+0x43]
1101d19b:	call   ebx
1101d19d:	pusha  
1101d19e:	cmp    edi,edi
1101d1a0:	into   
1101d1a1:	popa   
1101d1a2:	ds push esi
1101d1a5:	jecxz  0x1101d185
1101d1a7:	jmp    DWORD PTR [ebx+0xeffa3a3]
1101d1ad:	or     DWORD PTR [edi],eax
1101d1af:	inc    DWORD PTR [eax]
1101d1b1:	add    BYTE PTR [eax],al
1101d1b3:	lahf   
1101d1b4:	add    BYTE PTR [eax],al
1101d1b6:	add    BYTE PTR [edx],dl
1101d1b8:	add    BYTE PTR [eax],al
1101d1ba:	add    BYTE PTR [esi+0x3],al
1101d1bd:	add    eax,DWORD PTR [ebx]
1101d1bf:	retf   0xa4a4
1101d1c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d1c3:	(bad)  
1101d1c4:	(bad)  
1101d1c5:	(bad)  
1101d1c6:	std    
1101d1c7:	push   edi
1101d1c9:	mov    dl,0x92
1101d1cb:	push   esp
1101d1cd:	xchg   edx,eax
1101d1ce:	gs push edx
1101d1d1:	nop
1101d1d2:	fs (bad) 
1101d1d4:	jmp    0x1101d15c
1101d1d6:	pop    edx
1101d1d7:	jmp    ebx
1101d1d9:	jns    0x1101d229
1101d1db:	(bad)  
1101d1dc:	fld    TBYTE PTR [ebx+eax*2-0x1]
1101d1e0:	shl    DWORD PTR [eax+0x39],cl
1101d1e3:	(bad)  
1101d1e4:	fmul   QWORD PTR [edx+esi*2-0x2010101]
1101d1eb:	jmp    DWORD PTR [ebx+0x3ffa3a3]
1101d1f1:	add    eax,DWORD PTR [ebx]
1101d1f3:	fld    QWORD PTR [eax]
1101d1f5:	add    BYTE PTR [eax],al
1101d1f7:	dec    esp
1101d1f8:	add    eax,DWORD PTR [ebx]
1101d1fa:	add    ebx,DWORD PTR [esp+eiz*4-0x2015b5c]
1101d201:	std    
1101d202:	std    
1101d203:	(bad)  
1101d204:	(bad)  
1101d205:	(bad)  
1101d206:	(bad)  
1101d207:	push   ebp
1101d209:	popf   
1101d20a:	je     0x1101d20b
1101d20c:	cmc    
1101d20d:	lahf   
1101d20e:	jns    0x1101d20f
1101d210:	cmc    
1101d211:	lahf   
1101d212:	js     0x1101d213
1101d214:	repz xchg edi,eax
1101d216:	outs   dx,BYTE PTR ds:[esi]
1101d217:	(bad)  
1101d218:	in     al,dx
1101d219:	mov    BYTE PTR [ebp-0x1],bl
1101d21c:	jecxz  0x1101d296
1101d21e:	dec    esi
1101d21f:	(bad)  
1101d220:	fld    TBYTE PTR [ebx+eax*2-0x1]
1101d224:	aad    0x68
1101d226:	inc    ebx
1101d227:	(bad)  
1101d228:	(bad)  
1101d229:	(bad)  
1101d22a:	std    
1101d22b:	(bad)  
1101d22c:	(bad)  
1101d22d:	(bad)  
1101d22e:	std    
1101d22f:	jmp    DWORD PTR [ebx+0x3fea3a3]
1101d235:	add    eax,DWORD PTR [ebx]
1101d237:	popf   
1101d238:	add    eax,DWORD PTR [ebx]
1101d23a:	add    ebp,DWORD PTR [edx-0x5c]
1101d23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d23e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d23f:	std    
1101d240:	std    
1101d241:	std    
1101d242:	std    
1101d243:	(bad)  
1101d244:	(bad)  
1101d245:	(bad)  
1101d246:	std    
1101d247:	push   esi
1101d249:	stos   DWORD PTR es:[edi],eax
1101d24a:	mov    bh,bh
1101d24c:	clc    
1101d24d:	mov    eax,0xb6f8ff9b
1101d252:	cdq    
1101d253:	push   esi
1101d255:	test   al,0x84
1101d257:	push   ebx
1101d259:	xchg   edi,eax
1101d25a:	ins    DWORD PTR es:[edi],dx
1101d25b:	(bad)  
1101d25c:	jmp    0x1101d1e3
1101d25e:	pop    edx
1101d25f:	jmp    ebx
1101d261:	ja     0x1101d2af
1101d263:	(bad)  
1101d264:	fnsave [edx+0x4b]
1101d267:	(bad)  
1101d268:	(bad)  
1101d269:	(bad)  
1101d26a:	std    
1101d26b:	(bad)  
1101d26c:	(bad)  
1101d26d:	(bad)  
1101d26e:	std    
1101d26f:	jmp    DWORD PTR [esp+eiz*4+0x303fda4]
1101d276:	add    ebp,DWORD PTR [ebp+0x0]
1101d279:	add    BYTE PTR [eax],al
1101d27b:	add    al,BYTE PTR [ebx]
1101d27d:	add    eax,DWORD PTR [ebx]
1101d27f:	outs   dx,BYTE PTR ds:[esi]
1101d280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d283:	(bad)  
1101d284:	(bad)  
1101d285:	(bad)  
1101d286:	std    
1101d287:	(bad)  
1101d288:	cli    
1101d289:	int    0xb9
1101d28b:	(bad)  
1101d28c:	cli    
1101d28d:	sar    DWORD PTR [edi-0x43300501],1
1101d293:	(bad)  
1101d294:	clc    
1101d295:	mov    dh,0x99
1101d297:	push   ebp
1101d299:	lahf   
1101d29a:	js     0x1101d29b
1101d29c:	repnz nop
1101d29e:	fs (bad) 
1101d2a0:	jmp    0x1101d224
1101d2a2:	push   ebp
1101d2a3:	(bad)  
1101d2a4:	in     al,dx
1101d2a5:	mov    eax,ds:0xfefeff82
1101d2aa:	std    
1101d2ab:	jmp    DWORD PTR [esp+eiz*4+0x303ffa4]
1101d2b2:	add    esp,DWORD PTR [esi+0xc000000]
1101d2b8:	add    BYTE PTR [eax],al
1101d2ba:	add    BYTE PTR [eax],al
1101d2bc:	add    BYTE PTR [eax],al
1101d2be:	add    BYTE PTR [ebp*1-0x5900ede5],cl
1101d2c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1101d2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1101d2c7:	(bad)  
1101d2c8:	std    
1101d2c9:	hlt    
1101d2ca:	lock (bad) 
1101d2cc:	cli    
1101d2cd:	rol    al,cl
1101d2cf:	(bad)  
1101d2d0:	cli    
1101d2d1:	sar    DWORD PTR [edi-0x64470701],1
1101d2d7:	push   ebp
1101d2d9:	lahf   
1101d2da:	jns    0x1101d2db
1101d2dc:	hlt    
1101d2dd:	xchg   edx,eax
1101d2de:	gs push edx
1101d2e1:	xchg   ecx,eax
1101d2e2:	data16 (bad) 
1101d2e4:	sti    
1101d2e5:	jmp    0x1101d2ca
1101d2e7:	jmp    DWORD PTR [esi+0x2dffa4a5]
1101d2ed:	sbb    edx,DWORD PTR [ebx]
1101d2ef:	inc    DWORD PTR [eax]
1101d2f1:	add    BYTE PTR [eax],al
1101d2f3:	add    BYTE PTR [eax],0x0
1101d2f6:	add    BYTE PTR [edx],cl
1101d2f8:	add    BYTE PTR [eax],al
1101d2fa:	add    BYTE PTR [eax],al
1101d2fc:	add    BYTE PTR [eax],al
1101d2fe:	add    BYTE PTR [edx],cl
1101d300:	ja     0x1101d345
1101d302:	sub    al,0xff
1101d304:	nop
1101d305:	push   ebx
1101d306:	aaa    
1101d307:	jmp    DWORD PTR [esi-0x2005a5a]
1101d30d:	hlt    
1101d30e:	lock (bad) 
1101d310:	cli    
1101d311:	int    0xb9
1101d313:	push   edi
1101d315:	stos   DWORD PTR es:[edi],eax
1101d316:	mov    bh,bh
1101d318:	cmc    
1101d319:	pushf  
1101d31a:	je     0x1101d31b
1101d31c:	div    DWORD PTR [edx-0x1303006e]
1101d322:	in     eax,0xff
1101d324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1101d325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1101d326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1101d327:	call   DWORD PTR [ecx+0x77ff3853]
1101d32d:	inc    ebx
1101d32e:	sub    al,0xff
1101d330:	add    BYTE PTR [eax],al
1101d332:	add    BYTE PTR [edi+0x0],bh
1101d335:	add    BYTE PTR [eax],al
1101d337:	or     al,BYTE PTR [eax]
1101d339:	add    BYTE PTR [eax],al
1101d33b:	add    BYTE PTR [eax],al
1101d33d:	add    BYTE PTR [eax],al
1101d33f:	or     bh,BYTE PTR [edx+0x45]
1101d342:	sub    eax,0x5a88f1ff
1101d347:	call   DWORD PTR [eax-0x5900c8ad]
1101d34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1101d34e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1101d34f:	(bad)  
1101d350:	(bad)  
1101d351:	(bad)  
1101d352:	std    
1101d353:	(bad)  
1101d354:	(bad)  
1101d355:	(bad)  
1101d356:	std    
1101d357:	(bad)  
1101d358:	(bad)  
1101d359:	(bad)  
1101d35a:	(bad)  
1101d35b:	(bad)  
1101d35c:	(bad)  
1101d35d:	(bad)  
1101d35e:	(bad)  
1101d35f:	jmp    DWORD PTR [esi-0x6e005a5b]
1101d365:	push   ebx
1101d366:	cmp    bh,bh
1101d368:	icebp  
1101d369:	mov    BYTE PTR [edx-0x1],bl
1101d36c:	jp     0x1101d3b3
1101d36e:	sub    eax,0xff
1101d373:	jp     0x1101d375
1101d375:	add    BYTE PTR [eax],al
1101d377:	or     al,BYTE PTR [eax]
1101d379:	add    BYTE PTR [eax],al
1101d37b:	add    BYTE PTR [eax],al
1101d37d:	add    BYTE PTR [eax],al
1101d37f:	add    eax,0xff16223d
1101d384:	jp     0x1101d3cb
1101d386:	sub    eax,0x2c4377ff
1101d38b:	jmp    FWORD PTR ds:0xa4ff121b
1101d391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d393:	(bad)  
1101d394:	(bad)  
1101d395:	(bad)  
1101d396:	std    
1101d397:	(bad)  
1101d398:	(bad)  
1101d399:	(bad)  
1101d39a:	std    
1101d39b:	jmp    DWORD PTR [esp+eiz*4+0x1b2dffa4]
1101d3a2:	adc    edi,edi
1101d3a4:	ja     0x1101d3e9
1101d3a6:	sub    al,0xff
1101d3a8:	jp     0x1101d3ef
1101d3aa:	sub    eax,0x16223dff
1101d3af:	inc    DWORD PTR [eax]
1101d3b1:	add    BYTE PTR [eax],al
1101d3b3:	inc    eax
1101d3b4:	add    BYTE PTR [eax],al
1101d3b6:	add    BYTE PTR ds:0x0,al
1101d3bc:	add    BYTE PTR [eax],al
1101d3be:	add    BYTE PTR [eax],al
1101d3c0:	add    BYTE PTR [eax],al
1101d3c2:	add    BYTE PTR ds:0xa000000,al
1101d3c8:	add    BYTE PTR [eax],al
1101d3ca:	add    BYTE PTR [edx],cl
1101d3cc:	add    BYTE PTR [eax],al
1101d3ce:	add    BYTE PTR [ebx+eax*1],cl
1101d3d1:	add    eax,DWORD PTR [ebx]
1101d3d3:	outs   dx,BYTE PTR ds:[esi]
1101d3d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d3d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d3d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d3d7:	cld    
1101d3d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1101d3db:	cld    
1101d3dc:	add    eax,DWORD PTR [ebx]
1101d3de:	add    ebp,DWORD PTR [ebp+0x0]
1101d3e1:	add    BYTE PTR [eax],al
1101d3e3:	or     al,0x0
1101d3e5:	add    BYTE PTR [eax],al
1101d3e7:	or     al,BYTE PTR [eax]
1101d3e9:	add    BYTE PTR [eax],al
1101d3eb:	or     al,BYTE PTR [eax]
1101d3ed:	add    BYTE PTR [eax],al
1101d3ef:	or     al,BYTE PTR [eax]
1101d3f1:	add    BYTE PTR [eax],al
1101d3f3:	add    eax,0x0
	...
1101d410:	add    BYTE PTR [eax],al
1101d412:	add    BYTE PTR [edx],al
1101d414:	add    eax,DWORD PTR [ebx]
1101d416:	add    esp,DWORD PTR [esi+0x3]
1101d419:	add    eax,DWORD PTR [ebx]
1101d41b:	add    BYTE PTR gs:[eax],al
1101d41e:	add    BYTE PTR [edx],al
	...
1101d438:	rol    BYTE PTR [ecx],0xac
1101d43b:	inc    ecx
1101d43c:	add    BYTE PTR [eax],0xac
1101d43f:	inc    ecx
1101d440:	add    BYTE PTR [eax],0xac
1101d443:	inc    ecx
1101d444:	add    BYTE PTR [eax],0xac
1101d447:	inc    ecx
1101d448:	add    BYTE PTR [eax],0xac
1101d44b:	inc    ecx
1101d44c:	add    BYTE PTR [eax],al
1101d44e:	lods   al,BYTE PTR ds:[esi]
1101d44f:	inc    ecx
1101d450:	add    BYTE PTR [eax],al
1101d452:	lods   al,BYTE PTR ds:[esi]
1101d453:	inc    ecx
1101d454:	add    BYTE PTR [eax],al
1101d456:	lods   al,BYTE PTR ds:[esi]
1101d457:	inc    ecx
1101d458:	add    BYTE PTR [eax],al
1101d45a:	lods   al,BYTE PTR ds:[esi]
1101d45b:	inc    ecx
1101d45c:	add    BYTE PTR [eax],al
1101d45e:	lods   al,BYTE PTR ds:[esi]
1101d45f:	inc    ecx
1101d460:	add    BYTE PTR [eax],0xac
1101d463:	inc    ecx
1101d464:	add    BYTE PTR [eax],0xac
1101d467:	inc    ecx
1101d468:	add    BYTE PTR [eax],0xac
1101d46b:	inc    ecx
1101d46c:	add    BYTE PTR [eax],0xac
1101d46f:	inc    ecx
1101d470:	rol    BYTE PTR [ecx],0xac
1101d473:	inc    ecx
1101d474:	cld    
1101d475:	aas    
1101d476:	lods   al,BYTE PTR ds:[esi]
1101d477:	inc    ecx
1101d478:	add    BYTE PTR [eax],al
1101d47a:	add    DWORD PTR [eax],eax
1101d47c:	adc    eax,DWORD PTR [eax]
1101d47e:	inc    eax
1101d47f:	inc    eax
1101d480:	adc    BYTE PTR [eax],al
1101d482:	add    DWORD PTR [eax],eax
1101d484:	add    al,0x0
1101d486:	push   0x200000a
1101d48b:	add    BYTE PTR [eax],dh
1101d48d:	xor    BYTE PTR [eax],dl
1101d48f:	add    BYTE PTR [ecx],al
1101d491:	add    BYTE PTR [eax+eax*1],al
1101d494:	push   0x3000006
1101d499:	add    BYTE PTR [eax],ch
1101d49b:	sub    BYTE PTR [eax],dl
1101d49d:	add    BYTE PTR [ecx],al
1101d49f:	add    BYTE PTR [eax+eax*1],al
1101d4a2:	enter  0x4,0x0
1101d4a6:	add    al,0x0
1101d4a8:	and    BYTE PTR [eax],ah
1101d4aa:	adc    BYTE PTR [eax],al
1101d4ac:	add    DWORD PTR [eax],eax
1101d4ae:	add    al,0x0
1101d4b0:	call   0x1601d4b7
1101d4b5:	add    BYTE PTR [eax],bl
1101d4b7:	sbb    BYTE PTR [eax],dl
1101d4b9:	add    BYTE PTR [ecx],al
1101d4bb:	add    BYTE PTR [eax+eax*1],al
1101d4be:	call   0x1701d4c4
1101d4c3:	add    BYTE PTR [eax],dl
1101d4c5:	adc    BYTE PTR [eax],dl
1101d4c7:	add    BYTE PTR [ecx],al
1101d4c9:	add    BYTE PTR [eax+eax*1],al
1101d4cc:	sub    BYTE PTR [ecx],al
1101d4ce:	add    BYTE PTR [eax],al
1101d4d0:	pop    es
1101d4d1:	add    BYTE PTR [eax+0x40],al
1101d4d4:	add    BYTE PTR [eax],al
1101d4d6:	add    DWORD PTR [eax],eax
1101d4d8:	or     BYTE PTR [eax],al
1101d4da:	sub    BYTE PTR [esi],dl
1101d4dc:	add    BYTE PTR [eax],al
1101d4de:	or     BYTE PTR [eax],al
1101d4e0:	xor    BYTE PTR [eax],dh
1101d4e2:	add    BYTE PTR [eax],al
1101d4e4:	add    DWORD PTR [eax],eax
1101d4e6:	or     BYTE PTR [eax],al
1101d4e8:	test   al,0xe
1101d4ea:	add    BYTE PTR [eax],al
1101d4ec:	or     DWORD PTR [eax],eax
1101d4ee:	sub    BYTE PTR [eax],ch
1101d4f0:	add    BYTE PTR [eax],al
1101d4f2:	add    DWORD PTR [eax],eax
1101d4f4:	or     BYTE PTR [eax],al
1101d4f6:	test   al,0xb
1101d4f8:	add    BYTE PTR [eax],al
1101d4fa:	or     al,BYTE PTR [eax]
1101d4fc:	and    BYTE PTR [eax],ah
1101d4fe:	add    BYTE PTR [eax],al
1101d500:	add    DWORD PTR [eax],eax
1101d502:	or     BYTE PTR [eax],al
1101d504:	test   al,0x8
1101d506:	add    BYTE PTR [eax],al
1101d508:	or     eax,DWORD PTR [eax]
1101d50a:	sbb    BYTE PTR [eax],bl
1101d50c:	add    BYTE PTR [eax],al
1101d50e:	add    DWORD PTR [eax],eax
1101d510:	or     BYTE PTR [eax],al
1101d512:	enter  0x6,0x0
1101d516:	or     al,0x0
1101d518:	adc    BYTE PTR [eax],dl
1101d51a:	add    BYTE PTR [eax],al
1101d51c:	add    DWORD PTR [eax],eax
1101d51e:	or     BYTE PTR [eax],al
1101d520:	push   0xd000005
1101d525:	add    BYTE PTR [eax],al
1101d527:	add    BYTE PTR [eax],al
1101d529:	add    BYTE PTR [ecx],al
1101d52b:	add    BYTE PTR [eax],ah
1101d52d:	add    BYTE PTR [esi],dh
1101d52f:	mov    es,WORD PTR [eax]
1101d531:	add    BYTE PTR [esi],cl
1101d533:	add    BYTE PTR [eax+0x40],al
1101d536:	add    BYTE PTR [eax],al
1101d538:	add    DWORD PTR [eax],eax
1101d53a:	and    BYTE PTR [eax],al
1101d53c:	sub    BYTE PTR [edx+0x0],al
1101d53f:	add    BYTE PTR [edi],cl
1101d541:	add    BYTE PTR [eax],dh
1101d543:	xor    BYTE PTR [eax],al
1101d545:	add    BYTE PTR [ecx],al
1101d547:	add    BYTE PTR [eax],ah
1101d549:	add    BYTE PTR [eax+0x10000025],ch
1101d54f:	add    BYTE PTR [eax],ch
1101d551:	sub    BYTE PTR [eax],al
1101d553:	add    BYTE PTR [ecx],al
1101d555:	add    BYTE PTR [eax],ah
1101d557:	add    BYTE PTR [eax+0x1a],ch
1101d55a:	add    BYTE PTR [eax],al
1101d55c:	adc    DWORD PTR [eax],eax
1101d55e:	and    BYTE PTR [eax],ah
1101d560:	add    BYTE PTR [eax],al
1101d562:	add    DWORD PTR [eax],eax
1101d564:	and    BYTE PTR [eax],al
1101d566:	test   al,0x10
1101d568:	add    BYTE PTR [eax],al
1101d56a:	adc    al,BYTE PTR [eax]
1101d56c:	sbb    BYTE PTR [eax],bl
1101d56e:	add    BYTE PTR [eax],al
1101d570:	add    DWORD PTR [eax],eax
1101d572:	and    BYTE PTR [eax],al
1101d574:	mov    BYTE PTR [ecx],cl
1101d576:	add    BYTE PTR [eax],al
1101d578:	adc    eax,DWORD PTR [eax]
1101d57a:	adc    BYTE PTR [eax],dl
1101d57c:	add    BYTE PTR [eax],al
1101d57e:	add    DWORD PTR [eax],eax
1101d580:	and    BYTE PTR [eax],al
1101d582:	push   0x14000004
1101d587:	add    BYTE PTR [ebx+eax*1+0x34],dl
1101d58b:	add    BYTE PTR [eax],al
1101d58d:	add    BYTE PTR [esi+0x0],dl
1101d590:	push   ebx
1101d591:	add    BYTE PTR [edi+0x0],bl
1101d594:	push   esi
1101d595:	add    BYTE PTR [ebp+0x0],al
1101d598:	push   edx
1101d599:	add    BYTE PTR [ebx+0x0],dl
1101d59c:	dec    ecx
1101d59d:	add    BYTE PTR [edi+0x0],cl
1101d5a0:	dec    esi
1101d5a1:	add    BYTE PTR [edi+0x0],bl
1101d5a4:	dec    ecx
1101d5a5:	add    BYTE PTR [esi+0x0],cl
1101d5a8:	inc    esi
1101d5a9:	add    BYTE PTR [edi+0x0],cl
1101d5ac:	add    BYTE PTR [eax],al
1101d5ae:	add    BYTE PTR [eax],al
1101d5b0:	mov    ebp,0xfeef04
1101d5b5:	add    BYTE PTR [ecx],al
1101d5b7:	add    BYTE PTR ds:0x500,al
1101d5bd:	add    BYTE PTR [eax],al
1101d5bf:	add    BYTE PTR ds:0x500,al
1101d5c5:	add    BYTE PTR [eax],al
1101d5c7:	add    BYTE PTR [edi],bh
1101d5c9:	add    BYTE PTR [eax],al
1101d5cb:	add    BYTE PTR [eax],al
1101d5cd:	add    BYTE PTR [eax],al
1101d5cf:	add    BYTE PTR [eax+eax*1],al
1101d5d2:	add    BYTE PTR [eax],al
1101d5d4:	add    DWORD PTR [eax],eax
	...
1101d5e2:	add    BYTE PTR [eax],al
1101d5e4:	inc    esp
1101d5e5:	add    BYTE PTR [eax],al
1101d5e7:	add    BYTE PTR [ecx],al
1101d5e9:	add    BYTE PTR [esi+0x0],dl
1101d5ec:	popa   
1101d5ed:	add    BYTE PTR [edx+0x0],dh
1101d5f0:	inc    esi
1101d5f1:	add    BYTE PTR [ecx+0x0],ch
1101d5f4:	ins    BYTE PTR es:[edi],dx
1101d5f5:	add    BYTE PTR [ebp+0x0],ah
1101d5f8:	dec    ecx
1101d5f9:	add    BYTE PTR [esi+0x0],ch
1101d5fc:	data16 add BYTE PTR [edi+0x0],ch
1101d600:	add    BYTE PTR [eax],al
1101d602:	add    BYTE PTR [eax],al
1101d604:	and    al,0x0
1101d606:	add    al,0x0
1101d608:	add    BYTE PTR [eax],al
1101d60a:	push   esp
1101d60b:	add    BYTE PTR [edx+0x0],dh
1101d60e:	popa   
1101d60f:	add    BYTE PTR [esi+0x0],ch
1101d612:	jae    0x1101d614
1101d614:	ins    BYTE PTR es:[edi],dx
1101d615:	add    BYTE PTR [ecx+0x0],ah
1101d618:	je     0x1101d61a
1101d61a:	imul   eax,DWORD PTR [eax],0x6e006f
1101d620:	add    BYTE PTR [eax],al
1101d622:	add    BYTE PTR [eax],al
1101d624:	add    BYTE PTR [eax],al
1101d626:	mov    al,0x4
1101d628:	mov    ah,0x2
1101d62a:	add    BYTE PTR [eax],al
1101d62c:	add    DWORD PTR [eax],eax
1101d62e:	push   ebx
1101d62f:	add    BYTE PTR [eax+eax*1+0x72],dh
1101d633:	add    BYTE PTR [ecx+0x0],ch
1101d636:	outs   dx,BYTE PTR ds:[esi]
1101d637:	add    BYTE PTR [edi+0x0],ah
1101d63a:	inc    esi
1101d63b:	add    BYTE PTR [ecx+0x0],ch
1101d63e:	ins    BYTE PTR es:[edi],dx
1101d63f:	add    BYTE PTR [ebp+0x0],ah
1101d642:	dec    ecx
1101d643:	add    BYTE PTR [esi+0x0],ch
1101d646:	data16 add BYTE PTR [edi+0x0],ch
1101d64a:	add    BYTE PTR [eax],al
1101d64c:	nop
1101d64d:	add    al,BYTE PTR [eax]
1101d64f:	add    BYTE PTR [ecx],al
1101d651:	add    BYTE PTR [eax],dh
1101d653:	add    BYTE PTR [eax],dh
1101d655:	add    BYTE PTR [eax],dh
1101d657:	add    BYTE PTR [eax],dh
1101d659:	add    BYTE PTR [eax],dh
1101d65b:	add    BYTE PTR [eax+eax*1],dh
1101d65e:	bound  eax,QWORD PTR [eax]
1101d660:	xor    BYTE PTR [eax],al
1101d662:	add    BYTE PTR [eax],al
1101d664:	push   esp
1101d665:	add    BYTE PTR [edx],bl
1101d667:	add    BYTE PTR [ecx],al
1101d669:	add    BYTE PTR [ebx+0x0],al
1101d66c:	outs   dx,DWORD PTR ds:[esi]
1101d66d:	add    BYTE PTR [ebp+0x0],ch
1101d670:	jo     0x1101d672
1101d672:	popa   
1101d673:	add    BYTE PTR [esi+0x0],ch
1101d676:	jns    0x1101d678
1101d678:	dec    esi
1101d679:	add    BYTE PTR [ecx+0x0],ah
1101d67c:	ins    DWORD PTR es:[edi],dx
1101d67d:	add    BYTE PTR [ebp+0x0],ah
1101d680:	add    BYTE PTR [eax],al
1101d682:	add    BYTE PTR [eax],al
1101d684:	push   eax
1101d685:	add    BYTE PTR [edx+0x0],dh
1101d688:	add    BYTE PTR gs:[ebp+0x0],al
1101d68c:	ins    DWORD PTR es:[edi],dx
1101d68d:	add    BYTE PTR [eax+0x0],dh
1101d690:	je     0x1101d692
1101d692:	imul   eax,DWORD PTR [eax],0x650076
1101d698:	and    BYTE PTR [eax],al
1101d69a:	push   ebx
1101d69b:	add    BYTE PTR [edi+0x0],ch
1101d69e:	ins    BYTE PTR es:[edi],dx
1101d69f:	add    BYTE PTR [ebp+0x0],dh
1101d6a2:	je     0x1101d6a4
1101d6a4:	imul   eax,DWORD PTR [eax],0x6e006f
1101d6aa:	jae    0x1101d6ac
1101d6ac:	sub    al,0x0
1101d6ae:	and    BYTE PTR [eax],al
1101d6b0:	dec    esp
1101d6b1:	add    BYTE PTR [eax+eax*1+0x43],cl
1101d6b5:	add    BYTE PTR [eax],al
1101d6b7:	add    BYTE PTR [eax+eax*1+0xd],al
1101d6bb:	add    BYTE PTR [ecx],al
1101d6bd:	add    BYTE PTR [esi+0x0],al
1101d6c0:	imul   eax,DWORD PTR [eax],0x65006c
1101d6c6:	inc    esp
1101d6c7:	add    BYTE PTR [ebp+0x0],ah
1101d6ca:	jae    0x1101d6cc
1101d6cc:	arpl   WORD PTR [eax],ax
1101d6ce:	jb     0x1101d6d0
1101d6d0:	imul   eax,DWORD PTR [eax],0x740070
1101d6d6:	imul   eax,DWORD PTR [eax],0x6e006f
1101d6dc:	add    BYTE PTR [eax],al
1101d6de:	add    BYTE PTR [eax],al
1101d6e0:	push   esp
1101d6e1:	add    BYTE PTR [ecx+0x0],ah
1101d6e4:	ins    DWORD PTR es:[edi],dx
1101d6e5:	add    BYTE PTR [eax+0x0],dh
1101d6e8:	add    BYTE PTR gs:[edx+0x0],dh
1101d6ec:	push   esp
1101d6ed:	add    BYTE PTR [ebp+0x0],ah
1101d6f0:	jae    0x1101d6f2
1101d6f2:	je     0x1101d6f4
1101d6f4:	add    BYTE PTR gs:[edx+0x0],dh
1101d6f8:	add    BYTE PTR [eax],al
1101d6fa:	add    BYTE PTR [eax],al
1101d6fc:	xor    BYTE PTR [eax],al
1101d6fe:	or     BYTE PTR [eax],al
1101d700:	add    DWORD PTR [eax],eax
1101d702:	inc    esi
1101d703:	add    BYTE PTR [ecx+0x0],ch
1101d706:	ins    BYTE PTR es:[edi],dx
1101d707:	add    BYTE PTR [ebp+0x0],ah
1101d70a:	push   esi
1101d70b:	add    BYTE PTR [ebp+0x0],ah
1101d70e:	jb     0x1101d710
1101d710:	jae    0x1101d712
1101d712:	imul   eax,DWORD PTR [eax],0x6e006f
1101d718:	add    BYTE PTR [eax],al
1101d71a:	add    BYTE PTR [eax],al
1101d71c:	xor    eax,0x35002e00
1101d721:	add    BYTE PTR [esi],ch
1101d723:	add    BYTE PTR [eax],dh
1101d725:	add    BYTE PTR [esi],ch
1101d727:	add    BYTE PTR [eax],dh
1101d729:	add    BYTE PTR [eax],al
1101d72b:	add    BYTE PTR [eax+eax*1+0x11],al
1101d72f:	add    BYTE PTR [ecx],al
1101d731:	add    BYTE PTR [ecx+0x0],cl
1101d734:	outs   dx,BYTE PTR ds:[esi]
1101d735:	add    BYTE PTR [eax+eax*1+0x65],dh
1101d739:	add    BYTE PTR [edx+0x0],dh
1101d73c:	outs   dx,BYTE PTR ds:[esi]
1101d73d:	add    BYTE PTR [ecx+0x0],ah
1101d740:	ins    BYTE PTR es:[edi],dx
1101d741:	add    BYTE PTR [esi+0x0],cl
1101d744:	popa   
1101d745:	add    BYTE PTR [ebp+0x0],ch
1101d748:	add    BYTE PTR gs:[eax],al
1101d74b:	add    BYTE PTR [eax+eax*1+0x61],dl
1101d74f:	add    BYTE PTR [ebp+0x0],ch
1101d752:	jo     0x1101d754
1101d754:	add    BYTE PTR gs:[edx+0x0],dh
1101d758:	push   esp
1101d759:	add    BYTE PTR [ebp+0x0],ah
1101d75c:	jae    0x1101d75e
1101d75e:	je     0x1101d760
1101d760:	add    BYTE PTR gs:[edx+0x0],dh
1101d764:	add    BYTE PTR cs:[ebp+0x0],ah
1101d768:	js     0x1101d76a
1101d76a:	add    BYTE PTR gs:[eax],al
1101d76d:	add    BYTE PTR [eax],al
1101d76f:	add    BYTE PTR [eax+0x0],bh
1101d772:	sub    DWORD PTR [eax],eax
1101d774:	add    DWORD PTR [eax],eax
1101d776:	dec    esp
1101d777:	add    BYTE PTR [ebp+0x0],ah
1101d77a:	add    BYTE PTR [bx+di+0x0],ah
1101d77e:	ins    BYTE PTR es:[edi],dx
1101d77f:	add    BYTE PTR [ebx+0x0],al
1101d782:	outs   dx,DWORD PTR ds:[esi]
1101d783:	add    BYTE PTR [eax+0x0],dh
1101d786:	jns    0x1101d788
1101d788:	jb     0x1101d78a
1101d78a:	imul   eax,DWORD PTR [eax],0x680067
1101d790:	je     0x1101d792
1101d792:	add    BYTE PTR [eax],al
1101d794:	inc    ebx
1101d795:	add    BYTE PTR [edi+0x0],ch
1101d798:	jo     0x1101d79a
1101d79a:	jns    0x1101d79c
1101d79c:	jb     0x1101d79e
1101d79e:	imul   eax,DWORD PTR [eax],0x680067
1101d7a4:	je     0x1101d7a6
1101d7a6:	and    BYTE PTR [eax],al
1101d7a8:	xor    al,BYTE PTR [eax]
1101d7aa:	xor    BYTE PTR [eax],al
1101d7ac:	xor    BYTE PTR [eax],al
1101d7ae:	aaa    
1101d7af:	add    BYTE PTR ds:0x30003200,ch
1101d7b5:	add    BYTE PTR [ecx],dh
1101d7b7:	add    BYTE PTR [edx],dh
1101d7b9:	add    BYTE PTR [eax+eax*1],ch
1101d7bc:	and    BYTE PTR [eax],al
1101d7be:	inc    ecx
1101d7bf:	add    BYTE PTR [eax+eax*1+0x6c],ch
1101d7c3:	add    BYTE PTR [eax],ah
1101d7c5:	add    BYTE PTR [edx+0x0],dl
1101d7c8:	imul   eax,DWORD PTR [eax],0x680067
1101d7ce:	je     0x1101d7d0
1101d7d0:	jae    0x1101d7d2
1101d7d2:	and    BYTE PTR [eax],al
1101d7d4:	push   edx
1101d7d5:	add    BYTE PTR [ebp+0x0],ah
1101d7d8:	jae    0x1101d7da
1101d7da:	add    BYTE PTR gs:[edx+0x0],dh
1101d7de:	jbe    0x1101d7e0
1101d7e0:	add    BYTE PTR gs:[eax+eax*1+0x0],ah
1101d7e5:	add    BYTE PTR [eax],al
1101d7e7:	add    BYTE PTR [eax+eax*1+0x11],cl
1101d7eb:	add    BYTE PTR [ecx],al
1101d7ed:	add    BYTE PTR [edi+0x0],cl
1101d7f0:	jb     0x1101d7f2
1101d7f2:	imul   eax,DWORD PTR [eax],0x690067
1101d7f8:	outs   dx,BYTE PTR ds:[esi]
1101d7f9:	add    BYTE PTR [ecx+0x0],ah
1101d7fc:	ins    BYTE PTR es:[edi],dx
1101d7fd:	add    BYTE PTR [esi+0x0],al
1101d800:	imul   eax,DWORD PTR [eax],0x65006c
1101d806:	outs   dx,BYTE PTR ds:[esi]
1101d807:	add    BYTE PTR [ecx+0x0],ah
1101d80a:	ins    DWORD PTR es:[edi],dx
1101d80b:	add    BYTE PTR [ebp+0x0],ah
1101d80e:	add    BYTE PTR [eax],al
1101d810:	push   esp
1101d811:	add    BYTE PTR [ecx+0x0],ah
1101d814:	ins    DWORD PTR es:[edi],dx
1101d815:	add    BYTE PTR [eax+0x0],dh
1101d818:	add    BYTE PTR gs:[edx+0x0],dh
1101d81c:	push   esp
1101d81d:	add    BYTE PTR [ebp+0x0],ah
1101d820:	jae    0x1101d822
1101d822:	je     0x1101d824
1101d824:	add    BYTE PTR gs:[edx+0x0],dh
1101d828:	add    BYTE PTR cs:[ebp+0x0],ah
1101d82c:	js     0x1101d82e
1101d82e:	add    BYTE PTR gs:[eax],al
1101d831:	add    BYTE PTR [eax],al
1101d833:	add    BYTE PTR [eax+eax*1],bh
1101d836:	push   cs
1101d837:	add    BYTE PTR [ecx],al
1101d839:	add    BYTE PTR [eax+0x0],dl
1101d83c:	jb     0x1101d83e
1101d83e:	outs   dx,DWORD PTR ds:[esi]
1101d83f:	add    BYTE PTR [eax+eax*1+0x75],ah
1101d843:	add    BYTE PTR [ebx+0x0],ah
1101d846:	je     0x1101d848
1101d848:	dec    esi
1101d849:	add    BYTE PTR [ecx+0x0],ah
1101d84c:	ins    DWORD PTR es:[edi],dx
1101d84d:	add    BYTE PTR [ebp+0x0],ah
1101d850:	add    BYTE PTR [eax],al
1101d852:	add    BYTE PTR [eax],al
1101d854:	push   esp
1101d855:	add    BYTE PTR [ecx+0x0],ah
1101d858:	ins    DWORD PTR es:[edi],dx
1101d859:	add    BYTE PTR [eax+0x0],dh
1101d85c:	add    BYTE PTR gs:[edx+0x0],dh
1101d860:	and    BYTE PTR [eax],al
1101d862:	push   esp
1101d863:	add    BYTE PTR [ebp+0x0],ah
1101d866:	jae    0x1101d868
1101d868:	je     0x1101d86a
1101d86a:	add    BYTE PTR gs:[edx+0x0],dh
1101d86e:	add    BYTE PTR [eax],al
1101d870:	xor    al,0x0
1101d872:	or     BYTE PTR [eax],al
1101d874:	add    DWORD PTR [eax],eax
1101d876:	push   eax
1101d877:	add    BYTE PTR [edx+0x0],dh
1101d87a:	outs   dx,DWORD PTR ds:[esi]
1101d87b:	add    BYTE PTR [eax+eax*1+0x75],ah
1101d87f:	add    BYTE PTR [ebx+0x0],ah
1101d882:	je     0x1101d884
1101d884:	push   esi
1101d885:	add    BYTE PTR [ebp+0x0],ah
1101d888:	jb     0x1101d88a
1101d88a:	jae    0x1101d88c
1101d88c:	imul   eax,DWORD PTR [eax],0x6e006f
1101d892:	add    BYTE PTR [eax],al
1101d894:	xor    eax,0x35002e00
1101d899:	add    BYTE PTR [esi],ch
1101d89b:	add    BYTE PTR [eax],dh
1101d89d:	add    BYTE PTR [esi],ch
1101d89f:	add    BYTE PTR [eax],dh
1101d8a1:	add    BYTE PTR [eax],al
1101d8a3:	add    BYTE PTR [eax],bh
1101d8a5:	add    BYTE PTR [eax],cl
1101d8a7:	add    BYTE PTR [ecx],al
1101d8a9:	add    BYTE PTR [ecx+0x0],al
1101d8ac:	jae    0x1101d8ae
1101d8ae:	jae    0x1101d8b0
1101d8b0:	add    BYTE PTR gs:[ebp+0x0],ch
1101d8b4:	bound  eax,QWORD PTR [eax]
1101d8b6:	ins    BYTE PTR es:[edi],dx
1101d8b7:	add    BYTE PTR [ecx+0x0],bh
1101d8ba:	and    BYTE PTR [eax],al
1101d8bc:	push   esi
1101d8bd:	add    BYTE PTR [ebp+0x0],ah
1101d8c0:	jb     0x1101d8c2
1101d8c2:	jae    0x1101d8c4
1101d8c4:	imul   eax,DWORD PTR [eax],0x6e006f
1101d8ca:	add    BYTE PTR [eax],al
1101d8cc:	xor    eax,0x35002e00
1101d8d1:	add    BYTE PTR [esi],ch
1101d8d3:	add    BYTE PTR [eax],dh
1101d8d5:	add    BYTE PTR [esi],ch
1101d8d7:	add    BYTE PTR [eax],dh
1101d8d9:	add    BYTE PTR [eax],al
1101d8db:	add    BYTE PTR [eax],al
1101d8dd:	add    BYTE PTR [eax],al
1101d8df:	add    bh,ch
1101d8e1:	mov    ebx,0x783f3cbf
1101d8e6:	ins    DWORD PTR es:[edi],dx
1101d8e7:	ins    BYTE PTR es:[edi],dx
1101d8e8:	and    BYTE PTR [esi+0x65],dh
1101d8eb:	jb     0x1101d960
1101d8ed:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
1101d8f4:	xor    BYTE PTR [edx],ah
1101d8f6:	and    BYTE PTR [ebp+0x6e],ah
1101d8f9:	arpl   WORD PTR [edi+0x64],bp
1101d8fc:	imul   ebp,DWORD PTR [esi+0x67],0x5455223d
1101d903:	inc    esi
1101d904:	sub    eax,0x73202238
1101d909:	je     0x1101d96c
1101d90b:	outs   dx,BYTE PTR ds:[esi]
1101d90c:	fs popa 
1101d90e:	ins    BYTE PTR es:[edi],dx
1101d90f:	outs   dx,DWORD PTR ds:[esi]
1101d910:	outs   dx,BYTE PTR ds:[esi]
1101d911:	gs cmp eax,0x73657922
1101d917:	and    bh,BYTE PTR [edi]
1101d919:	ds or  eax,0x73613c0a
1101d91f:	jae    0x1101d986
1101d921:	ins    DWORD PTR es:[edi],dx
1101d922:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
1101d926:	js     0x1101d995
1101d928:	ins    BYTE PTR es:[edi],dx
1101d929:	outs   dx,BYTE PTR ds:[esi]
1101d92a:	jae    0x1101d969
1101d92c:	and    dh,BYTE PTR [ebp+0x72]
1101d92f:	outs   dx,BYTE PTR ds:[esi]
1101d930:	cmp    dh,BYTE PTR [ebx+0x63]
1101d933:	push   0x73616d65
1101d938:	sub    eax,0x7263696d
1101d93d:	outs   dx,DWORD PTR ds:[esi]
1101d93e:	jae    0x1101d9af
1101d940:	data16 je 0x1101d970
1101d943:	arpl   WORD PTR [edi+0x6d],bp
1101d946:	cmp    ah,BYTE PTR [ecx+0x73]
1101d949:	ins    DWORD PTR es:[edi],dx
1101d94a:	cs jbe 0x1101d97e
1101d94d:	and    ah,BYTE PTR [eax]
1101d94f:	ins    DWORD PTR es:[edi],dx
1101d950:	popa   
1101d951:	outs   dx,BYTE PTR ds:[esi]
1101d952:	imul   esp,DWORD PTR [esi+0x65],0x65567473
1101d959:	jb     0x1101d9ce
1101d95b:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
1101d962:	xor    BYTE PTR [edx],ah
1101d964:	ds or  eax,0x3c20200a
1101d96a:	popa   
1101d96b:	jae    0x1101d9e0
1101d96d:	gs ins DWORD PTR es:[edi],dx
1101d96f:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
1101d973:	fs outs dx,BYTE PTR gs:[esi]
1101d976:	je     0x1101d9e1
1101d978:	je     0x1101d9f3
1101d97a:	and    BYTE PTR [esi+0x65],dh
1101d97d:	jb     0x1101d9f2
1101d97f:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
1101d986:	xor    BYTE PTR [esi],ch
1101d988:	xor    BYTE PTR [esi],ch
1101d98a:	xor    BYTE PTR [edx],ah
1101d98c:	and    BYTE PTR [esi+0x61],ch
1101d98f:	ins    DWORD PTR es:[edi],dx
1101d990:	gs cmp eax,0x41794d22
1101d996:	jo     0x1101da08
1101d998:	ins    BYTE PTR es:[edi],dx
1101d999:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
1101d9a0:	cs popa 
1101d9a2:	jo     0x1101da14
1101d9a4:	and    ch,BYTE PTR [edi]
1101d9a6:	ds or  eax,0x3c20200a
1101d9ac:	je     0x1101da20
1101d9ae:	jne    0x1101da23
1101d9b0:	je     0x1101d9fb
1101d9b2:	outs   dx,BYTE PTR ds:[esi]
1101d9b3:	outs   dx,WORD PTR ds:[esi]
1101d9b5:	and    BYTE PTR [eax+0x6d],bh
1101d9b8:	ins    BYTE PTR es:[edi],dx
1101d9b9:	outs   dx,BYTE PTR ds:[esi]
1101d9ba:	jae    0x1101d9f9
1101d9bc:	and    dh,BYTE PTR [ebp+0x72]
1101d9bf:	outs   dx,BYTE PTR ds:[esi]
1101d9c0:	cmp    dh,BYTE PTR [ebx+0x63]
1101d9c3:	push   0x73616d65
1101d9c8:	sub    eax,0x7263696d
1101d9cd:	outs   dx,DWORD PTR ds:[esi]
1101d9ce:	jae    0x1101da3f
1101d9d0:	data16 je 0x1101da00
1101d9d3:	arpl   WORD PTR [edi+0x6d],bp
1101d9d6:	cmp    ah,BYTE PTR [ecx+0x73]
1101d9d9:	ins    DWORD PTR es:[edi],dx
1101d9da:	cs jbe 0x1101da0f
1101d9dd:	and    bh,BYTE PTR [esi]
1101d9df:	or     eax,0x2020200a
1101d9e4:	and    BYTE PTR [ebx+esi*2],bh
1101d9e7:	arpl   WORD PTR gs:[ebp+0x72],si
1101d9eb:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x20200a0d
1101d9f3:	and    BYTE PTR [eax],ah
1101d9f5:	and    BYTE PTR [eax],ah
1101d9f7:	cmp    al,0x72
1101d9f9:	gs jno 0x1101da71
1101d9fc:	gs jae 0x1101da73
1101d9ff:	gs fs push eax
1101da02:	jb     0x1101da6d
1101da04:	jbe    0x1101da6f
1101da06:	ins    BYTE PTR es:[edi],dx
1101da07:	gs addr16 gs jae 0x1101da2c
1101da0c:	js     0x1101da7b
1101da0e:	ins    BYTE PTR es:[edi],dx
1101da0f:	outs   dx,BYTE PTR ds:[esi]
1101da10:	jae    0x1101da4f
1101da12:	and    dh,BYTE PTR [ebp+0x72]
1101da15:	outs   dx,BYTE PTR ds:[esi]
1101da16:	cmp    dh,BYTE PTR [ebx+0x63]
1101da19:	push   0x73616d65
1101da1e:	sub    eax,0x7263696d
1101da23:	outs   dx,DWORD PTR ds:[esi]
1101da24:	jae    0x1101da95
1101da26:	data16 je 0x1101da56
1101da29:	arpl   WORD PTR [edi+0x6d],bp
1101da2c:	cmp    ah,BYTE PTR [ecx+0x73]
1101da2f:	ins    DWORD PTR es:[edi],dx
1101da30:	cs jbe 0x1101da66
1101da33:	and    bh,BYTE PTR [esi]
1101da35:	or     eax,0x2020200a
1101da3a:	and    BYTE PTR [eax],ah
1101da3c:	and    BYTE PTR [eax],ah
1101da3e:	and    BYTE PTR [edx+esi*2],bh
1101da41:	gs jno 0x1101dab9
1101da44:	gs jae 0x1101dabb
1101da47:	gs fs inc ebp
1101da4a:	js     0x1101dab1
1101da4c:	arpl   WORD PTR [ebp+0x74],si
1101da4f:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
1101da56:	ins    BYTE PTR es:[edi],dx
1101da57:	and    BYTE PTR [ebp+eiz*2+0x76],ch
1101da5b:	gs ins BYTE PTR es:[edi],dx
1101da5d:	cmp    eax,0x49736122
1101da62:	outs   dx,BYTE PTR ds:[esi]
1101da63:	jbe    0x1101dad4
1101da65:	imul   esp,DWORD PTR [ebp+0x72],0x22
1101da69:	and    BYTE PTR [ebp+0x69],dh
1101da6c:	inc    ecx
1101da6d:	arpl   WORD PTR [ebx+0x65],sp
1101da70:	jae    0x1101dae5
1101da72:	cmp    eax,0x6c616622
1101da77:	jae    0x1101dade
1101da79:	and    ch,BYTE PTR [edi]
1101da7b:	ds or  eax,0x2020200a
1101da81:	and    BYTE PTR [eax],ah
1101da83:	and    BYTE PTR [edi+ebp*1],bh
1101da86:	jb     0x1101daed
1101da88:	jno    0x1101daff
1101da8a:	gs jae 0x1101db01
1101da8d:	gs fs push eax
1101da90:	jb     0x1101dafb
1101da92:	jbe    0x1101dafd
1101da94:	ins    BYTE PTR es:[edi],dx
1101da95:	gs addr16 gs jae 0x1101dad8
1101da9a:	or     eax,0x2020200a
1101da9f:	and    BYTE PTR [edi+ebp*1],bh
1101daa2:	jae    0x1101db09
1101daa4:	arpl   WORD PTR [ebp+0x72],si
1101daa7:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x20200a0d
1101daaf:	cmp    al,0x2f
1101dab1:	je     0x1101db25
1101dab3:	jne    0x1101db28
1101dab5:	je     0x1101db00
1101dab7:	outs   dx,BYTE PTR ds:[esi]
1101dab8:	outs   dx,WORD PTR ds:[esi]
1101daba:	ds or  eax,0x612f3c0a
1101dac0:	jae    0x1101db35
1101dac2:	gs ins DWORD PTR es:[edi],dx
1101dac4:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
1101dac8:	or     eax,0xa
1101dacd:	add    BYTE PTR [eax],al
	...

Disassembly of section .reloc:

1101e000 <.reloc>:
1101e000:	add    BYTE PTR [eax],dh
1101e002:	add    BYTE PTR [eax],al
1101e004:	or     al,0x0
1101e006:	add    BYTE PTR [eax],al
1101e008:	loopne 0x1101e040
	...
